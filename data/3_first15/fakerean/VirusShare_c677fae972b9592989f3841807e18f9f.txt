cmp
decl
mov
mov
lea
push
mov
mov
call
push
push
pushl
pushl
pushl
pushl
call
test
js
cmp
mov
jne
inc
add
cmp
je
push
lea
mov
call
push
push
push
lea
push
lea
push
call
add
cmp
je
inc
add
decl
clc
decl
call
movsb
jne
add
mov
inc
clc
call
cmp
jne
inc
add
mov
push
pop
lea
call
test
jne
cmp
jne
cmp
jne
pushl
pushl
call
pushl
pushl
call
pushl
pushl
call
pushl
pushl
call
pushl
pushl
call
pushl
pushl
call
pushl
pushl
call
pushl
pushl
call
add
pushl
pushl
call
pushl
add
call
pushl
pushl
call
pushl
pushl
call
add
mov
pop
pop
xor
pop
call
add
leave
ret
lea
push
lea
jmp
mov
add
call
mov
jmp
lea
push
lea
jmp
lea
call
lea
push
lea
push
call
pop
pop
lea
push
mov
call
push
push
push
lea
push
push
call
add
lea
call
jmp
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
jmp
cmp
je
jmp
cmp
je
xor
ret
pushl
mov
call
pop
test
jne
inc
jmp
push
mov
push
push
push
mov
push
push
pushl
xor
mov
lea
mov
call
inc
add
cmp
jne
mov
lea
call
pop
pop
mov
pop
leave
ret
push
mov
and
sub
push
mov
push
lea
call
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
lea
push
push
push
mov
movl
movb
mov
call
lea
mov
call
mov
pop
pop
mov
pop
ret
push
cmpl
jne
mov
test
jne
pop
ret
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
push
mov
call
movl
xor
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
add
loopne
mov
add
add
movsb
mov
add
add
movsl
mov
add
add
and
add
cmp
and
add
jl
mov
add
add
xor
add
movsb
movsl
mov
add
add
movsl
mov
add
add
movsl
mov
add
add
movsl
mov
add
add
cmpsb
mov
add
add
mov
add
add
adc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
and
mov
or
mov
mov
mov
mov
mov
mov
mov
mov
orb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
mov
mov
call
add
call
mov
mov
mov
mov
movl
mov
mov
push
mov
mov
call
add
lea
xor
mov
mov
call
lea
push
lea
call
mov
cmp
je
cmpl
jge
cmp
je
push
call
test
je
mov
orl
pop
pop
mov
pop
pop
add
ret
push
call
add
cmp
mov
jne
jmp
push
call
add
mov
jmp
mov
mov
push
inc
push
push
call
test
je
push
push
push
push
xor
call
mov
add
lea
cmp
je
mov
push
test
je
mov
mov
add
add
cmp
jne
pop
mov
add
ret
push
mov
push
andl
push
lea
push
push
pushl
pushl
call
add
test
je
leave
ret
push
mov
orl
push
mov
test
jne
mov
add
lea
call
cmp
jne
pop
xor
pop
ret
mov
call
test
je
mov
mov
call
test
je
jmp
push
mov
and
sub
mov
xor
mov
mov
push
mov
mov
mov
test
push
mov
push
jne
mov
xor
cmp
add
add
add
test
insl
inc
add
dec
and
mov
call
mov
lea
push
push
call
test
jne
mov
xor
push
lea
mov
call
mov
lea
push
push
call
push
lea
mov
call
mov
lea
call
xor
cmp
je
cmp
je
mov
cmp
mov
mov
je
push
lea
call
mov
lea
push
pushl
push
call
mov
test
jne
mov
test
je
mov
mov
add
call
pushl
andl
mov
lea
call
mov
test
je
mov
lea
push
push
call
test
jne
cmpl
je
cmpl
je
andl
lea
mov
mov
mov
test
movl
movl
movb
je
mov
lea
push
push
call
push
push
pop
lea
call
test
je
mov
mov
push
pushl
call
mov
lea
push
lea
push
pushl
call
testb
mov
je
mov
add
push
call
test
pop
je
lea
call
lea
call
lea
call
lea
call
lea
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
push
movl
push
xor
mov
mov
mov
lea
mov
inc
testb
pop
incb
loope
add
addb
mov
sbb
inc
add
xchg
das
iret
adc
add
mov
mov
mov
and
mov
or
mov
mov
add
xor
inc
mov
mov
movl
mov
mov
mov
mov
add
lea
mov
call
mov
cmp
pop
je
mov
push
lea
push
push
call
pop
lea
call
mov
leave
ret
mov
add
incl
mov
ret
push
mov
push
push
push
push
xor
cmp
jne
cmp
jne
cmp
jne
mov
lea
call
lea
call
lea
call
mov
test
je
mov
mov
call
cmp
je
mov
cmp
je
lea
mov
lea
push
add
call
test
je
mov
push
call
test
pop
je
movl
andl
lea
mov
mov
call
cmpl
je
push
call
test
pop
je
push
mov
call
test
mov
je
mov
push
call
mov
push
movl
call
test
pop
je
mov
call
test
mov
je
incl
mov
push
call
test
js
mov
lea
call
pushl
lea
mov
call
cmpl
je
push
call
test
pop
je
mov
call
mov
test
je
mov
push
call
mov
test
mov
jne
cmpl
je
lea
call
add
sbb
and
add
pop
pop
pop
leave
ret
xor
jmp
mov
call
test
je
mov
push
mov
call
ret
xor
ret
mov
call
mov
ret
mov
mov
and
xor
or
jne
test
jne
ret
mov
jmp
push
lea
sub
mov
xor
mov
xor
inc
add
push
mov
push
mov
je
test
je
mov
mov
call
pushl
andl
mov
lea
call
mov
test
je
andl
andw
lea
lea
push
mov
movl
movl
mov
mov
push
call
pushl
mov
push
call
neg
sbb
inc
testb
pop
pop
mov
je
mov
add
push
call
test
pop
je
lea
call
xor
mov
xchg
loop
add
ret
sahf
xor
add
leave
ret
push
mov
test
je
cmpb
jne
xor
mov
xor
pop
ret
push
mov
sub
push
mov
mov
push
push
lea
push
mov
call
mov
test
mov
je
lea
xor
mov
mov
push
mov
call
cmp
jne
cmp
jne
mov
push
call
xor
pop
pop
pop
leave
ret
push
pushl
mov
mov
mov
call
mov
push
push
pushl
push
call
pop
ret
push
mov
mov
sub
jne
mov
mov
mov
mov
mov
test
je
mov
push
call
xor
pop
ret
push
lea
sub
mov
xor
mov
cmpl
mov
ja
incl
push
push
push
lea
mov
call
mov
test
pop
mov
je
andl
push
pop
lea
lea
push
mov
movl
mov
mov
movb
mov
push
call
mov
test
jne
andl
lea
mov
mov
mov
lea
push
movl
mov
movb
mov
push
call
test
jne
andl
andl
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
pushl
movl
movl
movl
call
testb
jne
testb
jne
testb
jne
testb
jne
testb
jne
testb
jne
xor
lea
call
decl
mov
pop
pop
mov
xor
call
add
leave
ret
mov
pushl
mov
push
call
test
je
jmp
push
mov
and
sub
push
mov
push
push
pushl
mov
pushl
mov
call
cmp
pop
pop
ja
jmp
flds
mov
fstps
mov
flds
fstps
call
movl
flds
fmull
flds
fmull
faddp
fstps
xor
inc
pop
pop
pop
mov
pop
ret
fildl
fmull
fildl
fmull
faddp
fstps
flds
fadd
faddl
fistpl
mov
mov
mov
sar
call
movl
mov
jmp
mov
sub
adc
sub
adc
sub
adc
sub
adc
and
ds
push
add
xor
ds
push
add
push
es
daa
adc
sub
adc
sub
adc
adc
sub
adc
sub
adc
mov
cmp
jae
call
mov
ret
xor
jmp
push
mov
push
andl
push
push
pushl
mov
mov
call
test
je
mov
mov
lea
mov
call
cmpl
jne
mov
mov
call
test
jne
mov
push
mov
call
test
jne
mov
cmp
jne
mov
mov
movl
call
andl
incl
jmp
mov
push
mov
call
mov
mov
mov
call
test
je
pop
xor
pop
leave
ret
mov
lea
push
mov
or
lock
dec
pop
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
mov
cmp
je
pushl
pushl
push
pushl
call
pop
ret
push
mov
lea
call
lea
call
testb
movl
je
push
call
pop
mov
pop
ret
push
mov
lea
movl
movl
call
lea
call
lea
call
testb
je
push
call
pop
mov
pop
ret
push
mov
push
push
push
push
mov
mov
test
je
test
je
sar
mov
mov
push
push
push
push
push
call
lea
push
push
add
push
movl
mov
call
add
pop
xor
pop
leave
ret
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
push
mov
lea
push
push
lea
push
xor
lea
push
push
push
mov
mov
mov
mov
mov
movl
mov
mov
out
inc
add
cltd
std
incl
je
push
lea
mov
call
mov
mov
lea
push
push
call
test
js
push
lea
lea
call
push
push
push
push
lea
call
mov
mov
add
test
jne
lea
call
lea
call
lea
call
mov
test
je
mov
push
call
mov
test
je
mov
push
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
mov
push
xor
cmp
push
push
ja
lea
call
cmpl
je
mov
lea
call
test
je
mov
test
mov
mov
movl
je
test
jne
test
mov
mov
je
cmp
je
xor
mov
mov
mov
jmp
lea
nop
movzwl
cmp
je
cmp
je
cmp
je
cmp
jae
cmp
jae
cmp
je
xor
xor
test
je
cmpb
jne
cmpb
jne
xor
mov
mov
mov
mov
test
movb
mov
jne
cmp
jne
cmp
jbe
cmp
jbe
cmp
jb
cmp
ja
cmp
jae
cmp
jae
cmp
jae
cmp
jae
cmp
jae
cmp
jae
add
cmp
jb
sub
mov
mov
mov
mov
call
test
je
mov
mov
lea
push
lea
push
push
call
mov
mov
add
lea
push
add
push
mov
mov
mov
mov
call
lea
cmpl
jne
mov
mov
mov
mov
mov
lea
push
sub
push
push
mov
call
testb
jne
mov
mov
push
push
push
lea
push
call
mov
cmp
jne
mov
push
push
push
lea
push
mov
call
mov
cmp
je
lea
call
test
je
xor
pop
pop
pop
pop
add
ret
testb
mov
jne
mov
jmp
cmp
jbe
test
je
cmpl
jne
testb
jne
add
cmp
jae
movl
jmp
test
jne
mov
jmp
cmp
jb
jmp
cmp
je
movl
jmp
testb
jne
mov
mov
movzbl
mov
lea
push
mov
sub
mov
mov
mov
mov
push
lea
push
call
movzbl
mov
mov
mov
jmp
cmp
jb
jmp
cmp
ja
jmp
cmp
ja
jmp
cmp
jae
mov
mov
call
test
je
test
jbe
mov
mov
lea
mov
push
lea
push
movl
mov
mov
call
cmp
je
push
call
test
jns
pop
pop
pop
pop
add
ret
push
mov
call
cmpb
je
add
add
cmp
jb
jmp
movzwl
push
call
add
test
je
movb
jmp
cmpl
jne
mov
ret
xor
ret
push
mov
sub
mov
xor
mov
mov
mov
test
push
push
mov
je
andl
lea
lea
push
mov
movl
movl
mov
in
std
inc
add
or
add
nop
jmp
je
andl
lea
push
push
call
testb
pop
pop
je
mov
add
push
call
test
pop
je
mov
pop
xor
xor
pop
call
leave
ret
testb
je
jmp
push
mov
mov
mov
push
inc
push
push
call
test
je
mov
mov
lea
test
je
andl
mov
incl
pop
ret
xor
pop
ret
push
mov
push
mov
mov
test
jne
cmpl
je
test
je
mov
test
je
push
call
pop
xor
pop
ret
testb
je
push
call
pop
test
je
movl
andl
mov
test
mov
je
mov
push
call
jmp
mov
test
je
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
push
cmpl
je
mov
test
push
je
push
push
push
mov
mov
mov
mov
mov
test
je
mov
test
jne
mov
test
je
mov
test
incl
fwait
add
add
mov
test
add
test
je
mov
mov
cmp
jae
cmp
jb
cmp
je
mov
test
jne
cmp
pop
pop
pop
je
cmp
je
cmp
je
test
je
mov
mov
mov
mov
test
jne
mov
and
xor
or
pop
jne
xor
pop
ret
mov
jmp
test
je
cmp
je
cmp
jne
mov
jmp
mov
test
je
mov
test
jne
mov
call
test
je
mov
jmp
mov
jmp
mov
jmp
mov
test
je
mov
push
call
ret
push
mov
lea
call
lea
call
testb
movl
je
push
call
pop
mov
pop
ret
push
mov
lea
movl
call
testb
je
push
call
pop
mov
pop
ret
cmpl
push
mov
je
pushl
call
pop
mov
cmp
jne
mov
push
pushl
push
call
add
test
jne
inc
pop
ret
xor
jmp
push
mov
push
push
push
mov
push
push
xor
push
mov
lea
mov
mov
call
mov
cmp
je
cmp
jne
mov
cmpb
jne
cmpb
jne
mov
mov
call
mov
push
add
call
mov
and
push
mov
lea
call
mov
pushl
mov
call
mov
push
mov
call
cmp
pushl
je
mov
mov
call
mov
call
lea
call
lea
call
pop
pop
pop
leave
ret
push
mov
sub
push
push
mov
movl
mov
add
mov
cmp
jne
mov
movb
add
decl
jne
pop
pop
leave
ret
cmp
je
test
je
cmp
je
mov
call
mov
test
mov
mov
jne
andl
mov
mov
mov
lea
push
lea
push
push
mov
call
mov
mov
mov
flds
add
mov
fstps
mov
movb
jmp
push
mov
sub
push
push
xor
push
inc
mov
push
call
test
je
cmpl
jne
flds
push
fdivl
push
fstps
flds
fstpl
fldl
fstpl
call
fstps
flds
pop
fsubrl
pop
push
mov
mov
fstps
call
test
je
push
call
test
je
add
add
test
cmp
flds
fstps
fldz
fcoms
fnstsw
test
je
fstp
fld1
fcoms
fnstsw
test
jnp
fstp
push
mov
mov
call
test
je
push
call
test
je
cmpl
jne
flds
fstps
fldz
fcoms
fnstsw
test
je
fstp
fld1
fcoms
fnstsw
test
jnp
fstp
movsbw
mov
mov
push
call
test
je
flds
sub
fstps
flds
fstps
flds
fstps
call
inc
add
mov
add
mov
pop
pop
pop
leave
ret
push
mov
push
cmpb
je
push
push
lea
push
call
push
mov
xor
pop
mov
mov
test
je
mov
cmp
jl
mov
cmpl
jbe
push
xor
pop
push
add
call
test
mov
je
pushl
mov
pushl
push
call
lea
call
mov
inc
add
cmp
jb
pop
pop
leave
ret
pushl
mov
pushl
mov
push
call
inc
add
jmp
push
push
mov
mov
mov
push
call
test
je
xor
test
push
mov
mov
jne
mov
push
mov
call
test
je
mov
and
xor
or
jne
mov
and
xor
or
pop
jne
pop
pop
ret
mov
test
je
mov
cmp
add
test
je
xor
inc
jmp
mov
test
je
mov
push
call
test
je
jmp
mov
call
test
jne
mov
mov
mov
add
push
push
mov
call
jmp
test
je
mov
mov
mov
mov
and
xor
or
jne
jmp
cmpb
je
mov
mov
test
jne
push
lea
call
mov
test
mov
je
lea
push
call
test
pop
jne
push
call
add
frstor
add
rorl
bnd
call
jmp
push
mov
push
push
push
mov
push
mov
sub
push
pop
mov
jne
lea
push
call
cmp
jle
mov
cmp
jbe
mov
jmp
mov
lea
push
mov
push
push
push
call
mov
lea
push
pushl
push
call
test
js
mov
mov
sub
add
add
test
jne
mov
mov
xor
pop
pop
pop
leave
ret
mov
mov
mov
jmp
push
lea
sub
mov
xor
mov
mov
mov
mov
pop
jo
jnp
add
jl
push
mov
je
cmpb
jne
xor
cmp
je
push
mov
lea
mov
push
mov
push
mov
call
test
je
mov
mov
movw
mov
call
push
pushl
xor
pushl
push
call
mov
push
push
mov
push
mov
call
test
je
mov
mov
movw
lea
push
lea
mov
mov
mov
movl
movl
mov
mov
call
mov
daa
roll
inc
rclb
inc
int3
push
pushl
push
call
mov
test
jne
push
lea
mov
call
lea
push
pushl
mov
push
call
test
jne
cmp
movl
je
mov
call
cmp
je
mov
mov
mov
call
movb
mov
mov
lea
push
push
push
push
push
call
test
js
cmpl
ja
push
push
push
mov
call
add
mov
mov
movb
call
lea
call
testb
jne
testb
jne
mov
lea
call
mov
mov
pop
pop
xor
pop
call
add
movsb
cmc
inc
add
jmp
mov
add
call
jmp
mov
and
or
jne
ret
mov
push
push
mov
test
push
ja
xor
pop
pop
pop
ret
xor
lea
mov
mov
call
test
jne
inc
add
cmp
jae
jmp
mov
cmp
jne
push
call
test
pop
jg
push
call
test
pop
jg
xor
ret
xor
inc
ret
push
mov
and
sub
push
push
push
mov
mov
test
je
cmpb
jne
mov
mov
push
lea
call
mov
pushl
movb
mov
push
call
lea
call
lea
mov
xor
cmp
jne
mov
push
pushl
lea
push
call
cmp
jg
mov
mov
test
jg
mov
push
call
mov
mov
lea
lea
cmp
jne
push
push
push
lea
push
mov
call
mov
cmp
je
testl
je
lea
cmp
jne
lea
call
pop
pop
xor
pop
mov
pop
ret
mov
call
add
jmp
mov
mov
mov
call
mov
lea
push
lea
call
incl
mov
cmp
jl
jmp
push
pop
mov
mov
mov
test
je
pushl
mov
push
call
add
dec
jne
jmp
mov
mov
jmp
int3
int3
int3
push
mov
test
je
mov
test
mov
push
mov
jne
test
jne
cmp
jne
mov
xor
xor
cmp
sete
test
jne
add
add
jmp
mov
mov
and
mov
or
pop
mov
mov
pop
ret
push
call
test
je
movl
orl
pop
ret
push
lea
call
pop
jmp
int3
int3
int3
int3
mov
push
push
mov
mov
mov
push
push
xor
test
movl
jle
lea
mov
sub
cltd
sub
mov
mov
sar
add
lea
mov
mov
lea
push
push
mov
push
push
call
add
test
js
mov
test
jl
jle
lea
mov
sub
test
jg
mov
mov
xor
pop
pop
pop
pop
ret
mov
jmp
mov
pop
mov
pop
pop
xor
pop
ret
push
mov
push
push
xor
cmp
je
cmp
je
mov
orl
mov
orl
push
mov
add
mov
cmp
je
add
cmp
jne
mov
cmp
movl
je
mov
push
lea
push
push
pushl
push
push
call
mov
test
jne
push
mov
test
je
mov
mov
lea
push
push
pushl
pushl
push
call
test
jne
mov
mov
cmp
je
cmpl
jne
mov
mov
imul
mov
cmp
jne
mov
cmp
je
cmp
jl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
mov
cmp
jne
jmp
mov
mov
imul
mov
cmp
jne
mov
cmp
jne
jmp
push
mov
and
sub
push
push
push
xor
mov
lea
mov
mov
mov
mov
mov
call
mov
call
test
je
mov
push
lea
mov
mov
call
mov
lea
push
call
test
pop
js
pushl
mov
call
mov
add
pop
lea
call
pop
mov
pop
pop
mov
pop
ret
mov
push
push
call
pop
pop
jmp
push
mov
push
mov
test
je
mov
lea
push
push
push
call
test
js
cmpl
je
xor
inc
leave
ret
xor
leave
ret
push
mov
movl
mov
test
je
mov
push
pushl
push
call
push
push
push
push
lea
mov
mov
push
push
call
mov
cmp
jne
mov
test
mov
pop
pop
je
add
push
call
test
pop
je
pop
ret
push
call
pop
pop
ret
push
mov
mov
sub
test
jne
leave
ret
cmpl
je
mov
push
mov
push
mov
call
mov
mov
lea
mov
movzwl
push
push
push
push
call
mov
lea
push
push
call
mov
mov
mov
add
push
lea
push
push
call
mov
mov
lea
push
push
call
mov
mov
push
call
mov
sub
mov
mov
pop
leave
ret
mov
push
pushl
call
mov
cmp
je
mov
pop
ret
push
mov
xor
cmp
je
push
mov
cmp
je
push
mov
lea
push
movb
call
test
je
andl
push
call
shr
not
and
mov
xor
pop
pop
pop
ret
push
mov
push
cmpl
push
je
mov
mov
lea
push
pushl
push
call
test
js
cmpl
jne
add
cmpl
jne
xor
pop
leave
ret
push
push
push
push
push
mov
lea
movl
mov
test
mov
jne
test
jne
lea
mov
mov
lea
fiaddl
add
call
xor
push
push
push
push
mov
call
mov
mov
cmp
je
testl
je
add
cmp
jne
lea
mov
pushl
mov
push
call
add
cmp
jne
push
xor
push
lea
mov
push
call
mov
cmp
je
testl
je
add
cmp
jne
lea
cmp
jne
lea
cmp
jne
add
cmp
jne
pop
pop
pop
pop
pop
ret
push
call
pop
jmp
push
call
pop
jmp
push
call
pop
jmp
mov
push
push
mov
movl
movl
mov
push
call
mov
test
mov
jne
test
jne
mov
test
mov
popf
cmc
inc
add
add
pop
cmp
push
lea
call
mov
mov
xor
cmp
jne
mov
cmp
jne
mov
test
mov
pop
jne
test
jne
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
test
pop
jne
push
call
pop
lea
call
lea
pop
pop
jmp
push
mov
and
push
push
push
push
mov
xor
cmp
jne
cmp
je
pushl
mov
lea
mov
call
mov
cmp
je
mov
mov
cmp
je
mov
and
jne
jmp
mov
push
pushl
push
pushl
call
add
cmp
jg
mov
mov
lea
call
mov
pop
pop
mov
pop
ret
push
mov
push
push
push
push
mov
mov
xor
call
push
lea
call
mov
test
jne
pop
pop
leave
ret
push
mov
and
sub
mov
xor
mov
mov
mov
push
mov
push
push
xor
push
push
push
push
push
push
push
push
lea
mov
mov
call
cmp
je
push
lea
push
push
pushl
mov
pushl
call
add
cmp
je
mov
push
push
call
lea
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
push
push
push
mov
xor
cmp
je
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
push
push
add
push
push
call
lea
mov
call
mov
pop
pop
leave
ret
jmp
push
mov
push
push
mov
push
xor
cmp
jne
mov
cmp
je
push
pushl
mov
call
pop
lea
push
pushl
pushl
pushl
pushl
pushl
call
test
js
pushl
call
cmp
mov
jne
cmp
je
cmp
je
push
push
mov
call
cmp
pop
je
mov
mov
movl
mov
cmp
mov
je
mov
push
call
cmp
je
mov
mov
mov
push
pushl
push
call
mov
test
pop
jne
lea
call
lea
call
mov
pop
pop
leave
ret
xor
jmp
mov
jmp
push
mov
sub
mov
xor
mov
andl
push
mov
push
mov
push
mov
lea
push
mov
movl
movl
mov
das
inc
add
mov
xor
pop
push
push
lea
call
cmpl
jne
lea
push
lea
mov
call
mov
neg
sbb
and
jne
testb
jne
testb
jne
xor
mov
pop
pop
xor
pop
call
leave
ret
pushl
mov
pushl
mov
pushl
push
push
call
ret
mov
add
mov
add
mov
push
mov
push
mov
sub
sub
js
sub
sub
mov
mov
sub
pop
sub
pop
js
mov
ret
xor
jmp
push
mov
sub
mov
xor
mov
mov
push
mov
andl
push
xor
mov
cmpl
push
jge
lea
mov
mov
mov
cmp
mov
movl
movl
movb
je
cmp
jne
testb
jne
lea
call
test
jne
pushl
lea
mov
call
lea
mov
call
test
mov
js
cmpl
mov
jne
testw
jne
lea
cmpl
jne
testw
jne
testl
jne
andl
cmpl
jne
push
mov
call
lea
mov
call
testb
jne
testb
jne
mov
mov
pop
pop
xor
pop
call
leave
ret
andl
lea
push
mov
call
mov
test
je
lea
push
mov
mov
call
mov
mov
push
push
call
lea
call
jmp
mov
add
call
jmp
push
mov
sub
mov
xor
mov
push
push
pushl
lea
xor
lea
mov
mov
mov
movl
movl
mov
mov
call
xor
testw
jne
push
lea
mov
call
lea
push
push
call
mov
test
jne
lea
mov
call
test
jne
testl
jne
lea
push
pushl
mov
xor
mov
mov
lea
push
mov
mov
push
call
test
jne
lea
movl
call
testb
jne
testb
jne
xor
mov
pop
xor
pop
call
leave
ret
mov
add
call
jmp
push
mov
sub
push
push
push
pushl
mov
xor
mov
lea
mov
call
cmp
je
mov
cmp
je
cmp
jne
push
call
cmp
pop
je
pushl
mov
pushl
mov
mov
pushl
mov
call
push
call
pop
lea
call
pop
pop
pop
leave
ret
xor
jmp
push
push
mov
mov
mov
test
je
mov
mov
call
test
je
mov
mov
test
je
cmpl
jne
push
call
test
pop
je
mov
movl
andl
mov
test
mov
je
mov
mov
mov
mov
push
call
xor
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
call
xor
add
cmp
je
mov
mov
movl
mov
lea
mov
mov
mov
mov
and
mov
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
pop
ret
xor
pop
ret
push
mov
push
push
push
xor
push
lea
mov
mov
call
mov
lea
push
push
call
cmp
jne
push
lea
call
mov
lea
push
push
call
cmp
je
pushl
mov
call
pop
mov
lea
call
pop
mov
pop
leave
ret
push
mov
and
sub
push
push
mov
mov
xor
cmp
push
mov
je
mov
push
call
push
push
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
inc
lea
call
mov
mov
add
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
lea
movsl
movsl
movsl
movsl
testb
je
mov
mov
mov
cmp
je
push
push
push
push
lea
push
pushl
push
call
add
lea
call
lea
call
pop
pop
pop
mov
pop
ret
xor
jmp
push
mov
mov
test
je
mov
push
call
lea
call
testb
movl
je
push
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
lea
mov
or
lock
dec
jne
movl
mov
test
mov
push
mov
push
je
lea
push
call
add
test
jne
push
call
add
mov
test
mov
je
lea
push
call
add
test
jne
push
call
add
push
call
add
pop
xor
pop
pop
ret
push
mov
push
mov
mov
mov
call
test
jne
inc
add
mov
mov
mov
call
test
je
mov
mov
call
test
jne
inc
add
mov
mov
call
test
jne
inc
add
lea
push
push
pushl
call
mov
mov
pop
pop
pop
ret
xor
jmp
push
mov
push
mov
mov
mov
call
test
jne
push
pushl
mov
mov
mov
call
test
je
mov
mov
call
test
jne
mov
mov
call
test
jne
add
lea
push
push
pushl
call
mov
mov
pop
pop
pop
ret
xor
jmp
push
mov
push
mov
push
xor
cmp
push
mov
mov
jne
mov
push
lea
mov
mov
call
mov
lea
push
pushl
pushl
pushl
call
mov
cmp
je
push
push
mov
mov
mov
call
pop
pop
mov
lea
call
pop
mov
pop
pop
pop
ret
movzbl
jmp
push
mov
sub
push
mov
mov
push
mov
mov
mov
push
mov
test
je
mov
push
call
mov
test
mov
jne
andl
push
pushl
lea
push
call
lea
push
call
mov
mov
mov
push
push
call
test
je
mov
call
lea
movl
call
inc
add
rclb
push
call
mov
mov
mov
lea
push
push
call
mov
mov
call
pushl
mov
pushl
call
mov
mov
mov
push
call
mov
add
lea
mov
mov
call
pop
pop
xor
pop
leave
ret
push
mov
push
push
push
mov
andl
mov
test
je
mov
test
je
cmpb
je
mov
test
mov
je
mov
push
call
mov
test
je
mov
call
test
mov
je
mov
push
call
mov
test
je
push
call
pop
push
lea
call
lea
call
pop
pop
leave
ret
push
mov
mov
sub
push
push
push
mov
push
mov
push
push
call
test
je
cmpl
jne
mov
test
je
andl
andl
mov
lea
push
mov
call
test
jne
cmpl
je
call
cmpl
movl
mov
jne
xor
inc
pop
pop
pop
leave
ret
push
mov
push
push
mov
test
je
push
mov
push
mov
push
jmp
mov
push
push
call
test
pop
pop
jne
push
push
call
test
pop
pop
je
mov
test
je
test
je
push
push
call
test
pop
pop
je
andl
mov
push
mov
lea
call
cmpl
jne
andl
push
mov
lea
call
mov
test
je
pushl
mov
lea
call
lea
call
mov
lea
call
mov
pop
pop
pop
leave
ret
xor
jmp
cmpl
je
push
lea
push
push
push
push
call
add
cmpl
je
push
mov
test
je
push
call
test
pop
je
mov
call
test
mov
je
mov
push
call
mov
lea
call
mov
test
mov
je
cmpl
jge
xor
pop
pop
ret
xor
jmp
push
call
pop
ret
push
mov
sub
call
test
je
push
push
push
xor
push
lea
mov
mov
call
lea
mov
call
pushl
lea
call
mov
cmp
mov
je
mov
lea
push
push
push
lea
push
push
call
lea
call
add
push
pushl
mov
call
lea
call
pop
pop
xor
pop
leave
ret
mov
mov
push
popa
testb
test
je
push
push
mov
mov
call
pop
pop
ret
xor
ret
mov
test
push
push
je
add
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
push
call
mov
mov
xor
pop
pop
ret
add
mov
test
jne
jmp
push
mov
sub
push
push
xor
cmp
je
cmp
je
pushl
pushl
call
cmp
pop
pop
je
lea
mov
call
push
pushl
lea
call
test
je
mov
push
call
pop
push
mov
lea
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
add
mov
call
mov
lea
mov
mov
call
lea
call
lea
call
lea
call
pop
mov
pop
leave
ret
mov
jmp
push
mov
mov
push
mov
dec
js
push
push
lea
mov
mov
mov
push
call
mov
push
call
dec
sub
test
jge
pop
pop
mov
mov
push
push
push
push
call
pop
xor
pop
ret
push
mov
decl
mov
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
push
xor
cmp
jne
call
mov
cmp
je
cmp
jne
mov
call
pop
mov
pop
ret
push
call
pop
cmp
je
mov
mov
mov
mov
mov
jmp
xor
jmp
push
mov
push
push
push
mov
mov
call
test
jne
andl
lea
push
lea
push
push
push
pushl
mov
call
add
mov
xor
mov
test
jne
pushl
mov
pushl
pushl
pushl
push
pushl
pushl
call
add
test
pop
jne
xor
inc
leave
ret
mov
mov
test
je
movzwl
mov
mov
xor
ret
mov
jmp
mov
test
jne
test
push
jne
xor
xor
test
jne
test
jne
test
jne
mov
pop
mov
ret
or
jmp
mov
jmp
push
mov
sub
push
push
mov
mov
call
andl
test
lea
movl
jne
movl
lea
lea
call
mov
or
mov
or
mov
pop
mov
mov
pop
leave
ret
push
lea
sub
mov
xor
mov
jg
inc
add
mov
push
push
je
test
je
add
mov
mov
cmp
je
mov
push
lea
mov
mov
mov
call
lea
lea
mov
push
push
call
test
mov
js
cmp
je
lea
lea
mov
mov
push
mov
mov
movl
movl
mov
movb
mov
push
call
test
js
lea
lea
mov
mov
mov
mov
push
push
mov
movl
movl
movb
call
test
js
mov
mov
push
push
lea
mov
lea
mov
mov
call
cmp
je
cmp
mov
jg
mov
mov
lea
lea
movsl
movsl
movsl
mov
lea
lea
movsl
movsl
movsl
mov
mov
sub
sub
xor
mov
mov
mov
mov
add
push
push
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
cmp
je
jg
lea
lea
movsl
movsl
movsl
lea
lea
movsl
movsl
movsl
cmpl
jne
cmp
jne
testb
mov
je
mov
add
push
call
test
pop
je
testb
je
mov
add
push
call
test
pop
je
xor
lea
call
mov
mov
mov
inc
add
sbb
add
or
testb
je
jmp
xor
jmp
testb
je
jmp
push
mov
push
mov
test
mov
jne
mov
mov
test
je
mov
push
lea
push
push
push
call
test
pop
js
mov
test
jg
neg
sbb
and
add
mov
fildl
pop
fdivrl
fstps
fldz
fcomps
fnstsw
flds
test
jp
faddl
pop
jmp
or
jmp
push
mov
sub
mov
add
mov
andl
mov
mov
lea
mov
mov
push
mov
mov
cmp
jae
incl
mov
mov
mov
cmpb
jne
mov
test
je
cmpb
jne
mov
mov
push
call
pushl
mov
mov
push
push
call
lea
call
mov
jmp
mov
mov
xor
pop
leave
ret
push
mov
lea
movl
call
lea
call
lea
call
lea
call
lea
pop
jmp
push
mov
sub
mov
mov
mov
orl
orl
andl
lea
mov
mov
mov
lea
mov
mov
push
mov
mov
cmp
jae
incl
mov
mov
mov
cmpb
jne
mov
test
je
cmpb
jne
mov
mov
push
call
pushl
mov
mov
push
push
call
lea
call
mov
jmp
mov
mov
xor
pop
leave
ret
push
mov
and
sub
push
push
push
xor
cmp
je
cmpl
ja
mov
testb
jne
testb
jne
push
call
cmp
pop
je
xor
call
mov
cmp
mov
je
mov
push
call
mov
push
mov
push
push
push
mov
call
mov
pushl
mov
mov
call
lea
orb
mov
and
mov
cmp
jne
testb
je
call
cmp
jne
cmp
je
mov
cmp
jne
xor
mov
mov
call
mov
xor
cmp
je
cmpb
jne
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
lea
call
cmp
jle
cmp
jle
lea
push
mov
push
lea
call
test
js
mov
mov
lea
push
lea
call
mov
orl
orl
movb
mov
orl
orl
mov
mov
xor
pop
pop
pop
mov
pop
ret
push
mov
push
push
push
mov
test
je
mov
add
push
call
test
je
mov
lea
push
mov
call
mov
dec
je
dec
jne
mov
mov
xor
pop
leave
ret
mov
jmp
mov
jmp
push
mov
sub
mov
add
mov
andl
mov
mov
lea
mov
mov
push
mov
mov
cmp
jae
incl
mov
mov
mov
cmpb
jne
mov
test
je
cmpb
jne
mov
mov
push
call
pushl
mov
pushl
mov
push
push
call
lea
call
mov
jmp
mov
mov
xor
pop
leave
ret
mov
mov
jmp
mov
test
push
push
je
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
push
call
mov
mov
xor
pop
pop
ret
add
mov
test
jne
jmp
push
mov
push
xor
cmp
mov
jne
push
push
call
cmp
pop
je
mov
mov
xor
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
cmp
mov
jne
cmp
je
mov
push
call
mov
push
pushl
push
call
mov
mov
push
call
mov
pop
pop
pop
ret
xor
jmp
push
mov
lea
mov
or
lock
dec
je
pop
ret
mov
movl
call
push
call
pop
xor
jmp
mov
test
push
mov
push
je
mov
mov
cmp
je
add
mov
test
jne
mov
andl
mov
mov
call
test
jne
mov
mov
call
test
jne
xor
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
push
call
mov
mov
xor
jmp
push
call
pop
test
je
mov
mov
push
call
xor
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
call
test
pop
je
mov
jmp
push
mov
push
push
andl
andl
mov
push
mov
push
mov
mov
testb
mov
jne
call
test
jne
pop
pop
leave
ret
lea
call
mov
mov
mov
mov
jmp
push
lea
mov
call
test
je
jmp
push
mov
push
push
push
push
push
lea
mov
mov
lea
lea
cmp
mov
je
mov
mov
test
je
mov
push
call
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
mov
jne
mov
mov
test
je
mov
push
call
testb
movl
je
push
call
pop
pop
mov
pop
pop
leave
ret
push
mov
push
push
mov
mov
call
mov
mov
xor
cmp
jbe
push
push
pop
mov
mov
movb
mov
mov
call
mov
inc
add
cmp
jb
pop
mov
xor
call
pop
xor
pop
pop
ret
push
mov
sub
push
mov
mov
lea
push
add
push
mov
call
test
pop
pop
js
cmpl
push
push
lea
mov
je
mov
or
je
call
cmp
jg
jl
cmp
ja
xor
mov
cmp
je
cmp
jne
test
jne
push
call
test
pop
je
lea
push
push
pushl
lea
push
pushl
mov
call
mov
test
mov
je
mov
push
call
mov
mov
andl
andl
push
lea
lea
movl
mov
call
mov
test
je
mov
push
push
push
call
test
jne
lea
call
test
je
mov
push
call
xor
pop
pop
pop
leave
ret
mov
jmp
push
call
test
pop
je
lea
push
push
pushl
add
push
pushl
mov
call
lea
call
xor
push
pushl
call
test
jne
lea
call
mov
jmp
xor
jmp
mov
jmp
push
mov
and
sub
mov
xor
mov
push
push
push
mov
push
push
push
push
pushl
lea
push
call
lea
mov
cmpl
je
testb
jne
mov
xor
cmp
jbe
add
mov
mov
mov
mov
testb
jne
mov
addl
inc
cmp
jb
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
push
mov
mov
mov
push
add
push
push
call
test
je
mov
push
mov
shl
push
lea
mov
lea
cmp
jne
mov
mov
add
mov
pop
lea
pop
leave
ret
push
mov
mov
push
mov
xor
push
and
xor
mov
mov
xor
mov
and
xor
mov
xor
and
xor
mov
mov
xor
and
xor
mov
mov
mov
mov
mov
fldl
fstpl
flds
fstps
mov
test
mov
je
mov
push
call
mov
mov
lea
movl
mov
pushl
add
push
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
sub
mov
xor
mov
push
push
mov
std
loop
add
addr16
add
mov
movl
push
push
movl
mov
movl
call
push
lea
call
fldl
add
cmp
movl
fstpl
mov
mov
mov
jne
mov
cmp
jne
xor
xor
mov
mov
cmp
mov
mov
je
mov
lea
mov
mov
lea
push
push
mov
mov
movl
movl
mov
call
mov
push
call
mov
mov
add
test
jne
test
jne
mov
mov
call
mov
mov
pop
pop
pop
xor
call
add
ret
mov
mov
cmpl
jne
xor
ret
push
mov
sub
push
mov
mov
push
lea
push
mov
xor
call
mov
cmp
mov
je
push
lea
push
push
mov
mov
push
call
mov
mov
and
jne
pushl
lea
call
cmp
jne
mov
test
je
mov
lea
push
push
call
test
jne
xor
cmp
sete
mov
lea
call
pop
shl
lea
xor
lea
and
xor
or
mov
shr
and
call
mov
pop
pop
leave
ret
push
mov
push
andl
mov
andl
lea
push
push
call
test
js
testl
mov
push
push
jne
call
leave
ret
mov
mov
mov
mov
xor
ret
push
mov
sub
push
mov
mov
push
mov
push
lea
lea
xor
testb
push
mov
lea
lea
mov
movl
mov
movl
mov
mov
push
jne
push
pushl
push
call
mov
push
pushl
call
xor
cmp
je
cmp
jne
mov
mov
lea
push
push
mov
call
mov
andl
andl
push
lea
lea
movl
mov
call
cmp
mov
jne
mov
or
mov
mov
push
push
call
movzbl
andl
add
push
mov
and
call
mov
mov
mov
lea
push
push
pushl
push
push
push
call
test
js
cmpl
jne
lea
call
testb
jne
testb
jne
xor
inc
pop
pop
pop
leave
ret
push
mov
lea
mov
or
lock
dec
je
pop
ret
push
push
movl
push
movl
call
mov
mov
lea
cmp
jne
push
call
pop
xor
pop
pop
jmp
push
call
pop
mov
movl
jmp
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
mov
mov
test
push
push
mov
jne
mov
mov
add
cmp
jae
mov
and
jne
add
cmp
jb
and
or
mov
mov
and
cmp
jne
lea
push
call
mov
pop
pop
pop
pop
xor
xor
call
add
ret
mov
mov
mov
test
jne
ret
push
mov
and
sub
push
mov
push
push
xor
push
lea
mov
call
mov
lea
push
push
pushl
push
call
pushl
mov
lea
mov
call
lea
call
cmp
mov
je
push
lea
push
pushl
mov
call
mov
add
cmp
jne
push
push
push
lea
push
mov
mov
call
cmp
jne
mov
cmp
jne
push
push
push
lea
push
mov
mov
call
mov
cmp
je
testl
je
lea
cmp
jne
lea
call
lea
call
pop
pop
pop
mov
pop
ret
push
mov
mov
call
test
jne
push
mov
and
mov
test
push
je
mov
mov
test
je
test
mov
je
mov
push
call
xor
pop
pop
pop
ret
test
je
push
call
pop
test
je
mov
mov
call
mov
test
je
mov
push
call
mov
test
mov
jne
mov
test
jne
jmp
xor
jmp
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
push
push
mov
andl
test
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
mov
test
je
test
je
lea
mov
push
push
push
push
call
lea
call
leave
ret
xor
jmp
push
mov
mov
sub
test
push
mov
push
push
jne
mov
test
jne
push
call
lea
xor
call
lea
mov
test
jne
lea
mov
andl
test
je
mov
push
call
lea
mov
andl
test
jne
lea
cmpl
je
mov
mov
mov
mov
lea
call
mov
call
xor
mov
call
lea
xor
call
lea
mov
test
jne
lea
xor
call
cmpl
je
mov
call
lea
mov
xor
cmp
jne
cmp
jne
pop
pop
pop
leave
ret
mov
push
call
xor
mov
call
jmp
cmp
jbe
lea
push
call
mov
lea
push
push
push
call
pushl
call
pop
jmp
mov
clc
push
push
mov
push
push
mov
mov
testb
jne
push
lea
push
call
test
je
andb
cmpl
mov
je
cmpl
je
or
mov
xor
pop
pop
pop
mov
pop
ret
mov
test
je
push
mov
call
cmp
jle
mov
cmp
je
xor
cmp
je
inc
inc
mov
cmp
jne
orb
jmp
cmpl
mov
je
mov
call
xor
movl
mov
inc
jmp
push
mov
push
mov
lea
cmp
je
cmp
je
mov
mov
call
test
jne
cmp
jne
mov
cmp
jb
ja
mov
cmp
ja
mov
mov
mov
mov
mov
mov
andl
incl
pop
pop
ret
mov
jmp
push
mov
push
mov
test
je
mov
mov
cmp
jne
test
je
mov
and
or
jne
mov
pop
pop
ret
mov
mov
mov
mov
mov
add
cmpl
je
add
push
call
cmpl
je
mov
jmp
xor
jmp
push
mov
sub
push
mov
mov
and
or
push
mov
jne
cmp
je
lea
push
mov
push
lea
call
cmpl
je
pushl
mov
pushl
call
mov
orl
mov
pop
pop
leave
ret
mov
call
call
test
je
jmp
mov
call
test
je
push
lea
mov
cmp
je
cmpl
jne
lea
mov
call
cmp
jne
cmp
pop
je
push
push
xor
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
push
mov
movl
movl
call
add
test
je
mov
push
mov
mov
mov
push
add
push
xor
mov
mov
call
test
jne
mov
lea
cmp
je
mov
lea
call
test
je
lea
mov
mov
mov
cmp
je
mov
push
mov
call
test
je
mov
movl
mov
pop
pop
mov
pop
pop
ret
mov
cmp
je
jmp
push
mov
mov
push
push
push
xor
push
call
cmp
je
cmp
mov
mov
mov
mov
mov
movl
add
inc
and
movl
movl
mov
mov
mov
cmp
je
inc
mov
movl
mov
pop
pop
pop
ret
push
mov
mov
test
movl
je
mov
push
call
andl
mov
test
je
call
testb
movl
add
mov
pop
ret
pushl
mov
pushl
add
mov
push
call
xor
ret
push
mov
sub
andl
push
mov
push
mov
push
push
lea
push
lea
push
push
pushl
call
add
test
je
mov
andl
lea
push
movl
movl
mov
push
call
test
js
mov
mov
lea
call
testb
mov
jne
testb
jne
mov
test
jne
mov
pop
pop
leave
ret
mov
andl
mov
mov
and
je
mov
push
push
push
call
ret
test
mov
je
push
mov
test
je
cmpl
je
push
call
mov
push
push
call
test
js
mov
test
je
pushl
push
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
mov
mov
mov
mov
movl
call
test
je
xor
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
test
mov
lea
mov
mov
mov
mov
mov
mov
mov
je
mov
mov
mov
mov
mov
mov
lea
push
mov
push
lea
push
mov
push
push
mov
push
call
mov
mov
test
jne
test
jne
mov
mov
push
push
call
mov
mov
push
push
call
mov
test
jns
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
pop
pop
pop
mov
xor
call
mov
pop
ret
lea
xor
testb
mov
mov
movl
movl
mov
cmp
inc
add
je
xor
mov
lea
push
mov
push
push
push
lea
push
push
call
test
js
mov
cmp
jne
lea
call
test
je
mov
push
call
test
je
mov
lea
push
push
call
mov
rcl
inc
add
test
icebp
aaa
add
icebp
aaa
add
add
test
icebp
aaa
add
icebp
aaa
add
add
test
icebp
aaa
add
inc
and
push
call
add
mov
pop
pop
pop
xor
xor
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
test
mov
push
mov
push
mov
jne
test
jne
mov
cmp
ja
mov
sub
add
cmp
pop
mov
mov
pop
jae
lea
mov
mov
movw
ret
lea
mov
mov
movw
ret
mov
jmp
mov
mov
test
push
push
push
je
mov
shr
test
mov
je
mov
and
mov
lea
lea
mov
mov
test
jne
mov
test
jne
mov
andl
andl
push
call
mov
sub
lea
push
lea
push
push
call
mov
mov
mov
add
dec
shl
and
or
mov
pop
pop
pop
ret
mov
mov
jmp
xor
jmp
push
mov
sub
push
push
mov
push
mov
pushl
call
mov
pop
xor
cmp
je
cmp
lea
jne
mov
cmp
jne
mov
mov
mov
mov
call
test
je
mov
cmpl
ja
pushl
andl
call
pop
movl
pushl
call
pop
pushl
call
pop
pushl
call
xor
cmp
pop
jne
mov
cmp
je
lea
mov
mov
mov
add
push
call
mov
add
lea
cmp
je
mov
mov
mov
cmp
je
movl
mov
mov
mov
imul
add
add
cmp
mov
jne
mov
push
push
push
add
push
call
mov
add
mov
cmp
jne
mov
mov
test
je
mov
push
call
mov
test
je
mov
call
mov
push
call
pop
mov
xor
add
cmp
mov
jne
push
push
push
xor
push
inc
call
mov
cmp
jne
mov
mov
call
test
je
mov
cmp
je
add
mov
cmp
inc
add
add
add
dec
add
mov
sar
inc
add
add
add
mov
push
call
cmp
pop
je
mov
mov
movl
mov
mov
push
call
cmp
mov
je
mov
push
call
mov
mov
push
pushl
push
call
lea
call
pushl
call
pop
pop
pop
pop
leave
ret
mov
test
je
lea
mov
mov
add
push
call
push
push
call
pushl
jmp
movl
call
jmp
mov
mov
mov
mov
cmp
mov
je
incl
mov
cmp
mov
je
mov
call
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
mov
call
mov
push
push
push
push
push
xor
call
mov
add
mov
cmp
jne
mov
pushl
push
call
mov
call
mov
add
mov
pushl
push
call
mov
mov
pushl
add
mov
push
filds
addb
add
dec
mov
mov
call
mov
lea
push
pushl
call
jmp
push
lea
call
lea
call
lea
call
lea
call
testb
pop
jne
ret
push
mov
push
push
xor
cmp
jne
push
mov
lea
call
mov
pushl
neg
sbb
and
mov
add
call
mov
mov
pop
mov
pop
leave
ret
push
mov
push
mov
lea
push
call
inc
add
mov
lea
call
pop
xor
pop
ret
push
mov
and
mov
mov
sub
test
push
push
push
je
mov
mov
mov
mov
mov
call
cmpl
mov
je
cmpl
je
xor
pop
pop
pop
mov
pop
ret
push
push
mov
push
mov
test
jle
cmp
jg
push
pop
cmp
je
cmp
jg
push
pop
cmp
jne
mov
push
call
test
pop
jne
mov
push
pop
pushl
mov
pushl
call
test
je
xor
mov
inc
pop
pop
pop
ret
push
pop
cmp
jne
jmp
push
pop
cmp
jne
mov
push
call
test
pop
jne
mov
push
jmp
mov
push
call
test
pop
jne
mov
xor
inc
jmp
push
push
pop
mov
call
test
je
mov
jmp
push
mov
sub
test
je
mov
cmp
mov
ja
mov
sub
lea
mov
cmp
mov
lea
jb
lea
mov
andl
mov
lea
push
push
call
mov
leave
ret
cmp
jb
push
jmp
mov
jmp
push
mov
push
push
push
mov
decl
jne
cmpl
jne
cmpl
je
mov
xor
test
je
lea
push
push
mov
mov
push
call
mov
test
mov
je
mov
push
push
pushl
push
call
lea
call
pop
leave
ret
push
mov
movl
movl
mov
test
push
mov
je
mov
test
je
test
je
push
call
pop
andl
andl
lea
movl
call
testb
je
push
call
pop
pop
mov
pop
ret
push
mov
and
sub
push
mov
mov
mov
mov
push
mov
push
mov
mov
mov
mov
mov
call
cmpl
je
mov
push
mov
call
test
mov
pop
je
push
push
push
pushl
mov
pushl
pushl
call
mov
push
call
mov
andl
mov
pop
push
pushl
lea
push
mov
call
lea
push
call
cmpl
je
mov
mov
push
call
mov
movl
mov
test
pop
je
push
push
push
pushl
mov
pushl
pushl
call
mov
xor
mov
mov
testl
jne
pushl
lea
pushl
mov
push
push
push
pushl
pushl
pushl
call
inc
add
mov
add
xor
add
push
or
dec
and
push
mov
mov
mov
mov
push
push
call
mov
mov
call
mov
mov
mov
xor
lea
call
mov
pop
pop
pop
mov
pop
ret
cmpl
jne
test
mov
je
mov
mov
test
jne
mov
mov
ret
mov
mov
test
jne
test
mov
je
mov
mov
mov
test
je
jmp
xor
jmp
push
mov
push
mov
mov
cmp
je
mov
test
push
push
je
mov
add
je
add
mov
test
jne
mov
andl
mov
mov
test
je
push
push
pushl
call
test
jne
pop
pop
pop
pop
ret
mov
test
je
lea
push
push
mov
call
test
je
pushl
mov
mov
call
test
je
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
push
push
call
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
push
call
mov
mov
xor
jmp
push
mov
test
je
mov
push
call
mov
mov
mov
pop
ret
push
push
lea
push
mov
push
call
mov
mov
jmp
push
mov
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
je
cmp
je
mov
mov
lea
call
mov
mov
cmp
jne
cmp
je
push
push
lea
mov
call
mov
mov
push
call
cmp
pop
pop
mov
pop
jne
cmp
je
push
push
push
push
push
push
pushl
mov
call
lea
call
lea
call
lea
call
mov
pop
leave
ret
mov
test
je
mov
push
call
cmpl
je
mov
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
test
je
push
movl
xor
cmpb
jne
test
je
nop
mov
cmpb
jne
mov
test
je
mov
mov
test
jne
mov
test
je
mov
mov
push
call
mov
pop
ret
cmpl
je
testb
je
mov
mov
mov
test
je
mov
mov
push
call
test
je
mov
test
je
cmpb
je
mov
test
jne
jmp
mov
jmp
push
mov
sub
andl
push
mov
andl
push
push
lea
mov
call
add
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
je
mov
mov
mov
mov
push
call
xor
pop
pop
leave
ret
call
cmp
je
pushl
mov
push
call
jmp
lea
push
lea
mov
movl
movl
mov
mov
call
mov
test
js
push
lea
push
lea
lea
mov
movl
movl
mov
mov
mov
in
in
sbb
jge
add
mov
sqrtps
pusha
cmp
fimull
fs
cmpsb
push
jb
pop
add
add
add
in
jns
add
add
add
rolb
add
mov
test
cmpb
xchg
rolb
sar
pop
add
mov
add
mov
mov
push
icebp
pusha
shlb
sti
fdivs
pop
js
aam
lea
je
sub
pop
popl
push
lea
push
push
call
mov
add
sahf
mov
xchg
roll
add
add
popl
jl
add
add
sahf
add
add
lcall
push
push
push
push
lea
push
call
add
push
int
nop
shll
rclb
mov
popa
mov
sti
cmpsb
add
add
imul
mov
push
push
lea
push
push
push
call
add
add
aad
add
enter
add
push
add
add
add
add
mov
add
insb
add
add
mov
movsl
add
jmp
add
lcall
push
push
lea
push
lea
push
push
push
push
push
call
xchg
cmc
add
fadds
frstor
add
add
lock
add
mov
add
add
lods
add
pop
imul
lcall
rorb
add
push
push
lea
push
push
push
lea
push
call
ja
xchg
mov
fneni(8087
add
add
call
add
roll
add
push
test
mov
add
add
mov
call
push
push
push
push
push
push
push
push
push
push
call
add
gs
mov
add
iret
add
cwtl
lock
fwait
add
add
jmp
nop
xchg
in
movsb
add
add
add
pop
lods
add
clc
push
mov
add
xchg
add
addb
int
add
xchg
gs
pop
mov
add
in
add
push
push
push
lea
push
lea
push
call
add
andl
ja
les
add
add
in
push
mov
clc
sahf
roll
add
add
add
leave
xchg
jp
cwtl
push
loopne
xchg
leave
jne
add
mov
push
lds
xchg
pop
add
fcompl
add
icebp
lds
mov
iret
jmp
add
add
lcall
roll
add
push
lea
push
push
push
push
push
lea
push
lea
push
call
mulb
add
add
je
testl
add
pop
test
add
pop
add
mov
mov
add
add
fwait
ret
mov
mov
add
sahf
les
add
add
add
fwait
add
push
xchg
mov
addb
push
jbe
je
in
loopne
lcall
push
push
lea
push
lea
push
call
mov
add
add
add
add
test
cld
bound
mov
mov
add
add
ror
mov
add
jle
push
jno
mov
hlt
add
add
lock
mov
mov
push
push
push
call
mul
xchg
add
add
add
add
xlat
add
out
add
mov
jp
add
add
lahf
outsl
loopne
lods
ljmp
hlt
pop
add
push
push
push
push
call
push
jp
popf
add
fiadds
mov
mov
add
add
add
add
iret
add
imul
xchg
fisttpll
fwait
add
pop
aad
add
add
add
jle
out
stos
icebp
jge
lcall
lret
add
out
adcb
addl
add
pop
add
add
push
push
push
push
push
call
ja
add
add
add
cmpsb
test
pushf
loopne
movsb
add
stos
xchg
fmul
enter
add
fmul
add
out
ja
call
add
fimull
data16
movsb
jge
iret
in
add
aad
mov
sub
pop
mov
xor
push
push
sub
xor
lea
add
push
push
pop
add
shl
shr
sub
sub
add
rol
pop
shl
shl
pop
push
push
call
mov
lcall
mov
jnp
stos
nop
faddl
add
xchg
add
stc
mov
add
xchg
pop
loop
add
fcmove
rolb
icebp
push
add
lock
scas
fadds
lret
add
leave
add
add
push
xchg
lods
leave
les
clc
pop
pushl
call
push
push
push
lea
push
push
push
push
push
push
push
call
add
imul
popa
jb
add
scas
test
push
add
cwtl
jns
mov
jp
jo
add
mov
data16
outsl
mov
add
jns
in
fdivr
lcall
inc
lock
push
push
push
push
push
push
call
rcrb
add
push
fisubrs
lods
mov
add
add
lods
loop
sti
add
test
leave
enter
add
movsb
cli
in
add
fucomp
jno
add
add
mov
add
add
jmp
cltd
add
out
mov
lcall
inc
call
adc
push
lea
push
push
call
add
xlat
jno
bnd
mov
add
loop
shrl
int3
pop
add
rcrb
enter
add
filds
lea
add
mov
add
jb
add
add
arpl
add
fiadds
clc
lret
xchg
add
stos
add
add
sub
pop
push
push
push
push
call
jo
cltd
add
pop
add
add
enter
xchg
add
add
arpl
add
add
mov
hlt
add
add
addb
fldl
add
add
mov
jo
push
in
hlt
lcall
jne
pushl
push
lea
push
push
push
push
call
mov
mov
add
mov
add
into
add
out
test
pop
add
cwtl
mov
add
orl
out
adcl
lcall
gs
call
inc
dec
lea
push
push
push
lea
push
push
push
push
push
call
add
mov
jp
add
add
cmpsb
mov
ror
add
add
xchg
lock
rcl
add
bound
mov
fcomps
jne
push
push
push
call
jbe
add
add
push
mov
push
pop
add
add
add
int3
js
test
add
add
shrb
aad
fcmovbe
pushf
mov
xchg
lds
add
add
add
pop
icebp
add
movsb
fs
hlt
filds
into
out
lret
sub
pop
call
push
push
xor
add
push
or
not
add
shr
sub
sub
xor
rol
pop
sub
dec
pop
push
push
lea
push
push
push
call
add
rolb
add
add
push
shlb
ror
add
mov
movb
arpl
loop
mov
in
leave
ljmp
pusha
add
ja
add
adc
add
in
loope
add
out
add
add
mov
in
in
pop
pushl
call
push
push
push
push
push
push
push
push
push
lea
push
call
cld
rolb
fcmovnb
add
lcall
add
fildl
add
add
jp
add
jae
push
push
jmp
je
mov
in
add
xchg
push
cli
add
in
fcomps
inc
push
push
shr
push
sub
add
add
sub
not
sub
inc
add
sub
ror
pop
ror
shl
ror
pop
push
push
push
push
push
push
push
push
push
call
add
test
jne
jmp
rolb
add
pop
add
fiaddl
nop
rcrl
add
add
add
roll
add
push
push
push
push
push
push
push
push
push
call
add
testb
xchg
pop
sahf
add
mov
jecxz
jl
sti
clc
imul
mov
jno
in
shlb
in
add
testl
jle
add
test
mov
add
scas
add
add
push
jmp
stc
cwtl
add
pop
rolb
add
sub
pop
call
push
push
push
lea
push
push
call
add
mov
add
addb
js
add
pop
push
shlb
add
movsl
mov
jp
xchg
filds
add
in
add
ja
in
add
pop
add
mov
add
add
popf
xchg
sahf
mov
sub
pop
mov
push
lea
push
lea
push
lea
push
push
call
add
add
push
cmc
add
add
add
out
cld
add
add
leave
shrl
out
add
clc
add
aad
aad
mov
nop
int3
xchg
add
add
lcall
push
push
push
call
mov
add
mov
lret
jmp
lea
je
add
addl
dec
clc
out
xchg
add
add
push
add
add
add
pop
fiaddl
add
mov
add
fwait
pushf
add
add
mov
data16
pop
push
push
push
push
push
push
call
add
fiadds
jb
add
add
call
mov
hlt
add
add
add
pop
pop
mov
xchg
add
jb
add
add
xlat
add
xchg
scas
arpl
jbe
add
mov
add
pop
mov
add
pop
hlt
push
lea
push
lea
push
push
push
push
push
push
call
mov
lret
add
scas
add
pop
nop
add
shl
add
fldcw
fistpll
add
imul
add
add
xchg
pop
fstpl
incb
loope
and
xchg
xchg
push
pop
cwtl
sub
pop
add
add
push
push
push
lea
push
push
push
push
push
push
call
jbe
fiadds
xchg
add
fnstsw
mov
mov
add
nop
test
xchg
add
add
add
cwtl
mov
add
pop
add
les
clc
bound
xorb
in
fcompl
ret
loopne
add
push
push
lea
push
push
call
add
je
add
add
add
add
or
fs
frstor
add
pop
call
cmpsb
roll
add
scas
call
imul
call
sbbb
mov
sub
pop
mov
xor
push
push
push
push
lea
push
push
push
call
pop
add
add
popf
add
xchg
add
out
jmp
popa
lock
pop
xchg
add
loope
add
fists
jb
add
mov
add
xlat
lret
add
mov
mov
add
sub
pop
add
push
lea
push
lea
push
lea
push
lea
push
push
push
call
bound
push
rolb
mov
lods
add
fwait
ljmp
add
movb
sahf
mov
add
jle
jno
add
rclb
mov
rcrb
mov
hlt
add
add
mov
add
stos
add
fidivrl
add
sub
pop
push
mov
xor
push
lea
push
push
lea
push
push
push
push
call
in
cwtl
jmp
add
add
push
mov
add
addb
cwtl
jmp
shlb
push
add
movsb
add
add
add
in
in
add
push
push
push
push
push
push
call
fs
push
cltd
rorb
mov
jp
add
jmp
pop
cwtl
movsb
pusha
out
lret
mov
add
lcall
mov
push
push
lea
push
push
push
lea
push
call
int3
mov
add
mov
movsl
jne
add
xchg
jb
jb
add
jbe
lcall
jo
mov
popl
jns
xchg
jns
add
add
fiaddl
lcall
or
push
lea
push
push
call
addb
mov
add
add
std
add
add
in
mov
fiadds
sarl
add
out
sti
mov
fmulp
mov
in
gs
add
shl
rolb
add
sti
idiv
xchg
mov
icebp
pop
scas
test
pop
mov
nop
xchg
popa
cltd
mov
add
push
push
push
lea
push
lea
push
call
jae
flds
jp
add
push
mov
jecxz
push
cld
out
imul
test
add
add
mov
lcall
std
add
add
add
outsl
outsl
xchg
add
add
mov
mov
fs
nop
add
iret
add
test
mov
mov
in
in
pop
push
push
push
push
push
push
push
push
lea
push
push
push
call
add
fs
gs
pop
pop
mov
je
pop
stc
lea
fimull
push
sahf
add
add
movsl
jb
add
jo
add
out
add
fs
std
loope
imulb
ljmp
add
add
lods
pop
sub
pop
mov
push
push
push
push
push
call
add
jo
add
scas
fildl
jl
mov
add
add
add
jo
jnp
mov
test
jnp
movsl
xlat
xchg
push
in
add
hlt
pop
add
mov
bound
aad
xlat
pop
popa
rolb
add
lods
fadd
fs
add
lods
shll
add
xchg
sub
pop
xor
push
push
lea
push
lea
push
call
add
jmp
scas
movb
mov
fnsave
add
add
mov
pop
fstl
loop
add
xchg
imul
loopne
in
lock
add
push
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
subl
rcrb
stc
add
divl
add
xchg
scas
push
jbe
je
imul
add
enter
jns
inc
sbb
push
push
push
call
add
jecxz
mov
test
pop
test
fildl
cmpsb
mov
add
mov
addr16
add
mov
add
ljmp
fdivrl
stc
pop
sarb
bound
push
add
test
xchg
data16
je
int3
loop
push
add
popa
jmp
in
in
pop
pop
rep
push
push
lea
push
push
call
loop
add
pushf
xchg
add
add
filds
testb
add
mov
xchg
int3
jnp
add
add
mov
iret
in
rcrb
jle
add
add
add
call
pop
mov
imul
add
xchg
add
lcall
push
push
push
push
push
push
push
call
add
add
les
xchg
popf
add
jecxz
out
cmp
xchg
adc
in
add
add
test
cmc
add
sbbl
add
lahf
sub
pop
mov
push
push
call
les
add
add
fwait
push
add
mov
add
jmp
pop
add
add
push
mov
int
cld
je
add
int
out
pop
mov
les
imul
roll
pop
pop
add
ljmp
xchg
push
push
out
mov
jl
add
jmp
sub
pop
add
add
push
lea
push
lea
push
call
jne
test
std
jns
push
push
add
add
imul
mov
fisubs
outsl
pop
add
pop
mov
add
ret
loopne
add
push
push
push
push
call
movsl
add
xchg
add
incb
fdivrl
in
push
pushf
add
push
lods
hlt
fiaddl
cmpsl
xlat
in
xchg
push
push
mov
pop
push
bound
sub
pop
mov
push
push
push
lea
push
push
call
adcb
lcall
sbbb
movsb
jno
nop
xchg
stos
jns
stos
add
mov
lret
mov
pusha
jne
mov
push
jmp
add
mov
mov
xchg
add
add
add
std
add
add
in
lock
xor
push
push
push
push
lea
push
push
call
mov
push
cmpsl
add
jns
mov
int
scas
xchg
add
add
addb
arpl
flds
push
pop
xchg
jo
lahf
jmp
add
sahf
pop
into
mov
jle
lock
pop
add
push
lea
push
lea
push
push
call
jnp
fisubs
add
pop
imul
add
pop
add
pop
add
addb
add
add
addb
pop
mov
xor
push
push
push
lea
push
push
lea
push
call
add
cli
xchg
lea
pop
add
add
ja
test
push
insb
pop
add
add
add
xchg
mov
pop
pop
outsl
icebp
mov
add
pop
push
add
add
add
add
mov
add
data16
fiadds
add
add
test
push
lret
sub
pop
mov
push
push
push
push
push
push
push
push
push
push
lea
push
call
loop
clc
jae
clc
add
out
mov
loopne
jecxz
fiadds
pop
call
fldenv
add
add
icebp
pop
test
add
cmpsl
add
mov
fcomps
or
push
push
lea
push
lea
push
push
push
push
lea
push
lea
push
call
add
out
add
subl
mov
lock
into
icebp
scas
sarl
leave
add
testl
add
cld
add
rclb
add
jle
add
add
add
decb
xchg
add
xchg
cmpb
sub
pop
add
push
push
push
push
push
push
call
add
add
add
xchg
out
lods
add
add
pop
call
imul
add
add
push
jno
add
xchg
sahf
add
xchg
push
jbe
xchg
sub
pop
add
push
lea
push
push
call
add
pop
shrb
jp
add
out
add
filds
jecxz
test
add
les
mov
add
add
push
jle
scas
push
mov
push
ja
sub
pop
add
push
lea
push
push
push
push
lea
push
lea
push
call
enter
add
fs
add
hlt
add
pop
add
in
add
ja
stos
cmc
lret
hlt
pushf
scas
add
add
lahf
out
mov
add
add
add
pop
add
sahf
divb
mov
push
push
xor
not
push
or
inc
add
add
sub
lea
inc
pop
add
sub
dec
shl
pop
push
lea
push
lea
push
push
push
lea
push
call
pop
jmp
movb
add
push
xchg
pop
add
icebp
add
sarl
out
in
push
mov
add
jne
add
call
pushl
push
push
push
push
push
push
push
push
push
push
call
add
iret
push
pop
addr16
jecxz
add
add
add
xchg
mov
icebp
push
ljmp
push
stos
add
xchg
add
mov
add
mov
xchg
mov
mov
cld
add
lcall
mov
mov
pop
add
lods
add
xchg
dec
add
push
lea
push
push
push
lea
push
lea
push
push
push
call
call
roll
bound
icebp
rcrb
icebp
mov
loope
test
incb
add
shlb
in
loopne
push
push
push
ror
ror
push
xor
add
not
xor
sub
lea
add
lea
pop
shr
pop
push
push
push
push
push
lea
push
call
lds
add
out
jge
add
mov
add
fiaddl
add
test
add
add
add
mov
add
add
jl
add
cltd
scas
mov
stc
lds
mov
mov
in
call
push
push
push
push
lea
push
lea
push
lea
push
push
lea
push
push
push
call
add
add
movsl
mov
filds
add
lea
jb
out
add
jns
icebp
pop
add
add
add
add
lcall
add
rclb
rcrb
push
pop
pop
mov
push
shl
ror
pop
push
push
push
add
ror
pop
mov
add
push
sub
pop
add
add
push
push
push
lea
push
lea
push
push
push
push
push
push
call
add
pop
outsl
add
add
add
mov
add
add
add
add
mov
add
xchg
mov
add
add
add
push
add
push
add
jnp
add
add
add
lock
pop
mov
push
push
push
push
call
std
in
aam
cmpsb
add
out
in
add
fiaddl
add
loop
add
aam
xchg
add
pop
jecxz
rcl
add
add
push
movsb
add
stos
lret
add
add
loope
imul
int3
xchg
pop
sarb
testb
pop
xor
push
lea
push
push
lea
push
lea
push
lea
push
push
lea
push
push
call
mov
outsl
mov
mov
add
add
imul
add
into
add
into
mov
in
fsubrp
push
lret
jecxz
in
fdivr
lcall
les
add
push
push
lea
push
lea
push
push
push
call
mov
add
roll
shlb
testl
gs
add
add
jle
add
add
pop
mov
scas
add
push
movb
sub
pop
add
push
rol
pop
push
push
pop
mov
xor
push
xor
sub
pop
add
pop
push
sub
add
inc
pop
mov
push
push
lea
push
push
push
push
push
push
push
lea
push
push
call
add
push
jl
add
add
add
mov
int3
data16
add
roll
cmc
cltd
add
mov
mov
insb
repnz
xlat
mov
mov
jbe
add
mov
addr16
add
lret
clc
mov
add
out
cmpsl
mov
add
je
call
fdivr
lcall
or
push
lea
push
push
push
push
push
push
push
call
jb
xchg
add
pop
andb
cltd
je
add
add
push
add
hlt
test
lcall
add
push
lea
call
sbb
imul
push
jne
out
add
mov
sarl
add
add
sub
pop
add
push
push
call
add
out
add
idivl
xchg
xchg
add
jbe
sbbl
imul
xchg
cmpl
pop
jb
leave
push
rcrl
add
add
add
in
clc
lcall
movsb
push
lea
push
push
push
call
add
add
add
add
add
add
add
sti
repnz
fwait
out
add
insb
fidivrs
add
add
data16
add
push
add
add
push
mov
jmp
sub
pop
mov
xor
push
add
pop
or
je
mov
xor
push
lea
push
lea
push
push
call
add
ja
jl
arpl
mov
pop
int
add
nop
jnp
add
mov
lods
push
add
mov
js
add
lea
in
lock
xchg
xchg
add
sub
pop
mov
xor
push
push
call
testl
jne
mov
iret
std
stos
add
mov
add
iret
add
push
out
jnp
mov
add
mov
in
clc
test
stos
add
add
gs
movsl
add
lods
leave
lcall
mov
into
lea
leave
add
cwtl
add
add
cmc
addl
lcall
repnz
push
push
lea
push
lea
push
push
call
pop
in
xchg
cld
add
js
add
ja
add
jl
mov
xchg
jmp
add
insb
aad
in
jns
cmpsb
mul
push
outsl
pop
sarb
push
add
add
leave
add
lcall
in
call
add
push
push
push
push
push
push
push
lea
push
call
pop
into
add
faddl
add
jns
add
add
add
fadds
push
add
add
add
ljmp
add
test
js
add
add
add
xchg
push
adcb
std
fadds
add
mov
add
add
lcall
inc
or
lret
ret
adcb
loop
pop
add
push
push
lea
push
push
push
push
call
mov
test
test
pusha
imul
cmpsb
mov
add
in
jecxz
mov
add
sahf
imul
add
sub
pop
pop
rep
push
push
lea
push
lea
push
push
push
call
add
rcr
add
add
mov
roll
popl
sahf
mov
add
add
xchg
add
mov
sub
pop
mov
push
push
push
push
push
push
push
push
lea
push
push
call
out
xlat
add
xchg
into
fiadds
push
push
mov
add
jbe
add
add
ljmp
add
incb
add
les
sub
pop
xor
push
push
push
lea
push
push
push
push
call
xchg
mov
xor
into
fstp
addb
xchg
fadds
mov
add
not
js
add
add
loope
add
add
add
leave
mov
add
add
fsubl
movb
call
lret
add
in
in
add
push
xor
add
sub
add
pop
or
je
push
push
push
call
add
add
mov
add
mov
testl
add
add
mov
test
int3
pop
orb
cld
imul
iret
add
imul
xchg
mov
mov
pop
mov
lods
push
add
sahf
out
add
repz
push
xor
shr
lea
pop
add
push
pop
rep
pop
push
push
rol
shl
add
push
or
inc
add
sub
shr
sub
sub
sub
sub
not
pop
dec
sub
pop
push
add
pop
pop
push
push
push
push
push
lea
push
push
lea
push
call
hlt
add
sti
test
loope
lret
mov
add
add
mov
add
jnp
fisubrl
add
pop
sti
ret
in
jmp
add
fadds
ret
flds
lcall
in
add
out
push
push
add
and
sub
pop
mov
push
add
pop
mov
mov
push
push
push
push
push
push
push
push
push
lea
push
call
aam
add
xchg
idivb
mov
aad
add
add
fldl
nop
nop
add
jo
add
loope
jo
push
xchg
add
jns
jecxz
fdivrs
mov
outsl
aad
test
add
add
popa
add
pushf
mov
movsl
add
les
add
loopne
push
push
push
call
mov
roll
pop
xchg
add
mov
popa
add
test
je
stc
add
push
in
xchg
add
add
mov
add
push
add
add
pop
push
push
push
lea
push
call
add
movb
mov
add
add
add
in
lods
lods
add
add
arpl
add
imul
addr16
lods
jmp
test
add
add
add
add
jmp
mov
push
push
push
push
push
push
push
push
lea
push
lea
push
call
add
test
mov
add
mul
fists
aam
add
mov
cld
add
add
popf
test
add
add
add
add
push
push
fwait
jbe
add
add
cli
lock
loop
add
data16
cmc
add
int3
add
stos
sub
pop
push
mov
push
lea
sub
sub
pop
pop
push
shl
dec
pop
pop
push
ror
pop
pop
push
push
push
push
push
push
lea
push
push
push
call
jecxz
clc
add
shlb
add
add
add
add
add
pop
add
mov
ret
lods
add
cmpsb
add
pop
rcrl
in
fcompl
leave
push
push
push
push
push
lea
push
push
push
push
call
loop
add
add
push
xchg
add
bound
add
push
icebp
roll
testb
push
add
sahf
mov
enter
fcompl
or
push
push
push
push
lea
push
push
push
push
call
add
jne
add
mov
pop
jl
movsb
movb
jnp
add
mov
push
mov
mov
mov
rolb
arpl
cli
add
jmp
loope
arpl
call
in
in
in
mov
push
lea
push
push
push
push
push
call
fnstcw
cld
mov
aad
enter
jecxz
pop
lret
xchg
out
rclb
mov
mov
iret
add
lcall
lcall
clc
push
push
pop
push
push
push
lea
push
push
push
lea
push
lea
push
lea
push
push
push
call
add
imul
add
xchg
xchg
mov
add
enter
lcall
add
jge
xchg
out
pop
add
add
add
in
mov
test
add
imul
mov
push
insb
pop
add
mov
add
push
push
push
lea
add
pop
movl
push
push
push
push
push
lea
push
push
push
push
push
call
add
loope
lcall
loope
mov
scas
lret
add
mov
aad
arpl
add
jl
out
lods
add
fstpl
add
mov
jle
add
jo
mov
lds
add
movsl
ret
mov
mov
pop
addl
push
sub
pop
test
je
push
xor
pop
mov
pop
push
sub
xor
add
pop
pop
push
rol
lea
xor
inc
pop
pop
push
push
push
lea
push
push
push
push
push
call
add
loop
push
add
arpl
add
add
mov
popf
add
mov
add
mov
roll
add
lcall
push
sub
ror
pop
leave
ret
push
push
push
call
fisttpl
roll
add
add
std
add
enter
add
push
add
xchg
test
push
je
add
pop
push
loop
mov
sub
pop
push
push
ror
add
add
pop
mov
add
push
lea
xor
sub
ror
pop
push
push
xor
not
pop
push
push
push
push
lea
push
push
push
push
push
push
push
push
call
lahf
add
add
jns
push
ficoml
mov
mov
in
add
mov
add
add
mov
movsb
push
add
xchg
add
push
into
icebp
idivl
jle
loope
lea
loopne
mov
add
les
mov
jbe
add
in
add
je
add
push
lea
push
push
lea
push
lea
push
call
add
add
mov
add
jmp
jp
out
movsb
cld
add
ficomps
lock
add
jmp
add
adcb
sub
pop
testl
addl
push
lea
push
call
cli
cltd
cwtl
aad
add
add
lods
call
shrb
add
add
add
pop
addr16
jno
cltd
mov
addr16
add
add
add
sbb
call
mov
shlb
sub
pop
mov
push
lea
push
lea
push
call
addl
mov
jae
mov
add
jo
add
call
add
stos
mov
out
out
roll
mov
add
or
xchg
int3
shr
lock
int
outsl
pop
sub
pop
pushl
push
push
xor
not
pop
push
call
push
add
pop
cmpl
jne
push
not
xor
rol
add
pop
pop
pop
push
add
pop
pop
push
push
push
push
lea
push
push
call
mov
into
add
push
fldl
add
mov
pop
jne
movsb
loopne
in
add
add
mov
in
enter
frstor
arpl
add
push
shr
add
sub
pop
leave
push
push
push
push
lea
push
call
mov
push
fiadds
outsl
lock
add
in
add
add
mov
push
add
add
mov
push
insb
add
add
add
push
popf
lret
testb
roll
imul
icebp
add
int3
mov
add
pop
incb
in
lcall
add
push
ror
lea
pop
push
push
not
inc
shr
pop
mov
push
not
lea
sub
pop
add
push
push
push
lea
push
push
push
push
push
push
push
call
mov
cmc
ffree
adcb
add
add
js
add
incb
loope
mov
fs
gs
push
jecxz
add
push
stos
jge
add
shrl
pop
out
lret
enter
in
fcomps
push
lea
lea
ror
pop
push
push
push
push
push
push
call
add
fmull
add
add
push
test
fildll
add
in
jle
xchg
mov
add
add
add
add
cltd
bound
imull
xchg
push
loope
outsl
add
mov
pop
push
movl
push
sub
add
shl
pop
push
push
pop
call
push
lea
push
push
push
push
call
add
add
xchg
mov
push
add
xchg
add
add
fnstenv
fiadds
add
addl
add
jl
addl
add
fldl
roll
ljmp
add
andl
in
in
pop
push
push
lea
push
lea
push
push
push
push
push
lea
push
push
push
call
sahf
movl
fiadds
lret
push
lahf
lret
shrl
push
clc
mov
add
pop
sahf
jbe
pop
lods
test
add
add
add
pop
fdivl
add
add
jbe
enter
mov
roll
flds
mov
xchg
sub
pop
call
push
inc
rol
pop
subl
cmpl
jne
push
lea
push
call
add
add
jle
mov
add
xlat
add
mov
add
jae
popf
mov
jmp
roll
add
mov
sti
add
pop
push
lea
push
call
add
into
les
add
arpl
add
cmpsb
add
add
add
push
mov
addb
movb
mov
add
add
mov
fstpt
mov
pop
add
out
add
lahf
outsl
aad
icebp
addb
cltd
xchg
in
add
xchg
xchg
int3
add
lcall
pop
push
add
not
pop
leave
ret
push
lea
push
call
repnz
movsb
loop
lds
add
add
in
popa
add
add
push
push
add
add
fstl
je
out
mov
test
cmc
addl
lea
push
push
push
push
push
push
call
add
add
add
add
sarb
mov
test
add
nop
jo
jno
call
aam
mov
add
add
test
ficompl
mov
lods
jp
pop
mov
push
lret
mov
lret
aam
sahf
add
add
push
sti
fs
lock
in
lcall
in
push
xor
sub
xor
pop
add
push
shl
not
pop
push
push
push
lea
xor
pop
push
push
push
call
add
mov
mov
cmpsb
clc
push
lock
mov
bnd
pop
add
outsl
fs
mov
roll
out
sub
pop
push
push
push
dec
sub
xor
rol
push
sub
add
add
xor
not
sub
inc
pop
shl
not
pop
push
push
push
push
push
call
outsl
pop
add
add
add
cld
bound
incb
push
mov
movsb
lods
mov
add
mov
pop
clc
add
mov
in
movsb
add
push
mov
loopne
lret
mov
lcall
jne
push
shr
pop
call
push
push
call
loop
test
add
add
add
add
add
out
add
add
mov
pop
fisubl
jb
push
bound
add
add
lcall
rorb
push
push
push
push
call
filds
push
aad
mov
add
mov
jmp
mov
push
pop
jmp
jns
add
add
bound
call
lea
push
push
push
push
push
push
lea
push
push
push
push
call
pushf
loop
add
add
xchg
add
push
add
cmpl
mov
add
add
in
jp
mulb
arpl
add
cmpsb
out
add
xchg
add
add
sub
pop
sub
push
lea
push
push
push
push
lea
push
push
push
call
loop
mov
add
add
fsubrp
lcall
xchg
push
in
pop
add
lcall
sub
pop
mov
push
push
push
push
lea
push
push
push
call
mov
leave
repnz
fs
mov
movb
stc
add
add
and
add
xchg
mov
pop
add
roll
add
add
fs
fldz
mov
js
lea
fsubrl
add
mov
add
mov
xchg
add
jmp
add
lcall
call
mov
fistps
inc
or
inc
cld
push
lea
pop
mov
push
rol
dec
pop
add
push
shl
pop
add
push
sub
dec
lea
pop
mov
push
lea
push
lea
push
push
push
push
call
enter
loop
enter
pop
mov
call
icebp
add
cmpsb
add
adc
repnz
add
out
in
add
add
xchg
add
add
add
add
test
add
add
out
js
add
lcall
nop
nop
nop
nop
push
lea
push
lea
push
push
lea
push
push
push
push
call
add
imul
add
icebp
mov
movsb
add
jo
pop
add
add
cmc
push
add
in
mov
cmc
mov
test
out
mov
add
add
xlat
cltd
add
add
les
lret
sub
pop
cmp
jne
cmp
jne
push
dec
dec
add
pop
mov
push
push
push
push
lea
push
push
call
iret
pop
roll
movsb
push
ret
pop
jle
add
mov
sti
add
mov
add
jo
add
in
call
movl
jmp
push
ror
ror
add
pop
mov
push
push
push
push
push
push
push
call
rcr
add
add
lahf
pop
insb
int3
push
roll
mov
pop
stc
add
in
add
mov
flds
add
int3
mov
add
fildl
aad
add
ljmp
add
fwait
add
test
add
jne
imul
push
add
in
arpl
jge
add
add
in
mov
push
push
call
add
push
add
cmc
ljmp
add
mov
cli
mov
lret
mov
rcl
pop
test
push
add
loope
add
js
mov
pushf
roll
sti
pushfw
mov
push
mov
xlat
jl
mov
push
xchg
mov
test
sub
pop
sub
jne
push
push
push
push
push
push
lea
push
call
roll
lods
test
fcomip
jbe
jno
jmp
mov
pop
jne
data16
ret
jp
add
add
add
mov
add
enter
in
mov
movl
push
push
push
call
stos
pop
add
add
xchg
mov
mov
mov
add
cwtl
clc
add
jno
cld
fwait
mov
movb
mov
fidivl
add
add
add
add
jb
add
cltd
fildl
push
shrb
jbe
add
loope
xor
in
hlt
lcall
jns
add
push
shr
shr
pop
mov
push
xor
not
rol
pop
mov
push
sub
shl
sub
pop
cmp
jne
push
rol
not
pop
mov
push
push
lea
push
push
push
lea
push
push
lea
push
call
mov
add
add
addr16
add
pop
mov
mov
add
add
sti
add
jbe
add
cltd
in
movl
add
jae
test
aad
add
add
hlt
add
out
repnz
mov
sub
pop
movl
jmp
push
push
push
push
push
lea
push
call
mov
mov
pop
std
add
pop
add
jns
add
fsubs
stos
add
je
addl
add
add
sarb
loop
mov
add
mov
loope
add
add
add
in
jmp
data16
mov
add
stos
imul
js
ficompl
xchg
mov
xlat
fadds
mov
add
mov
lods
sub
pop
mov
cmpw
jne
push
dec
add
pop
mov
push
xor
pop
movl
jmp
push
sub
pop
pushl
push
push
push
push
call
cmpsb
mov
add
popf
into
fsts
fiaddl
mov
add
add
popl
add
add
mov
cld
add
and
in
lock
pop
push
push
lea
push
push
push
push
call
imul
into
mov
push
add
add
mov
in
add
add
add
add
add
jp
bound
push
aam
in
call
push
pop
mov
push
not
lea
pop
mov
push
push
shl
push
or
not
add
sub
not
inc
sub
add
pop
inc
pop
push
lea
dec
pop
push
push
xor
pop
call
push
add
sub
pop
cmpl
je
push
push
push
or
not
add
sub
add
sub
sub
sub
rol
pop
add
pop
push
lea
ror
pop
push
push
rol
sub
pop
call
push
pop
cmpl
je
push
push
inc
sub
push
and
add
sub
dec
sub
shl
add
sub
pop
dec
inc
pop
push
sub
add
pop
push
push
not
dec
sub
pop
call
push
lea
pop
cmpl
je
push
push
shl
shl
push
or
not
add
ror
sub
lea
lea
sub
add
rol
pop
add
dec
pop
push
push
push
push
push
lea
push
push
call
fcom
shrl
pusha
outsl
add
pusha
add
add
add
out
pop
pop
ja
add
in
add
add
add
mov
jae
in
in
push
push
sub
shr
pop
call
cmpl
je
push
push
shr
add
not
sub
push
sub
add
ror
add
sub
inc
sub
shr
sub
dec
add
pop
xor
pop
push
shr
shr
pop
push
push
lea
push
push
push
lea
push
push
push
push
call
idivl
cltd
pop
add
outsl
add
add
add
add
subl
test
add
stc
add
sahf
test
iret
jp
int
add
lcall
push
xor
add
lret
add
shr
pop
cmpl
je
push
push
shr
add
push
push
pop
add
shl
sub
xor
pop
not
pop
push
lea
ror
sub
pop
push
push
lea
push
call
pop
mov
add
add
clc
cltd
std
mov
scas
mov
outsl
add
fildl
mov
add
call
clc
mov
add
add
add
cld
mov
add
int
mov
in
clc
pop
call
push
lea
push
push
lea
push
push
push
push
push
push
push
call
xchg
add
aam
xorb
add
add
add
mov
movb
out
in
fcomps
js
int3
fldz
ret
mov
mov
lea
push
or
inc
add
sub
xor
shr
add
sub
ror
xor
add
lea
pop
pop
push
add
inc
sub
pop
push
push
shr
sub
not
pop
call
push
lea
push
push
call
jmp
add
jnp
test
jmp
imul
jns
xchg
add
mov
int3
add
loop
loop
jle
mov
aam
pop
mov
add
add
add
mov
push
int3
pop
add
add
cld
add
popa
add
jbe
les
lcall
cmp
rol
je
push
push
ror
inc
push
or
inc
add
add
sub
sub
ror
shr
pop
shr
dec
pop
push
push
lea
push
call
mov
cli
fwait
pushf
add
addl
nop
stos
data16
rolb
add
xlat
popa
pop
add
mov
add
add
xlat
stos
mov
add
mov
aam
add
ror
movb
aad
movsl
add
add
std
fcmovnbe
addl
pop
push
call
push
push
push
push
push
lea
push
lea
push
push
call
insb
add
movsb
ret
lods
je
add
push
test
mov
loope
push
add
jbe
add
add
fildl
addb
mov
nop
xor
test
shlb
push
dec
ror
add
dec
push
xor
add
xor
sub
lea
rol
dec
pop
xor
pop
push
lea
push
push
push
lea
push
push
lea
push
push
push
push
call
mov
mov
ja
rolb
ja
sti
xchg
add
mov
push
flds
test
add
js
sarb
add
xchg
fwait
add
add
add
lcall
call
push
push
lea
push
call
push
push
add
add
jbe
shrl
add
lret
rclb
add
test
push
loop
add
add
movl
add
add
add
std
lods
cld
leave
add
pop
pop
add
js
xor
ret
test
add
add
jno
ja
ror
sub
shl
push
push
pop
add
ror
rol
shr
sub
sub
shr
rol
pop
pop
push
push
push
push
push
push
call
movsl
pop
add
mov
xchg
add
add
add
add
loop
add
mov
lret
add
jmp
jmp
add
jo
lcall
pop
push
push
push
push
push
push
push
lea
push
call
sti
mov
add
mov
jge
add
stos
out
out
lret
imul
cld
movl
add
add
enter
xchg
jle
pop
shlb
xchg
push
add
mov
roll
sub
add
les
je
push
push
shr
push
or
inc
add
sub
not
sub
lea
pop
not
pop
push
sub
shl
shl
pop
push
push
add
dec
dec
pop
call
push
lea
push
push
call
hlt
repnz
cmc
add
mov
mov
lret
add
js
lret
add
add
jl
add
lahf
test
add
cmc
add
add
push
add
add
push
add
push
loope
add
add
add
stos
mov
out
add
sub
pop
cmpl
jne
push
push
lea
push
lea
push
push
push
push
lea
push
push
call
add
add
fmulp
outsl
xorb
call
add
add
xchg
shl
add
add
stos
add
add
add
inc
adc
add
add
add
lret
shlb
rcrb
pop
add
add
xchg
loopnew
push
push
push
push
call
loopne
add
negl
add
add
int
add
mov
xchg
fwait
outsl
mov
add
add
add
add
roll
add
sub
pop
xor
pop
push
inc
pop
pop
push
shr
add
ror
pop
pop
push
push
push
push
lea
push
lea
push
lea
push
push
push
call
cmpsb
sbb
push
add
add
pusha
lcall
popf
add
pop
add
lock
cmc
popa
jne
mov
fdivr
lcall
push
ror
pop
leave
push
push
push
call
cltd
jo
into
clc
add
add
add
je
popa
fadds
enter
add
stos
jo
add
mov
rcr
add
lret
lret
mov
bound
add
add
or
push
lea
push
push
push
call
push
add
fwait
cmpsb
rol
add
int3
mov
add
add
in
push
add
add
add
add
lret
mov
les
stc
add
push
add
je
push
lahf
add
lcall
push
lea
pop
mov
add
push
push
push
push
push
push
lea
push
lea
push
call
push
jnp
fcompl
int
add
add
aam
add
mov
add
mov
mov
bound
mull
pop
jp
add
lods
add
add
add
add
pop
movl
int
shrl
push
add
add
add
add
mov
hlt
add
sub
pop
cmpl
jne
push
push
lea
dec
sub
push
sub
add
inc
shl
inc
sub
sub
ror
shr
xor
pop
shr
shl
pop
push
add
add
pop
pushl
call
push
sub
not
sub
pop
push
push
push
lea
push
push
push
call
add
mov
clc
gs
mov
jmp
mov
cmc
add
add
mov
mov
mov
sub
pop
call
jmp
push
push
push
lea
push
push
push
push
push
call
repnz
hlt
add
loope
add
push
in
add
push
arpl
add
popl
out
add
call
add
ljmp
in
int
add
rolb
add
add
test
pop
mov
add
add
add
ja
mov
add
xchg
add
sub
pop
cmpl
jne
mov
push
dec
add
dec
shl
pop
call
ret
push
push
lea
push
push
push
push
push
call
lcall
add
add
add
cltd
sar
add
add
clc
add
lds
loope
stos
fwait
pop
pop
data16
add
jo
loopne
xchg
cmpsl
and
aam
mov
pop
xchg
out
add
in
lcall
push
add
push
push
push
call
add
lahf
fs
add
mov
mov
pop
test
add
add
fiadds
fadds
ret
add
ret
lahf
std
out
add
fwait
push
js
jl
lods
add
ret
jmp
add
jl
jne
add
out
in
add
rolb
sub
lcall
jge
add
test
cmc
sub
xlat
push
sub
add
push
sub
add
add
rol
sub
xor
pop
sub
add
inc
pop
push
shl
xor
pop
pushl
push
push
call
mov
addb
mov
pushf
int
jae
add
rolb
xchg
testb
add
jmp
test
clc
lcall
iret
and
sub
inc
inc
pop
push
call
push
lea
push
lea
push
push
push
push
push
push
push
call
add
add
mov
lds
out
add
je
testb
fisubrs
add
push
nop
mov
add
int
gs
add
fwait
jo
pop
iret
lcall
add
add
add
mov
add
add
addb
pop
jmp
cmpl
je
push
xor
rol
shr
pop
cmpl
jne
push
add
pop
mov
push
shr
xor
xor
pop
mov
push
push
lea
push
push
push
push
push
push
push
call
add
add
add
xorb
cli
rolb
rolb
add
negb
add
imull
xchg
cld
sub
pop
jmp
push
push
add
push
or
inc
add
xor
ror
sub
dec
pop
pop
push
rol
pop
pushl
call
push
rol
ror
pop
call
push
push
xor
push
or
not
add
lea
sub
sub
not
pop
not
pop
push
push
push
push
push
call
mov
add
add
cli
push
add
xchg
test
xchg
mov
add
add
add
popf
add
add
add
jmp
fs
push
sarb
lcall
jne
push
push
lea
push
push
push
push
push
push
lea
push
call
jge
mov
add
gs
cmpsb
into
add
add
test
mul
jae
jbe
addr16
xchg
sbbl
add
test
add
mov
lret
movb
mov
popf
xchg
addl
add
nop
std
add
mov
pop
cwtl
add
lcall
jl
add
push
lea
push
push
call
into
add
add
xchg
add
add
add
mov
pushf
add
add
push
add
add
les
mov
movsl
fdivl
std
push
sub
pop
call
push
push
dec
push
push
pop
add
shr
lea
shl
xor
sub
shr
inc
pop
shl
pop
push
pop
pushl
call
push
push
push
push
push
call
jp
xchg
mov
lret
add
mov
mov
insb
add
sarb
add
mov
mov
jae
jb
bound
add
cltd
mov
add
add
jge
add
add
add
jecxz
aad
leave
add
add
jb
sub
pop
call
push
push
ror
push
push
pop
add
shr
add
inc
sub
shr
shr
add
pop
add
sub
pop
push
shl
xor
pop
pushl
call
push
push
push
push
lea
push
push
push
push
call
add
int
add
xchg
jo
add
mov
mov
add
add
add
js
add
add
mov
add
mov
add
push
add
add
add
lods
data16
imul
push
push
shr
sub
push
or
not
add
add
sub
dec
sub
rol
pop
lea
not
sub
pop
push
push
push
lea
push
lea
push
push
push
call
jb
add
test
mov
enter
scas
fs
jae
hlt
scas
sarl
lea
loopne
imul
lods
mov
add
mov
out
test
push
cmpsb
addr16
add
movsb
add
push
mov
lcall
jne
push
shl
pop
call
call
push
push
ror
shr
dec
shr
push
or
not
add
lea
lea
shl
sub
dec
pop
sub
lea
add
pop
push
not
shl
not
shl
pop
pushl
push
add
lea
add
pop
call
push
push
push
call
add
add
add
fdivrp
repnz
pushf
add
add
sbbb
pop
mov
add
stos
pop
push
in
neg
icebp
add
mov
mov
frstor
out
js
add
jns
data16
outsl
movsl
cmpsl
add
pop
popa
cli
bound
shrb
mov
call
add
add
add
not
sub
lea
add
ror
pop
dec
add
pop
push
shl
add
pop
pushl
push
push
lea
push
push
push
lea
push
lea
push
lea
push
push
call
fisubl
push
add
add
addb
enter
pop
roll
xchg
loope
push
icebp
add
mov
fistps
mov
test
filds
add
mov
add
scas
lcall
lcall
fstpl
add
push
lea
push
push
push
call
add
jge
fildl
loop
test
add
jne
add
add
fdivr
sti
mov
test
add
push
lcall
pop
add
xchg
pop
add
add
loope
test
ja
insb
mov
popf
movsl
rolb
add
add
mov
in
lock
call
push
push
dec
xor
shr
shr
push
or
not
add
add
xor
sub
ror
add
shr
shr
pop
shr
shl
pop
push
push
lea
push
push
lea
push
call
add
sahf
add
jo
cmc
add
add
jge
scas
add
add
add
add
add
int
add
mov
mov
fs
fistpll
add
push
mov
mov
push
add
popl
int3
add
icebp
add
jmp
scas
call
xchg
movsb
rcl
js
fcomps
clc
xchg
lcall
sub
pop
pushl
call
push
add
shl
not
not
pop
call
push
push
shr
shl
push
sub
add
sub
sub
sub
not
add
rol
pop
sub
pop
push
add
lea
pop
pushl
push
sub
add
ror
shl
pop
call
push
lea
push
push
call
test
add
add
lea
addb
add
test
add
add
xchg
in
jbe
mov
cmpsl
js
add
shl
add
ja
in
hlt
pop
call
push
push
lea
push
and
add
rol
lea
sub
sub
xor
xor
sub
sub
pop
add
pop
push
lea
push
push
push
push
push
lea
push
push
call
cli
add
add
mov
push
ja
add
add
mov
lods
mov
add
jle
mov
loope
xchg
jne
mov
lds
jne
push
push
lea
push
call
add
jno
add
xchg
nop
add
mov
jno
add
je
faddl
add
jno
cli
je
push
mov
pop
fildll
lock
mov
add
add
add
add
add
add
add
sarb
add
sub
pop
call
push
push
push
lea
push
push
push
call
add
stos
incb
xchg
outsl
add
mov
push
add
xchg
mov
test
add
cmc
add
add
lock
incb
cmpsl
int3
jbe
add
icebp
add
addl
lcall
pushf
and
call
enter
pop
push
push
push
call
cmpsb
jns
mov
add
mov
mov
add
cmpsb
in
out
add
cltd
insb
ret
in
jp
add
pusha
add
fsub
sub
add
out
add
incb
sarb
cmpb
xchg
mov
loope
mov
lcall
shrb
add
push
sub
not
rol
push
sub
add
add
ror
sub
pop
shl
shr
pop
push
lea
push
lea
push
lea
push
call
std
add
mov
add
add
pusha
fisttpll
add
mov
jne
fildl
push
add
mov
add
add
add
call
in
lock
lcall
jne
push
shr
pop
call
push
push
push
push
push
push
lea
push
push
push
push
call
jae
imul
xchg
loope
test
add
add
aad
lock
add
jae
incb
out
mov
push
add
mov
in
scas
outsl
outsl
push
add
jne
add
add
add
fldl
cld
add
call
sub
pop
call
push
push
sub
ror
push
xor
add
add
add
sub
rol
rol
xor
pop
not
ror
ror
pop
push
sub
ror
pop
pushl
push
push
push
push
push
push
push
push
push
call
xchg
add
add
add
add
add
out
jge
mov
in
add
add
add
push
jmp
add
flds
mov
mov
in
fdivr
lcall
mov
add
push
inc
sub
pop
call
push
push
inc
dec
rol
push
or
not
add
add
sub
sub
dec
add
pop
xor
not
sub
add
pop
push
push
push
lea
push
lea
push
call
xchg
pop
add
loop
add
push
jo
xchg
add
nop
mov
mov
add
add
cli
jo
add
int
jmp
lods
add
jae
out
nop
add
add
jne
push
push
push
push
push
push
lea
push
call
std
into
add
add
mov
add
sub
add
nop
mov
push
popf
enter
pusha
lods
add
pop
jecxz
out
add
in
in
call
push
add
sub
add
pop
call
push
push
push
and
add
lea
shr
rol
xor
sub
shl
dec
shr
pop
add
pop
push
shl
shl
rol
dec
pop
pushl
push
shr
shl
pop
call
push
push
shl
not
push
or
not
add
lea
sub
sub
shl
not
add
pop
pop
push
push
push
push
pop
add
sub
sub
sub
pop
pop
push
shl
inc
pop
call
push
sub
dec
pop
pop
dec
jne
push
shl
rol
xor
pop
call
push
push
push
lea
push
push
push
call
add
jmp
cwtl
js
int3
fst
ljmp
add
repnz
add
mov
ret
imul
pusha
add
imul
add
loop
mov
mov
add
sub
pop
mov
push
push
push
push
lea
push
push
lea
push
push
lea
push
call
flds
js
add
clc
pop
aam
out
add
movl
add
add
rcr
mov
jo
add
add
pop
mul
add
ljmp
bound
mov
add
xlat
add
in
fdivr
lcall
add
rol
ror
pop
lea
push
push
shl
add
shr
not
push
sub
add
xor
add
sub
add
inc
pop
sub
pop
push
sub
lea
inc
pop
pushl
push
shr
add
pop
call
push
shr
shl
not
pop
push
push
lea
push
push
push
push
lea
push
lea
push
call
add
jb
insb
insb
add
xchg
add
test
add
imul
in
add
mov
pop
call
push
push
add
dec
push
or
inc
add
lea
rol
add
sub
xor
ror
sub
pop
rol
pop
push
sub
sub
lea
lea
pop
pushl
push
lea
add
add
pop
call
call
push
inc
add
not
pop
mov
push
lea
rol
shl
xor
pop
lea
push
push
add
push
or
inc
add
sub
sub
sub
xor
pop
shr
inc
not
pop
push
push
lea
push
push
push
lea
push
push
call
mov
mov
xchg
mov
imul
add
mov
add
lcall
imul
pop
pushl
push
push
push
lea
push
call
add
mov
mov
add
mov
add
mov
jmp
add
mov
add
movl
add
loope
imul
mov
add
jp
in
lock
call
push
ror
dec
ror
pop
lea
push
push
push
push
lea
push
push
call
mov
rolb
addr16
add
add
addl
lods
faddl
mov
add
pop
add
add
fwait
add
add
cltd
add
fidivs
add
add
popl
jmp
in
in
lcall
add
je
jp
cmc
dec
not
pop
push
push
lea
push
push
push
push
push
call
roll
mov
cli
add
sub
add
addb
add
loope
jmp
add
push
add
add
arpl
fnstenv
mov
add
add
add
mov
out
push
stc
add
add
mov
sub
pop
pushl
push
push
not
sub
push
or
not
add
lea
sub
ror
not
add
shl
pop
add
lea
add
pop
push
lea
rol
pop
push
push
push
push
lea
push
lea
push
call
add
add
fisubl
add
fistpll
movsb
rcrb
scas
sbbl
add
cmpsl
add
jmp
add
add
add
add
cld
lods
add
add
test
enter
add
push
cmpsl
test
sub
pop
call
push
push
sub
push
sub
add
rol
shr
not
not
sub
xor
sub
not
pop
add
pop
push
lea
rol
shr
pop
pushl
push
ror
shl
pop
call
push
push
add
add
sub
pop
call
push
push
inc
add
push
or
not
add
ror
dec
not
sub
shr
xor
xor
pop
add
sub
pop
push
push
push
push
push
push
push
push
call
lock
push
mov
mov
test
add
mov
xchg
clc
add
add
std
add
fldl
jne
mov
fistps
test
pop
int
std
pop
add
add
lcall
jne
call
push
push
push
lea
push
push
call
xchg
enter
add
loope
add
mov
add
add
xlat
add
aam
lea
add
add
fwait
addb
mov
mov
testb
lahf
sub
pop
call
push
rol
inc
xor
pop
pushl
mov
push
shr
shl
not
add
pop
jmp
push
push
not
not
push
push
pop
add
shl
lea
xor
sub
dec
pop
xor
pop
push
sub
pop
pushl
call
push
xor
pop
push
call
push
push
add
dec
lea
push
or
not
add
sub
shl
xor
dec
sub
add
rol
pop
sub
lea
sub
pop
push
lea
sub
pop
pushl
call
push
push
push
push
push
call
add
cwtl
lahf
push
add
add
add
add
mov
add
add
add
add
add
js
bound
mov
fadds
add
add
push
inc
inc
not
pop
call
push
lea
push
push
lea
push
push
lea
push
push
call
push
ljmp
pop
pop
enter
jle
scas
jl
jge
fdivrs
push
jmp
add
popa
out
ftst
fwait
mov
insb
stc
sub
pop
leave
push
push
call
add
add
add
add
xchg
pop
loopne
pop
out
mov
test
add
push
jno
cmc
test
subl
shll
lcall
add
pop
jge
roll
lock
xchg
add
add
sub
pop
add
pop
push
lea
push
lea
push
push
push
call
pushf
in
push
add
pop
out
stos
arpl
pusha
add
add
xchg
xchg
add
add
ja
loope
pop
add
ljmp
jne
in
add
repnz
lret
into
xchg
jae
mov
add
add
sahf
stc
in
add
add
add
add
lcall
pop
push
push
lea
push
lea
push
push
push
call
add
push
popf
add
add
mov
testb
out
add
ret
ret
add
add
addb
negb
add
fnstenv
in
call
xor
inc
push
lea
push
lea
push
lea
push
push
call
add
loopne
sti
jmp
cmc
cmpsb
testl
add
lods
filds
add
mov
add
in
int3
xchg
add
pop
jecxz
cltd
push
cltd
std
add
add
lock
add
lock
xlat
jns
xchg
ja
jno
add
lcall
or
leave
push
shl
add
pop
ret
push
push
push
lea
push
push
push
push
push
push
call
push
add
add
add
test
pop
cwtl
jno
jp
add
xchg
xchg
add
add
add
imul
sub
pop
mov
push
add
pop
cmpl
jne
push
lea
pop
mov
push
add
inc
pop
jmp
push
push
push
push
push
push
push
push
push
call
jns
jno
insb
add
ljmp
std
jge
add
pop
mov
mov
add
mov
and
push
push
push
push
push
push
push
push
call
jb
fiaddl
fistl
data16
add
add
add
stos
mov
lods
jge
fcoms
mov
shr
add
add
pop
add
jae
xchg
add
imul
push
add
push
add
ljmp
sahf
add
add
fstpl
loopne
lcall
leave
push
add
ror
rol
shl
pop
xor
push
xor
pop
add
xor
push
push
push
lea
push
push
push
push
call
fidivs
add
jle
add
add
mov
fidivrl
mov
addl
mov
cltd
add
add
mov
mov
mov
add
add
xchg
add
jne
mov
fs
add
andl
add
jne
lahf
jecxz
fildl
sar
sub
pop
dec
sub
push
push
call
add
add
add
add
push
xchg
mov
add
test
add
stos
add
repnz
in
mov
xchg
mov
outsl
lcall
add
add
roll
add
cli
cmpsl
bound
sub
pop
jmp
push
push
push
push
lea
push
call
add
add
xchg
add
add
add
addb
add
cltd
lcall
js
sarl
push
movsb
add
fcmovb
add
rolb
fdivrp
pop
ja
add
sub
pop
sub
pushl
push
inc
sub
sub
pop
pop
push
sub
pop
sub
cmp
jne
push
add
pop
mov
lea
push
lea
ror
pop
sub
mov
push
add
pop
shr
push
push
push
push
push
push
push
push
call
lret
mov
add
enter
add
jne
add
std
add
add
add
mov
shr
add
push
xchg
ret
mov
cmc
rclb
hlt
cmpsl
add
add
add
aam
push
movsl
lea
add
in
loopne
lcall
enter
push
not
sub
shr
pop
pushl
push
add
not
pop
pop
push
push
lea
push
push
push
push
call
mov
mov
add
push
add
add
add
push
xchg
xchg
add
add
add
jle
jmp
out
add
add
sub
pop
shr
push
push
push
push
lea
push
lea
push
push
call
add
add
test
jge
add
test
mov
enter
add
add
push
add
add
hlt
mov
jl
xchg
js
lret
pop
jne
lock
push
out
mov
add
lds
mov
mov
mov
lcall
loope
incl
add
mov
stc
scas
imul
jge
push
push
lea
push
lea
push
push
call
add
add
add
add
loopne
add
add
jecxz
lds
push
add
lcall
add
in
out
ret
addb
js
in
fcompl
jmp
cmp
jne
push
push
push
lea
push
push
call
shrl
jne
lock
push
add
mov
loope
jns
jmp
add
add
out
std
add
std
add
pop
add
push
sub
xor
pop
ret
push
sub
pop
push
mov
push
push
push
lea
push
call
js
movsl
loopne
pusha
xchg
int3
int3
add
add
mov
loope
mov
out
hlt
jmp
divb
lcall
jno
jge
cmpsl
iret
xlat
fwait
mov
cwtl
add
in
mov
in
lock
add
push
dec
xor
pop
push
push
push
lea
push
push
push
push
call
add
mov
leave
add
xchg
mov
mov
xchg
rolb
cltd
mov
push
hlt
add
xchg
fisubl
add
add
pushf
add
hlt
add
add
iret
mov
xchg
mov
sub
pop
push
push
push
lea
push
push
call
add
fucom
ja
add
popa
loop
add
test
add
nop
add
js
pop
add
in
test
outsl
add
add
cmc
xor
lahf
add
mov
test
addr16
add
std
push
in
hlt
lcall
push
shr
shl
ror
pop
mov
lea
push
lea
push
call
cmpl
out
add
iret
out
mov
add
sahf
data16
add
les
add
fiaddl
add
jmp
nop
add
lahf
sub
pop
sub
push
push
push
push
push
push
push
push
call
add
add
js
add
add
cmpsb
jle
movsb
add
aam
push
add
loopne
jne
out
push
int
jle
add
loop
mov
addb
andl
test
jno
add
stc
jl
leave
add
push
les
add
push
add
lret
add
jnp
add
sub
pop
mov
shr
push
lea
push
call
cmpl
sti
add
pop
lods
add
mov
add
xchg
movsb
fdivp
cwtl
repnz
add
jmp
add
popf
movb
cld
mov
mov
rcrb
shl
add
into
add
ljmp
mov
add
ficoml
sarl
pop
pop
mov
add
push
push
push
push
push
lea
push
push
push
lea
push
push
call
add
mov
add
jns
cld
call
add
icebp
mov
add
jae
add
add
addb
add
or
mov
add
add
add
xchg
add
clc
add
ret
popf
jmp
add
outsl
add
jnp
push
push
push
push
lea
push
push
push
lea
push
push
call
add
out
jnp
lret
je
add
add
scas
add
add
pop
fimuls
scas
lds
js
jne
mov
mov
pusha
add
sub
pop
add
push
push
call
addl
in
pop
add
cmc
push
pop
add
xchg
push
add
add
jle
mov
jno
add
lretw
iret
movsl
add
add
rol
add
jecxz
mov
mov
add
add
add
add
add
in
clc
pop
xor
push
push
push
lea
push
push
lea
push
push
lea
push
call
rorl
add
mov
test
add
lock
fistpll
mov
popl
add
lahf
add
int
add
test
mov
push
lea
push
call
push
jmp
add
add
add
jp
mov
add
add
mov
add
lret
add
out
add
in
in
clc
lcall
loopne
rol
push
lea
pop
rol
push
push
push
push
push
push
push
lea
push
lea
push
call
test
leave
add
add
jno
out
repnz
add
pusha
add
pusha
enter
outsl
roll
insb
mov
add
mov
clc
sub
pop
xor
push
shl
dec
dec
add
pop
inc
push
add
pop
cmpb
jne
push
push
call
lods
mov
add
add
fildl
add
add
xchg
movsl
arpl
lret
add
push
loop
lret
add
out
add
into
add
add
push
mov
add
in
clc
lcall
inc
pop
ss
push
lea
push
push
push
call
mov
add
in
test
add
push
test
fs
data16
jmpw
stos
pusha
add
out
add
add
cmc
icebp
add
ret
add
popa
add
pusha
ret
iret
add
lock
cmp
je
push
push
push
push
push
push
lea
push
push
lea
push
push
call
lods
xchg
xchg
add
ret
gs
add
mov
scas
add
lods
enter
cmc
add
add
rcll
pop
lock
mov
jo
add
pop
add
cmpsl
add
imul
add
in
loop
add
add
add
cmc
push
xlat
mov
add
ret
lret
sub
pop
add
push
push
call
test
pop
lret
add
lcall
add
add
add
scas
lahf
jmp
mov
add
rorb
add
stc
add
out
add
add
add
jne
add
movsb
lea
in
hlt
add
cmpl
jne
push
push
push
push
push
push
push
call
sti
mov
jo
add
ret
js
arpl
clc
jge
push
mov
jle
rcrl
add
jno
add
loop
add
add
add
incb
cmpsb
mov
iret
scas
fcmovne
sub
pop
xor
push
shl
not
not
pop
pop
pop
push
lea
push
push
push
push
lea
push
push
push
lea
push
call
bound
iret
add
addr16
cmpl
movsb
jae
add
add
add
add
sti
mov
add
add
mov
add
add
ficomps
add
fistpll
add
lods
add
data16
jbe
xchg
jp
loope
add
mov
sub
pop
pop
push
push
call
xchg
add
lret
add
add
loope
xchg
add
mov
stos
out
push
add
xchg
add
add
pop
add
add
addb
in
clc
lcall
push
sub
dec
pop
pop
push
push
push
push
lea
push
lea
push
lea
push
push
push
call
imul
shrl
add
test
add
add
imul
pushf
andl
arpl
lds
test
add
js
imul
add
pop
pop
scas
push
add
xchg
std
ret
out
add
faddl
xchg
add
add
into
int
addl
sub
pop
leave
ret
push
lea
push
call
cli
test
mov
popl
add
add
cmp
cmpsb
outsl
ret
ficomps
add
add
into
add
jp
push
push
mov
jmp
pusha
add
add
sbbb
add
mov
mov
lcall
push
adc
ror
pop
add
push
dec
pop
mov
push
push
push
push
lea
push
call
add
add
aam
add
push
lahf
add
mov
jnp
add
add
repnz
mov
sarl
fbstp
rolb
mov
add
add
aam
cld
jecxz
push
add
aad
sub
pop
cmpb
push
dec
ror
sub
pop
call
push
push
push
push
push
push
push
push
push
call
in
repnz
in
lcall
test
in
mov
add
add
mov
add
add
xlat
add
mov
mov
mov
clc
iret
add
jne
test
lret
mov
clc
add
jo
sub
pop
call
push
lea
push
lea
push
push
lea
push
push
lea
push
push
push
call
jl
lods
clc
jle
iret
in
aad
jo
cltd
add
imul
fildll
ljmp
mov
add
loop
filds
xchg
jecxz
into
add
outsl
add
repnz
fcompl
xor
pop
push
not
add
pop
pop
pop
push
push
push
push
push
push
push
lea
push
call
mov
add
mov
fs
add
add
sarl
fs
lods
add
add
test
mov
clc
cltd
jmp
jecxz
roll
add
loope
lock
add
add
hlt
push
mov
sahf
sub
pop
pop
push
shl
add
rol
pop
pop
push
inc
pop
leave
push
lea
push
lea
push
push
call
xchg
add
add
add
add
add
mov
add
call
pop
xchg
add
add
mov
jmp
add
add
mov
xchg
jbe
lahf
add
ljmp
lea
les
add
push
bound
in
jb
push
jne
jne
mov
sub
pop
ret
push
pop
push
push
lea
push
lea
push
push
push
push
push
push
call
pusha
int
flds
in
stc
add
rolb
add
jb
add
add
cld
icebp
add
ret
hlt
jnp
add
add
cltd
insb
push
push
mov
lods
sub
pop
mov
push
push
lea
push
lea
push
push
push
call
add
add
mov
push
ficomps
add
push
mov
cwtl
lds
imul
lds
stc
testl
mov
mov
hlt
pop
cmc
add
add
add
cwtl
aam
add
add
ficoms
loope
add
add
add
lcall
hlt
push
pop
push
push
not
pop
push
push
sub
sub
shl
pop
push
push
push
lea
push
push
push
push
push
lea
push
push
push
lea
push
call
addr16
add
add
fwait
add
add
add
cwtl
movsb
lods
lret
add
mov
add
add
mov
ja
pusha
rcrl
add
movsb
push
add
add
sub
pop
mov
push
push
lea
push
lea
push
call
add
out
fldl
cltd
gs
outsl
pusha
add
mov
fabs
mov
push
mov
push
rclb
test
add
add
ja
in
add
aam
gs
mov
add
test
add
loope
enter
lock
lcall
push
shl
pop
pop
push
sub
pop
lea
sub
push
push
lea
push
push
call
hlt
mov
cltd
add
movsb
js
lret
pusha
add
xchg
add
push
xchg
add
add
add
sarb
fildl
add
testb
sti
push
stos
sub
pop
mov
push
push
push
push
lea
push
push
call
add
add
add
add
add
add
je
add
push
add
aad
add
shlb
in
lret
xlat
add
fsts
add
add
add
add
mov
mov
rcr
add
xchg
mov
js
data16
xlat
xchg
scas
add
lcall
ljmp
add
push
pop
mov
push
dec
pop
add
pushl
push
add
inc
dec
pop
popl
push
inc
pop
mov
push
push
push
push
call
fcoms
lcall
fnsave
std
addl
add
mov
mov
add
lds
addl
adc
add
repnz
add
add
add
add
ja
add
jmp
je
rcr
movsl
add
lcall
stc
push
push
push
push
call
ffreep
popf
mov
cwtl
pop
out
lds
outsl
add
xchg
in
jns
xchg
in
add
into
pushf
mov
cli
sub
pop
xor
lea
push
lea
push
push
call
add
add
jecxz
lods
add
cmpsb
out
repnz
adc
add
add
add
add
add
pusha
add
jmp
out
lahf
sub
pop
mov
add
push
push
call
add
cld
add
add
add
xchg
xchg
popf
add
rolb
pop
cmc
mov
jns
lods
cmpsb
aad
pop
mov
idivb
push
pop
out
add
push
sti
cli
add
jge
mov
pop
lock
pop
mov
add
add
mov
fsubs
add
sub
pop
xor
push
shl
pop
rol
push
shr
pop
nop
push
add
add
shl
pop
nop
xor
push
push
push
push
call
push
mov
add
lea
movsb
loopne
add
mov
fisubrl
mov
add
out
aad
push
add
ljmp
add
xchg
add
add
add
repnz
add
rolb
add
add
scas
jp
in
lock
nop
push
shl
dec
pop
nop
push
shl
pop
inc
push
lea
push
lea
push
push
push
push
push
lea
push
call
add
add
sbbl
add
in
into
add
leave
mov
add
fyl2xp1
cmpsb
add
fistpl
add
imul
out
je
add
add
fs
rcll
add
add
add
add
jmp
add
jmp
add
push
shr
inc
dec
pop
nop
push
not
pop
cmpb
jne
push
not
inc
pop
add
push
dec
sub
pop
nop
nop
push
push
push
push
push
lea
push
push
call
addl
imul
popa
push
lret
add
pop
add
add
mov
xchg
sahf
gs
jp
ret
mov
fnstenv
popa
add
lock
add
clc
add
add
add
mov
push
sub
pop
cmp
je
push
push
push
push
push
push
push
lea
push
push
call
repnz
outsl
in
clc
add
add
add
add
add
js
add
int
add
fldl
mov
add
xchg
pop
cmc
add
add
pop
repnz
lock
test
add
mov
add
xlat
mov
leave
in
bound
ljmp
add
sub
pop
nop
nop
push
shl
pop
inc
nop
push
sub
dec
add
pop
nop
push
pop
cmp
jb
xor
push
push
push
lea
push
push
call
mov
add
cld
add
mov
pop
aam
add
add
je
lret
lcall
jnp
add
repnz
add
add
push
arpl
xchg
cltd
add
ljmp
fiaddl
fsubl
pop
movl
add
mov
add
shrb
cltd
lahf
pushf
sub
pop
jmp
mov
push
xor
xor
pop
add
push
shr
pop
movzwl
push
lea
pop
mov
push
push
push
push
push
call
add
test
push
cltd
icebp
add
into
add
add
adcb
xacquire
lea
mov
stos
lcall
add
fwait
int
add
lcall
rcll
call
lods
mov
mov
sahf
lds
into
add
add
iret
outsl
jne
add
push
lock
add
out
lahf
add
popa
add
mov
xchg
add
in
add
lea
add
sub
pop
mov
push
lea
push
push
push
push
push
push
call
cwtl
mov
add
add
add
add
idivl
add
mov
stos
ficoml
mov
into
mov
jns
sub
pop
xor
push
sub
inc
pop
xor
shl
push
inc
add
shl
pop
xor
shl
push
add
pop
xor
push
push
push
push
lea
push
lea
push
push
push
push
call
mov
jo
add
scas
mov
mov
test
clc
pushf
add
bound
push
add
pop
fdiv
test
fs
cmc
in
add
rorb
add
add
add
add
pop
add
mov
test
popl
lcall
loope
push
add
pop
xor
mov
push
dec
pop
add
pop
push
push
lea
push
call
pop
add
add
mov
mov
movsb
add
add
add
popf
add
in
shlb
sub
pop
pop
push
push
push
push
call
add
loop
add
add
nop
movsl
icebp
mov
mov
add
mov
in
popa
push
cld
push
mov
add
mov
add
add
sub
pop
pop
push
push
push
push
lea
push
call
movsl
push
jp
add
add
insb
in
add
add
add
add
jge
mov
add
fiaddl
add
add
data16
add
mov
add
pop
cmpsl
add
aad
jl
les
lcall
leave
push
add
shr
add
pop
ret
push
push
push
push
push
push
push
lea
push
push
call
add
xchg
pusha
add
pusha
fcmovu
add
mov
add
add
add
pop
call
fwait
add
add
add
mov
mov
int
lcall
add
add
jp
add
mov
jns
add
add
lods
shrl
lcall
in
push
push
push
push
lea
push
call
fiaddl
mov
add
jns
add
add
add
loope
loop
popf
add
stos
xchg
add
lcall
mov
add
xlat
add
pop
add
mov
add
lcall
pop
push
push
inc
sub
pop
push
push
add
xor
shr
pop
push
push
shl
pop
mov
push
lea
push
push
push
push
call
mov
int
je
add
in
add
int
icebp
cwtl
fiadds
arpl
pop
push
mov
jns
mov
add
add
movl
add
sub
pop
mov
push
push
call
add
movl
lcall
add
movsb
in
push
lods
mov
mov
test
add
out
add
add
add
jb
push
add
je
jmp
mov
test
sub
pop
mov
push
add
shr
sub
not
pop
test
je
mov
push
push
push
push
push
call
add
clc
loope
jle
pusha
flds
xchg
movsl
add
loop
pop
jne
je
xor
pop
test
add
add
add
add
scas
mov
xchg
mov
add
roll
andl
jno
push
add
add
fiaddl
lcall
add
add
mov
cli
push
gs
add
sub
pop
test
je
push
shl
sub
pop
mov
push
rol
pop
mov
push
pop
mov
push
pop
inc
push
lea
pop
cmp
je
push
add
add
pop
test
je
mov
push
lea
push
push
push
push
push
push
lea
push
lea
push
lea
push
call
jne
add
push
lcall
imul
xchg
mov
js
add
mov
add
mov
cmpsb
push
clc
add
in
fcomps
cmp
je
push
push
call
mov
mov
mov
stc
lock
add
add
mov
add
shrb
add
loope
in
out
sahf
push
mov
sub
pop
test
jne
push
lea
push
lea
push
lea
push
push
push
push
push
call
pop
jmp
add
nop
jmp
mov
jecxz
jmp
add
in
mov
fiaddl
std
xchg
add
add
add
dec
jno
les
js
jmp
test
add
mov
add
jo
add
add
add
jns
in
loopne
xor
push
dec
pop
pop
push
inc
xor
pop
pop
push
lea
push
push
push
call
add
mov
enter
jmp
leave
add
roll
mov
jae
add
mov
insb
xchg
stos
std
add
je
popf
mov
sarb
push
rolb
mov
jnp
add
popa
add
hlt
add
nop
addl
add
add
add
add
jmp
add
add
iret
add
lcall
pop
push
push
push
push
push
push
lea
push
lea
push
push
lea
push
call
add
add
fwait
stos
mov
movl
sti
outsl
shr
stc
mov
scas
test
enter
imul
lds
mov
add
add
fcomps
ret
push
push
push
push
push
call
cwtl
add
add
aam
jb
add
mov
add
lock
les
repnz
rolb
mov
jl
add
pop
add
jecxz
add
aam
cwtl
out
jmp
fistps
add
add
sub
pop
mov
inc
push
push
push
call
add
in
pop
mov
sahf
add
jge
add
into
add
add
pushf
mov
push
add
in
jbe
add
fiadds
pop
lock
add
add
add
in
hlt
lcall
lock
push
lea
add
inc
sub
pop
lea
push
shr
lea
rol
pop
mov
push
shr
pop
test
je
push
not
shr
add
pop
mov
push
shl
lea
lea
pop
add
push
sub
pop
cmp
jne
push
push
push
push
push
push
call
add
mov
jl
mov
push
add
add
gs
les
mov
push
out
clc
add
popf
add
jecxz
add
imul
xorl
add
add
outsl
aam
pop
add
pop
add
call
xchg
mov
rolb
loopne
push
add
sub
pop
mov
push
push
push
lea
push
push
call
jle
jecxz
add
add
iret
in
add
jnp
loop
add
lahf
add
add
lret
add
popa
add
outsl
xchg
add
add
add
icebp
test
shll
add
add
pop
into
add
add
add
shl
sub
pop
test
je
push
push
push
push
push
push
call
movsl
mov
aam
test
mov
mov
popl
add
add
jb
ret
add
shlb
mov
add
test
add
lcall
callw
jecxz
inc
pop
add
push
shr
rol
shl
sub
pop
cmp
je
push
push
call
add
add
mov
add
mov
xchg
jl
leave
jns
xchg
cmpsl
call
in
add
add
gs
add
pop
fcoml
jmp
push
xor
rol
pop
xor
push
push
push
lea
push
push
call
add
jne
mov
nop
loopne
insb
mov
stc
add
jle
add
add
fbld
pop
sub
icebp
add
add
mov
sub
pop
pop
pop
push
add
sub
add
pop
pop
push
sub
inc
pop
pop
push
lea
push
push
lea
push
push
push
push
push
push
call
add
mov
int3
add
int
add
pop
add
nop
pop
add
pop
xchg
add
push
xlat
add
add
add
add
push
push
add
mov
add
add
cwtl
clc
add
add
add
push
sub
pop
leave
push
push
lea
push
push
push
lea
push
push
push
push
call
add
loop
in
jae
push
mov
add
add
add
out
jl
xchg
add
add
mov
add
add
xchg
clc
lds
popa
add
cld
sahf
add
add
popa
add
lret
ror
aam
pusha
imulb
push
sub
pop
ret
push
not
pop
lea
push
push
push
push
call
pop
sub
scas
pop
add
cmc
add
out
add
fs
lret
add
add
fadd
fcom
add
add
rolb
add
add
cmpsb
add
mov
movsb
add
add
add
add
mov
sub
pop
pop
push
push
push
push
lea
push
push
push
call
add
add
xchg
add
add
rolb
lret
jo
add
out
add
add
lods
int
in
add
mov
cli
hlt
push
mov
test
in
add
pop
ljmp
mov
add
in
pop
push
pop
pop
push
sub
not
ror
shr
pop
pop
push
push
push
push
lea
push
push
lea
push
push
call
add
add
pusha
add
faddl
push
pop
in
frstor
add
rclb
out
roll
sar
fs
add
ret
jbe
scas
add
pushf
fs
mov
fcoml
jle
lahf
add
cmc
lcall
lods
mov
cmpsl
add
xchg
push
cwtl
out
sub
pop
leave
push
lea
push
lea
push
push
push
lea
push
call
into
add
fiaddl
mov
jp
mov
xchg
xchg
add
add
mov
xchg
add
stc
add
add
add
add
add
mov
add
popa
mov
add
add
add
mov
stos
add
mov
add
outsl
cmpsb
add
faddl
lcall
or
mov
push
pop
pop
push
push
call
jge
jmp
lea
addl
loopne
add
jno
xlat
add
jp
add
in
add
rolb
imul
ficoml
add
insb
lret
cld
add
rclb
fldcw
fbstp
cmc
clc
decb
add
popa
sub
pop
pop
push
inc
pop
pop
push
push
push
push
lea
push
call
add
add
cmpsb
out
rolb
enter
add
add
cmpsl
add
std
mov
add
rolb
push
lea
push
push
push
push
push
call
add
add
xchg
mov
aad
add
jge
add
add
add
pop
mov
rolb
add
pusha
test
jp
mov
jnp
lds
fisubrs
pop
cmc
mov
add
add
addb
push
sub
pop
leave
push
xor
sub
pop
ret
lods
dec
in
lret
out
lret
out
lret
ljmp
stos
out
lret
out
lret
out
lret
out
lret
out
lret
in
lret
add
mov
loop
push
pop
mov
ljmp
jo
mov
sub
jg
addr16
nop
adc
or
rorb
push
pop
push
int
mov
out
sbb
imul
inc
test
mov
push
push
inc
add
lock
push
or
cmc
mov
jne
dec
cmpsl
mov
movsb
add
mov
js
and
andb
test
imul
jecxz
aaa
add
cmpsl
testb
lods
aad
mov
rcll
or
testb
andl
popl
sub
add
je
jo
test
je
bound
aas
mov
sub
cmp
push
out
dec
push
push
in
pushf
or
push
cmc
rcrb
pop
jo
cmp
test
cld
or
jge
inc
mov
scas
adc
mov
jo
pop
mov
mov
dec
cmc
daa
push
mov
xlat
sub
mov
jo
cmpsl
sbb
daa
subps
cs
dec
repnz
jmp
adc
cs
mov
sbb
bnd
push
das
insb
dec
push
lcall
stos
inc
mov
aam
add
iret
or
jle
sahf
cld
cmp
adc
cs
incl
and
popf
pop
adc
push
inc
jb
mov
mov
std
test
mov
dec
repnz
add
xor
jno
clc
fs
movsb
mov
scas
mov
mov
int
clc
mov
mov
inc
dec
rcl
das
lcall
sub
js
push
mov
mov
xor
shrb
mov
sub
xchg
mov
add
shrb
add
mov
ljmp
loope
cmp
push
mov
sbb
cwtl
xor
stos
xor
dec
popa
fs
idivl
cmpsb
or
pop
mov
jle
or
das
scas
push
jne
out
mov
xor
sbbb
push
psrlw
inc
adc
push
xchg
out
sub
add
fldenv
imul
pop
enter
les
lea
outsb
aas
call
loop
stos
dec
es
jo
sub
inc
in
fldlg2
fstpt
mov
jne
int3
push
push
or
xchg
lcall
mov
and
cli
arpl
stos
test
push
dec
out
xchg
imull
in
push
jne
std
outsb
sbb
xchg
cmp
jecxz
ss
xor
std
cmpsl
out
xor
pushf
ret
pop
dec
mov
mov
mov
aad
dec
inc
push
jo
ja
cmpb
jle
pop
mov
push
lods
popf
cli
es
mov
subb
movsl
adc
fwait
pop
pop
cltd
mov
jp
mov
out
or
scas
scas
popf
xchg
inc
es
test
test
xchg
mov
mov
aam
add
dec
xchg
notl
pop
pop
xchg
incb
cmp
call
sub
inc
lret
sub
sti
insl
cmc
sti
ja
jb
or
push
cmp
or
outsb
xor
push
pop
aaa
and
mov
add
orl
pop
inc
in
lds
push
mov
inc
movsl
pop
mov
sbb
aaa
mov
inc
mov
jge
push
add
in
stos
testb
out
icebp
cld
mov
popf
dec
adc
inc
mov
sahf
cld
sub
xchg
int3
adc
dec
xor
jmp
push
jmp
mov
fisttpll
filds
ds
call
ja
xchg
push
pusha
pop
shll
je
out
out
icebp
sub
sub
lods
test
lods
add
sub
addl
movsb
mov
fidivrs
cmpsb
jnp
push
or
testb
push
dec
jne
xor
jne
jmp
cwtl
sbb
xchg
in
and
or
in
adc
push
or
jecxz
dec
mov
pop
xor
lcall
fildl
inc
push
xchg
or
shl
xchg
addr16
testl
push
test
mov
jns
adc
mov
jge
sbbl
into
iret
ja
das
loop
and
outsb
jns
jno
scas
xchg
out
jns
mov
popf
ljmp
inc
jbe
pop
mov
das
push
repz
cs
xchg
mov
mov
jmp
sbbl
sbb
jo
bound
lcall
jbe
sub
and
shll
xchg
xchg
adc
cmovp
loop
in
in
push
sbb
sbb
push
enter
inc
pusha
das
in
les
out
and
sbb
mov
icebp
sub
adc
inc
jmp
ljmp
push
pushf
test
mov
test
lahf
jo
adc
cs
nop
inc
mov
adc
jo
pusha
sar
repnz
jne
xchg
fstpl
flds
data16
inc
dec
xchg
adc
xchg
lock
leave
dec
adc
sbb
pop
xor
insb
and
jge
lcall
jno
jl
jle
jns
lods
pop
push
sbb
out
mov
jp
ffreep
rolb
icebp
bound
add
test
rcrl
dec
adc
cmp
mov
fistpl
bound
push
sub
shlb
addr16
test
push
cmpsb
out
aas
push
jge
xchg
inc
int3
jp
psubq
mov
mov
push
mov
std
jmp
mov
fsubl
out
lret
pop
outsb
pop
bnd
cltd
mov
add
shr
push
ljmp
pop
mov
ja
cli
pop
out
repz
insl
cmp
imul
flds
in
enter
sbb
push
int3
js
test
xor
and
mov
fdivrl
sbb
leave
add
xor
insb
xlat
fbld
in
inc
cmp
repnz
fidivrl
jne
mov
out
jmp
jg
lods
inc
ja
mov
cmp
movsl
lds
out
pop
aad
movsl
or
adc
xor
sub
cli
cmp
add
movsl
stos
mov
jo
push
push
lock
repz
aaa
cmp
adc
push
mov
xchg
repnz
fistpll
idiv
dec
or
jae
lret
out
negl
xor
dec
push
and
in
mov
mov
pop
fldl
aam
fiadds
scas
out
mov
and
and
adcl
fisttpl
sbb
cwtl
jp
and
xchg
cli
leave
jle
fstpl
movsl
add
mov
cli
sbb
fwait
add
out
sub
clc
aam
scas
jle
cmpb
mov
xchg
xor
fwait
or
xchg
mov
xchg
popa
or
outsl
adc
mov
outsl
leave
mov
add
data16
jb
addr16
cmp
gs
mov
out
xchg
shr
in
xor
negl
xor
lods
xchg
pop
scas
mov
lret
dec
shlb
je
out
dec
mulw
ret
movsl
sub
sub
arpl
inc
rcl
clc
out
dec
jg
scas
mov
xor
sub
inc
fistl
int3
sbbl
sub
ja
cs
int
insl
mov
adc
jecxz
cltd
lock
cmp
test
add
xchg
jns
jmp
mov
sub
lds
repz
out
movsl
inc
movsl
dec
jns
ljmp
clc
es
testl
mov
dec
xchg
aas
mov
fucomip
ljmp
sti
cmp
rcl
xlat
xor
mov
scas
sub
jnp
inc
out
es
js
jbe
inc
fnstenv
jnp
and
aad
inc
ret
xorl
cs
sahf
xchg
adc
sahf
or
dec
sti
mov
xorb
mov
fmulp
fcoml
adc
mov
jp
lea
je
adc
stos
push
cli
sub
xor
add
add
cmp
or
orl
inc
push
pop
and
stos
mov
adc
ja
and
or
mov
in
in
or
add
daa
imul
loop
cs
flds
cmpxchg
outsb
sar
cmp
push
pop
and
push
push
in
mov
push
and
xor
mov
add
adc
mov
fsubrl
jb
popf
jl
fiadds
stos
xorb
mov
stos
mov
mov
pop
lds
adc
scas
mov
imul
pop
dec
xor
add
pop
repnz
and
sbb
dec
outsb
outsb
in
jecxz
pop
arpl
leave
cs
jge
mov
je
mov
xchg
fsubs
dec
lds
call
jbe
movsb
mov
lret
xor
mov
inc
adc
loope
sub
aad
test
test
push
adc
cmp
pushf
or
mov
inc
cmp
rclb
pop
adc
sbb
mov
add
loope
and
clc
test
push
mov
lahf
addr16
in
jg
fwait
popa
xchg
fidivl
push
dec
popf
pop
ljmp
popf
lock
mov
jg
test
mov
mov
pop
mov
es
and
jnp
dec
movsb
repz
in
cmp
or
xor
cmp
sub
push
xor
sbb
and
call
adc
pop
mov
das
push
mov
je
jge
fnstsw
shlb
xchg
jae
xchg
shrb
rcl
out
repz
jb
or
adc
mov
cmp
mov
sub
in
adc
jge
cli
mov
loope
jecxz
movb
fisttpl
add
mov
dec
loopne
imul
ljmp
xor
xor
into
mov
lds
and
xor
fildll
aas
and
push
nop
xchg
int
aad
je
push
dec
test
push
loop
add
jmp
jl
cmpsl
mov
pusha
fcmovbe
lahf
pusha
std
push
sahf
or
cmp
mov
pop
clc
lds
inc
int
stc
popf
mov
shll
xor
adc
js
push
push
lea
push
inc
rcrb
and
sub
or
in
ljmp
ds
cmpsb
xlat
fiadds
sar
dec
push
ja
imul
mov
cmp
or
push
mov
pop
leave
mov
and
sbb
pusha
push
xchg
mov
enter
jp
and
sub
test
xchg
fs
xchg
push
xchg
outsl
add
loop
lcall
xor
jbe
add
out
pusha
mov
and
daa
sahf
xchg
add
cmp
cmpl
in
mov
jge
fwait
lcall
ljmp
pop
dec
cltd
addr16
push
mov
pop
dec
mov
push
or
sub
mov
icebp
dec
aas
pusha
add
in
mov
sbb
xlat
sahf
jb
popa
push
neg
pop
aad
cli
push
xor
xlat
fisttps
rorb
adc
mov
sub
test
dec
sarb
pop
xlat
pushf
ret
sbb
in
insl
fucom
mov
sbb
arpl
mov
mov
cmp
jle
jge
ret
insl
add
les
xchg
clc
jae
lods
push
aas
dec
push
mov
push
jmp
aam
jg
xlat
dec
ss
sub
loope
scas
lret
js
hlt
mov
mov
mov
jge
mov
sahf
lods
mov
jne
push
lret
insl
sbb
out
stc
xchg
mov
outsw
std
pop
dec
mov
cltd
sti
shll
fsubs
in
fsubrl
and
call
fcomps
cmp
sub
sub
pmulhuw
mov
rcr
or
cmpsb
adc
loopne
repnz
aas
vunpcklps
sbb
aaa
mov
pop
jle
mov
cmpl
in
xchg
out
add
lds
mov
fdivr
fsts
or
stos
xchg
outsl
test
movsb
lahf
mov
pusha
popf
mov
jge
push
and
cmp
adc
jg
jg
and
in
jo
and
mov
or
rcrb
xchg
stc
fidivrl
pop
jbe
mov
insb
cmp
inc
sbb
xor
lahf
mov
test
inc
adc
inc
adc
mov
cwtl
mov
loop
dec
imul
jno
xchg
xlat
xchg
mov
sti
xor
call
clc
cwtl
inc
xchg
fists
imul
xor
push
pop
ss
mov
outsb
test
aaa
mov
and
sbb
jbe
mov
xor
out
bound
mov
dec
es
dec
ss
fldt
push
stos
je
repnz
inc
mov
aas
js
mov
fstl
cmp
cmp
mov
sub
inc
or
mov
test
sbb
jl
sbb
jns
xor
fmull
inc
push
inc
and
dec
stc
mov
sub
cmp
cmp
and
inc
jg
cmp
lahf
dec
add
jg
inc
jne,pt
xor
cmp
sub
dec
and
mov
sbb
cld
adc
js
enter
fadd
cmovo
inc
nop
sarb
or
xchg
inc
jge
out
pop
xchg
pop
aam
mov
push
cmp
out
aas
xor
sub
out
cld
shlb
sub
or
cwtl
icebp
sub
cmp
pop
in
adc
cs
dec
ret
mov
mov
jbe
out
pop
cmp
imul
lret
adc
jae
inc
loop
inc
jmp
jle
cmp
cmpsl
dec
pop
iret
flds
mov
mov
pop
cs
xchg
sub
fucomp
imul
cmc
ja
mov
mov
jp
push
or
mov
out
pop
xor
and
in
cltd
jbe
ds
sub
ja
sub
je
popf
sub
pop
xchg
cmp
sub
or
xchg
cmpsb
ret
fbld
into
add
cmp
stc
test
leave
cs
xor
adc
shll
sbb
pop
outsb
push
cli
lods
and
cli
je
movsb
lcall
jno
scas
jno
cwtl
out
mov
loop
mov
sbb
bound
addl
cltd
pop
outsb
pop
in
sahf
add
dec
imul
je
cmp
inc
mov
or
xchg
shlb
mov
push
leave
test
mov
mov
aam
mov
jmp
push
adc
pushf
je
adc
sbb
sub
inc
sarb
iret
repnz
mov
out
dec
mov
pop
int
cli
ss
jae
and
sub
sub
sbb
xlat
test
enter
ret
iret
jge
mull
cld
cli
add
test
fistps
loop
flds
push
loope
mov
push
mov
adc
ret
out
or
mov
sub
stc
clc
andl
mov
daa
les
loopne
adc
inc
adc
scas
mov
adc
jmp
icebp
xchg
mov
clc
fstp
mov
mov
in
scas
out
sbb
xor
lret
stc
insb
out
loopne
pop
sub
inc
xchg
outsb
jae
xor
inc
gs
add
xor
push
jbe
and
outsl
xchg
fwait
cmpsb
ds
shr
int
in
mov
jo
adc
cmpsl
and
push
ret
loop
leave
fdivr
add
stos
sti
xchg
and
into
inc
jbe
cmc
dec
cmp
mov
dec
ljmp
push
or
loop
fwait
xchg
aaa
mov
cltd
inc
xchg
push
dec
leave
aad
mov
rcll
xchg
mov
dec
ret
or
loope
push
mov
lahf
xor
aad
jle
addb
mov
sti
ljmp
pop
shll
pmuludq
roll
mov
sub
mov
mov
dec
cmp
jno
push
test
fisubrs
enter
jo
bound
xor
cs
pop
clc
pop
fdiv
jge
or
cld
and
cwtl
pop
js
inc
adc
cli
dec
mov
xchg
rcl
test
sbb
lods
jl
xor
xor
xchg
out
and
lods
xchg
pop
xor
cmpsl
xchg
push
mov
fcoml
popf
js
add
inc
cli
mov
inc
loop
jl
fdivs
push
adc
mov
mov
out
pop
mov
adc
dec
mov
int3
out
adc
not
add
xchg
scas
fcomps
add
in
nop
inc
minps
rcrl
jle
pop
cltd
stos
out
inc
inc
xor
adc
pop
dec
push
inc
jecxz
xor
ljmp
sbb
ficomps
mov
imul
cmpsl
cmp
gs
es
fidivrs
std
xor
push
jp
dec
out
or
inc
sbb
pop
aas
mov
sbb
clc
aas
popf
mov
insl
xchg
jge
out
aam
mov
adc
fdivl
fidivrs
cmpsl
jmp
cmp
inc
xchg
inc
lret
lds
cmc
js
jmp
xlat
js
data16
add
scas
sti
and
xor
adc
inc
dec
ret
dec
sbb
popf
popf
pop
pop
test
push
cltd
cmc
out
fistpl
lcall
out
sbb
inc
or
sub
ficoml
outsl
notb
adc
clc
or
dec
pop
dec
daa
stos
fs
xchg
mov
in
lock
dec
mov
leave
dec
jmp
dec
xchg
decb
stc
aas
push
pop
shlb
cmpsl
mov
in
adc
std
or
sub
pop
iret
in
aas
fstl
mov
mov
adc
aam
xor
test
push
cltd
test
je
push
sub
daa
xor
addl
pop
cmpsl
mov
es
push
xor
push
aad
shr
inc
pusha
lea
lea
jg
dec
test
popa
daa
push
push
cs
mov
push
pop
iret
dec
dec
pop
pushf
or
popa
add
ret
sub
push
int
mov
mov
outsb
sahf
xchg
sar
lds
lds
imul
lcall
test
cmpsl
sti
push
pop
or
adc
mov
push
sbb
or
aam
out
fimull
mov
jb
fsub
aaa
popa
int
mov
xor
or
or
jbe
cmpsl
mov
lds
lret
inc
pop
jge
push
pop
lea
or
shrb
cmpsl
or
pushf
adc
les
lahf
sub
ljmp
xchg
dec
adc
or
mov
jle
sub
mov
mov
and
dec
push
xor
outsl
loope
mov
loope
lahf
push
inc
add
pop
jl
and
inc
sahf
or
jns
lea
scas
and
add
rolb
movsb
lahf
or
stc
pop
and
inc
xchg
pop
addl
inc
inc
adc
adc
test
icebp
cmp
sbb
ret
or
shrl
test
pop
cli
sti
fidivl
rclb
repnz
or
push
xor
ljmp
adc
inc
adc
inc
dec
push
add
test
adc
dec
inc
jp
xlat
adc
popa
fidivrl
mov
nop
rsqrtps
dec
pop
sbb
jbe
mov
xchg
insb
pusha
mov
adc
inc
sahf
divl
inc
inc
rorl
dec
pop
movsl
popl
xchg
stos
lods
xchg
sub
jno
inc
pop
mov
mov
and
std
and
xchg
inc
pop
add
mov
lods
push
mov
cmpb
jmp
rcll
pop
rol
lods
push
icebp
pop
inc
loope
sub
test
sub
pusha
dec
aad
fdivl
push
sbb
push
stc
sti
cmp
inc
or
jp
clc
fs
std
mov
jle
pop
adc
incb
cmp
fdiv
push
flds
into
rorl
pusha
inc
subb
std
push
xchg
outsb
sbb
push
vpshab
mul
enter
lret
hlt
sbb
seta
orb
sbb
addl
mov
jbe
mov
test
inc
mov
xchg
in
pop
daa
addr16
aaa
add
push
jmp
test
adc
inc
in
cmp
out
and
fildll
or
push
pop
test
jg
xor
sbb
out
call
shlb
inc
sahf
in
inc
or
jae
mov
cmp
shr
lret
dec
inc
test
in
jno
cld
int3
in
sbb
jo
pop
out
mov
jge
mov
push
test
stos
into
cmp
pop
int
push
cmpsb
cs
fbld
into
les
mov
pop
mov
push
push
inc
jge
and
orb
mov
xchg
xchg
mov
mov
mov
icebp
push
addr16
xor
pushf
sub
push
mov
adc
mov
jmp
iret
sub
lods
push
stc
sar
jle
add
xlat
jns
pop
mov
add
dec
jbe
and
rclb
mov
mov
or
mov
mov
xchg
or
iret
bound
push
sbb
push
xchg
xlat
aaa
pop
out
icebp
dec
stos
out
loope
adc
xchg
push
jo
and
into
or
jbe
add
xor
mov
cmp
out
popa
popa
js
mov
adc
and
int
out
loop
pop
sbb
xchg
loop
out
xor
sbb
xor
ret
mov
into
fs
xor
jne
dec
and
adc
fisubrs
in
mov
xlat
jne
pop
in
xchg
xor
add
stos
inc
hlt
pop
or
insb
xchg
pop
mov
outsb
and
pop
lock
lret
push
dec
popf
add
aad
cmp
cltd
or
xchg
cmp
sub
into
xor
fisubl
sub
outsl
clc
es
mull
icebp
dec
pop
add
cmp
sbb
cmp
jo
adc
lahf
test
lret
pop
cmpl
fwait
addr16
mov
imul
sbb
cmpsl
bswap
popf
mov
js
shll
and
test
mov
lds
xchg
jg
pusha
dec
dec
aam
and
pop
out
sahf
dec
or
mov
popf
xchg
imul
inc
call
icebp
dec
cltd
sub
int
dec
pmovmskb
jl
push
xchg
dec
xor
sbb
cmp
xchg
mov
xorl
jecxz
push
in
xlat
rorl
inc
adc
arpl
fldenv
jg
shll
fsub
xchg
push
dec
jno
outsl
fstpl
loop
popa
mov
imul
lcall
mov
cmp
mov
xchg
rol
or
jbe
out
movl
jge
xor
pop
inc
sub
incl
aaa
xchg
cmp
ds
jle
cmc
sbb
or
xor
jl
imull
movsb
pop
sarl
lods
xchg
xor
xor
cltd
sbb
cmp
iret
decb
xchg
sub
or
sbb
push
out
xchg
ret
lea
mov
pop
and
jle
sbb
dec
jge
loope
push
sahf
insb
add
and
mov
in
sub
test
lcall
push
and
jmp
lahf
mov
inc
pop
dec
pop
or
mov
loop
lahf
mov
mov
add
cmpb
lods
fwait
mov
cli
mov
insb
sti
mov
or
sbb
xor
jne
sub
dec
sahf
lock
jmp
mov
loop
test
add
lret
jmp
imul
cli
adc
lods
mov
pop
mov
cmp
ret
orb
push
in
mov
scas
jae
ret
sbb
imul
nop
ret
lds
aas
inc
ss
pop
mov
push
mov
push
adc
bound
xlat
es
dec
ja
mov
mov
or
sahf
bswap
or
orb
cmp
roll
imul
orl
pop
xor
or
in
push
movsl
inc
push
jne
das
mov
lret
add
jb
cwtl
popf
jg
mov
clc
jge
dec
addr16
or
pop
mov
aas
xor
sbb
aaa
add
add
pop
push
test
mov
js
jle
test
pop
movsl
movsb
dec
sub
xchg
js
hlt
imulb
dec
jge
add
cs
push
shrl
mov
mov
mov
mov
bound
and
ljmp
pop
mov
push
pop
lock
jne
xchg
add
sub
inc
xchg
enter
fistpll
dec
push
sarl
cmp
es
sbb
shll
fnsave
iret
pop
cmc
pop
or
aaa
jl
fs
rclb
push
add
stos
arpl
push
aam
add
cmc
inc
cld
lret
sbb
jno
cwtl
push
jle
inc
addr16
mov
addr16
xchg
sbb
sub
jg
insb
inc
and
sti
mov
pop
scas
xchg
sbb
loope
mov
dec
cmp
xor
adc
cld
std
xchg
or
call
mov
or
sbb
movsl
xor
cmp
xchg
dec
and
iret
xchg
jbe
test
jle
lcall
xchg
push
inc
movb
inc
xor
inc
pop
je
inc
mov
pop
lahf
or
bound
jmp
movsl
aam
stos
loope
in
mov
dec
mov
jge
xor
hlt
out
jns
inc
xor
test
or
sbb
mov
push
xor
adc
push
adc
push
sbb
pop
scas
adc
and
mov
cld
fiaddl
dec
scas
lret
sbb
inc
cmp
clc
outsb
sbb
call
xor
int
xor
icebp
push
loop
mov
pop
xlat
inc
cltd
jmp
and
cld
out
and
je
enter
mov
enter
insl
jl
mov
inc
cmp
out
mov
test
xchg
jb
jns
push
and
inc
jo
lahf
mov
negb
mov
cld
inc
sub
repnz
pop
lock
or
out
mov
shlb
or
sub
sbb
cmpsl
lods
inc
or
daa
dec
push
jecxz
adc
ljmp
jp
inc
adc
pop
lods
stos
add
push
jb
std
lret
jb
rcr
cmpsl
mov
cmpsl
push
sbb
paddd
loopne
notb
xor
cmp
sub
pop
fwait
int3
cs
or
pop
push
in
fldenv
cmp
jge
scas
jge
movsl
add
jl
jbe
sub
xor
sbb
andl
cmp
scas
out
ret
out
and
xor
mov
push
add
imul
lods
and
xlat
jmp
iret
pop
ja
add
test
cld
ljmp
xchg
pop
xchg
jge
test
add
insl
repnz
lret
sub
push
mov
jp
imull
pop
pop
stc
jle
movsl
lds
test
push
out
jmp
dec
jbe
shrl
push
sahf
adc
jne
fwait
imul
inc
mov
out
adc
pushf
mov
inc
mov
scas
or
pop
insl
and
stc
and
cs
iret
aad
push
mov
mov
add
mov
in
cmpsl
or
lock
imul
xlat
sub
test
retw
ss
inc
and
fcmovbe
xor
mov
adcb
fmuls
mov
ret
mov
in
xchg
testb
xchg
in
inc
mov
mov
pusha
lret
dec
bnd
or
mov
lea
enter
inc
imul
lea
pop
sub
xchg
cmp
arpl
xchg
int3
cmp
daa
mov
loope
loope
jle
mov
cmp
lods
repnz
mov
sahf
popa
lock
jo
cld
inc
scas
or
fdiv
xchg
test
mov
je
add
mov
push
fs
pop
push
mull
inc
mov
cwtl
cmp
cmp
xor
in
int
and
popa
je
ss
lock
cmp
or
adc
imul
lret
sub
add
aad
idiv
lea
cmp
and
pop
dec
inc
gs
push
das
in
fwait
sub
loop
xor
scas
imul
push
lods
arpl
xchg
push
mov
cld
dec
loope
mov
dec
enter
cli
int3
mov
cmp
in
add
mov
add
adc
mov
addr16
mov
mov
add
jecxz
xor
push
pop
ja
cwtl
and
stc
mov
sbb
ficomps
dec
pop
scas
lret
adc
sbbb
shr
pop
mov
push
cltd
sbb
lock
clc
jb
in
dec
push
stc
fisttpl
push
add
sti
inc
dec
fwait
pop
data16
out
into
mov
cwtl
mov
cmp
cmp
sub
clc
sub
and
xchg
sarl
in
testb
sbb
xchg
rcr
fbld
rol
test
xchg
cmc
cmp
inc
push
lea
inc
popa
inc
scas
add
out
inc
sbb
mov
push
mov
adc
xorb
xchg
sar
xorl
inc
cmp
in
mov
ja
in
pop
mov
ret
add
scas
ret
adc
add
jae
mov
call
aas
push
adc
jns
lcall
arpl
mov
iret
jbe
sub
fldt
orl
aas
iret
pushf
aaa
outsl
adc
cld
pop
imul
xchg
xor
popa
enter
jg
nop
push
stos
call
movsl
dec
jmp
insb
jae
add
xchg
test
mov
xor
insl
and
xchg
loope
xchg
xor
adcl
nop
xchg
pop
movsl
movsl
rorb
jg
js
mov
stc
sub
iret
inc
cld
xchg
fadd
aam
jle
pop
into
dec
mov
lock
out
lret
lock
adc
mov
ljmp
sbb
jb
jnp
pop
outsb
inc
xchg
mov
cmpsl
es
mov
int3
scas
addb
and
movsb
nop
jnp
mov
adc
adc
cwtl
sub
pop
shlb
shlb
or
dec
sarb
inc
arpl
mov
mov
ret
lock
mov
add
mov
fs
xchg
je
xchg
es
dec
mov
jmp
subb
scas
mov
out
xor
push
aam
repz
adc
lret
in
mov
fmuls
push
jns
pop
repnz
sub
fiadds
push
test
push
cmp
in
mov
jae
ljmp
sbb
xchg
rep
dec
arpl
outsl
push
and
pop
imul
mov
cli
cmp
inc
lcall
pop
ret
popf
out
mov
cli
dec
and
add
and
push
sub
inc
xor
das
cltd
or
ss
pop
mov
lahf
cmpsl
inc
sub
adc
xor
imul
adc
adc
fists
lcall
lret
jo
insb
sbb
imul
mov
sbb
xchg
jecxz
cwtl
in
jno
dec
cltd
imul
insb
dec
aas
jno
jmp
out
lea
imul
xchg
pop
sbb
mov
or
rcll
loop
jmp
aaa
mov
aas
add
inc
xor
imul
scas
in
out
mov
fmull
jae
pop
inc
addr16
sbb
xor
ret
push
add
movb
test
mov
loop
mov
pop
jns
mov
push
sbb
mov
xchg
cld
enter
fwait
sub
push
sub
and
xchg
psrlw
pop
out
pop
add
adc
jmp
loope
inc
add
test
push
and
adc
cmp
aas
jg
lahf
les
in
sahf
inc
push
dec
and
dec
subb
pop
xchg
sub
push
inc
inc
adc
mov
out
fists
pop
xor
test
outsl
and
js
mov
dec
pop
dec
xchg
inc
inc
loop
and
xchg
in
mov
inc
psubsw
adc
cmp
loop
cmpsb
mov
std
mov
cs
or
scas
sbb
rcl
aaa
inc
les
or
movsb
testl
cltd
push
repnz
xor
or
mov
and
ret
mov
or
dec
outsl
xor
adc
jns
adc
lret
push
xchg
call
sub
mov
daa
and
call
cmp
push
pop
push
mov
or
adc
imul
pop
fst
mov
aaa
pop
pop
nop
popf
and
xor
loope
cmc
adc
cs
mov
in
dec
insl
pushf
adc
sub
jno
cmp
dec
fcomps
scas
jbe
mov
movsl
leave
addl
add
xchg
mov
sub
cmp
push
sub
mov
fwait
mov
push
in
mov
pop
and
inc
mov
leave
fnsetpm(287
loope
es
out
sub
add
arpl
loope
xchg
test
pop
or
mov
shll
test
xor
fstp
and
cmp
jecxz
mov
test
stc
dec
mov
cmp
out
in
pop
popa
jp,pn
dec
jb
mov
stc
in
ljmp
pop
enter
jnp
aaa
rorb
fstpt
pop
shlb
cmpsl
and
xor
sbb
mov
mov
push
mov
repnz
push
xchg
adc
jmp
mov
in
ljmp
jnp
add
call
gs
out
ffree
cmpsl
lcall
int
add
cld
inc
sahf
testb
jae
pushl
inc
cmp
xor
jmp
cltd
sbbb
jg
mov
test
dec
out
mov
fildll
int3
ljmp
lahf
rcr
or
outsb
mov
neg
aas
mov
test
lcall
in
filds
dec
cmp
js
dec
dec
cmpl
fildl
jno
ja
adc
adc
xor
clc
jge
mov
stos
and
pop
aas
pop
repnz
lret
pop
sbb
jle
stc
cmp
jo
adc
ljmp
adc
cmp
mov
xor
fisttpll
ret
std
jae
pop
imul
pop
mov
mov
data16
icebp
xor
or
mov
cmp
xchg
xchg
in
shrl
fidivs
neg
arpl
aas
or
inc
adc
jbe
insb
stos
movsb
loopne
aad
inc
jl
push
and
mov
notb
pop
push
or
mov
in
test
push
bswap
je
pop
outsl
aad
push
test
ds
dec
inc
pop
and
add
call
jle
jae
cmc
mov
ds
cli
nop
xchg
pop
jno
dec
cld
inc
icebp
std
add
pusha
or
dec
sub
pop
adc
test
sub
push
push
cmpb
enter
fcomip
lahf
scas
lcall
sbb
mov
xchg
mov
jne
inc
int
rolb
cmc
shll
in
loopne
sub
sbbl
pop
loopne
out
push
push
int3
hlt
fwait
int3
jne
movsl
scas
or
dec
jbe
cmp
imul
cmp
clc
lret
inc
xchg
or
rcrl
adc
in
mov
jne
fsubrs
int3
jns
aam
pop
mov
movsl
into
xor
push
sbb
jno
aad
sub
cltd
mov
out
in
add
fiadds
iret
shl
add
jno
jo
pop
inc
and
cmpsl
fs
fsts
mov
inc
mov
sbb
jecxz
xchg
sarl
pop
add
xchg
mov
inc
cmp
dec
jne
pushf
shlb
xchg
cmpsl
xchg
and
mov
test
imul
into
scas
dec
mov
sub
push
lds
and
mov
mov
mov
std
adc
aam
mov
repnz
mov
add
ja
sbb
sub
jmp
or
or
sbb
xchg
insb
mov
jmp
adc
sbb
xchg
sbb
sbb
arpl
jg
xchg
adc
adc
push
add
outsl
push
mov
ja
aad
push
dec
mov
jl
stc
inc
cs
or
out
jno
mov
cmp
pop
rcr
pop
pop
jbe
xor
shll
aad
rcr
xor
sub
outsl
into
push
fsqrt
cmp
sub
pop
push
xor
jb
data16
push
xchg
pop
or
adc
or
xchg
xchg
out
sub
stos
adc
cmp
movsl
pop
sbb
and
fisubrl
into
mov
mov
out
lods
pop
jge
sub
pop
and
sbb
push
fwait
mov
out
sti
push
insl
inc
sbb
sbbb
and
push
popf
pop
outsb
ret
in
fdivrs
icebp
lret
inc
and
leave
outsb
push
or
push
je
aas
push
and
cmc
mov
in
lods
xchg
dec
mov
cmp
les
mov
test
in
idivb
dec
jns
cli
lock
sbb
cwtl
in
sbb
inc
or
mov
popa
movsb
jg
sub
test
pop
pop
push
cmpsb
mov
adc
sub
push
into
xor
and
add
jp
pusha
push
out
mov
mov
jmp
xadd
mov
lahf
scas
mov
xor
xchg
dec
xchg
or
add
push
and
arpl
ds
pusha
lret
fs
test
fldenv
add
out
cs
pop
mov
ja
fwait
or
decb
insb
xor
xor
mov
ret
and
mov
mov
sbb
mov
push
cmp
jle
xchg
and
sarb
rol
mov
xchg
stos
push
mov
pop
inc
xor
cltd
sar
pop
imul
test
sbb
in
movsb
jo
sbb
dec
fdivrp
lahf
mov
rcll
nop
clc
adc
daa
cmp
mov
xchg
lea
mov
push
sbb
fisttpl
sbb
je
and
jb
inc
cmp
or
or
shll
jnp
stos
sti
aad
fisttps
out
mov
inc
clc
sub
dec
lods
jb
mov
push
pushf
loopne
mov
andl
push
lahf
push
leave
leave
xor
xor
dec
inc
mov
jae
add
inc
inc
sub
test
into
mov
xchg
jno
xchg
out
gs
xchg
lock
stc
in
and
cwtl
sub
das
cmp
mov
mov
cltd
inc
test
sti
add
cmp
mov
ljmp
and
out
stos
cli
push
pop
add
fidivrl
push
jae
enter
xchg
inc
cltd
test
xor
cmovbe
xchg
sbb
cmp
repnz
js
faddp
mov
xchg
inc
push
cmp
cmpsb
cmpb
inc
jo
sarl
test
cmp
sbb
and
push
cmpl
icebp
or
mov
mov
shr
daa
jb
icebp
jne
std
leave
jle
mov
mov
inc
pop
lds
mov
leave
xchg
jmp
ret
in
adc
testb
jmp
dec
add
icebp
or
jb
xlat
in
mov
jmp
jno
adc
xchg
sbb
xor
lahf
add
stc
mov
jmp
adc
mov
adc
out
hlt
in
fldenv
das
pop
mov
gs
cmp
clc
nop
pop
mov
jne
hlt
dec
es
xor
xor
stos
inc
cld
ss
fmull
in
dec
lock
and
pop
inc
cmp
ss
dec
jno
out
lods
pop
push
or
fnstenv
sub
cmp
insb
xor
sbb
in
imul
enter
push
test
jg
cs
adc
das
icebp
adc
test
sahf
dec
in
push
ret
or
mov
leave
nop
iret
pop
push
test
shlb
add
sub
xor
mov
add
pusha
adc
ja
sarl
dec
fistps
xlat
pop
je
mov
lahf
mov
sahf
mov
push
das
iret
pop
inc
std
shl
fiadds
gs
cmp
shlb
cmpl
xchg
sbb
xchg
mov
xchg
dec
inc
out
and
ljmp
sub
push
sub
mov
push
inc
pop
arpl
in
pop
mov
jmp
xor
inc
in
xchg
bswap
sub
push
rorb
or
dec
nop
mov
mov
dec
dec
test
lea
shll
push
sbb
leave
mov
aaa
dec
and
mov
jbe
ja
pop
xchg
scas
push
pop
dec
lock
aas
shlb
cld
clc
fnsave
mov
inc
cmp
lods
dec
lret
imul
cwtl
xchg
decb
icebp
decl
jge
icebp
xor
xor
cli
jmp
aad
push
fs
lds
cltd
mov
fwait
or
sub
pop
mov
xchg
pushf
mov
dec
cmpsl
xchg
fldcw
jno
or
lahf
cmp
xor
cmpsl
cld
push
sbb
dec
fxch
cmp
sub
fucomp
push
adc
fstp
jo
stos
je
jns
iret
pop
xor
and
mov
cmc
lods
sub
and
xchg
ret
dec
leave
add
loopne
dec
push
inc
adc
mov
ds
xor
pushf
sub
xchg
test
lds
jp
sub
into
loop
mov
rep
add
xor
add
xchg
sahf
cmpsb
aaa
cmc
dec
cmp
xlat
xchg
jmp
cwtl
mov
inc
push
mov
sub
mov
les
je
mov
push
inc
inc
sub
fnstcw
sarb
xor
cmp
push
lds
xor
pop
arpl
add
sahf
xchg
mov
popa
sub
jns
adc
mov
loop
jnp
data16
pop
adc
ljmp
leave
out
inc
adc
jecxz
cld
inc
popf
adc
adcl
mov
test
dec
movsl
sbb
scas
pop
fwait
jp
jbe
sbb
fs
pop
leave
std
mov
sbbl
mov
adc
jbe
xchg
std
in
adc
imul
mov
std
pop
out
movsl
pop
lret
push
fisttps
rorl
or
adcb
jle
push
ret
add
sahf
sti
pop
aad
push
inc
mov
out
ds
sarl
insb
pop
pop
sbb
repz
push
outsb
mulb
lock
aam
adc
jle
xchg
in
jo
iret
jp
lahf
mov
out
mov
icebp
and
push
pop
pushf
in
fcomp
adc
fcoml
scas
mov
jecxz
xchg
add
mov
call
mov
js
push
loop
cli
push
arpl
or
fisubrs
xor
adc
lret
xchg
mov
imul
rcll
sbb
into
sbb
xchg
cmpsb
fists
flds
inc
ret
mov
rcll
jp
xchg
push
or
inc
lret
adc
fisttpll
mov
pop
scas
mov
rorl
push
fs
das
mov
dec
push
shrl
outsb
repz
stos
mov
test
mov
das
stc
dec
fisttps
mov
jnp
dec
insb
popa
inc
mov
filds
mov
loop
push
mulb
popa
mov
jo
rclb
dec
orb
dec
adc
adc
call
lret
mov
cmpsb
and
xchg
cmpsb
xor
rolb
xchg
pop
push
pop
pop
adc
movsb
push
pcmpgtd
std
mov
test
jecxz
mov
in
stos
or
inc
les
insb
xchg
sbbb
das
add
sub
adc
add
dec
mov
ja
ja
jnp
dec
inc
cmpsb
push
adc
inc
pop
gs
imul
sbb
negl
cmp
dec
sbb
push
in
pop
xor
mov
cmp
fcmovne
jb
xchg
enter
xchg
mov
clc
int3
movsb
sub
pop
xor
repz
popa
push
lods
mov
icebp
loopne
or
in
or
enter
sbb
inc
pop
xor
in
fs
call
fildll
imul
mov
adc
leave
xor
pop
jo
ja
pop
xor
mov
mov
es
ss
rcrl
lret
inc
icebp
cld
roll
sub
push
outsl
fmull
ja
pushl
inc
cld
mov
bound
aam
push
popa
sbb
sbb
outsl
mov
push
and
xchg
sub
push
and
sti
test
rcrb
repnz
or
test
imul
or
fmuls
ds
pushf
enter
sbb
popa
push
test
dec
test
add
xor
aaa
mov
insl
imul
add
cmp
das
out
pop
ret
dec
sub
push
bound
fdivrs
mov
nop
sub
inc
or
xor
push
ret
jl
lea
shl
iret
lods
sahf
sbb
fsubp
sub
repnz
into
mov
fisttpl
cmp
sub
add
jne
xor
lea
mov
in
into
lock
dec
mov
jmp
ss
mov
jmp
mov
int
inc
in
insl
sti
jle
repnz
mov
sub
aad
cmpsb
loopne
or
bound
roll
sahf
gs
inc
mov
mov
test
dec
jp
cld
dec
lret
dec
pop
xchg
out
mov
mov
push
popf
out
jns
sub
mov
mov
ljmp
rcrb
mov
xchg
stc
pop
dec
int
lock
add
rorb
mov
or
adc
decl
outsb
pop
out
dec
xchg
sti
aad
inc
imul
and
ss
mov
mov
push
jg
push
cmp
dec
ja
jp
xchg
jno
outsb
mov
sub
mov
dec
sbb
jecxz
out
sbb
mov
ljmp
inc
pop
in
in
repz
xchg
ret
cmp
dec
lret
mov
adc
adc
sbb
sbb
hlt
xchg
jp
dec
jmp
mov
mov
and
add
popa
or
popf
fdivrs
adc
sub
cmp
sbb
dec
test
shl
sbb
int
call
call
mov
movsb
scas
shll
std
push
pop
movsl
jbe
push
jne
cltd
sub
mov
cltd
fsubrl
stos
ret
sbb
ret
cmp
bnd
cmpsl
add
sbb
push
sarl
dec
aad
fs
push
jp
enter
dec
pushf
mov
or
xor
xchg
mov
push
in
xchg
cmp
mov
or
js
sbb
push
fistl
xchg
out
outsb
insl
out
lock
pop
ficoms
push
mov
sub
mov
and
fst
adc
lret
jmp
dec
mov
cmpsl
mov
hlt
cs
int3
push
sub
lahf
inc
fimuls
aas
repnz
sbb
hlt
movsb
mov
push
cmp
pop
sbb
into
mulb
pop
int
leave
xchg
scas
or
insb
in
mov
sbb
dec
jg
out
or
push
push
mov
out
cmp
adc
stc
rcr
push
push
lret
pop
lret
push
push
aad
cmpl
gs
pop
jle
mov
test
pop
inc
mov
push
je
sub
cmpsb
inc
lods
roll
xchg
xor
mov
lods
cmp
or
xchg
mov
mov
dec
arpl
repnz
sti
inc
jnp
inc
or
pop
push
pop
cmpsl
pushl
adc
sub
pushf
mov
nop
and
lods
jg
xor
and
daa
mov
push
lret
or
pop
in
adc
cmpl
dec
out
push
lods
mov
dec
and
push
ds
out
cmpsb
aas
ja
and
cwtl
mov
clc
dec
sbb
sbb
jecxz
je
mov
dec
fdivrs
cli
xchg
mov
mull
cmc
mov
insb
mov
jmp
and
pop
cmp
xchg
std
dec
xlat
leave
lds
fstpt
pop
in
ret
frstor
pusha
sbb
mov
pop
into
jg
inc
shr
das
lea
stc
lds
dec
addr16
in
pusha
mov
pop
xchg
out
push
mov
lret
sbb
pop
sub
pop
mov
adc
insb
lea
shll
clc
fs
xchg
pop
sub
jb
mov
and
jae
pop
ja
push
int3
outsb
and
fadds
test
xchg
push
lar
jmp
cltd
pushl
gs
out
jg
dec
dec
jo
xchg
mov
add
push
sbb
movsb
add
push
xchg
add
sub
scas
subl
test
jge
add
movsl
xchg
scas
push
sub
sub
insl
pop
pushf
ss
pop
or
stos
ret
and
pusha
inc
xor
or
mov
mov
sub
inc
icebp
jb
mov
push
ss
inc
adc
lock
loopne
dec
xchg
cwtl
mov
dec
jbe
shl
repnz
cmp
fcomps
jno
push
rolb
adc
and
aaa
pop
jne
or
lock
cmp
and
mov
insb
imul
and
stos
sbbb
fisttpl
sub
sub
arpl
mov
mov
xchg
and
pop
fisubs
or
cmpsl
nop
xchg
js
addr16
stos
jbe
lock
mov
outsl
out
imul
mov
cs
lret
iret
sub
int
or
and
ret
pop
test
stos
je
lahf
lcall
dec
aam
mov
mov
pop
sbb
out
push
jmp
call
fdivrs
into
cmp
stos
mov
sbb
aam
int
sbb
ja
sbb
mov
ss
pop
movq
dec
call
ljmp
aad
and
mov
subl
lods
das
out
push
mov
fdivr
pop
push
and
xchg
pop
dec
gs
dec
push
test
imul
clc
rcrb
xchg
sub
fstps
mov
lea
and
mov
out
outsb
fidivrl
mov
ds
data16
add
gs
lock
in
sbb
pop
pop
lret
add
mov
and
mov
xor
push
stos
or
aad
cltd
sbb
mov
sarl
shr
in
add
pop
popa
mov
lret
mov
inc
inc
and
cmp
icebp
decl
imull
cwtl
cmpsb
or
and
cmp
ss
call
adc
or
adc
inc
mov
cmp
cltd
mov
dec
int3
outsl
push
mov
or
out
mov
or
mov
lods
xor
sbb
call
in
gs
in
add
and
or
outsb
cmp
jb
ja
addb
sub
pop
stc
mov
ss
outsl
enter
xchg
mov
push
mov
cmp
xlat
pop
lods
jmp
les
js
pop
outsl
xchg
out
mov
in
jp
or
mov
fists
dec
xchg
imul
adc
je
or
xor
xchg
xchg
imul
push
fucompp
push
fsts
mov
test
dec
jmpw
mov
cmp
pop
lcall
push
das
sti
push
insb
scas
lcall
roll
lret
dec
push
out
cltd
pop
dec
and
jns
cmp
adc
das
mov
mov
mov
mov
lret
faddp
push
dec
rcl
pop
add
es
fwait
jnp
mov
cmp
xchg
push
lods
mov
jle
jmp
cmp
pop
fadds
inc
xor
add
jge
fidivrs
adc
fs
push
jne
sub
push
loop
jg
mov
into
jg
shll
adc
pushl
xchg
icebp
stos
inc
lods
sub
xchg
cmp
lods
fmull
dec
dec
pop
inc
inc
mov
inc
fwait
sbb
push
int3
mov
push
popf
adc
sub
arpl
gs
bnd
xor
push
ret
xchg
sbb
sub
jnp
inc
enter
int
stos
xor
clc
cmp
push
push
dec
adc
aas
pop
aas
mov
rcrl
mov
fidivrl
xlat
sarl
jmp
push
mov
mov
dec
push
lahf
mov
out
in
jo
add
hlt
jg
repz
jo
inc
cld
add
pop
mov
pop
filds
xlat
test
push
push
test
add
inc
sbb
cmp
fildl
rclb
std
stos
cltd
add
inc
inc
ja
in
movsl
jb
xchg
notl
mov
ficomps
dec
repnz
pop
add
push
out
jne
data16
bound
movsb
js
xor
mov
inc
fsubrl
sub
jle
sub
pop
cmp
dec
sarb
adc
gs
mov
jmp
bound
loop
in
dec
mov
jne
add
push
imul
dec
mov
push
stc
incb
and
daa
mov
mov
xchg
xchg
loope
stc
cld
mov
rorb
incl
xor
fistpll
in
jge
cwtl
rorb
divl
test
lret
pop
div
inc
es
sub
pop
imul
addr16
sti
movsl
mov
pop
cld
jg
sbb
inc
sub
jle
jecxz
xchg
in
mov
push
insb
sahf
nop
or
jno
inc
jl
insl
fs
loopne
pop
jge
scas
and
xchg
jle
ss
push
in
stos
negl
daa
or
mov
cmpsl
mov
lcall
loop
and
ret
mov
mov
cmp
ss
add
pop
cmpsl
std
add
add
cltd
jns
mov
push
cli
lds
add
xchg
pop
lds
imul
cmp
push
push
dec
mov
cli
dec
cmc
add
jecxz
outsb
int
or
mov
popf
dec
or
dec
pop
jmp
cld
dec
cvttps2pi
xor
cmp
mov
fsubrl
cld
adc
xor
sub
data16
pop
popa
adc
repz
movsb
inc
add
ret
push
fisubl
cmp
mov
mov
iret
add
in
jecxz
inc
lcall
xor
lock
repz
ss
fld1
insb
mov
test
cltd
pop
or
inc
adc
sahf
mulb
js
outsb
mov
loope
cmp
and
daa
push
rcrl
push
pop
test
push
mov
jb
js
and
std
push
jb
cld
popa
das
mov
mov
xor
cwtl
inc
xchg
gs
shll
jno
shrb
mov
lods
jb
out
outsl
or
loopne
sti
dec
or
jge
lds
fcompl
js
outsb
sub
ss
lods
push
les
jb
mov
loope
cmp
cmp
or
in
iret
jmp
mov
push
repz
in
dec
aaa
gs
mov
xchg
loope
cs
mov
jle
xlat
pop
pop
hlt
insl
and
add
cld
clc
push
dec
xchg
out
bound
adc
push
xchg
cli
jne
xor
mov
pop
mov
and
xchg
or
add
imul
sub
sbb
cltd
sbb
push
loopne
lock
push
mov
inc
mov
subb
je
iret
mov
xchg
mov
cli
jo
iret
mov
cld
stc
outsl
pop
add
jb
stos
lods
jle
insb
add
movsb
cmpsl
shlb
call
mov
rorb
adc
cmpb
ja
dec
jb
rclb
stos
repz
or
adc
mov
rcrb
push
ret
push
or
xor
mov
pusha
pop
fsubrp
mov
xchg
mov
sbb
pushf
es
jg
add
out
jne
les
daa
clc
scas
jge
movsl
stc
ss
mov
xchg
cmpsb
aad
aam
jl
inc
cwtl
sub
or
cmp
dec
das
in
mov
fdivrs
xchg
jo
insb
enter
call
subb
sub
cmc
je
xchg
push
or
aam
inc
sbb
cmp
nop
notl
jle
add
cmp
sahf
pop
sysexit
arpl
mov
mov
mov
mov
dec
pop
push
insl
rcll
pop
in
inc
xchg
ror
jecxz
js
push
push
inc
sbb
add
add
fstl
cwtl
jmp
test
test
ja
iret
mov
cmp
xchg
fidivrl
jl
lds
stos
mov
dec
mov
jo
shr
sbb
pop
adc
sub
adc
test
and
mov
cwtl
and
mov
mov
jno
xchg
iret
pop
push
gs
fs
outsl
out
sar
or
ds
das
stos
jnp
or
mov
inc
out
push
mov
jle
adc
aaa
dec
lahf
call
push
sbb
stos
mov
test
pop
out
cld
enter
cmp
rcl
jnp
lea
or
fnstsw
stos
cli
mov
jo
jge
adc
sbb
and
push
push
mov
or
outsb
js
aam
sub
and
cltd
in
jnp
jecxz
into
mov
inc
mov
add
adc
mov
pop
out
cltd
jge
mov
insb
pop
ret
jbe
insl
pop
clc
dec
pop
inc
aaa
sbb
jns
xchg
pop
rorb
pop
das
pop
mov
test
stc
fimuls
ss
cwtl
xlat
mov
imul
xchg
je
xor
mov
sahf
scas
test
cmpsb
sbbb
rclb
jbe
imul
mov
mov
in
mov
clc
les
das
pop
sub
xchg
cmp
cwtl
xor
sbb
iret
test
adc
hlt
in
mov
sub
adc
jno
mov
insb
sbb
and
mov
test
pop
loopne
pop
lcall
nop
add
push
or
push
aad
ja
lcall
xchg
sbb
sar
into
test
out
xchg
fsubp
dec
pop
lock
or
pop
mov
scas
xchg
loopne
cltd
adc
push
and
pusha
or
and
xchg
xchg
xchg
adc
cmp
inc
adc
and
arpl
dec
mov
jne
push
aad
testl
pop
lret
jo
mov
mov
addb
imulb
mov
cmpsl
lea
ja
mov
xchg
dec
lahf
xlat
test
pushf
inc
das
adc
pop
fadds
xchg
xlat
cli
mov
das
or
test
loope
sarl
mov
mov
xor
and
andl
push
mov
inc
sub
ret
test
xchg
sbb
ficomps
inc
ret
mov
ret
mov
repz
int3
ret
jne
inc
mov
mov
fmull
out
pop
cmp
ds
adc
dec
out
outsl
push
or
mov
shl
cwtl
add
adc
jle
mov
dec
sbb
sub
inc
mov
sbb
cmp
push
movb
lret
or
fs
add
adc
fwait
mov
mov
test
addr16
std
jno
cwtl
push
pop
loopne
out
mov
jle
rclb
mov
push
cmpb
in
popf
out
jno
or
dec
scas
pop
xchg
add
ja
or
pushf
in
pop
jb
lods
fnsave
dec
scas
or
push
inc
adc
call
dec
insl
inc
sbb
out
fwait
stos
ret
mov
sub
mov
inc
lods
push
and
and
aaa
or
or
inc
mov
sub
addl
pop
cmc
inc
hlt
sti
adc
mulb
dec
push
or
insl
sub
fwait
mov
icebp
clc
push
test
fnstsw
sub
test
fwait
gs
fs
xor
adc
and
fld
pop
mov
shll
ret
cltd
sbb
fiaddl
ja
cmpsb
inc
lahf
add
dec
cmpsb
aas
mov
repnz
adc
mov
mov
and
cltd
mov
pop
lods
dec
jbe
adc
mov
clc
dec
mov
jl
insb
sbb
cmp
push
repz
fwait
stc
jno
out
push
mov
jmp
xor
xor
mov
inc
push
popa
jae
xor
out
add
or
adc
xorb
sti
stos
pop
in
xor
pop
pop
lods
bound
push
out
jle
push
mov
shr
push
cs
xchg
sbb
sbb
xchg
pop
pushf
cmp
push
add
test
xchg
pop
test
testb
jns
aam
xor
or
mov
cmp
add
jg
out
mov
push
mov
cmp
aaa
aam
sub
lret
movsb
enter
je
movsl
push
sub
mov
inc
xchg
sbb
pop
mov
loop
stos
popa
mov
mov
scas
outsb
mov
xor
mov
mov
cs
jb
test
or
shlb
sub
mov
push
jnp
stc
fadds
adc
pop
je
das
lahf
pushf
es
add
xchg
cmp
pop
push
mov
inc
dec
out
mov
in
cli
in
push
jb
xor
push
adc
dec
pusha
and
mov
insl
mov
pop
push
imul
adc
dec
insl
push
nop
loope
movsl
out
add
push
push
test
xor
lods
mov
push
pop
dec
leave
mov
pop
jmp
inc
insl
pop
fstp
insl
inc
repnz
mov
xor
adc
or
out
std
push
ret
insl
sub
lds
or
test
or
enter
mov
cmp
aaa
pusha
xchg
out
mov
sub
mov
jo
mov
xor
pop
adc
std
shl
js
lea
roll
sti
jg
inc
lock
dec
pop
push
or
mov
mov
pop
jmp
cmp
mov
jge
mov
popf
test
cwtl
jae
xor
ds
mov
pop
cmp
xor
stos
push
jns
fsubr
cmc
push
ljmp
pop
mov
inc
ds
inc
out
fs
dec
fs
sbb
aas
jge
stc
inc
testl
push
into
sti
leave
sbb
lret
fcmovnb
sahf
push
mov
xor
push
push
mov
mov
mov
jb
and
out
dec
adc
lahf
pop
xchg
sbb
in
pusha
xchg
xchg
sbb
xchg
mov
cwtl
cmp
icebp
mov
ljmp
xchg
and
lcall
leave
scas
push
cmp
inc
enter
clc
lcall
mov
divb
int
jle
mov
push
mov
adc
sbb
imul
xor
cwtl
lock
push
mov
cmp
jae
insb
mov
sub
fwait
test
sar
movsb
push
push
fdivrl
pop
orl
out
ds
and
repnz
xchg
mov
xlat
cmp
call
dec
push
cmp
pop
in
sub
fdivr
mov
jae
add
push
lret
xchg
fs
xchg
ret
pop
mov
push
xchg
add
rcrb
adc
push
repz
push
push
cmp
lret
les
mov
enter
cmpsb
loop
adc
push
jo
jnp
push
call
add
sarl
mov
mov
xor
pusha
jecxz
stc
into
outsl
and
cmp
fisttpll
scas
movsb
pop
mov
mov
lods
stos
push
mov
nop
loope
ret
pushf
push
add
jae
add
pop
int
mov
or
movsb
mov
fwait
stos
roll
jecxz
ljmp
sbb
es
movsl
lods
iret
fcmovnbe
mov
adc
jecxz
imul
pop
test
dec
xor
fsubr
mov
xchg
push
repnz
in
jp
add
mov
test
and
fs
in
inc
xorb
popa
stos
mov
xlat
das
push
aas
mov
dec
pop
out
xor
int3
mov
inc
xor
or
xchg
adc
stos
jecxz
movsb
ds
push
fcmovbe
fsubrs
ret
sbb
jmp
adc
mov
jle
not
and
inc
and
xor
std
dec
inc
inc
sar
push
inc
adc
jbe
sbb
lcall
pusha
xchg
push
mov
pop
jo
sbbb
mov
out
mov
jno
mov
sbb
sbb
outsl
fs
or
test
les
mov
call
cmp
or
ja
xchg
mov
int3
loopne
mov
push
add
sbb
adc
jp
scas
loope
enter
jnp
roll
push
repnz
sub
mov
mov
dec
pop
mov
imul
sub
cmpsl
mov
jne
inc
js
xor
repz
testl
add
pop
jns
ja
inc
cwtl
je
mov
pop
dec
cmovl
and
push
ficoml
mov
mov
lea
and
push
cltd
and
out
adc
int3
pop
jp
jl
and
clc
mov
or
mov
mov
push
lods
rcl
or
test
out
ss
or
cmp
mov
and
sbb
push
ja
cli
mov
insb
sbb
in
fdivl
mov
xor
mov
sbb
popf
mull
fwait
repz
fs
mov
xor
outsb
push
ljmp
test
sbb
lcall
out
mov
mov
mov
mov
divb
jae
das
push
fdiv
imul
out
jge
ret
dec
mov
hlt
jmp
subb
dec
cltd
sbb
cwtl
es
and
push
cmp
adc
stos
ds
adc
int
lea
stc
push
imul
in
cmp
dec
int
insl
inc
subl
xchg
lret
add
mov
add
andl
sub
into
jo
adc
mov
pop
or
lds
clc
inc
jne
out
mov
loopne
inc
stos
mov
mov
sbb
cmp
nop
ja
call
ds
cmp
or
mov
decb
inc
pop
push
fmuls
mov
ret
inc
lock
out
faddl
xchg
in
pusha
cld
xor
pop
imul
jne
cmp
lahf
or
and
clc
fwait
push
mov
xor
xor
pop
or
popa
arpl
pop
pop
inc
aad
mov
jecxz
not
faddp
mov
loopne
ljmp
in
pop
add
add
inc
lods
rolb
cmp
rolb
outsb
aas
fisubrs
sub
daa
and
repnz
daa
sbb
into
jne
leave
lahf
jg
loope
flds
jbe
mov
xchg
add
mov
fcoms
mov
inc
jo
and
sub
xor
mov
test
into
nop
pop
add
enter
pop
pop
dec
adcl
ljmp
lods
pop
mov
decl
jbe
scas
mov
mov
mov
mov
addl
cmpsl
jecxz
xchg
data16
jae
jns
imul
mov
filds
aam
popa
push
repnz
xor
mov
push
cltd
leave
and
shlb
mov
cmp
clc
adc
xchg
not
mov
lcall
imul
stc
lock
lret
xor
insb
iret
jmp
sbb
es
jmp
das
sub
mov
or
or
pushf
xor
leave
mov
repz
mov
mov
rcrl
pop
fwait
sub
cmp
iret
in
lret
mov
push
call
test
lds
ficomps
and
adc
cmp
xchg
cli
and
mov
xor
mov
jne
lock
and
jae
popf
cwtl
int
mov
cwtl
sbb
inc
fldcw
add
cltd
jnp
sub
push
push
je
scas
sbb
mov
loope
dec
mov
xchg
clc
shlb
in
mov
or
ret
lods
sub
jle
scas
cmp
fists
jb
xchg
stc
xor
nop
push
repz
dec
addb
jl
mov
addb
xor
stc
or
cmp
rdtsc
test
leave
adc
add
out
sub
addb
pop
movsl
in
scas
out
and
loope
xorb
filds
mov
aas
subb
rcrb
fxch
ror
cld
dec
xor
bound
sbb
ret
push
cmpsl
xchg
push
mov
ficomps
lret
popf
roll
jp
inc
loop
test
sub
or
and
fnstcw
mov
xchg
in
mov
in
cld
push
ret
aas
inc
sbb
push
std
lcall
fidivrl
pop
push
mull
ss
repz
sbb
xlat
xor
mov
cmpsl
add
or
adc
xor
mov
fwait
pop
nop
lcall
out
das
cld
or
addr16
sbb
xchg
pop
mov
scas
mov
inc
sub
add
aaa
gs
out
pop
mov
pop
cltd
test
out
cmpsl
and
stos
int
pop
rclb
dec
cli
fs
mov
fimuls
sbb
fwait
inc
in
loop
test
icebp
icebp
loopne
inc
ss
ret
or
mov
pop
out
repnz
adc
xchg
faddl
sahf
aad
and
ss
dec
out
and
enter
inc
sub
jmp
mov
stos
mov
test
ficomps
repnz
enter
std
cld
test
ror
in
and
lds
pop
or
xchg
adc
mov
pop
lock
adcl
repnz
cs
or
push
mov
lock
pop
mov
mov
leave
int
mov
lret
dec
cmp
pop
inc
mov
aas
jmp
out
cmpsl
xor
cmp
fs
lret
clc
enter
mov
add
or
sub
movsb
jp
imul
stc
and
fs
dec
adc
xchg
cld
pop
aas
and
fcom
xchg
outsl
loope
add
fdivl
and
jle
les
sub
adc
xor
add
rol
fildl
inc
inc
and
mov
in
jl
fldcw
daa
xor
setae
out
stos
cmp
or
out
mov
push
xchg
and
js
fld
movsb
ss
ret
ljmp
xor
inc
pop
inc
mov
sub
or
mov
xchg
fsubrl
mov
inc
and
xor
sbb
push
dec
push
out
test
xchg
outsl
dec
dec
rcrl
mov
adc
sub
push
xchg
mov
jle
xor
mov
fwait
sub
sahf
insb
xor
pop
mov
andb
mov
mov
cmp
test
fidivrs
movsl
pop
scas
popf
in
pop
xchg
or
imul
xor
hlt
outsl
jmp
stos
xchg
in
dec
or
aaa
jne
adc
push
daa
jmp
iret
jno
test
mov
xchg
fsubp
xor
cmp
fstpl
std
or
nop
leave
mov
mov
mov
sbb
outsb
test
mov
add
mul
lds
ficompl
mov
add
xor
data16
test
sub
stos
nop
sub
pop
jnp
daa
aas
int3
ret
xor
inc
lret
and
test
sub
pop
stc
and
or
add
lea
inc
xchg
cmp
mov
lahf
dec
mov
lret
outsb
movsl
aaa
repnz
jo
pop
and
sub
movsb
stos
ja
adc
std
and
cmp
lret
add
aas
roll
movsb
xchg
sub
stos
das
sahf
test
jnp
dec
sbb
ja
mov
pop
pushf
ljmp
mov
out
enter
or
xlat
loope
imul
mov
push
cmp
add
add
jb
in
arpl
mov
mov
out
mov
ret
data16
aaa
jmp
shlb
sbb
imul
xlat
push
mov
fmul
adc
push
push
lret
gs
aam
pop
mov
jo
push
mov
adc
ljmp
xchg
push
or
imulb
push
mov
call
sbb
rclb
xor
push
inc
dec
pop
mov
dec
xor
rolb
test
loope
inc
nop
cmpsb
mov
in
sub
xchg
push
mov
loope
xchg
adc
js
sub
inc
push
push
push
stc
cmc
inc
jb
repnz
mov
lcall
mov
push
ss
adc
mov
pop
mov
push
sarl
hlt
mov
jae
aam
dec
in
ret
lock
mov
arpl
add
test
insb
int
gs
clc
lock
inc
adc
adc
pop
jnp
daa
adc
adc
in
adc
mov
inc
test
sbbl
pop
cli
mov
mov
movsl
test
mov
sbbb
cmc
pop
mov
cld
adc
test
repnz
mov
pusha
lret
adc
icebp
call
adc
decl
imul
push
lea
mov
clc
or
xchg
sub
cmp
test
push
int
jg
pop
dec
push
cwtl
lahf
mov
or
xchg
outsl
push
shlb
add
jg
or
enter
push
pop
mov
dec
mov
push
pushf
fldt
adc
mov
add
popl
pop
shl
cmp
outsb
mov
mov
xor
cmpsb
mov
adc
nop
dec
sbb
cmpsb
jbe
pop
sub
fwait
xchg
cmpsl
mov
out
ds
dec
mov
adc
into
mov
push
adc
dec
popf
rcl
push
dec
aas
and
jle
mov
sub
andl
int
pop
test
cmp
fsubl
movsl
xchg
add
mov
pop
shrb
int
sbb
aam
aas
cmpb
shrb
sub
push
inc
dec
or
or
jp
jge
movsl
adc
arpl
inc
nop
cmp
leave
lds
add
dec
and
hlt
push
es
xchg
and
jnp
lock
icebp
cmp
insl
xlat
adc
fistpl
and
or
xorl
sub
lret
out
push
shrl
pop
lods
xor
xor
fsubrs
adc
jmp
sti
inc
fadd
push
clc
mov
cltd
scas
dec
in
pusha
lcall
out
sti
loop
aas
jo
sub
jb
hlt
nop
scas
lds
pop
divl
out
rorl
cmp
aas
daa
pop
repz
insb
out
mov
loopne
pxor
fiaddl
jae
sub
jo
lods
int3
mov
fldl
nop
pop
js
imul
stos
or
push
mov
out
add
int3
xchg
cwtl
jo
sbb
dec
mov
and
nop
ljmp
lock
in
cmp
inc
aas
inc
stos
xchg
push
stos
out
adc
push
mov
xchg
dec
pop
stos
into
or
mov
repz
nop
push
dec
jo
cmpsl
repnz
les
mov
les
out
mov
or
adc
out
stos
cmpb
mov
sub
push
adc
add
sbb
inc
xor
cmp
popf
sti
pop
inc
call
stos
mov
jns
cmc
xor
xchg
fdivl
out
xor
or
lret
daa
stos
je
cld
mov
dec
outsb
stc
aam
pop
call
in
rclb
cmp
int3
nop
insb
jno
into
std
ja
mov
push
aaa
scas
mov
add
xlat
cmp
pop
xchg
add
or
add
divl
testb
out
jno
loopne,pt
loopne,pn
cmp
pop
mov
testl
outsb
jns
notl
push
ljmp
dec
lods
pop
test
adc
bound
add
shrb
test
in
sub
xchg
int
outsb
pop
inc
call
cwtl
loop
sbb
inc
cmp
cld
jmp
mov
and
hlt
mov
add
dec
ds
shlb
jno
mov
xchg
aad
cld
xchg
out
dec
shr
mov
cld
jo
and
xor
cli
cmpsl
lock
aam
in
push
mov
lret
xor
cli
outsl
mov
clc
mov
pop
imul
sub
les
sti
ds
sbbb
push
jl
push
adc
add
subb
push
or
xchg
or
enter
mov
bound
jno
or
mov
adc
add
mov
fwait
or
cmp
movsl
pop
add
mov
stc
mov
lock
jnp
cwtl
push
mov
iret
lahf
jo
dec
mov
mov
inc
dec
aaa
push
cs
in
mov
subb
jp
push
movsb
shl
mov
sbb
cmpsb
sbb
xor
lods
or
pusha
sbb
and
jb
push
sti
cwtl
xchg
push
in
push
fmull
sar
aaa
movsb
lret
xor
bound
je
in
fwait
dec
inc
mov
push
inc
stc
sbb
mov
ja
cmp
inc
xlat
adc
icebp
cmpsb
inc
xor
xchg
mov
push
js
cmpsl
out
sbb
jbe
xor
and
mov
xchg
mov
inc
mov
ficomps
push
test
repnz
repnz
cmp
mov
out
jmp
mov
jae
ja
xor
push
dec
addb
jl
adc
xchg
mov
dec
mov
push
jl
add
add
pop
in
cld
stc
add
mov
dec
shll
xchg
fisttps
xchg
and
push
mov
lcall
xchg
xor
push
lods
sbb
addr16
or
push
push
add
jbe
int
fidivrl
adc
test
mov
jns
addr16
xor
mov
pop
sub
cltd
out
fisttps
jge
pop
incl
das
dec
sti
lods
andb
mov
cmp
pop
mov
push
out
repz
mov
adc
adc
jle
dec
iret
insb
and
push
addl
cmpsl
inc
and
push
pop
imul
sub
add
add
mov
out
negl
mov
lock
pop
xchg
push
lds
adc
std
out
jns
std
lods
mov
rcrb
mov
out
mov
repz
jno
xchg
lea
addl
lods
rolb
mov
dec
push
mov
mov
pusha
inc
xchg
loope
paddusw
cmp
std
scas
sbb
sti
jno
mov
filds
fs
dec
mov
inc
push
sbb
fsubrl
xchg
xchg
orw
add
imul
imul
int
test
sbb
dec
pop
xor
ljmp
mov
and
stc
mov
setl
mov
pop
adc
out
pop
push
pop
jmp
jno
sarb
xchg
dec
shr
push
ljmp
add
fistps
pop
jno
dec
testl
xchg
aaa
jge
mov
jecxz
es
push
mov
cmp
sub
mov
push
xor
gs
outsl
mov
mov
lahf
xor
adc
add
cmp
add
or
lret
xchg
sub
mov
pop
cmp
negb
nop
add
hlt
repnz
ficomps
xchg
ds
stos
testl
call
mov
mov
xor
arpl
fdivrs
insl
in
arpl
mov
or
jae
jg
ljmp
sbb
cld
negl
out
ja
movsl
push
iret
in
pop
mov
insb
loope
jae
dec
fcomip
push
outsb
sbb
je
sub
sub
add
xor
xchg
mov
sbb
popf
push
insb
push
push
aad
and
jecxz
daa
ds
pop
mov
loope
inc
pop
rcr
aad
int
mov
jae
loop
cmc
sti
mov
sub
sub
js
mov
popa
lea
push
mov
jno
mov
mov
xor
mov
mov
mov
test
ljmp
out
jmp
xchg
push
and
sarb
or
fwait
lock
push
ljmp
scas
inc
cmc
andb
sub
jae
in
mov
adc
xchg
adc
loop
loop
pop
mov
lds
jp
xor
gs
push
xchg
or
mov
out
xchg
sbb
cmp
push
cmp
cmpsl
movsl
lock
xchg
push
clc
bnd
insb
xlat
or
in
jg
mov
daa
fsubs
and
xor
lds
test
push
outsb
sarl
push
sbb
sub
and
xchg
sbb
inc
insl
loop
mov
cmp
lret
lcall
add
imulb
lahf
ss
pop
jl
sarl
jo
jb
inc
sbb
aas
mov
mov
mov
imul
adc
push
sti
ss
sub
jl
out
add
xchg
lahf
inc
mov
jbe
fmull
sbb
inc
xlat
cmp
push
int3
jl
add
sahf
ss
mov
lods
into
inc
test
inc
xchg
xor
inc
and
mov
sbb
mov
fcoml
fwait
cwtl
out
dec
inc
ss
out
mov
insl
sti
add
sbb
cmp
adc
sbb
sti
adc
out
mov
aas
push
xor
jl,pn
dec
mov
xlat
icebp
push
mov
mov
aaa
mov
loopne
int
outsl
dec
push
clc
aaa
mov
cmc
inc
sbb
jne
push
aaa
adc
pusha
das
sbb
jbe
mov
fisttpll
scas
pop
jge
mov
add
adc
std
arpl
inc
cwtl
dec
lret
bound
fimuls
mov
loopne
inc
das
mov
insl
sub
mov
stos
cmc
dec
dec
rolb
mov
mov
fwait
pop
popa
cmc
call
or
or
mov
incl
and
pop
flds
bound
push
insl
rcll
xor
mov
push
ljmp
mov
pop
push
inc
aas
pop
fs
pusha
mov
adc
fwait
sub
aaa
mov
jmp
pop
fdivrl
jne
int3
pop
shrl
cmc
jae
lahf
adc
daa
pop
sub
dec
pop
mov
movsl
push
mov
sub
stos
or
mov
push
aam
lock
data16
out
cltd
lods
popf
aad
lret
xchg
xchg
insb
fistl
jge
outsb
in
hlt
or
xor
inc
mov
sub
xor
dec
cld
xchg
jnp
leave
push
mov
out
cs
cltd
jmp
dec
out
mov
popf
sub
pop
divl
out
mov
xchg
adc
icebp
dec
test
rorb
stos
pusha
sub
daa
pushf
pop
mov
sub
xchg
in
or
pop
mov
mov
pop
jmp
lock
dec
fs
xor
call
aas
or
testb
dec
mov
pop
lcall
in
lock
ret
into
sbb
mov
out
rorb
jns
fs
in
mov
adcb
pop
movsl
cli
in
popf
adc
movsb
mov
sub
ja
mov
and
xlat
pushf
daa
insb
xorl
push
lds
pop
or
pop
cmpsb
lret
mov
ret
jb
adc
arpl
dec
mov
inc
mov
pushf
xchg
movsl
loop
xlat
pop
cmp
mov
movsb
shl
es
mov
in
pop
cmp
inc
xchg
mov
and
dec
sbb
cmp
das
notb
scas
dec
or
or
xchg
in
inc
inc
sbb
sub
xor
mov
dec
sarl
jae
shld
jle
pop
xchg
mov
cmc
push
inc
stc
iret
pop
push
pop
xlat
out
dec
rolb
add
xor
mull
stc
pop
cs
mov
or
cld
stos
push
test
jecxz
push
mov
aam
scas
mov
sahf
sbb
in
and
mov
fs
push
adc
fisttpl
jo
mov
xor
inc
ret
adc
push
lcall
jp
mov
and
sahf
sub
xchg
cs
jp
orb
subb
fsubrl
push
js
pop
xchg
mov
rorb
rol
scas
sarl
mov
pop
dec
jns,pn
mov
nop
adc
mov
enter
aas
lret
pop
jl
popf
push
push
comiss
xchg
mov
adc
xor
adcb
cmp
loope
sub
mov
or
stos
cmp
ss
out
pop
xchg
adc
mov
into
es
test
dec
and
mov
rcll
scas
iret
lds
cbtw
jno
mov
xchg
cmpsb
jp
ds
rorl
push
in
call
xor
repz
xchg
aaa
cld
ss
je
lret
xor
test
sbb
repz
fwait
lods
fxch
aas
enter
mov
mul
shll
mov
cmp
xor
cmc
sbb
pop
loopne
xchg
push
leave
sbb
jb
mov
sub
push
pusha
mov
mov
push
jo
fnstsw
mov
or
aad
lcall
push
dec
fwait
into
jnp
popa
out
out
dec
outsl
fisubs
and
lret
adc
shl
mov
push
insl
mov
negl
inc
data16
ret
and
imul
cmp
cli
out
xchg
ss
and
adc
mov
inc
jns
or
or
out
jecxz
mov
or
insb
inc
icebp
inc
roll
gs
icebp
add
or
or
lcall
gs
pop
mov
adc
xor
push
adc
pop
mov
fimull
imul
jo,pn
aad
jnp
inc
add
jle
xchg
loopne
mov
cmp
xchg
fnstenv
outsl
ss
adc
mov
insb
push
cwtl
inc
call
mov
or
xchg
mov
jne
mov
jl
aaa
lahf
dec
and
and
inc
jge
pushf
sbb
loopne
addr16
jnp
jb
adc
sbb
fs
jno
cmp
orl
popf
in
testl
push
sbb
iret
sbb
repnz
fxch
mov
shl
dec
test
fldcw
test
sub
sbb
incb
push
pop
xor
mov
push
mov
out
jbe
mov
jno
repnz
pop
ds
or
sarl
jg
jp
xchg
lea
aas
leave
and
bound
cmp
lret
mov
icebp
lea
xor
jg
cld
ret
push
fadds
xlat
clts
dec
cmpsl
jmp
outsb
jns
pop
push
outsb
movsl
mov
inc
dec
ret
mov
gs
lret
inc
lods
std
add
ror
std
adc
xchg
adc
data16
or
and
std
ss
pop
fwait
sahf
push
std
insb
xchg
jg
jns
fsubrp
mov
dec
in
cltd
shrl
cmp
mov
test
pop
loop
popf
pop
xchg
and
and
jb
mov
inc
into
movsl
sub
inc
add
cmp
inc
mov
cmpsl
mov
add
pop
xor
sub
xchg
fisubl
dec
push
mov
push
loop
ficoms
into
push
sub
in
ds
clc
jmp
pop
outsb
or
cmpsl
pop
or
mov
das
xchg
nop
xchg
lods
inc
xchg
xchg
ja
mov
pop
jae
or
ret
lahf
cmp
adc
cmp
pop
add
dec
fcoms
outsl
inc
ds
repz
mov
out
clc
jno,pn
add
and
in
mov
cmp
jge
xchg
push
pusha
cmp
rol
fcmovnbe
and
jl
js
cmpsb
ljmp
cmp
ret
pushf
scas
pop
out
gs
aam
sbb
fsts
adc
les
mov
mov
push
cmp
add
adc
push
fidivl
lret
sti
cwtl
jmp
std
fwait
loopne
lret
sub
adc
popl
inc
jecxz
xchg
je
fisubs
subb
xor
cwtl
iret
leave
repz
xor
pop
imul
mov
addl
jae
iret
sub
sbb
add
pop
loopne
test
cmp
adc
mov
cmpsl
popa
inc
orl
push
inc
pusha
rclb
sbb
lods
ja
jl
jp
outsb
jmp
or
pushf
js
pop
lock
movsb
outsb
stc
jne
sti
pop
daa
mov
in
and
lock
test
pop
jmp
mov
mov
inc
xchg
fcomi
inc
xor
mov
add
cmp
jno
xchg
and
dec
roll
cmp
test
lock
pop
inc
jnp
loope
add
xor
arpl
sbb
popa
or
dec
xor
adcb
sahf
or
out
clc
push
xchg
xchg
lods
inc
cwtl
iret
fsubrp
shrl
arpl
or
add
popf
push
dec
inc
icebp
out
sub
push
jmp
mov
cmc
ljmp
pop
icebp
xchg
lods
rorb
mov
sub
jns
sub
push
movsl
rcrb
push
and
adc
pop
sbb
push
add
lret
bound
sbb
mov
ficomps
mov
mov
call
fs
xor
je
in
lock
insb
ret
push
mov
ret
dec
sbb
fldt
jcxz
filds
mov
out
mov
push
add
stc
imul
sub
ret
sti
imul
das
sahf
leave
scas
movsl
sbb
call
adc
add
pop
xchg
pop
icebp
in
lahf
cld
push
mov
adc
daa
das
cwtl
scas
ds
sbb
sbb
sbb
inc
or
xchg
lds
mov
shrb
out
int3
jmp
jo
inc
int3
push
fildl
clc
iret
cmp
leave
ret
sub
xchg
mov
xchg
addl
or
mov
sbb
and
outsl
mov
xchg
push
stos
sub
sub
test
push
dec
sub
xorl
rcrb
rclb
push
pop
push
mov
scas
shrl
pop
addb
jmp
sbb
or
insb
sub
rclb
cld
inc
push
in
push
stc
xchg
mov
inc
pop
in
insl
or
xchg
inc
or
cs
and
mov
sahf
out
dec
out
fidivrs
ds
mov
sbb
add
cmpsb
xor
cmpsb
mov
mov
xchg
mov
adc
pop
jge
adc
insl
test
loopne
dec
cld
jae
cmp
add
dec
loop
data16
jae
inc
adc
jmp
shll
sub
mov
push
mov
push
push
mov
out
in
add
std
xchg
jp
mov
push
xchg
cmp
stos
repz
shlb
int
in
test
dec
test
sahf
inc
dec
stos
sbb
in
push
xor
fsubr
jmp
lahf
andb
jo
dec
mov
icebp
ret
test
es
bound
fwait
or
pop
hlt
js
aas
into
enter
lcall
mov
adc
jo
inc
push
xor
push
in
aad
cltd
pop
pop
in
ds
adc
inc
and
bound
arpl
cmpsl
lods
and
rorl
cwtl
xchg
stc
and
cmp
mov
repnz
pusha
shlb
enter
cmp
mov
inc
test
mov
lahf
jle
sbb
test
rclb
shlb
fistpll
xor
mov
addr16
xchg
pusha
ljmp
xor
mov
lds
adc
fwait
dec
aaa
cmp
mov
push
sub
nop
js
fistps
dec
movsl
imul
xchg
movb
mov
mov
jae
cmp
mov
idivb
cli
outsb
push
xchg
jo
jg
add
cmp
outsb
and
movsl
imul
sbb
add
adc
xor
pop
xchg
clc
shr
pop
cmp
pop
add
mov
adc
sub
test
xchg
clc
sub
cmp
cmp
loopne
xor
sbb
push
imul
mov
in
aaa
addr16
je
fwait
lock
and
and
shl
fcmovnb
mov
and
mov
sbb
cmpsb
pop
jns
mov
test
aam
lds
jno
pop
lea
ret
test
leave
xchg
or
sarl
mov
adc
push
pop
jecxz
inc
aas
lods
pop
inc
testb
push
leave
jns
xor
or
sbb
mov
mov
ss
fldl
xchg
fnstsw
repz
inc
dec
xchg
sub
lods
mov
pop
fs
adc
sbb
dec
xor
jae
fwait
inc
jecxz
shll
push
jno
adc
imul
call
test
lcall
add
push
fnstsw
sbb
outsb
loop
xor
xor
pop
xlat
mov
inc
or
or
sahf
test
ficoms
clc
addr16
jmp
pushf
fists
test
repnz
and
stos
addr16
mov
inc
and
scas
aam
sarb
xchg
lds
and
mov
cmp
sbb
mov
mov
xor
cmp
test
lds
lds
mov
aas
cmp
cmp
jnp
add
loopne
aad
mov
loopne
add
sbb
pop
jbe
cmp
mov
jmp
sbb
mov
loop
inc
jecxz
aad
shll
aam
dec
adc
paddd
push
nop
push
and
clc
jae
outsb
lret
mov
std
xor
test
jge
loopne
inc
loopne
cmp
mov
jge
inc
fisubl
and
jle
test
xor
cmc
insl
mov
lea
in
stos
sbb
in
cmp
sbb
movsl
lret
iret
xchg
div
leave
or
mull
fs
cli
lds
dec
addl
lock
push
enter
dec
hlt
sbb
dec
jae
stos
in
repz
sbb
lds
push
adc
int3
scas
xor
pop
ucomiss
arpl
sbb
pop
scas
pop
js
and
and
mov
insb
andb
jmp
dec
xchg
div
sbb
jb
ds
cmp
in
fcmovnu
xchg
lcall
jno
cmc
mov
test
test
mov
jae
sti
icebp
scas
je
into
cmpxchg
jmp
aam
in
xchg
mov
stos
xor
or
sub
pop
les
xorl
add
test
insl
mov
sub
mov
scas
fwait
dec
sahf
jne
and
or
pop
jle
add
ss
push
cwtl
push
arpl
mov
divb
std
adc
and
xor
lahf
mov
incl
cli
inc
cltd
cmp
mov
sub
mov
in
test
xchg
gs
mov
std
aam
xchg
pop
sub
jae
push
mov
mov
in
cmp
dec
into
push
leave
mov
mov
or
arpl
jbe
dec
mov
and
and
cmp
shll
mov
xchg
dec
stos
cwtl
dec
repnz
dec
ret
inc
ret
imul
push
addb
leave
stos
mov
pop
pop
sub
sub
xor
popa
test
mov
xchg
pop
sub
inc
add
mov
jo
inc
and
dec
arpl
sub
stc
add
pop
sub
lahf
dec
push
jecxz
mov
lea
or
xor
icebp
mov
adc
mov
sahf
repnz
int
sar
cs
out
popa
cmp
pop
jp
outsb
cmp
inc
mov
lea
add
jbe
sub
shll
and
call
dec
iret
leave
jb
fs
push
or
cmp
inc
scas
mov
out
fisttpl
mov
mov
mov
cmp
loop
mov
fistps
and
testl
lea
outsb
push
sbb
addl
push
adc
shll
mov
fisubs
push
cmp
in
mov
mov
push
mov
push
adc
adc
loopne
cmc
repnz
mov
dec
in
or
cmp
test
loop
test
push
popa
jle
hlt
mov
pop
jmp
and
or
test
push
dec
cmc
loopne
outsl
push
adc
in
xchg
sub
mov
fimull
mov
add
dec
pop
xor
fildl
cmp
rcll
pop
or
leave
fidivl
xor
arpl
xor
push
sbb
mov
add
inc
call
insb
roll
pushf
and
and
add
pop
lods
sbb
sub
fst
push
sub
jnp
insb
mov
mov
and
xchg
mov
add
mov
xchg
std
push
xchg
dec
jl
movsb
into
in
sub
loopne
xlat
xchg
mov
aas
push
les
jmp
jns
sti
scas
mov
or
pop
mov
mov
xchg
lods
cmp
jae,pt
je
aad
int
shrb
xchg
negb
loopne
pop
xchg
jno
jns
mov
inc
sub
jnp
dec
dec
sbb
scas
rorb
xchg
in
scas
jg
jno
stos
lahf
push
int3
cmpb
scas
adc
sti
mulb
loopne
jmp
hlt
movsl
clc
rcll
sub
jl
into
imul
lcall
repnz
mov
cltd
outsl
ljmp
xor
xor
add
push
pop
sbb
test
insb
mov
push
popf
cwtl
jl
mov
inc
std
sub
js
inc
mov
test
push
out
add
shl
scas
xlat
xor
test
pop
iret
enter
pop
mov
cmp
inc
sub
imul
and
shr
aas
mov
xchg
nop
pop
inc
pop
test
stos
push
in
mov
xor
lock
int3
mov
je
push
int
lahf
jg
lahf
cmp
loopne
ret
pop
mov
out
ds
fidivl
in
test
pop
mov
scas
lret
sahf
push
jae
cmp
or
nop
ljmp
mov
aaa
leave
push
mov
in
xor
jecxz
cmp
test
outsb
pop
pop
jle
push
and
push
pop
pop
stos
jle
lahf
shl
adc
sub
mov
mov
and
pop
inc
imul
and
out
flds
jl
jp
jecxz
test
xor
jmp
int
push
cmp
mov
inc
adc
mov
adc
out
sub
add
movsl
mov
arpl
jecxz
ss
mov
fs
imulb
aas
clc
jl
adc
mov
clc
xchg
cmp
pop
rorb
adc
ljmp
aaa
adc
push
enter
call
dec
shlb
cmp
inc
int3
in
test
lods
outsb
mov
sub
cmpsb
cltd
cmp
add
and
ss
dec
cld
add
adc
push
rclb
ret
in
jae
mov
outsb
clc
pop
sub
lcall
testb
in
push
sub
or
pop
mov
adc
sub
inc
mov
inc
jg
xor
rclb
adc
cwtl
mov
jmp
adc
xor
sbb
jnp
xchg
mov
cbtw
inc
dec
xchg
dec
lret
sbb
stos
jb
inc
rolb
pushf
xor
sub
pusha
movl
call
dec
mov
popf
jb
push
inc
out
mov
outsl
jno
das
mov
in
push
xchg
mov
das
mov
mov
cmp
or
adc
pusha
cld
aaa
mov
call
and
xchg
stc
lahf
into
and
mov
dec
fsubrl
jp
mov
mov
mov
adc
leave
adcl
jg
cmp
push
push
push
pop
mov
lret
jmp
inc
jne
and
lahf
data16
sbb
cmp
mov
loop
lahf
sbbb
mov
imul
popa
mov
jns
subb
inc
jecxz
adc
push
sbb
popa
sbb
iret
stos
mov
fiaddl
mov
pop
sbb
cmp
adc
stos
fsubp
out
sarl
jl
push
xor
aas
enter
scas
sahf
aaa
pop
out
aam
xlat
mov
pusha
adc
pop
test
xchg
popa
insl
jno
pusha
lret
aam
adcb
loop
mov
adc
out
ficompl
mov
inc
adc
push
pop
imul
adc
jecxz
push
jae
into
push
bound
mov
enter
and
stos
out
mov
test
les
fldl
fistl
push
adcb
outsl
pop
stos
shr
xor
adc
xchg
jl
popf
mov
ret
xchg
push
cmp
test
cmp
xcrypt-cbc
cmpsl
adc
mov
lods
cmp
cs
loope
and
xchg
mov
je
jp
movsl
xchg
fadd
jnp
pop
adc
cld
xor
adc
pushf
clc
cltd
dec
jl
pop
jge
out
fmull
mov
inc
adc
add
mov
fwait
mov
inc
jge
ds
pop
xchg
sub
popa
fistps
adc
int
inc
jecxz
lock
cmp
mov
cmp
pop
outsl
add
jbe
jbe
and
mov
pop
or
outsb
cmp
bound
sub
mov
dec
fcomps
icebp
push
loope
mov
das
mov
and
xchg
xchg
cmp
mov
test
or
add
or
divb
jbe
jmp
adcl
inc
das
pop
push
aad
lods
dec
aaa
ds
xor
xor
inc
mov
in
fs
cmpb
movsb
movsl
insl
lcall
pop
mov
stc
lret
int3
xchg
mov
outsl
or
adc
lods
sbb
xor
mulb
jl
lahf
repz
enter
and
lret
ss
and
pop
pop
loopne
mov
ljmp
cli
and
inc
jb
loopne
mov
adcb
fcompp
inc
mov
inc
or
cmp
leave
shrb
shll
aaa
pop
fstl
and
js
aaa
call
sbb
fdivrl
cli
sub
xchg
sti
push
orl
cmp
pusha
les
jp
lcall
hlt
sub
xchg
sbb
jg
pop
jmp
mov
sub
sbb
mov
jb
xor
xor
xor
sbb
add
ds
xor
mov
setg
dec
test
sbb
add
sbb
pushf
xchg
add
inc
adc
out
or
mov
insl
push
dec
test
add
cs
mov
push
and
shlw
cmpl
sub
aas
int
mov
dec
jo
add
jg
mov
jo
inc
enter
dec
loope
repnz
cmc
hlt
enter
inc
jg
push
cld
pusha
and
sub
scas
cs
add
cmpsl
shl
orb
xchg
dec
stc
add
push
mov
std
jl
mov
test
jno,pt
pop
xor
pop
fisttpll
adc
loopne
push
repnz
xchg
ds
mov
add
stos
lret
sbb
repz
push
and
sahf
adc
orb
adc
cmp
les
dec
repz
and
bound
mov
popf
jl
ja
and
mov
push
popf
cli
sub
adc
fstps
test
adc
das
divl
xchg
out
outsb
testl
sti
jno
push
inc
repnz
xchg
add
dec
loop
cmp
xchg
sbb
mov
jmp
mov
cmp
rorb
add
mov
mov
cmpl
call
inc
sarb
adc
js
dec
movsl
mov
mov
dec
and
cmp
jno
cmp
xor
clc
ljmp
adc
adc
lea
std
push
rcrb
aas
iret
inc
test
pop
xchg
push
dec
add
subb
xor
movsb
movsl
jg
dec
add
outsb
push
push
jmp
adc
mov
add
mov
xor
and
dec
xchg
xlat
int
add
lret
sub
and
dec
aaa
out
push
ljmp
aad
pushf
inc
fidivl
xchg
lahf
cmpsl
dec
pop
rclb
int
cmp
push
xor
add
jae
cmpsl
into
hlt
xchg
testl
lahf
cmp
test
add
jne
out
fsubs
and
lret
push
xchg
sbb
xor
aas
push
push
lods
inc
pop
mov
jle
cs
mov
cmp
movsl
addb
outsl
mov
rorl
mov
push
fists
shr
mov
cmp
gs
into
js
push
pop
inc
adc
fisubl
xchg
mov
jecxz
outsl
test
insb
jecxz
out
inc
fnstsw
mov
inc
xchg
lods
imul
add
jle
jmp
xchg
cmc
dec
pop
jb
stos
mov
pop
mov
popf
inc
cmpsl
cmp
lahf
pop
inc
mov
lcall
int
daa
push
inc
xchg
imul
xchg
sub
pop
mov
in
rorb
test
fisttps
jno
mov
stc
int3
repz
push
push
mov
mov
mov
cmp
movsl
jb
fldcw
push
lods
leave
xor
jl
mov
xor
mov
inc
fmuls
push
adc
mov
xlat
mov
add
loopne
and
push
xchg
add
add
mov
xchg
jl
mov
movsb
daa
clc
sub
ljmp
jne
out
add
movsl
sahf
jmp
dec
add
enter
ret
ljmp
sub
add
or
arpl
push
cltd
pop
dec
mov
jo
add
test
ljmp
push
imul
ljmp
sti
dec
mov
sbb
lcall
out
mov
ds
rcrb
fbld
shll
jl
daa
sbb
xor
clc
sub
shll
mov
mov
dec
cmp
cmc
pop
xchg
in
add
sbb
ds
pop
mov
fnstenv
xor
xchg
jnp
imulb
pop
sbb
fidivl
pop
mov
jb
push
das
int
dec
loop
push
cld
sub
nop
test
dec
adc
add
sbb
pop
test
sbb
sbbl
pop
cmp
jnp
lcall
std
mov
sub
je
addr16
pop
add
cmp
jg
push
in
test
mov
aaa
clc
mov
in
fists
xor
xchg
in
je
jns
ficomps
hlt
ja
ljmp
jnp
addr16
inc
sahf
jb
dec
or
sbb
ja
xchg
into
imul
shll
outsb
icebp
jl
outsb
add
jg
push
mov
add
and
or
fcmovu
xchg
cmp
pushf
add
jae
adc
das
xchg
xor
pop
sbb
cwtl
adc
iret
adc
outsb
in
jg
hlt
lahf
sti
mov
xchg
in
mov
nop
dec
sbb
rep
cltd
pop
push
pop
inc
lret
adc
mov
inc
push
lret
test
push
mov
mov
fwait
add
and
or
ss
cltd
and
test
repnz
repnz
jp
nop
jge
nop
lcall
jbe
dec
adc
enter
adc
xor
imul
ds
pusha
fucomp
pop
movsl
shrb
sub
shrl
cld
jge
es
popaw
push
in
push
movsb
sub
sbb
jge
enter
sbb
in
adc
push
pop
xchg
jle
int3
rorb
ficompl
cmp
das
jg
xchg
je
push
jge
scas
xchg
pushfw
add
lea
mov
sub
mov
lcall
adc
sbb
sub
out
in
sub
push
outsl
jbe
scas
cmp
sar
adc
mov
in
ficomps
and
inc
aad
xlat
rorl
clc
mov
adc
lods
cwtl
xor
adc
mov
xlat
sbb
push
bound
push
sub
adc
cmp
sub
mov
push
inc
repz
inc
push
pusha
xor
mov
movsb
mov
out
out
popa
das
xor
inc
and
icebp
mov
pushf
xchg
movsl
adc
ret
les
lds
mov
xrelease
aad
inc
repz
sub
incl
jo
mov
push
das
das
mov
fldt
jo
jbe
xor
add
jmp
xchg
cs
ja
mov
pop
mov
mov
push
mov
jge
shll
sub
stc
leave
outsb
sbb
jecxz
in
mov
push
xor
int3
xor
or
or
fs
in
test
xor
push
out
inc
add
sbb
filds
sahf
in
jbe
mov
scas
loopne
push
out
mov
andb
push
xchg
xchg
sti
mov
mov
adc
jbe
scas
adc
test
xor
orb
fldl
xor
lods
mov
je
push
ret
dec
call
dec
call
ja
inc
pop
cld
lcall
ds
push
fmuls
mov
icebp
fld
andb
lock
adcb
scas
imul
jo
push
iret
inc
clc
popf
mov
mov
sub
xchg
shrb
push
push
scas
cmc
mov
xchg
adc
dec
mov
adc
mov
sar
inc
jo
xchg
sti
sub
fxch
xor
cmpsb
ficoml
lahf
js
push
sbb
cld
inc
inc
adc
movsl
fmull
lds
es
arpl
cmp
movsb
fwait
or
in
pop
fimuls
loop
lock
icebp
dec
pop
adc
mov
add
mov
jecxz
dec
jp
scas
sub
inc
cmp
xor
negl
repnz
data16
mov
adc
int
cmpsl
xchg
fcomps
in
jae
shll
fnstenv
mov
es
inc
mov
sub
hlt
addr16
pop
pop
repnz
leave
and
hlt
push
pop
fidivs
and
adc
mov
push
or
out
ret
out
cmpsb
pop
or
mov
lret
inc
xor
push
jl
scas
sub
inc
sub
ljmp
push
xor
in
mov
xor
or
jb
fistpl
cmp
inc
xchg
inc
mov
add
add
les
or
lods
xor
push
jae
in
mov
ret
sbb
add
dec
nop
mov
test
mov
insl
outsl
outsl
loop
ss
or
push
sti
lods
out
lock
fcoml
les
or
inc
faddl
push
mov
xlat
aam
cs
mov
and
sub
jle
in
inc
outsl
add
cld
jnp
sbb
mov
cli
std
add
stos
xor
pop
cmpsl
inc
and
test
outsl
movsl
push
xor
ds
mov
mov
push
popa
mov
cmp
push
ret
inc
jmp
push
dec
dec
add
mov
ljmp
dec
imul
xorl
inc
mov
aad
mov
add
pop
add
mov
and
xchg
pop
std
and
pop
and
mov
ljmp
dec
mov
sahf
xor
xor
pop
or
shl
js
out
out
movsl
outsb
pop
mov
mov
stos
out
cmpl
nop
sub
lea
xchg
sub
inc
jl
dec
inc
adc
int3
pop
mov
or
xor
int
std
mov
sub
out
inc
sub
mov
xor
xchg
cmp
xchg
dec
addr16
cs
data16
pop
in
dec
or
pop
mov
ss
hlt
outsl
cli
adc
icebp
movsl
out
and
loopne
test
gs
lahf
fcmove
es
fcoml
mov
pop
mov
out
popl
jo
scas
gs
add
pop
lret
add
out
rcl
cmp
mov
mov
xor
lds
mov
add
sarl
test
scas
shll
jns
xchg
gs
or
movsl
fdiv
hlt
cmp
imulb
fs
push
ret
xchg
imul
test
int
push
push
cwtl
or
sbb
adcb
clc
rcrb
ret
lahf
fnstenv
xchg
fs
mov
push
and
push
mov
push
loopne
scas
inc
push
bnd
mov
cli
cmp
imul
or
jb
mov
xchg
in
aaa
stc
sub
xor
adc
sbb
xor
loop
or
add
push
pop
add
adc
xor
push
stc
idivl
call
dec
cs
js
adc
in
aas
frstor
pop
inc
cwtl
or
loop
and
pop
aaa
jae
mov
push
xchg
pop
sub
aas
add
add
jno
inc
fildll
xor
or
cmp
cmc
pusha
inc
sub
mov
lods
ss
adc
lea
imull
popf
inc
loope
nop
mov
xchg
jecxz
dec
sub
jnp
jl
push
ja
xchg
sti
cmp
xor
mov
testb
daa
or
movsb
mov
sub
cmp
mov
popf
lahf
loope
lret
push
dec
dec
mov
xor
cwtl
mov
js
mov
call
pushf
xchg
sub
jbe
fstps
call
das
dec
in
ret
jl
imul
lret
scas
mov
mov
jb
sbb
stos
and
movsb
iret
pushf
pop
js
and
jns
ds
mov
cli
xchg
mov
mov
xor
push
and
pop
pop
xor
cmpsb
lret
pop
and
pop
loop,pt
dec
ss
icebp
mov
xchg
sti
das
xor
in
push
adc
ja
inc
into
mov
rcrb
mov
outsl
pusha
addr16
sahf
lds
mov
xchg
pushf
mov
das
aad
mov
jae
cmpsb
xor
fsubrs
daa
aad
and
jnp
inc
push
leave
test
test
out
lods
jae
mov
pop
sahf
cmp
outsb
scas
sub
aas
bsr
sbb
fstl
mov
xor
ljmp
subb
aam
mov
test
shrb
fbld
or
mov
jno
inc
in
int3
and
test
outsb
and
mov
ljmp
dec
popf
ret
into
and
test
push
cmpb
mov
cs
stc
pop
adc
outsb
and
dec
mov
lret
xchg
sbb
push
jb
pusha
add
daa
mov
or
pusha
ljmp
xchg
ds
pop
dec
xorl
dec
mov
ja
and
enter
aas
iret
xchg
orl
mov
jns
push
std
orb
adc
xchg
xor
cld
subb
pop
cltd
mov
xor
insb
mov
mov
loope
add
sbb
push
pop
inc
sub
fisubrl
add
bound
jno
in
lret
popa
jle
cs
jecxz
jle
adc
data16
insl
insl
mov
add
aam
dec
jb
inc
test
dec
jmp
jbe
add
scas
xchg
inc
shll
fwait
pop
test
adc
cmp
out
in
xor
ja
mov
pop
into
mov
and
hlt
in
mov
pop
in
test
jbe
daa
push
push
cltd
insb
negb
cwtl
adc
dec
pop
loope
call
bound
roll
jmp
dec
pop
mov
dec
enter
lods
aad
icebp
inc
icebp
mov
sub
push
jb,pt
jns
pop
mov
loope
adc
jnp
nop
cmp
push
out
sahf
insl
adc
xchg
fildll
test
lcall
mov
mov
int3
mov
aaa
dec
les
or
ret
xchg
out
mov
ror
pop
out
jnp
rcrl
cli
or
sub
in
dec
fs
sbb
adc
ljmp
add
rcrb
cmpsb
sub
xor
mov
shrb
lea
les
and
mov
pop
add
sbbb
in
add
test
xor
push
frstor
orb
fwait
push
xchg
imull
inc
jns
adc
insl
jle
mov
push
mov
repnz
push
sub
sbb
sub
mov
add
mov
lds
inc
mov
push
xor
call
sahf
into
ss
je
bound
fadd
scas
inc
and
sbb
sbb
in
add
movsb
sbb
mov
jne
adc
ret
shll
insb
loop
popa
jle
push
nop
ret
sbbb
lods
sbb
daa
dec
adc
jb
cmp
in
shll
sub
movl
xchg
imul
xor
imulb
push
out
push
sub
out
xlat
xor
sbb
sub
test
movsl
loope
adc
mov
leave
add
fwait
aad
scas
lahf
cli
jle
cmp
inc
mov
fmull
and
sub
mov
lds
or
fidivrs
adc
int
xchg
test
xchg
out
sub
imul
enter
mov
call
clc
clc
mov
cmc
xchg
popf
mov
dec
sbb
sbb
scas
loopne
fimull
cld
cmovns
pop
inc
shrl
mov
mov
outsb
mov
aad
jmp
insl
inc
mov
aam
mov
cli
jl
cmpsb
ss
jle
lds
repnz
sbb
push
and
xlat
add
je
lahf
nop
jns
ret
mov
andb
push
push
mov
push
stos
dec
pop
incl
scas
cmp
push
movsb
mov
pop
das
shlb
pop
stc
adc
mov
stc
cmp
push
add
xor
cld
loope
add
mov
loope
iret
jnp
dec
mov
pusha
xchg
mov
insb
and
loopne
lret
lock
jge
outsb
cmc
popa
sub
and
in
icebp
push
adc
push
xchg
pop
jge
push
stos
bound
lods
in
add
fists
shll
push
xchg
sub
insl
std
hlt
lods
jmp
push
mov
sbb
adc
dec
jmp
sub
push
xchg
loope
aas
mov
push
lcall
loopne
lcall
mov
hlt
cmp
mov
add
clc
hlt
inc
sbb
vmovntps
ficoml
cli
pop
sbb
cmp
es
dec
jb
pop
mov
jg
inc
dec
cwtl
cs
pushf
or
fmull
xchg
aas
add
jnp
xlat
dec
lret
or
mov
movsb
mov
mov
pusha
into
in
shll
aaa
mov
hlt
xchg
loop
add
sub
arpl
adc
lods
inc
inc
and
inc
fcomi
call
inc
jnp
aam
dec
jne
movsb
ret
xchg
mov
mov
loope
or
sti
shll
mov
call
pop
sub
shlb
mov
add
aas
or
idivl
mov
movsb
fcomp
movsl
clc
repz
or
fld1
pop
fs
into
mov
inc
add
mov
push
gs
fisttps
fcomps
adc
xchg
adc
movsl
and
adc
fadds
or
push
cmp
jb
ss
inc
repnz
adc
push
inc
adc
mov
and
decl
push
out
repnz
out
sub
pop
and
sbb
mov
adc
aaa
or
inc
sahf
sub
sbb
mov
add
pop
ljmp
jg
mov
pop
sarl
test
pop
dec
cmp
push
fcmovne
je,pt
pusha
mov
mov
pusha
xchg
jmp
popf
add
fsubrl
es
add
cmp
ljmp
sbb
add
sahf
xlat
xchg
dec
and
int
inc
gs
cwtl
cmp
push
out
mov
sub
std
dec
lret
and
mov
cmpsl
xchg
push
sbb
inc
testl
mov
mov
ret
rorb
sbb
fnsave
pop
jns
cwtl
int
lahf
jmp
mov
cmp
jns,pn
aam
jmp
je
xor
enter
pusha
push
xchg
frstor
add
pop
inc
mov
mov
lea
mov
das
scas
mov
sub
loope
inc
push
cmp
pop
push
inc
dec
filds
mov
pushf
fistpll
jo
repz
scas
int
jecxz
ljmp
push
ja
adc
xchg
mov
adc
cmp
int3
jbe
xor
dec
mov
in
cmc
jg
pop
jge
push
sbb
bound
hlt
adc
xchg
out
inc
addr16
imul
adcl
cmp
mov
into
fnsave
mov
leave
lcall
sahf
push
adc
and
pop
mov
insb
subl
outsb
lcall
adc
fisubl
arpl
cmp
adc
mov
fs
scas
int
mov
pop
mov
mov
sbb
into
pop
pop
xchg
testl
mov
adc
lret
push
ss
mov
pop
sub
fldl
mov
cmc
push
inc
pop
jl
mov
in
or
cs
scas
rcrl
xchg
adc
xor
testl
popf
dec
hlt
out
jecxz
jl
test
pushf
cmpsl
push
pop
push
mov
fdivrl
inc
sahf
push
enter
inc
addl
jns
bound
ja
std
adc
jmp
push
addr16
push
addr16
arpl
and
push
fwait
or
popf
cwtl
sbb
out
xchg
fs
lahf
call
adc
push
push
into
dec
mov
iret
fwait
xchg
ret
dec
or
hlt
imul
dec
push
popl
jne
and
xchg
and
and
movsb
mov
pop
inc
cmp
je
jle
adc
mov
push
jecxz
inc
int3
sarb
mov
and
fidivl
xor
nop
xchg
inc
fldenv
pop
ds
dec
fcoms
lea
int3
pushl
lods
lcall
ror
in
and
cld
dec
cli
es
add
lods
mov
clc
outsl
xor
sbbl
dec
fwait
mov
pop
xchg
mov
and
jecxz
out
shrl
jnp
mov
sub
mov
idivl
adc
push
js
or
sub
cmp
jbe
loopne
cwtl
int3
das
jmp
ss
in
mov
or
sub
or
cmp
mov
inc
sahf
mov
pop
cmp
cld
push
dec
jb
js
xchg
jmp
adc
xchg
push
cs
xchg
adc
sbb
out
dec
scas
dec
xchg
mov
rcl
call
jl
aaa
gs
icebp
cwtl
outsb
lods
mov
xchg
test
mov
scas
outsl
repz
dec
cs
out
xlat
aaa
pop
fwait
mov
shlb
inc
rolb
jmp
cmpsb
add
dec
orl
dec
fldt
adc
jp
mov
xchg
jnp
pop
add
test
mov
fiaddl
das
push
and
andb
enter
pop
jmp
out
add
stos
mov
das
push
xchg
jecxz
enter
enter
xchg
js
icebp
les
rcrb
xchg
adc
mov
sarb
lret
add
mov
jne
mov
add
dec
bound
js
mov
mov
sub
js
xchg
mov
cmc
stos
nop
pusha
xchg
adc
mov
movsb
mov
test
aas
dec
popa
adc
push
lret
and
xor
jnp
add
mov
lods
jge
or
pushf
jecxz
sub
push
mov
cltd
mov
sbb
or
mov
loop
push
pusha
inc
mov
adc
push
jno
xor
cmp
ljmp
push
mov
dec
sub
cmpsl
mov
push
mov
ja
mov
mov
or
in
jp
popf
ret
add
adc
xchg
je
jno
pop
or
stos
mov
pop
test
hlt
cmp
sub
mov
imul
ljmp
mov
push
movsb
jae
cwtl
out
push
lcall
in
xchg
add
jmp
mov
or
xchg
fstpt
setg
mov
mov
cld
addr16
movsb
cwtl
dec
clc
test
lds
je
scas
test
subb
pop
push
in
sub
lock
pusha
pop
and
shll
cmpsb
outsl
in
lahf
popf
out
pop
jnp
les
push
test
lds
mov
and
fstp
push
dec
xor
cmp
jge
sub
hlt
adc
mov
lods
mov
jne
lahf
xchg
in
xor
jp
mov
cmp
mov
pop
nop
loop
lahf
test
cmp
push
push
dec
cwtl
xchg
mov
pop
testb
fcmovne
adc
addb
repz
or
jge
sbb
in
rorl
mov
in
movsl
test
fcmovbe
inc
pop
mov
add
add
fidivs
add
call
dec
imul
mov
cs
push
push
pop
stos
jg
mov
adc
ds
dec
xor
jo
dec
js
jmp
adc
bound
lret
inc
lods
enter
xor
rcr
lahf
out
or
stos
or
ds
or
cld
testl
popa
sub
cmp
icebp
add
lea
ljmp
cmp
push
add
xor
and
sub
int3
mov
push
inc
and
shrb
xchg
add
xor
cmp
cmpb
sahf
add
cmp
das
jnp
imul
push
dec
add
int3
sbb
lcall
sbb
fsubl
xchg
push
lcall
cmpsb
test
test
popf
dec
into
jge
mov
scas
nop
push
sbb
jp
and
imul
add
pusha
dec
add
mov
push
push
cmp
lcall
adc
cmp
cs
fdiv
mov
gs
cwtl
dec
pop
std
push
stc
repz
jnp
orb
ret
cld
lods
test
xor
xchg
lret
and
push
xor
xor
test
mov
iret
sbb
add
in
orb
mov
into
arpl
xor
push
or
jno
test
and
cmp
pop
mov
xchg
add
lods
jle
xchg
imul
and
adc
ficomps
pop
div
sbb
cs
cmpsl
cli
pushf
add
push
inc
rcrl
inc
mov
xchg
repz
sbb
xchg
aad
push
inc
xchg
dec
jns
push
and
jo
adc
inc
mov
dec
loope
daa
popa
movsb
add
insb
adc
xor
das
add
or
cmp
push
imul
adc
mov
adc
aaa
iret
jns
mov
mov
out
scas
aas
test
ret
pop
cs
push
xchg
push
sub
xchg
clc
push
arpl
mov
shlb
add
cmc
outsl
movsb
loope
outsl
mov
pusha
adc
imul
outsb
push
pop
fcomi
mov
js
cld
jbe
fistpl
mov
xor
xchg
insb
aaa
adc
stc
std
mov
pop
xchg
or
les
roll
jno
arpl
cmpsb
mov
std
xorl
add
xchg
jo
cs
loop
test
sub
lret
mov
outsl
mov
jge
roll
aas
mov
cwtl
inc
inc
in
cli
mov
xor
mov
movsl
int
add
mov
ret
sbb
daa
push
je
xchg
sub
mov
cwtl
scas
orl
addl
xor
mov
sub
mov
loope
roll
xor
cli
cmp
push
inc
mov
cmp
cmpsl
repnz
int
xor
push
push
add
sub
pop
daa
push
mov
inc
jns
ljmp
jmp
lds
loop
cmpsl
pop
sbbl
fists
and
stc
inc
insl
imul
jg
bound
sbb
aas
shll
push
add
idivb
pop
into
cmp
ss
iret
orl
push
sbb
add
dec
mov
fsts
xor
adc
cld
lahf
cs
bound
adc
sub
fcomps
out
test
ljmp
scas
mov
mov
xchg
xor
addr16
dec
repz
pop
and
stos
leave
add
mov
iret
repnz
mov
scas
loop
sbb
xorb
xchg
out
fldt
cld
push
nop
iret
sbb
cmp
pop
cmpsl
stc
jne
mov
and
cmpsl
aam
add
loope
mov
mov
mov
jnp
fcom
test
mov
lahf
lods
and
cmp
enter
gs
js
nop
mov
sub
dec
out
lods
pcmpeqw
mov
xchg
sbb
notl
dec
addr16
xor
cmp
andl
mov
cltd
xchg
sbb
adc
fstps
incl
lds
inc
cmp
add
add
ror
mov
aaa
sahf
ds
dec
cwtl
popa
mov
outsb
sub
pusha
mov
ficoml
rorb
clc
notb
bound
neg
lds
outsl
xor
loope
leave
repz
add
xor
sub
push
imul
adc
fistps
jp
cli
stos
adc
dec
cmpsb
sub
xchg
mov
in
jl
dec
xchg
mov
das
ds
sbb
ja
cmp
pusha
outsb
out
leave
pop
sahf
gs
xor
imul
pop
mov
pop
std
fcomps
out
and
and
es
int
cmp
and
fcoml
es
sahf
mov
das
pushf
pushf
lea
jo
in
push
cmp
jb
in
enter
jo
outsl
xlat
test
lds
xchg
ljmp
adc
sub
or
arpl
and
xchg
fs
or
es
sbbl
jg
jmp
imul
enter
xchg
dec
push
leave
and
xchg
inc
in
test
mov
ret
outsl
adc
or
jne
add
aaa
stc
mov
lcall
xchg
imul
xor
in
cwtl
push
fcoms
add
ljmp
test
jb
flds
aad
mov
dec
jmp
lds
out
mov
pop
xor
mov
lcall
cld
xor
adc
cmp
sub
bound
fwait
leave
mov
lret
or
rorb
fimuls
imul
pop
fidivrs
inc
mov
das
sbb
and
xchg
or
sub
sbb
cmp
mov
test
push
push
fbld
dec
xor
xchg
push
sub
je
cmp
inc
mov
shl
lea
sarl
jb
test
ja
outsl
imul
in
loope
xor
stos
sub
and
push
xchg
xor
scas
sarl
push
imull
ljmp
call
xchg
dec
and
jge
add
and
int3
inc
push
cli
pop
mov
jecxz
repnz
aas
sbb
xor
push
lods
dec
inc
sbb
lea
in
xor
in
jl
jbe
sarb
insl
outsb
clc
xchg
push
sbb
stos
mov
rorl
aad
cmp
insb
push
lods
test
js
loop
call
pop
lcall
das
xchg
cmpsb
or
cmp
fcmovb
mov
sbb
fnstsw
jmp
daa
leave
loopne
imul
xchg
aad
adcb
lret
mov
mov
sbb
or
mov
add
int3
insl
jne
push
pop
jl
out
mov
cld
add
xchg
cmp
pop
js
lcall
dec
xor
shlb
leave
aad
popa
stos
sub
lock
and
inc
js
dec
loopne
push
pop
xor
adcl
or
insb
sub
inc
push
aam
movsb
add
aad
push
loope
pusha
or
dec
fdiv
push
add
add
data16
je
jp
movsb
or
sarb
mov
cmpsb
loop
movsb
add
mov
leave
rolb
fs
popf
leave
fadd
test
sub
sbb
cld
movsl
jl
test
xor
mov
mov
fisubl
clc
call
inc
cs
inc
lret
movsl
dec
push
jg
cmp
ja
data16
push
sub
sub
scas
sbbb
repz
out
cmp
in
ret
xchg
imul
ljmp
xchg
sahf
push
mov
cmpsb
stos
inc
push
inc
test
scas
gs
mov
or
adc
mov
fsts
dec
mull
popf
xchg
mov
in
cmpsb
imul
lcall
loop
movsl
jno
scas
jl
inc
cmp
push
sti
into
and
jecxz
push
add
test
test
fldt
and
lret
iret
fnsave
lock
popa
cmpsb
sahf
rcr
pop
and
or
insb
pop
shr
das
les
push
jmp
inc
mov
icebp
stc
shrl
mov
ja
loop
andl
mov
cwtl
jbe
aad
jno
jecxz
mov
cmc
loope
push
jg
aas
pop
les
daa
or
or
lahf
and
adc
add
sub
dec
ss
jge
jae
dec
pop
popa
xchg
xchg
pop
pop
jle
test
sub
fs
in
inc
jbe
dec
dec
mov
mov
lahf
adc
ljmp
dec
mov
and
or
and
mov
jp
mov
or
dec
push
jmp
pop
pop
in
push
repnz
pop
add
das
imul
stos
inc
in
pop
inc
fwait
mov
lret
test
shll
mov
push
adc
outsl
mov
jae
insb
cld
imul
sub
mov
icebp
scas
inc
mov
rolb
pop
movsl
mov
stc
mov
sbb
cld
cmp
cs
fists
mov
or
pushf
popa
push
mov
aas
test
push
or
mov
out
insl
add
xchg
in
ret
fsubp
insl
adc
icebp
pop
sub
xchg
mov
or
jmp
and
popf
lret
sub
jo
bound
test
fs
xchg
cmc
mov
stc
xchg
and
ss
xor
cs
push
mov
or
or
xor
and
shlb
lret
and
sub
push
mov
gs
cwtl
pop
inc
arpl
cmp
xor
mov
decb
adc
lods
mov
mov
add
es
movsb
daa
and
jbe
ja
hlt
in
cmp
xchg
sbb
movsl
cmp
nop
mov
dec
adc
push
xchg
pop
fwait
push
push
pop
xchg
repz
pop
adc
movsb
cs
lahf
xchg
rcpps
jne
add
lock
jae
and
cmp
cld
push
or
mov
pushf
add
sbb
popa
cmp
sub
push
in
sbb
fwait
cld
pop
mov
into
or
mov
sub
or
mov
push
call
jmp
ljmp
cli
mov
pusha
test
popf
lret
cld
scas
jae
sahf
outsl
out
mov
xor
cmpsl
test
fimuls
in
add
imul
aad
loopne
ljmp
sbb
fisubs
aas
jge
sti
dec
jns
rclb
sub
mov
mov
insl
shlb
mov
sub
ret
and
cmpsb
push
pop
outsb
scas
sub
push
test
fwait
fwait
sub
xchg
and
mov
sbb
or
sbb
jl
ja
stos
mov
scas
jne
pop
call
fiaddl
jle
add
xorl
mov
popf
gs
xchg
popa
pop
add
nop
leave
jmp
cmp
faddl
stos
cld
jnp
loopne
dec
das
cmpsl
sub
sti
cmp
mov
in
inc
cmpsb
into
mov
mov
scas
cs
repz
movsb
xlat
fisubrl
inc
out
dec
loopne
jecxz
imul
or
lds
sub
outsl
cmp
jne
jno
testl
mov
push
inc
mulb
sbbl
mov
iret
sbb
mov
cmpsl
roll
jnp
aad
mov
test
cmpsl
imul
lcall
lcall
fdiv
ljmp
fcmovbe
stos
and
and
push
loopne
mov
movsb
push
cmpb
aaa
mov
mov
cmp
xchg
cmp
inc
mov
mov
mov
mov
pop
cmp
mov
xor
adc
inc
xchg
mov
ret
lock
inc
rorl
out
sbb
xchg
cli
dec
ljmp
lahf
cs
xchg
stc
dec
xor
cmp
stos
ret
inc
aaa
cld
xor
rcll
push
cmp
xchg
sbb
fs
jns
mov
cmpsl
imull
jecxz
jns
stos
pusha
ljmp
inc
sti
jecxz
int
pop
fnstenv
and
icebp
and
pop
mov
cwtl
xlat
rolb
fisubl
adc
lds
and
ss
mov
sbb
push
dec
fisubrs
jae
cmp
lcall
cmc
and
add
rcrl
fists
cmpsb
dec
jp
jmp
jnp
cmp
push
jge
xor
lret
add
pop
std
jecxz
test
and
ja
add
xor
in
jns
andl
jg
mov
cmp
sar
dec
xor
adc
add
iret
push
mov
xchg
push
dec
or
mov
iret
add
imulb
fistps
push
test
inc
sbb
mov
pop
fcoml
mov
add
push
scas
xor
push
outsl
and
nop
inc
pop
xor
mov
push
push
xchg
aad
pop
hlt
dec
test
cmp
cmp
out
jne
lahf
subb
jae
or
repnz
xchg
mov
shl
inc
push
gs
or
dec
shl
mov
sbb
jnp
mov
fdivr
add
push
sbb
dec
stos
mov
loop
fbld
mov
test
out
out
push
ja
pop
enter
lea
ljmp
or
jle
inc
sub
ss
add
dec
stos
mov
adc
mov
pop
pop
jp
or
pop
push
add
jg
fbld
sar
bound
mov
push
fbstp
fimull
jb
cmp
xchg
das
adc
in
add
mov
dec
mov
xchg
push
sti
sub
add
xor
inc
loope
dec
pop
cli
loope
mov
mov
mov
cld
xchg
adc
xchg
push
hlt
outsb
pop
adc
xor
or
mov
jae
dec
pop
aas
loop
xchg
push
mov
dec
sti
cmp
loop
test
dec
das
mov
xchg
lret
fcoms
iret
daa
repnz
ljmp
out
xchg
sbb
in
jbe
dec
loop
shl
loop
mov
inc
sub
imul
stc
or
inc
dec
mov
sub
int3
sbb
repnz
mov
xor
arpl
mov
repnz
sarb
popa
xor
jns
daa
movsb
or
ljmp
mov
push
into
sub
pop
xchg
leave
mov
std
ficoml
es
repz
out
add
cmp
orl
sahf
sub
ljmp
mov
add
test
xchg
and
and
pop
movsb
into
or
mov
ja
mov
sbb
cmc
mov
decl
lods
not
jecxz
jp
cmpsl
test
lea
in
dec
cmc
inc
push
mov
fsubrs
jnp
mov
shlb
pushf
cltd
fmull
inc
jl
jb
dec
jb
adc
jmp
popa
ljmp
div
clc
shll
loop
addr16
test
cmp
sahf
sahf
mov
dec
ror
dec
adc
mov
pop
mov
and
mov
push
sbb
jecxz
stos
inc
jbe
push
decb
insb
icebp
dec
shl
jp
nop
and
imull
xchg
xor
popf
push
mov
and
iret
pop
int
mov
fidivrl
lea
cmp
push
imul
divb
aaa
test
add
and
cmpsl
hlt
jle
mov
aad
adc
pop
rolb
lret
lea
imul
test
pop
inc
data16
sbb
pop
ss
lock
insl
lds
pop
insl
andl
sub
jo
rcrl
ljmp
adc
leave
sbb
fcomps
cmpsb
pushf
mov
insl
xor
ret
and
or
xchg
add
or
hlt
push
rolb
outsl
cmpsb
or
cmpsb
clc
add
and
push
adc
push
mov
or
mov
fisubrs
cld
fs
push
mov
mov
fmuls
out
xor
fsubrs
inc
orb
push
mov
jmp
and
shll
out
les
jg
xchg
mov
sahf
or
iret
arpl
sbb
mov
mov
fdivrs
mov
sub
jo
in
in
mov
andl
das
mov
stc
lahf
cmc
xor
clc
rcr
pop
and
cmc
jne
push
xchg
jmp
inc
xlat
test
add
mov
mov
test
into
ja
loop
cmp
int
test
frstor
je
iret
xchg
sub
xor
movsb
jl
lret
mov
inc
jns
xchg
push
leave
into
test
das
ror
pop
xchg
and
lahf
addr16
mov
push
dec
mov
scas
setno
repnz
repz
sub
mov
mov
jmp
addb
mov
lds
call
or
adc
adc
pop
sbb
xlat
sbb
mov
bnd
out
call
insb
popa
ret
adc
adc
pop
into
aad
xchg
imul
cli
mov
div
push
rclb
cmp
mov
pop
add
jns
addl
js
les
push
inc
mov
fcmovnu
popf
out
pop
cs
testl
fwait
sahf
add
cmc
orb
lods
fwait
sahf
xchg
je
xchg
call
mov
push
sub
loop
ljmp
test
out
pusha
sub
mov
jecxz
andb
ljmp
pop
mov
js
sub
jbe
xorps
add
or
cltd
pop
mulb
add
or
dec
subb
cmp
xchg
decb
stc
jle
bound
std
stos
sti
mov
aaa
imul
out
xor
sub
jae
push
inc
cwtl
mov
push
mov
inc
xchg
ficomps
sub
pushf
lret
aas
jbe
dec
stc
and
in
icebp
xchg
jne
popa
jo
ficoml
and
ret
inc
outsl
xchg
sbb
icebp
dec
enter
mov
insl
stc
mov
xor
cmp
fmuls
xchg
xor
and
push
push
clc
mov
fimull
sbb
dec
dec
fwait
jb
lahf
pop
pushf
pop
xor
int3
jle
outsb
jns
cld
mov
arpl
pop
sahf
ud2
inc
pop
lret
movsb
loop
add
stos
hlt
sub
fstpl
sub
loopne
jecxz
mov
dec
loopne
push
mov
sub
xchg
mov
cmp
pushf
int3
pop
ret
test
inc
rclb
jl
out
push
mov
pop
scas
inc
cld
loop
xchg
jle
nop
jb
lods
icebp
pop
cwtl
xchg
lret
lds
xor
loop
sub
xchg
xor
testb
cmp
lock
ss
lods
lea
scas
in
pop
ficoms
mov
sti
int3
ret
out
sbb
jbe
cld
jl
outsl
call
cmp
dec
pusha
mov
sbb
jl
push
add
dec
adc
into
cli
mov
gs
dec
ficompl
gs
pop
imull
dec
pop
nop
ret
push
cmc
sub
jae
adc
jecxz
sbb
loopne
aad
jb
stos
sbb
jbe
mov
test
jecxz
inc
es
loopne
inc
insl
sarl
mov
add
jbe
dec
mov
xor
pop
popa
cld
mov
hlt
ret
or
push
imul
data16
paddd
and
push
es
mov
outsl
mov
rclb
imul
push
add
jle
cmpsl
add
ljmp
mov
add
pusha
dec
cwtl
ja
xchg
jmp
adc
js
and
or
ja
add
pop
loopne
sub
jae
sti
je
cmp
jp
adc
cmp
push
mov
test
push
es
and
aas
decl
arpl
out
mov
int
shrb
mov
bound
jae
mov
imul
cld
dec
filds
jmp
and
je
xchg
pushf
sbb
sbb
or
and
or
fisubs
add
push
adc
pop
jle
les
or
adc
or
xor
dec
mov
sub
pop
cmpsl
mov
and
dec
mov
inc
cmp
and
test
xchg
movsl
test
xchg
push
call
adc
ss
jno
popa
push
or
sbb
repz
movsl
jle
loope
insl
dec
aam
stos
or
jbe
lret
stos
je,pt
pop
jae
call
imul
lcall
out
fildl
bnd
pushf
mov
test
repnz
mov
sub
dec
pop
insb
sbb
jmp
cltd
xor
xchg
je
leave
add
je
out
pop
mov
jbe
pusha
dec
idivb
in
scas
ret
stos
xor
mov
jbe
push
repnz
gs
xor
test
stos
js
cmp
jg
ret
dec
pop
or
fdivrl
je
outsl
into
scas
push
pop
andl
adc
jnp
fwait
push
mov
dec
je
pushf
movsb
xlat
sub
jl
add
add
cld
mov
mov
adc
mov
adc
jbe
sahf
pop
cltd
data16
jmp
data16
aaa
pop
mov
pop
lods
adcb
lret
repz
ds
xor
stos
hlt
lret
mov
mov
aad
in
jle
dec
pop
mov
xor
inc
mov
inc
cli
stc
fbld
nopl
or
in
fnstcw
das
xor
fwait
mov
rcll
xchg
push
sub
xor
scas
js
mov
xchg
inc
xorl
push
adc
in
rclb
cltd
loopne
ss
aad
sahf
idivl
mov
dec
insl
sbb
push
in
test
mov
pop
pop
xor
fcmovb
mov
imul
ljmp
test
stos
sbb
sti
leave
adc
mov
ja
sbb
lods
mulb
dec
aam
mov
add
add
sub
ffreep
out
flds
lock
inc
loope
test
lret
rorb
dec
inc
data16
jge
pop
loop
cld
adc
xor
adc
and
cmp
es
adc
fildl
or
shrl
xor
sahf
setg
add
jle
sbb
or
sti
lods
fsub
pop
fistpl
xchg
stc
into
mov
ljmp
push
add
dec
jmp
mov
jge
mov
dec
nop
cltd
fdivp
insl
loope
popa
sub
xor
sbb
cmpsb
jg
xlat
pop
in
push
add
push
sub
fcmove
push
rorb
mov
mov
adc
add
pop
dec
sbb
nop
movl
xor
clc
das
icebp
aam
stc
xchg
or
ljmp
push
mov
jo
insb
jp
sbb
fisttps
mov
sets
or
dec
adc
mov
pop
xchg
push
pop
xor
mov
dec
adc
and
loopne
int
mov
movb
push
addr16
fstl
add
mov
and
lahf
shrb
adc
shlb
pop
in
dec
pop
lret
sub
mov
aad
or
sub
mov
insb
xor
sbbb
cmp
movsb
xchg
jbe
xchg
cmpl
jle
mov
movsb
js
fidivl
and
lea
jmp
mov
inc
or
add
lcall
sbb
test
or
inc
adc
dec
and
push
dec
xor
mov
mov
jo
stc
lret
pop
sbbb
mov
es
std
jmp
cmp
jo
adc
cli
adc
dec
lods
xorl
popf
in
xchg
cli
cltd
xor
fdivs
iret
sbb
jl
fimuls
pop
sti
arpl
enter
mov
push
stos
gs
mov
lret
mov
push
pop
jbe
push
int3
cmp
push
mov
dec
mov
sbb
mov
loopne
sub
or
mov
mov
dec
movsb
mov
jae
dec
mov
lcall
lcall
and
aas
jbe
cmc
jp
lods
repz
test
outsb
mov
sub
fildl
je
jne
jne
cmpb
jle
mov
xor
mov
mov
rorb
dec
mov
pop
and
arpl
int
dec
popa
testl
pop
dec
xchg
dec
pop
addl
fcmovbe
sbb
mov
and
int
cli
pop
out
mov
test
popa
stos
mov
test
sub
push
pusha
sbb
test
int3
cmp
js,pn
mov
jle
rep
jb
orl
push
jmp
add
rorb
loop
push
inc
test
mov
imul
push
or
sti
lret
inc
mov
fsubrl
add
pop
mov
divb
cmp
gs
cmpsb
ss
movb
mov
pop
fiaddl
mov
roll
xor
movsb
int
or
iret
cmp
jl
inc
or
adc
mov
dec
iret
and
arpl
ficoml
cmc
jmp
aam
pushf
aaa
ja
test
jb
dec
out
stc
addr16
adc
pop
outsl
cwtl
cli
xor
stc
loop
push
cwtd
ss
mov
xchg
js
movsb
adc
fs
fs
pop
leave
add
xchg
aaa
pusha
jl
test
fs
fwait
inc
pop
jns
and
xchg
mov
arpl
aaa
enter
adc
je
sbb
daa
addb
jle
scas
loope
repnz
ja
repnz
or
es
or
xor
sub
test
les
sub
push
xchg
hlt
xchg
dec
ljmp
es
pop
inc
xlat
push
jnp
je
es
inc
xchg
aaa
sar
imul
jb
in
outsl
jp
cmpsb
hlt
adc
movb
pop
aad
lcall
pop
pusha
xchg
mov
in
push
addr16
sbb
pop
je
in
out
movsb
ret
ljmp
lahf
adc
xchg
dec
test
mov
mov
fdivrl
divl
pop
sti
outsb
jnp
out
cmp
mov
jmp
jne
arpl
testl
stc
ds
mov
int
dec
lods
jno
sbb
lahf
sarb
les
xor
push
out
nop
sbb
mov
pop
data16
or
pop
sbb
push
push
mov
mov
enter
push
mov
jecxz
fcmovnu
push
stc
aaa
fs
cmp
int3
xchg
outsb
daa
lock
pop
inc
add
into
popa
insb
pusha
fs
xor
fldcw
fbstp
adc
dec
lret
outsl
add
icebp
sub
adc
pop
test
adc
pop
std
sub
sub
fsubl
aam
rolb
push
xor
inc
rcr
rol
fs
xchg
sahf
xchg
cmpsb
inc
repz
ret
cmc
adcb
out
aaa
inc
sti
sub
dec
mov
mov
inc
pushf
push
mov
rcrl
cmp
inc
xchg
lods
arpl
lock
and
push
call
fdivrl
in
js
xor
cld
adc
xchg
jbe
lahf
loopne
cmp
sbb
lods
test
mov
cs
repz
jle
sub
lret
xchg
push
xchg
cmp
mov
shlb
dec
mov
iret
bound
inc
jns
mov
repnz
xchg
push
push
xor
adc
in
mov
sub
clc
aam
stos
jnp
movsl
mov
adc
js
gs
jne
xchg
xlat
pop
xchg
adc
enter
outsl
stos
adc
cmpsl
notl
jmp
mov
push
cmc
into
push
clc
arpl
pop
fsubr
pushf
shrl
mov
mov
dec
or
fistpl
gs
aam
imull
xor
ss
div
lret
cwtl
push
jnp
rcrb
in
sub
mov
fnsave
cmp
shr
adc
cli
pushf
or
jmp
xchg
sbb
cmpl
movsl
jo
pushf
lods
push
sbb
mov
and
out
scas
push
faddl
or
sub
xor
fldenv
enter
jo
aas
in
leave
mov
push
mov
pop
mov
add
jl
data16
ss
push
sub
sti
in
aas
cmp
loopne
adc
mov
push
call
xorb
push
cs
rorb
push
jle
pop
inc
mov
out
push
mov
ret
repz
push
loope
repnz
scas
or
cmp
cli
arpl
fistl
dec
shrl
stos
repz
jp
sbb
in
lahf
faddl
xor
lods
jp
mov
in
loop
jg
push
ds
xchg
stc
divb
mov
mov
jmp
inc
fcmovu
repz
pop
jae
nop
add
jp
adc
shll
nop
fwait
repnz
ror
xchg
cmc
mov
popa
mov
push
xor
adc
inc
jb
stos
mov
shl
jb
jns
test
icebp
nop
sub
mov
mov
sahf
repnz
inc
cmpsl
xchg
pop
inc
and
loope
cmp
jl
ret
imul
cmp
out
dec
mov
shl
jne
dec
shrl
ja
push
ret
insl
pop
sahf
in
loop
mov
adc
je
xchg
mov
jl
out
movsb
aam
mov
mov
or
mov
in
jle
xchg
aaa
loop
cltd
mov
mov
bound
hlt
jl
add
pop
mov
nop
mov
mov
in
jae
fcompl
call
fildll
fwait
int3
inc
movsl
inc
outsl
fstpt
imul
mov
sub
ss
insl
and
insb
loope
push
push
sbb
or
icebp
add
sti
aas
adcb
fcmovne
push
je
adc
sub
loop
in
fcmovbe
sub
jae
stos
and
pop
ja
push
pop
xor
xchg
push
test
aad
dec
int3
idivb
mov
sbb
jmp
scas
test
and
push
cli
in
xchg
xor
xchg
sub
or
imulb
fwait
adc
xor
loop
into
pushf
popl
push
and
gs
jo
addr16
adc
arpl
xchg
data16
lods
lods
aas
imul
shlb
andl
pop
cmp
in
dec
inc
popf
pop
xchg
cmp
xor
mov
jg
stos
dec
das
popf
adc
int3
mov
or
nop
inc
sbb
mov
mov
jp
cli
add
out
in
or
adc
push
hlt
ja
in
stos
push
loope
and
push
in
push
mov
mov
sub
add
xchg
ss
sahf
in
adc
movsb
mov
mov
scas
in
daa
or
dec
sbb
cli
nop
lock
popf
add
scas
fidivrl
test
cmpsl
mov
addl
pop
sbb
lcall
idivl
cmp
sbb
iret
mov
jb
and
out
mov
cli
pushf
push
inc
leave
mov
lahf
filds
sbb
stc
push
jb
cmp
leave
push
ljmp
jb
and
mov
xchg
xchg
mov
clc
sarb
adc
add
hlt
push
scas
xor
and
out
divl
insl
push
jmp
xor
jno
out
scas
jl
and
int3
lock
sub
out
mov
ret
xchg
and
jno
outsb
sub
shrl
mov
sbb
rorl
imul
jg
or
ret
repnz
daa
pcmpgtd
sub
pop
xchg
ja
je
dec
pop
ret
xchg
cmpsb
xor
pop
imul
repnz
aaa
sti
fwait
clc
mov
xchg
out
inc
sub
call
push
fmuls
push
push
add
sbb
xorb
hlt
add
xchg
xchg
mov
cli
cmpsb
cmp
xor
pop
xchg
mov
xchg
sbb
sbb
and
jo
out
cmc
mov
pop
ds
sub
dec
cli
inc
cmpsl
add
cmp
imul
adc
pushf
adcl
cmp
in
lcall
mov
pop
orb
sti
sahf
daa
sbb
popf
ficoml
mov
pop
add
jnp
lret
pop
mov
repnz
jno
testl
test
push
neg
mov
inc
add
sti
push
jb
dec
rorb
sub
enter
mov
loopne
lcall
xor
mulb
out
cs
mov
das
inc
rcl
sarb
pop
into
in
test
dec
xchg
sbb
jge
clc
sar
ds
xchg
dec
lock
mov
call
jp
sbb
and
xor
xor
mov
xor
mov
sbb
out
sbb
jp
xor
mov
aaa
mov
sbb
and
xchg
and
ss
lds
mov
xchg
xor
xor
inc
frstor
pop
xor
xlat
fsubrl
in
scas
adc
add
cmpl
inc
dec
mov
shll
repnz
and
movsb
sbb
ss
mov
into
rcrl
repnz
mov
test
insl
add
xor
jae
pop
ret
or
nop
sub
stc
jl
dec
out
mov
add
pushf
mov
mov
stos
sub
inc
fxam
iret
into
pop
cli
adc
add
imul
subl
xchg
pop
pop
repnz
xlat
sub
fidivrl
or
inc
imul
pop
push
sbb
add
iret
cmp
out
xchg
icebp
xor
lahf
mov
mov
or
scas
pcmpeqw
push
cwtl
loop
add
mov
pop
xor
xor
jmp
adc
or
add
xor
daa
inc
out
stos
sub
test
mov
or
ss
jle
into
rcll
inc
inc
xchg
xchg
add
jb
add
lret
cli
js
aas
scas
xchg
gs
out
mov
arpl
cmp
xchg
jnp
fwait
sub
fidivrs
sub
lret
add
cmpsb
cltd
or
sub
jle
inc
rorl
cltd
sub
or
sub
dec
adc
out
addr16
mov
mov
arpl
sbb
add
xor
dec
out
push
sub
pop
fcmovbe
push
dec
xchg
icebp
dec
loop
mov
stos
cmp
sbb
jae
inc
lock
jle
and
aam
and
es
lret
sub
mov
cmpsb
mov
jno
and
jl
sarb
fsts
push
loope
out
adc
fmul
push
loop
movsl
cwtl
adc
jo
aam
sbb
pop
in
jp
divb
mov
push
mov
xchg
sub
or
aad
lea
mov
or
adc
hlt
cli
pop
adc
test
in
bound
shlb
cltd
lcall
cmc
stos
mov
and
std
pushf
jle
subl
ror
sbb
push
jae
push
in
insb
cli
push
add
or
xchg
incl
hlt
fsubrs
sub
xlat
inc
clc
popa
cld
lea
and
addl
stc
test
popf
fsubrp
movsl
insl
out
lcall
movsb
jb
xchg
pmaxsw
pusha
into
lock
lods
flds
aaa
adcl
lret
pop
xchg
push
outsl
mov
pop
into
fldenv
dec
xor
pop
jno
or
sbb
test
scas
icebp
ret
stos
xchg
dec
xor
inc
adc
fwait
addl
mov
imul
sub
sub
mov
daa
test
mov
scas
mov
and
lods
fs
dec
clc
inc
push
cmp
dec
shrl
lock
repz
inc
jg
sbb
xchg
jne
bound
das
int
imul
enter
dec
sbb
shlb
sarl
stos
into
inc
sbb
and
mov
and
cmp
xchg
sbb
ljmp
sub
sar
outsb
js
insl
add
push
sub
pop
in
xor
add
cmc
dec
js
andps
mov
aas
lods
popa
sub
aas
dec
popa
pushf
xchg
or
ficoml
or
or
stos
mov
popf
push
insl
jmp
add
xchg
mov
add
test
push
stos
nop
push
repnz
rcrb
or
std
insb
aad
or
xor
add
stos
lods
cli
or
jb
jae
jno
js
movsb
lret
call
imul
xchg
xchg
cli
pop
dec
jmp
hlt
imul
xchg
outsl
push
xlat
bound
in
dec
loopne
scas
ret
ret
je
or
daa
fdivrl
dec
fnstenv
les
arpl
jb
stos
jb
cli
filds
sbb
mov
lods
imul
add
dec
xor
lods
sub
popa
jns
es
adc
pop
loopne
test
jge
pusha
ljmp
add
lahf
icebp
fwait
pushf
xchg
push
aaa
add
add
jnp
pop
xlat
fildl
int
mov
fwait
out
dec
cmp
aas
out
fldenv
int
jno
pop
mov
mov
mov
add
xchg
pop
subb
push
pop
out
loopne
dec
jb
cmc
ljmp
enter
lcall
sub
icebp
push
pop
push
push
scas
jmp
dec
push
and
int3
push
les
mov
xor
lcall
movsb
sub
or
mov
jae
xchg
xor
loope
rcrb
mov
dec
roll
popa
or
das
mov
stos
sub
xlat
sbb
dec
inc
push
mov
int3
cmpsb
mov
sbb
mov
inc
daa
pop
mov
inc
or
lods
fwait
test
ja
aad
outsl
inc
nop
dec
insl
lock
aad
leave
mul
out
lret
fs
xor
xor
pop
roll
in
pcmpeqw
inc
sbbl
and
dec
mov
test
popa
jg
xchg
std
jne
cld
dec
divb
mov
add
cmp
mov
iret
movsl
lock
in
mov
ljmp
inc
hlt
lret
xlat
in
lret
mov
rcr
lcall
dec
insl
loop
sbb
imul
pushf
lock
mov
repz
cmpsl
mov
aad
arpl
mov
fs
sti
js
lret
in
in
push
push
test
sti
bnd
repnz
push
and
cmp
mov
je
js
mov
xchg
pop
cmpl
test
inc
xchg
xchg
sub
push
call
daa
out
mov
enter
mov
pop
or
sbb
xor
bound
std
in
popa
mov
insb
pop
lea
daa
and
subl
inc
adc
jle
pop
inc
push
outsb
add
in
xor
jnp
push
mov
pop
dec
jmp
inc
shlb
or
cmp
fistpl
stos
shlb
sti
sub
fidivs
push
cld
pusha
push
push
out
cmp
jecxz
adc
in
fsubl
out
lret
negb
ja
popa
sub
jge
test
sti
inc
add
insl
andl
or
movsl
cmp
push
call
hlt
lret
mov
sahf
std
xor
push
inc
test
xchg
in
and
sub
repnz
sarb
testl
and
cmp
pop
sbb
pop
pop
pop
mov
pop
cmp
iret
shrl
pusha
sbb
je
pop
shl
xor
mov
scas
lret
mov
xchg
jecxz
loopne
and
pop
fnstsw
aam
cmp
sub
leave
fstpt
and
cmpb
lods
mov
and
mov
dec
cmp
sti
cmp
add
dec
out
inc
pop
mov
aas
sub
popl
jnp
xor
stc
cmp
sub
pop
gs
sbb
stos
or
iret
pop
into
imul
cmc
xchg
mov
push
cmp
into
or
inc
cld
jno
and
std
dec
push
push
jp
pop
gs
dec
scas
adc
mov
add
sbb
stos
sbb
jnp
icebp
push
cmp
shrb
test
sub
jecxz
stos
xchg
loopne
lret
or
jl
sbb
lods
inc
push
scas
cmp
prefetcht2
pusha
pop
bnd
push
dec
sbb
fucomip
dec
push
or
push
push
jb
add
pusha
or
xchg
inc
and
insl
enter
sbb
jbe
cld
test
call
xor
jno
jl
mov
fadds
fisttpll
cmp
inc
pop
mov
or
lret
pop
jne
lock
lock
pop
cmp
pop
cs
shrl
xchg
pop
rolb
push
jp
lcall
and
xor
imul
js
aaa
add
add
mov
jp
mov
hlt
dec
mov
jae
les
repz
cld
aad
std
xor
loop
dec
mov
cwtl
xchg
iret
mov
mov
stos
das
cltd
mov
cmpsb
aad
icebp
xor
mov
jae
jmp
xor
jmp
mov
insb
imul
cmpl
lods
ret
lea
scas
fcomps
cmc
pusha
sbb
mov
popf
push
xrstor
dec
mov
inc
mov
sub
stos
aad
push
rorb
jne
mov
push
aam
sbbb
data16
gs
jmp
fdivp
js
lcall
dec
xor
sbb
ljmp
sbb
mov
aas
push
pop
inc
sub
cmp
sbb
fstpt
in
push
dec
mov
sbb
in
lahf
in
pop
dec
xchg
jns
pop
pop
lds
test
adc
add
lret
inc
insl
mov
psrlw
jb
mov
jo
cltd
hlt
loop
adc
sbb
pop
xor
or
ror
xchg
cltd
fsts
mov
mov
and
add
xchg
lea
push
sbb
inc
stc
aaa
dec
subl
ret
cmp
mov
subb
inc
mov
fisubrl
div
cmp
ror
add
mov
and
icebp
movsl
movb
jns
jmp
adc
xchg
inc
dec
cmp
sahf
jl
push
mov
cmp
mov
sub
or
test
adc
imul
enter
sahf
ficompl
inc
mov
aas
sbb
jne
push
jl
lods
ja
mov
lret
insl
sub
sbb
imul
into
or
das
orl
jecxz
aad
addps
sti
cmp
jno
insl
jbe
mov
xor
jl
shrb
je
clc
push
mov
and
pop
repnz
inc
mov
push
loope
fbld
fst
mov
mov
inc
shl
cli
pop
gs
adc
mov
sarl
mov
xchg
imull
push
push
decb
mov
inc
or
pop
dec
cmp
jle
addl
fs
pop
adc
rorb
mov
orl
iret
sbb
pusha
rorl
xor
sbb
add
je
push
add
scas
jmp
or
cwtl
enter
and
scas
cmp
test
ss
mov
stc
dec
dec
loop
fidivs
std
fstpt
stos
mov
fldenv
test
les
sbb
gs
push
dec
cmc
pushf
call
mov
and
cmpsb
iret
outsb
jp
fmull
xlat
nop
js
ficompl
addr16
cmp
sbb
pop
jns
push
jmp
pop
xchg
jb
push
test
adc
aas
data16
inc
or
shll
outsb
pop
cmpsb
dec
pop
sub
lahf
dec
popa
cmc
adc
mov
das
add
dec
cwtl
out
mov
out
call
jb
test
push
mov
hlt
cmpsb
jns
jb
int3
cmp
insl
dec
mov
pop
nop
hlt
into
fs
lret
clc
test
inc
add
push
jmp
outsb
jmp
mov
xchg
sbb
sbb
xor
adc
nop
mov
punpcklbw
xchg
mov
insb
test
inc
addr16
sbb
rcll
jge
pop
sbb
stos
dec
inc
in
adc
aad
testb
adcb
xor
mov
outsb
fwait
je
or
or
ror
adc
mov
outsl
xchg
inc
mov
and
pop
inc
sbb
or
xchg
test
mov
mov
dec
xor
push
lods
js
cmpb
add
add
repz
and
add
and
xchg
sub
es
outsb
dec
mov
push
mov
xor
dec
mov
or
inc
inc
inc
sbb
and
mov
aaa
fists
mov
or
jnp
xchg
enter
fstpl
inc
fldln2
loopne
jle
out
ss
mov
xor
loope
sahf
inc
adc
cmp
xchg
xor
repnz
xor
test
into
pusha
or
mov
mov
repz
es
mov
nop
lock
lret
scas
scas
xchg
jno
es
loopne
or
pop
int
fwait
daa
movsl
incb
ds
lahf
pushf
mov
jmp
ljmp
shl
jne
pusha
movsb
popf
xor
stos
mov
mov
imul
sbb
mov
jb
jae
das
je
lret
jl
ficoms
xchg
jl
mov
aam
push
cmp
leave
inc
ret
adc
mov
xor
into
cmp
add
mov
aad
ds
xchg
sbb
mov
jb
mov
add
mov
add
mov
mov
fimull
pop
adc
and
xor
hlt
nop
sarb
cwtl
inc
jge
gs
xor
lds
nop
adc
and
jp
les
and
or
cwtl
insw
pop
test
fwait
negl
mov
jl
and
jbe
fcompl
mov
adc
jb
clc
loopne
movsl
cli
adc
ret
mov
repnz
clc
aas
cmp
lds
add
mov
loopne
jno
mov
lret
fsubrl
cmpl
mov
outsb
adc
sahf
inc
stos
or
jo
sub
pushf
jge
inc
inc
sbb
adcb
adc
imul
aas
or
imul
or
movsl
jmp
pusha
pop
addr16
adc
addr16
gs
shl
cmp
rolb
push
sbb
ja
xor
shll
push
gs
fsub
lahf
loopne
mov
iret
stos
sbb
fdivrs
push
fwait
orb
inc
fwait
jnp
push
fistpll
jbe
ja
mov
enter
adc
movl
mov
adc
data16
pop
jne
pop
stc
xchg
fbld
adc
mov
loopne
repz
fldenv
dec
pop
inc
lahf
sub
ss
iret
sub
push
mov
shl
push
cmp
idivl
jecxz
inc
push
int3
fsts
xchg
test
aaa
popa
adc
jp
push
and
in
dec
adc
aam
mov
js
jge
loopne
iret
dec
mov
ljmp
xchg
inc
insb
pop
cwtl
sahf
sbb
cld
andb
popa
mov
clc
pop
inc
jo
push
fnsave
lret
xchg
lahf
pop
push
and
int3
dec
repnz
mov
mov
mov
popf
jo
enter
int3
rcll
call
int3
pop
popa
lds
push
fcmovu
idivl
std
mov
xchg
fneni(8087
push
mov
pop
addr16
pop
pop
cmc
push
sbb
ss
add
fcomps
nop
xchg
rep
lods
call
add
iret
cmpsl
dec
jne
sbb
dec
imul
std
xchg
push
mov
mov
dec
mov
cli
sahf
dec
insl
sarl
xchg
std
adc
xor
test
xchg
imul
adc
leave
push
cmp
fistpl
jg
nop
dec
jns
xor
dec
sbb
sub
cmp
sub
lret
std
xor
jae
ja
dec
mov
xchg
lret
ss
movsb
into
mov
pop
lds
mov
mov
mov
or
out
cld
cld
cli
fwait
dec
mov
jmp
mov
into
cmp
orl
adc
lock
scas
jmp
insl
pop
test
add
and
cli
jge
xor
repz
inc
and
jl
jmp
je
jp
into
sub
pop
jmp
test
pop
pusha
jne
test
push
mov
adc
icebp
lea
pushf
fwait
inc
fwait
aam
sub
push
xor
test
shll
data16
add
xor
enter
loopne
push
jnp
cmp
and
test
jp
cmc
jp
nop
cmp
popa
sub
fs
orb
cmpsl
mov
fsubs
repz
jbe
aas
insl
sbbl
leave
aas
idivl
xchg
add
loopne
cwtl
xchg
lods
adc
sbb
lock
xchg
lock
adc
xchg
hlt
dec
sub
int3
mov
pushf
ja
jmp
test
stos
arpl
lds
mov
leave
add
cltd
pop
dec
nop
pushf
mov
addr16
mov
jae
mov
pop
scas
jbe
lds
add
dec
loopne
ljmp
hlt
ss
out
cmp
dec
in
mov
and
mov
mov
lods
gs
push
cmp
mov
xchg
call
or
pop
pop
cwtl
jno
lods
nop
pop
call
hlt
adc
or
idivl
cmpsl
ja
and
addl
xchg
sub
pop
fidivs
aad
and
loope
sbb
shrl
inc
test
mov
adc
push
mov
call
xor
pusha
jbe
sbb
cmp
shr
jl
dec
pop
mov
mov
and
nop
mov
out
aam
push
test
popf
cmp
cld
and
imul
xchg
lcall
dec
dec
in
add
testb
push
dec
push
cmc
xor
push
addr16
mov
mov
mov
xor
je
or
push
mov
rcrb
or
roll
fcompp
pop
jns
xchg
and
fstpl
outsl
pop
out
xor
iret
xcrypt-cbc
cmpsl
push
sti
test
das
das
adc
jns
lret
repnz
jb
rcrl
xchg
aam
enter
jb
movsl
iret
cltd
rcll
stc
sub
std
and
dec
xlat
call
pop
fdivl
ds
ror
jp
xorl
fldenv
dec
popf
popa
mov
decl
xchg
sbb
jmp
cmp
sub
inc
fisubl
and
xchg
into
jnp
pop
roll
xor
std
sub
ljmp
loop
or
inc
mov
fidivrs
push
ljmp
push
rol
call
pop
pop
fisttpl
xchg
cltd
mov
inc
into
cmpl
mov
xorb
clc
lock
adc
shrb
xchg
mov
and
xchg
rcrl
ljmp
mov
cmp
icebp
add
in
sahf
rcrb
push
mov
out
pop
jg
xchg
adc
pop
imul
scas
cwtl
sub
xorb
iret
pop
jl
push
inc
mov
inc
clc
das
xlat
and
negl
es
lods
inc
mov
add
sub
ss
jns
jp
mov
jns
sahf
mov
push
gs
inc
dec
jo
repz
push
xor
pop
jge
or
fdivl
mov
les
dec
out
lock
rorl
loopne
push
arpl
aaa
jne
sar
call
or
loope
dec
mov
mov
fsts
inc
fildl
outsb
out
fst
mov
push
jge
mov
sahf
pushf
out
push
stos
js
mov
aad
and
std
inc
sub
pop
xor
les
and
xchg
adc
das
mov
mov
jnp
imul
shll
sbb
call
adc
and
pop
push
sar
fstps
iret
push
pushf
push
mov
test
inc
loopne
ret
gs
in
push
pusha
sbb
jns
cmp
nop
push
ds
nop
aaa
icebp
sbb
xchg
pop
call
adc
es
outsl
xor
stc
lock
add
mov
mov
loopne
rcrb
pop
xor
ljmp
cmpsl
mov
sarl
xor
cmp
es
imul
aad
xor
mov
imul
add
data16
lret
fcmovu
iret
xor
repnz
popa
lock
xor
jno
mov
lret
pop
jbe
dec
mov
mov
mov
test
test
out
or
sarl
iret
sbb
pop
int3
dec
mov
xchg
das
sbb
nop
mov
xor
add
sbb
xor
je
ret
inc
dec
inc
mov
rep
pusha
into
add
int3
popa
popa
mov
inc
xchg
mov
sbb
mov
sbb
icebp
adc
lret
and
ja,pt
inc
data16
or
dec
ds
cld
movsb
xchg
or
pop
and
out
inc
add
inc
fisttpl
cli
call
inc
mov
push
data16
cltd
insl
cmp
and
mov
mov
xchg
cld
adc
fidivrl
lods
rclb
bound
rolb
mov
xor
cmpsl
lcall
lock
scas
and
test
fmull
sar
test
xor
bound
in
sub
js
addb
sti
push
adc
add
sub
jp
and
pop
in
dec
in
fists
fidivs
xor
dec
xchg
mov
nop
repnz
inc
mov
outsb
pushf
loop
pop
cmp
sti
and
notl
sbbl
shr
inc
adc
inc
out
fdivr
sti
xor
out
push
xchg
and
aam
inc
cmc
jb
out
mov
fs
push
ljmp
insl
xchg
inc
push
inc
add
loopne
arpl
sub
ss
pop
in
aaa
ret
out
test
test
inc
mov
lret
dec
push
mov
pushf
adc
and
sarb
and
lahf
out
inc
jmp
sbb
aaa
xchg
bound
gs
jnp
jb
pushf
dec
xor
clc
or
shlb
push
das
dec
fiadds
cs
ds
cltd
mov
jecxz
movsl
and
bound
pop
aas
nop
and
lahf
mov
movsl
xchg
push
enter
push
push
adc
divb
mov
les
outsb
cmp
dec
test
jge
sbb
xor
mov
pop
jo
push
pushf
fldl
inc
xchg
or
pop
sbb
add
pop
jae
enter
mov
mov
mov
ja
je
and
xlat
add
data16
jae
out
and
dec
hlt
add
pushf
or
xor
xor
les
mov
jne
add
adc
pop
mov
jae
xor
test
mov
xor
je,pn
aas
add
or
std
lcall
jmp
addr16
cmc
sbb
dec
rcll
das
push
cmp
nopl
sub
jmp
ljmp
xchg
mov
dec
cmc
xor
repnz
ljmp
in
mov
scas
add
pop
pop
mov
arpl
xchg
or
add
sub
lea
or
bound
sub
imul
or
filds
jg
dec
push
rcr
loopne
aas
fsub
cltd
loopne
sbb
sahf
fsubs
pushl
mov
sbb
pop
mov
push
ret
adc
ljmp
stos
mov
mov
push
or
cmp
rorl
mov
repnz
aad
mov
in
insl
dec
xchg
inc
out
and
or
cltd
pusha
pop
pop
mov
cmp
push
xchg
adc
adcl
popf
frstor
jno
lods
jge
hlt
gs
pop
push
inc
test
mov
cmp
and
fcomi
push
cmp
pop
mov
mov
call
mov
mov
fcomps
add
adc
stos
mov
and
mov
out
incl
xchg
dec
shl
into
jl
dec
xchg
icebp
adc
test
loop
aam
je
xchg
aam
dec
or
add
jnp
xchg
pop
cmp
mov
pop
mov
test
push
loope
inc
xor
pop
mov
int3
sarl
lds
dec
daa
cmp
mov
data16
ss
adc
and
mov
mov
adc
sbb
enter
sbbl
cmpsl
es
sbb
or
add
stc
cmp
shrl
add
push
add
mov
loope
xchg
mov
mov
sub
aaa
jl
push
mulb
cmp
dec
dec
pusha
loope
rclb
pop
pusha
lret
mov
jae
mov
pop
lcall
shlb
jle
xchg
pusha
xchg
xchg
jbe
jbe
inc
pop
iret
add
jne
sbbb
adc
sti
lock
sahf
jecxz
addr16
xchg
pop
das
sub
into
xor
clc
fsubr
clc
dec
inc
mov
or
cltd
scas
mov
xchg
sub
rolb
pop
inc
lret
addr16
jno
lods
sub
repz
ret
shll
outsl
insb
rcrb
mov
fs
dec
jbe
shrb
inc
mov
fwait
pop
sub
je
push
xor
mov
fmul
mov
xor
nopl
mov
sahf
test
call
mov
inc
clc
and
mov
enter
scas
mull
imul
out
insb
mov
mov
out
add
sub
jmp
or
xchg
push
outsb
inc
pop
scas
mov
rolb
or
clc
pop
push
popa
push
pmulhuw
fmull
outsb
fs
pop
inc
js
out
sbb
mov
and
mov
xlat
push
dec
jecxz
dec
sbb
mov
mov
orb
mov
out
inc
lcall
cmp
mov
mov
fs
clc
aaa
mov
pop
shlb
repnz
adc
dec
and
mov
push
dec
pop
into
lret
and
push
fst
lock
rolb
and
push
dec
imul
jg
mov
push
in
dec
call
jnp
repnz
hlt
enter
in
dec
push
jno
jbe
or
fwait
popa
aas
pop
in
push
xchg
mov
shrl
sbb
mov
movsb
adc
test
addr16
push
sub
mov
addb
negb
out
fmuls
and
dec
jb
nop
mov
mov
mov
push
dec
lea
lcall
adc
lods
push
xor
dec
rcrl
mov
adc
push
fstp
sti
dec
pop
sarb
pop
sub
push
jno
dec
shrb
test
adc
clc
sarb
das
jl
inc
add
mov
push
mov
push
call
fcoml
sbb
lret
es
mov
push
stos
pusha
pop
stos
ja
lock
mov
pop
mov
insb
ds
push
cmp
sub
bound
sahf
jno
outsb
pop
add
and
dec
add
mov
cwtl
inc
mov
les
mov
push
mov
xchg
aad
pop
inc
scas
push
cmp
test
pushf
stos
pusha
mov
je
outsl
mov
and
push
jg
push
add
fildl
and
sarb
js
je
mov
jg
or
pop
cmc
push
mov
ds
pusha
mov
pop
or
fbstp
int
movsl
or
jnp
popf
lods
in
insb
clc
push
push
lcall
mov
scas
es
or
aad
inc
fnsave
int3
shr
sbb
pop
frstor
es
mov
and
aam
sub
xchg
cwtl
mov
sbb
dec
insl
mov
adc
cmp
xchg
inc
jmp
lret
fcoml
or
aad
jg
cmp
mov
mov
orb
inc
icebp
push
or
enter
stc
push
adc
or
xor
int3
aas
push
push
cli
ja
je
movsb
mov
add
cmp
movl
lahf
adc
shr
xlat
popa
pop
jae
jo
lret
inc
mov
and
sub
push
sub
sarl
add
vmwrite
imul
jmp
xor
sub
ss
pop
inc
xor
pop
jecxz
sbbl
push
jp
lret
cld
daa
cmp
pop
fidivs
popa
xor
ficompl
add
inc
sub
add
adcl
jo
xor
fidivl
rclb
jge
in
sub
adc
stos
jne
loop
rcl
ret
add
mov
aam
lea
inc
mov
inc
loop
rcl
xchg
adc
fld
push
jge
adc
stos
mov
mov
out
cmp
mov
mov
push
sti
and
push
push
stos
inc
xchg
mov
roll
nop
mov
lds
pop
rcl
ret
sti
scas
pop
xchg
rcll
sub
inc
push
and
fsubrl
jle
ret
imul
repnz
mov
push
sahf
add
sbb
push
sub
lock
sahf
movsb
pop
dec
addr16
popf
mov
mov
pop
aam
sbb
outsb
hlt
arpl
lret
lcall
daa
cmp
out
sbb
sub
mov
pop
das
and
pop
pop
mov
xchg
test
and
mov
or
outsb
jp
jbe
jnp
mov
or
xor
pop
cmc
mov
rcl
dec
dec
inc
dec
fdivs
adc
int
outsl
nop
iret
fldt
setp
mov
inc
inc
dec
xor
or
mov
and
loope
flds
mov
lea
cmpl
fdivl
cmc
add
adc
mov
cmp
add
test
or
xchg
mov
push
in
pusha
lods
dec
add
lock
in
daa
mov
data16
mov
jns
shr
and
and
pop
out
das
adc
pop
test
mov
js
add
scas
inc
out
add
js
xchg
les
mov
push
mov
loop
or
fldl
mov
in
lahf
mov
sub
adc
xor
test
lret
add
dec
mov
cmp
cmc
jns
push
test
sub
and
or
lret
outsb
sbb
adc
adc
stos
popf
pop
jno
adc
enter
loop
push
cwtl
mov
dec
scas
ss
idiv
in
out
aam
loop
mov
jge
mov
ret
mov
je
std
fistpll
aas
cs
pop
cli
mov
fdivs
les
ja
and
adc
cmpsl
push
mov
mov
jb
jle
adc
jb
les
inc
fcos
and
pop
test
or
mov
fimuls
lods
mov
and
lea
paddb
push
nop
mov
test
jle
fdivr
fnsave
dec
les
push
add
or
add
cwtl
xlat
push
ftst
mov
imul
inc
pop
inc
or
out
cmpsb
mov
es
xchg
mov
ds
xchg
fsubrs
shll
fimull
lea
mov
enter
int3
xor
ds
pop
test
imul
inc
fsub
insb
mov
lcall
popa
push
aas
lahf
call
rorl
push
sbb
cltd
sub
fdivl
jb
loope
mov
int3
gs
xchg
out
in
inc
jne
push
mov
push
popa
int3
outsl
dec
xchg
mov
orps
or
in
sahf
cwtl
and
addr16
xchg
arpl
stos
in
push
ret
inc
rcll
xor
nop
fsubrs
ds
pushf
xor
cli
xchg
subb
cld
in
jmp
pop
or
cmp
mov
ds
adc
cmp
sarl
in
push
or
jne
xor
adc
loop
push
pop
or
push
cmp
scas
push
xor
jne
arpl
sbb
sub
dec
test
push
push
inc
xchg
cmpsl
inc
mov
cmpsb
test
inc
rcll
xor
pop
pop
sub
jle
jmp
iret
xchg
les
adc
jne
inc
inc
orl
jns
mov
xor
fbstp
xlat
mov
dec
fstps
adc
popl
pop
push
int
inc
inc
in
jg
xor
cmp
callw
rcrb
not
fwait
sub
mov
fnstenv
sbb
popf
out
jo
xor
mov
int
push
dec
jecxz
add
imul
mov
lock
insl
jmp
or
pop
mov
leave
aad
mov
mov
pop
xchg
cmp
dec
popa
sbb
stos
add
pop
jae
mov
inc
or
push
lods
lods
mov
popa
fsubl
jp
xchg
mov
fisttpll
gs
daa
fsubr
xchg
sub
cmpsl
js
jle
pop
jb
xor
out
es
andl
inc
fsubrp
mov
rcr
subl
test
cmp
or
loope
ret
outsl
push
push
push
inc
push
incb
push
lock
jne
lret
mov
insb
lock
or
pop
xchg
pop
pushl
std
sahf
pop
insb
or
pushf
loopne
imul
jmp
fnstsw
les
scas
xchg
pop
jge
mov
inc
mov
sub
test
int3
fwait
cs
repz
dec
jge
lods
push
insb
idivl
scas
jg
insb
hlt
lea
loope
sbb
xor
and
stos
cmp
cmovnp
xor
std
jmp
jne
sti
scas
adc
fmulp
add
popf
cmp
shl
xchg
jb
fisubrl
cmp
cld
push
test
and
icebp
cs
test
sbb
out
shrb
lcall
cmp
cmp
ljmp
andb
cmp
jl
push
aas
add
imul
es
xchg
flds
inc
fldenv
sahf
cmp
inc
sub
bound
push
aaa
lock
outsb
bound
adc
subl
push
mov
and
lret
cmp
out
je
insb
ds
ja
mov
fisttps
out
hlt
xchg
xchg
add
cvtdq2ps
add
rorb
mov
imul
jle
movsl
or
sub
and
add
fildl
xor
cs
jb
fsubl
movsb
movsb
inc
cmp
mov
mov
pop
sub
andb
add
and
jle
pop
arpl
sub
dec
rdpmc
xor
outsl
fisttpll
fimuls
pop
popf
pop
lds
faddp
sbb
sbb
jns,pn
mov
sbb
mov
ss
cmp
aas
or
pop
imul
imul
les
inc
gs
mov
or
lahf
inc
outsl
jne
pop
sub
out
leave
cmc
push
mov
sbb
mov
cmp
andb
fsubl
cli
cmp
dec
insb
fisttpll
sbb
lret
cmp
sbb
fs
fs
cmc
in
enter
int3
dec
fwait
cmpsl
ret
dec
cwtl
aad
imul
or
jmp
and
xor
push
push
pusha
rcrb
sbb
bound
in
and
imul
adc
mov
gs
mov
cli
jo
cwtl
xor
mov
ds
or
out
add
lcall
enter
in
icebp
jg
dec
lea
and
xor
ss
jb
mov
dec
into
mov
mov
fsubrs
push
xchg
mov
stos
ret
mov
xor
pop
icebp
mov
push
ret
mov
stos
mov
jecxz
shl
pop
out
cmpsb
stos
adc
fnsetpm(287
push
icebp
mov
mov
adc
sbb
addl
dec
xchg
aam
dec
jg
fldcw
mov
sub
push
scas
mov
loopne
adc
sahf
mov
xchg
out
jnp
adc
incb
inc
mov
xchg
cltd
xchg
es
cmp
mov
lret
mov
lret
lahf
cmp
cmp
mov
dec
addr16
mov
jae
jp
xor
inc
test
addr16
out
and
push
lahf
rcl
mov
lods
sub
and
add
mov
add
mov
xchg
int3
pop
test
loop
pusha
and
adc
pusha
loop
lods
icebp
sbb
jno
out
adc
test
inc
jmp
mov
add
ficomps
inc
fistpll
adc
ja
or
mov
popa
mov
mov
jno
outsb
jns
repz
outsl
lret
mov
lods
inc
inc
out
fimuls
cmp
pop
mov
xorl
cmc
aaa
xchg
and
pop
push
mov
repz
aaa
jp
out
cmp
out
pop
jae
add
int
mov
fnstenv
mov
inc
pop
fdivp
int3
mov
jp
sbb
push
mov
fisttpl
xchg
ret
adc
sub
incl
int
sub
adc
adc
xchg
xchg
lods
stos
cli
test
pop
cmpb
jp
mulb
inc
xchg
outsb
outsl
stos
pop
addr16
jb
push
fbld
jo
repnz
jle
leave
add
and
call
jge
jg
or
sti
clc
mov
mov
xor
icebp
sbb
out
sub
mov
xchg
jae
xchg
adc
push
push
and
push
inc
jns
loopne
movsb
xor
stos
scas
data16
and
mov
mov
sub
xchg
bound
cld
jmp
lods
adc
movsl
cli
jle
add
lcall
add
lret
fisubs
mov
ret
or
dec
sub
bound
popf
pushf
dec
lds
orb
lods
cmp
xrelease
fstp
sahf
xchg
and
sbb
je
mov
xchg
or
xchg
std
inc
lcall
enter
lcall
add
lock
pop
std
inc
sub
ja
in
jl
inc
std
filds
aaa
fcoml
leave
cld
arpl
leave
xchg
shr
add
ds
cmp
xchg
fldl
jo
ss
jmp
sub
add
lds
scas
push
test
rol
cmpsb
jbe,pn
inc
aam
imul
mov
cmpl
dec
mov
test
ja
das
mov
mov
aas
inc
sbb
fcmove
int3
test
dec
aam
gs
push
pop
call
add
push
jns
outsb
outsl
jae
ret
lds
mov
xor
mov
or
mov
inc
adc
push
sbb
bound
sub
lods
jl
out
arpl
jg
arpl
das
mov
pop
pop
in
gs
ja
pop
mov
adc
sub
lods
xor
pop
test
shlb
mov
shll
std
dec
fildll
push
dec
lcall
or
cmp
ja
pushf
fisubs
xchg
ret
aas
shlb
or
adc
jge
addr16
push
pop
or
mov
decb
insb
xor
test
ds
xchg
out
pop
shll
inc
into
lahf
mov
outsl
mov
ja
out
add
inc
cmpsl
insl
push
adc
inc
lods
pop
lret
push
outsb
sub
test
adc
subb
insb
jns
out
jns
sbb
mov
lds
popf
cmp
sbb
xor
cmp
fsts
enter
sahf
test
lock
xor
mov
loopne
mov
pop
lods
addr16
iret
es
or
sub
std
or
sub
aaa
popf
jbe
add
test
mov
push
jmp
ja
cmpsl
mov
mov
mov
aaa
cltd
data16
aam
mov
mov
in
lahf
addr16
lods
mov
rcrl
xchg
insb
clc
fdivr
or
push
clc
int
inc
sti
and
pop
fisttps
mov
cwtl
add
call
je
rcl
test
push
or
stos
sahf
cmc
and
xlat
push
add
pop
leave
jns
jmp
mov
je
jecxz
arpl
jb
rcrl
mov
adc
in
or
jmp
and
xor
jns
mov
lret
pop
pop
inc
fstl
push
insb
sub
cmp
pop
daa
aad
fsts
mov
das
icebp
imulb
add
out
aaa
sbb
cli
sti
inc
xor
imul
pop
shrl
inc
and
fnsave
pop
sbb
cltd
stc
xchg
popa
and
inc
or
shrl
mov
mov
ss
jmp
add
daa
cld
jl
mov
les
and
icebp
call
cmp
or
ret
sti
mov
repz
jl
insl
imul
sbb
mov
mov
adc
mov
inc
jbe
outsl
loope
loope
jg
std
jo
mov
push
fwait
sub
fsubr
add
push
imul
and
outsb
out
int
es
adc
push
mov
jnp
lock
push
mov
pop
push
pop
pop
add
ret
ljmp
and
arpl
xchg
add
stos
jbe
jb
sbb
es
or
pop
jns
jbe
adc
push
cmpsb
insl
mov
xor
sub
lret
dec
push
fisubs
cmpsb
stc
ljmp
push
adc
sub
scas
fistpl
into
xchg
test
loop
cmp
movsb
mov
push
push
sbb
cs
sub
shrb
mov
and
push
sbb
pop
push
movsl
push
je
xchg
inc
test
scas
mov
imul
pop
out
cmpsb
imull
loope
sbb
lret
inc
xor
push
cmp
mov
lret
rol
cmpsl
and
mov
loope
mov
dec
data16
std
pop
mov
stos
push
mov
lea
xlat
jno
out
lahf
add
mov
inc
xor
and
mov
pusha
add
inc
xchg
adc
popf
push
jne
sbb
lret
push
xchg
dec
or
xchg
idivb
or
arpl
scas
popa
fiaddl
sub
and
sbb
xchg
clc
std
cltd
jmp
leave
push
pop
mov
add
push
rcrl
addr16
gs
aaa
or
jecxz
push
and
clc
push
xor
stos
sub
cmp
ja,pt
clc
aas
mov
loope
mov
outsb
stos
jbe
dec
pop
loope
aam
adc
lcall
push
icebp
mov
adc
ja
icebp
es
jp
scas
or
and
and
xchg
clc
jns
add
sarl
cmp
jle
cli
mov
jae
jmp
fs
sub
mov
xchg
fsubl
dec
jge
inc
pusha
add
push
add
imul
out
into
popa
mov
in
mov
and
push
clc
mov
rcrl
cwtl
sar
movsb
push
push
popa
lock
sbb
and
or
jle
fistpll
jg
xlat
mov
inc
xchg
clc
roll
adc
out
xchg
testb
adc
outsb
inc
or
push
sub
mov
pop
rorl
cmpsb
fisubrs
or
and
bound
fisttps
repz
mov
and
sub
insl
nop
leave
add
xchg
sbb
and
cmp
and
add
jge
lods
dec
push
pop
pop
fstpl
xchg
jo
push
enter
bound
mov
dec
xchg
cmpsb
outsb
loopne
call
clc
inc
testb
ficoml
xor
dec
push
clc
lea
jg
mov
mov
jo
cld
es
mov
test
dec
lret
loopne
lods
lahf
mov
arpl
std
sbb
push
std
fnstenv
push
out
out
in
mov
dec
lahf
lret
pusha
lahf
ljmp
inc
int3
or
mov
in
jnp
ret
daa
scas
push
mov
jo
iret
adc
sub
movsl
aas
sub
fmul
inc
and
adc
mov
sbb
push
bound
sbb
push
in
cmpsl
xchg
mov
fistps
mov
mul
mov
pop
push
add
mov
adc
js
fwait
cmp
sbb
inc
dec
pusha
jo
cmp
inc
ljmp
int3
aas
jno
ret
int
loop
imul
fidivrl
add
xchg
lock
cmp
aad
pcmpgtd
pop
cli
std
daa
mov
adc
popf
data16
or
sub
xor
push
mov
or
imul
jmp
pushf
push
adc
mov
in
adc
adc
addr16
movsbl
add
mov
jg
in
jmp
popf
mov
pusha
add
sub
cmp
int3
jbe
jge
ds
cli
scas
es
add
push
lret
out
xchg
inc
fwait
jecxz
and
outsl
sub
dec
or
pop
lds
xor
lret
cmp
xchg
rcr
addr16
out
add
sbb
push
pop
push
or
fwait
mov
out
lods
xchg
xchg
sub
lret
pop
in
iret
clc
xchg
mov
pusha
push
mov
jmp
shll
rorb
add
movsb
push
ret
mov
adc
jne
out
out
or
adc
sub
push
dec
jmp
lcall
sub
cltd
jp
repz
int
and
xor
jecxz
mov
xchg
and
mov
inc
fistl
jp
mov
test
cmpsl
dec
ds
or
jbe
pushf
mov
xchg
mov
adc
or
mov
push
push
lods
pop
mov
dec
ficomps
ljmp
clc
mov
lcall
in
mov
pop
add
hlt
aas
mov
jb
popf
pop
pop
or
in
pop
sbb
or
mov
xchg
jmp
add
push
pop
pop
sahf
push
mov
xchg
adc
and
mov
cmpsl
adcb
mov
mov
lods
push
mov
imul
test
mov
imul
push
addb
push
fistps
and
pop
jge
xchg
dec
sbb
inc
pop
dec
aaa
push
mov
out
test
nop
add
js
test
mov
mov
pushf
mov
in
jnp
ror
add
sarb
push
orb
jo
iret
push
push
sub
cmp
xor
mov
fisubrs
fdivrl
outsl
mov
inc
sahf
roll
imul
into
mov
or
loope
mov
sbb
add
hlt
cmp
dec
or
add
adc
mov
jns
mov
in
ja
jne
xchg
mov
mov
pop
cmp
in
push
and
int
bound
sbbl
adc
sbb
rcrl
icebp
push
out
mov
hlt
pop
sub
enter
lods
sbb
addr16
ret
mov
cmp
outsb
out
lea
xchg
cmp
int3
and
sub
out
pushl
lret
stos
test
xor
mov
jecxz
mov
xor
mov
add
shlb
rclb
mov
sbb
adc
and
mov
mov
adc
insl
jle
inc
xchg
lods
outsb
nop
pop
push
xor
fs
dec
cmpb
cs
call
mov
cs
sarl
fisttpll
push
int
mov
fcoml
roll
xor
ss
xchg
scas
in
repnz
and
mov
pushf
fwait
jmp
mov
and
data16
lods
sti
jmp
fmull
push
popa
fincstp
lret
decl
xor
je
icebp
fidivrs
imul
pop
xchg
xlat
pop
push
sbb
pop
cwtl
enter
cmpl
push
lds
js
in
fwait
lea
pop
rcrl
fs
add
pushf
xchg
arpl
cmp
fdivr
fcmove
dec
in
or
fdivs
mov
sbb
sbb
sbb
movsl
push
sub
pop
and
mov
arpl
inc
loopne
adc
es
movsb
xchg
jmp
jb
fildl
in
cltd
aaa
push
notb
insb
add
scas
jnp
xchg
xchg
loop
pop
sbb
jae
popf
aad
jb
popa
xchg
mov
lods
clc
in
sbb
cwtl
mov
imul
addr16
not
mov
fstpt
stc
jl
dec
mov
xor
push
pop
push
xorl
insl
xchg
loop
fsubrl
jmp
mov
bound
repnz
divb
mov
xlat
pop
lahf
push
mov
mov
fisttps
gs
pop
xchg
aam
push
lds
jmp
das
pop
stos
repz
inc
or
jmp
in
andb
mov
iret
aaa
lret
mov
push
mul
imul
mov
inc
dec
imull
not
es
or
push
inc
scas
jmp
nop
ret
xchg
pop
clc
fs
mov
std
cmp
inc
lcall
imul
mov
jg
jbe
mov
pop
es
pop
or
je
jno
adc
pusha
gs
jecxz
push
xor
pusha
jo
xchg
std
cmpsb
add
jb
imul
jg
pop
std
imul
jmp
push
js
inc
sub
test
cwtl
negb
scas
push
jmp
xlat
mov
jne
out
ljmp
jb
repnz
cmp
in
aaa
push
or
sahf
xchg
mov
xchg
and
sub
jecxz
pop
daa
cmpsb
cmp
jns
lcall
pop
ds
pop
or
fidivs
movsl
pop
sti
push
jle
sub
mov
mov
xor
in
push
pop
xorl
gs
es
mov
aad
xchg
call
pop
cmp
mov
je
inc
ja
mov
mov
or
scas
jo
test
cli
repnz
mov
pusha
cmp
jle
mov
xchg
push
mov
push
js
mov
imul
cmp
dec
xor
fcmovbe
xchg
mov
lahf
mov
fildl
shrl
sbb
fld
addb
mull
in
adc
mov
js
gs
mov
test
int
dec
bound
xchg
rcrl
std
and
sub
xorl
fcoms
pop
sub
jnp
cmc
xor
pop
adc
ja
addb
loope
xorb
push
stc
adc
cmp
sbb
outsl
adc
add
add
mov
fldenv
aad
add
xchg
js
xchg
rcrl
xor
cli
add
outsl
dec
outsb
mov
lods
xchg
pop
scas
adc
lret
cmp
cld
cmc
or
mov
icebp
jg
stos
push
out
xor
stos
push
js
call
xchg
sti
sbb
dec
dec
inc
in
out
lock
js
pop
into
jae
jns
sbb
addr16
outsl
push
sbb
mov
fildll
or
jnp
fisubrs
inc
stos
jno
in
sbb
repz
in
cmp
mov
fdivl
repz
jge
pusha
lcall
stos
dec
inc
add
jl
vminpd
and
push
push
and
mov
push
test
out
add
clc
jo
sarb
or
mov
push
adc
jns
push
out
cmp
xor
scas
enter
rdpmc
test
clc
push
dec
mov
inc
jns
ljmp
adc
cmc
nop
xlat
shr
dec
push
fisubrs
mov
iret
sti
lahf
jmp
clc
dec
and
pop
ja
js
rcll
lcall
mov
gs
adc
cmp
mul
movsb
cmpsb
clc
mov
fidivrs
push
and
mov
jle
nop
or
mov
and
sbb
ret
mov
cmpsb
in
adc
daa
xor
sbb
mov
pop
push
dec
das
pop
out
mov
pop
mov
sub
loope
push
inc
int3
mov
scas
jae
or
xor
mov
fsubrs
les
cmpsl
lods
adc
xorb
inc
xchg
and
or
aam
mov
mov
cmp
pop
fs
cmp
cmp
nop
jno
lret
scas
dec
neg
adc
mov
movsl
mov
push
ficompl
arpl
dec
or
adc
icebp
loopne
fwait
lret
jmp
lcall
xchg
andl
add
or
leave
mov
mov
inc
jns
jb
movsl
cwtl
out
lcall
pop
enter
nop
testb
push
inc
adc
inc
inc
stc
mov
cmp
in
add
or
lret
push
ret
shll
js
std
xlat
dec
fbstp
dec
push
daa
stc
mov
repnz
jo
adc
fisubrl
cwtl
push
pop
mov
jge
or
mov
repnz
adc
or
mov
xchg
in
out
pop
in
xor
xchg
push
ja
mov
sub
xor
cmovae
jnp
pushf
shlb
sbb
inc
sbb
dec
cmpsl
mov
test
or
out
stos
sub
jbe
movsl
adcl
fisttpl
push
pop
arpl
fwait
cmp
sub
in
pop
pop
mov
xor
xchg
mov
xchg
or
aam
orb
jecxz
jns
inc
ja
pop
and
sbb
lock
jge
and
pusha
fcompl
out
sub
dec
fldcw
push
add
mov
add
push
adc
inc
inc
xchg
push
sub
mov
popa
xchg
addr16
cmp
lcall
shrl
insl
stos
in
push
dec
push
mov
sub
outsb
daa
mov
jl
fldt
pop
icebp
dec
or
fcmovnu
dec
pop
adc
push
arpl
pop
and
sbb
sbb
imul
sbb
push
das
add
or
xchg
mov
dec
dec
call
lea
adc
mov
sbb
int3
rorl
ss
sbb
lea
int
xchg
mov
mov
daa
repnz
sbb
out
repz
lret
adc
loopne
or
xor
arpl
push
adc
sbbl
lds
xchg
cmp
ror
or
or
jle
leave
cld
cmovb
leave
stc
adc
out
in
xchg
dec
or
lret
in
ret
test
push
sub
pop
push
das
je
cmpsl
dec
push
shlb
fnstcw
mov
jle
bound
pushf
inc
pop
cs
stos
mov
mov
xor
std
jmp
xor
lcall
mov
sarl
mov
lds
push
or
data16
daa
popa
negb
xor
sbb
jne
es
fildl
xor
cmp
pop
sub
stos
push
enter
or
lock
mov
xchg
out
and
in
fs
sub
xchg
cld
cmc
or
push
or
xchg
jge
arpl
sub
xor
or
xor
push
nop
xor
insl
das
outsb
and
iret
adc
xchg
mov
lret
cmpsb
rclb
sub
lea
out
sub
mov
data16
leave
in
fldenv
push
dec
inc
jmp
stos
sub
aaa
adc
arpl
sbb
pop
sbb
xchg
ljmp
sarl
add
inc
repnz
js
ss
inc
imul
mov
sub
xor
in
adc
mov
sub
xor
inc
inc
adc
and
seta
push
lds
inc
or
adcl
lea
les
insl
scas
pushf
lock
sub
xlat
cmpsb
sub
out
push
icebp
das
idivl
xor
sub
and
or
push
push
sbb
mov
xchg
dec
stos
iret
mov
inc
sub
rcrl
xchg
insb
pop
push
mov
hlt
mov
mov
dec
mov
outsb
ss
test
xor
pop
mov
rolb
jmp
jle
insl
imul
aad
cli
add
and
fs
xor
add
pusha
movsl
popa
dec
xchg
daa
add
pop
or
notb
mov
sub
cwtl
out
lcall
inc
aaa
pop
cwtl
cld
mov
clc
ss
jmp
jmp
rcll
in
xlat
dec
aas
push
mov
or
loop
xor
lret
loop
jge
add
dec
sbb
dec
icebp
lret
int3
in
cmpl
test
rolb
mov
test
ljmp
shrl
mov
pusha
push
and
out
icebp
push
fwait
out
aam
adc
dec
push
pop
mov
out
popf
outsb
js
or
in
je
fcompl
loop
adc
fildll
aaa
arpl
jbe
xor
hlt
pop
aad
in
decl
mov
cmp
push
test
in
stos
cmp
push
lock
jns
pop
aad
adc
or
or
xor
cmp
push
jno
leave
xchg
cmp
cltd
jl
repnz
jb
insb
dec
sbb
mov
jno
pop
cmpsb
inc
stos
dec
jae
test
add
cmp
sbb
inc
and
sub
aad
add
stos
aam
dec
incl
sbb
xor
es
popf
pop
in
mov
mov
frstor
jecxz
shrl
pop
mov
mov
sub
push
add
dec
mov
mov
loop
gs
mov
cmp
dec
sub
pop
stc
inc
jo
ljmp
addw
push
xor
repnz
xchg
cmp
jp
and
sub
les
mov
jnp
scas
or
push
insb
sub
xchg
subl
neg
xlat
inc
data16
std
sbb
dec
ds
dec
pop
xor
cmp
std
in
ja
push
lret
mov
mov
cmp
mov
out
sbb
shl
out
in
mov
pop
ds
adc
or
push
push
xchg
fsubrs
icebp
or
inc
lahf
stc
in
movsl
sub
push
insl
std
sub
jmp
das
cwtl
push
mov
and
rcrl
ret
cmp
inc
adc
add
js
push
xchg
int
xor
out
dec
movsb
mov
add
orl
mov
xchg
jmp
insb
mov
in
rclb
mov
popa
adc
jb
in
das
mov
dec
jbe
mov
sub
movsb
rcl
push
mov
dec
iret
cmp
ret
repnz
sbb
sub
hlt
shufps
lea
pop
mov
mulb
xchg
das
cld
xor
loope
dec
and
xchg
mov
bt
fcmovnb
dec
andl
and
xlat
xor
mov
add
addr16
add
test
jnp
insl
rcrb
and
push
jle
mov
cwtl
ja
int3
sub
je
adc
loope
dec
gs
mov
aam
and
pop
jge
movsb
lahf
lods
pop
cltd
add
jnp
rorb
cmpl
dec
push
rcll
inc
imulb
ss
mov
sbb
jno
pop
sub
movsl
imul
mov
loope
lret
adc
into
ljmp
jg
dec
cmp
cmp
test
int
icebp
insl
cwtl
jecxz
inc
mov
and
in
add
pop
sar
push
push
shlb
std
mov
and
mov
and
mov
cmp
fwait
repz
lret
aaa
and
xchg
push
sbb
mov
fwait
xlat
cmp
xor
lahf
xlat
and
or
jge
cmpsb
add
outsl
ret
mov
test
outsb
daa
add
or
lods
inc
nop
sbbb
mov
clc
pop
cli
loopne
cmpsb
cltd
cmp
xchg
pop
and
inc
or
mov
mov
and
insb
divl
sub
jae
mov
int
ret
cmc
xorb
add
daa
loopne
popa
push
xor
cmovo
sub
test
push
inc
mov
xchg
mov
lock
inc
xchg
push
inc
push
cmp
mov
mov
pop
pop
adc
inc
jl
or
mov
sti
or
stos
inc
pop
jbe
pop
push
adc
dec
pop
hlt
pop
adc
fadds
pop
push
dec
movsb
or
and
lods
sub
and
call
pop
xchg
jo
cmp
ror
seta
jne
pop
stos
push
aaa
sarb
dec
fstpl
fdivs
mov
mov
cld
aad
fwait
pop
sbb
lock
fwait
pop
enter
jnp
pop
icebp
mov
xchg
xor
push
push
xor
gs
lock
sbb
add
inc
push
stos
sarb
orl
ja
xor
dec
sub
rcr
or
mov
pop
jb
das
call
jae
ret
xchg
xlat
aad
in
js
loope
insb
or
scas
xchg
mov
shrb
lcall
inc
in
xchg
adc
sbb
repz
fcmove
mov
pop
mov
mov
push
mov
int
or
push
iret
orl
xor
mov
push
jno
sbb
mov
fwait
cwtl
or
xchg
jecxz
adc
add
adc
movsb
pop
pushl
lahf
or
aad
mov
aaa
mov
dec
cmpsb
mov
push
loope
idivl
sar
pop
jo
push
loope
in
sti
lret
dec
mov
fldl
clc
lcall
adc
ret
in
mov
dec
xchg
pop
and
fidivl
mov
ret
push
lret
xor
fadds
pop
cs
jne
int
dec
mov
cmpb
popf
enter
inc
mov
xchg
test
and
sbb
scas
cmp
jne
cmp
sub
cmpsb
push
sbb
xchg
pusha
movsl
cmp
cltd
lock
add
ja
dec
stos
and
jnp
xchg
mov
das
mov
jo
xchg
int
rol
lods
repz
jo
and
mov
outsb
inc
in
pop
inc
add
jns
mov
xchg
cmp
mov
or
mov
push
dec
filds
xchg
push
daa
jb
nop
pop
adc
cmp
mov
jl
ljmp
and
lret
frstor
loopne
ficoms
stos
inc
or
pop
pop
aas
ficoms
fsubrs
sub
dec
stos
daa
ljmp
gs
cmc
pop
enter
in
cmp
dec
aaa
jp
in
hlt
xor
push
mov
negl
cwtl
lds
lret
add
adc
jno
rcrb
and
push
loop
pop
inc
mov
mov
ss
mov
lcall
test
arpl
sbb
sti
iret
in
mov
imul
mov
dec
lcall
ja
dec
inc
inc
clc
sti
jmp
push
sub
mov
addb
and
adc
in
push
add
das
gs
xor
xlat
repz
test
jge
xor
sbb
sub
data16
lock
or
sub
inc
in
loopne
daa
dec
stos
mov
jbe
ror
adc
fwait
in
cwtl
cmp
pop
mov
inc
loopne
ret
fstpl
movsl
scas
sbb
loope
dec
and
mov
adc
jl
push
dec
mov
test
jno
inc
mov
push
ja
mov
lds
jge
mov
cmp
fsubp
adc
movsb
stos
js
aaa
das
mov
pop
push
fidivrl
ret
es
lahf
sbb
jb
xchg
dec
cld
insl
aas
pop
dec
jle
fildl
testb
in
adc
lahf
subb
and
xchg
push
sti
les
mov
and
bound
inc
mov
mov
pusha
sbb
sti
ljmp
xchg
xchg
jb
into
mov
insl
mov
aaa
sub
jp
shlb
jne
bound
repz
mov
fidivs
nop
sub
int
xorl
ss
mov
ffreep
sbb
rcrb
xorb
movsb
stc
jmp
out
push
je
cwtl
mov
add
cmp
imul
aad
or
lret
xor
mov
pop
popa
inc
aas
call
mov
cmpb
xchg
je
ret
outsl
xor
sub
sbb
mov
mov
sbb
mov
jp
xchg
out
call
jno,pt
fs
and
inc
and
mov
call
add
out
pop
clc
push
dec
scas
or
add
lock
inc
sbb
shrb
adc
cmp
pop
or
insb
outsl
xor
jge
mov
or
loop
xchg
icebp
cli
out
outsb
inc
mov
xor
jge
pop
sahf
pop
xor
imul
es
sub
dec
cli
jnp
pop
mov
jns
inc
jecxz
sahf
mov
sub
pop
dec
mov
mov
mov
sbb
add
loope
cmc
jecxz
popa
jge
nop
cltd
sbb
out
sub
lock
loopne
and
push
imul
in
pop
loop
inc
xchg
dec
pop
push
pop
xor
push
adc
jle
push
mov
aaa
ss
or
and
dec
scas
les
pop
mov
push
xor
add
and
mov
loope
jne,pn
incb
aaa
push
xchg
test
xchg
or
imul
mov
lea
test
outsb
cmp
sub
fidivs
ljmp
in
pop
loop
dec
aam
sahf
or
pop
lods
fiaddl
loope
sub
in
hlt
cs
int
imul
xor
lea
aas
inc
dec
jne
rcrb
gs
add
sbb
aas
xor
or
or
js
cwtl
out
add
push
or
sti
jb
and
cwtl
in
bound
push
ss
xchg
mov
push
cmp
sub
xor
fidivrl
cmp
push
jo
enter
mov
xor
decl
xchg
cli
xchg
cmp
movsl
outsl
xor
pop
pop
aaa
je
aaa
inc
sbb
push
loopne
jmp
mov
rcr
shl
dec
rolb
or
jb
in
inc
js
jno
movsb
out
out
jmp
popf
add
lds
jno
je
nop
idivb
push
mov
test
dec
xor
arpl
xchg
pop
arpl
into
and
mov
out
sub
mov
js
add
cmp
sub
in
ret
shlb
pop
mov
push
mov
pushf
sub
pusha
in
fimuls
pop
xor
out
in
inc
push
dec
sub
test
mov
cwtl
lds
test
int
push
push
jmp
aad
jb
adc
mov
jae
mov
jecxz
adc
sti
int
divl
fdivrl
gs
inc
push
inc
shrl
push
cmp
pop
ds
aad
mov
or
mov
push
xchg
adc
mov
xchg
ljmp
jge
push
adcb
jae
in
sbb
xor
addb
clc
or
lds
jae
hlt
out
adc
push
sub
sbb
adc
cli
inc
loope
pusha
lds
pop
dec
push
pop
sub
bound
cltd
insb
outsl
xor
popa
int
push
sub
jge
lret
lahf
xor
or
flds
mul
add
cmp
and
lds
fsubrl
xor
hlt
mov
xor
pop
xor
cs
push
insl
nop
and
push
mov
jp
into
test
fstl
dec
push
mov
pop
lret
fcmovne
mov
jmp
repz
mov
xlat
lods
push
lret
ret
jne
and
ss
test
dec
jge
dec
insb
int
test
ficoml
mov
div
mov
je
xchg
mov
pop
cmpsb
loopne
mov
fnsave
mov
jmp
push
xchg
das
cmp
popf
pop
lret
adcb
rol
push
pop
adc
mov
adc
dec
std
in
pop
mov
std
jp
sbb
and
sbb
sbb
pop
clc
aad
add
icebp
mov
jl
pusha
movsb
dec
mov
xor
andb
in
pop
aam
sbb
mov
in
sahf
jb
add
cmp
jecxz
sub
das
dec
push
lds
xchg
aad
cmc
das
addb
push
cmp
and
imulb
jno
sub
cmp
mov
mov
pop
repnz
test
jbe
inc
pop
int3
mov
scas
jecxz
fldcw
clc
sbb
popf
imul
add
je
es
pushf
push
popa
enter
lea
jle
jmp
mov
into
fwait
in
sti
mov
inc
or
sbb
adc
push
push
cli
stos
cmp
sar
mov
sub
stc
push
xor
adc
nop
sahf
data16
iret
jae
adc
or
sbb
fdiv
sbb
mov
decl
lahf
stos
mov
daa
repz
and
hlt
push
jmp
pop
push
inc
cmp
mov
imul
lret
hlt
movsl
loope
mov
fidivs
adc
outsb
icebp
dec
fnsave
push
mov
icebp
sbb
adc
jns
jmp
sub
mov
bound
push
dec
pop
xchg
scas
in
mov
xor
and
jmp
stc
test
xchg
lds
mov
pop
das
inc
add
les
andl
jge
fs
mov
aas
rorl
clc
xchg
sbb
rorl
adc
mov
dec
cmp
cmp
mov
mov
or
and
xor
push
aam
sti
mov
fmulp
call
dec
xchg
jb
std
sarb
push
lea
mov
shlb
clc
push
or
push
jns
lock
repnz
sarb
add
jmp
jmp
xchg
lods
fstps
call
or
fs
fnstenv
mov
je
cs
push
inc
les
pusha
jnp
sub
dec
and
inc
and
add
in
sbb
mov
jp
xchg
lret
decl
cwtl
inc
mov
jge
push
xchg
add
adc
fcoml
xor
sbb
rclb
pop
lret
bnd
nop
pop
iret
je
outsl
rorl
in
shlb
loope
mov
fidivl
shll
fcmove
lahf
cmpsb
in
clc
mov
aas
ret
rclb
aad
xor
mov
dec
rorb
add
mov
xlat
mov
in
mov
cmpsb
icebp
add
into
push
push
jb
out
subb
aas
fiadds
aam
call
pop
sahf
push
sub
insl
or
or
popf
mov
add
push
or
or
in
andl
push
aaa
test
ljmp
aam
pop
out
scas
arpl
jmp
add
outsl
inc
lods
or
jecxz
inc
loop
cmp
inc
movsl
jo
addr16
jmp
inc
icebp
in
jmp
push
lock
sub
cmp
mov
mov
maskmovq
jmp
push
insl
clc
jg
imul
negb
scas
push
fildll
cli
movsl
sti
or
inc
in
xchg
fldenv
dec
addb
or
jns
xchg
lret
lret
push
or
sub
stos
repz
je
push
es
cpuid
ja
push
fisubs
push
and
jl
test
cmp
mov
pop
enter
or
mov
arpl
out
arpl
int
xor
jb
mov
popa
clc
push
push
loopne
pusha
fsub
in
pushf
dec
ja
xrelease
mov
fldenv
fistl
daa
mov
push
lcall
pop
adc
test
add
into
push
jo
adc
stos
jns
addr16
rorb
mov
lcall
and
icebp
add
pop
pmaxsw
and
out
mov
mov
pop
imull
lahf
mov
sbb
and
mov
mov
leave
lds
lea
jge
xor
fmul
and
in
push
or
inc
repnz
jo
popa
dec
mov
mov
leave
sub
jno
cmp
loop
andb
push
incb
add
jmp
xchg
add
pop
jmp
adc
add
jecxz
push
orb
sub
rolb
and
les
jns
ret
xchg
jmp
mov
xor
push
test
cmp
mov
loopne
and
mov
pop
insb
xor
aam
mov
stos
repnz
out
rcrb
rcrb
fs
add
in
mov
mov
cmp
mov
in
xchg
or
sbb
mov
push
not
and
push
out
cmp
das
push
pop
jg
and
sub
aad
ljmp
push
dec
xchg
adc
mov
out
in
xor
pop
jo
lods
and
mov
pop
or
lret
inc
push
xchg
xor
jle
shr
lret
pop
in
sbbb
xchg
adc
daa
push
or
adc
sbb
rolb
iret
jge
roll
movsl
je
enter
push
test
sbb
sub
movsb
mov
push
push
mov
or
jle
mov
xchg
xchg
fidivrs
fwait
mov
stc
push
or
rcl
cwtl
fcmovnu
decl
sets
sbb
mov
or
in
or
inc
iret
cmp
icebp
inc
jbe
dec
push
test
aas
lods
and
test
xchg
rcr
nop
out
ljmp
stos
push
out
lods
adc
sbb
pushf
jo
jbe
push
ds
aas
ljmp
enter
lret
push
stos
movsl
imul
inc
xor
xor
add
in
movsl
cmpsb
push
test
add
mov
push
stos
mov
adc
out
call
imul
lods
adc
xor
or
setns
andl
xor
scas
sub
pop
movsb
cmp
push
ret
and
add
cmp
inc
and
iret
dec
clc
movsb
js
sbb
jl
les
cmp
insw
mov
ljmp
into
iret
lock
loop
sbb
inc
lahf
bound
aaa
jns
inc
push
sub
add
add
or
outsl
shll
xchg
mov
xchg
jp
xor
sub
push
jmp
addl
out
daa
adc
movsb
push
outsb
push
mov
shrb
int3
scas
enter
mov
loope
or
push
mov
mov
push
pop
sub
add
insb
shlb
push
outsb
scas
lea
cltd
test
icebp
sub
or
rcll
ss
xchg
push
and
outsl
mov
es
lcall
loop
pop
test
push
scas
rolb
lcall
jbe
sub
out
sbb
pop
mov
fwait
dec
or
or
pop
mov
lods
aas
scas
sti
aam
insl
into
sbb
mov
dec
roll
cmp
pop
sub
pcmpgtw
dec
xor
pusha
fs
mov
fdivrp
xlat
xchg
push
and
push
dec
aas
pop
mov
xor
fildll
pop
jne
lret
sub
scas
xchg
lods
jnp
ret
popa
adc
dec
aaa
push
fnstenv
add
orb
repz
sub
pop
out
iret
fs
lea
je
cmpsb
lods
push
xchg
mov
mov
shrl
into
mov
shlb
or
or
pop
test
lock
xor
mov
inc
mov
or
iret
leave
push
pop
push
jno
iret
outsb
push
sub
mov
cmp
popf
mov
inc
mov
cwtl
in
mov
add
ljmp
sar
enter
cmp
cmp
mov
push
lret
jno
loopne
sub
mov
sbb
lods
xor
and
xlat
pop
inc
xor
ds
mov
dec
pusha
rorb
lock
dec
adc
cmc
cmp
out
nop
pop
mov
inc
iret
ss
mov
cmpsl
fildl
inc
js
or
xchg
push
iret
movsl
push
sti
push
mov
inc
jnp
jne
nop
imul
out
inc
pop
inc
inc
add
dec
outsl
adc
fists
mov
lods
aas
int
mov
cld
outsb
jge
cmp
aaa
pushf
sbb
mov
aam
dec
sbb
cs
mov
adcb
nop
mov
aad
pop
push
xor
mov
inc
inc
cmp
xchg
or
jecxz
and
rorb
sub
push
and
mov
enter
sub
xor
in
push
lds
jge
popa
lods
rcr
adc
int
pusha
xor
mov
cmp
push
fcoms
lock
stos
push
sti
lods
cmp
sbb
jno
call
xchg
push
loope
jae
mov
cmp
inc
mov
cld
pushf
sbb
adc
jo
dec
cmpsb
or
inc
mov
mov
add
pop
int3
xchg
cmp
and
inc
mov
shlb
and
fdivrs
mov
pop
xor
mov
test
gs
dec
jae
push
and
jg
jno
cwtl
je
cli
sbb
fwait
adc
xchg
repnz
and
ret
jl
fisttpl
push
sahf
clc
jns
out
cld
jnp
mov
sbb
ljmp
mulb
add
xor
sbb
gs
subl
filds
jae
and
std
pop
outsb
fwait
rclb
lods
in
sub
or
int
mov
pop
mull
mov
or
out
xchg
cmp
daa
sbb
ret
flds
xor
or
test
int3
sbb
roll
jno
pop
and
ljmp
push
and
dec
insl
dec
faddl
jge
cmpl
inc
fwait
jecxz
cmc
dec
sub
clc
fs
xchg
ljmp
int3
adc
fdivrp
pop
int
aaa
push
jns
pushf
lods
arpl
mov
arpl
jae
leave
rclb
out
xor
xor
rorb
push
out
vaddsubpd
sbb
mov
fcomip
xor
testl
and
adc
sub
andl
das
mov
pop
sub
call
aaa
cmpsl
shl
pop
pop
out
sarb
ja
scas
dec
fwait
leave
mov
inc
addr16
scas
jmp
add
sbb
std
inc
mov
jmp
xchg
jne
sarb
divb
jge
add
in
jp
ja
add
pop
xor
push
sub
outsb
ds
fidivl
xor
lods
cwtl
cli
les
xor
mov
xchg
push
or
fldt
into
pop
xchg
cmp
shl
insl
lcall
stc
pop
inc
or
addr16
dec
mov
cmp
pop
mov
nop
ret
xchg
movsl
jg
ficoms
aaa
xchg
mov
push
je
push
pop
and
std
pop
movsb
pop
movsl
xchg
cmp
test
stos
jle
sbb
cld
push
dec
sahf
inc
jno
pop
and
push
out
add
out
push
lock
mov
out
mov
stos
push
call
xchg
sahf
aas
jne
push
inc
clc
mov
xchg
sub
dec
ds
push
punpckhwd
in
xor
inc
xorl
sub
xchg
mov
das
icebp
rorl
sub
in
cmpsl
aaa
das
out
mov
mov
jbe
fsubrp
or
mov
fs
cmp
push
jo
mov
inc
std
imul
add
push
and
ficomps
mov
jbe
xor
jae
jle,pn
pop
ret
add
jno
lock
mov
in
sbb
pop
fsubrl
roll
ret
loop
add
sbb
mov
aam
mov
xor
jns
adc
jae
add
sub
out
data16
clc
lcall
sbb
arpl
cltd
popa
lcall
mov
cmpsl
hlt
mov
jle,pt
fwait
stc
sub
pushl
cmp
xor
push
jae
sbb
jle
mov
test
stc
lea
iret
jp
int
xor
jge
scas
inc
shrl
lcall
stc
fiaddl
rorb
xor
arpl
mov
aad
xchg
push
out
bnd
or
pop
cmp
or
nop
or
mov
cmp
enter
push
and
aam
bound
and
mov
cld
mov
lea
inc
fsubrs
icebp
clc
pop
movsl
insb
pop
stos
pop
cld
jnp
fsub
xchg
lcall
fiaddl
jmp
or
sub
mov
cmpsl
int
push
out
mov
inc
cmp
inc
inc
and
scas
movsb
jg
es
lds
jl
in
jo
adcl
mov
into
mov
popa
cmp
pop
out
xchg
inc
pop
in
mov
pop
pop
fimuls
inc
adc
mov
imul
mov
aas
cmpsb
ds
push
movsl
ret
mov
mov
js
repnz
cmpsb
loop
xchg
xor
mov
and
gs
or
lea
jle
mov
adcb
mov
xlat
jnp
test
out
outsb
int3
xchg
dec
cmp
cmp
mov
lret
cmp
in
inc
lods
divl
cmp
leave
dec
icebp
push
imul
shl
enter
or
stos
xor
aas
jle
inc
out
inc
xchg
push
add
add
mov
push
arpl
xlat
lret
lds
fsubl
add
ja
adc
pop
jecxz
out
ret
add
cmp
fs
in
jge
pop
adc
pop
inc
pop
adc
push
popf
mov
xor
push
imul
out
or
aas
xchg
out
imull
js
mov
jge
cmp
add
pusha
inc
loope
xchg
push
loope
mov
rclb
js
push
push
loop
push
loope
jno
xchg
and
cld
scas
fdivs
jns
jge
aas
fimull
mov
sub
mov
lea
pusha
lea
mov
jle
rcrl
adc
in
ret
imul
jmp
jg
pop
push
pop
pop
xor
out
or
and
jmp
movsl
jl
pop
test
das
out
repz
cmp
and
xchg
sub
adc
sbb
adc
std
insb
mov
outsl
push
or
mov
xor
shll
into
push
add
mov
outsl
jne
cmp
sbb
imul
or
dec
out
loopne
mov
jp
dec
pushf
cld
jmp
mov
and
aas
imull
mov
adcl
inc
movsl
and
xchg
push
inc
js
mov
mov
jns
adc
popa
mov
mov
das
push
jnp
jnp
mov
subl
jb
arpl
dec
jns
cld
xchg
push
jbe
jo
push
stc
sbb
popf
imul
xchg
in
jecxz
inc
sbb
push
and
xchg
rsm
push
cld
or
call
scas
jb
insb
pop
or
jo
jg
jecxz
push
loope
pop
mov
repz
push
xor
js
std
enter
lea
lcall
sub
sub
pusha
sub
pop
mov
imul
xchg
and
dec
rcrb
push
mov
dec
cmc
sbbb
rorl
hlt
data16
push
fwait
push
xchg
test
fsts
cmc
das
push
cltd
nop
mov
sbb
adc
out
in
xchg
aam
lods
sbbb
cmp
xchg
scas
rcl
jno
cmp
ret
xor
xor
mov
inc
mov
cmp
xor
add
je
add
mov
jne
aaa
jb
je
xor
dec
aad
in
ja
loopne
mov
out
hlt
adc
add
or
imull
sbb
scas
and
repnz
jmp
nop
sahf
popa
mov
dec
pop
sbb
das
push
cmpsb
sahf
subl
dec
lods
ret
aaa
xchg
es
cmp
mov
or
mov
push
sti
inc
add
mov
outsl
movsl
sub
enter
add
cld
push
mov
popf
xor
in
inc
mov
out
inc
cmp
xor
paddusw
ret
fisttpll
les
in
test
imul
movsb
mov
xor
in
mov
sbb
fiadds
mov
inc
inc
add
adc
movsl
and
sbb
ds
xor
int3
lret
jb
xchg
jge
cltd
ret
hlt
jnp
or
fdiv
jg
jle
lds
pop
dec
scas
xchg
or
in
mulb
aam
pop
cli
push
test
stos
ret
std
mov
nop
frstor
fst
add
fs
push
jle
cmp
inc
xchg
jbe
imul
mov
or
pop
push
pop
mov
shl
xlat
stos
insb
cwtl
or
inc
sbb
enter
sbb
movb
lret
lock
dec
ljmp
stos
sbb
cli
iret
pop
or
orl
jge
cmp
or
hlt
mov
sub
jns
cmp
mov
sub
xchg
inc
repnz
sarb
js,pt
adcb
mov
paddusb
push
jo
les
pop
repz
cmp
out
insb
cld
sbb
dec
adc
lret
mov
cmp
fistl
push
lret
into
sbbb
mov
ds
push
ficoms
cmpsb
sbbl
enter
xchg
fwait
pop
mov
and
xor
sbb
xchg
inc
inc
xchg
mov
out
outsb
cmpsb
pop
jno
insl
xchg
add
out
mov
aas
sbb
mov
sbb
cmpsl
mov
inc
jne
cmp
adc
aaa
sub
mov
test
sub
jmp
xor
jmp
hlt
xorb
ret
inc
pop
mov
aam
xor
or
sbb
ficompl
pop
dec
dec
mulps
lret
movsb
inc
shll
jmp
daa
sbb
lods
adc
cltd
mov
popf
xor
test
mov
into
add
fs
aad
movsl
adc
fidivl
mov
inc
lahf
mov
sbb
aad
xor
sarl
aad
dec
ljmp
mov
lret
insl
fs
lods
xor
xor
xor
jae
stos
in
xor
notb
dec
lahf
pushf
pop
int3
dec
imul
out
nop
test
xor
repz
adc
push
mov
ret
int3
adc
sbb
mov
lcall
jnp
cmpsb
lea
popf
add
or
pop
cwtl
filds
sbb
xchg
pop
sub
jae
lods
repnz
add
and
loopne
and
shrb
std
sbb
jbe
insl
xor
sub
out
dec
stos
movsb
push
loope
dec
adc
mov
push
insl
mov
add
jp
out
ret
mov
and
aas
xor
adc
pop
clc
iret
rcl
inc
xlat
add
inc
xor
mov
xchg
xor
sub
or
or
sbb
pusha
add
gs
sub
push
inc
cmp
rclb
fcomp
lds
jmp
mov
xchg
jecxz
mov
dec
xor
nop
cltd
add
test
push
repnz
movsb
mov
inc
lock
sbb
andl
mov
mov
inc
enter
push
fimull
xor
mov
jb
xchg
mov
add
mov
imul
je
int
vpcmpeqb
outsb
out
ja
test
xor
mov
dec
or
push
aam
leave
in
jbe
and
adc
movsl
sub
loopne
test
mov
cmp
mov
test
push
mov
inc
xor
nop
sbb
jecxz
arpl
sub
pop
and
imul
dec
jle
repz
ljmp
mov
dec
jmp
or
inc
jge
xor
leave
cmp
mov
lahf
andl
lods
lret
mov
sti
push
ds
pop
daa
dec
stos
pop
cmpsl
aaa
sub
mov
jnp
sti
push
push
mov
ret
imul
sub
sbb
icebp
or
rorl
call
lods
fwait
jmp
sbb
lods
daa
shl
xchg
mov
dec
stc
inc
xchg
xchg
xorb
loop
iret
adc
fldpi
rolb
ss
stc
jmp
push
js
xchg
or
jns
sbb
jecxz
inc
sub
js
xchg
popa
mov
add
iret
and
in
sbb
mov
mov
lret
scas
lods
jle
mov
mov
and
rol
fcmovne
cwtl
popf
sbb
push
xchg
adc
stos
pop
mov
push
sbb
mov
dec
fcomip
dec
testb
rclb
insb
push
fcompl
dec
dec
xchg
lea
dec
and
fldenv
mov
xchg
out
xchg
lcall
fisttpll
fisttps
dec
mov
xchg
out
mov
inc
fcmove
int
fistpll
addr16
xchg
mov
xchg
es
jbe
sbb
or
inc
mov
cmp
cmc
pop
xor
sbb
test
xor
mov
ds
pushf
fisubrl
lcall
sbbb
adc
dec
xchg
cmpsb
or
xor
add
adc
jp
dec
mov
leave
sub
fs
and
lcall
movsl
and
aad
addl
jge
dec
pop
clc
outsl
xchg
fisubs
pop
idivl
mov
fisubl
xchg
mov
xor
jg
mov
fsubl
pop
pop
arpl
xchg
std
sti
mov
lock
iret
aas
sbb
ss
movsb
rclb
insl
xor
push
pop
xchg
into
movsl
adc
repnz
cmp
xor
sbb
mov
push
jge
jmp
icebp
push
and
es
adc
test
movl
adcl
push
xchg
sbb
ret
mov
dec
pop
jae
fs
mov
inc
adc
call
in
mov
pop
clc
loopne
popf
lahf
pop
pop
flds
jae
inc
lret
jle
inc
rol
addl
lret
pop
push
cli
sbb
js
cs
popa
stos
push
das
push
jmp
cmp
pusha
pop
sub
mov
pop
dec
icebp
lcall
fisttpll
ja
insl
pop
mov
inc
sbb
aad
push
rclb
xor
js
mov
lds
out
push
test
ljmp
inc
mov
inc
pushf
adc
addr16
cli
or
test
jno
mov
loopne
movsl
sbb
mov
inc
sub
shl
or
sub
cmp
sbb
nop
ficomps
leave
das
xchg
movsl
mov
lret
inc
push
xor
paddsw
addr16
cmp
pushf
xor
mov
cs
call
add
mov
lock
dec
sbb
and
sbb
jno
inc
daa
push
repz
fwait
jge
idivl
mov
mov
out
and
or
loop
sub
sbb
insb
or
in
xor
daa
jb
pop
and
jns
mov
loop
test
nop
xchg
push
sub
subl
hlt
popf
into
leave
outsb
inc
lahf
lea
fs
out
repnz
or
lock
mov
psubq
repnz
pop
and
mov
repz
leave
adc
decl
add
les
or
mov
dec
pop
ret
bnd
mov
mov
jae
enter
and
cmp
push
arpl
adc
js
mov
jae
pop
push
pop
cmpb
jmp
mov
aas
xchg
cmp
js
lahf
daa
popf
cmp
scas
mov
ret
xor
inc
mov
mov
stos
movsb
jle
repnz
das
mov
orb
in
stos
dec
fstps
aam
in
out
or
xor
and
outsb
inc
jno
data16
bound
xchg
push
add
loope
or
stos
jo
push
cld
and
insl
mov
and
dec
mov
xor
jne
aaa
shll
loopne
xchg
xor
add
out
aaa
mov
pushf
bound
aaa
pop
fstpt
daa
mov
pop
cltd
div
push
out
jne
cmp
or
cli
jg
sub
pusha
ljmp
cmp
fsts
ret
aad
and
pop
jnp
lea
jge
mov
or
movsl
inc
and
das
outsb
das
fcompl
mov
daa
mov
leave
movb
imul
dec
lcall
sub
and
pop
add
fidivl
jg
pop
lahf
xor
pop
inc
test
adc
jl
xor
push
pop
adcb
mov
sbb
sub
test
mov
cmpsl
pop
sbb
cmp
push
mov
add
pop
jle
jno
and
out
and
push
nop
push
or
add
jmp
pop
popf
xlat
dec
xlat
cmp
push
dec
sub
cmp
xor
add
cmp
inc
pop
pop
pop
jmp
insb
mov
jnp
inc
push
insb
cmpsb
push
test
loope
xorb
mov
sbb
in
icebp
outsl
lock
outsb
jns
js
lods
xor
out
inc
xchg
jo
jbe
loopne
mov
xchg
mov
jl
inc
push
mov
cmpsl
inc
iret
int
sub
sub
adc
or
add
mov
pop
xor
dec
jb
ljmp
inc
and
lods
ret
fcmovb
adc
mov
and
lds
jl
xchg
gs
jne
inc
ljmp
fistpll
sub
xor
pop
cld
add
add
cs
cmp
mov
xchg
shll
adc
or
sbb
filds
sahf
push
int3
scas
jle
mov
mov
gs
jno
call
addr16
push
jle
mov
sysexit
pusha
test
shll
xchg
dec
lret
cmp
jo
sub
inc
scas
xlat
push
data16
dec
add
adc
scas
aaa
and
lret
cmp
dec
into
mov
push
mov
cmp
outsl
imul
mov
sbb
fisttps
inc
movsl
and
xor
pop
sbb
test
xchg
cmp
cmp
fidivrl
jge
ret
mov
xchg
idivl
lock
nop
push
sbb
pop
in
ret
cltd
pop
lock
incb
fcmovnb
imul
sub
pop
bound
xchg
arpl
mov
fs
fs
jmp
add
js
xor
stos
imul
dec
dec
aaa
inc
dec
xchg
mov
cmpps
lds
xchg
enter
mov
seta
or
lods
adc
sub
jmp
jle
fidivrs
cmp
es
fstp
nop
loopne
ret
push
adc
inc
and
inc
loopne
xchg
iret
ljmp
std
sar
mov
lret
mov
mov
xchg
fnstcw
into
jg
pusha
clc
mov
fsubs
aad
ret
sbb
jae
pop
dec
cmpsb
add
std
add
in
sbb
push
xchg
es
and
add
in
sbb
rol
cmp
push
sbb
dec
pusha
scas
fiaddl
add
pop
test
int
stos
cld
stc
xchg
pop
loope
pop
jns
leave
popf
cli
xor
adc
shl
neg
mov
or
ret
or
mov
cli
lret
adc
es
mov
xchg
aad
push
pop
push
sbb
insl
pop
and
sub
push
mov
inc
sbb
lret
cs
dec
sbb
jg
cmp
mov
jecxz
or
pop
std
xchg
andl
iret
pop
std
mov
scas
push
jns
jb
test
pusha
cs
lret
and
imul
dec
cmpsl
jns
nop
mov
outsb
mov
mov
push
lods
std
add
cmp
fimuls
ss
cmp
or
int
xor
and
je
xchg
mov
xor
cltd
ss
xchg
push
mov
cmpsl
sarl
imul
stos
outsb
leave
inc
pop
pop
mov
or
iret
mov
ret
or
adc
mov
cmp
adc
shll
ret
mov
cmp
cmp
mov
and
mov
jnp
faddl
and
std
jnp
cmp
das
fwait
divl
inc
dec
or
mov
and
push
jg
fisubs
mov
mov
loop
mov
cmpsb
mov
scas
stc
clc
mov
insl
aad
stc
test
xor
cmp
push
xchg
jmp
int3
out
dec
jp
cmp
jbe
mov
sahf
mov
ja
xor
pop
mov
cld
xor
mov
xchg
mov
sahf
arpl
lcall
or
xchg
sub
jmp
xchg
adc
aas
pop
les
lret
inc
sbb
sub
xor
dec
sub
push
sub
xor
inc
mov
lcall
jmp
cltd
push
cmpb
pop
rolb
push
lret
sbb
adc
lahf
stos
push
fs
push
sti
movsb
sbb
jno
test
ret
hlt
lods
mov
cli
lcall
mov
push
or
mov
sti
add
pop
std
outsl
xor
faddl
stc
lock
shlb
mov
mov
jo
idivb
inc
testb
jecxz
mov
fsubrp
jl
aam
and
fcoml
imul
lcall
push
std
icebp
cmp
adc
shrb
add
sub
mov
sub
push
cmp
jmp
loope
add
or
xor
jns
rclb
in
mov
xor
cmp
in
fsubrp
push
mov
fisubrl
iret
repnz
cltd
or
mov
fcompl
pusha
imul
cmp
in
inc
jno
iret
dec
sbb
sub
fldl
adc
in
or
loope
sahf
test
mov
call
fbld
jo
fsubrp
mov
jle
push
aam
sub
and
and
xor
icebp
push
popf
dec
aaa
scas
adc
stos
sbb
add
icebp
lcall
fwait
cmc
clc
pop
js
adc
or
loope
pop
mov
icebp
mov
ljmp
xchg
int3
lods
mov
sub
add
mov
insb
cmp
arpl
adc
in
xchg
cmp
repz
incb
xor
arpl
fistl
xor
loopne
fiadds
sbb
into
pushf
pop
test
mov
sbb
dec
in
mov
or
cmp
or
ss
inc
sti
icebp
inc
out
jge
aas
dec
pop
xor
fidivrl
jl
ret
pop
push
inc
push
ficoms
push
jb
outsb
ret
nop
sub
fwait
inc
js
dec
cmp
fistpll
sbb
mov
sub
cmp
pop
mov
loopne
cmpsw
mov
lods
ficoms
add
int3
pop
mov
xor
mov
sarl
ficompl
mov
call
xorb
lea
xchg
push
insl
jno
mov
xchg
out
mov
out
adc
xor
adc
and
scas
daa
gs
test
xor
jnp
int
xchg
adc
push
leave
mov
fs
pop
loope
testb
aam
xor
mov
dec
js
icebp
mov
aam
loop
push
gs
push
sub
xor
daa
xchg
cld
aaa
mov
js
add
or
mov
addr16
mov
add
push
fcompl
pop
das
or
je
icebp
cmpsb
sbb
sub
adcb
movsb
jb
mov
into
xchg
daa
pop
mov
pushf
sarl
mov
into
lds
adc
imull
pop
in
sbb
cmp
es
cltd
jl
insl
xchg
add
mov
xlat
and
addb
test
pop
mov
aad
fidivrl
push
or
scas
push
or
adc
pop
jnp
push
push
xor
sahf
dec
es
scas
cmpsb
sbb
jno
sub
fidivrs
std
jnp
cmpsb
leave
mov
pop
cli
sub
push
imul
adc
cmovs
sarb
mov
bnd
inc
xor
add
fs
shlb
mov
mov
mov
lcall
pop
cwtl
dec
sbb
add
jns
cmp
jg
data16
imul
es
stos
and
push
mov
push
mov
push
scas
mov
stos
mov
rorb
cmp
stos
addr16
mov
dec
test
std
fisttpl
sbb
test
int
mov
mov
push
add
mov
cli
xorl
xor
out
jg
popf
jmp
insb
sub
push
push
inc
xchg
rorb
ljmp
inc
jbe
inc
add
in
pop
mov
iret
xlat
pusha
notl
lods
inc
fs
mov
xor
pop
pop
mov
pop
ficoms
sbb
inc
dec
pop
inc
es
cs
sub
lcall
pop
cld
insb
xor
xchg
out
flds
mov
out
in
ret
rorb
sbb
mov
mov
scas
aaa
cmp
jns
cs
jge
ds
mov
xor
push
adc
ja
daa
stos
fmuls
sub
inc
or
ret
xor
inc
loope
mov
mov
jbe
jb
les
pop
iret
push
dec
filds
dec
shlb
pusha
stc
xchg
xlat
xchg
adc
mov
mov
jne
sub
pushf
bound
cmp
pusha
xchg
movsl
repz
push
xchg
jmp
fiadds
lahf
adc
adc
test
pop
and
ds
and
and
sbb
xchg
icebp
outsb
pop
dec
mov
xor
lahf
lock
xlat
adc
pop
push
fildll
data16
sub
in
adcb
add
cltd
stos
arpl
clc
ss
lea
pusha
push
mov
sub
das
faddl
sub
int
arpl
sub
and
and
mov
pop
push
fistpl
lea
and
icebp
xchg
cmp
leave
mov
fnstsw
test
cmp
jmp
shrb
inc
ds
lret
mov
sub
inc
fwait
int3
or
pop
lahf
mov
mov
or
nop
mov
lcall
adc
lcall
xor
out
mov
aaa
xor
mov
int3
mov
inc
pop
or
push
sub
into
sub
mov
dec
mov
imul
pop
ja
pop
lods
shrb
clc
mov
mov
faddl
jle
mov
adc
pop
mov
inc
and
imul
or
jne
loope
scas
cmc
mov
mov
mov
inc
bound
fs
out
stos
aam
movsl
addl
dec
sub
sub
cmpsb
loop
add
jg
xchg
fiaddl
mov
xor
mov
sub
fs
xor
sahf
xor
testl
ret
push
cmpsb
sbb
test
push
or
xchg
mov
outsl
xor
jg
xchg
add
xchg
rol
jns
mov
mov
mov
sbb
lcall
psraw
dec
mov
popa
cltd
out
dec
cltd
enter
shll
jns
sarb
pop
pop
ja
or
jge
jle
push
sub
mov
sbb
mov
push
mov
sbb
cmc
outsl
dec
mov
es
jbe
hlt
lea
mov
in
or
pop
sub
into
pushf
loopne
cmpsl
push
push
push
inc
pop
test
sahf
xor
mov
rolb
and
mov
sub
gs
push
sbb
divl
cltd
mov
xchg
push
ss
cli
push
push
test
loopne
xor
aas
mov
jge
int
add
pop
divl
push
fs
add
dec
xchg
addb
xor
out
xchg
fsubr
inc
xor
and
movsl
cli
ljmp
mov
add
gs
lds
mov
sub
clc
int3
pop
adc
cmp
ret
adc
mov
push
fldcw
push
sub
sub
stc
jl
fsubs
inc
add
dec
push
mov
sbb
aad
jmp
mov
lret
pop
mov
inc
mov
out
xor
mov
mov
dec
mov
rol
jl
cmp
xchg
inc
sub
jl
add
lds
lret
dec
shrb
shlb
cs
imul
shll
dec
mov
cld
cmp
lods
or
inc
flds
lcall
cmp
dec
xor
int3
cmp
ljmp
popa
cld
and
inc
stc
or
jns
lods
clc
xchg
cmp
mov
push
fld1
clc
fistps
mov
data16
pop
pop
aaa
lret
mov
cmpsl
push
nop
lds
into
repnz
cld
xlat
outsb
push
add
adc
mov
adc
pop
jno
jp
bound
sbb
mov
lret
cs
jmp
cmpl
lods
inc
imul
push
sti
out
movsl
mov
out
adc
fwait
mov
call
ds
out
inc
add
lock
cld
sbb
repnz
loop
push
mov
xchg
pop
sub
inc
cmp
hlt
inc
xchg
out
clc
lcall
mov
or
gs
inc
scas
stos
sbb
cmp
mov
sub
push
loopne
andb
adc
adc
loop
mov
test
mov
cmpsb
test
test
mov
pushf
cltd
jae
in
pop
ret
insl
rclb
cwtl
insl
leave
add
mov
mov
pop
addr16
daa
ja
jo
arpl
fimull
cmp
mov
xlat
inc
push
stc
xrelease
rcrl
mov
cmp
std
loop
es
rcrl
push
movsb
cmp
push
sbbb
out
lret
dec
or
xlat
rorb
dec
push
ret
lea
callw
out
inc
nop
int3
jecxz
test
test
in
mull
xor
enter
sub
mov
testb
dec
push
jle
imul
les
and
add
push
xchg
aas
push
push
xchg
inc
jnp
sbb
or
inc
xlat
push
xchg
hlt
insb
icebp
pushf
hlt
jp
clc
mov
aaa
enter
pop
fwait
stc
jbe
stc
mov
cmpsb
rcrb
mov
sub
push
insl
xchg
ja
pusha
inc
mov
ja
es
sti
lods
je
into
mov
popa
jo
sbb
mov
inc
or
lcall
xchg
add
andb
xor
test
sub
cmp
cld
fwait
mov
pop
ds
adcb
aad
ret
iret
sbb
movb
pop
sub
shlb
aas
mov
pop
sub
fwait
add
xor
out
lcall
insl
xchg
daa
jge
les
sub
xor
mov
in
push
les
inc
in
in
sub
negb
into
jle
imul
mov
clc
ret
sbb
repnz
insb
cmp
es
enter
pop
push
stos
sarl
test
rclb
imul
out
xchg
pop
mov
test
stos
repnz
mov
dec
push
ret
lods
fadds
inc
insl
in
iret
push
and
mov
push
mov
xor
mov
movl
mov
sbb
popa
jp
mov
adc
xor
cmp
adcb
ljmp
and
nop
push
mov
int
lds
mov
mov
notb
shll
mov
push
lods
mov
scas
xchg
repnz
test
ret
ret
lahf
jecxz
scas
or
and
jb
sbb
pop
add
add
dec
mov
jb
lahf
stc
bound
popa
in
push
cmp
mov
xor
bound
add
out
insb
jge
mov
pushf
outsb
mov
sub
andb
lcall
mov
inc
inc
or
aad
dec
jle
insl
ds
inc
insl
ror
das
cmp
scas
jp
imul
cmp
mov
mov
sbb
fnstsw
mov
fimull
mov
mov
dec
scas
and
mov
mov
cmc
hlt
pop
loope
ja
std
sti
fiadds
push
call
xchg
cmp
addb
xor
add
add
scas
xor
cmp
mov
xor
pop
inc
test
inc
mov
aas
push
mov
subl
xchg
sub
out
jbe
into
cmp
repnz
hlt
xchg
push
jns
jl
mov
int
call
pushf
idivl
in
imul
cmp
mov
dec
repz
lahf
sbbb
jg
jno
ss
dec
mov
movsl
lock
mov
mov
adc
test
bound
insl
pop
scas
xor
sub
sub
xor
inc
loop
dec
pop
enter
pushf
pop
pop
xchg
int
inc
ficomps
pop
xor
cltd
xchg
cmc
test
inc
xor
add
jg
push
add
lahf
lret
hlt
cmp
in
jmp
xor
mov
cmp
and
je
cltd
xchg
pcmpgtw
xlat
adcb
insl
xchg
xor
repz
rcrl
leavew
ror
push
mov
ret
aad
enter
cmp
cmp
xor
push
enter
lock
test
test
int
cs
imul
pop
jmp
in
sub
mov
adc
mov
mov
out
mov
popf
andl
mov
xchg
mov
push
push
pop
lods
sub
loopne
test
outsl
out
cmp
repnz
xchg
add
shl
test
dec
hlt
adc
mov
cmp
enter
andl
ja
repz
mov
mov
pop
xchg
adc
jmp
insl
iret
in
scas
fmuls
dec
fcoms
aad
out
test
lcall
sub
fimull
fdivs
icebp
mov
push
adc
add
sbb
xor
aad
sub
or
jg
rorb
out
notb
pop
jg
mov
leave
mov
fwait
scas
inc
pop
scas
or
imul
dec
jo
ficomps
pslld
ret
jecxz
test
les
sti
push
push
xor
lahf
sub
ds
mov
jae
mov
nop
ja
push
ret
mov
jmp
adc
int
in
pop
movsl
cld
cmp
inc
dec
push
or
in
arpl
jecxz
dec
pop
hlt
fadd
jo
xor
movsl
inc
popaw
addb
mov
xchg
shlb
sub
icebp
push
adc
andl
das
jno
xor
push
aad
lret
and
sti
cmp
pushf
ret
test
xor
testb
sub
jg
mov
pop
fsubr
movsl
xchg
aas
scas
cs
inc
arpl
sub
orb
jg
pop
vaddpd
insl
pop
dec
out
dec
fdivrl
enter
shrb
xor
mov
fidivrs
mov
divb
mov
mov
out
shll
shrb
push
adc
scas
add
inc
or
out
cmp
outsb
loope
inc
push
loop
stos
jp
push
pushf
cmp
fnclex
sbb
sub
sahf
sti
mov
pushf
insl
sbb
cmp
sti
aam
int3
cvtpi2ps
mov
jmp
sbb
cmpsl
xchg
mov
pop
fisubl
mov
scas
add
rcl
xor
inc
mov
pop
pop
jbe
test
xchg
xchg
adc
in
sub
dec
leave
inc
inc
pop
sarb
sub
push
and
push
dec
jmp
fwait
cmpb
adc
aaa
into
dec
xlat
pop
add
add
in
shll
mov
jo
push
shll
pop
mov
jb
ja
lcall
scas
mov
mov
fldenv
jns
ss
push
pop
dec
aaa
mov
jno
movsb
ds
inc
scas
mov
loopne
push
aaa
dec
jp
push
push
and
aam
pop
or
push
sub
fsubl
iret
xchg
ficoms
xor
mov
stos
arpl
jb
or
lock
cmpsb
nop
dec
mov
cmp
gs
xor
andb
subb
test
inc
cwtl
jbe
mov
pop
mov
cmp
outsb
push
jle
and
std
insl
test
and
push
mov
and
pushf
pop
or
addr16
out
pop
or
push
sarl
cwtl
pop
cld
aam
andl
sahf
and
adc
cmp
xchg
addr16
fiaddl
into
into
out
push
pop
mov
push
dec
pushf
and
jp
or
sbb
inc
sbb
test
sbb
inc
mov
push
movsb
std
jl
fbld
lret
push
stos
mov
or
push
ja
sbb
std
or
mov
lods
inc
incb
push
push
scas
mov
xor
cmp
shlb
int3
xchg
jb
push
cmc
imul
inc
movsl
xlat
jmp
jg
call
loopne
inc
std
add
adc
loope
lods
push
mov
add
outsb
pusha
pop
mov
sti
insl
les
scas
mov
xlat
hlt
ret
gs
push
adc
paddd
leave
pop
stos
inc
cmp
out
lock
mov
nop
adc
out
mov
fildll
cmp
mov
xchg
movsl
push
pop
inc
inc
les
inc
jb
sbb
add
insl
pop
mov
mov
orb
loope
add
sub
xchg
mov
cli
pop
fildl
pusha
rorb
out
enter
sti
or
js
cwtl
pop
loop
mov
mov
lahf
lahf
or
dec
aad
leave
sub
and
cmpsl
cmpsb
cmpsb
test
jmp
sbb
sbb
inc
fcomp
mov
xor
mov
hlt
add
loope
xchg
add
fisubs
fistps
add
fnstsw
jle
dec
loop
add
xor
xor
jle
mov
aad
xlat
push
test
lret
lds
aas
and
into
jns
lret
outsb
pop
and
in
mov
fwait
loope
and
inc
out
sbb
repz
mov
std
xchg
cmpb
mov
enter
xchg
cwtl
into
mov
add
lahf
scas
xlat
inc
repz
mov
mov
les
mov
cmpsl
ret
xchg
jns
and
jmp
jg
scas
les
in
lods
flds
jns
test
pop
andl
ret
push
in
popa
add
cmp
pop
out
mov
pop
mov
cmp
mov
ja
and
jno
push
pop
dec
scas
lret
xchg
add
or
call
inc
dec
sbb
xchg
adc
sub
rep
and
fistps
ljmp
lcall
push
dec
sbb
pop
ret
mov
jmp
sahf
xchg
cli
std
mov
dec
repnz
cmpsb
les
clc
xchg
mov
mov
cmp
jl
adc
jne
mov
push
sub
push
cld
adc
dec
lret
test
not
adc
and
pop
xchg
test
sti
push
pop
and
push
jno
xchg
fcompl
ret
sub
pusha
lds
nop
mov
sub
sbb
in
mov
es
mov
ljmp
daa
adc
fistl
rcrb
and
and
mov
xlat
pop
in
in
jle
sbb
arpl
mov
movsl
into
iret
pop
ds
shrl
in
data16
mov
cmpsb
lret
sbb
lret
aad
inc
cmp
xchg
xchg
jne
insl
sbb
ret
jnp
or
adc
xor
push
fldcw
xchg
xlat
and
pop
mov
dec
int
test
xchg
push
or
mov
sbb
aam
dec
adc
xor
xchg
mov
inc
inc
lret
or
fwait
call
mov
jb
stos
cwtl
dec
adc
aaa
mov
mov
mov
adc
pusha
hlt
mov
jo
pop
int3
fldcw
sbb
xor
int3
jns
mov
add
jg
pop
aam
mov
test
aas
adc
add
jmp
pop
xor
enter
xor
aas
stc
ficoms
jne
push
int
add
ret
shll
sbb
das
sub
dec
mov
push
push
int3
fbld
fstl
inc
xchg
or
jne
or
xlat
xchg
cmpsb
nop
fwait
outsl
lcall
ds
stos
jp
stc
jge
clc
jae
mov
pusha
pusha
mov
cmpsl
cs
xchg
cmpsl
in
loopne
das
rorb
sub
cmpsb
sti
xchg
sub
jle
aam
je
das
and
loope
cs
sbb
adcl
test
lret
and
pop
push
inc
mov
adc
mov
mov
stos
mov
sbb
mov
sti
pop
jg
mov
xchg
xor
push
vmread
add
dec
xchg
or
and
js
jb,pn
jb
adc
inc
cmp
or
into
sub
push
lcall
and
xchg
jg
movb
inc
cmpsb
push
stos
inc
adc
rorb
jl
mov
cmp
outsb
lret
pop
dec
and
arpl
push
jle
adc
mov
imul
ret
adc
popf
xchg
lods
in
test
outsb
xchg
xchg
push
xchg
sub
mov
cmc
cmp
sbb
or
push
xchg
inc
mov
xor
add
fsub
in
adc
jecxz
jge
jno
lret
jnp
xor
inc
sub
mov
and
mov
mov
jmp
jecxz
jmp
add
sti
ja
shlb
aas
dec
arpl
pop
popa
pop
insb
sbb
push
push
mov
xchg
into
or
or
pop
sub
mov
imul
shrl
test
out
mov
mov
jo
lret
mov
adc
jmp
jns
scas
mov
out
mov
nop
add
mov
jns
imul
clc
jne
mov
insb
inc
fcoml
fwait
sbb
popl
repz
mov
cbtw
xorps
mov
mov
les
jmp
sbb
in
lret
pop
pop
mov
jb
int3
push
pop
cwtl
inc
and
jg
and
clc
mov
push
mov
add
dec
cmp
adcl
mov
lds
mov
dec
sbb
cmp
mov
rolb
push
sub
fsub
imull
das
scas
int3
jno
xlat
ljmp
shll
mov
or
and
mov
inc
insl
ret
inc
cmp
pop
jecxz
pop
aad
daa
lret
xchg
and
arpl
pop
mov
and
push
mov
push
jae
push
adc
mov
daa
sti
lods
pop
ret
mov
sub
dec
fdivl
pop
out
pop
pop
add
push
lret
xchg
out
pop
dec
mov
insb
lret
sub
pop
xor
gs
les
jbe
pop
and
cmp
lock
pop
loopne
and
or
cmp
mov
cwtl
jne
popf
cmovl
nop
vpunpckhbw
bound
in
out
fnstcw
fisttpl
and
inc
testb
scas
and
mov
pop
xor
inc
push
arpl
ret
frstor
or
lea
inc
lcall
or
cmp
clc
mov
stc
inc
dec
out
mov
xchg
fnstsw
ss
ret
scas
push
outsb
jge
or
cmp
movsb
mov
into
jo
js
mov
out
fcmovnbe
test
mov
pushf
jns
stos
es
mov
xor
int
xchg
imul
sbb
push
sbb
xor
push
push
mov
pop
inc
loop
inc
add
mov
int3
int
cmp
jb
inc
add
lahf
sub
scas
mov
cmp
xchg
or
leave
sbb
ljmp
int
shl
cmp
rcrb
aad
sbb
popa
movsl
mov
lret
loopne
push
lock
loopne
out
aaa
mov
xor
in
mov
test
ss
fimuls
pop
dec
call
leave
js
or
sbb
test
test
xchg
psubq
push
mov
push
add
xchg
mov
lcall
outsb
mov
popa
mov
jae
es
cmp
jo
nop
xchg
lahf
js
stos
mov
lahf
inc
lea
push
in
add
cli
xor
xor
xor
shrl
cld
pop
ss
sbb
sahf
rcll
leave
jge
cmpsl
lods
mov
and
jge
mov
cmp
into
sub
xchg
pusha
loop
xor
movsb
or
jo
aas
inc
xor
in
ds
dec
bound
ret
pop
mov
rclb
setno
adc
add
xor
jmp
xor
xchg
out
dec
out
add
add
mov
or
in
mov
icebp
jmp
inc
scas
mov
outsl
loopne
cmp
sub
push
mov
and
pop
jne
leave
stos
in
adc
xchg
hlt
mov
adc
xchg
cmp
or
arpl
fstpl
ret
mov
sbb
jbe
fnstcw
mov
ljmp
and
jns
ficoml
jl
jmp
into
mov
adc
or
sub
in
or
mov
out
ret
dec
mov
insb
sbb
pop
adc
cmp
rcrb
iret
fbld
lods
jle
inc
xor
lret
add
cld
shll
addl
push
mov
sbb
sahf
push
or
cmp
out
aaa
or
cmp
sub
xor
lcall
push
leave
lea
test
ret
test
pop
inc
flds
jae
test
sbb
push
cmovnp
pop
or
ss
mov
outsl
xlat
push
popa
leave
sbb
push
add
adc
mov
inc
ficomps
or
imul
out
cmpsb
ja
cmp
cmp
pop
lods
cmp
jp
jne
enter
es
ret
mov
sub
lcall
jmp
insl
mov
xor
push
xchg
je
sub
shl
adc
ret
cmp
ljmp
and
push
add
insb
in
cmp
pop
push
into
inc
sarl
sbb
jge
subl
fstpl
scas
push
loop
jg
insb
or
fildl
aaa
cmp
sub
lods
lret
adcl
aas
jl
out
dec
xchg
negl
aam
adcb
fucom
mov
inc
lea
sub
mov
fiadds
mov
mov
pop
test
xor
ss
push
scas
xchg
sub
data16
daa
cmp
lea
shrb
inc
inc
xchg
gs
mov
xor
enter
and
jge
nop
pop
adc
je
add
mov
lret
sbb
sar
sbb
sub
pop
les
loop
dec
les
inc
xor
adc
int3
test
imul
sbb
cwtl
push
fwait
movb
lcall
xor
rorb
faddl
sbb
mov
gs
dec
mov
xchg
les
lods
inc
pop
outsb
inc
pop
clc
mov
in
pop
xor
enter
fisubrs
add
sahf
jl
insb
xchg
aas
in
dec
ret
je
jns
mov
fimull
sbb
sbb
cld
rolb
bound
lods
mov
push
stos
in
mov
sbb
push
stc
loopne
inc
pusha
pop
aas
pop
pop
mov
shlb
jecxz
pusha
pop
jbe
xor
pop
lret
inc
sub
stos
shr
push
mov
adc
rcll
iret
sub
hlt
roll
lahf
fsubs
inc
out
ja
dec
inc
push
dec
sahf
paddq
test
outsl
inc
jg
lea
jmp
push
push
cmp
mov
dec
scas
xchg
jns
iret
outsb
xlat
push
pop
pop
and
mov
js
in
insb
imul
in
xorb
mov
xchg
push
push
dec
mov
lret
add
jmp
rolb
rol
inc
lock
adc
pusha
sbb
mov
mov
movsl
pop
imul
ljmp
fnstcw
pop
data16
mov
movups
in
xchg
push
lret
jns
mov
and
aad
jp
in
lods
iret
or
jae
mov
or
lret
mov
add
mov
and
ds
xchg
sub
imul
dec
jns
xor
mov
mov
add
jo
stc
sbb
data16
addr16
push
dec
cmp
stc
hlt
cmp
js
add
push
divb
mov
sub
xor
pop
pop
ss
mov
movsb
mov
push
test
sbb
xor
adc
sbbl
jno
repz
push
jp
add
std
inc
inc
xchg
movsb
mov
mov
or
jecxz
fwait
jle
rcrb
pusha
mov
subl
sub
cld
mov
call
mov
lcall
in
pusha
test
leave
fldl
inc
sbb
xchg
fwait
test
sub
jo
jo
in
jge
ds
int
test
cmp
push
gs
data16
xor
fsubrl
jne
mov
lds
or
cmpsl
xchg
dec
mov
pop
das
scas
cwtl
jmp
push
enter
mov
jb
repz
fistps
xor
test
loope
orb
jecxz
push
dec
cmp
jo
pushf
adc
push
cld
jge
out
lcall
stos
aas
std
pop
jge
mov
movsl
add
out
add
mov
adc
sub
inc
cmp
movsb
sbb
or
inc
cli
or
or
lret
cltd
push
fs
pop
rorb
andl
pop
pop
xchg
js
and
jp
sbb
out
in
testl
into
mov
fs
adc
aam
mov
scas
mov
testb
xchg
stc
pop
idivb
incb
xchg
test
jnp
flds
roll
insl
cmp
mov
fsubrs
mov
mov
lods
fiaddl
xor
sbb
in
xor
popl
inc
fnstenv
jmp
or
cmp
xchg
imul
bound
xchg
cmp
shlb
ljmp
jle
cs
filds
outsl
jbe
sub
ja
clc
mov
mov
and
test
push
je
mov
add
adc
fnsave
mov
xchg
sub
and
jecxz
sub
stos
mov
push
cmc
loop
aam
out
clc
mov
push
sbb
repnz
sti
pop
pop
rolb
jge
or
sbb
enter
imul
test
and
xchg
sbb
inc
add
lods
and
sub
and
mov
dec
jb
aad
aas
sub
outsl
in
scas
jo
loope
jp
mov
or
insb
pop
dec
cmc
cmp
int3
daa
addb
mov
dec
cmpsl
pushf
cmpsb
shlb
lret
mov
movsb
mov
push
pop
and
jecxz
jb
jbe
movsb
fdivs
mov
adc
push
out
in
adc
xor
scas
xor
nop
sub
lds
pop
sub
pop
pop
test
cwtl
sbbb
bound
int3
xchg
jno
or
inc
mov
clc
and
sbb
sbb
outsl
push
aad
jno
sahf
in
stc
dec
rcrb
lret
mov
mov
les
mov
pop
imul
push
int3
call
add
imul
sbb
movsb
push
and
aaa
cmp
in
mov
es
jmp
dec
shlb
setl
dec
mov
ret
sbb
pop
pop
pop
outsl
mov
adc
test
xlat
pop
push
cwtl
outsb
pushf
mov
pusha
mov
popf
cmpsl
push
push
add
lock
xor
lds
mov
or
mov
popf
dec
cmp
dec
lods
negb
es
mov
xor
imul
sbbb
notb
inc
lea
inc
lock
leave
ja
cltd
in
or
add
pop
sbb
cmpl
mov
imul
or
and
sti
aad
mov
xor
cmpsl
pop
pop
in
fdivl
pop
pop
sub
xchg
stos
hlt
xor
lea
push
ljmp
test
mov
dec
pop
gs
ljmp
mov
adc
cmp
lcall
pop
adc
inc
or
jp
test
ja
mov
mov
loope
add
xor
mov
in
adc
aaa
rcrl
pusha
iret
add
daa
je
pop
cwtl
ss
cmp
adc
mov
test
lret
rcl
push
in
in
or
outsl
icebp
jno
lods
or
bswap
stos
cltd
jl
rorb
xor
cwtl
icebp
test
lods
mov
in
aaa
test
xchg
imul
mov
inc
xor
mov
js
sub
dec
push
jecxz
clc
add
imull
sub
cmp
hlt
inc
mov
adc
push
cmp
popf
neg
repz
or
incb
pop
ja
add
aad
mov
lods
xchg
add
add
jbe
into
inc
shl
mov
movswl
jge
daa
sub
mov
push
outsl
xor
or
mov
jecxz
sbb
sbb
fldcw
mov
mov
scas
shlb
mull
mov
inc
lahf
push
cli
mov
aad
xlat
fs
mov
das
xchg
adc
fistl
shll
cmp
xor
xchg
mov
dec
repnz
mov
mov
jl
shl
in
jbe
push
push
mov
clc
add
data16
out
incl
cmp
lods
hlt
fdivs
adc
pop
sbb
mov
add
imul
frstor
daa
sti
dec
inc
add
adc
jle
fcmove
sub
cld
outsl
frstor
mov
xchg
ret
call
or
ljmp
int
mov
and
inc
mov
fucomp
stos
hlt
mov
add
dec
push
push
popf
dec
mov
xchg
push
loop
loop
mov
push
jo
inc
test
movsl
nop
mov
stc
mov
sub
fistpll
add
imul
test
fists
jecxz
lret
cmp
test
mov
inc
cmp
lret
fmuls
or
and
and
lret
xchg
push
inc
pusha
sarb
stc
mov
sahf
outsb
and
es
or
xor
dec
lret
ret
xchg
mov
sub
pop
test
mov
pop
ret
jl
pushw
fisubs
pop
inc
xor
push
test
xor
inc
fisubs
test
sub
arpl
insb
cmc
je
loop
pop
mov
movsb
lahf
mov
jns
mov
insl
xlat
sahf
mov
rcll
daa
mov
mov
cmp
testb
cmp
push
jbe
mov
mov
ror
popa
inc
sub
ss
outsl
add
loope
jg
test
jge
jge
mov
sbbb
push
out
xchg
sub
jl
mov
and
push
fisttps
daa
push
and
inc
mov
sti
paddw
sbb
inc
jno
inc
push
push
pop
lods
mov
imul
mov
les
jl
push
pop
xlat
cmpsb
sarl
add
fisubrl
lds
int3
and
or
push
pop
scas
lods
rcrl
fwait
ja
push
cmp
out
pop
enter
test
subl
push
mov
out
insb
mov
sbb
sahf
ds
xor
gs
call
or
jmp
js
jmp
fistpl
push
sahf
sub
and
fisubrl
push
std
mov
jp
adc
sbb
pop
insl
scas
push
imul
ret
xor
enter
inc
pusha
stc
loope
int3
dec
xchg
xchg
push
jmp
sti
ljmp
and
in
mov
fsubrs
cmp
adc
cld
adc
mov
rcrb
test
rcr
sbb
in
icebp
stos
fucom
bound
push
dec
push
push
xor
cmp
mov
rcl
iret
xchg
adc
cmp
fdivl
mov
pusha
addr16
xor
xor
sar
out
inc
push
pop
sbb
inc
movsl
pop
jo
mov
sbb
adc
xor
jecxz
popa
shlb
cwtl
test
bound
mov
sbb
pop
mov
pop
jmp
inc
jne
stos
pop
lods
fwait
adc
es
mov
orl
jle
out
xor
movsb
dec
push
and
dec
push
push
mov
in
icebp
test
movsb
inc
jg
sub
cmpsl
jg
cmc
lods
cmp
test
outsb
pop
add
jns
add
loope
xor
ss
into
scas
in
xchg
jmp
mov
das
sti
divl
dec
jno
bound
jnp
lds
push
add
cmp
mull
pop
mov
outsb
xchg
adc
les
adc
lea
mov
xchg
leave
mov
ljmp
sub
push
pop
sbb
mov
aam
pushf
stos
call
push
mov
mov
mov
lock
xchg
inc
jno
or
pop
addr16
push
sbb
dec
and
push
or
adc
or
sbb
cmp
test
lahf
mov
jmp
lea
mov
add
fs
push
out
std
xchg
push
mov
adc
mov
pusha
fdivrs
icebp
jbe
int3
pop
jl
or
or
into
xchg
test
xor
adcb
cmpsb
add
mov
or
mov
mov
daa
dec
dec
sub
insb
jl
jb
jecxz,pt
clc
inc
inc
jmp
out
sbb
cmp
mov
iret
shll
int3
jae
fmuls
inc
mov
inc
jle
lods
fsubs
mov
fs
push
push
lcall
cmp
ret
cmpsl
pop
and
add
dec
out
push
fdivr
data16
cltd
cmpb
jno
jne
pop
dec
or
scas
and
inc
pop
mov
mov
mov
inc
int3
ret
push
cmp
add
xor
sbbb
inc
xlat
sbb
xor
xchg
repnz
jp
adc
push
lea
in
xchg
fyl2x
pop
or
xchg
lahf
add
inc
gs
movb
xchg
out
xchg
inc
lcall
xor
push
add
inc
scas
pop
cmpsb
call
add
loop
xchg
stos
xchg
mov
jmp
cs
fimuls
jb
movaps
into
sub
add
mov
jg
rcll
arpl
mov
sbb
push
and
fcompl
cmp
xchg
sbb
pop
add
mov
xor
dec
fcmove
int3
mov
insb
and
roll
push
dec
mov
jle
dec
outsl
dec
dec
or
test
cld
fmuls
fcmovnu
jmp
test
pop
lcall
xor
push
sbb
stos
push
push
aaa
ret
xor
jge
jecxz
arpl
outsb
std
movl
cmpsb
mov
inc
movsl
ffreep
sbb
fdivl
pusha
dec
sahf
sub
push
pop
clc
inc
pop
mov
sub
ss
jmp
fcmovne
add
imul
sub
out
fwait
adc
loop
pop
mov
popf
inc
push
aad
xlat
ret
mov
stc
xlat
mov
icebp
adc
fdivp
and
daa
aam
call
push
int
clc
in
mov
pushw
ret
inc
push
int3
nop
add
push
data16
xchg
cmp
sbb
mov
jg
cmpsb
sub
aaa
pop
sti
sbb
fadds
ret
hlt
mov
xor
push
xchg
jnp
push
cwtl
mov
sub
test
repz
insl
pushf
movsl
jge
inc
shlb
mov
into
adc
mov
rclb
mov
stc
cwtl
dec
and
sub
rorb
jae
mov
cmpsl
outsb
lock
cmp
outsb
in
xlat
mov
pushf
ret
mov
mov
dec
bsr
test
xor
outsb
sbb
xor
arpl
ljmp
mov
dec
jbe
in
sbb
or
fnstcw
pushf
bound
inc
shlb
pushf
jle
les
aaa
je
xchg
hlt
outsl
in
pop
jne
in
and
and
xchg
in
xchg
inc
imul
std
repnz
inc
xor
out
xchg
lea
ror
xchg
enter
pop
imul
icebp
popf
xchg
pop
lahf
out
xor
or
addr16
lea
fcoms
push
out
int3
jecxz
jae
sbb
pop
data16
and
xchg
jmp
pop
icebp
sahf
out
pop
add
mov
test
jecxz
fadds
cmp
push
xchg
cmp
sbb
mov
mov
pop
mov
adc
mov
shlb
lret
xchg
cmpsl
xor
cmp
sub
sub
call
or
mov
mov
ja
cwtl
sbb
sbb
mov
and
lea
inc
push
cmpb
sbb
jp
fwait
cs
mov
jecxz
aad
dec
push
ss
ja
pushf
icebp
inc
inc
and
jno
fcompp
out
and
jg
jecxz
psrad
bound
mov
dec
jg
mov
hlt
xlat
shl
movl
aad
jge
mov
add
and
rclb
mov
out
cs
in
adc
mov
push
and
pop
in
and
cmc
cmp
xchg
cmpl
loopne
aas
push
mov
pop
add
sbbl
repnz
pop
inc
into
cwtl
mov
dec
lcall
jge
dec
pop
out
sbb
stos
xor
arpl
ret
sahf
mov
rorb
outsl
mov
sahf
mov
or
fidivrl
sahf
movsl
push
add
shll
sub
mov
add
add
in
stos
jo
cmp
dec
clc
out
cli
inc
shl
mov
inc
sbb
out
and
add
mov
mov
stc
fldcw
ds
jmp
sub
out
inc
sub
jl
push
jne
pop
jno
jne
xlat
xorb
mov
jmp
sbb
adc
fwait
xchg
enter
cltd
sahf
sahf
negl
std
shll
gs
fcmove
mov
dec
aas
or
inc
decl
or
xlat
imul
cmp
cmp
scas
add
outsl
adc
jb
xor
sub
push
mov
fstpl
mov
push
mov
stos
or
aam
jl
mov
out
sbb
xchg
ret
jns
jge
insb
mov
lret
lock
outsl
inc
jo
dec
clc
shr
adc
jnp
shrb
lahf
sub
jecxz
push
andl
mov
add
xchg
cmp
adc
repnz
xor
movsb
jae,pt
jl
mov
pop
jbe
push
rclb
rorl
or
xchg
loope
js
lcall
ret
testb
jle
add
orl
sbb
cmp
xorb
xor
dec
es
cmc
cmp
js
mov
orps
loopne
scas
aam
fdivl
sbb
mov
pop
sarb
pop
rorl
pop
add
sub
addr16
es
stos
aad
aad
mov
fwait
cmpsl
inc
shll
lock
lds
lahf
enter
add
or
rcrb
test
out
ret
in
push
fcoms
sub
mov
push
sub
pop
jecxz
sub
imul
cmpsb
cli
mov
push
hlt
pop
push
cmpsl
push
push
movsb
outsl
pop
movsl
cmc
cmc
push
pop
inc
mov
xchg
clc
lods
std
aad
addr16
arpl
enter
and
adc
or
jp
ljmp
cmpl
pop
push
imul
in
mov
pop
push
clc
stc
inc
fcoml
pusha
fs
dec
add
inc
in
dec
and
les
dec
mov
out
jbe
aam
ja
mov
xchg
insl
jl
cmp
sbbb
sub
ja
insb
scas
xchg
mov
ret
or
mov
and
xchg
sub
dec
inc
pop
push
jmp
shlb
fcmovne
rcr
daa
push
add
and
cmpsb
push
loop
jne
imul
adc
xchg
outsb
jp
mov
cmp
dec
into
lods
insl
push
aam
xor
adc
jns
mov
sbb
pop
mov
cltd
cwtl
movsl
adc
sub
lret
ret
in
fcompl
sbb
fyl2x
sub
lock
cmp
pushf
fcomp
cmc
cmp
cwtl
jo
and
pop
jmp
jecxz
decb
mov
pop
xor
add
jle
fldenv
inc
jno
mov
in
mov
in
mov
je
push
bound
jp
insb
jmp
cmpsb
push
lcall
fiaddl
in
call
mov
shrb
push
pop
call
std
xlat
test
es
sub
mov
inc
out
pushf
xor
inc
jge
into
aad
dec
movsb
fsubrl
ja
mov
sub
adc
mov
adc
and
xor
int3
cmp
sbb
xchg
ret
lods
movsb
outsb
and
stos
mov
fs
shr
inc
inc
push
jnp
or
add
adc
dec
cmp
or
pop
and
ljmp
sbb
orl
roll
xor
jp
mov
jnp
inc
pop
fldt
ds
sub
popf
mov
mov
and
repnz
dec
xlat
pop
inc
into
push
clc
add
sbb
mov
popf
cmp
or
mov
rorb
subb
adc
sbbl
lcall
dec
imul
fadd
pop
pop
rcl
or
jbe
shrb
std
mov
inc
sub
fld
xchg
rcrb
push
dec
rcrl
mov
hlt
xchg
fs
in
jbe
arpl
enter
xchg
dec
fistps
lods
stc
xchg
aad
xor
sub
aad
andl
adc
incb
pushf
fdivrs
mov
mov
outsl
fstl
repnz
jecxz
mov
out
add
test
lods
adc
adc
sub
adc
push
fstpl
add
fstpl
outsb
cmc
adc
pop
or
cmpsl
sbb
lods
or
add
repnz
aaa
sub
test
rclb
jmp
outsb
test
jl
addr16
or
pushf
mov
xor
lock
sbb
jge
pop
ds
inc
jmp
cmp
cmp
idiv
mov
push
out
or
hlt
xor
xchg
gs
pop
push
std
not
mov
adc
stos
shlb
loope
arpl
outsb
mov
push
jno
movb
and
sbb
call
mov
gs
cltd
cli
imul
adc
stos
xor
cmp
nop
bound
and
push
cltd
xlat
repnz
out
shll
cld
mov
shll
lods
adc
daa
js
jno
pop
push
ss
mov
fistpl
shll
insb
xlat
aam
cmp
add
pusha
pop
jae
enter
jle
pop
push
xchg
sti
loope
pusha
jmp
out
pop
adc
call
cmpsl
sbb
scas
jb
cmc
fists
lods
dec
popf
insl
loop
repz
jbe
pop
push
xchg
jl
fidivs
ficoml
addl
add
add
and
and
jns
lcall
push
out
xchg
sbb
lods
insb
cld
gs
int3
adc
xorl
test
pop
neg
jne
xor
leave
clc
xor
push
cwtl
popf
push
push
xchg
outsb
std
mov
jne
inc
fs
je
clc
mov
push
and
les
cmp
adc
test
sub
sbb
into
mov
fcompl
and
mov
jmp
popa
loopne
xor
mov
loope
insl
in
jne
or
mov
stc
scas
cmp
and
shr
jp
in
adc
ret
in
dec
int
pushf
dec
hlt
mov
out
scas
cmc
sbb
fistl
jle
jo
or
fcmovb
mov
jmp
push
subb
addr16
push
or
sbb
mov
in
out
ja
cwtl
mov
sbb
adc
repnz
pushf
call
and
imul
mov
mov
jge
nop
mov
lret
push
and
les
pop
pop
and
push
rcl
js
popf
lea
xchg
push
add
or
jae
adc
xchg
in
or
push
sbb
js
push
icebp
lods
faddl
mov
fists
push
lret
sub
sbb
int
mov
in
insb
dec
xchg
pushf
neg
xor
or
push
loop
scas
int
mov
mulb
mov
sub
push
mov
push
outsl
mov
xlat
std
push
out
lods
cli
mov
inc
jg
lret
loopne
jg
and
sub
fisttpll
lock
shll
out
repz
aad
mov
je
jo
int
cltd
mov
gs
mov
mov
data16
cwtl
xchg
cmp
mov
mov
movsb
lea
adc
mov
int3
inc
mov
inc
shll
lods
test
sub
add
lret
mov
je
mov
stc
dec
pop
lret
into
cs
in
in
xchg
fcomip
dec
aaa
loope
jbe
mov
leave
xor
lock
stos
push
mov
xor
sti
sbb
mov
sbb
fwait
lret
cmpsb
add
cs
jge
daa
mov
sub
push
adc
les
sahf
pop
repnz
fcoml
sahf
xor
xorl
out
adc
sbb
sahf
je
adc
aam
jge
jle
sbb
mov
adc
mov
pop
cmpsb
sub
int
cmpsl
mov
pop
mov
fstpt
insb
pop
out
sbb
aas
dec
arpl
ja
clc
lds
mov
int
fbstp
out
adc
iret
sbb
jnp
and
cs
sahf
rorb
pop
pop
sub
lahf
xlat
and
in
aaa
dec
cmp
inc
jmp
das
adcb
jle
nop
fcompl
sbb
cmp
out
jns
pop
out
sub
xchg
cwtl
fwait
or
scas
adc
dec
adc
imul
cmp
test
aaa
leave
sbb
inc
lret
popa
lock
in
aad
mov
sub
xorb
mov
js
xchg
andl
mov
pop
je
xchg
icebp
push
int3
mov
mov
and
aam
fidivl
mov
cmc
cmpsl
pushf
aad
jnp
movsb
cld
pop
das
sbb
jmp
test
rorl
loop
add
or
cltd
jl
test
xor
loopne
push
cs
cli
fcompl
jbe
and
mov
in
sub
adc
shlb
pop
icebp
call
sarb
inc
test
stc
jno
or
test
mov
test
filds
in
divb
ror
pop
insb
sbb
sbb
dec
fwait
loop
addr16
xor
pop
mov
cmp
and
ss
adc
fwait
mov
xchg
cmp
mov
cld
lods
dec
inc
out
test
xchg
mov
xor
icebp
cmpsl
aad
mov
pushf
decl
sahf
fwait
loope
loope
sub
and
inc
test
pop
sub
sarb
pushf
scas
ror
push
divb
mov
pop
clc
pop
sti
jmp
mov
lcall
sub
dec
or
add
cmpsb
mov
push
pop
push
sarb
mov
cmp
fisttps
pop
mov
js
rcrl
sti
cmp
jbe
push
pusha
rorb
dec
sahf
out
gs
sbb
loop
scas
fwait
add
adc
leave
outsl
pop
daa
imul
loopne
pop
or
push
mov
mov
adc
and
cmpb
xor
popa
cmp
cmp
jecxz
test
inc
inc
lret
jns
push
pop
cmp
gs
call
jl
movsl
data16
imul
pop
test
rcrb
mov
jne
sub
in
stc
add
lds
jge
and
cmpsl
out
push
in
push
xor
mov
mov
sahf
mov
push
mov
lds
adc
fldcw
fnstenv
out
outsb
in
and
test
fmull
repnz
dec
or
adc
xor
or
xchg
jl
xchg
popf
lahf
cmpsb
aas
mov
sahf
pop
mov
movsl
xor
fwait
sbbb
aam
cmp
add
push
out
sti
mov
pop
push
add
ret
xchg
dec
push
and
cmp
fs
xchg
cmp
pop
daa
mov
call
adc
push
jne
mov
mov
mov
inc
sbb
mov
out
dec
jnp
aaa
push
push
sarl
or
sub
enter
push
ljmp
inc
iret
fiaddl
aad
add
aas
rol
pop
iret
xchg
pusha
aam
aas
ret
fnstsw
jno
pop
xlat
lods
xchg
xchg
dec
jb
test
sbb
js
and
xlat
lret
decb
cmp
push
jge
xchg
jle
fstpl
jg
cltd
dec
in
fidivl
sarb
dec
jnp
and
movsl
std
jno
push
lds
daa
shll
je
adc
mov
aaa
lock
push
cmpb
in
jb
cmp
js
inc
cmp
aad
jb
inc
adc
sub
cmp
mov
adc
shl
fwait
mull
mov
mov
mov
sbb
sub
sbb
cmp
out
fidivrl
pop
sahf
inc
mov
add
adc
aad
sub
cmp
add
call
cmp
ljmp
gs
and
dec
movsb
fldt
call
pop
iret
in
jecxz
mov
lds
fisttpll
out
lods
push
mov
lock
mov
push
pop
pusha
mov
fstl
jae
adc
std
rorb
out
int
insb
push
idivl
sub
sbb
inc
mov
roll
pop
xchg
dec
or
es
enter
mov
jne
sub
dec
sbb
xchg
out
inc
push
imul
scas
inc
scas
fdivl
jmp
pusha
addb
pop
xor
push
pop
nop
fadds
dec
pop
sub
push
jnp
test
adc
adc
mov
dec
addb
dec
int3
test
call
out
cwtl
cmp
dec
cmp
and
inc
jle
adc
fldl2e
sbb
mov
xor
popf
jmp
stc
push
sub
loop
arpl
out
jge
adc
inc
and
cmpb
cmp
sub
mov
loop
roll
adc
jp
or
sub
jae
cmpsb
loopne
jno
stos
and
cmp
mov
or
sub
les
jge
or
lods
sbb
das
out
adc
stos
pop
jg
sarb
sub
nop
push
dec
inc
cmp
stc
and
mov
inc
push
fs
pop
repnz
sbb
int3
cs
push
hlt
sbb
pop
push
ljmp
outsb
test
aam
xchg
or
sbb
loopne
push
les
std
jne
dec
popa
lock
sub
mov
out
and
xchg
fs
dec
leave
dec
or
stos
mov
mov
fildll
mov
add
add
mov
push
adc
arpl
int
das
rolb
daa
jbe
fildl
leave
xchg
les
int
mov
gs
push
dec
adc
in
push
xchg
fdivr
and
rolb
and
push
mov
lock
insl
lock
push
mov
popf
add
imul
lea
stos
fldt
cmp
inc
or
xor
pop
call
dec
out
sbb
cld
insb
or
ja
sbb
pop
dec
sbb
pop
add
xchg
dec
fstpt
jge
sbbl
mov
insl
inc
je
jnp
xchg
mov
adcl
loope
lcall
in
jb
sbb
in
push
lods
fs
sbb
add
scas
xor
push
dec
sub
dec
loop
inc
pop
mov
and
and
jp
pop
rcrl
shll
cmp
movl
in
pop
sub
mov
sbb
jmp
dec
aaa
sbb
and
in
mov
fmull
fs
inc
push
push
sbb
aad
cmpsl
xor
mov
lock
loop
add
or
xchg
dec
pop
roll
mov
incl
mov
cmp
movsb
adc
call
cltd
test
dec
loopne
push
inc
mov
jnp
mov
fsub
sbb
popf
jns
adc
adc
and
cmpsl
sbb
mov
sbb
jne
jp
fs
jecxz
lahf
xor
fisttps
inc
dec
add
cmp
fdivl
inc
repnz
xor
clc
pop
dec
push
loope
adc
inc
sub
fsubrl
data16
cld
cmc
popa
mov
sbb
add
fldcw
in
adc
lods
movsb
push
stc
lret
cmp
sbb
aam
leave
cld
xchg
pusha
cmp
cmpsb
xor
out
sub
sub
pop
pusha
and
loope
xchg
push
inc
fs
loop
inc
cmc
push
pop
hlt
mov
pop
inc
mov
cmp
adc
push
scas
pop
jp
adc
jno
mov
icebp
ret
pop
cld
cmp
sbb
dec
int
test
and
or
and
mov
cmp
inc
add
mov
fildll
iret
jecxz
jp
pop
cli
sbb
mov
int
inc
mov
dec
jmp
cmpb
push
scas
or
and
in
and
fistl
out
mov
outsb
pop
or
jle
xor
pop
cs
mov
pop
jo
xor
out
dec
vmovupd
mov
mov
dec
aad
cmp
insl
lea
divb
imul
or
push
test
xor
jge
insb
or
aam
mov
lea
sbbl
push
stos
sub
dec
mov
add
jmp
cli
sbb
je
test
int3
inc
mov
dec
mov
inc
aas
sbb
je
xlat
cmpsb
mov
hlt
outsl
ja
pop
aad
push
inc
in
pop
push
icebp
add
fisttpll
jle
push
leave
xchg
push
pop
add
jbe
hlt
mov
adc
xor
decb
pop
push
pusha
pop
xchg
sbb
cmc
sbb
xlat
cli
push
cltd
stos
pop
sub
mov
sbb
pop
dec
mov
outsl
pop
xchg
pop
stc
xor
dec
mov
xor
pop
shrb
fidivrl
jge
stc
divl
pop
push
sub
cld
shll
add
push
sbb
adc
cmp
xchg
xlat
sbb
inc
cmp
pop
loopne
loope
imulb
iret
jmp
push
mov
mov
outsl
push
pop
push
mov
subl
lahf
das
mov
xlat
inc
pop
and
lods
cmp
jmp
ret
pop
adc
imul
xor
ljmp
call
sbb
mov
inc
popl
mov
repnz
sub
outsb
push
scas
push
aaa
pop
sub
ja
inc
cs
and
mov
adc
daa
lret
fistpl
mov
inc
out
fiadds
aaa
scas
in
xchg
mov
daa
lea
stos
or
push
iret
mov
imul
rcl
rclw
test
cmp
test
xchg
jno
mov
test
xor
mov
or
lea
mov
cwtl
adc
inc
dec
pusha
test
cmpsb
and
inc
addr16
loop
cmp
lcall
and
adc
push
pop
pop
add
lock
cltd
frstor
dec
xchg
int3
addr16
daa
in
cli
adcb
pop
mov
xor
xor
inc
sub
jecxz
jecxz
subb
repnz
mov
sbb
mov
clc
test
jne
jnp
xchg
mov
dec
movsl
adc
cmc
or
in
pop
movsl
mov
insb
inc
fs
mov
notl
shl
or
ror
push
faddl
out
push
dec
int
push
outsb
jge
mov
clc
mov
les
es
mov
add
rclb
or
mov
mov
fnstcw
push
mov
mov
and
sahf
js
jae
mov
push
orb
sbb
mov
pshufw
xor
or
xchg
ret
cmp
xor
mov
and
ror
mov
mov
dec
adc
mov
fisubl
cmc
std
nop
adc
es
sbb
add
mov
aad
push
je
jge
jns
add
mov
pop
add
addr16
insl
lods
mov
incb
in
mov
xor
sbb
shlb
push
loopne
popa
ja
outsl
fs
mov
pop
aaa
ss
pop
inc
xchg
dec
jnp
outsl
shl
mov
xchg
pop
cmp
ljmp
aas
jbe
inc
adc
imul
inc
jecxz
sbb
pushw
cmp
and
adc
pop
imul
adcl
sub
imul
sbb
sub
mov
and
inc
mov
jae
sub
sub
mov
push
dec
scas
lret
dec
shr
dec
cmc
sub
lods
add
ret
pop
cwtl
xor
addr16
js
mov
dec
ret
fmuls
fists
cld
push
pop
ds
sahf
int3
xor
sub
iret
loopne
push
pop
aaa
cltd
mov
adc
je
jle
pop
mov
cs
dec
xor
xchg
pop
sbb
loopne
push
dec
xchg
movq
inc
adc
pusha
nop
xor
icebp
hlt
push
pop
and
push
aaa
adc
outsl
jb
and
inc
mov
leave
mov
push
lret
in
jg
icebp
dec
mov
cmpl
push
ljmp
pushf
push
and
xchg
loope
and
in
mov
ss
inc
jmp
add
push
aad
fdivrs
adc
jge
ret
not
cmp
stos
xchg
push
cmp
shrb
cli
sub
out
enter
add
push
mov
cmc
shrb
sub
stc
cmp
int
movsl
rorl
lods
ret
icebp
shl
lea
mov
push
testl
push
nop
subb
sbb
jb
xor
filds
cmp
das
pop
add
pop
dec
jns
into
push
jge
cli
adc
pushf
xor
push
xchg
xchg
icebp
movsl
clc
mov
call
mov
xor
lock
inc
ret
sub
loope
jnp
leave
into
imul
aad
sub
cmc
and
stc
sub
sub
or
mov
in
cli
xlat
cmpsl
insl
jp
jno
aad
or
xchg
pop
mov
dec
subl
sub
repz
or
push
mov
lea
outsb
xchg
fs
xor
sub
int
idivl
and
ss
mov
jo
ret
fld
fbld
insl
and
adc
ds
aaa
inc
clc
mov
or
mov
xchg
popa
dec
pop
adc
mov
inc
dec
test
xor
ds
js
mov
out
cltd
shrb
lea
ss
orb
pop
and
shl
sbb
rolb
dec
cmpsl
les
dec
icebp
push
push
fisubs
jbe
and
sbb
out
inc
xchg
adc
jge
jb
fwait
push
pop
testb
mov
jb
out
mov
jp
or
into
sbb
pop
dec
push
sbb
sub
ficoms
mov
fisttpl
sar
xor
push
lods
test
push
movsl
adc
repz
xlat
aam
and
cltd
rorl
push
adc
fiaddl
popa
scas
pop
aam
popa
mov
push
pop
rclb
adc
loop
cli
jo
insl
das
xchg
mov
movsl
shll
adc
mov
arpl
int
cmp
out
add
cmpsb
insl
sbb
mov
test
pop
insb
aaa
jmp
unpcklps
inc
fbld
push
pop
in
jp
lds
je
mov
loop
ret
jmp
imul
mov
rcr
cltd
je
notl
pusha
std
jg
jge
sbb
cmp
out
shrb
imull
sub
js
je
dec
inc
mov
mov
mov
push
rclb
add
push
mov
pop
jae
andl
and
js
push
add
pop
int
lret
mov
stos
mov
mov
mov
gs
add
inc
lret
in
or
sub
int
cmp
test
jl
loop
pandn
pop
jge
cli
sub
dec
sub
lcall
jl
and
add
in
cmp
mov
call
test
xchg
ret
stos
jmp
jmp
sbb
push
imul
fmull
adc
imul
sbb
push
in
jl
out
pop
int
mov
out
cmp
fcomp
ds
scas
cmp
dec
nop
jle
xlat
and
fmull
cmp
jmp
jg
inc
aam
movsl
inc
stc
lret
add
fimull
push
cmp
mov
int
fld
js
jmp
jnp
pop
mov
push
pop
push
mov
addl
jmp
fs
dec
pop
call
dec
mov
dec
cmc
add
push
pop
fcomps
cltd
sub
push
bound
loop
cmpsl
sti
adc
les
jge
stos
je
imul
or
fs
push
mov
cmpb
mov
xchg
lahf
outsl
sti
mov
andl
push
shll
push
sub
int3
mov
push
pop
push
push
push
jnp
sbb
setl
mov
iret
jo
daa
sbb
dec
jae
adc
push
lahf
or
and
push
decl
iret
sub
arpl
jbe
icebp
inc
sub
clc
cli
icebp
jno
lret
push
jb
mov
aam
out
clc
fsubrl
push
inc
push
add
dec
xchg
cltd
mov
cmc
cmpsb
insl
and
lcall
fwait
imul
and
adc
test
pop
cmp
dec
lret
pop
push
cmpsl
pop
loop
cmp
cwtl
sbb
xchg
div
cltd
lds
sub
xor
int3
js
lea
shlb
adc
mov
mov
mov
dec
xor
das
mov
jl
mov
hlt
jl
mov
mov
fists
push
jmp
xchg
jae
jg
sbb
mov
fs
pop
rol
cld
cmc
sbb
pop
push
xlat
sbb
pop
adc
cld
cs
xor
and
in
push
cmpb
ljmp
push
push
dec
decb
xor
data16
sbb
lea
jno
and
fbstp
inc
and
mov
ds
inc
cmp
cmp
repnz
push
inc
jmp
jo
ss
or
and
jne
mov
call
flds
xor
loopne
dec
dec
outsl
mov
sub
pop
pusha
aaa
dec
mov
push
and
les
xor
pop
repnz
jmp
jb
mov
inc
mov
inc
or
out
jb
test
sub
fwait
xorb
xchg
pusha
fsubs
inc
dec
xor
cmp
clc
and
mov
xchg
sub
bound
adc
mov
xor
shr
adc
and
dec
xor
icebp
and
jmp
jbe
gs
and
lret
dec
adc
mov
dec
add
and
int3
dec
mov
mull
shrb
jae
lahf
sub
inc
lea
test
xchg
mov
xor
mov
add
add
sub
push
add
inc
fidivl
jl
or
jle
and
cmp
cmpsl
and
sbb
mov
into
jae
push
jge
scas
sub
fnstcw
pop
bound
sbb
xor
xchg
addb
inc
in
scas
push
fcoml
add
hlt
push
rcr
xchg
jno
sti
dec
bnd
cwtl
pop
sbb
cld
testl
cmpsl
cmp
push
repz
rcrl
int
imul
xchg
out
jbe
jmp
or
add
pop
sarl
sbb
loop
fisubrl
xchg
aad
mov
loopne
stos
mov
cmp
dec
mov
divl
mov
xchg
inc
aas
jmp
mov
lahf
jge
cltd
mov
fimuls
and
pop
mov
mov
xchg
lock
mov
inc
sbb
popa
push
mov
sbb
or
mov
push
cli
push
sub
movsl
mov
inc
sub
js
icebp
pop
cmp
lcall
scas
mov
insl
mov
sub
cmp
roll
adc
or
xchg
sub
mov
andl
ret
xor
fs
hlt
adc
repnz
stos
mov
leave
fwait
nop
fsts
xor
scas
adc
adc
xorb
jnp
lock
cmp
xchg
dec
lea
adc
lods
cmpsl
xlat
sub
mov
and
ljmp
ret
jle
in
mov
cmpsl
nop
mov
push
gs
pop
cmp
mov
imul
dec
fcmovu
in
ss
pop
mov
arpl
orb
push
jmp
cmc
inc
sti
mov
or
in
cmp
dec
loop
push
daa
int3
xchg
push
lods
or
nop
aas
inc
sub
pop
jae
outsb
inc
cmp
inc
push
sub
aaa
imul
call
call
jp
mov
bound
lods
cmc
pop
outsl
in
sbb
push
xchg
ljmp
scas
leave
sub
mov
mov
sub
add
imul
cmc
cmp
not
sub
xor
cmp
mov
xchg
or
xor
add
sbb
sub
sbb
outsl
int3
ja
jb
imul
xchg
mov
call
xor
rorb
dec
xor
mov
je
mov
pop
push
ljmp
mov
pop
xor
shll
push
cli
mov
pop
jo
shll
dec
jo
enter
ds
mov
adc
ret
sub
mov
inc
fildll
ds
out
aam
inc
vphsubsw
inc
mov
dec
jbe
sub
pop
ds
jb
push
out
imul
adc
ja
leave
push
popf
inc
add
insb
mov
push
addr16
pop
or
stc
pop
cmp
xor
xrelease
push
xor
xor
imul
divps
shll
mov
jmp
pop
outsb
repnz
push
leave
lods
lahf
xor
into
pop
icebp
push
jmp
popa
add
xor
call
adc
lret
popa
sbb
mov
jp
xlat
dec
adc
mov
cltd
mov
not
in
jne
xor
mov
cmp
mov
dec
cld
stc
push
sub
test
dec
out
fildll
imul
das
add
sub
xlat
sub
add
int3
jno
cmp
dec
jecxz
and
adc
ret
xchg
sub
orl
jne
in
jbe
pop
in
xor
cld
out
addr16
int3
sub
in
in
dec
imulb
push
sub
xchg
add
jae
pop
popa
adc
test
mov
cs
ror
outsb
test
or
test
adc
icebp
mov
or
mov
aad
lds
std
idivl
pop
sbb
jb
push
cli
repnz
jae
ret
jne
pushf
pop
xchg
fs
cs
rorb
sbb
dec
stc
cmp
cmp
sbb
inc
lock
ficomps
test
sub
or
loop
ljmp
push
decl
inc
xor
xor
sbb
sub
sub
bound
loopne
je
addr16
push
xchg
or
negl
loop
mov
in
out
sbb
ljmp
clc
repz
fs
cmp
push
mov
cmp
inc
mov
movsb
jge
movsb
push
loop
jb
inc
cmp
ss
outsb
adc
inc
cmp
pop
jnp
fisttpll
dec
ds
mov
test
cmp
loop
pop
pop
shrb
xlat
cmp
xchg
cmc
push
shrl
xchg
outsl
nop
fld
xchg
rclb
dec
mov
outsl
scas
icebp
shrb
add
jns
and
lret
mov
lret
daa
cmp
add
mov
dec
hlt
push
dec
mov
pop
xchg
mov
add
xchg
cmp
push
bound
aaa
in
in
jmp
dec
push
lea
imul
je
or
pop
inc
dec
repnz
xor
cmp
mov
push
adc
jmp
movsb
xor
sub
mov
cmp
xchg
cwtl
or
sbb
or
jb
dec
mov
popf
mov
insb
arpl
xacquire
pushf
into
ja
ss
ja
fmull
adc
sbb
add
cmpsb
fstps
cmp
sub
jp
inc
pop
mov
adc
pop
bound
mov
push
jmp
mov
andb
jle
mov
outsb
enter
add
imul
aam
cmp
outsb
and
sub
adcb
movsb
in
pop
orb
mov
add
sub
fcomi
lea
in
cmc
and
xchg
pop
xchg
ljmp
repnz
leave
ja
aaa
clc
pop
sbb
test
xchg
in
jae
inc
fstps
arpl
dec
jmp
mov
dec
sub
mov
push
inc
decl
lret
add
addr16
pop
inc
mov
out
mov
fucomp
pop
rcrb
sub
jecxz
int
add
out
js
dec
xchg
stos
mov
mov
flds
cmpsl
mov
mov
or
mov
xorl
jp
xchg
xor
shrl
push
mov
aad
mov
mov
xor
stos
rcll
das
sbbb
decl
mov
fdivs
pushw
call
mov
adc
mov
inc
sub
jns
imul
ret
jbe
movsb
sbb
ja
rorb
push
jbe
push
sub
in
ja,pt
mov
add
mov
aad
out
cld
push
cmovnp
sub
popa
mov
jb
call
ja
insb
sub
dec
sbb
add
out
int3
lret
into
add
jo
daa
mov
pop
inc
xchg
adc
add
aam
cmc
mov
imull
mov
push
pop
pop
int3
fsubp
lods
popf
mov
dec
ret
jp
xorb
mov
rorl
and
lcall
adc
in
xchg
jmp
cmpsl
jnp
inc
inc
stos
jbe
leave
iret
movsl
lret
xor
stos
add
insl
repnz
faddl
dec
and
and
mov
aam
mov
in
mov
push
or
sbb
jge
sti
push
nop
inc
mov
aas
and
mov
int3
aad
or
cltd
imul
lret
jbe
cltd
jns
inc
outsl
sti
cltd
loope
xchg
stc
and
ret
mov
mov
mov
jg
imul
push
mov
sahf
or
push
jl
sub
adc
dec
rcr
mov
mov
iret
sarb
aam
adc
push
jle
jle
fisubrs
cmc
adc
sti
fcompl
dec
pop
loopne
stc
roll
mov
cs
loop
hlt
inc
pop
cmp
push
lret
cwtl
mov
addb
adc
ljmp
and
jecxz
jg
cmp
push
bound
int
push
adcb
or
jo
mov
pop
out
outsl
inc
adc
sub
repz
jae
das
adc
sbb
push
outsl
outsb
jnp
mov
xchg
xor
inc
mov
iret
cmpsb
shrl
mov
arpl
and
push
adc
xchg
mov
mov
push
cmp
arpl
nop
xchg
ss
loopne
js
adc
insb
pop
int3
xor
sub
push
xor
mov
push
arpl
addr16
mov
xlat
data16
sbb
sarl
sbb
adc
lods
inc
pop
js
nop
or
int
in
mov
leave
inc
push
xor
stos
outsl
test
gs
cmp
inc
fsubrs
mov
xchg
js
in
ret
popf
dec
clc
pop
pop
jb
cld
mov
push
sub
xor
ret
push
enter
pop
xorl
mov
subb
das
cmp
loop
dec
iret
push
add
ja
or
ss
push
scas
ja
hlt
mov
jle
out
stos
shlb
nop
dec
leave
or
jnp
lock
dec
imul
out
idivl
pop
or
jbe
jns
jo
aaa
adc
andl
push
test
pop
cli
adc
sbb
mov
jb
test
and
lea
cmc
in
es
sub
cli
adc
fs
mov
outsb
cmc
xchg
pop
cmp
cmc
in
or
jne
test
mov
sub
xor
inc
lea
push
cmp
pushf
enter
pop
insb
es
and
dec
dec
and
dec
mov
pop
mov
add
push
cmp
test
pop
xor
data16
mov
into
repnz
sub
scas
mov
jne
adc
sar
jb
add
lret
inc
or
xor
sub
cmp
jo
cmp
clc
mov
cmp
call
mov
dec
cld
cmp
lahf
clc
push
xchg
xor
cmpb
cmp
lock
inc
outsl
bound
jge
mov
mov
add
mov
jl
add
js
stc
pushf
sbb
xchg
xlat
mov
leave
inc
xchg
sub
xchg
cwtl
insl
mov
out
add
jge
ret
or
outsl
in
mov
push
xchg
xchg
mov
ja
insl
rcrb
aas
fisubs
int
lds
fyl2x
pop
jge
jmp
cmp
aad
push
sub
pushl
out
xchg
in
dec
inc
pop
push
imul
pop
es
aas
cmc
inc
inc
icebp
lret
bound
ror
repnz
iret
push
and
lcall
lods
push
out
mov
jns
jmp
enter
std
push
sbb
sar
xor
mov
movsl
loop
inc
ficoml
jnp
or
xchg
rclb
stos
inc
pop
mov
hlt
and
xor
pop
pop
in
adc
ss
pop
fmull
inc
mov
shrb
int
xor
mov
paddq
inc
insb
adc
leave
int
xchg
or
mov
cmpb
repnz
xor
push
push
pop
mov
inc
inc
mov
mov
aas
inc
mov
xchg
push
in
adc
pop
mov
and
sub
inc
out
clc
insb
aad
inc
nop
cwtl
and
call
loope
add
xor
stc
inc
inc
dec
in
pop
bnd
sarb
xor
cmp
cmpsb
push
dec
lret
xor
orl
mov
mov
mov
pusha
popa
call
dec
rcl
or
mov
fs
cmp
mov
xchg
lsl
out
lods
jle
cmp
cltd
insb
jge
adc
mov
fldcw
fwait
icebp
stc
aad
jae
lret
sub
or
xor
cmp
js
int3
sarl
adc
adc
push
lret
dec
call
shlb
int
mov
mov
sbb
add
ljmp
imul
adc
sub
mov
cmp
pop
orl
inc
das
mov
jg
mov
in
loop
dec
int
orb
mov
andb
loopne
fstp
sub
shl
js
sub
lock
fisubl
push
inc
dec
jnp
dec
dec
ret
xchg
clc
fildll
faddl
aas
jle
mov
push
pop
imul
jno
lods
lcall
cmp
pop
sub
and
iret
fsubs
mov
inc
imul
bnd
dec
jp
jno
hlt
adcb
aam
cmp
push
mov
mov
jns
lret
stc
or
cmp
fbld
into
push
add
xor
inc
lahf
inc
loope
stc
pop
adc
mul
xchg
add
fs
aad
or
mov
and
and
aaa
jno
aaa
push
push
addr16
jno
jl
mov
xlat
sub
push
xchg
mov
faddl
cmpsb
mov
addb
pop
sub
lret
insb
out
mov
xchg
loope
push
push
pop
mov
mov
sub
or
les
lods
lock
jno
push
shlb
push
std
lcall
xor
mov
je
add
std
cli
cmp
int3
inc
dec
jecxz
push
push
ja
ret
inc
mov
ret
xorb
dec
jmp
insb
aaa
in
mov
js
mov
loop
repnz
loop
fistpl
aas
data16
fdivs
mov
sub
push
inc
clc
sbb
pop
pop
push
rorl
ret
jo
sti
mov
loopne
xor
data16
mov
mov
mov
pop
inc
lahf
imul
inc
mul
repnz
mov
sbb
lock
stos
ficoml
sub
and
bound
pop
xchg
lea
addr16
jb
pop
xchg
inc
jae
popf
icebp
mov
fs
std
dec
pushf
insb
mov
cmpsl
cmp
inc
or
or
mov
push
dec
aad
nop
push
xorl
scas
inc
push
stos
mov
or
or
adc
and
xor
fs
mov
jp
lods
jle
lahf
int
sbb
push
mov
or
cmp
jmp
or
ds
insb
gs
sub
mov
test
sub
fcmovne
mov
mov
fcomps
shlb
sub
cmp
scas
add
jp
popf
rol
test
arpl
daa
sbb
imull
data16
incb
rcrb
xchg
mov
shrb
add
ljmp
mov
add
add
insl
inc
aad
je
sbb
out
and
shrl
loope
js
icebp
sbbb
mov
imul
sbb
jno
mov
xor
xchg
fwait
inc
scas
dec
in
fidivrs
shll
inc
mov
push
int3
sub
adc
sbb
mov
jbe
int
or
mov
aam
xchg
mov
in
or
xchg
jg
out
sar
add
sbb
mov
lret
je
in
sub
in
add
ds
pop
mov
mov
cmp
mov
hlt
push
jmp
inc
ficompl
add
xor
cmp
xor
into
lods
xor
clc
sub
inc
icebp
decb
rorl
jmp
es
sub
xor
les
dec
daa
xchg
pop
inc
xchg
sbb
rcrl
lods
mov
lea
jno
or
jle
sbb
test
fs
pusha
lods
jb
call
mov
lcall
gs
aam
sub
in
out
jnp
mov
pop
adc
insb
into
cmc
lock
jo
mov
cmp
int
jl
out
cmpsl
lret
int
mov
scas
xor
jle
scas
jnp
in
je
jg
xchg
in
clc
sub
bound
add
adc
lret
negl
pop
cmc
pop
rcl
jbe
mov
test
sbb
xor
test
pop
iret
dec
adc
xchg
pusha
inc
in
aam
sahf
popf
mov
orl
lock
xchg
pop
fs
popa
or
clc
out
cmp
cltd
or
jle
or
sub
jmp
sbb
fistpll
jne
in
and
cli
jecxz
rcr
xchg
or
aaa
ds
mov
dec
shlb
sti
sbb
sbb
xchg
inc
rclb
ds
fisubs
mov
pop
jmp
jecxz
adc
sub
bound
inc
jp
mov
jae
pop
xor
xchg
pop
xor
adc
xchg
aad
fildl
or
xor
sahf
mov
lods
stos
mov
fdivl
rcr
cs
je
lcall
aaa
push
es
adc
sbbl
aam
mov
or
sub
jg
push
xchg
iret
sbb
add
pop
sbb
cld
in
pop
dec
hlt
mov
sub
mov
lahf
xor
call
fstpl
or
or
lods
mov
mov
jge
imul
les
dec
fwait
les
sub
rclb
push
les
mov
mov
jbe
aaa
gs
xchg
ds
js
cmp
movsb
clc
xor
iret
mov
mov
inc
push
mov
xor
lahf
dec
rclb
sub
lods
in
cld
ret
data16
pop
add
dec
dec
lods
mov
enter
jecxz
fidivrl
in
adc
inc
repnz
sbb
dec
mov
sbb
and
outsl
in
cs
mov
fcom
addl
or
insb
mov
cmp
fadds
pop
sbb
dec
xchg
and
or
stos
sub
sbb
pop
dec
scas
ja
xchg
lods
dec
cmp
mov
adc
and
out
add
cmp
test
repz
sub
into
xor
scas
outsb
out
mov
shll
xlat
push
mov
rolb
sub
enter
jmp
aad
inc
das
cmp
adc
pop
mov
fsubrp
sub
movsb
sub
imul
rcll
adc
push
loope
testl
pusha
cmp
xorl
out
lcall
sbb
jb
adc
mov
cli
and
dec
adc
jmp
dec
jmp
mov
sub
xor
fcmovne
jle
rcrl
bound
fwait
push
dec
sti
in
bnd
aaa
xor
jae
xchg
cld
ja
jge
add
movsl
xchg
movsl
dec
inc
loope
stos
sub
mov
jbe
pop
fdivs
mov
into
sub
sbb
es
jbe
inc
loope
cltd
mov
fldl
pop
jp
lods
sub
add
push
leave
psllq
mov
movsl
adc
les
mov
and
mov
pop
in
ficoml
cmpsl
and
out
retw
pop
pop
jmp
jp
dec
idivl
icebp
popf
xchg
dec
subl
rcr
jge
sbbb
test
jnp
adc
insl
adc
jp
fucomp
inc
js
enter
add
or
cmp
notb
xchg
out
mov
icebp
push
aad
fstl
fnstcw
pusha
pop
mov
adc
nop
jno
les
lret
cwtl
mov
cmc
jmp
aaa
or
jge
int
xchg
in
mov
in
inc
into
inc
push
and
cmp
sbb
jmp
dec
lret
inc
or
xchg
scas
jbe
jl
jg
xor
xor
sub
icebp
inc
jecxz
shlb
dec
or
ret
lcall
div
fwait
adcb
push
and
daa
jns
lds
mov
mov
jmp
push
aaa
ljmp
pop
jle
test
lods
popa
xor
das
out
adc
inc
aam
mov
cld
jne
cltd
jo
test
arpl
shll
lret
jmp
out
std
push
cmpsl
add
test
insl
adc
push
repz
fiaddl
sbb
cld
xor
lods
mov
mov
push
pushf
push
dec
movsl
inc
inc
sub
sti
xor
or
cmp
push
inc
sub
data16
popf
stos
stos
xchg
int3
mov
in
cmpsl
rorl
sbb
xchg
imull
bound
push
pop
mov
lock
in
loope
fs
es
nop
cmpb
and
mov
lcall
loopne
jg
fldenv
ja
push
cld
sbb
inc
andb
aam
jnp
ficoml
enter
push
test
jle
ret
test
pusha
xchg
pop
pop
mov
cmp
pop
leave
bound
lea
test
andb
push
mov
jo
mov
daa
movsl
adc
jno
xlat
mov
adc
aas
push
rcll
ljmp
in
movsl
sbb
push
adc
sub
dec
adc
add
les
inc
mov
rclb
dec
add
sub
cmp
clc
adc
repnz
fsubrl
dec
shlb
cbtw
adc
xchg
jmp
xchg
leave
loopne
push
loope
sub
call
rclb
gs
addb
ficompl
sub
jne
jge
dec
scas
outsb
and
or
lret
jne
xor
mov
daa
fbld
clc
adc
roll
mov
xchg
xor
mov
jo
xlat
outsb
arpl
pop
inc
and
gs
imul
fldl
or
mov
adc
adcl
push
mov
jecxz
inc
and
outsl
mov
gs
pop
jae
cmpsl
addr16
and
sbb
loope
push
mov
sub
movsb
mov
xlat
and
addr16
mov
ud2
out
jmp
stos
test
insb
ret
mov
sarb
fisubrs
sub
xchg
mov
movl
shrl
push
icebp
leave
ret
xchg
xor
xor
lea
pusha
fs
out
aas
movsb
rorl
push
lods
cwtl
loop
shrb
js
mov
adc
inc
add
pushf
push
into
xchg
icebp
call
adc
addr16
stos
jnp
and
jecxz
xchg
mov
std
push
lea
pop
out
iret
inc
pusha
add
in
inc
fstpt
jo
mov
jmp
mov
stos
test
mov
pop
inc
mov
in
push
cmp
arpl
les
aad
fs
into
xor
sub
or
ret
in
in
mov
jo
xchg
sub
push
das
cmp
out
int3
insl
fstpt
or
jnp
fdivr
sub
lcall
push
cmp
push
pop
add
shl
daa
out
xor
repz
and
fdivr
push
jg
ds
shll
ds
jns
mov
fisttpll
lret
lret
push
call
xor
test
sbbl
test
mov
movsl
testb
mov
adc
fistps
shr
push
les
dec
xor
add
outsb
push
stc
pusha
aam
idivb
loop
imul
jo
mov
jg
sub
out
popf
sbb
xchg
pop
fldenv
fcmovnbe
push
cmp
test
pop
jge
cld
xlat
jp
sub
cmp
push
mov
fdivrs
cmp
sbb
inc
daa
movsl
cmp
dec
das
sbb
add
sbb
mov
stc
fwait
jns
lds
sub
add
ss
test
xchg
repz
movsbl
rorl
adc
test
lahf
mov
inc
inc
ret
and
iret
xchg
sub
jmp
adc
sahf
mov
cmp
jno
push
cmp
repz
mov
lock
mov
sbb
pop
push
mov
es
cmp
or
arpl
cmpsb
push
aam
add
cs
xor
mov
sub
clc
aad
add
cmp
test
lcall
lahf
les
in
repnz
cmp
imul
xor
mov
inc
sbb
jecxz
leave
xor
leave
inc
mov
add
cmp
cmp
xchg
addl
xorl
fmul
pop
push
dec
decl
test
incl
mov
out
cld
lods
xor
cmp
adc
jge
test
push
fadds
jns
jne
cmp
pop
xchg
das
inc
jnp
xlat
andb
mov
xchg
lret
out
jge
inc
ror
test
dec
ljmp
lea
mov
add
aas
xchg
cmp
int
sbb
sbb
pusha
mov
sbb
in
xchg
enter
adc
or
or
test
xchg
sbbb
push
outsl
jb
add
mov
pop
xchg
pop
xlat
daa
sub
scas
sti
jmp
sbbb
loopw
movsb
add
mov
mov
adc
push
jno
mov
sub
mov
mov
or
mov
xchg
dec
jbe
xorl
mov
pushf
sub
mov
mov
inc
push
lock
popa
inc
xorl
mov
test
shr
or
les
xchg
data16
and
js
xor
test
pop
pushf
movsl
int
push
out
fisubl
inc
scas
je
and
inc
cld
xchg
pop
lahf
fmull
loope
push
aad
pop
mov
jp
pop
sahf
or
outsb
insb
push
addr16
cmp
sti
lret
jmp
push
subl
in
jp
and
fsub
adc
push
mov
mov
ret
mov
push
iret
loopne
mov
rorl
sub
cmpsl
sub
add
mov
stos
cmp
lds
test
mov
lock
out
gs
push
pop
daa
and
scas
mov
ss
scas
shll
sub
out
mov
xchg
sub
cmpsl
pop
dec
dec
mov
and
pop
int3
inc
lret
dec
add
pop
dec
sbb
mov
xor
lret
in
shlb
jb
scas
cltd
pop
adc
addr16
adc
xchg
scas
aaa
vpsrlq
mov
adc
into
repz
ljmp
inc
dec
mov
inc
xchg
stos
pop
dec
mov
pop
mov
inc
mov
aad
adc
test
mov
test
rcrb
inc
xchg
cmp
fimuls
ljmp
aas
mov
dec
pop
sub
ret
mov
push
dec
adc
in
test
adcl
mov
mov
xor
pop
lods
pusha
jmp
cmc
pop
or
lods
adc
jp
sbb
sub
out
jecxz
add
dec
cmpsl
pop
jp
jmp
xlat
dec
gs
ljmp
test
pop
repz
lret
ja
out
scas
push
and
adc
and
mov
daa
mov
adc
inc
ret
mov
data16
in
mov
add
mov
movsl
int3
iret
notl
std
mov
lods
mov
ja
jl
and
in
dec
mov
push
jg
popa
stos
xchg
and
jnp
das
sahf
jo
inc
dec
mov
outsl
shrl
or
sub
pop
lods
jp
mov
push
out
nop
xor
dec
xor
mov
mov
in
inc
idivb
or
push
movsb
push
fwait
inc
jno
std
and
into
sarl
inc
mov
addl
mov
pop
adcl
aaa
fimull
in
sub
stos
mov
in
repz
lock
enter
inc
imul
or
aaa
lods
add
pop
popa
ljmp
xor
jecxz
jp
popf
bound
fldl
in
lods
imul
incb
cli
cmp
mov
pushf
dec
test
xchg
push
jecxz
cld
push
fadds
pusha
ljmp
ja
cwtl
push
stc
inc
jmp
mov
outsb
xchg
std
insl
icebp
ljmp
and
sub
pop
in
mov
mov
ret
xchg
pusha
orw
cltd
js
xor
add
hlt
xchg
dec
rolb
xchg
dec
divb
mov
inc
movsb
cmpsb
and
scas
test
push
sub
call
sub
stos
in
xor
add
xor
jno
or
daa
dec
imul
insb
xchg
fsubl
add
adc
add
cmp
hlt
aad
inc
cld
sbb
mov
add
mov
jno
pushf
cmp
jns
int
sbb
clc
pop
xchg
or
adcb
xchg
cmp
mov
add
mov
xchg
adc
cld
les
ljmp
fdivs
and
int3
sub
ficomps
icebp
inc
xchg
jmp
movsl
es
sbb
aam
in
mov
int3
sub
lods
int
dec
and
into
mov
fdivrl
inc
sub
in
push
sub
push
xchg
lahf
mov
pop
mov
loop
stos
enter
test
xchg
call
and
xor
int
adc
nop
cmpsb
sahf
subb
pop
in
or
sbb
xor
pop
sub
in
sti
dec
mov
mov
inc
xchg
testb
rclb
nop
push
shlb
cs
jns
repz
pushf
add
inc
mov
and
or
loope
jnp
ljmp
addr16
pushf
aas
imul
iret
call
sbb
decb
or
fdivl
lret
pushf
cmp
inc
fs
sbb
xor
inc
mov
dec
popa
clc
out
scas
lods
cmpsb
lahf
or
imul
stc
scas
shrb
in
fadds
xor
or
pop
sbb
jle
cmovge
or
lods
xchg
call
mov
push
xchg
add
jge
mov
sbb
sahf
inc
lcall
add
fdivr
movsl
stos
cmp
lods
decl
inc
adc
loop
in
push
fcmovnu
sbb
xor
xlat
mov
push
rcrb
andl
cmc
ja
or
ljmp
stos
out
out
movsl
lret
mov
adc
popa
sbbb
xor
inc
fildll
push
jno
adc
andl
sbb
ds
inc
sbb
addr16
int
xchg
push
mov
ljmp
adc
shlb
call
xchg
ret
adc
xchg
xchg
lods
outsb
jmp
dec
jns
setno
push
arpl
mov
int3
loopne
fs
mov
add
stos
sahf
push
pushf
aad
gs
es
fldl
dec
dec
mov
dec
jmp
and
mov
outsl
xlat
popf
pop
hlt
dec
sub
adc
push
rol
cmp
and
inc
shll
ds
dec
andl
jnp
stos
pop
mov
ret
cltd
xor
mov
insl
sbb
lcall
movsl
mov
pusha
outsb
push
sbb
push
popa
divb
test
dec
daa
and
cltd
sahf
lcall
gs
lret
inc
fstl
addb
dec
and
cmpsl
test
sbb
xchg
xchg
repz
fwait
int
sarl
dec
jo
pop
loopne
out
popa
sub
inc
dec
testb
xchg
dec
repnz
dec
pop
adc
pop
push
push
ljmp
cli
mov
popf
xlat
sbb
jl
cld
sub
xchg
cmp
adc
adc
jg
xchg
andl
push
xchg
or
dec
mov
jge
inc
test
mov
test
mov
xor
orl
outsb
lcall
mov
test
fcmovb
or
pop
out
mov
dec
dec
xchg
mov
dec
mov
mov
in
push
push
outsl
shlb
mov
fcoml
daa
and
stc
call
inc
mov
sbb
insb
cltd
dec
lret
lods
rorb
pop
fistpl
adcb
in
cmpsl
dec
test
adcb
mov
fwait
pop
sub
movsl
xchg
mov
cmpsb
into
mov
push
jle
inc
or
inc
mov
cltd
mov
fs
mov
fidivl
push
add
punpcklwd
or
mov
and
push
insl
cmpl
xor
lds
sbb
xchg
xor
and
adc
mov
pushf
sub
mov
xchg
adc
int3
sahf
lods
arpl
std
hlt
loope
outsl
jbe
pushf
insl
mov
addr16
mov
sahf
fisttpll
xor
cmp
iret
push
outsb
call
test
divb
jecxz
adc
push
loopne
outsb
adc
sbb
les
cmp
or
fcomps
cmp
mov
sysenter
push
fs
pop
xor
stos
xor
mov
pop
ret
stos
push
clc
push
lret
mov
mov
inc
insl
leave
sbb
sub
push
in
lods
js
lret
pop
inc
ret
andb
add
imul
frstpm(287
push
push
add
fisubl
mov
mov
dec
mov
jg
add
scas
dec
push
sbb
pop
imul
cmp
imul
jl,pn
arpl
push
or
add
pop
xor
xchg
cmc
adc
inc
sbb
pop
mov
mov
leave
rcll
lahf
das
ss
mov
sub
add
inc
lock
movsl
inc
loop
xchg
or
or
jp
mov
int3
mov
xor
jb
pop
or
lahf
in
adc
fnstsw
punpcklbw
mov
rcll
mov
imul
push
mov
data16
imul
cs
clc
and
stos
or
xchg
cmp
cld
out
sbb
hlt
jns
jne
mov
mov
aam
test
sub
repz
ficoml
xor
rcll
aaa
je
jp
adc
push
push
push
xchg
mov
xchg
adcb
jecxz
sub
incl
add
dec
cmp
std
mov
push
rclb
icebp
pushl
sbb
and
dec
sub
and
push
nop
cmp
adc
mov
mov
mov
jmp
pop
inc
or
lea
jno
int
add
add
push
mov
inc
out
das
popf
das
cmp
aas
mul
cmpsb
mov
jmp
scas
dec
test
add
mov
pop
push
pop
stos
adc
rorl
xor
xchg
push
jecxz
les
add
sbb
int3
mov
lahf
mov
adc
xchg
nop
pusha
icebp
fisttpl
and
jnp
mulb
xor
cmc
movsb
jge
or
cltd
imulb
sahf
nop
out
fcmovu
push
push
mov
popf
fnstcw
mov
cmp
push
jmp
cmp
daa
je
dec
push
jne
push
jecxz
inc
mov
pop
std
out
mov
add
xor
mov
inc
pushf
mov
lcall
sub
xchg
push
jo
popl
enter
mov
mov
xchg
fucompp
aaa
pop
cmpb
mov
jnp
lods
add
mov
inc
aad
jecxz
pop
add
shl
sbb
mov
mov
fbld
inc
stc
add
dec
pop
jnp
adc
rcrl
cwtl
xlat
sub
and
xor
enter
sub
adc
mov
inc
or
int3
and
xchg
dec
push
mov
subb
jo
mov
test
mov
inc
cmpsb
push
dec
dec
rorl
sub
pop
sti
je
and
xor
pop
dec
adc
pusha
jns
pcmpgtd
push
rcrb
pop
mov
addr16
lret
fildll
mov
pop
test
inc
mov
bound
popa
lret
push
cmp
lds
out
mov
push
dec
sahf
adc
jne
loope
mov
mov
mov
cmpsb
les
test
adc
jle
hlt
dec
push
imulb
pop
mov
mov
sub
inc
es
out
test
push
and
scas
sub
lods
fistl
inc
loop
adc
test
inc
inc
sub
sub
out
rorl
sub
ja
imul
inc
mov
mov
and
cli
cli
inc
fstl
mov
cltd
pop
add
imul
clc
ljmp
push
xor
mov
std
movsb
inc
mov
pop
inc
xor
js
das
mov
and
rorl
cmp
adc
xchg
imul
mov
pop
adc
sub
into
pop
scas
xchg
pop
push
lods
push
faddp
sbb
pusha
mov
jge
lret
dec
xchg
and
dec
jg
xor
hlt
mov
sbb
jnp
cmpsb
bound
outsl
leave
mov
scas
xchg
jne
mov
inc
xor
lods
sahf
add
inc
in
push
loop
fildl
cmp
pop
movsl
stos
sbb
push
into
jge
das
and
push
hlt
addr16
push
inc
cmp
out
fidivl
mov
mov
mov
jnp
push
pop
lods
mov
in
lret
xor
or
fndisi(8087
mov
push
adc
dec
lds
es
mov
cltd
jae
leave
out
mov
xchg
xor
fdivrl
mov
xor
test
and
pop
mov
cmpsl
sub
in
xchg
adc
push
movsl
dec
hlt
in
push
sbb
mov
shll
push
and
mov
adcb
push
push
mov
or
bound
or
fildll
aaa
in
testb
and
cmp
inc
cmp
xchg
lahf
jmp
inc
test
jns
sub
xor
xor
loop
cs
push
repnz
add
lahf
sbb
loopne
and
ja
testb
lret
pop
cli
aas
clc
mov
add
shlb
sbb
hlt
jbe
dec
cwtl
mov
stc
cmpsl
mov
cmc
imul
xchg
add
fmuls
es
dec
lds
repnz
data16
dec
fidivs
mov
jne
out
gs
push
imul
out
sbb
add
xchg
in
inc
shll
dec
scas
rcl
adc
ret
cwtl
cmp
ficomps
js
ror
loopne
push
imul
mov
je
jge
cld
in
das
lods
notb
add
adc
idivl
cmpl
dec
mov
sub
push
xchg
mov
pop
xchg
outsb
dec
cltd
add
inc
test
mov
mov
mov
lahf
bound
inc
sub
xchg
mulb
mov
repz
mov
test
mov
nop
cmp
sti
push
cs
jl
cltd
sbb
mov
mov
mov
and
shlb
push
rorb
xchg
pusha
cmc
pop
or
mov
xchg
cltd
fsubrp
scas
mov
hlt
aas
mov
out
ljmp
mov
mov
add
push
or
lahf
loopne
clc
sub
sbb
cmp
mov
popa
xor
aaa
repnz
stc
dec
push
add
pop
mov
std
outsb
js
cmpsl
cmp
dec
pop
sub
cmc
addr16
ja
pop
das
cli
xchg
sub
ror
sub
mov
enter
cmp
xor
push
cli
sub
fbld
fs
xchg
fldl
inc
mov
test
outsb
xchg
adc
int
jbe
movsb
fnstenv
scas
jbe
rcrb
ficoml
les
cmp
push
in
push
fidivs
pop
pop
leave
or
fistps
push
dec
popf
movsl
fdiv
test
iret
add
push
sbb
mov
or
pusha
cmc
pop
xchg
fiaddl
test
fstpl
jnp
push
in
lahf
stos
inc
adc
add
in
pop
aam
loop
enter
and
sub
mov
mov
xchg
mov
ljmp
xlat
out
jge
mov
mov
push
ljmp
out
lods
arpl
mov
in
das
das
adc
xchg
jns
das
xchg
sti
iret
or
mov
add
fsubrs
mov
xorb
sub
push
push
cmp
xor
shlb
ds
sahf
insb
sbb
movsl
int
aad
cmp
mov
sbb
xor
add
lahf
test
and
jnp
lea
add
cmp
sbb
cmc
push
testb
cmp
test
ja
or
mov
mov
insl
cmpsb
cmp
lods
mov
fwait
xor
jns
cmp
add
enter
pop
out
mov
stos
dec
insb
fstpt
sub
push
jnp
addr16
lea
inc
add
je
sbb
sarl
mov
ret
shlb
and
inc
adc
inc
push
jecxz
xchg
test
and
inc
fs
mov
inc
outsb
cmp
push
es
int
repnz
and
sub
int3
add
and
andl
std
fcmovnbe
loop
sbb
xchg
dec
das
mov
push
fwait
or
test
nop
clc
insb
jbe
in
jp
lds
push
lock
jne
pushf
dec
enter
vpsraw
mov
xor
push
popf
fwait
movsl
mov
cmp
mov
out
test
cltd
in
out
pop
mov
mov
fnstcw
push
xor
adc
clc
imul
pop
push
dec
pop
imul
fisubrl
lds
pop
pop
stc
scas
sub
cs
pop
sti
pushf
shr
cmp
sbb
xchg
cmp
mov
dec
sbb
imull
push
mov
or
pop
out
xchg
js
or
nop
jecxz
add
lods
lds
adc
mov
test
ja
push
mov
add
mov
dec
cli
pop
pop
hlt
adc
aad
sti
jl
imul
sti
popl
loope
xchg
mov
call
mov
lds
divb
dec
dec
ficompl
imul
das
and
fldt
jae
xor
push
mov
xchg
jecxz
push
scas
cmc
rcll
inc
test
sbb
rclb
mov
ljmp
cmp
sub
fcomi
adc
and
call
jp
mov
clc
pop
pop
mov
cmpb
inc
mov
xchg
sub
sub
mov
jg
aad
mov
xchg
les
push
mov
jmp
es
cmpsb
and
or
subb
cmp
pop
hlt
mov
and
sub
negl
loop
int
repnz
inc
jno
adc
test
aad
lea
sbb
or
push
pop
dec
clc
repnz
sti
scas
imul
sahf
push
div
pushf
mov
cmpsb
adcl
stc
jmp
push
mov
test
iret
ss
dec
out
movsb
push
add
repz
addr16
ret
in
lret
aaa
mov
xchg
pop
inc
lock
mov
test
nop
cli
add
clc
insl
js
fwait
ret
add
mov
cmp
pushf
in
shll
js
movsl
and
cmp
shlb
add
ljmp
gs
xor
dec
xchg
dec
test
lahf
jmp
mov
ret
jmp
cmp
mov
xor
test
fs
popa
push
in
ficomps
int3
mov
scas
gs
or
aam
pop
int3
mov
and
push
int3
stc
and
mov
lds
push
fbld
out
xlat
inc
call
sbb
sbb
jnp
xchg
jl
pushf
adc
lahf
xchg
xchg
pop
lea
inc
cmp
push
push
fcoml
stos
mov
lea
xchg
into
ret
sbb
inc
nop
roll
mov
xchg
adc
icebp
push
sbb
std
movsl
leave
cld
nop
js
push
sahf
or
mov
push
loope
aaa
cwtl
lahf
mov
scas
lods
stc
jg
mov
out
and
lcall
xor
cmpsl
bound
mov
jbe
xchg
scas
adc
cmc
fbstp
dec
hlt
cld
int3
cmc
cmp
push
test
xchg
jl
imul
mov
sbb
insl
xchg
sub
xor
mov
adc
jb
sbb
jmp
mov
and
int3
inc
lea
sub
mov
dec
les
in
fwait
and
insb
mov
push
fnsave
jl
sbb
and
cmp
mov
fiaddl
adc
inc
hlt
test
das
outsl
test
stc
dec
out
push
imul
inc
out
loop
idivb
dec
jb
mov
push
mov
js
mov
out
movsl
xchg
shll
cli
js
dec
fisubrs
sub
jg
mov
iret
pushf
inc
gs
mov
orl
jnp
popa
mov
dec
inc
push
ja
inc
mov
mov
cmp
jne
dec
shlb
hlt
mov
mov
ds
push
pop
sub
cmpsb
lock
push
jbe
mov
gs
xlat
stc
dec
sub
mov
xchg
out
lea
mov
pop
roll
pop
in
fldenv
testb
and
push
xor
cmp
pusha
add
in
gs
mov
xor
repz
xchg
cmp
push
mov
pop
push
cmp
shr
pop
int3
movsb
lods
test
adc
jo
aad
push
out
inc
call
stc
jns
ficompl
xor
outsl
inc
mov
inc
aaa
mov
jo
imul
add
adc
xchg
or
cmp
cmc
xor
xor
stc
cmp
fidivrs
mov
call
gs
inc
or
mov
mov
sbb
xchg
lcall
sbb
xchg
push
mov
and
ret
mov
xor
movsl
in
leave
fsubl
sbb
push
push
jae
and
fistps
stc
hlt
enter
add
rcll
sub
inc
loope
and
mov
adc
les
notl
shl
dec
pop
sbb
mov
mov
inc
push
adc
sub
daa
pop
inc
jg
mov
call
iret
dec
ljmp
lret
mov
shll
xchg
jmp
int
and
jne
dec
xchg
gs
fistps
jne
and
push
movl
lea
loop
mov
dec
cmpsb
jl
out
sahf
xchg
and
push
rorl
adc
pmuludq
aam
jbe
or
lods
repz
icebp
leave
in
out
cmp
addr16
mov
jns
cmp
pusha
nop
outsb
insb
mov
push
lods
jmp
mov
pop
mov
jnp
sbb
cmpsb
push
loope
addr16
mov
fistps
aad
mov
jg
test
into
test
arpl
add
jge
out
jmp
sar
xchg
xchg
cmpsb
dec
and
mov
pop
dec
and
pop
add
in
sub
dec
stos
lcall
jbe
sti
adc
cwtl
xor
pop
test
xorl
sbb
sbb
pop
movsl
mov
add
lock
mov
mov
fisttpl
inc
ret
jo
pop
es
mov
mov
fistpll
daa
inc
repz
iret
cmp
outsl
inc
sbb
cmp
push
sbb
mov
jecxz
jg
dec
fnsave
cmp
dec
mul
adc
inc
pop
bswap
push
test
mov
test
pop
mov
xlat
jl
push
shrb
fdivrl
mov
and
cs
pop
test
xchg
mov
xlat
stos
xchg
push
dec
fiadds
iret
mov
lods
adc
and
jmp
push
adc
call
mov
cmc
pop
repnz
mov
cmp
mov
iret
out
das
cli
lea
push
adc
cltd
mov
pusha
add
cmp
iret
cmp
je
leave
dec
dec
outsl
mov
pop
cs
pop
sahf
fsubrs
jns
mov
lcall
iret
mov
push
outsb
pop
mov
lahf
mov
test
outsl
inc
daa
pushf
push
adc
out
lock
mov
adc
das
inc
xchg
jbe
pop
lret
iret
cmc
xchg
add
pop
inc
or
xor
mov
notl
mov
or
movl
dec
sub
add
inc
pop
sub
shl
leave
jecxz
scas
in
shlb
loop
xor
lock
xor
cmp
cmp
dec
cld
call
cmp
fwait
mov
mov
out
sbb
out
ljmp
jl
inc
aad
out
aad
mov
mov
or
jno
dec
mov
lcall
addps
mov
cltd
lahf
shl
lahf
pushw
or
mov
add
into
mov
jge
fs
jo
inc
repnz
shll
loope
mov
pop
out
mov
rdtsc
add
addr16
lret
ja
mov
gs
push
mov
sub
ret
test
add
adc
aad
mov
icebp
fldt
pop
je
ficoms
xor
mov
jmp
std
shrb
xchg
xchg
out
jno
push
aad
punpckhbw
jns
sub
or
push
dec
jle
sub
andl
test
cmp
xchg
into
xor
xor
push
stc
xorb
mov
xchg
jbe
in
fisubl
enter
jecxz
xchg
xchg
hlt
push
int
adc
ret
jae
mov
lea
mov
jmp
mov
mov
or
arpl
xchg
je
fisubrl
in
pop
mov
sar
fstpl
imul
loopne
lods
mov
gs
fnstcw
mov
xchg
mov
test
mov
fstpl
add
mov
stos
insl
add
imul
mov
dec
inc
jp
push
adc
jge
cmp
jo
dec
adc
jg
bound
push
cld
cmpsl
ficoml
addr16
xor
bswap
sbb
dec
cmpsb
inc
out
aam
mov
sti
rcrl
mov
jle
roll
jg
cld
arpl
sub
xchg
add
iret
or
lock
sbb
stc
mov
push
push
roll
xchg
push
cmp
hlt
outsb
cmp
or
pop
adcl
pushf
or
out
add
orb
jp
int
shrb
ds
or
mov
pop
inc
popf
push
cwtl
mov
sbb
stc
hlt
mov
aas
enter
mov
sub
out
and
adc
ror
arpl
dec
xchg
add
jnp
stos
jb
data16
insl
in
bound
xchg
ss
pop
push
sti
scas
fldenv
push
mov
int
sbb
pop
rcl
imul
shlb
shlb
jmp
je
add
mov
push
stos
jo
cld
xchg
or
dec
sbb
and
adc
js
imul
push
add
push
in
or
lds
jmp
inc
xor
es
movsl
or
cmp
out
int
decb
pop
cmp
in
stos
push
cmp
mov
in
mov
pop
xor
lock
xchg
mov
or
test
sbb
and
or
jnp
inc
xchg
jae
lret
ret
push
lret
rdmsr
adc
push
test
cmp
mov
stc
xor
or
inc
gs
cmp
repz
ds
lea
ja
je
adc
cmp
adc
andl
bnd
mov
add
xor
jbe
movsb
outsl
sbb
mov
mov
adc
lock
cmp
scas
jne
adc
lahf
incl
adc
pop
insb
pop
shll
insb
adc
cmp
pop
dec
jne
sub
mov
inc
xchg
mov
sub
cmc
mov
push
xchg
add
sub
jmp
loop
add
orb
popa
jmp
cld
jmp
push
movsl
pop
mov
stc
loopne
mov
sarb
and
jecxz
scas
stos
hlt
pop
out
xchg
adc
fisubl
xchg
dec
dec
xor
dec
pop
jns
inc
movsb
xchg
mov
loop
sbbb
leave
push
xchg
xor
push
rcr
lahf
push
sub
fdivs
jl
fimuls
push
lea
sbb
enter
xor
les
adc
lods
repnz
les
test
and
cwtl
sub
mov
gs
and
mov
popa
lds
pop
aaa
xchg
xchg
ret
ds
xchg
pop
lret
jge
sbb
sub
outsb
xchg
jbe
mov
inc
jmp
hlt
adc
and
call
outsl
in
add
adc
enter
clc
fcmovb
xchg
jno
stos
int3
pop
jmp
mov
xchg
or
mov
ljmp
xchg
mov
movsl
add
aaa
bound
fs
or
stos
int
out
mov
movsb
scas
scas
jle
push
fcomps
call
mov
sbbb
lds
adc
or
je
cmp
pop
sub
pop
or
icebp
scas
mov
sub
jno
mov
stc
pop
pop
shr
mov
insb
fmul
addr16
stos
xchg
mov
jmp
aas
jne
dec
in
cmp
sbb
test
subb
cltd
sti
dec
shll
cwtl
mov
inc
mov
mov
cltd
scas
cwtl
jecxz
pop
jl
leave
mov
sbbl
sbb
lea
xchg
or
nop
xor
rcll
xchg
jno
andb
ret
fbstp
jne
pop
inc
sbb
push
mov
adc
push
mov
xchg
lea
and
jge
out
lahf
lcallw
hlt
push
jbe
pop
sbb
xchg
out
popa
adc
pop
sbb
repnz
lods
bound
pop
aaa
das
icebp
adc
adc
inc
mov
pop
lods
adc
out
or
in
fnstcw
shlb
in
lret
test
cmp
jae
mov
jecxz
adc
mov
lret
icebp
cmpsb
testl
push
test
xlat
mov
push
cld
rcl
lods
cmp
push
pop
cld
lods
pop
fsub
sbb
dec
sti
push
dec
lock
incl
add
push
jp
imul
mov
lret
loope
movsb
pop
imul
dec
xor
lds
es
test
mov
test
ljmp
movd
addb
into
lahf
and
mov
rcrb
jmp
mov
je
xor
in
fisubs
std
or
cli
sub
jb
mov
ud0
sbb
and
imul
stos
xchg
dec
aaa
xchg
mov
mov
repz
orl
addl
cmp
cmpsb
jmp
std
into
cmpsl
adcb
popf
xchg
fmuls
pop
pop
dec
out
je
and
and
mov
cmp
or
out
je
add
mov
hlt
push
lods
inc
jecxz
jae
fidivrl
test
dec
xchg
push
cmp
sub
mov
cmp
push
roll
in
xchg
push
jno
lods
imul
mov
dec
sub
mov
lock
jmp
test
dec
sbb
or
and
inc
push
push
sub
insl
or
inc
dec
shr
pop
push
test
push
inc
jge
push
mov
lahf
mov
pop
pop
push
xlat
gs
xchg
loopne
jmp
jmp
jbe
inc
shll
std
mov
loope
dec
scas
arpl
cmp
inc
mov
dec
sub
add
sbb
add
shrl
mov
fldt
add
sbb
push
and
test
inc
int3
out
clc
test
mov
inc
pushf
xor
push
or
xor
outsl
andb
push
test
sub
mov
sbb
loopne
sbb
jb
jl
add
push
cs
add
mov
mov
cmp
adc
rcrb
pop
push
xchg
lds
xchg
pop
into
daa
fwait
ljmp
out
lock
movsb
push
mov
xchg
mov
dec
arpl
xchg
out
sub
push
xchg
imul
ja
xchg
mov
mov
lahf
out
cmp
xor
test
or
dec
push
jmp
lock
inc
outsl
js
mov
dec
mov
sbb
stos
dec
movb
loop
scas
cmc
ror
jmp
lods
cld
gs
popf
dec
dec
movsb
incb
cli
add
jb
and
lahf
dec
rcl
xlat
sahf
and
mov
inc
fxch
mov
pusha
lahf
push
and
pop
ret
and
adc
pop
insb
call
pop
xchg
test
stc
mov
or
mov
jmp
add
lea
repnz
and
out
inc
cmp
lcall
popa
lea
push
out
push
mull
push
sbbl
pop
subb
sbb
sub
lods
pop
jmp
rcl
int
fs
mov
adc
jns
mov
outsl
data16
popa
imul
lahf
jb
mov
test
lods
pop
cwtl
xchg
dec
test
inc
movsb
into
pop
clc
stos
add
push
pop
pop
mov
ret
mov
push
pop
movntps
mov
add
jo
shrb
xchg
shrl
mov
add
add
js
xlat
jg
pop
add
cmp
or
movl
adcb
jnp
mov
push
sub
dec
dec
int3
stos
lret
mov
mov
in
mov
dec
sti
inc
sub
fcmovne
sub
insb
inc
lods
mov
mov
sub
bound
sbb
mov
sahf
mov
cmpb
repz
lsl
mov
cmpsl
xor
enter
mov
outsl
cwtl
int3
sbb
sbb
xchg
ss
mov
jle
sub
std
push
loope
push
aam
sbb
shrb
jg
jge
lret
push
lods
jp
popf
sbb
movsb
into
stc
cwtl
test
xor
pushf
mov
cmp
mov
xor
xchg
jle
pop
mov
test
mov
dec
adc
popa
push
je
sub
hlt
jle
mov
arpl
test
xchg
push
sarb
scas
mov
and
arpl
mov
push
test
dec
ret
xor
mov
sbb
xchg
hlt
add
mov
loopne
adc
and
sbb
xchg
arpl
pop
and
repnz
fdivl
mov
add
mov
movsb
sbb
mov
push
imul
or
xchg
or
xchg
xchg
sub
outsb
xor
mov
cmp
xlat
add
ljmp
add
ss
out
mov
lahf
rol
adc
sbb
aaa
shll
push
lods
bound
inc
outsl
jg
mov
rcll
cli
sbb
out
or
sbb
sti
repnz
push
mov
outsb
pop
cld
ds
and
mov
fnsave
rclb
iret
inc
mov
jge
adc
mov
mov
negl
test
arpl
fmulp
xor
xor
cmpsl
pusha
pop
cmp
lds
pop
fmul
shll
pop
pop
adcb
xchg
and
jae
clc
jg
mov
out
das
hlt
adc
inc
xor
out
lea
jo
add
shlb
gs
daa
int
stc
jp
pop
mov
and
lahf
push
push
dec
cmpsl
stos
cmp
lret
ja
insb
test
in
ja
push
cltd
cmpsl
push
cmp
movsl
imul
xchg
inc
adc
inc
cmp
lods
fildll
in
test
sarb
xchg
mov
stos
out
add
mov
cmp
fsubs
dec
dec
pop
out
jmp
and
mov
in
and
andl
cmp
sbb
xor
adc
sbb
mov
mov
or
shl
scas
or
push
adc
push
sbb
pushf
adcb
add
or
movsb
jecxz
sbbl
push
or
pop
xchg
sub
pop
cld
pop
jno
jae
mov
nop
inc
pop
jo
ficoms
adc
ja
pushf
mov
add
sub
xor
loope
mov
sbb
and
pop
mov
push
inc
test
lock
popf
and
jl
mov
cmp
dec
lret
stos
cmp
repnz
shll
push
add
fbstp
leave
and
daa
push
sub
aad
popa
lods
or
stos
jecxz
pop
mov
mov
mov
fdivl
xchg
xchg
sub
into
or
pusha
scas
lock
cmp
loopne
push
filds
mov
aad
mov
mov
dec
mov
xchg
cmpl
mov
mov
lahf
mov
jae
int3
loopne
nop
jl
or
xor
jmp
in
jg
push
mov
ret
push
adc
stc
into
lret
testl
in
jg
popa
mov
mov
mov
cmp
adc
ficompl
popf
adc
pop
stc
mov
adc
bound
pop
inc
or
sub
and
aas
mov
lea
sub
sub
mov
jb
jo
dec
xchg
xlat
enter
push
lds
icebp
cmc
mov
jge
sbb
lods
xor
clc
test
aad
loopne
lock
out
mov
push
roll
pop
mov
inc
push
lea
push
mov
hlt
sub
int3
nop
leave
mov
xor
or
int
xlat
lds
ljmp
xchg
lods
fistps
add
cmpsl
mov
cwtl
jno
fwait
and
xchg
js
je
mov
sahf
push
mov
dec
mov
pusha
lea
jb
adc
inc
push
cmp
jg
add
pop
jne
sbb
clc
lret
rorb
lcall
add
lock
ljmp
lock
cli
stos
ja
mov
adc
adc
sahf
mov
xor
inc
call
mov
outsl
or
mov
shrb
jo
mov
fwait
and
push
roll
mov
icebp
pop
ljmp
lret
fld
xor
push
ss
rol
cld
pop
xchg
sahf
cmp
push
push
aam
push
push
jp
lahf
rcr
mov
stos
push
jg
or
mov
lods
adc
stc
cmc
or
mov
fists
pop
mov
ds
imul
cltd
xchg
mov
shll
xchg
mov
adcl
and
leave
inc
adc
push
lods
mov
das
xchg
in
mov
xchg
cltd
lods
pop
ds
xchg
inc
stos
sbb
in
sahf
push
inc
stc
mov
test
icebp
xor
fs
mov
or
das
mov
mov
test
push
push
std
scas
pop
cs
dec
sbb
adc
mov
in
loopne
and
mov
dec
stos
mov
and
inc
movsb
xchg
lods
jg
pop
in
mov
jae
inc
xor
outsb
push
lret
inc
pusha
add
adc
add
dec
add
movsl
cmc
add
test
dec
inc
mov
scas
mov
xor
push
loope
rol
mov
fdivs
sub
punpckhbw
lahf
movsb
ss
dec
scas
cmp
out
mov
push
add
cmp
sbb
lret
das
inc
imul
cmpsl
lock
or
rolb
in
rcrb
mov
aas
xor
jae
in
pop
fnstsw
mov
lds
inc
addl
xlat
popf
cmpsb
pop
xchg
lods
push
sti
scas
dec
lea
fisubrs
mov
scas
jp
pop
pop
push
imul
adc
xor
ljmp
inc
jecxz
xorb
sbb
inc
in
in
fdivr
leave
mov
fcomp
add
lock
bound
cli
sahf
mov
push
inc
inc
cmp
sub
jbe
int
dec
out
lahf
sbb
daa
push
dec
add
out
in
sub
inc
mov
jl
or
mov
mov
push
sub
fidivrs
icebp
ret
xchg
addb
xchg
xchg
and
adc
push
push
repnz
xor
cmp
fstps
push
test
lret
jno
loop
push
pop
mov
lahf
movsb
clc
add
cs
popa
sbb
int3
ds
es
inc
mov
cmc
or
sbb
push
cmp
sbb
addr16
jecxz
aam
int3
push
cld
sub
negb
xchg
in
icebp
sbb
pop
jno
sbb
mov
and
dec
xor
cmpb
mul
imul
jl
xchg
xchg
xor
les
inc
std
es
pop
xor
mov
mov
in
xor
stc
shl
inc
mov
outsl
mov
out
dec
xchg
in
and
in
je
lahf
idiv
fstp
and
sbb
repnz
mov
jp
ret
test
and
mov
dec
ds
loop
clts
xor
and
sbbl
lods
ja
fwait
adc
sbb
mov
push
sub
movsb
pop
mov
jmp
dec
jb
loopne
imul
pop
lea
sub
inc
fsubr
xchg
movsb
pop
xchg
data16
fnstsw
mov
sub
mov
test
pop
aad
pop
shlb
ja
test
mov
mov
and
push
rorb
xor
ret
add
rcrb
adc
es
sub
mov
mov
data16
fdivrp
lcall
cmp
scas
dec
jecxz
lea
jle
aam
leave
int3
sub
add
push
fdivs
add
pushf
push
inc
sub
in
jp
dec
xor
xlat
in
imul
int
test
test
add
xor
xchg
repnz
addr16
push
stos
iret
mov
mov
sub
sbb
call
xchg
push
dec
fs
leave
pop
xor
lcall
pop
rcrl
sbb
ja
je
mov
scas
mov
loopne
sub
subb
push
icebp
inc
lods
lds
sub
sbb
fs
out
lret
dec
xor
out
rol
cmp
lods
ret
cmp
in
les
mov
xchg
test
inc
and
cs
mov
mov
out
add
mov
ret
add
pop
dec
mov
aad
mov
inc
std
push
into
mov
and
ret
lret
xchg
cli
xor
jecxz
xchg
int3
pop
push
sub
das
add
jg
ficomps
stc
cmc
mov
cmp
xchg
lea
xchg
scas
iret
sbb
cwtl
pop
sub
aad
jns
mov
jp
mov
mov
ljmp
outsb
push
mov
xor
xor
int3
out
cmpb
ret
ret
imul
adc
mov
pop
adc
orb
test
xchg
adc
jo
jnp
ret
fsub
addr16
or
mov
lcall
mov
and
daa
call
pop
les
mov
loop
movsl
pop
cmp
fucompp
pop
pop
sarb
push
dec
bswap
rclb
fisubrs
imul
add
jge
lds
jno
cs
xchg
call
adc
cmpsl
pushl
rcl
insl
imulb
mov
les
mov
leave
push
test
in
scas
xchg
aad
adc
mov
cli
or
jecxz
add
jmp
out
lcall
ret
cltd
jns
lcall
pop
or
aaa
xor
sbb
incb
fidivl
dec
sbb
add
lea
dec
dec
adcl
insb
aaa
movsb
pop
fimuls
cs
xchg
sbb
mov
fmuls
insl
mov
fmulp
jp
mov
cwtl
push
negl
dec
addr16
das
out
movsb
cmp
in
mov
pusha
nop
movq
jp
adcl
mov
xchg
divb
sbb
jae
mov
std
jne
push
andl
int
cli
clc
adc
int
imul
addr16
dec
rcr
fldenv
sub
sahf
leave
test
leave
and
push
cmp
mov
jp
mov
xorb
scas
in
jp
es
fxch
pop
mov
xchg
jae
adc
fdivl
lods
xor
lret
popf
jnp
stc
cmp
fsubr
and
and
pop
adc
outsl
add
xchg
add
and
dec
and
mov
mov
sub
sbb
fdivrl
mov
fsubl
or
dec
outsb
cmp
xlat
xchg
push
sub
mov
pop
sbb
ret
cmp
pop
dec
push
jle
notl
xchg
sub
pop
loop
test
xor
dec
xchg
out
cmp
inc
push
ficomps
push
adcl
cmc
pop
xchg
enter
or
mov
sbb
push
in
jle
mov
ja
hlt
aas
movsl
xor
xchg
dec
sub
inc
and
push
stos
push
jbe
jns
fprem1
cli
mov
adc
xchg
jl
test
or
out
out
aas
mov
xor
mov
and
mov
popf
xchg
jbe
fsubs
and
xlat
xor
mov
adc
adcb
push
nop
fisubrl
test
sub
iret
mov
push
xchg
pop
pop
fwait
dec
jae
ss
leave
test
imul
in
mov
push
out
nop
mov
or
add
test
outsl
out
inc
cmp
jg
mov
jle
and
in
sub
push
inc
pusha
cmp
dec
pop
in
mov
daa
mov
or
xrelease
cltd
cmp
jecxz
xor
lahf
and
aam
mov
push
lods
push
mov
call
mov
sbb
loopne
das
aas
data16
and
pop
mov
xor
mov
fsubs
movswl
push
loope
call
stos
jp
dec
adc
pop
loop
fmul
movsb
dec
sbb
int3
aad
and
shl
fsubs
mov
clc
ljmp
loope
add
push
fnstcw
cmp
es
ds
sbb
jns
mov
jb
lods
cmp
scas
mov
addr16
inc
or
fdivrl
adc
xchg
fs
outsb
cmp
hlt
out
pop
pushf
inc
pop
add
push
sbb
dec
and
lds
push
sbb
add
cmpsb
adc
sarb
jmp
and
push
fs
adc
insb
add
repz
mov
js
in
inc
das
push
lods
test
stos
push
out
cld
dec
add
loop
in
push
push
cwtl
mov
inc
fmuls
mov
add
inc
imul
fsub
push
push
test
jl
pop
or
xchg
dec
sti
stos
ret
mov
fwait
mov
mov
notb
jg
mov
and
mov
jno
mov
jge
cmp
xlat
adc
cltd
stc
mov
dec
xlat
sbb
sti
dec
addr16
fldenv
lret
or
aas
mov
ds
xor
mov
lcall
cwtl
rcl
xor
pop
lcall
mov
cltd
dec
jns
inc
repnz
inc
mov
mov
sub
cwtl
int
test
mov
mov
addr16
fcmovb
jge
cwtl
std
ds
inc
dec
mov
jecxz
mulb
cltd
cwtl
xchg
sti
lret
fwait
sbb
pop
aam
jge,pn
mov
fiadds
shll
cs
pop
xchg
xchg
xchg
clc
add
dec
test
imul
inc
sub
rcr
mov
pop
xchg
stos
xlat
jne
jb
sahf
mov
cs
ffreep
xchg
adc
xchg
sbb
adcl
sbb
fstps
add
dec
jle
popa
pushf
and
xchg
stos
jae
mov
inc
adc
roll
outsl
test
xor
fcoms
and
sub
push
inc
pop
fadds
sbb
or
xchg
xorb
cmp
jmp
das
jns
add
jne
in
mov
sub
or
mov
add
pushf
push
mov
int
jle
out
je
push
inc
fidivl
test
ds
in
dec
jg
lods
sbb
push
or
cwtl
cmp
cltd
cmp
into
testb
cltd
dec
sbb
sub
and
repz
bswap
jno
push
cmp
pop
push
sbb
push
mov
aam
mov
jg
jne
pop
cmp
jb
in
shl
jb
mov
je
push
fsts
sub
push
out
div
fistps
pop
leave
add
cmp
ja
jecxz
push
push
mov
mov
dec
dec
xor
mov
lods
int3
sahf
js
pop
loopne
mov
pop
loope
enter
shll
subb
adc
push
aaa
les
push
dec
xchg
sub
mov
mov
pop
cmp
lock
ja
lods
popf
inc
pop
arpl
in
push
inc
insb
icebp
adc
mov
mov
push
clc
cmp
inc
push
hlt
inc
jnp
sbb
aas
xor
push
pop
lods
les
clc
sub
addr16
outsb
sbb
cli
xchg
cmc
xor
add
inc
jle
lret
aas
cld
or
xchg
or
xchg
repnz
testl
mov
les
inc
sahf
jmp
inc
scas
lcall
cmc
push
mov
sbb
lds
in
out
loop
shrb
fwait
push
inc
loop
inc
xlat
iret
rcr
adc
dec
int3
add
inc
mov
add
and
jno
shll
fwait
nop
jne
pop
jnp
or
sub
cld
mov
lahf
cmc
jl
shrb
xchg
imul
imul
pop
bound
sub
xchg
iret
fcmovb
pop
pushf
subb
sbb
dec
push
je
xchg
xor
mov
push
sbbl
adcl
xchg
ds
xor
mov
lock
shrl
nop
lret
push
stos
and
lods
test
mov
push
jecxz
movsl
sti
push
sbb
cmpsb
xor
adc
rol
test
mov
xor
jns
ficomps
ja
mov
ss
mov
inc
faddp
lcall
sub
pop
and
insl
jb
mov
xchg
out
insl
nop
je
je
inc
add
sbb
mov
inc
orb
inc
cmp
sarl
stos
jg
push
sarb
mov
cmp
rorl
orl
push
std
fwait
in
divb
xchg
xor
fmull
mov
movsl
mov
pop
daa
and
jo
sub
jns
inc
pop
ss
add
mov
mov
lods
lret
daa
xor
and
or
lock
mov
daa
pop
lahf
je
xchg
fimull
movsb
sub
pop
and
jnp
test
test
xchg
lods
rcr
scas
es
or
sub
jl
pop
push
dec
test
decl
add
hlt
cld
fwait
add
sub
xchg
inc
adc
ljmp
mov
jno
hlt
mov
lahf
ja
inc
out
lret
fwait
ret
push
cmp
push
mov
int
insl
sti
aam
or
cmc
sbb
jle
sbb
xchg
or
aad
xor
xor
roll
xor
insb
pop
les
add
repz
jp
adcb
jbe
inc
inc
xchg
pusha
xchg
dec
dec
fs
pop
or
inc
das
add
popa
jmp
push
mov
js
and
xchg
inc
sbb
pop
jae
pop
ret
inc
pop
ljmp
adcl
pop
mov
push
jb
scas
stos
cmpsl
pop
push
push
pop
adc
fidivrs
in
lret
push
dec
push
inc
pop
pop
mov
or
out
es
gs
inc
pop
mov
test
add
pop
and
add
mov
dec
push
nop
or
faddp
mov
sbb
dec
cltd
mov
test
sahf
shl
sbb
xchg
insb
outsl
bound
scas
movsb
ljmp
push
lods
or
dec
jnp
fstps
pop
dec
cmc
pop
add
xchg
push
das
or
outsb
aas
push
xchg
mov
jbe
hlt
pop
cmpl
imul
jns
mov
mov
push
pop
btc
jmp
sbb
sti
inc
xchg
sub
sbbl
inc
pop
ret
add
push
cmp
je
ja
jmp
or
mov
scas
lcall
ret
lahf
xchg
in
add
push
dec
daa
mov
jmp
mov
mov
ljmp
ds
test
dec
in
rcrl
cs
and
inc
and
push
mov
jnp
inc
sbbb
pop
fsts
cmp
data16
incb
vpsubusw
outsl
repnz
imul
jmp
sub
sbb
dec
in
adc
jmp
push
fadds
xor
dec
dec
mov
aad
cmp
cs
push
cs
repnz
adc
fnstenv
or
daa
jns
ss
and
std
rorb
push
int3
mov
fldenv
push
cwtl
and
xor
inc
inc
and
xorb
ljmp
cli
adc
adc
jge
add
das
mov
dec
add
std
or
or
mov
push
push
push
sti
jnp
sti
stc
sub
mov
cmp
repnz
aad
sbb
xor
in
gs
xor
or
dec
int
hlt
inc
dec
xchg
popa
xlat
jmp
sub
mov
or
mov
sti
mov
mov
imul
in
rcr
sub
mov
add
std
lret
ds
inc
and
xchg
jae
push
push
adc
lret
jl
sbb
test
pop
js
inc
fimuls
shll
in
mov
add
rcll
mov
ret
popa
adc
jge
or
and
jg
stos
fsincos
rorl
xchg
gs
mov
add
fdivrs
mov
jecxz
xor
rcr
ffreep
test
inc
jo
lock
jno
mov
or
mov
call
cmpsb
pop
and
into
fsubl
jp
xchg
and
push
lods
push
add
add
fwait
dec
loop
push
test
imul
js
fadds
or
std
dec
imul
mov
add
leave
xchg
mov
jp
push
jnp
aam
or
push
mov
divl
fs
mov
mov
xchg
xor
into
cmp
inc
ja
mov
negl
xor
fs
mov
sbb
nop
add
sbb
adc
aam
inc
mov
in
cmp
popa
scas
cmp
adcl
filds
jmp
sub
xor
aad
movb
inc
push
int3
bound
out
cmc
mov
fiadds
dec
lock
adc
xor
sbb
xor
pop
imul
addr16
jmp
iret
push
in
addr16
mov
out
ret
stos
jge
fcompl
xor
imulb
push
push
in
cmpl
sbb
lods
aaa
jmp
bound
push
hlt
fcmovnbe
jge,pt
fsub
jg
pop
je
push
imull
pop
add
pop
roll
mov
mov
sub
pop
mov
xchg
into
stc
repnz
sbb
adc
loopne
arpl
jmp
rolb
add
mov
in
cmp
inc
pop
xchg
or
dec
hlt
jnp
jnp
xor
ret
or
push
leave
push
lcall
lret
leave
or
sbb
mov
je
movb
jae
lahf
mov
cmp
ja
sbb
push
xor
loop
mov
and
ss
dec
add
and
sub
sbb
sub
jbe
xchg
inc
outsl
cld
out
sub
inc
jg
or
cld
xchg
pop
in
mov
fisubrl
mov
push
or
insb
cwtl
inc
cli
inc
jl
into
sbb
or
or
inc
in
jg
test
jmp
jo
and
pop
and
dec
out
adc
ret
in
mov
dec
jge
test
jge
pusha
in
js
inc
and
test
push
repnz
insl
inc
ljmp
leave
andl
mov
rcrb
sub
jnp
mov
mov
or
jecxz
xor
lock
das
fwait
je
dec
and
cmp
negb
push
leave
stc
xchg
scas
or
add
rolb
sub
push
loop
out
gs
cmc
and
xlat
xor
loopne
cmpsl
mov
xor
push
sbb
jge
mov
test
jecxz
ret
or
cmp
jecxz
push
dec
imul
inc
mov
out
enter
cld
pop
dec
adc
outsb
mov
jg
sub
mov
and
aas
fld1
das
out
pop
cmp
pop
xor
pushf
xchg
inc
movsl
icebp
js
push
sub
lods
test
pushf
and
push
testl
in
addr16
popf
scas
popf
int3
in
pop
scas
sub
sti
sarl
test
xorl
aaa
mov
xchg
xor
sbb
and
xchg
loopne
daa
sbb
push
pop
in
sub
rol
sarl
mov
add
in
ljmp
cltd
xchg
femms
stos
scas
jae
lcall
cmp
stc
xchg
and
xor
xchg
sub
dec
push
or
bound
js
outsl
add
adc
mov
xchg
mov
ss
pop
mov
addb
push
add
adc
dec
inc
fsincos
push
lea
sbbb
jb
mov
je
push
fsts
ds
mov
sar
in
movsb
sub
jecxz
sti
xorb
mov
jno
jl
jo
bound
loope
and
sub
test
inc
mov
lret
inc
fistpl
lahf
pop
repnz
fnstsw
pop
neg
mov
cmp
lret
and
xchg
leave
pushf
push
fdivrl
movsb
call
pop
push
pop
dec
in
xchg
arpl
ficoml
push
or
sahf
repz
imul
adc
in
or
arpl
pusha
xchg
mov
popa
aas
dec
push
jne
pop
orl
pop
jb
mov
lds
cmp
lods
xchg
orl
pop
imul
cmp
push
pop
jle
mov
adc
lock
loopne
inc
fwait
add
push
mov
cli
rol
sbb
sysenter
xor
xchg
int
hlt
std
sbb
dec
pop
push
adc
mov
pop
pusha
inc
xchg
jmp
dec
fwait
pop
cmp
jge
popf
insl
or
xchg
sbb
xor
out
and
aam
xchg
mov
fs
cmp
mov
mov
inc
dec
and
jnp
addr16
xchg
ret
insb
pop
add
mov
mov
push
mov
je
xchg
push
mov
scas
movsl
sub
xchg
int3
aam
xlat
mov
or
outsb
and
adc
clc
js
scas
inc
imul
sub
jl
hlt
std
test
cli
loop
repz
or
inc
fidivrs
inc
mov
mov
and
dec
mov
inc
mov
cmp
add
xor
fwait
cmp
fidivl
cmpsb
data16
maskmovq
imull
lret
xchg
aas
pop
popf
fisubrl
bound
cld
movsl
fcomip
cld
ljmp
cwtl
sub
sahf
xor
cmp
push
rolb
fldcw
pop
lret
dec
int
lcall
mov
sbb
inc
ret
sub
faddl
jnp
add
push
sbb
add
xchg
xchg
xchg
push
mov
sbb
std
nop
push
pop
add
mov
andb
int
or
ds
leave
inc
js
clc
cmp
sti
and
rcl
adc
cli
mov
icebp
cmc
push
lods
pop
popa
std
je
add
out
aad
andb
or
jle
push
lds
mov
xchg
fdivl
scas
or
cmp
lcall
and
ret
insl
inc
std
lock
rorb
pop
xchg
mov
movsb
icebp
pushf
jo
stc
sbb
cmp
sub
adc
xlat
push
xchg
and
add
adc
dec
std
and
inc
lea
fimull
out
mov
out
cmp
nop
dec
sbb
push
adc
pop
popf
pop
mov
sub
dec
mov
xchg
repnz
inc
xchg
lcall
mov
jnp
xchg
add
in
je
sbb
fdivrl
divb
ds
adc
loop
cmp
jecxz
inc
push
arpl
out
pop
jns
mov
nop
rorb
imul
cmpsl
push
loopne
add
mov
mov
mov
fnstsw
mov
cmp
shr
mov
xor
or
sbb
cmp
inc
cmp
fwait
dec
cmp
and
pushf
shrb
lock
or
in
movaps
test
cwtl
xor
push
mov
repnz
cmp
dec
pop
xchg
push
xchg
pop
inc
add
fisttpll
push
mov
inc
fsts
movsl
xor
inc
sbb
sbb
sub
and
mov
xor
xlat
lods
lcall
mov
pop
mov
fs
xor
gs
xor
stos
push
add
pop
cmp
mov
sub
cmpsb
mov
test
mov
mov
sbb
pop
pop
cmpsl
add
pop
mov
or
add
jo
mov
rcrb
push
ljmp
or
test
mov
clc
mov
inc
push
cli
loopne
into
int
fisttps
push
in
leave
lahf
mov
lock
mov
mov
popa
mov
push
jae
lea
xchg
pop
lods
adc
and
mov
xor
push
iret
daa
or
rol
loope
imul
test
iret
pop
xchg
mov
fiadds
and
dec
leave
adc
fcompl
mov
jmp
iret
mov
cmpsl
data16
push
cltd
push
aaa
xchg
negl
inc
test
pop
das
xor
testl
hlt
movsb
jo
push
adc
sti
add
arpl
sub
jne
xor
xchg
inc
into
xchg
out
lahf
sbb
insb
mov
les
pop
shll
push
mov
insb
mov
mov
lea
iret
push
push
push
lea
cmp
cmp
xor
loopne
stos
dec
loopne
mov
and
inc
cmpsl
xchg
lds
push
test
push
sarl
test
push
xor
fistpl
mov
jo
sbb
adc
push
psrad
das
sarb
adc
xchg
popa
jns
mov
mov
mov
test
shll
jge
jp
in
mov
lcall
imul
cmc
stc
lods
jbe
jle
cmp
cltd
loopne
cmp
divb
fwait
xchg
add
xorb
loop
scas
jge
jle,pn
inc
jmp
mov
cwtl
int
rorl
cmc
ret
lds
push
jne
test
adc
icebp
rorb
add
mov
fwait
dec
cmp
jmp
rcl
hlt
pop
push
mov
mov
lea
sahf
pop
xor
stc
dec
leave
jbe
cmpsl
push
xchg
jl
xchg
sub
inc
test
mov
ret
movsl
insl
jo
inc
cmc
xchg
and
popa
and
lods
scas
xor
pusha
inc
adc
js
ret
pop
icebp
sub
out
inc
pop
or
add
negl
mov
mov
les
pop
inc
outsl
or
xchg
mov
dec
scas
xlat
sub
and
pop
add
test
cmp
aaa
xor
imul
xchg
jae
mov
ffreep
add
arpl
test
fdiv
mov
jns
jg
aaa
jne
das
mov
jnp
fiaddl
test
push
mov
in
pop
or
inc
pop
add
add
inc
adc
xchg
ds
stos
inc
cmpsb
arpl
mov
push
rolb
test
mov
add
lcall
push
inc
jg
push
lret
int3
mov
or
or
cmpsl
mov
or
pop
pop
mov
test
out
pusha
vminpd
jle
test
loopne
jmp
lods
cmp
fiadds
xor
mov
sub
push
fs
sahf
add
mov
xchg
dec
mov
ret
lods
in
call
inc
nop
pop
pop
inc
fimull
xchg
jp
or
insb
jge
imul
adcl
insl
adc
mov
jp
cmp
inc
loop
jno
outsl
stc
cltd
mov
dec
hlt
shl
fsqrt
sarb
repz
mov
xor
or
pop
sub
mov
mov
rcrl
add
leave
push
jae
pop
xor
sbbb
fidivrs
lock
mov
push
mov
aam
shll
adcl
ljmp
jo
jb
enter
rclb
cs
test
pop
jb
sbb
xor
dec
dec
cli
and
les
imul
test
add
push
add
loopne
les
lret
jp
insl
not
inc
ljmp
or
xor
add
jnp
cwtl
movsl
jne
mov
int
xor
mov
js
sub
pop
insb
in
rcr
lea
jge
test
jb
stc
xlat
pop
jle
in
fldt
mov
cmp
sub
mov
cmpsl
pop
jg
sahf
xor
pop
add
jne
sub
andl
pop
jbe
or
jno
xchg
sub
lahf
daa
sbb
fmuls
sahf
jne
fs
outsb
cmpsl
gs
xlat
ret
minps
insb
xchg
push
mov
shll
xor
roll
xor
sub
and
mov
test
pushf
pop
mov
jbe
lret
fisttps
cltd
or
cmpsb
jg
mov
insb
push
mov
mov
fisttps
dec
and
daa
test
outsb
sub
scas
sub
nop
adc
jge
mov
adc
pop
gs
jb
les
insb
les
das
push
mov
std
stos
aad
stc
rcrb
jbe
inc
leave
xchg
and
adc
cmpb
or
push
cmc
pop
daa
popf
xchg
jnp
ljmp
jne
bound
test
and
adc
std
jne
dec
lahf
xchg
mov
and
mov
out
into
sub
sbb
add
cmp
nop
push
push
fst
mov
decl
xor
inc
movb
popa
loope
int3
cmp
ds
rorb
or
call
mov
mov
add
mov
inc
rcll
pop
int
ret
mov
popa
lahf
fnstenv
push
mov
xor
stos
les
out
xchg
pushl
faddl
leave
and
mov
into
shr
aam
xor
pop
sub
adc
xchg
push
fnsave
pop
test
and
xchg
insl
es
dec
jb
push
push
cmpsl
xlat
cmp
add
fxtract
jle
cmp
fiadds
arpl
and
repz
stc
lds
popa
stos
sbb
xlat
pop
mov
negl
or
ljmp
aas
dec
adc
pop
test
in
ljmp
sub
outsb
pop
jg
fstps
dec
in
mov
or
inc
pop
mov
das
cmp
mov
push
loope
push
hlt
push
addr16
push
lds
je
sbb
push
mov
or
repz
int
jno
lahf
daa
push
andl
mov
add
pop
pushf
aas
cmp
sub
sub
les
inc
out
and
push
adc
xchg
fcoml
xchg
lods
sub
cmp
xchg
movl
jo
mov
rcrb
cmp
into
sahf
push
ss
in
jg
push
call
adc
and
or
lcall
cli
fs
pop
fidivrl
and
or
push
cmc
dec
cld
orb
vpshufd
orb
cs
jge
add
mov
lock
cmc
push
sbb
test
or
xor
push
jno
cmp
out
mov
pusha
fs
xchg
sbb
push
adc
movsl
xchg
push
push
xchg
jns
sbb
xchg
insl
in
adc
les
cmp
xor
loope
mov
mov
xchg
lods
jbe
mov
cmp
or
jo
jae
lret
int3
inc
aas
in
xlat
leave
pop
pusha
sahf
mov
leave
fnstenv
jg
xchg
xor
addl
jge
push
jo
cmpsb
xchg
mov
xor
mov
sbb
rclb
pop
sub
add
mov
xchg
fs
mov
mov
aaa
mov
jmp
out
aad
loop
jge
cmp
cmp
push
fisttpll
mov
leave
dec
mov
lock
jge
mov
ja
mov
jecxz
fwait
and
orl
mov
stos
cmp
mov
lds
cmc
imul
jb
leave
dec
pusha
data16
push
lock
mov
or
sbb
sub
cmp
mov
xchg
rcll
ds
call
xchg
hlt
inc
pop
add
insb
sub
cmp
clc
outsb
loop
sub
das
sti
lahf
xor
push
pop
enter
cmp
cmp
sub
lret
dec
test
xorl
push
fdivl
das
cmc
cmp
mov
test
je
push
adc
push
pushf
and
popf
inc
and
sbb
int
xchg
jno
or
cwtl
sarl
jne
adc
fmuls
es
sti
mov
movsb
or
movsl
cmc
cmpsb
mov
xchg
push
fidivs
jl
fisubrs
nop
or
popa
enter
test
fcoml
push
lret
mov
dec
or
cmp
fld
loopne
cli
inc
inc
repz
push
sub
xchg
pop
xchg
insb
js
scas
mov
pop
mov
and
jnp
or
sub
add
mov
sbb
jns
jg
xlat
dec
mov
int
cmpsb
cld
std
push
mov
lahf
daa
sbb
imul
sbb
test
fisttpll
mov
xchg
cmp
sbb
dec
cmpsb
fwait
mov
fchs
xor
call
cmpsl
pop
pop
pop
fimull
xchg
dec
xchg
cmp
or
mov
enter
mov
mov
repnz
mov
xor
pop
jecxz
repnz
xlat
push
in
notb
cltd
das
out
popf
mov
popa
inc
push
push
icebp
jp
lret
cmp
repz
add
sub
mov
call
adc
addl
into
or
push
jg
imul
aaa
neg
aad
lret
adc
xchg
mov
enter
mov
or
xor
jmp
lret
dec
imul
outsl
into
inc
xor
scas
xchg
sbb
ret
mov
xor
shlb
lods
fcompl
iret
imul
or
enter
xor
gs
jb
leave
dec
andb
into
sub
repnz
dec
icebp
cmp
jnp
push
push
stos
sub
jbe
notl
je
mov
adc
neg
je
xchg
inc
push
cld
adc
clc
lret
shrl
leave
divb
loopne
mov
sbb
loope
dec
insb
call
push
das
xorb
dec
mov
jp
into
pushf
es
jg
pushf
insb
jle
icebp
pop
xor
or
orb
push
dec
push
cmpsb
pop
push
int
movsb
out
leave
sub
mov
loopne
daa
das
cltd
test
lcall
mov
fiadds
mov
pop
jbe
adc
dec
ljmpw
dec
popa
adc
lods
je
fwait
ds
fcmovb
out
pop
mov
loop
sub
cmp
pop
jae
mov
cs
inc
or
pop
test
adc
iret
out
lods
les
sbb
push
nop
dec
mov
xchg
jg
push
sbb
insb
sub
loop
mov
inc
sahf
rcrb
sar
mov
mov
sbbb
inc
xorps
ret
outsb
fs
jb
push
bound
xlat
lds
mov
movsl
mov
repz
pop
ljmp
cmp
xchg
jl
sbb
mov
adc
push
sahf
dec
lret
pop
cmpsb
inc
daa
mov
sub
pcmpeqb
mov
lods
mov
in
sbb
mov
cmpsb
jno
adc
xchg
sahf
jecxz
fs
stc
inc
push
jp
ret
daa
dec
int3
push
and
push
outsb
imul
fadd
xchg
fwait
addr16
repnz
ja
imul
andb
aaa
popf
push
imul
inc
add
fisubs
inc
or
xchg
jecxz
int
sub
mov
flds
mov
test
inc
xchg
mov
sub
sub
pop
cmc
inc
cmp
jp
fdivl
sub
mov
or
lods
sbb
inc
adc
inc
insb
xor
add
mov
rcrb
notb
xchg
stos
mov
dec
repz
mov
add
gs
xor
scas
enter
fs
jecxz
into
cmp
jge
lock
jnp
push
sahf
add
mov
out
jne
mov
jbe
pusha
scas
bound
mov
xor
mov
xor
inc
push
lahf
sti
popf
xchg
mov
movsl
inc
and
and
cmp
push
jle
daa
mov
add
mov
mov
inc
jns
mov
or
add
push
or
cmp
and
enter
sbb
call
cmp
dec
push
shlb
xor
push
lods
pop
repnz
es
cmp
cmc
jecxz
mov
mov
jnp
mov
mov
ss
pop
push
add
mov
arpl
dec
movsl
mov
in
xor
mov
cld
mov
push
dec
ljmp
incl
mov
and
scas
stc
rol
insb
bound
leave
int
call
inc
cwtl
aaa
dec
pop
rcr
sbb
mov
dec
xchg
pop
insl
test
mov
add
movsl
into
jno
xchg
or
cmp
lock
rcr
rep
insb
cs
xchg
sub
cmp
pusha
xlat
push
sbb
sbb
xchg
xchg
std
jmp
jne
call
mov
mov
sbb
xchg
push
popf
popf
ss
xchg
dec
sub
test
ret
cmp
or
leave
mov
popa
sub
call
std
mov
xor
mov
xchg
out
imul
sbb
out
cmp
stc
dec
cmp
fistl
pop
or
adc
push
sbb
pop
xor
mov
lahf
add
push
jg
pop
js
stos
xor
test
in
push
insb
call
jo
lahf
xor
mov
mov
cmp
add
jo
sarl
xor
push
pop
rcrb
rcll
jbe
aas
scas
sub
sbb
dec
xor
adc
sbb
test
repnz
xor
test
mov
int
stos
ljmp
mov
int3
mov
xchg
pop
mov
jp
jns
add
inc
out
inc
je
mov
cmp
addl
add
xchg
ja
adc
fdivr
mov
lret
fwait
pop
and
aad
or
mov
add
jmp
decl
or
sub
inc
cmp
mov
movq
inc
mov
mov
pop
imul
mov
aaa
sub
dec
dec
imul
cmp
jne
pop
jp
test
shll
loopne
cmpsl
aas
outsb
sbb
hlt
ffree
pop
cmp
shll
adc
mov
std
sti
jns
mov
sub
into
aas
call
test
loope
add
cld
xlat
sub
testb
loop
sub
dec
add
stos
mov
dec
mov
or
xor
or
js
andl
in
clc
jp
inc
sub
cmp
sub
ljmp
outsl
jae
repnz
xchg
lret
bound
stos
rcrb
adc
fidivrl
mov
ret
jle
xchg
stc
dec
mov
js
clc
push
cltd
mov
adc
add
paddd
and
enter
out
jne
ds
loop
sub
jne
dec
mov
and
xorb
lods
jns
cld
cmpsb
or
cld
inc
enter
fwait
sti
fstpt
jecxz
push
jne
dec
xchg
and
in
jae
enter
das
jnp
sbb
mov
push
sbb
jmp
cmp
nop
pop
xchg
scas
pop
pop
daa
push
pop
loopne
jae
aas
sbb
cmpsb
clc
sub
cmpsl
xchg
call
jle
bound
add
mov
imul
es
out
das
scas
cmc
pop
pushf
and
push
lahf
test
das
or
stos
je
xchg
adc
pop
xchg
sub
xchg
or
inc
jecxz
call
insl
xchg
pusha
jno
or
dec
imul
lret
in
imul
push
inc
add
mov
std
out
lds
stos
mov
lahf
push
jle
pop
insb
sub
jp
cmpsl
pop
lea
dec
pop
or
insb
sbb
push
push
push
pop
inc
mov
pushf
out
rcrl
sub
popf
popf
jnp
xorb
mov
ret
xor
xchg
push
popf
pop
call
shl
sub
lods
sub
cmpsl
cwtl
insl
stos
cltd
scas
cmp
sub
dec
clc
fisubrl
pop
inc
cmp
xor
lcall
push
js
fdivs
adc
jb
aas
cmp
push
adc
jp
test
ror
cld
jae
outsb
push
jecxz
das
xchg
mov
jb
out
out
inc
fs
jb
out
jge
cmpsb
out
js
movb
mov
jg
lahf
neg
sub
pop
pop
pop
outsl
bound
repz
add
roll
ret
jae
add
mov
cmc
sahf
mov
mov
out
aas
je
iret
sub
pushf
loop
xchg
stos
rcrl
inc
jo
test
fst
lods
das
test
inc
xchg
xchg
inc
adc
repz
add
or
sbb
push
jle
int3
ds
add
ret
fildl
lea
das
inc
cmpsb
into
rcrl
mov
xchg
dec
fwait
cmp
pop
movsl
filds
jb
adc
jo
enter
add
push
fsts
pop
cli
push
data16
das
je
xor
loop
sbb
and
fiadds
aam
mov
or
pop
leave
sub
movsl
iret
arpl
dec
test
xchg
mov
out
nop
rol
aas
cltd
sub
fisubs
stos
dec
jg
mov
mov
pop
and
mov
xchg
mov
pop
inc
and
es
sub
popa
pop
or
mov
jne
mov
in
push
xor
test
dec
dec
repnz
and
jg
clc
cmp
out
cld
loopne
jp
xor
cmp
je
pop
xchg
push
cmp
jno,pn
mov
pushf
push
icebp
pop
in
popf
mov
and
iretw
jp
cs
test
xchg
sbb
scas
nop
movsl
inc
aaa
test
insl
fbld
out
or
and
fs
fmuls
pop
and
pop
mov
mov
mov
push
out
andb
loope
sub
jb
addr16
mov
roll
repz
mov
cmp
repz
pop
jg
inc
fstl
popa
arpl
test
mov
movsb
add
mov
in
in
repz
sbb
mov
mov
stos
stos
push
xchg
xorl
add
sub
cltd
or
test
pop
or
int
xchg
jg
outsb
nop
testl
xlat
cmp
aas
jl
icebp
cld
sub
nop
sbbl
mov
loop
adc
adc
pop
pop
int
pop
fnsaves
push
pop
notl
orl
mov
out
dec
jno
adcb
cmp
sub
cltd
jle
cmp
adc
dec
xchg
fstl
vsqrtpd
imul
roll
lea
faddp
add
jne
dec
adc
in
daa
aam
jne
les
je
test
orb
icebp
dec
push
insb
pop
xchg
push
xor
push
rorl
fmulp
pop
cmp
cwtl
ss
clc
pop
push
sub
cmpsl
daa
jecxz
xor
xchg
push
dec
imul
push
imul
xchg
push
mov
fwait
in
stc
xchg
push
repz
cmpsl
ret
mov
cmp
fs
xchg
push
cmp
repnz
xchg
sub
push
or
iret
cli
sub
push
add
movsb
inc
adc
cs
mov
xchg
ss
add
jmp
jb
and
dec
mov
adc
imul
pusha
es
cmp
sub
pop
inc
ret
or
mov
cmp
movsb
mov
fdivrs
adc
xchg
add
cltd
xor
sub
mov
mov
in
or
out
xchg
in
dec
aas
cwtl
cmp
xchg
sub
jb
push
popa
cmp
js
inc
mov
ss
lods
mov
mov
push
xchg
div
mov
pop
pop
stos
in
mov
insb
in
mov
sti
lea
mov
sbbl
push
xchg
sub
lds
xor
divl
fbstp
jg
jnp
lds
inc
imul
cmp
orl
mov
mov
mov
add
push
mov
leave
jnp
fdivrs
mov
test
cmp
xchg
loopne
jmp
xchg
push
sbb
mov
push
cmp
das
xor
aaa
jnp
mov
test
jmp
mov
adc
mov
pusha
lahf
test
xlat
mov
adc
outsb
psubw
jecxz
pop
loopne
lea
subl
icebp
adc
jne
lcall
incl
clc
leave
pop
mov
cld
sti
scas
scas
mov
add
xchg
stc
mov
ss
adc
lods
std
loopne
addr16
div
and
lods
repz
xor
lahf
pusha
pop
pusha
mov
cmp
cld
inc
mov
mov
popa
ret
lcall
insb
enter
cmpsl
mov
add
jnp
cmp
mov
sub
cmp
or
fisubs
rcll
in
aad
jbe
mov
sub
in
int3
cmpsl
loop
pop
cwtl
add
jmp
sub
cmp
push
mov
or
insb
mov
xor
aaa
outsl
mov
mov
add
dec
scas
fiadds
int3
jmp
mov
data16
scas
add
int3
sti
pop
insb
mov
adc
pop
movsb
out
adc
sub
and
or
jne
repnz
mov
pop
adc
push
std
fs
negb
inc
pop
add
fnclex
std
push
mov
test
push
pop
cmp
dec
mov
pop
jne
pop
pop
mov
and
stos
aad
arpl
pushf
push
mov
pop
jns
sub
sub
inc
in
mov
movsl
adc
or
mov
sub
daa
imul
push
popa
fsubr
scas
cmp
jbe
movsb
add
inc
mov
aaa
push
lret
mov
sarb
les
repz
out
aad
push
inc
cmp
aam
sahf
sub
mov
and
and
hlt
clc
lds
cld
sbb
jae
lods
jne
xor
cld
pop
jmp
lods
das
ficomps
nop
insb
adc
mov
mov
mov
xchg
in
add
dec
lods
mov
jae
push
and
mov
loopne
popa
in
xchg
imul
jno
popf
xchg
movsl
add
pop
mov
mov
inc
push
xchg
adc
pmaddwd
mov
xor
lods
lret
arpl
addb
int3
out
push
repz
xchg
loope
das
sti
and
es
and
test
mov
leave
mov
mov
xor
xchg
lods
stos
dec
jg
mov
mov
jo
shll
add
or
insl
inc
enter
loopne
mov
push
sbb
xchg
and
mov
xlat
aas
or
pop
push
and
or
lods
stc
or
aam
xchg
lock
push
shll
pusha
jecxz
sarl
mov
mov
jp
cld
or
fistps
jg
mov
jb
lret
subb
cs
lret
xor
rolb
test
fiadds
and
inc
cmp
pop
xorb
pop
or
add
sti
xchg
mov
bound
pop
aas
push
leave
pop
lret
cmp
ja
out
pop
inc
add
pop
hlt
dec
jo
add
or
popf
sbbb
xor
push
adc
cmc
sahf
xchg
xchg
xchg
lds
jns
arpl
xor
mov
jge
dec
out
mov
pop
lods
mov
mov
jmp
and
xchg
cli
stos
inc
popf
in
scas
xorl
cld
sti
jge
movsb
xchg
aas
or
push
xchg
mov
cmpsl
dec
fcomps
shlb
add
jo
mov
xchg
xchg
loop
and
sbb
xchg
dec
sub
xchg
and
xchg
add
call
test
sbb
test
lret
lahf
xor
sti
scas
dec
and
in
das
in
mov
lahf
adc
in
xchg
sub
stos
shr
jle
xchg
jb
sbb
into
nop
push
sbb
fincstp
cmc
pushf
cltd
fnsave
subl
in
mov
in
les
pop
sub
inc
xchg
inc
sub
add
cmp
adc
sbbl
cli
push
jo
andb
call
cli
lret
stos
and
fsubrl
xlat
popf
fidivl
pop
mov
cmpsl
jl,pn
call
movsl
cwtl
pushw
aad
in
jne
dec
xchg
mov
mov
sub
cmc
mov
pop
enter
clc
out
mov
add
jmp
std
bound
lret
jmp
adc
push
cmp
sbb
stos
mov
rol
jge
fwait
xchg
mov
or
pop
mov
xor
sub
mov
inc
inc
pop
cltd
push
fbstp
lods
xor
jle
test
stos
inc
call
sbb
mov
clc
push
cltd
sbb
aaa
mov
aaa
in
and
aam
cs
popf
orl
std
int3
out
mov
jns
inc
rcrl
test
scas
dec
cmp
dec
push
push
mov
push
jno,pn
push
push
inc
lea
orl
fdivl
mov
test
mov
and
inc
xchg
clc
frstor
mov
mov
push
sbb
addb
cld
es
sub
cltd
lcall
xchg
icebp
in
push
push
sub
popf
pop
sub
push
add
xchg
jne
add
test
sbb
pop
bswap
aad
inc
lock
test
jne
inc
push
adc
inc
sbb
xor
cs
pop
gs
sbb
inc
pop
xor
and
addb
cltd
jg
mov
imul
es
arpl
mov
sub
push
in
ret
mov
mov
xor
mov
jo
icebp
xor
rcrb
mov
loop
jnp
cmpsl
test
cmp
push
stc
adc
mov
andl
clc
pop
out
xor
push
in
cmp
in
int3
shl
int
ret
sbb
cmp
sub
cmp
or
loopne
sub
xlat
cmp
mov
jnp
ds
jge
jmp
xchg
leave
std
dec
pushf
mov
fbld
out
add
xlat
lods
sti
in
nop
mov
mov
fidivrs
repz
sub
mov
aad
push
repnz
mov
je
or
mov
mov
mov
xchg
jne
incl
fisubrl
mov
sahf
int3
xor
xchg
ret
dec
mov
sub
xchg
ret
push
fs
sbb
push
aas
jns
popa
fyl2x
mov
mov
loop
pop
mov
mov
cmpb
jge
int3
cmpl
sarb
and
pop
jle
data16
cmpsl
movsb
in
loopne
mov
mov
mov
lock
stos
jle
bound
push
push
dec
rclb
xchg
repnz
adc
mov
mov
cmp
jne
jmp
rol
pop
loope
cld
mov
lea
xor
push
lret
std
dec
pop
ror
outsb
mov
aam
and
divb
aam
mov
ret
jo
loopne
xchg
scas
mov
mov
mov
test
enter
or
push
jp
mov
adc
daa
faddl
ss
ljmp
jnp
gs
pop
pop
push
jbe
mov
mov
pop
xchg
push
shrb
shll
xchg
cld
jne
mov
mov
mov
es
adc
orl
mov
pop
popa
xchg
bound
outsb
gs
xchg
aad
loop
jbe
sti
mov
and
and
mov
jg
es
xchg
iret
inc
stc
ja
dec
mov
add
loope
mov
xchg
jb
push
fsubrs
rclb
js
dec
imul
pushf
add
mov
lahf
aam
lret
lods
shrl
jne
repz
cmp
cmp
lock
je
sti
sub
jge
lods
add
pusha
lahf
aad
push
call
test
adc
out
insb
pop
xchg
mov
cmp
roll
xchg
adc
pop
bound
sbb
and
loop
add
push
fldcw
icebp
enter
cmpsl
pop
std
in
mov
in
inc
mov
pop
cmp
icebp
out
push
lods
mov
rcll
mov
sub
or
mov
sbb
imul
loopne
or
dec
adc
lds
pop
shrl
fisttps
test
and
out
adc
sub
mov
dec
shlb
push
xchg
mov
fistl
pop
les
in
mov
pop
push
and
out
movsl
wrmsr
sub
cmp
inc
and
fwait
jo
add
negb
push
cmp
or
mov
aaa
dec
xor
ja
test
or
loopne
imul
mov
mov
mov
mov
pushf
nop
arpl
outsl
out
aaa
xchg
das
shl
pop
pop
shrb
sbb
mull
push
inc
aad
and
push
sarb
jp
bound
cmp
enter
fcmovb
inc
jmp
mov
int3
push
adc
pop
es
int
ret
push
imul
inc
jecxz
daa
mov
cmc
mov
xchg
pusha
jb
jge
and
inc
cmp
mov
mov
stos
mov
cld
and
jne
dec
push
push
sahf
mov
and
arpl
sbb
sbb
jae
lock
xchg
sub
sub
lods
mov
mov
add
sahf
cmpsl
sbb
pop
rcrl
loope
push
cli
push
mov
add
adc
add
negb
pop
sub
jg
pop
mov
aad
lods
xlat
or
jmp
dec
in
jne
jno
add
inc
and
cmp
mov
sbb
xchg
push
dec
xorl
fidivl
mov
fdivrl
leave
arpl
push
bound
inc
jge
test
cmp
movsb
or
outsb
loope
icebp
sti
cli
popa
mov
es
por
add
imul
cmpsb
pop
lds
adc
hlt
mul
xchg
or
loop
mov
sub
imul
push
ss
dec
outsb
repz
mov
push
sub
iret
inc
pop
fwait
jnp
loope
sub
inc
inc
pop
xchg
popf
mov
test
push
push
rorl
jmp
sbb
imul
push
mov
pushf
fs
xor
std
call
push
push
add
hlt
jecxz
mov
push
stos
pop
ss
fisubl
cmc
adc
mov
mov
inc
inc
push
mov
repnz
sbb
fs
mov
lret
lods
sahf
fs
shlb
nop
dec
lahf
mov
adc
scas
pop
mov
mov
fdivrl
mov
and
shl
push
mov
punpckldq
push
sahf
sbb
sahf
andnps
nop
or
push
loop
xchg
int3
sti
pop
in
js
stc
sbb
xchg
adc
insb
or
mov
bound
fnsave
sub
xor
repz
add
arpl
mov
adc
cli
push
mov
add
push
pop
out
adc
xchg
fisubrs
aas
pop
int3
mov
stos
mov
or
in
mov
sahf
pop
aam
shlb
data16
gs
fs
jle
pop
lods
insl
fnop
or
insb
mov
in
sbb
nop
mov
imul
rcrl
aaa
pop
popf
jmp
adc
nop
fs
test
mov
push
pop
jmp
ds
clc
and
in
xor
pop
push
add
pop
or
pop
mov
mov
in
not
pop
xor
stos
mov
ret
jp
sti
insb
and
sbb
or
movb
push
pop
xlat
mov
mov
fcoml
roll
cld
pusha
das
xorl
outsb
aaa
fidivs
dec
ljmp
imul
sahf
mov
dec
pop
or
jg
cmp
loop
fwait
jnp
outsb
add
lret
cmc
adc
mov
outsb
loope
sub
jp
dec
jmp
fmul
faddl
out
push
add
add
cmp
and
cmpsb
arpl
dec
out
bound
ss
sbbb
arpl
in
js
lret
dec
mov
jb
pop
bound
inc
or
jg
cmp
scas
push
out
lret
jp
filds
and
hlt
xor
xor
popa
icebp
sbb
jbe
dec
add
adc
lods
mov
leave
lock
ljmp
mov
and
icebp
rolb
outsl
xor
sub
pushf
jnp
ret
arpl
inc
pop
sbbl
out
jmp
lods
in
inc
stc
xchg
push
pop
add
xlat
aaa
adc
dec
out
outsb
sahf
popf
xchg
mov
aaa
int
outsl
sub
jnp
imul
imul
ror
push
pop
mov
inc
cwtl
xchg
shll
mov
add
mov
push
jae
popf
and
inc
les
sub
mov
cmpl
push
subl
jnp
push
sub
shr
cmp
fbstp
xchg
test
test
aam
jg
out
xor
ret
jg
scas
mov
dec
jb
sbb
mov
mov
sbb
mov
mov
push
or
mov
scas
ret
lock
subb
dec
mov
les
cwtl
pusha
repz
mov
add
xchg
push
dec
push
and
pop
lahf
ja
clc
aaa
push
add
dec
mov
shll
fiaddl
outsl
daa
and
lahf
or
out
dec
add
sbb
mov
adc
mov
dec
inc
cmc
into
lret
jg
inc
sahf
pop
add
xchg
cmp
pop
iret
sti
xchg
lods
pushl
or
sti
cltd
xchg
int3
push
mov
dec
pop
sarl
xor
mov
gs
sbb
push
xor
cmpl
popa
rcl
fstps
mov
xchg
ficompl
xor
sub
sbb
jno
mov
addl
add
pushf
mov
popa
stos
cmc
adc
xor
xlat
imul
inc
cltd
jle
lret
or
adc
jne
test
adc
imul
int3
mov
pop
adc
jmp
xchg
fs
or
sahf
jo
adc
fsubr
cmp
push
stc
jecxz
add
jne
mov
imul
lods
jecxz
and
loope
or
cmp
pop
mov
outsb
sub
shll
test
jae
sbb
mov
imul
subl
fmull
rorl
aaa
xchg
push
ret
or
add
pop
lds
cwtl
notb
imul
cmp
dec
and
pusha
fs
ds
push
std
or
ss
mov
stos
and
inc
xchg
mov
or
xor
or
mov
clc
repnz
sbb
fisubrl
aaa
data16
insb
ret
pop
orl
inc
imul
jne
test
add
mov
cmp
mov
test
xchg
add
adc
loopne
mov
push
xor
jp
dec
sbb
xor
or
push
in
imul
lods
jmp
rolb
les
pop
pop
icebp
mov
rcll
add
jae
cltd
ds
scas
pop
mov
stos
in
scas
je
jne
les
sbb
fs
cmpsb
xor
ret
xchg
add
daa
lock
lret
dec
dec
lea
fiaddl
or
push
push
xchg
outsl
lock
pop
aas
push
scas
sbb
and
out
sbb
xchg
rcrl
inc
lds
es
sahf
scas
lret
lret
push
pop
xchg
lahf
add
popa
cld
mov
into
pop
and
ss
sub
xchg
mov
mov
mov
test
pop
xor
push
add
lea
pop
push
outsb
insl
notb
dec
les
shrb
dec
pop
jns
sub
push
push
cs
insb
rolb
ja
inc
adc
and
lret
push
stos
stos
es
lret
stos
adc
push
adc
dec
ds
in
and
cli
dec
ja
dec
xchg
xor
je
lock
testb
or
mov
add
in
xchg
push
nop
mov
mov
push
inc
call
and
les
lea
sub
mov
mov
pushf
jecxz
add
icebp
jl
xor
out
sbbb
dec
rcr
inc
mov
outsl
sub
cmp
repnz
cltd
inc
test
jp
add
ds
xchg
std
jecxz
call
mov
jge
lret
mov
xchg
repz
xchg
cmp
xor
xor
sahf
xchg
fsubs
pop
adc
sahf
loope
jecxz
xchg
cltd
mov
in
cwtl
leave
xorl
mov
mov
cmp
clc
cmc
dec
push
and
dec
js
push
hlt
jmp
mov
cltd
xchg
scas
aaa
leave
fs
cs
push
cli
addl
cmp
cmp
inc
or
sbb
push
es
dec
popa
xor
or
cmp
mov
jge
lret
test
xchg
cmp
inc
adc
and
inc
out
xchg
xchg
imul
jb
push
pushf
call
push
std
dec
arpl
pop
jo
jg
sub
iret
add
aaa
and
addl
xchg
icebp
mov
jbe
push
cmp
sbb
rol
fisttpl
aas
nop
mov
jg
pop
mov
push
xchg
ret
inc
je
fwait
imulb
sub
lret
xchg
ucomiss
sbb
dec
scas
add
jno
xchg
mov
mov
inc
repnz
std
or
les
xchg
scas
arpl
loopne
sahf
gs
ljmp
dec
hlt
cmp
sti
out
dec
and
and
lock
mov
xor
or
sahf
cs
cmp
or
lods
js
mov
clc
sbb
out
mov
mov
js
xor
stos
dec
iret
outsb
xor
inc
out
insl
es
xchg
push
push
and
jb
fwait
out
and
out
cmp
bound
ss
ds
push
xchg
pushf
jmp
jge
fldl
bswap
mov
add
xlat
rclb
inc
mov
push
xchg
leave
insl
repnz
pusha
mov
sbb
pusha
repnz
lea
pop
rcll
ss
not
or
or
in
sub
or
add
sub
in
push
aaa
call
mov
ret
xchg
fwait
pop
sub
xor
cli
pop
and
imul
xchg
popa
or
cmp
dec
mov
sbb
or
jae
push
ljmp
push
mov
and
outsl
pop
push
mov
daa
or
insb
mov
xor
call
or
sub
faddl
cmp
in
bound
mov
ds
dec
mov
test
mov
pop
pop
jne
jno
idivl
sbb
mov
hlt
fstps
inc
sub
loopne
add
leave
push
scas
repz
divl
jge
jns
in
and
push
shll
mov
jge
mov
mov
jg
xor
or
mov
inc
arpl
add
adc
in
dec
xchg
mov
xchg
add
or
test
jle
and
pcmpeqd
sub
stc
out
adc
lret
lea
outsl
push
pop
jbe
pop
rol
sbb
mov
dec
test
sbb
insb
loope
stc
insl
inc
and
mov
cs
popl
push
mov
or
add
loop
fmul
mov
jmp
jecxz
xlat
push
and
mov
les
push
mov
cmpsl
pop
and
sub
mov
cmp
cld
pop
mov
inc
ret
or
test
and
movsl
mov
addr16
sub
aam
in
push
cld
in
jmp
dec
enter
movsl
pop
inc
or
or
xor
jle
cmpsb
jge
xor
aaa
cmp
mov
call
sub
lea
aad
fldl
inc
dec
mov
inc
ja
hlt
xor
pop
fnstcw
cmp
xchg
jg
push
jno
outsl
push
jb
pop
xor
jp
and
rcl
cmp
ss
cmp
imul
jge
ds
loopne
cmp
shll
ret
mov
aad
mov
jge
xor
lods
jb
into
cwtl
std
push
je
inc
xchg
bt
push
cmpsl
fildl
jl
cmp
fstpl
push
outsl
aad
lahf
cmpsl
and
push
or
daa
cmpsl
inc
das
adc
jp
sub
mov
inc
pop
fimuls
loope
mov
and
stos
clc
shl
bound
mov
push
or
inc
fdivrl
pop
mov
mov
mov
cwtl
mov
out
cmp
in
shrb
call
sbb
cmc
xchg
add
hlt
sub
and
adc
test
ljmp
mov
outsb
ficoml
or
aad
sbb
mov
jle
pop
cltd
mov
adc
bound
push
aaa
lods
jbe
sahf
cld
es
push
cmp
mov
adc
or
lahf
int
xor
jp
inc
adc
xor
sti
inc
add
aad
aaa
fs
daa
xor
arpl
jge
test
loop
xchg
rcl
cmp
lock
pop
popf
sbb
imul
jp
hlt
shrl
adc
cmp
rclb
mov
cmp
pop
jg
cwtl
inc
ret
test
adcb
pcmpeqw
fwait
add
pop
lcall
lds
sub
js
sub
dec
lds
test
ljmp
pop
ljmp
stc
pop
iret
add
mov
push
icebp
lcall
xor
les
push
subl
test
inc
push
sbb
jae
sbb
sbb
or
addb
xchg
add
add
enter
mov
mov
das
push
fstpl
push
sbb
mov
cmp
inc
ljmp
mov
dec
and
mov
jge
ds
or
sbb
or
stos
xchg
dec
pushf
add
ss
aam
pcmpeqb
leave
dec
and
mov
out
das
add
lret
ljmp
push
xchg
pop
pop
addr16
outsl
pop
xchg
enter
push
xchg
push
inc
mov
ret
nop
mov
and
scas
movsb
add
dec
mov
mov
dec
or
and
adc
clc
outsl
cmc
cmp
into
leave
lret
push
pop
xchg
fnstenv
rcr
jg
sbb
sti
cmc
fldlg2
jmp
cmpsb
sti
ret
sub
andb
mov
xchg
jg
jp
xchg
fsubrs
dec
xorl
jge
pop
mov
arpl
or
popa
das
shlb
pop
xor
stos
adc
mov
sbb
roll
sub
xor
in
jne
adc
xor
xchg
lock
pop
iret
pop
xchg
js
push
push
push
negb
mov
pop
jbe
add
iret
add
sbb
pop
data16
xchg
xor
mov
iret
popa
mov
push
lret
xor
lea
iret
ficoml
idivb
sti
inc
sub
js
clc
icebp
aaa
incb
mov
pop
rorb
cld
mov
and
or
es
cld
je
or
jnp
cmp
lods
cmpsb
pop
mov
ss
jns
adc
addr16
lods
lret
sarb
pop
jns
push
in
fsub
mov
xor
shlb
loopne
repnz
add
out
stos
jmp
outsb
pop
and
imul
add
jl
mov
jle
mov
xchg
test
lods
imul
fs
popf
xor
pop
jns
int
mov
scas
push
jmp
cmp
cmpsl
decl
sbb
or
and
sub
into
scas
cmpsb
hlt
mov
fwait
out
scas
sub
loop
sub
repz
movsb
stc
ficoms
pop
divb
cmovge
cld
je
sub
test
fisttpl
push
jbe
dec
sbb
sbb
jg
loope
loopne
mov
sbb
sbb
hlt
subb
loop
pop
ds
push
or
dec
or
test
lcall
int3
inc
das
inc
adc
cmp
and
xchg
mov
das
cmp
and
and
cmpsl
sbb
mov
out
cmpsl
push
clc
adc
loope
lret
int3
scas
mov
insb
sbb
mov
inc
in
repnz
cmp
xor
loop
js
mulb
sbb
stos
lods
pop
mov
call
shll
sub
and
in
fsubrl
movsl
cmp
dec
imul
arpl
push
adc
xor
add
das
add
test
push
jecxz
push
jno
add
aaa
push
xchg
sub
or
mov
ss
inc
xchg
mov
popa
or
mov
or
pop
out
je
dec
dec
sub
es
mov
fsubp
push
subb
jne
movsb
stos
or
mov
sub
test
adc
add
jae
and
test
or
jg
inc
push
mov
mov
enter
mov
dec
rol
nopl
sbb
int3
inc
int3
sbb
fwait
xchg
push
pop
add
xor
mov
sub
lahf
insb
call
and
mov
jmp
jecxz
call
jae
mov
ror
arpl
push
adc
inc
test
and
jo
lods
add
rcrb
nop
dec
and
daa
sbb
aad
add
adc
dec
cmpsl
aad
inc
ret
insl
and
aad
adcl
mov
fnsave
lea
dec
aad
mov
loopne
pop
mov
or
int
jne
and
loop
fimull
in
sbb
cmc
sub
hlt
xor
shrb
cmp
mov
sub
push
or
add
stos
or
pop
mov
ds
xchg
sti
popf
outsl
mov
mov
lret
lahf
rcrb
sub
cmpsb
into
mov
daa
stos
dec
mull
movsb
stos
in
lahf
push
cld
xor
andb
out
test
push
iret
popa
cmp
xlat
push
aaa
dec
lods
das
shll
ljmp
cmp
movsl
cmc
mov
mov
jl
movsb
mov
add
imul
mov
cmpsb
ja
lods
and
add
dec
dec
dec
or
icebp
aaa
add
xchg
lret
adc
xor
cmp
out
dec
std
xor
insb
mov
dec
out
inc
inc
mov
xchg
mov
push
mov
ret
pop
cmpsb
inc
mov
add
lods
pop
fs
js
xchg
mov
add
scas
sbb
popa
jno
pop
mov
push
mov
sub
mov
inc
sub
xlat
jo
outsl
leave
test
test
notb
fdivs
inc
or
mov
int
mov
pop
sub
in
inc
mov
roll
dec
xchg
xorl
data16
xchg
psllw
stos
add
in
xor
mov
push
mov
or
clc
ds
mov
sti
jmp
mov
jp
shrl
test
push
and
aaa
aaa
fcmovnbe
cmp
adc
adc
push
ja
fistpl
add
jge
push
pushf
xor
leave
cmc
aad
pusha
sarb
cwtl
push
push
cmc
jo
in
nop
mov
adc
jmp
dec
dec
in
fildll
pop
push
aaa
inc
pop
pop
pop
fstps
stc
jae
add
cmp
lcall
inc
mov
aam
in
cltd
in
xchg
inc
pop
inc
testb
pop
jle
iret
push
mov
xor
fstl
imul
dec
gs
cmp
cli
cmc
jge
into
xchg
jle
sbb
dec
lea
divb
adc
repz
cli
daa
mov
add
lret
stos
or
push
in
adc
je
jae
cmp
xchg
ret
add
mov
mov
sbb
repnz
cwtl
ja
nop
mov
mov
xor
dec
xchg
xorb
rcrb
nop
xchg
inc
ret
mov
cwtl
jmp
call
movsl
push
bound
hlt
xchg
lods
cmpsb
sti
dec
jbe
jns
repnz
mov
movsl
mov
cmp
adc
dec
lahf
hlt
call
outsl
pop
lds
cmp
popaw
shll
test
jecxz
and
cld
iret
scas
or
adcl
pop
pop
scas
cltd
clc
mov
in
pushf
push
stc
mov
dec
dec
mov
scas
clc
mov
sub
movsb
jne
lcall
push
xor
sub
fisubrs
imul
jne
pop
mov
ljmp
std
mov
jae
int
pop
sub
addl
push
push
push
stc
pop
sbb
jecxz
jne
mov
sbbb
das
dec
lds
xor
push
jecxz
inc
popa
inc
adc
loope
lret
mov
push
ret
mov
shll
and
mov
ret
fsubr
lds
insl
xor
inc
pop
js
fistpll
jp
std
int3
sbb
pop
sbb
jl
pop
push
push
xchg
push
xor
add
cltd
mov
xor
push
mov
jge
fst
mov
sub
xchg
inc
pop
mov
mov
pop
in
insb
xchg
add
loope
loopne
push
sti
vmwrite
fistpll
push
mov
std
sub
out
sub
or
ja
pusha
adc
or
les
aam
xchg
das
adc
pop
mov
mov
addr16
aam
fnstsw
add
test
mov
andl
sub
pop
outsl
sub
hlt
xchg
jb
enter
lds
ja
pop
imul
xchg
adc
add
lahf
repz
stos
push
sub
ficoms
dec
lods
jno
lods
push
mov
xor
mov
mov
lret
mov
icebp
test
das
and
iret
pop
push
lods
scas
icebp
cmp
cli
sarl
and
ja
call
repnz
xchg
adc
xor
adc
lahf
lods
mov
call
lea
or
inc
mov
mov
mov
cmc
pop
adc
outsl
loop
test
xor
mov
leave
inc
cmpb
sub
and
inc
call
ret
push
mov
outsb
add
outsl
repnz
insl
lods
cmp
in
push
pslld
test
and
sbb
jo
aad
inc
stc
in
inc
mov
out
gs
popf
push
in
les
xchg
aas
jb
js
in
jbe
dec
out
inc
into
in
pop
rcrl
mov
repz
sub
loopne
mov
lock
dec
pusha
mov
adc
in
mov
push
rclb
jbe
imul
dec
xchg
xchg
mov
dec
fstpt
inc
sub
adc
jae
push
or
or
cld
ljmp
mov
cli
xorb
sub
fnstenv
mov
insb
cmp
popf
or
cmp
fstl
sub
or
mov
arpl
adc
scas
ja
add
ficomps
adc
dec
cs
cmova
cwtl
xchg
jmp
or
notl
ljmp
clc
mov
dec
shrb
punpcklwd
sahf
xchg
push
jge
inc
sub
ficoml
sbb
sub
inc
int3
pop
inc
stos
sti
push
shlb
in
test
cmc
inc
push
mov
jnp
mov
and
sbb
mov
mov
mov
mov
ds
cbtw
xchg
jl
das
rolb
dec
fidivs
mov
cmp
adc
mov
mov
rorb
push
sbb
xorb
fs
test
mov
mov
std
cmp
pop
push
cld
in
push
or
xchg
push
and
push
inc
loop
js
or
or
clc
xorb
dec
into
mov
test
and
push
lret
ljmp
ret
scas
xchg
pop
iret
jb
mov
sti
fidivs
out
xchg
sbb
lods
out
inc
lds
xor
cmp
into
mov
inc
xchg
pop
sbb
ret
daa
inc
addb
rcrb
sahf
mov
ror
sbb
inc
jl
ror
pop
xchg
mov
stos
in
xor
and
inc
xor
pop
jbe
or
adc
xchg
mov
imul
add
sahf
leave
cmpsb
jbe
sbb
jbe
push
jecxz
bound
call
or
sbb
sub
sbb
shll
cmc
jg
bnd
lock
hlt
lret
ds
pop
cli
push
adc
mov
add
imul
xchg
in
inc
cmp
push
out
cmp
xchg
mov
lds
lock
pop
out
mov
lret
or
mulb
pop
inc
and
and
outsl
out
in
in
sbb
ficoml
push
lods
or
push
mov
and
jecxz
mov
pop
mov
inc
loopne
xor
rorl
loope
stc
cmpsl
pop
repnz
add
loop
clc
das
pop
cmpsb
daa
pop
inc
pop
in
pop
icebp
notb
mov
inc
dec
inc
and
sub
sbb
dec
mov
mov
sbb
jo
xchg
inc
jne
cmp
sub
push
ja
jmp
fisubs
mov
test
das
decb
adc
mov
pop
jbe
add
inc
test
sbb
addr16
shlb
mov
sub
pop
pop
lret
xchg
jge
inc
fdivrs
icebp
gs
sbb
mov
dec
gs
mov
mull
mov
lcall
fadds
mov
movsl
xchg
xor
push
ja
cmp
or
lcall
imul
mov
test
lret
xchg
cmp
xor
fstps
call
aaa
xchg
add
sub
pop
iret
xor
xor
xchg
pop
stos
outsl
sbb
dec
push
adcl
cmp
dec
push
rep
jg
adc
mov
mov
insb
test
pushf
fcompl
mov
mov
stos
fcoms
xor
adc
shll
add
in
push
imul
and
ja
outsl
insb
sti
inc
xor
mov
xchg
jp
push
dec
and
xor
imull
add
xchg
or
mov
cmp
stos
rcrb
out
in
loopne
dec
enter
mov
pushl
cmpsl
xchg
sub
xor
lret
dec
inc
mov
pop
push
ss
mov
mov
xchg
loop
xor
rolb
aas
jo
aas
push
icebp
movsl
rorb
xchg
sub
repnz
mulb
mov
push
xchg
xchg
adc
xor
inc
enter
pop
ljmp
push
test
or
cmp
or
jl
in
inc
divl
mov
mov
mov
mov
lret
push
jmp
sub
loope
in
mov
insl
push
xor
pop
cli
aad
daa
clc
mov
mov
pop
xchg
int3
xor
emms
cmc
xchg
in
sti
dec
js
lods
div
scas
fs
mov
mov
sbb
cwtl
lahf
addr16
insl
add
push
cmpsb
cmpsl
repnz
sbb
scas
or
inc
pop
popf
adc
mov
lods
xchg
fsubrs
xchg
jle
fbstp
xchg
lock
xchg
cmp
int
jbe
sahf
push
adc
add
pop
cmc
xor
sub
or
mov
inc
sub
dec
mov
lahf
mov
outsl
sarb
cmp
or
mov
sbb
pop
cld
in
sbb
mov
push
or
popf
fsubs
stc
ja
std
jge
push
or
or
cld
sbb
or
sub
ret
cmc
adcl
pop
inc
adc
xchg
mov
repnz
xchg
dec
into
add
pop
rorl
and
stos
add
cmp
inc
test
mov
into
arpl
das
mov
push
or
data16
add
repnz
sub
mov
rolb
ror
mov
pop
mov
cli
sub
inc
movsb
sbb
cmp
sbb
xor
out
inc
fcomi
notb
mov
push
rcr
in
loop
jg
mov
addr16
mov
out
call
push
mov
cmp
lcall
dec
fs
stos
jbe
jnp
fadds
js
jp
inc
inc
cmpsb
push
fimuls
ljmp
int3
xchg
aad
addb
jb
xchg
lods
mov
lea
pop
test
lret
jle
int3
lret
push
jne
pop
stos
sbb
sub
jl
lods
add
fisttpll
mov
fistl
enter
inc
mov
test
push
repz
mov
lds
inc
push
pop
sti
mov
push
push
xchg
fadds
loop
fbstp
fidivs
aas
mov
sub
cmpsl
leave
aaa
stos
mov
mov
test
fists
out
mov
xor
dec
cli
or
loopne
jmp
in
nop
push
sbb
into
xor
dec
in
mov
addl
mov
jb
arpl
xchg
cmp
imulb
cmc
aaa
push
cmp
sub
decb
and
pushf
pop
sti
ret
popa
ss
push
or
and
sub
clc
push
xchg
lods
dec
dec
xchg
aas
daa
lock
dec
addr16
mov
sbb
jo
and
add
repnz
jge
out
or
jmp
cmp
pushw
cli
cmpsb
pop
sbb
jnp
sbbb
lock
jae
lret
sub
sarl
mov
sub
mov
pop
jnp
test
jl
sahf
and
stos
icebp
iret
repz
pop
add
jo
mov
push
out
fmuls
icebp
mull
pop
cmp
xchg
into
cmc
icebp
xchg
aas
js
pop
sub
xor
xor
aad
and
or
add
or
int
out
fcomip
data16
sbb
loopne
ss
shrl
mov
sub
push
dec
sbb
jmp
lret
das
fistps
in
scas
cs
lcall
xchg
outsb
jno
in
popf
ret
and
std
scas
cli
jbe
mov
dec
jae
stc
xchg
xchg
pop
lock
mov
inc
sub
test
lds
pop
add
xlat
inc
mov
je
xor
dec
loopne
pushl
fistpl
jns
popf
mov
fwait
add
sub
mov
and
dec
pop
push
movsb
fnstsw
int
adc
jecxz
xor
pop
imul
aas
push
scas
mov
popf
inc
stc
test
test
addb
lea
mov
loope
sub
pop
mov
push
adc
loope
or
test
into
mov
jecxz
cmpsb
aas
outsl
add
xchg
jl
push
mov
mov
push
ffree
ljmp
or
adc
out
popf
cmp
xor
jecxz
sarl
inc
push
sti
pop
sbb
aas
sub
xchg
pop
xchg
jle
incl
mov
jle
mov
nop
pushf
adc
mov
insl
lds
cmp
jnp
sbb
repnz
mov
sbb
repnz
push
pop
cmp
cld
sbb
dec
scas
mov
fiadds
jnp
xchg
mov
loope
sbb
outsl
mov
mov
adc
loopne
mov
inc
push
nop
sbb
nop
scas
shll
sahf
push
out
push
push
in
in
adc
test
mov
rcrl
addb
mov
xchg
push
add
dec
sub
or
lcall
cmc
lds
mov
lea
jecxz
mov
cmpsb
cmp
jge
hlt
call
jae
sbb
imull
lahf
pushf
jl
repnz
jg
in
aaa
or
xor
add
lret
rcrl
leave
lret
aam
add
xchg
jb
insl
lcall
mov
jno
push
inc
stc
inc
xor
cld
aad
sbb
sub
lret
rcl
lds
or
test
inc
loope
fcoml
jl
les
lcall
fimull
mov
jg
cmpl
jae
adc
cmp
mov
or
pop
push
jns
pop
sbb
add
dec
enter
mov
add
xchg
inc
jb
sbb
push
decl
mov
mov
sbb
shrl
xor
xchg
fnstcw
jmp
xchg
or
test
lds
jae
hlt
push
jp
cmc
les
stos
addr16
xor
cmp
cmp
outsl
js
aas
lods
xor
mov
and
mov
insl
xor
pop
cld
sarb
sbb
ret
loopne
sbb
repz
hlt
sbb
push
push
push
adc
lods
out
pop
ds
push
pusha
jae
or
pop
mov
mov
call
ret
mov
jge
pop
bound
movsl
hlt
mov
xchg
xchg
xor
jne
xor
dec
call
mov
xlat
in
rclb
loopne
push
pusha
adc
xchg
inc
cs
mov
imul
sbb
lods
push
popf
es
sbb
lods
cmp
mov
cmp
sub
or
xchg
add
xchg
mov
stc
cmpsb
add
dec
dec
and
and
addr16
xor
aam
inc
mov
cmc
dec
mov
adc
and
cmp
ret
push
lahf
and
dec
jmp
mov
aas
and
sub
pop
fdivrs
int3
mov
cmc
xchg
mov
mov
loopne
xor
push
pop
jge
dec
jecxz
xchg
sarl
andl
orl
mov
jecxz
jb
lret
mov
in
sub
popf
repz
cs
or
push
jbe
popf
cmp
or
stos
push
mov
jbe
and
idivb
fldt
adc
outsl
repnz
call
aam
mov
fildll
out
icebp
sub
inc
sbb
scas
mov
icebp
jecxz
aad
fiadds
std
insb
or
decl
cli
test
add
add
mov
sbb
xchg
fstps
dec
sub
out
or
roll
jecxz
enter
out
shrl
inc
sub
rcrl
lods
fildl
insb
sbb
fsubrl
cmp
lock
ds
mov
es
xchg
ret
scas
xchg
push
mov
jmp
push
lock
mov
scas
arpl
insb
fwait
loopne
pop
push
adc
outsb
cmp
or
out
loop
mov
repz
sub
cmp
fistpl
int3
jae
roll
nop
inc
enter
mov
xchg
and
rorb
dec
pop
nop
dec
pop
and
xor
cmp
xchg
cmp
imul
dec
and
and
enter
push
cld
xor
mov
inc
jmp
test
dec
pop
dec
adc
lret
push
nop
add
jo
lods
dec
push
out
cld
bound
lcall
aaa
ret
mov
clc
sbb
or
test
mov
push
add
mov
mulb
jg
nop
mov
idivl
add
push
mov
cmp
sbb
push
sbb
test
inc
out
out
dec
jge
xlat
xchg
pop
ss
inc
pop
pop
clc
dec
and
cmp
lds
push
fmuls
mov
dec
pop
in
jbe
adcb
xchg
add
int3
subl
dec
outsb
adc
out
jnp
jp
inc
or
out
pop
pushf
pop
daa
or
add
in
jcxz
jmp
pop
and
cwtl
inc
xchg
dec
push
pop
sub
aad
mov
iret
div
jae
loopne
ret
daa
fidivs
cmc
push
int
rol
xor
cs
fldl
jo
mov
inc
gs
mov
rcl
inc
insl
arpl
or
push
xor
test
push
jle
popa
sub
iret
mov
stc
sbb
xchg
inc
push
pop
stc
stc
testb
repnz
das
mov
xchg
jp
mov
fwait
jle
out
mov
jmp
movsl
adc
dec
or
clc
movsb
mov
mov
lock
dec
adc
sbb
negl
dec
xchg
aam
adc
cs
loop
mov
imul
mov
mov
loopne
jg
adc
ss
jg
shl
mov
pop
lds
adc
popa
sbbl
jbe,pt
lds
ret
sbbl
das
sbb
mul
add
test
sub
jo
pop
jge
es
or
pusha
lea
lods
adc
sub
dec
xchg
je
ret
mov
addb
lret
push
mov
aad
or
sbb
addb
roll
mov
out
ret
or
outsb
xor
ljmp
lret
leave
xchg
leave
ret
flds
mov
pop
mov
cmp
pop
lret
stos
inc
push
xchg
push
mov
sub
sub
arpl
dec
out
mov
call
cmp
repz
mov
dec
repz
inc
push
in
daa
mov
test
mov
mov
lcall
pop
pushl
push
xchg
mov
pushf
or
stos
scas
es
ret
je
inc
cmp
jl
and
mov
cmp
ds
lcall
cmp
mov
inc
push
gs
lahf
mov
cmpsl
mov
popa
jo
fmuls
cli
fstpl
stc
cs
imul
sbb
ficoms
pop
xor
pop
inc
lret
push
inc
or
dec
mov
push
aad
outsb
push
xorb
or
pop
adc
push
testb
repz
push
cmpb
js
mov
xchg
and
ficomps
inc
imul
negl
pop
xchg
stos
outsb
sbb
outsl
xor
push
enter
icebp
loop
insl
or
repnz
xorb
mov
icebp
xchg
push
mov
mov
mov
inc
cmp
add
jno
daa
or
add
sahf
mov
xlat
sub
push
aas
or
mov
ret
cmp
je
mov
fcomp
cmpsl
pop
aad
mov
pusha
mov
adc
out
jle
out
dec
cmpsl
es
imul
test
lods
xchg
jne
jo
pop
les
jge
and
adc
std
outsl
movb
aam
fucomip
les
insl
xor
into
sub
xchg
mov
dec
xchg
mov
pusha
jns
fistps
sbb
cli
mov
add
jno
dec
mov
aam
aaa
addr16
or
sbb
mov
out
ficoms
into
jae
jno
adc
mov
mov
xor
decl
dec
mov
push
in
cmpsl
lods
push
icebp
mov
add
jl
xor
imulb
pushf
cmp
lds
xor
xor
push
cs
jae
mov
bound
roll
call
int
and
out
in
rcll
hlt
ret
add
aas
lock
data16
movl
mov
sbb
imul
call
or
mov
mov
movsb
or
mov
sbb
enter
xchg
adc
jnp
xor
adc
and
jns
add
and
push
pop
insb
jge
leave
pop
aad
xor
bound
add
rorl
pop
testb
jmp
push
mov
je
xchg
ss
adc
jl
dec
jp
mov
pushf
adc
sarb
pop
rorl
push
cmp
std
fsubs
mov
add
dec
in
in
in
add
das
neg
sahf
adc
dec
fsts
not
pushf
jo
lea
aam
clc
xchg
jne
insb
sbb
fnstsw
pop
les
sbb
mov
xor
jo
sti
mov
add
or
dec
dec
ja
mov
scas
repnz
mov
in
sbb
into
iret
and
pop
add
sbb
int
xchg
ret
mov
inc
aas
fnstsw
add
ret
and
fnsave
test
fldenv
sbb
stos
pusha
add
insb
pushf
stos
mov
fcmove
and
stos
mov
pop
js
xor
mov
inc
fcmovne
sti
mov
xlat
bound
lahf
mov
inc
rcll
lods
scas
xlat
ret
lea
gs
iret
lcall
push
pop
fisttps
adc
inc
jge
adc
or
cld
iret
dec
outsl
mov
std
dec
mov
in
aaa
jnp
xchg
jp
push
sub
les
push
ret
jb
pop
adc
fs
pusha
les
in
es
jge
loope
jne
nop
stos
ss
pop
or
push
push
sub
outsb
ja
stos
fists
sbb
mov
mov
add
mov
mov
aas
adc
xchg
jns
jns
lea
mov
xchg
ficompl
sahf
inc
ret
adc
test
notb
out
movsb
mov
movsb
xor
test
inc
enter
xchg
jmp
lods
mov
jnp
lret
dec
lods
sbb
insl
adc
vmaxss
in
mov
fsts
enter
arpl
ds
pop
push
add
test
clc
mov
cmp
jmp
push
xchg
xchg
shl
nop
xchg
adc
pop
add
lods
add
sub
sub
dec
xchg
jnp
mov
sub
mov
xchg
imul
pop
decb
outsl
mov
idivb
into
mov
jle
test
movsb
mov
into
shrl
sarb
cmp
stos
sub
das
movsb
jl
pop
cltd
jno
sahf
mov
sub
jno
subl
jnp
pop
imul
sbb
dec
and
ljmp
adc
mov
sti
lods
pop
popa
insb
pop
jmp
test
test
pop
add
jmp
int
add
mov
mov
nop
sub
cs
xor
pop
push
or
cli
push
aaa
mov
mov
fcomip
filds
icebp
movsl
inc
into
mov
insb
push
pushf
xchg
sbb
pop
je
mov
push
cmp
nop
or
cmp
fdivr
sbb
fcmove
les
mov
in
pushf
jmp
cmp
rol
imul
lods
inc
push
xchg
pop
sete
and
adc
int3
xbegin
movsl
lahf
pop
sbb
cmp
repnz
pop
notb
add
cmp
pop
sub
fstp
cmpsb
imul
lret
shlb
xchg
xchg
stos
mov
inc
std
or
mov
fimuls
lret
lea
jp
jl
jmp
out
mov
in
inc
jnp
mov
dec
jecxz
testl
lcall
xor
xor
xchg
movl
xor
pusha
and
fdivr
or
sbb
jbe
rcll
cmpsl
iret
movsl
add
stos
inc
and
push
inc
xchg
lods
into
mov
xor
jnp
mov
and
sub
dec
jns
mov
cli
bound
shrb
das
hlt
sahf
leave
out
xchg
jae
xor
dec
pop
inc
sbb
cmpsb
insb
mov
sub
aam
mov
leave
dec
popa
sbb
aas
insl
xchg
adc
shrb
loope
sub
in
jecxz
mov
loop
lds
dec
sti
and
or
lcall
mov
jle
mov
dec
data16
cmp
jb
inc
xchg
jbe
inc
pop
es
mov
aad
pop
and
inc
inc
mov
xor
pop
dec
cmp
push
and
pop
jns
lret
push
dec
sbb
dec
mov
in
add
and
jno
jmp
mov
int
mov
push
loope
cmp
scas
outsb
xor
leave
stos
fstpt
ret
inc
mov
decl
dec
les
jge
add
or
add
mov
inc
out
movsl
mov
sub
sbbl
popf
dec
jnp
cmp
data16
fsub
insb
mov
and
pop
popa
push
mov
xor
negl
dec
inc
iret
notl
cmp
lea
dec
mov
and
insb
notb
dec
int
sub
dec
mov
jb
pop
mov
pop
out
dec
dec
mov
loop
sarb
out
in
mov
scas
jno
sbb
pusha
mov
cmc
loop
push
movsl
clc
data16
cmp
mov
mov
divl
adc
popf
mov
jae
jle
rcll
inc
mov
mov
sub
cmp
sbbl
ret
push
adc
rcll
jecxz
lea
rorl
mov
xchg
sbb
mov
push
hlt
inc
out
jecxz
inc
mov
bound
int
cltd
xchg
adc
filds
mov
stos
pop
outsl
jns
ret
subl
lods
loop
fstpt
outsl
outsb
xchg
xchg
xor
nop
js
clc
arpl
xor
pop
and
xor
ljmp
mov
push
sub
mov
add
outsl
push
mov
shlb
and
lcall
mov
icebp
and
add
nop
pop
push
xor
mov
cmp
mov
and
hlt
cwtd
stos
mov
dec
arpl
fxam
pop
xchg
repz
sbb
jge
push
int
dec
xchg
xchg
mov
mov
adc
and
mov
fdivrs
push
repnz
test
push
aam
repz
inc
pop
sub
in
adc
adc
out
or
pop
adc
cmc
xor
aaa
lea
test
cwtl
sbb
cmp
or
lahf
push
sub
movsb
adc
sub
jne
pushf
adc
loopne
je
add
adc
xchg
decl
insb
jg
movsl
lods
push
adc
push
jp
mov
xchg
stos
or
je
loopne
sbb
mov
and
jecxz
and
and
std
push
outsl
mov
mov
lahf
fwait
in
dec
or
movsb
and
faddl
arpl
sti
pop
cld
mov
lock
test
clc
divb
inc
sbb
adc
insb
push
sbb
je
call
xchg
icebp
scas
fdiv
sbb
out
cmpsl
shlb
dec
pop
int3
bound
jmp
or
fwait
jae
icebp
sbb
sbb
or
or
ret
stc
sub
pop
and
jge
mov
imul
mov
les
imul
mov
mov
shl
pop
xchg
stos
js
out
add
dec
push
push
lods
xor
inc
add
mov
add
stc
scas
cmp
mov
xor
rcl
dec
cmp
sti
in
sbb
pop
int
lret
cltd
pmulhw
outsl
jl
jae
sub
fisubrs
stos
faddp
adc
int3
popf
and
adc
lds
mov
or
cmp
stos
xor
jg
dec
inc
push
mov
sti
cld
das
mov
pop
xchg
cli
in
ss
xor
mov
pop
iret
dec
cld
addr16
lret
sbb
das
pusha
frstor
cmpsb
and
jno
add
in
jo
dec
shll
in
aaa
out
adc
push
imul
movsb
xchg
imul
in
dec
mov
lea
test
repz
adc
movb
test
es
inc
fimuls
jmp
mov
addb
pop
test
jo
dec
xchg
mov
inc
jo
pop
mov
xchg
jge
xor
and
popf
or
sbb
cmpsb
pop
push
dec
push
mov
xor
xchg
xchg
mov
mov
pop
popf
fildll
dec
push
and
inc
adc
sbb
loope
or
mov
in
cmpsl
add
mov
cmpsl
inc
jno
fistpl
lahf
and
pop
push
loop
push
ljmp
mov
mov
mov
out
cmc
and
adc
divl
and
pop
push
insb
outsl
cwtl
jmp
pop
out
stc
xchg
mov
push
in
or
mov
sub
inc
adc
scas
aam
dec
xor
inc
imul
into
pop
push
icebp
xor
hlt
push
mov
cwtl
sub
adc
fucom
rorb
push
out
arpl
mov
subb
mov
jl
jmp
mov
adc
lock
xchg
jle
arpl
xor
xchg
mov
mov
mov
sbb
cmpsl
sub
and
ja
fsincos
dec
push
aad
jbe
cmp
inc
push
dec
xchg
lahf
sbb
loopne
jmp
pop
inc
push
sub
mov
xchg
fucomp
sbb
lcall
xor
xor
sbb
out
pop
faddl
ljmp
pusha
test
add
lds
mov
lret
dec
sub
pop
push
xor
cmc
mov
andl
mov
push
ficoms
xor
pop
hlt
and
fs
shrl
jg
cltd
xchg
jbe
mov
add
lret
rorb
movsb
push
insb
sub
adc
cltd
stos
insb
fwait
inc
fcmovu
add
insl
or
out
notb
add
mov
mov
ss
push
in
sub
jecxz
out
andl
aad
add
push
imul
lret
dec
or
mov
xchg
or
ret
movsl
cmp
int3
jmp
adc
fiaddl
add
sbb
push
jne
imul
sbb
cs
into
mov
pop
mov
and
cld
pop
sahf
jns
add
test
adc
inc
cmp
lea
mov
adc
adc
pop
testl
aad
mov
mov
imul
sbb
xor
xor
hlt
shrl
data16
xchg
test
sub
xor
fwait
pop
cmpsb
dec
xchg
loop
jno
bound
popa
test
inc
or
push
mov
fsubrl
xor
imul
xchg
out
xor
pop
xchg
sbb
sbb
pop
loope
aas
mov
mov
scas
pop
mov
jno
push
cwtl
inc
mov
sbb
xlat
out
sub
or
das
lea
jne
or
sbb
push
mov
lods
xchg
mov
mov
and
mov
insb
xor
out
mov
repnz
out
and
lods
cwtl
aam
push
pop
movsb
xor
inc
subl
rclb
lret
xchg
jo
push
inc
ror
dec
cmpsb
popf
pop
sbb
test
or
inc
testl
mov
in
rorb
mov
rorl
mov
cmp
inc
fcomi
call
daa
cmp
lret
xor
call
sub
cwtl
sti
inc
jo
adc
outsb
pusha
mov
leave
out
sar
mov
xorb
iret
jecxz
push
ja
dec
push
fldl
in
fnstenv
dec
enter
mov
insl
call
cmc
rorl
jmp
mov
jg
scas
adc
xchg
push
pop
addr16
xor
xor
imul
dec
enter
fcmovnb
jo
cmp
sbb
incl
repnz
shl
fsubrs
jle
pop
daa
pop
xor
mov
jl
cwtl
add
mov
jae
les
scas
clc
sti
sbb
gs
inc
mov
jnp
movsb
push
cltd
mov
out
mov
cmp
imul
inc
shlb
add
cmp
lds
mov
andl
lds
pop
xchg
mov
ja
xor
ss
jg
es
nop
xchg
lcall
rorb
dec
dec
cltd
ss
sbbl
les
jge
jecxz
dec
sub
xchg
cmp
das
mov
andl
xchg
inc
dec
insl
dec
insl
cmp
add
into
enter
les
test
and
inc
in
aas
and
test
adc
fwait
xchg
mov
dec
rcrl
int
lret
mov
into
xor
sub
adc
sub
add
out
cmp
rcr
inc
sbb
clts
mov
out
lods
inc
lcall
stc
mov
imul
fstl
mov
js
repz
sbb
stos
neg
lea
sbb
fcoms
jg
or
mov
xchg
cwtl
fisttps
cmp
out
push
loop
dec
cs
push
add
cli
mov
ljmp
aad
or
call
sbbl
jb
js
and
lods
jae
mov
sbb
or
add
dec
stos
std
out
cmpsb
mov
daa
shlb
jne
xor
jl
mov
dec
jo
cmp
sbb
bound
sti
adc
data16
repnz
dec
jae
pop
aam
xor
or
fnstenv
sbb
or
test
xchg
std
sbb
adc
sub
or
and
cmp
pop
enter
orl
mov
mov
mov
outsb
lds
cmp
xor
xor
push
adc
and
or
ljmp
jmp
mov
xchg
xchg
pop
mov
hlt
nop
mov
mov
setnp
sub
mov
push
lds
loope
pushf
pop
ret
arpl
jg
push
mov
jno
dec
and
int
dec
mov
test
mov
sbb
push
shlb
mov
push
insb
lock
hlt
push
cmp
or
mov
push
mov
cmp
and
aaa
fsubrp
push
sbb
nop
and
jns
xchg
pop
movsb
inc
dec
xor
and
sahf
add
iret
cli
pushf
mov
leave
adc
stos
xor
lret
pushf
dec
xor
cmpsb
jg
mov
ret
adc
jge
leave
popa
jmp
mov
adc
outsl
cmpsl
xchg
push
mov
popa
sub
cli
ss
lea
pop
sub
int3
xchg
push
dec
jbe
jg
mov
je
and
and
notb
push
push
xchg
cli
push
addr16
dec
sub
mov
inc
adc
adc
adc
ljmp
sbb
xlat
xchg
xchg
adc
aas
jo
cmp
dec
dec
xor
repnz
or
mov
mov
into
mov
dec
aam
jne
mov
sarl
mov
jo
pop
push
fcmovne
popf
dec
rclb
sub
mov
or
in
je
add
xchg
lahf
je
push
cltd
sub
popf
xor
sub
aad
idiv
push
or
jno
das
test
sub
filds
cmp
dec
cmp
jp
gs
add
cmp
out
push
mov
mov
pop
jae
bound
mov
inc
ret
mov
cli
xchg
fadds
icebp
and
lea
and
test
je
xor
ja
cmp
jle
cwtl
jge
cli
xor
cmp
ret
mov
iret
popa
cmp
mov
out
jle
pop
loopne
int
out
sbb
daa
mov
aaa
leave
or
call
xchg
sub
ss
cltd
sbb
jne
iret
leave
xor
dec
test
jg
rcl
aas
int3
pop
pop
jmp
das
add
cs
sbb
arpl
out
fisubl
aaa
in
mul
imulb
and
cltd
or
ss
test
or
mov
in
popf
or
fstps
popa
and
ret
or
in
out
pop
xor
dec
fwait
lods
sub
sbb
mov
cmp
add
jmp
mov
scas
in
cmp
cmp
and
es
jns
pop
sbb
adc
inc
daa
mov
sbb
sbb
sub
add
mov
add
or
ds
jge
aaa
lds
push
shlb
movsb
xchg
sbbl
cltd
add
add
stos
movsl
lock
mov
mov
loopne
pop
inc
jle
jb
mov
sub
jae
and
std
insl
mov
dec
sbb
pop
xchg
outsb
jbe
and
test
add
fbld
push
xchg
inc
cltd
cmp
jmp
clc
mov
test
jecxz
call
hlt
into
pop
test
adc
cltd
std
dec
adc
mov
xchg
or
inc
mov
lret
cmp
loope
js
cmp
inc
outsb
adc
push
fnstenv
fwait
mov
mov
ss
scas
loopne
cld
ja
out
sub
inc
movsl
and
outsl
xchg
dec
jecxz
pushf
js
mov
and
or
dec
mov
xor
cmovae
cmpsb
outsl
outsl
cld
pop
aaa
inc
test
mov
shrl
aam
sbb
mov
lods
dec
int
int3
aad
stc
ja
add
daa
xor
mov
fs
mov
je
mov
push
ja
sbb
lods
push
lret
and
dec
mov
jmp
pusha
les
push
pop
in
lods
and
and
mov
insl
inc
mov
in
jo
je
cld
mov
add
jns
xchg
or
test
fs
push
cmpsl
das
addr16
je
push
imul
inc
cli
mov
xor
mov
or
adc
mov
or
arpl
cwtl
scas
add
pushl
and
nop
pop
inc
dec
int3
rcrb
jb
xor
aas
sub
pop
out
pusha
stc
mov
aad
add
out
jo
sub
insl
mov
mov
roll
data16
enter
jno
fwait
mov
clc
xor
test
push
add
jle
mov
xchg
cmp
dec
and
shl
sbb
inc
sub
mov
mov
cmp
lret
adc
mov
fisubl
fidivrs
fmul
arpl
scas
mov
add
icebp
mov
inc
mov
jp
lcall
sbb
push
xchg
pop
test
popa
repnz
das
and
jmp
xchg
popa
cmp
subl
adc
inc
aad
sub
sub
xchg
adc
cmc
jl
push
int3
lret
ss
jge
jns
jp
xchg
sub
push
lret
mov
inc
mov
outsb
sub
jge
repz
sub
aam
xor
daa
mov
or
fdivs
xchg
test
push
xlat
rcll
mov
insl
mov
jbe
rolb
xchg
mov
test
lcall
lods
xchg
xchg
pusha
outsb
sub
cmc
push
in
or
mov
mov
movsb
hlt
pop
je
cmp
push
int
xchg
cmp
bound
mov
pop
inc
sub
sub
cwtl
sbb
push
cmp
push
and
fs
pop
jbe
xor
mov
cmp
jo
jp
in
scas
adc
shll
jmp
jp
push
cmpsb
xor
sar
pop
push
outsb
sub
and
leave
push
nop
lcall
lods
cmp
push
mov
xchg
roll
enter
data16
inc
cltd
sbb
insb
and
aad
cli
jo
pusha
inc
nop
push
xchg
pop
and
in
add
or
arpl
ror
loop
xor
sub
mov
inc
push
sti
repnz
insl
push
adc
shr
xchg
sub
pop
jns
inc
xor
nop
leave
add
cmp
stos
mov
mov
out
test
pop
mov
daa
xor
dec
jb
adc
and
inc
pop
mov
mov
das
ret
inc
mov
out
and
push
push
cmp
cmp
ficoms
and
jp
inc
mov
xchg
mov
fucomi
pushf
xchg
shlb
add
outsl
sbb
xchg
pop
sub
push
jne
xchg
es
sarl
clc
pusha
or
movsb
mov
cmp
jo
mov
mov
inc
in
rolb
mov
int3
push
into
push
in
scas
push
addr16
adc
jle
into
push
and
repz
je
test
in
pop
les
pushf
fcompl
cmp
stos
gs
mov
aas
mov
inc
inc
shrb
movsb
test
dec
add
pop
movsl
cwtl
or
xchg
add
std
leave
xchg
pop
cmp
ficompl
lcall
out
cs
jge
xchg
lret
subl
pop
add
adc
push
inc
loopne
cwtl
test
pop
fiaddl
lcall
and
dec
inc
mov
in
adc
lcall
les
jne
mov
mov
xor
dec
fildll
dec
cmp
jbe
and
jmp
jge
scas
lods
pop
ret
loop
scas
std
or
or
push
into
testb
mov
dec
nop
push
sbb
arpl
jo
in
sub
mov
push
iret
cmc
divb
mov
mov
cmp
xchg
xchg
arpl
ret
dec
mov
push
cmpsb
push
pop
inc
sub
lock
stos
jl
adc
mov
sub
mov
and
imul
pop
or
gs
out
mov
push
pop
outsl
mov
fimull
mov
jle
mov
cwtl
mov
ficompl
fs
les
clc
adc
jae
sbb
push
rorb
mov
push
lret
nop
out
fs
adc
pop
cmp
push
pushf
cmc
xor
insl
jbe
hlt
ja
movsl
cld
and
and
mov
rorl
sbb
push
add
cmc
pop
dec
mov
lcall
mov
push
cmpsb
and
pusha
jb
xchg
jle
add
mov
int
lcall
push
and
insb
inc
or
pop
daa
out
pop
sbb
jg
cmpsw
leave
mov
leave
repnz
fbstp
dec
push
mov
out
sbb
lods
repnz
mov
push
xlat
aaa
xor
fcmovbe
mov
jl
pop
popa
cmpsl
in
ficomps
stc
xchg
dec
stos
arpl
popf
mov
mov
ds
or
sbb
andb
dec
fstpl
jne,pt
add
mov
dec
fbld
das
mov
adc
adc
adc
push
and
add
je
and
push
fdivrs
cmp
mov
adc
aas
adc
out
enter
and
xchg
and
lcall
and
test
sbb
sub
dec
inc
mov
push
inc
inc
jo
mov
sahf
dec
insl
ss
jb
mov
shlb
ror
pop
stc
dec
lahf
and
inc
roll
sarl
inc
sahf
push
mov
or
mov
xorl
cmpsl
insl
sub
push
sti
cltd
mov
push
sbb
inc
negl
xor
or
ret
ja
adc
call
ljmp
dec
das
dec
xchg
sbb
cmp
lahf
aas
mull
daa
icebp
push
gs
stos
mov
fbld
push
jmp
xor
jle
cmc
mov
call
sub
ds
ds
xor
movsb
sarb
sub
neg
sti
xlat
fdivp
push
pop
push
mov
mov
mov
pop
fidivs
inc
insb
xchg
cmpsl
mov
xor
out
and
jecxz
lock
mov
subb
push
sbb
pop
and
push
lock
clc
xor
push
mov
in
jmp
fld
jl
or
dec
pop
test
inc
in
pop
push
aam
out
aam
imul
nop
jo
xchg
clc
cmp
bound
sbb
bound
mov
dec
aad
jmp
rorb
sti
sarl
xchg
leave
leave
jmp
dec
lret
pop
jne
fdivr
xchg
adc
mov
ss
inc
aad
add
dec
adc
into
in
mov
jae
test
cmp
fs
das
jo
rolb
or
stc
mov
jb
push
pop
push
pop
inc
cmp
int3
sbb
shrb
int
push
cmc
or
andl
pop
dec
inc
xchg
ret
fisttps
ljmp
or
push
xor
lods
movsl
arpl
movsl
xor
mov
xchg
fildl
adc
imul
pop
mov
lahf
push
sub
mov
push
mov
xor
mov
sbb
int3
cmp
and
mov
mov
dec
add
push
jp
push
fs
xchg
pop
pop
jo
shll
xor
fidivs
iret
adc
outsb
loope
jne
and
loopne
std
jns
ljmp
push
jb
xchg
push
in
or
call
sbb
int
lahf
pop
sub
mov
and
sbb
pop
xchg
cmp
lret
add
xor
pop
jbe
mov
icebp
jbe
popf
leave
insl
cmp
int
outsb
add
test
mov
adc
xchg
mov
adc
stos
mov
push
sbb
jecxz
xor
mov
jecxz
insl
fistpl
movq
cld
pop
sub
mov
cmp
popw
mov
push
add
mov
dec
cmpsb
mov
daa
shlb
cmpsb
rcrb
dec
fimull
loop
push
add
pushf
arpl
and
sar
xchg
pop
arpl
inc
in
mov
das
pop
sbb
outsl
xor
fidivl
mov
jecxz
cs
and
push
xor
and
mov
imul
neg
mov
push
xor
or
sbb
test
loop
pop
mov
sbb
pop
rcl
adc
ret
daa
arpl
xchg
roll
pushf
ja
dec
outsl
xchg
add
mov
push
push
lds
aas
hlt
xor
xor
popa
ret
orb
pop
out
fs
pop
jmp
in
mul
dec
push
pop
mov
ret
mov
fbld
mov
cmp
divl
arpl
sub
push
push
testb
mov
cmp
mov
mov
xchg
nop
cltd
inc
js
dec
testl
mov
mov
jp
fwait
mov
sbb
xlat
xchg
lahf
jg
cld
repz
enter
mov
out
pop
pop
fiaddl
mov
xor
leave
pop
and
cmpsb
push
das
adc
mov
imul
and
lock
hlt
popa
cld
repnz
mov
mov
pusha
dec
adc
add
jmp
gs
adc
and
mov
jle
es
push
push
adc
dec
int3
cwtl
mov
jge
ljmp
jae
cmp
adc
iret
lcall
mov
enter
sub
jae
mov
popf
dec
aam
mov
xchg
fcompl
ret
pop
mov
icebp
dec
mov
icebp
in
mov
aas
cmc
dec
mov
imul
repnz
icebp
jg
xor
jo
je
les
lret
pop
sbb
stos
lea
sbb
sbbb
pop
xor
xchg
push
clc
adc
inc
cli
shll
sbb
outsl
std
inc
cmc
cmpsl
and
add
push
pop
clc
jle
rcll
stos
pusha
test
pop
insl
mov
sbb
mov
xchg
inc
fistpl
cltd
adc
mov
jmp
hlt
push
pushf
jg
cmp
iret
or
inc
mov
insb
xor
cli
daa
xor
in
in
loop
hlt
leave
ljmp
jnp
lret
in
aas
xor
add
mov
mov
orl
adc
dec
sbb
arpl
mov
test
ss
nop
sub
popf
mov
mov
in
jg
aam
push
and
mov
push
lea
sbb
cli
fiadds
dec
rolb
movsb
and
sub
sub
out
gs
movb
sub
pop
xchg
inc
mov
nop
es
cltd
xchg
sub
mov
enter
stos
scas
es
mov
pop
push
xchg
enter
mov
dec
jns
in
fdecstp
pop
shll
iret
push
stos
push
inc
lret
jae
xchg
movsl
lahf
mov
int
int3
pop
pop
lea
je
fidivs
test
ljmp
jle
pop
cmpl
es
mov
mov
call
xchg
mov
push
sbb
mulb
ds
test
lea
push
inc
shrl
sbb
std
mov
cmpsb
hlt
or
push
pop
xchg
pop
xchg
orl
sarb
or
jecxz
notl
lret
lds
inc
xor
mov
std
sub
mov
jle
mov
outsl
out
les
xor
cmp
pop
test
push
mov
rclb
push
dec
in
push
xchg
jecxz
cli
sti
daa
in
fs
add
mov
mul
and
les
jo
faddl
push
xchg
xchg
ret
aaa
inc
push
push
imul
stos
sub
pop
mov
int
pop
shr
es
xchg
outsl
test
xlat
xchg
cwtl
mov
test
push
or
sub
xchg
rcll
cmp
sbb
mov
popa
or
mov
sbb
sahf
lock
mov
andb
inc
out
add
into
test
test
sbb
pop
jge
addr16
cwtl
sbb
push
std
test
cmp
fnstcw
push
aas
stc
setle
inc
pop
mov
adc
fdivrl
in
mov
jecxz
jb
outsl
fadd
out
cmpl
sbb
adc
sar
push
sar
dec
jmp
cwtl
icebp
push
daa
xor
lcall
dec
sub
xor
ret
int3
add
xor
arpl
fnsave
subb
push
mov
mov
dec
dec
xchg
add
push
add
repz
or
xor
fwait
dec
xor
into
and
mov
in
push
cs
jb
or
out
mov
jo
cmp
pop
mov
or
xchg
lcall
xchg
cmp
jp
xchg
mov
jmp
loope
sti
sbb
dec
bound
insl
xor
or
cmp
fisubrs
and
mov
adc
pusha
mov
xchg
mov
int3
jge
aas
in
in
dec
arpl
xchg
pop
test
mov
mov
negb
mov
or
js
jg
je,pt
and
popf
push
adc
mov
jnp
mov
cmp
cld
or
and
sbb
xor
popf
adc
leave
mov
sbb
mov
punpckhwd
xchg
outsl
xlat
mov
into
ret
mov
daa
sahf
mov
movsb
mov
mov
push
orl
push
jg
inc
iret
je
jae
jns
and
pop
xchg
in
push
and
out
cmc
fstpl
mov
mov
pop
inc
into
hlt
pop
fstp
mov
dec
sbb
xchg
div
pop
lahf
or
mov
ret
xchg
mov
andl
push
push
vpshlb
sub
shlb
sub
jne
xor
sbb
sub
jb
sbb
xor
es
idivb
inc
push
mov
jno
test
and
push
lds
insl
jecxz
xor
movsl
int3
lahf
mov
scas
aaa
adc
imul
in
imul
data16
jge
das
pop
jl
mov
xchg
and
inc
sub
ds
iret
loopne
orb
sti
jecxz
pop
scas
fidivl
pop
xchg
mov
lock
ds
adc
cmpsb
mov
adc
ret
cmp
add
lock
jmp
sub
xchg
shll
bnd
aaa
and
add
xchg
loope
aam
stos
fsubr
aam
stos
xor
adc
lock
cli
addl
jl
jle
add
dec
cmpsl
xor
cs
jge
and
pop
adc
lahf
leave
sub
sub
xor
inc
sti
shrl
add
lcall
push
or
mov
fildll
lret
push
cwtl
or
adc
test
aam
jne
repz
mov
lret
hlt
or
out
daa
mov
inc
in
scas
sub
mov
pop
inc
inc
int3
adc
mov
fadds
ss
imul
dec
or
add
cs
jge
insl
sub
int
stos
xor
fcomip
in
or
icebp
mov
lcall
inc
or
inc
and
into
xchg
stos
sbb
mov
gs
aad
mov
aas
lahf
jle
enter
je
sub
cmp
xchg
push
int
addb
xor
mov
and
cld
ljmp
rolb
test
hlt
and
mov
cmp
jbe
push
loopne
pop
jle
test
or
stos
pusha
adcl
shll
sub
adc
daa
out
pop
fmuls
cwtl
cs
fwait
aad
das
xor
test
cltd
daa
push
push
fldl
cli
dec
cmp
orl
add
push
xchg
mov
push
fcmovne
and
outsb
xchg
insl
out
ss
insb
frstor
ljmp
adc
sub
sub
loopne
add
pop
cmp
cmc
or
test
dec
adc
fcmovnbe
std
xchg
xchg
cmp
mov
xor
sbb
dec
mov
sbb
rcrb
data16
mov
xor
inc
push
out
xchg
dec
lcall
mov
jne
aam
cmp
rcrl
leave
lds
dec
adc
pop
pop
and
push
fcmovne
sbb
insl
mov
pop
xchg
pop
pop
mov
adc
push
wbinvd
into
xchg
inc
imul
or
aad
sbb
pop
jle
mov
sbb
adc
mov
pop
inc
cmpsb
mov
mov
mov
add
and
fistl
and
and
rcr
mov
sub
daa
lods
cmp
mov
pushf
jp
sbb
cwtl
adc
jp
ret
xchg
divb
xchg
mov
inc
ds
xchg
lahf
jb
push
in
daa
fidivrl
in
mov
or
or
cmp
jmp
mov
mov
xor
lods
sbb
xchg
sbb
mov
ja
sbb
test
push
out
aad
cmpb
arpl
sub
push
test
sbb
push
mov
faddp
and
punpckhdq
mov
je
mov
adc
add
push
inc
sub
dec
data16
jmp
call
cmp
repz
push
cli
add
push
stc
xor
aas
inc
adc
mov
repnz
adc
sbb
cmp
inc
add
std
cmp
sub
fcmovnb
inc
xor
add
outsl
lahf
stc
popa
dec
xor
push
push
add
mov
mov
sbbl
sub
fstps
add
arpl
push
sbb
mov
inc
cltd
popa
pop
cmc
xor
addr16
stos
jg
xchg
cs
cmp
xorb
mov
outsl
mov
fistl
popf
fcompl
mov
xor
pop
data16
in
lods
rorl
pop
lock
xchg
out
mov
pop
xor
xor
in
or
mov
aam
shrl
cmp
fisubrl
pusha
negb
mov
mov
cmpsb
ss
mov
roll
pop
sub
push
pop
push
xchg
and
in
sub
and
imul
negb
cli
mov
fildl
jge
adc
adc
pop
and
mov
push
loope
mov
and
hlt
daa
in
adc
xchg
mov
lret
test
adc
cmp
mov
sti
stc
clc
into
dec
out
notb
cmp
inc
dec
lock
shrb
dec
addl
gs
lret
adc
dec
loopne
pop
xor
push
push
stos
outsl
jg
xchg
filds
jnp
adc
nop
dec
les
mov
mov
mov
jge
mov
outsl
lea
rorb
push
mov
int
clc
mov
jnp
outsb
das
std
testl
push
fninit
adc
arpl
jns
adc
sbb
sbb
fisttpl
insb
je
sbb
sub
mov
jmp
repnz
mov
sbb
push
ret
shlb
adc
mov
xor
dec
mov
arpl
arpl
fs
inc
mov
daa
sub
std
sti
dec
movsb
pushf
pop
aam
mov
in
dec
fdivs
imul
sar
pop
cmc
cmp
nop
mov
add
jmp
mov
mov
push
es
and
repnz
mov
mov
mov
scas
push
jb
clc
das
mov
inc
mov
pop
rcrb
push
aaa
pop
adc
push
loope
ljmp
aaa
mov
imul
call
aas
in
lods
clc
daa
popa
xchg
xor
cmp
add
add
scas
aaa
mov
xchg
push
and
cmp
outsl
dec
pop
add
mov
data16
pop
push
dec
js
pusha
pop
jb
add
inc
mov
or
push
sti
xchg
xchg
pop
jns
aam
bound
sub
iret
repnz
push
leave
adc
fbstp
pop
outsb
js
jp
pop
divb
sbb
xor
hlt
mov
scas
fcmovne
cmpb
lcall
fs
call
jg
jne
adcb
push
test
ror
repnz
aam
dec
jno
loopne
sub
dec
fwait
push
data16
pop
icebp
push
fs
ja
jmp
scas
ret
out
push
cli
movsl
mov
mov
and
pop
fnsave
dec
or
int3
jo
fs
lret
jp
movsb
mov
push
pop
sub
dec
jb
xchg
call
addl
insl
cmpsb
xchg
sti
out
cmp
mov
shll
stos
stos
cmp
sti
pop
xorl
les
adc
sbb
xlat
cmp
sub
sub
mull
xchg
xchg
dec
cmp
fwait
jge
loop
lret
hlt
mov
adcb
xchg
and
clc
adc
inc
mov
and
aam
mov
cmpsl
xchg
mov
into
cmp
mov
jb
test
int3
je
int3
loope
cmpsb
push
cmp
lret
int
je
pushf
push
shlb
sbb
loope
adcl
andb
lret
sbb
inc
test
fwait
test
cmp
adc
cmc
lods
dec
aad
sti
or
pop
xor
sbb
enter
cmp
ja
subb
in
mov
rcll
stos
lcall
xor
inc
jg
mov
test
or
add
mov
pop
mov
loope
xor
hlt
jmp
sarb
inc
enter
cmp
ljmp
les
xchg
mov
jl
arpl
push
xchg
clc
mov
mov
loop
stc
pushf
rcrb
and
dec
dec
xchg
mov
inc
mov
je
or
cmp
mov
out
data16
and
sbb
fsubrs
enter
inc
addr16
push
loop
mov
push
push
fmulp
push
bound
mov
jg
dec
jp
and
add
lahf
sub
sub
lahf
add
int
xchg
test
imull
movsb
sub
pop
lahf
iret
rorl
and
in
or
jae
cmp
xchg
shll
stos
xchg
fcoms
int
in
hlt
cmpb
pop
pop
mov
scas
loope
jmp
dec
cmp
clc
xchg
cmpsb
aad
xor
and
dec
push
sbb
xchg
lcall
mov
jge
ret
sbb
inc
cmp
sub
and
out
lret
mov
push
ret
mov
push
dec
sar
incl
ja
xlat
stc
xor
push
mov
fimuls
mov
and
pop
sbb
repz
inc
xchg
cld
int3
je
aas
movsb
xchg
adc
int3
xchg
fldt
mov
addr16
sbb
lds
in
fwait
xor
int
mov
mov
lret
xor
pop
movsb
sahf
jbe
mov
or
inc
mov
cmp
es
xlat
orl
adc
out
out
adc
mov
gs
inc
je
ja
sbb
jge
xchg
cmpl
cmp
ljmp
mov
cmpsl
into
push
inc
fistpll
inc
inc
inc
mov
call
xchg
ret
xor
adc
add
dec
aaa
xor
sub
pop
pop
les
jae
sub
sbb
xor
popf
ret
jecxz
or
push
lods
enter
adc
gs
xchg
lret
xchg
xor
add
arpl
inc
adc
mov
sbb
add
cmp
sbb
repnz
dec
and
jnp
and
xlat
ds
aas
test
andb
mov
cmc
pusha
and
sbb
fmull
jbe
icebp
fildll
sub
testl
mov
sbb
cmp
or
das
inc
cs
rcrb
ljmp
xchg
fiadds
xchg
fucom
aam
push
shlb
cmpsl
es
lret
push
mov
mov
dec
les
pushf
jg
notb
rorl
je
addl
jno
mov
in
and
mov
lods
mov
jno
outsl
lcall
and
stos
jg
push
aam
push
sbb
xchg
pop
jp
gs
int3
push
adc
mov
loopne
or
add
xchg
out
inc
inc
movsl
jle
aad
mov
mov
fcmove
pop
adc
popl
dec
pop
pop
lds
ds
dec
flds
cs
fnstsw
movsb
xchg
xor
test
enter
lret
mov
sbb
and
adc
mov
fadds
aam
cmp
inc
push
add
jmp
lcall
dec
fcompl
or
push
iret
cli
jg
mov
mov
sbb
adc
into
out
pop
jg
outsl
jo
clc
hlt
jecxz
or
test
add
pop
mov
ret
fsts
mov
lds
mov
inc
pushf
jl
push
jle
js
jl
inc
bound
sub
cmp
cltd
arpl
out
lret
insl
sbb
fs
out
shrb
xor
lods
or
sti
pop
mov
sbb
das
or
mov
inc
loopne
dec
jg
pop
cmp
fwait
orl
ja
daa
ficompl
fstps
add
cmpb
push
repnz
or
cmpb
xchg
lea
xchg
jge
dec
ds
cmp
dec
or
xchg
cwtl
das
icebp
xchg
xchg
xor
mov
push
or
mov
les
mov
xor
push
sub
jno
sbb
dec
rcl
fwait
ja
cmp
rorb
call
inc
mov
mov
outsb
es
xchg
ret
test
xlat
in
pop
notb
loopne
mov
inc
sbbl
les
push
mov
jae
test
std
test
lret
or
push
pop
test
xor
popa
icebp
pop
repz
dec
movsb
pop
and
mov
js
imul
inc
gs
mov
repnz
mov
cmp
sti
mov
lock
leave
push
add
test
cld
testl
fs
xchg
pop
test
fistpll
fs
movsb
mov
xchg
cmp
cmp
add
mov
popa
dec
mov
cmp
jg
pop
jg
xor
sti
mov
mov
movsb
mov
sbb
inc
mov
sub
mov
xchg
xorb
in
out
add
leave
mov
and
pop
sbb
push
popf
in
flds
scas
fmuls
xchg
jno
xchg
jnp
imul
jnp
stc
xor
cmp
pop
sub
shll
add
pusha
bound
arpl
or
mov
iretw
in
dec
das
lods
in
jno
pop
xor
cmovo
pushl
mov
pop
or
add
enter
dec
push
daa
fwait
ds
in
dec
push
outsb
test
insb
push
push
push
mov
enter
in
test
add
xor
fstpt
sub
test
sub
stos
xchg
mov
sub
fucomp
bound
js
lret
push
jg
jne
xchg
push
pop
imul
mov
mov
scas
jg
andb
out
xchg
stc
pop
pop
dec
xchg
push
fdiv
shll
push
sti
inc
fdivp
aad
test
dec
mov
push
dec
ss
out
incl
stc
pop
push
nop
mov
cld
pop
jmp
fcmovne
add
aam
push
dec
inc
push
cmpsl
les
cli
in
dec
ficoms
je
mov
addr16
or
pop
dec
in
mov
jg
sbb
sarb
dec
sti
ja
push
into
xchg
test
inc
pushl
push
and
scas
sbb
inc
mov
cwtl
das
pusha
movsl
xchg
inc
andb
push
pop
sub
out
mov
stc
jae
xchg
call
xor
icebp
xchg
lret
rcll
inc
ret
std
stos
fiaddl
fistpll
push
int3
jo
bound
cwtl
xor
aam
arpl
cmp
sti
imul
int3
rcl
adc
clc
fxch
fmul
lds
in
out
and
pop
mov
xor
mov
nop
aad
jle
pop
inc
xchg
dec
cmp
and
leave
fldt
cmp
sarb
xchg
mov
scas
or
sahf
loopne
sti
mov
icebp
xchg
mov
rcrb
inc
ret
adc
and
pop
sub
lods
mov
add
dec
push
add
ja
movsl
adc
jo
and
mov
stos
das
icebp
cmp
test
out
lret
cmpsl
arpl
das
pop
sarl
cli
dec
and
mov
sub
pop
push
or
xor
sub
mov
fs
pop
ds
les
loop
adc
lret
pop
jge
sbb
aad
pop
dec
cmpsl
iret
and
dec
cli
push
out
xor
pop
add
jp
mov
addr16
stos
addr16
mov
ljmp
testb
lahf
cmpsb
mov
push
shlb
ss
add
push
in
cmp
sarb
std
lcall
jo
inc
sahf
shll
jmp
in
outsb
roll
inc
mov
aam
add
add
xchg
dec
jl
xchg
jo
aad
mov
arpl
push
lret
xchg
mov
mov
insl
cli
js
aas
xor
int
push
cmp
adc
filds
push
pusha
dec
or
push
inc
fildll
jno
add
addb
mov
xchg
push
repnz
test
es
lret
mov
inc
jp
jb
push
out
jmp
push
or
rcr
mov
imul
cmc
mov
jg
out
sbb
mov
ret
mov
popf
jge
adc
xlat
dec
imul
bound
push
ret
push
xor
push
inc
add
xor
cmp
mov
xchg
aam
sbb
sbb
cs
cwtl
xchg
lea
shll
out
fdivrs
dec
mov
adc
or
jge
mov
adc
or
int
push
cltd
popf
testl
inc
fwait
dec
push
ljmp
outsb
aas
xlat
and
cli
ret
inc
sub
push
xchg
add
inc
dec
lahf
push
popf
lods
icebp
xorl
add
inc
in
dec
cs
rorl
jne
jmp
mov
jnp
lods
pop
aad
int3
push
nop
test
lods
lods
cmpsl
out
mov
xor
movsb
fistl
cli
enter
xchg
shrb
xor
pop
and
push
jno
sub
mov
or
adc
and
dec
fwait
jge
sub
and
dec
les
fdivl
call
inc
call
adc
jg
sbb
jge
xchg
imul
xlat
xchg
inc
lock
cmp
lahf
and
cmp
add
jae
xor
sti
mov
std
test
and
pop
jnp
nop
notb
add
or
negb
out
xor
inc
stos
cltd
push
mov
arpl
clc
aad
xor
jecxz
jle
pop
sbb
mov
jnp
push
mov
inc
mov
adc
iret
push
push
mov
pop
jo
cltd
mov
inc
push
sbb
data16
fs
repz
aaa
mov
ja
pushf
mov
mov
mov
jne
xchg
jge
cwtl
fbstp
adc
xor
cs
cmc
imull
stos
mov
test
sub
das
push
inc
mov
xor
push
adc
jbe
adc
fs
dec
cmp
arpl
out
fidivs
stc
jg
push
xor
lock
mov
pop
dec
sahf
push
fldt
loop
call
mov
pop
push
pop
jns
push
jp
mov
inc
scas
add
test
dec
mov
and
xchg
sub
mov
call
jle
mov
jmp
inc
mov
sbb
je
pop
in
adc
mov
adc
sub
mov
mov
mov
pop
mov
test
adc
rcll
aaa
out
shrb
xor
les
das
gs
xchg
push
xlat
push
scas
insl
mov
push
test
jmp
aas
mov
mov
cmp
mov
adc
or
sar
push
mov
movsl
mov
jmp
or
les
and
push
jecxz
and
jae
xor
lret
mov
leave
testl
int
pop
add
dec
jo
aaa
aam
inc
sahf
ja
add
mov
xchg
fs
sti
mov
aam
pop
dec
and
xchg
cltd
addl
call
stc
sbb
gs
xchg
leave
adc
push
stos
push
jge
aas
popa
xor
push
test
test
ss
scas
sub
pusha
lock
rorl
mov
mov
out
addr16
cmp
shlb
data16
addr16
xor
jb
push
xchg
in
or
mov
fsts
insl
shl
dec
inc
insl
iret
add
and
jecxz
or
cmpsb
dec
adc
mov
xchg
lcall
into
pop
xchg
inc
push
dec
pop
mov
imul
jg
jle
dec
pop
cmpsl
or
loopne
jecxz
mov
xlat
sahf
dec
push
mov
das
les
fsubrp
out
lret
pop
rcrb
push
ror
aam
out
mov
inc
push
mov
aaa
fidivrs
ret
enter
xchg
pop
jmp
xchg
dec
mov
sbb
push
iret
call
inc
movsl
push
add
xor
das
add
xor
fs
rep
sub
push
pop
or
leave
ds
hlt
or
inc
dec
jbe
add
mov
mov
es
dec
and
and
stc
inc
test
sbb
shrl
sbb
xor
in
loope
pop
movsb
in
add
mov
mov
pusha
or
jne
mov
adc
imul
pop
test
rclb
hlt
stos
mov
push
stos
cmpsl
insl
loopne
pop
push
shrl
lahf
or
and
enter
bnd
incb
jnp
movsb
xchg
push
xchg
cli
jp
pop
jl
lret
mov
inc
cmp
sbb
sbb
jl
shlb
jmp
pop
gs
cld
fcoms
jae
mov
clc
jmp
dec
icebp
shrl
fwait
inc
lret
add
lods
fcom
mov
mov
mov
dec
push
fistpl
mov
test
insb
incl
iret
mov
push
js
and
pop
ljmp
mov
mov
dec
jge
jecxz
xor
inc
push
mov
jne
clc
pop
sbb
jbe
dec
mov
ja
push
lock
into
and
xchg
sub
cmp
mov
sub
test
xchg
in
xor
add
hlt
adc
les
jo
adc
js
pop
sbb
xlat
mov
in
xor
in
outsb
inc
cmp
xor
mov
popl
shr
fcompl
fmull
push
in
cmp
mov
rorb
mov
add
push
enter
int3
adc
je
xor
das
xor
inc
les
lods
enter
mov
mov
dec
pop
cmp
fisttpll
and
add
jb
nop
lock
pop
data16
push
sbb
and
aaa
out
insb
inc
mov
mov
ljmp
push
push
fsubl
mov
jne
out
aad
movsl
jb
je
js
lcall
imulb
dec
xor
cmp
lods
aas
aas
lcall
or
or
imul
cli
aaa
hlt
jb
jg
jmp
fdivs
hlt
ret
lret
mov
cmp
add
lret
test
push
mov
outsl
add
jecxz
in
ret
lahf
mov
jle
push
lcall
lds
sub
dec
inc
lret
ret
icebp
sub
xchg
out
and
lds
inc
xchg
dec
int
xor
push
pop
lds
jecxz
jno
add
push
fwait
jg
loop
mov
mov
clc
mov
add
lahf
aam
mov
or
fbstp
outsl
jp
add
and
mov
bnd
xchg
test
jne
notb
or
mov
mov
fistpl
adc
loop
lret
cs
and
ss
jl
or
jne
in
mov
xchg
leave
out
or
cmc
adc
addr16
gs
addr16
or
shlb
shrb
cmp
mov
sbb
imul
sarl
mov
add
ret
sarb
mov
mov
testb
push
ror
iret
sub
jb
mov
lahf
fwait
adc
mov
int3
adc
stc
hlt
and
mov
imul
fbld
bnd
xorl
lds
inc
cwtl
mov
notl
inc
in
cmp
mov
mov
cmp
add
cmpsl
and
jg
js
sahf
and
lea
xor
pusha
sub
fdivrl
repnz
inc
cmp
adc
and
lds
stc
sub
inc
adc
and
movsl
push
lock
into
push
adc
mov
insl
std
dec
aam
mov
pop
aas
jl
mov
push
mov
std
into
pop
lods
sbb
addr16
stos
adc
shlb
nop
sub
sbbl
sub
mov
popf
lret
cmp
dec
fs
and
mov
stc
dec
outsl
inc
mov
dec
jns
enter
add
push
push
inc
jnp
inc
mov
jge
jno
mov
and
popf
fwait
clc
xor
fists
mov
pop
lret
outsl
ljmp
frstor
jae
in
jge
fsubrs
pop
insb
push
sbb
xor
pop
inc
shr
push
mov
mov
cmp
test
push
mov
inc
std
jmp
mov
test
jmp
or
push
or
dec
mov
or
or
mov
xor
and
lods
mov
sbbb
repnz
lahf
cmp
sub
and
adcl
cmp
pop
cmc
mov
mov
mov
stos
cmpb
push
aas
call
lock
sub
xor
les
jbe
dec
pop
cs
loop
mov
test
cmp
jno
loop
lods
bound
push
add
xchg
jnp
and
lock
or
insb
dec
xchg
pop
icebp
ljmp
sub
insl
jo
fcomip
stos
into
dec
sti
andb
mov
mov
repnz
add
pop
jae
pop
mov
inc
xor
je
adc
int
push
jecxz
addr16
xor
mov
stc
pop
inc
cmpsl
jae
test
in
dec
enter
les
pop
jp
cmp
setl
sti
fisubrs
shl
adc
sub
rol
sbb
jecxz
dec
push
call
mov
push
mov
or
je
jno
pop
add
push
xchg
jbe
pop
add
out
jns
int3
add
mov
xchg
adc
cmp
mov
fcomps
add
and
xchg
jecxz
cmp
xchg
cmpl
push
jb
jo
push
arpl
into
lcall
lods
mov
push
lods
lret
je
cli
jo
xchg
out
adcl
cwtl
cld
dec
lods
adc
inc
dec
xor
push
repnz
mov
mov
sar
jo
lea
lea
xchg
movsl
push
nop
jge
leave
push
pop
xor
dec
xchg
cmp
clc
sub
out
pusha
enter
push
test
std
fldl
and
pop
rcr
lea
ljmp
or
into
cli
xor
mov
outsl
out
jg
cmp
sub
mov
hlt
nop
int
lock
dec
cmp
iret
fisttpl
jno,pn
push
jle
sub
lods
jl
clc
adc
cwtl
add
sub
jmp
test
dec
adc
xchg
mov
inc
je
lds
in
or
xchg
cmpsl
mov
out
jmp
push
repnz
xchg
pusha
mov
xchg
into
lods
popa
test
ja
push
out
popf
inc
and
dec
iret
iret
or
frstor
jecxz
fs
shrl
xchg
nop
je
call
pop
lret
bound
out
pop
push
fwait
addl
lret
mov
enter
mov
jnp
push
sub
pushf
jbe
push
jno
test
adc
adc
fdivs
test
cmp
out
rcll
scas
lret
addr16
mov
adc
les
mov
out
add
out
mov
call
loope
aaa
and
and
sbb
xchg
cmp
mov
xchg
mov
mov
adc
outsl
dec
push
xor
mov
adc
icebp
adc
stos
mov
lock
ret
out
psadbw
push
mov
push
mov
jns
iret
inc
cltd
imul
push
shll
das
shlb
add
pop
dec
js
js
mov
testl
mov
out
pop
push
and
sub
or
or
stc
inc
jb
sbb
mov
jp
test
pushf
out
outsl
xchg
ljmp
dec
dec
sar
pop
inc
jns
fnstenv
push
into
fists
fdivrs
lcall
out
dec
cmp
jnp
xorb
mov
cmc
dec
inc
sbb
test
imul
or
insl
roll
and
es
popa
pop
test
mov
fisubs
mov
lods
xor
int
push
outsb
adc
adc
lahf
xor
inc
add
lcall
int
xchg
inc
fisubrs
push
sub
jl
mov
mov
mov
hlt
jecxz
inc
fisubs
imul
inc
dec
pop
jp
testb
xchg
popf
insb
sub
or
adcb
bound
mov
outsb
insb
dec
xor
rorb
scas
cmp
sbb
sbb
fwait
dec
popa
mov
adc
mov
mov
dec
adc
lds
adc
mov
xor
loope
mov
push
xor
fldenvs
xchg
jecxz
mov
int3
jb
lahf
xlat
pop
cmpsb
mov
scas
inc
stc
add
mov
jmp
fldcw
fwait
push
push
ja
lods
sub
int
testb
push
shl
and
cmp
sub
enter
mov
push
push
pop
push
push
cs
in
sub
pop
out
add
xor
mov
in
cli
jge
mov
shlb
in
lret
enter
fidivl
inc
cmp
jecxz
je
add
gs
rcll
aas
dec
push
mov
popa
sti
dec
mov
cld
decl
add
scas
pop
adc
int3
push
jbe
mov
cmp
jmp
leave
mov
ror
and
insb
and
test
fldl
ficomps
cs
cltd
pop
jbe
adc
gs
jno
shll
xlat
xchg
adc
mov
mov
add
cmpsl
sub
pop
add
aas
jl
adc
insb
je
adc
in
arpl
cmp
fucom
scas
loopne
jne
xor
out
jl
push
lcall
xchg
xor
movsb
enter
test
in
mov
pop
mov
test
add
ss
fcmovnb
cmovg
adc
icebp
dec
or
mov
in
push
sbb
xchg
mov
loope
pop
ss
lea
jl
ljmp
inc
mov
fs
inc
mov
jnp
test
movsl
add
lods
mov
rcrl
test
in
pop
push
ret
adc
jne
sub
jg
push
push
sbb
mov
popf
mov
sbb
sub
mov
mov
test
xchg
push
es
jb
cmp
pop
jecxz
cmc
dec
je
jae
lret
test
sub
data16
std
pusha
mov
movsl
xchg
or
push
sbb
pop
imul
ficoml
pop
mov
fsub
cs
xlat
std
pop
ja
mov
jl
mov
inc
jge
mov
dec
stc
sub
aam
add
lret
stc
fcompl
jb
bound
sbbl
ds
insl
jmp
bnd
jmp
shl
pushl
popa
jp
js
insb
cld
ss
stc
mov
loop
packuswb
push
mov
test
mov
lcall
xor
aam
data16
shll
push
lds
ss
lock
imul
sahf
add
or
ja
pop
mov
cld
repz
clc
pop
inc
je
adc
sbb
out
mov
andb
lcall
sbb
pusha
or
fnstcw
xor
inc
jle
lds
fmuls
jp
pop
mov
jge
shlb
fsts
aaa
and
dec
ljmp
jo
push
jne
mov
pop
sub
lret
and
push
mov
and
repnz
and
xchg
push
pop
push
hlt
lcall
pop
outsl
pop
xchg
int3
cld
push
add
ret
mov
jne
push
movsl
aam
stos
cmp
loope
popf
or
scas
pop
call
or
leave
insb
shrb
dec
push
pop
repnz
outsl
sahf
lret
mov
jb
mov
push
inc
cli
dec
inc
or
mov
inc
cld
lcall
jle
push
lret
sbb
movsb
push
cmc
das
jae
addr16
push
cmp
out
adc
sarb
pop
out
jns
pop
andb
lds
shll
mov
in
push
dec
pop
mov
jb
jp
push
test
fimull
loopne
into
testb
jne
mov
mov
mov
push
lds
xchg
jmp
xor
insl
xorl
ljmp
or
dec
xor
outsl
movsb
les
fsts
icebp
push
mov
clc
fmulp
xchg
mov
mov
or
jge
pop
rcrb
push
jae
fdivrl
mov
inc
sbb
in
jl
xchg
daa
xor
stos
xchg
mov
scas
pop
and
mov
push
jno
cwtl
ja
addr16
mov
or
nop
xlat
xlat
mov
mov
bound
mov
fidivs
sbb
mov
popl
xor
test
cmp
pop
pop
lods
xor
pusha
push
xchg
mov
imul
out
add
sti
fldt
into
clc
or
lret
mov
sar
rcrb
jb
arpl
cwtl
aaa
ljmp
fidivs
mov
fnstsw
lret
rcr
outsb
loope
push
xor
push
pop
push
das
push
out
cwtl
pop
push
inc
lds
inc
out
sub
insl
pop
cwtl
push
sub
xchg
pop
cmp
loope
popa
andb
ss
roll
hlt
xor
dec
loop
imul
mov
repz
cmp
xor
cmpsl
sbb
xchg
ds
cmp
es
jmp
cmpb
xor
sti
add
roll
xchg
xor
nop
jge
sbbb
mov
testb
mov
lods
mov
fbld
stos
into
jo
les
or
or
negl
pop
inc
mov
xorb
inc
add
aam
adc
in
mov
mov
pop
push
sub
cld
lret
jns
fstps
rol
test
push
in
add
mov
push
call
enter
push
jg
mov
aad
cld
lods
fstl
push
cmp
rcrl
leave
test
aaa
test
ficomps
cmp
pushf
mov
shrb
sbb
or
or
out
int3
ret
sbb
fdivl
aad
mov
stos
sub
ds
mov
sbb
xabort
paddusw
cmp
loop
sub
xchg
pop
cmovle
insl
rorl
mov
mov
aad
stos
and
mov
sti
fsubs
mov
dec
inc
lods
lods
dec
cli
shll
std
or
push
dec
dec
js
mov
cs
icebp
add
fsubrl
push
testb
or
sub
psubusw
je
xchg
adc
push
data16
mov
pop
xchg
push
sbb
push
int3
hlt
push
fs
xchg
loop
adc
les
add
insl
dec
cs
push
mov
pop
sub
pop
dec
addl
jecxz
or
orl
psllw
stos
cmc
jmp
cmp
andl
push
sbb
and
mov
jns
roll
or
movsl
push
adc
xor
adc
pop
cmp
mov
xor
xor
scas
jb
and
aas
shrl
sbbb
jnp
jbe
lret
jge
test
mov
cmpsb
imulb
and
scas
ljmp
in
jmp
fcoms
shll
push
add
sbb
adc
jge
push
stos
fcomp
es
sub
aad
nop
push
adc
div
push
mov
sahf
pop
in
fs
fimull
xchg
add
decb
xor
cmp
inc
dec
or
jmp
mov
pop
lret
inc
ror
popa
outsb
or
mov
lock
cmpsb
int
fcmovu
dec
and
xor
mov
arpl
js
jge
das
faddl
and
mov
es
outsb
cmp
in
pop
mov
xchg
stos
iret
test
dec
fldenv
jbe
fucomp
push
pop
inc
into
push
aam
pushf
imul
sub
psrad
jnp
dec
push
xchg
dec
test
mov
jb
fsubrs
popf
adc
adcb
decl
enter
xor
shrl
es
sub
add
daa
xor
and
mov
jge
xor
outsb
add
sti
add
fldln2
loopne
addr16
iret
ret
push
add
repz
or
popa
icebp
sub
inc
sahf
mov
sbb
sahf
pushf
psrad
adc
mov
pop
stos
and
dec
dec
adc
outsl
cmp
sub
inc
or
enter
push
adc
cmp
cs
into
inc
int
mov
mov
push
cmp
add
repnz
bound
push
dec
into
movsb
sub
lret
mov
sub
pop
divb
pop
stc
dec
cmp
aad
rcrb
cmp
leave
aad
dec
enter
fwait
movsl
push
xchg
inc
pop
scas
insb
mov
push
rcll
cmp
cld
cli
mov
lds
and
popa
xlat
cmpsb
push
dec
push
rol
lret
addl
loop
bound
jp
aad
sub
loop
stos
jne
dec
in
mov
and
ljmp
mov
xor
lods
ret
pop
dec
pop
cltd
scas
push
sbb
push
data16
ss
test
xchg
cmpsb
xchg
sbb
xchg
mov
imul
mov
mov
adc
pushf
inc
cmp
push
add
jne
loop
xchg
sti
imul
inc
push
ds
test
fldt
bound
dec
outsl
je
mov
jecxz
pop
cmp
aaa
fcompl
mov
sub
movsl
iret
imul
ss
sbb
stos
cltd
dec
ss
test
lcall
push
lret
dec
fldl
xor
in
popa
negl
and
and
pop
pop
mov
pop
push
jns
out
movsb
push
push
pop
mov
cmpsb
imul
xchg
and
xchg
mov
cltd
popf
pop
xlat
cmp
and
mov
mov
stc
mov
std
decl
enter
mov
cmp
mov
mov
xor
imulb
mov
sbb
daa
cmp
push
gs
nop
pusha
and
xor
inc
addr16
dec
push
lea
push
pop
inc
pop
pop
pusha
dec
mov
xor
and
jo
aaa
in
pop
push
sub
mov
xor
fsubrs
fistpl
pusha
lods
shll
ljmp
popf
mov
vcvtss2si
pushf
pop
mov
jg
fprem1
ss
push
push
lods
sahf
push
xor
fs
sub
xchg
mov
cltd
imul
insb
js
push
sahf
cmp
mov
sbb
xchg
jbe
jnp
rcll
mov
shlb
ss
sbb
xchg
pop
inc
mov
cmp
out
divl
xchg
add
lret
adc
jmp
cmp
lea
sub
and
xchg
or
or
adc
sub
pushl
scas
les
arpl
mov
mov
mov
xchg
jg
sti
stos
negb
cmp
jecxz
lock
cmpsl
pop
rolb
mov
lods
mov
fbstp
jae
inc
xor
out
cmp
repz
popf
aam
mov
outsl
xchg
inc
movsl
test
movsb
mov
xchg
xor
mov
sbb
enter
jno
push
ret
aaa
dec
jmp
mov
dec
xchg
mov
or
daa
je
sbb
jbe
dec
push
and
inc
shl
nop
stc
or
jmp
leave
rcl
mov
xchg
lods
rclb
push
dec
sub
outsb
mov
jle
mov
dec
mov
fadd
out
sbb
aaa
jb
mov
cld
aas
jge
push
xchg
jecxz
and
call
pop
stos
mov
and
aam
fs
int
sub
push
int3
adc
or
test
cwtl
ret
mov
jecxz
call
daa
xchg
popa
and
fwait
cltd
arpl
fisttps
and
push
sbb
cmp
roll
addr16
dec
push
loope
outsl
sub
in
mov
push
dec
sub
aad
sti
subl
gs
mov
jg
pop
cmpsl
cmp
shlb
pushf
xor
test
xlat
jbe
fsubrp
pop
sbb
mov
pop
xlat
pop
movsl
pushl
shrb
xchg
sahf
mov
mov
mov
imul
out
repnz
adc
popa
repnz
fwait
add
xchg
data16
mov
push
nop
push
loope
or
or
inc
fsubs
arpl
adc
add
push
adc
pop
mov
shll
mov
inc
dec
pop
scas
add
pop
jmp
ja
sub
aam
mov
cli
jl
mov
and
movsb
bound
lret
cmpsb
xor
jge
shrb
push
stos
and
ds
pop
mov
in
fidivrs
jnp
dec
mov
fs
aad
pop
data16
rcrb
enter
or
andl
and
shlb
out
xchg
gs
hlt
mov
test
add
mov
adc
mov
and
cwtl
mov
xor
loope
and
cld
jp
cmpsl
pop
negl
addr16
loop
cmp
inc
call
repz
adc
clc
in
pop
xchg
lret
inc
repz
inc
lahf
mov
or
popa
xchg
and
add
jae
mov
lods
push
jp
jns
mov
movl
mov
in
inc
loop
testb
cmp
xor
subb
es
cmpsb
shrl
leave
mov
xor
insl
xchg
hlt
jl
jno
addr16
mov
sahf
xor
push
rcrb
filds
int3
nop
xchg
push
xor
pop
test
stos
pop
mov
testl
ret
lock
xchg
out
ljmp
sub
cwtl
sbbl
aaa
mov
mov
add
dec
jl
pop
iret
xor
arpl
jne
push
xchg
dec
jmp
sbb
out
popf
or
mov
loope
scas
sub
rcrl
loopne
mov
dec
dec
inc
ds
jbe
lods
jl
or
in
lret
es
cmpsb
or
leave
sarl
sub
xchg
dec
add
sub
xchg
push
xor
push
mov
mov
rorb
dec
mov
movsb
xchg
ja
sbb
cmp
cwtl
lods
fs
sbb
loopne
cmpsb
xor
das
push
int
movsb
adc
shr
mov
imul
xchg
call
inc
xchg
sbb
lahf
in
jg
ja
xor
arpl
mov
fistl
out
inc
stos
pop
shrb
pop
rcrb
rorl
adc
sti
loopne
loopne
mov
aad
fcomps
sarl
dec
and
sub
js
dec
fcompl
mov
lock
pop
push
pop
mov
push
cmp
out
lea
pushw
sub
sub
dec
daa
adc
mov
jge
push
imul
out
lahf
or
test
jmp
push
adc
in
or
clc
xor
inc
sbb
adc
jmp
push
adc
adc
mov
mov
fsub
mov
mov
jmp
inc
xor
push
dec
sbbb
fwait
test
xchg
pop
fstl
js
pop
cmpsl
stos
adc
sub
ret
repnz
je
fisttps
xchg
mov
ja
ret
push
adc
fistpll
stc
lock
aas
loopne
aam
push
movsl
addl
ret
mov
call
or
loop
jns
push
lds
push
xchg
lods
cmp
lock
rcr
je
sub
les
test
push
iret
xchg
xchg
push
push
jno
cmp
pop
outsl
arpl
pushf
fisubl
fs
pop
or
jl
loop
mov
fsubr
popf
testb
jne
pop
adcl
fnclex
mov
add
push
test
jge
stc
mov
pop
sahf
fsubrs
mov
cmpsb
add
jbe
mov
mov
std
gs
loope
into
daa
repz
fistl
jg
cmp
jmp
cmp
push
lret
out
cmp
incl
pop
lds
adc
in
lods
push
xchg
pop
leave
pushf
bound
mov
add
shl
jmp
js
dec
shl
mov
xor
notl
inc
cmpsb
jmp
int3
fisttpl
mov
pop
inc
ret
fmull
inc
mov
jmp
sub
ret
jg
std
lret
sbb
fabs
mov
mov
das
hlt
and
fstps
daa
sub
xor
into
dec
rorb
adc
in
mov
and
mov
push
pop
lcall
sbb
test
or
pop
xchg
xlat
or
cmp
jbe
dec
inc
mov
shl
mov
or
cmp
stos
adc
push
popf
test
stc
or
or
mov
or
mov
push
data16
aam
xor
aad
lea
xchg
jb
testb
push
push
push
pop
fnstsw
pop
pop
xor
inc
mov
mov
jb
pop
iret
sbb
sbb
ret
cmp
xor
jno
mov
mov
out
dec
ficomps
aad
adc
insb
dec
push
jo
adc
pop
andl
stc
jle
ljmp
mov
in
jmp
xlat
inc
jns
fcmovne
sbb
ds
shll
mov
dec
inc
xor
lods
inc
cs
shll
ficompl
sub
xorb
dec
out
mov
dec
adc
lods
sbb
std
push
scas
xchg
cs
dec
pushf
sbb
mov
lahf
mov
xlat
fstl
dec
add
ljmp
mov
orb
lahf
sbb
pop
das
and
lret
insb
cmp
adc
ret
imul
xor
dec
mov
jle
xor
adc
dec
mov
inc
cmp
rcl
imul
jecxz
rolb
or
dec
into
cmp
jl
jmp
adc
sub
aad
mov
out
push
in
ss
xlat
sub
aad
and
out
pop
iret
inc
and
mov
adc
aaa
sbbb
pop
insl
outsb
add
xor
adc
stos
dec
pop
shrl
sbb
inc
sub
ljmp
jnp
jns
fdivs
repz
sub
pop
mov
sbb
or
mov
ficomps
or
push
sbb
mov
add
push
add
push
mov
orl
imul
rorb
ret
push
and
cld
test
pop
mov
scas
scas
movsb
pusha
es
jecxz
jmp
repz
xor
sub
jo
loope
ss
pop
adc
insl
fldcw
xchg
mov
mov
pop
into
ljmp
scas
ret
ss
das
testb
fidivs
minps
sub
pop
popf
cltd
xchg
xchg
xor
seto
add
lret
ja
pop
sbb
push
and
jae
movsb
jp
out
jecxz
subl
arpl
xlat
cmp
mov
xor
jbe
hlt
xchg
jne
fisubl
push
xchg
mov
fs
mov
sbb
call
ret
add
xor
push
repz
ret
sbb
mov
mov
lcall
push
es
pop
jge
sub
loope
sbb
frstor
cmp
pushf
xchg
aam
scas
push
repnz
lock
sbb
movsl
hlt
xor
stc
mov
nop
inc
pop
push
jne
gs
cmp
rorl
iret
add
cwtl
sbb
adc
mov
cli
lods
pop
negl
cmpsb
sbb
pop
ljmp
lock
faddl
dec
jmp
jl
call
shrb
fbld
mov
inc
mov
xchg
loop
add
cltd
jp
les
push
pushf
mov
cmp
dec
sub
in
inc
lret
cld
data16
push
outsb
out
xor
into
xchg
jns
adcw
mov
sahf
bound
jbe
loop
lds
enter
adc
lcall
pop
lret
mov
dec
adc
fsubl
mov
nop
inc
inc
outsl
shll
xor
outsb
cmp
jmp
xor
jmp
xor
xor
and
xchg
inc
xor
inc
lock
pop
inc
sbb
sti
xchg
mov
stc
inc
xor
xchg
xor
xchg
adcb
cmc
stc
popf
in
shll
and
or
push
push
xchg
cmp
movsb
xor
mov
pushf
add
cmp
push
mov
sub
ss
movsl
mov
das
pop
out
cwtl
cmp
or
aas
outsb
inc
imull
mov
rcll
cmpsb
xor
adc
idiv
sub
inc
ret
xlat
and
xchg
popf
fwait
repz
mov
push
inc
fcompp
lret
jg
faddl
push
pop
inc
bound
mov
adc
mov
jmp
aad
loope
sub
and
mov
mov
push
mov
xor
out
or
mov
xchg
dec
ja
sahf
mull
push
pop
out
and
jg
and
lcall
loop
mov
adc
enter
inc
fldcw
inc
and
aam
sti
into
dec
pop
jne
in
test
xchg
pop
jae
push
cmpsb
andl
jmp
ljmp
enter
out
js
aaa
shlb
sub
sbb
rcll
das
sub
lock
dec
cmp
rol
adc
push
jnp
sbb
mov
or
mov
xchg
mov
sbb
out
sub
pop
xchg
push
rcrb
mov
popf
fstl
clc
clc
pop
mov
sbb
or
mov
pop
mov
arpl
popa
lods
stos
call
dec
sub
xor
xor
inc
xchg
adc
mov
jbe
rol
fstpt
cmp
mov
push
adcl
test
hlt
in
jecxz
mov
mov
sub
adc
fs
movsl
popf
jbe
adc
jns
xor
loope
jp
inc
inc
cmp
popa
push
mov
push
inc
rclb
mov
xlat
push
decl
fldenv
or
fcmovnb
dec
movsb
pop
into
mov
mov
xor
sbb
loop
mov
in
sbb
fsubrs
inc
call
test
test
xchg
add
add
ja
pop
lret
push
push
lcall
xchg
sbb
sbb
ficoml
mov
mov
data16
les
int3
or
sub
lea
push
cmp
shlb
cwtl
or
sub
inc
sar
fnsave
jno
cmp
imul
fs
ljmp
xchg
into
ret
mov
leave
inc
mov
jnp
xchg
dec
int
shl
dec
jecxz
int
mov
push
push
mov
jbe
pop
mov
adc
addr16
lds
add
movl
mov
clc
xchg
jo
cmp
test
xor
stos
orl
jmp
scas
scas
lret
jo
sub
xor
pushl
mov
int
add
xchg
add
fnstsw
icebp
jmp
incb
out
xchg
repz
loop
popa
inc
sbb
lds
dec
cs
iret
push
mov
sub
test
aam
xor
lret
in
xchg
mov
adc
fsubr
mov
xor
mov
out
jge
cs
sub
mov
test
jl
push
fiadds
ljmp
cmpsl
pop
push
out
int
push
jecxz
push
and
pop
mov
push
ja
and
pop
out
mov
push
and
adc
jnp
aaa
into
jg
test
xchg
addl
cwtl
pop
adc
cmc
sbb
lods
cmp
sub
mov
pop
call
mov
inc
pop
mov
dec
pop
repz
lret
ljmp
loop
and
push
xor
mov
dec
xlat
iret
rorl
test
sbb
xor
xchg
cmp
ficompl
sbb
pop
dec
mov
out
jno
inc
lret
xlat
loopne
iret
xlat
rorb
imul
mov
cmc
sbb
lods
mov
add
cwtl
lret
loope
out
mov
lret
cli
push
out
fisubrs
or
testb
popa
dec
mov
pop
shlb
push
mov
stos
mov
out
stos
stc
scas
xchg
cld
ficoms
bound
xchg
dec
mov
gs
xchg
jle
int3
xor
jmp
mov
xor
pop
mov
xor
or
adc
mov
dec
inc
sbb
faddp
loopne
ret
mov
sub
mov
idiv
fs
dec
push
in
dec
imul
cmc
mov
dec
xlat
call
inc
js
inc
adc
out
inc
cmp
xchg
adc
fcmovnu
or
dec
nop
ds
pop
xor
popa
cmp
inc
sub
enter
enter
fisttpll
dec
aad
aam
mov
fldt
adc
dec
xchg
pusha
pop
pop
pop
out
enter
inc
imul
or
xchg
or
mov
dec
mov
push
jne
pop
int3
fnstenv
outsb
in
dec
xchg
loopne
add
sub
adc
adc
movsb
lock
iret
inc
sbb
mov
out
cmpsb
cmp
mov
jno
cwtl
mov
mov
or
xchg
out
out
int
lahf
lahf
adc
addr16
sti
jge
outsl
ret
xchg
cmp
xorl
add
mov
idivl
fisttps
in
push
push
xor
cmp
ljmp
les
pusha
push
xor
out
push
std
insl
rcrb
jmp
or
punpckhwd
sti
lahf
and
fimuls
movsb
push
jp
push
mov
pop
data16
mov
frstor
sar
btc
pop
cwtl
stc
push
inc
lcall
pop
mov
mov
mov
push
mov
dec
mov
aad
into
or
ds
add
add
mov
out
je
das
lock
sub
mov
test
int3
sbb
cmp
jno
fildll
in
xchg
setb
xchg
int
hlt
xchg
add
loop
sarb
xchg
add
outsb
lahf
sbb
and
add
out
gs
add
icebp
and
adc
sbb
in
dec
mov
add
hlt
xor
int3
xchg
cmp
sub
mov
imul
xor
loope
jle
outsl
jge
rolb
adc
or
aas
es
xchg
fisubs
pop
outsl
movsb
adc
pushf
int3
cmp
inc
ret
dec
mov
push
adc
dec
mov
pop
add
ret
push
aaa
add
pop
aaa
pop
arpl
jmp
in
sbb
mov
and
or
push
mov
xor
call
mov
mov
leave
mov
cltd
inc
pop
inc
in
fdivl
push
adc
das
test
mov
sahf
pop
dec
mov
push
dec
inc
cwtl
mov
pop
jne
jl
insb
mov
or
fisttpl
pop
pop
push
adc
shl
fnstcw
hlt
jg
in
jo
inc
dec
sbb
enter
adc
lods
mov
es
add
popa
outsl
shlb
jne
stos
repnz
mov
shl
dec
jmp
cmp
push
test
xor
xor
rcl
clc
outsl
xor
add
cmp
ss
nop
shrl
xorb
mov
mov
pop
loop
adc
movb
mov
jns
cltd
ret
mov
fucomi
cmc
mov
js
inc
sub
lcall
cwtl
bound
in
std
fidivs
std
cltd
in
aad
mov
shll
scas
mov
mov
sub
jle
ljmp
cltd
fmuls
mov
mov
xchg
xchg
and
mov
mov
shlb
hlt
out
mov
lahf
lcall
xchg
lock
mov
xor
dec
sti
test
push
jmp
test
repz
pop
mov
adc
mov
cmp
cmp
cmpsb
sub
ror
sbb
lcall
test
loope
or
aam
sahf
das
pop
out
jo
sub
outsb
push
pop
or
mov
cli
sub
inc
mov
out
cs
mov
jbe
fwait
mov
repz
leave
dec
ror
pop
out
inc
stos
sub
push
imul
lret
adc
mov
xor
sbb
push
out
inc
ret
ror
daa
adc
sbb
lahf
xor
mov
ja
push
xor
rclb
insl
xchg
pop
out
iret
repz
or
inc
test
and
incb
aaa
mov
shll
or
push
imul
lock
mov
pop
loopne
dec
inc
or
call
popf
inc
add
loopne
mov
sub
pop
lds
mov
cmp
push
jo
jae
dec
leave
dec
adc
les
sub
mov
jno
imul
and
mov
inc
in
cmp
xor
jne
fsubrl
or
or
inc
data16
sbb
adc
mov
cmp
push
test
outsl
je
enter
dec
fwait
stos
sbb
sub
mov
pop
dec
in
sub
pop
gs
scas
and
arpl
testb
bound
cli
repz
cmp
and
mov
sbb
fcmovnbe
adc
fs
inc
mov
jb
and
lss
pop
mov
inc
mov
or
mov
sub
or
rorl
mov
pop
gs
imul
add
in
mov
in
mov
test
sub
xorb
dec
and
dec
mov
adc
insl
mov
and
lcall
cmc
add
arpl
loope
and
fidivl
fs
fucomp
popa
jae
cmpl
push
in
push
adc
lea
pop
inc
push
or
add
mov
sarb
imul
and
xchg
mov
push
and
inc
add
in
imul
lods
jno
xlat
ror
jecxz
xor
jns
add
fisttpll
ret
sbb
imul
incb
and
push
test
cwtl
shr
push
pop
cmp
insb
fincstp
out
add
roll
hlt
inc
and
enter
mov
jb
orb
sub
cs
call
jo
mov
pop
mov
cld
rcrl
icebp
pop
popa
sbb
xor
xchg
inc
popa
sbb
jae
cmpsb
mov
dec
push
sbb
stc
jne
xchg
aad
pop
cmpl
dec
push
stos
sbb
push
insl
xor
xchg
and
push
cmpsl
test
jns
ret
aaa
mov
lds
icebp
adc
scas
ja
cmpsb
mov
bound
and
sbb
sbbl
call
cmp
leave
test
mov
scas
js
adc
sarb
test
xchg
sub
push
rcrb
mov
repnz
lds
shl
popa
fdivl
shrb
push
cmp
add
mov
rclb
pop
ds
jmp
popf
push
mov
mov
int
out
xor
movsl
popa
xor
jge
fidivrl
movsl
mov
orl
and
push
add
pop
cmpsl
aas
dec
mov
outsb
bound
add
add
insl
or
mov
lock
jmp
mov
dec
and
mov
xchg
pop
xorl
aam
data16
jb
std
or
in
cmp
nop
out
pop
outsl
and
or
js
push
xor
js
stos
out
and
add
das
mov
xlat
sahf
loopne
xlat
dec
aam
lcall
pop
and
outsb
push
mov
pop
sub
mov
push
inc
loopne
jb
fdivs
push
ret
outsl
mov
pop
aas
fs
ret
dec
adc
pop
xor
pop
jmp
out
lods
test
in
mov
inc
jne
addr16
lret
jl
cmp
fstpt
imul
loopne
mov
negl
nop
decl
cmp
dec
dec
or
or
fnsave
outsl
aam
jb
mov
inc
push
insb
mov
gs
popa
add
call
out
lret
dec
sub
xor
pop
sahf
std
test
sub
int
ret
test
cltd
fs
jl
xor
cwtl
lods
add
test
out
call
scas
test
daa
inc
shrl
fwait
test
xchg
ds
mov
jbe
stos
adc
xor
inc
dec
sub
fidivrl
push
jno
dec
mov
sbb
lret
sbb
inc
sub
dec
mov
jecxz
jmp
sub
ret
jp
data16
cmpsb
pop
mov
stos
mov
imul
push
test
adcb
inc
arpl
cmp
shl
mov
push
repz
add
push
andb
fstl
fsts
mov
lea
push
inc
pop
push
jns
and
sbb
sub
mov
or
cmpsb
dec
into
lcall
negl
mov
mov
stc
arpl
stos
push
mov
pop
popw
ffreep
pop
dec
in
jg
popa
xor
sub
enter
movsl
cs
xchg
inc
ret
xchg
test
cs
and
jns
cmpsl
out
pop
jle
jl
or
cmp
adc
int3
inc
mov
mov
icebp
inc
js
ljmp
sub
mov
adc
mov
add
loop
rcr
adc
pop
and
pushf
xchg
fistpl
xchg
add
repnz
jbe
push
sbb
pop
fsubrs
rcl
sub
das
mov
daa
mov
sub
enter
out
out
mov
cmpsl
and
ljmp
mov
jl
fwait
adc
enter
adc
xor
xchg
mov
sub
push
pushf
dec
scas
sbb
jg
push
push
xor
push
push
add
add
lds
dec
pop
xchg
jl
and
out
in
push
cld
cltd
sbb
xchg
mov
mov
push
stos
push
cmp
ret
mov
xchg
mov
mov
fadds
xchg
out
daa
mov
push
mov
inc
mov
jns
aam
icebp
shrb
fisttpll
jne
popa
in
inc
push
fistpll
xor
mov
cmpsl
sub
imul
out
push
push
mov
jge
in
jecxz
inc
test
addl
rcrl
push
xchg
mov
push
adc
aas
sub
add
sbb
jnp
and
popa
ja
pop
loopne
cwtl
mov
mov
jmp
cwtl
xchg
inc
dec
jbe
dec
pop
xor
shrb
fwait
lret
mov
cmp
and
mov
movsl
inc
ljmp
lret
dec
inc
iret
dec
aam
fisubrs
mov
adc
and
add
jns
scas
aad
mov
jns
iret
stos
aaa
pop
jne
cmp
add
jg
repnz
fldenv
sbb
inc
mov
jmp
std
dec
xchg
adcb
cmp
addl
test
sub
dec
cmpsb
cmpsb
mov
outsl
sub
cmpsb
fcompl
xchg
f2xm1
aam
cs
fisubrl
dec
out
push
fidivrl
mov
fstl
adc
popa
pop
add
lds
daa
mov
pop
inc
gs
push
fwait
mov
xchg
fwait
xor
cmp
je
push
fs
mull
or
movsb
mov
xor
sar
mov
outsl
and
ret
data16
mov
jecxz
add
out
imul
cmp
fdivp
cmc
pusha
jae
sub
ror
sub
push
cld
testl
dec
sahf
adc
or
dec
stos
js
cmpsl
mov
or
jl
test
cmpsb
clc
leave
fwait
sub
mov
mov
stos
lret
scas
push
cmp
out
ret
test
in
add
inc
cmp
ficoms
scas
lahf
sarb
pop
test
roll
ret
push
repz
or
fs
lea
jno
dec
xor
cs
and
stos
enter
add
mov
aam
ret
sbb
lods
loop
mov
insb
xor
mov
out
xor
outsl
sarb
rcll
pop
xorb
stos
ror
idivb
lcall
adc
mov
lods
aam
mov
xchg
pusha
dec
stos
jnp
push
rclb
inc
out
or
les
mov
sbb
mov
dec
jb
push
inc
popf
push
bound
es
jge
les
pop
ss
testb
scas
insl
pop
loop
adc
jo
xor
mov
pop
loope
or
xor
aas
xchg
and
daa
sub
jp
jno
aaa
and
pop
loope
hlt
dec
inc
mov
push
adc
lret
jb
pop
stos
mov
inc
pop
xchg
sti
loope
adc
xchg
push
es
scas
int3
mov
nopl
push
cwtl
dec
fimuls
cld
inc
arpl
das
lret
aaa
out
ss
repnz
sub
outsb
arpl
hlt
insl
in
rcll
out
in
pop
test
add
and
mov
xchg
or
test
jg
sub
xchg
test
lods
call
cmp
cmc
shlb
outsl
sti
mov
mov
jecxz
jne
push
add
scas
into
pop
popf
push
iret
jne
ret
dec
leave
fnsave
arpl
sbb
fldenv
adc
and
lret
fldt
cmpsl
rcrl
stos
subb
cwtl
into
jb
mov
and
test
mov
pop
mov
add
shlb
sahf
xchg
iret
addr16
pop
fmul
gs
push
push
dec
add
pop
icebp
dec
pop
movsb
add
js
test
xlat
lcall
pop
ja
or
xchg
push
aad
test
mov
pop
pop
fs
es
push
jbe
push
sub
lds
inc
movsb
inc
inc
lock
repz
daa
fwait
cmp
fistl
pop
pop
cwtl
or
mov
xchg
sarb
repnz
lods
es
jecxz
inc
pop
pop
cmp
shll
and
lcall
adc
es
mov
enter
aas
test
fildll
outsl
lcall
enter
mov
or
push
xchg
andl
cmpl
sar
mov
fwait
in
in
mov
push
mov
shll
dec
in
rorb
cmp
mov
aaa
inc
xor
fmuls
jecxz
loopne
rorb
add
lcall
std
sti
or
dec
movsl
loopne
or
push
mov
rorl
fisubrs
orl
leave
add
insb
sub
mov
mov
repz
mov
mov
inc
insl
push
and
mov
jle
outsb
mov
mov
pop
rorb
or
insl
in
loopne
adc
pushf
add
adc
fstpt
pop
jo
dec
pop
xbegin
ds
adc
or
mov
cs
fildl
mov
dec
push
ja
push
jp
push
xchg
dec
insl
xchg
sub
cmpsl
aad
shlb
pop
inc
das
dec
add
push
xchg
dec
xchg
cmp
sub
dec
test
out
inc
inc
stos
repz
dec
es
and
mov
xor
push
mov
jmp
jne
cmp
mov
fstl
push
pop
mov
sbb
xchg
jp
or
inc
ja
inc
addr16
xchg
adc
mov
daa
loop
adcb
inc
cli
mov
push
cld
stos
mov
rcrl
cmp
dec
mov
ret
dec
cmp
stos
cmp
lds
pop
fnsave
and
push
cmp
adc
sbb
in
insl
cs
jo
testb
loopne
dec
divl
dec
inc
pop
aad
pop
or
sub
scas
cmp
inc
adc
fisubs
jno
mov
mov
fsts
pop
ja
enter
xlat
dec
xchg
stos
into
les
xor
xor
add
shlb
les
leave
xchg
repz
movsb
lcall
push
mov
adc
pop
fdivl
loope
imul
test
xor
stos
out
andb
sbb
sti
xchg
adc
and
cmp
sahf
mov
xchg
mov
cmp
push
cs
cld
mov
mov
cwtl
inc
pop
int
sbb
add
flds
bnd
jnp
sbb
inc
pop
fidivrl
mov
je
jge
int
inc
repz
out
mov
and
lods
xor
leave
push
xchg
xchg
jne
dec
lods
cmp
and
lret
test
addr16
lea
rcll
in
popa
and
xor
into
and
call
cmp
push
pop
sbb
outsl
gs
adc
sub
add
bound
out
dec
push
xchg
faddl
sbbl
xchg
in
or
sahf
mov
outsl
sti
and
scas
cmp
popa
mov
and
cmp
repnz
fmuls
idivl
mov
mov
mov
and
dec
icebp
mov
call
bound
loopne
dec
mov
lods
ret
push
sub
jae,pt
sbb
sbb
and
mov
ret
ret
xchg
dec
push
mov
sbb
xchg
xlat
pmulhuw
xchg
sbb
xor
sti
pop
cmc
sub
arpl
loop
imull
movsb
dec
mov
inc
mov
aad
sbb
out
jl
mov
dec
add
xchg
mov
in
inc
or
cmp
ret
loope
push
dec
mov
push
jmp
imul
and
adc
lret
das
imul
dec
lahf
xchg
ja
out
mov
fincstp
out
into
in
arpl
mov
outsb
xlat
push
sbb
insl
in
mov
cmp
pop
jge
xor
add
sbb
mov
test
lods
ja
xchg
or
push
sti
int3
jp
in
sahf
pusha
inc
push
pop
sub
inc
insl
insl
es
mov
test
stos
push
loope
imul
fstp
mov
cmp
cld
fcomi
inc
ja
push
sub
jl
xchg
fiadds
xchg
cmp
or
ja
movsb
pop
lock
lock
mov
aaa
xchg
jge
cwtl
bound
pop
loopne
pop
mov
dec
xchg
fistl
fistl
add
lcall
xor
jnp
jbe
mov
cmp
in
je
and
or
mov
test
or
ret
xchg
stos
jnp
inc
shlb
mov
adc
push
or
inc
pop
dec
adc
and
shrl
mov
lahf
inc
add
imull
imulb
pop
mov
shll
add
inc
pop
addr16
add
ljmp
mov
or
aam
cmp
xor
push
in
in
stc
adc
jl
xchg
push
fdivs
std
clc
cltd
lret
inc
inc
push
pop
int
pop
cltd
arpl
jo
sbb
lods
pop
adc
leave
imull
dec
jge
cwtl
push
mov
fsubs
sbb
ss
inc
lret
stos
xor
rcl
push
orb
xchg
lea
ror
cmp
cmp
loopne
ret
in
xchg
push
xchg
mov
push
imul
or
jecxz
leave
xchg
fistl
jae
sub
mov
testl
pop
ficompl
test
ficoms
scas
xor
int3
shl
mov
inc
jno
inc
dec
inc
mov
mov
inc
ss
outsb
and
or
inc
out
stc
or
loope
or
subl
mov
divb
sarl
xchg
and
add
adc
leave
push
sub
xor
dec
out
pop
stos
sbb
and
pop
pushf
insb
test
adc
rorl
loopw
lret
das
out
lret
mov
mov
adc
xor
or
sub
mov
les
cmp
adc
aam
test
fdivrl
sahf
jno
aaa
jge
sub
mov
jae
cmp
loopne
bound
xchg
fnstsw
mov
lret
scas
jp
push
adc
add
and
leave
popa
lods
cmp
jecxz
jnp
mov
and
mov
push
popa
cmp
adc
repz
and
pop
jmp
roll
sub
mov
shl
rolb
jle
mov
jb
std
adc
mov
mov
test
leave
push
mov
imul
aad
enter
outsb
fwait
add
and
mov
xor
lods
sahf
dec
mov
xchg
pusha
adc
orl
or
shll
decl
and
shlb
dec
outsb
insb
cltd
jae
cmp
add
out
xchg
hlt
loop
in
xchg
mov
inc
ret
dec
xchg
in
into
sub
sub
cld
add
ljmp
les
nop
mov
jno
cltd
push
xchg
popf
dec
and
mov
pop
mov
les
fnsave
or
push
dec
and
jg
inc
or
idivl
push
movsl
xchg
fwait
or
and
push
jo
test
push
enter
xchg
add
push
xchg
gs
pop
pop
ja
repnz
fucomi
mov
out
and
std
cmpsl
jle
cmp
ret
jge
xchg
cmpsl
add
or
into
in
jle
xor
hlt
inc
cmp
jno
lcall
mov
mov
mov
cld
aam
and
jecxz
call
lods
lock
shlb
into
sub
in
xor
lret
out
jo
xor
pop
or
pop
call
adc
push
mov
xchg
cmp
out
mov
inc
or
xchg
aaa
cmp
pop
mov
mov
jg
cmp
loopne
xchg
xchg
push
push
adc
jge
dec
roll
or
mov
ds
push
xchg
jmp
dec
arpl
orb
cmp
dec
sbb
jae,pt
or
mov
sub
ffreep
mov
ds
or
insl
pop
pop
scas
jmp
lods
jnp
in
neg
leave
push
cmpsb
pushf
push
lea
xchg
mov
inc
into
in
nop
mov
inc
jle
sarl
sub
ja
sub
stos
push
ret
xlat
testb
or
push
dec
mov
lock
cmp
or
daa
pop
sub
dec
je
imul
adc
add
push
repz
fs
pop
push
daa
inc
scas
sub
imul
pop
test
or
or
mov
clc
mov
push
mov
push
sti
test
jnp
out
cmp
out
xchg
dec
jge
in
lods
cmp
stc
adcb
and
push
les
leave
dec
add
mov
mov
cltd
out
push
sbb
jge
iret
fdivrs
imul
dec
xchg
adc
dec
lcall
fiadds
adc
jecxz
fdivs
int3
mov
fmuls
js
lcall
jg
aas
ljmp
aaa
imul
push
or
cmovne
sbb
push
enter
movsl
jmp
add
in
push
push
stc
clc
add
mov
xchg
bnd
mov
cmc
jge
je
cmp
xor
ret
movsl
test
xchg
movsb
xchg
pop
push
rol
imul
cmp
mov
lods
and
inc
push
lahf
ret
pop
aam
lret
add
nop
pop
mov
xchg
stc
cmc
aas
push
mov
mov
xlat
andl
sub
movsl
and
sbb
mov
ss
cli
mov
pop
mov
sahf
stos
and
mov
lret
dec
cwtl
pop
push
out
out
pop
mov
add
cmp
lahf
dec
lret
lea
adc
int3
sub
mov
or
cltd
or
xor
cmp
inc
and
xor
sbb
dec
enter
out
outsl
cmc
and
push
jns
insb
cmp
push
xchg
imul
enter
or
sbb
popa
leave
out
xchg
mov
inc
pop
lods
xchg
rorb
xchg
xchg
int
and
js
movl
xorb
sbb
xor
shlb
jbe
ja
jg
mov
dec
pop
jmp
sbb
add
test
int3
inc
test
daa
loope
loop
jl
adc
mov
push
pusha
bound
mov
fildl
adc
iret
dec
inc
jbe
inc
cmp
push
popa
mov
pop
js
inc
nop
pusha
mov
xor
idivl
cmpsb
out
inc
in
cld
fldenv
adc
hlt
fsubr
out
lock
xchg
addl
aam
movsl
mov
in
aaa
push
mov
and
mov
movsb
pop
xchg
pop
movsl
clc
fiaddl
sub
push
in
call
jg
or
pop
inc
jb
jno
adc
mov
pop
sbb
mov
jb
lock
xor
jae
popa
lcall
jle
mov
mov
jle
mov
aam
sbb
pushf
xchg
test
jl
mov
jp
pop
repnz
in
pop
sub
pop
repnz
xor
sbb
mov
cltd
mov
gs
imul
push
int
dec
lods
inc
jno
jb
bound
dec
xchg
aaa
insl
idiv
negl
add
ja
dec
testb
fucomi
out
mov
jle
stc
mov
dec
and
xor
and
push
in
out
mov
dec
aam
in
out
addr16
xchg
loopne
incl
or
nop
scas
jo
cmp
insl
cwtl
dec
lods
lods
adc
mov
dec
rorb
xorl
fcomip
mov
inc
popf
jmp
nop
shlb
ret
aam
movsb
adcl
mov
sti
sub
xor
stos
cmp
sbb
or
jo
aam
pop
test
cmp
pop
push
stc
jns
pop
and
into
cs
xchg
sbb
cmp
mov
pop
cmpsl
add
sub
cltd
stc
stos
adc
or
pop
ficomps
sar
xor
jno
nop
mov
mov
les
push
jp
sbb
cmp
stos
push
push
bound
out
xchg
in
lea
out
xchg
fistpll
cmp
adc
ret
out
and
inc
xor
rcr
cmp
pop
lcall
incb
sub
push
xchg
and
in
shr
fstpl
jne
imul
mov
or
daa
imul
mov
ret
lret
ja
dec
add
fbld
shll
stc
insl
shll
pop
sti
pop
mov
dec
pop
nop
std
pop
aas
sbb
xor
mov
sbb
movsb
cmp
sbb
scas
lahf
add
adc
das
adc
inc
fisttpll
adc
cmp
mov
inc
push
lcall
cmp
xor
in
es
repnz
sbb
loopne
bound
mov
xchg
jp
jnp
sub
jmp
add
fsubrs
addr16
pushf
test
adc
sbb
stos
lahf
arpl
pop
in
or
ss
iret
lahf
cmp
push
fiadds
aaa
js
xor
xor
test
fstpl
lret
adc
outsl
pop
setle
je
mov
sbb
mov
jbe
xchg
add
xchg
in
cmp
mov
int3
stos
inc
jecxz
cmovo
pushfw
pop
imul
cmp
jo
inc
fwait
pop
dec
addl
test
roll
fnop
unpcklps
mov
dec
adc
rcrb
stos
ljmp
mulb
sbb
bound
rol
nop
imul
xchg
test
shr
gs
inc
pop
jno
pop
pop
cmp
add
fsubr
leave
mov
outsb
xchg
mov
pop
test
dec
mov
ja
pusha
mov
gs
and
mov
push
mov
test
jno
inc
lcall
out
cli
sbb
shrl
pop
aas
pop
cmp
inc
fists
imul
sbb
arpl
jmp
add
loope
lea
in
imulb
inc
les
xor
int
and
and
mov
pop
adc
add
lea
addb
push
xor
sub
fwait
mov
mov
sarl
movsl
mov
adc
notb
dec
add
jecxz
fdivp
jb
sbb
fwait
cmp
fucomip
add
mov
jbe
jge
jp
out
aaa
jnp
sbb
pusha
inc
push
cmp
ds
rcr
je
dec
push
or
mov
fisttpl
xchg
push
stos
repz
pushf
xchg
xchg
test
shlb
add
mov
into
push
rcll
mov
mov
out
outsl
inc
hlt
imul
mov
sbb
sbb
xchg
dec
ds
mov
adc
dec
je
add
mov
and
ds
jns
cmc
fs
adc
in
sub
mov
push
add
scas
mov
test
mov
pop
shll
cmp
xchg
fsubs
pop
and
xchg
sar
insl
jg
out
shl
hlt
cmpsl
inc
pop
cmc
cmp
mov
sub
stos
clc
inc
xchg
pop
imul
stc
sub
and
or
or
fcoml
int
pmullw
cmp
mov
sub
fdivrl
stc
jg
jb
and
in
outsb
add
jle
movsl
outsb
sub
inc
xlat
push
dec
scas
mov
in
mov
out
and
call
shlb
xor
fildl
inc
adc
push
xlat
outsl
scas
push
shr
lret
sahf
add
ss
inc
jge
xor
adc
push
mov
add
cmp
and
andb
test
outsb
push
bsr
sub
lea
xchg
pop
and
xor
shll
add
pop
cmpsb
out
cmp
pop
popa
xchg
insl
shlb
jmp
inc
aam
hlt
jns
enter
movmskps
sarb
pop
popf
out
cmc
push
push
aaa
jp
mov
adc
cmp
shl
jne
xor
sahf
jne
and
lret
aaa
push
int
outsl
iret
xchg
xor
cli
mov
mov
xor
mov
data16
pop
sbb
add
push
sub
dec
repz
mov
pop
mov
aas
cli
je
jge
mov
int3
xor
out
dec
mov
orl
push
xlat
xchg
mov
cmc
adc
enter
adc
xor
aaa
mov
add
inc
shrl
leave
jno
pusha
xorb
add
push
fiadds
outsl
in
movsl
scas
fs
jmp
jmp
and
or
pop
mov
and
fnstsw
inc
in
xor
mov
and
lods
inc
int
ljmp
xchg
test
jle
je
dec
mov
lret
xchg
pushf
push
mov
and
mov
jecxz
stos
in
xlat
or
js
mov
leave
cli
repz
dec
push
mov
inc
inc
sub
xor
les
mov
movsl
imul
call
jo
xlat
inc
mov
sbb
or
cmp
das
xor
mov
popa
out
xchg
cmp
mov
pusha
jecxz
fwait
int3
add
xchg
mov
sbb
adcb
sti
sti
testb
cmpsl
stc
call
and
aad
mov
int
repz
pop
push
mov
rcrl
jl
call
jns
and
sbb
aam
pop
ffree
push
jbe
sbb
fidivs
jnp
mov
mov
add
data16
ffree
imul
sbb
mov
sahf
iret
mov
andb
push
out
movsb
or
xchg
inc
popa
push
mov
movsb
shrb
pop
daa
dec
test
dec
in
nop
jnp
mov
insb
out
or
cmp
xchg
pop
adc
mov
mov
push
mov
test
inc
xchg
mov
and
add
add
cmc
test
pop
fwait
dec
sub
push
inc
adc
shrl
xchg
mov
stos
cmp
imul
into
imul
cmp
xor
jns
ficompl
lcall
add
xor
stc
rcrl
sbb
filds
iret
jbe
push
or
aaa
or
dec
xor
insb
call
pop
shl
push
aas
mov
adc
inc
cmpsb
lahf
das
mov
gs
fbstp
movsb
sbb
popf
andb
loopne
cmpsl
cmpsb
pop
push
adc
mov
sbb
in
mov
jge
mov
iret
dec
jo
push
pop
pop
test
or
aad
xor
inc
inc
adc
push
mov
or
jae
push
xchg
dec
cs
out
jp
pop
cli
inc
pop
dec
repnz
fistpl
mov
fisubl
nop
cli
adc
xor
fsubr
add
adc
rol
int3
test
mov
repz
lock
lcall
jnp
imul
and
clc
stos
leave
shll
shl
or
dec
sti
dec
sbb
repz
fcomps
adc
sbb
popa
xlat
leave
mov
iret
aam
xor
insb
outsl
cwtl
dec
jns
pop
jae
jbe
xchg
jnp
and
loop
in
jecxz
test
or
insl
jns
push
es
sub
es
cmp
cltd
mov
popa
jbe
mov
jg
or
fnsave
rorb
aam
enter
push
clc
popa
cmp
dec
icebp
movsl
ffreep
in
push
adc
mov
rolb
daa
and
mov
xchg
aam
imul
xchg
mov
iret
pop
test
imul
cli
les
or
out
pop
add
mov
outsb
aad
fcmovbe
pushf
shlb
jmp
or
out
bound
pop
in
into
push
sti
idiv
mov
inc
mov
push
mov
idivb
inc
push
in
jg
mov
jmp
xor
movsb
jo
into
fwait
les
out
outsb
inc
dec
je
out
ljmp
mov
xchg
push
adc
adcb
inc
lcall
insl
push
movsl
or
xchg
cwtl
adc
lds
fildll
inc
sub
and
in
mov
scas
or
xor
push
lea
fwait
mov
cmpsl
pop
add
push
aaa
inc
sub
cli
mov
xor
jle
mov
cmp
aaa
fcmovnb
add
cmp
adc
sbb
inc
scas
pop
push
xor
aaa
outsb
in
sbb
inc
mov
inc
xchg
lock
inc
lods
jp
inc
stos
jge
add
std
test
push
sbb
in
pop
inc
ss
mov
mov
lock
or
fxtract
and
in
and
movsb
mov
sbb
push
push
popf
pushf
mov
imul
add
fcomip
adc
loop
popa
popf
repnz
jmp
xor
popf
push
mov
fnstsw
mov
les
aad
mov
imul
data16
popf
pop
add
stos
sbb
hlt
add
shrb
rclb
xor
aad
push
jmp
iret
pop
push
movsb
or
in
mov
adc
xchg
aaa
jp
sti
ret
in
xchg
cmp
jns
scas
jg
mov
cmp
mov
dec
adc
test
push
inc
ret
pop
in
stc
out
push
or
jp
inc
std
inc
jbe
push
out
push
dec
lahf
fisubrs
in
addr16
movsl
sbb
inc
daa
imul
jg
cmp
in
pop
imul
pop
cwtl
or
and
push
sbb
clc
cmp
test
clc
inc
xchg
or
dec
mov
stos
mov
fdivs
mov
xchg
test
dec
jnp
xor
and
shrb
dec
aam
mov
pop
push
pop
test
stos
aaa
mov
insl
iret
cld
popa
sub
daa
lea
dec
aad
out
fidivl
pop
negl
push
push
ss
jmp
movb
scas
pop
or
loop
dec
mov
sub
mov
dec
mov
xor
nop
enter
jmp
outsl
sbb
inc
daa
pop
pop
adc
dec
or
xchg
adcl
imul
cld
stc
xchg
out
loope
mov
and
mov
sti
lea
jle,pn
dec
push
xor
icebp
test
in
and
and
movsb
jmp
cwtl
sbb
out
push
sti
mov
cltd
mov
dec
lea
add
das
jb
xor
add
dec
clc
inc
mov
shlb
inc
loopne
lock
repz
mov
jecxz
mov
xchg
mov
test
and
pop
cs
sub
iret
jmp
adc
stos
out
ror
cmp
push
xor
shlb
lahf
jne
outsl
mov
xor
sarl
push
pop
cld
xchg
adcb
jp
lcall
fwait
mov
jle
scas
lock
outsl
les
mov
mov
repz
cli
xorl
inc
aaa
push
ss
and
push
stos
dec
mov
inc
lods
subl
pop
push
lret
cmp
inc
loop
cmpsl
cmpsb
adc
jne
cmp
jnp
mov
scas
test
arpl
testb
xor
pop
cmp
mov
enter
xor
test
mov
cmp
xlat
aas
test
push
stos
cmp
pop
mov
mov
fs
lods
inc
ret
or
mov
jecxz
enter
jle
sub
add
push
inc
and
cmpsb
mov
push
add
push
xor
out
mov
push
adc
aam
push
mov
push
pop
je
popf
mov
andb
xor
and
daa
xor
pop
and
mov
aad
cltd
test
sahf
xchg
fsts
out
cltd
push
in
pop
or
adc
push
inc
rcrl
imul
mov
push
pop
xchg
je
mov
inc
jbe
mov
mov
inc
mov
sbb
lret
adc
je
xchg
and
ret
push
aad
pop
data16
adc
jo
fld1
push
jnp
jmp
mov
cltd
dec
jb
xchg
sub
outsl
mov
pushf
int3
nop
imul
inc
jge
adc
sub
aad
sub
mov
ret
out
jg
adc
add
rolb
cmp
ret
js
jbe,pt
sbb
add
aam
push
adc
cli
jae
mov
cmp
xchg
jge
mov
iret
hlt
in
sub
pop
ret
jle
iret
iret
divl
mov
fimuls
or
shlb
push
jns
or
pop
xor
or
lret
movsb
push
and
inc
fsubl
and
ljmp
cmpsb
push
mov
mov
sbb
dec
fildll
out
pop
cli
cltd
aas
dec
xor
arpl
stos
lahf
std
imul
or
xor
nop
in
push
lock
std
outsl
stos
js
lods
scas
xchg
mov
ja
addr16
shlb
in
pop
push
fimuls
push
mov
test
test
loop
jl
mov
adc
sahf
or
imul
xchg
aam
jmp
cmpsb
loope
cli
push
movsb
xchg
shlb
imul
fs
icebp
jae
mov
xlat
std
mov
lret
xor
mov
stos
aad
sub
jnp
outsl
sbb
xchg
sbb
jmp
push
lds
xor
test
mov
loop
pushf
lds
mov
loop
add
stos
fstpl
mov
xor
xlat
jae
adc
xchg
push
aas
xor
dec
sbb
dec
add
inc
popa
pop
popa
adc
dec
inc
lcall
sub
ja
lock
dec
fucomip
scas
inc
adc
mov
mov
mov
mov
lret
xor
mov
mov
int3
shll
mov
xchg
out
call
out
repz
ror
cmp
sbb
push
sub
adc
in
scas
leave
hlt
mov
sbb
fstpl
jae
shlb
inc
sub
lret
adc
add
sbb
mov
fcomip
mov
ds
cmc
xor
mov
mov
xchg
and
popf
push
fwait
adcl
shl
adc
jno
xchg
mov
outsb
push
pop
cli
movsl
inc
xor
push
lds
mov
mov
daa
push
mov
daa
call
fptan
lahf
sbb
pop
outsb
pop
or
or
push
icebp
pop
xchg
not
fdivrl
sub
std
dec
inc
pop
inc
cmp
mov
push
mov
cmp
xor
mov
xlat
pop
in
mov
adc
aam
pusha
movsl
xor
test
or
jnp
xchg
call
push
sbb
pop
outsl
test
mov
enter
mov
mov
sub
repnz
call
mov
jae
push
jp
mov
mov
mov
jmp
and
cmp
jg
stos
push
jns
xor
sub
xchg
shl
mov
pop
sub
in
or
pop
mov
fcmovb
test
sbb
imul
movsb
frstor
jns
push
xor
mov
fcoml
and
xor
out
sbb
dec
fldt
fbld
inc
pusha
mov
fs
ja
mov
sbbl
dec
dec
xor
insl
lods
iret
scas
mov
out
je
in
inc
sub
icebp
roll
pusha
xchg
xorb
fldenv
es
cmpsl
jbe
add
mov
int
adc
adc
popf
negl
dec
ja
adc
or
mov
addl
jae
cmp
aaa
jmp
fsubs
push
subl
xor
out
add
mov
leave
sub
or
pusha
jp
cmpsb
sbb
das
or
addr16
sbb
out
jl
fcmovnbe
adc
mov
pop
stc
dec
mov
xor
pop
mov
sbb
loop
cmpsb
inc
cmp
fs
loope
mov
std
pop
and
mov
leave
inc
push
and
mov
repnz
stc
sbb
push
or
or
rcll
jge
mov
pop
xor
aad
xor
testb
push
cmc
sub
cmp
sub
sahf
cwtl
pop
jo
pop
ljmp
sbb
mov
lret
iret
add
push
psubsb
daa
lods
sbb
xchg
pop
sahf
push
cmc
test
or
mov
es
loopne
enter
fisubrl
xlat
sbb
fdivrs
daa
adc
outsl
mov
mov
fmuls
push
jge
jle
mov
les
lret
sub
mov
and
es
out
pop
cli
mov
in
add
inc
sub
aas
out
js
inc
adc
or
jecxz
sub
cli
fimull
mov
call
jmp
sbbb
pop
inc
cmpsl
bswap
mov
mov
cmpsb
idivl
adc
int
xlat
int3
lret
dec
lahf
nop
imul
jle
xor
lock
fcomps
dec
push
xor
cli
ja
roll
dec
and
loop
clc
ss
bound
dec
sbb
pop
ja
clc
xchg
sub
push
rorl
dec
sub
mov
adc
enter
xchg
mov
fsubp
movl
in
cld
rcrl
fdivr
aaa
fbld
mov
jecxz
test
xchg
mov
out
add
ds
mov
xchg
loopne
loopne
into
mov
xor
inc
push
out
rolb
aam
mov
mov
fisttps
xchg
xor
popf
fcmovnb
in
popa
xchg
mov
and
cmp
enter
int3
jo
ds
xchg
lret
movsl
outsl
mov
dec
test
xchg
xor
mov
outsl
inc
xchg
inc
inc
insl
test
pop
and
nop
or
add
mov
mov
add
push
inc
daa
push
adc
cmp
popf
dec
mov
pop
ret
push
jle
mov
mov
and
mov
fidivrs
aam
les
outsl
enter
loop
stos
daa
add
adc
xlat
pop
or
stc
sub
add
adc
lcall
mov
adc
test
jne
inc
push
sbb
mov
jbe
outsb
dec
ret
jecxz
inc
pop
int
adc
out
jns
mov
icebp
push
jecxz
lret
add
pusha
inc
scas
loopne
gs
mov
ret
fsts
outsl
push
aad
xor
loope
shrl
pop
cmp
xor
push
popl
pop
fdivl
ljmp
mov
xchg
add
dec
ret
decl
sbb
mov
inc
xchg
out
rcl
cmp
lds
adc
ret
imul
in
das
jmp
insl
fxch
xchg
cmp
xor
xor
das
popa
sahf
hlt
cmpl
dec
adc
xchg
adc
divl
dec
or
addr16
test
fsubrs
decl
jnp
adc
cmp
adc
xchg
jge
test
cmp
and
mov
xchg
jb
mov
jne
push
popf
nop
and
cmp
ret
mov
pop
bound
xor
cwtl
adc
cmpsl
lahf
scas
dec
xor
lcall
jae
cmpsl
in
fidivs
mov
mov
leave
data16
xchg
adc
inc
stc
inc
mov
push
push
dec
add
cmp
andb
out
xchg
adc
mov
add
xchg
jnp
fwait
ret
fwait
push
int
fdivl
or
cmp
out
fdivrs
jns
push
xlat
sub
movsl
fldenv
dec
aas
inc
push
mov
and
xchg
ss
pop
xchg
stos
jle
and
mov
shll
cmp
jo
mov
inc
cli
mov
xor
in
imul
xor
arpl
neg
add
dec
mov
sub
cmpsl
fistpl
sub
cmp
jle
jbe
gs
int
add
add
jo
popf
adc
in
push
shl
push
je
and
or
mov
pop
jnp
lret
mov
mov
push
fdivrl
xor
faddl
add
lret
jle
mov
pop
rcll
test
or
pusha
hlt
and
ja
mov
leave
mov
lock
mov
ror
movsl
and
stc
in
fcoms
dec
jns
lret
push
popf
jmp
mov
mov
ds
rorl
sbb
mov
jnp
pop
jge
and
xor
xor
ret
fdivrp
dec
xor
jnp
adc
pop
push
or
call
out
sahf
dec
xchg
lcall
data16
push
fcoms
cmpsl
arpl
in
movsbl
dec
or
scas
lods
es
mov
dec
test
test
mov
cld
xchg
cltd
rcrb
adc
je
adc
mov
mov
shl
xor
add
dec
ror
xor
repz
sbb
and
test
push
jge
mov
loopne
sub
fidivs
in
scas
js
sub
or
or
lret
adc
pop
in
stos
xor
push
dec
and
sub
sub
shlb
add
shll
loop
or
inc
loop
cmp
or
hlt
push
xor
ret
sub
mov
jecxz
enter
xchg
add
xchg
fcomps
push
popa
outsl
mov
sbb
jmp
xchg
mov
inc
dec
pop
push
inc
mov
mov
push
movsl
orb
mov
mov
cmp
pop
push
sbbl
lea
mov
mov
adc
jg
aam
into
repnz
mov
or
inc
dec
and
inc
out
scas
sub
xor
cvtps2pi
lcall
or
stc
lock
lcall
pusha
xchg
loop
push
fbstp
jns
lock
inc
sub
jno
test
into
fidivrs
popf
ljmp
or
icebp
push
xchg
dec
dec
jo
icebp
dec
xor
pop
stc
stos
pop
xchg
adc
int3
popa
in
lea
repz
add
scas
aad
xchg
xor
and
ret
bnd
roll
push
rcrl
stos
aaa
pop
call
test
sarb
out
andb
or
mov
sti
out
call
jb
out
jne
in
jle
pop
cmp
push
jg
mov
push
cmpsb
jae
mov
xchg
gs
mov
add
jne
mov
leave
rol
xor
test
cld
mov
hlt
mov
mov
and
or
mov
cmp
mov
and
sbb
jp
dec
push
sbb
push
inc
pop
int3
push
idivb
mov
jns
stos
xchg
ficompl
sbb
adc
lods
push
icebp
jae
sbb
aad
mov
xor
cmpl
mov
shll
cmc
xchg
dec
mov
enter
push
xlat
ljmp
xchg
adc
scas
dec
nop
push
cli
mov
dec
mov
insb
pop
ljmp
mov
mov
push
pop
xchg
outsl
dec
out
lret
lcall
jmp
mov
test
divl
cmpsb
add
push
xor
push
aas
mov
or
int
fsts
fcomp
loope
dec
in
cs
mov
pop
out
int
jns
shl
adc
inc
cmp
or
dec
inc
cs
or
iret
in
jno
not
idivb
xor
xchg
mov
lcall
dec
adc
push
jbe
das
pop
or
lcall
adc
push
enter
inc
mov
lahf
add
sub
es
fdivp
stos
aaa
push
push
rcrb
inc
sbb
leave
and
jecxz
ja
inc
je
gs
ret
negl
popa
ja
rcll
jbe
mov
enter
insb
mov
xor
mov
leave
adc
mov
pop
mov
outsb
mov
enter
dec
adc
int3
popa
push
outsb
inc
les
mov
inc
xchg
shl
outsl
inc
mov
cmp
rorb
iret
inc
lods
cmpsb
rolb
add
dec
pop
insl
mov
shl
data16
adc
pusha
in
enter
pop
addb
ficoml
das
pop
adcl
in
fwait
mov
stc
mov
dec
out
xchg
frstor
mov
inc
enter
pop
test
xchg
test
jmp
add
jle
add
leave
lcall
ret
pop
jb
add
test
cmc
jnp
mov
test
mov
sbb
and
dec
adc
and
inc
or
or
movsl
int3
out
movsl
and
sub
inc
and
lcall
adc
lcall
scas
icebp
cmpsl
pop
xchg
push
jmp
addr16
lds
andl
cwtl
xlat
mov
push
fiaddl
mov
push
jns
inc
sbb
sbbl
pushf
idiv
pop
roll
and
sqrtps
pop
sub
fwait
das
dec
cmp
xor
lret
and
fs
cld
mov
jno
data16
imul
push
stos
mov
divl
mov
sti
fstps
cmc
sbb
mov
lea
pop
lock
push
aad
inc
fistpll
sbb
pop
push
fs
mov
popf
xlat
xor
xor
cmp
stos
sti
dec
imul
sbb
or
mov
sub
push
bound
inc
loope
cltd
inc
test
mov
cmp
or
daa
jne
add
arpl
jmp
push
xchg
xor
movsb
sub
cmp
or
leave
aas
jns
clc
dec
or
iret
lods
stos
inc
imul
nop
test
mov
mov
push
gs
and
int3
inc
lret
leave
mov
adcl
shlb
mov
cmp
mov
push
xor
add
test
adcb
sar
out
ljmp
hlt
or
cmc
addb
jecxz
cmp
or
testl
sbb
mov
mov
cwtl
jae
out
mov
dec
adc
or
jmp
scas
mov
popa
push
lahf
inc
inc
mov
loop
mov
or
jl
ljmp
inc
sti
and
iret
xlat
or
imul
fisubs
add
imul
xchg
out
xrelease
popa
mov
jl
lcall
push
sbb
push
ss
fisubrs
cmp
ljmp
out
push
jmp
in
in
scas
pop
fcompl
leave
push
dec
cmp
stos
push
out
mov
movsb
dec
and
ds
adc
jne
pop
movsb
inc
stos
xchg
outsl
stc
inc
inc
test
mov
outsb
and
stc
pusha
rclb
jmp
xor
test
stos
daa
fsubrs
lret
cmpsb
adc
cmp
arpl
je
popa
jbe
mov
cs
add
push
cmp
lock
sbb
mov
stos
pop
hlt
gs
add
inc
add
mov
lret
mov
cs
mov
pop
pop
jae
sbbb
cmp
mov
fisubs
dec
std
inc
xchg
mov
sahf
mov
jg
movsl
cmc
add
out
xchg
inc
movsb
adc
pop
scas
mov
and
hlt
add
subb
in
rorl
fwait
or
stos
lods
mov
stc
sub
fsubrs
mov
in
inc
xchg
rcl
jecxz
jno
push
cs
nop
test
add
imull
cmc
push
test
stc
and
fcoml
jge
dec
inc
out
adc
or
jmp
add
cltd
outsl
test
jecxz
dec
adc
push
ficoml
push
inc
push
cmc
arpl
inc
add
sbb
lcall
pushf
mov
jp
in
mov
fwait
subb
or
or
popf
imul
in
pop
orl
mov
pop
sahf
and
call
icebp
je
push
mov
xor
clc
mov
xor
jl
scas
mov
or
mov
pop
mov
cmp
orb
iret
xchg
push
push
push
sbb
movsl
xor
add
jp
call
mov
mov
inc
mov
lret
lods
pusha
adc
xor
or
or
xor
insb
pop
mov
pop
divb
and
xlat
cli
out
mov
adc
sbb
mov
subb
xor
inc
sbb
insb
iret
lock
dec
add
pop
dec
iret
push
mov
xor
mov
ds
gs
imul
adc
out
push
sti
fiadds
stos
xor
std
xor
cmp
outsl
jp
jge
movsb
jge
mov
sahf
std
shll
sahf
test
in
or
jae
mov
lcall
hlt
jle
push
push
inc
push
cltd
inc
mov
daa
in
mov
jno
int3
in
adc
cmp
jmp
imul
data16
icebp
frstor
insb
add
jle
jb
push
mov
int3
cld
push
imul
cltd
xorps
and
imul
jno
inc
pop
lods
ret
insb
lahf
gs
out
mov
ds
adc
jb
and
shll
mov
repz
sbb
insb
in
mov
inc
mov
push
outsb
jb
fisubl
xor
or
dec
sbb
fdivr
sub
call
jge
pop
pop
and
dec
dec
mov
es
lods
outsb
pop
dec
test
mov
pop
xor
out
mov
ss
jl
fwait
cmp
cmp
fmuls
mov
jo
pop
cmp
inc
out
push
addr16
outsl
hlt
mov
pop
sbb
fwait
insl
popf
sbb
fwait
jle
repnz
lock
cmp
scas
xchg
mov
fsubp
sahf
cmp
sbbb
lcall
test
stos
insb
and
or
int3
adc
cltd
fcomps
adc
sub
jge
std
add
sbb
aas
push
test
cmpsb
arpl
or
jle
xchg
lret
mov
xchg
pop
xor
scas
add
xchg
mov
push
lret
pop
and
shrl
sub
pop
stc
je
jno
xor
mov
xchg
push
fadds
adc
ret
xchg
in
pop
inc
push
push
fidivs
ret
aas
aad
dec
mov
add
dec
pusha
fimuls
add
iret
dec
and
test
mov
outsl
mov
jmp
mov
sub
xor
aas
mov
data16
or
out
inc
dec
mov
jnp
ss
or
sbbl
mov
xor
jl
pop
insb
xchg
pop
in
stc
xor
mov
xor
icebp
rclb
mov
cmp
xchg
push
fnsave
mov
mov
rcr
leave
sti
jno
aad
fnstcw
jp
test
push
push
xor
cmp
dec
popa
int3
jg
sbb
and
test
xor
mov
xchg
ds
push
outsl
call
mov
loop
ret
aam
lret
int3
add
xchg
or
xor
out
loopne
jmp
or
xchg
adc
pop
faddl
fildl
pushf
inc
out
rcl
sbb
add
jo
mov
fistl
dec
das
sbb
push
sub
scas
clc
mov
mov
xchg
loop
and
scas
pusha
pop
pop
in
mov
repnz
insl
jle
dec
sub
sahf
pmulhuw
lds
sub
xor
neg
movsl
cmp
jge
mov
mov
loop
cld
jl
adc
and
div
mov
fs
push
outsb
xor
mov
cmpsl
cmp
sub
push
clc
lock
es
test
xor
mov
jge
mov
loop
arpl
push
vcmppd
fisubrs
call
lret
push
lods
popf
xchg
les
int3
imul
fisttpl
mov
push
pop
and
popf
loopne
push
xor
mov
xchg
ja
lret
push
push
cmp
and
lret
aaa
fiadds
jae
dec
mov
fadds
or
jle
xchg
dec
sti
push
mov
jb
les
sub
pop
sbb
sub
lahf
xor
mov
loopne
mov
jl
mov
mov
jo
out
ljmp
sarb
jle
insb
xorl
mov
stc
sti
popa
and
aas
xchg
push
push
and
pusha
or
shlb
mov
lods
jo
mov
stc
adc
aam
pop
xchg
mov
pop
xchg
cmp
mov
mov
sbb
std
sbb
cmp
xor
fnstenv
lds
mov
mov
cld
mov
mov
xchg
pop
pop
jae
repz
sti
xchg
shrb
test
xor
lods
in
jns
jb
adc
adc
inc
push
xchg
mov
cmp
neg
cmpsb
fdivrl
mov
and
sbb
and
call
or
adc
bnd
data16
dec
lcall
ss
inc
ss
or
push
jecxz
xchg
sti
inc
sti
fimuls
mov
dec
fists
pop
aas
pop
inc
and
xlat
out
adc
pusha
jp
inc
or
stos
mov
dec
test
add
pop
xchg
push
xchg
int3
xor
out
jle
xchg
xchg
mov
cmp
imul
mov
push
sbb
dec
inc
push
mov
adc
sub
or
fwait
leave
mov
mov
fcmovnu
outsl
mov
xor
cmp
out
mov
and
adc
jg
or
add
out
jno
pop
and
lcall
test
and
loope
subb
lcall
imul
pop
shrl
push
scas
push
add
insl
jmp
mov
ror
push
mov
jne
negl
enter
js
push
leave
mov
in
pop
ljmp
mov
add
or
inc
loope
pop
adc
or
lret
out
jp
push
mov
push
scas
lret
sbb
rorl
call
lahf
fldl
xor
mov
lock
dec
jecxz
into
shlb
mov
add
cwtl
out
test
dec
outsl
addr16
outsb
shlb
dec
cmp
adc
sub
arpl
or
xor
xchg
lret
int3
sub
xchg
subl
idiv
faddl
mov
xlat
pop
or
cmp
test
and
lds
push
mov
add
inc
js
repz
insb
ja
sar
jbe
push
out
xchg
inc
insb
sti
mov
aaa
sbb
cltd
cmc
or
movsl
lahf
mov
pop
das
gs
aas
xchg
push
pop
shrd
das
jecxz
mov
repz
and
fs
pop
lret
pop
push
pop
insl
in
sub
divb
pushf
popa
push
fiadds
push
gs
into
into
jnp
out
sub
sbb
data16
fcom
daa
xchg
cmpsl
ficompl
cmp
pop
jle
scas
andb
lahf
mov
or
xchg
popa
and
pop
and
jbe
push
je
sar
add
mov
pop
outsl
fisttps
lahf
bound
cmp
and
cli
iret
add
stc
sahf
xchg
lea
jnp
mov
je
movsb
js
mov
and
aam
sub
mov
sub
int3
es
popl
popf
rcll
add
add
adc
mov
lret
dec
sbb
sub
jmp
repnz
jb
add
fisubrl
inc
add
les
mov
js
cmpsl
adc
jne
pop
cltd
addb
mov
aad
imul
xor
dec
push
adc
jmp
lahf
and
jmp
mov
arpl
xchg
mov
in
push
xchg
add
mov
pushf
pop
imul
cmc
repnz
sbb
mov
pop
loopne
adc
rcr
jl
push
mov
popf
fnstcw
pop
test
lret
sbb
test
fisubs
test
inc
out
jmp
imul
add
dec
or
cmp
rcll
cmp
cmc
lea
scas
ljmp
je
sahf
lock
cmp
xchg
inc
jno
and
inc
mov
stos
cwtl
lods
mov
push
push
fs
inc
std
push
xchg
loope
adc
xchg
cwtl
les
data16
push
addr16
sbb
outsl
add
xor
aad
ret
js
push
loope
inc
sbb
fmulp
or
lods
and
fistps
pop
pop
xorl
bound
or
bound
aaa
sahf
or
push
shrb
fs
cmp
cmp
cli
fsubs
pop
push
enter
cltd
lahf
loope
imul
and
loope
popf
into
push
sbb
xor
dec
jecxz
das
iret
or
imul
frstor
xor
mov
inc
clc
addb
pop
mov
xchg
pop
bound
out
mov
xchg
xor
push
rolb
cmp
inc
jmp
mov
hlt
add
jp
bswap
xor
std
push
push
pop
xchg
imul
xor
dec
rcr
sbb
jno
cmp
idivb
mov
mov
or
cwtl
dec
adc
jo
int3
outsl
scas
ljmp
xchg
xchg
lret
push
sbb
mov
int3
and
movsb
or
orb
push
out
jl
xchg
push
fdivrl
xor
fs
push
xor
andl
imul
cmpb
outsb
inc
ja
fdivrl
mov
cs
sbb
mov
lea
cwtl
pusha
adc
pushf
iret
xchg
pop
negb
mov
jns
fidivl
push
xchg
jp
mov
mov
jg
rcr
or
hlt
mov
pop
pop
xor
fildll
insl
data16
mov
cwtl
ss
push
xchg
ret
pop
fs
mov
outsb
jle
ss
lret
outsl
xchg
bound
mov
dec
ss
pushf
icebp
out
mov
dec
test
jo
adc
mov
or
imul
jl
mov
aas
sbb
mov
jle
ja
loop
xor
lods
and
push
or
lea
pop
xor
cmp
mov
and
lods
inc
jae
sbb
lret
outsl
clc
sbb
cs
sbb
jne
lcall
mov
std
clc
cmp
mov
inc
test
xor
lock
loope
data16
test
jns
dec
add
je
clc
shrl
cwtl
sub
out
sbb
