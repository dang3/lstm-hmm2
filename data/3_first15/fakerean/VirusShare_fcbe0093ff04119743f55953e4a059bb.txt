sbb
add
mov
xchg
fcoml
adc
xor
push
out
shr
xchg
add
adc
dec
mov
nop
bound
stc
push
fnstcw
push
cwtl
ds
cmp
or
stos
push
es
sub
jnp
adc
insb
xor
ja
inc
sbb
pop
xor
movsl
cmp
mov
decl
sbb
push
negb
popf
push
ret
inc
xchg
popf
jp
xchg
stos
mov
jle
jae
fsubl
fnstsw
cmp
mov
and
cmp
repnz
or
ret
ror
sub
jb
mov
push
arpl
pop
mov
rcl
movsl
mov
jle
fmulp
or
rcrl
adcl
adc
repz
je
out
dec
rcl
pushf
add
aas
outsl
pop
ja
fsubrp
add
jg
add
enter
nop
sub
lods
aam
adc
inc
adc
aas
push
stc
gs
fmull
adcb
xchg
fs
push
or
push
loopne
in
es
pushf
data16
or
fs
jne
xlat
push
jb
mov
dec
mov
insb
jmp
gs
pop
xchg
in
sbb
outsb
nop
inc
in
mov
into
mov
jmp
inc
out
adc
mull
fld
dec
sarb
mov
aad
sub
cmp
mov
mulb
add
inc
lret
inc
cmp
push
arpl
xchg
dec
call
es
mov
int
lock
push
add
add
fildll
in
in
scas
out
rclb
aaa
adc
rorb
push
fldenv
aad
ret
subl
int3
pusha
xor
shrb
add
popf
mov
cltd
fimuls
and
ss
in
sbb
mov
fwait
sub
lret
adc
xor
add
daa
into
les
shrb
pop
and
pop
sub
xchg
bound
gs
fxch
pop
and
push
or
aam
loope
mov
add
jle
push
sub
pop
mov
jnp
xor
xor
inc
lds
and
sbb
sub
inc
jecxz
cwtl
andl
mov
mov
mov
fnstenv
mov
add
jecxz
pop
inc
xchg
sub
cmp
cmp
ljmp
jmp
rcr
push
ss
inc
cs
in
xlat
daa
nop
push
mov
push
icebp
cmc
into
lcall
pushf
jg
lret
xor
inc
inc
sahf
xchg
xchg
push
imul
ret
pop
mov
mov
jns
and
pop
nop
loope
aam
enter
fsubp
ljmp
mov
pusha
and
cmp
add
and
jmp
jp
std
xor
xchg
dec
ljmp
lock
xchg
lds
outsl
xchg
xchg
inc
ljmp
mov
push
popa
loope
fst
ja
loop
sbb
pusha
cmp
cmp
or
mov
aas
add
ret
clc
xor
jge
xchg
push
testb
cs
sbb
xor
loope
pop
call
into
lret
mov
push
inc
cmp
xchg
adc
es
leave
adc
mov
lret
pushf
shlb
sbb
inc
jne
inc
fsubl
loop
dec
nop
pop
out
cwtl
mov
xchg
adcb
shrb
hlt
cltd
bound
addr16
rolb
pop
popa
outsl
mov
flds
ss
test
mov
gs
push
inc
jg
xchg
stos
push
stos
fiaddl
inc
inc
pop
cmp
jne
mov
test
mov
sub
imull
orl
sbb
mov
push
sbb
rcrl
mov
sbb
xchg
inc
push
lcall
mov
cwtl
fsubrl
iret
addr16
cmp
stos
pop
mov
cmpsl
pop
lods
das
push
push
fldt
loope
jecxz
add
fs
inc
aad
mov
sub
mov
mov
pusha
int3
inc
push
sti
jp
frstor
cwtl
xchg
aam
xlat
in
movsl
add
sti
mov
sbb
lret
cmpsb
or
sub
ret
adc
js
sbb
dec
mov
and
adc
shr
add
xchg
jecxz
jp
and
inc
cs
jge
xor
andb
mov
das
les
into
fisubrs
out
mov
sbb
and
xor
shlb
sbbb
int3
andb
cmp
lea
cmp
shll
sahf
sub
sub
xor
outsl
es
sub
mov
lahf
dec
jbe
fsubrs
jno
testl
sub
jecxz
cli
jmp
sub
das
in
xchg
inc
in
xor
sub
xchg
mov
pop
push
xor
out
jns
add
cmc
call
fldenv
out
inc
std
sahf
loope
mov
fs
inc
lea
outsl
jne
lock
addr16
dec
pop
jb
or
adc
mov
push
mov
pusha
mov
mov
cmpsb
dec
mov
stos
data16
popa
into
inc
stos
or
xlat
nop
sub
mov
sbb
out
fiaddl
idivb
hlt
pop
sub
pop
sti
pop
cmc
jg,pn
jnp
push
fstpl
insl
sbb
mov
addr16
sbb
xchg
dec
mov
xchg
lea
dec
test
pusha
cmpsl
outsb
ret
mov
enter
adc
mov
fisubrl
inc
lock
dec
popa
aaa
lock
push
xchg
shll
push
pop
adc
inc
sub
mov
and
cmp
and
in
and
add
dec
push
test
xchg
sbb
sbb
or
sahf
adc
sbb
fisttpll
shl
pusha
jp
mov
cli
bound
dec
pop
dec
mov
iret
loop
xchg
in
es
or
mov
jg
mov
pushf
inc
add
std
or
jno
add
or
fcomps
pop
fdivl
pop
iret
clc
jmp
mov
popa
in
cmp
lds
adc
and
adc
aaa
mov
sbb
adc
lea
inc
leave
mov
push
or
push
sbb
lds
dec
std
jle
movsb
jle
mov
lods
jecxz
dec
inc
inc
call
nop
inc
sub
xor
fidivl
dec
cli
daa
pusha
ret
mov
stos
and
adc
fwait
cmpsl
jno
and
sti
xor
mov
repnz
push
mov
cli
or
push
test
inc
jne
out
dec
sbb
out
or
add
sbb
negb
loop
lea
daa
xchg
lods
aam
pop
mov
cld
icebp
popa
fs
push
lods
sub
pop
mov
xor
mov
ljmp
inc
jmp
cmpsb
mov
push
jno
pop
mov
cmc
and
scas
mov
jae,pn
pop
push
hlt
fwait
ja
pop
lock
jmp
mov
stos
pop
cld
and
aam
and
add
test
sbb
push
fdivrp
negl
divl
loop
fs
cmp
inc
pusha
lcall
pop
out
mov
push
push
xchg
adc
xor
or
sub
jbe
mov
testb
jnp
cmpsb
mov
mov
push
lcall
ret
inc
push
push
jnp
xchg
push
xor
push
sti
push
fisubs
scas
pop
inc
rcr
std
xlat
xchg
dec
mov
xchg
mov
add
repnz
shrl
pop
ret
imul
outsl
jns
into
addb
in
movsb
pop
jae
xchg
cmp
jbe
xor
inc
out
popl
mov
out
jmp
fisubrl
std
enter
leave
xchg
jae
lret
das
and
movsb
fisttpl
shl
popa
jmp
stos
or
out
add
add
cmp
pop
cmp
xchg
clc
fistl
loopne
arpl
and
js
add
pop
clc
pop
xchg
jne
in
pop
cmp
sub
jmp
rolb
daa
sub
adc
ljmp
lret
pop
dec
fiadds
pusha
xor
dec
insl
es
popf
xor
pushf
xchg
js
clc
call
lret
sbb
loopne
jae
in
cmp
mov
sub
xlat
scas
push
scas
sub
cmpb
inc
or
imul
or
inc
movsl
lret
jno
jno
in
movsl
test
nop
loop
mov
lods
les
push
add
fs
xlat
fbld
gs
jb
mov
jnp
cmp
sbb
jbe
fisttps
pop
inc
or
test
push
push
fldcw
xlat
mov
les
sub
add
push
jmp
inc
test
das
fisubs
mov
pop
xchg
sbb
pop
adc
sbb
int3
and
dec
mov
sub
dec
cmp
xchg
call
lcall
cmp
test
fsubrl
bound
out
sbb
inc
mov
push
xor
aaa
cmc
rcll
sbb
std
inc
push
jg
les
xor
out
fcoml
mov
ja
jns
pop
jl
jae
add
iret
aam
lahf
rcll
or
lods
test
cld
cli
clc
test
or
add
inc
fs
push
push
aaa
jl
packsswb
sbb
bound
or
cmp
outsl
add
jl
cmp
ds
inc
jecxz
jo
movsl
fsubs
shl
ljmp
fucomip
push
mov
in
add
fldt
lahf
icebp
ja
fidivs
add
and
rcl
insb
sub
les
cmp
movsb
mov
les
jne
test
mov
jb
mov
and
cmp
es
mov
adc
xor
loopne
pop
and
inc
test
cmp
mov
shlb
popf
sub
add
aad
push
lahf
push
rol
lock
leave
lds
test
mov
nop
lret
cltd
call
inc
lret
inc
sbb
and
gs
or
inc
adc
inc
add
lods
inc
es
sahf
shlb
pop
sub
and
ret
xor
incl
ret
mov
fwait
mov
and
fldenv
dec
repz
pop
push
shlb
es
and
xchg
into
repz
test
sti
jle
ficoms
pop
push
inc
popf
jmp
fs
cmp
sbb
imul
out
leave
pop
push
movsl
mov
incl
jge
or
push
sub
dec
in
stos
cwtl
sub
outsb
xor
jle
lds
fdivs
fmull
add
inc
sub
dec
push
dec
stos
xchg
xchg
gs
add
xchg
ret
mov
add
inc
test
enter
data16
jns
loop
push
dec
out
mov
pop
push
add
pop
stos
shll
loopne
testl
out
popf
push
push
cltd
adc
dec
xchg
scas
aaa
add
loop
push
dec
mov
or
mov
dec
sub
jmp
into
popf
outsb
sub
dec
nop
out
sbb
pusha
push
mov
cltd
xchg
pop
jge
pusha
lods
adc
bound
cmp
fs
mov
inc
push
and
adc
mov
in
lea
scas
in
xchg
cli
push
mov
shl
pop
imulb
push
test
xor
cmp
mov
cmpsb
imul
loop
pop
shll
and
outsb
ds
dec
jl
pop
mov
repz
sbb
test
cmc
test
lds
cmc
push
pop
add
mov
std
test
les
dec
out
xlat
sub
sub
lock
push
cmc
add
dec
push
push
in
lret
pop
mov
sbb
scas
mov
imull
mov
jmp
pop
das
mov
into
in
test
jl
sub
mov
adc
icebp
inc
cs
fnstenv
inc
mov
sub
push
inc
into
cmpsl
pop
dec
sub
jmp
pop
adc
ffree
sub
gs
mov
enter
repz
add
in
cmp
lds
jp
jb
sbb
dec
inc
or
mov
inc
mov
xchg
out
xchg
xor
push
out
mov
sub
shrl
pop
loope
pop
mov
pop
mov
fisttps
mov
in
pushf
pop
and
stc
pop
xor
shr
mov
je
sub
inc
dec
daa
das
scas
insl
cs
mov
clc
mov
cmp
jnp
scas
ljmp
pop
fs
jns
popf
addl
mov
and
movsb
rcrb
jecxz
sbb
jge
xor
int
cmpsb
hlt
imul
icebp
adc
loope
mov
cmp
dec
stc
inc
pop
stc
shlb
jp
xlat
pop
mov
hlt
out
stos
jl
shrb
shl
fcoms
imul
pop
mov
sbb
inc
enter
data16
fcompl
lods
adc
sub
jo
fsubr
call
inc
mov
subb
inc
add
mov
adc
lret
mov
push
jp
dec
fldenv
add
jmp
cmp
rolb
das
test
insl
xlat
pop
mov
popa
scas
mov
inc
lods
push
stc
push
ret
xor
out
lods
xor
pop
pushf
cmp
popf
xor
repz
arpl
in
jb
dec
jbe
inc
pop
in
dec
daa
inc
xchg
add
xchg
push
push
jmp
cli
jne
push
sbb
test
negw
aas
pop
xchg
push
mov
in
int
adc
xor
push
iret
or
mov
or
jns
pop
or
or
push
mov
aas
mov
mov
jle
adc
scas
push
std
inc
lcall
xor
pop
jbe
fisubrs
lods
add
insb
out
xchg
daa
icebp
push
xchg
lods
loope
dec
push
lret
repz
scas
dec
dec
insb
cmc
sbb
ja
mov
xor
jno
inc
add
test
pop
dec
mov
div
mov
js
mov
jle
jge
push
ret
enter
sbb
mov
or
sbb
std
push
mov
push
divb
mov
xchg
xlat
shrb
aaa
aaa
pop
int
fistpll
bnd
mov
lcall
out
int
lea
idivb
popf
cs
adc
jl
sub
iret
pop
lahf
or
out
xchg
and
mov
and
loop
pop
lods
dec
js,pn
xlat
lret
test
pop
lds
dec
dec
popa
jnp
dec
or
insl
xchg
fsubrp
push
xchg
mov
repz
sbb
nop
outsl
pop
sub
jecxz
pop
sti
test
lret
imul
mov
cmpsl
pop
loopne
sbb
xor
outsl
jbe
adc
call
leave
mov
sub
orl
loope
popf
mov
incl
call
and
dec
aam
add
xchg
arpl
jb
push
out
mov
out
sbb
fldenv
or
js
pop
jae
push
inc
scas
fsubrs
dec
lcall
xor
jo
xchg
xchg
mov
xchg
dec
stos
sahf
adc
mov
mov
pop
es
js
pop
stos
sahf
pop
sti
movsl
rcrl
fs
inc
inc
movsb
sar
or
xorb
mov
imul
mov
js
repz
btr
rcll
pop
ljmp
adc
cmp
out
shrl
ss
add
pop
jno
mov
pusha
mov
pop
andl
cmp
mov
lcall
sbb
fnsave
mov
out
add
cmp
dec
sub
mov
mov
lock
dec
sbb
push
pop
or
mov
dec
aad
outsb
mov
pushf
imul
sbb
gs
das
jecxz
lahf
xlat
adc
shrl
pop
adc
jmp
nop
jb
or
ja
xchg
xchg
popf
andl
add
lds
jno
sub
lret
sarl
scas
fdivrp
push
mov
std
cmp
add
into
push
aam
inc
cs
push
aaa
outsl
add
dec
push
cli
mov
cs
cmp
jae
out
or
sub
movsb
sahf
inc
fisubs
out
jmp
sbb
mov
xchg
int
rorb
scas
sbb
xor
movsl
add
rorb
xchg
cmp
jp
imul
pop
andl
out
jg
mov
cltd
stos
pop
scas
jge
aaa
stos
push
inc
rorb
sub
adcl
clc
daa
sub
sti
xchg
hlt
push
fistl
push
ret
mov
jne
mov
js
and
sarb
push
cmc
rol
cmp
mov
outsl
inc
mov
sbb
outsb
push
lret
or
pop
mov
popf
jo
or
dec
add
xchg
and
bsf
in
ljmp
out
cmp
jecxz
pop
mov
in
pop
enter
call
dec
adc
icebp
mov
mov
mov
xchg
ljmp
movsl
lods
jb
sti
xor
push
ds
sahf
loop
mov
cmp
or
cmc
mov
xchg
inc
mov
out
and
mov
jmp
pushf
nop
popf
js
xchg
repz
fsubl
and
or
xchg
add
mov
int3
pop
cltd
sbb
sbb
scas
jo
jnp
sub
aam
inc
cmpsl
sarb
hlt
dec
in
or
orl
cmpsl
das
ret
xor
mov
sarb
mov
mov
ja
sbb
adc
jne
hlt
loop
enter
sbb
jp
cltd
xchg
jnp
nop
out
pushf
mov
mov
icebp
lret
pop
cwtl
inc
adc
xor
lods
mov
inc
pop
sbb
and
add
rcr
out
dec
push
aas
sbb
and
fdivs
cmp
test
cltd
adc
and
nop
call
sarb
lret
xor
je
shrb
and
ret
cmp
cmp
adc
stc
push
dec
lret
aaa
xor
mov
repz
sbb
add
sbb
test
mov
lret
test
cmp
lods
nop
ret
add
cmp
mov
sub
cmpsb
repz
and
filds
xor
push
push
les
sbb
call
or
fimull
inc
cmp
sbb
jnp
fldl
sbb
jl
lret
add
clc
and
push
pop
scas
mov
mull
cltd
dec
ljmp
scas
data16
push
mov
mov
jl
call
mov
pop
je
test
adc
mov
fcmovu
in
jbe
fldt
xchg
dec
pop
pushl
jb
cld
add
ds
xchg
pop
nop
stos
arpl
cwtl
mov
aaa
adc
inc
sub
cmp
lahf
xchg
mov
mov
mov
mov
jge
sbb
mov
int
fadds
pop
insl
cmp
push
cmovbe
out
jge
icebp
and
cmpsb
fcoms
cmpsl
mov
lds
mov
sub
dec
jbe
cmp
dec
dec
inc
sbb
daa
xchg
ja
rclb
in
push
and
mov
xor
pop
dec
mov
repz
sbb
dec
mov
into
xor
sub
jbe
rclb
pushf
and
fs
ss
fsubp
mov
rorl
push
jg
inc
dec
push
pop
xchg
ret
fnsave
arpl
pop
movsl
and
and
jle
clc
stos
cltd
fcom
fmuls
adc
xchg
hlt
and
js
mov
xlat
loop
or
leave
pop
add
jmp
push
or
iret
test
or
xor
imul
xor
pushf
inc
xor
pop
inc
aad
xor
addb
out
loope
shlb
popf
or
cmp
mov
test
daa
shlb
xor
popl
adc
aad
loop
inc
std
dec
ja
cli
std
xor
and
xchg
mov
mov
adc
leave
mov
xchg
cld
mov
xor
add
cmp
mov
jo
or
inc
xor
stc
xchg
ds
mov
pushfw
pop
ljmp
pop
mov
ljmp
xchg
pop
and
cmp
pop
or
imul
sar
stos
pop
lahf
mov
pop
stos
mov
test
rolb
sub
test
or
dec
rcrb
xor
pop
sbb
xchg
stos
push
in
sub
roll
mov
fnstsw
loope
jnp
mov
gs
loopne
lea
imul
dec
clc
sahf
inc
adc
cmp
iret
stos
fdivs
daa
inc
mov
flds
jne
dec
insl
push
xchg
aaa
out
hlt
int3
in
or
cmp
push
push
pop
cmp
jnp
pusha
add
add
outsl
int3
jl
push
pop
xorl
ds
in
add
mov
outsb
xchg
xor
xchg
rol
lods
jbe
insb
jmp
test
adc
pop
dec
inc
int3
mov
lret
push
icebp
sbb
jo
repz
aad
push
mov
adc
push
dec
xor
daa
push
ja
mov
mov
aad
pop
xchg
int
sub
push
outsl
test
or
in
push
aaa
arpl
mov
mov
movsl
lea
cbtw
and
cmp
cmpl
mov
pushf
das
jle
bound
daa
mov
test
call
lods
sbb
mov
push
push
pop
cld
dec
dec
mov
pop
or
faddl
jae
aas
cmp
loope
push
inc
test
sub
jmp
cmpsl
divb
dec
out
pop
mov
inc
popf
shrl
rclb
imull
dec
sbb
and
or
js
add
push
mov
push
push
or
nop
sbb
cmpsl
fadds
or
pop
fisttpl
mov
aad
pop
cmp
outsl
sbb
xor
repnz
dec
jne
mov
ljmp
aas
mov
xlat
mov
sti
pop
or
xor
sti
mov
dec
mov
mov
cmp
out
pop
aad
dec
or
or
imul
mulb
sahf
out
fisubs
out
cltd
inc
jmp
pop
or
rcr
dec
je
jae
enter
inc
adc
dec
jae
scas
add
rorl
adc
rolb
jle
pop
mov
fisubrs
stc
mov
loopne
shl
xchg
pop
scas
sub
sbbb
icebp
dec
leave
jecxz
jmp
adc
into
mov
xorb
out
and
mov
sbb
imul
sub
insb
cmc
imul
lret
cmp
sbb
flds
out
push
arpl
dec
lcall
shr
ljmp
std
xor
loopne
xacquire
inc
icebp
iret
loopne
or
xchg
sub
mov
insb
ss
loop
cmp
icebp
cmp
add
dec
repnz
cltd
into
call
adc
int
cwtl
mov
jae
sahf
xorb
out
rorl
xchg
ja
cmp
pushf
jo
lods
int
push
inc
or
movb
xor
adc
mov
sbb
sub
gs
push
andb
lcall
cmpsl
shlb
xlat
daa
and
sub
repz
mov
push
sub
pop
out
addb
out
leave
ret
mov
jae
daa
mov
int
xor
sbb
mov
inc
cmc
movsl
xchg
xor
push
test
das
mov
jmp
add
xchg
divl
dec
repnz
aaa
xchg
adc
icebp
je
cmp
xchg
gs
push
xor
imull
ss
sbb
sbb
sub
addr16
scas
xchg
mov
iret
das
fisttpl
test
add
call
push
sub
jp
push
pop
push
lret
and
aam
mov
shl
stc
enter
and
lods
inc
aas
das
add
xchg
jle
sbb
push
push
mov
push
xor
js
dec
cmp
or
xchg
enter
add
into
repz
and
addb
cmc
add
rolb
xor
insl
bnd
jns
cmp
adc
mov
xorb
aam
add
ljmp
int
or
movsb
into
jg
or
adc
dec
or
sbb
dec
mov
cmpsb
push
mov
adc
dec
scas
adc
add
dec
xor
sub
sbb
xor
inc
outsb
scas
or
divb
out
inc
add
xorb
xchg
mov
jns
and
test
sti
sub
xor
dec
ret
lock
pop
inc
mov
sbb
pop
jo
xlat
test
repz
popf
loopne
push
arpl
lds
sbb
dec
sbb
mov
out
xor
add
xlat
sub
pushf
push
mov
rcrl
jnp
pop
fcoml
pop
jl
adc
lret
sub
mov
sub
sub
add
in
test
add
mov
mov
pop
outsl
sti
pop
pop
dec
aad
out
movl
jno
mov
cmc
mov
adc
adc
fistpll
mov
inc
shll
sarl
mov
push
dec
data16
mov
jns
lock
cmp
clc
aas
jmp
adc
shlb
add
cmpsb
adc
int
adc
pop
mov
push
xor
jne
hlt
lret
jmp
sub
lods
dec
mov
jmp
inc
lds
pop
jl
je
mov
cmp
xchg
stc
mov
mov
test
jo
mov
xchg
or
dec
push
in
icebp
ja
jge
emms
testb
and
shlw
icebp
lods
call
cli
cmpsb
xchg
enter
dec
lahf
push
bound
cs
cmpsb
mov
adc
gs
mov
icebp
mov
sbb
dec
inc
iret
xor
xchg
xor
inc
and
mul
bound
jno
jg
dec
cmp
fsubrp
lods
adc
js
sbb
push
shlb
mov
push
imul
mov
loopne
or
je
push
cmc
shrd
in
imul
mov
imul
bound
addr16
mov
xchg
dec
mov
je
mov
mov
dec
xchg
dec
inc
loope
adc
dec
add
and
hlt
in
mov
jns
cmp
pushf
testb
test
jns
cmp
loop
sbb
push
mov
adc
jb
add
mov
xchg
lea
hlt
mov
jmp
out
out
mov
sbb
lods
and
mov
mov
mov
sbb
loope
in
mov
sbb
mov
inc
test
push
clc
xchg
pushf
sbb
inc
mov
jecxz
push
xchg
mov
shrl
hlt
or
pop
adc
sahf
lods
sti
jns
adc
jne
orb
cwtl
inc
mov
add
sbb
test
mov
clc
sti
jae
sar
sbb
or
rcr
mov
mov
shlb
mov
cltd
leave
popf
add
pop
sti
je
fildll
movsb
mov
leave
test
in
sbb
fnsave
or
fisubrl
popf
inc
jge
xor
lahf
fstpl
sub
push
mov
sti
xchg
push
fists
decb
xchg
push
movsb
sub
cli
xor
sub
sbb
xchg
pop
stos
adc
pop
xchg
fdivs
sub
scas
fcompl
addr16
lods
fs
fdivrp
stc
xchg
dec
mov
imul
mov
pop
loopne
iret
add
mov
mov
fsubrs
push
cmp
dec
add
mov
test
sbb
ss
xchg
dec
imul
nop
dec
lret
jp
cmp
dec
shrl
es
lret
sahf
shl
sbb
push
adc
mov
in
pop
pop
sub
sub
inc
push
dec
inc
pop
out
rolb
aaa
dec
mov
lods
mov
pop
sbb
sub
mov
mov
aad
fstpl
repz
daa
fadds
mov
xor
loopne
insb
push
fisttpll
cmp
fwait
xchg
add
in
adc
push
add
xchg
mov
adc
xor
push
jns
sub
outsl
outsl
aas
fnstcw
in
in
dec
enter
mov
lea
daa
push
xchg
jle
cwtl
cltd
adc
push
out
js
dec
mov
sarb
fs
xor
test
jmp
push
push
and
mov
add
call
push
les
mov
das
aas
push
movsl
outsb
lahf
mov
lret
outsl
sbb
mov
sbb
mov
fwait
mov
cmc
dec
xchg
inc
fwait
inc
push
jns
cmp
mov
pop
add
dec
inc
inc
inc
cli
adc
xchg
test
add
xchg
shll
out
cli
xorb
or
notl
stos
push
and
xchg
mov
out
lret
cmp
lods
xor
popf
pop
and
mov
inc
inc
aam
sub
add
movsl
xchg
imul
ja
sbb
pop
xlat
lret
pushf
mov
out
jmp
fdivrs
jne
push
cwtl
or
mov
and
pushf
mov
cli
imul
jg
xchg
add
cli
cli
cwtl
push
gs
push
mov
mov
sbb
mov
and
loop
das
iret
daa
mov
stos
and
push
les
incb
clc
lea
add
and
stos
pop
das
pusha
pop
or
push
jne
xchg
dec
mov
sti
test
mulb
xor
aam
cmp
adcb
fnstcw
mov
enter
std
jb
push
int3
into
decl
sub
add
or
repz
rclb
adc
out
ror
dec
push
sub
push
mov
and
pop
pop
jbe
sbb
inc
xchg
in
out
lcall
pop
outsl
mov
mov
js
pop
std
sub
iret
in
mov
cs
test
adc
inc
std
jbe
adc
cmp
pop
push
push
xor
fwait
mov
pop
jbe
mov
scas
out
js
mov
sub
pop
ficoms
mov
call
pop
mov
mov
sub
outsl
cmp
push
loopne
test
sahf
or
mov
cmpsl
into
mov
dec
mov
faddl
mov
cld
dec
xchg
insb
mov
jns
pop
pop
and
je
mov
shll
scas
fists
pushf
cli
ret
fmuls
or
inc
jmp
flds
cmp
or
jmp
push
inc
cmpb
rorb
jbe
mov
jg
outsl
mov
enter
push
movsb
sahf
dec
adc
ss
loope
push
dec
xchg
aam
shrb
std
out
and
insl
jnp
std
cmc
cmc
add
sbb
mov
adc
inc
sahf
imul
inc
cli
cwtl
cmp
out
dec
mov
xchg
jecxz
into
loopne
pop
cmp
loop
sub
mov
jp
jmp
mov
push
xchg
cmp
fwait
lock
and
jo
xchg
sahf
iret
xchg
jnp
fists
jg
or
insb
pop
and
cli
rcr
jecxz
dec
cmp
js,pn
mov
inc
popf
mov
test
nop
push
lcall
lea
nop
mov
jmp
into
inc
pop
mov
das
cmpsb
dec
fists
add
and
or
int
sub
jnp
es
jb
hlt
sub
lcall
ret
and
add
out
inc
xchg
rcll
and
repz
sub
add
sub
repz
idivb
adc
mov
cmpl
add
pop
ret
inc
xchg
sub
sbb
lock
cs
arpl
dec
push
pop
adc
pop
or
mov
fsubrp
lock
cwtl
pop
pushf
rcrb
cmp
mov
cwtl
loop
lock
div
add
jae
shll
stos
loopne
sbb
lahf
fdivs
xchg
in
pop
insl
sub
pusha
hlt
cmp
test
mov
lret
fldt
out
call
push
sbb
mov
mov
faddp
or
dec
idivb
aam
addr16
mov
js
aas
rorb
push
fdivs
insl
cmp
pop
adc
nop
subps
mov
jae
xchg
sub
outsl
cmpsb
lods
jae
in
push
sbb
fdivrs
data16
sbb
testl
cmp
xchg
xor
jle
mov
arpl
ret
dec
sbb
sub
imul
in
mov
xor
and
fldcw
sub
outsb
popa
scas
sub
mov
mov
outsb
lock
mov
and
mov
pop
sub
shrl
add
imul
scas
sarb
sbb
cmp
notb
rcrb
pop
cmovno
cwtl
pop
pop
add
ja
bound
xchg
je
cld
mov
cmp
mov
daa
lock
cmp
push
bound
outsb
insb
lock
jbe
cld
mov
ret
test
loope
jnp
rcrb
mov
mov
fists
xchg
mov
cmp
cwtl
loopne
les
outsl
dec
jne
lods
cmp
cwtl
sub
idivl
sbb
int
mov
mov
cli
int3
dec
xchg
pop
leave
inc
popf
cltd
cli
mov
push
push
jecxz
insb
call
or
mov
hlt
mov
div
mov
std
ds
in
movsl
pop
ret
call
inc
iret
xor
ret
bound
cmp
pop
jbe
push
je
repnz
rolb
adc
mov
push
rcl
adc
mov
loop
dec
push
and
dec
push
or
add
jg
mov
cs
push
or
xor
fneni(8087
push
insl
sbb
push
mov
jl
cmpsb
loopne
push
jae
addr16
adc
stos
mov
test
mov
xchg
jp
xor
test
lock
call
sahf
cli
push
pop
insl
data16
rcrb
jne
xchg
subl
add
repnz
je
cmc
fdivrs
outsb
mov
icebp
cmpl
inc
shlb
xor
stos
and
jns
outsl
imul
std
sbb
std
sbb
mov
test
imul
out
mov
adc
fmuls
adc
xor
in
pop
fisttpl
sbb
jecxz
lds
xor
add
fwait
aas
inc
jmp
rcrb
pop
add
and
clc
dec
adc
sbb
test
dec
sbb
fldcw
fld
test
xchg
mov
xor
out
mov
and
mov
test
aaa
pop
xchg
sub
aas
out
mov
dec
and
inc
mov
or
cld
das
movsl
and
popa
adc
xor
mov
pop
scas
mov
scas
fcmove
fwait
jo
xchg
xor
mov
push
loope
pushf
mov
or
jle
fimull
stos
and
dec
into
xchg
push
cmp
mov
andl
jecxz
push
arpl
je
dec
aaa
mov
mov
roll
cmovne
or
mov
hlt
xchg
lods
add
shrl
insb
popf
bound
lahf
rol
es
sahf
cs
xlat
mov
decb
je
jno
popa
stos
test
or
mov
mov
imul
stos
cltd
inc
dec
lea
xchg
fists
pop
sbb
sub
es
push
popa
xor
mov
ret
cmp
out
pop
or
pop
sbb
push
mov
sbb
movsb
outsb
mov
in
rol
nop
ret
jle
xor
int
dec
sahf
fsubs
sbb
mov
aaa
movsb
scas
popa
sub
es
std
xchg
adc
cmp
lods
int
mov
std
push
lret
inc
sub
jo
sbb
in
fmuls
mov
add
cmp
outsb
xchg
inc
outsl
push
add
lods
add
addl
sbb
shll
cmpsl
jecxz
cli
inc
and
fwait
jg
inc
mov
nop
cmp
pop
mov
aam
add
les
cli
xor
out
mov
cli
outsb
jmp
pop
in
and
fstpt
test
and
inc
stos
cltd
fldl
mov
sbbl
es
imul
loopne
daa
dec
in
icebp
dec
test
cltd
lahf
jl
daa
outsb
xchg
push
sbb
or
cmc
mov
out
add
sbb
out
clc
xchg
sbb
imul
xchg
sbb
loopne
pushf
fcomps
cmp
xor
mov
cmp
xchg
jmp
js
mov
push
push
add
js
push
mov
lret
rcll
stos
inc
insb
or
movsb
pop
cmp
cmp
out
arpl
loop
loopne
pushf
ja
dec
fidivrs
cld
pusha
jne
mov
add
adc
clc
push
das
imul
sub
aam
pop
or
xchg
gs
icebp
icebp
sahf
pop
js
sub
fimuls
pop
mov
loop
out
xchg
pop
add
es
push
push
sbb
daa
std
filds
xor
lock
jle
imull
loop
push
sub
pop
rcrb
pop
push
in
cld
imul
jne
fimull
adcb
mov
sub
pop
std
mov
rclb
or
mov
xchg
mov
cmp
or
js
pusha
xorb
pop
cmp
leave
mov
orb
fmul
rolb
xchg
test
cmp
scas
cmp
sbb
and
push
pop
mov
or
mov
jg
xchg
pushf
pushf
add
dec
ret
ficompl
fcmovnu
mov
int
push
inc
ja
or
or
mov
sbb
jl
out
pop
in
cmp
jmp
into
in
cmpsb
shlb
enter
jmp
add
mov
mov
lret
mov
lds
pop
inc
insb
or
push
mov
enter
cmp
pop
and
cmpsl
inc
out
arpl
addr16
cli
clc
mov
mov
shrl
scas
addr16
fstpt
dec
test
mov
jne
aas
jge
outsb
dec
xor
add
mov
jge
imul
pop
push
mov
mov
mov
jae
mov
ja
repz
bound
je
mov
dec
and
test
sbb
fsts
xchg
das
fnstenv
jl
lret
sar
adc
cmpsl
push
scas
movsb
push
and
mov
cmp
xor
repz
push
dec
mov
ret
inc
sbb
sbb
rol
test
inc
adc
mov
or
mov
dec
fstps
aam
or
mov
adc
mov
js
xchg
rcl
loop
sub
lods
push
loop
xlat
adc
xor
ds
out
repnz
jg
cmpsb
pop
std
cmpsb
das
mov
pop
mov
push
or
xor
sbbl
xorl
and
rorb
fcoml
test
mov
dec
pop
mov
push
data16
sbb
lahf
push
pop
aad
or
mov
mov
lock
sbb
scas
out
bound
mov
add
xor
call
mov
sub
rclb
aas
aad
lock
lret
ret
fldl
mov
sbb
xchg
fsts
sti
aaa
push
fmull
pop
ja
aas
ss
inc
lds
sbb
push
repnz
sti
xchg
out
mov
lock
aad
sbb
adc
sbb
inc
sub
mov
xor
fsubl
mov
aas
cmp
cmpb
jae
push
adc
mov
pop
adc
cwtl
dec
imul
push
sub
imul
push
data16
and
push
ffree
jbe
push
lock
fistl
nop
push
xchg
and
lcall
icebp
test
sti
or
mov
testl
xor
add
cmp
fidivrs
jb
shll
shr
push
push
or
or
imul
add
lea
cmc
jae
int
lahf
mov
arpl
dec
dec
push
jl
shr
repnz
push
and
insl
mov
iret
push
adc
add
pop
lock
mov
loope
adc
outsb
and
cli
lds
div
or
push
jle
pop
es
fidivl
or
mov
arpl
dec
mov
dec
loop
xor
shll
push
mov
push
in
xchg
push
aas
xchg
icebp
push
jg
nop
decl
test
xor
xor
push
ret
hlt
shlb
push
frstor
adc
mov
push
push
lret
push
push
cli
inc
fisubrl
mov
imul
mov
pop
and
cs
lods
add
jns
adc
adc
lret
lcall
int
popf
hlt
cltd
daa
sub
nop
adc
fidivs
scas
inc
and
rorb
xchg
shlb
pop
mov
loop
fisubs
inc
xchg
add
xchg
imul
daa
cs
xor
pop
mov
xor
arpl
xor
bnd
pop
push
loop
inc
xor
mov
lahf
out
jecxz
mov
dec
es
push
pushf
je
xchg
pop
and
mov
mov
imul
and
mov
and
jge
cmp
pop
lcall
push
insb
nop
loope
or
popf
gs
xor
ljmp
cmp
and
cld
push
sbb
fdivrs
cmp
inc
mov
dec
xlat
lock
sub
xchg
xchg
sbb
ret
clc
iret
enter
data16
jge
push
lock
mov
xorl
lcall
xor
je
dec
jmp
inc
adc
pushf
sbb
ss
inc
push
addr16
jbe
dec
js
aam
call
lahf
sarb
and
mov
push
nop
lret
jo
mov
movsb
rcrl
sahf
sti
ret
dec
scas
cmc
jecxz
sbb
inc
pop
test
test
mov
mov
fidivs
stos
mov
fistps
int
sbb
test
dec
and
inc
and
dec
and
mov
js
imul
ja
pop
stos
and
xchg
pop
fwait
xor
or
mov
jp
stos
cs
scas
loopne
int
ljmp
ljmp
xchg
fiaddl
fmuls
push
mov
mov
mov
jno
fldt
jb
pop
mov
mov
sbb
sub
dec
leave
cld
repz
jnp
adc
shr
sub
dec
sbb
int3
xchg
cmp
ficomps
aad
adc
push
pop
imul
in
mov
mov
mov
test
pop
jmp
ffree
pcmpeqb
roll
sub
pop
testb
fxch
jecxz
cwtl
pop
outsl
fldl
cmc
and
sbb
and
mov
std
jnp
lahf
or
mov
add
jecxz
mov
xorb
mov
push
es
outsb
into
add
aam
inc
das
scas
stos
aas
test
int3
jle
movsl
sarl
cmp
ss
data16
push
jbe
and
dec
test
dec
cwtl
cld
out
or
lods
sub
jae
shlb
push
xchg
mov
adc
jno
stos
cltd
pop
leave
mov
jecxz
mov
repnz
out
cltd
sbb
out
mov
fnstenv
loopne
cmpsb
test
les
push
call
test
dec
inc
movsb
lret
imul
jecxz
shrb
push
mov
sbb
mov
cwtl
movsl
movsb
ret
dec
les
inc
mov
aam
ja
push
repz
adc
adc
in
scas
xchg
repnz
jnp
and
out
jle
inc
cs
divl
pop
popf
jge
cmp
pop
test
iret
cmpsl
gs
xor
inc
jo
sbb
pop
test
push
cmc
cltd
in
dec
cmp
inc
xor
mov
pusha
pop
out
xchg
lcall
jmp
call
push
jne
inc
pushf
or
jl
add
push
xchg
mov
loopne
std
xchg
and
xchg
outsl
addl
dec
div
dec
stc
movsb
fsubs
jl
jb
dec
movsl
sub
out
addr16
push
out
aaa
cmp
pop
jae
sub
popf
scas
mov
push
pop
jb
push
data16
mov
xor
or
movsb
sub
rolb
stos
and
or
mov
out
push
call
inc
inc
lret
or
ljmp
loopne
out
test
jge
adc
fidivs
jae
inc
div
push
ja
push
and
jb
xchg
add
mov
fisttps
jbe
inc
les
sub
into
push
mov
call
dec
mov
lock
inc
pushf
in
push
jmp
out
and
push
arpl
add
dec
rcll
mov
pop
sub
dec
loope
jg
outsl
shrl
xorb
not
lods
sub
push
es
test
push
mov
daa
roll
lods
das
dec
das
enter
dec
xchg
js
inc
jg
mov
fs
mov
stc
xchg
push
jne
xlat
rcrb
or
loopne
out
shlb
or
andb
out
out
adc
xchg
add
lock
add
dec
mov
xchg
push
add
xlat
add
push
adc
mov
mov
stos
jb
movsb
mov
sarl
rorb
lock
inc
mov
pop
mov
cmp
hlt
test
push
mov
dec
shll
mov
or
pop
outsl
lock
leave
mov
mov
inc
scas
sub
add
pushf
pop
sub
xchg
stos
jmp
popa
test
push
lahf
loopne
cmpsb
out
lret
pop
mov
or
repz
in
lock
inc
pop
sub
cmpsl
pop
outsl
mov
out
mov
mov
call
xchg
insl
je
mov
popa
sbb
pop
insl
into
incb
loopne
mov
dec
xor
out
adc
dec
or
imul
cmp
dec
fisubrl
into
push
leave
push
inc
xchg
sub
stc
or
inc
push
mov
cltd
movsl
mov
pushf
aaa
mov
shlb
adc
popf
dec
pop
add
int
mov
rorb
push
mov
jno
sbb
stos
fwait
bound
mov
lods
pop
adc
inc
or
fidivs
fidivl
jecxz
test
or
cmp
mov
std
jbe
and
cltd
fiaddl
stos
jge
fs
jl
pop
xchg
add
aas
pop
cltd
testl
imul
fists
out
and
shl
imul
je
xchg
jmp
aas
in
xlat
mov
mov
dec
mov
mov
cltd
cmp
insl
fbld
add
add
xor
jbe
jmp
add
mov
mov
cmpsl
pop
popf
insb
lret
and
addr16
mov
and
mov
or
pop
stos
lock
repnz
xor
sub
mov
cmpsl
and
cld
sahf
xchg
addb
lret
fistl
sub
mov
cwtl
sbb
push
mov
insl
dec
mov
cltd
xchg
mov
adc
icebp
outsl
mov
mov
fidivs
scas
sbb
aad
xor
jns
sbb
mov
je
ret
imul
jae
test
mov
xorb
enter
mov
icebp
gs
mov
out
popf
pop
xchg
iret
jmp
pmaxsw
mov
hlt
or
cmc
loopne
inc
loope
jp
add
in
push
push
bound
inc
inc
es
pop
test
jp
popf
push
mov
jecxz
orl
mov
mov
sub
adc
cmpsb
ret
loope
rcrb
pop
mov
mov
sub
mov
in
sbb
cmp
jecxz
filds
sub
std
jle
push
iret
xchg
aad
lds
adc
mov
or
jmp
addl
xor
xchg
jp
adc
cmp
xchg
fsubrl
mov
testb
int3
je
xor
adc
int3
into
cwtl
jecxz
push
add
pop
stos
cmp
out
or
aaa
int
adc
hlt
dec
cmp
sbb
std
repnz
shlb
or
popa
icebp
mov
mov
pop
push
and
dec
outsb
popf
push
jp
fucomi
pusha
out
ret
push
cld
mov
pop
adcb
cmp
hlt
fisttps
jnp
cwtl
pop
and
in
lods
mov
out
mov
pop
cli
rorl
jns
cltd
adc
inc
ja
push
dec
pop
xorl
iret
mov
push
loopne
push
test
rorb
cwtl
dec
das
mov
xchg
jno
inc
test
lret
jg
sbb
test
cs
mov
adc
cmp
pushf
jnp
jle
mov
push
fcoms
inc
mov
dec
inc
out
faddl
add
lcall
jg
scas
and
popf
lret
sub
sub
and
jmp
cmc
inc
xchg
adc
xlat
adc
and
inc
cmpsl
xlat
mov
dec
add
xchg
movsl
lea
popf
add
inc
out
outsl
push
insl
push
pop
mov
les
ror
shlb
push
xor
cmpsl
and
not
jl
dec
pusha
inc
subl
das
mov
mov
xchg
test
adc
das
pop
cmp
clc
or
dec
adc
add
cmc
sub
adc
push
cmp
add
mov
or
lea
lcall
fwait
lods
mov
mov
addb
sbb
mov
push
fwait
mov
fwait
sbb
test
or
lods
lcall
shl
ds
or
cmp
sub
cmpsb
pop
xlat
mov
xchg
jb
adc
cmp
xchg
das
sub
jge
mov
lahf
insb
pop
mov
loopne
mov
add
mov
sahf
ljmp
xor
mov
fbstp
mov
xor
push
and
fcomp
xchg
dec
mov
das
jbe
aas
ja
subl
adc
daa
inc
test
loope
std
sbb
add
arpl
popa
pop
mov
in
imul
test
int3
lea
lods
inc
decb
sarb
jno
fsubs
inc
pop
pusha
xchg
mov
xor
shll
je
push
pop
jbe
mov
mov
pusha
je
pop
add
addr16
cmp
sub
aam
xchg
cmpsl
fnstenv
ja
ss
mov
aam
push
test
popf
das
and
mov
mov
jne
pop
add
je
scas
mov
ret
fmuls
mov
push
pop
pop
pop
lods
sbb
pop
or
insl
loop
lret
dec
stos
push
lret
push
push
dec
pop
xchg
fwait
jnp
aaa
aaa
or
js
adcb
insl
pop
inc
pop
clc
cmp
in
mov
cmp
cmp
and
adc
add
jne
push
jne
shlb
ss
jmp
ds
xchg
enter
loopne
sub
and
push
shr
mov
pop
fxch
inc
push
adc
push
outsl
lcall
out
sbb
dec
cmp
mov
cmc
insl
adc
lcall
mov
push
popa
popf
aaa
jbe
push
xchg
push
xchg
pop
cmp
sub
xchg
lods
adc
gs
xchg
ss
dec
cmpsl
fnstenv
outsl
fstps
push
stos
dec
xor
sahf
sub
dec
daa
and
or
cmp
and
daa
adc
std
and
movsb
or
bnd
sbb
xor
mov
dec
or
ss
jecxz
mov
jg
lea
xchg
ret
jmp
sti
rcrl
mov
aaa
loop
and
daa
and
lahf
dec
rorb
adc
sub
popa
jns
xor
or
adc
jge
push
dec
cmpsb
adc
jge
jmp
push
xorl
dec
xchg
dec
adc
stos
pushf
neg
out
mov
adc
dec
push
push
jecxz
push
xchg
push
add
mov
dec
shlb
mov
xchg
jge
lret
xor
jae
ljmp
pop
push
rcl
mov
shlb
in
fstpl
xchg
jne
scas
imul
in
cmp
pop
sub
add
pop
incl
or
rol
nop
sub
xlat
xchg
pop
and
jnp
add
xor
inc
push
add
out
push
mov
sub
clc
pop
lock
mov
xor
notl
iret
stos
pop
pop
movl
aad
xchg
call
cmc
sbb
sub
loopne,pt
shrb
inc
cmp
xorl
sbb
or
negb
int3
xchg
jp
outsl
mov
jl
adc
dec
xor
aaa
mov
notl
xor
sub
cmp
pop
push
xor
mov
mov
in
outsb
sbb
xchg
push
xchg
xor
push
pop
popf
push
xchg
cmp
pop
push
or
sub
fsubrl
xchg
jns
stos
mov
clc
mov
ret
test
mov
test
sub
and
lods
jns
push
cmp
inc
inc
popa
cwtl
rcr
jno
cmp
cmpsl
xchg
adc
movsb
push
sbb
mov
jno
dec
mov
dec
test
lods
pushf
xor
push
lret
sub
cwtl
lret
xlat
sahf
cmp
jb
xor
xor
mov
cltd
enter
sbb
mov
sub
mov
xchg
into
push
xchg
cmpl
xchg
sub
scas
xor
add
xor
cmp
sub
adc
xor
cmpb
mov
xchg
fwait
or
out
push
into
mov
gs
fwait
addr16
cmp
std
fcompl
inc
add
jne
lcall
adc
inc
xor
mov
push
dec
shlb
insl
je
mov
dec
jge
sbb
or
inc
xchg
out
aaa
lock
or
and
clc
ds
push
sahf
add
xor
xchg
in
nop
lods
fwait
or
shlb
sub
jmp
lret
and
pusha
mov
xor
sub
call
pop
int
and
leave
and
jecxz
add
testb
sub
xchg
ficoml
sub
mov
scas
out
add
xchg
das
and
or
dec
pop
inc
pop
mov
out
sbb
mov
inc
stos
stos
in
lods
or
cmp
mov
mov
pop
arpl
sbb
cmp
jno
iret
jl
sub
das
iret
out
xchg
gs
xchg
or
insb
lcall
es
sbb
mov
outsb
or
insl
add
clc
pushf
jmp
cld
sub
imul
not
imul
jns
jno
add
mov
cmp
push
aaa
iret
hlt
lret
pop
into
out
sub
jge
xor
nop
insb
jmp
sbb
adc
and
push
jge
pop
add
ss
and
lret
mov
xchg
cld
add
clc
dec
dec
mov
xlat
popa
mov
push
ret
xlat
jnp
cmp
pop
lret
cs
or
les
mov
lret
jg
xor
mov
mov
aam
jle
data16
push
adc
mov
lret
xchg
fs
mov
sub
xchg
fucomp
imul
lods
movsl
dec
or
push
stos
or
fildll
rolb
add
pop
mov
push
std
loope
sub
sbb
or
jmp
fdivrs
add
mov
pop
lea
jb
xchg
sub
shll
sub
inc
in
das
sub
sub
xor
fsubs
add
and
sub
test
stc
and
out
push
pop
mov
stos
xchg
or
lods
ss
fs
jp
das
push
daa
mov
ljmp
cs
pop
fs
pop
mov
ja
mov
mov
push
pusha
stos
popa
clc
push
call
or
cli
out
push
adc
orb
sub
shl
xchg
add
insb
insl
mov
or
inc
pusha
mov
popa
push
fadd
fcoms
fimuls
and
sub
sub
adc
mov
jno
xor
inc
pop
sub
xchg
jp
insb
sbb
mov
mov
cltd
mov
pop
out
xorl
ljmp
jmp
cmpsb
mov
rcl
cmp
mov
mov
ss
push
pop
out
adc
pop
lea
clc
push
mov
or
lret
xor
negl
and
mov
sbb
xchg
push
inc
ja
mov
mov
xchg
inc
push
test
dec
mov
jg
jl
xchg
popf
pop
ja
filds
aas
or
mov
neg
daa
sti
shr
push
pop
das
insl
jg
mov
out
int3
or
push
stos
mov
push
inc
bound
and
pop
mov
out
lods
and
and
rcll
gs
rcll
popf
push
lret
xlat
je
or
cmp
insl
jo
xchg
xor
in
xlat
push
push
stos
adc
test
sub
roll
pusha
xor
or
lcall
pop
imulb
outsl
in
jb
or
pop
enter
ds
fisttpll
rcrb
ret
aam
pop
mov
xchg
outsb
fnstsw
clc
push
mov
es
and
rcrl
out
dec
pop
test
push
lock
ljmp
or
into
popf
lahf
andl
sub
enter
push
fcomps
mov
push
shlb
push
jnp
lods
pminub
enter
mov
xor
popa
fmulp
aad
cmp
jns
cmp
rorb
icebp
add
repnz
std
hlt
push
aam
add
push
push
enter
insb
mov
or
pop
in
or
xor
pop
rcl
in
clc
fs
dec
outsl
faddl
frstor
mov
push
mov
jbe
cltd
mov
inc
rorl
dec
pop
arpl
add
mov
sahf
pop
xchg
lcall
loop
sub
cltd
xor
and
jp
inc
mov
fdivl
sbb
mov
loope
jle
lods
pop
pop
pushf
lret
ljmp
dec
mov
mov
stc
es
repnz
xlat
sbb
mov
pop
addr16
push
mov
jle
fs
add
mov
push
nop
xchg
int
mov
xchg
inc
jo
pop
push
and
fmull
xlat
std
push
mov
cmpsl
int
pop
xchg
sub
arpl
movsb
xchg
xor
imul
xchg
jns
push
cmp
xor
dec
dec
cmp
int
data16
ljmp
ds
pushf
sub
jo
in
sbb
push
movsl
push
dec
leave
adc
pop
inc
ret
arpl
dec
daa
js
adc
test
and
jp
imul
loope
pop
jp
aam
scas
dec
inc
mov
icebp
xor
insl
loope
and
pushl
adc
lahf
jg
push
pop
jp
pop
js
jmp
dec
adc
sahf
ljmp
lds
pop
xchg
jnp
adc
sbb
aas
pop
mov
popf
sbbl
add
xor
xor
fnsave
adc
push
incl
fdivrp
loope
push
loopne
pop
loope
ds
pop
push
rclb
or
sbb
xchg
mov
lods
enter
cmp
lds
adc
and
insb
pop
mov
clc
xlat
jns
mov
pop
add
jo
mov
in
xlat
adc
pop
into
repnz
sbb
pop
xlat
lret
insl
adc
aaa
mov
pop
cmpsl
add
imul
js
add
jb
jl
pop
in
outsb
adc
lods
sbb
sub
mov
movsl
push
daa
lock
and
lcall
xchg
stos
sbb
jo
push
push
movsb
jno
clc
pop
into
inc
cltd
in
pop
fbld
js
mov
dec
mov
jg
mov
test
dec
or
and
cli
jle
out
xor
push
daa
pop
rol
sarb
nop
mov
push
inc
xchg
sti
das
sahf
mov
push
pop
mov
mov
aas
rcrb
xlat
inc
push
cmpsl
xchg
mov
sbb
cmpsb
dec
fbstp
lods
xchg
popa
and
xchg
aaa
cmp
lret
jl
les
jge
daa
clc
push
loope
add
int
sahf
ja
scas
sbb
gs
sarl
shl
inc
jae
iret
das
sbb
ret
int
and
aam
test
lahf
jmp
andl
xor
or
jge
sahf
mov
xchg
xor
mov
xor
mov
xor
xchg
mov
sbb
add
jne
xchg
ja
repnz
push
inc
lods
aad
add
push
arpl
dec
roll
std
rorb
xchg
scas
divb
das
sbb
mov
mov
jnp
sub
or
jg
mov
mov
dec
loopne
mov
orb
or
and
mov
fwait
pop
shll
inc
imul
in
ret
lea
cmpsl
daa
test
scas
pusha
int
adc
xor
inc
out
pushf
sahf
xchg
jmp
xchg
add
xlat
push
sbb
dec
and
addr16
xchg
jge
or
sub
cmp
lahf
aaa
lods
push
out
pop
fimull
dec
int3
jl
jmp
adc
sbb
mov
dec
call
mov
and
mov
sti
sub
mov
mov
pusha
arpl
mov
out
cld
fs
clc
or
test
push
addb
jmp
add
jnp
and
adc
adc
lret
cmp
xor
lahf
iret
sbb
inc
sub
pop
hlt
and
push
mov
leave
insb
dec
js
pop
icebp
mov
leave
push
in
xlat
cmpsl
inc
rcl
sbb
not
std
imul
or
cmpsb
bound
add
popf
rcr
cmp
inc
xor
xchg
icebp
dec
mov
jae
movsb
dec
cli
cwtl
mov
enter
mov
jno
xchg
rorb
inc
add
push
dec
sub
cmpsl
sbb
cli
aaa
push
inc
ficoms
pop
or
jmp
bound
mov
lret
sub
addr16
in
fldenv
and
stos
mov
je
ljmp
loop
enter
pop
pop
cmp
or
and
jne
lock
mov
enter
adc
repnz
cmc
nop
leave
mov
mov
cwtl
nop
xchg
aas
mov
xlat
sti
xchg
stos
sbb
xorb
push
iret
xchg
clc
bound
mov
jne
fmulp
dec
mov
or
fwait
jmp
imul
mov
cltd
and
mov
aam
xor
jae
out
cmp
jl
lds
lods
inc
pushf
pushf
mov
out
decb
mov
sub
sbb
lret
dec
inc
mov
cmpsb
scas
ret
dec
insl
jle
mov
pop
insb
incl
jb
mov
mov
fisttpl
out
mov
sbb
dec
mov
and
iret
mov
inc
addr16
je
cmp
mov
out
pop
mov
cli
sub
sub
lods
outsl
ror
aad
add
jnp
inc
jp
loopne
test
outsb
test
add
mov
dec
push
leave
subb
pop
mov
push
into
cmp
inc
or
mov
test
pop
or
popf
js
fs
das
lcall
in
push
in
movsb
loopne
sbb
inc
pop
push
ljmp
or
lods
push
xchg
xchg
mov
jle
inc
cmp
movsl
mov
adc
pop
sti
int
pop
mov
fwait
sub
shl
add
lcall
add
push
push
pop
ja
xchg
lret
mov
loop
and
adc
sub
mov
lods
pop
call
leave
push
fstpl
fmulp
mov
loope
inc
pop
cwtl
pop
stc
push
adc
cmp
sub
push
pop
pop
ss
movsb
sub
xchg
pop
mov
or
inc
pop
xchg
dec
push
add
add
enter
mov
das
inc
leave
iret
lret
dec
dec
fwait
xlat
shrl
pop
mov
lret
inc
fcmovu
lods
loope
or
fwait
lret
fisubl
and
lret
pop
push
mov
dec
jnp
fs
fwait
test
pop
xor
mov
dec
cmp
dec
push
adc
push
adc
loope
cmp
xor
dec
lcall
and
mov
sbb
sub
cmpsb
or
test
and
arpl
cmp
xchg
in
push
stc
cmpsl
xchg
int3
lods
test
cltd
dec
xchg
cmpsb
sarb
dec
mov
stos
mov
sub
and
inc
ret
pop
pop
hlt
je
and
add
mov
inc
sbbb
or
push
jmp
sub
std
or
add
popa
aam
or
pushf
scas
jmp
xchg
leave
lods
add
pop
or
lret
outsl
push
fsubr
mov
mov
test
arpl
in
push
push
jp
inc
push
xor
cmp
cmp
pop
enter
mov
jbe
pushl
mov
push
fldenv
fildl
lret
mov
sbb
stc
push
cmp
mov
sub
leavew
xor
or
cmp
mov
std
pop
xchg
imul
jbe
lahf
cmp
rcl
aas
bound
ljmp
out
xlat
jns
pop
enter
jecxz
mov
stos
pusha
fdivs
sbb
xchg
lock
sbb
adc
scas
enter
in
xor
or
xchg
dec
push
mov
sub
pop
mov
xor
int
mov
cwtl
adc
lds
mov
xor
outsb
add
fdivp
dec
mov
push
sbb
fyl2xp1
mov
lods
sub
mov
mov
mov
nop
ja
sub
xor
pop
push
xchg
mov
mov
adc
stc
test
fidivrs
js
and
dec
ret
into
or
push
pop
cmp
test
xchg
push
bound
push
inc
sarb
and
and
adc
sbb
push
dec
mov
mov
push
test
add
call
xor
xchg
pop
lea
fdivrl
add
lea
ds
inc
fwait
not
cmp
cmp
add
repnz
inc
cmp
ret
sbb
mov
xor
sbb
jns
and
je
pop
sarb
mov
sbb
scas
dec
insl
stos
sub
and
int
pop
sahf
pop
fisttpl
movb
in
mov
iret
lcall
hlt
orb
fisubrs
repnz
inc
mov
pop
ret
aaa
imul
sbb
mov
negb
popf
jecxz
xchg
lret
jmp
jne
hlt
aas
sub
clc
mov
adc
insb
addr16
out
aad
test
mov
xchg
bound
rcll
les
outsb
shlb
mov
xor
lahf
inc
push
dec
stos
adc
and
mov
and
xor
push
sysret
jl
sahf
push
push
pop
shlb
mov
shl
mov
imul
test
lds
pop
xor
sahf
push
movb
sbb
sbb
xor
pushf
enter
movsl
add
incb
pop
adc
es
cmp
out
mov
stos
pop
stos
ffree
adc
clc
add
outsl
fldcw
cmc
ret
jp
out
movsl
push
lea
leave
jmp
dec
jg
lret
fdivs
popa
and
xchg
mov
fidivrs
decb
sub
mov
mov
adc
mov
sahf
pusha
in
pop
dec
roll
pop
xchg
std
jle
incb
fcmovb
cmp
nop
pop
mov
mov
jmp
dec
push
dec
sbb
sbb
mov
in
pop
adc
dec
rcll
cmp
pop
sub
push
aad
sbb
in
or
fldt
std
andl
pop
mov
add
shrl
mov
fstpl
adc
push
mov
in
xchg
mov
or
ja
adc
and
sbb
test
cmp
jmp
sub
pop
xchg
and
dec
lea
xor
ret
cmp
pop
push
rorb
xchg
push
inc
mov
sahf
pop
scas
xchg
or
ds
push
mov
xchg
push
ret
shll
xchg
jne
cmp
mov
xchg
cwtl
daa
fwait
orl
cmp
cs
cmpsl
cmp
je
dec
jp
mov
xchg
outsb
jb
dec
push
push
rol
rorl
cs
lret
mov
inc
stos
mov
sbb
or
mov
ficomps
insl
add
mov
mov
fwait
clc
lds
inc
sbb
pop
lods
icebp
repz
outsl
jbe
jno
xchg
mov
mov
fwait
add
lcall
mov
and
xor
xor
in
cld
es
testl
movsb
out
outsl
insb
or
xor
adc
or
std
inc
loopne
jmp
and
mov
cmpb
cmp
cli
pop
adc
cli
cmp
xchg
popf
aas
add
rcll
push
mull
popa
cmp
or
xor
pushf
mov
dec
xor
call
cmpsb
fcomps
aaa
mov
test
mov
jle
out
ss
aaa
repnz
test
push
cmc
daa
xor
or
hlt
xlat
add
sbb
or
jg
jmp
adc
sbb
mov
call
xor
inc
je
shr
icebp
es
fiaddl
add
mov
xchg
or
fiadds
repz
mov
lahf
push
roll
loop
xchg
xchg
add
jo
addr16
imul
call
mov
mov
and
ljmp
xchg
imul
add
add
lods
ds
std
fildll
jae
cld
and
sub
fildll
lahf
dec
dec
mov
repz
pusha
or
and
js
into
mov
push
movl
cmp
addr16
sahf
pop
mov
xchg
in
lahf
push
push
scas
or
inc
cli
nop
mov
jecxz
outsb
insl
sbb
jns
pop
lods
shll
mov
test
sbb
jg
cmp
pushf
jae
push
sub
out
sti
sahf
mov
orl
sbb
rcll
pop
adc
push
push
and
fstps
fidivrl
jle
dec
mov
add
add
lret
outsl
jo
gs
jle
in
pop
cmp
jno
adc
int3
out
sbbl
stc
ss
sub
jb
pop
mov
in
cmpl
lcall
popa
fcomps
imul
adc
mov
les
bnd
icebp
add
insl
push
int3
stos
or
xchg
xchg
daa
lahf
mov
ja
add
xchg
mov
jecxz
or
xchg
jmp
dec
in
loopne
lods
xchg
add
or
push
ret
cli
jmp
scas
pop
and
and
andb
add
cmp
jnp
outsl
mov
inc
scas
aas
mov
icebp
inc
or
sub
jbe
push
popa
aaa
pop
daa
xor
xor
and
rclb
jecxz
xlat
stos
and
stos
sbb
inc
adc
or
dec
adc
je
clc
xchg
jae
ss
jg
fwait
arpl
sbb
dec
and
out
enter
push
dec
xor
test
mov
aad
stos
loope
push
loope
outsb
jae
aaa
fdivr
jbe
push
inc
xchg
and
or
std
and
pop
push
push
and
and
mov
sbb
fnstsw
or
fildl
cld
arpl
lea
pop
or
loopne
lcall
xor
cmp
jbe
test
sub
setns
fsubrs
mov
inc
sbb
in
mov
js
mov
push
or
mov
jnp
lahf
xor
cmc
jbe
ret
push
sub
sbb
adc
sub
sub
imul
cmp
mov
adc
sbb
jnp
sub
nop
or
sbb
jno
popl
adc
jmp
xchg
aam
repnz
mov
jmp
ja
xchg
addr16
pop
mov
scas
aam
mov
push
ljmp
push
and
cmp
dec
pop
leave
xchg
nop
jg
in
test
inc
inc
rol
ljmp
push
mov
inc
push
mov
and
add
sahf
ud1
xchg
insl
adc
jle
loopne
fmull
and
gs
movsb
ret
sub
xchg
out
xor
adcl
sbb
jbe
xchg
xchg
in
pop
cmp
xchg
aaa
popf
inc
div
cli
or
adc
inc
cmp
nop
xor
xchg
xchg
aam
aas
shlb
dec
mulb
out
jmp
lcall
dec
loop
dec
jge
mov
pop
add
fisubrs
or
or
adc
mov
inc
mov
call
out
cmp
ret
fmuls
repnz
ds
add
pop
adc
dec
in
dec
stos
sbb
lret
out
dec
ret
xchg
scas
ja
fs
sbb
xchg
inc
stos
push
mov
jae
jmp
push
orl
or
out
and
in
iret
aaa
leave
push
push
xor
mov
and
lret
sub
rorb
ret
jne
mov
enter
test
loope
lea
pusha
jnp
add
add
push
mov
cmpsb
cmpsl
leave
sahf
jns
dec
lcall
dec
and
add
movsl
jp
pop
or
rcrb
int3
mov
and
stos
aad
repz
dec
jmp
adc
adc
and
mov
dec
test
mov
in
loopne
ficoms
ss
mov
rclb
pop
or
mov
insl
mov
mov
in
hlt
push
pop
jbe
push
adc
movsl
lret
cmc
sub
mov
add
mov
and
xor
sub
nop
neg
ja
or
filds
es
andl
dec
loopw
imul
xchg
mov
in
sub
fisubrs
addl
std
jno
jge
arpl
push
push
sbb
lcall
cmp
loop
popf
sub
rcrb
pop
out
daa
lock
mov
and
inc
sub
daa
bound
pop
jmp
fstps
stos
dec
sub
xchg
pushf
test
or
sbb
lock
sbb
cli
jge
sahf
pushl
mov
fwait
outsb
mov
xor
shlb
adc
jg
cwtl
aas
push
cli
jae
xchg
adc
adc
adc
repz
ja
arpl
sahf
data16
paddsb
xchg
push
xchg
or
shrb
adc
jns
scas
aas
cwtl
icebp
ret
push
mov
jle
sbb
mov
lret
add
mov
add
xchg
out
out
xlat
outsl
sti
push
adcb
push
scas
pop
fidivl
sbb
sbb
ret
gs
rcrl
or
sbb
mov
dec
dec
out
sti
add
movsl
or
mov
jb
adc
das
pop
mov
lds
lret
insb
stc
jmp
scas
sub
adc
xor
flds
hlt
fnstenv
lahf
scas
mov
jne
mov
push
push
rcrb
inc
or
mov
lock
out
aad
stc
sbb
jnp
and
in
test
xchg
mov
add
cltd
cmc
sub
xchg
int
add
notl
sbb
rcll
xor
loope
inc
call
push
xchg
inc
ja
repnz
addl
sub
les
imul
cmp
and
sarl
pop
faddp
test
nop
addr16
dec
lock
mov
fdivrp
hlt
inc
push
ret
mov
mov
jge
or
cmp
fcompl
data16
mov
cmp
divl
xchg
sbb
push
ret
jl
xor
sbb
mov
pop
repnz
pop
mov
pop
js
negl
scas
arpl
test
hlt
jbe
push
cmc
fstps
jns
jmp
or
shlb
sbb
stos
xchg
or
add
das
add
pusha
movsb
jae
jmp
xchg
xor
ficoml
pop
xor
ret
iret
xchg
pop
mov
testl
roll
in
sbb
test
rcl
aad
inc
addl
orl
fwait
pop
cmp
repz
dec
popf
push
inc
leave
test
inc
mov
fucomip
scas
inc
cmp
out
js
cmp
in
rorb
dec
cld
jne
mov
push
mov
xchg
cltd
dec
adc
jne
aad
jo
push
je
dec
jge
inc
xor
inc
sahf
cwtl
ret
ds
push
jle
sbb
pop
inc
adc
xchg
iret
mov
mov
lret
cmp
dec
movsb
fistpll
pop
test
rorb
xchg
adc
std
mov
jo
sbbb
push
test
jns
pop
adc
imul
or
clc
ficompl
jmp
add
out
in
in
inc
and
xchg
movsl
jmp
mov
mov
fstps
sbb
add
stc
xlat
push
cld
adc
lret
xor
add
into
xchg
jno
xor
xchg
or
fdivrl
loope
push
jge
adc
pop
xchg
push
insb
push
pop
adc
shrb
add
dec
filds
pop
adc
jg
cwtl
jl
xor
repz
xor
inc
sub
xor
sub
jp
xor
je
sbb
mov
fisttpl
xor
xchg
stos
mov
stos
jo
jl
sbb
cli
popf
idiv
xor
je
cltd
add
sahf
jnp
mov
das
mov
neg
mov
adc
sbb
int3
ret
cmc
cmp
xor
xlat
pushf
mulb
sub
and
xchg
mov
or
and
ljmp
sub
into
adc
popf
pmuludq
fldenv
cmpsl
push
or
dec
cmpsl
fidivs
mov
in
xchg
push
hlt
mov
jnp
lds
jb
loop
js
cmp
jno
push
sub
cmp
inc
sbb
fnstenv
adc
sub
xchg
fwait
loope
test
faddl
stos
jmp
enter
mov
push
sbb
sti
jge
mov
das
adc
xlat
lret
cltd
inc
cmp
push
xchg
fldcw
in
jae
xchg
push
mov
mov
pop
or
mov
inc
pop
xor
stc
sbb
scas
inc
inc
xor
mov
or
lods
push
dec
add
mov
sub
dec
lret
cwtl
mov
jp
adc
jae
cltd
sbb
mov
sbb
rcrl
test
sub
mov
lret
outsb
addl
push
loop
cld
aad
mov
pop
jae
xor
filds
or
mov
nop
test
ds
push
adc
add
mov
sbb
fcmovnu
mov
adc
repnz
pop
outsl
push
lds
iret
jns
dec
div
jnp
stos
sbb
dec
push
adc
or
lea
jbe
sbb
notb
imull
xor
je
cmpsb
out
jae
or
sub
inc
cmp
fistpl
sbb
sbb
mov
movsb
lahf
xor
popf
bnd
add
cli
xchg
adc
mov
xchg
mov
jg
icebp
adc
les
movsb
pop
sahf
movsb
xorb
cmp
jne
push
sub
xchg
cs
mov
and
dec
xchg
js
xchg
stos
sbb
ja
gs
adc
ja
and
wrmsr
aam
cwtl
dec
pop
sahf
xchg
stc
ret
ds
js
fiaddl
pop
ss
hlt
ja
xchg
push
movups
fst
dec
lret
out
lret
jno
jne
cmp
xchg
call
aaa
mov
nop
pop
or
mov
cmp
clc
fidivrs
pop
jnp
imul
sub
test
sub
imul
lahf
scas
lcall
stos
xchg
jl
xor
jp
pop
jb
pop
dec
dec
stos
sar
in
mov
rcr
js
sti
dec
add
add
pop
xchg
or
xchg
mov
loopne
outsb
aam
sub
movlps
sbb
push
pop
call
mov
cmp
cmp
cmp
push
aaa
out
sub
add
sti
and
mov
mov
push
int
je
jno
rorl
lcall
sub
sub
add
test
fisttpll
add
mov
and
lods
in
or
iret
sub
fcmovne
or
hlt
in
fmul
or
lret
xchg
scas
stc
jmp
popf
outsl
push
sbbl
jle
sar
add
dec
cmp
xor
push
aam
mov
stc
out
movsl
std
jmp
jmp
xorb
movsl
scas
mov
jp
or
nop
ds
rcll
dec
ss
push
and
shlb
jo
jae
loopne
mov
in
sahf
cmpsb
das
cmp
inc
sarb
or
add
add
andl
addr16
cmpsl
jmp
adc
imul
mov
dec
int
sar
scas
mov
add
das
stos
test
dec
loopne
jbe
fcmovbe
jmp
jnp
adc
lret
mov
rorl
cmp
icebp
xor
cs
xchg
mov
adc
cmp
stc
mov
minps
mov
xor
and
neg
sbb
pop
xor
mov
aad
adc
inc
mov
push
adc
sub
jl
push
add
or
hlt
stos
and
and
pop
push
mov
xor
jbe
jbe
fldt
xchg
imul
test
mov
and
xchg
xchg
aas
ds
push
into
jb
sub
jge
mov
ret
int
jg
mov
sbb
sar
pop
lret
call
ret
ss
add
stos
add
sahf
mov
pop
dec
push
daa
arpl
hlt
cmp
popf
mov
stc
push
cwtl
sbb
sti
xlat
jl
test
push
push
cmc
xchg
cmp
pop
test
andps
dec
push
aaa
insb
lea
sub
jne
mov
pop
sub
cmpsl
dec
movsl
sub
movsb
sub
push
mov
cmp
es
cmp
test
insb
arpl
std
jnp
js
shl
cmp
fstps
or
mov
dec
fs
add
inc
mov
fdivrl
test
dec
addr16
mov
sbb
pop
xchg
dec
pop
lret
stos
fsts
sahf
shll
inc
sahf
subl
or
adc
inc
pushf
push
popf
int3
add
jp
push
adc
lret
jo
add
adc
incl
and
imul
out
or
out
jo
test
mov
xchg
aas
cmp
rorb
stc
std
mov
mov
sub
pusha
push
xlat
adc
aam
adc
cmpsl
in
arpl
mov
rorl
jmp
pop
rolb
jne
sahf
dec
jle
jbe
lea
push
add
dec
xlat
pusha
das
jle
out
lret
iret
and
xor
out
jo
jb
push
repz
enter
push
lret
add
syscall
xlat
movl
pop
add
pop
inc
sbb
hlt
mov
dec
push
push
icebp
imul
push
scas
xor
dec
push
lcall
jne
adc
push
ja
or
aam
lea
sbb
pop
sub
push
add
js
shrl
or
push
iret
in
aam
fsubr
push
aas
cmc
push
or
lea
or
or
mov
rcl
or
in
adc
daa
xchg
scas
out
std
fidivs
jge
xchg
mulb
ljmp
pop
xchg
mov
movsl
add
adc
cmpsb
cs
cltd
sbb
flds
fdiv
jb
mov
add
jl
jb
mov
mov
sub
popf
push
out
and
out
cmpsl
pop
mov
adc
scas
dec
mov
pop
mov
in
adc
add
pushf
lret
fdivrl
jne
pop
push
or
mov
popf
int3
fistpll
leave
cld
cmp
cmp
fbld
outsb
test
adc
pusha
in
xchg
xor
and
cltd
push
imul
repnz
inc
stos
shll
aam
sarl
addr16
pop
xchg
shlb
sub
adc
cltd
ffree
test
movsl
out
jge
outsl
xlat
pop
lcall
shrb
push
adc
rcr
push
push
cli
jno
sub
sbb
dec
mov
loop
ret
jb
inc
test
fwait
pop
adc
lret
pop
adc
filds
and
lret
adc
pushf
outsl
call
outsl
iret
mov
pusha
xorl
leave
push
cwtl
subl
cmpsl
push
jg
ss
nop
cltd
xchg
adc
test
pop
les
xor
push
idivb
mov
mov
adc
sbb
sbb
test
inc
rcrl
test
lcall
arpl
addr16
push
stc
loope
xor
out
cwtl
aaa
out
mov
lock
mov
pusha
rcll
pop
es
add
out
out
popf
je
push
mov
ss
lock
add
ljmp
jne
pushf
fcmovbe
das
and
loopne
lods
arpl
or
sub
test
popa
pop
fwait
stc
mov
dec
cmp
pop
cmpsl
fs
pop
sbb
mov
lahf
xor
cmp
lahf
mov
cmpsl
subl
imul
lea
cs
add
data16
push
mov
in
xchg
mov
sub
ret
lods
sub
js
in
mov
pop
mov
loopne
mov
shll
mov
dec
add
loope
in
cmp
push
lret
pushf
jb
lock
push
cmp
outsb
xchg
lea
sbb
subb
pop
popa
or
dec
fbstp
add
movsb
arpl
jge
jge
mov
in
ss
jge
xor
mov
fwait
in
fiaddl
inc
inc
fidivrl
outsb
add
int3
dec
inc
shrl
mov
ret
dec
cmp
add
dec
adc
and
jge
pop
aas
or
jmp
sbb
mov
sub
dec
dec
push
pop
push
or
cli
pusha
push
out
dec
jle
mov
push
xor
lock
test
jo
or
lock
fcmovnu
rorl
notl
pop
outsl
cmp
ja
add
imul
pop
lds
rcll
fbstp
loopne
jno
jae
cmp
pop
dec
inc
inc
dec
cld
loopne
xchg
xor
insb
aam
adc
std
jmp
sbb
sbb
adc
add
or
add
sbb
ss
xor
repz
cmp
inc
sarl
test
or
add
adc
lods
loop
jb
aas
fstpl
dec
aam
push
add
xor
pushf
test
xchg
push
sbb
in
shlb
iret
js
fildl
lock
rcrl
nop
mov
icebp
add
aas
bound
or
mov
inc
pop
pop
pop
mov
and
nop
mov
sahf
sub
inc
pop
fstps
ss
and
xor
outsl
std
aas
cmp
mov
negb
cltd
dec
mov
lods
cmp
and
inc
roll
xchg
sbb
mov
subb
or
jae
popf
movsb
std
fs
pushf
into
xchg
dec
test
call
pop
cmpsb
xchg
inc
mov
lahf
aad
jmp
push
scas
and
mov
xchg
sub
mov
ds
out
mov
ja
in
loopne
mov
cwtl
xchg
out
sub
mov
mov
adc
sar
divl
mov
and
mov
out
xchg
jmp
pop
icebp
jmp
into
std
pop
ret
and
mov
test
add
mov
mov
arpl
cmc
rcrl
imul
test
dec
mov
push
loop
push
sub
in
pop
cwtl
jbe
rcr
into
in
push
lcall
ficoml
cmp
es
cmpsl
test
les
adc
adc
je
fdivrs
mov
outsl
sbb
and
pop
sub
push
cmpsb
cwtl
cmp
push
lret
or
adc
shr
push
dec
add
and
adc
and
dec
icebp
and
cwtl
out
lcall
stos
test
mov
or
mull
sub
jg
dec
fstp
or
movsb
cmpsb
jmp
adc
push
enter
arpl
test
and
lds
fdivr
jae
imul
nop
leave
lods
jnp
daa
js
pop
and
push
and
pop
jno
pop
adc
add
stos
mov
repnz
mov
insl
dec
add
mov
test
test
jbe
inc
cmc
cwtl
sub
inc
fbld
pop
lds
xorb
pop
mov
lret
and
jno
cmpsb
ljmp
imul
aas
mov
data16
in
xchg
cs
sbb
xor
out
sub
ja
ja
push
jp
icebp
scas
cmpb
lret
or
gs
mov
mov
test
dec
lods
mov
jmp
arpl
mov
dec
jno
int
je
pop
xor
imul
jle
movsl
iret
in
out
mov
in
mov
js
adc
or
jle
stos
mov
inc
cmp
in
out
cs
mov
rorb
inc
dec
mov
test
cli
jae
sub
xor
fnclex
fmull
fnstcw
in
dec
loop
cmpsl
xchg
xor
add
mov
sbb
shlb
mov
ja
adc
mov
fstps
dec
inc
mov
cmc
inc
cmovg
loop
sbb
xchg
les
imul
arpl
and
shrb
rclb
mov
or
xchg
lret
add
out
or
addr16
pop
into
ret
xorl
mov
xchg
adc
aam
jnp
sub
test
mov
mov
mov
jmp
jle
xchg
rclb
in
cs
movsl
cmpsb
jge
lods
js
insl
ror
sar
insl
xor
les
pop
jg,pt
adc
fstl
mov
fbstp
fldt
xor
idivb
inc
in
xor
mov
mov
dec
aaa
and
jmp
inc
xchg
fs
and
negl
nop
mov
cmp
push
in
inc
and
ret
scas
in
mov
and
std
sbb
sti
xchg
jge
add
dec
int
jge
pop
sub
lret
sbb
adc
adc
inc
cmp
shrb
dec
sarb
sub
outsb
mov
clc
push
out
xlat
push
sarl
mov
or
rcrb
jae
mov
lods
fildll
mov
dec
push
stos
lds
inc
xor
xchg
jecxz
cltd
and
pop
mov
fldl
incl
inc
and
push
lock
in
fnstenv
mov
dec
and
jb
jmp
jae
mov
xchg
int
jle
pop
cmp
mov
jnp
mov
fistpl
push
jnp
mov
repz
je
push
cltd
xchg
inc
push
mov
cld
bound
jmp
test
jb
enter
scas
and
data16
fcomp
xor
imul
hlt
insb
jecxz
xchg
inc
inc
shrb
into
dec
fisttpll
shll
pushf
add
cmc
jo
add
ret
lods
leave
dec
mov
dec
mov
dec
xor
and
iret
pop
call
out
arpl
fsubl
imul
jmp
stos
pusha
dec
mov
inc
cmp
dec
add
sbb
add
push
mov
xchg
pop
sbb
mov
cmpsl
movsb
aad
or
nop
pop
mov
mov
pusha
cltd
push
adc
pop
sub
mov
shlb
mov
push
loopne
and
frstor
std
jl
cmp
cmc
sbb
enter
leave
jno
cmp
mov
mov
pop
mov
in
cmp
testb
adc
ljmp
add
ficompl
mov
pop
pop
sarl
cmp
js
rcll
aam
into
stos
xchg
rcrl
je
mov
adc
and
xchg
xchg
inc
adc
push
jo
dec
mov
cmp
or
imul
sbb
inc
repz
jg
cmp
outsb
popa
push
xchg
push
ret
xchg
jae
fidivs
repz
stos
insb
inc
jmp
sbbb
sarl
out
pop
jo
arpl
pushf
pop
xor
adc
dec
nop
fdivrl
push
pslld
lds
push
fsubrs
aam
dec
insl
and
sbb
in
loopne
jno,pt
leave
mov
stos
and
or
movsb
and
xchg
xor
fnstcw
ret
jnp
les
push
nop
ds
sbb
aad
sub
insb
addl
jle
mov
pop
pop
pop
test
mov
jl
repnz
pop
mov
loope
cmp
lahf
movsb
js
fldenv
lahf
xor
sub
mov
push
mov
jge
int3
insb
sub
jb
addb
or
lret
rcrl
dec
fists
stc
sbb
outsl
sub
cmp
xor
jg
out
sahf
rcr
stos
jl
andnps
shlb
jge
xchg
or
cmp
xor
mov
fwait
inc
xlat
xor
lock
aas
outsl
add
das
pop
mov
sahf
fldl2e
sub
les
into
ss
pop
dec
fwait
cmc
xlat
scas
ja
cs
dec
push
cmp
add
jecxz
mov
cmpsl
mov
cmp
push
movsb
sbb
mov
out
pop
out
dec
dec
xlat
mov
xchg
pop
pop
out
or
push
and
mov
sub
dec
push
mov
mov
xchg
lret
mov
idivb
leave
loopne
mulb
in
push
jge
aaa
sbb
nop
ss
mov
mov
and
out
pop
into
int3
fsubrs
sbb
in
mov
sahf
arpl
push
int
ljmp
jo
mov
inc
gs
sbb
jl
adc
pop
push
push
adc
mov
loope
mov
mov
sub
jne
add
lret
leave
sub
xchg
jle
jl
and
pop
ja
je
lcall
mov
mov
mov
add
and
fs
addr16
ret
xlat
jl
sbb
push
iret
inc
jecxz
add
inc
push
sub
sarl
icebp
fnstsw
div
push
mov
sub
add
sub
fiadds
cmp
add
ss
gs
ret
scas
negl
imul
aas
lret
shll
leave
nop
jbe
cmp
push
and
lea
jl
aaa
ljmp
orb
imul
roll
pop
lret
adc
jg
push
sub
les
jecxz
outsb
out
sub
ret
inc
incb
push
into
das
mov
mov
inc
out
fwait
and
cmp
dec
test
cs
inc
add
pop
xchg
in
hlt
mov
les
and
jle
lds
and
xor
pushf
in
lcall
stc
sbb
push
jne
push
and
push
ret
dec
push
add
scas
pop
mov
mov
mov
sub
dec
mov
sub
inc
out
repz
adc
imul
sub
movsl
in
clc
clc
sub
or
cmc
inc
cmp
and
pusha
sub
add
sarl
fildll
mov
pop
clc
cmpsl
mov
mov
pop
adc
mov
push
adc
inc
scas
addb
lret
cmp
or
dec
ret
mov
ret
scas
xor
or
xchg
add
jecxz
cmp
addr16
outsb
aaa
inc
mov
dec
das
inc
add
test
xor
sub
test
jae
or
ret
cmp
mov
sbb
das
iret
pop
cltd
in
inc
cmp
cld
ret
pop
mov
adc
jbe
jnp
mov
xchg
repz
fsubs
push
fstpl
test
sbb
cmp
xor
cmp
imul
inc
call
clc
dec
mov
cmpsl
out
ret
imul
arpl
es
or
fwait
push
add
mov
push
movsl
mov
movsb
push
scas
bnd
test
lods
dec
sbb
movsl
inc
mov
or
pushf
add
cmpsl
xlat
repz
fidivl
sarb
jno
ja
push
sbb
and
ljmp
pop
mov
adc
inc
mov
or
cmc
imul
sti
xor
fadds
ss
pusha
in
mov
jecxz
xchg
jl
int3
mov
cmp
mov
cmc
mov
mov
push
ucomiss
movsl
mov
loope
negb
jb
movsl
call
mov
cmp
cmp
je
push
sbb
lods
cmp
imul
push
hlt
push
xchg
sub
fnsave
sbbl
into
adc
xor
inc
nop
test
add
icebp
or
cmpb
aad
out
sub
push
jle
inc
xor
jns
into
dec
lock
xor
mov
int3
lods
lret
test
in
daa
xor
xlat
rcl
ds
push
mov
pop
andb
in
xchg
jns
outsb
push
outsb
jle
add
dec
add
loope
rolb
xchg
sub
out
cmp
lret
jmp
loopne
sub
pop
dec
aaa
and
mov
sbb
cld
jo
adcb
repz
lret
mov
mov
jp
loop
rorb
lahf
sti
sbb
or
adc
dec
das
mov
pop
ficoml
pop
fidivs
orl
dec
aad
sbb
frstor
gs
pop
inc
or
int3
adc
cs
jle
push
jb
mov
pushf
aam
xchg
lret
adc
fwait
xchg
scas
sub
jne
inc
rclb
cmp
sbb
cld
repz
push
test
into
jo
inc
adc
enter
pop
lods
in
int
ja
mov
jno
outsl
jb
movsb
mov
sbb
inc
jle
pop
push
stc
push
push
adc
in
sti
xor
dec
cmp
sbb
ds
pop
ja
push
cmc
fcoms
out
mov
mov
cmp
lahf
push
jno
inc
adc
test
mov
jb
cmpsl
and
stc
enter
cmc
and
mov
into
pop
rcl
or
adc
ljmp
movsb
xchg
inc
xorb
and
pop
ljmp
dec
pusha
inc
push
add
pushf
xor
xor
daa
outsb
inc
sahf
shl
add
sub
inc
imul
mov
lock
cmc
gs
add
das
in
enter
mov
aam
lea
jno
cmpb
in
xor
cmpsl
jo
xchg
sbb
pop
test
fsubl
aam
mov
mov
pusha
sub
cmp
shrb
xor
dec
pop
ret
mov
outsl
mov
dec
cld
lods
aad
es
cmc
fsubrp
loopne
and
mov
push
imul
xor
hlt
mov
leave
lret
idivl
mov
cs
imul
dec
mov
mov
repz
call
or
test
mov
enter
sti
xor
test
or
fwait
add
inc
js
adc
aam
out
cltd
shll
sarl
push
je
and
movsb
inc
lods
stos
popa
inc
lods
sahf
push
add
pop
or
push
cmp
ss
push
pushf
or
add
push
jge
sbb
cmc
in
rclb
adc
push
and
mov
daa
sub
repnz
fidivrl
xchg
insl
mov
mov
arpl
dec
loope
jge
mov
dec
jnp
mov
sbb
sbb
pop
xor
xor
jo
xor
inc
hlt
mov
mov
jmp
in
inc
mov
stos
adc
xlat
call
loope
dec
dec
jo
daa
adc
lcall
mov
inc
mov
cld
jae
mov
mov
push
icebp
stc
inc
pop
das
stc
clc
pop
roll
add
push
mov
sbb
fdivrl
mov
call
arpl
sbb
lods
cmp
sbbl
icebp
mov
mov
test
jbe
sbb
imul
add
jae
cmp
pop
out
fwait
adc
in
lret
xor
cmp
jle
loop
xchg
shlb
and
mov
xlat
mov
sub
aaa
jp
aas
cmp
sub
cli
jecxz
cmpsb
mov
scas
imul
sahf
call
add
mov
inc
and
mov
adc
push
inc
loopne
leave
fisttpl
pop
dec
ljmp
pop
aas
pop
xchg
stos
xor
cmp
or
fwait
mov
xchg
and
pop
jge
daa
popa
add
out
ret
fstl
les
pop
int3
ficomps
notb
and
popa
adc
shlb
push
fs
mov
int3
movsb
hlt
ss
sbb
pop
lock
dec
push
pop
jge
mov
pop
rolb
movsl
imul
aas
fildll
fstl
or
ljmp
es
xchg
push
xor
arpl
test
xchg
push
mov
mov
pop
iret
xchg
lret
dec
push
cltd
and
and
jae
insl
jns
and
jge
and
inc
push
lods
push
addr16
sbb
ss
push
dec
pop
mov
ja
mov
stos
fwait
cmp
and
pusha
ret
mov
ja
dec
cmp
sub
push
or
ds
cmp
jl
fiadds
cmp
adc
jp
mov
adcl
cmpsl
jle
cmp
sub
mov
add
sbb
jecxz
mov
pop
push
pop
push
fs
sahf
dec
xor
xor
stos
xchg
in
mov
cmp
fstpt
lret
movsl
sbb
lret
rorb
inc
rcll
test
mov
cmp
repz
cltd
pop
xchg
fsubrs
cmp
xchg
std
cltd
fs
pop
pushf
call
stos
mov
loop
fs
imul
jmp
in
pop
loopne
and
in
xor
mov
fldcw
lods
ljmp
or
push
mov
fisttps
cltd
pusha
mov
push
int3
adc
inc
scas
inc
es
mov
gs
and
pop
push
cltd
stc
es
jbe
push
cmp
sbb
mov
es
cli
jecxz
das
push
insb
push
out
sub
xchg
in
dec
orb
mov
mov
leave
std
addr16
jmp
push
sbb
call
inc
add
outsl
or
insl
push
mov
inc
pushf
xor
mov
ljmp
into
push
fisttpll
into
inc
sub
ljmp
jmp
push
and
incl
scas
dec
add
ds
xor
xor
test
cmp
mov
sbb
cmp
sbb
stc
sahf
mov
rcrb
out
jl
pop
or
into
int3
and
repz
or
adc
push
loope
sahf
bound
push
cmp
push
stos
mov
dec
lea
sub
lret
mov
mov
sub
add
pop
or
sub
cmp
cmp
pop
and
and
xor
and
cltd
jne
cld
sub
pop
ret
pop
push
lahf
cwtl
and
add
sub
out
lcall
xor
cmp
adc
arpl
cmpl
pop
movl
idiv
push
loop
inc
aad
ja
in
xor
cmp
nop
pop
lods
lcall
xchg
arpl
adc
inc
lock
mov
arpl
add
jmp
xlat
mov
mov
insb
jge
imul
shrb
lea
test
loopne
std
stos
mov
sbb
out
leave
lcall
lea
rol
cmp
mov
push
push
rorb
dec
jg
lods
pop
fmul
movsl
pop
je
push
fiaddl
or
imul
push
inc
xchg
movsl
js
jle
iret
mov
cmp
mov
dec
inc
cltd
imulb
or
out
dec
or
cld
add
xchg
or
inc
pop
add
sbb
clc
aam
jae
or
add
fsub
fdiv
pop
cmp
pop
cmp
cld
aaa
fcoml
pusha
out
data16
sub
jnp
cmp
ret
sub
add
adc
jmp
ret
or
and
or
cwtl
notb
repnz
pop
cmp
xor
push
sbb
xor
mov
stc
outsb
push
adc
pop
std
mov
xchg
mov
cmpsl
dec
mov
fidivrl
cmpsl
cmp
repnz
repz
outsb
xchg
test
jmp
sub
adc
pop
into
pop
popa
rcr
out
mov
dec
rclb
std
push
xchg
fdivrs
fnstcw
int
bound
pop
sub
sbb
ret
xchg
lds
adc
and
in
in
xchg
mov
mov
insb
stc
push
shr
rclb
loopne
jns
pusha
mov
push
sub
or
inc
dec
inc
xorb
mov
pop
daa
xor
adc
insb
push
push
imul
sub
lock
lret
imul
hlt
and
fucom
inc
sbb
push
ret
lret
ds
lods
test
xorl
jmp
sub
outsl
jmp
scas
xlat
cltd
xlat
cmp
lret
pop
mov
daa
jge
jge
jecxz
xor
bound
aam
cmp
push
aam
and
pop
xchg
mov
aaa
movsb
jbe
sahf
test
sub
lret
push
fldl
dec
push
mov
sti
mov
test
insb
pop
push
enter
xchg
cmp
xor
xlat
outsl
mov
cmp
sub
fimuls
shl
ljmp
xchg
cld
push
jae
dec
fmuls
mov
out
xchg
sbb
cld
cmp
jg
les
lds
sbb
cmp
mov
lret
repz
ret
xlat
jp
jo
sbb
push
xchg
sub
mov
or
addr16
addr16
lds
xor
xor
push
sahf
lock
out
and
fildll
cmpsb
aam
clc
imul
mov
mov
mov
gs
leave
ss
aam
jo
je
cmp
clc
xchg
movsl
sbb
cwtl
lock
arpl
data16
inc
and
mov
in
shlb
lods
or
insb
mov
cwtl
dec
jg
mov
jecxz
mov
lahf
or
pusha
ss
pushf
insb
das
mov
jb
mov
lock
pop
fsubr
mov
and
adc
and
mov
and
xlat
xchg
push
mov
cmp
inc
xchg
push
loop
cmpsl
push
rclb
mov
movsl
pop
aaa
sbb
int3
scas
xor
outsl
mov
cmpsb
sub
leave
mul
xchg
dec
insb
push
cmpsb
mov
mov
cmp
call
lods
push
shlb
xchg
pop
repz
adc
out
jl
push
pusha
movsl
int
mov
adc
jecxz
cli
xchg
dec
xor
scas
cwtl
adc
xchg
and
mov
mov
mov
test
lret
adc
inc
negb
ds
lahf
dec
mov
xor
xchg
pop
clc
xor
inc
jae
mov
loopne
sti
inc
pop
mov
cld
xchg
test
frndint
lcall
mov
cmpsl
adc
or
cmpsb
jns
jmp
out
sbb
push
movsl
divb
dec
mov
jle
mov
mov
mov
dec
popa
lahf
push
mov
and
out
jmp
jmp
fisubrs
push
cld
cli
pop
test
push
sbb
rolb
push
pcmpgtb
ret
cmpsl
pop
dec
je
mov
subl
hlt
mov
lahf
adc
xchg
jmp
mov
das
push
and
or
push
cld
push
push
fcmovne
ja
movsb
int3
paddusw
clc
inc
scas
mov
cli
mov
aad
aam
inc
stos
insb
movsb
push
cmc
sub
shr
mov
mov
mov
xchg
mov
icebp
mov
push
dec
sub
pop
aaa
sbb
rcrb
test
sbb
xor
push
xor
xchg
decb
ja
ljmp
stc
sti
in
dec
push
outsl
xlat
in
dec
xchg
int3
int3
loopne
in
push
and
sbb
insb
iret
out
into
cltd
or
ficoml
lea
inc
push
dec
cwtl
loope
sahf
icebp
int3
mov
pop
add
xchg
fcmovnb
insb
add
arpl
or
mov
test
sub
adc
mov
cmpb
fisttpll
xor
movsb
fnstsw
jmp
icebp
dec
int3
jne
xor
xchg
push
mov
into
pop
pop
dec
jmp
addr16
loope
mov
push
test
push
inc
dec
mov
add
popf
ss
jnp
mov
or
push
mov
sbbl
cmc
adc
fsqrt
inc
pop
call
cmp
out
movsl
gs
movsb
cmp
leave
jne
stc
pusha
push
scas
lcall
dec
pusha
mov
and
sbb
adc
push
fmul
xlat
inc
cmp
hlt
rcrb
dec
es
sti
andl
scas
cmc
mov
hlt
sbb
repnz
outsl
and
es
and
add
mov
mov
out
iret
jnp
das
cld
mov
mov
aam
stc
in
cmpsb
mov
lahf
outsl
push
xchg
xor
mov
cmpsl
jmp
adc
xor
imul
mov
cmp
out
scas
enter
inc
adcb
xchg
jmp
bound
push
outsl
xlat
mov
lods
push
cmc
imul
mull
jne
scas
jnp
jne
lcall
das
out
jne
stos
test
xchg
pop
repnz
imul
loop
fidivrl
jno
icebp
adc
flds
aaa
mov
jmp
mov
aaa
jns
xor
mov
enter
mov
mov
jg
int3
xor
dec
ja
into
pop
or
jmp
testb
jecxz
fmul
aas
rorb
fimuls
dec
inc
dec
pop
jl
push
sub
jg
in
inc
jg
es
test
sub
push
out
mov
sub
sub
outsb
dec
mov
sub
xchg
popf
pop
icebp
fdivl
mov
and
add
xor
cmp
out
divb
push
jb
jnp
or
loope
ret
fwait
mov
mov
mov
or
fistpl
inc
add
or
aaa
scas
push
dec
sub
xlat
inc
imul
adc
pop
mov
dec
push
movsl
mov
or
test
mov
adc
adc
loopne
clc
mov
pop
xchg
scas
fmull
cld
xchg
pop
xor
aaa
push
out
insb
mov
pop
ret
mov
push
mov
xor
push
out
fisttpl
int3
aas
dec
fidivl
jo
inc
loopne
in
test
divl
push
xchg
jmp
inc
jecxz
pusha
mov
sar
mov
xor
jb
out
or
ja
mov
out
jle
test
xchg
sbbb
mov
inc
pusha
push
stc
enter
or
sti
popf
jecxz
mov
push
fldt
jl
lcall
push
mov
mov
stos
push
ficompl
push
xchg
lods
push
push
in
sbb
mov
and
std
and
leave
cmc
dec
outsb
xchg
pop
roll
fldl
jns
dec
arpl
ja
dec
cmpsl
aad
ss
pop
pop
cmpsb
insb
sub
mov
iret
rcl
adc
ljmp
or
push
aas
add
xchg
sub
fsubr
stos
mov
call
push
fsubl
fsubrs
jns
movsl
xor
sbb
lret
cmp
loopne
push
out
lock
repz
mov
cmpsb
pop
scas
aaa
xchg
insl
push
into
movsb
jo
jmp
lea
mov
mov
sub
cmp
data16
call
adc
dec
sub
lock
lods
cmp
repz
inc
xchg
inc
out
jg
test
or
push
in
pop
push
cmp
inc
repnz
dec
mov
add
loope
jb
clc
add
or
inc
test
icebp
lock
addr16
sbb
sub
outsb
inc
ret
fildll
mov
fldl
adc
fimuls
cs
aaa
mov
aad
lahf
push
shufps
cmp
das
fnsave
pop
icebp
sub
test
adc
arpl
inc
roll
iret
rol
pop
test
xchg
dec
mov
xchg
aas
int
dec
pop
cli
dec
jb
cmp
add
rcl
cld
notb
dec
mov
or
pop
xorl
jecxz
sub
cmpsl
insl
mov
int3
sub
jl
pop
imull
sub
push
in
mov
fldt
stc
hlt
dec
or
or
mov
ret
xor
add
jl
cmp
ja
xlat
add
pop
sub
jns
fwait
test
mov
pop
call
pusha
out
and
push
loop
xor
pop
arpl
shrb
in
mov
mov
orl
ljmp
outsl
sbb
adc
in
jae
jae
xchg
sub
aaa
les
xchg
out
stos
test
mov
enter
push
sub
mov
add
mov
mov
jb
mov
ficompl
xlat
xor
cwtl
xchg
nop
or
inc
dec
repz
pusha
icebp
xor
mov
pop
sysret
xor
and
add
and
andb
ja
faddl
xchg
jb
jmp
lods
std
lods
ja
ss
jns
mov
mov
and
sub
fsubr
stos
out
push
mov
shr
xchg
movsb
mov
sti
mov
mov
imul
fnstsw
ja
dec
dec
call
fsubrl
into
and
mov
push
rorl
shll
jno
xchg
dec
das
push
aas
pop
daa
js
pop
test
stos
push
jmp
jmp
int
lea
jle
mov
sub
lea
leave
sub
add
int
das
xchg
clc
cmpsb
cmc
push
mov
jo
fisubrs
mov
jle
dec
jmp
sub
inc
dec
jbe
xor
jp
imul
push
adc
or
mov
jo
pushf
jbe
mov
xchg
adc
and
enter
leave
fsts
fcomps
ror
jo
pusha
xlat
mov
mov
scas
inc
inc
push
cmp
mov
or
jp
push
les
lods
in
add
lcall
aam
test
icebp
xchg
xor
lahf
rcll
jecxz
jecxz
push
mov
mov
pop
sub
ja
adc
jns
mov
pop
push
xchg
xchg
movsl
xchg
mov
and
fsubrs
shrb
mov
mov
cli
andb
inc
fcmovnu
nop
xchg
mov
dec
iret
out
icebp
pop
out
adc
and
xchg
adc
outsl
jno
in
jle
iret
pop
and
pop
push
mov
push
rorl
xchg
pushf
jp
inc
push
xchg
push
in
mov
push
xchg
scas
sahf
mov
gs
jb
mov
sub
jl
mov
mov
jg
mov
xchg
stos
push
fsubr
push
adc
sub
sub
cmpsb
mov
mov
iret
outsl
jle
into
push
adc
inc
mov
mov
inc
jge
outsb
mov
and
fnstenv
ret
lret
sub
mov
ja
inc
jp
shl
clc
mov
in
in
addr16
xchg
sub
sbb
es
mov
loope
test
jl
cli
jo
pop
dec
xor
subb
shll
sub
into
jne
add
xchg
sti
dec
ret
scas
insb
mov
call
sub
dec
lea
in
dec
insb
out
roll
jae
cmp
mov
psrlw
es
lods
adc
and
cltd
ds
cld
jbe
xchg
fldcw
bound
mov
lock
stc
pop
cmp
std
push
je
icebp
imul
push
push
cltd
or
dec
cmc
jo
lret
fnstsw
mov
and
std
jbe
fs
mov
movsb
cmp
mov
sub
add
cs
sub
adc
jl
das
push
mov
mov
mov
dec
fwait
push
mov
pusha
in
dec
lret
ror
sbb
bound
cmp
cltd
pop
and
out
cli
fwait
cmpsl
inc
shll
bound
sub
add
and
aaa
cs
pusha
push
dec
popa
shrl
xor
xchg
inc
inc
lock
mov
popa
lods
jmp
pop
or
test
cmp
stc
dec
mov
mov
cld
ja
xor
mov
jp
rclb
ds
imul
mov
jns
test
clc
dec
movsb
aam
fmul
add
sbb
fisttpll
sub
aaa
cld
push
add
cmp
iret
movl
aam
mov
and
sbb
imul
repz
mov
mov
dec
jmp
outsb
xchg
in
pop
addl
sub
dec
sub
inc
xor
arpl
pop
fwait
or
add
xchg
pop
mov
push
sub
lock
mov
loopne
lods
addb
inc
cli
out
dec
fdivrl
add
mov
nop
and
jne
jmp
jmp
lcall
jne
std
jae
out
mov
cwtl
pop
cmc
mov
mov
mov
pop
adc
cli
orl
sahf
aaa
shlb
dec
outsl
test
cltd
xchg
cmp
add
xlat
mov
jbe
fsubs
jecxz
cmp
push
scas
push
emms
out
adc
or
adc
jbe
or
xchg
adc
push
pop
cwtd
adcl
iret
popa
dec
cmp
out
mov
inc
jecxz
test
mov
cld
pop
sub
bound
push
dec
notb
rcr
out
inc
rolb
add
popf
push
cmpsb
xchg
loop
inc
xor
jge
mov
mov
pushf
dec
insl
adc
das
bound
adc
iret
add
jmp
js
sub
lods
int3
dec
movsl
add
cmp
sub
xchg
mov
or
enter
mov
into
sbb
xchg
pop
cwtl
mov
inc
push
inc
in
xchg
into
xor
shrl
xlat
mov
bound
mov
lds
gs
fildl
loope
mov
cmp
mov
cli
add
fbstp
nop
insb
mov
sahf
jo
cmc
mov
fldl
pop
pusha
imul
pop
cwtl
inc
jo
xchg
fcoml
shlb
mov
int3
xchg
repnz
sub
mov
daa
or
adc
and
sbb
je
addr16
test
mov
and
rolb
in
insl
rol
orl
fwait
sbb
scas
orl
dec
cltd
xor
push
push
in
lahf
outsl
jecxz
into
imul
cmp
jae
jbe
mov
jmp
pop
shlb
push
jmp
mov
je
mov
sub
out
dec
iret
sub
mov
mov
rolb
in
mov
sbb
xchg
pop
imul
cmp
xor
jmp
fbld
adc
fidivs
add
mov
bnd
scas
and
cmc
sarl
mov
ficoms
fistps
lret
push
dec
das
and
mov
out
fs
xchg
lcall
push
dec
inc
bound
inc
andl
xor
clc
das
imul
repz
loop
mov
loop
lock
fdivrs
fwait
test
add
and
jo
nop
sbb
xchg
ret
pushf
ss
jo
add
xor
mov
jl
ficomps
fisubrl
hlt
arpl
loop
jmp
enter
fs
cmp
pusha
roll
and
fistpll
dec
addr16
mov
mov
sub
dec
and
out
nop
xlat
icebp
mov
mov
mov
cmpl
xchg
jbe
loopne
jae
cwtl
dec
mov
or
sbb
mov
xchg
test
pop
inc
cwtl
and
mov
cwtl
cmp
mov
jne
xchg
mov
adc
cwtl
dec
xor
shlb
jno
outsb
cld
sbb
bnd
faddp
mov
daa
in
call
sub
push
ds
sbb
icebp
mov
jne
cli
fld
int3
add
cmp
lods
or
lret
mov
sarl
enter
adc
mov
or
decb
out
mov
sbb
pop
test
out
lds
fbld
nop
mov
repnz
push
ds
adc
shl
jge
mov
mov
pop
inc
push
or
les
rcll
dec
cmp
cmp
fiaddl
stc
sbb
lret
adc
xchg
repnz
fcoml
sahf
add
decl
movsl
aas
mov
fcomip
sti
jno
jmp
mov
hlt
dec
shlb
out
pushf
ret
mov
scas
sub
notl
leave
cmp
push
pop
jns
aaa
cmp
repz
outsl
inc
out
aad
in
lds
lods
fsubrs
push
xor
popf
xor
or
jl
adc
ret
int
lods
push
mov
in
jle
mov
and
ljmp
scas
addr16
jns
inc
loope
or
imul
pop
and
push
and
push
sub
and
call
xchg
mov
mov
mov
add
mov
addr16
cli
xor
push
inc
sub
aam
dec
repz
push
lahf
dec
loopne
and
jb
ljmp
ljmp
jae
pop
xor
mov
lahf
shll
std
popa
sbb
aam
or
addr16
jae
pop
mov
stc
fcomps
dec
jecxz
adc
enter
loopne
pop
outsb
add
data16
out
and
jp
scas
mov
sahf
out
cmc
icebp
cmp
call
cli
ja
sbb
jnp
daa
sbb
sbb
in
inc
sahf
out
into
stos
lret
dec
push
repnz
movsl
rcl
out
pop
jb
add
pop
ja
popa
and
in
sub
stos
sahf
inc
pop
dec
insb
into
mov
jge
ret
idiv
ljmp
lcall
pop
clc
call
insb
or
cmpsb
fcmovb
jle
dec
js
fwait
lret
mov
stc
scas
xor
lret
aam
sub
mov
shlb
push
fsubrl
mov
xor
in
xor
dec
mov
faddp
inc
je
repnz
fmuls
xchg
loope
pop
leave
and
xor
jmp
mov
std
sbb
test
incl
aaa
int3
xor
mov
clc
les
ss
pop
mov
mov
out
fmull
xorb
dec
ret
xchg
stos
cmp
inc
mov
mov
ss
sbb
pop
sub
sbb
incl
test
mov
pusha
clc
rorb
and
je
fmulp
ret
icebp
cwtl
in
cmp
test
xor
loopne
mov
rol
push
push
jo
jns
fwait
xchg
rorl
bound
jge
adc
xchg
mov
or
out
stos
push
push
xor
ljmp
in
pop
scas
mov
mov
cwtl
and
sbb
xchg
mov
push
rcr
outsl
jecxz
mov
xlat
in
xchg
lods
cmp
shlb
adc
addr16
jnp
mov
cltd
dec
cmp
ret
adc
xchg
test
sub
insb
pusha
lcall
ret
iret
lea
fcomp
jle
dec
fwait
push
or
push
add
cmp
lods
cmp
notb
cmc
call
test
aad
adc
clc
fstpt
xchg
aas
enter
stos
jmp
mov
popa
jbe
imul
jp
enter
imul
mov
inc
add
outsl
xchg
mov
repnz
inc
leave
imul
sbb
outsl
loope
sbb
push
or
add
arpl
js
jp
hlt
mov
adc
xchg
mov
test
les
jb
ja
repnz
pop
jae
or
pop
shll
adc
test
addl
scas
and
sub
pop
pop
pop
xorl
mov
outsl
mov
adc
push
ljmp
pushf
mov
mov
or
clc
jns
insb
ljmp
scas
cmp
mov
adc
pop
fwait
xchg
jo
jmp
dec
inc
iret
adc
es
xor
inc
lret
jge
stc
scas
mov
cmp
not
js
mov
push
sbb
movsb
inc
decl
in
call
push
roll
push
nop
stos
pushf
out
xor
mov
pop
clc
jo
lret
mov
cltd
dec
ds
out
cmp
jns
xchg
ljmp
je
mov
inc
mov
and
add
mov
or
mov
lret
aam
adc
hlt
cli
or
pop
sub
jae
fwait
das
push
xchg
xor
xchg
mov
jnp
mov
lock
inc
adc
xchg
popaw
lock
cmp
jae
mov
or
cmc
imul
mov
rolb
pop
dec
stc
insb
jl
pop
jg
imul
outsl
xor
push
mov
lods
sarl
inc
gs
je
dec
mov
dec
xchg
jmp
sbb
idivl
jle
mov
ss
xlat
std
push
dec
sub
xor
mov
push
loopne
std
add
mov
leave
outsl
add
repnz
jno
iret
pop
push
cmp
adc
imul
shrl
jne
clc
add
inc
addb
addl
nop
mov
xrelease
in
jmp
add
movsb
add
mov
mov
shlb
test
ret
mov
insl
pusha
in
imul
test
xchg
adc
popa
roll
adc
xchg
xlat
dec
leave
lcall
lea
insl
pop
out
xor
adc
pop
add
pop
adc
sub
outsb
dec
cmpsb
pushf
loopne
mov
jno
sbb
adc
out
iret
mov
jecxz
in
push
jg
test
cmpsb
nop
paddusb
int
or
sub
dec
test
shrl
xor
or
push
imul
loop
test
popf
pusha
cli
pop
enter
lock
lret
xchg
mov
adc
mov
adc
xchg
and
push
pushf
sub
mov
mov
mov
movsb
test
pmulhw
dec
sbb
dec
imul
mov
jle
lcall
test
pushf
int3
sub
nop
in
into
mov
or
pushf
sub
mov
push
fcom
xchg
inc
jmp
xchg
addb
sbb
inc
fdiv
xlat
ret
rclb
shrl
je
addr16
js
xlat
pop
jl
mov
pop
arpl
dec
fwait
cmpsb
daa
mov
mov
adc
pop
je
movsl
or
pop
mov
dec
cli
push
mov
int
shll
jge
mov
outsb
cmc
pushf
repz
out
jne
mov
rcrb
or
fildl
cmp
xchg
jns
and
jne
cli
or
lock
loope
iret
pop
lock
mov
jmp
bound
mov
inc
sub
or
and
pushf
stc
jle
rorb
and
and
testl
or
loop
cld
xchg
push
mov
fisttps
rol
jmp
stos
cmpsl
and
outsb
es
leave
xchg
pop
dec
mov
and
dec
lds
loope
mov
out
dec
movsl
sub
call
mov
xchg
and
incl
xchg
add
cmpsb
sbb
adc
mov
cmp
dec
pop
subl
and
xor
add
jecxz
out
clc
es
enter
scas
dec
jnp
jmp
xchg
pop
jmp
adc
jle
dec
inc
xor
rclb
mov
push
push
cmc
js
lock
adc
and
dec
fs
mov
or
mov
push
out
xchg
pop
mov
cltd
pop
jge
bound
xor
aad
ljmp
sahf
stos
int3
cs
sbb
dec
push
add
mov
sbb
jg
or
push
cmp
mov
adc
jecxz
mov
fsubrl
xor
or
mov
inc
aaa
imul
int
sub
popf
js
insl
cld
inc
in
mov
int3
pop
lock
clc
pop
mov
addl
inc
xchg
fmuls
add
fsubrl
or
jl
inc
cmp
jp
addr16
fmull
pop
mov
pusha
aas
push
or
inc
in
xor
xchg
aaa
cmc
pop
inc
xor
aad
adc
jecxz
mov
or
pusha
test
jl
jae
imul
sub
xchg
lds
clc
das
jb
sbbl
loop
pop
jns
xor
sarb
lea
call
lea
ss
cmp
mov
cmc
movb
jp
push
insl
fistpll
cld
jecxz
add
push
push
sbb
cltd
daa
push
inc
stos
addl
add
mov
ss
sbb
mov
cmp
outsb
addr16
mov
dec
pop
dec
and
mov
das
pop
in
or
sbb
xor
inc
setnp
test
inc
mov
adc
add
neg
int3
push
xchg
insl
push
mov
mov
repz
inc
imul
cwtl
aad
jo
pusha
sbb
out
mov
and
outsb
pop
add
cwtl
xchg
and
push
mov
fists
jb
fwait
sub
mov
cmp
call
test
pop
or
xchg
fistps
les
adc
lods
sti
mov
call
es
xchg
xchg
daa
fnstsw
xor
xchg
mov
arpl
ss
cmp
mov
or
mov
movsl
out
inc
js
lret
mov
add
xchg
or
mov
and
in
jbe
test
imul
cmp
mov
inc
daa
jl
cmc
push
jb
std
jne
scas
negl
test
push
ss
pop
add
xchg
test
imul
icebp
inc
sti
cmp
fiadds
adc
fs
iret
ss
enter
pop
add
or
mov
and
ja
mov
mov
xor
fcomip
adc
inc
sub
pop
xchg
dec
dec
movups
je
gs
add
inc
adcl
dec
ja
dec
imul
add
ss
add
jmp
clc
jne
sub
pop
xchg
pop
and
dec
inc
shrb
fidivs
inc
out
aaa
lfence
in
push
inc
scas
sbb
and
cmp
rclb
lock
sbb
push
pop
jbe
dec
xlat
add
in
xchg
fstl
mov
fnsave
pusha
jp
sub
sub
lods
iret
filds
pushf
cli
cli
insb
mov
ja
push
ljmp
pop
add
adc
or
ret
insl
cwtl
daa
repz
push
and
adc
lcall
sbb
add
jge
imul
fldenv
push
cmpl
xor
imul
lea
push
xor
xchg
mov
in
inc
orb
das
jg
fsubrs
pop
test
inc
pop
sti
mov
cmp
sub
in
test
ret
pop
push
jecxz
inc
pop
push
jns
out
and
scas
in
jg
sbb
pop
dec
jns
sbb
clc
out
cmp
shl
and
xor
dec
lahf
out
ja
pop
stc
or
incl
decb
and
inc
xchg
jns
out
std
in
divl
adcb
fcoms
jo
inc
jp
push
mov
aam
rolb
popf
jmp
test
out
xor
movsl
dec
or
cli
fwait
sbb
call
jae
cld
inc
or
sub
sub
cld
movsl
hlt
xor
dec
adc
dec
into
iret
dec
pop
push
shrb
jg
or
fwait
mov
negl
mov
add
or
hlt
cmp
mov
mov
adc
mov
jo
inc
icebp
ja
movsb
movsb
out
movsb
cmp
mov
or
push
cmp
int
xchg
xchg
pcmpeqd
pop
mov
stos
fildll
insl
jo
jae
sub
cmp
test
pop
cmpsb
ds
xor
out
je
pop
ds
pusha
fs
fcoms
scas
in
shll
xor
fidivrs
cld
xor
lock
mov
add
inc
pop
pop
mov
dec
jmp
fisubs
adc
xchg
mov
xchg
ss
das
test
test
and
jg
sbb
jl
rclb
in
es
jne
or
and
jle
sbb
push
in
mov
test
cltd
xchg
xorl
xor
adc
test
sbb
jns
add
fstpt
xchg
push
shll
pop
mov
and
lock
or
aas
dec
xor
mov
icebp
inc
inc
cli
stos
xor
jle
cltd
lret
cs
push
xchg
cmp
jg
jo
inc
push
jecxz
and
inc
pop
rol
inc
xor
adc
jo
push
mov
dec
lea
js
dec
mov
shl
push
or
push
or
dec
xchg
dec
lds
out
cmpsb
movl
imul
minps
mov
stos
xor
sub
sub
icebp
gs
shrl
imul
rclb
fcmovu
out
movsb
cmc
push
mov
inc
cli
mov
ljmp
mov
inc
cmpl
fcmovnb
mov
mov
ljmp
bound
ficomps
add
inc
or
inc
scas
mov
test
call
push
cmc
jnp
add
pusha
xchg
xor
adc
icebp
inc
pop
iret
out
mov
push
cli
fisubl
out
dec
xchg
cmpsl
fnstsw
inc
push
lds
clc
sbb
pop
in
cs
xlat
push
jns
or
inc
fldcw
lahf
pop
leave
loopne
mov
out
pop
inc
pop
pop
dec
test
mov
adc
xor
sbbb
sub
dec
sub
pop
sahf
mov
mov
cwtl
js
aaa
ss
adc
mov
cmp
dec
lods
movsl
pop
arpl
scas
jne
and
sbb
xor
ja
sub
stc
push
in
xor
in
push
sbb
adc
cltd
loop
mov
enter
mov
pop
xorb
dec
xor
adc
xor
mov
repz
xor
push
sub
xchg
cmp
enter
pop
push
mov
push
loop
inc
inc
push
fbld
mov
mov
jge
arpl
dec
sub
xchg
jmp
mov
mov
cld
push
mov
cltd
repz
pop
inc
xchg
lret
xlat
out
ljmp
mov
aaa
add
arpl
xchg
or
xchg
aam
imul
sub
clc
jo
mov
out
jnp
mov
add
enter
leave
fs
cli
int
xchg
scas
push
movsb
inc
sbb
data16
dec
jmp
icebp
adc
jnp
adc
jbe
jno
dec
push
cmpsb
or
dec
popf
inc
add
in
inc
ljmp
adc
mov
push
shlb
add
mov
in
push
jmp
movsb
out
rcr
imul
out
xchg
lock
jecxz
push
addr16
and
dec
loop
sahf
sbb
shrb
jp
dec
cmpsb
push
xor
lcall
fistpll
xchg
inc
cmp
adc
dec
push
dec
loope
xor
in
cmp
int
inc
mov
push
addr16
scas
mov
mov
popl
out
push
sti
push
imul
sbb
push
push
inc
inc
pop
pop
shrb
xor
fwait
dec
faddl
daa
aas
js
mov
pusha
fnstsw
popa
pop
jnp
lods
pop
mov
inc
jae
dec
sub
dec
clc
mov
ja
lcall
mov
sub
lahf
xchg
in
stc
xchg
xchg
leave
dec
aaa
add
arpl
popf
sbbl
add
inc
out
inc
push
and
stc
loop
ja
and
sub
mov
repnz
add
push
sbb
dec
add
int3
xor
pop
std
sbb
cld
sbb
hlt
pop
pusha
push
pop
hlt
pop
xchg
mov
xchg
jnp
xchg
mov
mov
int
mov
out
out
mov
xor
xchg
out
ret
test
inc
and
pop
into
cmc
adc
push
adc
or
add
fmul
xchg
movb
xor
ja
shl
test
jl
pop
push
nop
or
popf
push
int
popa
sub
test
push
jbe
push
test
inc
push
pop
ror
mov
cmp
mov
jnp
dec
xchg
adc
movsl
sahf
ds
std
ds
pop
jns
imul
mov
cmpsl
mov
and
cmpsb
aam
dec
popa
xchg
jno
pushf
sub
in
push
fucom
jge
pop
test
jae
test
sub
rcll
and
mov
cmp
leave
cmp
jno
arpl
mov
shll
xor
push
out
cmp
or
mov
mov
iret
mov
ret
adc
mov
jmp
mov
sub
sbb
push
iret
or
inc
sbb
sub
or
mull
bound
xchg
pusha
enter
aaa
imul
clc
idivb
cmc
sbb
lcall
dec
int3
jb
mov
jb
xor
push
insb
in
add
mov
sub
sahf
aam
mov
out
les
xor
mov
push
fdivrs
cli
adc
sbb
jg
cmp
addb
inc
cltd
inc
mov
test
mov
xlat
and
mov
ljmp
rcr
fstp
scas
xor
mov
es
dec
push
mov
ret
aaa
push
scas
test
test
xchg
stos
dec
jle
xchg
arpl
mov
ret
fiadds
mov
mov
outsb
pop
push
divb
roll
push
or
imul
fsubs
test
sub
xchg
jg
fistl
mov
rcll
inc
clc
je
mov
cmp
testb
fmull
jb
mov
out
cs
pop
add
repz
push
xor
lock
inc
dec
repz
sub
jmp
imull
das
xchg
mov
test
fmuls
out
lock
sub
sub
shlb
inc
push
xor
cmp
movl
dec
cs
adc
and
rcll
mov
pop
mov
mov
xchg
jp
je
pusha
jnp
inc
mov
fbstp
sahf
mov
jns
nop
inc
jmp
fisubs
cmp
sbb
inc
jp
cmp
in
enter
jle
sub
inc
idiv
fsts
dec
sub
pop
cmp
push
dec
orb
mov
into
int3
stc
jae
test
add
sub
aam
test
add
jge
in
movsb
fcmove
adc
stos
xchg
das
out
sbb
mov
in
xchg
test
or
sbb
lcall
push
bound
pushf
in
sub
inc
adc
inc
lods
lods
jg
mov
pop
jp
ljmp
dec
mov
rcl
sub
cld
inc
repz
sub
sub
pushl
std
jmp
mov
mov
add
mov
pop
lcall
push
icebp
jnp
inc
and
pop
adc
mov
and
rorb
inc
test
cmpsl
and
jo
jmp
ret
jno
sub
mov
adc
adc
fisttpl
daa
inc
mov
sub
mov
or
sbb
lods
xchg
mov
lods
cs
out
pusha
idivb
adc
fs
clc
ja
adc
outsl
add
dec
imul
xchg
jecxz
cmp
stos
add
mov
cli
add
mov
pop
xchg
out
stc
addr16
cmp
xor
in
fmull
ja
and
ret
mov
sbb
push
jb
mov
push
jge
push
movsl
or
mov
leave
mov
int
gs
ljmp
pop
lods
xor
fmull
repnz
adc
ret
enter
gs
xchg
dec
ja
and
lahf
bound
fisttpll
inc
mov
cltd
call
ret
pushf
dec
mov
or
js
mov
mov
pop
push
or
inc
test
adc
mov
mov
lret
in
jp
mov
aas
sub
rclw
sbb
mov
mov
and
jns
stos
pop
ds
fs
mov
cmp
xchg
stos
adc
and
push
clc
addb
mov
inc
cmp
pop
mov
mov
jmp
adc
gs
cmp
add
xor
sbb
call
ja
in
repz
iret
and
jae
inc
inc
mov
icebp
sbb
inc
sub
out
int
jo
sbb
mov
cmp
in
cmp
aaa
xor
mov
mov
cltd
add
iret
add
cld
fisubs
inc
xchg
mov
insl
imul
hlt
cmc
mov
scas
jg
mov
mov
mov
mov
add
std
dec
fisttpl
fistl
movsl
and
mov
push
jmp
ds
inc
out
mov
cmp
es
adc
je
es
outsl
dec
shrb
mov
iret
adc
subl
stos
dec
gs
ucomiss
rclb
sbb
aaa
es
cltd
push
and
add
loop
jp
stc
mov
dec
dec
outsl
ret
sbb
icebp
push
push
mov
mov
sbb
jo
jg
and
stc
xor
pop
xchg
push
sub
xchg
cwtl
pop
icebp
cltd
mov
div
cmp
loop
push
insl
outsl
popa
jp
enter
mov
std
movsb
shlb
dec
clc
sbb
fwait
cmp
or
xlat
lods
enter
imul
leave
cmc
jg
sbb
movsb
xor
and
push
lret
jbe
sub
jg
adc
dec
xor
push
cli
std
pop
inc
mov
push
xor
sbb
pusha
test
repnz
sarb
mov
test
push
std
mov
imul
mov
fcompl
testb
cmpsl
jo
ss
xchg
xchg
aaa
popa
data16
sbb
data16
xchg
out
sbb
mov
xchg
and
cmpsl
test
dec
test
stos
dec
xchg
mov
mov
or
xchg
dec
enter
rorl
xchg
mov
mov
out
imul
push
cmpsb
dec
push
lcall
push
mov
and
dec
add
outsb
pop
repnz
mov
outsb
add
xchg
push
movsb
data16
cs
ret
call
ret
cmp
iret
fs
sti
les
ljmp
adc
pop
push
jae
xor
push
test
push
inc
andl
mov
shll
add
in
outsl
cmp
push
pop
cs
lods
popf
mov
aad
sti
mov
sbb
ja
sub
sahf
jmp
sub
out
mov
pop
jle
lret
sub
in
aad
negb
das
inc
inc
xor
lods
cmc
jo
sub
fcmove
cmp
fimull
mov
cmp
mov
std
movsl
dec
out
aaa
dec
out
decb
xchg
sahf
mov
imul
xchg
jecxz
dec
or
inc
push
cmp
lret
lds
and
mov
xchg
std
mov
subb
mov
test
push
das
adc
cli
scas
mov
and
out
mov
addl
dec
ja
das
scas
pop
scas
insb
and
shll
outsl
xchg
dec
outsl
ljmp
dec
mov
movsb
adc
aas
add
out
mov
sbb
lods
cmp
push
sbb
leave
push
pop
stos
dec
out
mov
shll
adc
mov
inc
sbb
inc
and
inc
sbb
push
push
pop
jne
jmp
push
fdiv
dec
addr16
dec
sub
insl
xchg
ret
dec
jp
aad
nop
rcrb
dec
loope
sbb
and
pop
movsb
xor
ja
mov
inc
out
insl
dec
imul
dec
xchg
mov
pop
jp
nop
cld
xor
test
mov
ret
pop
out
cltd
and
add
mov
test
dec
jo
mov
sbb
lret
sti
sarb
in
stos
faddl
in
dec
add
arpl
and
dec
fisttps
data16
mov
test
and
cmp
in
xchg
fldl2e
push
stc
mov
add
push
mov
call
mov
cmp
jo
or
and
lea
mov
jb
adc
sbb
xorb
adc
pop
nop
stc
cmc
mov
sub
fimuls
xchg
dec
mov
sbb
cmp
inc
cmc
mov
fmull
adc
sbb
sbb
mov
icebp
cmc
and
dec
mov
jbe
into
test
push
fmull
pop
das
mov
int3
fdivl
sbb
push
test
mov
scas
jo
xor
leave
cmp
or
pop
pop
mov
jl
or
mov
xor
push
push
mov
dec
pop
hlt
jnp
int3
mov
xchg
call
mov
push
cmp
adc
add
cs
dec
stos
shrb
jg
jb
popa
shl
inc
jne
fdivrl
mov
xchg
stc
gs
imul
xchg
and
jno
pop
popf
and
shrl
pushf
insl
mov
mov
dec
sub
adc
mov
or
sbb
lret
cs
lods
dec
jl
out
push
mov
sbb
mov
lea
jecxz
xchg
lret
or
sub
leave
lcall
repnz
in
imul
push
pop
mov
mov
popa
dec
dec
mov
sbb
ja
bound
stc
pushf
jo
shrl
dec
sbb
mov
gs
dec
shl
xor
add
shl
sub
nop
fcompl
and
lret
test
shr
addr16
out
inc
dec
in
mov
scas
sbb
mov
mov
lods
sub
fisttps
cmpsl
nop
jbe
call
popa
add
popf
add
add
ljmp
out
test
sbb
gs
shl
movsl
mov
sbb
cmpsl
pop
push
inc
dec
mov
insl
insb
dec
int3
aad
mov
jmp
mov
out
xor
ljmp
pop
pop
adc
sbb
sub
test
sti
sub
rcrl
fwait
stc
cmp
push
mov
bnd
ljmp
int
sbb
mov
lcall
lds
jg
jmp
adc
mov
ficomps
push
dec
mov
in
pop
pop
stos
push
fsubl
mov
test
cs
xor
xchg
invlpg
popa
mov
in
cmpsl
mov
js
fisttpll
call
xchg
fildl
cwtl
xchg
inc
andl
lcall
sub
outsb
fnstsw
dec
add
test
stos
cli
or
shrb
push
adc
loope
mov
jle
bound
mov
pop
or
daa
lods
sar
ret
imul
fmul
cmpsb
popf
movsb
in
les
enter
cmp
hlt
fcmovbe
addb
xchg
dec
sub
icebp
popf
scas
push
cmp
lds
pop
push
cmc
inc
pop
aam
cld
scas
cmpsb
and
test
jnp
clc
xor
inc
xor
add
push
sbbb
or
adc
arpl
sbb
lea
xor
mov
jno
out
lahf
xor
loopne
popa
jecxz
addr16
and
dec
sbbl
test
pop
sub
mov
test
and
imul
pop
adc
push
arpl
or
aad
and
xor
jge
repnz
adcb
sub
fcompl
sbbb
stos
loop
cwtl
stc
add
gs
cli
xor
popa
add
movsb
mov
pop
in
iret
push
add
cmpsb
inc
subb
dec
xchg
cmp
inc
adc
outsl
rorb
xorl
into
shl
aaa
addr16
cmp
mov
cmp
push
cmp
lret
mov
test
and
outsl
fistps
add
lcall
ja
out
mov
mov
pop
fists
je
sub
or
add
fdivrs
iret
cmp
cld
aaa
daa
inc
xor
or
pop
stos
lret
and
pop
test
out
lea
lock
jbe
data16
cwtl
mov
adcl
mov
jge
sub
push
jecxz
or
in
add
push
sub
aaa
jge
add
or
lds
cmp
pusha
inc
pop
arpl
arpl
lahf
incl
pop
xchg
adc
imul
xchg
push
pushf
mov
jge
test
fisttpl
push
outsb
xchg
lods
das
jne
loopne
bound
pop
sbb
fistpl
popa
sub
push
rdmsr
jbe
lods
xorl
sub
add
push
jmp
jge
cmp
rorb
mov
rcr
or
scas
or
fwait
int
ficoml
pop
dec
gs
or
sarl
inc
inc
hlt
xor
dec
push
xor
shrl
jns
in
ja
mov
sbb
subb
add
pop
sub
data16
sub
mov
clc
xor
and
dec
ljmp
sub
andb
lcall
pop
mov
jne
enter
sbb
dec
inc
mov
data16
test
sbb
cmpb
fidivrs
xchg
adc
out
mov
sbb
imul
nop
sub
scas
or
setne
test
mov
and
jmp
dec
and
xchg
mov
int3
sbb
cmp
insl
arpl
inc
mov
jecxz
xchg
inc
mov
push
iret
jge
jg
inc
jp
nop
xor
inc
in
outsb
fnsave
jo
sbb
testl
in
in
pushf
movsb
and
sub
hlt
sub
insl
lret
sti
std
push
mov
enter
sti
popa
push
in
mov
iret
mov
int
daa
test
dec
sub
dec
push
dec
xor
arpl
lret
ret
stc
push
xchg
sbb
loope
int3
xor
mov
test
adc
test
daa
or
mov
adc
sub
dec
and
push
out
cmc
inc
xchg
stos
out
inc
out
mov
mov
pop
in
push
dec
pop
jo
mov
mov
into
sbb
adc
cltd
xlat
cmp
pop
xor
mov
mov
cmp
or
sub
push
xlat
test
sbb
adc
dec
cmpsl
btr
dec
sarl
aad
dec
cmp
add
fistl
pop
adc
jbe
out
mov
fwait
xchg
mov
lock
mov
mov
ficomps
pop
imul
push
inc
mov
leave
bound
outsl
and
lea
dec
or
or
jne
inc
dec
sbb
xchg
cvtps2pd
lcall
xor
fisubrs
fdivs
test
pop
or
sbb
shlb
bound
push
xor
dec
mov
bound
push
cmp
sub
pop
mov
shlb
lea
rcrb
pop
mov
cmc
fimull
pushf
inc
cmpsl
ja
pop
xchg
add
or
jg
pop
mov
mov
cmp
sub
ljmp
pop
xchg
loop
shlb
add
dec
xchg
or
pop
stos
test
push
lock
mov
stc
ss
fdivrl
inc
xor
cltd
inc
xor
or
hlt
jl
push
mov
mov
cmpsl
xor
pop
xchg
jnp
mov
xlat
shl
xor
jo
fnsave
dec
rcrl
test
cwtl
leave
fs
subb
pop
daa
and
daa
lds
cmp
xchg
outsb
sbb
xlat
pop
adc
xchg
xor
mov
imul
add
es
insl
ret
push
insl
test
mov
sarl
out
or
test
xor
mov
push
iret
in
fxch
test
cmp
jno
dec
xchg
cwtl
in
push
mov
repnz
fistpl
bound
push
xchg
mov
gs
sbb
lret
cmpsl
fwait
movsl
adc
xchg
adc
jne
sarb
repz
sbb
sbb
cmp
jp
sbb
inc
sub
sarl
pop
data16
cmp
fcomps
rclb
pop
or
mov
sbb
cltd
jo
lds
scas
addr16
inc
cmc
lods
adc
jg
in
xchg
inc
in
mov
xchg
pusha
pusha
add
and
lret
push
inc
filds
in
adc
jecxz
mov
jae
cmovge
xchg
ret
mov
mov
insl
stos
sub
int3
cmp
mov
pusha
int3
sti
cs
pop
daa
movsb
cmp
idivl
scas
mov
sub
adc
sub
xlat
mov
cmp
cmp
dec
xchg
inc
and
inc
andb
fs
add
popa
sub
pop
sbb
push
mov
xchg
insl
dec
xor
aam
mov
adc
inc
add
arpl
idivl
fnstsw
xchg
stc
adc
notl
push
and
scas
iret
mov
out
orl
dec
and
aam
cmp
xchg
testl
mov
mov
addb
repnz
xchg
push
pop
in
and
cmpsb
mov
cmp
mov
or
cmc
cmpsb
movsb
jp
fidivs
push
cwtd
movsb
jg
adc
rcrl
pop
sub
data16
cwtl
pop
adc
sbb
xor
push
scas
adc
fdivrl
inc
jns
rcr
sbb
das
or
push
repz
sti
scas
xchg
ror
push
add
test
repz
inc
clc
or
sbb
sbb
inc
cmp
cmc
ret
lret
clc
lcall
add
jo
jl
mov
mov
adc
push
arpl
mov
jmp
lret
bound
test
lock
subl
negb
and
sub
mov
outsb
ret
and
cs
xorb
rcrb
mov
cmpsb
xor
imul
or
sbb
fistpl
xlat
add
jne
popa
inc
mov
add
hlt
fistpll
xor
in
int
sub
test
stos
cmp
dec
ljmp
mov
xchg
jae
in
fnstsw
fistl
xchg
leave
outsl
add
sub
mov
xchg
pop
cli
push
lret
lods
pop
imul
xor
inc
xchg
and
sarb
dec
aad
inc
jne
idivb
sub
inc
mull
jp
lcall
push
cmp
push
pop
mov
out
imul
movsl
xor
ret
dec
mov
push
jmp
rcrb
xadd
dec
iret
xchg
mov
inc
call
inc
fnsave
mov
push
imul
lahf
subb
ja
out
cmp
out
in
mov
xchg
pop
stos
iret
sub
popa
mov
in
cmp
xorb
je
pop
mov
int3
xchg
ljmp
adc
mov
xchg
and
mov
ja
addr16
pop
sub
or
sub
mov
ja
xor
lods
xlat
std
pop
push
mov
and
orb
push
repnz
lock
imul
or
cmp
ret
js
gs
aas
sti
jo
mov
mov
push
mov
mov
scas
imul
jbe
xor
push
mov
pop
add
adc
push
cmp
subb
cmp
xchg
mov
test
or
popf
or
pop
repz
jae
push
or
jnp
mov
or
test
xchg
mov
cmc
sub
out
out
bound
mov
outsb
sbb
xchg
jnp
movsb
aam
cmp
out
aaa
fists
sub
jmp
nop
sbb
pushf
push
dec
mov
nop
lods
lcall
cmpsl
inc
pop
fisttpll
or
mov
ljmp
jns
push
es
jo
dec
xchg
lock
mov
xchg
flds
jb
scas
aam
ds
cld
jmp
xor
cmpl
cmp
fildl
fwait
and
pop
push
fmulp
xchg
cmp
push
sar
mov
enter
in
jb
pop
adc
xchg
pop
xchg
jmp
in
inc
pop
cwtl
dec
stos
mov
xor
push
mov
mov
aam
push
lea
push
clc
and
add
repnz
imul
ret
into
pop
shll
push
and
stos
in
movsb
push
lret
aas
shlb
xor
mov
or
adc
xchg
cmp
lods
sbb
scas
insl
in
pop
mov
inc
dec
bound
insb
mov
inc
aaa
inc
jo
push
bound
loope
dec
out
out
jmp
sbb
sahf
dec
gs
clc
sbb
out
loope
xor
adc
repnz
lahf
movsl
dec
push
mov
les
add
or
push
xor
jne
push
int3
mov
sub
sub
inc
lret
add
mov
loopne
cmc
push
cmp
clc
insb
cmp
pop
mov
and
lret
and
ljmp
mov
movsl
es
in
push
dec
sub
pop
sarl
loop
cmp
mov
xlat
xchg
sbb
popa
icebp
std
adc
sbb
or
stc
aam
xchg
sub
shlb
imul
push
or
add
icebp
and
or
data16
lret
add
cmp
mov
sbb
int
ds
loopnew
repnz
pcmpgtw
inc
pop
daa
xchg
jo
sub
lret
and
dec
in
pop
inc
inc
xchg
scas
push
sbb
sbb
jb
sbb
xchg
fsubrs
sub
jb
lret
insl
mov
mov
rclb
mov
xor
cs
cmp
mov
sarl
mov
lret
or
popa
sti
shlb
js
jmp
and
test
sub
in
xchg
push
inc
fildll
mov
push
daa
xchg
clc
mov
pop
pop
or
ficoml
jae
pushf
dec
add
xor
inc
clc
lds
mov
or
adc
adc
cmp
inc
out
mov
and
enter
sti
sbb
add
jae
rclb
mov
pop
sbb
ds
and
sbb
push
xchg
adc
cli
push
jmp
add
or
pop
lods
pop
mov
scas
int
arpl
stc
popf
addb
ds
and
out
inc
lret
and
negl
jle
jecxz
into
mov
mov
int
ss
not
mov
cmp
jp
jge
and
mov
rcrl
in
mov
sti
push
cmpsb
fucom
cmp
dec
dec
push
bound
sahf
inc
xchg
arpl
inc
jno
and
das
stc
ja
ljmp
adc
xlat
xor
in
jns
data16
fsubl
mov
sub
jmpw
pop
adc
in
call
call
outsb
out
xor
or
gs
mov
aaa
ret
notl
or
stos
pop
pop
mov
rcr
xchg
mov
les
jnp
sub
push
mov
js
sbb
cld
jge
inc
lret
sbb
cld
stc
mov
or
xor
cmpsl
ret
xchg
out
sbb
jmp
mulb
push
push
fwait
adc
mov
jbe
mov
sbbl
ficoms
jmp
sub
jg
lcall
jge
clc
inc
int
jbe
aad
rorb
pop
pop
out
int3
daa
jle
mov
roll
ss
ds
dec
fmulp
stos
test
pop
insb
jge
xchg
mov
pop
sahf
push
jle
in
sbb
xlat
dec
scas
push
scas
and
ss
xlat
and
inc
xchg
cmp
leave
in
call
mov
push
pop
mov
lods
cli
bound
pushf
mov
xor
rorl
fstpt
aad
mov
dec
cmp
jb
pop
lods
sub
xor
cmp
into
inc
xchg
push
sub
das
sti
dec
lcall
in
lods
call
inc
into
incb
inc
andl
pusha
pusha
xlat
mov
pop
scas
dec
fistpl
fs
fstl
rcll
or
jb
mov
test
and
das
cld
pop
shlb
leave
xchg
xchg
inc
cmp
es
adc
mov
scas
adc
bound
fdivrl
inc
mov
loopne
sub
out
jo
sar
pop
xchg
test
imul
sbb
pop
add
jmp
andb
mov
dec
adcb
xor
push
pop
scas
dec
pusha
jns
es
fsub
push
aaa
sbb
clc
mov
cmp
ss
aam
call
loop
mov
mov
sbbb
enter
scas
movsb
idivl
and
push
push
adc
in
ds
mov
cmp
subb
imul
pop
aam
push
lea
test
fstl
mov
clc
xchg
sub
faddp
dec
mov
push
sub
mov
xchg
mov
bound
mov
jns
fnsave
std
lret
test
mov
or
xchg
sbb
lods
in
mov
loop
ljmp
mov
test
mov
add
pop
cltd
fists
ljmp
insb
idivb
lahf
jecxz
fildl
rorb
lcall
dec
push
mov
and
out
dec
arpl
adc
and
jp
jo
insb
sbb
cltd
and
testb
and
sub
xor
shrl
sbb
shlb
loop
fistl
outsb
mov
outsl
outsb
cmp
sub
adc
dec
mul
js
in
pop
and
orb
andl
int
mov
pop
cmp
pop
dec
inc
xor
sbb
xor
xchg
xor
jne
cmp
fwait
mov
push
aad
inc
hlt
sahf
rcrl
shll
add
adcb
xchg
lahf
outsb
jle
sub
mov
inc
rclb
test
add
push
mov
addl
jne
into
mov
mov
mov
lret
and
jecxz
cmp
nop
pop
xor
dec
pop
ds
negb
cmp
test
dec
mov
adc
arpl
sbb
pushf
mov
dec
int
sbb
add
and
inc
jns
rcl
repnz
xchg
inc
adcl
adc
sahf
xchg
inc
test
mov
scas
xlat
inc
shrl
shr
jecxz
imul
inc
ja
lret
cmp
jbe
or
cmp
test
call
int3
or
jle
out
movsb
and
cld
push
out
sbb
sub
pop
nop
inc
aaa
sub
mov
pop
js
jnp
xchg
fadd
dec
movsl
stc
pushf
lcall
mov
outsb
hlt
loop
push
mov
fldl
fcmovu
sub
or
sub
cld
inc
aam
sbb
xor
ja
or
cmp
cmp
pop
xlat
insb
xchg
popa
es
rol
fmul
aad
adc
cmp
ss
xor
insl
xlat
aaa
in
fcompl
sub
adc
pop
jl
jmp
or
loopne
xchg
dec
xchg
jo
cmp
out
fcomip
inc
dec
push
cltd
shrb
div
sarl
lcall
lret
pop
lods
and
imul
inc
cmpsl
icebp
or
xchg
andb
mov
xor
jnp
pop
push
xchg
mov
mov
jae
pop
mov
addb
mov
inc
mov
ret
xor
cmc
jle
mov
mov
mov
fdivrl
inc
mov
inc
pop
in
scas
pop
clc
leave
cs
std
xor
test
mov
mov
repz
cmpsl
imul
xchg
add
xchg
add
lds
sbb
icebp
jbe
mov
dec
int
incl
aad
jb
and
loopne
ret
xchg
mov
push
xchg
jge
cld
addl
arpl
and
cmpsb
pop
jle
sbb
xchg
inc
jl
push
mov
je
stos
das
dec
adc
inc
mov
les
repnz
lock
sti
jbe
dec
lods
clc
jecxz
inc
scas
ja
sti
mov
lock
imul
push
xchg
aas
stc
jp
aas
mov
out
mov
or
and
mov
inc
sbb
in
sbb
ret
xchg
outsl
cmp
mov
and
cmp
ja
jbe
adc
xchg
push
add
mov
pushf
loop
ficoml
icebp
push
fadds
and
hlt
inc
inc
mov
jle
out
dec
xchg
cld
stc
or
aaa
jno
lcall
lcall
mov
inc
cmpsl
lods
sahf
pop
jo
jecxz
push
sbb
test
ss
outsb
mov
ja
adc
sub
inc
test
fstps
sahf
pop
pop
je
in
int
pop
int
mov
outsl
out
out
sbb
addr16
cmp
shlb
or
push
pop
push
mov
out
cld
inc
mov
pmullw
and
data16
mov
jbe
sbb
jb
adc
loop
aas
push
lcall
mov
xor
lahf
cli
and
dec
push
fstps
aaa
ja
popa
mov
mul
sbbl
pop
aam
dec
arpl
jo
inc
rol
sub
add
test
ret
xor
in
xchg
inc
bound
cli
daa
jbe
jecxz
mov
jb
dec
jge
dec
add
mov
cmp
or
nop
inc
mov
out
sub
daa
stos
icebp
or
dec
xchg
jno
out
imull
call
mov
jmp
inc
in
shl
cmpsb
shl
out
mov
jnp
bound
loop
cltd
rorl
stos
mov
shlb
ds
je
push
adc
ljmp
xchg
push
xor
js
jmp
add
xor
lock
aam
or
hlt
leave
xchg
jb
loope
call
sti
dec
in
scas
int
incb
stos
jp
push
xchg
outsb
lods
fs
icebp
push
testb
xor
mov
sub
repnz
repz
icebp
shlw
dec
out
hlt
and
cmp
or
decl
cltd
aad
pop
mov
adc
loope
loope
sub
mov
dec
cmp
testb
pop
inc
repnz
lea
or
std
push
cmpsl
inc
sub
add
loop
or
dec
stc
lds
repz
mov
lds
pop
enter
mov
adc
pop
jecxz
imul
iret
or
test
sub
fdivrp
cld
bnd
es
movsb
mov
ficompl
dec
aas
loope
fisttpl
loop
stos
mov
push
leave
stos
icebp
fsubr
or
test
inc
mov
addl
jne
movq
sub
push
dec
ljmp
movl
out
je
push
pop
je
lods
or
xor
sbb
xchg
movsl
jbe
pop
inc
sub
add
mov
pop
or
cmc
sub
add
or
or
adc
add
flds
lods
adc
nop
mov
pushl
mov
and
call
push
pusha
fs
mov
cli
xor
movsl
mov
movsb
mov
push
in
or
sub
xor
repz
sbb
pop
cltd
shrl
jns
outsl
out
and
xorl
adc
xchg
mov
add
add
push
xchg
jecxz
adc
push
fisubrl
aaa
shr
and
xchg
lret
add
cltd
dec
add
cmpsl
add
mov
cmp
add
or
or
sub
or
push
xor
into
push
mov
das
int
mov
xchg
sbbl
mov
in
sub
lock
cmp
push
loopne
jg
in
shl
xchg
cmp
add
mov
inc
lods
jae
and
pop
xchg
addr16
add
enter
fisttpll
push
sub
les
insb
mov
lock
mov
stos
xchg
nop
outsl
xchg
jge
push
aad
roll
push
jns
out
cmp
push
add
jnp
dec
inc
mov
aas
out
pop
lahf
imul
insb
adc
push
sbb
cld
cmpsl
out
pop
dec
cltd
and
lcall
jb
mov
inc
shr
fwait
inc
in
jae
mov
xchg
or
stos
pop
and
xor
mov
lods
xor
pop
and
out
repz
mov
scas
arpl
cmpsl
sbb
cs
push
push
in
nop
aaa
pop
push
xchg
cmpsl
jnp
jp
out
xchg
push
add
mov
out
push
movsb
iret
xchg
mov
sbb
rclb
xor
add
ljmp
jb
mov
stc
mov
sub
pop
loop
push
push
cmp
jns
cmp
push
movzbl
shlb
les
inc
shll
movsl
jbe
cmp
in
jl
sahf
push
sbb
adc
enter
inc
icebp
xor
pop
mov
movsl
popa
sbb
xchg
addr16
or
std
cmp
pop
adc
lcall
cmp
xlat
clc
ret
mov
jne
mov
sbb
dec
mov
ret
cs
xchg
sti
out
mov
mov
aam
mull
and
jp
iret
xchg
xlat
fisubs
sub
leave
sahf
lret
xchg
lret
fs
sti
cltd
pushf
cld
xchg
leave
jb
mov
sub
inc
adc
daa
std
add
jbe
fwait
cld
xchg
pop
gs
sbbl
insb
and
addr16
arpl
or
cmpsl
mov
aas
mov
cmpsb
adc
adcl
mov
adc
or
push
mov
inc
aad
push
fstl
jnp
or
jo
dec
jecxz
mov
test
ret
adcl
push
dec
mov
adc
jecxz
popa
clc
movsl
cmp
push
push
rcrb
dec
test
in
dec
pop
push
sub
cmp
insb
mov
cmpsl
pushf
icebp
popa
mov
les
pop
loope
add
dec
xchg
fnstsw
pop
cmp
dec
cli
pop
sbb
lock
shrb
xor
sub
jmp
sbb
movsb
xchg
popa
mov
stos
pop
jno
dec
fcmovb
jecxz
clc
aam
decl
and
jl
stc
idiv
pop
repz
inc
cmpb
sbb
cltd
lret
jmp
cld
ret
cmp
xchg
mov
outsl
push
mov
decb
xchg
cli
sub
test
mov
jbe
inc
popa
mov
sti
and
lock
pop
into
popa
ret
sbbb
imul
loope
dec
adc
sub
and
out
and
in
sbb
aam
jp
push
add
test
loopne
repz
sti
xchg
clc
jne
lret
outsl
enter
xor
xchg
jg
xchg
out
inc
xor
and
fcoms
pop
jl
mov
jge
icebp
push
cmp
jb
sbb
aad
xchg
test
push
in
mov
test
bound
pop
sbbl
movsl
and
dec
push
cmp
test
js
mov
mov
add
loopne
out
add
fildll
mov
out
shl
sahf
dec
std
jge
pusha
mov
fbstp
test
mov
mov
pop
adc
sub
xor
and
daa
cli
dec
dec
movsl
cmpsl
setbe
imulb
sbb
inc
mov
pusha
mov
xchg
xlat
xchg
das
loop
js
iret
stos
sbb
pushf
pop
cld
xchg
sub
adc
cmp
es
cs
in
outsl
mov
jp
loopne
push
fs
push
cmp
ljmp
dec
ss
out
outsb
push
lret
pop
mov
xchg
call
xor
movl
inc
arpl
fadds
insb
push
fcoml
add
out
cmc
mov
xchg
sub
xor
fstl
pop
jbe
add
sbb
icebp
jg
xor
insb
aaa
das
sbb
lds
inc
in
pop
mov
popf
stc
cmp
pop
lcall
ja,pt
or
ret
xchg
xchg
add
mov
push
popa
je
ja
pop
mov
dec
adc
int
cmp
sahf
out
mov
inc
clc
sbb
sub
and
lock
jb
rcr
bound
or
aaa
mov
sbb
cmpsl
enter
stos
pop
repnz
popf
mov
inc
movsl
cmp
mov
dec
and
bound
add
mov
jns
and
xor
sbb
rorb
bound
fisubrs
inc
cmp
push
das
imul
pop
mov
add
enter
xchg
repnz
mov
add
or
and
inc
mov
clc
xor
aas
adc
lahf
sub
lahf
inc
lock
mov
vfrczss
sub
fldenv
sbb
call
mov
push
iret
into
mov
sahf
adc
sbb
jne
ret
lahf
enter
cmp
push
xchg
ret
pusha
imul
shlb
jnp
jl
testb
cmp
lahf
adc
sbb
and
jg
jae
push
jae
movsl
xor
inc
test
cs
in
daa
in
repz
lret
ss
js
sti
dec
int
cli
inc
lds
push
xor
add
push
sahf
outsl
ffree
mov
add
arpl
icebp
leave
rcr
xchg
inc
xor
add
xchg
cltd
pop
pop
sbbb
adc
adc
in
adc
and
sbb
jae
icebp
sub
ds
clc
andl
xchg
mov
out
or
jmp
or
out
sti
insb
cmpsl
or
idivl
cmp
cmp
mov
outsb
pop
cmpsb
and
push
push
and
push
lret
xor
outsl
adc
inc
pop
lods
je
aam
popa
pop
fcompl
test
test
cvtpi2ps
adc
je
in
xor
jbe
addr16
pop
mov
fisttps
push
sbb
jo
mov
sahf
cmc
adc
inc
repnz
orl
repnz
outsl
outsl
mov
fiadds
fildll
push
popa
jle
scas
je
sub
inc
inc
popa
or
sbb
pop
sahf
add
outsl
mov
lahf
dec
scas
add
cltd
nop
xchg
js
push
pop
mov
aas
pushf
adc
push
lret
lds
jno
jecxz
sarl
dec
fsubl
loop
mov
push
jns
add
push
cld
adc
mov
test
cmp
jae
out
and
repnz
mov
pop
fdivrl
sti
mov
mov
das
pop
stos
and
mov
fwait
jae
mov
ja
cmpsl
jnp
pop
jno
mov
adcb
loopne
rcl
imul
orl
xchg
test
pop
or
push
xchg
inc
cmp
jg
xchg
out
push
jmp
subl
outsb
mov
adc
ss
jnp
adc
mov
jle
push
shll
dec
and
mov
inc
fs
xor
xchg
adcl
push
cwtl
repnz
inc
or
and
stos
adc
out
dec
cmp
shll
push
inc
add
push
and
rorb
loopne
pop
sub
pop
mov
sub
inc
pop
mov
adc
or
sub
test
dec
popf
jecxz
outsl
cmpb
out
popa
xlat
loopne
or
lcall
aas
inc
outsb
xchg
mov
sbb
cmp
enter
push
mov
mov
fwait
push
xchg
dec
jp
jne
mov
dec
cmpsb
sbb
lahf
inc
shl
outsl
or
sub
andl
sti
dec
pop
and
adc
cmp
inc
stos
add
cmc
mov
stos
cmpsl
mov
add
cmp
jns
pushf
pop
mov
popf
mov
pop
repz
rcl
test
inc
and
leave
adc
fs
mov
call
shrb
mov
pop
pop
lock
fisttpll
int
cmp
hlt
mov
jne
mov
ret
leave
adc
imul
ret
inc
jbe
insb
loop
test
push
cmp
dec
fdivrl
int3
sub
sbb
push
mov
xor
xor
sahf
jmp
mov
cmp
clc
adc
dec
ds
cmpsl
loopne
loopne
lahf
push
inc
stos
mov
icebp
jmp
push
ret
xlat
jne
nop
mov
push
scas
insb
lea
adc
xchg
mov
cmpb
mov
xchg
aad
int3
mov
sub
arpl
inc
bound
pusha
lret
push
enter
scas
fs
adc
inc
sub
cmp
sti
gs
in
addr16
rcr
pop
test
push
adc
fwait
pop
clc
iret
xor
xor
inc
enter
out
sbb
push
push
test
dec
test
sub
fidivl
out
add
jnp
shll
loopne
stos
test
add
insb
mov
mov
adc
repz
fdivrl
mov
xlat
mov
mov
mov
in
jge
ret
mov
imul
sub
push
pop
mov
inc
and
ret
pop
mov
stos
pusha
mov
outsb
movsb
rsm
mov
mov
dec
shl
cmp
lahf
jne
cmp
add
xchg
xchg
inc
jge
mov
test
pushf
mov
scas
lret
enter
add
inc
mov
cmp
dec
test
xorl
cs
mov
fldcw
sub
outsb
cli
xor
xchg
lahf
test
sbb
jb
and
cmpsl
fisubrl
loop
mov
jle
xor
ljmp
add
ja
or
xor
sbb
inc
dec
dec
ror
pusha
add
push
add
jns
mov
lcall
xorl
imul
cmc
sar
and
adcl
jmp
data16
insl
loopne
cmp
mov
sub
xchg
fdivs
mov
pop
mov
pop
jle
pop
les
mov
cmp
jbe
outsb
loopne
lret
dec
inc
inc
cmp
inc
lret
pushf
adc
pushf
dec
out
stos
loop
sub
mov
movsl
ss
mov
lods
pop
sub
aaa
mov
ja
gs
mov
adc
loop
xchg
pop
sti
xor
in
ror
lret
pop
or
iret
test
fsubl
mov
mov
mov
mov
xor
pop
xchg
enter
xchg
and
adc
insb
test
inc
fs
mov
xchg
outsl
psubsb
loopne
lock
rolb
rol
jg
xor
xor
push
mov
js
and
xchg
pop
rclb
in
orl
clc
ds
int3
dec
lret
loopne
xchg
test
in
jle
in
pop
mov
inc
je
push
addr16
stos
pop
rcll
jo
es
mov
enter
adc
clc
push
stos
out
dec
scas
into
popf
loop
int
cwtl
cmpsl
mov
xor
add
loopne
push
mov
jecxz
xchg
out
addr16
cmp
push
adc
test
in
mov
in
jb
ret
mov
xor
enter
mov
adc
test
pushf
insb
and
aam
insb
xor
jecxz
call
es
popa
add
mov
mov
mov
pushf
cld
mov
pop
jle
cmp
xchg
aad
sbb
iret
push
mov
fbstp
mov
sub
stos
add
xchg
add
test
mov
sbb
dec
mov
sbb
jne
dec
mov
cs
hlt
stos
mov
mov
add
jbe
pop
fildl
repz
mov
cli
mov
out
mov
insb
aaa
ljmp
adc
pop
mov
adc
decb
leave
dec
and
inc
fcompl
aad
pop
leave
cmpsb
icebp
jg
and
sbb
imul
inc
and
xchg
inc
xor
add
imul
in
pop
inc
jp
push
xchg
mov
imul
inc
fwait
cmp
mov
out
push
xchg
or
inc
vmread
and
nop
stos
add
into
xchg
and
lock
stos
ss
bound
dec
xchg
xor
and
adc
pop
mov
loope
fldl2e
mov
add
js
lock
mov
clc
cmp
sbbl
cli
mov
out
jno
loope
sbb
pop
pavgb
lods
sahf
loop
push
test
inc
jg
jle
js
scas
mov
push
sbb
dec
or
xor
dec
cmpsb
shl
or
lea
test
dec
in
inc
lds
in
out
mov
dec
gs
fadds
pusha
sub
pop
push
xor
or
in
insl
jecxz
push
adc
mov
nop
fisubs
scas
and
inc
outsl
scas
jns
xor
jecxz
push
pop
fs
xchg
inc
pop
xchg
push
stos
into
cmp
ret
mov
xchg
jbe
xchg
test
stos
inc
in
aam
dec
inc
mov
xchg
popf
push
repz
xor
mov
rorl
adc
xchg
sub
pop
and
call
and
jecxz
in
dec
mov
pop
adc
xchg
jmp
lahf
outsl
or
xchg
cmp
fdivrl
ret
inc
lahf
aas
in
repz
bound
mov
mov
xorl
xchg
decb
ret
add
scas
iret
sti
add
int
xchg
mov
repz
sub
jbe
mov
das
add
enter
xor
push
fbstp
imul
mov
adc
les
dec
ret
in
xor
insb
aam
in
pop
rorb
lahf
jnp
jno
into
sbb
sarl
push
adc
push
sarb
lods
icebp
pop
mov
xchg
addl
adc
insb
mov
add
adc
in
and
aam
push
mov
adc
adc
js
dec
lahf
hlt
pop
mov
sbb
mov
outsl
push
int
scas
orb
test
cwtl
cld
lret
dec
outsl
inc
enter
mov
cmpsl
add
xor
push
test
jle
imul
rcrb
ret
inc
cwtl
iret
fisubrl
jmp
out
adc
lds
add
adc
pop
iret
push
pop
lret
clc
hlt
mov
jnp
mov
cmc
jno
movl
addb
ljmp
out
sbb
in
push
sbb
push
test
dec
pop
xchg
jnp
mov
push
sub
je
fcompl
and
dec
mov
aad
inc
xor
pop
test
cmp
inc
roll
add
mov
or
sub
mov
test
mov
lock
xchg
xorl
pusha
call
std
adc
pop
mov
rcrb
popa
push
add
jp
pop
sub
inc
mov
les
jmp
pop
int
add
push
repnz
xor
out
cmp
jmp
pushf
fwait
mov
mov
pop
jo
test
xor
dec
push
in
xchg
jo
sbb
cmp
in
cmp
movb
movsb
mov
inc
jge
mov
addr16
cmp
shr
pusha
dec
mov
test
shr
cld
cmp
xchg
cmp
add
xor
mov
movsb
fimull
add
ds
ja
imul
into
sbb
aam
mov
notl
daa
jp
jge
in
fnsave
iret
enter
aaa
sbbl
sbb
fcomi
bound
xchg
push
push
mov
adc
xor
shll
dec
hlt
jno
jg
icebp
sub
xchg
aad
jbe
and
out
jle
cmp
stos
and
pop
dec
inc
test
dec
xchg
mov
dec
sahf
push
jns
ret
es
insl
loopne
jl
addr16
mov
inc
lahf
jo
mov
and
lcall
outsb
aam
add
sarb
or
add
xchg
popf
xor
pop
in
xor
mov
int3
cld
out
add
cwtl
movsl
mov
ja
lods
sbb
xchg
popf
mov
pop
sbbl
mov
cmc
and
addl
pushf
fnstsw
xchg
imul
push
add
imul
fs
sbb
add
xlat
movsl
push
fs
dec
jns
mov
movsb
jge
adc
xchg
mov
adc
xchg
adc
inc
jns
sub
dec
stos
add
mov
out
add
mov
into
sbb
inc
mov
adc
call
test
xchg
sub
dec
push
and
mov
and
dec
mov
test
cltd
incl
push
ss
xchg
mov
mov
lret
fdiv
inc
cltd
adc
jle
or
lcall
cmpsb
xchg
mov
ret
loope
daa
rcr
dec
ret
mov
fisttps
imul
stc
ljmp
scas
adc
xchg
mov
pop
decb
xchg
dec
pusha
pop
in
adc
aad
int
mov
nop
addr16
sbb
bound
dec
insb
mov
mov
mov
inc
insl
pop
out
and
insb
out
movsb
pop
sub
daa
adc
clc
addl
shl
or
rcl
jno
lret
testb
ljmp
repz
outsb
iret
lcall
sbb
loopne
xchg
xchg
sbb
andl
push
cmp
mov
add
mov
inc
adc
mov
and
nop
sbb
popl
jbe
sbb
push
mov
inc
sbb
xor
push
lods
adc
popa
and
into
int
ja
in
push
in
dec
lds
out
pushf
adc
popa
or
pop
jl
jecxz
inc
ds
in
push
sahf
pop
dec
dec
popa
in
dec
out
or
xor
adc
lea
je
fwait
mov
xor
mov
lods
xor
mov
inc
dec
imul
out
pop
dec
xor
out
fnstcw
mov
jmp
push
mov
cmp
ss
insl
ja
sti
scas
stos
cmp
aas
lea
divl
stos
dec
int
xor
push
aam
pop
pop
and
sbb
add
inc
cmpsl
dec
xor
jae
push
add
push
enter
mov
movsb
mov
and
xor
pop
cmp
mov
mov
add
jno
sti
add
cmp
scas
dec
mov
sbb
add
push
sbb
dec
jmp
dec
jne
pop
je
pushf
xor
mov
popa
std
imull
icebp
test
pop
mov
in
dec
or
or
jge
jmp
es
sub
or
or
cmp
adc
jbe
int
outsb
int3
loopne
sbb
outsl
aas
mov
clc
aas
cld
out
shrl
lcall
mov
add
mov
sub
jnp
cwtl
negl
dec
pop
and
jae
sub
mov
mov
lods
sub
das
mov
lods
sbb
pop
add
and
jnp
fbstp
inc
pop
loope
sub
std
push
imul
cmp
loope
push
sub
outsl
emms
pop
dec
add
sbbl
out
mov
dec
lahf
idiv
xchg
xor
cmp
test
in
enter
jmp
mov
mov
xchg
test
sar
into
push
sbb
icebp
and
inc
add
and
stos
cld
pop
daa
mov
lahf
sti
jle
adc
push
mov
aas
mov
daa
mov
leave
dec
aad
xchg
lock
ja
pop
aaa
mov
outsb
cltd
ss
mov
or
addr16
push
aad
xchg
scas
push
jnp
pop
push
and
clc
es
daa
push
mov
adc
jmp
int
jae
scas
xor
mov
pop
sahf
insb
loope
in
ss
mov
xor
loope
sub
push
cmp
pop
inc
cmpsb
xor
insl
call
jae
jmp
mov
cmc
cmc
inc
loopne
mov
pop
test
jno
cld
out
test
cmpsl
int3
mov
and
cli
popf
xchg
cwtl
imul
dec
aam
jg
pusha
inc
outsl
pop
adc
jno
mov
inc
pop
int3
mov
jmp
cmp
ret
dec
imul
nop
std
fadds
lahf
mov
sub
sub
idivb
push
loopne
dec
fwait
xor
cmpl
xor
es
mov
sub
sbb
or
lods
adc
filds
fs
rol
insl
scas
sub
popf
inc
inc
nop
jl
adc
gs
jg
ret
lret
xchg
and
xlat
aam
into
loopne
pop
jmp
rorl
das
jbe
idiv
stc
imul
xlat
mov
ss
inc
lods
cmpsb
stc
cli
xor
mov
pop
pusha
sub
xor
dec
in
sbb
cmp
in
inc
sbb
or
and
dec
adc
xchg
pushf
in
fildll
push
jns
sbb
mov
mov
push
adc
fisttpl
repnz
push
pushf
mov
lahf
out
push
pop
call
out
and
push
xor
add
cmp
lahf
fildl
mov
mov
add
fnstcw
roll
mov
imul
sahf
push
les
mov
jbe
fnstsw
jno
dec
fiaddl
call
push
dec
push
pusha
jnp
popf
les
mov
pusha
adc
dec
lea
scas
pop
lahf
push
js
mov
jmp
mov
xchg
mov
mov
je
sbb
dec
loope
sbb
push
fnsave
sahf
and
insl
adc
or
xchg
out
leave
insb
or
pusha
sbb
mov
out
xor
mov
ret
ret
mov
pop
cld
stc
repnz
pop
mov
je,pn
or
xor
mov
push
stos
fisubrl
or
iret
pop
and
push
lret
dec
popa
push
in
fisubrl
jmp
in
call
scas
add
jg
dec
nop
mov
or
rol
sahf
sahf
add
inc
test
leave
popf
movsb
ret
xor
imul
inc
in
aaa
aaa
push
push
cli
sbb
xchg
aad
outsb
iret
popf
mov
add
dec
push
push
push
mov
cmp
xchg
xchg
and
and
cmpsb
add
test
pop
inc
pop
adc
mov
js
popf
mov
and
loopne
xchg
jne
and
aam
pop
js
xchg
les
inc
scas
or
stos
adc
and
mov
insl
mov
mov
jns
xor
inc
jnp
jnp
jae
aam
arpl
push
imul
out
mov
imul
insl
imul
sbb
sbb
xchg
push
pop
cmp
aas
lcall
cli
mov
push
mov
js
rcll
lret
rcr
ljmp
aas
pop
int3
divl
push
push
pop
and
ss
xor
dec
jo
xor
lahf
nop
andps
jnp
aad
xor
int
add
jmp
pusha
mov
push
dec
push
out
sbb
pop
orb
repnz
push
or
xchg
gs
into
cmc
mov
dec
xchg
fdiv
fs
add
push
dec
xchg
cmp
xor
adc
mov
cmp
or
mov
lcall
aas
and
jge
enter
in
mov
sub
rcrl
pop
insl
and
js
in
test
mov
cld
push
imul
jmp
enter
testb
mov
sub
push
xchg
mov
stos
loopne
push
adc
adc
insb
cmp
xor
add
xchg
std
sbb
cmp
movsl
jns
mov
xor
out
stos
sbb
pop
push
inc
jge
or
sbb
xchg
repnz
fsqrt
jae
xor
jne
fdivrl
xor
jg
shl
fcmovnu
rcrl
fwait
adc
pushf
add
mov
jmp
lock
arpl
scas
adc
push
mov
jnp
nop
aaa
enter
jnp
mov
jo
ret
mov
clc
int3
in
adc
jle
sbb
repnz
popa
pop
cmp
add
mov
dec
cltd
or
xor
xor
iret
test
repz
add
jmp
out
pop
mov
push
cli
mov
mov
jb
insb
cmc
stos
mov
inc
dec
lret
xor
filds
psubd
xchg
jge
sub
bound
test
stos
jmp
pop
ror
int
movsl
dec
in
fsts
xchg
pusha
xor
out
adc
mov
mov
ret
sahf
jmp
scas
movsb
rolb
mov
cwtl
or
cmp
pop
adc
into
add
add
mov
insb
cmpsl
pop
cmp
inc
mov
lock
fsubrs
mov
dec
xchg
adc
scas
jae
mov
mov
jl
out
xchg
outsb
in
popa
jge
fbstp
pop
scas
mov
fadd
bound
movsl
sub
sbb
adc
mov
lea
orl
xchg
out
push
cmp
cmp
adc
cmpsl
pop
out
mov
loope
pop
cld
dec
lods
adc
push
xor
into
aam
xor
xor
rcl
sub
mov
mov
out
and
icebp
jae
pop
pop
sbb
mov
mov
push
push
or
ds
mov
or
adc
imul
popa
jl
jnp
cmp
repnz
pop
or
decl
xchg
ret
cmpsb
and
or
sti
mov
and
and
int
imul
dec
ds
lea
ret
ror
jl
int3
cs
out
shll
cmpsl
cmpsl
stc
jbe
je
sbb
ficoms
xlat
mov
scas
addr16
iret
inc
add
sbb
pop
push
xchg
cltd
ds
push
push
into
fimull
mov
cmpsb
imul
sti
aad
ljmp
jb
sbb
pop
ret
decb
inc
movsb
xchg
cmpsb
shlb
popf
into
enter
scas
sub
ss
push
or
sbb
je
sub
xor
sub
dec
sub
inc
sub
mov
sbb
popf
fwait
orb
les
cmp
push
dec
push
push
push
movsl
mov
inc
test
lret
cmc
aas
xchg
push
ds
ja
out
popa
sub
les
and
jmp
lea
jp
cwtl
fdivl
sbb
iret
adc
sub
scas
xor
inc
jae
mov
test
iret
mov
ret
xchg
pop
cmp
pop
mov
leave
in
inc
cmpsb
adc
test
inc
lret
xlat
in
das
inc
sarb
cs
scas
push
gs
sbb
je
jle
int3
jecxz
and
orb
std
sbb
push
test
sarb
mov
mov
mov
or
sti
iret
mov
xlat
negb
mov
cmpl
push
push
ds
mov
xor
mov
pop
and
pop
and
cmp
sbb
sub
stc
inc
scas
popf
jl
ja
inc
dec
shlb
push
push
lea
or
jo
mov
mov
mov
or
sub
cs
and
cwtl
mov
ror
stos
mov
xchg
xchg
nop
or
sar
mov
stos
flds
int
aam
loopne
or
jo
add
xor
leave
cltd
sub
movsb
sub
and
xchg
pop
push
xorl
out
jmp
out
xor
or
fnstenv
es
nop
cmc
movsl
pop
fwait
das
in
lock
stos
out
xlat
dec
outsb
push
push
leave
sub
or
les
mov
dec
push
push
xchg
int3
into
jl
push
mov
test
push
cmpsl
pushl
or
xchg
adc
mov
ja
mov
xor
inc
xchg
jecxz
cli
enter
cmp
ja
std
mov
test
sub
aas
cs
andb
out
pop
ljmp
ret
pop
popa
out
stos
xorb
jne
inc
ficoms
cmp
and
sahf
and
push
lret
aas
sub
sub
pushf
lahf
pop
or
push
ss
insb
ljmp
arpl
sbb
cmp
mov
jnp
and
cmc
pushf
pop
hlt
inc
jp
rcrb
addr16
pushf
push
cmp
fbld
sub
fisttpll
jae
mov
xchg
hlt
frstor
xor
adc
rclb
jo
xchg
mov
adc
push
scas
add
inc
cmp
movsl
adc
mov
cld
sahf
scas
out
jb
push
mov
push
dec
loope
aam
sub
xchg
out
mov
push
push
loop
mov
mov
pop
mov
fidivrs
and
arpl
stc
lret
repnz
dec
adc
mov
cld
es
pop
movsl
mov
out
adc
mov
shl
mov
mov
lock
push
jl
ret
lret
sti
mov
adc
inc
cmc
dec
dec
cwtl
or
pop
inc
andl
dec
dec
js
bound
add
ss
popf
movsb
int
js
push
in
fdivrs
mov
fsubr
push
add
icebp
xlat
mov
jge
test
cli
scas
lahf
adcl
ja
dec
pop
or
mov
je
jle
mov
xor
int
mov
outsl
popf
pop
sarb
or
out
xchg
rep
xchg
clc
jns
ljmp
xor
and
jnp
insl
push
gs
imul
mov
shll
test
adc
dec
in
fs
in
js
testb
sbb
lods
sti
jbe
sub
mov
sub
mov
out
inc
lret
out
push
jbe
mov
push
pushf
leave
add
std
sti
movsb
shl
cmpsb
inc
add
push
push
and
sub
js
shll
xchg
or
push
in
enter
sti
xchg
xor
fnstenv
xlat
cmp
data16
aas
imul
pop
cmp
adc
xchg
xor
jp
sbb
es
fmull
mov
fsubl
stos
lock
pushf
jb
jmp
sbb
sub
mov
and
xor
mov
sbb
adc
ss
sbb
or
out
ljmp
or
lahf
xor
mov
pusha
push
dec
xlat
pop
insl
in
int3
push
lea
mov
cmp
and
xor
push
mov
adc
insl
mov
pop
leave
inc
push
imul
iret
jo
jns
xchg
push
addr16
test
push
jge
jo
jae
xor
lret
inc
xchg
loope
inc
xor
out
inc
out
dec
mov
stc
push
repz
mov
push
out
xor
pop
and
fidivrl
sub
jl
rorl
pop
sub
push
and
cmpsb
ljmp
test
cmpsl
xor
lret
dec
fldcw
es
jns
xchg
pop
push
rdmsr
rorb
sub
xchg
rclb
cmc
adc
mov
sub
std
daa
inc
or
or
rorl
aad
cld
clc
aas
adc
enter
pop
popa
mov
daa
mov
scas
add
in
sub
cmp
nop
pop
adc
or
aas
xor
inc
xor
fsubl
cmpsb
out
lea
adc
stc
mov
mov
inc
sbb
aad
pop
fwait
test
in
rclb
stc
cmp
adc
pop
adc
aaa
out
cld
in
push
xchg
and
das
movsb
aam
js
outsb
pop
jbe
cmp
out
push
adc
or
pop
sub
xchg
mov
stc
or
fstpt
pop
jle
or
insb
and
pushf
fucomi
movsl
mov
xor
pop
movsb
arpl
adc
push
test
jp
sbb
in
or
add
pop
or
in
push
cld
push
mov
sub
add
imul
mov
jecxz
or
xor
in
xchg
outsl
sub
iret
pop
or
push
mov
imul
push
inc
das
mov
popa
xchg
std
xor
fcompl
out
daa
or
and
cmp
add
inc
pop
das
mov
rorl
out
add
fucomp
jmp
xor
ficompl
cs
adc
pop
divl
xchg
adc
ja
mov
outsb
inc
jo
lret
mov
movsb
mov
sub
jge
xchg
outsl
and
push
fnstenv
xchg
jb
add
out
jno
mov
loope
hlt
xchg
pop
pop
mov
int
aas
and
in
call
mov
roll
mov
mov
into
pop
push
stos
add
push
jp
or
jo
push
xchg
imul
clc
dec
inc
sti
cmc
jns
jecxz
bound
in
jo
lock
div
rorb
fadds
cmpsb
mov
cmp
mov
addb
jmp
out
mov
js
mov
dec
cld
repnz
sub
jmp
pop
nop
mov
add
icebp
into
mov
xchg
mov
shrb
xor
mov
jle
in
xchg
cmp
jbe
adc
fnsave
rcl
imul
or
mov
push
lcall
popf
lcall
add
push
mov
dec
dec
mov
pop
lret
fldcw
jnp
mov
push
clc
sub
lods
sbb
xor
and
lcall
mov
jbe
iret
adc
push
sub
aad
inc
mov
or
mov
and
mov
lcall
xchg
test
adc
or
loopne
in
mov
jnp
sbb
xor
sbb
xor
pop
div
sbb
int3
mov
cmp
jo
and
mov
imul
repnz
sub
outsb
mov
inc
lcall
stc
add
xchg
cld
loope
add
movsb
and
jl
mov
dec
push
aad
sbb
adcb
pop
xchg
xchg
roll
daa
call
mov
mov
push
sub
dec
movsb
jp
mov
bound
adc
xchg
xor
inc
push
rorb
imul
inc
sbb
repz
addr16
mov
jp
mov
lds
push
fisubrl
pop
repnz
out
cld
mov
ljmp
mov
mov
push
lcall
or
mov
sarb
and
pop
fildl
int
dec
push
out
inc
push
mov
movsb
clc
leave
test
pop
sbb
cmpsb
or
iret
cli
lret
jp
pop
mov
mov
aaa
xorl
pusha
push
pop
xlat
mov
int
jp
movsl
push
call
adc
test
xor
fiaddl
test
lret
jns
sbb
jmp
hlt
test
pop
ja
out
arpl
insl
pushf
dec
ja
push
or
jmp
jg
add
pop
mov
adc
icebp
xchg
mov
adc
push
cmc
mov
stos
into
sahf
mov
lret
filds
cld
dec
mov
js
and
mov
inc
mov
xchg
sti
int3
cmp
shll
push
cmp
int3
xchg
loopne
jp
and
inc
ja
fisubs
inc
in
push
jno
jbe
out
and
fs
cld
outsb
and
mov
jns
cmpl
and
mov
stos
fisubl
out
mov
sahf
or
cmpsb
sbb
xchg
sti
jl
mov
pop
je
mov
je
push
sahf
and
pushf
mov
push
or
xlat
mov
pop
mov
sub
or
pop
adc
in
int3
inc
enter
mov
or
lods
gs
ret
cmpsb
mov
ja
arpl
int
outsb
popa
mov
test
dec
nop
sub
jo
pop
lcall
adc
stos
push
sbb
mov
adc
adc
loop
cmp
lock
adcl
int
cwtl
sti
fs
mov
inc
adc
dec
test
ret
ret
fwait
mov
xchg
or
lret
and
out
cmp
jmp
in
jbe
and
cltd
les
sub
mov
cmpsb
push
jae
push
pop
inc
ds
out
mov
inc
jge
adc
pop
or
cld
sbbb
out
sub
xor
dec
pop
ret
lret
xchg
jg
mov
test
cmp
inc
mov
dec
leave
call
jbe
dec
or
test
xchg
dec
push
jl
or
ficompl
sub
push
in
add
and
xchg
pop
ret
leave
repz
xchg
outsl
mov
ret
and
js
daa
lods
icebp
xchg
lret
mov
push
pop
fwait
sbb
xchg
jmp
adc
stos
jo
or
notb
xchg
iret
out
cmpsb
popa
icebp
jbe
les
test
ret
mov
stos
fwait
popa
js
and
jle
inc
cmp
cmc
lods
clc
or
sub
mov
mov
mov
pop
cmc
mov
pop
adc
test
jg
mov
ljmp
clc
mov
mov
clc
dec
xor
push
mov
in
xlat
ficoms
xlat
inc
xchg
scas
pop
mov
mov
inc
scas
adc
mov
or
pusha
jb
das
pop
les
lea
in
pop
inc
mov
shrl
sarb
pusha
xlat
loop
gs
sbb
sub
jmp
push
adc
mov
lock
pop
stos
xor
pop
movl
push
push
push
inc
outsb
or
pop
test
mov
ja
ret
xchg
inc
mov
les
push
imull
sbb
aam
fisubrs
mov
jl
test
loope
xor
fiaddl
sbb
inc
add
dec
sbbb
add
add
pop
sbb
jmp
aas
add
jno
and
hlt
cmpl
sti
in
icebp
jp
rorl
loope
cld
ss
mov
mov
lret
fdiv
xlat
aam
dec
movsl
gs
lcall
adc
dec
repz
cs
std
dec
push
std
push
fimull
daa
aam
mov
dec
call
lahf
add
jne
lcall
bound
push
stc
subb
push
insl
pop
ds
outsb
shll
mov
push
jmp
push
dec
inc
imul
sub
stos
dec
in
push
mov
mov
iret
fwait
push
inc
mov
mov
inc
mov
mov
sub
pop
daa
mov
out
mov
xor
xor
jo
inc
sub
mov
jbe
aad
mov
xchg
idivl
mov
jmp
and
jmp
push
mov
loopne
and
cmp
pop
push
mov
jge
sub
push
clc
mov
shll
jb
add
scas
or
nop
scas
sub
shll
scas
or
mov
gs
dec
jnp
or
test
shlb
loopne
imul
push
cld
popa
pushf
test
insb
ss
pop
das
imul
insl
mov
jbe
mov
mov
mov
sbb
insb
or
jmp
push
scas
adc
and
sub
lret
mov
mov
mov
std
or
lods
sbb
mov
sbb
pop
or
xor
imul
ds
push
js
push
dec
pop
jmp
sub
mov
sbbb
lods
and
xor
mov
repnz
inc
mov
xchg
in
fisubrs
sub
push
testl
push
and
inc
pop
iret
out
push
movl
dec
les
mov
lret
ljmp
test
adcb
inc
mov
ret
test
add
int
rorb
popa
pop
adc
das
xor
fmuls
dec
dec
mov
pop
cmpsl
or
mov
test
lods
push
fs
mov
push
cmp
fxch
mov
adc
xchg
mov
dec
adc
fsubrs
mov
ret
outsl
or
popa
daa
mov
xchg
lcall
lret
jo
int3
inc
xor
dec
fists
pop
xchg
sub
fcompl
push
pusha
daa
push
mov
add
cmpsl
pop
jmp
scas
push
push
popa
mov
mov
in
pushf
test
inc
jg
push
fdivrs
dec
and
xor
es
lret
or
fisttpll
dec
cmp
adc
xor
cmp
lea
cmpsl
cs
lods
enter
xchg
js
xchg
stos
push
xor
cwtl
lahf
xchg
xor
fwait
cmp
jmp
icebp
sbb
fcmove
fs
sub
or
sbb
xchg
adcb
cs
rol
les
pop
xor
dec
adc
jne
and
jp
dec
sbb
lcall
lods
inc
push
aam
pop
cltd
imul
push
mov
adc
cmpsb
fisubs
ror
bound
and
icebp
sti
nop
jmp
repz
call
mov
push
sbb
stos
jg
sbb
cmp
stc
mov
cld
lds
jbe
je
out
pop
stc
add
aad
fldl
mov
mov
aas
shrb
in
mov
push
cmc
xchg
inc
xchg
rorb
push
movsb
push
arpl
jb
fnop
pusha
hlt
pop
cli
jns
xlat
xchg
fs
pop
gs
and
rorb
or
fdivrl
xchg
ss
ds
dec
sbb
push
mov
test
mov
mov
addr16
jnp
mov
mov
jbe
mov
jb
ffreep
mov
cmp
or
aam
jo
jle
clc
push
lret
mov
dec
add
mov
into
dec
cmp
xor
scas
sarl
mov
call
shrb
cs
mov
inc
push
lds
pop
xchg
dec
cmc
and
lret
lds
fcmovnu
mov
es
sahf
push
hlt
das
pop
push
shrb
mov
lock
insl
fcomp
insl
push
or
dec
xchg
and
mov
cmp
fwait
jne
leave
nop
leave
add
push
lea
xor
sbbl
jle
pop
repnz
das
stos
jb
cmp
or
and
arpl
mov
sub
add
orl
scas
jle
mov
enter
mov
xchg
sub
mov
push
popf
sub
mov
mov
push
dec
mov
xor
add
repnz
nop
xchg
icebp
rcl
sbb
cmp
sbb
arpl
mov
sti
push
das
mov
push
ret
ds
cmp
sbbl
inc
or
mov
xchg
inc
pusha
scas
out
or
les
scas
mov
inc
int3
mov
lret
push
sbb
nop
xchg
data16
sbb
movsl
cmp
jmp
hlt
jno
inc
jns
adc
sub
jae
jmp
mov
lock
inc
xchg
cli
xor
mov
and
xor
scas
push
pop
jle
std
sub
push
xor
sub
test
and
jno
fisttpll
aad
ret
xor
cmc
push
and
stos
aas
inc
pop
or
repnz
jne
fsubs
pop
sub
add
ret
mov
dec
je
dec
mov
xchg
arpl
stos
fs
and
gs
mov
test
out
loop
ret
or
js
lcall
andb
jb
cli
inc
and
fisttps
js
pop
sbb
cmp
and
sti
dec
mov
pop
fdivl
mov
bound
test
push
or
mov
stos
jns
jge
mov
nop
mov
inc
xor
out
mov
sbb
iret
lods
in
jl
lret
add
jne
push
sar
pop
test
cwtl
notl
xor
out
lret
subb
lcall
nop
and
inc
lcall
jge
aam
or
cs
dec
push
mov
pop
or
push
jo
adc
jp
push
dec
cmc
mov
sti
inc
xor
or
push
cs
push
sub
jno
out
pop
cwtl
ljmp
rcl
mov
add
sahf
add
fdivp
outsb
nop
fyl2x
sub
out
inc
sub
mov
inc
sub
jmp
test
out
add
leave
sbb
ja
repnz
into
cmp
mov
idivl
jbe
inc
cmpsl
xchg
lcall
hlt
test
sahf
aas
aaa
pop
sar
cmp
outsb
out
and
mov
inc
jne
inc
mov
mov
sub
sub
mov
mov
std
and
das
arpl
jmp
sbb
mov
xor
inc
ds
test
push
das
jns
cwtl
dec
int3
lds
cmp
jecxz
lods
xchg
in
cmc
std
dec
mov
mov
pop
cmp
int3
lea
sub
sbb
pop
mov
sbb
xlat
mov
sti
aam
icebp
pop
pop
sbb
es
xor
sub
xchg
test
inc
push
push
cmp
pop
jl
test
iret
or
bound
insb
data16
xchg
xchg
mov
inc
in
mov
addr16
mov
lcall
out
xor
sbb
xor
dec
mov
int3
cwtl
and
bound
dec
stos
in
adc
cmp
sti
dec
pop
xchg
jne
aas
pushf
jmp
lahf
pop
cmp
call
dec
sub
lret
cs
cmp
in
jge
sbb
mov
std
mov
dec
mov
insb
loope
jge
push
hlt
push
adc
dec
and
js
mov
push
daa
push
jge
fidivs
fdivrl
in
xchg
mov
scas
mov
out
jb
flds
dec
push
mov
loope
addb
xchg
cmc
jns
pop
stos
sbbb
fisttpll
lods
or
mov
and
mov
pop
push
push
ret
shl
les
mov
lock
in
test
pop
mov
xchg
ja
and
icebp
ds
in
ss
or
loopne
pop
out
addb
ja
mov
mov
loop
loop
aam
std
fsubrl
fildll
cltd
sub
icebp
adc
in
sub
push
xchg
loope
mov
rolb
aaa
sub
into
rclb
add
les
idivb
movsl
mov
hlt
test
lock
orl
fs
fmuls
pop
mov
in
push
and
shrb
cltd
pushf
mov
xchg
aas
xchg
loopne
mulb
push
push
and
in
cmp
data16
dec
dec
cmp
add
push
xlat
and
pop
inc
dec
orb
ret
out
push
xlat
es
imul
sub
sub
mov
xchg
jle
sub
stc
in
stc
and
add
jo
bound
aas
xorl
cwtl
pushf
into
add
rcll
jp
sub
setb
cmp
and
xchg
dec
cli
movsb
loopne
dec
rcrb
aam
push
mov
mov
mov
movsl
jg
mov
lods
clc
add
jle
cli
lahf
cmp
xor
jecxz
jecxz
out
int3
add
lds
cmpsb
dec
xchg
mov
mov
xchg
fs
mov
lcall
and
add
std
lcall
popa
leave
xor
pop
adc
rorb
jb
and
adc
inc
repnz
pop
sub
push
xchg
jge
xchg
sahf
cmp
testl
ret
push
adc
push
sub
pop
cltd
mov
xchg
jae
hlt
popa
gs
daa
loopne
pop
fwait
cmp
pop
inc
jl
imull
xor
loope
dec
sbb
jnp
popf
jne
in
or
sub
dec
mov
mov
lock
in
lock
add
pop
mov
ja
movq
imul
je
jmp
js
roll
push
lret
mov
push
popf
push
outsl
mov
mov
aas
outsl
add
jl
cld
cmpl
jp
and
sbb
xor
aas
inc
sbb
or
push
shr
xor
loopne
or
outsb
push
and
cmpl
xchg
mov
in
fdivrl
and
dec
scas
sbb
cmc
mov
sub
add
push
add
lds
dec
data16
js
cs
push
jmp
dec
ds
nop
lock
dec
imul
rclb
pop
push
rcrl
or
cmp
dec
incb
cmp
xchg
clc
ret
ret
mov
push
dec
push
sub
stc
faddl
in
enter
cmp
or
cmp
inc
jp
mov
and
and
pusha
dec
mov
dec
imul
add
xchg
push
adc
mov
inc
loope
das
test
stos
adc
dec
mov
pop
cwtl
test
aad
mov
jno
jbe
jae
cmp
rclb
push
xlat
cmc
dec
test
cmpsl
stos
addr16
dec
dec
inc
sbb
push
inc
sub
pushf
push
jne
mov
jle
iret
lret
mov
add
out
sub
pop
inc
cld
xor
mov
lret
ds
subl
in
xor
mov
loope
and
inc
and
addb
and
mov
imul
fmull
rcll
push
lahf
and
rcrb
cs
sbb
das
mov
rolb
test
push
inc
add
push
popf
fisttps
pop
dec
pop
les
mov
jp
insb
stos
shrl
and
sbb
pop
inc
pusha
xorl
jle
daa
lret
add
inc
cmpsb
test
dec
fimull
xor
push
nop
cmp
dec
jno
fsubrs
outsb
je
ljmp
cwtl
or
jnp
ds
cmp
or
add
xor
push
fistl
aas
clc
xchg
dec
dec
fcmove
in
xchg
notl
mov
leave
hlt
add
push
mov
adc
sahf
mov
sbb
xor
xor
xlat
outsl
sub
lret
lods
pop
mov
stc
mov
sbb
push
sbb
or
cwtl
fnsave
rcrb
xor
jg
lahf
inc
stc
aaa
jnp
push
sahf
pop
jnp
loopne
and
lods
sbb
icebp
xor
cmpsb
aad
push
xor
fst
ja
pusha
jns
push
mov
mov
xchg
cmp
adc
sarb
sub
xor
cmp
sbb
and
shrb
int
imul
xchg
xchg
pop
mov
jne
fcomps
adc
inc
jge
jo
imul
ror
mov
inc
scas
fxch
ljmp
ds
and
fwait
in
popa
cld
lock
popf
shr
mov
xchg
data16
xchg
mov
bound
lret
ds
adc
sbb
movb
popa
lcall
mov
lea
pusha
in
jecxz
out
sub
add
and
in
push
cmpsl
movsl
inc
cmpsl
iret
add
cld
xchg
and
fsubrl
jmp
dec
jle
mov
jge
inc
mov
lahf
addr16
shrb
and
sbb
decb
add
mov
leave
dec
sub
and
sub
sbb
sbb
cmpsb
loop
test
cmp
or
pop
ss
jnp
push
test
xlat
int3
cli
call
jno
sub
aas
shrl
cmpsl
out
push
adc
sti
pop
jg
mov
fidivs
out
mov
cmp
int3
inc
cmp
mov
cmp
fbld
push
ljmp
jns
add
movsw
imul
inc
mov
out
xchg
mov
mov
popf
cmpsl
adc
jmp
jb
sti
dec
dec
hlt
std
outsb
mov
dec
push
mov
stc
add
lods
dec
in
imul
loop
or
daa
gs
movsb
mov
adc
mov
aam
sub
xor
mov
call
ret
std
insb
mov
shl
or
fisttps
fisubrl
lret
aad
pusha
std
mov
es
fbstp
lock
in
inc
mov
pop
fidivl
cs
mov
mov
mov
mov
fcmovbe
pop
outsb
testb
jmp
jae
lods
out
ja
sbb
xor
xchg
mov
loopne
pop
cmp
xor
scas
lods
dec
mov
shll
aas
test
outsl
push
insb
lea
adc
shrl
out
arpl
pop
sub
dec
add
mov
mov
push
sbb
inc
lods
sbbl
test
popa
cli
mov
push
cmp
inc
test
jg
add
int3
dec
sub
or
dec
cmp
or
dec
movsb
mov
lahf
mov
push
rcr
adc
negb
mov
sub
xchg
insb
push
ret
fcmovnb
inc
fsubs
je
push
orl
inc
mov
lret
out
cld
and
fsts
ret
cwtl
inc
inc
adc
out
mov
push
xchg
mov
or
mov
orl
mov
pushf
enter
or
stc
xchg
sbb
hlt
and
and
pop
nop
test
pop
test
inc
add
add
xor
adc
push
jle
mov
dec
xlat
ds
xchg
pop
and
ror
es
sub
or
je
cmpsl
pop
jp
ja
sahf
push
imul
js
jns
push
xor
sbb
cmp
push
mov
ret
lfs
and
sbb
test
pop
aaa
pop
cmc
pop
test
jbe
test
push
fcoml
insl
lods
pop
add
negb
mov
inc
cmp
int
inc
out
out
inc
leave
mov
pop
pop
testl
jecxz
cmp
xor
dec
paddq
xchg
pushf
xchg
or
dec
pop
mov
adc
jge
incb
es
jmp
out
pop
adc
jecxz
stos
push
iret
pop
xchg
xchg
add
cltd
mov
testb
push
fidivl
gs
pusha
ljmp
jae
jmp
xlat
aas
xchg
dec
jo
and
jns
push
inc
xor
xchg
pop
xchg
lahf
fcoms
int3
mov
popl
and
cmp
and
cltd
repnz
add
pop
sarb
std
inc
pop
inc
out
push
xchg
xchg
aaa
pop
test
add
hlt
arpl
mov
inc
das
jle
mov
pop
shll
and
cwtl
add
jns
push
and
adc
cmpb
push
xchg
ss
adc
xor
gs
rorl
movsl
jb
fcmovne
test
sub
pusha
inc
mov
or
loop
cmp
mov
pusha
je
xlat
and
aad
mov
jecxz
mov
in
cmp
sbb
fmuls
stos
dec
addl
in
or
xor
push
lods
jnp
add
in
jno
mov
pusha
inc
daa
adcb
insl
and
fsts
sub
adcb
cmp
mov
and
rclb
mov
inc
out
add
mov
add
mov
sbb
insb
test
pushf
pop
std
cmp
testl
mov
js
mov
insl
jmp
mov
push
lahf
cmp
mov
imul
sub
repz
inc
cmpsl
push
push
mov
sbb
js
rcrb
mov
mov
mov
dec
sub
out
addr16
mov
aaa
xchg
xor
gs
jg
leave
imul
mov
adc
mov
lahf
sbb
test
or
stos
out
js
adc
lock
xor
mov
cmpsl
fstpt
xchg
xlat
push
shl
fldenv
scas
enter
pop
mov
subl
dec
int
dec
movl
imul
andb
pop
addb
sub
cmc
mov
fdivrs
sbb
out
fdivrs
dec
dec
adc
cld
icebp
xchg
test
or
pusha
adc
sbb
jp
daa
movsb
inc
ficomps
out
fidivrs
mov
stc
pop
imul
sbbb
movsl
jl
mov
imul
jb
insb
sbb
ret
jl
cmova
xchg
adc
aaa
xor
jb
cmpsb
scas
scas
sbb
movsb
lahf
int3
enter
fcomps
shll
mov
ljmp
jl
dec
mov
imul
aad
inc
fucomi
rorb
xor
ret
pop
sub
mov
mov
dec
mov
jns
pop
ja
push
or
jne
aaa
stos
pop
sbb
mov
fisttpl
pop
not
pushf
add
pop
aad
add
leave
ja
xchg
dec
xor
data16
sahf
xchg
adc
sbb
adc
addl
mov
cltd
push
cmp
and
cmc
sahf
mov
lods
out
xor
mov
pusha
jl
daa
sub
lcall
aaa
aas
adc
xchg
out
mov
or
xlat
pop
push
shl
pusha
sbb
pushl
popf
dec
fiaddl
cmp
iret
push
or
ja
adc
shll
and
lret
movsl
movl
jo
mov
inc
enter
shrl
pop
push
stc
leave
adc
mov
xor
cmp
movsb
in
shll
outsl
sbb
push
xor
fdivp
dec
mov
jnp
lret
mov
push
jnp
repz
sub
jo
fldl2t
inc
xchg
push
insb
jnp
and
aas
pop
clc
daa
cltd
lcall
inc
or
icebp
roll
add
pop
aad
stos
cmp
cmc
adc
loope
pop
push
icebp
ds
jne
push
cmp
mov
mov
fnsave
cltd
xchg
clc
jmp
add
or
outsb
push
xlat
inc
adc
fwait
arpl
xchg
out
sub
test
dec
imul
scas
outsb
jl
jnp
and
sub
int
and
je
rcrb
lods
and
int3
stos
mov
pushl
jl
je
ficomps
insl
hlt
movsl
xor
sub
or
xor
fstl
jns
push
scas
ljmp
pop
push
mov
mov
jno
xor
std
sub
jns
lahf
insl
push
clc
inc
mov
dec
jp
insb
cmp
insl
add
adc
fdivp
popa
and
push
fwait
imul
cmpsl
add
aad
out
outsl
test
xor
into
sahf
push
lahf
lock
data16
repz
inc
mulps
dec
fisttpll
addr16
mov
pop
mov
push
add
push
popf
aaa
add
lea
pop
test
dec
ss
inc
push
jg
test
xchg
sub
xchg
popf
xor
movb
movsb
add
add
push
xor
or
or
xchg
xor
sub
imul
and
jmp
xor
adcl
std
mov
clc
testb
mov
xor
pop
popf
sahf
imul
add
xchg
cmp
repz
lods
jmp
mov
or
push
add
adc
adc
dec
jbe
outsb
push
jnp
aas
mov
dec
push
or
add
mov
in
das
out
mov
or
sub
dec
rorb
add
int3
shr
pop
xor
cmp
in
mov
je
ficoml
pusha
dec
cmpsl
popa
lahf
mov
ljmp
jbe
fldl
inc
or
mov
call
xlat
mov
dec
sub
repnz
sub
fsubl
mov
and
aas
adc
xchg
es
dec
sbb
shll
sbb
mov
sarb
ret
adc
jg
push
int3
push
test
jno
mov
fwait
jmp
xchg
adc
cmp
bound
add
out
scas
stc
mov
add
or
push
les
inc
ret
lods
inc
pop
sarb
dec
push
sbb
outsl
xor
aad
pop
fcomps
outsl
hlt
jae
jb
mov
lret
mov
lock
loopne
pushf
out
add
jb
stc
push
inc
adc
jnp
das
mov
inc
fadd
lds
push
test
push
lcall
pusha
roll
and
push
orb
out
lods
movsl
in
cmp
mov
lret
sub
mov
adc
fstpl
add
sub
cli
sbb
mov
xor
mov
jne
pop
dec
pop
sub
int3
cmp
cmp
fsubrl
outsb
cmp
sahf
movsb
mov
add
ret
lock
daa
cmpsb
xor
out
cld
or
mov
sub
in
sub
mov
out
push
clc
push
lods
imul
out
inc
repnz
jl
mov
sub
cs
popf
std
mov
cmpl
scas
adc
lret
icebp
outsl
jbe
or
pop
sbb
shl
mov
push
into
enter
mov
or
jle
mov
imul
in
stos
ja
fidivrl
dec
mov
xor
inc
sub
test
push
fs
int3
push
fcmovb
add
cmp
xchg
aaa
bound
repz
mov
dec
pushf
cmpsb
pop
adc
pop
cmp
xchg
pop
iret
add
daa
sbbb
add
lea
or
dec
mov
in
xchg
dec
shl
and
and
addr16
in
pop
stos
ds
jl
cltd
fldlg2
add
xchg
icebp
lret
sbb
lds
mov
inc
adc
inc
and
xor
inc
ds
aaa
das
aad
sahf
and
je
pop
cwtl
and
mov
push
adc
mov
cs
xor
outsb
into
sub
mov
mov
adc
aam
mov
adc
pop
xor
scas
sbb
mov
xlat
mov
xchg
dec
das
cwtl
sub
mov
inc
jbe
ljmp
pop
pop
aam
mov
movsb
arpl
push
jb
mov
jo
into
std
cltd
jmp
repnz
sahf
adc
pop
push
cmp
push
cmpsl
jle
and
push
add
pop
jnp
loop
and
dec
mov
cmc
mov
push
cmpl
in
fidivs
fstl
dec
sub
mov
dec
into
nop
js
lret
pop
adc
push
adc
out
cs
sub
sub
jecxz
mov
xor
mov
jns
ss
jno
cmp
dec
cmp
mov
or
mov
fmul
aam
jmp
mov
out
jns
imul
dec
xchg
pop
inc
xor
pop
mov
xor
rcll
ja
lock
outsb
clc
sahf
sub
dec
ficomps
xor
rclb
push
push
dec
push
xorl
push
xchg
insl
push
mov
repz
ss
cmp
adc
ja
push
dec
and
scas
add
push
xor
std
sahf
in
and
mov
imul
jp
add
xlat
bound
jp
orl
adc
mov
and
pop
sbb
xorb
imul
and
xchg
adc
enter
insb
imul
icebp
sub
fisubrl
push
xchg
loop
lcall
fnstcw
popa
scas
scas
dec
and
xchg
subl
insb
or
jae
and
jge
and
inc
dec
outsl
in
sbb
cmp
call
push
cltd
loopne
adc
sub
pushl
aad
bound
lods
push
cmp
inc
mov
fiaddl
xor
popa
dec
mov
pop
mov
out
loop
ljmp
sarb
enter
lahf
xor
sub
test
shl
lds
cmpsl
mov
add
fsubrs
xchg
add
mov
popf
xor
mov
add
pop
push
sub
cmp
lods
pop
ror
sub
sub
jae
lds
sbb
push
push
pop
roll
inc
xchg
cs
insb
xor
sbb
push
mov
or
mov
aad
test
jg
cmp
mov
mov
push
jge
test
and
test
fucom
in
test
testl
rorl
push
dec
cmpl
sub
js
stc
in
scas
xchg
dec
dec
sbb
mov
les
mov
xchg
pushf
xchg
lret
mov
lods
add
ret
push
test
imul
sbb
pusha
jge
xchg
fs
ljmp
mov
xor
jns
leave
mov
sbb
cmp
mov
cmc
pop
push
sub
inc
or
rep
sub
jmp
pusha
cmp
push
pop
out
ror
inc
sbb
fsub
mov
and
mov
iret
cmp
adc
js
loop
fwait
adc
xchg
out
shll
sub
es
stc
push
cmp
jl
sbb
or
repnz
cmp
icebp
mov
pop
nop
xlat
int3
xor
or
cmp
das
fcoms
or
lahf
ss
mov
mov
enter
jecxz
gs
icebp
stos
in
fidivs
adc
xchg
into
ja
call
loop
lret
lea
dec
adc
mov
jmp
mull
sub
xchg
repnz
mov
xchg
hlt
mov
xor
or
in
cmpsl
js
test
add
cld
add
popf
push
push
add
push
clc
aam
rorl
mov
dec
mov
loope
mov
push
in
xor
lock
push
repnz
or
inc
insl
pop
aaa
jnp
jnp
jno
pop
lret
lea
hlt
fwait
or
loope
sub
inc
and
popa
and
xchg
icebp
sbb
scas
dec
out
shrl
pop
in
cmpsb
sub
test
sbb
mov
out
das
jns
cmp
mov
and
or
fimull
stos
jns
push
xchg
push
pop
fldcw
sbbb
mov
nop
sbb
add
mov
sub
jecxz
mov
add
mov
cltd
ja
lock
loopne
js
mov
sub
xor
enter
stos
or
cld
mov
insb
jmp
and
sub
stc
push
pop
stos
sub
out
test
cmp
loope
movsl
lahf
movsb
or
sub
stos
push
das
rclb
sub
xor
lret
lods
mov
adc
jo
andl
xchg
fidivrs
pop
jecxz
rol
cli
adc
sbb
pushf
jle
mov
adc
daa
dec
jns
add
outsl
or
push
sbb
mov
popa
push
imul
je
cmp
mov
insl
inc
mov
in
dec
fidivs
jbe
mov
pop
mulb
cmp
adc
fiadds
scas
aas
mov
inc
in
xor
or
lock
mov
les
call
inc
mov
pushl
pop
cmp
test
sbb
cwtl
popa
jb
jae
inc
jl
test
aas
dec
les
pop
adc
int3
xchg
ficompl
testl
mov
adcl
cmp
jae
sub
fs
lahf
mov
and
jge
int
mov
push
fidivrs
push
lods
in
and
mov
or
inc
repnz
mov
mov
ljmp
imul
ret
rclb
in
xorb
nop
mov
dec
jo
daa
enter
popl
popa
jle
stc
pushf
mov
cmpsl
lret
xor
xchg
ss
out
push
adc
shll
mov
mov
push
mov
stos
lods
or
les
pop
call
mov
cli
mov
movd
pusha
mov
xchg
inc
sub
pop
xchg
dec
push
leave
fdivrl
sub
xchg
fisttpll
jbe
mov
jl
cwtl
orl
sbb
mov
mov
fists
fsubl
std
pop
xchg
test
xchg
stos
push
push
nop
and
sub
mov
adc
push
pop
insb
or
add
pop
xor
inc
enter
or
jb
adc
out
fstp
sbb
cmp
call
mov
mov
add
cmp
mov
or
cmp
fcomps
jg
fnstcw
into
mov
int
stos
pop
mov
push
jmp
pop
or
ds
repz
xchg
cmp
jmp
ret
push
cltd
out
xchg
out
call
inc
dec
nop
ret
add
push
aas
andb
push
daa
pop
sbb
sbb
adc
hlt
faddl
imul
stc
adc
sub
mov
imul
pop
cltd
cltd
sbb
push
mov
mov
bound
pop
arpl
in
mov
jbe
sub
jp
jo
aaa
push
fsub
pop
mov
int3
mov
mov
out
rcrl
sub
loop
jns
loope
clc
in
repnz
stos
xlat
loope
ljmp
mov
push
mov
movsb
insb
inc
mov
xchg
fnstenv
in
push
ret
pop
sahf
jo
mov
sub
push
jle
lea
sub
pop
int3
add
xlat
inc
xor
repnz
pop
push
jb
xchg
outsb
push
stos
shll
movsl
dec
mov
jg
add
inc
mov
mov
mov
xchg
or
fnsave
in
adc
add
sbb
push
mov
mov
dec
insl
test
inc
inc
mov
dec
mov
jmp
mul
jne
dec
ljmp
mov
arpl
lahf
sub
fsubrs
popf
cmp
dec
lret
xor
notb
xchg
jg
ret
sahf
inc
stc
sbb
mov
jne
xor
cmpsb
fstps
into
dec
pusha
xchg
pop
cmp
push
xor
lret
mov
mov
pop
ret
xchg
and
frstor
cli
adc
je
inc
pusha
popa
test
mov
jle
mov
fs
outsb
pop
int3
or
jo
jecxz
movsl
dec
add
xchg
imul
pop
shrb
test
jbe
and
data16
pop
cltd
mov
cmp
inc
mov
adc
jmp
mov
dec
adc
pusha
fisttps
in
push
pause
sub
gs
inc
lcall
fcomip
xor
mov
mov
adc
jp
mov
xor
cmp
outsl
or
xor
pushf
leave
lds
mov
outsb
addr16
addl
cmpsl
mov
dec
sub
loopne
jle
pop
sub
dec
xchg
out
js
xchg
mov
mov
adc
pop
dec
push
jnp
mov
xchg
stos
adc
scas
cwtl
stos
pop
mov
adc
in
sub
hlt
or
mov
and
in
enter
adc
cmpsl
jg
test
pop
adc
mov
inc
js
insb
mov
push
or
into
lcall
pop
sub
push
cmp
sbb
jecxz
mov
mov
mov
out
aad
dec
sbb
sahf
dec
fistps
and
sahf
jl
or
lea
scas
lahf
hlt
push
jnp
mov
imul
stos
pop
mov
js
in
push
rcr
enter
dec
loopne
call
imul
fsubr
inc
mov
add
jp
mov
jg
fs
jg
cwtl
pop
mov
jge
outsl
and
mov
aaa
dec
aaa
jge
sbb
inc
mov
push
cmp
xor
dec
pushl
jbe
repz
mov
addr16
rclb
stos
nop
and
fcoml
or
push
xor
lahf
xchg
adc
pop
ret
testl
int3
ret
pop
pushf
ret
and
mov
rolb
mov
adc
inc
sub
fsubrl
mov
sub
cmp
sbb
rcrl
push
add
in
add
ficomps
jl
mov
xchg
movsl
jb
test
mov
jnp
lcall
cmpsb
fs
and
popa
jne
push
clc
lods
les
jle
cmp
dec
pushf
popf
clc
sbb
stos
fwait
fwait
xor
stc
mov
pop
bound
popf
push
enter
out
iret
dec
leave
outsb
testb
jmp
and
shrl
ja
add
movsb
in
test
or
push
enter
inc
cwtl
jne
mov
aaa
clc
jb
dec
stos
jl
cmp
sbb
out
cmp
loop
xchg
jp
jnp
int
xor
add
lret
dec
lahf
xor
add
dec
push
mov
mov
icebp
sbb
jl
fs
hlt
adc
mov
bswap
aad
sbb
sub
cmp
pusha
jae
insb
sub
sub
sub
fstps
mov
daa
xchg
add
cwtl
loop
iret
mov
cmp
inc
out
mov
ret
testb
xor
fidivrs
pop
xchg
fs
sub
pop
aas
push
cwtl
or
mov
bound
adc
cs
cli
push
mov
push
pop
pop
jnp
rol
ret
sahf
xor
adc
jmp
xor
cmp
sbb
push
push
push
pushf
inc
outsl
fists
inc
jle
and
jle
or
xor
xchg
lea
movsl
imul
dec
cmp
stos
nop
fnsave
call
daa
je
ss
jnp
sti
add
jne
xor
out
test
clc
dec
adc
or
stc
xchg
adc
nop
stos
rcrb
cmp
popa
push
cmc
xchg
mov
cmp
jnp
sbb
pop
popf
adc
das
loopne
mov
in
or
push
or
pop
pop
dec
stos
shll
std
imul
jle
and
enter
dec
arpl
mov
push
ja
fsubs
montmul
cmpsb
xchg
pop
mov
or
jbe
pop
outsb
cmp
fistpl
test
jno
lds
pop
pop
test
lret
imul
mov
ss
sbb
mov
inc
push
inc
daa
aaa
sarb
cmp
add
push
mov
imul
jecxz
int
fists
andl
add
cmp
pop
lods
sub
dec
sub
inc
sets
movsl
lret
xlat
aad
sbb
pop
xchg
sbb
out
mov
int
fs
sbb
clc
cmc
sub
xchg
test
and
std
cmp
jp
adc
push
insb
add
mov
gs
pop
sbb
xlat
jnp
adcb
adc
fnstsw
idivb
test
fwait
sti
xlat
cmp
data16
jmp
int
mov
xchg
mov
xchg
mov
inc
jns
inc
sbb
or
xchg
mov
das
out
sbb
std
xor
add
xchg
loope
leave
jno
inc
imul
add
xor
les
jne
pop
mov
je
sub
fnstenv
mov
data16
popa
mov
mov
scas
aad
mov
lret
jo,pn
hlt
fdivl
xchg
mov
mov
in
cmp
xor
xor
dec
mov
mulb
pop
pop
mov
fcomps
mov
stc
clc
outsb
rcl
std
jecxz
or
jg
and
hlt
mov
repz
stos
jae
out
jmp
pop
lods
test
cmp
scas
sbb
xchg
and
test
aad
and
cltd
sbb
movsb
inc
sti
mov
add
fiadds
loop
loop
repz
jno
xlat
stos
mov
fcompl
xchg
xor
sub
hlt
hlt
stos
arpl
add
repnz
rolb
mov
add
das
and
rcrb
aaa
imul
fucomp
sbb
ret
repz
in
mov
fildl
cmc
dec
xor
mov
aam
mov
inc
scas
xor
and
cwtl
outsb
movsl
sbb
enter
out
lret
ljmp
sbb
add
in
mov
sub
dec
mov
loope
adc
jp
test
pop
pushf
andb
push
ljmp
inc
xor
inc
in
mov
xor
icebp
jb
jb
repz
sbb
out
and
pop
lods
lahf
or
mov
mov
xor
pop
test
mov
mov
ficompl
mov
daa
lds
aad
xchg
mov
test
mov
imul
es
test
push
pop
jno
fdivr
enter
nop
inc
js
out
cmpsb
mov
sbb
aaa
pop
xchg
into
adc
add
ja
pop
push
xlat
mov
xchg
test
mov
add
ret
pop
mov
arpl
mov
push
loopne
incl
add
mov
test
mov
adc
popa
cmpb
jl
outsb
jns,pt
fdivr
dec
sub
enter
and
out
imul
arpl
out
jno
lsl
mov
rcl
js
xor
jns
je
inc
mov
stos
mov
lods
cwtl
fmull
or
jno
aam
sub
sub
cmc
loope
lret
dec
ja
sub
pop
in
aad
scas
mov
push
data16
xchg
push
push
cltd
leave
ss
pop
cmc
push
out
aam
jp
cmpb
daa
ljmp
mov
add
push
lcall
sbb
in
rcrl
out
test
sbb
iret
stc
lahf
cmp
in
movsl
bound
pop
mov
das
roll
push
jbe
cmp
xchg
jg
ljmp
sbb
fildl
neg
adc
call
mov
cmpsb
sbb
cltd
add
das
push
xor
movsl
test
inc
and
repz
ffreep
test
add
adc
pop
loope
loopne
cmp
add
lods
add
xlat
push
outsb
lds
decl
loop
es
pusha
pop
mov
pusha
xor
pop
and
in
pusha
enter
lret
and
loop
into
mov
xor
daa
icebp
mov
pop
xchg
cmp
push
sub
std
jb
inc
cmc
mov
iret
sarl
mov
jb
dec
repnz
lret
sub
sbb
sub
mov
mov
or
lods
mov
scas
sbb
inc
scas
pop
adc
xchg
arpl
xchg
xor
ja
or
dec
aas
into
mov
pushf
pop
xor
xbegin
pop
adc
adc
pop
dec
sbb
xchg
mov
sahf
jne,pn
or
mov
jne
les
imul
cmp
xlat
dec
push
adc
aad
inc
call
lahf
jae
lret
or
mov
sub
sbb
dec
mov
and
inc
jmp
cmp
js
xor
cwtl
adc
sub
aas
stc
cmp
push
stos
dec
ds
popf
sub
cld
jle
mov
mov
mov
sbb
rclb
push
rep
imul
mov
xorl
js
rclb
repnz
adc
or
lods
pop
xchg
lock
xor
cmp
pusha
sub
insl
enter
call
pop
rclb
pop
addr16
jnp
fdivl
dec
mov
sti
and
out
cmpsb
divb
jg
roll
sbb
and
xchg
lahf
out
add
jo
addr16
pushf
das
xchg
shrl
movsb
jle
xorb
xor
in
add
mov
repnz
bound
adc
mov
add
jns
imul
fldcw
icebp
adc
sub
mov
cltd
mov
sub
mov
mov
addr16
fimuls
mov
stos
mov
mov
push
add
push
loop
inc
mov
mov
fld
bound
popf
cmp
js
xor
dec
pop
xchg
outsl
push
jnp
pop
and
mov
loop
inc
push
push
pop
push
dec
sbb
adc
out
dec
les
inc
lret
or
pushf
cltd
scas
mov
inc
inc
hlt
inc
add
fdivl
imul
cltd
jmp
int
xlat
sti
stos
adc
mov
movsl
add
mov
jl
or
aam
mov
data16
push
pop
sbb
pop
dec
test
vpsubb
jp
divl
jp
call
xchg
loop
jmp
inc
or
data16
sub
mov
jb
jno
ret
pop
loope
inc
inc
sbb
adc
cli
lea
push
push
mov
lock
xor
test
sbb
sbb
jb
mov
inc
pop
mov
mov
test
xchg
es
out
pusha
adc
cmpsl
mov
les
test
jo
mov
imul
cmp
dec
lahf
ljmp
arpl
mov
imul
pop
leave
mov
xchg
mov
inc
cwtl
mov
cs
scas
pop
jmp
fcom
xchg
call
add
sub
mov
inc
in
push
inc
dec
in
cmp
stos
loopne
mov
nop
sbb
ljmp
or
sbb
jo
pop
add
cmp
fwait
repz
inc
or
or
pushf
push
push
les
xchg
pop
lahf
cmpsl
mov
aaa
jp
out
out
mov
xor
cmp
sti
mov
bound
in
push
lret
mov
push
popf
das
daa
ret
xor
pushf
fnstenv
sarl
and
std
inc
jae
lea
jmp
push
stos
pop
adc
mov
movsb
lods
stc
sub
mov
pop
adc
repz
inc
inc
call
sub
sbb
sahf
iret
mov
mov
mov
call
jge
lret
jo
cmp
inc
lret
pop
cmp
xchg
bound
rcr
ficompl
mov
mov
and
xchg
loopne
pop
push
in
test
or
and
repz
rcl
sbb
cmpsb
loopne
xor
xchg
jmp
and
mov
in
jne
or
and
popf
sarl
cmp
int
inc
sbb
fisubrl
add
mov
push
dec
push
add
out
xor
cmpsl
mov
xor
aam
mov
lods
test
out
push
lret
mov
inc
pusha
xchg
jecxz
adc
insl
ficoml
cmp
roll
cmp
jo
mov
push
mov
int
xor
sbb
subl
pop
sub
push
out
jmp
cmpb
inc
inc
cmp
je
cmp
lock
or
out
loope
push
sbb
notl
or
mov
jmp
xchg
push
mov
cmc
xor
add
sbb
mov
aad
ss
jno
lock
test
gs
add
cmp
test
insb
cmp
test
push
ljmp
pop
movsl
repz
mov
test
xor
insb
in
gs
es
xor
jl
cmpb
loope
data16
icebp
push
daa
and
cwtl
loop
push
clc
movsb
pop
das
enter
inc
mov
in
mov
dec
aaa
hlt
add
xlat
sub
push
mov
jecxz
movsl
iret
xchg
ss
mov
dec
cmp
sbb
add
ret
jb
rorb
stos
jge
sub
sub
and
push
lds
stc
fiadds
jg
ljmp
and
adc
xor
pop
inc
sahf
cltd
add
les
jno
lock
movsl
mov
addb
mov
mov
andl
ja
or
out
sub
stos
dec
out
fwait
lea
cmc
pushf
loopne
sub
fcompl
fldl2e
dec
adc
jge
sbb
and
xchg
pop
push
mov
mov
push
pop
ficoml
lea
xor
inc
sbb
call
or
out
push
or
add
mov
jge
outsb
xor
xchg
pop
xor
inc
movsl
mov
pop
pop
rep
cs
and
lods
and
inc
jmp
loop
int3
xchg
sbb
xchg
aam
push
dec
gs
adc
push
pop
imul
sbb
into
int
imul
mov
mov
pop
test
pusha
in
cltd
jae
jbe
xlat
stc
or
pop
sbb
fnstcw
aaa
movsb
dec
stos
mov
sbb
jnp
es
pop
xor
push
sub
aas
sub
xor
and
dec
dec
dec
aas
mov
andl
sar
adc
in
mov
pop
push
es
fsub
nop
adc
shll
fisubrl
loopne
out
flds
mov
ja
iret
jne
xchg
popf
mov
inc
mov
xor
je
fstpt
arpl
jo
fs
popa
out
jne
pop
outsb
les
mov
sbb
sub
add
lock
pop
aaa
and
inc
mov
push
pop
sub
lret
clc
mov
push
out
icebp
mov
cltd
mov
inc
sahf
add
or
jle
xchg
push
aam
cld
push
cmp
push
mov
icebp
dec
dec
push
push
mov
xchg
inc
cli
fnstenv
mov
mov
popa
pop
mov
and
cltd
mov
inc
mov
icebp
cmpsl
adc
in
xchg
or
jl
test
add
push
imul
movsb
jl
in
push
pusha
int
repz
sub
orl
fs
ret
push
and
std
mov
push
mov
xchg
mov
stos
xchg
dec
out
mov
pop
ds
xor
mov
rorl
shlb
xchg
in
aam
and
popa
das
adc
in
out
out
aas
inc
stos
mov
mov
aam
or
add
and
test
xor
pop
xchg
ja
sbb
ljmp
pusha
imul
lock
repnz
mov
in
lret
clc
xchg
out
sti
xchg
xchg
cmove
dec
push
fidivl
das
jne
push
aad
sbb
pop
inc
xchg
mov
les
xor
and
nop
jl
inc
loope
mov
data16
pop
pop
and
btc
rcrl
jbe
stos
mov
pop
cli
mov
pop
cmp
iret
pop
push
xchg
in
stos
jne
je
out
ljmp
jl
jl
jno
jae
inc
mov
push
adc
jp
loopne
fcompl
pop
pop
lods
in
iret
mov
stos
fisubs
xchg
fstpl
nop
jl
clc
and
xlat
leave
push
cli
mov
pop
pop
pop
icebp
clc
xchg
cmc
daa
dec
xchg
push
cld
iret
cli
push
ret
inc
or
push
lahf
in
mov
xchg
dec
mov
mov
subl
jnp
outsl
lret
mov
inc
out
mov
insb
inc
mov
cmp
stos
xorb
jns
sub
lock
jg
das
jp
lret
jge
mov
aas
sub
idiv
maskmovq
divl
cmp
or
sbb
jle
test
imul
jae
push
popf
mov
fdivrs
pop
adc
push
mov
movsb
jbe
in
ljmp
lods
iret
push
adc
sub
dec
mov
xor
jmp
int
or
push
xchg
sub
mov
add
add
sub
mov
xchg
xlat
xor
ljmp
xor
cli
sub
je
mov
pop
stos
orb
sbb
cmp
pop
and
shrb
and
je
test
popf
loope
adc
aam
loope
mov
xchg
xchg
pop
out
sbb
xchg
push
mov
out
into
js
sbb
mov
or
push
push
xchg
inc
cmp
pop
addr16
xchg
sbb
adc
xchg
inc
dec
pop
adc
imul
gs
in
inc
pop
mov
sbb
fsubrs
add
add
fildl
stos
mov
add
pop
cmp
push
push
lock
xlat
aad
add
xorb
add
sub
test
es
sub
nop
insl
sbb
out
aaa
test
xchg
fistpll
cltd
dec
jo
cmpb
loop
xchg
cmp
fs
pop
fstpl
out
imul
fwait
mov
lods
xchg
data16
dec
xchg
icebp
jns
adc
jg
inc
test
fs
sbb
inc
add
inc
cmp
pop
in
jnp
stos
outsb
gs
xchg
push
movsb
push
xor
sub
dec
xchg
loop
pusha
adc
ljmp
adc
push
mov
sub
or
mov
sbb
mov
faddp
mov
nopl
pop
push
sbb
push
xor
ret
mov
out
xchg
pop
test
and
sub
repnz
ror
daa
dec
lahf
pop
and
ss
outsb
mov
rorb
sub
adc
cmp
mov
pop
aas
mov
adc
jno
mov
fdiv
add
inc
cmp
cmp
idiv
push
jne
aad
call
test
scas
jg
lret
mov
ret
adc
mov
xchg
inc
push
and
mov
mov
sbb
pop
add
sub
std
fstps
or
addr16
adc
jae
or
inc
dec
outsl
in
js
insl
icebp
das
dec
clc
outsb
sidtl
push
xor
cld
pusha
es
adc
sub
add
inc
pusha
in
jbe
cmpsl
xchg
mov
or
pop
push
mov
mov
jb
lahf
add
cmpl
mov
in
push
mov
push
jbe
xchg
fidivrs
jle
aam
mov
jle
loop
push
mov
jecxz
aaa
xchg
sbb
aam
out
punpckhbw
sub
movsb
push
movsb
mov
and
pop
inc
add
mov
dec
push
lret
aas
xchg
je
pop
sbb
mov
int
xor
clc
fcmovu
pusha
inc
roll
daa
sti
repnz
or
and
or
dec
jbe
pop
stos
hlt
mov
sar
jge
push
lods
mov
and
out
and
sub
scas
pop
sti
mov
icebp
push
sub
pop
rorb
xor
xchg
add
xor
testl
jbe
into
cld
or
xchg
js
mov
int
adc
scas
cmp
aad
sbb
cs
ret
sbb
loope
pop
mov
in
push
dec
mov
xlat
cltd
ljmp
push
or
dec
xor
adc
add
sbb
test
popf
or
pop
movsb
mov
jne
int3
fs
outsl
test
lret
sub
xchg
or
dec
pop
sahf
ds
dec
lea
scas
aad
arpl
mov
pop
lret
mov
scas
rcrl
sbb
lret
xchg
sub
iret
push
mov
or
mov
push
aam
iret
and
mov
sbb
mov
cmp
dec
dec
jl
pop
out
dec
xchg
or
loop
sub
data16
loopne
dec
test
dec
idiv
lret
iret
ljmp
xchg
mov
inc
push
and
icebp
popa
aas
dec
pop
pop
mov
jno
fs
pop
cltd
and
mov
cmp
adc
add
neg
cmpb
push
and
adc
insl
fsubl
lods
pop
das
cld
sub
mov
ds
lret
jp
test
push
and
aad
sub
and
adc
xchg
push
adc
mov
test
push
dec
popf
rclb
pop
out
jb
fstpt
es
pop
lds
stos
data16
ret
xor
xchg
scas
ds
and
sub
xlat
ret
xor
and
pop
adcb
nop
lret
inc
aam
jne
adc
and
mov
xchg
dec
pop
and
repz
sbb
fs
sbb
pop
in
cwtl
push
cmp
xchg
or
mov
add
pop
push
stc
nop
push
add
insb
bound
pop
adc
mov
test
loopne
testl
xchg
xchg
mov
mov
push
adc
aaa
pop
ss
pop
stc
repnz
ret
cmp
filds
nop
clc
xor
jecxz
arpl
pop
out
out
mov
outsb
enter
cld
mov
cmp
ljmp
outsl
test
fisttps
xchg
xor
pop
or
lcall
sub
mov
sbb
ljmp
dec
add
rcl
or
dec
mov
hlt
ss
and
fisubrs
testl
andl
pop
jo
cmp
jp
inc
fisttps
loopne
lds
enter
inc
xchg
jae
mov
xor
and
sahf
sbb
push
inc
jnp
rcll
jmp
incl
jl
add
xor
sub
jns
jecxz
mov
jle
je
in
or
mov
mov
dec
jne
lret
das
pop
jne
rcrb
sti
sbb
incb
mov
lret
outsb
jecxz
pusha
scas
cmpsb
fisttpll
insl
or
push
push
inc
jmp
mov
mov
and
mov
pop
jge
and
loop
mov
dec
and
add
aas
pushf
xchg
call
fcomi
loop
pop
cmp
adc
and
cmpsl
ja
or
and
das
adc
repnz
mov
shlb
adc
and
fsts
imul
pop
xchg
mov
outsb
add
mov
ret
sub
dec
ret
in
dec
cmpsb
pop
mov
lret
movsl
pop
sub
xor
mov
pop
add
dec
push
xor
xor
and
cmp
jmp
repnz
xchg
je
scas
shll
mov
push
repz
jo
imul
stos
subb
fdivrl
pop
push
popa
jne
lods
int
sahf
xchg
xchg
test
pop
stos
sub
outsb
xchg
scas
sbb
imul
add
adc
mov
lods
mov
pop
mov
cmpsb
out
cld
shr
leave
sub
gs
enter
inc
mov
mov
nop
adc
mov
cmpsl
push
or
lock
into
sub
insl
add
xlat
cmpsl
das
loop
mul
or
insb
pop
das
rcrl
push
sbb
movsl
jne
ljmp
dec
adc
int
loop
cmp
xchg
mov
aas
fwait
stos
bound
sbb
add
add
hlt
test
or
pop
mov
cmp
out
xchg
lock
or
mov
add
lea
jns
sub
pop
lods
mov
dec
in
jae
push
inc
sbb
sub
or
outsl
inc
out
into
mov
popf
es
movsl
jg
mov
nop
stc
pop
sbb
adc
pop
sbb
aad
xor
aas
add
jge
mov
in
in
stc
pop
loope
sbb
pop
dec
std
mov
sub
mov
out
repnz
mov
xor
jno
pusha
aam
punpckhwd
ret
xor
lea
insl
das
xor
sub
addb
call
sbb
sahf
aam
jo
mov
movsb
fs
add
cmc
jb
test
xchg
jp
or
in
test
aaa
add
cmc
and
aaa
outsl
stc
int
stos
jmp
cmp
add
mov
cld
jg
jno
jnp
aad
pop
push
cld
fsubr
cmpsb
ret
add
add
xchg
psubusw
stc
mov
insb
xchg
enter
adc
jg
out
sbb
loop
nop
in
andb
mov
xchg
lods
movsb
and
aam
sbb
pushf
sbb
ret
dec
mov
pop
cmp
add
fs
and
lret
clc
mov
dec
inc
adcl
cwtl
movsb
xor
adc
sbb
lahf
fsubrs
or
test
jg
test
into
fldenv
jecxz
dec
push
xchg
lahf
out
iret
imul
push
push
sbb
outsb
fistps
pop
cmpl
add
js
aas
dec
jo
gs
add
lods
xor
add
and
xlat
and
lock
call
xlat
cwtl
xchg
or
js
dec
ds
aam
adc
rorb
xor
dec
cli
add
inc
mov
xchg
push
or
jno
popa
int
loop
push
add
xor
mov
icebp
cwtl
xchg
sub
mov
pop
cmp
push
sar
lret
inc
hlt
pop
loopne
lret
sub
xor
jns
ficomps
sbb
xchg
ret
lahf
ret
sbb
out
lahf
mov
fdivrs
fxch
sahf
mov
cmp
jno
in
cmp
xchg
xchg
jae
popa
cmp
inc
out
loope
ftst
fstpt
push
mov
hlt
push
or
jl
mov
repnz
outsl
mov
sahf
ja
adc
xor
jg
fisttpll
add
push
sbb
and
dec
sub
jno
daa
cwtl
test
ja
adc
xchg
push
loop
stos
fucomip
xor
nop
into
inc
xlat
and
cmc
lret
das
mov
mov
cs
icebp
aad
push
sbb
sbb
or
pop
je
out
sub
add
sbb
sti
das
cmp
mov
push
scas
and
push
adc
dec
loope
ret
jo
sbb
mov
xchg
or
or
cmp
jno
jns
xchg
mov
lret
rcrb
jl
outsb
lds
stos
stos
aam
out
push
cli
mov
sub
adc
orl
inc
cmp
ja
fsubp
arpl
out
xchg
aas
mov
ss
push
xorl
mov
and
pop
mov
mov
outsb
hlt
push
pop
push
scas
jmp
call
pushf
leave
movsl
mov
shrb
into
mov
rcl
pushf
mov
dec
pop
insb
mov
pop
inc
pusha
lods
loope
inc
xor
in
pop
mov
and
das
imul
dec
xchg
sub
and
pop
xchg
dec
cmp
push
sbb
mov
loopne
aas
and
jb
roll
data16
mov
xchg
and
sbb
dec
popa
cs
sub
mov
imul
mov
addr16
mulb
mov
test
sbb
jbe
subb
push
call
jg
mov
repz
lahf
mov
mov
xchg
fwait
mov
add
jmp
or
loope
mov
push
mov
sub
cli
addr16
dec
and
ret
data16
je
popf
lcall
negb
mov
mov
mov
das
mov
push
push
sarl
inc
clc
dec
xchg
inc
push
xor
lcall
jg
mov
test
cli
lea
mov
and
rcrl
dec
cld
add
sbb
orb
addr16
lods
clc
mov
inc
int
cmp
add
int
sub
addr16
adc
fisubl
pushf
jp
add
ss
cmp
pop
ss
add
clc
std
push
es
movsl
testb
xor
stos
sbb
jle
mov
movsl
jle
inc
call
sub
cmp
movsl
divb
cmp
dec
sub
enter
lret
into
arpl
test
mov
xchg
mov
sub
jb
mov
das
sti
sub
arpl
xchg
mov
mov
xchg
std
fdivl
js
rorl
dec
and
push
stos
mov
cmp
xchg
ds
adc
ret
scas
iret
fbstp
adc
nop
rcrl
push
mov
mov
incl
mov
dec
dec
out
aaa
stos
jb
lea
outsb
decl
jne
imul
push
xor
fsubrl
jb
pop
cmpsb
jnp
stos
int
xchg
sahf
add
cld
lock
rorl
adc
pop
es
sbb
mov
lods
and
outsb
or
cmc
dec
lahf
mov
jbe
stos
cmp
dec
pop
xchg
repnz
and
jbe
pop
xor
sbb
test
or
sti
adc
stc
cmpsb
mov
sub
pusha
scas
xchg
cmp
nop
inc
scas
push
xchg
push
xchg
rcrb
sbb
je
pop
rcl
mov
lcall
js
xchg
ret
mov
gs
jb
lock
sbb
add
sbb
xlat
jne
mov
mov
push
inc
lcall
cmp
lahf
inc
xchg
cmpsb
mov
push
lds
enter
or
out
int3
inc
ret
mov
jb
inc
lret
int3
or
sti
insl
push
adc
jecxz
adc
pop
mov
add
pcmpgtd
lcall
sub
aaa
and
fstps
sbb
xchg
mov
std
xlat
scas
xor
adc
mov
xchg
inc
jle
push
sbb
in
popa
sub
fstpt
mov
testb
pop
sub
jge
pop
ret
push
sbb
sub
cmp
jb
jns
gs
leave
cmp
mov
and
xchg
lahf
sub
les
sub
xor
mov
leave
orl
mov
iret
popa
pusha
outsb
mov
lcall
in
mov
adc
cmc
pusha
sub
out
mov
jno
sub
jne
daa
mov
jnp
xor
out
clc
add
lds
icebp
and
in
int3
pop
or
mov
mov
xlat
addr16
jnp
xchg
pop
fsubrl
mov
mov
aas
jb
pop
ds
lock
inc
cmp
jno
sub
and
pop
pushf
stos
fs
cli
mov
sti
xchg
test
icebp
ret
cmpl
inc
rorb
cltd
clc
rorl
adc
daa
cmp
xorb
int
aad
loopne
mov
cmp
rorl
mov
sbb
shrb
divb
mov
cli
push
sub
inc
mov
mov
push
add
mov
ds
jmp
xor
cmp
aad
push
daa
adc
mov
cmpsb
enter
cmp
into
cmp
mov
imul
mov
outsb
push
cli
out
iret
cmp
je
clc
dec
inc
mov
repz
sub
outsl
ret
imul
frstor
loope
inc
xor
imul
test
xchg
jmp
inc
stc
xor
js
push
and
sbb
mov
push
cmpsl
lock
sub
or
inc
or
sub
mov
jecxz
mov
pusha
or
sub
xlat
mov
jbe
jg
or
inc
ret
mov
fwait
xor
jnp
in
mov
test
mov
test
mov
pop
mov
xorb
jecxz
adc
dec
mov
loop
unpckhps
mov
ja
add
cmp
lea
dec
sti
mov
dec
jg
lea
adc
inc
cltd
mov
mov
int
js
das
pop
ret
in
inc
pop
mov
arpl
fistpll
cmc
or
hlt
adc
pop
push
pop
je
jo
lods
lret
iret
mov
daa
and
push
jl
ds
out
cmp
shlb
dec
sbb
in
add
ficoml
sub
cmp
xchg
cmp
sbb
sub
int
push
mov
cltd
frndint
bound
loope
inc
imul
into
dec
cs
test
xor
cld
jp
push
and
dec
imul
and
adc
mov
frstor
in
xchg
mov
sbb
ret
jae
int
sbb
ss
xor
es
orb
and
negl
sbbl
lahf
cli
add
or
jae
sti
std
push
fwait
stos
xor
sub
push
adc
pusha
xchg
into
rclb
jg
aas
imul
je
add
xchg
jne
push
xchg
xchg
test
mov
pop
movsl
mov
pop
scas
mov
sahf
and
fsubrl
subb
sahf
xchg
ret
mov
mov
xchg
out
movsb
add
adc
mov
cmp
dec
loop
and
mov
ret
mov
es
in
int3
cli
and
pop
sbb
ss
add
and
icebp
ljmp
add
das
stc
or
mov
and
or
push
aas
mov
gs
lods
invd
clc
aam
xor
movb
mov
imul
lods
clc
aam
je
out
aas
loope
mov
sub
mov
adcl
dec
faddp
aaa
arpl
fcomps
into
das
fistps
add
and
lods
clc
mov
loop
xchg
cmpl
xchg
mov
cltd
shrl
mov
test
add
xchg
shlb
cmp
mov
lods
adc
lea
int3
or
sub
shrb
sbb
or
stos
push
shr
adc
jecxz
push
test
pop
daa
or
loope
ffree
inc
inc
ffree
outsl
and
pop
fnsave
mov
cmp
and
ja
ja
mov
imul
xor
stos
xor
orl
rcrl
cmpsl
mov
inc
ja
pop
cmp
push
mov
fisttpll
imul
or
adc
push
jno
or
sti
in
into
enter
rcll
sub
and
mov
xchg
or
xchg
or
movsl
mov
fisttpl
mov
fistpll
adc
sbb
add
popa
or
out
inc
jl
in
and
cmpsb
cltd
out
js
ret
or
insb
int3
sti
xor
lea
sub
cli
cmc
sahf
rcll
mov
movsb
and
bound
imul
lcall
clc
inc
dec
adc
mov
push
lods
decl
inc
mov
movsb
jnp
lahf
fstpl
push
insb
lret
popf
mov
aam
push
and
pusha
or
cltd
pop
enter
mov
lods
dec
sub
cwtl
inc
outsb
add
cmpsb
and
or
xchg
fwait
push
mov
jno
mov
mov
iret
in
jge
call
mov
test
or
fs
mov
cmp
stos
loope
xchg
or
inc
outsl
mov
fcmove
and
jno
inc
lret
pop
push
cwtl
push
sbb
shrb
sub
cmp
jle
jp
pop
xor
sub
xchg
lret
adc
jo
sub
out
xchg
dec
roll
movsl
sbbl
loopne
int
adc
out
push
xor
xlat
mov
ss
jno
jns
cmc
lods
xor
pushf
pusha
arpl
int
loopne
add
gs
push
and
add
xchg
int3
in
clc
insb
cld
mov
mov
test
adc
ret
std
xchg
int
or
pop
push
sbb
mov
aaa
mov
lahf
mov
xlat
fistpl
pop
push
jl
stos
sub
gs
pop
push
cmc
xchg
pop
movsl
ss
sub
ss
inc
rorl
clc
outsb
out
sbb
push
int
idivl
data16
hlt
ds
scas
sbb
and
sub
and
test
jecxz
and
sub
adc
inc
int
pop
sarb
add
dec
inc
scas
es
ja
push
mov
popa
sub
lods
call
das
rcll
jo
aas
pop
popa
xor
sbb
lock
cmp
ljmp
aam
xchg
jecxz
jecxz
andl
sub
jge
or
cmp
mov
imul
xchg
pop
dec
lcall
loope
rcrl
mov
dec
dec
cld
data16
test
xchg
push
push
sub
notb
daa
andb
cs
xchg
xchg
mov
stos
adc
movsb
scas
or
pop
ret
clc
add
cmp
fisubs
lods
out
cltd
and
cmpb
mov
popf
in
call
fldl
xchg
xchg
out
pop
add
lods
and
inc
sub
jae
int3
rcrb
es
in
ss
pop
gs
mov
xlat
jmp
js
xchg
popa
jge
mov
pop
cmpsb
jl
adc
or
jo
pop
mov
rorb
and
andl
push
idivb
iret
xchg
jp
in
cmp
sbb
cmpsl
jge
pop
aad
das
dec
xor
xor
push
xor
cmp
xchg
and
pop
pushf
movsl
and
lock
inc
test
js
lahf
popf
cmp
mov
cmc
sub
pushf
outsb
in
push
rcrl
mov
aas
adc
lret
into
out
inc
push
and
push
pusha
jp
pop
cmp
inc
rorl
imul
movsl
sahf
outsl
aaa
mov
or
cli
pop
inc
insb
mov
mov
pop
adc
ja
sub
xchg
push
lret
xor
cld
insl
aas
test
mov
es
icebp
in
pop
aad
fsubr
mov
xchg
jbe
js
sub
xchg
or
and
dec
ret
fwait
sahf
mov
rclb
mov
int3
lahf
xchg
fs
ror
ljmp
adc
cmp
fimull
das
pop
xlat
jle
repz
mov
jecxz
jle
mov
sbb
in
mov
mov
shrl
jnp
pop
shrl
lahf
pop
inc
icebp
out
sub
adc
lahf
cmc
jae
rcll
sarb
addb
aad
das
int
dec
pushf
into
jns
fstpt
dec
pop
xchg
cmp
inc
mov
adcl
sahf
mov
imul
imul
push
repz
mov
fsubrp
mov
dec
and
push
and
sbb
adc
push
std
fsubrl
mov
sbb
xchg
xchg
pop
add
lcall
call
fidivrs
mov
sti
xor
idivb
dec
fwait
mov
mov
or
mov
cmp
ljmp
js
ljmp
enter
aaa
jge
xchg
add
sub
lea
outsl
add
and
lock
jne
aam
adc
lcall
lret
jo
jle
rsqrtps
xor
aad
or
mov
aam
sub
or
bound
lret
inc
add
or
loop
shl
add
push
push
inc
xchg
jl
bound
mov
xchg
sbbl
nop
int3
jg
jp
sub
xchg
push
push
cmp
fistpl
mov
push
bound
fwait
lcall
shl
mov
mov
rcr
daa
mov
out
mov
popf
fnstenv
pop
mov
cmp
repz
and
inc
dec
fldenv
jmp
sub
addr16
mov
xor
ret
js
jb
shll
shl
bound
int
push
js
xor
add
jecxz
sub
test
jp
dec
fimuls
flds
inc
pop
ret
push
sub
loopne
sub
out
test
dec
addr16
pop
repnz
ficomps
pop
pop
pop
leave
cwtl
mov
fwait
sbb
jnp
inc
xor
push
sub
dec
mov
jmp
sub
add
testb
fdivrs
add
rol
fcomps
and
aad
lock
mov
bnd
mov
loopne
mov
add
stc
js
mov
int3
rcr
add
push
or
cmpsl
sbb
xor
mov
lret
sub
adc
or
cmp
push
sbb
fisttpl
pop
lcall
push
push
fiadds
cmpsl
ret
test
test
push
or
int3
out
mov
loope
mov
pavgb
mov
sbb
adc
xor
cmpsb
loop
mulb
push
imul
stos
cwtl
fwait
into
pop
mov
js
pop
push
rcrl
insl
sub
mov
das
sbb
push
push
xchg
js
loope
gs
icebp
dec
outsb
pushf
pop
jo
add
lahf
mov
pop
dec
pop
mov
ret
loop
loope
stos
dec
aad
movsb
xchg
mov
in
mov
and
outsl
les
mov
sub
xchg
repz
push
mov
jmp
xchg
xchg
jl
and
adc
jns
in
movsb
cmpb
sbb
push
xor
push
pop
xor
lds
imul
adc
mov
add
mov
cmp
in
imulb
sub
mov
adc
out
mov
dec
jbe
repnz
movb
subb
dec
repnz
shrl
bound
mov
jmp
xchg
imul
xor
mov
cld
hlt
sbb
repnz
xchg
testb
mov
insb
cmp
loope
aas
xor
pop
sbb
jo
add
pop
ds
fmul
neg
pop
lea
fbld
mov
xor
xchg
mov
mov
dec
xchg
jge,pt
mov
cmp
xchg
shll
xchg
adc
lret
popa
clc
xor
inc
sub
dec
push
cmp
in
mov
fstps
and
mov
out
jns
cmp
leave
bound
dec
or
es
subl
aaa
pop
popa
or
cmp
sete
xor
cmpb
les
nop
pop
mov
mov
test
mov
fdiv
push
lret
mov
mov
leave
xchg
adc
inc
push
aad
pushf
mov
cmp
in
mov
loopne
pop
rcrl
out
lret
jp
xor
insl
add
imulb
in
js
cli
inc
add
pop
mov
adc
or
shlb
arpl
sbb
sub
lods
fnsave
push
mov
push
cltd
push
cli
xchg
mov
inc
xor
movsl
xchg
adc
mov
jnp
dec
jmp
mov
out
cmp
adc
fdivl
mov
dec
mov
fmuls
imul
test
pop
pop
push
sbb
call
inc
movsb
fldpi
cmpsl
mov
xchg
int3
or
and
xchg
scas
cltd
or
fcomps
cmp
inc
stos
hlt
adc
add
es
dec
sbb
shll
test
cmp
cmp
ss
cmp
push
out
mov
sti
xlat
inc
pop
insl
sbb
adc
jecxz
call
add
cmp
loop
inc
hlt
dec
and
addr16
mulb
xchg
pop
or
push
lock
dec
movsb
add
inc
mov
add
in
les
daa
xchg
dec
push
test
lcall
imul
or
lods
dec
or
push
in
add
cwtl
pop
ljmp
ds
inc
call
xor
imul
mov
jno
call
or
and
fnstcw
mov
testl
in
jb
inc
push
pop
sbb
and
rcl
incl
nop
stos
mov
inc
cmp
stos
ret
into
xor
sahf
mov
aas
shlb
ljmp
dec
jl
movl
dec
insb
int3
adc
aad
sub
popa
push
jge
arpl
nop
mov
stc
push
lret
mov
addr16
daa
mov
dec
push
data16
xor
loop
mov
outsl
jae
push
jmp
inc
mov
hlt
enter
sbb
pop
imul
sub
inc
or
push
arpl
out
fimuls
loop
cmc
xchg
divl
loop
jbe
jbe
rcrl
inc
insl
ljmp
fwait
push
mov
xchg
jb
jg
adc
push
or
aad
or
call
scas
mov
or
dec
stos
xchg
adc
ljmp
mov
pop
and
scas
dec
or
sub
cmp
jp
mov
arpl
and
mov
loopne
mov
fimuls
and
daa
fistps
mov
stos
loope
in
or
enter
int
ret
add
push
inc
pop
rcpps
outsl
push
mov
jns
popa
xor
mov
lcall
adc
sub
stos
cwtl
xchg
inc
mov
and
lds
xchg
mov
add
lock
pop
clc
xchg
lods
popa
cmpsb
mov
pop
std
sub
ss
imul
jl
push
ret
jb
arpl
out
fwait
rcrl
in
xchg
daa
das
jmp
addb
call
leave
pop
adc
mov
xor
out
xor
mov
dec
dec
sahf
adc
mov
in
mov
nop
lret
adc
cld
jmp
mov
sub
push
mov
xchg
xlat
jns
cltd
sub
jno
rorl
fsubs
adc
pop
in
cmp
std
dec
roll
in
inc
push
dec
mov
xchg
dec
pop
mov
loop
sbb
mov
xor
mov
hlt
pop
enter
push
sbb
or
dec
outsl
jnp,pn
or
repnz
xchg
xchg
popa
and
insb
mov
movsl
jns
aam
pop
mov
lcall
lods
call
ret
push
push
sub
sbb
adc
push
rclb
pop
fs
push
add
rolb
add
addr16
stos
inc
xor
mov
insb
xor
mov
out
imul
push
push
push
xor
xchg
inc
arpl
mov
add
arpl
mov
and
shrl
arpl
jl
sbb
mov
mov
jmp
sahf
addr16
jg
adc
jb
cli
scas
cli
pop
das
inc
dec
fcoms
or
jo
xchg
rol
out
mov
hlt
jp
jmp
cmp
js
ror
fxch
xor
loop
mov
jbe
mov
xor
inc
fbstp
cmc
stos
cltd
sub
mov
sub
push
fnstsw
add
jmp
mov
mov
imul
aam
xor
inc
xchg
push
cs
shr
xor
lret
mov
mov
sub
sbb
cmpsb
dec
and
jo
testb
into
arpl
test
out
cld
shlb
mov
mov
sbb
scas
add
mov
jge
loope
xor
inc
cmp
push
sti
mov
loopne
jp
pop
leave
inc
mov
add
xor
insl
push
loopne
jns
out
push
stos
cmp
sbb
xchg
adc
cmp
pop
adc
xchg
xor
push
xlat
adc
int3
call
addb
out
lret
dec
mov
mov
lock
jb
pop
sti
xchg
int3
lock
outsb
add
test
jl
imul
insl
out
cmc
push
adc
lcall
xchg
imul
test
inc
mov
rol
fs
xchg
test
or
mov
insb
pop
arpl
bound
adc
push
mov
mov
aad
inc
cmp
and
out
cwtl
pop
pop
mov
mov
adc
push
cltd
mov
int
and
mov
aam
sub
xor
gs
push
stos
and
jle
dec
or
inc
aam
cmpsb
dec
fld
lahf
dec
add
cmp
addr16
or
les
repz
pop
xchg
mov
out
cmp
outsb
push
fisubl
rclb
pop
enter
lods
pop
popa
bnd
loopne
pop
in
ljmp
insl
sbb
lret
fcmovu
pop
sub
imul
adc
add
xor
dec
ret
cmpsl
push
mov
pop
sub
shlb
repnz
cli
inc
adc
dec
decl
movsb
sbbb
xchg
pop
add
add
clc
adc
sti
xor
in
ret
les
lret
int
mov
into
aaa
xchg
aam
add
xchg
les
or
hlt
push
adc
mov
push
inc
lock
std
inc
inc
jnp
out
mov
sub
mov
add
sbb
or
cmp
xchg
lea
or
enter
push
sub
push
int
lahf
sub
shl
sarl
cmpl
jmp
ds
jns
imul
jnp
cmp
mov
lcall
adc
add
xchg
mov
xchg
icebp
and
inc
stc
xor
in
jle
dec
xor
push
cmp
mov
and
adc
sub
outsb
lcall
daa
push
fldl2t
add
jle
xchg
xlat
aam
mov
mov
subb
xchg
es
sub
dec
psubb
or
das
stos
movsb
cmp
mov
test
cmp
inc
dec
ret
insl
pop
sub
insb
test
mov
jb
outsb
loop
mov
mov
xchg
lret
or
fstpl
pop
dec
xor
iret
mov
test
repnz
dec
fwait
bound
add
cwtl
mov
push
int3
mov
addr16
pop
imul
mov
aas
and
int
xchg
ds
hlt
arpl
xorb
jmp
push
pop
fdivr
loope
jnp
sbb
mov
movsb
or
sub
cmp
dec
pop
push
xchg
jae
push
mov
sub
adcl
loope
jb,pn
push
add
mov
push
jmp
or
std
pop
and
shll
xor
ret
inc
xchg
aas
mov
nop
or
jae
arpl
xchg
insl
mov
mov
stos
mov
or
xchg
add
scas
out
jno
icebp
push
inc
leave
cmp
sub
jp
scas
fidivl
add
xor
and
les
dec
mov
dec
push
dec
xchg
sti
mov
int
out
clc
int
cwtl
das
and
push
aam
and
sub
or
fsubrs
out
mov
jmp
ss
fdivs
add
repnz
xor
arpl
lock
ret
pop
lahf
sti
xorl
cmpsl
jnp
dec
push
sbb
stos
inc
loop
push
mov
jg
mov
lea
or
loope
xchg
xchg
subl
pop
das
xchg
rolb
imul
imul
sbb
ret
xorb
mov
mov
gs
repz
mov
add
push
in
test
hlt
mov
out
lea
in
in
push
lret
and
aad
out
jl
jns
sub
xchg
jl
sub
xchg
aas
xor
in
addr16
mov
adc
aad
fsubrs
push
aam
mov
pop
cmp
jns
jg
and
and
mov
pusha
push
cmp
xchg
out
dec
mov
pop
out
xlat
movsb
adc
pop
mov
jo
fsubs
insb
xor
fcmovne
jmp
mov
xchg
imul
ficoms
stos
jg
mov
pop
cmp
xchg
xor
cmpsb
clc
and
imull
add
outsl
mov
int3
adcl
push
inc
push
loop
dec
push
sub
jbe
push
sar
cmp
in
cwtl
pop
or
cmp
lret
push
jae
cmp
xor
or
je
dec
inc
aad
mov
das
jae
xchg
push
mov
dec
push
repz
fs
out
mov
out
inc
das
out
jo
cs
or
pushf
push
cmp
xlat
mov
cs
lock
sbb
pop
add
jns
sbb
push
cmp
mov
movl
aaa
pop
cmp
jmp
mov
sub
or
push
mov
test
xlat
add
stc
cmp
es
inc
mov
mov
jns
repnz
stos
insb
jg
xchg
bound
and
cli
in
pop
je
jmp
adc
cmp
jnp
out
fbstp
test
push
push
xchg
sbb
mov
jge
arpl
loopne
adc
hlt
mov
push
jge
and
in
loope
ret
ljmp
mov
shrl
ror
mov
push
xchg
enter
jge
je
bound
push
sbbb
cmpsl
ljmp
jbe
test
xor
lret
cmp
jb
cmc
adc
dec
mov
push
push
and
insb
adc
das
das
and
fs
cmp
fdivl
jle
test
out
push
sub
pop
dec
mov
sub
lods
leave
mov
ret
dec
mov
xorl
jge
icebp
mov
sbb
stos
loope
and
leave
dec
lahf
dec
push
add
jl
sub
xor
fwait
in
or
add
ljmp
loopne
sbb
rolb
sti
mov
xchg
pop
repnz
push
je
mov
test
inc
pop
in
aam
pop
add
loope
imul
ret
jbe
inc
test
data16
push
push
out
mov
pop
xor
mov
out
fstl
rcrl
imul
cltd
ret
clc
xchg
dec
dec
push
inc
push
inc
xchg
push
mov
xchg
xor
xchg
pop
mov
ss
xor
flds
mov
popf
cli
loopne
loopne
add
call
mov
call
fstpt
or
cmp
xchg
xor
aad
lahf
push
jl
push
mov
push
and
add
jg
scas
shr
xchg
cld
ss
jne
cmp
fdivr
repz
rcll
test
icebp
mov
arpl
fsubl
lea
mov
ficoms
inc
or
mov
xchg
fdivrp
push
add
xorb
jecxz
int
adc
pop
dec
ja
jg
pop
test
push
mov
int
mov
push
cmp
mov
mov
mov
xor
jge
je
frstor
movl
popa
inc
outsb
mov
aam
sbb
xchg
sbb
sub
pushf
xor
sub
fwait
xor
push
mov
sub
jg
pand
mov
cmpsb
movsl
adc
mov
movsl
js
ljmp
insl
arpl
int
jge
mov
cmp
dec
push
inc
push
jne
mov
xchg
lods
fs
rcl
jo
call
cmpsl
jo
dec
sbb
andb
mov
and
mov
sbb
xchg
xchg
test
out
adc
fs
je
sbb
dec
insl
out
add
dec
or
add
push
dec
imull
adc
push
pop
sar
jmp
adc
loopne
cld
mov
jecxz
push
mov
push
add
mov
mov
xchg
int3
sbb
scas
lretw
inc
mull
shll
inc
loopne
out
sbbb
mov
inc
pop
in
popf
and
sub
cmpsb
dec
cmpsb
adc
mov
mov
popa
stos
fstpl
js
mov
es
popa
outsb
sahf
adc
fstpl
or
mov
pop
and
cmp
rcrb
inc
dec
mov
iret
jmp
jne
lret
cwtl
cmp
mov
mov
cmp
push
insb
sub
icebp
add
movsl
push
push
rcr
and
je
insl
cmc
andl
sbb
pusha
shlb
jp
loope
shll
push
add
add
sti
xor
push
adc
lods
add
in
mov
jle
loope
incl
jp
gs
fistpll
and
cmp
inc
lahf
testl
cli
jmp
outsb
mov
inc
mov
stc
ja
gs
sbb
popa
out
sub
in
clc
repz
notb
fld
sbb
adc
cli
sarb
jo
mov
mov
hlt
adc
out
jb
adc
jecxz
test
pop
dec
filds
sbb
pop
xlat
ss
into
mov
insb
pop
inc
iret
arpl
xchg
xor
cmc
jno
push
sub
or
paddd
xchg
or
mov
shlb
or
cmp
cltd
jae
cmp
cmpsb
mov
adc
pop
aad
test
add
and
shll
mov
cmp
mov
lret
xor
loopne
xchg
xchg
push
pop
add
shlb
fsubrl
leave
lahf
and
xor
loopne
cmpsl
fwait
cli
sbb
insl
xlat
aas
out
mov
fstps
xchg
mov
xor
mov
ret
stc
mov
push
lahf
cmpsb
pop
cli
ficomps
cmpsl
mov
fists
imul
enter
push
dec
sub
push
dec
inc
pop
in
rcrl
out
popf
push
scas
pop
mov
mov
dec
jge
aas
decl
lods
fisttpll
clc
cmp
and
scas
mov
movb
mov
mov
mov
jp
xlat
fldenv
movsb
sub
pop
ja
jno
das
pop
jae
push
xor
xchg
mov
mov
out
loop
stos
rcl
gs
mov
xor
sub
xchg
xchg
adc
pop
or
rorb
stos
stos
adc
es
push
add
mov
cmp
cwtl
pop
sub
pushf
scas
sbb
rorb
inc
and
jecxz
mov
cmp
inc
mov
add
xor
jnp
push
jl
or
pop
mov
jbe
ret
pop
xchg
filds
mov
add
mov
sub
lahf
or
jne
inc
or
xchg
cmp
mov
pop
sbb
test
jg
xchg
sbb
shll
fdivr
sub
negl
mov
test
cli
mov
dec
push
push
ret
push
fwait
xchg
popf
dec
add
jo
adc
xchg
popf
out
push
jne
add
sbbb
add
shrb
xchg
ljmp
jae
in
sub
pushf
insl
and
mov
cmpl
popa
lret
pop
cmp
loop
cmpsl
push
imul
shll
cmpsl
cwtl
xchg
cmp
scas
cld
loopew
out
or
popa
jp
movsl
cld
fs
call
ror
lods
insl
mov
mov
sarl
cmp
lcall
int3
pop
out
mov
push
pop
adc
mov
ja
mov
es
xor
jmp
leave
fnop
push
cltd
shll
jbe
leave
xchg
xchg
enter
cltd
jo
popa
sbb
cs
cmp
jae
jl
out
outsl
xchg
and
or
ja
push
addr16
jmp
sbb
lret
popa
dec
push
push
in
fistps
imul
out
mov
add
push
dec
jae
dec
push
adc
in
jp
and
test
mov
jne
or
cmpsb
loope
cli
or
ja
lds
dec
sub
les
inc
xor
lds
out
rcl
shrl
aaa
jnp
mov
add
fimuls
and
pop
push
sub
lahf
push
mov
arpl
and
inc
mov
dec
mov
stc
fs
pop
movsl
jmp
jmp
clc
inc
enter
data16
icebp
jno
cmp
lret
stos
es
jl
mov
int
and
dec
lret
ss
sbb
push
ds
stc
cmp
sarl
sarl
add
add
insb
xor
idivb
fs
shrl
lahf
outsl
cmpsb
pop
sub
js
mulb
xor
daa
inc
adc
pop
lcall
icebp
aam
sarl
ror
inc
dec
je
movsb
and
sbb
jae
in
ja
cltd
pop
sub
pop
mov
or
mov
hlt
lret
mov
arpl
add
pop
jge
dec
sub
sahf
jg
fistpll
imull
adc
mov
adc
mov
and
dec
clc
xchg
jbe
xlat
cld
adc
jno
jl
sbb
or
jg
sbbb
lahf
jecxz
dec
push
add
nop
cltd
imul
jmp
in
and
sbb
mov
dec
das
mov
sti
call
aam
out
out
push
cmp
cld
test
ljmp
pop
fdivrl
inc
and
loope
xchg
rorb
add
pop
jns
lcall
repz
jmp
fisttpll
inc
push
or
pop
push
xor
dec
in
std
push
mov
or
mov
addr16
fdivl
xor
lret
push
stc
cmp
popf
test
lret
jbe
push
test
and
dec
mov
dec
imul
rcl
fistps
inc
andl
repz
imul
push
jp
pushf
lea
daa
or
or
lcall
sbb
icebp
or
adc
mov
push
in
lcall
call
in
adc
and
add
stc
mov
and
fsubl
dec
push
sub
aad
push
icebp
jnp
jmp
scas
dec
stos
and
dec
aas
sbb
pop
test
aas
add
iret
push
xor
lret
inc
inc
jne
jp
jns
sbbl
inc
xor
inc
mov
rolb
aas
es
rclb
fwait
sahf
jnp
stos
loop
es
cmpl
mov
mov
jg
and
stos
sub
out
xchg
scas
xlat
sti
jg
push
inc
fists
ficoml
sbb
mov
cmp
ds
das
jmp
or
jle
int3
adc
gs
mov
cmp
inc
inc
out
jecxz
inc
push
rcrb
mov
aad
test
mov
iret
cltd
lahf
push
mov
jle
call
sub
divb
testl
mov
pop
mov
push
xchg
stos
cmp
xor
pop
js
xor
xchg
jb
fcoms
in
cmp
cs
pop
cmpsl
mov
sub
ret
ret
push
inc
cmp
into
jno
mov
adcb
xor
fisttpl
lods
inc
lods
pop
cmpsb
and
cli
xor
cmc
dec
push
fmull
int3
jmp
push
jb
addr16
imul
cmpsl
adc
das
jb
lret
cmpl
mov
cmp
cmp
push
cmp
add
fsts
ds
xor
or
repnz
mov
push
std
lcall
daa
push
jl
push
scas
iret
pop
dec
insl
je
sti
repnz
jmp
inc
mov
xor
xor
mov
test
xor
or
mov
jo
mov
ss
ljmp
adc
cmc
mov
dec
push
stos
mov
in
jns
adc
lahf
ret
nop
insb
dec
push
xor
xchg
je
adc
sbb
test
pop
cmpsb
sub
stos
adc
aas
lods
js
insb
mov
ljmp
movsl
test
bound
cmp
jb
jle
insl
in
xchg
jo
out
ret
adc
push
pop
scas
fdivrl
fs
jg
add
mov
mov
test
push
ljmp
iret
jecxz
pop
aaa
cmc
rcrl
add
hlt
inc
jbe
dec
sbb
mov
imul
rclb
mov
test
adc
or
pop
test
ja
frstor
or
jb
rclb
and
iret
lret
xor
xchg
into
pop
notl
dec
ja
mov
popf
or
loope
hlt
inc
pusha
icebp
jae
and
inc
in
enter
mov
inc
jns
sbb
insb
ss
hlt
in
std
and
jle
ret
mov
cmpsb
fbld
incl
int3
adc
pop
out
repnz
aas
or
sub
scas
pop
in
adc
mov
jmp
sbb
fwait
xchg
cwtl
push
mov
fdivr
rol
fimuls
dec
sbb
xor
push
cmp
mov
mov
pop
pushf
int3
inc
cmc
adc
out
loopne
nop
out
jmp
mov
test
pop
mov
push
cld
in
xchg
in
xchg
es
inc
loope
outsl
adc
adc
push
push
and
faddl
sub
pop
sub
and
mov
inc
xchg
std
cmc
adc
lods
dec
mov
mov
pop
popa
out
push
or
lahf
jl
outsb
add
arpl
mov
jmp
push
fs
dec
inc
loopne
jge
out
fwait
insl
out
lahf
sub
lcall
lods
pushf
stc
inc
in
cmp
sbb
testb
mov
fisttpll
andb
mov
cmpsl
mov
cwtl
or
stos
mov
pop
dec
mov
shl
sub
ds
or
push
lret
test
shrb
jae
in
add
mov
cmp
roll
into
sub
in
cmc
mov
dec
mov
xchg
orb
dec
xor
ja
out
fsubrs
jae
sti
xchg
cmovl
outsl
push
dec
rol
cltd
jle,pn
cmp
push
sub
sub
imul
stos
jnp
jmp
daa
jns
pop
mov
jle
lcall
cmp
fdivp
xor
sti
adc
loope
imul
and
repnz
lds
outsl
or
mov
or
sbb
pop
int
repz
push
fucomp
adc
jnp
mov
ja
and
and
dec
fcmove
xchg
or
jo
std
insb
in
mov
mov
sti
in
shl
pop
mov
cmpsb
loopne
sarl
inc
js
je
test
and
in
or
loop
push
cmp
adc
add
aaa
ss
push
dec
scas
adc
sbb
xchg
test
pop
stos
je
fistl
push
sub
adc
leave
stos
xchg
outsl
mov
mov
addb
push
outsb
stos
ret
cld
ds
icebp
cmp
push
movsl
or
mov
shrb
rcll
and
popf
dec
pop
xchg
loope
andl
mov
mov
dec
shlb
enter
movl
lea
xchg
insb
and
cmpsb
movsb
lcall
out
std
jae
and
pop
outsl
in
pop
xchg
lods
and
pop
orb
lret
mov
add
mov
sti
adc
mov
ljmp
sub
insb
loopne
scas
repnz
pop
pop
mov
sbbb
push
incb
ss
mov
mov
lds
mov
xor
pusha
shll
pop
lods
dec
push
sub
cmp
das
add
xor
out
cs
or
pusha
jne
and
cs
pop
mov
jecxz
xor
pop
adc
push
lea
jno
sub
hlt
scas
cltd
mov
in
cmp
add
jle
mov
jl
sbb
sahf
mov
inc
in
cmp
xor
push
xor
cmpsl
jecxz
jecxz
in
orl
push
lods
or
scas
insl
xchg
xor
mov
jo
sbbb
aas
dec
int3
adc
adc
mov
fwait
stc
cwtl
or
jo
sub
jmp
int3
jb
popf
inc
jl
mov
and
sub
movsb
cmp
cmp
mov
jno
popa
imulb
aam
inc
aas
mov
xchg
icebp
add
test
sti
push
mov
in
sbb
mov
rolb
rcll
inc
lods
fs
stc
repz
popa
and
pop
xchg
daa
sbb
out
imul
mov
xchg
xchg
fwait
out
into
mov
enter
lret
movsb
lahf
bound
das
call
inc
stos
sub
nop
push
aaa
jno
mov
push
adc
cmp
test
fwait
ret
xor
push
pop
orl
popf
jl
enter
push
ds
mov
fwait
cmp
mov
loopne
lods
mov
mov
and
sbb
xlat
ret
jmp
mov
lret
xchg
mov
xor
mov
subps
sub
dec
cmp
mov
mov
cmp
sub
xorb
jle
bound
cmp
pop
cmp
icebp
cltd
push
andb
mov
and
push
repnz
xchg
ret
divb
jno
mov
jnp
call
xchg
bound
mov
aas
pop
out
mov
sbb
add
add
inc
xor
cmpsb
mov
mov
mov
adc
in
mov
je
mov
enter
inc
cmp
nop
xchg
xchg
sbb
and
data16
pop
inc
arpl
into
xchg
mov
cmp
in
fcoms
dec
mov
add
stos
addr16
mov
nop
cwtl
hlt
push
sbb
repz
sub
xorb
push
jne
test
lcall
jecxz
clc
fisubrl
loope
pop
fisttps
cltd
dec
xchg
jo
xchg
mulb
pop
inc
mov
loopne
mov
fsts
add
ret
jae
pop
insb
push
or
mov
arpl
movsl
call
inc
jecxz
pop
jl
sbb
lods
sbb
pop
mov
jo
fcoml
pusha
bound
mov
inc
pusha
lret
mov
ret
and
inc
cmp
cmc
and
xor
test
mov
add
or
xchg
sbb
lods
jns
xchg
or
mov
bound
ret
scas
out
cmc
les
insb
mov
jg,pn
lcall
xchg
jns
scas
add
xchg
push
lcall
aad
imul
insl
test
call
pushf
xchg
in
test
dec
icebp
mov
js
jns
adc
ficoms
subl
imull
shrb
test
mov
mov
mov
stos
shll
repnz
cmp
pop
imull
lock
mov
mov
repnz
fidivs
out
int3
pop
hlt
mov
subl
mov
adc
lcall
push
adc
idivb
fdivp
add
dec
add
mov
add
xchg
sbb
cwtl
push
mov
and
xchg
mov
aam
push
outsl
lret
jne
jb
cmc
xchg
lds
jb
and
dec
ss
enter
mov
in
jmp
in
or
lret
push
roll
xchg
std
jno
xor
pop
mov
pop
aas
mov
jmp
dec
frstpm(287
sti
jp
push
xchg
sahf
mov
pop
mov
mov
scas
add
mov
data16
pusha
in
mov
sbb
out
insl
pop
dec
pop
imul
loopne
mov
dec
cwtl
in
fisubs
es
pop
sub
pop
enter
loopne
push
sub
xor
dec
fimuls
push
std
jecxz
xlat
and
add
dec
xor
adc
dec
pop
push
and
stc
xchg
popa
mov
or
xorb
mov
aas
rcrl
adc
test
shlb
lret
std
ficoms
pop
rclb
lock
inc
inc
adc
cwtl
enter
xorb
push
inc
pop
lahf
aam
pop
mov
cwtl
jbe
ffree
adc
mov
or
std
sbb
outsb
jno
popa
or
lods
cmp
call
xor
cmpsl
or
or
or
aaa
mov
insl
fildl
xchg
in
je
jb
das
cmp
ds
lods
add
jno
pop
lret
push
clc
inc
shr
jo
push
stc
sub
lret
aam
mov
insl
push
inc
outsl
sub
and
cli
sub
js
adc
adc
shl
inc
cmp
test
sub
jbe
fsubrl
rcr
stos
jmp
pop
ficoms
fisttpl
or
cmp
mov
pop
push
insl
push
das
ret
rcr
pop
sbb
xchg
scas
out
inc
mov
cld
push
xor
ljmp
clc
pop
cmpsb
mov
or
inc
cli
inc
xlat
jmp
daa
xchg
and
sbbb
addl
ret
push
adc
stos
cmp
dec
mov
pop
fisubrl
lock
mov
add
jns
adc
lea
push
lret
xchg
inc
mov
in
out
or
mov
enter
mov
out
enter
mov
lods
jl
mov
mov
inc
repz
in
addr16
out
cmp
and
push
iret
xchg
and
dec
cmc
not
xchg
shll
xchg
int
setge
rcrb
ret
dec
mov
xorb
push
push
cmp
rcrl
test
sbbb
rcrb
mov
mov
sub
lock
mov
subb
setp
cmpsb
cwtl
ja
xchg
loope
jne
cmp
xchg
in
or
cltd
mov
lds
mov
and
sub
lret
aaa
test
daa
movsb
xchg
mov
pop
idivb
imul
cli
pop
jno
and
shr
ss
shll
cmp
cltd
pusha
in
lret
push
cmp
cmp
cwtl
mov
xor
lahf
ljmp
dec
stos
inc
scas
lea
fildll
push
xor
cmp
xchg
xlat
out
gs
jbe
add
sbbb
add
aad
sub
jle
inc
pop
shl
pusha
aaa
add
cmp
lcall
mov
fs
inc
fistpl
pop
lret
pushf
cmp
dec
les
clc
std
dec
cmp
scas
sbb
fbld
xchg
pop
push
jp
push
imul
fwait
arpl
ret
sbb
inc
sti
test
push
mov
push
imul
push
mov
adc
outsl
insl
xchg
orb
cld
lods
xor
lahf
in
bound
mov
sub
pop
sub
inc
or
mov
insl
inc
outsl
in
popf
xor
adc
lahf
sbb
cmp
fistpl
dec
cld
mov
sbb
cmp
add
mull
xor
xchg
aas
dec
lahf
add
out
xor
xchg
cmp
inc
pop
out
mov
ret
icebp
jns
cwtl
adc
popf
jns
push
popa
mov
add
lock
test
cmpsl
in
data16
inc
cwtl
jmp
pop
out
or
push
xorl
aam
pop
sar
aaa
arpl
out
sarl
jecxz
insl
addr16
out
xor
push
xor
jmp
aad
int
xchg
das
inc
mov
out
cli
cmp
or
sbb
inc
ficoms
mov
lcall
jg
xor
pop
jge
fildll
mov
sbb
add
mov
xchg
xchg
jecxz
or
xor
in
ret
aam
dec
stos
cmp
jmp
pushf
lods
dec
fmull
fisttpll
out
int
adc
nop
jmp
dec
dec
push
ret
shlb
stos
xor
or
add
cmp
dec
push
and
repz
dec
aaa
pop
adc
loope
lret
outsb
scas
bound
cmp
shlb
mov
jne
inc
cs
or
lahf
lcall
adc
iret
jge
dec
cmp
dec
push
nop
lret
add
cld
dec
clc
and
fs
negb
xlat
pop
dec
xor
rorl
cmp
sbb
pop
testb
daa
cli
push
int
push
mov
cltd
fldenv
in
push
and
inc
ret
es
mov
xor
cmp
inc
pop
sub
lret
sbb
ss
sbb
frstor
aam
mov
lods
sbb
push
dec
mov
call
jno
fisttps
lahf
mov
and
stos
inc
jne
popa
push
imull
push
sbb
push
pop
mov
shrl
mov
xor
aaa
rcrl
push
das
outsb
jg
shll
cmp
adc
dec
mov
call
stc
or
and
adc
ljmp
stos
hlt
mov
in
mov
jno,pn
test
xlat
cmpsl
jle
outsl
hlt
lods
std
lret
ret
popf
and
sbb
fs
imul
bound
daa
lea
je
pushf
lcall
lods
inc
gs
iret
or
adc
or
es
imull
push
sub
push
dec
bound
push
add
dec
inc
mov
sub
xchg
push
fnstsw
shlb
sbb
data16
cmpsl
push
dec
sti
stos
sub
jmp
stos
cmp
data16
sub
testb
ljmp
fldcw
mov
lea
push
jmp
pop
cmp
or
int
roll
pop
jmp
jb
aaa
xor
dec
xchg
and
pop
push
sub
or
int
jp
subl
fsubrl
gs
es
mov
dec
or
bound
stos
sti
enter
int
lahf
mov
repz
nop
push
out
mov
or
xor
inc
mov
loopne
lods
mov
aam
xchg
mov
cmp
mov
pop
push
push
aaa
call
lahf
lcall
lret
sbb
sub
mov
ret
call
std
dec
lock
cwtl
push
rcll
mov
sbb
lret
in
ret
fs
sahf
xor
xor
cmp
and
in
ds
pop
push
push
insl
test
add
fldenv
mov
ret
nop
cmp
shr
cmc
test
cld
lret
arpl
daa
push
push
jbe
std
add
imul
sbb
fucom
xchg
pop
pop
std
lret
add
into
cltd
pop
loope
xchg
stos
dec
out
movsb
rorb
fstps
lret
fcomi
mov
fcomps
push
out
scas
movsb
or
lds
stos
test
cmp
inc
aam
pop
jne
push
jnp
mov
fistl
adc
enter
or
lea
sub
out
lods
adc
inc
addr16
sbb
test
sahf
inc
add
or
fimull
adc
and
or
repz
test
ret
adc
test
data16
jns
repz
jge
cmp
mov
insb
cmp
dec
icebp
fisttpll
push
les
jg
rcr
fs
mov
or
imull
jno
stc
test
jo
mov
nop
out
cmp
xchg
test
icebp
test
std
pop
and
jne
cmp
push
test
sub
fdivrs
pop
lret
mov
mov
popa
dec
repnz
inc
pop
arpl
fildl
stos
mov
movsl
leave
xchg
adc
out
pop
lods
lcall
fs
popa
jecxz
pop
or
enter
xor
imul
sbb
sub
and
xchg
rol
fwait
and
push
xchg
gs
imul
or
cld
xchg
inc
cmpsb
in
adc
cwtl
push
dec
push
mov
mov
pop
jns
pop
stos
cwtl
movsb
mov
pop
stos
dec
ret
or
xor
fistpll
jno
sbb
jbe
scas
xchg
pop
int3
cs
popf
jp
lret
enter
push
mov
cmp
in
mov
das
add
add
mov
fs
xchg
je
in
lahf
and
cmp
adc
sbb
cmp
ret
jae
fwait
pop
out
in
ja
in
adc
xlat
or
sbbl
adcb
in
xchg
mov
insb
mov
push
cmpsl
stos
aad
mov
mov
je
cmp
scas
mov
and
icebp
xor
lea
cltd
cltd
repnz
push
jno
loope
adc
sbb
lret
or
mov
test
imul
and
nop
pop
stos
mov
out
cmp
hlt
xor
scas
js
orl
ret
and
out
aad
aaa
cli
jp
test
sbb
insl
outsl
cmpb
out
movb
cmp
or
push
push
sbb
das
add
inc
fwait
inc
sbb
pop
loop
cld
mov
mov
sub
int
push
clc
mov
xor
pop
ljmp
mov
sbb
mov
xchg
inc
add
pop
inc
fldl2t
hlt
add
adc
mov
out
stc
ja
push
sbb
fnsave
jnp
mov
stc
jmp
lahf
push
mov
pop
pop
mov
sub
pop
inc
sub
out
test
adc
jb
fldl
and
mov
pushf
les
jbe
jnp
repz
outsb
adc
arpl
insb
incl
nop
jecxz
mov
stos
pop
push
popl
mov
hlt
data16
gs
popf
mov
mov
push
repnz
sbbl
aad
jns
out
test
push
mov
mov
inc
roll
lret
adc
mov
or
out
jl
stos
lds
roll
leave
int3
push
movsl
mov
es
push
jnp
pop
in
or
adc
je
sub
or
and
mov
aaa
xchg
negb
sub
lea
pop
adc
mov
push
and
imul
dec
int
jne
stos
andb
ja
nop
jecxz
dec
data16
js
dec
outsl
adc
and
mov
lds
xor
ret
test
inc
or
sbb
sub
jns
stos
mov
mov
jae
dec
jge
add
loopne
or
pop
push
sub
mov
mov
push
sub
shr
inc
add
into
outsb
push
push
aam
xor
jnp
imul
imul
cs
sbb
adc
inc
cmc
gs
enter
xor
xlat
jnp
stc
sbb
inc
fs
xor
mov
and
jmp
dec
icebp
ljmp
shll
sbb
mov
scas
mov
lcall
pmaddwd
sbb
push
cmp
aam
aas
shlb
mov
jno
dec
movsl
rdtsc
add
in
xchg
pop
push
jecxz
sbb
sbb
sbb
mov
mov
cltd
add
call
sbb
pop
lahf
andl
cmpsl
inc
or
dec
push
fbld
push
pop
push
mov
pop
movsb
or
fs
adc
inc
sbb
sbb
xchg
nop
jbe
imul
cld
mov
cmp
pop
sti
add
jmp
scas
adc
out
mov
dec
push
push
or
in
sbb
or
xchg
arpl
mov
fcom
popa
addl
or
insl
icebp
jnp
std
fs
ret
lods
fistps
neg
stos
jbe
or
cs
xchg
out
jb
nop
jl
pop
add
ret
fwait
xchg
cmp
gs
cmc
push
sarl
sub
xor
inc
jecxz,pn
push
jns
fadds
mov
aam
pushf
adc
mov
aaa
sbb
adc
push
dec
pop
mov
gs
cmp
fwait
inc
pop
jb
adc
je
lea
push
push
mov
jmp
inc
outsb
xchg
lcall
push
dec
xor
jp
or
lea
mov
popf
loop
xchg
cmp
cld
rorb
lcall
xor
lcall
xchg
sub
pop
aas
loopne
xor
cmp
bound
int3
lret
sub
xchg
ret
or
movsl
lods
jne
loopne
jae
inc
popf
mov
fimuls
and
mov
ret
std
insl
xchg
movsb
jnp
push
icebp
push
mov
dec
pop
add
out
mov
jmp
add
test
js
pushf
lods
lea
cmp
sbb
jl
xchg
adc
cli
fsubs
cmp
das
cs
je
je
mov
lods
cmp
sbb
insb
adc
xchg
sub
or
cmpl
cli
jne
lret
xlat
and
je
jae
push
adc
shlb
pop
jb
dec
jmp
ficomps
inc
dec
push
sbb
cs
fcmovnbe
adc
stos
out
aas
pop
inc
test
inc
hlt
mov
je
ljmp
and
mov
sbb
jl
jge
push
sub
and
pop
cs
imul
push
xor
mov
sbb
xor
not
jge
push
xchg
sub
mov
add
push
pop
lods
xchg
add
vhsubpd
and
fiaddl
dec
inc
rep
mov
fmuls
cmp
jp
and
jno
enter
lods
xchg
inc
iret
push
mov
mov
jge
sti
adc
push
imul
test
cmpl
cld
cmp
addb
push
dec
insb
pushf
cmp
pushf
mov
pop
push
insb
sub
roll
cmpsb
mov
in
xor
xor
add
xchg
out
mov
inc
call
xchg
push
lcall
xor
inc
pop
aad
push
outsb
cmp
aad
or
movsb
test
add
xchg
cmc
out
rclb
movsl
adc
dec
jecxz
xlat
dec
adc
lods
xchg
push
rcrl
and
xor
sbb
scas
sbb
out
rclb
pop
popa
push
and
lods
cmc
dec
adc
int3
ret
add
cmp
jo
fsubrp
xor
clc
add
jp
outsl
xchg
mov
dec
and
jle
sarb
xchg
xor
out
adc
in
gs
dec
lea
lcall
or
push
scas
mov
out
pop
mulb
call
popa
inc
insl
pop
lods
nop
roll
inc
ret
adc
dec
jae
lahf
popa
or
xchg
mov
in
movsb
sbb
push
pop
les
push
jg
xchg
repnz
xchg
sbb
cmp
sub
inc
push
sub
xchg
pop
pop
and
add
out
sahf
fcoml
cmp
xor
push
and
out
ret
ror
and
or
lret
call
lock
jmp
sub
jmp
adc
sti
adc
ja
and
adc
xchg
test
or
mov
and
mov
out
jmp
push
notl
rcl
xor
mov
lods
sbb
or
scas
xchg
ror
xor
sahf
lods
out
and
sbb
scas
scas
dec
sti
jp
hlt
insl
dec
push
and
cmp
repnz
sbb
popf
lock
lock
pop
xor
xchg
xchg
mov
out
xlat
mov
xchg
mov
fldenv
iret
lahf
mov
ja
mov
loop
nop
aas
mov
test
rcl
pop
lea
in
stc
lret
mov
outsb
rcrl
xchg
inc
mov
push
out
loopne
test
lahf
mov
clc
xchg
mov
stc
push
pop
movsb
mov
cmc
add
je
xchg
adc
je
lods
dec
dec
push
pusha
outsl
into
sbb
mov
je
arpl
enter
jge
pop
sahf
loope
cmovae
lcall
test
fistps
or
jg
addb
sbb
fcomip
call
out
dec
shld
aad
rcrb
fisubs
fcoml
mov
test
js
jge
lret
inc
out
out
movsb
fildll
fcmovu
push
popf
mov
andb
sti
pop
add
mov
pop
sbb
adc
fidivrl
shrb
push
xor
dec
push
lods
fadd
out
stos
imul
xchg
cli
scas
jbe
pop
jg
mulb
ja
add
push
imul
mov
jl
fnstenv
adc
ret
inc
inc
insb
inc
call
pop
mov
rclb
pop
inc
cmc
and
test
and
mul
aaa
lods
dec
stos
or
fidivs
add
inc
ret
decl
push
leave
add
add
lods
nop
xchg
adc
push
or
fstpt
jns
mov
das
out
mov
lds
lods
add
cld
push
aaa
xorb
add
sbb
adc
dec
outsl
clc
xor
sbb
jle
mov
std
test
mov
movsb
rcl
stos
nop
jbe,pt
sbb
ja
mov
ja
xor
mov
fisttpll
cli
loope
pop
gs
int
movsl
movsb
jg
adc
cmp
add
mov
loop
pop
mov
mov
push
fadds
test
lods
iret
push
xchg
sarb
jmp
jns
jl
jp
loope
aas
jmp
xchg
inc
mov
or
cmp
insl
push
and
push
ret
jl
movsb
ljmp
adc
push
cmp
in
int
lcall
jecxz
sbbl
dec
lret
sbb
repz
xor
dec
dec
shlb
push
jns
jb
mov
add
lock
and
into
dec
outsb
xor
pop
sbb
push
pop
fstp
lahf
dec
rol
sbb
mov
xor
aam
pop
in
pushf
stos
inc
pop
jnp
cmpl
mov
aaa
call
imul
push
cmpsl
sub
call
pop
subb
push
inc
cmp
dec
stc
fwait
sub
adc
push
enter
int3
add
pop
add
xor
adc
jnp
and
clc
lcall
test
jge
rcrl
push
pop
add
outsl
jne
out
daa
lret
xchg
fld
jle
mov
mov
out
stc
std
f2xm1
lock
jae
sbb
nop
jecxz
loope
mov
mov
aam
shrb
stos
sub
cmp
xorb
jo
cli
mov
mov
and
imul
addb
testl
testb
xorl
fidivl
add
lahf
clc
pop
fidivl
mov
sbb
lret
test
xor
cmp
fnstsw
dec
push
fnclex
lret
or
inc
jnp
pop
flds
pop
pop
sub
inc
mov
inc
pop
xor
popf
insl
pop
nop
or
out
imul
sub
mov
mov
leave
cmpsb
fnsave
or
movsl
inc
sub
inc
sub
in
divl
shlb
sbb
stos
adc
jbe
hlt
push
push
in
xor
adc
fcoml
outsl
push
mov
jl
mov
push
sub
loopne
cmpl
popf
les
add
lcall
stos
test
adc
adc
out
call
lods
xchg
punpckhdq
bound
aam
aas
jnp
jl
mov
dec
das
pop
jecxz
push
add
out
mov
adc
sub
mov
adc
dec
es
adc
icebp
sub
inc
lret
scas
inc
or
scas
and
add
lods
ret
dec
stos
shlb
sbb
stos
inc
push
out
bound
arpl
pop
leave
xchg
insb
dec
stc
xor
mov
and
je
loop
adc
lcall
inc
xor
mov
test
sbb
cmp
jb
adc
je
gs
imul
mov
call
fistpl
jne
pushf
mov
test
loope
adc
push
fdivr
cmpsb
stc
inc
pop
leave
andb
aad
arpl
push
dec
sbb
adc
xor
cmp
call
andb
mov
and
shrb
outsb
out
mov
out
out
push
push
fiaddl
cmpsb
mov
push
in
jae
sar
cmp
xchg
push
mov
dec
je
jne
stc
and
jbe
push
pop
hlt
into
inc
sbb
mov
in
mov
ljmp
imul
ljmp
add
nop
mov
stc
fnstsw
push
and
inc
mov
and
dec
pushf
sbb
cmp
and
shl
dec
inc
scas
mov
std
cmpsl
and
pop
cmp
xor
xor
pavgw
shll
xor
shl
xchg
mov
xchg
scas
mov
jecxz
push
push
inc
out
movsb
xchg
cmp
cli
or
dec
xchg
hlt
pop
mov
xor
pop
sub
sub
ljmp
cmpb
add
mov
mov
or
mov
or
jmp
xchg
push
lret
ljmp
mov
mov
xor
inc
loopne
scas
imul
aad
inc
loop
jno
mov
notb
clc
sub
mov
push
bound
cmp
bound
xor
movsl
push
das
jg
mov
push
loope
jle
push
stos
aam
pop
jp
sub
inc
xor
je
inc
cmp
pusha
stos
push
mov
int
pop
or
add
jmp
mov
fmuls
and
repz
in
daa
call
int
mov
fs
cmp
xchg
imul
cmp
dec
sub
cmpsb
jnp
push
and
add
pusha
in
movsb
mov
mov
bound
test
dec
jns
arpl
ja
sarb
and
fstpt
fistpll
stos
sub
jno
xor
ja
dec
mov
pop
pop
push
leave
sbb
lods
and
pop
push
ds
xlat
inc
lock
and
xchg
add
sub
sub
pop
push
xchg
sbb
stos
mov
and
add
imulb
mov
sbb
not
loope,pt
push
and
cld
pop
jecxz
popf
aaa
arpl
cmc
xchg
inc
outsl
imul
ds
pop
movsl
fnstenv
movsb
das
push
xor
js
inc
pop
scas
sub
fistpll
inc
adc
sbb
lcall
dec
cmpsl
outsb
mov
das
pop
sub
mov
icebp
scas
xchg
jle
cmp
sub
lods
jno
xchg
daa
mov
dec
dec
sbb
mov
xchg
arpl
jg
cmc
pushf
sbb
cmc
pop
sub
fiaddl
testl
dec
imull
jnp
cmp
inc
cmp
dec
bound
lock
ret
cmp
mov
lret
xchg
sub
sub
fimuls
ds
outsb
push
adc
jge
and
in
pusha
stos
push
cs
arpl
mov
pop
push
and
cmp
jo
mov
sub
inc
iret
push
jg
cmp
repz
testb
mov
sti
imul
cmp
sub
sub
jns
mov
fisubrl
push
scas
test
lods
adc
sbb
jo
test
mov
aaa
clc
jnp
cmp
cltd
dec
daa
lahf
sbbl
loop
pop
add
clc
jnp
pop
pop
jne
inc
popf
lea
dec
sub
rolb
and
into
ffreep
cwtl
push
icebp
xchg
xchg
int
outsl
les
inc
inc
fstpt
mov
sbb
cmp
sbb
insl
pop
mov
sub
pop
add
jl
inc
aas
dec
add
cmp
pop
or
mov
inc
and
bound
insl
jne
inc
push
imul
fnstenv
fbstp
addr16
jmp
mov
or
lods
cmpsl
stc
sbb
es
out
sub
adc
lods
dec
pop
sbb
and
jmp
stos
xchg
dec
xor
pop
mov
stos
mov
movsl
cwtl
mov
fs
mov
lret
popf
push
divl
sbb
std
xor
mov
lret
std
js
lret
add
add
pop
jo
aaa
dec
jge
push
dec
imul
lahf
aas
mov
and
clc
push
repnz
inc
fucomp
pushf
pop
in
or
in
adcl
aaa
pushl
xchg
adc
adc
push
movsl
fidivl
inc
lret
or
ja
or
sbb
cmp
fsts
xchg
xor
xlat
outsb
jnp
ss
xchg
cmc
mov
dec
xchg
std
xchg
jae
mov
leave
xchg
or
mov
imul
cmpb
mov
in
outsb
mov
int3
and
and
cmpsl
mov
push
je
adc
jnp
fucomi
inc
push
rorl
cmp
cmp
jns
mov
push
push
adc
out
dec
cltd
or
jae
xlat
data16
cld
inc
jecxz
out
cwtl
mov
pop
mov
or
addr16
out
or
mov
sub
ds
imul
repnz
loope,pt
scas
xchg
and
add
add
mov
outsl
imul
mov
dec
xchg
or
add
xor
ljmp
jno
call
push
fstpl
sbb
jecxz
jle
fwait
sbb
imul
xchg
and
in
xor
gs
sbb
bound
lret
or
sub
addl
lahf
inc
cmp
cvtdq2ps
je
pcmpgtb
push
das
in
push
imul
addr16
fmuls
std
xor
push
cld
insl
lea
cmp
sbb
sbb
cmp
scas
add
and
stos
jb
test
inc
pop
mov
mov
push
cmp
xchg
add
xor
mov
popa
jmp
or
pop
inc
xchg
movsl
jecxz
xor
add
cmp
mov
fnsave
ret
ret
call
mov
sub
aam
arpl
cmc
push
or
jge
or
mov
xchg
adc
mov
inc
push
popf
and
fldl
push
insl
std
xchg
and
cmp
add
push
cmp
test
sub
sub
xchg
or
xchg
lret
sub
mov
rorl
insb
bound
mov
lods
cmp
xor
mov
roll
push
or
ret
in
hlt
ja
push
jae
in
js
mov
popa
cmp
sti
cmp
dec
add
inc
fwait
sbb
pop
dec
cmp
jo
cmp
in
add
jp
jp
lods
or
mov
mov
mov
lds
es
nop
sbb
aam
jnp
mov
arpl
add
sti
sahf
mov
fs
popa
add
jle
les
add
mov
daa
push
and
daa
lea
cltd
in
jl
or
push
bound
jae
nop
dec
pop
jo
adc
jecxz
and
lret
adc
int
pop
leave
push
dec
mov
jge
cmp
cmpb
sbb
arpl
add
add
cmpsl
pushf
or
cmp
mov
bsf
push
bound
bound
sbb
repnz
mov
xor
rolb
pmaddwd
pop
jmp
test
mov
jnp
cmc
outsl
pushf
lcall
jmp
sub
jle
popf
push
movsb
jo
enter
jno
inc
xor
xchg
jae
pop
lods
fidivs
test
insl
fwait
mov
mov
sarb
scas
movsl
push
rol
jo
ficomps
aas
mov
lcall
mov
adc
lock
add
mov
and
add
lcall
inc
leave
xchg
fldt
jg
inc
dec
cmpsl
pop
test
enter
cmp
xchg
arpl
imull
push
jp
jg
push
mov
fisttps
ss
cmpsl
mov
out
inc
sbb
outsl
jle
sub
fsubs
adcl
adc
subl
cmp
xor
shlb
push
sbb
cs
pop
ficompl
in
clc
xor
fidivrs
pop
pop
rcr
push
je
gs
jno
dec
sub
lock
scas
inc
dec
enter
and
inc
inc
sub
iret
sbb
jo
push
data16
xchg
hlt
mov
js
jecxz
sbb
sub
inc
sbb
test
lods
sub
imul
insl
sub
jp
mov
repnz
ret
pusha
and
and
or
sbbw
imull
movups
or
push
in
cmp
push
in
push
stc
mov
movsb
test
mov
sbb
add
inc
movsl
push
shlb
gs
lods
push
mov
sbb
pop
ljmp
or
pop
jns
mov
hlt
ja
pop
push
jno
ret
adc
inc
ret
xchg
leave
repnz
sub
xor
mov
push
push
fwait
push
pop
call
fcomps
xor
cmp
mov
add
xor
sub
sbb
sbb
jb,pn
sub
cmp
pop
mov
sar
push
and
daa
adc
push
inc
mov
inc
out
andl
push
in
mov
xor
add
sbb
ffreep
lods
sub
jae
pop
pop
leave
lahf
nop
sbb
rcrb
mov
inc
iret
ret
fmull
cwtl
insl
in
movsl
add
enter
mov
jle
dec
aas
xor
popf
fcoms
insl
lods
inc
pop
clc
sarb
mov
jle
push
imul
jns
add
inc
scas
lock
int
jno
loope
jnp
adc
sti
out
js
xor
jo
imul
ss
fistl
pop
push
jnp
pop
movsb
mov
adcb
mov
addr16
movsb
sub
jbe
inc
xchg
sbb
cmp
dec
push
cmp
subl
pop
repz
jb
adc
lea
xchg
mov
or
stc
sbb
inc
ret
mov
jmp
xchg
pop
nop
sbb
dec
dec
mov
pop
lret
shrb
adc
pop
mov
jle
push
rclb
inc
xor
dec
aas
lret
lcall
cmp
inc
cli
adc
test
adc
orb
mov
aad
sti
xchg
mov
cmp
push
orb
into
dec
lds
xor
mov
arpl
adc
imul
xchg
enter
inc
sub
mov
and
shr
loope
sbb
out
lret
adc
pop
fcoml
out
inc
fwait
jmp
cmp
test
imul
mov
mov
xor
cwtl
sahf
adc
cmp
adc
dec
dec
es
fdivr
push
lods
cs
mov
adc
fwait
inc
test
dec
ja
jae
in
xlat
std
shl
fdivl
fwait
test
inc
cs
dec
add
adc
cwtl
xchg
mov
mov
push
cmp
cmp
mov
in
mov
in
pop
jecxz
lock
mov
lock
pop
iret
jmp
cmpsb
cmp
mov
ret
pop
loopne
dec
add
sub
subb
inc
mov
lret
aas
xchg
sar
mov
es
jp
push
out
bound
cwtl
outsl
lahf
pop
outsl
cwtl
sahf
mov
repz
jbe
lods
cli
jbe
inc
jp
cmp
out
xchg
adc
jb
lahf
and
or
xor
mov
lret
hlt
xchg
mov
mov
in
jns
fs
jmp
scas
ret
jmp
mov
push
cmp
test
inc
or
inc
fwait
enter
mov
jg
pop
mov
xchg
sbbb
sub
addl
fiadds
mov
mov
pop
pop
mov
mov
push
mov
push
je
cmp
pop
jmp
mov
sbb
xor
add
repnz
cmc
test
jmp
xchg
lahf
int
add
out
jns
pop
or
mov
int
adc
cmpsl
stos
or
jg
fwait
mov
scas
and
mov
mov
mov
int
push
out
push
mov
jle
cmp
mov
adc
xor
lds
push
mov
fldlg2
lret
hlt
jge
pop
inc
adc
ds
pop
adc
inc
into
clc
push
mov
xor
cmpsb
pminsw
scas
into
imul
sarb
aad
outsl
test
insb
enter
jae
dec
insb
xchg
pushf
jb
fldcw
cmpsb
sub
loop
ljmp
xor
mov
int
jecxz
inc
adc
shll
sbb
dec
bound
cmp
arpl
fidivl
mov
int
inc
add
mov
adc
inc
cmpsb
cmp
dec
fld
fucomp
sub
dec
imul
cmpsl
andb
sbbl
mov
adc
pop
xor
es
inc
jno
add
sub
and
outsl
xlat
mov
out
lds
adc
push
mov
repz
pop
mov
cmp
jbe
xorb
or
negb
push
lret
rorb
inc
mov
add
aad
repz
cmp
mov
enter
int3
cmpsb
pop
mov
or
inc
imul
stos
pop
mov
xchg
cli
daa
add
push
jge
add
aam
out
cmp
daa
lods
cmp
dec
and
sbb
adc
push
sub
inc
cmp
mov
rclb
subl
incl
ret
xor
push
add
pop
xor
icebp
lods
pop
mov
popa
mov
or
sbb
dec
stos
cmp
mov
popa
cli
mov
xor
inc
pop
jno
jnp
cltd
jle
pop
xor
out
jno
cmp
popa
push
jb
fnstsw
mov
xor
cmp
add
and
cwtl
dec
fldl
into
and
and
mov
pop
imul
imul
loopne
xchg
push
xchg
daa
cmp
aad
int
aam
inc
adc
fisttps
int3
orl
or
cmpsl
pop
shl
jo
dec
shl
mov
gs
fnstenv
inc
mov
enter
pop
sub
mov
test
mov
es
dec
mov
lret
add
movsl
loope
jne
mov
aaa
movsb
mov
xchg
adcb
sbb
in
fwait
or
xchg
imul
test
cmp
add
jns
std
jo
hlt
ret
data16
clc
loope
xchg
pop
rcl
div
xchg
jg
pop
push
fmulp
inc
in
push
inc
dec
push
std
je
test
or
mov
sub
push
lahf
cmp
xchg
mov
call
xchg
and
xor
cltd
cmp
pop
inc
add
shld
mulb
sbb
loopne
popf
daa
xlat
and
in
clc
test
add
jno
jnp
add
inc
xchg
pop
cmc
dec
fnstcw
mov
add
push
nop
mov
jle
mov
xor
sbb
pop
mov
mov
stos
lods
pop
icebp
movsl
add
cmpsb
xchg
inc
xlat
xor
insl
out
push
xchg
xchg
scas
imul
rcl
and
jl
stc
adc
jb
fisttpll
adc
or
cmc
sub
xor
repnz
out
mov
sbb
icebp
mov
mov
mov
xchg
and
or
xor
in
push
mov
and
sbb
sub
adc
int3
mov
jl
pop
xchg
imul
mov
push
das
push
jnp
shlb
cmp
iret
xor
lahf
out
sbb
adc
push
mov
stos
lahf
cli
jmp
jbe
or
repz
cmpsl
mov
xor
sbb
movsb
les
xlat
mov
mov
loopne
dec
push
movsl
out
mov
adc
rcll
fisttpl
add
jl
xchg
add
push
xor
out
cmp
fsubl
aaa
pop
pop
xchg
xor
xchg
push
xchg
sub
imul
std
fildll
out
push
cld
aam
xchg
scas
mov
jg
push
lods
shl
pushf
leave
adc
imul
and
sbbb
and
push
sub
out
sbb
popf
push
and
repz
lret
mov
in
shlb
adc
sbb
inc
and
shl
sbb
fs
fcoms
ss
add
jmp
fsubl
arpl
jecxz
mov
mov
adc
shll
xchg
loope
andl
add
push
sub
pop
jecxz
xchg
imul
pop
fsubl
mov
hlt
aaa
adcl
fiadds
jmp
lret
stc
mov
jle
dec
enter
xchg
add
std
xchg
and
push
xchg
fdivr
mov
jl
in
adc
inc
movsl
mov
iret
mov
ds
movsb
sub
jae
push
dec
xchg
cs
pop
or
leave
mov
test
pop
cmc
and
mov
push
mov
imul
push
mov
xlat
js
xor
mov
mov
or
gs
jbe
push
jg
dec
and
sahf
xchg
xchg
pushf
std
sti
inc
popf
xchg
jp
in
push
mov
mov
pop
stc
jns
xchg
inc
rorb
pop
jb
arpl
fdivrl
stos
nop
stos
pop
push
push
addr16
push
mov
mov
pop
and
push
inc
scas
push
jbe
ret
xor
sbb
lcall
and
push
subl
mov
sub
imul
or
mov
or
inc
in
dec
or
stos
fnstenv
es
xor
xchg
imul
cmp
stos
dec
in
inc
pop
sub
inc
mov
popf
xchg
xor
mov
imul
shll
cmp
mov
and
addl
adc
sahf
dec
popf
test
xor
mov
aam
adc
lcall
dec
or
cwtl
loope
dec
cli
jno
divb
mov
popf
mov
popf
popa
inc
out
xor
mov
stos
aad
iret
mov
iret
in
fcoms
pop
mov
push
adc
fcoms
imul
jmp
lods
jmp
stc
mov
sub
arpl
jae
jo
ljmp
mov
ret
jno
out
lret
dec
fbstp
pop
stos
neg
popa
loop
inc
sub
fs
test
pop
sbb
pop
imul
lods
and
inc
push
out
and
cld
leave
push
mov
adc
or
push
je
pusha
xor
add
aaa
cmc
push
aaa
mov
push
repnz
data16
stos
aas
aas
js
sub
sub
push
jmp
pop
ret
mov
xchg
inc
mov
out
negl
lcall
lds
push
data16
roll
dec
sbb
xchg
add
jb
in
dec
adcb
jl
mov
sti
mov
push
dec
cmp
xchg
in
test
comiss
add
jnp
leave
cmp
mov
lahf
ja
and
out
dec
lods
mov
lcall
fmulp
dec
fwait
mov
and
pop
je
mov
mov
aad
movsl
pop
jmp
pusha
push
jno
lds
repnz
popf
xchg
dec
push
push
mov
icebp
and
adc
frstor
fldl
xor
xchg
and
pop
jg
and
lret
outsb
stos
lock
mov
stos
mov
mov
hlt
pop
or
test
and
mov
movsl
jge
jns
cmpsl
enter
stos
sbb
jge
data16
std
inc
incb
xorl
xor
dec
xchg
jmp
sbb
lcall
jne
test
pop
jns
jle
mov
jno
movsl
or
and
push
loope
fwait
or
jg
jge
xchg
inc
out
push
sbb
xchg
movsl
mov
outsl
lock
push
mov
mov
andl
clc
mov
enter
aad
and
cmpsb
fwait
mul
push
idivb
mov
dec
psubsw
dec
mov
or
icebp
int
xchg
jns
std
fwait
jno
or
inc
fwait
xor
js
xchg
shr
fs
adc
cmp
sbb
dec
push
jnp
cld
dec
dec
lea
hlt
inc
adc
repz
fidivl
int
sahf
inc
dec
scas
jae
int
mov
fsts
adc
sbb
or
imul
fistpll
int
xor
stc
sub
inc
call
mov
data16
mov
jbe
mov
cs
mov
mov
jnp
lods
icebp
and
mov
cmc
dec
inc
and
test
js
lock
ret
iret
mov
fadds
xor
mov
mov
xor
arpl
inc
add
es
fsubrs
xlat
pop
and
sub
cmc
dec
xor
push
scas
andb
and
das
xchg
xor
aas
lea
jp
hlt
xor
test
shrl
imul
jmp
icebp
movsb
jo
mov
in
pop
popf
xchg
jne
pop
ret
cld
mov
sub
push
jns
or
jge
leave
sbb
mov
ret
inc
pop
or
mov
push
mov
rcll
leave
mov
lcall
fiadds
inc
loopne
div
dec
out
scas
das
mov
mov
cmpsl
cwtl
pop
sub
inc
lock
xchg
push
pop
fcoms
and
cmp
leave
outsl
mov
addr16
jns
add
mov
mov
inc
aas
imul
lret
loope
mov
push
mov
loop
or
mov
stos
mov
imul
test
jo
push
imul
test
push
push
mov
mov
cmpb
leave
fnstsw
or
xchg
mov
fcmovnb
add
data16
push
daa
in
imul
je
insl
push
mov
mov
je
xchg
sub
cli
push
rcl
inc
mov
mov
clc
imul
xor
lods
mov
or
xorl
add
leave
sbb
jb
scas
xchg
into
jnp
sbb
push
es
jmp
cmp
inc
std
push
clc
imul
and
or
out
or
dec
mov
pop
sub
dec
das
or
dec
mov
mov
mov
mov
insl
test
adc
inc
mov
shr
dec
push
xchg
lahf
pop
ja
cmp
inc
mov
pop
lods
pop
xchg
add
lahf
add
int3
fcmovnb
xchg
jae
out
xor
jns
mov
stc
mov
dec
xchg
ret
dec
mov
push
jno
stos
addb
pop
mov
arpl
fcompl
rclb
xor
xor
fisubrs
gs
lds
dec
int3
jae
loop
and
mov
dec
mov
aaa
ja
fucomip
loop
jmp
push
iret
pop
mov
into
sti
mov
repz
add
mov
std
test
rcrl
xchg
add
repnz
or
nop
jmp
lea
xchg
jne
cmp
dec
sub
cmpsb
cmpsb
push
mov
rol
xchg
cltd
push
jge
fiaddl
bound
dec
fnstcw
cltd
fldenv
cmp
mov
cmc
push
adc
adc
call
test
mov
jno
dec
sbb
mov
inc
sub
fsubrs
xor
jo
and
sbb
punpckhwd
mov
and
mov
cs
sub
inc
jo
gs
sbb
push
xchg
je
push
es
pusha
adc
lcall
test
pop
pusha
push
iret
xlat
shlb
jbe
pop
inc
mov
das
cltd
mov
pop
cmpsb
xor
lods
sub
pushf
mov
nop
outsl
dec
pop
or
fsubp
xchg
sub
mov
loop
jno
icebp
push
and
xchg
stos
je
imul
inc
ret
fxch
mov
fwait
cmc
push
jle
mov
fwait
js
sbb
loope
in
fsubrs
insb
pop
pusha
fnsave
mov
fldt
in
out
or
xchg
jge
hlt
loope
scas
or
scas
les
mov
sbb
rcrl
in
lcall
scas
fstps
and
out
dec
xchg
sub
mov
dec
fwait
cmp
popa
imul
loope
dec
into
or
loope
movsb
mov
xor
lahf
aaa
mov
push
or
insl
mov
push
test
jle
in
dec
dec
cmp
stc
mov
mov
out
pushf
outsb
xchg
ljmp
in
sahf
jno
insb
xchg
inc
es
adc
lock
cmp
fdivl
fnstsw
adc
jae
inc
add
cwtl
fbld
sub
fcompl
movsb
pop
dec
aad
inc
cmp
pop
ret
mov
leave
sub
lds
cwtl
fbstp
ficoms
jbe
mov
inc
pop
cmp
fnsave
icebp
mov
pop
movsl
cmp
dec
hlt
sub
ss
inc
dec
sub
mov
xor
aas
mov
aam
push
dec
sub
xchg
aaa
mov
dec
xchg
nop
sub
xchg
into
xor
arpl
sbb
pop
gs
stos
sbb
out
stos
out
pop
daa
xor
dec
loope
std
push
das
xor
mov
stos
mov
pop
push
xchg
jg
xor
pop
sbb
cld
adc
xchg
test
repz
es
pop
cmp
lock
js
xor
push
cli
out
pop
popa
xchg
push
ss
and
aad
jbe
stos
mov
in
cmpsb
mov
test
test
les
pop
xchg
les
js
arpl
popa
int
dec
and
push
js
add
rol
pop
mov
dec
int3
test
dec
ret
in
jb
repnz
mov
jae
pusha
jg
jae
xchg
pop
hlt
dec
xor
and
cmp
and
sub
sbb
jns
mov
xchg
mov
andb
mov
dec
xchg
adc
aad
adc
inc
mov
pop
mov
aad
ss
lsl
inc
mov
outsb
shrl
test
in
loopne
dec
dec
xchg
push
pop
mov
xor
mulps
aad
cmp
das
test
inc
dec
jecxz
stos
or
sbb
arpl
enter
sub
mov
insb
adc
jbe
mov
xchg
jmp
loope
adc
pop
test
mov
add
aam
cmc
fimuls
jnp
into
ret
xor
leave
cmpsb
adc
insb
fnstsw
xor
lock
inc
sbb
inc
pusha
sbb
insl
sbb
push
and
push
pop
in
mov
lahf
xchg
aas
pop
jae
mov
dec
popf
xchg
inc
outsl
xchg
popa
out
push
push
pop
add
mov
pushf
fs
mov
inc
mov
xor
mov
daa
mov
lods
xor
mov
push
fdivrp
enter
adc
xchg
xchg
imul
or
pop
shl
scas
std
cmp
dec
dec
mov
pop
push
jmp
jl
mov
xor
jle
ret
inc
xchg
ja
xchg
xchg
xor
shl
cld
or
push
fistps
dec
nop
roll
std
pop
xor
sbb
mov
rcll
ss
push
sahf
addr16
add
addr16
out
lods
jmp
in
xor
in
es
ss
nop
sbb
push
test
rolb
inc
and
sbb
lock
sub
adc
insb
cwtl
push
jmp
movsb
into
mov
xor
push
sub
jo
lds
jp
cltd
divl
pop
fdivrs
or
sub
push
notb
push
dec
cltd
mov
cmp
daa
xor
jge
mov
adc
push
mov
push
pop
test
leave
repnz
in
inc
ljmp
out
or
call
inc
jns
aad
out
outsl
push
mov
test
movsl
or
popf
or
xchg
lcall
pushf
outsl
fstl
add
addr16
stc
mov
pushf
push
sbb
mov
cmp
test
sbb
aad
lock
in
icebp
sbb
xor
fcmovnu
mov
loopne
lods
arpl
mov
loope
mov
mov
xor
xor
cmp
xlat
test
push
lds
rorl
jmp
mov
mov
sub
and
imul
xor
je
push
adc
movnti
push
rorl
test
test
sti
mov
scas
nop
js
or
xchg
lods
pop
ret
pop
xchg
mov
sbb
and
jge
pushf
addb
mov
imul
push
add
mov
aas
jmp
dec
dec
lds
ja
add
mov
xchg
xchg
cmp
test
and
fisubrs
rcrl
insb
arpl
pop
jl
ds
mov
in
jnp
pop
mov
in
and
lds
jae
das
add
pop
sub
fadd
andb
jle
sbbb
pushl
mov
cmc
fstps
mov
out
pushf
lret
add
sbb
fcoms
add
arpl
dec
in
movsl
sti
imul
push
movsl
jo
or
ds
jae
jmp
xor
pop
shrb
push
lahf
push
push
add
fiadds
push
js
mov
cmp
inc
dec
cwtl
cld
pop
and
sbb
add
cmp
mov
push
imul
pop
in
xchg
adc
mov
mov
clc
mov
lret
cltd
jl
addr16
pop
xor
push
cmpsb
out
inc
mov
mov
gs
cmp
add
rcrl
shr
lret
clc
mov
shlb
loop
or
ret
or
cld
je
mov
pop
out
jl
pop
inc
adc
sbb
cld
xor
cmp
fs
popa
cmpl
jno
in
js
lods
test
not
xchg
dec
sub
push
push
xor
dec
loopne
jns
mov
mov
pop
rcl
pop
cmpsl
xor
fcoml
jbe
add
mov
dec
mov
in
jle
daa
imul
outsb
mov
xlat
lahf
mov
out
ljmp
jae
add
data16
adc
mov
adc
dec
sub
jl
mov
adc
mov
enter
inc
add
mov
push
sub
ud1
dec
dec
xor
jg
jmp
jae
dec
jp
stos
stc
push
add
gs
test
pop
test
sahf
xchg
insb
sub
mov
and
dec
data16
lret
push
int3
push
jae
dec
push
imul
shlb
cmp
cwtl
outsl
jnp
daa
dec
aad
and
push
icebp
loopne
aam
les
push
enter
std
push
imul
lret
add
inc
pop
sbb
ja
inc
mov
sbb
dec
mov
and
popf
mov
jl
out
mov
jecxz
jns
sbb
fwait
dec
adc
pop
shlb
cld
sahf
iret
imul
imul
scas
pop
test
idivl
mov
push
fists
push
fisttpl
int3
scas
aad
fnsave
es
ret
loopne
aam
clc
mov
xor
nop
pop
sbb
das
push
pop
ret
aaa
outsl
clc
push
int3
insb
gs
es
adc
test
inc
scas
push
mov
xchg
xor
mov
push
and
pop
xorl
jle
mov
loop
mov
jne
incl
filds
add
loopne
sub
das
fdivrs
pop
pop
jp
dec
inc
lock
push
dec
cmp
mov
jmp
pop
pushf
or
std
cld
in
roll
insb
imul
in
mov
dec
jg
outsl
jmp
insb
pushf
jns
bound
pop
pop
cmc
or
pop
pop
push
xor
es
pusha
xchg
dec
and
fsts
loopne
shll
clc
xchg
or
inc
addr16
xchg
out
outsl
ljmp
mov
dec
fldcw
adc
push
xorb
ret
cltd
scas
pop
cmpb
test
int
mov
fs
movsb
negb
pop
add
ret
imul
jg
int3
push
arpl
push
cld
push
jl
inc
add
push
imul
test
jge
xchg
xor
or
xchg
imul
shlb
int
sub
push
insl
repz
lds
ds
cltd
aad
sahf
shrb
cmpb
cmp
cmp
dec
xchg
or
popa
sahf
xlat
aaa
cmpl
fmull
push
sbb
fbstp
xchg
push
mov
and
call
xchg
or
mov
test
lret
leave
add
jge
ljmp
repnz
adc
push
inc
mov
dec
and
adc
fistps
imul
jmp
push
sub
fs
push
pop
shl
stc
or
ja
sub
pop
fcmovnu
adc
out
outsl
lock
cmp
push
popl
mov
and
dec
stos
mov
cmp
lods
xchg
aad
out
cli
aas
sbb
popf
iret
loop
mov
or
pusha
mov
mov
loopne
cmp
in
aam
aas
loop
mov
in
push
mov
ret
mov
movsb
call
xchg
jmp
out
imul
sbb
add
aad
pushf
sahf
add
int
fmul
cmp
outsl
pop
fldt
pop
sub
adc
xor
fdivs
or
xchg
cmp
cltd
mov
sub
ficomps
mov
mov
fisubrl
mov
push
xor
add
or
cmp
push
jmp
push
lcall
push
add
ss
xchg
fwait
imul
repz
out
jnp
data16
sub
xchg
xchg
in
popf
jl
insl
adcl
cwtl
in
rcrb
or
lods
out
aaa
and
sbb
adc
cs
push
dec
push
mov
push
jmp
sub
xchg
add
mov
fs
daa
jmp
in
mov
xor
dec
pop
mov
ret
fdivs
cltd
clc
lret
pushf
or
xchg
mov
fs
jbe
scas
in
adc
daa
lods
fcompl
xor
test
and
mov
jge
mov
hlt
push
push
and
test
mov
jmp
lahf
daa
pop
popf
lods
imul
xor
push
dec
ret
rclb
mov
mov
or
dec
push
mov
lret
or
and
mov
inc
ja
push
inc
shlb
clc
mov
jge
test
pop
loopne
jl
loope
fcmovnu
or
push
mov
inc
mov
sahf
fmulp
leave
adcl
lret
fildll
in
push
pop
xchg
imul
dec
mov
subb
repz
fucomip
addb
cltd
rcll
and
fildl
les
xlat
add
push
leave
es
subl
fs
add
in
adc
sbb
movsb
push
pop
xor
dec
cmc
aas
mov
mov
push
popf
mov
cmpsl
fs
cvtdq2ps
insb
mov
push
arpl
pop
stos
push
fisttpl
xor
and
adc
mov
sub
and
test
push
add
dec
popf
mov
add
ds
fwait
mov
push
sbb
int
idiv
push
jb
ret
gs
xor
ret
mov
pop
loop
or
adc
fildl
push
mov
dec
test
sub
xor
lcall
fcompl
cmpsb
mov
pusha
cld
roll
test
sbb
movsl
pop
arpl
in
das
mov
mov
push
inc
jae
or
mov
pop
inc
pop
jne
lret
aam
iret
pop
and
wbinvd
insb
push
or
mov
fucom
addr16
pop
xchg
jmp
ret
pop
mov
add
xchg
test
fstpt
xor
in
xchg
aad
pop
and
cmp
dec
add
and
push
xchg
mov
das
jmp
or
lret
and
les
mov
push
adc
pop
add
and
sub
js
imul
pop
mov
es
sbbl
mov
mov
shll
lock
and
or
sbb
or
ja
jle
aad
rolb
xchg
repnz
xchg
push
xchg
adc
and
mov
xor
cwtl
cmpsl
notl
push
push
or
xchg
rcrl
sti
xor
pop
add
cmp
adc
je
adc
out
sbb
pop
push
add
xchg
incb
lods
xor
adc
add
mov
fcmovnu
test
adc
mov
clc
ss
adc
jmp
jmp
pop
add
icebp
and
xor
pop
loopne
scas
jo
repz
in
mov
jmp
cmp
push
jnp
popf
in
or
in
mov
mov
popl
movsb
leave
cltd
jge
sbb
and
fistps
jecxz
repnz
pop
mov
mov
stos
mov
add
mov
cli
rcr
pusha
xchg
fdivrl
aaa
cmp
nop
lret
lea
pop
dec
outsl
cs
push
adc
and
dec
gs
shlb
dec
stc
rcl
pop
push
fidivl
add
push
sbb
repnz
fmuls
cmp
and
mov
mov
jb
inc
cmp
add
or
cmp
mov
sub
pop
mov
inc
adc
popa
pop
cmp
rcll
pop
fnstenv
scas
dec
dec
xchg
cmp
jp
and
inc
or
pop
aam
les
add
call
mov
mov
inc
data16
add
push
insl
int3
or
mov
daa
xchg
ds
jns
popa
mov
add
mov
mov
xchg
fmul
jg
lcall
js
and
cwtl
mov
test
mov
jg
sub
lcall
jge
imul
scas
leave
sbb
mov
add
xchg
jmp
fidivrs
jecxz
jle
add
xorb
inc
ljmp
inc
fiaddl
fs
push
cmpsl
xchg
cmp
sbb
fiadds
add
sub
pop
xchg
imul
out
mov
lock
lret
lods
cwtl
daa
cltd
dec
mov
into
cltd
fidivrl
and
not
inc
push
mov
mov
adc
es
rcrl
cmpsb
and
and
enter
iret
int3
add
push
out
and
repnz
or
inc
push
idivb
mov
cltd
ss
and
dec
adcb
xor
cmc
sub
cwtl
je
fcompl
gs
out
mov
push
sbb
fdivrs
dec
rcrb
nop
xor
sbb
and
repnz
in
int
or
sub
pop
mov
jae
lods
push
inc
push
inc
arpl
pop
add
rcrb
clc
lea
push
jns
lock
loopne
jns
mov
lock
andb
cmp
arpl
ret
adc
add
cmpsb
je
scas
into
cmp
pop
mov
fadd
pop
jg
pop
and
out
fimuls
lods
popf
push
add
cmpsl
addr16
inc
adc
add
inc
pop
sbb
clc
push
int
sub
mov
int
add
jo
pop
cli
jnp
xchg
sub
xor
lock
mov
xchg
cmp
jne
pop
std
fmuls
lcall
dec
out
iret
insb
jb
imul
xor
js
ret
stos
xor
rcrl
mov
lods
test
push
jb
xlat
add
adc
stos
and
jnp
sbb
add
sub
mov
mov
mov
inc
rorl
pop
test
mov
xlat
pop
cs
lock
sub
pop
dec
mov
fs
pop
sahf
bound
jnp
outsl
jle
jp
xchg
cwtl
add
jbe
pop
ret
sbb
push
lret
mov
inc
ror
pop
sub
push
cmp
aam
cli
or
rclb
nop
mov
cmc
pop
divl
mov
jecxz
pushf
sub
cld
cmpsl
arpl
jo
mov
loopne
pop
repnz
jmp
mov
push
in
cmp
repz
mov
lret
or
loopne
sbb
pop
pop
test
inc
push
sbb
or
ja
dec
out
jg
inc
cmp
lret
outsl
movsb
adc
les
push
jne
mov
js
insb
jb
sahf
in
movsl
lret
mov
push
lea
icebp
jo
jge
mov
lds
dec
outsl
push
cwtl
add
nop
outsb
mov
shl
xchg
das
push
inc
cmp
sbb
lock
jne
or
add
cmp
mov
das
stos
xchg
sbb
movsb
adc
cld
je
lea
pusha
sbb
jg
mov
movl
test
add
jns
cmp
in
loop
mov
xchg
inc
lds
xlat
jo
pop
pop
ljmp
or
mov
cmp
sub
imul
inc
mov
movsb
imul
jbe
incl
xor
and
movsb
sbb
mov
jb
mov
js
movsb
sahf
in
int3
sub
xchg
call
shll
shll
add
sbb
push
sub
subb
add
inc
cltd
stc
push
inc
pop
mov
imul
lcall
add
cwtl
add
out
cmovne
cmp
in
dec
mov
mov
cmp
or
in
dec
mov
pop
mov
stc
mov
scas
lret
popf
pop
dec
cmp
insl
fwait
xor
mov
aad
div
sbb
push
xor
mov
bswap
outsl
xchg
sub
shrb
jmp
mov
inc
je
jmp
ret
sub
push
or
push
xor
outsb
mov
mov
jns
xchg
push
fdivs
cmpsb
or
shrb
fwait
xor
adc
lock
cmp
or
inc
rclb
push
and
cmp
insl
cld
jp
out
xor
dec
sub
sub
sarl
arpl
and
rcr
or
rclb
pushf
dec
sahf
test
jae
in
test
jmp
xor
pop
jle
daa
mov
pop
loopne
mov
adc
mov
pop
int
leave
inc
and
ret
mov
mov
fstl
sbb
mov
lods
xchg
sub
jg
mov
pop
mov
adc
add
and
add
cli
hlt
xchg
in
mov
incb
mov
mov
fadd
xchg
dec
pop
pushf
loopne
inc
xor
adc
test
testb
dec
test
stos
pop
jno
sub
push
dec
jno
shl
jno
test
movsb
cmp
gs
xchg
daa
cmp
push
cmp
xchg
sub
fstpl
mov
out
pop
fcmovnu
mov
hlt
movsb
divb
rep
aam
lret
outsb
data16
pop
sbb
sahf
lea
test
lods
jmp
aaa
enter
cmp
test
aad
add
stc
sbb
push
roll
je
xor
lds
int3
test
out
inc
ror
in
xlat
add
pop
shll
lock
sub
gs
adc
adc
mov
in
xor
or
pop
lcall
repz
lret
loop
movsl
adcl
pop
ret
js
sbb
les
adc
test
cwtl
dec
sub
popf
lcall
pop
xorb
push
xor
pop
stc
mov
jo
xor
leave
push
stos
out
cmp
or
add
xchg
cmpsl
xchg
mov
mov
jecxz
mov
add
bound
out
mov
inc
enter
inc
sub
push
imul
push
iret
sub
fwait
mov
stc
addl
imul
pop
mov
roll
adc
aam
ja
cmp
ret
paddsb
dec
int
in
nop
lods
iret
pop
add
nop
shlb
in
mov
inc
js
pop
jbe
adc
loop
adc
sub
cmp
iret
enter
pop
dec
jne
push
inc
jp
pop
pop
mov
inc
or
fdiv
icebp
cltd
and
mov
lcall
and
insl
jmp
push
lcall
jno
add
insl
jecxz
popa
jnp
fistl
cmp
int3
inc
xorb
enter
pop
pop
fs
xor
cmc
inc
add
mov
lods
push
sub
fcom
jnp
scas
cli
es
fisttps
movsl
pop
loope
add
popf
sarb
cmp
stos
pusha
mov
xor
adc
push
pop
stc
inc
call
outsl
pop
inc
push
mov
adc
outsl
cmp
inc
pop
fxch
cmp
sbb
mov
stos
lahf
out
mov
lock
es
dec
pop
inc
xor
jne
ficomps
push
pop
cwtl
aad
sbb
sbb
dec
sahf
cs
dec
mov
in
repnz
shl
xor
sub
sub
arpl
xchg
push
xor
ss
inc
pop
sub
lods
imul
push
add
and
or
fistps
inc
lahf
sbb
push
mov
push
push
iret
dec
push
mov
mov
ud0
sub
popa
cs
cwtl
clc
ljmp
sbb
gs
jno
mov
or
popa
and
xchg
pop
adcl
aad
sarb
add
xchg
jge
add
jno
sub
out
pop
xchg
push
rorl
push
inc
addl
mov
xchg
jg
mov
mov
cmp
jnp
out
jne
ret
mov
pop
stos
jno
icebp
inc
cs
pop
push
movsl
mov
ss
aad
mov
jmp
inc
lret
fbstp
jecxz
push
push
je
popf
pushf
sbb
dec
test
adc
xchg
ljmp
jecxz
fsubp
in
int
cmp
addb
mov
and
outsl
ljmp
cld
dec
dec
jnp
test
sbb
push
xchg
enter
add
bound
pop
loope
jle
sbb
test
sub
out
sub
fdivp
hlt
lods
jecxz
jl
dec
shll
nop
rol
add
adc
add
mov
aad
push
outsb
insb
bound
push
rcll
arpl
lods
data16
fcoml
pop
push
repz
adc
outsb
cwtl
cwtl
add
or
scas
imul
pop
jne
pop
ss
adc
dec
aam
push
xor
inc
negl
insl
push
mov
enter
popf
jns
inc
subl
jbe
inc
push
mov
sub
cwtl
xchg
mov
dec
pusha
cmp
pop
and
jmp
popf
gs
dec
sbb
pop
shll
xor
cli
push
sbb
push
xorb
in
dec
fsubl
jno
sbb
cs
insb
repnz
repz
pop
inc
push
xor
jbe
lcall
call
movsl
test
push
mov
outsb
aas
incb
cmc
sub
add
pop
push
cmpsl
inc
icebp
sar
les
lock
sbb
movsb
inc
jns
or
movsb
xor
push
adc
outsl
fcmovnu
jp
cmp
test
shll
arpl
repz
divl
fbstp
and
out
or
mov
pop
cs
lret
js
pop
adc
sub
repnz
mov
shll
add
sahf
testl
loope
cmpb
sbb
cli
jb
sub
addr16
xchg
pop
out
data16
pop
and
cmp
mov
outsl
shl
lods
xchg
mov
scas
rcr
dec
test
cmpsb
and
dec
repnz
daa
push
lods
popa
dec
adc
mov
aas
jae
lock
sbb
push
push
popa
or
hlt
adc
and
sub
daa
mov
int3
jne
mov
push
jmp
xchg
push
xor
add
hlt
mov
push
fildl
jecxz
movsl
adc
sbb
outsl
jbe
addl
inc
popa
mov
loope
inc
pop
out
pop
stc
subb
int3
stos
mov
into
mov
outsb
inc
or
adc
andl
int
sub
push
fisttpl
or
xor
inc
mov
dec
add
push
xorb
or
xor
shrl
mov
sub
jbe
sbb
loopne
sbb
dec
push
lds
xchg
jne
add
movsb
dec
mov
mov
stos
adc
insl
int
pop
dec
push
in
out
dec
adc
lcall
add
lods
add
call
test
cmpsl
inc
test
xor
push
das
subb
icebp
pop
fcompp
xorl
jecxz
outsl
push
or
cmp
xchg
imul
jmp
jo
inc
lret
push
mov
mov
mov
mov
cli
jmp
imul
pop
jle
mov
and
pop
adc
xchg
jnp
lcall
nop
das
movl
adc
outsb
and
or
repz
jne
gs
or
add
or
cmp
adc
ja
out
sbb
shrb
inc
mov
dec
pop
insl
lahf
and
sbbb
popfw
into
sub
addr16
in
cmp
mov
stc
jl
incb
mov
add
mov
push
out
pop
fwait
rclb
xor
std
shr
jg
lods
mov
shrb
pusha
fistpll
pop
push
xchg
push
pop
sub
add
push
push
mov
push
xor
sub
xchg
in
mov
xchg
jg
pop
push
push
sub
stos
fmul
cltd
loop
jo
pop
and
push
sub
pop
repz
xchg
cltd
insl
int
inc
in
pop
loop
xor
sub
adc
daa
out
loopne
sbb
xor
jb
dec
cmp
cld
test
jp
aas
dec
jnp
xor
dec
popa
aas
out
jge
fucomp
cmpsl
adc
shll
mov
mov
movsl
xchg
dec
push
je
push
fnsave
jecxz
shr
outsl
xor
movsl
sahf
in
xlat
cli
andl
inc
dec
jl
push
mov
jne
dec
or
push
leave
inc
pusha
hlt
incl
cmp
mov
pushf
clc
sub
add
mov
jns
add
cmp
or
add
sub
lea
enter
mov
cs
lcall
lods
jno
jp
and
cmp
xchg
sub
outsl
ret
les
xchg
mov
std
jns
jae
nop
int3
aaa
lods
mov
mov
mov
in
imul
dec
jnp
dec
in
aam
or
mov
cmp
hlt
mov
xchg
sub
cmp
test
sbb
sub
js
and
or
jmp
inc
xchg
add
movsl
push
mov
das
mov
push
bound
clc
mov
push
mov
ss
xchg
mov
inc
dec
shl
dec
mov
jge
mov
out
sbb
scas
or
ret
mov
js
fsubrl
cmc
ss
les
sti
add
stc
in
shl
xadd
mov
xchg
shlb
cli
mov
fisttpl
inc
xchg
fidivl
xchg
sbb
xor
mov
pop
add
cmp
pmulhuw
xchg
fistps
push
dec
sbb
sub
rolb
das
adc
push
jno
sbb
imul
cld
inc
and
jge
loop
and
into
xor
xchg
push
sbb
cltd
jnp
fldl
xchg
sbb
pop
sub
pop
xchg
and
aad
xor
mov
shl
in
cltd
ret
pop
sbb
dec
enter
push
xchg
icebp
imul
test
push
stc
mov
scas
pop
xchg
inc
jg
mov
jno
daa
xor
shrb
loope
push
clc
cltd
sbb
lcall
jge
das
les
in
xchg
jo
lods
sbb
leave
loop
aam
xor
daa
hlt
pshufw
xchg
bound
inc
cld
and
jo
jl
mulb
add
inc
jnp
mov
fildl
mov
dec
mov
jb
sahf
adc
sub
fildll
outsb
cs
addr16
push
outsl
bnd
leave
mov
data16
mov
sahf
mov
out
jno
add
push
sbb
dec
and
stos
mov
add
scas
jle
lods
xor
lret
mov
adc
cli
shr
mov
adc
outsl
and
fs
fiadds
jbe
setb
cmc
or
insl
dec
mov
fsubr
cmp
jle
mov
inc
jmp
xchg
fbld
xchg
test
inc
sub
jg
dec
or
leave
mov
cli
jle
adc
lods
outsb
mov
push
repnz
lcall
outsb
cltd
pop
cmpsl
push
popa
jns
mov
insl
fs
arpl
mov
sub
sub
in
stc
or
mov
cmp
sbb
fisubrs
orb
pop
adc
pop
pop
pop
inc
cmc
pop
jmp
add
push
and
fidivrs
pusha
rclb
push
jo
push
cmpsl
pop
frstor
or
sub
fs
mov
inc
cmp
loop
stos
icebp
sub
icebp
sub
jge
test
cmpsb
inc
cwtl
insb
cwtl
int
xor
adc
sub
cmp
test
or
push
jl
in
push
mov
dec
adc
aas
and
mov
js
xchg
xchg
ljmp
out
or
test
aad
pop
xchg
into
mov
fsubs
push
lahf
lds
inc
dec
orb
inc
sbb
sbb
xchg
outsl
inc
jg
adc
jmp
bound
xchg
push
jno
jnp
push
stc
mov
pop
jne
int
ss
shlb
jb
gs
in
dec
shlb
add
lds
jns
mov
je
mov
jns
push
fildll
stos
pop
push
imul
ds
mov
mov
xor
push
xlat
jne
pushf
aaa
cmpsl
ljmp
pop
push
clc
mov
jp
les
aam
out
in
jle
add
lret
xor
popa
mov
xor
push
mov
push
ja
iret
insl
push
fsubr
pop
xchg
pop
cmpsb
fnstenv
pop
pop
ja
lock
fwait
inc
sbb
and
out
xchg
xor
and
repz
jnp
ret
mov
inc
xchg
lods
movsl
pop
jb
int3
daa
xchg
js
jg
pop
xchg
mov
pop
adc
in
inc
push
cli
xor
pop
push
enter
aas
and
inc
out
jno
imul
adc
or
cmp
testb
out
aaa
inc
push
iret
and
inc
sbb
call
sbb
cmp
inc
or
arpl
mov
inc
dec
xchg
push
lds
jo
mov
pop
xchg
call
sub
js
lock
mov
lcall
cmp
daa
testl
aad
cmc
je
and
movsl
hlt
sti
iret
in
fidivrl
mov
ret
jp
stos
lods
pop
jecxz
testb
pushf
sbb
pop
add
insl
xchg
or
mov
ret
mov
aad
adc
les
data16
dec
sar
cltd
stos
dec
in
mov
xchg
xchg
xor
pushf
fidivrl
leave
out
aad
mov
leave
shlb
add
stos
stc
outsl
sbb
roll
pop
push
pop
imul
ret
cmp
or
rolb
and
push
xor
xchg
adc
xor
push
jp
add
xchg
mov
jle
push
sub
sarl
lahf
fistpl
mov
mov
or
sbb
imul
add
dec
push
ret
xchg
pop
iret
idivl
mov
cmp
bnd
stc
xlat
rorb
shl
jns
dec
pop
sbb
add
mov
loope
xchg
into
int
dec
popf
into
add
lock
inc
ss
inc
inc
sub
movb
mov
mov
jbe
in
cmpsb
out
push
mov
test
ret
mov
jne
or
movl
dec
lea
and
outsl
imulb
loop
dec
sbb
cmp
push
sahf
pop
xchg
mov
mov
psubsw
cmc
mov
dec
fwait
pop
fiaddl
lret
divl
dec
mov
mov
mov
imul
and
outsb
rcr
mov
cmc
ljmp
pop
jb
jbe
int
jnp
cmpsb
sbb
jg
aas
ds
sbb
add
rolb
jg
ljmp
clc
mov
mov
bnd
pop
jecxz
mov
ret
mov
inc
sbb
cmpsl
or
fisubrs
data16
mov
jmp
subb
int3
clc
sbb
lcall
mov
rclb
subb
add
sub
adc
dec
mov
push
repz
jp
cmc
enter
je
lock
loopne
mov
les
out
adcl
inc
in
pop
pop
les
sbb
inc
inc
loopne
call
icebp
scas
or
add
xor
adcl
jb
jge
xchg
and
clc
adc
add
out
rcrl
je
loop
adcl
sbb
mov
popf
jmp
push
out
roll
ficoml
cmpsb
jmp
test
inc
push
jno
movsl
lock
lods
testb
repz
fwait
add
loopne
dec
arpl
imul
pop
stos
sbb
push
stos
mov
sbb
xor
inc
gs
js
sbb
out
push
pushf
imul
jl
imul
sbb
out
push
aad
lcall
sarb
rol
jbe
testb
push
and
lret
gs
sub
and
pop
cmp
sub
mov
mov
sub
lock
mov
enter
movq
pop
sbb
xchg
sarl
fs
jge
xchg
cmp
push
pushf
dec
pop
push
xor
stc
push
xchg
cmpsl
iret
fdivrl
into
outsb
or
pop
das
sbb
push
sbb
push
in
xor
test
xor
cmp
jae
sbb
fdivs
lret
stc
sar
sub
dec
mov
adc
inc
repnz
xchg
imul
jecxz
mov
mov
or
pop
scas
pop
sbb
ret
add
popf
mov
popl
dec
and
mov
mov
fildll
in
or
push
mov
jp
movhps
push
jle
fnstenv
fnstsw
outsb
enter
nop
push
popa
push
scas
mov
pushl
into
mov
cltd
inc
jnp
scas
add
mov
nop
jae
cli
stc
xchg
fidivrl
ds
repnz
xchg
stc
add
sbbl
dec
and
ss
repnz
in
lret
lea
adc
outsb
xlat
jmp
outsb
scas
icebp
rcl
add
xchg
and
filds
adc
push
sbb
xchg
fs
add
lods
ret
test
jmp
and
xchg
sbb
or
sub
fisubrs
push
mov
mov
mov
dec
mov
mov
mov
in
mov
icebp
mov
std
add
leave
outsl
lahf
addb
jb
jg
and
jp
nop
sbb
loop
aad
adc
div
dec
xchg
aam
jb
stos
sbb
stos
pop
dec
sbb
std
push
add
jns
stc
inc
cs
xorb
dec
mov
sub
imul
clc
addr16
pop
push
mov
dec
arpl
mov
in
cltd
dec
jl
nop
jg
push
imul
in
shrb
in
xchg
mov
xor
loope
lods
mov
xor
and
cld
adc
push
and
inc
push
ja
or
add
popa
pop
test
imul
out
js
mov
pop
mov
fisubs
mov
insb
out
daa
inc
xorl
mov
mov
mov
xchg
add
lahf
cmc
lods
sarb
out
jp
jge
fildl
xchg
and
in
sbb
sbb
sub
in
bound
lahf
scas
jecxz
dec
xor
mov
sub
stos
add
add
in
test
shlb
das
arpl
push
xor
popa
dec
lcall
inc
pushf
int3
sbb
xchg
push
enter
jmp
cli
jnp
ffree
push
aas
int3
lcall
test
sbb
cli
data16
mov
mov
lods
mov
dec
lret
dec
call
mov
xchg
int3
mov
outsb
loopne
cld
push
xchg
scas
aam
repz
stos
sub
push
das
pop
adc
int
cmpl
mov
xor
jno
lods
out
xchg
dec
or
and
cmp
and
pop
insb
inc
mov
in
es
call
loopne
jne
xor
or
js
mov
mov
jg
or
cmc
mov
jle
jle
jp
or
test
jne
rol
mov
xchg
aad
or
fsub
sti
mov
push
xor
pop
adc
push
mov
inc
int3
lret
test
mov
sbb
pop
xlat
cwtl
popf
mov
dec
test
sub
loopne
out
jge
add
aaa
mov
int
jg
lods
push
sbb
xchg
roll
test
push
call
pop
add
cwtl
xor
mov
rcl
lret
mov
jo
jnp
test
mov
scas
sbbb
test
xor
fidivl
sbb
and
dec
push
sbb
loope
rorb
mov
repnz
xchg
xor
lret
mov
pop
jle
aas
in
leave
cmpsb
mov
cmp
jb
or
int
sbb
dec
fmuls
mov
push
xor
js
adc
mov
sub
out
adc
sar
dec
outsb
mov
addb
std
add
lods
out
push
pop
inc
add
sub
inc
das
pusha
ljmp
int
out
xor
pushf
lcall
int
in
gs
jmp
aam
nop
movl
xor
js
loop
jbe
sbb
add
mov
jmp
repz
icebp
fisttpll
mov
mov
test
insb
sbb
lcall
mov
cmp
xor
adc
sub
or
test
xchg
orl
cli
jecxz
jns
xchg
in
inc
mov
jno
xchg
movsl
cmp
xchg
cmp
mov
jae
cmpb
mov
insb
push
push
or
lods
mov
in
fsubs
les
jnp
and
out
mov
adc
sbb
ds
jne
in
clc
adc
mov
sub
stc
jae
sbb
mov
push
xor
inc
xor
enter
mov
icebp
inc
xlat
xchg
and
popf
rcrl
bound
mov
out
nop
fistpl
dec
push
insl
hlt
cmpl
push
mov
sti
repnz
inc
and
xor
iret
cmp
repz
sbb
imul
scas
jns
test
fisubrs
mov
stos
ret
xchg
pusha
xor
dec
sbb
aas
push
outsb
repnz
xor
fstpt
jp
mov
dec
mov
lods
xor
sti
ja
jecxz
enter
rolb
int3
push
scas
sub
movsl
in
sbbl
mov
and
icebp
ja
inc
je
or
out
repnz
pushf
mov
dec
xchg
mov
jecxz
cmp
pop
sbb
xchg
or
sti
sti
stc
or
push
lods
movntq
ret
ljmp
test
sahf
cltd
arpl
mov
cwtl
cli
andl
mov
sti
sbb
sub
jle
dec
fsubrs
lret
mov
push
jmp
dec
push
sub
jbe
fs
shll
or
xchg
dec
rcrb
mov
push
ficoml
shl
std
sti
inc
das
xchg
rcl
push
cs
or
aam
pop
iret
cmpsb
xchg
pushf
xchg
push
loope
xchg
inc
fdivrl
addr16
and
lock
outsl
sbbl
pushf
lret
sti
cmpsl
bound
jo
out
pop
jge
rcl
pop
rcll
aam
je
aam
mov
jnp
mov
adc
inc
enter
cmp
mov
xchg
sbb
addb
ljmp
xor
inc
pushf
mov
push
jmp
and
jno,pn
or
andl
scas
mov
lcall
fsubr
fisubl
or
pop
mov
aad
mov
movsl
dec
dec
leave
int3
test
add
inc
or
repnz
ljmp
sub
shll
adcl
mov
adc
jl
ss
test
and
ret
out
pusha
seta
mov
xchg
insl
leave
push
cmp
mov
or
jno
push
dec
ficoms
sarl
jg
adc
aad
or
sub
cmp
inc
test
das
icebp
mov
or
push
das
aaa
insb
mov
add
xor
hlt
jge
mov
fldcw
mov
mov
cmp
jecxz
and
stos
out
in
lret
xchg
in
rcrb
cwtl
cmp
stos
dec
cmp
loope
test
stos
jmp
jmpw
icebp
xor
pop
add
mov
adc
xchg
divl
mov
out
popf
sub
or
stos
sub
push
arpl
mov
sbb
dec
push
orb
lods
popa
pop
shll
add
ficompl
jb
pop
cmc
sbb
cmp
hlt
fnstcw
add
in
jl
mov
enter
sub
aas
fimull
and
pop
lods
insl
xor
xchg
icebp
sarl
jo
fmuls
cmpsl
push
cmp
lea
cmp
and
adc
ljmp
add
inc
add
daa
fiaddl
dec
fwait
scas
frstor
mov
xor
int3
push
and
int3
shl
lea
ss
pop
call
or
cld
or
int
xchg
sub
ja
pop
popa
sub
aas
fdivrs
and
sub
push
aas
add
das
fists
leave
fldl
add
jb
jbe
out
mov
cltd
xor
cld
out
leave
ja
pop
decb
in
fld
lods
add
gs
sbb
mov
push
xchg
jnp
aad
mov
xchg
insb
push
shl
into
ljmp
andl
daa
mov
xchg
std
movsb
dec
add
pop
imull
lea
or
xchg
fiadds
ljmp
dec
sarl
jo
stos
shll
out
mov
push
dec
xor
adc
sub
dec
cmp
lods
lock
or
ffreep
jl
adc
xchg
sub
lods
add
xchg
mov
push
jo
pop
jecxz
lret
push
push
xchg
gs
or
push
pop
shll
fistpl
lods
cmc
lods
movsb
xor
pop
dec
lods
movsb
sbb
mov
fidivs
or
pop
xor
inc
pop
sahf
sarb
shrl
cmp
les
stos
push
es
or
inc
mov
pop
jmp
js
push
sahf
jp
cld
xchg
pop
mov
jno
mov
mov
cmpl
mulb
and
leave
out
ja
mov
push
movsb
mov
sbb
cld
lret
xor
cmp
ljmp
outsl
push
insb
int
fs
icebp
je
sub
lret
mov
push
hlt
dec
outsb
push
and
pop
stos
in
pop
dec
dec
and
jns
mov
pop
push
jno
sahf
mov
push
jecxz
lock
or
popa
add
enter
lahf
adc
push
jne
xor
mov
cmpsb
inc
or
xchg
in
leave
jns
ss
push
xchg
sbb
pop
out
lds
jne
ds
rcll
inc
mov
out
or
push
adc
in
sbb
sub
inc
push
jo
int
inc
cs
xlat
adc
nop
fcom
cwtl
bound
ret
fnstsw
dec
in
js
lret
inc
cmp
fisubl
in
les
push
in
mov
xor
xchg
cmp
jne
cmc
insl
push
lret
add
lcall
mov
addr16
in
pop
sbb
xchg
cmp
add
pop
lret
sub
jnp
adc
jno
daa
or
cmpsb
les
movsb
sbb
pop
loope
and
stos
lret
and
ja
enter
add
repnz
aas
push
pop
insb
sbb
pop
jge
dec
xor
mov
and
in
fcoms
stos
pop
arpl
call
adc
mov
mov
pop
inc
out
orb
imul
lcall
adc
cmpsb
lods
call
add
sbb
lret
push
aam
pop
inc
xchg
adc
mov
test
or
sub
insl
cld
sub
out
xlat
imul
popa
mov
mov
sub
and
lret
cwtl
por
fmull
arpl
cmp
adc
push
sub
fs
cmc
imul
sub
dec
cmpsl
in
into
xchg
fstpt
pop
inc
lods
loopne
push
adc
lret
mov
jae
inc
sbb
push
in
or
scas
push
ds
lods
adc
sbb
leave
cmc
xor
cmp
stos
divl
dec
subb
fists
dec
xchg
jae
int3
inc
into
movsl
mov
aad
cmp
enter
cmpb
jae
std
icebp
lock
pushf
ret
aad
mov
dec
subps
sahf
sbb
dec
inc
cmp
pop
sbb
xchg
xchg
hlt
push
push
sbb
pop
push
jg
arpl
xchg
test
and
rcll
push
jno
inc
sahf
fwait
mov
clc
lea
aam
mov
pop
cmp
mov
icebp
std
xchg
jne
ljmp
ljmp
stc
cmp
fistpl
scas
dec
xchg
pop
ss
mov
lods
movsl
sbb
out
add
into
mov
cmc
jmp
jmp
push
sbb
jno
lret
orl
or
gs
push
or
push
push
sbb
mov
pop
adc
jge
insl
cltd
mov
shll
aaa
and
mov
xlat
pop
pusha
loopne
inc
and
and
sub
pop
inc
mov
imull
sahf
adc
pop
xchg
sub
mov
or
push
push
loope
imul
loope
cmp
xchg
mov
arpl
fstpt
pusha
mov
jae
xchg
loope
test
cld
inc
out
rorb
imul
xor
cmp
push
idivl
out
fs
jbe
ja
nopl
add
and
push
int3
dec
movsb
xchg
pop
pop
and
sub
pop
xchg
inc
cmpsb
ljmp
int
sub
pop
cmp
lea
clc
xor
mov
and
std
ds
cmp
push
jl
jmp
inc
and
jecxz
cmp
cmpsb
pop
push
dec
andl
mov
repnz
mov
ja
mov
int3
cmp
int3
repnz
dec
aam
cmpsl
push
push
fisttps
pop
pusha
sub
out
outsb
jb
fldl
shlb
add
pop
sub
or
sub
jnp
pop
push
fadds
jp,pn
mov
ret
dec
in
mov
in
mov
add
pop
pop
in
mov
cmp
sbbb
nop
mov
cmp
mov
push
lds
icebp
add
mov
stos
ds
les
sub
fnstcw
jmp
fld
fwait
icebp
mov
ljmp
push
imulb
jb
or
push
sahf
outsl
xchg
adc
cwtl
lret
push
mov
pop
mov
pop
mov
jno
adc
inc
mov
lods
mov
cltd
xchg
cmp
mov
leave
mov
jnp
xor
bound
ljmp
dec
addb
inc
sub
pop
add
std
jecxz
jg
sbb
and
in
jns
xchg
jle
cmp
cmp
push
mov
cs
leave
cmp
xchg
adc
stc
push
push
loop
xchg
mov
test
lods
pop
fnstenv
pop
mov
mov
push
ja
mov
les
cli
push
lea
int3
xchg
hlt
dec
mov
cmp
arpl
sub
xor
push
push
mov
out
rorb
xorb
and
push
dec
std
shrb
xor
mov
push
cmp
pop
mov
pusha
jo
sbb
inc
mov
insl
or
je
and
xor
sahf
add
pop
mov
xchg
add
pop
fildll
notb
fbld
repnz
scas
dec
sti
and
xchg
sbb
mov
push
push
push
sarb
sbb
fs
daa
pop
es
fldt
jg
pop
xchg
push
adc
ret
fucom
jp
mov
push
mov
clc
sti
mov
lcall
pop
aam
xchg
aaa
or
xchg
rolb
mov
mov
fdivl
mov
dec
push
xchg
repnz
xchg
aad
insb
lock
stos
mov
dec
repz
test
scas
mov
movsb
or
pop
pushf
test
vzeroupper
lcall
in
mov
lock
ret
adc
daa
js
fistpll
push
xchg
push
jnp
pusha
add
lds
sar
outsl
icebp
rcrb
daa
xor
es
sub
sub
pushf
popf
cmpsb
fdivrp
pop
and
sahf
mov
ljmp
leave
push
adc
lods
aam
scas
jmp
adc
mov
cs
adc
mov
adc
mov
lods
lcall
mov
pop
mov
out
cmp
sub
mov
test
or
xor
imul
jns
fwait
cs
mov
push
mov
lahf
cwtl
xor
jg
loope
xor
mov
xor
xor
arpl
das
cmp
sbb
sbbb
es
xor
push
mov
cmp
or
inc
movsb
inc
adcl
cwtl
cmp
mov
mov
mov
test
enter
shll
popa
es
shrb
imul
shll
icebp
sbb
jecxz
ja
sub
rolb
arpl
gs
or
daa
mov
fdiv
lods
dec
mov
sub
dec
pushf
fwait
arpl
dec
cs
lds
testb
jnp
xchg
ds
mov
lods
sub
aaa
jnp
clc
dec
stc
pushf
lcall
outsb
inc
sub
mov
data16
adc
mov
lods
add
rcll
mov
lock
les
dec
cmp
test
enter
jmp
nop
and
ljmp
inc
mov
pop
ss
repnz
inc
outsl
adc
fdivrl
mov
push
imul
test
ss
pop
xor
or
fidivrl
repz
pop
jg
inc
xor
imul
or
add
jecxz
push
mov
dec
fnstcw
es
jne
pushf
cmpsb
ret
cmp
xor
lea
push
or
sub
aam
sub
fstpl
not
jb
add
pop
bound
lahf
sub
bt
push
popa
or
dec
adc
xchg
test
pop
in
xchg
jmp
xchg
jecxz
dec
and
test
mov
testb
out
push
cmpsb
adc
adc
xor
cmc
cltd
div
je
push
pop
hlt
cmpb
dec
xor
nop
push
movsb
adcl
cmpb
xchg
and
or
xor
xchg
inc
mov
sbb
pop
loope
push
sub
sbb
xchg
iret
dec
incb
out
lret
ret
neg
fidivrs
pop
divl
push
cwtl
sbb
dec
add
pop
pop
flds
sti
cwtl
mov
xchg
fcoms
sbb
or
xor
or
cmp
or
dec
xor
cwtl
sbb
mov
xor
fcomp
in
or
sub
out
dec
sahf
cli
icebp
aad
or
adc
ret
movsb
mov
sbb
xor
aad
fisubrl
test
cmp
into
jo
adc
adc
pop
pusha
aad
mov
popf
rep
lock
addr16
mov
out
add
dec
scas
pop
movsb
bound
les
mov
jbe
add
in
jno
mov
test
push
aas
xor
dec
fisubl
xchg
cmp
fcoml
push
mov
or
inc
inc
cmp
or
out
mov
push
xor
clc
mov
pop
or
movl
jb
js
mov
adc
das
dec
aam
mov
inc
sub
test
scas
imul
mov
icebp
add
arpl
or
add
push
cmpl
mov
jns
loop
ja
aad
push
push
out
les
add
lods
mov
fucom
jbe
std
ficoms
daa
dec
bound
or
push
test
insl
stos
pusha
cmpsl
int
push
pusha
push
push
inc
imul
in
movsl
inc
notb
sub
popf
adc
adc
push
lret
pop
insb
xor
add
out
cmpsl
or
lods
add
or
pop
and
or
inc
shll
orb
test
mov
aam
cwtl
cmp
mov
dec
data16
inc
inc
xchg
push
mov
pop
mov
jnp
mov
and
mov
adc
in
push
scas
mov
cmp
idivb
outsl
xor
add
sbb
loop
repz
pop
mov
cmp
mov
lret
or
add
mov
out
loop
stos
sub
rcrb
inc
push
leave
scas
jg
scas
fsubrl
xchg
push
xor
ja
jp
xchg
lret
lret
imul
sbb
jg
ret
arpl
sub
xlat
pop
dec
adc
mov
mov
cltd
fstpt
cltd
lods
cli
testb
xchg
pushf
rorl
jne
sbb
hlt
insl
mov
push
int3
dec
aad
inc
fdivp
adc
mov
add
jge
loopne
jbe
xchg
rcrb
ja
xlat
inc
xchg
pop
xor
and
xor
clc
out
mov
cwtl
mov
fwait
add
outsl
xor
gs
out
int3
push
and
cld
push
dec
push
and
mov
outsl
xor
arpl
icebp
mov
lahf
cmp
sbb
imull
cmp
sbb
imul
in
lret
arpl
fldpi
mov
jmp
add
and
jns
pop
divb
lods
adc
push
cmp
jg
jmp
push
aam
lock
movntps
inc
or
ljmp
mov
gs
adc
xchg
mov
stos
mov
or
test
pop
imul
outsb
inc
mov
dec
lods
shr
and
lret
sbb
sub
outsb
xor
mov
faddp
mov
and
xor
xchg
test
fcompl
pop
ret
xor
mov
shll
inc
insl
cmp
pusha
xor
xchg
out
or
xor
mov
scas
lds
sahf
xchg
ss
xchg
xchg
jbe
iret
push
xchg
jbe
dec
xor
into
cmpsb
loop
inc
inc
mov
and
xor
aaa
pop
or
or
outsb
sahf
cli
sub
shrb
lods
adc
push
test
iret
test
add
mov
in
stos
mov
fsubrs
sbb
cmc
adc
push
hlt
movsb
adcb
mov
fs
push
adc
test
ljmp
cmpb
mov
mov
and
ja
icebp
mov
in
push
sbb
mov
jb
ret
dec
inc
push
jecxz
xchg
mov
cmp
push
in
pop
dec
sahf
mov
insl
inc
cmp
mov
mov
insl
int
lea
repz
inc
cmp
mov
mov
mov
jnp
clc
jbe
loop
dec
aaa
inc
and
arpl
jg
in
int3
cmpb
lock
repnz
cmpb
lret
lahf
bound
lods
aad
lret
lea
pop
inc
inc
inc
push
cmp
inc
rol
pop
sub
dec
flds
das
push
lea
jle
in
or
push
mov
jb
into
or
cmp
ret
or
ds
mov
mov
and
lea
inc
jne
stc
pop
or
xchg
aad
popl
movsb
cmpsb
test
mov
push
out
sub
int
daa
mov
stc
inc
in
je
cs
out
scas
loope
sub
push
jmp
add
lcall
push
fstpt
inc
jnp
out
ss
jge
inc
and
add
in
pop
leave
or
pop
std
mov
push
shl
pusha
mov
icebp
nop
xchg
mov
inc
test
dec
fistpll
pop
subl
arpl
sub
pop
inc
push
sarl
push
mov
xor
mov
xchg
xlat
push
pop
mov
jge
lea
jg
mov
cmp
hlt
push
fdivs
adc
fisttpll
shll
inc
int3
shr
dec
adc
push
inc
dec
push
mov
fists
xchg
das
dec
pop
jae
mov
push
gs
add
fsubrs
or
jb
das
pop
pop
jo
and
sub
cmpsl
mov
fwait
arpl
je
jg
fiadds
mov
add
ret
test
scas
sbb
fisubrs
cmpb
and
push
out
jecxz
repz
mov
xor
push
inc
fdivl
and
pop
adc
and
aaa
fs
sub
js
add
mov
mov
mov
notl
cmpsl
push
dec
jbe
ss
cld
mov
dec
jne
dec
int
pop
subb
dec
xor
pop
push
push
or
rcl
std
loopne
cmp
test
je
filds
add
add
or
xor
fists
fxch
pop
mov
mov
js
inc
aaa
div
fstpl
cmp
out
shll
rolb
sbbl
es
das
sbb
mov
add
inc
arpl
cmp
mov
adc
pop
loope
add
push
and
dec
iret
xchg
add
mov
cmc
dec
push
je
adc
shrb
in
ja
xchg
clc
jno
xchg
pop
aam
pop
bound
xor
lods
bound
leave
pop
xsaveopt
fucom
push
repnz
nop
call
enter
test
sub
repnz
push
call
shlb
cmp
lret
mov
ret
rcrl
stc
and
push
inc
dec
and
mov
push
int3
sahf
xchg
lock
jae
push
scas
test
inc
sbb
arpl
or
repz
sbb
sahf
daa
scas
js
adc
shlb
pop
out
jnp
fs
fst
mov
or
mov
ret
push
fists
xchg
and
inc
pop
sbb
xchg
mov
mov
sarb
test
outsl
clc
sbb
mov
sbb
cld
mov
test
shlb
and
fadds
fsubrl
movsl
fisubrs
cmp
cmpsb
imul
repz
jb
ret
lcall
icebp
sbb
psraw
into
imul
mov
mov
pop
sub
in
cwtl
ds
pandn
push
mov
or
xor
jg
dec
out
sbb
sahf
stc
mov
cmpsb
test
push
sbb
gs
inc
push
int
cmp
stc
arpl
push
ja
and
xor
sar
and
add
jno
ss
jmp
dec
inc
cmp
lcall
addr16
stc
cmp
mov
jbe
lock
fnstenv
rcr
in
inc
jecxz
mov
aam
mov
xor
pop
and
dec
or
sahf
push
mov
dec
xlat
je
add
js
loop
loop
xchg
inc
sbb
aas
out
mov
fildl
pop
or
scas
dec
xor
jecxz
fists
cmp
mov
push
cmp
mov
in
loope
jp
sub
push
mov
and
push
xorl
mov
rcrl
mov
in
or
in
sub
lret
add
push
in
or
jns
sbb
cmc
enter
inc
ljmp
dec
inc
xchg
fs
loopne
lds
add
insb
push
in
and
mov
cmp
in
pop
mov
sub
or
test
ret
sbb
push
cmc
pop
aam
lcall
dec
jbe
xlat
cmp
mov
jecxz
xchg
test
mov
imul
arpl
sar
cwtl
xlat
push
aad
cmp
fstpl
aam
push
mov
imul
loop
pop
pop
mov
out
cmpsb
rorb
call
mov
jnp
add
jb
stc
add
or
inc
stos
mov
xchg
orb
mov
mov
push
xor
xchg
out
movsb
lock
push
lea
in
ja
ret
fld1
mov
xor
mov
dec
jno
fdivs
les
int
sbb
lock
jb
lods
adc
lds
adc
rolb
adc
insl
sahf
mov
cmp
mov
inc
push
repz
xor
sub
push
xchg
in
xchg
out
mov
cli
mov
or
stos
mov
jno
clc
les
orb
or
cmp
mov
aaa
fimull
out
repnz
aaa
adc
pop
lds
inc
cmp
add
call
mov
addl
xor
popa
inc
sahf
sub
test
inc
jne
movsl
mov
test
pop
dec
in
into
in
dec
xlat
sbb
incl
pop
and
mov
push
pop
not
sub
xchg
mov
das
fs
pop
addr16
fimuls
mov
ljmp
stos
enter
jmp
xchg
pop
lahf
loope
push
sbb
shrl
into
shl
cmp
mov
xchg
es
dec
icebp
aas
in
xchg
pop
movsl
adc
mov
dec
dec
pop
out
sub
fimuls
es
dec
dec
jno
insb
mov
fiadds
inc
inc
imul
mov
pop
aas
rcll
push
int
test
pop
addr16
mov
push
push
adc
loopne
and
sbb
xor
add
fnstcw
push
or
data16
adc
pop
ret
or
cs
ret
fldcw
jge
or
jge
fmul
repz
sub
outsb
push
inc
jmp
add
lret
lods
pop
mov
xchg
dec
jno
cli
loope
std
in
or
outsl
jns
lea
test
add
out
pushf
sbb
int
fldenv
cmc
sub
ss
inc
lods
xchg
jmp
in
test
pusha
outsb
lret
shr
push
push
loopne
xor
cmp
xor
adc
test
mov
mov
push
sub
sbb
loop
cmp
inc
xchg
inc
loop
stos
xor
or
cmp
jp
in
in
mov
jne
cli
test
xchg
cwtl
into
imul
incb
cld
jo
repz
jge
adc
out
adc
popa
das
call
dec
out
mov
leave
loope
mov
hlt
sbb
pop
push
hlt
cli
mov
pusha
clc
jp
outsl
out
fmull
out
fs
iret
ret
outsb
cmpsb
cmc
xchg
out
subl
dec
and
rorb
or
pushf
fdivrp
adc
icebp
dec
cmpsl
cmp
iret
push
adc
sti
sub
xor
ret
pop
int
adc
ds
jne
rol
jb
aaa
and
push
call
bnd
shl
insb
dec
ds
fimuls
ja
cmp
fsubrs
divb
push
xor
enter
push
inc
bnd
inc
hlt
movsl
pop
in
and
mov
ret
ret
mov
cmp
movsb
jns
sub
lahf
imull
adc
mov
mov
dec
sbb
adc
gs
xchg
sbb
ds
cmp
popf
dec
mov
insb
dec
pop
push
gs
push
cwtl
outsb
sti
push
push
or
pop
mov
in
dec
or
movsb
sub
das
push
lahf
sbb
clc
cmc
nop
pop
fcompl
jle
mov
es
cltd
enter
xchg
stos
pushf
mov
arpl
nop
push
dec
sarb
dec
xlat
or
or
sub
fadd
mov
clc
shl
lea
movsb
or
in
into
loopne
adcl
scas
mov
mov
sub
mov
cmc
rcll
aas
subb
js
jg
mov
pop
dec
add
int3
mov
push
hlt
clc
cmp
mov
and
adc
stos
sub
in
repz
push
imul
out
mov
sahf
jno
popf
mov
shrb
in
iret
ljmp
dec
push
jbe
jle
mov
imul
hlt
sub
popf
out
jg
mulb
adc
pop
jg
icebp
mov
shlb
xor
xchg
sbb
rolb
mov
push
lods
loope
out
pushf
xor
fstps
adc
xchg
shll
ret
jg
inc
sbb
test
outsl
push
int
sub
negl
mov
add
xor
cmp
arpl
sbb
jo
pop
stos
lahf
enter
mull
push
sbb
push
rorb
cmpsl
inc
in
inc
add
sbb
dec
cmpsl
or
mov
fldt
adc
sbb
repnz
dec
jne,pn
pop
mov
push
sbb
or
mov
clc
fstpl
jmp
mov
out
and
xchg
sahf
int
or
int
add
and
stos
out
inc
dec
jmp
mov
icebp
jp
enter
xor
into
sahf
fnstenv
aam
cmp
lea
xchg
jbe
and
dec
lret
push
nop
arpl
loopne
or
testl
mov
mov
mov
or
and
outsl
addb
mov
in
mov
cmp
inc
xor
sub
mov
cmp
scas
mov
sbb
jmp
notb
aaa
mov
std
xor
push
ficomps
dec
mov
mov
pop
pop
jmp
fwait
sbb
xchg
push
pop
mov
mov
nop
xchg
add
lret
cs
into
ja
sub
xor
mov
mov
enter
aas
pop
mov
and
xchg
push
or
adc
push
scas
dec
shlb
pop
sub
mov
or
sbb
xchg
loope
sub
test
or
mov
into
bound
or
xlat
out
sub
insb
testb
fs
fidivl
cmpl
fiadds
xchg
and
popa
and
leave
adc
dec
xor
das
leave
aad
jp
mov
icebp
dec
js
jmp
jg
pop
cmp
loope
stc
popa
pop
fists
ret
adc
test
xor
jno
cmp
hlt
mov
outsb
outsl
mov
xchg
sarl
divb
push
jecxz
push
out
pop
inc
jnp
jns
cld
cmp
push
scas
lods
add
jnp
mov
lcall
push
cmpsb
sub
ljmp
or
test
sbb
sbb
pop
xor
inc
sub
into
call
cmp
inc
xor
sbb
ljmp
out
push
out
loop
cld
dec
jb
out
sar
sub
cmp
repnz
mov
xchg
sbb
push
outsl
push
sbb
imul
xor
jp
test
push
mov
sub
push
ret
mov
sub
movsl
xchg
ljmp
aad
icebp
sub
cmp
add
push
fsts
jl
adc
mov
es
sbb
xchg
sbb
pop
rcll
adc
out
into
out
into
pusha
loop
jg,pn
int3
add
pop
mov
jae
jae
add
xor
sbb
xlat
adc
test
mov
push
sbb
push
rcr
adc
mov
cmp
add
aam
xchg
push
stc
and
sahf
mov
pop
sbb
in
cmpsl
ret
pushf
addr16
adc
test
and
pusha
fldl2e
and
cmp
jge
sub
movsl
nop
push
test
mov
mov
out
lret
dec
imul
into
mov
sbb
pop
test
mov
push
sbb
orl
adc
mov
xchg
imul
sub
mov
jge
push
in
add
xor
fdivs
hlt
wbinvd
cwtl
pop
dec
cmc
fldenv
add
packsswb
es
pop
adc
adc
leave
pop
shr
mov
aad
inc
inc
divb
xchg
jmp
stos
pop
sub
jg
incl
dec
in
cmpsl
cmp
mov
out
mov
mov
adc
idiv
jle
add
xor
xchg
fbld
sti
push
add
add
sarb
faddp
in
xor
fwait
rorb
and
nop
and
mov
into
loop
sbb
pop
and
adc
scas
adc
push
and
pop
js
jne
addr16
popf
addb
push
sahf
insb
mov
in
je
stc
dec
loope
dec
adc
imul
jnp
movsb
xchg
xor
jl
mov
sbb
and
iret
clc
movsb
push
pop
ret
sbb
mov
mov
sub
mov
das
adc
jbe
stos
pop
out
mov
cmpsb
cmp
sbb
mov
mov
add
scas
data16
cld
inc
mov
cmc
sub
cmpsb
fistl
in
in
nop
xchg
pop
pusha
push
out
push
adc
dec
pushf
lret
pop
lcall
mov
push
fmuls
jecxz
cwtl
bswap
in
xor
imul
cltd
add
sbb
lret
out
cmpl
mov
and
jp
loop
jne
sbb
out
lret
loop
adc
outsl
jecxz
pop
add
pop
or
and
mov
or
cmpsb
or
mov
jnp
and
lods
scas
fdivrs
leave
inc
lock
xchg
sub
aad
js
pop
sarl
bound
mov
xchg
mov
or
das
fadd
je
xor
popf
cmpsb
cmc
sub
andl
and
and
mov
add
sbb
push
xchg
and
imul
pop
push
in
fcompl
sub
push
sbb
mov
cmp
rcrb
outsl
adc
xchg
push
cmpl
mov
pop
adc
mov
pop
test
mov
es
inc
outsl
push
leave
ffreep
xchg
xchg
hlt
testb
sti
xchg
xor
je
push
xor
jbe
dec
rorb
je
mov
cmp
pop
int
or
imul
je
sbb
mov
lahf
adc
mov
dec
and
data16
inc
pop
or
in
mov
fnstenv
fnsave
aas
popf
daa
outsl
pop
mov
stos
jmp
mov
pusha
pop
inc
mov
push
xchg
mov
sbb
pop
mov
addl
sti
xchg
shrb
sti
inc
mov
xor
mov
inc
mov
mov
push
fs
lret
in
sub
xchg
push
xorl
xor
sub
push
pop
lret
aad
sarl
pusha
mov
push
aad
jne
dec
out
push
cltd
cld
in
inc
lea
rolb
inc
dec
and
mov
push
or
adc
out
push
cld
push
xlat
sbb
fmuls
fcmovb
fnstenv
rcll
pushf
fs
lcall
or
jmp
cmp
inc
mov
mov
fwait
mov
mov
mov
adc
or
pushf
stos
cltd
dec
scas
mov
dec
cmp
ror
outsb
cli
in
jae
mov
sarl
outsl
repnz
dec
aam
xchg
inc
jmp
js
mov
ret
icebp
push
in
xchg
dec
xchg
aam
mov
push
mov
hlt
jl
push
and
pushf
lods
push
sub
xor
hlt
shl
jmp
push
xor
por
mov
xchg
xor
xchg
or
daa
sub
sbb
adc
rep
in
mov
roll
fidivl
lret
add
push
das
cltd
and
roll
xlat
push
add
in
ficompl
mov
outsl
ficompl
mov
int
int
mov
ds
push
sub
adc
gs
lcall
inc
jge
inc
out
nop
aam
les
je
inc
rcl
and
or
ja
xor
mov
and
aas
lret
mov
test
cs
mov
bound
imul
jmp
leave
jmp
cmp
jmp
adc
into
dec
jmp
outsl
ror
mov
repnz
je
jge
lret
hlt
mov
into
rcll
mov
sti
popf
jmp
jne
xor
lods
jg
cmpsl
ljmp
jle
push
shrb
pop
ficoml
rorb
or
addl
push
lds
inc
adc
xor
rcrb
add
es
idivb
xlat
mov
xchg
cmp
fwait
ret
jg
stc
lahf
popa
or
inc
jno
sub
mov
inc
pop
mov
cltd
cmp
mov
ret
mov
xlat
and
dec
mov
lods
push
dec
pop
or
movsb
and
or
dec
out
cwtl
or
adc
jmp
mov
fsts
push
push
iret
mov
jge
jg
ficoms
jg
cmp
push
insl
lock
jmp
or
aaa
push
sahf
arpl
xchg
mov
test
sbb
pop
aam
adc
jnp
add
xor
int
xchg
popf
pushf
mov
xchg
ds
lahf
arpl
mov
orl
leave
jecxz
ficoml
lea
shr
inc
jp
adc
jns
stc
push
add
and
push
sbb
dec
outsl
push
pop
cmp
xchg
aas
xor
push
cld
pop
push
inc
jno
jl
push
push
push
out
or
iret
push
xchg
inc
lock
sub
inc
push
test
mov
sbb
pushf
decb
fmuls
es
pop
adc
pushf
mov
rcrb
sbb
sbb
or
sarb
and
xchg
xchg
lcall
push
sub
push
jl
jae
dec
lret
lret
push
fstps
sub
mulb
dec
dec
cmc
test
mov
mov
jg
aad
add
call
fneni(8087
adc
xchg
mov
dec
movsl
popa
test
repnz
aad
and
rcll
imul
sub
add
sbb
sub
iret
pop
dec
jg
mov
pop
push
push
cmp
pop
push
es
add
sbb
data16
ja
out
pop
outsb
ljmp
cmc
xchg
jbe
cmp
mov
mov
xchg
mov
dec
xchg
mov
add
mov
sbb
cmpsb
fwait
imul
xor
insb
xor
enter
cmc
in
data16
push
jmp
jge
add
inc
jmp
loope
sbb
adc
mov
mov
test
inc
std
push
fistpl
fs
push
cmpsb
lds
cmpsb
cmpsb
or
addb
int3
aad
in
out
adc
add
sbb
pop
xor
loop
xbegin
imul
add
loope
inc
adc
mov
into
mov
jo
divb
repz
in
ret
push
adc
xchg
sbb
mov
xchg
nop
dec
dec
or
leave
add
ss
adc
xor
mulb
sbb
hlt
cmpsl
push
dec
lock
xor
pop
or
adc
sbb
cmp
pop
sbb
push
mov
xorb
imul
mov
test
int
aas
xchg
shll
std
sbb
mov
cmpb
pop
in
mov
inc
sbb
xor
pop
in
out
shll
jmp
mov
leave
push
and
jb
jmp
cld
ficomps
xchg
xchg
sarb
cmovno
or
inc
outsb
ljmp
xor
test
out
and
inc
cmc
jle
sub
shl
inc
add
jae
adc
jmp
ja
loope
in
daa
notb
idiv
cs
rclb
lea
lea
inc
and
and
std
mov
xor
or
pop
xchg
jns
and
xchg
xchg
insb
test
jmp
test
mov
insl
out
stc
add
mov
sbb
loop
or
push
and
jmp
jl
xchg
repnz
movsb
mov
rorl
push
cs
inc
movsl
adc
jle
xlat
lcall
jb
push
sbb
psllq
inc
mov
fsubl
out
mov
ja
mov
mov
add
ret
pop
mov
jne
jno
lods
test
clc
in
xor
cli
xchg
js
pop
je
adc
dec
ljmp
arpl
sbb
add
sbb
and
fisubrl
roll
cmovl
dec
and
in
pop
insb
clc
lock
insb
iret
mov
sti
pop
icebp
les
dec
int3
pop
mov
in
cmp
xor
mov
mov
insl
subb
pop
fstpl
roll
dec
sti
mov
frstor
xchg
fstpt
xor
xor
repnz
cmp
xor
adc
mov
xor
xchg
mov
scas
push
out
xor
mov
or
mov
movsl
in
pushf
xor
sub
sub
mov
jg
pop
push
push
lahf
lret
push
test
pop
sub
loope
bound
fldt
xor
xor
adc
addl
in
insl
inc
add
jne
test
mov
aam
cli
xor
lcall
or
pusha
sbb
cmp
fcompl
stos
loopne
jno
sbb
sub
fisubrs
cltd
repnz
shlb
cwtl
imul
scas
hlt
pop
xchg
dec
mov
dec
popf
lar
pop
jecxz
ljmp
das
and
xor
ret
xor
jge
fdivl
scas
ljmp
jae
xlat
sbb
int3
xchg
cmp
data16
sti
adc
rcl
roll
cmp
mov
dec
lods
pop
mov
inc
dec
mov
and
add
stos
and
or
cld
jl
test
neg
stc
cwtl
push
adc
inc
test
aad
add
shlb
jbe
fs
mov
fdivs
or
push
push
andl
stc
imul
pop
jg
jbe
adc
sbb
imul
movsl
pop
and
mov
ret
and
pop
mov
mov
data16
xor
xchg
push
cmp
ficoms
cmp
push
gs
out
sbb
into
aaa
or
bound
xchg
stos
push
mov
pop
xor
int3
mov
xor
jbe
int
mov
mov
sbb
mov
xchg
imul
xchg
adc
push
sub
in
push
outsl
jecxz
movsl
repz
nop
dec
insl
mov
popf
testb
or
addr16
pushf
andb
add
xchg
push
out
test
and
pop
pop
inc
and
int3
fcoms
shlb
and
and
popa
xchg
cmp
push
mov
jl
cli
scas
icebp
cmp
push
scas
mov
insb
cwtl
in
xorb
xor
or
xchg
rolb
dec
lcall
icebp
lret
sub
outsb
insl
sbb
flds
test
adc
gs
push
adc
sbb
imul
push
dec
push
inc
out
fwait
stos
mov
dec
test
ret
xchg
mov
push
jne
inc
cwtl
sahf
mov
push
addb
push
jns
add
inc
mov
or
andb
frstor
mov
dec
push
dec
and
and
pop
stos
sub
sbbl
dec
sbb
or
cmpsb
lret
jne
cmc
pop
mov
test
jge
test
jle
shl
xor
dec
cltd
add
jnp
ret
sbb
push
xchg
jl
movsb
shll
cmp
pop
add
lcall
cltd
int
mov
cmpsb
xor
jmp
push
or
mov
lock
cmpl
and
sub
ficompl
mov
sub
rcrl
in
cltd
lahf
sbb
repz
and
aam
mov
xorl
daa
test
popa
sub
cmp
sub
lock
cmp
loop
jb
cli
xor
je
xor
test
sbb
lahf
dec
in
mov
pusha
fistpll
or
mov
inc
insl
jb
cmpsb
sub
xchg
lea
inc
adc
test
xor
aam
into
inc
test
and
mov
mov
in
push
inc
stos
pop
cmp
int3
fstcw
jl
and
pushf
popf
sti
add
test
loopne
push
aam
xor
out
out
cltd
test
xchg
xor
jl
xchg
or
movsb
push
jnp
data16
mov
cs
ljmp
sahf
push
and
inc
loop
dec
dec
pop
sbb
data16
cmc
mov
es
mov
adc
loope
inc
dec
cwtl
hlt
popf
aam
pop
sub
sub
leave
dec
sub
js
push
out
aad
fdivs
rcll
dec
pop
in
inc
xchg
lds
xchg
cwtl
mov
je
dec
popf
pop
lods
and
xchg
sub
icebp
bound
clc
loopne
pop
inc
jb
enter
pushf
test
sti
add
dec
xchg
in
lods
xor
pop
outsl
imul
stos
or
es
jne
aas
repz
xchg
popf
loope
test
or
loope
cmp
add
pop
sub
ljmp
std
push
jle
mov
adc
daa
mov
aam
aas
int3
cmp
sti
stos
into
cli
sub
ljmp
fs
jge
mov
into
xchg
pushl
inc
cli
mov
mov
dec
adc
fimuls
xchg
fiadds
or
xor
es
pop
stos
and
rorl
inc
or
out
insl
xor
dec
loope
pop
mov
mov
pop
fcoml
jg
getsec
popa
xlat
sbb
cmp
pop
int
ja
fs
sub
adc
fld
xchg
insl
xchg
xchg
mov
xor
sbb
flds
add
scas
dec
cwtl
stos
cs
xchg
insl
and
xor
add
or
dec
sti
cmp
mov
push
dec
sbb
mov
jmp
outsl
daa
xor
les
inc
jl
add
lods
mov
or
loope
jmp
cmpl
jno
sub
mov
sbb
pop
movsb
aaa
lahf
add
mov
mov
test
imul
cmp
adc
ficompl
jo
pop
dec
pop
pop
mov
mov
cmovae
insb
push
rcll
pop
add
sti
mov
push
insb
sahf
sub
arpl
loopne
sub
outsb
pop
dec
push
mov
fxch
mov
fisubs
and
add
cmpsl
or
push
imul
into
mov
jns
in
jo
cmp
mov
mov
pop
mov
and
adc
mov
mov
sub
sub
jno
xor
dec
loop
aad
ret
inc
test
aaa
sub
mov
int
pop
stos
jle
shrb
pop
mov
sbb
fiaddl
inc
lcall
adc
xchg
out
int
xor
subl
inc
mov
stos
daa
shll
mov
sub
pop
orl
je
pop
xchg
xchg
mov
add
push
xor
mov
jno
jle
sbb
mov
adc
sbb
mov
pop
jmp
dec
sahf
aaa
in
test
jo
cmp
icebp
adc
pop
xchg
hlt
xchg
mov
repz
orl
push
sub
cmpb
fsubrp
inc
adc
cmp
popf
sbb
pop
mov
jle
cltd
pop
lret
inc
cld
dec
xchg
call
mov
push
inc
push
xchg
mov
fimuls
aam
sub
in
js
mov
nop
popf
outsb
and
sarl
xorl
shrl
jge
in
iret
rolb
mov
xor
pop
insb
sub
xor
xchg
cld
repnz
xchg
mov
jns
shr
lea
xchg
lcall
adc
inc
push
mov
push
adc
sti
scas
dec
lret
cmp
inc
out
mov
mov
outsb
cmp
adc
imull
jb
push
push
gs
push
cwtl
cmp
cmpsb
jne
pop
mov
rcr
pop
lods
fnsave
mov
push
sub
push
and
stos
add
adc
testl
sbb
enter
test
les
mov
movsl
notb
movl
repnz
insb
add
mov
loope
fstpt
xchg
in
xchg
test
pop
imul
or
jmp
sub
push
out
push
ficoms
inc
add
jo
jecxz
dec
into
gs
fbstp
mov
mov
out
pop
loope
cltd
xor
mov
les
xor
lcall
gs
lds
add
stos
mov
divps
sub
pop
jb
pop
and
jle
pop
call
xlat
insb
stc
mov
rcl
dec
jae
pop
pop
lock
mov
enter
push
xor
cwtl
cmp
jecxz
andnps
mov
hlt
xor
push
test
leave
pop
push
jmp
cmp
and
mov
mov
mov
cmp
sti
mov
push
iret
adc
jmp
lods
es
mov
cmp
or
mov
jecxz
icebp
jbe
js
and
inc
sbb
fldt
push
test
xor
leave
push
jae
test
fmul
xor
mov
cmp
adc
nop
or
or
mov
fdivl
ss
test
jo
push
push
adcb
pusha
enter
and
dec
stos
outsl
jno
mov
cmp
and
mov
fs
in
mov
repz
ljmp
std
cmp
sbb
js
xor
bound
mov
clc
sbb
negb
adc
imul
jle
push
cmpb
rcrl
mov
sub
adcb
lods
add
xchg
shl
or
cwtl
pop
rorb
jo
mov
mov
or
lahf
lock
cmpsb
mov
and
in
jno
mov
subl
mov
mov
mov
out
xor
sarb
test
jl
push
pop
mov
lock
xchg
sahf
add
xor
cmp
rolb
ss
rcrb
mov
insb
sub
sbb
inc
shll
in
dec
cmp
mov
xchg
xchg
xlat
mulb
test
add
jno
das
std
mov
cltd
pop
test
jp
mov
push
lock
dec
push
call
mov
movsb
subl
lret
je
scas
jns
imul
cltd
push
scas
mov
push
popa
cmp
test
loop
mov
andb
cs
adc
idivb
call
fiadds
dec
subl
ret
ds
and
pusha
mov
mov
and
jns
jno
or
adc
imul
outsb
mov
pop
xchg
xor
dec
push
stos
rolb
nop
stc
jge
mov
fs
in
test
daa
xchg
jb
imul
push
ret
push
ja
div
jbe
out
or
mov
cs
es
popf
test
sub
nop
jno
dec
aad
push
fdivrl
push
mov
out
xchg
xor
xchg
push
jb
call
test
push
insb
xor
adc
mov
lcall
sub
lcall
sbb
iret
das
loop
cmp
cli
popf
loope
gs
dec
out
data16
out
outsl
mov
mov
in
sbb
outsb
adc
int3
sbb
mov
mov
push
cmp
inc
in
and
sahf
xlat
fildl
and
shl
xor
ja
rolb
jb
mov
cs
pop
cmp
add
mov
lods
sub
cmpsb
nop
lcall
je
sub
mov
or
notl
xlat
loop
sarb
insb
imul
xchg
mov
push
add
lea
cmp
or
sbb
popa
out
or
andl
lods
inc
xor
inc
shll
pop
rcrb
inc
test
cmp
clc
or
sbb
icebp
adc
and
sahf
pop
xor
mov
arpl
sub
cs
push
cmp
daa
insb
and
mov
sti
insl
xor
arpl
sbbb
sub
adc
sub
mov
and
clc
andl
sbb
jge
xchg
cmp
loopne
sub
jnp
addl
sti
aad
aas
shrb
insl
pop
xchg
popf
lods
cmp
ret
cmp
push
jl
outsb
jne
das
insb
pop
mov
pop
dec
jns
movsl
rorl
leave
pop
or
shlb
sti
dec
orb
xchg
push
inc
in
aam
xor
hlt
push
cmp
inc
gs
sub
scas
lcall
adc
mov
adc
sti
xor
mul
rcrb
cld
insl
ljmp
dec
icebp
testb
frstor
stos
cmp
push
pop
test
xor
pop
aam
adc
dec
and
dec
mov
lock
test
mov
addr16
xchg
ja
daa
push
icebp
pop
jnp
add
mov
sbb
push
ds
es
imul
sti
add
push
push
vsqrtsd
mov
mov
repnz
rorl
lret
push
fstl
and
xor
fidivrs
pop
pop
add
data16
fwait
cmp
and
test
sbb
push
cli
adc
push
ds
jl
lds
jae
fsub
mov
cld
out
cltd
cmpsl
dec
xor
mov
xchg
or
mov
test
mov
pop
cli
in
negb
rcll
lods
mov
insb
scas
sbb
leave
xchg
outsb
rolb
fsts
bound
and
pop
inc
lea
xchg
and
inc
and
lret
mov
sub
pop
outsl
add
sar
add
rcrb
mov
pop
test
mov
inc
nop
sub
inc
mov
ds
jb
xor
mov
xchg
mov
into
push
cmc
mov
jns
mov
dec
dec
pusha
mov
mov
out
xchg
pop
ret
jg
je
mov
sub
mov
dec
shlb
insl
push
clc
mov
push
pop
pop
icebp
stc
ja
jle
push
int
out
adc
or
es
ret
icebp
test
fisubs
in
pop
push
sub
lahf
dec
jne
xchg
jmp
test
inc
outsb
xor
push
add
inc
movsl
mov
push
sbb
xchg
jns
mov
addb
mov
sti
pushf
and
lcall
out
dec
or
xor
test
or
mov
adc
shll
sbb
and
in
pop
call
cld
jmp
lods
xor
leave
arpl
or
mov
xchg
out
mov
movsb
pop
xchg
push
cmp
insl
jmp
enter
cltd
lods
test
ja
outsl
call
loopne
movsl
sub
mov
and
jmp
fsubrl
xlat
clc
into
nop
jbe
int3
icebp
or
inc
test
daa
fisttpl
cmp
ds
pop
cmp
sbb
ss
lahf
ja
stc
mov
fnstsw
hlt
ss
lea
pop
in
test
add
fs
cmp
mov
mov
sbb
add
xchg
xor
je
sub
hlt
stos
push
clc
insl
fildll
aad
jg
mov
sbb
xchg
in
xchg
inc
mov
push
shl
cmp
mov
xchg
or
decb
mov
adc
ljmp
adc
and
js
xor
push
xchg
int
adcb
mov
inc
pop
rcrb
sbb
leave
ret
das
ret
iret
aad
cmp
add
imul
aad
jno
fisubrs
or
sbb
add
push
pop
shlb
movsl
fldt
pop
pop
fldcw
mov
jmp
cmp
repz
gs
mov
clc
jo
xor
push
cwtl
or
cmpsb
mov
ret
or
popf
cmpsl
pop
inc
push
or
inc
sbb
adc
jo
fwait
js
add
and
ss
mov
dec
sub
sub
test
xchg
test
xchg
pop
jg
imul
pop
pop
push
push
in
pop
jbe
insl
sub
addr16
call
cmp
add
pop
jmp
pop
rcrb
mov
sub
add
and
cmpb
dec
adc
loope
mov
lret
pop
add
inc
mov
xchg
movsl
cwtl
das
das
pop
xor
pop
or
gs
stc
les
mov
fisttpl
or
outsl
hlt
loopne
sub
pop
out
xchg
cwtl
fildll
push
aaa
inc
loop
sub
aad
repnz
pop
jmp
add
das
mov
adcb
dec
push
sub
fisttpll
ror
popf
xor
cmp
inc
emms
jne
cwtl
dec
iret
ret
push
mov
stos
cli
jbe
cmp
or
push
loopne
dec
inc
sbb
dec
dec
pop
push
push
push
test
ds
out
pop
out
push
neg
jns
jbe
leave
cmpsb
mull
fists
xchg
add
sbb
sub
fmuls
subb
xor
in
sbb
dec
jno,pn
out
sbb
mov
cltd
push
cltd
cmc
into
insb
fdivp
jecxz
lods
push
mov
add
scas
and
or
rcrl
sbb
jae
cmpsb
stos
mov
inc
mov
daa
repnz
mov
push
xor
movsb
movsb
fimull
inc
jecxz
sbb
push
mov
cli
mov
filds
imul
aas
enter
mov
out
outsl
inc
adc
iret
adc
push
mov
into
jge
sahf
sahf
sub
xor
dec
add
sbb
cltd
mov
loop
lret
push
les
jbe
jmp
ja
sub
adc
or
jnp
lret
cmp
ja
xor
aad
jnp
mov
jbe
lret
cld
arpl
mov
lods
mov
loopne
ret
jae
aam
sbb
lcall
cmpl
pushf
xorb
mov
mov
jno
jp
sbb
ljmp
dec
push
clc
pop
ljmp
loop
inc
lock
inc
pop
push
repz
add
in
sahf
mov
fcmovnb
rorb
mov
into
shlb
inc
jb
ja
mov
push
fsub
mov
sti
sbb
and
gs
or
out
or
and
jo
cltd
in
arpl
mov
cwtl
cli
pop
lods
mov
test
jo
aam
jg
dec
mov
fidivs
jge
or
je
cli
jno
fdivs
adc
mov
adc
sub
push
fwait
adc
out
inc
adc
xchg
push
dec
jae
or
dec
in
cs
xor
lahf
lea
roll
sbb
and
out
stc
mov
mov
into
jmp
adc
adc
daa
test
add
xchg
sub
fcoml
int3
pop
and
sbb
rclb
iret
sar
imul
pop
fldl
movsl
rolb
xor
mov
or
leave
lcall
and
jp
sbb
jo
scas
xchg
fs
fldt
int
xor
stc
sbb
add
sbb
and
lahf
jp
lods
mov
add
mov
push
and
jbe
xor
dec
cmp
sar
push
mov
and
popf
lcall
jnp
jp
dec
les
in
jbe
push
mov
push
mov
aam
push
push
dec
xchg
jmp
mov
dec
mulb
cmc
cmpsl
jne
xchg
pop
sub
mov
sub
int3
inc
mov
push
sar
adc
bound
ljmp
pop
xorl
ds
inc
stc
xor
js
cwtl
add
out
push
sub
bound
insb
sbb
mov
out
xor
cmp
aas
mov
mov
push
pusha
scas
call
xchg
fisttpl
adc
call
jmp
sahf
cmc
les
xchg
dec
cld
icebp
mov
xor
adc
xchg
out
in
sbb
and
sahf
or
pop
and
js
add
ljmp
adc
in
push
xor
pop
test
cwtl
add
xchg
int
neg
xchg
adc
outsl
lret
clc
xorl
movlhps
cld
push
cld
mov
mov
pop
cmp
in
fdivs
call
add
icebp
mul
mov
std
movsb
iret
frstor
in
popa
test
and
jae
or
loope
fcmovnu
inc
mov
pop
fs
in
jecxz
mov
dec
sub
and
inc
test
hlt
xchg
xor
pop
push
cmpsb
jne
jnp
sbb
cmp
scas
orb
clc
repz
int3
mov
sub
lcall
fisttpll
sahf
lret
mov
jbe
mov
ret
lods
xchg
movsb
dec
push
jmp
fistpl
jne
or
lock
sti
jl
inc
fs
mov
int3
jg
scas
sbb
imul
iret
mov
xchg
fdivrs
cmp
shrl
pusha
fwait
addl
fisttpl
iret
sahf
fstpt
inc
into
mov
test
pop
std
insl
xchg
inc
pop
dec
cwtl
xchg
negb
xor
dec
jge
jne
lds
insl
xchg
or
jle
fistpl
pop
les
or
lods
add
cmp
or
mov
adc
xor
xchg
nop
xchg
dec
mov
mov
dec
das
ljmp
out
insb
jle
sbb
clc
jne
xor
inc
add
outsl
dec
push
shlb
mov
or
fsubrs
and
push
jb
mov
push
push
and
jno
ror
pop
cmpb
and
adc
in
push
lea
out
addr16
int
mov
jb
mov
popa
nop
push
stos
and
mov
aam
rcll
scas
int
push
movsb
mov
jle
std
inc
ret
jp
into
fidivl
adcl
push
mov
jnp
jbe
movsl
jo
ficompl
sarl
pop
fs
bound
or
stc
call
jbe
cltd
adc
gs
add
add
inc
jne
stc
mov
lock
and
test
les
cld
pop
jl
lock
mov
inc
mov
lret
decb
rorb
xchg
mov
adc
sub
ror
or
test
pop
jns
inc
sbb
cmp
mov
iret
cmp
call
out
cmp
sti
dec
test
push
inc
push
adc
jnp
push
inc
orl
leave
pushf
aaa
push
jb
iret
xor
stc
lea
xchg
jmp
inc
mov
clc
push
in
outsl
xchg
mov
or
xcrypt-ctr
cmpsl
pop
imul
mov
xor
sub
or
test
cmpsb
cmp
inc
dec
inc
xchg
push
push
adc
test
shrl
or
mov
pop
jae
es
pop
xchg
fcoml
xor
std
jge
inc
push
cmp
lret
jmp
xcrypt-ofb
cmpsl
sub
and
add
int
clc
rcrl
and
inc
and
lahf
mov
movsb
and
hlt
es
push
popa
in
push
inc
cmp
icebp
insl
mov
sarb
lea
lret
nop
jnp
jbe
nop
aas
lahf
hlt
das
mov
leave
mov
adc
addr16
push
push
sarl
xor
or
sub
and
inc
sti
je
mov
je
push
fsubr
jl
push
push
jle
or
or
out
popf
repz
test
fcoms
pop
mov
enter
cwtl
xor
jo
or
or
ret
add
jns
xor
jns
adc
aad
outsl
adc
out
dec
xor
pop
mov
cmp
movsb
ret
iret
aad
out
jno
aaa
mov
jne
mov
push
sbb
mov
xchg
xor
mov
lret
push
jmp
push
xchg
cmp
pushf
test
mov
cmp
bound
inc
rcrb
pop
xorb
mov
inc
or
cld
iret
mov
fwait
sub
ja
jb
loope
aad
sbb
iret
cmpsb
cmp
pushaw
dec
cli
stos
sub
repnz
imul
adc
jnp
add
stos
cmp
or
xor
mov
inc
adc
lods
stc
adc
pop
add
sbb
fst
mov
sub
xlat
in
cld
out
outsb
adc
insb
mov
add
xchg
add
pop
xchg
rcr
mov
loope
stc
fidivrl
in
lcall
inc
mov
je
mov
dec
mov
sbb
xor
pusha
or
std
mov
mov
lcall
aas
mull
push
or
test
mov
jecxz
daa
or
xchg
clc
cwtl
pusha
xchg
in
cmp
pop
jbe
sar
mov
enter
js
imulb
push
inc
or
or
jne
and
adc
inc
incb
dec
mov
mov
popf
dec
mov
ds
mov
subb
pop
fdivp
adc
out
popa
mov
loope
pushf
jge
jae
sbb
out
rcr
cmpsl
imul
sbb
inc
ss
cmp
das
pop
ljmp
aaa
in
fwait
sub
xchg
gs
out
inc
sbb
jbe
lcall
or
int
sahf
shrb
cwtl
adc
mov
cmc
mov
test
xchg
xlat
xchg
pop
push
shl
lea
or
hlt
push
pop
jns
adc
stc
push
rcrb
roll
scas
aad
lods
or
sbb
loope
sub
pop
jmp
mov
xchg
iret
xchg
jb
sbb
outsb
and
or
roll
add
cmp
cmp
sbb
lret
mov
mov
jl
cmp
push
fnstsw
lock
mov
cld
lahf
sub
sub
cmpsl
in
jl
movsb
sbb
mov
dec
push
or
loop
or
push
ss
enter
pop
lahf
push
cs
or
stos
lcall
sub
pop
add
inc
xchg
call
dec
stc
push
add
push
les
nop
int
pushf
mov
test
pop
lcall
xchg
xchg
push
loop
es
dec
xchg
bound
mov
stos
sbb
jg
adc
ret
and
popf
lea
outsb
mov
pop
sub
inc
and
xchg
xor
mov
xchg
inc
ret
mov
and
mov
push
mov
js
hlt
ret
and
iret
sbb
jge
jne
inc
and
std
les
leave
shll
movsb
es
out
test
fsubrs
mov
fisttpl
cmp
mov
enter
push
addr16
mov
sbb
jns
icebp
lcall
loopne
daa
in
aaa
cmp
popf
sub
cmc
dec
pop
in
std
mov
sub
xor
inc
jb
cmp
xchg
movups
add
sbb
dec
fisubrl
mov
jg
ret
or
adc
pcmpeqd
lods
loop
scas
jecxz
test
push
aaa
jne
xor
shll
push
cmp
jbe
sub
push
xchg
mov
mov
shll
mov
test
fldl
jmp
pop
xor
xor
movb
js
sbb
adc
repnz
inc
pop
or
stos
mov
or
mov
inc
in
push
and
sbb
push
pop
jge
jmp
scas
jle
fwait
mov
out
mov
add
add
mov
shrl
mov
sti
mov
test
jnp
pop
imul
shr
movsl
jno
movsl
cld
out
mov
mov
cltd
push
mov
mov
or
pop
loopne
imul
pop
test
mov
dec
test
xchg
test
mov
xchg
out
pop
pop
sub
fwait
gs
push
out
push
pop
loope
nop
push
jnp
inc
cmp
mov
test
mov
dec
nop
xor
push
xlat
mov
xor
sbb
adc
dec
sbb
pop
jnp
daa
xchg
pop
mov
add
ds
and
pop
push
or
mov
int3
push
std
cmc
push
ss
ljmp
or
pop
pop
inc
and
std
jne
in
out
aaa
out
seta
popa
mov
nop
shr
inc
push
sbb
add
inc
fwait
daa
push
pop
aad
inc
jmp
pop
ljmp
testb
out
mov
outsb
xchg
loop
inc
out
mov
cmpsb
orl
mov
or
cli
mov
clc
pop
push
xor
sub
adc
mov
loope
je
rcl
insb
aaa
pop
and
pop
cmpsb
cli
xor
adc
add
jecxz
sbb
jb
iret
aam
cmp
icebp
cmp
adc
sub
sub
mov
or
mov
mov
push
and
cmp
adc
inc
sub
lods
adc
sub
repz
mov
shlb
inc
daa
mov
cmpsb
mov
pop
sbb
bound
test
scas
jg
and
mov
sub
fdivp
sbb
inc
test
push
or
gs
fsts
push
dec
push
dec
sub
fwait
divl
inc
loope
lea
in
or
xor
sub
mov
pop
andb
aam
cmp
mov
dec
add
mov
pop
rorl
call
mov
mov
sti
mov
and
cwtl
and
add
adc
jecxz
or
arpl
push
test
pop
dec
xor
jno
les
stos
mov
loope
loope
ss
test
jne
sahf
mov
push
aad
push
call
mov
js
adc
add
mov
scas
popf
pusha
push
mov
pop
adc
data16
aaa
fldenv
loope
sub
out
call
fisttpll
push
mov
daa
in
inc
fstl
push
inc
push
cli
sbb
sub
jnp
stc
mov
movsb
in
push
push
mov
stos
shlb
fildl
add
and
setl
sbbl
das
sbb
test
push
fcomps
jns
out
int3
std
xor
loope
inc
cmp
sub
push
push
cltd
ds
or
pmaxsw
mov
add
mov
xlat
pop
inc
mov
adcl
ljmp
sbb
mov
std
sub
je
adc
pop
jg
jp
xchg
push
push
mov
push
push
mov
pop
or
aad
cmpsb
jae
hlt
ja
das
push
or
sbb
xchg
jmp
pop
test
iret
fistpl
inc
dec
testl
mov
jmp
xorb
pop
push
dec
mov
cmc
xchg
mov
cmpl
aas
sahf
test
mov
inc
cmp
add
and
mov
push
jmp
add
andl
cli
pop
dec
push
frstor
push
xor
test
sbb
sbb
mov
adc
add
cli
rolb
push
in
mov
shrl
lds
das
jle
xor
adc
stc
sub
mov
jb
mov
push
stos
rorb
lahf
out
push
xor
pop
mov
sub
nop
out
data16
ja
cs
cmp
push
xor
iret
pop
mov
out
loop
cmpsl
daa
mov
xchg
sbb
pop
pop
inc
mov
sub
pop
cmp
push
and
vpsubusw
push
mulb
popf
scas
ss
stc
push
adc
push
roll
jo
mov
aam
xchg
xchg
lcall
xor
testb
call
push
xorl
aad
leave
ret
dec
in
push
mov
xchg
imul
sahf
sbb
ss
icebp
je
dec
fimull
add
xchg
stos
inc
sbb
pop
jae
mov
push
imulb
mov
cmp
js
lds
push
jmp
insl
pusha
loop
mov
xor
mov
adc
jp
and
lcall
cmp
shl
jo
inc
ljmp
dec
jmpw
scas
ds
ja
xchg
or
inc
mov
mov
lea
pop
sub
mov
stc
push
out
out
sti
push
ret
or
rcrl
sub
push
mov
push
inc
rcll
pop
dec
lock
mov
outsl
mov
pop
inc
inc
lods
jl
mov
popa
mov
cli
sub
or
sub
lcall
nop
cmpsl
popa
cli
hlt
loop
popl
leave
xchg
adcl
xchg
ret
ror
rolb
mov
jl
mov
jno
ja
nop
movsb
push
xchg
imul
cld
int
mov
fcmovbe
cmc
dec
je
lcall
dec
mov
mov
in
sar
les
inc
push
xchg
imul
and
shlb
dec
xchg
scas
dec
cmpl
das
xchg
lds
in
cld
cmp
cmp
imul
cmp
jb
cmc
sbb
mov
mov
pop
mov
or
or
ss
xor
mov
lahf
leave
stc
test
pop
sbb
pop
sub
lock
in
lcall
std
push
inc
dec
pusha
stos
fwait
popa
stc
ficoms
fwait
popf
mov
mov
xchg
cwtl
dec
scas
jno
add
push
jmp
cli
mov
shrl
adc
jl
mov
movsb
or
sub
xchg
dec
aas
pop
pop
std
xchg
and
rcrl
fmuls
sub
lods
push
sub
inc
cmpb
mov
aad
test
mov
xlat
sub
fildll
loopne
cmc
xchg
addr16
jae
mov
sub
roll
cmpsl
pop
inc
ds
lock
dec
loop
sub
cli
jl
in
in
xchg
xor
xor
jno
add
call
dec
fmull
push
negb
out
and
push
outsl
lea
movl
pop
lds
sbb
ss
sub
cltd
cmp
mov
sbb
movsl
mov
aam
xor
sti
xchg
dec
jnp
cwtl
out
out
and
sbb
mov
insb
loope
pushf
cld
ret
outsb
fcoms
arpl
sahf
repnz
out
cmp
dec
pop
inc
pop
cmpsl
mov
cwtl
pop
mov
cmp
lock
mov
mov
sbb
popf
inc
pop
clc
xor
mov
add
loope
lods
fucomi
sbb
push
cvtpi2ps
or
ret
sub
fwait
outsb
dec
fcmove
out
lods
cmc
out
lret
ss
push
xor
ss
cs
jle
pop
mov
inc
inc
fsts
rorb
pop
and
test
dec
repnz
pusha
cli
leave
cmpsl
sbb
inc
xchg
jnp
subb
xchg
and
mov
jns
jbe
or
setns
aaa
arpl
jo
jnp
enter
xor
adc
clc
inc
andb
pop
push
push
pop
jle
movl
fwait
in
push
pop
push
repnz
jmp
gs
movsb
dec
test
popa
mov
mov
push
inc
adc
in
adc
lret
fcoml
dec
mov
push
jle
inc
xchg
ret
mov
mov
sbb
jmp
lock
aaa
mov
sahf
xchg
fisubrs
push
mov
xchg
daa
pop
adc
out
xchg
push
popa
inc
lret
jg
je
out
pushf
push
jbe
fwait
int
das
adc
or
push
addr16
xchg
cmc
jae
cmpsl
adc
bnd
in
dec
jl
cwtl
mov
jmp
mov
or
lock
sbb
pushf
jge
subl
scas
rolb
loop
popa
xor
outsb
pop
pop
dec
mov
xorl
push
ljmp
lea
or
sahf
gs
pop
pop
mov
and
fwait
out
mov
xor
pop
xorps
test
mov
rcrb
nop
lahf
pop
loop
repnz
mov
or
into
fists
rclb
sbb
cmpsb
lods
jp
inc
fisubs
aad
xchg
jl
mov
inc
lock
pusha
or
pusha
jno
and
lret
test
pop
mov
mov
rorl
xchg
or
mov
push
aad
arpl
into
dec
mov
push
sbb
pop
push
push
outsb
pop
push
mov
movl
push
shl
dec
ret
leave
fwait
inc
add
jno
jnp
hlt
and
loopne
xchg
mov
imul
xlat
inc
in
mov
cmp
pop
inc
xor
push
mov
aaa
loope
pop
xchg
jecxz
bound
or
adcb
lea
aas
loop
push
ss
pop
incl
adc
pop
scas
fcompl
xchg
test
stos
mov
enter
add
shrb
mov
or
adc
andb
cmp
cmc
rcrb
idiv
dec
push
movsl
daa
mov
adc
adc
imul
je
jbe
pop
loopne
ljmp
sbb
pop
or
lret
in
ret
in
into
xor
mov
scas
mov
xor
in
jae
xor
ret
add
mov
sahf
pop
xor
rcrb
insl
js
ja
push
subb
daa
xlat
gs
jl
adcb
aam
push
pusha
incb
cmpsb
xlat
mov
aaa
xchg
test
push
sbbl
add
into
int
mov
push
push
push
cmpsl
int3
adcl
outsb
repnz
out
push
cmp
adc
clc
loopne
and
es
mov
mov
cvtpi2ps
mov
cmp
out
int
jecxz
das
adc
add
inc
inc
not
push
mov
mov
sub
jmp
je
or
je
push
enter
mov
jb
xchg
jne
scas
cld
dec
jbe
push
movb
sub
lea
cmpsb
sub
leave
popa
fcomip
cltd
sub
mov
mov
xor
call
sahf
adc
xchg
dec
cli
pop
in
or
cmp
movb
outsl
inc
xchg
cmp
mov
xchg
inc
xor
push
adc
into
das
fistps
repz
icebp
popf
in
ds
cmp
fwait
jno
and
std
sahf
jo
cltd
ss
sti
cmp
xchg
jnp
mov
pop
mov
outsl
stc
ja
in
arpl
mov
andnps
dec
into
add
shrb
fildll
dec
stc
in
fsubrs
dec
in
das
or
aad
mov
data16
loopne
mov
xchg
adc
pop
inc
cmp
mov
imul
mov
faddl
sub
inc
add
dec
adcb
das
adc
sbb
and
xorb
cmpsl
in
xchg
decb
jl
ja
and
icebp
pop
mov
mov
ss
fwait
in
pop
mov
xor
sbb
push
daa
xor
stos
mov
or
les
out
int
pop
test
or
dec
sbb
push
cmp
and
mov
ja
scas
or
lcall
loopne
dec
rcrb
jg
ja
pop
mov
push
ljmp
xchg
stos
mov
stos
std
mov
dec
inc
jl
cmpsl
daa
sbb
fmuls
and
inc
jns
dec
pop
bound
sbb
cmp
inc
inc
mov
lcall
inc
jg
jge
adc
imulb
stc
ficoml
or
mov
fnsave
out
sub
in
xchg
imul
dec
es
pushf
sbb
mov
sub
cwtl
dec
test
loop
adc
sbb
cmp
push
push
lods
loopne
xchg
rcr
pop
subl
xor
or
mov
adc
fldcw
sbb
sbb
adc
in
dec
mov
pop
cs
dec
ljmp
fmulp
cmp
mov
jmp
xchg
mov
mov
iret
daa
lds
int3
mov
cmc
in
pop
xchg
into
testl
jl
lea
scas
rorl
imul
aas
jmp
in
xorb
xlat
and
mov
inc
clc
fldcw
add
jle
cmp
popf
and
inc
pop
jo
aaa
mov
popa
or
out
push
or
xlat
imul
les
insb
jne
cmp
idiv
pushf
cmp
inc
cmp
xor
xchg
stc
or
dec
scas
push
fisubl
sub
arpl
sub
loop
sub
sub
mov
mov
adc
xchg
lret
shl
mov
xchg
popa
repz
fdivl
push
jp
pushf
sbb
inc
sbb
mov
jnp
xchg
loop
pop
cmp
push
or
sbb
negl
out
or
mov
lcall
xchg
rcrl
push
cmp
and
xchg
and
cmpsl
ds
fcompl
or
push
pop
mov
and
and
dec
decb
dec
xchg
push
fmuls
dec
inc
cld
lret
gs
insb
test
add
lods
sti
pop
scas
aas
rol
jnp
mov
fidivl
jecxz
outsl
lea
testl
nop
test
test
sub
add
das
cmp
jle
loope
std
cmpsl
sbb
add
push
cli
iret
mov
nop
lods
loopne
loop
add
loopne
inc
pusha
add
jne
jno
cltd
mov
push
pop
adc
mov
pop
adcb
push
lret
fisubs
pushf
pop
push
adc
xchg
mov
stc
push
mov
sti
out
lods
frstor
cmp
inc
push
jmp
clc
imul
cmp
outsl
call
adc
push
lahf
in
daa
in
dec
mov
push
negb
jno
adc
mov
or
push
out
aaa
adc
xor
cmp
cmpsl
xor
xchg
or
test
push
jmp
push
jmp
loop
les
adc
ret
xchg
adc
cmp
fcomip
sbb
sub
scas
sarl
push
lret
cmp
test
cmc
pop
cwtl
ss
cmp
ret
ja
mov
cmpsl
aam
mov
jae
fidivl
pushf
or
adc
push
push
insb
loop
ret
es
xchg
or
and
ja
adc
popf
lahf
lock
pop
and
pop
mov
into
mov
mov
mov
cmpsb
roll
imul
lahf
adc
popf
pusha
xchg
pop
repnz
pop
loop
and
cs
in
arpl
dec
jae
jns
lahf
adc
push
mov
cltd
clc
inc
loope
dec
movsl
lahf
sub
int3
mov
sub
xchg
stos
sar
outsl
clc
mov
jecxz
jmp
addl
stos
in
aas
sub
inc
cli
pop
sahf
loope
jl
out
int3
xor
lea
test
pop
lret
mov
cmp
test
push
into
iret
filds
xor
mov
loop
xor
out
dec
fiaddl
iret
xchg
sbb
xchg
sti
push
adc
mov
lret
mov
scas
sahf
mov
pop
subl
inc
mov
int3
jle
mov
xchg
mov
ljmp
sbb
clc
push
in
mov
push
dec
daa
mov
jge
inc
cs
pop
and
shll
or
mov
mov
scas
mov
xlat
inc
xor
pop
push
xchg
icebp
push
inc
mov
xorl
adcb
int3
mov
test
mov
lea
jbe
inc
repnz
jmp
loop
push
push
lcall
and
rcrl
out
sub
inc
cmpsb
adc
mov
fcomps
leave
inc
cmp
inc
xchg
pop
cmp
cmp
loope
pop
je
jge
mov
sbb
sub
incb
addb
test
jmp
mov
cmp
add
bound
testb
jecxz
popl
cmpsb
mov
fucomi
xchg
xor
fs
sbbb
insl
sbb
push
sbb
lds
ja
dec
and
daa
dec
xor
js
movb
leave
arpl
mov
sbbl
sub
cmp
pop
add
es
and
les
mov
outsb
testl
xor
inc
cltd
shll
loop
adc
push
orl
cmc
sbb
mov
cs
popl
cmp
cwtl
ljmp
sub
and
adc
cmp
decl
push
in
sub
test
sub
dec
mov
add
mov
push
push
add
in
xchg
jmp
out
adc
push
enter
in
sub
cmp
sarb
add
pop
pushf
and
repz
mov
pop
and
dec
sub
cmp
xchg
popf
clc
insb
loope
js
push
pushf
ret
aas
mov
jne
pop
add
cld
mov
jo
push
stc
ss
popf
add
jb
cmpsl
adc
mov
push
aam
rcrb
sub
cld
inc
sahf
repnz
jo
jge
movsb
cmpsb
add
lret
mov
sbb
fistpl
das
je
fsts
pusha
and
stc
insl
iret
mov
rolb
test
adcb
adc
sahf
fsubrs
imul
ret
and
push
cmp
roll
or
imul
inc
fwait
std
shll
mov
in
pop
adc
imul
test
mov
popf
stc
fwait
add
jnp
or
outsl
dec
into
cmp
gs
pop
ret
dec
sub
pop
or
cmpsl
cld
es
hlt
lock
test
add
mov
fisubl
adc
js
push
bound
jecxz
xor
pop
sarl
rcrl
insl
fnstenv
cmp
addl
mul
dec
inc
fwait
pop
xchg
cld
addr16
lret
jmp
sbb
push
inc
rcrl
xchg
mov
fcomps
stc
dec
xor
cltd
dec
in
icebp
sub
or
stos
jns
aaa
adc
xchg
mov
neg
mov
fcmovnu
push
sti
test
mov
inc
imul
jecxz
or
and
add
jg
mov
out
aad
ret
loopne
cs
dec
xor
sub
xor
popa
push
inc
pop
push
loopne
xchg
mov
inc
lods
add
and
scas
shr
inc
dec
push
shll
call
cli
jp
and
or
xchg
movsl
aaa
add
or
push
sub
pop
shl
push
loope
xchg
sahf
push
adc
inc
sub
and
std
arpl
test
mov
mulb
lods
out
aaa
insb
inc
shlb
mov
aas
mov
gs
jno
and
pushf
xchg
mov
sub
jns
push
jge
mov
xor
push
rolb
sbb
pop
mov
daa
sub
mov
cwtl
cmc
ret
ret
cld
stc
std
pop
xor
test
jbe
mov
in
push
mov
aaa
insb
inc
push
pop
adc
pushl
and
add
loopne
pop
sub
gs
jg
fwait
div
or
out
sbb
xlat
rorl
sbb
icebp
or
outsb
ret
xchg
std
mov
into
push
inc
pusha
jle
sub
jmp
sbb
and
idiv
lock
inc
mov
sbb
mov
les
sti
mov
sub
in
int3
subl
pushl
xchg
pop
cwtl
add
fs
xchg
adc
fsubrl
loopne
and
adc
pop
pop
addb
lret
icebp
jne
dec
adc
mov
loopne
or
pop
mov
pusha
imul
push
push
aam
sub
xchg
ss
or
je
stc
or
xchg
xor
scas
jp
dec
sbb
repz
mov
xchg
sbb
scas
or
js
push
add
es
pop
pop
or
and
aaa
ret
andl
outsl
pop
adc
inc
mov
add
movsb
pop
movsb
daa
cs
inc
jb
faddp
cmp
cmpsl
inc
pop
mov
loopne
test
push
iret
push
repz
xchg
sub
mov
popf
je
pop
mov
push
jl
fsub
xchg
jge
nop
jb
mov
fdivp
mov
ss
clc
fidivrl
loope
stos
lahf
jge
xor
repz
cmp
andb
mov
mov
inc
and
mov
cmpsl
addr16
sbb
movsl
mov
xorb
int3
fcomps
sbb
or
je
loopne
movsb
sbb
je
and
loopne
jo
fdivrs
cmp
rolb
pop
and
xchg
inc
jnp
pop
frstor
jno
mov
mov
add
test
push
aad
xorb
fistps
add
mov
loop
mov
adc
lret
ja
repz
sbb
xchg
shl
sub
inc
in
ss
mov
mov
insb
add
adc
sbb
xchg
ljmp
pxor
lahf
inc
xor
sub
or
mov
leave
addr16
int
shlb
pop
jg
lret
ss
pop
add
arpl
pop
xor
cld
mov
jo
mov
sub
fcoms
push
test
aad
jno
pop
iret
mov
xchg
notl
insb
xlat
xchg
or
sbb
xor
mov
pop
mov
mov
sub
xor
add
aaa
in
sbb
jecxz
cmp
adc
or
ret
pop
inc
aad
pop
sti
cli
sti
in
push
jne
test
sub
cmp
jns
lock
aad
ret
loope
pop
jae
stos
mov
aas
inc
mov
aad
nop
cmp
pusha
stos
stc
arpl
adcb
pop
cmc
cwtl
mov
adc
inc
or
add
dec
dec
sub
mov
xchg
mov
push
icebp
add
adc
sbb
test
cmp
bound
mov
sbb
rolb
and
add
repnz
sti
add
sub
pop
or
sub
jns
adc
inc
and
leave
lahf
mov
xor
push
inc
das
test
sub
jb
jns
icebp
in
insb
mov
mov
sub
ljmp
ja
nop
incb
push
lea
jl
arpl
enter
je
dec
pop
punpckldq
and
lods
aad
cmp
sub
fwait
imul
dec
fcomip
sub
ljmp
iret
loopne
xchg
mov
fistpl
stc
xchg
sahf
cmpsb
cli
fwait
js
or
inc
inc
loope
push
mov
loope
sbb
aam
jno
data16
orb
add
xchg
add
fbld
sub
pop
push
sarb
adc
sub
fwait
jb
test
mov
xchg
loopne
and
leave
and
dec
bound
jns
push
outsl
lea
lds
adc
out
jb
mov
bt
xchg
shrl
xchg
leave
xchg
or
fwait
sub
sub
insl
fwait
or
fldcw
bound
in
dec
int3
add
push
push
rorl
jno
in
stc
jmp
lahf
sbb
mov
iret
jnp
cli
xor
jp
inc
and
lods
shlb
lcall
mov
jmp
out
test
repnz
push
adc
sti
shl
adc
sub
mov
or
out
stos
mov
mov
mov
adc
lahf
pop
sbb
cmp
imul
lcall
dec
and
call
xchg
mov
sub
push
out
sti
mov
push
jb
jmp
aam
push
or
or
adcb
rclb
dec
out
lods
push
mov
inc
stc
inc
or
xchg
inc
xor
mov
inc
pop
or
adc
jne
leave
jb
fs
loop
inc
xchg
xchg
xor
jl
out
inc
adc
dec
lcall
addr16
adc
or
or
jmp
or
mov
pop
jl
scas
ljmp
loop
push
aas
mov
outsl
aaa
loope
sbb
ds
mov
dec
add
rcrl
shr
mov
pop
je
out
mov
pop
xchg
outsl
jbe
push
imul
or
sahf
into
mov
test
popf
aam
cmp
pop
inc
imul
mov
mov
jae
jo
xchg
outsl
jns
sub
in
out
ret
add
and
lret
popl
and
cmp
int
fsub
mov
push
cmp
add
cmp
push
addr16
pop
add
inc
mov
leave
cltd
in
mov
out
mov
sbb
mov
bound
sub
mov
popf
imul
xchg
add
and
pop
add
andb
insl
nop
repz
fiaddl
xorl
ljmp
roll
lods
repz
mov
or
outsb
push
jno
mov
jp
fcoms
jo
cmp
cli
push
cmp
dec
std
lock
jnp
out
test
push
lds
in
cli
ljmp
insb
cwtl
fcomps
in
add
lret
jo
repnz
inc
out
push
movsb
mov
test
bound
pop
xor
aam
mov
les
clc
xchg
loope
dec
pushf
jns
ljmp
shl
lods
dec
dec
call
mov
in
repz
push
push
rol
mov
inc
sbb
lret
and
lds
push
repnz
xchg
cmpsl
pop
ds
and
push
push
adc
xchg
push
push
movsl
iret
ja
adc
mov
mov
mov
sbb
mov
movsl
pop
mov
mov
aam
mov
out
sub
cmpsl
sub
shll
sbb
dec
cmp
add
cwtl
lret
mov
adc
mov
jnp
cmpsb
mov
sub
es
fiadds
mov
inc
lret
xor
push
mov
aad
mov
lods
lcall
xchg
mov
xorl
and
test
or
add
add
push
xchg
lret
jo
insb
pop
lahf
mov
xchg
xchg
mov
cmp
xchg
mov
fstps
outsb
xchg
iret
lahf
push
imul
xor
fiaddl
into
sti
inc
cltd
out
inc
push
fnsave
push
lret
and
mov
jnp
fcmovnbe
dec
or
icebp
jae
cltd
imul
sub
mov
mov
cwtl
jle
mov
adcl
mov
sub
pop
out
jl
jge
ljmp
pop
movsb
leave
int3
dec
sub
jae
cmp
popf
rcll
inc
mov
xorl
dec
cmp
addb
cmp
leave
pusha
cld
sbbb
out
mov
sub
cmpsl
enter
mov
jb
add
dec
pop
insb
mov
ljmp
jno
jb
test
push
loopne
mov
pop
pushf
in
mov
cmpsb
or
sbb
in
js
mov
cmpsl
fsubs
sahf
outsl
adc
jp
add
dec
fsubrl
arpl
movsb
ffreep
out
jg
xchg
movsl
pop
int
jnp
push
pusha
scas
mov
inc
fidivrs
pusha
fstpt
enter
testl
sbb
cli
xchg
out
mov
jno
or
das
mov
mov
and
aaa
mov
mov
jnp
stos
mov
mov
lds
out
mov
add
sti
xchg
out
es
and
inc
cmpsl
lea
mov
xchg
movsb
mov
out
data16
sub
push
add
jp
mov
inc
inc
gs
mov
jg
test
in
cmp
scas
int3
clc
lret
jl
push
rcll
into
sub
imul
scas
ret
outsb
pop
loope
or
mov
shl
xchg
xchg
sahf
and
daa
leave
push
inc
ljmp
xchg
sbb
scas
mov
lock
push
dec
mov
fsubs
push
movb
jecxz
fsubrl
js
je
fstpl
sub
pushf
xor
aam
push
stos
cmp
and
in
popa
cmp
push
cmp
cmp
sar
inc
xchg
adc
das
xchg
push
pop
or
or
and
cmp
mov
ret
push
inc
jmp
out
out
popa
mov
adc
orl
iret
push
or
push
dec
sahf
es
and
std
mov
scas
mov
inc
mov
xchg
aam
ss
fmul
scas
js
mov
movsl
sub
lock
orl
mov
or
movsb
cmp
mov
nop
call
adc
imul
in
je
inc
mov
jge
icebp
adc
insl
xor
push
and
cmp
mov
iret
adc
adc
fisttpl
inc
aam
adc
jae
cmp
out
ficomps
ficoml
xchg
cwtl
mov
xchg
popa
popf
inc
inc
mov
mov
and
and
sbb
stos
adc
add
push
inc
sbb
cld
aas
xchg
scas
and
and
js
dec
xchg
cmpsl
test
jne
sbb
cwtl
push
movsl
in
lock
cwtl
mov
dec
pop
iret
xor
mov
xor
or
fisttpl
out
aam
dec
stos
sbb
add
xor
imul
push
in
fmull
xchg
mov
add
sub
movsl
insl
aas
add
jge
jmp
mov
xchg
or
cmp
fs
cld
mov
mov
nop
mov
xchg
aaa
ljmp
mov
push
jecxz
jp
lahf
mov
hlt
push
adc
pop
inc
cmp
cmp
test
cmp
push
aaa
loope
js
cmp
je
mov
xchg
jle
pop
in
add
dec
mov
pop
or
mov
andb
mov
mov
cmp
lcall
adc
mov
insb
lcallw
jecxz
jns
inc
xlat
cld
add
negl
add
xlat
jecxz
add
movhps
int
scas
lret
xor
xchg
mov
lods
test
xor
jo
stos
adcb
fnsave
pop
movsl
adc
xlat
push
cmp
or
add
jle
pop
js
jle
les
neg
gs
lret
rorl
jmp
cltd
jge
mov
dec
mov
mov
adc
cmp
push
sahf
rorl
fldcw
dec
subb
punpcklwd
jge
sub
mov
jmp
scas
xchg
imul
stc
insl
mov
pop
mov
xchg
aad
subl
pop
adc
ficompl
mov
mov
jnp
xchg
push
negb
in
dec
adc
leave
icebp
enter
imul
test
pop
fidivrs
fildll
cmp
inc
shlb
xchg
mov
pop
sti
and
popf
pop
or
cmpsl
or
push
dec
stos
unpcklps
push
xor
hlt
hlt
gs
cs
addb
dec
int
xor
fsubrl
add
mov
int3
and
jne
mov
adc
jns
adc
gs
call
mov
pop
dec
mov
push
mov
je
shll
mov
dec
out
lock
jns
out
aam
mov
or
fadd
lret
push
cmpsl
push
icebp
dec
imul
xor
mov
mov
mov
inc
lahf
test
adc
or
outsl
shlb
arpl
xor
imul
add
mov
popa
les
addr16
dec
cmp
inc
push
mov
rol
insl
jnp
fbld
and
and
dec
daa
mov
cmp
mov
fs
sbb
adc
add
iret
aaa
push
sub
call
fsts
mov
adc
gs
jae
adcl
mov
ja
xchg
imul
push
sbb
xor
mov
inc
leave
dec
pop
pop
xchg
fs
xchg
jb
xlat
movsl
daa
or
idivb
lahf
mov
shr
jbe
shrb
jno
push
notl
mov
mov
addl
orl
sub
push
jle
sbb
idivb
push
std
scas
out
adc
lea
sub
mull
jno
mov
sbb
or
sub
clc
leave
mov
loope
and
inc
arpl
aas
aam
out
lret
cmp
xchg
dec
mov
imul
scas
sub
das
inc
hlt
mov
fnstsw
adc
sti
adcb
or
and
cld
xchg
xlat
cmp
movsl
sti
pop
outsb
and
mov
mov
or
or
push
xchg
xor
push
inc
and
mov
scas
scas
movsb
and
jns
pop
mov
xlat
cmp
shl
mov
out
pop
xchg
mov
dec
into
pop
fists
pop
jl
cli
xor
dec
std
mov
mov
pop
in
js
cmp
push
push
leave
pop
pop
leave
push
fs
or
mov
jo
imul
cld
dec
fmul
add
inc
push
shlb
repnz
cs
cmp
adc
dec
cmp
into
jne
cmpsb
or
repz
test
aam
jno
fadds
xchg
add
nop
pop
int
xor
inc
add
jo
sar
push
xor
dec
fdiv
push
repnz
adc
xlat
mov
lods
pop
out
jno
xchg
rorl
add
mov
push
mov
or
dec
repnz
shrb
xchg
xchg
rorl
mov
data16
sahf
push
xor
sahf
inc
or
mov
add
arpl
xchg
jae
rclb
cld
out
out
and
jo
je
xor
out
inc
or
xchg
sarb
cmpsl
fwait
int3
sub
push
loop
icebp
push
and
inc
push
or
push
rcrl
das
dec
or
jnp
gs
adcl
mov
stos
adc
xor
notb
add
xchg
lret
mov
push
add
fsubl
out
inc
in
mov
mov
aam
pop
pop
or
adc
ret
ljmp
in
xchg
xor
inc
repz
aaa
popf
dec
frstor
or
xor
je
adc
push
loop
in
scas
inc
imul
out
sahf
clc
test
lea
out
pusha
jno
nop
pop
mov
call
scas
add
dec
jl
xchg
ret
push
aas
scas
test
cmp
aaa
ret
paddq
ja
pop
shll
idivl
mov
dec
mov
testl
inc
push
insl
into
outsl
pop
lahf
ljmp
cmp
sbb
add
jecxz
shrb
rcll
push
inc
cmp
iret
subb
stos
pop
mov
or
test
arpl
je
xorl
rorb
mov
out
mov
adc
cmpxchg
outsb
pop
push
push
hlt
fcompl
leave
cmp
jp
or
shr
push
aas
arpl
mov
sbb
pop
in
pop
and
std
dec
repnz
inc
lods
in
lret
gs
xchg
insb
lcall
mov
call
push
mov
sub
jnp
cmpsb
out
outsl
outsl
push
inc
je
dec
popa
mov
out
or
into
in
push
add
test
shrl
push
mov
cli
shll
jbe
popf
stos
push
jbe
adc
inc
jbe
adc
lock
push
and
into
mov
in
jmp
stos
shlb
pop
pop
jl
pop
xchg
repnz
mov
pusha
xchg
ret
in
imul
and
jno
outsb
pop
dec
stos
cs
sahf
jge
add
or
or
test
je
stos
bound
pop
sub
xchg
ss
scas
dec
mov
cld
loopne
sub
xlat
lea
jp
and
int
cmp
push
jmp
cmp
adc
mov
jmp
and
ror
aas
fmuls
out
xchg
mov
out
lahf
data16
loop
cmpsb
addl
push
jle
ljmp
xorb
mov
sub
mov
fcoml
sub
adc
pop
inc
out
rcrl
dec
and
inc
or
jno
dec
push
outsl
cmc
and
add
jne
mov
jae
jmp
aad
arpl
or
cs
popa
imul
mov
sub
mov
movsl
cli
jae
movsb
dec
xor
add
inc
mov
inc
test
sarl
xchg
dec
in
int3
movsb
pop
pop
sub
mov
movsb
mov
push
frstor
inc
shll
sub
lret
cmp
movsb
and
push
dec
lock
push
push
mov
pop
add
and
dec
lods
pop
lods
orb
ret
js
add
sahf
dec
popf
jmp
ss
mov
fnsave
ja
daa
fld
popf
lret
ljmp
rclb
push
mov
leave
and
xchg
dec
or
cmp
fistpll
test
lret
dec
cmp
xchg
jo
pop
pop
pushf
sti
add
pop
push
out
test
jno
pop
dec
loopne
xchg
push
insb
jns
push
cwtl
inc
mov
loopne
shll
iret
hlt
ss
jge
cmc
push
inc
popa
loopne
jmp
pop
jmp
xchg
pop
jb
lcall
fdivs
cmp
push
push
pop
nop
push
insl
sub
inc
push
out
mov
fildll
mov
cmp
push
aaa
and
stos
std
inc
fdivs
ljmp
dec
jge
sub
mov
cmp
std
sbb
mov
shlb
pop
pop
add
and
dec
inc
cwtl
scas
jp
lret
inc
dec
push
xchg
xchg
test
setge
shrb
cmp
mov
xlat
jae
push
test
hlt
loopne
sbb
sbb
in
insl
out
das
mov
add
icebp
jno
xchg
cmp
push
mov
or
inc
loope
in
xor
or
jg
and
arpl
mov
repz
push
pusha
pop
inc
inc
mov
nop
dec
popa
add
ret
test
dec
fdivrs
insb
adc
push
adc
addr16
inc
fwait
call
sub
inc
scas
sbb
xor
test
jge
pop
nop
lcall
mov
jae
jecxz
cmp
rcll
mov
fs
xor
aam
push
hlt
fidivrs
mov
xor
mov
test
xchg
icebp
ds
jg
inc
and
xchg
fldcw
bound
xchg
subl
push
mov
nop
jo
or
ret
cli
sbb
cmc
push
xor
nop
mov
xchg
loop
cmp
fcomps
pop
mov
repnz
call
adc
push
cwtl
pop
stos
jno
dec
pusha
jmp
cmpl
dec
or
mov
scas
test
daa
adc
mov
mov
push
out
pop
syscall
xorb
xor
fildll
iret
or
push
pop
mov
jb
cwtl
bound
xor
cli
sbb
mov
jecxz
daa
xor
and
pusha
sbb
dec
sub
sbb
stos
int3
mov
mov
lcall
push
lea
cmp
push
shr
aaa
ds
mov
lret
daa
in
nop
hlt
dec
gs
jbe
stc
nop
imul
cld
push
adc
lods
pusha
or
pop
das
and
xor
lea
push
lods
insb
je
mov
dec
mov
cmp
test
cmp
repnz
lret
mov
clc
xchg
insl
cltd
inc
idiv
sbbl
mov
xchg
aad
aas
pop
loopne
mov
push
rol
mov
jae
add
inc
or
pop
add
or
pop
call
and
add
inc
adc
dec
scas
xchg
pushf
mov
mov
inc
dec
pop
in
sub
and
push
inc
aaa
pop
push
cmp
push
xchg
sbb
xlat
sbb
and
popa
inc
testl
push
or
dec
mov
and
and
lcall
xor
mov
loope
adc
outsl
push
jl
out
hlt
inc
push
jecxz
dec
or
std
adc
adc
xchg
push
push
popf
xor
pusha
cs
jp
loope
adc
sub
ja
mov
stc
adc
pop
lods
dec
add
nop
pop
cmp
sbb
jbe
jbe
out
mov
popf
out
jns
mov
fadds
mov
aaa
xchg
mov
inc
xchg
adc
cs
adc
mov
cmp
add
stc
fidivrl
lahf
inc
movsb
mov
cmp
inc
ret
pop
adc
aas
outsb
in
and
pop
ds
fisttps
ud2
pop
jae
iret
enter
jmp
jmp
subb
sbbb
mov
es
cwtl
ja
inc
inc
pop
mov
and
orl
pop
push
fiaddl
popf
and
sbb
lcall
push
out
jl
jmp
popf
js
loope
subl
outsl
push
mov
cli
mov
lret
jns
stos
in
repnz
notb
movsb
lds
push
sub
mov
sub
insl
and
fwait
sti
jae
push
rcll
int3
and
pusha
xor
mov
pop
push
shrb
frstor
insl
or
jo
scas
add
scas
fldenv
mov
push
lea
adc
adc
and
inc
adc
out
xchg
mov
xchg
scas
or
inc
cli
inc
gs
out
sbb
gs
jl
mov
adc
dec
mov
push
jno
xor
cmp
sub
rcr
jne
aas
nop
mov
scas
jnp
adc
inc
fisubl
jmp
pop
mov
add
jno
sub
inc
mov
adc
int3
adc
clc
and
les
in
les
clc
pop
cmp
xlat
mov
cmp
adc
imul
cs
iret
dec
rorb
and
cmpsb
aad
repnz
scas
jns
or
mov
int3
cmpsl
xor
into
mov
dec
push
push
js
inc
repnz
cld
scas
jmp
fcomps
sub
mov
das
push
xchg
mov
add
popf
movsl
scas
mov
cltd
push
aaa
xchg
aaa
int3
xor
xchg
adc
mov
add
lea
ret
pusha
push
fimull
insb
hlt
outsl
sbb
xchg
cmp
lock
push
sti
rclb
add
punpcklwd
fcompl
in
inc
in
outsl
repnz
jle
hlt
xchg
pop
cltd
std
push
subb
in
adc
add
mov
xchg
sub
enter
push
fimuls
rol
out
scas
lret
xchg
mov
inc
xchg
inc
inc
iret
addl
inc
aad
das
mov
aas
jl
inc
sti
shl
int
mov
push
fisttpll
rcr
ret
insb
push
mov
jns
arpl
mov
mov
pop
mov
mov
inc
dec
das
jns
jp
das
incl
push
pop
mov
push
fidivrs
mov
ret
subl
add
scas
sbb
js
mov
sbb
jae
sub
adc
mov
stos
cmp
inc
ror
das
sbb
mov
dec
sbb
out
insb
mov
inc
push
and
inc
jo
movsb
xor
js
bsf
fisubrs
sub
std
pop
pop
popf
pop
mov
xchg
gs
mov
inc
dec
adcb
call
push
fnstcw
cli
dec
cmpsl
mov
add
or
xor
pop
jne
lcall
cmp
sbb
xchg
pop
push
inc
xchg
repnz
jne
inc
scas
fnstsw
xchg
rorb
pushf
iret
dec
adcl
pop
in
hlt
les
movsl
mov
enter
push
and
stos
xchg
mov
test
xor
xchg
mov
mov
or
xor
rorb
lret
adc
call
jle
lds
aas
xor
data16
xor
sbb
xacquire
cmpsl
mov
int3
mov
orb
jnp
adc
arpl
sbb
add
xor
insl
movsl
inc
mov
in
mov
cmp
incl
out
ficomps
and
shlb
add
arpl
dec
pop
in
rol
pop
lock
movsb
mov
in
jp
mov
push
fistl
mov
sarl
and
js
aam
xchg
add
adc
ret
lcall
ds
cmp
outsb
cmp
lret
es
and
inc
imul
cmc
and
xor
mov
cmpsb
in
pop
sarl
out
outsb
xchg
clc
mov
dec
daa
es
scas
pop
jbe
add
hlt
std
rclb
jb
test
bound
push
inc
test
dec
lret
arpl
ret
ss
outsl
mov
xchg
sbb
fisubs
nop
fnstsw
dec
mov
fbstp
xchg
pushf
or
xorb
mov
push
inc
xchg
mov
movsl
enter
das
js
test
xchg
lahf
movsb
enter
mov
inc
dec
shl
int3
divps
pop
or
je
mov
mov
fsubr
cmp
ljmp
inc
jmp
neg
inc
mov
faddl
das
mov
cmp
repnz
add
loope
xchg
leave
pop
inc
in
mov
div
push
out
mov
mov
div
mov
inc
jns
xchg
stos
lcall
int3
loopne
scas
push
icebp
cmp
fsubrs
arpl
gs
jp
xor
jo
lock
in
mov
adc
outsb
pop
daa
xchg
xor
mov
roll
xchg
dec
aam
dec
jge
mov
lds
in
xchg
push
popf
jne
sbb
add
push
cwtl
loope
jle
pop
pop
fsubs
jb
push
testb
jl
pop
add
cld
xchg
sub
in
pop
ds
and
inc
ss
sbb
ljmp
testl
push
enter
pop
fcomi
jae
and
sbb
jp
sbb
push
pop
sub
jo
pushl
shrb
imul
xor
int
mov
fsubs
and
xchg
out
mov
fidivs
adc
sub
popa
mov
stos
cmp
enter
adc
lock
out
cli
sti
cmp
in
lds
sbb
sti
cmc
jbe
lahf
rorb
xor
push
add
roll
mov
mov
mov
cmp
popf
push
jmp
adc
cli
ljmp
cmp
add
inc
xchg
xor
scas
jbe
les
ficoms
aad
jecxz
clc
or
or
push
inc
mov
mov
decb
pop
jne
clc
sbb
xorb
or
sub
mov
lret
in
sub
cmp
adc
mov
xchg
das
je
xor
out
stos
sbb
scas
mov
mov
xor
add
add
dec
inc
cli
movsl
push
pop
popf
lret
xchg
xlat
orb
jno
push
loop
jge
fcompl
fidivrl
sti
pop
movsb
in
pop
xlat
or
js
aas
mov
or
push
sub
mov
pop
enter
xor
lods
test
push
push
sbb
jecxz
cs
inc
popa
lock
mov
fxch
xchg
sub
mov
into
addl
rorl
movsl
outsl
pusha
jg
inc
data16
out
or
pop
xchg
xchg
push
addb
or
insl
jecxz
test
aad
adc
sub
cmpb
ljmp
je
mov
hlt
sub
xchg
je
pop
push
sub
jmp
shr
aaa
iret
rcrl
mov
mov
sub
cmpsl
loop
sti
sub
imul
lock
mov
mov
and
ja
enter
stos
push
int3
xor
sbb
bound
and
push
mov
arpl
mov
stos
sub
dec
fcompl
cwtl
mov
mov
rclb
int3
les
mov
and
inc
lea
pop
mov
adc
dec
pop
and
xor
jno
inc
outsb
xchg
int3
lahf
outsl
int
lods
dec
in
inc
bound
xchg
movsl
mov
scas
mov
in
or
into
ljmp
cmc
and
sti
and
dec
fstpt
pushf
jne
mov
into
loopne
lcall
sbb
sub
divl
es
jg
cld
pop
or
push
mov
cmp
sti
add
or
imul
jge
pop
pop
pop
mov
or
js
pop
mov
in
pop
mov
add
or
jb
pop
dec
dec
inc
arpl
ds
daa
cwtl
cmp
adc
or
aad
xor
push
test
cmp
sbb
das
pop
push
push
add
test
mov
out
repnz
iret
fdivr
xchg
into
dec
hlt
cmp
lods
fsubrs
loop
pusha
insl
data16
sub
sub
cmp
dec
das
mul
push
push
and
xor
iret
out
dec
sbb
pop
test
mov
ss
dec
lods
mov
sbb
clc
adc
xchg
ret
stc
scas
cmp
xor
test
mov
mov
cmp
cmp
je
jle
bound
pop
call
xchg
jmp
lahf
aad
pop
aaa
lahf
mov
sti
lods
cli
adc
cmp
adc
xchg
dec
xchg
jmp
jg
in
popa
in
cltd
dec
out
stos
jp
inc
mov
lds
aam
xor
dec
jne
loope
xchg
popa
in
xchg
js
push
jp
sahf
mov
sub
cmp
cltd
adc
xor
insl
xor
aad
mov
outsb
in
inc
pop
aad
clc
mov
push
mov
push
mov
cmpb
push
dec
mov
in
incb
fisubl
mov
loopne
dec
repnz
xchg
jmp
add
jp
cmp
sbb
ss
jo
test
push
and
orl
imul
xchg
into
cltd
push
insl
mov
add
inc
adc
adcl
lahf
jg
push
pusha
xor
inc
sub
push
push
mov
pop
jne
scas
or
sbb
adc
in
mov
das
out
sbb
xor
ret
dec
pop
into
mov
mov
fmul
cs
mov
push
loop
adc
jb
cmp
pop
jne
or
dec
mov
xchg
jmp
cmpsl
ljmp
test
or
mov
pop
or
push
shlb
ds
inc
mov
iret
pop
pop
test
pop
add
sub
cmp
fstpl
dec
push
stos
stc
int3
sub
fists
mov
lea
mov
movsb
push
push
jns
dec
aaa
jecxz
test
dec
mov
cmp
movsb
inc
stos
scas
sbb
and
ja
pop
fcoml
jb
pop
aad
cmp
into
push
lods
vandnps
lods
iret
cld
stos
adcb
mov
cld
movsb
bound
xchg
pusha
xchg
pop
imul
xor
cmp
repnz
push
mov
mov
push
mov
inc
or
jl
cmp
aam
sub
mov
sub
sub
xchg
xchg
jmp
lea
jo
fucomp
incl
mov
sarb
sub
int
das
dec
mov
cltd
cmp
dec
jb
fs
dec
adcl
ret
inc
and
lahf
jnp
gs
lock
push
pop
aas
and
xor
xor
jns
repz
outsl
lods
or
je
popa
dec
jmp
mov
aam
fistl
add
cmc
push
rcpps
lret
aam
push
dec
sti
cli
adc
mov
mov
bound
fwait
std
cmp
rol
shll
mov
js
outsl
mov
lock
pop
lret
loopne
insb
and
mov
leave
mov
xchg
into
ficomps
rolb
sbb
mov
js
sbb
aam
xor
testb
jo
xchg
cmpsb
jae
int
mov
aas
fsubl
xchg
push
xchg
dec
push
xor
mov
cmp
xor
loopne
xor
mov
jp
mov
sbb
fidivl
jae
sub
inc
ret
inc
push
push
push
cli
add
call
enter
adc
imul
insb
fstpt
aam
jnp
xor
jmp
cmp
sub
and
sub
js
rol
mov
jl
mov
sbb
xchg
aaa
jae
imul
mov
popa
int3
ds
sti
or
sub
adc
jecxz
shll
shrl
push
inc
and
sahf
insl
cwtl
jno
xchg
sbb
fwait
cmp
jbe
insl
pop
ja
jmp
loopne
jmp
ljmp
adcb
cli
push
fwait
cli
push
sahf
jmp
scas
psllw
stos
xchg
pop
pop
jo
inc
xorb
js
cmp
mov
div
out
pop
and
andl
sbb
les
cs
xchg
push
into
adc
sub
int3
into
or
nop
je
jmp
adc
mov
dec
xchg
mov
cs
mov
stc
dec
inc
jno
mov
notb
jg
jns
sbb
xchg
dec
mov
push
xchg
outsb
fwait
cld
push
push
xor
movsl
xchg
adc
jne
push
incl
push
sub
movsb
push
lock
fdivr
jge
imul
ds
ficoms
xor
mov
neg
pop
add
mov
add
clc
mov
test
imul
adcb
out
and
xchg
jne
or
adc
xor
je
fistpl
inc
in
pop
mov
mov
mov
sahf
scas
or
push
ret
mov
int
inc
mov
out
repnz
or
lcall
ficoml
call
enter
lock
in
mov
jl
push
lret
icebp
js
cmp
pop
mov
sub
dec
or
fwait
hlt
xor
adc
xchg
lods
push
scas
push
sbb
lods
inc
jo
jecxz
stos
icebp
dec
push
lahf
jecxz
adc
xor
push
adc
xchg
xchg
fcomip
pusha
adc
into
mov
fistps
jmp
lods
lods
dec
sti
movsb
enter
sbb
fists
fimull
mov
pop
mov
mov
dec
pop
jge
adc
in
int
in
inc
mov
cwtl
mov
js
mov
and
or
je
popf
jecxz
sbb
pop
testb
inc
leave
cmp
out
repz
mov
insb
xor
xor
xchg
mov
aas
dec
or
xor
and
sbb
or
js
or
add
sub
pop
lahf
cmp
mov
js
and
push
inc
mov
xchg
or
hlt
fidivrl
push
xchg
add
call
addr16
mov
pusha
jmp
sbb
aad
xchg
subl
in
pop
js
and
mov
xor
jg
arpl
jo
inc
inc
lret
insb
mov
scas
inc
in
xor
cmc
add
or
fstpt
call
rorl
jmp
mov
xor
leave
jo
incl
push
jge
fbld
xchg
pop
pop
shll
mov
sahf
shrb
push
jnp
ret
xor
xor
and
xchg
stc
jle
add
adc
cmp
xor
xchg
or
orl
mov
add
sbb
pop
mov
mov
push
mov
arpl
iret
dec
pop
les
adc
test
adc
cwtl
and
out
dec
frstor
filds
into
jb
lock
cmpsb
mov
movsl
mov
pop
jae
mov
xor
dec
ret
sub
sahf
push
in
cli
mov
ret
inc
sarb
scas
ds
negl
pop
xchg
mov
in
cmp
cmp
movsb
mov
in
pop
lds
xchg
rolb
mov
mov
loop
lds
xchg
scas
mov
out
insl
dec
xchg
movsl
dec
shl
notb
jmp
adc
mov
dec
jae
dec
std
cmp
nop
divb
rcll
std
push
push
sub
dec
leave
test
loope
repnz
xorb
mov
mov
loope
mov
aam
and
xchg
lock
cmc
sarb
ss
fisubrl
xchg
outsl
imul
and
push
dec
in
stos
mov
subl
loop
mov
pop
or
pusha
xchg
ljmp
lret
jmp
xor
adc
jnp
out
xor
shll
loope
jge
inc
sub
xor
fsubrl
scas
adc
int
out
ljmp
out
iret
add
add
cmpsb
js
mov
add
insb
out
jecxz
rorb
sbb
mov
stos
stos
jge
fdivrs
cs
inc
jmp
and
push
gs
int
lods
out
add
out
sbb
scas
repnz
mov
fwait
sub
dec
testl
cmpsl
cmp
or
mov
mov
xor
sub
xchg
stos
in
xchg
scas
mov
aad
ret
and
push
out
sub
cmpsb
adc
repz
cmpsb
push
and
jle
xor
push
mov
lods
inc
call
les
fucomi
push
cwtl
repz
dec
sbb
addr16
addr16
and
lea
insb
addr16
jmp
add
mov
mov
out
leave
sbb
pop
add
imul
or
and
push
lods
lock
ss
shrb
and
jo
cs
pop
aas
idiv
mov
mov
mov
cmp
cmpsb
adc
std
ss
dec
dec
aad
in
aad
pusha
mov
push
adc
jmp
test
int3
clc
and
or
jge
add
orb
sti
xchg
insb
mov
cmp
and
add
in
ljmp
insl
stos
int3
add
lea
sub
inc
xor
addr16
inc
incl
shrl
arpl
add
mov
pop
mov
mov
testl
insl
inc
ret
push
and
stos
leave
jge
je
sub
add
sahf
nop
mov
dec
pop
dec
push
mov
mov
inc
push
pop
scas
xor
add
idivb
dec
fistl
mov
imul
jns
pop
fistpl
xchg
cmpxchg
icebp
pop
mov
pop
repz
push
out
or
push
cmp
add
test
add
outsb
iret
popa
push
inc
lahf
imul
add
sbb
rol
adcb
xor
mov
mov
ja
or
gs
divb
jno
sarl
negb
inc
and
lds
out
jno
xchg
adc
or
outsb
stc
fcompp
sub
cld
inc
in
daa
xchg
push
adc
lods
fdiv
icebp
fisubs
mov
sbb
and
mov
lods
aaa
mov
xlat
cmpsb
popf
inc
nop
add
mov
shlb
jb
mov
or
lock
push
pop
adc
and
mov
mov
cmp
push
cltd
dec
inc
adc
dec
ret
cmp
or
or
out
insl
mov
cmpsl
cmpsl
imul
movsl
xchg
xor
sub
lods
xor
inc
push
scas
adcl
and
fimuls
pop
fadds
stc
mov
or
jecxz
sbb
xor
into
mov
clc
cmp
and
frstor
dec
lods
data16
out
xor
mov
lret
adc
jo
icebp
popf
mov
xor
mov
dec
and
aam
push
jg
dec
mov
clc
call
bound
lods
or
pusha
pop
scas
sub
push
jbe
pop
xchg
pop
outsl
arpl
mov
or
daa
pushl
mov
addr16
shl
das
jbe
imul
shlb
iret
into
or
mov
js
xchg
lods
shl
vpunpcklwd
imul
shl
mov
fcoml
jl
loopne
mov
mov
or
mov
lods
cli
jb
enter
daa
mov
add
mov
mulb
push
bound
sbb
popf
rep
pop
lcall
stos
inc
sub
jp
je
fbld
mov
lods
mov
pop
ja
dec
mov
jge
fwait
dec
adc
mov
adc
rcrl
dec
sub
xor
push
jge
or
inc
xor
arpl
adc
dec
push
fsub
cmpsl
fisttpl
clc
mov
pop
pop
out
xor
add
push
cld
out
push
jg
inc
roll
pop
flds
fcompl
lcall
inc
add
cli
movsb
inc
or
dec
les
jp
fs
inc
mov
mov
fcmovnbe
loop
pop
mov
sbb
rcrl
fnsave
adc
stc
std
mov
mov
lds
mov
and
cli
xchg
je
fiadds
fs
xor
outsb
fcompl
jge
mov
xchg
sub
and
cmpb
fdivs
cs
xchg
fisubrl
mov
nop
sub
ret
fidivl
fimuls
lret
aaa
xchg
dec
in
sbbb
fidivrs
and
lret
jp
rcll
sti
das
loopne
shl
stc
ret
jbe
andl
hlt
push
stos
push
leave
jmp
adc
fisttpll
fisttpll
aas
lahf
fiaddl
add
fisubs
das
mov
clc
lret
pushf
fnsave
xor
movsl
mov
das
sbb
repnz
scas
cmp
ret
cmp
ret
pop
add
jmp
mull
testb
xchg
mov
jb
orb
mov
adc
pop
imul
jne
mov
jbe
dec
inc
pop
pop
mov
cmp
int
pop
fcomps
mov
xor
pop
mov
push
sbb
mov
ret
cld
mov
popf
or
shll
ret
lret
inc
pop
xor
sarb
and
call
dec
push
imul
cmc
mov
movsb
test
les
cmovg
in
ja
loop
cmc
push
or
dec
cmpb
mov
ljmp
inc
rolb
mov
jae
push
and
push
and
inc
ljmp
fdivp
scas
mov
fisubs
subb
rorl
scas
or
arpl
jg
sti
or
push
jmp
or
push
lcall
lcall
fcoml
and
pop
std
rcr
xchg
lds
mov
dec
fbld
mov
add
inc
call
pop
scas
ja
test
outsb
ss
cli
sub
pop
push
cmp
mov
adc
mov
mov
xlat
sbb
push
pop
call
adc
pop
mov
test
jo
pop
xor
jb
es
mov
aas
out
adc
dec
adc
aaa
and
sub
leave
mov
mov
stos
cmp
shlb
jecxz
je
and
scas
fmul
popa
push
and
sub
fbld
push
addb
loope
aaa
repz
mov
add
mov
cmc
shlb
push
shlb
pop
aaa
in
je
mov
push
jne
mov
add
mov
mov
repz
or
cmp
mov
lock
jbe
ljmp
dec
pop
popf
fldt
pop
push
push
test
loopne
test
rclb
ja
shl
sarl
cmpsb
adc
decl
sub
fwait
push
js
cmp
popf
sub
sbb
mov
addr16
daa
out
enter
pushf
loopne
pop
std
bswap
movsl
clc
jb
cltd
sub
sub
sbb
jne
inc
xchg
inc
pop
sar
jmp
inc
lret
adc
xchg
dec
inc
ljmp
sbb
pop
cmp
sbb
testl
push
inc
xchg
sbb
sbb
dec
lea
mov
mov
jbe
jae
cmpsl
xor
mov
adc
cli
test
mov
push
rcrl
jb
jo
sbbl
cs
stc
xlat
out
lock
call
ss
in
fstpl
pop
mov
in
scas
into
xchg
test
lods
pop
xor
pop
clc
jbe
imul
shrb
sbb
jno
add
cmp
sbb
popf
data16
mov
cwtl
cmpb
cltd
inc
stc
dec
arpl
scas
mov
mov
repz
shl
lret
mov
sbb
inc
cmp
add
and
fwait
inc
mov
push
xor
push
fwait
outsb
inc
mov
dec
stos
fistpll
mov
mov
mov
pop
imul
sub
mov
in
sti
push
movsb
inc
add
cwtl
inc
cmc
fsubrl
mov
out
xchg
cs
mov
out
and
mov
std
mov
push
jbe
push
ja
cmp
icebp
sti
inc
nop
loope
pop
iret
cwtl
repz
and
mov
ljmp
test
jae
lea
xchg
hlt
xchg
movsb
rcr
mov
addr16
imulb
test
add
daa
dec
xor
testb
hlt
inc
std
mov
loope
mov
nop
nop
je
flds
ret
fsubrl
arpl
je
xor
mov
lds
lahf
adc
and
sbb
leave
mov
dec
adc
inc
sbb
cwtl
mov
repnz
gs
mov
or
in
jne
cmpsl
or
pop
push
dec
call
movsb
and
popf
push
pop
sbb
dec
lods
shlb
scas
mov
push
mov
dec
mov
jo
pusha
orb
adcl
xchg
dec
dec
and
add
daa
xchg
or
inc
xchg
test
xchg
xchg
hlt
dec
cli
hlt
sbb
dec
mov
leave
inc
xchg
ss
loop
push
mov
jp
mov
inc
or
push
push
imul
lods
mov
loop
scas
sub
jo
movsb
subb
std
repnz
xor
std
jo
in
test
xlat
jb
pop
adc
data16
jecxz
and
dec
mov
lods
mov
pop
sub
lods
sarl
mov
jo
sub
in
movsl
jle
xor
sub
push
test
add
shlb
push
into
lahf
mov
sbb
aam
testb
pop
stos
add
gs
lcall
fstl
push
scas
fldcw
jl
sub
add
mov
cli
and
hlt
or
in
jl
xlat
mov
pop
into
roll
mov
adc
mov
xor
mov
pop
adc
mov
jmp
outsb
cmp
mov
test
fiaddl
and
fstps
inc
xor
or
mov
ret
sbb
outsb
mov
repnz
repz
stos
mov
imul
xchg
lret
or
cs
sbb
std
cwtl
outsb
fdivrl
addb
jle
ss
std
in
push
jno
sub
bound
mov
add
push
dec
movsl
mov
out
fs
in
xor
lea
mov
lret
jmp
daa
dec
subb
dec
daa
fidivrl
pop
jns
pop
xchg
lods
and
jp
xchg
pop
pusha
sub
jl
mov
mov
sub
inc
hlt
add
pop
ss
add
xchg
lods
divb
std
xchg
shll
fnstenv
rcrl
lret
pop
push
imul
and
mov
xorl
or
in
cmc
stc
aas
arpl
xchg
outsl
aam
xor
das
lock
rcrl
lret
fstps
cs
mov
aam
loopne
sbb
shlb
in
push
adc
or
or
xchg
cmp
xchg
jnp
test
inc
xorl
or
inc
flds
xor
inc
out
fwait
cwtl
jle
rolb
rcrb
lods
and
std
jne
push
fcompl
mov
push
movsb
mov
adc
jae
popa
test
pusha
push
test
mov
lahf
push
mov
push
add
std
pop
fwait
imul
adc
ret
jae
xchg
mov
loopne
xchg
sti
sbb
outsb
into
fucomi
insb
mov
loope
incb
and
fisubl
sbb
push
in
xchg
sbb
xor
xchg
outsb
mov
jge
pushf
cmp
orl
rcll
in
and
mov
aad
and
and
and
out
pushf
push
shl
fld
lcall
rcrb
xchg
aam
outsb
cld
mov
insb
clc
out
mov
loope
iret
jae
xor
inc
dec
sbb
xlat
inc
subl
sub
xchg
pop
out
mov
lods
push
into
xlat
pop
sbb
cmc
cmpsl
jno
xor
es
lret
sbb
pop
sub
clc
int
push
push
mov
sub
imul
sub
xorb
cld
sub
push
das
int3
inc
std
sub
xor
jae
mov
fbstp
sti
rcrl
and
add
incb
push
mov
fs
inc
cmc
adc
fwait
nop
test
mov
push
xor
sub
push
movsb
sti
jp
fimull
jae
repnz
stos
mov
into
adcl
cmp
fwait
push
lcall
xchg
in
movsl
sub
pop
int
sub
pusha
into
sbb
test
mov
je
test
sbb
jp
adc
inc
jge
bswap
mov
scas
dec
or
mov
cmc
dec
arpl
mov
mov
cmc
or
pushf
sarb
xchg
cwtl
jge
ret
pop
mov
in
icebp
clc
sub
ljmp
adc
push
jp
nop
dec
cld
mov
mov
imul
in
call
xor
fnstenv
testb
xor
jno
ror
fistpll
xchg
ficoms
dec
sbb
xlat
mov
mov
sarl
mov
jno
xchg
sbbl
jno
jo
popa
mov
xchg
mov
icebp
mov
out
sbb
sub
test
rcl
repz
and
ss
add
shrb
std
push
ljmp
sbb
inc
push
xchg
lods
adc
aaa
mov
aad
mov
mov
std
jle
add
stc
adc
mov
push
mov
dec
cmp
repz
sub
pop
in
lods
or
mov
push
aaa
repnz
xlat
push
xchg
mov
je
inc
arpl
mov
mov
std
pop
imul
cmp
mov
push
ljmp
aaa
mov
lcall
inc
aas
push
test
insb
mov
push
imul
sarl
xchg
repnz
bound
fwait
and
aad
push
pop
sbb
and
or
adc
rol
push
sbb
add
jns
mov
stos
dec
imul
cs
frstor
test
int3
push
out
push
xchg
cli
push
pop
hlt
verr
xchg
pushl
dec
inc
jmp
add
scas
orb
adc
fistps
cmp
or
and
adc
or
loope
xchg
inc
mov
pop
scas
in
test
out
xchg
and
sbb
shrb
arpl
jg
push
ret
ja
gs
xlat
xchg
and
add
xlat
hlt
aad
mov
sti
sub
in
pop
fidivs
test
repz
fistl
lock
or
je
dec
mov
push
mov
lods
xor
adc
xchg
mov
pop
sti
xor
xchg
movsb
imul
sbb
sub
adc
lock
orb
lock
adc
adc
sub
outsb
loope
jno
sahf
aad
mov
jmp
cli
mov
movsb
ja
in
mov
mov
xchg
mov
jnp
cmpsl
adc
negl
push
in
leave
out
cmp
mov
dec
jae
ret
sbb
add
inc
xor
or
or
inc
jmp
push
in
inc
lahf
popf
sbb
lods
adc
cwtl
pop
inc
mov
inc
sub
sbb
or
add
std
test
aas
mov
or
aam
pop
insl
lods
je
pushf
push
jg
xor
in
idivb
xor
fwait
je
inc
push
or
push
out
mov
adc
sbbb
push
pop
push
sbb
xchg
lock
sub
inc
bound
scas
add
aas
mov
pop
sbb
in
inc
xchg
fcoml
clc
std
dec
mov
aaa
pop
ss
and
nop
pop
das
pushf
movsl
jmp
pop
shlb
aas
jle
sbb
inc
add
out
aam
insb
jmp
mov
sti
and
xor
aaa
add
in
inc
jns
add
rorl
xchg
fisubrs
lcall
dec
cmp
add
push
stc
adc
mov
push
xor
cltd
sti
shll
shll
adc
dec
push
dec
mov
cmc
mov
cltd
fstps
or
arpl
dec
jns
jnp
pop
sbb
outsl
mov
mov
pop
mov
mov
inc
jecxz
pop
cltd
mov
pop
fmuls
mov
push
push
mov
outsl
inc
rolb
cmpsb
lods
scas
push
mov
in
jo
cmc
or
scas
cli
fidivl
rcll
xchg
xlat
into
int3
inc
roll
pop
rclb
std
push
popa
or
jnp
loop
in
filds
mov
out
cmp
ljmp
pushf
add
push
insl
data16
jb
sbb
xor
jle
fwait
cld
push
das
mov
lods
ret
xor
jge
mov
pop
push
aas
push
icebp
fwait
cmc
imul
and
mov
pop
pop
mov
jno
aam
and
hlt
sub
inc
sbbl
inc
mov
cld
inc
lcall
lds
fmuls
test
pop
fbstp
icebp
mov
inc
test
adc
movsb
fisttpll
mov
xchg
ljmp
xchg
inc
dec
aaa
jns
les
mov
loope
popf
daa
insb
out
rorb
or
popf
xor
jge
mov
xor
outsl
icebp
push
mov
cmpsb
or
or
cs
icebp
jae
aad
cmp
int3
repz
loopne
std
cmp
mov
insb
push
add
lods
jp
ja
std
push
inc
push
pop
lock
inc
mov
shl
inc
std
cmpl
leave
flds
add
jne
push
inc
xchg
pushf
sbb
mov
and
dec
add
inc
rorl
xchg
shl
mov
std
pusha
rcll
pop
add
mov
movsb
jp
jp
push
mull
das
mov
fsubrp
mov
cld
jne
mov
loop
inc
adc
adc
rorl
add
push
dec
notl
outsl
add
std
fcompl
sub
test
fisubs
iret
movsl
fbld
out
cli
xchg
das
je
fisttpll
mov
lea
mov
pusha
dec
pop
push
out
incl
and
aam
or
add
mov
test
test
xor
cmp
mov
pop
mov
imul
pop
dec
ret
lcall
aam
out
stos
jge
addr16
xchg
mov
or
xor
xor
sub
popa
adc
out
leave
daa
shl
in
jns
mov
into
xor
test
pop
push
outsl
add
jp
mov
call
jno
push
pop
test
sbb
rorb
dec
sbb
cwtl
adc
xchg
or
cmp
aad
dec
adc
repnz
fldl
scas
cmp
sub
ret
pop
movsl
sbb
jmp
cltd
lds
xchg
in
fcom
push
jle
adcb
mov
repnz
and
iret
fnstsw
dec
insl
jns
pop
ja
ret
imul
pop
xchg
cmpl
and
test
jg
sahf
lcall
out
enter
lds
aas
sbb
ror
inc
sbb
cld
add
outsl
add
xchg
lcall
mov
pop
cmpsl
stos
xor
les
cmp
fistps
mov
pop
inc
push
add
loopne
add
inc
les
jl
cs
jb
out
pop
adc
sub
mov
dec
iret
adc
add
jns
bound
or
and
decl
xchg
shll
fiadds
and
inc
mov
es
xchg
repz
stc
pop
xor
mov
xchg
push
and
xor
iret
pop
std
dec
pop
jl
repnz
fs
pop
cld
jle
push
cwtl
out
aas
mov
mov
push
ficomps
test
pop
or
jp
pop
jg
cmp
fcmovnbe
in
mov
jno
je
jle
xchg
lea
fstpl
fisttps
loop
sarl
and
push
pop
shlb
in
mov
jl
and
xchg
push
mov
outsb
lock
lret
adc
imul
adc
xor
clc
mov
ret
gs
adc
mov
hlt
sbb
or
add
fiadds
data16
push
mov
leave
jbe
sub
adc
fidivl
test
adc
es
insb
sti
call
cltd
or
fisubrl
sbbb
out
outsb
inc
rcrl
stos
mov
xor
push
fcompl
bnd
rolb
sbb
sbb
xchg
fnstcw
pop
cmp
fwait
pop
lret
test
inc
xchg
xchg
xchg
adc
aaa
dec
shlb
in
addb
mov
add
or
adc
jg,pt
and
push
xchg
ss
leave
daa
adc
mov
pop
stos
sbb
and
mov
sahf
mov
mov
into
pop
dec
ret
sbb
insl
aas
addr16
out
rolb
shlb
std
cmp
adcl
insb
mov
stc
cmpsb
mov
dec
push
fisubrl
shrb
xchg
test
scas
jg
mov
sub
push
lahf
lahf
xlat
dec
jb
xor
cwtl
sub
dec
les
jmp
mov
cmpsb
cltd
daa
pop
fimull
mov
jl
or
jmp
or
add
mov
in
std
cmc
rcl
cwtl
pop
adcb
mov
push
xchg
mov
sbb
jne
loope
inc
das
mov
push
jecxz
sar
pop
cltd
push
cs
lcall
leave
fstpt
sub
xchg
lcall
xor
mov
sbb
stc
call
sbb
push
js
cmpsb
cmp
or
add
js
inc
dec
sub
jmp
sbb
test
sbb
mulb
jmp
out
push
lea
std
fists
and
dec
inc
pusha
xor
repz
icebp
addr16
fsts
xchg
push
or
imul
fwait
inc
insl
iret
sbb
fwait
out
nop
movsb
out
cmp
jbe
rcrb
cmp
dec
das
aad
test
xor
rcl
inc
push
iret
xor
ss
sahf
jp
outsb
cltd
mov
movsl
ja
cmp
fadd
loope
movsb
dec
or
jns
or
outsb
push
dec
loop
test
loopne
in
stos
mov
in
mov
add
push
xor
fisttps
inc
add
cltd
mov
mov
out
mov
cmp
sub
insb
aas
loope
filds
inc
pop
in
mov
and
lahf
jg
dec
pop
push
inc
or
or
jle
gs
lods
sub
ljmp
mov
sahf
sub
xor
mov
jns
das
mov
xchg
push
push
fldt
ficomps
enter
fists
add
int3
in
rol
add
or
in
je
in
cli
inc
push
dec
test
cwtl
sti
test
mov
mov
data16
dec
shrl
imul
int
cmp
fxch
sbb
jnp
mov
out
sbb
daa
mov
or
pusha
mov
dec
dec
fsts
add
into
decb
xchg
cli
mov
mov
xchg
and
xlat
inc
mov
pop
add
mov
test
psrlw
dec
push
cmc
dec
add
mov
sub
or
inc
popf
imul
xor
add
add
sub
inc
pop
dec
repnz
pop
fnstsw
mov
mov
adc
adc
adc
vmovaps
sbb
xchg
adc
nop
mov
cmp
movsl
jmp
sbb
dec
mov
adc
pop
insb
adc
sbb
xchg
fucomi
or
test
mov
ljmp
jp
sbb
lea
fildl
adc
jno
and
addr16
out
out
icebp
pop
pop
repnz
xchg
stc
mov
inc
pushf
push
mov
loopne
in
or
mov
in
jb
pop
add
out
cmpb
mov
sub
adc
adc
adc
lock
mov
lds
push
into
push
and
inc
sub
push
hlt
stos
sbb
sub
testl
mov
out
xchg
jbe
cmpsl
stos
cld
xor
dec
pop
add
mov
mov
repnz
mov
repz
sbb
int3
dec
push
adc
add
gs
dec
aam
cmpsb
or
sbb
icebp
mov
mov
sub
rcrl
lods
imul
dec
lret
xchg
mov
stos
incl
into
imul
test
div
mov
and
dec
ja
shl
dec
pop
popf
stos
cli
cmpsl
gs
ja
mov
xor
add
jae
pop
test
repz
cmp
add
sahf
outsb
inc
cmp
push
mov
inc
adcb
and
sbb
mov
xor
mov
lahf
loopne
pusha
out
mov
aam
in
test
cwtl
lock
rcll
xlat
xchg
xchg
ljmp
sbb
add
mov
push
adc
adc
lods
lret
and
ret
iret
das
mov
dec
arpl
cli
mov
or
mov
xchg
in
and
mov
push
repz
push
loopne
in
bound
scas
mov
dec
jp
leave
sub
outsl
out
mov
pusha
push
push
sahf
add
mov
pop
outsb
or
mov
cmp
nop
movl
fbld
add
cmp
mov
mov
dec
ljmp
sub
arpl
fadds
sub
adc
bound
inc
popa
aas
daa
push
addr16
fwait
jg
pop
fisubrs
pop
push
vmovups
call
and
outsb
or
mov
or
outsl
dec
jo
add
push
push
gs
pop
insb
orl
das
inc
mov
jnp
inc
cmp
andl
jns
sbb
loope
sbb
fadd
cmp
pushl
jns
adc
aas
inc
ror
shrl
or
add
pop
add
ljmp
mov
leave
dec
xorl
jmp
pusha
mov
sbb
bound
aaa
stos
les
pop
pop
notl
mov
dec
mov
iret
jnp
cmp
xchg
hlt
mov
push
stos
mov
jle
mov
ret
push
dec
jp
mov
into
jbe
aam
sbb
cmp
mov
push
sbb
mov
pop
jbe
xlat
bound
movsb
cmpsl
lods
lods
scas
add
pop
jb
mov
adc
nop
ss
mov
fnsave
pusha
push
sub
imul
sub
aad
dec
add
push
mov
xchg
gs
xchg
pop
fdivs
test
test
sub
notb
mov
push
jge
test
mov
push
or
sbb
sahf
repnz
cwtl
cmp
sbb
mov
icebp
ret
es
mov
ss
test
lds
into
popa
or
cmp
shll
jge
hlt
mov
xchg
sbb
fsubs
dec
inc
lret
sub
adc
xor
popa
and
or
int3
lret
dec
iret
repz
and
push
and
int
addb
mov
add
or
pop
lret
add
mov
addb
push
mov
cmp
rorb
jnp
sbb
or
stc
or
and
xor
inc
and
mov
push
add
jle
mov
xchg
enter
add
ja
add
aam
add
lmsw
cmp
pop
fwait
stos
outsb
out
pop
sbb
das
stos
cwtl
add
ret
faddp
sub
popa
xchg
add
loop
xchg
int
or
ss
rolb
lea
inc
outsl
enter
in
cmp
jae
sub
rcl
outsb
popf
in
dec
jg
inc
jmp
jae
push
imul
fimull
pusha
fnstenv
iret
dec
sub
scas
popf
jmp
pusha
movsl
and
mov
mov
mov
xchg
adc
in
aam
andb
mov
lea
mov
jg
dec
mov
adc
xchg
lret
testl
pop
mov
jecxz
mov
jg
ljmp
sbb
push
or
cmp
mov
scas
ds
cmp
mov
push
xor
lret
mov
adc
push
repnz
mov
out
ljmp
xor
mov
ret
fwait
adc
mov
jg
jns
pop
or
out
lock
add
fists
out
inc
aaa
andb
mov
jae
sarb
adc
sbb
add
jne
fisttpll
sub
jge
outsl
ja
lcall
xchg
inc
and
in
mov
fsubrl
pop
das
jno
nop
mov
ret
fucomip
insb
test
orl
mov
push
push
lcall
arpl
add
mov
movsb
push
daa
xor
fnstcw
cmp
ja
fdivl
test
pop
and
and
dec
test
cmp
sbb
out
das
mov
sub
xchg
inc
int3
cmp
lret
lods
cmp
rcrl
cmc
rcl
push
sarl
push
sarb
or
jns
mov
outsb
sub
fwait
int
pop
movsl
outsl
bound
mov
cmp
scas
adc
mov
dec
repz
les
lods
mov
adc
inc
lock
push
dec
lds
mov
cli
insb
dec
sub
sbb
jmp
inc
push
pop
lahf
fcmove
jmp
std
pop
sbb
dec
int3
arpl
sub
adc
cmpsl
mov
or
sbb
clc
lods
stos
enter
jbe
fildl
scas
adc
jno
sub
add
adcb
adc
negb
fsubr
add
cmp
ds
insb
jecxz
dec
stos
jno
cmp
mov
sub
dec
and
lahf
sub
les
and
addr16
lret
and
sbb
dec
jb
psubsw
or
push
inc
sbb
aam
pop
mov
xor
mov
inc
scas
push
xchg
cwtl
mov
ret
dec
lds
xchg
stos
inc
je
popa
outsb
cltd
aam
insl
mov
sbb
fldenv
mov
sti
xchg
push
or
inc
dec
mov
mov
divb
idiv
or
icebp
sbb
pop
orb
fcomps
sbb
into
and
cmp
adc
xchg
cld
mov
lods
xor
enter
rolb
pop
clc
cmc
cltd
mov
xchg
push
pop
pop
leave
pop
popa
sub
mov
jp
inc
repnz
les
mov
xchg
aam
pop
xor
cmc
repnz
jno
mov
rcr
xchg
clc
lahf
mov
sbb
fidivrs
cmp
or
xor
adc
lods
nop
mov
out
popl
cld
repnz
mov
test
adc
shll
jmp
movsb
out
fwait
mov
fidivrs
mov
xchg
dec
fimull
adc
xchg
lods
xor
sub
sub
in
mov
push
push
stos
mov
jbe
mov
movsl
pop
das
cs
sbb
loop
push
fbld
fcomps
dec
negb
loopne
sub
xor
shlb
sub
mov
mov
sub
sar
xchg
inc
dec
test
sarl
test
push
sub
xchg
inc
insl
in
xchg
ljmp
mov
add
out
inc
call
xchg
sub
clc
cmp
cmp
push
or
lds
mov
in
sub
mov
sub
push
das
sub
add
mov
mov
pushf
push
pop
fld1
sub
mul
addl
lret
mov
leave
jae
mov
sub
fimuls
insl
add
xchg
mov
pop
aas
jne
mov
sub
jge
jo
rcl
mov
xor
mov
imul
loope
and
fcomp
adc
data16
add
xor
mov
jnp
or
icebp
pop
sub
stos
jl
dec
out
inc
int3
mov
movsb
into
out
cmc
push
xlat
push
fisttpll
or
sub
es
ja
jne
or
aam
mov
addr16
push
fwait
mov
and
es
aas
xor
dec
push
imul
adc
test
xor
mov
mov
outsl
xchg
lret
inc
push
xlat
fisttps
out
nop
and
cmp
push
add
pop
stos
sbbb
lea
pop
jns
es
out
cmp
cvttps2pi
or
aas
push
mov
xchg
lock
inc
outsl
xchg
mov
cmp
ds
daa
sub
mov
lret
fisttps
add
push
in
aaa
pop
fsubrs
mov
aam
ss
in
mov
push
xor
xor
or
cltd
insl
sbb
or
shlb
stc
mov
push
pushl
ret
outsl
xor
adc
loop
mov
in
or
lret
loopne
es
add
call
bnd
add
cmp
sbb
jo
pop
mov
jnp
sarl
idivb
daa
repnz
lea
and
cmp
adc
and
out
add
mov
inc
xor
int
jmp
rcr
out
std
or
test
insb
repz
in
dec
lock
pop
xor
sbb
dec
push
test
mov
cmp
fwait
push
and
inc
icebp
repz
pop
into
fwait
cli
xchg
out
popa
outsl
and
push
xor
mov
xor
data16
xchg
stos
add
jp
fs
in
dec
and
cmp
aad
push
out
sub
xor
inc
pop
or
loopne
push
pop
sbb
pop
mov
pop
inc
shr
cmc
xchg
cmp
loope
repz
sub
gs
fnstsw
dec
xor
mov
rcr
stc
lea
mov
mov
mull
sub
lret
aaa
and
push
pop
stc
insb
jle
inc
jno
cwtl
xor
enter
stos
add
enter
mov
in
leave
nop
xor
lret
cld
imul
repnz
mov
xor
aad
dec
lcall
xor
lret
scas
mov
outsb
xor
inc
fsub
out
adc
out
cmp
jae
aad
je
inc
add
lods
inc
inc
outsb
push
adc
lds
add
gs
in
and
push
popa
jp
pop
cli
aad
inc
adc
mov
mov
xchg
xor
insl
sub
cmp
xchg
fucom
sub
ret
mov
addr16
lahf
and
daa
sub
shll
push
and
ss
xor
jle
fadds
pop
or
adc
or
mov
jo
faddl
stos
jns
cld
mov
mov
inc
bound
hlt
push
adc
stc
cmpsb
into
inc
repnz
gs
mov
pop
fsubp
or
pcmpgtw
mov
xor
int
mov
pop
lcall
dec
add
sti
test
insb
loopne
pusha
lret
lahf
outsb
insl
mov
sub
fldenv
lds
roll
push
mov
push
movsb
test
movb
in
fwait
add
mov
push
or
adc
movb
mov
scas
inc
sub
divl
mov
cwtl
in
mov
aam
adc
xchg
ss
add
stos
lret
xchg
je
adc
lahf
ds
mov
mov
mov
pop
jmp
test
aaa
pop
push
inc
lea
fisttps
cmpsb
rol
aam
or
cmp
inc
sub
int
jnp
adc
pop
ja
filds
pop
iret
xchg
bound
cmp
aas
test
and
pop
and
inc
lahf
inc
xor
ret
xor
int3
push
es
fs
lahf
push
adc
xchg
imul
loopne
fistl
sahf
std
lahf
xchg
mov
push
pop
stc
pushf
mov
mov
aam
xchg
mov
addb
loopne
inc
xchg
jb
push
lcall
pop
add
call
xchg
ja
pop
jp
jp
rolb
cwtl
les
jae
repz
xor
sar
aam
xchg
jno
fdivr
lds
or
popf
mov
in
xor
rcll
fcomi
hlt
int3
int
lcall
mov
pushf
fistps
mov
mov
pop
imul
cmp
sub
ljmp
les
pop
push
mov
imul
flds
xor
pop
mov
loope
jne
or
jge
mov
loope
jne
mov
sti
stos
jmp
mov
cmpsl
xchg
aaa
sub
arpl
xchg
jg
add
sbb
dec
orb
and
nop
roll
inc
cmp
mov
xlat
jl
jmp
dec
cli
and
sub
mov
and
pop
mov
shl
or
dec
cltd
and
sbb
jmp
push
lds
sti
adc
cmpsb
das
jge
lret
mov
loop
adc
pop
mov
outsl
in
rolb
mov
sub
mov
mov
jge
loopne
jno
sub
dec
subb
in
pop
aaa
in
ret
cmp
repz
dec
andl
jnp
sbb
xchg
movsl
and
push
push
xchg
or
leave
les
pop
fstl
nop
sahf
dec
bound
xorl
or
fwait
lcall
mov
mov
imul
dec
mov
jle
and
jnp
lods
xchg
icebp
xchg
xor
in
loop
xchg
loopne
push
xchg
stc
lahf
mov
xor
imul
ja
xor
mov
jno
fwait
mov
lods
shlb
dec
push
nop
xchg
sub
push
push
xor
rcll
adc
push
clc
push
test
stc
xor
ja
dec
fcmovb
sbb
mov
jnp
mov
xchg
mov
popl
scas
xor
adc
jmp
mov
lret
out
cmpsl
xlat
sbb
adc
movsl
jmp
iret
test
aad
stos
or
cmp
sub
scas
jnp
mov
lret
lcall
lods
cwtl
bound
mov
insb
mov
lret
jg
mov
dec
xchg
aaa
popl
aam
loop
sar
stos
mov
lahf
lcall
dec
pop
adc
mov
pusha
cltd
xlat
stc
lret
pop
sub
daa
pop
and
lahf
jnp
mov
inc
popa
icebp
subb
bound
es
icebp
testl
imul
loopne
push
and
cmp
mov
mov
test
cmpsb
jae
inc
pop
fsubrs
xchg
mov
inc
lret
insl
cmpsl
cmp
in
dec
ljmp
cwtl
mov
add
mov
nop
aas
sbb
dec
adc
lret
push
push
insb
mov
mov
sub
fsubrl
mov
std
xchg
mov
cmp
in
rcll
cltd
xor
cmpsl
aad
pushf
push
sub
pop
out
add
lea
out
pusha
es
in
push
push
xchg
dec
clc
xlat
movsl
mov
loopne
adc
add
xchg
adc
jg
loopne
scas
pop
loopne
int3
aad
cmc
loopne
es
cmp
pop
jecxz
mov
xlat
stos
sbbl
push
push
rcll
mov
ljmp
push
fisttpll
test
push
mov
sub
in
lods
movsl
mov
cmp
add
sbb
jne
cmp
sahf
cs
mov
adcl
pop
xchg
pushf
xchg
mov
xchg
inc
dec
in
loope
out
stos
js
xor
sahf
les
mov
out
icebp
jo
dec
mov
mov
mov
jb
xchg
sub
fnstsw
push
int
cli
ss
dec
arpl
cwtl
mov
add
les
es
pop
repnz
and
ja
push
adc
shrb
mov
mov
repnz
imul
sub
xor
rcl
jno
pop
scas
sub
inc
mov
lock
scas
movsl
xchg
scas
aam
sub
pop
ret
pop
test
out
cmp
jp
fcoml
inc
adc
out
test
fsubr
icebp
mov
cmp
or
xchg
sub
xchg
mov
or
adc
popf
or
push
pop
loope
xchg
imul
pop
or
call
incl
mov
pop
sbb
lods
ljmp
or
int3
out
lock
jnp
jae
cwtl
repz
insl
cmp
rcll
bound
aad
insb
xor
sti
outsl
jns
mov
mov
pop
push
add
cmp
adc
lret
out
dec
aas
xchg
jecxz
pop
scas
mov
int3
sub
bound
bts
mov
rcrl
inc
mov
cmp
or
jle
mov
lds
push
and
or
jbe
sub
scas
mov
jl
aam
in
sbb
jne
mov
andb
mov
xor
lahf
dec
push
mov
push
dec
cmp
mov
xchg
inc
add
int3
inc
sub
shrl
and
push
faddl
scas
gs
stc
xlat
xchg
std
inc
cld
repz
fsubs
jns
and
imul
leave
fsubrl
inc
lret
shlb
cmp
sbb
mov
pop
inc
and
cs
test
jbe
rolb
loope
call
cltd
lods
in
inc
mov
jno
repz
cmpb
sarb
xchg
dec
and
sbb
push
push
push
das
call
jg
mov
push
adc
out
mov
sbb
orb
lahf
inc
jae
add
jno
push
or
out
and
sahf
push
fists
xor
add
or
xchg
je
dec
and
pop
cmp
jle
dec
mov
xchg
sbb
repz
mov
xor
push
ds
in
xchg
ficompl
adc
ds
xchg
arpl
leave
bound
loopne
fnstsw
pop
cwtl
cltd
push
imul
mov
negb
popf
adc
cmpsl
push
shll
and
cmp
xor
fnsave
push
cmpsl
adc
nop
icebp
pushf
and
mov
fnsave
xlat
andl
andl
lcall
fnsave
rolb
xchg
pop
adc
test
adc
cmp
jp
push
add
jg
inc
add
inc
lock
lahf
mov
or
and
pushf
adc
pop
mov
mov
jl
inc
cs
stos
lock
xchg
cld
xchg
daa
push
lcall
leave
ja
mov
push
push
cmp
jg
imul
dec
jmp
fistl
mov
xor
stos
cs
loop
mov
fs
lds
ret
orl
and
sub
nop
xchg
push
lods
fdivrl
sbb
pop
int
xor
loope
push
fbld
cmp
xor
cmp
aas
into
daa
dec
xor
lods
and
xchg
fstpl
xor
sbb
push
xchg
push
sub
adc
push
add
xor
dec
ja
mov
dec
lret
jl
es
jnp
mov
lock
arpl
lds
inc
pop
popa
hlt
jnp
fwait
int
scas
xor
dec
mov
je
das
frstor
and
adc
mov
jmp
cmp
inc
lahf
sub
cmp
sbb
xor
cmp
stc
dec
push
sbb
lock
into
das
cmc
movsb
inc
jecxz
xchg
jnp
jmp
or
rcl
xor
or
sbb
ficoml
and
xchg
cli
les
loop
push
call
mov
out
adc
adcb
mov
lahf
sub
mov
pop
repnz
shl
imul
int
push
cmpsb
add
gs
sbb
jne
xchg
push
movsb
cmpsb
add
add
lret
cld
mov
stc
ljmp
pop
mov
pop
imul
dec
mov
xchg
xor
popa
addr16
aaa
cltd
lcall
addb
fcmovb
movsl
lods
orb
mov
dec
fldcw
pop
fisttpl
fisubl
fsub
and
sub
add
sbb
int3
loopne
cli
adc
out
cltd
call
pop
sub
adc
orb
incb
mov
push
lahf
xchg
push
js
dec
popf
xchg
mov
ficoml
fcomps
nop
in
sub
pop
inc
vmwrite
and
mov
sbb
bound
cmpsl
pop
add
into
arpl
push
jb
pop
stos
mov
sbb
sbb
adc
popa
hlt
pop
cmpsb
ficoms
pop
sarl
fidivrl
xchg
js
xor
test
or
pop
mov
inc
inc
lret
or
js
test
push
movsl
lcall
ja
mov
xchg
sahf
fwait
imul
popf
jp
and
test
or
in
fcompl
push
cmp
dec
pop
aaa
xchg
adc
insl
les
and
outsl
stc
aas
and
insb
push
push
addr16
push
mov
sahf
out
inc
jp
aaa
scas
int3
or
pop
xchg
jnp
pop
jmp
arpl
notb
and
in
pop
xchg
pop
dec
mov
push
push
ret
test
out
or
xlat
add
pop
cmp
fcomps
je
leave
inc
mov
repnz
popf
adc
movsl
cmpsb
sbb
pop
jg
sbb
fadds
aaa
sub
fwait
imul
je
adc
shlb
mov
test
adc
rcl
or
dec
dec
pop
xchg
xchg
mov
pop
jae
loope
xchg
arpl
pop
lret
push
inc
and
mov
sbb
jo
and
mov
xor
adc
jo
dec
repz
gs
cmp
push
push
in
dec
jg
mov
xor
xchg
mov
fdiv
sbb
sub
hlt
cld
adc
and
lahf
call
jg
sbb
xchg
mov
xlat
and
inc
imul
mov
leave
pushf
xor
ret
adc
and
std
push
and
or
add
and
or
shll
jbe
ret
or
cs
outsl
inc
jmp
or
in
cmp
mov
out
push
sub
sbb
lret
cmp
and
fs
test
xor
gs
and
pushl
pop
lret
mov
fs
cmp
or
xor
inc
mov
pop
mov
mov
movsb
pop
jbe,pt
dec
and
lods
mov
jmp
fs
scas
mov
mov
push
jns
jne
mov
rcl
mov
cli
rcr
mov
xor
orl
lods
dec
lcall
xorl
add
sub
xchg
adc
xor
lea
std
mov
dec
xchg
out
fsubl
cs
pop
xor
push
push
or
pop
mov
push
add
sub
pop
mov
mov
je
out
aaa
and
iret
or
test
xchg
cmc
lea
cmp
jnp
adc
clc
pop
sahf
std
rorl
xor
adc
xor
mov
in
xchg
jb
leave
in
dec
in
or
or
mov
lods
dec
or
add
xchg
leave
gs
xchg
pop
xchg
or
test
push
imul
mov
in
lcall
pop
into
xchg
punpcklbw
and
ret
popa
es
adc
and
mov
popf
xlat
clc
mov
flds
dec
fnstenv
mov
add
dec
int
roll
push
adc
sub
mov
push
shrl
push
sarb
ret
movsb
ret
push
leave
adc
adc
inc
mov
test
dec
sub
cmp
movsl
insl
mov
les
cmp
or
or
xchg
mov
push
mov
enter
mov
and
stos
out
es
movsb
adc
movsl
mov
sbb
and
sub
aad
cmc
mov
jno
hlt
push
push
inc
dec
repnz
or
lahf
cli
dec
add
movsl
pop
push
pop
push
cli
dec
jae
loope
pop
jecxz
aaa
cmp
repz
in
pop
ss
ficompl
dec
insb
push
dec
jb
xchg
xlat
sbb
and
in
sbb
cmp
xchg
xor
jmp
aas
jp
mov
mov
adc
mov
mov
enter
out
sub
sarb
test
cmp
dec
add
xor
cmp
jl
cmp
hlt
pusha
push
pushf
mov
push
sub
dec
add
divl
dec
mov
push
loop
push
xor
test
jl
out
js
dec
test
jp
jae
rcr
pop
mov
movsl
sti
rcll
mov
xchg
mov
sbb
jno
mov
pop
repnz
fists
mov
lods
mov
movsb
call
scas
or
fists
xor
insl
mov
pop
add
jg
adc
jl
mov
cmp
inc
xor
jno
fwait
xchg
sbb
pop
stos
imul
push
push
xchg
imul
mov
add
cmp
inc
pop
daa
xchg
arpl
push
jbe
jmp
icebp
cmpsl
pop
sti
pop
inc
jecxz
pusha
call
out
or
mov
pop
jne
cld
das
mov
mov
je
sub
pop
adc
scas
xchg
std
fst
cmp
mov
enter
cmc
dec
loope
outsl
loopne
lea
popa
subb
enter
pop
push
sbb
fwait
lds
mov
sbb
imul
loopne
pusha
jno
sarl
jb
sahf
adc
mov
cmp
pop
enter
js
test
sbb
push
ret
cltd
js
dec
push
jbe
out
icebp
fidivs
sbb
ja
inc
fwait
popa
jmp
addl
test
in
and
call
or
dec
lret
lcall
adc
xor
mov
xchg
in
sub
pop
cltd
mov
cmpsl
pop
or
jno
bnd
icebp
mov
dec
fiadds
lcall
sbb
cmpb
fistpl
addl
test
cmp
repz
push
mov
cmc
inc
push
in
loopne
nop
adc
xor
sbb
enter
push
jno
test
sub
xchg
repnz
lret
add
lret
and
mov
scas
push
fwait
movsl
inc
xchg
mov
pcmpeqd
pop
ret
add
pop
lds
jp
inc
cld
repnz
insb
xor
and
sbb
push
xor
inc
js
mov
data16
das
lods
mov
lcall
push
fwait
jp
jno
and
data16
push
dec
cmp
imul
insl
fsubrl
popa
sbb
andb
dec
adc
aas
and
xchg
int
imul
jp
lea
cmp
inc
cmpsl
jbe
xchg
jbe
pop
adc
mov
cmp
mov
lea
rclw
or
fisttpl
jge
imul
leave
xchg
sub
xchg
inc
cmp
mov
daa
add
mov
ljmp
or
or
pusha
jae
cwtl
out
cwtl
shll
mov
insl
push
sub
xchg
or
jmp
cmp
aaa
repnz
mov
stos
js
mov
adc
ret
imul
ficoms
sbb
imul
pop
ret
inc
aaa
lret
je
xor
push
nop
adcb
stos
daa
psubsw
mov
js
sub
mov
adc
hlt
cmpsb
cmc
testb
pop
add
mov
mov
int
push
cmpsl
sub
sbb
test
pop
jge
push
sbb
jne
loopne
fstps
xchg
mov
lock
repnz
stos
sub
push
mov
inc
std
js
fs
ljmp
sbb
mov
aas
and
fs
push
inc
daa
in
xchg
out
cmc
pop
adc
sbb
hlt
sbb
add
mov
je
inc
lcall
jne
add
ret
add
rorb
incl
push
jb
shlb
leave
jbe
outsb
inc
shrb
sbb
sbb
dec
stos
mov
daa
mov
sahf
lea
imul
arpl
fsubrs
sub
aad
test
call
mov
insb
ja
lea
cld
shlb
inc
rorb
pop
xchg
xchg
into
push
fdivrs
jle
test
in
xchg
or
rcrl
data16
out
xchg
adc
xchg
ds
xor
aad
and
or
ja
adcl
xchg
sub
arpl
or
xchg
mov
xchg
and
push
and
inc
iret
sub
sub
je
ljmp
or
and
xchg
pop
cmp
pushf
sahf
or
call
mov
scas
push
mov
cmp
scas
popa
push
loop
sub
adc
arpl
sub
sub
pushf
pop
lods
ss
jl
out
mov
add
inc
pushf
push
or
ljmp
adc
jp
ficompl
pop
mov
scas
and
std
stos
cmp
rsm
push
stc
cld
xor
rorb
dec
out
popa
pop
pop
push
adc
mov
ja
cmc
stos
lods
pop
mov
mov
into
and
hlt
test
adc
jb
inc
cmp
jne
loop
jp
loope
adc
jge
add
push
popa
mov
xor
xchg
rcrb
cli
int
addr16
nop
mov
ds
adc
sbb
sub
outsl
cmp
push
cli
pop
push
push
dec
push
es
sbb
les
xchg
ret
pop
inc
pop
les
stos
jbe
loop
and
out
fnsave
mov
jae
fcoml
test
gs
xchg
push
vmovntps
add
adc
xor
pop
mov
mov
andl
add
lods
inc
inc
subb
sahf
push
adc
les
lods
xor
mov
and
dec
or
mov
test
cld
stc
adc
mov
ljmp
inc
pop
push
cmp
mov
or
pusha
push
shlb
xor
lret
pop
cli
cld
repz
sub
and
mov
mov
mov
mov
int3
dec
adc
cli
pop
sbb
fildl
neg
mov
and
mov
mov
stos
sub
sbb
out
xlat
mov
adc
jl
ja
mov
jb
ja
mov
jno
out
aam
subb
outsl
xor
or
mov
icebp
pop
sub
dec
rcrb
lret
xchg
les
adc
lods
int3
out
cmpl
jns
xchg
push
jle
dec
sbb
clc
dec
ret
mov
dec
rcrl
aad
sbbb
xor
sub
loope
shl
enter
int
mov
mov
cli
cs
enter
mov
sbb
pop
shll
mov
cmc
mov
inc
lock
jnp
lcall
inc
stc
stos
pop
inc
cmp
inc
jb
rsqrtps
cmc
outsl
fdecstp
repz
sub
mov
es
es
mov
arpl
gs
cli
enter
cmpsb
cmp
loop
sub
subb
in
shrb
lret
rolb
add
or
aam
call
test
icebp
adcl
adc
push
mov
lret
xor
dec
popa
ja
test
xchg
cmp
arpl
xor
pop
adc
addr16
xor
add
fimuls
bound
mov
sti
add
cld
push
into
cltd
lods
cli
add
into
shll
mov
mov
jbe
add
gs
pop
and
adc
mov
and
sbb
mov
mov
gs
lret
loop
shl
jmp
aam
push
pop
jno
popa
lods
arpl
call
mov
jb
adc
int3
sarb
adc
sahf
pusha
cmp
or
or
fcmovb
inc
sub
addr16
lahf
data16
cmp
push
stc
xchg
in
ja
and
xchg
xor
fsub
inc
push
pop
add
jns
insb
outsb
mov
aas
gs
popa
sub
cmp
cwtl
adc
stc
or
adc
negb
data16
dec
jns
xchg
xor
add
push
push
xor
push
xor
pop
jns
sub
pop
call
cwtl
hlt
mov
ljmp
test
pushf
and
das
scas
sahf
orl
sarb
test
enter
ret
je
mov
push
push
mov
mov
mov
in
sub
cli
ret
pushf
jbe
in
imul
insb
std
cli
jbe
sarb
xchg
mov
push
mov
test
enter
adc
jg
push
cmp
mov
sbb
cmp
dec
or
repz
jns
mov
inc
jle
arpl
cmp
leave
mov
dec
enter
push
popa
imul
pop
and
cmp
and
inc
xor
jne
aad
xor
call
andl
sahf
shrb
jbe,pn
je
in
sub
lahf
negl
cmpsb
adc
push
aas
fildl
cld
stc
xlat
cmp
in
or
mov
xchg
data16
cld
stos
and
sub
mov
or
loopne
aad
mov
mov
bound
cwtl
or
push
aaa
dec
jns
cwtl
adc
cmp
xor
add
addr16
fisubrs
add
subl
flds
push
enter
inc
cltd
cmp
xchg
std
mov
inc
push
cs
icebp
mov
push
icebp
push
mov
lods
cmp
sub
jle
and
cltd
cs
pusha
mov
mov
mov
fadds
pop
mov
jae
pop
pushf
mov
std
loop
dec
xorl
pop
cwtl
cmpsl
sbb
aad
inc
fldl2t
push
insb
outsb
lret
je
push
js
test
push
cmp
lret
push
xor
fsub
lret
xor
gs
jo
add
cmpsl
mov
pop
mov
leave
or
dec
cmp
mov
push
jb
add
inc
enter
and
adc
bound
daa
out
fistpl
movsl
outsl
iret
cmp
aaa
mov
insb
clc
mov
popa
pop
dec
adc
add
inc
push
push
imull
jne
fadds
add
cld
pushf
fidivrl
xor
decl
ror
test
mov
das
xchg
sub
stc
pop
outsb
lahf
xchg
lds
arpl
cs
mov
test
test
divb
lods
scas
sub
or
pop
sbb
pop
pop
mov
aam
cmp
jecxz
ret
hlt
adc
add
pop
sub
inc
frstor
push
cwtl
xchg
test
cmp
push
jno
popa
dec
pusha
pop
imul
popf
jl
lock
imul
shr
sbb
push
ja
or
popf
gs
push
and
cmp
shl
hlt
pop
push
xchg
ret
mov
imul
and
pop
pushf
dec
sbb
js
mov
cmp
lahf
mov
inc
mov
sub
sub
lret
add
mov
inc
mov
push
jns
sbb
repz
xor
sbb
pop
jbe
xor
bnd
andl
cmc
in
add
cmpsl
cmpl
and
or
jg
push
inc
jmp
pushf
je
adc
xor
sbb
loop
sbb
or
add
mov
xchg
lds
lods
inc
sub
cmp
cli
mov
test
push
mov
inc
lahf
cld
call
jmp
and
jbe
adc
clc
cmc
dec
imulb
nop
adc
data16
imul
push
push
xor
cmc
or
inc
test
scas
test
xor
test
rorl
out
xchg
push
repz
sub
dec
test
adc
mov
aad
test
mov
call
jp
test
fs
aam
test
mov
repnz
sub
aam
or
jae
or
pop
cmp
fisttps
out
cltd
lret
mov
push
test
lods
sahf
fstpt
lret
inc
jmp
mov
or
stc
lds
bound
adcb
dec
xor
pushf
mov
shll
xorl
fimuls
xchg
imul
xchg
pop
cmp
cmp
mov
popa
add
jg
adc
shl
fisubl
roll
xorb
fiaddl
je
fisttpl
loope
in
jne
repz
add
repnz
arpl
in
mov
inc
sub
sub
loop
shrb
sti
push
sub
mov
mov
pop
in
mov
pop
xlat
dec
outsl
xchg
ja
repz
pop
or
imul
add
mov
imul
sbb
sub
add
mov
popa
lods
mov
hlt
aaa
mov
pop
pusha
test
cmovge
insl
loope
dec
cwtl
push
int3
or
js
in
jge
and
or
ss
cmp
push
sub
adc
or
lret
in
or
cld
add
bound
stc
cltd
daa
pop
cmpsl
out
mov
xchg
divb
es
inc
cmp
cmpsb
scas
jle
mov
lcall
stos
ja
icebp
mov
inc
addr16
data16
hlt
mov
arpl
push
mov
mov
and
add
ficoml
sub
push
insl
std
andb
stos
or
movsb
roll
cwtl
insl
xchg
push
negb
nop
push
cmp
inc
pop
test
fisttpl
jbe
test
cli
inc
cmp
push
aas
out
and
adc
sbb
jne
stos
roll
test
test
mov
mov
arpl
pop
cmpsb
sub
sub
stc
aad
xchg
mov
mov
sbb
popl
mov
mov
pop
mov
inc
das
cmp
sbb
mov
cmp
sahf
xchg
movsl
lds
xor
mov
inc
insb
xchg
adc
sub
outsl
sub
repnz
adc
sub
lock
test
lods
jp
inc
mov
pop
ljmp
repz
or
insl
mov
dec
sbb
jge
mov
cmp
ljmp
jmp
xor
xor
insb
push
sub
cmp
stc
dec
mov
add
push
and
sbb
pop
incl
and
les
je,pt
cmp
cmpsb
inc
add
push
or
stos
xchg
call
sub
lea
das
mov
mov
fcmovbe
and
imulb
adc
or
jmp
pop
and
inc
mov
sub
push
fs
enter
push
and
jg
or
jae
jle
mov
lret
ljmp
mov
in
lock
or
pusha
nop
cli
test
mov
inc
adc
test
pop
outsl
or
sub
push
dec
lcall
aaa
mov
lcall
out
push
cmpsl
cmp
add
inc
ret
divl
and
test
test
or
sub
or
push
popa
xchg
movsl
mov
and
dec
dec
iret
push
xchg
test
xlat
jp
xor
cmc
sbb
sbb
jnp
fs
mov
test
pop
or
push
mov
popa
xchg
xchg
jnp
ret
or
mov
imulb
mov
mov
mov
leave
cltd
push
mov
push
xchg
push
imul
mov
in
mov
lret
dec
iret
and
data16
dec
and
xchg
aam
roll
sub
xchg
cmp
jo
sbb
pushf
jnp
push
xchg
fwait
out
iret
lret
xor
add
loopne
push
leave
jo
mov
mov
xchg
sarl
cmp
cmpl
pop
dec
cmp
ret
pop
inc
test
addr16
mov
and
popf
out
pop
enter
pop
mov
arpl
mov
call
mov
push
popf
mov
inc
cmc
cmp
rcll
ljmp
pop
leave
stos
mov
fidivrl
fistpll
popf
jmp
pop
add
push
in
shrl
xor
or
out
setne
leave
scas
inc
sub
jmp
pop
leave
sbbb
mov
sub
rclb
sarl
pop
subb
lret
in
fwait
lcall
test
xchg
stos
sti
ror
mov
rcr
push
xlat
push
rdpmc
aam
sub
inc
clc
cmp
and
pusha
roll
nop
imul
jp
imul
xor
mov
and
mov
cmp
pusha
ret
sbbl
lret
push
pop
sti
xchg
mov
xchg
outsb
jg
push
test
push
sub
sub
nop
xor
jnp
rorl
les
cmpsb
mov
in
mov
add
xor
and
cld
mov
inc
arpl
repz
xor
push
push
test
call
xor
sbb
sbb
push
inc
movsb
inc
mov
les
inc
lea
aaa
clc
push
cmp
mov
std
push
mov
lret
cmpsb
outsb
sbb
cli
inc
push
lods
mov
lds
int
xchg
lock
dec
inc
jg
cltd
pushf
cld
xchg
add
dec
pop
xor
pop
test
push
add
dec
jge
fidivl
inc
dec
inc
inc
sub
mov
gs
stc
test
movsl
mov
xor
cmp
mov
push
ds
push
popf
scas
ss
sbb
mull
outsb
repz
xchg
fwait
sbb
push
jmp
mov
inc
imul
flds
aad
pop
jg
pop
cmc
or
mov
add
pop
dec
mov
ffreep
insb
push
jmp
jne
cmp
mov
xchg
lods
fnsave
out
sbb
dec
mov
mov
iret
dec
in
cltd
pop
sub
scas
nop
test
adc
es
hlt
mov
jae
out
fldcw
xor
push
fsubrl
data16
push
lods
out
stc
scas
scas
lds
inc
cmp
mov
call
xlat
std
cltd
call
scas
mov
ja
stos
inc
adcb
push
mov
and
stos
addl
cmp
inc
sbb
fnsave
mov
in
lcall
sub
sarl
js
pop
inc
scas
ficoml
js
sub
scas
mov
clc
movups
rorl
sbb
in
out
mov
scas
in
scas
jg
jg
clc
cmp
inc
push
pushf
xchg
ficoms
mov
loopne
cmp
pop
out
clc
mov
cmp
dec
call
inc
inc
jo
addl
test
xchg
cltd
adc
std
inc
jge
les
clc
insb
and
ljmp
cli
and
cs
stos
js
fsts
loop
adcb
jns
mov
out
jae
js
cmp
xor
outsb
outsb
shlb
xlat
ficoml
lods
fadd
sbb
nop
jno
or
dec
push
popf
jne
in
lcall
roll
pop
shrl
jmpw
pushf
out
mov
inc
dec
sbbb
shrb
push
jb
inc
sub
call
js
pop
cmp
es
xor
js
cmp
push
or
jg
js
into
mov
roll
ljmp
dec
mov
jle
xor
dec
call
sub
push
jp
movsb
jo
or
pop
jmp
pusha
out
ret
mov
bound
sbb
cmp
mov
in
into
lods
add
xor
add
push
aad
pop
add
imul
fcomps
repz
jge
push
add
xchg
insb
sub
ja
mov
lods
shlb
xchg
ja
jecxz
push
lods
push
adc
push
adc
push
inc
xor
and
dec
inc
mov
mov
push
shrl
and
inc
jno
loop
data16
adc
sbb
xor
jae
xchg
mov
out
push
lock
cmp
addl
out
and
jmp
into
mov
aam
pop
pop
mov
xor
fisubl
clc
les
mov
and
cmp
stos
imul
mov
mov
cli
dec
adc
mov
rolb
or
pusha
aad
lea
and
mov
pop
cld
pop
xlat
into
repnz
mov
sub
ja
dec
mov
dec
cmc
ss
xor
mov
jb
hlt
flds
xor
idivb
test
jno
es
sarl
aam
cltd
cli
inc
stc
fiadds
push
ljmp
loope
jecxz
call
adc
or
dec
sbb
or
add
jge
es
scas
fmull
scas
pop
adc
ja
mov
adc
test
aaa
out
mov
mov
inc
inc
cmp
lock
sbb
repz
cmp
fsubrs
mov
call
xor
xchg
ret
cmc
or
xor
adc
sbb
sbb
xor
jl
and
jnp
cmp
movups
insl
fsubr
adc
add
pop
outsb
stc
sub
and
iret
mov
mov
fnstcw
dec
jecxz
scas
mov
loop
mov
cmpsl
icebp
mov
inc
stc
pop
lods
popf
or
movups
push
dec
mov
lahf
pop
data16
sbb
add
rclb
dec
xchg
in
sbb
shrl
jmp
jne
adc
add
or
sub
adc
frstor
out
cwtl
out
add
xchg
inc
pop
mov
and
ljmp
sub
lahf
std
xlat
push
add
imul
mov
cwtl
aam
xor
xchg
inc
subb
movsb
jge
or
arpl
lods
in
movsl
bound
or
lret
lahf
fidivrl
sub
jl
sti
aam
inc
cmp
ds
add
pop
and
ss
jp
das
outsb
mov
rcr
jl
into
imul
mov
jae
push
in
dec
dec
out
daa
movsb
bound
sbb
fisubrs
xor
dec
push
adc
xchg
out
ljmp
das
imul
cmp
call
leave
mov
addr16
sbb
dec
mov
adc
mov
out
loopne
in
rcrb
jne
push
in
push
in
xor
sbb
xchg
xor
fistps
inc
xchg
notl
orb
test
lods
push
cmp
stos
cli
ja
dec
cltd
fiadds
and
dec
cwtl
inc
adc
inc
les
ds
jnp
inc
jno
mov
stos
push
push
clc
cmp
or
push
into
push
cmp
pop
push
push
outsl
dec
je
lcall
and
add
mov
push
dec
push
push
or
sub
repnz
jmp
fisubl
mov
shlb
adc
iret
sbb
dec
xlat
xor
testb
leave
jae
int
das
and
lahf
leave
aam
pop
lcall
in
icebp
mov
adc
add
enter
push
arpl
push
dec
scas
pushf
cmp
ret
test
push
mov
ja
lods
aas
mov
insb
popa
inc
sti
and
shrb
dec
mov
mov
pop
inc
lcall
inc
pop
mov
ds
rcll
aas
icebp
mov
mov
cmp
pop
aam
push
inc
pop
jns
jecxz
pop
sub
or
ss
pop
fldcw
pop
clc
bound
cmpsl
xchg
jns
dec
sub
xchg
and
ficoml
in
clc
pushf
push
mov
test
mov
and
inc
lret
pop
dec
adcl
in
dec
sbb
jp
xchg
ljmp
mov
mov
adc
inc
test
push
dec
xor
dec
mov
ret
add
ljmp
lcall
and
cltd
lds
shlb
push
popf
mov
push
jo
xchg
and
dec
and
mov
incb
out
data16
sub
and
sti
jne
mov
jle
scas
mov
addr16
sbb
das
inc
push
inc
cmp
mov
cwtl
xchg
cmp
jnp
gs
mov
add
cmp
or
es
aas
push
mov
push
fs
mov
mov
jge
repnz
imul
cmc
dec
pop
lret
xchg
popf
and
clc
xor
test
out
adc
inc
and
jb
mov
pop
pushf
cmp
and
jbe
push
dec
pop
add
mov
jae
xchg
scas
mov
into
sub
add
lods
xor
mov
pop
jns
and
cs
push
cwtl
add
xorb
mov
out
aad
mov
adc
pop
je
cmp
mov
daa
shll
call
inc
mov
rolb
mov
gs
in
or
cmp
inc
clc
xchg
push
xchg
jl
adc
add
push
in
arpl
stc
mov
jbe
inc
pop
sub
inc
lret
aas
inc
or
lahf
je
push
imul
ficompl
lock
sub
dec
sbb
aas
les
xchg
rcrl
leave
adc
adcb
scas
lods
imul
dec
jnp
jp
xchg
fsubl
es
or
outsl
or
mov
and
sub
pop
call
mov
inc
out
push
cmc
sub
lds
pop
mov
xorb
xchg
mov
enter
lea
leave
or
addr16
cmp
aas
cmp
aam
insb
cltd
jecxz
sub
int
jbe
cmp
dec
sbb
leave
incb
mov
xchg
mov
and
addb
movsb
stos
icebp
mov
adc
lods
test
xor
das
aaa
pop
test
in
lods
xor
test
sbb
outsl
push
sti
xor
mov
jg
nop
push
push
lret
push
sahf
ret
bound
filds
mov
lret
mov
dec
repz
cs
int
imul
mov
test
inc
mov
xchg
inc
adc
pop
js
fidivrl
fstl
popf
iret
mov
pause
adc
lahf
xchg
repnz
jae
fists
mov
lahf
xor
xchg
mov
roll
shll
popf
cmp
jno
or
or
outsl
ret
movsb
jecxz
push
sub
lods
xor
iret
jae
in
sti
jg
mov
out
aaa
cmpsb
add
sub
adc
inc
dec
xor
sbb
imul
enter
pop
lret
jo
xor
cmpsl
mov
xor
or
fdivrs
fstps
dec
das
lea
jbe
mov
fcmovne
pop
mov
aam
add
add
xor
dec
jbe
add
nop
and
cmc
sub
adc
xor
cmpsl
push
dec
sub
cmp
pop
repz
pop
add
mov
xor
xchg
xor
inc
xlat
imul
jns
xor
flds
scas
scas
lret
mov
ss
push
pop
das
scas
sub
push
addb
dec
xchg
mov
mov
mov
in
xor
fnstenv
mov
jge
movsl
jbe
ss
idivb
and
push
sub
or
and
cs
jecxz
popf
outsl
mov
inc
adc
test
mov
lret
push
lret
test
mov
out
inc
inc
lret
xor
or
enter
pop
xor
pop
pop
mov
inc
pop
js
int
int
stos
cmpsb
lcall
mov
sub
ds
loop
pop
adc
sub
loope
jnp
jb
add
cmp
add
cmp
xor
js
mov
pop
inc
rcr
inc
and
clc
fmuls
fidivrs
xor
xchg
fcoml
imul
sbb
ret
xchg
jo
pop
daa
push
outsl
rolb
cmc
loop
xchg
adc
js
shr
sbb
adc
add
adc
xchg
sub
lds
xorb
cmp
push
testl
xchg
ja
es
cld
mov
sarl
cmpsl
push
cmp
mov
xor
mov
xchg
adc
mov
xchg
cmp
mov
push
shl
pop
shlb
ja
fisubs
repz
mov
inc
scas
inc
lea
sti
hlt
jne
aad
das
andl
aam
fildl
jbe
arpl
push
inc
mov
daa
ret
mov
sub
sbb
sub
xchg
sub
push
jo
xchg
mov
rcll
push
and
mov
popa
scas
int3
cmp
das
add
loop
push
xchg
cld
gs
jno
mov
int
mov
push
hlt
ret
daa
daa
or
or
icebp
mov
sub
pusha
and
in
push
pushf
cmp
icebp
movntps
cmpsl
xorl
add
pop
inc
lret
stos
or
sbb
push
mov
lods
jne
mov
decb
cmpsl
push
fs
mov
jnp
or
lea
mov
fmull
cmp
or
frstor
cmp
and
or
xchg
cmc
jns
mov
lods
add
mov
call
cmpsb
mov
test
xchg
stc
mov
fdivrs
mov
jnp
push
mov
or
pushf
int
stc
sbb
and
inc
xchg
sbb
mov
jne
clc
xchg
lods
push
pop
jle
add
psubusw
adc
shl
adc
jp
sbb
mov
aad
sub
sub
fsts
adc
repnz
jno
xchg
and
mov
push
in
inc
jno
xchg
push
cs
shr
dec
inc
mov
mov
pushl
adc
addr16
and
popa
and
jae
mov
sbb
js
mov
dec
jg
or
dec
daa
aas
outsl
fiaddl
insl
lret
inc
lea
dec
int
jmp
popa
test
rclb
xchg
cmc
ret
mov
loope
rcrl
leave
sbb
jge
inc
jecxz
in
cwtl
dec
cld
in
sub
cld
mov
enter
jbe
seta
loop
push
ljmp
mov
aam
stos
or
sbb
push
sub
dec
stos
push
loope
mov
jno
xchg
and
mov
loope
xor
stos
inc
ds
push
lahf
orb
push
enter
xlat
in
repz
imull
fcomps
sub
pop
in
jle
js
leave
pop
xor
dec
imul
or
cmp
scas
mov
push
or
repnz
sub
push
push
sub
ja
jne
shrl
and
out
sub
dec
cltd
dec
pop
aad
lea
loope
mov
pusha
popl
clc
cwtl
scas
mov
dec
dec
pop
jb
mov
int
xor
js
subb
sbb
jno
mov
push
mov
movsb
adc
inc
adc
jb
gs
aas
jl
outsb
test
imulb
sub
xlat
out
roll
xor
imul
ss
fisubs
outsl
aaa
sub
pop
insl
scas
dec
cmpsl
or
inc
scas
lcall
mov
dec
mov
mov
in
pop
push
stos
fidivl
mov
cwtl
out
jbe
popf
shll
mov
sbb
push
add
cmc
cmc
xor
lret
mov
push
int
push
clc
xchg
lahf
xor
daa
lahf
xchg
fisubrl
repz
in
std
jnp
pop
js
cwtl
movsb
sti
sbb
aaa
insb
and
ljmp
outsl
xchg
cld
faddl
insb
cwtl
pop
pop
stos
cmp
mov
mov
sti
aam
lcall
cmpsb
ret
mov
std
pop
mov
inc
movsb
in
icebp
stos
xor
jmp
sti
lcall
in
insb
daa
jne
in
aaa
lret
ret
xchg
flds
adcb
add
pushf
leave
sahf
pusha
std
in
push
sub
das
pop
sub
int3
mov
xchg
sub
push
lock
in
cmpsb
bound
and
lock
dec
sbb
enter
add
cmp
outsb
daa
add
sub
or
or
hlt
int3
xorl
popa
mov
mov
outsb
pop
iret
ret
ret
mov
xchg
pop
fbstp
inc
mov
out
cmp
mov
mov
test
shll
adc
jno
mov
inc
push
shl
mov
mov
mov
mov
je
insb
mov
pop
pushf
cld
jmp
xchg
and
pop
repnz
add
or
sbbb
mov
push
push
int
cmp
mov
inc
jmp
sub
inc
sub
push
cmp
mov
adc
fstpt
mov
popf
pop
inc
in
jae
pop
xchg
sub
xchg
clc
sti
into
mov
repz
sbb
movsl
dec
loopne
in
and
xor
push
and
pop
mov
inc
lret
int3
sbb
inc
push
mov
jp
fsubrs
and
mov
mov
ljmp
rclb
xchg
xor
test
dec
loopne
jge
adc
bound
add
into
imul
mov
lea
stos
push
sub
popf
aaa
incl
aam
inc
jno
mov
ds
out
inc
pop
adc
out
fdiv
mov
subb
jl
cmc
sbb
in
xchg
cmp
inc
pop
pusha
push
push
shlb
dec
mov
int3
mov
lret
push
push
or
cwtl
xor
xchg
jle
push
lahf
xchg
dec
mov
notb
and
ror
cmp
and
fstpt
add
pop
dec
in
insl
fmuls
ljmp
and
push
xchg
cli
outsl
mov
call
mov
inc
sub
add
push
ds
int
fucom
je
xor
fidivrl
xchg
mov
emms
popl
incl
and
jno
outsb
inc
cli
popf
bound
icebp
enter
sar
mov
aas
lahf
inc
aaa
fcmovu
nop
out
test
aad
add
stc
inc
call
das
rclb
adc
lahf
sbb
pop
inc
pop
hlt
mov
and
rcll
pop
dec
pop
xor
ljmp
test
lret
cmp
movsl
ret
shrl
jp
push
pushf
shrl
adc
xor
sahf
in
adc
xchg
push
mov
push
enter
ja
or
out
mov
or
sub
insb
ja
leave
ja
xlat
or
insb
popa
frstor
xchg
scas
aaa
les
in
jmp
and
jo
dec
out
loop
insb
shrb
push
xchg
mov
push
lahf
test
xchg
and
mov
jae
shll
ljmp
push
loop
in
lock
mov
jb
inc
in
test
mov
sub
mov
or
add
xchg
xlat
dec
mov
subb
lds
cmc
sbb
mov
mov
push
int
jp
fiadds
and
xchg
das
stc
mov
ds
push
push
jg
es
stc
dec
in
pop
into
lods
ja
stc
pand
andb
jmp
sahf
imul
mov
les
adc
pop
insl
or
das
test
xor
enter
lret
xlat
in
jbe
hlt
icebp
fdivs
loopne
lea
xor
jmp
and
push
adc
mov
pop
inc
std
sub
shll
fcoml
jle
and
add
sub
sti
or
mov
xor
mov
cmp
xchg
inc
xchg
scas
pop
cmpsb
inc
xchg
cmp
scas
repz
mov
xor
adc
pop
int3
enter
aas
neg
xor
jmp
jmp
pop
push
popa
leave
mov
sbb
sbb
popa
jmp
cmp
mov
daa
rclb
dec
mov
insb
js
test
sarl
fwait
jge
mov
fwait
xor
sub
mov
mov
gs
inc
popf
mov
es
pop
and
aad
xor
jno
insb
es
movsb
xchg
fsubs
jp
mov
bnd
sbb
fs
mov
daa
inc
or
divb
mov
scas
fninit
scas
jge
enter
sub
aaa
ja
push
cmpsl
xchg
rcll
jae
xor
or
insb
jg
xor
sbb
fstl
out
mul
xchg
inc
push
xchg
and
pop
pop
nop
mov
testl
leave
sbb
inc
loop
outsb
jmp
js
mov
jle
cmc
add
icebp
stos
out
enter
pop
cltd
and
and
dec
movsl
mov
icebp
dec
mov
movsl
jecxz
jb
das
mov
push
jb
bound
adc
xchg
lcall
dec
xor
cli
sbb
int
sbb
sub
xchg
fists
jecxz
sti
xlat
push
ffree
inc
pop
repz
mov
pop
bnd
mov
jnp
sub
pop
pusha
or
jmp
mov
inc
bound
mov
mov
add
ret
ret
push
xchg
jle
test
imul
inc
mov
dec
dec
xchg
es
fadds
cmp
push
out
pop
or
inc
ss
pop
sbb
sbb
pusha
test
pop
loopne
lahf
push
sub
pop
push
rolb
movsl
std
inc
pop
add
int3
lcall
pop
orb
outsb
push
add
clc
lods
sub
clc
pop
lods
push
xor
or
mov
addr16
aas
pusha
stos
lcall
mov
dec
sub
inc
cmc
add
ljmp
sub
or
das
test
adc
sub
lock
fst
push
ja
cmpsl
fs
cltd
pop
sbb
jmp
jbe
jg
jp
mov
push
xlat
mov
cmp
mov
lcall
mov
gs
jbe
fwait
cld
movsl
clc
cld
sub
push
mov
or
adc
bound
shlb
add
sub
pop
xor
sbb
rolb
nop
test
jecxz
stc
push
cli
mov
add
aaa
mov
imul
imull
lods
pop
ficoms
jbe
xor
lahf
ret
sbb
mov
jecxz
cmpsl
adc
out
fsubrl
ds
dec
inc
xchg
cmp
dec
and
movsl
push
fimuls
ja
scas
stos
mov
int3
sub
rcrl
std
cwtl
mov
mov
and
ja
scas
sub
out
lods
pop
pop
jb
dec
jge
leave
shlb
xchg
xor
bound
cltd
fs
mov
sub
adc
jns
add
ret
iret
daa
les
mov
cli
dec
stos
mov
js
lahf
enter
sarb
xchg
scas
cmc
nop
push
dec
daa
in
imul
add
orb
lods
cmc
cmp
inc
repz
xlat
gs
in
aaa
sub
dec
iret
xchg
arpl
dec
mov
and
lds
cmp
shrl
jnp
push
insb
pop
aam
pusha
inc
test
test
mov
jnp
sar
loopne
mov
fidivs
and
cli
mov
lods
xor
jae
cmc
cmp
mov
test
pusha
sub
jb
mov
idivb
cmp
dec
jg
inc
loop
call
fnstcw
movsb
jmp
test
dec
fsubrl
out
out
rorl
jbe
and
xor
or
add
pusha
cmp
std
into
jo
cld
push
cs
out
lods
aam
cld
add
mov
sahf
jmp
in
push
xor
mov
loop
arpl
adc
dec
stos
add
daa
enter
mov
pop
cs
cs
dec
and
adc
pop
imul
mov
xor
jp
xchg
outsb
dec
jmp
bound
dec
cmp
add
dec
popa
jbe
xor
fldt
xchg
stc
pop
sub
repz
inc
insl
add
stos
cli
clc
out
mov
fidivl
shrl
out
loope
lds
ret
cmp
mov
out
imul
lock
or
jmp
dec
mov
adc
sar
in
push
popf
dec
pop
sbb
mov
iret
repnz
add
push
adc
repz
shll
sahf
gs
inc
test
or
cmpsl
fidivs
sub
or
ja
inc
dec
fsubrp
cld
outsl
cmp
jl
adc
nop
decl
cmp
mov
add
call
in
jno
cmp
lret
jo
mov
jmp
ljmp
daa
adc
adc
inc
in
jecxz
fsts
push
arpl
and
push
pusha
adc
and
lods
ret
lds
test
push
fstp
les
mov
sbb
ds
int3
or
pop
cmp
inc
pop
idivb
sub
jns
in
dec
sbb
mov
je
adc
and
jecxz
sub
addr16
data16
sbb
loope
mov
mov
mov
xor
test
dec
mov
out
sbb
xor
ja
dec
mov
inc
pusha
adc
call
mov
ljmp
je
or
nop
loope
dec
mov
stos
in
aad
popf
shrl
outsl
adc
ret
xor
stc
cs
pop
dec
in
in
xor
lods
flds
imul
mov
call
js
cli
ja
sub
jl
cld
test
and
popa
push
daa
dec
daa
mov
dec
dec
pusha
xchg
vrcpss
mov
xor
mov
sub
xchg
stc
dec
stos
adc
xchg
int3
add
les
cmc
sub
pusha
xchg
int
xchg
lods
testb
xchg
push
push
gs
xor
pop
inc
and
or
gs
pop
cli
popf
fsub
sbb
aad
sbb
outsb
je
inc
add
lods
mov
xchg
leave
repnz
imul
fwait
in
add
xchg
push
mov
insl
imul
mov
inc
pop
jbe
aas
cmp
lods
fwait
or
outsb
daa
mov
movsl
sbb
and
stos
into
sub
lods
faddl
or
push
outsl
xchg
inc
jmp
stos
popa
test
sub
rcll
push
das
addr16
mov
add
das
xchg
cmpsb
enter
pop
ret
xor
ds
iret
rcrl
and
dec
or
rol
mov
adc
push
sub
mov
pop
sbb
inc
push
push
xchg
jle
sbb
push
pop
jg
mov
imul
aaa
out
icebp
mov
or
mov
je
movsl
imul
inc
repz
mov
stc
inc
shll
imul
add
js
in
cmp
adc
push
aaa
out
cmpsb
sub
dec
xor
jg
or
push
ds
mov
adc
mov
in
mov
dec
ror
and
lea
xor
stc
jmp
pop
mov
cs
cmp
imul
xor
mov
rorl
in
and
aaa
mov
lcall
insb
and
cmp
xchg
sub
jae
mov
jbe
fisttpl
sub
adc
xchg
je
repnz
xlat
cli
repnz
imul
rolb
xor
iret
leave
adc
test
push
out
adc
aad
or
inc
add
into
call
jno
sbb
pop
sub
xchg
mov
xor
inc
mov
movb
jno
fwait
xor
cmpsl
inc
sar
js
push
popa
ja
lahf
lret
fistpl
ljmp
lds
mov
into
das
mov
je
pop
jae
push
mov
and
push
mov
push
rolb
movsl
and
or
in
out
sbb
or
mov
xor
push
int
sbb
das
clc
dec
cld
sbb
ret
cmpsb
cmp
lock
ss
mov
xor
sbb
inc
loopne
add
lahf
ja
aaa
pop
xchg
shlb
sbb
test
shll
sbb
mov
mov
push
or
repz
xor
inc
push
fldenv
clc
shll
ret
faddp
test
pop
dec
sbb
push
arpl
movsb
mov
and
sub
ret
xchg
imul
insl
cmp
add
mov
cli
inc
scas
orb
ds
mov
popa
les
mov
outsb
or
scas
pop
xor
cli
dec
add
jp
adc
lahf
in
fdivrs
add
inc
jae
mov
push
rcr
add
roll
in
cli
cmp
pop
or
and
in
sbb
stc
decl
inc
out
jg
dec
adc
lock
jl
dec
mov
push
xor
push
nop
loope
fcoml
mov
sahf
mov
sti
int
pmullw
aad
mov
sbb
mov
jb
pop
fcoms
pop
and
mov
jp
jle
xor
js
mov
rorl
lahf
ja
mov
test
cmp
cmp
sbb
dec
pop
int3
rcl
fs
adc
popf
imul
sahf
test
mov
add
cmc
dec
or
loope
jle
es
add
mov
xor
pop
jle
fld
xchg
mov
cmpsl
test
add
js
ret
aam
lcall
stos
mov
adc
mov
fnstsw
mov
jns
xchg
loop
or
cmc
jae
sub
mov
inc
ljmp
or
cltd
mov
mov
mov
js
mov
fisubs
xor
cltd
push
cmp
in
jle
xor
xchg
xchg
push
cmpsl
adc
call
cld
paddsb
sub
mov
nop
pop
pop
loope
inc
rcl
test
rclb
aad
or
add
mov
sarl
add
ffreep
addl
inc
hlt
dec
in
subb
data16
pop
xchg
imul
notb
pop
xlat
negl
sahf
mov
scas
cmp
push
lret
mov
gs
mov
pop
mov
add
mov
push
lds
rcrb
and
arpl
push
fsubl
mov
dec
xchg
je
mov
loop
adc
mov
and
jns
and
push
int3
test
outsl
call
and
rcrb
repnz
or
add
dec
cmp
mov
cmp
sub
cmpsl
roll
mov
fidivs
jne
or
aaa
fwait
and
jne
add
loope
leave
push
add
xor
cmp
push
in
repz
and
daa
mov
mov
adc
mov
adc
aas
cmp
mov
imul
mov
lock
push
stos
shlb
xor
call
nop
cmp
or
adc
aad
call
xchg
loopne
inc
aaa
cmp
cmp
sub
cmc
fiadds
sub
fwait
into
mov
ljmp
lcall
popf
and
cmpsb
mov
repz
fnstcw
push
out
dec
lret
pop
xlat
adc
repnz
dec
sbb
cmp
xchg
jns
mov
ds
mov
and
stc
shrl
sbb
jg
mov
dec
cmp
sbb
inc
call
divl
lds
pop
lock
xor
rcrb
lds
xlat
sub
stc
pop
test
gs
ret
mov
cmc
cmp
xor
mov
je
dec
xor
mov
dec
jo
and
or
jno
add
addl
mov
fdiv
inc
xchg
clc
mov
jae
cmpsl
dec
dec
jg
pop
or
pop
mov
dec
into
mov
out
movsb
inc
lock
mov
mov
addr16
sbb
add
repnz
dec
bt
js
mov
inc
pop
int
les
xchg
arpl
jl
jb
mov
lods
fwait
add
stos
jbe
int
loop
mov
pop
hlt
imul
dec
jne
ret
and
int3
xchg
jp
add
pop
xchg
mov
test
push
mov
in
cmp
mov
clc
cmpsb
or
hlt
fidivrl
push
pushl
push
push
sti
sbb
sti
insb
cltd
xor
push
pop
adc
decb
mov
cli
pop
iret
out
inc
cmp
lds
and
pop
out
ljmp
pop
xor
jbe
imul
or
repz
cld
aam
pop
cmp
xchg
inc
stos
inc
je
xor
add
ljmp
pop
stos
pushf
mov
and
addl
add
aaa
add
adc
mov
xlat
pusha
popf
inc
out
inc
push
inc
cmp
push
sahf
mov
mov
cmpsb
insb
mov
sub
mov
and
push
pop
daa
sub
les
mov
out
gs
insb
mov
inc
in
fidivs
xor
mov
push
xchg
shl
lret
bound
mov
cmpsb
fstpt
push
cwtl
rol
in
cmpsb
and
out
das
inc
pop
xor
daa
rclb
sahf
xchg
sbb
out
leave
jo
int
pop
divb
xor
jle
mov
xlat
sti
aad
pop
sub
bound
bound
idivb
pop
loop
sub
or
mov
call
ficomps
out
pop
dec
mov
cwtl
or
jle
scas
mov
jp
mov
es
ret
xchg
push
in
movsb
jb
mov
cmc
add
sub
mov
push
xchg
lcall
pop
fsubrl
out
js
cmc
pusha
pop
mov
aad
adc
mov
in
mov
and
jb
push
xchg
sbb
xor
cld
mov
sub
xlat
aaa
stos
dec
xchg
popf
mov
sbb
pop
aas
or
mov
es
shlb
pop
hlt
sbb
stos
mov
push
xor
xlat
add
jmp
cmp
fld
aam
rcl
adc
adc
stos
inc
fstl
mov
stos
insl
or
mov
pushl
aam
inc
jmp
jbe
sahf
movsb
push
cmpsb
add
push
or
sahf
pop
push
push
jle
inc
cltd
repnz
inc
mov
push
dec
cmp
adc
fisttps
push
call
inc
sahf
mov
sahf
mov
out
mov
je
rcrl
adc
cmp
repnz
ficompl
movsl
mov
movb
jo
sahf
cmp
in
decl
sbb
fcoml
in
push
insb
mov
in
cmp
shlb
xchg
scas
xchg
daa
ljmp
scas
adc
shr
jo
das
xchg
lret
insl
xor
inc
enter
xchg
loop
sbb
jg
repz
dec
and
icebp
in
jge
jle
int3
inc
sbb
mov
cmc
es
fs
inc
sbb
ljmp
cmp
push
rcl
mov
mov
mov
mov
pushf
hlt
pop
sub
or
xor
mov
cmp
mov
addl
push
cwtl
sahf
mov
mov
lea
lcall
dec
mov
bound
add
sbb
jbe
xchg
and
in
sub
push
mov
cmpsl
xor
cmp
sahf
sysexit
gs
int
data16
rcrb
dec
inc
push
mov
mov
inc
outsb
mov
jecxz
into
push
int
ss
and
mov
ret
sbb
clc
xchg
lods
addb
inc
sub
xchg
mov
std
shlb
lods
jle
dec
add
cwtl
jg
aas
je
repz
sub
fiaddl
xor
test
fwait
gs
cmp
xchg
int3
and
dec
jo
xchg
and
xor
dec
jecxz
push
mov
in
pop
ret
jno
xchg
add
aaa
lods
add
ss
hlt
cmp
in
out
mov
mov
jbe
or
sahf
int3
int
lea
mov
and
adc
add
stc
xchg
sub
push
jp
je
insl
movsb
insl
jp
xchg
jge
and
sbb
cmc
sbb
aaa
adc
xor
mov
test
repnz
ss
fisubrl
shrb
adc
jmp
fucomp
jae
popa
sub
push
inc
stos
ljmp
inc
jle
mov
cmp
cmp
addr16
mov
popf
xchg
fimuls
ds
push
test
js
mov
add
cmpsl
test
sub
mull
mov
xchg
aas
mov
arpl
and
stos
fbstp
insb
inc
psllq
lods
sub
rclb
ljmp
iret
sub
inc
sub
push
jae
out
push
test
push
push
sbb
pop
pusha
inc
jne
ja
arpl
or
xor
ficomps
je
test
pop
dec
xadd
sub
loopne
push
icebp
cmc
fisubs
shlb
sub
inc
cmpb
lcall
dec
xor
push
sbb
fwait
pop
imul
and
jns
scas
mov
lret
stos
add
dec
and
mov
xchg
push
pop
jns
icebp
dec
lret
jle
int3
sub
pop
push
fnstsw
insl
mov
lret
inc
stc
mov
shrl
and
shl
bound
and
imul
lea
out
mov
out
add
mov
add
pop
xor
sbb
push
push
sub
scas
inc
sbb
jb
stos
arpl
repnz
movsb
test
cmp
int3
push
mov
mov
cmp
ficompl
lds
dec
adc
mov
sbb
addr16
sbb
push
inc
lret
xchg
aam
jae
jle
daa
add
inc
or
dec
sahf
xchg
sub
test
jp
xor
imul
sbb
gs
mov
and
xor
js
add
int
aaa
jne
mov
push
sub
out
call
mov
ret
std
pop
into
push
push
addb
dec
cmpl
jns
out
imul
out
mov
shlb
and
fildll
cmp
mov
rclb
rcl
and
iret
js
andl
sub
and
dec
lods
lret
push
mov
pop
cmpsb
dec
pop
sbb
add
lock
add
xchg
mov
das
cmp
arpl
cmp
loop
ss
sub
std
xchg
jp
cmp
push
push
rol
fists
pop
add
in
sbb
outsb
xchg
jae
sbb
inc
xor
mov
lret
lahf
inc
and
jnp
push
jne
jo
mov
out
cmp
cmp
cmp
pop
jp
jmp
pop
test
add
lea
in
pop
in
cs
outsb
rcrl
and
add
ljmp
adc
or
jo
lret
or
mov
pop
xor
and
sbb
dec
and
loope
movsl
and
and
arpl
push
cld
movsb
add
jno
cmp
sub
ss
cwtl
es
jnp
rcrb
sbb
add
sub
jns
push
adc
fcompl
das
stos
movsb
sbb
and
fdivp
mov
or
out
jo
pop
mov
or
scas
push
in
fs
jne
xor
adc
icebp
jp
push
mov
dec
cmp
cmc
mul
std
rcrb
dec
dec
push
and
roll
jnp
cmp
adc
or
mov
test
jne
aam
nop
pop
sbb
pusha
stc
jb
xor
mov
sub
adc
outsl
stc
pop
enter
mulb
call
push
in
cwtl
nop
adc
inc
or
pop
jle
cmc
bound
ss
outsb
dec
dec
movlps
adc
push
fs
dec
or
out
pop
repz
add
sbb
decb
inc
loop
inc
stc
shrb
imul
iret
jle
cmp
clc
push
xchg
jo
scas
test
adc
jge
adc
scas
mov
jns
dec
out
adc
lea
pop
add
sub
inc
cmc
clc
cmp
mov
and
pop
adc
addb
mov
pop
test
imul
mov
mov
in
les
ljmp
nop
lahf
sub
test
test
mov
adc
ret
inc
jecxz
dec
pop
cmp
add
pop
call
jae
cmp
jb
cmp
out
push
loopne
xlat
ss
data16
int3
sarl
push
dec
pop
lds
push
xor
imull
pop
or
mov
push
sbb
mov
jg
out
xchg
dec
fidivs
popf
mov
data16
cmp
fisttpll
push
ds
fcmovnb
ja
sub
icebp
sbb
lock
mov
shlb
inc
and
nop
xchg
ja
jecxz
jns
add
test
lsl
fcomps
shlb
data16
jo
fsubs
das
pop
xor
xor
dec
nop
pop
mov
jo
push
mov
ret
mov
ret
mov
mov
int
mov
lds
iret
and
repz
sahf
daa
sbb
push
pushf
jnp
jae
xchg
cwtl
cmpsl
dec
orb
icebp
mov
int3
dec
fidivrl
adc
subl
adc
mov
loopne
adc
pop
sbb
sub
rcr
movsl
rcr
movsb
mov
mov
cs
sub
jge
movsl
and
sub
xor
xor
je
pop
iret
jg
xchg
hlt
das
cmp
lods
mov
ret
les
sbb
pop
imul
mov
dec
inc
outsb
and
push
mov
sub
xchg
pop
in
in
outsb
les
mov
adc
jo
dec
arpl
pushf
popa
lcall
push
sbb
jne
rcll
jge
cld
bound
inc
int3
ficompl
jns
cmc
enter
mov
push
sarb
movsb
and
imul
mov
lea
popf
cmp
add
mov
jo
addb
test
ds
orb
push
xchg
mov
mov
ret
dec
add
add
out
add
xchg
mov
cltd
dec
bound
xlat
out
and
stos
mov
jmp
ds
in
shrb
jb
jp
and
bound
addr16
std
cmpsb
int
pop
icebp
imul
jb
subb
xor
call
pusha
rorb
int
mov
daa
jne
mov
lea
fsubr
lds
lret
and
dec
arpl
pop
and
das
dec
sbb
sub
mov
das
jb
rcrl
mov
push
in
punpcklbw
inc
imul
xchg
cld
xorb
out
les
test
std
subl
out
mov
cld
cmp
lret
jo
shrl
inc
mov
and
push
test
jne
enter
mov
in
in
pop
pusha
jp
fsubrl
pop
and
pop
aad
sub
cmp
cmp
mov
adc
or
pusha
jge
mov
enter
jb
repnz
bound
daa
popa
popa
scas
sbb
add
mov
mov
adc
add
sbb
incb
push
arpl
cmc
rcl
mov
nop
movsb
mov
ret
adc
scas
push
push
mov
shll
push
or
mov
push
mov
scas
jno
das
int
add
mov
mov
daa
clc
adc
addr16
push
xchg
das
and
mov
sub
out
out
gs
inc
inc
loopne
outsl
mov
cmpsl
shrb
cmp
sti
test
sub
push
repz
arpl
pop
dec
adc
push
jecxz
ljmp
pop
add
and
adc
and
pop
ret
scas
imul
push
dec
mov
mov
shrl
in
dec
jns
dec
cmc
and
movsl
cmp
into
fxch
xchg
dec
ds
loop
sub
lret
popf
mov
mov
pusha
xchg
cmp
jno
popa
test
mov
inc
add
scas
dec
hlt
cs
cmp
sub
ret
cmp
dec
fnsave
push
pop
andb
jbe
xor
stc
mov
out
inc
clc
mov
into
rcll
inc
fidivs
jbe
mov
cmpsb
xor
mov
call
ret
insb
xchg
imul
push
pop
repz
and
sbb
pop
inc
fcompl
lods
stos
roll
testl
daa
inc
sub
lret
inc
cld
arpl
dec
sub
fistpll
cmpb
ret
stos
xor
dec
jg
repz
cmp
xchg
or
xchg
loopne
adc
xor
jmp
push
cmp
addr16
lods
add
stos
mov
ljmp
push
outsb
fwait
inc
cmp
jnp
or
adc
sti
stc
push
dec
leave
and
xor
dec
lcall
add
jle
lret
ret
pop
jns
pop
test
and
dec
lret
xor
dec
adc
dec
xchg
cmpsl
fsubrp
sti
cmp
pop
in
push
cmc
pop
cmpsl
or
pusha
pop
xchg
jbe
leave
mov
cmp
pop
popa
sbb
test
test
pop
outsl
dec
cmp
sti
shl
mov
jne
or
aas
leave
popf
insb
jmp
inc
push
dec
icebp
addr16
push
sbb
out
cmp
push
xor
aas
loop
push
sarl
loop
cmp
les
arpl
repnz
cmpsl
mov
cld
cmp
out
add
aas
js
imul
mov
imul
lahf
inc
vmread
jns
adc
or
pop
stc
push
xchg
shll
add
dec
out
lods
mov
pop
adc
jo
mov
pop
movsl
push
iret
xchg
daa
lcall
jo
mov
sti
cmc
lret
fimull
mov
mov
mov
sub
jg
mov
mov
das
push
cwtl
push
jge
sbb
cmp
mov
pop
dec
push
test
js
test
popf
cld
xor
mov
out
xchg
repnz
lock
ret
mov
insl
adc
mov
aas
pop
or
daa
fwait
inc
pop
cwtl
add
rep
cmpsl
addr16
inc
lret
scas
jcxz
mov
jl
xchg
xchg
call
sbb
mov
xchg
mov
out
jge
shl
popa
add
pop
pop
cld
push
das
aas
dec
icebp
adc
fisttpll
clc
adc
sub
aam
jmp
mov
fsubl
orl
mov
and
lea
sbb
inc
inc
repnz
push
cmpsl
adc
aas
mov
sbb
int3
inc
xchg
mov
stos
sbb
or
mov
or
sub
xchg
add
out
inc
inc
lods
cltd
rorl
mov
fisttpl
sub
cltd
cmc
jecxz
ljmp
lods
jb
icebp
out
xor
dec
mov
rorb
in
inc
jg
pushf
pop
mov
ret
inc
sbb
jge
mov
dec
pop
popf
sub
and
imul
cmp
push
push
or
out
xor
cmp
int
dec
out
push
or
not
inc
in
xchg
dec
fidivl
and
mov
enter
loop
sbb
aaa
pop
push
out
pop
pop
mov
cmp
outsl
xor
in
add
fdivrs
aam
adc
notl
mov
fdivr
jae
add
pop
adc
call
sbb
lahf
or
fadds
pop
xor
pop
push
and
mov
mov
mov
lods
xchg
mov
mov
fisttpl
sbb
andb
in
push
sbb
movb
xorb
int
cmpsl
add
push
push
out
aam
daa
dec
arpl
and
pop
adc
dec
sahf
xchg
je
sbb
or
popl
inc
jbe
in
insb
test
outsb
mov
out
cmp
jge
ljmp
data16
les
aaa
fs
iret
dec
mov
pop
mov
pop
enter
cmc
adc
daa
pop
popf
test
cmp
in
add
in
dec
xchg
inc
scas
xor
fwait
pusha
push
adc
dec
lock
andl
xchg
cmp
dec
aad
outsl
neg
cmpsl
jb
xor
jg
stos
mov
xchg
push
cmp
cli
or
mov
push
or
mov
mov
jp
mov
inc
cmp
enter
and
push
js
and
sub
xor
fmul
mov
mul
adc
ja
mov
mov
adc
enter
in
or
push
ret
std
iret
imull
jnp
cld
and
stos
pop
ss
sti
ds
pop
push
es
dec
in
inc
push
and
push
ss
cltd
int3
jle
adcl
adc
shlb
daa
lods
arpl
mov
pop
fmuls
stos
and
or
idiv
push
lcall
int3
sbb
cmpsl
das
rcll
shll
enter
mov
outsb
icebp
dec
dec
test
imul
pop
push
jbe
push
addr16
jmp
bound
and
mov
cld
pop
mov
or
adc
pop
mov
cmpsb
and
scas
mov
cmp
push
sbb
int
push
sub
pop
sub
dec
pop
dec
push
cmpsb
push
inc
adc
decb
inc
out
xor
pop
sub
push
in
negl
lea
mov
pop
adcb
cmc
inc
or
push
mov
enter
aad
test
test
flds
out
filds
sbb
xlat
fisttps
orb
mov
mov
out
cmc
sub
pop
push
mov
notl
fsubrl
arpl
and
mov
mov
xor
popf
xchg
jecxz
aad
or
hlt
es
aaa
sbb
lods
push
cmpb
lea
sbb
inc
les
loop
push
add
dec
mov
movsb
sbb
pop
js
jo
iret
sti
nop
add
mov
mov
fs
in
inc
or
sbb
das
xchg
sub
mov
adc
stos
push
in
mov
mov
fs
pop
mov
xor
inc
out
lcall
mov
ret
add
sarb
xor
mov
imul
jb
xchg
lods
in
mov
xchg
sub
out
mov
or
adc
fildl
adc
ret
mov
push
divb
sub
add
inc
mov
add
mov
scas
out
adc
and
xchg
lods
andl
insl
mov
adc
aad
mov
cmc
jmp
in
push
sbb
sbb
repnz
lods
ret
or
adc
cmpb
sbb
scas
repnz
les
hlt
sbb
pop
mov
mov
or
mov
xorb
cmp
ror
clc
stc
or
sub
call
xor
mov
pop
pop
iret
bnd
mov
xor
sub
lahf
pop
jb
adc
mov
pop
push
mov
xlat
ss
fwait
in
lcall
cmp
jne
shll
aas
cmp
add
add
data16
popa
out
ret
fucomi
outsb
mov
out
pop
cmc
mov
inc
pop
add
pop
mov
jnp
add
fsubrl
push
and
mov
add
mov
cmp
inc
dec
out
jle
lds
mov
arpl
sub
mov
iret
loope
xchg
dec
and
inc
pushl
jb
je
cmovle
rolb
in
outsl
cmp
xchg
jecxz
aaa
clc
cmp
push
xchg
aam
sub
pushf
movsl
jo
aaa
jl
ret
mov
mov
rorb
insb
mov
push
nop
inc
js
or
aad
iret
jbe
icebp
or
xchg
fstpl
jne
daa
push
cmp
sbb
lret
push
xchg
dec
push
sbb
shlb
subl
in
ljmp
insl
lods
pop
cmc
or
ljmp
ss
adc
movsl
test
imul
enter
mov
mov
push
rcl
in
rclb
loope
mov
sub
xor
or
pop
mov
cmp
rorb
lods
and
inc
stos
aas
mov
dec
test
xchg
xor
dec
pop
fisubl
mov
ja
repz
shl
aas
push
adc
in
js
sar
xor
sbb
mul
adc
aaa
or
insb
mov
adc
icebp
enter
ret
mov
adc
mov
scas
mov
sub
mov
push
jne
jbe
imul
xchg
jge
cmp
mov
mov
push
pop
out
outsb
dec
mov
sarb
das
mov
outsb
xchg
jg
mov
out
push
adc
mov
adc
mov
fistps
adc
outsb
inc
sarb
cmp
fnstenv
pop
pop
popa
mov
jno
sub
sbb
mov
xchg
sub
repnz
pop
adc
fistpl
pop
test
addl
dec
pop
jno
dec
and
scas
outsb
frstor
ljmp
jp
mov
lods
push
sub
xchg
movsb
lcall
mov
or
movsl
mov
push
aam
icebp
test
lods
dec
adc
adcl
sub
ljmp
fidivs
mov
cmp
pop
into
xchg
movb
cld
adc
dec
pop
je
add
cli
add
outsl
repz
subl
outsl
dec
push
or
ret
aam
jo
test
test
sub
inc
jmp
push
popf
mov
cmpsl
dec
test
fisttpll
mov
hlt
in
mov
loopne
inc
sbb
add
fcmovnbe
inc
sub
pop
insb
paddd
push
mov
cs
das
imul
icebp
xchg
shll
sarb
mov
enter
jmp
test
or
loopne
mov
in
inc
scas
iret
mov
test
ds
jp
popf
sarl
adc
aaa
sbb
cmp
mov
pop
fcoms
push
cmpsl
fwait
mov
scas
xor
outsb
adc
imul
dec
xor
inc
rcrb
fwait
in
test
leave
test
xor
push
mov
push
bound
arpl
fnstcw
jno,pn
shrl
insb
out
jb
mov
pop
xor
and
inc
les
lcall
xchg
dec
jmp
in
push
add
sub
xchg
sbb
loop
gs
repnz
inc
aam
lods
adc
loop
out
fsubrs
int3
pop
push
or
jo
cwtl
jl
lcall
cmpsl
imul
mov
mov
test
test
lret
mull
jno
xchg
sub
std
mov
inc
lea
dec
lods
cmpl
pop
ja
wrmsr
and
popa
jbe
xchg
and
jmp
in
inc
out
leave
mov
jno
inc
xor
ja
lcall
movsb
cmp
insl
inc
pusha
dec
rorl
mov
shlb
or
mov
mov
enter
xchg
push
out
jb
add
jp
addr16
xor
mov
mov
cli
mov
pop
pop
cmc
xchg
mov
enter
inc
nop
ja
clc
insb
and
mov
and
popa
rcr
loop
fcmovne
xchg
cmpsl
je
add
frstor
iret
fcmovnb
ljmp
scas
sbb
imul
xchg
push
dec
mov
sbb
push
sbb
sti
xorb
lret
gs
inc
jo
cld
cld
inc
pop
lods
imul
or
nop
xor
mov
pop
cmpsb
inc
sub
mov
scas
pop
pop
xor
pushf
inc
cmp
shrl
movsl
or
fwait
jecxz
mov
popa
cmp
sbb
and
inc
push
incl
dec
push
sbb
push
or
push
sbb
adc
jp
test
mov
iret
int
jl
add
int3
insb
or
aad
xor
mov
xchg
mov
popf
cld
adc
jecxz
into
xor
sti
push
outsb
pop
sub
xor
xor
or
outsl
sub
push
inc
xchg
inc
outsl
mov
sbb
mov
adc
in
pop
dec
push
shll
rcll
nop
adc
cs
push
pop
inc
add
mov
xor
adc
daa
mov
jae
aam
rorl
lea
es
das
movsl
fstpl
inc
mov
stos
fcoms
faddp
addr16
es
lcall
mov
push
cmp
test
int
inc
xor
inc
xor
jle
in
int3
sahf
jle
shll
inc
jbe
imul
sub
adc
cltd
xlat
into
int3
jle
jmp
pop
cmp
outsb
lods
cld
dec
cltd
andb
inc
loope
cmc
fldcw
mov
inc
cs
test
jnp
dec
sbb
sbb
in
cmpsl
dec
inc
xchg
aas
test
mov
nop
jbe
or
clc
push
add
sub
inc
adc
in
mov
lahf
stos
popa
ljmp
lahf
jae
imul
mov
js
rorl
pushf
push
or
cmp
mov
imul
lods
pop
jnp
push
out
jbe
aad
loopne
pushf
xor
ja
gs
mov
or
rcl
pop
sub
cmpsl
mov
lods
sbbl
pop
mov
shl
int3
dec
push
pop
and
jae
jno
test
rorb
and
adc
adc
insl
int
jae
push
xor
and
les
dec
sbb
dec
mov
jnp
fmul
out
scas
mov
add
jnp
dec
rcl
jmp
mov
fst
inc
sub
jle
dec
or
xchg
xchg
aaa
cmp
xor
ja
adc
int3
dec
jb
push
jnp
pop
das
mov
dec
loop
movsl
push
cld
lds
adc
test
arpl
test
fisttpll
mov
jp
sarl
popf
jo
push
pop
sub
xorl
pop
nop
dec
or
out
addr16
in
sbb
imul
mov
jbe
push
in
ds
iret
aad
push
cmpsl
pop
sarb
jns
sahf
outsl
push
inc
sbb
xor
stc
insb
jae
movsb
out
adcb
push
adc
cmp
mov
push
pop
data16
or
fldt
out
sub
dec
or
mov
sti
jae
inc
xchg
stos
scas
mov
jle
push
inc
mov
xor
cmp
ja
sbb
cmpsb
xor
int
mov
test
mulb
out
fcmovnu
add
push
ss
fnstsw
imul
xchg
xchg
sub
shlb
or
push
cmp
scas
out
outsb
cmp
xchg
fidivl
cmpsb
jmp
pop
adc
xor
int
sbb
xor
andb
outsb
pop
lret
pop
scas
shlb
dec
repz
pop
std
test
fs
mov
sub
stc
rcrl
aad
idivl
fcoml
imulb
dec
cmp
lret
push
mov
popf
int
rclb
dec
stos
inc
cltd
jmp
cmp
push
jne
jb
push
je
xor
pop
pop
push
dec
out
mov
mov
xor
dec
out
xchg
rclb
into
out
cltd
lea
adc
mov
ss
adc
mov
fldln2
or
inc
out
or
xchg
sti
mov
and
add
testl
subb
fdivr
push
push
ja
rcr
outsb
and
cmpb
stos
arpl
loope
dec
adc
ljmp
cmpl
push
cmp
jb
push
fbstp
sbb
or
mov
xlat
pop
fnstcw
pop
adc
clc
cld
push
rolb
or
sbb
pop
xor
inc
add
test
repnz
fwait
jp
sub
xor
fcmovu
in
sub
mov
inc
pop
mov
lds
adc
inc
xor
movsl
inc
jl
mov
jne
sahf
jns
in
cmpsl
xchg
jmp
or
imul
cmpsl
test
xlat
adc
xchg
mov
ss
jo
xchg
stos
cmp
dec
cmp
lock
andl
js
ja
in
cltd
ret
es
fsubrl
xchg
nop
loopne
rorb
pop
inc
dec
mov
xchg
stos
dec
in
mov
adc
loope
mov
sbbb
add
call
add
add
sub
cmp
add
pop
lea
adc
fisubrl
out
or
sbb
lcall
adc
arpl
hlt
mov
pop
sub
cmp
cmp
xchg
sbb
jle
mov
loop
fstl
push
pop
lods
mov
add
xchg
xchg
mov
xor
imul
mov
jmp
enter
or
into
out
das
insb
inc
sub
arpl
inc
out
pop
pop
xchg
mov
lret
add
xlat
ljmp
add
repnz
jnp
ficoms
rclb
jbe
enter
ror
incl
jo
push
shrl
es
xor
xor
sub
xchg
mov
xor
adc
jge
stc
mov
shll
pop
hlt
outsb
ss
out
aad
in
in
lock
jg
mov
jb
adc
sbbb
mov
ret
push
mov
xor
cwtl
test
pop
imul
cmc
lods
lcall
imul
cmp
jmp
enter
rcll
push
adc
outsl
fdivl
aaa
loop
test
push
hlt
adc
out
pop
push
dec
cmpsb
lcall
enter
lock
ljmp
dec
pop
cld
int3
sbb
add
push
mov
dec
sbb
xor
in
pop
cli
adc
faddl
notb
and
cmpsl
shl
xor
and
mov
cmpsl
pop
test
incl
mov
pop
cli
pop
push
push
dec
fildl
push
add
mov
test
icebp
inc
mov
leave
cmc
fs
push
pop
push
fstpl
lret
cs
arpl
shll
js
push
fcomps
gs
dec
cltd
insb
push
and
mov
add
xchg
stc
mov
sub
test
in
bound
mov
popf
fs
ds
dec
cld
mov
shll
jae
mov
xchg
ss
ret
pop
lods
aad
fimuls
mov
add
mov
movsb
sbb
hlt
push
sbb
movsl
sub
push
sbb
or
xlat
into
leave
shll
or
and
sahf
push
jo
dec
add
les
loopne
adc
pop
xor
nop
or
shrb
sarb
xchg
iret
jge
andl
add
mov
and
adc
inc
inc
cmp
test
sbb
mov
sbb
mov
lret
mov
movb
cmpsl
movsb
push
jl
inc
pop
popa
adc
mov
mov
pop
push
sub
sbb
dec
inc
push
mov
lods
xchg
aad
sub
lahf
out
push
iret
rclb
inc
mov
inc
mov
scas
movsl
adc
cmpsl
imul
xchg
sbb
mov
out
push
or
pop
sub
inc
sahf
jle
lock
fldcw
test
pop
repz
repz
test
call
adc
pop
hlt
in
loope
mov
push
ljmp
push
scas
sub
jge
dec
pop
sarb
add
movsb
sbb
push
push
push
mov
loop
rolb
lods
lret
jno
inc
mov
scas
dec
pop
inc
sbb
adc
divps
fucomi
xchg
rcrl
out
jmp
out
lods
lea
jb
movb
movsb
outsb
mov
aaa
data16
inc
cld
jg
int3
or
leave
inc
adc
int
pop
xchg
mov
xchg
insl
out
xor
pop
push
lods
ret
popf
dec
jb
enter
or
jmp
xchg
movsb
ret
cmpsl
mov
repz
pop
add
lea
mov
mov
jne
jp
push
mov
stos
imul
pop
and
xchg
arpl
jnp
and
inc
out
push
insl
ffreep
mov
push
cmpsl
adc
jo
pop
int
xchg
mov
sarb
cmp
popa
sub
pusha
jno
ja
jl
lcall
jle,pt
out
mov
ja
hlt
mov
mov
xor
iret
rcll
sub
push
das
mov
repz
iret
out
imul
leave
in
jnp
lret
cmpsb
mov
mov
and
mov
jns
test
lret
adc
inc
mov
hlt
xchg
inc
push
xor
xor
mov
xorb
cmp
daa
repz
jle
lret
push
test
adc
pop
aaa
loop
fsts
mov
fiaddl
stos
xchg
in
pop
lcall
xor
cmp
mov
push
adc
imul
popaw
sbb
jae
mov
mov
xchg
test
fwait
loopne
inc
icebp
mov
add
add
add
and
cmp
and
mov
bound
lods
mov
pushf
sbb
aad
stc
movb
lret
clc
mov
xchg
pushf
mov
in
dec
mov
pop
call
stos
inc
pop
repz
xor
add
fmuls
aaa
sbb
cmpsl
dec
xchg
test
ljmp
movsl
push
adc
inc
sub
pop
insb
lods
and
repz
and
dec
nop
insl
lods
cmp
and
mov
outsl
xchg
dec
addb
and
pop
xor
lahf
push
xchg
fidivrl
or
inc
mov
xchg
stos
cmp
pop
repnz
cwtl
sub
bswap
mov
lea
test
pusha
jecxz
xor
pop
xchg
jmp
std
fisttpl
xchg
ret
arpl
adc
data16
test
jmp
sbbl
jbe,pt
mov
add
pusha
add
adc
xorb
clc
out
mov
notl
dec
inc
sti
popa
rcl
iret
jns
cmpsb
out
imul
hlt
repnz
add
out
push
xor
test
je
je
mov
shll
or
pop
leave
ja
nop
jmp
sti
es
stc
xor
mov
ffreep
cmp
cmc
cmpsb
iret
and
mov
js
ficoms
and
sbb
and
xchg
loope
aas
pop
pop
pop
daa
inc
push
aaa
cmp
mov
inc
insl
push
ss
mov
mov
frstor
inc
pop
repnz
pop
mov
movsb
dec
frstor
subb
push
mov
mov
adc
ja
mov
ss
outsb
sub
lea
sub
xor
mov
sti
add
sbbb
cmp
mulb
mov
add
cmpsb
mov
sub
mov
mov
cmp
ficomps
mov
roll
fsubr
outsl
test
cmpsl
repz
lods
jns
cmp
in
adcb
fistpll
inc
insl
pusha
xchg
cltd
xor
shlb
add
leave
pop
insb
xor
out
pop
data16
in
rolb
cmp
mov
lods
cwtl
pop
pop
lret
ret
jl
in
cmpsl
inc
xchg
mov
inc
rol
icebp
cmpsl
and
fnstcw
and
aaa
dec
push
outsb
out
mov
test
xchg
es
and
xchg
fisubrl
test
filds
jl
divl
mov
mov
xor
std
sub
jge
into
or
sti
ss
fdivs
and
fstps
inc
add
cli
mov
sbb
or
ds
dec
sbb
xchg
mov
lock
sub
jb
fdivrp
out
mov
pop
lret
or
sub
rclb
mov
es
mov
std
es
lret
ja
add
test
xchg
jnp
mov
dec
fdivr
pop
pop
shrl
sbbb
or
int
aaa
or
out
addl
xlat
lea
out
movb
pop
add
lahf
fsts
addr16
addr16
fwait
mov
insl
ds
addr16
xchg
xor
mov
test
cmp
xchg
fwait
mov
jo
mov
stos
ja
mov
sar
aam
icebp
sbb
push
lds
adc
mov
dec
dec
lods
insb
push
popa
or
lahf
dec
mov
pop
xlat
out
jp
decl
test
sub
test
out
mov
rcll
hlt
and
sub
pop
or
dec
mov
pop
cmc
subl
lds
ss
nop
jbe
mov
lahf
add
sub
dec
mov
push
repz
and
call
out
dec
jge
mov
popa
jg
icebp
xchg
jg
xor
je
jecxz
lods
aam
jle
sbb
mov
cltd
mov
pop
test
mov
jmp
cmp
daa
sbb
inc
xchg
leave
aaa
cmp
pop
jl
icebp
not
add
aas
inc
lods
pushf
add
mov
ja
aaa
iret
pop
push
jle
cmp
push
pop
js
xabort
call
xor
mov
mov
or
mov
mov
lds
add
xor
mov
icebp
jl
inc
cltd
ficompl
or
aas
sbb
movsb
xor
mov
stc
movsl
push
daa
mov
lret
insl
xchg
sub
xor
sub
inc
sub
hlt
aaa
imul
lcall
jp
ds
adc
lea
ljmp
push
outsl
shll
mov
push
pop
add
outsl
mov
pop
sti
sub
int
dec
fdivl
xchg
fs
adc
lret
sub
xchg
insb
mov
adc
ljmp
sahf
shrl
sub
xchg
jno
push
mov
jnp
mov
or
lods
inc
pop
movsb
scas
sarl
aam
or
and
mov
lds
popf
psllw
jl
std
cli
lret
jae
sahf
psubsb
jno
enter
outsb
or
jb
sub
jle
inc
push
fwait
shl
lret
in
and
das
xchg
mov
jmp
fsts
cmc
test
aad
rcll
mov
sti
sub
or
push
jmp
sub
mov
arpl
add
inc
jae
fidivl
adc
jp
xorb
push
dec
mov
ret
outsl
int
lret
testb
lods
sbb
lahf
pop
gs
daa
stos
sbb
mov
pushf
out
mov
mov
incb
les
mov
push
mov
aaa
jmp
mov
pop
push
sub
jo
cwtl
mov
test
dec
xorl
decl
popa
rcrb
stc
in
jne
xlat
pop
sbb
jl
std
and
xor
ds
stos
jb
cld
sub
sub
xchg
decb
nop
cmpsb
dec
pop
xchg
subl
jne
sub
sub
test
inc
mov
add
add
or
sbb
xor
lahf
or
jp
and
push
pusha
pop
dec
lds
push
mov
mov
aam
mov
mov
arpl
inc
gs
dec
jb
test
xchg
jnp
inc
in
mov
inc
stos
inc
pop
jnp
fisubs
xor
in
mov
arpl
cmp
shr
icebp
add
outsl
insb
repnz
mov
jp
ret
or
sahf
data16
xor
and
aam
adc
mov
add
jg
jmp
jmp
sub
add
and
stos
inc
push
mov
mov
insb
push
clc
mov
pushf
adc
shlb
cmp
xor
sub
push
jle
xor
aam
loope
inc
scas
dec
lods
enter
mov
scas
mov
and
es
test
push
fldl
inc
scas
in
aas
cmpsl
jo
adc
mov
scas
pop
mov
cmp
inc
call
rorb
imul
sub
sti
std
insb
mull
ja
mov
roll
or
cs
jge
mov
push
aam
test
mov
mov
inc
repz
les
mov
int3
dec
loopne
cmp
outsb
mov
pop
push
or
stos
adc
xchg
hlt
and
popa
xchg
cmp
fstl
adc
in
add
cmp
test
aam
insl
lea
or
fiaddl
add
ds
flds
rcrb
ljmp
or
pop
push
sub
mov
hlt
into
mov
nop
shlb
adc
mov
outsb
jmp
jecxz
push
push
pushf
jecxz
or
ljmp
subl
mov
testl
fisttps
pop
xlat
shl
mov
nop
mov
jmp
dec
movl
jmp
scas
loopne
xlat
cltd
sbb
xlat
addr16
gs
int
in
xchg
sbb
loop
push
push
mov
cs
sub
add
inc
testb
dec
test
test
int3
cmpsw
cli
jb
scas
lret
subl
lret
or
inc
jnp
sub
cmp
stc
pop
xor
data16
sbb
or
gs
and
les
or
pop
xchg
cs
lahf
out
cmp
xchg
push
sahf
lcall
inc
jns
add
out
add
jmp
add
outsb
mov
mov
mov
insb
mov
inc
pusha
lock
push
mov
aaa
mov
sbb
fidivrl
xor
fs
cmp
lret
push
outsl
dec
xlat
je
mov
dec
out
fucom
inc
xchg
in
or
scas
push
mov
or
sub
mov
data16
sbb
shr
fadds
scas
outsb
inc
sbb
fcomi
mov
mov
loop
cmp
mov
nop
mov
sbb
cmpsb
push
dec
jnp
xchg
adc
divl
push
insl
ss
mov
adc
mov
mov
xor
inc
out
outsl
xchg
add
mov
add
pop
xlat
scas
sub
repnz
aas
mov
shrl
stc
lret
or
sub
dec
inc
xchg
out
hlt
mov
push
add
cmp
sub
loope
lret
inc
arpl
cmp
adc
rcl
mov
add
xchg
pop
sub
ror
fbstp
fstpl
xor
les
sbb
scas
lret
roll
enter
fisubrs
js
pop
xor
das
pop
cmp
add
mov
xchg
sub
dec
insl
inc
cmp
sbb
pop
fdivl
sub
in
out
mull
jns
out
or
inc
fwait
testb
push
mov
jl
add
inc
cmp
jo,pt
mov
jp
sbb
jnp
pusha
add
mov
mov
lret
mov
popf
sub
ds
js
fisubrl
inc
daa
imul
add
dec
push
repz
and
xchg
in
jg
xchg
hlt
out
jae
arpl
les
mov
dec
dec
or
cmp
sub
xchg
sarb
jns
in
sti
mov
jp
int3
xor
sahf
mov
sbb
mov
orl
call
lret
je
push
mov
adc
mov
cmp
in
dec
sub
mov
ret
je
adc
and
adc
pop
and
dec
cmp
lahf
imul
test
cmp
out
mov
jmp
dec
stc
cwtl
adc
xchg
mov
scas
push
push
sbb
jae
cmp
cmp
outsb
in
insl
call
cmpsb
pop
cmpsl
fcompp
sub
jmp
into
or
pop
stc
jp
lret
pushf
bound
jl
mov
es
fdivp
mov
adc
pushf
iret
sbb
mov
roll
dec
mov
test
test
inc
sbb
pusha
rcrl
sub
lock
in
mov
cmpsl
cld
subb
js
push
dec
lea
ret
sarl
stc
add
mov
sbb
cmp
movsl
sub
push
adc
idivb
rcrl
push
push
mov
sub
push
jmp
lcall
jo
addr16
or
aam
lds
inc
add
je
sub
or
pop
mov
mov
movsl
or
mov
cld
aam
cli
xor
xlat
test
hlt
mov
add
add
out
jmp
out
mov
sarb
sub
lcall
add
mov
xchg
sub
xchg
mov
lcall
push
xor
mov
adcb
add
int
cmpsb
nop
fscale
arpl
sub
mov
push
adc
pop
push
pushf
ja
lods
xchg
xchg
sbb
je
out
cmp
scas
popa
movsb
sub
or
pop
cltd
xor
out
stos
sub
lock
mov
push
and
outsl
lods
adc
lods
adc
aam
cmc
jg
nop
add
mov
dec
mov
and
and
mov
xchg
xor
xlat
pop
dec
pop
je
pop
aaa
xor
loopne
fxam
lods
lea
mov
push
jo
aad
test
adc
incb
adc
pop
jne,pt
push
pop
imulb
imul
sub
ret
and
mul
ret
ret
sbb
pop
movsb
cmp
call
push
adc
sbb
push
arpl
xchg
push
lods
lahf
bound
or
mov
shlb
push
mov
scas
sbb
aad
mov
fs
fldl2e
or
outsl
rclb
lret
cmc
cmp
les
xchg
call
in
pop
inc
cwtl
jg
or
pop
and
aam
stc
xchg
lods
dec
push
iret
movsl
movsb
in
mov
add
faddl
in
mov
or
fnstcw
lock
xor
movsl
push
jg
xlat
sub
cmpsb
rol
repz
push
lcall
dec
aas
icebp
enter
or
and
std
or
lods
sub
ljmp
add
adc
sub
call
jg
mov
jg
movsb
mov
push
imul
push
mov
and
xor
or
or
cmp
mov
mov
push
mov
add
sub
nop
pop
mov
mov
pushf
push
xchg
in
into
dec
sti
push
je
push
and
popf
sbb
add
ret
divl
outsb
lret
mov
or
andb
pop
dec
loope
outsb
push
push
adc
jmp
sbb
je
aas
leave
fldcw
popf
ret
and
leave
cmp
or
jecxz
test
in
fsubrl
mov
dec
jne
mov
push
xchg
inc
sbb
jg
jne
sbb
pop
sbb
sub
mov
testb
mov
bnd
xchg
inc
cmp
inc
jge
add
repz
popf
push
dec
inc
sub
negl
push
hlt
dec
jecxz
add
sahf
cmp
mov
jp
ja
es
cmp
lods
cmp
adc
jo
aam
mov
sbb
scas
cmpsl
cmp
add
sarb
mov
ds
addb
out
jne
aam
cs
jns
push
int3
movl
adc
scas
xchg
jg
arpl
enter
inc
mov
mov
xchg
jae
adc
sub
pop
cld
mov
arpl
cmp
fidivrs
inc
mov
cmpsl
or
and
xchg
or
mov
add
int
int3
jmp
bound
cmp
sub
stos
pop
or
add
dec
jnp
add
lds
push
sbbb
xchg
and
dec
mov
add
dec
xor
lods
lcall
cmp
cmpsb
test
add
push
and
pop
xchg
in
mov
mov
lcall
js
cli
dec
into
mov
stos
xlat
test
or
inc
push
pop
xchg
fmul
push
and
cmpl
out
push
mov
push
add
test
add
mov
dec
dec
mov
pop
pusha
loop
popl
insl
fs
pop
lret
rorl
out
adc
fwait
or
dec
xor
lcall
jno
xor
subb
fstpl
clc
add
ss
mov
jbe
cmp
arpl
clc
jp
lahf
adc
movsb
or
and
in
mov
je
imul
jo
mov
mov
push
pop
push
mov
aaa
pop
mov
int
in
test
lds
jae
dec
or
mov
jp
inc
cmp
push
nop
cmpsb
imul
add
inc
inc
adc
cs
mov
cld
jno
loop
sahf
out
pop
add
lock
push
iret
cli
outsl
rclb
rclb
xor
scas
cs
push
adc
inc
xor
jbe
mov
mov
mov
dec
sahf
and
inc
add
pop
movsl
sti
jb
data16
xchg
lods
push
fbld
xchg
sahf
loope
rcrb
loope
addr16
testb
xchg
scas
sahf
add
sbb
jbe
mov
push
jo
inc
push
push
xor
mov
test
daa
adc
pop
fdivrs
sub
aas
jne
adc
mov
movsl
xchg
jecxz
mov
push
cltd
pusha
pop
xchg
xor
in
xor
sbb
mov
test
imul
push
test
rcrb
mov
jmp
in
cli
popa
or
pop
out
lret
data16
or
idiv
js
inc
mov
outsb
push
in
pop
nop
fwait
lods
jnp
or
loopne
repz
movsl
div
sti
ffreep
jg
ja
jo
pop
push
js
stc
sbb
leave
mov
call
mov
js
sub
test
sub
in
mov
xchg
inc
call
repz
std
sbb
aad
and
jmp
sarl
fidivrl
dec
xor
push
es
rorl
fwait
sbb
push
mov
and
shlb
push
or
in
cmp
insb
scas
lods
mov
jle
cwtl
mov
outsb
xchg
nop
cmc
jae
or
mov
bswap
pop
xor
cmpb
push
sub
clc
add
sub
mov
sub
shll
rcrb
and
and
pop
in
push
nop
jg
mov
stc
or
sbb
add
call
push
lea
pextrw
insl
pop
jnp
inc
dec
xchg
iret
mov
mov
loopne
fimull
mov
xor
rorb
out
fildl
jns
stc
scas
sbb
xor
stos
lret
sub
mov
and
xor
in
mov
dec
setae
fidivs
mov
inc
lods
jge
push
les
ss
adc
popf
pop
push
mov
jle
stc
mov
data16
inc
lahf
in
mov
mov
sbbb
and
iret
inc
mov
push
pushf
aad
nop
mov
jge
mov
stc
sbb
fwait
xorb
xor
pop
test
mov
ret
push
aaa
mov
es
or
cmp
jge
test
imul
sub
pushf
out
dec
fs
fidivl
add
mov
mov
sub
lock
movsb
jl
push
aas
mov
mov
push
jno
sbb
dec
mov
sbb
cmp
jg
addr16
dec
adc
pop
std
popl
sbb
out
xor
aad
sar
xlat
insl
jnp
loope
add
pop
jo
scas
mov
push
xor
sbb
les
push
xchg
test
movsl
aaa
add
daa
lret
enter
mov
lret
jne
cmp
hlt
cmpsb
shlb
or
out
jae
jl
rorl
jecxz
sbb
push
mov
les
repz
sbb
push
inc
adc
cmc
sub
xchg
fstpt
mov
lds
mov
pop
sbb
loop
jecxz
ljmp
shrl
rorl
int3
jge
add
jp
mov
arpl
jbe
jg
ret
pop
into
jp
addb
fwait
push
sti
adc
mov
inc
fsubl
fildl
and
push
xchg
nop
sbb
sahf
in
je
cmp
mov
adc
hlt
ljmp
inc
xor
cwtl
or
rorl
dec
dec
xchg
inc
or
fdivrs
out
xor
add
push
loop
dec
fdivl
or
shlb
gs
stos
and
jno
xchg
jl
push
fs
int
out
jns
cmp
mov
add
add
jecxz
or
sbb
pop
inc
pop
pop
inc
jns
in
push
std
adc
aam
inc
shll
add
cmp
push
adc
lods
dec
mov
mov
nop
faddl
movsb
mov
dec
in
mov
dec
cmp
jle
iret
cli
icebp
pop
mov
dec
sbb
mov
cmp
fbstp
mov
and
mov
movl
jl
mov
fnstenv
lock
jne
adc
push
enter
xor
pop
out
aad
jae
or
mov
jns
cmp
pop
in
test
out
lret
rorl
and
or
ds
loop
lret
enter
popa
fcomi
cmc
lods
data16
cli
lret
dec
or
push
outsl
mov
or
add
insb
fwait
dec
nop
mov
cwtl
orb
mov
cs
cmpsl
jg
inc
add
jecxz
dec
sub
inc
ja
xchg
test
jne
mull
gs
add
add
xor
or
push
repz
call
and
icebp
sar
gs
jne
shll
xchg
mov
cmp
nop
fwait
dec
fmuls
dec
cmc
in
cltd
scas
shll
gs
jg
inc
insl
imul
add
inc
stc
sbb
sub
lahf
and
inc
add
leave
mov
std
fdivr
jmp
dec
ja
cmp
cltd
int3
aam
xchg
addr16
jnp
mov
add
loope
insl
add
aad
movsb
add
in
cwtl
pop
xchg
fisubs
stos
pop
mov
jb
cmp
sbb
mov
inc
out
pushf
and
das
sbb
jns
and
bnd
hlt
pop
push
push
movsb
mov
loope
ja
xor
push
test
jns
jns
out
lahf
out
ret
repz
sub
divb
jge
in
outsb
mov
jae
test
adc
insl
adc
or
cmp
xor
test
cli
and
jg
pop
push
inc
jbe
ljmp
xchg
mov
outsl
push
or
out
cmp
aas
test
ja
inc
push
stc
dec
test
mov
push
pop
outsl
shl
jne
mov
pop
adc
push
cmp
and
inc
pop
es
outsl
inc
cmpsb
xchg
mov
xchg
xor
adc
inc
mov
into
xor
push
movsb
add
and
lds
call
jmp
lret
mov
sbb
mov
jns
push
test
test
ljmp
xchg
fs
or
cmpl
cmp
pop
xor
inc
sbb
xchg
pop
fwait
mov
pop
mov
or
es
insb
int
mov
sub
es
add
or
insb
cmpsb
lcall
in
pop
cli
lds
loope
push
push
mov
cmp
lahf
and
test
sbb
popf
cmc
arpl
jbe
jo
repnz
dec
jl
pop
movsl
pop
shl
rcl
adc
imull
cld
out
add
mov
xor
fld1
sbb
mov
das
ss
jl
rorb
fdivp
insl
frstor
or
inc
movsb
xchg
xlat
lret
jmp
or
jo
and
mov
repnz
mov
fbld
ret
addl
ljmp
js
dec
fwait
dec
sub
clc
shrb
cwtl
sbb
dec
cmpsl
add
popa
mov
xor
in
scas
out
xor
ja
fs
test
pop
adc
jp
clc
push
add
and
lcall
stos
sbb
scas
pop
mov
jns
sbb
xchg
repz
push
ljmp
out
cli
iret
les
xor
jo
inc
mov
jnp
inc
mov
jae
test
repnz
cmpsl
stos
pop
outsb
jbe
fsubs
fimull
mov
push
and
pop
add
and
pop
je
test
xor
jmp
ret
xchg
push
popf
loop
sbb
in
mov
lods
sub
adc
jns
push
adc
enter
pop
jnp
icebp
hlt
aad
add
cmpsb
mov
data16
iret
clc
push
mov
mov
dec
sub
xchg
je
push
xchg
jmp
pusha
pop
cli
cli
lahf
push
jmp
sti
lret
xchg
aaa
loope
pop
xor
jne
in
add
mov
cmp
pop
sbbl
mov
cld
sbb
movsl
push
sub
mov
xchg
rcrl
add
stos
addb
pop
pop
shlb
jno
out
mov
stos
sub
wbinvd
lcall
leave
cmc
arpl
insl
cmpsl
in
mov
jae
mov
mov
repz
mov
mov
addr16
sub
push
scas
mov
jl
aad
mov
and
fmul
cmp
adc
push
or
and
gs
adc
out
push
dec
xchg
das
fstpt
sub
sbb
stos
arpl
add
mov
repz
pop
pop
pop
cli
cld
push
xlat
jb
and
xorl
ret
jg
push
fidivrl
leave
pop
sbb
shll
out
ret
dec
jl
shlb
ljmp
data16
sub
jecxz
add
lcall
sbb
in
out
lea
out
pop
std
std
lds
inc
mov
jae
rorl
lock
xor
in
inc
and
icebp
int
dec
pushf
lds
int
cwtl
fxch
insl
xchg
push
add
cmpsl
cmp
leave
test
loope
or
in
daa
mov
addr16
cltd
sbb
push
mov
insb
dec
adc
push
mov
add
shl
stos
aas
repnz
inc
pop
mov
repnz
dec
inc
scas
xchg
push
hlt
add
sbb
fs
out
lods
inc
sbb
test
std
pop
testb
ret
aas
dec
xor
and
add
xchg
aas
dec
push
add
push
iret
push
stos
rcrl
out
lcall
aam
fbstp
dec
in
arpl
pop
cmp
cli
fldt
xlat
xchg
push
adc
or
inc
test
ljmp
inc
jle
and
jo
cmc
add
sbb
sub
sti
and
ljmp
mov
xchg
cwtl
fstpt
push
inc
clc
pop
cmp
in
fadd
inc
es
jb
aaa
pop
dec
or
movsl
pushf
out
mov
std
fs
pop
xlat
pushf
adc
xchg
movb
stos
add
cmp
cld
iret
or
fisubrl
jl
sarl
rorb
inc
mov
iret
pop
loop
pop
repz
mov
clc
pop
aaa
jmp
jb
in
out
cs
sub
mov
das
lock
shr
dec
lahf
addr16
pop
add
pusha
cld
cwtl
leave
lret
cltd
cmc
jmp
xchg
or
add
mov
fadds
and
sub
xchg
movsl
mov
bound
js
cmp
fnsave
xchg
cmp
ss
loopne
gs
xchg
mov
shl
pop
out
repz
adc
sarb
stc
mov
add
outsl
sbb
pop
lods
pop
push
push
push
stc
fdivrl
inc
or
jecxz
push
inc
fwait
loopne
inc
xor
lret
andb
out
push
or
mov
inc
in
cmp
rcll
mov
mov
pusha
jmp
pop
js
jp
adc
pushf
movsb
cmpl
ss
imul
out
aaa
notl
aam
sbb
inc
and
leave
push
movsl
jb
out
pop
addb
pop
lea
cmp
ret
inc
jb
lock
mov
mov
push
mov
out
inc
daa
dec
mov
inc
dec
dec
jo
nop
scas
add
dec
inc
int3
std
lcall
cmc
jae
mov
hlt
dec
imul
sub
sbb
fisttpll
es
addr16
mov
lret
xor
es
and
ret
lcall
jb
roll
mov
add
je
stos
loope
adc
jle
test
ret
and
cwtl
jne
ljmp
cld
dec
out
mov
or
jb
pop
ret
aad
add
out
dec
adc
inc
xchg
adc
in
inc
pop
adc
xor
stc
cmpsb
dec
orb
sub
das
sahf
ss
div
pusha
push
mov
into
out
dec
sub
push
jmp
push
out
dec
jne
mov
icebp
cli
mov
add
push
mov
jo
pop
and
push
jbe
lods
imull
cmp
roll
iret
rcr
xchg
add
clc
or
mov
lods
and
or
add
dec
je
ficoml
pop
mov
xchg
sub
js
jle
mov
cwtl
pop
dec
add
pop
aaa
ljmp
jecxz
mov
cwtl
popf
fs
test
or
push
pop
xor
xchg
xor
cld
mov
cmp
inc
push
nop
outsl
aad
fld
and
add
mov
push
test
dec
mov
add
mov
iret
jno
data16
cmp
adc
jne
inc
mov
mov
jle
testb
cld
sub
out
std
call
mov
iret
xor
out
sbb
ljmp
stos
xor
add
int
mov
mov
fcmovnb
or
push
sub
dec
cmc
jle
pop
call
sub
jmp
adc
inc
lcall
xlat
pop
daa
add
into
popf
mov
pusha
sbb
mov
lret
inc
adc
aam
xlat
mov
xor
xchg
pop
iret
mov
cwtl
lahf
enter
inc
mov
mov
fsubrs
xchg
in
pop
nop
mov
push
sub
adc
cmp
in
add
xlat
fwait
sub
push
sub
cwtl
int
cwtl
inc
sbb
pop
inc
pop
hlt
sub
pop
sub
mov
sub
pop
jge
js
call
lock
repnz
popf
mov
mov
fsubl
xor
or
sbb
arpl
mov
repnz
call
arpl
cmpsb
inc
and
dec
xchg
sbb
push
lods
pop
bound
dec
mov
fiadds
orl
lahf
notl
aaa
xchg
add
mov
dec
mov
rolb
in
les
outsb
sub
cli
out
scas
addb
mov
loop
sbb
mov
gs
lret
pop
push
xchg
enter
out
push
dec
adc
outsl
or
xor
lds
xchg
stos
add
bound
popa
inc
mov
out
aad
and
mov
or
mov
add
adc
ds
jecxz
jecxz
dec
insb
sbb
les
imul
push
in
xor
rcr
icebp
or
and
mov
out
lret
fistps
jp
and
add
test
sahf
xor
push
and
mov
push
in
rol
xchg
xchg
dec
adc
and
nop
push
push
ds
loopne
dec
or
fisubrs
xchg
fucomi
mov
jne
push
xchg
push
fldenv
insb
dec
and
div
ret
mov
fiadds
pop
push
push
mov
in
out
xchg
insl
imul
mov
jns
and
and
addr16
jl
test
mov
add
les
adc
out
cmp
xchg
jge
bound
outsb
push
test
ficoml
xor
in
pop
into
or
sub
cmpsl
mov
xor
iret
sbb
in
lea
sbb
inc
and
popa
cld
mov
div
jmp
bound
pop
push
in
lret
in
mov
inc
jp
push
das
leave
aam
xchg
rorb
outsl
out
popa
cs
or
or
std
pop
adc
and
shlb
loopne
push
mov
fists
or
mov
and
es
fsubs
push
xor
or
mov
std
mov
cmp
bound
and
sbb
shr
popf
push
dec
xor
and
stc
add
stc
lcall
sbb
add
cmp
adc
push
gs
jb
outsl
dec
rol
shlb
out
jg
in
or
stos
mov
mov
mov
iret
cmpsl
arpl
and
idivl
mov
jo
lret
pop
jmp
and
std
jl
adc
rcll
lcall
jo,pn
fwait
movsb
stc
mov
dec
js
repz
pusha
test
repnz
push
cmp
lods
fidivl
or
fs
outsb
sub
insl
push
insb
repnz
sbb
lret
cwtl
psubq
sbb
ss
xchg
push
aam
pop
stc
xchg
xor
or
sub
divb
fsubr
push
xchg
jb
and
pushf
jae
lret
dec
mov
mov
js
xor
inc
in
fcmovbe
sbb
cmpsb
bound
ljmp
pop
adc
fwait
loop
cld
push
inc
data16
mov
dec
data16
into
cmp
adc
jnp
sbb
ljmp
mov
outsb
xor
les
insb
jecxz
shrl
shrb
ja
ret
fnstsw
out
sti
imul
subps
push
insl
insl
ffree
xchg
imul
stos
clc
xchg
test
lret
sub
mov
mov
cwtl
cmp
and
xchg
ds
movsb
xorb
pop
push
fwait
lahf
enter
dec
and
loopne
ds
xlat
sub
add
int
mov
and
test
add
jmp
mov
rcrb
sti
cmpsb
push
imul
mov
bound
mov
and
mov
cltd
xchg
pop
daa
pushf
cmp
imul
dec
shll
clc
std
jbe
jp
pop
adcl
jae
cmc
insl
sbb
and
cli
pop
std
ret
ja
mov
dec
sub
cmp
cmp
mov
call
sub
and
lds
sub
out
add
jl
push
in
jg
incl
push
stos
test
xlat
out
rcrb
daa
test
cld
mov
mov
rcll
rorl
sbb
jnp
or
scas
pop
ret
add
lds
adc
unpcklps
or
xchg
push
push
xor
mov
aam
lret
adcl
cmp
lods
jbe
dec
mov
add
push
cmpsb
mov
es
insb
pop
cmc
in
or
jmp
loope
sbb
push
fcoml
mov
jmp
daa
inc
frstor
adc
pusha
push
dec
push
pusha
sti
sub
aaa
adc
test
sub
and
js
xor
call
xchg
xchg
sub
leave
ljmp
popa
lret
add
adc
fisttps
sti
gs
inc
push
daa
sbb
scas
push
and
mov
cld
and
imul
hlt
hlt
fcomi
pop
andb
mov
addr16
adc
mul
push
and
enter
cmp
into
inc
pop
xor
mov
lods
pop
dec
pop
push
mov
mov
loopne
xor
mov
test
inc
out
popf
or
cmp
dec
add
mov
sub
sbb
icebp
addr16
mov
mov
loopne
xchg
jle
xor
add
xor
mulb
flds
in
xchg
jae
lahf
pop
jp
and
in
jl
fcom
repnz
fistpl
cs
repz
stc
arpl
es
or
repz
xchg
inc
cmp
test
dec
stos
sarb
mov
mov
mov
mov
je
hlt
push
pusha
loopne
std
scas
push
jge
fs
xchg
aam
push
lds
sub
in
fs
pop
xchg
cs
jmp
sbb
mov
pushf
add
fs
mov
lock
mov
lret
lahf
sub
and
xchg
in
push
icebp
pop
movsl
fsts
add
ret
and
test
test
and
push
data16
insl
sub
xchg
mov
push
stc
add
mov
pushf
fwait
sbb
ret
sahf
test
mov
or
in
stc
ja
fiaddl
popl
jg
enter
iret
test
push
sbb
stc
es
inc
sub
mov
pushf
lods
aaa
and
fldl
push
jecxz
mov
add
sbb
sub
in
sbb
jmp
fisubl
jg
cmpsb
cmpsl
jne,pt
or
sbb
mov
aam
cmpsl
rcll
ja
xchg
or
jmp
adc
xor
pop
jecxz
and
mov
mov
out
lock
int3
push
mov
js
add
shll
mov
rcrl
sub
lods
add
jge
or
lods
lods
ret
lcall
or
cmp
pop
sub
out
xchg
lahf
lret
mov
or
fadds
rclb
xchg
jnp
ljmp
imul
pop
jg
push
sub
or
push
pop
test
nop
fmull
xchg
outsb
ret
or
inc
mov
push
ds
pop
aaa
in
push
sub
int
jbe
jecxz
jg
mov
mov
push
fidivs
mov
les
lcall
out
pop
xchg
jp
mov
cmpsl
mov
dec
sub
icebp
fistpl
fstpt
xor
cmp
das
ss
fcmove
xchg
jmp
jge
cmpsl
scas
adc
sti
into
xor
inc
popa
movsb
sbb
cwtl
shrl
shlw
inc
adc
sbb
pop
decl
lahf
bound
inc
mov
xchg
jnp
fcoms
mov
add
and
xchg
aam
and
xorl
leavew
push
cmp
loop
movsl
in
xor
dec
and
sarl
shll
pop
cmp
jo
pop
jge
mov
mov
loope
dec
pop
cmp
sub
mov
das
jle
adc
outsl
jl
ret
mov
push
scas
mov
pop
aad
sbb
jo
pop
jmp
adc
xor
dec
outsl
add
outsl
mov
cmp
leave
cli
mov
mov
mov
mov
mov
pop
xchg
xchg
xor
sub
leave
sbb
sarl
out
sbb
imul
fs
mov
mov
imul
add
test
xchg
xchg
ss
sbb
jno
jmp
shlb
lods
mov
rcrb
enter
loop
test
adc
mov
rcll
lock
rcrl
shll
lock
ds
mov
jl
jno
mov
mov
mov
and
sub
pushw
outsb
mov
push
xlat
test
jne
hlt
loop
les
adc
mov
jno
xor
aad
adc
dec
insl
push
xchg
adc
inc
jae
mov
jle
or
roll
hlt
pop
lcall
loopne
push
subb
mov
jge
pop
push
rcl
test
mov
mov
mov
movsl
pusha
les
aas
in
add
mov
dec
mov
leave
bound
pop
inc
pop
push
jmp
push
cmp
or
mov
sub
call
cmp
jp
jp
mov
stos
mov
sahf
mov
rol
cwtl
sub
sub
xor
cwtl
scas
push
adc
jge
cmpsb
adc
mov
push
jp
push
sub
pop
out
inc
sbb
pop
mov
arpl
lock
pop
add
or
out
add
in
into
mov
data16
pop
out
decl
arpl
sub
dec
rcrl
lahf
xor
pop
pop
arpl
sbb
fwait
stos
jne
lock
inc
rclb
push
lds
sub
pop
dec
mov
repnz
stos
ret
pop
add
or
xor
xor
scas
or
arpl
leave
sbb
insb
bound
and
jge
int
loopne
arpl
inc
fs
pop
bound
and
or
push
jmp
xchg
or
pop
je
loopne
xchg
xchg
arpl
rolb
sub
xlat
mov
data16
inc
push
in
jg
push
push
add
xor
dec
icebp
pop
flds
sbb
add
or
add
ss
mov
clc
push
ds
xchg
mov
loope
sti
adc
enter
push
inc
sti
mov
imul
stc
sub
pop
dec
mov
jmp
das
frstor
in
into
cmpl
xor
mov
mov
bound
int
fwait
stos
bound
xchg
add
pop
or
cmpsl
cmc
aam
sbb
or
xor
outsl
hlt
push
test
or
xchg
cmp
cmp
cld
adcl
in
fs
dec
sbb
xchg
adc
mov
and
xor
subl
nop
push
pop
dec
mov
sub
stos
sbb
sbbl
dec
inc
dec
fiadds
xchg
fnstenv
js
jns
imul
jl
mov
pop
stos
lea
jg
shlb
push
dec
cmp
scas
sub
pop
mov
sub
ss
adc
pop
push
daa
pusha
icebp
push
mov
add
ss
sbbl
hlt
aas
sti
dec
xlat
ret
xor
xor
pop
mov
or
ds
in
cmc
mov
inc
push
mov
xor
std
xchg
cmp
sahf
andl
cmp
pop
loope
cltd
lcall
adc
movsb
test
sahf
sbb
sub
imul
sahf
mov
jl
cmp
and
pop
and
popf
sbb
cmpsl
mov
adc
addr16
push
add
sahf
mov
adc
dec
lods
and
dec
lea
and
xor
xchg
pop
cmc
sub
lret
sbb
pop
xchg
mov
dec
xchg
test
insl
push
jl
jb
insl
scas
cld
fldt
cli
cmp
jl
out
mov
inc
push
mov
or
lcall
inc
fidivrl
loop
test
fsub
pop
jle
add
sarl
mov
std
or
nop
testl
sub
sbb
push
addr16
imul
inc
inc
je
fcomps
pop
sahf
add
dec
add
lock
pop
push
xchg
push
mov
sbbb
and
mov
insl
outsb
xchg
and
fidivrl
mov
or
adc
jbe
add
push
push
sub
pop
std
xchg
pushf
push
mov
or
pop
movsl
mov
cmc
and
movsb
dec
addr16
dec
pop
or
loop
push
pop
push
divl
arpl
cmpsl
sub
lahf
bound
add
iret
cmp
push
sahf
jmp
scas
out
ret
das
cli
mov
pop
test
xchg
mov
adc
lahf
xchg
test
xor
jecxz
cmpsb
ret
mov
sti
add
xchg
xlat
cltd
rolb
pop
xor
lea
fcoms
mov
jg
mov
mov
xchg
xor
cwtl
popf
inc
push
adc
cmp
pushf
push
jns
add
lods
pop
test
aad
or
mov
or
and
and
push
mov
cld
movsl
scas
or
and
mov
fdiv
int3
add
into
roll
in
jns
loope
adc
cmp
data16
out
das
data16
pop
sub
cmp
aaa
jb
lds
sub
fcomip
mov
arpl
popa
mov
faddl
imul
mov
mov
arpl
pop
sahf
rcr
and
into
dec
xchg
outsl
xor
inc
mov
hlt
sub
gs
jge
sbb
je
pop
jne
adc
jle
pop
rcl
int3
or
lds
sbb
test
cmp
adc
jp
fs
pushf
or
jbe
rcrl
cmpsl
jecxz
cmp
ja
mov
iret
scas
cmp
cmp
jnp
aad
fwait
addl
pusha
pop
insl
xor
adc
inc
mov
hlt
in
adc
pop
lds
rol
cld
or
gs
std
dec
jmp
stc
add
mov
jmp
scas
fcomps
pop
sub
jae
out
fidivs
arpl
mov
adc
inc
dec
mov
xchg
and
insl
and
fldcw
sub
adc
inc
movsb
neg
add
adc
scas
popf
add
and
xchg
and
jge
pop
adc
in
sub
dec
jecxz
xorb
jmp
outsl
mov
outsb
in
push
pop
adc
sub
add
xor
mov
sarb
mov
ret
sub
push
inc
test
pusha
pop
fwait
cld
dec
pop
dec
xor
loope
pop
add
cli
outsl
mov
cld
xchg
ret
xchg
repz
aaa
pop
and
xchg
sbb
fdivs
enter
mov
jb
aaa
in
rcr
js
les
stos
add
jb
mov
dec
xchg
cld
dec
and
int3
cltd
rcll
xor
push
add
inc
pop
clc
mov
and
dec
mov
adc
sub
inc
mov
add
hlt
cmp
loop
rcrl
lods
jae
fnstenv
arpl
pop
rolb
sub
popf
loop
loope
es
inc
lock
pop
stos
dec
gs
cmp
insb
add
test
sub
fwait
pusha
xchg
jae
inc
pop
out
and
dec
xor
test
xor
enter
lret
mov
mov
popa
data16
xorl
jle
jb
mov
jge
loope
add
enter
daa
ljmp
mov
aaa
xor
leave
add
outsb
mov
sbb
or
pop
cli
lea
mov
inc
sub
repnz
dec
push
js
pop
in
xchg
addr16
pop
aad
xlat
in
and
jle
inc
stos
and
scas
push
push
fldt
cmc
push
jns
mov
popa
stc
or
imul
dec
xlat
arpl
mov
mov
and
dec
fs
fwait
xchg
in
pop
push
shlb
popf
ret
add
mov
cli
rcl
or
xor
ror
lahf
sub
fiaddl
rolb
or
dec
hlt
mov
cmc
ret
pop
ret
pusha
rcrl
xor
fisubs
bound
lea
cmpsl
sbb
mov
into
cmp
mov
jl
mov
loope
leave
loopew
mov
je
mov
cltd
repz
push
or
pop
inc
wbinvd
cmp
push
cmc
push
ja
or
and
jno
mov
xor
add
nop
or
movsb
mov
subl
add
out
mov
mov
mov
idivl
lds
call
dec
or
inc
inc
pop
jae
or
pop
or
sar
loopne
je
fwait
xor
imul
mov
aas
jmp
add
jge
mov
or
adc
dec
sahf
and
loopne
in
pop
xor
jle
jns
adc
xor
mov
les
adc
scas
in
xchg
pushf
lock
pop
pop
imul
dec
addr16
mov
call
sub
jnp
add
and
fidivl
cmpsb
pop
mov
jecxz
push
mov
arpl
add
loop
mov
xchg
xor
nop
lods
enter
stc
lret
push
lock
pop
nop
arpl
jb
jg
and
dec
push
push
fwait
clc
mov
pop
jo
in
dec
mov
mov
inc
xchg
and
push
popa
push
xchg
sub
sub
test
jg
test
enter
ficompl
movsb
dec
loopne
jmp
rclb
mov
and
mov
sbb
scas
add
mov
jmp
adc
or
dec
push
pop
shll
cmc
aaa
mov
nop
fildl
xor
inc
lds
mov
and
xor
add
xchg
inc
aam
fcomps
es
dec
pop
push
jns
adc
jl
jb
push
lret
fs
std
xchg
lret
outsl
sub
xchg
mov
andb
push
andl
sti
pop
mov
cli
std
pop
and
fisubl
out
lods
into
fxch
shll
ret
outsb
insb
lret
jb
adc
cmp
add
cmp
pushf
hlt
clc
js
outsl
inc
mov
jl
jb
jge
ja
loopne
in
dec
dec
mov
dec
popl
adc
mov
cwtl
or
jl
mov
fnstenv
and
or
dec
shr
sbb
mov
jle
mov
push
sbb
push
shr
jp
jns
ffree
add
stos
sub
popf
cld
pop
rorb
lods
insl
jle
addl
mov
push
jo
adc
cmp
sub
or
xchg
and
pushf
jns
and
adc
xchg
push
out
or
and
jmp
into
mov
mov
inc
inc
sub
repz
fwait
outsl
cmc
xchg
xchg
insb
imul
fidivs
movsb
popf
ja
jle
nop
jnp
adc
stc
jmp
mov
pop
sbb
inc
cmp
push
mov
and
cmc
push
push
mov
fcoms
out
scas
or
mov
xchg
add
movsl
ret
and
fsubrs
sti
jae
xor
push
je
xchg
xchg
adc
push
pop
mov
sub
sub
or
iret
sub
stos
js
dec
fsubrl
rclb
fwait
loop
fcompl
jnp
call
cmpsl
lea
fstpt
addb
gs
xchg
inc
cld
jmp
jns
pop
add
setbe
inc
jle
push
ret
sti
adc
inc
cmp
repz
cmc
push
or
jecxz
push
into
mov
sbbb
adc
jmp
jle,pt
out
inc
icebp
or
in
jno
add
pop
in
mov
mov
mov
xchg
xor
dec
test
jnp
addr16
int3
or
shlb
mov
cmc
js
cmp
push
les
lods
test
adc
test
xor
and
mov
ret
aas
daa
aas
dec
test
xor
movsb
or
xchg
stc
push
sub
adc
jg
fcoms
xor
adc
pop
ja
xor
jp
jg
movsb
in
arpl
int3
js
fistpll
and
push
test
add
xchg
sbb
in
lahf
mov
sbb
mov
xor
sub
xchg
inc
rcrb
pop
rol
cmp
dec
mov
cmp
lret
pop
incb
jae
sti
fucomip
inc
fs
jbe
cwtl
fisubrs
push
sbb
ret
fsubp
cltd
and
cmpsb
add
popa
scas
inc
cmpsb
ss
or
cli
mov
jnp
fnstenv
jne
insl
mov
push
cltd
aad
fucomi
cld
insl
loope
cs
enter
stos
js,pt
cmp
sbb
xor
test
lret
pop
add
daa
inc
out
dec
sbb
jecxz
pop
cs
insb
in
push
xlat
inc
mov
sbb
cmpsl
xor
xor
add
mov
fidivs
xlat
mov
adc
add
push
mov
sarl
pusha
dec
fsubs
pop
out
sti
repz
jb
in
aad
xchg
and
mov
or
adc
add
lret
mov
scas
adc
leave
push
mov
xor
mov
mov
xor
sub
jle
or
inc
push
icebp
je
shl
xchg
fucom
mov
out
dec
cs
scas
lret
and
movsb
adc
outsl
cmc
xor
xor
mov
push
test
lds
dec
dec
xorl
movsb
popf
lret
cwtl
ss
jmp
push
xchg
sub
jo
ljmp
andl
xchg
pop
clc
gs
mov
lret
scas
lret
sub
subl
leave
dec
cli
cmp
ss
cs
sahf
imul
xor
stos
es
mov
stc
mov
rcr
jne
xchg
push
das
scas
ficoms
mov
enter
rolb
inc
adc
xor
dec
jns
out
cbtw
and
adc
divl
adc
fwait
std
std
xchg
push
xor
in
sub
push
mov
adc
scas
or
pop
fwait
mov
jne
mov
sti
lcall
xchg
dec
fistpll
shlb
add
mov
loopne
cmpsl
mov
lock
inc
or
cmpsb
xchg
adc
fs
mov
fidivl
bound
mov
fsubl
in
lcall
cld
push
pop
pop
ja
xchg
jno
notb
xor
out
arpl
cmc
and
cli
fistpll
pop
daa
jl
sbb
adc
das
cltd
movl
mov
add
jle
movsl
push
out
xchg
out
sbb
dec
mov
adc
dec
push
push
mov
ss
dec
jecxz
rcl
lret
push
cmc
dec
or
xchg
pusha
jb
leave
fisttpl
push
xchg
inc
pop
jp
sbb
pop
mov
stos
or
jle
roll
mov
mov
mov
fcmovbe
sub
cmc
sahf
lcall
cltd
aas
jbe
jno
or
int
jp
mov
loop
jne
sub
std
aaa
jnp
dec
push
sbb
arpl
add
mov
mov
ret
repz
leave
jo
mov
outsl
pop
jne
adc
push
jge
sarl
adc
cli
cmc
ret
pop
insl
repz
xor
jmp
fwait
adc
movq
pop
push
fildl
mov
cld
adc
jns
push
pop
mov
add
aad
call
aad
sub
inc
out
dec
scas
inc
in
shll
adc
mov
mov
fs
jecxz
xor
leave
mov
cmp
aaa
jae
xor
ss
jbe
xor
push
shl
pop
leave
sbb
jle
mov
dec
inc
out
xchg
mov
lods
push
lods
outsb
lea
push
or
xor
add
add
mov
pop
jge
and
mov
mov
negl
sbb
clc
adc
in
sub
das
inc
inc
mov
idiv
jl
jg
mov
lods
adc
cmp
stos
iret
lods
addr16
lock
adc
mov
clc
inc
mov
mov
mov
sahf
inc
addl
push
xor
rcll
movsl
cmp
out
mov
xor
lea
inc
jnp
fwait
xlat
push
xor
xchg
stos
sbb
repnz
sbb
cmp
jmp
loope
mov
add
movsl
mov
test
lahf
adc
je
jl
pop
xchg
imul
and
cmpsl
out
shl
mov
movsb
xor
test
push
mov
cmp
dec
xchg
test
fdivl
mov
cmc
mov
addr16
nop
inc
out
mov
loope
cmp
imul
mov
out
test
lret
dec
mov
dec
ds
dec
pop
push
mov
call
or
pop
call
lret
aad
dec
mov
in
mov
mov
mov
decl
sbb
jo
aad
push
sbb
add
imul
push
loopne
lock
jl
imul
mov
lock
out
jg
and
scas
mov
hlt
imul
sub
xor
jno
lret
decb
and
loopne
popa
mov
sub
les
aaa
mov
push
js
imul
ret
cltd
lret
sbb
mov
jg
push
mov
xlat
subl
mov
pop
mov
aas
lods
pop
push
sarb
add
lahf
out
or
shlb
xchg
insl
andl
fdivl
inc
outsl
mov
scas
adc
negl
jno
fnstcw
fistl
push
cmp
scas
and
or
daa
imul
popf
loope
add
mov
sbb
or
pop
in
int3
add
pusha
jecxz
dec
jns
push
jnp
nop
ret
dec
pop
jb
and
jo
mov
mov
push
insl
sar
inc
sub
dec
pop
repz
lahf
pop
cmc
add
mov
and
cs
arpl
out
lret
test
or
loopne
push
pop
enter
jl
out
sahf
mov
xchg
enter
pop
pop
sbb
out
in
push
jae
add
insl
push
pop
lret
dec
cmp
ljmp
pop
shlb
shlb
int
out
jp
in
adc
stos
das
cmp
pop
add
mov
mov
ret
in
clc
jbe
popf
sub
dec
ja
xor
jecxz
or
sbb
pushf
xor
dec
mov
daa
insl
loop
xchg
leave
push
cld
sub
cmp
jp
jl
sub
adc
push
push
add
rcl
jmp
lds
addr16
push
push
push
fcmovb
popa
lcall
pop
sub
std
xchg
call
xor
rcrb
shr
mov
jmp
cmc
das
int3
sbbl
movsl
scas
std
sub
std
int
fldl
lret
imul
dec
cli
inc
inc
fwait
and
ret
push
test
mov
rcrb
aad
fstl
jl
xchg
test
loopne
fwait
loope
adc
xchg
inc
pop
jbe
je
in
fistpll
mov
mov
stos
add
mov
mov
shll
in
pushf
out
push
rorb
pusha
out
add
push
sti
fadd
xor
jno
in
dec
cltd
push
rcrl
pop
mov
sbb
fcoml
or
mov
mov
sub
cmp
inc
popf
jecxz
push
mov
xchg
insl
in
adc
push
cwtl
xchg
dec
fnsave
addr16
in
and
inc
lret
jge
sahf
ret
add
lahf
mov
inc
clc
sarl
xor
aad
lahf
rcrb
lods
stos
push
sti
add
filds
xor
aad
les
mov
push
in
cmpsb
std
pop
out
sahf
in
hlt
pushf
xlat
loopne
insb
dec
xor
mov
sbb
ret
fsubrl
out
lock
testb
dec
mov
pop
popl
shll
or
lret
jmp
jge
gs
pop
lods
or
fsubl
mov
fldl
xchg
push
mov
mov
fs
jle
shll
xchg
test
jo
jmp
push
cwtl
xor
ds
sarb
divl
xor
add
mov
testb
clc
ret
inc
decl
sbb
fsts
sub
dec
push
jo
pop
shll
pop
or
mov
add
and
es
xor
xchg
hlt
inc
je
and
push
popf
xchg
sti
xchg
std
test
jle
and
mov
lock
popf
rcr
mov
or
or
ret
aaa
cmpsb
mov
adc
movsb
int3
adc
ljmp
aaa
out
sub
lcall
fistpl
sbb
xor
jno
mov
sub
mov
mov
mov
sbb
mov
lret
in
arpl
xchg
sti
jge
cwtl
xchg
outsl
xor
lds
mov
faddl
jecxz
popl
xor
imull
pop
ret
loop
in
sub
je
into
cmp
pop
inc
enter
cmp
jecxz
mov
cs
fldcw
pusha
in
pop
insl
lahf
mov
push
push
pop
cmpsb
inc
loope
sbb
sahf
sbb
scas
cmp
or
fimull
loope
fdivp
jmp
pop
outsb
adc
cwtl
dec
mov
jecxz
cmp
hlt
rcl
hlt
cmp
in
testb
inc
shlb
pop
jbe
inc
sub
movsb
cmp
mov
movsl
xor
push
shll
and
into
jmp
fwait
sarb
pop
sti
push
xor
fsub
out
popa
dec
out
dec
mov
outsl
mov
inc
test
inc
outsl
movb
les
lods
stc
mov
jecxz
in
mov
mov
add
push
fcomps
xchg
cld
mov
stos
mov
sbb
int
dec
xor
test
push
inc
or
mov
inc
ret
adc
loopne
or
test
jne
jg
dec
rolb
mov
and
mov
stc
jp
popa
cmc
xor
xchg
and
lret
rolb
imul
sti
or
mov
int
bound
inc
push
in
loop
arpl
movsl
cmp
dec
jae
cli
lock
jp
mov
push
in
lods
cmp
mov
in
aam
insb
sbb
cmp
iret
adc
lods
xor
add
nop
jns
push
ror
push
pop
pusha
push
mov
pop
pushf
inc
and
inc
add
xchg
pop
xor
cltd
pusha
pop
in
lods
ss
xor
imul
repz
mov
adc
test
divl
lcall
and
cmp
xorb
mov
pop
add
mov
fistpll
xor
mov
cld
stos
sub
shr
cld
cmpl
movsb
push
or
adc
lods
xchg
mov
das
mov
push
sbb
aas
mov
icebp
sub
xchg
out
aas
pop
sarl
mov
sbb
push
movsb
dec
cmp
inc
adc
pop
mov
fstpl
xchg
mov
fs
in
pop
cmovb
jge
in
jge
adc
adc
push
ja
test
stc
test
sub
sbb
call
addb
outsl
and
loopne
int3
icebp
dec
or
in
into
ret
mov
ljmp
rcr
jbe
mov
and
lahf
scas
cmp
adc
pop
dec
mov
or
mov
movsb
or
hlt
pop
lock
pop
adc
std
sbb
add
adc
add
adc
ds
lock
xchg
jo
sub
lret
inc
daa
sbb
fdivl
mov
cld
sti
loop
fmull
inc
shrl
sbb
les
inc
pop
push
pushf
and
je
adc
rorl
aad
out
inc
mov
dec
pop
pop
cmp
xor
pop
and
out
xchg
cmpsl
xor
jne
data16
cmp
lret
cmp
and
aad
addb
fnstsw
es
sti
pop
mov
mov
fst
gs
aaa
inc
push
xchg
xchg
rorb
shll
cmp
pop
push
adcl
add
out
xor
jne
lcall
jo
js
xchg
or
iret
inc
adcb
mov
pop
inc
mov
adc
pop
jnp
andb
ja
adc
mov
data16
push
test
inc
rcrb
cltd
sbb
inc
push
adc
es
adc
mov
xor
mov
push
iret
sbb
adc
pop
xchg
je
pop
sbb
icebp
xor
push
lock
outsb
push
xor
mov
int
add
push
jns
dec
into
mov
jne
add
adc
lds
inc
cmp
push
dec
sub
roll
mov
cmp
lea
sub
sahf
les
jg
xchg
xor
lahf
daa
idivl
fs
cli
imul
xor
pop
cli
inc
ss
sbb
xchg
leave
scas
rolb
ret
add
mov
pop
pop
insl
push
cwtl
into
nop
push
mov
leave
outsl
xchg
jg
insl
push
out
sbb
jge
imul
and
push
pushf
cli
jne
jo
adc
cltd
scas
and
ss
push
test
mov
xor
xchg
data16
adc
repz
stc
insl
addr16
ret
push
sbbl
jmp
mov
mov
or
inc
or
push
fidivl
rorb
xchg
cmp
out
sub
sahf
mov
in
hlt
sbb
sbb
in
adc
bound
jnp
mov
ret
in
mov
xchg
dec
aad
popf
mov
dec
lcall
xchg
adc
xlat
sbb
mov
lret
fs
insl
add
push
fadds
pusha
or
push
cmp
data16
pop
push
movsb
inc
les
inc
imul
icebp
test
push
jnp
cltd
insb
push
clc
outsl
mov
and
lret
inc
push
adc
fwait
dec
daa
or
pop
jl,pn
cld
mov
push
xor
shlb
push
in
pop
pop
cmp
fadd
xchg
cmp
cs
movntq
xchg
mov
dec
xchg
lcall
aad
lods
lcall
paddsb
dec
insl
adc
mov
xchg
arpl
xor
mov
addr16
pop
sahf
out
jae
sbb
jb
or
inc
hlt
xchg
mov
call
add
adc
in
sub
clc
fnstsw
mov
lods
aas
push
inc
lods
test
aam
pop
push
fs
cwtl
sbb
leave
cltd
popf
mov
mov
fbld
pop
mov
jae
mov
out
clc
mov
cmc
add
sbb
mov
adc
push
lcall
xchg
adc
xchg
push
push
adc
mov
push
fldl
mov
inc
pop
mov
das
pcmpgtb
pop
gs
int3
mov
clc
mov
dec
mov
and
jae
stos
mov
push
jno
cmpsl
cmpl
jge
loope
mov
push
scas
ljmp
sbb
sbb
pushf
sbb
push
sbb
add
jnp
mov
orl
cltd
loop
xor
sub
adc
mov
cli
cmp
mov
adc
lret
mov
lods
xchg
je
xchg
xor
movsb
incl
iret
mov
cld
cmp
ds
sub
mov
mov
popa
xchg
xor
jo
xor
mov
test
push
bndstx
ss
loope
xchg
sti
push
mov
shr
push
xor
popl
xchg
xor
lods
push
loope
mov
cmpsb
out
xlat
cmp
imul
mov
add
inc
test
int
sub
loop
cmpsl
dec
mov
pop
and
jp
lret
loop
es
jmp
mov
mov
imulb
and
insb
inc
xchg
das
mov
jg
sub
xlat
add
movsb
rcr
pusha
nop
cmp
push
inc
out
jbe
insb
or
leave
xchg
adc
cld
or
rcll
stos
jge
pop
lock
stc
jbe
sahf
sbb
cmpb
pop
test
jg
add
aas
sbb
pop
mov
bound
test
jnp
pop
push
mov
or
in
popf
sbb
pop
out
xor
pop
lret
stc
add
pop
out
lods
movsl
cltd
cmpsb
adc
pop
or
or
push
adc
ljmp
in
pop
dec
ss
cmpsl
mov
cmp
aaa
dec
mov
push
push
outsb
call
lea
and
outsl
and
ret
rcll
out
sbb
mov
jae
pushf
xchg
push
addr16
mov
mov
popa
xorb
inc
cmp
sub
test
outsl
scas
pop
jl
bswap
dec
outsl
mov
faddl
push
dec
mov
jo
ja
ja
sarb
dec
out
mov
push
sbb
mov
leave
mov
out
cmp
xor
sbb
dec
loopne
dec
bound
sbb
mov
dec
insl
stos
cmp
xchg
sbb
fs
lcall
stos
xchg
out
add
pop
shlb
push
jne
jl
lret
jl
cli
dec
mov
cmc
lock
sbb
cmp
add
xor
loop
jge
xchg
stc
jo
loopne
push
arpl
shrl
xor
mov
mov
daa
sbb
std
stc
loop
mov
push
sbb
push
into
cmp
jbe
rolb
ss
and
ljmp
cmp
jnp
inc
mov
or
jp
adc
movsb
mov
and
pop
out
sahf
rcrl
mov
addr16
out
cltd
ja
ret
lock
adc
enter
push
test
out
aas
dec
dec
cmp
inc
cmp
jae
lret
cld
fwait
lods
pusha
mov
clc
push
outsb
mov
inc
fnstcw
lretw
pop
add
gs
jo
xchg
mov
aam
xor
decb
push
and
orb
aas
and
lea
dec
lahf
sub
mov
shrl
xchg
sbbl
aad
mov
xor
loopne
sbb
iret
xchg
adc
pop
and
repz
pop
mov
andl
or
lds
sub
xorl
outsl
loope
repnz
pop
xorb
in
pop
add
dec
sbbl
mov
setle
cmp
in
dec
out
mull
mov
rolb
popf
sub
hlt
cmpsl
xchg
xchg
into
stos
mov
arpl
out
insl
fs
dec
sbb
in
in
add
pop
test
repnz
fsubrp
fsts
and
jl
in
pop
fdivl
sti
mov
aas
push
enter
pop
jmp
int
mov
lods
ja
sub
jbe
push
and
test
cld
push
push
dec
xorl
xchg
xlat
dec
imul
adc
and
repz
mov
sar
fdivrl
and
pushf
or
rorl
loopne
inc
roll
and
xchg
jns
into
push
popa
and
mov
and
jmp
pop
loopne
pop
push
fisubl
les
jo
cmp
aaa
jmp
fnstenv
jge
stos
stos
repz
xchg
mov
jno
inc
mov
test
negb
add
stos
aaa
lea
sub
jmp
add
or
inc
imul
out
movsw
in
inc
cmc
repz
mov
mov
out
xor
mov
mov
lods
mov
push
aad
sbb
int
aam
pop
fucomip
fldcw
sbb
lock
cld
xor
inc
daa
mov
push
out
scas
pop
push
cmp
les
cmpsb
mov
mov
mov
sub
inc
pop
sti
ds
adc
fucom
mov
xchg
dec
sub
push
mov
fsubl
movb
divl
push
aam
fldenv
je
adc
and
and
add
pop
aaa
mov
out
js
push
incl
pop
lcall
mov
sub
adcl
cmpsl
inc
and
jne
test
adc
xchg
cmp
mov
imul
rorl
jl
xchg
cmp
jbe
sub
les
dec
je
out
inc
ja
mov
add
negl
jo
mov
jno
lds
mov
dec
pusha
inc
sub
mov
lret
loope
jb
jecxz
sub
insb
and
nop
dec
and
push
mov
push
push
enter
dec
push
test
cmc
pop
jno
mov
sub
and
aam
mov
test
push
xor
leave
cmp
scas
push
nop
aaa
cld
or
xchg
hlt
movsl
jns
lcall
je
sub
mov
xchg
pop
adc
test
jo
pop
push
mov
aad
push
aad
mov
jmp
add
jae
jmp
mov
icebp
stos
scas
and
insl
in
scas
mov
mov
mov
lds
aas
sarb
push
cmp
in
xchg
sub
addr16
gs
lea
lods
jb
enter
mov
mov
icebp
mov
ret
mov
add
sbb
adcl
outsl
inc
mulb
ret
cmc
ds
add
sti
outsl
or
jbe
test
std
stos
mov
cmp
or
stos
cmpsb
mov
xor
les
push
dec
push
jb
lcall
ret
stc
xchg
lods
movsl
outsl
outsb
ficompl
xchg
ja
lds
iret
dec
fcmovu
dec
clc
inc
mov
sub
push
push
inc
bound
pop
lcall
std
pusha
push
sub
cmpsl
enter
imul
push
lds
or
pop
enter
fwait
in
mov
call
inc
out
fwait
in
sub
fisttpl
jmp
mov
loop
add
mov
or
jp
loope
pop
inc
lahf
andb
adc
mov
mov
adc
xor
es
push
inc
push
sbb
or
mov
jne
cmp
das
aaa
ljmp
jp
iret
xchg
aas
push
pushl
stos
repnz
fmuls
or
cmpsl
nopl
jbe
cmp
int3
aam
fsub
push
popf
pop
inc
loop
cmp
sub
lret
sbb
mov
in
cmp
pop
dec
fxch
js
dec
mov
cwtl
stos
sbb
cs
fstps
out
xchg
dec
xchg
jp
stc
lods
and
and
mov
insb
or
add
out
ret
xchg
bound
xor
out
stos
fwait
stc
mov
mov
dec
lock
out
adc
push
mov
js
jle
nop
inc
adc
mov
pop
mov
lcall
jmp
shrl
jae
ret
in
cmp
adc
lds
fnstcw
or
adc
or
push
les
add
loope
push
push
loopne
dec
xor
stc
sbb
jge
jp
pusha
cmp
xchg
adc
xor
in
dec
lret
lahf
mov
push
push
repnz
adcl
or
pushf
xlat
push
inc
cmpsl
daa
movsl
int
or
ror
add
push
push
sbb
ja
mov
loope
dec
mov
push
testb
lahf
test
pop
sbbl
push
setne
xchg
aad
push
insl
pop
or
xor
push
repz
jge
sbb
ror
addb
add
iret
sbb
mov
daa
adc
mov
add
mov
push
push
dec
inc
mov
mov
push
fwait
movsl
insb
sub
fs
inc
mov
push
push
mov
dec
add
in
dec
jo
mov
inc
pop
mov
int
aam
mov
es
push
data16
xor
sub
mov
pop
lea
push
testl
pop
bound
adc
fidivrl
mov
add
xor
fnstcw
ficomps
leave
push
rclb
fcmovbe
sub
jnp
pop
leave
mov
jle
cwtl
cmovle
in
mov
std
sbb
outsl
scas
push
pop
cli
jl
sti
movsb
cld
inc
cmp
out
in
sti
les
test
fistpll
and
cmp
mov
arpl
cmp
cltd
mulb
dec
fiadds
inc
adc
inc
mov
mov
in
jmp
repz
add
testb
fisubrs
push
and
inc
popf
stos
insl
xchg
fnsave
and
shll
aaa
push
outsl
mov
je
dec
pushf
and
cld
lods
sub
arpl
loope
inc
andl
sahf
ret
sub
and
push
inc
mov
push
fs
and
dec
repz
out
clc
in
cmp
mov
int
in
push
or
xor
cmp
push
add
inc
cmp
ret
push
lea
pop
mov
movsb
xchg
sbb
or
push
lcall
or
lods
dec
mov
les
dec
jmp
ficoml
xor
or
std
push
push
mov
cs
cld
and
mov
rorb
xchg
mov
mov
clc
mov
and
addr16
addl
outsl
test
pop
ret
mov
ret
aad
add
dec
dec
sahf
sbb
mov
adc
add
nop
arpl
fsubrs
jp
mov
mov
fstl
mov
inc
cmp
cmpsl
mov
push
dec
jae
movsb
ffree
xchg
jae
addl
push
mov
lods
pushf
push
fiaddl
pop
pop
int
cmpl
push
test
xlat
test
pop
in
lret
xchg
loop
push
dec
sub
jno
or
imul
enter
mov
jecxz
mov
pop
jg
cmpsl
pop
inc
pop
mov
int3
les
ja
add
mov
test
dec
lods
cmp
pop
lea
fdiv
sub
sub
lret
inc
inc
xor
and
inc
lods
xor
fisubrl
je
lcall
cmp
cld
pop
or
ljmp
aaa
jb
adc
xor
outsl
add
repz
nop
xor
mov
xor
dec
push
pop
mov
jecxz
enter
xchg
ds
test
mov
sub
push
aas
daa
jb
rcrl
sub
jae
pop
ds
bound
mov
or
mov
outsl
mov
mov
fwait
mov
outsl
cltd
aam
add
mov
push
and
iret
fld
aad
and
andl
gs
mov
aaa
outsl
inc
inc
xor
dec
pop
mov
ljmp
pushf
cmp
push
movsl
in
pop
stc
xchg
jp
mov
mov
in
insb
or
inc
push
enter
pushf
popa
mov
rol
push
clc
inc
mov
pop
mov
testl
xor
pop
das
cltd
mov
lea
push
xchg
jmp
out
dec
pop
fwait
pop
and
jg
add
inc
pop
cmp
lret
pop
fsubl
mov
lods
mov
popa
dec
je
rclb
or
lret
ret
fisttps
mov
mov
push
jecxz
inc
dec
fildll
shll
inc
sub
andb
repnz
xchg
test
sub
add
inc
inc
movsl
sub
scas
fbstp
cmp
aaa
xchg
shll
into
inc
inc
pop
pushf
fisttps
stos
addr16
push
addr16
pop
xor
or
movsl
in
arpl
mov
xchg
mov
fs
pop
clc
sub
aas
sbb
add
pop
lret
xchg
jmp
rol
sbb
arpl
ss
sarl
push
cmp
pop
movsb
popa
inc
ret
add
push
adc
sbb
les
ljmp
mov
fs
xchg
adc
mov
push
jno
cmove
scas
out
and
popa
cmp
push
fisttpll
adc
movsb
mov
xlat
dec
fucomi
sub
ja
xor
test
out
mov
dec
popf
hlt
cld
inc
inc
test
test
dec
rcrb
xchg
pop
push
cltd
push
dec
adc
cmp
adc
xchg
or
fisubl
aad
nop
and
inc
cmc
cmp
xchg
addr16
or
or
sub
or
int3
mov
add
out
or
mov
jnp
xchg
jge
int3
ret
cwtl
add
mov
mov
test
mov
cmp
or
pop
aaa
sbb
adc
pusha
xor
mov
xchg
and
sub
movb
mov
push
lods
in
mov
aaa
sbb
xchg
xchg
jp
clc
je
sbb
movsb
mov
out
ret
add
or
lock
ljmp
dec
in
in
loop
in
out
into
push
out
lock
fmulp
jae
mov
mov
pop
imul
mov
mov
cmp
imul
xchg
movsl
gs
mov
hlt
or
mov
movsb
mov
push
lea
adc
inc
lcall
aaa
pushf
imul
out
aas
push
inc
data16
xchg
outsb
xchg
pop
insb
mov
repnz
ds
cmp
shlb
fsubs
mov
and
es
inc
inc
jg
sbb
inc
iret
cmp
cmc
insl
adc
jbe
push
cmp
test
xchg
lcall
xchg
xor
das
cmpb
movsl
dec
jns
cmpsl
push
inc
ja
and
dec
add
out
xacquire
or
cld
movsb
mov
imul
decl
loop
lcall
and
test
inc
les
frstor
add
adc
sub
pop
cwtl
shrb
pop
out
xor
loop
test
sahf
pop
rcrl
stos
mull
jle
shll
xchg
es
or
cs
push
inc
subb
pop
cwtl
das
icebp
adc
rcll
ret
pop
xchg
int3
push
lret
lock
lock
xchg
dec
nop
lds
and
inc
jno
xchg
hlt
stos
pop
push
insl
cmpsl
stos
ss
and
xorl
mov
fildll
xchg
hlt
xor
adc
pop
or
aaa
mov
fiadds
pusha
mov
pop
cltd
pop
outsb
nop
and
mov
cltd
rcrb
cmp
data16
inc
jnp
pop
inc
into
dec
dec
mov
xchg
add
mov
adc
mov
loope
dec
fadds
insb
sub
push
sarb
mov
sub
jmp
push
dec
and
test
repz
divb
imul
xchg
mov
sbb
push
inc
mov
mov
filds
lret
mov
adc
inc
and
lcall
dec
rep
dec
sbb
icebp
mov
call
in
popf
or
dec
out
mov
dec
lea
push
push
or
cmp
sbb
mov
inc
jb
xor
sbb
test
and
push
sbb
insb
mov
inc
test
sub
popa
loope
add
cmp
dec
js
or
mov
jmp
orb
sti
inc
mov
lock
arpl
je
pop
add
lcall
mov
and
or
stos
outsl
daa
xchg
push
stos
adc
test
ja
jne
dec
fcmovbe
push
push
movsb
mov
pop
ret
inc
dec
jnp
push
adc
in
iret
aad
stc
ja
mov
fwait
imul
rol
sub
repz
dec
sti
push
mov
sarl
cmp
iret
jae
jecxz
adc
jmp
pop
sbb
aaa
dec
xchg
int
xchg
popa
outsb
add
frstor
pusha
inc
jmp
or
loope
mov
fidivrs
lcall
daa
xor
lods
das
or
movsb
ret
pop
jnp
sarl
ss
ljmp
mov
jge
aaa
lret
xchg
mov
push
sub
shrb
or
imul
cltd
mov
in
xchg
mov
xchg
mov
sub
dec
mov
rcrb
icebp
cmpb
sti
or
cmp
into
aad
sub
popf
jl
insl
stos
sub
jno
or
inc
adc
push
ljmp
out
mov
std
xor
aad
rcrl
js
jo
and
pop
push
cli
sbb
cmc
arpl
jno
imul
lds
mov
mov
pop
mov
or
jg
cmp
ss
jle
jl
out
in
mov
nop
mov
lods
push
call
test
dec
aaa
sbb
in
es
rclb
jns
repnz
mov
sbbb
sbbl
lods
pop
adc
cmp
pop
mov
fdivrl
shl
xor
adc
xchg
push
mov
inc
inc
cmpsb
fcmovne
sbb
sarb
mov
mov
cmpsb
xchg
push
loop
add
arpl
and
jg
inc
mov
lods
push
lahf
mov
mov
sti
sbb
sub
sbb
push
xor
pop
stos
in
cmp
or
pusha
mov
sub
out
jbe
or
or
add
movsl
cld
push
rcrb
push
pop
adc
push
pop
stc
std
sbb
ds
out
aaa
loope
xor
push
add
pop
mov
aad
shr
push
test
xor
fstpl
dec
mov
icebp
test
inc
outsb
pusha
sbb
clc
pop
dec
out
mov
lock
adc
add
addr16
add
arpl
inc
mov
fwait
insb
sub
cmpsl
lahf
test
scas
mov
add
out
adc
std
jmp
mov
cld
ret
es
lods
cmpsb
lahf
inc
in
lea
push
xchg
inc
jmp
imul
mov
inc
sub
loop
mov
push
stos
jg
and
push
jge
push
stc
jge
jnp
inc
sub
popf
test
push
cmp
insb
pusha
mov
or
xchg
shlb
xchg
sbb
inc
mov
xor
iret
xor
mov
adc
and
lds
xchg
cmpsl
or
xor
mov
sbbb
mov
rcl
leave
xchg
scas
cs
xchg
dec
fcompl
mov
out
ja
fcomip
jb
loop
into
movsl
in
xchg
adc
repnz
les
imull
loopne
je
or
inc
int
jl
popa
mov
pop
fsts
stc
push
ja
jnp
push
or
jl
pop
add
pop
pushf
push
lcall
add
pop
sbb
lret
popf
scas
mov
sub
xor
jecxz
hlt
mov
and
xchg
lcall
jp
movsb
loope
daa
push
iret
aas
xchg
test
dec
js
mov
sub
jmp
xchg
decb
inc
jmp
push
js
or
xchg
adcb
mov
push
and
js
push
mov
dec
lahf
inc
dec
aad
xchg
mov
or
mul
push
pop
test
addr16
xchg
mov
push
lret
adc
push
xor
add
nop
and
add
pop
sarl
or
icebp
xor
clc
mov
pop
cmp
and
xchg
std
std
repz
jle
into
or
in
xor
out
fdivs
xchg
nop
xchg
imul
cli
dec
stos
or
pusha
pop
outsl
jo
xlat
out
push
jnp
xor
movsl
sub
xlat
or
insb
adc
jnp
imull
pusha
movsb
and
mov
add
or
in
and
lods
push
mov
arpl
inc
outsb
into
jl
cmp
fldt
push
subb
pop
ror
pop
cmp
inc
js
push
pop
cs
es
dec
repz
ljmp
cwtl
fadd
mov
call
hlt
xor
inc
in
cwtl
fisubs
mov
mov
mov
or
and
mov
sub
stos
jmp
test
lods
xchg
and
sub
inc
xor
ljmp
mov
iret
inc
pop
test
or
pop
lods
sti
fucomp
inc
js
js
leave
call
mov
aad
pop
lods
jbe
in
outsl
repz
movlps
lret
imul
xor
sbb
push
scas
mov
dec
or
pop
inc
xchg
addl
or
ret
aad
inc
xchg
mov
lea
loop
and
aad
mov
inc
xor
push
pop
cmp
ret
sti
pop
xchg
js
cltd
pop
lret
dec
ds
pop
add
and
sbb
lods
xchg
ficoms
push
aas
and
imul
mov
mov
adc
pop
mov
outsl
notl
mov
xchg
imul
mov
or
andb
pop
cmp
cmc
cld
das
sub
aaa
push
xor
fidivl
mov
xor
mov
insb
bound
imul
pop
xchg
xchg
xchg
jp
sahf
sub
pop
stos
mov
push
hlt
outsl
scas
sub
or
shrb
data16
sahf
xchg
lock
push
shlb
stc
or
adc
nop
gs
in
dec
mov
sbb
int
sarl
adc
xor
pop
jmp
out
mov
test
add
or
push
loopne
fisubrl
lahf
aas
loop
fisttpl
mov
into
xlat
testl
sbb
incb
mov
jecxz
scas
repnz
push
xchg
fsubrl
push
mov
int
fwait
incb
pushf
daa
pop
mov
or
jbe
loope
sub
dec
scas
int
frstor
adc
out
sbb
test
repnz
and
sti
ret
add
sbb
addl
adc
xchg
jb
loope
movsl
lods
cmc
cmp
iret
fwait
pop
pop
cmp
inc
js
test
mov
cltd
pop
sti
ficomps
pop
pusha
and
movsb
jecxz
outsb
xchg
cmp
rclb
mov
dec
xor
mov
inc
outsl
nop
pushf
push
popf
jmp
loop
ret
sti
sub
loop
shl
popf
cmpsb
cmp
stc
out
lahf
int
ficomps
push
imul
arpl
pop
push
adc
fildl
daa
js
in
sbbb
es
push
pop
loope
adc
clc
dec
inc
stc
sbb
pop
pop
push
imul
xchg
inc
cmp
addr16
push
out
push
les
cld
or
int3
popa
popf
test
inc
imul
repz
loopne
push
lds
std
cmc
data16
or
cmp
add
loop
inc
popa
imul
or
jle
shll
jae
ss
rorl
jo
dec
adc
mov
inc
jge
adc
test
add
cmpsl
cmpsb
dec
in
xchg
xor
sub
xor
pop
add
sub
movsb
mov
addr16
icebp
cwtl
outsb
dec
aaa
cmp
and
leave
mov
lcall
fildl
enter
sahf
xorb
ror
sbbb
das
shrb
rcrl
fiadds
push
xchg
and
pushf
inc
fs
insb
jmp
dec
inc
adcb
and
jbe
enter
xchg
movsb
imul
bnd
mov
cwtl
mov
lods
jne
aas
fwait
nop
shlb
push
xchg
inc
inc
flds
xchg
or
mov
test
jmp
and
in
jne
enter
dec
xchg
mov
call
daa
mov
ljmp
adc
sbb
out
imul
push
mov
popf
inc
loop
push
push
fldcw
dec
xor
xor
fwait
inc
mov
bound
stos
or
dec
ret
push
movsb
inc
imul
add
outsb
jmp
int
mov
das
filds
dec
add
inc
cmpb
or
mov
or
mov
jle
aas
sub
inc
test
sbbl
insb
jae
dec
cmp
ljmp
sub
ss
ret
adc
jle
aaa
std
mov
ljmp
mov
in
icebp
mov
push
mov
push
dec
ljmp
sahf
and
mov
pushf
fistpll
push
push
inc
mov
iret
bound
dec
push
cmp
push
jle
mov
or
nop
cmp
or
mov
jp
push
sarl
add
cld
xor
mov
inc
gs
loopne
hlt
adc
dec
xchg
fyl2xp1
std
bound
fcos
in
xor
mov
dec
clc
xor
adc
cmp
outsl
in
push
sahf
sti
pop
ljmp
pop
jb
es
pop
mov
pop
lods
xlat
xor
mov
outsb
sbb
cmp
sub
adc
mov
ret
int3
mov
mov
cmpsl
jmp
xchg
hlt
push
jne
cmp
mov
sbb
cmp
jo
fisubl
loope
mov
mov
enter
mov
das
push
sbb
cmpsb
insl
sub
pop
jle
xor
std
sbb
mov
outsb
sbb
in
cmove
jno
xchg
xlat
lods
stc
pop
divl
loop
bound
mov
data16
jg
cmp
nop
popf
aad
stc
mov
test
jge
out
lods
lret
test
push
jecxz
pop
mov
adc
fs
push
aam
adcb
jg
aas
xchg
cwtl
daa
shlb
mov
scas
lcall
stos
scas
ja
pop
xor
shlb
mov
aas
mov
fs
popa
test
mov
cmp
lods
ret
push
pop
imul
ficoml
popa
mov
test
punpckhbw
push
inc
add
bound
fwait
dec
bound
pop
jmp
pusha
ficomps
jae
icebp
or
pop
and
jl
movsl
xchg
mov
repnz
sub
nop
fdiv
lea
push
stc
sbb
push
lahf
imul
fcmovb
into
out
push
sbb
push
push
xchg
xchg
repz
arpl
lcall
cwtl
pop
subl
mov
hlt
scas
adc
out
jb
add
and
pop
and
es
pushf
sub
push
mov
and
xor
mov
cltd
and
pop
sbb
push
mov
andb
inc
push
icebp
aaa
in
iret
jo
adc
adc
fsubrl
ret
mov
add
add
shl
pushf
xchg
cmp
and
xchg
nop
sub
leave
push
cmp
ljmp
ret
scas
jecxz
cmpsl
mov
clc
mov
sub
inc
push
divb
popa
sub
cmp
mov
mov
mov
cs
cmpsl
push
add
sbb
push
cmc
mov
call
into
imul
popf
fdivr
sarb
lcall
jge
jnp
mov
push
or
pop
scas
clc
cmc
and
enter
and
lods
pusha
faddl
test
ds
mov
mov
je
scas
test
loop
jge
fnstenv
pop
adc
inc
push
and
pop
lods
sbb
add
push
bts
cmp
mov
outsb
loope
addr16
push
push
mov
mov
and
rorb
dec
ds
cmp
clc
test
jecxz
ret
sti
out
jge
sub
xchg
shlb
mov
sahf
push
cld
mov
cli
addb
imul
cwtl
mov
jg
jno
mov
jbe
data16
mov
jle
jnp
std
testb
call
and
gs
neg
fwait
jl
xor
adc
repnz
lcall
sbb
dec
cmp
xor
mov
mov
cld
or
add
and
nop
mov
cmp
clc
xor
fdivs
cmc
sbb
outsb
push
adc
test
or
xchg
mov
sahf
mov
inc
hlt
andb
test
and
add
mov
fcoml
mov
divl
ljmp
fcomp
xorb
aad
sarl
cmc
sub
lret
mov
std
sbb
out
sahf
xchg
filds
jb
or
and
leave
into
adc
dec
dec
cmp
inc
xor
rolb
jae
push
rolb
in
jno
js
mov
mov
xchg
jae
sbb
adc
push
popf
push
loopne
imul
cs
xor
pop
inc
rcl
mov
das
add
and
mov
and
xchg
xchg
mov
outsl
out
xchg
inc
inc
lcall
cmpb
lret
or
ss
or
call
mov
sub
out
sbb
mov
and
or
push
cmp
add
inc
ja
adc
add
cmp
clc
mov
inc
test
cltd
mov
loop
cltd
cmpsb
xchg
fidivs
movsb
scas
insb
inc
xor
mov
dec
sti
cmp
or
cs
jl
adc
or
xchg
aam
jns
inc
in
lock
dec
ljmp
inc
iret
or
pushf
mov
xchg
je
mov
sbb
inc
loopne
or
loope
inc
cmp
add
sahf
jnp
sti
adc
jmp
xchg
imul
rclb
add
into
insb
mov
jno
ret
addb
mov
add
cld
adc
fcmovnu
das
stc
cmp
cmpsl
push
inc
pop
jnp
das
aam
sbbb
sti
dec
rcll
hlt
icebp
cmp
fisubrs
addr16
stos
push
arpl
xchg
push
mov
loopne
data16
ja
rolb
ljmp
inc
nop
ds
notb
mov
sbb
movsb
dec
sti
roll
add
inc
movsl
int3
js
mov
dec
rol
insl
push
stos
enter
movsl
mov
std
fdiv
jno
std
sbb
dec
cltd
pop
mov
jmp
daa
push
or
fldl
xor
or
mov
xor
mov
or
push
mov
fistpl
int
mov
test
cs
mov
lret
xchg
pusha
sbb
out
in
iret
xor
add
pop
cmp
aaa
ror
pushf
aas
mov
outsb
inc
addb
icebp
popf
jecxz,pn
sahf
mov
test
push
fisttps
mov
lea
popf
popa
sub
dec
jecxz
cs
mov
mov
push
add
mov
in
sarb
leave
cwtl
mov
cmp
cltd
cmp
das
and
xorl
dec
imul
pop
lock
sbb
sub
imul
pop
lods
fucomip
loope
arpl
adc
cmovle
scas
aas
sub
cmp
pop
mov
sbb
sub
pop
pop
imul
sbb
xchg
test
mov
sbb
dec
repnz
fisubs
add
hlt
dec
shll
inc
sub
loope
fiadds
enter
sub
sub
loop
dec
stc
or
ss
lds
sbb
iret
sti
loope
mov
outsb
cmpsl
inc
addr16
cmp
mov
scas
in
mov
shlb
adc
pop
out
testb
push
push
aas
das
xor
mov
imul
inc
inc
fsubrl
in
jp
dec
cmp
inc
dec
mov
ss
shr
outsl
ljmp
cmp
outsb
jno
imul
dec
push
pop
ret
out
or
aaa
dec
sub
push
lahf
adc
cmp
ds
mov
sub
inc
adc
imul
negl
ret
das
lcall
test
mov
cld
icebp
mov
push
jg
aam
insb
jmp
lods
and
or
inc
hlt
jne
push
sbb
jne
pop
jo
loope
mov
int3
push
ds
sbb
aaa
jg
mov
mov
mov
rorb
cli
pop
in
and
pushf
and
inc
jb
push
inc
pop
in
fstl
rorl
xchg
xor
cmpsl
cwtl
push
cmp
mov
in
scas
sahf
cmp
dec
outsl
or
xchg
xor
pop
xor
jae
cltd
mov
fwait
jp
or
incl
or
and
movsl
mov
cmpsl
jle
jmp
nop
jmp
mov
das
test
pop
icebp
dec
leave
sbb
sub
in
int3
lock
aad
mov
add
out
mov
mov
xor
jbe
lret
lahf
pand
mov
push
and
xchg
dec
jb
jge
clc
fldcw
insl
adc
lods
jne
pop
mov
aad
mov
pop
xor
xchg
addl
pop
jae
cs
add
ret
std
not
mov
arpl
sub
mov
mov
push
inc
mov
pushf
fs
test
sbb
int3
jb
out
push
lods
add
cld
cmp
lds
push
dec
sub
adc
mov
hlt
adcb
adc
inc
popa
adcb
js
hlt
push
mov
das
imul
xchg
fwait
ret
jmp
imul
lret
adc
xchg
xor
cmp
ja
mov
pushf
dec
dec
jmp
pusha
cwtl
ret
loop
repnz
add
cs
add
daa
andb
jge
repnz
jo
lahf
mov
dec
adc
xor
je
push
ret
and
imul
hlt
aaa
fistpl
jle
mov
in
or
mov
divl
gs
cwtl
ret
aaa
or
sub
out
or
sub
sbb
push
mov
cltd
lock
dec
mov
inc
sbb
out
sahf
adc
push
lret
mov
jae
adc
mov
out
xor
mov
push
cmpsb
rcr
fwait
orb
or
cmp
pop
outsb
jne
mov
dec
sbb
and
addr16
cld
xlat
cld
pop
mov
fdivs
jge
loop
rcll
pop
push
mov
inc
pop
jns
cwtl
addr16
mov
loope
add
ljmp
push
insb
jl
rorb
stos
pop
loope
add
lock
mov
pop
push
and
pop
mov
or
cli
adc
movsl
push
outsb
loop
xchg
push
orb
rolb
xlat
sbb
test
mov
cmpsl
dec
int3
loopne
xorb
movl
adc
xchg
mov
insb
or
shrb
jg
les
push
cmp
dec
cmp
rcl
mov
jl
push
iret
mulb
inc
in
cmp
push
shrb
jg
fidivs
sub
sbb
inc
sub
cmp
jge
jo
lcall
xchg
ds
mov
and
out
inc
inc
push
pop
lret
push
jmp
testb
je
shlb
das
insb
push
cs
leave
xor
adc
pop
dec
mov
movsb
adc
iret
or
out
cli
outsl
xor
cmpsl
cmp
or
and
jge
mov
add
adc
add
into
sbb
lret
cmpsl
int3
push
sahf
xchg
inc
popf
pop
pop
pop
sahf
and
cltd
or
ljmp
sarl
mov
lods
nop
push
inc
xor
jmp
xchg
daa
in
xlat
add
push
mov
xor
insl
sbb
jle
lahf
lea
test
sbbl
popf
imul
loop
xor
jnp
fnsave
jge
out
mov
inc
cmp
mov
sub
inc
and
sub
mov
enter
outsl
cmp
inc
dec
cmp
popl
stos
iret
in
popa
xor
jle
clc
cmp
call
ror
or
pop
dec
mov
ret
jo
bound
lods
adc
pop
mov
loopne
loopne
dec
insl
loopne
lock
pop
jge
in
call
sub
mov
adc
push
adc
cmp
push
negl
ss
push
xchg
imul
mov
ja
pop
push
sbb
int
pop
stos
jl
dec
pusha
ret
xchg
jo
xorl
pop
add
lret
xchg
stc
lock
in
js
fwait
mov
sbb
and
in
dec
scas
fnsave
cmc
push
pop
call
cmp
adc
repnz
jnp
sub
lret
stos
dec
outsb
xchg
rcrl
lret
fcompl
xor
and
pop
mov
sub
shl
test
sbb
sahf
out
push
fildll
movb
add
push
cmpsl
imul
leave
push
dec
push
push
dec
mov
cmp
jg
cmp
cwtl
cmp
addr16
mov
fidivl
cmp
fnsave
xchg
testb
aaa
adcl
push
mov
cmpsl
adc
pop
ds
jno
dec
sbb
jae
xchg
xor
adc
dec
mov
call
xlat
aad
daa
sbb
inc
sub
repz
pushf
mov
push
icebp
or
sub
adc
bound
mov
cld
push
inc
movsl
inc
or
mov
aam
dec
jbe
std
dec
xchg
mov
shrl
ja
push
rorl
add
xchg
sbb
add
adc
push
in
jg
mov
in
ljmp
pop
push
push
and
sbb
or
push
sbb
dec
nop
insb
fdivs
push
xor
sbb
sub
and
cli
faddl
mov
jl
jge
ret
pop
daa
loop
shrl
xchg
movsl
gs
rolb
jmp
in
push
scas
mov
mov
test
dec
stc
push
inc
push
es
mov
stos
aad
xor
add
jb
jecxz
add
pop
or
sub
push
lods
loop
orb
mov
stos
mov
mov
dec
in
mov
frstor
jns
shll
xchg
cmp
and
xor
and
gs
dec
cmpsb
mov
ret
pop
scas
sbb
add
or
test
jg
mov
outsb
cld
imul
and
ret
add
sbb
dec
pop
inc
and
mov
lret
dec
sbb
mov
movsb
shlb
in
sbb
popa
scas
xchg
out
adc
call
nop
jbe
fst
xor
mov
test
outsl
aas
inc
add
inc
ret
inc
dec
cmp
cs
rcrl
popf
mov
out
sbb
insl
pop
les
cmp
jge
loope
pop
xchg
notl
pop
cmpsl
sarb
rcr
pop
ret
bound
cmp
ficoml
and
push
lahf
push
icebp
and
push
lds
mov
scas
push
insb
das
dec
mov
test
fsub
cmpsl
icebp
and
adc
mov
xchg
adc
sbb
mov
push
cwtl
jo
das
fcompl
es
mov
inc
and
xor
aam
pusha
push
sub
xchg
xor
out
jle
mov
or
sbb
cmp
jl
mov
mov
adcl
and
cmp
inc
mov
cmc
sub
jmp
enter
fs
pop
aam
outsb
out
jecxz
push
std
inc
push
jb
lea
fistps
pushw
out
jmp
jnp
push
test
cmp
mov
add
inc
mov
sbb
mov
sbb
push
cmp
mov
cmp
mov
mov
std
adcl
pop
push
jle,pt
aas
pop
mov
mov
jg
lret
in
ljmp
xchg
or
sbb
adc
xor
lock
call
out
or
xchg
push
gs
mov
cmp
push
mov
xor
cli
iret
fucomip
adc
mov
mov
sarb
jge
mov
cmp
xchg
int
in
cwtl
je
mov
mov
cmp
jne
mov
int
cli
push
shlb
pop
cwtl
mov
xchg
arpl
adc
xchg
shlb
fstpl
shrl
stos
pop
imul
aaa
and
add
or
ljmp
jbe,pn
fdivr
sbb
pushf
lret
cmovae
dec
call
mov
pop
mov
bound
jecxz
adc
in
mov
js
stos
or
sbb
dec
stos
pop
sub
shll
test
inc
xor
shr
cmp
loop
pop
ret
or
mov
cmc
fwait
pop
mov
or
stos
sahf
data16
or
adc
cs
push
cmpsl
adc
mov
js
push
dec
cmc
or
aad
lea
std
jns
xor
jecxz
shll
aam
dec
ljmp
stos
mov
mov
mov
sti
in
mov
pop
mov
add
xor
push
insb
dec
cmpsl
fnsave
push
cmpsb
mov
sbb
cmp
mov
inc
inc
xor
sbb
and
lahf
sub
cmp
xor
or
subl
nop
push
inc
cli
push
fsubrs
sub
fwait
mov
loop
cld
in
loop
mov
add
in
fldcw
lock
shll
sub
mov
fdivl
jb
in
jmp
imul
xchg
push
mov
lds
mov
add
out
shll
jecxz
push
out
jmp
push
and
push
sarb
mov
and
push
jb
outsl
xchg
stos
push
mov
aaa
lods
int
sub
pop
and
decl
nop
stc
mov
addr16
andl
loop
into
push
mov
mov
push
mov
scas
push
sub
pusha
or
xor
pop
stos
add
add
push
in
push
out
mov
add
ljmp
inc
push
inc
push
mov
jb
arpl
or
fidivrs
iret
sub
sbb
sbb
jge
mov
shll
int
out
loopne
mov
rolb
adc
jmp
xchg
mov
pop
mov
pop
pop
mov
cmp
dec
scas
int
add
xchg
xor
jbe
repnz
dec
icebp
push
or
mov
inc
sbb
sbb
lret
outsb
inc
std
mov
dec
jno
inc
pop
jge
cld
mov
pushf
mov
ja
nop
inc
push
mov
fwait
scas
and
pop
shll
add
sbb
sbb
bound
jae
dec
push
dec
pop
mov
imul
rcll
push
pop
lods
inc
lods
sbb
dec
push
mov
push
and
adc
fstpt
insl
repz
rcl
jmp
mov
aaa
out
jo
test
mov
cli
scas
xchg
fdivrs
xchg
and
dec
pop
sub
aaa
mov
call
rcrb
ss
scas
imul
stc
adc
mov
push
jne
mov
push
adcb
addr16
out
lds
add
cmc
adc
push
negb
xorb
hlt
jmp
outsb
mov
das
cmp
xlat
pop
inc
and
rcll
test
push
dec
and
push
insl
adc
test
sbb
sahf
pop
adc
call
out
in
cwtl
jmp
push
pop
pop
mov
jg
mov
mov
iret
xchg
mov
cmp
subb
ss
xor
hlt
pop
std
shlb
stc
adc
inc
and
shll
loop,pn
pop
inc
enter
nop
inc
test
cmc
sbb
ljmp
mov
jbe
movsl
lret
test
test
xchg
test
and
or
mov
inc
mov
insl
mov
imul
cmp
mov
jmp
push
jo
mov
mov
add
jmp
push
in
addb
jl
je
aad
je
iret
xchg
push
push
js
lods
sarb
ss
push
xchg
out
cltd
jno
into
loope
andb
mul
fdivrs
arpl
adc
sub
pop
mov
ret
xor
inc
stos
out
pop
jmp
adc
sub
push
mull
mov
adc
fdivrs
jecxz
clc
mov
mov
test
jno
out
das
into
dec
addb
xor
add
sbb
add
mull
jo
add
cmp
je
mov
out
lods
mov
shll
mov
pusha
inc
add
inc
cmp
outsl
pop
xchg
fstpl
hlt
cmp
mov
dec
imul
cwtl
sub
repz
cli
mov
insb
hlt
sub
cmc
in
mov
add
inc
aad
sbb
adc
loope
out
lahf
ds
cwtl
in
lcall
add
mov
movsl
inc
sti
mov
iret
xchg
movsb
sbb
sub
and
mov
es
lods
cmp
inc
test
lods
in
stos
fidivl
cmp
ret
lret
outsl
pop
fwait
in
enter
mov
sub
das
xlat
pop
gs
test
mov
out
sbb
call
je
pop
popa
add
int3
mov
mov
popf
xor
sahf
sbbl
sti
loope
icebp
jle
sbb
cmp
pop
int
sbb
ret
xchg
iret
or
inc
mov
xchg
inc
and
dec
js
out
xlat
xchg
mov
cmp
inc
sub
sbb
sbb
jbe
mov
pusha
mov
pushf
push
lcall
cltd
fiaddl
cmpsb
ja
daa
mov
loop
stos
sti
testl
cmpsl
pop
test
sbb
shlb
xor
pop
mov
dec
or
popf
jl
sub
push
sub
xchg
jnp
pushf
in
adcl
add
mov
out
xorl
leave
sarl
adc
mov
lahf
mov
push
jns
xor
push
mov
fs
push
jne
push
shl
inc
mov
adc
dec
iret
into
cld
loop
out
push
js
inc
popf
jbe
cmpsl
jne
sbb
sahf
cwtl
test
inc
fldl2t
lahf
push
mulb
inc
scas
adc
mov
pop
mov
xorl
fwait
into
sbb
sbb
lret
xor
xchg
rcrb
sbb
add
jo
inc
mov
insl
push
adc
and
xchg
in
cltd
lods
pop
outsb
lahf
aas
inc
jp
jo
sbb
testb
mov
mov
jge
les
fcoml
jl
cmp
mov
sbb
cli
outsl
jnp
jl
sub
add
ja
daa
cmc
arpl
mov
xchg
scas
adc
xchg
mov
pop
jne
dec
fdivl
imul
add
lock
mov
push
mov
std
mov
ja
add
shll
leave
mov
sbb
sarb
daa
and
jb
scas
push
test
and
push
rorl
pop
cmc
sbb
dec
insl
inc
and
fs
inc
cmp
add
int
shll
pop
or
xor
subb
push
fdivs
shlb
cs
add
sub
pop
mov
ljmp
inc
mov
out
popa
sub
xor
sub
mov
cmc
push
std
pop
insl
je
xor
fildl
or
les
loope
stos
lea
mov
orb
and
cmp
push
pop
cmp
outsb
scas
mov
pop
lahf
imul
sbb
jmp
out
data16
mov
jno
push
adc
enter
and
push
stos
and
idivl
xchg
and
push
test
arpl
repz
add
xchg
cmp
arpl
sbb
mov
cld
mov
gs
push
jle
or
repnz
arpl
loop
in
or
aas
negl
add
jmp
adc
mov
ja
les
mov
mov
xchg
pusha
imul
mov
ja
in
push
mov
outsl
insl
ljmp
and
call
out
out
loopne
and
aad
cltd
idivb
adc
adc
pop
pop
loope
lcall
bound
stc
mov
push
xor
inc
loop
movl
mov
push
ret
push
adc
cmp
loop
or
fs
daa
dec
je
inc
leave
jae
in
pop
pop
sub
cwtl
mov
push
pop
pop
loop
lahf
data16
rolb
add
push
out
mov
imul
addr16
cmp
jg
dec
scas
add
sub
cmp
lahf
aas
test
pop
mov
imull
and
pop
mov
dec
popf
push
add
jno
int3
and
fsubr
lock
sub
pop
sar
pop
xchg
mov
leave
or
sbb
fmull
jne
shr
sbb
push
push
inc
cmp
cmp
ror
mov
aad
data16
cli
pop
lock
jne
lcall
sbb
jbe
pop
jg
pop
inc
adc
or
xlat
scas
lods
push
fisttps
adc
and
std
and
addr16
mov
ljmp
lret
fwait
xor
lahf
aas
fcomps
fnstcw
pop
mov
add
inc
jb
xchg
jp
pop
xlat
mov
repz
dec
dec
push
xor
pop
out
scas
mov
pushf
pop
inc
lcall
js
mulb
xor
pop
loopne
and
xchg
das
ja
push
aas
sub
std
shrb
aas
cmp
cmp
sub
mov
cwtl
stos
xorl
mov
dec
push
adc
mov
test
sbb
pop
mov
adc
outsb
ja
mov
fcmovb
mov
pop
es
push
mov
dec
fsubrs
in
mov
lods
pop
inc
mov
mov
pop
sbb
test
xorb
cmp
test
push
loop,pn
test
push
mov
mov
xchg
fdiv
dec
cmpsl
mov
mov
add
mov
icebp
jmp
pop
shlb
pop
fistl
dec
std
arpl
stc
fwait
pushf
dec
jecxz
push
sbb
mov
or
pmulhuw
xor
jnp
dec
and
repz
dec
in
cmp
dec
lahf
adc
dec
pop
leave
mov
cmp
or
js
sub
adc
divl
xchg
rcrl
fdivrl
sbb
call
push
dec
xor
ret
inc
int
mov
pop
aas
mov
and
je
int
xor
push
popf
inc
movsb
sbb
push
jnp
inc
js
add
pop
inc
and
in
imul
repnz
cld
jecxz,pt
lcall
lods
ss
repnz
leave
xchg
mov
sahf
xchg
outsb
sub
xchg
cmp
mov
add
daa
or
in
cli
fsubrs
cmp
cmp
xchg
jge
xchg
adc
xor
mov
idivl
lret
sbb
adc
sar
stos
inc
scas
jle
insl
cmpsl
es
sub
sub
pushf
push
fsubrp
jns
inc
inc
xchg
repnz
mov
adc
pop
push
sub
xchg
fiaddl
or
pop
mov
inc
pushl
adc
ja
sbb
add
scas
aad
enter
int
dec
or
dec
cmp
lcall
cmp
pop
out
in
pop
je
data16
sahf
repnz
and
mov
xchg
mov
xchg
and
xor
add
or
or
les
mov
fildl
test
push
push
mov
mov
ror
xchg
xor
pop
push
sub
lods
jmp
sbb
lods
sub
repnz
cmpb
xor
dec
pop
insl
scas
es
cli
scas
out
pop
and
popf
idiv
mov
jb
inc
mov
aaa
push
dec
mov
hlt
jo
mov
jle
mov
call
lret
test
or
movsl
jle
frstpm(287
and
dec
sub
ret
or
dec
jmp
clc
movsb
outsl
gs
xor
or
sub
int
lret
mov
xor
hlt
cmp
addb
sbb
pop
outsb
push
jae
lods
xor
popa
sti
ret
pusha
adc
push
ret
sbb
outsl
jp
xor
fldcw
stos
cli
pop
sub
push
jl
pop
sbb
sbb
call
insl
mov
lahf
sub
xor
daa
sub
lds
icebp
lret
imul
sbb
add
in
movsb
jg
jmp
jmp
lea
sahf
add
push
in
push
mov
mov
lds
xor
rorb
xlat
xchg
push
mov
pop
jae
mov
xor
loop
jb
div
xchg
in
lds
stos
ljmp
inc
and
mov
sbb
or
add
lods
mov
scas
jecxz
sbb
inc
dec
ret
push
mov
pop
pop
mov
ja
cmp
insb
mov
or
mov
aad
stos
test
mov
jecxz
std
mov
mov
iret
inc
mov
xchg
dec
or
movl
pop
mov
jne
ss
mov
mov
pushf
mov
cmpsl
lahf
jb
push
or
xchg
cld
fstpl
loop
push
movsl
int3
dec
push
mov
pushf
sti
in
popa
in
dec
insb
jg
pop
inc
mov
adc
or
jns
cmp
jns
or
mov
cltd
jae
and
sbb
cs
out
inc
inc
or
mov
sub
xchg
popf
bound
adc
xor
xor
out
movsl
out
xchg
es
xor
and
addl
mov
inc
mov
mov
dec
call
pop
insb
arpl
mov
out
or
in
adc
or
and
in
xchg
lods
lahf
test
mov
les
clc
mov
ficoml
pop
jo
sbb
push
and
sbb
or
mov
jecxz
idivb
dec
dec
fistps
mov
negl
cld
in
js
je
sarb
mov
inc
sbb
outsl
fs
aam
xchg
jmp
imul
mov
aaa
or
fsubrl
fnstcw
test
jbe
insb
or
adc
fisubs
dec
jo
push
mov
pop
mov
fidivs
jmp
cmp
inc
mov
jno
cmp
xchg
imul
aam
xchg
int3
out
xlat
les
sub
stc
sbb
cmp
pop
test
mov
jp
cli
mov
mov
cmc
arpl
xor
and
popa
inc
std
push
loope
loope
loop
dec
scas
sub
jmp
flds
or
lods
call
xchg
data16
mov
cmp
mov
add
adc
mov
mov
stos
pusha
les
mov
lock
cli
and
add
dec
adc
push
xor
in
xchg
lea
or
lods
rclb
enter
stos
or
push
rcrl
sbb
popa
mov
pop
hlt
cmc
nop
pop
jl
push
pop
cwtl
dec
pop
sti
or
call
mov
pop
mov
push
daa
mov
or
int
xlat
ljmp
hlt
fbld
fisttpl
imulb
stos
addb
int3
push
pop
pop
mov
fucom
xchg
test
data16
shrl
push
das
mov
add
adc
sahf
fnsave
loop
fsubrl
jb
pop
les
les
je,pt
repz
jg
aas
sub
jnp
hlt
pop
mov
sub
nop
inc
or
pop
out
lods
stc
int
sub
std
jnp
in
pop
test
and
outsl
sbb
xchg
jb
loopne
negb
lock
inc
stc
stc
scas
add
cmp
cmpsb
push
movsl
jecxz
fisubrs
orl
dec
sbb
and
in
lahf
xor
test
cmp
out
mov
in
sbb
call
fnstcw
mov
mov
mov
hlt
mov
sub
fcmovne
outsb
mov
movsb
std
sbb
add
movb
pop
jno
xor
mov
mov
xchg
stc
jae
fidivrl
sbb
call
adcl
rclb
pop
add
xchg
outsb
adc
aam
in
movsb
outsl
shll
mov
mov
sub
inc
mov
sti
cmp
roll
mov
mov
aaa
addl
pop
sub
lcall
and
cmp
lret
cli
test
xlat
add
imul
clc
mov
jle
int3
je
arpl
mov
mov
ja
in
es
sub
push
mov
rcl
out
cmpl
or
mov
pop
push
stos
pop
test
mov
or
ret
call
cmp
std
cmp
jae
mov
sar
enter
sarl
sub
cltd
ret
jbe
push
mov
mov
je
xlat
iret
scas
push
add
scas
aaa
mov
adc
jo
scas
add
aaa
mov
ljmp
push
push
jns
push
xor
sub
sub
nop
push
sub
arpl
jns
fadds
mov
popf
adc
out
imul
adc
push
pop
popf
lcall
lock
int3
jl
jae
mov
ret
dec
hlt
outsl
pop
movsb
cltd
out
dec
jge
out
insb
and
enter
add
push
jo
adc
insl
popf
xchg
inc
stc
test
cmp
repz
dec
inc
outsl
cli
lea
jg
mov
xchg
pop
jb
dec
and
mov
xchg
flds
or
sahf
jne
jge
xlat
fs
lret
ficomps
aaa
in
shlb
sbb
int
sbb
xchg
fnstenv
call
loop
movsb
inc
daa
xchg
xchg
mov
loope
aas
mov
repz
mov
mov
fsubs
movsb
fwait
and
cmpsl
enter
int
xchg
xor
shll
fidivl
push
pop
fidivs
jle
or
inc
inc
out
or
pop
addl
int3
mov
fsubl
lret
inc
nop
xor
dec
into
rorb
imul
iret
es
popf
push
fdivp
stc
mov
jns
jb
rcll
pushf
dec
stos
adc
cmp
cs
cld
call
cmc
pop
pop
nop
negb
std
stos
out
test
sahf
out
cmpsb
bound
jbe
cwtl
mov
pop
xor
ja
aaa
xor
or
cmpsl
cmp
andb
call
es
xor
or
cli
out
mov
pop
cmp
loopne
mov
out
sbbl
outsb
push
inc
shll
loope
or
daa
mov
lea
int3
push
ret
inc
aam
test
lahf
mov
fists
loope
lcall
aad
push
mov
fcmovnu
addl
cmp
pop
add
scas
je
aaa
out
dec
adc
lahf
call
jo
fdivrs
push
fnsave
add
repnz
test
sbb
cmp
jb
test
lock
pop
andl
fldcw
imul
jo
imul
aaa
test
ljmp
or
cmp
ret
jg
clc
scas
sbb
loopne
shll
filds
mov
jno
aaa
xor
mov
sbb
stc
push
enter
mov
push
cmc
sbb
jnp
mov
call
ret
or
push
shll
js
icebp
outsl
mov
xchg
pop
jl
lret
cmp
add
insl
mov
lods
mov
push
sahf
mov
inc
test
jb
loope
out
mov
jo
out
scas
dec
insb
loopne
out
stc
push
scas
iret
imul
sar
mov
rcrl
push
pop
fnstenv
shr
test
lods
adc
xor
pop
outsl
mov
push
sub
inc
ret
mov
fld
xchg
ror
xor
int
into
cmp
jo
jge
xchg
push
xchg
jg
inc
iret
gs
sub
imulb
jmp
sub
inc
insl
lock
es
dec
pop
mov
inc
mov
inc
add
stos
jns
pusha
jl
je
addr16
push
jbe
into
jb
mov
test
and
push
sbb
aam
and
clc
jb
sti
mov
inc
ja
shlb
mov
cmp
lcall
out
adc
in
dec
ret
shr
pop
jb
scas
test
xor
sub
cmp
js
cwtl
add
test
pop
jae
in
add
insb
mov
lcall
dec
call
xchg
add
pop
mov
jno
xchg
sub
das
mov
std
rol
lods
or
mov
sbb
adc
inc
andl
mov
movsl
dec
lods
ret
mov
push
sub
insb
cmp
icebp
adc
push
insl
xchg
or
mov
jge
cmpsl
jle
pop
jge
ds
sbb
mov
pop
jo
mov
call
call
jle
andb
xchg
sub
in
sub
or
pop
add
ds
loopne
fnstenv
aas
pop
and
and
xchg
push
movb
hlt
sbbl
jg
mov
pop
loopne
jnp
dec
inc
mov
push
sahf
pop
arpl
xchg
fbstp
fsubl
sarl
lods
dec
mov
out
xor
jmp
xchg
sbb
fs
mov
xor
scas
daa
mov
adc
std
mov
mov
push
es
rcr
xor
das
sub
inc
cmp
arpl
jbe
mov
test
or
push
jl
arpl
loop
add
inc
and
mov
sbb
inc
iret
popa
adc
fldt
mov
dec
jns
mov
push
stos
jb
jb
adcl
pop
in
mov
xchg
cs
jnp
shrb
cs
incb
shll
or
jp
push
inc
cs
and
aas
sbb
adc
leave
or
negb
cmpsl
subl
shlb
jno
cmp
pop
inc
xchg
jno
adc
dec
cmpsl
xchg
int3
es
lods
lahf
cmp
outsl
shl
enter
mov
ret
push
pop
pop
dec
push
cmp
jnp
call
ret
lahf
fcom
inc
fnstsw
pop
mov
int
mov
daa
cmp
dec
hlt
dec
jns
xchg
push
push
cmpsb
imul
bound
pop
ret
sbb
imul
inc
test
push
repz
js
cmc
add
test
jo
test
add
xor
mov
mov
test
inc
das
fdivl
stos
scas
inc
shrl
mov
jbe
sub
jge
jb
pop
out
dec
push
adc
jg
fistl
xchg
inc
nop
je
mov
out
outsl
xchg
in
lahf
mov
pushf
mov
adc
movsb
sbb
out
cwtl
jecxz
pop
pop
movsb
pop
inc
pop
add
std
push
mov
out
mov
lods
and
xor
mov
fisttpll
shlb
sbb
jne
aam
neg
dec
cmp
loopne
mov
loopne
aad
repnz
fcompl
pusha
icebp
test
push
into
jl
inc
out
sub
cmp
lock
fimull
jmp
jae
jno
inc
jns
repz
jnp
test
cmc
push
lods
dec
sub
popa
mov
std
insb
push
or
jae
and
in
cmp
mov
inc
adc
mov
fwait
sbbb
xor
and
adc
xchg
ret
mov
push
mov
addl
dec
or
sbb
or
sbb
fisttpll
mov
lcall
cs
ret
testl
faddp
and
cltd
cmpb
adc
sarb
aaa
fsub
cmp
test
mov
xor
inc
and
scas
fstpt
jge
aas
jp
mov
cli
inc
lcall
and
and
inc
roll
repz
pop
insl
xor
adc
int3
cld
cs
fs
add
arpl
cmp
stos
mov
push
clc
dec
xchg
out
mov
ret
mov
mov
xor
fwait
ds
leave
insl
and
and
decl
xchg
add
sbbl
dec
test
nop
lret
sbb
shlb
adc
out
sub
and
fs
out
enter
sub
dec
or
inc
add
inc
ret
insl
sbb
movsl
out
pop
jge
xor
pop
add
leave
cld
or
enter
daa
pop
jnp
mov
sbb
testl
adc
loope
mov
sub
or
les
and
sub
dec
daa
mov
shrl
arpl
outsl
mov
pop
sahf
push
mov
sub
inc
ret
inc
mov
test
rcl
out
push
jo
inc
jl
adc
ss
lods
push
lahf
and
adc
jmp
cltd
sub
les
fsubl
xor
data16
imul
jmp
mov
cmp
out
mov
push
hlt
imul
dec
cld
int
push
inc
js
or
fisttps
adc
push
ret
dec
iret
orl
jnp
mov
inc
jp
pop
add
insl
adc
movsb
insl
adc
rolb
neg
and
out
sbb
or
cmp
jl
push
out
dec
cmp
movsb
outsb
cmp
dec
mov
inc
cmc
adc
xlat
rol
test
dec
into
gs
and
or
fsubrs
fs
into
sbb
add
xlat
movsb
mov
or
daa
pop
ljmp
adc
push
adc
xor
jo
xor
jbe
shll
add
mov
push
jne
xchg
into
xchg
add
adc
adc
fidivl
sti
mov
clc
pop
or
push
iret
sub
jb
fistpl
dec
mov
sbb
push
dec
or
sbbl
and
xchg
and
cmp
jge
adc
in
sbb
jg
out
sbb
mov
imul
pop
sarb
pop
mov
ficomps
pop
xor
and
dec
cmp
mov
xor
call
popa
mov
jae
sub
push
or
movsb
xor
sahf
mov
rcr
inc
insb
das
sahf
insl
jl
jecxz
jp
in
jno
je
addb
popf
js
push
inc
loope
insb
push
dec
inc
jge
imul
loop
imul
jle
scas
mov
push
push
jg
lcall
xorl
jnp
flds
popf
gs
xchg
lods
mov
xchg
xchg
xchg
mov
dec
jmp
out
stc
mov
shll
pop
ret
test
into
movsl
jmp
verw
push
notb
sub
or
xchg
push
lock
xor
sti
in
fildll
test
cmp
jge
pusha
mov
inc
in
je
cmpsb
pop
fsubl
out
xchg
movsl
pop
xorl
sub
jbe
pushf
push
mov
nop
insb
dec
out
imulb
mov
imul
cmp
enter
add
outsl
mov
nop
lret
cmp
mov
iret
out
mov
adc
cmp
inc
cli
lahf
pop
loop
cmp
cmpsb
sbb
push
dec
stos
stos
popl
cli
stc
out
repz
cmp
pop
pop
loopne
cld
push
push
pop
add
fbstp
imul
and
mov
dec
jo
cmp
addr16
and
mov
pop
dec
out
imul
jo
push
and
iret
icebp
jecxz
push
leave
cli
push
and
in
mov
aam
sahf
movsl
orb
sarl
test
cmp
push
push
aas
bound
incb
lea
nop
add
inc
das
pop
fldcw
fdivr
aaa
jg
scas
lret
cmp
mov
sti
call
insl
push
mov
adc
jmp
nop
lahf
in
sub
sub
add
pushf
subb
lock
daa
pop
test
mov
add
and
push
mov
lea
mov
push
pop
pop
dec
out
cs
repz
adc
pop
pop
mov
sub
test
into
or
fwait
and
cmp
mov
inc
and
lret
mov
sub
pop
arpl
and
xlat
rcl
xchg
adc
aaa
das
js
outsb
push
xchg
adc
jnp
repz
stc
cmp
std
mov
lahf
movsb
add
xor
lea
fnsave
out
sub
sbb
orb
test
fs
daa
push
pop
mov
xchg
stc
iret
shll
mov
sbb
dec
dec
dec
int
sbb
fsubs
add
mov
mov
inc
add
lds
insl
cmp
mov
fadds
sbb
movsb
dec
xor
xor
jns
push
pusha
cs
pop
addr16
nop
cli
cmpsl
into
mov
outsb
dec
movl
lret
pusha
add
psrad
les
sbb
xchg
dec
sub
jmp
push
addr16
and
pop
aam
or
out
pop
xchg
mov
iret
adc
lret
mov
or
rolb
scas
lock
dec
inc
inc
sbb
repnz
mov
and
add
mov
mov
jle
mov
imul
lds
incl
in
imul
jne
hlt
andb
in
fdivs
sub
pop
repz
fs
pop
shlb
pop
inc
jns
xorb
cs
popf
cld
fsubl
jno
ret
adc
and
and
sub
fsubrs
jle
cmc
xlat
dec
jle
in
nop
jge
adc
es
insl
xchg
inc
cmp
cmp
or
rcl
mov
or
push
adc
xor
stc
lret
and
repz
xchg
pusha
les
int3
jo
data16
es
or
sub
jns
xor
sbb
loope
dec
out
repz
pop
insl
lock
jle
aam
cli
lret
adc
clc
or
mov
sub
icebp
cli
xor
jp
fistpll
cmp
adc
loope
jns
mov
leave
xor
cltd
fldl
mov
insb
test
fidivrl
lret
lds
xchg
mov
adc
xor
sbbl
xor
std
ret
in
jae
xor
adc
mov
jns
sbb
mov
pop
or
inc
xor
adc
test
movl
inc
daa
mov
inc
jo
jg
or
int3
les
das
nop/reserved
xor
sub
add
adc
pop
sbb
repnz
bound
xor
rolb
push
cmp
jg
lret
adc
dec
mov
je
js
inc
ret
push
stos
inc
fcompl
notb
sbb
push
mov
data16
xchg
icebp
jo
or
movsl
gs
xchg
outsl
sbb
push
in
jnp
jp
adc
dec
jmp
cltd
inc
sbb
movsb
xchg
adc
add
les
sbb
adc
sbb
loop
or
stos
sub
push
cmpsb
xchg
dec
or
popf
jg
add
sub
jbe
mov
imul
cmp
scas
in
jle
jl
adc
dec
cmp
xchg
in
adc
pop
stos
dec
or
mov
and
mov
ret
add
cmp
push
push
mov
adc
sbb
fsincos
cld
call
dec
pop
lret
sub
jns
xchg
add
lea
inc
jno
fsubl
inc
call
dec
jnp
fwait
dec
xchg
in
and
stos
iret
mov
popa
mov
add
mov
cmc
or
iret
ds
and
cmp
mov
add
fs
xchg
jne
pop
pslld
lret
pop
pop
mov
mov
addb
lea
mov
push
jecxz
adc
add
push
lds
outsb
std
aam
movsb
pop
adc
inc
mov
jnp
cmc
and
rclb
fdivl
sub
push
int
jl
int
xor
stos
shrl
movsl
cli
ret
add
mull
xchg
jge
inc
daa
ja
jmp
imul
mov
add
arpl
jl
jmp
loope
vmptrld
int3
sti
lea
add
pop
addr16
fidivrs
push
sub
cmp
fdivrl
jle
xchg
cmp
fisttps
test
inc
mov
lcall
sarl
push
icebp
cld
jne
cwtl
dec
pop
and
in
cmp
ds
je
lods
stos
ror
fsubrl
pop
pop
out
stos
dec
ficomps
adc
and
inc
mov
icebp
pop
loopne
lds
or
xchg
adc
mov
mov
movsb
lcall
aas
idivb
pusha
arpl
fidivrs
dec
inc
xchg
push
loop
cmp
xor
shrb
cwtl
and
pop
push
add
repz
js
mov
mov
in
lcall
adc
lds
lea
into
sbb
inc
xlat
je
lahf
ret
lcall
pop
ljmp
xchg
mov
cmpsl
das
and
mov
xor
xchg
pop
dec
test
mov
stos
mov
in
pop
inc
data16
in
cli
push
mov
ficompl
jbe
aas
arpl
xor
add
inc
push
sub
fnclex
insb
sub
pop
xchg
lret
jnp
mov
or
jmp
jle
push
add
imul
addl
imul
xchg
mov
bound
enter
mov
test
loope
and
mov
movsb
addb
jle
mov
pop
mov
test
push
and
push
test
decb
cmp
xor
repz
je
std
pop
stc
inc
push
inc
push
imull
dec
xor
push
sbb
sbb
sub
dec
aad
fisubrl
sbb
mov
or
cmp
arpl
js,pt
leave
lea
das
sbb
int3
jne
cmpsb
into
movsb
xchg
insb
shlb
push
lret
pop
mov
iret
nop
cli
lahf
fsubs
repz
mov
cmpb
pop
repnz
sub
pusha
mov
push
mov
push
out
pop
and
rcll
xor
push
adc
in
pop
mov
aaa
or
pop
xorb
pop
mov
mov
imul
aaa
mov
jbe
pop
add
fidivrl
sti
mov
jmp
mov
scas
daa
add
into
gs
pop
and
inc
fnstcw
mov
push
jbe
and
mov
popa
cs
xchg
andb
cmp
enter
xchg
mov
loope
cmp
lea
popa
mov
mov
ja
jg
xchg
xchg
xchg
std
add
loopne
test
fiaddl
rorl
cmpsb
mov
bnd
fsin
stos
in
pop
jns
bound
xchg
addr16
jmp
add
cwtl
mov
lods
fdivl
cwtl
inc
push
sarb
mov
sub
aaa
fmull
pop
rcll
sbb
fimuls
xchg
stos
push
adc
lret
sub
dec
cmp
push
sbb
popa
bound
and
loopne
popf
in
aad
mov
insb
out
outsb
xchg
js
xchg
and
jb
dec
sarb
dec
hlt
inc
repz
insl
cmp
adc
testl
ss
mov
add
dec
mov
clc
or
jmp
dec
sarl
loop
or
xchg
inc
push
sbb
dec
movsb
dec
je
test
pop
pop
out
pop
inc
xor
ss
mov
cmp
dec
les
cwtl
clc
sub
ret
lea
or
lock
pop
jne
dec
cmp
lods
push
call
sti
bound
rorb
loop
dec
sarb
or
popf
nop
add
ja
fs
dec
pop
pop
dec
test
or
leave
lret
cmpsb
into
clc
push
lahf
adc
and
adc
jbe
pop
pusha
mov
rcll
cmc
je
mov
pop
out
sbb
mov
or
pop
addb
mov
dec
sbb
shll
cld
loope
mov
mov
jge
mov
xchg
decb
in
mov
sub
notl
pop
mov
add
fwait
mov
out
xchg
mov
dec
cmp
hlt
or
dec
push
sbb
mov
mov
push
cmp
ljmp
cld
aad
aas
cmpsb
sbb
mov
jbe
and
inc
mov
mov
cmp
ret
rorl
inc
push
jmp
or
inc
cmpsl
into
cmc
ja
out
push
cwtl
lea
jp
push
repnz
mov
leave
shrb
adcl
cmpsl
scas
aas
lcall
fistpll
adc
js
or
lds
xchg
inc
rcr
pop
mov
push
pushf
out
scas
enter
hlt
pop
sub
mov
mov
mov
push
mov
inc
ds
pop
adc
dec
mov
add
ljmp
test
inc
xlat
add
mov
and
andl
ret
inc
pop
cld
xor
mov
sub
dec
movsb
inc
loope
lahf
mov
add
xchg
cltd
sbb
or
fadd
dec
add
push
and
test
sub
add
clc
out
addl
cmpb
movsl
mov
lahf
roll
dec
daa
stc
into
lret
out
js
fbstp
fcom
jmp
test
jge
stos
out
outsl
insb
rol
test
pop
adc
push
inc
fldl
push
jbe
js
mov
pop
outsb
push
sub
cltd
or
pop
jns
imul
pop
aas
fwait
jp
cltd
and
pop
jmp
test
inc
mov
xchg
push
cmp
push
push
xor
mov
adc
sub
inc
sub
inc
es
add
dec
adcl
ss
add
mov
out
pop
dec
push
mov
sbb
or
push
flds
and
push
aad
jle
sbb
mov
push
popf
fmuls
pop
jno
xchg
repz
in
xor
lahf
in
sbb
xor
testb
pusha
std
jp
dec
je
dec
dec
cmp
or
lock
mov
pop
dec
rcrl
mov
inc
ja
fimull
rcrl
or
sarl
or
cmp
jl
mov
xor
psllw
push
int
mov
stc
jo
testl
mov
xor
lock
sub
je
jle
mov
imul
cmp
add
adc
adc
mov
xchg
gs
pusha
daa
scas
pop
es
testl
fsubl
xor
mov
cmp
mov
stc
cltd
inc
in
enter
dec
out
test
xor
mov
mov
dec
fcompl
jl
push
flds
fs
mov
in
pop
sti
cs
mov
jge
test
push
mov
nop
cltd
add
pop
mov
push
inc
sbb
push
mov
mov
nop
test
out
add
popa
inc
lods
dec
lods
jp
ret
jle
xchg
leave
fcmovb
adc
sbb
push
imul
sub
xlat
ret
jle
sbb
xor
incb
stc
sbb
dec
xlat
mov
into
pop
cwtl
shrl
fistpll
or
cmp
add
xchg
loopne
andb
adcl
les
sbb
mov
push
inc
pop
inc
sarl
cld
adc
xchg
ret
mov
mov
in
cmp
mov
cld
jge
test
shr
cmpl
ds
out
cmp
mov
in
mulb
arpl
loope
sbb
push
das
dec
mov
sti
push
arpl
mov
xlat
fldt
les
dec
fst
or
push
jmp
lret
lock
inc
mov
mov
dec
std
fiaddl
lods
pop
popf
sti
inc
lods
fucomi
dec
jae
int3
sbb
addr16
adc
jbe
rolb
mov
push
pop
mov
and
lret
mov
subb
mov
test
sbb
outsl
jne
mov
jecxz
movsl
mov
sub
xchg
push
in
test
or
shll
jno
int3
adc
sub
enter
lds
aam
leave
xchg
dec
xchg
cmp
xchg
pop
and
or
loope
sbb
xchg
or
mov
rolb
or
loopne
adc
inc
sub
inc
and
in
daa
xchg
sti
into
and
ficomps
pop
hlt
divb
push
mov
jg
push
mov
mov
in
add
dec
jns
xchg
xor
ret
jle
jg
mov
mov
adc
leave
subl
sub
dec
sub
mov
fsubrl
mov
jmp
xor
mov
sub
mov
sbb
addl
scas
push
lods
xchg
push
sbb
pop
push
movsb
cmc
xor
outsb
dec
push
push
dec
shl
sbb
ljmp
pushf
push
loop
fnsave
shlb
sarb
inc
ret
mov
jnp
ret
push
inc
xor
cs
decl
sub
sbb
outsb
loop
add
jnp
push
xchg
mov
test
push
aas
push
mov
mov
ret
cmpsl
mov
mov
std
jg
imul
dec
imul
push
mov
add
jnp
jno
push
aaa
sbb
aas
dec
cmp
ficoml
sti
jle
arpl
mov
or
insl
daa
shll
arpl
in
dec
rclb
sti
hlt
jae
mov
mov
in
push
add
fildll
mov
leave
ret
in
cwtl
add
dec
rcll
xchg
xchg
push
adc
or
leave
das
inc
ljmp
subl
arpl
stc
mov
mov
push
inc
ljmp
daa
lods
mov
shl
insb
aaa
clc
dec
add
adc
sbb
jmp
gs
imul
sub
loope
call
jne
sub
cmp
jmp
pop
dec
pop
aam
cmpb
mov
repz
scas
lods
clc
jg
rclb
mov
jbe
ss
mov
adc
jecxz
jns
inc
mov
cld
lods
daa
sbb
data16
or
mov
sub
fcoms
insl
xchg
jecxz
gs
inc
scas
lock
push
orb
xor
or
andb
xchg
insl
add
inc
gs
stc
mov
pushf
jge
andb
jecxz
sub
cli
mov
sub
test
sbb
ret
cmp
js
adc
cmp
lret
lea
andb
insb
lret
int
sar
push
cmp
pop
mov
neg
add
and
jnp
imul
mov
hlt
fwait
call
cmp
sarb
mov
pop
xchg
pushf
shlb
jp
sub
push
dec
or
xchg
mov
pop
pop
push
and
mov
adc
xchg
scas
in
lds
std
vmread
les
sbb
mov
inc
orb
out
dec
testb
xor
push
pop
frstor
dec
pop
jo
cwtl
cmp
dec
jne
cmp
icebp
mov
xchg
das
inc
jmp
mov
sub
lcall
out
test
inc
std
inc
and
inc
cwtl
test
aam
mov
cli
xor
sub
push
psubb
cld
push
lods
or
iret
roll
out
push
xchg
inc
inc
mov
cmpsb
jp
jecxz
test
in
inc
jb
dec
shll
push
push
fwait
insl
enter
pop
sub
aas
add
pusha
push
sub
loope
pop
sbbl
push
sub
xchg
lahf
es
mov
pop
sub
cmpsl
xlat
mov
jmp
sarl
pop
test
xchg
scas
mov
mov
xor
sub
xor
sub
arpl
sbb
stos
cmp
add
adc
lods
mov
mov
imul
jmp
mov
mov
lods
fldl
out
sti
lock
outsl
aaa
add
sub
repnz
sbb
fbld
sub
add
or
js
stos
and
pushf
xor
jecxz
mov
scas
mov
sub
ljmp
mov
add
ror
cs
fistpll
xorb
rolb
das
outsb
inc
ljmp
mov
dec
add
fists
inc
orb
dec
add
insl
xor
subb
pushf
adc
sbb
xlat
imul
add
rcrl
or
xor
xchg
rclb
xor
push
lock
out
lahf
pop
sub
xor
mov
pop
sbb
or
sbb
mov
cli
xor
pop
xchg
jle
mov
mov
push
movsb
mov
into
pusha
jle
fistps
adc
adc
gs
stos
test
mov
jo
cmp
dec
aas
int3
aas
sbb
pop
gs
and
jne
aad
mov
fsubrl
inc
in
lock
imul
push
add
movsl
or
idivb
xchg
icebp
adc
adc
bound
fmull
jle
push
les
jnp
movsb
cmpsb
outsl
ja
jo
mov
clc
into
test
popa
cmpsl
push
mov
lret
or
dec
dec
dec
mov
out
test
fs
mov
or
cmp
stos
outsl
inc
mov
test
or
outsb
dec
sub
lods
gs
out
xchg
mov
cmp
mov
jmp
icebp
pop
adcl
pop
xchg
adc
lea
cmp
lahf
and
fildl
jae
aaa
sub
nop
jbe
mov
out
pop
xor
sarb
ficoml
mov
xchg
mov
or
loopne
shlb
aas
ss
cltd
pusha
cmpsl
sti
into
enter
or
lret
xchg
ret
sub
pop
repz
das
test
fmuls
sbb
loopne
and
imul
push
push
inc
xchg
aam
enter
sahf
or
inc
imul
mov
ja
subb
mov
aad
cli
push
cmpsl
stos
out
roll
out
fmull
stos
mov
cmp
mov
aam
popf
pop
daa
cmp
popa
mov
outsb
mov
xor
inc
stos
mov
xor
jne
inc
sbb
jb
or
pop
shrl
fldln2
cmp
xchg
mov
pusha
mulb
fidivl
fsubrl
jecxz
mov
popa
mov
push
push
xor
popa
sti
sbb
mov
and
cmp
int
outsb
cmp
stos
mov
lret
or
lods
nop
lret
fimuls
icebp
test
imul
pushf
shrb
cmc
xchg
jae
cmp
scas
jl
and
scas
sbb
fbstp
dec
pushf
mov
mov
cmp
in
in
inc
in
lds
cmp
xchg
int3
mov
dec
push
jo
pushf
pop
subb
sbb
xchg
insl
mov
mov
push
cmp
mov
pop
jne
stos
pushw
lcall
js
sub
push
jecxz
cmp
iret
or
cs
inc
aas
out
adc
sub
add
popf
xor
out
sub
push
out
divb
inc
sub
fucomp
and
std
stos
adcb
mov
in
test
sub
popf
sbb
mov
mov
cs
push
xor
aas
cmp
xor
cmp
cmc
xchg
sbb
inc
js
fadd
std
mov
in
mov
gs
pop
fdivs
sub
adc
loopne
mov
jo
xchg
xlat
fiadds
rol
dec
mov
je
xorl
and
mov
dec
push
ret
cs
outsl
cmp
lea
cld
xchg
or
sbb
add
cli
and
add
lock
pushl
aas
push
sbbb
das
ds
push
sbb
push
ljmp
cmpsb
mov
rol
jp
cmp
stos
into
mov
sub
ss
enter
jo
clc
push
xchg
and
cmc
popf
in
pop
test
les
mov
cmp
insb
or
enter
cmp
push
imul
jecxz
insb
imul
out
cli
mov
and
jb
nop
cld
adc
pop
mov
fildll
pop
gs
mov
movsb
xor
std
push
push
cmpsl
cmp
sbb
add
testb
ficoms
jae
lods
dec
jecxz
or
add
js
dec
cmp
cs
mov
xchg
daa
scas
pop
dec
mov
stos
test
push
dec
lods
adc
mov
push
sbb
push
mov
sbb
pop
sbb
add
mov
ret
sahf
daa
je
add
sbbl
jmp
fisubrl
ljmp
inc
fwait
js
cli
popa
sahf
loop
daa
xor
mov
nop
push
push
mov
adc
lahf
and
jp
dec
mov
mov
test
adc
push
jns
in
inc
lds
xchg
shlb
es
add
into
xor
pop
cwtl
inc
stos
popa
or
inc
enter
xor
pop
not
imul
daa
das
es
std
pop
push
lock
les
std
jb
cli
ret
imul
subl
jmp
test
xchg
or
push
es
sbb
xchg
cmp
sbb
xor
mov
out
mov
add
out
xchg
inc
ljmp
adc
in
xlat
sub
cmp
inc
ror
in
mov
jo
dec
push
mov
and
lahf
xchg
ja
xor
hlt
xchg
dec
fs
jl
and
push
mov
addb
out
andb
xor
loope
sti
jge
ret
aas
sti
jo
insb
das
or
pop
loope
push
shl
rolb
addl
mov
push
aad
rclb
inc
fs
mov
jbe
or
mov
mov
jecxz
or
xor
mov
adc
sub
je
addr16
and
xchg
push
xchg
cmp
loop
call
shll
aaa
and
push
stos
test
fs
inc
jbe
push
repz
stos
xor
inc
pop
fistl
cmovp
cmp
mov
and
xchg
and
sahf
stos
cmp
jnp
mov
dec
xchg
mov
inc
mov
shll
xchg
push
pop
cbtw
dec
push
push
std
xchg
xchg
cmpsl
mov
fcoms
sbb
jb
inc
cli
lods
push
prefetch
or
mov
jae
in
mov
imul
jmp
adc
fnstsw
inc
jbe
dec
mov
out
inc
xchg
leave
mov
inc
mov
int
lret
and
adc
aas
push
dec
movsb
add
cmpsb
xchg
in
les
jnp
lcall
push
xor
ficomps
imul
dec
add
insb
aaa
aaa
mov
and
sarb
mov
hlt
div
pop
shll
sub
mov
cmpsl
push
stos
dec
out
hlt
mov
adc
push
insb
mov
add
add
sbb
jmp
mov
sub
mov
subl
fistpll
pop
dec
lret
je
inc
dec
jb
test
iret
jecxz
icebp
scas
sub
cmp
push
in
cld
int
cwtl
nop
dec
out
scas
insb
pop
les
cwtl
movl
sahf
mov
call
jl
fisubs
adc
int
mov
and
jmp
mov
rcrl
nop
sub
lret
gs
mov
mov
mov
enter
loop
faddl
bnd
xchg
or
add
adc
cmp
adc
lods
dec
nop
fistpll
push
rcrl
nop
in
and
daa
push
xlat
repz
out
out
jne
cmpl
pop
pop
in
push
jns
xchg
xchg
sub
ja
pushf
loop
pop
stos
dec
inc
ss
xchg
mov
inc
dec
cld
enter
dec
fcomi
sub
mov
sub
add
sub
movsl
es
inc
mov
fcoml
mov
xor
shll
adc
jecxz
out
mov
jle
push
dec
test
dec
mov
and
sub
push
add
or
jp
insb
xchg
xor
mov
cmp
push
je
jo
lock
and
addl
xchg
outsb
add
ja
int3
jno
roll
cwtl
enter
and
xchg
jns
fstpl
shlb
adc
sub
xchg
or
cmp
aaa
jl
pop
jle
dec
roll
leave
push
jbe
mov
or
pop
mov
orl
cmpsb
les
movsl
cmpsb
icebp
mov
flds
and
push
mov
cmc
insl
mov
out
mov
idivl
sub
push
bound
dec
xchg
mov
sub
dec
sbb
mov
rcl
or
pop
arpl
daa
out
cmp
adc
lcall
iret
or
xchg
mov
es
jnp
push
pop
rcl
sub
sbb
adc
pop
cmp
fisttps
jge
push
shrb
mov
sub
or
add
cmp
imul
cmc
addr16
add
mov
add
cmp
mov
and
jp
or
testl
jne
outsb
xchg
xchg
in
inc
sbb
leave
addr16
dec
mov
pop
sub
add
xorl
and
insl
dec
jb
sub
xor
sbb
pop
cmp
and
push
std
bound
je
insl
aaa
mov
jae
mov
cmp
lea
push
aam
shll
mov
push
pop
push
and
into
push
outsb
lret
mov
pusha
mov
cld
push
cs
loope
jnp
idiv
mov
aam
lods
push
adc
call
push
out
sbb
into
mov
imul
xor
dec
pop
mov
and
xchg
pcmpeqb
dec
mov
sbb
adc
iret
inc
cmp
mov
pushf
out
push
fisttpll
lcall
inc
xor
les
mov
pop
pop
push
mov
lret
dec
gs
lret
icebp
or
push
jge
sbb
adc
dec
mov
and
jo
jns
or
cmc
sub
mov
mov
xor
enter
cmpsb
rorl
lods
fisttps
mov
ljmp
mov
cmpl
icebp
ret
das
inc
pop
jae
js
aas
mov
mov
sahf
push
jno
xor
fs
cmp
lods
inc
or
sub
in
push
fstl
mul
inc
cmp
jecxz
cmp
inc
pop
mov
imul
inc
fwait
pop
and
mov
mov
es
jo
dec
daa
mov
ficompl
cmpsl
std
test
inc
push
xchg
add
rclb
daa
out
aam
icebp
inc
je
icebp
movsb
pop
stos
call
js
out
test
sub
mov
shlb
hlt
aam
hlt
fdivp
jnp
les
add
repnz
lods
dec
or
test
int
jl
cli
dec
in
push
f2xm1
insb
fistl
movsb
cli
enter
xchg
dec
vmovaps
xchg
scas
or
xchg
insl
add
add
loop
mov
add
dec
pop
mov
jbe
hlt
cmc
cmc
pop
xchg
or
mov
sub
ret
sub
mov
jnp
sbb
je
leave
jmp
adc
sub
inc
repnz
mov
or
mov
movsl
sub
push
subb
call
jmp
mov
inc
int3
idivb
push
dec
or
add
dec
sti
mov
mov
rcll
dec
stc
popa
testb
or
sahf
adc
mov
push
jp
sub
push
fcmovnu
push
scas
pop
out
cmc
push
and
sub
cwtl
xchg
push
ja
sub
mov
sbb
inc
xor
cmc
xchg
pop
stos
pop
xchg
push
sub
jmp
es
lea
push
fstpl
cmp
bound
mov
and
sub
scas
std
dec
and
ja
cmp
jbe
push
push
mov
pop
inc
test
imul
pusha
jo
test
jp
iret
xor
int
fcmovbe
nop
sbb
jo
push
jo
dec
enter
or
fs
aas
insl
lcall
test
out
rorb
push
mov
or
ret
lea
fnstcw
or
push
sub
sti
pop
aaa
jmp
sub
add
push
cld
push
test
cmp
jo
test
sbb
and
sub
pop
stos
xor
insl
and
popf
ljmp
push
sbb
xlat
adc
xor
int
sti
or
stos
adc
rep
pusha
jnp
out
mov
cmp
in
xchg
sbb
insb
pusha
cmp
inc
push
and
push
pop
call
jne
dec
pop
scas
cmp
int3
push
lret
aam
mov
insb
xor
mov
adc
clc
mov
cmpsl
cli
leave
inc
cs
adc
xchg
or
cmp
pop
fstps
repnz
cmp
inc
inc
push
clc
nop
dec
xchg
or
mov
jecxz
dec
nop
push
aad
fs
add
testl
xchg
xor
sti
adc
das
mov
xchg
loope
out
mov
in
or
repz
fstp
mov
pop
pop
stos
js
das
leave
out
cmp
mov
popa
jmp
push
leave
test
arpl
into
adc
and
and
inc
loope
jmp
sbb
ds
jp
dec
inc
adc
dec
out
push
jno
sbb
ljmp
adc
xchg
lock
lahf
push
xchg
pop
imul
dec
out
loope
adc
pop
or
test
clc
pop
and
xchg
fiaddl
lods
mov
dec
or
icebp
pop
sbb
mov
add
das
add
out
lea
lods
sub
sbb
jae
mov
or
mov
addr16
mov
adc
push
inc
add
sub
inc
out
imul
fstps
sbbb
clc
sbb
lea
loop
int
and
mov
lods
push
mov
sbb
mov
cli
leave
shll
clc
push
jg
bound
popa
pop
pop
adc
mov
test
mov
stc
xlat
push
mov
or
sub
ret
mov
rclb
fiaddl
gs
fistl
popf
inc
adc
sub
pop
or
pop
xorl
jo
lahf
fildll
leave
mov
cmpsb
cmp
fstpl
shrl
mov
pop
fstps
test
pop
mov
mov
push
adc
mov
in
xchg
cmovne
mov
or
fbstp
std
add
lret
ss
iret
pop
pop
outsb
incb
shrb
push
movsl
lcall
stos
repnz
bound
xchg
or
cs
xor
jmp
jbe
xlat
stos
dec
lods
mov
int
pop
mov
hlt
clc
dec
mov
jg
xor
imulb
jno
dec
sbb
out
add
mov
inc
dec
pushf
push
jg
xor
call
xor
arpl
aam
outsl
test
shrl
imul
jne
sbb
sbb
mov
jb
fisubl
and
inc
sbbl
jns
lcall
pop
imul
jmp
mov
ss
loope
pop
lds
call
arpl
sub
lcall
jle
scas
cs
jmp
jge
lcall
adc
and
cmpl
jle
inc
repnz
incb
sbb
arpl
xor
xchg
in
mov
or
and
imul
and
ds
es
sbb
test
decb
mov
add
les
sahf
out
mov
push
rcr
int
icebp
mov
scas
pop
xchg
dec
adc
cmp
sbb
sbb
jb
arpl
movsl
sub
test
lds
mov
and
mov
ss
cwtl
or
push
push
outsb
repnz
bound
repnz
mov
stos
lret
imul
push
or
lods
in
pop
les
push
jne
jmp
shrb
test
fsubrs
xor
ds
push
cmpsl
pop
jb
xor
cmp
popa
test
push
in
loop
into
daa
lahf
sbb
xchg
push
jmp
mov
gs
orl
and
pushf
mov
scas
push
jge
or
xchg
cmc
fidivl
sysexit
imul
fiaddl
fcoms
scas
mov
mov
fcmovnb
push
insl
divl
sbb
sub
mov
seta
mov
mov
mov
or
mov
lods
imull
adc
cmpsb
push
xor
stos
or
mov
mov
push
mov
arpl
sub
xchg
bound
icebp
repz
cld
stc
dec
mov
pop
adcl
push
xchg
adcb
cmpl
imul
mov
xor
test
scas
ss
pushf
loop
rcl
in
out
sub
push
movsb
inc
inc
push
and
cltd
sarl
mov
mov
loopne
jge
push
jmp
fdivrs
sub
dec
dec
cli
sbb
add
mov
cltd
sub
xchg
lds
nop
imull
jle
loopne
adcl
mov
jbe
fisubl
push
lret
js
fwait
add
lahf
outsb
into
bound
inc
pusha
insb
scas
faddl
sub
mov
xor
add
or
mov
mov
test
mov
mov
and
outsl
cmp
cmp
xor
pop
fst
pop
mov
and
lods
scas
leave
sbb
xor
out
xchg
pop
or
ficomps
push
sbb
mov
add
push
jp
jmp
sub
loopne
dec
mov
jae
data16
add
mov
xor
push
sbb
aam
call
fs
push
imul
pop
dec
lret
cs
aaa
xchg
fs
push
mov
aam
xchg
pusha
sbb
fsubrp
mov
inc
in
out
inc
mov
out
gs
mov
ja
test
xchg
movsl
addr16
lcall
js
add
adc
or
mov
mov
in
or
insb
mov
dec
and
fdivl
sbb
xchg
loop
add
inc
mov
pop
mov
mov
ljmp
jae
xchg
gs
mov
adc
in
cmp
flds
sub
popf
mov
lods
pop
sub
lahf
cs
pop
push
mov
sub
nop
xchg
inc
push
mov
cli
inc
sbb
pop
ret
sub
std
fisubrl
mov
js
jae
mov
mov
dec
idiv
pop
push
lcall
pop
dec
fistpll
xor
loope
mov
pusha
fidivrs
jle
cwtl
imull
movsl
mov
cmp
subl
in
js
insl
stos
test
ss
icebp
in
fistl
jnp
jmp
inc
mov
jmp
ficomps
mov
adc
ror
cli
out
insb
rcl
repnz
incb
jmp
pop
daa
cmp
pushf
mov
cmp
jle
loop
cmp
sahf
mov
test
pop
inc
jmp
mov
or
rcll
jo
mov
push
test
cmp
faddl
in
jmp
cmc
mov
dec
push
cltd
xchg
push
jmp
or
test
pop
inc
pop
out
push
daa
lock
out
adc
sbb
aaa
aas
push
sti
mov
jb
out
ljmp
push
inc
jge
dec
mov
rcll
idivb
loope
testb
or
sbb
inc
je
cs
movl
js
push
rcrb
es
jl
je
jae
mov
jns
xchg
stc
mov
cld
andb
adc
shl
incb
std
fwait
push
lret
out
xchg
call
sarl
inc
test
lret
inc
add
dec
or
fsts
push
mov
or
fdivr
mov
push
push
cmp
or
xor
inc
adc
bnd
mov
pop
cmpl
into
stos
cmp
icebp
cli
enter
cmp
pop
dec
gs
sbb
bound
lahf
movl
call
add
sbb
dec
mov
dec
mov
mov
ljmp
shrl
mov
andb
cltd
sbb
jge
pop
mov
mov
mov
out
into
mov
dec
mov
cli
xchg
dec
stos
xchg
daa
mov
stos
nop
dec
jne
int3
mov
fildl
cmp
dec
fnstcw
js
ljmp
push
test
mov
jmp
or
clc
or
shlb
xor
sti
stc
aad
imul
dec
aam
lds
and
rcl
cs
push
call
adc
push
dec
sbb
jge
repz
cmp
aam
fildl
pop
sub
fsubl
test
ret
inc
cli
in
mov
js
fildl
or
scas
aaa
or
test
jp
inc
ret
mov
into
xchg
ss
adcl
pop
xchg
xchg
add
icebp
push
jecxz
insb
sbb
popa
push
add
jnp
mov
test
mov
popf
fxtract
aas
clc
lea
sub
mov
fildll
fisttps
pop
sub
aam
push
mov
push
insb
push
testb
dec
xchg
push
adc
dec
dec
cwtl
pushf
es
fiadds
mov
ljmp
cwtl
jno
sub
stos
jmp
sti
xchg
jge
mov
fcomps
mov
and
mov
xor
inc
imul
cmp
cltd
push
jo
jge
adc
xchg
xor
mov
jo
fisubrs
ljmp
jb
dec
out
scas
stos
jne
mov
and
mov
lds
lret
xlat
push
or
xchg
lcall
mov
lret
and
and
in
add
jg
lcall
cmpsb
in
dec
sti
iret
loopne
int3
loop
pop
pop
jbe
je
jp
les
lods
clc
sarb
test
pushl
scas
xor
mov
cs
fld
loopne
hlt
push
gs
fnsave
xchg
mov
and
scas
xor
popf
mov
sbb
and
mov
inc
mov
fmull
test
aam
push
xchg
lods
jge
adc
bound
dec
push
cmp
daa
ds
fmull
out
mov
mov
push
sub
dec
xchg
sbb
xor
mov
lea
mov
adc
pop
and
adc
inc
daa
bound
jle
cmp
mov
xchg
lahf
cmpsl
sub
mov
dec
and
stos
test
cmp
dec
cli
mov
cmp
sti
inc
fldenv
dec
mov
cmp
imul
cwtl
fstp
loopne
inc
push
jno
mov
adcl
test
in
add
jb
and
mov
xchg
inc
hlt
mov
xchg
sbb
adc
inc
cld
push
aas
pop
pop
adc
push
out
repz
cmp
mov
enter
fmuls
sub
mov
pusha
push
jbe
jbe
mov
test
bnd
scas
jmp
xchg
cld
mov
cltd
int
dec
mov
pop
mov
mov
jo
lcall
stos
and
push
loopne
mov
cs
pop
lcall
jecxz
sub
xchg
dec
cli
ljmp
mov
icebp
sbb
push
out
dec
stc
or
inc
and
sbb
in
dec
jb
pop
cmpsl
es
insb
inc
out
in
and
mov
pop
jmp
les
adc
adc
in
mov
popa
lret
sbb
sbb
or
roll
push
pop
cmpsl
in
pushf
push
in
xor
sub
popa
push
mov
mov
in
movsb
adc
repnz
mov
mov
dec
sub
pop
and
sbb
int3
test
mov
jge
in
out
jns
cs
hlt
lods
add
clc
iret
sbb
xchg
sub
sbbl
jge
scas
xchg
inc
popf
mov
inc
test
xchg
rol
addr16
cmpsl
push
adc
pop
adc
push
push
jae
sbb
dec
mov
cld
lock
outsb
loopne
xchg
mov
dec
sbb
out
jbe
xchg
adc
imulb
jnp
push
inc
pop
jg
push
mov
std
fisubrl
cmp
mov
xchg
fcompl
scas
mov
in
sub
aas
sbb
jae
jmp
xlat
shll
cmp
int3
mov
ss
jle
inc
sbb
and
push
fiadds
adc
cmp
and
pop
scas
stos
in
pop
out
hlt
sub
push
fistps
je
adc
pop
insb
mul
mov
leave
jne
inc
and
test
inc
adc
mov
lcall
mov
and
adc
inc
push
sbb
in
push
ror
popa
call
adc
in
adc
movsb
insl
push
dec
xor
outsl
fs
arpl
fsub
pop
jecxz
stos
inc
xchg
loope
push
insl
aaa
push
sub
sub
push
push
mov
loope
jbe
mov
insl
inc
mov
pop
inc
repz
repnz
cli
movsl
scas
push
aaa
cmp
adc
sub
ss
jecxz
adc
daa
mov
pop
cmp
icebp
imul
push
rolb
stos
movsl
mov
sahf
scas
insl
or
arpl
inc
push
fildl
daa
mov
mov
sub
mov
mov
or
scas
and
lods
push
aaa
dec
daa
dec
lea
iret
pop
cmp
xor
das
or
jge
les
inc
pop
je
loop
movsb
xchg
loop
stos
pop
iret
out
loopne
in
xchg
add
nop
jg
movsb
adc
push
repz
pop
pop
mov
cltd
xor
jg
test
outsl
test
in
loope
sub
adc
add
out
stos
mov
mov
outsl
repz
and
jbe
aas
mov
ss
jmp
fdivrs
adcl
push
jle
dec
fcoml
sbb
rcrb
addr16
bound
es
sbb
ret
in
adcl
push
imulb
sbb
xchg
mov
jecxz
jno
pop
imul
scas
mov
xchg
fs
xlat
xorb
mov
mov
jle
repnz
popf
dec
inc
pusha
test
push
movsl
ret
clc
jmp
jl
insb
mov
pusha
insl
outsl
xchg
or
dec
xor
into
cmp
cltd
int3
or
sbb
je
xchg
and
call
push
mov
insl
test
add
lock
pushf
daa
add
dec
mov
xor
leave
aaa
sbb
sub
popf
adc
call
daa
adc
in
sbb
sti
lcall
mov
dec
pusha
aas
or
repz
loopne
out
mov
fs
add
xchg
push
into
lock
out
fnstsw
data16
aad
dec
sbb
mov
test
push
and
mov
lret
pusha
repnz
mov
inc
mov
inc
pop
jae
jo
aaa
dec
jbe
mov
je
push
xor
cmpsl
jmp
push
out
dec
outsb
xchg
mov
outsl
mov
test
push
popl
out
or
jnp
clc
inc
xchg
xchg
sbb
inc
xlat
hlt
xchg
enter
in
mov
in
push
and
jno
addr16
push
es
sub
mov
arpl
push
add
pop
lods
xchg
adc
add
fsubs
add
push
mov
aad
dec
push
pop
cmp
std
xor
orb
cld
jno
xor
stc
dec
jl
mov
pop
ror
pop
push
xchg
push
mov
fwait
mov
inc
pop
loopne
loopne
div
inc
push
mov
vmread
sub
sbbb
cmpsb
sbb
adc
sbb
lock
test
mov
ficoml
dec
imul
mov
iret
mov
lret
adc
mov
xchg
pop
cmp
xchg
push
scas
ds
arpl
cmp
insb
decb
inc
pop
iret
mov
sbb
mov
sub
jae
lea
xchg
movsb
popa
in
icebp
add
mov
add
and
jne
repnz
xchg
mov
lahf
inc
xor
pop
cmp
int
insl
fadds
mov
or
cmp
dec
mulb
mov
add
ret
jmp
xor
push
inc
pop
adc
stc
adc
sarl
xor
je
test
dec
repnz
iret
fistps
insl
lea
xor
scas
adc
leave
repz
inc
jge
sbb
scas
inc
and
push
stos
fildll
sub
test
ret
add
sbb
movsl
adc
sbb
mov
cmp
sub
out
xchg
in
scas
sub
aas
sbb
sahf
out
cmp
jno
test
and
js
or
iret
pop
in
push
jle
and
arpl
cld
loop
fnstcw
flds
les
jmp
dec
xchg
lods
shrb
lods
test
in
call
cmpsb
cmp
push
lahf
inc
popa
xchg
pop
or
jno
in
std
cmpsb
mov
cmp
push
shrb
lcall
data16
cmp
les
insl
out
adcb
dec
enter
divb
adc
inc
call
push
vp4dpwssds
adc
daa
pop
ds
pop
adc
ss
sbb
add
fcmovbe
jl
cltd
bswap
dec
andl
jne
pop
pop
pop
sahf
rcr
cld
mov
scas
cwtl
xchg
fisttps
shlb
sbb
inc
enter
inc
lds
test
xlat
xchg
lods
mov
pop
sar
push
mov
add
lret
int3
xchg
arpl
jle
xchg
roll
lret
pop
or
dec
lahf
push
lea
xchg
or
js
icebp
add
negb
and
repz
lock
push
inc
push
push
add
test
ret
add
ljmp
fisubrl
popa
scas
or
jo
das
insb
mov
xchg
jmp
sub
inc
xor
daa
js
mov
jle
cmpsl
mov
popf
pop
loop
fsubrl
jmp
mov
cmpsl
lcall
iret
pop
pop
pop
xchg
fisubrl
roll
lods
jns
or
xor
mov
fdivr
clc
lret
push
enter
scas
and
dec
testb
ss
sbb
ds
sub
cmp
lret
lret
add
cmp
andl
lods
lret
fidivl
xchg
adc
jle
xchg
dec
test
pop
sub
mov
outsb
dec
scas
sbb
cmpsl
adc
lock
xor
adc
test
and
mov
or
mov
sub
sub
aaa
sarl
dec
mov
fistl
dec
je
movsb
add
or
mov
rcrb
mov
adc
ja
nop
add
shl
xchg
in
movsb
fmull
aam
aaa
dec
inc
xor
or
jo
inc
repz
ret
or
mov
cmp
xchg
pop
scas
xor
xchg
mov
mov
mov
cmp
xor
adc
dec
mov
ss
insb
popf
jl
fbstp
lea
in
repz
mov
je
cltd
or
popa
sbb
mov
dec
sbb
addr16
xor
fwait
outsb
pop
dec
cmp
cmp
jo
call
add
inc
iret
mull
mov
cmp
ja
sub
movl
mov
adc
adc
sub
dec
popf
outsb
mov
cmp
sub
jecxz
add
arpl
mov
inc
cmc
data16
gs
in
and
pop
mov
and
inc
dec
jbe
lcall
repnz
movsl
dec
test
jl
jno
mov
inc
call
mov
or
test
mov
sbb
aaa
mov
jbe
xchg
out
push
imul
add
out
dec
inc
mov
sahf
fidivs
mov
pop
sarl
testl
cmpsb
lahf
subl
push
or
daa
xor
scas
push
lret
and
out
sbb
inc
mov
mov
ds
loope
ret
push
xchg
cmp
dec
je
in
fld
and
arpl
sub
mov
loop
lock
std
mov
add
mov
add
add
sub
push
xchg
outsl
xorl
sar
push
push
rolb
jp
cwtl
sub
dec
add
test
stos
xor
or
inc
pop
cmp
adc
sub
lret
lds
push
rcl
sbb
jp
push
pop
aad
ds
inc
mov
outsl
jmp
push
inc
sbb
fmull
xor
or
and
jb
or
cld
mov
je
adc
sbb
jmp
in
jb
inc
icebp
fiadds
test
insb
or
popf
scas
movsl
int
shr
notb
mov
and
sbb
xor
and
add
cmpsb
icebp
jae
sbb
ret
or
test
push
scas
add
pop
dec
pop
divb
es
sti
das
adc
call
jo
mov
adc
xor
push
jnp
test
jae
movsl
mov
inc
pop
ds
scas
push
cld
lcall
push
adc
sub
jge
push
xor
fstps
push
xor
or
mov
incb
std
mov
adc
pusha
decl
test
shrl
jle
jb
or
scas
lret
scas
dec
sbb
pop
aaa
cwtd
push
mov
and
adc
call
insl
mov
mov
ja
sbb
lahf
pop
ret
aas
and
or
xlat
mov
arpl
cmpsb
push
mov
out
js
xchg
into
pop
mov
stc
cmp
dec
jmp
pop
dec
or
adc
scas
out
stos
lds
ja
jl
sub
mov
xor
jecxz
push
movsl
inc
dec
inc
mov
sbbl
mov
or
and
dec
fmuls
push
mov
adc
or
ficompl
movsb
jle
mov
jecxz
inc
sbb
and
jg
mov
fidivs
pop
pop
sbbb
aam
clc
sub
cmp
xor
int3
mov
aad
negb
push
mov
adc
pop
aad
pop
cmp
and
scas
int
popa
jbe
push
jne
mov
loope
inc
loopne
sti
xor
mov
enter
inc
test
out
sub
shlb
popf
test
sbb
dec
adc
fdivl
fbld
stc
xor
cmpsb
add
jl
mov
call
pop
sti
iret
adc
add
or
xchg
adc
adc
cli
inc
dec
add
mov
mov
rorl
sbb
cmp
enter
sub
cs
mov
push
pop
push
push
sub
sub
cmp
inc
mov
incb
xchg
and
mov
inc
jnp
test
and
stos
push
cmp
les
bound
pop
imulb
iret
add
lods
es
icebp
push
pop
add
loop
mov
hlt
int3
arpl
shr
xchg
pop
stos
dec
sahf
mov
mov
les
mov
dec
jbe
mov
aaa
push
jmp
mov
ljmp
dec
lret
daa
pop
add
push
popa
adc
xchg
adc
test
out
and
jae
inc
add
lods
pop
mulps
cmp
sub
decb
out
movsb
lods
cmc
sub
mov
adcb
sub
ds
loop
repz
adc
and
dec
add
jae
jne
fistpl
lods
fisubrs
xor
push
mov
int
arpl
jo
or
cmp
in
push
fwait
push
stos
xor
icebp
and
pop
lock
fbstp
or
es
or
pop
jne
decl
sbb
xchg
mov
outsl
cmp
sarb
cmp
mov
sub
xchg
leave
pop
lods
sub
ljmp
loopne
and
xchg
cwtl
lret
lahf
adc
mov
cmp
dec
test
inc
insl
lea
jae
fstl
popa
or
sbb
loopne
inc
ds
push
mov
ret
cwtl
jns
mov
mov
push
or
pop
ret
mov
xor
or
sbb
add
sub
clc
push
push
xor
iret
aaa
movsl
mov
pop
clc
cltd
dec
mov
loope
xor
add
aam
mov
mov
movsl
adc
adc
out
lahf
aam
ret
divb
pop
mov
les
lea
repz
push
mov
into
jbe
std
xor
fwait
xchg
int
pop
xchg
orl
icebp
imull
mov
push
es
add
mov
lret
ret
and
in
outsb
fmul
sub
enter
push
enter
lea
popf
pop
setno
stos
icebp
and
icebp
push
jae
jp
lret
pop
or
or
dec
imull
fistps
andb
fidivrl
push
mov
jge
lock
mov
sarl
jb
inc
sub
repnz
cltd
or
jo
insb
mov
imul
or
lahf
add
into
inc
aam
dec
sbb
jp
scas
cmpsb
push
les
and
push
or
mov
add
std
adc
jno
adc
cwtl
mov
jbe
repnz
cmp
fldt
ja
adc
xlat
out
push
mov
nop
fcmovnu
pop
repz
jbe
and
mov
ret
mov
push
and
and
xchg
push
and
mov
jp
cmpsl
fs
push
test
fisubl
out
dec
cwtl
push
insl
mov
sub
sbb
add
loope
mov
fs
mov
mov
adc
aad
cmpsl
pop
jmp
outsl
or
cld
push
into
aas
outsb
xlat
adc
imul
subb
loope
mov
fcom
fisttps
or
or
cs
sahf
arpl
inc
push
cmp
adc
jge
fidivs
lods
jmp
push
enter
push
xchg
ja
pop
popa
mov
cmp
inc
push
outsb
or
pop
mov
ret
lret
fmul
xchg
nop
call
jns
sbb
jmp
testb
ljmp
loope
xchg
lods
insb
imul
mov
push
sub
sbb
cmp
dec
sahf
out
sub
gs
xlat
imul
pop
cmp
and
dec
fstpl
fimuls
test
adc
dec
sbb
cmpsb
ret
mov
cmpsl
push
inc
arpl
rcrl
xor
sub
inc
sub
imul
push
test
shlb
mov
inc
mov
jae
jle
mov
sbb
xor
sahf
pop
mov
dec
das
mov
mov
aad
sbb
icebp
push
lahf
or
xor
cmp
push
xor
add
mov
lret
mov
push
mov
lods
dec
push
inc
dec
mov
es
xchg
gs
enter
mov
mov
add
lock
push
popa
add
mov
sub
hlt
icebp
dec
inc
scas
add
pop
sbb
jl
dec
lods
nop
sub
ss
fs
push
out
jl
test
cli
mov
jmp
or
cmp
cmp
cs
mov
popa
outsb
or
xchg
sub
pop
pop
xor
sbb
sub
mov
and
out
lea
xor
xor
aad
inc
sahf
and
vpand
inc
mov
push
adc
mov
or
pop
add
cwtl
jge
gs
push
cmpsb
stos
xchg
sub
shll
test
std
out
imul
push
mov
cmpl
push
pop
jae
repz
sub
pushf
jnp
push
jns
in
or
movsl
out
aam
xchg
lret
and
pop
clc
push
sbb
pop
aaa
adc
mov
and
imulb
imul
cwtl
jb
adc
outsl
inc
test
in
daa
inc
repnz
je
dec
push
cmc
mov
adc
lds
xor
dec
cld
push
lds
adc
fistpl
clc
or
push
inc
out
adc
test
arpl
mov
xchg
loope
cmp
cwtl
pop
mov
je
mov
jno
gs
cmpsb
cmp
pusha
mov
lcall
jo
pop
test
xor
repnz
ja
je
scas
adc
mov
xchg
mov
jae
test
sub
sbb
cwtl
jmp
inc
dec
sub
sub
pop
adc
test
sub
jg
leave
into
cli
std
xchg
sub
pusha
mov
push
stc
aad
add
loope
mov
xchg
xchg
lcall
sbb
xchg
jns
cld
pop
aad
or
sub
pop
rorl
lods
mov
out
add
das
aaa
pop
lods
outsb
into
mov
outsb
add
xchg
aam
mov
setl
in
aam
rcl
lret
mov
adc
hlt
addr16
mov
jne
out
sbb
mov
xchg
cmp
cmp
clc
stc
mov
testl
dec
cmc
jl
lahf
mov
push
cld
movsl
popf
mov
mov
mov
mov
jl
push
fcomip
lds
jmp
push
or
lcall
sub
lcall
jecxz
imul
sub
imul
cmpsl
test
xchg
sbb
data16
dec
or
xor
scas
inc
incl
and
push
lret
and
and
aam
or
rcr
pop
push
nop
mov
add
pop
pop
movsl
cmpsl
bound
enter
jge
cs
cwtl
cli
addr16
dec
dec
lret
out
pop
cmc
ror
pop
enter
inc
push
inc
outsl
sbb
inc
sub
mov
scas
cwtl
push
repz
in
mov
add
xchg
inc
add
jl
jmp
js
add
mov
test
push
insl
push
dec
into
outsb
lcall
mov
test
adc
mov
push
mov
lods
mov
test
push
pop
into
adc
mov
xchg
xchg
mov
imul
vcvtdq2ps
mov
jo
dec
iret
lds
jb
insb
clc
pause
mov
movsl
pop
and
jbe
jl,pt
jg
in
call
adc
ror
sbb
jmp
push
adc
jle
xor
mov
fldcw
sbb
lock
mov
dec
jmp
xchg
push
push
inc
xchg
mov
pop
adc
jmp
mov
in
or
out
arpl
ss
mov
sbb
push
test
cld
popf
dec
xor
ret
add
fstpt
leave
and
xlat
fucomp
pop
outsb
push
sbb
xchg
mov
rorb
cmp
fbld
xor
push
and
shll
and
xor
push
aas
pop
inc
fstps
lods
xor
jae
clc
sub
cld
repz
je
jno
fcomp
xor
fistps
and
fs
fucom
nop
das
ja
icebp
out
cmp
lea
stos
xor
adc
mov
push
cmp
dec
push
mov
jae
int
rcrl
or
push
nop
jp
cmc
sub
int
xchg
ret
mov
lods
in
push
xor
sbb
stc
jne
fisubrl
jp
hlt
aad
adc
call
fildll
mov
iret
add
ret
jle
inc
lods
xchg
icebp
lock
push
les
pop
mov
repz
sub
push
dec
pop
out
lret
jno
imul
xor
lret
and
into
adc
and
imul
mov
dec
jns
ja
jecxz
push
setg
push
lret
enter
out
decl
pop
scas
ds
cli
mov
inc
pop
pushf
lock
mov
sti
pop
into
push
test
jg
xor
pop
pusha
dec
sub
and
call
movb
notb
jae
xlat
push
pop
mov
sahf
scas
rorl
cwtl
ret
dec
out
shlb
add
xchg
add
jmp
sbb
inc
scas
mov
push
addb
popf
movsb
fcomi
xor
orl
out
fwait
xor
fistps
enter
fildl
push
jae
mov
mov
push
mov
mov
sub
mov
in
and
aaa
adc
pop
shrl
mov
mov
out
pop
xchg
cmpsb
aaa
cli
fwait
test
cmpsl
xchg
cs
nop
jg
icebp
sub
loope
mov
cmp
add
add
dec
cmp
out
rcrl
pop
cmpsb
cmp
daa
cmp
negl
test
in
or
leave
inc
sub
mov
or
test
int
push
shrl
mov
and
sti
pusha
out
cmp
bound
jnp
dec
ja
mov
popf
fstl
jno
lock
addl
add
daa
jg
scas
mulb
add
inc
inc
shrb
dec
mov
mov
and
inc
xchg
cli
inc
into
inc
idivb
rorb
sub
mov
pushf
sarl
jbe
mov
adcl
cs
mov
ljmp
cmp
cmc
gs
pop
mov
push
leave
jbe
scas
rcrb
loopne
enter
mov
lea
add
add
hlt
add
xchg
jns
bound
lods
inc
in
shrl
filds
ds
xor
jb
icebp
xchg
into
push
insb
nop
lods
mov
sbb
jle
push
daa
mov
insl
cmpsl
mov
cld
push
adc
js
movsb
aaa
cmpsl
cmpsb
lods
xor
inc
shlb
mov
jge
pop
inc
sub
test
divb
in
or
sbbb
mov
jbe
mov
and
into
das
leave
inc
in
rol
mov
sahf
cwtl
in
xor
add
xor
push
ss
cmp
cmp
cmp
xchg
sbb
and
sub
jo
lret
sbb
aas
movsb
inc
call
test
maxps
lea
jb
rcl
icebp
clc
repz
inc
xchg
fiadds
out
std
mov
scas
iret
out
mov
aad
ss
xchg
ds
push
mov
cmc
cmp
sub
fadds
out
arpl
loopne
sub
mov
enter
xchg
xchg
fstl
aaa
enter
mov
outsb
jl
add
aaa
into
xchg
jbe
aaa
loopne
aad
sbb
jno
sbb
xchg
mov
imul
rcll
mov
push
lahf
cmpsl
js
adc
es
sti
imul
lcall
imul
mov
pop
fstl
ret
nop
xor
adc
stos
sub
inc
ds
pushf
lods
adc
ja
or
pop
pop
add
xchg
pop
push
jmp
jp
mov
and
jecxz
aas
inc
or
fcom
out
clc
gs
pop
inc
or
xor
scas
xchg
out
fsub
sbb
hlt
push
lods
inc
ret
int3
es
popf
test
arpl
mov
push
fdivp
push
sti
mov
popw
arpl
mov
mov
divb
and
jge
daa
imul
xor
stos
cs
jl
xchg
scas
rcll
inc
out
mov
push
or
aas
into
insb
in
test
cmp
adc
sub
mov
cld
xchg
pop
jne
out
mov
xchg
dec
cmp
jb
aam
fistpl
jo
mov
cwtl
dec
imul
fwait
adc
ljmp
fidivs
push
xor
xchg
in
and
lea
fldcw
popf
xchg
out
inc
xor
xchg
test
cmpsb
call
fwait
in
test
add
es
or
rclb
inc
enter
fistps
clc
pop
sub
mov
sahf
pop
aad
aam
mov
repz
jg
in
scas
in
fs
leave
dec
adcb
and
jmp
adc
mov
jno
les
mov
ret
mov
les
pop
fbstp
ds
or
jl
orb
int
das
stos
jmp
push
lcall
or
mov
cli
fistpll
cmp
jb
cmp
imul
mov
and
pop
pop
fwait
mov
js
out
out
mov
scas
icebp
jmp
or
nop
fmull
or
stos
xor
jp
mov
nop
add
sbb
dec
push
in
jb
pop
add
subl
jl
mov
sti
pop
jbe
dec
xchg
icebp
cld
cmpsb
and
fldl
mov
pop
dec
fcmove
out
insb
mov
movsl
or
pop
mov
arpl
test
jl
sbb
mov
ja
sahf
gs
inc
inc
mov
jo
fimuls
sti
out
pop
lcall
je
lcall
pop
out
pop
jo
bound
testl
cmp
sbb
repz
sti
cmp
loopne
push
mov
loope
push
lahf
inc
add
and
les
jle
mov
sbb
xor
subb
xchg
pop
shl
clc
pop
in
sbb
into
sub
imul
lcall
or
push
cli
push
adc
push
je
jne
movsb
push
push
sbb
and
lock
add
mov
enter
mov
pop
cmp
mov
mov
mov
push
fcompl
out
fisubs
clc
dec
lea
or
loope
in
push
daa
push
xlat
stos
loop
add
pop
jns
dec
mov
sub
mov
ja
frstpm(287
mov
pusha
xor
add
push
outsl
cwtl
hlt
adc
data16
ljmp
outsl
lret
int
push
fstpt
aaa
inc
xorl
sbb
mov
lea
dec
les
mov
test
lods
test
popa
movsb
jp
stos
fadds
push
lcall
lcall
push
pop
negb
inc
ljmp
shll
loopne
subl
sub
ret
and
dec
lods
push
sbb
dec
mov
mov
jle
ds
push
mov
data16
jle
scas
in
push
lahf
mov
adc
aad
mov
fdivrp
adc
cmp
lcall
mov
test
sub
pushf
inc
test
jns
outsb
sti
lods
dec
leave
notl
rolb
jge
out
dec
jns
fistpll
stc
add
fwait
icebp
sahf
cmp
cli
add
std
in
iret
pop
cmp
mov
add
js
jmp
inc
js
xlat
or
into
push
imul
in
std
push
cmp
xor
adc
sub
jmp
icebp
sti
test
outsb
pop
jl
dec
das
div
jb
addr16
push
xchg
fcomi
lahf
faddl
pop
adc
outsb
mov
xchg
xchg
pmuludq
insb
mov
dec
dec
out
xor
and
xchg
ret
in
lcall
fsts
mov
xchg
or
push
in
cltd
xor
dec
xchg
lock
adc
out
dec
inc
add
shlb
xchg
sub
cmp
int3
jg
mov
and
inc
arpl
pop
push
dec
cs
jb
adc
mov
jnp
pop
mov
adc
and
ret
push
stc
insb
sbb
or
hlt
or
xor
in
jb
out
jbe
mov
sarb
mov
movsb
fwait
aas
loop
in
inc
inc
push
inc
sub
mov
pop
out
out
lods
pushf
out
dec
ss
clc
imul
dec
jae
movsb
mov
insl
bound
imul
repz
lahf
mov
mov
popa
adc
or
lret
mov
inc
mov
idivl
dec
adc
fdiv
out
cld
out
loop
sahf
add
outsl
jecxz
cltd
fistps
push
push
js
enter
add
mov
insl
push
test
rorb
mov
sbb
push
xor
push
aaa
cmpsb
dec
loop
loope
jbe
enter
loop
cli
xor
out
jae
and
mov
or
inc
andb
xor
sbb
jle
adc
or
jg
in
and
ljmp
sub
mov
in
rorb
movsb
jle
xor
pop
js
flds
sub
mov
cwtl
out
jbe
rolb
xor
add
call
pop
sahf
pop
or
rolb
sub
in
test
pop
in
mov
dec
xor
mov
jp
cli
test
out
mov
mov
sahf
test
imull
subl
sub
sub
test
inc
js
rorb
jp
cmpsb
pop
mov
sbb
cmp
fmuls
idivl
adc
mov
jmp
cmp
and
jg
in
add
pop
in
int
or
adc
and
push
das
inc
jne
sarb
mov
aas
mov
pop
gs
push
daa
jge
or
jns
mov
iret
inc
out
ficoml
mov
adc
mov
gs
inc
aaa
mov
sbb
add
fstpl
pop
push
jbe
xor
cld
sti
daa
add
clc
lcall
cmp
sbb
imul
push
push
shll
push
xchg
in
sahf
mov
test
aad
arpl
mov
adc
push
orl
icebp
xchg
mov
ds
lock
int
popaw
pushf
insl
cmpsl
push
pop
mov
or
pop
jae
ja
not
dec
popa
push
pop
or
inc
jmp
js
xchg
int3
and
cwtl
out
mov
jbe
insl
xchg
push
mov
test
clc
stos
aaa
sub
cmp
xchg
or
out
push
xor
push
ret
cmp
dec
popa
push
sbb
inc
jle
pop
pop
push
push
mov
clc
jmp
imul
add
addr16
pop
pop
scas
fs
pop
addr16
sahf
sub
fstps
push
adc
fildll
lahf
xchg
and
inc
sub
pop
rcr
xor
or
mov
lcall
arpl
jnp
nop
pop
and
jnp
add
in
rcrl
loopne
dec
sbb
mov
xchg
jne
or
sahf
dec
arpl
dec
loop
roll
sub
and
movsb
sbb
mov
xchg
fwait
xchg
outsl
pusha
and
lret
sbb
es
aam
ds
cmp
out
test
dec
add
ret
dec
fbstp
adc
and
lret
andl
out
cli
imul
inc
lods
fs
rcll
sarl
lret
cmp
std
xor
push
stos
inc
add
or
or
jo
push
rorb
adc
fidivs
outsb
jg
ja
int
jnp
stc
fildll
cli
jnp
pop
and
mull
cmp
imul
cwtl
sbb
jns
imul
dec
lds
or
mov
sahf
mov
pop
mov
roll
imul
mov
pop
sub
test
rorl
add
cmp
xchg
in
and
push
and
insb
and
notl
mov
cltd
data16
jae
dec
cli
fidivl
mov
jmp
mov
movsl
push
popf
xor
fs
pop
jmp
inc
and
out
loop
and
pop
fistps
test
pop
in
cmp
or
sti
test
popl
aas
in
fidivs
cs
cmpsl
xor
sahf
loop
mov
out
cltd
loope
mov
aaa
jmp
sbb
sbb
bnd
std
pop
mov
mov
repnz
jecxz
mov
lea
pusha
mov
adc
push
fsubrs
clc
add
movsb
cmp
or
call
jmp
mov
xor
sbb
lea
and
pop
mov
aam
imul
jecxz
data16
mov
movsl
ss
std
xchg
outsl
mov
sbb
hlt
xor
jno
sub
push
jge
nop
sub
in
cmp
push
inc
mov
iret
popf
add
push
stos
mov
iret
mov
xor
lods
jmp
cmp
adc
test
or
leave
shrl
pop
out
pop
iret
psrlq
mov
adcl
fs
xor
test
add
pop
pop
jbe
lods
mov
push
in
outsb
sbb
cmp
out
sbb
outsb
pusha
or
outsb
cmp
cmc
les
scas
xchg
aas
js
cmp
sarb
fbstp
xchg
loope
mov
loope
jo
inc
clc
adc
arpl
test
mov
jo
mov
mov
xorb
inc
mov
adc
data16
mov
fisttpl
or
xlat
jle
pop
add
cmp
test
dec
inc
outsb
int3
push
mov
jb
clc
pushf
push
jg
out
fs
jmp
inc
lahf
pop
xchg
mov
adc
or
and
jecxz
jl
mov
sub
mov
mov
xor
pop
fcomi
into
fdivr
data16
call
js
mov
inc
jmp
jecxz
sti
add
mov
rcrl
arpl
inc
andl
mov
or
mov
int
les
mov
pop
jg
lds
loop
cmp
mov
test
subl
sub
mov
sub
jbe
mov
sahf
jae
pusha
lds
push
pusha
sbbb
enter
dec
insl
icebp
push
daa
rcrb
xor
cmp
in
js
sahf
sbb
rcr
sub
lds
lcall
fcomps
rorl
fsub
lret
in
js
mov
out
xchg
jle
mov
lods
cmc
jp
add
pop
fldenv
imul
push
fldlg2
inc
jmp
adc
inc
aam
pop
mov
rcrl
push
mov
pushf
into
shlb
mov
add
das
leave
mov
xor
jnp
mov
sbbb
xor
xor
jp
fnstcw
mov
mov
push
mov
and
scas
loope
addr16
xor
shl
push
popa
lret
enter
mov
out
out
inc
cwtl
stc
fstl
lret
addr16
ds
sbb
lds
pop
addr16
or
sbb
dec
shl
leave
mov
cwtl
mov
pop
xchg
popa
fmull
addr16
add
dec
mov
xchg
stos
add
ss
mov
xchg
mov
adc
popf
xor
cmc
xor
adc
add
rcrb
jg
loopne
out
cmc
mov
or
dec
data16
cmp
stos
loope
ljmp
jge
and
test
push
push
sub
ljmp
cmpsl
nop
movsb
add
fcomip
sub
jnp
mov
rcrl
fisubrl
das
andl
pop
sbb
xlat
fsts
pushf
sub
mov
cmp
mov
orb
push
loopne
pusha
popa
and
outsl
pushl
stos
inc
jbe
fildl
mov
jle
cmp
and
fisttpll
nop
in
mov
inc
push
dec
fcomps
pop
or
xor
pop
push
mov
out
and
in
fdivr
jge
xor
icebp
lock
outsb
cmp
pop
cmp
xor
and
pop
dec
int3
inc
xchg
sbb
out
push
mov
pop
adc
leave
cltd
pop
adc
int
lea
loopne
inc
test
lahf
push
dec
out
in
shlb
xor
fisttpl
fstl
pop
es
add
stc
cmp
lret
push
push
dec
inc
in
shrb
mulb
scas
clc
xor
mov
roll
pop
inc
sar
push
xor
mov
or
pop
mov
int
shlb
mov
xchg
ss
push
rclb
ss
mov
and
pop
cmp
das
sbb
xchg
dec
inc
mov
cmp
mov
dec
xor
mov
lcall
mov
int
int
jo
jge
push
inc
dec
fstpt
mov
scas
lods
jge,pt
adc
out
test
mov
push
inc
xchg
sbb
adc
and
xor
fwait
cwtl
jg
adc
ret
lods
fdivl
sahf
mov
call
lods
or
cmp
pop
lods
pop
push
insb
mov
xchg
cs
dec
mov
insb
inc
lret
dec
add
push
subb
and
fwait
into
push
mov
xor
xchg
sub
push
push
movsb
shrl
dec
push
ret
ja
add
sbb
repnz
clc
mov
pushl
dec
push
aas
push
test
xchg
in
xor
inc
dec
xchg
and
jecxz
or
sbb
mov
mov
lea
cmp
sbb
adc
sbb
dec
mov
sti
push
test
std
cmp
popa
jb
roll
insl
mov
lods
test
push
hlt
nop
pop
sbb
mov
xchg
mov
mov
inc
and
cmp
scas
cli
mov
dec
push
adc
pusha
in
movb
popf
pop
shll
dec
mov
out
pop
sbb
dec
pop
sahf
cltd
and
dec
in
jbe
fistpl
push
mov
jecxz
nop
xor
xchg
or
mov
cli
pop
imul
int3
popf
les
xchg
or
out
mov
orl
jbe
fnsave
iret
xchg
add
insl
test
jecxz
int
pusha
mov
lods
sbb
cmp
push
pop
idivl
in
mov
xchg
mov
pop
jo
mov
test
pop
ss
push
aam
mov
mov
and
hlt
pop
xor
dec
pop
cld
in
callw
loopne
popa
sub
fisttpll
sub
sub
adc
sub
mov
jnp
iret
aam
cmp
inc
out
and
mov
test
xlat
test
mulb
xor
cmp
clc
adc
cltd
lea
dec
and
in
mov
pop
mov
sahf
test
jne
mov
pop
enter
adc
jns
mov
mov
sub
xor
add
add
xchg
xor
dec
movsb
xchg
push
cld
jnp
movsw
test
jnp
shrb
mov
inc
lret
or
adc
fmuls
jbe
incb
pusha
in
lret
loop
cld
inc
push
sbb
pop
imul
pop
xlat
and
xor
pop
outsb
ret
mov
inc
aam
add
dec
jns
xchg
mov
cli
xor
xor
out
nop
push
push
popf
int3
popf
bnd
mov
push
addr16
negb
in
push
sub
pmullw
ds
jmp
shlb
dec
das
inc
test
push
cli
mov
dec
push
cmp
add
aaa
repnz
sahf
aaa
dec
das
pop
push
pusha
fwait
mov
xchg
inc
scas
xchg
push
stos
jne
loop
cmp
sarl
push
insl
loope
push
adc
inc
es
push
dec
jno
sahf
outsl
cwtl
in
inc
aas
inc
add
movl
sbb
cmp
outsb
insb
jmp
shll
in
shr
sub
sbb
out
test
jl
mov
and
fucomi
rsqrtps
rcrb
aas
arpl
seto
fimuls
mov
add
int
ret
jae
adc
pushf
dec
lock
xor
cmp
lea
cmp
xor
adcb
push
cmc
mov
fildl
sahf
shl
repz
mov
lea
pop
aas
iret
pop
movsl
inc
mov
loope
sub
add
adc
xchg
out
xorl
pop
in
add
pop
mov
sub
jae
push
pushf
xor
jo
shl
sahf
loopne
jp
or
pusha
cwtl
test
sbbb
popa
stos
adc
repnz
cmp
push
cmp
cmp
add
cwtl
inc
pop
xor
jle
mov
arpl
xor
jecxz
jecxz
jge
mov
pop
mov
loop
dec
inc
push
ja
repnz
andb
cltd
jle
clc
movsl
dec
mov
xchg
push
fbld
and
into
fsubl
sti
test
pushf
outsb
call
cmpsl
cmpsb
stos
lret
sbb
fcoml
scas
mov
icebp
movsl
sarl
dec
ljmp
xchg
jae
call
shrb
mov
add
das
cmp
jecxz
ds
cld
xchg
fisttpll
sub
dec
pop
adc
popf
scas
pop
mov
fiaddl
ja
int
cmc
cmp
out
daa
mov
les
xchg
xor
mov
add
cmp
test
lcall
xchg
add
mov
inc
mov
ds
jno
adc
lds
pop
sub
xchg
insl
mov
jg
push
nop
jns
cmp
je
popf
inc
lret
stos
lods
pop
mov
push
outsl
mov
imul
fadd
scas
mov
and
push
dec
repnz
dec
xor
out
scas
sub
mov
xchg
adc
daa
sub
repz
push
jl
lret
jle
push
adc
xlat
pop
jbe
pusha
loopne
jmp
push
or
inc
rcl
cli
mov
outsl
cmp
inc
popa
jb
into
je
sbb
jnp
sti
jecxz
insl
sub
inc
lea
test
xor
mov
pushf
xchg
aaa
jl
add
jge
ljmp
inc
cmp
outsl
jge
stos
jo
sbb
mov
aaa
jp
mov
xchg
cmp
mulb
xor
in
lret
out
lahf
in
inc
mov
sahf
pop
jmp
data16
push
bound
push
insb
out
lods
imul
mov
dec
xchg
movsl
sub
push
lock
mov
dec
jle
push
in
jl
xor
out
xchg
addb
pop
mov
push
imul
shrb
pop
mov
mov
std
sub
in
xlat
fisubrs
mov
push
jno
fistps
daa
pop
dec
fistpll
xchg
mov
stos
dec
rclb
push
lds
pop
push
push
pop
push
aad
cmp
aad
adc
mov
xchg
outsl
dec
je
pop
inc
or
push
in
sahf
inc
inc
mov
mov
leave
nop
cld
iret
sbb
xchg
pop
adc
shll
lcall
jno
pop
xlat
ja
push
push
or
pusha
xorb
or
mov
popa
fmull
adc
in
fidivs
fbstp
lea
mov
lahf
out
adc
arpl
jmp
test
mov
ja
popf
stc
inc
out
pop
sbb
inc
stc
and
adc
cwtl
mov
in
inc
fnstenv
js
push
xor
xchg
sub
stos
xorl
or
cmovg
repz
jbe
fmul
ja
shll
das
dec
jb
bnd
je
xchg
ds
pop
es
and
push
lret
bound
lret
xchg
movsb
cmp
cmp
pop
sub
mov
into
xlat
lcall
jne
hlt
subb
sub
jmp
inc
push
cmp
imulb
xor
adc
cmp
sbb
jno
inc
pop
mulb
shrl
lds
jp
mov
pop
divb
in
sub
push
xor
push
or
shl
jg
jge
in
les
cmpsl
rcrb
mov
dec
cltd
leave
lret
jo
out
cmp
xchg
push
stc
jg
cmp
xchg
inc
dec
jne
minps
cwtl
cmp
and
sub
movb
push
sahf
mov
int
push
hlt
adc
ss
out
sbb
outsb
mov
dec
xor
jbe
push
mov
roll
jge
js
stos
js
jnp
pop
fdivl
push
addb
xchg
mov
push
sbb
mov
negl
jne
adc
jmp
pop
out
pop
shl
push
sbb
mov
jno
cmpsl
xor
jnp
scas
fimull
push
inc
xchg
insb
sahf
dec
rolb
push
imul
adc
mov
ss
das
pop
cltd
pop
ja
push
arpl
sub
daa
pop
das
dec
out
adc
add
mov
mov
adc
leave
cld
sub
jmp
das
xlat
jbe
add
push
push
adc
gs
movsb
sub
ret
pop
arpl
push
mov
es
jl
pusha
ljmp
das
jge
je
adc
inc
adc
pop
test
xor
mov
lret
in
sub
repz
outsl
mov
incb
cli
ficompl
xor
shll
sub
mov
xchg
in
stc
dec
jnp
data16
mov
test
out
and
jno
xchg
mov
push
jmp
pop
xor
test
movsl
iret
jl
pop
insl
enter
shlb
call
out
cmp
xchg
lea
fwait
sti
jecxz
dec
cmpsb
cmpsl
mov
cmp
push
mov
cli
xchg
loop
and
mov
repz
iret
or
push
cmc
mov
ficoms
jge
out
out
int
aas
repnz
xchg
xor
adc
out
add
adc
cmp
lret
outsl
adc
cld
add
aad
arpl
mov
cmp
pop
out
das
mov
dec
or
sahf
push
out
push
fldcw
movsl
les
jmp
pop
out
dec
stc
int3
or
dec
dec
fsubrs
jae
in
and
and
mov
push
repz
pop
pop
lds
mov
ficompl
push
sbb
ljmp
lods
stos
jle
add
or
xchg
scas
add
in
add
mov
xlat
sahf
call
jmp
mov
insb
mov
gs
cld
xor
and
les
imul
pop
push
pop
pop
es
push
ret
jg
popa
mov
push
aaa
inc
in
xacquire
ds
sub
ret
or
daa
fdivl
pop
sbb
imul
rcr
loop
xchg
orb
in
addl
xor
aas
scas
repnz
xchg
push
cmpsl
out
lods
lock
push
inc
scas
pop
out
xlat
xchg
sbb
scas
dec
jbe
xchg
fistl
xor
ret
in
ret
add
sbb
addr16
hlt
xor
and
sbb
cltd
xchg
int3
jmp
mov
adc
xor
pop
pop
cmc
pop
mov
jmp
cmp
add
mov
dec
sub
pop
pop
or
adc
mov
or
mov
ret
mov
je
jg
adcl
pop
lock
jnp
jns
sbb
icebp
call
das
dec
movsb
cs
sbb
or
test
sbb
insl
movl
mov
cmp
mov
cld
leave
xor
jns
pop
mov
mov
mov
shl
lret
call
fs
sub
aad
fldt
cmp
pop
call
push
cmp
decl
push
sub
adc
xor
insl
adc
ret
nop
mov
jmp
pop
out
xchg
pop
cld
sahf
inc
cmp
mov
xchg
and
xchg
dec
sub
push
dec
sbb
inc
ds
repnz
and
shll
test
shlb
adc
xor
sub
cwtl
sub
pop
mov
mov
dec
cltd
jp
gs
and
xchg
push
add
enter
sbbl
fcompl
mov
in
lds
int
ret
and
nop
insb
cmp
repz
imul
add
mov
lods
dec
and
adc
or
notl
shrb
loope
add
enter
loop
test
mov
mov
out
cmp
bt
mov
sub
dec
xchg
mov
cmp
push
jl
repnz
pop
xchg
loope
pop
jp
lods
and
in
outsb
jb
cmc
dec
aad
xchg
jo
push
icebp
int
movsb
sub
dec
xor
inc
adc
fnstcw
test
cmp
jnp
xor
rorl
outsb
sbb
loope
hlt
fcoms
sbb
pop
push
adc
adcl
cld
aad
mov
jo
xchg
mov
add
inc
push
stos
cwtl
xchg
mov
rolb
outsb
inc
in
ret
pop
lret
cmpsl
test
cmp
add
lea
sbb
lcall
mov
dec
sbb
inc
jno
fmuls
std
imul
outsl
lea
fs
outsl
aad
lret
fnstsw
repz
orl
pop
dec
xchg
xor
inc
xor
test
jle
xchg
xor
push
cmp
sbb
push
inc
les
mov
mov
sbb
sub
jle
inc
insb
mov
sub
adc
test
or
aas
repz
or
xlat
out
push
scas
lods
sahf
pushf
repnz
negl
cmp
dec
mov
mov
jno
je
mov
cmp
mov
jmpw
fsts
loop
mov
cmp
sti
shr
jmp
fbld
cmp
adc
jo
xor
push
iret
cmp
push
sti
push
out
or
sbb
jnp
jbe
sub
mov
push
aam
inc
add
sbb
mov
into
add
cmpsb
cmpsb
rcrl
ret
mov
jmp
dec
sahf
cwtl
sbb
jns
push
stc
jg
loop
int3
test
mov
inc
repnz
and
xor
pop
aas
out
je
mov
sbb
push
shrb
outsl
adc
sbb
pushf
dec
jp
mov
inc
in
inc
lds
add
xor
jbe
mov
pop
movsb
fistps
adcb
and
int3
xchg
add
stos
insb
repnz
stc
inc
loop
xchg
xlat
pop
xchg
js
dec
hlt
xchg
mov
dec
outsb
lods
in
inc
andl
mov
sbb
nop
mov
xchg
pop
xlat
add
rorb
push
cld
mov
add
shrb
fmull
jb
pusha
imul
call
or
dec
cli
xchg
mov
cmp
sarl
dec
mov
das
push
aaa
addr16
mov
mov
fldenv
mov
cld
inc
ljmp
rorb
jbe
fsubr
push
cmp
ljmp
jge
sti
xor
rorb
cmp
inc
lcall
outsl
pushf
fdivl
jge
sbb
mov
jo
in
jns
sbb
lcall
sbbb
sbb
call
pop
xchg
push
clc
sbb
popf
ja
and
imulb
sarl
mov
nop
dec
xchg
jge
mov
cli
mov
insl
pop
lcall
xor
loopne
xchg
xor
in
jmp
ljmp
inc
sub
test
repnz
in
sub
xchg
loope
adc
ljmp
sbb
cs
roll
inc
push
mov
add
jne
rclb
adc
fsubrs
lcall
mov
push
mov
pop
pop
push
imul
lcall
pop
in
scas
cmp
xchg
dec
std
out
fs
rcll
xor
jle
sub
adc
les
mov
fnstcw
sbb
lds
out
xor
push
cmp
or
clc
xor
stos
jge
lret
inc
cld
les
repnz
mov
lahf
sahf
sbb
int3
in
sub
insb
sub
sarl
lcall
cmpsl
adc
add
cmp
sbb
out
push
jmp
ret
rclb
adcb
cmpb
cmp
outsb
cs
scas
dec
and
nop
in
add
cli
sarl
lock
in
xchg
mov
push
mov
push
ficoms
int3
or
jp
cmpsl
xchg
mov
jnp
loop
dec
sub
cmc
cli
repz
stos
sub
pop
and
xchg
insw
dec
sarl
push
movsb
cmp
movsl
xchg
mov
xchg
test
push
sub
sub
stos
push
inc
test
jge
xor
cwtl
aam
push
xor
mov
repz
cmpsb
outsl
cltd
jnp
outsb
add
push
cmpsb
add
test
lock
mov
dec
popf
outsb
push
sub
pop
xor
sub
jmp
push
add
inc
lods
mov
lods
dec
cmp
lea
mov
xor
sbb
sub
js
or
ss
mov
jne
repz
gs
sbb
or
dec
xchg
jne
mov
inc
push
and
in
stc
xor
stc
or
sbb
popa
mov
scas
loope
and
shll
and
fwait
das
ret
arpl
movsb
fbstp
outsb
jp
inc
xchg
arpl
dec
add
lods
mov
mov
mov
cwtl
pop
add
addr16
sahf
push
pop
fimull
movsl
ret
cmp
push
or
push
sub
add
xchg
mov
test
xchg
orb
mov
in
mov
outsl
jo
push
dec
stos
mov
into
leave
lods
xchg
push
loop
xchg
cs
sti
out
mov
jge
cs
fmul
jle
push
xchg
lods
jnp
pop
jp
fdivrl
sub
lods
or
mov
cld
js
ss
or
scas
in
ds
out
insl
lret
jb
xchg
inc
les
xchg
mov
pop
mov
cli
rorl
mov
inc
movsl
jne
imul
insb
jne
sbb
out
inc
pop
cmp
ret
lret
jo
pushf
aad
cmpl
cmp
push
jg
pushf
imulb
rcl
and
jg
push
bound
mov
cmc
adc
dec
mov
comiss
movsb
jge
and
adc
pop
cmp
pop
cltd
ret
jne
stos
ss
push
pushf
and
cmpl
cld
fcoml
mov
mov
cli
stos
pop
sbb
fldcw
push
ss
stc
mov
aam
push
adc
inc
pop
pop
clc
sub
xchg
lods
sbb
js
pop
subl
mov
jge
or
cmpsb
push
sbb
mov
add
jg
xor
cli
dec
sbb
stc
xchg
pop
and
cmpsb
dec
arpl
fdiv
and
push
sub
push
addr16
and
xor
ss
adc
xchg
pop
rolb
movsb
sub
jl
nop
shlb
jmp
xchg
mov
dec
fs
shr
das
pop
mov
inc
aaa
insl
xchg
lahf
adc
pop
rorl
bound
aam
mov
cmp
ja
rcl
and
movsb
popf
shrb
out
shll
outsl
push
dec
gs
rorb
push
push
fdivrs
or
or
pop
lret
dec
pop
mov
pop
sbb
ret
lods
xchg
sar
inc
jecxz
ds
push
ss
int
pop
lahf
pop
or
jnp
out
clc
jbe
aad
call
and
jb
push
rolb
bnd
pop
xchg
std
mov
adc
pop
mov
movsl
xor
daa
in
cmp
movsb
cmp
repz
and
mov
popf
leave
cmp
mov
push
fmull
inc
add
pop
and
dec
mov
mov
xor
das
hlt
ret
sub
xlat
ret
pop
cmc
pop
pop
jno
loop
int
scas
std
pop
in
push
push
inc
mov
xor
or
mov
adc
ret
xor
out
icebp
lods
pop
pop
inc
add
fidivs
dec
adc
and
push
and
cmp
or
mov
daa
es
adc
cli
outsl
lds
pop
cmp
repnz
jae
adc
pop
cmp
jb
push
out
fbld
mov
lods
xorb
sub
mov
inc
xchg
jp
jmp
xor
test
inc
xor
incb
sub
mov
inc
add
sahf
fsubp
rclb
cmp
imul
inc
inc
push
jecxz
pop
lahf
jg
movsb
mov
sbb
ret
je
fwait
pop
outsb
test
imul
pop
xchg
loop
test
lds
in
out
stc
rcrb
jno
mov
xlat
mov
out
inc
mov
nop
mov
push
ret
jg
data16
cs
cmc
lods
out
pop
jg
push
and
es
in
inc
cmp
test
push
addr16
jbe
addr16
fcomps
sbb
add
or
inc
les
dec
int3
adc
pop
add
lods
stc
rcrb
out
movsl
xor
mov
pop
das
mov
fildll
inc
lock
and
enter
mov
mov
lods
adc
sbb
out
inc
inc
jle
bound
add
mov
cltd
jae
fiadds
fstl
cmc
imul
mov
ret
xlat
pop
xchg
inc
inc
or
mov
cmc
sbb
mov
gs
popa
jno
adc
adc
shlb
xor
cmp
cmp
jmp
jmp
cmpsl
mov
dec
adc
cld
stc
push
sbb
pop
cmp
push
push
imul
repz
jmp
mov
test
aas
push
cltd
push
loope
in
into
shl
add
aad
xchg
sub
enter
icebp
adc
mov
push
mov
loopne
xchg
fcmovnu
xchg
int3
xchg
cmp
insl
dec
sahf
cwtl
int
push
das
ret
xchg
fwait
xchg
repz
mov
mov
stos
scas
outsl
popf
popa
or
gs
push
gs
sub
cmc
out
imul
outsb
pop
push
out
out
mov
ficoms
mov
pushf
mov
pop
loope
ds
ret
fisubrl
aad
das
call
bnd
insb
ss
push
sub
or
and
movsb
pop
mov
call
xor
push
jge
and
adc
aad
pop
and
mov
fstl
jmp
ret
xchg
add
je
fimull
iret
or
push
sub
pop
jno
mov
dec
loopne
std
addr16
mov
pop
pop
rorl
out
popf
sub
jecxz
push
push
sub
test
push
jnp
mov
insb
push
jo
xor
cmp
jmp
lret
int
and
idiv
sub
cmpsl
pop
push
xchg
test
movsl
sbb
imul
mov
dec
mov
fmull
cmp
sub
into
jecxz
mov
sub
xorl
lcall
repnz
aas
test
out
mov
jge
sub
mov
mov
add
cs
pusha
out
leave
daa
mov
xor
gs
mov
lods
mov
sbb
insl
dec
popa
scas
cltd
movsb
lret
pop
dec
clc
push
pop
xchg
lods
sti
add
test
dec
loop
cmp
sub
stos
lret
cmp
lods
mov
inc
mov
push
cmp
mov
or
mov
and
shlb
dec
adc
xchg
or
sub
cmp
push
stc
leave
cmc
or
sub
out
mov
push
inc
inc
js
shrl
and
cmp
mov
dec
stos
cld
mov
mov
lret
pusha
xchg
sbb
jno
mov
cltd
shl
into
out
mov
mov
aad
mov
loope
cmovnp
push
stc
xchg
inc
std
movsb
insb
setp
sbb
xchg
leave
sbb
vcvtps2dq
push
jae
in
test
jo
lret
sbb
jp
ja
mov
sbb
hlt
cltd
pusha
loope
mov
inc
jl
sub
gs
cmp
xchg
cld
lcall
pop
jmp
aad
cwtl
jge
and
je
pop
push
mov
and
push
mov
push
out
sahf
push
push
scas
sbb
inc
add
jne
inc
sbb
push
gs
scas
mov
and
rclb
pop
orl
js
icebp
and
mov
or
movb
dec
jo
and
xchg
fimull
mov
jns
jne
aam
jns
rcrl
mov
or
add
add
stos
clc
fidivs
adc
or
cs
xor
xchg
stos
scas
jae
enter
dec
es
js
je
dec
divb
iret
lods
out
push
jmp
push
es
xor
or
std
jns
daa
subb
lea
mov
cmpxchg
ret
adcl
cmp
sub
mov
add
jnp
rcr
push
stos
push
dec
test
jb
lcall
jg
das
dec
outsb
pavgw
mov
adc
cmp
push
shlb
jl
jmp
cs
lahf
call
scas
stc
movsb
fbld
inc
sub
enter
mov
fadds
sub
outsb
loop
gs
jae
test
cltd
fcomp
jne
fistpl
dec
data16
lcall
cmpsb
sub
movsb
insb
insl
push
mov
mov
in
repz
ret
jno
xchg
jg
sub
cmp
mov
das
xchg
subb
cmp
call
inc
jno
insl
mov
gs
fidivl
hlt
outsb
dec
mov
bound
cmpsb
fists
xchg
adc
je
leave
sbb
in
insl
push
loope
dec
jbe
mov
mov
push
jmp
sub
aaa
or
testl
cli
sub
mov
mov
dec
fs
sbb
fisttps
lahf
sbb
scas
jl
mov
inc
test
pop
inc
and
pop
jle
cwtl
dec
sub
outsl
les
sbb
add
push
cmpsb
inc
roll
je
repnz
xchg
in
imul
push
into
sub
pusha
push
sbb
insb
or
arpl
out
pop
sbb
imul
mull
int
and
mov
loopne
loope
aam
push
xchg
cmp
inc
xor
xchg
xor
or
mov
jecxz
les
xor
scas
mov
roll
les
or
mov
xchg
in
mov
inc
pop
ret
push
movsl
xchg
dec
jae
bound
adc
in
mov
cwtl
stos
add
mov
daa
jae
jnp
loopne
mov
pop
adc
inc
jecxz
push
outsl
ret
movsb
mov
jmp
mov
lds
xor
cmpsb
jle
insl
cmp
push
int
pop
cmp
mov
hlt
out
xchg
adc
mov
jno
outsb
or
push
cltd
fsts
ja
test
or
lods
inc
mov
pop
or
test
sahf
ret
xchg
jp
jg
inc
shl
mov
xor
pop
scas
pusha
enter
inc
jns
aad
xchg
dec
push
cltd
test
popa
and
jle
jmp
test
xor
dec
mov
cmp
mov
inc
add
mov
push
nop
aam
cwtl
pop
inc
mov
push
inc
jbe
dec
scas
popf
in
scas
loopne
mov
inc
jb
xor
mulb
and
xchg
fabs
sbb
lcall
jno
pop
push
aas
mov
sub
and
sbb
adc
push
add
popf
pop
add
and
xor
das
je
push
in
jno
or
and
outsl
mov
push
and
imul
pop
xchg
mov
loope
cmpsl
xor
push
dec
xor
mov
xor
cmpsl
inc
and
popa
jb
imul
ret
lahf
out
lea
daa
lods
loopne
out
cmp
ficomps
xchg
add
mov
test
pop
hlt
xor
lret
cmp
and
sub
push
es
outsl
je
xor
rorl
push
or
pop
flds
mov
pusha
jge
fisubrl
xchg
and
and
jno
insl
fdivrp
imul
mov
dec
inc
enter
dec
js
ror
sbb
pop
and
sbb
pop
jae
xor
test
push
cli
inc
stc
imul
loope
cld
mov
faddp
mov
inc
mov
ret
xor
inc
mov
add
push
push
mov
ror
aad
xchg
or
jmp
test
ret
mov
testl
or
fstp
push
mov
lcall
ret
xchg
sbb
lods
loop
sbb
pop
jecxz
cmp
inc
rcrb
cld
fs
jnp
outsb
test
add
enter
aaa
adc
xor
pop
sub
inc
jae
ror
movsl
outsb
data16
jbe
popa
mov
push
xchg
or
rclb
sub
dec
or
mov
push
imul
or
xchg
cmp
fstpt
syscall
lods
mov
stos
std
cmpsl
mov
movsl
shll
das
adcl
adc
arpl
int3
pop
lahf
pusha
pop
cmc
adc
mulb
cmp
lret
mov
dec
adc
and
jge
mov
mov
gs
iret
xchg
ds
sti
test
inc
shlb
dec
cwtl
dec
adcl
daa
cmp
cmp
ja
xor
push
stos
in
int3
insb
testb
jle
mov
stos
stos
sub
mov
inc
dec
shlb
clc
popa
rcr
fldt
arpl
ds
test
push
imul
lea
test
lds
sub
into
dec
xchg
mov
in
loope
jle
jb
hlt
ja
loopne
test
fiadds
leave
xor
mov
inc
ss
jle
jbe
jg
mov
xchg
xlat
iret
mov
cmp
and
mov
shll
aaa
cmp
cs
jb
or
stos
adc
aam
sub
pop
push
push
cs
rcll
addr16
push
and
lahf
dec
sbb
adc
arpl
cmpsl
rol
and
fidivs
xor
push
xor
mov
xor
aas
out
pop
jl
mov
scas
jnp
adc
in
mov
dec
fldenv
test
lea
jecxz
mov
pop
dec
sbb
or
lods
jb
lea
lods
aad
mov
out
mov
and
fsubs
sub
outsl
pushf
and
xor
cmpsb
jecxz
jbe
icebp
sub
push
push
movsl
mov
in
stos
mov
fnsave
cmp
andb
and
pop
push
adc
les
out
outsl
cmp
sbb
pop
das
das
lahf
stc
adc
rclb
add
mov
aam
inc
or
xor
arpl
jg
xchg
or
mov
add
cld
dec
ds
bound
jo
test
dec
push
xchg
pop
in
inc
movsb
orb
shl
inc
add
push
test
cmp
push
out
cmp
mov
inc
dec
mov
cmp
fisubrs
cli
shll
hlt
sub
sub
or
push
jp
or
or
pop
cmp
dec
pop
jbe
int
js
dec
mov
int3
cmpsb
fists
and
mov
std
sahf
and
and
dec
pop
jle
cmp
cmc
xchg
cmp
mov
mov
adc
pop
xor
pop
adc
lds
repz
dec
iret
mov
imul
mov
mov
inc
lret
mov
cmp
lods
sti
mov
fidivrl
or
sbb
xchg
xor
movsb
or
sbb
mov
sbb
inc
mov
stc
xchg
push
in
inc
fwait
insl
sbb
int3
jmp
mov
ss
mov
jecxz
pusha
enter
cmpsb
imul
sbb
mov
aaa
mov
cmp
push
pop
adc
sbb
je
lcall
test
mov
stos
aad
sub
imul
and
pop
aam
dec
mov
rorl
push
out
dec
pop
imul
or
mov
push
xchg
pop
push
and
popf
les
js
out
jmp
mov
mov
addr16
fsubrp
push
sub
xor
arpl
out
add
enter
leave
inc
jne
js
test
test
or
mov
add
ss
sbb
stc
add
pop
repz
sahf
cmp
adc
jb
inc
and
ds
jno
popa
pop
mov
lret
enter
and
sbb
ret
lret
sbb
test
leave
pop
and
clc
cmp
pop
mov
stos
gs
push
adc
cmpsl
outsl
pusha
hlt
aaa
or
push
adc
mov
push
sti
inc
dec
add
sub
iret
lock
fldenv
or
jp
cmp
out
cmp
jb
mov
in
xor
and
pop
cwtl
push
mov
or
dec
nop
int3
insb
bound
enter
in
cmp
xchg
mov
icebp
add
sbb
mov
cmc
mov
jmp
mov
adcb
xlat
jno
mov
mov
xchg
call
xlat
lods
test
out
imul
jle
mov
xchg
push
loop
dec
jmp
loopne
inc
push
loopne
jo
cwtl
sub
lea
test
movsl
push
and
inc
lret
lods
outsl
std
sahf
test
hlt
test
shlb
xor
test
sbb
jl
movsb
daa
xchg
and
repz
int
push
xchg
insb
sub
pusha
sbb
pop
push
jno
loope
mov
push
cmp
push
inc
xchg
in
enter
popa
xchg
insl
jmp
das
outsl
add
jb
sahf
aam
call
dec
outsl
jle
cmpsl
add
xchg
out
fcmovu
cmp
outsl
mov
adc
lret
sarl
xor
jnp
imul
pop
dec
or
clc
outsl
ret
int
das
mov
or
je
fwait
mov
test
pop
mov
add
cmp
je
xchg
int
roll
inc
sub
mov
punpcklbw
inc
wrmsr
mov
push
loope
xchg
fs
push
test
ds
and
and
cmpsl
sbb
popa
leave
push
mov
cmp
jp
int
or
mov
push
adc
dec
sbb
mov
jle
daa
rcrl
jne
daa
orb
outsl
lahf
imul
and
xor
inc
push
sbb
idiv
mov
mov
cmp
leave
fidivrs
cltd
xlat
test
cld
test
notb
sub
imul
fistps
adc
in
and
cld
push
mov
gs
inc
jns
xchg
jae
ret
mov
or
sbb
push
jbe
dec
cmpsl
and
test
mov
imul
mov
and
shr
adc
test
jg
out
xchg
mov
push
pop
sub
lods
jmp
notl
insb
xor
xor
scas
add
add
dec
cli
pop
inc
fiadds
gs
repnz
add
adcb
cmp
out
xor
test
sbb
outsb
fstl
or
jnp
cmp
xor
and
sub
sbbl
cmp
push
jne
xchg
or
divl
inc
in
cmc
int3
push
movsl
dec
cmpsb
push
ss
adc
out
and
cmp
mov
dec
or
jge
dec
sbb
sub
jb
jne
js
jnp
es
sub
out
jne
loopne
mov
loope
rcrb
xor
pop
nop
lret
loope
bound
sub
fistpll
mov
xor
shll
daa
dec
ja
and
mov
push
dec
mov
and
fidivs
das
xlat
cmp
cli
mov
mov
addr16
je
cmpsb
leave
hlt
movsb
adc
push
aas
aam
gs
adc
push
lret
loop
fldt
push
push
or
out
shlb
mov
add
pop
mov
xchg
mov
cmp
or
pop
hlt
cli
repnz
jno
xor
cmp
rorl
jbe
out
xchg
or
xor
movsl
idivb
inc
dec
push
or
ss
xchg
movsb
jne
icebp
cmp
shl
test
addl
mov
cmp
cltd
imul
cmp
mov
loop
jae
data16
int3
xor
pop
test
xchg
sub
xchg
xchg
xor
jmp
pop
inc
dec
and
rorl
mov
sub
cmp
in
std
inc
orb
jmp
lret
imul
ret
loop
sub
dec
gs
hlt
cld
mov
jg
or
das
mov
fisubl
das
jno
sbb
ss
int3
pop
fstps
call
aas
push
fdivrp
cmc
ror
je
scas
inc
mov
and
sbb
int3
fs
jp
rcr
imul
mov
mov
popa
mov
lock
inc
fisttps
pop
popa
or
int
mov
sub
mov
inc
mov
sub
xchg
pop
rcrl
adc
lret
dec
pop
pop
pop
data16
push
lods
sbb
jns
fidivrs
mov
mov
je
negb
add
es
sub
repnz
sti
pop
dec
jge
mov
xchg
push
or
call
out
pop
test
sub
loope
test
sbb
divl
mov
loope
mov
dec
popf
jns
fstl
pop
movsl
jb
inc
and
cltd
ret
aaa
or
test
dec
sub
xchg
jmp
xchg
cmpsb
or
ljmp
insb
iret
ret
movsl
add
dec
lock
in
push
das
mov
jno
popl
pop
aaa
or
test
lods
fmuls
dec
in
pop
test
push
sbb
movsl
movsl
mov
scas
fbld
insb
sub
out
cwtl
dec
inc
sub
sahf
add
mov
jno
subl
xchg
dec
in
xchg
mov
mov
pop
popf
mov
push
xchg
dec
pop
mov
or
movsl
loop
test
arpl
pop
jecxz
and
pop
pushf
jo
mov
es
sbb
cmp
push
jl
orb
cmc
pop
xchg
and
and
push
xor
push
pop
push
xchg
jnp
sti
adc
adc
testb
call
sti
ds
cwtl
jb
push
pop
out
adc
pop
inc
cmp
in
out
dec
push
loope
and
xchg
fwait
js
aad
std
scas
xorb
fidivs
repnz
xchg
xor
and
xchg
jl
cli
iret
dec
aad
fwait
jg
test
cmpl
mov
out
or
sbbb
and
mov
sbb
pop
lea
in
add
xor
hlt
xchg
xchg
shll
ljmp
xchg
in
sahf
push
dec
xor
xchg
xor
call
jo
imul
push
cmp
dec
or
xchg
fstpl
jp
adc
pop
sbb
push
cld
push
das
mov
push
fstl
jmp
push
xor
rclb
bound
pop
jno
ja
lcall
adc
dec
les
dec
pop
push
xchg
and
xchg
lret
lods
ret
stos
dec
push
mov
stos
inc
movsb
sbb
outsb
addr16
push
xchg
ja
ret
negb
pop
cs
rcr
nop
and
dec
das
xchg
mov
jbe
fisubrs
lods
nop
push
adc
sub
xor
fidivs
cmp
sbb
in
fsts
mov
sbb
out
mov
int3
mov
decb
sub
mov
dec
jmp
fcompl
sbbl
mov
sbb
xchg
and
xchg
push
gs
pop
fwait
or
test
pop
movsl
cmpsb
cmpb
jle
popf
push
xchg
adc
sbbb
fisttpl
mov
fcmovu
dec
xor
and
sbb
das
inc
out
aad
loop
scas
stos
sbb
push
mov
ret
mov
mov
and
imul
push
movb
es
scas
sub
loop
inc
cmc
icebp
dec
call
jmp
idiv
pusha
hlt
and
and
gs
in
outsl
lahf
out
out
data16
ds
sub
or
adc
int
ja
add
pop
int3
xchg
ds
jne
cli
mov
pop
mov
hlt
adc
xchg
and
and
test
or
mov
push
shlb
lock
sub
add
inc
push
sub
and
sbb
in
push
fidivl
mov
and
and
mov
inc
mov
or
push
jmp
sub
mov
movsb
push
push
popf
rcrb
push
xchg
jns
leave
loopne
cwtl
and
ljmp
shll
inc
in
movsl
outsl
add
lret
repz
jl
jno
push
in
aam
xor
lret
cli
aaa
js
cwtl
pop
mov
nop
gs
and
sub
dec
sti
pop
fmul
or
mov
jg
std
jo
out
mov
add
mov
addr16
pop
and
jo
mov
test
clc
mov
inc
sbb
jl
xchg
lds
jbe
jne
orl
push
std
pop
push
inc
cmc
stos
add
xchg
ljmp
xchg
fbld
mov
jo
mov
mov
cmp
sbb
push
jbe
and
mov
cmpsb
adc
subb
push
jb
mov
jnp
jmp
int
sub
loopne
lods
add
jb
out
scas
xor
ret
repz
adc
movsl
insb
jne
pop
icebp
push
push
jecxz
icebp
xor
adc
js
and
das
popa
divl
adc
sbb
imul
pop
inc
push
insb
jle,pn
cmpsb
pop
or
xor
xchg
mov
mov
imul
mov
cmc
mov
sub
xor
push
rcl
dec
adc
and
pop
call
lea
nop
push
cmp
loop
nop
insb
aaa
mov
sub
repz
inc
sbb
inc
xchg
inc
mov
imul
loopne
popa
sti
sahf
mov
std
push
mov
sbb
dec
imul
push
aam
cld
cmovno
test
pop
loope
push
loope
cmpsl
sbb
pop
repnz
push
inc
stos
cmp
cmc
fnstcw
sub
mov
call
icebp
add
and
mov
add
xchg
push
cmpsl
jo
popf
cltd
repz
inc
or
pop
inc
sti
mov
andl
ret
icebp
mov
pushf
shrb
push
xor
mov
popf
pop
orb
jae
icebp
mov
in
mov
cmp
jl
jmp
fmuls
arpl
repnz
inc
sbb
mov
idivl
lock
pop
cltd
jecxz
or
popa
pop
cld
daa
xor
xchg
mov
xchg
pop
stos
push
cmp
dec
add
lret
pushf
push
jne
sub
loopne
adcb
in
clc
test
aas
imul
xor
push
mov
and
dec
mov
jge
insl
dec
pop
popf
aaa
or
scas
push
dec
and
jg
and
into
pop
leave
out
and
pop
jne
stc
lcall
mov
das
ficoms
cmpsb
das
aam
lds
xor
mov
jns
jno
ds
sub
fs
jl
out
inc
cmpsl
adc
and
jmp
shlb
int3
or
xchg
mov
dec
sub
lahf
repnz
pop
xor
adc
sti
mov
daa
jp
sbb
dec
dec
ds
pop
sbb
xchg
add
adc
leave
mov
rclb
stos
cmc
sbb
fisubl
sub
inc
cmpsl
scas
es
adc
push
fcomps
pop
pop
dec
movsb
aam
jg
stos
dec
fstpl
stos
adcb
mov
bnd
push
and
shrb
pop
ret
les
mov
mov
and
mov
push
adc
mov
xchg
pop
sahf
push
xchg
movsb
testl
idivb
jl
andb
hlt
sti
cmp
ja
cmp
cli
stos
and
mov
jp
fdivl
int3
negl
movsb
add
fwait
mov
and
pushf
and
or
and
jmp
or
jmp
xlat
enter
jne
repnz
dec
inc
test
xchg
mov
adc
pop
jg
repz
aad
adc
rcrb
and
std
sub
mov
adc
out
sbb
xor
push
filds
jle
push
and
sbb
loopne
mov
in
and
in
jmp
push
out
popf
popf
pusha
jns
aam
sti
mov
inc
xchg
xchg
stos
fwait
addl
lea
push
lahf
stc
cwtl
adc
testb
negb
aad
add
xchg
add
jle
fidivs
jno
push
je
mov
jle
mov
and
sbb
xor
adc
icebp
jl
jp
lock
mov
xchg
mov
inc
or
mov
into
add
jne
mov
jns
inc
xor
loop
and
or
cld
mov
inc
sarl
dec
cmp
cli
lret
fiaddl
push
shlb
cs
jae
outsl
insl
fsub
jl
in
shrl
dec
xor
arpl
and
fwait
dec
adc
cs
mov
xor
mov
addl
xchg
dec
mov
cmp
lret
testl
cld
loope
mov
jnp
jge
adc
jbe
jb
fcoml
sub
pop
push
ror
sbb
pop
sbb
pop
jp
outsl
fdivrs
je
adc
sti
test
stos
jecxz
xor
dec
into
push
out
shll
and
push
inc
iret
push
mov
sbb
mov
ret
js
in
pop
aad
mov
xlat
sbb
lahf
mov
js
adc
or
sub
std
jno
and
js
adc
sub
les
xor
or
dec
mov
inc
scas
push
inc
in
outsb
add
aad
addr16
mov
imul
mov
ljmp
cmp
imul
mov
daa
outsb
jle
push
push
out
xchg
jg
pop
outsl
push
ds
insb
andl
adc
sbb
mov
xchg
lods
push
xor
push
jno
mov
cwtl
adc
clc
dec
adc
adc
dec
jmp
sub
xchg
dec
cmpsb
out
test
dec
imull
adc
fidivrl
jle
imul
scas
je
iret
arpl
sti
rorb
push
or
loopne
cmpsb
xor
aam
loop
sahf
jne
mov
xchg
mov
push
sub
mov
add
sub
xchg
jge
or
lods
mov
test
sbbb
sub
jg
repnz
ret
cs
jp
xor
sbb
pushf
push
pop
or
pusha
lods
mov
lret
clc
pop
and
cld
dec
out
cwtl
push
adc
scas
dec
dec
mov
bound
hlt
iret
sub
fiaddl
ljmp
inc
mov
adc
stc
adc
xor
lcall
mov
je
fadd
movl
test
dec
cmp
aaa
pop
mov
repnz
fnstsw
push
je
repz
shlb
jl
adc
sar
bound
es
mov
adc
cmp
push
movsb
inc
sbb
mov
ja
push
push
lds
xchg
inc
mov
out
cmp
cmpsb
sub
mov
fimuls
lret
inc
lret
ljmp
mov
jnp
cltd
fstl
insl
mov
fadd
in
xor
inc
dec
push
inc
hlt
xchg
orl
sub
loope
mov
mov
mov
ja
fimull
inc
add
in
adc
ja
call
mov
into
test
repz
pop
scas
push
or
push
adc
lea
pop
sub
pop
mov
in
ds
jp
and
jno
ds
sub
sbb
movsl
lods
inc
and
push
ss
ret
inc
cmp
sub
mov
ss
push
ror
fsubs
sti
std
cmc
rcrb
pop
daa
xor
div
add
in
cmp
mov
push
jb
dec
insb
mov
ss
jge
call
fists
xchg
or
cwtl
mov
enter
mov
iret
inc
fisubrl
mov
ret
xor
pop
mov
jg
dec
cmpb
add
decl
cli
xchg
push
mov
cld
xchg
je
push
push
sub
inc
pop
mov
movsl
xchg
fsubrs
js
mov
add
pop
mov
add
mov
das
test
cli
insb
shl
imul
push
mov
clc
mov
xor
xor
stos
out
sub
xchg
cli
jns
fldt
call
inc
inc
lea
icebp
dec
ficoms
dec
pusha
sub
mov
mov
loopne
mov
mov
lods
dec
mov
sub
int
dec
lea
and
xchg
mov
mov
xorl
cmp
mov
filds
movsl
aad
iret
int3
jnp
dec
enter
iret
in
sarb
mov
divb
jb
div
aam
or
adc
loopne
fmull
popa
mov
inc
push
hlt
lcall
cmp
mov
push
dec
mov
inc
xchg
outsl
and
jne
mov
xchg
jbe
mov
mov
rcl
lea
cmp
inc
ljmp
dec
push
push
push
xor
adc
xchg
iret
adc
inc
pop
mov
inc
fnstsw
lret
movsb
cmpsl
mov
sti
xor
outsb
sahf
fs
sub
jo
xchg
pop
fdivs
orl
add
outsb
mov
std
std
int
cmp
xor
sub
gs
je
shl
cmp
out
je
cmp
call
imul
inc
sub
xor
fcoml
inc
jno
pop
mov
or
enter
xchg
jo
sbb
cld
ja
insb
mov
sub
es
sub
xchg
nop
sbb
outsl
js
icebp
cltd
imul
and
mov
cmp
mov
mov
xchg
inc
pop
cs
jo
add
pop
fidivrs
js
cwtl
mov
jo
js
pop
decl
scas
cld
aad
sar
jl
bound
es
xchg
out
sti
aas
pop
xchg
mov
daa
dec
xchg
cmp
repnz
dec
decb
xchg
cmp
xchg
in
je
lea
cwtl
or
and
mov
shlb
sub
mov
rcrl
aaa
jge
jb
and
rcll
fstpt
scas
xchg
subb
cli
fistpll
dec
mov
pop
cmp
addr16
mov
testb
shll
jnp
cmpsl
xchg
js
std
std
rorl
mov
ljmp
push
inc
pop
jmp
neg
arpl
cmp
sbb
sub
pop
push
daa
dec
and
mov
push
pop
mov
fs
sub
out
or
mov
lahf
inc
adc
fdivrs
lods
int
xchg
lret
ljmp
adc
out
push
int3
push
flds
popa
mov
push
push
jmp
aam
sbb
jmp
mov
and
sti
xchg
mov
mov
cs
inc
cmp
in
jbe
orl
push
push
scas
cmp
mov
call
push
lds
out
adc
stc
sti
rorb
push
jnp
pop
pop
or
ret
jge
ljmp
push
and
shl
into
or
das
jbe
aas
mov
add
ds
ja
jbe
es
sarb
sub
sbb
sub
cmp
pop
fidivrs
dec
test
enter
adc
fs
dec
out
pushf
movsb
cmc
dec
add
fs
cltd
inc
fsubp
les
dec
jb
mov
aas
fisubrl
jecxz
or
leave
in
das
stc
into
jmp
push
mov
fs
lds
insb
imul
push
popa
add
int
test
mov
mov
loopne
jmp
xor
ja
cmc
aad
push
and
xor
push
mov
jne
ja
and
popa
dec
mov
jecxz
dec
das
lahf
push
jmp
inc
mov
lea
lret
jmp
xchg
and
mov
pop
sub
xchg
movsl
jp
xor
jnp
out
push
push
jns,pn
lret
push
test
dec
leave
rolb
pop
push
pop
or
shrl
adc
das
scas
negl
ret
loop
in
data16
jge
in
in
cld
out
dec
js
jnp
adcb
inc
cmp
mov
xor
inc
mov
in
and
mov
sbb
push
jns
test
xchg
sbb
icebp
xchg
inc
pop
test
pop
pusha
stos
xchg
mov
sub
xor
aaa
in
aas
adc
inc
inc
mov
nop
mov
dec
cld
lods
shl
cmc
not
add
inc
sub
xchg
dec
daa
xor
jle
mov
lret
ja
clc
call
bound
test
fisubs
push
divl
sbb
outsl
das
or
sbb
lods
rorb
clc
push
call
xchg
xor
and
es
and
ret
and
shrl
fld
pushl
inc
dec
lock
ret
dec
xchg
jg
push
sub
out
mov
mov
fs
movsl
out
cli
jne
sub
mov
push
sub
stos
sub
in
ljmp
jecxz
inc
arpl
mov
push
push
sbb
xchg
and
cmp
outsl
dec
scas
dec
movsb
or
std
decl
testl
popa
imul
insb
cli
and
movsl
mov
push
dec
adc
cmp
stos
cmp
mov
into
ret
pop
sub
fimull
popa
add
mov
scas
mov
jo
dec
and
ret
dec
lahf
in
lret
inc
xchg
jl
loopne
inc
scas
xchg
adc
cmp
in
xchg
mov
js
xchg
arpl
sbb
mov
fcomip
das
push
cmp
xchg
fsubl
jnp
push
jmp
xor
movsb
nop
sub
stos
sbb
or
fsubl
dec
jp
push
xlat
jle
add
mov
fidivl
adc
loop
jg
ds
push
jno
scas
dec
and
mul
aas
xlat
sahf
imul
cmp
pop
lea
xor
aaa
mov
lcall
dec
stos
int3
mov
mov
sbbb
fidivrs
xor
clc
adc
popa
sub
in
jmp
pop
fwait
aas
cmp
sub
adc
lea
dec
stos
mov
mov
mov
pop
lock
jo
sub
les
cmpsb
pop
mov
into
ds
inc
push
push
out
std
insl
xchg
fiaddl
inc
outsl
push
sbb
pop
pop
mov
loope
sbb
lods
adc
out
pop
divb
sbb
aam
add
cltd
pop
xlat
dec
pushf
jmp
cmp
cmpsl
fcoms
sbb
divl
mov
cmp
xchg
lret
xchg
lcall
cwtl
repnz
inc
testl
xor
sahf
adc
sbb
shl
ret
clc
xchg
jp
outsb
xor
bound
insl
aaa
xchg
dec
push
fidivs
in
cltd
xor
add
mov
mov
add
cs
ljmp
jg
iret
add
out
mov
mov
jmp
fdivr
arpl
jb
and
repz
push
dec
mov
jns
dec
xchg
into
lahf
inc
dec
pop
std
adc
in
ret
pop
sub
insl
scas
enter
mov
aas
pop
repz
sarb
and
push
sarb
cmp
lcall
ja
mov
pop
inc
out
fcmovnb
roll
cmp
sub
sub
popf
inc
pop
in
sub
jb
jle
sbb
mov
cltd
fldenv
sti
inc
nop
inc
xchg
mov
sahf
or
mov
or
pop
sbb
insl
inc
mov
shl
scas
push
or
mov
pushf
fwait
das
push
add
jp
stc
push
add
push
xor
sbb
push
add
inc
sysenter
imul
fmull
dec
test
daa
jecxz
insl
mov
sub
xor
xor
or
inc
push
loop
push
mov
adc
aas
movsb
dec
subb
aad
jecxz
iret
cltd
push
mov
mov
test
dec
and
sub
mov
fs
lds
icebp
sti
push
into
jecxz
loope
bound
sub
sub
mov
imul
jp
and
dec
sbb
in
mov
callw
js
jno
jae
pop
pushf
dec
div
int3
or
les
and
mov
adc
pop
movsb
push
test
outsb
mov
ja
and
mov
popf
in
sbb
aaa
pop
pop
cltd
or
push
ud1
iret
xchg
xchg
push
cmpsl
sbb
add
in
sbb
mov
int
test
jl
or
xor
mov
aaa
rcrl
clc
shll
cli
int
add
dec
ret
inc
in
pusha
xor
pop
in
out
cmp
inc
push
pop
js
cli
mov
insb
add
mov
mov
sub
xchg
rcrl
inc
mov
ret
mov
inc
pushf
mov
aad
int
outsl
mov
into
mov
mov
dec
out
inc
test
xchg
mov
ss
mov
aaa
mov
push
xlat
mov
pusha
shll
iret
loope
push
cs
inc
out
shr
sahf
mov
outsb
xchg
pushf
xchg
sub
push
inc
mov
je
frstor
xchg
mov
into
out
popf
js
sbb
lret
rclb
bound
cmpsl
fsubrs
push
cmp
and
cmpsl
movsl
insb
xchg
or
mov
jge
jae
fbld
stos
cmc
and
jle
xorl
fcomps
out
in
dec
xor
sub
std
enter
push
ret
ss
or
add
push
jb
sbb
mov
and
xchg
xor
mov
mov
xchg
pop
adc
fisubs
setns
dec
lock
pop
xorb
push
or
adc
scas
jmp
xor
pusha
xchg
xor
hlt
dec
cmp
sarl
imul
xor
inc
sbb
fistpll
repnz
sub
sbbl
leave
cmp
add
jno
arpl
jno
add
call
xchg
push
xor
popf
das
push
pop
push
sbb
ljmp
push
mov
pop
hlt
jle
xor
xchg
sbb
shr
dec
add
pop
xorb
dec
pop
mov
lret
dec
mov
sub
gs
xchg
imul
leave
sub
insb
clc
sbb
dec
add
mov
lds
sbb
leave
loopne
cmpsl
pop
scas
nop
in
lret
add
mov
dec
push
push
ds
aam
sbb
pop
rolb
xor
jge
cmp
addr16
pop
or
cmc
sub
outsb
roll
mov
mov
mov
dec
cli
xor
pop
or
lcall
mov
fstps
ret
stos
call
add
pop
push
jbe
pushf
xchg
push
test
sub
jb
les
fcomps
jg
out
inc
notl
adc
insl
sbb
lock
insb
fcmovb
fs
xor
mov
std
add
int3
sub
sub
popf
mov
lods
and
sbb
iret
lock
faddl
mov
out
push
mov
add
sarb
lods
pop
xchg
cmp
fdivr
push
scas
push
cmp
inc
add
xor
dec
lods
das
inc
mov
add
js
inc
rorb
repz
lods
ret
jl
sbb
test
flds
cmpsb
xor
cwtl
popaw
lcall
adc
das
and
fstpt
pop
inc
dec
xchg
pushf
imul
xchg
mov
imul
dec
gs
insb
test
xchg
repnz
xor
lahf
mov
sub
xor
lahf
es
cmc
push
jge
loopne
push
jmp
pop
mov
out
xchg
rorl
out
dec
outsb
imul
into
fs
xchg
stos
or
lahf
es
mov
sbb
push
push
push
fsubrl
pop
lret
mov
cld
pop
insb
cmp
xlat
mov
sbb
ja
xchg
fs
adc
repz
outsl
dec
into
mov
in
ss
push
or
jp
jno
inc
loop
add
inc
pop
add
dec
add
jp
sub
adc
testl
daa
xchg
ds
clc
jbe
mov
clc
movsb
fidivl
fists
jae
adc
js
test
sub
sbb
shll
inc
lret
and
add
sub
xor
dec
xchg
fnstcw
out
insl
jae
xchg
add
lock
xchg
popf
cmpl
fucomi
iret
xchg
shrb
mov
aaa
pop
jle
out
lret
mov
mov
mov
cmpb
outsb
fs
dec
outsb
pop
das
xor
clc
fisttps
jae
loope
mov
or
pop
push
and
pop
or
pop
push
mov
loope
lea
push
inc
repnz
xchg
mov
test
jmp
mov
fidivl
call
dec
mov
mov
dec
mov
adc
sub
jb
nop
adc
ret
out
nop
cmp
dec
jno
or
mov
fisubrs
pop
and
mov
xchg
sub
fildl
add
xchg
data16
ds
dec
pusha
sub
int
popa
mov
aad
add
int3
imul
dec
scas
jg
nop
jle
test
repz
test
xchg
ret
movsl
shrl
push
jecxz
dec
clc
rolb
idivb
sub
mov
cwtl
or
iret
les
or
mov
push
loopne
mov
dec
ret
push
add
cs
addr16
negb
xorb
cld
pop
cmpsl
cmp
push
push
leave
dec
lods
dec
int
and
out
test
vaddsubps
pop
dec
iret
cwtl
mov
imul
sub
sbb
popa
lret
push
mov
add
pusha
test
fnstcw
in
out
jle
sti
movsl
inc
push
jge
pop
je
mov
mov
mov
cmp
in
fldcw
outsb
cmpsl
mov
popf
lods
dec
mov
test
lods
jo
xor
xchg
into
dec
lods
mov
cmpl
jg
iret
xor
xchg
jno
xor
mov
add
jecxz
sahf
mov
sahf
inc
loop
sbb
cmp
sub
or
mov
cmc
outsb
daa
lock
adc
mov
mov
pop
sub
and
outsb
lea
cmp
sbbl
cltd
mov
adc
mov
clc
push
mul
add
mov
sub
or
sub
push
push
lahf
add
lods
das
icebp
ja
sub
mov
xor
mov
lea
maskmovq
mov
push
sbb
loopne
mov
xor
daa
cmp
aam
int
xor
insl
xor
ret
fs
jg
lfs
fldcw
xchg
inc
rorb
sub
or
in
xchg
add
icebp
cli
insb
and
les
dec
sub
arpl
xchg
enter
cmc
sti
leave
adc
test
inc
rcr
adc
inc
sbb
mov
mov
shr
inc
jge
dec
jb
fs
jb
jecxz
inc
outsl
test
and
mov
mov
sarl
scas
jns
mov
cmp
in
xchg
add
mov
add
jns
push
mov
test
inc
test
sbb
mov
outsl
inc
ljmp
mov
imul
ss
loope
clc
cmp
cltd
cmpsl
push
push
inc
cli
push
jge
adc
dec
mov
xchg
call
mov
jmp
imul
out
test
push
arpl
mov
push
jb
in
adc
mov
xchg
loope
jge
and
fsubrs
sub
xchg
sbb
bound
pusha
pop
loope
sub
jg
xchg
sar
hlt
jnp
xchg
jne
mov
outsb
movsl
data16
int3
les
jl
ja
cld
pop
push
dec
jp
cmp
sbb
sub
int
push
mov
roll
out
lcall
clc
js
xchg
aaa
adc
xchg
xchg
movsl
dec
mov
pop
or
add
jecxz
mov
dec
mov
pusha
jns
ja
mov
es
xor
scas
in
pusha
inc
push
jns
add
lcall
xchg
in
mov
or
stos
bound
jge
data16
lea
mov
cltd
add
jmp
stos
pop
cmp
inc
inc
push
jno
pop
push
push
xor
sub
mov
aas
xor
or
mov
mov
sti
cmpsl
loope
jbe
fstpt
lret
int3
movsb
or
or
std
enter
into
fs
out
or
fildll
pop
dec
sub
imull
push
loope
mov
mov
cs
cmp
rcrb
sub
insb
testl
dec
pop
mov
push
mov
jecxz
sub
cltd
inc
jl
pop
sbb
ja
xchg
sub
nop
and
xchg
add
add
mov
mov
in
mov
dec
push
sahf
fneni(8087
pushf
pop
mov
cs
adc
mov
inc
sahf
dec
sub
jle
insl
icebp
mov
scas
mov
fists
scas
push
xchg
and
sbb
stos
sub
scas
into
push
arpl
xchg
incl
xor
cmp
inc
scas
pop
subb
adc
dec
loop
xchg
mov
mov
lcall
icebp
or
lret
adc
scas
jb
and
pop
lea
inc
mov
xor
stos
push
in
sti
pop
inc
push
fidivs
xor
lods
out
stos
sub
dec
negb
push
fcom
xor
cltd
repz
mov
dec
xor
and
lret
stc
dec
imul
dec
fwait
inc
and
fildl
cwtl
mov
sbbl
lret
lcall
adc
mov
ss
test
push
mov
xor
push
dec
mov
cmp
cmp
fwait
outsb
fidivrs
bound
cmp
fadds
xor
push
mov
sub
addr16
lret
push
and
lock
mov
cmp
dec
cmpb
fwait
in
test
add
imul
push
les
sbb
imul
push
pop
movsl
xchg
jecxz
test
lods
inc
int
xchg
loope
lods
cmp
dec
aam
dec
repnz
mov
xchg
dec
mov
fbld
add
sbb
lds
nop
push
add
repz
mov
push
fistl
pop
mov
sub
movsl
lods
popf
jnp
sbb
mov
int3
or
dec
shrb
fdivrs
pop
mov
adc
jle
dec
ret
lods
push
mov
sahf
je
xor
mov
dec
out
aad
and
movsl
imul
fisubl
jmp
scas
sbb
jae
jp
pop
sub
inc
sbb
sbb
cmp
in
xchg
pop
loopne
sahf
bound
jbe
dec
sbb
mov
fdivrl
jno
mov
cld
loope
dec
jnp
fldl
out
daa
popf
out
add
jle
pop
sub
fdivl
add
push
xchg
inc
lret
mov
pop
sahf
mov
cwtl
inc
fdivs
mov
pushl
ds
in
pushf
faddp
fisubrs
inc
leave
movsb
fbstp
sub
shll
sbb
icebp
cmpl
cmp
jle
mov
pop
mov
loope
pop
cmp
push
mov
mov
sub
testb
push
call
lea
push
into
add
or
test
sbb
cmp
cmp
shrb
mov
add
sbb
cs
add
jge
push
repnz
pusha
jp
pop
and
popf
imul
fdivrs
aam
lahf
pusha
ds
stc
and
daa
ret
out
jl
cmp
pop
sub
daa
dec
sbb
in
dec
pop
mov
inc
fildl
and
and
in
iret
mov
push
mov
shll
dec
mov
mov
pop
mov
sub
add
push
jo
inc
ja
loope
lea
and
xchg
push
mov
movsb
mov
orb
dec
jge
push
repnz
xor
cmp
and
xor
insb
pop
xchg
mov
jbe
stos
pop
ds
add
adcl
popf
mov
fisttps
es
cmpsl
cltd
push
jb
sbbl
and
jnp
insl
mov
das
cmp
push
out
call
mov
sbb
cmp
cltd
jle
out
push
jecxz
jl
mov
xchg
jne
arpl
out
in
lock
in
xchg
jecxz
mov
lret
inc
incb
xchg
rcl
add
xor
inc
jno
insl
jge
loope
sbb
inc
and
je
dec
es
aas
sar
nop
mov
jmp
sub
andl
dec
sub
in
jl
hlt
loop
pop
dec
cmc
inc
push
push
mov
xchg
int3
or
jl
leave
mov
lock
js
pop
loope
mov
xor
testl
ljmp
xlat
std
add
xor
fstl
lcall
clc
out
mov
ss
or
jb
out
or
mov
add
jns
iret
cmpsl
inc
ret
rcl
leave
sub
cmp
fdivrs
lret
and
jecxz
pop
and
mov
dec
mov
mov
xchg
arpl
add
sub
scas
aad
fwait
gs
add
js
dec
mov
fsubp
mov
lea
mov
push
jb
imul
loope
mov
add
jl
lea
in
mov
mov
inc
sti
jae
mov
inc
sbb
xchg
cmp
push
sbb
stos
test
js
aam
cmp
daa
stos
sub
lds
sub
push
adcl
adc
cmpsl
xchg
sbb
mov
ret
and
out
int3
flds
daa
mov
cmc
movsb
xchg
pop
pop
gs
and
les
fsts
icebp
jge
jp
int
jle
negl
sahf
outsl
mov
ret
cmp
dec
xorl
mov
add
testl
fwait
cmpl
leave
push
into
ret
in
add
arpl
ljmp
mov
and
call
push
cltd
dec
leave
inc
test
jp
rcll
push
negl
or
jecxz
pop
pop
movsl
fwait
mov
cli
mov
jl
roll
insl
mov
scas
push
sbb
and
mov
mov
xor
pushf
test
jnp
scas
jno
out
lds
hlt
pop
mov
cld
or
call
inc
lret
jns
xchg
xor
pop
pop
jns
or
push
fsts
filds
xchg
insb
jmp
jo
xlat
ja
iret
fisubs
mov
fcomps
mov
cmc
mov
jg
mov
push
flds
outsb
scas
sub
push
inc
cli
push
push
dec
lods
insl
mov
in
mov
mov
subl
cmp
insb
adc
mov
and
sahf
or
fimull
mov
rep
and
cmpsl
fwait
mov
push
sub
pop
movsb
mov
push
push
je
orb
call
or
repz
in
xor
xchg
jnp
data16
xchg
sahf
fadds
add
js
jl
pop
lods
mov
mov
add
pusha
mov
cmpsl
rorl
inc
xchg
sbb
mov
and
adc
mov
pop
ss
sbb
test
lock
push
pop
or
push
mul
fsubr
lea
lret
into
sar
sbb
sub
les
hlt
xchg
adc
sub
cmp
repnz
fmuls
loope,pt
aad
jo
xchg
jge
hlt
cltd
sub
xorb
shll
add
pop
in
and
int
mov
icebp
aam
sbb
mov
jl
push
mov
int
push
xorl
lret
sbb
adc
sub
push
dec
in
dec
outsb
repz
adc
jge
nop
pop
shlb
addl
cltd
movsb
ja
enter
xor
shrl
lock
sbbl
std
shlb
idivb
cmp
xchg
push
pop
add
movsb
mov
xorl
pop
jle
push
out
jp
adc
or
jbe
test
adc
lahf
fbstp
mov
sti
pop
pop
mov
jmp
in
ja
adc
movsb
adc
daa
sbb
add
out
fucomi
scas
inc
sbb
pushf
inc
inc
add
or
fcomi
ds
xor
xor
das
mov
pop
cmc
mov
jno
cltd
ja
je
xor
popa
add
rorl
mov
cmp
movsl
cmp
nop
shl
add
fidivl
lea
mov
in
cwtl
inc
inc
shl
jo
mov
dec
inc
xor
insb
cwtl
lea
out
xor
data16
pop
dec
out
jp
imulb
aas
loopne
sbb
imull
popf
mov
dec
dec
push
jl
ret
cmp
adc
push
push
sub
inc
loope
mov
loope
nop
dec
dec
fisubl
push
sarb
xchg
idivl
notb
mov
js
nop
dec
cs
pop
sti
pop
mov
mov
daa
movsb
xorl
inc
add
test
cmp
jmp
movsb
dec
fidivrl
fwait
out
jns
xor
pop
mov
inc
addb
jmp
ficompl
mov
mov
mov
xor
sbb
add
jle
cmp
push
iret
jle
rcrb
push
jecxz
jge
hlt
lea
mov
scas
out
mov
and
stos
ja
cli
dec
mov
cld
nop
mov
dec
xchg
dec
hlt
sbb
jb
inc
jb
adc
xchg
jne
in
pop
loop
jne
sbb
leave
mov
cmp
les
aad
or
add
mov
push
mov
xor
arpl
inc
add
loop
stos
or
xchg
add
mov
das
cltd
popf
inc
jne
test
loope
dec
mov
mov
sti
sbb
sub
out
nop
xchg
mov
sub
mov
andb
call
jno
sahf
or
aaa
popa
pop
push
sbb
mov
xor
addr16
sbb
std
pop
jecxz
mov
repnz
imul
push
insb
aas
loopne
mov
shl
and
lret
inc
fsts
shlb
dec
loopne
jp
sbb
pop
inc
jns
pushf
int3
lock
xchg
mov
and
xchg
jl
sbbb
test
in
sbb
ja
and
lds
call
dec
mov
lods
ss
out
and
aam
sub
mov
lock
adc
xor
xorb
xor
xchg
call
cwtl
mov
addl
outsl
mov
out
ja
jecxz
and
add
push
repnz
es
xchg
push
hlt
push
jg
xchg
sbb
popa
mov
in
movl
and
fdivrl
or
add
loop
out
push
xlat
mov
push
lods
repnz
push
xchg
in
imul
pop
jmp
ret
pop
sbb
cmp
xor
mov
int
je
sarl
sbb
sbb
fcmovu
mov
push
ret
push
inc
xchg
fisubl
pop
push
sub
xor
or
fcmove
sub
cmp
jg
aas
or
mov
shll
pop
aas
sar
pop
pop
jl
dec
fcompl
mov
in
dec
mov
fwait
jmp
dec
push
in
rcrl
lret
and
inc
jmp
cli
clc
je
pop
fsubl
scas
ss
mov
imul
mov
push
or
ljmp
cmp
popa
and
fs
mov
dec
shl
cli
or
in
aam
xchg
inc
pop
dec
fisttpl
mov
insl
rcrb
negl
orb
mov
fwait
jp
nop
stc
fs
jne
repnz
sbb
push
inc
loopne
jl
push
imull
js
push
mov
dec
pop
test
in
mov
in
sub
incb
push
movsl
sbb
inc
popa
add
add
xorl
loopne
jle
dec
and
je
lods
pop
xchg
sub
or
or
shlb
cwtl
insl
lret
iret
les
mov
push
insl
sbb
adc
in
sti
mov
or
cltd
pop
in
mov
mov
adcb
xchg
fistps
lret
xchg
idivb
outsl
lock
and
xor
ja
jecxz
xchg
pop
mov
push
rcrb
xchg
lret
pop
mov
out
or
push
xchg
xchg
cmp
repnz
ds
les
pop
hlt
cmp
sub
test
mov
adc
or
cmp
jnp
jg
roll
aad
ret
sub
adc
add
iret
repnz
arpl
fwait
mov
sub
ljmp
stos
add
mov
int
lods
fcompl
cmpsb
mov
fs
stos
mov
leave
sarb
ficompl
jle
mov
jle
scas
jmp
mov
rorb
fistl
lods
orb
mov
mov
jns
pop
xlat
repz
lret
adc
mov
push
mov
shl
jns
arpl
jmp
daa
jmp
bound
and
xchg
dec
jno
and
push
push
mov
adc
lcall
push
pop
mov
push
mov
shlb
das
cmpl
std
jae
xchg
mov
lea
pop
adc
jne
adc
xlat
push
insl
mov
stos
scas
adc
inc
dec
mov
mov
lcall
imul
jmp
sbbb
hlt
cs
fdivr
daa
aas
inc
cld
adc
xchg
jecxz
jae
and
and
repz
icebp
cli
mov
mov
imul
xchg
xchg
sub
fsubr
shlb
xchg
mov
jg
call
sahf
sbb
aam
mov
loope
jns
sub
scas
fwait
out
mov
adc
cmp
mov
bound
push
sahf
dec
fmuls
pusha
mov
les
popa
mul
jne
sbb
or
lret
or
jno
push
repnz
sahf
pop
rolb
les
daa
inc
xchg
test
sub
and
inc
add
sbb
or
sub
ja
and
inc
jp
xchg
rclb
mov
mov
adc
std
xchg
pop
mov
ret
test
lods
add
mov
or
or
pusha
cmp
aam
int3
sbb
add
lret
pushf
xorb
jae
xor
adc
gs
add
dec
lahf
push
mov
movsl
mov
lahf
nop
les
ret
cmc
push
fcomps
popf
scas
adc
jle
rorl
call
es
inc
adc
mov
mov
xchg
add
ret
lods
cmp
popa
das
jae
in
dec
and
imul
fldcw
push
cmp
sub
push
adc
adc
xchg
adc
pop
or
xor
les
sub
add
mov
adc
insl
mov
or
icebp
test
push
jmp
sub
rcrl
cmpl
cmp
pop
cmp
mov
push
fimuls
sbb
iret
and
pop
subb
stc
sbb
sahf
gs
push
cmp
pop
aad
mov
push
push
inc
fcomps
out
fidivrl
and
call
or
mov
bound
orl
das
adc
shll
cmp
push
xchg
or
add
js
enter
repnz
sbb
iret
xor
cmp
jae
cmp
xchg
fnsave
mull
scas
xor
mov
into
mov
scas
ja
mov
sbb
sti
rorb
fstl
int3
cs
ret
mov
js
es
mov
clc
decb
sbb
lods
popa
outsb
add
cld
or
jne
out
push
cmp
push
pop
int3
in
cld
repz
cmp
sub
adc
loope
adc
mov
xchg
jnp
jle
inc
loop
mov
xor
push
adc
cs
sub
repnz
mov
lock
fwait
or
sahf
inc
and
jl
sbb
mov
insl
pop
or
mov
or
call
lahf
and
pop
mov
or
cmp
sahf
push
cmp
add
mov
mov
insl
js
cmpsl
mov
xor
daa
lods
dec
push
jle
loop
lds
add
xchg
arpl
mov
subl
inc
shlb
cltd
jmp
sub
mulb
sub
sbb
xor
cltd
xor
jae
test
adc
std
mov
cmp
dec
cmp
cmp
stos
adc
aas
fs
fistpll
arpl
dec
imul
adc
aaa
mov
mov
jb
adc
cmpsb
pop
cli
cmc
leave
mov
cmpsb
lds
pop
rol
mov
das
cmp
aaa
sub
test
mov
cmp
sbb
cltd
fiaddl
push
addr16
dec
pop
les
push
mov
popa
in
pop
test
cmpsl
adc
push
jnp
ds
psubsb
mov
jmp
dec
push
push
cwtl
js
inc
xor
adc
adc
cmpsl
sub
adc
mov
inc
pusha
jge
push
loope
popf
gs
and
or
pop
popa
pop
dec
js
imul
or
sbb
sub
jbe
cmp
movsl
pop
call
in
sbb
lcall
cmp
stos
mov
xchg
mov
mov
cmpsl
add
cwtl
dec
daa
sbb
jle
mov
cmp
mov
add
cmp
fdivl
dec
mov
push
and
rcrb
cltd
cwtl
push
rcrl
mul
cmpsl
add
incb
arpl
mov
mov
sub
test
fsts
les
daa
xchg
mov
sbb
repnz
and
or
or
leave
mov
fwait
inc
xchg
jle
adc
loopne
adc
dec
xchg
add
or
dec
fcoms
mov
notl
popf
call
add
adc
mov
jae
and
inc
psubsb
lcall
into
test
sarb
dec
push
push
lahf
xchg
xchg
cmp
mov
push
sub
repz
sbb
mul
pop
adc
outsl
scas
push
popf
leave
push
sub
push
subb
cmpl
and
mov
es
les
js
add
add
fs
out
inc
mov
addr16
jb
mov
lret
mov
sahf
jg
sbb
je
mov
mov
sbb
add
sub
bound
lds
adc
push
xlat
sbb
cmc
mov
adc
inc
rorl
mov
movb
push
push
sub
mov
pop
or
inc
push
imul
inc
aad
adc
out
aad
test
mov
mov
push
movsl
pop
aas
lcall
xchg
call
daa
jl
xor
mov
into
push
mov
mov
xor
mov
imull
sbb
dec
icebp
aad
sbb
ja
scas
pop
je
dec
gs
es
hlt
jne
cmc
pusha
jbe
adcb
in
scas
cmp
cli
js
cmpsl
mov
xor
les
pop
stos
popa
fcmove
repnz
imul
mov
push
lahf
pushw
shl
mov
push
cmp
xlat
xor
cs
jmp
add
xchg
les
sbb
push
ss
repnz
mov
nop
loope
pop
add
in
add
push
mov
pushf
or
dec
shll
std
cmp
negb
rcrb
sti
jle
or
ljmp
or
mov
cmp
and
leave
add
test
out
push
das
xchg
pop
stos
jecxz
cli
out
ds
mov
xchg
inc
cmpl
iret
fdivrp
xor
cmp
test
movsb
mov
out
jge
push
loop
mov
mov
outsb
outsb
aas
lods
or
jg
addl
rcll
out
inc
fistpll
mov
inc
sub
inc
adc
jno
adc
pop
push
inc
mov
push
addl
mov
test
push
or
or
call
lahf
sbb
push
notb
mov
fldcw
mov
adc
dec
sbb
dec
enter
imul
shll
stos
lcall
xor
jae
pop
jb
xor
ss
jno
or
loope
mov
popl
xor
or
sub
cli
je
push
mov
aam
jecxz
cmpb
test
push
inc
jle
mov
ds
pop
mov
sbb
jns
or
mov
cmp
mov
add
fistl
jb
daa
mov
call
jge
jb
fdivl
mov
aad
ja
cmpsl
hlt
ss
dec
push
pop
jo
lds
lea
push
xlat
xchg
inc
sahf
stc
push
push
adc
cltd
dec
sub
or
sub
or
movsb
imul
xor
stos
inc
cmp
sub
mov
or
popf
ds
arpl
mov
jmp
xchg
xor
popf
in
lods
mov
mov
sub
sub
cmp
pop
pop
les
push
icebp
cmp
sbb
and
inc
sub
lea
ret
leave
nop
xchg
mov
das
xchg
sbb
stos
bound
in
and
imul
xor
dec
clc
fcomps
add
pushf
sub
mov
popf
jle
xor
jns
adc
add
sub
sbbl
dec
mov
push
call
mov
cmpsb
xchg
sub
or
pop
aam
stc
mov
xor
mov
sub
xor
popa
jmp
mov
dec
enter
cmp
nop
sbb
jae
test
aad
inc
xor
adc
mov
js
and
gs
adc
xchg
lods
sahf
test
mov
mov
sbb
add
lret
jbe
pop
adc
push
mov
popl
sub
test
inc
in
inc
pushf
inc
in
aaa
test
add
mov
mov
xorb
and
fistpl
mov
pop
loop
daa
push
xorb
mov
cmp
inc
insl
fidivl
xchg
data16
stos
cmpsb
push
pop
pop
pop
scas
fsts
mov
push
adc
test
mov
movsl
lcall
xchg
push
and
jmp
and
inc
test
sub
and
mov
and
lds
loope
pop
and
mov
sub
mov
mov
push
sbb
cmp
xor
inc
or
dec
inc
popf
data16
insb
mov
and
mov
jns
jmp
xchg
or
mov
mov
dec
mov
sbb
loopne
sbb
fnsave
ret
mov
sbb
mov
sbb
pop
pop
xor
add
lret
ss
lahf
or
xchg
xlat
lock
outsl
push
jl
dec
mov
sti
pop
mov
xor
push
mov
stc
or
cmpsl
scas
mov
inc
mov
lret
and
dec
push
out
out
icebp
cwtl
jns
imul
pop
inc
mov
popf
jmp
ret
fldenv
add
ds
mov
outsb
imul
mov
mov
js
jo
lret
dec
xchg
test
enter
mov
jb
and
push
push
jnp
xor
scas
mov
or
push
ja
enter
jne
push
and
loopne
ret
jl
sbb
cs
inc
cmp
push
xchg
inc
stos
mov
jmp
lcall
popa
ficomps
xlat
inc
mov
inc
dec
push
sbb
ljmp
mov
div
lret
cmp
pop
aas
pusha
jle
pop
enter
addr16
bound
lret
lret
mov
pushf
add
out
mov
mov
std
cli
mov
inc
mov
outsl
pop
shr
pop
fwait
out
jg
lock
xor
xchg
dec
and
inc
and
mov
bswap
ljmp
mov
mov
mov
cmpsb
fcmove
and
movsb
push
adc
add
mov
adc
mov
xchg
mov
bound
hlt
mov
fcompl
mov
call
cmp
fs
jle
fwait
out
repz
lods
std
ja
cmp
testl
push
lds
out
sub
sub
inc
ret
push
ss
nop
or
mov
addl
jl
xchg
dec
cltd
in
imul
repz
clc
dec
or
mov
sub
or
jb
mov
xlat
sbbb
add
pminub
decl
test
cli
in
fsubrs
inc
scas
push
sbb
push
sub
movsl
and
sub
orl
mov
std
mov
rcl
aaa
cwtl
add
ja
xlat
cld
rorl
rcll
test
pop
out
and
popf
sbb
popf
and
sbb
mov
fsubs
xor
icebp
dec
aam
mov
inc
jp
xor
subl
popf
mov
ror
adc
dec
imulb
mov
inc
xchg
jmp
push
mov
ss
mov
fsubrl
in
fcomps
nop
xor
lahf
xchg
mov
push
fstl
test
and
mov
pushf
xor
cmp
test
test
dec
lds
jge
gs
push
xor
clc
out
notl
out
mov
iret
movsl
lret
sbb
add
insb
into
jge
cmp
push
cmpb
lock
mov
and
adc
jbe
add
dec
jmp
dec
inc
xor
stos
lret
repnz
fnstcw
imul
mov
sbb
push
and
add
mov
sub
adc
pop
dec
push
sbb
lea
push
pusha
mov
add
ljmp
in
js
lea
cwtl
and
xchg
mov
xlat
scas
pop
push
xchg
icebp
adc
gs
lahf
mov
ret
imulb
mov
push
ret
aas
not
movsb
std
jb
fbld
sub
or
pop
ljmp
xlat
popf
pop
or
dec
mov
add
out
repz
cmc
push
pop
mov
cmpsl
cmp
adc
cld
stc
cs
out
les
push
mov
add
mov
lcall
sub
test
ret
cltd
xchg
xchg
cmpsl
fwait
and
push
cmp
fisubl
dec
es
push
arpl
pusha
jecxz
push
sbb
lock
pop
jge
into
pop
mov
add
gs
inc
xchg
jge
jmp
inc
jmp
stos
cwtl
hlt
roll
and
add
loope
mov
pop
lea
roll
xor
jp
insb
lods
sub
xor
rcll
ljmp
divb
test
out
adc
test
pop
mov
popa
mov
sti
add
push
or
out
and
pop
mov
jg
fs
ret
out
sti
lock
cld
sbb
push
stc
fldcw
rolb
mov
inc
cld
ret
push
cs
pop
insl
iret
mov
fnsave
pop
loopne
sub
aad
xor
add
out
mov
addb
dec
lret
daa
iret
in
or
jb
hlt
nop
inc
imul
mov
or
rcll
or
cld
adc
fnstcw
inc
pop
adc
scas
outsl
orl
push
xchg
dec
outsl
in
mov
dec
sbb
imul
cli
insb
mov
pcmpeqd
mul
and
lret
inc
cmp
push
adc
shlb
add
lret
rolb
imul
sbb
xor
ljmp
jo
add
pop
mov
lcall
mov
repz
std
fdivrl
and
or
push
xchg
loopne
fwait
test
pop
sbb
leave
jo
push
jbe
cli
cli
roll
std
je
xor
jns
aaa
push
push
mov
arpl
test
sub
jb
push
mov
adc
lret
jmp
icebp
repz
or
out
adc
out
inc
daa
loopne
je
lcall
mov
rcr
cmp
fwait
dec
pop
inc
out
jmp
pop
aam
addr16
rcrb
into
and
in
mov
cmp
popa
mov
jge
inc
lds
pop
jg
andl
sub
adc
mov
add
jmp
mov
xchg
mov
cwtl
adc
ljmp
pop
cmc
fnstenv
popf
mov
mov
jl
lahf
lods
pop
push
popf
pushf
je
cmp
fwait
mov
jmp
xorl
aas
ja
add
jbe
inc
mov
pushf
mov
aaa
xchg
lods
adcl
sbb
lods
or
inc
lret
sub
xchg
xor
adc
and
inc
jmp
sbb
leave
or
hlt
punpckhdq
and
std
lea
int3
push
jns
cld
mov
sbb
test
ljmp
mov
mov
cltd
cmpsb
aaa
cld
ljmp
and
or
out
jle
aaa
aas
or
jle
outsl
stc
push
scas
outsl
cwtl
push
mov
lock
rorb
and
jmp
repnz
popa
push
sub
cwtl
fs
jo
xlat
out
js
rol
pop
mov
sub
mov
shrb
enter
jp
addr16
es
int3
js
icebp
xor
sbb
push
xchg
call
xor
mov
test
dec
ret
cmc
notl
sbb
lret
ucomiss
dec
orb
enter
int
sar
test
ljmp
mov
cmpsl
out
dec
loope
pop
dec
int3
mov
xchg
mov
pusha
imul
leave
repnz
mov
lock
mov
jle
and
popfw
cld
add
in
pop
inc
jno
xchg
push
loope
int3
imul
mov
das
ljmp
xchg
jb
movsl
cmp
fld
sbb
inc
into
xchg
push
adc
inc
push
and
sub
mov
sbb
sub
mov
jge
inc
mov
dec
in
and
dec
inc
out
js
insl
orb
icebp
enter
faddp
mov
pusha
pop
sahf
mov
adc
ucomiss
cmp
iret
test
jns
push
mov
add
pop
inc
add
xchg
ljmp
mov
ss
push
ret
ja
mov
loop
cs
xchg
cltd
mov
dec
aad
out
dec
ss
iret
cld
jne
insb
jnp
mov
sbb
imul
push
cmp
ss
in
or
cs
ficompl
cwtl
lret
sbb
add
sti
add
pop
add
mov
push
xor
and
repz
xor
nop
sub
sub
mov
or
loop
adc
outsb
pushf
mov
fisubrs
fcoms
xchg
movsb
lods
push
in
add
pop
icebp
es
mov
mov
add
cmp
mov
or
sbb
andl
enter
scas
sbb
test
stc
push
dec
adc
js
in
leavew
and
cmc
jo
dec
ret
and
jns
push
sub
pmaxub
cli
fsubs
test
sbb
lods
fadds
pop
iret
sbb
push
or
add
insb
sahf
lock
mov
and
mov
les
mov
rcrl
or
add
jl
or
and
ja
cmp
sbbw
or
adc
sbb
xchg
into
lcall
dec
addr16
mov
pop
sahf
and
icebp
fs
xchg
or
xor
call
push
insl
in
mov
lahf
fs
stos
scas
inc
sub
ljmp
sub
adc
jp
sbb
mov
addr16
sub
xor
inc
test
adc
push
adc
adc
mov
imul
cmp
mov
sub
mov
daa
and
je
and
sbb
push
pop
cmp
lret
fwait
xchg
outsl
push
out
mov
loop
shlb
stos
xorl
add
dec
fsubrs
mov
pop
xchg
jne
rolb
cmpsb
stos
leave
sub
push
sub
push
inc
lret
lea
fdivs
jmp
sbb
and
sub
aad
mulb
cmpl
fsubrl
push
mov
xlat
jle
sub
popa
in
divl
je
movsl
sbb
mov
out
repnz
fiadds
cmpsb
xchg
cmp
dec
lea
jle
daa
sub
aad
ja
adcb
dec
mov
or
outsl
jo
in
and
fstpt
and
call
push
xchg
cmc
sub
das
add
jl
mov
dec
push
or
aam
aas
mov
jno
loopne
ja
sbb
push
adc
lea
inc
insl
lcall
mov
ret
xchg
inc
and
aam
insb
mov
aam
fadds
mov
xchg
data16
mov
fldt
add
gs
jns
or
in
ret
sbbl
mov
mov
and
out
sub
lds
or
mov
sbb
xchg
test
in
cmp
jne
jge
shll
ss
mov
xchg
outsb
loopne
sub
or
jp
mov
xor
lret
mov
aad
in
std
fmul
imul
xor
jmp
pop
sub
fcompp
imul
arpl
mov
xchg
jns
push
hlt
scas
js
roll
or
cli
les
xor
cmp
mov
fstpt
movsl
sahf
fwait
add
stc
push
insl
and
out
xchg
popa
mov
mov
daa
in
aaa
pop
adc
xchg
cltd
repnz
aas
pop
or
jge
mov
cmp
pop
popa
ss
aaa
scas
pushf
mov
mov
sti
lds
sbb
aam
jge
push
insl
aam
scas
mov
das
and
sahf
fisttps
cmc
rcrb
adc
jmp
jecxz
movsb
xor
stos
sbb
mov
lret
xor
and
fcomps
gs
lds
sbb
cmp
sbb
ja
inc
cli
xchg
push
loop
sbb
push
pop
cli
mov
sub
sbb
lcall
clc
cli
lahf
aas
mov
adc
sbb
sub
lret
adc
mov
fdivrl
and
je
pop
push
adc
pop
push
out
insb
pushf
inc
jp
pop
mov
mov
jae
jmp
push
lahf
xor
pop
js
in
xlat
mov
jge
out
adc
mov
cmp
mov
sahf
pop
or
shrl
pop
xchg
or
xchg
outsb
mov
fldl
stc
nop
in
es
lods
or
ja
sub
push
sub
fwait
and
mov
and
pop
push
jns
mov
adc
cmc
bound
cmc
mov
lods
fidivrs
push
hlt
or
imul
fcmove
add
sub
std
test
pop
pop
ret
imull
mov
mov
push
inc
cmp
scas
into
cmp
add
add
shll
jb
out
or
jae
jge
xchg
ds
jg
scas
movsb
mov
mov
jle
xchg
mov
aam
jb
lret
aaa
pop
jl
gs
xor
repnz
sbb
jo
or
add
push
mov
push
pop
jae
mov
push
daa
jb
push
mov
arpl
xchg
mov
stos
push
xor
jns
nop
cwtl
addl
pop
fmuls
icebp
es
fldenv
ret
ja
aad
int
and
push
out
lcall
add
aad
push
neg
clc
lea
gs
push
and
pop
sbb
push
mov
ja
stc
lahf
mov
mov
jmp
negl
in
dec
xchg
jp
xchg
pop
sub
outsl
idivb
push
jb
imul
mov
mov
jbe
sub
mov
mov
hlt
pop
sbb
jmp
jge
xchg
cmp
jae
mov
inc
cli
popf
lahf
arpl
sub
and
mov
movsl
enter
mov
aaa
out
test
mov
or
outsb
mov
flds
sub
cli
jbe
jge
clc
add
cmp
inc
xchg
push
je
adc
cmp
mov
mov
dec
mov
cmp
sarl
lahf
bound
dec
xorb
mov
aad
sub
out
incl
mov
out
jle
cmp
and
push
xor
loopne
cmp
adc
sub
jmp
mov
popa
arpl
sbb
and
jb
ljmp
fnsave
and
pop
jae
lock
popf
xchg
loope
fwait
xchg
fwait
inc
pop
outsl
scas
jns
or
rclb
bound
lahf
push
insb
mov
stos
mov
imul
mov
fwait
shr
aad
sarl
cs
sbb
push
adc
popa
and
cmp
sarb
xor
lods
ret
das
pop
movsl
pop
daa
cmpsl
popf
mov
push
test
fldt
cwtl
cmpsl
adc
dec
fcoml
push
std
notb
xlat
fisttps
fstps
ret
imul
les
fs
pop
rcrb
xchg
sahf
aad
ret
xchg
jmp
mov
and
cmp
xor
xchg
gs
xor
mov
mov
sub
addb
push
push
sub
into
std
inc
jno
lea
or
sub
pop
mov
fbstp
mov
clc
inc
mov
cmc
push
xorb
outsl
dec
xor
lock
shl
push
sti
in
pop
shlb
jnp
jne
add
xorb
add
add
mov
pop
das
dec
idivb
xchg
cmp
dec
mov
jae
lds
xorl
adc
and
adc
or
ja
sub
adcl
dec
dec
popa
call
pushf
xchg
sub
mov
xchg
push
out
dec
jae
push
stos
in
les
sbb
sbb
sbb
testl
idivl
mov
imul
and
adc
mov
jo
jle
stos
ret
test
push
in
pop
jecxz
cwtl
movsb
xchg
js
aas
pop
or
mov
inc
inc
cmp
xor
int3
int
jbe
cwtl
add
mov
scas
mov
jo
je
xchg
movsl
arpl
push
pop
je
cmpsb
fildll
icebp
jg
xor
orb
mov
xor
cwtl
in
std
loop
call
xchg
sub
jmp
daa
in
mov
add
out
pop
mov
push
push
push
add
iret
jno
mov
notb
cmc
jp
or
push
pop
and
inc
les
lret
in
out
adc
mov
adc
add
lret
clc
jno
xor
out
int
sub
sbb
testb
cmp
sub
dec
cmp
subb
xor
and
cltd
and
xchg
xchg
fistpl
cld
adc
cltd
inc
xchg
outsl
cltd
leave
addb
mov
mov
js
pop
out
push
ja
enter
inc
cmp
dec
push
jle
popa
push
leave
pushf
addl
enter
pop
push
add
call
xchg
pop
pop
lods
add
fwait
clc
xchg
int3
push
cmp
adc
subb
push
subl
add
repz
dec
sub
lds
sbb
inc
lcall
jmp
ljmp
adcl
pusha
test
and
int
mov
sbb
arpl
mov
test
fldcw
mov
jno
xchg
xchg
pop
mov
adc
fbstp
dec
test
fwait
outsl
iret
mov
test
sti
and
cmpl
mov
sub
call
cmp
xor
and
or
popf
jno
push
pop
sbb
rcl
cwtl
mov
dec
or
push
push
in
out
shrb
sarl
xchg
or
mov
mov
test
add
push
add
and
xchg
rclb
xchg
push
insb
dec
loope
mov
fs
mov
shl
rolb
scas
fs
add
xchg
mov
test
jl
int
add
inc
shlb
pop
inc
popf
ss
or
xchg
clc
loopne
adc
dec
jbe
jnp
call
ljmp
test
pop
xchg
fucomip
test
out
pop
mov
ja
xchg
or
sub
pop
cmp
mov
lret
cmc
mov
pop
mov
xor
fs
cs
imul
xchg
hlt
and
loope
mov
repnz
xor
cmp
iret
xchg
ret
jg
shrb
jnp
sbb
mov
adc
mov
inc
inc
sbb
cs
cli
xchg
xchg
push
iret
mov
mov
mov
loope
jecxz
enter
mov
nop
cltd
mov
aam
cmp
cmp
packsswb
pop
sbbb
inc
lahf
dec
stos
arpl
push
pop
stos
xchg
pusha
and
sub
rcrl
fisttpl
mov
and
push
sarb
call
add
sbb
mov
mov
cmpsl
sti
inc
jmp
lret
dec
repz
stos
shrl
daa
pop
test
pop
fdivr
sub
sti
aaa
cltd
mov
adc
fistps
daa
lahf
arpl
xchg
lock
fwait
or
fisubs
cmp
dec
leave
mov
std
jmp
out
push
aam
rcl
fistps
dec
push
cmp
stc
lods
in
cmp
mov
movsl
mov
fdivrs
imul
inc
mov
mov
cmp
mov
inc
testl
movsl
fcompl
adc
lcall
and
mov
les
in
in
rol
xchg
loop
loop
scas
icebp
jl
or
aas
cmpsl
fs
inc
sbb
xor
mov
adc
lret
insb
mov
jle
cwtl
mov
sbb
cli
pop
add
out
push
dec
pop
mov
ja
xchg
sahf
inc
sub
int
cmp
sub
sbb
xchg
mov
mov
loop
mov
mov
in
cmp
rorb
andb
out
ret
lcall
in
xchg
mov
push
insb
int
repnz
arpl
sbb
push
inc
gs
repnz
mov
push
out
mov
add
push
cmc
rclb
sub
fisubrs
popa
dec
cmpsb
aaa
adc
inc
jmp
cmpsb
pusha
xchg
out
lahf
push
shl
or
push
adc
mov
sbb
and
data16
leave
rcl
subl
int
jecxz
dec
lret
xor
in
mov
jns
inc
inc
pop
mov
cmpsb
aad
outsl
enter
sub
add
call
ficoml
ror
lret
cmc
sbb
test
mov
into
pop
add
push
imul
mov
inc
cwtl
loopne
neg
jne
test
or
pop
mov
mov
sbb
mov
jbe
andl
pop
mov
fisubrl
in
and
dec
jp
pushf
pop
sti
jb
add
cmpl
jo
loopne
leave
fiadds
mov
sbb
movsb
dec
leave
roll
fdivl
out
push
mov
jmp
mov
inc
in
aaa
movsb
notl
lcall
ljmp
inc
sub
xchg
fdivl
adc
cmpb
inc
arpl
inc
sbb
aas
mov
rcrl
pop
fnsave
sbb
out
mov
test
test
scas
xchg
aad
adc
jo
mull
and
enter
leave
bound
and
xchg
iret
mov
mull
adc
lret
mov
pop
cld
mov
xor
mov
xlat
lahf
sub
dec
adc
jmp
dec
cli
and
mov
fs
leave
cmpsb
or
mov
imul
sub
call
adc
ss
in
pop
leavew
fadds
mov
cmp
sbb
sub
dec
mov
insb
imull
push
cmc
clc
pop
mov
fst
lcall
pop
or
and
push
cmp
fistl
lcall
test
fs
scas
iret
push
std
movsl
enter
push
fmull
jae
stos
leave
push
xchg
fsubrl
push
cltd
jb
lret
data16
lds
mov
fldl
fbstp
outsl
xchg
daa
and
lods
add
pop
test
fldl
mov
stc
xchg
movsl
int3
daa
or
out
cmp
mov
ds
mov
sub
push
sbb
outsb
jp
dec
push
dec
in
xor
pop
es
xor
mov
hlt
jno
popa
cmovle
shr
mov
pop
xchg
mov
xchg
mov
stc
jnp
in
mov
xchg
in
push
pop
call
in
xchg
sbb
xor
push
xchg
into
pop
lods
jns
enter
mov
mov
pop
adc
repz
lock
fcoml
int3
mov
or
out
pop
mov
mov
jmp
enter
enter
aas
jmp
ds
mov
pop
popf
lahf
cltd
pop
ljmp
pop
mov
xchg
icebp
cmp
popf
lahf
sbb
lret
aaa
popf
jecxz
push
cwtl
inc
jecxz
cmp
pushf
lret
push
xor
xchg
mov
mov
mov
push
mov
fsubrl
leave
adc
mov
fstps
add
pushf
mov
inc
std
adc
lret
sbb
lret
fdivs
sub
fcmovb
sbb
into
xor
pop
pop
movsb
push
ret
out
fmul
mov
int
js
sub
jnp,pt
xor
popa
aas
and
mov
ror
xchg
in
dec
loope
push
jnp
push
popl
lahf
push
cwtl
popa
jp
inc
movsb
push
or
pop
push
cmp
cs
dec
leave
push
mov
out
mov
mov
cmp
aad
mov
mov
test
cli
lret
insl
loope
adc
add
and
adc
fisubrs
sbb
or
in
loop
dec
aas
call
nop
fsubl
jg
mov
add
test
xchg
nop
leave
sub
and
mov
lret
pop
faddl
stos
mov
pop
fadds
into
jnp
xlat
movsl
push
aam
and
fidivrs
inc
mov
and
mov
daa
adcb
and
lret
pop
xchg
pop
add
fwait
inc
xchg
aam
sub
push
incb
xor
push
fistl
in
pop
adc
fadd
in
add
sbb
sbb
iret
pop
push
xor
and
test
push
js
es
shrb
pushf
xchg
push
rclb
ret
cmc
pop
mov
mov
cmpsl
iret
fisubrl
mov
iret
push
push
cmpl
popf
adc
aad
xor
aas
sbb
mov
inc
jne
sub
sbb
jle
xchg
mov
scas
pop
mov
cmpb
rcrl
dec
mov
out
and
adc
cmp
mov
loop
ret
outsb
sarb
icebp
pop
jg
fstpt
and
cwtl
lods
sub
lcall
gs
dec
sub
mov
dec
test
cwtl
xor
cltd
xor
repnz
lods
jg
bound
jb
dec
cwtl
lds
and
clc
sbb
insb
jo
dec
add
push
outsb
and
aam
inc
pop
rorb
add
or
inc
mov
mov
mov
xor
pop
push
inc
mov
fildl
dec
and
loop
fistl
mov
mov
mov
stos
lds
rclb
dec
js
pop
dec
fisubrs
jae
push
repz
push
xlat
lahf
sub
sbb
dec
jp
orl
sbb
dec
add
pop
mov
mov
sahf
pop
add
cwtl
stos
cmp
jle
mov
jle
and
pop
xchg
out
sarl
sub
pop
comiss
sub
lret
push
jnp
call
lret
cmpsb
dec
push
or
pop
xchg
cld
out
xor
cli
test
and
outsb
inc
test
jl
imulb
cltd
inc
push
loope
add
negb
or
test
add
push
push
mov
pop
fcmovu
roll
scas
leave
sub
dec
dec
mov
repz
lea
fsubr
inc
mov
lret
mov
sarb
icebp
pop
jno
jg
pop
movsl
aad
jbe
push
loopne
fnstsw
xchg
jo
mov
xchg
iret
std
outsl
cmp
stos
cli
jns
pop
outsl
pop
cmp
repz
and
fcmovu
sahf
and
push
jbe
push
and
jb
jmp
jbe
jb
fs
mov
sub
pop
mov
mov
aaa
lock
dec
and
nop
or
mov
aam
push
aam
cwtl
sbb
adc
mov
dec
mov
lock
push
and
or
jne
jno
jae
xchg
mov
clc
pop
fstl
scas
push
aas
jle
addb
sbb
xor
cmp
test
outsl
push
push
negb
fcmovbe
clc
pop
js
ds
mov
add
inc
jne
xchg
test
lret
fs
pop
mov
mov
fdivr
mov
clc
xchg
jle
scas
xchg
fnstenv
fldl
jno
test
push
ljmp
int
arpl
mov
push
xor
xor
push
jle
shll
inc
sbb
mov
test
adc
icebp
jbe
int3
ret
clc
repz
aad
fcmovnb
mov
cwtl
scas
inc
jno
jno
aad
lret
sbb
xor
mov
inc
xor
push
jmp
ss
jbe
inc
push
cli
iret
push
in
xchg
and
lcall
cld
mov
cltd
in
call
std
insb
dec
mov
inc
jnp
or
cld
inc
push
sbb
sub
jl
and
jnp
pop
push
ret
pop
and
sbb
lea
lods
out
add
mov
fiadds
and
pop
push
imul
xor
repnz
clc
out
jp
out
out
adc
cltd
inc
jl
sub
cmpsl
test
and
ljmp
nop
jb
sub
out
mov
sub
mov
gs
in
lcall
cmpsl
js
test
xor
cli
or
push
and
push
repnz
bound
mov
pop
push
shll
scas
mulb
aad
sub
and
stos
mov
and
mov
mov
popf
inc
dec
xor
jge
ret
mov
inc
fisttps
inc
jmp
mov
mov
dec
popf
out
jmp
jg
cmc
xlat
lret
dec
outsb
or
cld
inc
mov
ret
and
popf
jle
mov
jae
jnp
add
stc
mov
mov
push
mov
popa
jns
insl
outsl
cmp
mov
leave
pop
cmc
jb
push
cmpsb
sahf
or
push
push
add
mov
or
push
xor
xlat
in
out
jns
loope
xor
stos
xchg
fs
test
pushf
rcll
fldcw
push
test
adc
mov
sbb
call
jae
mov
lds
mov
push
add
in
clc
inc
or
sub
gs
jae
add
push
add
shl
out
jae
call
add
cs
cli
mov
das
xor
push
test
gs
mov
or
leave
stos
popf
inc
xchg
sbb
mov
in
sub
mov
ds
or
push
xchg
xchg
int3
xor
mov
out
mov
jmp
repnz
ja
stos
movsl
sub
loopne
jp
sub
aas
ja
pop
in
sub
in
cld
inc
jbe
popf
and
aam
andl
mov
imull
sub
jae
outsb
mov
mov
in
pop
test
iret
lods
cli
inc
xchg
in
icebp
push
xchg
mov
pop
mov
ds
out
data16
mov
pop
mov
aad
mov
addr16
dec
pushf
icebp
fidivrl
je,pt
cmp
dec
insl
mov
pop
in
cmpsb
in
inc
pop
fdivl
outsb
xchg
movsl
outsl
fldl2e
dec
mov
jo
mov
mov
arpl
insl
add
cli
fiadds
inc
xchg
in
cli
fbld
lahf
ret
popf
inc
sbb
jnp
dec
cmc
xchg
lods
adc
in
es
cmp
arpl
scas
lea
pop
mov
sbb
das
je
mov
sub
fstl
adcb
and
push
xchg
adc
outsb
dec
mov
mov
shlb
push
cmpsb
fsub
movsl
sub
and
out
add
jmp
neg
cmp
jl
cmp
gs
fistl
adc
sbb
fstps
rclb
mov
int
imul
ficoml
fisttpll
in
icebp
cmp
data16
fcmove
mov
imul
sbb
mov
test
fnstenv
iret
scas
and
das
dec
lret
inc
idivb
pop
xchg
dec
dec
xchg
jns
mov
addr16
cmpsl
pop
fcmove
fiadds
aam
push
push
scas
lods
pop
or
test
mov
add
adc
cld
fdiv
aas
and
dec
cld
jmp
push
xor
popf
repz
je
test
popf
mov
or
in
sbb
pop
xor
daa
jnp
pop
add
push
xor
into
sub
xor
shl
adc
sar
inc
movsl
dec
daa
jecxz
push
ret
movsb
pop
shlb
ds
les
sbb
dec
inc
pop
mov
mov
iret
stos
icebp
jae
pop
loopne
data16
into
insb
daa
fstpt
and
mov
dec
mov
lahf
mov
cmp
es
mov
mov
ror
xor
add
mov
lock
mov
roll
push
lcall
jmp
daa
cmpsl
mov
sbb
dec
mov
ret
scas
insb
xchg
in
xor
adc
popa
mov
fsubrs
dec
jge
or
imul
mov
data16
xchg
adc
outsl
mov
cld
cmp
pop
xor
scas
mov
jge
mov
add
dec
test
in
hlt
out
mov
push
popa
repnz
pop
pop
cmpsb
add
xchg
imul
sbb
in
stos
xlat
xor
sub
sub
inc
xor
std
negb
mov
push
adc
mov
mov
sub
adc
aaa
mov
cltd
mov
daa
add
push
leave
pop
insb
mov
mov
jecxz
pop
mov
in
and
out
dec
int3
xor
lds
dec
sbb
xchg
xchg
andb
mov
jle
mov
push
pop
xorl
inc
fstps
in
fmull
mov
push
lret
push
push
pop
mov
subb
dec
ret
push
je
movsl
sub
mov
jns
lret
mov
mov
jl
call
lods
leave
jne
shrb
jl
or
call
and
rorb
sti
xchg
call
xor
mov
pop
cli
test
pop
in
push
outsl
repnz
outsl
test
lret
fs
shlb
mov
xchg
in
arpl
daa
and
fadd
add
mov
cmp
nop
fmuls
push
sti
adc
outsb
pop
ja
and
sbb
clc
insb
cld
shll
mov
in
jnp
jmp
pusha
cltd
imul
leave
xchg
dec
add
mov
mov
lods
xchg
imul
mov
mov
aaa
dec
cs
in
xchg
inc
pusha
xchg
dec
cltd
or
ficompl
cld
fisubrl
je
adc
lret
inc
jge
or
cmp
jecxz
or
imull
aas
scas
fs
cld
fisttpl
mov
pop
cwtl
push
sar
stos
add
cld
mov
imul
jns
push
cmpsb
and
leave
jae
pop
outsb
pop
xchg
pop
ljmp
das
out
mov
push
mov
test
lcall
mov
je
or
and
add
push
pop
add
lret
popa
popw
jg
je
inc
lcall
jne
pop
cli
in
fmul
mov
inc
push
sbb
push
ret
add
dec
addl
cmp
sbb
xlat
sbb
mov
adc
mov
out
mov
pusha
aam
mov
lret
shl
push
pxor
mov
xor
add
fsubrs
pop
int
sbbl
pusha
and
call
repnz
and
jle
ss
or
pop
inc
test
mov
fdivp
xchg
push
mov
cs
sub
sti
sbb
insl
mov
insb
enter
adc
clc
push
pusha
inc
adc
push
lahf
inc
lcall
jl
push
aas
loopne
xchg
addr16
xor
sbb
arpl
arpl
in
cli
cs
cmp
in
ret
or
jecxz
push
sahf
mov
stos
add
sub
jge
repnz
mov
out
push
jb
push
js
inc
lret
imul
cmpsl
rcll
or
mov
cmpsb
lods
and
sub
add
dec
lcall
push
sbb
aas
ret
roll
in
xor
push
cmp
mov
cmp
into
inc
sub
sub
mov
mov
mov
outsb
jl
scas
rcl
xchg
adc
jg
jne
int
xor
aam
test
and
inc
dec
lock
and
aam
inc
xchg
and
out
mov
or
ja
xor
cmp
nop
mov
jge
rcl
sbb
andb
sub
sbb
add
pop
inc
scas
adc
sahf
pop
inc
mov
pop
xor
daa
push
loope
imul
icebp
sbb
pop
iret
shll
or
loope
jno
sbb
lea
add
adc
dec
push
jmp
lods
sub
xor
pop
movsl
sub
div
cmp
scas
or
loopne
lcall
or
adc
push
mov
add
js
ljmp
adc
sbb
mov
and
adc
out
or
aam
mov
mov
cmp
loop
in
sbb
dec
xchg
stos
ret
or
or
fs
cwtl
or
xor
imul
pop
cmpsb
sbb
rol
repz
ret
mov
mov
and
cltd
loopne
jmp
pushl
stc
int3
insb
sub
jo
fcoml
pusha
stos
int3
sub
push
jge
xchg
fadds
arpl
sub
lcall
xor
cmp
in
mov
into
adc
mov
push
fisubrs
push
jl
sub
mov
out
andl
push
sub
xchg
xchg
repz
push
daa
inc
sbb
xchg
inc
mov
xor
push
sub
inc
stos
call
pop
jle
pop
jl
mov
aam
jo
rcl
add
mov
push
mov
push
les
je
pusha
jge
cwtl
mov
dec
insb
sbb
fmulp
inc
stos
push
movsb
pop
dec
scas
inc
mov
sbb
mov
in
out
aaa
lcall
adc
test
adc
in
cli
mov
fidivrs
or
pop
mov
cltd
popf
sbb
cmp
mov
jb
outsl
ret
or
das
mov
sub
and
mov
fs
jo
int
add
pop
xor
push
pop
ret
mov
rcll
mov
movsl
decb
test
add
jecxz
pop
pop
cmc
mov
mov
mov
clc
and
mov
push
das
adc
hlt
out
add
add
push
rorl
mov
pop
dec
cltd
jns
and
pop
dec
sub
fwait
mov
or
or
rclb
cld
fistps
bound
test
jmp
mov
adc
fisttpl
dec
das
fidivrs
and
into
outsl
enter
dec
mov
xor
call
repnz
sub
das
mov
es
mov
mull
xchg
mov
add
xor
mov
scas
loope
int
pop
out
daa
xchg
insl
mov
fistl
xchg
stos
and
inc
mov
push
data16
fucom
pop
shll
mov
xor
push
enter
cmp
add
mov
subl
pop
imul
push
or
outsl
pop
cltd
lret
iret
outsl
stos
popa
mov
cmp
aam
cmp
jno
outsl
mov
jnp
pushf
outsb
mov
push
mov
enter
cli
push
insl
mov
or
aaa
stos
inc
jns
mov
imul
shrl
dec
add
cmp
ds
mov
dec
movsb
sahf
notl
xorl
repz
cmpl
pop
repnz
sub
repnz
dec
stos
ds
inc
cmpsl
lods
mov
repnz
push
mov
cmp
orb
mov
jg
aad
and
cmovne
xor
dec
fsubr
adc
into
jg
out
ret
sbb
pusha
mov
stos
data16
mov
mov
mov
in
rcrl
inc
call
and
and
mov
hlt
testl
outsl
xchg
jb
or
dec
pop
sbb
les
add
push
pop
out
sbb
mov
sub
xor
jmp
adc
sub
stos
adc
adc
imul
fwait
mov
pop
xor
clc
loope
pop
popf
mov
xor
mov
ss
xchg
popa
fsubrp
mov
mov
scas
stos
mov
jg
test
js
loop
push
into
into
das
xor
inc
jno
int
pop
out
dec
fs
shll
lea
test
lret
cmpb
xchg
pop
mov
mov
lcall
push
in
lret
fsub
outsl
rep
pop
ja
mov
ljmp
bound
push
push
and
clc
mov
lahf
mov
adc
xor
xor
push
mov
pop
mov
push
call
jo
outsb
pop
clc
push
outsl
sbb
aam
sbbl
dec
xchg
jno
cs
mov
je
fdivrp
adc
rclb
test
dec
rcll
rclb
push
outsl
sub
push
mov
sti
insb
add
mov
sbb
out
repz
mov
movsl
add
mov
push
incl
push
mov
mov
jle
clc
dec
mov
adc
or
xchg
push
or
testl
stc
fsub
mov
and
outsl
cli
adcb
cmp
sbb
int3
jmp
movsb
cmovle
pop
lcall
loop
cli
jns
sbb
sub
jno
and
int3
xchg
dec
fildll
add
mov
pop
pop
rcrl
add
jle
xchg
fbstp
jo
testb
inc
sub
pop
test
inc
movsl
pop
add
jae
mov
cmc
cmc
jb
jno
dec
fdiv
dec
mov
cmp
mov
cmp
mov
mov
imul
ds
rcrl
dec
lods
xchg
inc
push
dec
xor
int
add
dec
outsl
xor
shlb
dec
shl
test
dec
jnp
into
cli
cmp
lahf
sbb
outsb
xchg
int
pop
sbb
loop
cmp
addr16
and
testl
sub
gs
and
cmp
add
sar
jns
lret
fldl2t
xor
add
mov
cld
mov
mov
dec
pop
test
adc
mov
sti
mov
fwait
mov
cmpsl
xchg
out
pop
sti
mov
aad
scas
mov
jb
shrb
in
insb
or
sbb
pop
sahf
push
lds
mov
loopne
hlt
test
out
nop
jg
sub
push
cmp
or
les
push
cmpsl
push
nop
jg
jecxz
jae
xchg
in
cmp
test
insb
aaa
lods
cmp
pop
pusha
mov
test
mov
and
aaa
xor
imul
hlt
cmpl
fimuls
addr16
das
push
movsb
sti
leavew
out
fyl2x
pusha
nop
jbe
stc
jne
rcl
sub
mov
movsl
cmpsb
jns
pop
sbb
aam
mov
jnp
mov
mov
fistps
test
and
push
popa
cmpsl
cmp
shrl
cld
mov
xchg
into
push
pop
mov
orb
ret
jge
lret
test
mov
or
lret
or
mov
js
movsb
jno
dec
repnz
jae
add
mov
jbe
cmp
and
push
imul
and
jmp
jmp
fldl
pop
test
movsb
dec
dec
push
mov
cmp
pop
xor
shll
inc
jmp
mov
push
jnp
xchg
dec
sub
and
push
bound
rclb
sarl
inc
addl
xchg
inc
mov
data16
ja
iret
popf
in
lea
int3
sub
arpl
lcall
mov
or
inc
nop
lods
dec
pushf
data16
xchg
inc
outsb
mov
add
in
ret
sub
decl
ja
pop
jb
or
scas
inc
cmpsl
cmp
test
cwtl
rorl
aaa
rorl
cs
insl
mov
shll
stos
jns
fdivrs
cmpl
mov
cs
ja
mov
ss
and
mov
jp
sub
pop
or
cmp
xor
sub
in
out
test
ja
pop
mov
les
push
mov
repnz
inc
xor
add
mov
and
rcr
sahf
mov
mov
lret
or
mov
popa
movsb
lret
sub
ret
lds
adcl
dec
adc
push
int
lret
push
sub
int
lcall
dec
popa
inc
imul
js
into
fcmovne
stos
enter
enter
cmp
jnp
cmp
outsl
test
test
sbb
push
das
imul
jae
and
lds
mov
mov
adc
or
mov
leave
sbb
mov
sbb
sbb
rcr
nop
inc
je
push
ss
sbb
repnz
push
and
ret
sbb
mov
xchg
sub
in
mov
insl
jmp
lock
cmp
cmp
mov
adcb
popf
adc
jbe
cld
jno
sbb
lea
mov
jl
scas
ja
xchg
and
arpl
lods
mov
loop
cmp
cmpsb
lea
repnz
xorl
std
rcl
das
cmp
push
dec
inc
je
rdmsr
je
les
jbe
loop
push
mov
mov
inc
mull
test
mov
sti
sbb
adc
outsb
popf
mov
aam
inc
jbe
add
ja
stc
sub
cmp
popa
jg
inc
mov
jno
popf
mov
ficomps
xor
dec
out
lcall
shlb
inc
add
int
xlat
or
fists
push
and
leave
subps
xchg
jmp
dec
mov
push
addr16
dec
stos
mov
cwtl
out
add
and
xor
int
lret
xchg
adc
stos
and
mov
mov
add
add
jno
jno
add
sbb
inc
fcmove
jnp
enter
add
push
jne
leave
lock
nop
in
pushl
mov
arpl
mov
mov
mov
lcall
mov
lret
xchg
in
outsb
inc
mov
mov
cwtl
adc
push
insb
gs
push
lea
mov
ficoms
pop
stos
jno
data16
popf
inc
xor
cmp
je
mov
pop
mov
shrb
aaa
ret
int3
push
inc
add
insb
jl
lea
jmp
frstor
aad
jl
gs
daa
or
cmp
and
mov
lock
fidivrl
test
cltd
mov
aaa
xchg
inc
xchg
data16
daa
shrb
jg
push
jns
lcall
jmp
fwait
mov
push
popl
jae
and
and
call
lret
imul
addb
mov
cwtl
xchg
cltd
mov
and
push
pop
lea
sub
repz
jo
inc
push
int3
jmp
repz
and
xchg
dec
xchg
icebp
or
fsubrl
mov
dec
loopne
cli
lds
and
xchg
iret
add
fmull
and
inc
js
fwait
jge
jmp
daa
jns
inc
cli
aas
div
xchg
daa
lea
inc
dec
cmp
pop
insb
jne
out
mov
adc
xchg
fisttps
and
popf
jp
sub
pop
inc
lock
mov
in
adc
pop
in
stos
ret
cmp
dec
adc
xor
push
imul
pop
stos
dec
lret
mov
sbb
mov
movsl
cmp
ficoml
mov
add
add
jbe
sub
or
outsl
lods
cwtl
movsb
sub
push
lods
adc
sub
aaa
or
inc
ret
pop
jnp
jns
cld
mov
push
fisubrl
dec
mov
add
lcall
out
negb
lods
aad
xchg
sbb
push
out
mov
xor
mov
pop
mov
mov
cltd
bound
shll
dec
jmp
scas
ficoms
adc
and
adc
out
mov
and
add
fisubrl
add
inc
movl
in
in
arpl
shll
loopne
and
or
push
inc
pop
cmp
adc
cli
dec
inc
enter
pop
je
nop
dec
xchg
in
jp
in
adc
mov
mov
dec
inc
icebp
out
dec
cmp
mov
pop
cmc
call
cmp
loopne
lret
std
pushf
fst
xor
repnz
jl
cld
cmpsb
call
xorb
xchg
dec
push
sbb
call
pop
adc
decb
xchg
ds
lcall
add
jecxz
push
sub
and
and
jecxz
cmc
xchg
divb
adc
push
and
push
and
pop
push
clc
cmp
inc
xor
sbb
cltd
out
into
adcb
inc
stos
mov
jns
test
jae
test
dec
iret
or
fsubrs
jnp
push
roll
loopne
add
nop
xor
jmp
push
pop
jns
imul
shll
les
fdivl
cmp
sbb
iret
popa
cmpsb
add
lea
push
stc
loop
push
pop
dec
rcrb
push
sbb
push
mov
xchg
iret
add
adc
out
xchg
roll
mov
push
sub
dec
dec
or
xchg
mov
cmpsl
dec
mov
mov
sub
mov
aad
nop
aam
jp
xchg
out
fstps
or
adc
imul
cmp
loope
daa
data16
jae
out
cltd
iret
jg
mov
pop
out
push
filds
into
sbb
mov
fstps
adc
arpl
lcall
xchg
ds
sbb
out
xor
jno
scas
pop
call
fidivs
inc
xor
mov
jp
lcall
psrlq
stos
or
ja
pop
imul
lret
sub
xor
jecxz
cwtl
inc
cmp
dec
add
enter
xor
fxch
inc
jno
mov
xor
std
jne
and
and
dec
jbe
fsubrp
pop
jae
ja
sbb
cmp
add
xchg
aaa
push
or
or
dec
into
mov
pop
push
add
aaa
adc
gs
fisubrl
clc
mov
xchg
sub
pop
cmp
testb
out
popf
or
cwtl
push
sbb
aaa
adc
negb
add
pushf
jl
or
inc
cmp
push
int
jns
mov
test
repnz
mov
addr16
add
xor
jbe
fwait
in
addr16
push
sbb
jle
pop
cmpsb
mov
jbe
sahf
into
jmp
xor
mov
fsts
push
mov
jg
cmpsl
dec
sbbb
mov
xor
movsl
js
sbb
inc
faddp
aaa
stos
fs
mov
subb
mov
mov
fdivs
repz
inc
sub
inc
mov
in
bound
das
out
cmc
sub
sbb
xor
jl
or
pop
and
cmp
adc
mov
stos
dec
sbb
stc
jp
jne
sbb
sbb
mov
push
ljmp
fidivrl
pop
jmp
jo
iret
lock
out
jno
pop
inc
repnz
clc
mov
xchg
or
fsubrp
mov
mov
mov
in
inc
xchg
incl
cld
mov
mov
sbb
fbld
jecxz
bound
out
fsubr
pop
popf
cwtl
shll
sub
aam
adc
icebp
clc
cltd
sbb
repnz
push
add
test
fisttpll
les
ja
loope
mov
movsl
pop
sub
inc
xchg
jl
aaa
mov
mov
inc
cmpsl
push
jb
rol
adc
psubusw
fs
shll
sub
dec
sbb
lods
mov
push
xchg
aad
mov
mov
stos
lds
push
sbb
dec
add
leave
xorb
pop
mov
testl
imul
mov
adc
and
push
lods
sbb
mov
pushf
shll
adc
mov
stos
pop
inc
aad
mov
pop
push
add
pop
dec
mov
loop
repz
test
cltd
test
in
push
pusha
xor
xor
mov
lods
lds
insl
xor
inc
push
test
mov
lods
fcomps
mov
test
or
pop
in
adc
sub
mov
adcb
sub
xchg
mov
sahf
or
out
shll
ret
lahf
xor
push
stos
sahf
ss
hlt
test
mov
add
or
sahf
adc
inc
or
adc
add
repz
insb
mov
jns
jmp
rorl
lret
insb
ret
adc
jnp
adc
dec
mov
mov
cltd
mov
stos
and
loope
add
dec
out
int3
stos
testb
mov
dec
mov
dec
je
std
jecxz
jle
stos
cld
jnp
loopne
push
sbb
mov
dec
fidivrl
pushf
scas
sub
lret
in
or
mov
lret
cwtl
enter
je
test
push
xchg
sub
or
xchg
and
pop
jbe
push
adc
mov
or
push
das
and
shrl
mov
ss
hlt
mov
xor
mov
push
aas
leave
jl
sbb
add
xchg
xchg
mov
subb
and
xor
bound
imul
shr
and
push
mov
cmpsl
mov
ret
jo
lods
push
in
push
and
mov
idiv
push
xor
in
jb
icebp
add
dec
lock
inc
push
hlt
sbb
popf
or
into
mov
lock
ja
divl
jg
lds
pop
call
jae
add
fmuls
int
lods
outsb
xlat
stos
add
jbe
pushf
jb
sbb
sub
scas
out
fwait
inc
inc
fmull
inc
lret
enter
push
daa
adc
or
aad
out
in
mov
add
adc
inc
xor
add
cmp
inc
out
enter
inc
cltd
ja
mov
dec
inc
mov
pop
dec
nop
repnz
adc
stos
pop
pop
fdivrp
cmp
negb
xchg
and
mov
xchg
icebp
stc
cli
cmp
stos
imul
xchg
test
jae
repnz
mov
dec
clc
lahf
cld
inc
sahf
cmp
sbb
pop
icebp
jl
int
push
les
sbb
mov
pushf
xchg
xorl
mov
repz
cmp
adcb
mov
aad
nop
jae
sbb
dec
sub
gs
xlat
popa
push
sub
test
movsl
loope
repnz
rclb
mov
jnp
insb
out
or
imul
pop
or
fdiv
loop
sub
dec
sbb
loope
popf
mov
adc
or
inc
push
inc
stos
dec
dec
jno
jno
mov
jp
adc
loopne
xchg
and
pop
mov
and
cmp
movsl
das
cli
cltd
add
push
notb
lods
xlat
or
cmp
push
mov
add
xor
add
test
mov
rolb
xchg
divl
out
jge
stc
adc
iret
inc
jge
mov
inc
cltd
push
stos
enter
int
inc
stc
ljmp
int3
aas
dec
sarb
sub
xchg
add
mov
mov
hlt
xchg
arpl
stos
push
insl
stos
xchg
sbb
push
mov
cmp
sarb
lret
sub
inc
stos
pop
fdivrl
add
cmp
pop
jns
mov
adc
push
adc
fs
sti
sub
out
push
ret
inc
outsb
pop
pop
jmp
movsb
int
inc
iret
loop
rorl
push
jo
mov
clc
insl
push
jecxz
sub
mov
andb
lock
mov
aas
adc
lods
mov
imull
cwtl
idivb
sub
xchg
xchg
aad
adc
push
and
add
int
mov
cmp
cmpsl
rcr
xchg
mov
addl
cwtl
in
pop
cwtl
ds
addr16
xchg
outsl
cmc
shrl
sbb
and
into
push
scas
jp
es
repz
mov
sahf
movsb
outsl
pop
pop
and
pop
mov
ja
add
add
shr
icebp
push
fldl
xchg
sbb
inc
popf
cmp
mov
cld
cmc
mov
sub
pop
mov
movups
sahf
adc
pop
addr16
sub
sub
loop
les
adc
xchg
cmp
dec
push
add
cs
repz
sub
push
cs
mov
jp
stc
ret
stc
adc
push
mov
add
lock
repz
pop
idivl
sti
jne
jbe
jmp
xor
pop
sbb
cld
addb
int
mov
dec
int3
add
mov
cmp
movsl
clc
mov
xchg
cmp
iret
add
iret
cli
outsl
cmp
push
inc
push
int
addl
inc
fwait
xlat
cli
stc
jmp
mulb
fistpl
fcompl
insb
lret
xor
push
xchg
inc
aaa
push
sub
cmc
ja
jns
inc
jb
cld
cmp
stos
das
add
fidivs
lahf
push
cmp
xor
lret
hlt
and
stos
push
and
sub
or
cmpb
jg
pop
test
sub
inc
or
jmp
jno
xor
mov
mov
pop
fsubr
dec
dec
and
pushl
ds
pop
insb
sahf
dec
movsl
dec
mov
dec
inc
subl
add
in
insb
shl
mov
fisttpl
adc
fdivr
jb
cltd
and
push
fsubrl
xchg
loope
mov
test
mov
fisttpl
fdivrl
fsubs
daa
pop
and
xor
call
repnz
dec
mov
das
into
inc
inc
sub
jge
test
mov
ja
sub
aam
xor
test
inc
adc
mov
mov
mov
jle
lds
orl
xchg
test
test
inc
pop
xchg
sbb
push
outsl
add
clc
cltd
mov
orl
pop
hlt
jmp
mov
js
lahf
adc
pop
pop
dec
shll
xchg
jno
aam
cmp
sarb
in
jno
imul
xchg
inc
dec
mov
mov
outsl
clc
sub
adc
adc
shl
imul
xor
sbb
or
xor
inc
fcoml
lods
adc
mov
xchg
lock
sub
lret
adc
mov
xchg
pop
paddusw
xchg
rcll
loopne
xor
add
add
out
data16
incl
ss
pop
aam
xchg
fldt
jno
mov
lds
stos
push
fidivrs
loopne
rorb
jno
push
movsb
mov
mov
adc
out
test
push
es
mov
or
pop
inc
cmp
and
and
lods
int3
and
push
dec
mov
sub
xchg
add
adc
jno
jl
loope
or
xor
mov
das
jae
and
jmp
movsl
mov
repnz
leave
insb
mov
dec
mov
cmc
mov
rorl
aaa
jnp
leave
add
imulb
aaa
nop
xchg
dec
or
addr16
jns
xchg
cwtl
std
pop
popa
pusha
and
push
push
push
out
das
sub
out
addr16
xor
xorb
pop
cltd
cltd
and
push
iret
mov
fwait
cmp
pusha
cmp
stos
jle
adc
fidivrs
xor
out
add
pop
mov
jo
mov
lcall
add
das
jbe
scas
nop
rcll
push
out
rcrl
fadds
jb
mov
jae
ds
xchg
and
pop
fsubrl
test
or
lods
fcomip
dec
fwait
test
pop
mov
movsb
lretw
adc
lcall
cs
or
or
test
push
cmp
popf
aad
iret
sub
loope
mov
push
add
or
sub
xor
add
aaa
imul
incl
inc
adc
mov
mov
bound
das
inc
std
xchg
and
movsl
push
cwtl
xor
int
nop
or
fwait
xchg
repz
push
ss
xchg
xchg
xchg
pop
cmpsb
scas
imul
jns
mov
sbb
or
rorl
mov
hlt
outsl
mov
jge
sbb
or
filds
push
sbb
lds
clc
fs
push
mov
push
mov
insb
xchg
enter
mov
pop
push
jne
adc
xchg
pop
icebp
mov
inc
bound
adc
jo
inc
scas
icebp
pusha
lret
pop
nop
outsl
stc
jecxz
int3
sbb
fwait
bound
aaa
pop
inc
jmp
and
sub
out
adc
movsb
add
mov
xchg
sub
mov
pop
sub
pushf
scas
mov
lret
jl
iret
js
xor
lahf
adc
loope
addr16
add
pop
rolb
mov
mov
mov
imulb
fldz
sub
inc
mov
scas
adc
cmp
adc
stc
insl
in
daa
fcmovu
scas
inc
lret
mov
fisttpl
scas
push
int3
inc
dec
sub
fldl
lret
lret
cmp
test
sbb
enter
aam
dec
and
pop
stos
std
int
cmp
inc
sbb
je
dec
cwtl
mov
mov
scas
dec
jne
fsubrs
cmp
dec
scas
inc
mov
hlt
pop
data16
les
adc
pusha
mov
test
nop
fiaddl
cltd
pop
mov
enter
ljmp
hlt
lods
mov
xchg
cmp
mov
dec
push
aaa
fiadds
stos
lds
jp
scas
jbe
out
ret
cltd
xchg
mov
add
push
inc
fldcw
jne
imul
push
rolb
ret
js
inc
xor
lock
fldcw
add
push
and
jae
fcomps
mov
cmpsb
ret
shll
add
add
fsubrs
enter
cmpsb
mov
lds
iret
movsb
push
cmp
dec
ljmp
adc
and
dec
je
mov
push
dec
out
xchg
imul
js
outsb
fcmovne
jp
pop
js
dec
or
cld
cmpsl
stc
imul
mov
ljmp
sub
sub
add
sub
push
into
shll
cmp
mov
stos
cltd
cli
dec
outsb
stos
push
aad
xor
pop
imulb
push
cmc
enter
rcrb
fiadds
xchg
sbb
fst
and
rcl
shll
mov
cmp
sbb
ret
and
sti
test
inc
popf
int
aaa
xchg
repz
clc
push
mov
ja
lods
das
adc
pop
test
fldt
lock
pop
fs
adc
dec
out
cmp
xor
inc
mov
insl
scas
sbb
mov
outsb
inc
aam
jmp
jne
and
sti
mov
mov
add
push
popa
sbb
mov
pusha
pop
push
mov
sbb
sbb
mov
adc
or
out
scas
push
inc
int3
mov
es
lret
or
les
scas
push
in
mov
xor
aam
fwait
push
adc
pop
test
in
mov
nop
shll
mov
movsl
daa
aaa
push
cli
popl
mov
stc
jp
dec
cmpl
add
pop
xlat
push
xor
outsl
adcb
inc
sbb
push
movsb
rcrb
popa
outsb
xor
sub
push
cmp
push
test
ljmp
mov
jecxz
mov
in
pop
jae
int
mov
ret
cmpsb
imul
mov
add
daa
push
or
int3
js
adc
xchg
jmp
and
mov
add
sbb
jo
pop
mov
test
daa
xor
xor
imul
rclb
insb
cli
inc
cmp
jno
fidivrs
subb
repnz
pop
mov
xor
addr16
xchg
cmpsl
jmp
ljmp
pop
stos
push
sbb
int3
stos
inc
xchg
mov
mov
sub
cmp
test
or
xor
sti
inc
xchg
mov
imul
mov
adc
hlt
jo
pop
lock
adc
adc
loope
sub
jnp
aam
shrb
sub
test
push
xor
repz
mov
in
fstp
jbe
xor
cmpsw
mov
scas
adc
divl
out
cwtl
mov
add
lock
test
push
stc
adcb
inc
out
pop
out
cmpsl
mov
bound
xchg
or
testl
sbbb
mov
mov
mov
dec
inc
pop
in
stc
lret
lea
jnp
mov
jge
test
lods
sub
jae
inc
or
out
inc
or
loope
fdiv
cld
bound
xchg
cwtl
je
jno
test
test
int
arpl
imul
mov
add
sbb
push
js
stc
pop
push
sub
addr16
push
dec
das
das
mov
jnp
jnp
push
inc
mov
lret
rcrb
cli
ds
push
push
or
fcomps
fstps
dec
data16
shr
or
es
out
mov
inc
pop
and
sub
push
lods
stos
add
jne
ror
out
sti
std
jge
or
ret
pusha
mov
mov
cmp
ja
rcl
push
mov
aaa
and
inc
mov
add
mov
imul
insb
fistl
incl
jmp
sub
sti
lahf
or
and
mov
adc
stc
push
stos
add
xchg
out
repz
popaw
and
mov
pop
cmp
adc
repnz
cmp
in
fs
mov
pop
cs
aad
mov
es
pushl
stos
ror
inc
ffree
add
push
lods
mov
filds
test
repz
or
dec
pop
add
push
cs
roll
test
sbb
pop
dec
ljmp
ljmp
inc
int
gs
test
cmp
cmpsb
jge
push
adc
xor
rcll
jecxz
cmp
fcoms
leave
test
out
fstpl
sub
sub
pop
and
lret
cwtl
mov
fcmovnu
dec
sub
rorl
mov
adc
or
inc
or
hlt
aaa
repz
test
xor
movsl
lcall
push
stos
add
movsb
addb
fadd
movsb
dec
ficomps
and
dec
imul
neg
xor
bound
insl
inc
dec
push
xchg
jge
jmp
pop
stc
aam
leave
lahf
mov
push
sub
push
dec
mov
xor
jno
fs
add
adc
sti
out
or
or
fcoms
fdivrl
imul
loope
dec
ror
sbb
imul
mov
sbb
test
ret
loopne
and
call
xor
lock
out
outsl
fmuls
xchg
or
mov
fsubl
and
and
mov
mov
dec
jns
mov
push
adc
or
fbld
pop
and
mov
fwait
divl
jp
test
push
cmp
sub
fdivrl
push
pop
movsb
in
inc
sub
sbb
pop
inc
sub
sub
loope
mov
xchg
js
js
mov
cs
jne
jmp
jb
add
mov
inc
mov
dec
dec
add
cmp
dec
test
adc
ret
mov
stos
cs
ss
jne
repz
add
cmp
add
out
push
adc
sub
jl
subb
inc
cmc
loop
in
fwait
bound
pushf
arpl
or
xor
and
mov
lahf
mov
test
jle
push
cmpsb
adc
adc
and
fiaddl
mov
int3
ret
pop
lods
push
daa
pop
lods
dec
out
xor
jmp
inc
dec
pusha
fdivr
mov
xchg
iret
cmp
mov
insl
adc
or
mov
mov
scas
adc
loope
outsb
sbb
jg
jge
jp
sbb
insb
cmpsl
sub
inc
repnz
nop
out
scas
sbb
mov
mov
push
jmp
aad
xchg
cmp
push
js
cmpsl
pushf
aad
push
mov
sub
aaa
in
in
or
and
push
fsubl
fwait
inc
mov
mov
cmp
call
ficompl
add
addb
fimuls
xchg
jl
pop
cmp
xchg
cli
xor
cmp
insb
pusha
and
dec
cmp
jnp
mov
sub
loopne
sbb
jnp
push
add
jl
xchg
inc
and
sub
inc
imul
or
dec
mov
pop
jne
jno
ja
stc
insb
sub
mov
jp
arpl
mov
and
cmc
mov
push
xchg
repnz
pop
outsb
sub
in
mov
dec
in
sahf
pop
jp
loope
push
xchg
lods
js
mov
mov
xchg
pop
xchg
push
pop
repnz
push
fsub
incl
cmp
lock
inc
and
shr
and
imul
mov
mov
and
das
repz
jp
xor
cs
xor
inc
out
in
mov
in
in
push
pop
mov
into
inc
mov
test
aas
push
int
pop
movsb
mov
clc
cmp
cmp
fimuls
ficomps
fbstp
shlb
and
jg
stc
fidivrs
testb
sti
loope
and
shr
mov
pmulhuw
outsb
and
xor
push
rol
jg
repnz
mov
xchg
imul
sti
jp
xor
test
xlat
mov
ljmp
bound
mov
sub
cmp
xor
and
add
cmpsb
push
aaa
mov
mov
cmp
sub
add
push
jle
lcall
or
mov
ja
pop
lret
push
out
sahf
dec
lahf
mov
dec
mov
out
xor
mov
pop
daa
jo
pop
dec
repz
xor
mov
sub
andb
repz
idivl
push
and
js
xchg
xchg
sub
pop
pusha
std
adc
cmpsl
pop
jg
push
pop
dec
add
xchg
lret
pushf
aaa
aad
rorb
gs
cli
mov
sbb
lcall
std
fisttpl
cld
xchg
in
sahf
ror
ljmp
mov
test
push
inc
ficompl
test
cld
addr16
jo
addl
add
iret
lds
sbbb
ret
pop
mov
ret
mov
mov
mov
add
adc
lahf
cmp
cwtl
cwtl
push
or
lock
fdivl
jb
sbb
or
fistl
mov
and
mov
sub
and
add
pushf
insl
out
jae
adc
or
sub
daa
xlat
xor
out
pop
rcr
mov
xlat
loope
mov
xor
jb
inc
inc
xor
call
int
mov
push
int3
out
push
inc
xor
cld
test
mov
rorb
inc
lret
cmp
arpl
daa
sub
mov
fmull
adc
lret
sub
cld
jl
rcrl
out
sub
sbb
mov
mov
push
mov
jecxz
add
iret
int
push
gs
test
enter
xbegin
loop
push
cld
jmp
int3
add
rolb
insb
or
into
ficomps
xor
negl
es
xchg
cltd
icebp
pushf
fs
pop
xchg
dec
pop
movsl
pop
pop
mov
repnz
mov
mov
rorl
mov
cmp
imul
pop
sub
fisubl
ljmp
mov
mov
into
lods
mov
and
or
cmc
mov
xor
sub
fstpl
xor
dec
jno
in
and
movsb
push
adc
js
sarb
fimuls
out
out
js
cmp
cmp
inc
cmp
add
imul
sub
insl
pop
push
out
push
nop
addr16
pop
fs
lahf
pop
sti
and
adc
arpl
inc
push
shrl
xor
aam
popf
mov
mov
jmp
sub
cmp
subl
xchg
mov
leave
cmp
cmp
cmc
sub
or
icebp
mov
repz
je
je
pop
pop
dec
cmpsb
pop
aad
scas
icebp
pop
xchg
xor
mov
dec
stos
aas
mov
sbb
cmp
icebp
xchg
add
sahf
pop
xor
fwait
xchg
mov
mov
and
mov
push
mov
sbb
scas
xchg
xor
cmp
push
imul
mov
push
cmp
mov
sbb
xchg
add
leave
dec
aad
mov
xor
and
pushf
or
xchg
test
mov
inc
mov
insb
push
lods
lods
fdivrs
ret
nop
fwait
pusha
pop
fistl
dec
lcall
hlt
imul
mov
pusha
rol
wrmsr
push
fbstp
jb
jbe
ficoml
xchg
mov
aad
out
subl
in
cmp
or
int
movsl
int3
hlt
lods
adc
mov
into
mov
rclb
fcmovb
inc
stos
in
xor
inc
sub
push
push
shl
inc
sbb
xor
les
shll
mov
stc
lods
lock
sub
add
pop
idivl
aaa
sbb
inc
or
push
jns
insb
adc
cmp
sub
sbb
sbb
mov
push
call
dec
leave
mov
sbb
sub
sbb
xor
sti
mov
lcall
xchg
fiaddl
stos
das
adc
push
shrb
sbb
into
pop
sbb
popf
jl
call
cmpb
ret
inc
mov
call
mov
jae
cmp
cwtl
or
xor
cmp
push
mov
jecxz
fisttpll
in
lcall
loopne
popf
es
repz
insl
sub
add
out
sti
push
xchg
mov
and
movsl
rorb
sbb
xchg
pusha
repnz
adc
xchg
push
pushf
movsb
cs
add
filds
aaa
adc
or
inc
ds
lahf
hlt
gs
jmp
adc
aad
dec
cwtl
fldt
cmp
cs
cmp
cmpsl
insl
insl
ret
push
sub
test
add
vfmadd213pd
scas
jne
jae
jns
dec
pop
xor
push
jmp
sbb
jmp
divb
dec
repnz
jp
lcall
mov
pusha
pop
dec
testl
or
out
hlt
rolb
fwait
push
xor
adc
dec
add
push
rorb
jns
in
fsubl
pusha
in
mov
ret
cli
add
adc
or
in
fsubs
movsb
or
jae
or
pop
xchg
gs
cmp
aam
mov
jg
mov
add
jae
xlat
nop
clc
daa
mov
push
hlt
dec
xchg
lods
add
and
mov
adc
es
pop
dec
in
fwait
popa
pop
xorb
or
mov
sbb
not
mov
xchg
add
inc
mov
push
aad
lcall
cmp
xchg
ror
cli
bound
das
stos
or
lret
jne
add
sahf
outsb
or
jmp
cmp
fcoms
inc
xorl
inc
jp
adc
rcrl
mov
insb
xchg
hlt
jbe
aam
stos
ljmp
cmp
imull
loop
jmp
inc
ret
jo
lcall
mov
adc
stos
shrb
stos
out
mov
push
jno
add
insl
add
ss
out
sahf
inc
movsb
fcoml
into
add
dec
mov
test
daa
mov
xchg
addl
pushl
mov
in
jne
dec
test
lret
dec
pop
or
pushf
mov
adc
ret
mov
mov
outsb
ss
mov
shr
xor
sbb
jno
stos
scas
jmp
les
mov
xchg
mov
rorb
mov
pop
xchg
or
nop
mov
cmp
inc
xchg
jg
inc
jnp
jne
pop
mov
data16
jp
mov
sbb
sbb
lock
pop
push
mov
iret
pop
aas
in
mov
aas
shrl
pusha
jmp
popa
dec
pop
test
std
lahf
adc
sbb
mov
jg
int3
lret
sahf
flds
iret
pop
adc
fadds
lods
dec
sub
lret
or
add
movsb
out
xor
imul
outsl
je
adc
push
cmp
dec
ret
pop
pop
loope
add
sub
out
add
push
orl
cmovns
outsb
sub
push
fidivs
dec
jno
lods
aam
or
mov
inc
mov
fcmovnu
bound
xorb
nop
pusha
sahf
mov
and
lret
movsb
sub
adc
into
flds
test
pop
dec
xchg
pop
lcall
inc
iret
mov
into
scas
jns
mov
lret
test
hlt
shrw
xlat
pop
jge
into
lods
sub
and
js
aaa
out
fucomp
outsb
xor
fwait
call
dec
inc
in
insl
test
mov
cmc
popa
mov
addb
sbb
lods
out
outsb
sub
sub
test
aad
inc
scas
cmp
add
or
pop
xor
int
into
test
xchg
sbb
push
out
pusha
and
xor
mov
out
mov
sub
adc
sbb
jle
and
imul
icebp
test
adc
cli
call
sub
stos
jmp
movsb
mov
mov
int3
xchg
mov
mov
mov
outsb
jne
les
mov
outsl
jb
xor
stos
jecxz
mov
jnp
lret
mov
das
mov
shl
arpl
xchg
add
mov
inc
inc
hlt
mov
and
pusha
sbb
rclb
idivl
movups
jbe
in
cltd
adc
fwait
mov
leave
jecxz
int
movsb
mov
mov
push
repnz
lret
cmpsb
lods
sbb
mov
add
int
inc
outsl
pushf
loope
cmp
mov
inc
loopne
fmull
sbb
pop
push
in
dec
adc
xlat
cmc
addl
stos
les
xor
and
push
sub
mov
testl
fldl
shrl
or
js
cli
jae
cmp
repz
mov
cmpsb
pop
jne
jecxz
stc
icebp
out
add
mov
lret
js
lds
push
adc
pop
sub
mov
pop
xchg
test
insb
mov
xchg
add
sbb
add
xchg
lcall
out
int3
sub
enter
ret
nop
sbb
int
outsb
mov
fbstp
sub
test
xor
jne
add
scas
mov
push
ljmp
dec
leave
das
fnsave
xor
adc
imul
push
sbb
push
mov
cmpb
jecxz
and
test
imul
push
add
aas
test
aad
stc
xor
icebp
jbe
push
push
and
mov
mov
dec
push
mov
push
pop
clc
aad
int
shl
je
or
cmp
nop
mov
mov
stos
aam
pushf
push
mov
or
cmp
leave
insl
cmpsb
loopne
sbb
and
sub
mov
inc
push
scas
sahf
xor
mull
mov
adc
mov
pop
ljmp
stos
sbb
das
inc
and
loop
fimull
push
or
out
popf
ret
pop
jl
faddp
rolb
jge
add
repz
inc
jno
xor
scas
sbb
es
cs
pop
repz
fdivrs
rcl
and
in
rcrl
xor
adc
or
aad
xchg
sbb
sub
sbb
add
pop
in
cmp
nop
int3
pop
add
or
jnp
mov
sbb
sbb
sub
lahf
or
ljmp
stos
outsl
push
xchg
dec
jmp
jno
ret
dec
fwait
movsl
jl
pop
jp
iret
imul
sub
push
inc
inc
mov
dec
sub
or
xor
sub
aad
xor
jb
subl
rolb
in
or
test
iret
std
fcmovu
xchg
mov
mov
popa
jnp
out
scas
popa
jp
adc
loope
mov
sbb
adc
mov
sahf
stos
out
xchg
test
mov
lret
inc
xchg
les
xor
xor
mov
mov
and
pop
xor
out
mov
fcompl
daa
bound
cli
push
fwait
jp
dec
mov
jno
dec
hlt
sbb
mov
icebp
jl
ficompl
das
mov
inc
jl
sub
pop
out
scas
pop
ret
and
jmp
lret
adc
inc
cmc
cmp
jecxz
enter
ret
pushf
jmp
inc
stc
add
xor
and
scas
push
mov
inc
stos
inc
pushf
loope
imul
insl
aas
or
mov
enter
push
xor
lods
cli
fistps
adc
mov
outsb
mov
divb
or
and
in
push
in
adc
addr16
fbstp
cmp
lret
ror
xor
repnz
je
add
mov
jno
out
popa
mov
or
fdivrp
cmpsb
les
lcall
jne
pop
or
inc
adc
scas
pop
jns
and
inc
xor
sbb
mov
fisttpl
mov
call
and
add
xchg
add
pop
xor
xor
adc
cmpsl
movsl
push
in
insb
mov
mov
jmp
inc
xor
xchg
aas
jmp
mov
pop
outsb
fwait
int3
outsl
mov
ret
movsb
mov
out
cltd
xor
popf
imul
xchg
mov
xchg
icebp
scas
adc
enter
or
sbb
subl
jnp
sbb
stc
cli
xchg
lods
inc
lock
ret
jae
cmp
shll
in
sbb
xchg
cwtl
imul
sub
sarb
cmp
popa
fdiv
mov
pop
cmp
in
jl
std
aam
or
sbb
lahf
xchg
fwait
cmp
lcall
mov
xchg
inc
roll
and
repnz
in
jmp
insl
add
jle,pt
roll
shr
cmp
and
sub
adc
gs
lods
xchg
mov
inc
mov
mov
insb
mov
jns
xor
popf
cli
mov
fcompp
push
lea
inc
push
inc
sti
dec
add
shrb
xchg
jg
stos
sbbl
das
cld
stos
adc
je
shll
xchg
pop
loope
or
cltd
insb
mov
cmc
mov
out
fsubrs
lea
adc
xchg
xchg
cs
sbb
vpunpckhbw
in
sbb
jns
jle
mov
xor
push
mov
imul
test
mov
divb
out
xor
push
data16
sbb
lods
fistps
and
cwtl
jp
xchg
outsb
push
clc
ja
loopne
mov
dec
andb
xchg
jle
in
xchg
jnp
push
jae
test
add
fsubrs
nop
cmc
or
inc
mov
lock
jmp
xor
and
ss
sub
in
mov
ror
sbb
add
fnstsw
sub
mov
std
dec
lret
push
leave
stc
jae
cmc
ds
mov
iret
cld
jp
repnz
xor
mov
mov
jne
sbb
inc
punpckldq
xchg
cmc
ret
pop
xchg
mov
outsl
mov
push
add
out
dec
cmp
dec
mov
test
pop
mov
push
ljmp
jne
pop
mov
jp
add
inc
dec
cmpsl
sub
in
cld
mov
ret
mov
rcrl
mov
rcr
aas
fcmovne
testb
mov
adc
or
push
shl
mov
or
popa
leave
sub
mov
stos
cmp
insb
cmp
es
hlt
xor
mov
outsl
out
scas
lds
test
dec
dec
or
sub
stos
adc
addr16
push
fstpl
inc
lret
sbb
and
aas
xorb
push
xor
mov
daa
mov
sahf
xorb
push
mov
movl
sub
jnp
pop
adc
jmp
pop
ljmp
sbb
sbb
xchg
in
inc
shrb
dec
mov
push
mov
call
mov
add
cs
pop
int
inc
imul
dec
dec
movsb
push
roll
int
das
jns
xchg
out
es
loope
pop
adc
jmp
lcall
ds
stos
aam
sbb
sbb
sbbl
xchg
loope
lret
ja,pt
dec
nop
arpl
aad
add
testb
cmpl
dec
gs
jecxz
push
dec
pop
adc
add
mov
and
gs
int
mov
mov
push
add
iret
or
les
jo
orb
xchg
mov
lahf
mov
push
cmpb
jge
inc
jecxz
dec
jle
or
jg
leave
sbb
pop
mov
inc
ret
cli
adc
xorl
inc
and
insb
cmp
sbb
jecxz
xor
shl
in
movsb
jbe
mov
mov
loope
bound
xor
hlt
add
jbe
cmp
les
std
and
data16
out
mov
lret
lock
jecxz
lds
fidivrl
dec
push
push
rorb
push
pop
mov
add
sar
jbe
xchg
into
test
roll
pop
ljmp
fsubs
add
gs
mov
ds
test
int3
and
fisubs
mov
outsb
cltd
stos
fs
push
jne
ja
lcall
lea
test
ficoms
add
js
mov
sbb
mov
mov
adc
mov
pop
mov
dec
mov
outsb
repz
adc
sbb
mov
mov
cld
push
xor
xchg
js
and
test
or
int3
popl
xor
inc
mov
cmp
test
jns
xchg
callw
ret
and
pop
inc
lret
push
call
fsubrl
and
mov
cmpsb
mov
mov
orl
fsubs
and
mov
mov
sub
stos
pop
xlat
out
into
mov
dec
fmull
push
add
push
imul
mov
mov
cmp
and
pop
inc
add
in
or
out
dec
neg
outsb
dec
subb
lds
shl
mov
add
test
jo
lret
in
jne
cs
mov
leave
es
pop
xchg
jl
icebp
jae
xor
test
and
mov
add
cmp
inc
adc
adc
test
fs
pushf
sbb
or
incb
dec
out
insl
jmp
insl
xlat
mov
sub
es
mov
ja
fs
sbb
js
push
lret
rcl
in
test
leave
push
mov
sahf
stos
in
movsl
in
lds
dec
lds
push
xchg
pusha
cmp
sbb
jne
pop
aad
xor
movsl
fildll
or
aam
xchg
stc
xchg
jns
xchg
out
or
test
xor
into
and
and
and
jge
mov
and
push
sbb
call
cmpsb
sti
scas
movsb
cmp
inc
lcall
ljmp
mov
cmp
lret
dec
subl
pop
std
jl
arpl
sti
out
add
jle
loopne
movb
aaa
nop
shlb
inc
sarl
push
sub
xchg
xchg
or
mov
out
nopl
add
dec
adc
fsts
mov
cltd
xchg
pop
push
pop
and
adc
lods
repz
stos
push
xchg
fsts
jmp
jle
pushf
inc
lahf
mov
sbb
loope
push
data16
aaa
xor
xchg
test
test
jl
push
pop
mov
and
push
mov
or
lahf
fidivrl
xor
inc
popf
mov
fcoml
repz
jne
dec
mov
jge
inc
jbe
imul
mov
shll
adc
mov
nop
mov
jae
stc
or
addr16
bound
push
inc
lock
cmpsb
in
pop
aad
mov
cmc
pop
and
or
push
lahf
add
in
int
test
mov
shrb
sahf
ficompl
mov
or
jbe
pushf
jbe
inc
out
xchg
cmpsl
les
dec
push
sahf
mov
and
dec
mov
sbb
shl
sub
xor
sbb
maxps
dec
shlb
xchg
inc
inc
xchg
adc
jae
lock
aaa
or
into
popf
imul
cmpsl
lcall
out
mov
xchg
inc
icebp
stos
pusha
icebp
lcall
add
jp,pn
pusha
scas
lret
out
push
sar
xor
adc
pop
pop
out
inc
mov
scas
jae
mov
xchg
lea
jbe
popf
push
fcomps
js
add
cmc
inc
push
jno
xchg
inc
movsl
xchg
fcmovbe
adc
inc
or
loop
orl
cmp
dec
test
cmp
sahf
or
call
mov
cmpsl
push
sahf
xchg
sbbl
cwtl
stos
arpl
outsb
lcall
push
jne
xor
insb
rorb
inc
aas
jge
sbb
push
cli
std
clc
cs
mov
lods
xlat
loopne
adcb
rcl
int3
pop
mov
fsubl
std
int3
shrl
mov
sbb
xchg
push
call
lds
xchg
xchg
pop
mov
push
dec
fs
mov
push
mov
fisubs
mov
dec
xchg
xor
sbb
add
sbb
push
inc
cwtl
in
push
xchg
adc
inc
mov
popa
inc
or
inc
xchg
sbb
xchg
sti
xchg
pop
xchg
aaa
daa
inc
cmpl
ds
fsubp
dec
mov
divb
imul
out
xchg
addr16
push
out
ss
jmp
lret
sub
pop
cmp
push
ret
lahf
lds
addr16
pop
orb
mov
mov
in
les
cmp
in
sub
data16
daa
jns
mov
adc
sub
dec
add
fidivrs
add
sti
jmp
cmp
mov
adc
les
rclb
sbb
icebp
pusha
jae
lahf
adcb
test
or
test
inc
adc
mov
and
mov
mov
pop
cmp
jb
push
cmp
push
push
mov
jl
or
add
insb
mov
pop
pop
pop
js
test
std
test
mov
adc
mov
sahf
repz
add
into
mov
mulb
das
js
add
inc
mov
es
lods
cld
sub
push
or
inc
cmpsb
cli
out
jmp
enter
mov
lea
mov
push
aam
or
test
test
xchg
repnz
rcrb
jns
xor
into
scas
jno
jl
stos
jae
test
lods
sub
sbb
cmp
mov
sbb
and
in
movsl
andl
lea
mov
mov
or
shl
add
int
sbb
jmp
push
out
movl
inc
xchg
jge
enter
add
out
inc
cli
pop
lcall
aad
movsl
test
fbstp
xchg
add
mov
pop
push
xchg
in
scas
mov
add
ret
jae
sbb
xor
dec
call
xor
lret
xchg
dec
or
mov
adc
imul
cmp
das
cltd
or
pop
xor
xchg
jge
popa
dec
cwtl
pop
shrl
mov
push
add
lret
xor
rcr
sub
jnp
aam
inc
pop
pop
hlt
jbe
hlt
cmp
ljmp
mov
inc
negl
sub
mov
repz
mov
fwait
mov
cld
ja
jg
inc
aas
pop
out
jnp
fcoml
in
xchg
out
scas
notb
test
outsb
popa
jo
cmpsl
cmp
clc
icebp
in
test
sub
aad
leave
adc
notl
push
dec
jmp
add
fucomp
push
fwait
mov
sub
mov
and
dec
jl
popa
pushf
inc
mov
cmc
xchg
out
pop
lods
sub
nop
sub
dec
add
adc
sbb
sub
jns
add
adc
insl
jno
scas
sbb
popa
insb
jge
or
aam
addr16
sbb
rcr
sbb
inc
mov
pop
ja
mov
aas
pop
mov
test
xchg
and
pop
push
loop
xor
sbb
xchg
vpunpcklbw
inc
xchg
jp
sub
imul
hlt
dec
lahf
sub
je,pn
jl
sti
arpl
cmp
cwtl
mov
enter
and
pop
jns
jle
and
lcall
xor
test
pop
adcl
int
jge
jl
mov
jnp
sub
pusha
mov
stos
lea
push
fs
push
sub
jns
loope
cmp
mov
nop
orb
arpl
cmp
scas
push
hlt
pop
push
mov
and
mov
iret
stc
mov
cmpsl
nop
push
xchg
jnp
hlt
cmp
test
mov
out
popa
inc
leave
bound
out
aam
call
xchg
dec
jnp
sbb
adc
mov
fwait
movsl
pop
mov
and
dec
pusha
shll
test
std
jno
aam
call
mov
inc
pop
pushf
push
push
test
jae
pop
mov
jb
pop
lds
cmpsl
fcomps
xor
test
flds
push
out
pop
stc
adc
push
add
mov
add
sub
dec
loop
fcmovnbe
test
dec
pop
gs
lds
xor
pop
lods
daa
mov
sti
mov
outsb
adcb
dec
xor
mov
into
push
shl
add
sbb
jbe
insl
pusha
cmp
push
pop
and
test
mov
xchg
pop
pop
outsl
push
sbb
mov
sub
add
push
dec
repz
jl
jl
dec
ja
stos
test
lea
xchg
shr
xor
dec
loope
cwtl
outsb
cmp
push
pop
pop
in
jbe
fcmovne
add
mov
push
leave
xor
sub
mov
ds
and
or
fimull
stos
cmp
lcall
mov
aaa
movsl
les
push
sbb
cltd
jl
fnstcw
mov
inc
mov
push
mov
mull
ret
rcrl
subl
rol
dec
push
jne
sub
pop
add
cmp
scas
outsb
popf
mov
mov
mov
or
imul
or
shl
stc
mov
sbb
cmpsb
jno
imul
dec
sub
mov
faddl
ss
cmp
dec
jp
and
add
std
xchg
lds
rorb
xor
mov
ja
mov
in
fcoml
pusha
outsl
jno
sbb
cmp
and
icebp
push
mov
xor
push
movsl
jae
lock
mov
lods
out
shlb
daa
jge
add
mov
repz
push
lock
ucomiss
xor
in
cmp
loope
add
pop
inc
sub
or
into
scas
imul
outsb
sub
cld
adc
bound
mov
mov
mov
sbb
jmp
cmpb
fsubrp
dec
loopne
dec
pop
sbb
cltd
jp
jmp
pop
rorl
push
stos
cmc
mov
mov
repnz
lcall
shlb
lcall
dec
pop
jmp
sbb
inc
xchg
gs
inc
lods
nop
add
sub
adc
dec
mov
into
mov
nop
mov
dec
cmpsl
lret
add
int
idivb
sbb
aas
sbb
push
jo
leave
and
fiaddl
out
jns
sarl
or
jne
fnstcw
insb
pop
lret
and
lret
es
or
add
rolb
hlt
push
cmp
mov
popf
xor
aad
notb
sub
jle
leave
lods
dec
push
pop
jg
call
xchg
add
pop
out
inc
fsts
adc
cmc
adc
test
dec
clc
rorb
sub
in
test
jb
dec
pushf
cmp
and
movsl
pop
pop
lret
imul
xchg
imul
fwait
and
jl
push
push
mov
inc
rcl
adc
pushl
mov
mov
daa
lret
mov
dec
loopne
cld
imul
sahf
adc
pusha
fmull
pop
dec
cmp
jbe
jecxz
fmull
cltd
dec
scas
sub
lock
push
dec
test
jno
xor
cmp
xor
ror
cltd
inc
lret
dec
adc
movsb
in
inc
mov
testb
cltd
clc
cmc
popa
push
jge
mov
jns
and
dec
inc
inc
jbe
pop
mov
lock
jp
cs
out
adc
or
jl
sbb
jns
cli
sub
roll
and
mov
cmp
shlb
jp
fidivs
fdivrp
cmc
iret
aam
push
xchg
decb
ds
adc
repnz
sbb
add
mov
jecxz
push
mov
lahf
cmp
cmp
mov
ret
andl
sbb
mov
in
xor
fisubrl
jne
nop
rol
xchg
adc
jno
mov
or
mov
add
cmpsb
or
push
xor
out
dec
in
xchg
das
mov
sub
rcl
iret
loop
pop
mov
pop
push
test
aas
cwtl
mov
xchg
cs
stc
out
dec
mov
mov
fwait
test
fwait
sbb
add
shrb
daa
jb
out
mov
adc
push
ret
out
aas
or
out
mov
mov
rorl
push
cwtl
cmp
ds
push
in
call
aas
out
sbb
inc
add
push
pop
test
sbb
imul
or
push
inc
into
adc
pop
gs
ret
pusha
add
scas
jns
pushf
cmovl
test
sub
cmp
pop
jno
or
adc
jnp
sti
int
mov
adcb
into
cltd
daa
fcoms
imul
mov
push
or
dec
int
shll
shl
aaa
fiaddl
out
add
mov
mov
jl
pop
and
punpcklwd
setns
cli
xor
sbb
pop
cmp
fldt
and
pop
xchg
pop
sahf
fisttpll
iret
mov
rcrl
jg
imul
cmp
out
aas
mov
pop
xor
scas
in
pop
sbb
out
or
add
adc
add
sarl
sti
mov
je
xchg
pop
test
daa
mov
inc
adc
outsb
cmp
jge
nop
mov
incb
mov
xor
out
shll
push
mov
movsl
mov
insb
mov
aaa
in
dec
cmc
mov
std
sbb
rorb
push
jb
push
ret
push
pop
mov
cmc
repz
cmpsb
ret
cmp
das
fcmovu
mov
scas
pop
xor
out
mov
or
add
mov
fimuls
data16
xchg
mov
lods
and
or
push
add
gs
mov
movsb
fadd
insb
adc
adc
daa
or
xorb
adc
stos
xor
cmpsl
xchg
jnp
cmpsb
fcompl
jbe
and
or
ljmp
adc
insl
cld
mov
or
inc
shr
xor
les
jo
push
clts
jae
mov
push
pop
jne
out
xchg
aas
lret
rcll
into
sub
jle
mov
xor
jl
pusha
repz
adc
pop
out
loope
popa
repnz
xchg
mov
sbb
sub
and
lret
inc
cmp
std
incb
dec
scas
sbb
mov
leave
cmc
jge
fs
lods
in
mov
pop
sbb
push
mov
in
adc
adc
cmp
cli
xchg
add
mov
fisttps
xchg
pop
and
jns
mov
out
clc
repz
negl
in
add
fwait
jno
fsubs
jne
sub
test
ror
into
mov
or
push
xchg
imul
ja
pop
ret
lret
imul
scas
stos
push
js
pop
jbe
pushf
stos
cli
in
jo
xchg
testl
nop
xor
sbb
mov
push
bound
lods
outsl
shlb
stos
dec
add
inc
hlt
adc
dec
repnz
xchg
lret
jmp
popf
insb
sub
and
pop
lret
fnstcw
fidivl
adc
jo
fwait
cmpsl
ds
test
xor
cmp
xor
popf
test
lret
fmull
mov
int
out
scas
ljmp
pop
pop
jb
push
cmp
sti
fdivrl
insb
cmp
lock
ds
cld
hlt
out
hlt
sub
scas
das
hlt
cld
loope
in
gs
fidivl
or
push
add
out
ret
cmp
jl
out
test
js
push
fiaddl
int3
jno
inc
out
jbe
mov
pushf
cltd
orl
pusha
lods
ljmp
adc
jg
call
pop
push
mov
test
sbb
iret
cmp
push
inc
xchg
iret
cld
sbb
mov
rorb
and
stos
fimuls
dec
lods
jo
push
sbb
add
loope
mov
xorb
imul
push
sbb
push
loope
jno
loop
fwait
mov
pop
dec
push
dec
add
jmp
les
sbb
test
shr
and
decb
push
and
ljmp
mov
fwait
cli
bound
sbb
arpl
lods
mov
jg
mov
jp
mov
jns
iret
ds
les
cmp
or
push
and
dec
repz
sarl
dec
je
inc
inc
xchg
outsb
mov
cmpsl
test
xor
and
cli
pusha
popa
fmull
mov
adc
mov
movsl
mov
stos
xor
out
fs
pop
sbbb
sbb
in
mov
sbb
mov
xchg
bound
shll
add
imul
fldenv
pop
hlt
push
xchg
xor
inc
mov
adc
scas
clc
xchg
out
xorl
cmp
xchg
movsb
or
rolb
ja
push
imull
xchg
add
add
cmp
nop
add
mov
lret
jge
inc
movsb
jge
test
in
and
adc
push
xchg
aad
gs
mov
loopne
sbb
mov
mov
mov
repz
jl
enter
aaa
or
hlt
mov
faddl
xchg
bound
cmpb
repz
xlat
mov
movsl
sbbb
cltd
mov
lods
lcall
push
mov
or
adc
jp
sub
mov
mov
pushf
dec
cmp
dec
fptan
and
dec
xchg
lock
inc
movsb
pop
ljmp
and
push
and
fstpl
push
add
xor
addl
sbb
inc
mov
mov
push
add
divl
movsb
jp
dec
sbb
loope
adc
aas
shll
xchg
dec
xchg
ret
jl
mov
pop
not
sahf
cmp
xor
mov
jp
mov
ljmp
jnp
mov
js
test
cli
scas
je
jne
in
lea
xorl
mov
jb
dec
fnstenv
rorb
mov
sarl
movsb
scas
jbe
xchg
push
xor
or
int3
in
push
in
cwtl
outsb
inc
leave
ret
rcl
addb
inc
adc
and
rclb
outsb
dec
mov
call
pop
mov
and
fiaddl
test
ror
push
aas
and
cmpsb
sbb
dec
push
ds
dec
mov
lock
xchg
add
and
int
sti
or
js
add
and
dec
adc
lods
push
push
cmp
adc
cmp
shll
mov
leave
xlat
xchg
xor
testb
pop
in
shl
dec
cli
or
push
pushf
ret
lock
jle
lds
outsb
pop
cld
stc
and
inc
lods
xchg
jno
lret
add
dec
xchg
jns
fnstsw
mov
mov
or
es
out
pop
mov
mov
pop
jnp
stos
test
sub
stos
andb
mov
insl
dec
jne
push
mov
jecxz
js
mov
add
enter
enter
xor
outsl
lahf
and
add
pop
jl
sub
les
xlat
dec
inc
mov
rcll
mov
cmp
xchg
test
sarb
adcl
mov
and
sbb
in
into
lret
push
cld
mov
dec
dec
cli
dec
push
dec
shll
leave
pushf
in
jmp
adc
push
pop
add
sahf
pop
dec
adc
out
sub
mov
and
mov
cmpsl
mov
add
sub
add
dec
mov
mov
dec
push
pop
sbb
pushf
or
fstps
xchg
ret
jmp
pop
mov
addr16
mov
sbb
pop
push
leave
outsb
leave
mov
dec
fisubrl
cmp
and
dec
pop
test
add
push
and
pop
dec
dec
data16
cmp
cwtl
push
sub
aaa
mov
add
adc
shrl
xchg
dec
inc
movl
imul
aaa
cltd
adc
adc
stos
iret
movsl
imul
pushf
sbb
aam
sbb
inc
mov
popa
inc
mov
ficompl
jmp
mov
sub
insl
inc
shl
iret
or
pop
repnz
repnz
sbb
lret
lret
movl
fistps
testb
ds
ja
imul
push
out
jne
mov
dec
mov
sbb
push
adc
mov
das
mov
sahf
imul
sarl
fsubrl
mov
xor
mov
mov
ficomps
ret
aam
jo
insl
out
jge
mov
mov
lea
jo
sbb
add
sub
in
cmp
cltd
out
pop
add
push
adc
fmull
rclb
addr16
das
les
lock
aaa
cmpsb
repnz
loopne
mov
stos
in
xchg
pop
sbb
gs
adc
mov
daa
jl
jmp
into
in
jecxz
rcrb
xor
cmpsl
xchg
xor
jno
movsl
call
push
insb
add
mov
sar
cmpl
imul
mov
out
sbb
std
cmp
je
sbb
adc
pop
mov
xor
push
sahf
xor
xchg
jbe
xor
mov
push
jg
fisttpll
fsubrl
xchg
add
int3
inc
lock
test
mov
lds
cmpsb
adc
test
sahf
xchg
push
lods
push
or
leave
and
imul
stc
das
jo
push
movsb
inc
imul
leave
mov
arpl
sbb
imul
cmp
dec
push
pop
cwtl
push
lret
test
ja
push
mov
jmp
pop
subl
dec
or
xor
enter
loop
aaa
pop
xor
pop
cli
lcall
cmp
and
addr16
jecxz
mov
pop
mov
jns
aam
cmp
add
ss
fmul
mov
mov
adc
dec
mov
and
and
pushf
movsb
lret
stc
push
lds
lcall
sbb
xchg
fstpl
and
les
pop
sub
popa
stc
andb
pushw
mov
xorb
inc
pushf
pop
cmpsb
mov
add
add
fldcw
add
pushf
and
dec
and
xor
add
dec
mov
fs
inc
inc
xchg
xor
in
fbstp
aam
cmp
cmp
es
inc
in
out
loop
add
in
cmp
jle
cmc
nop
add
pop
sbb
sahf
add
push
mov
sbb
sub
pop
icebp
sbb
cmp
sbb
cmp
mov
dec
jns
xor
jbe
lea
bound
jbe
add
push
stc
lret
shlb
jno
xor
popa
test
dec
cli
inc
repz
idivb
leave
les
int3
andb
jae
rclb
insl
mov
enter
lcall
jmp
das
pop
in
add
ja
mov
lds
add
pusha
adc
dec
sub
sub
mov
std
lods
daa
xchg
subb
out
sub
mov
lcall
or
js
hlt
mov
adc
cltd
mov
mov
or
out
push
ret
incl
adc
call
stos
mov
enter
jg
mov
mov
clc
cmp
fwait
mov
push
jge
sub
xchg
jae
out
sbb
jb
outsl
sbb
loopne
xor
int3
mov
cwtl
in
add
pop
sub
cmpsl
ds
push
fs
pusha
enter
aam
sti
gs
mov
aas
lret
inc
jg
popa
ss
clc
lret
mov
int
pop
cmpsb
inc
ja
adc
adcl
xorb
mov
pop
jne
clc
cmp
pop
jl
pop
test
pusha
gs
stc
cli
rcr
in
es
into
push
out
add
sub
int3
sub
or
cmp
cmpsb
jmp
dec
jns
insb
gs
adc
mov
xor
inc
jge
jle
mov
ret
mov
cli
mov
lods
xor
fldcw
add
je
pop
adc
sub
jmp
fisubrl
jle
loopne
dec
cltd
xor
mov
bound
rolb
inc
lcall
fisubrs
push
mov
dec
and
sub
int3
push
sbb
jl
sbb
daa
out
xchg
mov
dec
fs
fwait
or
and
xor
cwtl
pushaw
adc
or
xor
aaa
aam
jno
add
test
cmc
and
setnp
test
outsb
les
push
pop
je
sbb
daa
jo
cmp
test
adc
mov
jne
fs
ja
cmpb
or
lahf
or
cmp
das
movsl
sbb
adc
dec
lret
cmpsl
mov
adc
pop
xchg
notl
subl
addb
sub
lock
inc
mov
negl
xchg
mov
jl
hlt
ret
test
cmpsl
or
jmp
mov
sbb
and
add
fildll
decb
lcall
cmp
push
sbb
mov
cs
xor
jmp
sbb
testb
scas
pop
jg
cli
scas
jo
pop
jle
jecxz
aaa
or
repz
dec
subl
shrb
jp
inc
xchg
call
push
fidivl
daa
jecxz
nop
push
adc
xchg
inc
mov
jmp
xor
lahf
shl
ficoml
aaa
jae
sbb
inc
cmp
xchg
fisttpll
mov
and
dec
clc
pusha
or
jle
lret
icebp
das
jns
cmp
inc
add
push
mov
or
negb
lea
insb
pusha
sub
sbb
push
iret
daa
mov
push
mov
pshufw
outsl
inc
js
and
mov
fs
mov
repz
cmp
popa
add
out
dec
das
pop
sbb
sub
push
or
xchg
push
lcall
or
inc
and
sahf
call
shlb
cs
fidivrl
cmp
jb
pop
mov
icebp
inc
popf
loop
lret
test
ja
sbb
stc
cmpsl
xor
and
push
negl
out
mov
push
in
mov
bound
inc
pusha
cmp
xor
mov
adc
jnp
mov
stos
test
and
stos
adc
divl
inc
lock
fsubrl
ret
dec
cmp
jbe
iretw
mov
pusha
push
aad
fldl
pushfw
jne
jb
jns
push
es
and
sub
jns
xchg
loope
push
push
stos
xchg
mov
in
and
sti
sub
call
test
fwait
mov
cmc
or
push
mov
xor
andl
cwtl
orb
or
mov
dec
cli
jl
sub
fwait
sahf
push
xchg
das
mov
jne
jbe
xor
adc
push
mov
and
xchg
pop
mov
add
test
fcmovne
and
mov
jmp
add
jge
leave
jo
repz
mov
mov
sub
jg
lock
mov
ds
mulb
push
push
sbb
cs
add
in
mov
jp
negb
sub
lds
in
pop
int
cld
nop
es
xor
jnp
stos
ds
outsb
imul
xor
dec
mov
jl
lds
repnz
adc
and
int3
jle
ret
in
pushf
xor
xor
cli
mov
pop
iret
push
test
cmp
fdivs
repz
lcall
out
test
ljmp
dec
aaa
cmpsl
adc
lahf
mov
lock
mov
xchg
mov
cmp
dec
push
pop
in
jb
cmp
sbb
imul
adc
and
xchg
loope
push
add
lahf
adc
shrb
movsl
push
cmp
xchg
mov
push
popf
outsb
adc
push
pop
sub
lret
ret
ret
adc
mov
cli
outsb
push
das
enter
mov
ljmp
add
dec
outsl
movsl
push
add
xchg
mov
mov
pushf
stos
or
fwait
bound
inc
mov
lods
inc
insl
sbb
add
cmpsb
pop
scas
inc
addb
mov
stc
or
mov
ljmp
sbb
rcl
repnz
adc
movsl
push
lods
jp
xchg
sub
insl
and
xor
adc
fcomip
psubusw
fs
or
pop
push
add
arpl
mov
adc
xor
lcall
mov
mov
push
ret
shl
incl
or
ljmp
pop
imul
xor
addl
and
or
ds
jne
ss
mov
out
ja
push
data16
mov
pop
jmp
adc
jo
add
inc
xorl
cmc
adc
push
popf
ss
xor
cs
and
push
and
add
add
loope
mov
xchg
sub
fldcw
loop
sahf
dec
add
lret
inc
arpl
clc
jne
mov
dec
test
xor
fcmovb
mov
inc
sbb
imul
jle
fs
clc
loope
lcall
outsb
enter
mov
enter
fnstcw
loope
scas
dec
dec
adc
mov
pop
inc
js
lea
jmp
mov
push
adcl
icebp
in
or
movsb
push
push
pusha
push
mov
into
xchg
push
push
and
out
cmpsl
daa
aaa
xchg
push
inc
xchg
sub
ss
inc
cmp
mov
aas
adc
adc
inc
cwtl
jle
jl
sub
mov
jge
and
ds
sbbb
into
je
pop
sub
rep
pushf
movsb
mov
mov
xor
mov
data16
mov
ret
jbe
ds
adc
test
pop
mov
push
sti
lds
stc
inc
cmpsl
nop
ds
gs
in
cwtl
cmp
lea
fwait
arpl
aad
lret
cvtps2pd
pop
push
cli
test
jae
cmpsb
mov
cltd
stos
mov
pop
inc
jnp
mov
js
popf
lret
or
mov
adc
sti
movsl
jg
push
jmp
lea
or
ljmp
push
aas
rcrl
hlt
or
mov
sbb
int3
inc
lock
push
repz
stos
ret
out
xor
or
int
pop
mov
pushf
mov
dec
sbb
xor
rorb
test
mov
add
loope
inc
push
popa
mov
add
mov
sub
ror
insb
js
fisttpll
inc
cli
mov
repz
xor
mov
lea
rcrb
popa
pop
std
jne
cmp
loope
xchg
mov
xchg
xchg
sbb
inc
and
sub
mov
aaa
mov
xchg
movsl
or
xchg
dec
push
ljmp
jno
test
xor
inc
lret
loopne
cltd
xchg
cwtl
dec
iret
data16
adc
xlat
int3
out
idivb
in
lcall
sti
sbb
mov
in
gs
sbb
inc
mov
aam
aad
add
inc
and
mov
in
ja
push
bound
mov
lods
fstpt
mov
cli
dec
adc
pop
add
scas
mov
loop
pop
movb
test
xor
cmp
lds
add
scas
in
sub
pusha
dec
stc
mov
sub
les
cs
out
add
lcall
add
addr16
mov
ljmp
sbbb
jb
push
and
aam
in
mov
sub
xor
xchg
test
loopne
inc
add
or
test
fwait
xchg
loope
fisubrl
xchg
popa
xchg
test
insb
daa
pop
in
add
insl
hlt
sarl
mov
adc
mov
jge
divb
xor
test
ret
cmc
add
mov
and
sub
push
lret
lahf
enter
jae
int3
in
in
cld
ds
mov
xchg
pop
xchg
adc
sbb
mov
incb
cld
aaa
lock
fildl
pop
test
or
mov
filds
cmp
inc
cmpsb
push
stc
sub
popf
and
ljmp
mov
movsl
pop
mov
xchg
notb
inc
and
mov
sar
cmp
push
dec
or
adc
aam
sbbl
xchg
jb
push
add
mov
pop
scas
enter
test
pop
paddsb
push
jno
jle
push
sub
add
adc
int3
in
cld
fs
jne
mov
jae
lret
pushf
xchg
pop
adc
fst
gs
cli
fnstsw
adc
xchg
sti
inc
lcall
fistpl
or
cmpsl
jecxz
inc
xchg
push
inc
cld
pop
nop
repz
pop
adc
daa
mov
ja
out
xor
pop
aad
mov
or
cmc
jns
and
and
adc
testl
cs
mov
fbstp
loope,pt
out
xor
cli
imul
mov
sub
in
fidivs
jnp
orb
fsubrs
mov
jl
mov
fdivs
pop
xchg
test
xchg
pop
push
std
push
mov
imul
inc
mov
rcrl
ljmp
call
fnsave
lret
rcrl
or
xchg
or
bt
add
adc
and
faddl
xor
pop
pop
xor
cmpsb
in
mov
mov
fldt
sbb
xlat
or
sub
jp
cmc
add
cli
test
push
cwtl
inc
jmp
fcomp
push
or
pop
sub
pop
jge
add
jb
clc
lods
sbb
jp
push
in
jbe
adc
scas
push
sti
mov
xchg
add
nop
pop
call
idivb
push
push
andl
lds
cwtl
pop
xchg
ficomps
mov
das
cmc
jge
iret
in
adc
movsl
sub
sbb
movsb
sbb
and
ljmp
cmp
pop
sbb
cmp
ret
in
mov
mov
jge
jb
and
fnstenv
lahf
inc
xchg
out
xchg
shll
fwait
cs
xchg
or
mov
les
mov
xchg
sbb
cwtl
sbb
inc
clc
movsl
in
mov
insb
nop
mov
and
sbb
cmp
push
cltd
pop
xchg
add
pop
test
add
lret
xchg
adc
addr16
test
mov
aad
scas
pop
pusha
jle
bound
arpl
pop
add
push
gs
sub
enter
add
popl
jp
jbe
arpl
mov
scas
loope
test
push
xlat
xchg
aad
cli
ss
xchg
xor
cld
ss
sahf
add
testb
js
mov
lret
repz
imul
scas
in
inc
rorb
cmp
adc
aad
jb
pop
pop
pushf
movl
aas
in
mov
adc
addr16
lods
fs
scas
int
add
jecxz
xchg
aaa
ffree
ljmp
movsl
out
cmp
sub
mov
xor
popa
jae
fs
xor
popa
mov
in
dec
je
aad
mov
xor
cmp
add
loop
and
test
cmp
jp
movsb
lcall
dec
insb
jg
movsb
dec
loope
mov
xchg
in
repnz
push
pusha
sahf
sbb
xchg
fiaddl
xchg
inc
ds
add
cmpl
dec
fwait
enter
stos
loop
lods
push
cmpsl
mov
cmp
xor
out
and
dec
cmp
loop
imul
xor
or
jl
cli
out
jb
add
adc
fwait
xchg
mov
and
add
mov
lret
jge
fcomp
pop
imul
and
inc
mov
jb
jge
sarl
xor
addl
and
gs
jbe
add
pop
ret
sub
fs
je
mov
adc
mul
pop
test
mov
cs
out
sbb
or
cmpl
insl
iret
sbb
scas
push
loope
sbb
popa
leave
cmp
fcmovnbe
jmp
xor
inc
fwait
pop
sbb
es
incb
jmp
jmp
xchg
mov
data16
cmp
outsb
movl
add
dec
push
sti
dec
or
pop
sbb
movb
sub
mov
es
fcmove
addr16
mov
dec
divb
rorb
lock
enter
rolb
pop
jle
call
pop
je
hlt
std
roll
xchg
fldl
test
and
js
mov
das
rorb
sub
fcompl
fcompl
sub
sarl
stos
cwtl
xchg
pop
shrl
xchg
pop
xor
xchg
in
arpl
adc
lock
aad
repnz
das
out
testl
cmc
mov
sub
inc
xorl
lcall
stc
dec
xchg
sbb
mov
in
cmc
add
leave
mov
dec
andl
mov
or
loop
scas
xor
mov
sbb
and
adc
jae
loope
and
in
cmp
xchg
jns
scas
movsb
jnp
mov
inc
lcall
or
ror
dec
pop
cltd
sub
mov
aam
cmpsb
lcall
push
xor
mov
in
jp
jge
pop
add
dec
cmp
inc
lret
mov
dec
adc
addr16
mov
andl
and
sbb
inc
aam
loop
push
jl
sbb
movsb
sti
or
mov
les
loop
sub
jl
mov
or
and
ljmp
lcall
xchg
scas
in
sub
jecxz
pusha
stos
push
lea
stos
push
pop
mov
in
fsubs
lahf
dec
out
aaa
movsb
sub
mov
xlat
mull
pop
jne
lret
out
jae
jbe
cmpsb
jmp
test
pushf
lods
ljmp
adc
mov
dec
and
dec
jg
cltd
xchg
and
jmp
fnsave
dec
jo
sub
inc
dec
pop
ret
fdivl
push
out
push
shl
jb
mov
dec
out
je
mov
cmp
lcall
inc
pop
and
movsb
or
test
fs
jg
out
add
inc
mov
mov
cmp
dec
test
sbb
in
push
dec
in
sub
mov
push
sub
jg
popf
fstpt
call
sub
fs
insb
xor
decl
sub
add
lahf
insb
and
js
jnp
aam
and
pop
jle
jle
xchg
pushf
mulb
mov
or
stos
sahf
jg
icebp
xor
out
inc
inc
test
aam
sbb
lods
xchg
mov
cs
jb
cmp
or
push
pop
inc
adc
test
mov
lahf
das
insb
xchg
js
xchg
xor
mov
sub
sahf
std
mov
mov
insl
inc
jnp
push
lret
push
mov
pop
jle,pt
out
cmpsl
or
xor
jg
loope
insl
mov
push
jl
lock
popa
ret
adc
shl
insl
push
sbbl
lahf
test
mov
push
push
pop
sbbb
subl
mov
adc
rcll
xchg
xchg
inc
jb
test
mov
push
xor
stc
jmp
jp
jmp
pop
push
ficomps
cltd
outsb
mov
push
test
pop
pop
sub
repnz
lret
pop
test
nop
dec
mov
pushf
inc
leave
test
push
fstpt
out
mov
pop
lret
clc
pop
or
rol
or
xchg
mov
dec
adc
adc
sbb
push
lods
xorb
push
cltd
adc
jg
sub
pop
gs
adc
mov
out
and
add
in
stos
sbb
push
pop
mov
inc
xchg
xchg
cli
add
push
pop
push
leave
sbb
rcrl
jmp
leave
cmp
enter
popf
push
loopne
and
xor
fstpt
xor
leave
mov
in
mov
adc
jl
push
les
xchg
leave
stos
rcl
mov
cmp
in
pop
pop
out
subl
pop
adc
inc
cwtl
imul
xor
movsb
insl
leave
jnp
int
leave
sub
sub
fwait
aam
enter
hlt
cmpsl
rolb
loopne
sbb
pop
push
push
cmpsb
ljmp
in
iret
test
push
jb
rcrl
mov
push
mov
sbb
loope
shrb
les
aad
sahf
sbbl
pop
xchg
dec
add
xchg
mov
inc
dec
push
shlb
or
xor
imul
ljmp
pusha
xor
repz
lret
jecxz
test
jmp
adc
or
call
sub
divb
jns
cmp
fdivr
sbb
outsb
rorl
xor
enter
inc
mov
sub
stc
sbb
incb
xchg
pop
jb
subl
inc
pop
es
xchg
inc
sub
mov
lods
xchg
rcr
push
sbb
sahf
int3
cld
lods
sahf
dec
inc
rcl
pop
pop
mov
xchg
sub
in
push
xchg
push
inc
mov
dec
sahf
sbb
cmc
mov
jl
or
or
pop
cmp
xor
xchg
nop
or
adc
out
fistl
adc
mov
dec
cmp
jp
inc
pop
sbb
and
fbstp
xor
mov
pop
ret
bound
or
stc
jp
mov
push
aam
iret
dec
insb
and
in
int
imul
cmpsb
cmp
fwait
pop
sub
push
idiv
popf
mov
add
or
scas
cmp
enter
inc
movsb
xchg
adc
or
int
and
push
dec
in
add
popf
lods
sbb
pop
mov
dec
out
fidivs
nop
sub
mov
hlt
sbb
mov
call
inc
sub
imul
xchg
ds
ret
test
and
fdivl
inc
cld
call
arpl
push
adc
or
movsb
mov
std
clc
xor
outsb
mov
sbb
or
fwait
pop
jno
lret
orb
jne
adc
out
cmovl
lret
pop
pop
loop
mov
jo
test
dec
cmp
cld
inc
or
imul
xchg
mov
js
pusha
mov
pop
sbb
jge
mov
fsts
insb
jne
daa
aas
xchg
std
xchg
dec
cmp
dec
sub
fnstenv
cwtl
sti
mov
outsb
xor
cld
jp
jb
addr16
and
mov
mov
cmp
inc
add
outsb
fldcw
sbb
loopne
add
mov
cmpsl
sahf
sbb
sbb
lcall
fld
inc
dec
sarl
mov
jp
mov
mov
out
jae
dec
lret
pop
daa
cmc
iret
cmp
insl
pop
imul
addr16
mov
outsb
lcall
adcb
adc
and
shlb
lds
lock
pop
fistpll
xchg
mov
inc
addl
dec
in
mov
loope
pop
cmp
in
cmp
adc
ret
cmpsl
pop
popf
cwtl
mov
xor
lods
xchg
mov
mov
outsb
pusha
outsb
jnp
xor
jmp
pushf
mov
jno
aas
cltd
mov
movsl
shrl
jae
push
adc
mov
repz
sub
xchg
mov
int
add
cmp
sbb
and
push
sahf
sub
mov
fcmovnb
add
ja
idivb
getsec
mov
jl
stc
sbb
insb
fs
jge
xor
aas
or
cs
stos
jge
mov
mov
shrb
dec
mov
jb
inc
enter
loopne
or
mov
pop
in
out
clc
push
into
sub
fwait
inc
and
cmp
push
dec
mov
std
fs
fisubrl
pop
hlt
sti
lret
insl
fstps
pop
xor
xlat
add
mov
jns
out
int
leave
movsl
xchg
xor
sub
int3
xor
or
adc
mov
lret
ss
je
add
xor
sbb
adc
mov
mov
push
mov
sar
fwait
in
ja
ja
cli
subl
fucom
jb
mov
sbb
sbb
mov
out
sbb
fnstenv
sbb
stos
inc
sub
outsl
mov
loop
xor
lea
mov
sbb
test
xchg
fdivrs
xor
xchg
out
cmp
in
movsb
pop
inc
mov
or
mov
cld
mov
sub
xchg
daa
frstor
jns
ss
dec
xor
sbb
sub
jle
sub
mov
mov
adc
pop
adc
lock
arpl
shlb
xchg
cli
std
mov
push
jnp
dec
leave
mov
sbb
add
inc
mov
push
add
pushf
inc
inc
push
fldl
inc
sbb
out
jl
rol
loopne
push
inc
cmp
inc
inc
sbb
xchg
mov
inc
push
lret
mov
rep
xchg
hlt
lcall
or
add
out
addr16
or
cmpsb
xchg
test
mov
fsubl
pop
mov
test
fisttpl
dec
pop
lret
lods
jne
and
loope
test
popa
movsb
cmp
mov
mov
pop
cltd
mov
push
cs
fcom
loop
cmp
ret
jp
fisubl
push
push
lock
mov
mov
fs
mov
outsl
lcall
sbbb
jns
dec
rolb
cmp
out
jecxz
mov
cmp
mov
xlat
adcb
xchg
test
jnp
pop
push
fwait
arpl
cmp
mov
dec
imul
mov
les
mov
xchg
xor
inc
sahf
mov
mov
mov
mov
in
fistps
std
dec
xchg
adc
push
mov
ja
inc
std
sbb
cwtl
gs
js
jae
cmp
mov
xor
push
nop
rolb
mov
scas
jns
mov
idivl
shlb
xor
mov
pushf
lahf
pop
mov
adc
enter
dec
mov
lods
int3
outsb
test
and
and
enter
sbb
dec
ja
ficomps
mov
dec
cli
movsl
in
xor
jle
push
xor
mov
jmp
je
pop
or
sbb
ljmp
and
push
jg
dec
in
mov
in
jbe
in
mov
adc
stos
sti
testb
popa
inc
lea
cmp
ljmp
cmp
xchg
test
pop
ja
jecxz
pop
ss
imul
lret
lret
cmp
fisubrs
mov
mov
xchg
sbb
imulb
fldcw
mov
cmpsb
inc
xchg
outsb
incl
aaa
xlat
hlt
inc
fistps
fildl
mov
fcomps
or
xchg
xchg
or
sbb
iret
mov
sti
movsl
dec
fcoms
jmp
or
orb
fnstsw
inc
mov
mov
int3
inc
jecxz
and
cmp
sbb
jbe
int3
sbb
ret
out
xchg
ret
scas
ds
ja
fsubs
xchg
mov
ljmp
scas
push
call
std
and
fstp
push
std
push
mov
insb
xchg
sbb
int
or
dec
clc
mov
int
sub
sub
mov
loop
push
mov
add
rcl
jbe
sub
mov
lods
rorb
int
xchg
inc
jge
fcmovnb
nop
dec
std
xchg
sub
push
loopne
mov
sti
push
mov
icebp
and
in
test
pop
ret
push
cmpsb
in
aam
out
dec
xor
xchg
icebp
mov
sbb
push
mov
lahf
pop
or
scas
inc
rorl
push
cmp
lds
jo
out
mov
xchg
adc
xorb
lock
clc
in
add
ret
int
mov
pop
xor
jbe
jecxz
pop
aaa
leave
jno
movd
dec
cmp
daa
pop
enter
add
insb
je
adc
sbb
lret
cmp
fildll
imul
adc
int3
dec
xchg
lock
push
add
shl
in
es
loope
push
iret
fs
loop
mov
movsl
mov
push
movsl
cmp
dec
insl
sub
push
pop
mov
test
in
shrl
jmp
jle
scas
and
sbb
aaa
jmp
stc
push
in
test
inc
popl
cli
xor
jp
idivb
jle
testb
cs
fstp
inc
ret
push
jno
push
pusha
and
bound
lods
cwtl
inc
cmc
push
call
mov
lret
xor
mov
adc
pop
mov
repnz
clc
dec
inc
popa
add
aam
or
sub
or
xor
stos
and
movsb
lea
in
les
mov
jp
cmp
icebp
xchg
sub
ja
push
jl
movsb
outsl
sbb
mov
pop
sub
jbe
push
leave
int
mov
mov
sub
cmp
sub
pop
adc
mov
jbe
mov
and
or
mov
pushf
xchg
push
lock
jmp
test
loope
pop
dec
ds
pop
out
lahf
dec
xchg
daa
fildll
dec
mov
dec
bound
add
loope
shll
int3
movsl
sub
fisttpll
sub
xor
in
and
scas
les
arpl
enter
fs
test
lock
mov
stos
fcompl
loopne
nop
sbb
mov
icebp
out
sahf
int
pop
pop
fs
push
inc
into
lock
out
mov
push
outsl
ds
cmp
xchg
xlat
out
cmpsl
mov
daa
mov
xchg
testb
daa
sub
xchg
xchg
push
cmp
aaa
jb
cmp
fnstenv
fs
es
incl
cmp
fs
or
dec
sub
jp
stc
mov
in
lcall
cmp
popa
push
test
lods
xor
sbb
mov
mov
fwait
sbb
mov
mov
aad
or
add
jl
gs
inc
leave
sub
fnstsw
mov
jp
cmp
mov
in
sbb
jns
mov
lods
scas
add
mov
lea
test
mov
icebp
or
out
mov
popa
loop
inc
das
adc
cli
aas
xchg
lds
fldl2e
cli
hlt
lcall
mov
pop
jb
pop
cs
adc
or
cmp
push
aam
pop
cmp
insl
sbb
repnz
mov
adc
pop
adc
add
iret
movsl
fs
out
addl
mov
scas
jbe
pop
adc
mov
cmp
fildl
mov
js
outsb
addl
mov
lcall
fisubrs
shlb
sub
daa
pop
mov
orl
cld
cs
mov
and
push
in
jns
xchg
jl
scas
daa
out
sub
pop
bound
xor
clc
cmc
mov
dec
lret
mov
inc
mov
or
adc
lods
xchg
jbe
cmp
cld
xor
or
jl
sarb
mov
jg
fcmovbe
leave
fwait
inc
bound
scas
sti
daa
fldenv
push
into
inc
mov
addr16
sub
lcall
in
jle
xor
test
in
lods
inc
push
mov
cltd
dec
subb
or
in
call
mov
fsubrs
sar
hlt
in
adc
dec
cld
popa
push
jns
jb
fdivr
or
or
scas
push
or
rol
aad
ss
cmp
scas
pop
mov
scas
clc
hlt
aas
rorb
addr16
mov
dec
inc
cmp
mov
xor
incl
inc
lret
mov
mov
cmp
jmp
pop
sbb
out
dec
test
lea
jp
xchg
dec
bound
fldl
cmp
adc
rol
adc
es
jg
push
cmp
and
cmp
shlb
ss
scas
dec
cwtl
aas
mov
xor
push
loopne
mov
lret
mov
test
popl
jg
lock
jnp
ja
jecxz
add
or
pop
mov
mov
rolb
lret
decl
pusha
xchg
xor
data16
jmp
stos
sahf
subb
lcall
or
out
adcb
test
mov
test
adc
mov
arpl
es
adc
adc
movsl
fidivl
cmp
xor
mov
add
add
jae
dec
scas
sbb
repz
fs
out
sub
jl
fdivl
pop
push
mov
mov
dec
jb
sbb
mov
xchg
aam
mov
xchg
loop
pop
xorb
inc
lcall
inc
stos
cmp
jmp
and
in
xchg
insb
lahf
push
stos
xchg
mov
dec
jb
sub
daa
das
imul
imulb
mov
jb
sbb
jl
dec
gs
ret
mov
shll
sbb
pop
mov
int3
shll
fisttpll
cmp
aad
arpl
mov
es
es
aas
rorl
cmp
out
fildll
adc
fs
pop
inc
jbe
lea
mov
push
and
push
fs
jge
fldt
mov
cmc
or
cmp
mov
jno
cmp
ss
aam
pop
push
pop
or
mov
jbe
insb
xor
testb
adcl
iret
sbb
inc
pop
pop
lahf
or
adc
loop
fsubr
cld
out
je
ljmp
pop
js
lret
int
sahf
stc
in
je
in
insl
mov
sub
pop
push
pop
cmpsb
test
push
adc
in
sbb
sbb
iret
and
out
imul
insb
xchg
xor
sbb
mov
iret
aas
movsl
add
jno
jg
mov
ret
arpl
leave
lea
pop
fadds
mov
mov
push
test
frstor
push
imul
and
leave
pop
jmp
loop
add
sbb
sarb
mov
and
scas
pusha
jg
push
mov
cmpsb
pop
jnp
test
imul
mov
mov
mov
cmpsl
rcrb
in
push
jp
adcl
stc
pop
in
sbb
ja
pop
insb
xchg
hlt
mov
test
lea
jns
in
movsb
inc
pop
fdivrs
and
sarb
push
sbbb
movhps
mov
out
mov
mov
outsb
test
xchg
mov
push
lea
push
xor
lahf
mov
lods
popa
push
test
lods
shlb
jmp
cmpsl
or
sub
mov
add
inc
mov
shl
stos
out
jbe
mov
sarl
popf
cmp
cmove
xchg
je
in
or
or
jg
lods
shrl
ljmp
scas
dec
movsl
jge
enter
test
lret
and
out
mov
loopne
pop
sbb
call
ficoml
mov
jp
test
sub
imul
fwait
mov
mov
das
add
stc
push
enter
sti
pop
and
cmp
pop
mov
dec
andl
aaa
push
aaa
pop
mov
outsl
outsb
in
orl
notb
fistpll
jp
mov
inc
pop
or
xor
cmp
fsubp
sub
insl
adcl
nop
mov
mov
mov
push
loop
inc
or
scas
add
hlt
push
in
ds
std
jne
rorb
jg
divb
cmp
roll
push
rcrb
pop
fists
gs
xor
inc
mov
rolb
setae
add
jmp
xor
mov
int3
loop
cwtl
scas
push
xor
push
cmpsl
out
adc
or
push
xor
movsb
jo
movsl
call
xor
xor
imul
jns
int3
lcall
test
add
mov
xor
pusha
rcrl
test
aaa
sbb
and
sub
xchg
lds
pop
mov
cmp
jecxz
mov
push
bound
xchg
dec
sub
cmp
fists
js
mov
push
movsl
cmp
xchg
mov
cld
mov
dec
cmp
mov
dec
adc
testb
lods
imul
pop
les
movsl
push
cmp
psraw
add
adc
or
xchg
ss
or
daa
cmc
lea
sbb
push
aad
pop
stos
jmp
push
or
dec
outsb
shlb
mov
adc
lcall
cmpsl
stos
mov
or
push
test
pop
aaa
mov
jns
es
mov
add
sbbb
das
push
mov
or
outsb
mov
and
jne
pop
pusha
xor
in
lret
popf
sub
outsl
cmpsb
cmp
inc
call
int
mov
xchg
call
xchg
adc
jnp
push
dec
mov
aas
adc
xchg
and
mov
jnp
pop
lods
in
frstor
sbb
pop
dec
pusha
fldl
hlt
bound
int
xor
movsb
int
jl
movsb
lret
or
enter
std
out
push
add
scas
sub
mov
jno
xchg
sub
inc
and
mov
dec
push
movsb
lahf
fwait
sub
shl
mov
mov
mov
inc
int3
mov
cmp
int3
loop
mov
clc
frstor
addr16
dec
add
test
arpl
fiadds
out
push
clc
add
jno
int
lahf
mov
test
rcl
push
sbb
push
push
mov
lea
and
jns
add
fwait
xor
mov
dec
in
repz
mov
xchg
and
ss
je
idivb
leave
xor
xor
repnz
imul
mov
rcl
sub
fimull
popa
movsl
pop
xchg
scas
mov
xlat
mov
sub
shrl
mov
jmp
cmp
lret
mov
sti
popa
insb
imul
or
xor
repz
mov
movb
movsl
cli
jecxz
pop
sar
mov
enter
dec
or
mov
dec
pop
xchg
jle
push
loopne
in
dec
out
test
xor
adc
and
xchg
xchg
orl
pop
iret
ret
adc
fcom
cli
mov
pop
dec
or
in
pusha
or
xor
scas
cwtl
mov
lds
jmp
mov
mov
or
aad
inc
add
mov
push
jae
add
xlat
pop
sub
mov
shlb
mov
dec
cmpsl
sub
cmpsb
pop
into
mov
cmpsb
arpl
icebp
mov
and
addr16
xchg
mov
fistpl
add
push
sub
cmp
enter
daa
inc
mov
loope
mov
andl
and
movsl
aas
jne
mov
mov
daa
lahf
pop
adc
xchg
mov
lock
mov
push
cmpsb
inc
jo
fsubrs
inc
popf
adc
clc
jo
adc
mov
dec
pop
pop
jne
xchg
cld
mov
shll
jge
ret
movsl
lods
sub
jne
cs
cmpsb
lods
lods
push
cmp
fbld
jns
sbb
mov
mov
das
add
xchg
popa
lret
sbb
xchg
cmp
pop
inc
mov
insl
inc
mov
cli
repnz
cmp
mov
sbb
test
scas
xor
insb
adc
jo
mov
pop
jo
pop
sbb
xchg
inc
lea
or
sbb
gs
sbb
lcall
and
jns
data16
dec
mov
sub
arpl
push
xchg
cvtps2pd
jns
xchg
cmpb
jecxz
cmc
dec
jbe
popf
dec
mov
pop
movsl
dec
lea
jg
or
in
dec
andnps
and
dec
outsb
sti
imul
push
lock
sub
and
inc
aaa
sbb
shl
imul
cmc
xlat
sarl
sbb
adc
ds
arpl
pop
mov
loope
ss
mov
fwait
dec
insb
pop
xchg
test
or
push
mov
insb
cli
in
fimuls
jl
jp
das
mov
rcll
jnp
nop
in
ljmp
xchg
add
sbbl
leave
scas
aaa
push
out
inc
scas
xchg
addr16
aad
lods
mov
push
lcall
push
adc
jle
or
jl
fs
decb
dec
mov
xchg
or
jle
stos
fs
adc
xchg
or
gs
or
movsl
add
scas
imul
cltd
sbb
push
popa
inc
enter
out
push
cld
rcll
add
aaa
fildl
mov
xchg
jae
cmc
add
mov
and
pop
sbb
xorb
cmp
outsb
inc
scas
mov
arpl
adc
ret
rcrl
jg
in
out
push
cmp
pop
xchg
arpl
mov
mov
loop
push
dec
fisttpl
iret
fwait
add
andb
cmc
dec
sbb
mov
mov
pushf
pop
push
xchg
push
xorl
dec
cmp
jp
dec
push
loop
mov
jp
xchg
and
cltd
inc
fsubs
gs
pop
sub
cmp
arpl
mov
gs
lea
imul
cmp
shll
test
jmp
popf
in
in
mov
cmp
cld
aaa
mov
mul
xlat
add
out
addr16
add
pop
fcmovb
adc
call
aam
nop
sub
mov
scas
cli
sbb
loope
and
jb
es
dec
nop
icebp
or
xor
call
jns
sbbl
jmp
and
addr16
xchg
add
push
pop
adc
aas
in
cmp
xor
mov
dec
xor
and
jmp
push
push
dec
enter
in
cmp
add
or
push
cmp
push
jb
adc
ljmp
jnp
stos
outsw
adc
add
jle
or
add
aam
cmp
sbb
cmpsl
cmp
ret
rclb
mov
imul
mov
push
int
or
xchg
mov
adc
push
lock
push
outsl
and
mov
in
inc
dec
in
mov
popa
push
xchg
cwtl
or
addr16
mov
shr
push
cmp
andb
insb
adcb
les
dec
push
push
push
in
icebp
aad
cli
aas
ja
jg
cmpsl
test
adc
divps
jnp
dec
ljmp
dec
inc
adc
sub
mov
dec
xor
arpl
xorl
arpl
xchg
pop
push
sahf
scas
imul
mov
lods
sub
mov
xchg
ds
xor
bound
dec
and
out
repnz
dec
scas
pusha
mov
sbb
add
int3
dec
movsl
mov
sub
push
out
aaa
mov
imul
iret
push
push
sbb
shlb
out
in
int
pop
push
inc
pop
popw
rorl
fwait
or
loope
aas
mov
testb
jno
test
test
daa
adc
mov
or
divb
mov
jmp
and
sub
shl
dec
je
cmp
cmpsb
scas
push
movsb
out
hlt
cmpl
cltd
or
add
jno
pop
lea
cs
mul
inc
mov
jbe
cmp
xor
xlat
mov
movsl
dec
addl
sbb
add
mov
inc
xchg
mov
adc
adc
dec
outsl
mov
call
xlat
sbb
ret
xchg
or
daa
jo
inc
cmc
arpl
in
or
gs
shll
mov
xchg
pop
je
lahf
xlat
lock
test
sbb
sub
xor
mov
cltd
cmc
lea
dec
push
or
lods
cld
push
loopne
adc
fidivrl
imul
es
out
mov
jle
xchg
ds
mov
inc
xor
or
and
cs
ret
add
pop
cmp
movsb
add
fwait
jnp
hlt
cmp
lds
push
in
mov
cwtl
mov
jl
adc
into
mov
jg
sub
pusha
movsb
test
dec
add
dec
call
xchg
mov
orl
call
sub
xor
sbb
icebp
xchg
dec
push
ja
add
xchg
pop
sti
cmpsb
dec
pusha
repz
jge
iret
pop
add
sub
stc
jp
repnz
negb
xchg
into
cmpsl
call
mov
stos
mov
btc
ds
jo
outsb
notl
cld
cmp
mov
sub
in
mov
fdivr
xor
sbb
mov
xor
dec
mov
sahf
roll
dec
and
sbb
daa
sbb
imul
ret
cmc
or
repnz
lods
mov
punpcklwd
lock
cs
inc
int
rcll
mov
add
xchg
cltd
or
insl
dec
cmp
sbb
out
jmp
mov
and
xor
mov
lret
xchg
movsl
mov
adc
or
xor
push
fidivrl
outsl
mov
add
dec
mov
nop
cwtl
pop
fidivrl
ud2
leave
and
pop
ljmp
mov
insb
lods
add
lcall
nop
xor
dec
push
int
out
shrl
subl
mov
sti
mov
daa
jecxz
mov
cmpsb
xor
and
mov
push
sbb
rcrb
bound
add
movsl
push
loopne
xor
mov
bound
fisubs
sub
pop
pop
pop
xor
cld
stos
lock
daa
fistl
pop
or
fdivrs
sbb
scas
enter
popa
repnz
in
es
inc
cltd
xchg
test
push
stos
out
arpl
fldcw
bound
je
insb
ds
or
mov
mov
fiadds
sahf
sahf
sbb
es
cmp
sub
sbb
cmp
mov
jmp
jb
movsb
negl
out
sbb
sub
push
aaa
mov
test
loop
das
dec
cld
movsb
jo
add
adc
popa
sub
roll
cmp
mov
movsb
adc
nop
mov
faddl
test
frstor
leave
aaa
loop
stc
mov
aas
scas
adc
mov
insl
imul
ja
push
outsb
mov
jnp
ret
test
xor
jb
xor
cmpsb
test
insl
js
int
loop
cli
jecxz
dec
lcall
push
sub
int3
dec
push
shll
mov
sbb
dec
rolb
scas
std
into
mov
data16
or
push
jg
or
sbb
es
fsts
mov
add
jge
daa
sbb
dec
mov
xchg
push
test
hlt
aas
push
dec
ret
inc
lahf
test
or
jne
dec
mov
add
jns,pn
or
or
lret
mov
arpl
lcall
pusha
push
xchg
fnstsw
pop
sbb
mov
or
es
rclb
pop
jne
jle
add
push
out
and
dec
mulb
pop
je
roll
movsl
test
popw
mov
add
testl
orl
popa
popf
sbb
nop
jge
fcomps
rcl
ljmp
mov
icebp
shll
out
lods
or
cmp
imul
test
es
movsb
pop
adc
ss
jp
clc
xorb
out
sub
fisttpll
cmc
cld
xchg
test
in
mov
jo
sbb
adc
out
mov
mov
jmp
pop
jae
mov
lret
push
and
push
dec
xor
mull
add
ret
addr16
ljmp
pop
arpl
aas
cmp
pop
push
push
clc
adc
sub
andb
adc
pop
pop
fmuls
adc
xlat
repnz
dec
cmpsl
iret
jecxz
incl
dec
inc
popl
outsl
sbb
and
lds
mov
fsubl
jmp
shlb
inc
sbb
ret
outsb
loop
outsl
push
mov
add
loope
out
inc
popa
insl
sbb
mov
sub
fildll
adc
jmp
jnp
adc
xchg
add
dec
push
fisubs
jbe
xchg
test
add
loop
movsl
push
xlat
push
pushf
jo
push
xchg
mov
or
dec
shll
push
es
jmp
mov
sub
inc
in
and
cli
push
js
cmp
pop
sarl
lods
push
inc
fwait
jnp
jmp
mov
dec
imul
aad
or
aad
sahf
jne
pushf
test
outsb
jne
pop
mov
dec
sbb
cld
mov
push
ret
pop
cmpsb
aam
aaa
ss
out
movsb
mov
subb
out
notb
or
call
mov
scas
xor
divb
out
lret
in
repz
fdivrs
mov
push
aam
sbb
mov
popf
test
xchg
xor
xchg
ret
loope
out
in
push
loop
fcmovnbe
and
mov
jnp
in
es
xchg
stc
jb
scas
xorl
stos
out
and
stc
decl
fstps
bound
inc
cmp
sarb
clc
je
inc
fs
lds
daa
xor
add
in
dec
push
dec
sahf
inc
inc
xchg
pop
call
in
ud0
call
jmp
outsl
inc
out
pop
inc
xor
aas
sbbb
push
aam
jae
daa
leave
mov
cwtl
into
stos
mov
xor
cmp
adc
in
add
hlt
mov
push
lret
dec
adc
jae
out
and
mov
inc
xchg
add
scas
or
movsb
in
cmp
sub
leave
shr
push
sub
inc
add
xlat
rorb
out
mov
mov
and
jae
loope
adc
mov
mov
jmp
je
push
push
adc
int
xchg
arpl
ret
cmp
add
into
popf
fimull
mov
cmp
cmp
jge
pop
mov
int3
add
imul
andl
jnp
sbb
xor
dec
pop
push
lods
cmp
cmc
or
jae
outsl
pop
flds
ret
cmpsb
inc
movsl
ds
aad
aad
subl
movsl
lods
pushf
insl
leave
sbb
lock
test
stos
sbb
pop
andl
out
adc
sbb
test
es
sbb
sbb
jns
dec
mov
jp
fnsave
fisubrs
add
mov
push
insl
lods
data16
je
jl
jle
jae
or
call
insl
add
test
mov
data16
xchg
stc
adc
mov
aaa
andb
and
icebp
xchg
in
jae
rorb
push
lret
gs
imul
cli
mov
gs
jecxz
pop
inc
and
repz
lret
push
into
xchg
push
pop
lea
push
fs
adc
jbe
inc
or
xor
adc
jb
jle
mov
dec
das
int3
sbb
aas
cmp
mov
pop
xor
loop
cmc
mov
outsl
adc
aaa
jns
mov
xchg
jecxz
stc
stos
shlb
adc
xchg
clc
jmp
push
mov
mov
xor
incb
lock
les
insl
xchg
pop
push
or
push
mov
mov
cmp
out
jb
mov
out
xor
pop
std
inc
xor
inc
jg
xchg
int
inc
lret
xchg
xchg
xor
sbb
pop
dec
stos
push
enter
fsubrl
push
xor
aas
mov
iret
aaa
mov
sahf
inc
sbb
or
jl
into
js
mov
and
loop
rorl
pushf
inc
cld
dec
jmp
bound
cld
jmp
push
arpl
rol
cmc
sub
loop
xchg
xor
or
sbb
aam
and
and
mov
inc
mov
das
or
jg
adc
mov
or
dec
xchg
pop
xor
stos
xchg
cmp
jmp
dec
out
ret
movsb
dec
sbb
inc
jl
or
pop
cli
jg
ret
mov
das
cmp
inc
pop
pop
out
pop
lahf
imulb
mov
push
mov
sti
fidivrs
sbb
leave
cld
mov
popa
jnp
in
neg
movsl
fnsave
jo
in
pop
push
aam
dec
pop
jl
inc
in
ss
push
jns
jmp
xchg
in
outsb
ret
loop
sti
xchg
xlat
std
push
mov
mov
leave
sbb
fsubrs
rcrb
clc
cmp
lret
ret
jbe
lcall
xchg
xorl
add
mov
xor
mov
loope
dec
or
add
subl
sub
cmp
out
jae
sahf
sti
lock
adc
xchg
cmp
xchg
std
daa
call
hlt
xor
call
cmp
sub
arpl
ja
insb
in
pop
loope
xchg
cld
movsb
test
lcall
pop
jne
add
mov
cld
cmp
adc
lods
lret
sbb
jmp
push
popf
in
mov
mov
xor
mov
sahf
test
test
insl
movsl
lea
xchg
pop
xchg
cmc
cltd
add
sbb
in
insb
cltd
int3
lea
push
repnz
xor
mov
sub
js
mov
pop
sbb
xor
sti
shl
mov
das
jns
rorb
xchg
scas
cmc
ret
jnp
in
push
inc
fwait
mov
inc
in
into
cmp
cmp
mov
add
sub
bound
sbb
aaa
out
mov
cld
jmp
cld
mov
pop
mov
mov
mov
mov
inc
xor
mov
add
es
sub
jmp
mov
call
add
mov
cli
in
movsl
jno
and
fdivrl
sbb
or
mov
lret
cmp
sbb
gs
cmp
mov
xlat
popf
pop
push
dec
cmovns
cltd
loop
add
cwtl
xchg
aam
and
mov
jne
lret
idivl
xchg
adc
imul
mov
jno
or
fimuls
popa
cli
test
sbb
shl
jp
je
mov
aaa
jnp
sub
loope
dec
adc
jp
mov
add
aaa
hlt
mov
cmp
inc
sbb
push
jo
add
cmp
movsb
xchg
pop
pop
loop
add
out
push
adc
add
jg
mov
gs
xchg
pop
adc
push
sbb
jp
pop
das
int
out
cmc
hlt
add
test
xchg
fidivs
decl
stos
mov
mov
les
adc
sub
dec
les
dec
push
or
mov
in
std
in
pop
divl
das
cld
adc
xchg
dec
pushf
cwtl
jbe
movsb
mov
jle
fisubrs
fidivrl
mov
sub
mov
mov
test
jb
sub
gs
push
inc
repz
gs
jmp
adc
stc
xor
or
sub
sbb
cli
sub
push
js
adc
movsb
in
dec
icebp
mov
lret
push
std
loopne
sti
test
negl
out
sbb
test
push
fs
lcall
insb
ss
adc
mov
add
and
sub
je
pop
cmpb
lret
dec
sub
andb
lds
and
insl
addl
loope
into
mov
dec
fisttpll
inc
sub
mov
or
lcall
cmp
mov
xlat
mov
push
pop
dec
insb
in
and
and
mov
es
mov
in
popf
push
and
inc
ljmp
push
sbb
cmp
clc
mov
fwait
push
ja
sbb
mov
and
aaa
int
or
add
push
push
push
jecxz
fldl
sbb
arpl
cmc
add
dec
loope
sbb
test
sub
sbb
add
jg
cmp
orl
xchg
push
jbe
outsb
mov
push
sub
mov
cmp
or
jmp
je
call
cmp
aaa
jmp
cld
das
sub
enter
nop
sbb
dec
popf
arpl
and
fsubr
xchg
daa
or
mov
lds
mov
inc
push
sub
xor
push
lret
shll
gs
push
fcomps
cmp
cmp
xor
lods
sbb
outsb
xchg
cmpb
repnz
mov
outsl
push
mov
rcrb
dec
xchg
and
jno
fs
xor
pop
dec
inc
daa
jg
dec
inc
adcb
lods
add
sbb
into
aad
cld
cli
clc
jmp
fs
ljmp
rorb
movsl
fnstenv
daa
dec
je
mov
pushf
in
jl
mov
pop
dec
mov
inc
ljmp
jmp
jbe
and
jge
aad
fbld
jmp
pop
lods
andl
xor
inc
sbb
lret
aad
popa
dec
lret
inc
dec
adc
sbb
mov
xor
ret
push
fcoms
mov
shll
pop
movsl
pushf
sti
jb
jne
stc
add
leave
decl
xchg
kxnorb
mov
mov
inc
or
movsb
sbb
cmp
push
adc
lods
mov
movsl
push
outsb
xchg
adc
push
into
cmpsb
dec
out
mulb
insb
je
pop
push
fists
dec
push
popa
dec
xlat
subb
rorb
jecxz
scas
pop
inc
xchg
xor
push
xchg
test
adc
pop
outsb
inc
xchg
push
call
mov
out
test
pop
into
outsb
dec
jmp
adc
mov
dec
jbe
add
in
ss
xor
cmp
add
sahf
adc
mov
jae
jmp
fsts
leave
inc
mov
add
xor
push
lea
pop
test
jl
push
dec
push
adc
mov
pusha
xchg
and
jle
cmp
jne
xor
inc
in
mov
push
out
fs
lahf
loop
mov
fistpl
jp
and
aaa
fdivl
cmp
push
arpl
push
loopne
mov
push
jae
adc
sbb
mov
add
push
xchg
sbb
cwtl
call
inc
dec
std
bound
ds
push
mov
mov
inc
cli
jno
fwait
js
fcomps
inc
out
popf
insl
jbe
insb
sub
icebp
mov
and
test
aad
lds
lcall
ret
popf
jecxz
in
cmp
sbb
test
pop
jecxz
adc
xchg
iret
out
fildl
pop
and
lahf
out
cltd
fcmovne
add
pop
pop
mov
cmp
mov
outsb
or
jb
outsl
cmpsl
loop
xor
mov
je
mov
imul
inc
aas
imull
push
int
add
int3
out
aad
roll
inc
movsb
lahf
outsb
sub
scas
fldcw
shrl
sub
cltd
out
rcll
cmp
mov
out
jge
loopne
int
mov
shlb
mov
pop
pop
jle
lcall
sbb
insb
jp
xor
push
scas
push
out
or
or
leave
sub
cmp
mov
sbb
and
xor
outsl
dec
mull
lcall
cmpsb
mov
jmp
mov
int
shll
test
pop
in
icebp
mov
sbb
es
je
sbb
cmp
call
mov
orl
jbe
ljmp
mov
pusha
push
mov
iret
fistps
je
xchg
or
jnp
stos
inc
in
dec
in
in
jge
xlat
stc
adc
outsb
xchg
xchg
mov
rcr
jb
aad
leave
xchg
inc
pop
sti
in
mov
xorb
cmpl
pop
cs
std
jo
mov
jns
js
ss
cmp
test
in
lods
push
or
scas
popa
dec
test
pop
mov
mov
rcll
mov
ficoml
je
jbe
jecxz
leave
mov
inc
pop
jle
movsl
xor
or
mov
es
sbb
repnz
add
pop
jge
test
push
mov
sbb
lret
btsl
inc
jno
sub
cmp
aaa
mov
lea
cmpl
xchg
inc
jg
mov
mov
xlat
xlat
dec
fldt
movsl
mov
mov
sahf
cmpsb
pop
mov
pop
arpl
and
mov
lods
arpl
sub
stc
jle
clc
mov
xor
add
xchg
sbb
repnz
ljmp
adc
adc
sbb
xor
jp
hlt
jle
pusha
aam
cld
sub
rcll
clc
cmp
clc
data16
jo
adc
pop
popf
cs
repz
loopne
sti
sub
inc
add
mov
fstpl
xchg
inc
popa
sub
lods
popf
sbb
mov
gs
ss
push
in
jbe
in
push
pop
idiv
push
lahf
push
pusha
cs
dec
cmp
ljmp
lods
mov
inc
mov
call
das
mov
mov
inc
mov
and
fistps
inc
js
daa
mov
xchg
sub
xchg
out
popa
xchg
mov
push
cmp
or
pop
lret
push
out
cltd
add
jae
hlt
mov
xchg
jp
mov
pop
enter
ret
jbe
arpl
loop
pop
pop
add
or
dec
mov
push
lock
movsl
cli
xor
imul
pop
movsb
cmp
not
ret
jg
imulb
sarb
add
push
mov
ficoms
in
dec
fidivrl
fcoml
add
cmp
or
mov
jns
lahf
jle
aam
pop
popa
bound
lahf
push
mov
sti
andl
xchg
xchg
push
xor
aas
int3
idiv
dec
mov
cwtl
ja
idivl
movsb
add
xchg
pop
jecxz
mov
and
xchg
enter
mov
pop
xor
test
add
lods
test
xor
mov
xchg
mov
in
mov
sub
mov
lahf
sahf
xor
or
adc
notb
insl
xorl
or
pushf
sbb
xlat
in
or
pop
mov
mov
lcall
popf
test
stos
mov
fmuls
shlb
imul
cmp
adc
and
stc
in
stos
jge
or
sarl
add
int3
lea
imul
xchg
das
sub
sbb
dec
outsl
fs
ds
outsb
iret
in
les
cmp
in
lahf
lret
mov
mov
gs
gs
lds
mov
jns
and
or
cmp
aad
call
add
cmp
xchg
pop
loopne
xchg
outsb
mov
jno
and
lcall
mov
sbb
lds
stos
adc
adcb
lds
cmpsl
out
pop
mov
dec
into
push
cld
scas
pop
jg
jecxz
cmp
jae
mov
fiaddl
cli
pop
mov
scas
cmp
cld
aas
sbb
mov
mov
outsb
out
pop
sbb
dec
inc
hlt
mov
lcall
jg
pop
in
or
nop
fsub
and
jg
leave
nop
pop
jae
and
mov
and
idiv
mov
sarb
cmp
rolb
fwait
mov
add
jecxz
ret
mov
inc
and
mov
xchg
and
scas
mov
and
call
add
dec
fadds
push
inc
and
pop
inc
lods
loop
flds
push
push
xchg
xchg
jmp
jb
call
push
xchg
movsl
and
adc
lods
xor
cmp
xchg
sbb
xchg
jbe
mov
ret
enter
stos
pop
jns
aaa
jne
mov
mov
repz
outsl
call
inc
xchg
pop
xor
jg
dec
fidivl
mov
mov
xor
push
hlt
fsubs
cmp
sarl
cmp
push
ret
push
pop
jmp
or
pop
mov
ds
stc
stos
out
popf
mov
negl
scas
add
dec
lahf
repnz
mov
jbe
ret
jmp
dec
jecxz
je
loope
dec
test
inc
push
daa
mov
cmp
sbb
lcall
pusha
ret
pop
or
sarl
and
sub
xor
lods
xchg
scas
or
xchg
or
mov
add
repz
das
ljmp
add
add
lret
imull
scas
mov
out
std
dec
ja
addr16
test
paddusb
xlat
clc
adc
es
xor
adc
push
test
jmp
sbb
in
daa
xchg
les
mov
lds
mov
shrl
shl
xorl
aam
and
enter
jp
mov
js
sbb
adc
div
movsl
sub
jnp
test
mov
insb
scas
mov
adc
mov
push
mov
loope
jl
jae
cld
or
xchg
pop
out
das
mov
lock
lods
test
dec
fwait
xchg
cli
repnz
call
or
or
iret
test
mov
lret
lahf
dec
sbb
dec
data16
push
cmpsl
js
imul
jb
sbb
and
movsl
aam
mov
dec
cmc
fnstcw
ret
aaa
nop
test
pop
cmp
jb
inc
jnp
jnp
nop
in
sbb
out
sub
jg
test
or
sti
sub
sbb
add
jle
mov
xchg
fsubs
pop
aam
ljmp
outsl
cmp
in
fidivl
sub
or
or
stos
jo
sub
mov
xchg
mov
nop
rcr
loope
mov
pop
adc
pop
push
inc
aam
mov
push
jae
dec
jmp
andb
lret
test
rcl
cwtl
sbb
cs
cmp
in
sbb
mov
xlat
xchg
cmc
xchg
push
xlat
lock
mov
pop
mulb
loop
popa
inc
stc
mov
jno
adc
sbb
lds
cmp
dec
inc
and
fcompl
mov
out
les
jge
fdiv
les
cli
or
retw
stos
push
test
movsb
shll
out
push
lock
pop
rorb
pop
aad
outsl
inc
ljmp
lds
and
xor
mov
rcll
out
xor
mov
jg
fs
mov
clc
idivl
mov
xchg
cmp
hlt
imul
or
or
mov
arpl
fdivp
iret
pop
push
aad
loope
sarl
push
xor
cli
xor
js
sbb
pop
add
adc
adc
mov
cmp
shlb
mov
loope
xor
sub
out
jbe
cmpsl
shrb
cmp
test
mov
stos
xor
inc
xchg
mov
pusha
jle
cmp
inc
adc
shll
mov
xor
jp
inc
cmpsb
dec
inc
pop
shlb
addl
movsl
adc
jmp
cmc
xlat
lret
hlt
leave
push
cmp
jl
sbb
mov
mov
ljmp
dec
mov
clc
sub
xor
dec
lods
inc
ss
in
in
data16
jmp
daa
adc
and
jmp
nopl
insb
fimuls
movsl
inc
mov
out
inc
adc
ss
inc
xchg
pop
rcrl
ftst
aas
iret
inc
xor
xchg
xorb
cwtl
jp
jle
daa
and
lret
xchg
and
inc
lret
scas
sti
in
iret
pop
andb
scas
or
mov
je
xor
lret
cli
push
ret
dec
rol
pop
push
mov
nop
imul
add
cwtl
and
addb
fsubrl
dec
adc
inc
mov
jp
push
push
sarb
pop
push
push
sub
nop
or
adc
cmp
xchg
inc
mov
and
je
lds
sbb
jmp
pop
ret
out
in
mov
gs
loop
adc
cli
subl
clc
outsb
mov
cmc
mov
mov
aad
filds
mov
fimuls
or
out
into
pop
xlat
pop
sahf
jle
out
loope
in
push
out
cltd
negb
sub
mov
stc
inc
js
out
arpl
shrb
pop
sub
inc
or
gs
int
test
mov
mov
mov
inc
push
adcl
js
adc
inc
js
sbb
dec
shlb
fsubrs
jb
mov
ficoms
fwait
xor
sub
pop
sbb
ret
cmpsb
push
jg
add
int3
andl
push
les
xchg
lahf
add
sahf
mov
sub
out
sbb
cmp
std
pop
push
movsl
xlat
inc
cmp
lods
add
lret
ds
in
les
ret
inc
mov
xchg
jae
out
hlt
es
inc
xor
fisubs
add
inc
dec
iret
pushf
scas
pop
inc
dec
repnz
jb
jmp
arpl
icebp
add
lret
daa
das
aam
pop
sbb
leave
negb
std
movsl
and
cmp
or
add
pop
nop
ret
push
cmp
mov
js
push
or
mov
fdivrl
sbb
insl
dec
add
loope
mov
pop
jp
mov
push
or
mov
jge
and
lock
shrl
adc
cmpsl
pop
mov
push
sbb
aas
shlb
aas
imul
lods
enter
cld
jne
push
mov
aam
mov
repz
adc
dec
inc
jnp
inc
sahf
packssdw
orb
nop
push
fimull
ja
mov
pop
addr16
jp
lods
es
out
lods
sub
lods
int
subl
jnp
cmp
addr16
push
sub
cwtl
es
lds
cmp
out
mov
dec
jmp
pmulhw
scas
sub
cmp
jecxz
iret
movsb
jne
jnp
test
repz
mov
nop
xchg
xchg
xlat
fwait
scas
dec
enter
cli
push
dec
mov
mov
mov
sub
dec
dec
cltd
movsb
pop
ficoms
aad
gs
dec
sub
lret
test
jmp
es
sub
in
xchg
test
movsb
idivl
pop
dec
movsl
push
xchg
in
fbstp
lods
inc
sbb
jo
int3
rorl
lods
rclb
sbb
sub
xor
jmp
jg
lahf
sbb
in
insl
lods
pop
daa
adc
vpmadd52luq
pop
mov
int
out
or
mov
inc
cli
mov
pop
test
imul
push
cltd
dec
leave
gs
ss
mov
jg
out
shrl
xchg
add
mov
xor
leave
sarb
add
add
je
xchg
pop
fistpll
cmp
cmp
fisttps
sub
lock
inc
dec
test
mov
leave
push
jmp
mov
movsb
pop
mov
test
xor
jae
jp
jne
mov
push
jnp
cmp
movsl
cmp
adc
orl
xorl
dec
sbb
inc
nop
add
cli
jb
sbb
mov
mov
cmpsb
les
int
mov
mov
sbb
jno
mov
das
inc
inc
mov
enter
enter
or
push
cmpsl
es
lods
mov
jae
test
mov
dec
mov
rcll
loope
xchg
iret
xlat
pop
mov
nop
out
add
fnsetpm(287
sub
push
jbe
test
aam
jnp
dec
jle
push
fcmovu
loop
lods
negb
add
mov
inc
pop
mov
stc
pop
lock
jge
inc
xchg
or
xchg
add
rcr
outsb
cmp
das
jp
cmpsb
sub
and
add
adc
addr16
jl
sub
jno
fstpl
loope
lcall
sbb
xlat
popf
mov
adc
mov
arpl
push
xchg
sbb
aad
mov
mov
push
push
shll
sbb
sub
aaa
push
and
das
mov
jnp
mov
sar
pop
data16
int
push
outsb
repnz
and
sbb
int
jp
test
aam
pop
push
jmp
pusha
subb
inc
jns
mov
fadds
cmp
xor
or
sub
scas
inc
mov
pop
pop
or
insl
sub
lock
adc
ret
jp
jg
sub
imul
scas
xchg
pop
stos
cmc
mov
xorb
sbb
push
data16
addb
lds
leave
adc
add
xor
stc
sub
push
pushf
shll
outsl
xorl
add
imul
add
leave
test
dec
mov
mov
fwait
xlat
ret
mov
ljmp
xchg
mov
cld
aaa
jns
fs
push
jl
xchg
mov
jmp
add
sub
sbb
push
lods
push
daa
mov
loop
jmp
jmp
in
lea
sbb
std
push
iret
outsb
mov
inc
push
mov
notb
jle
daa
mov
stos
test
pop
in
pop
mov
movsl
or
adc
int3
rclb
movb
lods
not
sbb
pop
shll
sub
mov
lret
jp
jl
test
mov
pop
push
out
enter
sarl
adc
pusha
sbb
outsl
call
addl
push
divl
pop
in
inc
inc
negb
test
mov
xlat
jg
jle
jecxz
mov
js
lds
jge
jmp
mov
sbb
sbb
pop
jg
mov
je
int
sbb
pop
dec
push
lods
sub
std
xor
stc
inc
pop
adc
and
and
sbb
xchg
inc
sbb
je
add
jns
push
push
jmp
and
lds
sub
mov
call
push
mov
cmp
or
rclb
xor
fwait
xchg
pop
xchg
push
mov
push
sbb
insl
enter
jae
xchg
and
pop
lret
mov
popa
inc
andb
mov
inc
jge
orl
int
push
xchg
loope
cmpsl
mov
ficomps
sbb
push
cwtl
test
lods
mov
jge
push
shll
jbe
xor
or
adc
dec
xlat
or
adc
addl
int3
and
xchg
mov
jno
or
adc
hlt
mov
sub
test
jp
orl
inc
popf
insb
js
lods
push
popf
ror
std
adc
dec
es
xor
test
fldl
jl
sub
aad
sahf
mov
xor
inc
leave
lock
xchg
aad
rorl
out
and
pop
mov
ds
fists
xchg
pop
cmp
enter
ret
fisubrl
cld
hlt
jbe
mov
push
insb
push
xlat
push
xor
add
cmp
xor
inc
cmpsl
ds
jge
inc
or
cltd
out
add
dec
insb
shlb
jno
mov
fidivrs
sub
or
sub
not
imul
cmp
sbb
in
push
nop
shlb
cwtl
lret
mov
cwtl
dec
insl
pop
test
cltd
sbb
insb
jae
jmp
lcall
pop
cli
test
or
mov
test
lock
sbb
cld
add
lods
into
ret
pop
pop
xchg
jl
orb
loopne
lret
dec
insl
test
out
xchg
jo
test
and
pop
add
cmp
sub
cmpsl
ret
jp
fisttpl
sub
and
or
push
inc
jle
add
fwait
push
mov
dec
cmp
into
mov
loopne
add
push
push
repnz
inc
sbb
mov
mov
icebp
mov
cmp
xor
add
push
dec
mov
sbb
loopne
pop
je
out
lods
ret
mov
pop
dec
lods
sbb
and
inc
push
xor
sbb
call
fstpt
repnz
cmp
aaa
aad
mov
inc
dec
out
mov
add
jne
inc
dec
sub
and
pop
std
jb
and
imul
xor
xlat
inc
lahf
into
mov
cmpsb
stc
and
xchg
fwait
cmp
stos
jno
mov
and
int3
addb
in
in
lret
aad
sbb
cld
cmc
subb
and
orl
jnp
cmp
push
cmp
ret
or
add
lods
in
int
mov
jl
pop
pop
lods
dec
jnp
xor
jmp
cli
andb
rcll
fisubrl
ss
mov
shll
lock
sbb
or
push
test
and
in
sbb
repnz
sub
push
scas
bnd
decl
add
inc
jmp
shlb
or
push
lock
cmp
insb
push
mov
ret
roll
sub
fisubrl
mov
push
rcl
pop
sbbl
xlat
aad
jecxz
movsb
ss
lret
xchg
push
add
in
imul
push
sbb
leave
cli
dec
mov
das
pop
fstpt
mov
lds
lds
jmp
push
xchg
daa
mov
sub
dec
int3
aaa
pop
loopne
adc
sahf
mov
addr16
fildll
aad
fwait
mov
cmpsl
rcll
sub
lret
imulb
mov
sub
std
sub
mov
sub
cmp
xchg
mov
lret
add
fsubrl
lahf
arpl
jne
xchg
push
pop
adc
and
xchg
lss
ss
mov
sbb
jae
out
add
jns
mov
das
and
add
rclb
mov
jle
cmp
pusha
int
jmp
jnp
push
shlb
pop
cmpsb
jno
push
push
xor
cld
cmp
push
mov
xchg
push
xor
test
rorb
nop
cltd
mov
xlat
inc
pop
ss
adc
or
aaa
hlt
scas
mov
scas
jp
xlat
in
in
pushl
imul
dec
fs
xlat
push
xor
lahf
xlat
in
repz
mov
insl
clc
jl
stc
add
jo
push
cmc
dec
mov
pusha
leave
lret
cmpsb
clc
mov
div
je
outsl
loopne
dec
test
push
adc
sbb
sbb
aad
lods
fiaddl
dec
bound
xchg
and
jae
lcall
fcomip
cmp
xlat
sub
test
repz
js
sub
pop
sub
es
mov
cmp
test
jmp
or
mov
outsb
les
cmp
dec
dec
outsl
ja
insl
roll
jae
push
mov
push
pop
xchg
add
jmp
mov
push
ret
or
insb
mov
xlat
test
shll
add
fcomps
lods
add
shll
out
ja
push
notb
repz
pop
cmp
mov
gs
imul
cmc
push
xor
dec
jnp
jns
xchg
mov
pop
cmp
cmp
aas
push
sbb
pop
aad
mov
ja
xchg
and
stos
out
cmpsl
pop
into
pop
xchg
or
mov
mov
addl
sbb
or
jg
dec
mov
shlb
mov
cmp
mov
sahf
movb
jnp
mov
inc
jo
pusha
addr16
adc
loope
add
mov
das
jecxz
loop
mov
jne
out
mov
inc
inc
mov
and
push
cltd
mov
pop
xchg
pop
jo
adc
mov
cmp
dec
mov
ret
addl
in
stos
push
or
loopne
int
out
in
jmp
mov
or
pusha
xchg
cli
pop
xchg
mov
mov
and
out
fstl
mov
cmp
jl
ja
mov
incl
daa
xlat
add
cmp
js
test
cli
andl
rorb
xchg
xchg
imul
pop
xchg
rol
adc
or
and
fsubs
xchg
cmc
clc
dec
cmc
mov
jno
scas
lahf
push
aam
push
jne
push
xchg
in
sbb
and
inc
pop
jl
inc
pop
pop
call
jge
jo
xchg
xor
ds
dec
cli
push
iret
inc
ljmp
test
pop
out
mov
clc
dec
mov
lods
iret
cmp
int3
xchg
xor
jo
sbb
adc
pop
leave
es
fs
dec
jg
mov
dec
xor
aas
inc
popf
insl
call
pop
xchg
mov
cltd
mov
andl
or
dec
aaa
mov
cmp
push
xchg
rcl
sbb
daa
call
pop
and
jne
mov
pop
cmp
cmpsb
push
adc
lds
sbb
or
pop
xor
leave
mov
subl
inc
aad
into
fcmovnb
jge
mov
scas
cmpsl
fists
int
std
inc
call
leave
ficomps
daa
mov
cmc
mov
xor
mov
and
sbb
push
gs
pushf
aas
xchg
mov
add
and
pushf
icebp
pusha
cmpsb
out
fst
sub
fidivrl
cmp
xor
int
mov
jg
repz
mov
push
and
ja
daa
mov
mov
ds
mov
xchg
jnp
xchg
push
inc
popl
shll
push
test
mov
cltd
mov
jg
dec
cmpsl
mov
sahf
mov
ficompl
cwtl
in
jne
ljmp
cmp
or
and
test
rcrb
mov
imul
jns
ljmp
ds
loop
decl
dec
fistpl
mov
mov
xchg
or
cmp
stc
push
add
mov
jge
pop
out
or
roll
ss
pop
in
push
les
lds
out
rorb
jmp
mov
icebp
es
imul
inc
mov
jecxz
inc
lods
mov
push
scas
add
mov
add
xchg
sbb
stos
xchg
inc
jnp
out
sub
cmp
adc
iret
add
lock
test
and
fndisi(8087
adc
arpl
lret
push
xchg
jb
xchg
inc
mov
cmp
sub
add
js
nop
push
int
lcall
aaa
xor
mov
mov
push
imul
mov
push
sub
jg
cwtl
add
or
and
push
sub
jg
out
or
xchg
nop
jg
xor
jno
mov
inc
clc
jo
cli
mov
sub
and
xor
inc
mov
cmpsb
aas
mov
inc
mov
add
or
or
jne
mov
cmp
insl
jno
sbb
rorl
std
mov
xchg
push
cmp
mov
popa
pop
fistpl
inc
call
add
xchg
jge
mov
lcall
js
push
mov
push
cmp
mov
mov
mov
leave
scas
test
cmc
or
sub
cmp
adc
pop
mov
or
in
enter
fcoml
pop
mov
hlt
iret
shll
dec
dec
pop
aas
cmp
lock
dec
xor
sbb
in
pop
adc
jg
add
subb
pop
add
dec
pop
enter
leave
and
mov
nop
aam
lcall
xor
insb
repnz
jo
rcr
repnz
lcall
pusha
adc
in
lcall
mov
xor
test
xchg
in
sub
lret
xchg
xor
mov
lds
mov
sbb
or
cltd
ja
push
ret
dec
pop
popa
enter
mov
test
rcrl
nop
sarl
jecxz
inc
shl
cmp
lret
mov
adc
mov
inc
aam
pop
inc
jge
cmpsl
cmp
or
jno
mov
mov
outsl
xor
jne
sub
insb
mov
aad
push
push
js
mov
int
xchg
je
adc
pop
jns
sbb
ds
int
sbb
lret
pop
test
sub
sub
stc
jbe
sbbl
subb
sbb
push
add
in
insl
mov
pop
pop
adc
or
mov
fwait
jae
stc
inc
out
fldcw
mov
pop
outsl
xor
push
sub
clc
mov
lock
movsb
or
cli
xchg
mov
cmp
testl
mov
push
cmpsb
sub
arpl
aam
pop
orb
or
int3
fiadds
loope
adc
cmc
cmp
mov
ja
adc
aas
fcoml
leave
insl
out
sarl
mov
nop
pop
mov
dec
cmpsl
xchg
fisubrl
mov
insb
inc
fstpt
xchg
idivb
pop
and
inc
mov
addr16
stos
repnz
jo
cltd
fwait
jne
xor
pop
xlat
shlb
scas
push
sbb
xchg
cmp
xor
xchg
jno
fwait
jecxz
leave
jbe
rol
nop
lcall
das
xor
ds
sar
imul
in
hlt
das
aaa
insl
push
dec
lahf
xchg
dec
pop
mov
jnp
lock
mov
mov
call
outsb
mov
and
add
xchg
cmp
jae
sbb
mov
xchg
jne
jle
sbb
lret
mov
pop
inc
jne
data16
mov
cmc
sbb
fdivrp
inc
es
sbb
lahf
in
dec
jge
adc
mov
push
cmp
lcall
jne
gs
cmp
mov
jb
mov
aad
jae
into
jnp
mov
loop
outsb
leave
or
fbld
mov
pop
aas
cmpsl
mov
je
adc
jmp
insl
iret
inc
sbb
xor
mov
aam
aam
xchg
pop
xor
jecxz
gs
jns
enter
xor
adc
push
xor
xchg
inc
ja
jge
shrl
cmp
test
lock
jns
jbe
add
cli
cltd
arpl
push
ret
cwtl
sbb
pop
mov
stos
ja
out
insl
stc
cmp
fldt
pop
lods
mov
add
add
jmp
arpl
in
sub
scas
cmc
xor
bnd
in
dec
insb
jg
shr
icebp
flds
xor
push
jae
xor
je
std
test
pushw
push
call
jl
push
jle
pop
cwtl
sarl
pop
dec
mov
jne
stc
stc
popa
outsb
je
add
xchg
pop
jno
jns
push
xor
jg
aam
insl
popa
popa
int
imul
test
pop
shlb
and
bound
mov
lds
or
cmp
adc
cmc
test
outsb
mov
mov
imul
jne
dec
hlt
lods
fldl
sbb
or
or
scas
dec
rcrl
jecxz
jb
cmp
das
xchg
mov
mov
push
push
jg
mov
imul
adc
adc
jg
lahf
jle
mov
push
cmp
sbb
jbe
jge
loop
inc
add
popa
ror
xlat
lret
xchg
mov
test
sbb
mov
jo
pop
dec
xchg
ret
cltd
ret
dec
stc
mov
jnp
xchg
cmp
jle
xchg
lods
lahf
aam
andl
arpl
je
jecxz
xchg
rclb
cmp
out
adc
and
add
subl
insb
mov
cmpsl
xor
pushf
push
push
push
push
jo
xor
add
jecxz
mov
faddl
insb
or
pop
and
aaa
xor
mov
sub
jae
outsl
mov
push
jbe
jo
dec
sub
imul
or
movsl
sbb
popf
fistl
add
inc
xchg
iret
dec
cmp
sarl
add
aaa
out
mov
fnsave
lea
movsb
cmp
cwtl
mov
bound
daa
out
mov
pextrw
pop
int3
mov
mov
movsl
nopl
jp
adc
mov
imul
dec
aas
out
mov
addr16
into
mov
mov
sti
lcall
out
xchg
sub
faddp
pop
mov
dec
in
fwait
jb
into
iret
stos
add
stos
or
sbb
ljmp
cltd
ret
pop
xchg
andl
addl
xor
hlt
loop
inc
rcr
xchg
aas
test
push
call
dec
mov
scas
sahf
aad
fadd
jl
std
dec
rolb
fisttpll
loope
dec
icebp
sub
mov
test
mov
int3
jno
dec
fstpt
shrb
nop
fadds
aaa
fdivrp
sbb
pop
sar
sub
mov
out
pop
push
xchg
and
filds
in
xchg
cs
inc
fimuls
or
push
mov
inc
out
sbb
jp
cltd
inc
and
int
add
out
cmp
mov
dec
add
xor
mov
and
dec
adc
repnz
inc
inc
daa
sahf
repnz
mov
adc
in
ss
lea
mov
dec
pop
jge
iret
sub
fldcw
popf
xchg
mov
xor
mov
lahf
jmp
fisttpl
out
push
lds
push
pop
hlt
mov
ljmp
dec
adc
mov
jne
jmp
lock
ret
out
pop
ret
xchg
mov
cmc
negl
mov
xor
nop
scas
outsb
mov
cmp
pop
push
jno
aas
in
pop
add
cltd
movsl
fisttpl
and
iret
fnstenv
add
or
xor
xor
xchg
shl
daa
pop
fdivs
xor
loop
fcom
cli
faddl
icebp
push
jecxz
imul
xchg
mov
jl
mov
hlt
mov
inc
inc
sub
sub
add
cld
ret
mov
pop
and
test
stos
test
inc
pop
out
cmp
mov
into
rcrb
daa
ja
testb
sbb
negl
inc
lret
adc
pusha
sahf
pop
mov
int3
pop
fistl
dec
mov
and
bnd
fdivl
adc
cmp
jmp
xorb
pop
push
pop
jecxz
lret
mov
dec
subb
cmpl
add
pop
loopne
clc
cmpsb
pop
sbb
arpl
call
cmp
lcall
int
sbb
addr16
or
nop
inc
dec
inc
ja
add
and
int3
arpl
leave
outsb
push
xor
push
shrb
dec
mov
rcll
cmpsb
pop
mov
ja
add
arpl
xchg
sbb
cli
add
cmp
cmpsl
and
inc
adc
mov
shlb
mov
jmp
ja
or
dec
mov
adc
cli
xor
or
add
jmp
pop
xchg
mov
lods
lea
or
les
adc
in
fwait
xor
jb
out
pop
or
imul
push
pop
scas
inc
jle
jbe
into
inc
pop
xchg
mov
jp
pop
popf
xor
lods
mov
aas
push
push
iret
adc
push
add
push
fcomp
out
and
lea
or
mov
fldl
pop
mov
dec
inc
les
jnp
addr16
mov
lods
or
nopl
out
inc
jae
fprem
cmp
outsb
xchg
dec
es
outsl
push
out
jge
lock
sub
js
fisubrl
dec
insl
popf
icebp
outsb
adc
sbb
cld
mov
nop
fwait
std
outsb
outsb
xlat
out
adc
cmp
outsl
pop
sbbb
inc
cmp
mov
out
xchg
int
fiadds
aaa
fiaddl
xor
aas
cltd
jp
jl
mov
push
testl
mov
mov
movhlps
in
adc
jnp
mov
add
icebp
xor
ljmp
loopne
pop
pushf
pop
inc
sub
jb
lret
ret
lret
xchg
xorl
adc
sarl
rorl
mov
fisttpll
mov
cli
fnsave
and
or
cmp
dec
cmpsb
cmc
or
inc
sbb
fsubrs
inc
push
mov
es
dec
pop
in
fistpll
rep
rcl
fisttpl
fisttpl
inc
xor
loopne
shrl
lret
xchg
rclb
sub
xchg
cltd
and
out
jmp
sbb
pop
arpl
sub
jecxz
dec
pushf
mov
xchg
sub
xor
xchg
adc
hlt
push
mov
add
adc
sub
ss
sub
imul
test
pop
inc
pop
icebp
sub
and
pop
push
gs
mov
imul
mov
mov
or
and
adc
iret
stos
sahf
jmp
mov
cmc
pop
mov
dec
or
mov
mov
scas
cmc
mov
in
dec
scas
mov
push
ss
js
lea
das
dec
adc
addr16
scas
xchg
mov
lea
cmp
imul
mov
aam
test
fldenv
pop
lods
shll
inc
fs
and
fnstenv
dec
sbbb
sbb
adc
inc
adc
mov
lcall
mov
lret
adc
aaa
daa
out
ss
loop
add
fucom
pop
mov
jo
decb
pop
mov
sahf
jbe
inc
push
inc
out
push
clc
shr
test
repz
mov
pop
cli
sub
stos
int3
mov
add
add
cmpsl
movb
stc
sti
mov
dec
jp
jo
dec
adc
sbbl
loopne
clc
xor
inc
pushf
fildl
push
pushf
ss
jge
inc
dec
es
mov
jl
jmp
pushf
adc
call
aam
mov
fcmovnbe
mov
sub
fists
mov
enter
or
sub
ficoms
stc
push
es
xchg
mov
add
cld
lret
mov
lods
push
inc
pop
imul
not
xchg
out
jo
inc
xor
repz
shll
adc
cmp
dec
push
add
mov
pop
outsb
mov
popa
out
xchg
std
lcall
sub
call
test
mov
cs
ja
sahf
xchg
repz
xor
or
xchg
adc
inc
xchg
and
jae
mov
rorl
imul
lea
inc
inc
cmp
push
loopne
and
xchg
push
mov
pop
jbe
mov
out
orb
mov
fisttpl
push
push
ficoml
adc
iret
xchg
addr16
mov
and
mov
fildl
xor
ret
rcl
sbb
adc
mov
jns
cmpsl
or
jg
mov
mov
mov
dec
and
xor
loop
out
pop
add
test
popf
or
sbb
pop
test
cmp
adc
or
cli
pusha
jno
cltd
mov
inc
in
mov
pushf
test
xchg
xor
mov
jo
bound
jae
push
out
negl
ds
mov
sbb
lret
sbb
jno
push
dec
inc
pop
repnz
xor
flds
mov
sbb
out
xchg
push
out
dec
push
das
inc
jmp
jns
shlb
mov
xchg
jge
fiadds
mov
sub
jno
iret
popa
mov
mov
and
xchg
movsb
out
xchg
rolb
in
sbb
notb
mov
sbbl
repz
data16
push
push
aam
push
add
or
add
mov
cmp
loopne
xchg
adc
pop
add
adc
notb
dec
hlt
testb
sbbb
fnstcw
pushf
gs
and
sub
enter
dec
mov
mov
pop
mov
insb
and
and
mov
dec
fidivrs
dec
jmp
fimuls
ret
scas
inc
mov
movsl
mov
push
pop
idivb
dec
icebp
rolb
xchg
push
push
sub
sbb
jb
xchg
mov
mov
inc
push
inc
jle
cs
pop
xlat
mov
or
ret
jl
movsl
xchg
es
hlt
aaa
fstpt
mov
popa
shlb
mov
xor
inc
pusha
fcmovnu
mov
push
scas
sub
xchg
fdivp
int3
xor
loopne
es
sub
hlt
scas
shll
shl
popf
ds
adc
push
pushl
or
jae
orb
sbb
cmpsl
hlt
push
lahf
and
sbb
jb
fmuls
repnz
mov
lahf
jnp
cmp
jno
or
jecxz
jbe
mov
mov
add
dec
stos
and
sub
mov
push
xchg
jnp
cli
aad
push
inc
cmpl
xorb
fcoml
xchg
lahf
in
test
cwtl
ds
jne
mov
in
sbb
enter
lods
sbb
iret
xor
push
or
push
xchg
push
mov
lret
pop
pop
arpl
cmp
dec
mov
or
aad
inc
mov
popa
and
or
push
dec
fstl
add
out
aas
jbe
ss
mov
sti
add
mov
pop
stos
sbb
inc
sahf
mov
or
jnp
xor
outsl
mov
push
lock
lahf
mov
add
movsl
fdivrs
popa
jns
int
outsl
jne
inc
mov
mov
mov
xchg
in
xchg
out
pop
xor
mov
ds
add
je
icebp
jge
inc
loopne
out
cmpsb
bound
mov
mov
mov
test
xor
sub
push
gs
sbb
sub
inc
push
pushf
lahf
ljmp
xor
pop
es
lcall
lahf
pop
pop
stos
les
dec
insb
repz
mov
and
dec
pop
cmp
jb
inc
xchg
inc
pop
xor
repnz
cli
ret
outsb
or
inc
arpl
fdivrp
test
inc
cs
fidivs
or
repnz
xchg
sub
rolb
in
shr
iret
cmp
scas
mov
fisttps
jns
pop
and
fdivrl
add
mov
lock
mov
inc
aad
add
test
inc
push
iret
adc
push
dec
out
or
jbe
pop
cmp
xchg
mov
test
cli
in
imul
inc
lea
out
and
pop
mov
cmp
mov
cltd
sub
cvtps2pd
divb
or
xlat
ret
test
shlb
fwait
mov
mov
adcl
jge
or
push
mov
xchg
xor
and
test
rcrb
inc
mov
jecxz
add
cmpsl
dec
imul
cmc
xor
test
xor
mov
in
push
insb
dec
push
idivl
repz
fldt
jmp
ljmp
jae
stos
sbb
sbbl
adc
add
cmpl
xor
xor
push
and
test
pop
mov
loopne
xorb
sahf
xchg
cmp
les
dec
cmovne
insb
add
leave
test
jno
in
cmpb
les
xor
mov
stc
push
cmp
repnz
dec
mov
cmpsl
mov
or
sub
sahf
dec
loope
in
adc
xchg
dec
data16
std
mov
mov
mov
ljmp
mov
mov
mov
and
mov
cmc
sbb
into
cmp
or
pop
neg
sbb
cmpsb
fsubrs
cmp
inc
push
xchg
or
mov
out
inc
push
cmc
out
lcall
stc
and
push
adc
lret
mov
std
fstpl
mov
pop
popf
ret
test
push
lret
fisttpl
jnp
in
sbb
and
orb
gs
jae
jns
cltd
add
push
cli
insl
or
loopne
adc
fildl
and
in
adc
nop
sbb
sbb
shll
xor
bnd
loopne
movsb
rcrb
or
pop
insb
add
fisubrs
fldl
das
popa
cmc
jp
rcl
fld
pushf
inc
aad
or
dec
cmp
or
mov
lcall
gs
es
or
or
std
rcrb
jbe
fdivrs
mov
sub
and
pop
es
mov
loope
xchg
and
and
pop
pop
and
mov
ds
xchg
jnp
hlt
shll
pop
sub
jmp
pushf
adc
add
xor
cltd
and
orl
xchg
and
push
lret
dec
and
ds
lret
mov
fimull
add
mov
cs
and
pusha
in
ret
mov
mov
dec
fmull
and
mov
lods
mov
out
sahf
inc
cmp
pop
cs
fstl
loop
lock
jg
leave
xor
mov
adc
and
cltd
mov
dec
int
clts
repz
adc
std
mov
push
sub
aad
cmp
inc
cmp
lods
ficompl
and
jo
cmp
addb
pop
in
adc
cmp
sahf
lcall
add
cwtl
add
call
mov
push
ret
lock
cmpsl
xchg
adc
iret
cmpsl
fwait
scas
loope
mov
mov
inc
sbb
mov
xlat
jecxz
mov
mov
jg
jns
movsl
push
fucomi
inc
and
add
push
stos
stc
push
inc
pop
dec
jnp
sbb
push
or
and
push
sbb
hlt
cltd
les
xor
or
push
test
mov
sti
gs
fisubrs
sbb
shll
addl
or
daa
es
lods
ss
scas
pusha
lret
mov
pop
out
cmpsl
mov
pusha
xor
stos
push
sahf
shufps
mov
cmp
and
push
mov
lret
mov
cmpsb
sarl
inc
xor
aaa
pop
cmp
adc
jno
shlb
bound
push
xchg
sahf
clc
push
add
dec
cmpsl
stos
sub
es
aaa
jns
in
mov
xchg
add
or
sti
inc
inc
je
or
pop
push
jns
cmp
mov
xchg
mov
pop
lret
ss
jbe
fnstenv
cmp
bswap
cli
data16
negl
aas
scas
inc
shlb
jl
pop
insl
sbb
decb
movl
leave
call
xchg
xor
js
aaa
push
ss
jp
adc
dec
inc
aaa
sub
das
mov
scas
xchg
fimull
mov
rorb
lcall
mov
repz
in
dec
stos
inc
inc
dec
aam
mulb
cmp
xchg
pop
push
call
dec
loopne
hlt
movsl
aas
lods
xor
aas
push
les
mov
pop
je
and
sbb
mov
inc
xchg
sbb
subb
or
fwait
and
shrd
bound
in
and
or
rolb
lds
push
and
arpl
sbb
aad
test
cmp
mov
loope
jo
dec
push
xchg
pop
mov
dec
mov
and
push
loope
or
dec
pop
sub
jns
push
out
leave
xchg
scas
dec
std
fwait
inc
lock
loopne
push
int3
or
cwtl
adc
sub
insb
gs
mov
test
daa
jnp
fmul
fbld
es
ljmp
fcomps
je
jns
nop
mov
js
in
inc
push
and
clc
mov
call
bound
sbbl
je
or
jb
in
ret
enter
sbb
fstp
mov
imul
lock
mov
sti
dec
inc
xor
jae
les
je
or
push
push
pop
in
mov
mov
bound
jnp
sub
pushf
push
inc
sbb
mov
mov
pop
aas
inc
pop
or
jnp
mov
jecxz
loop
mov
popa
ljmp
ja
xchg
cwtl
push
test
out
add
push
cld
mov
pop
cmp
push
ja
mov
xchg
or
dec
inc
dec
pop
add
inc
hlt
hlt
jge
popa
es
mov
stos
xor
loop
dec
test
jne
sahf
rol
and
xor
sbb
scas
mov
mov
mov
cmp
mov
cmpl
ja
push
imulb
pop
add
xchg
lods
jmp
pop
lahf
adc
stos
shll
out
mov
jae
push
mov
cltd
stc
dec
aas
je
lret
sbb
std
popf
mov
xor
std
or
mov
shl
outsl
je
aas
push
cmp
sub
call
fs
popf
mov
shl
dec
test
jecxz
in
fistl
or
inc
xor
xchg
inc
idiv
outsb
push
sti
ss
rolb
jg
pop
fstps
pop
push
xor
mov
or
cmp
mov
ficoms
sub
imul
mov
push
adc
aaa
push
jle
cmp
cltd
aad
mov
jl
push
fs
test
test
hlt
mov
mov
sub
not
lds
icebp
mov
jecxz
sbb
jle
and
dec
cmp
xlat
fwait
lods
in
xchg
mov
xlat
jno
scas
lods
dec
arpl
ret
push
xchg
ss
push
dec
hlt
test
lods
mov
xchg
fidivrs
mov
sbb
mov
dec
adc
jmp
popa
xchg
pop
fmuls
ret
pop
ret
aam
punpckhwd
cmp
or
mov
lahf
sbb
aaa
shll
mov
sarb
dec
add
mov
loopne
xchg
or
push
cmpsb
adc
xchg
adc
das
adc
pop
loop
pop
add
sbb
shll
jge
dec
aad
out
jle
enter
cmp
fistpl
int
and
jl
insl
or
dec
xchg
sbbb
cltd
mov
jnp
cld
or
lods
xchg
mov
arpl
lahf
in
les
adc
lea
inc
pop
mov
in
shll
lahf
ficomps
jl
mov
enter
xchg
daa
jb
subb
xor
int3
add
test
clc
out
xchg
sub
movsl
cmp
push
xchg
loope
xchg
test
ja
ljmp
xchg
pop
adc
mov
push
push
ret
sub
inc
insb
push
sbb
stos
imul
cwtl
mov
jmp
or
stos
jg
loopne
test
and
call
ffreep
sti
mov
out
fcomp
mov
mov
xchg
lock
repnz
repnz
mov
jmp
cmp
stos
mov
xchg
lret
pop
cmp
cmpb
inc
arpl
add
mov
shrl
aas
sbb
cli
mov
pusha
xchg
sbb
cli
push
mov
inc
rcrb
insl
xor
sbb
mov
pop
test
lods
jmp
push
xor
lcall
ret
out
pop
ret
jns
popa
loopne
mov
loope
push
dec
cs
adc
push
sub
mov
mov
js
lock
and
fisubrl
and
jp
mov
mov
or
shr
sub
push
pop
sbb
or
mov
test
les
cs
mov
pop
pop
push
shlb
jmp
jnp
pop
fisubrl
ficoms
pusha
insl
test
insb
aam
dec
ss
sub
int3
cmpb
cwtl
sbb
jp
jmp
and
fcompl
rorl
mov
adc
shll
es
lea
inc
or
mov
jnp
mov
popf
adc
lds
inc
mov
adc
mov
cmpsl
cmp
lcall
mov
addr16
push
inc
jge
bound
push
sbb
mov
mov
lret
sub
test
les
and
mov
inc
insl
test
push
mov
int
inc
xchg
out
pop
int3
push
lock
outsb
and
mov
dec
push
mov
dec
repz
cmp
inc
adc
dec
xchg
pop
rolb
cmp
int3
int3
pop
or
rcrl
dec
xchg
ljmp
scas
je
jns
mov
cmp
dec
pop
pop
pop
hlt
xchg
add
popf
xchg
inc
mov
pop
jbe
mov
mov
mov
pop
cs
test
in
inc
data16
pop
mulb
pop
stos
mov
cmpsb
cmc
ret
in
arpl
addl
outsl
mov
sub
test
and
pop
jp
ret
out
xchg
scas
std
sti
sub
jbe
adc
pop
mov
out
xor
mov
mov
jle
xchg
outsb
cli
das
hlt
mov
mov
dec
mov
sub
faddl
mov
mov
mov
push
ja
shll
pop
lahf
subb
sti
shlb
xor
incb
daa
mov
push
test
push
je
adc
mov
xchg
neg
gs
mov
mov
sbb
sub
rcrb
shlb
pushf
daa
and
stos
sub
cltd
clc
stos
mov
in
and
mov
addr16
mov
decl
mov
add
add
jae
jb
ja
sbb
sub
push
push
fsub
shlb
icebp
pop
pop
lods
pop
pop
jns
int
fidivl
aas
ljmp
inc
icebp
les
stc
jp
movsb
add
add
push
int3
cmp
andb
cmp
pop
mov
pop
test
test
repnz
inc
mov
and
push
or
insb
pop
and
adc
addb
out
or
in
inc
mov
test
int3
mov
add
sub
mov
std
or
out
clc
pop
adc
es
sbb
andl
sub
mov
lret
mov
dec
ror
xchg
jnp
cmp
jo
add
out
pop
pop
push
insb
sbb
jae
mov
std
jle
pop
ud1
iret
jne
in
add
xor
and
push
adc
push
into
ljmp
stc
ss
repnz
cltd
dec
pop
ret
fldl
xor
xchg
jne
scas
mov
sub
sbb
or
and
imull
sti
jecxz
adc
in
pop
out
xlat
out
inc
loope
out
or
push
xchg
dec
sbb
mov
out
psubsw
inc
push
push
je
jle
push
jg
iret
dec
mov
enter
lea
mov
mov
dec
inc
push
xor
stos
cltd
pop
movsb
mov
add
dec
test
add
pop
mov
jge
pop
cmc
shrl
push
cmp
cs
fs
lcall
dec
test
pop
gs
push
pop
pusha
adcb
xlat
shll
jmp
sub
repnz
push
stc
out
sbb
data16
push
or
mov
xchg
lea
jo
lods
xchg
xor
xchg
mov
lock
mov
mov
and
push
lahf
dec
xor
push
and
mov
popf
add
pop
dec
push
dec
mov
cmp
and
mov
pusha
popl
mov
jb
fistpl
loopne
xchg
lods
loopne
cmp
xor
mov
orb
aam
outsl
sub
test
arpl
cmp
jmp
pop
mov
lret
leave
adc
or
stc
add
cs
cmp
inc
addr16
leave
push
mov
sub
jmp
fwait
sub
cmp
push
loopne
sbb
jnp
sbb
jae
dec
mov
sub
jnp
push
cmp
cmp
outsl
call
adc
mov
imul
cld
mov
mov
test
adc
in
in
js
xchg
xor
jae
nop
jg
inc
mov
add
and
jb
iret
pop
push
push
ja
stos
xchg
loopne
sbb
dec
xor
and
jge
das
xchg
xchg
mov
movsb
adc
sar
aaa
cmp
das
xor
inc
or
lea
lahf
or
pop
xchg
sbb
jge
fnsave
xchg
test
mov
inc
sbb
sub
pop
mov
mov
mov
push
mov
inc
fistpll
sti
sub
pop
jmp
sarl
test
inc
adcb
iret
push
mov
fs
mov
stos
cmpsb
pop
dec
push
dec
or
pop
sub
dec
inc
arpl
jmp
nop
test
cmp
mov
or
mov
cmpsl
push
ss
stos
je
sti
loope
gs
mov
outsl
iret
lods
call
pusha
imul
pop
jnp
pop
mov
inc
jns
mov
hlt
popa
femms
cmp
repz
ja
scas
mov
in
xor
in
shll
sub
or
fdivs
cs
add
das
jno
jp
sbb
cmp
xchg
out
inc
cmp
inc
int
jecxz
negl
sbb
fwait
js
jmp
ljmp
hlt
jb
xor
dec
bound
mov
add
leave
arpl
cmp
sbb
stos
sbb
fildl
shr
ret
push
stc
mov
xchg
dec
push
pop
pop
cmp
sbb
add
mov
dec
push
xor
push
inc
orl
xchg
int
mov
imul
fmull
add
xchg
dec
test
cmp
push
cmp
adc
test
push
dec
jae
movsl
cld
loopne
jl
jmp
or
cltd
mov
mov
xchg
outsl
or
cmpsl
xor
pop
xor
xorb
in
insb
mov
test
cmp
sbb
or
push
push
cmpl
jae
outsb
adc
inc
mov
aaa
pop
or
or
cmp
xor
xchg
lcall
adc
mov
add
mov
mov
ss
xor
subl
jnp
ja,pn
cmp
mov
push
mov
rorl
pushl
cmp
dec
imul
pop
and
pop
sub
dec
rclb
adc
mov
push
insb
cmpsb
sub
insl
cmpsb
mov
inc
and
mov
mov
int3
jae
lret
cmc
sbb
jns
inc
test
jnp
inc
sub
ja
int3
push
inc
pop
fistpll
je
add
insb
scas
push
pop
ljmp
mov
adc
lods
gs
push
movsl
xchg
insb
add
mov
clc
add
fpatan
out
repnz
shrl
mov
mov
pop
adc
adc
or
mov
xor
stos
cmp
aam
test
orl
or
jae
mov
jecxz
sub
push
sub
fisttpl
jb
in
mov
inc
xchg
test
lds
addl
dec
cmp
jle
xchg
sbb
lret
or
push
outsl
das
add
outsl
and
scas
sub
sbb
jb
fistpl
dec
ss
mov
inc
and
lods
cmpsb
or
lret
pop
enter
ret
adc
aas
cmp
dec
ret
push
sbb
xor
fwait
push
shlb
adc
push
out
jno
or
push
repz
sbb
in
push
shlb
sub
in
cmc
jnp
mov
xor
and
imul
inc
mov
sbb
xchg
mov
orl
pusha
xchg
mov
and
xchg
xchg
xchg
lods
dec
out
dec
xchg
mov
and
mov
adc
mov
xor
push
test
lods
push
mov
cmp
jl
xor
sbb
jle
daa
dec
addr16
aaa
dec
xchg
insb
inc
dec
call
inc
int3
inc
movsb
and
pop
or
loopne
cmp
arpl
and
out
sbbl
loope
out
rorl
jnp
pusha
fidivs
test
sub
dec
gs
in
stc
and
adc
jmp
sub
adc
lret
push
sbb
in
loop
stos
shl
push
mov
sub
inc
jo
and
out
ds
jle
lods
ds
clc
fcompl
mov
pop
iret
divb
jle
mov
imul
outsb
lds
pop
cwtl
insb
jge
int3
insb
push
popf
mov
xchg
pop
dec
push
rorb
add
scas
in
push
cld
cmpsb
lcall
lds
les
push
popa
xchg
xchg
xor
cmp
sub
xchg
add
inc
add
xchg
test
adc
jb
mov
inc
ret
test
jmp
lea
movsl
and
sub
cmp
pushf
push
and
mov
lock
xlat
mov
sub
jns
pushf
div
mov
push
xor
jbe
pop
mov
sbb
sti
inc
insb
test
pusha
push
push
loopne
scas
sbb
rclb
stc
divb
in
insb
xchg
mov
add
lods
sub
add
sbb
xchg
jge
je
out
pop
lahf
mov
sbb
push
mov
cmp
dec
addr16
jno
pop
hlt
fildl
pop
fcoms
test
inc
adc
sbb
aam
iret
les
mov
add
and
add
add
cmpsb
adc
fisttpl
adc
jae
cs
sub
jge
ja
je
sbb
jmp
cltd
lret
fcmove
xlat
xchg
clc
mov
cmp
sahf
out
lret
clc
add
into
cld
or
ret
push
pushf
mov
jmp
shlb
int
addr16
outsb
push
xlat
shrb
add
int
cwtl
fisubs
mov
int
shrl
mov
movsl
test
sbb
loopne
lret
jns
mov
sbb
mov
and
out
or
xor
pop
or
lods
movhps
je
in
mov
sub
cmpsl
out
testl
adc
pop
ljmp
add
mov
cmp
mov
mov
pop
mov
insb
cmp
jo
adc
ret
add
out
fcompl
lahf
popa
repnz
mov
push
xchg
cmpb
les
or
enter
rorb
lcall
jbe
mov
jecxz
inc
test
out
loope
xorb
pop
push
jle
enter
mov
inc
out
outsb
xchg
repz
je
orb
rclb
shll
jle
mov
aaa
outsb
adcb
pop
sub
cmp
bound
in
lret
lods
shll
mov
fistl
test
test
mov
pop
pop
fimuls
pop
testl
jl
or
push
in
jg
pop
dec
dec
adc
xchg
testb
movsb
sarb
xchg
stc
mov
jo
and
sarl
adc
pop
mov
dec
xor
es
lea
dec
psubw
sub
adc
inc
sbbl
or
out
mov
roll
xor
popf
int
lea
dec
inc
dec
loop
ret
gs
and
lea
lahf
sbbb
daa
xor
pop
test
insl
mov
xor
ret
sub
dec
sbb
sbb
xor
mov
inc
mov
stos
fadd
xchg
dec
js
jbe
sub
push
cmpsb
loop
add
rcrl
xchg
inc
clc
push
and
movsb
push
ret
cmpsb
movsl
push
mov
lods
out
fidivrl
push
cltd
es
das
mov
push
out
xchg
mov
bound
clc
ja
popa
lods
pop
mov
lods
push
inc
fs
mov
bound
gs
sarl
outsb
ss
xor
jmp
insl
cmp
dec
jmp
imul
data16
leave
out
add
int3
mov
push
hlt
adc
push
test
lahf
cmp
dec
cld
ja
scas
bnd
int
adc
inc
sub
and
subb
loope
cmp
popf
xchg
sub
ret
sub
jp
add
pop
push
mull
sti
lret
sar
loopne
fldl
dec
cmp
pop
sti
imul
ja
pusha
loope
push
sub
std
cli
mov
mov
test
jae
jle
mov
push
xor
or
xchg
roll
mov
push
sub
inc
bound
inc
xchg
and
or
ss
in
fdivrs
jo
les
jp
inc
xchg
in
mov
fisttpl
adc
or
pusha
cmpsl
hlt
cmpsl
and
inc
jmp
in
add
sbb
test
jmp
sub
sar
xor
fstpt
idivb
enter
xchg
iret
cmp
jns
mov
push
mov
lods
push
js
outsl
xor
add
sbb
sbb
hlt
add
pop
sub
mov
in
mov
mov
mov
test
test
xchg
cmp
repz
jmp
xchg
rclb
mov
and
sbb
pusha
cltd
out
cmp
lods
iret
xor
nop
push
loop
jno
sbb
push
push
cld
mov
xor
testb
lret
cwtl
push
pop
jne
out
pop
loope
jmp
xor
or
dec
push
nop
int
rorb
inc
jl
cmp
hlt
scas
lcall
adc
lea
adc
xchg
fsubl
test
adc
sbb
inc
shlb
xchg
sbb
into
jg
aas
andb
jne
cmpl
ja
pop
das
cmpsl
push
push
fisubrl
and
xor
loopne
movsb
notb
or
testl
dec
jnp
cmpsl
xor
jns
out
xor
pop
ss
mov
arpl
jns
inc
inc
loope
call
ret
mov
jno
aad
xor
incl
xor
xor
jmp
fs
lcall
jae
mov
or
push
lock
cmc
not
dec
xchg
sbb
lods
fadds
or
popl
jmp
xchg
mov
xchg
cmp
fwait
jnp
mov
jno
or
add
inc
add
or
test
daa
scas
pop
sub
and
jb
mov
fmulp
nop
or
loope
push
popl
and
and
mov
or
xchg
repz
adc
bound
loopne
int
sbb
xor
inc
and
jae
jmp
and
aaa
xchg
and
out
jg
shl
shrl
mov
mov
mov
fnstsw
bound
inc
push
pop
and
mov
addr16
hlt
in
pop
xor
std
jecxz
dec
negl
mov
xlat
cli
xchg
and
imul
lret
int
out
xchg
mov
pusha
pusha
pop
pop
mov
xor
xor
mov
push
test
cmpsl
ffreep
clc
sub
push
inc
adc
xor
dec
xchg
cli
xchg
xchg
or
xchg
pop
xchg
int
hlt
cmp
stos
pop
sbb
push
subb
insl
xor
sti
sub
pop
ljmp
jae
sbb
xor
pop
fcoms
test
shrb
push
mov
lds
mov
xor
sahf
add
popf
rcl
xchg
mov
shll
movsl
mov
push
out
cmp
rcr
mov
dec
mov
mov
mov
xchg
dec
xchg
cwtl
push
rolb
pop
and
mov
jbe
fstl
adc
push
addr16
out
icebp
push
test
out
dec
cmc
icebp
ja
repz
pop
mov
fs
inc
adc
leave
lret
add
cwtl
xchg
cltd
mov
dec
call
mov
sarl
adc
das
mov
xor
push
aaa
and
cmp
pop
cmp
pop
fwait
inc
popf
cmpb
mov
pop
mov
adc
icebp
sahf
cmpsb
sbb
aas
scas
sub
mov
pop
jno
sbb
aam
push
test
cmpl
and
lods
mov
or
dec
repz
call
lea
adc
loope
pop
jl
inc
xorl
in
sbb
cli
test
cld
movntq
inc
fmull
push
inc
cld
xchg
add
test
push
dec
xchg
pop
jno
push
mov
mov
shll
inc
sbb
mov
andb
sub
push
shrb
loop
adc
pushf
mul
push
call
pop
jg
clc
iret
inc
push
addb
jo
add
leave
lret
mov
lock
js
and
jp
sti
push
test
mov
xchg
add
jbe
fcmovne
cmp
ljmp
adc
divl
outsb
dec
shrl
and
imul
in
aas
pop
mov
mov
stc
mov
mov
mov
pop
insb
enter
mulb
cli
jmp
pop
adc
jecxz
dec
es
jmp
pop
lock
js
test
jmp
fnstenv
fcmovnbe
xchg
pop
cwtl
pop
pop
xor
cld
jno
ror
xchg
or
xchg
push
scas
push
into
es
mov
stc
sbb
loope
mov
adc
pop
jnp
push
in
andb
pushf
mov
cs
mov
or
jmp
sbb
out
sbb
sbb
loop
sub
pop
in
out
mov
cmc
arpl
cmpsl
and
mov
dec
ret
int
pop
das
jl
mov
inc
xchg
insl
pop
test
jg
sub
shrl
into
loop
daa
stos
mov
out
les
pop
add
and
shll
jecxz
shll
loopne
cmc
js
fldl2e
adc
leave
xlat
xchg
loope
ljmp
loop
dec
xlat
lods
in
ss
lds
lcall
repnz
mov
fisubrl
cmpsl
or
outsl
sti
fcompl
and
fistpll
pop
xchg
mov
add
cmpsl
movsl
test
cltd
cmp
xchg
sub
dec
sarb
pushf
std
dec
rclb
inc
sti
stos
and
or
adc
xlat
xchg
push
scas
xchg
xchg
std
sbb
sarb
out
adc
mov
ljmp
sub
xchg
xchg
call
lods
xchg
push
sarb
scas
push
pop
xorb
cmc
lods
rcrb
pop
in
inc
call
mov
call
popf
ljmp
lods
out
mov
xchg
adcb
jns
mov
xchg
ja
xchg
or
push
lods
push
push
cmp
push
add
arpl
push
xchg
mov
mov
push
xchg
push
sub
jo
sub
enter
push
jecxz
mov
cmp
decl
add
xchg
pop
aam
jle
outsl
ljmp
sub
ficomps
test
xor
and
sbb
mov
sbb
nop
or
xchg
scas
mov
shll
or
push
sbb
push
jnp
shll
ja
adc
das
jo
bound
aad
push
leave
sbb
pop
into
xchg
adc
push
imull
pop
add
das
cmp
and
test
xchg
jae
stos
jl
jb
test
sahf
mov
lods
and
jmp
sbb
rolb
jno
sarl
js
jle
push
sub
jno
roll
rorl
xchg
sbb
pop
jge
mov
icebp
pop
jle
enter
faddl
jg,pn
scas
add
inc
xchg
ret
cmpsb
mov
insl
dec
cmp
test
jl
iret
adc
fadd
jmp
push
ja
add
mov
mov
or
cmpsb
pusha
add
inc
test
adc
push
lds
inc
cmpsb
shl
pop
fs
daa
outsb
iret
test
mov
or
aad
in
xor
add
xlat
loop
inc
pop
lock
insb
add
movsl
lahf
cmc
insl
jp
rcl
inc
mov
repnz
jne
push
jno
cltd
mov
cmpsb
cmpsl
xchg
dec
add
and
sti
dec
repnz
mov
pop
sub
sub
pop
testb
bound
pop
leave
sbb
or
or
dec
mov
xchg
sti
dec
jnp
ljmp
pop
adc
pop
mov
leave
cmovg
in
ret
insb
inc
lods
fadds
push
push
dec
pop
int
adc
lock
mov
fstpl
outsl
pop
stos
stc
sub
cwtl
divb
sti
pusha
cmp
hlt
lods
aad
fcoms
inc
js
mov
lret
inc
aad
data16
pop
ja
insl
jp
add
negl
xchg
dec
pminsw
insl
dec
nop
mov
push
stos
test
mov
lahf
cmpsl
pop
and
stos
cmpsl
lret
xlat
mov
hlt
stos
pop
inc
mov
or
data16
cli
pop
clc
adc
lea
pusha
stc
movsb
test
jae
and
mov
test
sbb
sahf
jae
xor
sti
addr16
lods
fcoms
push
and
xlat
fcom
bound
lret
xchg
aad
test
lahf
lret
inc
leave
movsl
stos
mov
lock
mov
push
int
scas
incb
js
pop
inc
pop
ffree
movsl
sbb
hlt
jmp
lcall
jne
pop
xchg
movsb
dec
ds
pop
adc
hlt
insb
popa
lcall
adc
xchg
xchg
and
push
popf
inc
js
mov
call
addr16
or
mov
out
pop
in
and
jae
mov
das
lcall
pop
jle
push
mov
ljmp
or
add
arpl
mov
mov
in
jne
cmpsl
sub
loop
push
scas
call
adc
dec
pop
out
cmc
and
cmp
sub
lods
mov
ret
jp
jbe
lods
pop
push
adc
mov
sub
fsubs
hlt
push
cmp
jae
mov
dec
cmp
xchg
add
dec
xchg
mov
ret
ret
adcb
les
push
mov
xchg
call
into
mov
xchg
push
cli
dec
cmp
or
push
jmp
cmp
call
add
loope
hlt
adc
lods
inc
ljmp
stos
hlt
xchg
push
out
lcall
mov
add
test
and
adc
call
aas
xchg
add
xchg
xchg
sbb
int
imul
gs
inc
fwait
add
inc
fwait
scas
add
push
xor
sbb
jbe
inc
xchg
rep
cli
push
data16
mov
mov
xor
fisubrs
cs
xor
loope
shl
pusha
sti
cld
inc
cmpb
scas
push
xor
cltd
xor
sbb
xor
jmp
je
movb
out
lret
data16
push
ret
les
adc
and
testb
mov
movsl
push
sub
xchg
sti
push
dec
or
or
mov
stc
mov
pop
int3
decl
push
push
inc
in
sub
mov
gs
cmp
clc
lea
jb
sub
jecxz
lcall
loop
fwait
dec
stos
pop
adc
pop
sub
xchg
pop
and
xor
ljmp
int3
cltd
rcr
mov
xchg
push
imul
sbb
dec
dec
pop
jmp
out
mov
movsl
ss
lahf
enter
inc
adc
das
add
and
or
jmp
mov
jnp
mov
aas
insb
call
test
push
cwtl
fs
and
orb
and
adc
mov
mulb
mov
mov
xor
fwait
scas
jae
cmp
fldpi
xor
inc
cli
pcmpeqb
jo
and
push
jb
in
imul
lret
lret
mov
insl
mov
out
jns
cmp
in
fidivs
sbb
in
push
sahf
jmp
fiaddl
movsl
jmp
mov
sub
in
mov
dec
data16
jp
xchg
lahf
lock
cmpsl
mov
lock
mov
sbb
test
imul
rcr
imul
dec
idivb
js
mov
jo
js
mov
fstl
dec
std
and
jne
mov
ljmp
cmpsl
cmc
popf
loop
cwtl
aad
cmpl
test
jnp
xchg
add
mov
jae
sarl
loope
cmp
enter
jns
lcall
std
push
xor
sub
stos
iret
into
pop
lds
ds
mov
mov
fstl
shlb
add
sub
cmpsb
cltd
leave
pusha
adc
xor
popa
xchg
data16
lret
and
sub
inc
lds
pop
out
das
in
hlt
out
mov
mov
jle
push
and
mov
aas
data16
arpl
mov
out
sbb
or
mov
imul
xorl
int
cmpsl
les
aad
dec
addb
lcall
lods
fsubs
inc
adc
xor
lods
dec
mov
stos
aas
xorl
aaa
lods
pusha
cmpsl
rcr
popf
jb
jmp
xchg
jae
outsb
sub
jecxz
jo
jno
add
loope
iret
adc
sub
pop
fsubp
jl
push
dec
data16
addl
sub
inc
dec
mov
int3
push
addl
sbb
mov
jnp
push
push
xchg
mov
sub
inc
cmc
dec
and
push
pop
dec
push
rcrb
sub
sar
add
adc
sbb
or
inc
inc
imul
cmp
lods
xchg
sub
clc
jecxz
push
cmpsb
mov
mov
scas
incl
fxtract
sub
subl
jbe
aaa
mov
and
mov
pop
sub
sub
pop
cmp
aaa
shl
pushf
adc
xchg
mov
pop
mov
js
jbe
in
push
xchg
push
insl
cltd
cld
push
adc
cltd
ss
dec
std
nop
out
das
jmp
or
enter
push
fwait
mov
bnd
rcll
adc
cwtl
stos
cs
pop
cmpsl
mov
jle
adc
mov
mov
dec
push
pop
outsl
aaa
jg
std
cmpsb
int3
pop
push
shlb
push
loop
out
xchg
xchg
sbb
sbb
xchg
insl
jl
movsl
push
sub
mov
mov
int
mov
jno
adc
das
pop
fs
icebp
dec
notl
sub
fists
or
add
add
inc
adc
aam
xchg
inc
lock
lea
pop
daa
inc
lods
inc
pop
sbb
sbb
inc
mov
inc
icebp
cmpsb
pop
inc
int
pop
mov
into
jae
push
cmpsb
xchg
sub
mov
push
and
mov
mov
cs
sbb
xor
loope
sub
lea
and
shl
out
jl
stos
pop
sbb
popa
or
add
test
dec
stos
xchg
and
add
fidivl
adc
sbb
mov
cmp
lcall
add
mov
inc
push
inc
jp
cmp
inc
nop
loope
pop
sbb
inc
jnp
xchg
aaa
fnstenv
out
adc
rorl
xorl
dec
mulb
mov
jg
or
pop
ss
jle
popa
lahf
dec
dec
pop
jns
rclb
test
outsb
dec
add
sub
mov
pusha
or
cmp
lods
sbbb
ret
inc
and
xchg
pop
and
jl
jl
popa
xor
xchg
jb
subb
sbb
pushf
adc
inc
icebp
rcr
push
and
repz
int3
cmp
mov
xchg
xchg
sbb
lret
push
mov
pop
mov
cmp
mov
cmp
dec
pslld
les
dec
aam
pop
push
dec
inc
fists
aad
pop
insb
dec
mov
xchg
add
je
and
push
nop
dec
aam
push
inc
cmp
data16
jge
xchg
lret
loope
aas
dec
mov
dec
adc
xchg
das
dec
scas
or
lea
xchg
int
jle
das
jg
in
outsb
dec
sub
pusha
ret
repnz
dec
jns
sbbb
push
fnstsw
ret
cs
pop
ja
fidivs
andl
add
push
sbb
mov
and
mov
leave
out
fldcw
pop
dec
cmpl
xor
ret
sahf
sarb
movsb
subb
lock
std
pusha
xchg
and
mov
das
or
in
shr
adc
sbb
outsl
loopne
add
in
stos
adc
sbb
adc
push
mov
inc
lds
fwait
ljmp
test
and
mov
xorb
pop
mov
mov
mov
cltd
mov
jb
daa
ljmp
xor
dec
lret
mov
loopne
inc
mov
and
sbb
in
pop
dec
mov
lods
aam
icebp
cwtl
mov
sbb
push
cwtl
out
pinsrw
and
lcall
cmp
std
cmp
icebp
in
xor
sahf
mov
xor
xor
cwtl
jne
fs
inc
in
fmuls
cmp
mov
inc
jns
iretw
pop
sarb
sbb
dec
inc
inc
xchg
or
inc
lods
fwait
xor
aam
or
in
ljmp
mov
xchg
mov
iret
int3
aas
push
jl
mov
repnz
push
cmp
push
lret
and
js
inc
lret
fidivrl
cmp
dec
inc
lret
lahf
stos
and
scas
mov
cmpl
ss
shrb
mov
pop
jb
or
js
inc
push
test
cmp
inc
sub
push
decb
sub
testb
mov
mov
xchg
and
mov
loopne
xor
add
sbb
insb
pop
mov
push
mov
roll
mov
adc
push
sar
dec
mov
enter
lea
sbb
mov
mov
push
addr16
into
mov
mov
jecxz
cmpsb
push
jge
or
dec
jno
dec
outsl
mov
aam
cld
mov
xor
xchg
iret
xchg
les
inc
cmp
dec
enter
mov
push
push
shl
push
jp
ds
adc
xor
insl
mov
cli
push
pop
push
push
or
inc
stc
sub
fidivrl
jecxz
test
repz
outsb
pushf
pop
dec
dec
cmp
das
fs
or
xor
or
ja
scas
gs
popf
pop
aaa
js
sahf
push
push
dec
push
aaa
test
dec
jo
arpl
mov
sbb
aam
dec
movsl
repnz
jnp
clc
loop
push
rcll
sub
lahf
jae
fisubrl
adc
jg
mov
stc
push
push
aaa
lahf
xchg
rcrb
sbb
jo
jmp
hlt
xchg
pop
cmpsb
test
mov
mov
xchg
hlt
jo
push
popa
sub
repz
mov
test
push
movsl
stos
cli
bound
shlb
adc
xchg
dec
mov
add
mov
outsb
std
mov
scas
dec
sub
std
aas
leave
sub
mov
sub
xchg
or
ljmp
inc
mov
push
out
dec
add
cmp
push
outsl
cmp
mov
out
lds
scas
outsb
test
addr16
test
out
imull
aaa
adc
leave
loope
in
sbb
push
insb
jae
add
imul
outsb
mov
xchg
add
ffree
pop
pop
mov
add
fildll
call
push
stos
out
jecxz
out
jo
add
or
jg
inc
fdivs
sub
pop
dec
xor
fnstsw
mov
jp
in
jmp
push
add
add
and
inc
cwtl
imul
add
sub
ds
xchg
sub
ret
adc
pop
xor
rcrb
jb
xchg
cmpsl
mov
adc
sub
push
mov
fwait
out
xchg
ffree
cmp
sub
xchg
cmp
es
push
push
loope
jns
add
jg
xchg
call
int3
jmp
jns
icebp
fisubrs
dec
sbb
push
and
out
stc
decl
dec
mov
in
mov
mov
test
rol
xor
or
aas
fsts
rclb
repz
jae
push
das
mov
adc
loope
xchg
shr
cvttps2pi
bound
jg
movsl
fwait
ret
lods
mov
mov
pop
lds
xor
xchg
mov
inc
dec
test
cmpl
adc
push
push
dec
stc
push
insl
inc
fs
loope
ljmp
xchg
sbb
aam
shll
pop
mov
inc
add
xchg
and
adc
movsw
mov
add
and
pop
out
roll
outsb
in
sahf
mov
push
hlt
jle
sti
xor
lahf
pop
int
add
ret
rcll
inc
sbb
dec
push
scas
sbb
int
dec
icebp
sbb
je
dec
inc
loope
outsb
movl
mov
ljmp
mov
xor
cmp
gs
dec
test
pushf
xchg
xchg
aaa
pusha
sbb
mov
rcl
rorl
inc
call
popf
inc
inc
pop
fcmove
and
sahf
shlb
out
or
int3
cld
mov
dec
and
adc
dec
hlt
sbb
xor
sbb
cmpsl
mov
fbstp
pop
sub
mov
and
shr
cmpsl
out
inc
leave
in
pop
cmp
fstpl
fwait
in
xor
inc
push
jmp
stos
ja
add
mov
xor
iretw
rcrb
xchg
sub
pop
mov
or
xchg
pop
dec
aam
push
and
cmpsl
xchg
push
pop
adc
out
aam
inc
adc
inc
arpl
pause
jbe
push
cld
icebp
mov
push
popf
add
call
push
insb
sbb
push
enter
adc
xchg
lcall
stos
and
insl
sbb
push
jns
repnz
xor
push
out
jecxz
xchg
mov
mov
inc
test
ljmp
sti
clc
faddl
fs
insb
mov
stc
cmp
pop
inc
or
lcall
out
fiadds
inc
sbb
sbb
jbe
sub
fildl
aaa
pop
push
in
push
jnp
test
pop
xor
test
int
inc
adc
or
test
dec
or
xchg
mov
mov
mov
or
ljmp
leave
or
cmpsl
je
push
int3
jo
rcl
shrb
in
repnz
loopne
mov
shl
lea
addb
cmp
pop
mov
sbb
ja
mov
popf
aam
addr16
mov
sti
xchg
into
ret
mov
subl
ds
inc
fucom
fiaddl
cmp
or
jmp
popa
repnz
push
dec
mov
xor
cmp
imul
dec
addr16
jno
mov
mov
cmp
xchg
mov
or
push
fsubrl
xchg
mov
add
daa
mov
or
loop
mov
cltd
sub
mov
push
fsub
pop
jns
add
gs
scas
mov
data16
mov
cmp
lcall
mov
dec
mov
cmp
test
mov
leave
movsl
in
and
stos
pop
es
fcmovnb
test
mov
push
xor
xchg
rcr
lods
mov
or
pop
lods
add
loop
in
hlt
int
push
fists
lock
pop
jle
push
adc
jno
outsl
sti
rol
cmp
popa
dec
push
push
sub
inc
or
and
out
ds
inc
imulb
cltd
jp
push
loop
scas
jns
cltd
ljmp
push
mov
lods
xor
sbb
in
adc
inc
add
sbb
mull
bound
div
sti
mov
scas
pop
mov
or
outsb
add
mov
inc
daa
stos
push
mov
sti
int3
and
jle
mov
hlt
push
mov
inc
cld
adc
inc
dec
sbb
loop
jmp
jb
loop
mov
jmp
arpl
je
fcomps
jmp
xor
lcall
mov
lahf
push
in
xor
mov
inc
sub
hlt
aam
int3
inc
push
stos
daa
sub
add
jge
xor
fistpl
sbbl
ss
leave
jns
pop
mov
ss
cli
rcrl
enter
fsubs
icebp
les
xor
dec
xchg
push
cltd
cmpb
test
test
inc
sub
dec
add
pop
sub
or
pop
push
xor
lds
scas
pop
sarl
or
arpl
fstp
daa
lods
dec
jne
fstps
sbb
int3
insb
sub
jne
out
incl
xchg
lcall
mov
xor
in
arpl
pushf
add
mov
pop
xchg
cmp
cmpsl
xchg
jge
add
mov
xchg
lahf
jp
jns
aad
out
mov
adc
test
fdivr
inc
rclb
stos
jb
mov
pushf
push
lock
add
add
insl
xchg
test
jp
sub
leave
cmpsl
inc
xor
in
push
sti
iret
adc
mov
pop
pop
subb
dec
sbb
test
add
inc
fimull
add
cltd
push
mov
into
or
ds
enter
in
xchg
jae
pop
enter
lods
cmpsb
mov
mov
sbb
dec
mov
sub
movsb
lcall
addb
adc
in
imul
mov
jo
ret
mov
pusha
dec
push
in
mov
outsb
ret
invd
mov
or
scas
arpl
and
icebp
xor
pop
cmp
cld
jle
insl
jmp
lea
mov
xor
into
pop
lret
cmp
cmp
scas
jp
cmp
in
lahf
cmpsl
lock
lock
xchg
inc
jecxz
push
cmp
push
cmp
adc
jg
cmp
aam
pop
adc
push
ja
push
push
push
imul
sbb
das
inc
push
mov
cmpsb
cmpsb
xor
out
sti
es
pop
into
fldl
pop
fs
xor
jg
xor
jbe
jp
jbe
popa
lea
mov
arpl
lcall
loopne
aas
or
xor
ror
sahf
inc
xor
jge
fnstenv
xchg
add
das
loop
leave
fstps
lret
jge
das
push
adc
jne
xor
add
jb
rcll
dec
cmp
lock
jae
ret
mov
cmc
addr16
popa
push
mov
sub
cmp
cwtl
sti
jo
lods
ret
mov
pop
jae
cmpsb
push
add
je
inc
sbb
push
les
pop
jle
std
fstpl
and
in
cmp
xchg
mov
inc
mov
cmp
stos
fsubs
sbb
pushf
jo
and
cmpb
inc
daa
and
les
inc
jecxz
pusha
add
pusha
sub
xchg
test
xor
or
jecxz
push
mov
ficoml
les
dec
inc
pushf
addr16
rcll
int3
sbb
ljmp
pop
lea
icebp
cmp
out
mov
pop
iret
mov
mov
ss
cmp
ret
out
shrl
cmp
ret
aam
push
mov
repnz
cmp
or
jle
rcr
inc
arpl
dec
dec
shr
inc
xchg
pop
arpl
out
stos
pop
xor
lret
pop
push
jl
mov
xchg
and
dec
aaa
in
imul
sar
add
xor
in
in
stos
lret
jb
cmp
es
mov
hlt
pop
xchg
imul
iret
xchg
adc
daa
sub
jo
fdivrs
and
int3
inc
or
ret
mov
xchg
sub
xchg
std
fwait
in
xchg
jo
add
xor
pop
mov
std
ja
popa
in
dec
push
es
lock
and
mov
jbe
pop
pop
fimuls
jge
jnp,pt
pop
dec
test
lds
mov
adc
jp,pt
inc
lea
je
add
imul
std
cwtl
int3
dec
mov
pop
in
add
add
and
mov
dec
insl
imul
cmpsl
icebp
loopne
or
pop
or
es
loope
xchg
sbb
shrb
lea
and
ja
in
pop
mov
adc
lea
test
into
dec
or
in
in
pusha
nop
inc
add
fldcw
fisubrs
or
pushf
sub
push
imul
pop
cmc
sub
mov
mov
ljmp
sbb
mov
mov
inc
push
lcall
test
popa
testl
jp
dec
sbb
bound
jl
push
fucomip
aam
mov
cli
jle
add
sbb
jo
addr16
xchg
add
int
fiadds
lea
adc
movsl
roll
scas
fimull
inc
out
mov
fadd
test
sbb
push
lock
lock
arpl
cld
sbb
rcrl
pop
mov
cmp
mov
add
imul
add
adc
sub
xchg
cltd
cs
and
jbe
repz
rcrl
dec
decl
xor
out
lret
out
inc
hlt
popa
cmp
fsubl
sub
shrl
jns
push
subb
cltd
enter
xchg
cmp
jnp
pop
xchg
rorl
push
mov
jbe
aaa
jecxz
mov
mov
je
mov
dec
repnz
dec
jp
in
arpl
xchg
das
xchg
lret
insb
fwait
add
nop
jg
pop
inc
ret
hlt
ljmp
jle
cmp
fisubl
out
and
sahf
fsubrl
jp
repnz
cmp
or
ja
or
jae
repz
push
stos
mov
lea
icebp
scas
dec
cwtl
in
stc
dec
mov
test
lods
and
xchg
mov
cli
movsl
push
pop
hlt
sub
cmp
sbbl
add
push
cld
mov
sbb
xchg
loope
push
shl
aaa
sub
push
dec
jmp
fs
sub
ss
hlt
push
pop
dec
lcall
scas
in
inc
das
xor
jg
je
sbb
jb
addr16
xchg
lds
imul
lret
sub
or
inc
shll
loopne
iret
test
cmp
dec
or
imul
pop
in
cmp
pop
push
pop
or
data16
cld
xchg
push
adc
outsb
dec
mov
mov
dec
out
scas
popl
jmp
les
in
sub
mov
xchg
add
push
jne
mov
in
or
mov
arpl
jae,pt
lret
inc
xchg
pop
js
cli
adc
in
leave
inc
gs
sub
nop
add
out
out
and
out
iret
shlb
add
pop
lods
ret
dec
imul
clc
xchg
lahf
and
add
ret
hlt
cmp
rcrb
adc
inc
int3
mov
popa
pusha
pushf
xchg
ljmp
shl
popa
adc
push
push
push
ret
xor
insb
mull
int3
arpl
imul
push
add
cmpsl
sbb
push
fisubrl
lahf
enter
adc
insl
push
add
jg
mov
insl
fcompl
imul
sub
push
mov
xchg
pop
mov
jnp
cmp
mov
gs
sti
inc
cmc
mov
pushl
addr16
out
cmp
cld
movsb
jbe
push
xchg
aam
xchg
xchg
adc
push
sub
push
and
add
and
add
pop
jle
push
je
fdivs
ss
mov
push
addb
cmc
add
aam
jp
cmp
fwait
mov
fwait
subl
xor
or
push
jmp
loopne
addr16
mov
pop
adc
dec
outsb
jae
jle
aam
das
das
aaa
mov
inc
sbb
loop
mov
pop
jne
push
js
into
mov
sub
test
pop
mov
and
mov
je
xlat
in
inc
out
notb
lahf
sub
gs
push
mov
pop
jmp
shrb
jno
jmp
ljmp
dec
pop
add
ljmp
fsubrl
int3
jo
inc
hlt
sbb
push
imul
popa
iret
sub
and
inc
insb
fdivr
push
ret
jmp
push
arpl
adc
shrl
mov
outsb
jg
xchg
push
addr16
xchg
shl
push
cwtl
cmpsl
add
orb
aas
add
das
pop
orb
rcll
dec
cmpsl
call
test
pop
pop
mov
pop
push
lcall
mov
jp
dec
mov
lret
lods
out
and
and
dec
jle
jno
push
test
dec
push
jp
cmpb
in
cmpsl
sub
xchg
aad
stos
inc
outsl
xchg
sahf
and
mov
nop
sbb
or
adc
mov
add
inc
out
popf
jecxz
pop
jle
arpl
adc
jl
jge
idivb
scas
mov
sbb
pop
mov
mov
mov
jne
sub
inc
jge
cltd
mov
std
xor
rolb
cmpsb
bound
sub
push
xchg
pop
lcall
addb
jp
aas
xor
cs
pop
sbb
call
daa
inc
outsb
push
cwtl
jecxz
jmp
or
ret
add
aaa
lahf
popa
xchg
mov
insb
je
int
sub
sbb
std
popf
sub
mov
adc
mov
xlat
outsb
divb
inc
in
mov
ja,pn
mov
lods
dec
inc
cmp
bound
fmull
int
xor
scas
pop
cmp
es
stc
sti
jbe
subl
ljmp
repnz
push
mov
stos
arpl
lea
xor
mov
xchg
pop
adc
adc
dec
enter
push
xlat
inc
loopne
xchg
ljmp
jl
mov
or
pop
orl
lods
mov
xor
add
mov
add
and
sub
xchg
and
in
fs
nop
int
aad
aad
dec
jg
scas
lret
les
mov
pop
insl
xchg
rcll
cmp
fs
push
popf
jb
hlt
lock
dec
aas
enter
popa
mov
and
movsb
int
negb
lret
mov
pop
lahf
movsb
lods
cmpsb
in
mov
subb
pop
nop
add
jge
pop
adcb
fildll
pop
iret
adc
aaa
push
fiadds
or
cmpsb
arpl
mov
rorl
cmpsl
xchg
fdivrl
shl
outsl
add
mov
dec
adc
cmp
rcrl
shrb
call
dec
jns
mov
sub
iret
xchg
out
lods
push
mov
or
inc
shlb
xchg
sbb
rol
nop
push
push
test
add
popa
sub
push
push
pop
pop
sub
sbb
ds
dec
or
outsb
adc
add
inc
clc
dec
shrb
push
mov
idivb
icebp
lods
rorb
mov
movsb
repnz
push
rorb
arpl
shl
mov
out
dec
push
cmp
dec
and
loopne
or
cmp
inc
mov
es
pusha
scas
aaa
movsb
push
dec
sub
xchg
sbb
inc
repz
push
xor
mov
cmpsl
insb
rol
orb
outsb
dec
xchg
bound
outsl
cmp
jbe
div
je
jb
mov
insb
adc
inc
mov
or
inc
nop
cwtl
push
cmpsb
das
or
pop
movsb
pop
aaa
add
fsubr
enter
ljmp
test
sub
cmc
popf
or
insl
xchg
loop
push
ja
bt
sbb
and
movsl
aas
sahf
mov
xor
add
push
movsl
pop
pop
icebp
and
mov
mov
cmp
cmp
xor
aam
cmp
or
sub
inc
andl
cmc
test
cmpsl
rolb
dec
scas
pop
push
inc
xchg
in
test
push
arpl
sub
ss
push
and
lcall
and
adc
loope
jle
add
push
int
mov
out
jge
outsl
sbb
scas
hlt
jmp
and
decb
mov
pusha
scas
pop
addb
loop
mov
inc
insb
jmp
jecxz
rorl
cwtl
cs
sub
mov
cmp
scas
adc
push
lahf
mov
sub
lods
adc
jge
xor
sahf
push
aad
adc
xor
sub
cmpl
dec
or
jnp
ljmp
sti
mov
or
cmp
fwait
jecxz
jo
iret
aam
cmp
inc
shl
mov
sub
in
pop
add
mov
jo
test
add
pop
leave
and
scas
mov
dec
sbb
rcrl
mov
cmpsl
aam
clc
lret
clc
sub
jecxz
scas
stc
mov
mov
pop
out
mov
push
xlat
loopne
das
xchg
add
mov
jp
sbb
inc
add
fcmovnu
arpl
push
mov
lock
int3
bound
lret
and
dec
in
cli
jno
sub
bound
cmp
lds
lea
xor
mov
xchg
adc
mov
sub
test
add
sub
adc
in
sub
push
fwait
insl
and
adc
mov
imul
lret
int
xor
jo
out
push
jb
dec
push
push
push
mov
mov
rcll
fistps
push
sbb
push
and
mov
push
mov
stos
mov
dec
and
imul
outsl
xchg
push
repz
ljmp
imul
test
or
mov
add
pusha
fildll
inc
decb
int3
and
xchg
daa
mov
js
int3
xchg
int
lea
inc
lea
fwait
rclb
inc
xchg
lock
jg
jae
dec
mov
add
sar
push
inc
or
xchg
or
and
cmp
scas
jecxz
jb
push
xor
adc
test
pop
aas
push
test
adc
lock
pop
sbb
cs
lea
push
xchg
ljmp
pop
xchg
std
leave
mov
mov
in
scas
insl
cld
fildl
push
mov
std
jb
rcll
outsb
in
and
ret
or
rol
cmp
int
mov
pop
sbb
dec
mov
sub
pusha
xchg
push
mov
pusha
les
cmc
enter
adc
mov
enter
adc
dec
jae
mov
push
add
sti
mov
pushf
je
mov
stos
cli
or
pushf
mov
inc
mov
fwait
mov
lahf
mov
pop
dec
adc
mov
and
add
outsb
jge
mov
adc
cmpsb
adc
adc
xchg
fs
push
sahf
jg
aad
or
sbb
xchg
cltd
lcall
scas
mov
stc
insl
jb
leave
add
enter
mov
lea
pushf
int3
stos
insl
ret
dec
push
inc
or
inc
aam
xor
fsub
mov
mov
pop
xchg
mov
outsb
ror
xchg
xor
xchg
push
mov
jns
or
xor
test
push
cmp
sti
add
aam
loop
mov
inc
dec
push
mov
sldt
sbb
cltd
add
cmp
fnstcw
cltd
push
in
clc
cmp
push
push
pop
mov
aad
pop
inc
sbb
arpl
fidivrs
stos
inc
fimuls
fwait
push
mov
daa
in
stc
cvtdq2ps
xchg
lcall
in
dec
or
lock
popa
and
repz
inc
orl
jecxz
fistpl
movsb
xchg
cmc
in
ja
push
scas
iret
xchg
xchg
adc
fnstenv
out
cld
jnp
xor
xor
pop
shl
rclb
insl
mov
mov
aaa
mov
cmpsb
dec
cmpsl
push
outsl
in
orb
fsubs
sbb
push
movsl
jne
orl
pop
push
inc
stos
pop
pop
ljmp
fistl
push
lods
xchg
mov
repz
fdivrp
and
jmp
cwtl
shl
cmp
adc
sbb
push
mov
cltd
nop
movsb
xor
fisttpl
fldt
outsb
adc
sbbb
in
mov
mov
out
xlat
push
sbb
fs
mov
fists
mov
push
dec
andl
es
imul
fldcw
test
mov
outsb
sbb
or
mov
sub
sbb
xlat
gs
or
xchg
test
cld
sbb
shll
ret
ja
xor
adc
fadd
xchg
mov
pop
pop
or
dec
xchg
pop
movsb
adcb
sti
aas
movsl
xchg
mov
add
out
pop
stos
sti
pop
sub
std
rolb
and
inc
sub
xor
je
or
jo
cli
sub
rorb
and
push
call
sbb
repnz
mov
mov
sub
push
add
mov
adc
mov
dec
ljmp
mov
andl
and
shll
mov
clc
lahf
sbb
nop
adc
dec
jno
mov
lds
mov
push
push
mov
dec
sub
aas
fimull
pop
cld
es
jb
pop
adc
and
bound
mov
mov
add
push
cmc
jns
jge
mov
lahf
xchg
mov
data16
sub
jnp
repnz
push
pop
lods
jle
cmp
iret
lret
sbb
mov
sub
inc
loop
aad
pop
stc
mov
fildll
mov
mov
add
jmp
mov
adc
mov
push
je
xchg
dec
push
adcl
push
into
sub
sub
fmuls
fdivl
xchg
xor
mov
fwait
mov
outsb
sub
jae
scas
xor
jecxz
enter
inc
sahf
mov
in
xor
mov
lret
fwait
popa
add
and
jne
cmpsb
cmpsl
sbb
cmp
mov
cwtl
stc
push
in
stc
insl
add
lds
mov
mov
loopw
push
inc
jo
jb
mov
sub
std
cld
jge
or
out
shlb
pop
mov
sub
mov
push
insb
dec
sahf
sub
popa
adc
pusha
rorb
imul
xor
pop
roll
data16
and
and
lret
mov
jae
cmp
dec
or
fisubs
nop
bound
sub
gs
lahf
jle
fildl
mov
out
mov
lds
dec
cmpsl
out
or
cmp
cwtl
dec
adc
adc
xlat
cmp
stos
mov
fisttpll
add
loope
inc
xlat
sbb
dec
je
mov
sbb
add
jae
dec
std
sbb
push
ret
rclb
ja
and
shl
fsubp
hlt
jnp
pushf
scas
dec
je
jg
cld
inc
std
lock
stc
xorb
ret
jle
sbb
int
and
cmpl
xchg
pop
ljmp
mov
pop
lret
push
js
mov
xchg
cmc
pop
jecxz,pt
fisubrs
sbb
mov
nop
xchg
xchg
mov
outsl
shlb
mov
push
ja
sbb
add
sub
out
cli
cmpsb
lahf
aam
outsb
sahf
out
sub
add
ret
call
cmc
shl
push
int
mov
sub
arpl
cli
jno
inc
mov
sbb
iret
daa
or
add
xchg
sub
jbe
or
jno
dec
stos
outsb
mov
mov
in
out
loop
xor
mov
stos
lret
cli
dec
xchg
leave
lods
xor
dec
mov
cmp
ror
cmp
jbe
adc
mov
inc
int3
mov
insl
fwait
clc
push
push
test
aaa
push
inc
push
lods
push
outsl
jmp
out
sub
sub
js
xchg
enter
repnz
imul
push
pusha
int3
fistl
ds
aam
mov
rcrl
iret
adc
cli
jp
loopne
xlat
flds
sbb
or
popf
sub
dec
adc
pop
push
xchg
in
outsb
jmp
cmp
popa
push
cmp
jg
xor
adc
lret
hlt
pop
stc
xor
jmp
out
push
inc
cmp
sarl
jo
xchg
les
in
dec
and
inc
jb
add
rcl
dec
cmp
sbb
clc
aad
pop
inc
pop
mov
out
pop
gs
dec
insb
scas
push
add
into
div
aad
jno
insl
in
jle
dec
mov
push
add
in
adc
push
or
mov
imul
sbb
mov
lds
xor
idivb
movsb
adc
push
sbb
outsb
sbb
outsl
xor
movsl
lahf
cmp
and
sbb
ds
idivb
pop
sub
inc
or
imul
mov
movsl
lock
data16
cld
xchg
inc
frstor
sub
or
int
stos
rorb
int3
add
push
repz
icebp
mov
or
ja
out
mov
imul
mov
lea
outsb
jp
jmp
mov
pop
adc
and
cmp
roll
xchg
mov
sub
hlt
cld
pop
movaps
mov
add
jne
in
push
inc
sahf
xor
xlat
arpl
or
popa
and
or
mov
jge
jo
sub
es
cs
sub
call
jo
mov
dec
scas
jae
int
mov
pop
mov
inc
jecxz
mov
js
dec
add
pop
push
mov
cmpsl
xor
push
ret
mov
mov
mov
loopne
dec
aad
ror
mov
cmp
in
or
ret
pop
pop
mov
call
les
adcl
je
loopne
dec
stos
nop
jle
int
sbb
arpl
ret
inc
das
aas
cmpsb
ja
test
sub
out
into
xor
and
fdivl
jb
or
mov
jp
int
andb
imul
xchg
cmc
mov
jg
push
fneni(8087
xchg
fisubs
mov
xlat
mov
outsb
xor
jle
pop
movb
dec
std
and
nop
loope
xchg
mov
std
pushf
sub
cmp
daa
xchg
mov
sub
fucom
xor
mull
xchg
and
stos
push
popl
push
xor
inc
or
xor
test
outsl
or
pop
or
aad
idivl
cli
mov
testl
inc
repnz
jg
fisubl
and
xchg
dec
bound
push
aam
fdivr
push
xor
xor
push
jge
cli
ja
pop
out
add
sti
mov
cld
ss
das
je
movsl
stos
jecxz
or
mov
lahf
push
ss
push
icebp
xor
fidivs
sbb
inc
or
mov
pushf
sbb
mov
popa
mov
dec
push
sub
xchg
icebp
in
or
out
push
cltd
les
outsb
test
sub
sbb
pop
or
inc
sub
pop
mov
xor
cwtl
xchg
mov
add
jns
mov
adc
sbb
and
test
lock
xchg
and
inc
lcall
imulb
push
pushf
and
loop
sbb
loop
mov
push
or
adc
loope
jo
jno
in
cmp
or
mov
push
lds
dec
addr16
push
cmp
inc
arpl
insl
jge
outsl
and
int3
mov
lahf
fs
dec
inc
mov
fidivl
sahf
xchg
lods
adc
and
or
push
in
clc
lret
iret
xor
jge
xlat
in
sbb
push
cld
call
mov
add
xchg
aaa
dec
repz
jae
outsb
in
cmc
xor
hlt
push
dec
ljmp
outsb
orb
jp
jg
xor
jmp
js
daa
jle
aam
jne
test
dec
xor
jnp
clc
xor
cwtl
cltd
enter
mov
inc
fisubrl
test
popa
xor
mov
sarb
push
mov
test
int
push
or
ret
decb
nop
inc
xor
mov
fwait
mulb
push
fbstp
leave
outsb
lret
mov
out
fstpl
cmp
std
cmpsb
sahf
xchg
push
std
repnz
mov
cmp
dec
dec
inc
adc
dec
push
adc
xlat
fs
mov
insb
in
sub
test
xor
jmp
aas
mov
push
hlt
popa
sbb
stc
or
jne
push
sub
fcoml
sbb
push
jb
idiv
xor
dec
jns
add
inc
movsl
adc
in
push
mov
int
stc
fstps
xor
test
mov
shr
pop
sbb
and
jnp
cmp
cli
aaa
lds
movsb
jns
xchg
fstl
aas
clc
jmp
mov
adc
inc
xchg
inc
jecxz
xor
adc
mov
gs
pop
outsl
xor
pop
adc
cs
outsb
pop
mov
dec
cmp
xchg
mov
sbb
sub
das
push
ds
ficompl
cwtl
dec
orl
push
push
pop
shlb
sbb
xchg
roll
xlat
push
xchg
pop
popa
dec
idivb
cmp
mov
jle
push
mov
int3
call
fstpl
jns
sub
dec
imul
inc
or
xor
jno
dec
cmc
jnp
mov
loopne
jno
add
xchg
lods
add
cld
jns
xor
pop
jecxz
cmpsb
add
add
cmp
lods
mov
xchg
sar
dec
loopne
bound
int
shl
lods
add
out
sahf
push
push
push
mull
fbstp
and
mov
enter
xchg
in
xor
int
add
jmp
popa
xor
mov
aam
pop
sar
add
cmc
inc
loope
addb
sbb
sub
mov
xor
cmpsb
jns
not
das
push
push
xorb
jl
addr16
into
jae
sbb
subb
in
int
popf
shrb
sbb
sbbb
bound
pop
pop
movsl
push
and
sti
dec
xorl
fidivl
mov
xlat
lods
and
mov
xchg
add
out
aad
or
out
ret
mov
lret
and
ret
sahf
mov
int
test
mov
iret
nop
adc
stos
hlt
lret
sbb
arpl
push
jp
cltd
mov
cltd
int
lods
sahf
lea
sbb
imul
pushf
and
xor
push
addr16
popa
cs
pop
in
cmpsb
lret
push
cli
lea
cmp
cli
repnz
adc
sti
pop
inc
and
imulb
mov
jnp
mov
push
in
push
cmp
insb
mov
mov
adc
jp
xchg
aas
dec
leave
ret
adc
out
popa
ret
pop
ret
lret
adc
orl
lret
in
in
cmp
push
xlat
jo
jnp
out
sub
rcll
or
call
in
mulb
push
mov
adc
int
jnp
int
test
imul
sub
pop
xchg
jbe
xor
out
test
pusha
dec
pusha
add
jno
lret
divl
aaa
addr16
inc
in
pop
and
pop
sar
inc
dec
pop
xor
or
lods
cmp
sar
pop
lods
jne
lock
add
jp
xchg
ss
xchg
jnp
cli
push
xchg
sarb
aam
lea
mov
push
stc
mov
stc
mov
jno
call
scas
push
mov
inc
mov
dec
cmp
sbb
mov
or
cmpsb
in
cmp
movsl
push
lret
int
sbbb
out
or
mov
test
lret
mov
in
rcll
push
call
pop
shll
leave
pop
shll
in
cmp
sahf
mov
add
lahf
call
cmpb
shll
cld
inc
arpl
xchg
mov
sbb
dec
jle
mov
mov
sbb
push
int3
pushf
mov
fdivp
xchg
pop
add
xor
pushf
popa
dec
push
push
inc
mov
push
push
adc
rol
mov
fsubl
pop
xor
fs
enter
and
jo
and
stos
subl
dec
jo
sbb
mov
cmpsl
test
mov
je
and
stos
stc
hlt
mov
jp
mov
shlb
jnp
dec
fwait
dec
and
gs
aad
jle
add
mov
aas
adcb
pop
lret
push
movsb
mov
fbstp
xlat
push
out
xor
outsb
push
jl
push
imul
in
into
ss
mov
add
sahf
cli
cmp
jnp
movsl
sub
mov
into
and
jno
xchg
leave
mov
and
data16
pop
int3
lds
adc
cmp
mov
ret
mov
mov
xor
sbb
dec
mov
lods
ret
out
add
out
in
inc
xchg
ficomps
call
inc
mov
rcll
sarl
dec
or
cmp
xor
cwtl
jge
std
mov
fisubs
and
pop
adc
push
mov
pop
cmp
jle
int3
pop
or
or
push
mov
push
adc
or
mov
fidivl
xor
mov
lret
icebp
cmpb
fidivs
pop
leave
cmpsb
cli
dec
pop
cmpsl
push
movsl
and
fnstcw
js
and
inc
pop
mov
push
inc
insl
imul
lods
add
xchg
daa
out
dec
lds
mov
xor
jl
push
popf
mov
lock
sbb
push
cmp
add
std
mov
add
sub
adc
cmp
addl
filds
xchg
imul
push
in
xchg
push
xchg
hlt
adc
inc
outsl
mov
arpl
sbbl
lahf
push
es
push
jmp
add
fucom
sbbb
mov
jne
mov
mov
mov
mov
dec
mov
push
add
out
mov
mov
mov
cmp
daa
cmp
addr16
lods
outsl
xchg
mov
mov
add
pusha
fdivrl
sarl
je
and
mov
in
mov
mov
push
sti
mov
xchg
pop
cmc
xchg
mov
jae
ret
pop
aam
xchg
stc
lahf
add
push
shlb
ja
cmp
shr
in
int3
faddl
xchg
andl
repnz
andl
popf
test
dec
out
xchg
push
mov
ljmp
ret
mov
hlt
fwait
adc
cmp
jp
add
and
mov
or
fdiv
mov
xor
sbb
jp
pop
sub
sti
sub
mov
out
lahf
pop
xlat
jg
mov
inc
sahf
mov
daa
in
stos
inc
sarl
ret
imul
jo
lret
fiadds
movsl
or
and
sbb
xchg
pusha
mov
repnz
mov
insb
clc
jge
jge
dec
pop
xor
inc
or
mov
in
ja
outsb
or
loop
rep
lods
scas
mov
out
pop
sbb
xor
jge
sub
jmp
jnp
pop
fiadds
and
lea
scas
and
fistpll
ret
adc
test
gs
or
fstps
pop
popa
addl
negb
pop
xor
into
mov
ret
xor
jp
pop
mov
inc
imul
cwtl
cmp
jno
pop
lods
push
idivl
jmp
pop
lret
add
cmp
push
adc
sub
mov
jo
adc
xchg
cmpsl
dec
lret
inc
arpl
lret
pop
arpl
jns
outsb
pop
mov
lea
lea
testl
mov
lock
aas
hlt
jns
mov
add
pop
xchg
jl
mov
dec
sub
mov
inc
dec
icebp
mov
orb
xor
lahf
xchg
daa
cltd
dec
and
rorl
out
scas
inc
inc
xlat
dec
es
rorb
pusha
jne,pn
xor
inc
dec
sbb
mov
scas
inc
sbb
push
addr16
jmp
std
inc
test
push
js
cmc
icebp
call
out
fisttps
enter
pop
gs
push
icebp
or
or
inc
imul
and
xor
dec
dec
adc
push
or
je
int3
sub
add
mov
push
in
xor
mov
fiadds
lret
mov
xchg
enter
dec
fcomi
insl
aas
fsubs
xchg
repz
dec
inc
mov
cmp
xlat
jae
pop
dec
mov
cmp
movsb
cmp
dec
lret
les
pcmpeqb
mov
cmpsl
xchg
je
mov
loopne
out
cmpsl
mov
sbbb
inc
xchg
cli
cld
sbb
lret
ret
cli
xor
popa
rolb
push
sbbb
andl
push
rcrl
movsb
mov
imul
push
xorl
xor
dec
out
xor
lcall
ficoml
xchg
xor
jmp
inc
lahf
mov
push
lock
push
stos
xor
les
iret
mov
in
pop
push
testl
lea
push
adc
icebp
gs
push
push
add
sub
and
cltd
insl
sub
jmp
fdiv
lahf
push
dec
repnz
in
and
lcall
push
xchg
into
stc
xor
orb
aaa
push
addb
stos
sbb
mov
cmp
int
adc
or
and
inc
les
xor
scas
stc
enter
outsl
xlat
andb
pop
es
int
fs
pop
das
jo
je
lea
out
adc
mov
imul
aaa
and
out
out
mov
sub
adc
cmpsb
dec
stos
cli
out
push
sub
loop
sbb
dec
mov
pop
push
mov
push
in
loopne
mov
and
jecxz
jns
mov
inc
mov
pushf
push
andl
fisttpll
fisttpl
imul
mov
mov
popa
ljmp
xchg
jg
loope
mov
xor
lahf
xchg
lods
gs
sar
jae
fiaddl
cmp
cli
xor
xor
pop
shrb
mov
lock
fcmovu
sub
mov
leave
mov
je
imul
push
mov
pop
hlt
pop
not
lds
mov
repz
mov
lcall
jns
scas
xchg
cld
sbb
idivl
sub
into
mov
mov
mov
xor
int
xor
aad
adc
sub
mov
lret
sbb
insb
lds
mov
enter
rep
subl
ljmp
cmp
jl
mov
and
imull
jle
jp
insb
xlat
insl
push
xchg
insb
jnp
or
cmpsl
addb
pop
jnp
push
sbb
sub
sbb
ja
fdivrl
dec
pop
aam
js
xchg
adc
add
in
dec
loopne
push
loop
out
inc
push
jmp
dec
sub
movsl
pop
adc
lock
fisttpll
sbb
sbb
mov
dec
fwait
mov
idivb
xlat
rorb
push
ja
icebp
loopne
mov
push
insl
fbstp
jmp
leave
imul
mov
scas
cmp
pop
pop
pop
fwait
xchg
sub
add
cld
int3
inc
xchg
test
addr16
nop
and
add
scas
xchg
mov
jecxz
sbbb
mov
xchg
icebp
lcall
mov
enter
adc
pop
sbb
dec
ljmp
fwait
arpl
mov
pop
les
push
bound
rorl
stc
rorb
rclb
sar
dec
or
scas
int3
fisubrs
outsb
out
movsb
pop
popf
daa
lock
sarl
jp
add
out
jnp
shl
push
and
gs
sbb
mov
iret
mov
mov
xor
cmp
loop
mov
dec
mulb
out
repz
jmp
and
or
push
cmp
push
jnp
cmp
gs
cmp
andb
das
sbb
or
cld
push
cwtl
outsl
jo
mulb
mov
xchg
jbe
cwtl
stos
xor
dec
mov
shr
and
and
adc
mov
lds
call
mov
inc
dec
lods
fiaddl
dec
mov
icebp
push
and
out
sub
das
jne
rclb
scas
cs
and
push
mov
jle
insb
push
insl
arpl
out
scas
ss
adcl
repz
insl
fstps
lock
aas
fsubr
push
ror
sub
adc
mov
mov
or
loopne
jae
cmp
jae
inc
sub
jae
out
jo
cld
push
mov
mov
lcall
sbb
sbb
aam
push
jle
jg
dec
jbe
xor
test
ja
popf
jns
int
or
fcomps
fsub
mov
sub
decl
push
pop
xor
repz
adc
xor
add
dec
movsl
cmp
jmp
jns
sbb
jge
xor
lock
jno
fwait
add
dec
lods
jb
adc
mov
hlt
jmp
dec
push
jl
les
sub
mov
xor
or
xchg
mov
in
mov
sub
pop
and
pop
sub
in
cmp
cmc
leave
pop
or
add
sub
sub
clc
mov
jne
cmp
in
int
or
cs
lock
mov
jb
mov
mov
xor
push
pop
dec
cmp
lcall
je
ss
sbbb
es
xorl
mov
adc
in
pop
int3
push
add
jne
cmpl
rcrl
mov
js
repz
xchg
pop
lock
and
inc
lret
lret
push
mov
xchg
test
cld
push
add
mov
fcomps
inc
leave
pop
fdivl
and
mov
fs
lock
add
xor
jge
sbb
popf
icebp
mov
or
dec
jecxz
fistpl
mov
icebp
mov
push
fs
or
xchg
rcrb
add
add
dec
mov
js
outsb
pop
xlat
stos
out
lcall
fs
lcall
lods
cld
fadd
fs
dec
stos
nop
inc
xor
adc
pop
popa
in
std
mov
mov
das
lods
xchg
enter
or
sub
xor
mov
call
int
mov
adc
mov
push
in
ljmp
rcrb
aaa
movl
adcb
fs
or
mov
in
sbb
push
or
mov
sbb
push
nop
mov
stc
leave
mov
sub
ljmp
hlt
pop
mov
mov
or
insb
mov
roll
cli
fwait
repz
dec
lds
std
test
ret
sar
jnp
insl
and
sti
jno
add
jbe
push
xor
clc
pop
cmpsl
pop
inc
push
push
lea
repnz
pushf
mov
mov
neg
rcrl
inc
mov
sub
xor
pop
roll
fcoml
loopne
and
pop
xchg
jno
xchg
subl
mov
mov
dec
push
push
movsl
push
dec
and
xchg
aad
loopne
loop
pop
adcb
pop
and
xchg
fs
cmp
fidivrs
dec
aaa
imul
dec
or
in
xchg
andps
lahf
cltd
jmp
sarb
mov
or
lock
xor
shrb
in
sbb
test
xor
xor
sbb
mov
mov
out
sub
adc
pop
mov
pop
and
sub
xchg
pop
lret
pop
pop
and
mull
jbe
cmpsl
jl
xor
push
adc
pop
sahf
sbb
mov
sbb
xorl
mov
in
mov
lods
stc
pop
lahf
jmp
mov
aaa
mov
clc
mov
cmp
pop
outsb
cmp
mov
ljmp
call
xchg
mov
push
sbb
xor
rcrl
lds
cmp
pop
xchg
mov
outsl
inc
test
jno
leave
rclb
incl
dec
add
mov
dec
aas
mov
sbb
mov
lahf
insb
mov
pop
mov
lahf
pushf
and
push
pusha
mov
or
in
outsl
mov
push
cmp
inc
dec
testl
test
gs
pop
push
xchg
mov
loop
test
inc
sbb
and
js
movsb
call
dec
bound
subb
mov
call
cmp
sbb
cli
jmp
mov
or
mov
mov
push
xchg
fwait
pop
jecxz
and
and
daa
loop
mov
push
ret
cmp
stos
outsl
lret
mov
mov
in
xor
pop
pop
pop
add
fstps
pop
xchg
jl
inc
push
inc
scas
push
movsl
scas
mov
je
xchg
lret
xchg
dec
stos
mov
or
and
xor
inc
push
jno
dec
adc
xor
movsl
enter
fcoms
leave
push
inc
mov
into
add
pop
sahf
adc
test
adc
mov
orb
dec
repz
fsubrl
inc
push
nop
call
mov
shll
int
or
lea
sbb
testb
xchg
stos
fwait
int
jno
sbb
jae
mov
xlat
jl
adc
adcb
negl
dec
mov
mov
call
xchg
cmp
xor
add
cld
dec
ret
mov
mov
pop
mul
push
outsb
cs
mov
mov
mov
scas
imul
push
ja
xor
jl
jg
loop
std
sub
leave
dec
cld
push
loop
jmp
push
jns
in
sub
and
dec
imul
outsl
mov
lcall
lcall
lahf
and
lock
pop
cmp
ret
inc
jno
or
stc
sbb
aam
dec
jmp
call
jbe
pop
daa
imul
jge
pop
andl
push
enter
lcall
push
push
adc
lds
imul
sbb
rol
mov
lods
sahf
and
dec
dec
cmp
scas
xor
jle
adc
xor
icebp
dec
pop
and
fsubrl
sbb
stos
push
push
dec
dec
jecxz
out
insl
adc
sub
or
mov
loop
cmpsb
and
mov
orl
or
cmp
add
or
stos
std
sbb
push
rorl
nop
or
cwtl
pusha
xchg
push
icebp
hlt
shr
or
push
lea
mov
in
insb
jne
mov
outsl
xor
decl
pop
push
sbb
pop
into
mov
loopne
aam
xchg
fisubs
dec
movsb
pop
mov
jbe
mov
arpl
inc
daa
in
and
xor
push
popa
sbb
faddl
nop
xlat
addr16
pusha
mov
mov
jl
adc
push
pop
cmp
in
leave
fs
sbb
mov
mov
loop
xchg
cld
push
lds
sub
cmp
fistpll
int3
push
std
jmp
pop
cmp
stos
les
mov
and
adc
movsl
repz
inc
lcall
js
test
cwtl
mov
mov
sahf
push
xor
sub
xlat
lret
add
adc
sbb
xor
jno
clc
xor
mov
xor
pop
leave
call
ret
xor
stc
xchg
jecxz
mov
cmp
lea
push
clc
pop
sub
ds
stc
popa
jne
jmp
insb
xor
and
in
lret
pop
xchg
lock
ret
jmp
in
outsl
jmp
xchg
lahf
call
jmp
push
div
lahf
sub
popa
or
xchg
enter
inc
mov
adc
fucomip
out
cmpsl
scas
cld
iret
enter
fwait
mov
jl
cmp
rcrb
sub
add
fsubrs
leave
je
add
fcmovne
inc
enter
dec
cmpsb
or
fsubrl
call
sti
pop
imul
mov
mov
xchg
pushf
inc
add
jmp
push
scas
cwtl
sbb
mov
sarl
cmp
dec
pop
out
and
mov
mov
cmp
and
int
aam
jle
add
in
scas
xchg
insb
and
mov
cs
fstp
mov
inc
pop
jo
push
outsb
xchg
int3
inc
fwait
mov
lahf
jnp
inc
or
insb
add
inc
int
imul
jne
movl
add
cltd
xor
rcr
cmp
pop
sub
mov
dec
idiv
ret
pop
xchg
sbb
jge
or
jb
mov
pop
insb
scas
fmul
mov
clc
cmpsl
lret
mov
sub
jb
std
adc
add
outsb
mov
jns
sbb
push
mov
test
xor
dec
mov
pop
leave
or
fisubrl
jae
cs
xor
mull
leave
fs
mov
les
jmp
and
jmp
cmpsb
imulb
dec
adc
pop
jnp
adc
sub
sub
ret
sbb
push
aad
sbb
stos
mov
or
dec
xor
mov
popf
jl
mov
aas
xor
idivb
cmpsb
bound
lret
enter
pop
andl
jb
gs
mov
lret
addb
dec
push
int3
jbe
jg
adc
out
dec
sbb
push
inc
push
jo
adc
btc
sbb
repz
mov
hlt
xchg
stos
bound
add
stos
repnz
xchg
add
inc
sub
cmpsb
cs
ljmp
jno
sbb
insl
gs
jle
sbb
lret
add
nopl
add
out
sub
test
test
lock
and
mov
pop
push
xchg
mov
aas
pop
mov
test
push
repnz
inc
and
insl
loop
cmp
sub
shlb
mov
shll
sub
gs
sub
xor
movsb
push
fldcw
push
imul
adc
in
adc
push
bound
hlt
ret
out
add
pop
mov
cmp
jb
fcoml
stc
inc
adc
int3
daa
and
cmp
jnp
cwtl
test
pusha
adc
std
scas
dec
cmc
sbb
mov
inc
sub
roll
adc
pop
scas
sbbb
pop
dec
jle
in
mov
movsl
test
xchg
pop
jne
inc
mov
shll
cwtl
adc
popa
mov
xchg
add
sub
aam
add
xchg
cld
aas
inc
sub
jb
dec
in
movsl
inc
dec
loop
sub
icebp
sub
fdivrl
sbb
dec
enter
cmpsl
aas
fldt
divl
xor
adc
mov
pop
imul
or
xchg
andb
sbb
add
mov
inc
mov
je
shl
push
lret
push
jg
call
adc
ret
dec
xor
out
adc
dec
shlb
loopne
and
insb
dec
fistpl
out
push
mov
scas
fmuls
into
adc
add
es
jmp
int
das
add
call
ljmp
rclb
xor
pop
or
jno
inc
cmp
pop
push
mov
fwait
pop
jecxz
test
add
mov
lret
mov
and
cmp
add
and
cmpsl
xchg
jbe
ret
jp
mov
fdivrs
fcomps
in
or
jge
jg
mov
mov
dec
rcrl
es
jne
mov
sub
lret
ja
icebp
js
jle
mov
test
in
scas
sbb
stc
into
xor
testl
push
and
cmp
stos
pushl
cmp
sbb
je
hlt
rol
dec
ss
mov
xor
mov
or
clc
shrb
add
lods
add
jecxz
rorl
dec
test
push
mov
jns
aad
dec
cld
and
ret
enter
out
popa
sbb
sub
fadds
mov
lahf
sub
dec
and
fs
mov
mov
dec
adc
pushf
iret
test
popf
int3
test
loop
push
dec
jmp
nop
dec
jle
in
dec
cli
add
jle
addr16
adc
or
outsl
pop
add
adc
dec
xor
testb
std
leave
je
jne
roll
mov
push
or
mov
fisubl
inc
out
gs
mov
pop
ret
or
pop
mov
dec
imul
rolb
imul
imul
jnp
rol
push
je
jle
iret
xor
loop
mov
mov
xorl
clc
pop
repz
and
repz
loop
pop
das
sbb
jo
in
dec
fdivrs
loope
xlat
jmp
sbb
mov
inc
inc
pop
gs
mov
mov
sbb
or
add
dec
adc
loop
insb
ljmp
test
sub
movsb
pushl
clc
and
mov
pop
js
pop
mov
cs
movsl
sbbl
cmp
fdecstp
shl
repz
lods
pusha
xchg
jbe
or
cmp
mov
inc
ljmp
add
cmc
loop
imulb
fildll
sub
ljmp
enter
sbb
jmp
and
clc
sbb
or
cmp
inc
popa
sub
das
cmpl
jns
ss
mov
pop
loopne
push
out
fcomp
shl
or
sbb
xchg
push
in
movsb
push
popf
inc
into
sub
cmp
mov
rclb
lahf
push
in
jmp
cltd
cmpsl
fbld
aad
in
sbb
adc
cmp
lods
cmpsb
insl
in
dec
test
xchg
stos
loope
inc
and
sub
dec
sbb
pop
notb
in
sub
adc
jmp
stos
dec
addr16
movsb
xor
test
std
and
cmc
push
xchg
ss
sbb
inc
add
shl
int
jno
dec
std
fsubrs
pop
push
leave
push
push
aad
mov
add
push
jp
mov
push
push
add
xor
repz
imul
inc
push
imul
int
add
mov
mov
mov
or
cmovo
jno
xor
rorb
cmp
cmc
mov
sub
fs
pusha
dec
sub
aam
sbb
sub
cmc
repz
mov
dec
data16
lret
inc
jae
sti
jp
mov
and
es
mov
push
pop
fnstenv
push
xacquire
jp
aad
ffreep
mov
mov
outsb
lret
mov
cltd
nop
outsl
adc
sub
cli
adcl
and
je
ljmp
clc
addl
add
inc
pop
js
mov
xlat
test
cmc
adc
jne
sbb
mov
jle
ret
xchg
mov
into
cmp
sbb
scas
ror
loopne
cmpsb
lret
push
shll
jb
xchg
loope
mov
or
lods
mov
dec
insb
mov
insb
rclb
rclb
cmpw
daa
xchg
mov
mov
stos
negb
addl
movsb
ss
mov
cltd
insl
es
addl
mov
sbb
cmc
adc
mov
scas
pop
popa
in
outsl
out
imul
mov
dec
cmp
push
mov
ds
scas
and
adc
push
fidivl
aad
bound
mov
imul
cmc
rclb
push
xor
movsb
sbb
pop
add
ss
lcall
dec
mov
push
loop
push
push
cmp
xor
cmp
add
rcrl
out
mov
es
fidivrl
mov
rorb
jb
jl
outsb
dec
and
jl
jg
mov
out
dec
shlb
push
cmp
dec
pop
pushl
lock
mov
lahf
lea
repz
lahf
das
dec
sbb
loopne
rorl
mov
push
cwtl
cmpsl
rol
mov
sahf
arpl
fdivl
xchg
jne
or
pop
jbe
pop
sbb
sub
jge
mov
aaa
repz
jg
sbbb
notl
outsl
les
fsubrs
or
sub
mull
push
out
dec
sub
pop
repnz
dec
xchg
lds
push
sti
jg
ud1
js
into
inc
jo
dec
pop
je
div
inc
insb
in
adc
mov
lock
out
xor
ret
out
jbe
pop
jb
in
test
cmpsb
sbb
cld
cs
icebp
pop
jo
stc
lret
dec
call
pop
sar
addr16
pusha
and
cmp
add
into
add
bswap
adc
sbb
test
mov
xor
mov
mov
mull
adc
and
push
xlat
push
cmp
cmp
movsl
sbb
pop
out
or
imul
sub
fcomps
hlt
mov
lods
aaa
imulb
push
call
das
add
cmpsl
movsb
dec
out
xor
jle
fdivr
adc
test
and
push
pop
ss
or
lock
gs
bound
pop
jle
push
push
fnstenv
mov
mov
outsl
inc
xchg
aaa
popa
mov
inc
and
sub
adc
fiadds
mov
sbb
ss
in
clc
fdivr
ljmp
add
outsb
mov
iret
adc
jns
aas
jle
iret
or
cmp
and
mov
and
pop
inc
jg
out
jae
rcrl
jp
lahf
adc
push
xchg
aam
mov
jns
out
cmp
cltd
push
cmp
cld
insb
cwtl
shrb
xchg
arpl
lret
pop
test
pusha
into
mov
lahf
jne
and
push
push
clc
xor
mov
jbe
xchg
xchg
push
imul
aas
add
pop
data16
sbb
or
pop
inc
ficomps
push
xor
test
in
xchg
scas
inc
sbb
div
popf
mov
lahf
mov
pop
cmpsl
jb
dec
repnz
mov
fldl2e
add
test
in
lret
xchg
cmp
cmp
cmpsb
adc
clc
push
xlat
lcall
dec
add
loop
xchg
sbb
adc
mov
call
scas
mov
mov
inc
repz
dec
add
cmp
sbb
xor
cwtl
test
mov
adc
jl
dec
mov
popf
out
test
adc
mov
adc
fmul
ret
add
movsl
cmc
jl
mov
jg
ljmp
mov
push
pop
scas
cmp
insl
inc
sbb
pop
jae
cs
inc
out
dec
arpl
and
inc
dec
dec
sbb
loop
pop
testl
loope
icebp
jb
push
mov
jp
add
or
fldpi
lods
push
fnstsw
fdivs
xchg
frstor
mov
dec
jmp
dec
xchg
pop
cld
inc
add
lahf
es
add
mov
sbb
frstor
mov
fdivrs
inc
outsb
int3
lods
xchg
hlt
mov
test
or
mov
dec
jg
daa
add
jmp
sti
and
lods
xor
mov
sbb
fdivrs
aad
mov
jmp
jb
cmpsl
sub
or
sti
mov
cmp
repz
out
aad
repz
cs
add
les
adc
pop
xor
mov
mov
xor
adcb
aaa
push
ret
or
int
xor
nop
inc
or
mov
push
mov
nop
inc
xchg
stos
rcr
and
dec
call
dec
frstor
arpl
mov
mov
mov
adc
lcall
pop
loop
daa
sbb
jp
fnsave
jmp
inc
mov
mov
jg
shl
or
paddsb
sbb
movsb
stos
dec
jmp
arpl
push
cmp
jae
xchg
inc
mov
lea
inc
push
test
shrb
cli
aam
mov
mov
fisttpl
and
std
push
xchg
xor
sub
aaa
mull
fcomps
cs
xchg
pushf
scas
sbb
lret
rolb
ror
repnz
pop
int
push
mov
imul
popa
insl
mov
popf
mov
shrb
mov
jp
imul
mov
ret
mov
enter
pop
adc
psubq
push
cltd
dec
ret
inc
repnz
int3
sbb
push
mov
sbb
sub
sub
pop
outsl
inc
xchg
cmp
jge
repz
mov
incl
out
scas
dec
and
rorb
test
mov
test
sub
imul
add
es
and
sub
cmp
push
dec
sbb
mov
cmpsl
mov
adc
in
push
lea
repnz
jbe
in
xchg
xorb
pop
mov
sub
rcll
xchg
ss
inc
push
les
inc
ret
add
fwait
jg
es
cltd
rorl
in
es
inc
es
or
movsb
jp
rol
mov
mov
adc
mov
sub
and
and
jecxz
adc
pop
mov
sbb
xor
jmp
loope
lds
and
scas
cmp
sub
leave
adc
pop
scas
aad
adcb
loopne
dec
mov
dec
lods
scas
movsb
inc
scas
cmp
add
sub
xor
mov
ja
imul
sbb
inc
add
add
adc
hlt
lret
pushf
xor
push
mov
dec
dec
adc
ljmp
inc
jb
mov
aas
jge
movsl
sbb
dec
bound
loopne
push
push
ja
or
popl
mov
sub
jbe
mov
jb
mov
test
inc
data16
mov
sbb
out
bound
inc
fdivl
xchg
aaa
add
add
imul
jmp
cwtl
jmp
mov
or
pop
ret
push
xchg
push
repnz
lods
stos
pop
scas
dec
in
mov
jge
je
int
cltd
and
pop
pop
jl
push
mov
add
call
push
mov
pop
jl
push
cmpsl
daa
cwtl
xor
dec
aaa
insb
imul
sbb
cmp
pop
insb
pop
mov
stos
ja
rolb
push
or
mov
sbb
divl
shl
dec
xor
mul
enter
jae
push
test
dec
mov
pop
fstpt
inc
dec
sahf
mov
rcrl
movsb
push
jb
data16
iret
ja
dec
sbb
xor
fimull
ret
test
sub
inc
imul
lret
and
xlat
mov
in
enter
jge
lret
and
js
and
scas
inc
aaa
push
ljmp
cmp
add
fiaddl
pop
jg
int
cmpsl
test
and
sbb
lret
jle
aam
insl
mov
mov
cmp
js
sbb
xor
js
add
xor
je
lret
xlat
or
stos
shlb
xchg
xchg
mov
pop
out
xchg
xor
aam
push
sbb
sbb
push
aam
adc
add
outsb
adc
jle
test
or
push
pop
dec
sbb
jne
and
test
xchg
inc
sub
fcomi
pop
and
in
sub
cltd
mov
mov
xor
mov
sbb
xor
add
leave
outsl
push
lret
ficomps
xlat
divl
push
push
rol
mov
and
inc
adcl
adc
sbb
add
pusha
sub
bound
inc
mov
insb
add
and
mov
shlb
jg
stos
repz
sti
or
pop
lret
inc
lods
dec
pop
sbb
repnz
add
or
stos
sbb
push
mov
xchg
sbb
dec
pop
or
xchg
pusha
in
sbb
test
mov
daa
pop
es
mov
pop
movsb
jg
cmp
xor
push
stos
cltd
lcall
scas
adc
notl
sub
push
loope
jno
push
sub
movsl
es
add
fidivs
aam
mov
js
gs
mov
aam
jl
pop
outsb
pop
adc
fmuls
mov
dec
push
jmp
mov
xchg
add
xor
cli
pop
pushf
pop
push
mov
adc
cmc
push
leave
pop
jp
loop
inc
insb
mov
add
stos
xchg
out
rclb
dec
je
les
pop
jl
add
mov
add
outsb
add
jnp
jecxz
add
pop
jne
or
lds
mov
mov
nop
xor
sub
cli
int
call
insb
adc
dec
push
push
aad
dec
lea
mov
fiaddl
jb,pn
mov
sub
or
cmpsl
fldcw
ja
sub
sub
cli
rep
or
testl
int
loop
push
add
sub
sub
mov
xchg
cltd
pusha
insb
dec
xchg
sbb
iret
mov
mov
sub
mov
mov
pop
sbb
jl
popf
and
fisttpll
fildl
and
repnz
xchg
pop
in
and
lea
xchg
xchg
loope
mov
xlat
repnz
bound
subb
aaa
xchg
push
daa
rclb
xor
cmp
sub
leave
in
inc
test
and
js
decb
pop
sbb
or
aad
add
fnstenv
test
xor
hlt
xchg
ss
or
bound
mov
je
mov
xlat
sub
xor
pop
cwtl
rolb
add
push
pop
dec
int3
fidivrs
in
cmpsl
cltd
test
pop
sbb
in
shll
stos
pop
xchg
notb
out
xchg
xor
pop
sub
scas
jae
and
mov
lahf
in
arpl
cltd
jecxz
test
and
hlt
insl
push
shlb
loope
sbb
fistpll
and
ljmp
mov
lods
data16
sub
incl
sub
icebp
xor
loopne
inc
jp
imull
cmc
adc
jp
mov
int
xchg
inc
loop
shrb
leave
out
lods
stc
out
ret
inc
in
add
mov
adc
dec
jb
dec
sbb
repnz
orb
sbb
xlat
xchg
mov
dec
pushf
sbb
add
adc
xlat
xchg
sbb
stos
imul
push
test
mov
mov
pop
inc
push
mov
dec
into
icebp
bound
add
in
pop
sub
and
fs
mov
push
mov
rcl
js
test
call
sub
outsl
call
adc
lret
mov
cwtl
add
aam
popf
jnp
loope
in
insb
in
adc
js
popl
andb
push
ret
xorb
cmpsl
mov
cltd
xchg
mov
ja
ljmp
inc
fsts
pmulhuw
mov
pushf
sbb
xchg
dec
gs
loop
test
stc
leave
or
and
add
outsl
dec
xor
shll
clc
push
lods
jno
pushf
dec
lock
sbb
sbb
add
daa
sbb
add
cmovno
cmp
inc
push
stc
xor
andl
mov
adc
xor
sti
inc
dec
pop
adc
xorl
cmp
sbb
sub
sbb
js
dec
lods
pushaw
cli
les
inc
lock
mov
fsub
jge
jae
dec
mov
mov
mov
fs
outsl
cli
mov
ds
xlat
fldln2
sub
pop
lahf
imul
stc
test
jne
pop
and
fidivrs
fs
test
jp
and
jns
and
ljmp
or
lods
lds
insb
iret
mov
and
shll
arpl
mov
push
in
xorl
and
lret
hlt
sub
fwait
call
lea
xchg
add
or
push
repz
or
or
into
xor
out
das
shll
js
sahf
pop
adcl
jmp
xor
nop
and
sbb
mov
out
movsb
xchg
sbb
mov
mov
cmp
sbb
mov
jle
dec
inc
add
ss
inc
sbb
arpl
dec
fadds
movsb
pop
jp
sbb
push
mov
push
nop
fsub
add
rdtsc
mov
inc
dec
rcl
loopne
scas
add
xor
ljmp
lret
inc
cmc
cmp
pop
push
out
or
call
mov
xor
adc
and
mov
fwait
aam
jno
jno
mov
xor
push
dec
stos
pop
jnp
inc
push
mov
xchg
pop
mov
mov
outsb
imul
xor
cmc
lcall
sbb
push
push
pusha
mov
pop
dec
arpl
adc
pop
add
adc
or
cwtl
lds
je
enter
pop
and
fs
pop
inc
inc
movsl
mov
and
call
in
adc
ljmp
pop
push
push
sti
pop
push
aam
lea
mov
cmpsl
test
in
pushf
pusha
lret
or
mov
mov
cmp
mov
js
fildll
mov
lds
or
clc
push
data16
or
sbb
int
jmp
repnz
lret
xor
jo
bound
daa
ja
pushf
mov
cmc
ja
jg
adc
js
shll
lret
push
or
xor
sub
push
mov
jbe
push
filds
imul
mov
jnp
and
ds
imul
add
ljmp
test
pop
mov
mov
dec
sbb
loop
scas
scas
dec
or
aam
push
fildll
pushf
inc
xchg
bound
mov
push
mov
push
mov
out
into
push
push
sub
mov
mov
stc
in
les
loopne
int
mov
mov
cmc
xor
cld
cmpsl
std
movsl
xchg
adcl
int
pop
add
dec
push
pushf
js
insb
inc
xchg
jmp
sub
mov
cs
scas
loopne
in
out
lea
mov
jge
outsl
je
cmpsb
inc
add
cld
mov
mov
testl
inc
arpl
cwtl
clc
out
jb
fcmovu
adc
mov
mov
or
mov
fildl
data16
jle
test
pop
mov
sbb
std
push
mov
sub
mov
dec
and
in
movsb
push
cvtpi2ps
pop
xor
mov
and
jbe
xchg
cwtl
ja
movsb
movlhps
mov
mov
jo
jae
into
scas
cmp
or
jae
lods
iret
mov
and
add
lock
lods
les
andb
ret
icebp
adc
stc
push
aas
pop
clc
pop
xchg
mov
add
leave
xor
dec
pusha
mov
leave
fisubs
or
sub
fadds
push
jle
xlat
addr16
dec
pop
faddl
and
jl
je
outsb
imul
cmp
pop
mov
xor
lds
gs
mov
inc
test
fisubrs
and
fisubrl
jb
push
outsb
mov
or
xchg
in
in
push
dec
pop
adc
ret
scas
enter
mov
mov
xor
rclb
and
std
adc
sbb
cmpsl
lcall
inc
sahf
xchg
addb
hlt
dec
dec
sub
pop
das
push
jp
dec
call
fldcw
clc
sub
movsb
jecxz
add
xchg
jle
push
test
fldl
sub
sarl
or
mov
push
jno
lock
adc
cmp
enter
gs
pop
imull
cmp
pop
je
movb
lock
add
mov
sbb
aad
negb
jge
inc
mov
dec
mov
pop
ds
mov
push
rcr
into
and
sbb
mov
push
call
out
add
out
sub
or
bound
imul
mov
sub
pop
testb
mov
mov
push
dec
cld
push
lret
pop
aaa
push
repnz
push
test
ret
int
mov
aas
push
in
mov
pusha
xchg
das
cli
xchg
sbb
dec
xchg
aaa
mov
outsl
dec
fstpl
mov
adc
inc
std
mov
fcmovb
ds
mov
orb
add
lcall
fs
mov
sti
and
mov
add
arpl
cmp
dec
xor
cmp
in
ss
out
int3
test
pop
add
outsl
jp
aas
adc
ja
pop
and
mov
sub
popf
ret
mov
int
call
mov
sbb
dec
xlat
ret
aaa
cld
roll
out
push
add
test
loopne
inc
arpl
nop
mov
inc
xchg
mov
adc
bound
and
sub
in
mov
sbb
push
xor
inc
jb
test
jne
cmp
neg
xchg
dec
ror
cmpsb
subb
cwtl
add
xlat
inc
gs
xchg
xchg
sbb
dec
mov
js
xlat
test
xchg
push
add
ljmp
xchg
fwait
ss
pop
stos
or
inc
mul
ja
mov
test
cs
fcomps
in
inc
test
out
cmp
ficoms
pop
imul
mov
lret
sti
jg
xor
jno
fcoms
dec
out
rolb
lret
and
adc
inc
cmp
dec
gs
pusha
mov
xor
movsb
mov
inc
clc
push
out
pop
gs
in
int3
mov
and
test
xor
hlt
leave
iret
inc
andb
cmpps
fmuls
scas
or
outsl
icebp
pop
cltd
xchg
adc
push
cld
mov
cmp
mov
push
jae
repz
dec
call
and
idivl
push
xlat
xchg
mov
cld
int
nop
adc
dec
popa
push
push
shlb
cmc
xor
flds
rol
xchg
fnstsw
int
stc
insb
lret
push
out
fiadds
nop
sbb
ljmp
cmp
xor
repz
mov
add
dec
inc
fsubrl
je
int
mov
fcmovnu
inc
push
movsl
aas
inc
push
repz
pop
sahf
ret
mov
jge
sahf
mull
loop
mov
and
out
addl
addb
clc
jecxz
cld
and
popf
iret
xchg
in
cmp
dec
das
xchg
pushf
cltd
addb
into
pop
push
or
cmpsl
cltd
repz
loopne
sarb
aas
dec
and
sbb
push
jmp
aad
push
cmp
ds
fidivrl
sbb
mov
pop
ljmp
test
mov
sti
push
hlt
jle
sub
xchg
push
iret
lahf
nop
sub
mov
adc
or
cmc
ljmp
sbb
lods
popf
fnstenv
push
jmp
ljmp
test
cmp
add
sub
push
pop
out
jno
sbb
push
test
lock
test
pushf
sub
stos
sub
adc
aas
sbb
push
outsl
icebp
shll
ds
sbb
add
testl
push
adc
sub
test
cmp
stos
inc
jle
push
sbb
stos
inc
and
xor
pop
pop
jae
push
and
mov
stos
xcrypt-ecb
cmpsl
or
aam
gs
pop
pop
mov
pop
jmp
push
fildll
jge
sbb
mov
jl
sarb
lret
imul
push
sarl
out
and
ja
or
mov
cmp
leave
jno
mov
repz
jns
out
cmp
sbb
mov
sub
popa
xor
or
pop
out
clc
in
and
mov
adc
dec
loop
jle
mov
xor
lock
test
adc
and
fcompl
subb
pop
leave
insb
cmpsb
mov
sbb
sub
orl
mov
gs
cmp
jmp
sti
mov
fistpl
daa
cmp
mov
pop
sarb
inc
xchg
pop
mov
in
push
mov
jg
xchg
adcb
mov
jg
pop
and
ret
repnz
leave
sti
push
sbb
in
inc
mov
xchg
push
flds
mov
in
pop
or
loope
xor
xor
insl
mov
pusha
fists
lods
rorl
push
dec
push
arpl
out
divb
mov
ljmp
xchg
clc
cltd
js
iret
sti
lret
dec
xor
dec
cmp
ret
enter
push
xchg
repnz
outsl
mov
mov
lock
mov
mov
sub
xchg
icebp
out
mov
mov
mov
imul
pushf
ret
mov
mov
sub
scas
sub
fmul
shlb
sbb
or
sub
jle
or
push
cmpsb
ss
pop
movsl
dec
xchg
jb
mov
push
cmp
jno
cmp
add
repnz
or
xor
mov
mov
sti
ja
cld
cmp
add
sub
fadds
cmpsb
popa
es
mov
xchg
or
leave
aaa
lock
js
adc
pop
mov
push
aam
sbb
mov
fwait
xor
adc
popf
jl
into
mov
xchg
mov
xchg
cmp
fwait
mov
in
jl
pop
or
xchg
mov
inc
push
insb
and
fstps
std
shl
mov
sub
test
hlt
shrl
loopne
daa
popf
ja
inc
jo
in
daa
cmpsl
jge
pop
shll
pop
stos
push
cmpb
pop
xor
add
and
clc
mov
xor
pop
scas
sbb
sbb
mov
cmp
push
and
je
mov
popf
lcall
push
rcll
jb
push
pop
inc
test
sahf
gs
push
jo
iret
es
lods
mov
mov
push
stos
inc
add
adc
aam
aaa
mov
jns
mov
fwait
mov
loop
sbb
jae
pop
mov
add
xchg
dec
sub
pop
mov
mov
xor
xchg
mov
sbb
mov
mov
lods
out
shlb
adc
js
call
scas
pop
pop
cwtl
push
adc
jle
xchg
mov
jns
inc
rcrb
rorb
fisubl
inc
test
jns
fisttpl
push
adc
aam
arpl
mov
lea
sub
fdivrs
mov
xchg
ds
jmp
in
fadd
es
mov
repz
adc
ljmp
sub
mov
xor
imul
mov
stos
sahf
push
xor
push
xchg
std
sahf
add
and
imul
popf
mov
pop
adc
push
pushf
xor
mov
test
add
jo
or
push
xchg
shrl
mov
mov
mov
dec
xchg
and
in
cmp
insb
mov
push
fwait
jb
lods
cmp
out
rcll
lds
mov
mov
push
push
ja
sbb
xchg
in
test
mov
inc
mov
scas
sub
sti
push
shr
lods
in
push
sti
mov
test
fdivl
stos
cmp
jne
and
push
or
loop
stc
hlt
mov
sahf
shr
lea
test
xchg
insb
push
mov
mov
imul
testb
add
bnd
push
insb
xchg
lahf
mov
mov
push
add
xchg
mov
mov
sbbl
push
lock
sub
push
dec
xchg
ret
add
das
insl
es
imul
mov
mov
mov
mov
ret
mov
loope
fsubl
fimull
orl
sbb
ficomps
imul
in
mov
dec
cmp
xchg
mov
insl
mov
or
lods
insb
cmp
push
jne
ret
mov
fdivp
xor
adc
sbb
mov
jne
xor
clc
insb
cmp
sub
ret
mov
push
stc
setle
dec
shrl
movsb
adc
jle
pop
jno
sahf
jae
lods
jle
fidivrs
inc
push
xchg
xor
daa
cli
and
enter
dec
stc
bound
sub
mov
adc
mov
lods
in
sub
mov
repz
je
or
jae
xor
cmp
dec
clc
std
cmp
mov
push
xor
cld
in
pop
idiv
cmp
popa
mov
sub
sbb
ficoml
xchg
pop
fs
mov
orb
push
nop
sbb
sub
in
inc
cwtl
scas
and
jg
lret
or
ja
add
mov
cmp
pop
ficoms
mov
in
pop
xchg
mov
xchg
data16
cli
mov
sbbl
dec
idiv
loopne
mov
pop
sahf
test
cmpsl
neg
es
jg
sbb
sti
and
or
pop
mov
mov
les
dec
jns
push
xchg
sbb
int
in
out
inc
dec
pop
adc
cmp
jns
jno
in
aas
xchg
mov
shl
push
lods
in
bound
movsb
shr
popa
mov
mov
in
xchg
fimuls
sbb
and
movl
popa
mov
inc
mov
add
sbb
dec
jne
or
cmp
sub
xor
call
je
mov
push
jge
xor
std
daa
jge
popf
fisttpl
fmull
mov
fwait
out
lods
xchg
ss
adc
call
xchg
dec
sub
mov
pop
xor
scas
push
lret
fld
mov
pusha
jbe
andl
int
imul
popf
jo
dec
fyl2x
xor
push
inc
pop
dec
ds
sbb
xchg
sub
push
mov
mov
jb
out
mov
cmc
lock
dec
inc
movb
shl
call
inc
xor
dec
cli
mov
sbb
out
aas
dec
test
out
fndisi(8087
mov
mov
jge
in
aam
imul
lea
pop
aad
or
scas
inc
or
ret
addl
or
mov
sbb
sbb
or
sbb
hlt
shlb
testb
or
fildl
dec
xchg
shl
pusha
pushf
js
shlb
in
jge
test
xlat
pop
add
sub
out
repz
insl
jg
dec
pop
lods
mov
sti
sub
and
push
pop
dec
and
out
rcl
mov
enter
mov
shlb
pop
sbb
test
lock
xchg
xchg
and
inc
out
test
add
lock
in
call
into
jmp
mov
push
add
subb
inc
mov
sti
repz
and
cmp
rcr
insb
idivb
xchg
notb
cmp
xor
inc
push
lret
movsb
insb
jnp
adc
mov
insb
and
pop
xchg
shlb
jne
out
je
lret
pop
mov
repz
mov
insb
jnp
add
push
fisttpll
jne
in
fsubl
dec
data16
insl
push
mov
jge
jae
aaa
xchg
jb
shll
aaa
rcrl
add
pop
je
cmp
adc
in
dec
enter
ljmp
ficompl
into
adc
test
call
repnz
cwtl
xchg
dec
stos
xchg
rclb
pop
fwait
lahf
das
cmpsl
and
es
push
dec
repnz
or
and
cmp
adc
out
jns
sub
xlat
ret
jo
jno
push
dec
jo
fistpll
cmp
mov
and
faddl
jns
adc
pop
pop
jae
bound
mov
dec
hlt
mov
iret
xor
shll
daa
enter
enter
outsb
lock
sbb
fcompp
scas
leave
orl
es
divl
pop
push
xor
loope
insb
call
push
scas
sub
inc
stc
sub
adc
sbb
aaa
fs
add
out
iret
popa
lods
movsb
shrl
in
dec
xchg
pop
sbb
add
xor
jle
cmp
xor
rorl
loope
cmpsl
repz
fldenv
push
adc
testb
loop
popf
fidivrl
ret
dec
in
and
rclb
mov
or
pop
push
clc
mov
inc
or
or
jb
in
data16
in
sbb
cmp
xor
dec
cmpsb
test
xchg
lods
lahf
jl
mov
xchg
ja
imul
lods
lods
push
sub
mov
ficompl
testl
movsl
mov
jg
pop
aam
adc
inc
mov
push
rcrb
stos
inc
pop
call
cmc
sub
or
ljmp
loopne
jp
insl
inc
lcall
sbb
imul
sti
int3
push
jns
sub
xor
mov
insb
mov
dec
dec
jno
sbb
pop
pop
push
lea
mov
xchg
dec
outsl
mov
addr16
xchg
out
push
pop
rorl
sahf
xchg
fists
in
int
or
popa
popa
out
adcb
dec
sub
sub
cmc
sub
cmpb
fcmove
mov
loopne
dec
leave
testl
cmp
movb
insb
push
outsl
fldt
scas
jl
aas
jne
lods
call
sub
bound
jns
inc
add
test
cld
or
inc
jo
mov
xchg
adc
or
enter
mov
loope
add
pop
sbb
mov
push
or
das
ja
adcl
loopne
mov
push
xchg
push
jbe
and
jnp
lahf
mov
ss
xlat
cwtl
repz
cmp
cli
pop
xor
outsb
aas
pop
or
mov
add
jmp
and
inc
cs
stc
fs
sub
cli
stc
scas
cmp
dec
adc
pop
enter
movsb
add
sbb
jno
enter
adc
jne
sub
adc
shlb
test
jge
scas
cmp
nop
pop
xchg
mov
fdivrl
push
aas
cmp
pop
and
outsb
mov
icebp
dec
int
cmpsb
adc
mov
fdivl
call
pop
mov
add
push
cmp
and
loop
movsb
xchg
aas
stos
xchg
pop
js
enter
cli
cmpsb
sub
out
xor
jle
adc
sbb
adc
or
mov
rcr
xchg
add
cmp
mov
inc
gs
imul
mov
pop
arpl
jns
or
push
jns
xor
mov
mov
push
pushf
dec
dec
xchg
cmp
add
in
mov
fistl
or
push
lret
call
das
mov
add
out
cwtl
sub
adc
ja
xor
cmp
bound
mov
les
lea
addb
scas
mov
out
adc
mov
out
imul
or
je
ret
mov
adc
lcall
pop
lcall
push
pop
data16
hlt
out
loopne
cmpsb
mov
fwait
aas
add
mov
leave
xor
and
pop
fucomp
sub
aam
aas
jno
pop
pop
ja
pushl
lds
lret
test
outsl
mov
int
stos
push
add
or
xor
addr16
mov
sbb
pop
or
js
insl
ret
adc
jl
aaa
cli
jne
loope
mov
dec
cmpsb
test
inc
test
push
mov
aad
fsubrl
pusha
pop
cmp
cmp
mov
iret
cmp
mov
push
popa
push
push
iret
pop
rcrb
std
hlt
push
cli
fwait
xchg
or
push
cld
orb
mov
add
xchg
cmp
fcompl
jb
mov
popf
js
jb
add
inc
xchg
in
repz
sub
xor
cs
popf
test
in
fs
inc
jns
in
and
and
andps
sbb
into
and
pop
pop
xchg
jno
inc
mov
inc
ret
rcrb
enter
mov
lret
push
nop
ret
movsl
pop
sbb
pop
pop
pop
jecxz
push
stc
xchg
xchg
fcmovu
xchg
push
push
mov
popf
repnz
cmp
push
adcb
rcrb
pop
mov
ret
lea
lahf
in
and
cmpsb
fdivrl
dec
loop
in
dec
cwtl
in
shrb
pop
or
cmp
sub
xor
mov
lea
cltd
leave
xchg
cwtl
fnstenv
add
scas
cltd
push
or
fmull
push
pop
add
xor
mov
xchg
stos
fnsave
inc
xchg
fisubrs
or
adc
jae
arpl
inc
les
fldcw
hlt
xchg
pop
push
add
outsl
out
repz
pop
roll
adc
inc
clc
aaa
sub
icebp
sbb
out
push
cmp
jo
and
ret
cwtl
fiadds
cmp
rcl
xchg
sbb
or
mov
cld
push
push
gs
jge
jae
out
into
sbbb
add
neg
pop
push
lea
pop
push
xchg
mov
add
dec
mov
fistpll
and
pop
xor
ret
mov
out
pushf
lahf
clc
loop
add
test
jecxz
mov
pop
lea
aas
movsb
cltd
ljmp
int3
dec
xor
xchg
shrl
loopne
dec
and
xchg
pop
xchg
mov
fimull
sub
insb
jg
repz
inc
mov
mov
test
mov
jb
mov
pop
popa
adc
das
sahf
and
sti
dec
cli
ret
pop
inc
jl
add
xchg
sbb
frstor
xchg
jnp
xor
popa
pusha
jle
ficomps
loop
pop
sub
in
jns
dec
xchg
lret
das
les
in
mov
jnp
push
int3
repz
popa
ja
xchg
mov
push
cli
dec
xor
dec
jg
fcomps
mov
jnp
stos
cmovbe
mov
ret
xchg
pusha
es
stc
sbb
xor
cmp
pop
jae
popf
xor
jecxz
outsl
sub
push
pop
mov
fs
ja
lahf
sti
cs
int
or
cmpsb
mov
test
push
mov
ret
push
or
mov
adcb
mov
add
popa
mov
jge
push
hlt
insl
fbstp
sbb
idivl
dec
pop
xchg
mov
insb
push
and
enter
or
bound
mov
sbb
xchg
in
jns
rolb
mov
inc
dec
pop
pop
pop
aaa
sahf
mov
sbb
xor
inc
fwait
aam
push
mov
dec
flds
jns
jmp
push
ja
add
cmp
into
sarl
ljmp
jge
int
fldenv
jnp
pop
in
jecxz
cmp
test
icebp
dec
xchg
lret
aad
or
outsb
sub
out
or
rol
movsl
mov
jo
insb
in
jl
lods
test
pusha
dec
and
jp
fsubs
mov
jmp
stos
int3
jbe
push
orl
daa
jmp
xchg
js
std
lock
out
xchg
sub
jbe
stc
ret
sti
sub
xchg
xchg
or
sub
stc
pop
mov
and
xchg
inc
cmp
popf
push
decb
cmp
scas
jle
aas
lret
add
cmp
pop
inc
in
fs
xchg
fcoms
cmp
mov
cmp
lods
mov
popa
jnp
sbb
xlat
gs
mov
lea
movl
adc
nop
call
fdivrs
inc
jmp
jge
xor
mov
scas
lea
cmp
aad
and
fimuls
adcl
je
daa
push
sahf
add
movsb
xor
das
ret
pop
mov
adc
es
in
dec
or
mov
jge
frstor
repz
cltd
xchg
xchg
out
push
test
pop
nop
into
cmp
jae
shlb
mov
stos
pop
nop
test
repz
xor
xchg
push
mov
popa
xchg
fdivs
aaa
adc
dec
cwtl
cmpl
fwait
and
sahf
pushf
cmp
xchg
or
dec
add
xlat
mov
inc
xor
hlt
into
lahf
daa
fistpll
popf
lret
mov
adc
jbe
mov
add
jne
lcall
or
ja
rcl
adc
inc
push
outsl
xor
cli
test
dec
jno
xor
inc
lods
out
jb
mov
arpl
add
hlt
mov
jl
ljmp
mov
scas
bound
xor
mov
sub
out
lret
xchg
dec
stos
or
and
mov
repnz
xchg
sahf
shrl
cmp
xchg
or
xor
es
sbb
sbbb
lds
xor
imul
mov
and
lods
inc
out
mov
cmp
sti
repnz
shlb
mov
scas
pop
imul
mov
push
inc
xor
sbb
sub
lea
xorl
push
mov
and
test
jno
stc
test
stos
ret
test
sbb
cmpsl
jecxz
xchg
mov
xor
out
dec
dec
jge
test
dec
push
push
xchg
pop
insl
nop
xchg
push
pop
fcoml
xchg
pop
addr16
into
xchg
imul
mov
pop
add
test
xor
xor
push
es
mov
inc
adc
xchg
fstps
dec
cmpsl
and
pop
and
faddl
popa
sub
arpl
mov
or
sti
into
cmpsb
int
cwtl
mov
mov
into
fcomi
mov
fldl
xchg
pop
sbb
cmp
jnp
in
gs
pop
and
mov
dec
pop
and
push
adc
cmp
jae
rcl
jae
and
push
popf
pop
sbb
ret
jl
inc
sub
pop
cmp
and
andl
push
in
jb
das
cmp
dec
xor
lock
dec
sub
test
push
leave
test
inc
dec
add
movsl
outsl
mov
sbb
jae
or
push
mov
lret
movb
mov
popa
hlt
inc
shrl
lret
mov
push
dec
out
enter
mov
jl
test
inc
or
lock
lea
mov
pop
pushf
das
ds
inc
test
inc
dec
popf
push
mov
jmp
jae
adc
cmp
bound
add
cmp
dec
sub
in
lahf
cmp
pop
mov
xlat
or
ja
mov
clc
mov
ret
lds
sar
mov
dec
sbbl
das
and
xor
push
xor
sbb
cmp
fnstenv
in
fstl
std
xor
jp
jno
jne
mov
aas
insb
insl
decl
or
push
scas
or
lcall
or
xchg
ljmp
lods
or
ror
movsl
rol
sahf
jno
lods
iret
xor
cmp
or
push
ds
dec
call
dec
jg
jae
cli
cmp
mov
aas
adc
das
mov
dec
call
cmpsb
rclb
xlat
test
subl
repz
fs
sahf
jecxz
dec
cmp
aad
cmpsb
xchg
mov
out
sahf
sub
mov
insb
sub
jnp
mov
mov
cmc
xor
cmpsl
xlat
mov
jg
popa
scas
lods
adc
mov
rorl
in
lea
scas
pop
dec
or
and
cwtl
mov
inc
hlt
cmp
sar
inc
clc
xchg
xchg
add
pop
push
dec
mov
mov
pusha
sbb
jno
test
clc
std
addl
mov
xor
lret
cmp
ficoms
add
cli
cmc
push
push
cld
jecxz
std
fld
mov
sub
mov
or
into
adc
ljmp
add
sahf
lret
pop
cmp
lret
sbb
cwtl
inc
push
leave
mov
jp,pt
shrl
mov
xlat
je
and
cld
aam
dec
cmp
shrb
pop
xor
aad
mov
shr
pop
sub
inc
mov
movsb
mov
jns
push
scas
add
inc
jge
inc
jmp
mov
pop
sbb
cmpsw
mov
imul
lods
jno
mov
pushf
fsubr
leave
lret
add
sbb
daa
jle
insb
jns
pop
addl
xchg
daa
jno
insb
mov
pusha
bound
enter
lret
dec
repz
lcall
divb
loope
dec
lret
push
pop
and
cmpsl
iret
jge
icebp
sub
imul
arpl
andb
sub
mov
add
sub
add
xor
ja
inc
push
inc
int
cwtl
shlb
cltd
clc
and
cmp
inc
sbb
inc
insl
mov
adc
pop
enter
in
push
push
inc
ret
mov
cmp
sbb
mov
mov
mov
dec
add
jns
ror
xchg
pop
mov
loope
dec
fcoml
out
xor
add
shl
int
jl
hlt
xchg
nop
push
and
ss
repnz
test
std
loop
ficoms
fisubrs
fistpll
and
dec
jmp
notb
les
loope
gs
mov
out
dec
rol
jge
pcmpgtd
pop
and
cmpsl
fldl
xor
bound
pusha
test
inc
mov
lea
add
push
and
and
ja
xor
mov
out
mov
lret
icebp
adc
arpl
cmpsl
mov
out
popf
push
mov
mov
xchg
pop
arpl
mov
aam
outsb
lahf
stc
loop
dec
aad
push
mov
mov
movaps
and
mov
rclb
pmulhw
sar
jmp
mov
imulb
or
jle
sbb
jnp
xor
xor
loop
cmp
jne
xchg
xchg
out
or
call
cmp
mov
mov
and
adc
fcoml
or
mov
lcall
jp
fwait
testl
add
out
shl
adc
or
sbb
push
sarb
xor
inc
push
add
out
addr16
cmp
push
mov
test
cmp
add
leave
out
push
jnp
shlb
xchg
jle
out
push
sub
adc
mov
incb
outsl
ljmp
movsl
mov
push
incl
sub
loop
inc
lock
xchg
mov
mov
cmpl
rcrb
adc
pop
adc
pop
xor
pop
jae
dec
inc
sub
mov
adc
xchg
mov
add
outsb
sbb
arpl
xchg
jno
mov
sbb
push
adc
and
xor
fisubrl
int
jl
lret
inc
xchg
mov
adc
sub
dec
aad
mov
js
push
or
xor
adc
inc
lds
lods
mov
jge
std
or
inc
inc
cmpsl
push
fcom
lods
mov
fdiv
add
add
pop
lret
or
int
fistl
cs
ds
cmp
lds
repz
inc
sbb
sbb
add
jg
dec
in
test
jp
dec
shrl
mov
rdpmc
mov
pop
jae
xchg
sbb
xor
pop
jns
mov
rorb
mov
jae
inc
in
scas
fcomps
jg
add
test
popf
aaa
inc
hlt
inc
sbb
adc
dec
sahf
insb
pop
outsb
mov
pop
out
testl
lock
leave
adc
scas
loopne
or
lcall
cmc
dec
scas
nop
mov
jno
hlt
xchg
jno
dec
add
mov
jmp
mov
jae
adc
iret
sbb
adc
mov
pop
fucomp
adc
cmpb
rorl
push
push
push
out
mov
jnp
inc
mov
mov
jl
and
ss
xor
fstl
or
outsb
fwait
inc
dec
xor
repnz
popf
aas
orl
mov
mov
imul
popa
dec
jl
jp
push
movsb
lods
sub
xchg
push
push
mov
push
sarb
mov
hlt
shl
add
ds
gs
xchg
inc
mov
les
enter
rcr
inc
pop
outsb
add
inc
inc
leave
stos
das
int
pop
mov
adc
jecxz
fbstp
push
sub
addb
aas
push
pop
aas
lahf
mov
data16
jmp
dec
cmpsb
add
sub
rclb
sbb
push
repz
scas
adc
imul
lret
add
stos
inc
adc
cmpsl
cmpsb
mov
pushf
push
or
jle
push
or
and
and
jbe
push
or
fwait
jecxz
shlb
sub
test
mov
jbe
int
cmp
or
test
mov
mov
outsb
dec
ror
sbb
xchg
add
cs
les
cmp
pusha
shrl
loopne
sbb
cli
je
gs
ss
mov
jl
negb
or
push
ds
leave
insb
das
es
icebp
pop
jp
mov
cwtl
pop
inc
mov
pop
xchg
dec
rcll
jg
cli
daa
xchg
mov
rcrb
mov
and
mov
xor
int3
mov
dec
push
subl
es
lock
in
xchg
xchg
jnp
dec
imul
or
jmp
inc
dec
jl
lret
xchg
imul
and
call
popf
jne
outsb
insl
push
xchg
lcall
pop
daa
push
je
or
iret
push
ds
dec
sbb
lds
mov
scas
stos
fs
add
stos
push
pop
mov
pop
push
pop
lods
sub
shl
pop
aaa
jno
pop
outsb
cmp
push
xchg
sbb
mov
fstps
scas
xchg
out
or
fldl
jae
inc
add
and
movsb
mov
test
daa
or
push
out
hlt
pop
daa
fcomps
cmpsb
push
nop
xchg
jl
loopne
fcoms
lcall
fsubrl
adc
jmp
fucomp
sub
jb
add
mov
stos
fldt
push
push
cmp
imul
xchg
mov
pop
mov
xchg
cli
pop
jp
push
inc
scas
cmp
stc
push
xchg
outsb
or
mov
mov
mov
sbb
sbb
pop
inc
icebp
sbb
dec
cmp
in
mov
sub
mov
mov
clc
stos
push
mov
inc
lahf
fbstp
js
pop
cmpsl
or
dec
addr16
or
xor
enter
push
pushf
inc
in
mov
aas
push
stos
push
or
lcall
popf
inc
mov
xor
dec
jg
sbb
les
lcall
add
data16
cmp
add
inc
pop
xchg
les
fcomp
push
add
scas
fdivl
hlt
inc
mov
hlt
aam
inc
insb
dec
or
stc
shlb
sar
sub
rolb
sbb
scas
ja
and
inc
adc
add
loop
and
mov
shlb
push
lret
popf
add
movsb
fcmovnb
push
push
aas
inc
out
push
dec
in
js
ret
xchg
add
xchg
inc
test
mov
decl
out
daa
test
mov
jno
xchg
sub
outsl
loopne
jns
movsl
pusha
repz
movsl
dec
mov
stc
sub
bound
xchg
xchg
ja
mov
adc
ret
ja
sub
xor
cmp
arpl
adc
loop
push
dec
dec
pop
mov
shlb
add
repz
es
pop
stc
jb
xchg
or
mov
std
sti
sub
aas
pop
push
jecxz
or
push
jg
les
loope
bound
push
pop
mov
mov
and
out
adc
push
lret
loop
mov
adc
test
dec
pop
sbb
dec
pop
pop
dec
stos
into
add
dec
js
add
push
or
mov
out
in
inc
je
jmp
shll
adc
cli
cmpb
ss
mov
push
dec
arpl
jle
and
pop
or
clc
jnp
dec
mov
cmp
aad
movsl
mov
add
pop
mov
dec
pop
push
mov
mov
iret
out
jno
jge
into
repnz
push
push
test
dec
outsb
sub
push
push
xor
mov
jmp
xor
cmp
out
popf
ljmp
mov
loop
or
xor
inc
shrb
or
lock
xor
mov
dec
lods
push
push
ret
out
sbb
test
ds
ljmp
xchg
loop
mov
push
sbb
xchg
inc
xchg
jge
les
cmpb
adc
adc
xchg
loopne
ss
shlb
xor
lock
leave
fcoms
push
push
lret
xchg
jae
sbb
xor
mov
jbe
jnp
dec
inc
or
inc
xchg
cld
pushf
mov
mov
push
mov
mov
cmp
xor
movsb
mov
pop
push
cmp
sbb
aad
sbb
add
call
loopne
xor
pop
fwait
jl
xchg
mov
xchg
and
out
out
test
sub
ss
dec
fst
ds
divl
test
push
jo
test
rclb
lds
sbb
jge
sub
pop
cmc
pushl
push
sub
jmp
call
outsl
or
sahf
dec
push
mov
imul
imul
dec
ret
cmp
std
lret
mov
and
mov
jae
pop
not
and
pop
mov
adc
les
shlb
mov
pushf
mov
test
sbb
and
out
xchg
aaa
push
inc
inc
sub
test
ss
ja
or
or
sub
cmp
imul
mov
inc
divb
inc
push
stc
dec
shlb
mov
lods
mov
ret
pusha
xchg
fidivrs
mov
xor
les
add
push
add
int
psubsw
popa
push
jmp
outsb
pop
inc
cmp
inc
sub
fdivrl
cmp
xor
rcll
xchg
xor
xorl
add
jbe
xchg
xor
subb
es
out
sti
jle
jbe
push
or
mov
loopne
int
sahf
mov
aam
fistpl
pushf
mov
xchg
mov
inc
sahf
add
int3
sarl
jg
push
insb
repz
outsb
ficompl
in
lods
adcb
fsubrs
dec
dec
movsb
pop
daa
sub
imul
stc
lock
dec
or
cmp
test
inc
adc
fstpl
cmpl
dec
out
int3
int
adc
lahf
stos
and
pop
lods
lret
dec
mov
inc
add
int3
or
xchg
into
jne
jnp
ja
sbb
inc
mov
fdivrl
outsl
repz
add
or
jmp
mov
insb
cmpb
xchg
mov
sub
lea
and
jge
je
adc
insb
and
dec
fldl
or
shr
adc
fstpt
movsb
les
addl
mov
fsubr
jge
popf
push
sub
out
aaa
hlt
xchg
and
popa
adc
inc
pop
or
dec
or
mov
mov
mov
div
fsubl
movsl
push
movsl
or
dec
inc
xor
movsb
fnstenv
sbb
mov
xlat
mov
int
jbe
sub
fwait
cs
and
iret
mov
lcall
pushf
push
aad
loope
mov
shl
loope
dec
rcr
rcrb
push
add
dec
mov
in
push
mov
dec
pushf
cltd
loope
add
data16
mov
stc
adc
xor
mov
mov
sbb
je
xor
fucomip
icebp
movsb
sti
xlat
sub
mov
clc
ljmp
mov
das
in
lcall
mov
adc
mov
inc
test
mov
ja
and
sbb
xor
and
sbb
fimuls
mov
test
mov
dec
xor
push
xor
cli
jne
inc
push
jb
push
sub
add
dec
sub
bound
jl
xchg
push
in
lods
jnp
imul
test
xor
pop
jl
xor
pop
hlt
mov
pop
jmp
and
sbb
xchg
mov
push
je
pop
xor
mov
inc
lds
pushf
add
pop
pop
or
mov
testb
imul
fcompl
gs
add
add
out
and
filds
pop
push
dec
popf
xorb
hlt
outsb
adc
into
and
sbb
enter
mov
pop
in
cmp
cli
pop
xchg
out
inc
cmpsb
sub
jbe
pop
rcrb
or
xor
inc
mov
aad
int3
cmp
jmp
ffreep
fsubrl
adc
lcall
dec
imul
inc
es
lods
jo
ljmp
cli
dec
mov
or
add
sbb
test
mov
cltd
in
adcb
std
mov
push
mov
aad
shr
std
jo,pn
idiv
xchg
aam
shll
jae
loope
xchg
gs
or
xor
ret
adc
pop
or
xor
push
icebp
mov
jnp
mov
out
insb
push
mov
cld
cld
xor
and
mov
cmp
push
ret
ljmp
lock
add
int
fdiv
nop
push
dec
leave
movsb
mov
cmc
subl
stos
jne
jns
pop
jl
scas
cmpsb
lock
repz
mov
lcall
repnz
cmp
int
aad
push
fs
mov
iret
out
mov
xchg
fsts
push
jg
mov
dec
loop
xor
jmp
xchg
inc
loope
fsubrl
cmpsb
pusha
in
jl
push
cmp
xchg
dec
cli
in
xchg
cmp
in
das
and
xchg
ljmp
push
adc
mov
addr16
scas
data16
adc
gs
out
xchg
jp
aam
arpl
ds
xor
pop
call
mov
push
add
dec
xlat
mov
mov
mov
ret
scas
mov
xor
call
lods
mov
sbb
pop
popa
rorb
or
push
stos
fiadds
aad
in
inc
movsb
in
mov
adc
mov
adc
inc
jge
insl
jmp
hlt
xlat
xchg
or
out
add
mov
fsubl
cmc
out
dec
xchg
and
add
jo
arpl
xchg
fadds
loope
mov
xchg
in
fisubl
sub
cmp
pop
add
or
mov
dec
dec
or
call
movsb
or
movsl
xlat
dec
aaa
lret
aaa
fs
mov
int
pop
int3
jns
adc
scas
xor
popf
sbb
inc
adc
sbb
aas
adc
mov
mov
push
xchg
out
add
xchg
xchg
enter
call
pop
mov
ret
flds
add
je
add
jo
js
sub
std
mov
orb
jno
dec
out
pop
push
jl
cmp
sbb
xor
ret
int3
xchg
push
dec
dec
iret
cmpsb
rol
fsubrl
cmp
xchg
inc
test
sub
mov
enter
loope
lock
pop
sub
or
loopne
fstpt
pop
adc
push
int
sub
fistps
in
rolb
out
lds
lds
daa
cmp
fld
push
inc
jg
xor
pop
jo
mov
das
fucomp
mov
pushl
jnp
stc
push
cmpb
lcall
or
dec
mov
mov
cs
mov
movsb
loopne
shrb
add
popf
dec
ret
dec
mov
mov
jnp
into
or
or
xchg
imul
call
and
sbb
and
jae
pop
jae
push
lret
push
idivb
sbb
daa
in
in
jmp
sbb
mov
xor
sub
pop
stc
mov
push
mov
sub
mov
xchg
jecxz
or
dec
mov
and
cmp
out
notb
adc
xchg
xor
int
arpl
and
fneni(8087
and
sbb
jecxz
jnp
and
lret
add
mov
dec
lods
push
js
or
out
mov
call
xor
shlb
mov
int
mov
inc
popa
ret
sbb
jle
add
out
out
pusha
dec
cwtl
loopne
popf
push
jle
lcall
mov
jbe
test
push
sub
test
lea
add
cwtl
or
push
cmpsb
repnz
rorl
sbb
fdivl
pop
jae
mov
stos
mul
pop
jno
fsubp
xor
push
or
mov
pushf
dec
add
orl
lret
jp
je
rcrb
cmp
sbb
dec
inc
mov
jo
or
sbb
push
jmp
cmp
outsb
ja
ljmp
sub
jg
inc
xor
punpckhbw
pop
test
ss
pushf
lds
mov
pop
shll
or
add
cs
bound
fs
ds
out
xor
dec
popf
clc
cltd
push
aaa
adc
or
xor
nop
cmp
jg
mov
insb
enter
es
or
imul
aam
scas
bnd
inc
sbb
or
add
leave
jmp
data16
call
rolb
gs
jl
gs
cs
pop
cmpsb
jp
lret
jl
enter
inc
xchg
or
lods
insl
lock
cwtl
inc
sub
out
repnz
ret
adcb
sub
rcr
sub
dec
fdiv
dec
cs
mov
jle
mov
lret
sub
addr16
aaa
mov
jb
push
je
and
stos
mov
iret
jnp
xor
push
xor
add
mov
push
mov
stos
loop
and
add
cli
mov
xor
gs
lret
ss
add
repz
test
packssdw
cmp
dec
icebp
adc
loope
push
sbb
and
push
or
sti
push
fisttpl
xor
mov
inc
ret
pop
push
xchg
bound
pop
repz
mov
xor
xor
xor
mov
ljmp
dec
adc
icebp
sub
adc
xor
mov
jg
inc
mov
mov
pop
iret
int3
or
outsl
hlt
xchg
ficoms
mov
push
push
pop
sbb
daa
lret
mov
add
out
mov
repz
idivb
lret
jle
mulb
addb
mov
in
cld
sbb
repz
fsubl
scas
call
xchg
rcrb
dec
mov
mov
mov
add
rorb
aaa
xchg
lock
cli
andb
imul
adc
rolb
jno
lock
or
dec
arpl
std
loope
jns
mov
sbb
sbbl
rcr
mov
orb
jns
cmp
push
pop
jge
dec
add
test
lret
xchg
sub
divl
xlat
mov
in
add
fs
mov
decb
idiv
dec
jl
addr16
mov
adc
and
add
dec
mov
push
fwait
out
mov
adc
mov
jmp
sbb
jmp
lar
jle
lret
stc
fs
cmc
and
ljmp
int3
stos
or
sar
cmpsb
push
dec
scas
dec
shrb
lret
scas
sub
adc
lods
sub
aad
jmp
lock
daa
or
adc
mov
pop
pop
cmp
sbb
mov
mov
imul
sbb
int
mov
in
pop
xchg
mov
xchg
pop
xchg
mov
lods
jecxz
lds
lds
fwait
testl
sahf
andb
mov
jae
jecxz
lret
add
xor
cmp
stos
gs
mov
mov
jecxz
pop
xchg
lcall
xor
ds
lds
ss
addr16
or
adc
jmp
pushf
cltd
lock
aad
mov
sub
das
mov
fsub
dec
xchg
cli
or
sbb
les
jmp
stos
jecxz
adc
add
push
lods
jmp
inc
in
test
cmp
outsl
fldt
or
jg
outsl
xor
sbb
jo
dec
fsubrl
cmp
popa
jbe
and
rclb
les
pop
and
or
xchg
mov
loopne
pop
mov
outsl
dec
or
jae
mov
adc
xor
pop
mov
push
repz
enter
push
add
xor
mov
xor
test
jmp
aas
sarb
clc
mov
cmpsb
ljmp
outsb
das
and
xchg
mulb
and
jae
push
push
test
movsb
xor
cmp
movsb
adc
lea
jae
push
call
mov
cmp
stos
push
arpl
enter
sbb
cli
shr
shll
cltd
ljmp
add
push
and
lds
inc
stc
rorl
or
cmp
jne
popa
adc
jne
int3
mov
or
mov
or
jo
cmp
push
pusha
fistl
adc
sub
sbb
jbe
call
jl
icebp
mov
ljmp
lahf
notl
movsb
popa
in
or
jbe
or
pusha
and
cmp
mov
jnp
fisttpl
jbe
shlb
xor
enter
fdivs
test
push
xchg
inc
cmpsl
fcoms
push
decb
scas
arpl
mov
addl
addl
inc
cmp
sub
addr16
xor
pop
or
xchg
mov
lret
test
pop
sub
fldt
loopne
iret
clc
rorb
xchg
mov
xorb
xchg
stc
fdivl
andl
dec
loop
jns
cmpsb
push
lods
movb
jae
pop
and
scas
mov
sbb
xchg
push
data16
xchg
cmpsl
and
ds
in
mov
cli
lret
sbb
xor
decl
cs
sahf
xchg
inc
dec
imul
punpckldq
pusha
sbb
sub
out
add
fs
jmp
inc
jmp
add
jp
and
pop
mov
in
mov
mov
test
rcll
loop
iret
xor
mov
dec
jbe
xchg
sbb
repnz
inc
push
push
cmp
int
movsl
divl
xchg
jg
es
addl
clc
mov
bswap
into
les
insl
or
xor
xchg
mov
mov
lahf
ret
ror
ljmp
rorl
cmp
pushf
inc
inc
push
or
insb
inc
mov
test
cld
cs
xchg
cmc
mov
add
imul
das
icebp
and
push
inc
lods
mov
mov
scas
jl
fisubl
dec
dec
fsubp
dec
mov
inc
add
sub
xor
clc
movsb
insl
dec
aad
mov
jae
call
dec
test
jmp
jbe
in
test
pop
das
mov
popw
mov
sarl
push
jecxz
setae
ljmp
inc
mov
or
lods
cmp
aas
movsb
cltd
imull
sbb
imul
fbstp
xchg
subl
test
cwtl
mov
insb
or
mov
aaa
mov
add
andl
xor
or
xchg
push
mov
fs
lret
cli
sub
adc
in
or
ret
pop
push
cmp
push
mov
pop
pop
xor
jp
dec
cmp
in
jg
insl
mulb
cltd
ror
and
loop
pusha
adc
push
pop
mov
imul
popf
jmp
daa
push
mov
aaa
loope
jle
sub
dec
push
rcr
add
cltd
xchg
inc
out
out
mov
dec
rcll
mov
sbb
lds
xor
xor
out
aam
out
rcr
adc
or
add
fisubl
rcrb
rcrb
clc
adc
cld
loope
icebp
xlat
jp
dec
stos
dec
testb
add
dec
jno
and
pushw
mov
divb
fcmovu
push
push
mov
stos
jle
out
out
jle
in
movsl
loop
in
insl
inc
clc
lret
mov
aam
cwtl
inc
jmp
hlt
fldenv
in
pop
push
dec
mov
pusha
add
lretw
mov
cwtl
in
outsl
mov
dec
or
fsubrp
fucomp
push
push
xor
les
stc
daa
cli
push
mov
cld
push
push
add
cltd
mov
pop
mov
and
push
lods
mov
ja
or
fisubl
repz
mov
jp
jecxz
scas
ss
or
lret
and
dec
pop
std
jmp
sbb
mov
jg
mov
mov
jns
jno
xchg
pop
fidivrl
mov
fildll
push
flds
popf
add
xchg
leave
es
pop
pop
mov
cld
or
jl
repnz
add
loopne
cmpsl
nop
xchg
pop
sbb
cltd
ret
mov
loop
mov
mov
je
pcmpgtw
out
dec
lds
lds
xchg
lds
addl
in
push
leave
add
shlb
or
pop
and
xor
mov
or
push
add
dec
ss
lds
xchg
test
punpckhbw
popa
das
cmp
insb
lods
adc
outsl
mov
in
dec
cmp
adc
push
xlat
and
pop
adc
jecxz
ret
rclb
sbb
sahf
std
mov
cmp
or
jge
loope
fstpt
gs
mov
pop
imul
pushf
xchg
push
into
xchg
fmull
dec
js
push
pop
adc
add
icebp
adc
aaa
jnp
movsl
or
hlt
das
add
mov
xor
dec
pop
dec
xor
es
xchg
xchg
add
or
cmp
cmp
jo
repnz
jne
fdivrl
in
dec
addl
ss
test
pop
fcompl
int
cmp
cli
outsb
cltd
pop
jbe
sarl
aaa
mov
push
aas
jno
inc
inc
loope
inc
sbb
or
xchg
jb
test
cmp
andl
int3
or
aam
inc
dec
pop
jecxz
ret
or
push
mov
fmul
enter
push
pop
mov
lcall
outsl
sub
xchg
pushf
cld
push
push
scas
mov
push
xor
push
push
pop
out
sbb
mov
sbb
xor
add
or
stos
mov
mov
rorb
push
pop
mov
std
icebp
jnp
add
and
and
jnp
xchg
mov
cmc
mov
lret
xchg
nop
inc
aam
loope
loop
jno
pop
push
mov
loope
test
iret
fnsave
sti
or
jmp
jle
sub
es
mov
scas
fistpll
cmp
mov
je
push
adc
xchg
imul
out
std
clc
fdivrl
cmp
dec
les
adc
sti
xchg
jne
out
roll
inc
sarl
cltd
mov
clc
loope
sti
stc
push
add
popf
mov
fld1
and
in
inc
jle
ja
lahf
and
aam
adc
mov
or
adc
push
push
xor
ss
cmp
add
sbb
add
cmpsl
ljmp
movsb
out
cltd
std
lret
imul
push
mov
in
xor
or
push
xchg
or
scas
mov
andb
xor
sbb
cmp
in
shrl
jae
inc
pushf
ds
cmp
xchg
mov
rol
movsl
repz
imul
dec
cli
jno
jle
push
aad
rcr
pop
int
mov
inc
and
fdivr
xor
pop
test
xor
pop
and
aam
test
dec
pop
aad
addr16
popa
into
xchg
mov
out
in
fstpt
adc
or
test
sbb
ret
pop
dec
mov
mov
xor
jne
mov
int3
jbe
mov
js
dec
mov
ss
or
lret
and
jne
and
outsl
sbb
arpl
jg
in
hlt
les
sti
mov
imul
das
das
dec
in
xor
ja
xchg
inc
xchg
icebp
mov
in
outsl
mov
sub
cmp
mov
insl
cs
scas
jae
popf
and
adc
shll
jb
push
or
mov
arpl
jmp
mov
inc
clc
add
push
dec
repz
sub
cmp
mov
mov
orb
push
pop
in
cmpsb
addr16
mov
jge
call
ja
xor
jbe
cwtl
fld
testb
test
out
hlt
add
scas
or
pop
stc
mov
add
cmpsb
rcl
and
push
fsubrl
or
in
movsl
add
out
xchg
jbe
inc
js
cltd
mov
aad
pop
std
mov
push
scas
and
mov
push
inc
jp
pop
es
scas
insl
lods
ds
test
add
popf
inc
jne
popf
xor
sub
cmp
xchg
pop
jle
push
aaa
xor
lods
mov
lods
in
push
movsl
ret
leave
addr16
mov
sahf
xchg
clc
insb
xchg
fbstp
add
dec
or
data16
es
push
push
jnp
test
sarl
arpl
into
adc
ret
cs
es
push
mov
int3
fimuls
test
jo
cmp
daa
sbb
shlb
xchg
xor
scas
push
fucomi
es
in
call
mov
sub
sub
jb
mov
cwtl
mov
sub
cmp
ret
or
imul
lret
xor
dec
push
lcall
cld
popa
cwtl
sbb
dec
pop
inc
hlt
mov
push
pop
lret
andl
ds
in
out
xor
jbe
scas
das
imul
arpl
jl
mov
xchg
ljmp
lcall
or
cmc
xchg
lods
outsl
aas
push
gs
test
adc
inc
or
sub
pop
inc
sbb
mov
mov
mov
inc
cwtl
adc
jbe
shlb
cmp
push
push
pop
orl
sbb
dec
hlt
insb
pop
das
fcmove
and
xchg
dec
push
pop
out
loopne
andb
inc
subl
cmp
js
push
sti
test
aam
stc
stc
leave
arpl
push
mov
jb
inc
xlat
or
testb
xchg
jecxz
or
jecxz
pop
shll
xor
jb
fnstcw
incl
inc
lock
rcrb
and
dec
mov
xor
int
adc
imul
sarb
jecxz
ljmp
xchg
rcr
pop
push
xor
push
int3
mov
jl
add
cmp
or
and
testb
leave
pop
unpckhps
js
mov
mov
insl
outsl
out
inc
hlt
in
repz
sub
stos
movsl
mov
test
sub
push
mov
cli
sbb
ljmp
mov
out
cmc
enter
jo
sti
arpl
jbe
pusha
cmpsb
jmp
out
jno
adc
add
sub
rorl
pop
hlt
sbb
and
or
jg
adc
insl
and
out
aaa
push
push
pop
shl
bound
lret
sti
or
dec
cmp
xchg
mov
addr16
inc
leave
ret
and
leave
xchg
jg
pop
adc
into
xor
out
pop
clc
adcl
out
cmc
push
int3
sbb
pop
fadds
daa
fstpl
xor
sbb
imul
mov
out
ret
pusha
clc
mov
jmp
mov
out
sbb
out
gs
xor
data16
loopne
pop
xchg
fdivl
jb
fimuls
sbb
and
or
int3
daa
jnp
or
xor
cli
sub
adc
dec
mov
clc
fcoml
xor
aam
and
jnp
outsl
sub
cld
sahf
pop
xor
xor
mov
insl
fnstsw
xlat
fdivr
repnz
push
jo
jle
add
jns
push
lcall
adc
xchg
cmp
sbb
js
cmp
in
dec
outsw
clc
xchg
jp
call
lods
testl
fidivrl
or
add
pop
je
fmul
mov
cmpsb
mov
push
subb
sub
loope
inc
lret
pushf
aad
cli
push
iret
lods
xor
cmc
subl
dec
cmpsb
pop
jae
jecxz
int
pop
sbb
or
inc
inc
mov
loope
pop
fimull
loope
dec
sbb
jo
mov
stc
push
push
inc
xorl
lret
test
xor
mov
adc
sub
fwait
ds
adc
outsl
shll
int
xchg
cli
xor
sbb
push
push
jp
rcr
push
bound
ja
push
in
adc
push
in
mov
test
dec
fsubrs
cltd
jl
sbb
es
mov
jmp
sbb
rcll
loop
ljmp
mov
mov
rcrl
dec
xchg
arpl
fbld
jl
pusha
dec
mov
mov
scas
aas
mov
xchg
mov
repnz
divl
dec
lret
sar
inc
and
popa
aaa
repz
adc
shrw
iret
jl
jp
rorl
sbb
jge
hlt
mov
xchg
cmpb
lret
scas
fwait
lcall
pop
inc
mov
scas
jge
dec
rcr
fcoml
int
mov
les
test
or
mov
insb
mov
cmc
cltd
insb
call
and
stc
cmp
scas
iret
in
add
xor
inc
mov
jo
cs
icebp
clc
shr
fstp
mov
jno
clc
ljmp
push
notl
add
testb
scas
xor
cwtl
add
adc
lods
dec
push
adc
movsb
incl
popa
or
adc
dec
scas
pop
rorl
sarb
inc
mov
xor
xchg
dec
mov
in
sub
or
xchg
push
out
sti
mov
negb
pop
mov
enter
dec
addr16
fldl
orl
push
mov
cmp
add
filds
lret
xchg
jp
mov
xlat
mov
ja
xchg
pop
push
roll
or
lahf
inc
fisttpll
sbb
loopne
shll
idiv
call
int
lds
adc
mov
cmp
mov
mov
shrb
or
xchg
in
les
adc
inc
jl
imul
inc
push
repz
pop
jnp
mov
fbstp
xor
in
in
inc
push
fwait
xchg
pusha
enter
push
and
add
mov
inc
leave
insb
pop
adc
pop
add
mov
ss
adc
int
sub
sbb
mov
fldcw
dec
jo
xor
adc
jnp
mov
out
mov
cmp
and
xor
sub
jno
cmp
adcl
icebp
jg
pop
cwtl
sbb
push
arpl
add
pop
jmp
push
dec
jl
inc
lahf
xor
jo
shl
imul
mov
cmpsl
int
gs
cmp
jl
sub
cmp
cwtl
ret
xchg
adc
mov
imul
pop
fwait
pop
ss
mov
inc
imul
adc
push
scas
adc
mov
xchg
in
in
cs
aad
movsl
stc
pop
stos
out
or
mov
icebp
push
mov
shrl
jae
pop
push
inc
xor
xor
scas
les
popa
cmp
stos
mov
xchg
xor
mov
mov
jns
outsb
imul
pop
pusha
jno
mov
sar
cmc
es
xchg
mov
or
or
mov
in
xor
stos
mov
inc
or
inc
or
stc
ds
loope
imul
push
lods
mov
mov
sbbb
mov
ror
pop
jp
lahf
into
mov
pmulhw
mov
leave
mov
outsb
fnsave
pop
fstl
push
int
xor
inc
out
or
jmp
jle
sub
dec
int3
cmp
xchg
and
mov
and
dec
sbb
rorl
orl
jge
xchg
cli
add
push
mov
aam
cmp
or
aas
jns
icebp
fcompl
out
add
xchg
xor
xchg
lock
xchg
jno
imul
xlat
cltd
mov
mov
cmc
push
adc
leave
sub
fisubl
lcall
mov
mov
mov
fdivs
cmp
dec
bound
or
sbb
stc
js
mov
and
mov
lods
enter
loope
dec
or
mov
push
pop
aam
mov
pop
cmpb
mov
enter
cmpsl
mov
stos
pop
inc
jb
add
mov
add
sub
pop
lea
mov
jo
push
nop
and
idivb
jp
cmpsb
inc
adc
mov
jp
aad
xor
jbe
or
cmp
cmpsb
push
cmpsl
add
xchg
xchg
nop
scas
xchg
mov
fsub
and
push
jg
push
inc
ja
jecxz
movsl
sbb
add
lds
adc
add
cmp
push
insb
stc
icebp
ja
jb
in
out
jl
mov
sub
pop
and
ja
jge
icebp
lock
movsl
or
in
jne
dec
cs
jp
loope
in
cwtl
xor
sti
xrelease
fwait
mov
lahf
mov
and
push
mov
and
lea
push
or
mov
and
add
and
addl
xor
and
mov
mov
push
iret
mov
xor
jb
mov
out
sub
out
mov
cmp
orb
cmp
shrl
xor
pop
fdiv
dec
mov
inc
add
dec
or
jle
and
adc
aas
sbb
test
or
and
inc
lahf
xchg
push
push
inc
in
cmp
pop
adc
jae
int
xchg
into
pop
mov
or
es
mov
ss
cli
sub
mov
jg
les
test
test
fildll
mov
rcll
dec
push
mov
pusha
jo
mov
pop
xchg
aas
push
or
pop
and
cmp
fcmovb
popa
xchg
dec
into
int
insb
mov
jmp
pop
inc
fisubl
loopne
cltd
outsb
and
arpl
orb
dec
mov
ds
xchg
enter
dec
sub
sub
test
xor
sbb
jmp
dec
into
xchg
aad
mov
cmp
inc
mov
xor
push
and
mov
in
xchg
shll
popf
fwait
jo
xorl
and
push
fisttps
push
cmpsl
dec
cmpsl
jb
sti
cmpsl
pop
dec
jl
fs
sub
jl
add
into
fildll
mov
cmp
dec
xchg
fists
mov
in
xchg
cld
rclb
sub
sar
xchg
iret
cmp
or
fs
xchg
idivl
cltd
int
or
je
sub
icebp
sahf
pavgw
pop
out
mov
cmp
push
xchg
fldl
movsl
lods
sti
int3
jg
dec
cmp
dec
jp
cmp
cmpb
jnp
push
xchg
or
inc
jo
push
sbb
or
ja
inc
ljmp
insl
aas
push
xchg
or
leave
mov
daa
daa
daa
mov
outsl
aam
int3
cld
hlt
mov
xor
nop
shr
jbe
movsl
push
cmp
lcall
cmp
sub
fiaddl
cmp
enter
hlt
popf
ret
imul
xchg
xchg
test
loopne
ljmp
fsubrs
pop
std
testb
fidivrl
pop
popf
stos
mov
sbb
sub
outsb
out
pop
mov
mov
add
pop
loop
jbe
loop
scas
mov
xchg
popa
adc
or
adc
leave
test
mov
or
push
movsl
popa
cmc
push
int3
in
cmp
push
cmpb
icebp
arpl
adc
dec
ljmp
jle
jge
sarb
mov
leave
test
cli
mov
leave
mov
adc
push
fimuls
adc
dec
xor
jbe
divb
fwait
ds
popf
jo
movsl
mov
ss
push
sub
sub
pop
mov
dec
mov
mov
mov
dec
out
testl
jle
out
add
mov
nop
push
dec
insl
je
fmulp
xchg
les
insb
int
inc
test
lods
test
cmovns
fwait
cmp
add
cwtl
mov
std
outsl
add
movsb
imul
mov
fildl
mov
repz
sub
mov
lods
xchg
scas
jl
inc
or
pop
sbb
sti
mov
mov
dec
int
clc
clc
outsb
jbe
pop
les
fisttps
cltd
pop
adc
mov
scas
xchg
push
jo
jne
test
leave
shlb
adc
xchg
adc
sub
dec
and
jb,pn
mov
mov
loopne
aam
adc
loop
lock
stc
fstps
shlb
in
mov
pop
fstpl
or
outsl
dec
adc
inc
nop
xchg
into
jmp
dec
sarl
cwtl
xlat
jo
stos
cwtl
in
add
mov
loopne
xchg
in
jle
mov
and
stos
inc
in
mov
lea
mov
pop
dec
adc
lods
xor
std
into
mov
inc
aam
pop
iret
adc
fwait
dec
sarb
and
mov
mov
les
xchg
sbb
cmp
jmp
add
lods
loopne
pop
jmp
jne
cmp
add
or
sub
pushf
nop
not
inc
popa
pop
test
lcall
xor
stos
out
mov
and
xor
ja
clc
ss
mov
outsl
mov
or
test
mov
sarb
cmpsb
cmc
inc
and
jae
xchg
adc
aas
cmp
mov
jmp
add
sub
and
enter
out
orb
xor
int3
rorb
pop
adc
cli
or
mov
or
ljmp
out
outsb
rorl
loop
lahf
pop
sti
push
fildll
dec
inc
es
imul
paddsw
adc
pop
cmp
cmp
out
dec
outsl
adc
sbb
loop
inc
dec
xchg
lret
dec
or
fsts
pop
jb
mov
cmc
ds
mov
xor
sarl
fnsave
sbb
cmp
mov
mov
add
ret
je
mov
lock
mov
mov
lods
or
jmp
adcl
les
sub
push
rcl
inc
xchg
jnp
ljmp
add
fs
mov
push
inc
ret
clc
data16
cs
xchg
roll
icebp
pop
cmpb
push
sbbb
or
and
roll
xchg
mov
fdivl
int3
inc
mov
shrb
push
add
les
mov
fsubr
fsubp
loope
push
mov
mov
clc
stc
pop
iret
mov
push
in
ljmp
call
xchg
aas
into
or
cmp
out
hlt
sbb
lcall
and
dec
push
pop
ds
ficoml
mov
pushf
or
lds
fisubl
movsb
pop
jmp
popf
pushf
sahf
inc
mov
aas
xor
cwtl
aas
cmpb
mov
pushf
xchg
xchg
sub
sub
mov
decb
push
movsl
dec
out
icebp
or
pop
cmc
add
push
pop
popa
lret
enter
lea
fsubs
filds
xor
xchg
das
jl
test
fucomip
adc
and
in
and
dec
inc
mov
mov
mov
lock
pop
hlt
mov
cmc
frstor
sbb
nop
repz
jmp
loope
das
sbb
mov
in
nop
stc
sarb
lahf
mov
int3
aaa
xchg
jg
shlb
addl
push
jl
sti
stos
xor
rorl
sub
jmp
mov
insb
mov
into
sahf
lcall
xchg
mov
sbb
cld
sub
xor
dec
pop
leave
arpl
and
ret
xchg
fadds
inc
lods
int3
leave
cmp
inc
add
ss
cmpsb
cmpsl
addps
popf
mov
scas
and
arpl
stos
add
repz
aad
mov
movsl
leave
jecxz
outsb
sub
mov
xchg
cltd
int
cmp
push
lahf
lds
test
pop
lcall
nop
and
jae
and
popl
test
dec
mov
sbb
pop
cmp
cmp
and
inc
pop
push
arpl
ficompl
add
dec
les
shll
test
sbb
inc
clc
loopne
pop
push
daa
lret
xchg
xor
mov
xor
push
rcrl
scas
out
rcll
ret
xor
arpl
fnstenv
adc
jb
adc
aas
in
pop
jae
inc
jmp
jns
xchg
ret
aas
aas
mov
sbb
sub
push
pop
lret
xchg
shrb
int3
or
sbb
mov
sbb
mov
into
and
outsl
shll
pusha
jnp
mov
loopne
les
insb
test
lret
ss
out
cmc
shlb
dec
adc
out
adc
or
mov
sub
dec
ret
fdivs
dec
jp
incb
inc
int3
outsb
push
pop
jne
mov
testb
call
dec
mov
and
jecxz
pop
es
mov
mov
into
sbb
subl
inc
jecxz
jae
push
mov
xlat
cmp
cmp
xor
cmpb
jae
ljmp
pop
xorl
push
cmp
ret
push
pop
push
cwtl
imul
cs
mov
and
int3
jae
es
cmc
push
xor
or
mov
hlt
dec
cli
cmp
and
jg,pt
lock
xor
lods
arpl
arpl
cmpsb
shlb
fldenv
lahf
push
push
out
push
xchg
xchg
clc
xchg
jp
pop
sbb
scas
lock
mov
cmpsl
pop
mov
scas
cmp
icebp
mov
pop
xor
test
mov
in
mov
cltd
clc
fwait
loopne
loope
mov
dec
jg
dec
mov
xor
ss
sti
xor
or
xor
cmovo
cmp
pop
push
xor
lcall
push
fsubrl
add
out
xor
shlb
in
lret
adc
ss
iret
aam
dec
bound
mov
cmp
fcomip
mov
outsb
xchg
shlb
jmp
sahf
outsl
add
pop
push
filds
xchg
mov
sub
inc
nop
rorl
xchg
imul
adc
cmp
xchg
xchg
arpl
or
psubusb
dec
xchg
movsb
jne
push
enter
or
ljmp
push
xchg
push
jb
adc
mov
rorl
mov
add
lds
xchg
popa
vmovupd
fists
mov
push
popf
loope
mov
inc
xchg
andb
push
sarl
sub
lret
icebp
aad
xor
aaa
int3
stc
add
sub
sbb
jp
dec
sub
dec
in
in
pop
std
sti
test
aaa
ret
ss
sub
add
xor
mov
push
jo
out
inc
rorb
and
add
cltd
ljmp
mov
je
sbb
sbb
mov
pop
xlat
jo
jne
sub
adc
shlb
xor
mov
mov
out
out
popf
xor
imul
fnstcw
xchg
sbb
negl
mov
xchg
loop
push
mov
lret
sub
adc
imul
mov
leave
inc
cli
or
mov
xor
xchg
sub
xchg
out
aas
rcrl
mov
mov
test
jg
dec
out
xor
fidivrs
popa
daa
jb
sbb
rorb
outsl
dec
test
das
or
jg
push
cli
addb
aad
pop
dec
and
or
int3
ffree
aaa
dec
pop
sbb
les
push
inc
icebp
jle
adc
pop
fwait
sbb
jbe
insb
dec
lret
mov
mov
xor
les
outsl
pop
outsb
push
xchg
jge
movsl
sub
clc
jne
clc
pop
push
push
dec
arpl
shlb
inc
popa
pop
push
mov
or
xlat
cmp
lods
popl
vpcomub
outsl
jno
mov
xor
stos
jecxz
ja
out
sbb
sahf
jne
into
orl
loopne
movsl
adc
addr16
or
rcrl
mov
push
imul
mov
pop
jnp
out
adcb
js
jmp
sbb
cmp
aas
dec
jg
or
mov
enter
jne
sarb
loop
adc
sub
ljmp
icebp
arpl
and
hlt
push
cmp
or
mov
mov
jns
pop
sahf
sti
fnstsw
je
shl
jmp
adc
dec
ja
fdiv
dec
sub
icebp
and
xchg
jbe
xchg
and
out
outsb
push
incb
jp
jg
dec
std
mov
push
inc
jg
cmpl
push
push
ds
sub
loope
inc
or
in
clc
dec
pusha
or
test
scas
inc
add
es
stc
mov
out
inc
negb
leave
jne
out
ljmp
cmp
cmp
mov
inc
xchg
push
add
pop
rcll
dec
mov
adc
mov
aad
adc
lahf
int
aas
insb
in
jae
jne
arpl
sti
pop
pop
hlt
test
jbe
push
shll
sbb
jecxz
pop
jmp
pop
mov
adc
iret
push
stc
in
pop
movsl
mov
lock
dec
loop
xlat
push
jae
or
fcompl
jle
stc
test
pop
les
int3
pop
out
call
lea
int3
xor
or
pop
jge
xchg
out
mov
push
hlt
sar
push
icebp
sbb
jne
add
fsubrl
push
mov
rclb
cmp
push
jp
push
mov
jae
push
adc
stc
dec
mov
pop
outsb
ljmp
loopne
and
out
mov
adc
je
adc
mov
sub
pop
pop
sub
push
fucom
jnp
mov
iret
push
das
push
mov
and
outsl
sbb
aad
scas
lods
mov
psrad
mov
or
imul
mov
xchg
and
and
mov
fiadds
in
xor
hlt
hlt
and
lods
aas
clc
pusha
pop
int
gs
in
mov
addr16
repz
loopne
jecxz
inc
push
fisttpll
movsl
aaa
or
clc
pop
and
stos
scas
and
sbb
cmove
fwait
movsl
rclb
jb
pop
dec
call
xor
and
outsb
outsb
mov
jno
cld
insb
adc
les
lods
sbb
fsubrp
orb
lret
notb
xor
sbb
aaa
in
jle
out
add
jbe
mov
cwtl
idiv
cmp
jae,pt
jne
in
inc
mov
inc
push
cmp
xchg
add
lds
ret
mov
pop
xor
jae
fildl
xor
sub
add
aam
xor
jno
inc
or
test
les
es
dec
pop
pop
and
stc
js
mov
imul
daa
sbb
inc
pop
cmpsb
xchg
mov
loop
out
ds
mov
daa
iret
mov
mov
mov
pushl
push
sub
and
sti
scas
add
inc
push
push
int
and
fcompl
je
pushl
pop
xor
sub
nop
xchg
aad
scas
movsl
inc
sub
mov
imul
fidivl
pop
lods
test
adc
xchg
and
fidivl
loop
pop
add
and
shrb
imul
dec
mov
jno
in
xor
xor
jle
hlt
iret
out
sub
stc
jb
adc
addr16
jnp
hlt
jbe
movsb
enter
jbe
test
push
and
mov
mov
lods
negb
nop
fwait
testl
aad
adc
ficomps
adc
jo
inc
fadds
outsb
jmp
add
dec
or
sub
dec
dec
inc
outsl
outsb
mov
pushf
push
xor
or
add
push
sti
push
std
cmc
flds
rol
cmpsl
xchg
shrb
pop
stc
hlt
idivb
rorl
cmp
pop
imul
and
or
mov
xchg
dec
xor
fstl
jge
mov
push
bound
out
aaa
loopne
pop
cltd
adc
or
test
cmp
dec
hlt
xor
sub
addb
push
lahf
xchg
mov
out
dec
cmpsl
fnstcw
mov
xchg
xchg
ja
xor
aaa
movsl
add
and
idiv
add
repz
lea
mov
push
cli
add
shlb
scas
jecxz
flds
adc
adc
dec
xor
mov
sub
test
loop
stos
or
ret
movsb
push
loopne
imull
add
or
mov
call
jg
sbb
imul
or
notl
lock
add
sub
enter
fisubrs
inc
dec
push
mov
aam
int3
pop
adc
idivb
xchg
mov
pop
mov
testb
mov
int3
rorb
dec
std
jnp
pusha
inc
sbb
cmp
xorl
stos
lods
add
test
dec
pop
dec
out
pushf
inc
push
in
xchg
adcb
js
ja
scas
jo
jnp
mov
sahf
icebp
or
nop
stc
test
aam
inc
pop
dec
mov
xchg
push
leave
push
fsubrl
lcall
push
and
mov
inc
mov
popf
xchg
push
jle
imul
iret
lret
add
addr16
mov
cld
adc
in
fnsetpm(287
int3
inc
mov
mov
shrl
outsl
mov
sbb
sub
leave
shll
lods
mov
adc
inc
popa
push
scas
xchg
sbb
ret
pushf
jmp
lcall
add
cmp
jmp
push
imul
pop
mov
lock
test
pop
sub
xor
push
aad
lahf
mov
mov
pop
mov
leave
add
jp
xorb
xor
adc
or
add
insb
in
cmp
es
mov
daa
cld
and
insb
in
aaa
pusha
dec
outsl
fldenv
pop
dec
jg
and
xor
jns
mov
enter
inc
adc
loope
sub
iret
movsl
xchg
sub
sbbl
call
mov
jmp
jnp
xchg
test
scas
fstl
dec
push
mov
lods
sub
orb
cmp
into
lds
xchg
jmp
pop
cltd
aad
cmp
pop
popa
mov
mov
inc
adc
aad
mov
test
mov
aaa
out
jg
mov
and
push
scas
and
pusha
sub
cltd
mull
rorl
inc
mov
lods
cmpsb
adc
inc
fidivs
cld
fbstp
pop
cmp
ds
adc
xlat
mov
test
or
ret
ret
subl
pop
cwtl
gs
out
mov
inc
data16
cmp
inc
sahf
jne
cmp
popf
aad
rcll
jnp
mov
pop
cmp
sub
leave
add
push
xor
push
scas
stos
dec
repnz
xchg
fisttpl
stos
xchg
shr
in
ljmp
mov
dec
cmp
dec
sahf
jne
nop
sub
mov
repz
jns
adc
clc
or
cld
mov
push
cmc
andl
fwait
cmp
bnd
imul
shlb
int3
mov
je
push
jne
xchg
xchg
scas
lea
cmp
adc
jno
mov
mov
cld
xchg
mov
lds
add
cld
add
stc
fadds
bnd
mov
push
negb
fldt
decb
popf
ss
bnd
xchg
in
mov
test
pop
xchg
mov
push
repz
enter
xor
adc
stos
mov
ja
xlat
out
mov
xchg
or
sbb
inc
lahf
insl
hlt
aas
sahf
icebp
and
dec
or
repz
aaa
add
inc
sarb
js
push
jmp
push
pop
repz
xor
sbb
test
dec
shrb
call
mov
push
and
addr16
outsl
mov
je
aam
ds
mov
mov
xchg
push
idiv
mov
rorb
out
movsl
jae
fmull
cltd
sbbl
xor
arpl
push
mov
mov
mov
js
aaa
add
or
orb
sub
sub
inc
push
hlt
or
sahf
pop
xchg
imul
xor
aas
inc
aam
push
ljmp
nop
jge
mov
add
cmp
rep
cmp
push
mov
lret
pop
dec
mov
insl
mov
mov
mov
mov
mov
xchg
push
pop
test
adc
jl
rcrb
inc
je
mov
jnp
lcall
test
jg
hlt
mov
stos
lret
sbb
add
sub
push
xlat
push
xlat
sub
cmpb
xchg
addr16
mov
jae
jns
xchg
adc
push
jl
gs
sbbb
pop
mov
inc
sbb
or
adc
in
js
and
mov
or
adc
int3
shrl
push
fidivs
lcall
xchg
iret
fwait
rcrl
in
inc
push
lock
adcb
lods
lock
sbb
xor
shlb
into
ficompl
dec
stc
push
add
mov
jbe
test
pop
dec
shl
pop
cmp
cmp
sub
add
nop
clc
mov
mov
adc
mov
lret
mov
sbb
xchg
inc
fwait
out
imul
mov
or
cld
fadds
in
daa
push
in
dec
dec
les
pop
xor
mov
sub
bound
jb
repz
loopne
adc
mov
adc
loop
push
rorl
call
loop
jno
sub
sbb
xchg
fimuls
aad
cmp
push
cmp
mov
push
jge
fdiv
push
add
mov
lods
jmp
or
cmp
ret
enter
inc
push
mov
cmpps
test
mov
push
jg
repz
lss
jno
mov
inc
pop
icebp
daa
cs
pop
sti
call
adc
jecxz
fsts
cmpsl
xor
mov
aad
stos
cmc
mov
push
in
mov
fwait
loopne
jae
or
bound
arpl
inc
jmp
mov
xchg
icebp
push
jmp
psrlq
jmp
xor
cmc
popa
mov
dec
loopne
shl
adc
cmpsl
push
add
ror
sub
cs
ret
push
icebp
pop
dec
jge
mov
mov
cmpsl
pop
test
ljmp
mov
shlb
aam
mov
bound
outsl
nop
push
dec
and
ret
ljmp
rcll
jne
ret
mov
pusha
fisubs
bound
scas
inc
cmpsl
dec
movsl
jmp
push
cmpsb
insl
or
ljmp
jnp
push
mov
push
add
inc
test
es
xor
test
andl
aam
ret
mov
pusha
pop
adc
shlb
test
fs
jg
ja
mov
in
and
popf
cmpsl
xor
and
lcall
aad
jo
inc
cmp
std
leave
vmread
jno
movsl
fisttpll
sti
push
mov
lcall
mov
mov
cmp
in
jp
addb
bound
mov
or
add
jmp
hlt
dec
and
and
push
pushf
imulb
inc
cwtl
shl
movsb
xor
lret
xor
mul
out
scas
inc
xchg
cs
test
xchg
fistps
cmp
mov
sbb
jbe
fidivrs
in
inc
pop
stos
cwtl
sbb
cwtl
push
repz
leave
push
jnp
push
push
aad
fcmovb
mov
test
lds
sub
sbbl
pusha
pop
push
imul
push
jns
inc
push
jbe
xchg
or
in
and
fcmovne
cmpsl
push
andw
mov
or
xchg
stos
mov
mov
add
scas
dec
rcrb
sub
jae
and
and
inc
inc
out
and
lret
and
inc
cmp
outsl
mov
sub
fmull
adc
imul
xchg
or
popa
aaa
sbb
out
pop
pop
sbb
movsl
mov
xchg
call
lods
push
jb
add
ja
and
jle
test
and
addr16
ljmp
cmp
pop
add
in
mov
fists
inc
xchg
inc
mov
out
mov
iret
faddl
sub
sub
push
jle
xchg
push
mov
pop
adc
sub
xchg
and
push
sub
iret
push
loopne
clc
push
ja
jg
inc
add
push
lock
mov
xchg
and
dec
arpl
shrb
idivb
jecxz
popa
in
push
scas
pop
pop
sar
xchg
pop
out
jp
imul
test
xlat
mov
adc
js
ljmp
sub
cmpl
gs
mov
jl
and
daa
mov
and
xor
cmpsb
sub
sahf
dec
push
xlat
mov
arpl
lea
jb
sbb
dec
dec
push
fnsave
insb
push
adc
or
or
jl
sub
test
inc
aaa
insb
enter
arpl
dec
and
and
lods
out
add
aam
and
int3
test
adc
mov
mov
sti
cltd
cmp
jge
xor
pusha
jnp
fistpl
sub
in
push
int3
lldt
push
loop
xor
and
mov
xor
jecxz
pop
pop
and
mov
scas
stos
ja
stc
xor
mov
xor
sub
cwtl
psrlq
xchg
test
and
lret
jle
and
mov
scas
add
xchg
ret
fsubr
lret
aam
or
pop
xor
mov
outsb
addr16
add
push
mov
and
fisubrs
aas
sbb
dec
movsb
mov
mov
sbb
xor
pop
addr16
icebp
sbb
outsl
mov
pop
push
xchg
das
arpl
jnp
pop
jmp
js
cmpl
or
loop
cli
dec
and
fxch
repnz
sarb
jo
imul
push
cmovns
shll
add
adc
jnp
or
inc
xchg
rorb
icebp
sbb
rcrl
sbb
inc
lods
mov
jno
loopne
xchg
mov
stos
test
or
xor
sbb
in
jae
add
cmp
mov
mov
shlb
or
pop
pop
or
lret
fisubrs
shlb
rolb
mov
mov
pusha
dec
adc
scas
xor
loop
cmp
fsubs
fcomi
push
sbb
sub
cmp
icebp
lret
rcrb
lret
mov
rclb
clc
dec
bound
out
sub
les
and
and
fistl
fiadds
sub
mov
and
adc
int3
iret
mov
clc
and
mov
xchg
pop
lcall
daa
addr16
cs
sub
scas
enter
mov
mov
aas
int3
pop
rcll
or
pop
mov
test
push
outsl
mov
add
hlt
jbe
fiaddl
xchg
scas
loope
lret
or
push
jno
test
or
stos
icebp
cwtl
xorb
inc
and
jecxz
test
paddsw
imul
jp
xor
pop
stc
ja
aaa
push
cld
jb
jmp
arpl
int3
leave
lock
jno
dec
or
in
cmp
xchg
imul
push
sub
insb
nop
pop
pop
cld
cwtl
inc
pop
xor
dec
pop
aaa
and
xorb
sbb
call
dec
into
pop
mov
cltd
push
fwait
lds
gs
arpl
inc
push
sbb
sub
ss
je
sarl
outsl
loope
loopne
dec
and
jg
nop
cmp
sub
ljmp
stos
mov
stos
xor
sub
pop
faddp
clc
sub
xor
scas
insl
ret
ss
jle
lret
sarb
jns
enter
push
mov
mov
xchg
jb
xchg
pop
cmp
cli
pop
xchg
gs
stos
mov
sub
js
mov
repz
les
test
and
insb
and
jb
out
or
fdivrl
out
pop
ja
mov
jp
xchg
jb
mov
jbe
and
adc
push
in
movsl
cwtl
push
mov
jecxz
add
adc
and
inc
jnp
dec
subl
xchg
inc
push
adc
adcb
pop
cmp
aas
lret
jg
scas
out
xchg
out
mov
xlat
sbb
loope
add
sub
push
mov
xor
jbe
or
stos
push
push
call
add
aad
cli
jbe
xor
fists
xchg
lods
mov
mov
mov
jne
sub
in
dec
fisubrs
xchg
pushf
xchg
adc
xchg
mov
xor
fs
jne
xor
pop
rol
into
aam
or
push
in
in
sub
mov
enter
inc
push
out
subl
jp
pushl
inc
and
cmp
xor
jmp
pushf
cmp
xchg
xor
into
repnz
scas
push
out
jae
js
bound
jl
xor
cmp
pop
pop
jbe
ret
cmpsb
mov
sbb
hlt
mov
inc
add
xchg
data16
bound
lds
jge
arpl
mov
imul
pop
push
in
add
add
jmp
nop
test
jmp
int
jbe
dec
dec
inc
repnz
inc
fiadds
pop
int
jbe
mov
mov
ret
imul
mov
mov
movsl
sub
stc
push
das
mov
adc
loopne
add
fcmovnu
repz
pop
pop
push
cmp
pop
loope
aam
pop
mov
cmp
and
lock
mov
fstps
adc
mov
and
lret
or
test
xor
dec
sahf
je
inc
in
jecxz
xor
jb
shrb
hlt
and
add
sub
call
out
xor
mov
lret
out
dec
aaa
mov
lods
popf
negl
xchg
inc
xor
sub
out
gs
push
hlt
dec
xor
loope
stos
jae
push
add
pop
dec
push
jge
cli
push
cmp
mov
pop
inc
add
fnstenv
je
mov
je
dec
mov
inc
inc
subb
dec
mov
add
xor
mov
int3
aas
mov
ficoms
cmp
xchg
jge
jns
lret
and
xor
icebp
lret
mov
fwait
leave
cmc
jnp
and
add
int3
fldt
pop
add
mov
xchg
jl
and
mov
jl
or
mov
imul
xchg
cmpsb
jg
dec
push
sbb
loopne
mov
add
cmp
xor
inc
mov
and
loopne
mov
sarb
loope
mov
cmp
loopne
lahf
test
hlt
out
dec
xor
outsl
test
repnz
xor
add
xchg
and
leave
mov
into
je
add
les
mov
mov
das
in
add
or
out
or
ret
arpl
pop
mov
pop
stos
xor
and
aas
cld
sbb
jae
mov
arpl
jg
loope,pt
sti
pop
test
ret
dec
dec
fyl2xp1
dec
push
add
push
scas
cmc
pop
addr16
pop
dec
incl
xor
nop
xchg
cmp
lods
je
shll
insb
mov
lcall
jo
lahf
dec
fildll
fcompl
xchg
call
sbb
outsb
and
shl
push
jg
mov
push
mov
xchg
or
in
sbb
imul
out
insb
pop
mov
add
mov
fistps
sti
lock
mov
jo
cmp
and
shl
add
in
into
cmpsb
add
or
fimuls
xor
sub
adc
jnp
mov
mov
sbb
fsub
out
or
call
sarl
mov
jno
shrl
shlb
into
push
in
sub
jno
insl
jmp
mov
jl
shrb
hlt
adc
pop
push
aaa
inc
movsl
xchg
icebp
aam
xor
cmpsl
in
in
arpl
cmp
out
dec
xor
xorl
cs
adc
or
push
fdivs
into
inc
sahf
mov
or
mov
and
push
push
fldcw
jmp
dec
mov
mov
jb
adc
sub
add
dec
add
pop
xor
sarb
mov
mov
xchg
sbb
mov
incb
into
adc
mov
inc
mov
xchg
adc
sbb
jns
pop
mov
dec
daa
mov
sbb
inc
adc
xor
pop
jmp
dec
call
shll
inc
movsb
popf
std
xor
std
lret
fs
push
cmpsl
rol
mov
test
dec
mov
jo,pt
mov
arpl
stos
jecxz
sub
imul
test
mov
ret
push
sub
sahf
mov
out
ret
or
jns
fsubs
jg
test
lcall
dec
js
mov
dec
fsubp
xor
pop
or
pop
add
cmp
mov
ret
shr
cmp
sbb
leave
mov
stos
ljmp
sbb
xor
dec
xchg
aas
mov
and
pop
jns
std
popa
inc
xchg
xor
xchg
test
mov
test
or
add
aam
std
dec
scas
out
mov
push
sub
sbb
mov
cs
subb
fcmovne
hlt
scas
pop
rep
repz
int3
mov
aam
sub
sbb
call
cmp
daa
pop
mov
jb
in
test
inc
mov
push
push
int
out
mov
fmull
popf
outsl
sub
push
mov
lds
int3
out
stos
ja
inc
popa
push
es
sbb
pop
mov
cmp
inc
push
sbb
or
stc
das
and
lret
pop
sub
sub
cmp
sbb
std
or
clc
stos
adc
inc
push
inc
int
loope
in
sti
dec
add
inc
cs
lods
add
fisubl
xor
hlt
and
xor
mov
into
inc
and
fldcw
mov
mov
cmpb
fdivp
pop
cmpsl
ss
push
mov
int3
mov
xor
push
jecxz
stc
mov
into
jne
sahf
pop
mov
adc
push
push
and
pusha
mov
decl
shrl
mov
sub
in
icebp
int3
test
xor
lds
mov
inc
jecxz
push
jl
push
add
lret
das
movsb
or
cmpsb
testb
shll
or
repnz
mov
ficoml
mov
and
clc
bound
mov
xchg
sub
adc
cmp
jne
cs
push
pop
cmp
lret
out
mov
xchg
sbb
inc
jo
sbb
adc
jp
inc
out
xchg
dec
enter
fidivrs
mov
pop
into
or
stos
and
jo
xor
xchg
adc
out
xchg
jecxz
sub
jb
movsb
roll
inc
std
pop
push
lea
rol
cmpl
lock
std
shlb
popa
jecxz
mov
sarl
sub
ss
mov
jns
or
aam
push
and
push
ljmp
cltd
adc
cmp
inc
xlat
test
xor
rcl
lods
add
arpl
loope
mov
sbb
cmpsl
jl
add
mov
xchg
cwtl
and
xor
pop
pusha
adc
scas
push
add
inc
int3
lods
push
dec
sbb
aam
xchg
loopne
cli
mov
arpl
mov
shll
mov
das
dec
cwtl
push
pop
push
inc
lret
jae
jg
cmpsb
sbb
lds
pop
loop
cmpsb
jno
insb
inc
jl
sub
push
ss
shrl
cli
sbb
adc
mov
and
adc
xchg
loopne
out
popa
sbb
arpl
fdivr
push
das
in
push
test
inc
mov
je
push
cmp
enter
jb
mov
ljmp
jns
lods
jl
inc
add
ljmp
ss
dec
ja
adc
sbb
pop
mov
aad
iret
sti
push
mov
lods
mov
jbe
add
ss
cmpsb
rol
cmp
mov
cmpsl
jl
sub
cmp
nop
daa
cmp
and
lock
jnp
mov
subb
rolb
repz
and
stos
sub
inc
ja
sbb
test
inc
inc
xchg
psubq
andl
push
pop
jns
jmp
lods
mov
mov
int3
cmpsl
subb
scas
mov
test
or
and
or
sub
data16
lea
decb
das
ret
mov
cli
mov
xor
xor
sbb
jge
inc
and
push
cld
mov
dec
mov
cmp
jo
cmp
lock
cmp
mov
imull
mov
sbb
cmovge
aam
sti
and
cs
jne
loope
xchg
cmpsl
aad
add
mov
inc
sahf
jne
mov
inc
popa
adc
rolb
push
imul
sbb
adc
mov
jge
sub
adc
movsl
ret
shrl
mov
popf
mov
mov
mov
mov
mov
iret
mov
sub
xchg
sbb
outsb
mov
jns
pop
and
push
sub
jbe
test
pushf
pop
mov
cwtl
adc
xor
out
jle
mov
cs
inc
jbe
insb
mov
or
cmpsb
pop
lock
mov
xchg
mov
mov
mov
rclb
adc
jecxz
ss
das
pusha
imul
stos
js
leave
aas
into
push
inc
and
push
sub
loope
dec
jns
fwait
inc
and
add
fisubl
jnp
dec
into
pop
mov
aam
cmp
lahf
andl
inc
das
jne
inc
dec
popf
je
inc
scas
loop
cwtl
xchg
mov
jle
test
xlat
aad
pop
cmc
outsb
cmp
adc
pop
sbb
repz
fldenv
fnsave
and
sarb
add
jmp
sbbb
mov
cmp
stos
push
pop
mov
xor
ds
popa
push
mov
cmp
into
ss
or
test
add
pop
sub
mov
pop
int3
adc
dec
adc
add
xor
pop
sbb
loope
xchg
sbb
test
int3
lock
andl
lcall
je
gs
dec
and
call
xor
mov
loopne
nop
push
test
xchg
xchg
xchg
ljmp
movsb
mov
pop
jle
and
push
or
scas
jb
or
xchg
shrb
dec
pop
in
sub
adc
stos
cmpsb
mov
sbb
in
dec
mov
insb
js
cmp
adc
push
testb
dec
cmp
xchg
mov
or
fwait
push
out
int3
test
out
cmpl
aam
mov
jge
repnz
ljmp
int
fadd
mov
outsb
jg
sbb
mov
mov
lcall
cmp
sub
jle
into
cmp
inc
outsb
sbb
imul
addr16
mov
lcall
jmp
jmp
inc
cmpsl
push
jecxz
inc
mov
shll
adc
pop
out
bound
sub
rcr
jae
in
insl
cmpsl
out
add
sub
sub
jb
outsb
sbb
xor
jecxz
insb
cmp
in
xchg
adc
adc
jg
xchg
imul
mov
add
cmp
inc
movsl
in
test
cmc
mov
scas
movl
lret
stos
jmp
test
addb
adc
test
lods
or
mov
jmp
mov
adc
fmull
rcrl
sub
xor
adc
iret
cltd
xor
pop
mov
out
ljmp
les
sbb
lods
jg
xchg
xchg
pop
add
mov
cmpsb
mov
pop
add
xor
inc
mov
sbb
outsl
cmpsl
and
pop
and
pop
mov
test
lods
add
test
mov
aaa
dec
insb
out
ja
fbstp
sbb
sbb
jne
pop
mov
mov
jge
das
sbb
and
and
sbb
dec
push
inc
loope
mov
ja
inc
inc
int3
pcmpeqb
sub
sbb
pop
adc
or
popf
imul
int
je
adc
lcall
mov
in
inc
xor
aam
outsb
loopne
pop
ss
push
leave
sahf
leave
imul
test
ljmp
testl
aad
inc
xchg
sub
cmp
and
lret
push
adcl
and
gs
inc
in
test
pop
and
in
pop
xor
xchg
pop
push
xor
mov
ja
test
out
imul
in
jg
and
insb
leave
loope
cmpb
or
ja
fdivl
in
or
adc
int3
cmpsb
dec
shrb
mov
clc
and
mov
mov
rorb
mov
sbb
popf
addr16
lock
stos
aam
addr16
xchg
sub
jmp
in
cld
pop
mov
xchg
pop
lods
fs
ja
pushl
mov
push
cmpsb
xor
sahf
lea
testl
gs
jmp
lds
cli
test
aaa
popf
jecxz
ds
loope
jecxz
popf
aad
clc
mov
ss
enter
jmp
out
pop
mov
mov
jg
scas
fstpt
and
leave
push
loopne
dec
out
xor
sbb
cmp
inc
push
mov
call
pop
add
sbb
movsb
ja
ljmp
mov
xor
out
sbb
cwtl
jae
outsl
mov
lods
and
lcallw
loopne
inc
xor
mov
pop
nop
in
mov
ds
outsb
outsb
sbb
cmpsl
sub
jmp
sub
mov
push
push
pop
inc
stos
sub
adc
xchg
push
pop
mov
jnp
cmp
mov
insl
sbb
pusha
stos
mov
jns
adc
nop
jp
pop
inc
stos
movsb
test
fisttps
or
inc
fisubrs
sbb
fs
outsl
sub
cmc
dec
ret
add
and
mov
dec
aad
jp
insl
inc
cmpsb
out
jae
lods
dec
add
adc
or
jge
adc
push
sbb
sbb
inc
and
push
loopne
clc
mov
push
imul
cmpsb
stc
leave
and
or
enter
mov
and
jge
ret
inc
mov
xor
mov
mov
pop
in
ss
or
mov
and
in
pop
loope
and
or
std
outsb
mov
repz
pop
jne
scas
inc
mov
xchg
adc
fwait
es
daa
cmp
and
jb
mov
jb
jge
in
mov
push
cmpsb
pop
push
pop
xor
sub
rolb
xor
ds
test
aam
call
jns
xor
aaa
out
jns
shrl
sbb
add
add
push
xchg
jge
aad
mov
inc
dec
mov
sahf
scas
fldt
mov
add
xchg
push
mov
xor
leave
data16
sbb
pusha
aam
aaa
add
and
loopne
bound
int
pop
push
cmp
add
lods
push
cmp
xchg
daa
sub
mov
pop
neg
cmp
mov
mov
out
mov
fisttpl
add
adc
test
test
adc
sti
push
push
push
flds
es
mov
jno
leave
and
mov
cs
jbe
nop
or
lea
mov
inc
sub
inc
pop
loopne,pt
jnp
inc
cmc
int
popa
sub
cmp
adc
out
mov
xchg
daa
cmp
adc
mov
dec
insb
popf
push
push
adc
cld
dec
lods
cmp
or
clc
and
push
pusha
or
jl
in
jge
sub
ss
je
mov
insb
mov
in
xchg
push
jno
ret
xor
dec
pop
loope
jle
and
out
repz
mov
inc
sbb
push
ds
dec
or
add
subl
popa
aam
mov
jnp
mov
leave
mov
xchg
and
lret
push
cmovbe
push
xchg
xchg
ficoms
cwtl
les
mov
xchg
or
imulb
fimull
lods
xorl
xchg
setne
jmp
int
ja
cmp
test
add
sub
arpl
inc
lock
arpl
cltd
push
xor
push
adc
push
ljmp
push
mov
aad
les
sub
jecxz
mov
inc
xchg
cmp
mov
mov
stos
addr16
mov
lea
and
fwait
sub
or
mov
inc
pop
xor
imul
xchg
mov
pop
arpl
push
pop
hlt
lods
jmp
mov
ljmp
cltd
push
add
or
sbb
mov
and
xor
xor
es
push
mov
out
outsl
dec
fdivrs
out
jle
cmp
dec
inc
out
mov
xchg
xor
push
shll
pusha
clc
or
jl
push
dec
pop
movsl
inc
add
out
dec
cmp
es
daa
es
call
pop
xchg
ror
lock
imul
inc
xchg
adc
jle
or
mov
adc
shrb
inc
clc
xor
mov
sbb
fcmovnb
cmpsb
mov
jne
jne
arpl
mov
cmpsl
mov
outsb
inc
std
pop
cmpsb
int3
dec
xorb
dec
ret
popa
fiaddl
ret
ficoms
add
pop
cwtl
and
jl
popf
leave
jecxz
push
stc
dec
mov
lods
adc
dec
cmp
xchg
mov
testb
daa
and
pop
jmp
pop
ds
mov
push
aas
dec
fcoml
scas
or
hlt
fmuls
out
mov
icebp
xor
lds
xchg
adc
popf
in
mov
jp
inc
aaa
les
jp
jp
cmpsb
mov
pop
dec
cmpsl
in
lret
fcompl
mov
scas
adc
or
xor
xor
xchg
out
pusha
fcmovnu
mul
mov
imul
shll
neg
lret
mov
jg
mov
cmp
lret
dec
jne
push
enter
pop
fwait
jmp
push
pop
inc
int
jns
lods
repnz
jae
sahf
pop
ret
jmp
xchg
xchg
sbb
xchg
jp
or
cmp
inc
pop
test
push
js
pop
loop
out
test
mov
cs
bound
and
adc
js
sbb
xchg
and
in
inc
mov
lret
test
cltd
pop
addr16
xor
test
test
push
mov
sub
pop
dec
ficoml
adc
fcomps
es
pop
imul
or
sub
mov
mov
pop
jp
sub
xchg
or
gs
sbbl
mov
sbb
inc
in
stc
xchg
inc
out
scas
push
aam
subl
dec
js
cmc
ss
and
repnz
into
mov
fistpll
or
add
jns
xor
pushf
sub
mov
mov
lret
rorb
pop
loopne
xchg
jae
jp
mov
sti
adc
in
xchg
xor
add
add
add
jg
push
xchg
js
push
dec
xchg
sbb
imul
add
cmpsb
aas
stos
mov
cmpsl
mov
ds
cmp
mov
loope
pop
ficoms
xchg
adcb
es
hlt
orl
mov
js
test
mov
scas
dec
xchg
addr16
popa
movsb
je
sbb
leave
faddl
or
cld
cld
shlb
icebp
add
popa
callw
cmc
mov
loop
cmp
mov
mov
cwtl
imull
jg
sti
jb
scas
push
mov
sbb
add
jbe
lcall
jbe
arpl
cmp
insl
add
sbb
pop
lods
stc
cmpb
data16
cltd
push
movsl
out
add
out
into
mov
jnp
adc
push
loop
cmp
and
out
je
popf
lret
addl
vmwrite
dec
cmp
xor
js
push
mov
aad
mov
iret
subl
mov
rorb
rcrl
dec
add
push
sbb
nop
sbb
js
in
or
fistpl
fistpll
adc
cmpsb
cli
sti
gs
in
fcmovbe
xchg
xor
test
push
inc
or
fdivrs
ljmp
cmp
clc
and
dec
scas
add
inc
out
fwait
je
push
xchg
jle
push
mov
cmp
into
pushf
and
das
pop
cmp
inc
in
arpl
repnz
cmp
test
insl
mov
mov
std
outsb
jecxz
sub
fimuls
jbe
cmp
dec
mov
clc
dec
aas
adc
loopne,pn
inc
jnp
les
cli
jo
dec
fmull
xchg
jl
loop
mov
je
popf
dec
rcrl
xor
fsqrt
fucomp
push
test
pop
aam
movsb
frstor
jg
xchg
jl
pop
pop
fiaddl
xchg
movsl
test
ret
cs
sub
or
cmpsl
cs
rol
or
imul
mov
cmc
lods
enter
xor
inc
cmp
sub
arpl
rcl
push
loope
arpl
test
pusha
insb
push
rdtsc
lcall
loop
mov
lcall
lods
push
aas
mov
and
fildll
jne
iret
ret
popf
decl
lret
ljmp
inc
adc
mov
xchg
stc
sbb
xor
mov
pop
cmpb
ficoms
aam
ja,pn
out
imul
xchg
cmpsb
lcall
lods
pop
aam
push
sbb
mov
push
stc
xor
ficoms
adc
push
sbb
das
adcl
lods
outsl
fwait
inc
lock
dec
sub
pop
xchg
cwtl
dec
sarb
mov
xchg
pop
leave
xor
adc
ja
cmpsb
into
imul
out
test
inc
loop
pop
mov
mov
stc
push
imul
popf
rcl
addr16
add
mov
pop
sub
add
fildll
aam
clc
cmpsl
push
mov
scas
mov
popf
jnp
into
xchg
pop
sti
mov
xchg
or
mov
jb
push
mov
and
mov
lret
bound
movnti
fcomp
inc
push
bound
sahf
sbb
enter
or
mov
or
es
jge
push
add
sbb
loop
cmp
add
ja
ret
movsb
push
push
test
cmp
push
les
mov
shrb
fwait
push
shll
jecxz
push
mov
sti
sbb
ljmp
lcall
lea
sub
mov
out
xchg
in
popa
data16
xchg
loop
push
bound
jns
adc
movsl
leave
aad
add
and
call
scas
mov
cwtl
xchg
dec
cwtl
mov
scas
cmp
movsb
and
ja
sbb
or
pop
jmp
pop
in
cmp
repnz
stos
subl
movsl
mov
sub
hlt
push
pop
daa
add
pop
int3
stc
add
add
repnz
xor
test
outsl
les
clc
rdpmc
lcall
out
jl
into
jp
stos
subb
pop
fdivs
nop
cmpsl
hlt
lds
cwtl
imulb
mov
dec
movsb
adc
sbb
ret
mov
inc
push
pop
xchg
sbb
scas
mov
ficoms
in
jle
jno
gs
daa
xchg
enter
pop
cmp
repnz
push
pop
jecxz
add
mov
in
mov
icebp
fwait
push
fimuls
les
aad
ss
mov
outsb
insb
addr16
ret
mov
and
dec
jg
push
cmpsl
jbe
push
lret
or
cmp
hlt
sahf
push
mov
les
jecxz
loop
adc
dec
mov
mov
stos
mov
mov
int3
mov
notl
leave
fsubrl
std
sbb
faddl
lods
pop
bound
stos
int
fmull
dec
cwtl
das
inc
rep
sub
je
loope
jne
pop
pop
push
cmpsl
mov
push
dec
mov
lock
dec
xor
add
ret
cmp
mov
insl
dec
ds
and
cmp
test
pop
cmp
gs
cmp
lcall
and
sbb
scas
rcl
jb
cmp
jns
jb
dec
xor
jno
xchg
xor
mov
sbb
cwtl
pushf
shlb
aad
cmpsb
sbb
cmp
xchg
mov
mov
dec
adc
mov
divl
pop
iret
lds
cltd
push
test
sub
clc
inc
mov
mov
push
mulb
lds
popf
out
push
jne
in
adc
cs
cmp
rclb
add
cmp
sub
stos
inc
mov
popa
push
mov
add
fdivl
rorb
sti
shll
mov
call
sbb
cmpsl
cmp
xor
je
outsl
ss
xchg
in
sub
mov
and
dec
repnz
cli
xor
icebp
les
movsb
xchg
pop
or
sub
out
sbb
or
inc
push
shrb
or
add
mov
movsb
dec
xchg
adcl
pop
cltd
jno
pop
lea
shrl
popa
mov
pop
ds
das
in
cmp
push
in
push
inc
mov
cmp
popf
ret
jno
fwait
mov
pop
xchg
ja
mov
xor
je
pop
int3
andl
inc
mov
adc
popl
mul
mov
sti
push
adc
adcb
dec
inc
and
jb
push
cli
adc
and
and
les
fwait
mov
hlt
adc
out
add
pop
or
aaa
rol
lea
loopne
shrl
jnp
add
frstor
nop
dec
sbb
mov
shlb
mov
addr16
mov
add
add
iret
jle
xor
and
cmc
das
cmpl
mov
scas
sub
scas
loop
pop
push
in
jp
xchg
cs
dec
aaa
js
dec
adc
test
into
or
mov
xor
xor
aam
cwtl
outsl
scas
fidivl
aaa
shl
pop
cmovl
inc
je
gs
mov
push
jle
lds
dec
jnp
xchg
mov
push
inc
xor
inc
jge
pop
lret
inc
stos
les
cpuid
in
nop
and
jmp
cltd
dec
shlb
xor
fstl
rcr
inc
aas
rorl
icebp
lods
pop
dec
cmpsl
pop
sub
push
js
mov
enter
wbinvd
mov
cmpb
neg
loope
arpl
xchg
iret
mov
mov
sbb
cmc
mov
and
and
add
mulb
xor
adc
jle
int
mov
subb
les
xchg
jge
test
out
pushf
out
inc
sarb
lcall
jns
jge
cmp
das
sar
sti
pop
push
movsl
arpl
mov
lahf
sahf
push
ret
push
cld
sbb
pop
jl
jne
pop
dec
loop
push
jmp
add
cwtl
int
andl
jb
mov
ret
adcl
out
dec
lods
mov
and
jecxz
xchg
jle
loopne,pt
aaa
sahf
stos
shll
icebp
xchg
aaa
cmpl
inc
shrl
jb
aam
xor
sahf
stos
repz
cwtl
outsb
or
in
mov
in
jmp
ret
xor
lret
xchg
and
clc
mov
dec
jae
push
clc
shll
dec
push
loopne
fidivrs
movsbl
aaa
jo
lods
jo
xchg
outsb
pop
push
es
xchg
enter
mov
scas
sbb
add
mov
dec
cmp
jo
and
cmp
shll
cmp
pop
out
in
add
je
dec
sbb
push
dec
xchg
cs
pop
cmpsb
bnd
jle,pt
cmpl
enter
xchg
jg
mov
lcall
jbe
aaa
outsl
mov
and
mov
das
fimull
adc
fsubrl
sub
mov
leave
sub
punpckhbw
cmp
cmp
or
cld
repnz
sub
or
setns
sar
inc
mov
nop
loopne
ss
mov
fsubs
jmp
decl
call
ja
aad
and
lret
dec
pop
fwait
test
xchg
flds
mov
mov
pushf
xchg
outsb
test
xlat
adc
mov
out
sbb
loope
jle
pop
adc
push
mov
inc
dec
add
stos
fildll
fsubrl
jle
nop
adcb
pushf
mov
stc
jo
les
mov
jb
mov
pusha
pusha
push
scas
adc
cmovne
sbb
addr16
pop
sbb
pop
add
push
andb
add
inc
orl
push
or
insb
popa
out
push
stc
jns
cmp
es
stos
dec
jns
mov
jle
pop
outsb
inc
and
stc
xchg
push
pop
repnz
and
rcll
fmul
mov
xchg
jno
mov
lods
push
xchg
lock
adc
xchg
lret
push
sbb
enter
lret
movsb
adc
filds
loopne
int
pop
and
inc
in
aad
xchg
dec
jno
xor
pop
aad
add
in
jns
push
les
sub
add
lret
jne
dec
cmp
lods
cwtl
or
test
test
pusha
gs
adc
add
xor
jno
adc
rorb
loopne
loop
loop
dec
mov
xor
xchg
ljmp
pop
fnstenv
imul
ficomps
std
add
mov
loopne
ds
cltd
pop
das
sahf
jb
mov
cmpsb
and
add
pushf
aad
hlt
or
imul
icebp
cwtl
repz
popf
mov
cmp
or
test
out
aaa
add
mov
lds
add
imul
jecxz
sub
inc
out
push
jo
push
mov
adc
std
jmp
call
andb
std
outsb
mov
mov
clc
orb
loop
xor
hlt
sbb
inc
add
cwtl
cmp
fstps
inc
add
loopne
out
into
insl
jge
lds
lret
mov
nop
rcll
aad
in
pop
jle
pminsw
dec
ror
or
sub
outsl
ljmp
out
cli
data16
outsl
inc
sub
test
repnz
lcall
sbb
ret
xchg
adc
int
or
push
push
adc
add
adc
inc
or
inc
das
mov
cmpsl
lock
shrl
mov
shlb
cmp
lds
mov
xlat
ret
call
ficoml
ds
mov
inc
icebp
imulb
xor
mov
push
out
mov
rcll
cmpsb
rclb
and
ret
and
inc
popf
dec
lret
cmc
repnz
inc
cmpsl
mov
daa
push
push
jbe
hlt
movsl
test
lods
cli
sbb
add
xorl
inc
push
shrb
lds
cltd
fimuls
es
pop
call
mov
mov
movl
mov
xchg
dec
inc
xchg
insb
cltd
pop
mov
and
jb
ss
jg
ljmp
out
data16
and
sbbb
aad
in
dec
jecxz
sahf
push
mov
dec
rclb
push
xor
aam
mov
movsl
and
roll
xor
test
std
xor
stos
and
xchg
test
cs
adc
adc
mov
movsl
and
sbb
jb
pop
push
cmp
mov
pop
cmp
inc
inc
or
out
pop
and
xor
mov
dec
std
fwait
lahf
cmp
xchg
and
sbb
jle
in
xor
sub
mov
add
pop
gs
lea
es
ret
adc
mov
sub
mov
cmp
push
imul
dec
jp
dec
lods
out
mov
in
cmp
cltd
inc
lock
xchg
adc
push
jno
shrb
mov
adc
outsl
mov
adc
mov
repnz
jmp
test
xchg
mov
adc
sbb
mov
std
fimull
imul
daa
fldcw
mov
jge
xor
dec
mov
cld
mov
repnz
ljmp
push
cmpsb
aam
fsts
mov
test
sar
and
mov
push
in
loop
les
andl
ss
adc
mov
pop
movsb
adc
fsub
arpl
faddl
ret
hlt
daa
lret
aas
adc
in
xor
jge
xchg
mov
aam
je
addl
ret
xchg
insl
out
clc
xchg
arpl
and
dec
xor
out
mov
and
movsb
stos
in
mov
push
ljmp
repz
pop
bnd
jl
std
add
cmpsb
mov
fwait
and
add
xor
push
adc
xor
jo
mov
fists
jle
loopne
cmc
sbb
cmp
push
push
xor
mov
sti
sarb
test
dec
or
movsl
sub
cltd
sub
and
lret
sbb
iret
push
icebp
mov
and
repnz
or
icebp
repz
hlt
ss
mov
out
mov
lcall
mov
dec
leave
cwtl
outsb
cwtl
lret
int3
pop
dec
sbb
aaa
mov
pop
gs
jno
mov
shr
mov
decl
test
pop
jbe
lds
or
xor
aam
out
push
cltd
cmp
das
leave
push
lods
pop
icebp
jne
mov
fstl
clc
pop
stos
sbb
inc
lret
int3
cmp
gs
xor
pop
in
hlt
xor
inc
in
pushf
dec
insl
jo
adc
mov
mov
sbb
ja
mov
rorl
jne
mov
mov
cmpsb
fs
ficoms
out
mov
lods
movsb
inc
xchg
and
mov
mov
push
inc
popa
add
push
out
and
dec
ja
sti
pop
cli
dec
push
sbb
pop
adc
subl
and
dec
lret
xchg
and
xchg
dec
add
inc
jmp
sbb
cmpsl
add
fs
fists
orb
xchg
adc
hlt
movl
sub
dec
aas
cli
pushf
push
jne
xchg
addb
sub
test
and
mov
and
dec
dec
aam
push
imul
mov
inc
pusha
fldenv
inc
movsl
adc
iret
ds
fcoml
xchg
fistpl
jo
sub
test
ret
lret
pop
dec
test
mov
int
and
jmp
cmpsl
xchg
add
test
push
icebp
sbb
lret
mov
scas
or
insl
ficomps
lds
test
mov
cmpsb
xchg
sbb
pop
pop
scas
sub
xchg
mov
adc
or
je
adc
and
sbb
add
enter
xor
cmp
xchg
aad
xor
insb
enter
popf
dec
mov
mov
hlt
aad
jnp
lahf
jle
js
inc
stos
les
lret
jns
push
ret
cmp
cmpsb
jge
add
out
test
mov
into
nop
ficompl
push
inc
jb
lods
fwait
scas
or
add
fucomi
jmp
test
in
roll
add
xchg
xchg
inc
lods
pop
pop
or
test
dec
aas
gs
scas
fiadds
clc
inc
lret
xchg
jnp
cli
jmp
mov
pop
push
xor
lods
pop
jns
adc
mov
in
out
das
jne
in
pop
sbb
fldcw
shlb
xchg
movsb
add
jle
loop
mov
add
ret
icebp
int3
xchg
pusha
cmp
sub
into
in
js
gs
push
and
call
addr16
mov
mov
mov
loop
pop
rcrb
add
adc
inc
jne
add
in
sbb
cmpsl
sub
movsb
test
and
sub
sahf
iret
je
cmp
cmp
adc
out
jp
imul
jns
sbb
shll
jecxz
push
pop
sbb
sub
jae
and
jl
mov
enter
inc
inc
jmp
pusha
cmp
xor
mov
data16
movsb
std
mov
mov
imul
cmp
dec
popf
inc
iret
push
repnz
mov
and
inc
test
adc
jns
xchg
jg
inc
xchg
and
popa
jb
xlat
jae
idivb
dec
dec
dec
out
dec
iret
sub
call
mov
push
xchg
and
cmp
xchg
ja
xchg
xchg
imul
add
mov
sub
out
ret
cmp
adc
push
movsb
pop
aaa
fists
cmp
or
and
sbb
adc
push
adc
rclb
fistl
dec
rorb
daa
or
pop
mov
add
mov
xchg
mov
cmp
pop
mov
cmp
mulb
mov
jnp
dec
je
rcll
pop
cli
cli
lret
lahf
pop
es
mov
add
jnp
or
and
jmp
inc
jns
push
loope
out
cmp
xlat
cmpsb
iret
dec
mov
add
pop
movsb
mov
imul
mov
shl
mov
lahf
out
js
or
pop
loop
bound
ds
shll
mov
inc
sti
dec
inc
push
pop
mov
lret
daa
push
roll
int
jae
into
xor
jns
call
fsubp
push
nop
dec
cmpsl
cs
xchg
int
int
push
lds
popa
inc
popa
jns
adc
out
pop
mov
mov
in
and
jne
in
mov
ret
cmp
stos
stos
loopne
mov
inc
popf
in
adc
fwait
push
inc
cli
mov
push
add
movsl
insb
jle
popf
aam
dec
and
pusha
push
mov
pop
mov
mov
call
xchg
or
gs
jg
jl
gs
cmp
jns
and
fisubs
and
ret
daa
dec
inc
xchg
mov
mov
test
mov
stos
sub
mov
in
jecxz
cwtl
in
stos
ss
mov
and
dec
in
dec
jp
adc
fildll
and
mov
imul
out
aas
inc
mov
push
or
xor
mov
jno
lods
int3
xchg
cmpsb
sbb
dec
jecxz
imul
in
mov
call
fistpl
add
add
fadd
jge
jecxz
stos
jbe
mov
pushl
stos
pop
xchg
push
ficoml
jp
rolb
loopne
push
loop
or
adc
push
jge
aad
and
adcb
pusha
icebp
xchg
fwait
xchg
loop
jmp
shlb
ljmp
mov
pusha
arpl
repnz
inc
cmp
ss
sub
pop
mov
xchg
and
gs
or
adc
and
lret
aam
fcoms
add
add
mov
adcb
mov
scas
jns
int3
aas
or
cmp
shrb
fcmovnbe
add
xchg
arpl
dec
sbb
iret
test
aas
adc
pop
rcl
imul
pop
inc
cmp
jp
pop
jle
nop
xor
xor
and
aas
cmp
sub
push
sbb
scas
pusha
cmpsb
test
xor
mov
xor
clc
xchg
cld
in
cmp
lret
inc
popf
dec
testl
pop
lods
add
dec
int
mov
or
sbb
cmp
xor
imul
fimull
dec
dec
jns
adc
dec
pop
gs
sbb
mov
pop
add
stos
mov
inc
jge
test
jge
and
popa
cwtl
xchg
ret
push
loopne
dec
imul
push
leave
ljmp
imul
xchg
daa
scas
popa
shll
cmp
pop
jnp
andb
push
cmp
cmp
sti
movsb
lds
xchg
lcall
dec
or
and
cltd
pop
ja
dec
repnz
lock
arpl
adc
or
das
stos
sbb
lods
es
bnd
ljmp
and
jl
adc
cmp
cmpsb
push
sub
adc
mov
pop
pop
mov
bound
sbb
mov
jg
or
pop
les
shll
aas
imul
pop
cmp
xchg
sub
daa
testb
shlb
int
addr16
push
test
adc
decl
xchg
sub
mov
xor
cmp
lret
arpl
cld
mov
jns
xor
movsb
cmp
dec
enter
in
jo
jl
push
or
inc
pop
fiaddl
enter
mov
repnz
inc
es
add
jg
dec
or
das
cli
adc
shlb
in
sub
notl
mov
pop
mov
jge
in
aam
pop
std
fwait
inc
sbb
xor
lret
add
xchg
out
mov
sub
pop
add
orl
add
shll
mov
repz
fidivs
push
add
in
adc
adc
adc
cmp
jae
fs
out
les
pop
adc
xchg
jle
push
je
leave
fidivrl
das
shll
sub
popa
mov
jecxz
jg
cmp
stos
add
xor
daa
stos
lods
xchg
ret
inc
in
aam
sbb
lret
outsl
ds
mov
xchg
adc
xlat
cld
call
aad
dec
cmpsl
imul
in
decl
adc
adc
addb
inc
jne
fadd
es
js
pop
dec
mov
test
js
sbb
test
cld
cmc
shl
std
cmp
jns
push
bound
lods
cmpsl
aam
in
popa
add
fsubrs
clc
sub
pop
pmaxub
scas
inc
les
mov
mov
movsl
ficomps
mov
movsl
and
mov
insl
xor
jg
push
pop
dec
or
and
cbtw
stos
nop
jns
xor
xor
sahf
push
int3
fmull
in
loope
in
cmp
pushf
loope
xor
pop
jns
stos
dec
mov
pop
ljmp
outsb
xor
push
jg
outsl
mov
mov
leave
mov
sub
js
and
dec
mov
mov
repz
push
sub
xchg
popa
shrb
jno
dec
mov
push
sub
int
cmp
fwait
pop
mov
outsb
in
fistpll
push
nop
pushf
xchg
jle
push
inc
mov
jbe
mov
popa
cmpsb
jns
mov
inc
jnp
cmpsl
aam
mov
add
pop
movsl
sbb
aaa
fisttpl
or
jb
das
xchg
xchg
ljmp
cmp
pop
push
dec
fcomp
sub
jne
xlat
xchg
push
cmp
xor
lcall
jp
les
test
ljmp
push
pop
pushf
std
add
sbb
fistpl
stos
and
or
xchg
add
sbbl
shr
adc
hlt
sar
loope
cmp
mov
jg
fwait
into
mov
dec
fisubs
aaa
popa
sub
add
fistpll
pop
notl
xchg
les
xchg
jle
jle
mov
scas
push
in
adc
push
cmc
mov
cmp
inc
mov
dec
pop
in
inc
push
jno,pn
lods
loopne
sub
cmpsl
imul
mov
std
sub
cltd
jne
iret
jns
xchg
fwait
push
cld
imul
pop
fidivrs
jmp
andb
mov
in
xlat
out
cmp
mov
adc
dec
in
mov
ljmp
mov
push
dec
cmpsl
adc
cmp
xchg
mov
fdiv
xchg
ljmp
les
and
sti
sub
and
movsl
stos
pop
cmp
in
movsb
add
xchg
nop
rolb
add
pop
leave
and
jnp
jbe
xchg
iret
aam
push
jecxz
xor
ss
jae
and
jl
pop
xchg
pop
iret
fs
faddl
sarb
and
ljmp
adc
rorl
imul
sub
push
test
add
dec
imul
lret
iret
arpl
loop
lahf
mov
sahf
mov
clc
fstpl
rolb
pop
mov
insb
rclb
pop
movsl
cli
sbb
aad
into
int
mov
sti
test
fcmovb
adc
pop
jae
clc
sub
loopne
addb
out
in
push
push
test
loopne
outsb
push
call
mov
cs
arpl
cld
inc
lods
xor
icebp
mov
in
adcl
insb
xchg
sbb
push
add
out
popf
push
push
inc
cwtl
out
inc
out
xor
sub
jl
xor
notl
cmpsl
icebp
push
jns
cmp
leave
and
in
loop
pop
mov
and
stos
xchg
cmpsb
hlt
rorl
or
pushf
xor
popf
jecxz
and
imul
jl
repz
pop
ss
sbb
dec
shll
ret
adc
push
xor
jge
idivl
call
loope
sbb
sbbl
cmpsl
insb
xor
jns
cmp
mov
jno
ds
addr16
dec
fistpll
testl
mov
std
insb
inc
aam
sbb
dec
rolb
aaa
sbb
out
jnp
popf
nop
xchg
push
cmp
movsb
xchg
inc
addr16
cmp
fstps
cmp
lock
ss
sub
testl
push
push
push
loop
mov
movsb
fiaddl
sub
imull
cmp
loop
cli
xchg
dec
cmp
cmp
call
dec
imulb
pop
insl
mov
dec
and
out
or
scas
das
scas
inc
dec
je
jle
pop
std
lods
lahf
mov
lahf
movsl
ret
in
loop
cmp
xchg
test
xchg
or
in
addl
fiaddl
xchg
xor
sub
stc
jb
add
add
movsl
cmp
adc
sbb
sbb
stc
fnsave
fimuls
or
loopne
loope
fistpll
in
mov
mov
dec
cmpsl
inc
loop
push
cmp
jecxz
fldenv
add
jecxz
mov
push
cs
pusha
push
lds
fwait
and
leave
sbb
and
or
add
repz
pop
inc
addr16
int
adc
or
cmc
cmp
outsl
movsl
jge
and
push
fmul
or
cmpsb
mov
mov
sbb
dec
push
ret
in
xchg
stc
insl
cmp
inc
jp
or
inc
cwtl
inc
push
xchg
cwtl
popf
jge
scas
addr16
pushf
das
mov
movhps
addr16
loopne
data16
xchg
lea
ss
pop
xchg
mov
sti
fwait
jl
imul
sbb
jnp
in
mov
jnp
add
icebp
jmp
sbb
cmp
adc
stc
cmp
jo
clc
sub
inc
mov
xchg
cmp
scas
mov
sti
cmp
inc
add
inc
lock
test
or
daa
idiv
jae
orl
xchg
push
or
jns
lds
xor
inc
cvtps2pi
xor
or
stos
xchg
adc
loopne
mov
adc
mov
and
divb
mov
das
xchg
push
lods
push
frstor
aam
add
mov
int
xchg
adc
or
frstor
frstor
hlt
js
dec
inc
jmp
pop
outsl
mov
addl
pop
add
in
dec
adc
sub
adc
cmpsb
enter
xor
sub
sub
pop
jns
dec
add
or
int
int
ret
aas
jb
addr16
fnstcw
cld
add
pop
jno
push
ja
jbe
xchg
dec
mov
enter
enter
dec
push
xor
loopne
scas
jno
test
iret
repz
pop
xchg
or
lahf
imul
jae
xchg
iret
enter
jl
nop
dec
mov
mov
jnp
and
jb
addr16
cmpsb
lcall
je
outsb
testb
arpl
mov
add
fldcw
scas
cwtl
ret
sti
fcompl
sbb
xchg
jle
iret
outsb
icebp
push
push
das
and
jp
cmpsb
repnz
jp
jbe
xchg
jnp
sti
or
cs
dec
jnp
cwtl
add
lea
sub
jbe
pop
add
call
sub
shll
inc
mov
pop
shrl
push
sub
testl
xlat
popa
scas
pop
jbe
sbb
mov
cmp
lea
xchg
faddl
xchg
mov
dec
lods
dec
jmp
push
iret
add
jp
and
adc
push
xrelease
stos
pusha
inc
dec
push
fcoms
jns
push
movsl
jae
cmpsb
mov
xorl
js
mov
xchg
add
call
jne
ss
hlt
test
mov
jg
pop
int
sub
jmp
or
pop
rorl
loopne
nop
dec
sbb
push
inc
push
pop
jnp
xor
xchg
cli
pop
sub
enter
icebp
stc
imul
mov
ljmp
mov
mov
xchg
add
insb
sub
sbb
fdivr
mov
in
fmuls
or
xor
lret
dec
rcrb
incb
push
lods
xchg
add
das
clc
pop
iret
pop
cli
mov
fcmovnbe
mov
adc
mov
adc
imulb
sub
jns
mov
sbb
add
pand
inc
mov
movsb
pop
insb
clc
push
imul
cmp
pop
leave
jecxz
in
inc
mov
and
or
inc
mov
mov
cmp
aam
pop
xor
fmull
dec
enter
lds
and
pusha
lea
add
test
sbb
fadd
or
aas
ret
and
xor
mov
ret
pop
in
ret
inc
movsl
stos
roll
ret
sub
into
test
add
xlat
add
xchg
outsb
mov
inc
fbld
sbbb
enter
shlb
or
sub
dec
test
mov
pop
jae
gs
sti
imul
mov
clc
loop
addr16
inc
pop
nop
mov
jl
out
das
scas
xchg
shr
std
pop
in
cwtl
sub
jg
icebp
pop
jns
push
or
push
pop
add
cli
cld
daa
inc
insl
fwait
jmp
mov
pop
add
or
xor
push
add
or
aam
inc
lods
push
xchg
flds
test
cmp
out
fucomip
loop
outsl
adc
dec
fmuls
xor
div
fs
sbb
pusha
jne
mov
or
in
mov
dec
and
push
push
out
es
jle
sti
mov
sti
pop
mov
lcall
out
stos
insl
ja
addl
pop
sub
aad
add
in
pop
xor
xchg
aam
call
fiadds
and
ljmp
cmp
push
push
mov
adc
and
pop
mov
or
rorl
fnsave
push
bound
mov
das
lods
jecxz
scas
mov
data16
sbb
call
fnstcw
es
mov
js
mov
mov
lock
mov
dec
xchg
popa
aad
xchg
loopne
cld
dec
adc
mov
adc
xchg
dec
push
subb
nop
into
jge
hlt
into
cmovno
rcrl
imul
fadd
ja
mov
sub
sti
stos
push
mov
cmp
and
sbb
popf
mov
add
into
xchg
lods
inc
xchg
imul
js
ss
adcl
lcall
xor
pop
push
inc
push
adc
in
mov
pop
js
loopne
sbb
mov
xchg
sahf
pusha
mov
push
jns
sub
dec
cld
pop
jbe
out
stos
mov
jmp
xchg
das
jle
jl
pop
out
aad
jle
popf
int3
push
subl
add
push
out
scas
jg
in
push
sarb
xor
fwait
test
jnp
jl
or
mov
loope
sti
dec
xor
enter
cmp
push
add
mov
subb
mov
pop
mov
bound
bound
out
jp
mov
and
xchg
sbb
shll
sub
shld
fldt
inc
jle
or
jl
mov
movsb
fs
mov
push
jo
mov
jg
pop
lods
sub
ja
mov
imul
ret
and
roll
test
or
push
cmp
pop
xchg
inc
sbbb
ret
mov
rclb
xor
scas
fsubp
jnp
pusha
inc
xor
inc
and
mov
or
and
jge
mov
dec
loopne
mov
arpl
dec
cmp
sbb
mov
dec
mov
inc
jmp
popf
jae
popf
sti
insb
loop
in
out
not
cmp
adc
pop
inc
xor
clc
mov
int3
dec
stos
xchg
inc
mov
or
aaa
clc
push
add
jl
mov
or
push
inc
adc
inc
scas
sbb
add
cmp
dec
nop
jecxz
fs
xchg
test
js
rcrb
ds
dec
dec
inc
inc
inc
je
sbb
lret
cmp
fucomi
adc
or
out
orb
lock
push
mov
xchg
bound
pop
and
ret
ljmp
test
sub
popf
in
pop
dec
mov
sub
cmp
xchg
mov
aaa
pushf
jo
cwtl
pop
cmp
mov
xchg
mov
add
fsubs
nop
inc
xor
out
xor
js
scas
mov
fstpt
cmp
mov
push
mov
mov
mov
aas
xchg
int
imulb
cmp
fadd
xor
adc
iret
popf
xchg
pop
ja
pop
lods
jp
mov
pop
xchg
sbb
push
sbb
fs
add
pop
sbb
xor
movsb
enter
rorb
xor
mov
adc
ljmp
in
cmp
mov
xchg
clc
call
xor
mov
jo
jo
dec
ljmp
out
test
call
mov
cwtl
loope
and
mov
mov
ret
and
cmp
jp
cmp
ror
mov
lcall
mov
jnp
and
mov
sub
xchg
clc
lahf
inc
aad
cs
mov
adc
or
lret
in
mov
loopne
sbb
xchg
sub
ret
adc
mov
data16
push
lods
sub
mov
and
out
shl
jmp
xchg
xchg
aaa
sarb
adc
inc
cld
pop
sbb
lahf
jecxz
dec
and
push
fistpl
rol
pusha
add
pop
sbb
dec
cld
lret
hlt
daa
outsb
adc
into
xchg
adc
xchg
pop
mov
mov
in
clc
icebp
rcrl
fiaddl
aas
out
xchg
jl
mov
jp
sub
xchg
sbb
ds
sbb
mov
out
jp
out
pushf
popf
out
sbb
cmpb
hlt
fstpt
inc
dec
cmp
xchg
int3
xchg
andb
negb
pusha
xor
pop
sbb
lcall
test
and
fs
mov
dec
jae
xchg
outsl
jl
mov
cs
xor
inc
add
ret
and
push
es
ja
xor
addb
shl
cmp
inc
call
cld
adc
mov
cltd
out
or
or
call
scas
aas
xchg
in
pop
aaa
mov
dec
pop
pop
ret
scas
std
divb
repz
push
pop
fidivl
fwait
sbb
rclb
mov
dec
lahf
rolb
sub
sub
cmpb
sti
jne
and
das
sbb
mov
xchg
xor
loopne
je
icebp
mov
pushf
mov
lret
int3
sahf
fistps
xor
inc
cmp
aas
cmp
mov
negb
je
std
add
jg
outsl
and
mov
mov
lods
or
test
jo
add
lea
je
lods
xchg
mov
jecxz
adc
out
inc
mov
mov
stos
push
jno
out
pop
inc
cli
dec
dec
jmp
aam
cld
xor
fisubrl
out
mov
dec
mov
cmp
aad
add
or
lods
mov
sub
movsl
clc
adc
mov
and
or
fidivs
pop
fucomp
push
mov
mov
lcall
push
or
jmp
movsl
sarb
into
cmpb
cs
or
mov
popa
fnstcw
dec
sbb
insb
lods
lret
push
dec
pop
aaa
xchg
push
pop
or
and
inc
insb
pop
leave
mov
fldl
in
dec
and
and
xchg
sarb
cmp
mov
sti
imul
fists
stc
jno
dec
add
arpl
loop
leave
inc
xchg
adc
xor
jp
xor
das
sbb
mov
inc
aaa
mov
pop
xchg
fwait
aaa
mov
xchg
inc
leave
ds
lahf
xchg
fnsave
ficomps
and
fiadds
cmp
xchg
mov
push
cmp
arpl
mov
je
or
mov
mov
iret
inc
sub
in
ss
jmp
fdivl
mov
fs
movsl
sub
cltd
add
pop
push
repnz
leave
mov
cmpsb
push
punpckldq
sbb
mov
cmc
inc
xchg
xchg
data16
jmp
jle
and
inc
in
sub
mov
adc
out
sbb
and
sbb
inc
inc
pop
orl
ret
push
ds
add
mov
pop
pushf
pop
dec
add
test
push
adc
scas
inc
popf
xor
sbb
ss
sub
sarl
pop
inc
or
mov
mov
push
mov
leave
xchg
add
setno
icebp
fs
xchg
or
push
mov
jecxz
or
inc
aad
pop
test
cmp
adc
xlat
and
inc
popf
xorb
push
pop
mov
mov
sbb
gs
cmpsb
scas
es
cli
fsqrt
inc
ret
ja
fs
cmpsb
je
adc
testl
xor
mov
cwtl
clc
out
xchg
shlb
gs
movsl
push
fcmovnu
dec
add
stos
mov
mov
jns
pop
imul
out
popa
mov
lea
iret
stos
pop
sti
push
cmc
and
cmpb
or
push
add
fsubr
stos
bound
xchg
pop
fs
mov
ss
adc
xchg
push
data16
cmc
pop
push
cmp
dec
adc
jo
aas
cmpsb
iret
je
or
cs
in
icebp
xor
jne
inc
lds
dec
test
sbb
xor
movsl
cmp
xor
adc
mov
mov
jbe
std
sbb
aas
xor
pop
sbb
jns
fldenv
jne
jnp
out
lea
test
dec
imul
jge
add
xor
xchg
in
and
add
pop
fdivrl
lods
mov
lods
xorl
setbe
jns
shl
adc
lcall
mov
cmpsl
fmulp
call
push
adc
in
ficomps
xchg
lods
popl
mov
aaa
mov
jne
push
or
fmuls
iret
and
push
xor
xchg
mov
rclb
xor
dec
js
xchg
fdiv
xor
mov
pop
mov
cmc
or
aaa
pop
inc
aad
adc
add
sbb
push
pop
sbb
aad
dec
outsl
fwait
xchg
sbb
cmpsb
xchg
pop
sti
mov
cmc
popf
sub
mov
cld
or
xor
rorb
pop
adc
mov
aam
xor
inc
roll
fiadds
orb
mov
stc
in
aas
enter
xchg
ds
mov
push
jecxz
clc
lds
jg
data16
lret
lret
or
and
adc
and
push
mov
push
pop
sub
es
pop
ja
sub
arpl
jae
push
hlt
lret
loopne
inc
sbb
outsl
mov
adc
push
es
scas
mov
jl
ret
mov
mov
sbb
rcll
jge
mov
adc
loope
cltd
sub
pop
push
test
imul
pop
fmul
lock
into
pop
or
test
es
mov
rolb
enter
push
in
iret
in
push
xchg
cmp
das
arpl
and
mov
mov
hlt
lahf
jle
jle
sub
loop
pop
iret
rolb
cmpsl
jo
cwtl
mov
cli
jp
xchg
shrl
rclb
rorl
test
inc
jb
ret
pop
stos
cmc
push
in
mov
dec
cltd
icebp
xor
clc
mov
rclb
push
clc
xor
mov
push
push
mov
scas
dec
push
lods
pushf
push
repz
cmpsl
out
inc
inc
insb
js
add
aas
pop
imul
call
sbb
cwtl
or
or
dec
add
add
cld
mov
mov
push
xchg
repz
inc
add
lods
dec
insb
fldl
lahf
dec
fsts
jg
pop
jg
test
popf
dec
test
jmp
add
leave
cmp
mov
mov
pop
cmp
shll
test
push
ds
arpl
scas
scas
sub
cli
adc
jns
mov
rolb
xor
dec
dec
add
xchg
sbb
lods
lret
jle
std
rcll
mov
arpl
jmp
cmp
call
add
repz
ret
lahf
sub
rcrl
sahf
dec
fbld
jne
fstl
pop
ds
iret
lahf
dec
adc
jnp
loope
sub
add
push
xor
out
pop
pop
add
add
mov
test
clc
xchg
jecxz
adc
jnp
rorb
ljmp
ret
and
cs
imul
pop
nop
or
popf
nop
fcoml
movsl
add
mov
inc
inc
lret
es
test
imul
loop
cmp
pop
das
xor
lret
mov
xor
sub
fadds
jno
push
popa
or
lahf
in
or
aas
xor
dec
lret
pop
clc
lods
and
cmp
sub
cwtl
insl
outsl
adc
sbb
rcrb
ss
iret
pop
jb
jb
pop
push
pop
sub
xchg
sub
aas
stos
sarl
je
incl
or
adcb
push
push
js
xor
mov
in
imul
ss
cmpsl
iret
insl
xor
lods
jbe
pop
pop
xlat
adc
fldenv
push
xchg
mov
fstps
cmp
inc
je
sbb
push
sub
add
loop
inc
mov
cld
push
repz
and
pop
nop
push
icebp
bsr
mov
mov
out
sahf
fwait
mov
in
daa
push
pop
movsl
loope
inc
add
sbb
or
push
sbb
dec
jmp
or
sbb
fstpl
xchg
dec
pusha
stos
sbb
fisubrl
insb
jae
out
jnp
mov
cltd
pop
rorb
lods
imul
clc
clc
push
jnp
ret
mov
sub
mov
ss
sbb
inc
enter
mov
cmp
inc
or
dec
in
xor
out
lahf
addl
clc
insl
in
and
push
cwtl
xchg
cli
add
xchg
insl
or
jne
je
mov
xchg
or
movsl
mov
clc
inc
push
mov
jnp
daa
ret
push
hlt
cmove
movsb
int
mov
cmp
fs
fadds
push
lods
sahf
cltd
aad
insb
mov
nop
setb
xor
outsl
sti
lock
and
dec
repnz
fdivl
sbb
pop
repnz
ret
inc
enter
scas
pop
sbb
in
lods
mov
ficoml
and
lods
push
int
je
dec
push
mov
test
xchg
into
sub
xchg
pop
adcl
pop
mov
js
repnz
mov
cwtl
movsl
mov
int
xchg
cltd
xor
inc
xchg
dec
movsl
daa
inc
mov
mov
push
rsqrtps
and
xor
out
aaa
imul
push
mov
loop
loopne
jns
xor
or
or
mov
into
cwtl
push
fdivrl
mov
push
lahf
jne
mov
push
mov
jp
popa
das
lods
jbe
imul
pop
in
cwtl
ret
lcall
push
push
push
rcl
pop
mov
shlb
cmp
pop
jae
sub
inc
sbb
sahf
add
inc
xchg
adc
lock
aam
pop
incl
mov
xchg
jecxz
and
aas
sub
mov
in
cs
jno
mul
adc
je
mov
pop
cmp
adc
repz
dec
pop
ss
xlat
shlb
xor
testb
sbb
int
mov
mov
clc
adc
dec
jmp
dec
cs
clc
sbb
loope
outsl
push
push
aad
fstpt
jmp
mov
outsl
je
xchg
test
jnp
xchg
es
sbb
nop
inc
shrl
sub
popa
add
or
aaa
imulb
enter
add
test
xchg
jnp
inc
jns
inc
or
flds
dec
rorl
outsl
sub
cli
gs
cli
adc
pushf
into
cmpsl
sahf
mov
dec
loope
lret
loope
xchg
in
bound
dec
jns
add
scas
jnp
push
inc
mov
hlt
daa
and
rolb
fmuls
jae
loopne
xor
mov
xchg
int3
xchg
bound
cmpsl
xor
in
scas
call
mov
loop
sub
mov
das
sbb
xor
sahf
and
mov
and
hlt
fstp
xor
push
mov
jmp
mov
leave
xlat
mov
mov
xchg
cmp
loope
mov
cmp
push
xchg
sti
test
pop
cmc
mov
in
pop
ss
adc
lods
and
sub
push
ss
sub
jle
es
cmpl
xchg
mov
mov
cmp
fnstenv
out
popa
cs
outsl
push
shl
ljmp
jne
test
xchg
mov
jecxz
add
outsl
inc
ljmp
sbb
in
daa
ja
jnp
push
xor
shlb
mov
test
gs
dec
mov
cmp
repnz
or
bound
mov
ja
pop
jmp
xchg
jecxz
rol
aam
sbb
pop
scas
aas
jmp
jo
shrl
xchg
xchg
mov
mov
insb
dec
popf
cltd
popa
mov
lods
jl
mov
out
dec
inc
and
inc
add
popf
aad
xor
dec
sub
adc
call
mov
cltd
mov
loopne
jg
shl
pop
decl
test
mov
imul
xlat
icebp
adc
cld
shll
out
sbb
pop
add
out
not
pop
xorb
push
subl
xor
pop
dec
test
adc
or
dec
mov
sahf
adc
aad
pusha
and
push
xchg
dec
cmpsl
jbe
movsl
mov
gs
adc
daa
mov
jnp
repz
addr16
mov
xor
sti
fists
push
mov
neg
outsb
xchg
push
jae
stc
xchg
jle
test
inc
rcl
fsubl
mov
sub
ret
push
xchg
test
leave
out
pop
ja
and
jb
or
cmpsb
add
ds
aam
mov
jb
and
ret
dec
lods
pushf
test
unpckhps
pop
aam
sbb
jno
testb
cmc
adc
stos
iret
lods
or
dec
arpl
imul
movsl
lea
pop
mov
sti
js
sub
sbb
inc
inc
insl
lcall
cmp
call
mov
outsl
dec
xchg
lret
jae
mov
sarb
pushf
jbe
pop
stc
in
mov
sbb
in
rcll
sub
pop
sbb
dec
pop
xorl
push
sub
shlb
mov
roll
je
daa
dec
xor
je
cmp
in
dec
pusha
dec
clc
xlat
int3
sbb
addb
pop
daa
test
xchg
and
out
fisubs
mov
clc
insb
mov
pop
stos
xchg
hlt
push
mov
stos
xor
fs
sub
jge
mov
pop
jno
jbe
mov
lcall
sub
cltd
mov
jg
pop
push
aas
push
lds
sbbl
aas
push
mov
xchg
xor
std
pop
call
pop
call
pop
fcomps
pop
loopne
jp
pushl
imul
mov
cmp
fisubrs
push
pop
xchg
and
cmpsl
js
rcrl
cmpsl
repnz
pop
test
pusha
mov
stos
es
popf
popf
dec
fcmovbe
cltd
je
fbstp
lcall
int3
stos
imul
into
push
inc
push
mov
or
xchg
mov
in
adc
ret
pop
push
hlt
mov
cmp
loope
outsb
sbb
iret
js
mov
inc
int3
push
lea
push
aaa
sbbb
fmulp
xchg
xchg
inc
pop
mov
xor
sahf
icebp
loop
xor
xor
mov
mov
pop
ds
rcl
dec
jecxz
das
adcl
push
pop
daa
mov
repz
inc
jne
cmpsl
in
scas
mov
jno
push
dec
ret
shl
mov
popfw
xchg
inc
arpl
rorb
xchg
test
fdivrl
test
push
shlb
jb
mov
push
shrl
xchg
hlt
loop
test
jp
addl
add
cmp
mov
data16
push
xlat
arpl
mov
mov
fwait
adc
test
outsl
jle
js
push
push
sub
sbb
sbb
cmpsb
mov
and
daa
or
or
push
dec
cli
xor
mov
movsb
sbb
add
cli
fisttpll
adc
ret
mov
int
pop
iret
stos
das
lret
pop
lahf
push
mov
adc
adc
pop
mov
inc
add
jle
pusha
les
pop
xor
insl
inc
ret
pop
idivb
mov
jnp
adc
clc
std
inc
sbb
int
xor
mov
jo
in
mov
cmc
and
imul
xchg
jp
inc
mov
into
lods
sub
xor
inc
aas
js
mov
call
xchg
aaa
push
or
sub
sub
bound
xlat
les
hlt
pop
ss
aam
rolb
sbb
sbb
adc
andl
lock
dec
jne
sti
gs
out
xchg
in
mov
aaa
mov
pop
int3
pop
mov
dec
mov
mov
mov
inc
add
aam
mov
pop
xchg
pop
push
negb
push
push
scas
xchg
sbb
jo
ljmp
and
das
add
rcrb
mov
popf
cmp
sub
cs
fcomps
jnp
mov
rcrb
cmp
xor
add
les
xorl
ljmp
fcomps
mov
icebp
adc
divb
adc
inc
lods
sub
fbstp
dec
daa
xchg
xor
test
test
xchg
lods
pop
mov
sub
enter
cmp
rcrb
mov
cmp
push
fmul
or
subl
rcll
lret
ds
mov
incl
jnp
shll
insb
sub
and
jno
aam
jb
sbb
je
or
aaa
test
push
dec
pop
adc
xchg
and
mov
fmuls
lods
ljmp
push
pop
leave
insb
icebp
or
mov
sbb
popa
mov
jmp
push
shll
sti
bound
lock
sbb
inc
stos
push
enter
adc
push
movsl
fucomp
popf
pop
pushf
cmp
mov
std
mov
leave
cmp
fwait
insb
cmp
imul
int
arpl
mov
mov
push
sti
add
add
enter
xor
cli
test
icebp
push
out
leavew
pop
call
out
add
icebp
outsb
push
popa
xor
inc
push
xchg
sbb
pop
cmp
sub
mov
dec
pop
js
add
sti
std
cmpsl
xchg
shlb
xlat
fisubl
push
lods
ljmp
out
and
test
xchg
fst
lods
punpcklwd
pop
dec
mov
ljmp
push
enter
negb
add
ds
popa
pop
dec
inc
push
or
xchg
or
fs
sub
sbb
fildll
lret
out
sbb
pop
inc
data16
fcomps
sbb
addr16
xor
js
gs
and
jl
mov
daa
add
jmp
xor
scas
adc
mov
cmpsb
mov
stc
mov
icebp
adc
mov
lret
ficompl
mov
push
mov
push
cmc
pop
stc
cmpsl
xor
cltd
gs
dec
sarb
cmp
div
mull
aad
aas
push
lds
mov
ss
dec
push
cmp
lret
insl
fwait
mov
add
and
loope
pushl
test
xchg
je
dec
dec
insl
fdivs
add
stc
pop
in
fstps
xchg
jnp
mov
aad
or
mov
mov
mov
adc
cmpsl
cmp
sub
mov
or
jecxz
stos
mov
decb
stos
in
dec
sbbl
sbb
mov
popa
xchg
xor
popf
out
adc
out
scas
rclb
mov
xor
xchg
cmp
into
enter
jbe
or
push
inc
repz
and
sbb
jno
test
jge
mov
movaps
or
rclb
jnp
and
xor
mov
lret
xor
xor
sbb
pushf
cld
mov
add
movsb
cmp
daa
push
push
data16
pusha
push
popa
pop
xchg
ds
icebp
sub
cmp
sbb
nop
mov
adc
xor
jl
pop
lret
adc
sbb
dec
and
mov
and
inc
les
pop
jno
lret
mov
fsubrl
add
cmp
leave
sub
mov
jg
cmp
leave
fldt
lods
rclb
adcb
sbb
int
or
add
mov
stos
imul
or
xchg
mov
dec
sbb
icebp
bound
aas
fldcw
lret
mov
lahf
and
out
into
mov
cld
enter
movsb
xchg
jae
or
iret
insb
xchg
fdivr
ljmp
lret
sarb
iret
arpl
sub
mov
lret
js
cmp
mov
xor
into
rcrl
data16
sbb
ficoms
ret
mov
dec
mov
outsb
mov
in
mov
mov
fists
bound
sub
js
mov
pop
test
sti
das
into
in
addr16
adc
sbb
jns
cmpsl
sbb
cli
mov
pop
orb
inc
sbb
xchg
cmc
adc
mov
inc
mov
cmp
pop
out
test
mov
rclb
inc
loop
je
loopne
xchg
push
and
dec
mov
mov
loop
or
mov
popf
xchg
rclb
loopne
stc
jae
rcl
pop
in
pop
loope
outsb
lahf
insb
xor
adc
cwtl
add
and
mov
addb
fwait
pop
mov
push
push
adc
or
jb
test
push
add
or
pop
cmp
and
sbb
mov
push
filds
xor
or
adc
out
stc
cmp
jecxz
stos
adc
mov
test
in
push
lds
jno
add
js
xchg
insb
xor
sbb
add
sub
mov
inc
cld
add
icebp
mov
int
jl
jnp
jle
cmp
cs
aam
fnsave
loopne
cmp
jg
adc
pop
fs
cmp
testb
and
outsw
xchg
and
fstpt
js
lock
add
add
and
or
mov
mov
mov
mov
stc
lret
pop
enter
mov
pop
dec
enter
int3
sub
popa
int
adc
ljmp
in
mov
jnp
mov
sbbb
mov
outsl
dec
lea
mov
fcmovnbe
dec
mov
lcall
fs
test
sub
out
sahf
jnp
ds
jecxz
jp
aam
test
test
ljmp
mov
fwait
pushf
xchg
adc
inc
stc
push
and
test
aad
int3
lahf
mov
sbb
popf
adc
xor
push
xchg
cs
ja
mov
fimull
jo
insb
sysenter
xchg
sub
cmp
sub
adc
mov
mov
pusha
jns
adcl
push
outsb
cs
hlt
jp
imulb
inc
sub
aas
inc
imul
push
dec
negl
divl
or
xor
pop
stos
cmp
gs
lds
jbe
leave
fistl
xlat
adc
or
jle
in
lret
cmp
pop
mov
xchg
outsb
inc
jp
outsl
mov
cmpsl
xchg
out
cmp
movsl
clc
mov
push
and
jb
jp
jl
stos
adc
or
cmp
test
and
jbe
inc
jno
dec
and
ss
add
aad
dec
pop
jl
sbbl
or
mov
movsb
inc
outsb
mov
and
roll
leave
push
js
lock
xor
mov
insb
cli
push
mov
sub
out
ds
ljmp
fnstenv
ret
push
jp
sub
xchg
shlb
jae
repz
jns
fildl
add
or
mov
int3
les
fists
fsubs
pcmpgtb
inc
inc
xchg
shll
mov
jnp
inc
in
cltd
cmpsb
xor
pop
jecxz
adc
mov
jbe
cmp
int
jne
aam
ds
adc
mov
shlb
ljmp
jge
je
loopne
mov
aad
mov
repz
push
mov
insb
mov
sbb
in
shl
int3
mov
sub
bound
push
das
add
xor
mov
scas
mov
out
dec
popa
dec
das
mov
es
inc
cmp
mov
push
mov
push
adc
dec
pop
push
in
dec
repnz
dec
sub
or
daa
hlt
mov
mov
pop
mov
ljmp
xchg
std
popf
pop
push
mull
fs
scas
xchg
int
mov
dec
mov
sub
pop
xlat
add
xchg
popa
inc
xlat
popf
data16
scas
mov
and
std
inc
mov
leave
fidivl
xor
jmp
pop
or
cwtl
scas
jnp
sub
xlat
lret
mov
inc
or
lret
jge
adc
rcrl
cli
insb
sub
jo
jae
out
dec
mov
push
pop
pop
imul
ss
xchg
inc
enter
sbb
xchg
nop
cwtl
cmpsl
insl
xchg
cmp
jns
xchg
sub
sbb
inc
xor
push
js
adcl
mov
mov
mov
lods
jb
mov
pop
out
repnz
inc
imul
xor
xchg
dec
mov
daa
les
test
mov
adc
cmp
aam
adc
mov
out
enter
and
jl
pop
xchg
bound
lret
fwait
cli
xchg
xor
leave
frstor
xor
out
and
inc
adc
sub
sub
loop
xchg
push
fwait
or
test
sti
test
stos
lcall
sbb
imul
adc
mov
das
movq
pop
jno
fildll
pop
and
out
cwtl
pop
cmp
push
popa
jmp
dec
leave
or
push
adc
xchg
xorl
or
lea
test
fs
ret
push
fimuls
xor
pop
mov
sbb
push
sub
jg
insb
push
and
cmpsl
lret
adc
push
test
sbb
cmp
loopne
leave
jmp
and
test
fwait
imul
xchg
cwtl
push
add
shlb
or
dec
stos
inc
xchg
push
cmp
jo
jno
mov
xchg
ss
sub
inc
jnp,pn
mov
shrb
adc
aam
jle
dec
stc
lods
inc
push
pop
bound
imul
dec
mov
mov
cwtl
imul
out
mov
movsl
fcmove
rorb
shll
sti
call
cmpsb
xchg
sub
lcall
mov
scas
xor
test
inc
add
clc
pop
sbb
bound
sub
mulb
adc
sbb
movsl
add
push
mov
jno
sahf
test
stos
mov
add
jle
movsb
sub
or
aad
ja
loope
adc
pop
adc
int3
icebp
mov
jnp
in
cmp
or
add
and
push
mov
adc
rcrb
rclb
and
mov
sahf
pop
push
out
adc
adc
ret
and
push
dec
jge
mov
lods
jnp
lret
and
pop
sbb
or
mov
lock
dec
inc
into
push
sub
push
mov
dec
aad
xchg
xor
lods
cli
push
lahf
out
rcll
inc
sbb
hlt
mov
inc
and
movsl
stos
sub
mov
pop
jmp
pushf
push
ljmp
inc
sub
outsb
jecxz
xor
orl
inc
jmp
loop
or
mov
mov
rcll
sbb
jg
rorb
mov
in
int3
or
hlt
add
das
out
shrl
cld
cmp
mov
test
fnstenv
insl
call
or
stos
or
ret
add
mov
nop
adc
add
push
jbe
jo
fistpll
ds
sbb
cli
clc
clc
lods
push
ja
mov
jecxz
jnp
or
mov
and
mov
and
jg
push
mov
add
sbb
push
andb
mov
ret
xor
push
lcall
adc
pop
xchg
xchg
add
dec
inc
lods
push
sub
clc
pop
aas
dec
and
pusha
jnp
fcmovne
clc
dec
ja
lahf
xor
outsl
push
push
dec
insl
mov
or
fwait
lods
pop
hlt
lods
imull
ret
pop
jl
add
pop
mov
xor
push
sub
adc
push
ret
fidivrl
jo
stc
ret
inc
and
leave
in
shll
add
inc
push
rorb
loop
ds
in
pop
jmp
out
mov
mov
jbe
push
jae
incb
sbb
mov
addl
je
js
push
test
pop
movsb
dec
adc
add
aaa
sarb
aaa
sbb
call
and
movsb
ret
test
adcb
xor
push
ss
cmp
out
cmp
insb
lcall
psubusw
and
cld
adc
shll
movsl
fstpl
jmp
pop
ret
outsb
outsl
xchg
bound
push
inc
in
fisttps
dec
pop
mov
in
add
loop
or
or
inc
mov
mov
cmpsb
add
aas
aas
pop
mov
fisttpl
sti
out
mov
xor
das
jge
sahf
gs
add
sub
sub
movsb
dec
and
movsb
adc
and
xchg
inc
adc
fcmovnbe
jo
das
stos
lret
inc
das
test
loop
xchg
test
in
xor
xorl
cmp
jmp
idiv
mov
divb
and
pop
pop
enter
div
push
add
mov
push
dec
bound
push
mov
inc
shrb
mov
inc
out
lcall
lods
fsubs
sub
cmp
mov
sub
sti
js
hlt
jmp
mov
mov
fldcw
dec
fwait
imul
in
adc
mov
loop
data16
bound
sbbl
loopne
mov
imul
jae
jns
out
jne
popa
and
dec
or
mov
adc
scas
mov
les
shll
pop
inc
pop
scas
push
enter
cmp
idivl
jl
roll
iret
orb
out
mov
sarl
mov
ds
or
jge
xor
adcb
mov
lret
dec
leave
and
sahf
iret
xchg
mov
sbb
xchg
push
repz
sbb
int3
sub
and
into
push
fcompl
insl
mov
and
notl
inc
mov
adc
imul
cmp
fmull
mov
xor
fmuls
cmp
mov
xchg
jg
cltd
divb
roll
pop
cmp
push
mov
fcmovu
adc
xchg
jl
in
push
jb
outsl
loop
neg
fcomps
dec
inc
test
lcall
fisttpl
lcall
mov
xchg
and
fisubl
dec
out
or
out
mul
addr16
jbe
rolb
xchg
js
dec
adc
mov
les
jne
add
mov
iret
sti
mov
rolb
iret
dec
pop
lods
push
movsb
push
mov
addb
stc
popa
in
test
out
cs
sub
enter
lods
xchg
mov
sub
call
add
dec
and
out
loop
shrb
jo
add
insl
inc
shlb
in
out
pop
push
loopne
fisttpl
sbb
iret
test
in
sbb
cmpsb
enter
je
push
pop
dec
ret
mov
xor
mov
sbb
push
inc
xor
repz
in
rcrl
or
data16
lret
shll
or
push
pop
adc
jbe
pop
out
mov
dec
scas
out
lock
mov
repnz
pop
fists
cmp
insb
call
add
pop
ret
mov
lods
imul
sti
xchg
clc
sub
add
xor
lret
leave
xor
bound
testl
clc
add
push
andl
ds
or
adc
shlb
sbb
fdivrl
xor
and
stos
insl
out
lret
icebp
sub
cs
lds
rcl
xor
dec
stos
mov
mov
cli
mov
or
push
and
push
mov
insl
and
in
fisubs
imul
add
hlt
leave
std
fistps
jmp
add
fcmovbe
jbe
xor
shll
jno
jge
xchg
inc
fdiv
jle
pop
mov
loope
inc
test
or
push
stos
xchg
add
in
inc
xchg
sbb
push
inc
and
xchg
xchg
pop
setno
scas
mov
xchg
popa
test
mov
add
adc
jb
fsubrs
pusha
mov
adc
push
jne
test
cmp
mov
xor
xchg
xor
mov
insb
mov
clc
mov
aaa
pop
roll
and
xorb
mov
insb
dec
and
sub
push
push
jbe
cmp
insl
xor
shrb
lods
scas
adc
addr16
lcall
frstor
data16
push
adc
js
cmp
aad
popf
push
cmc
add
mov
pop
xlat
mov
pop
push
add
pop
inc
insb
shrb
inc
pop
jmp
xchg
scas
cmc
add
mov
out
cmpsl
lds
aad
stos
and
out
test
jo
ret
movsl
jg
adc
shll
sbb
test
loope
dec
test
mov
push
mov
je
dec
popf
jmp
dec
push
jbe
gs
sbb
loop
lods
sub
arpl
xchg
aas
or
fnstcw
cmp
out
pop
cs
cwtl
rcrb
mov
iret
xchg
aam
fwait
in
jbe
test
cmp
mov
mov
in
adc
xorb
mov
dec
in
cmpsb
stc
cmp
cmp
test
arpl
dec
adc
mov
out
jb
aam
pop
xor
adc
xchg
lret
xchg
loop
sbb
xor
imul
push
sbb
gs
pusha
mov
loop
dec
imul
ror
nop
xlat
leave
jge
fimull
jno
stos
sbb
fcomps
out
test
out
lcall
pop
insb
mov
jl
sub
jns,pn
or
loop
lea
mov
cmpsb
cltd
inc
and
movb
mov
mov
sbb
mov
cmp
jne
mov
jmp
test
xorb
cwtl
mov
pop
test
nop
roll
fisttpl
addr16
mov
aas
je
jecxz
je
shr
push
es
or
pusha
pop
and
shll
inc
test
fs
cld
inc
mov
addl
sbb
sbb
adc
lock
xchg
xor
xor
dec
sarb
inc
pop
add
inc
push
inc
or
lret
into
add
xchg
jo
shl
lds
clc
or
je
push
imul
in
clc
add
or
jbe
adc
stc
adc
outsb
cld
ja
decb
sbbb
adc
xchg
outsl
dec
mov
adc
dec
dec
xchg
push
adc
pop
ret
mov
jp
mov
push
adc
ljmp
cmp
dec
cmpb
shlb
mov
lret
cmpsb
rep
xor
orl
mov
fmuls
add
xchg
stc
mov
dec
hlt
les
ss
pop
into
xor
jmp
xor
cs
jmp
mov
clc
jg
test
lret
jb
pop
cmp
lods
jo
shrb
inc
fs
inc
xlat
and
jnp
jno
dec
mov
fisttps
mov
lret
sub
sbb
pop
and
adc
dec
xlat
lock
stos
out
stc
sub
jecxz
repz
mov
sub
sbb
adc
daa
push
sub
mov
js
ss
add
ljmp
aam
add
lods
mov
jle
fwait
mov
ret
dec
pop
ds
and
je
inc
dec
test
push
iret
adc
sarl
push
jmp
lahf
cwtl
and
repnz
loopne
lds
into
pop
cmc
jmp
jg
adc
idivb
subb
inc
mul
rcl
popf
lret
mov
inc
out
ljmp
mov
dec
sti
or
loopne
mov
bound
inc
push
negb
inc
pushf
fstp
lea
pop
pop
and
repnz
xchg
arpl
and
push
adc
arpl
inc
xlat
add
fcmovne
jbe
into
pushf
insb
and
add
inc
repz
cmp
pop
pop
jae
rcll
ficoms
fstpl
fxch
mov
jmp
or
popf
js
cld
mov
movsb
xor
pop
jo
mov
enter
dec
jmp
ret
in
add
outsb
mov
leave
lahf
test
jge
loop
push
ret
jg
xchg
add
inc
mov
shld
and
mov
sarl
in
mov
mov
push
aad
loope
adcb
cmp
lea
mov
fimuls
jl
mov
push
insl
add
mov
sub
enter
ret
sub
adc
xchg
cmp
int
mov
push
shr
xor
cmp
repnz
pop
pop
mov
insb
push
in
pop
push
dec
hlt
jbe
pop
dec
xchg
ret
shlb
inc
lret
out
test
add
sbb
in
in
push
repnz
mov
fs
mov
orl
hlt
push
fimull
adc
pop
rcl
cmc
mov
rorl
pop
insl
and
movsb
sub
scas
gs
js
lahf
mov
sbb
xchg
icebp
stos
arpl
xor
ljmp
sbb
dec
adc
or
lcall
or
adc
xchg
ret
xor
xchg
mov
cmc
dec
lret
push
andb
xchg
add
sub
and
push
mov
ret
lret
ja
into
es
mov
into
mov
std
call
cld
hlt
mov
sub
out
xor
dec
sbb
xchg
daa
xlat
jnp
ret
xorl
shrb
cwtl
lcall
dec
addr16
jno
xchg
imul
int
cmpsb
sarb
mov
jne
loope
mov
mov
imul
aaa
repnz
mov
xor
aam
outsb
dec
push
fisttps
jle
jp
arpl
stc
sub
adc
cmpsl
mov
rep
nop
jbe
cmpsl
mov
fs
lea
sbb
and
addb
push
and
lods
add
aas
mov
scas
adc
test
xchg
stos
and
pop
mov
push
lods
js
push
push
inc
cmp
out
out
dec
adc
sbb
int
sti
jecxz
xlat
daa
stos
inc
inc
mov
enter
jg
jge
sbb
fnstsw
and
xchg
idiv
push
cmc
aam
lea
add
jns
mov
add
pop
push
dec
push
push
jo
add
inc
out
xchg
fisubrs
sarb
or
adc
je
xchg
inc
cmpsb
pop
sbb
ret
push
cld
add
lcall
lahf
mov
mov
xchg
into
fstp
out
out
mov
jae
jle
mov
cwtl
adc
enter
mov
and
idivl
pushfw
sbb
push
ljmpw
cwtl
stos
dec
xor
pop
push
sbb
pop
mov
scas
lret
out
xor
lea
xorb
lss
and
push
popa
jle
mov
loope
jecxz
loope
fcmovbe
mov
fwait
pop
push
push
in
push
frstor
sbb
sub
pusha
dec
pushf
or
shrb
addb
icebp
mov
pop
push
aad
lahf
data16
mov
or
inc
dec
loope
ret
push
insl
sbb
into
mov
pop
jnp
inc
push
mov
int
es
jnp
add
xchg
into
push
cli
testl
xlat
xchg
sub
in
jns
or
mov
sub
lods
push
dec
push
rcll
shl
jo
mov
pop
popf
addr16
mov
out
mov
jo
and
add
inc
xlat
lret
fcompl
add
mov
mov
push
dec
ja
loopne
pop
movsb
data16
sub
dec
scas
repz
push
jnp
cmp
and
lcall
enter
inc
cmp
mov
ljmp
inc
xlat
insb
add
push
pushaw
xchg
add
xchg
cmp
enter
cs
es
test
out
mov
insb
sbb
jecxz
das
jge
jg
add
icebp
cmp
sbb
mov
ljmp
dec
push
dec
xor
push
ret
pop
push
and
scas
mov
in
test
leave
push
out
mov
add
dec
jecxz
notb
sub
lahf
push
incl
xchg
inc
jns
xorb
push
sbb
movsl
clc
pop
mov
and
push
into
mov
movsl
or
mov
cmp
jb
add
outsl
pop
ror
faddl
mov
mov
ljmp
arpl
mov
mov
and
or
popa
in
outsb
pop
ljmp
mov
inc
pop
xchg
cmc
jp
and
pop
adc
jns
pop
fisttps
imul
and
ljmp
dec
shl
sbb
push
mov
jg
imul
or
enter
and
iret
cmp
icebp
sbbl
rcrl
ret
shlb
push
je
inc
adc
mov
icebp
xor
xchg
push
xor
push
sbb
sbb
pop
jbe
push
adc
jecxz
xchg
ret
sti
popf
fnstsw
xchg
mov
sarb
arpl
or
jnp
out
push
loop
jae
loop
push
std
xor
dec
or
pop
aaa
lcall
xor
cmp
mov
pop
push
jge
subl
in
rorl
mov
repz
and
push
sbb
adc
mov
lods
push
std
xchg
pop
cs
test
cmp
mov
xchg
adcb
mov
jmp
test
mov
lret
xchg
pop
jae
lods
js
shlb
js
lock
pop
sub
or
stos
sub
es
in
ret
mov
stos
inc
push
add
insl
ffree
into
adc
ljmp
push
cmp
int
push
push
adc
dec
add
repnz
jns
and
push
xchg
rorb
jmp
fs
ret
xor
into
push
adc
fwait
fs
stos
adc
lcall
xchg
sbb
in
inc
pusha
dec
cmp
aam
jge
pusha
jo
sub
cmpsl
push
jno
addl
iret
and
mov
xchg
repnz
movsb
mov
lds
adc
lahf
pop
push
out
pop
mov
push
shll
aad
aad
rcrl
imul
ror
and
mov
loop
popf
filds
adc
push
sub
popf
lock
aaa
loope
fnstcw
loop
push
shrl
inc
sbb
dec
imul
and
xchg
lea
pop
xchg
shlb
inc
shlb
lret
shl
adc
push
and
mov
aad
scas
xchg
or
sti
or
jo
aas
or
xor
cmpsl
mov
mov
mov
stos
pop
xchg
loope
outsb
cmp
inc
ja
push
pusha
loope
sbb
jecxz
push
inc
div
cld
mov
sti
cli
or
push
jl
xor
push
shll
cmp
lods
ss
pop
dec
pop
or
test
xchg
push
and
jge
ljmp
jle
mov
hlt
out
mov
xchg
loope
mov
dec
pop
jne
imul
mov
es
cmp
mov
mov
notb
int
xor
cmp
ljmp
insb
lret
test
les
negl
and
pop
xchg
clc
test
mov
sbb
loop
ror
inc
imul
pop
sbb
mov
cmp
fwait
jl
fstl
fimuls
lods
sbb
pop
insb
inc
out
imull
cli
in
mov
int3
adc
icebp
cs
xchg
nop
bound
sti
jge
pop
jae
fwait
dec
fldl2t
sub
bound
pusha
cwtl
adc
fbld
addr16
int
push
jae
adc
adc
adc
cmp
cmp
lods
cs
or
mov
sub
pusha
mov
adc
sub
repnz
push
mov
push
jae
outsl
les
mov
jmp
lds
mov
out
push
cltd
pop
and
notl
inc
js
std
fst
stc
or
std
data16
dec
add
lret
pushf
outsb
arpl
stc
sti
shll
lods
dec
notl
mov
inc
mov
xchg
add
sub
xor
mov
mov
lret
jb
mov
pop
cmp
cmp
lahf
mov
dec
cmp
fwait
enter
dec
pop
andl
xor
push
and
or
das
repz
outsb
push
mov
mov
xchg
scas
movsb
jne
in
mov
xchg
int3
sbb
in
inc
push
aas
fists
jns
push
sub
sti
lahf
addr16
inc
adc
xchg
mov
cmp
out
add
lcall
pop
cmp
aam
cvtpi2ps
adc
cs
inc
fs
cmp
mov
loopne
cmp
rorl
dec
add
mov
hlt
icebp
pop
hlt
inc
mov
jmp
aaa
xor
out
mov
jb
sbb
insl
mov
in
test
xor
jmp
in
leave
lret
int3
int
ret
cli
xchg
xchg
sbb
cmp
cltd
into
fcoms
cld
decb
jo
mov
push
mov
xchg
ljmp
shrl
adc
mov
sub
icebp
aad
insb
scas
mov
xchg
dec
or
xchg
sub
dec
push
aam
jg
es
or
push
daa
jne
fidivl
inc
les
insb
repnz
cli
and
or
ja
stos
lahf
lcall
hlt
pop
lea
sbb
push
cmp
jge
and
mov
rcrb
pop
test
inc
rorl
loop
inc
xchg
mov
les
repnz
fdivl
fdivl
cmc
imul
inc
push
pop
rcr
mov
add
mov
mov
fwait
lds
mov
mov
inc
inc
lret
ljmp
mov
jp
popa
inc
jmp
leave
cs
jne
popa
outsb
adc
cmpsl
cltd
rcll
outsl
iret
ljmp
xchg
leave
in
jno
cmpsb
iret
dec
or
lret
mov
out
jecxz
pand
push
xchg
test
insl
ljmp
scas
gs
cltd
cmp
push
cs
out
pop
mov
js
roll
repnz
cmp
sub
addr16
or
xor
scas
shrb
push
gs
inc
repnz
leave
xor
outsb
aam
mov
lods
loope
ficompl
ret
jns
pop
push
dec
sub
in
xor
test
sbb
adc
and
pop
test
cmp
ret
icebp
aaa
cmp
xor
add
mov
add
movsl
sub
sub
push
pop
mov
inc
cmp
sub
inc
sbb
in
stos
jp
cwtl
inc
aas
in
in
mov
repnz
sub
hlt
hlt
xchg
lret
sarb
mov
inc
pop
decb
mov
mov
inc
xchg
lcall
cmc
lcall
or
sub
jnp
mov
or
out
or
dec
ja
pop
adc
fiaddl
add
fwait
lcall
ss
add
ja
inc
cld
fimuls
pop
pop
xchg
xor
or
mov
add
fisubs
sbb
push
cmp
cmc
mov
pop
test
and
push
xorb
add
leave
data16
add
jae
mov
cmp
fisubrl
and
cmp
push
pusha
push
test
in
daa
jbe
and
or
and
aas
test
jmp
fdivrl
test
into
or
add
rol
sub
add
je
mov
mov
push
orl
mov
inc
lds
add
outsl
scas
mov
jl
ja
mov
lods
jge
xchg
xchg
insl
bound
xchg
sbb
imul
jnp
daa
into
ret
aas
cmc
out
rclb
jecxz
xor
cmpsb
dec
and
out
pop
cwtl
lret
or
lret
inc
dec
lock
in
outsb
cld
jb
add
push
mov
idivb
or
out
mov
xor
inc
scas
scas
xchg
mov
loope
roll
sub
or
xchg
in
cmp
sbb
shr
and
jp
dec
jnp
jne
mov
call
fs
frstpm(287
cmp
popa
je
scas
arpl
lods
in
add
cmp
push
jbe
xchg
sbb
xchg
xchg
jl
mov
add
pop
jl
and
mov
stos
xchg
scas
xchg
pushf
ja
mov
mov
push
dec
lea
clc
cld
cmp
jb
push
dec
int3
mov
mov
mov
mov
push
bound
fsubrl
mov
outsb
xchg
adc
sbb
cmc
clc
xor
xor
rcll
push
imulb
lds
dec
and
enter
aam
cmp
jbe
push
cmc
test
fdivs
jl
cmp
sarb
cmp
lss
lods
mov
rcll
cmp
inc
jmp
lods
add
clc
sbb
inc
jnp
int3
movsl
outsb
dec
jns
jl
xor
test
push
jo
jp
jmp
jne
cmpsb
mov
cmp
cmp
ljmpw
dec
jb
adc
xor
mov
out
pusha
dec
jns
mov
iret
or
pop
repnz
sbb
and
lock
push
mov
call
jae
in
mov
lret
insl
fdivs
jmp
cmp
mov
ret
or
add
rorl
add
outsl
nop
cmp
push
fimuls
inc
jecxz
adc
adc
mov
xlat
mov
jo
mov
aad
inc
sbb
mov
inc
pushf
and
dec
push
cmp
sub
mov
dec
add
sarb
aas
cld
bound
pop
int
addr16
jle
mov
dec
les
mov
xor
xor
sarl
in
push
js
js
arpl
shr
mov
sub
add
data16
push
or
fdivr
lret
outsl
cmp
loope
stos
mov
dec
fwait
stc
jo
inc
xor
cmpsb
add
stc
popf
loop
in
jno
out
rcr
movsl
dec
mov
jne
lahf
add
push
in
pop
dec
jge
dec
test
test
mov
sub
daa
sbb
bound
mov
test
sbb
stos
cltd
inc
lret
test
lret
leave
aas
push
lods
xor
mov
sbb
cli
movsb
mov
cmp
aas
dec
fcmovne
mov
push
rcl
outsl
outsl
ljmp
repnz
inc
and
loop
daa
cmpsl
dec
sahf
pop
adc
shl
into
or
xchg
jae
fstl
inc
inc
push
cmc
pop
add
cmc
pushf
movsb
push
out
vpmaxub
push
mov
std
ficoms
stc
imul
push
test
and
xor
mov
pop
aas
xchg
mov
cwtl
pop
lcall
mov
xchg
pop
out
sub
mov
inc
leave
xchg
jle
repz
pop
or
jg
stos
push
mov
test
fsubl
leave
xor
icebp
or
xchg
dec
movsl
nop
shl
out
stc
testb
test
popf
xor
mov
mov
pop
mov
icebp
xor
call
push
into
ret
lods
push
fildl
mov
or
insl
mov
ret
xchg
nop
adc
cmpsl
pop
cli
mov
pop
jg
add
jnp
cld
xchg
sub
insb
iret
pop
imulb
mov
rorl
xchg
out
inc
fmuls
imul
dec
movsb
movsb
sub
sbb
sub
adc
fsubrl
leave
xchg
icebp
lods
and
ror
xchg
gs
xor
add
add
pop
dec
repnz
and
xchg
insb
stos
cmc
shll
mov
push
rclb
xchg
out
iret
push
xchg
sahf
push
rorl
shlb
pop
mov
mov
dec
fs
fildl
and
push
imul
idivl
pop
es
xor
test
movsb
and
dec
repz
mov
push
subb
fcomps
hlt
lcall
ficompl
push
out
xchg
sbb
jmp
imul
add
loop,pn
pop
mov
jl
stos
inc
movsb
stos
jecxz
xchg
inc
or
repz
jb
sbb
pop
into
mov
mov
sub
ds
sbb
cmp
hlt
sub
adc
cmpsl
dec
mov
enter
push
clc
hlt
shlb
push
xlat
das
mov
jo
xorb
push
in
js
add
in
rcll
das
les
mov
in
inc
lea
cmp
std
arpl
ficoms
sbb
pop
xchg
or
jecxz
mov
dec
nop
pusha
ret
mov
aaa
adc
or
inc
and
pop
fs
loop
dec
lods
mov
icebp
pop
sbb
and
ja,pt
and
fsubs
jb
pop
imul
cmp
mov
stos
icebp
mov
leave
inc
fistps
lret
and
xchg
dec
in
fcompl
inc
in
mov
inc
das
pop
jge
daa
push
arpl
aad
jb
xorb
loopne
popf
lds
iret
or
decl
mov
mov
movsb
int
sub
lcall
enter
movsl
shlb
jle
sub
xchg
mov
lcall
loop
seta
scas
xchg
aas
push
xlat
add
push
jbe
lea
mov
adc
lret
push
fidivs
inc
add
mov
and
add
pop
shrl
ficomps
xor
mov
adc
pop
popf
xchg
xchg
inc
inc
pop
inc
imull
incl
jl
add
in
pop
mov
pop
xor
shrb
sbbl
mov
xchg
dec
mov
add
jnp
mov
repnz
hlt
fwait
testb
pop
test
add
mov
mov
bound
pushf
lcall
adcb
jno
nop
mov
xlat
scas
sub
push
test
add
lcall
pop
shll
test
push
jmp
jno
inc
fdivrs
rcll
push
mov
cmp
sti
into
adc
nop
lods
cmc
mov
pop
xchg
stc
aad
aaa
sahf
stos
or
xchg
pop
and
mov
cltd
insb
and
and
frstor
pop
or
rol
inc
cmpl
cld
mov
sti
cmp
mov
cltd
cmp
jg
cmp
adc
roll
fcomip
jg
pop
inc
fs
cmp
jge
push
sbb
xchg
xor
dec
lahf
out
sub
pop
cli
aam
sbb
sbb
adc
loopne
cmpsl
cmp
sbb
aaa
mov
cmp
nop
add
rorl
scas
cmp
push
sbb
lock
xor
and
sub
cs
mov
add
mov
sbb
push
fwait
xor
dec
sahf
add
stc
sbb
das
add
out
jo
mov
pop
mov
sub
lock
mov
mov
sti
jmp
adc
test
loop
mov
stc
lahf
push
leave
es
mov
and
popf
sahf
push
fsubrl
mov
pop
add
inc
sub
dec
ss
xchg
and
mov
pop
ret
push
test
xchg
dec
iret
dec
cmpsl
push
jl
sub
mov
jbe
mov
mov
push
js
pop
enter
rcrl
mov
das
daa
repz
loop
pop
subl
int
cmp
add
sbb
fistps
jl
cmc
xor
inc
mov
push
mov
jmp
bound
xchg
mov
js
icebp
test
mov
popf
sbb
push
movb
and
lods
ret
lds
in
iret
adc
ljmp
and
push
mov
cmc
mov
das
stos
cmpsb
and
repnz
frstor
cmp
inc
mov
push
mov
inc
pop
mov
addl
xorb
mov
jmp
ror
inc
aam
add
leave
inc
out
pop
pop
mov
sti
jne
or
xchg
loopne
aaa
cltd
mov
in
push
push
cmpsl
xchg
cmp
xchg
pop
rcll
popf
jecxz
pop
in
loop
aad
xor
jne
lods
push
fxch
push
xchg
jo
inc
sti
mov
and
adc
inc
pop
jg
aaa
inc
call
insl
cmp
hlt
filds
scas
push
scas
mov
mov
xchg
pop
xchg
lods
icebp
mov
cmc
xchg
aam
scas
mov
lahf
in
movb
clc
xchg
shlb
orb
adc
add
cltd
cmp
fsubr
sub
cmp
or
push
outsl
das
xchg
mov
inc
xchg
lret
popa
push
out
sub
out
pushf
pop
dec
adc
pop
std
dec
add
shrb
js
out
add
and
fmul
or
ret
sbb
lods
or
pop
adc
add
scas
cmp
mov
mov
mov
scas
shll
push
sub
in
insl
sub
sbb
addr16
sub
jecxz
cmpsb
sbb
lea
push
stos
pop
pop
lcall
loope
sub
cmp
jae
out
shlb
xorb
movb
jns
pop
lods
sbb
push
mov
js
cmpb
aam
dec
push
inc
nop
add
inc
pop
add
into
stc
mov
fisttps
push
loopne
mov
lea
loopne
ss
out
divb
add
pushf
push
push
pushf
ds
xor
and
insb
mov
sub
fwait
std
std
push
ret
cltd
test
jmp
je
je
gs
mov
ljmp
testb
xor
rcrb
inc
in
je
leave
leave
icebp
into
stos
out
addb
rcll
push
es
gs
cmp
and
pop
rorb
lods
rcll
out
fwait
xlat
cmp
mulb
ljmp
mov
mov
jns
lcall
jne
iret
mov
das
mov
push
add
xlat
notb
data16
decl
mov
mov
rorb
mov
push
cmp
cmp
mov
movsl
xchg
movsl
mov
rcll
or
sbb
dec
test
mov
frstor
es
lds
insb
dec
xlat
iret
sub
enter
inc
cmp
mov
out
pop
sub
mov
int3
mov
hlt
jecxz
adc
dec
test
fsub
push
leave
xchg
adc
jbe
xorl
fildll
push
or
push
lret
outsl
fdiv
dec
fisttps
stos
les
and
addr16
add
adc
popa
xchg
scas
and
cltd
dec
add
test
mov
repz
popf
iret
jo
and
jbe
mov
in
push
push
pop
dec
pop
dec
jp,pn
ffreep
sti
mov
pop
or
and
dec
jp
out
int3
jge
or
push
rclb
mov
es
jecxz
enter
jmp
jmp
inc
pop
stos
cmp
xor
out
inc
sub
int3
out
push
dec
xchg
jnp
mov
cmp
xlat
imul
xor
rol
subb
js
loope
aaa
int
je
imul
dec
xchg
sbb
test
mov
cltd
adc
xlat
sub
inc
adc
ret
mov
sub
fs
stos
sbb
aad
push
mov
and
jae
iret
mov
aam
jecxz
mov
push
faddl
push
sbb
sub
push
clc
stc
sub
mov
cmp
iret
popf
xchg
xor
inc
jmp
lret
sbbl
call
or
shll
dec
cmp
xor
rorl
push
push
adc
xchg
imul
loopne
xchg
mov
and
add
movsl
adc
test
leave
xor
rcr
into
sbb
inc
aad
jl
adc
lret
jnp
lea
daa
push
ret
inc
movsl
rcll
stos
mov
enter
xchg
int
leave
es
add
xchg
stos
jmp
inc
push
stos
popf
xchg
mov
aas
and
jg
in
adc
fnstcw
adcb
call
lods
push
lsl
subl
jmp
xchg
push
sahf
pop
xchg
sbb
push
pop
xchg
pop
imul
pop
push
fstpl
xchg
nop
ret
divb
xor
out
js
out
add
push
outsl
jmp
cmp
xor
mov
cwtl
sub
and
mov
cld
stc
jbe
adc
pop
int
mov
and
pop
mov
xchg
popa
jle
and
cmp
lret
call
mov
pop
pop
add
in
pop
adc
xchg
and
in
fldenv
or
xchg
test
cmc
mov
mov
or
lods
push
out
push
lods
gs
adc
jae
js
out
mov
or
fdivrl
scas
pop
scas
lcall
gs
mov
sbbl
cld
inc
mov
bound
pop
jg
lahf
ja
mov
adc
jb
push
adc
in
ss
xchg
fstps
popa
clc
inc
xor
loope,pt
mov
daa
and
ret
cltd
mov
mov
fidivs
daa
stos
inc
pop
xchg
adc
xchg
mov
lods
cmpsb
dec
mov
cmp
or
filds
psrlq
js
sbb
add
lahf
outsb
inc
xorl
fdivl
inc
jge
nop
and
iret
add
leave
sbb
test
je
sbb
sahf
adc
daa
into
lcall
fldenv
mulb
sub
dec
nop
mov
movsl
lea
jecxz
mov
andl
lcall
int3
out
fisubl
lahf
xlat
bnd
or
lds
mov
mov
sbbb
mov
cmp
int3
xchg
add
cmp
jnp
dec
and
enter
dec
mov
es
repnz
sub
scas
sub
sub
pushf
sub
jne
loope
dec
cmc
and
jno
movsb
jge
mov
cmc
cmc
shll
shll
mov
testb
ror
sbb
imul
scas
lret
adc
adc
out
dec
sbb
push
pop
xorb
mov
cmpl
movsl
xchg
xor
xchg
test
xchg
into
mov
cmp
pop
mov
or
mov
in
jmp
push
aas
adc
cmp
daa
aas
fwait
sbb
cltd
xchg
call
pop
loop
fildl
pop
adc
out
ss
insl
int
mov
sub
xor
push
pop
aas
jge
jle
lret
and
mov
mov
movsb
push
in
fwait
push
shlb
movsl
adc
movsl
repnz
pop
jle
mov
inc
cmp
ret
xlat
mov
pop
xchg
jb
shrb
scas
clc
lret
pop
lcall
pop
cld
sahf
jo
scas
inc
ja
xor
add
inc
ror
and
mov
fyl2xp1
pop
lea
add
stos
jge
jg
and
adcb
pop
jae
cmp
ds
jae
jle
or
xor
ret
in
xlat
sub
outsb
hlt
jle
xor
mov
mov
and
rclb
test
cmp
inc
pop
loop
mov
neg
jns
cmp
and
mov
imul
movsb
mov
lds
dec
lock
push
fcomps
in
mov
sahf
mov
fidivrs
leave
xchg
sahf
scas
jns
inc
out
xchg
jo
icebp
dec
stos
pusha
iret
ficoml
mov
push
xchg
cmp
jp
mov
add
ja
push
adc
xchg
out
dec
mov
adc
mov
cmc
push
adc
inc
cmp
lahf
js
dec
lahf
sub
fstl
xchg
ss
leave
add
xchg
fisttpl
imul
movsb
lret
and
mov
shlb
jge
loope
leave
inc
loopne
fs
xchg
sahf
adc
inc
jnp
xchg
add
fnstsw
lret
in
adc
xchg
in
push
sub
fwait
add
push
mov
rol
bts
pushf
dec
xchg
mov
stos
outsb
rcr
in
cmp
push
mov
sub
mov
repz
into
mov
shlb
lret
cli
fnsave
das
and
cmp
cmp
pop
popf
imul
jp
push
movsb
sub
mov
add
mov
mov
xchg
fisubs
push
cmp
add
lahf
dec
aas
adc
mov
into
and
ret
testl
xor
clc
mov
lock
push
adc
mov
xchg
insl
out
or
cmpsb
push
nop
adcb
or
ret
sbb
orl
push
dec
inc
sbb
add
dec
fisttpl
and
or
addr16
add
and
and
push
pop
popf
xchg
xlat
xchg
sbb
cld
iret
add
cmpsl
ljmp
inc
std
ds
int3
pop
nop
cli
int3
adc
clc
and
jecxz
or
xor
xor
adc
mov
ret
inc
mov
inc
pop
jbe
loop
push
xor
xchg
mov
pop
pop
sub
call
mov
or
cmpsb
fwait
jno
push
into
pusha
sbb
mov
arpl
mov
sub
sub
mov
mov
cs
adc
mov
fsts
mov
int3
pop
das
push
shrl
aam
sarb
ds
outsb
mov
cmp
pop
mov
jg
or
push
into
xchg
xchg
jl
jno
stos
pop
movsl
mov
inc
outsl
roll
xor
frstor
pop
cmp
lock
push
sbb
and
xor
icebp
xchg
dec
fildl
addb
sbb
pop
inc
sbb
pop
and
pop
inc
cmp
cmp
xor
scas
mov
xor
xor
int3
aaa
jmp
push
sti
nop
test
jecxz
mov
fistpl
andl
int3
invd
mov
sbb
fwait
mov
inc
das
loopne
rorb
and
cmp
int3
sub
xor
adc
test
repz
icebp
xchg
cld
adc
push
lock
mov
out
in
ret
orl
cmpsb
leave
mov
mov
lods
pop
xor
popf
fnstenv
mov
ja
inc
outsl
mov
xorb
fnsave
jae
dec
jae
mov
adc
cli
sub
leave
scas
xor
in
or
cmpsl
shll
popa
cld
ja
fdivr
outsb
mov
mov
and
xchg
xrelease
lea
xor
xchg
xlat
std
adc
je
jmp
inc
adc
mov
xchg
fwait
jmp
js
lods
sti
addr16
add
dec
add
stos
lcall
aas
mov
adc
in
ds
ss
mov
mov
ljmp
fnstenv
repz
xchg
daa
cmp
dec
rol
sbb
jmp
mov
js
inc
xor
arpl
call
cs
xchg
mov
adc
arpl
popa
pop
jp
cs
add
sbbl
popa
les
aaa
lds
dec
iret
xor
sbb
scas
dec
std
inc
imul
lock
outsl
loopne
mov
push
outsl
repnz
out
mov
mov
test
dec
mov
fwait
scas
loop
xchg
in
daa
popa
inc
cmp
jmp
subb
cmp
sbb
fadd
int
ss
fists
inc
inc
sub
mov
xor
lods
pushf
stc
ret
mov
jnp
outsb
popf
and
push
mov
clc
sbb
mov
mov
aad
pop
test
cs
testb
mov
arpl
and
and
inc
fisubrl
mov
push
pop
mov
jg
pusha
movsb
xor
pop
imul
add
pop
push
adc
iret
mov
lds
xchg
add
loopne
mov
test
inc
dec
mov
test
push
ret
popf
dec
and
mov
movsl
rcrb
and
insl
ljmp
or
cmp
push
scas
scas
xor
cmp
orb
sub
or
idiv
mov
push
jns
dec
lahf
iret
mov
sbb
cmp
adc
lods
aas
adcb
loope
jmp
cmp
incl
and
inc
sbb
cltd
cli
testl
call
in
sub
mov
push
cld
mov
mov
fucom
pushf
mov
enter
add
in
push
jg
inc
int3
cld
jge
cld
sbb
cmpsb
jge
xor
ss
mov
rcrb
sub
in
xor
adc
pop
mov
pop
inc
insb
adc
mov
adc
mov
rolb
push
imul
and
or
hlt
lods
sbb
and
inc
sub
divps
ljmp
push
push
mov
mov
dec
jnp
imul
int3
outsb
push
imul
lcall
cmp
cmp
fists
inc
xlat
std
stos
jnp
cmc
mov
jge
inc
sbb
push
xor
xchg
pop
mov
mov
testb
mov
xchg
or
cwtl
out
sbb
mov
jmp
fiadds
fwait
xchg
aaa
movb
mov
xchg
loope
fsubs
hlt
insl
das
mov
shrb
push
mull
loope
inc
test
subl
nop
imul
in
or
insb
jmp
test
cwtl
dec
sti
aam
data16
cmp
and
rcrb
std
mov
mov
mov
xchg
mov
or
ss
sub
add
jge
pop
inc
pop
jmp
outsb
pop
xchg
enter
pop
out
xor
lret
sti
stc
cmp
push
pop
adc
jnp
ss
popa
xchg
push
lret
arpl
xor
je
lahf
mov
lods
lret
addr16
stc
das
js
ja
pop
cmpsb
jmp
push
or
ds
in
or
jne
cli
pop
mov
aam
enter
inc
clc
ffreep
mov
aaa
pushl
imul
mov
addb
popa
push
push
mov
shll
das
push
add
pop
clc
stos
das
or
lea
das
arpl
or
inc
inc
scas
and
jmp
push
das
test
movsl
cmc
insl
cmp
int
jno
sub
mov
icebp
adc
notb
testl
movsl
arpl
pop
aas
loop
out
mov
mov
dec
adc
dec
pop
and
in
lods
int3
inc
or
push
mov
jo
flds
loopne
in
xchg
mov
das
jl
daa
out
mov
xor
sub
mov
push
lea
aam
pop
jp
push
adc
mov
in
subl
sbbl
daa
cs
loop
push
push
jl
sub
push
roll
mov
lahf
fsubl
testl
sbb
mov
addr16
pusha
xchg
pop
outsb
or
jp
push
sbb
or
and
jbe
or
jne
mov
movsb
fiaddl
mov
push
jo
data16
dec
stos
cli
pushf
sarb
xchg
xor
mov
in
outsb
mov
dec
lret
mov
mov
lock
subb
das
xchg
xchg
inc
and
xchg
xchg
jb
xchg
mov
sti
cwtl
mov
leave
clc
jmp
sub
movsb
int
sbb
xchg
sbb
add
xchg
jae
bound
mov
sbb
push
sar
pop
cmp
es
sbb
imulb
loop
push
dec
pop
push
push
pushf
into
ret
outsb
shrb
mov
sarb
pop
add
pop
sub
inc
cld
out
lea
movsl
push
cmp
xchg
add
les
das
adc
jl
and
adc
mov
loop
bound
mov
mov
jle
clc
ds
push
jp
mov
mov
pop
rcll
and
repz
aam
dec
adc
or
mov
xchg
shr
mov
das
xlat
lcall
insb
inc
sti
adc
stos
fmulp
call
stos
inc
rcll
lret
jp
mov
imul
fwait
xchg
sbb
aas
clc
jecxz
xchg
andb
out
mov
std
aas
adc
or
movd
push
andl
dec
mov
ret
dec
loope
jno
jp
imul
les
push
repnz
stc
mov
jno
jo
sti
mov
andb
push
in
fs
notl
mov
mov
push
cwtl
lods
sub
lret
xchg
add
mov
sarl
bound
sub
outsl
aas
es
cmp
das
jae
cmp
outsb
sub
outsl
sbb
imul
popf
xor
test
in
add
or
xchg
sub
or
jae
or
cmp
dec
xor
mov
in
js
outsb
iret
test
push
xor
push
xchg
xchg
adc
dec
in
or
push
inc
mov
and
addl
ret
mov
adc
andb
push
test
mov
or
je
jp
mov
clc
lds
push
std
sub
movsl
dec
pop
sub
inc
test
test
repz
js
jno
mov
lock
adc
xchg
dec
inc
xchg
ds
mov
cs
mov
cmp
dec
imul
call
scas
adc
addl
push
es
cmc
dec
pop
inc
mov
dec
inc
dec
dec
cltd
mov
adc
xlat
xor
jo
rorb
loop
into
jmp
mov
out
pop
fisubl
pop
jmp
daa
sbb
push
cmpsl
pop
sub
lods
dec
inc
jno
int
andl
in
out
sbb
jae
and
imul
xlat
mov
jns
adc
test
pushf
cmp
data16
nop
aad
shll
outsb
push
mov
sub
and
push
es
or
and
sbb
jg
or
leave
sbb
shl
and
or
ljmp
orl
fdivrl
or
sbb
fildll
jb
add
ds
dec
frstor
fimull
mov
push
lods
lcall
cwtl
pop
lcall
aas
jmp
mov
rclb
pop
push
push
nop
mov
pop
outsb
push
out
mov
lock
aam
lods
jb
xchg
xchg
inc
lods
or
add
sub
rcr
lock
cmp
add
jmp
cmp
adc
adc
push
mov
push
or
add
addr16
pop
mov
cmp
jae
ja
push
xchg
sub
setnp
pop
ficoms
daa
fistpl
adc
sub
mov
fldcw
cmp
xor
mov
mov
rorb
hlt
cwtl
xor
loop
insb
pop
jb
pop
mov
lcall
xchg
iret
in
cmp
sbb
sbb
add
inc
add
mov
mov
push
loop
sete
dec
test
and
in
mov
cs
xor
rcl
cmpsb
in
ja
imul
outsl
sub
push
push
sbb
mov
ds
pop
mov
sbb
out
ficompl
add
je
outsl
dec
inc
cmc
mov
sti
test
es
sbb
pop
xor
ret
lahf
inc
loopne
dec
push
cmp
stos
in
dec
cmc
std
xor
fldl
xlat
sbb
xchg
sub
test
rcrl
inc
adc
test
inc
shlb
iret
xor
inc
pop
and
dec
cmp
sub
push
decl
cld
rorl
mov
outsb
aam
mov
pop
adc
mov
and
scas
push
xor
movd
int3
sbb
loop
sub
inc
inc
pop
cmpsb
mov
data16
rorb
mov
lret
and
inc
mov
cmc
inc
xchg
inc
mov
stos
jecxz
subb
mov
or
lods
es
or
std
hlt
xchg
sub
rcrb
pop
push
mull
mov
jmp
div
mov
in
push
outsb
mov
out
imul
cmp
test
push
mov
ja
xchg
adc
xor
insl
add
das
dec
pop
adc
scas
inc
les
pusha
mov
rorb
push
mov
xchg
push
mov
inc
outsb
lds
xor
adc
dec
pop
xor
stc
bound
jnp
sti
sbb
andl
mov
adc
jb
scas
pop
jae
pushf
adc
mov
ffree
jle
pop
addr16
mov
and
movswl
xlat
insl
push
dec
pop
sbb
sub
repnz
inc
xor
cmp
test
dec
push
sbb
ljmp
ret
mov
mov
cmp
aad
pop
mov
inc
sub
push
or
rclb
mov
iret
pop
mov
xor
inc
add
sahf
xchg
in
pop
jns
rorb
mov
or
add
and
mov
jo
adc
mov
jae
pop
adc
pop
sub
loope
mov
movsb
mov
pop
stc
lock
inc
dec
in
xchg
push
fucom
add
pushf
adcb
test
jno
cmp
adc
stos
xlat
push
xlat
inc
and
ja
icebp
jmp
fimull
fistl
jne
popa
fidivl
pop
ret
xorb
decb
test
mov
cwtl
cli
push
mov
cmp
jo
push
or
mov
dec
mov
mov
push
or
xor
repnz
aas
test
pop
int
dec
xchg
pushf
mov
dec
subl
push
clc
or
inc
pop
cmp
dec
addr16
pop
insl
test
cmp
push
jno
push
movsb
imul
mov
repnz
lcall
je
sub
notb
mov
and
push
xor
fbld
cmp
mov
js
scas
movsb
test
lret
je
je
xor
cltd
dec
fsubrs
mov
out
repz
sbb
leave
jnp
les
adc
xchg
and
dec
mov
divb
mov
jno
jnp
inc
pop
les
in
aad
pushl
jbe
std
mov
repnz
jns
je
xchg
js
adc
pusha
fldt
lahf
push
iret
outsl
popa
jmp
mov
xchg
popf
fidivrs
dec
add
int3
outsb
mov
add
jbe
das
jle
sbb
lcall
pop
andl
sbb
jg
dec
stos
mov
mov
ret
es
mov
xchg
mov
dec
lods
jp
or
enter
mov
scas
dec
outsb
jae
or
das
shl
dec
inc
dec
sbb
adc
adc
sub
cld
decb
xor
inc
js
stos
sub
std
pop
xor
jnp
into
jecxz
add
icebp
ds
mov
mov
mov
mov
cmp
sbb
inc
lcall
cmpl
push
xchg
hlt
adc
jbe
add
mov
push
ljmp
xor
mov
adc
and
loopne
cmp
mov
jb
stc
sub
lods
mov
push
fimuls
cwtl
in
stos
insb
mov
mov
cld
test
cmp
lock
cmp
mov
daa
jb
add
scas
repz
jne
lds
dec
pop
andb
aad
jbe
jbe
mov
lcall
inc
aas
call
jg
mov
andl
inc
jne
pop
jno
push
test
stos
aad
xchg
mov
aad
mov
xor
stos
inc
in
fnstcw
add
mov
fdivrs
adc
xor
xor
inc
xor
arpl
test
xor
rclb
out
fistpll
or
or
adc
or
sbb
js
sub
dec
and
push
mov
icebp
pop
daa
mov
clc
add
divb
aaa
cmp
repnz
shrl
test
leave
js
jno
inc
rcr
push
jl
shl
xchg
sbb
decl
movsl
mov
ret
inc
imul
sti
ljmp
adc
loopne
push
imulb
test
sub
dec
mov
into
shl
sub
jg
rcrl
jns
pusha
stc
mov
jnp
mov
cmpsb
aas
and
pop
scas
xchg
mov
push
cltd
inc
mov
addr16
nop
fdivr
pop
mov
insl
xchg
jne
cmp
xchg
mov
jb
inc
out
imul
cmp
jl
adc
sbb
cli
mov
fisubrl
push
repnz
inc
fidivl
add
pop
xchg
pusha
jle
or
pop
add
shll
xor
in
push
nop
rolb
fisttps
test
cltd
bound
pop
xor
adcl
das
or
sbb
insl
repz
mov
pop
negl
adc
mov
jbe
add
icebp
jl
inc
in
sub
dec
ficompl
movsl
or
cmc
xchg
sub
sub
jmp
inc
lret
lock
push
inc
es
dec
shlb
mov
add
fldl
mov
iret
push
xor
loope
loop
pavgb
and
ret
xorl
aaa
xlat
inc
mov
xor
mov
add
in
xor
jae
jmp
dec
jle
test
inc
or
mov
lock
and
out
sbb
pushf
das
scas
push
sub
mov
cmp
mov
es
sahf
bound
jns
or
movsb
xchg
call
add
pop
sbb
cwtl
bound
inc
rcll
xchg
sub
inc
in
insb
stc
mov
add
and
push
pop
mov
in
dec
xchg
pop
std
into
inc
into
aas
fidivs
lock
push
or
dec
mov
stos
fstps
cld
ret
imul
repnz
ror
sbb
fstl
jns
pop
jecxz
in
pop
out
aam
pop
dec
inc
loopne
mov
adc
bound
sbb
and
cmp
cmp
cmp
clc
mov
mov
jecxz
lcall
mov
jp
fmul
adc
adc
push
stos
das
fsubrs
and
cmpl
cmp
jg
pushf
xchg
movsb
push
xlat
ja
inc
cmp
and
jne
mov
das
sub
xchg
fidivs
mov
inc
and
pop
outsl
imul
jns
shll
push
aas
adc
lock
xorl
mov
repnz
dec
cli
pop
mov
and
shll
pop
xor
add
outsb
jo
ss
popa
sub
or
mov
and
cmp
insl
push
icebp
xchg
mov
rorl
icebp
adc
push
mov
or
inc
sahf
clc
xor
orb
out
aad
aad
es
mov
es
push
jle
sub
mov
dec
fcom
in
xchg
movsb
dec
sbb
cmpb
mov
out
pop
out
test
mov
inc
pop
psubsw
imul
or
jl
in
test
inc
jl
fs
mov
lcall
jp
sbb
test
rorl
inc
clc
or
aaa
adc
pop
sarb
into
leave
imul
into
jle
pop
das
and
or
xchg
pop
push
dec
int3
rol
mov
call
test
add
dec
dec
cltd
mov
loope
movsb
xchg
sub
inc
cli
hlt
pop
push
jl
rcl
negb
lods
pusha
in
pop
sub
adc
push
xchg
leave
aaa
cmpsb
mov
negl
xchg
daa
mov
xchg
mov
and
rorl
fldenv
in
cmp
or
shlb
or
loope
lret
sarl
lahf
add
sub
dec
xor
cs
or
push
xchg
cli
inc
inc
insl
test
xchg
mov
scas
push
mov
fidivrs
pop
fs
xorl
sbb
nop
push
pcmpeqd
nop
xchg
arpl
cmp
dec
or
add
dec
in
ja
jne
xchg
or
outsl
mov
mov
iret
test
adcb
mov
mov
inc
jg
push
mov
add
cmp
pusha
mov
sub
jge
or
data16
movsb
cld
dec
mov
imul
xor
fisubrs
inc
jl
fcomps
lret
cmpl
mov
mov
pop
stos
scas
dec
and
in
lods
call
sub
or
call
adc
cmp
sub
test
cld
aaa
cmp
jecxz
into
std
pop
xchg
arpl
test
pusha
adc
push
insl
shll
push
fcomp
cmpsl
mov
jg
adc
inc
dec
stos
pop
mov
sbb
mov
je
push
js
stos
fsubl
fcomi
sbb
repz
xchg
shll
cli
pusha
ss
mov
lods
push
mov
or
inc
add
das
sub
shl
ret
stos
popf
ds
sub
and
jg
push
mov
and
cmp
les
rclb
rcrl
lock
subl
lret
mov
mov
push
andl
imul
cld
sti
stos
test
jns
cmc
cwtl
xorb
mov
imul
and
mov
aam
in
fcomp
inc
daa
daa
jnp
insb
cwtl
dec
inc
xor
pop
test
cmc
push
scas
cmp
popf
mov
pop
dec
shlb
xor
mov
xor
cwtl
xchg
xchg
push
scas
cmpsb
lods
shll
push
mov
and
flds
cli
ret
and
cmpb
repnz
jns
push
lds
cltd
iret
jg
or
add
mov
mov
push
push
cli
push
pop
mov
jge
imul
sub
sub
adc
pop
je
rclb
fidivl
adc
icebp
mov
test
scas
loop
daa
pop
add
jg
lods
es
cmp
adc
lods
fldenv
aas
and
movsl
xor
cmp
nop
xchg
cmpsb
push
inc
fnstsw
cmpsl
rorl
in
stos
mov
mov
adc
fnsave
inc
dec
cmp
push
int3
inc
imul
repz
push
aam
lcall
xlat
pushf
jne
movsl
sti
pop
or
jnp
outsb
dec
xchg
bound
test
lret
cmp
fiadds
ss
leave
jns
dec
push
xlat
add
aad
out
call
scas
aam
leave
xor
fidivrs
daa
pop
push
daa
adcl
xor
icebp
pop
push
dec
lods
xor
jl
daa
in
lods
std
pushf
int3
mov
sub
andw
stc
xchg
out
lea
inc
push
inc
xchg
subl
cmpsb
xor
pop
adc
movsl
lret
mov
negb
sar
sbb
sub
or
int
jno
sbb
or
ret
frstor
ja
es
jnp
icebp
in
scas
mov
gs
xor
push
pop
xor
vmread
into
rcl
imul
int3
mov
jp
mov
mov
sarb
fdivrs
popf
mov
inc
mulb
push
adc
add
shr
xlat
fs
pop
add
bound
xchg
aaa
popa
ds
mov
es
jle
or
je,pn
scas
inc
rorl
jmp
and
mul
scas
les
cmp
adc
ja
addr16
sbb
adc
stos
sbb
sub
mov
mov
push
pop
imul
dec
gs
jbe
or
or
int3
cmpsb
or
adc
inc
xchg
sub
mov
ret
sub
pop
out
js
mov
fsubrs
sbb
sbb
jmp
leave
pop
xor
or
xchg
test
dec
push
insl
call
and
and
fbstp
pop
outsb
sbb
push
je
es
repz
js
fistps
and
shrb
mov
fmuls
or
andl
sub
lahf
push
rcr
das
fs
jge
xchg
clc
mov
jae
pop
add
or
adc
rorb
stos
jge
jl
add
mov
jno
lea
mov
or
jne
mov
es
inc
mov
out
rol
ds
mov
sbb
cwtl
or
and
idivl
jno
adc
aas
mov
hlt
jae
ss
adc
lcall
inc
adc
xchg
mov
and
push
mov
loope
sbb
and
stos
add
sarb
jnp
jb
mov
sbb
xor
mov
or
lcall
jb
mov
hlt
or
insl
call
fwait
push
sbb
jmp
inc
jmp
push
pop
clc
aad
jno
jl
data16
cwtl
ret
mov
insb
repnz
in
sbb
mov
negl
pop
popa
sbb
hlt
add
mov
and
sub
push
insl
inc
rclb
insb
popf
mov
mov
es
ret
shl
mov
mov
notb
sbb
test
int
rcr
mull
int3
loope
xchg
pop
dec
jbe
push
add
les
add
push
mov
in
xor
out
and
jle
mov
mov
cmpsl
and
xor
dec
popf
out
iret
stos
out
ficoms
jmp
lods
jbe
xchg
inc
add
pop
shrb
orl
shlb
add
jl
xor
insl
push
call
sbb
std
daa
jg
mov
arpl
lods
sbb
pop
sbb
movsb
es
int
test
xor
insl
daa
shlb
and
sbbb
inc
aas
dec
lcall
push
or
pop
cmp
lods
rclb
add
sarl
lahf
or
hlt
es
sbb
inc
mov
mov
dec
lea
sar
or
xchg
sbb
cmc
ss
sub
loopne
jle
popa
movsb
loopne
ja
mov
scas
pop
int
pop
fldl
insb
push
pop
imul
pop
sqrtps
clc
lods
pop
add
test
dec
orl
dec
shll
repz
cli
sub
and
lret
pop
sahf
and
pusha
imul
lock
mov
outsb
ljmp
lahf
dec
dec
je
push
test
jbe
lds
out
cwtl
imul
sbb
adc
ds
nop
inc
adc
aaa
nop
jbe
dec
and
gs
sbb
jns
lods
inc
stos
xor
or
add
hlt
mov
fidivl
jl
imul
outsb
sbb
sbb
or
sbb
ror
add
push
out
imul
lea
mov
int3
addr16
adc
cs
jb
nop
fstl
cs
adc
loop
sbb
lcall
pop
push
test
insb
in
ds
xor
std
push
insl
out
xchg
push
or
jne
or
pop
scas
jle
insb
in
mov
jne
std
in
jmp
fwait
scas
popf
pop
fiaddl
enter
fcmovb
and
or
pop
mov
rcrb
jl
lds
test
jecxz
cmpsb
dec
dec
jns
gs
mov
mov
nop
loopne
pop
js
sbb
jle
cmp
or
push
cmpsb
test
inc
stos
mov
add
fstpt
movsb
cmpsl
add
lds
jno
ds
sub
push
in
insb
das
fcoms
pop
cmp
lea
mov
inc
lret
dec
xchg
dec
out
out
and
dec
sbb
int
arpl
leave
push
scas
add
mov
jne
stos
ficoms
fs
and
add
xchg
mov
sub
sbb
or
sbbl
icebp
pop
daa
test
xor
cmp
mov
in
pop
repnz
mov
test
xor
dec
add
cltd
cmp
pop
out
inc
enter
xor
cmp
std
pop
hlt
stc
mov
pop
mov
lds
or
out
cmp
ret
lcall
or
jae
pop
inc
sarb
sbb
push
stos
mov
pusha
jo
add
xor
test
mov
xor
pop
sub
insl
and
jecxz
pop
inc
pop
pop
cmp
mov
shll
mov
mov
pop
movsl
ficoml
test
push
mov
cli
mov
stos
and
es
inc
pop
nop
and
add
inc
push
cmp
inc
mov
ljmp
sbb
mov
mov
xchg
xchg
shufps
std
ljmp
xor
mov
rclb
dec
es
test
sbb
sub
jge
push
aas
ret
out
sbb
test
fbld
out
or
cmovb
loopne
cmc
mov
xor
jo
imul
mov
jo
dec
nop
adc
push
sbb
pusha
ret
nop
pusha
push
jae
data16
dec
ret
cmp
mov
mov
call
sarl
sbb
or
mov
adc
enter
xchg
dec
and
xchg
cmp
call
test
cmp
pop
stc
cmpl
sub
sbb
mov
cld
adc
cld
xorb
or
imul
and
inc
pop
setg
ds
pop
xchg
and
stc
outsb
push
or
mov
gs
adc
sub
xor
inc
xchg
aaa
inc
stos
mov
jne
fnstsw
push
jecxz
xor
aam
lods
in
xchg
aas
and
and
pushf
and
xchg
sub
or
and
cmp
std
inc
mov
je
pop
jmp
sahf
lahf
rclb
push
push
xor
inc
sub
adc
ret
mov
mov
loopne
or
sub
adc
push
or
ret
dec
sbb
les
repnz
gs
sbb
pop
addb
cmp
cmp
push
pop
mov
cltd
jo
insl
outsl
fwait
cmpsl
xchg
hlt
lahf
mov
mov
fistpl
jbe
aaa
setnp
test
inc
mov
repnz
sbb
lahf
xchg
insb
mov
push
pop
in
sub
pusha
cmp
mov
and
xor
jno
es
push
out
pop
add
push
and
inc
xor
cld
rorl
in
dec
add
inc
call
iret
ret
shll
test
scas
mov
pop
adc
mov
push
fiaddl
stc
lss
lret
out
les
popa
add
popa
xor
mov
inc
mov
out
sbb
adc
cwtl
and
movsl
sub
stc
outsl
out
adc
mov
adc
mov
ljmp
mov
lcall
pop
adc
pop
xchg
in
sub
jmp
rolb
mov
lds
pop
lock
xchg
loope
and
int3
jb
sbb
out
ffree
xchg
or
sub
or
push
ds
ror
ljmp
call
ss
frstor
cmp
add
ljmp
inc
adc
test
push
mov
js
jns
push
inc
dec
mov
jle
and
ficoms
pusha
add
imul
jb
sub
inc
xchg
jge
jnp
gs
fs
pop
xor
mov
fstpt
sbb
stos
pushf
lahf
pop
in
ret
ljmp
jle
mov
mov
inc
pslld
sub
imull
jecxz
dec
imul
add
out
addr16
inc
dec
pop
inc
xchg
call
pop
outsb
imul
jb
jae
in
mov
jp
xchg
or
sti
out
rorb
or
jns
pop
or
push
js
in
jb
repz
cmp
decl
jg
jnp
jmp
jno
pop
shl
mov
xchg
pop
inc
pop
int
outsl
cmpsb
clc
jb
mov
repz
cmp
std
mov
or
icebp
cld
pop
or
loop
out
shlb
adc
iret
mov
sub
pop
sbb
lods
pop
xor
ss
shl
push
mull
pop
aad
jmp
ljmp
jns
adc
iret
loopne
push
outsb
xchg
add
xchg
sub
mov
call
lea
adc
cmp
sbb
mov
das
push
xchg
xlat
sub
and
mul
and
in
sub
xor
pop
cltd
sub
xchg
lds
mov
jecxz
jge
cmpsl
add
cmc
xchg
jle
xchg
leave
mov
shl
jl
push
pop
cmp
push
adc
mov
out
add
sbb
sub
xor
mov
dec
mov
pop
cmp
arpl
xor
ja
inc
mov
cmp
sbb
sbb
lret
sbb
cwtl
cwtl
stos
pop
mov
pop
dec
stos
pop
adc
in
sbbl
jne
leave
sbb
fistpll
insb
and
xchg
mov
in
inc
cmpsb
out
stos
das
iret
pop
inc
cltd
je
leave
movzbl
cmpxchg
lods
xor
mov
scas
cmp
imul
mov
gs
enter
fdivs
push
imul
in
loop
daa
mov
jle
into
movsl
in
push
adc
jne
lcall
jno
jg
push
lcall
push
in
adc
push
imul
xor
xor
mov
pop
dec
cmp
jp
lods
sub
cwtl
cwtl
mov
inc
mov
mov
ljmp
push
movsb
mov
repz
cmp
and
mov
and
addr16
das
xor
and
mov
orl
cmc
rcrl
mov
cwtl
add
pop
aam
sub
xchg
out
push
inc
jns
addr16
add
shll
lahf
imul
gs
mov
aaa
js
cmp
mov
xchg
test
jns
leave
pop
lods
lock
cmpsl
dec
pop
and
hlt
pop
mov
mov
test
adcb
das
nop
inc
decl
dec
push
xor
pop
adc
in
jge
jb
pop
dec
push
xchg
cmc
dec
jle
gs
or
or
aas
out
loop
adc
or
lret
lcall
int3
je
mov
jg
cwtl
in
das
mov
insb
sub
cli
xchg
push
dec
inc
popf
push
cmpsl
push
test
repz
clc
xor
dec
test
cmp
fyl2x
aas
dec
mov
sbb
cld
mov
addr16
sti
out
ss
mov
ljmp
push
dec
loopne
push
dec
test
pop
push
jg
jge
es
scas
orl
xor
xchg
push
sarl
add
out
adc
ror
inc
into
stos
mov
fwait
inc
dec
sbb
cli
in
rclb
push
xor
fld
cltd
and
xor
inc
and
test
loope
jle
sub
xor
xor
rcll
out
imul
cmpsl
cmp
cs
jl
mov
lcall
mov
xchg
sub
xor
aad
sub
fs
sbb
hlt
call
sub
cmp
and
and
out
cmp
test
xchg
outsb
popf
imul
out
shr
shlb
mov
adc
add
movsl
lock
cmpsb
clc
in
push
jnp
sbb
fiadds
aam
jle
sub
dec
or
cmpsl
mov
imul
pop
sbb
lods
call
cmpsb
pop
adc
dec
dec
enter
push
xchg
pusha
pop
inc
and
test
stos
sub
cmp
call
sahf
xlat
inc
imul
scas
cmpsb
in
enter
adc
xchg
sub
sar
mov
pushf
mov
scas
mov
pop
and
xchg
scas
aaa
adc
fldt
adc
xor
fimull
aas
xchg
in
mov
or
mov
clc
sahf
or
mov
in
out
mov
call
push
and
xchg
in
sub
je
repnz
jp
pop
loopne
and
seta
sbb
stos
adc
push
loope
test
mov
push
into
jle
adc
pop
cltd
lret
sub
mov
fisubrl
fwait
nop
push
mov
and
idivb
loop
pop
sbb
adc
sub
outsb
lret
sbb
mov
inc
push
sub
mov
into
xchg
aas
out
in
lock
adc
aad
movsl
or
lcall
push
repz
das
inc
mov
rcr
xor
wbinvd
and
add
mov
cltd
adc
xor
std
mulb
xlat
jmp
xchg
and
and
into
sbb
mov
inc
pop
xchg
pop
mov
push
or
clc
sub
stos
jo
rorl
icebp
leave
aam
daa
rol
jmp
push
mov
xor
mov
lods
lock
test
hlt
inc
dec
jo
xor
movsl
out
push
into
dec
test
lods
or
push
imul
pushf
add
ret
xchg
xchg
jl
sbb
icebp
aas
push
fdivrs
in
mov
rcll
movsb
cmpsl
sub
mov
fmuls
dec
push
cmp
or
movsl
push
andb
movsl
out
mov
cmc
cmp
mov
movsb
out
add
xchg
push
loope
cs
push
ja
pop
out
jno
and
xor
and
jnp
pop
insl
mov
jne
in
mov
scas
adc
adc
cmp
jne
fs
sbb
add
scas
xchg
jecxz
adc
in
faddl
stos
sbb
dec
dec
in
repnz
sub
or
fs
xchg
pop
jo
testb
insl
mov
xorb
ds
sub
ds
sbb
mov
xor
mov
pop
lods
out
daa
push
mov
cltd
fs
cmp
arpl
xchg
dec
xor
adc
add
dec
outsl
jle
cmpsl
cltd
adc
roll
int3
les
xchg
decb
hlt
inc
test
std
and
mov
jecxz
lods
mov
xchg
fs
mov
cli
scas
fcmovnu
js
add
inc
shll
out
jl
jl
dec
mov
xchg
lea
hlt
in
mov
cli
jo
add
sbb
sbb
dec
add
jl
sbb
leave
or
dec
cltd
ljmp
jg
jne
rorb
sbb
hlt
scas
jne
mov
mov
das
pop
mov
add
divb
pop
jo
jae
pop
cltd
mov
iret
pop
rcrl
aad
and
dec
inc
outsl
sahf
xchg
je
push
pop
mov
mov
mov
movsb
mov
ficoml
push
cmp
and
cmp
repz
xlat
cmp
repz
fisubl
imul
jp
inc
imul
mov
mov
sbb
cmp
inc
or
insl
push
inc
ds
jge
sbb
fwait
das
mov
loope
mov
jb
mov
sub
mov
in
adc
jno
mov
arpl
imul
xchg
mov
je
dec
sbb
out
xchg
mov
push
enter
mov
cs
cmp
ficomps
adc
and
clc
xor
iret
movsb
adc
and
sub
rcrb
mov
sbb
add
jns
xchg
mov
pop
scas
inc
sub
or
mov
jge
add
scas
mov
mov
mov
inc
or
shll
mov
daa
dec
dec
pusha
insb
ljmp
in
push
dec
push
jmp
stos
rclb
mov
mov
sahf
xor
enter
rcl
xor
dec
rcll
lret
add
rclb
mov
ret
filds
cli
xchg
arpl
xlat
xor
imul
outsb
aas
push
add
shll
mov
scas
xchg
mov
jb
pushl
fcmove
sbbl
cmp
push
mov
popw
mov
jecxz
push
les
pop
mov
and
push
inc
mov
sbbl
imul
push
push
mov
bound
adc
stos
sbb
daa
in
das
das
or
ret
xor
aad
lahf
xchg
xor
loopne
fiadds
mov
jb
push
jg
mov
stos
xor
and
es
leave
aam
or
xchg
into
outsb
cwtl
pop
and
in
mov
aam
mov
loop
pop
xor
mov
cmp
jg
lcall
mov
jp
aam
jg
pop
cmp
sbb
mov
pusha
loopne
mov
cmp
mov
fimuls
subb
cli
add
dec
fninit
mov
test
dec
fwait
sbb
push
inc
sub
and
xor
test
dec
mov
fldl
in
sti
clc
mov
sbbl
sbb
mov
addr16
or
and
push
lahf
xchg
ja
push
or
mov
adc
loopne
mov
rcll
stos
push
lahf
xchg
shll
lods
add
inc
lret
iret
pop
pushf
mov
cmc
cs
cmp
cmpsb
push
aaa
mov
xchg
sub
push
mov
xchg
add
lods
fmull
inc
int
rol
dec
test
sbb
pop
cmp
loopne
pop
loop
mov
dec
orb
inc
pop
push
sahf
shrl
or
pop
cmpl
cmp
daa
jbe
jbe
fstpl
adc
je
or
or
mov
mov
hlt
jno
movsl
test
jl
mov
push
inc
sti
dec
insl
mov
icebp
nop
cmp
cmpsl
cmpsl
push
ljmp
lcall
dec
pop
push
mov
add
into
and
scas
xchg
popf
xchg
push
in
sbb
or
adc
loope
push
xchg
scas
cld
inc
adcb
nop
out
and
lea
cmp
or
cwtl
push
shrl
fwait
test
les
add
cltd
faddl
push
movsl
jns
pop
xor
sti
sbb
xchg
jl
leave
jl
fwait
or
lds
sub
pop
shr
xchg
push
mov
push
stc
jl
popf
pushf
xor
pop
mov
add
rcrb
int
cmpsl
insl
popf
mov
subb
adc
jp
add
add
jnp,pn
loope
add
cwtl
adc
mov
je
repnz
fstpt
mov
iret
int
adc
and
rcrb
push
or
sbb
add
adcb
mov
in
imul
xor
ja
and
push
dec
pop
iret
insl
dec
test
lods
test
aas
int
wrmsr
pop
sub
jno
test
sub
adc
mov
ret
push
int
sarl
test
cmc
addr16
sub
fs
ljmp
pop
out
jmp
mov
testl
mov
fisttps
xchg
sbb
imul
hlt
pushf
pop
fmul
jnp
push
in
add
cmp
imul
hlt
inc
mov
mov
xchg
xor
push
lahf
push
stos
jbe
sub
cmp
xor
es
mov
lods
fists
cli
hlt
addr16
push
lret
mov
push
scas
pop
mov
leave
lahf
incl
sbb
and
test
mov
hlt
ficoms
jo
cli
xor
test
mov
and
push
cmp
pop
mov
cli
xchg
fistl
inc
iret
mov
adc
mov
cmp
mov
fnstcw
mov
sub
repnz
sar
inc
fcompl
jo
pop
sub
mov
jns
mov
pop
popa
push
mov
in
mov
lods
jecxz
adc
mov
and
loop
cmpxchg
mov
ss
aas
test
adc
and
mov
daa
out
and
mov
add
mul
aas
sub
and
test
cmp
mov
and
repz
pusha
shrb
mov
mov
mov
sub
lret
fldenv
popa
mov
scas
les
mov
sub
in
leave
out
orb
shll
mov
dec
mov
shlb
lret
outsb
js
lret
or
or
push
cmpsl
sbb
pop
lret
jl
add
js
enter
iret
dec
pop
sub
sub
mov
rcrl
dec
mov
sbb
mul
inc
or
rcrl
popa
insb
insb
xchg
mov
popf
inc
mov
dec
mov
rcrl
sahf
mov
inc
push
insl
test
test
cs
inc
stos
std
and
jp
mov
dec
pcmpeqd
jle
mov
mov
mov
loop
xor
sbb
incl
mov
sub
mov
inc
pop
repnz
les
jo
xor
adcl
xchg
test
jp
pop
rclb
enter
fimull
xlat
or
inc
xlat
daa
xchg
cmp
ds
push
sbb
mov
jmp
fstpt
pop
out
fadds
and
subl
leave
sarl
cmp
inc
mov
or
mov
mov
ds
and
in
mov
incb
stos
fsub
fs
fucomip
jmp
enter
inc
lret
and
inc
or
mov
mov
xor
pop
jbe
push
push
mov
add
arpl
test
pushf
and
mov
inc
mov
sbbl
nop
pcmpgtd
mov
or
mov
adc
insl
push
je
push
mov
sbb
es
xor
shl
rcr
fimuls
insb
jb
dec
jb
jnp
push
aas
push
jle
bnd
sti
fimull
gs
aas
sbb
loope
fsubrl
cmc
mov
lret
push
jb
adc
data16
ficoms
repnz
push
inc
out
jg
test
je
imull
in
jb
mov
mov
and
fsubrl
cmp
popa
sar
cltd
inc
test
mov
mov
stos
fwait
inc
adc
inc
mov
in
mul
into
lcall
push
test
popf
leave
and
cmc
adc
popf
movsb
ficomps
loope
sub
addr16
fmull
mov
sbb
jne
popf
sbb
les
pop
std
insb
ljmp
inc
dec
lret
mov
loope
es
xor
sbb
jae
push
jne
inc
xor
call
loopne
in
lods
dec
orl
cmpsb
jmp
ret
movsb
mov
xchg
cli
dec
repz
and
dec
ljmp
decl
dec
scas
call
adc
int3
push
mov
xchg
shrb
ret
or
cmp
scas
mov
mov
repz
out
xlat
jnp
sub
pop
mov
mov
fstpl
pop
cltd
adc
push
pop
xchg
cs
cmp
adc
fldcw
out
xor
mov
mov
movsl
inc
inc
adc
cmpsb
insl
jl
inc
push
lods
push
or
je
dec
xor
mov
mov
xorb
out
xchg
in
or
nop
pop
lret
outsb
js
fisttpl
or
sbb
xchg
push
rol
loopne
mov
lods
jnp
jge
outsl
jecxz
ljmp
mov
test
mov
mov
nop
mov
fwait
jp
pop
push
pop
stos
mov
push
or
xchg
mov
xor
xchg
lds
mov
andl
jecxz
jmp
xchg
pusha
lret
cmp
xor
push
push
into
gs
sub
cmpsl
aad
mov
mov
jb
jns
js
lcall
add
add
cs
movsl
or
adc
mov
aas
add
leave
jg
sbb
mov
mov
xchg
ja,pt
out
dec
in
pop
and
in
pop
sub
aam
cmp
outsb
mov
bound
fsts
pop
fs
and
aam
push
jmp
cwtl
lea
jo
add
mov
sarb
iret
mov
es
jne
out
jmp
mov
stos
sub
vgetexpps
loope
shrl
mov
xor
aaa
testl
enter
popa
out
icebp
mull
les
sub
and
cmp
loopne
int3
xchg
stos
je
dec
mov
or
jbe
xchg
xor
or
push
add
pop
out
add
cmpsb
aaa
jle
xchg
sti
incb
mov
mov
je
popf
mov
xor
pop
sha256msg2
leave
mov
sarb
jp
daa
mov
and
cmc
in
pop
xchg
or
fwait
pop
repnz
and
and
xchg
pop
outsl
addl
ljmp
mov
into
addl
data16
xchg
push
aam
pop
sbb
rcr
jae
pop
inc
xchg
xchg
ror
iret
pop
shl
pushf
mov
mov
sti
and
or
mov
decl
mov
dec
je
clc
inc
int
jae
push
pop
mov
xor
in
enter
adc
imul
xchg
shlb
pop
sahf
xor
aas
adc
ret
xchg
or
outsb
jg
mov
cmp
add
and
push
gs
imul
out
dec
orb
cmp
repnz
push
shl
xchg
sahf
movd
xor
and
je
pop
sub
aaa
dec
dec
loopne
jne
clc
jle
popa
mov
xchg
rorl
xchg
cli
notb
lret
and
fld
into
mov
adcb
jb
loopne
stos
adc
inc
add
cmp
stos
pop
mov
push
loop
daa
lea
xchg
in
mov
xor
scas
ret
dec
or
mov
jne
and
jnp
test
jae
cmp
pushf
insb
pop
jg
jae
mov
xor
out
mov
push
sbb
add
pop
sbb
jne
cmp
in
adc
ret
aad
insl
clc
out
inc
aad
push
add
inc
push
mov
cmpsl
aad
cmp
xchg
shll
pop
out
jne
int
rclb
mov
mov
sbb
inc
outsb
adc
adc
adc
cmp
inc
sub
in
insl
stos
pusha
imul
mov
xorl
sub
sbb
push
in
aas
sti
mov
jae
xchg
cltd
cmpsl
push
ret
push
out
shll
jmp
and
pop
vmovhps
lods
out
add
xchg
dec
pop
mov
mov
mov
test
push
mov
cmp
add
stc
das
xchg
sbbb
ds
jae
nop
pop
mov
xchg
dec
cmp
bound
fstl
imul
jnp
cld
lahf
pop
test
mov
insl
pop
jl
test
int
insl
addl
js
cld
call
push
cmp
es
xchg
xor
and
push
push
rcrl
and
or
dec
inc
pop
mov
in
adc
lods
xchg
sub
inc
sub
inc
mov
lahf
mov
sti
mov
mov
data16
xor
jno
xchg
pop
sub
es
xor
mov
cs
adc
loop
xchg
lret
gs
dec
add
mov
dec
or
js
push
and
into
outsb
movsl
inc
xor
into
pop
pop
stc
pop
stos
mov
fldcw
cltd
mov
out
mov
aam
pop
cmp
repz
xchg
mov
mov
push
fmuls
xchg
jmp
clc
mov
shll
loope
sar
mov
out
dec
pop
ss
nop
adc
aam
adcl
int
jg
test
adc
mov
mov
shrb
pop
cmp
fwait
stc
inc
pop
punpckldq
aad
push
jmp
into
scas
push
mov
je
xor
xorb
fisubrs
mov
test
inc
mov
xchg
and
or
es
bound
xchg
fiaddl
in
mov
jno
jge
xchg
adc
leave
xchg
rclb
cli
iret
adc
jae
jno
push
push
and
cltd
mov
or
movsl
mov
push
loope
lds
outsl
out
movsl
rolb
inc
mov
push
pop
test
sub
fidivrl
push
jns
pop
mov
pop
loop
pop
inc
insl
movsl
cmpsl
rolb
dec
sub
xchg
pop
mov
add
mov
sub
xor
adc
sbb
insl
adc
push
and
jb
testb
pop
push
cltd
icebp
fwait
cmp
stos
jmp
lods
xor
es
xorb
imul
popa
in
popl
inc
cltd
add
mov
int
push
out
imul
imul
fcmovu
test
ds
jp
dec
arpl
aaa
loop
cmp
in
call
lret
sbb
mov
out
jmp
cmp
pop
cmpsb
lret
adc
jno
sti
cmpb
andb
lds
push
add
xor
jno
adc
aaa
or
push
daa
cld
cwtl
gs
pop
dec
xchg
rorl
dec
mov
test
ss
jb
ds
mov
scas
lret
mov
and
inc
add
cmc
add
arpl
repz
call
push
rcll
cwtl
push
push
je
cmp
lcall
push
shrl
or
and
push
add
sbb
adc
cld
repz
std
or
mov
shll
or
push
orl
je
outsb
and
orb
sahf
pop
cltd
in
fists
xchg
pop
cmp
popl
mov
and
push
mulb
loop
or
lcall
mov
adc
pop
in
mov
fdivs
xchg
test
cli
xchg
sub
pop
stc
test
aad
sarl
in
xor
dec
inc
adc
into
subb
or
push
xor
pusha
cmp
lret
leave
dec
into
insb
vaddss
push
in
aad
addr16
dec
sbb
push
in
adc
pushf
fs
push
mov
sarw
pushf
xchg
outsl
pop
ret
bound
and
jmp
mov
mov
sub
xor
lods
out
xchg
icebp
mov
and
push
jns
movsl
mov
mov
shl
dec
jbe
cwtl
scas
pop
mov
adc
pop
stc
je
loopne
cmpsl
outsl
hlt
sbb
in
sbb
mov
sti
lcall
aas
imulb
pop
mov
or
jno
cmp
mov
lret
push
or
scas
lret
ja
mov
pop
mov
or
aas
in
divl
or
sbb
inc
movsl
cmp
popa
mov
push
mov
pop
or
mov
lret
iret
inc
mov
outsl
outsl
push
fildl
xchg
and
pop
rol
sti
mov
lea
and
mov
in
cmp
mov
inc
int3
ss
test
es
cmc
adc
sbb
out
inc
psraw
cmpsb
inc
lea
int
inc
mov
push
in
and
dec
out
dec
jmp
insl
add
test
xchg
jne
and
out
test
les
negb
jbe
xchg
xor
lahf
pusha
pushf
pop
jne
xchg
rorb
xchg
jecxz
scas
bnd
mov
xlat
lds
push
mov
imul
sub
dec
jbe
lcallw
jg
sbb
lock
movsb
imul
add
ret
add
ret
jns
inc
ljmp
rcrl
xor
inc
jmp
psrlw
ret
stc
mov
pop
popw
adc
imul
cmp
int
fsubs
sub
adc
dec
xchg
mov
sbb
es
cltd
mov
or
daa
sub
rorb
lea
and
arpl
dec
push
push
dec
pop
inc
stos
xchg
testl
sbb
inc
fmulp
in
adc
sahf
notl
and
jno
xchg
icebp
cmp
std
subb
mov
test
lea
sbb
pop
push
popl
fs
add
and
ja
dec
adc
cmp
and
xchg
lods
jle
movsl
or
mov
jmp
call
adc
in
dec
lahf
test
mov
jno
mov
push
lods
leave
and
lret
shr
hlt
jge
loopne
imul
icebp
fwait
mov
and
mov
and
cltd
in
sahf
mov
enter
shlb
mov
cmp
xchg
sub
rorl
sub
jne
lods
fistps
xor
jo
fwait
cltd
cmp
rcrb
les
pop
sbb
pusha
repnz
push
mov
cmpsb
mov
inc
lret
xchg
sti
push
loop
jecxz
ja
jge
fdivrs
jno
call
rolb
test
xchg
shl
inc
or
scas
jbe
sahf
adc
mov
sub
sbb
xor
fimull
cld
call
adc
fcmovu
test
adc
into
cmpsb
mov
jmp
fcoml
cli
movsl
popl
fnstsw
jmp
ljmp
mov
add
aad
add
jl
mov
mov
int3
cmp
cmpb
fwait
sbb
icebp
sbb
inc
sti
sub
inc
in
arpl
adc
sbb
mov
mov
mov
inc
mov
cmp
mov
sahf
fcmovnb
hlt
adc
jae
jno
sub
xchg
imul
movsb
dec
xlat
or
xor
mov
inc
push
repz
push
xor
mov
lcall
into
mov
std
jbe
and
inc
scas
pop
lcall
push
jne
fadds
rcr
int
lods
lret
xor
add
sub
addr16
dec
fs
and
arpl
stos
xchg
jnp
nop
pusha
sarb
inc
jge
cmp
and
mov
mov
sbb
adcb
jb
test
sahf
mov
nop
xlat
and
icebp
pop
cmp
fsts
popa
mov
movsb
repnz
sahf
std
in
lcall
mov
ret
mov
addr16
test
movsb
add
pop
jb
jl
ret
shrl
inc
les
test
xchg
out
call
and
sbbb
cmc
loopne
sahf
mov
out
jb
cld
lret
xor
inc
popa
mov
outsb
dec
inc
mov
daa
enter
cmc
mov
or
outsb
jge
aam
add
in
add
test
inc
and
test
mov
mov
mov
lods
fwait
push
in
aaa
stos
adc
das
or
lret
xchg
sbb
fdivl
dec
dec
dec
jmp
das
lcall
leave
addl
hlt
sub
popa
push
adc
dec
movsb
mov
xchg
xor
pop
mov
fstps
mov
push
or
in
fdivp
jp
jle
movsl
rorb
add
cmp
or
pop
je
sub
push
mov
mov
mov
push
pop
fcoml
in
lods
stos
jns
xchg
out
test
mov
les
fstl
call
sahf
sti
cmpsb
icebp
push
std
imul
dec
mov
mov
pop
lds
ret
sahf
pop
dec
xchg
adc
fucom
pop
sbb
add
mov
dec
scas
push
mov
and
push
jb
lret
xor
jbe
aaa
inc
icebp
pop
arpl
aaa
std
xchg
lahf
push
enter
sbb
packuswb
lea
add
or
jbe
stc
push
cmp
push
lds
mov
stos
dec
lds
pusha
pushf
jmp
popa
sbb
stc
out
lock
xchg
and
mov
mov
push
lret
fldt
and
out
nop
xchg
outsl
dec
inc
xchg
pop
sbb
mov
and
xor
xor
sub
inc
mov
mov
rcl
cmp
sub
stc
sbb
add
jne
mov
aad
inc
pushf
sbb
or
insb
test
dec
js
out
xchg
sbb
jne
test
mov
pop
loopne
jnp
js
insl
pushf
xchg
data16
clc
pusha
enter
arpl
je
int
cmc
jbe
bound
loop
mov
ds
inc
pusha
push
pop
cmpsl
fdecstp
negb
fcompl
fwait
mov
push
mov
cwtl
cmp
add
mov
pop
repnz
mov
shlb
stos
test
inc
scas
jnp
cmpsb
adc
dec
xchg
cwtl
int
xchg
xchg
xchg
or
int
jns
repnz
lcall
cmp
mov
bound
stc
jns
and
fs
jle
xor
xor
sbbl
mov
scas
mov
fisttpl
test
imul
pushl
sbb
ds
syscall
in
ds
aam
lret
mov
in
loopne
xchg
xchg
mov
insl
cmc
mov
jnp
add
int3
or
cmp
mov
mov
test
loope
out
popf
bound
inc
mov
test
data16
mov
inc
mov
or
out
sahf
nop
stos
cmc
sti
and
enter
leave
cltd
ficoms
mov
lret
mov
inc
add
lods
imul
push
add
adc
cli
sbb
data16
in
and
fwait
mov
sub
adc
fucomip
std
into
ss
les
test
iret
clc
push
mov
push
push
fldcw
fiaddl
sub
icebp
xor
xor
and
mov
mov
cltd
call
and
sub
pop
outsl
push
inc
aaa
sub
push
inc
cmc
inc
inc
popa
inc
and
inc
push
into
dec
mov
cmp
je
ficoms
or
mov
rcrl
mov
mov
popf
leave
sti
inc
leave
add
xorb
int3
pop
out
inc
mov
fcmovnb
xor
in
adc
add
jae
xchg
enter
cs
lods
jmp
jle
divb
rcrl
scas
sub
iret
insb
cmp
add
andl
test
rcrb
fcoml
imul
imul
lods
jp
ret
mov
dec
mov
bound
adc
jg
and
inc
scas
adc
pop
jg
cmp
das
stos
mov
data16
xchg
ror
sub
lret
aas
mov
test
data16
lds
jle
ljmp
cli
jle
outsl
ljmp
sarl
adc
mov
inc
fldcw
out
es
pop
es
mov
test
cmpsb
fmuls
cmpsl
or
dec
fisubl
ret
dec
fnsetpm(287
and
pop
or
or
stc
push
repz
arpl
xchg
add
push
and
pop
pop
inc
adc
cltd
scas
push
addr16
xor
fcomps
inc
lea
or
sub
bound
add
pop
pop
fidivs
mov
pop
xchg
mov
mov
call
lret
xor
jge
xor
sub
sbb
fcoms
movsb
into
popw
repnz
xchg
xlat
sbb
pop
sub
xor
out
lds
push
paddq
fs
inc
dec
gs
xlat
pop
push
jns
aad
dec
fidivl
stc
cmp
adc
rorb
xor
mov
jne
mov
inc
popl
nop
dec
xor
outsb
xor
push
cmp
inc
add
int3
sub
dec
jns
inc
jno
dec
cmp
adc
sub
push
mov
jp
out
addr16
enter
nop
pop
dec
test
push
add
dec
fwait
cwtl
cmp
psubd
std
pushf
xchg
bound
ficoms
cs
ljmp
mov
int
cmp
xchg
je
mov
add
cmc
xor
inc
mov
jno
stc
mov
push
test
test
das
mov
cld
loopne
dec
scas
push
xor
loop
or
cmp
mov
shlb
inc
push
cmp
outsl
or
sbb
mov
or
aad
aas
mov
dec
les
xchg
jge
divl
hlt
inc
push
inc
add
sbb
stos
mov
test
push
cmpsl
int3
xchg
repnz
ss
mov
ja
int
aas
jecxz
lods
jmp
cmpsb
mov
pop
or
mov
inc
xchg
daa
cmp
out
cmc
adc
data16
mov
mulb
xlat
and
out
insb
int
cmp
or
adc
leave
shrl
dec
inc
pop
inc
inc
push
dec
add
cmpsb
aas
or
lds
push
pop
popf
out
sbb
mov
test
out
xchg
and
dec
push
sub
inc
xor
and
ret
cmpsb
mov
pop
dec
hlt
push
shlb
jg
ljmp
dec
push
sub
pop
xor
mov
or
pushf
scas
xchg
data16
inc
call
jl
jbe
cmp
sub
mov
loop
jmp
mov
add
fisubl
scas
xchg
mov
loopne
or
sti
jecxz
push
pop
adc
sub
lods
lahf
lcall
inc
push
add
outsb
xor
mov
sti
sbb
shrb
mov
cmp
adc
mov
sahf
dec
stc
out
movsb
vandps
shrl
cmpsl
aaa
cwtl
push
lret
inc
cld
push
sub
jmp
and
pop
in
lcall
adc
cmc
rclb
and
popf
pop
pop
mov
xchg
sub
pop
cmp
rorb
bound
out
std
inc
inc
lods
shlb
rcrb
adc
mov
sbb
inc
and
sbb
dec
adc
stc
pop
sub
add
dec
test
xchg
scas
xor
xchg
arpl
dec
sbb
inc
mov
jae
sub
int
adc
dec
test
push
xchg
and
lods
mov
nop
sbb
jae
pop
pop
mov
adc
and
add
mov
mov
push
fstpl
fimull
or
loope
pop
iret
in
lods
mov
push
cs
sub
aas
mov
push
mov
popa
inc
hlt
push
pop
je
dec
dec
into
cmp
out
xchg
fimuls
sahf
and
sub
xchg
outsl
and
or
mov
lock
mov
push
dec
mov
orb
mov
lret
mov
in
inc
int
sbb
inc
sti
pushf
jno
inc
add
pop
mov
aad
decl
into
scas
lods
or
xor
mov
xchg
lds
xchg
das
and
fld
insl
and
rorl
rolb
inc
push
rcrl
and
inc
cmp
hlt
loopne
dec
cmp
mov
stos
xor
jl
arpl
jle
fdivl
push
dec
inc
jno
xor
mov
and
scas
push
negl
push
imul
fists
sbb
ja
cmp
pop
mov
cli
dec
popa
scas
inc
xchg
rep
adc
aaa
stos
mov
and
inc
and
test
iret
adc
ret
outsl
dec
div
fisubs
dec
push
mov
hlt
fwait
push
mov
in
jbe
add
mov
pop
lock
and
cmpl
arpl
push
push
mov
stos
mov
sarb
adc
movsl
mull
fbld
jmp
add
sar
les
lea
mov
mov
dec
fsub
xchg
sbb
mov
movsl
pop
insb
inc
add
stc
cmpsl
inc
inc
add
jg
push
loopne
in
shlb
out
push
int
xchg
fisubrs
and
repnz
sub
jl
pop
push
data16
or
lcall
mov
jl
dec
imul
mov
aas
sub
mov
push
jle
xchg
scas
rolb
mov
in
pop
or
iret
sbb
push
aas
mov
inc
cli
bound
cmp
or
imulb
xor
sub
rorb
inc
mov
iret
nop
fsubrl
aam
int
xchg
test
cli
lods
test
mov
cmp
scas
lret
daa
fldt
inc
pop
dec
lahf
adc
enter
push
mov
xchg
pop
mov
out
mov
movsb
sub
sub
sarb
adc
or
cmp
pop
xchg
test
xchg
mov
pop
sar
push
or
and
xor
aad
push
pushf
mov
call
mov
xchg
div
push
mov
pop
inc
aad
pop
jmp
jbe
icebp
jae
sar
in
or
add
aad
push
popa
leave
pop
rcrb
jns
and
lds
enter
loope
sbbl
mov
enter
arpl
int
sub
xchg
xor
in
les
dec
cmp
sbb
inc
movsb
fisubs
mov
lcall
xchg
jo
cmpsl
and
repz
adc
dec
inc
shlb
adc
xor
pop
push
dec
cmc
cli
flds
rclb
and
stos
cmp
cmp
mov
inc
adc
adc
cmp
test
sbb
mov
sbb
inc
fmull
fcmovnb
jns
inc
dec
data16
pop
jmp
mov
jb
sbb
pushf
and
flds
xchg
out
add
mov
cli
mov
xor
cmp
frstor
inc
cmpsb
jne
inc
adc
mov
fwait
mov
sar
shrb
push
popf
xor
xor
cmpsb
xchg
xor
push
flds
fucomi
loopne
psubsb
or
pop
add
jb
mov
pop
addr16
adcl
cwtl
adc
fidivrl
pop
jne
mov
mov
imul
repz
ficomps
mov
mov
cmc
sti
xchg
test
inc
imul
mov
and
icebp
cmp
fisttpl
pop
gs
or
jno
pop
aas
call
lds
test
mov
div
xorb
cwtl
outsl
xchg
sarl
mov
xchg
lods
imul
sbb
xchg
pop
dec
pop
adc
scas
loop
pusha
push
or
std
dec
ja
xchg
adc
fistpll
dec
test
sbb
xlat
cmp
push
call
mov
push
movsl
and
mov
shrl
in
jb
leave
and
cmpsb
jnp
sbb
shl
popa
adc
inc
push
adc
icebp
mov
sahf
mov
movsb
jge
jns
sbb
lds
fdivrl
outsl
fisubl
adc
test
and
cmp
jb
cmp
adc
loope
jb
aam
out
lret
sbb
push
es
pusha
and
xchg
cmp
adc
inc
cmp
loopne
call
push
inc
int3
fldz
xchg
aad
bound
push
pop
cmc
int3
in
imul
xchg
xchg
cmp
add
pop
in
jnp
lahf
sbb
fiadds
sub
scas
jmp
push
inc
inc
xchg
lea
inc
or
sbbl
xchg
push
xchg
or
xor
aam
ja
mov
repz
dec
dec
rcrb
fnstenv
iret
leave
ss
roll
loop
fadd
jb
sub
arpl
rcrl
mov
sarb
out
cmp
xchg
faddp
idivb
pop
ret
or
push
mov
xor
lret
loope
std
cltd
xor
push
pop
push
in
mov
dec
int
into
cli
jl
out
push
pusha
mov
dec
or
mov
mov
jp
outsb
dec
cmc
ret
gs
jo
test
mov
andb
pop
leave
loope
fnstcw
cs
pusha
mov
test
stc
and
sbb
ja
loopne
cmp
mov
cmc
inc
insb
mov
in
pop
in
in
das
push
jns
test
in
pusha
add
out
aad
fdivp
jns
sub
adc
aaa
or
mov
das
pop
les
push
stos
inc
arpl
pop
lds
mov
outsl
lea
jbe
jge
sti
mov
clc
aad
mov
aaa
sbb
clc
outsl
ret
push
sahf
xor
mov
jo
mov
inc
mov
andl
push
in
inc
in
and
cwtl
cs
int
rcrb
les
inc
or
pop
ja
bound
dec
add
out
pusha
test
lcall
sub
mov
fnstenv
pop
add
out
std
push
test
cld
dec
mov
inc
shlb
sbb
sbb
nop
test
pusha
xorb
stc
sbb
sbb
push
mov
hlt
inc
jnp
subl
cmp
cmc
push
je
sub
aad
icebp
xor
push
mov
pop
add
xor
sarl
loopne
int
sbb
cmp
sbb
leave
aaa
int3
daa
mov
int3
jle
mov
mov
mov
movsb
adc
push
mov
cld
repnz
push
arpl
xor
inc
and
test
cmp
add
and
out
and
xchg
mov
xchg
cs
cmpsb
pop
inc
mov
and
push
in
ljmp
cltd
movsb
ds
add
mov
lahf
pop
add
jmp
cli
mov
sub
icebp
test
jo
incl
lds
lea
int3
cmc
sub
and
pop
cwtl
mov
xor
cmpsl
imul
popl
imul
out
fidivrl
jl
add
jp
jecxz
and
xor
imul
pop
mov
pop
cs
repz
and
mov
fs
mov
push
in
imull
push
xor
xchg
push
aas
xor
pop
data16
shrb
test
jg
ds
push
xlat
cmpsl
push
inc
xchg
pop
enter
mov
out
clc
mov
push
insb
xlat
stos
ret
and
xchg
addl
jmp
mov
jae
cld
inc
mov
sbb
jns
daa
rcr
mov
sarb
jle
in
dec
lahf
out
loop
mov
fsubs
call
push
jae
pop
jb
fcomps
mov
mov
cltd
cmp
add
in
mov
jmp
add
inc
loope
mov
call
call
rcll
dec
sbb
inc
ficompl
jo
cmpsl
aaa
lahf
rcrl
pop
nop
sub
in
pop
pop
hlt
adc
mov
inc
mov
push
add
or
lahf
stc
icebp
jp
sub
mov
add
mov
and
pop
push
dec
cmp
cs
loopne
add
lods
pop
insl
adc
ret
jbe
cltd
push
cwtl
repz
mulps
cmp
and
push
inc
inc
jbe
data16
cld
repnz
sub
sub
push
pushf
cs
ss
xchg
cmp
ljmp
xlat
sbbl
scas
and
cwtl
imul
fiaddl
jp
cmpb
cmp
jno
xor
jmp
pop
cmp
test
arpl
mov
cmp
push
scas
pop
sub
addr16
in
xchg
inc
shll
xchg
sbb
cmp
test
jbe
je
sub
and
in
dec
adc
and
outsl
pop
faddl
neg
fiaddl
adc
stos
xor
dec
mov
or
inc
mov
lds
lret
in
ja
and
popa
xor
xor
xor
lds
popf
mov
notl
mov
cmp
icebp
add
push
inc
or
rcll
sub
xchg
mov
mov
fistl
sub
stc
imul
repz
dec
es
popf
icebp
mov
shll
sub
cltd
cmpsl
mov
lods
pop
push
xor
mov
lods
mov
cmpsb
or
add
aam
data16
cmp
xchg
idiv
mov
ret
inc
mov
ds
xor
jmp
push
or
mov
xchg
stos
push
decl
inc
push
popf
sub
push
sub
test
cwtl
lds
hlt
mov
mov
fsubrl
sarb
iret
pop
je
add
mov
fistl
mov
loop
jge
inc
mov
xlat
fucomp
outsl
jl
mov
push
sbb
imul
cmpsb
ds
cmpsl
movsl
jmp
add
into
pop
pushf
add
int
dec
or
std
adc
mov
aam
mov
ss
out
lea
dec
inc
mov
dec
loope
sbb
cmpsb
mov
mov
icebp
dec
mov
ds
cld
mov
sbbl
enter
aam
xchg
cmpsb
ja
mov
mov
loop
mov
cmp
pop
cmc
jae
addl
int
idiv
add
adc
xchg
dec
in
bound
flds
jnp
cwtl
push
xchg
xchg
iret
das
cld
add
push
in
xchg
iret
add
out
movsb
out
std
in
out
jno
std
data16
rorb
stos
xorl
test
insl
outsb
in
ret
pushf
jnp
xor
push
jp
lcall
mov
mov
aam
call
lods
push
loop
xchg
gs
mov
jle
xor
std
stos
and
jp
mov
fldl
pop
add
mov
fadds
orb
or
int3
xor
imul
fs
into
mov
and
data16
xorl
dec
movsb
add
mov
sbb
adc
jnp
pop
hlt
mov
aaa
mov
loopne
sbb
sbb
cmc
pop
mov
or
aaa
and
rorl
fmul
sbb
stc
fstpl
iret
xor
mov
popf
popa
and
inc
into
xor
imul
mov
cmova
mov
test
arpl
push
imul
pushf
or
popf
mov
ss
mov
mov
pop
cmp
movlps
cld
loope
loopne
jns
movsl
sub
sahf
jb
out
repnz
push
xchg
inc
les
scas
inc
jne
dec
std
dec
ja
ds
stos
dec
adc
jmp
lcall
bound
stc
push
idivb
xor
ret
jle
adcb
in
pop
mov
push
mov
in
aam
xlat
data16
mov
imul
in
push
mov
push
ds
sub
push
xor
mov
sahf
lret
jl
hlt
sbb
bound
xor
leave
iret
fisubrl
lea
lahf
ss
cmp
sub
fs
jecxz
filds
xchg
scas
mov
push
push
inc
orb
mov
xor
int
cmpsl
fs
pop
lods
jo
cmp
cmc
jbe
leave
rorb
push
sbb
cmp
lods
inc
test
cmp
push
in
fstl
outsl
lods
movsb
cmc
cmp
nop
test
jle
scas
loopne
mov
xor
pop
pop
adc
or
insl
sahf
cli
mov
sahf
lds
push
rol
popf
cmp
mov
enter
push
cmpsb
jbe
add
add
or
js
dec
movsb
jnp
repz
push
fucomip
testb
jp
mov
mov
add
adc
or
popf
or
clc
lcall
pop
adc
cmc
pop
adc
mov
sbb
cmp
sub
in
scas
push
loopne
push
inc
or
push
cmp
mov
cli
fwait
jno
jl
or
sti
pop
xchg
pop
xchg
ljmp
sbb
cwtl
outsb
imul
cld
scas
mov
pop
sti
pop
in
stos
pop
aam
xor
cld
aas
out
mov
mov
xor
push
push
pop
cmc
outsb
xlat
sub
fnstcw
push
or
cmc
sti
pop
adc
jno
fwait
into
stos
push
pop
fdivrl
test
pop
xor
inc
sbb
mov
mov
xchg
sub
in
mov
push
dec
clc
adc
loop
lret
sub
sub
sbb
and
cwtl
mov
in
nop
sahf
imul
roll
mov
inc
pop
xchg
ficompl
addr16
mov
outsl
fdivrs
xorb
movsb
fstpt
mov
and
lods
mov
out
shr
stos
enter
fdivrl
cs
notl
arpl
shll
add
pop
push
pop
lods
ljmp
mov
pop
imul
cltd
int
aad
jbe
arpl
cmp
loop
push
sbb
xor
cmpb
cmp
shll
test
sub
cmp
mov
inc
loop
std
insl
pop
sbb
or
dec
fistpll
jmp
dec
in
sub
das
out
pop
sub
flds
out
imul
xor
mov
dec
mov
popa
push
inc
sbb
mov
shl
sbb
nop
push
or
inc
adc
sub
sbb
jnp
dec
mov
fsts
and
cli
xchg
sbb
xchg
rcll
pop
push
pushf
ja
inc
rorl
and
test
mov
jns
rep
pushf
movl
xchg
sbb
repz
mov
sub
sub
dec
push
jmp
fcomps
ret
pop
add
icebp
stc
push
inc
jge
fadds
lret
push
xchg
out
std
inc
xchg
insl
mov
dec
adc
popf
adcl
dec
xlat
cli
cs
jne
inc
sub
xchg
negb
pop
push
pop
aaa
jge
stc
jne
pop
lret
xchg
mov
mov
push
inc
out
mov
inc
in
fwait
insl
add
or
into
lods
or
mov
jae
mov
mov
inc
pop
sbb
or
outsb
iret
mov
addr16
jl,pt
clc
push
nop
push
push
jl
jle
out
pop
fst
push
push
or
xor
fcomip
mov
inc
filds
out
enter
pop
jae
popf
sbb
and
xchg
xchg
leave
mov
sub
or
lea
rcrb
and
es
hlt
roll
push
add
mov
mov
cmp
xchg
mov
mov
fisubrs
cmp
jb
jae
mov
mov
hlt
sbb
imul
test
cmp
stc
fidivs
fstpt
ds
shrl
xchg
jmp
inc
fisubl
dec
jbe
in
push
lcall
jb
addr16
lcall
sub
inc
jp
jg
pop
xlat
daa
in
add
lock
mov
jl
sysexit
enter
xchg
jp
mov
aam
aad
mov
sbb
lcall
cmpsb
mov
mov
and
xchg
es
and
outsl
mov
or
push
mov
cli
xchg
push
push
xorl
loope
pop
sub
inc
mov
rclb
dec
into
xor
inc
in
pusha
pop
and
ljmp
push
lahf
je
stos
jns
fs
ds
jle
mov
mov
adc
pusha
cmpsb
in
sbb
dec
adc
mov
dec
mov
dec
fs
push
add
shlb
or
adc
testb
mov
aas
dec
int3
mov
and
into
je
scas
pushf
shll
add
test
outsl
sub
jns
in
push
xor
or
push
pop
cld
cli
inc
movsl
out
adc
std
aaa
gs
loope
loop
push
mov
push
cs
inc
xor
pop
daa
addl
repz
cmp
cmp
repnz
mov
jbe
lret
or
inc
add
int3
out
push
and
xchg
push
in
jb
inc
mov
dec
mov
clc
dec
stos
xorl
mov
bnd
mov
jb
mov
lret
push
mov
in
sub
fwait
push
aaa
push
mov
shr
inc
add
jecxz
imul
or
dec
mov
inc
inc
insb
mov
xchg
xor
cmp
dec
mov
push
aas
push
xchg
jne
inc
in
sub
stc
lea
sbbl
mov
cmpsb
jae
mov
icebp
and
cmp
add
cmp
push
xchg
lret
pop
imul
cmpsl
or
call
and
negb
popa
das
or
aas
movsl
mov
movb
jle
ljmp
or
std
pop
or
je
xchg
clc
cmpsl
shll
jb
ds
pop
sbb
mov
scas
jno
inc
pushf
or
mov
rcl
or
imul
lcall
data16
cmpsl
xchg
mov
subl
mov
adc
add
add
push
xchg
pop
out
outsl
hlt
stc
out
push
popl
pushf
jp
xchg
out
fldenv
mov
mov
sub
les
and
loop
shr
sbb
rclb
cmpsl
pushf
mov
sub
cmp
sarb
lods
mov
add
add
add
lock
outsl
clc
cmp
div
icebp
mov
imul
gs
fs
sub
xchg
mov
aaa
push
xchg
iret
sbb
mov
add
das
add
adc
sub
ret
xchg
in
rclb
mov
push
ss
add
int
ja
call
cmc
push
shlb
shll
iret
ficoms
push
jg
sub
ljmp
sbb
je
mov
test
mov
mov
sahf
xor
mov
pop
leave
inc
ja
and
je
ljmp
pop
iret
fldl
pusha
mov
cmp
cli
lahf
insl
pop
dec
and
in
jle
fwait
test
in
and
mov
dec
push
imul
add
gs
pop
repz
addb
inc
test
and
pushf
sbb
testb
ret
pop
sub
test
jecxz
ret
or
inc
pop
xchg
add
jbe
fcoml
cmp
push
outsl
mov
stos
sub
stos
sub
cs
pop
or
pop
mov
movsl
cltd
or
dec
cli
mov
jg
test
mov
outsl
mov
imul
push
mov
jbe
fidivrl
push
mov
and
or
add
fs
fstpt
jp
xchg
xor
repz
js
dec
cmp
push
popf
xor
xchg
dec
push
and
in
std
cld
and
xlat
iret
pop
or
or
stos
in
sub
cmp
fildl
xchg
sbb
les
mov
push
das
xchg
movsb
mov
in
ret
xchg
xchg
xchg
aam
push
and
stos
dec
in
add
addr16
jb
push
jmp
adc
fstpt
push
xor
aam
sub
xor
fsts
bound
out
test
jno
and
daa
sub
rorl
out
sbb
scas
lret
out
leave
pop
cmp
add
int3
jnp
cltd
pop
sbb
call
mov
adc
int
lret
cmp
dec
sub
sub
adc
mov
mov
mov
mov
and
fwait
and
enter
call
fwait
inc
adc
add
ss
add
add
lret
add
mov
insb
mov
out
xor
xchg
add
rcrl
shl
sub
lcall
lret
rcrl
or
or
jmp
outsl
js
scas
inc
cmp
pusha
push
pusha
mov
sahf
dec
cmp
or
imul
lret
test
pop
fcoml
icebp
mov
mov
daa
push
add
cmp
and
add
pop
cld
xor
push
aad
jb
enter
mov
add
aas
cltd
sti
xchg
subps
pop
jbe
inc
mov
stos
pop
or
ficomps
mov
push
popa
xchg
loop
pop
adc
inc
inc
jno
loopne
xchg
or
and
push
xor
out
jnp
rcr
dec
pop
in
adc
in
testl
das
add
addr16
je
and
cmpb
xor
add
int3
sbb
mov
dec
pop
hlt
andl
lock
sti
popf
pop
mov
push
and
popa
sub
mov
jecxz
add
jns
sbb
xor
negb
mov
sbb
fcompl
xchg
xor
add
lret
mov
clc
and
loop
lds
jle
mov
sbb
add
adc
and
mov
xorl
dec
sub
ror
sbb
inc
xorl
leave
fdivs
mov
nop
xchg
shlb
mov
lret
dec
movsl
push
cmc
mov
jns
adc
pushf
push
or
dec
jb
pusha
mov
and
jnp
push
xchg
mov
js
jg
push
test
push
out
ljmp
cmp
cmp
and
test
int3
iret
sub
ja
cmp
pop
inc
das
rcll
or
lcall
cmp
fwait
mov
add
mov
dec
lds
xor
mov
adc
mov
fidivl
hlt
mov
test
pop
adc
das
das
jmp
dec
inc
xchg
insb
sbb
mov
pop
push
mov
xlat
dec
lock
ds
cmp
daa
shll
and
push
sub
int3
loopne
movsb
sbb
cmp
bound
les
push
icebp
in
mov
arpl
adc
or
adc
cmp
cli
pushf
dec
stos
or
leave
add
ds
xor
sbb
mov
adc
push
gs
dec
mov
test
jge
sub
xchg
xor
test
add
fldl
insl
sbb
push
out
mov
lods
idivl
sbb
xchg
jb
repnz
and
popa
popa
mov
and
outsl
sub
mov
or
mov
sub
fwait
in
xchg
clc
jo
jnp
out
xor
test
mov
mov
icebp
stc
lods
mov
das
jp
in
dec
pop
cli
je
leave
scas
aaa
les
sbb
pop
jbe
inc
cmc
ljmp
imul
daa
cwtl
xor
stos
xchg
add
inc
mov
dec
mov
lods
or
sub
out
jmp
push
push
adc
sub
mov
jl
jmp
or
test
fwait
inc
lahf
and
add
or
lock
testb
xlat
mov
push
mov
gs
xchg
jnp
lahf
ja
leave
push
jg
cmp
cmp
fbld
mov
pop
cltd
mov
xchg
xchg
pop
outsl
addr16
stos
lcall
inc
js
lret
push
add
or
inc
ffree
xor
add
pop
ja
das
xor
sbb
jg
pushl
lock
stos
jge
jmp
lods
xor
sbb
dec
xchg
or
cli
adcb
js
jmp
mov
aaa
repz
push
inc
hlt
or
fidivrs
xlat
out
cmp
jbe
mull
insb
pushf
add
xchg
scas
mov
ficomps
push
mov
icebp
inc
push
ja
mov
pop
mov
mov
pop
or
xchg
das
das
outsb
insl
cmpsl
push
addl
in
popa
js
adc
mov
mov
fwait
bound
xchg
dec
jp
lds
push
loope
sbb
dec
sub
inc
shl
add
out
cld
lahf
mov
insl
sarl
aam
inc
cwtl
jle
outsb
dec
jne
arpl
lds
stos
stc
bound
pop
push
pushf
call
mov
jge
aad
jnp
loop
es
add
addr16
push
xchg
in
in
pop
jl
dec
push
xor
shlb
xchg
daa
test
mov
popa
movsl
clc
dec
mov
out
mov
sub
push
inc
pusha
push
xor
mov
lods
aaa
inc
fimuls
ds
aad
cmp
nop
and
cld
insb
insb
add
movsl
adcl
pop
sahf
jg
adc
out
jmp
stos
mov
add
sar
in
xor
lret
jecxz
sti
aam
mov
mov
push
xchg
ret
mov
das
ss
sub
and
jno
fidivrl
dec
sbb
mov
inc
sub
popf
stc
sub
adc
or
aam
dec
sub
cltd
mov
push
lret
arpl
push
mov
fisttps
adc
mov
iret
sbb
add
dec
inc
pop
push
movsl
mov
outsl
lds
loopne
out
xor
sbb
inc
lods
push
dec
sbb
pushf
imul
cltd
mov
in
sub
dec
in
jnp
ficoml
popa
push
cs
adc
icebp
mov
mov
ret
jo
inc
leave
xor
into
enter
icebp
push
jne
es
push
push
sbb
nop
jns
and
stos
repnz
incb
mov
jge
sbb
mov
mov
xor
add
movsb
scas
mov
add
jns
adc
mov
lahf
loopne
or
ja
mov
pop
aas
adc
mov
aam
push
and
cmp
inc
int3
mov
fcmovb
adc
sti
dec
pushf
dec
push
push
xchg
test
and
lret
dec
pushl
out
lea
jl
sbb
ret
cmp
pop
dec
mov
lahf
ljmp
test
adc
xchg
loop
mov
and
and
rcl
icebp
sbb
or
or
ds
fstp
inc
fucomp
popa
fs
leave
adc
outsl
pop
mov
fwait
xchg
cmp
fisttpll
imul
es
cmp
cltd
lahf
outsb
pop
stos
cld
int
lcall
mov
push
pusha
jo
push
js
fidivrl
push
push
call
into
shlb
xchg
xor
jl
push
push
adc
push
adc
ret
jg
ja
push
push
fisubrl
test
lret
orb
lret
call
sub
dec
loopne
gs
inc
jns
shll
pusha
ficompl
neg
lret
stc
cli
sbb
das
adc
inc
cmpsl
add
out
hlt
cs
add
es
adcb
test
mov
dec
xchg
or
inc
jne
pushf
mov
jno
mov
or
clc
add
mov
add
mov
mov
mov
adc
sbb
mov
sub
xchg
aaa
lods
ret
cmp
mov
imul
sbb
and
dec
repz
imul
out
mov
or
pop
push
aas
fs
pop
mov
in
ret
or
and
cmp
leave
imul
xchg
xchg
add
pop
sarl
jbe
push
push
nop
mov
xchg
les
fcompl
sbb
popa
cld
lret
push
mov
ds
int3
ficompl
std
pop
test
fsubrs
aas
push
clc
adc
imul
dec
sub
jne
arpl
and
jo
fs
call
sbb
sahf
mov
pop
lret
push
pop
clc
scas
in
clc
and
int
clc
cwtl
push
pop
lods
aad
gs
jno
jo
dec
lea
inc
aam
push
out
mov
adcb
addr16
imul
in
xchg
aad
cwtl
mov
arpl
int3
xchg
push
xchg
push
push
or
pop
xor
mov
addb
push
sub
mov
loop,pt
pop
sbb
dec
xor
mov
fsubs
fistpl
movsbl
fdivr
popfw
xchg
jo
push
push
add
jp
sbb
fbstp
orl
fsubs
mov
mov
fwait
adcl
jns
pushf
and
lret
push
imul
sbb
rep
rorl
pushf
fadds
sub
dec
mov
xor
cmp
dec
pop
sti
inc
cmpsl
and
xchg
mov
dec
mov
adc
xchg
jl
fstl
jns
mov
mov
inc
add
sbb
popf
nop
mov
lea
pop
and
mov
lcall
jg
mov
inc
add
jne
aad
stos
lods
or
jecxz
inc
stos
sub
mov
add
ret
sub
mov
sbb
ds
xlat
and
rorb
or
paddsb
inc
pop
lcall
jecxz
stc
mov
das
mov
or
insl
dec
jmp
xor
jns
movntq
push
addr16
aam
das
jge
test
out
in
jl
xchg
mov
push
lds
movsb
test
ror
add
in
and
lcall
data16
js
pop
sbb
addb
xchg
pop
xchg
pop
loop
push
fistps
adcl
dec
iret
push
inc
ret
xchg
pop
mov
stc
sub
push
cmp
insl
in
daa
dec
inc
push
andl
mov
push
lea
ja
insl
ja
xchg
sahf
rclb
jae
pop
clc
mov
xchg
or
out
dec
or
xchg
mov
or
dec
ds
mov
push
pushf
scas
pop
call
fsts
fwait
mov
out
adc
xor
es
xchg
ror
lds
mov
mov
xor
sbbb
mov
subb
cmp
js
jo
sti
cmp
ja
in
movsb
sti
int3
out
xlat
xchg
icebp
cwtl
jno
jo
out
lret
xchg
dec
hlt
and
stos
out
jp
push
stc
xor
jbe
mov
and
xor
cmp
or
mov
jg
mov
leave
mov
ret
add
int
data16
xlat
push
aad
aam
dec
in
fwait
mov
pop
lea
call
nop
jbe
mov
testb
mov
fisubrs
sbb
movsl
lock
jmp
enter
mov
pushf
hlt
pusha
adc
cmpsb
xchg
push
or
sub
lea
jo
pop
stos
add
and
xchg
and
xor
xchg
and
inc
scas
repnz
js
cmp
dec
cmpsb
push
je
mov
in
sbb
add
lahf
aaa
and
mov
ds
mov
out
and
clc
mov
pop
mov
test
aam
repz
lods
xchg
notb
xchg
cmpsl
loopne
and
jecxz
mov
xchg
cmpsb
mov
sub
jb
enter
nop
xchg
dec
push
cmp
data16
sar
ss
or
and
outsb
and
mov
push
shlb
int
aam
mov
add
icebp
jmp
out
or
pop
rorl
aad
mov
movsb
sbb
adcl
into
adc
pop
push
push
dec
icebp
and
add
ret
push
dec
and
into
mov
add
sbb
and
out
mov
icebp
adc
test
andps
and
adc
repz
pushf
xchg
movl
push
lahf
xchg
cli
cmp
mov
gs
cmpsl
call
mov
xor
xor
push
sti
xor
sbb
lret
std
mov
sbbb
aas
loope
mov
out
xor
bts
xchg
imul
cmp
push
daa
loope
enter
cltd
xchg
outsl
ds
xlat
pop
repnz
jns
cmp
pop
jnp
pushf
jge
jecxz
pop
movsb
aam
adc
test
lret
int3
xor
pop
push
out
mov
stos
xor
and
cmpsb
xor
arpl
sub
push
cli
cmpsl
shr
push
sbb
mov
sarl
movsb
jnp
add
sahf
cld
mov
xchg
aad
mov
cmc
mov
jecxz
leave
xor
idiv
insl
cld
stos
pop
jmp
and
data16
cmp
mov
adc
lock
je
adc
sub
push
hlt
cmp
or
fldl
xor
stc
dec
fxch
jae
out
rolb
mov
inc
mov
sbb
stos
or
int
test
xchg
pop
mov
xor
pop
mov
pop
or
cmp
mov
jnp
dec
mov
pusha
sbb
mov
xor
loopne
shr
fnstsw
cmp
stos
mov
sub
xchg
mov
clc
in
outsb
or
addr16
jo
loopne
inc
dec
pop
or
test
fucom
jns
mov
shll
mov
xchg
into
dec
jmp
lcall
mov
and
inc
cmp
cmp
push
inc
inc
sbb
outsl
not
pop
pop
cld
xchg
cwtl
or
fwait
inc
inc
jne
xchg
dec
mov
leave
xchg
mov
xor
aam
add
pop
dec
jno
fdivr
in
aam
push
orl
cld
out
fxch
adc
add
lock
cltd
pushl
popa
xchg
out
pop
add
and
shrb
into
jne
or
fistpll
mov
mov
fdivrl
into
cltd
and
push
xchg
rcrb
shlb
ljmpw
jne
data16
inc
and
test
sbb
out
adc
loopne
sub
int3
mov
or
pop
sahf
les
inc
and
adc
mov
lods
add
data16
out
stos
lret
popf
inc
scas
sub
push
jg
cwtl
test
sub
inc
addb
clc
inc
cmp
sub
pop
out
aas
sbb
xchg
in
xchg
nop
jo
sbb
inc
add
fildll
inc
aad
or
xlat
cmp
stos
pop
movsb
push
fs
rcrb
mov
inc
dec
adc
test
leave
shrb
add
jecxz
ds
sbb
pop
sbb
add
xor
nop
rcrb
xchg
inc
sbb
mov
out
sbb
jp
out
sbb
dec
sbb
lea
cmp
pop
out
sar
loop
scas
fsubl
xor
je
sub
xlat
xchg
mov
mov
pop
shrb
xchg
jg
jno
xchg
dec
ret
int
xchg
cmp
fs
or
xor
dec
addr16
in
pop
shll
cmpsl
imul
outsb
adc
movsl
sbb
dec
add
inc
lds
push
nop
popf
xor
iret
inc
push
out
fistpl
xchg
pop
popa
push
or
or
ds
or
xor
ffreep
shlb
and
pushf
lret
adcl
add
fisttps
sbbb
lahf
inc
loope
mov
mov
insl
in
push
gs
sub
enter
popa
pop
adc
sbb
imul
loopnew
shlb
push
mov
js
stos
jo
add
push
sub
in
nop
or
mov
and
xchg
add
pop
ljmp
ss
jecxz
mov
sub
leave
jno
inc
and
and
xchg
fwait
and
sbb
dec
jno
cltd
pop
jp
inc
xor
scas
pop
nop
sub
sahf
inc
inc
aaa
mov
jbe
adc
xor
cmp
adc
dec
in
inc
mov
or
pop
mov
lds
xchg
ljmp
mov
mulb
repnz
dec
mov
shl
bound
push
lods
jp
mov
add
mov
call
cmp
cmpsb
repz
pop
xor
dec
mov
xor
cmp
pop
dec
hlt
repnz
ror
insl
xchg
mov
mov
mov
jmp
daa
lock
adc
add
rcrl
adc
dec
adc
fdivrs
scas
ret
jge
fdivr
cltd
inc
sbb
cmp
mov
negb
mull
mov
add
mov
inc
frstor
int
insb
jmp
js
in
insl
ficoml
popf
mov
push
adc
jns
in
inc
daa
cld
fmull
imul
jb
sbb
cs
imul
vpunpckhwd
or
cmp
into
out
leave
pop
gs
ret
mov
push
aas
pop
imul
mov
std
sub
xor
or
in
mov
push
or
stos
dec
mov
and
and
and
fldt
pop
inc
insb
das
aad
push
jno
loope
mov
fwait
mov
add
dec
mov
outsb
out
dec
inc
test
outsb
cwtl
in
sbb
mov
inc
jp
jecxz
bound
dec
ret
shrl
sub
mov
xlat
dec
sarl
mov
jmp
in
push
dec
mov
mov
xor
or
insl
or
mov
ds
mov
ret
push
sbb
in
cmp
mov
ret
pusha
cmpsl
pop
mov
ja,pn
js
xchg
mov
sbb
dec
inc
sbb
pop
mov
mov
movsb
push
sbb
call
repnz
repz
lea
int
sbb
mulb
sbb
stos
add
mov
add
mov
aas
xor
fiadds
ja
mov
dec
in
into
adc
xorl
clc
pushf
and
addr16
sub
cwtl
cmp
push
push
aad
stos
aaa
jmp
xchg
jnp
jle
sbb
daa
sub
es
push
inc
dec
js
imul
cmp
scas
stos
jmp
add
movntps
push
jae
sti
popf
mov
xor
cmp
inc
xchg
push
push
out
push
loopne
mov
mov
sbb
ret
call
add
add
sbb
stos
sub
xchg
and
stos
enter
call
adc
aas
xchg
clc
or
adc
enter
in
mov
add
jbe
rol
sub
ret
push
mov
inc
lds
mov
sbb
dec
stc
xor
sub
shl
daa
and
in
adc
jo
mov
es
call
dec
test
pop
iret
ds
add
ret
add
les
mov
sub
sbb
mov
mov
ja
push
cmp
int3
push
loop
test
aas
cmp
or
repnz
in
jg
jmp
xchg
dec
adc
mov
push
clc
add
jns
test
ret
addr16
lock
negl
into
dec
ror
inc
popa
cs
jl
test
jo
cmpsb
add
in
and
into
addb
pushf
mov
push
mov
hlt
or
lods
mov
mov
jb
test
mov
jns
lcall
insb
sbb
mov
xlat
cmpsb
popf
lds
shl
mov
pushf
xchg
push
std
rcll
in
mov
sbb
or
push
int
pop
cmp
rclb
mov
pop
ret
or
lret
cmp
cmc
test
xchg
std
imul
das
mov
and
lcall
push
outsb
add
or
hlt
enter
in
movsb
sbb
mov
rep
fcoml
fcomps
lds
movl
adc
push
mov
sahf
out
ljmp
jb
bound
int
jge
sbb
mov
xor
mov
scas
enter
sbb
xchg
dec
es
jg
jecxz
mov
pop
xchg
mov
jb
or
sahf
and
in
ds
js
idivb
jmp
mov
fiadds
xchg
mov
push
lahf
mov
insb
push
mov
outsb
rcrl
fcmovu
ficoms
mov
push
push
mov
ret
sbb
mov
mov
xchg
inc
or
xor
test
mov
shrl
in
stos
push
out
fimuls
xchg
ss
outsb
add
test
fwait
pushf
aaa
xor
jne
and
or
movsl
sbb
xor
pop
lcall
push
jp
cmp
mov
cld
lock
insl
jmp
cmpsb
or
dec
insl
ret
dec
out
outsb
out
mov
sahf
mov
xor
leave
popf
in
pop
pop
adc
outsb
mov
push
fsub
adc
pop
inc
shrb
xchg
sbb
and
mov
imul
lcall
out
cmpsb
nop
enter
imul
dec
aad
push
loop
movsl
push
xchg
sti
stc
addr16
push
lret
mov
fdivrs
mov
inc
dec
push
inc
cmp
mov
sub
adc
push
pop
cmpsb
stos
shrl
test
fdivl
mov
cmp
lds
nop
sub
xor
xchg
jne
inc
sub
loope
addr16
out
mov
mov
mov
push
test
cmp
push
aam
jl
xchg
jo
dec
mov
mov
mov
stos
add
in
jo
adcl
push
fldt
outsb
mov
xchg
loopne
pop
mov
mov
sahf
push
push
mov
jle
xlat
ja
int3
adc
movzbl
xchg
or
xchg
dec
outsl
inc
ljmp
mov
fabs
divl
mov
cmpsb
inc
mov
stc
dec
sar
adc
mov
inc
pop
add
push
addr16
jnp
and
scas
sbb
outsb
fstp
pop
or
rorb
sbb
stos
or
mov
mov
fcoms
lock
adc
sahf
ljmp
dec
aaa
xchg
cmp
dec
sub
xor
mov
lock
repnz
pop
mov
arpl
sub
push
push
cmpsb
pushf
mov
mov
inc
cmp
jns
push
loopne
xchg
sub
mov
fnsave
int3
sub
sbb
filds
mov
mov
loop
inc
lds
loopne
ja
cmp
fadds
test
xchg
rcrb
or
insb
int
xchg
jns
xor
data16
and
push
cmp
lods
cmp
jmp
xchg
scas
cmp
mov
pop
leave
and
pop
ret
in
incb
scas
mov
sbbb
subl
aas
fdivrl
arpl
sarl
stos
mov
xor
test
scas
iret
gs
cmp
sahf
addl
jae
mov
mov
push
or
cmp
arpl
adc
out
inc
mov
repnz
add
aaa
and
jo
repz
jno
inc
popa
push
cmc
dec
push
ljmp
aaa
sbb
dec
in
repz
or
adc
test
insb
adc
cwtl
aad
push
push
or
cmp
xchg
mov
adc
sub
pushf
stos
lcall
xchg
sub
mov
cld
dec
loope
and
mov
ds
dec
aad
xor
icebp
lock
sbb
ja
idivb
das
inc
in
xchg
pop
adc
or
in
xor
in
je
shlb
insb
push
lret
sahf
in
popf
xor
inc
shll
test
mov
lahf
and
lods
xor
insl
sbb
loopne
pop
cmpsb
insb
adc
jnp
cmpl
jge
inc
out
int3
push
sub
scas
xchg
sub
clc
js
sbb
cli
push
add
sub
pop
filds
xchg
rcrb
dec
push
jnp
fstl
les
and
lret
pop
js
dec
inc
in
les
pop
arpl
jl
xchg
out
jp
test
mov
or
stos
mov
mov
mov
cli
leave
xchg
cmp
pop
popf
lods
aam
mov
cld
cwtl
pop
mov
sub
lahf
scas
jge
loop
scas
enter
mov
or
movb
rclb
xlat
ret
mov
or
iret
shl
xchg
lods
dec
cmp
and
jb
and
push
ret
gs
xchg
dec
and
imul
jno
mov
push
mov
lods
andl
popf
add
and
pop
push
in
xor
pop
movb
mov
cmp
test
clc
shll
ret
iret
inc
roll
out
and
push
js
add
and
loope
cmpsb
fstps
sbb
xor
and
pop
rorb
mov
xor
xor
inc
dec
sarl
cmpsb
pusha
lahf
dec
inc
ret
adc
add
out
adc
sub
mov
pop
mov
push
cwtl
cmp
sbb
ss
add
mov
test
fldenv
dec
into
lods
ret
jecxz
andl
mov
pmaddwd
addr16
ss
stc
jns
stos
sahf
push
dec
sub
mov
jmp
xor
in
cld
push
jmp
popf
pop
scas
or
aam
or
mov
xlat
cmp
in
mov
mov
cld
lods
and
subl
xor
sbb
sub
lret
lcall
xchg
or
xchg
shll
mov
sub
xchg
mov
incb
fstpl
adc
adc
imul
nop
adc
jb
shll
leave
movl
cmp
adc
push
movsb
test
push
andb
push
inc
and
mov
mov
rorl
adc
pop
sub
popa
in
jg
mov
rorb
lret
aas
mov
sti
xchg
add
jle
fistpll
sahf
sub
in
lcall
push
xchg
push
and
dec
fwait
jle
dec
and
rolb
outsl
outsb
sub
and
sarb
mov
mov
bt
in
scas
xor
push
lret
sub
or
pop
xchg
inc
bound
push
pop
jns
add
lods
jns
xchg
es
mov
subps
pop
in
cli
scas
aas
cli
xlat
mov
xchg
pop
push
into
and
mov
in
loop
loopne
mov
jp
cmp
aam
dec
rep
fldcw
jle
dec
mov
xchg
stos
imul
cmp
inc
xchg
mov
rcrb
sar
sbb
and
sub
sub
and
inc
cld
movsl
and
pop
push
pop
js
dec
pop
lock
mov
test
sahf
adc
lds
mov
ret
test
adc
push
push
repz
cwtl
in
dec
xchg
scas
xlat
mov
mov
push
ficoms
mov
jge
popf
int
fisubs
sbb
ret
fwait
sub
stos
adc
cld
and
sbb
lret
push
daa
xor
rcrl
mov
movsl
pop
out
sub
jl
and
xor
and
and
fisubrs
test
pop
icebp
or
jg
hlt
into
jecxz
testl
dec
stc
call
pop
mov
add
mov
pop
jge
inc
pusha
sti
enter
notb
fisttps
mov
and
or
rcrb
data16
pop
jns
xchg
push
out
testl
fdivs
or
nop
and
add
and
xchg
dec
add
pushw
das
mov
mov
sbb
push
imulb
bound
dec
mov
mov
push
stos
xor
mov
jecxz
mov
ds
cmp
pop
xchg
push
adc
add
mov
stos
int3
cmp
enter
sub
sahf
and
dec
dec
iret
hlt
hlt
cmpsl
bound
cmp
pop
imul
add
pop
adc
or
push
es
xor
test
jne
mov
xchg
inc
adc
xor
leave
dec
push
ret
mov
and
pop
mov
mov
add
rcll
cmp
cmp
pop
or
repz
fwait
rorl
mov
dec
xchg
xchg
mov
outsb
mov
lods
dec
insb
mov
add
data16
test
lock
inc
fbstp
cmp
in
dec
jb
or
mov
jmp
rorl
daa
push
jne
pop
adc
arpl
cmp
sub
mov
repz
or
pop
add
arpl
push
arpl
mov
inc
xchg
inc
cmp
cmpb
push
lret
jae
or
push
sbbb
and
test
imul
aas
add
jno
orl
push
or
icebp
fiadds
sub
push
dec
add
cmp
out
fstps
pop
rolb
insl
add
add
int3
mov
int3
add
ja
mov
pop
pusha
data16
sbbl
test
pop
xchg
aam
add
mov
xor
daa
shll
loope
aaa
and
mov
mov
jmp
xor
lret
popf
shll
les
push
mov
mov
data16
lock
push
inc
test
mov
mov
cs
jo
xchg
jns
inc
mov
pop
cmovne
mov
sbbl
cmc
or
int3
mov
mov
cmp
mov
mov
adc
stc
sti
cmpsb
test
iret
inc
jae
movsl
jne
lock
pop
pushf
popf
ret
dec
shrl
cmp
stos
cmpsl
out
jne
add
in
adc
sbb
push
jno
push
pop
sahf
leave
xchg
shll
lea
xor
inc
push
lret
jnp
adc
nop
mov
daa
jns
lock
mov
sub
in
shl
mov
loopne
daa
scas
mov
and
jae
cwtl
add
movsl
test
sub
js
mov
outsl
stos
subl
or
fimuls
out
xor
xor
out
jne
sub
inc
mov
outsb
je
push
dec
ret
dec
rolb
int
sub
xlat
es
mov
filds
ret
out
cwtl
sbb
sbbb
adc
inc
stc
addr16
call
shll
lret
popa
cli
repnz
les
xchg
ds
adc
cwtl
cs
in
push
jo
pop
jge
dec
mov
data16
mov
lcall
cmp
mov
jae
enter
in
ret
cmp
and
fcomps
outsb
cmp
flds
icebp
int
hlt
pop
mov
add
xchg
push
out
scas
faddp
lret
sbb
dec
jge
and
daa
ds
mov
push
subb
lock
into
dec
xchg
mov
xor
ret
scas
les
and
xlat
lds
lahf
pop
sahf
cs
mov
pop
mov
jne
mov
lea
sahf
mov
fsubl
adc
mov
xlat
cmp
push
mov
xor
sbb
outsl
jmp
cli
xchg
mov
xchg
mov
ffree
jp
mov
xchg
add
mov
xchg
rcrb
xchg
sahf
lods
add
call
ljmp
lret
adc
ret
mov
and
mov
lahf
mov
add
cwtl
out
cmp
enter
mov
xchg
repz
loop
and
pop
xor
cs
js
and
repz
cld
imul
jno
shll
mov
lret
out
push
js
aas
push
lods
std
scas
loop
hlt
loope
sahf
adc
out
ds
sarl
xor
pop
lock
icebp
subl
and
xchg
mov
mov
jns
fcmovu
inc
stos
dec
xchg
es
sahf
sub
mov
out
mov
shll
rolb
in
or
dec
imul
sub
scas
add
and
stos
pop
inc
sbb
lret
es
sbb
sub
js
push
inc
dec
pop
add
scas
sbb
lahf
mov
std
mov
repnz
sbb
shl
rcl
in
sbb
clc
xor
xlat
mov
fstl
test
jp
sbb
ss
outsb
ret
test
mov
out
fsub
std
push
push
sbb
rclb
stc
push
mov
aam
aaa
pop
or
inc
test
push
inc
push
inc
xchg
xor
fs
add
andb
push
mov
mov
jae
in
fisubs
aas
dec
jecxz
fs
movsl
stos
mov
mov
mov
fwait
mov
add
test
pop
pop
pop
mov
std
xchg
add
jg
cs
popf
sti
mov
bound
aaa
jbe
fisubrs
cmp
loop
jmp
adcl
pushf
jne
lcall
and
out
loop
daa
push
fisubl
call
ud0
cmc
pop
out
push
nop
cmc
das
mov
xor
mov
imul
inc
xlat
jge
and
adc
lahf
mov
js,pn
mov
data16
adc
pushf
and
leave
sbb
or
xchg
lret
pop
shrl
mov
es
loopne
addr16
aam
push
jmp
int3
add
shlb
fistl
cmp
loopne
xchg
popf
imul
push
shrl
pop
and
and
jno
lea
mov
jnp
dec
dec
sbb
and
fistl
fnsave
jbe
and
fwait
outsb
hlt
in
or
xor
sub
push
loope
fstpl
adc
aas
mov
pop
xorb
movsl
enter
and
and
fisubl
xor
test
xor
adc
cmp
jne
mov
lret
mov
daa
sbb
std
ljmp
xor
movsl
pop
in
xor
pushf
sub
test
inc
shrl
mov
js
mov
and
outsl
xchg
add
mov
xchg
pusha
mov
inc
xchg
pop
fisubs
push
movsb
filds
mov
daa
push
mov
mov
sub
and
fs
push
or
push
cmpsl
pop
into
pop
jmp
mov
fiadds
fidivl
stc
aad
xchg
dec
mov
outsb
mov
leave
scas
loopne
cmp
es
inc
je
xor
xchg
xor
lahf
cwtl
pushf
adc
in
mov
loop
xor
es
lret
push
xor
and
aam
mov
pop
stos
dec
lea
xchg
incl
loope
xlat
jo
push
push
pop
es
pop
movsb
lret
lods
sub
fdivrl
es
shlb
xchg
in
xor
ret
sub
jmp
cmp
pop
cmp
cmp
add
inc
fwait
mov
sar
dec
outsb
imul
and
cmp
sahf
gs
in
aaa
mov
fisubl
ficompl
daa
cwtl
scas
ret
fisubs
mov
stos
sahf
ja
sub
dec
cld
pop
cmc
cmpl
add
scas
pushf
inc
add
aad
mov
jb
or
cmpsb
clc
push
jge
cmp
push
pushw
mov
mov
push
fistpll
cmpsl
mov
mov
sbb
jg
dec
outsl
jmp
push
test
movsl
jae
cmpsl
mov
push
push
cs
mov
punpckhbw
cltd
nop
bnd
fs
test
fiadds
push
arpl
push
push
js
sbb
jbe,pn
std
stos
inc
lcall
icebp
outsb
stos
mov
shll
clc
adc
imul
xor
ja
jg
and
std
xchg
ja
push
mov
push
add
fnsave
xchg
imul
jmp
pop
sbb
inc
mov
cmpsb
sarb
mov
mov
data16
fs
imul
insb
sub
adcl
pop
pop
insb
fs
xor
mov
pop
or
repnz
inc
jmp
loopne
fmul
sbb
cmp
push
jle
scas
lret
cld
js
fists
push
push
hlt
pop
jp
cmp
rolb
stos
enter
stos
loop
mov
shl
test
out
adc
loopne
cmp
aam
clc
sti
xor
xchg
sarl
or
cs
mov
flds
stc
movsb
push
mov
inc
icebp
mull
rcrb
jb
dec
mov
jb
scas
sub
pop
loope
hlt
jecxz
test
inc
mov
mov
movlps
xchg
pop
xlat
repnz
into
inc
push
dec
xor
testb
out
ss
mov
and
dec
pop
add
xlat
cmp
cmp
mov
roll
mov
test
aad
sarb
insl
movsb
xchg
in
cltd
sub
inc
add
mov
and
lahf
int3
dec
jp
pop
adc
imul
pop
loopne
mov
adc
adc
jecxz
fldenv
aas
push
cwtl
aad
push
or
out
movsb
mov
adc
out
loopne
rorb
dec
rol
mov
inc
repnz
push
fs
mov
mov
push
adc
test
jb
mov
adc
dec
xchg
mov
cmp
ret
aaa
in
inc
mov
or
insb
mov
imul
in
cwtl
pop
pushf
and
in
popf
ss
out
add
fimull
sub
ss
cmp
cmp
mov
in
rcrb
sub
aam
dec
loopne
call
or
and
xchg
into
jge
push
fbld
dec
sbb
ljmp
in
test
int3
rcrl
ss
inc
jb
mov
popf
sbb
push
popf
mov
mov
adc
sub
cwtl
stc
dec
leave
cmpsl
xchg
jge
mov
fisubs
and
xchg
mov
dec
push
mov
fcmovnb
ret
or
pusha
pop
ds
insb
mov
or
test
mov
pop
jmp
mov
pushf
cli
add
mov
lea
push
mov
push
jno
adc
loope
dec
inc
cltd
push
jnp
inc
push
xor
loopne
xor
xrelease
shrb
fidivrl
pop
xchg
int3
or
sti
mov
xchg
pop
fcompl
jmp
cmp
jno
movsl
xchg
jbe
outsb
repz
shlb
xchg
std
pop
jne
xchg
push
out
lretw
dec
pop
and
imul
push
mov
fwait
jno
cmp
sub
imul
push
xor
test
enter
mulb
add
repz
adc
mov
or
mov
mov
add
mov
cmp
lds
xchg
sbb
and
inc
rol
xor
dec
loope
or
incb
sub
push
cmp
and
lock
fs
jno
imull
xor
mov
repnz
sub
mov
mov
xchg
fwait
jg
sti
jp
push
mov
push
lcall
dec
inc
adc
mov
into
sbb
hlt
mov
std
ss
add
dec
in
xor
andb
sub
out
adc
sub
xor
mov
outsb
push
jg
jge
push
imul
not
add
pop
in
call
shl
xor
xlat
rolb
imul
outsl
mov
jo
push
push
filds
data16
test
stos
addl
mov
push
fs
es
enter
imul
and
dec
jne
dec
scas
or
mov
in
push
and
pop
jno
push
stos
in
test
out
push
fwait
stc
mov
or
repnz
std
pop
adc
add
xchg
stos
push
pop
push
shrb
out
bound
jnp
and
inc
mov
push
movsb
adc
xor
lret
stos
orl
ret
cmc
rcl
std
lods
int
push
mov
outsb
wbinvd
test
shll
or
sbb
jb
mov
add
int3
inc
jecxz
adc
sub
decl
push
or
test
fisttpl
xor
sti
dec
or
aad
xchg
jp
mov
pusha
pusha
dec
xchg
into
xchg
and
add
test
inc
push
mov
push
adc
push
inc
or
pop
lods
cmp
aad
lods
mov
push
shrl
pop
lret
stos
xorb
aam
call
mov
sbb
mov
fstpt
cmp
loope
xchg
and
xchg
xor
push
sbb
xchg
or
inc
xrelease
outsb
adc
push
mov
sbb
fxam
mov
inc
sbb
insl
ret
mov
rorl
or
jp
push
push
xor
int
addb
lock
push
fdivl
mov
add
pop
clc
lock
in
add
rorl
push
cltd
push
jle
inc
hlt
aad
jb
adc
dec
jnp
pusha
je
jmp
daa
mov
push
pop
aaa
mov
fisttpl
out
repnz
je
arpl
mov
mov
mov
add
in
test
pop
and
imul
mov
je
gs
mov
dec
lahf
push
fdivl
xchg
fiaddl
cmp
mov
sub
mov
jns
and
lret
movsb
js
xchg
fstl
jp
adc
cmp
add
pop
ja
and
fs
inc
mov
mov
xor
xchg
jo
pop
mov
push
mov
jb
gs
adcl
jp
sahf
push
mov
outsb
mov
std
in
push
popa
stos
mov
mov
fsub
mov
in
push
mov
adc
cli
ja
sarb
jp
stos
push
in
outsl
movsl
jl
in
sub
idivl
movsb
out
je
cmpsl
inc
mov
xchg
xchg
repz
mov
mov
xchg
ror
cmp
dec
pop
sub
sbb
or
aaa
cvtdq2ps
popl
cmp
sti
arpl
insl
xchg
les
dec
xchg
dec
add
ret
cmpsb
xor
dec
lahf
jnp
fmulp
xor
and
cld
jns
mov
and
cli
ja
mov
sti
and
pop
mov
jns
ss
repz
rclb
das
movsb
sub
mov
sbb
shlb
and
data16
mov
adc
push
xchg
mov
ret
outsb
dec
sbb
pop
fidivrs
adc
daa
adc
adc
data16
jmp
dec
sbb
mov
cmp
je
jmp
movsl
aaa
jp
inc
outsl
mov
outsb
cmp
mov
insl
xchg
add
adc
jo
sub
mov
inc
in
adc
sbb
js
jle
mov
pop
push
xor
ljmp
push
mov
lgs
sub
sbb
mov
adcb
bsr
jecxz
fisttps
jno
in
dec
rcrl
pop
push
cmp
cmpsl
xlat
jecxz
fildl
dec
adc
popa
outsb
scas
sub
cmp
sbb
or
cmc
ss
je
cmc
lods
pop
bound
mov
cmc
or
fsub
and
inc
cltd
sbb
mov
cli
imul
mov
mov
cmp
and
insb
inc
stc
sub
cwtl
cmp
sbb
pop
data16
dec
push
test
mov
push
push
psllw
xchg
rolb
test
test
sbb
add
mov
push
xlat
inc
and
mov
mov
jno
jbe
mov
cmc
and
inc
pushf
fsub
loopne
mov
pop
mov
aad
sti
xlat
mov
test
mov
fnsave
jbe
xor
xchg
or
mov
ljmp
fstps
cmp
aad
ret
add
lock
insb
pop
insl
lret
xlat
cmp
push
or
xchg
and
movsl
sbb
clc
mov
mov
nop
jmp
hlt
xor
add
lock
xchg
pop
jo
nop
jl
add
mov
jns
jo
add
inc
sbb
cmp
lods
test
outsl
and
push
and
sub
cmp
adc
cmpl
imul
cmpsl
in
cmpsl
push
jb
push
sub
lret
out
xor
fnstsw
cmpsb
inc
scas
out
adc
test
mov
jno
test
sbb
les
sub
inc
mov
push
jle
mov
xor
stos
cmpsb
cmp
dec
das
nop
jae
fidivl
add
orl
aad
and
add
and
jno
inc
mov
xchg
inc
xor
push
push
lret
xor
push
pop
faddp
jecxz
cmp
add
rcrl
pop
xor
xlat
out
mulb
add
jecxz
andl
cmp
popa
fnstenv
stos
xchg
fstps
adc
imul
inc
stos
das
push
ret
xor
xchg
int
adc
imul
xor
iret
faddl
mov
mov
xor
jae
imul
add
loope
leave
sub
outsb
pusha
mov
mov
aas
scas
mov
dec
push
fs
pop
nop
xchg
lcall
push
test
and
in
or
out
xchg
loope
pop
hlt
mov
mov
dec
loopne
dec
mov
jae
lcall
jno
sub
cmpsb
pop
repz
mov
xchg
lds
push
int
iret
out
mov
daa
add
pop
inc
enter
lcall
sub
inc
jp
in
int
popf
jp
fstpl
fs
cmp
scas
pop
andb
mov
in
push
subb
mov
push
ret
lock
ja
jge
mov
xlat
outsl
pop
cmp
and
shlb
lret
or
jl
pop
jecxz
push
cmp
mov
jle
pop
sbb
push
decb
pop
push
scas
xor
or
mov
pop
add
pop
push
mov
inc
and
ja
push
xchg
pop
das
scas
xchg
fsubr
or
lock
and
cwtl
fcmovne
inc
inc
movb
sub
inc
fdivrl
jbe
cmc
cmp
pushf
lcall
stos
jp
dec
loopne
mov
push
stos
inc
mov
stc
out
lahf
cmp
rclb
push
ds
dec
cmp
mov
cld
xlat
rcl
loope
pop
mov
mov
nop
jecxz
xchg
xchg
loopne
filds
idivb
insl
jp
shll
mov
ficomps
cwtl
aam
lds
jae
ffree
pop
into
push
adc
movsl
mov
out
enter
add
repz
fisubrl
insl
push
mov
mov
mov
scas
jmp
outsl
xor
push
add
sub
sbb
pop
hlt
mov
push
lret
mov
mov
nop
lods
cmc
ja
les
shlb
loop
scas
mov
dec
jno
daa
into
jp
hlt
lods
addr16
jae
pop
stos
lahf
mov
pop
cmp
gs
ss
fistpll
fldl
jg
cwtl
pop
pop
lcall
les
stos
mov
add
ret
pop
test
in
test
mov
outsb
dec
sub
jb
adc
or
cwtl
push
cmpsl
pop
fcmovnu
dec
arpl
negb
sti
push
loop
mov
cltd
xchg
out
sbb
sbb
sub
out
stos
inc
adc
add
dec
out
arpl
inc
adc
subb
fsubl
lock
jne
mov
mov
xchg
adc
lahf
sarl
mov
add
mov
xchg
sahf
xchg
or
lds
mov
mov
lea
sarb
lcall
ret
xchg
inc
fiaddl
and
nop
cmp
push
mov
ds
iret
imul
cmp
fcomip
das
insb
xchg
int3
pop
mov
inc
shl
add
in
daa
insl
push
xchg
jecxz
push
ss
test
imul
xchg
in
dec
iret
pop
lret
or
and
xchg
adcb
or
ds
mov
adc
notb
sub
or
mov
cwtl
out
mov
pop
push
lock
add
lods
or
xchg
lret
sub
ds
push
ret
xchg
xchg
push
sahf
pop
push
sub
inc
orb
sti
int
fwait
jg
nop
ss
test
repz
out
jle
lahf
test
dec
push
aaa
ljmp
fistpl
int
adc
dec
jo
gs
xchg
lds
mov
shrl
cld
sub
pop
call
and
sub
xor
pop
nop
shll
xchg
push
and
push
imul
cwtl
nop
and
push
xor
movsl
hlt
xchg
scas
daa
or
aaa
leave
xchg
jno
jns
mov
jp
add
aas
push
call
sub
pusha
xchg
ret
dec
sub
mov
cwtl
sub
jne
popa
std
pop
jns
xor
add
pop
cmpsl
inc
mov
dec
pop
mov
mov
cmp
mov
add
mov
sarb
jge
push
adc
pop
leave
and
mov
or
mov
mov
shll
mov
out
and
xor
sahf
call
stc
pop
in
lods
pop
shll
xchg
mov
movsl
push
cli
mov
dec
std
into
add
cmpsb
jnp
inc
adc
xor
cmp
gs
pop
xchg
movsl
add
dec
scas
enter
mov
add
std
test
pop
daa
imul
ds
ret
fisttpll
and
ret
add
out
dec
repz
push
cmp
insl
sub
jg
sub
adc
fisubrs
inc
adc
xor
mov
sbb
stos
cmpsb
and
or
bound
and
add
call
xchg
lods
cmp
pusha
push
arpl
jle
andb
jb
xor
dec
xor
addr16
push
mov
adc
sbb
jno
les
fistl
mov
rcl
add
lret
ljmp
and
cmc
pusha
mov
jno
jl
lods
movsl
push
cmpb
sub
dec
ja
cmpsl
ja
pushf
sub
xchg
out
xor
xor
je
mov
gs
ss
or
lds
leave
jne
lcall
jle
sbb
pop
loop
ljmp
movsl
xor
add
jge
mov
cmpsb
rcll
ret
aaa
gs
dec
inc
cltd
xor
or
add
flds
and
push
fistpll
je
add
cmp
jbe
icebp
inc
adcb
outsl
pop
adc
jnp
movsb
push
mov
sub
lock
popa
dec
or
loope
mov
scas
scas
mov
into
lea
jbe
loop
or
xor
ret
mov
mov
out
negb
jl
push
cmpsl
bound
or
cwtl
pop
push
xchg
adc
xchg
push
xchg
mov
or
mov
divl
or
sti
sub
fistl
les
in
and
lcall
lcall
mov
imul
adc
loope
out
scas
insb
mov
jle
js
clc
mov
adc
aam
and
imul
repz
cmp
mov
mov
in
jae
or
test
sbb
idiv
pop
mov
or
push
mov
jmp
clc
les
sub
pop
cltd
pop
cmpsl
insb
mov
adc
jl
mov
xor
push
inc
int
mov
dec
inc
mov
out
imul
inc
jae
sub
dec
sub
inc
aas
and
hlt
es
fildl
cld
lock
in
aam
and
fistpl
lret
icebp
mov
loop
aaa
rolb
mov
jg
dec
cwtl
mov
outsl
sub
cltd
imul
sub
lea
cmp
mov
hlt
sbb
mov
es
inc
in
add
mov
aas
icebp
push
popf
js
jo
shll
mov
pop
cwtl
jo
push
jne
push
jo
xlat
sahf
fldenv
or
ss
mov
mull
lods
adc
and
jg
insb
ja
mov
inc
inc
je
jmp
int
pop
js
cmp
jne
mov
cwtl
push
push
jmp
add
ror
sbb
imul
pop
xor
xchg
push
int3
cmc
xchg
mov
pop
insb
cmpsl
pusha
xchg
ja
xlat
mov
sub
addr16
fmuls
jge
aad
and
int3
mov
xchg
xor
and
movsbl
adc
sahf
insl
mov
mov
testl
test
rcl
dec
jae
test
je
push
sub
pop
rcrb
aas
into
pop
fisubrl
stos
movsb
jne
sub
xchg
sbb
add
jge
iret
mov
mov
xchg
inc
gs
sub
push
int
stos
or
fs
mull
mov
icebp
loopne
lea
pop
jecxz
mov
cmp
push
mov
in
lret
fwait
int
sub
mov
cmpsb
mov
repz
mov
daa
push
cld
xchg
rorb
pop
pusha
loop
dec
in
and
sbb
sbb
mov
jb
lea
movsb
pusha
out
pop
push
and
dec
pop
jl
pop
in
cmpsb
sarl
push
std
xchg
lea
mov
add
lds
lea
loop
int3
stos
inc
cmp
lods
xor
in
add
cmp
xlat
popf
idiv
dec
lock
push
pop
adcl
addr16
aam
nop
stos
fmull
jmp
sub
fldcw
push
xchg
jns
and
pop
cmpsl
rorb
inc
addb
inc
cs
mov
into
fistpl
decl
pop
fisubl
dec
jle
icebp
inc
cmc
adc
fbld
pop
fists
popa
out
mov
cmp
out
and
sub
pop
xor
pop
mov
vmwrite
insb
das
shufps
add
adc
xchg
mov
out
sbb
lods
xchg
add
in
popf
mov
inc
mov
jg
fcmovbe
dec
stos
stc
jae
sub
cld
mov
cwtl
push
aam
rolb
test
mov
xchg
les
ret
dec
shlb
mov
push
inc
dec
adc
jle
cmpb
mov
ds
sbb
mov
aad
and
bound
mov
daa
dec
and
sbb
cmpsb
lcall
lea
mov
jg
hlt
pop
cmp
adc
xchg
movsl
xor
sub
push
das
jb
jne
cld
jae
mov
cmp
rcrl
or
out
add
and
adc
mov
into
call
gs
test
xchg
in
aaa
mov
insl
js
xchg
enter
jg
push
rolb
cmpb
call
xor
mov
in
cmp
loop
or
inc
lds
dec
mov
sub
movsb
dec
stos
out
mov
sbb
lods
cli
in
cmp
add
push
shl
test
lahf
xchg
pop
mov
pop
fistps
aas
mov
pusha
mov
in
out
cmp
test
dec
dec
push
or
mov
mov
flds
fdivrs
int3
imul
and
dec
cwtl
daa
js
std
push
jo
pusha
sbb
inc
adc
push
mov
addr16
arpl
pop
popf
push
sub
pusha
flds
nop
cld
push
das
sub
lcall
sbb
loope
cwtl
mov
inc
pop
mov
xchg
fiaddl
aam
or
and
fidivrl
pop
mov
or
push
add
lret
arpl
push
lret
addr16
adc
lea
cmp
out
mov
cmp
adc
lcall
inc
leave
lahf
add
mov
dec
pusha
jbe
cltd
sbb
pop
or
or
lret
push
push
jmp
aam
jmp
or
xor
dec
mov
pop
aas
and
inc
arpl
movsb
xchg
xor
and
dec
cmp
lcall
add
cmp
bound
jbe
jle
mov
cs
jecxz
insb
call
push
mov
dec
sbb
adcl
shll
cmp
xchg
pusha
inc
popl
fidivrl
adc
dec
cmpsb
pop
je
xchg
dec
pop
insb
xchg
add
mov
xor
push
ds
fwait
push
jmp
jno
pop
cmp
in
fs
ljmp
xchg
mov
push
jmp
repnz
or
movsl
cmc
inc
sub
cwtl
popa
and
adc
lea
sbb
pop
shll
ret
adc
loope
fdiv
sti
mov
addb
and
sti
into
jno
xchg
jo
xor
ljmp
xor
lods
mov
repnz
xor
mov
out
gs
cmp
inc
ret
out
dec
mov
ret
dec
mov
movsl
xor
inc
mov
sub
jo
int
test
or
out
sub
add
mov
int3
cld
cmpsb
inc
aaa
pop
int3
inc
cmpsl
daa
mov
push
inc
out
lret
push
lods
daa
ret
inc
push
pop
fisubrl
mov
jecxz
jne
gs
push
in
scas
cld
mov
cmp
fstps
cmp
test
sub
arpl
mov
dec
jmp
leave
testl
dec
or
mov
mov
mov
fs
daa
and
adc
lods
movsb
fistpll
lods
ficoms
das
xchg
out
sub
out
sbb
insl
adc
sbb
jnp
push
dec
hlt
ret
and
push
mov
daa
movsl
inc
mov
aam
dec
mov
imul
xchg
testl
and
ret
xchg
jl
dec
test
int
inc
repz
mulps
out
rcll
adc
pop
mov
ret
cmp
ss
sub
push
adc
nop
ret
push
xlat
fisttpll
mov
js
sahf
inc
mov
popa
notb
pop
and
bound
lret
sub
insb
ss
mov
pop
mov
sti
add
sbb
sub
pop
mov
test
mov
sbb
and
mov
lahf
out
mov
push
pop
rep
test
xchg
sub
adc
in
lret
cmp
jecxz
sbb
hlt
aam
aaa
pop
adc
sub
mov
icebp
xchg
dec
repnz
sbb
push
mov
mov
ret
mov
cli
js
pop
aad
push
add
mov
adc
outsb
iret
adc
lock
mov
pop
pop
jg
and
pop
jmp
pushf
in
cs
outsb
sbb
mov
push
addb
movsl
cmp
push
ret
mov
jmp
je,pn
movzwl
in
lret
xchg
mov
clc
rol
pop
movsl
jmp
inc
or
cmp
pop
cld
adc
movsb
mov
mov
pushf
xchg
mov
scas
push
cli
shlb
in
test
je
loope
jg
lahf
arpl
cltd
xchg
push
jnp
fcoms
out
pop
dec
or
nop
loop
sub
ret
inc
arpl
pop
pop
jg
mov
add
in
test
add
pop
rclb
sub
push
movsl
pushf
insl
idivb
mov
ss
cld
sbb
mov
cmpb
lods
inc
pop
scas
loop
mov
and
pop
shlb
xchg
jo
push
ficomps
or
movsl
sub
lods
and
adc
imul
jg
push
out
outsb
pop
ljmp
jns
in
jmp
mov
xor
jmp
jbe
movsb
lret
lcall
gs
dec
cmp
xor
fldl
adc
mov
cmp
push
pop
shll
pop
clc
inc
test
lock
rolb
int3
or
hlt
mov
cmc
call
aam
in
popa
pop
movsb
lock
push
ret
fisttpl
push
insb
inc
push
insb
push
dec
cli
scas
nop
addr16
inc
shrb
xchg
aaa
shrl
out
cltd
popa
pushf
in
mov
lds
shlb
leave
mov
dec
aad
mov
adc
ljmp
jae
jl
hlt
pop
pop
aad
pop
jne
cmpsl
xlat
push
rolb
popa
and
lea
or
mov
into
cmovle
pop
mov
pop
mov
fcompl
sbb
push
scas
pop
mov
adcl
iret
push
movsb
xor
jne,pt
shll
mov
repnz
scas
das
and
aad
dec
xchg
imul
push
push
imul
push
mov
leave
outsb
fists
dec
sahf
sti
out
es
or
call
hlt
flds
subl
lods
in
aam
cmp
pop
push
insl
push
hlt
clc
movsl
test
and
divb
jecxz
clc
inc
testb
adc
adc
dec
ss
xchg
xorb
out
push
jge
mov
sub
sub
and
and
xchg
out
out
outsl
rorl
sbb
imul
frstor
orl
xor
popl
add
push
clc
cmpl
iret
pop
loop
inc
jmp
data16
loope
add
sub
dec
mov
jmp
jecxz
push
inc
jg
and
pop
stos
xor
out
out
fidivs
ja
pusha
mov
mov
iret
js
outsl
cmp
dec
mov
loope
das
mov
and
cmp
dec
cs
jle
xchg
sahf
mov
xor
sub
and
lock
jmp
inc
pop
insl
mov
jmp
mov
shl
push
mov
inc
jl
mov
adc
std
xor
cmpsb
and
jbe
sbb
dec
test
inc
lret
scas
insb
ret
inc
mov
cmp
cltd
xchg
scas
call
mov
call
xchg
inc
lods
adc
into
push
or
sub
idiv
imulb
fmulp
es
stc
test
push
adc
mov
and
movsb
xor
or
das
cmp
pop
sar
je
das
das
into
lods
jmp
pop
xor
jmp
adc
cld
icebp
dec
outsl
mov
pop
insl
loop
cs
push
mov
sahf
rclb
pop
pop
sub
lret
fs
repz
mov
ret
daa
mov
ljmp
or
dec
das
xchg
cmpsl
xchg
or
xor
lock
push
jns
enter
push
xor
neg
bound
mov
loop
scas
dec
mov
or
xor
or
push
push
dec
jl
into
push
or
outsb
cmc
add
cld
jp
lods
xor
push
push
push
jmp
stos
jle
lods
pop
push
dec
adc
push
pushf
jmp
test
inc
add
xlat
jne
enter
ds
adc
pop
dec
ret
sub
out
cmpsl
mov
ret
push
pop
ss
shlb
mov
mov
scas
dec
inc
jp,pn
pop
or
push
out
dec
push
push
xchg
cmp
jae
insl
mov
xor
mov
add
pusha
jnp,pn
popf
jl
sub
push
pop
pop
mov
and
es
mov
fmull
cltd
leave
aaa
icebp
jmp
sbb
loop
or
cmc
sub
dec
lds
pushf
dec
inc
cmp
fists
int
mov
xchg
pusha
inc
lods
lahf
aad
inc
lret
inc
pop
mov
mov
data16
dec
in
aas
ja
mov
cs
lahf
repnz
mov
mov
or
loop
cmp
rcl
sbb
test
pop
cltd
pop
cmp
aad
add
sub
xchg
repz
fucomi
lock
call
mov
lds
sbb
mov
shll
out
mov
test
jmp
aad
test
and
add
mov
ret
pop
test
xor
js
sarb
dec
in
shlb
push
xor
int3
mov
daa
cmp
int3
mov
in
int3
dec
pushf
adc
popf
fcomps
pop
cmc
lds
pop
js
hlt
inc
pushf
stos
arpl
inc
and
and
test
mov
shl
adc
mov
push
rcl
dec
cmp
cmp
sub
ds
dec
frstor
inc
and
addr16
icebp
cmp
fwait
push
xchg
mov
into
cmp
push
xchg
jp
xchg
dec
or
and
mov
sarb
xchg
cld
add
jecxz
fbstp
pop
rorb
add
adc
out
mov
jns
rcll
pop
daa
mov
repz
es
push
lahf
add
mov
jl,pn
lcall
in
cltd
in
add
scas
push
mov
pop
inc
out
push
pop
pop
stc
add
into
mov
rcrb
nop
xchg
xor
imul
dec
sub
mov
data16
push
xchg
xchg
orb
lahf
mov
dec
aaa
xor
movl
jo
loopne
popa
lret
in
cmpsl
mov
jecxz
mov
dec
addr16
cltd
xchg
inc
sti
and
in
mov
stos
push
inc
dec
dec
leave
aad
add
dec
adc
negb
mov
jl
jne
cmp
outsb
cmp
repnz
xor
mov
insb
call
mov
xchg
jne
add
mov
ljmp
pop
shlb
jno
aaa
fstpt
and
into
arpl
movsl
jmp
and
mov
mov
add
pop
jne
jbe
je
push
popf
dec
inc
sub
jl
dec
stc
xchg
xchg
nop
xlat
mov
mov
push
lock
add
inc
push
dec
cli
push
mov
mov
inc
xchg
pop
mov
bound
movsb
and
or
out
jb
lret
addb
test
fwait
orb
fidivs
out
stos
mov
aas
leave
mov
mov
outsl
mov
subps
movsb
ss
scas
mov
lea
and
or
push
dec
pop
and
nop
call
add
pop
push
xchg
mov
lods
aaa
outsb
add
inc
xor
jb
incb
repz
dec
adc
mov
cmp
orb
fistl
xchg
dec
jae
call
out
pop
inc
and
jnp
mov
mov
and
test
ret
vcvttsd2si
inc
fcmovnu
mov
lret
inc
ficoms
test
stos
dec
in
stos
int
mov
add
pop
xor
mov
mov
fs
push
pop
ljmp
cwtl
dec
cmp
pop
aam
out
cli
mov
xchg
ds
mov
mov
dec
sar
mov
push
daa
jbe
jmp
sub
inc
ss
cmc
adc
mov
cmc
mov
cmp
jle
jns
imul
adc
push
jno
pop
cmp
jge
xchg
cmpsb
mov
dec
out
mov
int3
faddp
add
icebp
sbb
icebp
pushf
and
fdivrs
pushf
repnz
pop
call
dec
mov
xchg
mov
ljmp
loopne
movsl
sbb
push
add
or
or
xchg
mov
stc
movsb
jo
push
or
lea
adc
sub
mov
cmpsl
and
ret
xchg
mov
push
mov
add
cltd
xchg
adc
lds
and
add
nop
fstps
lcall
cmp
mov
andb
push
pop
in
fs
dec
cmpsb
in
adc
mov
int3
cmpsl
cmp
jne
jle
and
fildl
sub
push
lock
push
sub
xchg
sahf
aad
or
test
mov
lret
mov
mov
jbe
mov
ret
dec
subb
and
adc
daa
stos
daa
addr16
dec
pcmpgtw
xchg
cmpsb
mov
dec
repnz
jge
sbb
test
loop
mov
mov
enter
das
int
adc
xchg
pop
cld
cmpb
icebp
and
add
mov
call
les
push
addr16
sbb
cmp
in
cmpsl
add
cli
and
adc
mov
and
or
cmpsb
movsb
xchg
call
stos
mov
sub
movb
xor
inc
pop
sub
lea
sub
mov
dec
push
sub
and
xor
adc
fdiv
mov
and
into
mov
xchg
rcll
sarl
xor
or
fwait
scas
cmpsb
shlb
jb
xchg
pop
lcall
nop
out
sbb
pushf
jge
mov
pop
mov
dec
sahf
fbstp
les
inc
out
mov
out
int
cmpsb
pop
push
loopne
pop
and
repz
and
xchg
clc
dec
gs
push
sbb
add
mov
mov
cmc
pop
inc
out
xchg
or
or
cmc
push
xor
pop
loopne
test
mov
cmp
les
xchg
les
pop
lods
in
sub
stos
push
add
in
mov
ret
ja
dec
push
outsl
out
or
test
jle
dec
or
icebp
sbb
ficoms
add
push
jle
jl
aas
xor
xchg
push
stc
stc
mov
push
icebp
pop
pop
jns
stc
lock
in
fbstp
sbb
shr
out
cmpsb
outsb
xor
aas
mov
and
jnp
pop
push
jno
inc
das
in
dec
test
lcall
pop
mov
aas
jmp
jae
subb
cmp
pop
loopne
insb
aaa
stos
in
das
aaa
outsl
mov
or
in
push
int3
ret
popa
sbb
in
clc
xchg
sbb
into
popl
push
xorl
xor
out
pushf
fs
mov
hlt
cvtps2pd
iret
adc
in
jp
ret
push
push
mov
jge
push
outsl
fisttpl
and
out
xchg
inc
push
jmp
jns
mov
data16
into
adc
into
jb
inc
sub
ret
add
mov
xor
pop
jbe
and
mov
sbb
inc
mov
mov
xchg
dec
divb
mov
repnz
insb
sbb
scas
out
xor
pop
aas
sub
cvttps2pi
loope
gs
push
xor
int
and
fucomi
addr16
fbld
cld
mov
mov
jne
rorl
sub
hlt
jae
in
push
or
sbb
mov
inc
mov
cwtl
inc
push
mov
popa
add
lods
pop
ret
sarl
repnz
xchg
pop
rclb
push
sbb
mov
sub
sbb
mov
jns
lods
add
jns
stos
test
aad
ficoml
inc
or
mov
and
adc
fidivrl
xor
pop
into
mov
or
jmp
push
les
mov
jle
xor
jns
mov
sub
cmpsl
jp
out
rcrl
add
or
enter
or
pop
cmpsl
rolb
xor
sbb
in
jmp
xchg
jo
cs
cld
cltd
lea
in
shll
rcll
mov
and
imul
and
pop
mov
loope
mov
js
fimuls
lret
aas
fyl2x
sub
or
push
jp
push
divl
out
xchg
loope
pop
pop
in
push
dec
xchg
sti
lahf
or
xchg
and
xor
mov
je
xchg
sub
mov
mov
das
xor
repz
pop
push
push
and
ret
xor
jle
push
cmc
mov
pop
and
clc
dec
scas
idivb
mov
imul
cmpsl
dec
and
sbb
pop
lea
sub
dec
lods
sti
fsubs
mov
jbe
adc
mov
sub
and
sub
movsl
mov
sub
push
sbb
or
rcll
xor
xor
or
and
xor
fists
xchg
sbb
pop
in
je
out
add
out
and
enter
mov
jb
out
push
test
in
jge
test
ss
jge
xorb
cmpsb
dec
push
jg
ret
daa
sbb
add
jge
loopne
jb
fs
pop
inc
and
dec
lods
jmp
lret
mov
insl
js
cmc
movsl
fsts
jmp
mov
xchg
nop
adc
mov
cmpl
or
out
jmp
adc
cli
jp
adc
jbe
push
cs
jp
pusha
cld
arpl
dec
rcr
repnz
xor
push
mov
xlat
ret
xor
movsl
in
lcall
add
xor
mov
xorb
sub
xor
and
push
add
and
lret
pause
in
jbe
data16
xor
add
pop
gs
push
scas
push
std
sahf
mov
pop
js
out
dec
int
inc
enter
add
sbb
mov
loop
les
pop
test
test
int
leave
xchg
mov
inc
mov
test
pop
mov
out
in
push
add
mov
sub
adc
adcb
clc
test
fcmovnbe
jb
into
push
bound
xor
and
fstps
inc
add
push
dec
cmp
dec
sahf
lock
ljmp
push
andl
pop
out
rcrl
pop
out
jmp
pop
clc
xchg
enter
bound
loope
push
mov
pop
pusha
cmp
mov
jbe
add
xor
stc
cltd
jmp
xchg
add
jnp
pop
daa
idivl
jecxz
xor
dec
lret
add
cmp
xor
jo
in
lahf
push
jmp
push
stos
movsb
dec
and
pusha
das
rorb
call
sti
mov
pushf
sub
aaa
push
push
mov
sti
inc
push
enter
outsb
enter
ret
push
inc
stos
or
cmp
cmovs
sbb
pop
data16
loopne
scas
dec
and
out
adc
jb
cmc
dec
mov
mov
cmp
adc
jbe
fwait
xorps
or
test
in
cs
cmp
lret
daa
cmp
cltd
addr16
imul
sbb
and
xchg
mov
imul
les
mov
out
pop
sub
insl
rcrl
push
dec
mov
jl
in
inc
mov
inc
add
xchg
jp
jmp
test
inc
sbb
mov
inc
stc
call
out
sarl
jl
push
dec
subl
addr16
aam
inc
clc
js
sub
pop
sbb
add
fdivs
jae
addb
loopne
outsb
mov
mov
popf
outsl
push
in
jb
in
int3
and
jbe
xor
aam
in
mov
pop
dec
dec
scas
sahf
ljmp
cmpsb
push
sbb
push
adc
sub
add
ret
jecxz
mov
mov
es
pushf
jno
xchg
sub
xor
pop
sbb
xor
fistps
aam
and
cld
sbb
mov
aad
in
mov
xchg
sub
dec
stc
add
in
mov
mov
pop
xchg
hlt
aad
add
cwtl
pop
inc
inc
ss
fsubl
mov
inc
inc
adc
add
stos
fst
js
sub
mov
stos
leave
hlt
jecxz
das
jmp
int3
sbb
popa
jo
lds
push
adc
in
clc
cmp
xor
hlt
loop
jge
lods
adc
cmp
mov
lcall
push
fsubrs
mul
mov
mov
gs
dec
popa
lcall
bound
xor
pusha
mov
shl
leave
mov
xchg
jne
outsb
jmp
xor
pop
xchg
dec
add
xor
lret
dec
jle
fdivl
and
js
cli
inc
repnz
rcll
xlat
loope
dec
aas
add
jecxz
movsl
fcompl
rcrl
cmp
and
xchg
dec
mov
cmp
dec
sub
movsb
dec
imull
jne
lods
xor
lret
cld
insl
popf
inc
xchg
inc
dec
lds
divb
fs
add
fdivl
pop
push
add
pop
sbb
ret
pop
call
imul
aas
movsb
out
fisubrs
out
xchg
in
xchg
leave
mov
inc
stc
mov
ljmp
rcrl
pop
mov
add
ret
das
push
in
pop
or
dec
push
mov
and
dec
repnz
idiv
insl
xchg
std
jle
div
push
dec
or
pop
nop
lahf
dec
movsb
loopne
xchg
cmpsl
xchg
icebp
mov
push
fmuls
push
xchg
mul
xorb
mov
pop
jge
lahf
xor
push
xchg
out
pop
xchg
lock
push
ret
xchg
dec
mov
fimull
add
mov
mov
sbb
les
subl
xchg
js
testb
and
xor
scas
aad
push
lds
addb
ret
ds
imul
hlt
sahf
xor
aad
pushf
insb
fisubs
mov
inc
add
fnstsw
xchg
xchg
jae
add
jl
dec
sbb
rcl
in
xchg
cli
xchg
sbb
test
loopne
and
sub
stc
ljmp
pusha
xchg
aaa
lret
jmp
xchg
dec
and
push
mov
mov
sub
lods
cmp
int
icebp
mov
add
aaa
fldenv
mov
mov
xchg
dec
adc
and
and
hlt
stc
jbe
cmp
inc
or
xchg
rcl
push
aad
adc
jp
lret
push
push
lret
cld
or
jge
mov
imul
outsb
pop
hlt
cmp
cmpsl
push
in
test
sub
lock
movsl
jl
outsl
jo
adc
in
jle
dec
mov
cld
xchg
insb
or
mov
jb
dec
gs
inc
repnz
repnz
add
sbb
div
and
mov
adc
mov
es
test
xchg
fs
push
ret
jl
popa
push
aaa
std
in
dec
sti
icebp
lds
push
mov
mov
shr
or
jns
dec
loopne
fwait
hlt
jge
mov
xchg
mov
mov
test
lret
add
or
decl
mov
push
test
add
repz
fisubrl
popl
das
mov
jecxz
mov
push
shll
lret
lock
mov
enter
lahf
jg
dec
out
cli
and
mov
cmpsb
xor
leave
lock
dec
nop
mov
jno
subb
and
fldl
sbb
jns
inc
xor
add
xchg
and
stc
dec
mul
insb
dec
sbb
fs
insl
icebp
test
int3
ljmp
xchg
add
mov
call
repnz
daa
test
inc
fucom
xchg
push
xor
mov
cmp
cmovl
add
lea
aam
dec
out
sbb
inc
ror
jo
sbb
sub
out
imul
jmp
es
pop
jnp
mov
adc
mov
aas
and
sub
xlat
lea
call
mov
out
ret
lcall
jae
cmpsb
lods
adc
pop
stc
mov
sbbb
sub
outsl
adc
jg
and
pop
jbe
jns
aad
loope
negl
cli
je
ss
xchg
movsb
movsb
jge
out
out
fstps
mov
aaa
pop
jae,pt
jb
out
sub
xlat
testb
mov
mov
cmp
pop
push
xor
int
test
and
data16
test
pusha
jns
xor
or
mov
hlt
repz
leave
and
add
leave
pop
adc
fistps
jge
and
dec
xchg
aam
repz
mov
icebp
bound
test
outsl
cs
aas
imul
fidivrl
pop
leave
ds
adc
mov
sub
shll
test
gs
sbb
std
mov
push
pop
lea
stc
andl
pusha
jmp
fimuls
pop
dec
fidivrl
cmp
adc
dec
jns
in
mov
out
aaa
sub
jb
fisubrl
js
hlt
inc
pusha
loop
push
cwtl
aad
popa
insb
lods
sahf
mov
pop
push
out
test
ja
pop
dec
sbbl
mov
out
fnstenv
xorl
cmpsl
push
cltd
mov
ss
ljmp
sbb
aam
shll
xchg
loope
shr
cmc
pusha
mov
mov
xchg
imul
mov
mov
mov
out
or
out
and
jle
jmp
pop
inc
es
adc
sahf
and
mov
cmpsb
pop
mov
mov
cs
repnz
pop
fldl
jmp
mov
inc
push
adc
into
rcrl
xor
mov
adcb
push
ljmp
pop
push
stos
adc
daa
mov
push
call
push
leave
xor
mov
sub
jg
rcrb
lods
adc
mov
or
lods
leave
dec
scas
call
or
add
adc
mov
adc
xlat
push
test
fisttpll
lahf
lcall
dec
outsb
xchg
inc
outsb
pushf
shll
movsb
mov
or
cmpsl
arpl
imul
adc
mov
cmp
cmp
add
and
cmc
sbb
mov
insl
xchg
mov
es
mov
scas
inc
adc
fbld
shrb
aad
push
adc
movsl
mov
lcall
dec
je
mov
aad
xchg
pop
orb
cmp
mov
and
into
pusha
test
inc
cmc
mov
sub
sbb
dec
inc
push
dec
aas
into
ret
cs
test
cmpl
mov
add
inc
adc
test
xchg
and
jl
repnz
xor
push
sbb
mov
cmpsb
jbe
xchg
gs
out
clc
xor
cli
jb
outsb
hlt
dec
inc
popl
cltd
fsubrp
mov
jbe
jns
shrb
push
mov
daa
dec
leave
lods
fidivs
imul
or
ljmp
inc
rclb
jnp
aam
mov
fisubl
enter
push
stc
lock
hlt
aas
cs
or
arpl
inc
outsl
inc
lods
mov
leave
movsb
cmp
mov
movsl
xchg
nop
inc
xchg
jg
fdivrp
cmp
outsl
testb
mov
inc
mov
adc
add
mov
mov
mov
jnp
out
leave
jno
cmp
enter
pop
daa
pop
mov
mov
leave
sahf
sub
xor
jne
xchg
and
in
jle
mov
push
xchg
bound
add
leave
xchg
cli
aaa
inc
pop
shl
sbb
in
xorl
jecxz
nop
enter
cmp
cmpsl
data16
ljmp
lret
and
jl
andl
mov
por
add
bound
and
out
dec
mov
dec
les
add
xor
cld
pop
fwait
or
push
and
jbe
pop
mov
lea
mov
rcll
scas
sbb
in
push
ljmp
data16
icebp
adc
mov
sub
inc
fisubrl
ss
xor
sub
testl
call
jno
adc
adc
jp
es
jnp
sarb
fisubl
inc
xor
mov
repnz
adc
xchg
mov
cmc
push
mov
cmc
xchg
insb
inc
fistps
fcompl
cmp
xchg
data16
or
mov
insl
popf
add
xchg
inc
jge
fcom
adc
mov
out
mov
jl
push
loopne
add
push
add
sbb
push
sbb
or
cltd
outsl
sbb
jp
mov
sub
xchg
xchg
enter
pop
loopne
test
ljmp
mov
stc
xchg
icebp
outsb
daa
out
arpl
pop
push
ljmp
je
fdivrp
xchg
movsl
jno
pop
pop
into
lahf
in
jno
cltd
and
mov
nop
test
popl
jle
xlat
ret
mov
outsl
ss
xchg
aad
orb
push
inc
scas
incb
in
jp
dec
sbb
push
das
sbb
cmpsb
icebp
mov
stos
jno
push
scas
js
or
fcoml
mov
cmpsl
andb
pop
testl
sbb
lock
xlat
fstp
sbb
call
ljmp
dec
out
pop
sub
mov
fisttps
mov
cmp
shrb
lods
add
mov
push
mov
sub
cmpb
daa
out
add
lcall
lds
popa
inc
push
push
stos
filds
jg
dec
jno
cmp
xchg
outsl
repz
mov
fst
xorb
ss
sbb
xchg
add
mov
mov
mov
sub
adc
dec
sbb
imul
xor
pop
push
cli
sbb
std
push
xchg
or
mov
push
xchg
and
shrl
and
loope
cs
sub
lret
cmp
cwtl
pop
add
xchg
jbe
cmp
cmp
imul
std
add
cmp
jns
iret
xor
aas
repz
jle
push
jbe
sub
jne
adc
lret
sub
dec
insl
mov
faddl
push
fistpl
das
shl
aad
lods
inc
fisttpll
or
in
hlt
push
aam
les
sbb
inc
push
pop
pop
ds
rcrb
push
fcoml
pop
cltd
dec
and
sbbl
pop
aad
leave
jne
lods
rolb
dec
dec
out
cmp
popf
int3
and
lret
inc
das
int3
jno
sbb
imul
fmuls
jg
add
loop
aad
pushf
pop
mov
mov
inc
fistpl
loopne
dec
adc
and
movsb
mov
rolb
insl
mov
rolb
mov
push
call
fldenv
daa
aad
lods
dec
lret
test
xchg
sbb
into
xchg
in
mov
adc
xchg
cmpsb
push
jae
adc
jecxz
or
inc
rorl
pusha
jno
and
and
dec
xchg
cmp
pop
stos
sbb
adc
mov
xlat
in
pushf
enter
ret
adc
in
rol
repnz
and
inc
stc
lock
mov
test
mov
test
jbe
jmp
popf
outsl
pop
iret
les
push
push
mov
fucomi
adc
push
sub
test
add
jle
hlt
loop
sbb
fcmovnbe
mov
icebp
mov
xor
enter
lods
adc
add
into
sbb
fwait
jb
add
jo
lods
mov
push
adc
lahf
adc
sub
fsub
in
cltd
sti
jmp
adc
lea
jg
lods
push
pop
aam
mov
lods
scas
or
pmovmskb
movsl
fstl
or
inc
test
movsb
jecxz
sbb
sub
sub
cmc
jb
ss
inc
xor
rolb
mov
push
pop
pop
das
sahf
lahf
ja
sub
mov
push
scas
push
subl
jae
and
xor
imul
mov
negl
fwait
xchg
push
dec
push
test
lcall
pop
in
arpl
cli
cmpsb
int
outsb
es
outsb
jb
push
in
shll
je
add
lods
and
jbe
pop
xor
xor
in
in
repnz
data16
add
fs
inc
mov
dec
bound
xor
imul
js
outsb
out
shll
fsub
bound
mov
jge
into
lds
cmp
cmp
inc
or
cwtl
adc
arpl
test
pop
inc
inc
loop
mov
pusha
stc
mov
mov
xchg
stos
stc
stc
adc
xor
lcall
xchg
movb
stos
mov
scas
mov
dec
jo
bnd
push
leave
or
adc
fbstp
mov
adc
in
xchg
pop
lea
hlt
stos
xchg
mov
flds
popa
push
int3
xorb
cmp
mov
fsubrl
dec
in
xor
cmp
add
adc
pusha
dec
mov
stos
mov
mov
add
push
aas
int3
bound
and
jne
adc
pop
mov
out
adcl
movsb
pushf
cwtl
je
pusha
and
or
adc
bound
std
stos
cmp
and
xor
xchg
pushf
sbb
sahf
test
sub
and
pop
xchg
pop
outsl
inc
fs
repz
mov
jge
roll
sub
jmp
inc
dec
dec
sub
xchg
mov
jp
push
icebp
adc
out
xchg
orb
mov
sbb
xor
sbb
mov
loopne
inc
lods
mov
daa
dec
add
movsl
cmpsb
pop
jle
testb
mov
mov
cmp
das
inc
loop
adc
icebp
mov
adc
xor
pop
dec
add
lahf
lds
fucomi
push
cwtl
fisubrs
popa
push
inc
or
enter
dec
ret
xchg
ret
mov
call
les
mov
shl
lret
mov
cmp
and
outsl
cs
or
jmp
in
mov
adc
mov
jnp
pop
insb
ret
addl
cmp
movsb
jge
pusha
xlat
mov
lea
jo
cmpsb
xchg
pop
push
pushl
shll
mov
xor
dec
mov
ss
adc
stos
mov
pop
xchg
adc
push
or
mov
mov
add
inc
sbb
mov
mov
mov
xchg
jl
and
int3
sbb
dec
pop
or
jmp
jle
lods
fiadds
pop
jmp
scas
sub
or
sub
add
xchg
stos
jg
daa
dec
adc
add
popa
adc
int
and
dec
cld
mov
addr16
lock
bswap
enter
icebp
stc
lock
in
enter
fimull
loope
iret
in
cmp
out
movl
fdivrl
leave
call
push
xchg
pushf
mov
pusha
leave
xchg
pop
cmpsl
int3
mov
cmp
pop
pop
push
mov
adc
test
xchg
push
xor
pop
bound
je
roll
mov
outsb
or
cli
pop
loopne
dec
jle
xchg
shl
aas
push
cmp
jp
fwait
or
xchg
jae
mov
add
cmc
cltd
iret
add
pop
int
sbbl
adc
jmp
test
popa
and
push
xor
rcrb
aaa
sbb
cmpsl
mov
and
jmp
inc
das
mov
xor
fnstenv
cltd
repz
or
adc
ret
push
cltd
outsb
pop
sub
in
mov
aaa
addr16
sub
cmp
xchg
fisubrl
jge
mov
fimuls
cmpsl
dec
pop
inc
data16
scas
pop
shlb
repz
dec
fimull
and
sti
jge
outsl
sbb
popa
push
mov
loopne
mov
scas
lahf
jbe
pop
je
rclb
in
pop
es
popa
adc
xchg
cmpsb
dec
inc
and
cmpsb
sub
data16
xchg
pushf
jmp
ret
shll
out
cmp
inc
sbb
mov
pop
dec
mov
gs
adc
jb
es
add
push
mov
sub
sub
lds
pop
mov
add
es
cmpsl
cmp
aad
inc
iret
notl
arpl
mov
inc
in
and
pusha
es
lds
das
adc
aaa
jno
mov
mov
mov
jle
cmp
fstl
mov
jge
inc
lret
dec
imulb
int3
push
lods
pop
rclb
int
fisttpl
outsb
mov
mov
enter
inc
sub
jns
push
in
mov
daa
aas
push
xlat
mov
insl
test
fcoms
hlt
mov
adc
add
insl
cmp
arpl
fstpl
test
mov
mov
mov
jmp
out
enter
rolb
shrl
in
aas
mov
nop
cmpsl
xchg
and
and
pusha
and
and
dec
adc
sahf
sysret
cwtl
mov
push
test
push
mov
and
leave
mov
adc
push
adc
in
dec
add
out
inc
mov
mov
and
adc
push
push
mov
sub
cmp
xor
mov
dec
into
test
js
adc
sbbb
fdivrl
push
shl
inc
push
adc
in
xor
sbb
xor
push
lods
sub
das
dec
push
das
add
inc
stos
cmpb
ds
inc
inc
jo
pop
jns
push
lret
fmulp
push
add
out
icebp
lods
push
fisubrl
cmp
fsubs
testl
sbb
add
lcall
jp
mov
dec
sysret
scas
cmc
sub
hlt
jae
or
adc
push
mov
popa
pop
stos
cmp
rolb
or
aaa
subb
mov
enter
mov
popa
inc
pop
jge
mov
data16
push
fldpi
lret
xchg
jge
mov
inc
mov
outsl
imul
test
pop
lock
popf
or
jl
in
xchg
pop
adc
pop
addr16
or
push
pop
mov
sub
or
pop
ds
adc
mov
test
pop
or
xchg
xchg
dec
mov
add
push
mov
fbld
int3
mov
decl
lcall
mov
push
xor
mov
and
mov
frstor
inc
ljmp
inc
sbb
pop
mov
sbb
mov
std
and
jb
lret
pop
lcall
outsb
fwait
orl
mov
inc
jnp
mov
xchg
shlb
fnstsw
xor
xchg
and
or
xor
jmp
ret
mov
outsl
jle
sub
lret
dec
mov
lahf
sbb
xchg
push
and
rcrb
push
mov
std
push
mov
jmp
jecxz
cmpsb
test
shrl
or
mov
jge
out
mov
pop
sub
and
daa
dec
hlt
cld
inc
xchg
clc
imul
in
add
shrb
xchg
pop
mov
test
insl
out
mov
stos
sahf
lea
xor
jle
decb
shll
ss
or
push
into
xchg
xchg
cltd
adc
stos
sub
jge
cmp
sti
sub
jae
xor
push
sub
dec
sub
dec
cmp
cmp
push
push
outsl
jnp
insl
pop
xchg
mov
cli
clc
je
shlb
cli
repz
mov
in
iret
inc
dec
xchg
or
or
insb
ljmp
out
push
mov
pop
dec
sbb
add
inc
push
jae
fstps
push
xor
push
fnstenv
rcll
in
loopne
sub
jo
pop
mov
or
pop
mov
mov
mov
sub
enter
dec
or
and
sub
in
mov
scas
push
add
pop
out
inc
test
sbb
pop
and
and
stc
xchg
sbb
je
cld
fstpl
addr16
fwait
jns
test
and
mov
sbb
stos
add
mov
adc
inc
and
daa
add
xchg
sub
add
cmp
lds
mov
add
adc
push
mov
jle
jae
sub
movsl
xchg
add
push
sub
xchg
jb
les
lcall
cltd
add
adc
ja
loopne
lcall
icebp
imul
cmp
pop
adc
lods
mov
add
and
push
mov
mov
xchg
add
dec
xor
mov
inc
cmp
xchg
adc
sub
aad
jecxz
add
jne
push
cmp
inc
xchg
jb
mov
push
xor
mov
push
sbb
pop
mov
div
sub
dec
inc
lods
push
lret
jmp
nop
inc
les
es
mov
imull
ds
pop
je
cmpsl
int
je
ja
mov
xchg
adc
sub
mov
sub
jbe
popf
jae
outsl
sbb
mov
or
cmp
out
es
pop
cwtl
jnp
cltd
or
mov
bound
add
and
movsb
or
dec
inc
xchg
push
es
push
and
in
cltd
frstor
dec
rcr
cmc
pop
sahf
int
jne
and
xchg
andb
sub
in
mov
dec
lahf
test
mov
push
xchg
mov
mov
mov
fists
lds
ss
gs
ja
jo
stos
mov
inc
ja
adc
cmpsl
repnz
mov
movsl
ror
lock
call
out
mov
out
test
imul
insl
jle
jg
out
pushf
testb
jge
dec
ret
xor
imul
call
in
fmull
hlt
mov
rcl
pusha
sbb
imul
jecxz
xchg
lret
mov
pusha
aaa
mov
jnp
pop
mov
and
xchg
out
insb
out
and
imul
add
xor
test
mov
scas
add
lea
je
subl
lahf
adc
lock
xor
dec
sti
sbb
scas
stc
add
insb
aaa
bnd
push
mov
imul
cmp
push
cmc
adc
outsl
movsl
xor
dec
sub
mov
inc
lret
je
out
loopne
push
outsl
and
xor
nop
sub
add
add
aad
cltd
lea
int
jg
mov
fisubrs
ret
aas
xchg
push
push
mov
mov
dec
pop
cltd
cmp
adc
jb
push
adc
sub
and
or
outsb
cmp
cltd
pop
btc
fcompl
push
cli
out
mov
es
push
adc
mov
imul
decl
lods
rorl
mov
imul
fisubs
mov
inc
xor
mov
icebp
dec
xor
mov
cltd
xchg
jecxz
pop
jp
dec
lcall
nop
icebp
pop
inc
pop
cmp
bound
cmp
push
movsb
mov
xchg
cmc
cld
stc
add
notl
mov
out
push
pop
popf
leave
inc
fwait
mov
cld
imulb
push
cwtl
call
hlt
sub
test
jecxz
or
mov
dec
in
arpl
fdivrs
sub
jp
stc
or
xchg
sub
and
stos
adc
pop
jl
in
pop
or
mov
cmpsl
stc
cmp
pushf
or
add
outsl
stos
adc
popa
cli
andl
push
cmp
and
in
test
lea
out
hlt
enter
inc
lods
cli
stc
push
jg
dec
mov
inc
sub
pop
fsubs
cmpsb
fcom
cli
sub
mov
addr16
lret
cmp
adc
loopne
xchg
mov
inc
or
clc
mov
pop
inc
jle
inc
dec
inc
cmp
mov
ljmp
int3
or
xor
add
mov
test
stc
cmp
test
push
scas
mov
ficoms
aas
out
sarb
insb
pop
cmp
pushf
cmp
lods
sub
adc
inc
testb
enter
mov
pop
lds
and
adcl
push
dec
inc
mov
push
xchg
inc
dec
cmp
pop
or
pop
cmp
aad
mull
fnstsw
jnp
gs
and
push
sbb
jl
ljmp
imul
cli
adc
mov
and
sub
ret
into
cli
js
xchg
adc
mov
push
lcall
xor
js
mov
push
sub
addl
push
fcmovu
sarl
pop
and
cmp
int3
mov
jns
stc
repnz
mov
push
pushf
ficoml
jl
adcb
rolb
mov
pushf
lea
rcr
fwait
dec
cwtl
push
das
lods
and
mov
inc
fildll
push
stc
xchg
fcom
shlb
lods
inc
xor
sti
ret
inc
fnstsw
lock
aam
and
ds
incb
push
rcll
cs
mov
xor
repnz
mov
push
cld
outsb
sub
dec
outsb
out
add
sti
outsl
adc
mov
jge
ja
lcall
sub
mov
xor
cmpsb
fcomps
fwait
sbb
sub
popf
cli
ret
das
arpl
xor
bound
mul
sbb
shr
jle
mov
lock
gs
add
adc
lods
lea
jecxz
lods
int
divl
lods
xor
xlat
and
test
imul
ljmp
inc
fsub
mov
notb
xor
movsb
lods
loope
fsubrl
xchg
popa
xor
xchg
jge
js
mov
and
add
test
lea
call
xchg
adc
push
cmp
jo
push
imul
popa
loope
mov
repnz
and
lods
mov
nop
mov
ja
in
adc
xlat
int
xchg
jne
lcall
iret
pop
adc
rolb
int
pusha
imul
imul
rcr
xchg
test
rcll
sbb
in
or
jno
add
lods
rcr
pop
cmp
dec
push
push
arpl
mov
xor
xchg
lock
add
or
aad
mov
js
insb
sti
sbb
or
pop
ja
or
xor
js
sti
shll
push
jmp
repnz
push
inc
int3
dec
icebp
jp
cmc
inc
shl
rcrb
scas
xchg
ja
outsl
test
inc
inc
ljmp
insl
lods
add
xlat
and
mov
pop
scas
shrl
push
push
add
pop
mov
add
std
mov
fwait
dec
pop
push
jns
and
cmp
movsl
or
adc
adc
fsubrl
or
scas
cmpsl
dec
loop
lret
pop
or
sti
outsl
sub
push
fisttpl
in
push
insb
in
addr16
mov
popf
jp
int
xlat
add
xor
inc
xchg
int3
icebp
movsb
addr16
iret
imul
pop
add
push
jp
mov
enter
push
pop
mov
inc
cltd
pop
pop
imul
add
push
and
or
ds
mov
dec
das
push
mov
cmp
jmp
mov
push
mov
arpl
add
ret
mov
adc
mov
clc
pop
and
push
cmp
and
movsb
and
mov
pop
dec
sbb
inc
fstl
pop
and
lds
xchg
nop
jo
and
dec
mov
mov
mov
mov
cmp
mov
ret
mov
outsl
sbb
jecxz
inc
lret
nop
mov
jge
pop
clc
pop
or
push
add
sahf
rorb
add
push
les
mov
popa
jp
sbb
mov
pop
mov
cmp
test
push
cld
ds
mov
jecxz
rorl
add
imul
jne
xor
sbb
test
mov
in
inc
insl
mov
mov
adc
movsb
mov
sbb
dec
and
add
xor
inc
leave
cmpsl
push
shll
popa
jmp
or
pop
xchg
out
push
and
mov
jnp
scas
cli
jg
push
repz
bound
mov
pushf
insb
sub
xchg
or
adc
cmpsl
ljmp
sbb
pop
jmp
adc
xor
cmp
xlat
ret
mov
movl
mov
subb
icebp
xor
movl
out
sbb
sbb
es
push
movsb
dec
lock
shll
in
pop
add
in
addb
ja
push
fxch
cwtl
notl
subb
cmp
sti
mov
sbb
aaa
ror
jae
pop
mov
js
or
mov
mov
jecxz
insb
cs
pushl
in
cmp
xchg
mov
outsb
jp
sub
push
pop
int3
pop
pop
add
cwtl
cmp
push
push
cmp
scas
inc
add
frstpm(287
fsubrs
or
popf
inc
or
xor
xchg
lret
xor
sbb
mov
lea
std
popa
mov
adc
ljmp
popf
lods
or
pop
mov
test
cmp
out
subl
arpl
adc
aam
gs
jo
das
add
xchg
push
xchg
mov
mov
cld
test
inc
push
jae
dec
mov
stos
or
repz
pop
mov
ss
mov
popf
fstl
and
in
xchg
push
xchg
cmp
or
arpl
ret
jne
call
cmp
jb
les
cmp
cmpsl
adc
push
fistpl
outsl
adc
sbb
sbb
cmpsl
jmp
aas
push
add
jp
mov
fsub
hlt
js
sbb
sub
jb
xor
cmpsl
mov
popa
lret
push
inc
xor
iret
aaa
push
sbb
mov
repz
into
scas
and
cmp
jne
je
test
dec
add
int3
cmp
dec
cmp
lock
xchg
pushf
addr16
in
dec
jae
out
add
lret
xchg
mov
ds
mov
mov
xor
test
inc
xchg
push
fildll
icebp
xchg
and
push
bound
leave
leave
xchg
mov
pop
bound
sbb
cmp
push
xchg
pop
push
add
pop
out
sub
andb
cmp
inc
lret
or
push
ja
and
es
ljmp
jmp
add
push
pushf
mov
cwtl
jmp
in
pop
and
mov
pop
xor
and
sub
insl
bound
xor
xor
or
or
mov
out
dec
push
mov
mov
std
xchg
sub
out
fstps
shll
div
adc
scas
lahf
add
push
daa
insb
add
sub
or
mov
sbb
daa
jmp
repnz
addr16
scas
inc
xchg
repnz
sub
cmpsl
data16
dec
add
inc
adc
sahf
mov
sub
mov
mov
fnstcw
xor
push
cmp
cmp
pop
mov
inc
shlb
out
or
sub
sbb
mul
call
and
das
pop
outsb
or
xor
ds
insl
hlt
xchg
pop
std
jmp
shlb
lock
mov
roll
lahf
sarb
mov
movsl
ficoms
cs
xchg
mov
xor
daa
int
div
push
sub
cmp
pop
or
bound
add
imul
jno
gs
jae
mov
stos
repz
aam
or
mov
adc
add
pusha
pusha
push
fcmovnbe
movsl
jno
xchg
add
ffree
xor
push
sbb
cmp
stos
or
cmp
mov
dec
mov
mov
cmpsb
dec
mov
outsb
dec
inc
inc
xchg
arpl
adc
lds
cmp
mov
push
sbb
jge
dec
lahf
push
add
ret
sbbb
adc
add
inc
push
xor
mov
popw
dec
mov
add
mov
fld
int3
add
and
sbb
adc
xchg
testl
push
push
jne
cmp
cmp
sub
loop
shrl
fdivp
or
ljmp
jl
or
rclb
and
push
clc
cs
sti
cmc
dec
out
idiv
int
mov
jp
xlat
add
sub
enter
outsl
xor
imul
adc
imul
shrb
sahf
adc
jae
outsb
inc
cmp
xchg
mov
mov
movsb
cmp
adc
cmpsb
push
mov
inc
mov
into
icebp
pop
push
add
cmp
jg
jbe
adcl
push
lods
sbb
mov
imul
xchg
scas
sbb
les
fidivl
push
cltd
fneni(8087
enter
cmp
mov
mov
pop
rclb
pop
out
test
out
add
cmp
cli
sub
push
into
inc
sub
push
rcrl
ror
adc
xchg
sbb
jae
lods
adc
lods
mov
jo
aaa
clc
push
loopne
mov
pop
xchg
jne
mov
xchg
push
push
out
je
lret
dec
sbbb
into
jnp
mov
outsb
das
mov
sbb
inc
pushf
cmp
sbb
mov
outsl
push
gs
or
jne
mov
inc
and
js
and
adc
cmp
mov
mov
mov
leave
xor
imul
xor
mov
and
sbb
rcrb
xor
into
cmp
testl
dec
sarb
pop
inc
cmp
mov
mov
icebp
rcll
inc
ss
fwait
ds
add
sbb
movsl
xor
adc
sti
mov
jbe
inc
mov
cli
popf
jb
es
xor
inc
mov
push
test
out
lods
sbb
popf
sbb
pop
jbe
inc
cltd
enter
adc
pop
xlat
popf
shl
gs
or
ret
or
cmovns
shrb
jge
das
popa
dec
xor
adc
sarl
dec
sub
jle
insb
dec
test
flds
push
push
mov
inc
test
xor
imul
clc
jbe
mov
mov
test
sbb
push
mov
jb
mov
fwait
sub
cli
xchg
push
int3
push
jbe
jne
mov
adc
jns
mov
addr16
push
stos
adc
xor
in
sarl
add
sbb
fildl
loope
xor
in
lret
inc
imul
mov
int3
test
jmp
enter
cmp
mov
test
out
xchg
in
cmp
mov
push
mov
mov
jg
xchg
or
dec
fnstcw
hlt
movsl
pushf
inc
rcl
add
mov
stc
pop
cmp
push
mov
ljmp
and
push
test
mov
jne
cmc
cmpb
dec
xchg
outsl
mov
mov
jecxz
in
jle
gs
test
lcall
in
sub
push
cld
mov
inc
popf
leave
stc
or
mov
add
lret
lds
adc
push
inc
int
popa
pop
push
nop
sub
dec
jl
inc
fisttpl
jle
data16
cld
cmp
out
adc
jl
jbe
pop
xchg
push
ljmp
insl
ja
flds
push
int3
push
in
pop
push
fidivrl
or
sahf
test
shrb
outsl
imul
mov
inc
mov
mov
shl
lahf
sbb
movsb
das
testb
stc
dec
mov
fmuls
addr16
les
add
es
test
ss
jns
lods
adc
aad
enter
ds
or
add
sub
stc
push
mov
or
call
das
inc
out
mov
inc
clc
adc
aam
test
int3
mov
incb
dec
shlb
lea
cltd
out
das
jo
sub
insb
fldenv
scas
or
loop
mov
rol
scas
inc
bound
or
imul
xchg
stos
iret
mov
pop
adcb
jecxz
pusha
or
in
cmc
and
mov
pop
sub
daa
jns
scas
insb
jae
cmpsl
icebp
stc
inc
std
jns
lret
inc
test
rorb
xlat
stc
inc
gs
fisubrs
xor
dec
ss
add
xor
pavgw
loope
pop
out
xchg
jne
insb
les
fnstcw
push
movl
inc
mov
mov
cmp
add
orl
mov
jl
loopne
mov
dec
fidivl
jg
pop
xchg
mov
ljmp
lods
mov
mov
fdivrs
mov
xlat
pop
pop
sub
fcomps
dec
mov
sbb
es
cs
xchg
loopne
adc
lret
fdivs
cmp
mov
jle
outsb
push
jl
xchg
in
out
sbb
add
push
adc
xlat
jmp
mov
jnp
imul
ds
fs
jmp
jnp
sahf
cmpsb
sbb
nop
testb
sub
dec
mov
out
pop
cmp
fmuls
imul
cmp
popf
cmp
shrb
xor
cmc
and
sbb
loope
andb
lret
stos
out
cltd
fiadds
dec
mov
sub
xor
xchg
jg
nop
stos
xor
push
jp
xchg
jbe
es
shrb
das
jne
jmp
test
jno
sbb
insb
into
pop
lret
lret
mov
or
inc
out
mov
pop
psraw
mov
je
icebp
or
adc
outsl
add
scas
mov
mov
cmp
and
xchg
in
adc
mov
cwtl
nop
daa
jne
cmpsl
std
dec
jmp
push
add
fildl
mov
mov
lcall
push
or
sbb
add
insb
jge
pop
out
popa
ljmp
popf
loope
jnp
mov
ja
mov
ss
jecxz
mov
push
enter
psraw
mov
cld
xchg
xchg
or
call
or
dec
clc
out
and
xchg
out
dec
sbb
test
les
fld
push
mov
out
cmpsl
decl
inc
adc
aam
fidivrl
popa
call
lahf
cmpsb
lret
out
mov
fs
mov
cmc
and
jb
clc
ljmp
ret
or
inc
mov
adc
sahf
and
sbb
jge
outsb
adc
push
adc
hlt
xchg
mov
addl
pop
out
jno
sarb
xchg
and
fdivs
pop
imul
outsb
xor
add
mov
pop
dec
leave
xor
neg
test
or
addl
add
mov
add
int
jmp
and
push
test
fbstp
push
add
push
and
std
push
mov
adc
sbb
rcr
repnz
not
ret
push
dec
nop
fimuls
sbb
mov
rcrl
shrl
mov
pushf
movb
fwait
insb
incb
into
mov
add
xchg
pop
hlt
dec
mov
push
or
das
xchg
les
fwait
inc
rcl
mov
sbb
test
aas
stos
popf
sbb
jae
lods
and
xlat
clc
push
fiaddl
inc
xchg
data16
fnsave
roll
sbb
cmp
dec
jne
inc
mov
scas
xchg
loopne
pavgw
dec
loop
lcall
sbb
lods
mov
clc
mov
andl
dec
cmp
pop
inc
leave
or
push
sbb
or
mov
rcr
jo
mov
push
add
and
in
ljmp
pop
ror
cwtl
and
xor
mov
xor
cli
cltd
add
cmp
jae
loope
sbb
ja
push
fstpt
or
add
das
orb
lock
inc
xchg
or
sbb
stos
adc
hlt
cmp
mov
push
pop
movsb
and
fs
sarb
xchg
out
in
xor
outsb
or
je
les
mov
dec
insb
in
and
xor
lahf
pop
adc
dec
ss
gs
mov
jge
std
xor
outsl
pushf
xchg
lea
lods
daa
mov
mov
jns
mov
dec
jnp
in
mov
mov
mov
push
outsl
inc
and
pop
or
jg
cmpsb
xor
outsl
cmp
adc
nop
mov
in
inc
pop
push
xchg
fs
jmp
pop
mov
ljmp
orl
std
cmpsl
mov
inc
test
jb
shll
fnstsw
cld
hlt
xlat
mov
fidivl
mov
stos
cmc
iret
test
mov
sahf
lods
pop
jle
xchg
pop
add
mov
adc
push
ds
or
pop
push
push
add
dec
or
je
dec
push
iret
scas
cmp
cld
mov
cmp
jne
test
icebp
fsubrl
cmc
jbe
jae
sub
inc
in
aam
mov
mov
call
std
mov
xor
mov
and
mov
andl
or
inc
scas
pop
insb
mov
adc
outsl
jge
mov
test
cwtl
xor
mov
in
adc
mov
dec
fstpt
jae
mov
pslld
outsb
into
orps
sub
xor
mov
pushf
jle
stc
fidivl
aad
or
mov
jne
xchg
je
rol
stos
mov
mov
hlt
dec
not
xchg
cli
pushl
xchg
in
push
sahf
jp
sbb
cld
loopne
dec
jnp
push
cwtl
movsl
mov
divl
sbb
push
jl
lret
jmp
and
push
out
pop
jle
das
jbe
mov
jge
push
aad
aam
xor
std
push
push
fwait
add
lret
sbb
rorb
xchg
cmp
pop
jne
inc
orl
popa
movsb
imul
inc
rolb
popa
clc
xchg
arpl
or
mov
popa
push
mov
shlb
jno
sub
mov
sbb
jne
mov
imul
push
or
cmp
lret
pop
mov
xchg
iret
mov
popa
fs
arpl
inc
es
jle
fwait
dec
xor
jg
scas
incb
imul
xchg
xor
push
ja
fadds
aam
inc
inc
bound
rorb
sbb
ja
push
mov
ret
movsb
xchg
add
sbb
mov
ffreep
addr16
jge
mov
pushf
mov
push
inc
xchg
mov
movsb
xchg
cwtl
or
outsl
cs
popa
jbe
ret
mov
push
mov
ret
orb
push
repz
or
or
sbb
jle
mov
add
test
xchg
or
pop
mov
aam
xchg
inc
cmp
push
movsl
adc
mov
adc
test
stc
fcmovnb
mov
mov
ret
cld
bound
cld
xlat
cmp
frstor
aad
push
cmpsl
sbb
push
test
aam
imul
filds
movb
aad
inc
int
add
std
add
dec
adc
sbb
mov
ficoml
and
ficomps
mov
xchg
cmpsl
add
aas
rcrb
fnstsw
sarl
add
sub
inc
ficoms
xchg
adc
mov
lods
sti
or
sbb
jmp
les
lds
loope
fdivrs
xor
cmp
add
loope
call
mov
sbb
lock
and
aam
movsb
dec
mov
imul
shlb
sub
adc
mov
cmp
inc
xor
sbb
jbe
lods
fidivrl
mov
in
movsb
shl
add
dec
out
pop
adc
rcr
mov
mov
mov
shll
dec
cmp
push
subl
adc
scas
nop
xor
mov
jne
test
xchg
sub
scas
xchg
jge
aas
mov
mov
out
fcomip
rclb
cld
stos
je
in
sahf
fxch
cmpsb
sbbb
mov
mov
jbe
out
jns
stos
adc
or
dec
sbb
mov
sti
add
mov
lea
iret
cmpb
sbb
sbb
jo
mov
dec
or
call
jno
shll
sub
ss
stc
cmp
call
fcmovbe
or
mov
cmp
jnp
sbb
cmpsl
xchg
cld
sbb
dec
nop
jae
call
and
sub
cltd
aad
add
cmp
cltd
inc
adc
fnsave
ret
inc
in
xchg
mov
test
stc
and
add
cmp
add
sub
sbb
mov
jecxz
cmpsb
or
add
push
cmpl
sub
xor
loop,pn
jp
pop
les
sti
fidivrl
loope
adc
pushf
das
fwait
pop
fwait
xchg
fmull
ror
mov
mov
stc
repz
lcall
popf
inc
and
and
call
mov
xchg
es
mov
pop
mov
mov
sub
ret
scas
nop
ficompl
aas
in
arpl
cmp
mov
sub
shl
outsb
sbb
lock
push
sbb
add
ljmp
enter
push
mov
leave
jmp
xchg
push
das
dec
sbb
movsl
mov
mov
ja
pop
mov
mov
scas
int3
dec
add
popa
mov
cld
inc
stc
into
xchg
push
in
fdiv
mov
mov
cmp
lods
adc
push
and
sub
loopne
sbb
mov
rcrl
sbb
pop
lret
sbb
push
push
jns
adc
out
mov
jecxz
and
adc
roll
dec
inc
cld
arpl
mov
pop
and
xchg
jle
pop
add
in
loop
cli
iret
cmp
lcall
jb
jge
aam
hlt
xor
lods
pop
sub
adc
add
outsl
sbb
leave
clc
loop
aam
cli
daa
stc
faddp
xchg
mov
shll
push
add
mov
dec
sbb
movsl
fwait
int3
iret
sbb
loope
pop
pusha
out
xor
inc
dec
mov
outsb
mov
xchg
pushf
mov
jle
mov
insb
push
pop
adc
out
stc
or
dec
mov
in
rorb
out
cmp
pop
mov
cld
fs
out
subb
cwtl
mov
fbstp
int3
mov
pop
jno
rorb
ret
mov
sti
pop
push
jno
ljmp
cmp
addr16
adc
sahf
add
pop
notl
incl
sbb
jnp
aad
push
jnp
mov
inc
in
push
push
jg
test
mov
adc
mov
mov
adc
xchg
fidivrs
cwtl
out
cmp
fwait
out
sbb
sub
sti
lcall
jbe
loope
inc
aad
xor
cwtl
sub
xchg
push
adc
jae
jp
notb
xchg
lret
add
push
gs
fwait
je
or
jmp
iret
mov
fwait
scas
ljmp
mov
jle
sbb
lods
inc
or
rcll
aad
mov
sub
sbb
or
movsl
gs
lods
add
mov
es
imul
nop
loopne
dec
jmp
push
or
mov
jecxz
pop
test
jns
ljmp
sub
iret
sti
jle
aam
sbb
dec
js
cmpsb
repnz
add
in
mov
fprem
xchg
shll
dec
cmp
cmpsl
jmp
aam
or
mov
mov
adc
stos
cmp
lea
cwtl
dec
scas
ss
fsubr
or
and
sbb
pop
mov
jne
sub
cmpsl
aam
push
inc
out
scas
movsb
jl
sarb
popf
pop
cmpsb
sbb
lret
cmpb
sub
cmpsl
arpl
shlb
shrb
pop
aad
movsl
or
mov
inc
xor
jns
adc
out
das
pushf
mov
fistpl
add
sub
mov
fmulp
cwtl
push
insl
out
lods
ret
xor
imul
aas
lods
outsb
jns
aaa
insb
sbb
movsl
and
je
jo
roll
sub
data16
dec
aam
jmp
jge
push
dec
sub
sti
xor
cmpsl
jl
sti
rcl
test
mov
and
or
out
push
or
adc
repnz
mov
jmp
jae
sub
mov
xchg
push
shrl
xor
stos
sbb
inc
lret
scas
lcall
fsubrs
inc
jbe
fcompl
fwait
cmpl
add
testb
sbbl
cmpsl
decl
test
mov
mov
in
insl
insl
aaa
pop
xchg
fs
dec
shlb
lahf
testb
jecxz
ds
adc
dec
xchg
and
cmp
int
add
daa
push
faddl
mov
clc
das
ret
jb
call
push
imul
adc
or
jle
cmp
sub
inc
fimuls
mov
mov
mov
sbb
shll
into
repnz
icebp
rorb
je
loopne
xchg
adc
mov
dec
mov
fcompl
xchg
adc
xchg
in
pop
push
pop
jae
add
or
out
xchg
fwait
icebp
dec
push
xor
scas
lea
fstpt
adc
inc
cmpsl
inc
in
add
les
mov
and
popf
push
pop
sub
insl
es
mov
mov
lcall
add
punpckldq
icebp
dec
shlb
scas
adc
mov
lock
and
mov
mov
sbbl
data16
push
cmp
cmpsb
push
cli
push
add
or
push
std
cld
scas
lds
mov
mov
out
mov
stos
pop
popf
mov
jno
clc
imul
inc
pop
lret
mov
xchg
cli
filds
repnz
inc
test
add
cmpsb
stc
push
ficoml
test
fisubrl
in
mov
pop
adc
pop
jg
pop
cmp
adc
lods
outsb
adc
inc
inc
dec
and
lret
icebp
mov
addl
popl
pop
lds
aaa
push
lahf
mov
movsl
xor
push
daa
std
adc
rorb
out
aam
push
and
sbb
rcll
test
sarl
jmp
sahf
xchg
loopne
loopne
rcrl
jnp
xor
jno
addr16
icebp
xlat
lock
push
mov
cmc
sbb
xchg
mov
test
ss
cli
push
mov
pop
add
out
xchg
push
cmp
jne
cmp
fnsave
jle
out
test
push
push
stos
and
inc
mov
fnstsw
push
mov
sub
lret
addr16
dec
sub
fsubrl
ja
cmpsl
xchg
adc
cmp
fists
mov
lds
lret
and
in
bound
xor
loop
das
adc
push
repnz
aad
mov
jae
xchg
jnp
mov
mov
cmp
enter
mov
mov
rol
pop
cmpsl
pop
mov
or
pop
fwait
call
in
arpl
sub
das
aad
cmp
and
mov
inc
xchg
push
cmp
sbb
mov
or
push
sti
or
jns
dec
cmpsl
sub
frstor
cs
movsl
sbb
dec
xorl
popf
and
add
adc
or
pop
xchg
cmp
stos
and
repnz
add
gs
inc
addr16
sub
arpl
mov
inc
ret
xor
call
pop
sbb
push
das
and
push
jg
inc
sub
inc
sti
or
or
into
sub
insb
pop
aam
ret
fstl
dec
ds
jae
scas
test
aad
pop
mov
int3
decl
pop
mov
xor
mov
fbld
repnz
loop
inc
daa
dec
imul
pop
pop
stc
add
mov
dec
inc
xchg
xlat
xchg
dec
loopne
cld
mulps
and
mov
outsb
pop
mov
movsl
lock
icebp
pop
and
movups
pop
rolb
in
pop
jno
add
mov
gs
xor
pop
dec
pop
adc
cmp
jp
or
daa
xlat
das
lahf
mov
sti
enter
adc
pusha
jl
imul
push
sub
sbb
fisubrs
lock
daa
sbb
mov
xchg
push
movsb
cmp
in
pop
or
or
jmp
fcomip
dec
pop
sub
clc
sti
push
rcrb
or
jo
pop
jae
jp
xchg
es
add
sbb
cwtl
cld
mov
ret
xor
lock
inc
jo
imul
pop
movsl
lods
cmp
sbb
xor
and
sub
lahf
and
or
or
pop
jb
mov
inc
fisttps
cmp
popa
dec
adc
insl
add
stc
pop
aaa
sbb
and
jne
movsl
outsb
test
lea
ret
jnp
mov
and
push
add
mov
cwtl
mov
orb
cmp
cmp
lea
mov
xor
jno
icebp
mov
fcoml
push
cmp
jle
faddl
dec
shlb
push
stos
sbb
dec
out
push
inc
pop
arpl
arpl
out
xor
leave
das
xchg
pop
pusha
inc
into
mov
adc
inc
scas
imul
push
inc
lahf
in
fs
fwait
mov
negb
add
and
lcall
xorl
arpl
std
jne
mov
arpl
pop
mov
xchg
dec
push
cltd
add
popf
leave
mov
inc
pop
jnp
and
pop
pop
arpl
push
fbld
xchg
insb
push
ds
mov
iret
inc
arpl
jp
mov
movsb
mov
adc
stc
mov
mov
push
jecxz
cmpb
and
call
das
int
lret
gs
popf
je
ljmp
cmpl
in
scas
jge
test
arpl
pop
and
push
add
or
fnsave
inc
nop
mov
jmp
sbb
out
imul
jmp
data16
out
push
mov
aam
mov
lahf
and
push
lock
rcrb
pop
mov
mov
dec
in
inc
xchg
jns
adc
cmp
inc
lds
inc
ja
mov
inc
jns
mov
xchg
mov
mov
dec
cmpsl
push
pop
cmp
cmp
xor
jo
push
pushf
push
les
xchg
sub
aad
mov
xor
push
insb
mov
pop
xor
ficoms
cld
inc
gs
jbe
enter
mov
mov
cli
out
xlat
test
jno
mov
stos
popa
imul
mov
mov
repnz
jae
ret
mov
data16
pop
mov
in
sahf
rolb
mov
jp
adc
out
push
fidivs
in
and
inc
jne
ljmp
loope
insb
sub
repnz
xor
dec
pusha
in
movsb
loop
sbb
std
xor
pop
push
pusha
loop
in
data16
out
test
mov
inc
stc
mov
dec
jbe
icebp
nop
add
fcomps
cmpb
jne
in
bound
add
fldt
xor
adc
clc
addr16
pop
out
lret
pusha
xor
scas
adc
mov
stos
pop
pop
cltd
mov
js
mov
fmulp
cltd
fstpl
sbb
fstps
mov
lret
adc
stos
scas
push
fisubrs
mov
and
adcl
sub
lock
int
mull
insb
stos
fnstsw
loopne
xchg
pop
mov
jbe
arpl
mov
sbb
inc
lret
xchg
mov
movb
jg
daa
cltd
subl
xchg
popf
gs
pop
outsb
in
cmp
add
test
mov
add
dec
lcall
shlb
pop
pop
sbb
lcall
imul
loopne
xchg
cmp
sbb
dec
int
stc
sbb
jge
sbb
adc
cli
fs
gs
sub
xor
in
and
pop
dec
pop
flds
fisttpl
cmc
sbb
movsl
addl
imul
pop
ljmp
push
sbb
testb
mov
test
jb
insl
push
dec
nop
push
das
repz
sub
mov
jns
mov
icebp
js
mov
cmp
dec
fidivrs
pop
push
jl
leave
add
rep
sti
subb
or
imul
test
pop
lret
shlb
stos
xor
pop
xchg
sub
test
rolb
adc
icebp
loopne
pushf
out
in
push
aas
enter
jae
dec
ja
icebp
nop
data16
iret
push
out
ret
punpckhbw
inc
sbb
mov
neg
je
lret
ret
aad
fnsave
jge
and
psrld
xchg
pusha
lcall
into
adc
sbb
cmc
shll
movsl
pop
incb
pusha
stos
out
or
push
out
rcr
cmp
inc
roll
cmp
mov
mov
inc
arpl
fidivl
les
lret
gs
mov
pop
mov
xor
stos
dec
aad
xchg
sbb
mov
dec
jne
jmp
add
dec
mov
lds
sbb
pop
pusha
aaa
lea
jo
or
push
jge
addl
stos
lods
inc
inc
sbb
push
pop
movsb
jecxz
fisubs
pop
in
pop
and
lahf
cli
sub
adc
sub
cs
pop
push
mov
cmp
push
add
sbb
dec
add
mov
pop
mov
popa
or
inc
int3
gs
lret
push
stos
fsubl
and
xchg
dec
outsb
mov
leave
add
movsl
cwtl
mov
insb
outsl
flds
and
mov
and
inc
std
sub
clc
push
repnz
pop
jb
mov
cmpsb
pop
out
das
or
inc
mov
lret
test
into
jb
fadds
mov
push
dec
push
repz
mov
aad
rol
rorb
pop
xchg
jge
ret
pop
andb
xchg
leave
test
sub
aam
xor
std
jns
and
inc
dec
jmp
push
pop
sub
inc
popa
pop
lret
mov
enter
and
shlb
or
gs
lret
lock
scas
xchg
xor
movl
mov
push
push
fwait
adc
cmc
dec
aad
adc
pop
pop
jae
and
push
fistpl
lock
repz
ds
or
insb
lea
jle
enter
mov
imul
mov
mov
out
add
popf
pop
mov
lea
mov
mov
arpl
mov
lea
or
jnp
mov
movsb
sub
or
push
nop
jl
jecxz
xchg
cld
inc
push
mov
cmc
dec
jne
in
mov
pop
push
dec
xchg
pop
xchg
mov
es
push
adc
out
mov
icebp
cld
stc
push
mull
aas
pushf
mov
stos
mov
push
aaa
sbb
pop
xchg
js
mov
out
pop
and
dec
data16
daa
pop
adc
push
xlat
shrb
push
sbb
pop
add
dec
xor
movsl
repz
jle
fistpl
fnstenv
sub
fsubr
outsb
xchg
aas
hlt
pop
cmp
test
mov
ljmp
insb
sti
lcall
mov
cli
aas
out
mov
in
rolb
pop
pop
mov
in
xor
pop
xchg
jnp
rcrb
fsubl
out
mov
leave
out
jbe
fldl
fsts
add
pop
das
ds
sub
adc
test
or
notb
and
dec
ljmp
lods
jmp
fidivrl
pop
jmp
mov
cmpsl
sti
push
push
into
add
out
xchg
scas
stos
push
add
sti
mov
sub
cltd
jecxz
or
lds
inc
je
sbb
pop
sub
add
test
mov
sub
mov
push
shll
dec
push
out
out
popa
popf
loope
and
and
pop
cmpsl
cwtl
cmp
or
xchg
out
add
xchg
xchg
dec
jecxz
cmp
add
fiaddl
sbb
pop
ss
jl
ficomps
sti
lds
das
out
notb
movsl
into
or
in
cmp
xor
repz
sti
mov
xor
push
test
enter
jg
jne
sub
jl
xor
xchg
xchg
outsb
add
cli
iret
icebp
inc
shll
or
or
mov
sbb
xchg
sub
cmp
mov
cmpsl
adc
adc
xchg
loopne
rcl
fwait
stc
dec
dec
int3
dec
loopne
push
cld
cwtl
aaa
inc
mov
out
or
push
sbb
mov
ficoml
das
cmp
insl
jno
and
outsb
mov
sbb
push
jae
cltd
pop
inc
inc
mov
sub
xchg
inc
stos
in
adc
decb
or
dec
ds
je
push
sbb
push
mov
jne
repnz
xchg
pop
jl
push
repz
jnp
xorb
ss
mov
fisubrs
add
rcl
out
mov
sub
pop
mov
sub
pop
cmp
xor
cs
or
mov
mov
add
mov
mov
movsl
sub
mov
jp
push
in
pop
mov
sbb
sub
lods
cmp
outsl
lfs
sahf
push
mov
jnp
jg
pop
iret
rolw
imul
bound
aam
testl
jne
add
sahf
push
or
add
sub
cmp
movsl
inc
jno
xchg
add
and
xchg
push
pop
fsts
inc
xor
iret
sub
insl
std
aad
orb
arpl
cmp
shlb
sbb
mov
sbbb
sub
mov
out
loop
pop
jno,pt
push
and
int
inc
mov
out
stc
push
stc
cwtl
cwtl
out
popa
outsl
lret
rcr
push
mov
mov
jmp
mov
outsl
test
xor
stos
lcall
loop
xor
inc
push
sub
xchg
loop
jnp
fadds
test
xchg
jb
jg
pop
lcall
fnstsw
dec
push
fsubl
inc
mov
stc
mov
aaa
mov
repnz
sar
mov
pop
push
pop
cmp
jp
pusha
pop
shrl
movsb
fs
xor
popl
mov
sbb
insl
outsl
js
jns
jae
fdivp
sub
xchg
pusha
mov
jp
popf
xchg
or
xor
enter
fdivrl
in
add
pop
cmp
repz
xchg
mov
add
cmp
fstp
in
xor
adc
call
xor
or
ficomps
add
int3
cmp
aad
ret
add
int3
mov
hlt
repnz
push
mov
push
stos
pop
mov
pusha
adc
inc
cmp
loope
cmp
push
mov
push
mov
mov
xor
adc
data16
push
ret
fcom
data16
sub
dec
in
aad
cmp
test
cmpsl
push
and
xlat
in
pop
leave
sti
sbb
xor
lcall
pop
mov
or
pop
sbb
pushf
mov
pop
xor
insl
gs
xor
sbb
ljmp
pop
sub
jo
mov
dec
push
in
loopne
xlat
repnz
stos
je
xor
and
push
ds
cmp
xchg
push
and
dec
xor
sbb
popf
sub
mov
adc
lret
fsts
adc
and
int
mov
aas
lahf
jno
aam
ret
mov
jb
add
push
push
cmp
int
nop
xlat
mov
xchg
or
dec
push
into
mov
adc
mov
pop
mov
fdivrl
xor
loopne
adc
pop
jno
mov
push
jno
adcl
ljmp
add
mov
movsb
mov
push
push
sbb
sahf
fs
sbb
and
test
dec
push
pusha
lret
add
pushf
sub
mov
mov
add
xor
xlat
ds
or
movsl
adcb
les
aaa
mov
iret
adc
repnz
sbbb
lods
sbb
outsb
push
lock
aaa
leave
movsl
imul
mov
repz
add
jbe
shrb
mulb
mov
fwait
repnz
ss
addr16
insb
notb
add
not
fwait
push
jnp
add
adc
fsubrl
sar
xor
sub
lods
inc
mov
scas
movsb
rcll
pop
sub
push
rcrl
arpl
pop
in
rcrb
jmp
jl
and
add
outsb
enter
idivl
cmc
loop
ffree
push
pushf
pop
mov
jno
xchg
push
mov
sbb
jnp
cld
xchg
mov
push
cmp
sub
adc
iret
enter
ret
cmp
shlb
imulb
scas
scas
sbb
movsb
mov
xchg
addl
xor
cmpsb
mov
push
mov
in
popf
addr16
jmp
pop
lret
xor
pop
sbb
jbe
cltd
ret
test
lods
add
into
fs
int3
sub
jo
out
push
mov
lret
or
stos
cmpsb
movsl
inc
bound
mov
jne
xlat
addr16
repz
pop
sub
xor
pop
dec
ret
je
mov
rcr
out
call
sub
mov
repnz
xchg
sarl
cmc
adc
mov
ret
imul
stc
sub
fdivl
lods
dec
add
mov
gs
mov
xor
push
neg
sbb
fcoms
adc
mull
cmc
sbb
sti
push
or
or
adc
inc
xor
or
fnstsw
mov
mov
outsb
inc
es
xchg
mov
sbb
inc
pusha
xchg
push
pop
fwait
das
and
push
mov
push
movsl
cvttps2pi
push
mov
xchg
bound
lock
data16
pop
or
push
ljmp
movsb
dec
fs
and
push
lods
mov
xchg
push
test
jo
jmp
xor
and
cmp
and
mov
jle
or
vmovhps
or
insb
sub
sub
adc
daa
mov
stos
add
push
out
jne
push
lahf
push
jp
and
std
mov
cmp
jle
cltd
lods
out
popl
mov
inc
and
cld
out
add
cld
pop
xlat
pusha
popa
adc
daa
bound
dec
sub
push
dec
loope
push
push
sub
mov
sbb
dec
mov
out
push
lahf
jne
stc
cmp
mov
jmp
adc
mov
icebp
mov
jb
cli
lret
mov
rorl
sahf
push
mov
xchg
mov
xor
mov
mov
pop
jg
jne
outsl
inc
mov
nop
dec
cs
jl
in
pop
xchg
mov
and
push
test
push
hlt
jnp
loopne
je
adc
sti
stos
push
cmp
loopne
mov
loopew
mov
cwtl
mov
push
xchg
test
cmp
add
push
pop
pushf
push
jp
lods
pop
push
fcoml
sub
cmp
out
mov
shrl
cwtl
xchg
cwtl
sub
subl
test
jg
dec
popw
pop
inc
mov
imul
pop
and
mov
enter
cmpl
xor
mov
pop
cld
sarb
jbe
ret
add
mov
sbb
mov
pop
mov
sbb
dec
xchg
xchg
inc
pop
imulb
add
sbb
lret
insl
xor
dec
aad
sti
in
fs
lock
aas
movnti
stos
inc
add
xor
in
call
inc
inc
mov
or
mov
jecxz
stos
mov
sub
gs
fldt
ror
adc
mov
aas
sbb
xor
mov
xlat
dec
pop
std
xchg
xchg
cmpsb
cld
pop
push
lds
cmp
hlt
push
inc
cmpsl
mov
and
cwtl
or
jns
xchg
and
mov
shlb
jp
pop
mov
fucomi
push
pop
jp
out
inc
xchg
imul
sub
scas
and
xchg
sahf
mov
push
dec
sub
ja
inc
fxch
xchg
xlat
and
adc
in
aad
jge
aam
in
or
adc
cs
adc
dec
das
lds
push
stc
aad
out
ret
adc
pop
jmp
jle
aaa
dec
push
mov
adc
in
xlat
repz
xchg
jb
arpl
add
sub
add
js
jns
in
bound
shrl
outsl
test
sarl
in
jle
les
rcll
addl
loope
or
out
mov
fists
test
das
repnz
mov
inc
mov
mov
outsl
lods
mov
fidivrs
cmp
out
lret
jmp
leave
xor
pop
cmp
xchg
sbb
and
ds
mov
adc
mulb
xor
pop
push
fsubrl
mov
cmp
pop
mov
negl
mov
push
or
in
xor
sahf
mov
mov
sub
or
mov
mov
iret
jns
mov
lret
jmp
vmwrite
icebp
and
aaa
push
sub
cltd
add
sti
ds
pop
xlat
js
sub
loop
xor
idiv
test
mov
orb
aaa
mov
imul
adc
scas
push
bound
pop
pop
daa
mov
cmp
das
outsl
insl
lea
mov
fs
and
push
dec
dec
dec
inc
jecxz
sbb
push
add
bound
add
jne
cmp
sbb
mov
mov
in
iret
mov
xchg
xor
cmp
jo
push
sbb
xor
ja
pop
je
mov
xchg
fcomps
and
add
shll
pusha
icebp
rcll
movl
inc
cmp
add
es
movsl
testl
adc
aam
jmp
xlat
push
xchg
xchg
movb
mov
sahf
mov
or
inc
fiadds
cmp
mov
stc
dec
shrl
int
inc
jb
rorl
fists
pop
call
xor
ficompl
fs
and
sub
pop
pop
push
xchg
imul
ror
aam
pushf
out
pop
mov
lds
mov
shlb
push
mov
daa
mov
mov
or
mov
inc
push
xchg
outsl
enter
dec
xchg
adc
lds
outsl
test
jae
call
mov
xchg
lret
lret
orb
cmpsl
pusha
adc
inc
xchg
std
adc
lock
dec
rcrb
test
mov
sbbb
xchg
fs
push
outsl
addr16
pop
mov
dec
mov
push
dec
aas
nop
cmp
cmp
pop
push
xor
pop
xchg
cmp
inc
incl
movb
adc
jge
push
in
add
out
inc
pop
cmpsb
test
stos
sbb
sarb
dec
lock
popa
sbb
std
mov
pop
gs
xchg
jo
adc
sbb
stos
mov
fcoml
dec
out
mov
cwtl
dec
imul
cs
dec
loope
arpl
shrb
pop
mov
xor
popf
mov
jl
cmc
ljmp
mov
gs
dec
mov
aad
in
out
in
push
mov
and
in
adc
lods
lods
cltd
sub
inc
cmc
xlat
mov
int3
lods
cmp
lods
sub
jnp
push
pop
ffree
mov
insl
test
ja
jge
pop
cmp
jp
sbb
fnsave
out
or
cltd
inc
jbe
sbb
add
aam
jmp
push
or
adc
or
sbb
cmp
cli
out
and
add
sub
add
aas
jg
jmp
fidivs
mov
shll
jbe
js
popf
and
cmpsb
cld
push
mov
mov
and
insb
adc
int
aas
xchg
mov
dec
and
insl
add
mov
push
pop
lock
sub
xor
test
jb
ret
and
sbb
dec
ficoml
pop
andl
sbb
dec
sub
sbb
or
jmp
push
mov
loop
jnp
mov
or
mov
lcall
aas
push
inc
mov
ret
jb
into
mov
leave
gs
and
and
das
adc
into
cli
pop
cmp
divl
cwtl
repnz
ljmp
test
xor
add
push
or
cltd
mov
add
pushf
add
cmpsb
push
mov
pop
aaa
or
push
addr16
jns
inc
aaa
jo
dec
lcall
loope
lods
iret
fdivl
imul
lret
dec
push
pushf
pop
xor
xor
cli
outsb
or
inc
int3
test
adc
fidivrs
test
jae
mov
or
adc
cmp
lea
adc
les
xor
push
jb
inc
pop
jne
add
sub
clc
jp
pop
subl
mov
push
insb
or
xchg
xchg
data16
push
mov
mov
sti
aad
pop
loope
sub
sbb
mov
mov
dec
pop
shlb
hlt
mov
cltd
dec
movsl
mov
scas
inc
loopne
push
pop
std
aad
pop
mov
or
sbb
xor
xor
pop
xchg
frstor
movsl
sbb
add
das
stc
mov
movsl
push
pusha
mov
xchg
notl
sbb
xchg
or
and
loopne
xor
loop
sub
ret
testb
ja
stc
sbb
lods
mov
jo
sub
jo
dec
enter
shl
and
push
xchg
mov
mov
icebp
stos
jne
or
aad
mov
iret
xor
cltd
jo
inc
sub
mov
iret
pop
nop
cmpsb
xor
ljmp
cs
nop
sub
test
aad
sub
mov
jne
es
decl
jl
addr16
push
jl
popa
push
lds
push
jecxz
cmp
inc
dec
cmpb
push
negb
movsl
mov
or
jg
out
cmp
shr
hlt
fadds
push
cmp
mov
xchg
out
sub
mov
cmp
sbb
jecxz
push
push
mov
pop
cmc
mov
inc
push
ds
fisubrl
into
mov
mov
mov
sub
stos
repnz
mov
nop
adc
jl
jnp
push
jge
mov
and
mov
rcrl
sbb
fcomps
push
repnz
pop
add
gs
xchg
mov
popa
mov
fldt
mov
and
stos
cwtl
loopne
jbe
xchg
clc
fimuls
push
inc
test
sbb
test
jecxz
push
jmp
mov
inc
sbb
cwtl
and
lret
jae
jmp
movsb
add
ljmp
fisubrs
mov
cmp
mov
pop
dec
mov
ss
mov
mov
push
lds
cmp
sub
ret
mov
sti
xchg
jle
push
dec
stos
loopne
push
addr16
mov
bnd
aas
nop
or
in
push
or
in
pop
popf
adc
sahf
pop
scas
inc
les
sub
shl
mov
jae
jp
shrl
or
add
or
xchg
aam
push
cmp
arpl
jp
mov
hlt
add
pop
negb
negl
int3
scas
xchg
mov
cwtl
ja
loopne
hlt
scas
jle
sbb
jp
sti
mov
push
negl
cmpsb
call
add
pop
fimuls
mov
ret
ja
inc
lea
inc
and
xlat
cmp
inc
adc
cmp
aam
fnstenv
fnsaves
pop
faddl
sbb
pop
pop
dec
cli
cmp
mov
pop
add
xchg
mov
push
loopne
and
pop
mov
call
xchg
inc
dec
test
or
pop
xlat
scas
jmp
nop
mov
fisubl
nop
jo
xor
pop
fucom
loope
pop
or
mov
into
pusha
push
pop
push
data16
push
jnp
leave
stc
dec
test
outsl
inc
pop
sub
mov
aaa
ja
stc
faddl
pop
cmp
arpl
cmp
in
xor
add
fistpl
dec
hlt
les
xor
mov
xchg
push
jne
repnz
and
add
rep
cmp
movsb
xor
lret
pop
sarl
insb
dec
adcl
mov
mov
mov
inc
add
or
sbb
xchg
sbb
pop
movsl
push
xchg
cmpsb
or
push
out
inc
sbb
sub
xor
out
test
cmpsb
mov
sub
fistl
dec
sub
push
mov
and
in
scas
in
jg
mov
sbb
xchg
int3
cmc
push
add
int3
fists
cmpl
popf
mov
xchg
dec
mov
leave
ret
adc
jno
sbb
xchg
aas
test
mov
sub
mov
add
fisttpl
sub
iret
jnp
std
stc
lods
sbb
repnz
jl
mov
sti
mov
pop
mov
fdivrs
jbe
je
adc
mov
push
sbb
cmp
cmp
imul
adc
jle
cmp
cmpsl
inc
or
pop
adc
sarl
jbe
cmp
mov
int3
push
dec
gs
leave
push
jmp
fs
repnz
or
push
jb
xchg
jb
pop
sub
xlat
pusha
int3
xor
lcall
frstor
sub
jmp
movsl
loop
fstpt
jmp
ret
jnp
mov
int
les
test
ss
sbb
insb
xchg
ret
xchg
inc
out
adc
lcall
xor
inc
cmp
jmp
movsb
xchg
xchg
pop
mov
movsl
pop
push
jl
ss
pushf
in
movsb
dec
xor
aam
push
or
dec
shlb
and
xlat
pop
cmp
mov
pusha
and
popl
aad
and
adc
cld
mov
dec
push
mov
loope
inc
mov
leave
cld
out
dec
clc
mov
fwait
scas
aas
test
fisttpl
movsb
push
ret
adc
pop
jg
daa
aas
xchg
test
or
adc
lcall
in
out
push
inc
jo
jl
fcomps
scas
loope
push
mov
adc
pop
leave
aaa
testb
shrl
sub
push
testb
insl
or
xchg
cmpsl
aas
xor
lcall
inc
ret
push
jg
dec
push
xchg
inc
iret
mov
xchg
cmp
adcb
push
aam
test
xchg
daa
les
fisttpll
mov
dec
cmp
xor
loopne
fcoms
cmpsl
push
les
movsb
add
sub
lret
jns
out
aam
pop
or
nop
rorl
dec
push
sbb
dec
sbb
mov
out
cmp
insl
mov
mov
xchg
inc
xor
inc
mov
add
dec
test
dec
pushw
sub
inc
imul
imull
and
adc
mov
movsb
das
sub
das
adc
outsb
pop
rcl
cmp
les
inc
and
out
add
hlt
bound
mov
cltd
push
outsb
jnp
rcll
dec
into
inc
shll
ja
cmp
lcall
push
or
in
xor
mov
jecxz
pop
mov
test
out
gs
xor
and
pusha
xor
test
ja
mov
jnp
lret
jne
shlb
imulb
pop
mov
flds
xor
fistl
push
int
lahf
iret
pop
dec
dec
mov
xchg
cmpsl
ja
loope
adc
jmp
add
lds
das
jno,pn
pop
mov
push
dec
les
push
test
xorl
jge
out
mov
rcrl
inc
arpl
adc
inc
inc
shl
mov
mov
cwtl
movsl
fst
inc
adc
aad
mov
repz
imul
and
data16
add
jnp
pushf
mov
orl
hlt
ss
xchg
in
loop,pt
mov
inc
inc
xchg
notl
pop
in
xchg
test
fsubrs
pop
sbb
sbb
or
aam
enter
popf
jp
push
jo
sti
cmp
sbb
lcall
push
ret
popf
jae
stos
push
push
testb
mov
mov
inc
std
push
nop
xor
dec
jo,pn
std
pop
scas
leave
sub
repnz
aas
sti
out
sub
fbld
push
leave
and
aas
jbe
push
sub
xchg
mov
mov
xchg
inc
sbb
in
push
xor
pop
or
jo
mov
dec
mov
lret
or
mul
jbe
xchg
lahf
lcall
sub
daa
sub
mov
xchg
jo
ljmp
sbb
inc
enter
sub
out
push
or
mov
push
fwait
mov
scas
cmpsb
mov
sbb
jecxz
mov
rcl
jg
add
outsb
sub
xchg
mov
mov
imul
popw
pop
cltd
pop
es
mov
sbb
mov
xor
mov
inc
jge
hlt
stos
push
sbb
sub
rolb
xchg
out
arpl
xor
movhps
or
stos
sub
lods
ret
or
out
adc
movsl
aad
sbb
pusha
out
std
addl
add
jp
push
lret
dec
mov
or
push
or
sbb
mov
xor
rorb
stos
mov
mov
add
stc
fucom
mov
loop
dec
sub
pusha
mov
subl
or
fs
rclb
into
cmpsl
xor
arpl
loope
fildl
sub
cltd
jg
pop
lds
pop
leave
inc
testl
xchg
add
outsb
aam
repnz
push
xchg
nop
mov
inc
xor
mov
out
nop
repnz
adc
jno
int3
dec
aaa
pop
lods
dec
nop
sti
ss
mov
in
xor
insl
mov
xor
mov
out
jmp
sbb
inc
pop
into
mov
mov
adc
mov
sarb
js
sbb
jnp
enter
jae
xor
dec
xor
push
dec
cmpsl
test
fsubl
push
inc
push
dec
jne
lods
cltd
repz
sbb
sbb
or
sub
mov
dec
repnz
mull
ret
or
or
jl
fldcw
in
inc
ja
sbb
ja
incl
push
jno
sbb
add
adc
sub
sub
cmp
insb
push
cmp
pop
push
pop
push
movb
pop
jmp
repnz
push
fwait
pop
neg
les
sub
lret
or
jbe
xor
rclb
xor
out
push
lock
sbb
xchg
xchg
mov
ror
pusha
insb
mov
sti
sbb
or
call
and
add
mov
sub
jae
ss
out
add
test
sub
ljmp
xlat
jbe
pop
fs
scas
mov
movsl
nop
adc
add
mov
scas
ja
push
adc
push
inc
xlat
sbb
push
iret
xor
das
jno
push
or
rcrb
xor
pop
xor
rorb
or
jbe
jno
movsb
ds
add
cld
mov
int3
mov
jns
shr
gs
js
jnp
jg
ror
lcall
rcrl
xor
xor
dec
cmp
mov
jb
jo
adcl
sbb
sbb
jmp
subb
mov
ljmp
pop
add
das
pop
outsb
daa
adc
cld
int
jecxz
xchg
call
lea
popa
push
scas
adc
pcmpgtb
rcll
and
mov
inc
jno
fdivrl
call
jle
jg
shlb
pop
fcmovnb
and
pushl
fld
lcall
or
or
mov
xchg
nop
dec
inc
jns
int
mov
loopne
leave
rcr
imul
shl
mov
dec
push
dec
xchg
leave
pop
mov
iret
mov
stos
mov
das
mov
pop
aam
pop
inc
adc
inc
jb
fldl
out
mov
in
and
imul
inc
call
ret
mov
les
iret
inc
jp
adc
push
cmp
clc
shlb
mov
jns
pop
imul
ss
fiaddl
push
or
lret
sahf
orl
and
mov
loope
inc
cmp
sub
xlat
loope
pop
jns
pop
mov
xchg
xchg
xor
lret
adc
cmp
not
or
push
pop
and
cmp
les
and
sbb
adcb
pop
xor
repnz
test
jo
stos
xor
insb
mov
ficoms
out
ficomps
orb
xchg
add
outsl
lcall
stos
into
outsl
xor
insb
push
imul
cmp
arpl
push
sbb
in
orl
fists
hlt
sbb
icebp
push
sub
clc
out
mov
inc
pop
cmc
pushf
fisttps
pusha
int
aaa
or
clc
push
inc
sub
sub
lods
subl
repnz
mov
aaa
dec
jp
data16
adc
cld
sbb
enter
in
aas
jmp
js
mov
stos
pop
pop
push
sub
bound
pop
test
jae
sbb
ficompl
adc
add
addr16
jmp
jmp
sarl
cmp
popf
in
mov
loop
xchg
pushf
or
cmp
test
lds
cltd
jmp
rcrb
sub
clc
notl
mov
lds
daa
inc
lea
lods
int
cmp
test
repz
or
and
and
push
pop
bound
seta
insl
loope
cli
or
jne
mov
popf
int3
xchg
jbe
mov
xchg
pop
imul
add
popa
outsl
push
into
push
mov
mov
dec
mov
adc
and
push
xchg
cs
jl
push
daa
leave
int
xchg
pop
fstpl
subl
jp
fldl
push
add
jbe
stos
mov
hlt
lret
lods
or
repz
outsl
sub
cwtl
mov
pushf
and
jecxz
ds
xchg
mov
inc
ds
ss
rolb
xchg
mov
mov
adc
inc
fidivl
adcb
rcrl
pop
add
out
addr16
jl
mov
push
push
movsl
push
lods
pop
loope
and
xor
and
mov
pusha
inc
jge,pn
sbb
inc
sahf
addr16
sbb
jmp
pushf
cs
sbb
call
adc
outsl
jnp
add
into
cmc
es
dec
in
in
test
jecxz
mov
neg
jl
orb
cld
lahf
jmp
mov
clc
shll
sbb
fsubs
sub
mov
out
xlat
sub
xor
loop
mov
sbb
mov
dec
dec
or
in
mov
cs
push
test
and
or
jge
or
xchg
jecxz
mov
xor
and
inc
add
xchg
xchg
icebp
push
dec
push
dec
mov
adc
sbb
push
add
loopne
repz
shrb
push
jne
pop
lret
dec
mov
jnp
test
or
sub
ret
loope
inc
in
xchg
js
jno
pushf
and
xor
push
inc
iret
push
mov
sbb
push
cltd
in
aas
js
lds
out
rolb
ja
daa
aad
shr
jle
lods
sbb
jle
mov
adcb
or
imul
pop
notl
je
cmc
lods
push
pushl
movsb
aaa
push
pop
or
negb
sub
jbe
stos
xchg
adcb
push
out
inc
jo
fisttpll
or
and
jl
xor
pop
int
sub
push
add
push
or
pop
sbb
orl
push
pushf
shlb
outsl
inc
fwait
cmp
jo
ljmp
int
ret
jnp
pop
sub
mov
orb
jg
and
xor
shll
mov
cmp
bound
jmp
nop
jmp
and
iret
mov
rclb
xor
das
jmp
xchg
outsl
in
xchg
lcall
jecxz
nop
cs
mov
adc
dec
insb
pop
dec
test
divb
sub
pop
push
mov
imul
adc
fs
rol
call
cmp
push
and
int3
arpl
and
lea
lcall
or
out
enter
adc
mov
cld
aad
mov
sbb
js
pop
mov
xchg
in
lcall
scas
dec
inc
sub
sbb
test
pop
popf
mov
int
fsubrs
lods
les
xchg
lods
and
push
lahf
and
xorl
inc
sub
je
mov
sub
push
jecxz
hlt
lahf
lds
lds
repnz
mov
aam
mulb
adc
sahf
je
in
mov
and
cmpsl
gs
jg
mov
or
in
into
cmp
icebp
movsb
pusha
jg
fs
pop
inc
sub
pop
rcrb
xchg
push
inc
jg
aas
push
sbb
dec
xchg
xchg
cmp
mov
and
aas
shrb
sbb
shrl
mov
xchg
inc
mov
into
test
or
aas
jb
and
into
movsb
sub
add
jp
mov
out
fistps
enter
cmp
sub
push
sub
fdivl
xchg
rcll
xor
aam
aaa
mov
xchg
push
lret
add
xor
cmpsb
in
pusha
outsl
add
cltd
mov
daa
lods
repz
outsl
pop
movsl
dec
aaa
xor
or
fcmovbe
cmp
adc
pusha
fsubrs
dec
clc
movzwl
pop
imul
jp
nop
ret
and
or
pop
mov
fisubrs
dec
jnp
sbb
or
cli
fsubr
mov
lds
out
inc
popa
sbb
mov
sbb
cli
adc
addl
das
daa
dec
mov
sbb
adc
rcl
lock
dec
add
fs
dec
xchg
daa
imul
fcomp
mov
js
and
lret
inc
jbe
or
inc
decb
addb
out
int3
dec
and
cmpsl
xchg
in
es
dec
ret
xchg
js
dec
mov
pop
cwtl
jg
addl
pop
or
mov
pushf
sti
pop
into
inc
leave
inc
mov
sbb
lahf
stos
inc
mov
in
mov
mulb
and
outsb
sub
incb
jnp
or
jge
add
pop
cltd
sbb
lret
mov
mov
cmc
lret
jge
movsb
xor
xchg
sub
in
sub
dec
sbb
mov
orl
sbb
dec
cwtl
sbb
and
leave
xchg
mov
sarl
ja
mov
pop
das
or
stc
in
or
out
mov
push
cmp
sbb
mov
imul
ja
inc
jae
sub
addr16
dec
adcb
fiadds
jp
or
mov
pop
insb
add
or
ja
hlt
cmc
test
out
movsb
mov
mov
sbb
xchg
ss
in
xor
push
pop
xchg
xor
fsts
mov
aas
mov
mov
xor
jb
iret
dec
add
add
sub
and
xchg
fnstenv
add
mov
and
inc
inc
jo
jo
jge
xchg
fdivrs
in
fistps
cmp
pop
out
push
out
sbb
push
adc
mov
add
movsb
lods
cltd
or
mov
int
and
dec
ss
adc
sbb
enter
sub
pop
cmc
jl
push
aad
scas
or
cmp
add
ja
mov
icebp
inc
add
lods
xor
push
inc
xchg
lcall
push
mov
pop
xor
and
jo
sti
add
pop
ret
add
popl
push
imul
push
mulb
ja
push
cmp
shrl
mov
arpl
xlat
call
or
sbb
and
xchg
pop
addr16
pop
ds
movsl
pop
call
dec
aam
in
sarb
mov
and
je
and
fwait
clc
pop
mov
ret
bndstx
cmpsb
data16
fmul
cmpsb
aas
movsb
imul
bound
adc
push
inc
xchg
xchg
mov
insb
xor
outsb
and
inc
mov
mov
movsl
mov
into
mov
sbb
fwait
mov
push
test
cmp
rcrl
ficompl
mov
clc
in
jmp
inc
fs
cmp
arpl
xchg
mov
aaa
mov
dec
inc
xor
cmp
loope
xchg
push
aaa
and
out
jo
iret
mov
mov
test
push
notb
out
mov
outsb
pop
push
sarl
rolb
cmp
fistpll
lds
jge
jmp
sbb
mov
lea
pop
sbb
mov
imul
mov
loop
filds
jg
mov
adc
sbb
cmp
pop
fsubrp
js
jmp
loope
int3
rolb
mov
mov
clc
and
bound
mov
ljmp
dec
adc
int3
mov
dec
nop
and
cli
sub
add
sbb
jnp
out
fs
push
xchg
add
jmp
in
sub
push
mov
out
fwait
scas
ret
pop
jae
mov
arpl
jb
inc
jno
push
in
int
xchg
subb
enter
cmp
adc
loop
fiadds
dec
add
aam
push
daa
pop
and
push
cmp
repnz
shlb
pop
sub
jnp
add
or
xchg
sbb
lea
popa
in
cld
fists
or
jo
xchg
xchg
cmp
int3
in
mov
stos
xor
js
push
addl
dec
jb
mov
jae
cmc
inc
inc
push
xchg
pop
fdivl
arpl
xchg
lock
sbb
fs
push
shlb
mov
sbb
cmp
cmp
into
jae
cwtl
push
test
inc
push
incl
mov
xor
xchg
push
movsl
mov
xchg
fists
inc
inc
dec
lods
movsb
sti
inc
mov
mulb
inc
call
push
repz
sbb
or
pusha
sbb
test
adc
insb
jbe
push
inc
cmpsb
xchg
and
inc
or
ret
les
lcall
adc
or
cmp
mov
xor
ret
outsb
dec
dec
mov
int
ret
jmp
push
cld
sbb
scas
rcrb
mov
mov
jbe
fadd
addr16
repz
and
pusha
jg
bound
pop
out
test
pop
roll
pushf
lret
insl
or
ljmp
jnp
xchg
sbb
gs
dec
fiaddl
shrb
clc
out
pop
jmp
pop
iret
push
sbb
rcr
jbe
idivl
cmpsb
arpl
sbb
pop
lods
mov
testb
cmp
and
pop
sbb
add
xorb
movsb
fisttps
mov
iret
mov
lcall
call
cli
sub
icebp
pop
push
repnz
sti
outsl
cmp
fldenv
insl
mov
pusha
shll
scas
jbe
pop
fstpt
xor
xlat
movsl
pop
xchg
mov
outsb
jge
shl
call
and
mov
jno
or
arpl
ret
and
adc
cmp
jae
inc
out
lock
lahf
fcomi
lock
test
aad
test
inc
ret
jbe
cltd
dec
push
mov
test
movsb
pop
jo
dec
test
push
pop
hlt
add
inc
sub
and
pop
or
loopne
adc
clc
inc
sub
sbb
in
adcl
test
cmpsl
arpl
scas
mov
or
nop
in
jmp
push
cli
adc
mov
sub
mov
test
adc
xchg
cld
jno
pop
test
xchg
notl
scas
mov
in
inc
addl
pop
pop
inc
arpl
orb
push
lods
fildl
push
inc
adc
mov
in
mov
lahf
stc
cmp
pop
pop
mov
stc
add
fidivrs
xchg
mov
cwtl
add
leave
fistl
out
push
push
dec
out
dec
outsl
int
sbb
in
icebp
cmp
aaa
aam
icebp
mov
mov
dec
ds
scas
stc
sbb
dec
ficompl
fldl
aad
leave
stc
jecxz
pop
sub
mov
add
inc
dec
test
mov
mov
pop
mov
or
shrl
push
les
fsubrs
lods
fnsave
fistps
hlt
xor
aas
xchg
ljmp
lods
jnp
cmc
dec
push
stos
out
jp
dec
mov
ljmp
aaa
dec
cltd
pop
sub
jp
pminsw
fstl
sti
xchg
icebp
push
movsl
in
xchg
lahf
pop
or
mov
adc
pop
jecxz
repz
inc
mov
nop
mov
test
arpl
add
aam
xchg
negb
cmovno
pop
pop
adc
scas
xlat
bound
fnstcw
das
add
repnz
or
add
ja
int
and
push
push
cmp
fcmovnu
push
or
shlb
sbb
mov
xor
fwait
movsb
and
add
neg
push
push
div
int
in
jo
dec
pusha
loope
push
les
or
add
mov
xor
daa
aas
xchg
mov
ud2
push
xchg
sbb
mov
mov
movsl
cmc
sbb
xchg
dec
outsb
push
aad
lcall
xor
sub
or
cmc
xor
xchg
sbb
pop
repz
imul
iret
jmp
das
adcb
in
lods
popa
fldcw
cmp
mov
orb
scas
lods
inc
sub
xor
add
enter
cmp
movsl
notl
ficompl
xchg
mov
xchg
ljmp
mov
jmp
push
cmp
out
fstl
mov
shlb
and
xor
fildl
dec
addb
jne
test
or
mov
lret
loopne
cwtl
jecxz
cmp
cmp
or
adc
jle
jge
mov
xchg
movsb
repz
call
pop
xchg
adc
ret
mov
mov
jne
jno
mov
cmc
pusha
add
jmp
fwait
movsl
ljmp
fldl
mov
xor
dec
adc
leave
addr16
js
mov
mov
adc
xchg
xorl
bnd
call
dec
loop
or
mov
les
mov
add
icebp
in
jmp
enter
gs
mov
call
fiadds
repnz
mov
pop
enter
ror
sbb
fwait
dec
mov
push
xchg
mov
test
sub
aaa
push
jne
add
out
pushf
mov
cmp
add
adc
push
sbb
and
rcll
iret
nop
test
push
or
in
xlat
into
mov
pushf
jecxz
xor
iret
idivl
pop
cmc
repnz
and
jp
jno
loope
jo
rcrb
cmc
jb
repz
arpl
cmpsl
push
xchg
addr16
std
xchg
ret
test
sbb
movb
iret
pop
fdivrs
ss
cmp
mov
cmp
inc
dec
or
add
cwtl
and
xchg
add
insl
hlt
xor
mov
sub
inc
test
xlat
shll
popa
mov
or
fimull
ret
push
cmpsb
inc
stc
gs
cmpsb
cmc
fs
and
xchg
mov
inc
lds
repz
xchg
scas
or
pop
in
lret
xchg
pop
clc
mov
add
fwait
jne
movl
fmull
in
ja
daa
mov
jmp
cmc
and
dec
fistl
push
jb
jae
sbb
mov
lds
pop
sub
xchg
addr16
push
xor
call
cwtl
and
jbe
nop
sbb
push
leave
leave
sbb
imul
mov
lret
stos
xchg
xchg
push
cltd
popa
or
rdtsc
cmpsl
aas
jg
pop
in
mov
cmp
push
inc
mov
push
sub
negb
in
lock
dec
mov
push
insb
cmp
pusha
add
pop
repz
cmp
sbb
mov
pop
cmp
mov
les
dec
jno
pop
pop
insb
lods
adc
addr16
mov
addr16
loopne
inc
repnz
or
mov
fsubrs
adc
pushf
bound
mov
jge
jecxz
dec
addr16
sub
or
cmp
jno
leave
lods
and
sbb
adc
jno
mov
add
aaa
gs
je
mov
cmpsl
and
cld
imul
push
mov
mov
mov
jle
jnp
int3
scas
xchg
push
pop
xchg
movsl
cmp
push
mov
mov
popl
insl
fstpl
sbb
lret
dec
scas
cmc
outsb
fisttpll
mov
inc
sub
xor
rorb
xchg
mov
jl
adc
mov
or
int3
pop
add
lret
xchg
bound
lret
or
lock
xchg
push
lret
mov
jle
insl
cmpsb
lods
push
push
into
xor
iret
and
in
fistpll
popf
pop
pushf
les
adc
dec
lock
xor
push
or
mov
lds
sbb
or
jl
push
cmc
nop
hlt
xchg
stos
leave
xchg
inc
sbb
mov
push
pop
jae
dec
dec
repz
sarb
mov
sbb
mov
sub
fimull
cmpsb
enter
push
addr16
lret
cmp
mov
test
js
pop
stos
movl
sbb
imul
push
ja
test
xor
movsb
ficoms
inc
xchg
aas
pop
push
mov
or
or
into
mov
imul
jb
dec
rolb
adc
sbb
mov
idivl
fadds
xlat
and
mov
cmpsb
cs
iret
and
sub
push
roll
sub
flds
and
fnsave
jge
and
call
jle
add
shlb
jl
je
lret
stos
fsubl
or
jp
ss
or
inc
loope
inc
add
xchg
arpl
and
sti
and
add
pop
out
hlt
lcall
xchg
dec
stos
pop
cmpsb
adc
pop
or
mov
or
dec
aam
or
mov
shrl
sub
lret
pop
fninit
lret
adc
xor
adc
out
fucomi
sbb
filds
jnp
inc
rcrl
insl
mov
fwait
mov
mov
fidivrl
popf
xchg
cmc
stos
push
leave
and
int3
push
jo
add
xchg
jbe
sbb
pop
mov
fidivl
xor
and
xchg
mov
lcall
sub
push
or
or
movsb
les
dec
dec
or
fisttpl
jecxz
adc
shll
icebp
rorl
stc
data16
xor
ja
repnz
inc
out
mov
mov
in
popf
fcoms
mov
or
daa
clc
add
or
mov
ss
rcrl
cltd
cmpsb
or
aaa
cmp
repnz
sbb
sub
orb
sub
mov
jnp
sahf
xor
mov
xor
pop
out
mov
fwait
xor
test
xorb
stos
push
iret
sub
shll
movsb
xchg
dec
xchg
cmpsb
pop
and
pop
sahf
jno
sti
fisttpll
aas
lcall
test
xor
sbb
mov
lods
xchg
out
push
sti
in
xor
cltd
fmul
lods
or
mov
iret
fs
xchg
pop
pop
aaa
dec
call
stos
lds
inc
adc
shl
cmpsb
imul
lods
test
int
sbb
hlt
adc
cmp
aas
popa
lahf
incb
lret
call
es
and
out
adc
int
and
out
sbb
cltd
and
aaa
enter
pusha
jecxz
fcoml
ja
push
adc
lods
test
mov
sub
lret
push
mov
mov
popf
xlat
enter
test
cmp
and
outsl
fcomps
ljmp
mov
xchg
es
sub
into
and
and
push
repz
mov
mov
outsb
mov
and
inc
dec
es
orb
or
filds
cmp
dec
xchg
lock
sub
arpl
xor
inc
mov
xchg
in
mov
pop
les
mov
or
call
loopne
scas
dec
int
fmul
sub
call
push
daa
mov
nop
xchg
mov
dec
ret
lea
xchg
ret
mov
and
leave
fdiv
lods
js
sub
sbb
cmpsl
stc
push
repz
xor
in
scas
lret
jmp
adc
xchg
in
dec
cmp
push
sti
stos
xchg
add
in
aaa
sbb
js
aaa
mov
imul
enter
mov
out
lds
pop
cmpsl
out
fsubl
dec
rolb
shlb
adc
jp
sti
shr
mov
popa
std
lret
dec
js
stos
jb
bnd
ror
cmpsl
mov
add
in
popf
sbb
xor
cmp
mov
fwait
pushf
rcll
cmp
outsl
xchg
sbb
xchg
mov
xor
push
and
repz
daa
enter
jg
xchg
mov
cmp
enter
mov
fdivrs
mov
outsl
testl
orb
aas
inc
xor
ja
push
xchg
mov
icebp
nop
loopne
xchg
jae
test
pop
sub
xor
jno
lods
xchg
es
and
fdivrl
xchg
sub
inc
pop
adc
sub
xor
stc
push
and
adc
xor
sbb
mov
cmp
sbb
pop
add
dec
jecxz
sub
mov
cltd
cmp
push
sub
mov
mov
sub
or
mov
adc
outsb
scas
mov
xor
mov
mov
loopne
mov
jns
mov
cltd
xchg
jle,pn
jmp
xchg
jns
in
cmc
dec
aam
dec
and
out
xchg
dec
popa
je
dec
pop
lds
movsb
pop
pop
in
stos
cld
adc
aas
fcom
cltd
or
add
sub
icebp
aam
pop
clc
mov
and
sbb
in
inc
and
cmp
sbb
cmpsl
gs
icebp
fstpl
jg
cmp
dec
adc
ss
data16
sbb
fwait
cmp
lret
add
imul
adc
rorl
jmp
xor
cmp
mov
mov
cwtl
xor
sar
push
mov
xchg
jno
sub
xchg
test
out
ret
inc
inc
sbb
or
cltd
cmpsb
repnz
lock
fdivrs
jmp
out
jb
and
es
cs
mov
dec
xchg
xor
int3
xchg
sub
aad
sub
push
sbb
pop
sarb
pcmpeqb
jnp
push
mov
fidivrs
into
cli
pop
repz
je
ja
je
shr
test
pop
mov
ds
adc
dec
mov
inc
push
and
inc
mov
fucom
outsl
call
push
adc
and
and
push
push
cmp
addr16
mov
in
xchg
mov
inc
imul
xlat
mov
out
das
dec
gs
ljmp
jne
add
pop
les
push
in
jmp
add
sbb
js
jecxz
scas
lcall
xor
cs
insl
adc
mov
sbb
mov
repz
mov
xchg
aad
in
xchg
insb
subb
and
jne
jo
xlat
stos
cmp
cmp
cwtl
daa
adc
pop
mov
sti
call
add
mov
aaa
push
sub
cmp
and
arpl
mov
push
sti
aam
das
or
mov
insb
insl
insb
ljmp
int3
jb
mov
mov
jno
or
stc
or
out
jae
loop
mov
jmp
push
es
dec
sbb
lahf
xlat
arpl
push
inc
sbb
cmp
or
aam
and
pop
push
or
push
and
lds
or
inc
or
adc
jmp
or
je
jae
mov
das
push
adc
push
ljmp
or
cmp
ja
out
imul
fisttpll
repnz
sbb
sbb
inc
mov
or
cmpb
mov
mov
adc
cmp
mov
mov
movsl
gs
cmpsl
arpl
sbb
jge
pop
stos
sub
add
inc
adc
sahf
pop
mov
push
xchg
mov
jo
data16
jg
dec
inc
movsl
jge
jne
push
dec
std
ret
insl
push
sbb
in
inc
mov
popa
cmp
sbb
aaa
fstp
inc
lret
push
jbe
mov
in
mov
ret
in
iret
insb
std
xchg
cs
out
mov
fadds
push
mov
inc
xchg
adc
sarl
pop
adc
js
test
in
nopl
and
arpl
cmpb
out
cmp
inc
mov
mov
pop
push
sub
sub
xor
xor
or
scas
adc
xchg
test
jp
mov
mov
dec
frstor
cwtl
aas
push
cmp
cmpsb
loop
je
add
gs
xorb
sub
mov
xchg
push
jb
jecxz
lea
out
fwait
adc
ss
hlt
rcll
loopne
cwtl
fcmovb
jle
sbbb
mov
adc
ror
fs
bnd
sbbl
mov
and
int
xchg
lret
aad
mov
addr16
ficomps
sbb
lret
and
fmulp
mov
mov
aam
add
mov
mov
mov
test
add
scas
pop
jecxz
xchg
outsb
clc
into
jle
addl
xchg
mov
rcr
push
jge
int3
sub
sub
mov
mov
fiaddl
and
add
adc
dec
int
mov
xchg
aaa
inc
jb
pop
jp
std
pop
pop
push
arpl
rep
ret
xchg
pop
cmp
xchg
push
push
sbb
pop
adc
sbb
das
lock
fldpi
iret
pop
out
mov
call
xchg
xor
std
out
ret
jno
orl
mov
ret
rcrl
ds
mov
aam
jmp
or
test
cs
jbe
mov
in
cs
ja
inc
lret
sbb
jmp
addl
fwait
mov
mov
pop
cmpsl
adc
push
inc
mov
icebp
repnz
popa
lcall
arpl
dec
xlat
sub
stos
scas
js
mov
xlat
mov
push
push
das
pop
mov
push
sbb
xchg
mov
push
xchg
mov
and
mov
pop
mov
pop
pop
cmpsl
and
mov
push
push
cmp
inc
repz
adc
xchg
cmpsb
enter
mov
mov
push
sub
inc
push
mov
fldl
js
fnsave
cltd
jno
xor
stos
aad
mov
lods
mov
xchg
in
loop
aas
mov
repz
sbb
inc
pop
fstl
stc
popf
mov
mov
jne
iret
mov
fdivl
out
jp
ljmp
xor
xlat
inc
pop
fcomps
push
mov
pop
and
dec
push
sbb
jne
add
hlt
jne
jno
push
sbb
mov
inc
lcall
cmp
rclb
xchg
mov
das
icebp
mov
aaa
iret
xchg
inc
cmc
in
out
jecxz
iret
add
cld
sub
mov
dec
mov
inc
pop
sub
xchg
ja
mov
lds
loopne
iret
outsb
mov
in
cltd
cmp
inc
push
push
pusha
xor
daa
shl
out
out
pop
aas
scas
push
dec
pop
and
pop
pop
push
imul
shl
adc
aam
inc
pop
mov
jp
fisubl
pop
dec
imul
and
xchg
jg
call
and
and
mov
sub
test
cltd
fwait
lods
xor
popa
or
xchg
hlt
lock
and
and
pop
cmp
jns
mov
ljmp
das
sub
mov
mov
int3
stc
xchg
nop
mov
xor
outsb
iret
decl
jne
mov
xor
aam
call
js
push
xor
stc
xchg
fdivs
push
imul
pusha
insl
mov
pop
test
sub
int3
es
daa
sub
enter
imul
pop
push
push
insb
jb
pop
hlt
xor
jge
or
nop
mov
pop
mov
or
jmp
ss
nopl
fmuls
ljmp
ds
mov
sbb
hlt
cmpsb
push
jno
test
cwtl
lods
jbe
out
fisttpll
ret
cmc
push
sub
icebp
into
outsl
push
cmc
adcb
test
pop
not
cmpsb
inc
int
int3
imul
adc
dec
sbb
add
mov
and
xor
mov
rolb
out
repz
int3
vpmaskmovd
pop
pop
test
push
cmp
mov
jo
addl
stos
xchg
jae
aam
rorl
and
and
lret
lea
and
jmp
mov
aad
mov
xchg
mov
xchg
mov
jae
xor
push
fstpt
fwait
scas
pop
and
jne
jl
pop
sti
mov
sbb
mov
and
lods
pop
bound
sbbb
icebp
movsl
adc
sub
cli
les
movsb
add
jnp
shrb
jae
adc
int3
int3
loope
jb
clc
dec
mov
adc
push
xchg
sub
push
mov
lret
lock
inc
fwait
mov
xlat
out
cmp
add
mov
int3
cmp
shll
out
iret
push
cmp
mov
repnz
dec
int
xchg
mov
jb
xchg
push
jg
lret
call
adc
xchg
aaa
fstl
jo
inc
jne
jo
cltd
dec
adc
fs
xor
jle
stos
fstps
call
xchg
test
fdivr
lret
jp
js
mov
push
faddl
lcall
jmp
add
pop
inc
mov
dec
xlat
es
sbb
sbb
pop
int
imul
jnp
aam
inc
das
sub
sti
loope
in
test
popa
push
mov
mov
outsb
adc
test
mov
repz
clc
xor
jg
jb
gs
mov
mov
pop
sub
nop
and
cwtl
mov
hlt
cmp
cmc
adc
int
sbb
dec
and
movsb
sub
test
sub
aaa
in
xchg
push
jae
bound
add
in
arpl
out
lcall
and
daa
popf
pop
sbb
sub
jg
data16
xchg
and
cmp
jnp
pop
or
nop
sub
leave
adc
pop
inc
adcb
cs
cwtl
iret
mov
in
movsl
mov
push
pop
nop
or
sbb
add
adc
pop
dec
test
xchg
enter
dec
sarb
scas
orps
pop
dec
imul
pop
sub
mov
push
push
push
aaa
xchg
sti
loopne
into
xor
sarb
mov
dec
cmp
push
push
decl
mov
mov
popa
loopne
shll
sub
out
sbb
and
cmp
sarb
pop
imul
data16
and
jmp
xchg
in
xchg
xor
sub
pop
iret
xlat
mov
mov
lcall
adc
xchg
imul
push
mov
insb
xor
jno
pop
mov
cmpsl
pop
stos
adc
mov
scas
cmp
pop
popf
scas
nop
push
testl
popa
lock
dec
jl
cld
ljmp
in
inc
inc
add
inc
leave
cmp
pop
shlb
gs
mov
push
adc
lcall
js
or
inc
adc
xor
sub
pop
fimuls
test
mov
bound
jp
enter
aam
inc
push
or
nop
jb
stos
cli
outsb
mov
imul
mov
adc
sti
addr16
mov
in
sub
or
fs
in
test
push
aas
lcall
xor
cld
lret
stos
insb
lcall
js
mov
mov
notl
cmp
xor
popa
mov
loop
push
es
or
sbb
lock
jae
push
mov
push
push
std
repz
fnstenv
mov
push
cmp
mov
cvtps2pd
out
cmp
adc
sahf
inc
loope
shlb
aas
out
les
push
cld
ds
lret
pop
add
fdivp
out
cli
pop
cmpb
inc
push
aaa
sbb
and
push
daa
into
push
out
mov
sub
fstl
mov
test
ret
or
rcrb
xor
sbb
adc
outsb
mov
std
mov
mov
repz
sub
cmp
sub
cmpsb
lahf
or
sbb
rorl
add
push
mov
leave
ss
add
sbb
mov
inc
push
lret
ficoml
in
jmp
xorl
jl
sti
pop
pop
or
scas
mov
xor
iret
fdivl
out
xchg
loope
jmp
or
lods
cmp
pinsrw
or
and
dec
scas
sub
mov
pop
push
jmp
add
scas
push
push
push
lcall
xor
mov
imul
pushf
push
pushf
xor
rcll
jmp
cmp
aas
xchg
push
cmp
adc
xchg
push
mov
int3
std
xchg
push
pushf
sahf
rcrl
loopne
and
mov
cmc
in
lods
out
mov
sti
mov
mov
inc
in
fld
pop
cwtl
dec
dec
xorb
shll
in
mov
out
ret
pop
jmp
xorb
xchg
das
fbld
add
mov
push
ljmp
sub
sub
dec
lret
mov
sub
fwait
stc
add
nop
jne
xor
hlt
dec
sub
adc
lret
push
adc
mov
test
cmp
jns
fcomip
ret
cmp
xchg
mov
loopne
cmp
stos
repnz
push
mov
push
mov
cwtl
cmp
xchg
mov
out
push
sti
push
lds
dec
inc
movsl
adc
jbe
mov
and
fisubrl
push
fcompl
int3
addr16
das
fists
jp
popf
xor
das
add
ret
rcrl
hlt
xchg
xchg
divl
mov
push
daa
or
repnz
jno
sahf
leave
test
hlt
sbb
jg
sti
fmulp
mov
sub
addr16
adc
icebp
mov
ljmp
sub
into
lcall
out
icebp
lahf
fstpt
rcll
mov
mov
mov
mov
or
xchg
inc
ja
jle
cwtl
leave
mov
jmp
les
mov
push
push
mov
adcl
push
or
mov
scas
add
or
push
ret
dec
xor
nop
cmp
push
arpl
test
fwait
out
or
push
mov
sahf
fadds
lods
call
sub
or
mov
test
xchg
ret
std
stc
sbb
push
icebp
mov
flds
add
cmp
mov
lea
aad
je
sbbb
pop
fnstcw
in
mov
movsl
dec
inc
sbb
roll
ret
lahf
clc
or
xor
popf
fucomi
sarb
jb
xchg
add
test
inc
shl
xorps
shlb
jle
shlb
fildll
pop
xchg
xlat
cmp
xchg
pop
mov
adc
xor
in
lcall
sbb
cld
inc
shrl
xor
and
pusha
mov
push
add
mov
pop
pop
lods
pop
sub
insl
stc
fistpl
ss
push
cmp
inc
popa
fbstp
mov
pop
jle
shrl
or
hlt
lret
adc
xchg
ljmp
inc
enter
inc
inc
aad
pusha
xchg
pop
mov
js
outsb
ja
jmp
js
out
test
add
fcomps
lock
cmc
outsl
clc
xchg
pop
xor
das
std
js
lret
jle
sbb
leave
pop
xchg
pop
inc
stc
sbb
push
pop
cld
daa
cmpsb
push
daa
lods
dec
mov
shll
cli
xorl
push
add
mov
leave
popa
insl
lret
cld
loope
cmp
or
lds
adc
xlat
test
in
stc
mov
data16
push
les
std
int
fsub
dec
cmp
out
pop
ss
hlt
sub
test
and
dec
scas
mov
and
ja
int
in
frstor
pop
imul
or
stc
cltd
in
leave
or
scas
cs
adc
imul
push
ja
adcb
in
push
pop
mov
rcrb
rclb
fdivrs
scas
cmp
popa
and
loop
jp
mov
pop
add
out
mov
mov
fld
dec
jecxz,pn
imul
and
xchg
mov
outsb
jne
inc
aam
rclb
lods
xor
sub
test
xchg
hlt
pop
jge
sahf
cmp
cmp
push
cmc
jl
jmp
push
ja
and
jne
adc
lods
scas
dec
push
adc
jl
call
cli
dec
aam
sbb
inc
jbe
ljmp
mov
cs
shrl
jp
pop
mov
data16
jg
adc
xor
sub
jns
je
xor
repz
jge
repnz
xor
mov
add
pop
cmpsl
jmp
fimull
dec
or
fs
das
fwait
mov
push
int3
pop
push
xchg
enter
jge
loop
xor
je
pushf
mov
lods
add
pop
pop
mov
mov
hlt
pushf
arpl
out
outsb
pushf
pop
rorl
adc
rclb
jmp
jp
push
andl
xor
pop
leave
add
sbb
aas
lods
repz
in
movsl
or
insb
dec
dec
jno
js
aad
xchg
mov
push
insl
popa
iret
arpl
outsb
push
mov
xchg
iret
mov
cmp
jno
add
inc
sarb
sub
lods
sub
xchg
pop
add
xchg
push
sub
aam
adc
push
add
jnp
sub
aaa
xchg
xlat
jne
scas
andl
mov
jp
inc
or
sub
sub
add
jecxz
fst
inc
out
sub
cltd
out
mov
dec
stc
jl
daa
gs
jge
aaa
ret
jb
or
sub
out
mov
sbbb
cld
dec
or
aaa
push
call
andb
mov
and
inc
mov
cli
iret
in
loop
mov
fcmovu
shlb
adc
data16
add
mov
pusha
call
and
lods
sub
sub
dec
mov
rcrl
movsl
cmpl
and
fs
fnstsw
push
movb
add
push
xchg
inc
and
cmp
sbb
test
xchg
orl
adc
adc
cmp
out
xor
daa
and
ljmp
stc
aas
int
cwtl
shld
out
mov
mov
inc
stos
fdivrs
popa
adc
fiadds
dec
pop
mov
call
rolb
aaa
imul
mov
cmpsl
and
xchg
imul
in
inc
enter
mov
push
pop
jge
les
add
psllq
adc
cmp
mov
rorl
jecxz
adc
dec
cli
and
inc
shlb
push
inc
cmp
dec
push
outsb
test
es
jb
cmp
dec
push
mov
mov
mov
jmp
movsl
xchg
mov
call
push
dec
mov
cwtl
out
inc
nop
icebp
clc
dec
add
les
pop
loopne
jno
mov
sbb
xchg
jb
xor
mov
cmc
or
pop
inc
push
mov
adcb
lea
fstpl
mul
dec
stos
xchg
shll
pop
ficomps
xchg
call
mov
push
ja
test
adc
aaa
push
lcall
dec
movq
enter
iret
cmp
xor
sbb
fimuls
mov
inc
test
repz
daa
mov
scas
sbb
inc
sbb
arpl
sub
fwait
dec
mov
ds
mov
mov
and
shrl
pop
cmc
cmp
nop
repnz
pop
jmp
mov
mov
push
jmp
adc
cbtw
std
popl
js
mov
sti
jns
fwait
adc
push
add
pop
adc
push
loop
out
dec
sbb
add
mov
js
and
sub
std
ja
push
bound
pop
push
cmp
mov
dec
iret
std
fmul
mov
loopne
adc
adc
sbb
dec
xchg
pop
pop
cmp
and
out
xor
xor
xor
or
mov
pop
dec
pop
mov
sbb
adc
xchg
int
xchg
mov
sbb
push
push
push
mov
mov
int
inc
add
push
and
cmp
repnz
mov
les
jno
aam
stc
add
jbe
sbb
loopne
mov
or
cmp
int
cltd
cmp
imul
fcmove
pop
or
xchg
push
daa
jnp
int3
xchg
dec
ljmp
mov
out
and
pop
sub
adc
cltd
sub
mov
mov
xchg
mov
int3
pop
mov
scas
popa
ljmp
dec
lods
outsb
xchg
mov
addr16
push
mov
or
dec
xor
lods
lea
popa
xor
iret
mov
clc
adc
cmp
addl
int
sarb
mov
cmp
pop
pusha
popf
xorl
xor
popf
dec
hlt
negb
out
cmp
mov
pop
loope
dec
pop
jnp
fidivl
jbe
sub
mov
sbb
dec
xchg
rcrb
sahf
cmpsl
fisttpll
scas
js
lahf
mov
push
xchg
adc
test
push
xor
sub
cmp
popf
mov
lods
push
sarb
call
ret
cli
pop
add
inc
pop
push
jle
jno
jmp
mov
pop
pop
xchg
lock
mov
fidivs
cmp
jmp
and
mov
and
mov
pop
pop
fisubrs
fidivrs
test
cmp
cmp
test
gs
xchg
pusha
outsb
xor
cmp
mov
pop
and
mov
and
adc
mov
xchg
push
dec
scas
jno
xchg
jne
mov
outsl
jae
xchg
loopne
loop
push
dec
call
jle
add
call
or
movsl
mov
out
sbb
mov
add
sub
inc
xchg
int
stc
xchg
fwait
xchg
jne
inc
es
orb
dec
outsb
jb
lods
outsl
lods
popf
dec
mov
scas
sbb
and
lods
xor
outsb
adc
mull
call
xor
xchg
push
mov
dec
das
cmp
ja
cmpsl
test
pop
xchg
mov
mov
and
lahf
cmc
gs
push
lods
jns
push
sub
mov
lods
xchg
sub
xor
test
js
sbb
stc
test
xchg
in
dec
adc
inc
inc
adc
adc
mov
push
sub
loop
ret
mov
ljmp
add
sbbl
fimull
adc
js
gs
in
dec
adc
or
dec
shlb
out
sbb
cmpsl
movd
mov
mov
and
into
sbbb
test
pop
adc
in
mov
je,pt
add
and
push
mov
lret
pop
fisubrl
movsl
loope
mov
add
dec
lahf
and
jg
iret
mov
xorl
idivl
imul
sbb
loopne
pop
xchg
in
addr16
push
sub
xchg
jle
xor
fxch
mov
xchg
mov
mov
sub
lcall
sbb
pop
push
nop
adc
mov
lret
jne
inc
mov
push
jl
mov
xchg
jnp
push
call
mov
out
les
dec
push
or
ret
sub
mov
adc
out
ficomps
mov
sbb
mov
out
call
xor
lods
mov
jmp
shlb
fists
sbb
dec
insl
push
sbb
or
adc
jp
sahf
mov
jb
test
inc
stc
repz
mov
jns
lds
stos
pop
sub
mov
jne
test
adc
mov
jno
sarb
add
fiaddl
mov
imul
fcomps
in
sarb
sahf
mov
shrb
inc
fcoml
pusha
movsb
out
cld
push
mov
and
add
adc
inc
fisttps
das
cmpsl
xchg
jge
mov
sbb
rcrl
jge
add
js
fimull
push
pop
sbb
inc
mov
mov
bswap
add
vcvtsd2si
pushf
adc
add
or
mov
and
cmp
and
lock
inc
adc
fcmovnu
addr16
or
in
cs
push
in
shlb
xor
jmp
ret
fdivp
std
mov
cmp
sub
add
and
or
cwtl
push
pop
mov
lods
pop
mov
push
aaa
push
imul
pop
enter
outsb
nop
nop
cmp
xor
inc
mov
call
pop
rol
ss
fcomps
xlat
loopne
aam
push
mov
pushf
jmp
stos
loope
icebp
push
push
andb
std
cmp
inc
sbb
iret
add
xorb
sbb
xchg
xchg
cs
sub
cmc
cmp
sub
mov
or
cs
xor
mov
nop
fdivl
push
xchg
sahf
push
xlat
cmpsb
adc
and
repnz
xor
popf
cmpsl
jp
loopne
ss
subl
mov
mov
mov
insb
mov
xor
mov
or
sub
add
pusha
and
add
jmp
inc
mov
add
movsl
fisttps
rclb
lret
out
inc
or
cmp
pop
cmpsb
cmp
push
jo
cmp
test
insb
aaa
push
clc
aaa
mov
icebp
cld
jl
pop
push
fstl
jl
mov
push
add
scas
mov
std
pop
in
int
and
std
loop
clc
cmpsb
mov
adc
and
idiv
xchg
je
stc
pop
cmp
xor
jnp
or
jns
pop
adc
in
call
test
popa
xchg
jae
adc
mov
idiv
ffreep
mov
movsl
imul
lods
jmp
cltd
mov
imul
sarl
pop
fstl
and
adc
sbb
mov
and
dec
adc
imul
test
add
arpl
push
out
imul
adcl
sub
dec
lret
int3
sub
dec
mov
push
or
jp
popf
dec
mov
push
adc
stos
mov
cmp
mov
adc
dec
xorl
adc
es
daa
ljmp
jae
int3
sbb
mov
adc
bndstx
cmp
daa
mov
pop
dec
mov
rorb
jl
mov
mov
out
imul
fstpt
push
scas
pop
or
es
push
or
data16
sbb
lahf
ret
push
push
xor
popf
dec
pop
into
jno
dec
pushf
push
lahf
jo
fildl
imul
sub
dec
cmp
lret
pop
jecxz
push
push
jmp
call
and
scas
or
int
je
push
rolb
jmp
pop
fisttpl
mov
fwait
aas
mov
cli
push
xchg
cltd
sbb
mov
add
aad
or
dec
bound
ret
aam
jo
pop
jae
cmp
mov
repnz
vpshld
pop
loope
pop
ja
xor
lahf
outsb
mov
mov
addr16
mov
sbb
cmpsl
or
push
out
lcall
hlt
jg
divl
inc
mov
xchg
aas
lods
mov
sbb
adc
pop
scas
and
dec
ficoms
sarb
or
cs
insl
inc
mov
jo
lret
push
arpl
scas
dec
push
cmpb
jae
inc
cs
lahf
fstps
adc
shlb
mov
inc
sbb
lods
ja
in
jmp
cld
cmp
iret
sti
stos
sbb
insb
xor
and
stc
ret
cmpsl
mov
popa
xchg
aad
mov
lret
mov
jge
cmp
sbb
dec
jmp
xor
add
push
cmp
aad
mov
jae
fistpl
pop
xorl
aaa
and
test
push
imul
fisttpl
jge
int3
aaa
jmp
mov
jl
rorl
jmp
loop
arpl
mov
mov
adc
ret
xor
stos
mov
add
push
mov
subl
in
daa
cmc
fistpl
cmp
cmp
clc
sub
mov
mov
add
jb
jge
pop
pop
lds
mov
insb
cmp
shrl
jns
dec
and
and
sub
xor
xor
push
ds
sub
cmpsb
and
and
dec
and
clc
dec
cwtl
cs
cmp
shr
repz
pop
push
sbb
push
divl
adcl
popf
jecxz
mov
mov
and
aaa
ss
mov
shll
push
cltd
sbb
test
pop
xor
pop
js
pop
push
mov
push
xchg
lea
mulb
in
mov
sub
popa
adc
fstps
dec
xchg
xchg
mov
xchg
xchg
inc
mov
mov
lcall
shrb
mov
lahf
jge
icebp
sbb
fisttps
and
call
cmc
scas
fldenv
cld
adc
int3
mov
imul
mov
xchg
lock
js
push
int3
xor
ror
in
clc
jae
arpl
cwtl
ret
sub
sbb
es
repz
inc
xchg
xchg
lret
jp
jg
imulb
in
das
gs
int3
clc
loope
inc
mov
add
sar
stos
and
dec
fwait
jp
jecxz
stos
pop
hlt
les
jno
clc
or
jmp
outsb
lock
stos
insl
mov
sbb
outsb
ja
cwtl
pop
movsl
fwait
mov
cs
ficomps
jp
ja
or
xchg
mov
mov
sbb
ret
dec
repnz
dec
sub
mov
repz
enter
jecxz
xchg
fwait
mov
cli
jp
pop
add
and
es
cmp
push
aam
enter
popf
mov
and
xchg
jb
into
inc
push
xor
add
sub
mov
dec
dec
dec
xor
imul
lcall
sbb
mov
mov
xchg
sbb
mov
xor
in
movsb
mov
dec
or
inc
getsec
dec
shl
sbb
add
jmp
xchg
and
or
adc
lret
pop
daa
lret
out
add
jecxz
int3
lret
insl
xchg
stos
pop
fldcw
je
loope
and
push
xchg
insb
dec
cmp
add
sbb
pop
mov
dec
inc
lret
xchg
mov
int3
int3
xchg
mov
mov
pop
mov
cmc
imul
mov
pop
adc
dec
nop
cmpsb
adc
jl
or
movsl
ljmp
cld
mov
mov
jl
lret
dec
mov
mov
mov
or
jns
ljmp
xlat
in
jne
jp
mov
adc
cmp
mov
sub
sub
pushf
add
cmp
jge
push
aam
sbb
lret
mov
dec
xor
aaa
test
int3
out
jb
mov
lea
dec
insb
jb
mov
lret
imul
leave
dec
scas
add
and
push
cmp
popa
insb
push
aas
loop
adc
cmp
ret
or
mov
call
fcomps
aam
fdivr
mov
out
xchg
cmpsb
dec
adc
hlt
mov
in
pushf
out
sahf
mov
enter
pop
or
std
cmp
dec
sub
inc
and
ljmp
or
rorl
fstps
jbe
inc
fisttps
lock
mov
inc
addr16
inc
cmpsb
cmpsl
loop
test
xor
lea
jmp
int3
sbb
and
push
cwtl
out
pop
cmp
mov
push
cmp
mov
outsl
repz
sub
xchg
lahf
inc
rolb
outsl
pop
xchg
inc
sbbl
out
mov
jno
mov
out
xchg
scas
arpl
mov
jecxz
in
jo
jl
jmp
sbb
ljmp
mov
popa
sub
add
xchg
mov
or
jecxz
add
lcall
cmc
mov
rcrl
inc
sbb
dec
mov
xchg
jp
out
cmp
shl
mov
cmp
in
int
ds
ret
mov
or
xor
pop
xchg
inc
int
cmp
imul
shrb
xchg
adc
mov
jns
or
or
test
jp
push
arpl
in
fisttpll
int3
xor
inc
lahf
repnz
loop
movsb
jecxz
out
js
sub
mov
sbb
xor
cmp
lret
aad
loopne
adc
ret
push
imul
popf
jecxz
lds
popa
inc
inc
cltd
jb
aaa
mov
xchg
sarl
mov
adc
inc
out
jmp
loopne
rolb
int3
pop
js
xchg
cmpsb
fstpl
pop
adc
test
shlb
adc
dec
jno
jo
lret
into
mov
aas
pop
out
inc
push
rorl
sub
mov
in
push
push
in
cmpsb
stc
sub
or
push
xchg
fdiv
and
xor
add
fbld
rorb
adc
sbb
push
mov
xchg
cmp
add
testb
cmpsl
out
test
scas
add
in
mov
fucomp
sbb
or
cmp
lea
roll
pop
ds
jno
pop
jns
ret
and
push
pop
cmpsb
add
in
aaa
cmp
ja
inc
cmp
and
or
pushf
call
idivl
mov
lods
ss
push
xchg
jno
jle
xchg
pushf
mov
jne
xchg
fstl
popa
cmpsb
out
and
add
cmpsl
mov
loop
mov
sbb
dec
lods
imul
ljmp
push
mov
cli
out
and
insl
dec
mov
xor
cwtl
adc
lds
xor
bnd
mull
and
fwait
movsl
dec
or
divb
jo
fidivrl
into
aaa
divb
cmp
sbb
dec
jmp
jmp
mov
nop
aaa
fmulp
adc
aam
xlat
aam
enter
imul
fcmove
dec
pop
cltd
mov
sub
sub
adc
call
bound
lock
mov
xor
es
sub
fidivrs
sub
ds
pop
add
mov
jge
out
sbb
rorb
in
sub
iret
leave
movsb
scas
lods
insl
xchg
in
mov
scas
cltd
xor
int3
in
cltd
mov
push
enter
lcall
insl
push
test
push
fdivrl
sub
decl
add
push
out
mov
jmp
mov
jmp
mov
mov
or
inc
pushl
pop
sbb
push
imul
cmp
inc
mov
pop
addr16
jle
push
popa
pusha
dec
push
xlat
loopne
jnp
fidivrs
daa
lret
arpl
sub
jl
dec
mov
test
xor
daa
pop
mov
mov
cmp
sbb
push
xchg
lahf
sbb
pusha
loop
cmp
mov
mov
fldcw
xchg
mov
loopne
dec
sub
cmc
cmp
and
jp
scas
jns
out
push
mov
cmp
outsl
popl
shll
and
add
lods
mulb
cmp
scas
mov
shll
repz
xor
xchg
sub
imul
add
sbb
mov
aaa
clc
shrl
dec
lods
and
and
and
or
mov
cmp
into
fs
and
mov
shrb
ficoms
xchg
add
nop
mov
lcall
fadds
insb
add
sbb
jne
leave
je
out
adc
or
insl
jge
aas
lods
call
test
imul
jg
inc
and
xchg
push
inc
pop
cwtl
inc
rorl
insb
lods
cmovge
test
cmpb
jmp
cmp
and
stos
or
sub
xchg
cmp
jnp
inc
shll
addb
vpcmpgtw
icebp
dec
cs
je
enter
adc
push
xor
mov
insb
bnd
stos
pushl
push
cmp
xor
fld
adc
ds
xchg
inc
xchg
xchg
movsl
test
repnz
sahf
push
daa
add
iret
mov
std
es
add
scas
clc
jo
into
mov
repnz
mov
lea
loope
je
xchg
fsubrs
or
mov
sbb
sti
mov
negb
fildll
xchg
sbb
jg
jno
inc
in
ss
adc
int
incb
movsb
mov
test
inc
icebp
ret
xchg
mov
mov
div
pusha
fst
cmp
dec
and
in
test
cmp
xchg
pop
bound
cmp
push
movsb
sub
xor
rolb
test
add
mov
icebp
repz
add
mov
xor
inc
int
add
inc
mov
int3
jne
cmpsl
add
std
aad
cld
push
xchg
fwait
sub
pop
xor
imul
sub
in
stc
xor
bnd
clc
mov
or
mov
fdivrl
dec
mov
fsubs
xchg
call
add
mov
cmp
test
dec
dec
and
xor
pop
call
mov
jg
pushf
xchg
aas
push
int3
inc
dec
xchg
sbb
cmp
pop
add
cmp
subl
lods
call
out
repnz
int
mov
xchg
stos
ficomps
push
dec
pop
mov
push
dec
adcl
pop
sub
or
mov
repz
dec
jp
dec
inc
inc
push
push
dec
pop
push
dec
add
sbb
int
or
jne
and
in
or
jg
lods
ret
dec
mov
test
mov
iret
xchg
cmp
sbb
cmp
cmp
mov
pop
mov
sbb
fcomps
mov
arpl
sub
je
call
xor
jecxz
test
fldt
movsb
lea
mov
cmc
lock
dec
mov
sbb
push
adc
add
ds
fnstsw
push
dec
pop
jp
test
xor
out
cli
jbe
lods
pop
pusha
xchg
in
inc
add
inc
mov
lcall
pusha
jmp
fwait
jne
ss
push
out
mov
out
sub
xchg
sti
test
mov
jg
mov
inc
xor
out
rorb
jb
out
loope
mov
pop
mov
aas
test
jo
scas
cmp
popf
mov
lods
mov
adc
out
xor
sbb
jb
jnp
ja
sbb
lods
add
pop
adc
pusha
in
stc
lcall
shr
mov
push
pop
jge
das
clc
cmpsb
adc
shrb
sbb
inc
loope
dec
push
out
xchg
cmc
cmp
inc
push
popa
stc
and
iret
movsl
popf
push
pop
dec
inc
jno
dec
hlt
pop
pop
js
sahf
xor
scas
mov
bound
hlt
ret
imul
jo
rcll
test
in
cli
scas
cltd
pop
sti
mov
ffreep
adc
lea
mov
fisttpl
mov
push
ljmp
das
out
shlb
ds
sub
xchg
or
jmp
out
call
jb
nop
test
out
dec
mov
jle
jb
addr16
daa
mov
or
and
lea
mov
scas
cmp
or
sub
mov
xor
cmp
and
jg,pt
fsubl
sbb
mov
and
mov
movsl
and
push
mov
or
scas
fwait
xor
test
test
mov
and
fisttpll
lcall
add
adc
jle
xor
addr16
test
lods
and
and
cs
push
imul
or
fmull
inc
dec
pop
sbb
pusha
outsl
loop
sub
imul
sbb
inc
jnp
call
cld
dec
cld
dec
hlt
stos
les
xchg
cmp
lods
dec
inc
in
lret
popf
jne
dec
cmp
push
shlb
rorl
jecxz
xor
push
ss
movsl
lds
gs
push
pop
dec
adc
in
addl
arpl
mov
xchg
and
lret
mov
jne
lahf
insl
mov
cmp
add
mov
jnp
cli
pop
dec
add
loop
test
push
subl
cwtl
jae
fmuls
add
fwait
test
sub
lock
xchg
imul
or
add
and
mov
icebp
dec
negl
lret
and
xlat
mov
ret
into
in
inc
push
scas
shll
repnz
clc
add
ja
addr16
in
xchg
sub
loop
movhlps
insb
popf
sub
insb
arpl
and
cmpsb
in
pop
xor
or
in
call
xsaveopt
cltd
pop
fidivl
sti
mov
int3
pop
push
pusha
add
ret
pop
ret
jecxz
or
scas
hlt
fcoms
adc
mov
jecxz
pop
mov
das
imul
mov
ror
and
ljmp
mov
xchg
mov
daa
jmp
fsub
lds
movsb
int
jne
push
fdivl
jmp
cmp
pop
cmp
adc
xchg
cwtl
xlat
cs
sub
dec
aaa
movsl
mov
xchg
icebp
insb
rsqrtps
pop
cwtl
out
ss
sub
icebp
and
jo
pop
jb
ret
sub
iret
cld
leave
jno
inc
sub
loop
sub
cwtl
cli
jg
pop
aad
mov
int3
mov
fbld
scas
repz
into
test
fwait
jbe
jb
sbb
cmpsb
pop
or
and
xor
push
mov
int
insb
push
lds
cmp
xlat
mov
xchg
xor
push
pop
fistps
jg
in
jle
fdiv
das
sbbl
dec
in
jno
and
ret
shlb
push
mov
cs
fistl
fistpl
push
mov
add
ficoml
dec
jb
mov
or
mov
xchg
sub
mov
popf
popa
mov
popa
lahf
pop
es
ss
popf
outsl
xor
jo
loopne
testb
sbb
daa
je
dec
push
fwait
sub
push
xchg
dec
inc
and
in
add
xor
loopne
addb
daa
sub
cmc
in
mov
lods
pop
movsl
dec
push
out
ds
lcall
mov
adc
adc
pop
push
lret
hlt
bound
sbb
sbb
out
loopne
loop
fildll
inc
and
lods
enter
and
jbe
scas
xchg
xchg
inc
or
repz
loop
mov
testl
cli
ret
or
aaa
in
shr
xlat
push
xor
mov
dec
xchg
push
pop
loop
xor
dec
jbe
push
lahf
add
mov
sub
aam
icebp
dec
xchg
fcoml
xchg
inc
int
xchg
loopne
sarb
out
jl
inc
mov
fwait
insb
adc
int3
add
scas
pusha
std
xchg
out
mov
rclb
mov
sbb
sbb
subb
ljmp
in
push
inc
notl
cmp
lcall
inc
xor
sbb
inc
adc
icebp
out
fildl
ret
int3
out
mov
mov
out
sub
mov
pop
rsm
jecxz
mov
mov
out
xor
cmpl
cmpsl
fnstenv
imul
adc
je
lods
shl
xor
nop
pop
fld1
int3
adc
insb
aaa
mov
int
push
add
dec
mov
push
dec
mov
jae
mov
jge
sbb
repnz
sbb
rcrb
xchg
inc
lahf
in
imul
sar
andb
sub
test
mov
stos
adc
or
push
enter
mov
cli
insl
xchg
adc
jl
mov
lods
cs
xchg
sti
mov
xorl
mov
aaa
rcr
movsl
lock
jmp
cmpsb
ficoms
or
fs
xchg
mov
in
push
popa
and
jle
adcl
sub
xchg
cmp
push
inc
xor
dec
mov
push
in
mov
icebp
push
rcrb
push
or
jl
jmp
stc
sti
imul
jno
add
and
rcr
xchg
mov
hlt
mov
aad
adc
jnp
xchg
and
dec
clc
dec
sub
ss
sbb
add
cli
ja
sub
sbb
clc
das
add
mov
jne
jecxz
mov
fwait
inc
daa
das
jl
test
repz
pop
out
mov
mov
mov
cli
stos
int3
aad
divb
out
mov
xor
adc
and
nop
lret
pop
dec
fldcw
fnstenv
cmp
inc
adc
xor
test
repz
sub
mov
and
lock
add
mov
sbb
dec
test
arpl
mov
sets
push
ds
popf
fmuls
into
sbb
call
dec
stos
enter
std
pop
add
mov
cli
cmpsl
loopne
push
xchg
mov
scas
adcb
dec
cmp
cmp
sti
cmp
dec
cmp
cmp
push
test
into
outsl
subb
mov
cli
dec
das
and
xchg
stos
fs
loopne
pop
icebp
or
sbb
cmp
dec
push
fidivrs
lahf
jno
ja
cld
leave
or
icebp
aam
adc
shlb
test
stos
jle
xor
adc
and
sub
and
pusha
cld
or
mov
popf
addb
pop
adc
push
test
mov
cwtl
and
dec
lods
lret
sar
mov
repnz
dec
ficoms
xchg
mov
fs
sbb
mov
out
out
out
out
and
loop
xchg
adc
mov
xchg
ret
jp
inc
jge,pt
add
pop
dec
inc
std
lock
jge
hlt
push
insb
aad
xor
ret
insb
stos
cmp
ret
in
pop
mov
jmp
xchg
add
xor
lods
arpl
ss
add
test
cmp
imul
push
movsl
stos
mov
xor
scas
or
stc
test
cmp
pop
popa
pop
mov
loop
xor
lahf
xor
pop
aam
pusha
jb
ljmp
in
je
inc
add
rcrb
aam
or
add
les
pop
loope
xor
sbb
xor
sbb
daa
test
adc
xchg
add
add
pop
inc
sbb
shlb
push
pop
dec
mov
test
mov
mov
mov
push
xor
gs
test
jmp
fwait
xchg
hlt
sub
fdivp
xor
jle
cmp
sahf
mov
out
pop
xchg
lods
divb
sub
mov
cmp
inc
ficoms
cld
push
insl
push
push
xchg
idivb
xchg
cs
sub
in
push
or
add
add
lods
xchg
mov
sub
int3
bnd
loope
xchg
into
inc
clc
jmp
lods
rcrl
iret
add
and
sbb
and
inc
ja
stos
ja
imulb
dec
mov
je
cli
xor
call
jle
inc
xchg
nop
mov
push
xchg
jmp
push
jp
add
jmp
testb
gs
inc
push
and
fdivrl
js
loope
inc
or
leave
in
sbb
fsubp
pop
aad
adc
push
ss
leave
repz
inc
pop
inc
xlat
int3
dec
mov
shrb
fwait
xlat
lods
pop
dec
xchg
insb
outsl
xchg
in
jnp
xor
out
jecxz
mov
mov
iret
inc
mov
std
lahf
xor
sti
add
xor
cmpsl
jns
popa
out
in
cmc
dec
lods
pop
xor
xor
test
push
repnz
rcr
cwtl
addr16
mov
mov
test
jge
mulb
pop
adc
dec
jno
sbb
inc
pop
mov
inc
lea
adc
sti
and
jp
sbb
movb
pop
sbb
xchg
dec
in
aas
or
into
sub
aad
fs
mov
ja
mov
into
ljmp
insb
mov
stos
mov
aad
mull
in
pop
inc
pop
ror
and
test
cmp
or
jbe
lahf
jno
test
jbe
mov
out
out
pop
scas
movsb
xor
mov
dec
xchg
cld
push
dec
xchg
test
leave
push
add
sar
shr
jg
arpl
lahf
insb
dec
nop
popa
or
or
push
jg
or
jg
or
jne
out
ret
in
pop
pushw
popf
ret
data16
bound
ret
ret
adc
dec
jmp
xlat
mov
push
cmp
pop
popf
jecxz
jmp
add
push
repz
jnp
pop
add
iret
leave
jmp
cmp
sub
jmp
sub
xor
or
daa
or
nop
repnz
jg
pop
sub
jbe
lahf
orl
ret
cwtl
clc
dec
nop
fbld
mov
jge
adc
lods
sbb
sbb
andb
in
adc
mov
iret
ljmp
aad
test
insb
pop
mov
insl
and
jbe
or
xchg
clc
adcb
sbb
xchg
ja
xor
xchg
cmpsl
dec
fstl
sti
push
or
jnp
lret
inc
pop
testl
mov
jo
inc
mov
lret
push
cs
cld
repz
add
cmp
iret
cmp
jo
movsb
leave
aad
mov
pop
xchg
rclb
sbb
in
mov
ficoms
xor
add
mov
clc
leave
popf
lcall
movl
add
push
or
pop
pop
or
mov
add
mov
fldcw
test
insl
rol
add
dec
inc
lock
ljmp
rcrb
shrb
mov
mov
es
rorl
mov
push
adc
adc
cmp
sbb
or
repnz
pop
jbe
ret
test
mov
addr16
dec
jp
pop
dec
sub
mov
loop
movsb
sub
sub
xor
scas
imul
jge
jns
daa
loopne
leave
or
push
cmp
cmc
xor
daa
stc
je
cmpsl
add
imull
push
lds
insb
movsb
movb
dec
jns
cli
push
sbb
pop
mov
mov
imul
inc
jmp
enter
cmp
push
stos
mov
mov
pushf
ss
or
mov
xchg
pusha
fsubrl
push
stos
cltd
hlt
test
xchg
aad
lds
shr
or
scas
adc
fmulp
or
push
in
and
dec
mov
cwtl
out
call
filds
push
dec
idivl
cmpb
rcrb
mov
dec
push
push
jmp
cld
jns
cmp
adc
or
sahf
jl
inc
adc
gs
daa
cmpsl
jo
mov
cmp
not
add
and
dec
or
jnp
scas
fucom
mov
adc
jle
inc
sub
fisubrl
mov
push
xchg
jecxz
enter
push
push
dec
clc
sahf
jmp
inc
dec
jne
aad
fs
out
adc
cmp
jno
push
std
mov
scas
lds
mov
mov
cmp
faddl
push
call
push
jge
int
mov
mov
inc
mov
or
xor
shl
or
fcoml
sub
addr16
add
pop
or
cmp
stc
xchg
xchg
xchg
push
fistps
lret
push
scas
aam
shll
cmpsb
adc
fwait
stos
pop
lock
in
jb
xchg
pop
enter
push
scas
aaa
jo
maskmovq
negl
stc
xchg
mov
and
adc
arpl
out
repnz
testl
push
loope
sub
jmp
mov
sarb
push
cmpsb
aaa
push
lcall
in
out
fstpt
shlb
inc
push
cmp
jg
les
aas
stos
sahf
mov
push
cmp
out
sbb
out
pop
shld
mov
cwtl
icebp
sbb
jmp
dec
mov
imul
xchg
sti
neg
xor
test
push
or
pop
sti
sahf
mov
out
jb
into
sbb
aam
popf
xor
sbb
ja
sbb
scas
dec
sub
xor
jbe
lock
icebp
sbb
pop
sarb
icebp
push
jae
enter
jo
mov
adc
es
cmp
lcall
mov
inc
add
es
scas
lcall
inc
into
xlat
and
in
aas
sbb
jmp
ljmp
add
ss
fcmovnb
or
subl
call
arpl
divb
aaa
jmp
int3
imull
adc
jnp
shlb
jl
ds
aam
sbb
ss
movsl
push
dec
cmp
jmp
fdivl
fwait
popf
js
aam
mov
mov
mov
cwtl
cmp
test
dec
outsl
imull
jne
popa
mov
push
jge
jb
sbb
inc
jb
jae
add
ja
repz
decb
xchg
sub
xchg
sub
cmp
add
pushl
cltd
mov
sub
jge
jge
mov
mov
sbb
pop
test
or
adc
fbld
jno
push
mov
lock
aaa
adc
icebp
in
stc
mov
jo
rcrl
insb
cmpsb
fs
repz
dec
int
sbb
xchg
cli
icebp
fmull
aad
pop
mov
fisubl
jle
rorl
pop
lea
and
loop
out
mov
push
sbbl
shl
dec
fidivrs
push
mov
fchs
xor
pop
sbb
lods
inc
into
push
aam
cmc
dec
in
fdivs
push
fldl
iret
insl
inc
cwtl
insl
mov
or
inc
sbb
sub
daa
dec
adc
call
xchg
into
ljmp
inc
push
outsl
jbe
or
test
ret
sti
out
out
lret
jns
lcall
daa
mov
adc
aam
or
insl
cmc
lcall
popl
shlb
filds
add
movsl
add
push
div
mov
or
arpl
adc
int3
je
nop
jnp
test
movsb
fdivrl
mov
mov
sub
mov
js
mov
ja
imul
rcl
cmpsb
movsb
xor
cmpsl
lea
add
cmc
mov
stos
insb
inc
sti
mov
rcll
imul
mov
sbbl
push
and
dec
out
test
and
popa
lods
cs
shrb
mov
loopne
test
push
aad
bound
imulb
sarl
test
sbb
push
clc
clc
pop
mov
pop
cmp
cld
pusha
sarl
cld
dec
push
xchg
loopne
jg
mov
cli
stos
sbb
pop
jecxz
and
lods
lcall
jae
lds
ljmp
test
pop
data16
jno
mov
pop
test
shll
sbb
inc
test
mov
repz
add
daa
or
inc
and
lock
pop
orl
sub
pop
stc
roll
sbbb
inc
add
ja
call
mov
sub
enter
inc
xchg
mov
push
jle
adc
sub
or
rcrl
lock
pop
and
mov
clc
movsb
out
adc
icebp
int
sub
out
adc
pop
mov
mov
movl
in
fs
xor
push
pop
mov
aaa
movsb
lds
daa
aam
mov
mov
out
fisubrl
inc
sbb
test
jle
and
insl
rcrb
repz
data16
in
aam
cld
mov
lahf
xchg
sbb
mov
gs
fs
mov
cmp
pop
stc
mov
out
inc
add
cmp
pop
mov
daa
xchg
repz
stos
push
lds
jae
push
xchg
xchg
lea
cli
sub
clc
or
les
ljmp
dec
jp
imul
test
pusha
add
add
or
inc
dec
mov
jp
testl
cmpsb
enter
bound
adc
leave
mov
lds
insb
imul
inc
dec
hlt
or
jnp
lock
lcall
jnp
popf
rcrl
in
and
fld1
imul
or
pushf
imul
sbb
ficompl
and
mov
push
pop
nop
sbb
fidivs
sub
je
leave
mov
test
mov
leave
cmpsb
xchg
mov
inc
or
lea
stos
xor
aaa
inc
and
lahf
mov
out
dec
xor
lds
roll
jp
fidivl
or
addr16
mov
repnz
bound
sub
cmp
in
cmp
outsl
int3
rorb
add
and
xchg
mov
push
notb
sbb
mov
mov
insb
mov
and
inc
push
or
lods
outsl
aas
xchg
cmp
fistpll
popa
mov
out
xor
mov
sub
imul
or
dec
adc
test
adc
jmp
add
bound
out
mov
sub
cmp
jo
xor
je
test
pop
lret
xchg
jecxz
call
pop
cmp
jns
fdivrs
mov
mov
cmp
pop
hlt
icebp
jnp
clc
mov
or
push
jmp
xchg
inc
cld
outsl
fnstsw
pop
in
mov
scas
movsb
sahf
mov
cmp
pop
adc
sahf
jno
decl
out
cmp
dec
dec
lods
rcl
loope
mov
jge
jp
fadds
xor
test
imul
push
add
dec
mov
push
les
mov
int3
push
pop
and
hlt
xor
jmp
cmpsl
stc
out
jl
xchg
mov
adc
dec
push
aam
push
dec
mov
jecxz
push
aam
cs
sahf
lods
rcrb
sub
fldcw
jbe,pn
mull
fbstp
repz
jecxz
ljmp
pop
mov
sub
add
orb
insl
mov
call
test
pushf
cli
outsb
movsl
loop
dec
roll
inc
cwtl
rcr
xchg
outsb
clc
push
sbb
or
ds
add
fidivrs
sbb
xor
mov
inc
jns
out
lods
cmpsb
pop
and
mov
push
cmp
push
cmp
push
mov
mov
xor
sub
mov
mov
fstpt
adc
mov
stc
pop
cwtl
pusha
test
pop
ja
mov
xor
inc
push
inc
in
and
nop
jl
jb
fdivrl
xchg
cli
push
jne
test
or
xchg
xchg
push
inc
add
jge
imul
inc
sub
dec
lds
ljmp
sbb
subb
pop
xchg
arpl
jg
inc
mov
jbe
sbb
push
add
jge
jg
sbb
mov
inc
or
push
jg
mov
rcrb
jmp
xor
and
push
fwait
cmp
incl
jns
ja
fcmovnb
jbe
inc
outsl
xchg
in
outsl
push
push
mov
flds
sub
xchg
jo
sbb
mov
aas
test
pusha
add
cmp
insb
andb
inc
jbe
mov
and
iret
daa
xchg
xchg
push
push
jnp
mov
xor
cs
sub
or
xchg
mov
in
mov
fisubrs
orl
insb
rcrl
imul
mov
dec
sub
jo
int3
insl
pop
hlt
lods
sbbb
adc
leave
repnz
test
pop
popa
iret
add
cmp
sti
pop
adc
ret
nop
jmp
test
sbb
lods
mov
mov
xchg
adc
xchg
insb
cmpsb
lods
mov
mov
xor
push
into
mov
movsl
jge
mov
adc
mov
xchg
stos
mov
xor
adcb
lahf
imul
ror
enter
pop
popa
cmpl
sub
mov
aad
xor
test
cmp
repnz
in
lods
lods
add
fucomi
mov
xor
xor
mov
pop
arpl
fists
shll
daa
jle
jle
shrb
sbb
cmp
mov
fdivp
mov
add
aaa
jl
and
jmp
xor
out
xor
fnstsw
inc
popa
jmp
mov
xor
cmp
mov
dec
lock
fsubl
scas
jecxz
popf
add
div
popa
dec
test
insl
cmp
popf
sarl
mov
pop
and
ljmp
xor
lahf
cmp
mov
mov
insl
imul
out
xchg
repnz
push
bnd
mov
cmp
mov
inc
push
add
inc
pop
or
popa
mov
or
clc
out
ds
test
lock
jnp
mov
out
or
dec
jg
fwait
push
shll
andl
lcall
int
dec
xor
shrl
clc
and
and
jg
test
aas
xchg
inc
in
inc
cmp
fldt
pop
andl
cld
mov
or
repz
popf
push
mov
sti
test
mov
rorl
xorb
scas
mov
cmp
sub
inc
inc
adc
and
jecxz
pop
lahf
cs
sbb
fsubs
lock
cld
cmpb
xor
clc
pop
push
xchg
fildll
inc
mov
inc
decl
push
inc
or
movsl
sarl
mov
fdivs
dec
scas
jns
test
jge
push
sbbb
push
ss
sbb
or
push
movsl
lcall
mov
mov
add
xor
popa
loope
xchg
mov
into
mov
js
shr
dec
xor
imul
in
and
out
push
push
mov
mov
mov
ret
test
jp
or
lea
mov
sti
sbb
lret
data16
xchg
into
add
xchg
jg
jnp
inc
fcmovnbe
jecxz
mov
das
fistpl
lahf
pop
fxch
pop
cmp
mov
xchg
aaa
add
mov
in
or
lret
repnz
pushf
cli
lods
cmp
jmp
shll
orb
pcmpeqd
arpl
ljmp
push
cmp
mov
cmp
jge
add
adc
and
add
add
imul
ret
mov
adc
mov
pop
mov
rorl
mov
mov
rcll
mov
inc
stos
sub
xchg
out
lock
subl
mov
sub
sbb
in
in
jnp
jge
mov
sahf
cld
and
sub
ret
pop
cmpsb
es
xchg
cli
push
cli
xchg
adc
xchg
sub
mov
clc
or
lahf
jnp
xor
mov
je
out
repnz
adc
xchg
sub
push
mov
fisttps
test
dec
das
and
pop
jl
cmp
cmpl
pushl
mov
pop
cmp
sub
inc
adc
movsb
and
dec
outsb
or
jle
rolb
loop
mull
or
jle
outsb
mov
frstor
jp
daa
loope
leave
jl
jecxz
jle
cmpsb
mov
into
lea
out
xor
mov
pop
and
aam
mov
push
mov
mov
cmc
hlt
repz
cmc
xor
xchg
adc
mov
shrb
shl
mov
fs
test
stos
rcll
mov
inc
sub
jo
xor
test
test
cmp
mov
dec
inc
insl
add
xor
push
ficoml
in
lock
cmpsl
in
xor
int3
stos
jae
hlt
fildl
mov
mov
aas
cli
mov
jl
stos
cmp
inc
addl
add
sub
jp
push
mov
mov
xchg
xor
xchg
dec
in
int
xchg
mov
mov
js
cltd
in
xchg
lea
xchg
mov
mov
out
lods
push
mov
push
jns
mov
js
mov
and
push
mov
dec
add
ret
push
pop
mov
pop
into
and
cwtl
mov
xchg
popa
call
call
xchg
jnp
out
pop
clc
ret
xlat
test
cmpsb
push
repz
stos
pushf
cmp
aaa
mov
lods
popa
lods
lret
sbb
popf
mov
test
dec
ret
cmp
jge
sbb
pushf
mov
addr16
mov
adc
fdivs
or
inc
ret
fldt
js
add
loope
sahf
adc
daa
or
or
adc
mov
pop
popf
arpl
jnp
sub
push
push
fwait
pushf
dec
ja
jbe,pt
fwait
cmpsb
into
pop
cmp
ror
jmp
pop
add
and
adc
xor
sbb
shr
mov
loope
mov
negb
in
xor
mov
sbb
mov
jle
jbe
adc
mov
jo
adcb
call
sub
lret
outsb
dec
imul
sbb
inc
mov
arpl
leave
dec
pushf
dec
adc
mov
addr16
ret
pushf
mov
xchg
cmp
xchg
dec
fnsave
xchg
mov
ret
rcll
pop
pop
xchg
dec
dec
inc
mov
adc
or
push
add
out
scas
push
mov
fbstp
push
adc
xchg
mov
adc
or
inc
arpl
jb
shll
push
xchg
in
bound
xchg
add
and
hlt
push
movsl
adc
push
lds
ds
sub
dec
scas
fidivrl
jmp
sub
mov
pop
in
ss
fs
rclb
clc
hlt
sbbl
leave
cli
xchg
cmp
push
pop
and
nop
jb
sbb
push
out
inc
and
ret
xlat
leave
xchg
sbb
fldl
movsl
push
pop
push
mov
int3
xchg
lret
lret
repnz
stos
xor
add
sub
sub
je
sahf
mov
pusha
fnstenv
xchg
pop
push
outsl
push
cmpsl
cmp
jp
cmp
bound
add
into
dec
mov
ljmp
stos
xchg
outsb
sub
mov
xchg
shrl
addr16
popf
mov
mov
je
inc
movsb
into
xchg
ret
inc
loop
cmp
jl
mov
jecxz
adc
fwait
in
inc
mov
pop
clc
addb
cld
insl
jbe
data16
lret
pushf
mov
dec
dec
lods
add
sti
cltd
scas
or
fisttpl
ret
out
psubusb
mov
mov
in
cmp
out
fs
push
stc
jne
push
push
inc
fsubrs
mov
lods
jmp
fs
icebp
push
shlb
ret
test
inc
ror
out
lea
push
jb
cs
and
push
inc
mov
adc
inc
ret
out
fimull
push
mov
xchg
stc
loop
dec
jb
dec
mov
std
ja
mov
mov
inc
sbb
mov
dec
mov
mov
cwtl
mov
stos
xchg
push
imull
outsb
mov
inc
je
ljmp
mov
in
fisubrs
outsl
jb
pop
fs
mov
xchg
outsb
add
ja,pn
sbb
pop
mov
inc
adc
sub
das
addr16
push
jecxz
ds
xchg
jnp
ljmp
pop
cmp
jae
ja
cwtl
bound
mov
push
lcall
bound
add
ficoml
sbb
testl
ffree
rorb
icebp
pop
fcoml
rcrl
repnz
and
sar
arpl
jno
fdivrl
test
mov
daa
gs
pop
sbb
sahf
insb
pop
jmp
cmp
rorl
dec
dec
xchg
repnz
mull
out
pop
divb
shlb
stos
push
pusha
push
mov
mov
out
enter
and
stos
adc
mov
cmpsl
sub
xor
add
jp
xchg
xor
mov
or
jb
add
test
cwtl
or
add
mov
in
cmp
imul
mov
or
lods
adc
ret
loopne
xchg
outsb
aaa
push
rolb
sub
push
insb
jmp
icebp
popa
shlb
imul
sub
xor
mov
jecxz
jecxz
mov
int
or
lret
in
lea
ficompl
dec
push
mov
pop
xor
dec
xchg
sbb
out
mov
fcmovb
rclb
inc
repz
mov
push
inc
sub
roll
push
in
push
call
xchg
addl
lea
je
gs
imul
roll
nop
cmp
jmp
adc
into
std
xor
fisttps
bound
and
inc
inc
insb
xor
sbb
ja
sbb
push
into
scas
pusha
jno
arpl
mov
dec
adc
mov
xor
daa
imul
push
adc
sarl
lret
popa
push
nop
jecxz
or
mov
sbb
ret
mov
jge
gs
pop
cmp
jnp
fbstp
inc
in
inc
sarb
divb
dec
mov
jle
mov
sahf
out
aam
sbb
pop
inc
mov
cmp
loop
ffreep
scas
jns
cmp
jns
repnz
xchg
inc
pushf
mov
shr
xlat
add
jb
rcrl
pop
jecxz
sub
jb
jg
add
pushw
sub
ja
in
jns
inc
mov
int
xor
push
pop
in
imul
xor
fidivs
inc
shlb
cmp
rolb
clc
jmp
shll
mov
cmp
cmp
stos
daa
es
hlt
or
inc
ret
popa
inc
fadds
dec
dec
xchg
lea
clc
mov
enter
pusha
push
in
jp
pop
repnz
push
cmc
stc
mov
sub
mov
loope
rorl
dec
mov
xor
shl
mov
or
mov
cld
outsl
cltd
test
shrb
outsb
add
mov
add
mov
aas
fdivr
xor
cli
cmp
pop
jns
js
dec
sub
xor
into
pop
mov
dec
jp,pt
test
je
pop
pop
inc
cs
jge
movsb
jle
mov
or
and
xlat
jns
pushf
sar
sbb
bound
loop
lret
push
lcall
pusha
sub
jge
outsl
scas
add
rcrl
ja
in
push
lahf
into
cmpsb
fucomp
clc
pop
fdivrl
or
stc
shlb
je
outsb
pushf
loopne
lea
movsb
xor
dec
jne
out
daa
popa
push
inc
pop
repnz
scas
push
lahf
pop
xchg
xchg
pop
push
lods
jae
sbb
fcoms
sbb
pop
lret
sahf
es
outsb
adc
js
mov
push
ds
adc
inc
mov
iret
sub
jecxz
pop
cwtl
cmpsl
ret
mov
mov
or
outsb
scas
bnd
mov
push
jmp
sbb
mov
push
jo
add
xchg
leave
jmp
lea
aam
mov
js
and
inc
mov
mov
std
js
dec
sbbl
rolb
ljmp
inc
icebp
mov
clc
push
movsl
add
insb
lods
or
je
mov
ss
pop
int3
insl
jo
sbb
and
sti
inc
fnstcw
loopne
aaa
pop
arpl
std
aad
std
lds
mov
int
lods
jo
pop
or
test
scas
ljmp
pop
out
cmp
lret
cs
cli
test
jne
sub
and
add
cltd
or
inc
insl
shrb
cmp
mov
jo
jo
cmp
jno
or
js
or
loopne
int3
and
mov
xchg
ds
ficomps
bound
jge
cmp
jns
jo
test
push
sahf
in
sbbl
add
fistl
lods
aaa
mov
adc
sub
push
jle
mov
shll
hlt
or
iret
ja
xchg
adc
icebp
adc
jecxz
shll
fistl
mov
inc
call
jmp
inc
sbb
cmp
stc
fsubs
es
sbb
cmc
decb
cld
scas
cmpsl
sti
cmp
shll
jns
mov
rorb
fadds
push
lret
mov
xor
fld
inc
les
inc
sub
cmp
stc
ret
je
adc
arpl
mov
nop
int
imul
xchg
sbb
pop
test
add
jp
test
add
decb
add
ljmp
mov
sub
test
movsl
mov
mov
or
mov
into
addr16
stos
cld
push
pop
les
xchg
mov
cmp
fldl
fwait
mull
xchg
fscale
mov
aaa
shrb
insb
mov
int3
es
sti
xchg
mov
mov
adc
pop
out
mov
dec
inc
xchg
icebp
jp
cmpsb
pop
xchg
mov
inc
in
pop
stc
mov
ret
or
testb
sbb
pop
js
hlt
in
jl
insb
adc
xchg
aas
inc
imul
ficompl
jp
add
mov
mov
mov
inc
scas
or
outsl
imul
mov
sub
repnz
inc
subl
hlt
cmp
add
sub
lea
insl
lcall
fwait
es
cmp
jae
or
sbb
cmc
sbb
ucomiss
adc
sub
or
dec
and
mov
test
gs
test
cwtl
inc
xchg
sub
mov
fistps
adc
sbb
jg
andb
xor
mov
fs
mov
add
push
push
lds
mov
leave
loop
outsb
xchg
mov
and
cmp
fwait
gs
xor
and
mov
or
sub
cmp
test
fwait
add
dec
test
mov
iret
cwtl
sti
lcall
mov
je
and
js
sbb
in
fs
push
out
rol
js
sti
sub
ja
call
mov
aam
sub
mov
aas
orl
andb
ret
sub
push
mov
pop
sub
pop
cmc
or
out
std
insl
test
xor
sti
jecxz
stos
mov
xchg
mov
ret
mov
push
xchg
test
imul
cltd
xchg
test
shl
insb
popa
and
in
fnstenv
push
das
mul
add
pusha
out
mov
xchg
cmp
mov
jp
fucomip
mov
or
pop
inc
in
pusha
cwtl
subb
xchg
lret
cmpsl
cmp
ja
pop
cmp
sub
aam
movsb
ljmp
bnd
cmpsw
ret
push
cmp
shlb
mov
leave
sub
mulb
cmp
sbb
dec
repnz
jbe
sbb
mov
out
jne
in
daa
ret
lret
sbb
iret
dec
cltd
pushf
cmpsl
movsl
dec
stos
stc
lock
lods
adc
or
repnz
push
dec
lea
in
pusha
test
je
xor
icebp
lds
ss
mov
out
push
fimuls
push
fcomps
cmc
icebp
andl
dec
jns
cmpsl
imul
mov
scas
mov
mov
xor
lahf
mov
call
pop
dec
adc
loope
test
cmpsb
and
mov
std
loope
and
fsubl
out
pop
ffree
lock
pop
dec
pop
test
roll
jmp
sbb
pop
js
insb
jne
and
imul
push
insl
jle
inc
aaa
outsb
clc
sbb
jnp
pusha
mov
arpl
fisubl
push
jge
insb
daa
nop
jge
push
fisubrs
out
cmp
cwtl
scas
push
inc
negl
cltd
sbb
stc
sbb
fs
add
iret
push
popa
insl
sbb
les
movsb
pop
jp
lock
mov
mov
rorl
testl
jo
lret
push
inc
mov
loop
lret
popf
in
or
ret
jp
in
add
int3
imul
aaa
sbb
inc
sub
sub
out
xchg
sarb
cmp
sub
push
in
jnp
aaa
rcll
data16
fiaddl
dec
cmpsb
filds
stos
stc
xchg
adc
int
pop
dec
adc
mov
pop
pop
icebp
xchg
sub
movsl
sub
ss
mov
and
jnp
push
push
out
lock
and
pop
and
mov
aad
mov
out
mov
cmpsb
xor
jnp
add
or
inc
push
push
cmp
out
int
hlt
fidivs
mov
cmp
sbb
movsb
insl
xchg
cwtl
jns
add
lods
fwait
mov
sbb
xchg
icebp
push
cmc
addb
xchg
shl
pop
mov
jnp
sub
sub
sbb
jno
xor
les
andl
mov
dec
dec
int3
bndstx
js
inc
out
push
stos
mov
mov
or
enter
sahf
cli
cmp
jl
and
es
add
add
sbb
mov
fadd
or
adc
mov
and
daa
mov
pop
jge
jo
xchg
push
push
shlb
dec
gs
cmp
push
test
jp
or
das
enter
jnp
nop
lcall
outsb
rcr
xchg
lret
js
dec
notl
sub
int
mov
lret
mov
jmp
mov
ds
pop
mov
mov
xchg
repz
test
and
mull
dec
mov
adc
inc
rclb
add
pop
adc
or
inc
and
dec
fs
sbb
movsl
mov
adc
push
push
push
das
fsubl
jmp
dec
xchg
adc
fimuls
mov
dec
sub
aam
or
or
push
sarl
int
andl
dec
mov
mov
jbe
push
mov
sbb
mov
dec
mov
out
loopne
xchg
sbb
lret
mov
mov
mov
add
pop
mov
add
adc
and
ret
mov
add
push
cmp
stos
iret
mov
je
jecxz
test
adc
jo
cmpsb
jae
outsb
lock
dec
insl
mov
test
popf
jbe
pop
ret
push
popa
fstl
push
add
jnp
cli
mov
cmpsb
mov
dec
jb
mov
ss
adc
add
cmp
sub
loop
les
aas
out
mov
lds
or
bound
mov
sbb
push
addr16
mov
sbb
cld
xor
nop
cmovp
ret
enter
aam
sarl
in
popf
mov
sbb
or
out
loope
mov
pushf
cmpsb
imul
mov
scas
xchg
xor
adc
add
jne
cmpsb
popa
push
lret
lea
xorl
pop
or
sahf
ss
mov
cltd
jb
cmp
mov
stc
xorps
cli
and
mov
dec
fcoml
int
mov
cs
jl
outsl
push
mov
js
xchg
mov
jle
ljmp
lock
test
mov
sbb
mov
roll
jg
call
adc
lock
push
sbb
in
fisubrl
sbb
in
jmp
test
lea
pop
mov
xchg
mov
push
sbb
jmp
push
jmp
pop
sbb
or
fldt
rol
vpsrlw
hlt
cmp
es
or
jecxz
push
repz
out
dec
lret
movsb
pop
stc
sub
ljmp
pop
sarl
and
push
jo
in
and
jp
or
dec
jbe
addr16
mov
fs
and
gs
add
test
xchg
leave
icebp
dec
add
xchg
rcll
fdivrs
pop
mov
movsl
add
lret
pop
inc
pushf
xchg
les
dec
mov
dec
jno
push
cmc
test
and
fs
mov
leave
sub
add
sbb
adc
test
sbb
and
sbb
out
push
xchg
xor
in
mov
push
mov
jp
aaa
xchg
div
xchg
je
out
in
addl
roll
pusha
mul
sbb
mov
cs
mov
add
inc
mov
mov
out
mov
cmp
xchg
sar
cmp
in
insb
stos
bound
xchg
dec
aad
push
les
ss
sbb
aam
pushf
sbb
bound
fnstenv
imul
into
test
push
in
lret
mov
pop
xorl
outsb
pop
xchg
jae
ret
or
clc
pop
mov
cltd
mov
pusha
xchg
jl
sti
pop
mov
mov
push
lahf
lahf
fnstenv
dec
mov
pop
fcompl
cmp
pop
cmpsl
cwtl
popa
adc
hlt
cmp
sarb
sbb
sbb
loop
pop
sub
jae
xchg
push
call
jne
leave
push
push
mov
ljmp
iret
stos
sbb
adc
arpl
mov
data16
jmp
repnz
adc
mov
mov
int3
int3
mov
mov
ljmp
sti
sti
insb
loopne
push
clc
mov
push
adc
add
cwtl
xchg
adc
fimull
xor
iret
cmp
pop
pop
enter
xchg
xchg
push
lods
popf
xchg
and
add
and
jecxz
push
sbb
push
push
pop
clc
xchg
sbb
or
xor
mov
mov
test
xchg
pop
dec
xchg
adc
lods
adc
pop
insl
or
mov
arpl
loopne
cmp
enter
pop
sbb
aam
jecxz
mov
xchg
scas
inc
icebp
imul
cmpl
sahf
mov
insl
mov
inc
jecxz
loop
and
fstps
cmp
clc
out
or
cld
int
imul
mov
sbb
addb
outsb
pop
orl
or
mov
dec
test
mov
fs
daa
adc
dec
cld
fistpl
notl
js
cs
sti
jne
and
sti
jae
jb
repz
outsb
cld
mov
dec
stos
mov
add
rep
sahf
inc
cmp
pop
stc
pop
jne
pop
push
cwtl
push
inc
test
cmp
imul
cmp
js
and
mov
cmp
fmul
imul
loop
pop
sbb
inc
jo
inc
lret
inc
dec
dec
pop
dec
lds
jecxz
dec
fcomp
or
mov
bound
cmp
aam
fdiv
sbb
mov
test
mov
mov
cmp
sub
shr
pop
test
ror
popa
jnp
daa
mov
push
and
add
jnp
mov
mov
in
aaa
fstp
inc
mov
xor
mov
mov
push
xchg
cmc
outsl
inc
cld
lret
adc
jo
imul
insb
or
in
mov
mov
pop
jl
movb
xchg
mov
mov
aas
cmp
outsb
mov
ja
movsb
pop
or
mulb
fs
sbb
push
cmpsl
lret
inc
xchg
push
mov
fmull
push
pop
fimull
xchg
ljmp
inc
push
filds
pushf
movsb
std
jl
fs
fs
cmp
insl
dec
mov
adc
es
out
push
lea
loop
stc
iret
ret
sbb
ja
cld
stc
test
fadds
out
xchg
dec
cmp
xchg
popa
xchg
xorb
xchg
ret
out
mov
jp
call
ret
xorl
ja
inc
test
xor
pop
rcll
scas
rcll
leave
push
pop
shll
repnz
in
or
jecxz
mov
fdivs
dec
mov
imul
push
arpl
jbe
loop
sub
mov
outsl
ficoml
incl
fists
ss
fsubrl
js
pushf
pop
push
cwtl
xchg
xchg
cmc
jbe
icebp
jnp
sub
loopne
lcall
fildl
xchg
mov
xor
jns
addr16
jo
xchg
sbb
cmp
cld
ja
imul
mov
fldl
repnz
cmpsl
test
push
dec
xlat
subl
cmp
insb
inc
cmp
push
out
mov
je
bound
pop
aam
std
or
dec
mov
push
pushf
icebp
shlb
or
or
movsl
cmc
or
xchg
in
mov
nop
icebp
cmp
pop
xcrypt-cfb
cmpsl
gs
xor
lds
enter
lret
cmc
add
gs
outsb
ffree
jae
pop
add
dec
leave
jge
or
sbb
add
test
scas
inc
cmpsl
mov
cmpl
outsl
or
das
jb
mov
int
mov
jg
hlt
mov
dec
jmp
mov
inc
xor
mov
xchg
jg
push
ds
or
stos
xor
lret
ret
outsb
push
xor
ret
and
mov
mov
ffreep
sti
shll
inc
xchg
sbb
in
mov
jnp
dec
xchg
jo
mov
pop
movsl
lret
ret
pop
push
in
gs
sub
mov
mov
mov
push
cmpl
mov
push
xchg
test
aam
bound
push
pop
icebp
fiaddl
xchg
xchg
std
mov
addr16
or
scas
jp
or
jmp
les
pop
fcom
and
push
jge
cli
mov
shlb
pop
push
pop
sub
mov
push
pusha
leave
push
test
jbe
rorl
jmp
call
bound
and
arpl
push
repnz
xchg
pop
negb
mov
das
test
pop
sub
or
xor
push
call
loop
cmpsl
repnz
arpl
adc
gs
mov
pushf
mov
pop
lods
pop
jp
pop
mov
testb
repz
fs
push
cs
sahf
adc
lods
test
fimuls
xor
cmc
stos
push
pmullw
adc
enter
popf
xor
loop
aaa
int
fisttpl
sub
aas
mov
test
sub
jae
xor
mov
mov
jl
mov
setns
adc
push
mov
adc
rol
push
dec
ja
jbe
lahf
xlat
fidivs
repnz
ret
jo
lahf
imull
js
fs
mov
or
jge
js
adc
sub
adc
into
sbb
inc
mov
call
popf
adc
in
mov
imul
pop
cmp
loope
das
ret
jnp
sarl
lods
and
cli
sbb
cmp
mov
add
mov
lods
mov
pop
call
sbb
outsl
xlat
jp
pop
and
adc
jecxz
shr
mov
andl
jle
and
mov
xchg
mov
add
test
dec
jns
pushf
fucomip
push
cmp
cltd
andl
cmp
push
mov
lret
push
push
sub
jbe
and
add
adc
insl
je
in
push
inc
cltd
xor
mov
mov
aam
sub
je
aad
std
cs
js
pop
lea
fwait
and
popf
outsl
popa
xchg
xor
dec
sbb
and
mov
negb
adc
iret
inc
andl
mov
fnstsw
les
mov
iret
jg
gs
add
mov
dec
out
dec
pop
repz
or
in
cmp
lahf
in
nop
dec
data16
fimuls
in
cmp
pop
jge
out
pop
add
das
je
dec
ret
pop
and
sub
sub
mov
push
mov
cmpsb
jo
add
and
sub
adc
mov
dec
int3
sub
push
mov
scas
into
pop
or
add
lcall
daa
lret
or
out
aam
sub
push
cld
mov
stos
xchg
dec
fwait
pop
and
lods
pop
out
cmp
and
and
mov
pop
repz
mul
stos
enter
add
pop
ret
mov
or
loope
add
xchg
mov
push
dec
in
aam
dec
dec
out
iret
arpl
movsl
adc
push
enter
xchg
les
mov
or
or
mov
js
and
loop
imul
sub
pop
daa
mov
shrl
int
or
inc
imul
pop
es
push
imul
inc
loope
jb
adc
mov
loope
cmc
xlat
push
scas
and
mov
shl
aaa
cmp
and
add
adc
push
dec
movsb
loopne
fdivrs
cmp
fcompl
aad
adc
rorl
aam
or
stc
xor
std
test
xchg
test
inc
push
or
xchg
js
xchg
xchg
daa
push
fxch
les
lea
clc
mov
cwtl
loop
nop
repz
nop
cmp
out
adcb
jp
mov
dec
rcrb
push
aad
test
push
aas
shlb
cmp
jecxz
mov
mov
incb
mov
das
fiadds
shl
and
xchg
mov
in
and
rcll
or
test
les
enter
std
or
xchg
aas
mov
dec
xor
and
dec
mov
push
cli
inc
mov
stc
lcall
jb
jge
stos
xorl
jo
lahf
mov
aam
and
fwait
stos
fdivrl
outsb
xor
bound
jp
pop
pushf
jge
int
lcall
addr16
jno
shll
jl
or
mov
mov
pop
aad
push
mov
int
mov
sti
pop
add
pop
dec
in
inc
cmp
cli
jmp
xchg
lret
or
stos
insl
add
sbb
pop
les
push
call
popf
push
push
lcall
mov
push
cmpsb
iret
or
mov
adc
faddl
jle
sbb
imul
je
cmp
call
xchg
jb
jge
sbb
inc
loopne
ljmp
mov
in
lcall
cmpxchg
pushf
add
out
pop
data16
lock
popf
popa
sbb
fisubrl
adc
push
cmpsb
int3
repnz
pusha
push
inc
aas
pop
sbb
cmpsl
xor
out
movsl
ja
cmc
cld
xor
cmp
repnz
xlat
mov
cs
sbb
dec
push
scas
push
inc
cmp
xchg
xor
mov
lret
sbb
xchg
add
aaa
pop
lcall
ja
mov
es
add
loop
jmp
inc
xchg
sbb
lahf
lds
jne
jno
das
icebp
loope
sbb
mov
xchg
sbb
pop
shlb
iret
and
fists
lods
adc
or
pop
aam
incl
pusha
and
inc
dec
mov
mov
lods
lahf
dec
add
ret
out
pop
stos
xor
jg
cld
inc
adc
test
lahf
dec
shlb
sbb
pop
shlb
dec
jb
mov
sbbb
jle
mov
and
dec
sahf
push
mov
push
pop
pop
pop
stos
pop
mov
dec
repz
adc
add
shl
lock
xlat
push
ss
aad
sub
pop
hlt
lds
pop
pop
push
fcmove
sub
fwait
xchg
ret
inc
in
adc
sbb
jb
pushf
pop
pop
cmp
popf
xchg
andb
ficomps
iret
iret
mov
or
inc
add
shrb
pop
jb
movsl
dec
mov
inc
lock
lret
mov
inc
cld
adc
out
out
push
pop
lret
push
ret
push
ret
pop
fcoms
mov
pop
imul
inc
loop
jbe
xlat
adc
adc
das
fbld
adc
insb
es
push
lret
and
insl
sbb
lret
xor
xchg
lcall
test
test
sahf
jnp
loopne
scas
popa
nop
xchg
es
jo
sub
icebp
xchg
arpl
les
mov
push
push
mov
ss
fucomi
fmuls
cmp
out
das
adc
cs
xchg
jmp
push
jge
lock
adc
ret
push
int3
aad
int3
and
jns
pop
je
jbe
sbb
in
jb
stc
loope
pop
test
push
adc
xchg
sbb
out
sub
push
dec
pop
pop
lea
dec
pop
iret
fisubs
ja
adc
lret
dec
setg
or
jg
inc
or
and
mov
push
xor
sbb
daa
sbb
cli
add
jo
movzbl
lods
xor
add
in
out
inc
xor
and
add
lahf
inc
ljmp
push
lods
cmp
imul
mov
pop
cmp
divl
mov
and
push
std
push
addl
test
mov
cmpsl
adc
sub
seta
ds
or
sbb
ret
fcoml
dec
sarb
cmp
cmp
andb
xor
out
push
push
dec
sub
jge
dec
movsb
push
add
stc
fnstsw
loop
jecxz
insb
dec
jg
mov
xchg
hlt
jb
jno
and
pop
lcall
test
jns
das
enter
and
xchg
push
pop
push
sub
push
xchg
shlb
or
imul
cmp
pop
call
and
push
imul
imul
addr16
sub
inc
ret
and
test
out
test
insb
mov
aas
sub
jge
stos
mov
cmpsb
push
pop
mov
inc
les
idivb
pop
and
in
test
xor
jmp
or
in
mov
adc
add
ret
mov
xor
scas
fidivrl
data16
xor
cmp
mov
add
xchg
cs
jmp
testl
cs
popf
sub
dec
add
xchg
jne
test
sbb
mov
stc
add
push
in
sbb
pop
adc
cmc
mov
clc
push
xor
adc
adc
xchg
pop
pop
popa
sbb
push
xchg
mov
xchg
arpl
adc
lods
test
mov
mov
enter
adc
dec
jb
int3
mov
outsl
lret
lcall
mov
stos
mov
icebp
add
mov
adc
lret
inc
dec
iret
test
add
sbb
out
outsb
cmp
sbb
mov
call
push
dec
pushf
dec
sbb
fisubs
adc
int
movsbl
pop
arpl
cmp
add
fldcw
hlt
xor
xchg
dec
jp
or
xlat
push
in
insb
xchg
call
in
inc
inc
pop
movsl
mul
cmpsb
pop
adc
iret
dec
pop
mov
andl
xchg
add
or
pushf
lds
pushf
xchg
pushf
mov
pop
mov
push
inc
shl
sarl
aad
sub
loope
pcmpgtd
mov
adc
pop
pop
cmpsb
add
cmpsl
addb
sbb
mov
ret
and
insl
sarl
cwtl
lcall
es
icebp
mov
arpl
add
sbbb
cli
sbb
xor
and
enter
js
iret
scas
adc
loopne
or
mov
cmp
scas
cmpl
add
mov
xor
and
enter
outsb
cld
push
add
lret
lods
push
xchg
cwtl
jg
in
push
pop
movsb
test
lret
mov
ljmp
jge
mov
sbb
movsb
pusha
mov
sbb
mov
jle
paddb
mov
push
aaa
dec
cmp
cmpl
pop
pop
fiaddl
fsubr
imul
sbbl
mov
repnz
mov
push
xchg
sub
js
int
add
mov
inc
es
xlat
mov
jno
and
scas
lahf
lret
xor
inc
xchg
dec
pop
out
movsb
flds
sub
cltd
push
repnz
and
add
lock
mov
cmp
dec
lea
xor
mov
insb
dec
imul
fimuls
les
fsts
pop
inc
mov
gs
shlb
test
lods
and
cli
shl
pusha
mov
aas
jg
dec
xor
in
icebp
sub
push
adc
sbb
sub
cmpsb
mov
pop
cmp
ds
rcr
xchg
and
gs
js
imull
fmuls
or
push
into
lahf
aam
mov
in
sub
add
es
ficomps
add
loop
in
repz
add
jmp
pop
ss
add
cmpsl
or
jge
cmpb
mov
mov
fstps
cmp
inc
dec
add
loop
xchg
xchg
sbb
add
neg
cmc
push
inc
ret
lods
mov
xor
mov
lcall
dec
sahf
pop
rcl
les
push
jne
dec
popa
add
push
add
jle
inc
xchg
pushw
cwtl
outsb
jp
dec
mov
push
jp
push
xor
and
je
mov
fwait
enter
mov
add
dec
mov
shll
nop
dec
sub
out
in
xor
inc
push
xchg
mov
test
xor
jmp
push
rcr
enter
pop
outsl
cli
aaa
adc
data16
jp,pn
test
sbb
imulb
lods
out
sbbl
jnp
mov
mov
and
cmpb
pop
data16
dec
cmp
mov
repz
pop
pop
jne
stos
cmc
adcb
in
test
push
fcoml
mov
outsl
out
dec
aas
push
popa
test
jno
inc
cmp
inc
mov
fwait
lods
sbb
in
rorb
sbbl
inc
add
fndisi(8087
into
ret
js
mov
pop
cltd
xchg
pop
les
jmp
cmp
xchg
std
sbb
mov
sub
xchg
inc
adc
mov
cmp
jne
inc
mov
xchg
jns
sub
or
jge
push
add
fildl
gs
adc
flds
cwtl
sub
jae
sbb
xlat
inc
fcomps
test
aaa
fsubrl
push
in
pop
push
dec
cmp
mov
lods
sti
out
adc
popf
cmpsb
leave
mov
push
lret
xor
imul
sbb
scas
add
popa
jg
adc
imul
mov
mov
ror
cmove
and
arpl
shrl
or
cmp
inc
leave
jp
mov
pop
lods
shr
aas
or
add
push
mov
inc
mov
insl
daa
mov
mov
outsl
dec
mov
in
mov
daa
out
and
sbb
movsl
xchg
and
aad
pop
aas
inc
outsl
cltd
and
test
gs
xor
mov
popf
test
decl
adc
push
jo
mov
add
add
rolb
push
notb
pop
cmp
orl
or
sub
mov
push
fimuls
mov
adc
and
rcrl
mov
test
sbb
xchg
xor
sub
call
scas
jmp
repnz
push
cld
sahf
out
xor
lret
loop
mov
fwait
test
insl
jne
in
cli
gs
inc
loope
aas
and
cmp
pop
or
mov
sbb
daa
push
inc
sub
add
sbb
ret
fadds
pop
cmpsb
cmp
pop
mov
int3
mov
imul
xchg
push
fdivs
sqrtps
or
ss
out
popf
cmp
pop
mov
xchg
rorb
add
cmp
cld
mov
lea
fs
mov
and
icebp
cmp
sbb
fmuls
int3
inc
cmpsl
add
into
add
dec
pop
adc
mov
xor
cmpsl
out
and
aam
inc
or
jbe
repz
mov
int
jl
push
mov
test
cmp
dec
mov
insb
clc
cmp
mov
scas
ljmp
pop
push
or
outsb
push
mov
data16
popf
pop
enter
add
mov
inc
lcall
loopne,pt
incl
pop
addr16
test
jbe
sub
leave
and
mov
mov
push
loope
xchg
ds
insl
loop
insb
push
mov
test
mov
addl
cmpsl
fldenv
repz
sub
cmpsb
jns
sti
out
cmp
stc
jmp
pop
push
dec
pop
repnz
or
jmp
mov
fs
and
fistpl
leave
push
mov
fildl
push
fmull
outsl
add
xchg
jecxz
and
in
in
jne
gs
popa
cwtl
jg
out
fucomp
int
jbe
push
testb
js,pn
push
test
cmp
popf
mov
cmp
push
jge
fdivrl
mov
ret
sbb
loope
fildll
into
fbld
jmp
xchg
push
fbstp
adc
out
or
cmp
call
repnz
mov
and
es
mov
loop
subb
enter
mov
shl
outsb
pop
mov
or
dec
mov
test
pop
pop
js
sbb
or
cmp
cs
fimuls
movsl
hlt
jmp
and
es
xchg
pop
inc
stos
cmpsb
inc
aaa
jno
lret
or
sub
loopne
jo
repnz
xchg
std
js
and
hlt
xor
fnstcw
jl
xlat
inc
daa
popl
or
jo
clc
dec
popf
shrl
cmpsl
testb
pop
popa
xor
bound
add
adc
sub
adc
outsb
push
call
mov
and
js
in
and
jge
adc
mov
xchg
cmpsb
gs
fldenv
arpl
add
xor
std
jge
lods
inc
test
pop
subl
cmp
dec
push
fiaddl
ljmp
dec
inc
int3
mov
inc
nop
mov
nop
jp
jge
inc
adc
xchg
mov
inc
inc
push
sti
hlt
movsb
dec
pop
andl
pop
mov
lret
mov
stos
lock
or
mov
sbb
sub
mov
inc
imul
inc
push
push
pushf
xchg
sbb
mov
into
out
pop
dec
or
xchg
sahf
sbb
mov
add
insb
mov
adc
dec
xor
and
mov
test
xchg
js
ret
rcr
lret
or
mov
test
arpl
inc
ficomps
mov
pop
push
mov
fidivs
addr16
cmpl
int3
cli
dec
divl
push
stos
mov
iret
xchg
add
mov
sahf
push
testl
or
in
and
mov
mov
and
cs
sbbb
mov
xchg
sub
inc
leave
and
out
sbb
rorl
add
outsb
pop
out
push
sub
pop
std
sub
xchg
jae
xchg
nop
jl
popa
xor
dec
les
adc
sbbb
pop
jmp
scas
sub
outsl
dec
dec
divb
lcall
iret
push
jge
popl
and
dec
inc
pop
push
mov
dec
adc
xchg
push
dec
int3
mov
xor
mov
sub
aam
mov
xchg
and
or
adc
int
or
scas
lock
sarb
push
inc
or
push
testl
pop
cs
imul
push
into
scas
jo
and
repnz
push
ficoms
mov
adc
push
xchg
adc
add
idivl
pop
shll
cmp
addl
inc
or
popa
in
and
pop
call
popaw
and
push
ss
push
call
sbb
mov
popf
dec
pop
dec
mov
andb
mov
sbb
add
lea
scas
shll
xchg
shrb
sub
out
push
je
aad
mov
je
push
je
cmc
cltd
out
push
dec
movsb
push
repz
cmp
jle
aad
cmp
rcrl
stc
dec
cli
mov
jg
push
xchg
sub
and
sti
arpl
and
out
int
rorl
inc
fwait
or
out
nop
xchg
push
cmp
jns
fldenv
mov
mov
cmp
cli
sub
lahf
test
das
jl
dec
mov
add
mov
cmp
cmc
adc
push
or
push
outsl
and
jl
scas
test
push
cmp
cltd
in
lods
popf
aas
sub
idivb
sub
decb
xor
jmp
or
icebp
je
rolb
push
inc
mov
repz
in
js
iret
mov
push
pop
lcall
add
mov
add
pop
mov
fdivs
into
mov
mov
or
aad
sbb
rcll
jmp
inc
mov
stos
inc
cmp
xor
in
orb
cmpsb
xchg
cmp
ljmp
push
inc
sbb
and
ljmp
cmp
jle
bound
aaa
rcrl
scas
push
pusha
sbb
cmp
jne
js
clc
mov
xor
jbe
aam
je
mov
sbb
push
jb
mov
fwait
subl
sbb
push
add
mov
jecxz
pusha
sarl
xchg
adc
inc
mov
sbb
fistpll
mov
aaa
xor
popf
outsl
xor
mov
xor
inc
mov
jl
mov
xchg
xor
mov
cmp
mov
cltd
shll
mov
leave
inc
pop
call
pushf
add
sub
or
add
popa
xor
aam
sbb
movzwl
lret
stc
clc
pop
cmpsb
cli
int
mov
pop
dec
cmpsb
jle
int3
and
insl
and
and
sbb
inc
dec
pop
jns
adc
hlt
cmp
sbb
mov
icebp
mov
inc
popa
pop
adc
icebp
popf
xchg
sahf
mov
fwait
loope
xor
std
jne
push
adc
and
std
call
std
cmp
and
xchg
add
dec
out
out
jl
mov
add
icebp
and
xchg
sub
es
xchg
cltd
lahf
cmp
mov
cmp
aam
fdivrs
movl
stos
mov
inc
pop
repnz
ss
or
lret
aaa
push
clc
pop
xor
sub
popa
or
cwtl
inc
jg
fmul
xchg
mov
xchg
or
sbb
pop
sub
sub
flds
mov
out
dec
fmull
pop
mov
test
and
out
and
clc
sbb
mov
cvtdq2ps
sub
jmp
mov
into
lds
cmp
push
int
ret
inc
dec
insb
jecxz
scas
out
mov
pop
ljmp
insl
mov
or
lret
jp
aaa
in
push
int
mov
out
mov
and
jnp
data16
mov
and
mov
sbb
in
mov
mov
push
testl
adc
adc
inc
addr16
arpl
pop
dec
cmp
push
fisubl
rcrl
mov
aaa
cmp
jle,pn
mov
sbb
clc
jb
mov
cli
mov
mov
add
push
incl
cs
xchg
and
xor
sub
push
dec
dec
insl
aad
jg
jmp
and
mov
lds
cltd
icebp
mov
xchg
jecxz
add
in
divb
and
cmp
jge
fstps
push
xchg
mov
int
sbb
mov
fwait
mov
jbe
lret
inc
mov
xor
or
mov
mov
stos
xor
mov
or
aad
outsl
ljmp
pop
and
test
cli
in
lahf
pop
test
dec
imul
push
pop
scas
or
cmp
pop
jmp
cmp
fstps
pushf
stc
subl
outsl
mov
jb
cli
das
ljmp
xor
and
xchg
jp
xchg
ret
push
pop
std
aaa
mov
lahf
mov
in
xor
mov
jecxz
cmp
jle
movsb
fwait
sbb
int
inc
int
mov
mov
out
jle
pushf
dec
or
jge
fdivp
sub
push
mov
jo
dec
lods
test
fidivrl
mov
or
out
xor
or
mov
loop
xchg
push
fldcw
mov
pop
das
or
mov
orb
ljmp
aas
scas
sbb
test
out
jo
jo
sub
rorl
mov
cmp
es
idivb
ret
pop
bound
ljmp
les
cs
pusha
cmp
js
mov
call
cltd
dec
pushf
push
rorb
xchg
mov
jb
adc
popf
int
adc
cmpsb
testl
mov
sub
outsl
dec
loopne
insb
ficompl
sbb
cmp
adc
pop
jne
mov
adc
cwtl
nop
mov
lcall
push
lods
push
jbe
aas
call
pop
and
jae
mov
jne
insl
mov
cmp
sbbl
add
js
jns
cmpsb
and
loop
out
inc
sub
inc
gs
icebp
jne
pop
aam
stc
imul
mov
push
lret
fsubrs
and
sti
lea
add
scas
stc
sbb
dec
adc
out
push
inc
and
mov
inc
icebp
aam
push
rol
daa
xchg
in
ret
sbb
jb
inc
popf
xchg
imull
push
xchg
xchg
push
je
stos
in
shll
daa
fidivs
cmpsl
cmp
xor
nop
add
imul
mov
jecxz
and
push
out
add
orl
enter
jo
cmp
cmp
scas
and
in
imul
fwait
jl
dec
fstpt
jno
adc
es
sahf
inc
stc
gs
push
push
cmc
ret
test
push
les
adc
repnz
scas
js
inc
dec
popa
loopne
mov
mov
inc
pusha
mov
test
mov
mov
xchg
lahf
mov
dec
shrb
pop
sahf
fdiv
loopne
inc
xor
enter
xchg
repz
ss
rclb
xchg
push
enter
scas
loopne
nop
out
jns
mov
psubq
xor
cmp
push
inc
xchg
sub
cld
xor
adc
rorl
pop
sti
mov
or
mov
adc
fcomip
pop
xchg
and
push
push
xchg
clc
push
lods
rorb
cmp
pop
pop
sub
pop
out
ds
ficompl
mov
inc
pop
mov
add
dec
ss
out
mov
jmp
sbb
xchg
inc
and
ds
ds
jmp
sbb
push
cmp
stos
push
xorl
imul
in
or
jns
sub
shrl
dec
push
cmp
ret
stos
jnp
add
inc
in
in
push
add
iret
rcrb
and
in
mov
sub
dec
adc
clc
cmpsl
rcr
pop
dec
dec
cs
or
jo
nop
pop
aaa
add
or
sbb
ret
push
xor
xor
push
clc
mov
daa
in
and
lahf
pop
mov
xor
sub
push
jne
jb
clc
stos
mov
pop
outsl
mov
dec
or
lcall
daa
xor
psubb
mov
pop
andb
xchg
pop
in
test
ds
mov
xor
lock
and
bt
pop
add
inc
cli
mov
push
iret
iret
cs
ja
push
lds
scas
jb
add
ficoml
pop
imul
pop
pushf
fwait
cmp
popa
out
sub
es
jecxz
loop
je
lods
rorl
fidivs
mov
adc
mov
push
xchg
sti
sbb
rorb
cli
outsl
jbe
jl
cmpsl
cltd
lds
lods
and
in
fsubr
cmp
pop
adc
cltd
cmp
jle
fdivl
or
push
sahf
jne
adc
and
fmulp
shl
fs
js
jl
int3
jg
sub
push
dec
dec
sar
jl
aaa
or
inc
pusha
sbb
popf
clc
pop
lahf
inc
jnp
mov
sarl
outsl
cmp
pop
fucomip
pop
ljmp
ds
xchg
mov
ficoml
fildll
adc
dec
add
xor
dec
or
aad
mov
in
mov
mov
lret
arpl
dec
and
cmpsb
and
or
xor
pushf
cwtl
mov
rol
cld
addr16
push
ja
fstpl
jecxz
pushf
add
xor
push
testb
pushf
call
jnp
xchg
lock
adc
cwtl
jle
adcb
adc
aam
and
hlt
jne
cld
mov
push
lock
xor
fstps
roll
sub
test
mov
data16
jne
or
imul
cmpsl
fs
stc
cltd
stos
jo
sbbb
push
push
jno
push
jp
int
into
dec
cmpsl
icebp
les
mov
push
clc
jno
push
cmpsl
movsl
inc
pop
imul
in
dec
cmp
xor
add
movsb
out
or
sahf
hlt
sbb
push
insb
ret
cltd
ret
add
adc
arpl
imul
dec
ja
mov
stc
test
and
jae
ficoml
dec
cmpsb
sti
scas
div
cmpxchg
cmpsb
dec
cmpsl
dec
cmp
jbe
hlt
pop
fs
xchg
push
inc
mov
adc
add
inc
and
data16
mov
dec
gs
cmp
fisubl
insl
out
dec
in
hlt
in
xchg
sbb
ret
shlb
xor
add
push
out
and
imul
arpl
les
das
xchg
cmp
pop
fcmovnbe
hlt
mov
mov
icebp
imul
mov
inc
cmp
jnp
inc
mov
inc
outsl
push
or
mov
push
or
add
and
ljmp
imul
pop
js
cli
mov
mov
sbb
cmp
mov
inc
xchg
push
sub
out
sahf
test
and
addr16
in
push
jo
lock
decb
das
les
lods
leave
pop
cld
ret
add
aad
inc
mov
enter
std
jl
pushf
insb
or
push
mov
sbb
cmp
pop
push
mov
jns
fmul
hlt
mov
mov
mov
aad
out
dec
cmp
mov
mov
dec
pop
dec
mov
xorl
lock
mov
ss
mov
aam
test
or
cltd
cmc
adc
cltd
pop
out
mov
movsl
sub
xlat
inc
xchg
mov
dec
or
push
dec
jle
mov
icebp
int3
mov
mov
sbb
iret
add
jecxz
dec
mov
push
lret
scas
sub
fsubrs
jecxz
clc
xlat
adc
inc
inc
cmp
cmc
cld
ret
mov
lahf
js
loopne
jle
popf
xor
sbb
mov
xchg
xor
pop
outsl
roll
fnstcw
and
subb
inc
scas
push
je
sub
popa
cwtl
add
mov
cmc
loop
icebp
dec
xor
push
push
and
sahf
jno
in
or
xchg
gs
loope
push
add
sbb
add
xor
add
repnz
push
sbb
fs
loopne
andb
int3
sbb
sub
mov
hlt
test
jns
or
ret
lahf
sti
sbb
sub
mov
mov
push
cmp
loope
es
xlat
xchg
jo
or
sahf
xlat
cmp
sahf
stos
stc
pop
pop
ds
lret
sbb
lret
loopne,pn
rcl
fdivr
adc
xchg
daa
imul
mov
jo
push
dec
jp
aas
mov
jb
xor
mov
loope
xor
stos
jecxz
inc
das
aas
scas
pop
je
test
jne
cmpsb
mov
dec
ss
ret
and
imul
sbb
xchg
fs
mov
out
call
leave
call
mov
mov
fisttpl
mov
loopne
les
shrl
fs
mov
loope
push
dec
dec
xchg
and
cmp
add
out
test
xor
add
decb
adc
pop
aam
aas
mov
into
pop
adc
xchg
adc
or
ljmp
cmc
testb
clc
inc
loopne
dec
and
jne
das
cmp
jo
dec
mov
inc
in
mov
adc
push
dec
jmp
int
in
xor
inc
pushf
enter
push
movsb
sub
fimull
cmp
clc
cmp
js
adcb
bound
mov
add
jecxz
lea
shr
cmpsl
lret
cli
and
dec
lds
lock
mov
jmp
in
xchg
adc
push
cli
mov
cmp
add
insl
jnp
fsubp
sub
inc
mov
dec
push
cmp
sub
fisttps
push
cmp
dec
mov
push
rolb
sti
sahf
int3
popw
xchg
mov
inc
inc
imul
push
xchg
lods
dec
mov
das
inc
mov
add
lcall
jge
lods
and
push
add
lods
mov
push
mov
mov
loopne
in
outsb
scas
data16
cmp
cmpsb
mov
mov
fbld
mov
jp
sub
lds
dec
lods
daa
movsb
lcall
out
mov
test
das
jle
ds
jb
leave
sub
push
mov
fwait
ret
idivl
sbbb
cmp
loopne
xchg
jl
pushf
adc
jl
cld
and
mov
wrmsr
cld
aad
ds
xchg
fdivl
push
sub
add
and
loopne
jl
int3
call
mov
sub
out
or
call
outsb
lea
mov
repnz
iret
xchg
pushl
sahf
js
gs
push
loope
push
sbb
cs
mov
call
xchg
mov
cmpsb
scas
sbb
lods
popf
ffreep
cmpsb
insl
add
insl
ret
mov
push
mov
push
int3
xor
cli
inc
dec
and
mov
rolb
or
iret
mov
push
dec
mov
mov
xchg
pop
pushf
in
sub
mov
jne
pop
test
loop
pop
jb
pop
sbb
jns
mov
adc
pop
cli
call
or
mov
sub
push
in
imul
sbb
lahf
das
sbbl
sti
or
jp
inc
dec
push
test
jnp
ret
push
xor
or
cld
and
adc
shl
mov
xor
cld
sahf
pop
pop
mov
dec
sar
inc
jmp
ret
pop
push
shll
or
mov
inc
lds
dec
xor
pop
loopne
sbb
movsb
push
pusha
es
cmpsb
stos
rolb
stc
pop
ret
rorb
xlat
xchg
repnz
cmp
and
dec
or
pusha
and
lret
mov
mov
fsubl
repnz
and
scas
jb
call
push
fcomp
adc
jecxz
out
mov
jmp
stos
rclb
jb
rolb
push
fmul
lret
pop
test
imul
das
sbb
lods
xor
into
inc
shrb
sbb
js
jbe
jnp
and
push
fnsetpm(287
or
inc
adc
or
or
mov
popl
add
push
into
out
sub
call
add
mov
stos
and
cmp
cld
xor
adc
movsl
jns
lcall
int3
rcrl
mov
imulb
loopne
dec
movsb
pop
lret
pop
pop
cs
sub
push
outsb
test
xchg
in
cli
xor
push
xchg
sahf
into
faddp
push
rcr
xchg
addb
fidivs
or
add
push
add
mov
fwait
jmp
gs
and
and
sahf
xor
push
pop
ficomps
adc
cmpsl
mov
je
or
or
flds
es
test
ficoms
jae
jmp
sbb
lcall
xchg
out
popa
jge
pop
gs
dec
mov
mov
lcall
cmp
andl
test
lahf
subb
fistpll
push
ret
jmp
mov
dec
scas
fwait
cmp
aad
scas
mov
icebp
rorl
cmp
jo
sahf
add
mov
out
pop
fildl
lcall
jae
jmp
and
push
dec
or
rorb
mov
sub
in
xchg
push
sbb
mov
lods
in
cmp
sub
adc
stos
push
inc
adc
sub
and
ret
sub
loop
fs
imul
nop
stos
xchg
insl
sbb
mov
mov
call
dec
fdivs
rdpmc
dec
in
imul
xchg
shrl
arpl
sub
dec
mov
lret
lds
test
ja
jmp
iret
int3
adc
and
and
out
movsb
mov
jbe
inc
test
leave
push
lret
lcall
addl
inc
lret
sbb
shll
xor
call
pop
mov
push
push
insl
les
orb
dec
and
sbb
jb
sub
mov
aas
pop
pop
add
fisubrs
into
lcall
pop
lea
sub
gs
xor
dec
xchg
adc
mov
jl
lock
sarb
iret
fiaddl
aad
sbb
jge
pop
mov
sbb
das
pop
clc
dec
nop
std
mov
sub
mov
sbb
mov
movsl
xor
addb
mov
pop
sbb
aaa
das
arpl
fidivrl
cmp
mov
fisubrl
insb
adc
cmp
es
adc
push
test
adc
jle
xor
data16
mov
jp
cli
pop
pop
cwtl
enter
push
data16
jnp
scas
ds
and
imull
scas
ss
push
outsl
scas
lods
lret
and
jno
in
sub
mov
ds
lahf
or
jae
and
imul
add
or
pop
push
xor
inc
loopne
iret
cmp
ds
and
ficomps
and
fistpll
rcrl
loope
fcoml
fsubrl
push
cmp
outsl
repnz
call
bound
jp
ret
inc
mov
jno
push
dec
mov
pusha
js
std
xor
sbb
sub
das
mov
cmpsb
pop
mov
fsub
pop
aad
int
xchg
jne
daa
aas
dec
and
add
icebp
dec
lret
rcrl
adc
icebp
inc
ret
addl
imul
sbb
ljmp
test
and
dec
fwait
rcr
bound
dec
gs
pop
adc
adc
shrb
and
ds
setae
ficompl
ljmp
push
push
push
lahf
dec
jnp
rolb
jmp
test
fiadds
mov
xchg
in
dec
cmpsb
out
sarb
test
inc
pop
push
xor
add
mov
fmuls
fnsave
mov
pop
add
push
icebp
pop
mov
add
mov
push
int3
cmp
jl
cwtl
jns
xchg
je
jmp
sub
jb
jge
xchg
jle
lods
popf
cld
test
aad
inc
xor
dec
cmp
loopne
sub
cwtl
std
add
cmp
cmpl
fdivs
lea
lret
movsb
push
out
in
and
ja
dec
scas
les
iret
xor
mov
sbb
jns
int
dec
jge
pop
push
mov
and
push
xchg
mov
and
adc
mov
push
lods
xor
push
pop
movsb
wrmsr
lods
pop
sbb
stos
inc
out
fildl
mov
ljmp
and
adc
mov
loopne
sbb
pop
fdivl
push
lea
test
jnp
sbb
scas
pop
push
cmp
sbb
arpl
mov
xor
pop
rorb
in
sahf
stc
jb
mov
lcall
xchg
lret
pop
pop
addb
cmp
fs
into
push
test
push
fdivrl
inc
mov
aad
cmp
add
js
hlt
add
xchg
cmp
mov
add
sbb
mov
sbb
in
or
leave
out
add
push
sbb
add
fsubs
insl
fadds
push
sub
xor
jg
jae
lods
sbb
testb
mov
ljmp
call
sbb
fdiv
mov
aas
pop
jnp
xchg
cli
mov
pop
lods
sub
mov
arpl
mov
cwtl
push
push
and
in
out
cwtl
sbbl
xchg
cmp
xor
add
nop
jnp
fdivs
mov
roll
sub
mov
movsb
xchg
aam
dec
fstl
and
repz
inc
push
rorl
fcompp
rorb
bnd
int
jg
test
jmp
jle
pop
movsl
into
daa
neg
lods
shll
pusha
xchg
push
mov
sarl
mov
out
sti
or
xor
cmpsl
jae
xorl
xchg
shll
jne
sbb
pusha
aaa
xor
loope
imul
imul
sbb
mov
mov
xor
lods
dec
jg
sahf
mov
xor
and
mov
inc
test
lods
cmp
test
jmp
or
jns
clc
pop
aam
in
lcall
cs
or
and
hlt
and
mov
inc
mov
sub
insl
movsb
add
pop
in
jbe
rcll
ficoms
sub
ljmp
cmpb
cwtl
ret
cli
insb
inc
and
mov
das
filds
mov
imul
mov
mov
pop
mov
clc
test
mov
test
ss
fldt
pop
ret
scas
loopne
or
test
fimuls
jbe
test
repz
lahf
add
lock
adc
out
sub
adc
popf
sub
mov
mov
out
inc
add
xor
mov
xchg
rcr
push
jo
icebp
test
push
or
in
out
pop
out
adc
ljmp
out
cmp
xchg
xor
dec
adc
lret
jb
cmp
adcb
sti
cmp
sbb
jno
mov
loopne
add
nop
xchg
push
push
push
sbb
fiaddl
push
jp
pop
jno
addl
or
xchg
fsubrl
rorl
mov
sbb
pop
mov
and
jne
cli
dec
xor
add
scas
and
sbb
cld
mov
ret
dec
insl
repnz
cld
subl
fsubrs
sti
loop
jb
ljmp
xor
lods
rcrb
sbb
mov
inc
push
lcall
xor
aad
imul
test
push
or
xchg
sahf
and
lods
push
shr
cmpl
std
mov
daa
cmp
rcrb
lods
push
stc
pushf
test
in
lock
pop
adc
mov
lods
mov
out
mov
and
push
mov
adc
cmp
inc
mov
clc
adc
push
repz
fdivrs
sbb
push
dec
jmp
add
push
or
mov
xchg
test
inc
movb
cmp
mov
add
rorb
xor
das
pop
rclb
fdivp
xor
daa
out
adc
mov
pop
xor
lret
dec
inc
pop
pop
adc
push
add
pop
sbb
mov
into
adc
insb
jnp
lret
fimull
pop
dec
test
or
mov
or
test
add
call
dec
mov
ja
cmp
adc
movsb
test
add
mov
gs
cwtl
arpl
xchg
loopne
and
movsb
psllq
stos
xor
test
and
push
std
adc
mov
add
rclb
imul
aaa
mov
mov
push
add
mov
dec
sahf
gs
aad
sub
xchg
lahf
cmp
lea
pop
push
sbbl
add
rorb
xchg
sahf
ret
mov
roll
mov
negb
cmp
stc
push
jne
enter
jnp
jg
fcmovnbe
push
fwait
mov
or
push
daa
outsb
sti
jo
into
adc
sbb
pop
in
sub
clc
fsts
mov
mov
cld
in
shll
mov
or
test
xchg
or
or
dec
out
jnp
xchg
xor
leave
jl
int
popf
and
es
add
int3
sub
imul
imul
aad
insb
mov
cmp
mov
mov
cwtl
stos
imul
movsl
pop
clc
lret
mov
and
sub
mov
out
cld
fdivl
stc
jo
pop
sahf
and
sub
push
jno
sahf
mov
dec
cs
cltd
xlat
cmp
xor
sub
iret
sti
xor
arpl
sbb
repnz
loope
stos
inc
push
sahf
cmp
test
ds
jp
push
push
inc
jge
push
inc
sub
sbb
ret
dec
and
cltd
movsb
aas
inc
fst
jae
jge
cltd
pop
fmull
or
xor
fwait
addr16
or
xorb
push
jg
mov
push
inc
cwtl
dec
into
shl
icebp
pop
subl
iret
sub
fldt
dec
nop
in
mov
jecxz
xor
cmp
cmp
mov
dec
loope
xchg
xor
cmp
adc
push
imul
inc
mov
push
out
imul
cltd
mov
xchg
rorl
leave
cmpsl
mov
mov
pop
sti
sbb
ljmp
imull
and
call
psrlq
insb
addb
mov
cli
inc
sahf
sub
cmpl
ljmp
das
jecxz
das
mov
cmpsb
push
in
xchg
test
cmp
and
ret
dec
dec
popa
outsl
xchg
inc
icebp
dec
mov
jg
loop
push
xor
cltd
adc
aad
pop
jae
imul
loop
xlat
mov
and
push
std
dec
sbb
fbstp
mov
sub
ficompl
push
shlb
fwait
adc
pop
call
lahf
mov
mov
or
loopne
and
jmp
and
test
loop
repz
dec
xor
mov
inc
insb
shr
insb
jns
cltd
cs
popf
mov
movsl
in
sub
mov
add
shll
mov
adc
loope
aad
fwait
or
mov
sbb
xor
jge
ja
push
push
cmp
mov
lahf
xchg
les
mov
movsb
addr16
cmp
xor
inc
mov
cltd
inc
inc
in
or
loop
adc
pop
adc
mov
or
int3
out
adc
iret
mov
pop
adc
fisubs
call
push
push
and
cmp
ds
inc
cmpb
cmc
lcall
pop
test
loop
push
mov
inc
mov
pop
add
xor
popa
jp
adc
lcall
pop
push
dec
add
xchg
fdivs
shlb
daa
fcmove
mov
pushf
ljmp
push
popf
cmp
stc
call
cmp
mov
std
sbb
sbb
aaa
and
xchg
leave
mov
adc
xchg
sub
mov
in
inc
shlb
xchg
ret
dec
push
add
jns
xor
addl
mov
mov
std
loopne
enter
stos
mov
sbb
ds
add
cltd
aad
lods
rcrl
cmpsb
std
shrb
mov
cmp
xchg
repz
mov
xchg
adc
and
enter
lret
repnz
lret
lahf
push
add
pop
rcrl
clc
repnz
fcompl
mov
mov
pop
int
outsl
mov
andb
fadds
stos
decb
stos
scas
test
mov
push
pop
mov
cwtl
lods
mov
inc
repz
xchg
imul
inc
test
clc
arpl
lea
or
dec
xlat
sbb
mov
cwtl
pop
and
enter
jmp
lahf
icebp
inc
pop
bound
pop
jg
push
dec
inc
add
mov
and
outsl
jno
push
int
jmp
sub
stos
pop
inc
pmuludq
adc
aaa
xor
test
jge
jp
sahf
xchg
cmp
es
rorl
in
or
pushf
dec
shlb
mov
jb
clc
shlb
xor
dec
fimuls
cmp
add
pop
mov
cmpl
ja
aaa
jne
xor
in
xchg
addl
sbb
pushf
cli
mov
and
in
call
jbe
and
sbb
sbb
arpl
subb
push
or
sub
popa
cmpb
mov
and
clc
lods
pop
sti
adc
popl
loope
lods
in
xchg
inc
frstor
es
cmp
jl
adc
movsl
shr
push
into
bound
sub
mov
mov
test
adc
ficompl
lret
jb
mov
test
ss
arpl
cmp
and
rorl
call
jno
add
fs
das
push
stc
mov
push
add
shl
push
cmp
mov
ss
inc
into
pop
jl
push
insl
mov
popa
mov
push
inc
mov
std
cmp
mov
mov
imul
out
push
mov
pop
push
or
add
divb
xor
dec
out
mov
mov
adc
mov
dec
neg
test
sub
xchg
sti
mov
arpl
mov
push
adc
insl
mov
adc
mov
in
pop
loop
ret
icebp
mov
clc
cmpsb
pop
test
pop
loopne
and
xchg
and
lods
dec
sbb
push
jl
out
and
std
into
sbb
out
cmp
je
cmp
mov
or
dec
js
fsubs
push
jbe
cmpsl
inc
mov
and
sbb
add
xor
cmp
in
in
hlt
lret
das
enter
scas
mov
dec
mov
mov
adc
andl
push
jecxz
and
inc
mov
fs
outsb
imul
enter
loopne
cmp
push
or
leave
int3
iret
rcll
push
aad
mov
and
mov
jle
das
arpl
dec
outsl
ja
mov
test
les
icebp
arpl
fildll
mov
fisttpl
sahf
ja
mov
clc
iret
jle
les
mov
loope
xchg
fsts
push
cs
loop
jmp
daa
inc
push
adc
pop
testl
aam
xchg
dec
lea
cmpsl
push
add
mov
filds
fninit
xor
scas
ffree
xor
jl
push
out
sbb
jg
jg
xor
aam
fdivrs
test
push
inc
xor
mov
inc
mov
xchg
iret
xchg
push
jbe
pop
loope
cmp
shrb
fdivr
adcb
cmp
movsb
adc
sub
pop
in
loop
jmp
mov
lret
call
xlat
cmp
in
les
andl
mov
pop
mov
mov
pop
push
adc
aas
js
shll
loopne
jecxz
aas
xchg
lret
jnp
ret
lcall
mov
cmc
mov
xlat
xor
inc
aad
filds
sar
cmp
pusha
loope
hlt
push
mov
dec
ljmp
xor
bound
pop
loopne
mov
cmp
or
or
in
iret
andl
or
js
stos
pop
push
cmpsb
outsb
lods
sub
ja
xchg
imul
sub
insl
sarl
sti
fcmovne
int
or
push
inc
movsl
dec
pusha
ljmp
stos
out
mov
pop
push
shlb
test
cltd
cmp
or
mov
xchg
sbb
out
loopne
sbb
push
or
fisttps
cwtl
out
scas
add
in
lock
push
push
jb
les
jp
test
pop
fwait
cmp
rorl
ret
out
lcall
ds
ret
jns
xor
lcall
mov
gs
lea
xchg
jnp
pop
into
cwtl
jb
lahf
lret
mov
adc
imul
inc
lret
or
push
das
mov
int3
xor
dec
push
inc
out
mov
or
cmpsb
cwtl
stos
pop
mov
pop
nop
push
or
mov
sbb
xchg
sbbb
sahf
aad
testb
lret
call
jg
inc
sti
xor
mov
js
add
mov
imul
xor
inc
movsl
fst
add
sbb
or
inc
iret
dec
push
dec
incl
in
stos
jecxz
dec
ss
scas
lea
mov
jecxz
dec
pusha
aaa
adc
mov
arpl
or
les
lods
ficompl
icebp
jp
mov
ret
pop
mov
out
push
push
out
lds
stc
push
loopne
jecxz
add
call
fptan
xor
pusha
cmp
iret
inc
xor
sub
jns
daa
das
sbb
push
nop
xlat
invd
mov
jb
push
lea
adc
push
js
pop
bndldx
insl
cltd
out
movsb
lret
loope
jae
sarb
jge
hlt
pop
mov
into
mov
adc
leave
xlat
aaa
scas
mov
jae
dec
add
and
cmp
in
push
xchg
cli
repz
sarl
mov
hlt
mov
push
icebp
ror
lret
movsl
dec
cmpsb
dec
fsubr
fdivrs
push
xchg
xor
es
inc
mov
aam
pop
in
cmc
lods
push
dec
nop
aas
inc
loopne
inc
mov
mov
cld
icebp
and
ss
rolb
mov
dec
pusha
in
mov
cs
leave
orl
insb
out
mov
pusha
std
lods
pop
push
test
push
xchg
mov
sub
sbb
lods
jnp
xchg
in
addr16
mov
test
ss
in
and
lahf
inc
sub
das
cmp
rclb
pop
jp
xor
outsb
cmp
pop
addr16
xor
in
outsl
jge
aad
push
mov
push
push
mov
mov
xor
rcrl
repz
add
notb
andl
add
sahf
mov
xor
xor
cmp
pop
sbb
mov
sbb
sarb
mov
jnp
pushf
dec
loop
clc
or
in
int3
lret
cmp
shrb
dec
push
dec
cmpsl
rclb
xchg
mov
mov
outsb
aam
xor
push
ret
mov
ret
rol
andl
iret
popf
sub
or
push
icebp
in
scas
lahf
mov
iret
fs
pushf
mov
aad
insb
push
fcmovnbe
inc
mov
test
shrb
das
lock
dec
push
jmp
mov
xor
bound
pop
ret
nop
and
cld
mov
sbb
xor
test
shl
sbb
cli
orl
out
or
fidivrs
push
push
fucomp
lret
sarb
lods
xlat
fcomps
mov
sbb
push
data16
sti
mov
das
mov
cmp
lds
fcompl
inc
jno
xchg
das
adc
ljmp
and
push
sub
outsl
push
adc
nop
add
mov
test
xchg
inc
imull
popf
pop
das
fdivl
repnz
stos
xchg
movsb
inc
jge
shll
xor
adc
scas
hlt
lds
sbb
dec
dec
fidivrs
jl
xorb
fwait
nop
mov
cmpsl
sub
xor
fwait
xchg
mov
pop
push
sub
nop
adc
jae
push
icebp
cmp
or
mov
pop
xchg
ds
daa
pop
mov
rcl
adc
mov
pop
dec
scas
repnz
mov
xor
xor
sub
or
push
adc
cmpsl
dec
mov
add
dec
pop
scas
sub
jmp
dec
add
xor
fs
in
pop
mov
test
sbb
inc
or
xchg
xlat
repz
nop
clc
lret
jmp
jmp
adc
mov
adc
mov
adc
aaa
jp
mov
push
jle
jge
mov
test
dec
je
pop
sbb
cmpb
mov
or
mov
jns
xor
adc
pop
jne
imul
mov
stos
ret
fsubrl
xchg
loope
mov
std
xchg
inc
mov
jmp
mov
mov
cli
pop
aas
into
js
and
cltd
cltd
xchg
pop
xor
out
push
add
mov
ror
and
leave
push
call
push
dec
sbb
out
in
push
jb
loopne
fwait
inc
mov
cmp
lock
shrl
stc
std
adc
adc
in
sbb
pop
movsb
jg
les
loope
mov
cmp
mov
or
ficoml
mov
sbb
cwtl
pop
pop
and
inc
bound
pop
je
adc
leave
clc
ds
shrb
aad
mov
or
xor
push
imul
jmp
dec
inc
sahf
mov
fcoml
mov
mul
jecxz
push
push
mov
jge
notl
push
gs
jge
lods
cmp
or
orl
cwtl
insl
je,pt
pop
mov
sub
jo
pop
pushf
mov
dec
push
push
or
div
mov
cmp
lock
mov
sub
shlb
adc
mov
inc
push
fdivs
daa
sbb
and
rcr
movsl
roll
mov
shr
nop
sbb
or
ljmp
inc
cld
xchg
jle
int
loopne
sbb
out
xchg
hlt
or
popf
push
mov
dec
fdivr
andl
dec
inc
xchg
dec
popl
pop
mov
mov
scas
shl
pop
sub
adc
insb
ret
pop
movsb
pop
das
and
lea
pushf
cmp
pushl
testb
loop
pop
adc
jnp
sti
push
cs
mov
aas
add
in
stos
sti
fimuls
xor
loope
int
push
push
sub
and
pusha
add
sbb
add
mul
adc
or
sahf
cld
add
dec
push
sbb
sub
scas
stos
pop
in
add
outsb
fbstp
push
and
daa
xchg
mov
addr16
add
mov
stos
push
es
dec
inc
pop
aam
dec
push
nop
add
inc
mov
cmp
dec
stc
adc
jo
fisttpll
jne
push
test
cmp
xchg
cmpsl
inc
movsl
jle
jbe
andl
cmp
dec
test
sub
repnz
std
movsl
lea
adc
mov
mov
mov
popl
dec
xor
mov
fisubrl
stos
xchg
test
sub
dec
movsl
inc
mov
or
adc
cltd
stos
lock
lret
arpl
stos
loop
add
xchg
paddw
and
mov
lock
insl
push
aaa
dec
inc
lds
leave
pop
js
int
lock
loop
js
mov
push
insb
pop
lds
ret
xchg
fldl
jle
ror
leave
test
outsb
jmp
cmp
xor
cmova
test
lcall
cs
mov
sbb
cmc
or
int
pushl
pop
and
jb
jae
inc
std
lods
data16
roll
jo
mov
mov
xchg
cmp
push
jl
and
pop
push
lods
push
push
sahf
leave
jge
iret
mov
sbb
cmp
jg
adc
ljmp
mov
nop
jle
cmc
pop
pop
mov
cmp
test
sbb
fbstp
out
ror
jp
add
cmpsb
idivb
mov
mov
or
cmpsl
outsl
popf
gs
ljmp
into
lahf
mov
sbb
sbb
jbe
pop
fiaddl
std
add
fs
mov
mov
cld
or
mov
fwait
aam
mov
ja
xlat
iret
cmpsb
jns
in
ret
push
xchg
daa
cld
mov
sbb
repz
or
div
xchg
pop
cwtl
dec
aaa
add
adc
inc
mov
sarl
mov
and
and
adc
daa
dec
imul
sbb
mov
rcrl
jp
ret
or
sbb
aam
sub
xlat
cmpl
jle
add
dec
out
lret
mov
int3
push
pusha
push
push
pusha
mov
std
push
sub
decb
pop
scas
imul
push
pop
jnp
in
rcrb
repnz
inc
mov
imul
into
dec
dec
and
out
insl
push
or
mov
pop
or
mov
jmp
iret
xchg
xchg
dec
iret
and
lds
insl
push
mov
xchg
cmp
adc
jno
push
mov
add
fucomip
xchg
cmpsb
lock
mov
inc
fsubl
pop
jo
jb
lds
xchg
and
iret
aad
dec
mov
lds
lods
outsl
push
test
cmc
iret
xlat
jo
aam
rorl
das
mov
mov
xor
mov
dec
sub
cmpsb
pop
addr16
fsubr
cltd
shrb
test
sbb
xor
sbb
testb
dec
mov
jno
or
lods
imul
jne
jl
lahf
lcall
jnp
and
push
jns
jg
imul
xchg
sbb
stos
out
dec
mov
stos
jno
mov
and
jns
mov
xchg
out
test
out
mov
adc
jg
pop
or
mov
pop
orb
loop
cmp
andb
imul
jmp
mov
sahf
xor
les
fwait
cmp
sub
out
push
pop
push
mov
sub
and
jp
jl
scas
jge
pusha
cli
fcomps
mov
sbb
loopne
pop
shlb
pop
fs
mov
jae
repz
pop
xor
test
sub
xor
mov
jg
je
jb
js
mov
sub
dec
mov
jne
push
inc
in
sbb
stos
stos
add
lea
pusha
lock
pop
xor
nop
add
mov
cmp
sub
sar
mov
jp
mov
sbb
push
and
aaa
js
bound
fwait
add
or
lock
mov
mov
call
xor
cmpsl
sub
cld
add
test
and
stos
mov
pop
mov
dec
mov
xlat
xor
xor
imul
adc
decb
vcvtsi2sdl
dec
sbb
stos
xchg
pop
xchg
cmc
xchg
insl
das
cld
pop
cmp
cmpsl
add
je
cmp
xor
imul
pop
data16
mov
add
inc
shrl
dec
sarb
pop
mov
mov
jle
outsb
ja
sbb
inc
loope
sbb
std
mov
dec
shrl
or
xor
lret
rorb
cmp
imul
xchg
andl
sbb
insl
mov
mov
inc
jns
lods
fwait
ja
jmp
dec
xor
cwtl
test
mov
gs
mov
lock
mov
mov
sub
jle
ja
adc
ret
sbb
push
es
sub
or
and
or
stc
or
int3
out
cmp
add
sbb
cmp
or
pop
in
pop
cmpsb
jnp
mov
or
cmp
ss
ss
sbb
sbb
mov
and
adc
test
loop
mull
and
mov
sbb
pushf
pop
out
in
out
popa
inc
jo
clc
loope
add
into
mov
cld
lds
cmpsl
lret
dec
push
mov
cwtl
mov
pop
enter
cli
out
pop
test
in
repz
add
rcll
pop
jnp
ja
or
xorl
mull
mov
xor
and
les
pop
lret
mov
add
push
jp
arpl
cmp
mov
pop
adc
jmp
mov
inc
jge
inc
loope
lods
sub
test
in
lods
add
dec
ja
lahf
jmp
scas
pusha
xchg
ds
xchg
movsb
jno
sbb
mov
mov
dec
and
sbbb
loop
cmp
and
mov
or
nop
dec
cld
sbbl
sti
inc
sub
add
jnp
add
idiv
sbb
testl
insl
jl
roll
movsl
cmp
mov
icebp
pop
pop
dec
addr16
outsb
loopne
outsb
or
push
int
sarb
testl
insb
shlb
insl
mov
sub
jp
in
jne
jb
mov
pop
jns
dec
mov
xchg
jl
or
pop
push
mov
fsubrl
sub
aaa
xor
mov
clc
sbb
xchg
cmp
andb
fwait
popf
loope
add
je
cmp
out
icebp
cmpsl
test
and
lods
or
mov
pop
sub
dec
xor
add
lahf
and
xchg
lahf
add
lahf
cli
fwait
dec
out
sbb
addr16
jno
xchg
mov
stos
and
std
adc
inc
and
and
dec
pop
cmp
pop
mov
lock
xchg
arpl
push
inc
add
mov
xchg
stc
dec
pusha
addb
int3
ss
dec
lcall
ljmp
or
xchg
sub
pop
mov
addb
pop
loope
adc
inc
sub
jmp
mov
add
jl
sub
mov
mov
lcall
xor
loop
dec
dec
faddp
loope
and
cmp
fdivp
adc
and
std
xor
xor
jnp
pop
fbstp
stos
cmpsl
push
pop
cmp
xchg
arpl
stos
aam
pop
int3
rcll
mov
idiv
bound
sbb
jp
fildl
addr16
cmpsl
dec
daa
push
bound
cld
lods
push
mov
xchg
lahf
fiaddl
and
gs
popa
xchg
add
bound
repnz
popf
or
sbb
pop
push
test
scas
pop
aam
sub
outsl
std
mov
xor
pop
sub
int
jno
aaa
adcl
mov
inc
xchg
mov
sar
sub
sub
out
jp
cmp
mov
cmc
mov
imul
mov
mov
rolb
ret
push
xchg
cmpsb
push
stos
fidivl
push
cmp
insl
fsubl
dec
dec
mov
sti
or
jno
xchg
mov
cmp
mov
jns
popf
push
jp
leave
andl
xchg
lock
dec
shll
test
rorl
inc
mov
sbb
insb
popa
mov
shll
push
lock
xchg
out
call
sbb
ljmp
add
je
add
pop
cwtl
in
cmp
movsl
bnd
rclb
mov
mov
cmp
xchg
jne
jl
dec
add
sbbl
dec
stc
test
inc
insl
call
testb
jno
lret
jmp
pop
call
loope
pop
xchg
push
fstps
mov
inc
aam
mov
ljmp
add
fstl
pop
rclb
lret
xchg
xor
fisubs
into
mov
push
push
add
pop
pop
int
mov
jne
or
jge
cmp
lret
shlb
sbb
hlt
and
sarb
nop
cld
add
xor
fldl
clc
pop
add
mov
cmpsl
faddl
xor
imul
popa
pop
xchg
mov
int
mov
test
lock
cmp
pop
mov
xor
and
pop
sbb
lods
pop
call
faddl
or
jle
cmpsl
mov
imul
movsb
jge
sub
push
push
cmpsl
mov
ret
and
jg
cmpsb
cmp
inc
cmp
out
les
sti
jno
cmpsb
lret
mov
xor
sbb
pop
fwait
inc
pop
ror
cs
scas
test
imul
hlt
mov
dec
pop
push
dec
daa
ja
loopnew
mov
lret
jb
imul
mov
adc
outsb
mov
sbb
aad
xor
loopne
dec
adc
mov
or
mov
imul
out
mov
add
imul
jae
movsl
loopne
push
imul
mov
push
inc
inc
jg
scas
pop
cli
orl
sub
sub
addr16
xchg
inc
xchg
mov
pop
lock
ret
ret
test
sub
push
cmp
in
push
jmp
ds
xchg
jnp
testl
mov
inc
or
mov
push
pop
mov
les
ss
addr16
mov
out
push
adc
pop
xor
mov
je
outsb
sbb
jl
add
aaa
mov
jge
std
or
jb
adc
inc
xchg
sti
es
jge
mov
jne
inc
cmp
or
test
xor
pusha
dec
push
xchg
je
das
push
fisubrs
data16
cwtl
les
push
xchg
stos
fisttpl
jnp
shll
js
ds
or
dec
test
pop
lods
push
mov
lea
imul
cmpl
aad
cmp
cmp
xor
pop
push
jns
mov
divb
loop
jne
jg
sub
xchg
ficompl
dec
iret
fnstenv
pop
fs
stos
inc
xorb
push
vpsrad
subb
rcr
lods
inc
mov
dec
into
xchg
cmpsb
xchg
in
mov
mov
ret
shlb
and
push
insb
call
jg
pop
out
dec
fisubs
je
push
sub
mov
scas
mov
cmp
xor
test
movsl
int3
insl
es
enter
sarl
leave
pop
and
push
add
subl
into
outsb
mov
or
pop
cmp
imul
push
icebp
add
jl
jne
lds
shlb
hlt
stos
insb
jge
or
sub
mov
fistl
ficoms
movsl
fwait
aas
inc
icebp
xlat
add
mov
xchg
addl
insl
push
cmpsb
jbe
lds
push
movntq
int3
push
lods
mov
dec
out
xchg
xchg
ja
std
xor
dec
iret
ljmp
push
loope
sbb
sbb
mov
das
loopne
pop
gs
dec
fadd
adc
test
pop
xor
pop
xchg
mov
mov
outsl
pop
test
aam
testb
or
push
mov
sti
xor
jo
sbb
jmp
dec
scas
xchg
sbb
sbb
cmc
in
fnstsw
clc
cmp
sub
stos
ja
idivb
mov
and
fadds
mov
rcl
popf
push
mov
rorl
dec
jo
and
push
jbe
es
mov
sub
pop
lock
into
adc
mov
sub
mov
fildl
lret
mov
test
lahf
shrl
addr16
mov
xchg
ret
in
int
cs
xor
mov
xchg
in
or
inc
sbb
fs
sub
jns
insb
push
push
cmp
lods
push
cmpsl
call
icebp
cmpsb
fcoml
repz
pushf
jbe
call
lock
loope
add
sub
lock
cli
inc
lea
mov
jg
clc
fadds
sti
xor
mov
add
dec
aaa
sub
icebp
repz
cs
mov
das
push
dec
stc
mov
popa
pop
pop
push
test
cmpsl
jmp
ljmp
hlt
out
dec
out
and
leave
sbb
in
push
mov
mov
and
ss
test
in
add
int
leave
ds
push
jnp
pop
lret
fs
add
inc
sahf
hlt
mov
js
sbb
test
aam
neg
call
cli
add
cmp
xchg
mov
ret
xchg
fwait
sub
ftst
int
dec
ja
sbb
cmp
cmp
xchg
adc
idivl
pop
gs
xor
mov
fcmovu
movsl
repz
xchg
jmp
mov
daa
mov
and
int3
xchg
inc
stos
mov
jp
push
pop
mov
cmc
mov
inc
aad
cmpsb
leave
xor
jne
push
movsl
sahf
or
sbb
mov
ret
jge
fildl
test
inc
mov
movsl
sub
out
ret
mov
pop
pop
or
les
add
jmp
xlat
lahf
in
out
ja
ret
insl
sub
push
mov
scas
push
sub
cld
pop
xlat
fsubrs
jge
pop
mov
dec
mov
fsubl
cmpsb
cs
clc
push
sbb
xchg
sti
or
loop
add
sbbl
dec
push
sub
and
adc
data16
scas
mov
mov
sub
sbb
sub
testb
xor
mov
push
push
pushf
nop
sub
dec
dec
int
pop
not
xlat
fmull
das
push
pop
xor
xchg
icebp
mulb
xchg
lahf
sarb
iret
sahf
outsb
nop
sub
lret
cmp
aad
pusha
rep
cli
add
lods
enter
flds
or
iret
in
call
push
jnp
mov
xchg
xlat
sahf
fcmovne
ror
in
push
cmp
nop
dec
js
sti
jmp
adc
cs
jae
sbb
dec
call
xchg
out
test
sbbb
jnp
xchg
cmp
ret
push
lock
mov
xor
pop
dec
sbb
imul
insl
ret
dec
sbb
mov
or
xchg
push
daa
jl
jmp
movsl
int
fstpl
or
mov
push
sbb
push
jmp
out
insl
insl
pop
test
lahf
jle
dec
hlt
sub
mov
xor
and
adc
icebp
in
cmpsl
push
adc
out
into
outsl
mov
pop
nop
push
je
jg
pop
jge
dec
pop
cld
xchg
in
mov
inc
push
mov
inc
int3
mov
xchg
mov
dec
mov
inc
jp
sbb
inc
mov
imul
lret
fmull
rclb
or
ret
out
cld
cmc
cmpsl
fcomi
cld
push
sbb
mov
push
rolb
rclb
adcb
out
test
movsb
cmp
shll
jne
mov
arpl
icebp
lret
cmovge
fldt
jnp
lcall
mov
xor
mov
nop
mov
add
jp
les
jge
xor
mov
mov
jl
rolb
nop
lcall
adc
jne
insl
xchg
pop
ja
enter
inc
out
lds
fisttpl
out
sub
sti
pop
add
or
push
dec
mov
in
sbb
adc
pop
scas
or
sub
cmpsb
out
adc
int3
aas
outsl
xchg
popf
dec
test
sahf
mov
das
push
icebp
lock
mov
pop
add
mov
push
cmc
push
jl
ret
jnp
mov
sub
push
loope
jbe
cs
cmp
out
sub
ret
movsb
pusha
fldl
mov
sub
out
in
lods
fwait
lret
test
cmp
add
cmpsl
push
lods
jne
scas
mov
mov
ss
and
sbb
mov
pushf
dec
sub
mov
mov
out
mov
mov
mov
rcl
adc
dec
nop
iret
pop
idivb
lcall
stos
mov
xor
xchg
cmpsb
stc
xor
test
push
int3
jno
add
fidivrs
xor
mov
mov
outsl
pop
subb
in
jp
lods
mov
into
xchg
xchg
push
cmp
push
std
pop
subl
mov
stos
in
dec
stc
int3
insl
xchg
in
nop
push
lods
sub
pop
pop
fmull
in
test
or
cmc
xlat
mov
insl
fisttps
mov
cmc
pop
adc
xchg
inc
jmp
icebp
cmp
and
jecxz
xchg
fcoms
mov
addr16
jecxz
js
mov
lret
add
mov
inc
popf
inc
sub
mov
pop
mov
inc
cmp
inc
inc
mov
jp
add
fldenv
test
aad
sbb
fcoms
pop
sbb
rcl
ss
mov
mov
mov
xor
cmp
push
js
loop
ret
cmp
xchg
cmp
xchg
test
gs
test
mov
out
rorb
inc
ljmp
xchg
xchg
push
gs
and
xor
lcall
dec
inc
dec
lahf
faddl
into
mov
aaa
into
adc
mov
les
popl
cmp
cmovo
in
mov
popf
sbb
bound
pop
inc
mov
pop
ja
rclb
ret
jnp
shlb
mov
push
pop
in
jp
sub
arpl
sub
es
mov
xor
sbb
add
dec
sub
inc
ret
jae
shl
lds
inc
dec
mov
jge
fdivrl
mov
push
lret
sbb
sbb
xlat
mov
loop
push
pop
add
nop
in
outsl
rorb
push
adc
sbb
jge
clc
xlat
sub
out
push
jns
out
cmp
inc
push
rcll
outsl
stc
cmpsl
ds
adc
gs
sub
roll
sbb
inc
sbb
lcall
test
adc
xor
scas
mov
dec
lods
pop
fnstsw
ss
xchg
fs
pop
push
add
dec
pop
xchg
mov
andl
fstpt
movsl
push
cld
test
xchg
cmp
or
stos
jecxz
imul
cs
lret
xor
add
movsl
je
rorl
mov
test
jmp
sub
sbb
pushf
inc
or
jecxz
pop
fldt
jmp
ret
sbb
ds
adc
adc
movsl
dec
jbe
mov
xor
xchg
jecxz
lret
test
stos
push
jno
jecxz
pop
je
arpl
mov
ljmp
fwait
fs
inc
aam
arpl
jmp
dec
mov
xor
sub
loop
mov
adc
xorb
xchg
sarl
mov
xchg
ds
ds
xor
dec
out
xchg
bswap
and
loopne
push
lock
ds
lcall
lods
xchg
fisttpll
adc
cmp
mov
int3
insl
jo
jg
lret
jnp
aad
pop
popa
dec
jno
sub
push
fstp
cmpsb
ret
pop
xlat
mov
clc
repnz
jmp
ffree
rcrl
xchg
sub
sub
fidivs
stc
in
sbb
xor
and
cmp
xchg
jg
push
sti
ret
dec
hlt
test
inc
ror
jle
cmp
enter
sarb
pop
scas
lcall
test
mov
push
adc
push
in
cmp
adc
or
cli
jg
jbe
add
mov
loopne
repz
sub
sahf
js
pop
pop
out
lods
push
add
pop
int3
lret
sub
shl
sub
and
ljmp
add
jmp
mov
iret
data16
xor
inc
mov
push
lcall
stos
xchg
mov
xchg
and
roll
outsl
notb
fwait
inc
xchg
out
cmp
sub
adc
push
ret
add
int3
xchg
fwait
mov
cmp
mov
or
arpl
add
dec
xlat
xor
adc
pop
addr16
xor
in
inc
addb
lea
leave
pop
xor
inc
add
cmp
and
dec
int3
jle
push
into
sti
dec
rcrb
out
pop
jae
lods
sbb
in
out
inc
je
cli
mov
gs
sbb
xor
push
imul
add
xchg
add
xor
add
pop
or
or
sbb
sbb
aaa
or
out
or
in
inc
mov
push
in
mov
out
pop
loop
dec
testb
sub
push
xor
fcmovne
adc
shr
fisubl
push
scas
push
popa
cwtl
xchg
push
aam
xchg
gs
jle
lds
mov
mov
or
data16
sbb
mov
mov
push
jmp
cli
push
sbb
push
out
out
add
dec
sbb
nop
outsb
jns
inc
fbstp
cmp
jno
adc
fdivs
jo
cli
add
cltd
call
mov
push
mov
jne
sub
pop
jle
dec
adc
jnp
inc
sub
jb
xor
dec
adc
test
lock
adc
cmp
cltd
push
lods
or
push
iret
pusha
push
xor
int3
xchg
inc
push
aaa
jg
xchg
and
pop
pop
loop
insl
aad
ljmp
int3
and
dec
pop
test
lret
ret
pop
jb
sti
cs
mov
cmpsl
fmull
aad
dec
pandn
dec
mov
inc
ja
mov
arpl
sub
jle
testl
xchg
ljmp
dec
shl
test
xchg
inc
repz
in
faddl
push
jno
xchg
jae
inc
bound
jge
outsb
push
mov
dec
mov
mov
or
cmp
jbe
lds
adc
push
add
shll
cmp
nop
rclb
xchg
test
adc
data16
and
ds
dec
cmpl
push
imul
jns
inc
dec
push
dec
jbe
testl
inc
jns
es
jl
ja
jns
jno
hlt
int3
cmpsl
jns
jmp
push
pop
cmp
outsb
imul
jae
pop
xchg
pop
filds
les
pminub
repnz
ja
aad
pop
dec
in
cmp
nop
arpl
jno
xchg
orl
mov
cmp
fdivl
test
and
popa
je
mov
shlb
push
aaa
hlt
fwait
push
sub
mov
cmpsb
clc
mov
or
mov
or
mov
add
add
xor
add
out
sbb
out
inc
scas
icebp
bound
pushf
int3
mov
int3
aas
adc
xor
out
out
outsb
xor
fs
pop
dec
iret
dec
pop
push
push
pop
xlat
xchg
cld
and
mov
js
adc
es
fiadds
cmc
insb
clc
dec
mov
xchg
outsb
insl
pop
pop
sbb
and
add
cmp
mov
ficompl
lret
jbe
push
pop
sahf
jae
pushf
jl
xorb
je
mov
out
push
pop
and
push
nop
xor
cwtl
inc
loopne
xlat
mov
mov
gs
jns
sbb
and
mov
cld
aaa
scas
ljmp
lret
cmp
fidivrl
adc
mov
pop
push
and
inc
push
insl
fcoms
cmp
lret
addr16
adc
or
sub
add
jne
dec
jae
xchg
scas
inc
into
or
sbb
ror
xchg
or
push
jl
sub
inc
mov
or
lea
popf
inc
cmp
mov
mov
stos
fdivl
dec
pop
jmp
mov
cmc
sbb
cmp
mov
aas
push
jne
dec
add
xchg
fs
movsb
out
and
addb
out
and
mov
push
clc
push
mov
xorb
fcoms
dec
aam
lahf
push
add
sbb
loop
mov
xchg
pop
or
mov
rcr
or
xorb
stos
lods
mov
push
or
or
sti
cmp
andl
xchg
aam
popl
cmp
pop
cmp
lcall
cltd
shl
inc
movd
jns
jnp
inc
adc
cmpsl
ror
pop
popfw
mov
mov
jnp
ret
adc
mov
dec
ret
scas
vrcpps
insl
push
rcr
das
adc
push
dec
stos
icebp
mov
pop
dec
xchg
lea
divl
test
lcall
xorl
scas
scas
push
loope
dec
loop
adc
fstl
not
push
ja
xor
in
pop
mov
rdmsr
mov
in
cmp
mov
push
push
mov
mov
jnp
cli
iret
cli
cmpsl
cli
cld
shll
js
es
cld
xor
adc
jae
inc
sti
js
cmp
push
jge
pushf
dec
xchg
ret
gs
push
fcoml
enter
jno
push
xchg
ret
mov
repz
lret
jecxz
jnp
stc
jbe
addb
call
push
rolb
je
icebp
in
jnp
jmp
xlat
je
inc
data16
pusha
pop
inc
adc
jmp
ret
mov
xchg
data16
inc
mov
daa
mov
in
addr16
arpl
roll
int3
fistpll
icebp
inc
imul
mov
mov
aam
pop
dec
clc
es
out
xchg
loopne
xchg
orb
push
lahf
xor
call
inc
or
in
jp
lret
fwait
ds
in
fs
rol
int
add
mov
pop
and
lret
push
mov
adcl
mov
outsb
fs
call
inc
push
test
outsl
sub
pop
movsl
gs
pop
test
push
test
push
testb
or
je
push
adc
loopne
mov
js
fwait
cmp
xchg
mov
or
xor
adc
movsl
in
clc
js
movsb
sar
add
lcall
xchg
imul
aas
repz
lahf
das
mov
loopne
push
in
dec
mov
out
pop
cmc
imul
add
inc
lds
idivb
ds
stos
push
imul
pop
lock
and
pop
and
js
es
mov
sub
jo
ds
pusha
pop
mov
test
inc
lock
mov
dec
lahf
iret
orb
bound
jmp
sbb
add
addr16
insb
iret
fcom
mov
xlat
aas
shll
sbb
cmpsb
mov
add
add
jp
mov
pop
inc
mov
and
mov
daa
cmp
sbb
jle
out
adc
cmp
jno
lcall
mov
cld
and
jp
or
lret
adc
or
rorb
sbb
scas
shrl
xchg
fisttpl
jne
and
mov
cmpsl
and
popa
aam
ficomps
pop
stos
fs
ds
es
inc
add
or
adc
push
jge
mov
adc
dec
sub
scas
out
mov
in
sub
int
imul
cs
sub
daa
mov
sub
or
xor
jns
and
pop
pop
sub
sti
insl
in
arpl
dec
in
xchg
popa
mov
xor
hlt
xchg
mov
inc
sbb
repnz
dec
inc
push
std
fwait
dec
fisttpl
sub
out
es
fimull
xchg
pop
ja
sbb
add
xchg
xchg
push
and
adc
in
xchg
mulb
in
pop
enter
inc
int3
jl
subb
sub
jge
or
sbb
clc
ret
or
jmp
dec
shll
dec
mov
fadds
adc
mov
jo
pop
daa
push
pusha
repnz
adc
pop
or
cmc
add
xor
fucomip
push
mov
xchg
dec
add
mov
rorb
pop
add
dec
rcl
mov
add
rorb
stos
iret
cwtl
mov
mov
cmp
mov
or
movsl
leave
fwait
dec
mov
shlb
inc
jg
pushf
xchg
inc
mov
push
out
popa
fidivs
xchg
sar
lods
enter
outsb
stc
ret
xor
ljmp
int
or
loop
movsb
aad
jbe
in
test
push
and
mov
push
into
aam
cmp
gs
sub
cmp
pop
pusha
sbb
lea
sub
mov
sbb
ret
lret
mov
or
dec
je
lods
cmp
imul
popl
jo
pop
jge
lcall
cmp
xor
cli
adc
lret
push
cmpsb
mov
push
loop
mov
xlat
inc
les
mov
jb
hlt
mov
imul
jo
add
out
lds
idiv
sub
inc
sbb
sbb
pop
enter
or
and
rclb
ret
repz
dec
sub
data16
lahf
sbb
insl
lret
sbb
jne
push
pop
or
in
mov
pop
sub
aaa
xchg
adc
mov
add
dec
cmpsb
int3
sbb
in
outsl
mov
jmp
xchg
or
scas
daa
out
hlt
scas
add
pop
xchg
xchg
cmpsb
xor
mov
dec
das
lds
shl
jmp
int
jo
adc
je
cmc
sbb
jge
test
out
sub
popa
out
fiadds
dec
mov
jnp
mov
aam
pop
jl
in
fldenv
jne
and
punpckldq
add
push
ds
andb
sbbb
xchg
mov
out
xchg
adc
mov
pusha
cmp
sub
adc
inc
push
sub
mov
add
bsr
sub
cmp
and
mov
push
or
fstpt
jg
out
fidivrs
xchg
xchg
cmpsb
incl
ds
mov
sbb
sarl
outsl
scas
cmp
dec
cs
sbb
dec
adc
push
xchg
adc
xchg
arpl
adc
pop
sub
enter
jg
imul
jle
mov
adc
pop
or
push
mov
mov
jne
les
js
xlat
sbb
insb
inc
jmp
test
jae
fldt
movsl
out
mov
mov
push
daa
inc
adc
ja
mov
mov
inc
sub
decl
pushf
mov
test
in
mov
push
js
test
add
or
lahf
pop
scas
das
in
xchg
pushf
pxor
fbld
stc
dec
adc
add
push
and
sbbb
pop
data16
fndisi(8087
mov
out
movsl
inc
and
and
cwtl
jecxz
or
push
mov
sbb
adc
movsb
jb
lods
movsb
adc
stos
sahf
daa
dec
jle
js
test
push
jle
mov
sti
inc
cmp
fadds
incb
push
in
outsl
push
iret
xchg
ljmp
test
mov
and
mov
int3
negb
loope
out
jl
add
int3
or
pop
es
dec
gs
cld
aad
repz
cmp
mov
jle
cmpsl
clc
hlt
jnp
leave
cmc
adc
adc
pop
les
fucomp
sti
addr16
outsl
fwait
push
mov
mov
testb
and
aaa
sub
sar
rorl
pushl
add
xchg
bnd
pop
and
out
rcrl
inc
arpl
pop
mov
inc
push
or
inc
stos
or
pop
pop
pop
cmpsb
cld
sub
or
test
int
adc
test
mov
aas
sbb
jmp
sti
arpl
addb
mov
bound
sbb
mov
adc
dec
fcoms
pop
add
xor
insl
into
and
pop
int3
in
inc
leave
insl
pushf
push
push
mov
adc
ss
pop
cmc
adc
add
mov
jns
lods
fdivs
mov
enter
or
dec
inc
mov
jle
rolb
xchg
mov
int3
and
adc
jecxz
test
dec
lea
addr16
xor
sbb
cmp
ss
lea
xchg
pop
ss
enter
dec
xchg
movl
cltd
mov
xchg
mov
fidivl
xor
push
and
call
adc
sub
pop
pop
pop
lods
jge
jp
popf
jne
cmpsl
out
pop
int3
and
dec
imul
jo
mov
ja
or
jle
arpl
mov
jp
dec
scas
lahf
clc
pop
xor
xor
je
bound
mov
mov
lcall
push
outsb
cmp
lock
mov
adc
xchg
stos
cld
push
loope
push
ja
or
dec
xchg
outsb
mov
pushf
ljmp
xchg
out
dec
lods
jnp
xchg
imull
and
fs
mov
push
out
mov
imull
lods
or
gs
test
mov
cmp
int3
iret
jmp
rorl
xor
daa
repnz
xor
push
mov
pop
leave
or
mov
fiadds
jle
mov
and
adcl
call
inc
ret
jnp
push
mov
xchg
mov
jb
adc
sbb
mov
mov
and
dec
push
or
lods
jo
addb
fstps
aam
and
das
cmp
adc
pop
push
inc
and
xor
fwait
push
xchg
lock
movsb
fdivs
nop
jb
bswap
mull
cwtl
stos
out
and
xor
mov
sbb
iret
dec
jp
sub
pop
mov
jo
push
and
ret
je
dec
cmp
dec
jge
adc
mov
push
add
imul
jnp
orl
pop
mov
xor
or
mov
pop
cltd
push
gs
mov
cmp
mov
jne
xor
mov
imul
xchg
fsubs
mov
pop
in
aaa
insb
cmp
mov
cmp
dec
dec
enter
mov
jl
nop
imul
mov
mov
outsl
xchg
testl
std
pop
test
mov
mov
inc
int
pop
dec
sub
adc
fs
xor
cmc
shl
mov
ret
out
ret
ljmp
fimull
test
test
sub
adc
popf
jbe
lock
pop
scas
push
pop
sbb
in
cmp
das
shr
int3
and
sub
dec
movsl
out
dec
in
test
jle
mov
xor
sub
pushl
sbb
out
or
fnstcw
loope
dec
push
fwait
push
pop
rcrb
mov
push
loopne
xlat
add
dec
insb
inc
add
scas
add
sbb
test
aam
call
xor
in
ljmp
loop
add
cmp
mov
ret
push
pop
dec
xchg
push
out
es
fsqrt
cmp
add
mov
ret
clc
aaa
inc
adc
xor
sub
add
stc
ds
je
ss
jnp
mov
mov
xor
pop
addb
in
sub
lret
enter
xor
jb
aaa
push
cmp
mov
add
mov
and
and
add
dec
dec
repnz
mov
pop
rcll
aad
or
jne
lcall
pop
push
test
lock
jnp
jb
dec
or
push
movl
hlt
cmp
sbb
sub
mov
adc
push
dec
lock
js
adc
inc
cmp
xor
push
dec
push
in
jo
enter
inc
in
mov
mov
leave
or
rclb
xchg
test
das
mov
rorb
mov
or
jns
arpl
sbbb
lret
jp
repz
shrl
mov
xor
js
ss
sub
jbe
xchg
adc
rclb
loop
mov
xor
popf
mov
inc
ret
sub
pop
testb
add
jbe
int3
xor
loopne
dec
mov
xchg
divl
cs
sub
aas
popf
clc
adc
inc
mov
pop
cmp
add
or
or
sbb
outsl
pusha
leave
adc
sbb
mov
test
cmp
mov
aaa
and
in
add
jbe
sbbb
pop
stos
mov
inc
mov
pop
int
in
xchg
xchg
xchg
or
int
in
lock
fwait
inc
jmp
shr
cmp
xor
dec
imul
mov
push
jbe
pop
add
lahf
rcrb
in
jnp
dec
adcl
jmp
iret
pop
stos
and
into
fcmovnbe
outsl
push
cld
inc
mov
iret
mov
inc
mov
lock
push
jae
mov
or
testl
push
in
dec
cli
aam
inc
loopne
pop
pop
xchg
fwait
sub
rcr
push
add
xchg
mov
popf
data16
xchg
xchg
pop
faddl
cmpsl
mov
fstpl
jge
scas
push
inc
jmp
and
adc
mov
xchg
loop
jo
adc
mov
cmp
xor
sarb
add
and
or
mov
jo
mov
leave
xor
push
div
pop
ss
repz
scas
adc
daa
mov
rclb
arpl
shl
dec
push
movsl
xchg
dec
ficoms
test
cwtl
es
jge
nop
in
add
cli
ret
or
push
sti
mov
inc
cmp
icebp
sahf
call
mov
and
outsl
testl
xchg
mov
jne
aam
adc
jbe
dec
cmp
int3
vandnps
cmpsb
jge
js
xlat
es
or
repnz
loopne
cmp
cmc
std
fs
xor
addr16
out
mov
mov
xchg
mov
inc
lods
fwait
ja
pusha
push
sub
jp
push
fnsave
aad
inc
sbb
mov
adc
sti
mov
jp
push
mov
out
sbb
mov
lock
loopne
shr
push
in
loope
fiaddl
in
subb
cmpb
xchg
not
pushf
imul
xchg
mov
mov
mov
inc
sbb
movsl
daa
nop
int3
pop
sub
ljmp
jno
and
inc
ds
xchg
in
lret
fistpl
hlt
mov
scas
xor
je
or
xor
lret
pop
sbb
or
push
jno
vsqrtsd
out
subl
pop
jmp
mov
cmp
mov
jne
mov
fs
dec
mov
push
sub
scas
scas
nop
ret
mov
xsavec
int3
mov
jb
cli
aad
mov
cwtl
inc
xor
enter
out
xchg
ss
xchg
cmp
sti
scas
cmc
xchg
pusha
daa
outsb
sub
subl
loopne
push
leave
jl
loopne
cld
sub
xlat
cmp
and
and
sub
inc
aam
xor
mov
jmp
mov
sbb
xor
push
push
jae
dec
imul
nop
cli
push
or
and
fwait
dec
inc
fld
sahf
in
lret
enter
dec
jmp
test
stc
jg
pop
mov
cmp
push
push
in
int
xor
mov
jp
xorb
pushf
xchg
aas
out
sbb
push
mov
iret
dec
fs
aas
push
inc
je
shrl
cmp
frstor
lret
arpl
jmp
inc
testl
ret
and
push
push
dec
lahf
or
ljmp
ljmp
xlat
add
insl
subb
pop
pop
fidivrs
incl
cltd
fs
xchg
fdivrs
jnp
rcrb
ret
jl
enter
add
jo
lret
stos
or
mov
or
mov
stc
mov
aas
adc
xor
neg
sub
into
ds
jbe
push
sub
xchg
adc
arpl
dec
fwait
ret
movsl
int
mov
inc
pop
mov
mov
test
mov
inc
cmp
pop
dec
inc
push
or
idivl
sub
push
mov
push
push
loope
or
mov
sub
dec
in
mov
imulb
push
stc
pop
inc
mov
ficoml
test
out
sub
lret
pusha
jae
mov
and
daa
fidivrl
mov
dec
imul
xchg
jl
movsb
fcmovnu
jle
add
push
imul
lock
xor
sub
sbb
je
sbb
dec
xchg
andb
xor
stos
mov
push
mov
push
pop
repz
in
mov
pop
sub
icebp
enter
mov
pop
add
add
hlt
push
int
push
mov
cmp
lea
mov
insb
lods
shlb
int
ret
xchg
movsb
xor
sbb
fisubs
in
fs
rorb
test
outsl
cmp
and
int
adc
enter
stc
cwtl
ret
push
xchg
dec
clc
stos
repnz
ja
and
add
cltd
aad
dec
insb
mov
jl
push
fs
stc
push
cmp
mov
pop
mov
jg
mov
xchg
gs
out
adc
addr16
cld
popa
and
ror
sub
xor
jno
pop
loope
push
pop
imul
ss
leave
pop
inc
xchg
in
fisubrl
insb
popf
out
mov
adc
sub
jae
push
sbb
pop
xchg
sub
and
outsb
and
cld
cmp
sub
xor
outsb
in
jne
inc
cwtl
rcl
push
mov
mov
xor
orb
cmc
popa
push
notb
inc
pop
arpl
cld
and
out
iret
cld
rcr
lret
les
in
pop
divl
mov
jbe
mov
test
aad
xor
add
sbb
roll
sbb
insl
js
xchg
nop
inc
dec
mov
in
mov
inc
mov
pop
aam
clc
mov
lcall
jbe
das
ja
xchg
int3
aam
sub
lcall
xchg
xor
jle
mov
outsb
hlt
xor
adc
push
push
push
push
pop
cmp
or
or
adc
cld
push
adc
mov
mov
loope
sub
mov
mov
pop
push
cmpsb
lahf
pop
pusha
adc
shlb
clc
sbb
popa
das
sbb
nop
jbe
mov
ds
fcoms
xor
inc
dec
mov
dec
imul
cmpsb
and
shlb
inc
cli
mov
lret
popa
jl
add
dec
cmp
cmp
cmp
repz
mov
orb
inc
adc
inc
add
sub
ret
mov
cmp
dec
shlb
loop
loopne
test
lret
xor
lods
pop
sbb
mov
testb
add
and
mov
aad
mov
push
sub
jbe
pop
mov
or
xchg
add
jbe
dec
mov
lret
call
sub
push
jecxz
sbb
cmp
in
or
push
xchg
cmc
rolb
pop
pop
sub
inc
loope
int
in
mov
scas
cmp
sti
add
addr16
sti
jmp
js
xor
fisttpl
jmp
and
add
mov
mov
xor
inc
and
sbb
add
jp
mov
loopne
push
mov
popf
int
xor
xchg
mov
out
and
pop
mov
int3
mov
jl
dec
test
stos
push
mov
iret
sbb
adc
icebp
mov
mov
jae
in
cmp
and
mov
pop
dec
outsl
gs
popa
les
ds
and
xchg
fidivrl
sub
sbb
add
repnz
adc
shrb
add
inc
ss
inc
fmull
enter
aaa
das
pop
or
fnstenv
test
js
inc
sub
push
sub
aas
mov
test
lcall
or
das
push
popf
pop
imul
std
aas
adc
cmp
in
sbb
int
in
and
xor
inc
add
mov
mull
jge
sub
cmp
mov
mov
jae
or
test
scas
daa
mov
notl
inc
clc
xor
daa
mov
push
mov
and
popf
mov
fisubrs
ljmp
fs
dec
mov
sbb
clc
pushf
loopne
push
popa
push
outsl
pop
divl
test
jle
dec
push
aas
sbb
aad
enter
test
stc
outsb
pop
hlt
hlt
sarl
xor
movsb
incl
hlt
notb
mov
push
sbb
add
and
cld
sbb
push
dec
inc
xor
pop
inc
leave
jae
or
test
sub
movsl
call
fimuls
and
adc
dec
lods
std
imul
pop
push
inc
popf
xchg
mov
pop
int
or
mov
shrb
sarb
mov
mov
jbe
pop
out
rorb
xchg
mov
dec
and
dec
imul
test
push
sahf
sub
out
inc
jmp
inc
push
fcmovnbe
fcmovb
lahf
sti
lods
cld
jno
mov
cmp
and
ret
ficoml
inc
data16
imulb
mov
ds
xchg
mov
jle
dec
scas
lcall
call
and
pop
xchg
jbe
cmpsb
mov
mov
lea
mov
popa
push
pop
es
outsl
cmc
inc
ss
cmp
test
cmp
clc
mov
cs
cmp
rcll
pop
jns
adc
in
inc
and
adc
icebp
jecxz
iret
rcll
sbb
xor
testb
movsl
aaa
sub
leave
rcll
lahf
adc
pushf
aaa
mov
mov
movsl
add
lret
xchg
or
sub
adc
pop
mov
push
pop
popf
idivl
ret
sub
lahf
adc
mov
push
int
dec
test
pop
sub
cs
adc
repnz
and
lcall
lods
in
sub
lods
ret
sbb
push
mov
hlt
pop
xchg
jle
popf
lahf
add
cmp
lods
xchg
adc
in
daa
jns
mov
fnsave
jecxz
mov
or
mov
int
pushf
outsb
mov
jmp
add
push
scas
imull
cmpsl
adc
scas
popf
add
aas
cmpl
mov
repz
adc
cmp
es
ljmp
js
jecxz
loopne
ja
xlat
add
lock
loope
dec
insb
popa
roll
jle
nop
mov
mov
and
jecxz
xchg
sub
fs
fadds
and
mov
aas
jbe
fadds
mov
out
xor
icebp
jb
sub
inc
cld
adc
gs
daa
jmp
and
mov
fs
testl
sbb
test
scas
sub
or
mov
mov
stc
sbb
test
cwtl
xor
out
outsb
mov
mov
cmpsb
jne
mov
jnp
push
insb
repz
ja
fucomip
pushf
xchg
add
je
dec
jb
ds
jb
cmp
adc
pop
push
outsl
imul
xchg
mov
adc
cwtl
shr
inc
scas
xchg
xchg
clc
xchg
mov
jg
jns
xchg
dec
jp
aad
dec
pushf
xchg
dec
scas
xor
aas
jp
inc
scas
ss
loop
stc
inc
paddsw
inc
dec
aam
test
dec
leave
imul
push
xor
dec
movsb
test
cltd
cmc
add
jecxz
imul
and
sbb
in
rcrl
fildl
test
fiadds
pop
inc
scas
sub
shl
push
mov
fstpl
lahf
test
out
test
mov
jns
es
adc
xchg
int
arpl
mov
add
sub
and
shlb
es
lahf
subl
sbb
fnstenv
mov
or
out
push
dec
lcall
test
fsubs
jp
dec
push
cs
push
sbb
stc
pop
pop
fcomps
shrb
or
xor
shrb
jo
movsb
sbb
aas
ret
call
jne
cmp
dec
outsl
int3
lahf
adc
mov
stos
mov
inc
sub
push
lods
mov
icebp
mov
jo
out
ffreep
popf
icebp
arpl
sub
dec
push
pop
shr
lcall
xor
pop
dec
out
fs
or
icebp
jle
js
sbb
daa
or
cmp
xor
pusha
popa
lret
sub
lods
cwtl
sahf
pop
fisttps
pop
iret
jae
fimull
adc
test
sbb
ret
jp
sbb
xchg
icebp
fsubrl
push
or
mov
push
out
push
xor
mov
pop
and
ret
add
pushl
insl
outsl
clc
ror
xor
aam
fstps
xchg
incb
push
js
push
loopne
jbe
popa
dec
mov
pop
xor
mov
sub
imul
xchg
dec
inc
leave
xlat
out
mov
dec
sarl
sbb
outsb
or
shl
cmp
repnz
aam
pop
ljmp
inc
jp
les
push
sub
pop
inc
jle
mov
mov
mov
jl
mov
cmp
mov
daa
sub
mov
dec
lock
or
mov
daa
leave
inc
lret
pop
js
add
jl
in
pushf
into
rcrb
xchg
push
mov
cltd
stc
gs
pop
inc
lcall
jmp
cmp
loopne
jb
pop
fistpl
xchg
push
push
sbb
cwtl
mov
sub
fwait
dec
push
mov
int
add
mov
mov
adc
je
sbb
das
xchg
cwtl
ret
das
sbb
out
lahf
cmp
addb
ja
mov
or
lahf
ret
push
sbb
add
nop
es
pushf
mov
lock
mov
jno
icebp
gs
sar
outsl
pop
popa
imul
ficompl
cltd
aad
rorb
lahf
cmp
leave
inc
out
adc
test
mov
je
pop
push
jns
mov
iret
sahf
cmp
popf
shrl
add
movsl
push
inc
arpl
push
pop
arpl
push
mov
movl
add
push
data16
or
mov
lds
jnp
mov
in
fisttpl
push
jae
int
icebp
xchg
dec
repz
fadds
popf
jge
rcr
cmp
repnz
push
inc
movhps
mov
call
jo
shrl
das
jle
fnstsw
cltd
ret
push
sbb
jg
or
sbb
mov
test
push
scas
mov
sub
push
push
pop
sub
and
cmp
adc
mov
icebp
adc
push
out
es
mov
ficomps
cmp
dec
mov
xchg
imul
mov
mov
pop
sar
mov
movb
push
test
xor
hlt
aam
nop
jl
int3
loope
dec
mov
cmp
syscall
fmull
push
or
mov
test
dec
mov
arpl
adc
out
daa
lret
dec
or
std
shll
repnz
nopl
cmp
inc
pop
mov
sub
jb
std
sub
aam
or
xor
pop
hlt
xchg
xchg
pushl
xor
negl
jecxz
outsl
lcall
push
jp
insl
rcl
ret
fstpt
inc
mov
sbb
cmpsl
out
inc
sbbl
stos
adc
inc
cs
mov
inc
and
leave
push
movsb
repz
iret
mov
sub
push
fisubl
mov
adc
pushf
psubq
mov
xchg
pop
jnp
in
sub
es
cmp
ret
call
stc
ss
out
mov
sub
das
add
dec
mov
jb
cltd
fldt
cmp
or
sahf
shrb
push
or
xchg
mov
out
stos
inc
lahf
lds
sarl
jne
sbb
inc
jno
inc
ficompl
push
out
cltd
sub
push
int3
dec
pop
stos
sub
loopne
loope
adc
xchg
xorl
ficompl
ja
stc
cmpsl
dec
orl
sub
int
jp
push
xor
fcmovnb
mov
dec
sub
lcall
lret
test
scas
test
inc
lods
in
pop
rcr
lret
xchg
imul
pop
cmp
xchg
nop
jns
push
test
fldz
mov
scas
xor
outsb
mov
daa
sub
jo
loopne
ss
mov
inc
rcrb
jge
fists
in
xchg
cltd
loope
dec
mov
mov
das
ret
mov
bound
testb
sbb
sahf
pop
jecxz
out
adc
xor
xor
test
dec
fstpl
addr16
push
aas
cmpsl
addr16
mov
add
ja
pusha
hlt
xchg
cmp
test
add
std
out
cmc
sahf
in
mov
add
pop
clc
mov
ds
mov
jl
jmp
pop
sbb
pop
sub
sahf
and
data16
sbb
cmp
lahf
xorl
or
cmc
jnp
mov
pop
xchg
and
in
in
cmp
xor
pop
orb
or
xchg
imul
stos
aam
pusha
clc
push
inc
xchg
mov
add
call
dec
mov
cmpsb
jae
aam
loop
imul
rclb
push
fnstenv
add
das
jp
push
adc
idivl
mov
adc
fadds
pop
xchg
lock
mov
pop
out
decb
aam
mov
jg
dec
pop
sarb
jo
jecxz
iret
dec
inc
cmpsl
xchg
mov
enter
mov
cmpsb
mov
sub
das
bound
push
inc
lcall
xor
xchg
ret
mov
test
add
xor
add
stos
insb
mov
aas
inc
sbb
pop
pop
outsl
enter
mov
cmc
test
adc
addr16
cmp
sahf
rcrl
pop
fstl
movsl
outsb
xor
add
add
and
imul
stos
or
in
inc
inc
aaa
xor
insb
xchg
cmp
mov
adc
mov
sub
push
stos
xor
clc
aaa
shrb
inc
ja
jb
jnp
cmpsb
xchg
or
dec
mov
mov
stos
iret
popa
lock
imul
out
insl
icebp
jo
rorl
jb
cmpsb
mov
and
xlat
ret
negb
lret
pop
inc
jns
insb
mov
mov
in
mov
lahf
ljmp
inc
add
sub
jns
xor
iret
loop
pop
push
scas
mov
hlt
cli
dec
adc
enter
adc
jbe
dec
dec
xlat
xchg
jl
push
lods
repz
fsubl
sbb
dec
jmp
js
ljmp
xor
mov
scas
add
aas
push
mov
daa
cmp
pop
cwtl
stc
push
jb
imul
rcr
sbb
in
lods
dec
subl
jo
dec
jb
jnp
std
test
mov
mov
pop
cmp
push
dec
mov
add
push
sub
xor
adc
dec
ret
fwait
inc
mov
dec
lahf
sbb
pop
ss
sub
gs
ja
mov
xchg
push
or
clc
xchg
gs
add
inc
add
pop
scas
mov
inc
mov
adc
out
mov
imul
aas
xorb
gs
ds
lea
lret
inc
enter
scas
mov
mov
push
js
mulb
js
pop
mov
and
insl
mov
cmp
inc
idivl
in
add
stc
gs
sbb
mov
pop
sbb
jge
or
push
inc
daa
fildll
repnz
fwait
sub
dec
adc
imul
ret
sbb
inc
pushf
xchg
xchg
mulb
roll
push
pushl
mov
cli
push
ds
and
in
push
ljmp
sub
testl
mov
sub
in
aaa
nop
push
call
and
or
es
add
pop
xchg
pushf
mov
and
stos
mov
push
outsb
dec
loop
xor
pop
xchg
call
push
roll
lock
push
xchg
fsubrs
mov
or
jle
mov
insb
and
fistpl
adc
aam
sarb
adcb
mov
insl
scas
jg
pushf
lea
mov
inc
rclb
push
outsl
xchg
jns
xchg
mov
cmp
pusha
mov
xchg
iret
add
iret
gs
fisubrl
pop
push
cli
sti
aad
adc
cld
stc
das
out
lret
lea
rorl
jno
scas
adc
adc
mov
add
and
imul
cli
add
addl
mov
call
mov
enter
jo
pushf
jne
pop
out
and
es
push
inc
pusha
adc
and
push
push
or
xchg
xchg
fs
xchg
dec
adc
add
iret
xchg
add
in
fisttpl
enter
pop
cmpsb
xchg
mov
mov
inc
mov
fidivl
ret
repz
cwtl
xor
push
pop
adc
xor
sub
incb
sub
inc
sti
xchg
cwtl
and
and
xor
adc
test
test
adc
decb
mov
sti
cli
push
adcb
enter
ljmp
gs
xchg
in
inc
outsb
fcmovbe
xor
call
arpl
xlat
lea
ss
std
add
jp
jp
inc
sub
mov
cmpb
iret
aam
hlt
lods
das
lods
addl
cmp
sbb
adc
jge,pt
push
push
and
sarl
sbb
scas
test
add
and
cmp
mov
sti
es
mov
ss
aam
fsubrp
mov
clc
iret
nop
jl
fisttpll
cld
sub
inc
in
fwait
sbb
movsb
insl
cmp
adc
dec
mov
mov
mov
jmp
sbb
cmpsl
sbb
fnstcw
push
xor
ja
sub
mov
lea
jmp
pop
ud0
and
sub
outsl
inc
test
mov
ja
aam
cli
pop
push
inc
ja
scas
push
pop
in
jmp
sub
sbb
cmp
ret
dec
mov
mov
mov
mov
and
test
push
test
fildl
pop
std
mov
jnp
ds
test
mov
lods
push
fnstcw
cmc
test
adc
lret
icebp
cmp
cmp
dec
and
adc
pushf
push
idivl
sub
pop
inc
movsl
add
int
push
shrb
mov
sbbl
es
mov
inc
stos
outsl
push
mov
cmp
dec
mov
add
mov
lcall
fldt
clc
imul
mov
popf
mov
jmp
mov
lret
xchg
mov
jge
sub
shlb
cmc
jnp
and
dec
je
dec
mov
cmp
mov
mov
push
inc
sysret
mov
jnp
scas
sub
inc
pop
ds
xor
mov
cld
push
sbb
dec
lea
or
dec
stos
pop
ret
dec
pusha
pop
shll
jae
xor
dec
bswap
not
arpl
xchg
mov
mov
loopne
mov
mov
xor
out
in
roll
push
call
fsts
mov
or
xchg
repnz
sbb
js
or
test
add
push
test
outsl
iret
negl
mov
jp
jmp
xorl
imul
xchg
scas
shl
out
aad
rcll
jge
ds
jne
fs
orb
push
data16
mov
xchg
enter
pop
aas
scas
call
push
rcl
xchg
scas
icebp
ret
decl
dec
and
outsl
sub
or
cmp
jnp
stos
pop
add
in
sub
cmp
xchg
pop
test
iret
inc
scas
cmp
test
push
ja
js
pusha
add
mov
mov
imull
mov
jo
cmp
inc
loopne
push
mov
lds
xchg
fisubrs
xchg
mov
push
mov
pusha
fistl
in
out
jp
adc
cmp
jge
lods
jle
and
jmp
mov
lret
pop
xor
out
mov
mov
out
push
dec
mov
pop
pop
mov
aas
push
mov
cmp
lock
je
test
sbb
in
neg
pusha
push
cld
fisubl
jo
jnp
shll
jb
lahf
sbb
leave
xchg
xchg
aad
dec
nop
cmpsb
mulb
sbb
lock
stos
loope
insl
push
pop
and
testl
aam
cmp
fmulp
and
cwtl
aam
mov
jp
stos
call
or
xchg
jo
and
out
jmp
jnp
clc
ljmp
sbbb
sbb
fmull
loope
js
sub
xor
sbb
sti
ficomps
loopne
pop
faddl
jb
jmp
stos
xor
dec
pusha
mov
push
or
movsb
cmpsb
das
or
test
push
femms
incb
fs
fisttpll
jl
cmpsl
and
cs
outsb
sahf
outsb
dec
movsb
push
fstps
jne
loop
test
jbe
call
mov
js
push
and
les
adc
test
add
mov
lcall
xor
mov
and
xchg
add
ja
pop
jge
addr16
sbb
ljmp
xorl
loopne
stos
sub
or
push
mov
leave
and
mul
adc
pop
and
stos
data16
fidivs
std
fisubl
outsb
push
mov
add
std
adc
pop
dec
mov
out
daa
sub
es
xchg
stos
push
fiadds
lea
sub
cmpsl
ljmp
pusha
cli
sbb
insb
test
cltd
stc
lods
movsb
nop
daa
fimull
pop
int
shrl
or
jb
mov
sti
fdivs
pop
ljmpw
ljmp
mov
push
stc
scas
js
lret
xchg
das
jge
mov
jo
pop
mov
in
or
pop
lret
faddp
or
stc
or
ret
push
pop
sub
sbb
or
imul
jae
ss
sti
pop
adc
ja
push
xchg
test
dec
mov
fs
dec
lock
cmp
cmovle
mov
lahf
test
mov
sub
inc
jns
push
js
test
stos
or
jecxz
pop
lds
lock
mov
fisttps
hlt
jp
pusha
daa
adc
repnz
arpl
mov
xor
inc
test
inc
fsub
mov
loop
or
xchg
mov
insl
push
sub
pusha
fnstenv
add
or
iret
cwtl
pop
xor
lock
xor
inc
dec
mov
sti
cmp
out
movsl
imul
xchg
mov
dec
loope
loop
test
in
gs
xchg
cmp
in
mov
cmpsb
stos
mov
gs
repz
shrb
ja
aaa
mov
xor
outsb
push
mov
dec
jbe
add
setp
jp
int3
dec
sbb
sbb
sub
inc
mov
into
ss
push
adc
cmpb
xor
dec
cmpl
test
int3
or
push
mov
fistps
in
dec
shrl
stos
mov
pop
je
std
arpl
dec
shrl
jg
lret
fdivs
jmp
popa
fbstp
cmp
movsb
add
jb
fmull
mov
std
xchg
push
loopne
cmpsl
movsl
add
push
push
xchg
push
inc
in
in
xchg
lods
in
outsb
in
mov
mov
rcr
jne
pop
mov
dec
inc
pop
fstl
xchg
push
sbb
mov
addr16
out
add
xchg
jne
push
adc
daa
sbb
cmp
push
lahf
mov
push
shlb
cmpsb
and
shll
jo
hlt
xchg
lods
data16
outsl
jne
aad
xchg
je
mov
fsubp
cmp
jae
add
lcall
push
je
cmpl
pop
lock
call
insb
test
clc
in
xor
sub
out
sahf
popf
inc
cmp
adc
pusha
mov
jge
iret
xchg
add
lods
sub
cmp
dec
cmc
jns
dec
xor
pop
mov
xchg
iret
cwtl
mov
cmp
lods
push
push
insb
jp
ljmp
in
out
mov
mov
int3
push
pop
jnp
add
scas
shl
mov
sbbl
ss
mov
popf
and
pop
mov
sub
sub
pop
gs
jb
dec
jb
fcomp
jl
repnz
jo
cmpsb
push
loop
push
jne
xchg
adc
in
dec
pop
rorl
in
icebp
mov
sub
fwait
testb
mov
add
inc
mov
dec
xor
sbb
or
andl
out
push
and
es
arpl
into
push
sbb
into
ja
xchg
or
adc
pop
jmp
ret
inc
test
sbb
inc
or
adc
jbe,pn
mov
mov
sbb
test
cltd
insl
cld
adc
imul
cs
in
adc
cli
or
sbb
sbb
fdivr
loope
jmp
mov
fidivrl
cmpsb
repz
mov
movsb
dec
imul
dec
lahf
dec
push
mov
outsl
dec
mov
push
push
sbb
add
mov
mov
in
fbstp
push
imul
pushf
jo
push
jmp
push
cmp
sbb
dec
or
inc
adc
stc
xor
jnp
or
insl
fstl
aad
cmc
lock
sub
call
mov
movsl
or
mov
aam
repz
dec
pushf
cmp
xor
aad
out
dec
add
jecxz
call
mov
clc
mov
aaa
xchg
adc
popa
rorl
inc
shl
ret
mov
jne
jo
xchg
fnstsw
sti
in
enter
addb
movsb
jb
xchg
imul
lret
sti
adc
and
mov
mov
pop
push
daa
int3
mov
enter
push
push
in
or
imulb
and
pop
insl
stos
cmp
mov
adc
xchg
fucom
adc
dec
add
jae
dec
mov
nop
dec
or
out
add
jo
cmp
push
jns
mov
outsb
mov
stos
xor
pop
imul
xchg
mov
in
xlat
orl
cli
ret
jns
aad
and
lock
jb
jo
ds
ljmp
fdivp
mov
or
mov
adc
xor
jge
mov
jbe
sub
pushf
xchg
stc
into
mov
je
std
outsb
cwtl
mov
std
jg
ss
fs
dec
fistpll
out
pop
mov
clc
into
mov
xchg
mov
sbb
subb
imulb
outsl
push
outsl
adc
sub
cld
mov
pop
inc
mov
jp
or
movsb
clc
xlat
shl
inc
aad
jl
in
or
or
xchg
movd
lret
pushf
mov
repnz
lret
push
or
adc
mov
ss
jns
int
xchg
mov
pushf
gs
or
mov
test
add
push
stos
insl
call
add
inc
aas
mov
mov
fbld
pop
jno
xchg
xchg
cmp
push
ficomps
sarb
cmp
inc
fs
add
jl
sub
fsubrl
int3
mov
int
fldl
sbb
mov
test
ds
das
pop
cmp
mov
jle
scas
movsb
es
loope
movsl
and
bnd
xor
ds
cmpsl
imull
scas
jle
outsb
cwtl
dec
dec
mov
jns
sub
das
movb
push
jmp
inc
push
das
imul
sub
jl
cltd
icebp
xchg
inc
dec
cmp
adc
enter
lods
arpl
pop
mov
cmp
dec
or
mov
jge
jmp
les
sti
outsl
mov
rcrb
fbld
shl
fstpt
repz
mov
andb
jmp
imul
mov
aaa
outsl
pop
mov
and
les
pop
test
push
pop
in
ror
ds
int3
lods
inc
mov
add
je
scas
mov
loop
pop
cmpsb
or
int
jl
fwait
cmp
xor
in
in
mov
scas
mov
adc
mov
pop
in
jbe
iret
in
ds
dec
sub
pop
into
push
sub
in
or
in
cmp
outsl
nop
and
xchg
jbe
adc
outsb
fdivl
cmp
cmpsl
jbe
cmp
or
cmp
inc
imul
bound
fstpl
adc
loopne
xor
xor
xor
fdivrs
fisttpl
sahf
lods
add
mov
or
les
push
sbb
mov
adc
mov
jo
sbb
scas
or
jl
or
into
pop
outsb
mov
or
pop
mov
scas
xchg
push
or
or
jecxz
lds
inc
mov
xor
inc
sub
pusha
adc
lock
dec
jns
cmp
xchg
sbb
out
pop
xchg
or
mov
mov
mov
push
rolb
push
mov
jmp
mov
add
inc
shll
mov
add
outsb
pop
bound
sbb
scas
cmpsl
mov
ja
or
mov
hlt
fldenv
jno
insl
jmp
sub
int
pop
enter
mov
ss
in
movsl
les
mov
and
jae
ljmp
fdivrs
push
hlt
arpl
fwait
pushf
jo
or
jl
cs
out
orl
arpl
dec
dec
insl
jecxz
rcrb
push
movsl
pop
test
jno
cmp
jge
xchg
jmp
inc
push
jge
int
lret
pop
jle
jne
fadds
sarl
push
fistps
lea
mov
cmc
mov
mov
cmp
or
aad
xchg
lock
adc
cmpsb
aad
push
into
cmpb
and
lret
jmp
push
xchg
fidivrs
out
jmp
push
sbb
in
inc
lahf
shr
jno
icebp
add
pop
lods
xor
test
xchg
sbb
shl
repnz
dec
es
or
fidivrl
push
js
and
dec
xlat
fucomip
repz
dec
repz
mov
iret
fiaddl
sbb
push
insl
hlt
les
push
cli
inc
inc
shld
test
pop
in
cmp
out
sbb
testb
lods
jmp
inc
dec
mov
xor
push
into
mov
cmpl
into
dec
cli
add
inc
mov
sub
adc
sub
out
rorl
roll
test
mov
lret
mov
adc
shlb
adc
xchg
icebp
out
mov
adc
repnz
loope
fcomps
int3
xchg
jno
loope
into
pop
push
mov
inc
mov
fcomp
das
xchg
pop
mov
sbb
enter
push
stos
mov
mov
aaa
inc
movsb
pop
xchg
sbb
or
adc
inc
movsl
sub
and
cmp
cmp
femms
stc
arpl
sub
inc
mov
add
jae
ret
subb
sub
fsubl
push
incb
cmpl
xchg
subl
jp
and
mov
pop
mov
or
mov
and
inc
xor
mov
hlt
cltd
cltd
xchg
mov
jp
fs
mov
subl
push
add
ret
and
ret
push
das
dec
dec
fsubr
sub
popf
add
neg
pop
sbb
dec
jge
cwtl
mov
testb
loop
shl
lods
xor
dec
add
insb
popa
sbb
fistpl
lcall
rorb
lock
dec
xchg
je
and
pop
or
lock
btc
push
lods
stos
mov
lea
lcall
xor
cld
mov
jbe
popa
pop
loop
movsl
stc
xchg
lods
add
cmpsb
dec
dec
aad
add
ds
mov
xor
dec
add
jne
fistps
dec
movsl
push
cmpsl
int3
iret
in
loop
pushf
xchg
jecxz
mov
inc
dec
and
mov
jl
sub
push
sahf
add
or
xor
call
adc
adc
adc
je
push
dec
xchg
or
push
cmp
jnp
mov
and
rcrl
leave
mov
sub
fidivs
jp
fs
inc
ficoml
cmp
mov
mov
mov
jae
movsb
andl
stc
jae
loop
add
hlt
stos
cmp
inc
aam
scas
popf
outsl
pop
jbe
mov
rorb
and
ljmp
sbb
out
or
outsl
dec
inc
rorb
jno
push
fldcw
mov
fidivrl
and
lahf
div
add
inc
aad
mov
jae
dec
inc
xor
dec
cmpsl
loop
push
negl
cmp
outsl
sahf
aas
into
or
sbb
push
jno
push
jns
insl
repnz
pop
and
sahf
stos
mov
pop
jp
mov
push
mov
les
cwtl
mov
add
mov
add
pop
repz
add
dec
imulb
mov
sahf
mov
inc
cs
xor
xor
repnz
leave
scas
lret
pop
bound
push
std
and
mov
aad
sub
mov
jmp
call
data16
hlt
sar
dec
adc
xor
jnp
xchg
mov
sub
ror
int
loop
out
and
or
push
adc
push
sti
inc
pop
or
add
lret
stos
sbb
xchg
push
mov
mov
jne
dec
ficoml
add
push
dec
shll
in
ret
mov
shr
lcall
cmp
xchg
adc
jns
loope
mov
push
mov
sbb
cwtl
daa
das
in
sbb
pop
jbe
clc
ds
jmp
pop
sbb
negb
xchg
pop
mov
and
mov
sahf
aam
mov
negl
lret
insb
cmp
decb
and
out
sbb
insl
xchg
out
dec
inc
aaa
loop
pushf
cli
mov
rcl
cld
xor
int
dec
cmp
mov
outsb
cwtl
inc
xchg
movsb
adc
sbb
xor
or
paddb
pop
pop
add
int3
cld
mov
jmp
mov
pop
insl
or
mov
inc
push
push
lret
inc
jbe
leave
lock
je
lahf
out
cld
mov
or
jno
xchg
push
add
mulb
orl
mov
xchg
outsl
dec
repnz
inc
cld
lods
mov
dec
jle
cmp
mov
test
lahf
mov
jmp
popa
rol
mov
mov
inc
call
and
dec
dec
pop
outsb
enter
test
cli
jp
fdiv
xor
xchg
cmp
mov
inc
movsb
lea
sbb
push
mov
add
jae
in
sbb
aam
cmp
sbb
or
je
popf
jne
push
dec
loopne
dec
sbb
es
lock
xchg
add
fstpt
and
push
cltd
add
imul
in
dec
leave
xchg
or
sbb
lock
adc
test
dec
mov
and
push
out
rorb
xchg
adc
std
iret
push
shlb
add
sbb
jl
into
fldl
dec
dec
movsb
inc
mov
imul
or
mov
into
or
sti
and
out
inc
fsubp
adc
lock
cli
sbb
std
cmpsb
push
sti
mov
push
test
fdivrl
dec
std
xor
imul
add
push
inc
fistpl
in
lahf
les
pop
nop
dec
fsubp
stc
sbb
dec
add
add
and
int
andb
insb
movsl
cmpsl
fsts
pop
dec
inc
and
mov
stos
repz
cmpsb
pop
iret
pop
dec
mov
js
jnp
sub
dec
push
lods
iret
push
pop
xor
mov
lds
les
fcoml
or
lcall
cld
dec
add
cmp
lret
jbe
sub
ficoms
mov
aad
mov
or
add
aaa
movsb
xchg
xor
insb
clc
mov
pop
lret
repz
push
pop
push
js
rorb
pop
sub
inc
movsb
cmp
cmpsl
jb
orl
stos
call
mov
cwtl
pop
cld
mov
jb
inc
in
addl
aam
and
cli
vmovapd
or
pop
jnp
add
insl
mov
rcrl
push
clc
outsl
scas
add
xchg
jb
aam
pusha
xchg
movsb
add
push
mov
cmp
movsl
mov
test
or
fs
dec
mov
pop
push
dec
cmp
out
hlt
nop
cmp
dec
leave
mov
push
in
jne
pop
fwait
mov
scas
push
xor
inc
add
push
lods
pop
inc
lret
jge
mov
lods
mov
and
and
jmp
cmp
add
fdivs
repz
dec
lea
sbb
cmp
push
lds
hlt
ss
sarl
dec
jge
in
movswl
sar
sbb
imul
mov
or
sub
stos
je
cmp
roll
jle
lock
or
lea
out
push
aam
jne
inc
jecxz
or
xchg
outsl
jg
cmc
les
clc
push
shrb
fstpt
ljmp
lahf
lcall
mov
ficoml
mov
or
mov
add
lret
add
lods
mov
push
cli
mov
pop
push
enter
fstpt
dec
mov
mov
jmp
cmpsb
icebp
xchg
mov
mov
and
lcall
mov
fldcw
or
outsl
out
jp
cmp
jle
mov
xlat
ret
jnp
aaa
mov
pop
popf
enter
jmp
mov
cmpsb
adc
xor
fs
sub
loope
lods
jbe
lret
aas
pop
fldcw
mov
dec
rep
andb
adc
nopl
or
fsubrs
mov
inc
push
in
popf
cwtl
addl
es
and
xor
xchg
push
int
int
mov
mov
ss
ret
dec
je
lds
xchg
aad
inc
sub
inc
mov
and
xor
lock
data16
sub
xchg
xchg
ja
dec
subb
sbb
scas
test
adc
fsubrs
int3
push
jnp
mov
stos
sbb
clc
inc
cmpsb
sbb
xchg
out
into
jns
fnstsw
pop
enter
cmp
gs
cltd
jle
cs
add
sub
gs
sahf
je
dec
and
or
outsb
inc
popf
or
xor
inc
insb
insl
out
dec
dec
filds
pop
or
insb
ds
lock
push
inc
or
xor
jbe
mov
mov
jmp
lods
jecxz
shl
notb
dec
and
stc
push
test
testb
mov
cmp
jb
leave
call
adcl
adc
insl
adc
sbb
lret
mov
xor
roll
leave
adc
mov
and
imul
push
into
notl
xor
lock
daa
fnsave
cmpsl
orl
pop
clc
mov
stos
test
int
xchg
jl
fidivl
ds
adc
mov
jp
dec
xor
or
cmpsl
jne
enter
lret
mov
movsl
jge
mov
std
in
and
and
or
stc
push
out
imul
sub
pop
sub
fcoms
inc
imul
test
outsl
mov
mov
mov
popa
mov
adc
fisubrl
test
xchg
into
movsb
xchg
inc
leave
fbstp
fucomi
inc
push
mov
gs
inc
mov
ss
gs
das
mov
mov
loopne
dec
pop
rol
xor
mov
fs
sub
mov
push
arpl
rorb
xor
fisttps
imul
ja
adc
xchg
lea
test
pop
mov
clc
adc
int3
inc
and
mov
enter
cmc
cmp
adc
lcall
or
daa
add
inc
push
nop
sub
add
lret
add
xor
and
imul
ret
push
dec
repz
jae
push
mov
mov
cmpsb
jmp
aam
call
mov
jge
push
out
mov
mov
pop
mov
jns
test
pop
pop
cmpsb
cli
xlat
mov
loopne
call
sti
ljmp
daa
mov
mov
adcl
popf
jbe
movq
frstor
lock
jno
jecxz
jo
jp
dec
jmp
out
mov
fnsave
xchg
xlat
dec
sub
sarb
or
xchg
test
fidivrl
and
push
jb
push
mov
adc
pop
sub
cmp
xor
pop
ja
call
es
aad
xchg
push
roll
xchg
mov
mov
mov
dec
out
cli
aas
sahf
hlt
out
flds
jb
push
insl
jae
and
sbb
insl
int3
sbb
lods
cmp
insl
sub
jg
mov
or
mov
daa
fwait
push
cmpsl
fstps
push
jl
popf
mov
outsl
cld
adc
pop
js
inc
xchg
out
int
popf
js
icebp
and
xchg
in
pop
mov
subl
jae
int3
insl
int
movsb
fsubrp
xor
cltd
dec
and
lahf
pop
pop
aas
nop
shrl
mov
dec
in
out
pop
and
dec
mov
gs
mov
pop
fsubs
add
fsubl
push
iret
into
dec
and
aas
push
imul
or
or
xor
pushf
jle
ljmp
xchg
push
jge
rcrb
cltd
lds
xchg
frstor
fdivr
xorl
jbe
push
mov
fcompl
xor
je
test
push
adc
rclb
test
xchg
dec
out
data16
test
pusha
cmp
sbb
outsb
push
jne
jle
lods
fldt
jl
stc
sub
loopne
pop
ret
pushl
push
or
repz
rclb
addb
pushf
jp
and
loope
xlat
cld
adc
inc
cmc
lock
pop
das
mov
ret
imull
mov
mov
xor
lahf
cmpsb
divl
filds
vpmuludq
jp
push
mov
adc
stc
ds
mov
mov
mov
jge
push
mov
roll
pusha
and
mov
rcrl
add
jecxz
mov
pop
mov
daa
in
mov
lods
imul
xchg
mov
es
mov
inc
repz
lods
outsl
pop
pop
sub
stos
inc
xchg
or
int
andb
xchg
cmpl
lret
addl
adc
stos
pop
out
jmp
adc
jno
or
outsb
mov
orl
in
jbe
pop
test
pop
in
dec
push
push
test
lret
adc
clc
mov
add
movsl
mov
movsb
mov
repz
push
out
sub
cmp
xor
enter
pushf
cmc
cmp
and
and
std
insl
les
pusha
jge
ret
test
push
or
dec
sbb
sbb
imul
and
pop
dec
mov
push
xlat
dec
fwait
cmpsb
push
jbe
pop
icebp
dec
jp
mov
cmp
pop
add
shlb
ja
jmp
xchg
dec
test
orb
icebp
mov
out
mov
sub
in
xor
xchg
pop
push
ds
and
mov
cltd
pop
jmp
xor
xlat
or
sti
pop
adc
xor
out
cmpsl
ret
xchg
iret
shll
xchg
sbb
mov
test
scas
movsb
xor
jg
dec
inc
or
sbb
imul
sub
inc
push
xor
gs
std
push
jp
push
mov
jg
inc
mov
repz
dec
cli
ret
int
xor
push
out
add
pop
movsl
jge
mov
bound
mov
or
leave
cltd
dec
sahf
in
fidivrl
jp
mov
mov
lahf
call
jo
out
test
jne
insb
mov
std
cmp
sub
repnz
std
subb
sub
test
daa
cli
sbb
push
nop
pushf
mov
inc
pop
int3
xchg
mov
mov
xlat
mov
into
in
dec
in
cs
movsb
pop
pop
and
push
sbb
pop
sbb
xorb
ret
roll
sbb
dec
xor
loopne
lock
mov
outsb
notl
cmp
icebp
dec
mov
adc
push
imul
push
add
daa
in
or
aaa
sbb
repz
cld
mov
cltd
loop
mov
mov
and
inc
mov
lret
mov
add
xor
adc
push
xor
add
add
dec
jbe
pop
sbb
or
dec
loope
lods
decb
sub
and
sbb
sub
push
subb
pop
mov
hlt
imul
push
jb
movsl
inc
push
xor
fnstenv
cli
into
lods
test
add
inc
jns
xor
mov
cld
add
sbb
pop
daa
outsb
lods
xlat
or
jnp
mov
sub
das
pop
faddl
mov
clc
pop
insl
mov
cmp
je
mov
or
sub
ret
cmpsb
cs
mov
dec
aam
lret
jl
push
stc
pushfw
pushf
cmp
push
mov
adc
adc
add
add
push
sbb
cmpsb
std
pop
das
pop
sub
stos
outsl
leave
es
insb
in
sub
ror
mov
popf
inc
or
push
mov
xchg
fnsave
test
sbb
outsl
in
pop
mov
mov
sbb
mov
hlt
mov
sbb
aam
imul
mov
movsl
and
testl
stc
out
mov
je
xchg
inc
mov
xchg
pop
xchg
popf
xor
scas
sti
frstor
ret
daa
xorb
outsb
shrl
stos
adc
cmp
ret
in
out
shlb
lea
jge
mov
aad
scas
lret
test
arpl
outsb
push
mov
imul
cmp
mov
pusha
insl
mov
scas
xchg
xchg
adc
popf
or
inc
sbb
outsb
iret
pop
ror
movsl
mov
dec
inc
mov
scas
add
popa
dec
inc
adc
and
repz
push
dec
iret
mov
addb
out
add
jg
daa
pop
sub
fmull
dec
xchg
lds
cmp
jge
xlat
insb
add
add
ljmp
movsb
push
jnp
sarl
cmp
cli
std
mov
out
pop
aaa
int
push
jnp
lods
xchg
xchg
inc
hlt
push
lock
or
jl
lods
es
cmp
sbb
mov
mov
pop
mov
and
movsl
lock
push
add
test
xor
lret
mov
xchg
mov
stos
data16
xor
test
mov
mov
bound
dec
dec
adc
in
out
jns
jp
jp
aad
mov
sub
inc
mov
fistl
aaa
cltd
sub
xchg
or
mov
nop
jp
xchg
shlb
cld
sti
pop
xor
mov
shll
fisttpll
cmp
mov
and
shll
pop
sbb
jecxz
andps
pusha
jo
stos
cmp
add
popf
popf
pushf
push
xor
call
xchg
sub
faddl
push
mov
lret
sub
dec
push
sahf
push
test
xchg
aas
in
cmpsl
pusha
fwait
xchg
fistl
sub
cmp
repnz
jmp
shlb
sbb
inc
fs
arpl
push
es
test
test
rolb
adc
movsb
movsl
ret
lret
lock
push
push
ljmp
mov
adc
mov
fucomip
adc
fstp
stos
jns
rcrb
or
test
pop
inc
jp
mov
mov
stos
dec
hlt
roll
sub
or
add
add
push
enter
jmpw
sub
fadds
in
sbb
lods
bound
mov
mov
or
dec
loope
testl
xor
push
pop
test
shrl
nop
roll
shll
lahf
mov
xor
xchg
in
mov
sbb
fldt
ret
dec
loopne
clc
jo
rorl
mov
jne
xchg
dec
hlt
xlat
push
inc
or
xor
mov
or
xchg
mov
movsb
adc
es
push
mov
je
out
dec
pop
mov
sub
in
pop
sbb
mov
adc
ret
mov
jbe
mov
or
test
dec
mov
mov
jmp
or
push
dec
scas
mov
cltd
ja
pop
sub
pop
adc
rorb
test
call
pop
push
sub
sbb
outsl
fsubr
scas
mov
dec
rcrl
mov
jns
jne
mov
push
loopne
das
sub
cmpsb
test
es
mov
xchg
in
and
and
stos
fcmove
gs
mov
and
mov
pushf
sub
leave
dec
mov
jnp
enter
sahf
shl
sar
mov
mov
pop
sub
les
arpl
jo
pop
jne
add
adc
sbb
out
fsubs
and
pop
cmp
dec
xchg
jmp
out
or
dec
jne
mov
jp
ss
pop
lods
mov
or
sar
push
pop
clc
mov
jmp
mov
xchg
in
sbb
in
ret
clc
push
loop
sbb
andl
sub
imul
adc
push
shlb
xchg
call
mov
inc
mov
jns
cmp
int
loope
cld
fstp
xor
xchg
aam
mov
out
add
adc
mov
dec
push
jp
adc
or
sub
nop
movsl
repnz
iret
mov
imul
push
rol
aaa
ds
mov
or
mov
popa
repnz
ds
outsb
inc
or
aad
add
popa
fbld
mov
mov
repz
xor
cmp
dec
gs
icebp
and
orb
mov
pop
es
xlat
mov
mov
sbb
jb
sub
imul
std
icebp
mov
cmp
cli
jb
jmp
add
lea
pusha
mov
add
xchg
aam
mov
push
fmul
cmp
push
sbb
mov
in
icebp
push
push
cmp
xor
mov
fs
cli
cld
repz
inc
or
xor
jg
xor
mov
inc
neg
cmp
cmpsl
push
inc
mov
mov
mov
sti
rcrl
pop
mov
xchg
push
dec
dec
arpl
mov
jmp
pop
push
mov
daa
pop
jle
in
je
add
repz
sbb
xchg
stc
mov
loop
xor
ret
pop
inc
or
and
and
inc
add
dec
xchg
repz
inc
test
test
pop
lret
cwtl
lds
dec
or
cltd
rcll
mov
xchg
add
cwtl
cltd
cmp
cmp
sub
test
xchg
push
call
shr
and
sbb
jae
inc
negl
fistps
outsl
push
repnz
adcl
mov
xlat
addr16
loope
pop
test
xchg
or
sub
std
adc
ljmp
mov
pop
data16
mov
and
adc
movsb
jecxz
pop
out
dec
jne
mov
scas
fcomps
pop
fistl
mov
dec
add
and
pop
ret
xchg
mov
mov
sub
pop
outsl
cmpsb
push
push
out
or
cld
sub
fsubr
in
and
call
nop
pop
mov
sbb
movsb
add
loope
nop
sbb
inc
lret
cs
adc
in
pop
test
sub
insb
ja
insb
lock
shlb
fistps
pushf
and
xchg
mov
je
push
rorb
ss
cli
xchg
mov
sbb
fiaddl
sub
lods
in
sub
in
jnp
aas
jno
mov
push
sub
mov
mov
add
movsl
cmp
out
stos
ror
stos
pushf
and
jae
mov
or
xchg
or
jo
add
shll
sarl
scas
outsb
test
cmp
pop
dec
xor
popf
add
push
sub
and
and
jge
xchg
adc
mov
and
mov
clc
mov
jo
jecxz
sub
dec
or
enter
xor
aas
xor
call
scas
arpl
out
sti
imul
xor
in
cmp
sti
cmp
sub
scas
pop
lock
mov
movb
mov
lcall
xor
adc
xchg
movsl
xchg
sub
inc
in
stc
adc
sbb
bound
decl
mov
and
rclb
dec
xchg
sbb
pop
lcall
std
xchg
sbb
push
icebp
cmp
dec
sub
push
dec
orps
push
add
mov
fstpt
mov
dec
xor
jae
jb
stc
dec
pusha
int3
sub
fstps
dec
add
testl
sub
add
movsb
jmp
adc
mov
xor
addr16
inc
leave
aas
mov
xchg
fwait
dec
jnp
scas
push
aam
sub
es
out
mov
mov
imul
xchg
mov
dec
sbb
lock
orl
shlb
test
lcall
in
into
and
and
add
inc
push
pushf
add
adc
mov
dec
repnz
jne
dec
aam
dec
sub
mov
ja
sbb
dec
mov
and
push
out
das
rol
call
inc
pop
inc
fisttpl
xchg
push
sbb
adc
and
pop
jo
add
xchg
test
in
jno
movsl
jns
jne
negl
sub
pop
xlat
lcall
xor
fwait
mov
push
xor
pop
push
jecxz
icebp
and
stc
pop
pop
aad
mov
enter
cmp
repnz
sbb
pop
sub
jge
js
mov
mov
cmpsl
rcrb
pop
movl
dec
mov
add
push
mov
xchg
std
int3
testl
dec
or
addr16
lods
in
mov
cmpsb
sti
pop
inc
add
sbb
enter
add
jge
shl
mov
xchg
jbe
dec
lods
jle
jne
roll
ja
sbb
jb
icebp
xor
outsb
inc
lock
mov
inc
fnstenv
and
mov
xchg
xchg
xor
push
lods
push
mov
nop
adc
notl
cmpsb
bt
push
dec
cli
insl
jae
dec
mov
addr16
adc
andnps
adc
ljmp
pop
mov
lahf
xor
inc
call
push
dec
inc
movw
mul
clc
adc
popf
popf
out
mov
je
xchg
jl
sub
or
jle
call
stos
mov
das
out
push
addr16
fildl
push
roll
outsb
pop
adc
push
cmpsl
lods
push
stos
jge
add
les
and
sub
ss
mov
cmp
jmp
std
sahf
mov
pop
cld
mov
mov
fincstp
je
repz
adc
pop
mov
call
les
pop
cmc
sub
scas
dec
add
mov
push
mov
sub
and
mov
jge
cmpsb
adc
into
repnz
xor
enter
push
inc
out
inc
adc
jns,pn
adc
daa
jb
mov
xor
popf
mov
push
mov
or
mov
jae
pop
fucomp
in
xchg
cwtl
push
pop
fisttpll
fisubrs
push
xchg
push
ss
and
xchg
repnz
ja
cmpsl
fidivrs
push
sti
lock
mov
cmp
mov
adc
jmp
out
xor
clc
or
pop
or
pop
xlat
fwait
dec
cmc
std
and
push
rclb
push
sub
dec
mov
and
cli
loope
aas
add
arpl
imul
cld
sub
jb
iret
outsb
out
mov
inc
les
cltd
leave
pop
cli
xchg
jae
divl
jle
dec
cmc
jnp
add
sub
mov
ja
shr
adc
jne
pop
testl
dec
imul
dec
pop
loopne
sahf
dec
or
push
cmc
rol
fidivrl
loopne
fildl
js
outsb
test
pop
mov
mov
sti
fidivrs
cmc
sbb
sub
iret
inc
cmpl
mov
pop
lods
sub
or
cmpsl
and
jno
out
inc
jl
jae
out
push
lods
jmp
popa
push
push
sti
loope
pop
aas
mov
bound
pop
pop
js
inc
xorl
or
sub
xchg
xorb
jecxz
popf
in
shr
dec
daa
int3
push
fisubl
pop
push
pop
ret
add
inc
add
scas
insb
or
int
mov
mov
add
aaa
sub
mov
push
cmpsl
push
test
mov
inc
in
arpl
pop
leave
xor
outsb
std
cltd
mov
fsub
lahf
rcll
lds
repz
test
or
test
fldcw
mov
xor
xor
sti
int3
dec
in
push
lock
gs
notl
sbb
out
inc
cli
shll
sbb
jmp
stos
jg
mov
inc
cli
dec
xlat
cmp
xchg
add
test
and
or
pop
adc
loop
insl
das
lds
xor
pop
xchg
arpl
sub
mov
ljmp
sbb
inc
mov
data16
mov
imul
and
cmc
test
push
add
push
cmc
lret
sbb
lds
pusha
xor
mov
mov
imul
mov
xor
dec
xchg
xor
sub
jae
fisttpll
cli
xchg
push
call
je
cli
cld
fidivrs
mov
pop
jmp
adc
xlat
mov
mov
xorl
mov
lock
loop
adc
jo
repnz
out
mov
repz
out
mov
pusha
mov
jns
out
fmul
mov
rcl
sub
or
mov
sub
stos
aaa
sub
xchg
shl
pop
jmp
lock
stc
loopne
fsubrl
or
lods
xchg
stos
jle
pop
int
pop
dec
int3
shlb
rorb
lods
xor
cmp
pop
sub
push
jns
jnp
shrl
popf
sbb
pop
sbb
jle
mov
mov
imul
inc
call
cmp
or
cmpsb
sbb
cld
jge
cmpsl
out
pusha
and
lods
inc
lds
and
movsb
popa
add
add
inc
andb
idivl
cld
xor
jne
mov
cbtw
mov
stc
inc
cmp
inc
or
out
xor
cmp
push
xchg
fidivrs
adc
icebp
repz
xor
js
out
fwait
pop
cli
pop
mov
cmpsb
or
mov
mov
jbe
mov
popa
jg
mov
cmc
adcb
adc
mov
gs
int
mov
roll
pop
movsb
cmp
aam
ds
jbe
adc
test
sar
mov
movb
mov
cwtl
mov
and
addl
movsb
mov
notl
loope
pushf
cli
aad
cltd
gs
fs
adc
mov
jmp
push
dec
jp
out
insb
shlb
adc
mov
xor
jp
xchg
push
or
cli
pop
inc
lahf
negb
pop
stc
xor
das
cmpsb
les
sbb
xchg
enter
xor
xchg
mov
sti
mov
xor
pushf
sub
add
xchg
mov
or
xor
xor
mov
xchg
lods
cs
jae
loope
insl
stc
mov
int3
adc
sub
mov
out
adc
xchg
test
mov
adc
sbb
mov
jnp
mov
jb
sub
ret
shl
sub
fcomps
loopne
sub
dec
add
mov
cmpl
mov
movsb
sbb
dec
pop
insb
insl
cmc
aam
fmull
insl
push
mov
mov
clc
mov
stc
ficompl
jbe
std
stos
xor
and
add
and
sbb
sbbl
push
push
out
inc
pop
mov
je
or
cmp
push
inc
sbb
movsb
mov
adcb
sub
dec
insb
lods
insb
xchg
cmp
push
loope
jb
fisttps
nop
mov
push
jns
daa
push
in
xor
andw
lret
mov
jg
sbb
repz
shrb
xchg
mov
push
je
aas
shlb
or
dec
repz
ficoms
cmpsl
mov
outsl
and
or
ret
insl
xchg
dec
push
loop
leave
into
cltd
clc
bound
jo
jns
data16
jne
ss
push
subl
mov
aaa
cltd
mov
arpl
rep
std
xor
xchg
lods
inc
mov
or
or
icebp
lea
data16
ror
lahf
sarl
cmp
hlt
sbb
aaa
mov
sti
imulb
movsb
pop
popa
loop
sahf
out
fidivs
xchg
out
pop
dec
cmp
adc
or
dec
cmc
sub
leave
pop
shll
xlat
ret
sub
adc
imul
and
in
sub
leave
cmp
jno
adc
xchg
mov
sub
dec
mov
jns
lahf
inc
add
add
mov
xor
out
stos
mov
test
mov
mov
repz
mov
int
lock
scas
pop
in
jle
ret
cmp
pop
inc
fptan
fists
jmp
jmp
jbe
repz
or
imul
mov
cmp
imul
mov
in
dec
jbe
or
push
mov
xor
mov
mov
in
sahf
mov
shrl
push
pop
or
inc
in
repz
or
inc
inc
jo
enter
scas
insl
lds
call
dec
repnz
int
add
rclb
push
push
repnz
cmp
shll
idivl
rcrb
adc
add
roll
mov
test
inc
push
cmp
xor
jb
jbe
xchg
sbb
subps
test
jo
pop
or
xor
mov
adc
ror
jb
dec
out
mov
sbb
lock
rcr
and
xor
adc
mov
enter
mov
jne
ret
roll
xchg
cli
test
mov
lea
sbb
adc
cli
xchg
sahf
adc
xor
in
or
mov
andb
sahf
mov
nop
push
iret
adc
pmaddwd
sub
xchg
sahf
icebp
notb
xor
mov
test
fbstp
ret
mov
ss
movsb
rcr
cli
cmpsb
add
push
in
jae
addr16
cmpsb
mov
in
fiaddl
pop
pushf
es
dec
jl
movsl
movd
dec
sbb
or
test
mov
in
arpl
dec
movsb
dec
lods
fadds
cmp
adc
enter
out
sbb
test
mov
int3
sbb
pop
rcrb
adc
push
ret
mov
sub
faddl
jno
pop
mov
xchg
xchg
sar
popa
cmpsb
clc
xchg
int
ds
sbbl
add
test
push
mov
dec
pop
repnz
cmc
xchg
push
push
rcr
pushf
push
jge
push
jb
hlt
xor
add
mov
aas
cld
xor
fnstenv
add
loopne
xor
sub
mov
divb
cmpsl
or
inc
mov
pop
adc
lahf
dec
dec
jecxz
ss
call
push
repz
lret
xchg
and
adc
and
adc
or
jae
jno
jno
mov
inc
arpl
cmp
xchg
and
ljmp
ret
xor
cmpsb
cmp
add
lock
jle
xchg
lods
jne
out
pop
ficoms
aas
xlat
scas
jl
cmp
orb
push
int3
int
xor
loop
aas
pop
lods
mov
ror
pushf
push
stc
mov
jp
push
es
lea
aad
xchg
cmpsb
mov
sbb
mov
lds
mov
push
cmpsb
adc
cmp
push
dec
inc
push
ret
push
mov
data16
out
push
inc
mov
enter
lock
imull
dec
sub
xchg
jns
xchg
imul
out
adc
mov
lds
mov
mov
push
and
inc
fwait
and
mov
cltd
and
mov
dec
std
sub
push
mov
arpl
hlt
mov
insb
stos
in
xor
pop
mov
leave
out
jg
es
pop
cmp
jae
mov
xor
lea
lods
xor
leave
push
sub
inc
mov
into
and
ror
mov
and
andb
ds
sbb
ds
jmp
mov
and
movsb
popf
into
out
mov
jnp
push
push
cmp
addb
mov
pop
pop
test
mov
stos
lods
arpl
cli
and
in
pop
out
or
push
fidivl
out
or
sbb
lods
mov
or
aam
scas
pop
loope
rclb
push
lock
push
cmp
ja
cwtl
test
jb
mov
or
adc
adc
jle
mov
dec
mull
js
sub
inc
lcall
scas
sub
sbb
xchg
cmp
into
test
cmc
or
mov
in
mov
ret
mov
imul
add
jno
data16
adc
jb
lds
daa
jns
fcmovne
inc
xchg
xchg
sbb
scas
adc
lock
arpl
mov
pop
add
int
dec
ss
or
out
cmp
pop
lahf
and
sbb
out
or
pusha
sub
jne
inc
das
std
jo
fsubrl
sahf
ret
xor
or
pushf
sbb
inc
lods
sbb
and
push
jo
xor
sub
or
insl
xchg
cld
adc
cld
insb
cmp
js
sub
loop
fidivrl
push
mov
dec
pop
mov
lods
fiaddl
movsb
ret
pop
les
adc
icebp
and
sbb
and
movsl
adc
mov
adcb
add
in
ret
sti
or
push
inc
in
je
outsb
xchg
cld
jnp
rolb
xor
pop
jp
sbb
cld
lahf
jle
inc
shll
xor
int
inc
or
xor
aaa
movsl
idiv
scas
sub
sub
xchg
cld
not
outsl
mov
in
xchg
fisubs
stos
ljmp
mov
call
outsl
rorl
or
int3
sbb
dec
or
cli
fs
addb
lret
test
dec
lds
mov
rcrb
and
out
add
cld
mov
ror
pop
jbe
shrl
adc
jg,pt
into
push
xchg
lock
rcr
push
mov
iret
xor
fwait
mov
fsubs
inc
aaa
test
stos
adc
push
jmp
test
mov
repz
jle
enter
ficomps
push
in
adc
popf
jg
dec
test
and
push
inc
xchg
outsl
dec
test
icebp
inc
lock
stc
mov
imul
nop
daa
lods
jb
les
xor
nop
pop
cmc
mov
enter
je
cld
icebp
cmpsl
cmp
jno
fisttpll
test
xchg
mov
insl
fildl
mov
fldl
xorb
pop
cli
mov
push
mov
fnstsw
mov
jle
push
dec
fcoms
xchg
aad
mov
mov
jl
mov
ljmp
push
push
mov
jecxz
xchg
inc
push
sarl
inc
sti
test
pop
dec
adc
and
test
cs
cld
ja
adc
mov
mov
pop
out
ss
lret
push
jnp
mov
rorl
push
insl
push
push
jns
jmp
in
dec
mov
push
adc
enter
mov
sub
aad
inc
dec
jb
cmpsb
std
sahf
pcmpgtd
mov
xorl
imul
aad
rol
adc
jge
lea
in
jmp
adc
mov
test
jl
or
and
xchg
mov
and
int
mov
popf
clc
out
xor
dec
cmpsb
add
movsb
xor
pop
jae
or
sub
arpl
sbb
sub
push
pop
in
mov
sbb
pop
aas
sbb
outsb
adc
sub
push
int
and
cmc
cltd
shrl
cmp
pop
cmp
jb
iret
out
or
fnsave
idivb
popa
shrl
aaa
cli
xchg
fwait
jge
dec
out
movsl
insl
push
cld
ficomps
dec
xor
mov
test
mov
dec
arpl
fcompl
push
bound
mov
movsl
mov
gs
clc
in
xchg
jno
iret
pop
push
les
xchg
mov
mov
loopne
sti
mov
jo
call
lea
xchg
push
sahf
cmp
mov
sub
scas
dec
pop
xchg
movhps
xchg
add
sub
dec
lods
cmpsb
lcall
jno
xchg
inc
fstps
orl
rcll
pop
sbb
push
bound
fwait
xlat
scas
add
addr16
push
jne
pusha
cmc
cwtl
sub
icebp
adcb
pop
js
repnz
xchg
jb
cmpb
xor
mov
sub
loope
stos
inc
pop
or
lret
insl
pop
sbb
cmp
idivl
cli
sub
mov
les
std
iret
pop
test
cs
and
clc
repz
out
mov
inc
jno
lahf
fdivr
dec
dec
in
pop
adc
or
pop
adc
cwtl
xor
push
sti
repnz
inc
sahf
jno
movsb
mov
inc
in
or
fincstp
outsb
inc
lahf
xchg
jge
out
aam
sbb
sub
fstl
jb
lock
daa
loop
in
outsl
mov
mov
cmc
add
insl
dec
mov
pusha
fmul
cltd
and
adc
jo
addr16
das
xor
rorl
add
jg
and
test
into
mov
into
mov
sbb
pop
pop
gs
sub
jns
xlat
into
mov
jmp
insl
push
sub
mov
sub
cs
add
push
cld
mov
push
lcall
jmp
outsb
cmp
lret
mov
push
mov
cmp
test
xlat
cmp
adc
rcrl
add
popf
inc
scas
xchg
imul
rcrb
jns
test
ror
aam
jo
sub
sti
lods
xor
adc
pop
and
in
fs
mov
add
mov
cmp
fwait
mov
adc
push
sahf
jbe
fsubrl
mov
dec
inc
cwtl
int
xchg
insb
mov
imul
test
xchg
adc
dec
adc
sbb
xchg
leave
bound
adc
movsl
mov
sbb
je
fadds
jle
mov
cwtl
sbb
xor
add
add
sub
sub
jno
sub
push
hlt
insb
sti
pop
imul
dec
add
push
gs
cltd
push
or
push
adc
mov
jmp
mov
ds
pop
bound
jmp
dec
lods
aas
and
sarb
leave
mov
xor
xor
les
and
outsb
call
lds
lea
add
sbb
jmp
bnd
aam
adc
xor
add
das
cmp
xchg
mov
in
inc
xlat
daa
aas
cld
mov
rcll
xlat
dec
and
push
xchg
dec
pop
mov
addb
adc
mov
enter
mov
out
fcoms
xor
fwait
push
adc
mov
mov
std
sti
push
repnz
adc
jp
add
add
repz
fisttpl
in
popa
addr16
popf
sahf
test
inc
inc
xorl
mov
jnp
dec
fcom
mov
stc
sbb
in
xor
push
jp
mov
dec
dec
xchg
in
sbb
push
inc
in
xor
cmp
stc
shlb
lock
mov
and
pop
fdivs
or
pop
test
jns
iret
int
push
in
push
out
sub
mov
inc
int
mov
lahf
orb
lret
inc
in
push
add
scas
in
pushf
fwait
pop
rcrb
xor
cmpsb
fdivp
push
sbb
scas
icebp
jns
xor
mov
into
out
and
fiaddl
loopne
adc
jo
xchg
pop
ja
push
pushf
pusha
pop
movsb
cwtl
sbb
adc
inc
xlat
jmp
pop
push
cmc
push
out
or
or
lods
cmp
sahf
out
jne
repnz
sbb
ficoml
add
scas
dec
ret
out
rolb
imul
nop
aad
add
bound
test
mov
inc
add
push
push
outsb
and
aas
cmc
mov
push
fcmovne
rolb
lea
imul
adc
mov
idivb
push
fstpt
inc
lock
test
mov
fnstcw
imul
int3
in
lret
test
test
mov
sahf
out
xor
push
ds
pushf
dec
repz
mov
test
icebp
inc
mov
movsb
mov
out
lcall
jno
es
mov
mov
dec
ds
cmpb
stos
cmpsb
dec
fnstcw
arpl
mov
mov
pop
testl
sub
repnz
sub
sarl
outsb
add
in
inc
dec
mov
mov
push
jecxz
add
xor
les
pushf
outsb
mov
mov
rorl
cmc
sub
in
repnz
inc
arpl
jle
in
xlat
inc
sub
lea
pop
test
sub
fwait
adc
cmpsl
mov
push
xchg
push
and
fmuls
jmp
stos
pop
outsb
cmpsb
imul
pop
inc
cmp
roll
imul
and
aaa
lods
mov
xchg
mov
ret
jge
mov
mov
outsl
jmp
xor
xor
dec
jl
cmp
mov
mov
mov
andl
add
jno
sub
xchg
pop
arpl
inc
fwait
divb
ret
pop
arpl
es
sbb
movsb
dec
inc
mov
imul
ss
je
or
sub
mov
xchg
pop
lea
mov
mov
xor
add
mov
fsubs
inc
xchg
gs
aad
out
add
pusha
push
hlt
mov
das
mov
movsb
cmp
cmp
fcompl
mov
test
push
movsb
mov
mov
in
test
jo,pn
sbb
lock
leave
fwait
or
mov
mov
cmpsb
pop
push
mov
clc
pop
mov
inc
add
bnd
sub
cmp
add
add
xor
loopne
sub
stos
sbb
movsb
jbe
cmp
cltd
in
sub
and
lcall
and
jmp
leave
push
inc
cmp
arpl
sub
clc
test
and
mov
add
cmp
or
ss
or
cmp
rcl
pop
sub
outsl
dec
jle
fldt
ss
xchg
out
push
test
push
jecxz
mov
jbe
mov
xor
lret
mov
dec
mov
aam
rorl
andl
xor
roll
loope
mov
clc
pop
fcmovbe
push
or
push
jnp
les
pop
inc
fidivs
xchg
adc
push
in
or
push
jns
adc
repz
mov
cs
adc
adc
stos
jnp
pop
mov
or
int
pushw
in
add
pop
outsl
pushf
shlb
sub
aam
push
stos
or
cmpsb
mov
enter
mov
loop
sbb
cld
fstpt
hlt
jmp
test
xor
mov
lret
cmpsb
ja
rcr
push
adc
sbb
cltd
sub
call
sti
scas
pop
adc
int
push
cmp
sub
mov
dec
push
aas
dec
aaa
mov
rcl
stos
and
push
enter
out
pushl
or
mov
nop
mov
adc
sahf
test
mov
pushf
bound
mov
arpl
je
mov
xor
mov
cmp
ljmp
inc
inc
scas
jb
cmpsb
cli
sbb
mov
roll
repz
mov
cmpsl
cmp
gs
mov
pop
add
test
sahf
mov
out
in
ljmp
stos
fsubs
mov
and
sbb
in
testl
push
pop
fs
int3
jnp
pop
or
xlat
fisttps
xchg
orl
sbbb
cwtl
stc
push
insl
ljmp
pop
xor
jle
repz
enter
iret
aaa
lret
dec
scas
hlt
loope
add
xor
mov
mov
call
aas
lock
rcrb
iret
ja
into
test
sub
pop
dec
hlt
hlt
incb
xchg
jle
pop
or
mov
je
cwtl
jp
xchg
inc
pop
fstl
out
sbb
mov
push
sbb
lock
icebp
sbb
adc
stos
sbbl
fmul
fdivl
movl
imul
lock
cmp
js
pop
int3
daa
out
push
and
jno
rol
add
clc
adc
cltd
scas
push
jb
sub
add
mov
push
dec
mov
or
popa
cmpsb
ja
xlat
cwtl
pusha
stos
gs
mov
test
ret
addr16
mov
daa
lret
xlat
dec
xchg
mov
xlat
mov
inc
mov
sub
dec
in
in
clc
mov
xchg
inc
movsl
and
mov
das
mul
push
aam
cmp
je
lea
pop
es
ja
jae
add
mov
add
sar
push
movsb
arpl
scas
test
pop
or
inc
jne
mov
cmp
popf
xchg
fwait
inc
push
jmp
push
pop
push
lcall
push
xor
pop
cld
xchg
je
addr16
push
insb
stos
in
push
xor
lahf
mov
inc
adc
roll
fisubrs
jnp
push
rolb
fdivrs
pop
mov
inc
icebp
nop
or
cld
add
xchg
packuswb
pop
stos
mov
mov
pop
notl
insb
sbb
add
orb
sbb
xor
sbb
loop
xor
aaa
jae
inc
icebp
push
sbb
mov
jns
sbb
mov
or
mov
add
sbb
rol
sbb
in
shll
mov
jecxz
dec
jae
leave
and
mov
enter
mov
cmpl
je
cld
aaa
adc
neg
jg
loope
mov
jb
push
rorl
xchg
xchg
out
popf
call
or
xchg
mov
pop
into
int
cmpb
cli
sub
sahf
dec
outsl
aad
mov
pop
push
enter
repnz
movl
pop
jne
test
aam
cmp
fldl
les
out
jne
mov
mov
scas
aam
xorb
enter
jp
inc
mov
sub
push
fcmovb
xor
adc
js
scas
aas
cld
mov
frstor
test
mov
addl
add
mov
ficomps
repnz
xchg
loopne
imul
cmpb
leave
mov
outsb
int3
mov
push
mov
push
ds
arpl
push
nop
push
push
leave
xchg
cwtl
pop
pop
inc
ret
cmpsl
sub
pop
or
cmp
pop
cmp
cmp
fcompl
xchg
push
insb
jp
test
addr16
mov
push
xor
mov
push
idivb
or
fiaddl
push
rcl
mov
inc
dec
mov
aad
outsl
into
or
and
mov
out
pop
sub
fmuls
inc
cmc
popa
push
pop
sbb
cmp
out
xchg
xor
cwtl
dec
adc
cli
sahf
int3
sub
push
sbb
xchg
lock
add
mov
out
xor
xchg
mov
pop
popa
sub
lea
call
mov
add
out
lcall
xchg
adcl
fcomps
and
cmpb
xor
jmp
bnd
and
lock
sub
cmp
jg
mov
or
filds
mov
sti
int
inc
dec
fcoml
xchg
enter
push
push
mov
ljmp
in
and
jae
dec
inc
mov
es
mov
insb
cmpsb
pop
cmp
ja
fisubrl
mov
scas
cmpsl
aas
fiadds
test
sahf
lret
push
pop
clc
jg
cmp
sbb
int
sub
xchg
data16
bound
fdivrl
mov
xchg
pop
gs
inc
and
and
test
and
pop
es
leave
sub
pushf
stc
push
mov
mov
mov
test
jae
mov
je
dec
popf
daa
iret
mov
loopne
cmp
clc
jl
cld
push
rcr
mov
lahf
pop
imul
sbb
lock
push
add
xor
inc
cmc
push
adc
movsb
stc
mov
push
adc
stc
push
and
lcall
lock
sti
xchg
mov
xchg
out
das
xlat
lds
and
scas
sbb
add
lock
mov
pushf
repz
jg
in
or
ja
pop
push
stos
pop
ja
ret
ret
bound
loopne
or
insl
mov
and
imul
and
pop
push
bound
pushf
movsb
jb
sti
and
gs
pop
xchg
test
shlb
daa
addr16
pop
bound
cli
adc
jae
enter
sahf
jp
push
mov
mov
daa
inc
pop
loope
mov
es
mov
adc
mov
and
rclb
stc
pusha
and
aam
xor
jge
jl
iret
js
jecxz
ss
add
inc
or
cmp
ljmp
subb
lea
out
in
and
cmp
xorb
jge
clc
insb
push
pop
pop
mov
jmp
iret
repnz
or
sub
enter
imul
or
push
pop
mov
in
aaa
pop
mov
add
push
loop
add
mulb
repnz
push
add
test
pop
xor
es
xor
out
in
mov
int
add
jb
pop
in
jl
out
cli
pusha
sub
push
mov
pop
lea
jns
mov
leave
nop
mov
out
cmp
mov
dec
xor
or
popa
fs
and
push
lock
je
adc
mov
and
mov
mov
cs
xchg
aad
inc
mov
mov
jnp
dec
cs
test
mov
aad
xchg
add
popa
pop
or
aaa
and
sahf
or
cmp
jmp
sub
icebp
cmp
cltd
mov
xor
sbb
aam
lret
xchg
loope
jg
mov
adcb
jl
cmpsb
sbb
pop
dec
mov
or
pop
cmpsb
pop
pop
iret
pop
das
mov
inc
stc
das
xchg
sbb
testl
scas
jae
ret
jbe
pop
in
xlat
or
jo
push
pop
dec
cs
mov
je
ljmp
out
mov
push
je
mov
and
xchg
cmc
int3
repnz
mov
add
lods
lods
mov
mov
imul
pop
push
sbb
inc
out
in
adc
lret
xor
cwtl
sahf
pop
jg
sbb
loope
stc
in
int
adc
notb
mov
and
or
sbb
gs
call
adc
sub
and
mov
jo
aad
mov
es
push
and
push
mov
and
test
scas
adc
mov
mov
adc
jg
loop
sub
xchg
xlat
adc
movsl
daa
lock
or
ljmp
xchg
or
les
test
and
sbb
pop
in
jg,pt
xor
bound
dec
add
mov
xchg
das
js
add
or
icebp
cltd
lds
sub
sbb
cmpsb
sub
cmpsl
xchg
inc
fs
andl
xchg
movsb
pusha
outsl
mov
shlb
jp
cs
imul
xchg
fmull
pushl
push
and
int3
pop
cmp
jns
adc
arpl
jl
dec
dec
dec
je
out
xorl
inc
in
or
enter
int3
cmp
push
ljmp
out
std
int3
movsl
push
mov
popa
ds
dec
sbb
or
inc
jno,pn
dec
into
dec
int3
mov
or
pop
out
divl
cs
fimull
or
mov
push
push
insb
aas
cli
shll
shlb
jecxz
adc
rorb
lods
dec
ss
push
pop
mov
or
sarl
fwait
xor
pop
rorl
rclb
mov
scas
into
dec
sbbb
and
push
testl
dec
or
cmp
mov
std
lds
cmp
sbb
jno
rcr
stc
out
ret
push
xchg
test
xor
out
pop
fcmovne
or
gs
lods
orl
ret
insl
xor
xchg
in
mov
ss
stc
inc
lods
leave
push
jns
adc
pop
mov
mov
sahf
mov
jne
push
imul
push
stos
ja
out
mov
jnp
or
xchg
mov
jge
mov
jl
addr16
inc
mov
or
into
and
sbb
xor
mov
add
fimull
jg
fsubs
add
mov
adc
pop
dec
sub
sahf
add
jmp
jg
push
add
hlt
cwtl
das
stc
cltd
movsb
xchg
jg
pop
icebp
cvtps2pi
inc
dec
push
leave
and
jno
fildll
ds
les
xor
and
and
mov
movsb
jle
add
loop
dec
outsl
lret
repz
je
movsl
mov
mov
out
or
aas
dec
sub
mov
and
andb
out
stos
js
arpl
and
out
inc
mov
xor
sbb
rclb
lods
xor
insl
lods
pop
lahf
cmp
in
or
mov
fdivrs
add
push
movsb
jne
ja
xchg
push
xorb
add
cwtl
jl
je
lret
push
in
push
add
sbb
ret
and
jne
push
push
out
loop
add
movsl
sub
jno
pop
inc
jae
pop
inc
and
in
push
scas
popa
inc
adc
daa
rcr
fildl
dec
pop
sub
fstl
add
fstpl
mov
stos
xchg
addr16
fsubs
mov
clc
xlat
cmp
cmp
fldcw
icebp
adc
mov
push
in
jne
or
or
loope
fwait
sbb
hlt
pop
and
sub
dec
sub
sti
fadds
jle
imul
mov
mov
mov
sbb
les
push
cwtl
xor
sbb
jl
cltd
push
mov
mov
dec
gs
fwait
hlt
mov
mov
mov
mov
fiaddl
add
in
scas
ret
jecxz
mov
ret
mov
add
push
aam
adc
scas
in
insb
dec
cmpxchg
and
sbb
add
xchg
sub
push
ljmp
insb
arpl
sub
cmp
jg
insb
sub
sub
inc
add
dec
outsl
and
and
push
xchg
xor
cld
push
insb
ret
mov
or
or
xor
pop
ja
mov
mov
jl
pop
mov
out
rcrl
jge
leave
in
lock
dec
lods
mov
popa
lea
in
mov
ss
pushf
xchg
mov
lret
sub
push
xchg
mov
es
movsb
mov
jg
data16
jle
ja
mov
and
push
into
and
sbb
adc
jge
jge
jle
sbb
and
push
mov
mov
leave
jp
inc
mov
push
dec
sbb
add
lret
pop
pushf
and
xor
fcoms
push
pop
inc
jne
inc
int3
jb
mov
inc
mov
xchg
jmp
sbbb
out
loopne
jno
fnsetpm(287
mov
mov
sahf
arpl
addr16
mov
mov
mov
data16
adc
ret
dec
inc
push
loopne
jno
clc
out
sub
push
push
jns
out
xchg
lret
add
inc
in
push
inc
adc
in
xor
out
xorb
imul
jg
mov
es
test
jo
adc
popf
fwait
in
stos
mov
lock
stc
jmp
mov
std
ret
dec
jmp
adc
xor
mov
jmp
fwait
cld
pusha
mov
inc
pushf
lds
and
mov
sarl
std
cmp
imul
jbe
cmc
fs
inc
mov
and
int3
push
lea
cmp
mov
popw
aaa
rolb
jb
cmpsl
aaa
jmp
dec
loope
sub
or
nop
sbb
sarl
cltd
push
ss
inc
in
jne
rcrb
or
sbb
scas
icebp
push
pusha
lds
loope
jne
adc
sbb
cmpsl
xchg
loopne
mov
mov
pusha
push
cmp
and
fists
int3
cld
loop
sub
inc
and
addb
mov
wrmsr
sub
aaa
cmc
pushf
xchg
pop
das
loop
scas
sahf
and
xor
cmp
pop
or
loop
test
mov
xchg
inc
ds
mov
arpl
lahf
sub
insb
cltd
cmp
push
xchg
pushf
dec
sub
sub
movsl
push
repz
jg
std
mov
divl
mov
push
xor
pushf
repz
or
leave
dec
dec
mov
add
dec
add
xchg
jnp
das
int
jns
dec
add
in
test
movsb
out
dec
mov
dec
push
lret
mov
cmp
sbb
mov
cltd
popa
xchg
xchg
xchg
push
inc
push
mov
xchg
push
sti
jo
test
mov
cmove
inc
jo
je
cmpsb
and
adc
out
inc
insb
rcrb
arpl
xchg
int
clc
pop
je
repnz
xchg
ret
std
add
pop
dec
mov
insl
jne
sub
pop
xchg
sbb
pop
fnsave
rdmsr
test
lock
push
es
in
dec
dec
mov
xor
add
mov
dec
je
insl
pusha
sbb
ret
mov
and
lds
fwait
sub
xchg
in
iret
icebp
jmp
and
enter
movsb
mov
mov
popa
out
mov
add
outsl
mov
push
into
xchg
dec
jae
sbb
andb
scas
cmc
xor
fistps
xchg
jl
mov
mov
into
mov
add
xchg
loopne
cmp
dec
push
mov
inc
addr16
xor
or
inc
mov
jecxz
dec
xchg
xor
lret
inc
jge
enter
mov
int
or
mov
arpl
dec
adc
jp
cmc
test
arpl
xchg
addb
in
mov
mov
imul
push
incb
rcpps
xor
jl
xchg
xor
mov
adc
hlt
sbb
xor
mov
or
push
jg
add
xor
lret
scas
lods
push
dec
addr16
iret
sub
sub
cwtl
and
add
push
cld
jp
cmp
adc
push
sarb
pop
sub
flds
add
ror
jg
push
cmpsl
clc
jecxz
hlt
call
jecxz
pushf
cmc
add
mov
imul
inc
adc
fnstsw
sahf
xlat
outsl
lods
mov
andb
in
inc
sarb
test
inc
aaa
rcrb
xchg
fidivl
xor
cmp
sbb
cmpsb
sbb
sbbb
mov
sbb
es
mov
test
out
jp
lahf
cld
dec
or
push
mov
xchg
xchg
jns
pop
cli
xchg
pop
jecxz
sub
mov
outsl
fsubr
ret
repz
fistps
out
sub
and
fwait
scas
adc
mov
xchg
fucomip
je
lock
insb
add
adc
add
cmp
mov
stos
int
adc
and
outsl
jo
cmp
adc
adc
xchg
iret
shll
inc
pop
idivb
jae
mov
nop
cli
dec
pop
lods
pop
repz
push
xor
lret
lock
xchg
clc
xor
jmp
movsb
jge,pn
sub
mov
xchg
repz
aas
cmp
pop
jl
test
outsl
dec
sub
rcrl
in
and
imul
xor
or
cmpsb
dec
outsb
adc
dec
pusha
xor
out
pop
sub
frstor
lods
push
push
and
inc
xlat
sub
popf
divb
sub
cmp
and
popf
mov
push
mov
imul
cltd
movsl
rcrb
imul
add
inc
je
adc
mov
inc
fildl
notl
int3
or
rol
add
sbb
stc
sub
hlt
mov
xchg
sbbb
add
adc
inc
pop
clc
lcall
stos
inc
add
pop
testb
lods
adc
lcall
cltd
int3
ljmp
xchg
mov
push
mov
mov
xchg
cmpsl
xor
in
out
testb
sub
cmpsl
mov
outsl
xor
out
aaa
cmpb
sahf
pop
dec
mov
cmp
jecxz
test
or
popa
adcb
jae
adc
sahf
repz
pusha
movsl
lea
or
add
mov
insl
or
pushf
dec
xor
add
lods
cmp
sbb
lret
outsb
fstpl
cmpsl
xchg
mov
xchg
scas
xlat
imul
iret
cmp
or
fistps
cmp
in
clc
fcomip
movb
leave
insl
jae
test
add
inc
ss
dec
incl
and
test
sbb
out
pop
jle
dec
sbb
add
nop
xchg
cltd
sbb
xchg
mov
stc
cltd
test
pop
adc
inc
cmp
cltd
fucomp
inc
movsl
push
ds
addr16
loopnew
and
push
sbb
sbb
mov
sub
mov
mov
xchg
mov
in
ror
out
mov
add
in
sbb
mov
push
ffreep
stos
and
push
icebp
das
or
insl
shll
mov
mov
and
loop
sbb
mov
dec
jnp
into
or
daa
call
shlb
ret
mov
popa
cmc
add
mov
out
and
std
jcxz
sub
cs
push
dec
cs
adc
xor
cli
cmp
and
adc
lods
repnz
mov
add
inc
push
and
mov
scas
jnp
adc
daa
test
jp
add
mov
xchg
mov
xchg
pop
cmpsl
xchg
in
cvtpi2ps
incb
adc
pop
daa
xchg
push
xchg
jmp
cmp
test
std
xorb
pop
adc
dec
cmp
dec
ss
xchg
jo
cmp
ret
mov
pop
and
cli
xor
cs
pop
fwait
push
cmp
les
cld
pop
ja
xlat
dec
orb
ds
in
mov
or
imulb
mov
int
xchg
mov
pop
dec
cmp
dec
fndisi(8087
xchg
add
test
and
fistl
add
mov
sub
or
icebp
add
lock
jb
add
mov
xor
outsl
pop
jae
jb
test
test
rolb
mov
out
dec
jp
cmc
jg
je
ret
mov
cmpl
cmp
cmc
es
mov
ret
pop
pcmpgtw
push
push
int3
mov
cs
mov
js
pop
ds
jb
mov
push
xor
ss
cltd
pop
mov
je
cli
add
decb
test
sbb
xchg
mov
pop
lods
andb
rolb
js
rcll
add
or
jnp
lds
mov
inc
ja
ljmp
mov
dec
call
cmp
test
mov
cs
cli
xchg
movsb
outsl
jbe
mov
aad
movsl
push
cld
jno
adc
ret
dec
icebp
jg
fs
ret
sbb
push
mov
xor
mov
xlat
leave
gs
xchg
xchg
loop
lea
mov
xor
push
jno
das
je
cli
push
in
outsb
fistpl
pop
ror
xor
and
jns
fcoml
sti
insl
ss
int
jae
in
lock
aad
mov
ret
loope
mov
pop
push
inc
mov
or
xchg
je
aaa
cmp
dec
and
sub
xchg
fucomi
daa
xor
popf
dec
mov
add
popf
lahf
sahf
add
addr16
mov
or
iret
xchg
xchg
lcall
pusha
dec
cs
pop
js
mov
cmp
fs
inc
mov
mov
inc
into
pop
andb
xor
add
pushf
int
test
andl
loopne
pop
jl
jno
fs
push
je
test
mov
lahf
out
xor
fnsave
shll
xor
loope
movsb
imul
js
inc
xlat
ja
cld
mov
outsl
outsb
adc
mov
dec
cltd
xchg
inc
xchg
pop
pop
jmp
or
test
lcall
js
mov
or
push
aam
dec
fdivl
push
xor
enter
cs
in
lahf
adc
jp
jl
mov
inc
lock
push
inc
hlt
fwait
or
lahf
cmp
rcrb
in
mov
jp
adc
fdivrs
mov
cmp
and
dec
mov
cld
mov
xchg
sar
lret
sub
xchg
out
pushf
inc
out
adc
scas
inc
sbb
das
aaa
mov
sti
push
jle
adc
shrl
xchg
jmp
pop
enter
jo
sub
mov
std
inc
sar
push
mov
in
mov
adc
cmpsb
js
js,pt
cmpsb
push
cmp
fiaddl
stc
xlat
and
mov
mov
or
mov
add
mov
and
inc
mov
cli
inc
sbb
or
sahf
mov
imul
fstpl
pop
pop
or
test
sub
dec
iret
add
mov
adc
fs
or
sbb
popa
mov
imul
mov
pop
jno
addr16
repnz
jnp
ret
or
mov
jmp
lock
sbb
addr16
scas
push
push
loope
dec
jge,pt
fucom
jo
adc
pushf
sbb
jmp
mov
cld
bound
scas
int
mov
jmp
inc
mov
jge
insl
incb
iret
sbb
aam
in
pop
mov
or
cmp
jo
roll
pop
jno
mov
sbb
pop
xchg
out
xchg
xchg
int3
mov
push
js
fwait
xchg
out
and
pop
mov
enter
mov
or
or
xor
or
mov
cmp
jg
rol
xor
fcom
fwait
test
fs
push
mov
inc
scas
aas
icebp
inc
mov
pop
and
scas
dec
loope
cs
sbb
in
and
test
lret
mov
jne
ret
sub
test
inc
mov
push
pop
fdivrs
cmp
loope
push
lret
lahf
imul
cmpsl
sbb
push
jnp
imull
ss
jb
cmp
std
scas
icebp
hlt
push
or
cld
sbb
pop
ret
sub
bound
scas
pop
and
lcall
aas
inc
sarl
xchg
ds
test
fcoml
or
sbb
sbb
gs
lret
fdivs
sbb
sub
cwtl
scas
stos
std
mov
ret
push
pusha
ja
add
or
sbb
mov
aad
out
sub
cld
xchg
pop
or
divl
jns
cmp
ret
idivb
fistps
dec
shll
push
adc
pop
push
insb
inc
addr16
movsb
add
pop
iret
es
cmp
push
sbb
dec
aad
mov
int
xor
dec
mov
fs
inc
sbb
jae
lret
fistpl
bound
sbb
loope
ja
xor
arpl
out
push
jbe
pushf
arpl
in
sbb
outsb
sub
xor
mov
call
fs
pop
xchg
pop
pushf
pusha
ffree
xchg
adc
push
scas
and
xchg
and
shl
sub
sahf
cmpl
dec
mov
ret
in
cmp
push
dec
js
es
cmp
jmp
inc
ret
sub
rclb
aam
stos
xchg
push
mov
mov
mov
mov
xor
jnp
sub
inc
inc
inc
ficompl
mov
mov
or
mov
sub
nop
mov
in
and
enter
das
int3
xchg
jge
cmpsl
xor
into
cmc
mov
push
mov
repz
cmpsb
aaa
repz
mov
imul
or
xchg
sbb
or
jge
rdpmc
or
cmp
push
dec
inc
je
xchg
push
fisttps
or
push
or
mov
sbb
lret
movsl
jo
or
shl
xor
mov
call
xchg
frstor
jecxz
push
adc
aam
mov
movsb
lds
iret
jo
mov
push
scas
std
lcall
int3
mov
mov
xchg
adc
cmpsb
sti
xor
notl
lods
loope
pop
aas
adc
mov
leave
out
dec
xor
dec
shrl
roll
sbb
sbb
mov
dec
out
test
cmpsl
sbb
ss
daa
fwait
nop
negl
fiadds
outsb
inc
inc
and
xor
leave
iret
mov
inc
mov
loope
sub
lods
bound
fiadds
std
lods
add
jp
pop
mov
inc
js
cmp
aaa
in
mov
or
int3
stc
out
add
cmp
adc
shr
inc
pop
xlat
sbb
add
jo
sbb
outsb
addb
out
inc
repz
in
lcall
inc
shl
sbb
inc
lods
orl
ljmp
or
pop
jne
mov
cmpsl
adc
pop
add
popa
xchg
and
arpl
mov
push
jge
testb
stc
sub
repz
xchg
in
adc
test
xor
xor
xchg
and
xchg
popa
cmp
add
into
int3
sti
or
mov
jb
xor
sbb
aas
lods
scas
sbb
jno
pop
sbbl
call
aas
out
pop
hlt
push
mov
enter
daa
mov
fists
sub
jl
fdivr
xchg
and
out
cmpsb
fldt
aad
sbb
mov
jne
scas
and
or
ljmp
cs
rcll
iret
daa
mov
or
loop
loop
popaw
es
jae
fmuls
lock
cli
mov
jbe
cwtl
inc
movsb
jp
in
ljmp
rcrl
mov
sbb
mov
popa
cmc
dec
mov
jne
stos
cmp
mov
inc
push
pop
and
mov
push
sbb
out
push
jne
movsb
xchg
outsl
push
ficompl
stos
mov
sbb
js
add
lods
or
popa
in
cmp
loop
xchg
shrb
sub
push
and
push
std
rcl
les
sbb
sbb
lods
stc
ja
cld
adc
cmp
and
aaa
mov
adc
push
filds
jl
stos
mov
push
jbe
les
stos
fisubrl
cltd
sub
loop
jmp
pop
sub
xor
outsl
in
shrb
xor
adc
mov
loop
xchg
pop
int
dec
push
lret
sub
divb
inc
loopne
mov
cmc
int3
pop
outsb
mov
and
cld
xchg
fucomip
cs
iret
fistps
ja
pop
imul
pop
cmp
push
rcl
push
pop
pop
lcall
sbb
sbb
or
mov
or
mov
dec
mov
imul
jmp
adc
pushf
cmp
test
xor
js
scas
xlat
or
adc
aam
or
iret
sbb
dec
xor
leave
jecxz
clc
add
loop
sti
js
inc
mov
imulb
loope
push
shrl
testb
xor
loop
fstp
in
adc
inc
sti
jne
test
in
cltd
repz
jbe
cwtl
dec
mov
mov
xchg
das
popa
inc
pop
jno
dec
inc
mov
cmp
dec
jae
xchg
int3
pop
es
daa
insb
xchg
dec
insb
adc
xchg
fs
dec
dec
jmp
movsl
das
out
cmp
jne
dec
lret
add
pop
jle
imul
adc
sbb
mov
push
mov
in
dec
pop
je
mov
add
cltd
popf
jmp
xchg
ret
adc
aas
daa
inc
push
or
xor
and
jae
mov
pop
xor
xchg
mov
ss
jle
cld
loopne
movsb
ja
or
inc
jecxz
gs
push
push
add
mov
mov
mov
ljmp
ds
lods
pop
pop
dec
xor
pop
pop
pop
push
push
pop
cmp
push
xor
xor
psrad
mov
push
cli
or
mov
or
pushf
stos
sbb
movsb
adc
push
das
test
push
les
mov
xlat
repnz
push
in
xchg
push
lea
mov
mov
testl
push
shl
data16
ja
add
je
cmp
dec
cmpsl
test
dec
inc
add
gs
cmpsl
mov
mov
add
cmp
and
xor
ss
stos
cmp
repz
inc
insl
and
dec
mov
sub
stos
test
and
repz
mov
xchg
jmp
vhsubpd
jge
inc
jno
push
shll
mov
loopne
popf
fdivp
inc
test
insl
adc
mov
add
aas
mov
or
dec
mov
push
mov
mov
cmp
add
lods
cmp
lcall
cld
movsl
pop
aad
popf
lret
aaa
int3
push
lcall
out
adc
repnz
fisubs
push
mov
pop
bound
popa
js
xchg
fisubs
and
loop
std
xchg
in
mov
movsl
dec
lds
and
test
mov
test
nop
lock
pop
arpl
mov
shrb
xor
pop
andl
stos
dec
xor
xor
jae
xor
jp
xor
pop
mov
mov
pusha
bound
arpl
into
lds
ss
dec
xlat
xor
fs
push
lds
xchg
push
push
jl
xchg
xchg
lret
adc
mov
xor
mov
inc
xchg
aaa
out
insb
dec
loopne
leave
push
xor
ljmp
mov
xchg
call
fwait
in
addl
sub
push
int3
les
out
fdivrl
and
addr16
or
pushw
lock
and
and
adc
leave
and
mov
or
or
inc
popa
ret
or
shrb
adc
pop
insb
pushf
mov
jg
rolb
jne
jmp
fisubs
mov
nop
cli
mov
inc
inc
pop
les
popl
frstor
fcomps
jb
cmp
ljmp
popa
int3
add
into
xlat
sub
sbb
pop
jne,pn
add
mov
push
pop
in
outsb
test
ret
das
cmpsl
movsl
sbb
push
ja
dec
rclb
popa
iret
xchg
pop
je
mov
cmp
fwait
cs
inc
les
ss
jb
mov
push
inc
mov
xor
aaa
in
test
loopne
adc
adc
inc
rorb
mov
pop
sub
push
nop
imul
mov
lahf
or
insb
lock
push
inc
ret
outsl
dec
xchg
xor
add
sbb
bound
les
dec
or
das
paddd
mov
stc
xchg
dec
push
lea
mov
ret
lods
cmp
cmp
aaa
ret
mov
mov
jle
mov
outsb
xchg
stc
ljmp
dec
lods
fildl
xor
lock
dec
aam
jge
daa
rolb
loop
lods
push
gs
ja
dec
jno
jg
popf
test
test
xchg
xchg
mov
clc
cmp
push
lahf
scas
mov
jge
gs
and
out
sbb
jmp
fsubrs
imul
xchg
dec
shl
mov
clc
push
mov
jae
mov
mov
popa
rolb
xor
mov
mov
xchg
inc
pusha
into
scas
jb
daa
ljmp
ja
or
arpl
xchg
xchg
sub
in
scas
loopne
or
jle
xor
lahf
pop
cmp
jnp
xor
pop
mov
xlat
cmp
setge
lods
mov
test
out
outsb
adc
xor
inc
mov
aaa
pop
push
dec
test
jl
pop
enter
xchg
cmp
mov
sbb
inc
mov
adc
xchg
jle
js
jge
hlt
cmp
and
sbb
outsl
cltd
inc
loopne
pop
lret
fsubs
pop
and
out
push
ds
pop
aad
test
mov
adc
adc
and
cmp
dec
push
and
in
adc
mov
push
movsl
stos
arpl
inc
or
aad
jo
out
jb
fisttps
cltd
in
cmp
dec
arpl
sti
push
loopne
jae
mov
das
cld
mov
xchg
subl
jno
daa
imul
sub
stos
xchg
rcrl
movsl
jmp
out
clc
xchg
leave
xchg
lcall
out
sbbb
into
cmc
jae
stos
scas
mov
rep
addr16
pushf
dec
scas
jl
xchg
sbb
xchg
push
cmpsb
stos
and
push
andb
adc
aaa
mov
int
mov
lock
mov
ja
in
cmc
add
cmp
out
mov
popf
sarl
mov
loopne
stc
sbb
adc
in
mov
sbb
ret
mov
je
and
and
in
call
cltd
jne
xchg
out
mov
add
lods
jg
daa
scas
push
mov
jecxz
js
xchg
push
into
xchg
sub
int
add
add
sbb
jae
jno
ret
stos
add
inc
mov
sub
adc
ret
cmp
and
int
cltd
xor
fimuls
push
test
aam
clc
arpl
mov
mov
stos
loopne
popa
adc
lods
pcmpgtw
int
outsb
or
push
outsl
scas
mov
fcmovu
popf
rcrl
adc
ret
aam
or
adc
jno
adc
inc
mov
aam
jg
and
fsts
or
xor
ret
mov
shr
loop
scas
xchg
mov
movzbl
add
mov
cli
cld
inc
mov
dec
jle
sbb
inc
push
loopne
addr16
pop
arpl
lods
xchg
ds
mov
ficoms
xchg
add
cmpsl
mov
mov
push
xchg
cld
jno
fdivrl
mov
dec
xor
rol
push
push
leave
jns
bound
insb
mov
mov
adc
inc
in
test
sbb
sbb
outsb
mov
arpl
sub
mov
neg
inc
insb
push
inc
fstp
xor
jl
push
cmpsb
mov
sbb
pop
pop
push
out
cmp
test
xchg
push
leave
repnz
call
pop
xchg
mov
ror
shlb
sub
add
sbbl
mov
movsb
xor
push
pop
xchg
xchg
jmp
add
xchg
scas
xchg
test
jmp
lods
je
in
add
push
add
loop
cmp
fst
push
pop
mov
mov
rcrb
pop
adc
ds
sub
jge
mov
or
ret
stos
jae
dec
inc
test
aad
xchg
testb
and
not
dec
cmpsb
in
xor
dec
hlt
int3
andl
mov
pop
js
mov
push
jns
repnz
add
xor
cmpsl
and
div
arpl
push
and
sub
aam
cmpsl
std
mov
pusha
lods
xchg
jmp
push
repz
mov
das
jecxz
xor
jb
inc
addl
aam
jo
lds
cwtl
mov
sub
xlat
dec
enter
js
pop
pop
cmp
js
hlt
and
xlat
xchg
icebp
nop
mov
mov
frstor
or
mov
fisttpl
int
adc
mov
inc
test
cmp
shlb
icebp
cli
mov
xchg
jmp
xor
inc
adc
outsl
xor
sbb
sbb
fstpl
mov
pushf
movsb
inc
cmc
jne
adc
jb
pop
xor
insl
mov
inc
jp
insb
pop
jg
mov
pusha
xor
lea
xchg
je
popf
pop
in
ja
and
call
mov
stos
push
sbb
fdivrp
cmc
mov
xchg
in
ret
jecxz
movsl
push
jns
je
add
push
xchg
bound
mov
mov
rclb
jno
arpl
sbb
push
test
xor
jnp
push
xchg
imul
stos
mov
push
add
pop
out
movsl
ljmp
lock
pop
js
xor
sbb
dec
repz
jns
mov
sbb
ret
mov
add
insl
sbb
in
jge
in
fistpl
pushl
push
test
icebp
and
adc
cwtl
sti
scas
mov
pop
push
mov
movsb
or
sbb
inc
in
jo
inc
scas
ds
sub
pop
jl
not
jp
add
jo
dec
aaa
mov
or
inc
in
push
mov
lcall
mov
dec
out
pop
add
jmp
push
jge
xor
xchg
repnz
lret
mov
js
jno
jb
jne
mov
std
pop
mov
add
jp
jle
xchg
pop
aaa
rcl
dec
jno
mov
add
aas
les
iret
ficomps
fmuls
icebp
adc
scas
inc
xlat
dec
insl
adc
test
xor
mov
or
outsl
jnp
out
mov
or
pop
and
mov
xchg
pushf
xor
and
pop
ret
adc
aas
add
sub
mov
adc
std
call
mov
lret
jmp
leave
dec
enter
mov
aaa
es
adc
into
mov
cmp
daa
clc
ljmp
jmp
xor
lret
cmp
cmp
sbb
add
push
or
popa
dec
mov
jge
pop
cmp
push
jae
loopne
cli
repnz
fsubp
xchg
aas
adc
mov
jl
imul
xor
push
test
sbb
je
mov
lret
push
xchg
dec
repz
fincstp
or
jb
jnp
cmpsb
mov
inc
std
or
push
rcl
mov
daa
stc
mov
movsb
pop
out
cmpsl
insb
movb
les
cmpsl
movsl
cmp
jbe
cltd
scas
mov
mov
xor
ds
push
fstps
shll
and
add
aaa
lds
leave
pop
popf
or
fnstsw
in
test
jb
jmp
jb
xor
dec
lds
outsl
test
xor
add
dec
test
or
dec
dec
mov
mov
scas
pop
imul
add
pop
cltd
iret
pop
adc
addb
es
push
js
mov
outsl
push
fwait
and
sbb
dec
xchg
mov
int3
push
pop
seto
ds
or
jl
pop
inc
and
je
mov
fucomi
xchg
mov
mov
mov
aad
adc
inc
std
sbb
jle
push
xor
sub
xchg
xor
or
and
jo
je
pop
dec
sbb
xlat
out
inc
adc
lods
aaa
or
push
jae
scas
rcrb
cld
pop
ret
and
fcom
and
pop
inc
adc
rorl
mov
cmc
jmp
sbb
repz
fcom
insb
lret
fwait
xchg
cmp
xchg
imul
cmpsl
dec
std
out
mov
dec
sub
jbe
test
mov
push
sub
je
pusha
jns
bound
dec
int
mov
xchg
das
sbb
out
adc
mov
outsb
push
sbb
aad
xchg
or
sub
ljmp
adc
aad
mov
pop
push
mov
add
ds
dec
addr16
xor
jge
cmp
dec
push
ret
clc
and
rorb
sub
mull
cli
xchg
mov
rorb
xlat
scas
repnz
mov
imul
jbe
iret
cmc
mov
repz
pushf
cld
ss
out
xchg
push
pop
scas
mov
push
rol
hlt
pop
mov
cli
call
andb
out
bound
or
data16
fs
jl
imul
fs
xchg
ds
sbb
out
adc
mov
out
lock
js
or
data16
xchg
xchg
dec
jge
adc
pop
add
inc
outsb
gs
or
inc
int
and
inc
arpl
mov
mov
xchg
je
rclb
push
mov
loop
adc
jl
rorl
inc
int3
popf
es
fists
jae
cmpb
sbb
or
pop
dec
decb
popf
push
aaa
ret
movsb
rcr
andb
pop
pop
mov
pop
xor
rcrl
daa
mov
into
xor
jl
sbb
jo
xor
mov
pop
xchg
jge
lret
sbb
sub
shl
adc
cmp
shr
fiadds
fimuls
test
test
sbb
sbb
fldlg2
mov
insl
sbb
jo
jmp
jo
ljmp
mov
es
and
pop
jecxz
mov
sub
clc
popa
pusha
push
ss
and
mov
imul
movsb
outsb
jae
fdivl
xor
sub
push
fwait
lret
dec
dec
dec
sub
push
cs
outsb
std
aam
cmp
mov
inc
repz
mov
add
push
jle
cmp
pop
cmpb
lret
mov
rcl
sbb
add
push
jnp
mov
pushf
ljmp
int3
fstl
fiadds
mov
push
insb
dec
cmpsb
mov
orl
pop
pusha
mov
leave
dec
mov
in
mov
rolb
xchg
adc
out
mov
xor
jmp
jb
rcl
and
pop
push
popf
or
cmp
movsl
das
out
or
dec
insl
sub
cmp
inc
addr16
sub
ss
jmp
inc
push
fs
or
roll
mov
mov
mov
in
shl
idivb
outsl
push
or
stos
lods
sbb
lods
mov
stc
aaa
loop
dec
add
ja
jno
shlb
mov
addr16
inc
xchg
clc
push
and
icebp
and
or
xchg
outsb
xor
pop
mov
pop
stos
inc
jb
mov
arpl
sbb
out
jle
lock
pop
inc
and
ret
std
push
pop
je
stos
cli
pop
sbb
cmpb
jbe
dec
ret
push
gs
mov
mov
mov
inc
xor
sbb
insl
call
ret
mov
mov
inc
dec
mov
daa
add
mov
jmp
dec
xchg
scas
pop
xchg
jae
push
pop
out
dec
int
mov
fs
aas
add
in
into
outsl
pop
cwtl
pop
dec
ret
in
cs
mov
cmp
in
sbb
add
mov
or
out
mov
cli
pushf
outsb
xchg
mov
dec
dec
insl
das
inc
sbb
popf
lret
mov
pop
ja
sbb
mov
dec
mov
and
mov
mov
add
bswap
xor
nop
sbb
jecxz
lcall
aaa
pop
call
inc
out
jne
js
gs
or
xchg
mov
cmc
cmpsb
jecxz
jmp
lds
movsl
out
rorl
out
out
cs
pop
imul
sub
inc
fdivr
in
inc
and
cmpsl
and
or
dec
dec
cltd
sbb
std
shl
pop
enter
dec
arpl
mov
jmp
adc
std
lock
push
mov
adc
ret
cmp
les
sub
test
fsubrp
ljmp
add
xor
jp
out
push
stos
pop
ss
ds
and
mull
fimull
or
mov
dec
jae
pop
mov
xor
add
jl
jecxz
popf
test
adc
xor
out
cmp
out
sbb
push
fsubr
int
imul
sbb
mov
mov
jge
scas
lock
jge
in
inc
sbb
sub
call
mov
jae
lods
sub
scas
pop
push
je
arpl
push
lock
add
or
je
insb
fsub
sbb
push
test
push
out
repnz
fistps
inc
push
xor
lcall
xorl
outsl
cmc
jp
lret
push
push
jae
mov
hlt
xchg
adcl
push
popf
sahf
cmpsb
push
adc
imul
push
inc
test
repz
add
mov
aad
ja
inc
test
pop
lods
test
jns
jns
pop
pop
adc
xor
and
iret
cmp
out
scas
fdivrl
rorb
popa
rcrl
fucom
lods
and
fisubl
scas
and
mov
test
insl
sbb
or
into
xchg
sbbl
popf
xchg
lods
aad
and
lock
ja
dec
mov
jp
pop
repnz
dec
leave
or
inc
xchg
sbb
xchg
push
fildll
xchg
stc
cld
loopne
mov
clc
pushf
fdivl
sub
hlt
shr
jb
lcall
or
cmpsl
sbb
into
stc
lods
imul
in
pop
dec
lret
stos
stc
jbe
les
pop
xchg
loopne
pop
xor
mov
lret
push
adc
mov
fcoms
jne
ret
fisubrs
xchg
sbb
cmp
cmp
ss
mov
mov
adc
push
aas
or
push
clc
nop
jmp
ficomps
mov
lods
xor
push
push
inc
jecxz
mov
add
mov
and
js
mov
cmp
mov
jb
ror
inc
push
push
jns
cmp
dec
inc
push
cli
cmp
jp
hlt
je
xchg
sub
push
add
sbb
jns
mov
jmp
inc
push
sub
pusha
orb
add
mov
int
push
jne
icebp
popf
sahf
scas
push
push
sahf
cmc
loopne
cmc
push
imul
mov
mov
jne
aam
rol
je
mov
jb
cmpsb
mov
inc
out
es
pop
sar
mov
ljmp
jecxz
inc
repnz
imul
jmp
lcall
jmp
lods
repnz
gs
dec
pop
cld
nop
mov
xlat
fcmovnu
sbb
dec
in
sub
cld
pop
jle
cld
sbb
data16
lock
and
lret
pushf
jb
les
enter
push
data16
fidivrl
mov
push
dec
sbb
add
loop
out
pop
cmp
sahf
jb
rorl
sbb
add
repz
adc
fisubs
dec
cmp
mov
and
and
xchg
push
fbstp
inc
mov
je
xor
ss
rcrl
sub
pop
jne
bound
cmp
sbb
mov
popa
xchg
gs
inc
inc
repz
clc
and
lods
call
mov
test
mov
je
movsl
jbe
xor
ds
inc
or
lret
add
aad
ret
xchg
mov
or
cld
fstpt
cltd
jno
sub
rcl
lea
jbe
jne
push
cwtl
push
into
mov
shr
jno
mov
add
inc
mov
movsb
sub
mov
cmpsl
adc
rclb
push
lcall
pop
dec
out
xor
inc
aaa
imul
lea
pop
adc
cmp
aad
cmpl
mov
lret
bound
es
dec
mov
push
xorb
mov
xchg
in
xor
or
and
out
jle
push
subl
push
addr16
xor
sti
nop
out
cmp
nop
and
push
daa
shlb
sub
clc
fistpll
shlb
push
adc
invd
add
mov
cwtl
rcl
sub
jo
inc
cmp
cli
and
fimuls
mov
mov
cmpsl
sbbl
stc
or
fimuls
xchg
push
ja
test
push
ja
repz
adc
mov
dec
lahf
sbb
mov
dec
cmpsb
mov
inc
fnstcw
mov
sbb
inc
cmp
lret
out
mov
push
arpl
nop
sbb
lea
imul
pop
rolb
mov
in
imul
movsb
mov
xor
ja
test
repnz
popf
mov
ja
pushf
xchg
ss
cmp
ret
push
cld
inc
add
xchg
pop
test
push
push
adc
repnz
aam
sbb
sets
icebp
daa
push
dec
add
pusha
xorb
jge
filds
push
mov
mov
pop
and
enter
dec
push
mov
pushf
mov
lret
mov
xor
es
pop
addr16
xchg
xchg
cld
rclb
or
in
fsubp
or
inc
xchg
sub
mov
adc
shl
jne
test
push
xor
mov
push
imulb
xchg
or
scas
cmc
or
push
mov
js
fucomip
and
movsl
mov
outsb
fistpll
test
sub
push
shl
loope
push
gs
stos
mov
call
popa
out
push
and
mov
cmp
mov
sub
or
in
lds
or
xchg
into
repnz
jge
push
popf
dec
pop
add
bound
addl
jmp
mov
mov
jp
push
fsubl
je
aas
test
sub
lahf
add
aam
fdiv
int3
imul
lret
lds
outsb
push
inc
scas
sahf
xor
xor
dec
mov
shrl
adc
pop
xor
jle
add
dec
mov
ja
mov
mov
cmpsl
out
test
jp
jns
sbb
inc
xor
cmc
sbb
lods
and
lods
insb
dec
ja
hlt
push
lock
add
or
inc
xorl
sbb
sbb
adc
cmp
data16
jge
mov
lea
cmp
or
sbb
mov
dec
dec
jl
push
lcall
pop
pop
rorb
insb
js
pop
mov
jl
shll
push
popf
sub
jmp
adc
pop
sub
out
mov
push
bswap
mov
ret
add
data16
xor
in
sub
jne
int3
sbb
xchg
dec
sub
in
jnp
outsb
fcomip
or
xlat
in
enter
and
sub
imul
sub
insl
or
lods
jns
dec
push
out
popa
push
andb
jp
out
cmpsb
fstps
xor
xchg
ret
outsl
jb
in
xor
jnp
or
jmp
insl
xor
mov
test
dec
sbb
nop
sbb
lods
push
into
adc
stos
in
pop
inc
leave
jno
inc
push
cli
sub
cmp
cmp
fucom
xchg
int3
nop
bound
cmp
sub
pop
adc
add
cmp
pop
mov
das
in
or
sti
jp
add
loopne
dec
cmpl
std
aad
daa
jg
mov
in
add
sub
push
mov
cmp
stos
test
sub
jno
popf
jnp
negl
ficoms
gs
pop
jnp
adc
sbb
adc
ror
jle
jne
push
inc
mov
xchg
jne
jge
or
out
mov
sahf
rcll
mov
push
faddl
scas
outsl
in
dec
cli
push
test
outsb
sub
je
dec
push
add
inc
sub
mov
push
cmp
dec
pop
mov
mov
mov
jno
gs
push
js
lods
cwtl
das
stos
and
shrl
jo
icebp
ret
leave
out
repz
xchg
xor
jge
push
aam
sbb
cmc
or
roll
adc
aaa
hlt
jno
pop
fs
xor
mov
cmp
imul
and
rolb
and
fucomi
add
sbb
xchg
fcoms
mov
or
mov
jmp
fwait
add
popa
jg
popa
pop
push
into
pop
call
mov
cmp
out
jge
mov
and
pusha
cs
inc
mov
xchg
cld
sub
fcomps
fs
mov
cld
into
repnz
addb
fimull
insl
jle
repz
stos
inc
js
cmpsb
sub
sahf
sub
sti
fstps
rdmsr
xor
push
jne
in
dec
movsl
subb
and
xchg
test
cmp
out
lcall
ret
push
mov
adc
push
mov
cmc
pop
aam
pop
mov
xchg
xchg
cmpb
aam
jns
push
lock
pop
cli
stos
lahf
stos
das
ret
pop
pop
call
pop
mov
mov
idivl
pop
test
jge
shlb
popf
sub
ljmp
xor
stc
test
mov
jns
gs
pop
mov
jae
js
cmp
lea
jg
hlt
xor
jg
out
ret
pop
notb
xor
pop
imul
add
mov
shr
sbb
mov
je,pt
mov
xor
lret
or
xchg
mov
sti
shlb
mov
movsl
adcl
movsl
push
dec
lods
cmpsl
inc
int3
call
daa
shll
sub
cmpsb
jp
icebp
push
mov
sub
out
clc
cld
sbb
dec
aas
xcrypt-ofb
cmpsl
stos
sbb
ljmp
cmpsl
pop
mov
ds
mov
daa
iret
aam
adcb
insl
sbb
xchg
loop
pop
cld
push
in
xchg
int
adc
insl
je
jbe
dec
lods
out
xor
cltd
repnz
xchg
dec
jge
xor
or
cwtl
mov
shrl
mov
jg
pop
push
dec
pop
shrb
cli
popa
outsl
lods
inc
test
outsb
loopne
sbb
sar
imulb
xor
lea
xchg
xchg
xchg
mov
jecxz
xor
mov
pusha
pop
lea
es
add
push
lods
mov
add
adc
mov
inc
pop
dec
pop
shrb
daa
insb
mov
push
adc
idiv
in
or
xor
shrl
adc
ffreep
sub
dec
or
rorb
dec
aaa
xchg
adc
cmp
cltd
popa
mov
mov
lcall
ret
sbb
imul
pop
leave
aam
std
push
nop
loopw
jns
aam
ja
or
mov
mov
push
into
incb
imul
into
test
mov
mov
push
pushf
daa
inc
sub
cmp
jo
in
aaa
mov
int
repnz
test
shl
int
pop
or
cld
idiv
je
push
push
cmp
mov
and
mov
subb
ds
and
pop
iret
enter
or
xchg
clc
int
pushf
cmp
add
jecxz
dec
jnp
inc
stos
dec
loope
pop
das
test
ficomps
add
pop
les
and
dec
aam
nop
xchg
xchg
jg
inc
les
sub
add
adc
aad
mov
gs
sub
push
stc
sbb
stc
jnp
pushf
mov
cwtl
mov
shrb
dec
mov
hlt
jmp
clc
inc
mov
gs
or
fcoml
add
sarl
das
xchg
mov
sbb
mov
xlat
faddl
xor
mov
add
out
pop
fsubl
pop
mov
cltd
push
je
pop
mov
adc
inc
xchg
mov
or
mov
push
mov
cltd
xor
stos
fidivl
jl
sub
popf
int
daa
inc
xor
arpl
jge
orl
mov
mov
xlat
gs
popa
aam
ja
icebp
mov
push
aad
hlt
pop
sbb
int3
mov
mov
fs
fdivrp
lahf
mov
adc
out
adc
std
jo
inc
mov
or
xor
and
fisttpll
ljmp
jb
pop
roll
or
add
pusha
call
inc
adc
push
or
xchg
sbb
mov
pop
mov
xchg
pop
and
fwait
aam
loopne,pn
and
dec
stos
mov
fsub
sbb
dec
push
jge
shlb
mov
jb
or
mov
je
mov
cmp
inc
xor
dec
in
push
pop
dec
adc
mov
add
out
lock
xchg
nop/reserved
into
sbb
cmp
test
xlat
js
jle
jne,pn
roll
sub
in
pusha
data16
je
jecxz
ret
jge
pop
mov
and
mov
jno
mov
mov
incl
push
jecxz
das
es
and
mov
iret
push
pop
jbe
xor
stos
mov
ljmp
inc
shlb
pop
pop
stc
add
cmp
xor
push
lods
cmpsb
jns
inc
xchg
cmp
sbb
insb
or
mov
rorb
insl
xchg
movsb
sbb
push
inc
jns
jo
sbb
dec
xchg
imul
push
sahf
xor
pop
fsubl
ss
jno
dec
lds
sub
pop
push
cmp
jg
incb
cmpsb
mov
jg
or
xor
sbb
cmp
sbb
mov
or
jae
xchg
arpl
pop
mov
mov
or
or
jmp
inc
add
outsl
cs
jns
adc
sub
fldl
fnstsw
mov
pop
mov
add
jne
aam
jne
mov
or
sbb
fnstcw
add
or
pop
lret
cmpsl
js
mov
xor
or
cmpsb
aad
pop
daa
pop
mov
mov
rorl
xchg
jne
mov
jmp
es
jno
jo
movsb
enter
stos
adc
in
orb
and
jnp
icebp
rclb
stos
testb
pop
inc
notl
stos
pop
xchg
sbb
es
loope
jo
dec
sub
call
pop
outsl
cmp
divb
bound
lahf
add
out
int
fisttpl
enter
stos
and
sub
add
pop
or
push
ljmp
mov
je
shll
pop
gs
imul
in
push
pop
cwtl
inc
jl
adc
jle
pop
loope
jle
popa
push
xlat
xor
stc
sub
loop
subl
sub
xchg
lret
xor
stos
sub
push
lahf
repz
mov
add
mov
xchg
in
and
mov
cmp
shll
jp
inc
or
jae
xchg
inc
outsb
push
pop
movsl
test
aaa
imul
out
fisubs
jne
or
dec
outsl
sub
push
in
adc
mov
pop
rcrb
push
jns
cmp
jp
mov
push
popf
test
ret
cmp
jl
adc
pop
push
fstl
dec
insl
inc
addr16
cmpsl
fs
inc
cmpsb
lock
mov
xlat
int3
add
arpl
mov
fwait
mov
dec
outsb
cwtl
test
daa
mov
adc
cmpsb
loopne
jns
inc
imul
cmpl
inc
ret
out
jb
cmp
sub
sti
xor
cmc
ja
stos
push
jg
ss
ja
xor
push
jle
mov
in
or
clc
test
jae
test
adc
outsb
das
sub
enter
pop
ror
mov
mov
into
mov
pop
or
or
sub
imul
call
aaa
mov
push
add
stc
inc
dec
jl
outsb
sub
sub
mov
fnsave
pop
shrb
shr
mov
fnstsw
ja
call
clc
mov
or
movl
roll
mov
or
test
xor
int3
push
push
inc
loopne
or
lret
fisttps
mov
xlat
add
sub
loope
cmp
in
inc
xchg
negb
xchg
mov
rcl
repnz
ds
mov
mov
pusha
shr
testl
aas
pop
dec
lods
lock
mov
pop
scas
loop
jno
inc
cmpsl
aad
mov
mulb
push
dec
push
std
fnstsw
pop
iret
or
incl
dec
pop
jno
clc
cmc
mov
ljmp
pop
sub
add
je
shlb
xor
aam
jb
es
test
sahf
fisubl
mov
cli
call
roll
jb
jb
add
mov
scas
imul
cmp
pushf
ret
sbb
fmull
and
pop
add
fbstp
mov
repz
aaa
pop
or
cltd
out
cld
sbb
and
fwait
sub
or
outsl
add
and
inc
dec
mov
and
mov
mov
or
jmp
scas
sbb
lods
js
push
dec
icebp
ja
mov
or
orl
and
add
inc
out
xorl
or
movsb
lahf
pop
mov
and
das
jb
rcll
incl
cld
sti
add
lret
movsl
mov
frndint
adc
std
mov
in
les
or
cmp
imul
ss
pop
adc
xor
lds
mov
outsl
mov
std
and
daa
inc
movsl
cs
cltd
je
dec
loop
mov
ljmp
jne
lret
dec
out
add
cmp
inc
dec
out
int
dec
daa
or
int
in
pop
mov
and
jns
stos
xchg
adc
inc
xor
mov
leave
xchg
inc
data16
adc
nop
out
dec
push
pop
loopne
sub
jge
push
ret
mov
sbb
sti
jg
mov
adc
in
out
push
push
mov
cmc
stos
adc
test
ja
inc
js
push
jl
cmp
jbe
mov
inc
pop
cmp
ficomps
mov
dec
int
in
pop
loope
jne
push
xchg
das
mov
enter
mov
jmp
sbb
add
xchg
xchg
bound
pop
pop
ret
cmpsl
xchg
jg
iret
dec
loop
stc
push
jne
out
pusha
pusha
ja
push
mov
xchg
add
les
out
out
cmp
push
lret
insl
mov
pop
jl
data16
inc
repz
jb
xor
mov
test
sub
test
imul
xor
cmc
testb
and
gs
sub
jl
cmc
mov
add
addl
mov
mov
cmpsb
lcall
xchg
inc
out
pop
mov
xchg
es
cmp
fsts
push
sbbl
and
sti
jnp
fidivl
push
add
shlb
dec
fstps
or
sbbl
dec
in
mov
mov
mov
xchg
push
jne,pn
xchg
sbb
out
pushl
gs
xor
sbbb
mov
insb
test
or
push
mov
je
add
inc
mov
ret
sti
popa
cmpl
in
lods
les
std
xor
lods
jo
dec
cmp
ret
outsl
xchg
int3
mov
mov
pop
cmp
push
push
pop
inc
mov
les
test
pop
xchg
xchg
adc
faddl
mov
mov
sbb
sub
mov
iret
xchg
jbe
inc
inc
sbb
and
push
daa
in
in
jge
mov
push
shrl
aad
inc
fdivr
fcoml
mov
inc
cmp
add
lods
out
push
and
rorl
fwait
or
inc
inc
push
pop
push
les
mov
mov
inc
xchg
loop
daa
and
fsts
out
xor
and
fiaddl
push
dec
push
ljmp
sahf
and
xchg
dec
clc
nop
sub
cs
roll
cmpsb
sbb
mov
jmp
dec
test
aaa
add
nop
pop
ljmp
mov
or
js
xor
int
adc
xor
xchg
sbb
stos
dec
adc
push
mov
imul
popl
inc
fnsave
lds
jecxz
jb
fiadds
imul
aas
aam
cld
jge
mov
jbe
or
push
lahf
es
push
jae
xlat
adc
xorb
lock
sub
das
xchg
and
call
sbb
in
data16
jns
push
leave
and
mov
add
sbb
sbb
jge
mov
cmp
pop
inc
adc
add
push
pop
sbb
pop
dec
push
sarl
scas
inc
mov
or
faddp
mov
jmp
push
stos
sub
xorb
xchg
jecxz
nop
add
lahf
add
lcall
pop
out
pop
lcall
ljmp
pop
lcall
pop
aad
lret
in
lret
mov
cwtl
adc
sbb
adc
add
rcrb
rolb
mov
sbb
orl
mov
in
das
mov
cwtl
es
pushf
out
fs
inc
push
push
dec
xchg
mov
or
daa
cmp
pop
jae
push
mov
pop
cwtl
inc
in
popa
and
mov
fs
ds
or
sbb
jne
pop
xchg
adc
in
js
in
sub
cwtl
and
inc
pop
dec
jne
sbb
dec
adc
mov
popf
sbb
loope
inc
and
mov
bound
mov
clc
dec
popa
jno
push
xor
arpl
xor
jne
inc
push
mov
xchg
in
jecxz
xor
iret
xchg
sbb
repnz
shll
push
nop
mov
js
adc
andb
je
push
jne
daa
inc
aad
ljmp
divl
shll
push
imul
orb
les
popa
mov
imul
icebp
mov
outsb
mov
push
pop
mov
xor
jne
data16
dec
clc
gs
sbb
call
call
dec
push
pop
cmp
mov
jp
jne
jb
mov
sub
hlt
and
dec
fstpt
lret
pop
lahf
out
loop
shll
loope
test
enter
inc
in
packuswb
pop
jge,pn
arpl
cmp
sub
into
les
outsb
adcb
push
pop
jle
rclb
inc
insb
mov
es
add
out
sbb
xchg
and
outsl
mov
lea
push
fistps
pushf
jg
repnz
inc
movsb
insl
mov
and
in
xchg
lret
mov
push
mov
leave
clc
movups
outsb
mov
std
fld
ja
xor
or
and
sub
ret
outsb
push
dec
dec
and
out
push
push
loopne
mov
mov
cmp
or
push
jno
mov
pop
scas
je
dec
and
mov
add
inc
outsb
btc
cmp
movsb
xchg
xor
clc
int3
pop
jbe
mov
and
outsb
scas
dec
out
subl
mov
test
xchg
jae
inc
das
pop
ret
lea
clc
sub
fistl
sub
shrl
test
scas
into
popa
jle
cmp
pop
add
xchg
inc
nop
enter
or
pop
xchg
pop
add
mov
clc
adc
lods
ss
push
cli
call
std
add
pop
dec
dec
cmp
push
cmp
hlt
jmp
lret
pushf
sub
cmp
mov
xor
xchg
or
outsl
out
or
ret
lret
inc
xor
scas
es
sahf
jl
mov
repnz
repnz
sub
ss
cmc
or
cmpsb
pop
lds
sub
mov
mov
pop
adc
pop
mov
cmp
orb
mov
aas
loope
call
shrd
aad
lcall
mov
insb
and
aam
cmp
in
or
dec
mov
jmp
aas
cmp
rcr
cmp
aaa
sub
cs
in
jge
dec
stos
test
push
hlt
iret
jb
data16
inc
mov
mov
mov
mov
aam
incb
mov
cmp
xor
out
pop
pop
xchg
ret
sbb
xchg
xchg
repnz
or
arpl
movsl
dec
idiv
int
mov
into
clc
xor
fcmovnb
xor
cmp
jae
aad
inc
mov
fsubrl
int
out
test
push
aaa
add
loop
and
test
jmp
dec
cmpsb
cltd
sti
or
push
jae
insl
nop
sbb
xchg
push
inc
imul
loope
ret
adc
sub
mov
xchg
lea
fs
daa
mov
dec
xchg
mov
inc
cli
adc
fistps
add
push
jge
setno
cmpsl
addb
push
fldcw
push
jmp
jmp
out
int
xchg
jae
sub
mov
and
jne
push
dec
fwait
and
and
out
lret
loope
out
insl
fmuls
push
cmp
cld
pop
idivl
flds
sub
fistpl
mov
add
and
mov
push
repnz
pop
ret
in
sbb
leave
jns
inc
xorb
dec
int3
lret
ds
out
xchg
pop
ljmp
hlt
lods
and
lock
movsl
in
int
xor
fcomip
outsl
mov
ret
push
sbb
sbb
mov
sarl
mov
cltd
fstl
sbb
jle
pusha
or
push
cld
cmpsl
divl
inc
lock
jl
cltd
in
aad
sti
mov
push
pushf
pop
mov
cltd
mov
pusha
mov
fisubl
cmp
sub
xor
mov
adc
pusha
pop
es
dec
aad
push
push
adc
paddsb
enter
mov
lret
inc
sub
shll
out
jae
xchg
mov
push
pop
and
lret
push
pop
xchg
jl
inc
adc
insb
into
pop
aaa
adc
dec
pop
pop
inc
jnp
cmp
pop
out
mov
js
jmp
push
lds
mov
fists
mov
int
sbb
inc
aam
jl
xchg
mov
enter
shlb
mov
aad
pmulhw
ja
mov
gs
in
cmp
jnp
insb
es
in
loop
mov
mov
ja
mov
lods
push
mov
jbe
sbb
in
lock
mov
pop
and
xor
in
js
cli
aam
test
jne
mov
rolb
sub
loop
bound
and
mov
pop
test
repz
or
vmaxsd
pop
mov
jno
xor
pop
js
pushf
jge
or
lods
or
dec
xor
stc
xchg
addr16
sbb
ja
mov
cmp
mov
push
adc
out
dec
sub
pop
xchg
sbb
stc
loope
and
xchg
mov
push
push
mov
lcall
mov
call
sti
push
insl
sahf
and
loope
dec
leave
adc
or
es
mov
jmp
pop
rcrl
loop
fsubl
in
or
pop
shlb
sbb
sub
xchg
test
imul
in
hlt
pop
hlt
dec
test
imul
cmp
shll
mov
mov
fstpl
adc
sbb
sbb
and
xchg
js
xor
and
jge
push
bswap
loope
push
std
mov
jns
iret
mov
mov
cli
inc
int
fldt
or
shlb
scas
in
and
sbb
jo
sub
cld
mov
dec
lret
xchg
push
imul
scas
clc
lret
loop
mov
sbb
sbb
xorl
cld
add
loop
and
jecxz
sbb
mov
sbb
int
jl
adc
sbb
xchg
lods
ret
dec
mov
std
dec
sub
out
mov
pop
or
jg
pop
pop
xchg
sbb
repz
insl
fcompl
notl
cld
rorb
sbb
fwait
int3
push
cmpsl
leave
rorb
insl
dec
and
sahf
adc
loopne
out
cmc
idivl
pop
ja
add
adc
inc
lahf
lret
push
pop
jg
enter
int3
xchg
lahf
je
sti
dec
fcompl
sbb
es
xchg
mov
addr16
xchg
nop
pop
jnp
push
or
sti
sub
scas
push
cmp
adc
inc
roll
xchg
fists
scas
xchg
daa
sbb
pop
mov
push
add
mov
mov
test
pop
inc
pop
xor
ffreep
cwtl
das
mov
pop
gs
adc
pop
iret
outsb
lock
jo
icebp
into
push
xchg
fwait
jle
pop
pop
aas
xchg
enter
stos
sub
incb
repz
fwait
mov
push
and
push
xor
cmc
sub
pop
xchg
cmc
in
imul
add
mov
into
into
pop
mov
push
xchg
mov
lock
pop
aad
lds
dec
push
mov
outsb
popf
out
cmp
jp
mov
push
mov
daa
aad
adc
cmp
mov
stc
cmp
inc
push
outsb
je
and
add
inc
adc
jns
outsb
pop
dec
mov
std
dec
mov
es
inc
pop
outsl
cmp
es
loopne
stos
pop
fs
pop
jg
inc
stc
inc
adc
rolb
mov
add
test
popl
pop
insb
test
mov
int
mov
xchg
mov
jge
push
insl
or
jbe
pop
dec
test
cmp
xchg
insl
mov
adc
pop
xchg
in
jbe,pt
push
js
mov
cmp
repnz
dec
loopne
and
gs
sub
sti
or
out
std
jecxz
or
add
sbbb
mov
mov
fsubs
cmp
sbb
imul
pop
out
in
jns
hlt
cmpsl
loop
dec
aaa
hlt
mov
xchg
and
je
leave
lds
adc
decb
jp
inc
sub
dec
imul
cmp
and
imul
enter
stos
sub
dec
sti
mov
mov
xchg
dec
pop
push
cmp
add
mov
push
nop
iret
mov
adc
int
pop
mov
or
xor
ljmp
inc
lahf
in
shl
xchg
jge
data16
xchg
stc
add
pushf
push
outsl
and
mov
mov
lock
push
int3
js
leave
and
push
sti
dec
mov
fildl
cs
sahf
mov
mov
aaa
push
cmp
xchg
adc
lea
xor
sbb
orb
cmp
lahf
sbb
pop
xrelease
shll
out
pop
jbe
mov
sti
sbb
inc
push
dec
mov
scas
repnz
and
jg
pop
or
dec
dec
in
in
in
repnz
mov
movsb
stc
xchg
or
out
shrb
mov
in
in
dec
movsb
lcall
mov
dec
aad
add
aam
cltd
fucom
and
inc
xchg
xor
pop
add
mov
int3
in
adc
fnstcw
scas
jmp
and
mov
lods
test
mov
dec
jno
push
psubq
loope
sub
mov
cs
es
jp,pn
jmp
adc
insb
aas
and
mov
and
mov
jmp
push
aad
cmpsl
in
mov
out
test
repz
cmp
outsb
or
mov
scas
mov
outsb
mulb
add
add
ret
lcall
jg
hlt
aaa
jo
mov
inc
dec
pop
movsb
and
movsb
sbb
stos
add
pop
subb
iret
pop
sbb
mov
cld
cltd
and
aad
push
lods
insl
mov
flds
lcall
mov
repnz
add
leave
icebp
test
cmp
dec
ds
xchg
repz
lock
xchg
xor
out
js
iret
pop
pop
and
push
aaa
dec
sarl
movsb
lcall
mov
xor
push
lods
push
insb
xor
jecxz
pop
lock
cmp
leave
lods
mov
push
filds
aas
shlb
adc
xor
push
xor
adc
outsb
fistps
sub
mov
aaa
xlat
test
mov
add
cli
mov
int3
jnp
jb
dec
shrl
jecxz
adc
and
fucom
sub
jmp
xor
stos
sub
xor
push
mov
in
sbb
push
dec
mov
push
jp
dec
mov
mov
add
sub
dec
cmp
int3
std
imul
enter
in
mov
rcrb
sub
imul
mov
push
dec
mov
mov
sbb
notl
push
mov
inc
cmp
push
mull
jnp
movsl
xor
sbb
inc
outsb
push
fisubl
mov
rcll
dec
and
inc
jle
pop
cld
push
pusha
mov
sub
aam
sub
int3
mov
jmp
sub
shlb
mov
pop
cmp
aaa
inc
push
xchg
in
push
mov
and
enter
fisubs
add
dec
xchg
shll
mov
pusha
aam
dec
xchg
dec
fsincos
addb
fs
addl
ss
mov
outsl
mov
adc
out
pushf
cmpsb
mov
inc
cmpsb
cmp
add
ljmp
add
sahf
lds
jne
xchg
test
and
loop
shrb
into
imul
xor
and
dec
sbb
imul
mov
test
pushf
jnp
lcall
outsb
lea
stos
xchg
pop
out
outsb
mov
pusha
mov
cmpsl
iret
sub
test
imul
push
outsl
call
adc
mov
pop
cmp
jne
xchg
inc
test
cmovns
dec
or
pusha
pusha
cmp
out
lea
fisubrl
pop
pop
enter
pop
xor
and
jmp
lea
aad
mov
push
add
mov
jne
movsl
push
dec
leave
or
xchg
pop
in
call
fwait
jp
ljmp
push
jnp
dec
add
loope
fadd
shl
test
dec
and
popf
test
push
nop
das
add
push
loope
jecxz
pop
lret
rcll
jo
push
mov
int
or
popf
fwait
scas
fs
push
lcall
loopne
mov
dec
sub
aam
xchg
cltd
jne
and
cwtl
addr16
mov
inc
leave
push
out
or
sti
mov
nop
sbb
leave
fs
cmp
push
mov
push
cmp
and
push
push
push
dec
loop
or
lods
cmp
push
jno
push
nop
and
int3
mov
mov
nop
cmp
out
call
movd
fmuls
sbb
fidivrs
cwtl
inc
xchg
test
jecxz
idivb
and
jp
popa
jae
pop
push
jmp
outsb
xchg
fidivrs
push
divl
mov
and
mov
cmp
add
mov
xchg
cwtl
call
andl
ljmp
inc
and
std
add
mov
adc
fwait
out
push
clc
popa
cwtl
icebp
add
imul
mov
insb
sub
jp
jp
xchg
lret
inc
test
mov
push
mov
testb
adc
pop
movsb
or
mov
mov
cli
dec
xorb
sub
push
notl
inc
cmp
adc
sub
or
jg
jmp
pop
push
daa
scas
pop
sahf
sbb
dec
in
scas
rclb
inc
sarl
sub
mov
fildll
mov
lahf
xchg
mov
scas
dec
or
push
leave
test
nop
xor
ljmp
roll
and
sub
lods
push
ret
adcl
cs
inc
stos
lcall
jo
push
loop
in
std
dec
cmp
call
loopne
mov
orb
cwtl
push
jns
lcall
mov
scas
adc
sbb
xor
enter
sub
stos
dec
xor
sbb
cmp
mov
fidivl
lods
mov
mov
dec
dec
adc
adc
add
ljmp
mov
out
aas
pop
data16
sub
push
mov
mov
mov
inc
cmp
sti
fadds
add
in
jno
add
mov
mov
sbb
xchg
int
cmp
mov
cmpsb
leave
xor
jecxz
mov
loope
push
lods
mov
cmc
dec
mov
adc
or
in
in
mov
lea
mov
fs
stos
idivb
mov
push
cwtl
sbbb
icebp
mov
add
xchg
cmp
pop
pusha
int
and
jecxz
pushf
movsl
into
test
fstpl
jmp
dec
and
in
mov
add
pop
ja
test
push
inc
lock
add
lcall
push
dec
sbb
and
mov
and
jl
addr16
push
jbe
sub
mov
mov
outsb
int3
xor
add
nop
dec
cltd
test
sub
fwait
scas
push
lea
inc
jecxz
push
out
mov
pusha
push
insb
scas
and
popl
fs
mov
xchg
inc
in
lret
pop
push
ds
or
and
lahf
jp
scas
xor
or
sub
inc
out
push
mov
in
pushf
shlb
sbbb
mov
movsl
jg
jg
push
push
leave
sub
cli
popa
push
repnz
into
add
insb
loope
rcll
mov
inc
scas
mov
fstpt
jmp
jns
mov
loop
mov
je
ja
in
sbb
add
icebp
sti
and
aaa
sbbl
jae
ds
cld
stc
test
add
ret
sbb
fsubrp
call
leave
cmc
rolb
cli
ficoms
cvtps2pd
dec
cld
xor
inc
jge
loop
xor
repz
fistps
dec
jno
or
push
pop
jne
and
inc
jg
js
fistl
mov
xlat
xchg
neg
icebp
mov
imulb
lods
imul
outsb
les
leave
inc
push
mov
mov
sahf
fistpll
scas
jg
out
mov
out
js
jmp
stos
daa
ljmp
lret
loop
pop
jne
in
fnstcw
xor
sti
pop
cwtl
xorl
adc
xor
jle
xor
jbe
gs
sub
repnz
sbb
xchg
enter
rclb
jo
push
insb
std
out
insl
jns
push
incb
fisubrl
call
sbb
adc
test
lret
adc
int
xchg
or
or
fldl
subl
sub
jmp
hlt
inc
jg
pop
das
mov
inc
and
je
inc
pop
lea
in
lahf
xor
lret
xchg
push
mov
movsl
dec
in
or
jle
mov
xchg
mov
out
push
mov
jno
out
cmc
std
into
stos
inc
pop
shll
ret
fdivrs
mov
rclb
inc
js
aam
cmpl
fs
or
mov
fcomps
shr
std
push
dec
insb
sti
push
sahf
jo
mov
ret
push
adc
cmp
push
stc
scas
xor
repnz
lahf
mov
dec
jb
jecxz
mov
mov
sub
sarl
ja
mov
jle
mov
or
cwtl
xchg
ret
test
dec
pusha
mov
ret
mov
mov
outsl
jecxz
out
out
sarl
sub
gs
jecxz
xor
xchg
outsb
push
arpl
sbb
dec
or
or
out
popa
inc
lret
dec
insb
pop
adc
cld
inc
les
fst
outsb
test
cmp
xor
or
dec
shlb
lret
push
gs
hlt
jmp
sub
xor
mov
rcr
cmp
ss
jne
arpl
add
push
testl
rorb
add
cmp
jge
cmp
scas
in
in
cmp
push
pushf
sub
sbb
rorb
call
mov
test
mov
js
xchg
push
sbbb
lods
pop
lcall
lret
jge
lea
adcl
lcall
pop
xchg
cmc
sbbl
stos
cwtl
dec
cmpsl
fsubl
mov
je
mov
rorl
mov
dec
mov
pop
push
outsl
push
jae,pt
fbstp
cmc
mov
pop
in
jnp
sbb
xchg
into
mov
in
and
insl
lock
sti
out
inc
dec
das
dec
ljmp
std
sbb
or
push
sub
xchg
cmpsl
push
stc
std
lahf
dec
sub
mov
iret
adc
aam
pop
and
sbb
lock
fstps
mov
cmp
out
push
imull
fidivrl
xor
xchg
adc
mov
int3
inc
js
push
push
pop
or
xor
sbb
ds
inc
lret
fwait
jae
scas
shrl
mov
adc
js
jge
xor
mov
std
outsl
in
sahf
push
dec
xchg
mov
cltd
xlat
xchg
jp
mov
test
mov
add
test
and
mov
sti
scas
pop
ds
in
mov
mov
jl
and
sub
xor
jle
mov
push
jp
mov
fidivl
pop
imul
mov
mov
insl
hlt
loopne
lcall
shlb
iret
mov
dec
push
daa
jnp
dec
jmp
and
mov
lret
or
add
mov
cs
jp
lods
mov
cmp
inc
sbb
pop
xchg
add
ror
push
sub
bound
xchg
add
mov
xchg
add
jecxz
jb
pop
imul
fs
je
pop
test
adc
addr16
test
sbb
sbb
push
negl
enter
paddusw
jg
mov
mov
test
popa
dec
outsl
sti
push
imul
pop
push
mov
popf
idivl
push
or
jle
aad
shlb
mov
mov
stc
adc
cmp
inc
cs
inc
jg
ret
adc
mov
pop
push
sbb
and
testl
push
and
pop
add
pusha
subb
sti
mov
aam
aam
mov
sub
sub
das
adc
imul
add
scas
divl
dec
mov
enter
scas
out
mov
or
ja
pushf
xchg
push
add
fnstsw
jp
and
dec
test
jmp
lea
rcr
andb
out
ficoms
sub
sbb
and
stc
jne
xchg
push
jno
mov
std
dec
enter
fwait
mov
movsl
dec
leave
loopne
xor
inc
lret
mov
sti
sbb
mov
imul
loopne
in
in
fisubrl
sbb
push
push
mov
rolb
cmp
call
lcall
out
push
push
test
xchg
mov
loop
jmp
adc
addr16
cld
incb
scas
cmp
mov
int
xchg
incb
pop
dec
ja
adcl
xor
pop
mov
mov
jle
pop
inc
inc
push
in
mov
outsl
xchg
in
out
inc
inc
sub
sub
stos
adc
outsb
push
arpl
test
pop
cmpb
cltd
leave
mov
cmpsl
cld
dec
dec
mov
into
ds
ja
sbb
aas
in
xor
sub
icebp
lods
lret
sbb
cwtl
loop
jne
mov
mov
mov
sub
jecxz
mov
push
outsl
enter
xchg
jl
call
xchg
dec
cmp
out
test
in
ret
lods
mov
out
jae
and
out
out
rcrb
loope
int
jle
xor
pop
pop
cmc
iret
js
cmp
stc
adc
and
les
ja
stos
inc
div
jmp
mov
decl
cmpsb
dec
cmp
sbb
in
in
scas
jge
inc
movsb
push
inc
inc
mov
pusha
sub
out
xchg
pop
movsl
loope
xchg
rcll
pushf
iret
lds
pop
cmp
test
filds
pop
sbb
cmpsb
shrl
cmp
dec
cs
mov
add
scas
or
jbe
cmp
mov
mov
cmpsb
sbb
lea
test
lcall
cmpsl
adc
ror
jnp
pop
scas
mov
cmp
jae
pop
into
insl
xor
jle
mov
icebp
movsl
imul
mov
pop
sar
push
cmp
repz
cwtl
sbb
aaa
aas
sbb
mov
xchg
add
xor
dec
pop
aad
cli
sub
jae
xor
mov
inc
es
nop
xor
jae
jb
xor
cmpsb
out
je
xor
hlt
mov
out
pop
fdivrs
lock
call
pop
sbb
aaa
adc
leave
stos
sti
add
imul
adc
inc
xchg
or
dec
adc
adc
inc
xor
push
jnp
xor
push
incl
inc
jmp
push
mov
test
in
fdivp
cmp
ret
adc
mov
mov
dec
mov
lret
or
andb
dec
int
lahf
push
jmp
sbb
fsubr
add
jge
pop
jno
dec
mov
push
insb
dec
lret
mov
leave
js
add
xchg
lock
jne
pop
mov
sarl
aaa
cmpsl
rorb
stos
push
jbe
inc
mov
rcrb
outsb
insl
xor
insl
shr
pusha
jmp
lahf
jg
mov
jo
xlat
std
inc
mov
icebp
pushf
out
out
std
add
xchg
bound
push
ss
mov
xchg
xchg
ss
cmpsb
xchg
mov
lods
imul
jl
dec
pop
out
inc
xorb
fiaddl
xchg
sub
icebp
cmp
gs
popf
adc
out
mov
xchg
mov
jmp
adc
dec
sub
das
mov
popf
arpl
sub
sahf
mov
pop
test
sub
xchg
pop
arpl
pusha
mov
mov
ret
and
mov
and
loop
loopne
cmpsl
mov
mov
sub
in
sub
inc
sub
cmc
inc
lds
dec
cli
cmp
outsl
mov
mov
or
imul
sti
add
std
inc
jmp
outsl
push
ds
or
mov
mov
jl
jp
jnp
jp
aam
leave
jmp
inc
fiadds
dec
shll
insl
mov
push
in
mov
push
rcr
jbe
push
push
cmp
mov
adc
ret
push
arpl
movsl
insb
test
cwtl
pop
out
jg
popfw
add
cwtl
adc
sbb
add
insl
and
pusha
xor
aam
sahf
out
xchg
bound
and
jp
das
iret
shr
int3
lds
cwtl
cmp
daa
js
jnp
dec
inc
xchg
cmp
and
or
inc
cmp
xchg
lret
sbb
in
cmc
ds
pop
daa
popa
fimull
scas
sub
sar
adc
rorl
xchg
addr16
nop
lds
jl
mov
rsm
xor
ret
stc
or
and
std
sub
fdivrl
cltd
sub
or
es
lea
push
mov
mov
ret
fidivs
out
cli
rol
xor
cmpsl
sbbl
movsl
add
mov
test
bound
dec
adc
leave
mov
test
aam
loopne
inc
and
lcall
dec
ja
jns
cmp
test
sbb
inc
sub
xor
push
stos
mov
arpl
xchg
or
mov
cmc
orl
or
dec
sbb
dec
ja
lret
inc
outsb
jmp
jae
sub
xor
testl
outsb
fnstcw
mov
mov
pop
mov
pop
xchg
int
inc
jae
divl
cmc
imul
dec
mov
sub
fs
bound
mov
sbb
and
rorl
sbb
int3
loop
pop
popa
daa
xor
jnp
fwait
mov
xchg
jecxz
xor
mov
icebp
and
shll
push
lods
mov
test
xchg
gs
cs
sbb
fs
fstl
insb
cmp
or
mov
in
clc
lock
lret
jmp
ret
int3
fdiv
and
push
inc
pop
cmp
pop
mov
mov
jb
andb
xchg
roll
ret
mov
dec
sub
popf
inc
and
jmp
popa
jnp
push
jno
inc
xchg
adc
movsb
inc
stc
cld
rcrb
sti
sti
dec
sbb
insb
test
mov
sbb
or
adc
sub
mov
dec
inc
add
sbb
test
addl
xchg
push
cmp
jo
dec
sbb
and
aas
mov
jmp
or
movsb
xchg
loope
cmp
sub
sbb
das
popa
lret
cmp
pop
shrb
repnz
stc
mov
jmp
dec
jns
lret
pop
inc
mulb
pop
ss
mov
pop
mov
mov
push
test
fstpl
ret
movsl
stos
jl
fbld
cld
pusha
or
dec
jns
jae
in
inc
mov
jmp
into
std
lcall
and
out
push
orl
xor
mov
dec
clc
adc
inc
and
jnp
adc
dec
dec
addl
in
aaa
sbb
fs
xor
adc
pop
int
push
sar
dec
lock
mov
or
stc
push
inc
imul
inc
pop
je
fidivrl
ds
test
xlat
sbb
ds
mov
sub
bound
xchg
imul
push
setae
push
xor
sbb
adc
cmpsb
adc
cld
xchg
test
std
lock
fldcw
dec
and
ret
movb
dec
arpl
jecxz
pop
enter
in
mov
xchg
pop
in
jle
frstor
xchg
mov
cmc
in
push
xor
lds
pop
orb
dec
mov
dec
pop
or
xchg
ljmp
pushf
scas
and
cwtl
pop
pop
test
inc
cmc
or
sti
xchg
ret
gs
fwait
int
call
mov
dec
inc
hlt
mov
mov
testl
xchg
enter
add
lods
xchg
jnp
mov
daa
sbb
xchg
in
inc
nop
aam
pop
repnz
aaa
popa
or
xor
sarl
dec
cmp
xor
adc
ja
aas
xor
popf
aam
mov
mov
pop
pushl
es
stos
adc
mov
cmp
push
fisttpll
xchg
jne
scas
pop
xor
mov
jmp
mov
sahf
jb
out
dec
imul
imul
mov
rorl
pop
mov
xchg
adc
ret
mov
mov
pop
inc
aad
mov
imul
cmc
inc
mov
xchg
aaa
push
xorb
xchg
push
stc
stos
inc
sti
xchg
adc
dec
rorb
push
and
int
outsb
andl
fstl
ret
adc
fistps
sahf
jmp
mov
or
jl
xlat
dec
sbbl
hlt
add
mov
inc
jmp
int
jne
sub
decl
sub
in
frstor
inc
jne
btc
mov
jl
jl
pusha
or
add
inc
jge
mov
inc
outsl
lret
jmp
jecxz
xchg
xor
out
sar
into
xchg
dec
mov
sbb
daa
push
adc
cld
xchg
adc
lahf
lahf
popf
fimull
hlt
hlt
push
in
mov
pop
into
or
add
push
cmp
push
mov
inc
inc
jl
push
inc
mov
scas
push
jae
pop
push
ds
dec
push
repz
jp
mov
arpl
adc
cmpsl
xchg
adc
cs
xor
jno
test
add
jo
in
dec
addl
sub
xchg
pop
iret
dec
jge
shlb
inc
div
sbb
adc
cmp
and
orl
gs
or
xor
nop
shll
sbb
pop
imul
jns
pop
jge
and
int
test
mov
inc
cs
addr16
xchg
push
xor
pop
rorb
jge
hlt
xchg
shll
loopne
test
shrl
enter
fwait
sbb
inc
movsl
in
jns
cmc
sub
xchg
repnz
mov
fiaddl
sub
popf
call
adc
sbb
test
and
add
lods
fadd
rcrb
addr16
push
lret
lods
jne
fwait
add
push
ret
add
enter
loope
lret
xchg
test
inc
sub
fidivs
jb
imul
inc
sti
and
mov
sbb
ficompl
cli
pop
inc
push
mov
sub
iret
cli
shlb
outsb
and
les
pop
xchg
repz
xor
daa
mov
out
mov
xchg
dec
cmc
inc
and
jnp
mov
sub
mov
and
or
xchg
dec
jmp
push
rorl
dec
insl
je
jo
push
les
inc
and
xchg
scas
cmc
xor
jl
or
out
jne
add
inc
adc
or
xor
xor
hlt
cmp
jns
bound
mov
xchg
insb
imul
js
addr16
std
mov
push
dec
lds
or
addr16
mov
dec
sub
test
inc
vpperm
jnp
sti
xchg
sub
xchg
lods
addr16
popf
out
scas
cli
and
adcb
out
dec
pop
mov
jnp
mov
xor
or
xor
push
or
mov
jne
inc
pop
test
adc
cmp
mov
bound
jmp
notl
fimuls
out
mov
pop
insl
xchg
loope
or
mov
mov
test
out
shrl
stos
jo
out
add
cmovb
cmp
jbe
cmp
jo
jmp
sub
scas
outsl
jle
repz
pop
mov
nop
pop
lods
fdivrl
jno
mov
sbb
pop
xchg
in
jp
jns
cld
daa
xor
pop
shll
imul
sub
xchg
cmp
psrlq
vmovdqu
out
rcrl
mov
cmpsb
push
inc
cwtl
test
or
jmp
mov
pop
daa
scas
xor
push
mov
xchg
lds
or
shrl
dec
push
pop
dec
push
mov
xchg
orl
pop
ret
adc
repnz
aaa
cltd
iret
add
stc
add
rcrl
insb
pop
mov
sbb
mov
inc
mov
sbb
sub
sbb
inc
adc
push
push
ret
subb
or
mov
inc
inc
mov
iret
fwait
call
jmp
sub
mov
lret
pop
xor
insl
sahf
stos
cmp
or
inc
pop
pop
lds
dec
loop
out
test
hlt
addr16
in
xchg
and
popf
mov
sbb
xor
test
sub
sbb
mov
inc
popf
pop
jge
icebp
lahf
dec
sub
cltd
xlat
dec
xor
pushf
daa
or
mov
test
lahf
or
jp
jp
nop
sarl
jp
enter
fdivrs
inc
mov
repz
movsb
das
mov
mov
int
jbe
neg
insl
bnd
int
jmp
repz
in
mov
mov
xchg
in
sbb
xorl
outsb
test
fcomps
jge
sbb
repnz
daa
leave
jo
sarb
les
mov
addl
add
jl
add
jg
sti
and
negb
cld
sub
mov
or
neg
sbb
mov
mov
dec
push
inc
push
scas
fdiv
ja
dec
sub
or
xor
push
xor
mov
int
push
incb
faddp
mov
xchg
imul
pop
cmp
loope
cwtl
gs
jl
into
mov
int
popl
sub
cmp
mov
and
lea
les
push
fisubrl
inc
xchg
hlt
xor
jle
insl
cmp
mov
sub
ljmp
aad
adc
jge,pn
dec
lret
inc
jmp
in
xchg
jnp
lods
ret
lea
rorl
xchg
popa
mov
inc
pushf
cmpsl
inc
inc
jne
out
add
enter
pop
push
mov
mov
cmpsl
push
mov
xor
shll
fisubrl
jo
adc
or
push
mov
testl
jb
inc
in
mov
mov
adc
mov
jecxz
js
outsl
call
ss
inc
les
in
loopne
inc
add
adc
fcompl
pushf
xchg
fstpt
push
fcoms
je
pushf
in
sub
fdivrs
push
push
sbb
leave
mov
frstor
pop
or
loopne
scas
adc
scas
push
cmp
adc
add
xchg
adc
mov
lock
mov
js
mov
into
push
push
insb
adc
add
jle
adc
sbb
daa
xor
push
or
pusha
not
inc
xchg
pop
es
cmp
outsb
js
sti
and
ret
push
aam
cli
and
movb
dec
test
jno
mov
popl
sub
jnp
fs
lods
movsl
sub
push
push
xorl
cmp
and
inc
int
dec
into
cmp
jmp
inc
add
mov
ljmp
or
loope
jle
lret
popf
dec
or
dec
sbb
mov
xchg
add
push
iret
mov
mov
aam
or
rolb
xor
outsb
sub
dec
and
fdivrp
xchg
sarb
insb
pop
repnz
push
sub
call
outsb
and
test
inc
jecxz
xlat
jmp
lret
aas
jb
xchg
sub
jae
aaa
int
push
mov
jno
mov
lcall
sbb
test
jne
popa
dec
cmp
aas
push
pop
mov
out
roll
sti
jo
aad
es
and
not
pop
out
and
push
xchg
and
fdiv
ljmp
inc
rcr
cltd
int3
cmp
movsl
std
in
dec
in
mov
jp
jl
mov
and
scas
adc
out
or
jb
sbb
pop
movsl
cmpsb
sub
adc
jno
mov
divb
jecxz
xor
sub
adc
ret
mov
stos
xchg
roll
sub
xor
movsb
push
stc
in
addb
ds
aam
pop
mov
dec
adcl
xorl
mov
pop
push
cmp
xlat
pop
andb
inc
les
movsl
mov
add
and
jge
dec
in
xlat
cmp
stc
rorb
std
mov
mov
shlb
dec
push
jmp
scas
inc
push
sub
cltd
xchg
arpl
imul
mov
mov
loopne
roll
pop
es
sbb
dec
mov
loope
xor
xor
xchg
stc
lret
lea
jecxz
pop
fcmovne
test
insb
insb
cmp
jne
adc
shrl
or
inc
je
lock
sbbb
lock
sub
mov
shrb
inc
test
imul
mov
lock
mov
notb
pop
mov
push
test
andl
je
pop
aas
nop
cs
pop
adcb
xchg
sbb
pop
movsb
and
mov
js
mov
mov
sub
ficompl
mov
mov
stos
add
fstps
fisubs
mov
fbstp
sbb
jl
jecxz
mov
fidivl
es
and
mov
and
pop
out
pop
jbe
pop
movsl
lahf
repz
loop
rcrb
cld
mov
sub
fwait
cmp
std
sub
shll
sbb
dec
adc
loop
mov
dec
push
insl
popa
cltd
loopne
mov
pop
push
sub
fidivl
inc
add
in
xor
gs
or
push
daa
pop
pusha
inc
fsubrs
inc
sbbl
das
mov
and
dec
mov
push
pop
and
fcmovb
jno
push
outsl
fs
mov
jp
push
xchg
sbb
pop
push
out
mov
push
ror
or
out
jns
mov
fisttpl
fildll
inc
sbbb
mov
mov
test
rcrb
cli
jmp
mov
mov
lds
add
pop
sbb
add
test
aas
jo
xor
inc
cwtl
pop
shlb
js
scas
mov
mov
inc
xor
mov
jg
imul
and
fs
jge
adc
sub
cltd
stos
loop
fmull
mov
into
pusha
and
push
mov
xchg
mov
sub
mov
push
mov
sbb
pop
data16
mov
daa
fmull
xor
ljmp
mov
or
lds
stc
sub
adc
loop
dec
loopne
ds
xlat
pop
fsubrl
lock
out
xchg
push
push
lret
push
lods
inc
mov
push
cmpsb
mov
pop
cs
fdivl
aaa
jbe
adcl
xchg
int3
sbb
test
pop
push
lea
rol
in
ret
std
pushf
je
jno
je
push
loop
add
xor
jb
stc
jl
mov
jne
jae
jge
sbb
in
mov
pop
jg
xchg
xchg
push
clc
jo
push
cmp
mov
xor
dec
push
in
push
xchg
lret
out
test
or
ljmp
push
mov
stos
in
mov
cs
int
bound
pop
das
aam
imul
jns
mov
lods
leave
lcall
sbb
fcoms
sub
lods
stc
inc
mov
mov
lods
std
xchg
loopne
cmp
das
mov
inc
in
xchg
lcall
in
mov
in
jl
sub
scas
sbb
fs
mov
into
sti
sbb
mov
jnp
out
push
mov
xchg
int3
or
mov
bound
mov
mov
pop
cmp
fcomps
ss
iret
fstpl
pop
and
dec
dec
cmpsl
mov
ret
sbb
sbb
push
and
call
xchg
push
pop
mov
scas
fisubrl
mov
lock
pushf
push
mov
in
je
pop
js
test
and
out
or
mov
inc
add
mov
sbb
pop
popf
scas
push
pop
push
in
pop
xlat
data16
jno
and
aaa
jle
pop
cli
ja
leave
xor
popf
fiadds
ljmp
mov
les
sub
fs
clc
outsb
jns
mov
fwait
pop
lea
pop
std
clc
add
jge
scas
jbe
gs
mov
lods
movsl
sbb
or
mov
jno
call
scas
sbb
in
adc
mov
dec
lcall
mov
popa
push
insb
mov
mov
aas
xor
mov
sbb
inc
mov
mov
fucomi
xor
or
cmp
mov
inc
or
jb
inc
fistpll
sbb
push
jp
pop
jae
pusha
cltd
cwtl
rclb
jb
dec
and
iret
push
out
in
hlt
sarb
dec
into
mov
jb
push
inc
and
jle
test
in
jge
dec
xor
dec
dec
sbb
add
xchg
xor
jl
sub
sub
pusha
lods
cmpsl
sub
cmp
ret
add
sub
mov
inc
mov
pop
pusha
test
xchg
popf
loopne
mov
inc
push
cmp
outsb
cltd
xchg
stc
movsl
mov
clc
cmp
and
sub
adcb
jne
aad
ds
subl
mov
jge
test
aaa
pusha
in
mov
movsl
cmp
pop
sbb
pop
push
lret
ret
mov
jmp
subl
xor
cs
inc
enter
popa
pushf
daa
dec
xchg
movsb
jo
insb
ret
push
xchg
arpl
add
mov
movsl
out
mov
fdivs
lock
adc
push
adc
in
daa
incl
lock
cli
sub
ret
test
roll
push
hlt
jmp
fistpll
not
xchg
lock
sub
cmpsb
xor
add
dec
ds
jle
loop
xchg
stos
movsb
mov
repnz
xchg
cli
pusha
and
lret
inc
sub
mov
push
or
xlat
mov
test
sbbb
dec
cmc
sbb
out
jbe
adc
push
add
loope
aas
enter
inc
jg
cmp
das
stc
jle
xor
xor
sbb
aaa
fldenv
inc
scas
dec
insl
shlb
std
insb
jmp
mov
sbb
jg
shl
add
add
pop
inc
pop
sub
and
bound
ret
add
test
and
stc
mov
movsl
dec
out
push
pop
dec
xchg
gs
xchg
outsl
push
nop
shr
in
repz
pop
adc
xchg
adc
dec
fsubrl
or
inc
add
int3
push
cmp
movsb
dec
mov
mov
sbbl
push
push
xor
mov
fbld
leave
fwait
jge
pushf
stos
cwtl
sub
and
jge
jae
dec
mov
pop
xor
stos
or
ljmp
mov
mov
lds
shl
mov
sub
push
mov
mov
inc
shl
jmp
and
inc
je
xchg
push
jae
xor
ret
pop
push
iret
cli
es
test
fucomp
adc
adc
hlt
cmpsb
icebp
xor
aas
jle
mov
jl
aam
or
push
dec
test
push
add
dec
fistps
sbb
pop
sbb
scas
ja
push
push
jb
fdivr
mov
outsb
sbb
in
stc
and
jne
push
xchg
adc
dec
dec
mov
roll
push
rol
lods
push
in
fmulp
xchg
aad
in
insl
pushf
popf
daa
lock
arpl
fbstp
repz
test
out
dec
add
and
scas
dec
xor
adc
in
push
call
push
lock
call
movsb
adc
repz
mov
sub
cmpl
in
inc
mov
lahf
dec
out
lret
aaa
xchg
cmpsb
cmp
jo
js
jae
pop
loope
push
les
sub
jne
je
imul
pop
or
hlt
adc
shlb
call
ret
mov
sub
outsl
jle,pt
jno
xchg
inc
jmp
cltd
jmp
into
cmpsl
mov
sub
push
sti
lahf
jo
lcall
push
cmp
cs
sti
std
ds
pop
jbe
or
mov
mov
pop
and
into
pop
movb
pusha
jge
or
lds
adc
mov
cmpsb
jp
addb
lock
mov
xor
mov
call
jmp
test
inc
mov
pop
test
fs
push
sbb
push
dec
jb
mov
jg
test
sbb
and
ret
push
pop
imul
mov
jecxz
mov
sbb
mov
ds
jno
xchg
mov
and
orb
mov
add
dec
jmp
adc
and
iret
jp
mov
add
pop
popf
testl
in
xchg
cmc
clc
xchg
dec
mov
sahf
inc
sbb
mov
mov
add
sbb
mov
pop
mov
xchg
lock
push
mov
pop
xchg
mov
mov
push
mov
mov
cmp
jle
cs
xor
pop
sub
dec
lret
and
movsb
clc
test
push
inc
mov
jnp
xchg
mov
sbb
aas
cwtl
addr16
push
movsl
xor
outsb
push
lahf
inc
and
pop
mov
dec
cmpsb
adc
xlat
xchg
push
adc
jp
cmp
repz
jecxz
sbb
cmc
or
mov
push
mov
and
xor
loopne
inc
inc
cld
popa
into
stc
fwait
in
mov
fsts
cmp
mov
loop
pop
mov
ret
daa
rol
push
call
aam
xchg
mov
fldl2t
pushf
mov
scas
ret
push
and
push
mov
ficoml
test
inc
out
xchg
inc
shll
or
loop
dec
into
mov
dec
lods
push
push
sahf
lret
inc
out
shr
stos
pop
pop
jo
add
and
pop
jecxz
cmp
mov
or
sbb
pop
loop
dec
movsl
sub
push
mov
mov
daa
movsb
inc
rcrl
in
leave
mov
or
insb
out
cmpsl
mov
movsb
jp
sbb
lahf
cmp
inc
jp
sti
stc
ss
in
or
and
jae
inc
fstpt
je,pn
add
sbb
sbb
pushf
aam
clc
mov
roll
push
stos
jo
inc
dec
mov
add
aam
stos
imul
popa
xchg
xchg
daa
sti
cmp
xor
pop
cmc
push
sti
pop
insb
or
arpl
test
pop
in
mov
setp
std
mov
jecxz
cmpb
mov
bound
jns
pop
stos
stos
xor
stos
in
dec
xchg
mov
int3
push
jg
xor
mov
popa
jp
ss
xchg
enter
sti
cli
cmp
fs
jecxz
mov
mov
mov
ds
insb
mov
and
jo
scas
mov
push
add
hlt
sbb
fdivrp
das
inc
cli
sub
mov
dec
mov
js
jge
sub
fs
shlb
lret
sbb
fucomip
or
inc
inc
pop
xchg
xchg
stos
sbb
fimull
or
mov
or
cltd
cmp
mov
fistl
jp
xchg
adc
sub
test
mov
rcl
jg
inc
inc
cmc
popa
subb
mov
stos
push
xchg
aad
lret
rolb
xchg
out
stc
push
leave
outsb
pop
je
dec
adc
test
dec
cmp
lods
rorl
jae
mov
push
mov
jecxz
dec
aaa
repz
xor
cmp
aam
or
movsb
pop
ret
jne
sub
pop
ss
add
xchg
lods
gs
fcoml
shll
cmp
shll
mov
andb
mov
fnstsw
mov
pop
sub
bound
add
aas
mov
add
gs
mov
dec
push
xor
neg
add
test
mov
xlat
mov
movsb
push
xor
aad
jecxz
or
jno
adcb
add
outsl
iret
add
into
outsb
cmp
insb
adc
test
sbb
push
mov
lahf
sub
jg
jp
push
xchg
fisubrl
lret
aam
rorb
leave
jo
cmp
lods
ja
pop
daa
insb
add
sbb
or
lahf
xchg
jb
push
lcall
and
int
cmp
pop
sbb
mov
shll
cmpsb
pop
jnp
int3
and
test
ljmp
pop
push
cmp
jnp
in
mov
sbb
in
stc
fwait
ror
pop
leave
addl
xor
mov
dec
roll
pop
mov
jnp
lea
in
inc
fwait
inc
cs
clc
xchg
in
cmp
rolb
xchg
aas
in
sbb
rolb
dec
mov
shll
stos
sub
dec
cmp
je
inc
lea
gs
stc
dec
int3
cwtl
xor
insl
fildll
dec
ret
cmpl
xlat
addl
jno
int
hlt
lcall
jle
sar
cmpsl
out
push
faddl
addr16
push
gs
enter
pop
inc
enter
fcmovb
je
dec
stos
call
ljmp
stos
pop
call
pop
xor
add
add
cwtl
fldt
mov
mov
in
mov
iret
mov
xor
mov
mov
sti
inc
jle
sbb
jge
mov
xchg
pop
mov
pop
cmp
inc
inc
and
jl
pop
outsb
stos
pusha
stos
repnz
aaa
adc
insb
call
jo
and
aas
add
sub
jne
rclb
ficomps
adc
insb
inc
icebp
es
aam
mov
or
testl
mov
sub
jo
or
sub
xchg
out
int3
sbb
dec
repnz
rcll
adc
js
mov
add
out
cli
test
test
inc
rcll
mov
lea
sti
mov
adc
add
xor
aad
xor
mov
ret
inc
add
in
xchg
fldenv
mov
mov
leave
in
sbb
repnz
repnz
outsb
lods
ret
push
push
call
das
pop
xorl
dec
clc
popf
jb
daa
mov
ja
rolb
sbb
cltd
dec
fnstsw
sub
outsl
lds
cmovo
cwtl
adc
out
icebp
repz
cmp
pop
xlat
sub
lds
mov
test
xchg
pushf
mov
testb
add
lods
mov
dec
scas
out
fists
lret
xor
inc
in
adc
push
test
dec
add
fstl
jmp
mov
shlb
daa
and
orb
push
cwtl
cmp
mov
jl
jo
xchg
aaa
jae
outsl
rorl
test
test
stos
jecxz
push
fwait
enter
adc
mov
movsl
jo
andb
or
iret
or
ss
jle
outsl
int
xchg
movsl
push
mov
test
out
int
add
mov
xor
xchg
cld
push
push
rcll
clc
mov
fidivrs
inc
xor
xchg
and
fildl
aad
repnz
sub
jne
into
lcall
xor
mov
imulb
mov
xlat
pop
gs
lds
adc
sbb
sbbl
push
adc
mov
pop
push
mov
push
inc
iret
mov
bound
sbb
rcrl
xchg
jg
mov
mov
cmp
lock
xchg
xchg
pop
sub
pop
popa
push
pusha
adc
ja
xor
loop
in
or
loopne
xchg
add
lcall
int3
mov
mov
fisttpll
sub
loopne
pop
fisubrs
pop
cmp
mov
out
sbb
jb
loopne
add
xor
pop
fldl
fcmovnb
jae
stc
adc
mov
lock
sahf
scas
sbb
lcall
sbb
lods
popa
sbb
adc
into
fistpll
jno
mov
xchg
jp
pop
sub
mov
outsl
adc
inc
loop
sbb
xor
or
cmpsb
pop
jge
push
cmp
mov
into
push
push
cmp
xchg
shlb
add
dec
daa
adc
xchg
and
mov
pop
xchg
add
sub
loop
jecxz
cltd
pop
xchg
rcrb
scas
dec
mov
mov
cs
scas
xor
pop
mov
cmpl
ficompl
mov
xlat
fwait
iret
mov
push
or
pop
repz
pop
push
jns
call
push
and
popf
inc
jb
xlat
aam
mov
cmp
cld
sbb
add
add
mov
jmp
repz
cmp
dec
jmp
sbb
sti
stos
test
ret
xchg
out
fnsave
mov
movsb
hlt
hlt
pop
in
push
xchg
ret
pop
dec
mov
push
dec
shl
add
sub
xchg
pop
push
mov
sub
mov
or
testl
loopne
ljmp
popa
jo
pop
out
cli
fs
fldenv
shrl
and
out
mov
mov
pop
pop
jb
dec
pop
pop
xchg
add
pcmpeqd
iret
mov
scas
mov
pop
mov
fsubs
arpl
jo
inc
pop
outsl
mov
xchg
stos
dec
in
push
inc
cmp
sub
subb
lret
mov
call
add
cwtl
cmpsl
push
test
push
hlt
test
pop
mov
repnz
ja
mov
fists
insb
sub
es
cmovle
xchg
mov
adc
fisubs
xchg
aam
push
rorl
cltd
lret
and
add
ret
push
adc
repnz
cmpsl
jne
mov
fsubl
push
or
insb
jle
push
mov
fildll
push
aam
fld
add
mov
mov
pop
pop
or
xchg
xchg
and
mov
outsl
sar
shl
addr16
xor
gs
lock
add
es
outsl
cwtl
push
leave
dec
repnz
mov
push
lret
aaa
int3
insb
add
xchg
fadds
inc
push
xchg
insb
mov
cld
pusha
add
nop
cmp
pop
xchg
out
jns
xchg
jne
cmp
aad
mov
shlb
jns
test
arpl
loope
lcall
fildll
data16
pop
mov
lcall
aaa
in
lcall
inc
lds
and
add
mov
push
and
insl
dec
inc
and
jge
sub
push
daa
std
mov
jb
cmp
mov
xor
adc
fildll
roll
mov
sub
sbb
jnp
movsb
mov
rcr
js
and
cld
sub
ret
sti
push
jo
notl
adc
in
xchg
xor
nop
lds
int3
adc
inc
inc
mov
xlat
les
xchg
mull
leave
out
imul
jp
fidivs
xchg
jecxz
gs
stos
aam
inc
adc
jb
mov
dec
lds
push
insb
add
xchg
sbb
test
int3
movsb
clc
xchg
xchg
clc
popf
out
aad
nop
in
loop
mov
imul
enter
mov
xlat
xchg
stc
roll
add
scas
sbb
sbb
adc
loopne
and
lret
add
shl
cld
movsb
mov
fadds
pop
cmpsb
add
out
fsqrt
fisubl
sub
icebp
cmp
and
iret
icebp
fnsave
fbstp
cwtl
inc
and
pop
lret
mov
cmpsb
sbb
mov
out
aam
je
jae
xchg
std
popf
js
mov
das
mov
pop
mov
outsb
mov
in
dec
cs
rclb
call
addr16
or
mov
les
shll
xchg
mov
fisubs
xlat
mov
dec
or
cmp
add
pop
out
or
enter
sub
jo
fsubrl
push
pop
es
popf
pop
cs
mov
jo
inc
inc
xchg
xorb
jmp
jl
sar
enter
aam
loopne
adc
mov
rolb
ret
sub
addb
mov
xchg
mov
cli
rclb
lret
cmpsl
push
add
in
fcmovnbe
lret
adc
pop
repz
add
add
aas
cmc
push
lret
mov
adc
outsb
fdivs
xor
insb
fsub
jg
xchg
fxch
inc
rcrl
pop
loopne
sbb
push
adc
cmp
or
bound
imul
inc
int3
sti
das
xor
jnp
ljmp
or
jae
mov
imul
or
sub
outsb
das
or
dec
in
mov
jo
repz
jae
pop
pop
js
push
xor
scas
xor
es
add
ja
aaa
lds
lret
cmpb
mov
pop
js
cmpsb
test
mov
out
hlt
mov
mov
cmpb
mov
insl
shrb
push
jb
mov
aam
call
adc
fsubrs
xlat
popa
sub
lock
mov
adc
addr16
or
cmc
out
cmp
sbb
and
pop
cltd
popa
fnsave
in
addr16
outsl
or
out
int3
andb
cmp
popf
add
xchg
in
push
adc
sub
fwait
add
ja
outsl
cwtl
mov
push
call
xor
outsl
movsl
push
imulb
jge
cmp
mov
xor
in
jg
sub
dec
sbb
test
mov
or
mov
cmp
call
aam
bound
push
and
xchg
jae
movsl
mov
push
loop
daa
jno
es
ret
push
jmp
pop
mov
cmp
xor
dec
daa
adc
xchg
lret
pop
loopne
xchg
stos
lcall
movsl
inc
push
fmuls
stc
mov
mov
sbb
push
push
lret
inc
call
cmpsb
ljmp
cwtl
clc
pop
lret
icebp
roll
sbb
scas
or
ljmp
jnp
movsl
imul
mov
xchg
sub
and
and
in
aad
xor
jno
cmp
pop
adc
fldenv
pop
fistpll
push
in
fs
lret
in
and
inc
ss
in
das
pop
add
fiaddl
shll
push
dec
aas
mov
stos
xchg
sub
mov
cld
lahf
movsb
sbb
addr16
add
outsl
lods
pop
mov
mov
jno
jmp
push
inc
cmpsb
jns
dec
mov
push
mov
in
jmp
dec
sub
add
jle
pop
jecxz
cmp
xchg
add
push
jae
out
pop
pop
inc
pop
jmp
jo
test
jmp
xchg
call
icebp
sbb
je
lock
lea
fsts
int3
mov
dec
xchg
sub
push
sub
mov
imul
mov
imulb
xchg
push
in
pushl
aaa
fldenv
call
mov
stos
jno
mov
cmp
inc
xor
iret
js
mov
lret
loope
mov
rclb
mov
cmovae
dec
jg
std
call
lds
pop
mov
sbb
mov
inc
divb
adcl
movsl
loope
jb
cmp
push
mov
or
adc
xorb
js
clc
or
out
jecxz
jmp
inc
mov
pop
lret
jp
push
pop
xchg
pop
inc
xor
shrb
push
sub
shlb
clc
rolb
push
sbbb
cmp
inc
adc
stc
inc
jle
mov
imul
stos
cmp
mov
pop
jno
sub
leave
cmp
jle
inc
push
and
out
pop
xchg
movl
mov
pop
lock
xlat
xor
leave
sbb
loop
in
add
mov
test
outsl
lods
cmp
sti
xor
hlt
xchg
cmp
scas
push
mov
push
std
cmp
adc
inc
data16
movsl
sub
push
mov
pop
sbb
jnp
cmpsl
sbb
sub
out
adc
ljmp
rcrl
inc
sti
cmp
pop
push
repz
loope
inc
repz
shlb
cs
mov
popa
jo
adc
mov
outsb
dec
cld
fidivrs
push
xor
and
stos
fidivrs
adc
mov
jmp
or
nop
out
lock
cmc
in
cltd
xchg
mov
lahf
inc
mov
insl
xchg
and
mov
inc
in
aas
lods
add
fwait
xor
mov
mov
rorb
test
pop
out
pop
insb
xor
lret
push
cwtl
in
ret
push
jnp
xlat
mov
mov
or
mov
pop
arpl
in
lods
pop
in
jmp
aad
pop
mov
out
adc
enter
jmp
push
jge
cld
or
test
xchg
mov
mov
push
pop
add
imul
insb
stos
add
lods
cmc
xor
mov
outsl
jnp
sti
test
cmpsb
or
add
add
xchg
or
popa
mov
mov
inc
pop
cmp
js
jecxz
push
loopne
lcall
or
fs
push
lret
mov
or
je
sbb
fistpll
out
popf
cmp
lahf
int3
sub
outsb
inc
jb
sbb
fiaddl
xchg
out
clc
pop
je
call
hlt
and
stos
aam
push
mov
inc
sub
and
or
push
icebp
and
or
push
lahf
loope
pushf
sahf
or
fs
fwait
mov
das
push
mov
sti
arpl
or
ds
out
or
out
mov
xchg
cmp
inc
inc
jne
jg
push
mov
xchg
ljmp
or
push
jge
jge
adc
cmc
lret
mov
pop
in
mov
push
adc
xlat
pop
in
insl
xor
xchg
dec
jae
xchg
pop
sbb
mov
stos
push
es
arpl
sbb
frstor
mov
arpl
mov
subl
pop
faddp
inc
cltd
daa
not
mov
sbb
and
jp
jge
pop
cmp
and
bound
iret
lcall
mov
cmp
out
pusha
sub
std
scas
inc
mov
push
arpl
xchg
inc
rol
fstps
mov
pop
insl
pop
jmp
std
int3
movsb
aad
xchg
enter
test
add
adc
xchg
clc
in
dec
fsubrl
pop
stos
jge
lods
daa
or
push
xlat
add
shlb
iret
and
fistps
iret
jo
inc
fwait
fwait
mov
lret
mov
lahf
roll
movsb
dec
mov
sahf
out
push
insb
shll
adc
adc
mov
mov
dec
fisubrs
aam
adc
sbb
sub
pop
jg
dec
jne
mov
cmpsb
test
jg
into
lahf
dec
sub
adc
in
cmpsl
xor
and
clc
notl
adc
insb
and
or
and
popa
sub
sbb
cld
aaa
mov
aad
push
ljmp
jno
inc
cmp
pop
popf
rorb
daa
xchg
rcll
js
cld
test
push
pushf
xor
push
rorb
fdivs
jbe
sub
mov
mov
adc
cmp
fcoms
sub
jg,pn
xchg
insb
mov
jo
mov
push
jge
leave
adc
sbb
or
and
outsb
xor
loope
add
sahf
bound
icebp
fcmove
dec
push
negb
scas
loop
push
mov
enter
pop
mov
push
dec
cmc
and
add
gs
mov
mov
inc
fisubs
in
inc
enter
adc
or
icebp
faddl
jl
lds
and
or
ret
jns
mov
repnz
cmp
addl
insl
mov
roll
rcll
shlb
sbb
stos
addr16
dec
fmul
dec
jmp
mov
out
repnz
or
jmp
repz
shrb
clc
ja
or
sar
rcrl
fisttpll
pop
js
cmc
jle
jl
je
in
shrl
jecxz
xchg
out
sub
push
push
subb
lcall
ss
js
lcall
inc
push
sub
sub
cmp
pushf
cltd
xor
sbb
mov
cmp
lods
jb
stc
out
popa
adc
fisubrs
sub
lcall
in
icebp
arpl
sub
inc
stos
cmp
ljmp
mov
mov
popa
cmp
andb
fistl
lret
test
mov
jno
inc
test
das
xor
rcrb
fdiv
leave
sub
xchg
jl
addl
push
ja
scas
and
pop
inc
ret
pop
push
lcall
jbe
sbb
fsin
mov
in
emms
adc
lret
xchg
mov
mov
pop
push
jl
mov
or
lahf
hlt
add
mov
stos
in
out
out
cwtl
lret
cmp
test
pop
pop
push
int3
jecxz
inc
ljmp
add
jno
pop
mov
pop
cli
push
pop
and
ja
lock
scas
flds
sbb
or
jge
push
push
or
lods
pop
jl
negl
sbb
addl
mov
aas
das
mov
lods
scas
ss
pushf
mov
jb
imul
mov
inc
cld
xor
and
sbb
rcrb
cld
lds
movsb
cmpsl
sub
rorb
fstpt
mov
mov
int3
and
push
add
cmp
sti
cmpsb
leave
xchg
ds
xchg
xchg
mov
ja
stos
jle
rcrl
inc
repnz
movsl
mov
inc
mulb
xchg
mov
shll
arpl
test
dec
loopne
mov
je
arpl
movsl
add
lret
inc
sub
push
jb
lods
addr16
test
int
ret
dec
lds
sub
aad
push
imul
push
call
mov
jmp
pop
xchg
push
mov
and
pop
mov
xlat
ja
aad
sub
ja
push
stos
mov
mov
test
ja
lock
inc
cmp
js
imulb
outsl
mov
fs
out
pusha
push
addr16
test
shrl
out
and
inc
stos
xchg
int
push
xchg
jge
nop
inc
int
mov
inc
sub
mov
fmulp
mov
jbe
addr16
cmp
xlat
and
mov
add
jge
push
push
fsubrl
rorl
jae
cli
pushf
imul
scas
push
and
mov
repz
add
in
nop
push
add
and
test
dec
daa
stos
bnd
mov
dec
push
push
xchg
xchg
jbe
fstpt
or
mov
pop
add
repz
mov
scas
cmp
rcl
mov
fdivrs
jnp
jecxz
cmc
into
test
sub
cwtl
ror
jle
cmc
insb
popf
xchg
frstpm(287
push
xor
aaa
xchg
add
ret
push
sbb
jl
aam
mov
out
cwtl
lock
lahf
test
aaa
rorl
jne
ret
or
sub
inc
out
dec
mov
mov
lods
sub
sub
sbb
jb
cmp
insl
xchg
mov
sbb
mov
or
fcoms
js
xor
stos
ljmp
adc
fwait
inc
mov
cmp
subb
pop
cmp
imulb
insb
pop
cmp
mov
jb
xchg
xor
test
lret
fdivrs
sbb
pop
test
int
mov
popf
sbb
cmc
dec
or
add
and
out
push
gs
rcrl
jmp
fists
mov
sub
push
pop
jo
jbe
pop
scas
push
lods
sub
loop
mov
jp
mov
xor
jmp
fbld
cmp
push
jae
imul
inc
sbb
sbb
aad
fsubrl
push
enter
movsl
pop
pop
ret
stos
sbb
sub
popl
mov
or
xchg
lcall
clc
ljmp
push
sarb
jecxz
jmp
lea
in
push
pop
sbb
push
inc
jp
push
in
sbb
or
and
push
popa
test
cmp
and
push
out
inc
mov
rclb
mov
sbb
pusha
fcomi
out
movsl
iret
sbb
ds
testb
incb
notl
jmp
and
lret
inc
adc
push
xor
cmp
or
aaa
cmp
cmp
inc
pop
fildl
fstpl
cld
or
arpl
loopne
mov
daa
mov
iret
mov
mov
cmc
add
mov
imul
mov
jbe
inc
lcall
incb
adc
mov
pop
sbb
push
int
add
inc
clc
jge
jle
xchg
lea
movsb
mov
and
or
jae
loope
push
xchg
inc
mov
xor
je
stos
xchg
push
mov
push
movb
and
and
or
leave
fs
movsb
mov
sub
mov
stos
aas
shr
push
jecxz
adc
push
sarl
jge
shll
shl
in
fidivrs
arpl
outsb
sbb
dec
scas
movsl
pop
inc
jmp
xor
push
jae
cmpsl
dec
pop
insl
jb
int
aad
adc
and
or
movsl
out
aam
cwtl
mov
mov
scas
call
daa
mov
dec
scas
stos
iret
shlb
inc
adc
cmp
add
xlat
xchg
sahf
aad
jno
aaa
sbb
sub
das
mov
cmpsl
popa
or
pusha
or
inc
inc
mov
lret
inc
ja
jne
dec
mov
test
mov
daa
xor
xchg
cwtl
and
popf
mov
pop
pop
jno
jge
iret
out
sbb
mov
jge
stos
push
repnz
call
add
mov
xlat
fcompl
scas
js
xchg
es
mov
push
xor
mov
es
cltd
cmc
mov
scas
pop
xor
cwtl
mov
clc
inc
inc
jl
dec
mov
mov
rcl
pop
adc
jmp
scas
pop
loop
adc
mov
dec
cmp
lea
dec
jmp
or
pop
mov
enter
pop
test
outsb
inc
push
xchg
xor
std
icebp
sub
mov
cwtl
jne
stos
iret
popa
decb
es
mov
jl
xor
out
hlt
jmp
add
mov
mov
adc
aaa
xchg
dec
andl
outsl
add
scas
in
stc
addr16
inc
cmp
stos
les
mov
add
and
inc
scas
inc
pop
cmp
loope
inc
icebp
mov
fcomps
and
clc
and
push
and
les
mov
add
xlat
dec
xchg
cmc
scas
idivl
pushf
movsl
ret
mov
pop
cmp
xor
xchg
xchg
fdivs
fdivr
mov
push
sub
into
in
idivl
adc
call
add
mov
mov
scas
push
cmp
les
fs
insl
sahf
lret
cwtl
cmp
subl
call
jo
add
sarb
pop
rcll
jmp
push
cmpsl
sbb
mov
cmp
mov
jns
xchg
inc
and
loope
cmpsl
sahf
in
sub
mov
mov
cwtl
inc
add
daa
sub
inc
jl
mov
rolb
xlat
mov
push
cwtl
es
cmc
in
ret
inc
pop
jmp
pop
leave
and
stos
push
nop
mov
popa
cltd
jmp
jle
fidivrs
in
mov
in
lret
outsb
cmp
xchg
fists
test
sub
fcmove
repz
pop
dec
push
and
dec
xchg
insb
bound
test
mov
cmpsl
mov
popa
mov
out
add
fwait
outsl
je
orl
inc
lea
gs
mov
movsl
xor
push
xor
cltd
test
in
or
add
movsb
xchg
repnz
jmp
add
jg
mov
out
movsl
fs
loopne
ret
cmpb
jecxz
icebp
out
cmp
pop
adc
mov
fdivr
mov
xor
xor
add
dec
hlt
jle
cmpsb
inc
movsl
jo
cs
out
xor
jae
sbb
add
inc
add
mov
jnp
inc
aas
xchg
cmp
lret
cmpsb
dec
push
fdivr
jle
hlt
push
push
popf
mov
mov
jl
inc
xor
cmp
std
inc
ficomps
add
shll
inc
pop
sbb
bound
mov
fcmovne
cld
sub
jg
adc
addb
sbb
fadd
outsl
cltd
or
mov
adc
pusha
xchg
movsl
cmp
xchg
iret
lahf
xor
pop
dec
pop
int
cmp
jb
push
and
mov
out
xor
aaa
mov
sub
jne
xchg
adc
sub
xchg
mov
or
bound
and
les
fiaddl
enter
lret
mov
lcall
mov
movsl
es
dec
leave
jns
push
mov
sbb
adc
repz
add
aam
out
ds
inc
xchg
aam
sub
inc
add
out
sbb
in
pop
pushl
pop
sahf
out
lea
div
int
cltd
testb
lahf
ds
cmc
repnz
xor
add
sbb
das
mov
or
or
cli
add
jmp
xorl
push
xchg
cmp
scas
add
mov
or
out
lds
pop
mov
mov
add
test
fdivl
sub
mov
popf
push
test
adc
xor
dec
mov
push
sbb
imull
es
adc
or
gs
test
mov
inc
in
or
jmp
repz
cmp
dec
add
adc
push
add
inc
mov
daa
cmp
pop
ja
xchg
push
add
gs
sahf
xchg
jae
scas
push
mov
cmpb
and
arpl
fldt
out
lret
clc
push
std
xchg
aaa
loope
push
subb
push
jp
push
cmp
dec
inc
push
mov
and
sbb
ljmp
xor
mov
jl
push
jb
jle
ss
into
mov
push
dec
aad
sahf
push
or
or
mov
int3
out
xchg
push
mov
cmc
cmc
imul
push
jbe
xor
in
lock
ret
push
outsb
cs
fisttpl
xchg
jl
cs
jo
mov
add
and
xor
mov
out
orl
or
std
ss
test
inc
mov
push
xchg
cmc
push
fcomip
inc
and
adc
and
cmp
dec
jecxz
shll
jge
cmp
cmp
xchg
pop
dec
dec
test
jmp
xchg
inc
cmp
lods
scas
movsl
sub
movsl
ja
call
daa
shlb
lock
jo
add
out
add
rcl
adcl
out
iret
mul
insl
cmp
int3
stos
jle
insl
sbb
cmc
inc
mov
or
or
jmp
js
insb
gs
out
mov
or
std
push
cli
stc
pop
mov
aad
dec
js
outsl
std
or
dec
out
cltd
xchg
dec
push
sbb
fwait
pushf
mov
push
adc
lret
sbb
stos
sub
lea
lret
pop
ret
cmp
or
ds
add
xlat
cmp
add
aas
bound
push
daa
movl
lods
pop
xor
xchg
cwtl
test
repz
divl
lds
or
push
and
mov
ret
xor
xchg
cmp
mov
scas
in
mov
mov
inc
rorl
jne
xor
int
xchg
adc
pop
push
push
dec
lret
std
pusha
mov
fs
xchg
mov
jae
jge
ret
gs
inc
push
pop
mov
cmp
imul
dec
jle
cs
pop
in
cmpl
cmp
xchg
lock
es
enter
jae
loop
add
and
adc
test
lods
call
add
push
add
mov
call
test
aad
mov
into
not
aam
sbb
dec
in
jae
rol
or
mov
insl
repz
sub
add
ret
les
in
dec
sbb
test
and
sub
test
inc
stos
xor
push
test
pop
sbb
mov
repnz
mov
mulb
pop
rorl
lds
ja
pushf
insb
addl
nop
popa
stos
jne
clc
mov
dec
pushf
cmpsl
cmp
rcrl
sbb
subb
aas
fdivs
xor
flds
dec
cmpl
ds
jnp
xchg
xchg
cltd
and
sub
mov
cwtl
std
mov
leave
and
dec
rcl
iret
adc
jno
shll
movsl
dec
inc
jne
jns
sub
add
add
and
das
inc
mov
outsl
lock
adc
movsb
jo
stos
jo
int3
rolb
cmpsl
cmp
sub
test
lock
daa
pop
popf
out
imul
push
sub
out
addr16
and
pop
movsl
jl
xchg
nop
shll
int
stc
nop
sti
add
xchg
or
gs
inc
int3
stc
pusha
scas
and
add
cmp
dec
cwtl
mov
dec
mov
push
imul
pusha
pop
and
mov
std
dec
je
into
inc
dec
push
in
xor
popf
sbb
pushf
xor
inc
inc
mov
cmp
cmpsl
sub
fsubl
fwait
bound
xchg
mov
daa
jge
jl
mov
and
xchg
and
push
insb
insb
mov
dec
adc
gs
and
mov
aas
shl
stos
not
or
sub
fdivs
test
add
cmp
out
xrelease
jge
lds
test
clc
scas
push
cmp
insl
in
mov
and
dec
hlt
and
mov
mov
mov
test
cmp
lcall
inc
xchg
mov
outsb
call
xchg
push
stos
mov
push
sbb
lret
pop
imul
lods
out
xchg
scas
mov
sbb
cmp
popa
adc
addb
or
xchg
inc
push
adc
addr16
arpl
jmp
mov
mov
popf
jb
jae
sub
add
das
xlat
test
popa
mov
or
push
or
int3
pop
mov
xchg
hlt
jp
das
sub
sbb
fs
pop
lock
cwtl
pop
js
add
lods
adc
add
fs
lret
je
adc
out
jg
and
mov
ret
gs
nop
add
add
mov
mov
adc
aam
and
in
mov
fimull
pop
dec
ss
sahf
cmp
mov
mov
add
int
pop
inc
aad
jns
cwtl
aad
sub
jmp
ret
iret
fldt
inc
aam
arpl
outsl
jl
jns
ret
insl
divb
mov
enter
pop
sub
inc
jne
jmp
push
and
dec
out
sarl
mov
movzbl
xchg
sahf
xlat
or
and
inc
aaa
mov
sbb
arpl
call
mov
push
xchg
pop
mov
inc
mov
ja
and
cmpl
dec
add
cmpb
xor
std
and
out
popa
jnp
sub
insb
and
mov
cmp
popa
mov
popa
sub
jmp
mov
in
int3
inc
xor
int3
ss
lcall
ljmp
lods
xchg
stos
mov
cmc
mov
lea
and
or
jle
aad
cs
add
pop
mov
mov
pop
xor
push
popa
push
outsb
gs
push
xchg
cltd
adc
mov
int
scas
pop
mov
std
sbb
lret
lcall
or
sub
sarb
sub
aaa
or
shr
or
leave
dec
xchg
ljmp
lock
or
fcmovu
mov
rorb
stos
aaa
dec
fdivrs
arpl
pop
lock
sbb
dec
ds
dec
push
push
mov
sahf
pop
sti
or
mov
movsl
xchg
sub
lods
in
mov
and
out
xchg
test
rclb
adc
cmp
xchg
orl
cmp
cltd
mov
lret
mov
adc
es
out
rcrl
es
pop
jmp
sbb
int3
repnz
mov
repnz
das
loop
inc
dec
fwait
mov
xchg
inc
dec
add
mov
test
shrb
stc
xlat
mov
or
leave
mov
mov
xchg
lcall
scas
hlt
mov
and
jns
adc
sti
nop
push
movsl
insb
push
shlb
clc
lret
xor
jne
outsb
xor
mov
adc
repnz
mov
jp
xor
push
pop
mov
in
mov
notl
xchg
out
stos
lds
int
gs
jb
ljmp
pop
std
mov
push
notb
test
xlat
jp
sarl
stos
dec
xchg
xchg
pop
rcl
sti
nop
jecxz
fbld
xchg
adc
xor
lock
fs
mov
filds
loopne
dec
lea
adc
aam
rclb
andb
movsl
sub
popf
inc
pushf
sub
sub
das
ret
enter
shl
lcall
iret
test
scas
jp
push
mov
ljmp
jbe
add
test
popa
jl
cmp
arpl
fcomp
insl
xchg
aam
pop
pop
xchg
jo
fs
add
pushf
or
popa
mov
mov
jo
push
mov
pop
out
sub
pushf
in
repnz
ljmp
cmp
mov
mov
outsl
pusha
insb
cmp
cmc
xchg
push
jo
push
popf
or
add
mov
arpl
in
or
arpl
es
popa
mov
inc
loope
mov
call
aas
dec
loop
scas
xchg
and
push
dec
rorb
adc
in
das
dec
fs
roll
nop
push
nop
push
jmp
gs
pop
mov
lds
adc
test
pop
push
mov
sub
scas
mov
hlt
shl
adc
add
movsl
movsb
push
cltd
aaa
ss
lds
mov
cmp
lea
add
test
or
cmp
mov
popf
loopne
call
xor
push
lret
ret
dec
dec
add
sbb
fs
dec
idiv
outsl
jo
xchg
add
xlat
movsl
mov
arpl
inc
movsl
add
xor
jp
jmp
jne
aad
fmull
pop
push
mov
lea
pop
inc
out
and
fimuls
fstpt
mov
cld
mov
push
adc
xor
sub
add
stos
mov
loop,pn
push
into
stos
pop
in
push
push
leave
dec
std
test
dec
mov
aaa
outsb
mov
arpl
test
sbb
sahf
ret
daa
jmp
lds
sub
pop
aam
adcl
pop
dec
sub
frstor
push
pop
or
test
pop
sub
jle
icebp
andb
push
lahf
je
dec
dec
dec
pop
add
mov
jmp
imul
pop
mov
mov
ret
add
and
bnd
stos
lods
test
jmp
shl
mov
cmp
mov
arpl
sbb
pusha
cmp
adc
or
int
mov
fnsave
mov
into
add
mov
xor
mov
cmpsb
mov
push
icebp
or
push
cld
int3
push
xchg
hlt
test
cli
xchg
push
imul
out
je
mov
aas
js
insb
adc
stc
repz
cwtl
out
inc
mov
sti
das
out
bnd
mov
cmp
xor
inc
sub
loope
enter
jg
dec
inc
lcall
loope
pop
leave
scas
mov
dec
or
pop
add
xchg
mov
test
in
mov
xchg
pushf
cltd
jle
fisttps
lods
popa
ficompl
mov
adc
inc
jnp
jle
xchg
fs
das
push
xor
arpl
xchg
imul
xchg
mov
inc
pop
loopne
fsubr
cmp
mov
leave
pop
in
adc
pop
sub
sub
fnsave
mov
pop
and
push
push
adc
xchg
push
dec
dec
inc
or
lods
adc
sub
arpl
jb
mov
xchg
add
dec
xchg
ret
push
xchg
out
or
mov
push
out
mov
xchg
xorb
andb
jg
mov
mov
orl
jno,pn
pop
stc
stos
xor
mov
mov
nop
stc
leave
dec
jle
jp
popa
cmc
inc
mov
sub
stos
ds
pop
cmp
add
out
pop
subl
out
cltd
xchg
xor
mov
xchg
and
shlb
cmp
cmp
outsb
push
lea
mov
jmp
popa
bound
pop
sti
sub
mov
mov
inc
dec
cs
push
adc
lds
fwait
inc
lahf
iret
sub
rcrl
cmp
push
pop
cmc
dec
hlt
pushf
mov
pop
insl
mov
pusha
cmp
out
sbb
js
lahf
lahf
or
xor
data16
mov
out
mov
stc
jmp
add
xchg
fiaddl
mov
popf
push
cwtl
xchg
sub
ret
mov
inc
push
dec
adc
pop
in
mov
lods
xor
sub
sub
repz
mov
dec
loopne
or
lock
ret
jne
and
mov
out
pop
cmp
cs
dec
into
mov
add
and
dec
repz
mov
clc
pop
xchg
shl
shll
aaa
sbb
dec
mov
adc
mov
push
repnz
pop
call
push
fmul
dec
sub
fidivrs
jnp
test
dec
xor
sub
cmp
jns
sub
orb
shll
repz
cltd
pop
mov
repnz
mov
mov
punpcklbw
iret
dec
outsb
aaa
orb
movsl
or
jnp
cmp
outsl
jmp
and
iret
push
xchg
adc
xor
arpl
pop
mov
fwait
test
push
push
stos
or
mov
or
sub
imul
enter
or
into
les
out
inc
test
mov
mov
lahf
push
lahf
ret
mov
nop
xlat
or
jle
fsubrs
sbb
mov
sub
sbb
mov
cmp
lcall
mov
push
pop
lock
bound
loop
test
pop
adc
test
lods
pop
inc
dec
fidivl
mov
fisubrl
mov
dec
fidivl
adc
mov
jbe
cld
and
xchg
add
add
and
cmp
mov
xor
pusha
loop
and
js
dec
mov
add
stos
in
pop
test
add
push
cmp
mov
fs
subb
xor
stc
mov
popf
enter
cmp
pop
dec
mov
fsub
xor
out
loop
cwtl
or
test
push
popf
or
addr16
sbb
mov
test
or
aad
jnp
mov
ficompl
mov
test
sub
in
mov
push
insl
in
dec
addl
lock
mov
jb
push
xor
mov
pop
mov
insl
enter
vpmaddwd
jge
sub
mov
cmp
push
lret
sbb
out
push
dec
ret
lahf
hlt
mov
cld
xor
or
sub
xchg
sti
or
mov
cs
subl
mov
push
mov
xor
add
xchg
lahf
lock
cld
in
js
jg
lahf
sahf
lds
mov
bound
int
nop
addr16
pop
or
mov
sub
leave
xlat
hlt
xchg
icebp
lea
loop
or
mov
sub
repz
sub
loopne
lcall
jo
es
cmp
mov
daa
inc
dec
aam
or
clc
and
jno
test
shrb
rclb
cli
push
xchg
icebp
sti
add
mov
adc
lahf
push
jbe
shlb
icebp
orb
cmpsb
cld
pop
dec
or
stos
ret
lods
mov
push
pusha
mov
xchg
cmc
xchg
lds
imul
push
roll
int
incl
cmpsb
xor
adc
sahf
in
dec
jns
pop
leave
push
fwait
sbb
fmul
es
enter
movsl
gs
fs
loop
pop
fsubrl
scas
push
cmp
sub
push
faddl
pop
test
sarl
ficoml
or
nop
and
out
sti
lret
mov
inc
icebp
pop
adc
imul
push
lock
in
push
or
inc
push
mov
pop
addr16
shr
shrb
enter
out
sbb
ficoms
leave
lods
jecxz
cmp
nopl
mov
push
out
repnz
push
jbe
fs
test
lcall
inc
cmp
or
es
inc
push
incl
es
xchg
call
pop
or
sbb
inc
xchg
cwtl
xchg
dec
dec
sub
js
decb
cltd
insl
aam
aaa
cmp
mov
adc
icebp
idiv
jge
adc
mov
popa
nop
mov
and
jl
sub
das
iret
xor
mov
push
aaa
sbbl
add
rcr
shlb
sti
andl
pop
sbb
popa
inc
les
and
pop
popa
bnd
out
inc
cmp
fwait
adc
cs
jae
fildl
ja
call
pop
push
jmp
cltd
xchg
rcl
jmp
jecxz
xchg
hlt
jp
out
mov
push
mov
or
ja
jmp
loopne
leave
xchg
jne
push
rorb
lret
scas
xchg
arpl
repz
cmp
sbb
adc
daa
push
cmp
inc
push
adc
jae
mov
lret
mov
jge
xchg
fdivrl
sbbb
rcrl
stc
int
cmpsb
lock
xchg
adc
loope
mov
enter
jp
hlt
xchg
icebp
push
jmp
xor
xor
fidivl
aas
xor
adc
mov
es
mov
and
cmp
mov
lahf
sub
add
mov
jb
mov
scas
lods
mov
shlb
or
dec
or
loopne
push
movsl
pop
rcrb
sub
xchg
or
jne
xorl
cmp
mov
xlat
lahf
and
fidivrl
pushf
sub
cltd
gs
daa
mov
xchg
jmp
add
vaddsd
in
or
push
imul
cld
aaa
rorl
push
mov
jge
lahf
fidivrs
repnz
jl
inc
jo
jg
and
cmp
in
xchg
sub
cmp
scas
sub
testl
xchg
shr
or
jg
push
imul
xchg
mov
fmul
add
inc
cmp
sub
insb
popa
dec
mov
dec
out
loopne
aas
pop
jmp
and
imul
data16
xchg
sti
sbb
out
imul
pop
cmpb
test
fucomi
xchg
add
pop
inc
sahf
imul
mov
jae
mov
fdecstp
movd
std
mov
mov
cmp
cs
sub
dec
movsl
ret
aas
lcall
lret
add
sbb
push
push
mov
mov
mov
loope
test
xor
roll
insl
sbbb
ret
cltd
setl
dec
inc
leave
fcompl
and
ret
aam
imul
loopne
sub
or
mov
cmpsl
jp
lds
and
mov
bound
in
push
push
mov
jmp
sbb
and
daa
les
pop
fsts
or
into
sbb
xchg
mov
popf
in
cmp
push
pop
hlt
stc
push
lcall
mov
jno
movsl
sub
sub
mov
and
push
mov
cltd
movsb
cmpsb
lea
inc
pop
in
jns
cmc
ljmp
sbb
xchg
add
sbb
dec
stos
and
int
inc
adc
je
sbb
push
sbb
inc
stos
adc
xchg
movsb
dec
mov
add
xchg
data16
sbb
adc
aas
cmp
add
pop
inc
sub
ret
xchg
cwtl
or
inc
add
xchg
hlt
pusha
icebp
jno
outsl
pop
lock
or
add
xor
cld
xor
shl
daa
leave
push
ss
insb
jne
jmp
fisubs
pop
iret
scas
cs
dec
rolb
xor
mov
bound
add
or
inc
adcl
mov
mov
pop
mov
and
inc
cmpb
mov
ds
js
loop
push
ljmp
add
pop
in
push
xchg
pushf
pop
je
mov
fimull
push
jb
ljmp
mulb
and
push
jp
arpl
add
ljmp
cmp
add
pop
fiaddl
js
pop
push
push
lds
or
xchg
dec
loopne
xorb
test
xor
xor
pop
ret
sub
lods
push
push
jecxz
inc
mov
in
xchg
rcl
test
mov
add
push
mov
pushf
enter
add
js
sub
dec
xchg
sub
sub
and
jle
hlt
stos
mov
dec
cmp
mov
mov
in
mov
dec
mov
mov
lcall
in
xlat
sub
and
xchg
test
arpl
adc
xor
inc
fwait
mov
dec
cld
into
add
jb
sbb
fnsave
dec
enter
incb
das
jnp
mov
adc
push
ret
xchg
jo
in
jl
xor
rcrl
fwait
xor
push
cmpsb
aas
push
sub
clc
repnz
andb
int3
hlt
xchg
or
insl
xchg
out
mov
iret
jns
pop
lea
das
mov
arpl
xchg
cmpsl
inc
mov
pop
cltd
sub
dec
cld
ret
lods
scas
arpl
roll
adc
and
addr16
jl
ds
mov
out
popa
rcrl
std
mov
fldl
jle
sbb
xchg
cmpb
mov
movsl
movzwl
aad
stos
je
jbe
mov
insb
stos
lret
push
pop
push
and
iret
and
adc
mov
xor
jo
addl
xchg
dec
scas
fistps
ja
test
push
ret
mov
aaa
mov
lahf
or
inc
xor
xlat
rorl
xchg
lock
lock
dec
pop
mov
fwait
xor
sbb
daa
push
jne
mov
fsubl
and
int3
push
fcmovnu
test
aam
insl
push
sub
int3
xchg
xchg
roll
xchg
ret
fbld
data16
inc
pop
cwtl
shrb
jns
scas
push
movsl
data16
push
pop
aad
insb
stos
cmp
ds
jmp
cmp
outsl
faddl
cli
cmp
cmc
mov
pop
xchg
or
mov
fsub
nop
xor
enter
enter
shrl
jae
pop
es
cmp
hlt
lock
or
cmp
insl
popf
cmpsl
cmpb
cwtl
imul
cli
push
lea
cmp
sub
jge
jle
mov
in
adc
inc
ljmp
out
push
mov
jo
push
pop
mov
test
push
xor
int3
sub
in
xchg
pusha
sub
js
loopne
repnz
jno
jo
jne
sub
xchg
pop
mov
sahf
pop
mov
mov
clc
fisttpl
int3
adc
cmp
outsb
or
out
and
test
maskmovq
testl
and
aas
mov
add
lret
xchg
lea
or
sub
jb
xchg
stc
test
or
mov
dec
xor
xchg
into
fnstsw
push
and
xor
inc
and
insl
nop
jbe
mov
jge
scas
in
ret
push
and
adc
mov
pop
insl
cmpsb
and
and
xchg
mov
mov
les
sub
mov
int
ss
cmpl
test
xchg
mov
ret
enter
and
lods
push
cmpl
lods
rcrb
ljmp
mov
js
nop
fs
inc
call
push
inc
pusha
inc
imul
js
jne
cmp
push
int
popa
push
sti
jp
faddl
test
pop
mov
xor
bnd
insl
sub
xchg
sbb
lahf
mov
out
jmp
pop
add
inc
in
inc
out
jmp
pop
clc
sti
scas
sarl
inc
xor
jns
cmp
jb
leave
aam
dec
push
es
sti
xor
or
sub
inc
ret
aam
clc
inc
filds
ss
lods
sub
jg
bswap
imul
pusha
pop
aas
dec
cmp
ds
jno
mov
sbb
and
lret
pop
sbb
lods
out
pusha
fldt
test
sub
push
mov
sti
sahf
subl
dec
outsb
in
and
ret
xchg
sarb
nop
jnp
iret
movb
stos
add
ljmp
add
cmp
xchg
les
xlat
dec
or
add
lock
aas
je
setbe
push
sub
loope
fcmovbe
add
enter
jne
call
test
icebp
xchg
aas
and
pop
and
inc
shr
testl
jns
mov
sbb
ja
cld
pop
xchg
adc
fiaddl
out
mov
mov
std
xchg
in
push
hlt
xor
add
sub
js
jp
pop
adc
dec
xchg
popf
stos
or
stos
push
out
sbb
xchg
sub
insb
ret
lcall
icebp
and
jmp
test
gs
cmc
daa
into
xchg
xor
aas
js
lods
ret
adc
in
fldl
in
inc
sub
xchg
xor
xlat
mov
jae
jle
dec
rcrl
cltd
out
mov
arpl
adcb
ja
mov
xchg
jmp
int3
jmp
jae
mov
dec
fistps
mov
sbb
test
add
ljmp
fs
imul
pop
add
sbb
mov
jmp
sub
push
in
ja
push
movsl
lret
adc
dec
dec
test
mov
jg
rcll
sub
push
enter
push
cmp
push
pop
mov
fisubrl
out
and
add
jnp
into
pop
pop
mov
std
adc
in
jmp
outsl
lods
leave
repnz
imul
mov
jmp
daa
cmp
data16
outsb
mov
nop
out
mov
mov
ljmp
xchg
jae
arpl
gs
adc
outsb
insb
mov
je
lahf
mov
cmpsl
jp
sahf
jmp
ds
je
adc
and
roll
and
lcall
stc
adc
pop
jl
fwait
jp
xchg
cmpl
jno
mov
or
mov
jbe
imul
loopne
orb
or
cmpsl
cmp
cwtl
and
fbld
sub
and
mov
push
arpl
cmp
pusha
icebp
mov
inc
subl
popf
inc
je
test
or
push
das
mov
popa
cmpsb
lcall
and
fiaddl
inc
pop
negl
push
push
das
and
cmc
pop
fsubrl
gs
cmp
add
sub
inc
fistl
sub
pop
mov
bound
sti
push
sub
pop
es
mov
jecxz
outsl
inc
xchg
out
jmp
daa
mov
std
icebp
dec
pop
cmp
and
mov
pop
dec
sahf
or
xchg
xchg
dec
ja
iret
mov
mov
sbb
ds
and
pop
inc
dec
jle
repnz
ja
mov
roll
je
mov
idiv
adc
in
dec
sbb
out
xor
cmp
adc
movsb
ds
and
cmpsl
jo
ror
add
and
push
add
lock
jo
add
mov
mov
inc
mov
loopne
inc
movsl
dec
loope
sub
sub
jmp
repz
inc
mov
push
cmovg
ret
inc
xor
sbb
push
stos
adc
aaa
jae
aas
or
or
jo
or
xchg
hlt
sub
test
jmp
test
and
dec
xchg
cmp
cli
shrl
mov
push
mov
lds
jmp
pop
or
dec
fwait
mov
mov
lret
pop
cmp
adcl
inc
sbb
mov
dec
push
pop
sbb
jmp
mov
or
pop
test
cmp
clc
shll
stos
aaa
mov
mov
mov
adc
ret
in
xchg
aas
xchg
xor
mov
in
xchg
xchg
or
cld
les
push
pop
leave
hlt
sub
stos
cmp
xor
aas
fnsave
sub
mov
dec
ss
cmp
adc
push
shl
push
mov
cmp
or
mov
cs
cli
pop
jae
push
adc
push
pop
add
std
leave
sahf
sbb
into
push
nop
push
and
sbb
lcall
sbb
lds
inc
addl
test
push
enter
int
dec
stos
cmp
push
add
insb
fdivr
in
xorl
cmp
adc
lods
lahf
and
add
adc
pop
add
and
mov
adc
jno
into
dec
inc
movsb
arpl
adcl
mov
sub
sti
jmp
cltd
sub
test
xor
and
bnd
les
push
sub
inc
shl
jecxz
jmp
sub
sbb
mov
and
xchg
stos
idivl
cmp
jp
push
cwtl
xor
jmp
add
les
nop
or
jno
aad
xchg
push
sbb
lods
xchg
ja
ss
int3
ljmp
xchg
les
test
cmpsl
bound
xchg
es
inc
mov
rclb
out
xor
mov
mov
lahf
fstl
mov
xchg
pop
sub
push
mov
xchg
push
push
lea
mov
cmc
insb
insb
sbb
pop
xchg
and
cmc
and
vcvttpd2dqy
sub
stc
je
stc
mov
mov
xchg
ret
inc
fsub
fnsave
mov
jecxz
or
adc
push
mov
fmull
arpl
sub
in
jnp,pt
lds
mov
and
push
mov
leave
divl
mov
fidivrl
rcrb
push
roll
mov
popa
xchg
mov
lea
xchg
test
into
xchg
shl
pop
enter
dec
in
xlat
mov
inc
mov
push
jno
mov
je
lods
sbb
add
sbb
mov
and
shrb
dec
stos
loop
pushl
in
int3
vhsubpd
fstpt
pop
rcll
adcb
jns
jne
jle
jb
fisubrl
add
or
jns
xchg
iret
fnsave
leave
mov
mov
sarb
leave
sbb
lahf
pop
movsl
push
in
add
sarl
and
jle
cmp
sbb
stos
rorl
mov
xchg
cmp
call
mov
mov
xchg
mulb
jle
cmp
sbbl
mov
lods
icebp
pop
fnstcw
adc
pop
cmp
jmp
in
mov
fsts
pop
test
mov
inc
iret
pop
fidivs
pushf
pop
pop
sbbb
mov
dec
pop
js
cli
mov
adc
fnstenv
scas
sbb
mov
xlat
je
divb
cmpsl
push
lods
and
in
jg
mov
inc
mov
in
xor
lret
mov
cmp
fbld
test
mov
xchg
fidivs
fwait
xchg
enter
push
out
adc
pusha
xchg
movsb
ror
push
jmp
lods
mov
lock
or
iret
cwtl
call
and
cmp
sti
or
push
jmp
push
push
pop
das
pusha
call
or
fldenv
mov
scas
pop
sahf
scas
push
mov
ja
int
add
loop
hlt
in
mov
fnstenv
cmp
lret
sub
fstl
orl
sbb
sbb
hlt
dec
inc
xor
xor
or
cmc
and
pushf
incl
aam
push
push
xor
mov
sbb
or
js
xchg
movzwl
adcb
inc
jle
in
dec
mov
js
or
jmp
cmpsb
mov
pushf
ja
cmpb
mov
and
jbe
mov
jg
les
mov
repz
in
and
int
xor
xchg
fstpt
mov
cld
cmp
aam
lret
test
mov
and
adc
mov
mov
lds
lock
mov
push
mov
lret
push
and
mov
outsl
or
and
ljmp
popa
insl
dec
ljmp
sbb
pop
mov
xor
cmpsl
add
jo
fldt
outsl
pop
inc
push
insb
and
je
fldenv
or
mov
data16
stos
cmpsl
mov
arpl
sbb
aad
mov
outsl
push
fdivrl
test
sub
ret
xor
pop
das
jae
push
mov
stc
movsl
mov
add
mov
sbb
rorl
hlt
aam
pop
insb
fst
je
jge
es
loopne
sbb
xchg
add
sbb
push
and
mov
mov
xor
out
and
mov
push
sahf
movsb
adcl
sub
out
das
in
xchg
out
xchg
sub
inc
dec
xor
push
lods
faddl
or
je
jae
sbb
push
push
outsl
jle
add
imul
push
cli
push
mov
movsb
dec
test
filds
pop
lahf
imul
cmp
adc
xor
je
js
daa
cmpsb
rolb
inc
xchg
sbb
nop
scas
dec
pop
xor
cmpsb
cmc
sbb
mov
mov
dec
decb
jp
add
mov
stos
push
mov
scas
mov
cmp
icebp
mov
ss
sub
gs
fists
pushf
sbb
fldl
arpl
inc
push
dec
add
bound
add
cli
inc
cld
int3
lods
pop
rorb
mov
je
sub
cmp
mov
shll
dec
lahf
shrb
dec
push
mov
cmpsl
push
outsb
loopne
lcall
pop
aas
mov
je
int3
scas
or
mov
mov
mov
adc
shrb
push
insl
sti
cmp
cmpsw
lea
xchg
add
insb
fldenv
jno
jo
je
mov
mov
and
push
test
jl
pop
je
fdivr
ds
adc
cmp
rcll
mov
sub
jns
arpl
mov
xor
sbb
nop
pop
iret
pop
mov
clc
xchg
mov
mov
pop
dec
rcl
int3
popf
dec
pop
aad
enter
jge
nop
movsb
mov
sahf
or
fidivs
cmc
lcall
loop
imul
and
sub
push
int
mov
rcl
sub
pop
mov
xor
test
push
mov
movsl
test
or
aam
cmpsl
cmp
faddp
adc
and
call
inc
xchg
subl
mov
call
cmp
int
jle
add
sbb
push
or
test
and
aaa
xchg
pop
mov
and
cltd
adc
pop
mov
xchg
pop
add
jo
ret
sbb
cmp
xor
sar
ljmp
or
sbb
or
sub
inc
outsb
pop
push
mov
imulb
jae
aaa
inc
sub
daa
push
sti
outsl
in
aas
sbb
cmp
lcall
add
add
jg
cmpsl
cmpsb
outsb
sbb
jge
scas
je
test
fidivrl
stc
adc
decl
mov
ds
lahf
pop
xor
loope
mov
lahf
das
fdiv
cmp
shll
mov
add
ret
dec
mov
dec
sbb
loope
outsb
lds
lods
sub
loop
outsl
add
jae
mov
lcall
jnp
dec
inc
cmc
in
in
add
pop
in
subl
mov
add
push
shlb
mov
and
jns
pop
pop
insb
rorl
js
jo
stos
cld
jp
push
sahf
loopne
clc
repz
mov
pop
pop
sub
jge
add
fdivs
outsl
inc
daa
or
xchg
cmp
clc
add
jecxz
sti
mov
push
fnsave
mov
jbe
das
jp
jl
int
and
mov
nop
add
mov
movsl
lahf
push
mov
pusha
in
das
xchg
adc
inc
decl
lret
add
push
inc
pushf
gs
lock
push
das
xchg
ja
jne
pushf
addr16
ljmp
sub
pop
loope
inc
mov
fnsave
cmp
push
loopne
or
inc
into
mov
into
inc
loop
cmpsb
sub
fstps
out
divb
push
punpckldq
xor
adc
adc
jnp
out
inc
pushf
jl
inc
sarb
call
pop
fstpt
inc
xchg
mov
xchg
sub
loopne
xlat
pop
test
push
leave
push
int
lds
push
sbb
lea
ljmp
mov
fucomp
testl
loop
mov
testl
push
ja
test
data16
cwtl
cmp
test
dec
pop
cltd
jle
inc
orb
addr16
xchg
cmp
subb
inc
das
add
stos
lods
in
data16
xchg
pop
cltd
imul
loope
mov
lahf
push
rcr
roll
xchg
imul
pop
inc
fucom
and
mov
mov
sub
shlb
adcb
lds
xchg
fdivrs
lcall
mov
inc
scas
ljmp
push
and
ret
cmp
cltd
movsl
mov
cmpsl
jbe
aaa
push
inc
mov
mov
sub
dec
pop
aas
jbe
mov
lret
pusha
ss
sub
jg
dec
xor
xchg
sub
dec
aad
add
mul
clc
movsl
cs
push
clc
push
xchg
hlt
pusha
push
movsl
aam
jo
mov
hlt
bound
aaa
outsl
mov
jns
int
cmp
adc
call
mov
int
xor
jg
pop
inc
sbb
fwait
pop
pop
inc
push
loope
and
shrl
or
adcb
jns
repz
aas
mov
sbb
or
movsb
stos
inc
xchg
mov
loopne
icebp
movsl
rol
mov
imul
lods
lods
js
out
mov
inc
mov
nop
in
sti
stos
stos
mov
adc
push
mov
roll
inc
cmpsb
bound
lock
mov
dec
fistpl
and
call
pop
jbe
and
cmc
stos
mov
fisttps
aam
fdivl
cltd
cmpsl
lds
pop
ss
cmp
ljmp
fnsave
dec
pushf
lea
jns
jp
lods
mov
out
cld
dec
and
pop
mov
outsl
mov
ret
pop
or
mov
fstpl
loope
dec
mov
mov
lock
sub
pop
int
test
mov
ror
jno
xor
xchg
imull
aam
fldt
fidivl
lods
mov
dec
jge
cmp
jns
fldcw
jbe
sbb
lods
or
jae
lods
push
mov
mov
repnz
mull
notl
cli
in
inc
sub
imul
mov
cmp
cmp
call
push
fbld
orb
popa
movb
dec
fs
int
xor
cmpsl
xlat
jg
and
andl
jg
jne
push
fistpl
js
dec
inc
sbb
lret
shll
lods
mov
jmp
inc
cmp
or
rcrb
jbe
imul
mov
aam
bound
and
mov
add
mov
dec
mov
xlat
pop
xchg
sbb
mov
mov
dec
sbb
jb
lods
dec
orl
sahf
mov
dec
inc
mov
inc
enter
add
stc
jae
stc
int
lea
inc
and
add
sbb
sbb
std
into
scas
dec
adc
lock
daa
xor
pop
imul
jle
test
cmp
jg
scas
out
addb
scas
cwtl
cmovo
daa
mov
lahf
jb
and
and
add
mov
aam
fmuls
mov
sub
leave
packsswb
out
pusha
das
or
imul
cmc
sarl
pop
outsb
mov
sbb
enter
stos
insl
loope
sti
lods
dec
outsb
iret
jecxz
iret
imul
xlat
popf
ljmp
fsubl
sub
jnp
dec
push
mov
mov
std
out
sbb
dec
mov
inc
add
mov
popf
cmc
push
das
dec
lds
in
dec
mov
rolb
stos
shrb
add
out
int3
test
sti
sbb
pop
jae
push
dec
lods
leave
decl
js
cld
mov
iret
inc
xor
aaa
les
cld
mov
imul
sub
test
add
sarb
test
mov
mov
fldt
mov
ss
or
pop
gs
std
push
adc
sub
repnz
mov
sahf
les
ret
aaa
in
jmp
jmp
hlt
dec
dec
lods
int
adc
pop
push
ret
int3
mov
lahf
or
inc
arpl
lret
xlat
or
jnp
xchg
repnz
int
test
xchg
lods
xchg
push
lock
mov
pushf
or
pop
adc
mov
imul
lods
xor
out
adc
pushl
pop
inc
mov
xor
inc
mov
call
daa
mov
push
or
movsb
push
loopne
cmp
dec
pop
and
js
in
lds
jecxz
out
mov
push
pop
jge
jno
sub
sub
repz
mov
leave
xchg
out
lret
popf
mov
cmpsb
add
dec
mov
sti
test
jb
pop
push
push
dec
or
adc
nop
xchg
xorl
jecxz
fstpt
adc
aam
cmc
and
or
jns
cmpl
imul
or
inc
addr16
or
add
or
lods
repnz
lahf
enter
ja
adc
mov
inc
add
jne
push
adc
loop
xlat
stos
jmp
pop
adc
clc
push
xor
push
nop
push
xor
adc
inc
hlt
adc
xchg
inc
sub
xchg
jno
dec
pushf
mov
stc
bound
das
xchg
iret
add
adc
sti
sbb
add
dec
adc
push
add
and
inc
iret
pop
pop
or
sub
outsl
add
enter
fwait
adc
movsl
sbb
dec
test
in
cmc
mov
scas
jle
into
pop
aaa
or
icebp
cmp
imul
xchg
std
stos
xchg
xchg
inc
push
ljmp
sub
add
push
and
fsubp
mov
rorb
cld
push
sub
addr16
add
xor
jns
int3
cmc
divl
movsl
in
push
aas
daa
mov
movsl
aad
ret
mov
mov
mov
lret
pop
addr16
fistps
cs
xchg
push
jcxz
mov
sarl
fistpll
ljmp
mov
jp
fldl
mov
lods
out
fistpl
jno
cmovge
push
sbb
cltd
xor
test
fldpi
push
push
fsubrs
sar
icebp
mov
daa
ffreep
sbb
mov
adc
test
mov
dec
lds
jo
mov
dec
inc
fdivrs
mov
inc
ds
je
repz
jecxz
or
pop
xchg
cmp
pop
movsl
adcl
lea
lock
pop
xchg
movsb
inc
andb
ljmp
jno
xchg
aaa
shlb
test
dec
push
enter
stc
jle
loopne
pusha
sbb
jo
dec
add
or
adc
in
out
lret
cmp
inc
adc
popa
xlat
ljmp
push
jmp
sbb
int3
movsb
mov
jne
jbe
test
or
inc
mov
push
or
insb
shrb
inc
into
xchg
movsl
fwait
push
add
jg
ja
scas
mov
pop
cmp
mov
iret
xor
lea
ret
xlat
sarb
stos
or
imul
sbb
or
jg
mov
test
movsl
out
sub
sbb
dec
popa
fsub
lods
fsubs
sbb
mov
sub
sarl
popa
add
in
idivl
mov
rorl
pop
lcall
jecxz
lret
dec
jnp
js
adc
test
cwtl
repz
call
scas
loopne
jmp
add
pop
repz
test
stos
jl
and
mov
jnp
testl
iret
aam
js
xchg
stc
cmc
negl
cld
sbb
push
mov
pop
int3
dec
xchg
cmp
push
movl
dec
sbb
xchg
xchg
into
insl
sub
in
cmp
push
add
jnp
mov
add
ret
mov
notl
dec
or
add
shlb
rorl
scas
and
adc
pushf
cmpb
dec
mov
cld
xchg
xchg
jb
and
mov
jbe
out
fcomps
iret
es
outsl
push
ljmp
cmp
xchg
outsb
test
add
stos
clc
dec
jne
fstpt
jl
sub
cmp
incl
test
mov
xchg
aaa
loope
push
cmp
inc
xrelease
xchg
aaa
pop
sbb
xor
std
inc
nop
dec
cmp
jle
sub
mov
pop
and
loop
cld
push
lods
jbe
jecxz
fiaddl
ljmp
outsb
imul
jnp
lods
pop
inc
sarl
fadds
fnstsw
je,pn
int
out
cwtl
jecxz
bound
aas
in
mov
xor
es
out
lods
pop
lea
or
xor
cmpsl
enter
dec
test
shrb
fistpll
or
orl
adc
andb
fisttpll
test
dec
movsb
cmpsl
mov
jns
aas
pop
daa
dec
scas
mov
enter
lret
xchg
xor
jns
adc
sub
data16
pop
or
adc
xor
jmp
divl
inc
pop
xor
xor
clc
or
push
dec
sub
cmc
add
aad
sbb
ljmp
xor
mov
aad
cltd
test
push
push
add
sbb
arpl
inc
dec
mov
mov
cld
aad
jae
mov
or
scas
push
mov
scas
test
aaa
push
fnstcw
cmp
mov
sub
gs
stos
insb
in
mov
jb,pt
pop
inc
mov
pop
mov
xor
xchg
lds
inc
fistps
sbbl
xchg
mov
sub
dec
insl
shrl
nop
lahf
xor
xlat
in
sbb
stc
loope
lock
ss
mov
adc
pop
xlat
push
repz
mov
int
stos
xchg
sbb
stos
lods
rdpmc
or
mov
dec
pop
paddw
stos
mov
fsubr
lods
add
cmp
daa
fs
xchg
cwtl
mov
adcb
call
loop
push
sbb
lret
cli
repz
ja
mov
xor
push
in
adc
outsl
mov
or
add
and
mov
clc
sub
cmp
xchg
or
xlat
repz
orb
sbb
add
ss
data16
ss
aas
mov
mov
xor
cwtl
movl
dec
inc
xor
std
std
icebp
jg
scas
mov
sbb
lods
pop
dec
adc
mov
out
loopne
out
out
fbld
fwait
cld
pusha
cmp
hlt
jmp
cmpsl
imul
push
push
mov
rolb
sub
mov
jp
dec
ja
dec
push
sbb
movsl
std
ja
mov
or
pop
add
lock
xor
pop
and
xchg
push
sbb
mov
push
pop
stc
cli
push
jle
sub
mov
inc
lods
sti
outsb
jb
sahf
out
xchg
cmp
fists
push
dec
xchg
lods
lret
lds
sbb
out
xchg
sbb
jg
fdecstp
push
enter
hlt
fistps
aaa
pop
sub
pop
mov
adc
popl
clc
insb
mov
jno
sti
add
addr16
jno
aaa
mov
scas
loop
cltd
cltd
outsb
cmp
clc
jl
add
cmp
mov
pop
outsb
cli
nop
sahf
shrb
mov
fldenv
mov
mov
mov
outsb
aam
and
pop
bound
pop
jb
xor
and
sbb
sbb
aas
dec
pop
les
gs
push
ss
sti
stc
push
and
sub
jae
movsb
or
inc
push
cld
push
inc
jl
shrl
sti
repz
sub
sbb
lret
xor
xchg
stc
adc
out
push
inc
in
and
fbstp
or
xchg
stc
xor
xor
jg
inc
xor
dec
dec
cmc
lcall
in
mov
xor
xchg
dec
or
sbb
xlat
movsb
push
test
stos
xchg
iret
adc
sub
and
addb
into
jne
and
adc
adc
cmp
test
lock
xor
imul
lods
xchg
in
xor
push
scas
stos
shlb
aam
mov
jg
icebp
lock
sub
cwtl
je
andl
adc
adc
dec
mov
or
negl
sub
and
repz
sbb
dec
add
lods
pop
popf
mov
pop
ficoml
mov
sub
add
aam
xadd
dec
ss
sub
dec
test
cmp
mov
ffree
mov
nopl
xchg
shlb
pop
pop
push
repnz
dec
sbb
mov
pusha
inc
lcall
sbb
nop
and
mov
pop
jbe
mov
xchg
imul
pop
or
pop
int3
push
mov
popf
sbb
push
repz
push
mov
pop
rolb
jl
das
or
sbb
outsl
subl
jno
adc
loop
cmp
and
into
dec
lahf
js
dec
fs
xor
jge
jmp
sbb
pop
or
clc
adc
xor
adc
xor
sub
pop
dec
fistpl
inc
sahf
add
fs
test
int
out
outsb
xchg
inc
mov
xor
and
aas
insb
lods
rcll
bound
loopne
ret
dec
mov
jmp
mov
out
jp
push
aaa
bound
or
sub
dec
dec
cmp
das
mov
xchg
add
dec
xchg
xor
aad
xor
imul
xchg
cmp
jae
mov
add
mov
lahf
dec
jb
lea
test
jmp
push
cmp
lret
inc
or
jne
mov
out
sbb
cs
cwtl
nop
scas
xchg
les
movsb
sub
pop
insb
divb
cmp
std
mov
lret
shll
and
and
test
fimuls
add
cltd
add
mov
xor
inc
testb
addr16
xorb
jp
daa
mov
add
test
loop
jb
inc
and
icebp
js
inc
jns
arpl
popf
ljmp
push
mov
push
movsl
xor
popa
add
pop
inc
int3
sbb
xchg
adc
loop
out
scas
leave
jns
das
popf
popf
test
popa
iret
dec
cltd
sbb
or
push
cmp
xchg
popl
adc
jo
push
xor
mov
ret
jmp
fistl
jp
imul
rolb
add
push
adc
pushf
imul
loope
cmpsb
hlt
fsincos
xchg
sbb
pusha
in
jo
or
cwtl
mov
pop
pusha
sbb
sub
push
add
mov
and
fwait
test
or
dec
outsb
fwait
xchg
add
xchg
fldl
xor
shl
jns
push
pop
test
mov
fs
dec
fildl
jmp
xchg
cmp
out
mov
add
into
fimull
fdiv
rolb
cmp
aam
dec
mov
pop
scas
int3
jbe
jo
xor
fstpt
xor
sub
and
cltd
cmp
in
bswap
mov
repnz
enter
repz
inc
push
mov
in
int
test
movsb
and
xlat
repz
push
mov
pop
adc
inc
mov
in
xchg
push
out
pop
das
cmp
xchg
jb
jb
inc
out
dec
or
rcrl
cltd
jno
mov
out
mov
xlat
stos
jns
lahf
pusha
xor
fdivrs
push
ret
mov
out
rcr
inc
rorl
mov
popf
adc
dec
push
mov
pop
sub
dec
dec
pusha
mov
xlat
gs
mov
and
mov
push
insb
adc
inc
ljmp
das
xor
and
inc
out
and
sar
inc
adc
mov
jp
in
mov
mov
fidivl
or
push
fmuls
fs
cmpsl
mov
pop
sahf
js
xchg
mov
gs
jo
leave
outsl
push
dec
mov
lds
push
mov
mov
xchg
mov
sahf
lret
xor
pushf
icebp
std
cmp
ljmp
lods
push
mov
cmp
mov
push
and
cltd
mov
push
inc
mov
or
in
push
pop
add
sbb
scas
jmp
pop
std
cwtl
mov
sti
das
imul
mov
int
adc
or
test
inc
lods
jg
arpl
das
loop
mov
int3
jnp
push
in
cwtl
dec
fstpt
or
mov
stos
ret
mov
out
ficompl
pop
dec
push
dec
inc
push
dec
shlb
mov
sahf
push
adcl
mov
data16
leave
cmp
mov
mov
push
pushf
dec
cmp
xor
mov
add
out
int
std
sbb
add
push
inc
int
mov
lret
and
push
lods
mov
loope
jb
fwait
out
scas
xlat
arpl
ja
popf
cmp
lcall
movsl
std
pushf
jb
jl
add
pusha
xchg
shrb
call
mov
mov
jne
loope
out
sahf
divl
outsb
js
cmp
adc
mov
xchg
mov
call
and
jno
mov
mov
data16
lret
xchg
mov
xchg
xchg
loop
stos
jo
imul
lds
pop
jg
xchg
lret
xlat
pop
mov
cmp
outsl
mov
xchg
cmpsb
xlat
cmp
xor
pop
aad
inc
pusha
cmpsl
outsb
dec
xor
test
imul
lret
loope
and
sub
int
cmp
stos
lods
jp
ret
sub
inc
loopne
lds
loopne
mov
out
push
xchg
mov
jecxz
adc
iret
xchg
stos
jno
push
scas
inc
jo
sub
addr16
mov
pop
cmp
in
push
cwtl
jae
lret
adc
enter
mov
movsl
jge
mov
cwtl
xor
shlb
jae
cmpsl
lods
mov
add
popf
fwait
pop
dec
push
mov
pop
pop
pop
inc
ljmp
xchg
pop
and
add
sub
rcrb
movsl
bound
ds
adc
js
cmpsl
int3
mov
cmpsl
icebp
jae
sarb
cmpsb
jle
xor
mov
int
mov
push
xchg
aas
xor
enter
sub
loope
lahf
ljmp
push
fnsave
out
add
roll
cmp
and
in
rorb
mul
ret
push
dec
jle
inc
out
shll
stc
sub
inc
lret
dec
dec
imul
cmpsb
pop
imul
sub
or
cld
decb
or
mov
push
out
cs
adc
cmpsb
sub
call
popf
subb
dec
addr16
sub
xor
push
cmp
fs
rcll
add
std
in
test
cmpsb
rol
fs
int3
pushf
and
popf
adc
sub
and
push
pop
call
xchg
pop
push
or
loopne
jae
and
sbb
cmp
cmpsl
daa
test
dec
out
jo
mov
sub
pushw
mov
aaa
jno
lret
xchg
ss
sub
lea
aad
sub
inc
movsl
adc
mov
lock
std
ss
adc
stc
push
sub
pop
lods
mov
xchg
fscale
lds
jo
scas
mov
and
fldt
mov
xchg
scas
adc
icebp
xchg
push
out
push
movsl
push
daa
or
mov
js
push
xor
lret
sub
jg
scas
adc
out
fmul
cmp
inc
xchg
pop
inc
shrl
movsl
fucompp
mov
es
lret
sbb
mov
outsl
out
mov
ss
adc
push
push
fnsave
xor
mov
xchg
sbb
jbe
mov
cli
inc
icebp
jecxz
popf
sbb
dec
mov
stos
cmp
add
xchg
imul
add
inc
lds
fcompl
xchg
lock
adc
pop
push
inc
and
pop
add
scas
outsb
loop
xor
rcll
ret
sbb
cmpl
je
hlt
mov
cmp
or
xchg
cs
dec
xchg
push
in
add
jae
popa
push
and
mov
stos
xchg
movsl
and
mov
push
lcall
mov
dec
addr16
call
fcomps
and
lds
cmp
daa
shrl
sbb
adc
mov
inc
repz
popf
daa
insb
xor
push
ss
adc
jmp
jle
mov
inc
push
adc
aaa
jle
rorl
repz
out
pop
inc
adc
push
mov
push
pop
xchg
inc
jge
mov
sbb
rcrl
jecxz
out
std
add
stos
mov
lods
sbb
jmp
sbb
cmpb
mov
add
insb
xchg
stos
icebp
push
pop
push
test
movb
outsl
cmp
adc
mov
nop
sti
sbb
push
fidivrs
jo
addr16
adc
or
les
pop
dec
in
aas
cmpb
xchg
in
mov
pop
rorl
movsl
cli
cmp
mov
test
xchg
mov
sti
push
adc
xor
add
rclb
pop
adc
jb
and
sbb
push
inc
rolb
jle
jmp
ss
mov
push
mov
imul
test
inc
cmp
filds
push
mov
xchg
or
and
push
jecxz
xor
mov
xchg
adc
dec
std
lods
push
and
jmp
mov
xchg
aaa
call
add
mov
mov
jb
push
movsl
or
sbb
test
cmc
je
push
leave
add
insb
and
stos
jns
pop
or
sbb
cmp
cld
xchg
daa
leave
push
lahf
inc
mov
and
inc
enter
cld
roll
pop
jne
jnp
or
sbb
lret
jle
mov
imul
jnp
push
mov
mov
es
jnp
lret
int
mov
or
jl
push
lods
js
jbe
xor
ret
and
inc
mov
stc
clc
decl
jbe
lods
pop
call
les
fiaddl
test
inc
lret
mov
cmp
push
fsubp
push
or
jae
adc
jns
cmp
jmp
in
mov
imul
idivl
popf
stos
sbb
adc
std
sahf
mov
cli
push
dec
popa
stos
aaa
cmp
sar
push
mov
loope
jne
leave
sbb
cld
in
jmp
flds
cmp
inc
stos
jne
dec
mov
mov
notb
scas
mov
sub
lea
sbb
mov
and
xchg
and
movsb
mov
imul
sub
push
movsb
dec
ds
inc
mov
mov
mov
adc
callw
xor
out
and
xlat
outsb
loop
in
lods
xor
ret
push
dec
fs
cmc
sbb
cmpsl
xor
pop
push
je
cmp
out
dec
lahf
addl
add
test
push
sbb
pop
sub
fnstsw
push
movsb
and
cs
insl
xor
lods
popa
movsl
mov
jg
sub
pop
mov
jecxz
jo
mov
gs
mov
or
sbb
xchg
in
sbb
imul
je
lret
jb
pop
sbb
xor
jl
push
add
es
lea
xor
dec
lcall
faddp
cmpsb
bound
adc
xlat
mov
mov
add
or
adc
in
and
fstps
imul
xor
dec
test
cmp
sbb
orl
inc
jae
mov
cmp
cld
gs
mov
sub
pop
and
xlat
sbbl
clc
push
adc
dec
mov
lret
idivl
cmp
iret
sarb
adc
mov
jl
push
cmc
xchg
pop
nop
arpl
daa
sub
cmp
mov
hlt
sbb
imul
fnstcw
or
mov
inc
dec
or
dec
clc
cmpsb
mov
testb
jg
fistl
je
ret
xor
pushf
mov
adc
mov
push
mov
aaa
rcll
cmp
rolb
in
add
fldlg2
cmp
fwait
jae
mov
mov
sarb
adc
and
out
in
mov
adc
mov
push
push
sbb
notl
or
cmpsb
repz
mov
movsl
xchg
ret
lods
mov
mov
std
push
or
pop
mov
outsl
popf
ss
mov
lea
or
xor
xor
mov
jns
fcmove
ja
orl
shrl
push
cmp
sahf
and
add
xchg
fildl
js
pop
push
inc
mov
xor
cmp
mov
inc
jg
into
jns
add
mov
xor
cmp
pop
sbbb
les
loop
dec
jmp
lcall
out
ja
cmp
leave
cmp
sub
clc
fcmovnb
mov
int3
xor
cs
mov
sub
jbe
jl
fldcw
jno
lret
fidivl
popa
or
cwtl
inc
pop
stc
sub
cmc
mov
adc
outsl
inc
sti
popf
fndisi(8087
nop
adc
and
lods
setp
add
xchg
xchg
lock
or
push
fcomps
daa
sub
popf
xor
xchg
cmc
mov
fwait
subl
in
je
out
ss
xor
push
and
es
lcall
daa
mov
or
jmp
xchg
inc
xchg
push
bnd
fwait
test
adc
stos
xchg
xlat
gs
push
je
je
xchg
push
jns
and
rcl
cmp
jnp
outsl
xchg
dec
and
mov
pushf
insb
fs
and
mov
data16
fcoms
loope
lea
into
dec
inc
pop
inc
ret
test
mov
mov
and
imul
pcmpgtw
lcall
mov
shrl
lea
arpl
cwtl
jmp
cmp
mov
outsb
enter
push
sub
test
push
loop
xchg
mov
inc
mov
fidivs
sbb
mov
or
sub
inc
pop
fwait
sbb
mov
and
shl
mov
dec
cmp
pop
adc
fisubl
pop
push
shll
adc
xchg
out
mov
and
mov
push
insb
push
orb
loopne
adc
hlt
jno
sbb
xor
nop
into
cld
push
jnp
adc
std
dec
xor
shr
xor
ja
dec
in
add
cltd
and
data16
xor
jle
cmpl
fcmovne
adc
or
fsubrl
and
aad
popf
xchg
mov
dec
xchg
pop
cli
dec
movsb
jnp
jg
stos
out
iret
int
outsl
sahf
fwait
mov
inc
call
jg
outsl
mov
xlat
mov
sbb
xor
out
cs
lock
and
shrl
cmpsl
insb
cmp
sbbl
dec
jmp
pop
decb
lods
movsb
xor
xchg
jle
shlb
dec
jns
pop
loop
ret
push
jbe
mov
xor
add
out
sub
dec
pusha
mov
or
mov
dec
inc
ja
aam
cli
cs
scas
pop
push
fimull
xchg
inc
mov
add
std
cld
dec
push
pop
mov
shrl
jnp
leave
and
inc
cmp
mov
adc
inc
in
push
ds
xchg
jo
jae
fiaddl
xor
int3
sti
and
dec
test
xor
pop
cmp
lahf
xor
pop
fs
xchg
in
add
xor
rcrb
mov
push
jmp
shrb
cmp
adc
imul
cmpl
jle
mov
insl
mov
inc
mov
cmp
filds
scas
push
mov
cmp
test
jns
mov
hlt
xor
lds
movsb
sarb
xor
iret
repnz
add
inc
in
fwait
into
mov
xor
mov
int
mov
push
cmp
pop
pop
dec
dec
sub
pop
aaa
leave
pop
fwait
mov
icebp
dec
ret
mov
jo
xchg
daa
int
jo
cmp
fistps
or
push
dec
jns
lods
movsl
pop
cs
dec
cmc
fsub
mov
push
jo
ret
xor
test
sahf
mov
sti
dec
add
dec
jmp
lods
mov
faddp
xorb
mov
push
testb
mov
sbb
jmp
pushf
jnp
xchg
stos
movsb
mov
mov
es
mov
aam
cli
test
and
mov
js
jb
push
jb
mov
sub
jmp
add
add
aam
in
in
fnstsw
call
push
aaa
dec
mov
cmp
xchg
repnz
xor
push
mov
jmp
xor
pop
adc
hlt
gs
add
sbbl
mov
test
out
pop
xchg
pushf
fsts
das
xchg
roll
and
cmp
outsl
test
push
lahf
push
sarb
cmpsb
mov
cmc
xchg
imul
and
movsb
les
icebp
push
loop
pop
and
adc
push
cmp
jae
push
loopne
test
inc
sub
int
xor
pop
dec
cmp
and
nop
fadd
push
jb
in
and
fcompl
stos
mov
cmp
pop
mov
in
inc
icebp
or
rorb
cmp
fchs
je
jl
lret
add
lsl
xor
stos
aad
ja
clc
imul
pop
push
pop
fwait
push
cmpsb
jo
pop
repz
dec
sub
rolb
inc
mov
orb
pop
insl
sub
enter
fisubrl
and
sub
pushf
int3
pop
sub
outsl
out
or
mull
add
and
fidivrl
insl
add
sub
mov
add
stc
stc
mov
and
lret
das
jp
sbb
les
popf
pop
adc
aaa
dec
mov
out
jle
scas
cmp
xchg
scas
and
fimull
or
inc
or
mov
cmp
mov
loope
bound
inc
lcall
imul
scas
aad
dec
insl
fs
xchg
leave
jns
sbb
sub
outsb
push
les
movsl
mov
jae
enter
xchg
mov
sbb
decl
cmpsb
call
or
imul
xchg
jns
push
enter
pop
ja
pop
cmpsb
call
js
lods
stc
add
sub
push
jns
fildl
ficompl
imul
hlt
jle
arpl
dec
sub
into
pop
cmpsb
fiadds
lock
cmp
jnp
out
dec
cmp
ret
sarb
mov
dec
icebp
hlt
pop
cmp
mov
sbbb
sbb
out
pusha
je
xchg
push
mov
push
lea
int3
ds
lods
inc
ret
leave
fnstsw
sbb
es
lods
mov
scas
test
pop
mov
test
sbb
push
das
mov
mov
inc
or
xor
rol
push
jg
pop
dec
pop
into
les
sub
push
int3
add
lret
nopl
lret
sub
lret
mov
push
iret
lods
adc
or
sbb
pushf
outsl
dec
xchg
add
aam
icebp
jg
mov
jg
repnz
push
dec
rorb
sub
mov
add
sub
xchg
inc
movsb
pushf
loop
add
jns
cli
js
and
or
and
push
addl
inc
daa
movsb
or
ret
rep
popf
hlt
fxch
and
push
sti
inc
mov
cmp
pushf
movsb
popf
jnp
pusha
xor
jg
inc
stc
ret
xchg
ss
push
mov
ret
dec
lods
adc
xchg
repz
fimuls
push
sahf
das
jecxz
push
push
mov
jg
pusha
sbb
lods
push
enter
pop
sbbl
call
xchg
inc
cmp
push
in
lods
cmpsb
adc
push
add
push
inc
roll
mov
dec
ss
mov
out
dec
arpl
andb
lods
xchg
mov
mov
adc
adc
dec
orb
sbb
dec
xchg
inc
xor
lcall
aaa
cmpsb
mov
inc
nop
popf
fisttpll
icebp
xor
pushf
sbb
xchg
dec
mov
enter
or
xor
and
and
jl
incb
cmpsl
adc
repnz
jecxz
cmp
add
movsl
movsl
addl
scas
lret
mov
mov
imul
pushf
loope
push
cmp
mov
mov
ret
ret
lock
mov
xchg
jae
stos
shrb
loope
loopne
fwait
je
xor
loope
aaa
daa
xor
sbb
aas
pop
pop
lahf
pop
mov
out
and
fdiv
push
sub
adc
or
mov
sub
mov
dec
jne
jns
push
add
cmpl
add
inc
inc
fwait
or
pop
fs
jg
mov
shrb
xchg
xchg
xor
ficoms
loopne
mov
or
push
jne
gs
ljmp
ret
pop
push
and
pop
xor
or
cmp
sub
rcll
jge
jg
mov
in
inc
push
adc
loope
dec
je
jecxz
mov
adc
cmp
les
xor
push
sbb
add
sbb
test
lods
mov
ja
stos
hlt
or
je
add
int
xchg
xchg
imul
push
push
or
add
int
push
sbb
cmp
aaa
pushl
cmp
andb
std
and
shrb
in
pop
insl
mov
dec
push
scas
imul
jg
mov
imul
test
sub
mov
hlt
jp
inc
sahf
jne
and
jb
add
xchg
ror
test
data16
xchg
enter
ffree
or
sbb
loopne
xor
bound
sti
or
mov
mov
hlt
sti
ds
flds
data16
int
aaa
sub
pop
pushf
lret
movsb
cmp
sbb
call
ljmp
fwait
push
sarb
mov
lahf
into
pop
mov
aad
jne
pushf
or
sub
ret
pop
xchg
cs
shlb
inc
aaa
rcrl
pop
mov
dec
gs
jae
sti
addl
cltd
das
pop
inc
sti
sbb
xchg
repnz
test
int
cs
mov
xor
mov
test
adc
sub
movsb
sbbl
mull
sbb
mov
mov
loopne
in
xor
jge
xchg
pop
xor
stos
loopne
fldl2e
xor
ja
lret
fidivrs
add
jo
pop
lea
jae
arpl
or
inc
les
jb
out
ja
mov
push
cmp
inc
lret
out
ss
fmul
movsb
jne
imul
push
jmp
or
aas
stos
sti
cltd
xchg
push
ja
subl
mov
nop
mov
xlat
addl
xor
push
subl
bswap
mov
sbb
lea
in
movsb
or
repnz
adc
cld
imul
lods
or
jmp
xchg
scas
push
out
xchg
pop
loop
dec
push
cwtl
loopne
dec
fwait
cmp
cmc
mov
hlt
aaa
pop
xor
xchg
repz
in
pop
cmpsl
fs
push
push
dec
mov
jns
std
mov
jbe
sbbl
inc
xchg
jns
sti
inc
rorl
ror
pusha
pop
cmp
les
inc
in
xchg
cmpsb
cmp
mov
std
add
rclb
pop
mov
pop
pop
in
push
jo
xchg
andb
jns
xchg
les
dec
mov
imul
mov
mov
xchg
inc
sub
xchg
scas
sub
out
gs
ret
mov
repz
ret
inc
sub
aad
mov
ficompl
fldcw
inc
xchg
loop
mov
aad
push
scas
cmp
pop
movsl
dec
paddusw
xor
andl
ja
mov
test
and
or
movsl
enter
mov
imul
das
or
add
cltd
jle
fnsave
push
mov
mov
jns
fs
lock
sub
out
cs
js
dec
cmp
outsl
int3
mov
ss
out
xchg
sbb
popa
ljmp
scas
insb
adc
insl
lea
fwait
adc
lea
out
outsl
movsb
push
mov
push
add
xchg
and
inc
insb
shll
sbb
pop
stos
pop
sbb
push
hlt
fcomip
gs
roll
pop
jp
movsl
dec
cld
xor
jg
ds
push
jo
sub
in
sbb
mov
mov
cmc
xchg
ljmp
fcompl
shlb
mov
inc
push
pop
xchg
js
into
aad
xchg
jmp
push
or
scas
push
inc
jbe
ret
mov
cltd
cmpxchg
arpl
push
rorl
hlt
ljmp
jecxz
lods
mov
sahf
or
aaa
dec
jg
cwtl
mov
rorb
push
xor
jbe
lcall
sahf
jo
dec
dec
mov
mov
mov
adc
sbb
inc
lahf
jo
and
arpl
out
nop
lcall
push
jp
test
sub
cmc
mov
mov
and
dec
mov
push
into
orb
and
xlat
or
add
mov
push
in
test
inc
dec
in
jl
fs
fnsave
mov
mov
push
fldt
sbb
dec
or
inc
out
mov
or
and
in
jb
bound
popf
add
xchg
dec
pop
push
jp
jl
shll
test
mov
mov
add
leave
cmpsl
pusha
xchg
push
and
sub
cmp
fstps
sub
xor
cltd
xor
mov
or
sbb
jge
dec
mov
xchg
mov
xchg
jl
pop
mov
add
jnp
jg
hlt
fsubs
inc
scas
pop
sub
mov
iret
popa
call
jne
lock
and
imul
hlt
data16
sub
mov
adc
inc
int
pop
xor
pop
cmpsb
mov
insb
cmp
aam
pop
je
test
xorl
aaa
outsl
lds
adc
and
test
mov
pop
add
out
testb
cmp
stos
stc
in
cmpl
outsb
push
stos
lahf
add
jmp
and
rolb
ds
xlat
cmp
faddl
cmp
mov
xchg
clc
pop
pop
mov
adc
jmp
pushf
movsb
sub
pop
adc
fimull
adcl
in
adc
scas
jnp
adc
pusha
test
adc
lods
add
and
xchg
and
das
and
sarl
add
jnp
mov
lds
loope
stos
jns
cmp
jnp
mov
pop
jmp
pushf
mov
stos
mov
loopne
mov
sbb
arpl
test
mov
lds
pop
loop
arpl
mov
jne
xor
shll
xchg
jns
ljmp
sbb
xor
add
fbld
lock
pop
adc
xchg
int
lcall
stc
mov
xor
pop
ret
scas
scas
lret
shll
mov
outsb
and
stos
cmpb
test
lahf
jae
in
andl
call
aaa
jmp
outsb
jl
cmp
add
xchg
sub
add
push
rorb
inc
popa
and
sbb
mov
jp
mov
stos
cmpl
mov
loope
jno
xchg
dec
mov
std
les
nop
ret
xlat
fiadds
dec
jno
fabs
mov
iret
jl
fcmovb
aas
lcall
in
stos
sub
call
cmp
pop
mov
or
lcall
shl
scas
jmp
mov
lahf
mov
fstpt
xor
jne
sub
mov
and
push
cmp
cwtl
in
or
imul
jmp
cmp
sub
mov
mov
lock
pop
ss
fbstp
mov
pop
ljmp
ficoml
nop
mov
adc
add
xchg
mov
add
rorl
push
mov
mov
icebp
ljmp
shll
mov
jp
mov
test
inc
les
andl
inc
sbb
adc
add
mov
fimull
adc
push
int3
stos
push
popf
iret
xchg
mov
adc
subl
and
inc
nop
flds
or
add
jae
lods
repnz
xchg
loop
out
mov
add
ret
mov
movsb
sarl
decl
dec
mov
lret
out
xor
pop
fldenvs
adc
inc
les
cmc
ret
dec
push
and
mov
push
popf
fwait
es
cmpsb
push
xlat
or
push
pop
inc
bound
cltd
mov
fistl
mov
or
shll
jge
fstpt
push
mov
cmp
test
xor
cmp
and
jle
bound
inc
orb
xchg
stc
pop
inc
std
loop
pop
aaa
xchg
aas
ss
cmp
xor
adc
fldcw
push
fiaddl
sahf
andl
das
xor
scas
add
push
shrb
cmpsb
push
insb
aam
aam
into
das
dec
fninit
and
mov
and
dec
jnp
shrb
mov
mov
cwtl
outsl
xor
out
xchg
lcall
pop
out
mov
incl
shll
imul
das
inc
push
mov
xchg
sbb
push
inc
mov
xor
clc
xor
cmpsl
push
cli
test
cmp
popa
xchg
movsl
dec
fs
leave
enter
outsb
jp
xchg
fs
cltd
sahf
test
dec
out
test
movsl
sub
ret
inc
push
fidivrs
xchg
testl
pop
insb
cli
scas
cmpsb
pop
mov
sti
pop
jl
popf
fisubrs
pop
jg
daa
out
push
push
jl
lods
test
mov
fidivrl
sahf
mov
xlat
pop
js
sub
jo
jmp
pop
xchg
push
popf
push
mov
leave
aas
adc
nop
adc
push
hlt
sub
mov
push
sub
mov
adc
nop
negl
insb
movsb
dec
fwait
pop
push
loope
adc
fwait
sub
or
pop
adc
sub
inc
pushf
bnd
pusha
test
rep
cmp
mov
cmpsl
push
js
push
or
inc
arpl
xor
push
cli
sbb
idivl
call
sub
orl
ret
int3
xor
adc
loope
sbb
test
sub
sahf
clc
mov
jle
ljmp
or
ja
fnstcw
sbb
repnz
dec
imul
or
push
dec
test
inc
mov
enter
inc
cmp
mov
in
fwait
push
sahf
int3
add
shlb
je
mov
icebp
cmp
out
lcall
pop
out
aam
lret
mov
ljmp
add
mov
add
jge
xchg
int3
mov
leave
sub
imul
loope
fwait
xchg
loopne
ss
iret
scas
mov
push
in
out
sahf
push
cli
ficomps
jo
lahf
sbb
hlt
shr
mov
jbe
fldl
cwtl
sbb
ja
loope
lcall
or
lock
inc
sub
fisttps
mov
out
cwtl
and
and
bound
push
mov
push
stos
sub
pop
push
pop
jne
repnz
push
or
jg
mov
push
xchg
xor
adc
add
mov
fnsave
dec
stos
cmp
mov
mov
fsubs
mov
push
pop
pop
sahf
jp
sub
ret
mov
xlat
mov
pop
push
andb
xchg
jge
popf
arpl
jg
cmp
push
lret
les
mov
leave
sub
insl
mov
xor
pop
push
repnz
ret
ret
aad
gs
push
add
jb
insl
nop
and
test
aad
xchg
cmp
rol
ja
int3
push
loopne
xchg
pop
insl
test
add
dec
and
test
lahf
mov
jp
stos
mov
in
sbb
xchg
lock
inc
sbb
adc
push
sub
fidivs
aas
ror
push
mov
xchg
in
cltd
push
mov
dec
bound
mov
ret
stc
repnz
xor
mov
icebp
pop
jge
dec
daa
lret
adc
add
xchg
xor
and
push
movsb
rclb
divl
xorl
clc
pop
jne
sbb
outsl
test
inc
addr16
xorb
adc
adcb
stc
and
cmp
xor
dec
mulb
sbb
addr16
fwait
stos
cwtl
sub
outsb
adc
adc
mov
jnp
int3
adc
dec
iret
xchg
hlt
add
aad
add
mov
adc
xchg
add
ret
cmp
ss
ds
in
repz
popa
aas
mov
xlat
mov
clc
in
xchg
aas
jecxz
and
xor
mov
fnsave
subb
js
and
pop
push
cld
js
cmp
dec
pop
mov
popa
aad
out
or
adc
iret
jne
add
dec
xchg
push
test
fistps
pop
and
jno
mov
rorl
test
sub
cmc
jge
shll
adc
lods
adc
leave
lret
mov
fcmovu
orb
outsb
add
popa
jno
mov
les
mov
cwtl
jl
pop
dec
bound
aas
add
ret
push
mov
test
mov
std
ja
test
jg
xor
mov
cld
dec
or
push
js
adc
popa
and
repnz
xchg
sub
xor
xlat
mov
and
mov
mov
xor
xchg
int
test
sub
cwtl
gs
js
fldenv
xor
pop
es
pop
mov
in
mov
add
cmc
sar
mov
mov
arpl
popf
xor
sbb
in
outsl
mov
jbe
adc
pop
mov
cmc
inc
mov
lahf
xchg
push
fstp
or
mov
inc
nop
xchg
stc
sbb
cmpsb
lcall
dec
mov
out
xlat
mov
cmpsb
xorl
fiaddl
mov
cmp
js
testb
nop
mov
add
loope
dec
es
fdivp
cmp
ret
jne
xchg
adc
jmp
shlb
xor
f2xm1
in
cli
or
aaa
dec
and
movb
dec
shl
cmpsb
pusha
repz
push
mov
push
aaa
fdivrl
sbb
cmp
or
xor
popa
icebp
sub
imul
sahf
adc
ja
nop
or
dec
popf
or
push
lret
sahf
mov
lds
nop
sbb
sahf
sarl
xlat
push
mov
jg
stos
push
negb
mov
jb
cmp
mov
pminsw
in
inc
mov
lcallw
repnz
or
xor
sub
xchg
mov
add
dec
sti
imul
or
dec
adc
inc
dec
into
test
das
lahf
int
jns
sub
js
lea
fwait
sub
push
leave
and
bound
or
and
add
dec
and
cmp
sbb
push
add
mov
push
jne
cmpsb
cwtl
icebp
pop
sbb
in
mov
push
and
jae
rcr
in
ss
sbb
enter
add
mov
aas
sub
int
imul
add
lds
jae
mov
cmpl
inc
pushw
push
lcall
pop
xchg
aaa
add
cwtl
cmp
cmp
cmp
lea
enter
or
mov
push
sti
ret
pushl
imul
mov
and
mov
sbb
ja
repz
inc
mov
push
sbb
and
int3
ds
pop
in
idivl
mov
bnd
push
sub
bound
scas
mov
mov
jbe
adc
pop
test
sub
out
mov
mov
or
and
push
je
push
cltd
jnp
xor
xchg
cmp
add
xchg
xor
xchg
cmp
mov
lock
xlat
cmp
mov
jo
fneni(8087
movsl
loopne
cwtl
sbb
in
rcrb
mov
or
rcll
sarl
xlat
push
sbb
repz
pop
pop
fists
push
loop
jo
fcompl
sbb
ret
mov
cmp
arpl
dec
dec
test
movsb
ror
mov
iret
add
sbb
mov
das
xlat
clc
mov
mov
repz
imul
mov
subl
lds
in
dec
jae
mov
or
push
das
inc
mov
and
adc
inc
push
stos
inc
jo
xchg
mov
out
pop
insb
sub
mov
push
xor
out
cmp
add
gs
psrlw
outsb
out
dec
cmpb
lods
cs
mov
fnstsw
add
outsb
mov
out
stc
jo
sub
push
leave
cmpsb
push
loopne
hlt
xchg
movsb
ja
test
in
adc
dec
cmp
pop
mov
and
cld
into
sbb
add
dec
pop
aad
sbb
scas
or
sbb
mov
mov
push
mov
and
sbb
xchg
stos
jecxz
inc
roll
adc
pushf
out
sbb
in
shlb
and
testb
les
xor
mov
push
xchg
jle
jno
test
pop
or
lods
sbb
mov
jp
cmp
pop
loopne
adc
lret
add
pop
lds
lret
cmp
je
xchg
clc
or
push
loop
stc
arpl
cld
jmp
xchg
fcoms
jecxz
sahf
scas
lcall
lock
insl
pop
orl
aad
dec
sbb
in
sub
cmc
ror
jg
sub
jl
sahf
push
push
daa
mull
les
jae
imul
add
add
loope
mov
movsb
daa
xchg
lods
jp
cwtl
je
push
cmp
jl
xchg
cmpsb
fistpl
and
inc
rcll
dec
lret
push
es
xor
cld
std
add
xor
jl
mov
sub
shl
dec
xchg
push
in
into
scas
aad
je
pop
fcmovu
pop
and
daa
mov
lods
mov
cld
xor
mov
mov
jp
rol
test
sub
cmp
lahf
shl
shll
pushf
or
jbe,pt
lcall
mov
and
lea
js
mov
mov
andl
clc
cli
pop
or
out
xor
sub
mov
outsl
test
es
movsl
jl
pop
mov
insb
inc
add
xchg
shl
xchg
addb
das
fsubrl
cmp
lock
lcall
push
rcrl
int
aad
into
sbb
mov
icebp
int
xor
fistl
in
sarl
push
scas
and
and
insb
js
aam
and
xor
cmc
scas
mov
dec
aas
call
lret
sub
mov
fcomps
lcall
adc
xchg
cli
js
in
imul
inc
jns
loope
test
rcl
bound
and
cmp
aas
push
and
jo
cmp
push
pop
add
nop
or
movb
popf
lds
into
mov
cmp
add
inc
sub
add
mov
aas
push
push
faddl
test
pop
sbb
ret
cwtl
test
mov
insb
leave
jno
mov
xchg
sub
or
in
cmp
xchg
mov
test
shrl
xchg
aas
lea
imul
add
std
repnz
cmp
shr
jle
mov
add
pop
aas
sub
xchg
push
aad
or
inc
lock
inc
jno
aaa
icebp
cs
test
xor
pusha
pop
mov
sbb
into
fldt
push
sub
and
push
and
clc
pushf
fstpt
jge
push
out
mov
add
pushf
in
push
dec
andl
mov
adc
sbb
jno
mov
jnp
push
fwait
addr16
xlat
push
dec
lea
popf
jge
and
stos
add
leave
xchg
mov
mov
xor
das
test
xlat
pop
and
push
out
repnz
jl
and
ds
sub
and
cwtl
jge
xchg
sub
xchg
loope
jg
lcall
lret
or
ljmp
or
push
into
test
loop
out
pop
push
adc
push
mov
shll
and
mov
lock
cmpsl
or
pop
adc
mov
out
call
mov
xchg
testb
outsl
cld
ljmp
popf
dec
dec
sti
xchg
pushl
aas
xchg
xor
pop
mov
cmp
xchg
push
psubb
mov
ficomps
jbe
jnp
or
loope
push
dec
jno
adc
adcb
iret
sub
add
sbb
aad
iret
test
gs
sbb
lret
dec
pop
dec
ret
rorb
and
mov
clc
mov
iret
and
icebp
add
inc
mov
imul
jl
ja
inc
loop
fildll
iret
outsb
loop
ret
mov
imul
pop
lcall
lahf
std
out
pop
xor
test
fiadds
into
jg
dec
add
imul
pop
sbb
or
bnd
lds
pop
add
dec
dec
divb
frstpm(287
mov
ret
xchg
fs
es
xor
sbb
push
sub
pop
and
push
movsb
add
sub
and
push
xor
xchg
sarb
mov
inc
rcrl
cs
mov
lcall
inc
mov
mov
lcall
cli
sahf
sbb
mov
pop
ficoml
imul
pop
pop
fdivp
bound
push
dec
and
aas
repnz
sbbb
out
push
sub
sub
out
loopne
mov
jp
bswap
lret
sbb
jmp
mov
sub
cmpsb
aad
jge
pop
sbb
pusha
sub
int
insb
in
sbb
pop
cmp
cmp
iret
js
mov
ficoms
fisubs
inc
cs
adc
aaa
mov
aaa
ficoml
adc
cmpsl
add
mov
data16
sbb
ljmp
xchg
inc
clc
push
fldt
add
inc
mov
shll
cld
cmp
jb
dec
sub
fidivl
in
mov
inc
clc
adc
or
xchg
cwtl
mov
pop
pop
mov
insb
pop
sbb
cmp
mov
mov
push
xor
scas
test
lret
out
jge
mov
or
arpl
dec
pop
or
push
fistpl
lds
add
mov
aam
ds
pop
loop
cltd
xchg
fildl
ret
das
dec
ret
rep
stos
stc
cwtl
xchg
adc
data16
mov
pop
lods
xchg
mov
inc
aas
dec
mov
mov
mov
mov
clc
xchg
mov
jae
sbb
cmc
push
test
mov
lods
mov
mov
fsubrs
sti
rolb
flds
outsb
insb
push
fdivrp
mov
lahf
adc
push
sub
enter
mov
or
or
inc
imull
sbb
xchg
scas
jns
sub
or
jno
loop
fsubs
outsb
xor
int3
imul
mov
jne
sub
movsl
loop
aam
dec
ret
cmp
out
inc
pop
mov
stos
sub
xlat
psubusw
jne
ret
xor
push
es
inc
or
inc
inc
out
xchg
mov
or
mov
pop
push
sub
inc
and
popf
dec
sub
data16
sbb
inc
mov
aam
out
cmc
mov
xchg
fwait
pop
jb
icebp
in
cwtl
jbe
or
sub
xlat
loop
in
popa
and
test
mov
imulb
cld
and
cwtl
insb
lds
aaa
in
jg
cltd
adcl
mov
cmp
push
sbbl
bnd
sub
nop
mov
inc
sub
insb
or
and
cwtl
out
mov
mov
mov
pop
push
fwait
adc
es
lods
pusha
sahf
cmp
xlat
xchg
adc
outsl
mov
mov
lahf
cmp
xchg
jecxz
cwtl
adcl
xor
fwait
lods
fnstenv
sub
iret
xchg
shll
push
push
jns
fnstcw
dec
cmp
outsb
dec
mov
into
jo
and
sti
pop
and
popf
add
lds
fldl
pop
mov
pop
push
loope
pop
jo
rcr
in
add
fmull
cmp
movswl
and
sti
fcmovbe
add
jge
sbb
js
clc
mov
subl
lret
mov
mov
inc
fs
sbb
inc
sahf
int3
out
pop
cmp
xchg
movsl
leave
jo
push
sbb
adc
or
pop
ss
or
loopne
into
jo
xor
dec
pop
mov
loopne
add
enter
lods
adc
and
mov
or
cli
pop
dec
dec
movsl
push
aaa
push
test
repz
xchg
xor
adc
arpl
movsb
inc
lock
sub
cld
sahf
cli
mov
cmc
jns
test
lret
inc
pushf
ret
lods
std
fidivs
jns
loop
mov
jo
xor
or
or
cmp
int
inc
add
fidivrl
dec
sti
push
lods
test
sbb
arpl
test
cmp
addr16
jns
mov
add
sbb
push
and
add
dec
ret
xor
bound
jb
stc
mov
inc
sbb
int
pop
sarl
out
lods
ds
push
inc
pop
jae
fsubl
dec
test
add
jge
pop
mov
and
mov
dec
fnstsw
inc
arpl
mov
mov
or
adc
push
test
loope
mov
cld
scas
xchg
mov
inc
repnz
lahf
out
out
cmp
fstp
out
inc
jl
sbb
sbb
jnp
test
es
xchg
push
cmpsl
inc
lods
inc
movsb
aas
mov
pop
jp
in
xchg
in
pop
fadd
aad
sub
mov
outsb
js
gs
aam
xchg
pop
sarl
xlat
jge
rcll
jmp
and
add
sub
movsb
xchg
cs
out
imul
mov
outsl
add
inc
idiv
pop
lret
push
push
cs
jae
adc
scas
mov
sbb
add
push
js
fsub
cmp
lret
mov
filds
js
xor
dec
push
iret
jnp
ret
pop
mov
sub
inc
inc
lahf
cmp
mov
dec
xor
lds
lret
pop
dec
pop
xor
lret
mov
imul
ljmp
lcall
mov
cld
cld
pop
and
push
pop
jae
cs
scas
stos
imul
inc
xor
psllw
lods
loop
je
pushf
test
sub
mov
sbb
push
call
mov
cmp
pop
out
xchg
loopne
movsl
sbb
les
mov
lods
adc
cmpsl
popa
in
or
and
cmp
out
out
jp
adc
hlt
mov
rcr
or
push
add
mov
out
iret
dec
jbe
cvtdq2ps
cmc
or
out
mov
push
loopne,pt
aaa
scas
add
adc
jle
adc
xchg
cld
out
loop
xlat
and
aaa
shr
fcompl
mov
sub
cmpb
add
icebp
fstpl
inc
mov
xchg
add
test
jae
cmpsl
fdivrl
out
clc
addr16
subl
cltd
stos
mov
dec
xchg
sub
jmp
test
inc
lock
mov
mov
mov
mov
je
cmp
xor
and
mov
bound
sub
aaa
loop
shrl
mov
push
push
scas
mov
adc
adc
cwtl
shlb
loop
push
scas
adc
pusha
inc
cwtl
pop
xor
jecxz
clc
inc
lods
push
shl
cs
cmp
out
sub
cmp
dec
leave
inc
fwait
adc
cmpxchg
inc
cmpsl
pop
in
ficomps
push
dec
mov
lret
jae
nop
sub
pop
fisubrl
pushf
adcl
inc
cwtl
pop
shr
adc
dec
fxch
rorb
sbb
data16
hlt
insl
and
and
imul
inc
push
mov
inc
enterw
inc
lock
popf
cmp
dec
lds
ret
jb
cld
stos
add
testb
mov
inc
push
mov
roll
pop
sbb
jb
cmp
mov
xchg
cmp
stos
loope
cmp
dec
repnz
mov
mov
in
pop
cmp
shr
outsb
mov
push
mov
xchg
aaa
lds
cmp
or
dec
jnp
out
shlb
in
call
inc
pop
insl
push
mov
mov
divl
dec
adc
out
pusha
dec
movsl
mov
and
pop
fnsave
pop
mov
and
push
repz
dec
popa
xchg
sbb
leave
rclb
sbb
adc
mov
mov
lahf
push
lea
lods
outsb
in
cmpsb
dec
sbb
push
push
daa
pusha
sub
iret
andl
lret
or
xchg
mov
sub
cltd
movsl
xchg
arpl
lahf
repz
and
pop
xchg
test
mov
cs
sub
rcl
jne
daa
or
xchg
int3
lods
and
cmp
test
test
sub
add
in
lock
roll
mov
test
mov
dec
push
xchg
sub
jbe
sub
cmc
pop
pop
inc
aaa
jno
into
cmp
loope
inc
add
imul
lea
cmp
xchg
test
add
test
les
movsb
int3
sbb
sti
cli
movsl
insb
mov
dec
aam
pop
mov
or
movsl
int3
push
imul
loopne
in
inc
daa
lods
jns
xchg
pushl
outsb
pop
jno
ffreep
sub
cmp
notl
das
mov
aam
push
sub
pop
lea
das
scas
xor
sub
imul
dec
sub
cld
or
inc
fisubs
add
or
pop
xor
xor
std
mov
cmp
into
pop
sub
shll
mov
sbb
mov
test
push
add
mov
std
pop
ja
or
sbb
mov
pop
jg
xchg
out
scas
out
add
fisubrl
cmp
arpl
cvtps2pi
add
rcrb
and
jmp
fisttps
aam
cwtl
jp
addb
roll
outsb
add
inc
scas
sti
and
dec
ss
loop
shlb
enter
int3
faddl
insb
add
imul
pop
cmpsl
and
add
xchg
push
cmp
cmp
fsub
mov
loop
inc
xchg
cs
mov
sbb
jae
cmp
add
dec
add
aam
dec
cmp
ds
pop
jle
int
mov
mov
lock
scas
xchg
test
mov
pop
repnz
xor
cmp
adcb
pop
lods
jle
stc
mov
or
outsl
jns
sub
sub
sbb
jmp
outsb
adc
rcrl
mov
into
fcomip
xacquire
add
add
jle
incl
mov
popa
cmp
fsub
mov
sub
dec
movsb
mov
sbb
fimull
pop
inc
inc
in
dec
jp
loop
mov
jbe
imul
push
fildl
xchg
jne
or
push
ficoms
insl
push
mov
pusha
aaa
imul
xor
sbb
xchg
mov
testb
enter
dec
ja
leave
add
pop
jne
cltd
pushf
stc
sbb
test
xchg
pop
stc
jno
aas
ds
mov
cmc
es
cmc
add
xor
sub
mov
or
test
adc
push
adc
cmpb
movsb
subl
repz
aas
cmpsl
adc
movsl
movsl
ret
cwtl
pop
adc
xlat
int
popa
les
mov
mov
jnp
movsb
in
or
sub
mov
leave
aaa
addr16
sbb
xchg
jmp
mov
dec
sbb
inc
push
jbe
xor
and
and
out
mov
imul
leave
cli
mov
cmp
push
push
out
aam
stos
in
push
add
addr16
ja
mov
movsl
out
sub
xchg
xlat
mov
and
dec
sub
add
stos
dec
push
cwtl
inc
mov
inc
nop
pop
mov
and
std
cli
aaa
lret
adc
inc
out
jnp
in
sbb
clc
rcll
mov
data16
jl
arpl
dec
out
pop
mov
shrb
pop
xchg
push
cmp
leave
dec
cmp
dec
fwait
adc
mov
lea
mov
out
xchg
inc
inc
ficoml
xchg
add
jnp
in
add
jecxz
pop
sub
arpl
stos
ljmp
xchg
fisttpl
fisttpl
movsl
rcrb
ret
jmp
movsb
mov
ljmp
push
filds
aad
push
fildl
cmc
fadds
and
les
pop
ror
test
pop
mov
inc
push
insb
inc
and
aaa
dec
or
lahf
dec
jg
pop
inc
daa
lock
mov
and
hlt
xchg
jo
add
xchg
pop
sbb
fs
out
xchg
les
pop
lea
mov
out
frndint
sub
in
scas
iret
and
aas
push
lods
push
test
cmp
jle
ds
dec
stc
outsb
mov
clc
fstpt
loop
lods
sub
outsb
sbb
xchg
xchg
inc
in
in
jns
cmp
jno
sbbb
call
mov
jmp
mov
mov
xchg
add
stc
lods
cld
push
jp
xchg
gs
add
hlt
and
inc
aad
popa
test
pop
negb
add
leave
nop
cmc
pop
loopne
lret
push
repnz
addb
movsb
xchg
jnp
cmpsb
popf
dec
push
push
sbb
std
dec
mov
pop
dec
leave
push
mov
addl
and
mov
icebp
fcomps
mov
or
xchg
cmpsb
adc
add
mov
in
cmp
jns
dec
cmp
cli
ret
mov
mov
test
scas
movsb
pop
jae
sti
add
sub
mov
insl
ja
mov
mov
dec
add
dec
push
lea
xchg
and
addr16
add
add
loopne
cmpsl
out
push
xchg
sbb
popa
repz
scas
push
or
cmp
lds
mov
pop
insb
mov
repnz
je
aaa
cmp
adc
movsb
dec
push
test
pop
pop
ret
jbe
pop
lret
dec
stos
gs
push
mov
les
jo
push
xchg
cwtl
dec
push
pop
add
mov
repnz
mov
mov
adc
insb
pop
jo
test
sub
dec
sahf
fbstp
add
fmuls
pop
call
fiaddl
ds
pop
jno
aad
roll
rolb
punpckldq
jo
xor
ja
sbb
inc
xchg
fwait
and
shrl
clc
jbe
cld
aam
sbb
ds
mov
adc
xchg
dec
jl
dec
sub
es
or
sub
lods
ja
pop
cs
sysexit
jle
lcall
in
lret
push
sub
dec
sahf
mov
outsb
ret
jmp
xor
lods
clc
pop
dec
pop
cwtl
dec
or
add
test
hlt
pop
iret
mov
mov
adc
loopne
push
dec
call
push
mov
mov
icebp
mov
jns
adc
stos
or
mov
in
sbb
inc
dec
xchg
hlt
cmc
data16
xchg
aad
push
inc
add
movsb
in
jo
arpl
mov
in
repz
mov
in
cs
push
mov
nop
sub
fiadds
xchg
or
stos
mov
dec
xor
out
xchg
cmp
mov
popa
aaa
in
mov
jbe
xor
inc
sbb
push
adc
and
ss
in
push
repnz
add
push
jle
aam
pop
loope
jne
and
xchg
dec
xor
call
fiadds
loop
mov
push
dec
out
sub
inc
pop
stos
dec
pop
ljmp
aaa
adc
sbbb
outsl
jne
push
sbb
std
or
js
in
es
sub
shll
test
push
frstor
icebp
pop
rcrl
sbbb
xchg
jae
cwtl
ret
push
inc
or
jp
adc
das
fs
jge
mov
scas
cmp
mov
ds
and
repnz
push
aaa
iret
in
lcall
lock
inc
mov
cmp
dec
fnsave
jbe
stc
mov
add
mov
push
pop
xchg
inc
and
arpl
add
add
fmuls
xchg
data16
gs
push
mov
cmp
lret
inc
xchg
or
test
in
sahf
or
ret
roll
int3
ficompl
out
xchg
fwait
xor
xchg
mov
test
mov
add
mov
push
inc
adc
xlat
mov
lock
and
jmp
lods
loop
and
pop
jno
sub
pop
push
jmp
in
rcrb
adc
xchg
les
pop
mov
mov
fstpt
mov
pop
lods
ret
fdivrs
lds
jle
mov
ljmp
adc
mov
insl
insb
dec
fistps
dec
cli
lods
sti
mov
xchg
lahf
fistps
add
push
sarb
and
adc
jae
mov
push
xor
subb
cmp
cwtl
hlt
jmp
mov
pop
xor
mov
pop
or
xchg
mov
inc
push
and
mov
sbb
push
mov
push
inc
inc
mov
dec
int
test
mov
mov
mov
jle
jnp
mov
and
cmp
into
pop
scas
cmp
pop
stos
mov
jecxz
sarb
stos
pop
push
inc
sarl
pop
data16
fdivrs
sbb
pop
icebp
test
push
arpl
xor
je
repnz
pop
push
mov
out
jp
mov
je
mov
repnz
xchg
adc
mov
xchg
xorps
mov
popf
or
mov
fidivl
add
inc
test
js
adc
jle
and
push
add
test
dec
data16
sahf
add
sti
dec
aam
in
xchg
push
nop
mov
ljmp
mov
mov
cmp
jle
ss
aaa
mov
out
out
jns
stos
mov
shl
mov
jp
mov
mov
int3
in
testb
fildll
push
repz
jge
inc
sub
adc
pop
jne
sbb
dec
mov
outsb
aaa
cltd
out
das
push
mov
nop
adc
push
mov
xlat
pop
imul
stos
in
or
lret
jmp
cmp
dec
xor
jo
imul
mov
xchg
pop
sbb
data16
xchg
sub
xor
adc
in
cmp
push
sub
dec
xor
sub
ss
pop
mov
nop
and
lcall
mov
pop
pop
mov
outsb
aam
xor
lcall
daa
adc
cs
sub
outsb
andl
cmp
mov
mov
xchg
arpl
mov
fsub
mov
stc
xchg
mov
mov
mov
inc
popa
mul
pushf
lods
and
xchg
data16
es
inc
arpl
shrb
jnp
daa
jp
xorl
xchg
dec
add
loop
adc
push
or
pop
adc
lods
out
aas
sbb
cltd
je
outsb
divl
xchg
inc
cmpsl
xor
xchg
hlt
inc
cwtl
sbb
lahf
in
cmp
inc
lock
xchg
dec
sbb
dec
sbb
mov
rclb
dec
out
xchg
mov
lock
add
fisttpll
pop
adc
mov
xchg
cmp
pop
mov
popf
jae
mov
mov
in
loop
dec
andb
jecxz
les
push
mov
jl
push
js
push
and
stc
ss
inc
jp
sbb
mov
std
xchg
lret
sub
fs
aad
mov
jg
call
mov
insb
out
jmp
pop
mov
nop
insb
jb
cmp
vpor
pop
pop
stc
out
ds
dec
or
xor
ljmp
dec
sbb
adc
insl
enter
xor
or
jge
or
mov
mov
sub
into
jecxz
adc
in
test
add
jmp
mov
int3
dec
dec
daa
cltd
lods
push
mov
ficoms
outsl
shr
movsb
imul
call
ljmp
pop
jp
xlat
mov
jmp
repz
mov
dec
popf
gs
jae
pop
sbb
jbe
movsb
inc
popa
in
jmp
fiadds
ja
xchg
sbb
sbbb
inc
mov
ss
lret
pop
mov
xor
mov
push
mov
pop
shll
sbb
xor
xchg
fisubrl
aam
out
push
mov
push
mov
mov
pop
inc
jg
inc
gs
mov
inc
fs
sub
mov
or
dec
out
and
pop
cmp
pop
sbb
mov
pop
cwtl
into
mov
xor
outsl
push
in
jecxz
mov
add
test
ret
push
leave
jne
mov
ja
jns
out
inc
cmp
ja
xchg
in
iret
mov
mov
sbb
cmpsb
fcmove
and
inc
pop
lds
add
or
js
dec
notw
push
add
rclb
and
and
or
popl
xchg
das
xchg
scas
or
jmp
test
aad
sti
adc
jne
ljmp
std
inc
mov
add
push
push
sub
arpl
push
mov
jecxz
sub
mov
cmp
mov
addr16
mov
push
pop
mov
aaa
inc
inc
insl
enter
cltd
popa
jb
in
int
add
fsub
pop
in
scas
std
mov
mov
jmp
jle
dec
pop
data16
add
imul
sub
adc
insl
mov
xchg
bound
push
repz
addr16
xchg
pop
arpl
push
xor
adc
inc
push
jle
dec
sahf
dec
fwait
and
leave
ds
add
xchg
rcrb
mov
pop
int
aam
push
dec
aad
mov
lods
xor
mov
mov
mov
push
in
pop
lods
and
movsb
push
fcomp
sub
rdmsr
ret
and
add
fidivl
je
enter
inc
jmp
sbb
jnp
xchg
push
int3
mov
int
pop
or
jle
xchg
jne
cmp
mov
popl
push
es
cwtl
or
je
cmp
pop
adc
add
outsb
fbld
pop
test
test
cli
adc
fidivrs
sbb
jl
push
movb
aad
mov
pushf
sub
fmuls
inc
iret
mov
push
fmul
cmp
outsb
mov
fwait
loope
aas
imul
inc
fimuls
push
loop
aam
ds
stos
pusha
ljmp
sti
adc
jb
mov
gs
xchg
cmp
jbe
push
mov
add
fnstenv
lods
cmc
out
pop
and
add
sbb
dec
in
ret
ret
jp
add
jo,pn
jle
mov
push
cltd
add
jg
pusha
loopne
sub
pop
movsl
fs
inc
inc
jo
es
movsb
int3
lods
cltd
lcall
std
or
cmc
mov
xor
pop
mov
fildll
lahf
or
sbb
and
jecxz
stos
cmp
pop
inc
test
push
or
mov
ret
xlat
dec
push
cmpsl
ret
and
mov
pop
pop
add
loopne
dec
sbb
iret
pop
mov
daa
insl
ds
push
sub
jae
mov
push
out
daa
in
lret
pop
int
sbb
pop
pop
push
mov
push
into
rcrl
lret
and
popf
adcl
outsb
adc
scas
loop
adc
cmp
cli
dec
xor
lods
push
cmp
retw
push
mov
repnz
pop
insl
cmpsl
shll
data16
mov
mov
or
push
call
daa
xlat
and
into
lret
cmp
movsl
addr16
and
adc
dec
sarb
push
pop
pop
push
jae
lahf
xchg
xor
pop
mov
mov
adc
pushf
imul
in
stos
sub
in
std
mov
insl
std
or
and
inc
pusha
adc
les
call
cmp
sbb
lcall
jl
or
imul
adc
dec
arpl
sarl
std
xor
outsb
mov
and
mov
out
mov
dec
dec
dec
insb
jge
bound
lods
mov
sub
sarb
cwtl
mov
and
mov
adc
roll
dec
xchg
leave
shrl
sbb
mov
mov
jbe
push
enter
or
popf
dec
xchg
xchg
fwait
outsb
insb
sbb
xor
fidivs
rcrb
imul
adc
cli
adc
lret
cmp
xchg
mov
mov
shl
movsl
jl
add
jo
pop
push
xchg
push
mov
jo
jmp
pop
adc
scas
lods
or
adc
sbbl
out
cmpsl
dec
xchg
xor
xor
xor
push
test
mov
out
cs
and
or
in
adc
xchg
xchg
mov
sahf
mov
xor
pop
push
addr16
test
and
xchg
xchg
push
jbe
dec
mov
fbld
test
ja
jg
outsl
cwtl
or
sub
cli
loop
cs
icebp
lret
aaa
mov
pop
push
clc
stos
cwtl
aad
jmp
mov
inc
push
push
lret
add
mov
scas
movsb
call
cs
jp
sahf
dec
pop
sub
mov
aam
je
dec
jne
cmp
push
xor
scas
pusha
popa
push
inc
cmp
clc
inc
push
pop
push
shlb
shr
int
aad
pop
lods
and
inc
in
das
sbb
shlb
pop
aad
bound
dec
jbe
cmc
bnd
xchg
ja
pop
in
adc
cmp
adc
sahf
push
iret
cmpsl
repz
add
pop
je
or
pop
cmp
decb
mov
xorb
pop
add
les
or
sub
xor
mov
inc
adc
xorb
iret
sub
fistpl
lahf
lahf
or
les
pop
repnz
jo
dec
sub
nop
add
push
inc
aas
ss
mov
pop
addb
and
sub
mul
push
or
push
push
xor
addb
sub
mov
cmp
ret
xchg
xchg
add
jmp
mov
jg
xor
lods
movb
test
xchg
push
sbb
mov
push
sbb
jge
shr
mov
ret
dec
jnp,pt
dec
xchg
rorb
cli
mov
push
jl
lock
sbbb
in
cmp
inc
std
lcall
fisubl
and
adc
lods
mov
outsl
push
mov
dec
xchg
dec
loope
stos
int
js
mov
sbb
jae,pt
push
mov
adc
sbb
loope
repnz
icebp
ds
out
dec
jmp
mov
mov
jl
xor
or
or
mov
xchg
jle
dec
mov
je
push
in
lea
lods
lds
dec
xor
sahf
inc
cld
mov
xchg
or
jmp
inc
insb
rolb
mov
dec
sub
js
call
mov
dec
scas
jb
dec
repz
cmp
into
jnp
or
sub
add
sbb
ret
cmp
jb
hlt
mov
pushf
mov
mov
sbb
pop
pop
mov
shlb
in
inc
das
stos
std
add
push
in
sbb
add
adc
pop
les
dec
test
inc
leave
push
sbb
jl
jo
fsubrl
ja
xchg
popf
pop
sbb
ror
lahf
jno
mov
jne
jns
pushf
adc
sbb
dec
xchg
jnp
lret
dec
gs
fldt
out
sti
adcl
arpl
nop
pop
loopne
stc
add
xchg
sub
dec
orl
imul
push
rorl
cli
sti
stos
mov
and
sbb
pushf
ret
lods
xor
ljmp
add
push
push
mov
lods
in
push
rolb
outsl
testb
outsl
pop
andl
arpl
repz
outsb
jnp
jge
dec
cli
aas
pop
test
add
mov
adcb
xchg
aas
stos
xchg
push
xor
push
ficompl
cmp
xchg
pop
imul
stc
push
jnp
addr16
lahf
pushaw
lods
jbe
cs
enter
sbb
dec
mov
mov
add
sar
fcoms
lret
push
mov
sbb
jbe
out
inc
sub
mov
fs
clc
xchg
and
xor
int3
mov
add
push
xor
inc
xorb
dec
and
sbb
sbb
xchg
in
fdivl
call
mov
jecxz
dec
xor
and
pop
pop
aas
jmp
lods
dec
stos
xchg
dec
sahf
pop
sbb
pop
fstps
loopne
sbb
sub
adc
enter
cltd
lods
push
or
jbe
push
mov
in
stc
xor
hlt
dec
cmp
stc
xor
inc
insb
mov
bound
repnz
sahf
rorl
mov
or
push
xorl
inc
and
add
es
push
sbb
sti
lods
gs
xor
jne
mov
jbe
mov
movsl
outsb
mov
outsb
mov
cmp
ret
lock
leave
pop
mov
out
mov
je
mov
or
pusha
add
shlb
inc
mov
push
and
test
das
mov
ds
or
cmpsl
daa
test
nop
ret
stos
orb
push
and
push
push
in
jb
sahf
ffreep
add
sbbb
mov
outsl
sarb
and
sbb
test
push
xchg
pop
mov
imul
sub
int
sub
and
orb
ss
push
xor
test
and
jo
mov
push
int
mov
pop
jnp
fldcw
lret
push
or
xor
sbb
fnstsw
lret
clc
sbb
cltd
inc
pop
pop
sub
dec
test
ficoml
sarb
in
out
sahf
push
pop
inc
xor
pop
dec
sbb
test
daa
fsubl
push
push
jb
cs
sub
fsubp
arpl
xchg
sbb
cmp
mov
jo
or
in
test
adc
mov
fidivl
in
cs
xchg
mov
dec
mov
push
repnz
lock
cmp
subb
insl
jo
pop
ljmp
jno
sub
mov
in
xor
pop
xchg
cltd
mov
jnp
fcmovnu
jge
das
aam
enter
pop
and
pop
ret
ds
imul
jmp
inc
test
loope
pushf
adc
cs
pop
rorl
mov
popa
pop
mov
sbb
lds
fcmovnbe
lcall
cmp
popf
mov
ljmp
mov
mov
icebp
movsb
sub
push
shlb
scas
inc
aad
lcall
xchg
lods
pop
mov
inc
mov
daa
pop
pop
jb
pop
push
mov
insb
movsb
mov
ljmp
push
lcall
sar
inc
or
cli
movsb
push
push
cmp
xor
add
loope
sub
test
push
xchg
mov
sti
sub
mov
mov
aam
outsl
clc
sub
gs
push
subb
adc
cli
fiaddl
enter
arpl
jbe
addr16
scas
jg
jmp
push
push
xchg
in
mov
jbe
mov
mov
mov
pop
sub
pop
sub
inc
xor
lahf
pop
bound
push
les
add
loopne
pop
mov
jns
mov
sbbl
mov
lret
aas
pop
andl
int3
notl
jl
inc
nop
mov
sbb
lret
ret
cmp
add
pop
dec
jne
rolb
jmp
ljmp
stc
repz
jecxz
iret
arpl
es
adc
dec
cmp
sbb
bound
add
mov
jns
cmp
nop
sbb
cmp
sub
cmpsb
inc
loopne
sub
test
lret
rol
mov
pop
push
mov
add
popa
cmp
dec
jno
and
mov
jnp
ja
dec
jg
xor
mov
jge
and
push
pop
xchg
ret
push
mov
mov
les
subw
aad
call
pop
xlat
cmp
pop
fcompl
push
mov
mov
sub
and
repnz
insb
push
ss
add
xchg
jae
add
adc
mov
fcmovnu
out
pop
or
mov
pop
leave
add
fisttpll
mov
je
adc
icebp
fwait
jno
sbb
cmp
loopne
adc
xor
jg
cmp
and
stos
insb
sub
andb
jns
cmc
cmp
mov
mov
jle
hlt
push
and
shld
cmp
pop
add
mov
xor
xorl
mov
push
outsb
sbb
lods
push
mov
sbb
xchg
push
dec
out
sbb
sbb
or
inc
out
decb
imul
cmp
inc
lret
lret
mov
or
push
fs
and
mov
sub
lods
sahf
jns
sub
arpl
adc
or
mov
repnz
inc
and
pop
pop
cmp
jb
inc
push
or
jecxz
out
stos
inc
mov
in
lahf
cld
movsb
jecxz
lret
imul
pop
push
pop
pop
mov
mov
loopne
sbb
dec
popa
mov
cmp
sarl
rcrl
add
xchg
pushf
int
mov
lret
xchg
in
pop
in
jge
inc
push
or
mov
mov
jae
jle
xor
jnp
call
mov
gs
pop
cmp
scas
test
mov
dec
push
lret
cmpb
mov
sub
xchg
adc
aas
push
jle
hlt
adc
lret
fmul
in
cltd
repz
mov
xor
into
ljmp
movsl
add
hlt
push
cmp
cwtl
push
inc
stos
inc
mov
das
ljmp
xchg
adc
loop
out
dec
jb
out
ret
inc
leave
dec
mov
pop
ja
ficomps
in
adc
imul
in
mov
ljmp
cmpsb
mov
xor
jge
mov
mov
inc
cmpb
lahf
mov
xor
pop
das
popa
push
inc
sti
es
std
idivl
cld
push
popa
mov
adc
hlt
mov
xor
mov
mov
lret
inc
dec
sub
jns
inc
inc
push
test
outsb
popf
ds
push
cld
lock
iret
jl
mov
xchg
jo
jmp
pop
dec
mov
pushf
es
imul
mov
mov
ficoml
cmpsb
testl
stos
sub
xor
iret
mov
mov
out
std
pop
mov
mov
ja
jecxz
push
pop
or
jl
xor
out
int
sub
pop
dec
into
aad
push
jg
imul
and
jle
addl
dec
jb
fstps
mov
dec
inc
out
loopne
pop
cld
mov
imul
addr16
push
push
out
bound
jnp
xchg
jne
sahf
das
or
mov
lock
aaa
jb
in
jnp
decl
cli
fsts
nop
loop
mov
rorl
lret
roll
scas
enter
add
imul
into
scas
pop
in
pop
sbb
mov
addr16
call
je
arpl
push
aas
inc
aam
and
cmp
js
data16
lock
jnp
jecxz
iret
sub
pop
add
or
out
psubq
cmc
cmc
std
scas
stos
and
cmc
mov
add
xchg
xchg
jne
xor
adcb
aas
sub
sbb
cmp
mov
cli
lret
fs
jl
jl
faddl
mov
andl
aas
cwtl
pop
jns
xor
inc
outsb
fidivl
adc
in
sbb
add
push
mov
hlt
aas
test
aaa
xor
std
sbbb
mov
ljmp
add
test
jp
add
ret
and
jg
or
cltd
mov
xchg
and
iret
add
xor
popa
negb
sub
add
nop
mov
add
sahf
out
and
push
inc
sbbb
movsl
pop
nop
ret
inc
ja
ret
icebp
cs
jns
push
lcall
mov
jmp
cmp
push
xor
sbbb
sahf
xchg
inc
rorl
lea
stos
and
or
or
bound
push
push
inc
mov
xchg
xor
pop
mov
fs
lds
or
and
mov
rorl
imul
xor
fldenv
cmp
pop
cwtl
xor
sub
jno
cmp
mov
sub
cmp
xor
adc
ret
push
aas
mov
jp
movsl
or
mov
jae
cmpxchg
das
mov
and
push
insl
ds
mov
add
rcrl
andb
and
jmp
fdivs
push
xor
out
mov
cmpsl
in
sub
jg
lods
dec
pop
inc
mov
aam
add
mov
sub
add
lret
mov
sbb
jmp
adc
mov
repz
xor
and
sbb
add
stc
push
xor
out
jmp
loopne
mov
adc
cmp
and
push
test
repnz
mov
lea
cmp
rorl
and
cmp
fwait
push
addr16
push
mov
xor
or
and
push
jae
xor
aaa
adc
mov
ljmp
mull
loop
rol
divb
mov
outsb
adcb
sbb
cltd
jae
addr16
daa
or
test
inc
jb
outsl
decb
inc
jb
div
mov
cmp
decb
clc
lret
addr16
jnp
sahf
imul
data16
mov
xor
push
imul
mov
or
hlt
sarl
out
dec
stos
push
and
sub
or
sbb
inc
test
sahf
sti
aad
fdivrl
pop
std
out
scas
scas
pop
nop
inc
xchg
stc
pop
sub
mov
leave
push
dec
adc
daa
mov
push
sub
xchg
jle
ja
shrb
jecxz
mov
mov
lods
adc
mov
or
in
and
push
and
loope
das
lods
xchg
nop
push
imul
stos
sub
cmp
push
fstps
aam
adc
pop
or
mov
popl
add
daa
pop
js
in
dec
pusha
lret
ss
insl
mov
cmp
in
cld
jno
stos
inc
inc
inc
fs
arpl
adc
lea
sbb
xchg
add
xor
cmp
xchg
aas
stc
sbb
sbbb
cltd
fstpl
lds
mov
mov
xor
jl
lahf
scas
or
aas
sub
in
addr16
fwait
and
jae
cmpsl
int
repnz
xchg
sti
adcb
cwtl
mov
or
dec
adc
sub
xchg
mov
aam
adc
add
lea
rolb
mov
dec
adc
adc
adcb
test
jne
out
cmc
inc
xchg
mov
inc
addr16
loop
jbe
jl
lods
aam
inc
call
push
sbb
mov
fwait
cmp
sbb
sbb
scas
jnp
add
or
dec
pop
lret
jg
rcll
xchg
dec
mov
mov
pushl
mov
jae
fisttpl
push
xor
push
aaa
jb
sub
sbb
jb
clc
je
lret
imul
stc
jp
aas
sub
mov
outsb
or
fidivrs
mov
popa
ljmp
sub
mov
fsub
or
clc
addr16
inc
fistl
bound
pop
mov
bound
pop
fidivrl
add
mov
sub
push
sub
rol
lahf
sbb
test
in
cmc
dec
loopne
ja
out
cltd
push
jnp
push
mul
mov
mov
sbb
mov
or
xchg
inc
cwtl
arpl
mov
mov
jo
int
pop
clc
jo
cmp
jmp
or
inc
roll
pop
mov
ja
adc
xchg
movb
inc
clc
std
inc
clc
iret
push
xchg
out
push
or
cmp
push
xchg
in
cmp
jmp
dec
lcall
xchg
repz
test
mov
jmp
sub
push
dec
inc
xor
inc
jge
mov
sbb
mov
repz
out
dec
fs
mov
and
lcall
pushf
adcl
stos
sar
popa
lahf
push
xchg
push
cli
add
dec
aas
pop
xor
xchg
pop
ss
cmp
ror
cmp
out
cmp
cld
mov
test
inc
or
repz
leave
fcoms
int3
mov
arpl
subb
or
add
fnstenv
sub
arpl
aam
pushf
mov
or
cmp
jmp
push
add
cmp
sub
incl
andl
dec
push
movsl
cmpsb
sub
or
adc
call
ror
jo
es
dec
mov
es
xchg
jo
dec
dec
pop
sub
setns
cmp
scas
push
sahf
je
clc
psllw
jl
adc
xor
out
sbb
scas
dec
mov
rolb
xor
fsubrs
pop
stos
sbb
xor
sbb
jne
xorl
dec
nop
mov
lods
jge
lahf
dec
cli
mov
jae
data16
jl
inc
pop
repz
add
xor
fwait
and
out
push
sub
xlat
xchg
dec
push
ret
or
jp
js
sbb
or
xor
icebp
dec
lods
mov
inc
mov
jno
cmp
orb
mov
ljmp
xor
cmp
andb
xchg
outsl
push
inc
sbb
xchg
jge
mov
push
shlb
testl
push
stc
fxch
aam
das
mov
cli
add
sub
cmpsl
lret
jg
xor
cmp
mov
addr16
scas
inc
int3
int
aam
daa
clc
and
add
xor
push
sbb
mov
sub
push
pusha
insl
and
ret
fnstcw
add
sub
dec
imul
sbb
out
cmpsl
mov
in
das
movsb
and
sbb
test
popa
test
push
cmp
adcb
pusha
fs
lods
test
push
jb
lods
mov
jle
lcall
push
adcb
mov
lea
rcl
jp
cmpsl
xchg
dec
into
fs
enter
scas
insb
out
add
fnstsw
insl
lret
jge
les
lahf
rcl
pop
and
ror
jnp
out
sti
mov
jge
in
idivl
in
sti
xchg
dec
jno
xchg
cmp
push
ret
int3
jle
push
xchg
mov
jmp
sbb
push
jne
in
cltd
shl
dec
nop
jl
fldl
mov
push
xchg
inc
fistpl
inc
inc
inc
sbb
adc
outsl
lods
jg
xchg
int3
xchg
inc
mov
cmp
sti
mov
stos
dec
push
andl
repz
cmpsl
push
outsb
cli
in
inc
xchg
ljmp
sbb
xor
orl
ffree
int3
jb
out
and
xlat
jmp
dec
pop
aam
add
mov
movsl
shrb
popf
out
insl
xchg
fdivrl
inc
rorb
and
out
or
jle
dec
mov
mov
dec
cmp
pop
cld
push
dec
mov
xor
mov
fisttpl
addr16
sbb
adc
rolb
jb
mov
pop
cmp
jmp
or
les
push
and
fnstsw
adc
fstl
cmp
or
in
xor
xor
leave
dec
arpl
jmp
inc
loope
cmp
pop
mov
mov
mov
push
fs
sbb
jmp
fcmovne
cmc
and
pusha
iret
loopne
push
lret
inc
cmc
cmp
mov
les
movsb
jmp
xor
pop
mov
jle
jne
negb
aad
cmpsl
cmp
jle
sub
std
out
add
shlb
cs
lock
cmp
dec
sti
xchg
cmp
push
sbbl
scas
cmp
sbb
mov
push
sub
fistps
outsl
dec
mov
test
dec
ret
add
sub
ret
push
adc
gs
stos
bound
int
pop
pop
in
push
sbb
jecxz
test
hlt
mov
aad
xchg
loop
push
popa
pop
nop
stos
inc
aam
ret
push
cmp
subl
int3
in
fsubrs
test
sbb
data16
push
push
mov
push
or
dec
ficoml
into
in
or
popa
xor
jne
sub
gs
shld
push
ss
nop
hlt
shlb
pop
loopne
in
cmpsb
lret
mov
mov
pop
popa
shl
jl
mov
call
xchg
es
shld
inc
std
fcompl
xchg
ds
sbb
cmp
ja
les
add
in
adc
xchg
push
jge
enter
and
push
out
mov
mov
mov
scas
in
inc
mov
loopne
mov
jl
sub
shlb
mov
out
sbb
push
xchg
or
in
outsb
fdivs
fldenv
incl
mov
aad
lret
mov
loopne
push
cmp
adc
rolb
sbb
xchg
mov
dec
adc
icebp
inc
push
push
add
nop
imul
pop
rorb
adc
aaa
xor
cmp
xor
pop
xor
sub
mov
nop
std
stc
cmpl
lock
jl
scas
lods
sub
ss
lret
xchg
jp
cmp
xor
cli
lret
mov
mov
mov
aam
mov
pop
pushf
into
lock
ret
pop
mov
sub
rcrb
add
pop
cmp
add
mov
inc
xor
cmp
push
ds
cmp
cmp
lods
jle
sub
stos
gs
aaa
lods
push
xlat
pop
repz
push
aam
push
push
in
call
push
out
jmp
sub
cmp
jnp
sub
and
mov
loop
jmp
inc
sub
int
push
popf
jecxz
mov
test
push
add
ret
xor
cld
jecxz
cli
xor
lret
out
jecxz
das
jne
xor
cli
add
cmpsb
pop
and
cld
add
call
popl
jle
dec
stos
repnz
and
pop
movsb
int3
inc
mov
sub
xchg
fldt
flds
or
scas
fimull
mov
push
push
testb
insl
adc
inc
fwait
pop
repz
rcrb
push
loop
fs
aaa
addr16
mov
notb
mov
scas
jg
pop
addr16
dec
data16
ds
imul
mov
mov
loopne
movsb
sbb
fwait
lock
outsb
into
fisubrl
int3
add
mov
cmpsb
mov
cmp
daa
lahf
clc
js
pop
jmp
sbb
mov
pop
jge
cmp
ljmp
shl
lds
or
test
pop
pop
fwait
test
or
pop
mov
dec
xor
lret
clc
jo
xchg
lods
fmul
mov
cld
stc
movsb
cli
cmp
insb
dec
andps
jmp
dec
fdivrs
mov
and
shl
mov
inc
sub
sti
dec
push
cmp
shrb
aad
mov
xlat
arpl
imul
jne
mov
aam
mov
mov
and
bound
push
out
cld
inc
add
mov
jg
test
in
jo
xchg
mov
jecxz
leave
xlat
loope
xchg
jl
mov
inc
jge
fs
xor
sbb
or
neg
sub
clc
dec
xchg
mov
rcrl
rorl
pop
clc
mov
lcall
xor
insb
xor
mov
shrl
sub
cmpb
xchg
mov
mov
sarb
xor
leave
pop
xor
test
mov
rorl
lret
lock
stos
bound
add
aas
je
mov
js
jmp
sub
inc
mov
cwtl
xchg
into
mov
push
cltd
cld
xchg
xchg
cwtl
jae
adc
aad
mov
mov
subl
test
iret
mov
jbe
xor
jecxz
and
gs
nop
mov
pop
inc
repz
or
push
adc
inc
dec
sahf
pop
mov
jb
inc
pop
cmp
push
adc
test
mov
push
lret
mov
shlb
cmp
pop
cli
push
int
xchg
sbb
push
jecxz
adc
mov
das
loopne
es
popf
sbb
xor
iret
cs
xchg
dec
movsl
rcll
xor
sub
es
xchg
push
sub
shrl
mov
push
mov
or
daa
mov
addr16
and
ret
popf
xor
mov
aam
in
pop
sub
std
lret
test
and
enter
push
dec
cmpsl
insl
xchg
rcll
mov
cltd
rcrl
jnp
mov
jecxz
hlt
stos
stos
sbb
adcl
fcmovu
rcr
mov
push
or
or
xchg
pop
outsb
shr
sub
jbe
test
and
lods
int3
js
jno
push
ss
int
push
jne
stos
add
inc
ds
jp
mov
ja
sbb
inc
test
add
add
cltd
lods
fs
pop
lcall
sub
xchg
scas
mov
cmp
add
negb
pop
dec
pop
repnz
inc
pop
int3
push
ds
out
mov
adc
dec
test
ret
vorps
sahf
stos
jns
fs
int3
fs
fsubs
mov
and
out
pop
popf
mov
cmp
int
cwtl
push
add
mov
aas
and
push
cltd
pop
outsb
lcall
imul
aas
xchg
js
sub
aaa
repnz
sti
fsubrl
lock
xor
adc
or
push
add
cmpsb
fdivrs
sbb
ja
int
icebp
xchg
stos
pusha
outsb
xor
push
rcrl
in
adcb
pop
xchg
mov
jo
mov
pushf
jb
dec
sbb
pop
adc
jle
jecxz
ret
sbb
xchg
mov
imul
rcll
xor
pop
aaa
jns
jp
inc
add
mov
sbb
sti
lret
adc
inc
fwait
aad
out
xor
mov
je
push
or
cmp
add
jecxz
insl
xchg
push
dec
jns
xor
scas
dec
inc
stc
and
fistpll
arpl
jno
bound
lret
push
mov
loop
pop
mov
into
fnsave
into
or
sub
jne
stc
shrb
loopne
mov
sub
mov
clc
cmp
sbb
ja
outsl
pop
pop
xor
or
jecxz
sbb
loop
and
xor
int3
pop
add
push
std
add
or
mov
test
push
gs
add
adc
mov
adcb
mov
jmp
clc
test
sbb
pop
cmc
inc
loop
popf
inc
jo
js
jns
stos
push
mov
clc
arpl
lahf
push
mov
push
jo
dec
mov
cmp
call
push
inc
sub
sub
mov
adc
fdivrs
jno
das
mov
ficoml
jo
jmp
repnz
sub
push
mov
das
jae
das
mov
lcall
inc
sub
addr16
pop
push
sahf
pop
loop
mov
lret
rorb
gs
mov
sarl
sub
fsub
and
sbb
cmpsb
dec
sbb
cmp
dec
pop
lds
es
xor
imul
sbb
ret
int3
cmpl
test
dec
xchg
in
sti
jnp
xor
gs
pop
insl
cltd
xor
fisubs
gs
or
cmp
cmp
dec
outsl
push
jne
outsb
xchg
sub
mov
or
inc
dec
adc
adc
mov
xchg
xchg
adc
add
inc
popa
mov
sbb
pop
mov
jp
fildll
add
dec
in
arpl
fst
mov
inc
push
xchg
or
cwtl
shll
cmp
movsb
inc
cmp
rcrw
inc
xor
or
test
ja
movhps
push
in
mov
test
xor
scas
test
outsl
pushf
mov
sbb
bound
lods
fsubs
push
outsl
mov
pusha
cs
rcrl
dec
dec
xchg
shrl
pop
sti
inc
xchg
mov
xchg
mov
mov
push
mov
mov
sbb
nop
dec
out
jecxz
iret
or
or
mulb
int
sbb
mov
inc
insl
aas
aaa
scas
out
test
push
cmp
cmp
sub
cmpsl
dec
ja
inc
xchg
fimuls
push
sbb
sbb
dec
fnstcw
xorb
cmc
inc
es
and
dec
test
imul
add
jg
loope
xchg
push
pushf
mov
loop
fisttpll
in
movsb
test
nop
adc
sub
or
test
cli
in
adc
mov
and
int3
aad
stc
addr16
rorl
mov
mov
xchg
xchg
add
ss
pop
add
mov
sub
repnz
fimuls
add
test
roll
arpl
lea
dec
daa
scas
sbb
jg
adc
jge
in
dec
fimuls
ss
adc
xchg
adc
mov
int
pop
add
xchg
or
cmp
inc
mov
leave
daa
mov
sub
add
add
push
push
xor
std
inc
fwait
in
sub
jl
das
call
outsl
orb
push
cs
fisubl
dec
pop
stc
and
jbe
push
sarl
mov
out
jg
movsl
aas
dec
lret
mov
sbbl
cmp
inc
add
mov
xchg
int3
sbb
jbe
mov
cmp
push
jae
cmpsl
xchg
jmp
push
push
fs
jns
pushf
jg
sub
add
lods
xchg
jle
test
and
lea
aaa
popf
popf
sbbb
push
std
loope
sbb
xchg
cmp
andb
arpl
cltd
lods
daa
imul
mov
clc
lods
loope
jl
orb
aam
dec
cwtl
lcall
in
mov
mov
mov
sub
mov
loope
inc
out
adc
cmp
xchg
in
inc
pop
mov
cmp
jbe
adc
cld
mov
mov
fwait
inc
xor
dec
repz
jecxz
lret
adc
push
sub
rorb
fwait
xchg
jbe
xchg
sub
cmp
add
cli
popf
adc
lock
icebp
pop
mov
add
hlt
test
loopne
mov
push
out
repz
and
js
cli
test
add
cmp
inc
mov
popa
dec
sbb
sbb
mov
mov
inc
push
jo
jbe
out
mov
adc
scas
push
lahf
dec
js
inc
cmc
test
and
and
decl
xchg
pop
mov
loop
jo
xchg
test
sbb
jbe
movsl
bound
sub
aas
lcall
mov
sub
or
jae
rol
xchg
or
adc
mov
pop
shll
xchg
aam
cmc
jp
mov
dec
int
xor
in
and
jle
mov
dec
push
or
pop
jb
add
stos
cmc
and
jl
mov
repz
mov
frstor
test
inc
xchg
push
push
pop
pop
jnp
and
cmp
add
les
in
lock
lods
inc
pop
lret
data16
lods
fwait
xor
xchg
push
dec
xorb
inc
xor
fists
sub
lcall
fistpll
push
leave
test
and
xor
push
jne
cmp
pop
mov
sarb
push
mov
cmp
out
lret
mov
pusha
inc
mov
rcr
hlt
insb
push
xchg
pop
cmp
xchg
pop
imul
js
int
addb
xor
inc
lea
push
add
mov
adc
dec
sbbb
js
call
add
clc
stos
pop
adc
andb
outsl
push
mov
mov
jbe
out
icebp
out
xchg
sbb
lea
decb
inc
add
xor
lods
pop
imul
jl
aaa
cmp
jne
movsb
lds
pusha
mov
pop
mov
test
pop
vcmppd
cmp
push
or
push
call
mov
in
or
shr
cmpsl
ljmp
cs
jb
lods
pop
frstor
jno
out
int3
push
jb
mov
add
inc
push
ljmp
sbb
aam
jbe
dec
or
dec
jno
inc
cmp
andl
in
add
test
mov
in
fldcw
add
pop
aad
xor
jno
pushf
fs
rolb
dec
push
mov
popf
cmp
and
in
pop
sti
mov
fsubl
enter
dec
sub
cmp
adc
push
jno
mov
or
les
pop
outsb
test
ja
sub
stos
cmp
repnz
xchg
and
ds
aas
les
jo
into
ja
in
icebp
scas
fucom
pop
call
leave
pop
lcall
and
fs
and
test
repz
lret
mov
mov
ror
jp
mov
sbb
sbb
mov
xor
in
xor
sub
addr16
mov
jp
push
aad
jge
inc
jb
js
cmc
xchg
insl
mov
in
pop
inc
lds
inc
shll
bts
push
cmp
subl
push
fdiv
sub
jmp
test
push
mov
cld
xchg
jns
imul
sub
mov
mov
cmp
ficoml
sti
cli
mov
jae
ret
mov
repz
pop
mov
push
pushf
leave
testl
cmp
xor
mov
cmpsl
xlat
loopne
adc
lahf
xor
mov
clc
std
mov
sub
in
sti
les
adc
std
or
or
adc
sub
insl
jl
mov
pushf
movsl
xor
dec
add
in
mov
and
sbb
lahf
repz
dec
pop
pop
insb
push
cmpb
jp
hlt
push
lods
and
shrb
je
pop
fbld
jge
dec
xchg
cli
bound
sub
cmp
data16
out
fld1
shr
out
in
lret
fistpll
outsl
test
mov
ljmp
mov
push
mov
std
pop
gs
in
mov
mov
stc
je
xor
aad
fidivs
mov
jo
testb
inc
pop
dec
sub
movsl
lds
fnsave
cmp
xchg
nop
negl
or
mull
das
ror
xchg
push
pop
adc
aaa
pop
mov
jecxz
ficoms
into
popa
push
jo
inc
pop
imul
add
jecxz
sbb
mov
mov
jno
mov
ja,pt
pop
cmpsb
xor
lds
ja
pop
mov
stc
and
xor
jae
sbb
cmp
add
pop
cmpsb
std
iret
in
inc
fidivrl
fadds
mov
push
test
jge
mov
sub
imul
or
sbb
cmpsl
mov
popa
fnstcw
fdivrp
xchg
neg
fcmovbe
or
pop
out
adc
dec
pop
mov
pushf
xlat
lods
jl
outsb
or
sub
dec
jg
lock
sub
pop
xchg
scas
inc
mov
aaa
fistpll
dec
mov
or
decl
add
imul
mov
lock
mov
dec
mov
jecxz
clc
mov
or
and
mov
pop
xor
nop
jnp
ljmp
insl
jne
sbb
ret
outsl
mov
cmc
out
cmpsb
pop
rorl
xchg
loopne
test
inc
push
cwtl
mov
loop
push
sbb
xchg
loop
mov
arpl
mov
insb
int3
add
dec
rcrb
leave
popf
lock
jp
mov
sbb
aam
adc
jl
lret
mov
lcall
popf
test
sbb
movsl
pop
and
aas
xchg
xchg
sbb
xchg
insb
pop
filds
mov
mov
int
xchg
mov
or
and
jae
loope
out
les
inc
movsl
pop
or
ror
mov
xlat
loopne
bound
jle
xlat
dec
fildll
scas
into
stos
or
ljmp
push
out
rcl
inc
fstpl
add
inc
add
into
cmp
hlt
adc
inc
sbb
fisttps
mov
popf
repnz
pop
xor
and
insb
scas
in
mov
mov
imul
pop
daa
stc
mov
mov
fmulp
cs
sub
xchg
dec
cmp
lods
mov
xchg
cmp
mov
add
fisubs
push
xor
and
nop
xchg
fimuls
mov
mov
insl
push
mov
pusha
loop
lahf
cmp
mov
xchg
call
loop
xchg
inc
mov
int3
inc
xchg
ja
mov
xchg
lret
sub
outsl
ljmp
mov
pop
sub
in
aas
cmpsb
pop
cmc
hlt
popa
mov
imul
clc
outsb
stc
int3
ja
pop
hlt
notb
adc
das
subb
out
stc
adc
rcll
xchg
add
push
daa
enter
pop
push
mov
sbb
xor
jmp
orl
ret
xor
fisubs
mov
or
xor
xor
mov
shl
add
jp
adc
daa
sbb
cmp
cmpsb
mov
or
fnstenv
insl
jns
sbbl
sub
daa
jo
jecxz
scas
mov
cmp
in
dec
popa
sub
adc
test
cmp
push
loope
frstor
int3
mov
mov
pop
ret
ja
repz
xchg
mov
adc
mov
mov
std
cmp
sbb
stos
decb
pop
iret
mov
rcrl
leave
pop
mov
xor
push
add
mov
push
ja
xor
frstor
hlt
adc
mov
jmp
pop
inc
pop
jp
jecxz
inc
fdivl
pushf
imull
into
aam
sbb
js
add
jecxz
mov
das
ja
xchg
sbb
adc
sub
push
out
sub
stc
mov
add
pop
sub
out
sub
sahf
sbb
shr
jns
mov
loop
sub
add
dec
jo
sub
xchg
cmp
outsl
mov
clc
lock
pop
out
mov
dec
lret
stos
xchg
xchg
sub
mov
jl
mov
lock
mov
push
push
scas
adc
pop
bound
push
scas
xchg
xor
xchg
enter
adc
scas
inc
or
lock
shl
sbb
test
cmp
mov
sub
inc
iret
decb
xlat
inc
and
cmp
fs
push
rolb
inc
stc
js
push
xor
test
imul
in
sbb
fisubrs
das
cltd
jno
push
add
cwtl
and
je
add
push
ret
les
lods
mov
cltd
stc
scas
push
xor
pushl
mov
lods
enter
clc
mov
mov
rcr
fdivl
mov
jbe
test
inc
pop
dec
fwait
dec
or
add
cmp
icebp
mov
fidivl
das
outsl
loop
jno
push
xchg
das
mov
dec
cmp
int
bound
aam
daa
ja
mov
and
pop
fpatan
xchg
push
or
mov
lock
sbb
and
mov
mov
mov
mov
mov
inc
sub
hlt
int3
stos
lahf
sub
rolb
pop
mov
push
and
ss
cs
or
cs
es
pop
push
xor
in
adc
pop
ss
xor
call
inc
pop
mov
mov
je
cmp
cmp
in
fstpt
jmp
shr
ss
nop
cltd
push
xchg
dec
sub
push
mov
and
divb
inc
or
or
adc
mov
jno
ret
sbb
das
xchg
imul
xor
cmp
dec
jp
mov
push
loopne
mov
into
cs
inc
push
mov
xor
xor
mov
mov
push
movsl
filds
jecxz
mov
mov
inc
bound
mov
mov
and
dec
mov
pop
fucomip
cmc
mov
mov
mov
inc
adc
push
stos
cld
aad
mov
mov
pusha
mov
push
test
jl
add
inc
push
out
jp
aaa
cmpsb
movsb
adc
mov
fstps
aaa
push
inc
bound
adc
xchg
push
clc
nop
sub
repz
call
mov
scas
and
xchg
aad
shl
repnz
arpl
xor
sahf
push
test
loopne
scas
mov
jo
sub
jnp
inc
lods
rclb
sub
stos
push
mov
stos
add
sbb
mov
mov
mov
aaa
outsl
fldenv
xor
cmp
in
xor
into
or
adc
add
popa
stos
gs
sbb
aas
jmp
dec
sub
sub
imul
add
jp
call
push
clc
jnp
pop
fimull
in
and
insl
shll
out
js
xchg
roll
insl
push
insl
in
popf
lock
and
movsb
arpl
fcmovne
fistpl
inc
aas
xorb
fisubrl
jb
pop
adcb
sub
pop
xchg
or
cmp
and
std
in
inc
cmpsb
or
clc
cmp
out
loopne
ljmp
movsb
cwtl
jmp
xor
inc
cmp
mov
mov
cld
inc
push
mov
mov
mov
adc
je
mov
dec
enter
ret
arpl
dec
jne
insb
aad
push
jns
push
in
bts
cmp
les
ljmp
jae
in
jns
mov
fwait
daa
sbb
dec
addl
jnp
insl
add
mov
mov
jne
mov
push
pop
jge
sub
push
xor
call
cmp
xchg
mov
ficomps
out
sub
xor
jmp
fcmovnb
popf
xor
loopne
lret
xchg
call
cmpsl
dec
in
cmp
dec
fcoml
sbb
push
push
dec
mov
outsb
cmp
cmp
mov
pop
sub
pop
out
inc
pushf
in
fcomip
mov
jl
push
add
mov
sar
jbe
scas
rorb
xchg
adc
mov
das
push
inc
cli
push
dec
mov
fsubrp
outsl
inc
dec
popf
test
sub
mov
imul
jecxz
imul
jae
insb
fstpt
jbe
hlt
out
int
jmp
mov
adc
rcll
nop
mov
sahf
je
mov
or
cld
lahf
push
sub
lock
mov
mov
stos
outsb
and
aam
xchg
jae
sbb
xchg
aad
cwtl
in
xor
jle
pop
scas
repnz
or
jl
or
lds
outsl
popl
jmp
or
ja
xchg
lds
popa
jno
bound
addl
in
js
push
insb
cmp
dec
push
push
andl
movsl
xlat
push
mov
push
jge
ja
fdivrs
call
add
push
dec
pop
lret
arpl
sub
bound
jle
popa
jle
mov
push
inc
add
adc
xor
add
push
mov
jg
or
cld
mov
bndstx
jnp
jbe
pop
leave
inc
jp
pop
push
mov
cwtl
call
pop
adc
mov
sbb
jb
leave
dec
xchg
stc
stc
pop
testb
push
lcall
xchg
js
out
rclb
dec
push
int3
sahf
mov
push
iret
inc
mov
cmp
insb
adc
popf
jmp
push
xor
inc
push
mov
incl
sbb
push
or
gs
inc
ss
pop
xchg
pop
in
in
jnp
fdivp
daa
cwtl
and
enter
sbb
adc
sbb
into
fwait
cs
xor
adc
xchg
mov
adc
jo
fsubl
inc
dec
mov
jl
and
aad
add
inc
icebp
jo
das
jecxz
imul
pop
push
xchg
jb
in
lock
outsl
inc
aas
call
dec
int3
mov
jno
icebp
xor
mov
neg
sbb
dec
jp
inc
jl
inc
adc
sub
mov
lahf
sbbb
jg
adc
cli
jbe
test
jecxz
xchg
jo
mov
rcrl
inc
add
shlb
inc
lcall
sbb
in
cmp
data16
test
pop
dec
lods
mov
xor
or
dec
sub
xchg
repz
rclb
pop
popf
push
inc
xor
sbb
and
xor
mov
push
js
xor
repnz
in
adc
mov
leave
fcoms
mov
cmp
push
add
dec
or
xor
pop
loope
hlt
jbe
sbb
mov
or
shl
cmpsb
inc
jge
mov
add
leave
mov
jo
into
jo
jae
pop
jl
sbb
mov
js
lea
enter
cs
popf
inc
mov
pop
rol
in
jno
dec
fwait
je
mov
mov
add
mov
cwtl
mov
vmovaps
orl
adc
rolb
test
push
lds
sub
xor
aaa
cmp
shll
cmp
pop
add
pop
and
lret
mov
out
dec
divb
sti
mov
adc
dec
mov
or
addr16
cwtl
push
fldenv
stos
mov
mov
xor
mov
ljmp
jge
dec
outsl
dec
bound
xor
cmpsl
nop
aaa
jmp
push
pop
sarl
push
stc
lahf
insb
test
mov
jbe
cmpb
inc
jmp
stos
or
mov
jae
fbld
sbb
mov
call
outsb
add
fsubr
aam
mov
sub
jne
andb
xor
push
or
aam
cmp
rclb
leave
repz
scas
xor
es
mov
xchg
add
adc
std
dec
push
push
std
push
cmpsl
inc
mov
sbb
cmp
repz
fsubrs
inc
mov
enter
stos
mov
dec
in
repz
loop
je
sbb
cmp
jmp
push
scas
mov
mov
lods
xor
roll
dec
in
sub
fwait
jno
stos
push
popa
pop
pop
adc
pushf
insb
sub
loope
pop
mov
lret
insb
xchg
adc
int
dec
imull
imull
sub
scas
lahf
sarl
lock
mov
and
push
push
mov
daa
int3
push
pop
ret
mov
cmp
ret
dec
dec
fsts
xor
mov
mov
es
dec
and
repz
sub
aam
sbb
add
lods
enter
push
aam
std
jmp
xchg
bound
rclb
std
stc
xchg
push
vpminsw
adc
and
das
xorb
aas
in
push
dec
scas
test
push
out
sbb
mov
sti
notb
adc
mov
sub
pusha
lahf
jl
mov
mov
dec
das
mov
sbb
inc
cmp
xchg
rorb
and
test
xlat
fsubr
fs
mov
mov
dec
pop
in
mov
loopne
jl
sub
adc
das
pop
jbe
inc
es
push
cmpsl
popa
adc
inc
jmp
jg
xor
outsb
mov
add
ja
stos
sbb
loope
les
pop
fmuls
out
cs
hlt
inc
fstpl
pop
popa
dec
mov
push
gs
sub
mov
popf
mov
push
outsl
and
rcl
lds
nop
xchg
aam
sub
scas
hlt
xchg
or
xor
insb
push
aas
ja
dec
loope
and
call
jne
in
std
ds
or
xchg
or
mov
add
invd
mov
popa
ficompl
pop
xor
mov
push
sub
insb
std
movsl
aas
mov
xchg
inc
inc
dec
jmp
or
push
add
inc
push
insb
in
inc
cmp
arpl
lock
jbe
fwait
or
cmp
cmc
ds
push
shll
add
test
lcall
aam
aad
push
push
mov
pop
mov
pop
or
mov
pop
and
xchg
ljmp
or
pushf
clc
icebp
xor
sbb
out
xor
dec
adc
adc
mov
leave
popf
mov
fstl
pop
stos
pop
outsl
mov
sarb
push
push
dec
jmp
xor
cmp
mov
xchg
fs
rcrl
sub
dec
cmpsl
stos
pop
test
mov
aas
add
cmp
cmpb
pop
insl
jge
ja
jne
aad
push
popf
sbbl
push
cld
cmp
lods
xor
dec
fcomps
xchg
jl
add
negl
push
or
or
mov
call
testb
orb
nop
inc
xchg
shrl
jns
add
mov
pop
cli
jo
mov
mov
cmpsb
das
xor
iret
dec
ret
lods
push
stos
ds
dec
jmp
mov
xchg
add
ss
repz
push
cmpsl
jb
mov
test
ljmp
sbb
mov
sahf
push
xchg
imul
es
sub
je
js
cltd
mov
mov
outsl
inc
test
fbstp
ja
fmull
cmpsl
mov
dec
push
shll
out
jnp
lahf
movsb
imul
dec
mov
dec
int
jmp
push
clc
cli
ds
xchg
jae
insl
mov
sbb
and
push
jbe
jle
test
push
aam
lcall
push
cbtw
pushf
sbb
insl
pop
mov
jmp
pop
cmp
mov
mov
or
arpl
cmp
aad
fiadds
testl
sbb
add
pop
mov
xchg
cmpsb
inc
dec
aad
test
push
pop
xchg
push
push
add
push
xchg
xor
insl
pop
insb
hlt
idivb
xchg
jb
roll
into
insl
hlt
cmp
sti
cmpsb
mov
mov
inc
pop
dec
mov
sub
pop
negl
sahf
psllq
jnp
sub
xchg
mov
ss
bound
clc
imul
push
mov
xor
cwtl
inc
ret
xchg
inc
xchg
pop
jae
push
dec
sub
pop
in
xchg
mov
testb
es
sbb
xor
cmpsb
cmp
push
aas
call
add
mov
jno
aad
mov
xchg
xor
inc
push
mov
std
and
mov
test
rcr
lret
add
adc
lcall
aaa
sbb
aaa
popa
int
mov
push
ficoms
cmp
das
jbe
jnp
fmulp
cld
adc
pop
jle
pop
bnd
or
sahf
jbe
xchg
mov
adc
in
js,pt
push
jg
pop
sahf
insl
xchg
and
cmpsb
adc
out
sub
out
sub
shlb
sbb
lock
adc
mov
xor
dec
imulb
and
jae
fwait
das
cmpsl
or
add
dec
aad
mull
les
push
cmp
xchg
movlhps
test
jg
xor
cmp
nop
mov
aaa
inc
shll
test
add
jp
jg
rcll
mov
pop
lret
xchg
mov
rclb
dec
mov
jg
cmc
dec
xor
jle
aaa
dec
hlt
cmpsl
loop
scas
xchg
push
out
lret
cmpsl
adc
or
adc
leave
mov
inc
je
xchg
sbb
sbb
dec
sbb
into
dec
ret
es
dec
fnstsw
ja
cmpsl
mov
lcall
enter
das
enter
xor
pop
outsl
xor
lret
in
xchg
js
dec
inc
dec
pusha
fmull
xchg
jg
inc
sbb
push
mov
out
mov
sahf
ja
movsb
xor
mulb
adc
dec
test
dec
loope
mov
cltd
sbb
push
sbb
fcoml
sub
shlb
arpl
dec
sub
mov
sbb
cmpsb
jp
sahf
int3
cmp
pop
int
loope
aam
inc
adc
xor
in
pop
dec
or
push
cmp
lahf
faddl
xorb
enter
mov
pop
pop
bound
rolb
subl
mov
movsl
push
add
bound
shrl
stos
scas
ja
loopne
shrl
mov
inc
dec
sti
dec
mov
mov
sbb
mov
dec
pop
pop
test
xor
xchg
xlat
xchg
push
sbb
xchg
sti
xchg
push
and
mov
lds
icebp
shl
adc
iret
sub
icebp
push
scas
sbb
in
mov
sarl
jbe
fldl
fmull
outsl
mov
addr16
ret
cmc
sarb
inc
mov
rcrl
lods
inc
fs
and
std
movsl
mov
ss
sbb
shll
mov
in
mov
in
sub
fstps
xchg
arpl
clc
loope
sub
sub
inc
out
xchg
divb
fcomip
mov
aaa
jbe
push
and
jns
dec
jge
or
loop
call
xor
inc
dec
call
shrl
popf
subl
mov
push
or
push
test
leave
add
lret
add
popf
cmpsl
repnz
test
insl
outsb
bound
push
fwait
stc
xchg
stos
pop
inc
xor
fisttpll
cltd
push
testb
inc
sub
sarl
or
xchg
daa
or
xlat
dec
pop
pop
and
addr16
data16
fisubrs
or
jg
mov
fistl
sbb
lahf
add
les
fimuls
cli
pop
daa
mov
sbb
insl
xor
push
mov
jmp
insb
jb
xor
xchg
daa
roll
enter
add
arpl
jbe
cmc
lock
popf
cmpsl
shlb
mov
and
xor
push
cmp
lock
minps
imul
clc
mov
or
in
xor
jl
mov
inc
lret
mov
movb
mov
cmp
pop
in
push
pop
in
jb
inc
in
push
push
cmp
mov
add
pop
sbb
cs
movsl
pop
mov
push
cs
mov
leave
movsl
xor
sub
popl
cmpsb
mov
scas
ljmp
dec
cmpsb
mov
sarb
xlat
aam
in
test
repz
jno
add
iret
xchg
pop
enter
cmpb
jnp
cmp
or
push
test
inc
pop
push
add
cmp
sub
cmpsl
stos
sti
push
add
ljmp
les
push
mov
cmp
jae
sbb
mov
inc
lcall
jb
inc
inc
sub
and
sbb
cwtl
fstl
cld
xchg
xor
push
mov
jne
test
arpl
cmp
testl
mov
xchg
mov
inc
sbb
sahf
pop
mov
or
lret
sbb
xor
int3
sub
inc
ds
insb
out
add
push
daa
out
jne
mov
roll
aam
ficoms
pushf
pop
repnz
dec
sub
sbb
inc
cmp
cmp
jge
mov
jp
pop
push
pusha
std
popa
jge,pn
inc
xchg
insl
stc
call
mov
push
inc
fwait
arpl
jo
hlt
out
out
xchg
stos
adc
mov
scas
mov
js
or
std
aaa
andl
movsl
push
test
push
push
fbld
inc
lahf
aam
jbe
arpl
rcl
cld
push
out
mov
adc
fidivrl
jnp
xorl
data16
dec
in
outsb
jle
sbbl
outsb
nop
js
and
ret
jno
pop
idivl
iret
push
mov
cli
xor
cmp
push
adc
leave
pop
scas
out
repnz
inc
mov
mov
jl
movsb
jae
inc
lahf
lods
xor
das
insl
out
jge
ja
cmc
loopne
inc
sbb
subb
ret
loop
stc
jl
out
icebp
dec
dec
mov
mov
cmp
or
lea
orl
cwtl
add
dec
mov
fwait
psubq
mov
into
pop
ror
fisubrs
out
je
lock
std
or
add
int3
push
xchg
ljmp
lcall
out
mov
adc
sub
mov
mov
in
adc
in
shr
mov
data16
push
adc
rcl
mov
sub
and
in
adc
jo
int
fldl
sbb
inc
nop
in
xor
push
outsl
vpmovwb
mov
arpl
lods
adcl
cs
aam
in
inc
lcall
lahf
movsl
xor
stc
pop
nop
popa
sbb
lods
movsb
push
fdivrp
push
push
or
pop
data16
pusha
bound
jp
xchg
sarb
rol
jns
mov
pop
cmp
mov
dec
cmc
fistps
mov
pushf
dec
stos
addl
mov
cmp
inc
or
or
mov
loopne
push
out
xchg
nop
dec
ljmp
aad
call
lret
insb
pusha
pop
pop
sbb
push
push
mov
enter
xor
aad
stc
inc
popf
jge
inc
inc
push
push
int
cmp
sbbb
or
dec
add
or
fsubp
daa
push
xchg
lret
scas
jg
nop
mov
xlat
dec
xchg
cmc
push
std
nop
add
sbb
sub
ds
sahf
lret
cmpsb
dec
inc
cmp
repnz
inc
pop
or
nop
mov
cmp
mov
xchg
sbb
add
ret
movsl
cltd
divb
leave
sub
push
lcall
mov
xlat
and
dec
mov
rorb
invd
push
jge
mov
mov
lods
xchg
sub
and
cmp
cmp
lock
xchg
cli
hlt
std
les
mov
sub
cld
dec
sub
mov
push
dec
and
jmp
adc
or
ret
cmp
loop
sub
into
sub
std
pcmpgtw
jg
addb
sahf
mov
inc
add
lcall
push
adc
push
adc
cmp
and
subl
xchg
in
pop
pushf
push
sub
adc
movsl
fmuls
rcrb
mov
dec
sub
lahf
push
pop
cltd
mov
cmp
pop
inc
inc
push
ds
orb
push
xor
pop
add
mov
xorl
mull
movsb
mov
xor
in
mov
aaa
xor
push
pop
mov
imul
lea
xor
mov
inc
xchg
pop
sahf
pop
pop
xor
sbbb
in
adc
dec
dec
out
push
fisubrs
call
adc
push
movsb
mov
add
mov
loopne
lret
idivb
cmp
movsb
aam
xchg
sub
out
scas
sbb
inc
lock
push
or
jns
aas
fwait
pop
xchg
and
adc
dec
fwait
push
sti
mov
mov
xor
mov
out
test
daa
inc
or
push
adc
leave
out
icebp
or
ret
mov
out
add
lock
pop
adc
jne
cmc
xchg
pop
in
mov
movsb
movsb
fs
lret
aad
leave
pop
cmpsl
cmp
ja
adc
dec
jge
adc
fxch
pop
cli
shl
sbb
jns
inc
mov
add
push
add
push
pop
jo
push
and
fucomi
xor
jge
lahf
aad
mov
lahf
aaa
push
mov
shlb
pop
dec
push
mov
aaa
jge
jl
mov
pushf
pop
or
pop
and
dec
xchg
inc
pop
scas
insl
xchg
psrad
cmp
pop
aad
dec
jg
cmp
sti
mov
lods
out
cmc
sarb
fcmovne
cmpsb
or
aam
mov
push
jp
in
or
jle
push
and
out
aas
rcrl
in
mov
mov
mov
and
fnstcw
dec
out
xor
cli
dec
es
mov
mov
stos
xlat
or
sbb
das
pop
call
je
ss
lret
mov
ret
ljmp
inc
push
mov
aam
xchg
and
and
popa
push
push
in
pop
adc
xchg
stc
fs
mov
rorl
sub
je
addr16
jecxz
das
lahf
out
jns
mov
test
jmp
je
popa
or
add
mov
aaa
movsb
imul
xor
cmp
shrb
fs
cmpsl
arpl
dec
in
add
cmp
test
mov
movsb
push
mov
fisttps
push
mov
dec
dec
inc
sbb
in
ret
xchg
fs
push
cltd
mov
or
enter
xor
xchg
inc
mov
lods
mov
fdivrl
mov
xor
out
sub
push
add
addl
scas
and
mov
push
hlt
cli
jp
testl
test
or
lret
ss
mov
sbb
jnp
invd
sub
mov
fsub
imull
xchg
lods
cwtl
jno
shlb
arpl
das
fbstp
add
mov
mov
icebp
loopne
cli
std
ret
mov
jns
popa
pop
jb
repnz
or
add
dec
aad
jecxz
orl
inc
push
push
rcrl
or
pop
les
and
xchg
dec
xchg
pop
scas
notb
mov
sarl
push
mov
into
clc
orl
push
sbb
mov
test
sbb
out
xor
in
sub
incl
cli
cmp
xor
cmpsl
pop
adc
inc
call
loopne
fiaddl
ja
or
pop
jmp
jnp
jnp
cltd
jns
scas
xchg
lds
sahf
mov
push
sbb
outsl
mov
fcoms
sahf
adc
dec
adc
jg
sbb
sub
inc
xor
sar
lea
pop
jmp
pop
inc
sub
add
aas
scas
and
sbb
imul
adc
jnp
push
mov
sbb
dec
jno
clc
insb
imul
pop
add
adcl
sbb
jo
stc
or
sub
leave
mov
xchg
fisttpll
push
mov
mov
mov
inc
cmp
push
out
dec
adc
sbb
push
adc
push
cli
sbb
jbe
dec
lret
jbe
or
cmp
roll
xor
outsb
aas
arpl
add
fs
cmp
or
mov
addr16
xlat
mov
mov
and
mov
gs
xchg
mov
imul
and
cli
in
mov
ret
mov
pushf
cmp
adc
xor
stc
inc
jge
cmp
stc
inc
inc
push
push
xor
jne
loopne
or
scas
leave
fcmovnbe
cwtl
fists
lods
pop
and
jo
fstpl
ficoml
mov
lret
xor
cmc
push
ds
xchg
nop
jle
xchg
cmp
push
adc
popa
scas
xor
xchg
mov
xchg
int
add
ja
pop
cli
nop
push
add
cmova
incl
sub
xchg
shrl
mov
mov
add
xor
outsl
int3
sbb
xchg
push
cmp
stos
std
lock
in
int3
and
push
cmp
movsl
sbb
lods
cmp
pusha
mov
fiaddl
inc
loop
and
inc
gs
fcmovnu
movl
repz
jg
sub
aaa
aas
mov
adc
nop
addr16
scas
lahf
pop
aas
jle
ss
movb
ret
sarl
dec
and
cmc
ficomps
imul
clc
add
and
lret
mov
xchg
mov
jl
sbb
loopne
add
jbe
sub
lret
add
or
add
pop
das
cwtl
scas
repz
cmp
insb
shrl
aaa
xchg
or
cmp
and
cmp
inc
mov
cltd
sbb
pop
sub
jb
cmp
jle
fists
xor
inc
cmp
pop
and
cltd
adc
clc
pusha
pop
insb
dec
push
cli
aam
pop
sti
pop
es
jmp
cwtl
push
andl
cmp
sub
push
outsb
jnp
jle
aam
sbb
push
jbe
cmp
aas
aas
iret
bound
xchg
mov
mov
insl
cltd
int
push
cmpsb
mov
jl
int
bound
in
pop
orl
in
and
insb
mov
jp
add
adc
pop
or
je
sbb
mov
adc
xchg
pushf
cli
enter
mov
inc
push
jle
sbb
and
insl
aam
lret
out
insl
xor
stos
xchg
cmpsl
add
js
pop
dec
sbb
lods
shrb
mov
sub
in
repz
leave
add
pop
push
fs
cmp
add
push
jno
adc
daa
add
je
cltd
into
jae
push
jo
or
stc
pop
push
ljmp
jns
and
lcall
lahf
or
dec
mov
pop
and
adc
in
push
data16
aas
fwait
and
fmulp
push
clc
fdivrs
mov
xlat
int3
cmc
out
mov
pop
scas
cmpsb
xchg
push
aad
push
aad
fdivs
xor
or
dec
ljmp
outsl
adc
and
lods
out
fcmovnbe
xchg
jae
jae
test
inc
outsl
sbb
sarl
sbb
or
jmp
jae
mov
mov
mov
sub
test
cmp
dec
shll
fs
sarb
cmp
mov
test
cmc
add
push
or
mov
test
subl
and
rcrl
cmpsl
int3
mov
add
cmp
jmp
in
sbb
popa
insl
cmc
cli
mov
adc
das
mov
mov
sub
jge
jns
ja
xchg
pop
xchg
jae
inc
arpl
and
push
cltd
pop
sub
xor
and
insl
jg
inc
and
xchg
or
mov
pop
mov
xor
sub
push
push
lods
repnz
xchg
cltd
sbb
inc
push
mov
push
push
cmp
je
sub
adc
push
outsb
outsb
mov
push
aaa
and
fidivs
xchg
jbe
dec
lret
ror
xchg
adc
inc
adc
and
pop
sub
sahf
sub
xor
pop
jne
or
push
jp
in
shlb
pop
cmp
mov
push
inc
mov
stc
ljmp
jne
push
ret
jecxz
dec
imul
cmp
jnp
or
add
pop
cmp
jno
sbb
cmpsb
jns
sbb
pop
cmpsb
ds
out
pop
sarl
aam
sbb
ucomiss
inc
jmp
add
in
ljmp
mov
add
push
enter
pop
sub
sub
add
inc
je
icebp
add
ljmp
inc
adc
push
xchg
mov
sub
outsl
xlat
arpl
cmpsb
out
pavgb
addl
sbb
adc
add
test
ret
fnstenv
push
lcall
incb
jb
sub
inc
pop
jns
imul
dec
lock
mov
add
shrb
mov
or
test
sti
in
ret
dec
outsb
sbb
sbb
hlt
push
xor
push
mov
mov
stc
pop
jbe
xchg
xchg
pop
adc
imul
in
jnp
test
pop
mov
inc
and
or
xchg
add
sbb
orb
or
add
int3
sbb
stos
dec
popf
xchg
xor
xor
hlt
mov
std
mov
add
cli
cmpsb
je
inc
les
xchg
cmp
outsl
jmp
adc
jecxz
inc
add
mov
leave
cmp
add
cli
sahf
sahf
adc
test
int
gs
dec
pop
ja
and
sub
mov
mov
sub
stc
sbb
shrl
add
cmpsl
cmc
or
pop
pop
adc
cmpsb
into
xorl
cmp
fs
imul
fs
push
aaa
sub
cmp
fisubs
jnp
lahf
ds
sub
dec
add
inc
pop
or
bound
mov
imul
shll
faddl
lret
pop
mov
mulb
stc
lods
add
clc
shll
int
bound
test
in
and
xor
mov
jns
or
fidivl
mov
fsubr
mov
pusha
jno
jae
and
push
cmp
inc
ljmp
sar
roll
enter
push
cwtl
iret
mov
aam
or
mov
data16
into
mov
inc
cmp
lahf
mov
hlt
add
and
adc
pop
xor
pop
fiaddl
and
xor
or
loopne
mov
pop
repz
or
lock
fildl
adc
xor
jnp
jnp
movsb
cmpsl
lret
fiadds
loopne
fdiv
mov
and
sub
pop
jl
nop
sar
lock
aaa
mov
xor
sub
jb
outsb
nop
add
pop
data16
jno
sub
add
ss
faddl
daa
sub
dec
imul
sahf
inc
imul
es
sub
popf
movsb
inc
dec
jl
mov
outsl
mov
mov
test
cwtl
xchg
pop
xchg
ficoml
out
dec
xor
xor
rcll
lret
roll
xchg
xor
pop
in
test
fcmovb
shlb
cmp
test
xor
cwtl
sub
hlt
test
and
std
outsb
movsl
jmp
xor
jg
mov
or
testl
fs
dec
push
dec
jp
das
mov
movsl
xor
jae
lods
adc
idivb
nop
mov
punpcklwd
subl
insl
movsl
les
push
dec
jno
test
xchg
rolb
adc
enter
cmp
push
movsb
ja
inc
sbb
aad
add
std
sbb
xor
mov
or
dec
aad
jle
xchg
jmp
adc
inc
fisttps
sub
cmpb
cmp
jecxz
js
xor
pop
fldl
jl
pop
stos
and
inc
in
push
fwait
and
je
jno
push
fsincos
push
aam
fadd
sbb
ficomps
outsb
aas
mov
out
or
mov
xchg
sbb
ljmp
adc
jecxz
pop
das
jmp
aam
cltd
pop
push
or
pop
mov
xor
into
pop
pop
inc
addr16
mov
jmp
outsb
stos
fidivrl
lea
out
mov
imul
ja
cli
data16
and
cltd
test
imul
test
push
sti
mov
and
lcall
push
aad
les
pop
or
or
add
fadds
mov
inc
xchg
and
loope
mov
daa
out
ja
shll
dec
inc
popf
pop
inc
icebp
mov
pop
and
cmp
fucomip
pushf
out
dec
pop
dec
or
push
cmp
enter
std
addl
cmp
push
push
add
dec
jge
es
lods
mov
addb
sub
movsl
or
in
fcompl
mov
aam
jl
addr16
repnz
dec
dec
add
and
cmp
mov
imul
pop
clc
or
lds
push
sahf
js
in
mov
ljmp
test
mov
data16
jbe
cmpsb
ds
lock
imul
inc
xchg
mov
in
fidivl
loop
andl
leave
cmc
es
mov
cmpsb
push
hlt
sub
ret
sbb
push
stos
cmp
sahf
jmp
daa
pop
jmp
lods
movsb
adc
or
dec
push
sub
dec
mov
mov
fimuls
sbb
das
push
or
mov
ret
cmp
pop
xchg
mov
inc
je
imul
dec
jp
dec
push
jp
mov
fidivrl
xchg
cli
movsl
imul
cwtl
cltd
push
or
mov
pop
fs
inc
ds
pop
xor
fistpl
test
or
or
pop
adc
ret
mov
ja
inc
sub
lea
xchg
xchg
and
data16
jns
arpl
pushf
adc
pop
lods
ret
xchg
sarl
sub
xchg
jl
push
add
out
pop
add
or
jg
xchg
push
mov
test
pop
test
xchg
aaa
in
rclb
or
stc
jno
push
popa
add
cmc
pop
lock
call
jmp
into
push
fists
dec
jg
cli
fstpt
jb
ljmp
gs
aad
andb
cmpb
add
popf
cmp
cmp
jg
stc
mov
ja
flds
inc
rolb
xchg
lods
sub
xor
or
jg
sbb
ds
jmp
lcall
mov
xchg
sbb
push
mov
enter
test
shlb
notb
es
jmp
and
cmc
mov
ja
add
stc
lret
aad
pop
mov
inc
mov
adc
repnz
test
adc
jecxz
jl
xor
inc
je
lcall
dec
adc
lret
xor
push
inc
loop
dec
loopne
push
leave
xchg
mov
lret
mov
in
jne
mov
jl
cmp
mov
test
sarl
add
lods
cs
sub
leave
inc
mov
bnd
sub
add
sbb
sbb
cs
fdivrp
outsb
imull
scas
mov
es
sbb
sbb
mov
jb
mov
cmp
lock
push
xor
sub
cmp
sub
dec
aas
mov
sub
mov
adc
outsb
data16
in
dec
test
lcall
enter
leave
lret
adc
push
mov
push
out
or
mov
add
xchg
push
mov
inc
popa
ljmp
mov
or
mov
or
ret
jg
push
cmp
mov
jnp
cwtl
sub
stc
repz
loop
add
jmp
loopne
jo
push
in
mov
vcmpss
clc
int3
xor
leave
cmp
mov
jne
jbe
mov
xor
or
in
movsl
or
adc
mov
and
stos
fisubs
dec
mov
adc
mov
clc
pop
data16
mov
adc
add
jg
pop
cmc
xchg
pop
fwait
and
add
f2xm1
and
mov
stc
idiv
push
dec
sbb
push
lcall
mov
imul
jae
sar
movsb
xor
fsts
and
int
inc
mov
pusha
aam
aaa
mov
mov
mov
movsb
or
mov
sahf
jecxz
outsl
dec
sbb
clc
in
mov
aaa
test
mov
and
push
and
loope
and
add
adc
push
push
jecxz
sub
mov
dec
or
mov
push
inc
test
cmpsb
dec
or
and
repnz
andb
jns
dec
adc
fiadds
sub
inc
imul
divb
mov
stos
out
arpl
xchg
loopne
or
das
aas
pop
ret
pop
adc
and
and
mov
xchg
subb
mov
ficomps
mov
test
scas
cmp
pop
test
test
mov
sahf
mov
adc
mov
shlb
out
dec
fldlg2
mov
adc
nop
mov
dec
pop
jmp
addl
cmp
cld
dec
pmuludq
cmp
push
std
idivb
dec
jne
inc
scas
xchg
adc
lcall
inc
cld
js
call
aaa
mulb
loopne
js
lret
std
gs
sbb
pop
adc
mov
addr16
dec
test
mov
sub
aas
jmp
ds
adc
fimull
lds
xchg
jmp
mov
and
dec
cwtl
sti
shll
ja
xor
add
pushf
xlat
lods
add
jno
mov
push
pop
mov
push
ja
out
rcll
mov
dec
pop
cmp
aas
cmpl
aad
mov
arpl
push
add
push
xor
adc
xlat
stos
cmp
les
imul
and
jae
or
inc
mov
ficoms
adc
popf
xor
les
mov
inc
test
adc
mov
fs
pop
jbe
cs
xor
scas
lret
in
jae
pop
jo
sub
jnp
jp
push
add
xchg
lock
loopne
adc
pop
fadd
push
aas
mov
and
rcrb
push
loop
jmp
cltd
or
movsb
xor
clc
ja
push
ficompl
hlt
jmp
mov
adc
jb
dec
mov
imul
movsl
inc
lcall
repnz
adc
push
test
sbb
leave
icebp
stos
pop
dec
es
xlat
xchg
xchg
lcall
div
add
fnsave
mov
pop
aas
mov
jae
das
lahf
inc
sbb
iret
mov
or
in
dec
cmp
movsb
mov
ja
sbb
test
mov
in
sarb
or
add
adc
dec
scas
lret
adc
xor
ljmp
sbbl
insb
adc
daa
push
insb
mov
popa
pop
and
sar
shll
inc
int3
sub
nop
das
aas
xchg
pusha
ret
xchg
cli
sub
addb
pop
jl
sahf
leave
mov
lods
movb
cld
push
jbe
adc
cmp
or
push
pop
shlb
sbb
scas
xchg
in
mov
inc
add
arpl
outsl
jnp
call
dec
loop
gs
pop
jo
insb
cld
cmpsb
xchg
xlat
pop
sbb
cmp
addr16
jnp,pt
sbb
test
push
sub
dec
pop
or
mov
xchg
push
cmp
rclb
lea
addr16
adc
push
fstps
mov
mov
pop
pop
pop
cs
sbbb
push
flds
pop
sbb
xchg
outsb
and
push
xor
pop
pop
dec
adcb
pusha
jbe
cs
fdivr
jo
mov
xor
jne
mov
outsb
imul
nop
xor
xchg
xchg
ss
stos
scas
inc
mov
xchg
les
and
fisttpll
cltd
push
jnp
inc
mov
push
sahf
push
add
loope
or
test
enter
and
xchg
jle
enter
and
cmp
or
or
adc
cmp
loope
sbb
or
pop
pop
aam
add
mov
cmp
jl
test
fdivrp
mov
popf
fisubl
jns
std
lods
mov
pop
repnz
jns
push
hlt
mov
minps
cmpsb
xchg
mov
inc
mov
sub
mov
xor
xchg
pop
int3
test
pop
or
pop
movb
and
jle
out
push
bound
test
add
sbb
push
push
in
imul
fs
mov
addb
pop
mov
xlat
stc
cmpsl
ja
insl
xor
paddw
sbb
div
ljmp
das
and
movsl
pop
repz
sti
lret
out
bound
jg
sbb
xor
cmp
xor
push
lds
add
icebp
sub
sbb
push
push
sbb
bound
pop
out
push
and
fwait
dec
cmp
mov
dec
cmp
inc
mov
aam
and
cmc
mov
and
loop
xlat
out
aaa
sub
std
repz
in
cmp
xor
jbe
das
sbb
and
mov
mov
scas
xor
lcall
and
jne
inc
js
cmp
cmpsb
filds
insl
sbb
pop
xchg
in
imul
jl
dec
push
lret
sub
popf
ja
xchg
loope
pop
pop
lock
dec
mov
aaa
dec
add
std
enter
nop
inc
sbbl
cld
mov
add
cmp
pop
adc
xchg
ja
dec
mov
lret
out
add
and
mov
pop
nop
sub
iret
inc
and
xor
sub
add
push
pop
adc
or
std
sub
dec
cmpsl
fldt
xchg
das
xor
inc
dec
popl
push
pop
stc
add
ficoms
in
or
gs
jns
int
sarl
inc
das
cmp
jle
push
add
mov
movsb
add
mov
sbb
dec
packssdw
mov
addb
sbb
fcmovb
scas
test
pusha
dec
jb
cmp
push
mov
or
dec
fadds
add
ficoms
ficoms
push
mov
mov
xchg
pop
cmpsl
jge
test
pushf
fwait
push
push
pop
or
dec
push
lock
sahf
loop
sbb
cmp
hlt
int
out
in
sub
fstpt
ja
mov
mov
mov
pushf
stos
cmpsl
js
fs
loopne
jge
test
mov
mov
and
mov
test
jge
add
or
push
pop
popf
cmpl
mov
mov
divb
pop
jbe
sahf
push
sub
rol
xorl
push
push
cmc
add
and
iret
push
xchg
xor
and
dec
addb
xor
nop
jo
cs
ljmp
in
pop
cld
mov
push
aas
imulb
fdiv
and
hlt
mov
cwtl
jp
jp
cmc
fcomps
movsl
bound
and
cs
ret
mov
mov
pop
cltd
mov
lea
fcom
test
xchg
add
repnz
push
sbb
lds
imul
mov
push
rcrl
sub
sti
adc
lea
cmpsb
lds
sub
daa
aad
jae
mov
inc
mov
mov
pop
mov
and
lea
pop
mov
fisubl
test
jnp
hlt
pop
push
mov
inc
pushf
or
sbb
inc
shll
push
push
cmpb
sub
xor
inc
int3
sub
aad
dec
add
popf
orl
jo
mov
enter
shlb
fwait
push
imul
lods
and
pushf
mov
aaa
push
daa
pop
cmp
pop
mov
movsl
jg
inc
sti
add
xor
fbstp
loope
jg
insl
or
dec
xor
adc
scas
xchg
lret
mov
cmp
pop
xchg
sahf
push
stc
xor
scas
add
add
in
jb
movsl
jmp
shl
cs
movsb
push
cmc
and
mov
mov
mov
xorb
lock
test
cld
jge
subb
or
mov
dec
popf
xchg
inc
cli
aad
bound
or
inc
push
xchg
inc
add
mov
cmp
lock
cmp
cld
dec
pop
mov
cmp
sub
lds
clc
mov
mov
mov
in
sub
pushf
mov
add
add
or
std
notl
jno
mov
adc
xchg
cli
xor
pop
and
fstpl
add
fwait
mov
pop
lods
mov
mov
stc
lods
xchg
dec
loopne
dec
dec
sub
cli
and
cmpsl
rcr
sarb
scas
faddl
call
mov
push
call
daa
or
fldz
sub
xor
movsb
push
cmp
dec
xchg
std
sub
fidivrs
pop
out
sub
add
or
jp
stc
xchg
loope
fcompl
loopne
test
cli
cmp
sub
and
fidivs
and
movsb
mov
inc
fldenv
popf
sub
mov
push
push
aam
stos
mov
pop
gs
loope
mov
mov
mov
loopne
lret
rcrb
cld
xor
jb
push
outsl
arpl
out
pop
inc
pop
jo
jb
add
popa
or
mov
ret
hlt
dec
rclb
aas
dec
loope
div
movsl
jns
loope
test
dec
fsubrs
loop
mov
cmp
add
hlt
pop
popf
add
dec
push
popa
mov
mov
mov
daa
adc
mov
test
mov
add
popf
mov
add
divb
lock
jge
and
jb
jg
mov
or
stos
lea
add
sti
sbb
popf
nop
add
lods
push
aaa
jbe
cmp
or
dec
adc
dec
popa
inc
testb
idivb
jecxz
jno
bound
mov
pop
pushf
add
xor
inc
ja
and
jae
jl
push
push
adc
shrl
inc
mov
mov
je
sbb
and
insb
mov
xorl
mov
into
pop
gs
fdiv
int
jge
mov
xchg
insb
or
cltd
or
into
xor
xchg
rcrl
ja
fcomi
mov
wbinvd
test
js
movsl
mov
mov
ds
pop
clc
enter
stc
jno
in
or
cmp
mov
stc
incb
lcall
pop
xorl
cmp
inc
cli
repz
sbb
scas
push
lods
imul
aam
fs
cltd
mov
cmp
pop
sub
and
inc
fneni(8087
das
xor
xchg
push
stos
inc
inc
inc
pop
push
xchg
pop
pop
xchg
stos
test
addl
sbb
das
fwait
push
xchg
pop
push
dec
lock
or
imul
push
xchg
imul
stc
pop
jp
jne
pand
mov
jbe
push
pop
lock
xor
xchg
mov
les
test
pop
cmp
dec
mov
daa
pop
cmc
lret
mov
xchg
mov
adcb
flds
pop
sbb
cmp
sub
cmp
repz
jnp
ds
lea
pop
ret
ljmp
lret
cmp
or
popa
pop
sub
xchg
sarl
pop
mov
cltd
insl
int
scas
ds
mov
pop
outsb
addr16
mov
pop
xlat
add
rolb
cmc
add
mov
dec
fbld
or
mov
fsub
dec
cmp
faddl
rcrl
xchg
pop
outsl
adc
jbe
scas
cwtl
loop
inc
cmp
cmp
dec
into
push
sub
idiv
je
iret
inc
mov
lret
xor
pop
sub
scas
and
ret
sub
adc
adc
cmp
enter
cltd
mov
push
jmp
sar
cwtl
mov
mov
ja
dec
and
dec
subb
test
js
add
inc
stos
int3
repnz
test
dec
mov
jecxz
or
jg
inc
lret
cmp
jnp
mov
fsubrs
xor
mov
inc
push
lds
mov
xor
sub
aaa
test
dec
in
repz
pop
mov
sub
and
shrl
pop
in
out
xor
in
repnz
or
imul
popa
in
push
mov
inc
rorl
fcomps
pushf
jp
push
insb
roll
jno
call
jnp
imul
xor
in
push
aaa
mov
mov
test
push
mov
mov
scas
data16
shr
imul
push
je
pop
adc
fsub
cmc
xchg
sbb
test
lods
out
gs
ljmp
stos
ret
cmp
pop
dec
addr16
daa
in
int
cmpsl
mov
aam
insb
jbe
cwtl
rol
add
sub
xor
cld
cmpsl
in
fwait
add
fnstsw
jg
outsl
inc
mov
sbb
or
mov
push
in
xor
jbe
add
push
popf
lahf
sar
and
sub
adc
or
and
and
xlat
mov
scas
dec
pushl
pop
cmpsl
enter
dec
pop
stos
mov
xchg
mov
test
jno
mov
lods
lcall
jbe
dec
jnp
push
dec
push
and
cmp
push
push
jle
cmp
call
jno
mov
inc
das
pop
in
arpl
mov
adc
xchg
dec
out
idiv
aam
mov
lahf
dec
movsb
jle
xchg
mov
fsubrs
insb
sub
pushf
mov
inc
loop
mov
xor
inc
scas
mov
and
inc
dec
xchg
or
pop
lock
sbbl
jns
jbe
inc
pop
out
mov
out
shll
push
mov
mov
push
negb
shlb
fmul
push
adc
mov
dec
loope
mov
push
lods
sbb
cltd
mov
add
testb
cmpsl
sub
pop
lods
sub
mov
and
mov
rol
loop
popa
in
mov
sbb
adc
bnd
addl
or
or
scas
out
leave
sub
js
jecxz
sarl
jae
fsubl
mov
mov
mov
inc
shlb
mov
clc
xchg
inc
fmull
cmp
daa
xor
sbb
stc
mov
fisttpll
sub
pop
ror
mov
jns
mov
mov
add
jmp
js
cwtl
dec
andps
ds
mov
mov
push
test
push
test
xchg
imul
mov
dec
sbbl
mov
pop
les
aad
jge
imul
xor
outsl
xchg
in
inc
repnz
adc
inc
xchg
pop
cmp
xchg
adc
ret
add
xchg
jmp
push
push
inc
xchg
add
into
dec
mov
jl
in
aas
mov
jp
mov
inc
ljmp
jmp
cmc
sbb
push
jle
jmp
mov
push
cltd
mov
addr16
mov
insl
mov
dec
pop
cli
aad
loop
dec
sbb
cmp
mov
push
xchg
adc
xchg
repz
sti
sub
dec
std
fldt
loopne
xchg
enter
popf
sbb
js
in
out
pop
inc
xchg
or
cmp
jge
psrld
scas
or
lods
cmp
push
neg
push
mov
addb
mov
push
iret
loope
cld
lods
sub
sub
inc
dec
mov
jnp
idiv
nop
inc
pop
ret
lcall
push
bound
out
pushf
jno
add
add
out
insb
push
aas
inc
dec
into
rolb
push
jne
lods
cmp
mov
dec
inc
sbb
jmp
ret
mov
stos
cli
cli
add
and
daa
stos
or
mov
rclb
popf
test
loope
sbb
cmp
mov
pop
add
pop
aas
dec
or
ret
push
imul
shrl
pushf
jg
ud1
lods
cmp
sbb
ret
dec
sbb
imul
or
xchg
pop
cltd
cmp
mov
cmp
adc
adc
shll
mov
jnp
loope
mov
lods
cmp
pop
inc
xchg
insl
fcompl
cmp
test
in
push
loope
icebp
je
jg
lahf
in
mov
mov
mov
lret
shll
xor
jo
sti
insl
inc
ret
cwtl
pop
scas
std
test
adc
and
adc
sti
sub
mov
and
pop
lcall
mov
add
pusha
lahf
nop
insb
jle
mov
mov
inc
or
cmp
push
test
mov
pop
jbe
jp
shr
adc
mov
cmp
aaa
roll
xchg
mov
jno
mov
popf
aaa
push
dec
add
ffree
insb
xchg
cmpsb
jns
or
test
mov
jns
shlb
mov
mov
aas
add
outsl
imul
imulb
pop
push
data16
mov
xchg
ret
imul
mov
imull
hlt
lods
add
sti
xor
in
pop
imulb
push
mov
fwait
div
aam
mov
xchg
loop
mov
mov
mov
inc
sub
inc
daa
add
jge
jbe,pn
aas
inc
inc
scas
fs
loop
lods
aas
inc
pop
cs
jo
sbb
test
mov
push
xchg
incb
push
dec
sub
fidivs
jne
pop
arpl
call
fwait
movsl
fildl
sub
inc
sbb
outsb
inc
adc
cmp
mov
jno
xchg
jo
jecxz
sbb
xor
out
int
add
in
xchg
in
loop
scas
ret
ficomps
add
mov
mov
in
mov
mov
push
jae
cmp
adc
popf
roll
xlat
enter
stos
mov
mov
push
ficomps
insl
jbe
ljmp
das
mov
lock
sbb
inc
daa
mov
sbbl
push
push
stc
lea
xor
mov
pop
pop
loopne
fsubrl
cmp
fs
add
loope
pop
cmpsl
cs
mov
cmpsl
jae
in
xor
movsl
into
sbb
repnz
mov
sahf
cmpb
mov
jne
loope
cli
jno
mov
fldt
fsubl
hlt
mov
sub
iret
sub
lret
fwait
pop
nop
dec
pushf
pop
lods
movsb
lods
cmp
scas
lods
push
xchg
dec
xchg
cmpsb
sub
in
dec
push
sti
sarb
add
out
inc
pushf
adc
xchg
jmp
mov
inc
pop
cmp
aaa
aad
subl
rcrb
jge
pop
xor
mov
dec
out
fwait
jl
mov
scas
es
rolb
jb
adc
mov
dec
xchg
daa
notb
fisubl
lds
mov
popf
push
push
test
push
subl
push
jg
sbb
in
pop
sbbl
add
mov
scas
ds
lods
jns
enter
jb
jns
mov
pop
mov
decb
gs
cmp
add
enter
movsl
adc
jle
push
das
inc
stos
mov
out
leave
int
mov
adc
jp
mov
push
fisttpl
cwtl
cmp
adc
pop
inc
push
es
ret
cmp
push
in
push
insl
pop
and
loopne
inc
sahf
popf
cmp
pmuludq
loopne
std
aaa
sub
add
cmp
xor
cmpsl
add
mov
jg
sbb
fucomi
cmp
mov
shrl
cwtl
push
push
nop
loope
out
in
pop
sarb
std
cs
imul
jmp
or
aas
add
jb
adc
adcb
and
shlb
popa
mov
mov
dec
jb
sub
jno
popf
sub
outsl
addr16
aaa
sub
ja
cmp
mov
inc
mov
sub
inc
es
mov
fsubrs
aad
and
sti
jnp
cwtl
sbb
fxch
shlb
xor
ret
cmc
cmp
mov
or
jp
scas
jecxz
divl
adc
push
and
xchg
xor
fdivrs
scas
adc
add
pop
xor
ss
and
lods
dec
fidivs
aam
mov
push
mov
ljmp
ret
push
loop
xor
dec
xor
pop
inc
and
jge
cmp
jne
int3
clc
dec
cmp
mov
sbb
mov
fiaddl
inc
inc
cmc
lea
mov
iret
idiv
jbe
cld
cli
pop
scas
sbb
push
lods
push
xchg
movsl
sub
imul
daa
mov
std
stos
data16
notb
outsb
ret
rorb
outsb
aam
mov
add
xchg
pop
or
push
nop
addr16
jo
and
jecxz
sub
or
fs
jge
fdivl
test
jle
cmpl
xchg
out
cmpsb
cmpsl
sub
add
stc
mov
outsl
outsb
xor
imul
scas
outsl
adc
push
or
mov
sub
insl
in
leave
jae
adc
xorb
pcmpgtd
bound
movl
cmpsl
sbb
jne
jge
movsl
mov
into
add
insl
lock
or
std
sahf
and
sbbl
notb
pop
xlat
jecxz
frstor
rcr
lock
test
pop
rcrl
add
das
and
sub
mov
fs
into
sbb
mov
fiadds
mov
push
mov
sarl
cmp
cmp
test
xor
mov
push
push
or
aaa
cmp
dec
xor
lods
mov
or
lea
pushf
pop
sub
cmpsb
push
push
sar
aaa
fxam
and
pop
scas
repnz
scas
mov
aam
lret
mov
adcb
rolb
mov
or
push
hlt
sub
je,pn
repz
and
jmp
xor
in
dec
or
lods
mov
jmp
mov
push
add
mov
in
xchg
mov
loop
jo
iret
in
push
mov
mov
aaa
mov
adc
shrb
inc
ljmp
pop
and
xchg
lods
push
add
jno
sub
fcomps
jecxz
mov
add
dec
sahf
cli
cltd
sbb
mov
leave
fwait
cmp
movsb
lahf
sbb
in
inc
or
jle
pushf
repz
hlt
sbb
dec
xchg
xor
neg
ja
jecxz
xchg
pop
aas
aam
fwait
xor
sbb
subb
iret
mov
mov
sti
and
rcl
inc
cmp
rol
loope
shlb
sbb
cwtl
lock
cli
into
sti
test
lock
mov
xorb
clc
and
push
je
add
or
clc
fistps
pop
jl
ficompl
mov
or
mov
repnz
lods
out
push
or
lahf
add
lock
addr16
jne
mov
jmp
dec
cmp
icebp
push
or
or
clc
push
xchg
psubd
xchg
inc
dec
js
lret
das
mov
sub
scas
or
lcall
das
enter
mov
sub
push
popa
fwait
pop
rorl
mov
addb
lret
gs
xchg
dec
rcl
sub
cmp
mov
imul
loope
js
push
or
dec
add
loopne
cmp
out
add
aam
and
mov
pop
dec
adc
xchg
sub
fistl
cwtl
mov
jmp
pop
outsl
aas
add
mov
mov
jmp
incl
aas
sub
add
imul
into
sub
jnp
aam
jo
mov
cmp
test
test
dec
loopne
pop
subb
enter
dec
bnd
push
dec
dec
jbe
int3
hlt
dec
push
fcoml
sbb
aam
out
mov
pop
pusha
pop
pop
mov
cwtl
xchg
mov
lods
sub
mov
jl
fs
jge
mov
push
cltd
mov
dec
ficoms
pop
ds
lock
stos
xlat
mov
lret
enter
ss
push
movsl
pop
add
dec
dec
out
inc
hlt
or
inc
jne
dec
jne
inc
xchg
adc
push
and
inc
in
fs
ds
je
icebp
xchg
jg
les
dec
lea
movsb
jecxz
jge
push
andl
jae
push
movsl
ljmp
adc
mov
xor
pusha
inc
scas
add
push
aam
cltd
mov
test
imul
jp
pop
scas
loope
mov
add
popf
mov
jge
push
loop
jge
sahf
mov
sub
sarl
lret
rcll
or
pop
outsb
cmpsb
out
sbb
xchg
cmc
cmp
mov
adcl
and
mov
mov
bound
xor
inc
int3
out
adc
sbb
jge
add
push
mov
test
popl
jge
fbld
lods
or
inc
mov
imul
bound
out
addr16
lds
mov
sbb
jo
inc
sti
dec
cmc
mov
fisubrs
mov
aam
pop
mov
pushf
xor
test
inc
xor
ss
xor
push
cmc
mov
cld
pop
nop
xor
fistpl
test
adc
mov
movl
lea
push
push
lcall
xchg
jmp
jbe
fistpl
jge
push
pop
enter
xor
xor
clc
ror
jmp
xchg
push
lock
pop
test
jge
ror
inc
push
mov
ljmp
clc
pop
lret
enter
jno
or
mov
pop
test
jno
fucomip
or
test
add
mov
xchg
jae
add
or
and
sub
sub
repnz
testb
popf
pop
in
test
pop
rcll
rcrl
push
pop
lret
les
sbb
inc
dec
icebp
sbb
testb
fcompl
das
lret
mov
shlb
or
lret
inc
or
mov
jl
outsl
in
add
stos
xorb
loope
dec
push
jge
in
pop
arpl
lret
lcall
mov
cltd
mov
shl
jne
sti
cmp
sbb
xor
pushw
icebp
clc
inc
ret
inc
in
sbb
lods
movsl
add
adc
and
insl
stos
pushf
or
mov
mov
incl
mov
jns
rcll
dec
gs
fs
ljmp
fimull
jmp
shl
in
stos
xor
gs
rol
xor
inc
cmp
in
xorl
push
movb
jns
adc
fcoms
aaa
add
arpl
ss
lcall
scas
fstpl
out
pop
pusha
xchg
in
push
pop
lret
sub
lcall
fs
mov
xchg
pop
sub
dec
inc
sbb
mov
aaa
mov
aam
sub
add
je
stos
das
push
add
fldt
sub
xchg
xor
sahf
lock
movsb
pop
fstpt
lret
mov
or
shrl
rcl
cwtl
jbe
fwait
sbb
sbb
lret
insl
pop
pop
mov
xchg
aaa
xchg
icebp
sub
adc
inc
fimull
packsswb
fsubr
add
roll
dec
push
sbb
jl
lret
stos
mov
je
fwait
lds
andb
mov
stos
sbb
push
stos
ljmp
outsb
xchg
mov
mov
icebp
cmp
mov
and
cmc
cmc
or
add
lcall
or
leave
lods
das
inc
les
adc
xchg
inc
out
inc
jl
inc
ret
jo
and
fwait
stos
in
jnp
cmpsb
xchg
push
mov
out
mov
movsl
cmp
cmc
orl
sbb
inc
js
outsl
mov
jbe
sbbb
movsl
mov
xchg
sbb
lcall
lahf
roll
pop
push
sbb
mov
xchg
hlt
in
xor
push
mov
adc
jo
or
xchg
scas
inc
loopne
ds
and
pop
lret
add
int
adc
xor
mov
in
sub
int
das
jp
adc
out
cmp
ljmp
lods
cmp
and
jmp
clc
mov
ja
sarb
jns
ss
sub
inc
mov
in
fists
and
decl
jl
inc
jno
hlt
mov
jb
sbb
mov
std
jbe
sbb
and
jge
mov
leave
in
cmc
rcll
mov
dec
push
adc
adcb
cmp
jge
or
sarb
int
and
and
sub
sbbl
and
flds
loope
pushf
js
sub
or
mov
xlat
sub
or
push
sbb
mov
enter
enter
leave
sbb
push
mov
and
mov
lods
and
push
jns
mov
test
test
dec
inc
mov
outsb
cmp
jne
mov
rol
push
jo
xchg
xor
cld
mov
cltd
mov
dec
leave
jo
repz
pop
lahf
or
jns
dec
jmp
out
dec
mov
hlt
in
dec
test
and
adc
hlt
and
subb
stc
ss
mov
lret
push
call
sub
mov
insl
nop
aad
in
pop
sbb
setnp
and
das
movsb
popf
nop
loope
inc
sub
or
mov
dec
xchg
mov
jge
in
stos
jg
mov
lock
insb
fimuls
jmp
std
mov
xchg
dec
shlb
push
fistps
outsl
inc
ret
mov
or
mov
cmpsl
mov
mov
mov
scas
dec
bound
out
nop
cmpsb
into
xor
cmp
add
mov
inc
lahf
or
pop
mov
lods
call
imul
and
add
mov
clc
std
test
xor
jo
add
cmp
mov
out
out
je
inc
outsb
xchg
xor
push
repz
popf
into
imul
mov
rcll
xor
hlt
sbb
inc
or
push
leave
jo
mov
xor
xchg
pop
inc
xor
sti
jbe
ljmp
fstps
mov
fstl
repnz
xchg
xor
add
in
cmpb
imul
das
jns
mov
mov
out
std
mov
push
shl
aam
cmc
std
push
stos
cwtl
nop
push
iret
sub
imul
lret
nop
mov
and
cmpsl
xchg
inc
push
and
xor
fsubrs
sub
cmp
jge
or
stos
inc
mov
nop
jle
mov
mov
mov
mov
sbb
mov
mov
and
insl
lock
ds
xchg
push
and
fistpll
ds
cli
insl
test
xor
jge
jnp
mov
incl
sbb
cmc
and
nop
jg
sub
add
shll
fwait
jnp
jno
loop
dec
jno
pop
or
jbe
std
stos
repz
jno
mov
mov
repnz
cli
pop
cmp
mov
jb
jge
add
adcl
das
test
iret
push
addr16
ss
push
xchg
movl
mov
clc
mov
push
mov
xchg
sbb
and
pop
adc
lret
test
ret
mov
mov
call
sub
aad
sub
popa
add
xchg
push
add
cmp
mov
in
out
sbb
dec
mov
in
outsl
sbb
loopne
imul
test
mov
mov
in
movsl
jne
loopne
xlat
sub
stos
push
fcompl
or
in
idivl
jle
mov
outsl
or
pop
sbb
sarb
addr16
and
xchg
sbb
nop
subl
push
dec
jecxz
mov
adc
inc
fildl
cli
pop
mov
prefetch
mov
out
dec
jnp
addr16
jp
insb
and
adc
pusha
imul
push
sbb
mov
fimuls
sbb
jle
std
stos
fidivl
mov
pop
nop
cmpsb
jne
dec
sub
jg
sbb
jno,pt
lock
fwait
outsb
loop
lret
push
sar
enter
in
dec
lds
sub
cld
adc
pop
insb
add
outsl
sahf
mov
jl
icebp
push
and
pushf
sahf
pop
cmp
int3
pushf
cmp
xchg
fidivrs
sub
ss
in
jns
stos
cwtl
and
jno
sbb
jmp
lahf
inc
dec
fcomp
inc
lret
dec
add
xchg
pop
or
in
je
mov
out
fcmovnbe
add
notl
jbe
scas
fnstsw
xor
ss
es
and
jb
movsl
jp
movb
loopne
pusha
mov
out
adc
int
jne
mov
loopne
jb
je
mov
cmc
fimull
adc
jnp
mov
mov
cmp
dec
cvtdq2ps
sbb
and
movsb
dec
adcl
call
es
cs
ret
outsl
adc
dec
dec
add
inc
inc
ret
loope
add
loope
insl
fucomp
jmp
mov
icebp
mov
hlt
dec
ljmp
push
lahf
jmp
jo
fdivrs
push
aam
dec
jb
lcall
push
jmp
adc
adc
sub
repz
enter
addr16
ja
add
outsl
loope
mov
inc
or
test
mov
std
inc
aas
stos
mov
loopne
test
repz
lret
pop
mov
lret
jl
cmc
jno
mov
fstps
out
stos
or
xchg
or
xchg
test
stc
add
lds
adc
aaa
call
mov
popa
pusha
add
leave
cmp
inc
sarl
mov
jg
aam
enter
rcrb
lcall
mov
sub
imul
stos
sub
iret
sub
or
out
pop
push
addr16
mov
test
add
jne
imul
and
xchg
inc
addr16
cmp
testb
dec
mov
inc
aad
imul
test
adc
xchg
xchg
cltd
call
fdivrl
xchg
xor
fwait
xchg
rclb
mov
test
or
popf
fiaddl
mov
addr16
orb
mov
dec
pushf
push
cmp
hlt
addr16
xchg
lods
push
pop
int3
push
cwtl
pop
into
xchg
cld
xchg
xchg
daa
adc
sub
cmpsb
fs
xor
jo
ror
aad
dec
cmpsb
repnz
push
mov
mov
sarl
xor
jb
fucomp
dec
and
aaa
adc
test
cltd
jmp
scas
jno
cmp
movsb
sti
xchg
mov
push
cmpl
rcrl
or
push
inc
push
push
push
or
mov
stos
incl
jle
or
out
or
fldl
mov
sysexit
insl
aad
cmp
std
add
mov
push
jno
out
je
cltd
adc
lret
iret
scas
or
ret
dec
mov
sbb
sub
rolb
cmp
sbb
sbb
push
mov
mov
insb
loopne
in
arpl
and
iret
es
push
test
out
rcrl
or
lret
jg
mov
repnz
push
fldenv
mov
addr16
jge
jo
sub
or
shl
push
push
cwtl
and
xchg
xchg
add
outsb
add
ret
push
xor
dec
mov
ja
adc
sbb
fstl
mov
in
xor
ljmp
je
ret
and
out
hlt
sbb
xchg
cmp
xor
in
jbe
xor
sub
shr
or
and
sub
testb
add
sub
pop
mov
mov
fmulp
add
imul
lahf
imul
data16
sti
scas
mov
jmp
mov
mov
bnd
inc
xchg
dec
outsl
sbb
cs
xchg
xor
rcrb
call
js
outsb
cs
sahf
sbb
call
xor
test
xchg
popa
sbb
jl
push
pop
sbb
jns
and
push
push
incb
stos
push
stos
fwait
xchg
cmp
inc
loope
int3
pusha
jecxz
mov
xor
fadds
mov
xor
test
xor
int
pop
bound
cmp
push
inc
dec
add
rorb
sbb
sub
es
stos
js
les
ret
add
adc
aas
pop
cmp
adc
or
mov
xchg
imul
loopne
pop
popa
xor
lret
inc
dec
out
subb
jecxz
fisubrl
or
cmpl
sub
into
subl
dec
dec
xchg
sti
shl
xchg
cwtl
out
xchg
scas
adcl
addr16
sti
dec
pushf
mov
cltd
jb
push
xchg
in
loope
pop
call
clc
rol
pop
mov
and
mov
std
mov
and
dec
pop
inc
lods
outsb
into
scas
cmc
popf
scas
orb
and
cmpsl
pop
ja
dec
adc
out
adcb
insb
jg
jnp
jp
inc
mov
add
lea
je
addl
mov
push
add
fwait
movsl
lret
and
cmpsb
mov
aas
inc
mov
add
std
pop
bound
jle
mov
data16
xchg
xor
mov
iret
in
ljmp
push
rorb
nop
pop
jno
ss
inc
ficoms
cltd
cmpsl
rcrl
ja
outsl
ret
cmp
inc
lcall
fwait
leave
adc
in
fists
mov
cmp
inc
mov
sbbl
sbb
xchg
cli
testb
jmp
jnp
data16
sub
and
push
mov
daa
cs
int
cli
pop
es
setbe
mov
psrlw
pop
repz
xor
pusha
inc
xor
jbe
cmp
bound
and
inc
in
or
lret
lock
in
shl
stc
add
mov
lea
sbbl
cltd
and
mov
mov
popf
mov
cmovp
ljmp
movsb
mov
test
cld
ljmp
ret
ret
ja
aad
xchg
sub
ljmp
fwait
adc
and
dec
sbb
in
cmc
xor
fidivrs
aad
dec
movsb
mov
mov
sub
testl
mov
inc
mov
lea
call
lcall
xor
test
add
enter
out
test
or
adc
fisubrl
fldl
add
jne
add
fsubrl
ljmp
ss
cmp
pusha
les
xor
outsb
pop
sbb
fwait
add
dec
mov
adc
sbb
sti
and
ljmp
adc
jns
lcall
int3
ror
mov
enter
movsl
jb
inc
push
push
adc
pusha
and
adc
sarb
jbe
mov
in
iret
mov
jmp
cmpsb
rorb
xor
lods
test
test
dec
adc
sub
ds
ds
jmp
add
in
or
sub
adcl
rorl
sbb
mov
aad
cwtl
fmull
lods
adc
jbe
push
sub
push
jle
pop
scas
fninit
int3
andl
sbb
pop
jbe
inc
jg
rorl
mov
lods
fcmovnbe
leave
adc
pop
xor
lds
and
stc
scas
in
push
arpl
mov
jo
jle
ret
aas
jns
push
and
jmp
cmc
shlb
inc
or
xor
das
insl
movsb
dec
or
pop
mov
xchg
arpl
sarl
hlt
mov
add
sub
mov
sub
lret
cmpsl
jmp
mov
nop
andl
inc
jge
fs
add
clc
mov
adc
push
movl
and
outsl
jns
enter
outsl
bnd
pushf
sub
xchg
in
or
jb
pop
cli
mov
pop
and
mov
das
mov
mov
lock
mov
pop
add
jne
dec
stc
dec
pop
test
pushf
cmpsb
test
cmc
out
sbb
dec
pop
or
in
dec
xor
je
or
lea
cmpsl
adc
inc
shrb
fnstsw
and
pushl
mov
xchg
ljmp
sub
mov
add
lcall
xor
rcll
outsl
sub
mov
jnp
sub
xor
and
lds
sti
les
hlt
outsl
ds
notb
pop
roll
cmp
or
pop
adc
add
pop
cmp
pop
pop
stos
and
dec
sti
or
xchg
lret
lods
mov
xchg
aas
push
mov
and
fwait
lret
push
out
cmp
push
int3
jge
mov
add
add
cmp
aad
fistps
fcmovne
aad
jbe
inc
ja
cmp
push
mov
rolb
scas
inc
lods
stc
shlb
inc
insl
adc
cmp
sbb
adcl
mov
sub
dec
mov
int3
mov
addr16
loopne
hlt
fcmove
cwtl
mov
mov
js
fs
cmpsl
mov
outsl
pop
mov
jmp
push
stc
dec
push
es
lcall
lcall
cmpsb
pop
ds
and
sbb
sbb
loope
sbb
cmc
mov
mov
dec
iret
sub
aam
push
loopne
rorl
xchg
jne
movsl
push
add
mov
imul
push
ss
out
daa
mov
lahf
cmpl
sbb
inc
xchg
xchg
sbb
jae
inc
mov
mov
adc
pop
xchg
aad
jp
aam
sub
jecxz
ret
mov
js
test
dec
xchg
add
or
popf
adc
icebp
push
loop
leave
cmp
pop
je
mov
test
add
es
leave
mov
push
clc
push
rclb
sub
daa
sbb
lea
jo
jno
popf
dec
pop
ret
cmp
sub
aaa
cmp
sahf
aas
pop
mov
dec
arpl
loope
mov
outsb
fcmovu
xchg
subl
jo
sbb
and
pop
pop
mov
jo
sti
ja
adc
cmp
jle
lock
iret
aam
mov
sbb
sti
dec
add
popa
cmpsb
push
dec
mov
adc
scas
add
push
xor
cmp
or
mov
stc
outsl
pop
out
insb
insb
sbb
xchg
sub
in
sub
aam
inc
mov
mov
inc
add
sbb
or
push
mov
aad
stos
dec
inc
lea
lods
and
aaa
into
lea
cmp
hlt
or
push
xor
jbe
lret
pop
imul
adc
rclb
xchg
push
popa
scas
mov
lods
das
in
sub
mov
mov
and
inc
lcall
mov
cwtl
insb
fs
aas
gs
pop
sbb
sub
std
jno
rcrb
stos
in
aas
incl
sbb
sub
pop
or
or
push
jmp
and
mov
or
add
push
or
gs
lahf
bound
push
fistpll
ja
lods
xor
push
rcll
xor
mov
and
aaa
icebp
outsl
outsl
insb
fldlg2
loopne
pop
jb
pop
testl
sub
and
push
daa
sbb
mov
adc
pop
add
push
inc
adc
fcomps
adc
xchg
cli
call
mov
nop
icebp
cmp
adc
pop
lret
mov
push
dec
xchg
and
pop
clc
daa
cmp
cmp
push
in
add
inc
adc
sti
loopne
xor
mov
mull
push
out
icebp
sub
leave
pop
cmc
adc
mov
push
jl
sub
sbb
or
fisubrl
fisubrl
mov
xchg
jae
jo
filds
pop
dec
frstor
dec
call
insb
dec
pushf
fimuls
fsubrl
push
xor
add
push
ficoml
xor
add
pop
cmpsl
mov
sub
inc
data16
inc
mov
int3
jae
mov
adc
jl
pop
loop
jmp
mov
sub
mov
icebp
mov
je
rcpps
xlat
push
adc
arpl
pop
cld
sub
test
adc
adc
mul
and
pop
add
sti
push
scas
insb
jp
call
sti
mov
mov
or
ja
in
adc
jmp
shll
cmp
inc
fs
xchg
scas
push
inc
dec
cld
fcmovne
cmc
mov
dec
in
push
jno
aaa
aaa
push
bound
jecxz
adc
jmp
cmp
call
push
test
daa
hlt
jns
outsb
mov
cvtpi2ps
pop
xor
in
pushl
fs
sub
pop
test
add
aam
jns
or
push
and
fcmovnu
adc
mov
je
push
push
xchg
stos
in
mov
icebp
add
test
out
lret
imul
call
aad
mov
mov
mov
adc
mov
stc
cmp
inc
fadd
push
jge
imul
jae
xor
dec
mov
hlt
icebp
sahf
mov
in
sub
add
mov
push
cmp
push
gs
outsl
shrl
loope
bound
lock
cmp
push
dec
cmpsl
inc
cwtl
insl
mov
jg
or
or
mov
insl
in
inc
sbb
and
lret
cmp
es
shll
mov
push
xor
inc
xchg
in
and
loopne
xchg
nop
in
std
dec
or
mov
or
inc
mov
xorb
into
data16
cmp
jle
mov
icebp
mov
enter
aaa
mov
ss
xor
movsl
sbb
xlat
rcrl
pusha
fmull
inc
push
xor
mov
arpl
inc
fstps
mov
cmpsb
mov
pop
cmpsb
in
sbb
cwtl
mov
mov
mov
aam
mov
jmp
out
jne
ljmp
xor
cmp
or
mov
dec
jnp
idivb
enter
out
repnz
pop
lret
orl
out
cli
jl
ret
cwtl
dec
push
aaa
mov
inc
or
shlb
push
es
sub
add
retw
cmp
inc
das
out
mov
push
xchg
xor
cli
pop
pop
mov
jg
lods
aas
mov
paddusw
addl
add
xor
enter
inc
aam
imul
xchg
aam
mov
and
xchg
mov
dec
hlt
stos
daa
fs
scas
add
dec
orl
and
add
call
addl
ja
cmc
add
aad
cld
das
ret
push
mov
inc
movsl
cmp
dec
imul
cld
enter
pushf
jle
loopne
cmp
out
jns
inc
and
bound
push
imul
fidivrs
cmpsl
add
and
sbb
mov
outsb
fcoms
jg
cmpl
repnz
iret
xchg
cld
repnz
mov
sbb
and
mov
filds
mov
addl
in
lds
dec
add
add
and
dec
mov
push
sbb
movswl
out
or
pop
and
dec
pop
roll
cmp
out
push
mov
push
mov
ds
nop
aas
punpcklwd
xor
bound
add
sub
mov
pushf
aaa
pop
jno
mov
cmp
lods
popw
mov
xchg
push
stos
inc
mov
icebp
cmp
orl
mov
sbb
sti
xor
pop
das
in
sbb
sub
fsubrp
shll
jne
lock
xchg
cmp
aaa
cmp
in
adc
adc
pop
push
test
stc
dec
fwait
mov
xor
into
push
mov
int
sbb
in
lret
adc
or
xor
pushf
jne
sub
hlt
dec
push
mov
and
popa
or
push
jle
jl
scas
push
or
mov
mov
int3
loopne
push
inc
int3
mov
pushf
daa
rcrl
popa
mov
nop
mov
sbb
pop
jecxz
nop
out
mov
es
scas
inc
ret
clc
pop
pop
je
stc
leave
mov
sub
jb
pushf
lahf
sub
pop
sbb
or
imul
movsl
cmp
js
imul
add
xchg
je
xorb
call
enter
xor
mov
pusha
out
pop
in
out
aaa
int3
sti
adc
sub
push
movsl
xchg
pop
or
lods
mov
adc
push
fsubrs
popf
sarb
xchg
stos
arpl
xor
clc
jecxz
and
xor
jnp
movsl
sbb
pop
xor
mov
dec
jge
add
pushf
cmp
orb
cmc
pop
mov
pop
sub
fmuls
int
inc
leave
cltd
jmp
mov
outsb
fsubrl
xchg
in
jp
adc
mov
jecxz
sub
or
in
loope
jnp
adc
mov
mov
xor
dec
sub
push
add
cs
shlb
popf
lret
or
pusha
xor
cmp
dec
popf
mov
scas
ficomps
push
mov
testl
aas
push
addl
push
mov
ret
sbb
xchg
xchg
and
add
push
in
insl
mov
jb
mov
test
xor
inc
scas
sub
adc
inc
sti
mov
imul
mov
or
pop
sahf
mov
mov
enter
push
movsl
mov
ret
fidivrl
sbb
shll
sub
mov
jo
cmp
cmp
pop
loope
popf
sub
jl
sbb
sub
pop
into
adc
dec
movsb
mov
xchg
clc
popa
push
repz
pushl
add
testl
pop
xchg
repz
daa
mov
dec
inc
je
cmp
fldl
push
sbb
lock
fistl
stos
cmp
inc
insb
inc
pop
xchg
popf
sub
pop
inc
mov
xchg
mov
adc
psllq
sbb
enter
in
pop
lea
lock
jge
adc
popf
adc
pushf
fildll
fsubl
incl
inc
xchg
into
pop
rcrb
xchg
cmp
mov
dec
jp
lahf
mov
xor
push
repnz
ljmp
dec
icebp
sub
cmp
pushw
jge
lcall
pop
pusha
inc
mov
out
mov
or
jae
add
imul
dec
xchg
add
pop
xor
pop
jo
fbld
loop
mov
dec
xor
enter
mov
jg
or
push
stos
movsb
sti
daa
xlat
test
pop
ss
popw
inc
fldenv
mov
inc
movsb
or
xor
pop
ds
lret
cmp
push
scas
testb
sbb
adc
adc
aam
insb
mov
add
jno
ret
pushf
cmc
pop
cmp
push
sahf
jmp
adc
sub
lock
inc
sbb
popf
data16
movhps
rcrl
sahf
call
xlat
arpl
js
xchg
imul
lret
xor
cmpsb
pop
pop
ret
rcll
jbe
pop
mov
xchg
popf
mov
xor
fcmovu
aam
mov
mov
scas
push
cmpb
loop
lds
mov
mov
insl
rcrb
jle
inc
xchg
mov
scas
fcom
jecxz
adc
sarl
mov
adc
ljmp
sbb
jmp
add
sbb
and
pop
mov
cmp
jne
push
ss
dec
jl
mov
add
push
mov
pop
das
mov
gs
jp
pusha
xor
mov
jae
xor
mov
imul
pop
enter
es
test
cmpsl
dec
ljmp
add
es
xchg
or
lahf
test
test
bound
in
into
sarb
inc
fistpl
int
bound
add
jecxz
jp
pop
jns
ret
jne
je
mov
push
ds
lods
gs
ret
pop
ret
aaa
mov
mov
jae
push
shrl
cmp
js
or
cwtl
aas
in
adc
mov
leave
sbbb
iret
sti
scas
mov
in
inc
enter
pop
sub
fildl
push
loope
jp
xor
adcb
mov
rcr
enter
cmpsl
cmc
in
or
inc
cmp
daa
ja
aam
repz
mov
movsb
inc
lods
cmp
lahf
mov
mov
in
xchg
and
fildl
jbe
mov
hlt
sbb
shlb
insl
movsl
stc
xchg
fcomps
popf
xor
mov
adc
xor
dec
lret
xchg
cwtl
loope
lahf
cld
and
cli
lcall
pop
pop
push
or
push
aaa
pop
aas
xchg
das
std
repnz
mov
and
arpl
mov
jmp
jle
xchg
movsl
fidivl
daa
pop
dec
fwait
sub
pop
cmpl
sbbl
sub
test
mov
mov
repz
inc
ds
push
movsb
jg
jne
hlt
mov
lcall
pop
fimull
mov
dec
and
cmpsb
addr16
push
dec
lods
dec
idiv
fimuls
or
shlb
ret
insl
xor
mov
out
fwait
sbb
or
xchg
fs
gs
pusha
repnz
add
int
cmp
sub
adc
sub
scas
gs
addr16
movsb
sub
add
sub
rclb
or
mov
nop
test
xorl
mov
outsb
and
js
repz
pop
sahf
dec
cli
fstps
add
ja
iret
aas
cltd
dec
push
pop
mov
pop
outsb
data16
repz
in
inc
jmp
adc
and
jne
mov
push
add
test
cli
pop
pop
dec
push
push
adc
add
mov
dec
dec
clc
mov
inc
jmp
adc
fcompl
push
mov
das
mov
in
and
mov
aad
add
push
stc
xor
in
js
shr
pop
sub
jg
out
mov
iret
imul
cltd
roll
cmp
fwait
adc
jg
repz
push
scas
das
adcl
sbb
xchg
dec
test
or
daa
push
mov
in
mov
dec
fs
cmp
cmpsl
mov
xchg
jbe
cli
xchg
ret
push
jle
and
xor
dec
rcl
mov
xlat
adc
adc
lahf
jmp
ret
loopne
cmp
insb
push
cmp
mov
js
hlt
inc
test
dec
cmpsb
and
jmp
shrb
inc
and
loope
cmp
and
out
add
mov
cltd
ds
push
in
and
mov
fstp
mov
imul
ljmp
xor
mov
and
call
or
out
cmc
sbb
or
test
cwtl
cli
or
mov
and
jecxz
jbe
adcl
add
dec
mov
jmp
fmuls
sub
jge
jg
ja
lock
dec
insl
and
pop
stos
aaa
lea
sub
ret
fisttpll
inc
divl
xchg
js
jp
jnp
scas
add
push
outsb
scas
mov
push
jg
ret
ror
pop
mov
sub
mov
aam
add
fnstcw
hlt
addr16
dec
dec
rol
xchg
insl
imul
inc
jge
loop
fnsaves
lcall
jl
inc
cmpsl
rorb
pop
mov
lcall
jp
jns
adc
mov
ss
arpl
movsb
insl
ss
sbb
jb
movsb
sub
in
nop
add
or
cmpb
sbb
pushaw
shrb
insl
stos
stc
repnz
out
stos
add
jle
data16
xchg
and
jno
shrl
dec
lods
adc
mov
sbb
push
aaa
or
fimull
aam
or
cmp
out
pop
push
jae
lods
loop
ja
enter
mov
jle
cmp
rorl
ret
mov
nop
dec
xchg
shll
addb
inc
les
cmpsb
jnp
dec
or
and
cmp
cmp
push
fsub
ds
adc
or
imul
in
lahf
push
add
dec
outsl
mov
or
inc
sub
xor
cs
pusha
or
dec
jb
xchg
xor
cs
jp
lods
xchg
pop
sarl
push
xchg
adc
cltd
xchg
ja
adc
jmp
xchg
mov
inc
push
hlt
adc
cmp
test
stos
enter
xlat
jmp
ficoml
adc
bound
push
dec
mov
call
pushf
sbb
lahf
pop
dec
push
inc
mov
cmpsb
push
movsl
cmp
gs
sub
mov
push
cmp
mov
out
fnstcw
mov
cltd
fisubs
mov
xor
sbb
xlat
decb
sti
lahf
sub
negl
repnz
scas
jb
adc
jge
cmp
push
xor
xor
xchg
lret
out
sbb
mov
inc
sbb
inc
es
jl
or
push
xor
mov
sbb
pop
sub
jge
sbb
negb
lahf
or
rorb
loope
into
and
addr16
cmp
push
hlt
inc
jge
inc
popf
ficomps
mov
jmp
push
push
mov
ljmp
sbb
sahf
addr16
ret
icebp
xchg
dec
or
push
jg
xchg
mov
sub
dec
sbb
pushf
xchg
das
jbe
stos
andl
add
jbe
int
mov
sar
std
lret
test
push
xlat
jne
test
dec
jmp
imul
aam
cmp
lds
in
idivb
int3
data16
jl
roll
mov
jns
mov
jo
xor
fbstp
cli
mov
roll
sti
mov
mov
mov
xor
or
cmp
sahf
iret
es
pop
mov
mov
addr16
cmpl
mov
testl
test
imull
cmp
or
adc
inc
cmp
mov
pop
sar
push
out
iret
xchg
rorl
in
nop
xchg
fldenv
sub
and
inc
les
inc
xor
cmp
xchg
lret
test
arpl
lock
popf
mov
ret
jns
insb
lcall
pop
jl
fwait
xchg
xor
rclb
add
jo
xor
in
mov
stos
push
subl
jg
leave
pop
rorb
dec
or
mov
mov
ss
hlt
leave
add
sub
andb
imul
sub
mov
shlb
rcrb
jmp
adc
and
xor
pop
fwait
sub
fisttpl
xchg
xchg
mov
pop
sbb
rclb
divb
add
int3
xor
cmpsl
scas
sbb
adc
pop
lret
inc
add
shl
push
xor
out
in
je
xchg
adc
pop
add
fs
mov
lds
mov
je
dec
push
jae
jbe
bound
in
in
cmpsl
test
add
and
aam
adc
inc
iret
push
das
inc
out
cmp
mov
les
add
pop
cmpl
or
popa
xor
faddp
mov
jp
inc
mov
test
sub
xor
mov
stc
idivl
repnz
sub
mov
push
push
add
test
pop
fisttps
sahf
add
adc
and
daa
cltd
pushf
fwait
insb
xchg
test
stos
xor
sarb
push
push
mov
fwait
mov
jne
in
and
std
push
hlt
inc
and
int
or
nop
mov
stc
jno
or
push
scas
cs
push
lock
cmp
clc
or
rorb
or
fbld
mov
int3
xlat
ds
push
shl
in
lret
mov
push
xlat
push
and
sub
ret
or
xor
xor
push
xor
int3
and
pop
fsts
or
jle
dec
cmp
mov
inc
out
add
pop
fwait
lret
lods
lods
jecxz
stos
and
cltd
div
sbb
enter
push
mov
sbb
outsl
lock
cmp
push
mov
or
in
add
pop
std
mov
mov
in
adc
mov
sub
cli
out
lock
popa
fidivl
fwait
scas
int3
and
and
dec
mov
jecxz
in
stc
int3
adc
push
mov
and
test
cmp
lahf
mov
cs
push
mov
push
add
loope
or
into
sub
jg
xchg
pushf
push
mov
mov
adc
dec
sub
sub
sbb
sbb
sub
dec
push
loopne
jnp
mov
popa
popa
in
jnp
adc
mov
sub
and
shlb
push
jo
and
sbb
es
aad
enter
mov
push
sub
lret
mov
mov
nop
mov
or
outsl
ret
xchg
and
dec
dec
stos
cmp
andb
inc
stos
scas
jp
jmp
leave
popf
sbb
paddsw
mov
jp
out
and
loope
shrl
pop
xor
fnstsw
push
and
jne
push
inc
subb
push
insl
adc
xor
ret
icebp
shl
push
in
into
or
clc
aas
subl
stos
mov
xor
sbb
sti
fdivrl
jl
add
rorb
pop
mov
jns
lret
dec
sub
adc
inc
fdivr
add
faddp
push
jns
lcall
test
adc
inc
mov
notl
dec
inc
clc
dec
cmc
icebp
xor
fisubrl
jnp
cli
xor
push
pop
jl
pop
repz
lret
add
enter
push
pushf
addr16
and
imul
mov
ja
fildll
sbb
add
mov
cmp
hlt
jne
jecxz
cmp
sbb
cs
pop
pop
mov
push
lret
idiv
push
adc
jmp
push
es
movsb
adc
adc
xor
jno
xchg
fcmovbe
inc
push
xor
add
out
mov
cld
push
cmp
jns
in
jae
rol
mov
cmp
mov
scas
aam
scas
test
mov
mov
test
mov
jbe
popf
dec
mov
xchg
push
sarl
repnz
icebp
and
mov
xor
mov
adc
pop
cmpsb
inc
ret
push
or
int
pop
imul
add
stc
fcoml
push
rcrl
dec
pushl
fidivrs
test
adc
push
add
push
inc
dec
es
scas
das
jg
ss
rcrb
cmc
movb
xchg
ja
or
sbb
mov
xchg
sahf
and
ljmp
jb
or
pop
dec
lahf
mov
push
shll
sbb
lds
sbb
inc
repnz
push
mov
xlat
add
cmp
cmp
sahf
mov
or
xor
push
xchg
cmpsb
test
shlb
scas
lcall
pop
cmp
test
aam
mov
push
js
shll
iret
cmp
cmpsb
lds
xlat
or
add
dec
xor
pop
fisttpl
sub
lahf
push
or
pop
mov
mov
push
cmp
mov
test
and
mov
pop
sbb
push
cmp
addb
test
lods
cltd
pop
mov
pop
pop
iret
mov
cli
jmp
inc
out
addr16
mov
pop
dec
je
and
movsb
adc
stc
adc
jns
popa
test
movsb
jns
cmp
or
push
sarl
in
leave
sahf
pop
cmp
pop
cmp
sbb
or
dec
lods
clc
xor
mov
inc
jnp
push
inc
int
pop
fbld
pop
ds
insb
and
pop
ret
stos
les
test
or
inc
sbb
push
inc
push
xor
sbb
cltd
xchg
call
ret
dec
sbb
jge
mov
mov
pop
pop
adc
cmp
jns
mov
sub
pop
je
sahf
or
mov
adc
rcrb
shl
in
sarl
in
sahf
mov
mov
repnz
adc
jg
mov
sarb
movsb
call
insb
out
cmp
adc
sahf
dec
inc
aam
fnstenv
push
leave
mov
ret
cld
cmp
and
aaa
push
dec
lret
cmc
and
push
mov
jge
pop
popf
push
mov
cltd
mov
pop
faddl
icebp
cmp
push
fisttps
xor
jle
xlat
cmpsb
dec
movsb
in
call
xor
fwait
mov
sub
es
not
or
cmp
push
inc
enter
sub
fistpll
push
jae
sahf
mov
in
cmp
jnp
loop
xchg
add
and
mov
mov
loope
std
dec
cmp
imul
xchg
xor
dec
sub
cli
sbb
sub
test
mov
mov
in
mov
inc
por
in
inc
mov
push
and
fdivs
ds
std
inc
out
test
sub
inc
push
fbstp
push
inc
lea
mov
adc
cmc
rolb
dec
loop
stos
movb
xor
xlat
lret
call
add
sbb
mov
add
fistps
inc
pop
mov
aad
mov
dec
es
xor
mov
jae
dec
jbe
aaa
dec
sbbl
xorl
aam
mov
aad
nop
mov
pop
ret
fbld
fmull
jge
out
das
lds
xchg
xchg
sub
cmp
fadd
fldenv
in
ljmp
rorl
fldenv
add
sbb
in
loope
or
stc
mov
cmp
es
dec
sub
es
not
arpl
mov
addr16
or
testl
and
hlt
sub
xchg
outsl
test
jl
and
sbb
pop
push
jnp
push
mov
scas
add
aas
push
out
test
push
xor
in
lds
mov
clc
out
out
add
push
dec
sub
movsl
inc
movsb
aad
out
xchg
fwait
cwtl
pop
lss
cli
lock
je
jl
out
sub
jnp
addr16
and
sbb
push
arpl
xchg
jmp
lods
inc
mov
push
mov
ror
lret
or
or
cmpsb
mov
jmp
sub
cmp
cmp
dec
mov
push
testl
adc
jmp
push
aas
and
mov
insb
movsl
add
cmp
cltd
mov
sbb
fdivrs
and
jl
ret
mov
cs
mov
call
mov
push
inc
repz
cmc
loope
orb
mov
mov
xor
push
paddsw
loope
ret
rcr
add
out
adcl
sarb
test
rorl
pop
fnstsw
ljmp
popf
push
push
fcoms
mov
mov
mov
shrd
stos
lret
sahf
sahf
out
mov
adc
and
xor
lahf
lahf
add
adc
icebp
jp
inc
inc
aad
or
xlat
jg
shl
cld
stos
lcall
and
dec
daa
pop
sbb
aaa
cmp
cmc
out
mov
ret
loope
clc
outsl
cwtl
jb
mov
add
mov
insl
mov
mov
cs
addl
movsb
pop
repnz
cmp
mov
ret
and
shlb
repz
cmp
dec
jl
mov
test
add
cs
shlb
imul
dec
sbb
pushf
std
cmp
pop
jg
ficoms
imul
pushf
cmp
int
hlt
imul
pop
xchg
cmp
sarl
or
int3
movsb
xchg
enter
xchg
xor
inc
jge
inc
les
or
fst
cmpps
dec
sbb
je
xchg
push
lahf
inc
out
push
out
daa
test
stos
out
or
mull
lcall
ret
call
insb
shrb
nopl
or
push
mov
das
xor
inc
pop
or
adc
and
push
faddl
sbb
sub
loopne
mov
jl
lods
repz
testb
pop
dec
mov
ret
jge
aaa
ds
js
fcompl
inc
mov
xchg
movsb
sub
iret
cld
jl
ljmp
xor
cmpsb
dec
dec
xor
test
mov
adc
into
std
pop
add
sub
inc
xor
cltd
in
ds
mov
jno
jnp
cmc
xlat
adc
addr16
lahf
xchg
dec
jo
pushf
mov
insb
out
and
mov
mov
dec
sub
mov
vsqrtss
dec
cmp
idivl
addb
popl
push
ficomps
cmpsb
adcb
push
dec
xbegin
pop
xlat
repnz
push
xchg
lcall
inc
jno
pop
scas
and
push
pushl
in
inc
enter
dec
stos
or
fadd
lods
imul
mov
addr16
add
mov
sub
add
cmp
test
in
xchg
xor
push
dec
icebp
cmp
push
or
fld
aad
loop
pop
or
push
pop
cwtl
js
push
mov
movsb
xchg
in
test
xlat
and
testl
into
push
jmp
push
add
loop
xorb
mov
lret
cmp
lcall
mov
mov
mov
pop
jmp
mov
repz
filds
leave
cli
add
mov
ljmp
xchg
pop
adc
pop
cld
sbb
xor
xor
xchg
pop
pusha
dec
mov
cmpsl
mov
rclb
insl
cmpsl
sub
fwait
pop
repnz
pop
mov
int3
imul
orl
push
or
mov
stos
adc
adc
ss
cmp
adc
jbe
fisttps
lcall
add
add
jg
shl
pop
test
repz
fsubl
dec
push
daa
rcr
push
icebp
imul
xchg
sar
sbb
outsl
pop
ja
sub
imul
fiaddl
dec
jmp
pop
mov
jp
adc
ds
and
inc
inc
xor
es
add
rcll
and
inc
mov
pop
int3
push
lcall
pop
js
mov
sbb
and
sahf
hlt
shll
jns
insl
jno
pop
push
or
mov
bound
lret
xlat
add
fldt
rorl
arpl
js
cli
inc
sub
ljmp
pop
pop
aaa
xor
push
mov
rcll
sbb
scas
sbb
adc
call
ljmp
jmp
outsb
add
push
mov
ficompl
loope
std
pop
ret
icebp
push
loop
imul
jl
out
and
fwait
adc
add
jae
fidivrs
jecxz
or
stc
lret
adc
xchg
sar
mov
push
jle
inc
inc
push
movsl
sbb
jle
or
xchg
outsb
ja
cmp
sub
hlt
jns
stos
jecxz
mov
adc
ja
adcl
inc
mov
xchg
shlb
pusha
mov
dec
jbe
aam
aaa
gs
mov
jns
inc
ficomps
dec
rcrl
xchg
cmp
out
mov
jae
and
xor
jecxz
mov
idiv
jp
hlt
inc
inc
shrb
daa
in
inc
add
cmpsb
xchg
clc
mov
cwtl
enter
into
mov
add
das
into
mov
adc
cmp
in
cmp
imul
xchg
inc
xchg
xor
push
movsb
cli
std
dec
mov
sbb
push
sbb
inc
sub
jl
leave
fwait
jnp
pusha
leave
movsb
push
mov
and
jp
orl
stc
cmp
mov
push
out
cwtl
sahf
mov
ja
popf
add
shll
mov
pop
add
std
mov
inc
shll
jge
add
mov
jae
fimuls
frstpm(287
and
jns
dec
icebp
mov
hlt
rorl
cmp
mov
das
fmuls
inc
push
pusha
lcall
cli
jno
mov
mov
std
xor
stc
inc
jnp
fs
loopne
inc
pop
out
jb
xchg
cli
cmp
lods
add
loopne
mov
sbb
xchg
mov
pop
push
or
jo
outsb
and
push
arpl
sti
jo
std
inc
lret
push
pop
add
repnz
mov
and
xor
inc
and
xor
adc
and
lea
hlt
xor
push
inc
test
insl
stc
push
stos
lahf
out
pop
mov
cmp
insb
insb
andb
jmp
push
sub
dec
cltd
xchg
push
jbe
icebp
mov
dec
jmp
dec
xlat
add
je
push
bound
js
pop
jne
repz
shl
mov
add
out
je
lods
dec
leave
loopne
sub
xchg
xchg
jnp
mov
jmp
gs
insl
add
jo
rolb
mov
add
andb
jl
icebp
or
fcoml
dec
cmpsl
cmp
cltd
sahf
fsts
pusha
cmp
nop
repnz
test
jae
imul
in
je
fstpt
lret
cmp
insl
jle
daa
insl
jp
or
int3
inc
repz
lcall
xchg
add
aam
dec
mov
jae
out
or
sarb
pop
inc
xchg
fimuls
sub
addr16
pop
mov
jnp
sub
jge
jne
xchg
and
rorb
insb
jp
shll
dec
test
jl
gs
mov
mov
inc
mov
jg
xchg
sbb
int
xor
std
pusha
jns
inc
cmp
cmpsl
push
xchg
add
xor
pop
divb
xor
data16
mov
imul
push
enter
jge
mov
les
and
push
repnz
hlt
rcl
or
dec
call
scas
jne
gs
iret
mov
ret
cld
imul
sub
xchg
sahf
jno
adc
std
sti
mov
add
mov
mov
ljmp
sub
dec
bound
vcvtps2dq
sbb
sbb
dec
jl
dec
jns
dec
fmull
or
mov
push
xchg
rorl
stos
pop
call
adc
push
dec
xchg
jecxz
adc
icebp
jl
mov
enter
adc
inc
jmp
ss
popf
aam
mov
adc
lock
sbb
fnstsw
jae
pusha
sbb
mov
adc
sarl
in
leave
rcll
push
aad
cld
sbb
dec
in
shl
outsb
lcall
ss
xorl
mov
pop
adc
cmp
test
mov
iret
mov
imul
rclb
fcmove
and
pop
out
add
fwait
xchg
ret
pushf
mov
ret
dec
jne
rolb
mulb
mov
imul
jno
pop
pop
in
sub
or
adc
sbb
push
addb
mov
add
and
popf
divl
into
imul
sti
jmp
jg
mov
dec
mov
es
imul
adc
gs
mov
inc
push
fiaddl
jns
test
loopne
in
not
call
dec
movsl
pop
data16
dec
inc
sbb
jno
mov
ret
pop
mov
inc
inc
inc
mov
movsb
popf
lds
pop
lods
gs
pop
aas
jae
inc
stos
shrb
mov
dec
adc
loop
mov
mov
or
pop
ret
arpl
dec
add
and
in
inc
jnp
push
sahf
mov
pop
dec
xorb
pop
and
pop
out
ss
mov
sbbb
shrb
xor
gs
sub
push
sarb
int
and
loope
mov
out
adc
outsl
out
cmpsl
aam
popa
pushf
dec
roll
or
div
js
sarb
lahf
inc
test
jno
push
adcb
in
and
xor
and
or
xchg
and
or
aas
xchg
sbb
mov
jno
sbb
cmp
mov
and
xchg
pop
ja
or
mov
shl
dec
or
push
push
mov
xchg
push
pop
sbb
inc
fistpl
scas
cmp
push
adc
cmp
add
mov
scas
lds
sbb
movsl
in
inc
cmc
cmp
jnp
hlt
shl
mov
bound
pop
push
xor
pusha
xlat
inc
or
inc
cs
inc
scas
nop
push
sub
in
push
jno
add
push
push
iret
ljmp
cmp
mov
aam
cs
add
subl
push
sbb
or
iret
ds
or
addr16
nop
enter
cmpsb
xchg
ss
jnp
jle
jmp
leave
cmp
pop
aas
xlat
sub
std
dec
ja
sub
mov
push
in
jp
sbb
mov
mov
jmp
mov
mov
sub
push
sbb
inc
frstor
test
les
push
inc
jecxz
pop
mov
sbb
and
leave
push
push
enter
sub
test
outsb
or
mov
and
xor
xchg
idivl
cmpb
push
mov
stos
sbb
add
dec
in
pushf
jecxz
in
ds
inc
in
push
lock
xchg
sbb
cmp
push
fistpll
pushf
scas
mov
test
add
incb
test
repnz
jle
je
mov
xor
ret
bound
hlt
xchg
pop
add
in
adc
out
je
fs
sub
xor
xchg
mov
sub
movsl
mov
ret
shrb
div
mov
mov
dec
stc
xchg
jmp
pop
xor
enter
adc
mov
bound
add
test
mov
hlt
jge
arpl
ja
pop
cmp
fimuls
hlt
xor
lock
loope
inc
testb
repnz
faddl
jbe
fadds
fadd
inc
jnp
xchg
mov
stc
cltd
push
setl
pop
cmp
cmp
pop
mov
xor
jle
aad
popa
daa
or
mov
test
and
inc
cli
dec
adcb
in
xchg
mov
popa
stos
in
ficoml
cs
push
addr16
repnz
sub
lods
pop
mov
jo
or
add
pop
xor
lea
dec
scas
fwait
pushl
jno
xor
pop
inc
cmp
jbe
bound
fldl
pop
shll
loope
and
add
mov
jge
mov
imulb
and
rcr
jle
pusha
push
into
push
lods
cld
xchg
pop
out
sbb
addr16
mov
jne
sub
std
dec
push
lock
sub
dec
fdivs
jnp
xor
add
push
or
in
sahf
mov
jae
lds
dec
push
int
inc
pusha
and
push
push
lret
push
push
cmp
sub
sub
adc
push
inc
ljmp
outsl
dec
adc
fwait
std
or
sub
inc
mov
mov
xchg
or
stos
xor
push
ss
adc
xchg
out
pop
jbe
push
in
insl
in
stc
push
jl
enter
sahf
jno
mov
fcomps
mov
fisttpl
push
loopne
scas
cmc
sbb
sahf
mov
cmp
andb
stos
lahf
lahf
mov
pop
pushf
mov
xchg
mov
jge
xor
or
inc
xor
cmpsl
imul
sbb
jmp
mov
and
ja
mov
ds
mov
xor
in
mov
jo
je
imul
jo
and
jg
inc
insl
pop
pop
mov
jp
pop
add
aas
sub
loopne
pop
mov
sti
add
mov
dec
xchg
inc
cmp
dec
sub
outsl
sbb
push
lock
icebp
mov
xor
or
mov
aad
repz
jg
adc
cltd
outsl
cmp
cmp
pusha
push
das
mov
adcl
cmc
sbb
or
andb
push
movsb
leave
mov
pusha
inc
dec
xchg
jno
js
sub
in
or
xchg
loope
testb
xchg
sbb
aad
pop
or
sbb
test
test
xor
push
mov
mov
mov
add
inc
pop
ret
push
pop
push
ficomps
jl
cmp
push
fs
adc
mov
cmp
stos
std
fildl
pop
ss
jbe
pushf
xchg
pop
test
push
call
rcrl
xlat
add
cmpsl
and
mov
cli
xor
insl
jae
xor
cmpsl
outsb
mov
jb
subl
pop
loop
lods
push
and
inc
jmp
mov
jecxz
jge
out
sub
add
mov
repnz
lock
jmp
test
fisttpl
ret
or
dec
or
jb
loope
mov
jge
rcl
mov
inc
add
cmp
in
ficoml
cs
cld
and
push
jo
xor
clc
inc
jl
mov
mov
xor
pop
lods
cmpsb
lods
scas
sbb
xor
mull
dec
add
and
outsl
cmp
jne
in
mov
mov
xchg
pop
xchg
push
mov
in
inc
in
add
movl
js
rcrl
inc
sbb
add
pop
aaa
or
popa
lods
dec
in
ja
add
or
in
dec
push
fldcw
bound
push
data16
dec
and
cmpsl
jle
andb
cmp
es
aas
inc
cmpb
inc
lahf
adc
cmc
xor
jmp
pop
psrlq
adc
jg
sbb
jl
mov
frstor
push
pop
int
xor
push
movsl
repz
sub
mov
inc
sbb
fldcw
xor
cmp
mov
or
popa
sti
aaa
ret
cmpl
je
pop
das
mov
dec
mov
push
pop
mov
lds
je
std
xchg
jne
dec
dec
flds
sar
jns
ljmp
and
outsb
dec
scas
testl
cmc
test
fistpll
repz
jo
aaa
fiadds
inc
andl
cmp
inc
les
or
js
out
xchg
sbb
xchg
clc
pop
sar
mov
movsb
jbe
aas
insl
push
cltd
and
cmp
xchg
in
shrl
loop
pushf
insb
outsb
dec
ja
cmp
jg
adc
fists
and
pop
hlt
xchg
mov
mov
jo
push
cmp
push
cmp
test
ljmp
in
jb
pop
test
leave
sbb
and
insl
adc
pop
cmp
stos
sbb
push
leave
jg
out
add
out
mov
jo
mov
fnsave
push
jge
sub
cmp
jmp
in
mov
xchg
dec
mov
push
jmp
bound
cld
jg
sbb
subl
insl
adc
sub
push
xchg
fcomi
imul
xor
lret
push
cli
es
pop
push
out
mov
xchg
scas
arpl
inc
aam
repz
addb
and
dec
mov
adcl
sbb
jge
push
dec
mov
iret
sbb
in
push
fistpll
enter
rcrl
mov
pop
fsubrs
and
mov
js
mov
xchg
rorb
adc
push
mov
mov
mov
js
pusha
sbb
ret
dec
outsl
mov
adc
inc
mov
and
pop
xor
ss
inc
add
daa
mov
jecxz
and
rcrl
sahf
sub
push
addr16
push
pushf
sbb
adc
mov
jno
stc
inc
loope
lcall
popa
stos
push
and
inc
sub
jne
push
jne
pop
pop
aaa
cmp
xor
pop
or
sub
stos
xchg
sahf
mov
pmaxsw
jb
pop
ffree
pop
sub
leave
lcall
aam
loop
cmovg
mov
pop
jge
lock
mov
icebp
mov
mov
add
push
ss
jnp
jle
mov
subb
and
aam
jmp
and
cltd
push
and
or
mov
mov
push
mov
push
mov
fs
xor
dec
jne
xchg
es
jae
push
cmp
aaa
jb
mov
fsubrs
jbe
xchg
inc
ficomps
dec
xchg
movq
popf
jg
addr16
jl
add
outsl
inc
and
stc
ret
pushf
orl
les
imull
xchg
adc
lods
pop
nop
jg
jl
shll
pop
jmp
mov
fstpt
shl
or
jge
popf
sbb
sbb
ror
push
mov
mov
lret
jno
mov
and
mov
call
lds
pop
xchg
mov
and
or
xor
inc
and
inc
mov
daa
or
mov
out
jmp
mov
xchg
dec
shlb
mov
jnp
add
lret
mov
aad
xor
std
inc
adc
push
test
jne
sub
inc
and
inc
jo
add
sbb
jecxz
push
mov
lret
pop
lock
mov
ror
cmp
mov
mov
fisttpl
inc
bound
pop
add
into
hlt
or
sbb
mov
push
data16
mov
sub
out
sbb
mov
lods
arpl
stos
or
sbb
and
mov
out
enter
mov
and
imul
int3
iret
jmp
ret
jmp
jmp
aas
mov
cltd
enter
das
jae
iret
cs
inc
dec
and
push
jae
add
orb
cld
xchg
cltd
nop
clc
xchg
push
push
push
add
mov
inc
std
push
rolb
mov
idiv
sti
bound
jecxz
inc
lret
xchg
mov
jbe
insb
xchg
jnp
jae
nop
movsl
mov
pop
dec
neg
dec
pop
or
test
adc
lods
xchg
push
inc
adc
rcll
xor
mov
jae
jb
mov
jae
pop
sbb
sub
fs
adc
dec
addr16
mov
inc
data16
jp
js
xchg
add
loope
lret
sahf
jmp
aad
insl
sahf
mov
pop
sbb
and
adc
rcrb
push
sti
cmpsb
and
mov
sbb
cmpb
lahf
adc
icebp
in
iret
std
inc
enter
leave
in
adc
or
loope
subb
cmp
add
imul
xor
aam
dec
out
mov
in
push
mov
scas
sahf
jb
dec
sbb
hlt
orb
mov
ja
push
inc
dec
dec
das
movb
jecxz
outsl
out
or
pop
dec
or
out
mov
and
mov
insl
dec
jne
dec
jge
sub
cmp
int3
daa
in
out
and
movsb
inc
sti
mov
inc
into
xor
lods
test
adc
sbb
test
xchg
idiv
mov
jns
pop
xchg
jp
in
xlat
outsb
mov
adc
inc
and
in
inc
adcl
add
mov
inc
sti
sbb
insb
in
push
pop
shlb
add
fdivl
mov
out
inc
les
mov
mov
mov
mov
inc
pop
outsl
mov
jp
xor
lea
jecxz
jnp
xlat
mov
or
ss
jecxz
in
push
insb
cmp
in
mov
pop
push
dec
pop
stc
inc
jl
jbe
sarl
push
or
pop
xchg
cmpsb
jne
cmp
pop
mov
insl
es
mov
test
out
push
sub
xchg
cmc
inc
sbb
sub
arpl
int
out
dec
xor
xor
outsb
jecxz
or
mov
stos
jecxz
inc
addb
xor
push
jo
push
aas
imul
andb
cltd
jmp
movb
xor
cmpsl
and
sub
push
pusha
movb
dec
les
out
adc
lret
insl
jo
pop
hlt
mov
loope
xchg
jmp
repnz
mov
push
jecxz
mov
mov
daa
ljmp
sbb
jb
sub
rolb
stc
or
dec
sbb
lret
fnstsw
enter
push
arpl
pop
jns
and
insl
or
lods
xchg
mov
shll
mov
push
xor
cmp
repnz
leave
push
lret
shlb
ret
das
fs
jmp
or
dec
or
push
fs
aam
xchg
lret
xchg
jno
out
add
repz
sbb
pop
or
int
mov
and
dec
sbb
push
xchg
pop
insl
ss
loop
clc
out
outsl
add
xchg
push
outsl
inc
shrb
sbb
addr16
pushf
outsb
notb
scas
xor
jmp
sub
or
and
lahf
adcb
in
mulb
pop
push
iret
or
lods
push
adc
add
cmpb
pop
mov
je
movsl
addb
cli
popa
lds
mov
test
cmp
fmuls
push
cmpsb
jo
mov
int3
ss
and
cmpsl
or
pop
adc
dec
testl
sub
and
jns
pushf
sbb
movsl
jo
xchg
stc
call
sbb
dec
mov
imul
sub
iret
jecxz
lods
pop
xchg
rcr
stc
mov
mov
test
test
pop
jno
push
xchg
cmp
push
jecxz
xor
mov
adc
ss
cmp
stc
sarl
xchg
xlat
jo
sbb
cmp
sub
mov
lret
pop
rcll
mov
test
sahf
pop
and
lds
add
lcall
loop
or
mov
movsl
nop
test
cmp
jns
push
xchg
popa
pop
sbb
jne
lods
enter
xlat
fnsave
or
sub
mov
movsl
jmp
jmp
fcmovnu
out
mov
lcall
mov
sbbb
int
scas
mov
lahf
daa
sti
push
loopne
stos
mov
insl
sub
int3
imul
push
inc
cmp
sbb
adc
popa
gs
cld
inc
scas
ret
and
pop
sbb
stc
cmp
stos
enter
cli
lods
test
sbb
gs
sub
popa
inc
ds
pop
push
xchg
xor
push
jb
push
repnz
push
sbb
in
ds
adc
lret
pop
pop
mov
adc
mov
sbb
dec
push
and
test
xor
xchg
outsb
insl
call
cmpsl
pop
lret
inc
jmp
stos
mov
xlat
or
int3
mov
ds
arpl
xchg
test
sahf
movsl
test
fwait
clc
loop
shrl
inc
movsb
adc
lahf
and
cmp
and
jne
push
mov
lea
xor
negl
jp
loopne
lret
push
pop
or
lea
xchg
int
cmp
and
jne
rolb
xor
push
pop
inc
loopne
stc
ret
jge
mov
cmpsb
push
jg
mov
cli
add
or
sub
adc
and
or
sbb
subl
aaa
pop
les
popf
fstps
pop
pop
mov
enter
pusha
in
mov
jae
inc
fildll
jmp
in
xchg
les
dec
mov
inc
aaa
xor
xor
mov
pop
pop
mov
sti
dec
jne
jno
movsb
mov
mov
in
outsb
cmp
enter
repz
add
add
adc
pop
insb
and
mov
or
into
jbe
mov
mov
out
lret
into
or
adc
push
imul
cmpsb
aaa
lret
mov
xor
inc
pop
jno
fidivs
shlb
xchg
out
nop
add
dec
or
fadd
in
xchg
xor
js
int
pop
mov
stos
adc
mov
in
gs
mov
add
rclb
add
inc
cs
and
das
sahf
stos
dec
mov
rcrb
scas
inc
lcall
sbb
ss
or
lret
adc
mov
jge
in
lret
cmpsb
clc
push
mov
and
test
sbb
ljmp
mov
jp
jmp
repz
cs
push
iret
int3
dec
mov
das
mov
and
mov
mov
popf
imul
dec
add
les
ret
adc
or
xchg
sti
repz
test
jno
pop
test
inc
movsl
xchg
in
jb
adcl
xor
inc
cs
sbb
push
xchg
aaa
ds
in
jecxz
andb
lods
insl
mov
push
test
lcall
mov
ffreep
outsb
mov
xchg
pop
xchg
inc
frstor
mov
stc
popf
or
lock
insl
out
fxch
cmpsb
test
mov
in
ljmp
push
adc
xchg
pop
dec
mov
xor
adc
movsl
or
daa
add
fidivl
mov
and
jge
cmp
mov
jns
in
ja
aam
and
rolb
outsl
pop
fstpl
cld
mov
adc
cmp
lea
rcl
or
test
xor
hlt
out
sub
mov
or
mov
mov
in
jns
jmp
aaa
imul
dec
mov
loop
jle
adc
sbb
ret
add
inc
clc
xchg
push
mov
aas
gs
out
pop
xchg
jbe
stos
enter
cmpsb
cmp
xchg
sbbb
hlt
mov
and
movsb
aas
push
idivb
pop
add
jmp
jb
add
int
mulb
js
movsl
fs
mov
mov
push
mov
je
mov
dec
inc
mov
insl
mov
in
cmp
dec
nop
sub
and
leave
movl
out
pop
mov
gs
mov
aam
push
inc
cmp
add
int3
push
ret
add
es
gs
push
arpl
aad
in
std
mov
test
fnstsw
or
pop
lea
sub
jno
testb
jge
xchg
jle
dec
sbb
aaa
mov
nop
loope
or
mov
imul
cs
mov
add
aad
pop
mov
mov
cli
cmpsl
inc
jae
adc
out
cmpsl
rorb
jnp
lock
mov
xchg
in
mov
out
xor
mov
mov
fwait
inc
inc
fildl
jbe
push
xor
clc
es
ficoms
scas
cmp
fprem
push
push
jb
leave
into
imul
cmpsl
push
ss
nop
rcll
pop
dec
pop
fsubr
aad
add
in
ret
push
jb
cmpsb
shrb
fdivl
shrb
xorl
ret
ret
pop
inc
jae
cmp
jp
xor
xchg
daa
sbb
xchg
mov
jbe
adc
aaa
shr
push
push
arpl
insb
or
adc
shlb
outsl
pop
pop
mov
mov
jb
pusha
jne
cmc
jo
leave
pop
imul
loope
mov
jmp
divl
fldenv
xchg
adc
lcall
lods
xchg
push
mov
test
shrb
xor
pop
cld
fs
cmp
fsubs
stos
loopne
test
jb
inc
lret
flds
and
or
sub
sbb
insb
mov
cwtl
sbb
fnsave
lret
xor
and
test
mov
or
outsl
leave
aas
cmp
sarl
call
sub
nop
push
shll
fimull
scas
pop
and
ja
cmp
and
xor
xchg
jle
mov
xacquire
lea
sub
xchg
mov
dec
dec
pop
lret
cmp
lds
xlat
inc
or
repz
mov
ja
jne
pop
gs
cltd
repz
cmp
mov
sbb
cmc
lock
mov
push
addr16
push
gs
bnd
mov
and
jecxz
ror
dec
lret
pop
pop
inc
sub
pop
pusha
push
pop
xchg
rcrb
dec
ret
stos
push
imulb
test
stos
dec
mov
mov
dec
xchg
mov
popf
test
xchg
nop
test
sahf
repz
ss
fwait
mov
les
or
cld
cltd
mov
cltd
sub
cmpsl
dec
les
xchg
data16
rorl
xchg
jmp
ficoml
mov
in
out
loopne
lods
mov
mov
subl
mov
shrl
stos
sbb
jecxz
pop
mov
dec
pusha
shll
dec
scas
loopne
cmc
jne
push
sti
sbb
movntps
push
lcall
pop
and
hlt
mov
outsl
cli
xor
dec
push
rcl
fidivs
sbb
int3
inc
jge
gs
or
dec
aam
pop
pop
sbb
std
lock
pop
jecxz
cli
or
jne
or
add
adc
pushf
lds
testl
sub
ljmp
hlt
pushf
xchg
mov
sbb
inc
dec
sbb
ds
gs
pop
push
pop
sub
out
popf
pop
inc
pop
cmp
subl
inc
ror
cld
jns
sar
sub
test
adc
in
cmp
add
test
jmp
pop
cmp
fisttps
aas
xchg
xor
mov
and
inc
sbb
clc
sub
xorl
or
add
and
dec
cmp
aas
mov
imul
dec
push
xchg
ret
call
and
and
test
mov
xchg
mov
aas
or
clc
xchg
jecxz
imul
fcompl
sbb
fildl
out
fmulp
pop
dec
mov
adc
lea
cld
jge
xor
jns
pushf
sub
cli
add
push
fld1
jmp
mov
nop
leave
aam
cmp
jp
out
clc
adc
dec
ja
scas
dec
sbb
xor
sub
sar
mov
ds
fsts
cltd
imulb
jne
lods
lock
flds
pop
notb
das
xchg
cmpsb
add
test
jg
jb
inc
das
in
jnp
xchg
mov
jnp
in
out
ja
cmpsl
mov
outsb
in
mov
push
lcall
js
pop
test
mov
pusha
inc
jb
das
push
sarb
lahf
ror
fs
mov
adc
pop
lret
sub
or
mov
sbb
ds
imul
into
lahf
inc
rcr
inc
xor
mov
clc
adc
inc
push
inc
xchg
ret
pop
mov
mov
xchg
insl
dec
dec
or
sbb
xor
rolb
jmp
mov
fbstp
repnz
xor
lahf
cld
divb
cld
repz
sbb
pop
inc
popa
mov
test
test
sti
movsb
mulb
das
out
neg
cld
in
jae
jno
jl
xchg
or
mov
scas
cmp
sub
shlb
and
pop
mov
lret
xor
loope
in
jp
lock
cs
jmp
xor
and
jno
test
xchg
pop
mov
adc
jecxz
and
jo
int
lods
dec
addr16
popl
repz
fwait
add
es
sti
movsl
pop
mov
add
pop
push
outsl
fwait
ret
push
in
add
sbb
jmp
sbb
fisttpl
dec
jmp
jo
cmc
mov
in
adc
fisttpll
jmp
and
into
jae
test
xchg
in
int
and
icebp
adc
fwait
pop
mov
sub
inc
jg
out
fistpl
sub
push
cmp
inc
push
jp
loopne
sbb
xor
addr16
in
jl
shlb
sbb
ds
adc
ja
jecxz
mov
xchg
pop
or
mov
sbb
mov
daa
xor
xorl
insl
subb
or
xchg
dec
dec
mov
stc
pop
out
ss
lds
xchg
or
ljmp
mov
mov
or
push
jne
xor
pop
lret
test
sub
insl
jnp
pusha
aam
cmpsl
xchg
fcompl
dec
push
mov
cwtl
test
xor
sar
loope
mov
cmp
inc
loope
gs
xchg
fistps
mov
popf
iret
hlt
mov
or
inc
sub
mov
cmpsb
xchg
adcl
cmc
sbb
add
bound
stc
jns
push
ja
call
mov
dec
or
loop
sti
inc
fs
sti
adc
mov
js
pop
popa
inc
or
arpl
fwait
sahf
and
pusha
push
adc
sahf
mov
jnp
mov
mov
insb
pushf
mov
scas
aad
and
imul
sub
xor
jb
cmc
pushf
mul
sub
in
xor
dec
pop
mov
fs
ja
xchg
inc
ret
pop
addr16
frstor
inc
mov
cmpsl
sbb
jl
test
inc
xor
jno
lds
cmp
iret
aam
int
nop
std
mov
dec
shrb
mov
jo
cmp
into
cwtl
cmp
inc
fisttpl
rcr
push
push
adc
xchg
test
mov
dec
xchg
pop
xchg
jecxz
inc
inc
fs
fsts
sbb
aas
mulb
jns
lds
sub
ret
xchg
and
js
inc
mov
rorb
mov
xchg
aaa
jge
pop
pop
xchg
movsl
inc
and
mov
mov
mov
pop
pop
and
bound
cmpsb
jmp
jmp
sbb
add
sub
in
inc
arpl
push
rcll
jb
jg
fdivp
push
jge
mov
sub
pushf
push
mov
cmp
xorl
scas
inc
inc
mov
adc
ss
pop
sbb
data16
cli
stc
loop
xchg
mov
or
inc
cmc
mov
lea
mov
xchg
sbb
scas
pop
pop
jns
movsl
imulb
sahf
mov
test
sbb
xchg
xor
xchg
clc
dec
xchg
cmp
push
mov
int
aad
inc
pop
test
fistpl
and
mov
jmp
adc
stos
bound
xchg
mov
xor
dec
and
std
stos
iret
cmp
mov
imul
jmp
xchg
inc
insb
stc
mov
outsb
sub
aas
mov
dec
mov
in
mov
out
movb
cmp
add
das
pop
push
leave
iret
pop
pushf
pop
outsl
jns
cltd
int3
push
sub
inc
push
stc
jo
cld
jmp
sahf
or
push
cmp
imul
mov
cmp
fisubl
fsubrl
xchg
cmp
outsl
cmp
and
dec
jp
rolb
pushf
in
hlt
add
cmp
out
push
cwtl
xor
ret
fsts
cmpb
popa
les
sbb
pop
xor
xchg
sbb
aad
xchg
xchg
push
mov
add
addr16
cmp
jmp
mov
icebp
adc
stc
jne
fisubrl
pop
je
pop
ret
dec
mov
xchg
sbbl
jns
test
loopne
mov
cmc
shlb
xchg
outsl
sbb
fistl
mov
lret
cmp
out
xor
inc
rcll
cld
jns
cmp
add
das
jmp
into
lods
sub
push
imul
aam
sub
jmp
cld
mov
push
inc
and
dec
mov
mov
pop
adc
jp
or
xorb
cmpsb
fdivs
mov
es
cwtl
rcll
push
rcr
inc
xchg
inc
cmp
cs
mov
std
mov
dec
inc
cld
sbb
sbb
jg
jae
pop
sub
ret
cs
sti
jge
data16
push
stos
dec
aad
repz
sub
push
or
aaa
dec
mov
mov
cmp
xchg
push
sub
test
imul
xchg
pop
mov
imul
xor
xor
shr
push
push
push
loop
test
ficoms
or
inc
daa
xor
lea
ljmp
das
cmp
iret
mov
pop
or
in
dec
add
movl
outsb
mov
jb
pop
push
fcmovnbe
cmpsl
test
scas
sub
cmpsb
xor
lock
and
push
mov
sbb
ret
cmp
fimuls
repz
lret
push
pop
pop
sti
jne
xor
push
dec
mov
xchg
lret
cmp
ljmp
mov
push
clc
leave
inc
adc
in
fs
fcoms
inc
push
mov
in
ficomps
pop
sti
inc
rorl
and
xchg
cld
lret
cltd
pop
ss
fisubs
daa
push
rcrb
mov
mov
fwait
cmc
js
inc
jb
sub
in
mov
ja
inc
mov
xor
sarl
add
in
jle
out
jmp
cmc
int3
inc
fidivl
push
out
fldenv
iret
pop
push
mov
test
add
loope
add
adc
mov
out
push
mov
pop
repnz
cmpsl
xlat
cmp
jnp
xlat
or
inc
sub
ja
into
push
xchg
aad
cmpsb
aas
mov
lds
je
not
inc
sbb
lahf
push
inc
imul
jbe
push
push
scas
cli
cmc
add
mov
loopne
xchg
pop
dec
mov
sub
ss
and
mov
mov
or
aas
jecxz
pop
cmc
jnp
xchg
mov
sub
dec
adc
xchg
or
or
xchg
add
mov
out
out
add
push
add
push
adc
jb
loope
cli
xor
movsl
fidivrl
lock
push
test
cmp
xchg
or
mov
sub
stos
xchg
sbb
jae
xchg
movsb
mov
pop
sahf
jno
das
mov
cmp
idiv
mov
fcomps
test
ret
sub
ljmp
fmul
mov
pop
and
lods
inc
mov
or
ss
dec
mov
mov
xor
add
mov
xlat
loop
jns
insl
vucomiss
inc
jne
les
xchg
mov
stos
or
in
cmp
xchg
cld
pop
sbb
cld
push
adc
mov
jo
adc
je
ret
pop
loope
jmp
repz
rol
out
outsb
js
and
test
jg
cmp
or
push
mov
jmp
iret
ret
lahf
mov
ss
inc
xchg
shr
jle
push
mov
sbb
ret
in
shlb
adc
mov
cli
xchg
imul
adc
inc
dec
and
jg
or
lods
shll
sti
dec
sahf
popf
shr
ret
push
push
cltd
or
fucomip
int
inc
xchg
arpl
pop
pop
mov
ss
mov
fstps
push
dec
cmc
dec
sbb
push
in
inc
sub
and
loop
mov
enter
mov
mov
and
dec
xchg
inc
cmp
enter
aam
daa
or
cmpb
mov
mov
cltd
mov
xor
sbb
mov
popf
scas
xchg
stc
xchg
mov
lret
fwait
rorb
mov
daa
or
lods
subb
arpl
lds
into
and
inc
es
pushf
pop
data16
mov
rol
loopne
push
vandps
gs
xor
adc
dec
xchg
js
ficomps
mov
inc
cwtl
fistpl
sub
imul
mov
popf
xor
cmpsb
mov
xchg
mov
jmp
clc
mov
adc
adc
sub
in
addr16
mov
cmp
test
mov
or
ja
imul
addr16
mov
loope
data16
ficoms
mov
aad
icebp
sbb
sbb
in
and
les
pop
idivl
pop
loopne
int3
and
leave
xlat
int
push
pop
mov
ja
pop
imul
mov
loope
call
add
lock
test
cwtl
xor
sahf
xor
mov
pop
dec
sub
jno
push
repnz
push
cmc
or
mov
jg
add
call
inc
sahf
ja
add
lea
iret
push
and
mov
dec
cmpsl
jg
adc
sbb
mov
xor
ret
jnp
jmp
pop
rcl
insb
call
sub
pop
mov
xor
or
leave
jne
pop
sti
in
insl
in
mov
mov
lahf
addr16
push
clc
mov
sub
lcall
into
movsb
in
rorl
and
xchg
push
sub
cmp
push
add
lea
pop
stc
jb
je
or
bound
and
xor
icebp
adc
xor
mov
pop
jl
push
adc
sub
or
xlat
mov
addl
cld
xchg
sub
inc
pop
jge
repz
popa
loop
pop
in
pop
sbb
fbstp
cwtl
or
xchg
hlt
pop
mov
inc
pop
jo
mov
mov
imul
fcompl
inc
out
jg
fidivrl
and
call
push
hlt
xchg
mov
fld1
cmc
sbb
int3
xchg
sub
mov
add
xchg
xchg
lcall
cmp
mov
pop
xchg
repnz
fsts
jl
pusha
std
mov
ds
ret
dec
stc
sbb
dec
shrb
mov
lea
mov
lods
dec
adc
mov
mov
fildll
fucomp
and
dec
imul
sbb
dec
xchg
jecxz
pop
gs
dec
das
lcall
mov
aas
scas
repz
mov
or
stos
rcrb
push
jge
lock
imul
jno
hlt
mov
hlt
lret
or
cltd
jl
dec
loop
daa
mov
js
sub
daa
test
imul
neg
fnstenv
orb
mov
or
cmp
shlb
push
scas
add
nop
scas
pop
mov
sub
dec
cmp
scas
mov
popa
mov
into
and
mov
add
xor
inc
lds
mov
fxam
push
fidivl
sar
jbe
dec
xchg
mov
movsl
sahf
test
push
inc
mov
lret
and
out
sbb
sbb
in
bound
bound
clc
push
inc
jg
je
data16
pop
mov
mov
imul
cmpsl
mov
push
cmpsb
add
clts
stos
cmp
push
sbb
inc
pop
and
adc
dec
adc
fsub
sbb
fsubrs
and
or
std
lock
jge
outsl
fstpt
lods
inc
stc
insb
subl
mov
cmp
mov
adc
mov
inc
mov
mov
jge
lret
pop
xor
in
xor
in
dec
lods
mov
ljmp
and
add
lcall
xchg
mov
jnp
outsb
xchg
out
push
arpl
arpl
sub
jnp
cmp
stos
bound
pop
scas
das
bound
push
arpl
popf
dec
mov
add
adc
or
pop
dec
sub
mov
hlt
inc
scas
das
sbb
jg
cs
jle
or
sbb
adc
cli
cmp
dec
loopne
cld
leave
leave
ljmp
pop
xchg
daa
pop
cs
sbb
jbe
and
insl
jecxz
sub
test
jmp
call
fildll
mov
loop
cmp
or
mov
push
dec
iret
outsl
in
adc
dec
aaa
jg
rorl
jge
aad
pop
mov
popa
aaa
mov
cmp
sbb
cmc
jns
or
addr16
cmc
js
ret
sbb
out
mov
call
mov
cmp
pop
ja
in
pop
shrb
stos
js
repz
loop
fimull
pop
or
adc
rcll
mov
or
les
jg
out
fistps
xchg
arpl
ss
sbb
std
sbb
cmc
enter
xchg
xchg
or
das
test
ret
stos
add
mov
mov
pop
out
out
sahf
fsubs
je
jecxz
das
arpl
mov
cmp
imul
leave
sbb
push
and
insl
pusha
jmp
push
jno
pusha
gs
or
mov
adc
jo
repnz
mov
pop
fsubrl
mov
jo
jne
add
cs
sarb
fucomip
pop
pop
imul
sbb
or
jnp
pop
cli
xchg
push
inc
jmp
sbb
imulb
mov
repnz
insb
stos
ja
dec
scas
mov
fwait
mov
ret
sub
aam
repz
mov
jge
mov
mov
xor
in
pop
adc
into
pop
cmp
sbb
hlt
sub
lcall
insb
sub
jge
std
dec
jae
inc
scas
add
aaa
out
lahf
jecxz
xchg
rclb
inc
sbb
or
sub
and
sbb
sub
cmpsb
ja
outsb
add
data16
jae
gs
dec
lods
sbb
sbb
imulb
loop
dec
stc
mov
jb
leave
mov
and
mov
sub
sub
iret
mov
daa
and
cmp
sbb
lret
push
lret
pop
icebp
push
clc
out
sub
jmp
or
cmp
pop
jo
imul
xor
pop
push
adc
sbb
orl
mov
mov
inc
daa
adc
add
or
mov
movsb
or
jecxz
mov
push
cmpsl
out
pop
je
dec
loopne
and
or
mov
sub
mov
add
lods
add
lcall
dec
sarb
or
test
mov
lods
stos
popf
sbb
xchg
jmp
lods
and
add
push
mov
mov
mov
in
out
jbe
add
dec
mov
or
adc
test
in
add
loopne
cmp
adc
xor
sub
aaa
jmp
mov
adc
mov
setns
call
ss
leave
cmpsb
push
shrb
lcall
enter
sub
lea
jmp
add
push
cmp
and
addr16
enter
pusha
sahf
scas
insb
xchg
dec
pop
mov
add
dec
mov
pop
xor
pop
xchg
dec
jl
inc
pop
jmp
add
inc
and
add
popf
sub
imull
aam
insl
cmp
inc
mov
sub
hlt
pop
add
inc
push
insl
pop
daa
or
out
lcall
mov
adc
lods
mov
and
popa
xchg
pusha
sti
insl
mov
and
sbb
add
in
push
loop
cwtl
lret
int
out
icebp
popf
imul
cmpsb
pop
lods
sbb
rcrb
jle
movsb
adc
ja
iret
in
mov
iret
loope
nop
mov
testl
push
mov
inc
push
or
adcb
adcl
andb
cmp
jecxz
dec
inc
leave
dec
ficompl
and
nop
mov
jbe
movsb
pop
and
mov
int
shll
nop
xchg
mov
sbb
pop
inc
sub
xor
sub
and
xchg
mov
pop
sub
ror
cmpl
in
enter
inc
lds
shlb
xchg
call
inc
pop
cmpsl
adcl
rorl
xchg
lea
sti
lods
mov
icebp
mov
shlb
xchg
cmpsb
xor
pop
cmp
aaa
push
jge
and
aam
or
movntq
in
outsb
movb
xchg
or
mov
loop
lods
shrl
movsl
push
jne
cmp
jecxz
push
out
aad
stos
hlt
xchg
cmp
dec
xchg
xor
jmp
xchg
dec
cwtl
and
inc
mov
mov
push
aas
sbb
mov
lret
pop
sti
adcb
pushf
out
xor
mov
ds
cmp
popf
cmpsb
iret
xor
mov
push
movsl
test
push
adc
lcall
ss
orb
add
xchg
lea
sub
mov
xor
sub
iret
adc
cmp
xor
aaa
cmp
fcomps
fmuls
andl
mov
pop
ret
add
mov
fs
js
js
mov
je
cld
and
pop
in
xor
imul
repnz
and
cmp
xor
dec
push
mov
sti
in
ljmp
outsl
xchg
iret
sbb
mov
andb
dec
mov
lods
fwait
push
test
stos
mov
ljmp
sub
andl
cmpsl
xor
scas
stos
sbb
push
cmp
adc
sbb
int
mov
jecxz
and
lea
xor
sub
inc
cmpsl
sbb
or
mov
lock
mov
dec
xchg
cld
sbb
jp
out
je
test
pop
sub
jbe
sub
jge
out
bound
pmulhw
xchg
pop
pop
out
xchg
add
jb
xchg
push
movl
lsl
in
shl
add
fwait
xchg
rcrb
jge
fs
frndint
xchg
loop
das
outsb
ficompl
lcall
mov
mov
push
push
jno
or
outsb
test
pop
push
popa
popa
int
mov
cs
jb
loop
in
lds
bound
lret
loopne
mov
cmc
mov
jno
add
std
insl
jp
jp
inc
fwait
pop
add
pop
push
or
sbb
inc
push
jae
sub
add
int3
lea
cmp
xchg
xchg
mov
dec
fwait
cli
mov
stc
out
add
mov
pop
aaa
sbb
inc
movsl
xchg
das
rcr
xchg
dec
gs
add
movl
rcll
fimull
or
cmc
add
in
int3
mov
ljmp
push
gs
xchg
mov
push
jmp
mov
or
test
push
movsb
dec
xor
add
pushf
shlb
jbe
out
sbb
mov
xchg
fldcw
cld
addl
jne
mov
out
and
lock
sub
pop
xchg
adc
and
mov
inc
shlb
aaa
push
shll
imulb
out
mov
push
rcl
fdiv
jns
in
push
dec
sbb
gs
cmc
rep
jle
mov
subl
xor
lods
lahf
push
sarb
and
stc
mov
fsub
jl
mov
hlt
stos
in
inc
jg
mov
add
push
add
push
pushf
cs
in
cmp
fidivs
daa
xchg
mov
cmp
nop
insb
inc
mov
or
shl
xchg
mov
ss
fistps
gs
xlat
aam
sub
adc
stos
xchg
imul
pop
cmpsl
xor
inc
out
leave
mov
ret
bound
jge
sbb
adc
leave
movsb
lods
out
xor
int3
fnstcw
insb
and
and
add
jbe
test
and
jne
add
jmp
xchg
jb
sbb
pop
imul
xchg
stc
rclb
push
test
and
mov
arpl
inc
sub
ja
leave
clc
cmp
jb
push
repnz
and
or
idivl
imul
dec
lds
loop
lock
lret
das
andl
in
cmp
mov
fwait
loope
xchg
pop
fnsave
mov
xchg
cmp
lods
sbb
imulb
cmc
adc
gs
mov
jl
xor
mov
xchg
popf
or
mov
ds
push
inc
movsl
xor
pushf
xlat
fldl
sbb
lea
mov
movsl
inc
sahf
mov
sub
pusha
shrl
fwait
pop
cmpb
fisubrs
add
out
jb
push
and
mov
fldcw
inc
push
mov
test
sub
dec
aas
jns
mov
mov
jns
test
daa
pop
mov
leave
and
rcr
pop
mov
dec
inc
repnz
add
stos
in
cld
out
mov
jmp
lock
push
incl
pop
sbb
jecxz
in
jb
jg
nop
add
xor
mov
inc
out
mov
mull
xchg
mov
mov
mov
push
add
cmp
scas
mov
orb
loopne
insb
test
lret
ret
adc
mov
cld
mov
mov
outsl
add
add
inc
ljmp
mov
and
mov
xchg
xlat
lods
sbb
push
in
mov
sbb
cli
cli
sub
aaa
jg
or
test
stos
scas
insl
into
es
ss
push
cwtl
lock
cmp
movsb
aas
pop
fldt
movsl
pop
or
jmp
and
movsb
int
adc
cmp
cmc
push
add
xor
xorl
xor
push
lret
push
sahf
jo
mov
push
fs
mov
notl
negl
dec
mov
out
adc
and
fisubrl
icebp
mov
leave
mov
fstps
cmp
aaa
sbb
es
dec
and
nop
loope
cmpsb
add
jl
fsubs
and
fucomp
xorl
dec
fidivrl
or
xchg
nop
insb
loopne
mov
adc
pop
jb
sub
out
scas
stos
les
push
arpl
dec
sbb
je
outsl
xlat
jb
mov
outsb
popf
mov
lcall
ss
cmpsb
pop
or
lods
or
pop
mov
xor
and
int3
push
std
cmpsl
scas
mov
sbb
jnp
inc
scas
test
dec
push
inc
mov
fwait
lds
repz
repz
inc
push
mov
mov
push
dec
mov
loopne
dec
fnstsw
hlt
mov
stos
stos
daa
lods
pop
sub
lret
fmull
dec
adcb
xchg
xchg
int3
insb
std
daa
sbbl
pop
mov
xchg
pop
shlb
inc
in
cli
pop
movsb
dec
or
jmp
scas
pop
mov
imulb
mov
pop
addl
and
mov
icebp
ret
fsubrp
int3
sub
fcomi
leave
pop
lds
aas
mov
push
push
fadd
dec
sbb
inc
jl
jns
inc
mov
adc
xorl
in
popa
scas
mov
mov
push
repz
sbb
movsl
xor
mov
int
iret
jl
sub
cli
and
sbb
add
dec
mov
std
mov
and
xchg
mov
test
push
push
xor
mulb
lds
jae
jl
insb
nop
push
pop
aad
cmp
mov
rorl
mov
adc
xchg
inc
ja
mov
dec
xchg
xchg
dec
fidivrs
cmp
pop
add
jae
mov
test
test
or
test
mov
iret
cli
cmp
clc
jo
sub
push
xor
cltd
sbb
cmpsl
sub
je
and
fildl
pop
dec
mov
sub
sbb
sahf
filds
mov
es
mov
mov
pop
jb
xor
adc
lcall
sbb
pop
nop
mov
lahf
dec
add
out
lret
stos
xor
in
hlt
ret
or
ljmp
ds
dec
sbb
movsb
sbb
cli
out
fisubs
aam
stc
xor
insl
adc
xchg
mov
push
data16
lret
add
es
std
jne
loopne
mov
das
mov
insb
enter
in
cmpsb
js
cmpsl
and
daa
pop
insb
mov
jecxz
adc
and
mov
ret
nop
push
aam
gs
hlt
push
add
enter
pop
aaa
lods
jns
cld
xchg
inc
scas
mov
loopne
mov
push
cs
fisttps
ss
fucomip
mov
add
xchg
es
scas
aad
jne
cmp
inc
popf
cmp
sbb
movsl
mov
out
jae
pop
mov
jo
mov
in
mov
fists
cmp
adc
lahf
imul
push
pavgw
jne
outsb
icebp
das
flds
xor
xor
xor
stos
sahf
nop
inc
push
scas
push
sub
in
mov
push
mov
adc
stos
mov
pop
xchg
sub
loope
xor
fstps
xor
adc
adc
test
imul
fidivl
xchg
icebp
xchg
add
data16
cltd
add
mov
cmc
out
push
std
sub
push
mov
scas
pop
aas
outsw
test
cmp
cltd
adc
lods
sbb
sahf
jl
mov
sub
mov
pusha
ljmp
gs
adc
cli
aas
xor
inc
jmp
lret
cmpsl
sbb
inc
dec
mov
cmp
call
pop
mov
and
push
jmp
sbbl
aaa
mov
fistl
add
mov
push
in
add
into
sbb
xor
repz
jmp
imul
aad
jbe
pop
jae
je
mov
int3
sti
sbb
je
cmpsb
push
sahf
add
xor
insl
dec
jnp
cwtl
movsl
dec
mov
mov
add
mov
ret
adc
push
in
add
fwait
repz
mov
loope
cmp
pop
idivl
adc
fwait
sub
stos
or
add
mov
sbb
xchg
jge
call
xchg
inc
insl
and
push
lret
mov
jbe
outsb
xchg
jne
movsl
jo
push
arpl
cmpsl
js
push
mov
adc
loope
es
hlt
adcb
push
out
jnp
cmp
fldt
cmp
xor
push
call
fbld
ret
into
jmp
loope
push
sbb
jmp
test
sti
fcmove
mov
test
sti
jo
ds
pushf
stos
xor
test
int3
inc
sub
ss
out
xor
xor
in
roll
xor
adc
outsl
xchg
pop
pop
ret
test
imul
cmp
xchg
pop
jg
out
fadds
cltd
int3
push
cmp
mov
push
ret
jp
sub
or
lret
fists
jmp
mov
inc
movsl
add
jge
sbb
inc
lahf
add
cmp
jle
test
lret
push
cmp
out
mov
dec
inc
scas
je
mov
pop
insb
dec
push
aad
xor
rcll
adc
into
mov
push
mov
aas
and
xor
hlt
fcomi
imul
push
imul
hlt
rcll
in
and
mov
repnz
outsb
inc
pop
pop
cltd
pushf
inc
loop
cmpsb
adc
mov
jmp
jne
mov
sub
inc
shr
lret
outsb
lds
test
addr16
jmp
vpcmpgtb
pop
aas
push
sub
mov
cmp
lcall
and
out
dec
mov
dec
popf
sbb
out
mov
ret
pushf
pop
dec
aaa
sub
daa
ror
mov
cmp
xchg
push
subl
mov
je
add
fists
nop
int
fnsave
mov
shrb
mov
das
movsl
pop
adc
outsb
mov
dec
push
sub
push
inc
int
idivl
rolb
adc
hlt
push
pop
add
cld
out
push
mov
fldl
cltd
mov
xorb
push
push
or
xchg
data16
mov
mov
dec
sub
sub
sub
dec
loope
sbbb
mov
das
rol
mov
xor
push
imul
insb
sub
add
push
gs
xchg
stos
jno
adc
lahf
adc
push
fidivl
pop
movups
repz
in
mov
addl
ss
rorl
in
nop
mov
add
aaa
repnz
mov
pop
pop
ja
pop
xor
les
loopne
dec
call
addr16
dec
xchg
pop
out
jmp
and
adc
sub
sub
sbb
add
sbb
shl
imul
or
and
pop
push
push
stos
enter
sbb
jg
cmp
push
lods
into
inc
lret
scas
lret
dec
xor
jns
in
out
or
jmp
and
test
neg
inc
outsb
adc
mov
or
jae
sbb
notl
pop
add
adc
nop
xchg
sbb
inc
add
pop
stc
pop
fldcw
xchg
fildll
xor
mov
outsl
mov
and
jne
je
jne
cmpsl
andl
lods
dec
xchg
sahf
push
or
ss
fcoms
xor
imul
xchg
mov
push
mov
and
xchg
je
cli
push
jns
or
adc
and
jmp
imul
stos
mov
ljmp
push
adc
es
sub
pop
mov
add
ss
jl
xchg
push
lods
mov
add
ret
jle
push
dec
jns
and
stos
fcmovb
jne
fstp
and
xor
xchg
imul
xor
fs
xchg
into
push
sti
and
xor
roll
fs
push
pop
mov
add
xor
xchg
addr16
rorl
std
gs
mov
cmp
jge
and
das
cmp
jnp
popa
jne
fadd
cmp
pop
ret
mov
fs
out
mov
jns
push
rclb
repnz
sub
std
cmc
leave
adc
push
les
adc
add
jne
sarb
dec
cli
inc
dec
mov
orb
mov
insb
jae
pop
add
mov
fwait
out
nop
in
add
push
jne
push
fistpll
and
movsb
pop
push
sub
adc
push
fprem
outsl
pop
popf
enter
jnp
aas
ja
out
mov
mov
pop
sbb
dec
sarl
in
icebp
ss
loopne
cmp
mov
cltd
and
sbb
or
push
mov
jno
pusha
dec
aam
cltd
xchg
sahf
adc
les
jbe
adc
lods
jne
lahf
cmp
sti
sbb
xor
fcomip
and
xchg
mov
xor
jp
fnstsw
call
mov
arpl
xchg
or
in
jecxz
xchg
idivl
adc
add
ror
jg
push
mov
mov
test
fmull
arpl
ja
jl
adc
das
adc
jne
out
mov
add
sub
nop
orl
outsl
jl
into
mov
daa
cld
fisubs
je
in
in
cmp
jmp
jg
or
pop
adc
clc
decl
mov
pop
les
ds
jl
imul
sbb
sub
push
cwtl
and
pop
sub
xchg
push
adc
cmp
inc
repz
inc
jbe
cmp
push
sub
sub
cltd
hlt
xchg
mov
and
lods
pop
push
cltd
push
jmp
out
mov
mov
push
sbbb
mov
xchg
sbb
es
movsb
popa
xchg
loop,pn
pop
movsb
aam
mov
mov
enter
scas
jns
add
mov
mov
xchg
push
mov
xor
rsqrtps
xchg
and
ds
ret
mov
fistl
pop
es
das
arpl
push
pop
ret
push
das
movsl
ljmp
mov
dec
shrl
imul
xchg
and
cwtl
push
push
fidivrl
clc
nop
fnstenv
or
in
int3
mov
mov
popl
movsb
dec
fistps
pop
popa
addl
jge
mov
xlat
add
jecxz
jns
jne
cmp
sub
push
sbb
pop
dec
loopne
rcll
xor
popf
scas
inc
popa
lahf
outsl
and
mov
hlt
pop
jno
xchg
pushf
mov
iret
fldl
mov
mov
pop
mov
sub
or
test
push
xor
jno
lods
push
mov
jg,pt
adc
sub
and
inc
jbe
push
mov
ja
dec
rorl
sub
lods
fprem1
je
sbb
imulb
inc
call
and
jns
or
ret
and
iret
cmp
jo
repnz
inc
xchg
arpl
rcrl
out
scas
jl
pop
sub
addr16
dec
push
insl
dec
adc
or
or
lahf
jne
imul
xchg
mov
sbb
stc
sti
fsubs
sub
mov
cld
stos
aad
xor
or
jle
xchg
or
adc
aas
lea
test
mov
inc
rolb
test
leave
call
loopne
cmp
and
loopne
fnstenv
jno
loope
add
movb
mov
add
fsubl
cmp
add
or
cmpsb
push
inc
jmp
test
push
subl
dec
mov
add
mov
xor
fistps
pushf
mov
mov
mov
dec
imul
negb
mov
add
bound
mov
pop
std
pop
js
dec
lock
iret
les
or
mov
cmp
and
sti
stc
cmp
xor
test
add
cmp
inc
fiaddl
pop
xchg
mov
loopne
insb
push
push
sbb
stc
sbb
sub
in
pushf
sbb
mul
outsl
je
inc
xlat
mov
jg
loopne
or
nop
aam
stc
jbe
xchg
dec
and
lds
sbb
add
out
jae
rclb
fcoms
stos
daa
cmp
xor
xor
xor
cmp
inc
mov
ja
jge
mov
and
fcoms
jp
cmpsb
mov
scas
das
xor
cltd
inc
or
cmp
sbb
inc
fucomi
stos
add
fcoms
lea
in
or
ss
and
in
ljmp
icebp
mov
mov
adc
bound
cmpsl
je
lret
jnp
push
push
adc
jecxz
sbb
xor
movsb
push
fs
adc
jp
insb
mov
or
push
ljmp
or
lret
push
push
ljmp
mov
pop
sbb
pop
mov
orb
stc
jge
scas
mov
push
je
sbb
dec
inc
pushf
cmc
sbb
xchg
loop
and
mov
mov
jno
xor
dec
dec
imul
mov
mov
and
pop
xchg
mul
lcall
xchg
popa
mov
xor
mov
xchg
aam
pop
push
or
inc
mov
mov
push
in
jo
pop
aas
sub
inc
incb
daa
stos
outsb
mov
bound
xchg
dec
cmpsb
mov
xchg
jmp
pop
out
or
fdivp
lock
xchg
sbb
fildl
mov
mov
add
sar
mov
repz
jbe
push
ret
cmc
push
fisubl
subl
sbb
mov
pushf
xchg
or
xchg
out
xchg
pop
clc
push
rorl
inc
jmp
push
jb
pop
dec
jbe
or
hlt
mov
sub
and
mov
push
jns
cmp
and
and
cs
jno
ds
sarb
shlb
ss
loop
rcl
fdiv
cltd
xchg
sub
ljmp
xor
xchg
or
add
pop
mov
sub
mov
dec
mov
notl
jmp
mov
push
inc
outsb
pop
mov
xlat
gs
cli
ja
lock
ja
int3
xor
scas
jbe
push
jmp
dec
push
mov
movsb
jb
insl
inc
xlat
push
mov
jns
pop
mov
xor
or
lods
cmpsb
movsb
dec
inc
or
aas
loop
cld
ret
addb
scas
and
sub
mov
pop
in
push
pop
leave
mov
sbb
mov
subl
imul
sub
gs
mov
inc
dec
stos
cmp
data16
out
loop
ds
xchg
imul
decl
or
mov
repnz
sarl
add
cmp
lods
mov
loopne
fwait
aas
sbb
sarl
es
or
mov
movsb
scas
push
add
push
pushf
lahf
fiaddl
jnp
cmp
add
iret
cli
push
test
lret
mov
jbe
cmpsl
xchg
fs
data16
bsr
adc
test
cmc
addr16
into
nop
mov
enter
push
int
pop
cmp
dec
sti
loope
shrl
xor
sub
popa
sub
sub
mov
mov
popf
pop
lahf
scas
cmp
jl
add
xchg
rcrl
or
adc
xchg
adc
push
add
mov
pop
and
mov
call
xor
aaa
mov
xor
dec
jo
push
daa
out
jg
scas
cmp
fucomp
jbe
sub
mov
arpl
jmp
imul
out
pop
out
jecxz
sbb
imul
add
cmp
push
cmp
inc
jp
xchg
mov
fstpt
add
or
stos
test
mull
cld
jb
mov
adc
call
xor
cli
push
sbb
leave
stos
leave
icebp
or
inc
and
enter
push
cmp
jae
aas
or
cs
jo
daa
movsb
push
xor
imull
cltd
sbb
jle
cmp
xchg
cs
mov
les
and
loopne
mov
cli
jge
push
sub
fcomip
push
hlt
push
xor
pop
in
push
mov
fnstenv
lret
jae
sub
or
sbb
cld
dec
fsts
insb
mov
rorb
sbb
jle
stos
fimull
jns
movsb
and
rcr
adc
lret
mov
les
jp
push
xor
out
jg
push
lea
scas
daa
or
pop
jae
inc
add
fs
inc
ret
cli
gs
je
push
xlat
pop
aaa
adc
les
mov
nop
mov
mov
jnp
repnz
stos
pop
mov
std
imul
icebp
fstl
iret
lods
mov
and
pop
and
daa
xchg
lret
jmp
inc
shll
sub
pop
add
sbb
mov
fmuls
mov
fidivl
in
mov
or
fsubs
dec
adc
adc
outsb
bound
mov
or
in
add
fiadds
push
push
popf
ret
loop
pop
mov
daa
add
out
mov
jmp
into
es
lret
shrl
je
push
int3
roll
inc
sub
jl
xchg
nop
or
jmp
arpl
lcall
pop
das
out
je
mov
imul
dec
out
mov
mov
jne
sub
pop
fbstp
ja
xchg
add
inc
dec
xchg
mov
xchg
int3
ja
pop
sbb
outsb
in
xchg
push
ret
notb
ja
xorb
faddp
xor
sbb
sbb
jmp
out
adc
je
sbb
clc
cmp
ja
test
xchg
test
cmpsl
ds
jno
pop
cwtl
mov
lds
pop
jb
fiaddl
adc
ljmp
insb
mov
es
xchg
fmull
out
mov
push
fwait
iret
nop
jp
das
mov
lahf
arpl
mov
inc
mov
mov
and
jmp
dec
pop
sbb
and
lahf
jmp
xor
adc
sbb
adc
ret
push
lahf
sahf
xor
dec
cli
or
mov
cmp
aad
js
lea
les
sbb
hlt
test
pop
lcall
es
sbb
jl
jae
sbb
pushf
mov
shll
jmp
jmp
ljmp
pop
in
dec
sub
jne
es
dec
int3
cmp
jbe
mov
lahf
inc
mov
clc
cmpsb
icebp
in
add
iret
aam
clc
push
sub
adc
add
push
adc
rcrl
pop
sub
cli
and
or
inc
cmp
cmp
xchg
or
xchg
in
push
lcall
pop
out
out
in
sbb
out
xor
sbb
js
adc
daa
faddl
in
xor
nop
stc
cmpsb
shr
dec
insl
cmpsl
fildll
movsl
hlt
pop
outsw
rcrl
xor
mov
mov
pop
mov
imul
adcb
jbe
xlat
lahf
dec
imul
jle
push
arpl
loope
mov
pmullw
pop
frstor
xchg
or
and
lcall
orb
mov
push
adcl
pop
leave
lds
push
push
and
mov
jne
or
inc
fwait
mov
mov
mov
mov
test
in
push
mov
lret
in
xor
idiv
jnp
fstpt
popf
fimuls
imul
xor
jne
jge
cmp
jne
loopne
cmpsb
imul
cmp
enter
inc
mov
jle
faddl
mov
mov
jne
stc
dec
mov
cmpsl
bound
xor
sbb
push
stc
fsubrl
rorl
xchg
pop
int
mov
sbb
rorb
or
fs
cwtl
fcomps
lcall
sbb
in
jp
int
das
xor
jbe
add
jno
sarl
das
jns
enter
add
repz
popa
inc
push
rorb
mov
leave
xor
and
roll
dec
out
orl
pop
outsb
cli
pop
mov
pop
cwtl
adc
add
aas
push
jns
outsb
dec
cmp
push
dec
or
lcall
inc
aaa
out
clc
sbb
fmulp
sub
scas
mov
dec
das
pushf
mov
mov
aam
xchg
lcall
mov
jp
mov
mov
stc
loope
and
sub
push
fwait
mov
sbb
mov
inc
dec
sti
fs
mov
aad
jp
pop
sbb
jmp
leave
and
add
push
xchg
inc
push
inc
push
pop
ljmp
mov
lret
xor
cmp
fcmovbe
jl
push
xor
pop
js
aas
gs
ds
mov
or
mov
xchg
and
sbb
or
xor
xor
in
pushf
and
push
fwait
call
cmp
xor
jle
and
out
dec
push
adc
xor
or
insl
lret
mov
jecxz
bound
rcrl
inc
sub
dec
mov
bound
mov
or
test
inc
cld
lret
orb
es
xchg
xor
scas
push
sub
mov
push
dec
in
lcall
ss
inc
scas
aam
mov
out
push
in
repz
and
jnp
ss
xchg
adc
mov
fwait
rol
add
push
pop
jo
sub
pushf
sti
add
sub
mov
sbb
inc
movsl
add
ds
lcall
aaa
loopne
cs
sub
iret
mov
insl
and
dec
ret
sbb
pop
leave
repnz
jne
pushf
push
push
in
mov
mov
push
pushf
cmp
sqrtps
jns
imul
stc
pop
mov
inc
mov
sbb
les
cltd
inc
call
aam
adc
push
out
adc
shll
pop
test
in
scas
mov
adc
jne
mov
insl
push
inc
xchg
pop
aad
int3
inc
xor
pop
mov
cmp
mov
shrl
and
fisubrs
adc
subl
jge
ret
add
dec
jae
and
adc
xchg
mov
dec
ljmp
xor
je
and
xor
sub
movsl
or
mov
cwtl
push
xor
inc
aas
cld
out
sbb
outsl
notb
xchg
imul
sub
imul
jmp
add
xor
out
data16
mov
ret
xchg
dec
mov
cmc
push
add
push
mov
pop
mov
test
mov
push
andb
int
lret
loop
lock
add
loopne
push
adc
and
xchg
sbb
add
fbstp
mov
xor
fucomi
xor
fcomps
ss
xor
jecxz
jb
nop
idivl
in
test
sbb
ljmp
pop
and
adc
push
rcl
push
pop
in
dec
cmp
push
cmp
rorb
sub
loopne
and
xorb
mov
cmpsl
clc
mov
mov
popf
adc
leave
mov
outsb
sti
push
frstor
or
mov
int3
ljmp
lea
popl
fidivl
inc
sahf
xor
mov
test
add
mov
pop
jle
cli
test
or
mov
or
push
and
fisubrl
inc
imul
ret
fwait
cmc
mov
jbe
adc
les
addb
xchg
sti
imul
stc
add
in
aad
shrb
clc
std
and
inc
pop
dec
mov
fisttpll
lds
push
in
or
mov
mov
loop
fdivrl
daa
mov
sub
sub
push
adc
xor
stos
push
xlat
sbb
lods
mov
addr16
mov
in
lods
insl
cmp
int3
sbb
mov
mov
orl
rcrl
negl
fmull
dec
push
mov
cmp
out
inc
sub
cwtl
cmc
out
sbb
shl
or
sub
lods
aaa
and
dec
fs
push
jno
inc
push
sbb
sub
inc
shl
shr
mov
hlt
dec
cmp
xchg
lods
addr16
jbe
pusha
mov
out
dec
ja
adc
pop
pop
leave
pop
jmp
fnstcw
in
pop
jmp
jmp
cmpsl
jge
mov
test
out
scas
adc
xchg
mov
jbe
fldt
mov
dec
add
mov
dec
loop
test
cltd
add
les
in
or
in
or
mov
mov
iret
pop
lods
xor
call
sbb
aam
mov
xchg
or
mov
inc
mov
loope
fcoml
sub
pop
or
cld
dec
test
sub
adc
adcl
in
push
mov
sub
mov
pop
mov
fsts
lea
jb
jo
push
lret
insb
sbb
xchg
insl
popf
imul
fstl
das
movsb
or
jno
push
mov
fimuls
mov
rorb
xchg
inc
mov
push
mov
enter
imul
cmc
insb
movsl
int
pop
daa
bound
and
insl
xchg
and
pop
lods
add
pop
dec
jo
cmp
shll
scas
movsl
cmp
jl
jmp
test
lods
push
xchg
cmp
pop
push
sub
sub
xchg
xchg
sbbb
outsl
inc
test
in
es
or
and
mov
rol
cmp
push
hlt
sbb
fildll
and
mov
push
push
add
inc
movsl
cmp
add
rcrl
test
adc
mov
dec
call
lret
adc
add
mov
mov
fnstcw
das
or
loop
sahf
push
push
andl
sbb
ret
dec
fdivrs
adc
mov
test
jae
push
push
mov
pop
or
jle
dec
mov
jl
sub
popf
pusha
fisubl
add
inc
mov
test
in
aas
xor
pop
inc
xor
dec
std
mov
sub
data16
add
push
packsswb
lds
sub
test
xlat
cld
mov
sbb
out
rol
rorl
xchg
shlb
out
xor
dec
mov
pop
fimull
filds
lahf
push
aad
aam
stos
test
mov
mov
dec
xor
inc
mov
ret
sub
and
pop
and
add
pop
xchg
inc
adc
outsb
sbb
stos
cmp
dec
or
das
mov
sbb
sbb
mov
sub
dec
mov
sub
mov
inc
xor
pusha
leave
out
call
xor
sub
dec
sub
push
out
sub
mov
pop
in
sbb
movsl
jne
into
movzwl
jno
push
pop
inc
jl
lret
dec
rorl
dec
push
add
lock
push
fldenv
push
xorl
xchg
xchg
xor
arpl
sub
stos
cmp
out
icebp
aaa
aas
std
inc
adc
into
inc
mov
jbe
dec
push
add
mov
inc
jnp
sub
jne
ficoml
cmp
or
xor
scas
test
xchg
push
dec
stos
lea
clc
mov
loopne
cmp
roll
or
and
mov
dec
mov
mov
cmc
jne
mov
or
add
xchg
sti
xchg
xchg
jo
cmp
sub
mov
mov
inc
gs
jne
rcll
sti
jae
repz
fidivs
fs
test
sbb
pop
jg
icebp
push
add
push
fistpl
js
cwtl
add
mov
adc
fildl
cmpsb
xchg
xchg
xor
cmpsl
cld
setne
jl
adc
in
fbstp
out
dec
cmc
hlt
popf
or
push
jge
adc
out
das
jl
aad
mov
int3
xchg
mov
cwtl
aas
add
push
add
lret
es
xor
mov
scas
sbbb
jecxz
sbb
jmp
cwtl
sti
aam
aas
push
movb
hlt
cmpsl
sub
jmp
sti
nop
xor
movsl
aaa
subb
inc
hlt
push
lods
lea
out
sbb
xor
mov
or
xor
xchg
test
add
xor
sbb
sub
call
pop
inc
rcr
sahf
sub
push
pop
test
push
inc
cmp
js
lahf
adc
cmpl
jb
pop
scas
push
cmpsw
int3
shrb
mov
jns
ret
pushf
into
xchg
dec
andl
add
lods
sbb
add
neg
data16
push
jp
adc
or
jne
arpl
jbe
add
jne
faddp
outsl
push
lods
add
cmp
push
cwtl
fildll
fnsave
loop
cmpsb
stc
pop
xor
cltd
xor
sub
sahf
mov
ret
cmp
cmp
pop
cmp
and
scas
stos
stos
push
icebp
decb
call
stos
int
pop
jg
jle
cmpsl
jae
xchg
push
mov
test
push
fwait
out
xor
inc
jno
pop
xchg
adcl
int
xor
mov
out
repnz
xchg
jo
or
int3
roll
xor
ffreep
adc
std
std
xor
inc
cmp
in
roll
loop
or
in
sub
xor
mov
jno
inc
inc
cmp
sbb
jne
xchg
inc
xchg
pop
mov
jmp
bound
push
mov
lods
cli
cmp
cmp
inc
imul
lock
sbb
ljmp
xor
add
cmpsl
push
mov
shrb
clc
pop
loope
fnstcw
cmp
pop
jb
add
adcb
sbb
add
xchg
jo
fnstenv
pop
xor
xchg
sarb
adc
ror
movsb
push
mov
jle
cmpsl
push
pop
sti
scas
loop
out
cmp
rol
add
xchg
stc
repnz
inc
or
psrlw
lret
xor
sbb
cmp
or
lods
insl
sub
sarb
lcall
sub
pop
inc
aam
loopne
cmp
mov
data16
aad
cmp
xor
jb
sarb
arpl
in
mov
xchg
shl
cmp
es
lret
sbbl
push
cmpsb
rcrl
push
nop
pop
fbld
xor
mov
mov
xchg
test
cmp
pop
lods
int
dec
incb
and
in
data16
adc
jg
push
adc
lea
mov
imul
jbe
mov
stos
sub
mov
int
addb
imul
in
out
inc
aam
add
ret
loope
lcall
jl,pn
sbb
mov
fadd
es
mov
pop
or
call
gs
jne
enter
pop
imul
mov
test
and
jl
mov
mov
add
push
fistps
xchg
ret
lds
lea
or
xor
or
js
clc
fnstcw
leave
ret
stc
test
jge
inc
push
mov
fsts
cmc
fmul
pusha
mov
adc
bound
sbb
stc
adc
sbb
cmpsl
js
mov
repnz
inc
and
lds
iret
inc
sub
imul
or
mov
aas
add
cmp
in
xchg
nopl
mov
cmp
aam
inc
dec
sahf
lret
fmuls
inc
cmp
jle
arpl
repz
pop
out
rcr
out
aad
mov
xchg
mull
jbe
imul
dec
out
push
xor
daa
and
shlb
xor
cmp
push
cmp
inc
cmp
mov
pop
xchg
mov
mov
cli
and
lahf
jns
push
cmpsl
push
adc
jge
addr16
sbb
add
icebp
and
push
aaa
pusha
and
and
loop
push
loopne
adc
in
add
icebp
push
gs
push
imul
xchg
xchg
pop
and
std
rolb
cmp
and
pop
jb
lods
jecxz
push
dec
rcrb
cmp
xor
push
neg
xor
and
xlat
dec
and
icebp
lods
xchg
jb
or
xchg
xor
fsubrs
or
push
loop
jae
add
lea
imul
test
inc
mov
adc
mov
stos
xchg
mov
int
test
adc
jae
mov
cpuid
mov
mull
xchg
add
jne
mov
mov
dec
aas
test
mov
imul
cmp
adc
xlat
jge
sti
je
test
imul
inc
outsl
es
movsl
cwtl
pop
js
arpl
insl
rclb
les
jmp
push
stc
inc
and
mov
sub
cwtl
push
ffreep
lea
sahf
xchg
shrb
fidivl
jae
inc
fsts
pop
mov
add
sarl
je
push
pop
mov
push
pushf
mov
pop
arpl
jl
lahf
sahf
mov
pushf
and
jo
insb
add
or
andb
aam
jmp
out
inc
and
mov
and
mov
inc
xor
xchg
lea
pop
in
xchg
mov
push
push
xchg
ret
lods
sbbb
push
es
adc
jl
arpl
sub
outsb
fbld
addr16
mov
insb
loope
iret
cmp
cmp
pop
insl
movsl
shlb
add
into
mov
popf
push
int3
add
cmp
out
add
inc
sbb
adc
mov
dec
lea
mov
add
nop
ss
aam
xor
adc
lods
arpl
test
scas
push
rcrl
push
ret
add
sub
xchg
jno
loope
js
or
scas
enter
cmpsb
cmp
jae
pop
scas
pop
push
scas
jmp
cs
popa
outsl
mov
xchg
scas
add
jmp
pop
adc
lods
mov
mov
outsb
inc
ror
lret
cmp
fisubs
adc
pop
inc
daa
dec
cmp
jnp
adc
lods
ds
pop
mov
adc
adc
jae
lret
sarl
fcmove
cwtl
fs
cmc
fildl
dec
popf
out
push
pop
xor
and
lcall
pusha
dec
shl
lcall
fwait
push
jbe
pop
sahf
in
mov
and
fdivr
sar
pop
sar
sahf
dec
xchg
pusha
dec
mov
bound
mov
dec
cmc
jl
pop
push
lds
fwait
pop
xor
icebp
inc
push
inc
dec
nop
fs
xor
mov
imull
dec
cwtl
movsb
testl
xchg
loope
sbb
sti
xor
pop
imul
arpl
in
fnop
xchg
and
sub
pop
mov
xor
in
pusha
lret
jne
xchg
data16
loope
in
fs
inc
repnz
iret
jno
ret
xor
mov
cmp
push
ficompl
xor
lods
js
mov
dec
into
xchg
or
xor
popf
ljmp
sub
movsb
adc
pop
xchg
push
mov
mov
sar
mov
lds
xchg
mov
sar
cmpsl
sub
adcl
xchg
loope
cmp
mov
pop
mov
dec
xor
lods
shrb
xor
and
jb
and
mov
stos
mov
xchg
sbb
push
and
hlt
les
iret
bound
scas
xchg
ds
test
es
ret
mov
stos
notb
jae
out
lds
jbe
and
dec
xchg
cmp
jmp
mov
and
out
jle
outsl
jne
lods
xchg
xchg
push
push
mov
clc
arpl
out
jb
cli
fsubr
into
inc
mov
xchg
test
mov
cltd
xchg
test
and
daa
js
outsb
push
xchg
cmpsb
pop
sbb
scas
cwtl
mov
imul
loop
xchg
adc
in
sbbl
cmp
push
jb
cld
cltd
mov
pop
push
jae
icebp
int3
mov
xor
fmul
xchg
xchg
stos
nop
ret
mov
imulb
add
imul
xor
sbb
cltd
aaa
mov
xchg
in
and
out
ljmp
int3
or
xchg
ret
inc
fs
add
jl
out
cmp
xor
dec
inc
int
fisubl
cmp
testb
dec
sub
lcall
xor
shrb
cs
adc
cmp
push
xor
sub
es
shl
sahf
cmp
push
lea
insl
ljmp
in
push
mov
mov
aaa
je
retw
dec
adc
movsl
fcoms
fsubl
dec
jl
insl
push
xchg
pop
sbb
cmc
aas
daa
pop
pop
scas
push
es
and
fsubr
mov
mov
push
jecxz
fstl
in
popf
imul
mov
mov
xchg
sub
dec
mov
xchg
lea
insb
sbb
jp
add
push
clc
sub
mov
xor
cmc
mov
sti
out
sub
aaa
sbb
or
pop
and
imul
pop
or
adc
mov
imull
xor
fs
mov
lret
xchg
sub
shl
xchg
cmp
and
leave
lock
xor
imul
jbe
cmpsl
dec
icebp
sti
xchg
jae
push
shl
enter
lods
arpl
push
clc
scas
sub
int
ja
stc
test
and
jl
mov
and
sahf
xadd
loopne
ds
fwait
outsl
neg
aas
sahf
push
adc
push
repnz
jle
test
jne
mov
mov
mov
jb
add
fimull
xor
ljmp
out
mov
push
push
pop
add
nop
add
fstl
and
mov
xchg
test
flds
daa
test
and
push
jnp
mov
or
sbb
dec
stos
pop
decl
mov
and
lods
mov
leave
movaps
adc
sbb
add
aad
mov
sub
add
xor
adc
and
clc
sub
xorb
jo
loop
add
xchg
jno
sarl
sbb
xchg
pop
mov
lret
out
xor
adc
ja
mov
jo
mov
sbb
les
inc
mov
and
inc
inc
aaa
int
cli
mov
mov
es
std
imul
and
lret
addr16
or
jmp
jp
sub
mov
dec
sti
mov
jmp
scas
movsb
bound
jp
dec
sbb
jp
sahf
fcoml
cmp
ljmp
or
or
mov
daa
dec
fistpl
dec
lret
and
test
and
call
lods
lods
inc
inc
sub
inc
jge
inc
or
repnz
push
cli
lret
ret
push
pop
fdivs
cs
fidivrs
push
fsub
add
sti
pop
adc
lods
push
negl
dec
cmp
arpl
dec
daa
bound
pop
leave
lea
bound
cmp
pop
lret
mov
popf
mov
mov
and
testb
sub
cmc
lret
inc
or
pop
aam
sbb
cli
rorb
sub
mov
dec
test
arpl
or
cwtl
mov
scas
push
add
mov
jo
out
cs
jg
xchg
jae
mov
xor
cmp
mov
shrl
push
adc
and
scas
sub
iret
cmp
cwtl
daa
push
out
testl
jno
cmp
adc
sbb
data16
fmuls
sub
jle
pop
repz
aam
push
scas
adc
mov
add
pop
std
cmp
or
js
ja
pop
out
mov
dec
out
add
addr16
add
mov
push
ror
lods
or
mov
xchg
mov
xchg
xchg
mov
add
cld
in
sti
dec
movsb
stc
mov
cmpsb
inc
dec
xor
sahf
int
sub
fsts
sub
loopne
lret
cmc
dec
mov
push
xor
repz
ljmp
das
xor
inc
stos
lahf
les
cld
in
int3
push
jmp
xor
movsl
test
into
lods
jge
pop
lock
jg
popa
dec
pop
std
adc
mov
mov
sbb
xchg
jns
fisubrl
lret
adc
ja
and
in
les
push
nop
push
daa
lret
enter
fs
and
fs
out
scas
jg
into
pushf
out
sub
mov
in
into
adc
inc
jno
lret
int
sub
pop
stos
add
sbb
dec
mov
in
xor
pushw
sbb
orl
lock
mov
mov
sbb
sbb
enter
push
xchg
fildll
mov
ja
sbb
test
and
out
pop
mov
imul
adc
dec
lods
pop
movb
aaa
cli
in
les
mov
push
clc
xchg
and
lret
aad
lea
push
scas
inc
xchg
scas
fdiv
push
add
test
shll
and
jns
mov
jns
cmc
lahf
push
mov
mov
jb
dec
cs
sub
cwtl
subl
rorb
rcr
int
xchg
or
imul
pop
loopne
ficomps
fiadds
adc
hlt
sbb
jle
inc
push
sub
jg
loopne
psadbw
cmpb
arpl
in
aas
jne
mov
adc
jo
push
fstps
iret
pop
aad
sub
inc
popa
orb
lcall
xor
push
sub
jge
cltd
sbb
push
pop
pop
das
mov
jmp
mov
mov
test
hlt
movl
std
xchg
mov
fisttps
pushf
aam
test
jb
sbb
mov
shrl
mov
mov
mov
cwtl
ficompl
dec
lods
push
imul
std
and
cmpsl
out
xchg
jle
fists
or
xor
test
jns
adc
sbb
xchg
sub
xor
pop
fnstcw
lret
jb
mov
push
inc
ja
add
loope
pop
aaa
sbb
shlb
femms
fisubrl
loop
mov
jno
sbb
in
test
add
cs
push
pop
sbb
mov
lahf
jno
push
lret
stc
push
mov
cmpsl
adc
mov
mov
add
leave
dec
addr16
mov
jnp
mov
lret
and
xchg
int
adc
daa
and
movsl
xor
adc
jae
dec
fwait
gs
fwait
aas
out
fucom
jge
out
mov
in
fisubrl
jno
in
decb
xor
testl
mov
push
cmp
fdivl
or
push
jg
cmp
xchg
pop
and
or
shrl
mov
aam
aas
add
movsb
in
stos
jne
cmp
mov
sarb
pop
scas
insl
push
repz
pop
outsl
push
inc
cmp
adc
mov
into
push
xchg
push
lcall
jl
add
loop
mov
aam
mov
dec
sbb
bound
pushf
cmp
cli
lods
xor
inc
std
in
std
cmp
icebp
jne
xchg
cmc
dec
mov
jns
lret
pop
inc
rcrl
rol
aad
pushw
mov
xor
push
dec
mov
sub
mov
pop
lods
mov
int
out
lock
or
jns
jp
out
mov
sub
or
sbb
rol
aaa
add
mov
fstps
and
aad
mov
pop
adc
or
xor
pop
in
mov
les
add
inc
scas
in
or
push
lret
cmpsl
push
push
sub
scas
jg
addl
rol
fildll
mov
test
jne
xchg
negb
aam
popa
add
es
push
es
insl
test
dec
mov
inc
mov
in
scas
int
cmc
dec
or
xchg
ljmp
out
xchg
pusha
sti
push
add
push
mov
mov
lods
cmp
jmp
cmc
mov
cmpsb
and
cmp
stc
cmp
fstl
aad
jo
cli
loopne
sbb
and
sub
ja
test
xchg
jo
in
sub
push
dec
getsec
pusha
pop
das
mov
inc
mov
sub
js
testb
cmp
iret
and
sahf
ficoml
stc
ds
test
mov
push
stos
push
stos
pop
cmpsb
inc
jp
popa
pop
lods
cmp
stos
push
mov
aas
dec
mov
fisttpl
out
xor
or
in
jl
cmp
orl
cmp
xchg
fsts
dec
xor
lcall
leave
adc
jg
and
and
addr16
adc
xchg
jle
std
into
cs
daa
push
std
inc
xor
sub
mov
inc
cli
push
jecxz
pop
out
or
insl
loop
out
std
leave
sbb
xor
int
pop
xchg
jne
sti
push
sbb
pop
dec
dec
sub
push
mov
jne
xor
dec
mov
in
inc
sbb
pop
loope
pop
mov
inc
aad
and
jns
out
sbb
pop
stos
dec
call
lods
into
fadd
in
dec
mov
push
in
loopne
pop
gs
push
fisttps
dec
lds
ret
push
movsb
fldcw
push
sub
mov
aam
and
adc
not
fptan
jp
fld
push
jae
xchg
inc
or
push
mov
and
pushf
sub
aad
add
ljmp
pop
lcall
mov
push
push
inc
popf
jp
test
das
cmpsl
dec
test
mov
push
std
pop
push
test
leave
or
mov
faddl
mov
jne
xchg
sbb
and
sbb
pop
mov
cmp
ljmp
call
cmp
fstpt
lret
in
inc
insb
mov
add
inc
and
and
add
outsb
mov
cltd
inc
rcr
jmp
push
stos
jmp
imul
jmp
das
clc
nop
shrl
jp
mov
fisubl
pop
inc
loop
cli
sub
cmpsb
bound
xor
call
std
daa
dec
cmp
or
pop
push
nop
xchg
imul
imul
xchg
sahf
imul
or
out
dec
pushaw
mov
mov
push
imul
and
xlat
aaa
xchg
dec
call
jmp
adc
ret
and
in
inc
adc
icebp
outsb
fstpt
xchg
enter
mov
mov
movsb
mov
sub
xor
das
shll
mov
ljmp
mov
xchg
push
dec
add
rcll
cmp
popa
xor
in
jmp
rcrb
add
xchg
pop
leave
lods
dec
sbb
or
mov
in
pop
cmp
subl
dec
mov
jns
es
std
push
mov
scas
xchg
pop
inc
pop
push
or
add
push
les
pop
and
mov
xlat
and
and
jp
or
jmp
pop
addr16
xor
scas
push
nop
into
fldln2
fsub
jns
dec
pop
stos
mov
mov
push
dec
fcoms
scas
cmp
mov
xchg
mov
fcomps
sub
cwtl
mov
xchg
xor
pop
lods
mov
mov
push
mov
sub
or
xlat
cmp
mov
inc
xchg
push
jns
sbb
ret
sar
ljmp
data16
xor
mov
int
sbb
test
pop
fstpl
insb
jmp
push
push
and
cmp
and
lds
xor
outsb
cld
pop
ljmp
sbb
cmpsb
divl
out
add
data16
mov
in
adc
sub
movsl
mov
and
dec
int
cmp
sub
gs
pop
adc
invd
movsl
shlb
or
mov
movsb
es
xchg
out
test
loopne
cmpsb
mov
xor
mov
mov
ret
int3
scas
add
push
fstpt
loopne
add
cmp
xor
cmp
sbb
mov
shlb
insb
and
inc
in
das
repnz
dec
lret
in
xchg
test
fnstsw
xor
dec
pop
cmp
cli
mov
das
addr16
xchg
ljmp
mov
mov
fnstenv
stos
aaa
sarl
add
aas
cld
dec
scas
insl
loop
lds
add
stos
in
lcall
lods
jo
pop
dec
insb
dec
jp
leave
xchg
jg
xchg
jle
dec
push
push
jo
add
popa
ret
pop
mov
popa
orl
jp
xchg
arpl
inc
arpl
adc
adc
jg
lds
mov
sbbb
movsl
mov
dec
cltd
inc
or
cmpsl
xor
cmp
data16
arpl
call
cmp
mov
fs
fldl
sbb
fwait
push
stc
rcll
mov
lret
lahf
cli
icebp
add
lock
cmpxchg
mov
sub
mov
cmpsl
in
inc
pushf
bound
sarl
or
sub
mov
sarb
add
js
sbb
cmp
test
inc
leave
add
add
push
dec
push
out
movsl
xor
jmp
pusha
pop
jmp
insb
es
or
adc
scas
inc
popa
dec
cmp
cmp
mov
sbb
dec
loope
mov
ret
fs
fidivs
xor
imul
mov
mov
inc
inc
ret
cmpsl
fbld
repz
sub
mov
push
shll
jne
lds
adc
mov
sub
scas
mov
es
xor
js
ret
push
popf
and
sub
xchg
scas
mov
mov
mov
inc
sbb
xchg
gs
outsb
and
jb
pop
bound
ffreep
inc
push
push
movsb
push
lods
pusha
or
jp
ret
push
sub
daa
and
and
int
rorb
push
mov
pop
mov
pop
ror
pusha
sub
mov
xor
mov
gs
repz
ljmp
ror
das
or
adc
and
movsb
push
cmp
daa
pop
lret
xor
pop
xor
fildll
nop
cmp
sub
nop
cmp
ret
adc
cmp
jp
call
push
cld
cmc
or
cmpb
hlt
fsub
leave
fildll
inc
cltd
test
test
int
push
and
fs
dec
ljmp
repz
idivl
mov
or
arpl
adc
adc
mov
out
int3
mov
sub
outsl
push
in
idivl
add
xchg
aas
clc
mov
das
mov
jne
in
push
or
pushl
add
cs
pop
push
xchg
mov
jmp
and
push
adc
int3
push
mov
cwtl
shrl
sbb
mov
mov
and
pop
inc
into
mov
in
arpl
mov
mov
aad
pop
mov
out
icebp
push
test
arpl
pop
mov
std
push
push
sti
imul
ficoml
insb
outsl
sahf
dec
and
push
in
sub
out
call
add
sbb
dec
jge
mov
or
jge
jmp
sbb
ja
jl
rclb
sti
fdivrl
add
sbb
rolb
pop
sbb
dec
mov
test
stos
adc
inc
lock
jb
sub
mov
mov
test
cmp
mov
lahf
mov
mov
cs
rcll
outsb
sub
add
in
scas
and
add
sub
out
fwait
ds
add
sbbb
lahf
dec
pop
cmpsl
rclb
sub
xchg
fldt
shll
pop
movsb
cmpsl
je
sti
inc
sahf
nop
in
or
ret
xchg
loop
jne
sbb
outsb
imul
scas
mov
fnstsw
fwait
pop
les
pop
mov
subl
mov
cld
sub
mov
cld
lea
push
push
stos
xor
sbb
push
imul
xchg
adc
sti
mov
and
out
dec
pop
nop
addr16
cmc
lods
or
add
fistpl
enter
or
push
lods
pop
in
push
or
fmulp
jnp
cmp
add
adc
push
pop
dec
pop
sub
inc
std
cmp
xor
dec
adc
fisttps
push
sarb
xchg
sub
dec
sub
into
jne
outsl
lds
mov
sahf
addr16
cmp
scas
jg
adc
push
mov
mov
dec
out
loopne
mov
sbb
in
cld
jecxz
lcall
pop
dec
sahf
cmp
or
inc
jg
xchg
mov
push
ret
lcall
sti
outsl
push
push
js
dec
inc
inc
dec
loop
push
sub
loop
fwait
mov
sahf
sbb
jno
sub
repnz
mov
mov
dec
dec
add
cmp
mov
mov
imul
in
push
dec
sub
icebp
add
sub
mov
jg
and
mov
cmp
push
pop
cmpsb
sahf
or
inc
ja
stos
clc
js
rorb
pop
clc
mov
hlt
push
lahf
loope
rcrl
clc
lds
sub
dec
xor
pop
es
mov
mov
inc
fucomi
xchg
stc
push
loopne
stos
sbb
adc
int3
push
sub
add
ds
aam
pushf
push
shlb
mov
sahf
add
mov
lcall
fistpl
pushl
jo
xor
cltd
xchg
loopne
mov
mov
add
icebp
push
mov
xchg
mov
jns
js
stos
cs
lea
sahf
loop
out
pop
cld
pop
pop
mov
cmp
test
jl
and
mulb
cmpl
pop
push
out
and
inc
enter
cs
mov
xchg
in
mov
lea
hlt
pop
inc
ds
scas
jb
loope
jo
jbe
insl
sub
xchg
cmp
sub
mov
add
ds
xchg
jno
je
cli
les
mov
or
ja
jle
les
inc
mov
mov
in
sbb
lods
mov
scas
int
and
cltd
testl
call
out
push
and
jp
sub
push
ds
stos
sbb
imul
les
jge
lahf
push
cmp
repnz
mov
lea
xchg
loope
sahf
aas
daa
pinsrw
lods
xor
mov
test
or
nop
cmp
out
mov
mov
jno
xchg
mov
and
mov
test
jbe
mov
insl
mov
xlat
lock
mov
scas
xor
add
pop
dec
cmp
pop
mov
mov
pop
pop
cmp
stc
ficomps
mov
lret
lret
out
xchg
and
orb
dec
add
movsl
enter
lcall
fisubs
push
jo
sahf
xor
imul
xchg
sbbl
sub
pop
mov
lods
stos
out
mov
inc
mov
xor
sub
into
xchg
xor
test
mov
push
adc
insl
mov
cli
notl
mov
iret
out
test
in
pop
out
mov
jb
add
and
bound
and
mov
and
movsb
in
mov
lahf
outsl
xchg
cmp
or
mov
cmc
xor
shrb
adc
aam
cmp
and
xor
cmc
jne
adc
clc
sub
jmp
sti
sub
fidivl
aad
mov
xchg
cmp
pop
test
sahf
pop
cmpsb
idivl
loop
dec
adc
xor
jge
clc
pop
add
clc
in
adcb
clc
shlb
out
and
les
adc
fwait
out
push
jmp
test
push
rcrb
and
adc
jne
jo
shufps
adc
lea
test
add
clc
in
scas
mov
shll
jae
xchg
dec
mov
and
outsl
imul
aas
dec
dec
mov
sbb
lods
inc
inc
add
add
rolb
cli
inc
jmp
imul
testb
add
lds
aas
sbb
jno
in
and
push
arpl
out
cld
ret
xchg
xlat
mov
xor
stos
mov
cmpsb
mov
and
push
das
push
jmp
lea
inc
cmp
adc
icebp
sahf
xchg
lods
popf
int
dec
sub
sub
pop
popf
mov
or
dec
in
clc
loope
or
sub
cmpsl
pop
sbb
sbb
out
mov
xchg
out
pushf
jle
xor
push
out
aas
xor
loop
pop
ja
xor
dec
jecxz
mov
cmp
lods
cmpsl
mov
adc
les
loopne
daa
fisttpl
in
aas
sub
cmp
and
out
fstps
add
lods
gs
fimuls
ja
mov
aas
ljmp
aad
pop
je
push
adc
imul
in
lods
or
loopne
in
xor
data16
imul
cmpb
ret
bound
cmpsb
call
stos
aad
popa
test
xchg
push
lock
mov
fsts
mov
inc
aaa
jmp
cld
add
js
pop
xchg
mov
inc
movsl
lock
add
out
xchg
lods
push
ja
in
test
push
jae
stc
das
cmp
sub
push
sub
and
push
mov
cmpsb
or
out
nopl
inc
mov
mov
repz
push
scas
mov
sbb
mov
xchg
push
in
sbb
adc
mov
xor
cs
add
mov
mov
xchg
and
aam
arpl
insl
inc
das
leave
lcall
or
fistps
add
rcrb
rcl
out
loop
or
int
cmpl
mov
popf
add
in
xor
adc
push
sbb
in
shll
mov
stc
lahf
rcrb
dec
cs
jp
int3
fmull
ja
hlt
lods
mov
adc
cmp
dec
xchg
xor
popa
cli
in
sbb
jae
inc
pop
sti
fisttpl
les
rcr
mov
iret
jno
add
cltd
jo
mov
jmp
inc
pop
add
loop
jmp
pop
repnz
mov
sbb
test
outsl
add
cmpsb
test
inc
jb
into
cmp
xorl
xchg
out
pop
cmp
pop
mov
sub
mov
push
push
dec
test
dec
fistpll
mov
inc
xlat
mov
loope
cmp
pop
pop
repnz
cltd
mov
pop
mov
mov
mov
mov
loope
add
es
int3
fiaddl
mov
cmpsb
and
pop
mov
add
mov
mov
lcall
shr
sbb
ja
sub
lahf
or
jbe
repnz
xchg
outsl
fnstcw
push
ljmp
int3
enter
dec
movsl
cmc
push
cmp
scas
cltd
add
dec
mov
insl
cmp
gs
mov
jo
xchg
mov
addr16
jecxz
fdivrs
jecxz
ret
push
lret
jmp
iret
out
or
or
mov
mov
repz
sbb
insl
shl
ret
xor
pop
in
cmp
adc
repnz
popa
cmp
dec
cmpl
pop
push
push
popa
frstor
mov
mov
lods
cwtl
mov
pusha
dec
mov
or
mov
jbe
sbb
ljmp
add
arpl
sub
jo
sub
fcmovu
fcomps
adc
jmp
push
repnz
fildll
xor
notl
sbb
mov
xor
pusha
jae,pn
jmp
stc
inc
add
or
shlb
test
adc
mov
xchg
das
inc
repnz
push
jbe
xchg
in
jo
sti
mov
in
fidivl
sub
shr
addb
xchg
stos
push
in
sbb
xchg
sub
xchg
js
cmp
push
cwtl
xchg
sbb
test
xor
mov
push
cmp
ds
cmp
pop
fimull
sbb
pop
push
pop
cmp
orb
xchg
fucomip
cmp
and
xlat
stos
aaa
daa
jge
les
out
fildll
jno
cmp
scas
aad
das
jl
rcrl
or
mov
push
or
xlat
test
cmpsl
dec
push
xor
or
xor
adc
pop
adc
lea
movsl
xchg
shll
lods
cmp
push
shl
add
dec
gs
xchg
push
inc
imul
std
aas
dec
inc
das
daa
mov
mov
xchg
mov
in
cmp
insb
or
fstp
lods
out
pop
cmpsl
xor
add
sub
dec
xor
or
test
mov
push
cmpsb
test
mov
or
fsubs
adc
in
std
insl
fidivs
push
adcb
fpatan
xchg
sub
in
sti
inc
gs
push
fnsave
cmpsb
stos
pusha
int
roll
call
sub
or
pusha
push
cmp
mov
scas
rcr
ss
xchg
jnp
rolb
in
pop
test
inc
std
jb
jmp
push
push
inc
lret
mov
lcall
inc
cld
fcompl
and
in
xchg
fwait
ljmp
test
pop
cs
adc
fbstp
fbstp
mov
movsl
and
stos
testl
xchg
xchg
test
icebp
cs
adc
lds
loop
or
xor
sbb
dec
or
incl
addr16
and
adc
mov
sub
fnsave
push
inc
pop
jne
and
xor
lcall
mov
inc
mov
insl
cmp
sbb
or
pop
daa
mov
xchg
dec
inc
mov
inc
mov
mov
pop
dec
pop
dec
dec
push
mov
mov
ja
push
xor
jae
dec
andl
adc
jno
dec
lcall
jne
loopne
inc
sbb
or
in
cmp
xchg
arpl
test
je
jnp
leave
xor
jns
xchg
and
mov
icebp
ss
call
or
pop
loope
jge
add
leave
xlat
aas
loope
cmpsl
xchg
pop
and
mov
inc
cmp
rcll
mov
jno
je
mov
fsubrs
aad
or
sub
incl
data16
gs
add
addb
mov
enter
xlat
cld
cltd
cltd
sub
movsb
push
pop
dec
jnp
jbe
cmc
emms
insb
pop
ret
sbb
cltd
or
icebp
jmp
sbb
pop
popa
inc
pop
sbb
aam
push
sar
out
mov
pop
mov
movsb
out
adc
add
push
loope
movsb
int
shl
in
sahf
jle
adc
xor
xor
in
cmp
inc
fsubl
inc
sub
sbb
jge
leave
ret
lea
lahf
js
or
aad
popa
and
sub
xchg
dec
ret
test
mov
mov
decl
daa
addl
jg
out
data16
aas
and
inc
mov
test
aam
mov
mov
ss
or
movsl
shll
pushf
xor
int3
jae
and
push
xlat
insb
fmuls
push
fwait
out
or
adc
pop
ss
xchg
test
add
test
adc
xchg
lahf
int
shl
push
fcomps
xchg
dec
fcmovne
fs
jnp
add
jmp
xchg
adc
pop
int
or
ret
test
add
insb
repz
or
mov
iret
xchg
jecxz
lods
pop
jg
fdivs
call
mov
pushf
mov
dec
aam
hlt
jns
sbb
loop
push
sbb
repnz
mov
or
add
xchg
test
repz
in
lods
adc
dec
adc
or
ret
and
or
int3
lock
cmp
adc
mov
js
adc
lahf
xor
repz
ja
rcl
mov
jmp
xchg
dec
in
cwtl
negb
int
fcmovnbe
jno
gs
jns
in
pop
fst
rcrb
cmp
xchg
ret
pusha
dec
jo
imul
add
pop
adc
cmp
cmpsl
out
xchg
mov
pop
divb
popf
push
pusha
mov
pop
out
and
gs
outsl
inc
jno
movsl
and
lahf
ret
pop
test
je
mov
and
xchg
out
iret
jb
push
add
push
mov
xchg
push
pop
jl
cmp
lahf
xchg
ja,pt
jns
cmp
pop
nop
popa
push
aaa
cld
mov
jecxz
aam
fists
hlt
into
push
cmp
xor
clc
cmp
pop
cmp
movsl
sbb
and
fstpl
fadds
int
jmp
sbb
inc
rorl
xor
sbb
dec
in
subl
lock
pop
jae
sbb
rorb
add
das
cmp
cmpsl
or
push
jecxz
rolb
mov
stos
and
push
dec
insl
filds
adc
popa
jge
stc
mov
add
add
push
popf
fs
stos
add
pop
mov
rcrb
push
cltd
mov
push
in
test
repz
sbb
jae
add
pop
pop
mov
rcl
push
or
xor
test
jg
mov
scas
cli
pop
repz
ljmp
ljmp
outsl
out
mov
in
xchg
xchg
gs
ss
xchg
add
push
xchg
mov
fistpll
sbb
das
push
ja
cwtl
sbb
enter
cs
fwait
adc
cmp
decl
loope
int3
fstp
outsb
mov
jl
cwtl
jmp
inc
jbe
fdivrl
mov
mov
cmpsl
xor
cld
ljmp
outsl
push
andb
fcmovnbe
and
push
insb
ficoms
std
push
test
stos
dec
movsl
clc
jns
push
bound
sub
or
imul
clc
adc
adc
push
je
mov
roll
inc
pop
xchg
aas
xchg
sarb
sub
mov
add
outsb
pop
outsb
movsl
adc
test
adc
xchg
jmp
xchg
sahf
jecxz
stc
sbb
int
cmp
ljmp
pop
adc
inc
or
dec
addr16
cmpsl
inc
into
and
movsl
pop
and
test
dec
inc
pop
sahf
add
mov
imul
faddl
call
movsl
insb
je
add
cli
je
iret
fsts
adc
les
imul
jae
repnz
rclb
pop
loop
xchg
sub
mov
movl
dec
sub
insl
sbb
loopne
mov
push
clc
sub
ss
pop
bound
mov
or
mov
sbb
or
pop
add
sbb
mov
mov
jp
shll
insl
jo
xchg
jl
dec
aad
and
shrl
test
dec
add
ficompl
out
xchg
gs
mov
jns
xchg
push
mov
out
sti
jecxz
mov
and
mov
and
fs
jl
movsl
hlt
repz
adc
push
sub
addb
inc
cmp
cmpsl
inc
xchg
adc
mov
xor
inc
add
jl
sbb
out
jmp
xchg
stos
cmp
sub
shr
ja
mov
jno
je
in
lar
aad
rcr
pop
icebp
loop
mov
out
stc
fcmovu
movsl
cmpsb
scas
movsl
out
ss
mov
in
repz
stos
push
and
mov
movsl
insl
roll
xchg
add
aas
pop
and
mov
sub
mov
xchg
push
xchg
fisttpll
in
sbb
dec
leave
xor
popf
xor
mov
call
sbb
sub
out
xor
fcmovnb
mov
outsl
cmpsb
xchg
std
cwtl
and
in
or
in
daa
scas
or
cmpsb
aam
adc
xor
pop
jg
mov
jns
mov
push
cmp
fisttpl
lret
in
stos
repnz
mov
lea
and
or
movsb
rorb
and
xchg
push
arpl
mov
or
cmp
cli
data16
fcomi
aas
push
sbb
add
lds
popa
outsl
movl
mov
push
insb
rdpmc
mov
ljmp
dec
mov
or
data16
cmp
push
adc
pop
xchg
mov
fmull
adc
clc
fcompl
outsl
or
jle
pop
xchg
shlb
mov
push
push
and
cld
and
loope
out
ja
addr16
leave
mov
and
mov
test
in
cmovno
push
mov
pop
xchg
sbb
push
cltd
stos
je
shl
push
xor
xchg
xchg
or
cmp
out
rorb
and
jns
sbb
lea
orps
stc
mov
call
jno
dec
fildl
in
cli
movsl
add
ja
pop
mov
adc
sti
sti
pop
dec
mov
mulb
cli
ret
lds
hlt
aad
cmp
stc
and
pop
dec
scas
bound
hlt
orb
and
adc
push
pop
stc
xchg
and
fcompl
jns
push
popf
and
test
and
push
mov
adc
mov
adc
adc
cmp
out
jmp
insb
cmpsl
clc
out
fdivl
xchg
aad
push
aas
cmpsb
and
outsl
cmp
inc
push
mov
les
push
mov
sbb
jne
sub
and
cmc
add
pop
adc
scas
sub
jle
adc
ficompl
and
in
and
add
add
ds
mov
leave
movb
cmp
in
push
mov
adc
add
mov
jo
stc
in
loop
loopne
xchg
loope
inc
and
lcall
cli
enter
dec
xor
lret
adc
les
mov
out
lret
insb
push
dec
jmp
inc
adc
sbb
stc
ja
fldenv
push
and
aas
fdivl
idiv
ret
test
in
cli
daa
lods
jnp
imul
push
mov
insb
adc
xchg
push
je
mov
bswap
iret
cs
scas
xchg
rclb
and
mov
and
push
gs
pop
sbb
cwtl
pop
das
negb
cwtl
dec
addr16
es
loope
cmp
out
lea
loop
jbe
cmpsl
add
xchg
mov
in
jb
and
mov
out
sub
mov
push
movsb
push
add
in
in
or
aad
flds
adc
popf
movsb
and
xor
add
xchg
punpcklwd
cs
add
xor
out
sbb
cltd
ja
and
add
xor
lods
push
out
cmp
out
addb
int3
inc
jne
mov
dec
negl
int3
push
rcll
dec
cmpsl
js
lea
ret
mov
dec
ds
idivl
sbb
rcrl
and
lcall
and
and
mov
js
xchg
lea
rcrb
jo
rolb
mov
stos
mov
repz
std
imul
sbb
mov
xchg
jae
mov
mov
mov
mov
push
xor
cmp
push
lods
jne
inc
add
pop
push
int3
lods
in
sbb
push
iret
mov
pop
adc
dec
dec
add
cmp
fstpl
xor
arpl
hlt
cmp
clc
pusha
mov
jo
gs
jge
sub
pop
fldenv
fstl
or
jp
stc
aad
jecxz
xor
xor
mov
stos
imul
push
test
mov
xchg
mov
jg
sbb
sbb
lods
pop
sub
repnz
subl
rcl
sub
mull
clc
fiadds
leave
jno
mov
movsl
movsl
std
or
mov
in
enter
popa
push
and
push
lret
pop
pop
jne
dec
mov
popf
push
sahf
shrl
addr16
int
sub
add
loopne
lahf
pop
pop
mov
push
mov
and
and
test
mov
stos
xchg
sbb
ljmp
pop
sbb
into
pop
mov
gs
std
bound
pop
inc
jp
sub
bound
in
es
jle
inc
daa
call
popf
pushf
cmp
adc
fstl
mov
test
jl
xor
inc
mov
adc
in
inc
pushf
inc
shl
and
cli
dec
push
insl
xchg
push
shlb
rcrb
push
mov
test
sti
and
mov
mov
loope
or
sbb
dec
aas
mov
daa
daa
ljmp
cmpsb
inc
cmpsl
inc
mul
test
jmp
xchg
dec
dec
inc
mov
xchg
popf
mov
movsb
mov
pop
mov
popf
das
icebp
cmp
insl
ljmp
adc
inc
pop
fs
jge
mov
add
loope
mov
xchg
dec
mov
push
xchg
mov
lcall
cmp
push
jo
gs
fwait
add
mov
or
jno
and
xchg
sub
cmpsb
inc
scas
mov
inc
stc
std
pop
ja
push
pop
cmpsl
std
xor
lods
popa
ret
dec
pop
sub
bound
push
dec
lods
xor
sbb
scas
int3
gs
dec
je
sbb
cmpsl
out
lcall
dec
mov
xchg
bound
jmp
lahf
add
ss
mov
mov
mov
mov
push
mov
sbb
mov
bound
out
fstps
ficompl
lea
xchg
add
insb
pop
mov
jmp
mov
xchg
lret
scas
sbb
sub
xor
stos
dec
loopne
adcb
or
sub
pop
stos
lahf
pop
xor
les
adc
ret
add
mov
xor
imul
inc
and
unpcklps
int
cmp
ljmp
sbb
cs
pop
sbb
pop
cmpsb
stos
in
push
lret
hlt
or
lret
mov
dec
int3
mov
popf
or
and
rclb
cmpsl
leave
jnp
pop
adc
mov
xor
iret
hlt
push
add
lds
int3
loop,pn
ljmp
push
mov
popf
std
fildl
mov
add
std
cmpl
cmpl
jno
dec
imul
cmp
mov
imul
les
test
mov
pushf
stos
mov
inc
test
inc
popa
fwait
addb
popa
int3
je
cmpsl
sub
mov
das
sbb
xor
pop
jmp
or
push
push
pusha
movswl
sub
nopl
jle
loope
push
icebp
cmc
ja
and
bound
adc
mov
and
jnp
xchg
and
and
jb
fwait
div
mov
int
loope
inc
mov
xchg
subl
or
dec
pop
ror
xchg
aam
or
cmpl
xchg
mov
xor
ret
stos
mov
cmp
popa
repz
incl
pop
jge
testb
add
daa
test
inc
push
out
repz
shlb
cmp
ss
lds
imul
adcl
pop
mov
sbb
das
ds
outsb
out
pop
cmp
add
ja
mov
into
dec
and
mov
cli
push
int
cli
or
pop
dec
and
jl
rolb
in
pop
sub
add
cwtl
cld
addr16
mov
xchg
inc
cld
js
xchg
xchg
cld
xchg
pop
mov
cmpsl
inc
pop
xchg
pop
push
xchg
jb
jae
outsl
sbb
mov
fwait
outsb
je
dec
push
mov
repnz
inc
cmp
sbb
js
dec
nop
adc
sarb
add
jne
out
in
lret
mov
stos
repz
out
aaa
adc
or
pop
es
or
repz
in
fs
lret
shlb
sub
popa
ret
pop
pop
lahf
add
inc
dec
lods
sub
subl
xchg
pop
mov
divl
and
test
cmc
cmp
mov
push
mov
xchg
jl
pop
jnp
jp
push
hlt
xor
lahf
mov
sub
nop
jmp
jecxz
sub
xchg
xor
dec
or
xlat
mov
mov
pusha
xchg
jecxz
or
outsb
cmpsl
mov
sarb
mov
fists
test
and
cmp
mov
push
fcoml
pop
rolb
xchg
mov
lret
xchg
lret
imul
mov
pop
mov
jns
push
insb
jg
out
ss
xchg
mov
xchg
xchg
inc
imull
and
mov
loope
outsl
sub
subl
pop
ja
fisttps
mov
lods
jle
cmp
sti
ja
add
ret
dec
stos
push
sbb
js
into
dec
jl
or
inc
inc
and
hlt
aad
dec
int
movsb
adcb
sbb
mov
xlat
sub
jp
cmpsl
ret
or
sahf
sub
sbb
pop
add
es
jnp
lret
scas
push
das
aas
push
test
adc
jp
xor
mov
sarl
repz
roll
jecxz
cltd
dec
cmp
cltd
push
push
rorb
dec
outsl
bound
out
inc
movsl
xor
pop
push
and
push
dec
cmp
mov
decl
clc
dec
sbb
sbb
out
iret
dec
push
sbb
cltd
mov
xchg
mov
sahf
scas
xchg
push
leave
mov
push
pop
dec
sub
jecxz
les
lods
sti
in
arpl
jp
repnz
cltd
fwait
inc
jl
dec
aad
ret
stc
push
faddl
je
jne
mov
jne
test
ret
popa
lea
bound
pop
jl
xchg
scas
push
test
xor
jo
push
flds
andl
push
daa
pop
cmp
fsubrs
das
push
lahf
mov
pusha
sbb
lods
outsl
sub
add
mov
sub
popf
sub
mov
add
mov
arpl
push
nop
dec
mov
jp
ret
ljmp
call
or
arpl
sbb
mov
jmp
sub
xchg
aad
ret
jecxz
fs
clc
shrl
nop
notb
or
ret
push
outsl
lret
dec
pusha
mov
and
clc
adc
nop
or
cs
add
data16
lahf
in
xor
or
mov
mov
xchg
out
jle
push
mov
sub
scas
ja
inc
mov
sub
in
or
scas
jmp
jl
lret
dec
push
jle
stos
adc
xlat
fstpl
ds
fimuls
mov
jne
ljmp
aas
mov
xchg
push
fisubl
cmp
inc
adc
pop
rcr
push
fnstsw
push
xchg
orl
add
cmp
sbb
mov
mov
inc
rolb
jp
cmp
bound
or
push
lock
cmp
sbb
or
pop
leave
repz
cmc
std
sbb
sbb
or
dec
mov
xchg
sub
adc
pusha
in
popf
aam
pop
nop
lcall
sbb
aad
je
or
and
test
outsl
mov
shrl
lret
mov
inc
pop
loop
cmpb
rcrb
js
je
sbb
cmpsb
das
mov
into
mov
mov
jo
inc
enter
dec
jns
gs
out
jne
dec
lret
add
mov
in
sub
imul
test
sub
lcall
cwtl
add
pop
push
in
cmp
sbb
lods
pop
push
pop
insl
shrb
or
and
dec
jg
in
xchg
xor
dec
adc
jbe
movsb
loop
test
or
insb
decl
aaa
pop
mov
movsl
mov
roll
mov
jbe
insl
lds
ret
shll
pop
stos
outsb
idiv
mov
xchg
mov
cmpsl
jge
xor
xchg
sub
sub
pop
or
mov
lcall
lods
mov
shll
jg
cmpsl
sub
adc
ljmp
iret
call
mov
mov
push
cs
fdivrs
add
aam
jg
aas
push
push
mov
fimull
int3
sti
cli
xor
or
dec
jge
push
xchg
push
and
pushf
mov
scas
jns
mov
pop
jge
mov
call
mov
gs
mov
mov
imul
movsl
cmpb
mov
fimuls
adc
iret
fisttps
xchg
push
lcall
xor
les
pushf
pop
dec
jbe
stos
fdivrp
sbb
xchg
push
pop
std
cld
adc
and
out
push
repnz
repz
sbb
out
ja
pop
jg
jns
test
lret
or
push
jns
jl
sub
mov
fmulp
dec
repz
cmp
ljmp
cmc
lock
scas
sub
xor
pop
cwtl
sub
pop
lock
cld
jmp
mov
push
testl
fadd
insl
cmpb
repnz
mov
pop
cmpsb
mov
inc
xor
sub
test
lea
push
xchg
sahf
movsb
mov
push
cli
std
or
inc
adc
jae
repnz
pop
bound
push
out
scas
data16
dec
test
inc
scas
mov
mov
popf
add
jnp
sub
mov
jmp
inc
sarl
or
fwait
dec
dec
cmpsb
sbb
jl
gs
inc
in
pop
fldcw
sgdtl
sbbl
cld
dec
cmpsb
sbb
dec
imul
fdivrl
jae
pop
fwait
cs
sub
lret
jbe
inc
stc
push
je
mov
call
aam
testb
inc
es
inc
push
lahf
lcall
int3
xchg
sub
aas
pop
or
jp
int
cli
lods
test
cltd
int
faddl
lea
cmp
ret
jl
xchg
rcll
popl
cmp
test
xlat
xor
ss
cmc
mov
pop
clc
mov
cli
jne
sub
adc
push
ret
fildl
imul
leave
pop
stos
lds
insb
leave
jl
icebp
insb
out
add
xor
sub
and
hlt
jecxz
daa
mov
pop
scas
inc
stc
lret
dec
mov
and
imull
lods
and
into
mov
adc
fs
lods
aad
nop
lret
data16
fstpt
ds
or
jnp
jb
mov
pop
jns
imul
mov
jo
cmc
lods
lods
mov
mov
dec
and
push
jp
in
inc
inc
push
xchg
add
jnp
pop
stos
notl
or
inc
negb
inc
dec
sub
mov
insb
mov
pop
add
or
fcomps
test
out
sbb
movsl
int3
cvttps2pi
mov
arpl
ret
add
cmp
call
push
lea
ucomiss
ret
push
adc
push
hlt
jo
leave
stc
dec
inc
addr16
xchg
pop
stos
push
inc
in
mov
add
fdivl
add
add
subb
icebp
xor
imul
rclb
insl
outsb
pop
gs
and
lods
mov
daa
outsl
add
sbb
loopne
xor
in
push
call
js
xchg
xchg
add
lds
addr16
rcll
out
dec
out
xor
adc
push
test
movsb
call
popa
or
sub
fisttpll
pop
test
rclb
lds
ljmp
fdivrl
dec
jb
add
lock
mov
xor
xchg
fs
ss
sbb
nop
mov
cmp
lahf
loopne
mov
push
loope
sbb
fldcw
sahf
cltd
mov
out
cmp
and
push
pop
fstps
repz
mov
jl
or
fstpl
jge
or
dec
filds
and
mov
fdivrs
jae
mov
les
call
sub
fistl
jbe
jp
push
mov
dec
out
adc
sbb
dec
mov
jb
or
into
or
je
xor
inc
adc
jns
sub
xchg
arpl
ficomps
repnz
stos
leave
icebp
outsl
gs
daa
shrb
dec
stc
mov
lret
adc
pop
arpl
xchg
sbb
js
sahf
fidivl
jae
in
shll
add
mov
xchg
cmpsb
push
js
test
fnstenv
ljmp
out
inc
push
loope
sbb
pop
mov
sbb
sbb
pop
mov
lcall
outsl
loope
xchg
dec
cli
dec
test
sbb
lea
jmp
adc
adc
mov
or
inc
orl
das
out
fadd
sub
incl
sub
adc
test
mov
pop
in
mov
andl
inc
jg
dec
xchg
pop
test
sbb
dec
jp
mov
mov
mov
lcall
repnz
nop
aam
adc
xchg
mov
inc
call
or
mov
push
mov
adc
and
fidivs
jmp
movsb
iret
or
lret
mov
add
inc
push
dec
mov
jns
adc
loop
mov
or
xchg
cmpsb
xor
cmp
lods
dec
push
pop
scas
js
jle
imul
mov
push
pop
add
add
popf
orl
lret
fs
and
sub
das
je
leave
aad
adc
cmp
mov
sub
mov
fisubrl
mov
fs
xchg
adc
jb
bound
mov
pop
mov
mov
pusha
dec
ljmp
pusha
cmc
fs
lahf
mov
mov
out
stos
xchg
or
and
lcall
mov
cmp
push
aam
iret
jb
inc
fsubr
frstpm(287
mov
push
decb
or
jnp
sub
cmp
fwait
xor
sti
lods
ret
mov
inc
mov
and
pop
ljmp
jmp
es
arpl
popf
xchg
lds
or
dec
outsl
imul
cmp
outsb
fnstenv
xchg
jg
xchg
adcb
and
mov
xorl
mov
and
adcl
mov
push
fbld
xchg
fimuls
push
sub
add
arpl
stos
or
push
and
mov
loopne
in
jmp
neg
mov
cmp
shll
pop
out
imul
ja
aad
xchg
out
cmp
aaa
cmc
dec
pop
push
bnd
or
xor
out
xchg
sub
jb
dec
nop
push
shr
and
aad
arpl
imul
lods
cmp
int3
or
popa
mov
shll
ficompl
adc
jne
ds
pop
mov
mov
push
rorb
and
and
fcompl
fwait
mov
or
adc
int3
xlat
js
test
dec
loopne
out
jno
push
out
test
mov
or
add
lea
hlt
dec
mov
insl
rol
sbb
mov
xchg
mov
movsb
out
lcall
mov
push
insl
in
mov
dec
xchg
dec
outsl
sbb
mov
jp
movl
and
cmc
aad
xor
mov
lret
mov
sub
mov
or
pushf
inc
pop
xlat
lcall
fmul
nop
dec
add
push
icebp
sbb
jb
and
sbb
lea
incl
sbb
rorb
test
daa
jb
scas
xlat
subl
push
mov
jno
and
xchg
daa
mov
inc
jbe
mov
xor
inc
lods
rorb
adc
pop
pusha
lret
adc
mov
sbb
aaa
mov
insl
and
xor
adcb
insl
inc
shrl
sub
dec
cli
loope
or
mov
mov
or
or
das
andb
mov
mov
arpl
sbb
dec
out
jno
xchg
scas
jmp
adc
sbb
cltd
dec
add
mov
ror
push
aaa
push
jle
pop
inc
test
mov
dec
in
shll
mov
fstpl
push
push
daa
mov
dec
mov
or
add
in
mov
push
fwait
push
stos
push
jmp
enter
imul
push
dec
pop
cld
ljmp
lret
inc
pop
cld
push
fsubrl
pop
adc
push
and
inc
stc
jecxz
or
ljmp
ret
mov
mov
mov
mov
add
aaa
jecxz
add
xor
testl
out
cmp
push
iret
xor
pop
adc
sarw
mov
into
jle
or
dec
or
cmp
cld
lahf
ds
clc
inc
or
sahf
and
xchg
sub
imul
push
ds
dec
or
pop
pop
cs
outsl
icebp
lock
call
add
pusha
scas
roll
mov
cld
sub
mov
push
push
push
cmpl
push
frstor
arpl
bound
sub
lea
push
lahf
inc
sbb
inc
int3
cld
jb
push
dec
lcall
sub
sbb
lcall
imul
rol
cmc
out
mov
popf
rcl
push
ja
sub
aam
mov
and
scas
jbe
jmp
jbe
sub
out
je
mov
loop
mov
inc
cld
cmpsb
adc
and
aam
dec
mov
pop
mov
hlt
andl
sbb
es
aas
cmp
and
inc
mov
idivl
pusha
das
add
loope
jbe
ljmp
adcl
add
dec
mov
cmc
jo
out
cltd
iret
scas
aam
add
cmp
sub
jb
inc
push
test
popf
xor
sbb
nop
jbe
shrb
add
popa
sbb
sbb
xchg
and
xor
into
cli
sbb
adc
cmpsl
push
mov
cld
push
clc
add
or
xchg
lods
sbb
std
cmp
mov
jmp
es
xor
dec
jp
mov
mov
les
mov
pop
stc
das
cld
mov
jmp
outsb
test
inc
inc
jl
daa
add
sub
aas
adc
cmpsl
subb
cmp
adc
lret
dec
lret
pop
jbe
pop
xor
xchg
mov
pop
mov
mov
xorb
add
fiadds
xor
inc
sbb
and
std
pusha
out
fs
ja
int3
push
scas
sti
jmp
cmp
data16
push
pop
shrb
addr16
mov
cmp
stc
adc
roll
inc
flds
jne
sbb
sbb
scas
sbb
mov
sbb
inc
fwait
xchg
push
sub
jmp
jno
jb
jmp
popf
mov
lods
cmpsl
pop
jne
pop
push
test
mov
xor
jle
lock
pop
dec
divb
out
sub
movsl
mov
push
mov
roll
pop
adc
ret
xlat
xlat
in
push
cltd
outsb
pushf
arpl
pop
fldcw
cmp
sub
mov
loope
out
cmp
pop
fcos
inc
or
cltd
into
inc
cmc
out
cld
xchg
xchg
mov
or
xlat
data16
fisubs
inc
jo
cmc
rolb
sbb
fldl
fcompl
sub
test
jns
repnz
and
push
data16
mov
and
pop
out
sarb
aam
out
mov
cmc
mov
lea
shrl
fcompl
repnz
pop
testb
mov
xchg
mov
sbb
out
out
inc
in
xchg
gs
cmc
mov
outsl
sub
jo
add
xor
lret
aam
out
adc
or
cmpsl
jp
sbb
das
rorb
repnz
sub
xchg
dec
add
push
xlat
xchg
push
int3
aam
push
push
loop
mov
push
leave
in
stc
fsub
jb
add
push
lods
nop
jecxz
mov
out
jnp
mov
push
test
out
sub
push
sub
adc
dec
ja
jo
fsubrs
pop
xchg
jg
jmp
xor
fs
adc
mov
mov
xchg
jmp
inc
aam
cs
aad
or
xchg
lcall
and
cmc
and
leave
xchg
sub
mov
cld
cmp
ljmp
mov
push
rorl
movsl
lock
or
mov
imul
dec
pop
add
outsl
dec
loopne
cmpsb
les
std
cltd
xor
mov
ret
test
paddsw
pop
cmp
push
xchg
popf
lahf
mov
rolb
imul
inc
lods
fwait
sbb
xor
cmpsb
int
lahf
ret
push
sub
jnp
jns
movsl
xchg
cmp
mov
out
push
pop
add
mov
ficoms
mov
cmpsl
cmpsl
push
sub
insl
daa
fdivrs
and
movsl
push
sbb
mov
pushf
aad
into
push
add
lods
arpl
push
pop
into
mov
loope
mov
xchg
xchg
pop
pop
aad
fwait
sahf
outsl
dec
cli
dec
sahf
jg
push
iret
scas
mov
lret
ss
sbb
jge
mov
cs
pop
push
sbb
call
loope
or
mov
mov
bswap
xor
pop
jnp
repnz
outsl
in
mov
out
and
insl
and
xor
cmp
loop
sub
stc
xchg
push
inc
cmp
mov
mov
insl
adc
mov
adc
dec
push
test
jno
enter
push
push
insb
adc
fs
call
adc
test
mov
mov
cmp
mov
arpl
popa
outsb
sbb
lods
mov
jecxz
sub
stos
orb
es
sbb
out
sbb
inc
lret
sbb
mov
insl
pop
fmull
aas
mov
pop
adc
cmpsb
add
pushf
cmp
add
sub
sbb
add
jns
xchg
push
insl
lea
jae
xchg
pop
enter
scas
int3
adc
lret
dec
xchg
mov
data16
call
push
sahf
stos
pop
pushf
lret
insb
adc
outsb
test
cmp
repz
cltd
insl
and
pop
lods
inc
cld
out
push
shrb
sub
mov
mov
mov
and
pop
mov
or
movsl
test
fadds
mov
stc
push
mov
jmp
jecxz
sbb
stos
je
fwait
into
adc
hlt
je
mov
inc
fdivs
loopne
or
rclb
outsl
mov
mov
mov
fucomi
nop
call
push
cmovo
sub
inc
xchg
and
das
push
outsb
pop
sbb
sub
push
ds
enter
and
andl
adcl
movsl
and
cs
setnp
bound
leave
ficoms
xor
mov
and
jp
arpl
ja
mov
daa
adc
cmpsl
sbb
dec
inc
in
fwait
lock
addl
fistpl
popf
ja
push
in
dec
lahf
stos
aas
pop
mov
xor
dec
cmp
in
xor
sub
iretw
push
mov
psadbw
mov
push
mov
adc
jp
inc
sahf
lret
stc
imul
xchg
lahf
xchg
int
jne
push
popa
ret
mov
sahf
mov
rcll
fcmovu
mov
sbb
idiv
push
mov
xor
pop
iret
std
cmp
test
enter
loop
pusha
sbb
lret
iret
push
sub
loopne
adc
sarl
lahf
data16
xor
mov
adc
or
push
enter
mov
sar
in
sarl
inc
leave
mov
inc
add
push
pop
and
scas
aas
add
push
mov
es
xchg
inc
ds
popf
scas
sahf
lahf
lods
inc
fsts
rclb
adc
push
add
or
sub
mov
shll
out
jnp
xchg
mov
sbb
sbb
sbb
hlt
int3
adc
pop
jmp
fwait
enter
xchg
out
xchg
je
sbb
loop
bound
test
add
ds
mov
sbb
ds
and
pop
fsts
cld
and
xor
int3
mov
push
rclb
sub
das
xchg
inc
arpl
mov
cmpsb
cmc
dec
popf
sarb
test
rcl
add
xchg
out
or
and
call
out
xor
inc
cmp
lret
pop
mov
fbstp
jb
xor
cmpsb
cwtl
leave
mov
std
ret
dec
pop
jg
dec
cmp
in
imul
cltd
insb
out
lcall
shll
sbbl
xchg
std
push
daa
rcrb
push
and
mov
test
jbe
jl
push
xchg
add
lods
lock
dec
xchg
jge
jp
es
jo
cwtl
jmp
repz
outsl
mov
nop
iret
inc
shl
fisttps
pop
jbe
dec
push
mov
jbe
fidivs
es
adc
xchg
rclb
jbe
mov
mov
fprem1
xor
test
jecxz
xchg
mov
push
add
shll
cmpsl
push
aas
jno
aas
pop
popa
jae
cmpsl
testb
icebp
xor
push
pop
cli
xor
adc
js
cmp
hlt
test
rorl
jg
sar
cmc
outsb
inc
sub
pop
and
sub
push
xor
xchg
push
pop
and
xor
xchg
dec
in
mov
aad
pop
dec
or
ds
sbb
adc
lret
ja
out
and
add
out
cmpl
sbb
add
in
out
jo
fildll
loope
in
dec
mov
xchg
jle
push
cld
lods
jmp
jge
mov
inc
lea
inc
xchg
sbb
add
fs
pop
in
sub
cmp
fildl
and
vpshufhw
fstpt
xchg
dec
mov
jl
adc
stc
popa
mov
mov
push
pop
inc
mov
arpl
out
test
xor
mov
mov
adc
mov
cld
fcmovnb
mov
loopne
movsb
fnstenv
out
push
cmp
inc
push
mov
adc
jbe
sbb
and
pop
leave
xchg
cmp
xchg
incb
jno
fisttps
ss
mov
push
jp
jmp
jb
test
orb
cmp
inc
pop
or
inc
mov
add
sbb
fwait
xchg
mov
stos
stos
adc
or
out
rolb
or
into
xor
xchg
and
mov
idivl
add
mov
test
cltd
or
into
add
mov
int
push
repnz
cmpsb
push
das
push
mov
sub
adc
fs
int
adc
inc
dec
pop
cmp
in
mov
stos
push
push
mov
cmp
lock
xchg
imul
enter
cmp
rorb
fmuls
sbb
int3
cmpsb
out
int
inc
stos
adc
and
imul
dec
push
inc
add
cmp
mov
enter
movsl
mov
inc
ficomps
adc
lods
sub
mov
jns
shrb
pop
mov
inc
mov
xor
fidivs
imul
insb
test
jmp
scas
lock
pop
or
adcb
push
call
and
xchg
add
addb
push
sub
sti
insb
pop
loop
pop
mov
xor
fsubrl
and
xchg
xor
lahf
out
inc
fwait
jbe
cmp
mov
inc
scas
lds
cmp
push
lret
idivl
and
lock
and
ljmp
push
jo
push
mov
push
rorb
mov
push
pushf
lods
out
dec
pop
and
ds
pop
jnp
mov
pusha
test
push
nop
cld
je
popf
out
mov
lds
cmp
ss
push
cmp
xchg
leave
jecxz
mov
xlat
mov
jp
repz
mov
test
cmp
fcoms
adc
pop
cmp
movsl
add
or
mov
mov
ret
pop
push
adc
imul
sub
pop
stc
adc
lds
scas
or
push
or
call
xor
sub
loopne
pop
push
je
jbe
inc
or
insl
push
mov
in
add
movsb
sbb
cmp
cmp
aaa
jne
pop
test
cmc
push
cmc
cmc
dec
cmp
pushf
push
ljmp
fidivl
test
mov
insl
add
arpl
scas
aad
mov
pop
int3
pop
or
in
sbb
int
lcall
in
xor
jbe
xor
je
inc
cmp
icebp
push
repnz
and
mov
mov
sbb
and
in
sub
push
xchg
push
ja
xlat
pop
pop
test
into
rol
pop
gs
lahf
pop
xchg
sahf
adc
inc
sti
adc
aaa
push
stos
or
jmp
rorb
scas
sbb
push
add
call
cwtl
imul
mov
or
or
add
fidivl
bound
xor
ss
aad
dec
adc
repz
das
mov
test
clc
mov
out
push
mov
arpl
adc
and
lret
mov
mov
xchg
mov
lock
cmp
in
jnp
insb
sbb
imul
je
imul
test
adc
stos
sub
sbb
lret
imul
push
xchg
loop
aas
push
ja
xchg
pop
repnz
sarl
fildll
mov
popa
aas
sub
jbe
dec
and
scas
push
sub
in
clc
orl
sbb
jnp
ret
pop
and
shl
jbe
pushf
or
jl
test
movsl
sti
pop
adc
stos
sti
add
call
add
clc
pop
stos
scas
add
stc
sbb
pop
xor
in
push
hlt
iret
stos
or
push
jge
pop
push
sub
jo
clc
dec
sbb
or
jne
mov
and
mov
add
add
dec
mov
xchg
inc
ljmp
cmc
ja
popf
fucomip
mov
mov
movsb
jno
jle
cmp
cwtl
arpl
inc
xchg
pop
out
xchg
mov
mov
mov
fcompl
mov
jg
das
jg
push
or
lret
aaa
fwait
sub
ja
sbb
shrb
out
and
cmp
lcall
xor
insl
cmp
add
dec
testl
imul
xchg
outsb
mov
lods
ljmp
fildl
sub
mull
stos
adc
ret
ja
lods
mov
xchg
sub
call
imulb
and
xchg
xor
dec
clc
xchg
sbb
xchg
fwait
xor
mov
add
call
cwtl
je
mov
mov
push
lea
popf
pop
push
lret
mov
mov
push
fdivl
push
aam
adc
dec
sub
jae
stc
or
and
add
pop
push
pop
mov
dec
jecxz
mov
lds
out
popf
cs
cmp
setp
out
notb
fsubp
in
filds
clc
xchg
pop
stos
ds
pop
lahf
add
scas
sub
test
movsb
xor
test
cmp
add
mov
ljmp
and
xchg
idivb
repz
out
pushf
mov
jp
xchg
mov
std
cmp
stc
aas
inc
fwait
sti
fildl
or
jnp
xchg
stos
fwait
outsl
or
dec
jnp
xor
jae
mov
mov
sub
mov
push
les
xlat
out
or
in
insb
pop
idivb
jge
dec
icebp
sub
repz
ds
jo
cli
cli
lret
bound
xchg
test
cld
xchg
dec
cli
hlt
jbe
int3
and
loop
test
xor
mov
xor
inc
add
test
into
outsb
fwait
jecxz
add
sbb
ret
cmc
lcall
pop
add
into
mov
mov
mov
mov
rcrb
ljmp
pop
nop
sub
mov
fsubl
or
outsl
in
mov
dec
xchg
lahf
or
or
int3
sahf
or
test
test
movsb
es
mov
mov
xor
int3
sub
sbb
in
mov
popf
stos
xchg
stos
mov
adc
repz
cmp
fiaddl
xchg
sub
bound
xor
rcll
mov
sub
fists
mov
or
add
js
or
cli
push
mov
stc
xchg
push
repz
das
das
insb
mov
popa
ret
clc
mov
cmp
stos
pop
and
test
mov
fsts
call
rolb
mov
out
xor
inc
add
mov
inc
inc
pop
and
dec
push
mov
bound
icebp
addr16
stc
or
fistpl
mov
inc
jge
cmpl
lret
inc
sarl
push
xchg
shrb
jp
push
repz
scas
sbb
jbe
enter
sub
lods
rcrl
jno
pop
jno
mov
mov
xor
rcll
mov
push
arpl
in
jp
xchg
out
jbe
ret
xchg
je
dec
fs
dec
fistps
lods
daa
test
repz
mov
repz
leave
or
ficoms
pusha
xor
push
xchg
jmp
jae
pop
mov
inc
daa
sub
jl
enter
outsl
test
cld
pop
enter
loopne
jno
dec
movsb
xchg
adc
pop
sbb
jmp
cmpsb
arpl
xor
in
add
or
dec
xchg
cmpl
mov
cmp
add
jb
lods
adc
lret
or
outsb
js
add
ret
cmp
mov
pusha
sbb
dec
test
mov
dec
adc
inc
dec
stc
movsb
push
cltd
cwtl
lea
cld
ret
pop
and
loopne
sub
xchg
das
mov
xchg
pop
xor
jecxz
addr16
fcoms
sbb
sub
outsl
subb
xchg
dec
imul
sahf
cmpsb
mov
lds
mov
addl
xchg
repnz
xchg
dec
sbb
out
mov
fnstsw
push
test
into
loopne
jb
mov
push
jnp
das
enter
jle
xchg
mov
push
add
int3
in
out
xchg
cmp
add
loop
sbb
mov
mov
add
xor
mov
aam
lods
fisubs
fldenv
shr
jg
push
sbb
pusha
test
pop
sub
lea
iret
insb
cltd
cmpsb
inc
adc
lahf
cmp
imul
das
test
rol
arpl
jge
xor
dec
xchg
pushl
mov
stos
pop
cmp
test
imul
jg
sub
mov
mov
dec
ss
dec
movl
aaa
loope
imul
js
outsl
ficomps
jb
sti
es
or
jmp
sbb
mov
or
or
or
stc
pushf
dec
push
mov
inc
and
aam
mov
mov
lods
mov
jecxz
pop
pushf
or
out
out
repnz
jno
filds
add
adc
lods
sub
cmpsb
mov
or
mov
mov
mov
nop
int3
outsl
mov
jle
mov
pop
mov
inc
pop
fsubrl
push
mov
outsl
out
mov
or
int3
mov
jnp
mov
push
mov
pusha
pop
loope
sbb
cld
adc
lods
ljmp
mov
jle
loop
mov
cmc
leave
add
mov
jp
inc
aaa
outsb
or
jbe
in
adc
xchg
sbb
test
insl
push
lods
test
cmp
or
pop
xor
or
fsubr
mov
sub
dec
xlat
jae
or
ror
cmpsl
pop
fstl
arpl
cmpsl
pop
das
and
fcmovbe
testb
jg
mov
test
mov
ds
neg
pop
ss
or
xchg
int3
sbb
nop
daa
out
cmp
sub
jnp
ret
adc
lea
test
mov
mov
sti
in
inc
je
push
cli
push
push
incb
sbb
hlt
add
lock
iret
pop
mov
fwait
mov
adc
fs
sub
ja
std
js
sub
pop
arpl
stos
mov
sbb
rorb
sti
add
pop
xor
stc
decl
lock
push
add
cli
out
repz
xchg
shlb
jbe
insb
xor
sahf
xor
popa
push
dec
sub
shl
cmp
jle
dec
jns
dec
outsb
addr16
cld
outsb
test
cmp
loope
xchg
call
mov
scas
push
xor
push
hlt
test
fmulp
int
pop
pop
inc
inc
push
fwait
dec
or
pop
xchg
fiadds
popf
subl
cmp
xchg
into
mov
jne
into
fcomp
and
mov
fxch
lahf
inc
inc
xor
xor
pop
int
stos
pop
pop
mov
sub
rorb
jae
jno
jbe
out
decl
mov
dec
xor
jge
test
push
pushf
adc
jns
mov
xor
in
mov
mov
clc
test
fidivs
push
shld
ljmp
fstpl
sbbb
cmc
inc
enter
mov
popa
stos
mov
movsl
jbe
shlb
mov
cmp
mov
fildll
jns
test
in
push
push
leave
cmp
cmp
pushf
enter
rclb
or
daa
daa
int
or
scas
leave
mov
xor
mov
shlb
popf
dec
out
dec
lcall
inc
and
dec
pusha
xchg
out
test
test
sub
cltd
testb
cmp
xchg
xchg
xor
jns
ja
add
negl
mov
das
daa
lods
cmpsl
js
jno
es
test
add
or
mov
dec
and
cmp
xchg
push
add
out
dec
dec
add
cwtl
mov
inc
cld
push
hlt
add
and
popa
pushf
adc
push
push
sti
add
xchg
jle
sbb
mov
push
test
mov
dec
xlat
and
cmc
outsb
inc
jnp
push
mov
nop
pop
xor
xchg
icebp
jle
stc
mov
adc
mov
add
in
dec
sub
and
xor
cmp
mov
imul
test
hlt
ret
cli
in
push
jg
rorb
int
js
xchg
dec
movsl
adc
push
and
dec
jb
xor
or
adc
adc
stos
pop
xchg
jno
fcomps
dec
je
fidivrl
mov
dec
inc
mov
dec
inc
mov
push
dec
int
add
nop
imul
cmc
addb
cmp
outsl
dec
mov
sub
sbb
adc
pusha
push
push
dec
cmc
adc
test
cmp
int
cmp
sbb
jnp
mov
ss
mov
adc
leave
jmp
pop
iret
sbb
gs
aam
lret
movsb
js
mov
xchg
testl
data16
mov
loop
mov
mov
imul
gs
and
aaa
in
out
xchg
dec
jae
lcall
gs
fs
adc
imul
cmp
fadds
xchg
mov
leave
mov
or
movsl
dec
scas
dec
push
cmp
inc
lods
ja
sti
mov
mov
mov
jecxz
add
sarb
cli
insl
lods
std
fwait
jmp
add
xabort
test
sub
pusha
push
es
rol
enter
imul
or
add
lret
adc
bound
and
push
xchg
clc
push
bound
mov
insb
std
fnstcw
lods
inc
rcll
fsubrl
push
aad
push
in
loopne
mov
adc
hlt
inc
push
cld
ret
mov
movsl
sub
jmp
push
rcrl
jmp
stos
mov
push
mov
lret
ret
repz
movq
dec
lds
mov
das
daa
push
pop
dec
inc
or
or
adc
ret
cmpsl
arpl
enter
nop
add
cmp
int
and
or
fiadds
popf
dec
add
gs
mov
dec
cmpsl
stos
mov
xor
lcall
mov
in
mov
mov
dec
sarb
cwtl
setne
rcrl
popa
stos
mov
dec
outsl
mov
jp
test
sub
xchg
xchg
test
cmp
add
xchg
sub
pusha
sbb
pop
ret
div
popa
movsb
fistps
ret
repz
cld
sbbb
fcmovnb
ret
fs
or
jne
pop
popa
push
add
lods
dec
dec
push
jmp
stos
jno
sarb
lahf
les
push
sub
jl
sub
adc
loope
cmp
xchg
xor
jne
push
fs
ds
clc
ljmp
shlb
daa
pop
subl
sbb
fsubrl
stos
mov
les
test
pop
jecxz
fadds
cwtl
mov
fisubs
sarb
and
jae
cmp
aam
imul
cmp
sub
jmp
lahf
jne
pop
mov
mov
popa
mov
and
jge
or
repz
ret
mov
test
mov
cmp
repz
push
cmc
dec
cmp
mov
scas
call
jmp
sbb
jge
fsubl
sub
aas
or
mov
clc
leave
pop
aas
out
stos
jbe
jb
xor
cwtl
or
test
mov
or
adc
test
jbe
imul
add
test
sub
and
loopne
jb
sarb
or
pusha
mov
mov
in
mov
cmp
or
pop
lods
push
jge
push
fdivrs
sbb
iret
cmp
imul
das
xorl
mov
leave
fwait
xchg
mov
sbb
mov
clc
int3
adc
jecxz
pushf
dec
mov
fimuls
fsubr
add
cmp
sbb
pop
insb
das
xor
mov
dec
mov
aam
gs
inc
outsl
sub
pop
lds
push
add
fwait
mov
shrl
repnz
inc
rcl
jecxz
pop
scas
data16
orl
adc
mov
nop
pop
stc
jl
cmp
add
mov
in
jp
adc
mov
jl
outsb
pop
push
cmpsb
sub
and
xor
push
mov
xor
lds
das
out
decl
test
and
nop
pop
cs
in
push
test
aam
sti
daa
xchg
mov
cmp
lret
pop
bnd
enter
xor
mov
xchg
in
push
mov
fcom
push
hlt
jp
cld
aas
jle
add
fidivrl
mov
aas
ljmp
imul
test
rcrb
popl
push
sub
push
into
mov
mov
mov
push
pusha
adcb
push
sbb
and
xor
movsl
nop
je
push
mov
les
or
lea
filds
aaa
jp
xor
jnp
gs
jp
xchg
repnz
xchg
int3
ror
mov
inc
ret
je
dec
scas
push
or
cmp
mov
outsb
cmpl
dec
sub
je
aaa
xor
mov
in
sub
push
add
pop
out
popf
jo
cmpsb
push
inc
repz
sbb
insb
xchg
jmp
data16
dec
jo
pop
push
int3
test
pop
xor
repnz
sti
adc
scas
insl
mov
in
add
jno
pop
es
in
dec
test
ficoms
xchg
int
jecxz
int
jo
sub
or
mov
lock
sbb
lahf
lret
dec
imul
pop
pop
aas
outsb
sub
cwtl
in
inc
adc
rcl
aad
add
pop
or
push
add
stc
dec
inc
lods
loope
mov
and
adc
rorl
int3
xor
xor
pusha
sub
cmp
push
dec
jg
vcmpps
pop
jo
adc
pop
inc
add
sub
jecxz
mov
jge
cmp
imul
pop
pushf
push
sbb
mov
xlat
xchg
scas
dec
cld
mov
loop
in
jb
in
push
sbb
inc
jle
pop
jmp
jnp
push
in
lea
into
test
mov
inc
jle
dec
mov
lret
rclb
fstpt
sbb
out
dec
shlb
pop
push
mov
xchg
xor
pop
data16
inc
adc
cmc
xor
xchg
dec
add
pop
mov
cs
cmp
and
mov
mov
mov
xchg
pushf
mov
mov
loope
stc
adc
inc
or
xor
xchg
or
dec
subl
jns
mov
mov
out
int3
cmpsb
lods
or
adc
pushf
sub
push
insb
inc
arpl
xor
cmpsl
out
sub
xchg
addr16
dec
pop
mov
mov
clc
out
add
scas
or
pop
scas
loopne
inc
enter
lret
dec
pop
inc
ds
stos
sub
mov
cmpsl
stos
mov
pop
addr16
sub
daa
mov
mov
push
mov
daa
cwtl
sbb
jb
add
mov
add
imul
aam
or
mov
or
xor
add
xacquire
and
mov
data16
xchg
push
in
out
daa
jae
mov
jno,pt
fistps
je
out
rcrl
shl
enter
jg
lds
inc
xor
pop
jno
call
mov
cmp
jno
cmp
aad
subl
mov
imul
jns
jle
insl
adcl
jl
cmp
scas
daa
icebp
out
stc
sar
jg
aad
xchg
addr16
dec
pusha
ja
scas
jge
jb
daa
inc
sub
fimuls
mov
test
movsl
das
xchg
rcl
hlt
js
js
pusha
push
nop
jns
or
js
aaa
andb
lahf
mov
add
enter
movsw
xor
pop
in
aam
inc
sahf
icebp
xor
mov
lahf
mov
fstp
mov
mov
and
cmp
imul
mov
aad
enter
xchg
or
sub
fstl
sbb
pusha
xor
cmp
icebp
imul
pop
sti
lcall
jmp
test
sub
scas
mov
sbb
jne
xchg
stos
jge
int3
fiadds
aam
inc
mov
icebp
pop
sub
outsb
xchg
hlt
inc
fcoms
adc
jmp
ja
xchg
cltd
gs
std
les
mov
adc
mov
push
popw
pop
aas
push
insb
sarl
add
pop
inc
sub
xchg
ret
dec
cmc
leave
jge
mov
push
cmpsl
add
pop
repz
test
mov
mov
or
pop
jns
cltd
adc
nop
fs
divl
cmp
mov
push
sub
aaa
cmp
xor
cs
int3
pop
rcrl
jle
fcomp
pop
adc
xchg
mov
cmpsl
cli
mov
pop
popa
jle
pop
enter
rorb
fwait
mov
xor
sub
jg
xor
mov
jecxz
rolb
movsb
into
and
data16
and
fcompl
into
fadds
pop
add
popl
loope
sti
imul
xor
repnz
test
repz
nop
add
and
cmpsb
movsb
xlat
inc
jo
adc
jge
lock
js
jns
fs
or
std
lea
scas
sbb
shlb
sbb
pop
call
jns
push
xchg
aas
sbb
sbb
das
mov
adc
xor
sub
stos
inc
and
or
test
pop
mov
and
divl
push
jae
mov
cmp
or
mov
ds
movsl
push
and
cmp
fiaddl
pop
pop
pop
dec
jb,pt
push
sti
fldl2e
jecxz
ret
and
cmp
jb
dec
inc
stos
scas
and
test
add
mov
dec
mov
sub
sbb
mov
mov
aas
inc
dec
push
adc
stc
clc
mov
sub
dec
scas
mov
mov
pushf
add
xchg
out
pop
sbb
xchg
ret
ret
iret
xchg
jo
pusha
or
xor
push
aaa
mov
pop
aad
inc
in
ret
movsl
mov
lds
pop
or
xor
mov
sti
xor
cmp
push
movsb
out
push
pop
fisttpl
jo
inc
mov
xor
jo
push
clc
enter
mov
nop
xchg
pop
lret
xchg
push
mov
xchg
xchg
mov
xor
xor
fnstenv
andl
pushf
dec
jb
mov
pop
push
jae
ja
pop
rorl
push
rclb
lahf
outsl
sub
mov
in
inc
push
adc
fmull
sub
mov
pop
and
lcall
push
jg
es
xchg
inc
js
and
adc
cmpsl
into
lea
xorb
add
jno
push
sub
loopne
pop
lods
stc
ficoml
push
or
outsl
or
iret
push
cmp
or
outsl
sub
push
xor
push
or
gs
dec
jle
sbbl
fsubrp
or
fcomp
xchg
push
lds
sahf
aad
add
push
stos
bound
pushf
scas
nop
out
cmp
es
mov
lahf
ror
jmp
fcompl
sub
rcll
pop
fidivrs
gs
dec
xchg
test
add
jbe
or
cli
rcrb
xchg
mov
cmp
leave
out
and
insb
dec
sbb
sub
popf
andl
mov
in
xor
dec
xor
ret
cmp
add
xchg
cld
mov
pop
loop
pop
rcl
pop
sbb
icebp
cmp
adc
ss
and
push
into
sub
xlat
mov
xchg
add
rolb
inc
sbb
cmp
inc
cwtl
mov
cmovo
daa
sbb
fisttpll
or
shl
xchg
push
sti
stos
fisubl
sub
out
aas
xor
push
gs
dec
adc
negb
dec
ret
jb
and
lods
pop
add
dec
gs
pop
lahf
popa
into
xchg
in
cmp
mov
or
xchg
stos
jl
cmp
cli
pop
pop
fwait
lret
stos
push
pop
addr16
loope
sahf
xor
jg
in
insb
jmp
aas
das
sub
loopne
pop
sbb
sbb
pusha
stc
movsb
mov
add
dec
fistl
jp
std
andb
pop
lahf
aad
cmpsl
jno
pop
aas
jp
cmpl
les
cld
and
push
inc
stos
insl
pop
test
xor
xor
inc
pop
inc
and
xchg
out
lea
xor
xchg
xor
sub
add
jmp
dec
out
les
insb
lods
int
xchg
or
pop
lock
es
pop
sti
call
outsl
jl
cmp
ret
or
fidivs
mov
cmp
mulb
lds
bound
in
sarl
mov
sbb
push
loope
jmp
adc
ss
lcall
xchg
mov
sbb
adc
pcmpeqb
ja
push
cmp
into
add
xor
mov
fs
movsl
jge
xchg
add
push
adc
xor
sub
arpl
push
lods
outsb
bnd
je
ret
sti
mov
sti
mov
push
add
aaa
xor
hlt
aas
aaa
xor
clc
push
pop
push
sti
mov
mov
xchg
rclb
flds
adc
iret
mov
push
loop
push
outsl
pop
push
jne
xor
int
dec
rorl
pop
bound
ljmp
sahf
dec
negb
jmp
sahf
clc
push
adc
mov
pushf
fisubl
jle
sub
enter
mov
rorl
jo
sti
mov
incl
xor
mov
xor
repz
adc
mov
sbb
inc
mov
bnd
ffree
dec
cwtl
push
xchg
jl
push
or
xor
testb
and
adc
ss
lea
add
daa
out
jle
test
pop
mov
sub
bnd
pop
pop
push
je
mov
loope
jne
adc
and
aad
add
in
sbb
inc
rol
bound
mov
inc
addr16
push
mov
xor
mov
arpl
inc
jge
xchg
pushf
xor
sub
or
mov
fld
xchg
mov
jnp
popl
cltd
mov
pop
test
xchg
push
imul
xchg
mov
pushf
mov
jmp
mov
addl
cmp
rorl
popf
mov
addr16
nop
or
add
adc
jmp
pop
push
and
lret
insl
addl
cld
ror
or
adc
int
repnz
or
cli
push
adc
arpl
cmp
stc
fs
scas
pop
sbb
ljmp
cmp
addr16
inc
mov
lcall
sbb
inc
loop
into
fcomps
pop
clc
dec
outsl
cwtl
push
push
mov
adc
mov
aaa
and
mov
ret
jle
mov
sub
jno
xor
and
mov
mov
dec
xor
mov
lods
jl
jo
je
sbb
lds
cltd
cmp
sub
pop
mov
iret
xor
sbb
pop
sbbl
lods
out
mov
ret
fsubr
lods
inc
scas
dec
scas
aaa
sti
or
lea
or
pop
xchg
cli
adc
les
pop
sub
lods
jg
les
mov
dec
xchg
in
popf
pop
std
adc
out
add
sub
xchg
mov
ss
xor
and
std
mov
lret
add
lds
add
mov
aas
push
adc
push
cmpl
pop
mov
inc
out
sahf
inc
adc
pop
inc
xlat
xor
sub
nop
sbb
lea
jo
mov
jb
cltd
fwait
inc
rcrb
cmp
in
dec
jmp
shlb
add
xchg
inc
push
mov
lcall
sbb
lret
push
or
pop
lock
fldt
inc
pop
test
xor
out
or
sahf
jb
cmc
mov
add
jge
shll
and
mov
pop
push
out
inc
add
add
mov
enter
call
inc
int3
rcl
sbb
pop
gs
aas
mov
sub
fimull
je
add
xchg
xchg
outsl
and
dec
enter
xchg
aaa
pop
xlat
inc
cmp
cmc
mov
icebp
xor
xor
xor
sahf
sbb
sub
and
ja
add
jecxz
dec
adc
call
shrl
xchg
jno
ds
jno
leave
add
bound
push
frstor
mov
test
xchg
inc
sub
enter
xor
dec
mov
mov
jbe
add
fdivp
int
xchg
test
mov
sub
adc
std
xchg
out
mov
add
mov
repz
movsb
mov
sahf
inc
into
gs
jmp
lea
data16
or
mov
fildl
sub
ret
or
mov
int3
and
inc
bound
xor
in
into
loopne
or
int
daa
cmc
xchg
loop
dec
out
dec
cs
jg
and
js
divl
adc
mov
or
or
sub
pop
mov
sarb
enter
scas
pusha
mov
out
aaa
jmp
je
jl
sub
data16
jbe
movsl
inc
mov
push
lods
mov
sarb
js
call
xchg
xor
ficompl
fidivs
or
lods
repz
jo
sbb
cmp
inc
lds
sahf
aaa
sbb
pop
int3
mov
inc
mov
adc
mov
push
cmpsl
movsb
bound
iret
orl
aaa
jp
pop
pop
fptan
cmp
je
jmp
int3
xchg
gs
cmp
out
jge
inc
ja
mov
mov
test
inc
mov
in
mov
frstor
inc
xchg
pop
cmp
addl
pop
fisttpll
mov
pop
sti
fildll
push
out
lret
mov
fnstenv
mov
mov
gs
sub
div
es
out
inc
mov
shl
outsb
test
or
dec
rolb
cmpsb
stos
ret
clc
xchg
pop
lods
test
repz
pop
and
xchg
sahf
loope
lods
or
add
aam
jns
shll
fistpl
pop
cmp
in
repz
jl
and
cmp
xor
js
in
mov
cmp
pop
push
adc
nop
adc
push
jg
lods
in
push
jp
and
mov
mov
rclb
dec
clc
call
or
scas
out
adc
dec
lock
or
xchg
jnp
jno
xchg
out
xchg
inc
xlat
dec
imul
xor
cmc
push
iret
inc
sub
lahf
push
and
test
fld
loope
mov
ss
mov
and
xor
add
cwtl
scas
js
push
push
xor
push
lea
fs
rorb
dec
fstl
and
cltd
mov
lock
idiv
mov
cmpb
int
add
clc
addr16
ja
sub
push
out
loopne
pop
das
imul
or
cli
test
sub
xchg
aaa
and
popf
mov
jns
and
in
sbb
jbe
sub
xlat
outsb
cmp
push
and
mov
or
cmpsl
pop
or
movsb
jp
adc
dec
out
cmpsb
dec
outsl
push
jmp
add
mov
loop
out
xor
js
or
popa
jmp
sbb
adc
fildll
sbb
fs
push
mov
js
fs
ljmp
out
repz
xor
insl
test
pop
jo
cmp
sub
cmp
fwait
push
and
pop
dec
enter
mov
pop
sti
andb
mov
mov
and
mov
mov
ljmp
cmp
push
dec
rorl
fildl
inc
sub
push
popa
inc
adcb
aas
in
xor
push
lea
subb
es
adc
dec
lds
pop
push
outsl
test
mov
es
inc
jmp
test
mov
int
lds
movsb
push
add
lahf
mov
push
mov
jno
cld
mov
inc
and
push
sbb
cmpsl
jae
lock
add
aad
cmp
mov
push
nop
aaa
daa
mov
push
ja
push
adc
mul
push
gs
call
sbb
and
jae
in
lahf
out
adc
pop
pop
jnp
jno
call
in
in
stc
jl
mov
jns
xchg
rorb
adc
cmp
lret
mov
arpl
xchg
xchg
xchg
fbstp
dec
das
pushf
je
xchg
cld
ja
icebp
mov
mov
pusha
or
add
mov
stos
sbb
pop
mov
cmpsl
inc
jl
std
sub
in
mov
jmp
add
pop
xchg
iret
in
fbstp
xor
mov
insb
mov
out
jbe
xchg
or
push
lret
jmp
or
pushf
stos
inc
pop
mov
sarl
dec
push
icebp
adc
sbb
out
push
cmp
ret
sub
je
addr16
jno
mov
xor
jle
arpl
clc
adc
adc
ljmp
xchg
icebp
sarl
xlat
inc
sub
pop
loope
and
outsl
mov
stos
stos
out
cmp
scas
lcall
mov
sub
and
mov
sub
xor
ds
or
or
repnz
sub
repz
mull
das
sub
popa
es
bnd
inc
mov
test
mov
loopne
repnz
sub
and
or
test
mov
jge
gs
push
inc
xchg
ss
popa
mov
and
cmpb
push
jns
add
dec
sub
roll
or
je
ss
pop
push
out
mov
ret
mov
stos
mov
addr16
push
xor
mov
sahf
lahf
ljmp
inc
sub
clc
gs
arpl
shrl
outsb
add
inc
bound
lock
dec
movsl
push
pushf
and
and
push
dec
ja
dec
leave
in
dec
inc
push
adc
jge
hlt
sti
sbb
test
mov
xor
sub
shr
ja
sub
mov
shl
outsl
inc
cld
mov
push
push
in
mov
insl
sti
mov
fistpl
cld
int
test
out
push
loopne
addl
cmp
mov
fwait
push
test
inc
mov
lea
scas
add
mov
adc
lret
in
xchg
addr16
std
cmp
lahf
xor
fnstsw
mov
mov
pushw
mov
in
mov
dec
imul
xrstors
mov
lods
fdivp
mov
insl
push
stc
mov
scas
mov
mov
pop
push
test
add
dec
mov
test
cmp
bnd
dec
or
sahf
inc
xor
push
sbb
jle
mov
loope
pop
push
mov
pushf
movsb
mov
int3
data16
idiv
int
cmp
dec
lods
mov
out
pop
fisttps
xor
pop
mov
sub
mov
xor
mov
popa
or
mov
adc
notl
enter
xor
xchg
lods
bnd
inc
sub
mov
adc
jl
sbb
ja
cltd
cs
fistpll
repnz
push
jbe
test
sti
sub
xchg
shll
cmpl
cmp
xor
dec
add
lret
nop
xchg
mov
fnstsw
cmp
mov
test
lods
pop
mov
pop
push
ficoms
lock
xor
mov
dec
adc
outsl
and
fnstenv
in
out
add
gs
jp
mov
xchg
xchg
popa
push
jp
icebp
cmp
lds
into
push
cltd
mov
or
xchg
ret
decl
idivl
push
inc
mov
nop
jo
mov
cs
dec
fildll
add
rorl
sbbl
sub
std
in
iret
mov
fisttps
popa
xchg
sub
mov
mov
dec
adc
jmp
xor
std
lea
and
lret
aaa
inc
aad
js
lcall
dec
lds
imul
mov
int
add
sub
xchg
cmp
jle
es
xor
dec
movsb
aaa
in
arpl
xchg
les
movsl
cmp
cmp
cmpsb
jnp
and
inc
stc
mov
jp
aas
xchg
mov
pmulhw
and
push
mov
rorl
adc
divb
aaa
shll
bound
aaa
shlb
dec
mov
jnp
lea
xor
cmp
sbbb
pop
cmpsl
xchg
std
mov
fbstp
sub
mov
xchg
cltd
in
pushf
inc
std
ficoms
mov
sarb
add
push
cltd
das
std
mov
ss
scas
bnd
mov
mov
pop
mov
and
loop
push
sbb
mov
sub
shlb
and
lods
arpl
mov
mov
les
mov
in
mov
xchg
data16
xchg
movsl
je
in
mov
adc
add
and
in
pop
fisttpll
xchg
or
push
hlt
xchg
sbb
push
mov
jb
int
data16
leave
xchg
out
enter
cmp
and
orl
ss
mov
inc
mov
ljmp
cmp
fdivr
mov
rclb
in
mov
hlt
pop
add
inc
add
add
ja
sub
in
cld
enter
xchg
push
jns
cmp
cli
aas
addl
jns
incl
inc
mov
dec
cmpsb
nop
int
call
cmp
mov
cmpsl
loop
adc
call
cmp
push
stos
aam
push
out
inc
inc
mov
cmp
xlat
mov
jns
pop
jnp
sub
int
inc
loopne
insb
push
cmp
movsb
inc
and
sub
ret
or
fs
sub
fcoml
and
xchg
shlb
xchg
pop
sub
sub
mov
xor
insb
cmp
insb
add
aaa
jle
sbbl
fistl
push
incl
addr16
or
push
inc
mov
pop
mov
pop
popa
adc
cmp
mov
sbb
mov
inc
addr16
sub
loop
adc
fisttpl
or
sub
fistpll
outsl
or
sbb
jp
mov
inc
push
xchg
lods
dec
sbb
lahf
movsb
daa
enter
sbb
mov
insb
repz
mov
jg
insl
lock
clc
test
daa
out
xor
and
pop
outsl
mov
popf
repnz
or
mov
dec
sbb
push
cmpsb
push
sbb
pop
loop
sub
jae
jp
pop
dec
sbb
mov
test
in
xor
jbe
mov
rcl
daa
mov
fstp
dec
clc
mov
fidivrl
mov
add
lock
fistpll
push
bound
out
outsl
int3
sti
xchg
fists
push
fisttpll
popa
push
jp
lods
and
mov
inc
dec
jno
sbb
cmp
add
and
iret
mov
rorb
idiv
popf
inc
pushf
push
inc
ja
loopne
pop
test
rorb
in
pop
test
data16
lds
hlt
or
push
mov
sahf
mov
arpl
mov
cmp
jmp
inc
push
and
hlt
xor
stc
das
or
push
lea
cmp
cmpsb
sub
clc
loopne
jbe
inc
cmpsl
adc
mov
jmp
or
cmp
pop
lods
cmp
dec
jne
subb
pop
ljmp
in
sbbl
jge
call
add
xor
mov
fwait
pop
jecxz
or
cmp
jb
dec
push
mov
fcmovu
jle
push
sbb
sub
sub
xor
fcmove
cmpsl
out
adc
xlat
jnp
mov
mov
addr16
imul
movb
push
xchg
sbb
cwtl
push
sub
les
sub
addr16
lahf
sti
mov
or
outsb
imul
cmc
xchg
jg
cmp
dec
pop
jge
push
cmpsl
fdiv
xchg
xchg
pop
fs
stos
lret
dec
jae
jae
sub
neg
out
sub
movsb
sbb
ret
hlt
cmp
jmp
xlat
test
loopne
out
les
arpl
push
add
mov
call
scas
fsubr
iret
cmp
add
jecxz
das
jecxz
lahf
shr
xor
out
test
leave
cmp
cmpsb
divl
je
aad
adc
xor
outsb
xchg
enter
add
bound
dec
sub
mov
xchg
inc
push
adc
lods
insl
adc
add
sahf
movsl
dec
xchg
or
mov
addl
sbb
repz
out
mov
into
les
mov
ss
dec
out
leave
mov
stos
in
iret
movsb
xchg
icebp
jl
xchg
cmp
sub
stc
mov
push
mov
or
inc
clc
add
inc
jb
loopne
add
fnstcw
xchg
adc
int3
mov
fwait
lea
xor
outsb
in
jge
popa
mov
dec
arpl
mov
shll
mov
dec
rol
and
and
sbb
shr
inc
popf
in
inc
mov
dec
sub
std
popf
fprem
sub
and
mov
jp
mov
pop
inc
and
mull
cld
inc
jae
push
adc
jp
dec
or
in
mov
or
scas
mov
xchg
jle
inc
mov
push
jb
and
mov
scas
push
divl
push
jp
or
adc
lods
pop
or
pop
mov
in
jnp
fistl
xor
cmpsl
cmp
xor
and
leave
jne
sahf
jmp
addb
cmp
and
and
mov
push
xchg
mov
loop
and
cmp
scas
mov
mov
sbb
mov
inc
adc
leave
jbe
pusha
pop
xor
xor
push
popa
loopne
gs
addl
das
mulps
and
push
cmp
clc
cli
cmp
sbb
rcrl
cmp
jnp
push
movsb
ror
shrl
dec
pmaddwd
movsb
lret
in
sub
sbb
sbbl
jg
jnp
jae
adc
out
xchg
aad
mov
jae
scas
push
push
imul
loope
lret
jbe
mov
enter
jl
xor
xor
dec
in
xlat
jb
dec
mov
lret
jg
loopne
inc
mov
scas
dec
xchg
icebp
loope
cmpsl
or
rcr
inc
sub
inc
ret
adcb
jmp
pop
and
into
insb
out
pop
mov
pop
pop
sub
nop
inc
sbb
or
fimull
stc
mov
test
xor
cwtl
push
xor
xchg
push
outsl
fcmovnbe
jnp
mov
aaa
xor
test
and
sbb
xor
or
cmp
add
xchg
dec
pop
popf
aas
or
dec
das
xor
filds
mov
jle
adc
outsl
data16
scas
mov
test
insb
lahf
inc
mov
or
xchg
sub
xchg
imull
ret
inc
mov
sbbb
mov
daa
mov
popf
push
xlat
arpl
sahf
out
xrelease
mov
lods
fbld
pop
orl
xchg
xchg
ljmp
cmp
xor
out
movsl
iret
dec
dec
push
in
add
xor
bound
jg
lock
cmp
xchg
add
xchg
stos
fdivs
xchg
into
mov
iret
pop
imul
ficoml
mov
ljmp
enter
adc
outsb
add
dec
and
cmpsl
xchg
in
shll
int3
ja
icebp
rcr
adc
jb
pop
movsb
pop
and
insl
je
fsts
inc
repz
jnp
jns
pop
adc
and
jbe
mov
and
pop
fucomi
nop
xchg
push
inc
push
in
push
pop
sahf
fwait
lahf
and
dec
fisubs
ret
ret
xchg
add
jnp
push
xchg
jae
imul
sub
enter
or
repnz
fdivr
cmp
sub
pop
ficompl
ss
xchg
dec
pop
mov
fwait
lcall
cmp
xlat
enter
test
pop
lcall
ret
sub
in
rolb
cmp
pop
xor
in
push
mov
sub
pop
dec
push
repz
ljmp
pop
mov
xchg
nop
inc
rolb
jmp
in
sbb
jmp
or
or
jns
inc
mov
dec
sbbl
jbe
xchg
jmp
jbe
dec
jns
xchg
xor
push
mov
jbe
js
lahf
mov
fisubrl
push
stos
or
mov
loop
stc
lret
cmp
add
add
mov
fnstsw
std
cs
push
and
add
pop
sub
sbb
lods
pop
pop
call
pop
out
mov
sbb
jmp
jg
sti
jae
gs
jecxz
loop
jne
sub
pop
repz
or
mov
mov
lret
cmc
or
pop
jl
push
sbb
mov
sbb
xlat
or
imul
add
jo
cmp
lret
cltd
mov
add
cmp
xchg
mov
mov
iret
push
mov
outsl
stos
mov
insl
test
test
xor
popf
loopne
aam
jo
into
mov
jae
cmp
xor
jb
mov
xor
push
mov
cmp
sbb
daa
ss
insb
pushf
push
cmp
lcall
call
mov
imul
pushf
cli
cmp
ret
cmc
sub
aam
xchg
push
sbb
fldcw
sub
movsl
shll
and
or
mov
ret
repnz
fdivrl
pop
lds
out
repz
stos
adc
add
fisttps
stos
cltd
cmp
mov
pop
movb
lret
pop
cmc
dec
cmp
test
into
dec
push
xchg
push
cmpb
add
es
fs
shrl
mov
push
pusha
js
inc
fsubr
ret
mov
pop
aam
fxch
pusha
and
fsts
je
pop
dec
xor
je
cmpsb
push
dec
call
mov
or
dec
loope
icebp
xorb
int3
xlat
cmp
out
mov
int3
test
in
inc
insb
fcmovbe
pusha
push
out
push
mov
or
sub
add
push
or
out
int3
cld
fsub
sbb
sub
mov
push
sub
push
fnstenv
gs
mov
movsb
mov
lcall
ffree
dec
mov
cmp
mov
jmp
addb
fsubrl
sbb
ret
or
dec
mov
mov
jo
mov
out
or
pop
fbstp
xchg
pop
cwtl
andl
bound
call
xor
scas
in
outsb
jle
dec
mov
in
push
cmpsl
fs
jae
lret
scas
mov
lahf
xchg
ja
or
fimuls
out
in
adc
xor
mov
mov
pop
fcom
jnp
mov
popl
inc
fstps
push
sub
cmc
mov
pop
pop
imul
adc
stos
ss
and
aaa
sbb
pop
inc
xchg
rorb
ret
mov
push
or
outsb
mov
mov
lds
mov
xor
cmpsb
cld
out
int
pop
sbb
insb
in
dec
xchg
dec
push
push
out
rorb
in
hlt
or
shll
call
mov
pushf
outsb
call
shl
test
shlb
mov
movsl
cmpsl
inc
add
int
in
out
imul
cmp
jecxz
jl
cmpsb
sbbl
mov
outsl
adc
dec
cmp
sti
out
rcll
lea
cmc
xchg
mov
xor
gs
dec
test
add
push
aam
iret
les
nop
xchg
xor
iret
andl
enter
sub
adc
loop
bound
push
jne
push
mov
in
cwtl
lods
pop
daa
jne
dec
pushf
roll
loopne
or
xchg
mov
cltd
outsb
int
xor
ljmp
lahf
cmp
lds
cwtl
lret
mov
mov
mov
loope
dec
shl
outsl
fcos
mov
dec
pop
xor
shr
outsl
mov
xor
mov
mov
push
xchg
sbb
bound
loop
call
xlat
xchg
je
lcall
mov
jne
cwtl
in
dec
jnp
int
push
xchg
jle
std
or
add
add
jg
xorb
lock
sub
out
mov
mov
in
aas
mov
add
or
mov
mov
mov
dec
xor
testb
push
orl
iret
and
jmp
push
ret
sbb
push
mov
in
and
inc
add
lds
cwtl
sub
xchg
fwait
sbb
mov
scas
push
out
cmpsl
js
inc
testl
in
lcall
pop
fucomp
pop
mov
inc
pop
cli
pop
pop
jmp
sub
mov
push
pushl
ret
dec
js
lahf
dec
cmpsb
es
sti
leave
or
daa
mov
popf
pop
add
and
shlb
and
mov
into
inc
adc
cli
mov
testl
mov
inc
or
mov
addr16
ret
leave
and
pop
inc
adc
inc
icebp
sub
jno
stc
xor
push
or
or
cmpb
pop
or
mov
dec
jg
jb
add
jo
movsb
inc
cld
lret
push
out
aam
pop
pushf
adc
jg
pop
ja
jecxz
cmp
fisttpl
fsubl
xor
sub
ss
xorb
adc
call
inc
cmp
shl
sbb
nop
lea
push
fimull
popl
xor
mov
and
sbb
or
scas
loopne
lods
in
mov
push
jo
sub
push
jno
lret
pop
mov
ljmp
inc
adc
mov
cmpsl
push
imul
jg
dec
divb
add
dec
dec
add
insb
jmp
rcll
ret
mov
mov
adc
push
pop
inc
int3
outsl
pusha
push
adc
mov
insb
mov
dec
shrl
mov
int3
in
dec
pop
out
xor
cmp
jnp
cmp
mov
pop
sbb
lahf
xchg
push
je
xchg
adc
shl
ja
pop
icebp
mov
cmp
addr16
mov
ret
lret
jae
and
pop
mov
sub
xchg
out
shll
sub
mov
push
ss
cmpb
movsl
arpl
ret
add
aad
fmuls
push
clc
es
out
rol
mov
and
aaa
ret
mov
fisttps
push
push
ja
loop
or
mov
xchg
lea
ds
pop
sahf
xchg
ss
pop
mov
aad
push
insl
jne
and
dec
xlat
ja
pop
jae
jecxz
rcrb
rolb
jo
aam
aad
scas
lods
push
icebp
dec
mov
push
xchg
out
or
imul
mov
jmp
into
mov
push
shr
addr16
push
mov
inc
test
mov
ret
dec
flds
outsb
ud1
cld
jns
add
mov
add
fwait
lds
das
test
adc
dec
or
ss
data16
add
jnp
dec
push
fcmovbe
repz
adc
in
out
cwtl
cmp
and
xlat
jns
mov
sub
ljmp
dec
mov
push
out
imul
mov
pop
bound
lret
push
lret
out
sbb
dec
jle
sbb
cmp
les
jmp
pop
pushf
inc
gs
out
mov
and
sbb
movsb
xor
inc
mov
mov
mov
inc
add
out
mov
in
sbb
leave
inc
les
or
cmpsb
add
and
xor
mov
sbb
mov
and
mul
xorb
stos
mov
ret
les
fdivs
inc
dec
mov
mov
dec
inc
testl
and
inc
xor
in
fsts
call
mov
lcall
aaa
push
dec
xor
repnz
scas
outsb
jbe
cld
test
pop
mov
out
mov
adc
xor
inc
xor
sbb
mov
jne
ret
pop
fildll
in
add
sub
sbb
inc
cmc
cwtl
cli
push
into
adc
loope
into
jmp
mov
pop
iret
mov
rep
xor
xor
sbbb
out
test
out
fsub
scas
cmpsb
sub
shrb
add
xchg
inc
and
adc
push
ja
notl
inc
push
dec
aas
and
jg
add
push
push
int
cmp
mov
mov
add
or
dec
int3
scas
int3
and
mov
nop
addr16
enter
adc
or
sub
xor
mov
rorl
out
pop
mov
insb
decl
addr16
imul
push
mov
mov
sti
sub
int
ljmp
out
ja
pop
lcall
rcll
inc
push
notb
or
cmp
inc
mov
pop
dec
cmpsl
arpl
jp
xor
repz
jae
lret
jns
mov
mov
hlt
ret
mov
sbb
add
popa
andb
mov
adc
aaa
pop
fs
mov
xchg
add
jl
ret
inc
inc
xchg
pushf
in
jno
mov
ss
push
mov
test
or
sub
add
push
vmread
jbe
loop
xchg
shl
std
push
jecxz
xor
inc
add
push
loope
pop
leave
inc
cmp
push
fwait
mov
push
setge
mov
int
and
rorl
lds
cmp
popa
mov
or
push
mov
inc
xchg
fdivl
lcall
cld
sti
out
into
cmp
xchg
xlat
add
lds
xor
fbld
push
into
popl
in
xor
nop
insb
stos
fisubrl
out
mov
mov
mov
xor
jo
clc
sti
data16
rol
add
or
test
gs
xchg
cmpsb
out
cld
mov
mov
jmp
and
out
xchg
dec
adc
mov
movsl
imul
nop
mov
loope
sarl
push
mov
mov
lahf
push
rclb
push
sbb
aam
jbe
sbbb
xor
push
push
cmp
mov
pop
and
insb
call
scas
call
test
mov
ret
stos
sub
mov
mov
push
add
sbb
sbb
mov
inc
mov
inc
insb
sarb
aas
or
jne
mov
adc
icebp
lods
xor
xor
xchg
into
daa
aaa
ud0
out
mov
movsl
xchg
jae
aad
ja
test
mov
mov
jnp
popa
subb
jmp
cwtl
jmp
cmp
jmp
dec
add
push
nop
jo
out
fs
inc
ror
sbb
or
and
filds
clc
adc
add
outsb
adc
xlat
dec
icebp
lret
and
shll
addr16
daa
rclb
inc
shrl
rorl
bound
adcb
sub
adc
push
rcrb
xchg
roll
mov
jns
repnz
xor
insl
lret
dec
and
js
outsl
or
roll
adc
shrl
hlt
push
cmp
mov
xor
xchg
pop
mov
out
sub
js
cmp
sub
push
sub
imul
shll
ret
inc
ljmp
dec
mov
and
jle
pop
push
lods
or
sub
in
mov
std
sub
outsl
adc
cmp
out
pop
jne
int3
mov
fsubl
jle
xchg
ljmp
cwtl
xchg
and
ret
xor
insl
fsubrp
jmp
add
scas
cwtl
jmp
adc
sbb
and
mov
bound
xchg
sub
jns
sub
repnz
and
movsb
and
xchg
or
test
enter
insb
adc
inc
leave
daa
lock
ja
cmpsl
nop
loope
mov
sti
xchg
scas
dec
xchg
mov
gs
add
ret
jnp
cwtl
stc
xchg
push
sub
and
pop
adc
outsl
inc
gs
add
pop
jg
push
int
mov
jne
stc
mov
add
das
hlt
xchg
mov
mov
jno
xchg
and
mov
pushf
cli
sti
stos
xor
in
test
pop
push
pop
mov
xchg
jnp
pop
mov
mov
mov
aaa
mov
xor
push
mov
idivb
adc
fs
pop
lcall
jmp
mov
andl
xor
mov
or
mov
pusha
cmpb
adc
cwtl
pop
sub
lcall
jo
mov
dec
adc
cmp
add
push
xchg
and
daa
jecxz
inc
push
mov
sti
xchg
mov
inc
push
cmpl
jnp
inc
sahf
and
repz
push
push
pop
mov
roll
sar
inc
and
mov
pop
pop
push
jae
push
std
sub
jb
test
dec
mov
jae
jns
int3
imul
sub
pcmpeqw
push
and
in
in
cmpsb
test
add
mov
xchg
stc
int
jb
mov
outsb
out
outsb
or
add
popf
add
xchg
and
mov
xchg
adcl
pop
mov
imul
mov
pop
xor
xlat
xchg
out
mov
jmp
shll
loop
pop
insl
push
push
sarb
lahf
jge,pn
add
push
adc
mov
jmp
out
loopne
sbb
or
cwtl
insb
orb
enter
pop
or
gs
dec
int3
xchg
push
adc
stos
pusha
xchg
repz
pop
popf
and
xlat
pop
lcall
fstpl
jp
fidivrl
xor
scas
adc
and
mov
cmp
adc
lods
icebp
rcl
mov
or
shl
test
add
lret
lods
push
scas
mov
add
xchg
sbb
cmp
loope
stos
incl
add
loope
iret
cltd
aas
dec
jmp
aam
popa
or
pop
inc
insl
sbb
sbb
or
in
arpl
bound
roll
push
sahf
jne
repz
mov
in
mov
push
loope
jl
cmc
dec
mov
pop
inc
jg
dec
inc
or
adc
das
jge
es
pop
push
or
pop
jl
outsl
xor
mov
stos
stos
cltd
jmp
jl
mov
adc
iret
mov
cwtl
and
jns
and
xchg
bound
mov
out
mov
test
repz
and
xchg
inc
inc
out
fmuls
lret
out
fwait
inc
roll
mov
mov
pop
fnstcw
xchg
fmull
stos
repz
ss
scas
lret
repnz
cltd
push
inc
mov
jle
xchg
xchg
sbb
mov
mov
jmp
aad
test
xchg
jg
jno
dec
dec
repnz
aam
lahf
mov
jno
and
push
or
test
push
push
fldl
mov
cli
xor
imul
lcall
imul
xlat
cmp
pusha
push
jle
jecxz
adc
lods
cmp
mov
inc
pop
loop
jno
das
lret
sbb
or
jbe
stc
mov
push
mov
dec
sbb
std
sub
jg
mov
popa
lahf
addr16
jg
in
je
ret
in
mov
arpl
and
shll
aam
nop
pop
movsl
es
jo
cld
and
jl
xor
sbbl
fs
sub
mov
push
icebp
xor
xchg
imul
aaa
cmc
dec
inc
pushf
mov
jo
dec
sti
and
std
inc
sbbb
add
outsl
aam
out
xchg
cmp
jmp
nop
xchg
inc
mov
fs
add
xor
dec
jg
and
filds
push
push
and
cltd
jae
push
fadds
add
mov
push
xor
jne
adc
scas
push
mov
in
loope
lea
popf
sub
xchg
clc
outsb
and
xchg
sub
xchg
sarb
ret
sbb
leave
les
fcompl
scas
xor
xor
xchg
out
cltd
add
mov
xchg
jp
cmpsb
mov
fdivs
shlb
and
loope
ret
xor
push
mov
cmc
es
xor
or
fldenv
jge
out
or
sbb
cltd
or
std
pop
adc
jecxz
jb
aas
pop
mov
imul
scas
jmp
cmp
outsb
xlat
mov
repnz
into
int3
sbb
lahf
inc
aad
outsb
adc
std
sbb
fldenv
stc
scas
cwtl
dec
mov
ja
jl
mov
jno
std
das
fwait
data16
pop
ret
out
mov
mov
push
arpl
mov
jne
out
pop
pop
fisubs
pop
and
cmp
cltd
push
fdivl
or
out
outsl
cmc
pop
lods
cmp
loopne
mov
shrb
xor
mov
sub
push
in
out
popw
fstpt
lea
enter
enter
dec
ja
shlb
lock
jae
mov
ret
fildll
ret
jg
push
mov
jno
into
sbb
xchg
out
mov
adc
mov
adc
pop
rclb
stos
mov
cmp
repnz
popf
stc
jg
sahf
push
scas
leave
jb
inc
lods
mov
xor
push
mov
loope
sahf
or
push
mov
sahf
mov
inc
or
and
hlt
je
push
in
dec
out
cld
jne
jl
scas
sub
mov
hlt
inc
leave
xchg
xchg
std
scas
cmp
test
mov
push
test
sub
pop
aaa
push
inc
sbb
arpl
ds
inc
je
dec
mov
sbb
nop
loope
lcall
push
test
dec
sub
dec
mov
les
xor
aad
mov
outsl
add
add
mov
mov
add
scas
loopne
cmpsl
mov
stos
cmp
xchg
pop
pop
xor
xor
mov
dec
sarb
jmp
jmp
xlat
inc
fs
rcrb
pop
pop
dec
cmpsb
cmp
cmpsl
dec
orl
or
adc
stc
jae
loopne
add
in
lods
dec
and
mov
out
push
cmp
pop
lret
jo
hlt
pop
loopne
jge
or
pop
or
es
add
hlt
push
orb
add
or
lds
insb
ds
mov
mov
das
add
test
jp
loopne
mov
cmp
insb
dec
mov
mov
add
pop
xchg
push
xchg
sub
xchg
lret
or
je
add
stos
int
fcoml
xor
lea
or
add
in
loop
in
inc
mov
mov
jb
fwait
loope
jb
sub
pop
mov
out
pop
stos
adc
insl
xlat
daa
jnp
pop
inc
push
mov
rcll
je
push
inc
leave
pop
out
add
inc
inc
scas
cmp
mov
test
inc
mov
fmull
add
popa
sti
add
jl
mov
fidivl
adc
iret
sbb
iret
sub
fadds
pop
outsl
push
popa
dec
pop
sbb
add
mov
imulb
fcoms
mov
mov
mov
add
rcrb
les
ds
xor
hlt
sub
sbb
shll
imul
fdivs
mov
push
sbb
cltd
cli
stos
adc
sti
cmp
lods
mov
pop
cmp
gs
xchg
lret
xchg
add
in
inc
fcmovu
jl
cmp
push
push
cmp
cli
push
sub
pop
nop
mov
jbe
cmpl
hlt
sub
add
sub
shlb
and
add
jg
push
mov
mov
jl
repz
lret
xchg
jns
or
mov
scas
cmp
lock
cmc
jg
push
leave
rolb
stos
xor
cld
in
jecxz
and
xchg
aad
and
call
lret
add
sub
jb
int
mov
rcrl
jne
mov
lock
cwtl
mov
lea
movsb
rcl
mov
cmc
xchg
mov
insl
hlt
aad
jle
inc
inc
fidivs
inc
out
sbb
pop
sbb
adc
in
xchg
cmp
mov
sbb
sarl
andb
or
mov
push
cmp
mov
sbb
mov
cmp
popf
data16
mov
shl
lods
add
aad
push
jne
sub
mov
popf
cltd
inc
jno,pn
pusha
ret
sbb
add
add
outsb
cs
cwtl
es
sbb
dec
inc
aaa
sarl
ss
test
mov
and
cmp
adc
inc
std
xor
push
cmp
mov
jo
mov
ljmp
jmp
nop
je
repnz
dec
sahf
cmp
sahf
test
sti
rclb
xor
outsb
clc
mov
pushf
fsubrs
push
cmp
testl
xchg
stos
outsb
std
adcb
inc
test
notb
out
test
or
inc
xor
movsb
jmp
add
mov
sarb
cmpsb
fsub
sbbl
rolb
insb
sub
or
iret
les
jne
sbb
daa
fldt
movsb
stc
and
xor
ficoms
add
mov
dec
add
mov
xchg
loopne
add
rclb
lds
jnp
pusha
cld
mov
loop
ret
add
scas
adc
xor
dec
jge
mov
nop
sti
dec
mov
lret
push
int3
cmp
sbb
int
or
ret
xor
pop
or
jne
bound
sahf
sti
les
sahf
scas
sub
cmpsb
adc
mov
dec
fadds
dec
bound
mov
xor
dec
icebp
jp
mov
sti
mov
fistps
mov
scas
adc
pop
das
arpl
fs
xor
add
fnstsw
cwtl
adc
les
mov
movsb
push
mov
rcl
or
scas
stc
fadd
data16
or
insb
adc
adc
push
test
jo
iret
xor
jle
pop
cli
jmp
xor
cmpsb
mov
insl
jg
imul
push
push
movsl
xchg
xchg
arpl
test
xor
push
ja,pn
pop
lods
cmp
dec
and
inc
jb
sub
lea
jae
test
outsb
repz
cmp
and
sbb
push
cwtl
popf
mov
cld
dec
out
sahf
xchg
add
pop
or
sub
add
sub
nop
lret
out
imul
int3
out
mov
arpl
lods
roll
mov
es
iret
rcrl
cmp
xchg
insl
push
cmp
setae
test
pop
or
loop
test
adc
push
sub
andl
adc
mov
mov
rclb
sbb
pop
xor
loope
xchg
sbb
mov
popf
ficoms
out
out
dec
jne
fbld
fsub
iret
popl
or
leave
add
sahf
out
in
cli
fsubrs
mov
jnp
push
scas
scas
lahf
xor
pop
add
mov
arpl
xchg
pop
sub
xlat
xor
lret
lahf
mov
pop
sbb
jle
push
jnp
adc
xor
dec
and
sbb
lret
or
inc
mov
push
xchg
fdivrl
ds
outsb
sbb
in
pop
fs
jno
xchg
ljmp
jne
fnsave
lret
adc
testl
popf
add
sbb
xor
push
shlb
dec
mov
inc
push
jg
or
xor
mov
dec
loope
push
arpl
aas
mov
push
lcall
inc
jns
hlt
out
ss
lret
jno
lcall
ret
dec
jecxz
mov
inc
push
xchg
movb
cmp
aas
stos
jecxz
xchg
xchg
pop
arpl
and
xlat
cmp
mov
es
mov
pop
fwait
sbb
cs
es
xchg
mov
shrb
dec
stos
mov
pop
andl
mov
pop
loop
outsw
loope
movsb
jl
inc
ja
rcrl
mov
or
jae
lods
mov
add
mov
jno
inc
dec
iret
push
mov
mov
call
jb
jno
cli
pop
mov
xchg
ljmp
dec
fnstenv
jge
popf
rol
int3
popf
lods
xor
xlat
jmp
xchg
mov
ret
jecxz
dec
enter
mov
cli
ds
jns
loopw
add
loop
jbe
mov
sbb
movlps
jne
aas
sub
imul
gs
mov
das
cmpsb
mov
loopne
sbb
in
pop
mov
or
and
lock
lods
scas
ljmp
les
int3
mov
mov
mov
bound
dec
xchg
jge
lahf
push
add
mov
fldcw
mov
xorb
cmpsb
gs
andl
pop
xchg
insb
enter
lret
sub
iret
sahf
sbb
data16
cmp
jge
xor
ljmp
lret
inc
inc
pop
aas
insb
inc
leave
mov
je
psraw
mov
movsl
test
xchg
and
jle
mov
pop
movsl
je
push
jg
fdivr
loope
fwait
mov
fwait
push
mov
xchg
lock
lods
sahf
call
push
fs
or
js
test
jno
xlat
dec
mov
mov
inc
pop
lahf
fwait
cmpsb
push
xor
pop
loop
mulb
aas
insl
adc
sbb
pop
inc
mov
std
mov
xchg
in
cmp
sub
push
inc
hlt
dec
xlat
shrl
pop
nop
mov
xchg
clc
jmp
ficoms
add
jp
jns
into
dec
sbb
shl
in
incl
daa
out
jb
in
push
push
stc
mov
cmpsb
inc
jl
adc
ljmp
adc
in
das
jne
lods
pop
inc
push
mov
mov
popa
cs
test
aas
loope
push
lahf
push
jg
pop
aas
ffree
decb
in
push
sbb
int3
lods
adc
outsb
sub
push
sbb
or
sbb
inc
data16
sub
and
inc
jge
and
sahf
fimull
test
bound
xor
movsb
lahf
leave
push
mov
xchg
andb
aad
lock
enter
inc
xor
enter
jg
pusha
xor
fs
sub
lret
and
cld
dec
lea
adc
mov
pop
dec
mov
mov
aas
and
sbb
fmuls
adc
lret
dec
push
pushl
cltd
pop
inc
mov
cmp
movsl
js
inc
and
and
add
imul
xlat
hlt
jb
sbb
mov
imul
cmp
sbb
xchg
ds
in
sub
lods
dec
loopne
inc
loop
je
push
pop
into
jmp
mov
cltd
pop
add
stos
ret
jae
jno
xor
jp
pop
call
aam
arpl
push
rcl
cmp
stos
jnp
inc
lea
in
into
cmp
int3
or
ja
loopne
dec
enter
jnp
mov
lock
int3
cmp
xchg
dec
mov
imul
xchg
loopne
int3
popa
fcomps
jo
subl
mov
push
cli
xchg
xchg
push
mov
rolb
sub
mov
in
cwtl
mov
cmpsl
seta
add
cmpsb
pop
lret
aam
push
icebp
cmp
not
push
outsl
mov
dec
aaa
or
test
inc
adcb
xchg
imull
popf
jp
dec
and
cld
sbb
pop
insb
xchg
mov
push
ds
sbb
in
mov
sub
je
push
test
mov
out
jp
mov
mov
mov
sub
popa
push
lods
pop
mov
jno
shl
int
outsb
jg
rclb
js
and
cmp
scas
scas
pop
ret
push
pop
cmpsb
jmp
xchg
iret
or
imull
jle
add
jmp
sarb
sbb
inc
inc
push
fildll
pushf
add
fs
cmp
mov
pushf
arpl
dec
es
cmpsb
inc
xor
xchg
cs
mov
mov
xor
jae
data16
or
add
pushf
push
sahf
aad
clc
pop
cmpsl
fidivrs
mov
ror
je
mov
sub
inc
or
xor
mov
inc
test
nop
aam
lods
sbb
insb
xor
lcall
dec
insb
adcb
aad
add
sahf
inc
xlat
imul
aam
inc
xchg
mov
or
jbe
fisubs
mov
stc
daa
flds
adc
fisubs
lret
ret
dec
pop
mov
pop
lea
mov
dec
xor
jl
xor
scas
sub
cli
lahf
repz
addr16
into
mov
adc
fs
sbb
jns
fwait
adc
inc
addl
jle
adc
and
loope
int
out
test
pop
fcmovnbe
adc
stos
xchg
mov
cmp
rcll
cmp
or
jp
jecxz
pop
fisttps
adc
xlat
jo
leave
push
pop
ret
jo
insb
ja
movsb
ss
mov
cmp
test
sbb
jle
daa
fbstp
daa
xor
jle
add
mov
push
inc
scas
sti
xor
push
pop
int
scas
outsb
mov
add
pop
in
in
sub
and
inc
sbb
inc
add
hlt
cmp
and
push
xchg
mov
call
mov
mov
mov
out
and
stc
fbld
rorb
aas
sub
jecxz
rolb
lods
pop
test
call
xchg
pop
xchg
jbe
mov
inc
push
fildll
lods
fwait
xchg
mov
adc
insl
sbb
pushf
jg
jne
popa
jmp
fildll
fldcw
negb
add
je
bound
mov
adc
pop
pop
std
pop
xor
ljmp
in
mov
mov
dec
xor
stos
std
addr16
sbb
lcall
pop
dec
lods
fistl
outsl
imul
ret
pop
sbb
sub
das
in
out
dec
inc
sub
push
pop
rorl
sub
push
out
frstor
scas
inc
aam
sub
push
mov
cld
sarl
pop
xchg
adc
cli
mov
sub
mov
sub
mov
pop
pusha
pop
push
sbb
test
daa
mov
dec
cmovl
pop
dec
push
rolb
push
push
pop
cmp
add
push
add
xor
jge
fcompl
push
ds
mov
inc
adc
and
or
test
lahf
add
mov
cmp
das
test
mov
sbb
xchg
cmpsb
inc
fiaddl
lods
mov
dec
fldln2
idivl
orl
ljmp
vcvtpd2psy
dec
mov
mov
je
int
lcall
cmpsb
data16
adc
mov
fistps
js
push
sahf
lahf
cmc
xchg
pop
popf
rclb
pop
jne
dec
adc
pushf
loopne
xchg
movsb
mov
xor
cmpsl
push
and
push
out
loop
dec
test
push
cmc
std
jmp
sbb
movsl
sub
test
xchg
cmp
pop
mov
gs
pushw
lcall
xchg
xor
cmp
and
mov
jns
pop
mov
sti
test
or
mov
xchg
xor
mov
dec
inc
out
xchg
popa
imul
into
inc
sti
xlat
add
cld
out
cmp
push
cmp
jp
lret
dec
shrb
scas
divb
mov
pushf
sub
xchg
repz
and
test
push
add
mov
cmc
jo
in
outsb
pop
or
sarb
ds
inc
or
inc
in
adc
dec
cwtl
movsl
push
adc
int
into
mov
xor
daa
popa
add
es
jns
out
in
jb
cs
pop
xchg
in
pushf
pop
or
out
push
out
test
and
test
das
int3
jl
sarl
adc
scas
adcb
jnp
mov
mov
mov
mov
mov
sub
ljmp
dec
pop
js
mov
adc
or
xchg
loopne
mov
pop
cmp
ret
jnp
or
lret
mov
bound
lahf
mov
mov
pop
or
arpl
mov
lock
rolb
stos
jnp
andb
or
mov
xor
jae
repz
sbb
data16
or
icebp
mov
mov
ret
les
subb
inc
mov
test
mov
fadds
lods
mov
inc
add
mov
xor
mov
and
xor
push
or
cmpb
jae
ljmp
lock
push
cld
inc
mov
in
lods
sbb
add
and
test
in
rolb
jae
and
in
jmp
cmp
and
pushf
add
adc
das
mov
mov
lcall
inc
shl
idivb
inc
scas
xor
dec
stos
adc
mov
in
inc
jne
cmp
into
cmpsl
jmp
popa
aad
pop
mov
xchg
pop
xor
fstps
mov
jg
gs
movsb
add
or
push
cmp
and
adc
repnz
add
pop
push
jae
cmp
out
imul
mov
cmc
add
dec
sub
lcall
or
jecxz
mov
adc
cmp
ss
int
xchg
int3
cmc
adc
mov
pop
add
mov
jbe
mov
je
adc
in
arpl
jb
pop
jecxz
xlat
leave
gs
push
jno
es
push
cmp
xchg
pop
into
mov
sbb
int
sti
cmp
sub
and
xchg
push
or
push
mov
lea
and
dec
aad
ret
stc
jb
push
jg
mov
aaa
fs
mov
pushf
sbb
insl
movsl
xchg
loope
scas
mov
mov
mov
aam
lret
cltd
or
stos
push
dec
mov
scas
ds
fwait
xchg
out
pop
insb
xor
fsubr
ss
mov
enter
aas
sbb
insb
dec
dec
xchg
sub
iret
push
lods
lret
push
test
pop
rcrl
jg
mov
inc
mov
and
cwtl
add
push
nop
push
dec
xchg
enter
scas
std
ja
ss
subl
rorl
cmp
rolb
cmpsb
push
stc
lods
mov
dec
lahf
xchg
or
rcr
dec
std
push
daa
push
push
mov
push
xchg
mov
push
fisubrl
ret
mov
mov
negb
fchs
fsubl
popa
mov
shl
xchg
mov
ss
hlt
jl
push
adc
in
jnp
and
cwtl
xchg
dec
das
out
inc
jo
inc
xchg
jecxz
pop
sti
loop
push
jge
insl
ficompl
push
pop
addr16
in
and
xchg
jne
mov
mov
jle
outsb
mov
mov
and
loope
inc
mov
inc
jmp
shl
pop
pop
in
test
sbb
dec
jb
rcl
jb
inc
cmp
and
imul
in
mov
inc
jno
fimuls
inc
popf
out
nop
pop
orl
cli
xchg
mov
jl
xor
lcall
adc
sub
insl
and
sahf
clc
mov
in
adc
mov
stos
add
fcoms
cmpsb
dec
out
repz
jmp
dec
arpl
out
incb
lret
cwtl
adc
out
shll
push
cmp
aam
sbb
dec
jbe
dec
call
or
mov
or
or
inc
test
pop
jmp
vmwrite
xor
insb
js
mov
inc
out
adc
cli
xor
cltd
fwait
aas
lods
push
bound
add
testb
cmc
lahf
cwtl
cld
mov
sub
push
mov
in
adc
aas
cmp
jbe
sarl
mov
adc
mov
mov
pop
xchg
int3
fsts
push
push
inc
add
scas
test
and
add
cld
fldenv
adc
xchg
fwait
push
scas
sbb
imul
movsb
mov
mov
outsl
sub
mov
dec
inc
daa
add
mov
sub
dec
ret
in
das
xchg
repnz
popf
adcb
push
sub
mov
in
jno
insb
loope
adc
jl
xchg
dec
or
jae
fstl
in
xor
xor
ret
loop
xchg
repz
lcall
and
sti
sub
cmp
fcoml
scas
loop
mov
sbb
mov
push
mov
ret
xchg
dec
sahf
pop
fcoml
sbb
jo
or
add
into
mov
inc
add
inc
sub
in
jp
not
mov
cltd
imul
sub
stos
push
or
dec
jb
adc
cmp
add
and
ja,pt
in
push
addb
mov
cmp
sbbl
shrb
mov
mov
xor
push
or
lods
and
cmp
pop
loope
mov
mov
pushf
mov
and
jns
in
and
movsb
pop
int
and
fwait
lock
dec
jae
test
push
pop
push
fiaddl
nop
sub
mov
xor
xchg
aam
mov
sti
jae
adc
pop
stos
sub
inc
pop
lock
push
dec
dec
xor
adc
icebp
adc
push
stc
mov
daa
xchg
push
sbb
push
xchg
push
dec
xchg
push
or
addb
popa
loope
pop
adc
adc
xchg
pusha
out
pop
loope
sub
loope
adc
xlat
nop
lcall
mov
xchg
pop
mov
fiaddl
iret
ja
mov
mov
jecxz
fbld
and
jbe
mov
sahf
or
push
sbb
into
mov
sbb
enter
xchg
xor
push
movsb
pushf
fdivl
or
dec
out
xor
xorl
out
jle
dec
ret
scas
or
loope
in
xor
test
adc
xchg
jo
in
dec
or
jmp
sbb
add
lret
add
pop
jno
sbb
xor
or
xchg
xor
dec
adc
dec
loopne
sub
rcrb
pop
lret
and
mov
dec
cs
lret
sahf
pop
loop
setno
sub
sub
adc
sbb
sbb
inc
call
sbb
dec
dec
popf
gs
lods
ljmp
push
jo
pop
andl
fwait
lret
dec
fimuls
lahf
popa
inc
pop
dec
dec
or
data16
divl
jge
test
mov
jg
pop
mov
imul
ds
or
daa
push
inc
test
pop
sysret
test
dec
aas
fdivl
push
push
lods
stos
shrb
in
arpl
mov
repnz
ds
loope
daa
es
pop
mov
xchg
push
jmp
ja
jne
push
leave
mov
cli
and
jnp
in
push
inc
and
cmp
fidivrs
sub
enter
sbb
mov
mov
push
popa
adcb
lock
mov
push
std
cli
mov
pop
rolb
mov
in
fldl
ljmp
or
mov
in
in
mov
mov
out
dec
inc
incl
lock
push
lcall
inc
int3
loopne
and
dec
insb
cli
sahf
push
loop
push
inc
push
js
fwait
and
pop
adc
lea
pop
inc
xchg
add
mov
es
test
dec
scas
sbb
rcr
lea
mov
xor
hlt
ja
movsb
sub
scas
pop
pop
test
insb
hlt
int3
or
mov
out
xor
cmp
add
hlt
or
cld
dec
cmpsb
xchg
ficompl
xchg
inc
daa
push
js,pn
xchg
hlt
cltd
mov
je
and
stc
xchg
inc
aaa
sub
and
xorb
imul
popf
aaa
mov
dec
shlb
mov
mov
inc
cmp
lods
dec
cmc
push
out
jg
clc
xchg
idivl
in
xor
fs
sub
ja
mov
pop
xor
lds
jbe
inc
mov
push
loope
sbbl
aaa
inc
jno
push
stos
iret
xchg
and
jmp
rorb
test
inc
dec
or
jg
xor
lcall
outsb
xor
insl
dec
dec
scas
das
outsl
jmp
push
add
lahf
sub
inc
mov
cs
add
add
fcmovnb
mov
lret
push
mov
sbb
jnp
out
mov
adc
es
jno
mov
cmp
out
dec
dec
cmp
ja
xor
cli
sahf
dec
out
or
sub
icebp
jne
into
jle
dec
adc
sbb
xor
repnz
je
mov
rorb
pop
and
pop
nop
adc
mov
mov
add
push
or
pop
mov
lods
bound
sbb
mov
dec
sub
jp
xor
idiv
sub
xor
jae
xor
adc
ss
in
bound
shll
pop
xor
lock
jbe
mov
cmp
xchg
jmp
mov
nop
push
mov
xchg
adc
aaa
add
xchg
dec
jae
pop
out
jns
pop
sub
incb
ret
bound
andl
lock
cli
mov
adc
fnstcw
or
cmpsb
js
fidivs
daa
dec
test
arpl
pusha
adc
test
js
fldenv
rcrb
push
sub
add
lret
and
pop
sbb
xor
xlat
inc
push
shl
lods
push
pop
sbb
cmp
cltd
call
andl
fidivrs
push
enter
inc
push
mov
outsb
mov
fnstsw
fadds
pop
push
xorl
repz
pop
or
or
into
sub
sub
pop
jns
xchg
or
xor
pop
push
inc
imul
dec
xor
or
xchg
outsl
mov
sbb
jo
in
adc
or
repz
daa
jg
cmp
mov
cld
adc
jmp
lcall
jne
dec
jmp
cmp
mov
in
push
std
jle
rcll
int3
lea
push
sarl
scas
pop
pusha
push
insl
mov
pop
scas
test
pop
pop
lret
jbe
sub
out
orl
and
or
dec
mov
stos
cmp
and
add
jb
mov
into
rcrb
xchg
cmp
push
arpl
pop
sub
seto
inc
jb
aaa
sbb
shlb
mov
fs
pop
or
mov
jo
aas
loope
icebp
fsubl
mov
testl
outsb
fsubrl
xchg
xlat
aad
hlt
test
add
jge
or
fcmovnbe
sub
arpl
in
dec
data16
xchg
and
push
mov
xor
aas
into
nop
pop
sub
adc
flds
and
repnz
mov
test
push
ljmp
push
add
lock
aaa
adc
repz
or
into
out
test
cwtl
js
and
repz
daa
sar
jae
xor
insb
adc
inc
das
pop
in
iret
mov
mov
std
sub
leave
in
or
aaa
stc
jge
stos
lahf
in
mov
js
add
xchg
popa
repz
fcomps
jmp
inc
xchg
lahf
cli
or
push
leave
les
sti
mov
inc
popa
insb
jne
mov
xchg
jl
dec
test
imul
fmulp
stos
sub
push
aas
ja
cmpsb
pop
mov
movsb
mov
clc
iret
das
mov
out
fisubl
mov
add
daa
call
inc
iret
and
push
ret
sub
fst
cmpsb
or
mov
fiaddl
xor
test
imul
sub
xchg
cli
push
jecxz
sbb
cld
jae
and
in
loop
push
call
ret
pop
pop
fdivp
ja
jle
icebp
dec
jg
bound
sbb
int
mov
inc
out
pop
iret
or
mov
aaa
sbb
shrl
sbb
dec
jg
mov
or
loope
test
xchg
add
test
pop
push
stos
outsb
dec
mov
cmp
aas
fisubrl
mov
pop
int
in
repnz
daa
in
pop
fisubl
xchg
or
sub
nop
mov
int3
rorb
out
adc
sub
push
xor
idiv
out
or
lcall
and
loope
or
pushf
cmc
or
sub
jle
mov
pop
outsl
fcmovne
out
lds
xor
xchg
icebp
fmull
negb
or
jp
and
sub
xchg
jbe
leave
pxor
out
fs
or
je
test
pop
in
or
int3
fidivrl
mov
and
rol
ret
add
sub
stc
mov
fistpll
and
sub
xchg
fbld
scas
iret
stos
jnp
jae
xchg
xchg
orl
scas
inc
ja
movsb
bound
in
pop
or
push
add
imul
and
js
inc
xor
sub
insl
xor
mov
aad
dec
pop
mov
inc
pop
cmpsb
and
mov
into
jge
push
jg
sahf
add
push
cwtl
divl
cmp
movsb
lods
add
jp
out
and
mov
mov
cmp
push
stos
in
sbb
jnp
cmp
and
scas
mov
jno
pop
dec
adc
leave
mov
mov
mov
cmc
icebp
pop
xorl
pop
lret
xchg
movsb
dec
lahf
mov
cmc
push
imul
jge
out
lds
or
dec
popf
jmp
shl
arpl
mov
push
insb
test
cltd
or
cmpsl
fs
in
xchg
xor
in
inc
sbb
lock
leave
xchg
sbb
push
mov
or
aaa
sti
sbb
ss
sbb
jns
into
sti
insb
stos
inc
adc
add
mov
data16
xchg
jp
sub
jecxz
push
subb
cltd
dec
and
dec
pop
xlat
loope
or
push
imul
sbb
and
jbe
cld
fwait
jae
add
or
adc
lods
fwait
sbb
pop
lods
push
inc
outsb
push
rolb
cltd
cmp
enter
movsl
sarb
stc
pop
mov
jne
mov
xor
inc
push
xchg
jo
hlt
and
xchg
lret
xchg
int
popa
loop
je
sahf
lret
adc
in
arpl
js
inc
pop
mov
pop
in
sub
cltd
popf
leave
sbb
and
mov
and
mov
divb
pop
out
xchg
add
daa
fisubrs
jmp
into
cmp
sbb
popa
ficoml
pop
pop
push
jns
inc
test
xlat
cmp
nop
fisttps
cli
xchg
inc
pop
inc
stos
dec
ds
subl
adc
daa
in
pop
xchg
and
cmp
mov
int3
es
push
jecxz
mov
jge
mov
mov
xchg
sub
jle
xchg
cmp
push
inc
dec
xor
lods
lods
cmp
sahf
cmp
sub
orl
rcr
imul
xchg
pop
pop
ss
sbb
mov
nop
ss
test
adc
pop
xchg
stc
repz
xchg
cmp
push
hlt
mov
push
pop
mov
mov
dec
out
xchg
xchg
push
adcl
dec
pop
xor
jae
pop
add
movsb
mov
iret
push
cwtl
xorl
sahf
cli
imul
aas
xor
fisubrs
adc
scas
dec
or
cmp
push
xor
mov
fisubl
ffree
hlt
dec
lret
ret
lods
pop
loopne
outsl
dec
pop
movsb
iret
pop
xor
mov
dec
cmp
push
or
and
push
cmp
data16
rcrl
rorb
xor
or
notl
cmpsl
pop
in
mov
daa
add
inc
dec
push
mov
sahf
rorl
push
andb
add
mov
pop
push
shrb
fmuls
mov
enter
in
inc
push
mov
or
dec
sub
xor
lcall
mov
mov
in
pop
iret
stos
lods
das
inc
jno
insb
inc
push
jl
sbb
aad
cltd
negb
xchg
sbb
out
test
dec
adc
sbb
outsl
jo
add
call
cltd
jno
mov
or
jg
mov
stos
inc
cld
scas
fdivrl
test
add
mov
cmpsl
mov
out
mov
sahf
inc
jmp
jno
mov
test
lret
inc
pop
outsl
repnz
cmp
test
cmp
mov
jnp
lods
pop
xlat
mov
data16
cli
mov
push
sub
fsubl
scas
or
push
lahf
aas
jb
int
push
adc
sbb
jbe
mov
dec
push
shr
loopne
jmp
xor
dec
mov
clc
or
test
fdivrl
push
outsb
and
icebp
idivl
daa
movsl
ret
ficoml
xchg
and
aaa
jb
or
das
add
inc
sarl
rcl
pop
es
fs
xlat
popa
push
icebp
xor
aaa
subb
mov
mov
and
push
adc
imul
adc
adc
in
ret
shlb
jle
mov
out
ret
adc
test
jns
popf
dec
enter
lock
xchg
cltd
mov
mov
sbb
mov
sub
jp
das
repz
lds
cmp
cmp
sti
mov
cld
dec
jmp
xor
es
inc
push
std
jo
jo
outsl
dec
xor
pop
and
cmpsb
mov
pop
out
adc
movsb
mov
cmp
in
das
scas
adc
xchg
or
stc
or
or
repnz
cmc
mov
sub
add
filds
push
rorb
sub
push
lret
cwtl
mov
or
fcomps
scas
xor
movsl
mov
popf
mov
ljmp
imul
popf
add
test
and
add
cmp
jbe
lock
push
push
add
in
mov
insb
addr16
shrb
aas
xchg
push
dec
rcrl
and
mov
push
cmp
lcall
xor
scas
fsub
lret
into
icebp
mov
lods
out
or
dec
pmulhw
pop
lods
sub
mov
sarb
cmp
icebp
cmp
dec
jno
shlb
and
mov
inc
not
das
cmp
adcb
mov
cmp
or
or
push
mov
lods
push
push
lds
mov
int3
mov
fsubs
xchg
jmp
je
push
inc
pop
add
lock
pop
repnz
popa
mov
test
pop
mov
inc
cmp
shll
xchg
jns
add
sub
rolb
cmp
sbb
mov
pop
inc
sbb
xor
xlat
pushf
adc
sub
cmp
inc
jnp
xor
stos
jmp
push
pushf
push
mov
int3
inc
mov
xchg
repz
fcmovnbe
inc
push
sar
or
add
dec
cmpsl
insl
xor
jno
movsb
sbb
mov
dec
mov
inc
aas
fidivl
stc
stos
dec
test
sbb
loope
imul
lods
int3
or
or
or
outsl
adc
insl
movsb
add
orl
and
inc
push
push
inc
test
out
sub
loope
xor
lods
data16
mov
testl
cmpsb
xchg
inc
dec
dec
mov
nop
adc
stos
xor
ficoml
std
bound
inc
xor
shr
mov
lahf
rcl
imul
rcl
addr16
sub
jnp
pop
xchg
push
mov
dec
xor
out
jle
add
mov
pop
fsubr
scas
xchg
mov
cmpsb
mov
xchg
loope
movsb
icebp
xor
popf
bnd
push
push
and
xchg
fsin
dec
addr16
add
mov
aaa
into
jno
mov
insl
adc
bound
imul
cltd
jecxz
sbb
sub
aam
mov
inc
sbb
test
outsb
and
adc
ja
mov
insb
push
aad
cmc
jae
adc
adc
xchg
nop
jp
sub
mov
int3
xor
xor
mov
add
in
push
loop,pt
xor
cmp
pop
pop
xlat
jg
lds
jp
xor
scas
outsb
and
lods
dec
loopne
addr16
pop
pop
je
pop
fmul
xor
mov
mov
add
jmp
and
mov
or
inc
inc
shrl
adc
inc
xor
xchg
nop
mov
xorb
divb
jp
loop
sub
and
mov
dec
enter
call
add
in
inc
jno
push
xchg
sti
sub
push
sbb
dec
and
pop
sub
ljmp
aaa
inc
out
stc
cwtl
insl
lds
shr
stos
mov
push
outsl
mov
push
inc
xor
imul
sub
sbbl
aad
inc
ja
add
pop
adc
pop
in
adc
mov
jecxz
cwtl
xchg
inc
mov
jl
pop
fsubrp
and
das
in
gs
stc
fisubs
push
cmp
nop
dec
xchg
xchg
push
mov
stc
std
sbb
js
mov
stos
inc
pop
pop
insl
pop
jge
imulb
lds
leave
push
jl
repz
js
das
in
mov
inc
mov
push
bound
or
xchg
jnp
push
sahf
outsb
insb
in
xchg
out
push
or
mov
mov
or
pop
stc
mov
rclb
adc
sbb
cs
jae
in
add
stc
add
jb
adc
out
cmp
js
in
sbb
rcl
inc
dec
jb
faddl
sub
and
pop
xor
cld
xchg
fcmovu
add
dec
cmp
xchg
loopne
ret
adc
pop
add
mov
mov
cmp
pop
xor
insb
mov
imull
xchg
loope
in
popa
in
jl
push
and
ljmp
pop
andl
mov
or
adc
and
out
mov
cmp
inc
dec
out
jb
stc
fldt
add
push
aaa
mov
into
push
lret
sub
or
addr16
in
push
sbb
jae
mov
popf
cmp
push
pop
jle
sub
mov
imul
push
gs
and
ret
inc
and
shll
xor
pop
sbb
imul
int
ret
hlt
sbb
cmpl
int
je
mov
daa
adc
add
jg
lahf
movhps
and
xlat
dec
std
lahf
test
and
xchg
out
cs
push
mov
jae
adc
adc
popa
mov
bound
popl
xchg
dec
mov
aaa
pop
stos
xlat
adc
cmpsb
push
cli
add
sub
sub
push
mov
ss
pop
or
mov
cmp
and
pop
push
push
cltd
aad
mov
mov
or
and
mov
mov
into
fistpl
daa
js
out
jle
movb
movbe
out
iret
jno
push
jge
jb
and
pop
outsl
sub
lret
lea
das
mov
mov
push
lock
int
push
inc
jmp
inc
pop
sub
add
popa
and
mov
or
std
nop
enter
and
mov
fwait
jae
cmpl
fwait
pushf
dec
fstps
clc
call
lahf
leave
pop
pop
lahf
lret
cltd
adc
jno
add
nop
nop
adc
mov
jbe
push
divl
enter
imul
xlat
aaa
mov
mov
mov
xorl
xor
push
sbb
insb
data16
sub
jp
aad
rorl
out
sub
mov
lahf
push
and
fisttps
arpl
fwait
sbb
loop
pop
clc
mov
pop
jbe
pop
mov
out
loop
push
cmp
aaa
xchg
loopne
jp
and
arpl
jecxz
in
xchg
cmpsl
jmp
and
imul
repnz
cmpsl
data16
mov
inc
adc
pop
iret
outsb
stc
xchg
aad
mov
dec
pop
ficoms
lahf
inc
jo
ss
inc
pop
cmc
xor
cmc
jecxz
adc
add
mov
mov
mov
inc
or
mov
in
sti
scas
and
sub
fdivp
inc
xor
sub
ja
push
lcall
xorl
test
fsubl
movsb
test
je
mov
cmp
xchg
rcll
loop
and
iret
and
cs
mov
out
or
lret
inc
ret
push
adc
pop
mov
dec
mov
pop
icebp
cld
repnz
in
cmp
jbe
xorb
cld
lret
jg
jge
popf
sub
sub
push
lret
or
adc
push
mov
push
repz
sbb
dec
cwtl
pop
cmc
ret
fldcw
inc
push
rcr
and
jnp,pt
adc
test
lods
cmpsb
out
repnz
sarl
mov
faddl
jne
sbb
andl
push
push
lret
push
or
jg
lods
lea
adc
es
mov
test
xor
cmpsb
cmpl
pop
mov
mov
push
push
out
and
or
inc
dec
rcll
stc
xorb
roll
dec
and
and
push
mov
mov
mov
rcrl
addr16
imul
outsl
jb
ret
jno
test
mov
sub
push
pop
sub
or
add
xchg
js
stos
lds
movl
stos
lock
fdivs
lods
lods
mov
push
aad
js
cltd
icebp
push
scas
or
mov
aas
sbb
push
sbb
mov
cmpsb
push
aas
xorb
imul
or
sbb
ds
inc
into
lock
lret
ljmp
ret
pop
cwtl
dec
imul
out
sub
cli
xchg
jg
adc
dec
mov
and
fwait
es
or
and
pop
mov
push
sbb
mov
and
ret
addr16
je
pop
cmp
ss
sbb
loop
or
mov
jnp
nop
add
mov
jmp
rcrl
orl
mov
dec
mov
cmp
ljmp
out
jl
dec
jge
pop
stos
add
add
je
das
ret
jnp
sbb
cmp
enter
aad
sub
subl
ret
add
sahf
push
push
xor
lret
push
stos
sbb
push
stos
jp
mov
aad
inc
inc
cltd
sub
xlat
data16
lea
dec
mov
pop
adc
pop
and
fdivl
jne
test
test
std
jae
std
lods
fsts
mov
xor
imul
xchg
add
fs
nop
idivl
popf
cmpxchg
inc
jns
lock
mov
xchg
sbb
test
insl
sbb
lods
pop
sti
roll
stc
sbb
jo
xlat
in
and
ja
push
vmovaps
outsb
in
sub
jmp
sub
inc
sub
and
push
imul
lds
les
incb
push
mov
xlat
cli
mov
popf
enter
xlat
rcrl
push
pop
out
inc
outsb
daa
inc
je
and
add
cmp
rorl
subb
mov
mov
pop
insl
stos
sahf
shl
xor
mov
imulb
dec
adc
imul
aad
fwait
or
dec
mov
sbb
sub
scas
rclb
sahf
sub
inc
pop
icebp
idivb
inc
dec
mov
jns
sbb
sbb
lret
mov
pop
ret
jmp
das
jbe
adc
sbb
cmp
adc
std
sub
mov
or
dec
pop
xchg
out
inc
fcmovnbe
inc
dec
dec
subl
pop
add
push
in
mov
je
push
jns
ror
jbe
call
push
push
loopne
int
icebp
popf
lahf
or
push
jl
pop
out
dec
in
aaa
pushl
jmp
les
mov
int3
adc
dec
xchg
and
fdivr
testb
and
cltd
fisubrs
adc
add
or
dec
sub
push
and
aas
loop
pop
push
jp
adc
pop
xor
repz
clc
lret
xorl
outsb
push
das
push
jae
out
push
in
mov
pop
pop
dec
sbb
sbb
lods
dec
push
and
jne
test
lret
push
adc
mov
orl
testl
add
and
cmp
cmpsb
in
sbb
ret
pop
lret
sbb
enter
and
mov
loope
movsl
ja
mov
ja
pop
nop
jno
jno
adc
xchg
arpl
out
filds
sahf
shrl
cmp
push
fstps
int
js
xor
clc
lahf
iret
out
int
push
test
jp
jle
adc
sbb
test
sub
das
mov
xchg
adc
cmpsb
das
inc
or
inc
sbb
mov
push
pop
test
nop
inc
outsb
or
cwtl
daa
and
adc
mov
jg
testb
cmp
push
and
sbb
idivb
sbb
pushf
clc
shll
lods
inc
gs
dec
adc
mov
mov
pop
xchg
lods
mov
and
mov
in
and
inc
or
sbb
or
out
xor
add
sub
pushf
shrl
push
pusha
clc
sub
dec
test
sub
inc
nop
mov
and
das
pop
push
es
or
js
mov
xchg
xlat
sbb
sbb
lcall
jle
scas
mov
jns
aam
adc
adc
loope
add
add
test
movsb
mov
pop
or
gs
xor
mov
sub
mov
lock
test
pop
movsl
adc
push
cmp
sbbb
adc
xor
lea
sar
das
fwait
inc
xchg
or
or
idivl
jecxz
std
loop
mov
mov
cmpsl
and
sub
inc
jno
xor
into
inc
jnp
repnz
and
pop
sbb
mov
or
jo
xor
xor
xor
roll
and
xor
lods
adc
adcb
loopne
and
inc
inc
xlat
aam
divl
jb
mov
and
jae
cmp
lret
mov
out
hlt
stc
xchg
jbe
sbb
loop
fiaddl
inc
mov
sub
aaa
or
xchg
push
add
aaa
push
lods
shrl
pop
fldt
aam
sub
in
pop
arpl
adc
and
ret
out
bound
imul
idivl
cmp
jge
jne
ds
fs
mov
and
xchg
stos
mov
cmp
or
cmp
push
mov
clc
je
mov
sub
push
cmpb
inc
sbb
dec
push
jl
mov
imul
fsubs
sbb
xor
lds
cmp
popf
jne
aaa
lock
xor
sub
push
xor
jno
xor
mov
jecxz
mov
les
nop
mov
bound
sarb
lock
jno
xor
mov
stos
jecxz
mov
fidivs
test
fbld
dec
add
inc
pop
cmp
loopne
dec
stc
rcrb
test
out
mov
sbb
inc
lods
sbb
push
xor
sbb
enter
js
adc
xor
inc
mov
gs
gs
push
lret
aad
aad
rol
sbb
cmp
xchg
inc
inc
mull
daa
xchg
lea
sub
push
inc
insb
push
aaa
jl
and
je
rcrb
mov
lods
insl
scas
pop
jo
cmpsb
mov
and
scas
push
mov
sub
inc
mov
pop
push
pop
fbld
or
add
pop
out
mov
inc
idiv
jnp
and
aaa
ss
daa
test
pop
jge
mov
inc
jmp
adc
mov
mov
jecxz
jmp
lock
outsb
xor
das
jae
lods
inc
push
and
mov
jo
pop
test
mov
enter
xor
dec
or
mov
dec
add
addb
fwait
mov
dec
sbb
cltd
xchg
sbbl
std
push
sub
pop
jmp
adc
dec
inc
stc
pusha
push
mov
jae
sub
push
sbb
mov
pop
fidivl
mov
pusha
or
lahf
ror
mov
je
in
ret
das
jl
mov
and
shlb
sahf
dec
icebp
cmp
pop
ret
mov
mov
aaa
popf
in
or
aad
gs
xor
push
cld
xor
xor
dec
arpl
daa
adc
sbb
jmp
cmp
push
dec
mov
inc
negb
and
lret
mov
lea
sub
test
testl
dec
xor
roll
cmp
mov
jno
mov
hlt
pop
decl
xor
jp
data16
mov
dec
fcmovne
push
scas
sbb
or
pop
sahf
mov
lret
xchg
jecxz
and
int
add
inc
rorb
lock
lret
es
push
bound
dec
imul
pusha
push
aas
pop
outsb
bound
fldenv
divl
test
mov
or
jle
insl
lds
pop
scas
pop
shrb
imul
and
or
sub
or
shll
or
fs
popf
push
cli
repz
mov
push
shl
mov
sbb
out
inc
sub
jmp
ffree
call
cmp
mov
lock
scas
push
cmpsb
les
test
jmp
cmp
mov
into
xchg
push
fs
mov
inc
push
test
stc
cmpl
imul
repnz
filds
rorb
pop
jmp
mov
imul
mov
mov
cmc
dec
lcall
fmull
pop
pop
ret
outsl
inc
inc
mov
lahf
mov
dec
push
outsb
test
cmc
push
das
lods
out
cli
shr
push
into
out
into
xchg
mov
mov
hlt
adc
xchg
iret
push
mov
pop
adc
adc
out
cmp
sbb
insb
hlt
pop
add
dec
sbb
push
pop
shlb
mov
dec
mov
or
aad
frstor
ret
push
call
mov
and
or
jbe
les
mov
mov
pop
int
add
sbb
out
es
addl
dec
xchg
loope
dec
pop
ficomps
outsb
mov
pop
jmp
mov
insl
out
fldcw
loopne
fnstcw
jnp
out
ja
lcall
gs
cmp
xchg
sub
jo
popa
adc
stc
push
cwtl
pushf
cmp
sub
jbe
pop
pop
lods
fisttps
imull
sub
jbe
into
repz
movsl
mov
xor
sbb
add
dec
rorb
aaa
mov
adc
test
sbb
push
rcll
mov
test
push
cmp
inc
sub
inc
cmp
ja
cld
xor
clc
xor
mov
dec
adc
add
daa
pop
jbe
mov
pop
cwtl
test
sahf
icebp
push
insl
rorb
dec
adc
faddl
mov
dec
mov
xor
out
add
inc
shll
adc
jp
sbb
inc
push
sarl
add
push
fcomp
xchg
sub
jnp
jp
mov
xchg
push
je
fmuls
fdivrs
mov
sbb
fsubl
bound
pop
aaa
adc
test
cmp
push
pop
dec
popa
int
addl
rclb
jnp
push
sbbl
cmc
loope
xchg
pop
and
sbb
pop
mov
enter
cltd
ds
cmc
aas
lcall
popa
pop
push
mov
pop
cmp
ss
loop
into
sahf
ret
or
lods
or
xor
mov
jge
mov
in
inc
xchg
clc
test
mov
addr16
ja
lds
ret
rorl
fxch
cltd
jno
loop
test
mov
mov
mov
mov
enter
or
pop
lahf
mov
lods
scas
clc
sub
gs
roll
sbb
subl
test
inc
and
mov
jle
insl
out
lret
not
fwait
cmp
ss
adc
shll
pop
loop
addr16
or
mov
fwait
sarl
out
or
or
rorb
mov
xor
mov
sub
test
jno
repnz
subb
push
imul
cmp
add
repnz
aad
ljmp
cmp
pop
in
arpl
inc
dec
aam
cs
xor
or
lcall
xchg
mov
sbb
fdivs
repnz
loopne
inc
and
adc
push
inc
rcrl
cmp
mov
mov
and
cmp
and
cltd
adc
xchg
mov
push
jl
sbb
pop
pop
ljmp
xor
jg
adc
adc
scas
push
inc
mov
push
rcrb
jb
dec
jge
ret
cwtl
ret
jbe
in
fwait
cmp
mov
ror
add
inc
jmp
je
inc
in
xor
mov
in
bound
out
fsubrp
inc
jne
jle
insb
mov
push
into
imul
jo
xor
or
push
or
push
sub
sahf
xchg
fs
adc
xor
adc
ljmp
lret
push
jnp
loope
xor
idivl
xor
fucomi
mov
pop
ror
stos
sbb
loope
shll
jp
scas
jl
jo
push
enter
cmpsb
push
jl
pop
stc
lret
xchg
mov
add
into
and
sub
push
dec
mov
push
xor
enter
lcall
push
int
mov
pusha
mov
leave
or
push
add
xchg
sub
pop
fs
sub
sbbb
push
jnp
stos
mov
andl
rcrl
sbb
push
iret
add
cmp
sub
fcomps
lea
mov
jg
jae
ljmp
loop
add
add
xor
or
sub
arpl
jns
aad
pop
pop
push
popl
js
in
fdivrs
and
xchg
mov
adc
xchg
mov
cmpsb
addr16
adc
aaa
ret
pop
test
ja
enter
sbb
sbb
imul
inc
sbb
imul
sbb
push
rorl
xlat
out
cmp
xor
loopne
pop
dec
mov
jns
pop
push
ficoms
mov
popa
movsl
push
sbb
mov
in
mov
andl
es
adc
pop
insb
out
push
fnstenv
fistpl
cmp
jo
push
addb
mov
cs
mov
and
or
cmp
bound
jns
fisubrs
data16
leave
jae
lods
mov
arpl
sbb
sbb
push
mov
push
mov
ss
mov
xor
and
divb
mov
pop
and
sbb
fwait
dec
mov
fists
leave
fmull
xchg
add
mov
or
stc
mov
mov
mov
jno
add
push
inc
pop
xor
push
adc
rcrb
insl
js
inc
jne
cli
xor
les
xchg
adc
push
mulb
lock
xchg
out
cld
rolb
xor
neg
lret
add
nop
outsb
sbb
add
in
xlat
xchg
dec
call
push
ret
scas
js
sub
jge
mov
stc
inc
sub
cmpl
pop
inc
dec
je
push
adc
mov
add
shll
aad
and
pop
stos
call
dec
loop
int3
out
or
adc
inc
std
rorb
adc
dec
ficoml
adc
sbb
fsubp
rclb
pop
cltd
pop
or
or
inc
wrmsr
xchg
sub
mov
xor
push
push
repnz
cmp
movsl
xor
fimuls
mov
orb
mov
or
imulb
pop
add
scas
or
aam
maxps
push
shlb
cltd
out
mov
sub
int3
xchg
mov
sbb
mov
or
call
lock
fs
mov
lock
dec
xor
testl
repz
jnp
enter
lock
inc
in
xchg
pop
jge
cmp
adc
pop
int3
dec
fidivl
lret
int3
dec
inc
and
insl
jp
mov
call
enter
repnz
mull
ja
fdiv
decb
movhlps
jno
inc
sbb
mov
insl
aam
jecxz
int3
lahf
cmp
fsts
ret
lods
lods
push
mov
icebp
bswap
add
cmp
mov
arpl
mov
push
add
filds
inc
mov
pushf
mov
xor
inc
mov
pusha
push
cli
cmovo
jge
test
cwtl
jns
mov
or
and
les
xchg
mov
mov
add
sub
jnp
lret
mov
adc
roll
xor
fwait
and
cmpsb
stos
aam
push
mov
cmp
in
cld
sub
xor
sbb
scas
xor
dec
imul
insb
push
rorb
and
repz
jl
orb
xchg
icebp
rcll
push
mov
dec
arpl
xchg
sahf
or
lret
dec
rcrb
push
mov
cmp
push
test
sti
js
inc
mov
imul
mov
hlt
icebp
insb
add
mov
add
mov
leave
push
push
aad
sub
shl
jg
lret
pushf
cmc
cmp
sbb
xor
lret
cltd
stc
push
lds
push
fildl
sub
pop
adc
jmp
cmp
push
or
repz
pop
or
mov
jge
test
push
mov
cwtl
jmp
adc
repnz
movsb
sti
clc
lods
std
adc
push
adc
mov
dec
loop
cmp
les
shrl
jcxz
cmp
add
int3
in
push
std
xchg
cld
adc
sub
loopne
push
pop
mov
shrl
out
cmpsb
xchg
cmp
sbb
stos
addl
adc
adc
orl
xchg
lret
incb
adc
in
mov
fs
or
xchg
inc
fisubrl
jnp
xchg
push
sbb
mov
jge
mov
adc
ret
ja
ja
mov
sub
pop
cmp
and
sti
aaa
mov
out
jne
jb
xchg
cmpsl
and
push
imul
jno
sbb
cmpsb
ss
xchg
inc
das
mov
pop
loope
loopne
pushf
outsb
xchg
iret
or
mov
xor
sbb
inc
mov
pop
add
mov
sub
shl
mov
pop
cmp
loopne
xor
rcll
mov
pushf
jl
mov
jge
inc
and
outsb
jge
enter
testl
mov
fisubrl
mov
inc
push
pop
cli
divb
and
dec
sbb
test
pushf
lcall
cmp
add
add
sbb
and
mov
cmp
and
or
sbb
cltd
pop
jecxz
inc
lret
or
loopne
sbb
test
push
out
push
out
addl
ret
pop
jmp
dec
add
lahf
das
push
mov
call
sub
shrb
push
xchg
lret
movsl
ljmp
adc
xor
adc
mov
ret
leave
and
dec
fidivl
inc
inc
sub
je
int3
clc
pop
add
and
iret
mov
sti
jbe
adc
sub
jle
sbb
mov
data16
aad
jecxz
sub
int3
mov
shrl
dec
lea
xchg
ss
ljmp
xchg
jp
xor
cmp
push
jp
mov
mov
jnp
or
sbb
out
daa
sbb
pop
es
fildl
xor
xor
mov
aad
gs
loop
hlt
xchg
push
and
jne
inc
xor
sbb
lahf
cmp
push
mov
out
sub
xor
add
dec
lret
xchg
std
loop
pop
jg
push
bound
sub
jb
shl
mov
mov
dec
loop
aaa
dec
jg
in
stc
dec
pop
popa
mov
cs
inc
push
scas
daa
mov
std
push
sub
and
push
iret
lahf
roll
or
into
pop
mov
and
pop
sti
push
fs
fsts
dec
paddw
inc
repnz
out
vmaskmovdqu
stc
negl
or
mov
and
push
sub
jns
stos
add
loope
xor
sub
mov
mov
fcoml
filds
cmpsl
out
xor
cmp
jnp
aad
push
cmp
ret
loope
inc
and
inc
and
dec
mov
pop
fcomps
out
shrl
enter
jo
jl
sbb
insl
xlat
fldl
jo
test
popf
xlat
rclb
mov
jae
jmp
sub
pop
addr16
xchg
sbb
pop
testl
inc
jl
aam
xchg
pop
adcl
push
pop
pop
inc
push
pop
out
pop
fiadds
push
jmp
sbb
pop
ret
dec
lods
xor
push
lock
divb
stc
data16
xchg
sbb
repz
sub
nop
sub
insb
jl
aas
cs
fwait
aaa
int
outsb
es
jnp
xchg
mov
mov
imul
fs
sbb
loope
inc
outsl
cmp
inc
ja
xor
adc
and
addb
lock
daa
mov
xchg
stos
imul
adc
clc
hlt
out
fucomip
push
decl
mov
mov
xchg
test
cltd
and
sbb
les
cmp
pushf
out
repnz
mov
jge
jp
xchg
out
out
jge
in
lock
pop
jne
or
cmp
sub
sbbb
pop
ret
sbb
inc
mov
inc
fimull
or
inc
mov
pop
fcoms
jae
pop
jo
lcall
imul
gs
lea
pop
push
lcall
xchg
push
movsl
jmp
dec
shl
jb
mov
sub
xlat
fiadds
sbb
lret
xor
jl
data16
inc
ret
xchg
out
dec
xchg
adc
mov
ss
mov
adc
add
inc
ret
and
es
nop
inc
fstpt
aam
push
sahf
xor
int3
iret
stos
in
loopne
push
xchg
fs
sti
jp
into
rorl
lahf
cmp
mov
and
xchg
mov
test
ret
fnstenv
loopne
int
or
jnp
pop
cmp
jle
jnp
inc
xchg
popa
sub
cli
push
loopne
sbb
mov
sbb
push
lock
repnz
in
cmp
jae
dec
adc
out
std
fsubrs
sub
es
mov
adc
xlat
ljmp
daa
into
fisubrs
cltd
cwtl
outsl
not
outsb
mov
mov
push
sub
sahf
mov
mov
inc
mov
sub
jle
clc
push
and
add
cmpsb
push
sub
dec
adc
ss
fidivl
push
xor
adc
xchg
jmp
inc
pop
pop
test
or
jns
dec
in
lock
fnstcw
cmp
push
xlat
leave
jle
cwtl
jno
jno
add
lods
fnstenv
pop
inc
xor
jg
mov
jmp
lea
clc
leave
add
sbb
pop
mov
jbe
jae
cli
mov
add
mov
xchg
add
pop
pop
dec
mov
std
insb
jmp
inc
pushf
cmp
mov
adc
cs
and
lods
jne
arpl
dec
sbb
jbe
sbb
lock
int3
mov
cli
movsl
or
ret
cs
mov
and
dec
mov
or
pop
adcl
jg
push
mov
out
xor
push
mov
xor
ds
jp
aaa
testb
mov
dec
mov
cmp
rorb
jge
mov
push
or
push
cwtl
out
pop
pop
or
lahf
cmp
jns
lret
aad
aam
jo
out
movsb
or
push
sbb
lret
cmp
jnp
mov
sub
clc
sub
ret
dec
cmpb
out
and
dec
into
xchg
aaa
test
cmp
sbb
cld
push
rcrl
aas
push
movsl
pop
push
add
pushf
dec
stos
mov
in
lret
into
xor
lods
dec
xlat
lcall
sub
dec
in
aaa
movb
loop
xchg
mov
addr16
or
cmp
cmp
cmp
dec
aad
jb
int
fs
fcoms
aaa
lds
mov
inc
push
adc
or
nop
lcall
cmc
daa
aam
aam
rcll
arpl
fldl
mov
mov
add
mov
les
add
xchg
mov
test
sub
inc
leave
inc
cwtl
cmp
ficomps
mov
arpl
out
test
aam
outsb
addr16
nop
leave
sbb
inc
inc
and
inc
loope
lahf
inc
xor
xor
xor
aam
dec
mov
xchg
mov
nop
push
shll
and
daa
xlat
pop
inc
stos
mov
scas
stc
push
or
vprotq
movsl
out
repnz
aad
sbb
cmp
bound
lret
fisubs
inc
fisttps
shll
ds
xchg
les
pop
dec
cmp
jo
pop
je
sub
cmpsl
jp
mov
ljmp
movsl
dec
xchg
mov
mov
push
sbb
scas
rolb
imul
sbb
ljmp
ret
mov
in
cmpsb
dec
sub
nop
pop
xchg
sbb
pop
mov
divl
dec
xchg
mov
pop
dec
mov
sub
dec
bound
inc
mov
push
sbb
sbb
or
push
notl
popa
mov
xchg
jle
mov
arpl
mov
push
popf
addr16
idivl
cmp
cmc
imulb
outsl
es
xorl
sahf
jge
ficoms
mov
pushf
out
mov
bnd
das
mov
popf
mov
cmp
inc
js
sbb
jle
xchg
pop
mov
ja
inc
cli
cld
test
leave
inc
inc
xchg
mov
out
and
xchg
push
sahf
hlt
jl
add
fnstenv
inc
push
push
mov
pushf
iret
lock
jle
mov
push
das
movb
xor
and
clc
xchg
sbb
add
scas
add
pop
in
inc
rcrl
pushf
pop
mov
fisttpl
test
test
or
fsts
xchg
cmp
test
dec
js
xor
in
enter
ljmp
aam
jmp
push
rorl
mov
add
sti
mov
jl
repnz
sub
xchg
add
lods
adc
mov
xchg
sbb
mov
adc
or
rol
xchg
push
xchg
mov
sarl
pusha
mov
rolb
push
scas
in
cmp
fisubl
js
add
adcb
shlb
dec
sahf
jg
dec
repz
sub
add
out
mov
add
mov
jecxz
dec
pop
lahf
fnsave
int
lea
or
das
pop
fcmove
mov
mov
push
imul
xor
cmp
fsubrl
aam
add
mov
xor
lret
fdiv
pop
cmpsl
push
mov
repz
testl
lretw
lcall
fisubl
sbb
inc
dec
cmp
sar
out
out
dec
inc
pop
mov
cmpsl
stc
pop
lcall
outsb
loop
stos
sub
fistps
imul
jno
lock
dec
out
pushf
dec
testl
fidivl
cmpsl
mov
popa
aaa
sbb
fisubs
pop
or
call
fidivrl
shr
in
into
mov
sarb
lcall
aaa
pushf
inc
mov
dec
or
lods
or
dec
sbb
aas
and
shlb
sti
sub
xchg
sub
fsubrl
ljmp
mov
cmp
mov
int
pop
pop
data16
jl
dec
pushf
mov
mov
mov
xchg
loopne
lea
test
mov
mov
cmp
cmp
rcrb
pop
xchg
adcl
mov
inc
in
sbb
faddl
pop
inc
rclb
jo
pop
out
lahf
cs
inc
imul
inc
push
push
and
mov
popf
xchg
pop
js
add
popa
jne
out
call
cmp
cltd
repz
iret
mov
jns
ss
outsl
mov
cmp
xor
pushf
addr16
nop
out
inc
test
fwait
xor
mov
mov
push
andl
or
push
and
cli
inc
xor
jp
std
dec
shll
jmp
mov
cmp
push
mov
add
data16
or
imulb
jmp
popa
out
sbb
lahf
xchg
and
cltd
lret
add
enter
scas
xchg
test
mov
sub
sbb
cmp
mov
mov
push
gs
shll
dec
out
cmpl
push
xor
xor
test
nop
gs
loopne
fcompl
pushl
sub
inc
jg
dec
rorb
outsl
movsb
mov
in
sbb
mov
ret
and
adc
cmpsl
roll
xchg
adc
lods
cmc
rcll
loop
jns
fildll
scas
jmp
sbb
xchg
add
sbb
xor
orl
dec
popf
xchg
xor
sbb
mov
or
mov
mov
bound
cs
clc
in
test
mov
inc
stos
xchg
lret
xchg
pop
clc
pusha
cmpsb
ret
insl
add
js
push
out
shl
scas
xchg
pop
sub
sub
or
push
test
adc
xor
adc
or
xchg
and
inc
jg
xchg
mov
xor
and
jmp
test
les
pop
mov
clc
pop
cltd
jmp
cmp
mov
imul
push
adc
jae
daa
push
lods
jne
cmp
xchg
leave
lret
adc
dec
out
jmp
loope
mov
sahf
test
cwtl
pop
ja
pusha
mov
lea
notl
fiadds
add
push
cmc
or
cmp
xchg
mov
nop
add
roll
push
pop
sbbl
pop
cltd
insl
or
push
inc
lret
jbe
adc
adc
jle
and
jge
jg
add
mov
inc
cwtl
push
and
scas
dec
ffree
mov
lret
mov
xchg
and
repnz
jmp
pop
nop
ljmp
arpl
fstp
add
lea
mov
or
icebp
push
push
mov
lods
testl
jns
lret
add
movsl
imul
cmc
scas
icebp
add
out
sahf
xchg
mov
xor
cmp
sbb
cmpsb
xchg
inc
addb
pop
push
and
rolb
mov
or
insb
aas
stc
xchg
call
mov
lock
push
outsl
or
nop
pop
mov
lock
mov
xchg
inc
cmpb
push
jmp
adc
int3
jo
ror
push
sbb
call
repnz
inc
test
pushf
and
mul
xchg
call
push
add
pop
in
pop
inc
dec
adc
mov
or
pop
xor
push
enter
fnstenv
ss
and
cmp
loope
adc
sub
sbb
dec
popa
lods
xor
jecxz
stos
push
mov
sbb
cmp
xor
pop
out
lahf
pop
out
fildll
mov
mov
mov
sub
mov
ror
lock
dec
jbe
fildl
mov
enter
mov
add
jmp
inc
dec
push
ds
mov
psllq
fnstcw
fstpl
jg
pop
lahf
mov
inc
push
mov
int3
add
xchg
mov
lea
and
movsb
inc
in
mov
imul
hlt
in
xchg
cmp
add
xchg
cli
xchg
mov
imul
cmp
sti
lock
fimull
xor
sahf
fnstcw
call
xor
jmp
inc
lcall
and
test
jo
pop
mov
pushf
ljmp
addr16
sbb
cmp
inc
cmc
andb
jle
popf
arpl
mov
mov
rcll
pop
adc
aad
popf
mov
clc
sub
push
daa
push
cmpl
out
xchg
cld
lods
push
push
and
cmp
add
or
cmp
xor
xor
xor
lahf
movsl
sub
pop
stos
dec
iret
repz
sub
es
mov
repz
jno
xor
xor
insb
jle
fs
adc
cli
cld
js
test
mov
mov
mov
mov
daa
pop
inc
mov
nop
loope
dec
mov
mov
jae
jecxz
adc
xor
xchg
imul
inc
cli
cmp
dec
std
pop
dec
cmp
or
xchg
push
jle
dec
movsl
xchg
stos
arpl
jae
clc
shll
mov
mov
xor
addr16
sbb
adc
lret
adc
enter
mov
stos
shll
xchg
orb
xchg
jne
lcall
test
addl
iret
in
into
and
inc
and
scas
dec
mov
dec
or
mov
xor
and
lcall
sbb
cli
and
aam
xor
aas
mov
in
mov
out
and
pop
adc
inc
movsb
cmp
xchg
roll
sti
dec
aas
jbe
mov
xor
add
dec
cmpsl
push
jo
lock
popf
push
and
lahf
sbb
xchg
push
ds
mov
std
es
push
or
rep
mov
lds
js
jmp
mov
sub
dec
lcall
movsl
out
jmp
cmc
iret
cs
cmp
imul
lcall
je
jg
cmp
and
fs
lahf
jecxz
mov
cwtl
jle
repz
repnz
inc
cmp
insb
cmp
jecxz
mov
fcomps
fs
mov
into
add
addr16
fdiv
fcomi
cmpsl
ja
rcrl
pop
clc
pop
pop
sub
je
jl
mov
mov
fs
lea
push
mov
inc
sub
lahf
inc
xor
sbb
sub
roll
inc
ficoms
leave
lds
cmpxchg
and
fwait
xchg
fiaddl
stc
cmp
xor
mov
stos
test
movsb
push
mov
mov
fadds
addl
js
pop
test
mov
jg
sbbb
and
cmpsb
mov
jnp
lea
jmp
enter
shrb
and
aas
ds
xchg
call
xchg
add
mov
out
inc
dec
sub
out
push
add
adc
adc
bound
jb
pop
call
sarl
and
dec
sbb
call
adc
repz
xchg
insl
push
ja
mov
mov
arpl
or
push
ret
sbb
stos
push
adc
mov
sbb
sahf
pop
in
jp
aas
hlt
jae
xor
xchg
jmp
ds
push
shr
icebp
mov
sahf
out
cmp
dec
stos
cwtl
ret
lock
aas
push
mov
ds
ret
jb
push
inc
movsb
gs
fsubrs
cs
iret
and
jno
push
cmp
repnz
push
mov
and
adc
push
or
lock
movsl
adc
jne
testb
xchg
out
cmpb
fldt
imul
ss
mov
in
sub
cmp
ret
data16
jle
sbb
in
pop
lret
and
das
icebp
xchg
dec
arpl
fstpt
inc
push
push
sub
sub
imul
jmp
ffreep
cmc
mov
push
push
enter
nop
out
sub
push
ds
inc
add
inc
sub
xor
ficompl
sub
push
jmp
pop
dec
repz
pop
adc
mov
cmp
movsb
outsl
out
dec
cmp
inc
push
mov
jge
test
and
add
cwtl
mov
mov
pop
pop
sub
test
add
xor
fmul
mov
sbb
sti
jp
inc
fwait
lahf
pop
int
repnz
testl
lret
pop
test
insl
cmp
sub
mov
cmp
jns
mov
pop
rcrb
jmp
xchg
jg
xor
cli
aas
xor
cmp
test
outsl
xlat
mov
xchg
adc
into
sub
pop
sbb
xchg
or
aam
pushf
test
in
and
lods
addr16
pop
test
js
outsl
jecxz
in
notb
and
fs
add
loope
movsb
sahf
jno
mov
xchg
lods
jno
cmpsl
jmp
and
and
sbb
pop
pop
repnz
pop
xchg
sub
mov
fwait
sarl
mov
or
movsl
sbb
movsb
mov
out
iret
or
sub
adc
je
rorb
jecxz
lock
push
loopne
aad
sti
push
fiadds
xchg
dec
push
insl
adc
mov
mov
and
pop
push
outsl
add
cmpsb
inc
and
cs
call
insb
sub
cltd
sbb
jp
sahf
leave
mov
aam
pop
leave
dec
inc
jmp
inc
and
lea
push
or
xchg
jl
repz
jmp
push
or
add
loopne
add
inc
into
or
mov
pop
sbb
jp
cmp
cmp
xchg
loopne
iret
jmp
ja
inc
movb
fldenv
outsb
scas
les
adc
pop
xchg
in
cmc
je
popa
es
add
popf
lock
sbb
fsubs
add
js
test
ret
sbb
push
dec
clc
inc
insb
jae
inc
jb
loopne
in
test
jg
rcll
daa
and
iret
cmpsb
dec
icebp
ficompl
cltd
imul
addr16
pop
pop
mov
std
xor
jne
sub
out
xchg
dec
add
test
or
mov
fwait
cmpsb
test
imul
lret
add
dec
xchg
add
jmp
sbb
fstpl
pop
and
adc
inc
pop
pop
out
fsubl
inc
inc
sub
negl
mov
mov
mov
xor
adc
jmp
xor
cmpsl
mov
push
jbe
fistpl
pop
es
data16
push
and
or
shrb
rcrb
aad
sarl
cmc
sub
mov
fsubl
mov
in
in
pop
adc
icebp
in
scas
test
jg
mov
adc
icebp
jp
xchg
pop
mov
adc
adc
push
jecxz
gs
lock
ljmp
push
mov
fs
inc
mov
movsl
mov
sarl
xor
jo
sub
mov
mov
inc
lock
leave
and
add
movsl
sbb
in
aas
push
shlb
cmpsb
xlat
cmpl
ja
mov
pop
or
push
xor
and
lea
jnp
xchg
js
jecxz
inc
add
lea
mov
xlat
inc
ja
mov
mov
dec
xor
jb
out
mov
paddusw
xchg
push
pushf
inc
mov
adc
xchg
mov
and
movb
push
add
outsl
movsl
jns
fists
pushl
mov
cmp
xor
pushf
push
sub
jg
lret
test
pmulhuw
arpl
lret
sbb
lcall
sbb
mov
mov
subl
push
les
imul
fldenv
mov
fnstsw
xor
and
arpl
sbb
jno
push
sbb
int3
push
inc
inc
pop
mov
int
dec
push
pop
shl
test
andps
push
mov
mov
push
loopne
inc
int3
xchg
shr
mov
jno
mov
cltd
lods
aam
add
push
mov
cmp
aam
jae
add
fwait
icebp
cmc
std
js
xor
jnp
out
jne
lea
sub
cmpsl
int
ds
inc
es
or
pop
out
test
mov
mov
or
push
and
mov
movsb
pop
jae
adc
inc
sub
ljmp
pop
pop
push
mov
int3
pop
pusha
dec
inc
jp
out
mov
dec
aaa
cmp
fsubr
cmp
mov
rcrl
movsl
nop
les
inc
sub
ret
xor
jl
fistpll
pop
xor
imul
out
push
dec
pushf
mov
das
sbbb
test
mov
lret
jnp
pop
pop
and
lds
ja
cmpsb
fcom
or
and
aam
call
out
jae
xchg
mov
aaa
out
pop
lock
dec
sbb
fs
or
repz
cs
sub
jns
inc
in
rorl
sbb
testb
pop
sbb
out
fsts
hlt
shlb
fdivs
jle
jb
sub
leave
adc
loope
push
fwait
sbb
push
xchg
orl
scas
push
mov
or
sahf
mov
cmc
les
movsl
leave
in
jns
lahf
xchg
ret
mov
cmc
pop
lods
jo
and
cli
mov
rcl
pop
mov
add
add
cli
movsb
inc
popa
dec
imul
leave
and
popa
das
out
sbb
test
pop
xlat
add
je
aam
ljmp
push
repnz
sub
roll
ds
cld
lahf
jge
jmp
mov
xor
roll
repz
fdivl
or
mov
jecxz
mov
sub
push
outsb
jg
mov
lock
jno
jmp
sbb
cs
sbb
jns
outsl
push
fwait
cs
push
pop
push
fidivl
in
and
xor
push
inc
xlat
stos
filds
sub
pop
pop
rolb
or
mov
push
or
sbb
outsl
ret
cmpsb
push
fdiv
dec
outsl
arpl
push
and
repnz
mov
scas
and
adc
or
or
cmpsb
int
icebp
inc
lret
jle
insb
xchg
daa
xor
mov
adc
lock
sub
cmp
lahf
adc
mov
cmc
dec
mov
repnz
outsl
adc
test
push
jg
jg
outsl
mov
jbe
into
hlt
lcall
mov
mov
jecxz
rorl
mov
push
pop
nop
out
bound
stos
xchg
pop
aas
cmp
pop
add
repnz
add
or
jp
pop
ret
fistpl
add
fimull
pop
repz
sub
test
pusha
mov
pop
lea
mov
inc
cwtl
mov
add
fdivrp
cmp
mov
add
scas
cmp
xchg
mov
dec
xchg
mov
mov
push
bound
add
lods
or
jo
dec
push
int3
insb
out
jbe
mov
jbe
inc
es
imul
adc
and
stos
push
fs
insb
inc
ss
cmc
sub
cmp
sbb
and
mov
jmp
sub
sbb
incb
stos
pop
bound
sbb
inc
outsl
mov
push
or
pop
dec
sub
daa
popa
sub
sub
movsl
adc
stc
and
test
incb
enter
xchg
dec
cmc
push
xor
sub
cltd
mov
enter
lret
or
dec
aaa
imul
sub
pop
pop
xchg
rcll
add
jnp
jo
mov
rcl
fsubl
jae
or
mov
add
adc
adcl
jbe
std
arpl
add
test
pop
push
js
sub
in
sahf
xchg
push
pop
xchg
insb
fildll
jb
xchg
imul
xchg
xor
es
add
dec
dec
xchg
aaa
ss
lret
jge
adc
cltd
pop
sbb
and
sub
adc
lods
jno
add
loopne
push
filds
dec
out
cmp
sahf
shl
add
shl
stos
out
xchg
add
out
outsb
in
fnstsw
das
jmp
jno
push
out
arpl
pop
push
jle
adc
and
mov
es
shll
dec
mov
sub
sbb
sub
mov
inc
shr
mov
in
add
mov
sub
mov
mov
dec
adc
enter
mov
xor
and
lahf
mov
pop
push
scas
add
adcb
das
cmp
lret
popa
mov
cmc
das
adc
sti
mul
imul
cmpb
test
cs
mov
add
push
jmp
fnstcw
es
cmp
rclb
push
xchg
nop
or
adc
push
andl
push
fwait
mov
lea
or
shrb
xchg
pop
test
pop
clc
test
xor
fwait
xchg
ljmp
sahf
call
rorb
js
dec
add
aas
ss
loope
mov
pop
push
xor
xlat
jno
xor
fsub
xor
sub
jae
ds
fisttpll
out
lret
and
mov
inc
jge
dec
addb
inc
das
fs
insb
pop
xor
dec
push
sahf
data16
xor
jns
pop
test
andl
mov
in
cmp
fwait
das
lret
mov
sub
sahf
in
push
bound
push
jae
outsb
inc
mov
rorb
xor
mov
cmpl
jl
xor
lcall
pop
dec
and
in
lcall
out
mov
loop
sbbl
sbb
cmc
and
mov
jae
sbb
cmpsl
addb
inc
sub
jns
lcall
rcrb
sbb
and
popa
inc
nop
shl
shl
add
je
je
xorl
push
inc
jge
add
les
dec
jg
adc
into
inc
mov
lahf
test
shl
stos
sbb
daa
adc
inc
cmpl
dec
subl
insl
adc
lock
scas
xchg
xchg
mov
int
xchg
mov
xchg
insl
cld
jo
loopne
sub
mov
cmp
fldcw
and
outsb
iret
rcl
add
cmpsb
movsb
push
hlt
test
mov
adc
test
int
inc
test
enter
xor
lods
addl
cs
mov
js
dec
push
negl
stos
movsl
inc
and
scas
and
mov
mov
adc
dec
retw
or
add
fistps
dec
movsb
jecxz
cmp
cltd
arpl
push
and
enter
cmp
sbb
imul
std
dec
or
dec
out
inc
call
icebp
and
cmpsb
xchg
mov
dec
mov
movsl
xor
dec
sub
jmp
jae,pt
xchg
pusha
fisttpl
lds
ds
jl
cmp
fwait
add
xor
pusha
icebp
insl
shl
cwtl
dec
fmull
aas
imul
scas
mov
pop
sbb
pop
imul
xorb
xlat
stos
rcl
jno
jne
ret
push
dec
outsb
sub
in
jl
and
pop
into
mov
xor
mov
int
shr
mov
cmp
hlt
xor
add
mov
cmp
adc
shlb
add
das
or
and
cmp
or
push
in
or
push
bound
pop
mov
stos
mov
les
mov
lret
adcl
mov
add
jo
insb
sub
cmpsb
adc
cmc
iret
loope,pt
push
daa
xor
and
add
xor
jl
scas
sub
into
dec
push
sub
scas
shll
es
or
pop
loopne
add
rcl
in
cmpb
popf
dec
xor
add
cli
push
movsl
enter
insb
jnp
jae
and
mov
ss
movsb
jno
push
and
enter
movsb
pop
out
movb
add
loopne
ljmp
popa
rcll
ss
call
in
in
mov
inc
sub
mov
push
mov
les
gs
adc
mov
jmp
cmpsl
pop
and
mov
scas
cmpsb
scas
testb
int3
ficoms
into
jnp
xchg
add
xor
daa
pop
push
loopne
cwtl
mov
adc
ss
aad
pop
or
int3
xor
aas
mov
loope
inc
stc
and
dec
sbbb
xor
dec
mov
dec
dec
imul
aam
mov
in
mov
mov
sub
adc
fildl
js
ss
pop
frstor
iret
mov
pop
jno
inc
jne
sbb
aaa
add
push
adc
xchg
aaa
ja
mulb
jl
jns
mov
stc
lret
fadd
push
insb
hlt
add
pop
sarl
cmp
popa
cmp
test
addb
inc
mov
and
pop
rcrl
js
lods
out
lods
test
sub
inc
push
daa
sub
incb
mov
mov
xor
imul
xorb
and
stos
ljmp
push
push
jo
and
gs
ljmp
pop
test
inc
imul
adc
adc
lcall
je
push
bound
ffree
dec
adc
mov
pusha
mov
cmp
mov
dec
or
divb
lcall
xchg
idivl
sub
xchg
push
popf
sbb
add
adcb
jnp
sbb
ret
push
mov
push
sbb
fcoml
mov
pushf
clc
add
or
jae
jmp
sub
dec
cmp
inc
adc
dec
sbb
push
jecxz
sub
sarb
inc
aad
push
outsb
call
mov
roll
push
sub
shl
movsb
or
lock
scas
in
mov
fdivs
xor
xchg
or
jge
add
sbb
pop
imul
test
nop
stos
nop
dec
loop
mov
jl
arpl
or
dec
xor
bound
pushf
push
cwtl
insl
enter
scas
add
jg
mov
jo
sbb
daa
sub
lret
cmc
in
xchg
mov
ss
inc
push
aaa
xorl
mov
jnp
sub
push
stos
negb
test
push
loop
sti
insl
bound
dec
shr
jae
and
pop
adcb
dec
icebp
jmp
push
popa
dec
cmpsb
mov
jg
adc
mov
xchg
push
cmp
or
invd
mov
xor
call
mov
dec
cmpsl
lahf
fidivs
adc
jne
push
inc
in
mov
ret
jb,pt
jmp
push
sub
pop
scas
je
gs
adc
or
mov
cmpsb
adc
shlb
gs
pop
pop
adc
out
repnz
les
pop
mov
xchg
xor
icebp
add
lahf
hlt
sub
or
xchg
jns
divb
imul
cmp
call
pop
push
std
es
repnz
stos
mov
mov
mov
cwtl
pop
jp
lea
xchg
cltd
push
pop
mov
pop
sub
xchg
cmp
decb
roll
imul
jp
insl
adc
inc
leave
adc
test
mov
testl
movsb
adc
movsl
inc
cld
adc
add
adc
cmp
stc
mov
sbb
adcl
pop
push
xchg
mov
push
mov
in
sbb
add
cmp
dec
jle
sbb
aaa
xchg
imul
and
repnz
hlt
sub
mov
sub
and
lods
mov
inc
das
jns
add
mov
push
xor
mov
stos
data16
cmp
notl
mov
jg
test
xlat
mov
jg
jne
cli
pop
sub
push
lock
xchg
pop
mov
scas
fwait
mov
mov
mov
fidivrs
mov
and
jnp
jne
jo
mov
cmp
ret
loope
jns
pcmpeqw
insb
mov
fucom
sub
and
je
cli
mov
sub
ljmp
orl
fwait
push
adc
mov
loop
sbb
dec
loope
and
rorl
jmp
sar
or
mov
mov
mov
xlat
push
dec
daa
cwtl
in
or
or
adc
insb
xchg
in
pushl
mov
loopne
sbb
adc
shr
mov
fisttps
ds
or
loopne
int3
xor
xorb
adc
repnz
fcompl
mov
nop
sbb
lods
mov
sbb
in
ds
jg
out
inc
cs
outsl
lret
add
and
shll
lock
lock
enter
add
bound
test
sbb
pop
fsubr
push
movsl
loopne
push
mov
ss
sbb
jo
cltd
inc
pop
mov
test
pop
xor
fincstp
pop
stos
mov
mov
jno
mov
dec
inc
cli
cmpsb
cmp
add
in
xorl
sub
jns
sbb
addl
mov
pop
mov
mov
xor
loopne
sbb
cmpsb
xor
sbb
adc
das
std
inc
sahf
add
sub
fwait
inc
ret
mov
adc
jecxz
xor
jae
xchg
fisubrs
sbb
std
adc
shrb
popa
jns
adc
cmp
mov
popa
loope
fwait
adc
repz
fs
lock
jecxz
jb
dec
push
dec
mov
jle
push
fisttpl
adc
adc
push
int
cmc
cmp
fcompp
inc
sbb
inc
push
add
stos
es
lds
pop
add
je
mov
adc
repz
outsl
xchg
inc
out
sbb
les
ja
out
dec
pushf
mov
mov
sbb
sbb
adc
in
push
mov
mov
dec
rorl
sub
push
shrd
xchg
loop
cmc
jns
pushf
inc
imul
cmp
add
inc
cld
cld
xlat
dec
xchg
sbb
sti
mov
jle
push
and
jb
pop
and
cld
test
jno
xlat
or
ja
xchg
imul
mov
jl
or
mov
cmpsl
mov
outsb
sub
cmpl
test
xchg
sub
xchg
xlat
cmpb
and
arpl
mov
fwait
sarl
adc
jb
mov
pop
push
sbb
sahf
cmp
ds
or
cmp
jg
pop
pop
cmpb
add
divl
inc
adc
sbb
pop
ja
les
mov
das
cmp
inc
nop
xor
fsubrl
cmp
out
movsb
aas
inc
leave
and
addr16
loop
mov
cmp
imul
xchg
dec
loope
pop
outsb
add
xor
insb
lea
sub
xchg
mov
stos
lahf
test
xchg
shl
jecxz
or
push
stos
mov
pop
pusha
mov
scas
clc
js
int
pop
enter
pop
mov
xchg
outsb
cld
in
lods
loope
int3
out
stos
sbb
inc
inc
and
out
gs
adc
xor
push
pop
and
ss
push
cmp
jnp
adc
sbb
xor
cmp
mov
inc
into
sub
jmp
insb
inc
xor
enter
xlat
enter
mov
sbb
jge
mov
test
fldcw
test
hlt
inc
int3
ds
sub
mov
andl
adc
imul
adc
jl,pn
scas
mov
nop
sahf
gs
fwait
jle
ljmp
mov
adc
dec
out
xchg
in
iret
sub
push
das
cmp
repz
lret
and
int3
stos
sbb
imul
out
gs
jecxz
sub
push
fsubrl
shlb
arpl
test
ss
std
jl
mov
ficoms
dec
movsl
frstor
push
mov
inc
sbb
pushf
push
mov
outsb
push
pop
xchg
pop
xchg
inc
mov
sahf
mov
pop
xchg
mov
inc
jo
das
cmpsb
cmp
jb
hlt
inc
jo
or
mov
inc
jbe
cmpsb
add
mov
mov
out
jo
fdivrs
xlat
test
and
cwtl
xchg
xchg
sbb
stc
nop
stos
xor
cmp
ljmp
cmp
adc
sbb
js
movsb
in
sub
ss
fwait
mov
add
call
push
iret
je
xor
mov
cli
sbb
cld
mov
push
js
scas
sbb
lcall
nop
adc
stc
rcr
sub
call
shl
cmp
call
cltd
jbe
jp
pop
adc
push
call
xchg
loopne
xlat
dec
aas
jl
mov
insb
neg
xchg
gs
xchg
cltd
test
cmpsl
popl
inc
sub
cmpsl
imul
push
dec
pop
jmp
adc
repz
lods
sub
mov
sbb
or
mov
dec
pop
lock
loopne
dec
xchg
pop
or
aad
cmc
add
in
stos
xchg
insb
out
adc
imul
xchg
mov
aaa
pop
js
jb
idivl
in
or
test
lahf
inc
mov
test
loope
outsl
dec
fldenv
cvtdq2ps
rclb
xor
fdivp
or
or
xchg
mov
add
xor
outsb
loop
pop
inc
sahf
cmp
cmpsb
and
mov
icebp
push
add
icebp
jecxz
mov
pop
lret
mov
ret
rorb
repz
or
push
mov
aas
mov
pop
xor
stos
cli
mov
loopne
xchg
arpl
push
cmp
ffreep
jo
mov
out
imul
rcll
jmp
clc
sub
clc
rorl
dec
xchg
add
in
popf
pop
mov
jb
inc
lret
sub
or
xorb
pop
aaa
sahf
adc
and
mov
pop
or
mov
mov
ss
les
sbb
sbb
jnp
aad
push
sbb
sbb
lcall
insl
aad
xorl
inc
add
test
outsl
loope
fstp
pop
dec
xchg
jns
sbb
add
cbtw
cmp
ljmp
mov
fisttpl
psrlq
jae
pop
sbb
and
cmp
pop
mov
je
sub
popf
in
ret
cli
out
xchg
lock
outsl
fidivrl
fs
loop
shlb
or
lcall
pop
xchg
and
mov
adc
shrl
mov
pop
imul
or
push
addl
icebp
mov
rcrb
sti
shrb
inc
inc
bound
dec
xor
adc
jl
dec
add
add
pusha
test
jbe
push
add
fwait
out
jmp
or
rcll
sbb
and
into
sarb
in
movsb
sbb
sbb
lcall
mov
jbe
xchg
sbb
lcall
adc
call
inc
test
sub
in
dec
mov
adc
jg
mov
jae
out
sarb
jne
fldl
or
xchg
xchg
mov
mov
or
xchg
and
fidivl
xchg
mov
les
jecxz
dec
iret
adc
addr16
push
and
jmp
lods
pop
je
orb
push
jne
add
push
push
xorb
pop
push
mov
lahf
arpl
and
mov
push
outsb
xor
outsb
int3
cmp
int
mov
test
jl
pusha
cmp
loopne
mov
or
out
adc
push
rcr
fldt
pop
and
and
mov
aas
fwait
cmp
lds
rclb
xchg
pop
mov
adc
sub
push
xchg
fwait
pop
je
lea
insb
sub
inc
jns
mov
mov
test
add
jno
sahf
bound
sbb
rolb
pop
pop
lock
inc
andl
das
mov
jl
cmp
ljmp
jns
mov
pop
mov
in
andl
pushf
adc
xchg
dec
jno
push
pop
into
add
sub
mov
adc
mov
inc
jge
in
xor
sbbb
adc
inc
sarl
insb
aas
pop
scas
repz
es
loop
int3
mov
scas
dec
mov
or
push
adc
les
adc
xchg
into
mov
in
mov
ljmp
cld
adc
jae
xor
xchg
sbb
sub
mov
inc
dec
dec
and
inc
lds
or
daa
push
jns
jmp
pop
mov
xchg
clc
icebp
cmp
pop
xchg
cmp
or
xchg
jp
pop
mov
xchg
xor
mov
pop
out
xchg
mov
lods
add
mov
scas
jns
xor
jnp
mov
js
stos
lods
out
sub
add
cwtl
les
mov
fistpll
pop
rclb
fwait
pop
dec
jmp
out
mov
jp
fmulp
pop
and
pop
fs
push
je
jne
sub
gs
shll
inc
pop
rolb
xor
sbb
ds
mov
push
pop
cmpsb
mov
xchg
sub
xchg
xor
cmp
test
nop
data16
mov
fisubrs
and
mov
loop
movsl
fnsave
jnp
jne
sbb
mov
mov
fnstsw
mov
repz
rcl
int3
push
cmpsb
pop
mov
insl
into
ds
jp
or
pop
lods
cmp
mov
les
adc
cmp
jbe
and
inc
push
jae
loopne
and
push
shl
loopne
std
dec
popf
mov
sti
mov
dec
mov
in
es
enter
movzwl
dec
shll
mov
test
test
mov
mov
pop
adc
ret
or
sbb
rclb
adc
mov
fdivrs
sub
or
mov
mov
mov
rolb
cli
mov
jb
call
and
and
das
ss
imul
fwait
push
and
ss
gs
xor
push
add
nop
inc
cld
mov
cmpsb
imul
xor
xchg
out
ds
push
push
mov
pop
push
cmp
loop
adc
lds
cmp
sarb
jne
push
dec
call
push
mov
add
out
insl
das
lret
cltd
test
std
lds
aaa
lds
and
sti
pop
arpl
fs
fstpl
pop
sub
pushaw
cmp
into
insw
lds
and
push
aad
stc
int
sbb
jb
fcmovnb
shr
lret
cmp
and
sarb
jb
popf
cmpsb
push
pop
in
gs
adc
rclb
in
loop
jge
sub
aam
or
mov
jne
cmp
ss
xor
dec
mov
dec
icebp
repnz
jno
pop
in
icebp
fmull
lds
out
adc
mov
add
add
cmpsl
mov
sarl
cltd
lret
cmp
xchg
dec
mov
imul
addr16
cld
mov
repz
add
ret
and
push
mov
sbb
sub
xor
adc
mov
jg
xor
stc
sub
xlat
mov
or
push
jmp
lods
test
jle
out
loope
pop
cmp
fld
pop
dec
add
ficomps
mov
lock
mov
je
das
data16
in
mov
aam
push
mov
adc
les
pop
jp
add
cmp
xchg
out
adc
mov
push
mov
jg
or
mov
aam
sub
shlb
and
dec
fldt
sbb
arpl
and
icebp
sub
cmpsl
int
adc
xchg
ret
xorb
dec
iret
out
xor
negb
sub
inc
stc
fcomp
mov
mov
fdivp
out
sub
inc
lret
cmp
pusha
or
sub
mov
xchg
jae
inc
mov
pop
mov
mov
imul
xchg
int
lret
in
mov
adc
xor
mov
out
adc
repz
lret
dec
pop
mov
mov
mov
pop
movsl
outsb
cltd
aas
loop
jne
push
loop
gs
sbb
xor
xor
sahf
lods
mov
cmp
mov
popf
lret
pop
cmpsb
mov
push
ret
xchg
pop
js
xchg
fwait
int3
dec
sbb
je
es
xor
sbb
add
and
xor
and
jmp
mov
adc
mov
push
add
inc
adc
int3
int
sub
or
pop
fs
adc
inc
icebp
xlat
cli
cmpb
mov
push
mov
outsl
push
ss
lds
hlt
cwtl
outsb
pop
std
add
push
xchg
lahf
cmp
int
nop
out
stos
lods
sbb
and
imul
loope
jge
mov
mov
loopne
cmp
ret
push
xor
movsl
aad
push
ljmp
or
dec
in
pusha
or
fisttps
adc
mov
es
call
inc
jbe
push
jecxz
cmc
js
call
rorl
push
push
aad
imul
shl
dec
int3
or
xchg
adc
dec
mov
mov
sahf
jnp
scas
inc
shlb
mov
cmpsb
mov
jp
mov
fdivs
cmc
test
popf
push
andb
test
xchg
fimuls
bound
enter
add
aaa
pusha
push
addr16
gs
dec
fldcw
push
ds
fildll
jno
lret
push
cmpsb
xchg
xor
out
mov
insl
imul
push
dec
mov
aad
adc
ja
in
sbbb
ja
xchg
testb
sbb
add
add
sub
mov
aas
jne
sahf
jge
movsb
pop
cmpsb
or
call
add
add
nop
pop
cltd
pop
sbb
dec
sub
xchg
dec
push
dec
nop
arpl
bound
push
cmp
cmpsl
filds
mov
jbe
fisttpll
pop
shrb
cmpsl
sbb
fs
xor
out
cmp
and
push
mov
xlat
xor
subl
and
fdivrl
mov
adc
jmp
fistpll
jns
mov
mov
sbb
push
xlat
jbe
adc
jg
clc
sbb
xchg
cmpsb
and
in
sbb
xor
lcall
aaa
lods
or
cmpsb
add
jmp
add
imul
leave
jne
and
mov
pop
shll
cmp
mov
dec
aas
shlb
ja
cltd
adc
daa
js
mov
xchg
jl
xor
push
mov
xchg
mov
pop
mov
mov
xor
cmp
mov
cmpsb
xlat
out
cs
stos
adc
xchg
inc
push
sbb
lcall
add
xchg
ds
mov
orl
cmp
mov
sbb
lcall
push
out
insb
iret
or
out
je
lods
jno
addr16
adc
repz
int
ss
mov
lahf
inc
dec
mov
js
mov
test
jmp
sub
fisubrs
adc
jns
aaa
insl
mov
xor
movl
dec
inc
xor
das
dec
xchg
fistpl
push
rolb
arpl
inc
push
cs
sub
pop
or
mov
shlb
adc
fwait
adc
lcall
jl
pop
aaa
imul
sbb
cmp
cmc
cli
mov
jae
or
pusha
mov
mov
call
inc
dec
scas
sub
sahf
shrb
call
push
fisttpll
xor
xchg
xchg
sub
mov
and
sub
loope
add
fistps
shl
repz
adc
push
or
pop
fwait
sub
inc
jle
jle
mov
inc
push
push
sbbb
mov
int
sub
loope
or
lods
adc
adc
shll
sbb
in
subb
xor
in
mov
pop
pop
insl
ds
push
loope
cmp
movsl
xchg
test
cmpl
mov
dec
lcall
inc
test
int3
ljmp
push
dec
insl
xlat
push
iret
mov
stos
dec
pop
push
shr
out
push
leave
mov
dec
adc
or
push
int
fiaddl
lods
jno
inc
lret
loope
sbb
mov
repnz
xchg
and
out
dec
add
xor
sub
xor
cwtl
int3
sarl
imul
popa
add
lods
cmp
cs
in
or
test
cld
hlt
add
add
popf
push
into
or
adc
jle
and
xchg
xchg
inc
xor
xlat
mov
sub
dec
icebp
sub
pop
mov
ljmp
xchg
sbb
cmpsl
leave
mov
dec
pop
xchg
xchg
cmp
cmpsl
jb
sahf
cmpsl
mov
cmpsl
mov
add
aas
loop
ds
decb
fidivs
cmp
sbbl
das
pop
dec
dec
and
cmp
out
dec
cmp
adc
hlt
mov
adc
and
push
mov
out
iret
int3
mov
int3
mov
sub
cld
mov
cmp
testl
daa
jp
mov
mov
punpckhdq
jge
pop
push
lret
jmp
adcb
jle
jmp
outsl
es
ds
and
push
sbb
testb
xor
in
adc
mov
scas
push
mov
sahf
pop
cld
les
push
jne
cltd
outsl
lods
adc
jns
sti
jle
mov
cmp
sub
xor
push
inc
in
dec
stos
mov
popf
jbe
lahf
cmp
jnp
or
and
pop
and
push
scas
dec
sub
and
cli
std
fsts
sub
stos
pop
sub
mov
outsl
jae
lods
mov
push
out
adc
bound
jbe
in
in
pop
mov
sbb
scas
xchg
outsb
add
mov
pop
shr
inc
fwait
inc
inc
and
jp
in
aas
in
in
aas
jno
daa
inc
jmp
out
or
lds
rolb
cmp
push
mov
in
adc
mov
or
lock
inc
fistl
aam
aas
and
in
fldl
mov
rcrl
or
xchg
inc
int3
or
mov
out
mov
dec
loopne
pop
hlt
mov
jg
pop
fisubl
add
xchg
add
addr16
sub
fsubrl
xchg
dec
jno
hlt
sbb
ss
push
pop
lods
int
incb
pop
push
sub
xor
inc
sbb
cltd
ret
and
pushf
je
fs
jmp
stos
movsb
adc
clc
cmc
and
xchg
inc
dec
popa
mov
push
add
xchg
in
daa
clc
add
cmp
pushl
enter
loop
push
xor
xchg
mov
outsb
cmpsl
mov
in
cmp
scas
fidivs
scas
mov
jnp
pop
mov
popa
pop
mov
lahf
mov
jnp
pop
mov
movsb
jo
push
jbe
fbstp
sbbl
iret
inc
scas
cmp
dec
imul
cmp
fs
stos
cmpl
pop
mov
sbb
cmp
ds
sahf
sbb
inc
or
mov
add
out
in
in
lret
inc
ljmp
mov
and
lds
push
or
mov
dec
and
add
shl
jle,pn
stc
sti
jbe
xlat
ss
stc
push
mov
adc
mov
inc
adcl
dec
cmp
push
mov
imul
dec
fwait
sub
inc
and
clc
xchg
adc
adc
push
and
or
pop
es
xchg
repnz
lret
xchg
mov
mov
mov
int
inc
ljmp
stos
ret
mov
pop
insb
mov
outsl
or
mov
negb
or
sbb
dec
lret
outsb
mov
dec
add
lods
nop
push
loope
xor
imul
das
inc
insl
inc
fisubs
loopne
push
inc
mov
imul
push
pushf
adc
insl
cmp
add
mov
fdivrl
lds
mov
jg
jo
ffreep
gs
pushf
xchg
repnz
push
xchg
pusha
mov
sti
cwtl
xchg
mov
cmc
mov
ljmp
out
inc
lret
nop
fstps
lea
fwait
outsb
ret
lods
orb
sub
push
mull
or
mov
aas
cli
cmp
arpl
push
into
fistps
jne
sbb
and
xchg
popf
pop
xchg
dec
rolb
cmp
cmpsb
cmp
icebp
mov
mov
ret
rolb
sub
test
pop
mov
jmp
xor
jne
cmp
push
push
loopne
mov
jo
mov
push
fisttps
mov
lcall
push
jmp
xchg
lock
hlt
sbb
popa
imul
subl
lret
adc
jnp
cmpsl
in
or
repnz
leave
mov
arpl
mov
jmp
xor
dec
adc
inc
or
test
sbb
addr16
push
and
push
sub
mov
aam
pop
loope
push
mov
addl
or
or
bound
add
adc
into
or
push
pushf
xchg
mov
dec
push
mov
jmp
sbbl
mov
mov
pop
add
cmpsl
das
pop
loope
rcrb
fwait
in
cwtl
pop
and
fbld
dec
dec
pop
add
fcomi
das
shl
or
enter
int3
pop
cmp
mov
adc
jnp
out
insl
repz
out
movsb
adc
leave
push
ljmp
add
push
inc
mov
mov
lock
and
pop
cmpsb
adc
iret
sub
jno
fdivp
mov
daa
add
leave
in
adc
and
xchg
fiadds
imul
loop
outsl
push
xchg
pop
add
lods
xchg
xor
imul
add
cmp
and
sbb
lds
repz
inc
xchg
adc
sub
or
lea
sarb
cmp
sbb
xchg
mov
repz
add
in
out
rcll
lcall
or
push
push
pop
xor
pop
pop
dec
cmp
pop
cwtl
call
loope
pop
push
stos
push
adc
sub
addr16
jle
xchg
pop
dec
pusha
jmp
xor
xor
roll
ljmp
addb
ljmp
mov
push
add
out
jnp
mov
out
cmp
mov
jae
or
jnp
xor
cs
push
andb
mov
mov
inc
xchg
mov
mov
sub
shl
repnz
mov
clc
xlat
movsbl
lcall
pushl
insl
xor
out
mov
mov
push
dec
adcl
stc
arpl
cmp
or
sbb
test
mov
adc
dec
test
imul
cmp
bound
push
xchg
or
pop
pminsw
xchg
jbe
cmp
lods
int
mov
mov
movsl
mov
jnp
push
out
mov
cmp
jge
test
sbb
lahf
pop
negb
xchg
add
rclb
pop
fucom
inc
mov
fdivs
add
subb
inc
les
mov
cwtl
pop
imul
in
mov
mov
pop
push
mov
mov
rol
pop
mov
add
in
jge
cmp
dec
cli
pusha
out
in
mov
or
push
mov
mov
cli
or
push
lock
ret
xchg
xchg
adc
repnz
jge
mov
pop
inc
sub
in
sub
mov
adc
jecxz
cmp
adc
xor
test
pop
outsl
xor
loop
mov
mov
mov
rol
cmp
into
insb
loop
mov
and
inc
hlt
loopne
fdivs
push
out
mov
cmpsb
inc
adc
mov
rcll
xor
cs
sbb
sub
fs
lea
mov
repnz
filds
stos
popf
cmp
aaa
jb
jg
out
stc
add
and
inc
insl
cld
push
cwtl
pop
push
loopne
scas
aad
xchg
sbb
test
out
fiaddl
pop
les
sbb
out
and
or
push
ljmp
sub
mov
aad
std
adc
pop
sbb
mov
xor
mov
add
push
jns
cwtl
jmp
push
enter
adc
xchg
enter
aam
xchg
dec
aam
sub
push
push
add
je
push
sub
pop
mov
ja
mov
jl
rorl
outsb
ret
loopne
xor
pop
lret
lods
das
in
pop
jmp
dec
dec
out
jle
hlt
mov
or
movsl
outsl
jae
sub
xorb
lock
mov
out
mov
pop
dec
push
int
dec
xor
scas
mov
inc
mov
sub
dec
ja
gs
shl
sbb
push
lret
cmpsb
mov
stos
add
mov
std
lcall
fimuls
je
arpl
out
repz
repz
aad
or
test
jmp
mov
aad
cmp
insl
fabs
dec
add
mov
dec
sbb
sub
aam
add
dec
mov
sub
ffreep
mov
adc
or
lods
sti
xchg
ret
cmp
push
pop
add
fdivr
jge
aaa
xor
mov
xor
popf
loopne
push
lods
xchg
sbb
bound
stos
lods
push
arpl
jb
mov
pop
xchg
fsubrs
int3
xchg
xor
adc
insl
push
xor
adc
icebp
lret
fisubrs
pop
aad
mov
pop
add
add
orb
andl
mov
add
sti
pop
negb
loopne
insl
ret
fldenv
add
adc
sbb
adc
movsb
or
ljmp
ret
cmp
out
jecxz
ja
mov
fdiv
loop
lret
mov
push
jge
pop
gs
xchg
notb
stc
test
and
jnp
pop
dec
test
das
out
out
inc
cli
xlat
mov
js
and
les
dec
lds
js
push
lret
rcl
jbe
cmp
gs
xor
or
iret
jo
mov
scas
sbb
xchg
adc
xchg
add
dec
lods
adcl
sub
out
test
sbb
xchg
repnz
or
cmpsb
cmc
call
pop
sub
mov
cmpsl
dec
xchg
sti
pushf
leave
add
test
lret
roll
push
push
xchg
or
imul
sub
xor
aad
xchg
rclb
pop
pop
stos
divps
iret
aad
lret
lcall
fistpll
incb
sbb
aam
sti
inc
lods
sub
ja
cmp
mov
push
stos
cmp
ret
or
cmc
test
pop
testb
jg
mov
xor
sbb
adcl
fdivs
aas
add
sbb
adc
lds
sbb
fwait
sbb
mov
and
sbbl
ficoms
gs
jl
roll
cmpsb
inc
orl
xchg
mov
push
mov
lcall
addr16
fst
aas
mov
addl
leave
aaa
lcall
dec
fdivrp
push
jb
fistl
into
sbb
iret
fbstp
in
mov
iret
cmp
add
outsl
aad
scas
call
in
mov
ret
inc
pop
imul
inc
popf
mov
jge
sahf
and
xchg
idivb
hlt
cmp
xchg
fistpll
ljmp
pop
and
xchg
aam
cmp
mov
inc
mov
xor
and
aad
sbb
sub
cwtl
mov
inc
int
jo
orb
leave
adc
imul
xor
mov
sbb
sub
scas
jae
orb
xor
hlt
and
lds
xchg
mov
bound
shrb
cs
fldt
adc
pop
sti
insb
cltd
cs
aam
jbe
das
cmp
lahf
jbe
pusha
gs
test
fs
in
loop
and
push
scas
imul
sbb
jne
lods
push
fimull
xor
sub
adc
mov
loope
daa
ss
stos
lret
xchg
sbb
insl
dec
sub
scas
aam
fistps
mov
outsb
xchg
pop
jno
movb
std
lea
mov
stos
insb
mov
and
mov
cmp
popf
mov
movsl
inc
mov
jle
out
clc
push
and
cmp
sbbb
aaa
dec
cmpsb
inc
in
dec
push
jb
mov
dec
mov
mov
jo
pop
mulb
daa
in
pop
jecxz
stc
jmp
das
pop
fdivs
push
mov
mov
xchg
repnz
and
xchg
jle
bnd
inc
sub
mov
mov
es
push
aaa
ja
mov
push
lret
loope,pt
dec
push
inc
in
mov
jbe
add
cs
inc
and
xchg
pop
sbb
sub
aad
fmuls
mov
push
pandn
out
fbstp
adc
ret
cmp
xor
pop
sub
fnstsw
push
sahf
sub
push
and
in
sbb
scas
cmp
sbb
decl
inc
jns
xor
outsb
pop
add
add
push
dec
dec
jecxz
movsb
ja
xchg
lcall
xchg
pop
lea
lea
push
stos
xchg
push
xchg
sar
inc
mov
pop
int
insl
roll
clc
call
adc
jl
ds
add
fs
fadds
add
sub
loopne
add
fnsave
inc
push
rcrb
jns
jbe
cmpsb
dec
fsubrp
mov
push
dec
addr16
pop
add
adc
and
or
mov
popa
ja
test
jae
sub
mov
lock
dec
pop
repnz
inc
popf
xor
cmp
adc
pop
das
push
lds
iret
jl
push
push
inc
push
mov
bnd
js
pop
push
dec
cmp
ds
dec
xor
sbb
rcr
lods
hlt
inc
dec
shl
cmp
cld
int
jo
fldl
cli
sbb
or
xchg
lea
sbb
fsubr
out
inc
xor
jns
mov
dec
or
lods
xchg
mov
xchg
fsts
je
inc
lods
lret
and
xchg
negl
pushl
rclb
xlat
cmp
cmp
jnp
cltd
rorb
sub
xor
insl
inc
into
jle
cmp
out
sbb
adc
jmp
adcl
in
sbb
aas
cs
add
jp
gs
das
sbb
sbb
cmpsl
xchg
fisttpll
aas
cmp
rcll
fsub
and
pushf
ret
cmpsw
mov
pop
sbb
stos
shll
je
ret
jne
sbb
outsl
out
rcrb
mov
ja
jge
incb
pop
push
mov
into
pop
stos
movsb
mov
mov
sub
les
push
es
bound
bound
popa
ret
or
add
rclb
jp
mov
leave
or
sbb
push
daa
aaa
cld
cwtl
ds
mov
mov
adc
in
sbb
loop
fdivs
mov
les
jno
pop
es
fdivrs
dec
cltd
xchg
mov
mov
adc
lret
insl
push
ljmp
fisubrl
inc
jbe
and
add
jnp
push
push
out
fisubs
repnz
ret
lahf
or
daa
sub
inc
or
popa
sub
inc
xlat
outsl
fwait
xor
fwait
pop
add
xchg
xchg
data16
daa
push
mov
ja
lahf
dec
push
pop
mov
pop
push
push
mov
add
xchg
pop
sbb
ret
shl
dec
cmp
inc
pop
cmp
mov
aam
dec
mov
cld
push
int
adc
in
icebp
sbb
lods
mov
dec
loopne
je
dec
push
add
xchg
jl
adc
dec
add
bound
out
mov
inc
into
sub
loop
mov
and
cld
mov
push
pop
fwait
dec
add
jge
xor
sub
fldl
pusha
std
cmp
push
xor
xor
test
push
xchg
movd
xlat
cmp
mov
push
adc
inc
add
dec
pop
push
lods
test
jns
jbe
sbb
fwait
shlb
xchg
ret
sub
sti
enter
mov
push
scas
mov
mov
arpl
stos
inc
mov
mov
in
dec
scas
ret
popa
cmp
mov
leave
jmp
sbb
jns
iret
dec
add
rcll
mov
rcr
sub
sub
add
dec
pop
and
call
fs
and
clc
shlb
push
clc
or
insb
lcall
pop
mov
into
aad
xchg
push
xchg
jp
stos
jno
cmp
bound
ja
testb
cmp
test
push
pop
movsb
jno
sub
insb
aas
fidivl
push
pop
in
sbb
dec
popw
push
cmp
pop
cs
loopne
cmp
fbld
fsub
ret
sub
pop
outsl
mov
ss
out
jnp
stos
ja
movsl
pop
int
mov
pop
ror
sbb
mov
out
cmp
addl
sbb
imul
jg
or
lret
pop
shrl
sbb
sub
jmp
adc
cmpsb
sbb
pop
orl
insb
clc
js
and
movsl
xchg
stc
push
fwait
jae
push
sub
xor
mov
xchg
pop
jno
inc
xchg
xor
cmp
les
outsb
sarb
pop
mov
jno
test
movsb
or
mov
cli
cltd
les
push
and
mov
nop
mov
jno
add
push
inc
sub
jo
push
xor
push
add
and
adc
sbb
insb
jmp
cmp
data16
dec
and
xorl
in
cmp
popf
xchg
cltd
into
push
dec
jmp
outsb
iret
or
lret
and
mov
in
pop
out
mov
pop
xor
mov
iret
int
bound
xchg
cli
jbe
fs
sub
cmp
mov
mov
xchg
and
cmp
ja
pusha
inc
addr16
orl
pop
push
push
orb
jo
inc
imul
stos
jnp
mov
adc
shr
iret
dec
pushf
mov
xchg
aaa
mov
ret
in
mov
out
test
jmp
aaa
cwtl
jecxz
imul
xor
dec
mov
aam
mov
cwtl
jno
lcall
into
lock
cmpsb
adc
into
push
jno
adc
aam
sbb
lahf
jle
sbb
adc
in
fcom
repnz
xor
adc
jne
jle
cmp
stos
dec
ret
mov
xchg
inc
jns
aad
loopne
mov
fidivl
rcr
mov
and
pushl
mov
dec
lods
bound
fldenv
lcall
adc
orb
fsubl
mov
aas
mov
scas
add
cs
push
jp
and
adc
mov
push
sub
pop
repnz
bnd
mov
test
inc
push
inc
fisttpl
mov
mov
bound
xchg
imul
fwait
shlb
xchg
xchg
ja
dec
push
jle
mov
and
mov
and
mov
xor
or
inc
sbb
jmp
cld
fwait
mov
out
xor
cmp
xor
cmp
adc
scas
push
sub
call
outsb
jnp
sub
repnz
mov
fidivrs
mov
out
pop
xor
xchg
pop
lods
cld
lret
clc
das
xor
mov
cmc
push
mov
or
outsl
xlat
into
and
sbb
mov
jno
lods
sti
arpl
adc
dec
cwtl
test
fdivr
mov
pop
jmp
sub
dec
pop
fldenv
push
test
sub
sbb
cmp
pop
imul
jae
cmp
movsb
test
repnz
mov
stos
mov
lret
xchg
jl
xor
push
rcrl
jecxz
push
adc
mov
test
shl
push
push
xor
call
out
sub
repz
fwait
mov
xchg
rcll
adc
aam
repnz
mov
ljmp
mov
cmp
push
aaa
mov
xchg
pop
aad
scas
mul
inc
inc
popf
mov
add
adc
insb
adc
js
and
jns
jno
xchg
andl
ljmp
loope
jge
inc
data16
daa
mov
lock
shlb
jbe
or
mov
cwtl
and
mov
jp
add
inc
xchg
mov
stos
dec
jae
sub
mov
dec
adc
push
fistpl
bound
loope
cmp
stc
push
or
ja
pop
xor
into
cmp
and
pop
mov
or
scas
or
testl
lods
push
out
pop
lds
lds
push
pop
mov
sub
fidivrl
popf
adc
test
sub
sub
mov
push
mov
je
std
and
jle
mov
mov
les
add
cmp
out
xor
jg,pn
iret
mov
sbb
js
cmp
add
mov
xchg
cmp
in
pop
in
lahf
ljmp
lahf
pop
ja
rorb
xor
push
fcmove
add
mov
or
shl
xchg
outsb
cld
out
lcall
mov
popf
push
cmp
push
or
mov
add
shrl
nop
sub
cld
xchg
call
adc
push
push
movsl
xor
add
aad
xorb
mov
js
andb
mov
loopne
movl
push
scas
cli
andl
cmpsb
adc
xorb
push
imull
push
jge
lcall
rcrl
nop
out
push
sahf
aam
or
clc
hlt
push
movsb
inc
stos
jno
push
testb
or
orl
xlat
sub
shll
int
xchg
cmp
pushl
out
scas
push
inc
and
sahf
adc
adc
and
xor
xchg
cmpl
lcall
jmp
dec
sahf
sbb
mov
push
cwtl
outsl
xlat
xor
jg
xor
jb
bound
ret
addl
sbb
push
insl
les
sub
jb
cwtl
inc
inc
test
out
iret
stc
lfs
lret
jge
sarl
out
fs
sub
fldl
xlat
aam
pop
aam
sbb
jae
test
lods
insb
dec
dec
out
pop
roll
aad
addr16
ret
pop
fcmovbe
fldcw
mov
mov
push
adc
sbb
cwtl
mov
aas
inc
leave
cld
push
ss
sub
xchg
pop
stc
push
in
sbb
inc
jbe
sub
scas
jp
sbb
hlt
xchg
fiaddl
lcall
inc
outsl
stos
sti
les
filds
insb
or
das
cmp
xchg
daa
stos
repnz
sub
dec
stos
data16
pop
out
mov
mov
ror
pop
pop
and
push
push
in
in
nop
in
or
cmpsl
mov
mov
ffree
push
shll
jp
jle
mov
scas
addb
pop
shll
movsb
dec
mov
jns
jns
popa
mov
js
dec
pop
xor
add
add
adc
jns
jns
add
mov
hlt
in
ret
dec
dec
adc
sbb
push
cltd
and
scas
and
es
hlt
lods
leave
push
jae
xor
out
xor
push
jne
mov
pop
outsb
jnp
mov
push
inc
into
inc
sub
xor
fisubl
out
sbb
mov
lods
cli
pop
data16
mov
sbb
and
in
repz
jns
mov
sub
add
imull
mov
add
ret
movsl
xchg
or
ljmp
icebp
mov
dec
add
cmpsb
cli
outsl
dec
push
imul
and
mov
inc
and
push
adc
push
adc
aam
lret
xor
hlt
xor
xchg
dec
xor
jmp
cmp
mov
ja
popa
ds
call
test
dec
les
mov
icebp
lock
lods
sub
in
out
orb
test
mov
dec
cmp
pop
lahf
sub
and
adc
clc
lea
push
clc
sarl
jge
sbb
lods
shlb
fmuls
pop
dec
cltd
cmp
mov
mov
xor
sub
hlt
rorl
mov
sub
jb
fwait
stos
push
lret
mov
pop
fstl
pop
stos
daa
dec
in
in
jge,pt
lods
movsb
jle
dec
std
fsubrs
fmull
add
mov
addr16
ss
add
push
dec
dec
mov
jnp
fxch
xor
in
mov
and
xchg
add
rcr
jns
movl
repnz
ds
in
sub
inc
inc
dec
push
pop
scas
jo
dec
les
mov
adc
inc
cmp
mov
lods
ret
pop
in
out
dec
lods
xor
and
mov
mov
dec
pop
scas
mov
sbbl
mov
data16
ja
add
dec
imul
lret
cltd
or
outsl
or
add
pop
fnstenv
ds
xor
pop
std
adc
adc
push
aam
dec
mov
dec
lcall
dec
sub
mov
pop
sub
stos
rorl
scas
sub
and
jle
dec
daa
jbe
or
loop
incl
xlat
xchg
or
add
pop
ret
lret
mov
xor
jnp
cld
dec
push
adc
sub
imul
out
insb
movsb
dec
jae
fwait
inc
jo
add
or
sub
stos
js
xchg
cmpsl
shlb
lcall
jle
sbb
push
lret
hlt
popa
mov
imulb
add
out
pop
lea
adc
lods
cwtl
out
sahf
and
cmpsl
and
lods
lods
loopne
enter
call
gs
fnsave
pushf
inc
lcall
xor
jns
movsb
cmpb
js
mov
xchg
pop
push
fnstenv
out
push
or
inc
scas
inc
insb
call
ljmp
pop
sub
inc
cmpsl
insl
aam
iret
pop
sbb
loopne
or
jb
shrb
cwtl
dec
add
sub
and
call
xchg
insl
addb
mov
adc
fisttpll
roll
stos
fmull
daa
push
cmpsl
and
in
mov
fmulp
out
std
xor
mov
leave
jmp
adc
and
popa
lahf
sub
dec
mov
mov
mov
sbbl
scas
insl
jns
mov
popf
sarl
and
aaa
mov
xor
cld
sbb
shrl
aaa
sub
fs
pop
out
insl
adc
cmp
popl
cmp
flds
sbb
mov
push
jecxz
or
xchg
mov
push
ret
mov
dec
and
and
stos
xor
pop
xchg
or
mov
leave
test
je
mov
int
jno
cmpsb
pop
aad
dec
jb
xchg
cmpsl
sbb
sub
fwait
jg
cltd
xor
ret
lds
int3
int3
or
stc
push
xlat
xlat
aam
mov
sahf
loope
xchg
xchg
jp
out
je
xchg
test
shl
andl
pop
mov
or
xor
iret
push
jae
pop
adc
je
adc
push
and
jmp
add
pushf
insb
adc
inc
shlb
adc
cmpsb
jp
out
xchg
aaa
cmp
or
out
mov
jg
mov
enter
dec
add
cltd
sub
loop
pushf
cmp
inc
push
and
cmc
lcall
ret
js
mov
andl
mov
insl
es
lock
mov
icebp
inc
aaa
lods
mov
xchg
xor
ljmpw
cmp
and
push
mov
mov
mov
xchg
xor
and
xchg
aaa
test
mov
cmpsl
cmp
aas
sahf
push
mov
mov
daa
pop
and
mov
jno
mov
xor
push
dec
ss
adc
and
sbbb
in
jl
lea
cli
add
sub
das
jns
mov
shrl
sub
cmp
ja
and
sub
mul
or
jae
iret
in
push
xor
pusha
pop
mov
outsl
insb
or
hlt
jmp
outsl
jnp
fists
or
pop
mov
mov
insb
pop
mov
inc
data16
push
and
lods
cmpsl
jmp
iret
imul
mov
dec
stos
add
pushf
out
push
enter
movsb
test
insl
add
cmpsl
push
das
repz
stos
mov
jbe
inc
test
sbb
mov
sti
lret
subl
and
fcoms
cld
sarl
lds
aad
lea
jl
out
in
stos
sub
adc
lods
and
hlt
mov
mov
das
sub
pop
movsl
loopne
pushf
imull
adc
lods
lcall
push
ss
mov
or
dec
jp
out
and
enter
jns
xchg
shlb
mov
into
jbe
cmpsb
fstps
in
mov
sbb
andb
pop
lahf
int3
or
shll
scas
dec
cmp
xor
push
insb
jl
mov
or
sbb
pop
gs
adc
in
mov
jecxz
xchg
cmp
mov
fidivrl
jno
insl
and
stos
hlt
xor
mov
cmp
add
dec
xlat
mov
cmpsl
test
inc
push
xor
adc
jg
fcmovnu
std
add
movsb
adc
jbe
push
pushf
mov
lea
jge
lods
out
popa
insb
addl
jle
pop
fcoms
jbe
add
cmovno
inc
mov
inc
add
cmc
jae
out
mov
xor
bound
daa
and
dec
rcrb
lock
enter
movsl
cmp
or
sub
push
adc
dec
jmp
jmp
andb
adc
fisubrs
or
jo
cmp
push
cmpsl
add
in
mov
es
xor
testl
push
sub
push
inc
xchg
js
lret
in
or
pop
push
movsb
cmp
lahf
jmp
jbe
insl
sbb
loope
add
loopne
pop
adc
ja
sub
cld
in
bound
enter
std
xchg
imul
hlt
lret
and
hlt
bound
mov
repnz
pop
sub
popa
sub
mov
push
jae
out
clc
insl
insb
mov
sub
push
and
leave
loop,pn
inc
add
je
sub
jp
or
scas
cld
add
sbb
call
sub
xor
push
ds
cli
fst
int3
jl
mov
imul
cmp
scas
sti
mov
mov
hlt
xchg
add
roll
mov
pop
popf
inc
loop
into
add
add
adc
pop
push
int3
mov
fsubp
mov
mov
cmp
out
std
aam
ret
inc
cli
jne
js
out
sarl
out
sbb
addl
push
sub
and
push
fcmovnu
jecxz
arpl
int3
mov
fmulp
jnp
sbb
xor
inc
mov
cld
mov
lahf
ljmp
arpl
loop
lret
mov
loop
sbb
inc
test
lock
mov
xchg
sbb
out
or
cmp
js
push
mov
jmp
cmpsb
jmp
sahf
pop
aas
or
je
mov
cmpl
or
imul
out
mov
add
xor
cmp
jg
ljmp
cltd
cmpsl
lea
lods
adc
push
sbbb
sbb
mov
mov
addr16
dec
mov
ss
add
cmpsb
dec
mov
in
call
loope
or
pop
lret
rcrl
mov
xchg
iret
cmp
dec
in
add
inc
xchg
xor
aas
or
or
push
xor
mov
mov
sub
std
pusha
xor
imul
add
adc
jbe
cld
mov
or
rcr
adc
pop
jp
fldenv
rcr
mov
inc
cmc
aam
or
jbe
imul
mov
cmp
xorb
sbb
cmpsb
outsl
add
es
push
outsl
mov
inc
in
mov
jb
inc
mov
add
inc
add
or
cmp
call
jae
ja
or
sbb
lods
scas
lretw
fsubp
imul
invd
dec
adc
mov
scas
in
mov
dec
mov
jo
movsl
lock
mov
sbb
push
or
sbb
pop
shlb
mov
aas
jge
or
scas
or
pop
jae
dec
cmp
aam
inc
push
movsl
pop
pop
mov
repnz
push
pushf
test
shr
jb
lret
idivb
mov
pushf
insb
xor
clc
lods
pop
mov
ljmp
loope
lock
fs
or
pop
push
popf
sbb
xor
sbb
mov
hlt
roll
mov
jo
sbb
xchg
dec
mov
insb
fwait
cmpsl
fidivl
push
leave
fwait
jno
sub
mov
mov
dec
push
stc
stos
or
mov
sub
and
call
or
test
fisubrl
push
cmp
and
push
or
pop
push
mov
arpl
stos
inc
cmpsb
and
jns
xchg
aad
movsb
cld
test
push
add
repnz
mov
xchg
and
inc
inc
cmpsl
dec
xor
or
insl
mov
inc
fists
or
cmp
inc
imull
pop
and
shlb
pop
hlt
add
and
in
pop
movsl
outsl
or
mov
in
xor
mov
daa
movsl
mov
test
testb
pushl
shl
popf
sbb
insb
fsubp
inc
mov
add
cwtl
add
ror
mov
ljmp
test
mov
outsl
sbb
pop
dec
cmpsl
sbb
sti
mov
imul
cli
popf
or
jecxz
mov
xchg
pop
xchg
sbb
mov
lahf
inc
pop
xor
jb
xchg
icebp
or
cwtl
pop
jo
and
push
dec
lret
mov
push
sbb
mov
inc
mov
xchg
inc
pop
stos
mov
out
mov
mov
inc
and
mov
not
mov
cmp
mov
mov
outsl
xor
xchg
jb
rorb
out
mov
dec
loop
cwtl
cmp
movsl
add
push
add
sub
out
in
stc
std
dec
stc
and
pop
jnp
stos
mov
and
aas
ss
lcall
addr16
xchg
pop
bound
das
push
fimull
lret
push
ljmp
or
mov
inc
pop
mov
mov
test
stos
jle
sub
cld
or
mov
pusha
inc
pop
and
fldl
test
dec
xor
dec
mov
test
sub
test
cwtl
mov
pushl
adc
ds
rolb
test
out
inc
add
lret
sub
mov
mov
mov
pop
shll
sub
filds
ret
sub
push
mov
or
into
xchg
cmp
je
in
outsb
dec
sub
push
xchg
add
sub
fmul
shll
packssdw
pusha
push
sbb
outsl
lds
out
xor
loope
fldt
and
scas
das
push
cmpsb
loope
in
push
push
movsb
add
mov
stc
jo
lahf
and
adc
xor
sbb
movsl
adc
xchg
int3
cmp
mov
fisttps
push
xor
fs
and
push
stos
js
movsl
sar
inc
push
pop
cwtl
inc
push
fnstcw
and
jge
jl
push
mov
inc
mov
out
xor
add
loopne
lret
aas
add
or
mov
mov
sbb
daa
fstps
add
fcoms
jae
sar
aaa
ret
std
sahf
jle
jecxz
adc
lods
jecxz
js
jbe
jnp
mov
movsl
sub
or
cmp
mov
sub
push
sub
xchg
xlat
emms
mov
lret
lretw
or
notl
jecxz
mov
repnz
lcall
loop
jno
cmpb
sbb
xchg
mov
sbb
mov
sbb
repnz
data16
xchg
ljmp
add
in
xchg
inc
addl
xchg
leave
test
test
sub
mov
dec
jle
pop
addb
sbb
cmp
testb
test
stc
mov
mov
xlat
add
or
aam
cld
mulb
frstor
cs
sarl
sub
pop
ja
mov
push
xchg
loop
lcall
out
aam
mov
xchg
je
in
pop
enter
mov
push
mov
imul
ds
rorl
sahf
mov
inc
insb
inc
test
loopne
mov
and
adc
push
jno
stos
sahf
inc
adc
scas
fst
mov
out
scas
cli
cmpsb
ficoms
adc
aad
cmp
movsl
inc
jp
add
cmp
ja
inc
xlat
sub
push
or
xchg
inc
rcll
test
rorb
pop
push
dec
jae
mov
out
mov
jbe
inc
sbb
mov
cmp
adc
dec
jno
sub
push
sbb
ds
dec
les
dec
movq
pop
jge
mov
jbe
lret
mov
pop
in
mul
jns
dec
mov
sbb
mov
and
jnp
push
mov
in
jmp
cli
mov
sbb
or
int
imul
lock
jp
pop
and
hlt
add
mov
jl
cmovp
outsb
pop
pop
xor
test
int
mov
xchg
outsb
insl
push
jae
lcall
inc
ds
add
xchg
out
imul
jmp
popa
push
push
mov
cmp
data16
mov
frstor
mov
mov
stos
mov
jns
mov
imul
sub
les
cmp
pop
add
sub
std
cmp
aad
dec
mov
or
cltd
push
push
in
lcall
or
xor
es
lcall
mov
mov
je
daa
leave
bts
fidivl
imul
mov
add
jnp
jb
or
popa
mov
add
scas
lods
sahf
jo
pop
in
inc
gs
push
cmpsl
leave
in
roll
movsl
push
cwtl
mov
rorl
shrb
test
cmp
cmp
and
lods
imul
adc
sub
test
fimuls
sbb
add
mov
arpl
inc
inc
in
mov
mov
pop
xchg
gs
fnstcw
pop
xchg
add
adc
into
dec
add
adc
cmp
xchg
into
xchg
push
rorl
inc
in
mov
cmp
es
out
pushf
push
fwait
les
arpl
shl
dec
pop
add
hlt
mov
sub
cmp
pop
xor
pop
xor
mov
jo
stos
sbb
arpl
scas
or
repz
push
xchg
out
xor
and
rorb
dec
adc
outsl
imul
sub
daa
loop
int3
inc
jae
pop
push
fs
sbbb
adc
ret
inc
adc
or
nop
mov
insl
and
movsl
fists
jb
shrl
icebp
orb
adc
fnstenv
ret
xchg
mov
mov
mov
add
dec
add
inc
loop
sbb
jmp
xchg
sbb
lea
mov
test
test
xor
outsl
xchg
aad
inc
inc
mov
xlat
loopne
push
xor
mov
int3
xor
outsl
push
xchg
fwait
mov
insl
xorl
loop
and
loope
pop
or
xchg
mov
xchg
pushf
and
jmp
sbb
mov
sti
mov
mov
shrl
ficoms
push
int
insl
mov
test
mov
pop
push
add
ljmp
out
pop
pop
nop
mov
inc
push
shlb
push
mov
add
fsubr
fidivrl
jnp
inc
xlat
mov
arpl
in
mov
cli
push
scas
adc
fcoms
imul
mov
or
punpckhbw
xchg
pop
insl
je
out
dec
test
xlat
les
cmp
sti
scas
popl
xchg
push
pop
out
add
ja
scas
and
and
mov
cmp
inc
test
jle
dec
sbb
nop
out
sbb
data16
fisttpll
jo
jg
lods
dec
cmp
std
add
test
and
negl
ljmp
dec
int3
cmpb
and
shll
iret
jl
mov
lret
fcoms
add
mov
xchg
mov
cmp
mov
gs
into
mov
lock
xchg
xorl
insl
sahf
xor
sub
jmp
je
or
dec
and
nop
adc
and
pushf
adc
es
inc
cmp
fmull
and
addr16
fstl
and
mov
jo
xchg
xchg
lock
adc
cmp
clc
mov
jne
jb
pop
in
xchg
pop
popl
stc
push
and
and
fiaddl
push
xlat
mov
push
test
cmpsl
addr16
clc
scas
lds
sub
lret
cli
sub
dec
sub
sbbl
adc
add
and
mov
xchg
mulb
sar
cltd
jae
ljmp
push
gs
mov
aaa
negb
out
xchg
scas
out
mov
push
inc
pop
sub
arpl
cmp
cmp
das
scas
add
cmpsb
or
cmp
dec
inc
adc
pushf
xchg
dec
dec
jmp
push
mov
inc
insb
clc
out
mov
or
repnz
push
lock
dec
es
pusha
sbb
mov
inc
and
mov
xor
or
mov
and
lods
sbb
iret
xor
mov
mov
lret
sti
cmp
fiaddl
adc
ss
or
ret
repz
xchg
repz
dec
mov
pop
mov
add
xor
pop
xor
mov
repz
addb
repz
lods
add
xchg
adc
fcmovu
jne
imul
movsl
repz
sbb
cmp
push
mov
mov
jp
repnz
sub
addr16
and
xchg
xchg
add
adc
int
sub
mov
lahf
jne
push
repz
ljmp
cmc
add
jno
nop
daa
push
or
jge,pt
mov
incb
sub
cld
cmp
sti
ret
out
lahf
add
imul
jge
lret
rolb
int3
mov
fmuls
loope
fwait
or
mov
iret
add
notb
test
lds
xor
and
test
sbb
sbb
mov
enter
xor
nop
in
mov
lcall
cmp
loop
int
mov
mov
sbbb
loope
cli
dec
les
repz
cli
mov
pop
and
adc
mov
adcl
pop
bound
xchg
add
or
movsl
dec
ss
dec
cmp
mov
pop
fdivr
sbbl
add
fildl
cmp
cmpsb
lret
push
add
and
hlt
cmp
rorb
or
xchg
xor
and
pop
loopne
lods
ret
rcll
jmp
aaa
cmpsb
fsubrl
outsl
jle
int3
mov
xchg
or
sbb
imul
aas
jl
imul
xor
into
mov
in
push
xchg
push
inc
cltd
pop
pop
push
mov
cmc
aaa
scas
xchg
mov
jmp
lock
outsl
cmp
jne
in
jae
jecxz,pt
add
mov
mov
sbb
pop
insl
mov
pop
fsubl
out
daa
mov
test
iret
dec
push
jno
adc
push
fadds
imul
mov
xor
pop
fistps
cmpl
pop
inc
sbb
xchg
mov
scas
pop
mov
shr
insl
loop
imul
adc
inc
jp
fwait
dec
aas
xchg
popf
fbld
fwait
push
data16
repz
mov
adcb
jo
adc
dec
leave
add
sbb
mov
aas
jno
repnz
shll
mov
pop
mov
inc
jle
lea
sbb
dec
xor
mov
mov
pop
lret
xor
sbb
mov
out
xlat
sbb
out
jb
in
pop
adc
sbb
imul
jae
cmc
gs
shrb
movsb
dec
out
lock
cmp
test
pushf
cmpsl
push
fmul
mov
push
fwait
push
inc
mov
sahf
out
cmp
sbb
sbb
mov
dec
out
dec
mov
movsb
loop
in
cmpsl
mov
ret
mov
push
push
rorl
xor
das
add
imul
sub
int
out
popa
aad
push
xor
sub
stc
shrb
shr
mov
xor
mov
jns
nop
lods
jb
sub
roll
cmp
sahf
outsl
stos
xor
sbb
cmp
inc
push
inc
in
dec
iret
ret
xchg
imul
fsubrs
mov
out
into
fdivrs
test
popf
adc
push
in
push
jb
ret
add
push
clc
pop
sub
fucomip
mov
and
or
repz
jns
add
cli
pop
jp
out
xorl
mov
mov
mov
mov
sbb
adc
sbb
movsb
adc
popf
cli
pop
int
sbb
arpl
push
int3
mov
repz
xchg
stc
sbb
inc
push
lcall
pop
lock
dec
in
xor
push
out
mov
pop
mov
das
test
xchg
inc
lret
and
add
sub
jp
arpl
pop
hlt
pop
xchg
or
mov
mov
inc
cmp
out
push
rcll
jno
cltd
dec
stc
xor
orb
or
aaa
jmp
gs
sarb
das
mov
push
add
adc
sbb
dec
pop
ljmp
mov
jge
push
dec
pop
int
shr
sahf
stos
jmp
mov
inc
push
and
repnz
push
mov
xor
aas
rclb
inc
pop
std
mov
dec
inc
mov
aaa
jle
jge
inc
cs
jae
or
movsb
or
shrl
in
cs
insl
mov
sub
je
rcll
pop
in
adc
adc
jae
jnp
es
out
cmp
nop
cmc
jae
jg
sti
xor
push
mov
xchg
mov
lea
lahf
cld
mov
jg
xor
lods
xor
pop
and
xor
hlt
seta
xchg
pop
popa
and
xor
or
sar
out
fimull
mov
dec
cmp
xchg
mov
addr16
sbb
jne
outsb
movsb
and
or
out
pop
push
dec
out
dec
fwait
jge
in
aad
shll
push
ret
mov
inc
or
mov
mov
lds
and
jnp
jae
xlat
xchg
lds
popf
or
mov
dec
in
mov
popa
mov
out
out
jle
fisubrs
jp
mov
lock
and
fildll
jg
xchg
push
idivl
xor
adc
fs
cmp
dec
roll
sbb
ljmp
stos
mov
pop
sbb
mov
or
adc
leave
mov
xchg
mov
inc
fwait
jge
sbb
ds
xorb
lret
mov
sub
cmpsl
sahf
popa
sbb
inc
enter
rorl
cmp
sbb
bound
addr16
mov
scas
jmp
faddl
in
sub
inc
js
cmpsb
mov
dec
iret
jns
dec
xchg
jb
scas
outsl
addr16
pop
popa
jecxz
int
sbb
in
push
jno
jge
cmpsl
push
add
addr16
xor
and
aam
aad
dec
movb
pop
mov
or
in
mov
push
jmp
aam
fsub
pusha
push
sub
adc
xchg
aaa
popf
fbld
and
ja
test
out
fdivrp
mov
dec
mov
or
insb
into
mov
aas
shrl
int
push
xchg
sbb
cmp
movsb
inc
daa
sub
push
ja
inc
fisttpll
sbb
out
sti
mov
add
shll
mov
xor
call
lods
loope
mov
div
xchg
imul
mov
cmp
pop
pop
rorb
push
subl
fdivp
and
andl
data16
mov
mov
jo
and
dec
or
mov
test
push
movups
outsb
dec
jmp
addr16
xor
sub
mov
pop
cmpsb
mov
xchg
aaa
test
imul
pop
shr
lods
in
jbe
call
add
loopne
or
test
movsl
sahf
cmp
jp
cmp
cmp
rorl
aam
sub
sub
mov
notb
mov
mov
lds
enter
arpl
leave
in
mov
dec
pop
jp,pt
fnstenv
mov
out
xchg
push
mov
ljmp
dec
fwait
test
mov
xchg
in
sbb
leave
lret
test
ds
enter
mov
cld
popf
push
clc
lahf
xor
je
mov
jmp
lret
mov
shl
pop
cmp
imul
shll
frstor
out
pslld
xchg
enter
mov
ds
cmpsl
sub
jg
cmp
jle
mov
cs
mov
dec
cmp
jmp
and
loope
or
push
push
inc
cld
pop
in
call
repnz
cltd
aas
xchg
add
movsb
jge
cld
xor
push
psraw
inc
je
and
jo
test
jmp
dec
xor
adc
lods
push
mov
xchg
es
pop
mov
push
js
aam
mov
push
out
ja
lret
mov
xor
push
mov
aas
and
fidivrs
adc
jnp
rorl
sbb
iret
pop
cmp
jb
fstpl
inc
mov
xchg
rolb
jo
fs
mov
repnz
fstpt
jae
sbb
mov
test
daa
out
insb
xchg
into
cmp
lret
out
inc
jmp
loopne
mov
sub
mov
hlt
loope
sub
mov
add
fs
dec
lds
test
aad
out
ljmp
mov
xchg
or
arpl
mov
mov
inc
adc
mov
mov
mov
dec
jg
out
jecxz
mov
ret
fisubs
mov
xchg
cmc
xor
imul
hlt
repz
lock
andl
mov
jl
xchg
cmc
sub
gs
pop
aad
pusha
lea
mov
cmpsl
pop
dec
cmp
push
addr16
aad
adc
aam
je
insb
dec
pop
js
and
or
insl
jmp
fsubr
rcrb
movsl
sbb
adc
lret
and
and
mov
test
cltd
data16
xor
sbb
cmc
dec
dec
add
hlt
xor
scas
inc
add
sub
pushf
jmp
pop
and
loopne
fcmovbe
in
loopne
jns
bound
mov
xchg
ret
xor
es
push
pop
jae
adc
dec
sbb
jb
dec
mov
cmp
insb
in
jnp
sbb
leave
pop
pop
sbb
sbb
mov
icebp
mov
bound
push
push
pop
inc
out
aas
add
out
shr
pop
icebp
pop
test
mov
jae
sub
mov
aaa
les
hlt
dec
cmp
or
cmp
call
xor
ss
cmp
cwtl
ja
daa
cs
arpl
popa
pop
xor
dec
mov
cwtl
push
sub
mov
shlb
pushf
xor
sub
push
sbb
insl
push
xchg
stos
and
icebp
mov
loop
bound
cmp
xchg
out
sub
repnz
stc
hlt
cld
mov
adc
add
xor
push
addr16
mov
movsb
inc
lahf
mov
xchg
nopl
scas
sbb
aad
sub
ljmp
mov
xor
pop
hlt
mulb
push
mov
ror
cwtl
push
xchg
fildl
dec
mov
mov
dec
icebp
mov
sahf
fdivr
pop
leave
jno
lret
scas
jmp
fiadds
mov
pop
sub
xor
clc
in
test
push
andb
xchg
loop
xor
push
mov
in
gs
sub
inc
mov
test
pop
imul
int
stos
xor
push
ds
pop
test
jae
dec
icebp
lds
mov
shr
lods
xor
push
push
out
cmpsl
test
enter
mov
sub
ficomps
test
mov
imul
pop
jb
add
and
ja
mov
and
sbb
push
leave
out
mov
repz
push
push
lods
add
cli
nop
cld
rorb
es
jl
js
mov
pop
mov
xor
into
stc
fldl
push
jmp
xchg
test
int
imul
mov
hlt
cs
jge
add
sbb
dec
lret
jmp
rclb
sbb
mov
gs
adc
mov
dec
icebp
dec
repz
mov
push
fs
imul
ja
sbb
mov
adc
or
xor
outsb
insb
popl
jmp
jne
int
pop
adc
mov
pop
jno
or
rclb
shll
push
daa
cmp
js
imul
or
mov
mov
mov
testl
nop
rclb
push
dec
dec
in
or
pop
mov
pop
adcb
jle
daa
mov
jnp
out
jp
pop
sbb
scas
fimuls
lcall
inc
add
sub
add
mov
sbbb
and
sti
jle
ljmp
rol
pop
push
inc
lods
in
mov
je
add
pop
mov
dec
push
cmpsl
addr16
xor
jns
jg
jle
jecxz
cmc
fstps
jno
push
sub
mov
out
fxch
dec
das
insb
xchg
sub
sub
mov
mov
jp
insb
mov
fwait
in
xchg
adc
divl
adc
dec
push
popf
lcall
sub
push
mov
icebp
jns
imul
push
popa
jae
mov
adc
mov
xlat
call
jno
loopne
cmp
cvtps2pi
push
into
pop
inc
daa
mov
push
rcll
call
jnp
bound
pop
cmp
xchg
lret
arpl
jno
lcall
ret
imul
sub
jb
outsb
ljmp
jb
xor
mov
cmpsl
popa
out
push
push
or
fcoml
insl
push
dec
imul
ss
repz
add
cmp
fld
add
adc
and
xor
pop
mov
push
adc
sub
lret
mov
mov
iret
neg
and
mov
cwtl
adc
adc
lods
mov
in
cmpsb
mov
sub
dec
cmp
or
add
pop
pushl
and
mov
gs
test
popa
push
push
push
mov
popf
lods
sub
hlt
and
xor
add
outsb
jp
jnp
fs
push
sarl
push
inc
dec
ret
packuswb
push
sub
lock
jne
dec
push
lcall
int
mov
xchg
lods
and
out
fisubrl
pop
xor
rorb
movsl
mov
and
push
fmull
les
arpl
pop
rcr
dec
push
xorb
or
into
cmp
mov
and
push
data16
sbb
push
roll
jg
mov
loopne
jmp
and
rol
lods
push
adc
xor
pop
lret
inc
jo
mov
pushf
mov
inc
lret
ror
pop
or
xchg
ret
loopne
outsb
cmp
int
fisubl
int3
sahf
lods
test
or
inc
sti
les
mov
cmp
jecxz
ds
inc
mov
mov
data16
pop
loope
cmpsl
mov
out
adc
aam
enter
mov
pop
js
scas
sbb
xor
test
cs
push
cmp
inc
ds
sarl
inc
adc
sbbb
add
cmp
inc
test
movsl
push
out
and
mov
rol
xchg
push
push
test
xchg
mov
and
xchg
cmpsb
popf
mov
cmp
aad
xchg
mov
push
in
lods
sti
jmp
add
push
jns
sti
js
dec
cltd
add
mov
lods
mov
pop
cmc
pop
arpl
sti
inc
adc
lret
ret
sbb
cmp
or
out
jno
jbe
fldl
dec
leave
jne
jns
js
repnz
test
inc
pop
lret
ret
mov
cmpb
jne
push
adc
stos
setb
outsl
cmc
cld
lds
lret
insl
and
rclb
dec
adc
sbb
pop
loopew
xchg
sahf
loopne
ljmp
daa
insl
sub
mov
pop
add
jl
mov
fiaddl
into
jb
inc
add
add
loope
movsb
sub
ret
jbe
rolb
pop
jno
jno
inc
pop
pop
sub
jg
cmpsl
imul
lods
jne
push
int3
cs
push
jle
fdivp
je
inc
out
xchg
cs
xor
shl
push
out
jne
fstpt
outsl
mov
sbb
lea
ljmp
fimull
xchg
add
cmp
mov
loopne
pop
mov
sub
add
adc
movsb
cltd
std
loopne
bound
test
ds
mov
test
sbb
loope
or
out
mov
pop
add
sbb
ljmp
add
push
xchg
das
fistpll
add
xchg
add
mov
cmp
cmp
push
enter
pop
out
adc
insl
call
xor
dec
out
out
mov
pop
xchg
sub
or
scas
mov
and
sbb
sbb
and
popa
dec
inc
add
xor
pop
cltd
mov
daa
fcomps
mov
mov
xor
js
xor
push
shl
ror
cltd
jns
dec
mov
stos
push
test
mov
sub
adc
and
mov
les
lea
or
aaa
je
and
sub
xchg
mov
pusha
xchg
push
mov
cmp
dec
pop
mov
aad
push
mov
notb
xlat
inc
mov
daa
into
ss
mov
xchg
lock
mov
add
aaa
scas
lret
ret
push
mov
inc
dec
int3
lods
rcl
sub
int3
and
mov
ret
dec
inc
repz
jo
fs
pushf
inc
ftst
jns
pop
popf
adc
ret
or
mov
movsl
scas
jge
adc
test
add
mov
jae
sbb
arpl
int
fidivrs
push
sbb
mov
inc
outsb
loopne
push
cmc
imul
mov
pop
outsl
add
xor
inc
inc
sahf
repnz
push
xor
dec
jb
fcos
arpl
shr
xchg
cmp
cmp
loope
xor
arpl
sub
es
or
enter
push
or
cmc
rolb
cli
jmp
sti
outsb
sbb
mov
pop
adc
xchg
dec
fwait
movl
fcomps
or
clc
mull
push
jnp
xchg
ss
dec
pop
lret
loopne
scas
xlat
stc
int
in
mov
pop
cld
call
leave
je
push
es
xor
jae
dec
out
jne
cli
cltd
loop
mov
and
pop
cmp
les
icebp
and
int
std
pop
lds
mov
lods
vmptrst
dec
lock
pop
ret
jecxz
mov
push
adc
movsl
jae
push
popa
mov
pop
ja
dec
mov
jge
ret
xchg
pop
mov
or
aaa
sbb
pop
ds
adc
sub
sub
sub
push
add
ja
out
xor
adc
mov
lret
push
and
lea
adc
adc
stc
and
leave
xor
popa
and
fwait
aad
sub
sbb
je
lds
mov
lret
xor
jge
mov
les
mov
lret
inc
jne
movsl
inc
test
std
fnstcw
xchg
mov
xchg
xchg
std
lods
pop
jg
adc
xchg
into
mov
xchg
xchg
push
xchg
icebp
loope
inc
rcl
cmc
ja
jo
shll
pop
aaa
es
divl
push
jecxz
nop
int
test
jge
adcb
out
jge
rorl
sbb
fists
stos
loop
sbb
out
hlt
xor
mov
cmp
hlt
dec
lret
fbstp
shrl
cld
push
cmp
hlt
ret
cmp
add
or
lahf
test
push
sub
loope
pop
mov
outsl
dec
mov
mov
pop
push
movsl
push
scas
mov
jp
es
pop
outsl
loopne
int
push
and
or
push
mov
xor
sbb
adc
incb
in
and
sbb
cmp
xchg
mov
xor
jg
cmpsl
jecxz
fldl
lret
push
lret
xchg
jno
imul
or
negl
adc
imul
es
subb
jmp
lock
push
sahf
mov
inc
pusha
xlat
sub
in
add
orl
or
ret
push
loop
js
or
mov
stc
pushf
dec
in
add
inc
loopne
and
adc
mov
test
insl
or
insl
std
test
inc
sub
dec
inc
pushw
push
inc
shlb
sub
cmpl
dec
idivl
inc
fxch
jmp
fwait
jo
pop
sub
adc
mov
dec
jno
jb
mov
xor
dec
imul
jne
or
sbb
fisttpl
jecxz
or
ds
push
sbb
push
dec
inc
lock
cmp
xor
adc
mov
mov
mov
sbb
das
sbb
mov
pusha
sar
inc
fadds
lret
inc
push
push
jl
xor
pusha
loopne
adc
sti
lock
xlat
cli
out
popf
xor
in
insl
ret
js
cmc
mov
mov
insl
cmpsl
mov
mov
xchg
outsb
push
adc
xchg
jb
inc
aam
xor
sub
test
aas
shlb
je
pop
aas
mov
sub
pop
adc
xchg
insl
dec
pop
idiv
loopne
adc
jl
pop
mov
sbb
movsb
jb
add
jmp
cld
sbb
push
mov
dec
jge
int3
jmp
xor
fisubs
sbb
adc
test
mov
out
mov
sbb
lahf
out
cmpsl
inc
or
aam
adc
xor
cmp
icebp
fisubl
ds
rorl
ss
pop
jmp
cmpsl
jae
pop
mov
dec
sub
inc
jl
fistpll
add
call
cmp
mov
push
nop
sbb
jo
xor
cmp
cmpb
jmp
mov
mov
xor
sahf
mov
sub
loopne
rclb
inc
push
adc
mov
mov
test
xor
pusha
sub
int3
movsb
enter
sbb
or
jo
orl
mov
inc
push
mov
or
fstl
rorb
jge
repnz
outsb
jl
xor
jae
sub
aam
lcall
jl
inc
sbb
lret
sbb
ja
in
dec
jae
clc
xchg
cmp
add
jae
insb
jb
roll
cwtl
mov
sbb
or
scas
cmpsl
xchg
xchg
repz
inc
mov
outsl
sahf
negl
loop
repz
pushf
out
mov
pushf
repz
daa
int
adc
dec
adc
aad
xchg
shl
mov
xchg
imul
dec
filds
aaa
xor
mov
adc
imul
and
push
data16
shl
fs
fdivrs
lahf
inc
es
in
insb
in
inc
dec
int
jb
push
imull
sahf
hlt
dec
cmpsl
daa
ja
push
or
cmp
inc
sub
shlb
popf
js
and
pop
sub
test
cmp
cmpsl
push
mov
xor
xchg
je
push
ja
sub
out
gs
jno
xor
shll
and
mov
lds
lcall
jo
inc
repnz
fnstsw
inc
popa
adc
inc
int3
push
je
pushf
popf
or
loope
mov
aaa
mov
push
inc
jnp
pushf
test
push
in
stos
push
mov
cli
inc
insb
and
mov
push
int
mov
push
sbb
insb
addr16
inc
and
mov
jp
dec
into
stos
aam
push
push
jb
push
push
mov
rcrb
xlat
sbb
and
sub
xchg
inc
ds
pop
jecxz
mov
mov
jns
adc
dec
and
jne
fs
adc
and
daa
xchg
dec
add
rcrb
cmp
fucomip
scas
dec
negl
push
jnp
jae
and
addr16
orb
and
xchg
dec
sub
and
push
shll
in
add
jns
mov
adc
mov
jl
ja
stc
xchg
ds
outsb
inc
call
or
sbb
jl
and
repnz
pusha
jne
int
popa
mov
jg
and
jl,pn
sub
xor
sub
lahf
icebp
stos
or
pusha
adc
movsl
mov
popa
push
out
lret
nop
mov
pop
call
inc
sbb
cmp
xchg
insl
xchg
sub
mov
popf
or
sbb
jno
push
add
mov
dec
pop
movsb
stc
lret
dec
dec
daa
and
mov
xchg
or
js
inc
aaa
xor
fstl
inc
and
aad
pop
cmp
fistpll
insl
dec
inc
cltd
add
fsub
in
loope
das
or
cmp
ljmp
addr16
bound
stc
mov
add
lods
lret
dec
cmpsb
add
jle
add
lds
mov
dec
ljmp
jno
cli
stos
mov
sub
loopne
imul
mov
add
mov
jnp
cwtl
xchg
inc
push
jmp
cmp
or
shl
mov
cmpsl
lcall
or
scas
das
movsl
sbb
mov
ja
out
aas
xor
loopne
xchg
push
cmp
xchg
lret
sbb
mov
xchg
and
jbe
push
push
mov
in
xor
clc
inc
adc
pusha
rcr
push
push
loope
dec
pop
xor
ret
jae
movsb
adc
cmpl
das
xchg
mov
mov
and
pop
mov
int3
mov
inc
test
call
cmp
sbb
outsl
push
push
scas
adc
dec
sbb
std
adc
or
fsubl
fcoml
testb
push
movsl
mov
adc
jge
xchg
arpl
jl
pushf
push
and
mov
fwait
xchg
cltd
popa
mov
jmp
in
scas
into
in
mov
inc
out
and
xchg
jl
push
stc
frstor
jecxz
fstl
sbb
jno
dec
jmp
stos
cwtl
and
repnz
and
pop
out
sub
sbb
dec
sub
sarb
in
push
mov
adc
inc
inc
xchg
sub
out
je
dec
inc
in
push
imul
cs
nop
aas
int
out
push
dec
push
mov
pop
je
aas
sti
xchg
and
xchg
sub
and
pop
sub
out
or
mov
mov
les
fnsave
testb
mov
jl
add
sbb
dec
sub
jno
jecxz
js
movsb
sub
int3
int
adc
js
inc
sbb
adc
test
and
incl
das
pop
sbb
pop
push
jno
pop
pop
sahf
repz
out
push
mov
popf
sbb
jp
mov
jns
xor
mull
mov
addb
xchg
outsl
or
fldl2t
add
sbbb
lret
out
enter
popf
loop
push
dec
mov
mov
jl
cs
stos
pop
call
push
pushf
push
or
negl
enter
inc
and
or
mov
mov
push
stos
mov
mov
std
addb
lods
fisubrs
push
or
sub
aam
gs
fistpl
int
call
inc
in
sbb
xchg
inc
jge
rcrl
push
enter
mov
pop
xchg
aaa
popa
adc
mov
cmp
mov
mov
scas
scas
push
roll
mov
inc
xchg
jp
insl
inc
lea
das
addb
inc
in
in
ss
cmp
jp
les
pop
icebp
out
jg
adc
loope
call
movsl
xchg
bound
jae
out
clc
sahf
loopne
arpl
scas
fildll
aad
out
sub
cmp
ljmp
adc
lahf
sbb
addr16
ljmp
sahf
push
in
shlb
ret
out
mov
lods
jg
jge
add
fsubrl
shlb
push
scas
aad
jnp
leave
mov
xor
jp
lods
push
imul
or
sbb
bswap
dec
lcall
xlat
test
addr16
imul
test
movsl
enter
mov
ljmp
fdivp
jbe
add
push
gs
inc
leave
and
xchg
fidivrl
sti
push
mov
inc
jecxz
sbb
fsubr
mov
bound
out
dec
dec
dec
pop
pop
xor
cld
jl
xchg
js
xor
dec
push
enter
sbb
cs
inc
lret
jl
pusha
adc
xchg
mov
js
addr16
jl
je
ss
cmp
lahf
mov
icebp
dec
out
dec
mulb
jae
jns
das
add
ss
adc
pop
shrb
test
aad
aas
jae
pop
fnstcw
lods
lods
jnp
in
push
jge
int3
jge
outsb
lret
pop
push
push
sbb
addr16
xor
xlat
adc
pop
xchg
test
sbb
lcall
pop
rcl
test
dec
aas
ds
sbb
mov
in
xchg
pop
inc
movsb
xorl
and
pop
rclb
fiaddl
shl
push
xor
nop
mov
icebp
sbb
sbb
pop
ja
sub
cli
in
push
popf
sbb
mov
lock
add
inc
fnstsw
outsl
shrl
cld
mulb
ficomps
leave
xor
xchg
push
icebp
adc
mov
mov
dec
and
mov
mov
add
mov
cwtl
dec
pop
test
dec
pushf
pop
jo
sub
in
jnp
xor
aaa
mov
repnz
pop
add
subb
je
and
mov
fs
mov
mov
xorl
dec
pop
add
pop
jnp
lods
shr
imul
push
mov
cld
inc
sahf
add
popa
xchg
push
hlt
addr16
out
mov
sbb
out
push
pop
sti
pusha
rcrb
fidivl
negl
orb
cld
stos
xchg
test
xor
mov
lock
sub
xor
adc
dec
push
fbld
into
adc
lea
aad
push
xchg
fisubrl
inc
leave
shrb
js
decl
stos
jnp
sbb
jp
outsb
in
push
jo
stos
mov
mov
outsl
call
daa
pop
sbb
repnz
test
lods
jo
pop
stos
shrl
repz
cmp
cld
dec
add
mov
push
rolb
sbb
pop
adc
xchg
cwtl
jmp
or
push
sbb
aam
fwait
push
popf
and
arpl
inc
and
imul
orb
fidivrs
arpl
add
mov
movsb
jge
loop
outsl
or
aad
inc
push
push
and
dec
cmp
pop
js
fistpll
dec
jo
shl
ss
call
xchg
sbb
aad
les
data16
pop
std
sahf
or
roll
sahf
fstl
notl
je
adc
add
in
insl
mov
pop
ljmp
pop
scas
stos
xchg
cmc
jae
fistps
push
loop
jg
ljmp
fsubl
sahf
add
ds
xchg
lock
cmp
icebp
sub
mov
mov
adc
std
sbb
sbbb
xchg
mov
inc
mov
stc
loope
push
orl
xor
jg
push
ret
fisttpl
mov
pushf
insb
cmp
adc
mov
push
pop
les
mov
mov
mov
and
ljmp
mov
popf
xor
sbb
lahf
sub
xor
add
push
and
out
sbb
cmp
adcb
vcomisd
xchg
in
mov
ficoml
and
or
jns
test
dec
js
or
inc
mov
jg
push
sub
lods
push
fstp
xlat
jnp
mov
adc
sub
call
test
loope
dec
sbb
imul
pop
adcl
and
loop
adc
mov
cli
mov
imull
aaa
xor
dec
pop
aaa
mov
sbb
xchg
lahf
nop
loop
jl
leave
xor
ss
push
and
jnp
inc
aas
mov
inc
jge
xchg
sahf
mov
pop
repnz
mov
push
add
cmp
shll
idivl
xor
flds
mov
shrb
and
cli
jns
insl
int
inc
sahf
mov
int3
jmp
dec
mov
imul
mov
jle
sarl
vpsubsb
add
fdivs
dec
iret
sbb
dec
insb
push
and
stos
call
aas
sub
mov
call
and
iret
leave
incb
sti
in
xchg
adc
aad
jmp
loop
mov
sbb
xchg
popf
xor
inc
test
lea
add
into
stos
mov
iret
or
sahf
inc
adc
cmp
push
in
mov
xchg
inc
pop
in
mov
inc
shll
lret
sar
imul
bound
imul
std
inc
aam
aam
mov
xchg
xchg
or
stos
cmp
dec
and
pop
das
mov
jb
mov
mulb
pushf
out
jp
pop
in
mov
popf
loop
cmp
movsb
jo
jge
adc
lds
lds
dec
loopne
repnz
je
lods
and
clc
dec
xchg
das
and
aaa
pushf
dec
repz
nop
mov
sub
adc
or
mull
and
shll
les
test
xchg
out
adc
jg
aaa
push
cmpsl
add
mov
xchg
mov
addr16
sahf
push
cmpsl
mov
rcrl
sbb
xor
fisubs
sub
adc
or
inc
popf
xlat
ja
push
inc
je
popa
pop
inc
mov
leave
or
notb
pop
fldcw
stos
or
repnz
xchg
dec
fdivr
mov
addr16
mov
test
cltd
sbb
fiadds
or
pop
or
stc
adc
rclb
leave
push
daa
sub
mov
mov
cmpsl
xchg
and
fsub
pop
shlb
push
sub
and
dec
adc
xchg
incl
or
dec
cmc
push
mov
mov
mov
out
inc
lock
aas
ret
sub
fsubrp
sbb
jg
daa
decl
cmp
xchg
scas
in
mov
icebp
lock
repnz
inc
gs
pop
xor
int3
sbb
pop
and
mov
out
dec
sub
pop
sub
jecxz
mov
shll
bound
arpl
pop
test
out
jp
stos
fcoms
bound
xchg
cwtl
push
stos
stc
repnz
pop
xchg
add
adcl
jmp
ret
movsbl
ficomps
iret
inc
jecxz
icebp
hlt
push
paddsb
sbb
movsl
inc
xor
push
insl
iret
leave
icebp
inc
iret
xchg
fisubrs
dec
repz
hlt
cltd
cmp
js
shlb
dec
jns
sbb
xchg
xchg
sbb
xchg
pop
jecxz
dec
fwait
jg
mov
jns
in
mov
jne
cwtl
fidivrl
inc
dec
inc
sbb
sti
cmp
ficoml
xchg
repz
data16
test
and
test
addr16
lods
xor
jmp
push
stc
loop
fcomps
mulb
or
loope
mov
ja
mov
pop
and
mov
add
cli
pusha
push
xor
test
fistl
xor
push
jne
hlt
pop
notl
shr
stos
adc
inc
out
or
call
addb
sti
lahf
xchg
xor
or
adc
mov
pop
pop
xchg
gs
mov
lcall
xor
and
cld
scas
inc
das
shlb
dec
pop
andl
stos
into
jl
pop
mov
push
add
push
shrb
popa
orb
mov
push
clc
cmp
push
fdivp
jecxz
cs
stc
push
adc
aas
stos
dec
scas
ss
xchg
daa
sti
dec
scas
lcall
jns
lds
out
in
out
andb
outsb
fcmove
sbb
jle
arpl
les
shll
adc
push
call
ljmp
mov
inc
mov
lock
mov
lret
out
scas
xor
xor
and
faddl
fldl
insl
es
adc
mov
xor
xor
sbb
subb
mov
fsubs
out
sub
push
xchg
push
nop
call
ret
xorl
mov
and
sub
repz
movsb
xchg
xchg
adc
add
ret
in
je
xorb
jmp
push
or
icebp
movsl
jl
lods
inc
xor
add
cld
mov
hlt
out
sub
and
outsb
mov
imul
lret
subb
int
mov
aas
insl
dec
aas
cld
adc
cmp
mulb
aam
sub
sbb
sti
into
jl
mov
movsl
stc
pop
mov
mov
push
lea
out
fidivl
push
jmp
ret
cmp
inc
mov
mov
pop
or
out
insb
imul
inc
dec
or
xor
ret
call
rcrl
sbb
dec
push
and
test
or
mov
cmp
xchg
mov
gs
mov
xchg
lcall
add
push
cmp
das
sbb
xor
add
out
cmpsb
or
sbb
mov
jge
mov
push
rolb
in
cmp
aad
pop
xchg
lods
sub
xor
out
mov
xchg
cs
and
dec
adc
test
mov
pop
mov
mov
fstl
fsin
bnd
mov
repnz
push
or
cmp
out
sar
sbb
and
xor
pushf
mov
or
cld
mov
int3
inc
and
call
adc
xchg
cmp
rclb
das
jno
in
in
loope
xchg
fcmove
fisttpll
pop
and
fidivs
aam
or
es
andb
mov
cmp
inc
fstpt
call
add
dec
xchg
fisubs
movsb
jge
pop
decl
cmpsb
xor
xchg
pop
faddl
jp
cli
xor
cmpsb
imul
push
sub
loopne
test
dec
adcb
mov
mov
add
add
dec
mov
xchg
subb
pop
jae
xor
int3
sbb
and
das
xchg
add
cltd
add
roll
imul
mov
gs
les
push
jne
push
jmp
fsubs
sbb
mov
pusha
outsb
sbb
les
daa
pop
and
jp
stos
pop
mov
adc
or
repnz
popf
ret
jo
mov
pop
scas
sbb
cmpsl
data16
add
sub
or
mov
or
mov
int3
dec
out
add
flds
pop
insb
mov
lcall
gs
rcrl
cmpsl
fwait
addl
push
repz
mov
adc
and
mov
lods
push
lret
mulb
cmp
aam
aaa
lret
mov
js
fisttps
test
and
add
mov
in
mov
dec
mov
test
rcrb
mov
mov
fiaddl
aam
sbb
sar
mov
test
jnp
inc
rcrb
xchg
movsb
es
lret
loop
iret
imulb
mov
lods
add
pop
xor
roll
push
mov
mov
adc
jae
icebp
addl
pop
mov
testl
jmp
push
data16
js
out
fimull
jl
mov
cltd
mov
jl
cmpsl
sub
cmp
stos
jo
pop
adc
aam
mov
or
out
mov
push
push
sti
mov
inc
xchg
cmp
jno
inc
andl
mov
or
xchg
ss
sbb
mov
das
mov
ficomps
inc
xchg
cmpsb
imul
clc
pop
xor
dec
subb
mov
fs
jecxz
xchg
xchg
orl
popa
lret
movsl
and
mov
cld
lret
jp
scas
hlt
rcrb
cmp
mov
loopne
push
jb
xchg
and
icebp
divl
and
dec
inc
stos
jo
add
insl
inc
or
call
test
aaa
jp
mov
push
les
ljmp
ljmp
pop
mov
pop
mov
repz
shll
and
into
pushf
cmp
sbb
les
xchg
dec
movsl
int3
dec
loop
jo
jnp
mov
ljmp
adc
test
jb
or
push
pop
jp
pop
std
xchg
test
jecxz
cli
dec
dec
dec
push
hlt
testb
sub
dec
push
test
push
inc
jle
mov
std
jns
sub
jl
xchg
mov
xor
mov
sti
sbb
fisubs
popf
dec
jp
ret
add
add
mov
pop
aam
in
mov
jo
stos
mov
movsb
push
test
rolb
bound
jno
pop
cmp
in
mov
nop
adc
int
jo
inc
jg
mov
cmp
mov
insl
xorl
outsl
push
orl
cmp
es
jl
ja
push
mov
int
xor
sbb
das
mov
cld
push
push
out
mov
mov
aam
jns
lods
outsl
mov
clc
sub
ret
mov
push
xchg
stos
pop
or
xor
and
xchg
cmpsb
xabort
ja
mov
add
sbb
ds
rcl
fiadds
loop
adc
rolb
push
mov
xor
in
push
repnz
addr16
adc
sub
clc
pop
adc
push
aaa
sbbb
pusha
lods
xor
call
push
repz
rcrl
jo
xor
mov
cmp
sub
test
fimull
cli
scas
loop
mov
clc
mov
dec
pop
stos
cmp
xor
rcrb
cmp
mov
imul
mov
mov
or
jl
mov
adc
or
je
jmp
cli
je
stc
xor
imul
imul
push
gs
adc
cmp
into
pop
or
and
lret
jo
or
mov
lret
mov
fstpl
jle
cmc
and
ss
jmp
sub
sarl
xor
push
lcall
mov
call
mov
dec
loopne
sub
jecxz
scas
pop
dec
jnp
jae
ficoms
jbe
das
inc
lock
push
add
cmp
loop
push
adc
mov
push
add
aaa
movsb
jo
rorl
outsl
ret
and
pop
push
push
cmp
lods
addr16
add
mov
imull
push
leave
mov
hlt
cwtl
xorl
negb
jg
adc
xchg
push
jmp
subb
ror
out
cmp
dec
dec
ret
stos
push
mov
bound
ja
add
in
dec
lods
mov
pop
frstor
outsl
das
ljmp
inc
or
ds
je
orb
sbb
nop
push
cltd
cmp
lods
unpckhps
stc
jno
or
insb
js
orb
jae
out
add
daa
orw
in
xchg
pop
cld
repnz
sbb
pop
pop
sahf
mov
mov
rclb
mov
mov
lret
lcall
cmp
push
sbb
pop
push
inc
stos
or
push
mov
test
mov
cli
sub
dec
inc
mov
mov
movsl
adc
lds
repz
mov
adc
iret
sub
into
pop
fisttpll
mov
jp
sar
adc
push
repnz
adc
adc
lods
pop
mov
mov
add
out
shll
mov
decb
xor
lahf
dec
dec
idivb
cwtl
jbe
jnp
and
mov
push
xlat
or
fildl
mov
fcomps
push
stos
jle,pn
data16
sub
pop
mov
xchg
sbb
aad
mov
aam
dec
cs
inc
or
ljmp
imul
jg
sbb
nop
push
inc
aad
xchg
out
ret
xchg
jmp
mov
inc
in
test
xchg
repnz
xlat
ret
int3
xlat
dec
mov
mov
mov
jl,pn
mov
into
imul
pop
jbe
mov
sub
ret
dec
fs
mov
shl
add
fidivrs
out
jae
aaa
cmp
jle
sbb
add
mov
sub
pop
leave
cmp
jle
inc
or
out
inc
jle
or
ret
mov
or
fcmovnbe
mov
pop
movsb
fldl
shrb
js
jbe
shr
xchg
mov
rolb
pop
fildll
stos
jge
test
imul
jecxz
mov
jl
jmp
loop
adcb
xchg
in
lods
enter
mov
out
in
jmp
mov
or
test
mov
outsb
and
mov
jmp
inc
fcoml
orl
neg
lea
das
mov
add
ret
ret
sub
mov
pushf
pushf
xchg
inc
mov
stos
lcall
push
pop
lock
aam
jmp
pmuludq
push
mov
fmul
push
sti
sub
adc
xor
fwait
out
inc
ja
scas
in
push
ret
adc
jl
add
jmp
lret
aas
int
cmc
or
test
inc
sub
neg
lea
push
dec
lahf
mov
pop
jecxz
adc
jl
popa
loope
imul
scas
imul
bound
adc
cmpb
test
dec
mov
mov
dec
jne
daa
in
pop
push
rorb
pop
leave
insl
fiaddl
bound
out
pushf
jle
mov
int3
repnz
cmp
js
pop
iret
mov
pop
cmpsl
mov
xchg
dec
cli
popa
arpl
and
jle
or
cmc
mov
or
pop
fmull
push
add
pop
xchg
push
or
add
pusha
sub
mov
je
ja
xchg
std
das
testb
es
cli
popa
xor
dec
xchg
push
dec
fmull
pop
icebp
pop
sub
pop
push
loope
std
mov
pop
push
in
mov
mov
push
inc
mov
adc
push
push
pop
sbb
ds
sahf
sbb
add
daa
inc
imul
insb
dec
add
test
and
inc
sbb
and
pop
jns
test
mov
ret
mov
jg
inc
jmp
pop
cmp
movsl
inc
hlt
add
lds
and
jne
mov
fmull
and
sub
pop
adc
or
push
lahf
sbb
cmpsl
cmpsl
out
push
je
jb
lret
push
shll
pop
mov
or
mov
in
mov
outsb
mov
cmp
roll
ret
addr16
jge
repnz
out
aad
das
lods
and
divb
xchg
repz
sarl
jne
lret
imul
cmp
scas
movsl
lahf
loope
lods
xor
out
xchg
lods
out
lods
mov
jo
xor
cltd
cli
fisubs
dec
in
mov
cs
loopne
xchg
add
pusha
stos
lret
push
mov
or
xchg
in
push
jnp
in
in
jae
pop
jno
jge
mov
mov
jno
aas
xrelease
jg
jg
sbb
mov
inc
mov
lcall
jg
fwait
sub
movsl
icebp
xchg
jbe
enter
cmp
inc
jo
rcrl
adc
iret
mov
mov
adc
xor
dec
mov
xor
mov
add
mov
stc
cmpsl
xor
cmp
sub
iret
dec
shll
mov
stos
pop
and
stc
insl
dec
push
inc
repz
dec
sbb
pop
cmpsl
xchg
and
push
xorl
icebp
jp
ja
push
mov
call
dec
outsb
xchg
fists
rclb
inc
sbb
jno
xor
xchg
pop
xchg
mov
jno
nop
hlt
sbb
es
xchg
imul
xchg
fsubrl
cmpsl
roll
push
add
cli
fstpl
and
inc
add
add
jnp
xor
mov
xchg
mov
jnp
or
push
aas
fdivs
mov
sub
jge
shlb
rclb
jb
hlt
test
nop
add
add
mulb
outsl
xor
pop
call
int3
decb
jmp
pop
dec
in
xchg
dec
pushf
arpl
mov
xchg
pop
stc
cli
jecxz
mov
pop
lahf
out
repz
mov
mov
cmp
cs
or
and
dec
mov
and
and
stos
jnp
stos
mov
push
sbb
into
out
xchg
fistps
movsb
and
or
lahf
mov
imul
fdivs
push
in
adc
cmp
nop
mov
dec
dec
xchg
lds
push
mov
jmp
push
push
mov
push
ja
or
jp
push
adc
fcompp
cmpl
ljmp
out
cmp
mov
aad
sub
mov
xchg
mov
shlb
dec
cmpsb
jo
cmc
shll
xorb
mov
shl
jmp
push
mov
repnz
in
mov
mov
mov
add
scas
das
sub
int
xrelease
mov
mov
and
ret
mov
ret
jge
mov
dec
adc
repnz
cltd
repz
aaa
dec
ret
cmp
outsb
sahf
fistpll
sub
xor
andl
mov
mov
dec
iret
jne,pt
lcall
sub
scas
add
inc
cmp
mov
aas
inc
jno
pop
or
push
cwtl
or
sub
stc
xchg
adc
sbb
in
sbb
jnp
pop
xlat
aad
scas
mov
adc
push
sarb
cmp
lret
or
xchg
jbe
shl
xor
aam
into
aad
sarb
mov
add
lds
mov
gs
pop
adc
pop
xor
jmp
push
mov
pop
jle
pop
lods
cmp
lcall
in
ja
out
ret
pusha
inc
dec
jb
cmp
popa
pushf
sbb
adc
cwtl
das
jg
arpl
in
sbb
scas
xor
in
nop
loopne
setae
repz
aam
cli
inc
std
sbb
aam
push
loope
rolb
out
dec
mov
int3
cwtl
xchg
andl
bound
imul
sbb
das
ds
repz
dec
xchg
cwtl
or
stc
cmc
add
test
xchg
jge
rorb
jecxz
mulb
jg
flds
mov
aaa
pop
popf
jno
dec
mov
imul
pop
jmp
cmp
lock
shl
adcb
test
push
or
sbb
sub
imul
ficompl
pop
fsubs
mov
xchg
jg
push
mov
dec
jnp
scas
push
sbb
test
cs
inc
push
dec
in
test
inc
inc
daa
lret
sbb
out
jb
mov
lds
mov
sbb
punpckldq
scas
or
inc
andb
jno
push
pushf
cmp
jg
jp
and
pop
xor
ss
jne
lea
loope
dec
sub
into
cmpsb
xor
sbbb
or
jg
shrl
mov
sbb
pushf
jo
sti
cld
cmp
rcl
sbb
sub
and
push
dec
js
loope
je
arpl
nop
scas
and
insb
or
mov
movsb
aaa
push
movsl
inc
and
push
sarb
into
dec
add
sub
ucomiss
adc
jmp
lret
pop
mov
jle
dec
int
lahf
push
leave
std
mov
lret
mov
test
mov
pop
sahf
jo
push
add
hlt
das
out
and
int3
inc
mov
pushf
pop
je
lock
lods
roll
inc
dec
jbe
inc
sub
iret
xchg
dec
ret
int3
out
or
pusha
pop
movsb
pop
call
mov
sub
or
mov
mov
mov
pushf
je
push
jp
mov
mov
out
into
aad
aad
mov
mov
es
loopne
xor
push
mov
clc
mov
test
jmp
movsb
or
xor
push
mov
and
insb
pop
push
shrb
push
scas
fidivs
jle
mov
inc
jae
mov
xchg
insl
sbb
fdivl
test
adcb
inc
sbb
and
repz
add
or
popf
mov
jl
mov
pop
add
push
loopne
or
jae
mov
mov
movsl
lods
iret
sbb
addr16
push
fsubs
dec
test
dec
frstor
add
and
call
addb
mov
xor
imul
mov
jnp
rolb
mov
int3
ret
mov
push
ret
dec
jecxz
xchg
cli
cli
mov
add
das
and
sahf
jp
lods
lret
add
xchg
out
xor
jp
or
rcrb
fcomps
leave
jle
je
pop
dec
test
lret
shll
mov
mov
inc
insl
push
ljmp
jne
inc
lahf
mov
jnp
dec
insb
mov
enterw
pop
lea
lar
lock
pushl
sbb
inc
pusha
enter
or
insl
xlat
lret
out
sub
xor
loope
and
scas
in
insl
das
mov
fs
pop
mov
jne
lds
mov
icebp
cs
je
add
stc
cwtl
stos
push
or
loop
jne
dec
pop
ret
push
aas
rorl
sbbb
bound
in
adc
js
sbb
sub
icebp
std
cli
jge
dec
mov
mov
or
iret
lcall
in
push
push
test
divb
loop
xor
iret
cmp
iret
sbb
push
mov
data16
test
sbb
mov
rcll
aas
outsl
ret
push
repz
ss
test
lds
popf
inc
xchg
andl
mov
dec
dec
cmp
push
mov
roll
pop
mov
and
fcmovbe
ret
ljmp
je
sarl
out
test
xchg
lods
loope
and
cmc
daa
bound
push
roll
xchg
mov
pop
cmp
lock
out
push
push
or
test
or
mov
lock
dec
loope
sbb
outsb
jns
mov
cld
hlt
jl,pn
dec
fisubrs
lret
ja
data16
jae
aas
out
ret
jo
xchg
cmpl
xor
outsl
mov
pop
cmpb
je
fstpl
pusha
cmpsb
roll
sbb
sbb
in
xor
jo
ret
daa
cltd
clc
xor
aam
stos
roll
lret
in
or
andl
jnp
in
adc
lock
aam
jp
or
mov
sbb
je
cmp
outsl
adc
pop
jmp
push
lods
insl
out
mov
mov
movsl
pop
xor
sbb
jecxz
cld
sub
dec
jne
subb
add
pop
jmp
jge
jmp
add
out
test
popa
bound
mov
fists
flds
scas
inc
push
and
jo
add
fsubrl
inc
shlb
push
xchg
adc
filds
imull
push
jmp
pop
std
cs
scas
mov
push
xchg
mov
call
fdivrl
xor
or
dec
imul
dec
or
push
push
xorb
xchg
adc
push
mov
and
pop
or
dec
add
into
jle
arpl
xlat
xchg
and
mov
mov
jbe
dec
mov
cwtl
jg
dec
xchg
lock
ffree
ret
out
push
insl
dec
xor
push
or
test
pop
popa
adc
fadd
js
or
nop
gs
pop
add
jbe
in
scas
push
xchg
cmpsb
jae
push
sahf
sarb
les
aam
jecxz
imul
push
mov
jle
daa
and
or
pop
sarb
cmpsb
adc
add
sub
iret
jb
mov
pusha
popa
mov
ss
pop
outsb
loop
sbb
xchg
into
or
ds
into
fcomps
scas
pushf
cltd
lret
inc
add
aaa
add
xchg
lock
dec
js
mov
out
pop
aas
cwtl
xchg
fcomip
adcl
shrl
stos
repnz
push
cmp
aam
and
in
dec
and
jge
push
popf
mov
roll
adc
dec
or
clc
jbe
fimuls
lcall
ret
inc
rcrl
pop
and
leave
xchg
push
dec
pop
outsl
sbb
pushf
or
shr
pop
push
stos
pop
mov
mov
repz
testb
in
mov
stc
adc
pop
into
call
dec
aas
leave
and
and
jae
jbe
dec
pop
cmpsl
adc
jl
adc
mov
mov
cli
inc
xchg
into
xchg
out
pop
dec
andb
ljmp
lret
test
aaa
push
jnp
xor
mov
out
addr16
sbb
pusha
mov
and
js
sub
jmp
jg
aas
and
in
add
adc
and
cmpsl
mov
les
sub
pop
bound
int
data16
jno
test
xchg
pop
imul
ds
push
in
cli
pusha
or
jbe
daa
push
mov
mov
mov
test
es
dec
inc
mov
out
cmpsl
jmp
and
ret
jmp
hlt
dec
lahf
add
inc
jnp
rcl
inc
and
xlat
adc
movsl
test
mov
push
fs
push
gs
inc
stos
cmp
adc
or
cmp
in
in
jge
cmp
loope
sar
inc
cmp
sub
imul
dec
loop
scas
inc
pop
cmp
rcrb
in
dec
adc
push
jge
jb
add
push
shrl
mov
jbe
dec
outsb
pop
mov
xlat
cmc
or
cld
sbb
movsb
push
out
cmp
pop
mov
rcr
cltd
mov
jmp
add
dec
mov
ljmp
inc
jmp
fmuls
add
les
mov
jns
sbb
add
inc
mov
push
ds
hlt
pop
lahf
cltd
pusha
jl
mov
loop
mov
jp
mov
fdivrl
cmp
dec
and
pusha
xchg
dec
sbb
xor
add
dec
xchg
sar
adc
sub
dec
mov
sbb
lahf
mov
xor
inc
xor
push
push
inc
jmp
adc
fisttpl
orl
movsl
push
push
jecxz
sbb
or
les
push
sub
lds
xchg
xchg
iret
sbb
stos
aas
inc
cmp
and
jae
aad
lds
push
out
out
shlb
pop
cmpsl
or
sti
push
aaa
pop
sbb
enter
out
jg
jmp
dec
add
insl
push
add
data16
loope
shl
test
int
jl
pop
hlt
rclb
dec
jp
aad
add
push
ret
jo
add
xor
gs
pop
pop
int3
mov
add
je
jb
push
sub
jle
mov
add
push
sbbl
add
js
dec
lret
in
pop
jge
lock
mov
iret
fidivl
aaa
fwait
call
pop
arpl
bnd
lahf
in
dec
ss
addb
bswap
stos
gs
push
mov
in
out
mov
pop
xchg
jne
inc
mov
dec
loopne
clc
xchg
ret
stos
insl
dec
push
sbb
dec
fs
xchg
push
xchg
bound
pushf
jg
fstps
jo
test
cwtl
fcmovb
pop
aas
inc
push
shll
jno
sahf
cmp
dec
and
cmp
movsb
mov
xorl
sbb
es
cltd
xorb
iret
imul
mov
pop
testl
out
mov
pop
mov
cmpsl
testl
add
je
imul
fs
aam
pop
mov
in
lock
rorb
roll
pusha
inc
jb
addr16
add
sete
dec
mov
xchg
les
push
icebp
lock
fsubl
dec
out
push
loop
fildl
ficoms
test
xlat
mov
jae
xor
mov
pop
mov
jp
pop
popf
mov
xchg
cli
ds
add
shlb
lcall
adcb
mov
cmpsb
push
div
xor
fsts
jo
fcoml
push
lods
std
hlt
frstor
xor
cmpsb
cmp
ja
mov
sahf
push
mov
scas
mov
mov
cmp
inc
mov
ret
daa
mov
popf
jno
sahf
adc
aad
dec
xchg
inc
inc
enter
mov
pop
cltd
iret
and
jmp
ja
add
out
push
xchg
sub
insb
push
pop
jl
test
adc
and
inc
mov
jne
adc
xor
dec
xchg
mov
or
test
jge
cmp
jae
xchg
mov
cmp
aaa
jno
push
adcb
push
mov
adc
pop
jbe
xchg
gs
js
leave
xchg
add
test
mov
push
lret
cmovs
lret
int
sbb
pushl
cld
iret
test
call
loope
and
push
xchg
outsb
push
hlt
imul
lcall
jecxz
xchg
into
jno
inc
aad
imul
fdivrl
lcall
leave
sub
adc
ljmp
push
dec
jns
test
pop
in
nop
jo
mov
bound
inc
lods
cld
push
fucomi
xchg
sbb
into
jnp
mov
or
xor
add
mov
xor
push
es
je
mov
xor
ds
sub
nop
movsb
fbstp
std
pop
cmp
pop
push
into
and
into
jmp
inc
lahf
inc
leave
pop
mov
xchg
movl
repz
in
add
inc
add
stos
cwtl
add
loopne
mov
push
sbb
mov
cmp
adc
inc
hlt
pop
push
out
and
xor
es
sub
iret
dec
dec
inc
inc
rcll
pop
cmp
mov
jp
jbe
cmp
fld
outsl
out
sbb
pop
sbb
cmp
add
push
sub
cs
daa
adc
pop
pop
jmp
xchg
push
pop
rcrb
sbb
pusha
pop
addr16
jp
test
scas
mov
repz
insb
inc
xchg
jne
cmp
jle
push
clc
sbb
loope
mov
add
or
and
xlat
jbe
pop
pushl
jge
cmpsb
es
int
shl
sub
mov
add
cmp
mov
ja
adc
stos
inc
incl
pusha
je
dec
icebp
dec
jne
cmpsb
into
push
jne
loop
lods
or
mov
cmc
mov
lods
pop
loop
xor
cld
jecxz
push
ret
inc
cwtl
jbe
scas
repnz
call
mov
sbb
addr16
stos
shl
scas
pusha
and
clc
sbb
add
aam
scas
sbb
and
les
iret
mov
add
idivb
imul
std
inc
push
push
aad
sub
cmpsb
js
fucomip
cltd
dec
and
sarb
dec
add
jno
push
testl
repz
loope
push
adc
xor
push
movsb
sub
jge
push
cmpb
xchg
icebp
sub
loop
and
pop
test
ret
sbb
cmp
jp
mov
mov
dec
aaa
mov
data16
jp
pop
pop
push
addr16
frndint
and
lea
ret
jl
xor
add
aaa
subb
sarl
xchg
ja
in
test
lret
leave
pusha
mov
mov
and
mov
rcl
outsb
test
pop
adc
and
fnstsw
mov
hlt
aam
mov
push
lahf
cmp
dec
pop
test
dec
and
dec
es
cmp
mov
push
push
mov
loop
popa
in
push
lret
jb
add
pop
inc
stos
add
loope
bound
movsb
rep
cld
jg
dec
mov
std
cmp
or
mov
insl
sbb
and
xor
pop
pop
cmp
insb
dec
cmovo
pop
popf
xor
dec
repz
int
add
stos
fistpl
test
add
xor
leave
aas
push
out
xchg
xorb
push
faddl
jecxz
fs
cmp
cmp
aas
and
push
or
xchg
cmp
ss
add
sbb
adc
rcrl
dec
gs
xchg
mov
roll
and
jmp
cwtl
jl
out
arpl
fs
push
ja
sbb
xchg
push
movsl
outsl
movsl
lock
push
mov
mov
loope
jno
lret
roll
sub
sbb
mov
aas
sbb
push
mov
fwait
dec
lret
add
dec
jl
repnz
mov
push
pop
stc
cwtl
mov
jne
jne
push
aam
mov
sub
and
out
lcall
jmp
pop
into
sbb
push
daa
fs
cmp
pusha
dec
cli
leave
pop
es
adc
push
mov
and
or
mov
int3
rcrb
jle
mov
sarb
enter
loope
rol
jne
cmp
lods
jg
fidivs
daa
xorb
or
inc
dec
jecxz
int
push
aad
out
pop
mov
aaa
iret
inc
and
movsl
les
shll
mov
mov
adc
nop
js
fiaddl
pop
push
xchg
sbb
mov
out
xchg
sub
ljmp
sbb
push
mov
cmp
adc
xor
and
push
repz
add
lahf
ficoml
addr16
cli
sti
pop
bswap
jbe
sti
das
rcrb
sub
outsb
rcrb
cs
mov
adc
iret
cmc
jbe
dec
pop
gs
cli
arpl
mov
mov
add
jb
cmc
fwait
aad
cwtl
cs
pop
sub
mov
icebp
mov
insl
mov
enter
xchg
sub
inc
cwtl
loopne
and
adc
and
jne
fnstsw
test
test
loopne
ja
fwait
cmp
std
insb
std
mov
jg
addl
pusha
ja
roll
cmpsb
cmc
inc
and
push
sbb
sbb
xchg
pop
aad
jl
adc
scas
adc
mov
mov
xorl
mov
mov
jne
jns
dec
iret
js
cli
mov
cmp
sub
les
std
popf
mov
mov
cmp
sbb
xchg
and
pop
clc
dec
jb
sub
or
jne
adc
adc
add
or
adc
adc
mov
sub
call
lods
stos
sti
call
mov
pop
hlt
adc
icebp
clc
mov
stos
jmp
aam
das
and
decl
cmp
sbb
or
daa
push
pop
loope
mov
sub
int3
inc
sbb
ret
mov
push
out
push
add
pop
es
rcll
pop
mov
xor
push
add
jae
popa
cli
fdivrl
xchg
lds
adc
mov
pushf
mov
mov
xor
mov
imul
add
add
aad
les
xchg
adc
testl
stos
jl
mov
pop
lods
movsl
scas
jne
iret
pop
add
popa
lods
mov
push
mov
pop
pop
insl
mov
mov
jne
jne
addr16
xor
mov
xchg
rclb
fisubl
jns
fsts
repz
rcrb
pop
popf
jb
or
dec
or
push
push
cmp
mov
xchg
xchg
push
insb
popf
add
icebp
stc
loop
add
sbb
out
push
sbb
out
mov
push
xchg
lods
pushf
cwtl
adc
fwait
into
sahf
lret
ds
arpl
mov
lods
mov
mov
mov
xchg
testb
push
jmp
loope
xor
stos
loop
loop
push
inc
inc
repnz
xor
mov
dec
cwtl
lods
jo
inc
xchg
aam
aas
xor
or
cld
cwtl
jae,pt
and
or
loope
mov
hlt
popf
sub
js
xchg
xor
push
scas
jmp
mov
repz
jmp
das
sti
jge
xchg
adc
lahf
xor
enter
int
bound
fnstsw
fsubr
cmp
sub
xor
mov
mov
sbb
jno
dec
adc
jae
roll
dec
pusha
jae
fidivrl
push
jnp
inc
pushf
xor
add
xor
xorb
jge
dec
jne
ja
add
sub
cmp
dec
xchg
sub
in
cmpsl
xchg
call
in
dec
outsb
mov
imul
mov
mov
stos
mov
push
hlt
sar
xor
pop
push
push
aaa
movsl
mov
iret
cmp
inc
cmovo
dec
iret
add
sbbl
repz
fisubrl
or
and
mov
je
pushf
and
push
dec
mov
jb
sub
dec
insb
cmpsb
scas
adc
jmp
scas
call
fisttpll
imul
push
sbb
xchg
out
push
sub
shrb
test
or
inc
push
mov
ja
scas
mov
jne
dec
mov
xchg
jle
fimuls
ja
push
out
inc
stos
outsb
test
push
add
pop
stc
mov
sub
add
jbe
sbb
scas
call
mov
adc
fisubl
xor
call
movl
mov
mov
cltd
outsb
push
daa
push
scas
cmp
xchg
cmpsl
ret
mov
jne
jb
mov
xchg
cs
fwait
dec
cmpsl
cmp
lea
inc
inc
xor
or
mov
jbe
popf
testb
scas
xor
lods
incl
xchg
rol
sub
inc
jp
in
add
dec
fsubl
add
clc
mov
sbbl
mov
mov
jns
xchg
xlat
je
popa
bound
jnp
jnp
or
cmp
jae
addr16
cmp
les
mov
or
cmp
in
ja
ss
lea
pushf
lret
xchg
repz
pop
xor
fucomi
movsl
mov
xchg
cmp
pop
push
lods
in
hlt
xchg
xchg
aas
sub
ficoms
arpl
fcmovnu
mov
bound
or
mov
test
mov
data16
jl
mov
sub
mov
pop
cld
stos
movsl
dec
aad
push
xchg
decb
and
mov
jnp
fucomi
or
xor
or
mov
push
adc
mov
movl
jbe
scas
aas
hlt
push
ds
mov
testl
xchg
dec
in
jp
addr16
adc
sbb
lock
test
test
loop
xor
loopne
push
imul
jmp
jnp
mov
movsl
mov
xchg
jns
ret
mov
dec
test
fcmovu
mov
imul
xor
add
popf
fs
pop
cli
cmc
mov
inc
fistpl
roll
arpl
pushf
pop
inc
mov
add
inc
je
popa
sbb
cld
sub
add
jmp
xor
or
cwtl
stos
push
push
jl
int
adc
test
inc
cwtl
fimuls
mov
dec
fdiv
int3
repz
test
lods
or
mov
ja
xchg
in
push
sbb
xchg
pusha
and
cmpsb
shll
shr
dec
or
mov
sahf
subl
sbbl
mov
xor
xchg
scas
xchg
jne
popa
into
adc
mov
sub
leave
cmpsb
fisttps
inc
out
dec
push
pusha
inc
int
lds
cmpsb
cltd
pop
sbb
jae
jbe
mov
andl
cmpl
xchg
out
mov
outsl
sbb
sbb
pop
insl
push
inc
adc
movsb
pushf
lds
mov
loopne
movsl
std
and
sbb
mov
pop
lea
dec
call
xchg
inc
xor
incb
dec
lret
rcrb
int3
in
jne
mov
mov
pop
mov
ja
cmp
aas
adc
insb
aad
push
aaa
dec
jmp
cmp
rclb
sbbl
sub
mov
ret
out
hlt
gs
bound
es
jmp
push
xor
fisubs
xchg
jno
mov
das
js
cmp
faddl
push
popa
je
push
fadds
add
out
mov
inc
popf
xorb
jne
xchg
adc
adc
push
loope
imul
fwait
out
sub
ljmp
jbe
imul
mov
jl
sbb
lcall
jno
jp
test
inc
mov
inc
jmp
adc
jg
push
xor
jo
or
insb
int3
cmpsb
mov
fiadds
lds
sub
ljmp
vpsrad
lds
xor
aas
imul
test
xchg
sbb
dec
jmp
xor
or
mov
scas
sti
repz
ljmp
pop
popf
lret
negb
jbe
add
in
jno
repnz
in
mov
lret
inc
xchg
faddl
push
sub
sbb
data16
roll
mov
sbb
pop
nop
or
sub
ret
or
sahf
or
xor
clc
inc
push
clc
adc
fimuls
data16
jl
xor
sub
dec
test
daa
add
jae
pop
out
scas
xchg
xchg
mov
in
mov
sub
cwtl
and
mov
or
push
dec
insl
cmpsb
shlb
outsb
aam
or
pop
jno
inc
sahf
cmp
not
sarb
sbb
sbb
or
das
adc
hlt
mov
cwtl
xchg
mov
in
scas
rcrl
loope
dec
mov
jno
cli
insl
mov
ret
in
nop
lret
push
leave
sbbl
xchg
pop
out
mov
sub
push
cli
jb
in
std
push
push
sbb
dec
scas
sub
scas
lret
add
loope
pop
das
or
repnz
mov
mov
out
pop
test
leave
xchg
leave
cmp
cmp
addps
xor
jmp
mov
test
sub
jp
mov
jo
call
js
mov
and
out
cmp
pop
mov
xor
and
sbb
mov
dec
dec
cli
xchg
adc
mov
and
adcb
test
mov
push
cltd
jle
xor
rcrl
xorl
insl
jmp
or
ljmp
lock
add
cld
mov
or
rorb
cs
pop
inc
mov
aas
cmp
mov
pop
mov
pop
mov
mov
jg
jmp
pop
mov
lcall
dec
push
test
xchg
dec
sub
shlb
mov
cmp
fidivl
cmpsl
mov
mov
cwtl
dec
push
adc
out
adc
mov
xchg
sub
jae
pop
pop
outsb
mov
or
mov
or
jmp
in
lods
push
cmpsl
movsb
outsl
adc
out
push
jb
popa
pop
nop
add
xchg
std
sti
pop
fcmovnu
shlb
incb
mov
jp
ja
xchg
xor
sub
pop
mov
aad
xor
mov
imul
or
lds
aas
cmp
pop
out
pop
adc
dec
mov
jmp
hlt
mov
push
shll
push
jmp
sub
sbb
pop
inc
pop
ffree
cmp
add
adc
and
push
push
cmpsb
loopne
jns
ljmp
sbb
sbb
out
cmp
inc
push
sub
and
hlt
out
mov
repnz
mov
hlt
dec
mov
sub
enter
daa
jle
rorb
mov
aas
aaa
and
les
popf
inc
xlat
je
scas
fcompl
test
sub
cmp
call
out
inc
mov
push
jns
outsb
jae
pusha
std
addb
test
mov
xchg
in
inc
add
push
xchg
cli
iret
mov
outsb
mov
xor
into
fsubrs
inc
dec
leave
mov
imul
sub
add
ds
lds
dec
insl
std
arpl
out
jns
icebp
loop
pop
mov
adc
or
addps
adc
inc
lret
mov
pop
out
scas
xor
cmp
out
cmp
std
ss
adcb
xchg
jle
jns
loopne
lahf
hlt
adc
icebp
std
rclb
in
push
jno
xchg
mov
xor
pop
imulb
jns
fdivl
jb
adc
mov
rcr
mov
out
ljmp
dec
test
xchg
add
jo
inc
repz
mov
ja
popf
pop
xlat
pop
ds
and
mov
jne
out
pop
lods
push
and
rcrl
rcr
jne
in
mov
scas
push
dec
je
mull
or
inc
mov
ss
mov
lods
xor
push
in
xor
inc
mov
in
push
pop
xchg
subb
lea
insb
fs
sti
jle
cmp
imul
test
pop
mov
xchg
mov
cmpsl
jae
gs
pop
add
inc
add
push
push
ljmp
add
xchg
mov
or
std
test
jmp
xchg
outsb
mov
pop
jno
aad
lret
fwait
movsl
mov
xchg
or
leave
fbstp
sti
test
jb
stos
sub
adcb
push
push
int3
repz
cs
enter
cmp
mov
pop
push
mov
sbb
cmp
dec
es
fcmovnb
push
mov
mov
cmp
leave
adc
ds
push
jnp
pop
pop
inc
fwait
aam
cmpsb
loope
fwait
pop
out
sub
xor
dec
mov
dec
mov
les
dec
lret
mov
test
cmp
mov
cmp
push
jl
cmpsl
jne
xor
scas
enter
and
popa
bound
push
or
lret
cmp
xchg
xor
test
xor
daa
cmpsb
dec
insl
fsub
loope
std
cmpsl
popf
or
dec
aaa
adc
js
movsl
and
movsl
or
or
lahf
and
jbe
gs
sub
mov
jns
xor
clc
lods
in
push
and
mov
outsl
pusha
push
outsb
jmp
out
rolb
jbe
jp
cmp
imul
divl
inc
into
dec
hlt
das
cs
dec
adc
jp
mov
sub
aas
test
scas
and
cmp
in
addl
mov
push
push
inc
push
dec
mov
or
das
sbb
xchg
in
adc
sub
bound
sti
cmpsl
sub
fnstsw
or
cmp
pop
mov
cmp
xchg
push
add
pop
dec
push
xchg
loope,pt
sub
cli
sbbl
mov
sub
imul
push
test
add
imulb
ficoms
repnz
push
int3
add
sbb
lret
pop
mov
jmp
push
add
lahf
cmp
mov
mov
or
and
pop
ss
jle
repnz
add
cmc
or
outsl
out
mov
in
addr16
stos
nop
cwtl
fiadds
int
cmp
lods
push
push
loopne
ljmp
push
popa
insb
pop
and
dec
mov
enter
jecxz
dec
push
push
aam
push
xor
fisubrl
xchg
cmp
sub
hlt
sub
cmp
cld
aas
sbb
in
mov
jb
or
xor
inc
mov
push
data16
push
filds
int
adc
sub
mov
jge
sbb
call
jg
in
loope
cltd
inc
scas
insl
loopne
std
xor
add
out
mov
test
xlat
inc
leave
gs
test
dec
inc
sbbb
stc
inc
mov
cmp
push
pop
add
xchg
inc
scas
mov
stos
lock
repnz
ffreep
cmpsb
int3
arpl
in
cwtl
addr16
in
sub
add
call
mov
mov
inc
loop
shlb
cmp
pop
mov
sub
mov
aaa
test
sbb
pop
pop
push
dec
dec
gs
mov
add
stos
insl
cmp
xor
jecxz
es
rclb
jge
psubusw
dec
sarl
push
push
iret
mov
cwtl
mov
shrb
or
out
sub
adc
sub
xlat
and
dec
pop
pushf
or
ds
iret
lods
shrb
and
pop
nop
stos
mov
loopne
stos
jne
sub
add
jo
rorl
jbe
push
movsb
xchg
inc
add
xchg
rcr
ds
frstpm(287
and
sbb
pusha
int
push
pop
outsb
in
xlat
pop
sub
cmp
add
nop
inc
xchg
je
jns
inc
cmp
ret
lret
fstl
fsubrs
or
enter
xor
cmp
push
leave
bound
sbb
adc
mov
ret
adc
pop
cmp
adc
mov
lret
cmp
lods
add
sub
nop
sbb
mov
fs
pop
fldt
jge
mov
lock
aas
jge
and
push
ljmp
cwtl
mov
incb
push
add
insb
ret
mov
fdivl
fs
pop
mov
or
rcll
stc
cmpsl
iret
sub
ret
push
ficomps
cmc
das
push
sahf
dec
repz
shll
mov
mov
adc
imul
fisttpll
adc
lcall
xlat
mov
rolb
xchg
cmpsl
mov
outsb
jecxz
addr16
in
in
flds
rolb
test
pop
rcll
pop
mov
jnp
and
insl
cltd
leave
cmpsl
es
outsl
int3
mov
push
stos
pushl
repnz
out
data16
jl
loopne
inc
adc
dec
lret
fimuls
das
aad
sbb
pop
pop
jp
pop
cld
xor
scas
xor
jo
in
ss
jne
sub
inc
mov
push
rcl
and
adc
inc
xor
cmpsb
insl
adc
sahf
ja
ficomps
in
push
xlat
xor
jno
push
jae
push
cmp
aaa
test
and
stos
mov
inc
out
or
bound
roll
or
cmp
cltd
imul
mov
sub
sbb
mov
lcall
dec
inc
popf
mov
lds
cmp
loope
xor
mov
cmpb
xor
inc
fistps
xor
ds
repz
sub
push
dec
fisubs
add
fwait
sub
cli
push
add
inc
fcomps
sbb
dec
sub
jb
popf
dec
in
mov
dec
jp
repnz
stc
fs
scas
jp
out
cli
into
scas
lock
iret
test
lahf
lock
xchg
loope
stos
leave
mov
ret
cld
lods
add
dec
test
cmpsl
repz
dec
xchg
in
inc
sarl
lds
adcl
cwtl
fistpll
inc
iret
push
mov
rclb
adc
cld
xor
jae
pop
addr16
lahf
lea
cmp
ficoml
push
adc
movsb
je
lods
xlat
inc
sub
in
inc
inc
into
add
sub
mov
xchg
inc
and
sbb
mov
push
icebp
cmpsl
add
mov
mov
xor
ja
jns
jl
jecxz
shr
xchg
dec
andl
fsubrl
and
mov
out
scas
iret
mov
mov
mov
sub
shr
out
sub
mov
inc
mov
sbb
xchg
push
sub
rorb
inc
mov
cmp
lock
mov
in
call
dec
jp
xchg
sbb
clc
pushf
out
xor
xchg
int3
dec
mov
iret
jl
inc
gs
jecxz
sub
dec
adc
lea
cld
mov
sub
jnp
xlat
jmp
pop
dec
into
jmp
aad
push
xor
mov
push
das
inc
test
and
mov
out
setae
push
cli
mov
push
out
xor
iret
jg
cmp
adc
or
shr
imul
cmp
push
into
mov
adc
sub
idivl
dec
in
mov
enter
cltd
lret
insb
nop
sub
mov
xchg
inc
cmp
insl
mov
jns
lret
sbb
aad
and
enter
popa
es
rorl
out
test
lahf
stos
xchg
repz
and
cs
movntq
mov
sbb
jne
mov
test
test
xchg
sub
mov
inc
mov
and
aaa
ljmp
aaa
push
imul
mov
test
pop
and
test
imulb
pop
mov
add
daa
aam
pop
jmp
add
ret
repz
add
in
iret
cltd
or
jb
push
jge
rcrl
invd
in
mov
xor
mov
rol
pushf
push
mov
push
inc
add
shlb
int3
stc
and
xor
int
out
pushf
jmp
dec
rcll
insl
cmpsb
in
call
sti
cmp
xchg
jne
mov
xlat
mov
mov
xchg
movsb
pushf
pop
fwait
cmp
sarl
dec
lahf
cli
cmp
and
mov
out
mov
xlat
mov
and
testb
aas
pop
jp
std
ret
call
das
mov
or
sbb
outsb
in
out
in
dec
jo
std
mov
lcall
jns
push
pop
sbb
ret
jle
loope
and
sub
cmp
aad
clc
aas
xchg
dec
or
in
cmpsb
jp
fsubl
xchg
jae
nop
dec
mov
push
cltd
mov
push
test
xor
inc
pop
test
jp
stc
hlt
sub
call
and
lods
fdivrs
dec
imul
js
adc
adc
pop
cltd
inc
add
jmp
cmc
mov
and
lea
mov
test
out
push
ret
adc
nop
arpl
rorb
push
xor
inc
test
dec
daa
daa
cltd
int3
data16
add
addr16
aas
pop
arpl
pop
cld
shlb
push
in
dec
sbb
daa
push
shlb
loope
rorl
fdivl
imul
repz
iret
cmpsb
xor
scas
xchg
iret
cmpl
mov
test
setae
pop
sbb
int3
int
rcr
adc
cld
adc
xchg
mov
jno
lret
dec
fiaddl
sub
cs
cmp
jecxz
jno
filds
jbe
mov
ss
cmp
inc
mov
ret
mov
pop
xor
test
push
movsl
lock
fistpll
popf
rcll
add
xchg
mov
pop
popf
mov
fadds
dec
lock
aam
cmp
cmp
jbe
jmp
dec
mov
insl
cmpsl
pop
inc
pushf
arpl
push
push
or
adc
stc
inc
adc
mov
push
inc
in
lock
inc
mov
sti
jecxz
fisubrs
sub
xchg
push
mov
inc
pop
aas
int3
lock
xor
or
dec
lods
jl
andl
inc
mov
mov
add
cmp
dec
dec
scas
cmp
mov
inc
xor
sub
out
fisubrl
pop
cmpsl
jno
nop
stc
inc
push
mov
add
mov
push
adc
icebp
jecxz
cltd
push
sar
aas
test
cmp
jecxz
and
mov
mov
lods
inc
sbb
test
addr16
outsl
add
hlt
push
cmp
jne
mov
outsb
mov
pop
mov
scas
pop
stos
in
stos
push
lods
xchg
xor
mov
sbb
and
jmp
dec
adc
insb
test
jge
inc
out
push
ds
scas
les
shll
jg
sti
andb
mov
jbe
pop
movsl
inc
enter
push
mov
xor
aam
popl
xor
xor
xor
push
subl
imul
mov
test
scas
mov
xor
repz
fdivrl
data16
pop
xor
loop
sbb
je
fists
xor
in
lret
pop
pop
movsl
cmp
pusha
jge
and
jle
lcall
imul
dec
push
xchg
mov
pusha
pop
xchg
mov
push
insb
out
insl
out
leave
pop
inc
fs
fld
mov
add
pop
test
and
mov
fidivs
ja
lret
sub
jbe
sub
sub
addr16
roll
xchg
ljmp
inc
mov
cmp
data16
andl
mov
dec
test
es
call
sbb
movsb
icebp
or
jg
or
icebp
or
cmpsl
jb
sub
rcrb
mov
out
xchg
or
es
inc
ficompl
inc
xor
pushf
xor
addb
add
adc
add
cmpsl
mulb
sbb
lcall
loope
or
out
dec
lahf
fstpt
pop
int3
clc
test
mov
mov
push
push
dec
sub
shrb
sub
mov
inc
add
adc
dec
fisttps
lcall
inc
mov
mov
or
int3
scas
pop
xchg
xor
add
cmpsb
sub
mov
movaps
cmp
jl
jnp
jno
test
push
cmpsl
inc
shlb
cmpsl
or
outsb
popa
adc
mov
ja
loop
jmp
call
icebp
xor
rcrl
daa
lcall
insb
loopne
mov
xor
call
pop
cld
stos
test
int3
test
in
jmp
call
arpl
or
sub
xchg
aas
fwait
scas
loopne
pop
mov
mov
test
pop
add
addr16
mov
mov
xchg
xor
test
cmp
sbb
cmp
outsb
scas
jle
mov
ljmp
cmp
cli
ss
fdivrp
int3
adc
pop
ljmp
out
sbb
cmpsl
mov
ret
sti
les
pop
sahf
inc
push
pop
xchg
fldt
int
mov
xorb
popf
rol
dec
inc
insl
divl
std
arpl
nop
les
sbb
jb
repz
cmp
in
in
mov
cmc
insb
out
jge
cltd
out
outsl
xchg
fldenv
insb
in
cmpsb
call
jmp
jmp
pusha
jns
xchg
out
dec
jmp
dec
push
shrb
out
les
jp
aas
lcall
daa
inc
fdivr
adc
and
and
out
mov
mov
mov
xchg
cs
and
mov
add
fidivs
push
cmpsl
sub
push
ficomps
addl
lret
sub
mov
xchg
pusha
sahf
jecxz
dec
push
test
sub
rorb
pop
sbb
aaa
fstpt
stos
das
in
jl
stos
mov
add
add
dec
shl
sbb
out
xchg
ret
jb
xchg
inc
mov
int
mov
pop
nop
inc
mov
imul
lock
push
rcrl
ret
jno
fiaddl
pop
mov
nop
pop
pop
and
cmpsl
xor
cld
fcomp
cmp
sahf
push
mov
add
and
or
sub
pop
dec
stc
lods
and
mov
mov
adc
cmp
dec
mov
mov
or
and
mov
cltd
dec
cmpl
lahf
cld
ror
adc
outsb
scas
in
jo
push
fsubs
or
fwait
cs
or
outsl
or
or
adc
mov
inc
mov
pusha
call
mov
jecxz
les
rcrl
stc
dec
mov
jge
ficompl
cwtl
lcall
test
jne,pt
push
add
outsl
inc
dec
mov
lahf
psubsw
mov
pusha
ja
das
adc
das
dec
enter
es
jl
cmc
lds
pop
dec
outsb
sahf
data16
nop
add
sahf
push
xchg
inc
xchg
add
add
outsl
loopne
fwait
mov
mov
in
pop
and
and
ja
cltd
and
mov
mov
xlat
pop
lea
pushf
out
mov
push
cmpsl
inc
add
mov
leave
push
dec
popa
sahf
xchg
xchg
in
jns
stos
xchg
jne
mov
enter
pop
sbb
scas
fprem1
dec
add
cmp
mov
ss
jnp
out
dec
sub
jp
int
loop
outsl
fsubrs
push
jl
jmp
xlat
jg
imul
add
xchg
mov
jmp
aaa
ja
stos
add
mov
add
xor
lods
jae
or
cli
push
mov
mov
imul
cmpsl
adc
xor
xor
orb
out
sub
loop
rolb
pop
add
xchg
jmp
or
stos
push
pop
pop
inc
std
lods
jb
addb
pop
lds
or
push
inc
or
ret
mov
enter
mov
xor
mov
lahf
fidivl
xor
sub
pusha
bound
nop
pop
lret
xchg
sti
cmpsb
inc
shll
pop
sub
inc
and
sub
lret
aad
lcall
aaa
mov
xor
adcl
cmpb
incb
mov
test
int3
add
sub
dec
pusha
lds
sti
xchg
loope
cmc
cli
xor
cmp
dec
out
jmp
pushf
inc
rorb
repz
add
push
jle
mov
lret
sahf
pop
lods
mov
and
mov
inc
das
xor
mov
push
mov
das
and
pop
mov
cmp
je
mov
inc
pop
enter
mov
jb
insb
ljmp
scas
cmp
pop
dec
in
mov
loopne
pop
inc
fwait
gs
sbb
fmull
fsubrp
mov
out
pop
pop
inc
stos
push
sub
or
lock
xchg
je
cmpsb
icebp
mov
aas
call
sub
cli
inc
int
add
std
jne
dec
in
xchg
pop
jns
inc
fstl
ss
outsb
push
push
jg
pop
mov
lea
test
bswap
in
lods
mov
movsl
repnz
addl
sub
jno
inc
adc
pop
add
movsl
into
mov
inc
cmp
in
lret
or
push
jmp
and
out
jne
jp
cwtl
cmp
clc
mov
pop
mov
addr16
adc
inc
xchg
std
pop
cmpsb
cwtl
jle
xor
adc
pop
and
in
pushf
xor
imulb
push
subb
stc
rcll
dec
lods
insl
loop
add
ds
dec
lods
add
xchg
sarl
jne
imul
push
lea
inc
xorb
iret
push
xor
std
and
mov
inc
push
or
jae
mov
add
lret
nop
lds
sub
dec
mov
xchg
push
shrl
push
xor
into
pop
repz
push
movsb
mov
outsl
pop
mov
xchg
jnp
jp
addr16
mov
stos
pusha
push
repnz
lret
aam
roll
iret
lea
add
push
or
push
cwtl
sbb
fnstcw
ja
out
and
jge
inc
dec
cmp
mov
ja
arpl
jmp
sbb
mov
xor
in
jae
and
scas
addr16
jg
in
das
cmp
push
cld
pop
mov
lods
cmp
fldt
cmp
jnp
mov
shrb
test
test
test
sub
ds
cld
push
or
and
ljmp
mov
sbb
sub
inc
fdiv
or
and
mov
xor
pop
mov
push
popf
push
mov
fs
adc
ret
adc
fdivrl
mov
shlb
fcoml
test
pushl
push
lds
fwait
dec
add
inc
dec
stc
xchg
iret
enter
jnp
lahf
sub
pop
dec
sub
jo
std
out
xor
in
mov
inc
fistl
pop
loop
push
push
lock
xor
inc
jecxz
jo
aas
push
cld
scas
jb
aam
xor
xchg
flds
outsl
xchg
pop
xchg
xchg
out
jo
fdiv
rorb
jg
out
ret
dec
shl
lret
cmp
lret
dec
imul
pop
xchg
cmovns
adc
push
cmp
scas
jae
mov
gs
pop
les
inc
aam
test
rorb
daa
jp
popf
je
push
repnz
fnstcw
xchg
aaa
in
nop
adc
jb
and
and
into
test
outsb
sbb
inc
stos
xchg
je
stc
stos
popf
jb
insl
int
mov
clc
in
les
xor
jae
push
push
fsts
icebp
in
pop
jb
cltd
mov
pop
lods
arpl
add
cmp
ret
popa
jae
sar
loop
insb
inc
sbb
mov
jo
sub
lret
int
pop
inc
fisttpl
sub
push
int
jge
lods
adcb
ljmp
mov
sbbl
addl
in
inc
adcb
sbb
jg
mov
mov
aaa
sbb
push
and
mov
adc
mov
mov
repnz
loop
shlw
mov
inc
loope
fistpll
das
pop
sahf
mov
popf
sub
mov
scas
mov
mov
add
lods
pusha
xchg
inc
cmp
mov
outsb
std
addr16
test
push
jno
pop
std
insl
push
and
mov
and
mov
or
or
and
or
dec
push
xor
lahf
xor
jecxz
mov
fwait
in
cltd
push
outsb
jle
xor
push
sub
rcrl
adc
pop
or
jnp
jecxz
cmp
pop
int3
lods
fwait
lahf
shl
dec
xor
jmp
test
jmp
arpl
ret
mov
out
inc
ljmp
mov
cmp
fstps
test
mov
xor
loop
jbe
outsl
sub
cmpsb
dec
sbb
mov
call
rclb
add
add
mov
mov
dec
test
xchg
jecxz
jns
mov
mov
ljmp
sub
mov
pop
or
je
fdivl
xor
xor
pop
pop
cli
test
mov
jp
xor
mov
inc
nop
cmpsb
lret
ret
mov
dec
sbb
fnstcw
add
rorb
les
fistps
test
pop
arpl
cmp
stos
aad
adc
loope
icebp
sbb
arpl
jge
cwtl
pop
mov
push
xchg
sbb
hlt
dec
in
push
inc
xchg
adc
addb
add
sub
hlt
pop
shrb
push
add
in
pop
leave
cmpsb
mov
mov
addb
nop
sub
push
test
enter
and
sbb
inc
lods
xlat
test
out
add
aaa
inc
push
xchg
jno
imul
push
int3
inc
imul
mov
dec
push
mov
push
outsb
xor
and
movsb
std
daa
in
leave
leave
push
mov
popf
repz
call
rolb
jg
push
and
lods
push
mov
sbb
push
into
pop
scas
sbb
cmpsb
repz
mov
dec
test
mov
pop
mov
pop
testb
or
xor
pop
daa
sub
je
pop
xchg
orb
fstpt
out
daa
lahf
in
lods
fcmove
xor
push
stos
inc
cli
dec
lods
loopne
adc
push
xorl
inc
imul
outsb
sbb
mov
jmp
add
ljmp
das
je
mov
cli
test
mov
xor
cld
fs
sbb
inc
dec
sbb
loope
add
pop
popf
iret
xchg
lock
xor
enter
jl
out
enter
dec
das
sub
fcompl
std
or
mov
aaa
sbb
sbb
mov
mov
push
mov
lea
fstps
in
fisubrs
aaa
pop
pop
pushw
cli
pop
loop
stc
test
mov
dec
scas
xor
int
jl
pop
add
xchg
int
push
jnp
pushf
into
shll
and
push
adc
in
adc
bound
out
jmp
adc
and
adc
test
adc
pop
xchg
ret
add
push
xor
ficoms
pop
mov
push
xor
inc
sub
mov
adc
lret
pop
mov
inc
pusha
jecxz
incl
jle,pn
xchg
and
or
cmp
mov
fs
int3
inc
ljmp
xchg
cld
dec
jp
mov
fnstcw
das
push
push
push
cmpb
cmc
rcll
jns
add
mov
leave
inc
enter
adc
js
cli
xlat
pop
jae
in
aaa
hlt
mov
arpl
cmp
sbb
hlt
stos
fs
or
ds
mov
imull
cltd
jg
cmpsl
scas
sbb
xchg
mov
dec
testb
orb
sbb
cmpsl
sub
pop
repnz
addr16
mov
stc
lea
jbe
xor
xor
add
sub
add
jp
pushf
lock
test
push
add
pusha
xchg
test
sbb
sub
fcomi
sahf
xchg
insb
jno
and
leave
int
mov
notb
fwait
dec
adc
daa
sub
imul
fcmove
clc
mov
imul
jo
inc
sbb
sbb
std
pop
test
and
cmc
movsl
lret
sbb
sarl
jns
mov
in
test
imul
sbb
inc
fidivrs
sbb
add
clc
push
andl
add
push
lahf
jb
mov
lods
aam
xor
jl
fstpl
in
sub
xor
inc
push
shrl
adc
xchg
adc
xchg
add
js
js
jno
cmc
mov
jnp
adc
stos
pop
scas
xor
test
cmp
in
popa
js
loope
in
in
cltd
or
dec
push
sbb
or
scas
popa
aam
ret
js
sbb
ret
loope
sbb
mov
sahf
mov
adc
and
inc
daa
imul
jbe
loope
dec
xlat
and
mov
mov
mov
push
call
push
pop
inc
push
addr16
insb
movsl
mov
mov
xchg
ljmp
addr16
mov
sub
lahf
clc
and
adc
fucomp
mov
in
inc
dec
and
sub
mov
aam
std
in
xchg
sbb
xchg
mov
cmp
fcmovnb
sahf
out
adc
xor
adc
inc
or
cmpsb
push
bound
cmp
cmp
mov
popa
pop
sub
xor
data16
dec
push
pop
mov
push
add
je
push
and
push
pop
sbb
lcall
popf
mov
aas
ja
and
dec
push
xchg
lock
movsb
mov
or
adc
stc
sub
sbbb
sub
push
jg
popa
or
lahf
in
xchg
rcrl
stc
pop
sbb
xor
dec
or
aad
addr16
gs
cmp
sahf
es
push
dec
jl
scas
js
test
cmp
sbb
mov
sbb
mov
xor
stos
xor
add
mov
incl
cmp
cli
call
sub
xor
add
push
or
and
cld
stos
add
test
ljmp
int3
jmp
rorl
cwtl
lods
dec
movsb
mov
jbe
mov
jbe
rclb
ljmp
mov
je
dec
inc
fdivrl
mov
fsubp
repz
mov
fsubl
xchg
inc
movsb
dec
and
mov
mov
add
push
mov
mov
mov
adc
cmc
insb
call
outsl
arpl
aam
test
fsubrl
std
popa
or
shl
jl
pop
add
mov
xor
roll
push
fiaddl
roll
dec
int3
ficomps
pop
sub
mov
sub
lock
cltd
sarb
fsubrl
xchg
push
mov
fwait
call
jae
fildll
xchg
movb
xor
je
mov
in
sub
cmc
mov
inc
add
gs
add
push
lret
sub
cli
hlt
lods
test
lcall
dec
add
jo
sahf
jmp
into
ror
movsb
xor
lahf
scas
clc
sbbb
push
pop
sbb
lret
clc
call
stos
mov
pop
das
mov
cmp
stos
fldl
addr16
push
insb
cli
lea
fcoms
xchg
add
hlt
lret
pop
fstl
or
cli
or
jg
adc
int3
or
adc
loopne
sbb
adc
jo
mov
mov
dec
push
mov
adc
push
cmp
inc
scas
sbb
push
pop
mov
out
xchg
loopne
rcrl
jb
and
dec
cmp
aam
icebp
inc
sahf
mov
movsb
iret
je
jmp
sub
xchg
aaa
adc
enter
les
rclb
int3
loop
cmp
sbbb
call
mov
fwait
int
notl
lahf
pop
sub
mov
xchg
lods
cld
mov
dec
pop
lahf
nop
dec
sti
out
xchg
outsl
std
cmpsl
jae
call
inc
pushf
mov
bound
aas
push
jg
sub
inc
int3
and
fs
out
nop
xchg
mov
lahf
sbb
dec
ret
cmpsl
bound
insb
pop
test
inc
jb
in
jo
daa
add
insb
ret
jbe
xchg
inc
jns
pop
rorb
pop
mov
xchg
das
out
mov
sarb
mov
repnz
pop
inc
adc
sub
mov
add
jnp
jb
xchg
loop
cmp
push
loope
icebp
les
mov
stc
pop
leave
cwtl
and
adcl
cmp
sbb
stc
mov
neg
int
jmp
inc
stos
adc
bound
push
sbb
mov
adc
ja
out
ss
out
push
std
jg
pop
iret
in
mov
xchg
fwait
xor
or
lret
out
and
and
sbbl
xor
mov
mov
sahf
aas
push
dec
in
push
cmc
and
lods
jae
or
inc
mov
sbb
sbb
mov
je
sbb
xor
add
and
and
adc
or
fstpl
popf
xchg
adcb
pusha
addb
pop
or
inc
ret
push
fsubl
fsub
nop
add
cmp
or
out
mov
pxor
ja
mov
enter
jg
jns
ret
cmp
imul
pop
stc
xor
add
mov
js
pop
sbb
pushf
mov
and
ja
fcoms
mov
mov
pop
cli
mov
rcrb
mov
mov
xorb
adc
mov
stc
push
push
mov
int
loopne
cmp
leave
or
xorl
fcom
inc
ret
int3
pop
push
movl
or
inc
cwtl
and
pop
fildl
leave
js
lods
add
jo
inc
enter
dec
test
je
jno
shl
pop
adc
xor
xor
pop
mov
push
xchg
lods
xlat
jne
pop
mov
movzwl
leave
das
arpl
test
js
cmp
mov
ds
pop
in
movsb
sub
pop
ljmp
xchg
or
or
sub
clc
xchg
xchg
mov
aaa
pop
push
and
ss
mov
sub
out
and
inc
sarl
xchg
cltd
pop
out
subl
pop
das
mov
cmc
clc
daa
mov
cmp
jno
fwait
xorb
push
rcrb
insl
cltd
int
sbb
fistpll
daa
push
push
mov
notb
lret
leave
pop
mov
push
rolb
pop
jle
jno
mov
out
pop
stos
or
cmp
jno
adc
jo
sub
or
lret
aas
cmc
jbe
mov
push
aaa
inc
push
cmp
mov
sbb
cs
lods
repz
movsl
xor
fucomi
push
inc
cmp
mov
dec
xor
lcall
aam
das
xchg
sub
or
mov
pop
cmp
out
add
rcll
out
xor
out
mov
popa
jb
xlat
sahf
cld
ss
int3
jne
xchg
cmp
mov
cmp
cmp
mov
mov
mov
add
hlt
arpl
mov
cmp
sbb
repnz
pusha
cli
out
sub
jp
sbb
pop
test
mov
pop
insl
ds
mov
dec
arpl
mov
mov
xor
xchg
jge
sarl
out
stc
adc
shll
pushaw
nop
push
les
pop
adc
lds
pop
ffreep
xchg
mov
outsb
jne
jb
push
lds
aaa
and
mov
jo
xchg
test
fmull
mov
push
dec
cmp
loopne
mov
outsb
or
das
xlat
jl
pop
fiadds
dec
mov
fld1
repz
lods
stc
in
jmp
std
mov
or
and
stc
test
pop
and
ss
lahf
rorl
adc
in
cltd
xchg
pop
out
sbb
cmp
mov
sti
out
mov
pop
and
lea
bound
xchg
mov
aaa
dec
cld
data16
xor
ja
mov
ss
push
lock
pop
mov
cli
inc
pop
ret
loopne
cmp
jbe
sbb
push
xchg
sub
ljmp
test
in
cmpsl
cmp
pop
lea
xchg
enter
dec
jo
sti
fnsave
mov
je
inc
insb
and
jge
sti
inc
in
xchg
ret
int3
inc
add
idivl
js
ret
out
pushf
mulb
out
fs
jg
lret
mov
fs
repz
fcmovbe
adc
sbb
dec
push
sbb
xchg
popa
ret
cwtl
push
or
or
icebp
cmp
loope
iret
js
mov
push
stos
add
leave
enter
aas
dec
jno
cmpsb
mov
xchg
dec
cmp
subb
jge
adc
sahf
xchg
sbb
and
pop
sbb
pop
inc
jl
leave
cmp
mov
loop
adc
pop
sti
and
push
xchg
cmp
mov
mov
call
or
in
loope
mov
cmp
or
add
lahf
cld
mov
add
enter
testl
mov
adc
cwtl
pop
jge
ljmp
sbb
test
ljmp
outsl
mov
mov
int3
jns
cmp
mov
sub
mov
roll
inc
sbb
mov
sbb
push
jbe
push
aaa
fimuls
sbb
push
shrl
ret
mov
inc
out
rcr
shlb
mov
sbb
jo
iret
push
je
outsl
cmp
rcll
mov
cmp
pop
sbb
push
out
notl
aaa
enter
adc
cld
mov
in
cmp
xor
aam
adc
or
push
pop
xor
neg
hlt
push
ret
add
push
dec
sbb
arpl
or
push
imul
lods
hlt
fistl
or
data16
in
shl
lds
fimull
jae
ljmp
shrb
xor
shl
decl
sub
lods
jmp
mov
mov
push
outsl
fs
pop
int3
std
imul
test
mov
push
test
cwtl
test
dec
jecxz
iret
jg
sbb
fldt
adc
sub
and
fbld
and
test
aaa
rdmsr
pop
mov
out
mov
mov
mov
jmp
mov
and
lea
push
mov
dec
mov
mov
data16
push
xchg
stc
sub
shll
js
mov
ds
popa
imul
addr16
ja
inc
stos
dec
xchg
ljmp
push
std
cmc
xor
xchg
loope
out
dec
scas
cmc
xchg
mov
outsl
dec
mov
jmp
adc
stos
insb
dec
pop
dec
scas
adc
gs
dec
les
fs
aam
add
or
scas
icebp
mov
sbb
sti
jle
lret
mov
jmp
mov
test
popf
stc
fwait
sub
pop
js
iret
sar
xchg
leave
fisubrs
or
sbb
lods
sbb
fisttpll
pop
fs
mov
xor
test
mov
add
scas
cmp
andb
and
push
in
adc
dec
daa
out
imul
xor
imul
xor
sub
mov
stos
test
push
loopne
test
hlt
xchg
loope
gs
loope
or
pop
cmp
addb
mov
pop
xchg
test
mov
loopne
fcmovne
sbb
xor
mov
sub
mov
int
hlt
lds
mov
mov
jo
imul
lods
or
hlt
jmp
sub
enter
cltd
pop
xor
lcall
pop
stc
fisubrl
mov
lret
test
mov
icebp
cwtl
aam
xchg
imul
push
sahf
cmp
icebp
add
jae
mov
adc
mov
popf
int
fidivrs
sbb
dec
push
inc
mov
cmp
add
fimuls
gs
shlb
lret
fwait
in
inc
fwait
adc
sub
lret
cmc
fwait
or
cmpsb
inc
ja
stos
xchg
divb
inc
jecxz
pop
sbb
dec
inc
pop
and
inc
movsl
xchg
pop
lret
mov
push
pop
mov
pop
add
pop
mov
shr
push
inc
mov
add
add
fnsave
push
bound
push
fldenv
test
or
into
enter
inc
xchg
push
adc
imul
mov
jae
push
or
mov
popa
lock
popa
dec
es
pop
pushf
test
cmp
adc
push
push
ret
int
out
fsubrl
mov
jnp
dec
cld
jl
or
pop
mov
add
negl
dec
pusha
mov
sub
or
adc
or
repnz
pop
je
ja
mov
and
inc
inc
enter
push
or
jne
sbb
pop
dec
int
cltd
pop
movsb
lock
adc
mull
in
mov
loope
jecxz
push
loopne
les
mov
lods
push
repnz
mov
jbe
cltd
jp
jae
icebp
or
jg
aad
mov
pop
les
jp
iret
ljmp
fists
cmpsb
mov
loop
jae
test
lcall
inc
test
scas
add
ss
pushf
xor
cli
add
jp
insb
jle
add
mov
ja
xchg
xlat
inc
sub
fadds
fsubrl
mov
jbe
mov
push
ds
lock
clc
flds
imul
out
lods
prefetch
imul
lcall
in
in
std
cmp
cmc
fstpt
xor
xchg
push
dec
test
lods
ret
pop
cli
inc
inc
mov
mov
fimuls
test
jg
push
and
inc
add
scas
push
cld
mov
sbb
xlat
and
int
cmp
mov
xchg
scas
push
idiv
ds
and
movsl
aas
aam
clc
and
inc
or
pushf
pop
iret
outsl
pop
aam
jmp
pop
leave
pop
xchg
repnz
pusha
add
mov
push
mov
or
or
mov
popa
mov
leave
jbe
mov
adc
mov
shlb
les
mov
loop
and
adc
xchg
cltd
fwait
stos
pop
push
push
pushf
jle
lods
shll
aad
push
or
sub
rcl
outsb
and
aad
xchg
jge
ds
inc
inc
outsb
push
js
ljmp
ds
sub
outsl
movsl
inc
orb
and
movaps
mov
lret
movb
inc
loopne
push
clc
js
loope
sahf
xor
mov
xlat
subb
cld
and
out
mov
sub
repz
cmc
ret
dec
into
and
cmc
inc
fisttpl
push
ret
xchg
sub
rcll
mov
jmp
icebp
popa
mov
and
test
cli
aad
iret
push
sarl
dec
inc
sub
lcall
xchg
inc
mov
lcall
test
and
push
cli
jbe
adc
jb
arpl
cltd
mov
xor
jns
mov
add
rcrb
vpackssdw
dec
cld
add
mov
rolb
cmp
push
sub
inc
imul
pop
test
cltd
cmp
mov
out
add
and
jbe
cmp
shl
cmpl
and
pop
cmc
pop
jl
sub
out
cmpsb
adc
int3
or
adc
jno
push
nopl
mov
dec
adc
subb
out
mov
mov
ss
xchg
andl
jae
push
jle
inc
fsubrs
jmp
scas
bound
push
jae
clc
mov
and
out
lea
dec
fcom
jnp
and
ret
sbb
or
popa
inc
repnz
sub
movsb
sbb
call
out
ret
arpl
mov
xor
add
jne
repnz
and
cltd
pop
xor
push
test
lock
in
nop
test
and
xchg
cld
jge
add
fcoml
sbb
leave
fidivrl
inc
hlt
ss
dec
roll
mov
and
scas
movsb
xchg
push
pop
cmp
lret
data16
inc
dec
dec
add
fidivl
jge
inc
inc
popa
inc
iret
jecxz
stc
std
or
xor
sbb
jne
movsb
cli
lahf
dec
and
cmc
rcll
fnstsw
ds
int3
pop
mov
shll
stc
adc
sub
shl
into
stos
xchg
testb
test
addr16
test
pop
scas
xchg
ljmp
pop
pop
icebp
jne,pt
js
jge
adc
dec
aam
test
aas
iret
pushf
cmp
imul
sub
scas
pop
into
cld
push
dec
movsl
push
imul
das
mov
mov
xchg
and
insl
fs
jno
inc
pusha
out
inc
push
or
int
mov
jne
sti
adc
pop
fdivp
mov
mov
mov
leave
jecxz
popf
fiaddl
ret
xchg
test
xor
out
mov
sbb
ret
in
inc
and
and
push
stos
adc
aad
aad
addb
inc
aam
call
dec
pop
aam
push
mov
repz
add
jo
cmp
call
ret
mov
or
jmp
test
or
push
shlb
fmuls
add
inc
lods
adc
mov
and
pop
push
mov
add
inc
xchg
lds
cltd
push
xor
add
cmp
and
shlb
xor
out
jge
xor
lds
repnz
xchg
fdivs
daa
icebp
cld
pusha
mov
test
dec
and
ja
mov
mov
popa
add
aam
iret
clc
push
mov
mov
rorb
mov
cmp
clc
mov
setbe
sub
aas
sub
and
out
mov
daa
iretw
mov
push
mov
mov
aas
dec
mov
hlt
mov
push
mov
icebp
push
bound
mov
and
das
xchg
mov
dec
stc
jg
fidivs
imul
movsb
loopne
test
pop
aas
lds
inc
loop
test
aaa
inc
xchg
rclb
xchg
dec
dec
pop
mov
imul
dec
aam
mov
pop
cld
loope
pop
call
xchg
jbe
and
xchg
mov
or
adc
jae
mov
adc
cli
adc
inc
ret
das
adc
lret
ds
outsl
jno
inc
inc
inc
iret
pop
stc
hlt
sub
push
jl
das
outsb
pop
xlat
scas
sbb
loop
mov
dec
xchg
test
fcmovnb
mov
dec
outsl
mulps
ffree
xor
jb
jecxz
mov
push
cmp
out
mov
jmp
mov
fdivr
pop
repz
xor
or
mov
mov
mov
out
scas
sahf
cmp
aaa
push
and
add
xchg
sbbl
mull
std
xchg
jns
ret
xlat
pop
xchg
jb
mov
cmp
and
int
int
fdivrl
xchg
lods
add
out
push
fcomip
jmp
orl
or
jae
mov
lock
fwait
nop
fidivl
jo
sub
ret
mov
leave
sub
clc
jnp
sbb
bound
popf
mov
inc
cmpsb
je
daa
int3
enter
inc
mov
pop
sbb
sub
subl
sbb
jg
test
push
mov
pop
cli
dec
ret
push
mov
mov
dec
test
mov
push
aam
push
adc
lock
push
lock
xchg
push
xor
imul
xchg
adc
jne
int3
loope
insb
mov
mov
or
sbb
push
push
xchg
mov
jge
push
push
sahf
mov
add
xchg
clc
pop
sahf
push
aas
ret
vandnpd
lahf
pop
adc
sbb
dec
fidivs
sbb
or
or
xchg
shll
lahf
rolb
jp
xlat
cmp
pop
push
stc
imul
jg
xchg
mov
jno
inc
jbe
jo
xchg
and
cmpsb
imul
pop
push
cli
mov
stos
or
mov
or
mov
inc
pop
inc
pop
xlat
mov
testb
xor
mov
push
es
cs
ja
or
imul
sbb
daa
sbb
push
mov
xor
sahf
pop
pop
add
scas
add
jl
adc
dec
cmpsb
lds
test
scas
jecxz
mov
rcrl
lret
xor
in
ss
stos
push
jnp
stc
push
and
daa
inc
adc
pop
pop
mov
repz
mov
clc
push
imulb
movsl
adc
inc
or
imul
aas
pop
inc
jne
fistl
push
jne
aam
inc
aas
mov
stos
xchg
repnz
aaa
dec
sar
mov
mov
adc
loop
aad
add
aas
dec
icebp
pusha
pop
pop
pop
in
ret
xchg
dec
ja
mov
add
jp
lods
jno
fwait
lret
sbb
vunpcklps
into
cmc
out
loope
jl
sub
sbb
mov
push
xor
pop
sub
fildl
lods
sub
call
testl
inc
lea
rorl
push
mov
pushf
rorb
data16
push
outsl
jmp
inc
lock
sbb
mov
mulb
jg
push
pushf
int
push
clc
inc
scas
pop
es
out
lock
div
stos
jnp
push
mov
lods
mov
loopne
jno
cmpb
push
adc
mov
mov
mov
pop
daa
cmpsl
imul
jns
jge
mull
stos
insl
or
ds
xor
adc
das
cmp
xor
aam
inc
int
mov
jg
js
pop
mov
add
sahf
fnstenv
inc
enter
enter
pop
xchg
push
out
xor
or
lods
bound
inc
mov
pop
stos
outsl
bound
pop
stos
xchg
jmp
mov
jle
pop
xor
movsl
mov
lods
outsl
add
inc
loop
stos
icebp
sub
inc
adc
mov
mov
ja
scas
aad
xor
mov
and
js
mov
or
mov
cmpsb
push
shll
out
outsb
sub
addr16
repnz
push
lcall
or
adc
push
xor
fs
mov
das
testb
inc
shl
mov
xchg
inc
jmp
repnz
mov
mov
and
js
mov
sbb
xor
idiv
in
jmp
imul
fsubrs
ror
push
addr16
outsl
sbb
jmp
shrb
inc
pop
inc
lods
inc
and
loopne
or
orl
add
push
jnp
jne
cli
dec
xchg
inc
dec
outsl
push
pop
mov
or
mov
sbb
aam
inc
test
cmp
adc
jp
fstpl
rcll
ret
lods
fildl
lcall
cmpsb
inc
hlt
or
xchg
ss
clc
push
cmpsb
out
and
and
push
pop
add
push
movsl
inc
mov
xor
pop
inc
nop
js
loopne
in
jle
push
sub
mov
jnp
and
arpl
test
in
hlt
pop
jnp
mov
jno
in
push
and
daa
lret
fdivs
mov
ss
jp
inc
dec
leave
add
add
mov
mov
cmpsb
xor
icebp
jle
mov
jge
xchg
sub
push
jb
inc
movsb
fiaddl
enter
add
push
cwtl
mov
test
ret
or
mov
mov
arpl
cld
cld
pushf
aad
subl
adc
adcb
shrl
jnp
push
loop
pop
rorl
xchg
sbb
mov
push
jmp
data16
cmpsb
out
mov
inc
adc
pop
inc
rol
cmp
pusha
push
mov
popf
jns
fdivr
into
stos
inc
sbb
mov
sbb
pusha
push
sti
and
ds
inc
lds
push
push
ret
es
jae
push
sub
xor
insb
pop
jge
popf
adc
xchg
cmp
scas
cmpsb
ss
jecxz
daa
outsb
das
pop
out
jb
out
mov
hlt
aas
ss
jge
xorb
pop
repz
fisubrl
in
adc
inc
jmp
mov
mov
xor
and
lahf
insl
scas
dec
add
pop
lret
mov
loope
and
xlat
lds
push
in
mov
stos
sbb
pushf
cs
int
fmulp
push
mov
mov
xor
xlat
sub
imul
divb
add
push
mov
mov
sbb
xor
dec
mov
adc
xor
fwait
out
and
enter
xchg
roll
cmp
fcomi
imul
push
pmullw
call
inc
hlt
inc
cmp
push
sbb
pushf
frstor
lea
xor
scas
scas
mov
cmp
shll
mov
xchg
pop
lods
push
mov
in
and
push
bound
aam
stc
fsubrl
cli
push
inc
flds
jo
nop
data16
inc
sarl
inc
es
enter
mov
inc
add
scas
sub
pop
stos
add
and
xor
gs
and
movsl
hlt
xchg
pop
lahf
and
adc
std
push
push
and
mov
mov
lcall
icebp
test
cs
loopne
inc
add
ss
dec
mov
sbb
push
vpunpckldq
rcrb
inc
repz
adc
sahf
add
push
jo
xchg
stos
add
in
scas
add
pop
pop
adc
inc
push
fisttpl
icebp
mov
adc
in
addb
cltd
lods
mov
lock
pop
jl
jg
lret
mov
pop
fwait
jp
xor
pop
pop
ret
out
push
ljmp
andb
xchg
iret
imul
in
in
pusha
outsl
bound
and
fidivrl
mov
push
psubq
xor
and
lds
aaa
sub
adc
lret
inc
mov
out
das
mov
mov
cld
iret
jb
adc
pop
orb
push
cmp
inc
rorl
push
ficoms
dec
lds
push
fs
inc
xor
lret
gs
dec
mov
adc
jl
ficompl
xlat
in
push
add
xchg
sbb
lcall
scas
cmp
movsb
ss
les
or
adc
orl
inc
stc
mov
out
xchg
pop
adc
push
fldcw
push
or
adc
aad
mov
jno
insl
pop
shll
dec
hlt
loopne
scas
mov
aad
fbld
mov
es
es
inc
pop
imul
pop
scas
mov
fstpt
lods
int3
cs
scas
fdivrs
cltd
aas
adc
in
push
fs
cmp
scas
jp
sbb
jmp
mov
enter
into
push
push
stc
jecxz
cmc
icebp
adc
xchg
jne
pop
imul
movsb
add
jnp
loope
sarb
les
pop
icebp
or
jnp
mov
mov
jnp
add
and
popf
sub
shrb
popa
sub
iret
jns
inc
cmp
jns
ljmp
int3
repz
jl
mov
sub
jle
jmp
push
xor
sub
data16
mov
loope
bound
ss
daa
cmpsb
imul
sbb
cli
int
inc
adc
cmp
jbe
out
mov
sub
sbb
iret
rolb
cmp
push
sub
dec
scas
rorl
sahf
cmpsl
sub
pop
lods
lcall
jmp
jle
js
mov
sub
and
inc
and
push
pop
xlat
mov
mov
lock
hlt
push
jmp
push
or
movsl
pop
lods
xlat
xchg
das
pusha
mov
cmp
mov
mov
cmpl
pop
pop
icebp
jo
mov
push
push
inc
jmp
jbe
xlat
or
push
or
loope
outsl
pop
aad
loop
outsl
lea
nop
mov
scas
scas
sub
into
int
mov
scas
push
push
cmc
xor
and
dec
and
mov
adc
xchg
inc
jp
lcall
mov
add
lods
push
mov
xchg
push
dec
lods
jbe
insb
sti
mov
out
sub
dec
in
xchg
bound
fidivrs
pop
out
or
jp
fisubs
mov
test
cmp
push
adc
cmpsl
cs
jle
dec
fabs
sbb
inc
stc
mov
popa
test
rorb
add
roll
jl
daa
xor
addb
fistl
shrl
and
pop
out
icebp
xchg
jmp
cmp
dec
pop
push
cli
int3
loopne
push
mov
xchg
imul
adc
cmpsb
mov
sub
pushf
push
lahf
push
pop
jmp
jns
and
rol
fldenv
fdivp
and
ret
subb
or
addr16
mov
test
cmp
fucomp
testl
mov
and
notrack
mov
fmull
xchg
mov
lds
mov
jae
nop
mov
inc
xor
sub
enter
adc
sbb
mov
loopne
jecxz
add
lret
mov
jbe
add
jnp
jl
shlb
test
in
insb
cmp
sarl
mov
aam
sub
movswl
movsb
and
arpl
ja
repnz
daa
repnz
imul
test
push
jbe
and
push
push
mov
ljmp
popa
lock
data16
sub
add
fcom
inc
xchg
xchg
xchg
pop
dec
faddp
in
stc
aas
mov
loopne
xchg
cmp
in
mov
cmpsb
inc
add
pop
neg
test
nop
sbb
or
xlat
sti
dec
insl
inc
cmp
adc
jle
lret
jb
add
add
push
in
adc
pmulhw
dec
push
xor
stc
jmp
stos
sarl
outsl
ret
jge
mov
lock
into
hlt
push
movsb
xorl
and
rclb
pop
cld
mov
xchg
or
in
pusha
xchg
sub
xchg
stos
sbb
xchg
cmc
loopne
cltd
xor
cmp
inc
or
dec
aaa
inc
aad
mov
push
arpl
add
jno
inc
mov
imul
idivl
fildl
push
and
test
movsl
pinsrw
adc
imul
loope
dec
fbstp
fcmovb
jecxz
jmp
ss
sti
mov
mov
xlat
jecxz
in
sti
enter
lahf
js
mov
jmp
xor
aad
into
push
pop
iret
mov
jne
aad
sbb
mov
xor
and
inc
mov
dec
scas
scas
pop
stos
pop
jno
adc
cld
arpl
stos
mov
mov
mov
lock
in
sbbl
jbe
jno
or
push
mov
adc
js
inc
or
jbe
lods
xchg
stos
adc
fidivrs
add
adc
lret
lret
or
mov
ds
fs
dec
lcall
jecxz
stos
sbb
cmc
or
xor
inc
xor
and
shrl
testb
or
push
out
push
jo
add
imul
ja
popf
jns
or
xor
sub
pop
popf
inc
push
aad
sub
pop
or
or
inc
xchg
and
push
push
jae
push
imul
loopne
out
mov
bound
loope
mulb
or
ret
fldcw
push
andb
push
dec
mov
cwtl
mov
push
or
out
das
into
xchg
lahf
xchg
xchg
cs
push
and
js
pushf
stos
sub
jb
xor
loop
cmpsl
mov
dec
fmul
xchg
cmp
int3
arpl
fisubl
scas
push
ret
imul
in
mov
int3
jnp
xchg
or
fsubl
ficomps
cmp
add
enter
sub
or
cmpsl
gs
mov
push
out
lds
aam
std
addl
dec
cltd
aaa
or
xlat
mov
or
pop
data16
mov
dec
xchg
mov
sbb
jmp
dec
andl
xchg
in
and
arpl
add
sbb
aaa
and
gs
cs
cwtl
orl
dec
cmpsl
add
xchg
cmp
push
fstpl
and
cwtl
mov
shrl
cmp
test
popa
lret
std
subl
or
ja
int
scas
push
insl
add
pusha
xor
aam
mov
imul
xchg
shr
cmp
xchg
and
lcall
imul
cli
test
enter
out
repz
sbb
pop
imul
cwtl
and
test
ss
mov
mov
ss
les
cmp
cmp
cmc
adc
jo
mov
sti
push
int
dec
xor
divb
inc
and
inc
in
outsl
cmc
je
xor
xor
iret
sbb
mov
push
int3
sbb
or
cmpsb
xchg
in
xor
lods
cmp
mov
outsb
cmp
dec
test
lods
inc
push
push
pusha
cmp
pushf
fsubs
xor
leave
lock
xorl
repz
xchg
push
add
adc
fidivl
repnz
cmpsl
add
and
sti
shlb
sbb
cs
xor
pmovmskb
into
into
lods
or
stc
adc
dec
xchg
adc
ret
ds
loope
adc
sub
jle
cmp
dec
dec
mov
pop
mov
and
pmulhw
or
and
aaa
inc
mov
sarb
fisttps
fidivl
sub
cmp
leave
cmp
add
mov
cmp
push
mov
push
aaa
popf
adc
fbld
popf
mov
mov
imul
jge
add
add
cltd
sub
or
xchg
pop
fwait
scas
cmpsb
sbb
cmp
dec
out
mov
add
in
into
inc
leave
sbbl
clc
cltd
test
pushf
leave
clc
xchg
icebp
xchg
inc
mov
ljmp
roll
jno
mov
cli
std
jo
das
pop
mov
iret
adc
call
or
mov
ss
daa
jo
shrl
inc
xor
jmp
dec
sbb
movsl
jmp
sbb
mov
pop
xchg
ror
fs
add
testb
insl
sahf
adc
fsubrp
clc
arpl
sub
mov
mov
xchg
cltd
xor
jne
shlb
leave
and
imulb
sub
arpl
dec
loop
insl
aaa
mov
lret
in
add
and
nop
xor
icebp
mov
les
mov
stos
mov
out
shlb
mov
mov
add
subb
stos
cmp
cmp
out
das
lahf
or
lock
or
inc
lret
insb
addb
shrl
push
xlat
inc
mov
sahf
inc
aam
sarb
lret
call
or
inc
push
push
pop
das
dec
pusha
dec
lods
add
notl
fldcw
js
cmp
popl
inc
lret
mov
lock
inc
into
mov
dec
movsb
mov
sub
mov
shlb
or
ja
xchg
hlt
mov
mov
fnsave
pop
lret
in
inc
lret
push
dec
or
mov
xlat
push
aad
inc
bound
aas
mov
xchg
ret
fistl
xor
xlat
outsl
or
mov
xorb
inc
cld
outsb
jg
mov
pop
das
cld
clc
movsb
sbb
push
loope
sub
jle
xchg
jle
xchg
adc
test
das
fimull
scas
sbb
mov
popf
mov
or
jmp
in
sti
sbb
pop
pop
jl
lea
cmp
data16
fildl
push
mov
or
lret
pop
hlt
in
and
nop
cld
push
insb
mov
pop
test
mov
jb
in
cld
inc
and
sbb
cmpl
fistl
push
cld
fcomps
xor
dec
xchg
in
aam
jns
jne
inc
xchg
dec
mov
adc
jnp
test
cmp
out
cmp
in
dec
lcall
mov
sbb
mov
insb
dec
push
rorb
iret
sub
sbb
mov
out
in
push
testb
das
xchg
mov
pop
and
and
imul
lcall
pop
mov
test
cmp
or
jae
mov
dec
xor
or
ljmp
lret
sub
xchg
and
dec
call
xor
push
loope
lcall
scas
or
push
je
test
cmc
ljmp
pop
jle
test
ljmp
repnz
mov
into
icebp
mov
loopne
clc
and
loope
inc
dec
push
adc
mov
pop
fmuls
cmp
ror
dec
cmp
out
jl
xorl
dec
imul
pop
sbb
daa
pop
xor
push
test
mov
repz
aam
repnz
gs
ljmp
sub
scas
roll
xlat
enter
inc
cmpsb
sub
lcall
xchg
dec
int
mov
cmp
cmp
js
mov
mov
outsb
jmp
and
loop
out
inc
out
jns
stos
or
adc
inc
add
sti
iret
aas
popf
xchg
sbb
mov
sub
lret
add
cmp
xor
push
fsub
mov
int3
lock
lcall
cmpsl
inc
fcompl
mov
sbb
or
jmp
sbb
adc
sbb
scas
aad
or
insb
imul
cmc
in
pop
call
sbb
repnz
ficoms
jle
and
push
pop
pop
or
int
inc
cli
mov
xor
mov
cmp
mov
sbb
adc
and
mov
or
xchg
aam
insl
sbb
push
sub
loopne
jge
xchg
jbe
jne
cmp
repz
sahf
andl
nop
call
cmp
jp
dec
fxch
jb
xchg
and
or
mov
xchg
jg,pn
jge
cmp
dec
push
adc
push
or
in
mov
icebp
inc
jle
push
mov
sbb
xchg
mov
cmp
push
leave
inc
frstor
adc
lods
cmpsl
das
cmp
push
mov
or
pop
mov
cmp
xchg
fs
xor
cmp
cli
pop
mov
sub
xchg
xor
sub
dec
test
cmp
cmp
fsts
pop
pop
push
leave
pop
adc
lods
es
add
fidivrl
shlb
push
inc
xchg
mov
aad
ss
add
fsubp
sub
push
sbb
adc
dec
fildl
ffree
xchg
stos
and
xor
push
outsl
adcb
cltd
ret
jmp
dec
xorb
shrl
cwtl
mov
insl
sbb
out
div
and
adc
cltd
test
fnstcw
js
inc
in
pushf
push
xor
mov
pop
test
in
ss
out
xor
mov
aad
aad
sbb
cs
jp
das
mov
jle
lahf
jns
fldl
or
or
cli
xor
or
imul
lret
js
nop
dec
pop
gs
xchg
or
jp
out
mov
nop
mov
shr
dec
ja
or
add
lock
adc
pop
les
xchg
repz
test
in
ja
sbb
or
fstp
cmp
push
jae
in
jb
add
mov
sbb
inc
icebp
ss
mov
jp
inc
cwtl
and
push
pop
ja
rcrl
and
push
sti
add
popf
jmp
in
shll
sub
pop
jns
fidivrl
arpl
sbb
adc
call
into
popf
mov
mov
xchg
cmc
lods
negb
jecxz
loopne
pushf
mov
xchg
xor
mov
loopne
mov
cmp
adc
jl
push
inc
mov
dec
and
jb
ror
insl
ljmp
cmc
fwait
cmp
sbb
icebp
shlb
sub
std
scas
arpl
jo
jl
sbb
enter
data16
mov
in
sub
inc
pop
adc
sarb
push
sbb
lock
enter
xchg
cmpsb
cld
pop
add
add
shrb
into
int3
inc
dec
call
dec
inc
cld
ss
xchg
pop
outsl
xchg
cmpl
lret
mov
ds
loopne
test
jae
stos
stos
push
sub
cmpb
loopne
aaa
mov
push
jns
out
jp
mov
jb
cmpb
xchg
std
pop
mov
jp
in
loope
lcall
sbb
sub
ret
mov
je
sbb
sub
xor
fldt
out
nop
xchg
adc
push
cld
sbb
cmp
mov
cltd
push
cmp
les
and
or
sti
or
xorl
push
test
sub
mov
ss
es
pop
xor
psubusw
mov
icebp
mov
xor
jb
pop
adc
mov
rclb
mov
clc
test
insb
xchg
sti
outsb
adc
push
pop
sub
lock
imul
cmp
mov
inc
ss
addb
int
inc
adcb
aam
notl
push
mov
js
ds
dec
jbe
lret
out
mov
mov
jp
push
dec
mov
jae
testl
adc
mov
or
inc
push
insl
fistpl
inc
fistps
xor
mov
sahf
adc
xor
lods
mov
shll
mov
and
std
pop
sub
push
inc
cmp
jno
jb
pop
aas
mov
fnstsw
push
fldt
mov
push
adc
sub
xchg
nop
fildl
sbb
cmc
fadd
add
insb
out
iret
mov
add
dec
jbe
fisubs
data16
dec
cmpsl
push
xor
fwait
mov
add
inc
cmc
ret
mov
addl
sbb
and
fidivrs
sbb
ja
hlt
loope
and
in
gs
fildl
movsl
out
fmuls
shl
push
fwait
adc
mov
pop
pop
nop
aas
mov
rolb
fimuls
cld
mov
lahf
aam
js
mov
sub
hlt
push
sbb
push
push
rcll
mul
dec
into
mov
mov
mov
adc
mov
pop
js
repnz
int3
cmc
jne
in
lcall
into
outsl
dec
loope
push
das
jg,pn
inc
jne
test
inc
fdivrs
ds
push
repz
in
shl
inc
popa
int
pushf
daa
inc
cwtl
outsb
fisubl
daa
sbb
in
in
pop
sbb
scas
pushf
push
scas
in
pop
adc
sub
xchg
jecxz
inc
leave
stos
shr
jae
je
movsb
gs
pop
aas
shlb
push
or
pop
ficoms
and
mov
sub
mov
cmp
push
shl
lds
rcl
cmpsl
inc
cmp
movsb
mov
or
test
int
je
xor
std
dec
ret
push
push
push
lea
mull
je
cmp
sbb
movsb
push
fldt
dec
cmpsl
and
icebp
repnz
adc
in
sub
push
pop
jle
sti
xor
repnz
loop
inc
clc
lods
mov
push
pop
outsb
jecxz
fldt
add
push
add
mov
inc
or
mov
push
lods
add
push
aaa
fsubs
imul
adc
test
test
in
xor
insb
leave
fistpll
sbb
jno
dec
mov
mov
aad
movsb
out
fsubs
flds
cmp
rorl
sbb
stos
and
cmp
jl
arpl
inc
mov
je
inc
jge
mov
loope
das
test
and
jnp
outsb
jne
mov
pop
js
and
jl
mov
jne
cmpsl
xchg
dec
add
test
xor
mul
mov
push
lock
cmp
rcrl
or
sub
sub
dec
inc
jo
push
xchg
pop
mov
push
aam
out
idivl
stos
gs
lea
int3
loopne
push
jno
stc
roll
push
call
test
nop
pop
mov
jp
clc
imul
xor
cwtl
and
enter
adc
mov
sbb
fdivl
mov
adc
and
xor
cmp
addb
pop
aaa
jae
aas
pop
imulb
into
ret
and
jle
xor
ret
mov
fidivrl
enter
push
inc
push
out
cmc
jbe
dec
add
and
out
lahf
xchg
lods
mov
in
add
push
cli
flds
pop
xor
loop
mov
xor
mov
lret
or
es
push
xchg
xor
cli
jle
pop
sbbl
out
fld
sub
loopne
negl
out
mov
jno
arpl
fadds
lea
xchg
in
testl
into
and
pop
lds
into
mov
cmp
mov
ljmp
push
and
push
in
addr16
pushl
lret
mov
in
adc
mov
pop
lahf
ror
jae
mov
push
jno
int
xorb
out
test
scas
arpl
xlat
adc
les
and
jge
mov
jne
dec
ret
lret
xchg
pop
mov
ds
lods
dec
lahf
stos
lahf
mov
dec
pop
mov
or
sbb
sbb
add
out
pop
xchg
xchg
aad
sub
or
flds
and
sub
mov
or
scas
push
pop
ds
xchg
xlat
sbb
adc
fs
ret
or
pusha
jne
shlb
std
push
sub
mov
add
xor
in
js
or
bound
movsb
push
fwait
and
insb
sub
jne
filds
push
testb
stos
aas
dec
adc
imul
stos
push
mov
fcmovnbe
stc
imul
dec
lea
pop
mov
lret
mov
dec
dec
cmp
jg
aaa
mov
jb
or
xchg
add
aam
xor
or
fwait
lcall
into
mov
inc
and
jno
mov
mov
aaa
dec
icebp
jns
mov
repz
divb
inc
adc
mov
ljmp
aas
jp
shrl
jl
ljmp
dec
test
or
lcall
jge
not
mov
jp
push
int
sbbb
dec
mov
sbb
pushl
out
adc
push
cmp
add
pop
cltd
add
adc
mov
js
mov
xor
inc
mov
fistl
cltd
shlb
subb
xlat
xchg
aad
cmp
xchg
adc
sbb
out
mov
lcall
push
or
pushf
inc
xchg
add
lods
fadds
inc
dec
arpl
cmp
mov
fbld
mov
les
jno
cmp
sti
movsb
push
je
or
pop
jo
sti
jg
inc
or
iret
or
hlt
pop
mov
fwait
jns
cld
cli
arpl
or
inc
inc
ds
push
pop
push
fs
inc
pop
data16
aaa
aad
cmc
fidivrl
jge
sub
dec
pop
mov
or
js
andb
ds
jo
pushf
sub
sub
test
sub
scas
adc
inc
gs
iret
sar
lock
lcall
in
sbb
push
xlat
sub
xlat
nop
mov
fsincos
pop
jns
testl
test
pop
imul
lods
sbbb
icebp
and
sbb
jbe
sbb
fcomps
xchg
mov
in
popa
divb
inc
push
dec
sub
xchg
lea
fidivrs
call
das
jbe
ffree
mov
xor
fs
mov
sub
rcr
mov
and
add
mov
js
cli
inc
mov
mov
orb
or
push
push
fcmove
lcall
sti
pop
mov
push
pop
out
mov
icebp
loope
arpl
sbb
pop
jle
xchg
leave
rcl
push
mov
sub
sub
sbb
repnz
loopne
std
leave
or
dec
sbb
mov
ret
cmpb
arpl
mov
and
in
mov
sbb
imul
dec
pop
loope
aas
mov
lsl
dec
mov
jns
fistpll
stc
cmpb
mov
addr16
imul
cltd
xchg
lcall
xchg
pop
mov
addb
jmp
iret
xchg
insb
xchg
mov
add
adc
neg
jmp
adc
sbb
jae
dec
sub
cmp
insl
in
call
push
push
xchg
scas
push
lahf
aaa
xchg
inc
dec
cmp
aam
orb
push
xor
ret
or
xor
stos
add
mov
push
out
xor
xor
or
cs
leave
orl
mov
or
in
cmpsl
mov
sti
jns
insb
mov
jae
inc
jnp
sbb
jbe
jbe
xchg
push
xor
and
xor
xchg
pusha
inc
inc
add
addr16
test
movsb
xchg
dec
out
jb
jb
mov
mov
add
cs
shl
cmp
inc
stc
lea
jo
imul
pop
sbbl
cwtl
cmp
enter
lcall
cmp
loopne
movsb
sub
movsb
jo
nop
and
jb
and
out
mov
jb
xchg
test
call
lret
ljmp
lods
scas
xchg
lcall
xor
addr16
cs
mov
ret
mov
xchg
jle
sub
into
pop
jl
sbb
shlb
stc
sahf
or
xchg
pushf
pop
pop
xor
sub
mov
stos
call
iret
lret
sti
addr16
sub
mov
or
jns
mov
mov
pop
pop
or
mov
push
out
js
pop
mov
mov
push
pop
fdivp
into
dec
or
insl
xor
cmp
pop
xchg
inc
or
sub
in
and
mov
pop
and
out
sub
or
xchg
frstor
mov
xor
jns
push
push
test
pop
and
das
mov
inc
mov
push
dec
mov
push
fs
dec
mov
inc
or
mov
cmc
add
not
add
sub
mov
mov
nop
inc
aas
fisubrs
test
stos
outsb
insb
or
lret
movsb
cwtl
stos
and
pusha
fwait
mov
mov
call
mov
repz
xchg
lret
popa
jmp
pop
stc
push
jle
mov
lock
lods
dec
bound
lret
and
stos
out
sub
pop
cmpb
hlt
push
in
push
test
les
fwait
and
xchg
hlt
adc
jo
fistpl
lock
jge
inc
add
xor
incl
mov
aam
mov
dec
mov
adc
cmp
inc
mov
mov
testl
or
adc
jo
in
push
cmp
rcrl
add
inc
popf
dec
outsl
or
es
dec
cmp
jl
rcrb
fwait
push
rorb
into
test
xlat
lret
sbb
mov
out
xchg
cmp
xor
in
jno
or
mov
mov
jne
mov
vpaddusb
dec
jmp
mov
sub
xor
icebp
dec
mov
test
std
inc
sahf
repz
ret
out
mov
mov
jns
mov
lds
xor
int
add
cmp
jle
and
pop
push
push
sbb
jo
hlt
dec
icebp
xchg
repnz
notb
pop
and
inc
jb
inc
jp
fisubs
cmp
fiadds
stc
mov
cmpb
mov
hlt
sub
sub
clc
push
idiv
push
lahf
or
cmp
pop
and
mov
loop
movsb
lcall
imul
test
mov
xlat
mov
fldcw
xchg
dec
pusha
nop
repz
push
inc
insb
lods
lods
popf
or
push
add
mov
into
mul
mov
push
ficompl
xlat
push
fwait
stos
mov
sbb
in
movsl
popa
fnstenv
pop
mov
test
cli
insb
lret
iret
aaa
data16
xor
movsl
jmp
mov
pop
push
aad
loop
repnz
push
int3
lods
jmp
enter
aad
or
addb
out
sahf
inc
jnp
and
adc
sbb
or
movsb
das
dec
xor
enter
js
push
jge
inc
xor
mov
ljmp
iret
or
test
adc
or
lds
jge
jmp
add
dec
or
or
fwait
xor
mov
lock
push
scas
jb
inc
or
daa
popf
xchg
jnp
xlat
lret
mov
imul
add
inc
sti
fmulp
daa
jge
xchg
mov
push
cld
arpl
jb
jno
aaa
push
xor
xlat
andl
xchg
ljmp
push
sub
xor
shlb
jno
add
in
cmp
dec
add
mov
mov
jle
fidivl
push
sub
inc
dec
repnz
arpl
shlb
test
sub
lahf
fbld
mov
jmp
std
push
cli
stos
xchg
iret
lods
adc
mov
pusha
cmpl
push
mov
mov
dec
adc
cmp
xor
lcall
dec
dec
es
in
leave
shlb
fildll
repnz
jmp
lret
out
xchg
sbb
movsl
add
jbe
mov
aad
sub
js
xor
sbb
inc
pop
shll
ss
ja
cwtl
jnp
call
push
sbb
imul
out
cltd
loop
jecxz
pop
xor
test
mov
cs
sbb
sbbl
mov
ljmp
dec
mov
mov
popf
scas
in
xor
subb
pop
mov
fwait
or
bound
cs
jg
out
outsb
pop
and
sub
notb
or
aaa
xchg
xchg
lret
sahf
push
inc
dec
shrl
punpckldq
xorl
jbe
sbb
dec
cmc
je
cld
add
loope
mov
mov
adc
adc
shlb
es
push
call
or
call
xor
sub
jmp
lea
ss
nop
push
test
xlat
xchg
push
pushf
sub
lock
mov
div
fisubs
addb
push
push
mov
inc
aam
loopne
fcoms
mov
dec
inc
mov
xor
xor
dec
mull
dec
xchg
movsb
cmpsb
inc
jle
rorb
cltd
xchg
push
add
or
cltd
sti
pop
jmp
pop
pop
mov
arpl
push
push
sbb
push
sub
sbb
jle
hlt
pop
mov
in
movsb
into
ljmp
cmp
icebp
sbb
jp
add
xchg
addr16
movsl
push
daa
nop
cli
push
jne
mov
cld
popa
push
popa
nop
push
insl
addr16
pop
ret
gs
sarl
aaa
cmpsl
inc
lock
jb
or
push
dec
insb
int
jecxz
fldenv
sub
add
aas
pop
in
mov
inc
in
sbb
outsl
push
jb
imul
fsubrl
dec
cmp
in
popa
test
mov
out
or
mov
lea
sbb
or
js
mov
jo
sar
sub
jmp
pushf
inc
mov
push
pop
jge
sub
cmc
adc
pop
shr
mov
jnp
fidivrl
int
mov
mov
mov
rolb
fistpll
dec
pushf
jg
xchg
mov
pushf
in
imul
or
aad
loopne
jne
cmc
mov
test
leave
sbb
dec
xchg
popf
lret
inc
insb
lahf
mov
jg
popa
push
inc
or
mulb
stos
lcall
int3
lock
in
shrl
cmp
addr16
adc
cltd
fwait
insb
jp
sub
sub
jcxz
dec
mov
mov
mov
ljmp
cmp
popa
xchg
shll
pop
mov
ret
mov
out
cmp
sub
xchg
inc
mov
jno
mov
pop
adc
mov
or
daa
mov
or
call
push
mov
mov
mov
pop
std
arpl
mov
jle
jbe
mov
mov
imul
lret
add
lock
sti
dec
mov
out
dec
shl
cmp
jno
rol
cs
ljmp
daa
ja
xorl
iret
cmpsb
ss
add
lcall
leave
insl
sub
sub
fmull
jnp
pop
or
sbb
mov
xchg
fwait
stc
mull
sub
adc
push
sbb
sbb
sbb
mov
xchg
mov
xchg
jle
xchg
pop
xchg
dec
lods
jl
dec
inc
sbb
push
or
jl
mov
shll
sub
mov
add
loopnew
xorl
aad
or
test
and
hlt
dec
xchg
and
dec
out
icebp
mov
fidivs
ret
cmp
xor
mov
xor
scas
lds
jne
push
add
test
pop
xlat
adc
pop
in
in
pushf
xor
addr16
sub
mov
faddl
dec
movsb
les
and
and
ret
pop
and
cmp
add
xchg
ret
out
inc
test
mov
add
dec
cmp
or
fwait
outsl
rcl
fsubp
pop
testl
and
fdivrp
jbe
cmp
fildl
jns
daa
push
xchg
jmp
add
mov
lret
int
les
bound
jle
lahf
xor
cmp
mov
aad
xchg
jecxz
mov
fisubl
dec
mov
and
pop
and
fwait
scas
sbb
jns
lods
push
inc
add
xor
lock
mov
inc
jge
shrl
lods
rcll
jno
ja
loopne
xor
xchg
sbb
cmp
outsl
add
fwait
push
clc
aaa
repz
in
ss
out
inc
je
mov
rcll
mov
scas
fildl
fs
adc
out
fiaddl
mov
js
adc
adc
jbe
adc
outsl
xchg
xor
lods
lods
stos
ja
jb
cmpl
rclb
sbb
aas
mov
xchg
loop
test
mov
out
jbe
xor
lds
int
inc
sub
add
push
pushf
sbb
out
cli
sbb
inc
jne
lahf
pop
imulb
cmp
xchg
push
xor
mov
addr16
cmp
adc
fimull
stos
rcl
xchg
sbb
rorl
or
in
nop
sahf
scas
pop
repz
insl
aam
inc
inc
fldenv
jo
xchg
cli
add
repz
mov
mov
div
cmp
mov
outsb
insb
stos
int
and
sarl
lock
add
cld
iret
lods
jmp
mov
testl
xchg
jg
pop
cltd
adc
xor
loopne
mov
mov
add
mov
int
jmp
fmuls
pop
pop
aas
out
and
push
icebp
add
mov
pushf
pop
add
popf
lock
push
mov
pop
push
fs
out
outsb
lea
into
pop
popf
jle
sub
sub
imul
hlt
pop
inc
or
add
test
int3
xor
rep
pop
dec
in
loope
sbb
lahf
or
fnstenv
lods
rorb
jb
cmp
pop
sti
sarl
out
mov
sbb
push
mov
lahf
shll
out
mov
inc
rcrl
xor
aad
mov
inc
xchg
jg
xchg
or
push
aad
push
test
fcmove
es
dec
pushf
adc
mov
sbb
rcrl
mov
cld
loop
out
stc
mov
push
mov
jae
inc
sub
xchg
adc
jg
cmpsb
xchg
or
ret
xchg
inc
mov
es
stos
pop
data16
cmp
and
mov
lcall
pop
cld
std
ds
out
pop
aas
sub
clc
cld
je
push
xor
lret
testl
lea
push
inc
mov
ja
add
ud0
hlt
fsubrs
test
shll
or
loope
insl
lock
xlat
pop
into
pop
jle
sub
into
inc
sub
in
fidivs
imul
sahf
jae
push
rclb
aaa
or
repnz
xchg
dec
adc
outsl
mov
loop
sti
dec
mov
lcall
push
adc
xchg
sar
mov
lret
jecxz
sbb
xor
cmp
into
and
ds
sbb
cmp
jnp
xor
int3
dec
lcall
jecxz
mov
insl
lret
lahf
daa
mov
movsl
sbb
add
push
sbb
hlt
std
jg
aaa
jge
dec
dec
loope
aad
jns
add
iret
aad
or
sub
jle
mov
nop
lea
adc
xchg
movsb
add
or
mov
mov
add
sub
jle
aaa
jle
add
rolb
push
ss
lods
test
xlat
stos
in
jno
mov
mov
cwtl
outsl
mov
mov
xlat
rorl
mov
fimuls
lods
mov
addr16
cmc
rcrl
push
jae
xchg
jns
dec
mov
nop
scas
or
adc
fdivrl
xor
imul
mov
xchg
mov
push
add
push
sbb
push
lret
push
dec
ret
inc
xchg
cmpsb
in
xchg
das
sub
stc
xchg
inc
out
push
clc
dec
mov
xor
add
movsb
jge
cmc
or
pop
jns
sub
push
push
xchg
repz
push
push
pop
mov
and
pop
dec
and
or
test
in
test
dec
add
icebp
push
mulb
mov
mov
movsb
testl
xchg
adc
pop
push
dec
sbbl
xchg
push
inc
jmp
or
insb
xor
dec
mov
sub
jmp
repnz
ljmp
clc
dec
jmp
das
inc
and
es
push
es
xchg
mov
or
stos
fmulp
or
dec
xorb
rcrb
int
add
cwtl
cmp
mov
lea
aam
mov
pushf
or
cs
cmc
clc
nop
xchg
jae
adc
sub
hlt
pushf
mov
xorb
aaa
push
pop
cmpb
popf
insl
inc
jecxz
xchg
das
outsb
cmp
sbb
push
mov
lret
or
jb
jecxz
add
or
xor
inc
mov
movsb
and
push
addb
mov
mov
mov
pop
push
imul
adc
insl
and
dec
lods
in
lea
into
pusha
cltd
and
xchg
xchg
sbb
mov
rolb
movsl
in
fadds
mov
cli
ljmp
nop
fsubrs
movl
mov
and
movsl
push
sbb
lods
dec
into
test
aaa
cmp
mov
lea
xor
insl
cmp
repnz
out
jbe
mov
adc
push
jo
sarb
cmpsb
push
rcr
xor
lea
sub
roll
cmp
rorb
xor
outsl
pop
negl
test
rclb
repz
mull
daa
stc
mov
negb
pop
xchg
xchg
lea
and
sub
outsl
mov
aam
leave
aaa
stos
int
mov
insl
std
dec
mov
sbb
fld1
inc
dec
rclb
dec
out
clc
push
rcrl
and
pop
test
cmp
and
push
cmc
or
sbb
loop
or
std
adc
mov
sbb
ljmp
pop
dec
mov
out
xchg
xchg
xchg
aas
into
cmc
sub
shrl
mov
pop
sub
in
pavgw
mov
sarb
decb
and
and
xor
pop
jnp
jge
out
sub
into
mov
sub
mov
jns
cmp
cmp
sbb
popa
dec
daa
test
xlat
dec
ret
mov
mov
loop
inc
sub
js
rorl
jle
clc
dec
rorl
add
push
mov
sub
push
out
and
mov
outsb
ds
dec
enter
xor
out
sub
in
out
sub
decl
sbb
and
inc
xor
add
int
dec
adc
mov
jecxz
das
and
and
lcall
mov
mov
lds
or
jle
jmp
ss
pushf
call
sbb
int
push
in
int
nop
dec
inc
and
pop
push
fld
pop
or
or
dec
push
cmpsb
sahf
mov
stc
stos
rcrb
pop
sub
cli
flds
out
push
inc
add
adc
xor
adc
mul
aad
shll
rcr
mov
rcl
cmpsb
movsb
int
data16
xchg
aad
jp
jbe
xlat
and
arpl
dec
dec
adc
scas
pop
adc
xchg
mov
xor
in
add
cld
pop
scas
ja
xor
ljmp
mov
stos
lea
jg
cmp
stos
mov
and
cmp
mov
sbb
inc
and
mov
nop
push
xor
movaps
fildll
cmp
stc
loope
and
mov
jae
jmp
xor
cld
sub
jmp
cmpb
jg
std
mov
inc
push
into
mov
fidivrl
xor
ror
push
pop
xlat
push
jne
pop
push
cmp
mov
lret
ret
loop
fadd
jecxz
sbb
lret
jmp
sbb
enter
pop
int
and
jecxz
cwtl
adc
mov
jle
cmp
dec
sbb
or
fs
dec
cmc
and
jo
push
mov
pop
or
push
decb
scas
jecxz
cli
data16
test
push
ss
pop
sti
adc
mov
push
iret
mov
mov
xor
or
lcall
mov
inc
cmpsb
xchg
inc
lods
sti
jp
div
xchg
and
push
ds
out
pushf
add
adc
inc
inc
inc
push
inc
ja
mov
fnstenv
jp
pop
jo
sahf
pop
sbb
imul
adc
inc
in
repnz
or
jo
dec
cli
jbe
daa
pop
jnp
std
adc
loop
das
inc
mov
je
leave
push
mov
push
mov
xchg
sub
gs
jb
nop
inc
xchg
jmp
push
adc
jnp
add
mov
mov
sarb
add
leave
jbe
and
ret
xlat
out
inc
adc
pop
fcmovu
nop
lahf
fdivl
icebp
ljmp
fistl
mov
cmp
mov
rolb
and
sbb
lahf
insb
xor
insl
idiv
into
aaa
loope
xchg
pop
jne
ljmp
pop
scas
cmp
jae
cmp
adcl
add
cmc
jbe
shl
sbb
jo
hlt
call
push
adc
sub
xchg
push
and
div
inc
sbb
movb
pushf
push
insl
les
xor
into
sub
pop
mov
out
ds
lds
jge
cs
jbe
imul
test
mov
mov
add
outsb
push
mov
aas
loop
nop
mov
jbe
mov
pushf
fiaddl
pop
mov
cmp
pop
lahf
or
movsl
bound
push
xchg
fs
rcrl
stc
dec
adc
retw
sbb
arpl
stc
sar
mov
push
fdivrp
add
test
push
sbb
fimuls
push
stos
lcall
test
add
pop
dec
cwtl
jmp
shrb
int3
mov
xchg
mov
out
xchg
rol
push
or
imul
add
xor
nop
fnsave
xor
ret
data16
loope
scas
push
jmp
pop
cmpsl
cmp
or
stos
loopne
jmp
loope
push
mov
mov
popa
insl
vcmppd
pop
xchg
loopne
or
mov
outsb
mov
arpl
mov
pop
aas
mov
or
sahf
xlat
out
rdtsc
out
ret
pushf
push
std
jl
mov
add
xchg
dec
fisttpl
push
mov
popf
mov
lds
fidivl
cli
mov
xchg
push
or
out
jne
dec
mov
out
pop
bound
mov
adc
sar
ljmp
mov
cld
mov
and
int3
ret
stc
sub
imul
shlb
in
data16
or
push
insl
pop
test
or
push
les
pusha
shlb
js
shll
mov
jae
cmpsb
adc
jbe
mov
rorb
adc
popf
jmp
dec
fnstcw
jl
pop
xchg
dec
in
cmpsb
dec
cmc
loop
pop
in
in
sbb
xchg
test
mov
popa
jle
pop
call
dec
sar
notl
sbb
or
push
daa
pop
test
clc
or
adc
ds
rorl
mov
ficoml
push
or
mov
xor
jl
or
or
sarl
rorw
iret
movsl
nop
cmp
data16
dec
xor
int
xchg
mov
nop
pop
mov
ficomps
les
xor
test
mov
in
mov
out
mov
aam
push
pop
outsl
adcb
fs
mov
xlat
xor
cwtl
lret
jge
repnz
repnz
add
add
and
imul
add
out
xchg
dec
negb
andb
xchg
orb
insl
jl
out
pop
lret
inc
mov
and
cs
call
xor
pop
aam
hlt
repnz
inc
mov
push
inc
xlat
push
and
and
jnp
dec
mov
in
add
push
mov
jae
fiaddl
iret
iret
xlat
pop
out
jle
dec
and
xchg
sub
jmp
push
aam
cli
sti
pop
in
push
cwtl
jbe
add
int3
jl
dec
mov
cmp
mov
push
ds
fists
in
jmp
sbb
jecxz
cwtl
jp
pusha
add
add
and
fimull
cmp
mov
daa
push
cmp
cmp
push
pop
int
push
out
inc
das
jg
sub
xchg
jo
adc
and
pop
movsb
into
xchg
jecxz
dec
inc
popf
das
push
insb
push
js
xchg
push
push
stos
or
sub
or
stos
cwtl
shrl
push
push
jecxz
sahf
ret
mov
mov
ja
in
jnp
mov
jg
ret
sarl
pop
or
lods
jle
jne
push
inc
lret
mov
stos
test
xor
cmp
jl
dec
adc
xchg
sbb
mov
fstpt
dec
and
jae
and
pop
popf
shll
sbb
subb
push
fisttpll
dec
xor
cmp
testb
in
dec
or
or
adc
test
dec
mov
stos
adc
adc
mov
inc
adc
jp
pop
push
mov
bound
imul
mov
rolb
imulb
out
fdivs
mov
push
in
rcrl
cmp
mov
ja
cmp
mov
mov
cld
jle
mov
frstor
xchg
dec
pop
push
rcrb
push
in
loopne
or
mov
sbb
adc
arpl
add
mov
mull
or
andb
hlt
dec
xorb
push
pop
push
jae
out
divl
pushf
in
scas
xchg
jge
jb
dec
inc
imul
lods
test
popa
scas
stos
dec
push
jle
cmc
test
fidivrl
sbb
in
sahf
add
daa
mov
outsl
xor
dec
lret
imul
fildl
push
push
in
in
xor
mov
scas
inc
pop
inc
out
sbb
mov
add
cld
loopne
sbb
cmpsb
or
dec
inc
insb
dec
mulb
sbb
push
imulb
in
mov
cmpsb
test
xor
inc
dec
add
xor
fnsave
pop
mov
mov
xchg
les
movsb
movsb
xchg
push
pusha
lock
pop
das
pop
ljmp
out
fists
add
cmp
jo
pop
fsubrs
push
lahf
lods
hlt
lock
push
mov
mov
dec
dec
xchg
push
js
movsb
push
adc
daa
xor
data16
xor
shr
lock
and
mov
dec
mov
cmpsb
cmp
jb
packuswb
div
xor
mov
gs
aas
fs
cmpsb
pushf
test
dec
push
push
fldt
repnz
cmp
adc
ljmp
and
andl
cld
imul
cmp
int
cmp
pop
nop
and
push
inc
add
test
jl
push
or
pop
mov
notl
pushf
add
popf
int3
test
lea
sbb
pop
dec
xor
sub
rsqrtps
addr16
loopne
push
inc
pop
sub
sahf
jo
imul
mov
or
stos
insl
xor
into
stc
ds
xor
adc
int
imul
cmp
inc
js
mov
movsl
stc
push
mov
lret
pop
addr16
inc
fs
jecxz
dec
pop
js
mov
loopne
pop
sarb
mov
xchg
movsb
mov
dec
push
adc
jno
out
pop
std
jns
out
in
cmp
dec
pop
sbb
mov
js
imul
push
loopne
arpl
sbb
lahf
pop
and
test
out
mov
lret
sub
lret
xchg
xchg
fdivs
sub
sti
clc
imul
fwait
mov
js
dec
sub
pop
dec
icebp
cmp
loope
push
inc
xor
sub
pop
es
in
rorl
mov
loop
lret
call
lea
jno
cwtl
mov
fistpl
mov
pop
xchg
and
aad
jecxz
inc
iret
orb
outsl
and
sub
pop
jno
adc
fs
add
xor
out
imul
and
push
sbb
aas
mov
jl
sti
adc
ljmp
cmc
icebp
cmpsl
and
mov
cmc
inc
cld
std
jl
or
adc
mov
mov
in
test
inc
xchg
ljmp
mov
lods
ret
insl
insl
pop
pusha
mov
jmp
sbb
addr16
lret
and
mov
loop,pt
mov
loopne
les
mov
mov
clc
push
add
fucomp
push
inc
mov
lock
jnp
out
xchg
sub
lret
push
scas
incb
cmp
sbb
cmp
arpl
sub
jmp
addr16
or
fisubrl
enter
push
mov
mov
dec
mov
out
lods
fsubl
push
mov
into
jae
in
cmp
in
push
rdmsr
in
pop
stos
test
arpl
jmp
push
out
mov
sub
movsl
add
call
and
cltd
push
ljmp
sub
inc
pop
inc
pop
fcomps
test
push
int3
mov
dec
lcall
rcl
imul
adc
mov
popa
rcl
jp
dec
cs
mov
ficoms
outsl
mov
sub
xchg
inc
sbb
or
mov
jbe
adc
lods
test
inc
daa
and
adc
fsubp
sub
xchg
cmp
push
fmull
in
in
mov
add
divb
jne
dec
mov
push
popa
stos
fidivl
movsb
mov
jae
and
xchg
imul
ss
mov
daa
jo
pcmpeqw
sub
cmpsb
test
xchg
pusha
pusha
clc
pop
fidivrs
lds
sub
cmpb
stc
aam
inc
aad
adc
pop
jle
int3
out
stos
mov
cmp
push
addr16
inc
jns
repz
test
push
cmpb
lock
popa
and
stc
scas
adc
dec
clc
lea
jns
jmp
fcomp
les
int
inc
jge
inc
pop
aam
cmpsl
pushf
lods
sbb
scas
push
fisubl
push
dec
ds
outsb
andb
daa
iret
into
sub
push
pop
int3
popa
dec
sub
aaa
lret
jb
add
scas
and
mov
pop
cs
push
loope
call
fnstcw
jmp
inc
cmp
sub
cs
fs
daa
push
jl
sbbl
popf
mov
add
add
je
add
lods
push
das
mov
movsl
sub
adc
mov
jp
mov
jl
add
es
testb
ja
inc
std
inc
jae
xor
xchg
mov
sub
jmp
mov
psubusw
rol
xor
or
jecxz
xchg
inc
movsl
stc
ja
push
sar
sub
dec
stos
xchg
mov
mov
sbb
in
scas
add
cwtl
out
aas
pop
stos
mov
outsb
int
fildll
dec
lret
fcoms
test
jge
scas
mov
sub
jle
stc
dec
test
mov
ficompl
fwait
sub
adc
data16
jne
lods
cli
mov
popa
adc
sub
orb
push
lret
aad
repnz
mov
xchg
and
xchg
cltd
mov
mov
shll
rcll
inc
xor
sub
cwtl
fisubs
callw
jnp
clc
mov
sbb
jno
popa
and
sqrtps
adc
pop
push
test
xor
sbb
pop
cmc
movl
mov
jmp
jb
int3
add
mov
push
shrb
js
pop
sub
or
mov
dec
pushf
xlat
inc
push
cld
pop
mov
dec
dec
loopne
leave
xchg
addb
pop
and
mov
ficompl
test
cmp
push
ljmp
cmp
fcmove
and
popf
xor
pop
mov
push
adcb
inc
js
cs
in
dec
rorl
mov
adc
inc
int
movsb
test
into
adc
ljmp
cmpsl
clc
out
int
pusha
push
repnz
les
pushf
xor
add
daa
and
adc
xor
sub
xchg
shll
cmpsb
mov
fldl
or
cmpl
out
pop
sbb
push
mov
cld
mov
push
loop
push
in
aad
mov
jae
pop
push
pop
mov
inc
xorl
test
fsts
jge
daa
dec
enter
mov
sub
or
sbb
pusha
das
jmp
mov
mov
out
pop
add
out
pop
jb
lahf
or
cmp
dec
int
and
lret
xchg
hlt
jnp
push
das
cli
js
jns
fcompp
fdivp
or
popf
mov
addb
pop
popa
into
ljmp
clc
in
in
pop
popa
jmp
repz
repz
push
loopne
test
fwait
dec
stos
and
popl
aad
ljmp
ss
leave
cmp
lock
mulb
lds
sub
push
xchg
js
pop
jp
push
leave
xchg
fnsave
shrb
test
mov
ljmp
jmp
adc
xor
lcall
lret
clc
xchg
inc
jnp
rorb
mov
lcall
stc
mov
hlt
xor
sub
fwait
add
gs
and
addr16
adc
rcll
sub
je
test
xor
cmpsb
sti
mov
or
xor
shl
ja
xchg
and
ficoml
fdivrs
outsb
sbb
mov
jle
imul
jp
inc
mov
push
in
andl
es
sbb
rolb
orb
inc
test
into
adc
in
insl
mov
jle
inc
lds
push
xlat
sub
pop
push
cmp
inc
push
xchg
xor
addr16
and
pop
inc
in
or
add
add
rclb
das
roll
movsl
loope
mov
sub
lahf
xchg
push
fistps
mov
push
ds
pop
jl
mov
or
adcl
fisubl
test
inc
fldl2t
ret
mov
ja
adc
in
icebp
mov
mov
dec
adc
adc
loope
jge
scas
jp
mov
add
pop
leave
push
jns
flds
daa
mov
int
push
xchg
cmp
fiaddl
and
push
sub
pop
push
sbb
stc
fsubp
sbb
imul
and
or
push
inc
inc
leave
sbb
cmp
pushf
jnp
xor
jp
and
cmc
mov
lret
icebp
push
inc
push
mov
cmp
push
cs
cmpsb
dec
bound
in
cmc
sbb
fnstsw
mov
ficoml
shll
cmc
mov
je
ret
sub
aaa
jecxz
jmp
sahf
in
test
mov
xor
cli
test
imull
loop
insl
mov
jp
test
popf
and
shlb
leave
lock
pop
jb
clc
cwtl
or
loop
cmp
popa
les
sarl
ss
inc
sbb
inc
arpl
scas
push
cld
popa
adc
mov
jp
psubsw
arpl
cmp
rorl
je
or
lahf
or
jmp
and
mov
repz
in
out
mov
xchg
mov
and
and
les
add
aas
inc
adc
pop
lahf
lahf
sub
ret
pop
pop
push
scas
pop
test
or
cmc
dec
pop
xor
and
xchg
push
add
test
xchg
fnstenv
lcall
arpl
cwtl
mov
or
sti
add
mov
or
outsb
cltd
and
sub
fwait
xchg
fs
or
shrd
loope
negb
ret
test
inc
aam
and
imul
call
lock
test
pop
fisttpl
mov
or
jmp
dec
pop
cli
mov
adc
jno
dec
mov
cmp
sub
in
outsb
leave
dec
mov
loopne
fsts
inc
xchg
fistpl
std
pop
sub
cmc
lods
inc
adc
jb
or
daa
cmc
aaa
mov
mov
imul
jbe
repnz
xchg
imul
adc
xchg
repnz
shlb
lds
or
adc
filds
cld
xchg
jmp
imul
iret
pop
or
mov
xchg
push
jmp
jb
xlat
loope
mov
mov
jbe
jl
out
mov
sub
scas
dec
test
mov
cmp
out
or
push
rcrl
push
mov
stos
lcall
aas
pop
add
lcall
add
xlat
mov
sub
hlt
popf
out
mov
es
pop
push
and
imul
dec
mov
ja
pop
aam
cwtl
gs
xor
pop
out
jge
jb
test
ror
popf
lods
leave
mov
jnp
imul
cmp
std
test
mov
push
es
lret
ret
or
push
imul
imul
jge
ret
jns
call
cmp
ret
test
dec
push
sbbl
mov
into
xor
pop
or
or
push
int
filds
repz
fwait
adcl
mov
mov
and
cli
mov
mov
fwait
adc
icebp
add
in
cmp
pop
pop
push
xchg
popf
sub
pop
test
mov
sub
or
sub
jp
push
decl
filds
int3
or
scas
movsb
jle
sahf
add
mov
int
fiadds
js
lds
jno
clc
push
inc
mov
shlb
lahf
rcr
fwait
mov
xchg
add
cmpl
das
fdivrs
pop
xor
adc
sub
xor
in
push
mov
and
xchg
repz
loop
scas
mov
inc
fcompl
inc
jecxz
adc
shl
arpl
dec
pop
and
and
sub
mov
cmpl
repnz
xor
jo
adc
movsl
cli
and
adc
xchg
lods
push
dec
sarb
cmp
ljmp
out
dec
sub
mov
fadds
push
jg
test
rcrb
loop
jno
rcll
cmp
lcall
ljmp
pop
cmc
rep
adc
xor
add
data16
push
ja
stc
fcmove
inc
or
cmp
rorb
insl
jo
int
ds
rol
mov
sub
cmp
mov
call
xchg
aaa
mov
mov
mov
inc
add
sbb
dec
fdivl
sub
jnp
mov
add
add
xchg
push
addb
pop
add
iret
rolb
cmp
sar
hlt
adc
inc
mov
sub
cmc
xchg
jg
push
test
cmp
outsl
fsub
fstpt
mov
or
cmp
outsl
arpl
pushl
iret
movsb
movsb
lea
aad
inc
add
je
adc
push
imul
repnz
stos
incl
xchg
sbb
ltr
lret
jne
xchg
out
fsts
push
add
jecxz
test
adc
sbb
ret
fcompl
movb
adc
mov
mov
lods
push
cwtl
xchg
enter
cmpsb
push
in
and
cltd
stos
dec
pop
mov
aad
popf
mov
cmp
push
sbb
sub
and
lea
mov
in
cmp
je
icebp
and
repz
int3
push
imul
or
add
or
lds
shrb
ret
pop
repnz
bound
mov
jae
xchg
cmpsb
imul
out
in
mov
imul
pop
aas
sub
cmp
and
aad
das
jns
jp
mov
xchg
out
mov
inc
push
push
push
iret
cmpsl
push
push
push
stc
dec
add
into
sbbl
push
std
in
sbb
js
jl
mov
movsb
inc
xor
push
mov
test
mov
adc
mov
pop
out
jbe
sarl
dec
lea
out
cmpsb
stc
hlt
mov
imul
out
adc
or
insb
push
aas
or
shrl
and
call
jae
movsl
rol
mov
xlat
push
xchg
sub
cmpsl
movsl
loope
push
cli
enter
pop
mov
cmp
or
stos
or
mov
or
cmc
mov
inc
popa
mov
bound
test
adc
and
fisubrs
fnstsw
mov
fisubl
frstor
xchg
or
xor
pop
jae
or
cwtl
stos
bound
unpckhps
mov
fstpt
aaa
aam
adc
lds
movsb
and
sti
sti
sbb
mov
cmp
in
or
mov
push
dec
loopne
int3
rorl
or
nop
shlw
stos
js
js
imul
ret
mov
push
push
gs
aaa
cmpsl
mov
mov
jns
jecxz
sub
lods
jge
daa
mov
arpl
dec
mov
lock
cmp
jne
xchg
fwait
mov
cmp
and
clc
clc
cs
push
movsl
decl
pop
sub
shlb
add
jns
lret
and
add
push
je
push
xlat
aaa
xchg
lahf
dec
xchg
test
mov
in
fdivl
push
push
iret
sarl
sub
cmc
sbb
std
outsb
ror
mov
jecxz
jg
hlt
mov
add
in
shr
pop
data16
out
adc
sub
mov
adc
jae
jmp
pop
push
adcb
dec
and
sub
mov
addr16
push
adc
test
cmp
adc
imul
shlb
rcrb
pop
std
dec
dec
cmp
in
push
lret
fdivr
pop
mov
ds
int3
push
pop
out
and
mov
cmp
xchg
add
pop
inc
xor
mov
adc
imul
lea
test
into
ret
cld
add
int3
inc
repnz
mov
mov
cmp
sub
call
insb
pop
mov
cmpsb
cmp
jne
in
push
jecxz
lahf
stc
xchg
cmp
rclb
sbbl
or
jae
mov
daa
push
add
call
xlat
mov
xor
in
dec
jecxz
cli
fldt
sbb
inc
xchg
mov
xchg
pop
xchg
xchg
mov
push
or
xor
mov
inc
jp
leave
push
mov
mov
dec
mov
jle
lods
xor
ss
mov
sahf
fs
jne
popf
frstor
mov
xchg
push
je
in
addr16
mov
dec
int
xor
jge
push
push
sbbb
loope
pop
out
sti
fstpl
les
imul
fldenv
mov
jle
arpl
pop
imul
cmc
cmp
popa
xlat
les
dec
stc
jnp
fisttpl
mov
or
push
scas
dec
add
dec
add
lods
addr16
lods
lahf
or
jmp
mov
popa
cld
mov
mov
mov
sub
js
stos
mov
cmp
mov
sbb
int3
cmp
pop
outsw
ret
pop
dec
cwtl
dec
stc
vzeroall
je
stc
xor
stc
or
add
jg
jo
mov
cwtl
inc
sbb
xchg
int3
imulb
lcall
ret
mov
repz
add
movsb
xor
je
pop
ficoms
dec
push
stc
shll
mov
dec
lahf
xchg
jg
mov
es
mov
outsl
lret
xor
cmp
push
jmp
jo
jl
pop
enter
and
iret
aam
cmp
jbe
dec
dec
sub
rcrl
mov
push
mov
testl
dec
sbb
jno
push
sub
scas
add
sub
or
push
call
int3
jo
addl
sub
and
les
lods
add
or
push
shll
push
mov
sub
jp
or
jmp
gs
add
xor
cmp
sbb
fistpll
mov
ja
fimuls
jbe
mov
dec
xor
sbb
dec
push
into
call
lea
shll
cmp
test
bound
sbb
mov
outsb
push
into
sbb
mov
jl
pop
sbb
sub
test
push
xchg
rolb
pop
mov
mov
push
sub
fbstp
push
ret
add
mov
testl
lret
shll
xor
add
pop
or
loop
mov
fldt
test
jno
mov
out
outsb
xchg
mov
mov
int
add
pop
sbb
int
enter
adc
fcoms
loope
inc
or
pop
bnd
or
pop
daa
dec
mov
xlat
fs
sti
sub
out
jnp
jbe
pop
out
in
mov
push
inc
sbb
xchg
push
out
movsb
sarl
cmp
jns
dec
push
leave
test
xlat
mov
lods
dec
or
fiadds
cs
call
mulps
rcll
shrb
push
lods
pop
mov
pop
xor
call
shlb
decl
test
mov
inc
es
cmp
sub
repz
jmp
xchg
mov
sub
int3
sar
test
xchg
mov
ss
into
clc
sub
pop
xchg
mov
sbb
outsb
loopne
inc
sub
add
seta
pusha
scas
int3
push
add
mov
mov
fsubrp
cmp
out
xchg
push
cmc
inc
adc
inc
pop
sbb
int3
in
mov
sar
and
mov
inc
ret
inc
push
pop
inc
cmpsl
pop
pop
sbb
push
movsb
pop
clc
rcl
xchg
orl
adc
xchg
mov
adc
dec
cmp
xor
mov
fdivrs
jl
dec
out
leave
rclb
movsb
dec
leave
jmp
and
nop
scas
mov
cld
xlat
add
jb
inc
insl
jae
lods
inc
mov
stc
xor
nop
mov
frstor
mov
imul
and
and
pop
inc
repz
lds
add
mov
sbb
push
sbb
mov
mov
dec
sahf
mov
mov
sbb
mov
stc
inc
shlb
sub
jmp
addr16
push
mov
xor
sub
movsb
out
sarl
push
mov
decb
in
inc
xor
arpl
xor
jno
cli
cli
mov
jle
xchg
stos
inc
test
push
jns
and
dec
mov
imulb
sbb
nop
fmuls
nop
aas
lret
scas
mov
data16
mov
push
mov
inc
jno
leave
cmp
jne
int3
inc
addr16
mov
push
adc
scas
xchg
add
pop
sub
pop
add
xchg
rcrb
lcall
adcl
push
sti
adc
outsl
sbbb
xor
inc
cmp
or
sub
push
push
imul
pop
xchg
sub
jo
test
inc
xor
jae
sbb
jnp
notb
fwait
pushf
pop
sbb
push
jg
mov
dec
dec
pop
or
add
pop
gs
push
dec
sahf
jmp
insb
sub
das
xor
in
aaa
jecxz
push
push
out
inc
push
popf
and
cmp
lret
xchg
sahf
sbb
sarb
or
mov
add
jl
dec
sarb
inc
jle
pop
or
or
call
ror
adc
sub
fistps
and
xor
dec
pushf
mov
adc
and
add
xchg
dec
nop
pop
xchg
popa
iret
mov
andb
icebp
dec
add
ja
ret
jmp
jl
mov
imul
cmp
inc
subb
dec
adc
std
insb
bound
jecxz
xchg
pusha
ja
jmp
shll
mov
int
cmp
mov
push
mov
movsb
jl
mov
or
add
push
pop
aad
sahf
mov
int3
mov
push
cld
loop
pop
cmc
add
dec
aam
leave
and
mov
xor
inc
pop
pop
sbb
mov
fcomps
pusha
repnz
or
popa
notl
and
pop
and
icebp
xchg
ret
cwtl
movsb
mov
sbb
mov
dec
mov
std
inc
andb
jp
pop
xchg
sarb
insl
push
mov
lea
or
jbe
out
jl
scas
push
pushf
scas
fsubrs
addr16
fldenv
mov
mov
and
fildll
pop
movsb
xor
inc
fdivrp
push
mov
or
mov
xchg
jg
push
test
fcompl
fmull
inc
mov
jge
push
jl
mulb
out
or
cmp
dec
es
rcl
sbbb
fsubrs
pop
mov
cmp
mov
bound
jmp
mov
jp
adc
mov
push
cmp
inc
xlat
cmp
roll
cmp
push
jp
mov
rorb
ffree
pusha
dec
pop
add
sub
pop
in
jnp
sub
xlat
mov
out
inc
pusha
imul
push
or
ss
dec
aas
sbb
xlat
mov
mov
mov
xor
imul
inc
ljmp
scas
jle
mov
push
inc
dec
adc
jl
divl
outsl
push
cmp
pop
fstpt
gs
add
dec
mov
sbb
cmp
fwait
sub
js
cmp
push
cmp
jmp
in
lds
int3
dec
mov
xor
jno
popf
stos
out
adc
push
inc
hlt
loope
sub
sub
mov
icebp
nop
add
cltd
repz
add
dec
pop
in
bndldx
mov
das
pop
inc
or
stos
stos
mov
add
ja
out
sahf
aam
inc
bound
inc
addr16
push
test
lcall
pop
lods
or
stc
sub
cli
or
xchg
scas
lods
inc
jecxz
popa
je
pop
and
mov
mov
jbe
insl
stos
xchg
test
sub
pop
and
adc
test
mov
out
in
mov
jmp
mov
mov
adc
adc
push
xchg
cmpsl
sbb
aaa
ret
test
jae
adc
rorl
and
lds
dec
mov
and
ljmp
jge
clc
stos
shlb
sbb
dec
fsts
xor
pop
add
call
sbb
hlt
cmp
stos
inc
push
scas
leave
fisttpll
mov
clc
lcall
sarb
ret
jnp
lock
fmull
lods
pop
lret
jge
mov
add
aam
dec
push
lret
xchg
std
or
jp
mov
gs
les
test
daa
pushf
lea
fsubs
loope
push
jbe
or
jl
push
inc
mov
imul
cld
mov
les
test
cwtl
gs
mov
jg
sbb
daa
insl
xchg
xchg
xchg
push
mov
fwait
std
mov
imull
mov
push
popa
cmp
test
jmp
iret
and
lods
imull
dec
sbb
scas
push
lret
insl
fistpll
pop
lcall
mov
call
or
or
aad
repnz
jns
inc
push
lods
pop
add
pop
adc
nop
lret
push
cmc
lcall
adc
mov
or
mov
pushf
js
fidivrs
cld
test
push
enter
insl
clc
out
lahf
fcmove
adc
cmpsl
xchg
cmp
xchg
sar
mov
js
repz
pop
jne
loopne
les
insl
hlt
bound
add
ja
outsl
inc
push
pop
fisubl
call
mov
add
mov
fwait
jns
es
movsb
jns
add
jo
push
das
dec
addr16
mov
repz
mov
stc
lds
xor
test
fucomip
and
dec
scas
or
add
mov
test
pop
hlt
xor
pop
sbb
cwtl
push
mov
mov
roll
cltd
xor
dec
popa
jp
xchg
sub
or
xchg
jne
cld
leave
nop
aas
xor
rolb
jnp
adc
jecxz
mov
stos
inc
leave
mov
es
jnp
int
not
mov
xor
and
inc
cmp
sbb
add
cmpl
dec
dec
xor
pop
mov
aad
lods
stc
xchg
in
in
leave
xchg
sbb
jle
add
cmp
mov
test
scas
mov
pop
sbb
gs
dec
cmpsl
data16
and
stos
lds
fldcw
fs
or
fldt
fdivrs
int3
adc
test
jge
movsb
and
add
jns
cmovp
xchg
pop
insb
and
or
mov
push
rcll
push
or
insb
push
dec
in
mov
ss
cltd
stos
dec
arpl
add
and
adc
inc
mov
popa
or
pop
mov
pop
jns
cltd
inc
in
sbbl
mov
jg
xor
jae
gs
leave
jp
pop
xor
out
int
and
cmp
insl
or
test
xchg
mov
fs
sub
and
mov
sbb
notb
andl
repz
pusha
into
mov
mov
mov
or
pop
aaa
and
mov
dec
cmpsl
or
es
mov
or
lock
jne
test
add
xor
loope
fnstcw
and
testl
loop
sbb
pop
fstpl
cltd
jl,pn
jb
and
ret
mov
dec
mov
jb
dec
imul
popl
ret
lods
dec
nop
cmp
aaa
iret
mov
stc
cmpsl
aam
popf
jge
jbe
in
inc
aas
test
inc
stc
es
cwtl
xlat
sti
sbb
movsl
in
inc
test
xor
data16
lret
mov
push
jmp
pop
clc
jmp
into
jae
aam
cmc
push
fbstp
dec
imul
cmc
into
xchg
fdivr
in
cmp
sub
xorb
adc
push
push
ljmp
insb
mov
xor
and
sti
push
jbe
sub
sbb
cwtl
and
sbb
or
sti
ret
push
loopne
push
xor
out
add
mov
pushf
fisttpll
inc
setnp
repnz
ds
mov
mov
data16
aam
jnp
cmp
pop
int3
pop
dec
or
je
shll
inc
mov
jmp
mov
jge
sbb
inc
roll
fdivrl
insl
cmp
lock
popa
lahf
mov
mov
xor
jnp
cld
mov
ja
lods
out
cwtl
and
in
xor
fs
pop
push
shr
call
fimuls
aas
mov
loope
je
cmp
sub
fnstcw
out
xchg
daa
into
or
sbb
insl
arpl
lock
es
cli
fadds
je
or
inc
mov
mov
pop
in
dec
lea
adc
and
aad
pop
or
push
les
sbb
gs
mov
ds
sub
mov
jb
pop
xor
xchg
int3
or
addr16
mov
jo
mov
mov
mov
loop
xor
push
pop
aam
aaa
mov
mov
call
orb
push
enter
mov
jns
pop
icebp
das
sbb
or
adc
pop
mov
pop
xor
pop
dec
and
mov
ret
pop
cwtl
rcrb
mov
mov
xor
gs
adc
jbe
or
insb
dec
aam
movsl
push
cli
push
pop
int
in
adc
das
adc
mov
pop
xor
fiadds
fstl
jmp
inc
xchg
sub
dec
arpl
mov
daa
adcb
test
xor
adcl
ds
gs
cmpsl
cmp
inc
repz
cmp
sti
ja
pop
dec
cmc
scas
sbb
ffree
push
stc
mov
int
xchg
std
out
int3
jae
jae
add
gs
mov
leave
fimull
or
ljmp
je
enter
outsb
jmp
rorl
pusha
xor
push
in
xchg
lea
push
xor
fildl
outsb
mov
push
cmp
arpl
mov
mov
mov
loope
push
lea
or
lret
and
or
xor
jo
lahf
icebp
dec
in
icebp
sbb
or
and
inc
mov
push
add
jle
and
or
cmp
vmovntdq
addr16
mov
les
bound
ja
in
outsl
shlb
cltd
pushf
mov
pop
mov
dec
mov
outsb
sbb
test
pop
xchg
dec
notl
fnclex
jmp
xor
out
sahf
sbb
dec
or
in
es
xor
test
add
jecxz
sbb
cwtl
mov
adc
mov
cs
and
out
out
popf
dec
adc
sub
jmp
ret
xor
insb
mov
add
mov
loope
adc
lea
and
loopne
test
xchg
jecxz
gs
mov
xor
add
imul
mov
inc
repz
lods
dec
dec
cwtl
sbb
xor
xor
scas
pop
jp
scas
dec
loope
mov
or
daa
jb
popa
lret
shrb
dec
xchg
sbb
jnp
rcrb
lea
enter
stos
mov
sub
stos
mov
int3
add
cmp
fsubl
testl
fisttpl
add
lds
xchg
fimull
loop
jecxz,pn
lds
pop
out
dec
and
leave
stos
add
xchg
jno
add
scas
mov
ret
cmc
mov
jge
jae
das
lods
rcrb
call
jge
iret
std
push
mov
testl
add
mov
fldcw
loopne
dec
in
subl
mov
int3
or
push
adc
jo
fs
push
lcall
adc
jne
sti
cltd
popl
push
sbb
jle
daa
xchg
nop
inc
xor
inc
jg
into
dec
icebp
mov
call
in
pop
or
and
popf
int
daa
iret
push
mov
or
dec
add
orb
push
sub
in
xchg
hlt
outsb
xor
cmp
dec
pop
mov
ret
dec
mov
sbb
lock
movsl
shll
adc
insb
mov
sub
test
mov
fstps
jns
call
scas
rcrb
hlt
je
repz
or
xchg
and
pop
pop
pop
mov
cmp
and
popa
jge
and
repz
push
push
dec
xor
shll
fildll
sahf
and
mov
jl
into
pop
fdivrl
pop
jae
addr16
repnz
cmp
mov
pop
sub
das
test
dec
lret
jmp
jmp
out
out
dec
cs
mov
sbb
pop
sahf
repnz
mul
xchg
jmp
std
or
jge
jne
jb
inc
popf
push
sbbb
pop
in
stc
dec
cmp
cmc
shl
or
xchg
add
jno
sti
cmp
stc
mov
push
pop
clc
ljmp
repnz
xchg
add
inc
scas
and
sar
iret
xchg
lock
inc
mov
jecxz
mov
push
inc
mov
std
pushl
daa
xchg
xchg
jp
push
lret
jg
pop
dec
jmp
mov
mov
rclb
fwait
cmpsb
mov
mov
movb
and
pop
mov
sub
into
inc
or
and
fstl
inc
testb
std
ljmp
lahf
aad
repz
cli
jae
and
xor
das
loopne
add
sub
xor
lods
sar
or
lret
jno
movntps
in
add
rcll
cmc
out
cltd
cmp
les
jae
cld
dec
mov
in
movsl
jns
inc
push
bound
mov
or
jae
repnz
cld
outsb
mov
add
sub
pop
loopne
leave
mov
je
ljmp
mov
fnsave
dec
xchg
adc
addb
sbb
mov
mov
lahf
loop
xadd
jbe
pop
lods
pop
pop
inc
test
mov
cltd
test
into
ljmp
and
and
ds
xorb
xchg
xchg
push
mov
cli
sub
int
and
aaa
sbb
jns
jb
stc
pop
mov
cmpsb
cmp
jecxz
faddl
inc
mov
cli
push
enter
xchg
cld
popl
cmp
pop
icebp
shl
std
push
idivl
lahf
jle
iret
insb
imul
pop
leave
adc
mov
jl
fcmove
pop
push
pushf
mov
adc
adc
fsubrl
sbb
add
jo
lret
stos
test
icebp
adc
lods
mov
popf
mov
xchg
jnp
mov
inc
es
clc
leave
cmp
into
incl
xor
aam
jbe
add
mov
loope
sbb
or
ljmp
loop
idivl
les
int
mov
sahf
movsb
cmp
push
sbb
fistl
jmp
and
xchg
lret
daa
mulb
add
ret
cmc
lea
jno
pop
pop
loop
popf
add
sub
mov
in
pop
lods
pop
lock
addr16
pop
les
fnstenv
bound
xor
dec
js
in
dec
ret
stos
fwait
scas
mov
add
add
repnz
int3
or
mov
sahf
movsl
mov
insb
outsb
sub
push
dec
cmp
sub
insb
subb
push
loope
push
mov
std
push
pop
ret
xchg
cmp
in
out
jmp
cmp
sbb
jns
out
gs
pop
pop
or
pop
xor
sub
cmp
int
dec
das
push
gs
pop
std
inc
add
sti
outsb
out
xchg
popl
cs
or
stc
repnz
scas
subl
int3
nop
mov
outsl
shll
dec
cli
rorb
das
sar
lret
shrl
sbb
xor
ret
adc
out
movsl
inc
add
sbb
jl
jne
dec
not
mov
or
mov
or
ds
stos
push
push
scas
inc
lods
mov
mov
pop
iret
clc
lret
lea
dec
imul
sti
cmp
iret
sub
or
cmp
or
pop
aam
xor
imul
and
and
int
out
scas
movsb
dec
mov
into
jo
sub
movsb
sub
fsubl
testb
lods
dec
push
scas
int
cwtl
popf
jns
push
daa
sub
jae
xor
mov
dec
or
lret
add
rcl
fwait
orb
rsm
lea
mull
push
cmc
xchg
in
mov
lcall
mov
cmp
jne
jbe
pushf
mov
rcrb
inc
sub
xchg
and
mov
push
add
das
pop
ss
pop
stos
mov
test
out
js
ds
add
jl
loop
inc
ss
arpl
mov
mov
jns
leave
xor
into
in
imul
out
ja
pop
add
jecxz
out
push
mov
hlt
clc
test
in
push
lods
push
pop
sbb
mov
jns
mov
imul
mov
int3
mov
jmp
mov
cmpsb
or
mov
xor
and
imul
add
xlat
sub
mov
movsb
mov
lea
ret
imul
push
pop
mov
pop
jge
inc
mov
sbb
js
cwtl
mov
dec
inc
js
dec
insl
popa
add
fwait
push
inc
mov
pop
xorl
scas
mov
mov
lea
in
jle
lods
popf
or
aas
push
mov
mov
cmp
std
adc
cltd
push
call
pop
cwtl
sbb
push
loope
jg
dec
push
add
sub
jecxz
test
sub
or
pop
out
clc
rorl
cli
test
adc
push
mov
test
cmp
ret
sarb
mov
cmp
sbb
loop
arpl
and
fisubl
adc
add
inc
mov
sarb
xlat
popf
insl
popf
out
cld
sub
jg
adc
xchg
xchg
das
and
push
mov
and
aad
fwait
push
jns
fistpl
lds
dec
mov
jno
xchg
ror
cmp
dec
push
sub
inc
and
outsb
into
mov
sub
xor
jae
mov
jno
cld
jae
out
lret
pushf
lock
stos
jg
push
and
dec
cmc
fucomp
xchg
adc
shl
mov
or
aam
stos
pop
pop
inc
jmp
mov
int
cltd
inc
aas
dec
jecxz
fsubrp
mov
test
sbb
sub
imul
in
inc
push
ret
iret
stos
jg
sbb
sub
psubw
ljmp
push
cli
or
sbb
ds
or
and
jns
pop
nop
dec
divl
push
xchg
and
in
cmp
mov
xchg
std
sbb
into
and
mov
pop
clc
or
out
xchg
or
arpl
jno
addr16
mov
stos
jge
enter
out
repz
cmp
movsl
jmp
call
adc
int
sub
mov
dec
xchg
jge
ja
dec
pop
jmp
ljmp
test
mov
inc
sarl
nop
fdecstp
in
js
icebp
sub
xchg
jecxz
pop
mov
stc
iret
inc
cmp
mov
imulb
push
cmp
sub
ljmp
mov
fidivrl
mov
mov
fsubrs
fucom
mov
mov
push
hlt
data16
mov
shrl
mov
push
add
dec
jb
jecxz
push
icebp
aam
push
mov
ds
xchg
sahf
cmp
jmp
nop
sbb
js
mov
mov
adc
divb
stos
cmpsl
fimuls
jg
mov
and
push
stos
inc
pop
roll
repnz
cmp
das
xlat
and
in
aaa
lcall
cli
int
dec
subl
push
inc
ds
and
or
xchg
divl
ljmp
adc
sbb
add
jnp,pn
mov
adc
addr16
inc
adc
stos
mov
push
frstpm(287
pop
add
clc
clc
add
xor
cmpsb
push
fldcw
inc
popf
idivl
faddp
xor
nop
aaa
insl
and
inc
fnsave
faddp
scas
inc
add
out
movsl
and
cmp
push
stc
popf
jmp
imul
nop
or
push
cs
js
dec
add
popl
aaa
movsb
pop
lret
popa
rcll
sub
into
loop
dec
lea
int
rolb
pop
add
mov
sub
mov
sbb
mov
dec
add
or
add
or
inc
mov
push
sti
int3
movsl
and
xchg
aam
je
pop
xchg
sti
cmp
push
adc
jnp
dec
out
out
xor
stos
popa
mov
cmpl
mov
call
mov
adc
out
lods
clc
mov
sbbl
adcl
ljmp
aaa
push
in
cmp
pop
std
mov
and
push
shll
sbb
mov
dec
sub
les
dec
mov
sbb
xchg
sub
jbe
pop
xchg
mov
addr16
cmp
mov
scas
test
push
mov
shlb
fmuls
jne
and
movsl
pop
pop
dec
xchg
es
dec
adc
jmp
testb
imul
shlb
shlb
mov
pop
fidivl
mov
inc
pop
lret
mov
dec
movb
fwait
leave
mov
popf
sub
adc
add
xor
jno
jo
aaa
xchg
repnz
xchg
lcall
insb
xlat
xchg
push
mov
mov
sbb
push
jmp
jne
jecxz
lret
rcrb
imul
cwtl
jecxz
mov
xchg
movsb
loopne
add
mov
push
jae
in
dec
repnz
ja
fldcw
sbb
mov
mov
fs
mov
mov
sbb
test
fneni(8087
cmp
lods
mov
test
jp
adc
movb
ds
scas
xor
fcomps
insb
fs
or
and
imul
in
jl
sbb
mov
pop
jle
mov
testl
mov
pop
sahf
push
lret
xchg
pop
nop
ret
push
sti
adc
into
out
and
dec
and
xchg
mov
push
icebp
pusha
loope
notl
xchg
push
daa
cmpsl
or
push
pop
sbb
pop
mov
lds
xchg
xlat
adc
sbb
std
dec
and
ds
inc
jns
mov
mov
lea
mov
adc
and
add
xchg
xlat
pop
loopne
push
ret
enter
into
dec
imul
mov
sarb
jecxz
dec
orl
pop
rorl
test
cmp
int3
sub
xchg
scas
push
cmp
jle
fcomps
add
jae
xor
cmp
mov
xchg
add
xchg
cmp
dec
ret
test
hlt
sub
int3
adc
clc
and
mov
xchg
xor
mov
out
push
or
xchg
push
cld
inc
xchg
push
pop
jbe
push
sti
dec
cltd
sub
pusha
mov
xlat
cmpsb
divl
in
sub
fildl
in
aad
lock
xor
push
cli
push
orb
sub
inc
sub
fisttpll
pop
leave
sbb
pop
push
jg
mov
xchg
xchg
xlat
testl
push
fisttpll
dec
sti
scas
cmpsl
or
aas
insb
mov
xchg
test
lods
cli
push
nop
mov
insl
out
dec
mov
push
data16
and
add
sub
pusha
mov
cmp
adc
stos
fistps
jns
aad
dec
sub
sub
dec
mov
std
sub
out
xchg
hlt
mov
sub
pop
nop
jecxz
rcrl
mov
inc
js
pop
and
push
xlat
push
in
pop
mov
loop
jmp
repz
scas
pop
xchg
fxam
movsb
lods
jle
lcall
xor
and
jns
mov
mov
dec
leave
xlat
pop
cmp
pushf
pop
xchg
je
push
incb
jmp
push
mov
test
hlt
or
jbe
push
push
lret
and
xchg
mov
lret
mov
pop
lret
xchg
push
push
xor
cmp
xchg
imul
jl
dec
and
insl
dec
outsl
inc
push
iret
test
mov
aam
mov
cltd
sub
dec
push
divb
rcll
mov
fucom
das
cwtl
aam
aam
ja
sbb
adc
mov
mov
push
call
pop
sub
imul
insl
add
and
add
cmp
es
sub
adc
add
fcoml
push
xor
push
inc
push
aam
pop
cmc
clc
sahf
cli
repnz
iret
out
pop
outsb
cwtl
loop
push
push
lea
test
pop
and
push
repnz
subl
mov
and
jmp
cmp
call
imul
sbb
inc
xchg
nop
shll
jne
dec
push
loop
xchg
push
push
in
int
add
imul
mov
mov
shll
leave
mov
inc
cli
subl
movsl
xor
popa
or
sti
adc
lea
sub
and
loope
test
add
bound
imulb
test
cltd
cltd
pop
clc
sbb
adc
xor
mov
adc
pop
std
push
or
mov
cmp
mov
jp
mov
fists
aaa
loope
cmpsb
mov
mov
fsubrl
jno
call
cli
clc
push
xor
popa
fs
pop
int3
xchg
lcall
dec
das
xchg
mov
and
fadd
mov
pop
mov
lea
mov
test
mov
pop
es
xor
xor
into
jecxz
xchg
stc
in
dec
rcll
or
dec
dec
sbb
iret
sti
mov
bound
cmpsl
sarl
lods
das
pop
push
mov
pusha
adc
dec
push
mov
dec
dec
sub
in
sbb
pop
jne
rclb
aas
insl
xchg
inc
mov
test
dec
inc
mov
adc
cs
inc
mov
add
mov
xchg
jge
push
aaa
cmc
das
push
hlt
int
iret
push
clc
iret
imull
jecxz
mov
lahf
jo
jb
in
inc
pop
mov
inc
int3
js
sbb
lret
fstl
cmp
mov
fs
cwtl
lea
mov
fimuls
les
dec
mov
dec
or
rcrb
jae
ja
orb
jae
test
xchg
push
mov
outsl
ljmp
fwait
push
xchg
push
fs
dec
or
jl
lret
call
mov
push
mov
lock
sbb
into
pop
arpl
adc
sub
leave
popa
jo
cmc
add
jge
mov
xor
cltd
mov
xor
scas
mov
rclb
inc
loop
jp
sbb
pop
inc
shr
mov
idivb
dec
cmp
lret
dec
shl
std
leave
inc
dec
out
cli
es
adc
inc
xchg
jmp
mov
ret
bound
or
popf
add
cmpsl
dec
dec
int
mov
shr
xor
fisubrs
jmp
jmp
insb
adc
xchg
out
xchg
adc
lods
repnz
add
jae
daa
outsb
leave
xor
repnz
jg
popf
xor
out
jl
sahf
movsb
inc
mov
adc
js
jne
and
cli
aad
jo
mov
subb
enter
or
sbb
lret
dec
cmp
push
shlb
xor
xor
push
bound
in
shll
out
cmp
adc
in
ffreep
inc
imul
notb
loope
cmp
inc
mov
sub
adc
adc
dec
mov
loope
xor
push
or
adc
js
or
mov
jo
inc
pop
adc
call
aam
mov
dec
int
add
mov
fwait
mov
push
lods
into
mov
clc
outsb
mov
jmp
js
loopne
cs
xchg
lcall
and
mov
daa
lret
clc
xor
pop
repz
push
arpl
pop
scas
mov
fucomip
pop
mov
and
xchg
fwait
jo
jno
adc
jns
je
xor
out
xor
pop
sub
insb
inc
inc
stc
and
jns
shlb
insb
sub
imul
data16
sti
pushw
into
ss
push
icebp
push
cli
sbbl
negl
call
subl
inc
pusha
lods
sahf
ret
in
js
sub
lock
pop
outsb
scas
ret
stc
shrl
testb
or
lret
xchg
sub
and
dec
xchg
and
sub
adc
hlt
adc
ds
loope
insb
mov
mov
xchg
pop
jns
lcall
hlt
xor
push
push
pop
and
or
pop
pushf
push
fildll
fadd
pop
mov
decb
fbld
in
xchg
je
jg
xchg
les
aaa
outsb
lock
sub
shlb
cmc
dec
mov
cs
pusha
lods
push
into
pop
mov
or
andl
dec
in
dec
aas
pop
sub
add
xor
fnsave
dec
cli
inc
mov
in
push
popf
cs
loope
mov
inc
popa
adc
iret
dec
jmp
pushf
dec
push
mov
outsl
fdivrs
pop
jmp
ret
jbe
in
sub
mov
jae
pop
out
ss
add
stos
or
and
ja
cmp
int
lret
test
int
into
push
and
cmp
out
jg
sub
test
or
inc
repnz
into
leave
mov
outsl
outsb
jns
xchg
xor
cltd
xchg
icebp
pop
ficoml
xchg
xor
jns
popf
or
pop
sbb
rclb
fwait
xchg
popf
push
jne
shlb
push
push
aaa
mov
ficomps
scas
out
mov
ds
sbb
daa
fildll
je
sub
adc
push
fcomps
sbb
loop
repnz
out
mov
xchg
mov
sub
fwait
fs
or
fdivrl
ds
mov
cs
js
pusha
pop
aas
jmp
jmp
mov
adc
jg
stos
and
ret
jmp
adcl
mov
sub
mov
and
pop
jge
push
inc
xor
lret
cmc
shl
shll
sbb
stc
inc
nop
ret
sbb
stc
dec
or
ljmp
jb
jecxz
or
cld
mov
rcl
in
cltd
push
inc
inc
push
push
pop
jge
mov
add
stos
sbb
mov
jmp
insb
ja
lea
fwait
lret
cs
push
andl
xor
insl
repz
ds
cmpsl
negb
pop
insl
sbb
add
outsl
dec
jmp
mov
ret
scas
je
sbb
je
xchg
cmp
mov
xor
ljmp
push
stos
lea
mov
and
xchg
clc
aas
ret
jo
or
push
xchg
es
xchg
outsb
cltd
push
mov
popf
mov
add
push
xchg
xchg
inc
mov
inc
loopne
mov
jecxz
mov
cld
in
call
mov
or
imul
clc
dec
cltd
cmc
cld
inc
push
fisubl
mov
outsl
prefetch
sub
add
repz
adc
movsl
jne
cmp
pop
fcompl
iret
in
outsl
xor
in
arpl
lcall
sub
aaa
mov
sub
jmp
popf
es
xchg
xor
fsts
xchg
sbb
mov
daa
imul
mov
imul
and
inc
testl
sbb
pop
mov
out
out
jle
jbe
call
test
movsl
inc
jge
mov
ds
jnp
mov
or
fildl
dec
jl
out
js
jb
fucomi
adc
insl
mov
fstpt
loope
std
pop
fsubs
sub
push
push
jnp
out
adc
mov
fists
push
add
or
shlb
and
pop
xlat
add
sub
hlt
or
push
jnp
xchg
packssdw
mov
cs
and
hlt
xor
adc
mov
arpl
mov
push
aam
testb
outsl
jge
cmp
movsl
mov
adc
mov
or
mov
add
notb
out
imul
adc
sbb
dec
push
adc
jb
mov
insl
push
inc
inc
decl
lds
ds
mov
loop
das
jmp
andb
xor
add
bound
out
xchg
in
int
jae
rsm
les
sbb
dec
mov
inc
cmp
shlb
loope
pop
mov
repz
mov
pop
outsb
popl
test
call
icebp
dec
add
mov
das
adc
inc
pop
popf
cld
lcall
or
pop
push
loope
adc
mov
adc
xchg
xchg
gs
jmp
test
stc
inc
aad
scas
iret
dec
jnp
inc
daa
fwait
popf
lcall
dec
inc
inc
push
add
fstps
adc
insb
call
lock
mov
fsubrs
jg
lret
cmpsb
cmpsl
pcmpgtd
xchg
sbb
add
xor
das
xor
ret
xor
andl
sbb
imul
test
notl
out
xchg
stos
es
adc
pop
outsb
dec
iret
jne
dec
jnp
push
and
jmp
dec
xor
sbb
fmuls
xchg
jl
loop
aaa
aam
pop
cmp
filds
mov
inc
ret
jg
cs
jmp
int
cmp
bound
sbb
cmpsl
lret
xchg
jne
lcall
movsl
movb
xor
mov
jg
sbb
jmp
loop
jb
or
jae
jne
fists
jne
xchg
shl
fistps
cmp
cld
pop
push
inc
mov
sub
push
fdivs
cwtl
fs
jno
stos
xchg
shrb
mov
in
jns
mov
cmc
iret
mov
in
ljmp
push
pop
fsubs
aad
insb
fisttpl
test
inc
cvttps2pi
or
adc
in
push
add
fbstp
or
cmc
dec
iret
ret
xchg
fsubr
dec
or
shr
stc
loop
sub
scas
fcomps
popf
sub
popl
cmpsb
loop
or
fidivrs
dec
icebp
cmp
push
and
fadds
cltd
mov
pop
sahf
fsts
push
sbbb
inc
dec
and
or
and
push
fisubrs
lea
mov
mov
and
push
sti
dec
push
ret
mov
cmpsb
or
pushf
cld
or
push
xchg
test
sub
jecxz
sbb
daa
icebp
lods
sbb
test
ds
insl
jmp
dec
xorl
adc
rorb
ljmp
popa
notb
jns
pusha
jno
aas
jnp
jge
cmp
xor
pop
inc
cmp
cmc
add
push
cmp
inc
mov
daa
leave
xor
loopne
sahf
repnz
sub
cmp
stos
push
mov
icebp
loop
out
add
roll
movsb
shlb
add
cmp
push
cld
nop
daa
adc
mov
pop
xor
xchg
cmp
push
mov
jb
jmp
pop
sbb
mov
lahf
adc
fcmovu
aas
sbb
xlat
adc
mov
lahf
pop
xchg
aam
add
cltd
dec
sbb
divl
fwait
lock
ljmp
sbb
lahf
xor
cld
imul
iret
push
fnsave
sbb
adc
dec
mov
jbe
movsb
dec
cmp
mov
repz
jns
sbb
loope
push
jb
cld
or
mov
ja
push
inc
dec
sbb
xchg
cmp
sbb
ffreep
pusha
jmp
push
repz
push
and
dec
sbb
sub
jbe
mov
inc
adcl
xor
cmp
in
pop
cmpsb
stos
out
icebp
nop
xor
inc
sbb
inc
roll
mov
mov
test
mov
subl
into
xor
cld
fbld
stc
jp
sarb
sbb
lods
pop
or
sahf
lea
aam
movsl
iret
push
adc
loope
ja
add
jae
push
scas
jno
loop
js
pushf
mov
inc
orb
sub
aas
lahf
push
mov
dec
popf
jg
xor
insb
xchg
divl
jle
lcall
aam
and
dec
fs
mov
mov
mov
js
jns
cld
lret
inc
or
pop
jno
sub
cs
sbb
pop
sbb
jle
inc
sbb
jno
stos
fmul
js
lret
repz
loopne
add
add
cmc
pop
jmp
enter
mov
inc
pop
stos
stc
je
aam
dec
push
ljmp
pop
in
mov
jecxz
or
arpl
daa
fistpll
mov
sub
out
or
filds
popf
xor
shlb
sbb
in
sub
dec
cmp
mov
or
cltd
test
fimull
or
fwait
movsl
mov
sbb
dec
xchg
arpl
sbb
outsl
xchg
out
or
nop
enter
add
pop
mov
xor
out
xchg
cmp
data16
mov
cwtl
jb
loop
into
aad
in
cli
std
mov
cli
dec
out
ja
fsubl
test
je
popf
movsl
cmpsb
pop
xor
cmp
loope
jbe
repz
sub
bound
mov
or
fsubl
orl
shll
mov
sbb
xor
lock
mov
mov
insl
ss
cld
insb
scas
or
out
addr16
push
fstpt
test
int3
fcompp
sub
scas
xlat
inc
pop
xor
mov
xor
in
mov
out
leave
xchg
imul
into
js
push
push
jmp
loope
lret
jnp
outsl
mov
test
sub
fimull
cmp
adc
loope
nop
push
bts
gs
stos
divb
push
mov
movsl
jmp
cmc
addl
das
lret
lds
cmp
mov
sbb
and
movsl
lea
ja
gs
test
xor
test
mov
xchg
push
repz
push
pop
ja
xor
pop
push
mov
xchg
ret
inc
jp
xchg
add
popf
ret
ret
mov
jecxz
jg
ror
outsb
daa
jge
mov
cltd
inc
cmp
fbld
push
push
jno
cmpsl
pushf
pop
sbb
das
xor
inc
jne
lods
movsb
cs
nop
mov
mov
add
jbe
sub
push
dec
jg
cli
dec
jnp
jp
cmpsl
pop
sarl
mov
jne
push
jle
mov
cli
fldenv
in
sub
mov
inc
hlt
out
and
push
mov
mov
or
mov
scas
aaa
test
popf
push
push
gs
in
imul
rolb
outsb
push
jle
ret
add
mov
pusha
push
loopne
pop
sbb
sbb
add
mov
sub
cmp
jmp
cli
fcoms
pusha
lret
test
in
jle
jae
mov
sub
sbb
pop
fadd
test
test
add
addr16
dec
shll
xchg
xchg
xchg
add
push
outsl
test
or
pop
test
icebp
int3
mov
insl
movsl
movsb
das
adc
xchg
lahf
fs
test
inc
mov
pop
loop
xlat
mov
popa
pop
sarb
inc
fcomps
rolb
mov
jbe
call
shl
pop
imul
fdivrl
mov
imul
sahf
call
add
cmpsb
sub
dec
inc
test
jae
jle
lret
inc
mov
jns
mov
nop
mov
stc
xchg
cwtl
pop
loopne
pushf
mov
cmp
imul
int
xchg
jl
fstps
mov
jecxz
pop
neg
adc
xor
hlt
mov
mov
mov
dec
inc
orl
inc
add
adc
imul
cmp
or
aas
popa
adc
mov
rclb
sahf
push
out
subb
adc
bound
ljmp
adc
enter
xchg
add
pop
shrb
mov
loop
mov
push
xor
jl
jecxz
dec
subb
cmpsl
inc
adc
in
sbb
jecxz
jg
fdivrs
dec
sbb
pop
push
icebp
push
jb
mov
cmpsl
and
jg
add
jg
hlt
addr16
mov
sbb
sbb
mov
xchg
xchg
adc
push
pop
fisubrs
fimull
push
aam
enter
mov
shll
pop
lea
xor
dec
sbb
fwait
pop
shlb
cld
mov
jno
push
lds
inc
mov
lock
loope
adc
xor
cmp
out
in
les
fcomp
push
jb
push
nop
mov
lcall
insl
pop
dec
add
mov
push
jno
jnp
cltd
dec
dec
inc
pop
mov
adc
dec
jo
xor
into
lcall
jl
mov
cli
mulb
das
mov
fs
adc
inc
jecxz
pusha
add
and
dec
sahf
imul
out
mov
arpl
push
sbb
adc
pop
ss
andl
data16
and
and
mov
enter
dec
add
push
mov
imull
js
lods
mov
leave
jp
inc
stc
sub
adc
mov
xchg
mov
les
test
mov
push
repnz
insb
ss
xchg
flds
mov
or
outsb
repnz
stos
imul
dec
jno
aam
cwtl
adc
add
clc
lds
int3
lock
shrl
inc
sbb
jp
in
popa
hlt
adc
scas
movsl
popl
aas
dec
inc
mov
xor
mov
in
jnp
out
sub
es
aad
and
mov
mov
cmp
cmp
mov
jb
dec
xchg
and
in
ss
ds
loope
lea
dec
dec
dec
sub
scas
int3
and
xchg
cmp
mov
jmp
xchg
sahf
xchg
aad
outsb
out
jge
sbb
loop
in
dec
nop
mov
or
sub
dec
mov
push
inc
jne
mov
out
or
orl
imul
sti
cmpsl
in
roll
fstps
test
sub
rcrl
les
pushl
sbb
sbb
xor
cmp
pop
push
dec
inc
mov
mov
fucomp
push
daa
cmp
sub
fsubl
inc
mov
mov
pop
mov
dec
fidivl
push
xchg
into
addr16
adc
lcall
cmc
into
sub
test
fdiv
sarl
ss
xchg
nop
and
fwait
pop
enter
fmulp
out
jno
xchg
jns,pn
int3
icebp
push
fidivrl
pop
cmp
mov
mov
lret
jmp
movsl
jno
lcall
mov
in
out
shlb
push
pop
push
jo
cltd
clc
add
addr16
jg
push
stos
mov
push
adc
push
sub
bswap
mov
add
cltd
push
cmp
fcompl
iret
and
push
sub
in
mov
mov
frstor
mov
cmp
daa
addr16
addb
mov
daa
xchg
lods
cmp
rorb
leave
lock
pop
movb
clc
imul
and
inc
add
in
jge
in
jb
cmp
pusha
xchg
and
daa
mov
sbb
or
mov
cwtl
xchg
das
push
out
jne
add
pop
pop
lds
clc
testl
loopne
xor
add
fs
scas
scas
std
out
jmp
out
jle
jnp
push
xchg
cs
pop
mov
mov
mov
leave
jno
pop
push
mov
aas
push
lock
scas
fistpl
into
movsl
mov
clc
mov
and
mov
les
fldl
inc
int
add
mov
push
xor
mov
cmp
xchg
jo
xlat
jl
pusha
push
mov
mov
or
xchg
cmp
ret
aaa
push
ja
adc
push
fcomps
xorl
lds
jmp
mov
scas
mov
xchg
mov
add
adc
in
fldcw
insb
and
sahf
scas
sbb
add
dec
mov
int
push
mov
or
push
mov
ss
andb
jb
adc
cmp
cwtl
cs
movsb
add
gs
and
popf
adc
lds
out
mov
lock
jmp
xor
outsb
dec
sub
iret
inc
loop
pop
pop
outsb
cli
in
sbb
xchg
add
or
int
nop
adc
jo
imulb
mov
xchg
push
xchg
or
outsl
or
fwait
mov
push
ds
lods
add
sub
mov
inc
lea
fimull
xchg
ja
fadds
addr16
out
add
ds
push
sbb
pop
or
jecxz
add
stos
cmp
pop
jmp
mov
mov
sbb
popl
les
inc
cmp
sar
insl
cltd
test
and
lods
imul
das
pop
mov
jns
adc
sbb
faddl
mov
pop
cmp
dec
dec
fwait
js
mov
cmp
cmc
iret
test
sub
mov
mov
xchg
jg
sbb
fsubs
mov
dec
cltd
cmp
shll
jecxz
test
js
inc
dec
dec
arpl
clc
mov
imul
or
sbb
ret
mov
mov
adc
popa
cld
imul
xchg
aas
push
pusha
stc
mov
rcrl
pop
lock
out
adc
insl
adc
js
fsubrl
jae
sub
mov
dec
aad
sbb
and
shll
rcl
sub
inc
pushf
lds
inc
sub
std
ds
es
ds
cwtl
outsl
aam
jmp
mov
rcl
push
mov
adc
jnp
jns
loopne
aas
inc
ss
mov
repz
or
pop
pop
sub
sbb
repz
shrl
shlb
cltd
imul
jno
popa
jb
add
das
inc
push
xor
aam
out
jp
adcl
rclb
fists
pop
mov
stos
mov
std
not
xchg
clc
inc
mov
cld
pop
pop
inc
fs
mov
insl
inc
jb
ret
es
mov
mov
les
mov
fwait
pop
outsb
pop
inc
dec
aam
or
lret
mov
leave
lahf
enter
fldt
xchg
js
mov
scas
aam
xchg
xor
idiv
add
loop
mov
sbb
inc
cmpl
jle
lcall
addr16
insl
hlt
hlt
xlat
xchg
ret
push
or
lret
mov
cmc
pop
fwait
mov
stos
lcall
mov
aam
adc
scas
andb
outsl
sbb
sbb
movsl
mov
xorb
mov
push
sbb
jp
fsubrs
xor
lods
out
push
jne
adc
sub
test
ja
aad
push
and
sbbb
sub
sub
cmpsl
push
ja
pop
je
js
mov
rclb
push
bts
insb
cltd
andb
and
sub
pop
jecxz
hlt
ja
push
adc
sbb
pop
std
cmp
aam
repz
adc
mov
add
and
add
cli
lds
scas
adc
push
xor
pop
sbb
mov
or
fldcw
mov
dec
call
jle
std
mov
shl
test
lcall
out
leave
arpl
idivb
fs
sbb
pushf
shl
pusha
xor
scas
pop
fmuls
repnz
lock
ja
cltd
xor
pop
outsl
cmpsl
lahf
lods
outsb
xor
scas
sub
jecxz
rcll
mov
into
fcmovb
and
mov
mov
loope
mov
roll
mull
mov
insl
out
dec
or
sbb
mov
inc
pop
mov
push
add
and
popa
inc
adc
and
call
mov
xor
icebp
stc
adc
fwait
fwait
nop
test
push
push
lcall
lds
mov
mov
js
cmp
imul
push
sub
push
xchg
mov
out
daa
imul
xor
xor
push
mov
ss
jno
mov
adc
pop
jns
and
test
xchg
sub
mov
cmp
mov
pop
ret
addl
xchg
adc
aas
or
and
jnp
dec
mov
mov
push
dec
outsl
out
mov
push
mov
jmp
repnz
into
shrb
int3
leave
dec
repz
jnp
insb
mov
hlt
mov
outsl
cmp
jmp
fwait
insl
int
scas
pop
es
js
and
and
add
jbe
or
push
sbb
xor
or
ljmp
cs
sub
es
dec
fadds
adc
pop
xchg
and
sub
xor
mov
gs
jp
add
mov
in
xor
adc
inc
push
ret
xchg
mov
adc
dec
mov
mov
leave
mov
mov
jmp
and
push
xor
jnp
or
dec
mov
insb
lods
sbb
xchg
mov
xor
insb
scas
clc
mov
aas
mov
mov
push
jo
addl
das
aaa
sbb
movsb
imul
push
or
push
test
lock
into
pop
or
push
into
lock
mov
add
aas
outsl
xchg
sbb
mov
cmp
mov
adc
ja
xchg
rcr
jno
bound
test
and
cmp
xlat
add
sbb
and
push
mov
and
into
push
sub
cbtw
loopne
in
scas
or
mov
subl
cmp
jl
xchg
nop
push
xor
nop
stc
cmp
mov
stc
fiaddl
ret
adc
or
cmc
sbb
xchg
xor
dec
hlt
inc
scas
inc
push
icebp
dec
add
fisubrl
and
testb
and
add
inc
out
cltd
push
fwait
or
insb
lea
dec
fidivrs
ljmp
mov
aam
cmp
testb
pop
push
and
out
mov
hlt
bound
cmpsb
cmp
and
enter
xor
cmp
insb
jmp
xchg
in
push
inc
incl
or
pop
cmc
mov
rcl
cmp
mov
leave
jo
stc
mov
inc
push
iret
xchg
pop
fldt
fwait
and
lods
or
hlt
call
int
sbb
ss
repz
outsb
mov
dec
enter
jne
jae
and
lods
fsub
push
push
jp
mov
mov
subl
ret
xor
stos
mov
push
dec
jmp
test
and
clc
pop
xchg
movsl
data16
xchg
mov
xlat
xchg
xor
mov
cmc
inc
std
jmp
add
pop
push
aas
shrl
xchg
shrl
lods
sbbb
fisubrl
jnp
aas
call
mov
dec
push
jmp
in
mov
sub
rcl
sbb
dec
mov
sbb
mov
stos
rclb
cwtl
mov
cmp
push
mov
lock
iret
xchg
je
sti
bound
mov
push
jne
popf
loopne
test
add
mov
add
mov
mov
push
mov
mov
sub
imull
movsb
or
or
jne
xor
dec
stos
add
push
pop
test
inc
sub
je
loope
and
out
mov
dec
stc
shrl
xchg
xor
mov
aam
adcb
jo
or
fucomip
sti
mov
jae
cmp
jo
cmp
addl
ljmp
and
into
add
fisubrs
adc
loop
bound
cs
lods
insb
jmp
stc
outsl
jmp
pop
int3
popf
pop
addr16
fdivrl
mov
sub
in
out
inc
inc
lods
xlat
mov
setne
lea
push
repnz
mov
sbb
dec
and
nop
ficompl
lock
scas
outsb
test
cmp
fstps
jmp
sbb
mov
sbb
mov
test
outsb
adc
adc
mov
add
sub
fidivrl
popf
sbb
mov
xchg
pusha
test
mov
pop
sub
add
jp
cmp
lds
daa
cmc
pop
sahf
push
imul
fnstenv
fucomi
scas
insb
daa
jb
movsl
pop
add
lret
xchg
std
xchg
and
push
arpl
push
outsl
jg
inc
shll
lods
cmpsl
push
jecxz
dec
insb
ds
mov
faddp
pop
fnstsw
xchg
mov
jge
fstpl
sub
test
push
jbe
add
mov
inc
in
rclb
or
outsb
mov
cmpsb
mov
mov
mov
ror
lcall
pop
loope
stos
clc
enter
push
add
out
xorb
pop
data16
aaa
sbb
pop
fidivl
nop
inc
lahf
clc
sub
shrb
int
cwtl
out
inc
push
push
aas
inc
adc
sbb
mov
hlt
push
adc
int3
fwait
mov
inc
push
lahf
ljmp
jno
xchg
ret
hlt
sbb
push
xor
cmpsl
sbbb
lods
stos
jle
ljmp
lahf
and
popa
or
push
mov
and
jns
mov
ss
imul
fs
mov
dec
fadds
xchg
sbb
push
in
aam
lret
shll
pop
ret
lock
int
sub
int
pop
xlat
pop
push
das
add
int
push
mov
jle
loop
fiadds
mov
add
jnp
pop
jbe
push
fiadds
mov
inc
mov
icebp
add
outsb
subl
jno
insb
lcall
icebp
xchg
pushf
mov
dec
jno
xor
cmpsl
popf
push
in
movsb
ficomps
add
and
mov
mov
xor
in
mov
mov
sti
jo
pop
hlt
jae,pn
xchg
jae
cmp
mov
pop
pop
outsb
sub
scas
and
repz
scas
daa
imul
lock
js
dec
shlb
enter
mov
cmp
pop
int3
or
adc
out
xor
and
push
rolb
int3
adc
jne
sbb
scas
jl
outsl
xchg
out
aaa
testb
movsb
pop
xor
push
mov
adc
sub
mov
inc
xchg
xorl
mov
andb
sub
sbb
fstp
fs
and
cmp
inc
lock
aaa
mov
popf
sti
push
rolb
push
aad
add
pop
jo
aas
mov
scas
mov
movsl
fldenv
jns
push
cmp
lret
mov
popf
inc
xor
shrb
sub
pop
jo
js
lock
jae
xor
int3
pop
jecxz
mov
lods
inc
fnstenv
dec
jge
cmpsb
mov
xchg
xor
enter
arpl
cmp
push
adc
add
out
or
and
mov
in
dec
cmp
xor
repz
sub
xchg
in
inc
shll
fstl
push
mov
xchg
fsts
mov
pop
in
jp
jb
lret
lods
mov
scas
arpl
iret
sub
enter
mov
ja
jo,pt
mov
pop
nop
in
sub
dec
xchg
pop
popa
inc
push
jo
or
cmp
xor
adc
xchg
aad
sti
mov
loopne
jb
adc
les
cmp
jge
push
ljmp
lods
push
es
test
mov
mov
mov
leave
jge
sub
aam
and
aad
xchg
xchg
push
mov
inc
lahf
mov
adc
cmp
mov
mov
negl
pop
adc
sbb
ret
fmul
lods
test
dec
icebp
mul
jne
fistl
lea
dec
xchg
or
push
push
fnstsw
cmp
test
add
cmpsb
sbb
pop
mov
jge
xor
xor
adc
adc
dec
push
inc
ljmp
cmp
xchg
or
add
inc
aaa
add
and
mov
ja
fisubrs
test
repnz
lret
mov
bound
mov
in
dec
sub
jg
xchg
cmpsb
sub
push
push
sub
ljmp
test
lds
movsl
cmp
jb
and
sub
jle
mov
js
xor
cmp
add
pop
cmpl
sbb
xchg
inc
mov
xor
jb
shlb
ljmp
fdivrs
pop
gs
xor
movsl
push
or
fstpt
fwait
out
daa
sub
insb
mov
dec
xor
aaa
popa
lock
fsub
jne
in
push
dec
pop
mov
insl
into
add
pusha
pop
xor
outsb
pop
dec
mov
jno
push
inc
sbb
loope
jecxz
adc
clc
insb
jae
xchg
mov
fldt
ss
jp
fnstcw
mov
jl
push
cmp
mov
adc
mov
xor
movsl
push
xchg
rcrl
loope
mov
sub
insl
cmpsb
loope
mov
out
mov
inc
mov
popf
add
xchg
jg
adc
sbb
jmp
or
daa
addr16
inc
rcr
xor
mov
enter
mov
test
xor
addr16
loop
aam
cli
aaa
inc
mov
adc
loop
jge
cmp
and
mov
cltd
adc
or
insb
push
les
dec
and
lds
lock
sbb
add
fmul
dec
pop
nop
sbb
lret
pop
mov
push
jae
push
scas
lock
pop
adc
mov
or
push
inc
pop
lods
pop
push
pop
in
mov
inc
fwait
mov
cwtl
js
adc
fbstp
fbld
sub
jge
add
iret
hlt
outsl
xor
stos
imul
mov
adc
lcall
push
pushl
loop
dec
xlat
adc
dec
leave
in
xor
add
dec
jnp
xor
push
dec
mov
jl
or
dec
push
fldt
sbb
into
and
and
push
mov
stc
cmp
and
sbb
daa
ja
fsts
rcrl
hlt
push
out
mov
push
cmp
testl
sub
mov
cmp
pushl
imul
ds
xor
add
mov
enter
jecxz
mov
jb
addl
jg
push
fsubs
fiaddl
dec
push
imul
jle
pop
mov
rcl
lcall
sub
and
inc
or
mov
and
in
xchg
fidivrs
xchg
push
pop
test
jo
fwait
addr16
push
mov
decb
xor
vmovaps
push
dec
xchg
xchg
mov
sbb
hlt
orb
inc
movl
adc
outsl
sbb
inc
mov
dec
cli
mov
in
mov
mov
mov
pop
or
std
lea
mov
out
mov
incl
adc
mov
lcall
stos
call
cwtl
stc
rcll
push
repnz
inc
lret
enter
or
repz
mov
ror
aas
and
flds
jns,pt
jp
into
popa
cmpsb
repnz
scas
xor
xor
shlb
sub
inc
or
xadd
mov
loopne
mov
hlt
adcb
cmp
dec
jns
mov
and
or
in
and
out
rcrl
movsl
cmpsb
in
dec
cli
mov
out
cmpsl
cmpsb
dec
adc
fimuls
es
inc
dec
xor
imull
push
xchg
std
fists
cmp
pop
lock
xchg
mov
aam
xor
push
jg
pop
ljmp
pusha
movsl
mov
sbb
xor
in
lahf
addr16
jg
fcoms
inc
push
push
fistpll
jl
leavew
sub
leave
push
add
jp
ret
repnz
inc
sbb
aaa
mov
jnp
orl
aad
loope
stos
movb
push
inc
mov
mov
mov
xchg
pushf
sbb
mov
xchg
into
xchg
or
lret
push
push
mulb
push
xor
cmpsb
call
adc
adc
rclb
popl
popf
std
test
fnsave
push
out
rolb
and
mov
mov
js
cwtl
or
lock
movsl
pop
lods
xchg
inc
mov
jecxz
insl
xchg
push
bnd
dec
xchg
or
lahf
cld
xchg
test
add
sahf
je
dec
dec
and
arpl
lods
data16
sti
mov
icebp
xor
nop
jge
loopne
push
add
jne
xlat
ja
aaa
inc
and
jmp
push
les
mov
movb
jge
aaa
inc
mov
jmp
adc
pop
daa
addr16
xchg
dec
dec
xor
xor
xor
jae
leave
sub
repz
out
xorl
cld
fs
cmp
mov
sub
jnp
mov
and
xchg
out
adc
stos
rorl
sub
pop
jns
dec
sub
repz
or
fists
sti
pusha
movsb
dec
lahf
stos
mov
push
add
xorps
xchg
mov
jmp
loop
shr
mov
outsb
iret
add
xor
std
mov
outsb
insb
xor
nop
stc
lock
dec
loop
loope
lret
mov
push
fwait
push
dec
jmp
int
mov
push
int3
xchg
sbb
iret
pop
sahf
loop
xchg
mov
jl
push
add
xchg
mov
pushf
sub
xchg
and
scas
mov
mov
fucomip
sub
mov
or
ret
xchg
and
pop
xchg
pop
imul
mov
addr16
in
inc
fisttpll
in
loope
push
insb
daa
clc
mov
pop
or
cmp
push
int
mov
push
pusha
aaa
hlt
or
fcoms
scas
sbb
adc
bound
fsubp
daa
xor
repz
add
out
aaa
int3
call
fnstsw
jmp
push
mov
jnp
pop
push
out
ret
xchg
test
repz
stc
shrb
push
dec
cmp
rolb
xchg
mov
arpl
mov
or
gs
leave
fsts
pop
and
mov
push
cmp
add
divl
rorb
mov
loop
lock
adc
xchg
xor
das
leave
push
int3
inc
hlt
scas
insl
dec
sbb
mov
mov
hlt
cmp
in
pushf
pop
subb
adc
fdivs
movsl
shlb
sub
das
pop
sahf
jno
cmp
fimuls
out
jecxz
pop
push
mov
es
xor
arpl
pop
pop
sbb
adcl
ja
push
loop
nop
lods
cmp
lock
fnstenv
xchg
movsb
or
xor
pop
xchg
jo
adc
jle
jnp
dec
jb
inc
cmp
mov
cmp
dec
in
inc
xchg
adc
pop
jl
mov
jb
inc
loope
add
adc
push
xchg
xor
ss
mov
mov
outsl
fimuls
test
sahf
add
stos
dec
push
ja
dec
inc
in
and
mov
push
jmp
sub
adc
xor
xor
outsl
inc
adc
push
lds
sub
mov
add
sahf
push
cmp
pop
jns
clc
or
std
inc
push
test
cmp
mov
sbb
out
loope
test
loopne
stc
jno
push
dec
out
cmp
loop
mov
sbb
test
sbb
loope
rcl
sar
and
and
aaa
cmp
pop
test
inc
and
mov
and
jle
mov
out
fstpt
adcb
dec
push
adc
into
outsb
cmpsb
fnstcw
sbb
jp
popa
in
xor
adc
fwait
rclb
fimuls
push
lret
orb
aam
movsb
mov
push
pusha
std
add
dec
pushf
pop
xchg
int
rclb
cmp
mov
icebp
add
fstps
mov
inc
jmp
jle
mov
in
aad
cs
out
sbb
das
inc
inc
nop
cmp
push
bound
cli
clc
js
and
cmp
psubd
inc
pop
cli
push
mov
jmp
clc
lea
incl
imul
sbb
lock
pushf
mov
xchg
mov
xchg
lods
xchg
xchg
sub
stos
xchg
pop
mov
and
and
lret
dec
mov
push
sub
dec
stos
xchg
cmp
daa
mov
pop
adc
into
inc
and
fnstcw
pop
add
stc
adc
xor
imul
divb
dec
push
mov
cli
jge
sub
test
xor
sub
xor
sbb
inc
xor
xchg
mov
xor
lea
test
cs
sahf
sub
cmc
mov
adc
cs
fistpll
cmp
jg
xor
das
sbb
cmp
lock
incl
div
push
jne
mov
testl
out
adc
leave
mov
data16
mov
lret
lret
push
es
fsubr
mov
out
sahf
std
nop
test
popf
mov
repnz
pop
mov
shld
xor
lcall
mov
je
xchg
jb
sbbb
popa
cmp
pusha
sar
adcl
mov
out
jg
dec
or
clc
shlb
faddl
inc
orb
in
jae
nop
cli
mov
inc
xchg
adc
mov
lret
jle
rcrb
add
addb
sub
push
mov
pushf
call
push
ds
mov
jmp
in
jg
pusha
neg
mov
in
in
pop
sub
pop
fdivrs
and
xchg
pushf
xchg
imul
inc
test
fs
or
mov
loopne
pop
push
fcmovbe
jbe
andl
ror
xor
mov
and
outsl
ja
nop
addr16
jo
gs
xor
arpl
int
pop
mov
inc
into
shr
iret
jg,pt
jns
push
jmp
sub
stos
daa
pop
orb
cmp
sti
and
mov
aaa
and
dec
inc
pop
das
xchg
test
jg
leave
and
ret
jge
fstps
imul
popa
int3
push
fs
sub
adc
ds
jbe
pop
dec
jmp
cmp
dec
adc
in
cltd
loope
sub
fisubl
mov
je
push
jecxz
mov
pop
mov
das
ja
test
cwtl
arpl
mov
incl
pop
or
pop
outsb
fadd
cltd
xchg
outsb
in
ss
roll
jne
pushf
aaa
lock
jno
idiv
sti
stos
cmp
je
jno
subl
out
or
push
adc
aad
mov
mov
mov
inc
and
dec
cld
sbb
dec
into
cmpsb
rolb
mov
cld
and
dec
or
movsb
mov
imul
and
aam
sub
mov
icebp
sub
push
or
push
mov
push
jne
add
push
cmpl
popa
addb
dec
push
mov
cmp
dec
jecxz
test
and
xchg
sub
stc
mov
jnp
xchg
or
push
push
imul
xchg
arpl
movsb
xlat
dec
stos
mov
sbb
ljmp
loop
inc
inc
cmp
mov
int3
out
enter
in
call
dec
fs
sti
out
jg
jl
mov
les
and
mov
xor
xchg
stos
push
mov
add
ljmp
or
test
cmp
imul
jb
inc
les
pusha
xor
jge
lret
jge
mov
mov
fidivrl
js
sub
jle
cmp
out
jl
in
int3
push
mov
push
mov
and
xchg
push
test
mov
sub
out
in
cmp
mov
pop
clc
out
int3
dec
mov
sub
inc
add
add
repnz
cs
nop
xchg
leave
jmp
bound
mov
xor
mov
sub
sub
ret
testl
inc
push
pop
orb
lock
mov
push
jae
test
out
dec
or
mov
leave
lahf
lods
mov
jo
mov
movsl
out
mov
mov
fwait
sti
xor
mov
cltd
daa
mull
mov
mov
add
cmp
in
jl
push
sbb
add
inc
fnstsw
scas
imull
and
mov
or
jmp
push
orb
push
rcr
push
clc
out
pop
dec
mov
push
push
mov
stos
lea
popf
in
dec
ror
cmp
dec
scas
xor
icebp
out
sbb
mov
ljmp
jp
cmp
fistps
and
xlat
out
mov
xchg
xchg
ret
sti
xor
cltd
mov
aam
pop
xchg
add
ds
or
mov
adc
loopne
das
iret
out
push
mov
inc
jae
test
aad
and
aaa
je
mov
lret
pop
push
out
leave
or
int
xor
and
icebp
orb
outsb
mov
mov
fidivl
pop
lahf
xchg
jnp
jg
iret
cmp
sahf
fildll
ret
mov
inc
add
or
push
lds
outsb
jae
push
andl
adcl
push
pusha
ret
repnz
push
sahf
cmp
in
push
pop
xor
fs
int
into
push
maskmovq
imull
cli
stos
jp
mov
loope
xor
mov
or
test
xchg
sub
mov
je
jecxz
lahf
stos
enter
cmp
jp
loop
push
adc
shll
push
roll
int
pop
xor
sti
gs
pusha
fdivrp
sbb
mov
push
pop
ret
stos
mov
mov
inc
jae
pop
cmp
fdivrs
sarb
repnz
and
sub
stos
jmp
push
or
stos
mov
test
cmpb
outsl
rol
push
xchg
mov
pop
xor
stos
inc
jg
icebp
jae
pop
bound
jne
test
in
pop
pop
inc
jle
mov
mov
ss
stc
mov
push
mov
imul
ja
pop
pop
mov
mov
cmpb
lcall
loopne
stos
hlt
jns
lds
fistpll
testb
cmpsb
stos
pop
push
push
sahf
sti
imul
jge
add
scas
pop
jnp
lods
sub
mov
scas
fs
rorl
outsb
mov
negl
or
jnp
inc
mov
call
push
xorl
loop
enter
out
sbbb
imul
dec
scas
fists
adc
cli
mov
mov
push
dec
imul
pop
mov
pushl
sbb
lret
adc
out
fstps
and
or
addr16
roll
mov
add
ljmp
outsb
xchg
cmp
loop
mov
loopne
sub
cmpsb
cs
repz
pop
lds
mov
pop
cmp
cmp
inc
sbb
push
dec
iret
xor
xor
jbe
sahf
mov
popa
out
or
test
or
mov
call
inc
jo
jmp
bound
fdivr
andb
pusha
mov
push
test
bound
add
dec
or
jle
fsub
sbb
int
ret
icebp
test
daa
jne
repnz
test
sbb
xchg
rorb
dec
clc
push
push
jne
and
mov
xor
inc
ficoms
xchg
adc
sub
jns
leave
nop
ljmp
movsl
jmp
mov
pop
fcmove
cmpsl
inc
mov
ficoms
mov
lea
std
aad
inc
adc
push
cmp
pop
lods
mov
jle
sbb
lock
jae
adc
jge
mov
lods
inc
sub
dec
pop
jnp
cmp
in
cmp
jecxz
dec
xchg
dec
mov
mov
and
fs
mov
lret
jle
add
add
xor
ja
push
rorb
xor
adc
sar
dec
pop
lods
mov
add
movhps
ljmp
sub
pop
mov
adc
xchg
push
xor
sbb
es
sub
adc
xor
xor
pushf
push
imul
adc
dec
dec
push
inc
stc
pop
lods
and
lcall
fwait
rorb
add
les
cli
mov
icebp
fsubrp
sbb
fimuls
aas
mov
push
sub
mov
imul
shll
xor
or
xchg
pop
test
or
adc
ljmp
dec
psubsb
jp
fwait
addr16
and
icebp
out
lret
cli
ljmp
fistl
pop
insb
ds
call
cmp
aaa
inc
pop
pop
bound
fsubrp
add
pop
hlt
int3
xchg
cmp
test
es
sbb
xor
in
fcoml
mov
and
loopne
mov
and
repz
adc
aad
hlt
seto
jl
or
pusha
xchg
mov
gs
mov
push
iret
inc
ret
mov
dec
cmpsl
lahf
mov
dec
scas
mov
or
pushf
aaa
arpl
mov
pop
inc
pop
int3
sbb
inc
stos
and
fisttpl
mov
mov
in
adc
pusha
inc
jns
sbb
jp
stos
clc
mov
cltd
sbb
push
sbbl
dec
test
iret
movsl
bound
lahf
or
lods
mov
call
imul
mov
sbb
popf
imul
sbb
inc
jmp
pop
out
scas
xor
pop
cmp
popf
lods
dec
mov
leave
inc
outsl
mov
jl
jmp
hlt
stc
ret
jns
dec
aad
mov
xor
lahf
sub
idivb
fidivs
aaa
sbb
xchg
xchg
pop
dec
incl
xchg
ljmp
xchg
shrl
mov
add
inc
stos
jae
gs
lock
inc
add
add
fsts
lods
jae
addr16
lret
and
daa
outsb
stos
dec
xchg
iret
and
cltd
sbb
ds
inc
enter
dec
jb
sub
dec
aaa
or
mov
fistpl
fildl
push
gs
ja
lods
sub
mov
ret
rclb
adc
ljmp
inc
sub
aad
xorb
mov
arpl
jmp
mov
or
push
std
mov
dec
inc
cwtl
roll
sti
dec
mulb
sahf
dec
mul
scas
dec
movsl
push
xchg
cmp
pop
jae
inc
push
mov
inc
jge
add
mov
and
hlt
arpl
adc
mov
sti
mov
mov
out
insb
and
daa
mov
mov
dec
sbb
sbbl
jmp
mov
sbb
pop
push
cmpsl
cmp
add
fcmovu
mov
insb
scas
loop
dec
pop
jg
lret
call
bound
cli
adc
jg
hlt
jl
adc
popf
outsb
shll
aad
in
test
cwtl
jae
dec
mov
jo
jno
or
gs
fnstcw
in
pop
push
xchg
repnz
imull
ss
or
cmp
dec
insl
adc
add
cmp
mov
stos
push
pop
test
and
mov
movsb
jb
out
mov
sub
icebp
mov
test
lahf
int
pop
sar
call
sbb
mov
sbb
xchg
stos
and
call
push
and
cmp
sahf
mov
int
fwait
pop
cmpsl
lods
sbb
pop
push
pop
pop
push
pop
or
mov
jae
loope
add
and
addr16
jno
sahf
inc
fdivrl
fwait
mov
iret
adc
mov
fwait
xor
inc
push
push
cmpb
pop
mov
push
sub
inc
jns
in
aam
outsl
xor
dec
ds
mov
inc
pop
out
jns
mov
out
cmp
in
rcrl
and
pop
imul
dec
cmp
mov
add
fwait
mov
lahf
outsl
or
pop
insb
adc
aam
stc
imul
jo
adc
out
inc
xlat
pop
dec
mov
cmp
ljmp
addr16
test
pop
dec
fdivl
mov
cmp
lret
jb
sbb
sbb
xor
outsl
test
xchg
je
sub
jp
sbb
scas
ss
insl
call
or
repz
xchg
outsb
loop
jmp
and
cmp
lret
in
push
fsub
mov
scas
es
jl
cmc
scas
test
dec
cmp
lock
iret
inc
lahf
xor
jbe
ret
adc
lret
adc
cltd
loopne
pop
jmp
lcall
mov
jae
cmp
xor
fwait
scas
dec
jge
out
jecxz
in
jo
xchg
outsb
icebp
imul
mov
movsb
cmp
jnp
test
out
in
pop
popa
add
movsl
mov
pop
ljmp
icebp
lret
cwtl
add
jbe
pop
xor
mov
std
xchg
rolb
mov
sbb
sti
pop
cmp
xor
jecxz
outsb
aaa
mov
icebp
inc
mov
lret
or
inc
push
std
fisttpl
push
hlt
adc
shl
adc
add
push
outsl
sti
movsb
mov
push
imul
adcl
fs
scas
in
pushf
popf
les
cmp
fdivrl
push
iret
movsl
push
jl
or
mov
dec
cwtl
popa
jge
or
sarl
clc
in
in
push
jge
jnp
call
cltd
or
cmpsb
in
jo
cmp
dec
stos
mov
jl
aaa
and
mov
lea
popf
pusha
mov
mull
mov
pop
mov
inc
inc
iret
lods
inc
xchg
stos
dec
jo
xor
or
ficoms
jmp
dec
repnz
cmp
dec
inc
dec
les
adc
fs
scas
mov
push
inc
outsl
aam
les
into
nop
push
push
notb
dec
lock
cmp
clc
scas
mov
pop
xchg
xchg
in
push
mov
int3
test
pop
out
sub
test
cwtl
push
sti
push
outsl
adc
push
dec
adc
add
jns
inc
or
shlb
sub
andl
push
data16
cmp
fwait
push
and
mov
je
je
push
pop
inc
loop
call
push
cli
mov
rcll
inc
lret
xchg
jge
pop
lahf
sub
sbb
pop
orl
or
and
stc
xchg
cmp
aad
mov
sub
cwtl
push
insl
dec
cmp
pop
pop
jae
das
dec
inc
pop
mov
cmc
jb
jns
aas
push
fwait
mov
popf
xchg
pushf
cmp
xor
es
popa
inc
sbb
pop
test
imul
test
in
hlt
sahf
sbb
in
test
stc
pushf
in
xchg
pop
rclb
cmp
call
addb
lods
bound
dec
mov
les
in
cmp
jp
cli
sbb
orb
out
scas
in
jae
movsl
pop
add
outsb
imul
nop
bound
fistps
add
cmpsb
fistl
rcrl
sub
enter
lret
into
decb
and
pop
push
push
inc
es
sub
bound
sahf
push
push
rorl
mov
repnz
or
mov
add
insl
push
adc
lea
mov
jp
adc
push
sub
test
aad
push
inc
cmp
fsub
sahf
jbe
shll
xor
cwtl
subb
inc
lcall
pop
xor
stos
inc
call
mov
push
lods
mov
inc
shll
push
jl
push
jae
fnstenv
insl
inc
xchg
gs
insb
sbb
mov
lods
xor
pop
inc
test
fiadds
xchg
mov
cmp
xchg
or
jo
add
aam
lret
mov
adc
mov
test
mov
arpl
pushf
gs
pop
sub
xor
sub
das
jge
cmc
pop
jg
xor
mov
inc
push
mov
je
xchg
mov
mov
mov
dec
jnp
repz
lcall
in
in
inc
fcoms
sub
xchg
sub
inc
pop
sbb
cmpsl
sbb
fisubs
mov
out
xchg
dec
cmc
cmp
cmpl
add
jne
cmp
mov
rcr
mov
or
jnp
aaa
or
sub
aam
cmp
dec
xorb
adc
mov
mov
adc
mov
xor
mov
add
or
xor
sarl
sbb
outsl
in
jae
lods
xor
lods
rcrl
pop
sbb
rclb
mov
sub
xor
cli
xor
and
adc
int3
stos
and
ja
mov
test
xor
test
pop
xchg
sahf
mov
and
sub
xor
mov
imul
icebp
mov
inc
inc
movb
cs
sub
inc
shll
adc
push
pop
push
push
insl
ja
push
mov
outsb
sti
out
imul
fwait
mov
aad
js
rorb
xor
nop
push
mov
insb
es
lret
lahf
xchg
jno
imul
push
adc
sbb
sub
adc
mov
add
aad
popa
cmp
gs
mov
bound
jp
adc
icebp
jle
inc
dec
mov
stc
xchg
push
out
popf
loop
bound
inc
xchg
icebp
insl
ret
fwait
sarb
jp
xor
jle
arpl
jo
into
les
incl
out
push
stos
jle
pop
sahf
cmp
in
stos
cwtl
stos
lret
sbb
pushf
jne
xor
inc
mov
mov
aaa
and
in
lock
or
outsl
fldcw
sbb
inc
inc
fadd
aam
xchg
lret
cmp
gs
xchg
cld
dec
lods
xchg
loopne
mov
mov
outsl
lods
aas
insl
add
sbb
pop
mov
inc
mov
ljmp
mov
ret
adcb
sub
rcll
fdivr
jb
clc
pop
add
loope
sbb
mov
mov
dec
jmp
sub
dec
cmp
push
setge
dec
cmp
icebp
scas
and
jns
mov
push
and
dec
sub
lock
notb
mov
cli
jbe
repnz
mov
sahf
roll
push
aam
adc
test
lock
push
mov
mov
or
pop
daa
aad
dec
add
int3
std
lret
mov
dec
lods
jmp
mov
xlat
xchg
cmc
cmp
ja
aaa
iret
xor
rep
jmp
inc
and
xchg
rcrb
das
iret
in
ljmp
mov
inc
pop
xchg
push
jns
popa
aas
add
cmp
push
jge
movsb
jo
sbb
cmpb
iret
fnstenv
or
sbb
clc
lret
cmpl
dec
xchg
sbb
cltd
lcall
or
inc
arpl
pop
enter
xor
repz
xchg
pop
divl
dec
mov
pushf
and
mov
and
in
inc
shlb
imull
jle
add
sub
or
mov
fiadds
lahf
mov
inc
js
xor
or
push
inc
das
adc
mov
push
pop
mov
adc
dec
test
adc
fdiv
mov
scas
push
or
sbb
push
call
dec
cmp
xor
adc
lcall
inc
or
movsb
into
mov
in
adc
lock
mov
sub
call
into
rorl
andb
add
xchg
xor
sbb
clc
xor
stos
fsubs
xchg
cld
cmp
call
clc
mov
popf
lret
movsl
rorl
cmc
bound
pop
test
les
push
mov
push
subb
mov
push
inc
mov
loopne
mov
lret
test
lods
ret
cmp
enter
imul
inc
push
je
loop
adc
loope
iret
push
fcoms
cwtl
jge
add
and
push
mov
jnp
sub
repnz
ss
mov
or
popf
fsubrs
jecxz
jmp
pop
jecxz
mov
fadds
jge
in
sbb
stos
movsb
pop
out
mov
fstp
fwait
pop
imul
mov
cwtl
stos
gs
mov
je
adc
xor
mov
std
jl
mov
shll
xchg
je
pop
aas
aaa
enter
das
xchg
sub
sbb
sbb
pop
add
leave
push
fnstenv
or
xlat
xlat
pop
push
cwtl
and
repnz
lock
adc
sahf
xchg
cld
cmp
sbb
insb
dec
adc
push
mov
jge
xor
xchg
jo
mov
pop
mov
add
or
test
xor
test
adc
lods
mov
mov
mov
xchg
xchg
mov
cli
push
mov
and
jmp
pop
out
lods
adc
sub
icebp
dec
add
mov
pop
in
pop
cmpsl
xchg
pop
sub
icebp
scas
scas
push
jp
fistps
or
jb
cld
mov
loopne
jmp
gs
xor
frstor
push
pop
jnp
push
bound
xor
fdivs
cmpsl
mov
insl
jne
jb
sbb
jge
xchg
pop
ja
rorb
pop
inc
mov
aaa
test
cltd
mov
popa
jmp
dec
cmp
add
fisttps
add
mov
pop
outsb
adc
sub
clc
pop
daa
pop
arpl
out
cltd
mov
jl
push
cltd
mov
mov
xchg
cmpsb
out
inc
or
adc
jge
adc
rclb
mov
push
pushl
jmp
mov
aam
mov
mov
and
push
mov
xorl
xchg
xlat
rol
adcb
lea
and
pop
xor
sbb
test
jp
dec
push
int3
sahf
sbb
cltd
add
pop
leave
popf
sub
cmpsl
jp
and
pop
and
sub
push
jbe
subl
in
push
pop
and
arpl
pop
int
pop
dec
fsts
in
pop
xor
sub
loope
mov
adc
mov
add
inc
icebp
xor
sbb
lret
test
xchg
pop
std
push
mov
data16
shlb
daa
pop
jmp
ja
push
xchg
int
sbbl
scas
cmpsb
int
xchg
aaa
orb
int
xchg
sbb
pop
leave
jl,pt
mov
push
push
pop
pop
jo
test
and
mov
mov
out
stos
jp
shlb
cs
xor
fildl
out
stos
test
pop
and
fwait
mov
dec
aas
fistl
into
cld
mov
sub
sahf
inc
out
fs
lret
in
push
adc
fists
stos
lret
and
push
or
test
cwtl
mov
in
xor
insl
jbe
and
out
das
cmp
test
cwtl
daa
sbbl
dec
cmp
pop
pop
sub
setns
out
mov
cmc
test
aas
xor
pushf
jne
out
xchg
inc
rorl
stos
mov
lret
clc
outsl
and
jmp
or
xchg
repz
adc
mov
cmp
xchg
push
adc
mov
in
xor
sbb
daa
popa
std
xchg
repz
xchg
sbb
or
pop
in
arpl
jae
ret
adc
adc
iret
xchg
adc
and
enter
stc
push
fdivrs
pop
adc
out
scas
sub
jbe
lods
shrl
lods
xor
cmc
and
test
fwait
sbb
mov
pop
fldl
jg
loopne
adc
xchg
fildl
sete
negl
add
das
xchg
jg
jns
out
mov
push
cmp
jne
jb
cltd
xor
insl
lahf
sub
sarb
xor
push
inc
push
jmp
loopne,pt
fldln2
sub
xchg
pop
pop
push
sub
pop
inc
pop
enter
inc
mov
lods
and
jp
in
xchg
jmp
inc
repz
fsts
mov
sub
xor
pop
sub
mov
out
cmp
aas
or
test
jb
mov
sub
enter
adc
lock
dec
leave
loop
and
scas
cmpsl
lods
jp
nop
sub
xorb
popf
stos
jae
push
xchg
in
pop
push
fsts
aad
adc
mov
aas
lret
jge
xchg
sub
cs
add
cmp
mov
mov
je
push
jecxz
add
iret
mov
mull
shl
mov
sub
xchg
jl
inc
adc
xor
insb
xchg
fbld
cmp
add
ret
mov
lds
xchg
or
fdiv
icebp
fidivl
add
push
repz
ja
pop
cmpsl
jno
or
push
or
pop
idiv
aam
jne
cmpsl
dec
out
outsb
mov
lods
xchg
gs
mov
dec
push
lods
ret
mov
mov
fstl
adc
xchg
jno
mov
or
in
pushf
subl
enter
daa
scas
daa
xchg
ret
popf
lcall
xchg
std
std
push
mov
divb
nop
repnz
pop
mov
add
stos
les
les
push
fs
psllq
jno
adc
out
push
daa
mov
daa
adc
and
mov
dec
nop
pop
jno
into
lock
pop
or
or
rcrl
xchg
imul
cmp
inc
cmc
xor
outsb
sub
mov
mov
xor
into
xor
shlb
cld
popa
fcoms
lods
add
lret
mov
mov
stos
ljmp
or
jo
lods
lds
push
lcall
lock
xor
and
jb
repz
mov
daa
test
js
iret
and
xorb
pop
loope
push
lock
mov
or
imul
stos
push
inc
dec
cwtl
push
lds
dec
sbb
fcom
test
daa
push
xor
inc
sbb
push
sbb
ret
and
clc
int3
aam
emms
jle
cmpsb
ret
dec
insb
sub
in
sahf
bound
dec
push
pop
mov
jg
xorb
lea
xchg
add
cmpsb
mov
out
push
incl
adc
cmovs
mov
scas
dec
lods
jecxz
push
xlat
insb
jnp
and
imul
jno
fisttpll
sub
push
sub
cmpsl
cs
cmc
fcompl
sbb
xchg
loop
mov
xlat
icebp
mov
icebp
iret
xchg
lcall
div
adc
or
jo
and
xlat
mov
or
test
rcrl
aam
sbb
stos
jge
pop
pop
push
lcall
xor
insl
andl
fldenv
or
add
sbb
mov
dec
loope
or
cmp
jae
pushf
push
cli
leave
je
push
sbb
xor
xor
cmp
push
lods
fisubs
mov
pop
dec
push
cmp
pop
movsl
loope
outsl
sub
cwtl
scas
mov
jo
and
subb
pop
push
xor
subb
les
sub
fcomps
cmp
push
cmp
jle
sti
cmp
pop
lcall
hlt
aad
les
iret
out
jmp
dec
movsl
stos
mov
lock
mov
mov
fs
fs
xchg
adc
ja
jmp
jbe
inc
pop
sbb
jle
mov
shll
mov
adc
in
sub
test
mov
mov
ljmp
or
jno
add
mov
bound
push
cmp
fabs
xchg
add
jb
or
shrl
clc
pop
testl
and
dec
push
sbb
push
mov
adc
imul
jmp
ja
jle
lret
mov
inc
jb
ss
rclb
fisubrl
push
push
cmp
clc
adc
ds
int3
and
test
push
adc
jno
xor
imul
inc
or
push
pop
cwtl
push
fcomp
pushf
mov
add
pop
cmp
and
jnp
sub
mov
fwait
lods
cmpl
xchg
mov
shl
sbb
call
lahf
movsl
pop
cltd
test
and
icebp
cmpsl
jl
xor
arpl
in
sti
out
fs
in
test
pop
repz
jnp
in
inc
sarl
mov
sbb
ficompl
sbb
cmpsl
ds
in
pop
cmc
push
mov
xchg
sbb
xchg
arpl
mov
push
mov
fistps
jmp
loope
ret
dec
data16
or
pop
pop
pop
lods
xlat
call
pushf
dec
cmp
in
xchg
fnstenv
aas
pop
movsl
mov
rolb
mov
mov
jnp
push
cmc
repnz
mov
push
popf
pop
add
xor
xor
cmpsb
outsl
cmpsl
lea
mov
adc
loop
jo
xchg
cs
in
push
push
pop
rorb
pop
dec
push
jle
mov
lahf
sub
sub
inc
and
inc
push
aad
imul
test
inc
imul
mov
aad
pop
pop
lahf
lods
into
and
pushf
je
sbb
push
test
addr16
out
rcr
lret
and
aaa
data16
pop
shll
push
adc
das
sbb
add
add
std
adc
xchg
pop
jle
push
xchg
sbb
inc
fldl2e
sbb
fistpl
pushf
out
mov
ret
add
add
sub
sbb
xor
pop
add
push
ja
ror
cmp
sub
lds
movsb
shlb
xlat
int3
push
mov
xor
out
into
gs
jmp
ljmp
lods
pushf
cmpb
pop
sbb
jo
pop
cmp
cs
js,pn
sbb
sub
js
xchg
pusha
adc
out
or
and
lret
add
pushf
test
adc
xor
stos
cmp
cmp
bound
jae
sub
inc
push
mov
lods
sahf
movsl
add
xor
stos
mov
aaa
hlt
lods
negb
nop
dec
int
push
nop
lods
pushf
push
jmp
mov
loope
lea
imul
and
out
adc
sub
cmpl
pop
inc
pop
mov
shlb
cmp
push
or
push
int
mov
leave
adc
sbb
js
aas
mov
repz
push
in
pushf
insb
add
cmpsl
sahf
scas
lock
lret
ficompl
out
inc
mov
fwait
jne
data16
inc
pop
lahf
xchg
xchg
daa
rcr
cmp
enter
movsl
or
push
adc
jge
shlb
roll
in
add
mov
cmp
pop
dec
dec
xchg
cmovs
out
mov
sbb
adc
nop
stos
lock
or
push
push
or
fadds
iret
sbb
inc
fisubs
lods
jmp
fisubrs
data16
jp
and
cld
lods
popa
mov
mov
dec
sahf
jge
pop
adc
cmc
call
imul
xchg
ds
inc
xchg
dec
and
lods
es
leave
cld
and
fwait
out
cmp
jg
popa
repz
or
mov
daa
xchg
jl
xor
mov
leave
xchg
sub
jns
je
push
arpl
cs
cs
gs
or
jns
fs
call
movsb
push
push
mov
add
jnp
mov
cmp
push
jbe
and
sarb
add
stos
add
les
dec
jnp
retw
daa
notb
jg
nop
daa
xor
dec
push
jne
push
scas
loopne
add
jbe
dec
mov
mov
lock
dec
pop
cmpsb
sbb
jle
pop
mov
jle
cmp
insl
enter
orl
or
idiv
mov
cmp
sub
jns
dec
jno
movsb
mov
movsb
fldenv
and
cs
sub
sbb
loope
sub
loop
test
xor
outsb
jecxz
loope
cmp
arpl
xor
inc
dec
xorl
aaa
inc
sub
mov
dec
cli
iret
addr16
aad
std
mov
cmp
jbe
imul
lahf
test
mov
aaa
jo
jle
data16
mov
jb
xchg
jno
sbb
into
ret
cmpsl
push
jge
pusha
sub
ret
mov
sub
js
sbb
and
test
adc
mov
push
jb
fstl
pop
roll
inc
add
les
sub
into
mov
shlb
loop
cwtl
jecxz
add
sahf
or
lea
out
and
push
add
hlt
lret
sub
icebp
test
push
enter
pop
adc
adc
insl
cmp
out
inc
stos
leave
les
cli
mov
imulb
hlt
arpl
decb
mov
stc
es
cmp
orl
cmp
cld
jmp
sub
scas
testb
in
flds
add
add
xor
jp
lods
cmp
pushf
rclb
into
aad
jnp
sub
mov
popf
lret
add
mov
mov
outsl
data16
inc
test
iret
inc
inc
and
loop
and
je
lock
xchg
ds
and
pop
subb
iret
adc
aaa
mov
dec
sahf
pusha
jmp
scas
aaa
adcl
mov
pop
in
addr16
pop
xor
enter
and
jae
dec
push
adcb
movsl
adc
xchg
insb
test
jl
stc
inc
push
movsb
jb
sub
mov
ss
add
orb
push
in
sub
es
lods
xor
loope
loop
push
xor
or
pop
inc
insb
lcall
adcb
and
pop
xchg
or
cmpsl
cmp
pop
cmp
mov
popw
cwtl
lret
ljmp
dec
js
insb
pop
and
push
out
xor
push
jne
inc
mov
inc
call
icebp
sbb
mov
scas
jns
mov
lds
cmp
inc
mov
push
or
xchg
sbb
sub
out
cltd
xchg
sbb
pop
aas
or
jle
jmp
xlat
sub
mov
mov
lcall
mov
jns
push
js
xchg
add
inc
mov
das
lods
jno
rcl
and
mov
mov
sub
add
push
cmc
neg
stos
adc
popf
std
sub
and
scas
dec
pop
in
xchg
dec
push
stos
mov
push
sarb
lret
call
push
movsl
dec
adc
xchg
or
jecxz
lahf
pop
dec
push
cmp
sub
mov
mov
jmp
sub
sbb
and
mov
pop
mov
adc
cmp
xlat
mov
aad
pop
dec
fcom
fxch
xor
fstpt
jmp
vhsubpd
adc
mov
dec
rcll
jne
xchg
jge
or
jmp
fcomps
xor
pop
and
roll
cwtl
push
enter
adc
scas
mov
xor
dec
add
scas
jnp
dec
jecxz
jnp
jne
mov
add
jg
mov
cmp
testb
aas
sub
pop
cmp
xor
pop
dec
std
and
leave
mov
add
nop
pop
push
fistpl
lds
call
stos
add
ret
insl
gs
xor
xor
push
and
jl
jg
jecxz
inc
test
pop
add
out
xchg
movsl
addl
shll
mov
mov
movsb
xchg
jmp
int3
dec
ret
loop
jp
dec
inc
fstpt
mov
cmp
inc
pop
push
aam
or
hlt
adc
mov
cmpsb
inc
mov
and
hlt
mov
pop
cmp
lock
call
xor
bound
push
inc
mov
xchg
das
sbb
js
sarl
imul
and
inc
stc
lds
in
xlat
mov
cs
iret
xchg
cmp
shll
rep
lret
push
jle
negl
sbb
or
or
pop
sbb
rcrl
stc
es
daa
sbb
xchg
shrl
std
fiaddl
repnz
pmullw
hlt
out
push
mov
mov
call
in
loope
mov
add
int
out
adc
cmpsb
test
inc
inc
lret
and
mov
push
lods
xorb
lods
hlt
ret
lods
repnz
xchg
cmp
rclb
fldl
jmp
push
adc
inc
push
cmc
leave
cmc
inc
inc
mov
imul
insl
pop
and
add
test
push
arpl
pop
add
in
lret
loope
cmpl
popf
jb
mov
aas
aam
daa
jno
add
hlt
xchg
movsb
imul
and
hlt
mov
add
cmc
push
jl
lock
push
sbb
sub
shr
jbe
push
pop
mov
inc
mov
or
js
inc
pop
aam
push
xlat
or
dec
dec
mov
repnz
jae
or
push
add
in
out
adc
arpl
ret
xor
xchg
adc
test
mov
cli
xchg
int
inc
rol
stc
inc
inc
subb
mov
in
inc
or
hlt
mov
xchg
movsl
movsb
push
xlat
sar
fsub
popf
push
mov
dec
cli
pop
inc
into
dec
push
mov
and
pop
imul
lods
mov
mov
pop
dec
sub
push
js
test
cmpsl
adc
jnp
adc
mov
aad
out
outsb
or
arpl
aam
adc
movsl
mov
add
mov
and
stc
test
sti
inc
je
inc
cld
dec
je
add
loope
enter
adc
cmpsl
mov
cwtl
into
pop
sub
and
scas
and
push
sarl
mov
daa
outsb
lahf
push
dec
push
in
push
pop
test
push
mov
inc
ss
pop
xor
aad
add
aaa
adc
sbb
movsb
dec
inc
fmulp
mov
jle
cld
sub
fistpl
lahf
pop
addl
lret
xor
add
xchg
xchg
cmp
jg
jge
mov
mov
sub
ret
mov
lret
push
lret
fwait
iret
int3
pop
les
dec
lret
push
adc
aas
prefetcht2
xor
fisubl
mov
ss
xchg
add
fdivl
call
xchg
push
push
out
cmp
rclb
hlt
add
js
pop
push
cmpb
xor
xchg
and
lds
mov
lds
ljmp
lret
divb
mov
rcl
aam
outsb
inc
dec
stc
adc
xchg
repz
daa
repz
lret
inc
jle
loopne
ret
adc
iret
xchg
xchg
xor
xchg
out
pusha
sbb
cmp
xlat
pop
and
xor
adc
test
adc
mov
outsb
int3
xchg
scas
ja
inc
imul
lods
mov
stos
sub
neg
cmp
insb
sbb
test
call
push
stos
int
shrb
xchg
int3
or
mov
repnz
mov
dec
pop
add
insb
lock
dec
and
nop
fiaddl
mov
jne
dec
fmull
xchg
jp
mov
xchg
js
add
bnd
mov
jle
andb
frstor
mov
or
aam
ljmp
xorb
adc
or
pop
mov
mov
xchg
mov
inc
sub
scas
pop
add
cld
xchg
xor
fldenv
add
mov
in
jae
or
call
repnz
sbbb
test
imul
shlb
leave
icebp
cld
fldt
in
xchg
cs
stos
cltd
pop
pop
jne
loopne
orl
out
bound
cmp
xchg
insb
addr16
xor
xchg
inc
or
inc
cltd
or
icebp
sub
jge
mov
mov
mov
pop
fnstsw
imul
icebp
mov
lods
add
cmp
push
push
or
loop
sub
xor
jae
mov
jp
dec
mov
mov
cmp
inc
stos
scas
jmp
dec
shll
gs
ret
add
pusha
test
pop
pop
or
fwait
xor
mov
stc
and
jnp
js
cmp
data16
shl
lcall
xchg
push
xchg
jnp
mov
fdivs
jl
ljmp
pop
mov
popf
and
aaa
cmp
hlt
cmp
mov
jne
es
ja
or
sub
stos
int
call
mov
std
xchg
pop
pop
mov
xchg
jp
inc
int
mov
adc
test
xchg
sub
es
imul
mov
adc
jne
aam
mov
js
or
push
add
addr16
jbe
add
push
or
xchg
sbb
push
cltd
push
adc
ret
mov
loop
mov
lret
xor
inc
fwait
movsl
jle
jge
mov
in
cmpsb
insl
scas
mov
jge
rcll
pusha
push
mov
xchg
add
push
inc
add
loop
lahf
xor
lods
movl
popa
xor
mov
inc
lahf
mov
fidivl
push
pop
pop
push
rcrb
sbb
mov
pop
ljmp
loope
or
jo
imulb
dec
mov
daa
dec
test
mov
arpl
cmp
push
xchg
daa
and
mov
pushf
mov
mov
leave
lock
xlat
out
jno
cmp
roll
xchg
xor
or
jnp
fmulp
pop
pop
xchg
into
loopne
jge
mov
inc
mov
out
jmp
push
jg
mov
les
cmpsl
mov
sti
lret
jl
sarl
xchg
lahf
sbb
pop
push
mov
lds
cmp
push
xchg
pop
test
aas
dec
inc
push
dec
testl
ja
add
mov
mov
test
xor
mov
fidivrs
and
cmp
imul
std
lds
pop
pop
xchg
ja
mov
inc
sub
xchg
add
adcb
je
mov
pop
inc
sbb
inc
mov
xor
test
add
sbb
lret
test
mov
pop
mov
popf
movsb
and
jae
hlt
stc
xor
lcall
add
loopne
jmp
mov
xor
outsl
cmp
dec
or
or
pop
aam
out
and
cmpsb
or
lods
push
adc
cmp
fwait
mov
testb
or
jl
jno
jge
sahf
pop
mov
add
xlat
mov
mov
and
aam
or
enter
lcall
adc
pop
in
loope
pop
push
lret
loopne
stc
out
jno
jecxz
push
mov
lahf
mov
mov
lods
cmc
int3
push
mov
xchg
fimuls
add
fsts
dec
clc
push
add
repnz
std
negb
pop
and
cmp
in
xchg
push
popa
push
cld
int3
xor
clc
ss
mov
faddl
sbb
jne
mov
out
mov
mov
or
push
in
testb
int3
aam
hlt
inc
push
pop
not
lea
xchg
addr16
lds
insl
sub
xchg
sbb
loopne
pop
enter
and
adc
xchg
mov
shrb
pop
into
jecxz
pop
loope
inc
sar
inc
test
jge
insb
inc
and
lret
push
xchg
cmc
push
and
clc
jp
mov
lahf
testb
test
inc
insb
dec
mov
testb
push
jne
imul
mov
je
sbb
in
inc
bnd
mov
xor
lock
cmp
lds
dec
and
popa
jecxz
adc
jnp
popl
lret
dec
dec
in
adc
mov
es
sbb
mov
into
loope
push
aas
inc
sbb
movsl
adc
xchg
sub
push
cmp
inc
imul
jle
adc
mov
scas
add
mov
mov
cmp
mov
in
adc
int
aaa
xchg
daa
xchg
clc
adc
mov
mov
xor
add
jle
sub
push
shl
jg
pop
shlb
push
lods
jae
or
aaa
xchg
shl
rol
push
test
pop
loopne
aaa
insb
sbb
aaa
mov
es
jno
notb
xor
pop
xlat
pop
cmc
xor
sub
outsl
jg
sub
mov
jge
jmp
push
ljmp
call
lods
testb
jns
jle
mov
mov
dec
fwait
cmpsb
mov
inc
xor
xor
das
mov
and
and
sub
repnz
inc
in
mov
pushw
out
xor
jae
pushf
arpl
sub
mov
ret
xchg
pop
xchg
add
out
int3
jae
pop
mov
mov
and
mov
mov
push
add
mov
cmpb
addl
int3
push
adc
push
insl
sbb
push
jp
jns
mov
stos
std
ljmp
sbb
stos
lds
push
repz
push
repnz
or
fisubs
in
loope
adc
pusha
dec
cltd
xchg
add
mov
or
jae
cmpsl
mov
pop
adc
ljmp
cmp
fstpl
repnz
fst
inc
push
stc
pusha
mov
jg
jb
ja
mov
subb
xchg
adc
lods
cld
push
sbb
cltd
lret
movsb
dec
jl
movsl
aas
loopne
pop
sbb
stos
mov
sub
sbb
je
pop
repz
xchg
pop
xorl
inc
adc
mov
jecxz
ljmp
xor
out
shll
pushf
inc
jae
movsb
pushf
cmp
add
cmp
and
mov
inc
leave
pop
push
lds
sarl
dec
pop
mov
xchg
xor
loop
in
daa
das
mov
push
icebp
or
cwtl
jg
and
adc
aaa
rorb
xchg
cmp
and
jo
mov
in
mov
adc
sahf
stos
insb
dec
mov
cs
clc
or
and
xchg
loop
or
push
cmp
inc
popf
cltd
cmp
pop
mov
xchg
lcall
fldl2t
cmp
lret
or
movsb
cmp
std
decb
push
sar
movsb
pop
insl
aam
dec
xchg
insb
sub
sbb
cmp
or
test
sub
inc
mov
xchg
test
loopne
push
lods
mov
push
lds
mov
addr16
adc
cli
out
cmpsl
out
and
leave
jle
ja
pop
mov
dec
add
out
in
push
cs
jb
inc
js
jle
popa
rcl
faddp
stos
and
add
enter
xor
cli
adc
icebp
mov
fildl
mov
sbb
and
out
fisubrl
jl
and
iret
sbb
in
add
pop
adc
pushf
sbb
inc
and
popa
push
dec
rolb
mov
jno
cmp
or
and
call
sbb
loope
xchg
lods
aaa
das
imul
mov
sub
div
and
push
fdivl
pop
lret
cmpsb
push
dec
popa
enter
movsl
dec
and
jno
dec
lea
pop
clc
insb
dec
push
lret
popa
and
push
leave
and
mov
test
cmpsl
dec
jo
mov
add
aam
cld
jb
test
mov
mov
pusha
popa
mov
cmc
adc
pop
xchg
addr16
jb
rcl
push
mov
and
mov
lahf
push
mov
lea
mov
cmpsl
inc
ja
or
loope
pop
jb
sub
fst
mov
and
outsl
lock
addr16
xchg
push
icebp
mov
loope
ss
cmpsb
in
xchg
nop
cld
notl
in
adc
stc
mov
insb
xchg
push
cmp
scas
lds
push
insl
cmp
xchg
mov
out
push
jns
xor
push
cs
cmp
jae
loop
enter
lcall
insb
xchg
mov
jno
dec
loop
cmp
dec
sub
sbb
in
ss
nop
dec
jl
sbb
sbb
mov
adc
ret
bound
xchg
ret
lock
mov
add
pop
les
cmpsb
inc
mov
fs
mov
cli
xor
imul
xchg
imul
mov
fsubr
cmpl
and
inc
or
jg
into
mov
int
std
popf
test
js
in
pop
idivl
outsl
retw
jl
aas
push
sub
popf
and
push
pop
push
pop
pusha
sbb
sub
es
leave
jecxz
cs
std
adc
js
ror
fsubl
add
clc
daa
pusha
fists
and
xchg
iret
movsb
mov
lods
add
xor
pop
imul
movsb
sub
sub
pop
imul
or
add
fnsave
xchg
or
adc
lret
rolb
sub
loope
and
fidivrl
xchg
dec
pop
xorb
sub
int
xchg
or
pop
rcrl
loope
push
dec
xor
cmc
dec
mov
pop
mov
adc
or
pop
jecxz
popf
mov
insl
test
mov
push
pushf
adc
out
jno
mov
decl
dec
and
lods
add
mov
test
shll
shrb
stos
adc
push
test
sbbb
add
je
lret
data16
or
mov
pusha
xchg
sahf
and
cltd
int
push
xor
add
cmp
ss
jo
dec
add
mov
cmp
pop
sub
or
jle
mov
fcmovu
xchg
rcll
pop
aaa
mov
push
or
xchg
sub
jp
js
bound
dec
rcrl
pop
fadds
mov
cli
clc
sub
mov
add
sbb
in
test
jns
movsb
or
mov
jae
inc
or
add
inc
fldenv
icebp
push
rolb
or
pop
xchg
decl
cli
ljmp
jge
jle
sbb
mov
dec
mov
mov
imul
xor
lock
mov
cmp
roll
inc
mov
lahf
inc
lret
aas
jge
cld
sti
or
mov
pop
scas
ret
inc
loopne
jbe
mov
and
pop
int3
adc
mov
mov
pop
jne
and
mov
jmp
andps
enter
jno
cmp
sbb
test
fmuls
add
fwait
in
mov
push
idivl
push
dec
add
test
and
int3
sbb
ja
jae
lods
mov
jno
lretw
sbb
roll
aad
cmp
and
insb
cs
add
rcrl
ret
les
mov
push
dec
lret
xchg
and
imul
mov
fstl
mov
in
inc
dec
and
inc
xchg
test
pushf
sbb
xchg
out
inc
aas
or
and
outsb
mov
orb
mov
and
aad
jnp
std
jo
clc
push
lahf
hlt
pop
test
mov
ficoml
fldcw
push
aaa
add
int
inc
test
std
in
mov
pushf
mov
mov
or
push
aam
dec
mov
xor
xchg
shll
shrl
insb
or
push
jae
pcmpgtd
push
and
xchg
or
pop
pop
push
add
push
mov
arpl
mull
mov
popa
fs
sub
pop
push
cs
shrb
push
mov
repz
adc
xchg
push
int3
inc
ret
push
lret
gs
mov
orb
mov
mov
insl
or
jg
adc
sbb
nop
lret
fisubl
aaa
std
jbe
sar
xor
pop
sub
lcall
not
insl
pop
aad
loopne
out
cmc
or
xor
mov
mov
xor
repz
mov
jb
mov
jle
inc
aad
mull
fnop
mov
jmp
movnti
push
in
xchg
mov
mov
leave
dec
adc
pop
out
roll
repz
push
int3
iret
sub
ret
int3
jae
pop
repnz
xor
push
mov
jae
push
sub
sub
outsl
mov
jg
or
inc
daa
inc
mov
and
notb
into
add
or
mov
clc
mov
pop
add
cmp
inc
arpl
xor
xor
fs
ds
xchg
push
cmpsb
loope
popf
fistl
adc
shll
ja
test
in
aas
sub
pop
push
and
fcoms
out
roll
fisubl
out
loop
inc
adc
lahf
sbb
imul
sar
sbb
cmp
int
mov
out
xor
sahf
xchg
push
push
mov
and
dec
out
and
xor
add
mov
js
push
test
sti
push
sub
xchg
push
jnp
arpl
xchg
adc
imul
leave
js
mov
int3
inc
imul
sarl
ja
or
ficompl
scas
jnp
inc
mov
jae
pop
sub
sub
pop
inc
xlat
mov
pop
sbbb
xor
jmp
mov
adc
mov
push
inc
push
gs
or
daa
pusha
push
call
sub
ds
leave
sahf
dec
push
cwtl
pop
mov
and
pop
cli
push
jle
dec
and
into
xchg
mov
mov
fstpt
xchg
mov
sub
dec
into
mov
divl
mov
ds
in
sub
dec
scas
push
outsl
movsb
aam
lods
xlat
inc
pop
test
iret
fdivl
aaa
pop
in
loop
mov
mov
shlb
push
stos
or
jae
cld
mov
ficomps
mov
and
jecxz
inc
adc
mov
aaa
or
and
jno
inc
dec
xor
dec
cs
rclb
cld
int3
rcrb
aad
out
adc
sub
ret
cmp
in
xchg
cld
mov
insb
aas
mov
cmc
mov
into
adc
add
rol
mov
rorl
cld
xchg
lea
addr16
aad
ja
cmp
dec
out
iret
movsb
mov
jmp
cltd
push
pop
push
and
lahf
sbb
loopne
sbb
xor
scas
rorb
mov
pop
mov
add
fidivrl
mov
mov
or
movsl
add
or
mov
add
cmp
jns
sub
arpl
repz
mov
cwtl
mov
rolb
lods
faddl
stos
or
jmp
xchg
mov
pop
xchg
lds
in
or
fnstcw
pushf
iret
push
dec
pushf
mov
cmpb
inc
xorl
insb
sbb
push
cmpsb
adc
ss
jmp
inc
vpminub
andl
jb
xchg
sbb
rcrl
ja
ljmp
addr16
inc
outsb
inc
or
dec
pusha
movsb
mov
sarl
mov
sar
aad
clc
inc
test
sbb
stos
leave
lods
mov
in
dec
cmpsb
push
not
test
push
and
stc
scas
lds
adc
sub
lock
rolb
icebp
dec
cmp
scas
push
and
lock
adc
pop
fidivrl
rorb
popa
in
testb
mov
int
test
ljmp
add
xor
shl
push
nop
popa
mov
sbb
repnz
sbb
pop
std
cwtl
aaa
mov
cmp
jmp
imul
fmull
lahf
out
enter
pushf
ficoms
adc
dec
mov
sbb
xor
dec
and
push
icebp
ds
push
jbe
xor
aad
imul
sub
adc
lock
sub
test
daa
or
dec
adc
sub
pop
scas
ret
popa
or
jle
test
add
mov
adc
incb
push
mov
in
movsb
mov
jb
xchg
or
rclb
movsb
inc
arpl
xor
pushf
sub
add
lds
sub
pop
lret
adc
push
mov
fisttps
add
std
push
shll
jbe
pushf
and
addb
xor
addl
inc
push
mov
sub
jp
insb
pop
or
cs
mov
fildl
push
cs
lds
inc
dec
xlat
jg,pt
mov
pop
xor
pusha
flds
js
das
and
mov
lcall
mov
repz
push
mov
inc
sub
jmp
dec
cmp
aas
push
das
mov
stos
push
dec
cmp
push
sahf
les
jnp
push
add
pop
stos
fldcw
or
or
dec
or
dec
cmp
inc
lret
fs
jp
adc
and
xchg
or
or
out
mov
shrl
mov
invd
add
mov
loop
mov
imul
stc
pushf
dec
xchg
aaa
in
xor
leave
pop
mov
xchg
clc
push
jne
rcll
xchg
das
mov
sub
repz
mov
lods
push
in
test
adc
lret
pop
pop
pop
xor
inc
xchg
lcall
insl
add
lock
pop
sbb
aad
pop
std
jbe
or
cmp
pop
adc
fisubl
cmp
push
shr
enter
xor
pop
cmpsl
pushf
mov
cmp
int3
dec
inc
xchg
jg
lods
or
push
jg
cltd
ror
cmpsl
ja
push
mov
repnz
xchg
mov
dec
iret
cmp
frstor
adc
and
pop
push
xchg
addr16
divb
dec
jge
jmp
dec
shrb
jno
shll
sbb
stos
xchg
and
pop
mov
fdiv
out
jle
int3
mov
push
fmull
insl
push
push
push
pushf
sahf
in
rcrl
mov
in
pop
xchg
inc
add
cmc
sub
mov
jnp
mov
nop
scas
cmp
cmp
lds
insl
sub
push
lock
mov
push
cmpb
decb
orb
cs
mov
std
pop
pop
inc
outsl
cmp
dec
pop
jo
pop
scas
and
cmp
jbe
fdivp
and
mov
je
into
and
cmp
mov
test
adc
inc
mov
test
mov
mov
push
or
xlat
loope
pop
outsb
push
insl
fsubr
rorb
sub
dec
clc
jne
out
mov
jbe
ss
push
inc
pusha
popf
fisttpll
sub
adc
fidivs
call
fcoml
mov
jo
mov
ss
sub
cmp
icebp
and
lret
pusha
xchg
push
mov
fadds
aam
jo
ficoms
mov
xchg
sbb
inc
jecxz
jle
push
adc
dec
dec
xchg
loop
pop
fcomip
mov
inc
sub
pop
jns
lds
pop
jb
test
jg
aam
movsb
and
sub
lret
adc
btc
xchg
sbb
jbe
pop
subb
lock
adc
movsb
mov
ffreep
inc
lahf
js
int
cmovge
insb
mov
fiaddl
dec
inc
mov
mov
inc
sub
xchg
leave
mov
pop
movsb
and
mov
das
iret
cmp
shll
test
push
xchg
bound
pop
repz
test
fldt
repnz
icebp
idivl
in
inc
cmpsb
add
and
out
jg
lahf
sbb
mov
xchg
sbb
or
add
inc
xor
subl
es
fsubr
movsb
pop
faddp
nopl
adc
and
xor
hlt
pop
insl
pop
cs
mov
popf
xor
push
sub
outsl
mov
mov
mov
xchg
jmp
mov
pop
push
iret
add
mov
insl
mov
jg
dec
loop
clc
jle
sbb
or
inc
jle
push
insl
and
adc
das
adc
dec
mov
jae
shll
into
pop
sbb
xorl
and
ljmp
ret
xchg
subl
push
push
data16
pop
jo
ja
jo
int
xchg
out
aas
push
mov
in
mov
test
stc
mov
sub
lock
lods
lcall
mov
sbb
jl
outsb
outsl
fs
or
into
cmc
inc
das
sahf
pop
mov
inc
jo
add
jbe
pop
mov
jl
cwtl
aas
pusha
fdivs
bound
and
sub
or
xor
xor
ret
adc
adc
fidivs
mov
or
dec
rorb
push
jns
pushf
jns
dec
push
repnz
lret
sub
imul
ret
sbb
and
adc
inc
popa
stos
sub
pop
arpl
sub
ja
shrl
sbb
add
xchg
fdivs
movsl
jb
ret
or
movsl
sbb
sbb
fdivrl
sbb
push
dec
xchg
xchg
outsb
sbb
inc
cltd
int3
shlb
stc
adc
into
in
pop
xchg
movsb
cmp
xchg
cs
jno
xchg
pop
clc
lea
scas
cmc
pop
push
inc
add
ficomps
sbb
dec
es
imul
repz
mov
ljmp
xchg
mov
repnz
lods
fisubrl
push
and
add
arpl
icebp
mov
adcb
add
nop
scas
adc
and
push
cmpb
mov
add
sbb
jmp
push
push
nop
data16
iret
adc
or
mov
loop
aam
fwait
cs
add
push
loope
xor
and
jp
outsb
or
push
mov
fnstsw
nop
xchg
dec
mov
mov
mov
dec
mov
ja
lods
mov
adcb
popa
pop
mov
cmp
sub
decl
jae
les
shrb
ds
adc
lods
push
das
pop
decl
jg
mov
xor
inc
in
sub
pop
shlb
leave
mov
fadd
xchg
gs
pop
pop
cmp
mov
lock
and
lock
adc
push
cltd
sbb
mov
sub
push
push
fwait
jnp
icebp
lahf
mov
jns
sub
xorl
pop
dec
dec
pop
shl
cmp
pop
and
sahf
dec
xor
stos
and
mov
out
jo
dec
sarl
repnz
lret
mov
cwtl
sahf
je
mov
ret
fbld
push
popa
jmp
sbb
adc
lods
dec
inc
lods
sbb
lahf
and
data16
sub
lret
fsubs
add
cmpb
ljmp
xor
mov
xchg
mov
add
push
mov
cmp
xor
jbe
push
imul
scas
in
popa
lcall
cmp
or
arpl
pop
xchg
sbb
fistps
out
jl
push
repnz
push
xor
iret
cmpb
sarl
add
gs
inc
mov
fildll
enter
sti
mov
mov
out
push
jle
out
popf
xor
sub
leave
in
stos
inc
ficoml
les
mov
mov
aam
xor
sub
cmp
sbb
test
lret
push
inc
jbe
mov
inc
jb
test
hlt
iret
mov
pop
jl
jae
push
sti
cmp
movhps
idivl
in
jg
in
pop
insl
sub
lds
inc
sbb
outsl
mov
sub
in
sbb
pop
push
out
into
xchg
mov
test
pop
add
push
out
fcomi
jnp
pop
jns
cmp
cmp
fnstsw
mov
cs
jecxz
xchg
mov
jo
enter
cmpsl
test
jmp
jae
add
add
stc
icebp
xor
pushl
xor
lret
pop
or
xlat
inc
push
sti
in
fs
mov
xor
or
cmp
push
jo,pt
add
mov
xor
dec
cmc
xlat
shrb
shll
add
sub
fstpt
sbb
push
jge
mov
jmp
shl
lahf
sbb
loopne
aam
push
pop
es
xorl
cwtl
test
pop
xchg
or
jle
dec
push
popa
jnp
stos
mov
dec
sbb
roll
rep
cmpsl
imul
mov
inc
sahf
add
jle
and
inc
and
or
scas
mov
je
lcall
ret
sub
mov
xchg
adc
cmp
call
bound
movsw
push
sbb
adc
add
sub
and
push
lcall
stos
cmpb
int3
aad
jmp
pushl
imul
stc
push
xor
insb
jle
ret
test
jg
js
sub
leave
cli
sub
sbb
cld
loop
in
xor
and
lret
cmp
mov
push
dec
outsl
dec
fmull
dec
cwtl
shrl
jp
add
aaa
push
in
adc
mov
std
dec
push
sbb
stos
pushf
inc
xchg
idiv
into
cmp
lcall
push
lahf
daa
fstps
pop
inc
inc
out
out
jmp
fidivrl
ss
insb
mov
out
out
stos
out
sub
cwtl
pusha
ja
push
dec
daa
testb
loope
push
push
ficoms
push
into
pop
pop
stos
cmp
jle
sarl
stos
inc
cmp
lock
ret
ds
sysret
imul
dec
fimuls
push
out
gs
push
stc
aas
js
push
ret
pop
jge
sbb
adc
sub
mov
in
nop
out
pop
sarb
lods
push
mov
stc
and
cld
popf
xchg
xor
mov
sub
or
xchg
sub
adc
pop
sahf
daa
dec
cmp
cmp
or
repz
mov
movsb
sub
jge
shll
shlb
scas
dec
jl
cs
in
into
push
adc
out
and
pushl
loopne
dec
cmp
dec
cmpb
sti
mov
or
mov
mov
and
mov
jp
inc
out
imul
mov
loopne
icebp
js
jp
mov
push
cld
imul
mov
push
insl
or
out
cmp
clc
repz
insb
out
ret
add
andl
cmp
popa
jecxz
mov
mov
push
jp
sub
or
ret
pop
and
gs
stos
add
lea
bound
out
cmp
lock
pop
mov
pop
push
jno
sbb
cmp
ljmp
testb
push
inc
and
ret
mov
jg
sahf
scas
cltd
mov
and
cld
cmpsb
andps
ficomps
and
in
sub
in
inc
jne
mov
fstpt
cmp
rorl
rol
lcall
mov
ja
lcall
fstpl
mov
lods
aas
adc
nop
arpl
fstpt
int
nop
pusha
test
mov
mov
xor
data16
test
mov
pop
mov
mov
pop
in
mov
pop
and
fisttpl
dec
jmp
pop
jp
sbb
cmp
ficoml
push
xchg
push
sbb
xchg
jne
loop
call
add
mov
dec
xor
add
jecxz
push
xor
pop
repnz
jp
fbstp
aad
mov
push
cmp
mov
andl
inc
ret
xor
cmp
adc
push
aad
mov
xor
pusha
mov
out
mov
sub
test
fldl2e
push
xor
push
out
cmp
sub
roll
jb
push
pop
js
fbstp
sbb
xchg
mov
dec
ds
cwtl
jno
inc
jmp
decb
cmp
aas
je
sbb
ja
push
xchg
xorb
cmp
stos
xchg
cmp
scas
mov
aam
popf
sub
fildll
xor
xchg
pushf
sub
stos
out
mov
push
xchg
cmpsb
leave
fists
mov
xlat
fisubrs
add
call
ret
scas
call
fnstenv
leave
mov
out
push
das
sbb
mov
int
cmpsb
cld
mov
stos
jb
hlt
outsl
pop
out
mov
lahf
and
scas
scas
imull
repnz
arpl
jb
cltd
jmp
in
clc
int
ja
ds
out
lea
lea
dec
les
jp
sqrtps
aad
push
test
pusha
mov
outsb
push
or
scas
arpl
add
lods
adc
sub
add
mov
rolb
enter
mov
imul
adc
push
xor
mov
and
mov
dec
stc
test
insb
inc
cli
scas
test
push
int3
imul
fimull
inc
mov
adc
pop
push
sub
jne
sub
pop
cltd
xchg
jbe
call
sub
outsl
in
sar
shl
push
es
adc
mov
testl
popa
xor
mov
xor
mov
or
push
xchg
pop
or
pop
jne
mov
mov
inc
mov
push
jp
ljmp
iret
cld
adcl
aas
loop
push
pusha
xchg
int3
pop
imul
data16
test
lods
mov
in
dec
mov
fwait
rorb
and
mov
sbb
mov
push
mov
pop
pop
and
xlat
push
sbb
mov
ljmp
insl
cli
ds
and
and
roll
fsts
pop
incb
mov
xchg
scas
lods
lock
in
xlat
data16
mov
icebp
mov
cld
in
ljmp
movsb
cmp
stos
fwait
xor
add
xlat
dec
nop
xor
outsb
test
lcall
pop
movl
adc
sbb
push
xchg
insb
xor
scas
mov
cmp
jg
cmp
gs
xor
mov
push
or
push
pop
sbb
mov
xor
mov
incb
dec
jmp
lret
xlat
fcmovnb
adc
inc
imul
popa
imul
enter
mov
and
sub
xchg
clc
jbe
xor
repz
dec
mov
xor
mov
fstps
dec
scas
pop
ds
mov
xchg
ret
mov
in
sub
xchg
jae
push
scas
jns
add
scas
aaa
adc
or
pop
dec
lods
inc
cmp
lret
or
add
push
notl
stc
xor
mov
mov
cs
push
shl
int
inc
scas
xor
shrb
stos
lahf
adc
inc
ds
loopne
psrad
push
dec
cmp
aaa
sub
arpl
or
rorb
cmp
sbb
and
ja
int
stos
add
sub
xor
jnp
jns
dec
aas
mov
dec
aam
inc
and
pop
or
push
movsl
dec
mov
mov
aas
pop
pop
or
inc
mov
pop
mov
call
xor
sti
outsb
sub
lret
bswap
addb
loop
mov
mov
loope
andl
clc
mov
sbb
jg
sahf
fldl
cmp
dec
xor
inc
pop
cmp
sti
mov
call
mov
lea
loop
pop
push
repnz
cmpsb
add
sbb
iret
decb
scas
mov
jg
push
imul
mov
add
stos
cmp
adc
mov
data16
add
and
cwtl
mov
pop
sbb
mov
ljmp
mov
clc
mov
mov
adc
pop
aas
push
loope
call
popa
dec
rcrl
pop
and
mov
icebp
fmuls
leave
popf
loope
mov
mov
in
loop
sub
dec
dec
fldt
lret
cmpsl
cli
jns
fisttpl
lahf
rolb
ret
aam
xor
mov
outsl
push
sbb
mov
out
jl
adc
aad
lcall
fidivl
inc
cwtl
lock
mov
hlt
dec
ret
or
pop
sub
loop
pop
lods
insb
mov
xchg
mov
lret
jno
sbb
mov
add
lds
pop
popf
fimuls
jl
pop
or
mov
add
push
setge
mov
lods
rcrl
lock
cwtl
nop
lods
cmp
ds
jmp
sbb
es
js
sub
and
xor
aas
das
cmpsb
aam
imul
packuswb
mov
mov
mov
sbb
push
xor
add
in
pop
icebp
loope
push
je
xchg
adc
mov
test
jbe
jo
adc
pushf
and
mov
jbe
aaa
cmp
sbb
jge
lret
cwtl
jns
sub
mov
sub
mov
sbb
cmp
jbe
add
fs
pop
sti
aaa
popf
adc
pop
adc
mov
shl
notb
dec
dec
out
gs
fnstsw
sti
xchg
sysexit
jp
push
or
test
dec
aaa
or
jns
lds
and
inc
xor
lahf
or
dec
js
pop
fucomip
sub
out
add
mov
dec
test
repz
pop
insb
xchg
inc
aas
mov
push
sbb
loopne
in
sbbb
inc
or
cwtl
push
mov
xchg
dec
in
mov
mov
sbb
gs
aas
jp
mov
shlb
pop
xor
xor
cmp
in
xchg
sti
inc
add
ja
dec
jns
cli
pop
mov
shl
popa
mov
jmp
jge
push
fisttpl
call
sub
int3
enter
cld
lcall
cmc
sub
mov
test
loope
out
fwait
inc
dec
lds
sbb
pop
jmp
adc
adcb
xchg
or
rep
push
fdivrl
dec
xlat
pop
les
pushf
dec
repz
stos
push
test
lods
scas
push
mov
xchg
mov
shl
add
popf
mov
xchg
pop
cld
sub
decl
outsb
fstps
jne
inc
jl
pop
inc
das
stos
loope
repz
sti
push
ja
aam
dec
adcb
inc
int
scas
stc
jle
aam
cmp
imul
and
lea
mov
push
pop
cld
aam
outsb
mov
ja
outsb
or
mov
lea
test
pop
loopne
cmp
or
sub
push
mov
mov
insb
sub
gs
inc
fldenv
add
inc
mov
and
or
mov
mov
in
push
sti
into
pushf
and
es
and
in
pop
into
mov
sub
cmp
loope
clc
cld
jmp
sub
add
sbb
int
add
dec
push
rorb
mov
sbb
loop
rolb
shr
mov
push
icebp
inc
enter
in
insl
aad
faddl
fildl
fldl
fstpt
push
add
mov
lret
ds
jle,pt
iret
xchg
dec
in
std
je
loop
mov
xchg
mov
fnsave
sbb
addb
out
cmpsb
cmp
sbb
ja
js
dec
sub
pop
xchg
and
out
mov
test
jp
fwait
jecxz
mov
add
mov
sbb
int
mov
into
mov
popf
vmovaps
inc
pop
movsl
cwtl
in
aad
add
subb
or
aam
ds
call
inc
mov
cwtl
or
rcll
or
data16
arpl
inc
add
inc
mov
repnz
in
shr
push
mov
lahf
movsl
ja
push
out
out
repnz
out
movsb
sbb
pop
cmp
or
push
out
sub
pop
fsubrl
sahf
sbb
xor
int3
add
icebp
mov
mov
andl
fistpl
cmc
sbb
movsb
inc
sub
mov
mov
repnz
mov
mov
les
add
xchg
sarl
pop
jae
xchg
aaa
jle
dec
or
push
int
test
addr16
decl
out
sarl
or
push
sahf
mov
test
xchg
imulb
jmp
jl
hlt
pop
jmp
imul
repnz
fdivp
sub
ret
cli
xchg
sbb
incb
lock
mov
and
test
call
pushf
subb
fucomp
mov
dec
scas
sbb
or
test
xchg
arpl
push
xchg
xchg
mov
ret
and
je
cltd
jae
sub
push
lea
shl
xchg
pop
mov
sbb
icebp
cltd
or
pop
test
push
in
sbb
int3
sbb
mov
cmp
clc
jno
mov
xchg
popa
mov
mov
lds
test
jo
call
div
mov
sub
enter
icebp
dec
xor
jl
xor
rcl
adc
lds
lret
push
push
inc
jecxz,pn
inc
inc
sbb
xchg
les
xchg
idivb
cmpsb
insl
push
dec
idiv
cmp
jecxz
fistl
ja
sbb
enter
sbbb
daa
fsubrl
mov
xor
pop
rol
add
ret
dec
inc
sti
jne
aad
out
je
jl
movsl
push
or
ss
in
mov
or
das
and
mov
dec
sahf
das
je
xchg
sti
es
add
dec
sbb
mov
mov
cmpsl
sar
sub
out
push
mov
sahf
insb
fldt
jge
fs
scas
psubb
loopne
and
gs
les
scas
fs
mov
or
out
enter
std
add
jno
pop
xchg
dec
pop
dec
cs
outsb
mov
scas
bound
std
rorb
iret
jnp
shlb
mov
mov
icebp
lock
pushf
sbb
mov
push
jno
in
repz
mov
fwait
cmp
add
inc
movsb
lahf
xchg
push
loop
arpl
dec
push
push
cmp
push
xor
cmp
cld
ss
fcomi
rcr
or
in
jb
aas
pop
xchg
inc
ljmp
cmp
mov
icebp
mov
push
xchg
fdivs
mov
mov
inc
imul
jbe
and
stos
xchg
mov
ret
lret
push
inc
sub
mov
and
pop
test
insb
mov
outsl
fwait
jno
loop
loope
mov
lock
pop
testb
lcall
dec
push
rcrl
pop
inc
cmp
jmp
stos
inc
adc
mov
push
push
outsl
sub
cwtl
in
sbb
or
and
cmp
fsubr
jg
fimuls
scas
js
je
mov
mov
dec
dec
inc
mul
jl
jns
add
and
jg
sub
pop
jb
add
jbe
sub
lahf
adc
jne
sbb
aaa
mov
pop
push
psubusb
push
cltd
pop
ds
mov
add
and
pop
mov
mov
dec
dec
mov
xchg
cmpsl
add
filds
pop
stos
lcall
pop
or
mov
dec
in
push
pop
movsb
xor
mov
xlat
inc
stos
fmul
cmp
xchg
add
jmp
sti
pop
dec
test
adc
fisubs
sub
fistl
cmpsb
fisttpl
xor
repnz
cmpsl
hlt
inc
fidivl
cltd
bound
lret
dec
jnp
ss
repnz
jge
mov
add
rcrl
fcomps
mov
adc
out
dec
cmpsb
insl
and
add
sti
xor
and
cmp
push
js
cmc
dec
mov
sbb
popa
mov
sub
xchg
or
outsl
adc
cmp
loop
or
sub
stc
inc
xchg
jmp
cmp
inc
jmp
dec
lret
in
repnz
adc
push
flds
loope
lds
popa
arpl
shll
inc
setl
mov
sub
decl
adc
inc
fwait
icebp
or
dec
pop
and
and
shl
inc
sub
leave
fbld
mov
lock
mov
movsb
xchg
imulb
leave
lahf
cmp
push
sbb
out
push
and
xorl
pop
mov
mov
inc
subl
jp
popa
mov
inc
jl
push
push
add
aas
mov
push
add
cli
popa
iret
mov
jg
cli
scas
fcmovnb
icebp
lret
cmp
dec
mov
fincstp
and
sbb
jmp
roll
xor
lahf
call
xor
addl
sbb
aaa
jno
inc
xor
or
xchg
mov
lock
pop
mov
inc
sarb
test
mov
sub
or
das
stos
shr
and
in
or
xor
jl
test
sbb
cmpsl
insl
stos
stos
stos
fnop
cmp
push
fnsave
xchg
int3
and
fsubrp
data16
pop
mov
shlb
lret
xor
lret
out
mov
test
cld
mov
imul
fwait
mov
or
mov
int3
js
ds
cwtl
mov
and
shll
push
mov
and
pop
cli
dec
and
inc
inc
mov
pop
sub
add
cwtl
push
xor
xchg
mov
mov
repz
push
cld
jmp
test
add
jmp
jbe
add
inc
dec
cmpsb
iret
xor
int
mov
add
cmpsl
jb
mov
xor
je
jp
jb
les
lods
jb
or
test
push
test
dec
sar
sbb
test
mov
push
cmc
outsl
pop
pop
dec
cmp
fs
aam
data16
or
insl
mov
mov
pop
clc
jo
push
pop
mov
inc
push
incl
popa
sbb
clc
cld
xchg
xchg
out
push
xor
xchg
sub
add
xor
dec
icebp
leave
sub
testl
jo
outsl
push
fsubl
leave
inc
test
jp
ljmp
mov
sbb
leave
int3
inc
aas
mov
inc
dec
ret
cmp
sbb
scas
or
movsb
sub
dec
add
sub
jo
mov
cli
jmp
push
bound
fwait
adc
sub
pop
jno
popf
ja
jno
mov
mov
push
stos
pop
sbb
sub
jp
jecxz
int3
lret
add
and
out
and
push
cmp
mov
cwtl
in
mov
jl
jecxz
xchg
out
mov
mov
or
push
subl
inc
mov
push
shl
adc
test
cmpsb
fisubs
jecxz
mov
xor
add
dec
arpl
sbb
mov
jnp
inc
fbstp
daa
jno
xlat
xor
icebp
jbe
daa
fucomp
xchg
les
movsl
xchg
hlt
sbb
jg
imull
xchg
filds
setae
mov
dec
dec
dec
loopne
cmp
loop
ljmp
inc
fnstcw
push
jle
inc
fsubs
mov
push
xchg
add
jp
enter
or
mov
movsl
jo
pop
add
cli
xchg
stos
test
das
push
test
dec
shr
test
out
inc
das
pop
push
push
dec
roll
mov
push
jle
sub
add
addr16
cmp
addb
test
icebp
dec
push
xchg
push
in
pop
xor
xchg
mov
add
sub
mov
sbb
out
fldenv
cwtl
test
sbb
push
inc
or
mov
stos
mov
notb
dec
je
pop
jb
sub
sub
adc
stos
fdivs
ds
jb
mov
mov
jne
mov
scas
pop
mov
sub
sub
add
mov
sti
rcl
adc
js
mov
out
xlat
nop
orb
aas
mov
jbe
adc
leave
cmc
sbb
sbbb
daa
mov
xchg
jae
cmp
adc
xor
cwtl
insl
sub
fimull
cld
sahf
rolb
push
cld
pop
pop
lret
pop
in
xor
xor
shl
add
fldcw
ficomps
das
and
stos
and
sbb
fistps
lds
xorl
push
shlb
mov
xlat
repz
mov
cmpsb
push
push
inc
push
mov
fucomi
jge
sarl
pop
or
int3
mov
call
pop
jns
fwait
jmp
scas
leave
push
push
sub
xchg
sub
push
fdivs
in
mov
data16
adc
and
loop
int3
cmp
pusha
inc
adc
push
fiaddl
in
in
and
sub
popf
ja
pop
adc
fwait
std
push
inc
test
loope
imul
cmp
popf
add
cmpsb
dec
aad
add
xchg
or
leave
out
inc
xor
mov
mov
stos
sub
sub
cwtl
mov
addr16
mov
or
fisttpl
push
sub
dec
inc
popa
mov
jl
push
adc
xor
sub
pop
xchg
mov
lock
xchg
stos
mov
andnps
push
mov
adc
push
out
or
dec
cli
pop
movsb
push
cmp
es
lcall
es
xchg
cmp
test
popa
lods
test
dec
mov
xor
mov
ds
adc
push
adc
xchg
imul
xor
std
out
repz
inc
add
adc
cwtl
mov
xor
sbbl
movsl
jecxz
and
rcrl
pop
push
orb
lcall
add
in
lds
cmp
cld
jbe
mov
jb
testl
sbb
ret
sbb
jne
sti
inc
outsl
popa
rcll
or
push
mov
cmp
scas
adc
or
mov
js
les
jle
sbb
mov
shrb
int3
or
push
push
or
xor
sub
sub
popa
repz
jecxz
xchg
dec
addr16
push
cmc
clc
in
adc
cld
or
movsl
dec
mov
lea
xchg
int
lods
jmp
mov
fstpt
test
xchg
sub
dec
inc
fs
sarb
jnp
jmp
inc
mov
dec
in
push
out
add
cmp
ret
adc
pop
lea
in
lock
ss
jg
scas
lahf
push
std
add
aad
js
xchg
mov
into
push
scas
push
dec
test
into
jg
lea
out
mov
sbb
push
imul
sbb
pusha
inc
rclb
out
jmp
jge
std
out
insb
pop
or
and
sbb
out
test
out
ljmp
jne
flds
jge
adc
data16
mov
xor
fwait
imul
jp
je
pop
sbb
pop
insl
adc
xchg
or
jo
cmp
xchg
xchg
mov
xor
pop
cld
sub
sarb
mov
imul
mov
out
mov
and
or
sbb
or
addb
out
push
inc
add
js
addb
sbb
rcr
cmp
cmp
xchg
pop
mov
xor
xchg
in
ljmp
nop
repz
xchg
popa
into
mov
vpsraw
xor
fwait
xor
cmc
test
mov
adc
sarb
gs
mov
and
inc
sbb
jbe,pt
ljmp
sbb
iret
add
stc
sarb
jp
data16
gs
cmp
inc
cld
iret
fcmovu
cmp
in
sbb
push
adc
cmp
inc
in
add
adc
js
rcr
outsb
int
mov
inc
daa
enter
xchg
jbe
call
shrl
daa
stos
mov
test
cmp
loopne
push
stos
sbb
push
pop
ja
loopne
cmp
or
sti
xchg
cli
dec
hlt
imul
cld
ret
mov
inc
xchg
and
cwtl
lds
cwtl
xchg
outsl
xchg
dec
xchg
jae,pt
stos
jg
popa
in
mov
add
and
seta
pop
js
mov
or
call
clc
mov
in
movsb
pop
fnstcw
fs
sub
out
ss
xlat
sbb
imul
sbbl
stos
xchg
jno
dec
pop
xchg
into
pusha
push
mov
jno
lea
add
sub
in
sbb
sbb
adc
lcall
xor
sbb
and
into
jno
ja
mov
push
mov
ret
inc
dec
in
xchg
inc
xchg
inc
sti
push
pop
cmc
je
test
hlt
and
push
mov
xchg
mov
or
lods
push
mov
test
movsb
adc
idiv
mov
inc
add
add
jle
jge
popa
sahf
mov
cmpb
xchg
and
fcoms
add
sub
hlt
push
bound
add
enter
inc
push
bound
mov
mov
subb
xchg
popa
outsl
jmp
fwait
in
call
xchg
or
xor
mov
and
int
push
jbe
mov
xchg
ds
or
addr16
xorb
add
mov
repnz
gs
dec
lds
add
xor
mov
out
daa
ja
es
sbb
sub
adc
test
rcrl
cltd
dec
mov
outsl
push
mov
incl
mov
fmull
sub
mov
ficompl
pop
sahf
std
fisubrs
mov
mov
jne
outsl
pop
inc
add
call
into
pop
sbb
xor
pfcmpeq
mov
out
or
icebp
push
mov
mov
popf
fs
mov
enter
fs
out
fisubs
fucomip
xlat
das
xor
push
daa
fiaddl
or
in
movsl
ss
aad
lahf
or
mov
jmp
enter
inc
rcrb
mov
outsl
ffreep
pop
imul
jno,pn
enter
inc
add
push
inc
mov
int3
mov
mov
and
aas
cmp
xchg
mov
mov
xchg
shl
inc
jmp
xlat
faddl
adc
and
cmp
ss
movsl
hlt
add
push
aas
adc
push
in
and
repnz
call
dec
and
push
or
clc
xchg
cmc
std
test
cmp
push
mov
inc
sar
xchg
add
ja
stos
mov
out
repnz
xchg
icebp
jae
pop
test
sbb
cmp
shll
ror
xor
mov
mov
xor
mov
addb
test
insb
adc
decb
out
mov
or
cmpsl
push
out
push
lods
scas
push
xor
adc
mov
jne
xor
push
adc
std
dec
lcall
repnz
push
repnz
outsb
adc
es
jno
mov
xchg
scas
ficoms
mov
out
pop
ljmp
repz
incl
ret
adc
pop
subl
mov
cmp
mov
andb
xorb
lods
jbe
idivl
push
lods
js
into
pop
insb
stos
jne
push
cli
repz
sahf
shl
loop
addr16
in
adc
jno
mov
jp
aas
into
inc
and
mov
loope
mov
sbb
xor
add
mov
pusha
fs
mov
scas
fistpl
adc
ljmp
hlt
sub
mov
or
movsb
add
insl
lods
ds
jae
xchg
or
sbb
mov
inc
or
jg
xor
mov
test
push
push
sub
adc
cmp
adc
xchg
ret
arpl
cmpsb
push
push
icebp
arpl
jno
aaa
cwtl
pop
fists
xchg
sub
and
js
cmp
out
mov
lahf
push
repz
test
cmpsb
inc
int
dec
cmpsl
cli
lods
jb
jo
popa
movsb
jae
adc
pusha
cmpsl
adc
je
sbb
fwait
je
icebp
add
sub
mov
jne
and
jp
dec
das
cltd
lods
pop
sub
or
dec
jle
push
jmp
lea
ret
mov
xor
mov
loope
into
xor
add
js
adc
adc
movsb
imul
in
and
adc
pop
xor
insb
mov
pusha
cmpsb
cld
sahf
clc
lret
cmpsl
sti
sub
scas
mov
lret
mov
sub
add
icebp
push
mov
sub
and
fneni(8087
cmpsl
push
mov
les
cmp
mov
adc
daa
movb
test
es
sub
mov
xchg
inc
mov
push
sahf
jp
push
dec
push
push
jmp
or
mov
les
data16
add
add
outsl
inc
jne
cmpsl
and
xor
test
movsb
sub
gs
in
int
mov
sbb
pop
adc
mov
lock
and
mov
xchg
mov
sub
stc
out
push
es
xchg
jo
das
adc
sub
mov
mov
imul
mov
add
and
loop
sbb
les
aad
lret
pop
insl
inc
cwtl
aad
cmp
lret
pop
cwtl
pop
inc
iret
jae
push
pop
bound
aam
cmpb
les
cld
mov
test
adc
cmp
leave
push
pop
lcall
pop
aas
rcrb
repnz
and
mov
pop
sar
and
ud0
add
cs
shlb
dec
add
mov
hlt
aad
test
add
daa
jnp
cmp
cmp
call
loop
add
push
mov
adc
mov
inc
adc
jle
mov
shlb
mov
aam
dec
sub
push
xor
imul
loop
xor
cld
xor
test
clc
outsl
mov
dec
cmp
jbe
push
add
jae
or
mov
fdivrl
sbb
sub
pop
cmp
adc
push
sbb
jp
pop
mov
push
insl
lods
lea
mov
nop
mov
es
jl
fidivs
push
inc
pop
insl
xchg
lock
mov
xor
jnp
jmp
mov
cmp
andl
lods
xchg
repnz
mov
ss
jg
mov
cs
pop
fistpll
mov
aad
or
fstpl
scas
adc
int3
dec
dec
jmp
jno
pop
inc
addr16
sub
xchg
jb
mov
scas
mov
mov
mov
sub
ss
repz
stc
adc
imul
add
or
inc
cmp
cmp
enter
mov
je
pop
int3
add
mov
cld
pop
jns
mov
ja
mov
xor
pop
sbb
mov
pop
scas
pop
jg
dec
adc
rcll
and
jg
dec
rcr
mov
push
push
cmpsl
or
mov
rclb
mov
mov
jecxz
mov
out
cwtl
mov
lds
ljmp
dec
pop
sbb
js
inc
test
add
into
punpckhdq
repz
jge
test
xor
arpl
in
and
insl
xchg
inc
push
push
test
inc
cmp
lea
aam
popa
jmp
push
mov
xchg
sti
jge
pop
sbb
out
pop
jne
mov
test
cltd
cwtl
adc
imul
sbb
shll
test
cmp
in
xchg
add
mov
leave
push
or
int3
xor
inc
es
xor
js
mov
mov
jno
mull
push
movl
xchg
leave
fsubrp
negl
addr16
fcoml
ljmp
mov
ret
and
daa
gs
movsb
inc
adc
add
dec
xchg
fwait
mov
jae
mov
loop
pop
mov
xor
push
mov
ror
adc
cmpsb
push
mov
xor
mov
rep
add
es
mov
xchg
add
mov
jle
push
mov
pop
es
loop
mov
test
pop
loop
cmp
cmc
mov
push
or
ss
push
jns
test
je
mov
insl
and
imul
lcall
cli
sbb
bound
cmp
jae
fucom
in
imul
push
ljmp
outsl
call
xchg
and
popf
jle
or
mov
add
adc
das
nop
dec
cmp
outsl
daa
mov
aam
out
leave
sar
insl
pop
inc
stos
out
cmp
cmp
arpl
mov
add
cld
pop
and
add
cmc
dec
push
or
xchg
jno
add
aad
xchg
push
sub
jnp
or
leave
sahf
repnz
outsl
shr
adc
loop
cmpsb
adc
jbe
adcl
idivl
xchg
or
pop
lds
outsl
std
bnd
ds
std
repnz
xchg
inc
call
xor
xchg
cmp
sub
shrl
fisttpll
dec
cmp
stc
es
jp
mov
and
lret
xor
cmp
ds
lea
dec
rcll
out
xor
mov
jecxz
sbb
and
into
jno
xor
es
cwtl
push
insl
je
cltd
mov
dec
movsl
clc
mov
pop
ss
pop
mov
sub
xor
aam
cmp
lret
bound
xlat
jmp
dec
mov
outsb
psubd
pushf
xor
test
pop
movsl
insb
add
and
sti
fimull
mov
jns
sbb
sub
das
test
hlt
or
dec
xorb
jno
pop
pop
insl
popf
push
pop
xor
add
dec
cld
imull
xchg
test
cmpsb
push
jbe
jb
xor
sub
jbe
pop
lds
cmpsl
sub
mov
fnstcw
mov
push
dec
push
outsb
lret
in
aad
cmp
mov
pop
cmpsb
fisttps
mov
dec
pushf
sbb
stos
ja
xor
cmp
das
popa
popa
dec
mov
jbe
test
das
jne
nop
mov
mov
pop
incb
cmpsb
adc
push
test
xor
pop
pop
xchg
xchg
outsl
pop
faddl
outsb
sbb
jl
jecxz
sub
push
jmp
sbb
xchg
sbb
jbe
push
push
bnd
jmp
js
loop
fdivs
pop
jns
dec
jb
test
rcll
cwtl
jp
adc
ret
xchg
xchg
lea
mov
jo
shlb
cmp
sbb
jl
inc
mov
into
and
mov
fadds
jne
andl
call
aam
aam
mov
shlb
lret
jns
shlb
rcll
push
test
dec
mov
lods
inc
xor
xchg
in
mov
enter
fdivrl
je
and
scas
pop
mov
pop
add
push
out
mov
inc
call
rol
fwait
xchg
mov
lods
outsl
ljmp
push
mov
cmp
jmp
adc
nop
and
inc
cmp
xor
add
mov
add
or
sub
jnp
std
mov
sub
addr16
mov
sbb
cmp
fcmove
adc
mov
sub
add
mov
pop
rclb
push
add
adc
mov
and
pop
out
fsubrs
mov
cmp
hlt
jb
icebp
ja
mov
mov
rorl
jnp
mov
pop
out
xor
mov
cmp
jl
dec
mov
cld
sbbl
pop
or
dec
subl
lods
add
mov
gs
or
pushf
jbe
sbb
and
call
cmc
xchg
adc
negb
jns
out
bound
fsubl
mov
jne
sub
xchg
bound
mov
xchg
pop
xor
andb
std
inc
or
xchg
flds
loopne
or
xor
pop
push
ss
mov
popa
test
test
jo
ss
orl
jmp
jecxz
mov
popf
fmulp
xchg
bound
dec
sbb
sbb
cmp
and
es
int3
daa
pop
inc
xchg
cmp
lea
or
pushf
cs
xor
adc
in
jg
mov
scas
fbld
out
maxps
adc
std
insl
daa
shll
adc
cmc
aam
movsb
sbb
aaa
fdivr
sbb
add
add
lret
add
mov
idivb
jne
mov
jle
adcl
sub
push
xchg
and
mov
xchg
std
add
ja
pop
dec
dec
sbb
xlat
sub
testb
sbb
pavgw
daa
call
int3
cmp
xor
lahf
data16
jbe
inc
xor
mov
or
xor
dec
repz
jmp
jo
or
lahf
pop
push
sub
or
add
sub
lcall
ss
mov
aam
in
mov
cmp
int
popf
push
inc
imul
ss
enter
fcompl
pop
cmpsb
aad
test
sbb
lcall
scas
in
out
adc
jo
negb
xchg
daa
pop
scas
adc
test
pop
ljmp
adc
xchg
push
jne
push
mov
ljmp
sbb
inc
addr16
mov
daa
movsl
shll
xchg
add
dec
add
xor
loope
ds
popf
aaa
in
mov
and
jg
xlat
fucomp
sbb
dec
nop
sbb
movsl
mov
fldl
adc
jae
sahf
jnp
sbb
divl
insl
int3
push
jno
out
mov
aad
add
xchg
or
sub
and
ja
cmp
fcmovu
std
insl
push
bound
mov
in
sarl
jg
cmp
fcmove
pop
sub
adc
rol
insb
mov
inc
bound
movsb
test
mov
sarb
std
sub
dec
or
cmp
test
in
hlt
add
into
mov
outsl
xchg
xchg
sub
push
sarb
leave
cli
xchg
lods
std
push
xchg
rolb
insl
addr16
or
test
pop
mov
in
cmp
and
mov
jp
gs
imul
stos
cmpsb
xchg
pop
pushf
fsts
mov
push
sahf
loopne
ja
jecxz
stos
add
fmul
sbb
cs
xor
add
outsl
sub
dec
stos
ljmp
dec
mov
pop
arpl
mov
jg
xor
lods
add
cld
sub
cmp
or
pop
mov
gs
dec
mov
inc
fsubr
repnz
xchg
and
rcrb
outsb
rcrb
test
out
xchg
push
xchg
jg
sbb
scas
dec
push
out
cmpsb
inc
stos
aaa
repz
jp
jno
int
lods
fisttps
dec
mov
fwait
shl
cmp
jns
add
shlb
mov
mov
js
shrb
fistpl
pop
lods
jecxz
cmpsb
inc
movsb
jmp
jge
cmp
sbb
add
test
jno
ja
jae
das
xchg
es
cmp
ljmp
call
mov
mov
sub
sbbb
push
xlat
dec
enter
cld
sbb
jae
movsl
push
pop
insb
ljmp
iret
sarb
sub
enter
rolb
xchg
cmp
aaa
nop
push
push
xchg
cmp
mov
and
aam
pop
xor
fbstp
push
addr16
mov
aad
mov
std
add
ss
push
into
xorb
jg
fsub
arpl
stos
fadds
fistps
sub
adc
mov
cmpsl
adc
ljmp
pop
shr
in
inc
sbb
lods
adcb
int3
adc
inc
jge
xorl
lods
jnp
sbb
pop
mov
push
xchg
rolb
cmp
pop
shrb
imul
hlt
and
rcrb
cwtl
imul
in
cmp
inc
fisubrs
inc
insl
sbb
jg
out
test
xor
sub
add
jae
xor
or
pop
mov
cli
xlat
ret
addr16
xchg
pop
cmp
outsl
fs
cmp
sbb
lds
and
dec
cmp
js
sbb
cmp
mov
pop
mov
ds
jmp
test
movsb
shll
mov
and
xor
rcrb
jmp
fdivrp
pop
xchg
aam
xlat
rcrl
or
xor
adc
push
cli
sbb
push
pusha
lea
jns
mov
mov
xor
bound
cmpsl
mov
ret
cmp
repz
sub
sbb
push
fnsave
and
imul
cltd
add
push
mov
cwtl
aaa
mov
add
sarb
lods
inc
or
movsl
pusha
or
xchg
arpl
pop
push
jl
xchg
popf
adc
lods
jbe
in
add
xor
xchg
mov
in
inc
and
push
and
pop
mov
dec
lock
orb
sarb
out
stc
dec
or
jl
jns
or
ljmp
sbb
fnstcw
push
test
cli
pop
ret
rorl
pop
jecxz
outsl
dec
pop
insl
and
fisubs
dec
push
ja
data16
mov
aaa
fildl
and
mov
jbe
push
jo
xchg
push
pop
call
insl
pop
lret
movaps
add
jno
cmp
dec
sahf
dec
adc
stos
jecxz
repz
xchg
aas
fisttps
xchg
mov
int
je
mov
jbe
xor
pop
fiaddl
pusha
xlat
mov
sbb
mov
pusha
push
movsl
leave
adc
add
or
aad
sbb
xchg
inc
insb
sbbb
xchg
mov
adcb
dec
mov
in
pop
stos
mov
mov
mov
mov
sub
fcmovne
and
shll
cmp
leave
rcl
sub
dec
aad
push
or
mov
dec
xor
mov
cmp
inc
sbb
cltd
enter
fbstp
xchg
mov
mov
cld
mov
ret
adc
jge
and
push
inc
sbbl
fists
aaa
jmp
out
mov
mov
mov
push
inc
test
shll
adcl
cmpl
call
test
int
scas
in
shrl
cmpl
imul
aad
mov
es
jmp
mov
inc
aas
pop
and
negl
ja
outsl
pop
pop
aad
jno
addr16
inc
xchg
lods
leave
cli
push
fs
fwait
xchg
jae
std
je
xor
cwtl
daa
in
fwait
adc
pop
cwtl
adc
lcall
mov
sbb
jmp
cmp
or
or
and
in
cmpsb
jnp
mov
jge
jl
xor
and
fbstp
mov
fwait
je
sbb
add
jmp
mov
mov
push
stos
inc
mov
push
je
fdivr
cmp
out
jns
fdivs
or
pushf
push
xorb
out
and
test
mov
rcrl
test
jne
stc
inc
int3
cld
mov
ror
and
add
pop
sub
inc
push
adc
andb
ret
sub
testb
mov
aam
cmp
xchg
out
test
lods
dec
mov
sbb
fildl
js
dec
aas
loopne
and
popf
mov
pusha
xlat
mov
shrb
xorb
jl
out
xor
cmpsl
xlat
cmp
pop
jle
sub
sub
and
mov
hlt
inc
mov
push
pop
push
jecxz
xor
xchg
sub
jl
lock
lods
ljmp
dec
push
stos
sbb
mov
pop
adc
and
out
and
fnsave
loopne
sub
mov
test
jns
fmuls
or
arpl
pop
or
idivl
fistpll
dec
lds
nop
jnp
mov
sub
add
add
add
mov
xchg
test
scas
jp
cmp
lcall
jno
fdivrs
pop
pop
sti
mov
jp
stc
pop
int3
aam
inc
sbb
jb
sbb
adc
inc
data16
mov
inc
cmp
call
ret
push
int3
out
fstps
scas
sbb
mov
mov
ret
fisubs
test
das
addl
pop
sbb
in
cmp
jle
sbb
stos
shlb
cmc
and
stos
push
or
and
cmp
loop,pn
cli
hlt
and
lcall
mov
icebp
dec
out
add
mov
lcall
movsl
or
mov
mov
add
jns
rolb
sahf
push
add
adc
gs
popa
arpl
dec
adc
sub
jge
push
pop
jbe
pop
xchg
cmp
sub
es
into
es
push
movsl
ja
ss
int3
bound
add
lcall
int
in
cmpsb
sub
ret
popa
pop
pop
orb
add
dec
scas
shll
insl
push
jns
ret
jecxz
sbb
dec
add
cs
cld
inc
fildl
adc
ret
inc
adcl
shll
and
imul
xchg
loop
add
fimull
pushf
pusha
or
iret
xchg
cmp
push
xor
mov
das
es
insl
cmp
aaa
dec
push
cmp
imul
ret
push
fwait
adc
jp
or
push
testb
inc
adc
push
negl
cmp
in
subb
sbb
inc
add
daa
ret
sbb
mov
popa
pop
xor
pushf
mov
or
push
mov
js
jmp
and
xor
cltd
mov
es
scas
fsts
leave
imul
das
call
mov
mov
push
mov
jmp
nop
bound
and
rcrl
add
and
mov
xor
call
shll
decb
adcb
js
xor
bound
ret
popf
sti
pop
fimull
mov
sub
stos
xor
shll
shrb
cmp
insb
dec
xchg
jno
dec
cmpsb
add
sbb
adc
mov
xor
leave
lds
les
push
addb
scas
std
mov
test
imul
cli
pop
jnp
pop
and
push
sbb
cltd
cmpsl
aaa
je
add
sbb
repz
gs
daa
out
pop
jne
xchg
insl
std
out
dec
rcr
adcb
les
pop
push
sbb
fdivl
fstpl
push
popf
sbb
fadd
leave
stc
out
in
je
lret
ret
lds
cld
fsts
push
sub
lahf
xchg
or
jbe
dec
xor
lret
jnp
adc
jmp
xor
push
outsl
mov
mov
jge
icebp
sbb
pop
push
jo
mov
xor
push
pop
cwtl
popf
fnstenv
jbe
outsb
push
sub
jp
cmp
lahf
dec
inc
or
or
xor
loopne
ja
push
adc
sbb
cmpsl
popw
mov
loope
push
dec
jl
mov
xchg
lds
fwait
jae
xchg
sub
ljmp
mov
inc
xchg
sbb
in
dec
jbe
mov
hlt
jle
jge
out
jl
push
and
pop
xor
pusha
xchg
test
xchg
sub
mov
mov
in
shlb
decb
jno
add
lea
popf
cmp
adc
push
inc
fistps
mov
push
dec
in
mov
or
mov
test
in
out
leave
push
xor
jns
adc
hlt
fs
push
jb
inc
aas
jbe
mov
inc
insl
fcmove
add
aas
imul
cmpsl
jmp
clc
scas
add
leave
and
mov
and
xor
cmp
add
and
pop
push
call
push
loope
jne
lahf
push
push
sahf
push
xor
outsl
lock
out
daa
lahf
jae
fsts
and
push
xor
inc
scas
push
push
and
push
dec
movsl
push
ja
test
arpl
jle
pop
cld
movsl
repnz
fimuls
jae
adc
out
xchg
dec
outsb
je
lods
jmp
cmpsb
cmp
out
nop
pop
out
mov
sub
cs
inc
push
mov
adc
jae
inc
add
xchg
aam
es
or
pop
repz
pop
dec
inc
std
push
cmp
and
mov
iret
xor
test
pushf
leave
pop
test
in
int
cmp
adc
cli
nop
movups
mov
je
data16
sub
leave
sub
jle
lret
pushf
imul
mov
adc
in
aas
test
sahf
jmp
jb
cmc
cltd
push
subl
lcall
loop
sub
mov
sbbl
popa
in
or
imul
mov
sahf
and
mov
adc
push
pushf
ficoms
daa
xchg
sub
imul
pushf
popf
sahf
rcl
mov
iret
fmull
push
adc
int
fidivs
rcrb
pop
xor
sub
clc
repz
and
cmp
mov
pop
call
cmp
and
mov
cmpsl
jno
jle
xchg
dec
lock
cld
lret
inc
xor
popf
outsb
into
es
mov
fmull
nop
add
mov
fistl
sbb
jb
addr16
adc
call
fistps
pusha
and
sub
dec
lods
push
cli
popf
mov
push
mov
in
or
aaa
hlt
das
adc
inc
push
les
fidivrs
dec
and
mov
xor
outsb
mov
lahf
ret
dec
lds
div
pop
push
in
nop
jge
pop
aaa
push
hlt
jb
popa
lret
push
dec
sbb
out
pop
jnp
sbb
adc
inc
mov
std
movsb
mov
lods
rolb
dec
inc
xlat
jns
rcl
xchg
pop
xor
xchg
out
fstpt
or
or
bswap
push
stc
lret
or
push
xchg
mov
test
sub
push
and
push
pop
inc
xor
data16
test
sti
sbb
mov
or
aad
jnp,pn
jne
add
mov
xchg
mov
mov
popf
sbb
mov
popa
sub
mov
jle
ja
fcmovnbe
push
mov
push
enter
xor
imul
test
or
jecxz
mov
outsb
push
add
js
push
dec
pop
mov
pop
pusha
jge
test
movsl
aaa
jns
es
mov
loope
dec
lea
dec
ret
aad
iret
mov
jg
mov
je
arpl
push
xchg
mov
je
test
out
push
mov
xchg
mov
leave
inc
push
aad
xchg
and
cwtl
jb
and
movsl
inc
jb
xor
push
test
xor
push
mov
cld
dec
pop
push
stos
and
mov
or
mov
adc
arpl
scas
stos
data16
mov
cmc
cmp
and
xchg
aas
aam
mov
popf
cwtl
lods
mov
xchg
addr16
inc
fcomip
jo
cli
mov
mov
into
inc
xor
push
cmp
andl
in
cmp
and
jl
jge
pop
je
jg
repz
fdiv
jo
maskmovq
divl
inc
or
and
xor
or
pop
fsts
iret
mov
dec
enter
loopne
lret
mov
push
pop
sbb
push
mov
mov
xchg
jbe
adc
in
xlat
icebp
adc
push
int
in
shll
dec
xchg
lret
mov
dec
repnz
sub
dec
or
pusha
mov
mov
sub
clc
push
mov
adc
adc
stos
icebp
stos
cmpsl
sbb
rcrl
out
cwtl
jecxz
xor
sbb
arpl
mov
stc
pop
data16
jp
cli
ja
test
sub
sub
jnp
xchg
push
mov
dec
shrb
outsl
ljmp
xor
out
mov
imul
pop
pop
daa
jmp
ja
xor
mov
stc
mov
in
mov
xchg
out
xchg
shl
orb
cwtl
cmpsl
push
sub
mov
xchg
mov
mov
fcoml
add
test
mov
push
xchg
push
cli
out
std
fcmovnb
inc
ret
xchg
test
adc
cmc
mov
ljmp
inc
bound
in
fisttpl
push
and
ret
stc
mov
sahf
pop
xor
jmp
or
cmpsl
nop
cli
push
adc
aaa
xchg
cmpsb
jecxz
subl
out
adc
jmp
sbb
lea
rorb
jl
pop
push
ret
pusha
data16
ja
cli
pop
xor
xchg
jno
dec
daa
push
jp
lret
and
mov
fs
jbe
stos
jg
insl
leave
jmp
push
cltd
jno
add
sbb
mov
mov
lock
inc
mov
lret
ds
stc
movsb
cmp
jne
add
sbb
mov
mov
repnz
xor
andl
pusha
or
lods
pop
fdivl
and
out
push
std
jne
push
das
pop
push
je
in
shll
mov
int
mull
or
ja
jno
jae
sti
xchg
das
lods
mov
in
push
test
jge
fisubrl
shrl
es
add
mov
lcall
dec
rcll
mov
js
gs
mov
mov
mov
leave
pop
ds
cmp
and
outsl
sbb
and
add
enter
mov
lret
in
mov
mov
jmp
dec
or
sbb
test
fdivrs
sbb
push
mov
movsl
cmp
sbb
pop
xor
sub
add
add
inc
pop
inc
or
push
enter
cltd
inc
fistl
cmpsl
mul
dec
push
or
cwtl
pop
out
jge
adc
cs
dec
cmp
push
ss
add
jno
cmp
dec
mov
loopne
inc
imull
es
mov
sbb
push
dec
mov
cli
out
inc
and
mov
jno
and
adc
ret
sub
sti
sbb
mov
idivl
movsb
pop
mov
sub
daa
jbe
movsl
jmp
xchg
std
shrb
jge
pop
out
adc
jl
arpl
mov
data16
push
add
mov
jae
and
loop
popf
or
sbb
pop
repz
mov
jmp
mov
fiadds
mov
std
imulb
pushf
ret
lods
xor
cmp
lret
push
sub
movsb
pop
and
cmp
xchg
mov
cltd
fwait
out
mov
shl
pop
jl
xchg
dec
pop
sub
inc
push
or
add
or
popa
stos
inc
jmp
mov
inc
out
jecxz
sbbl
dec
scas
dec
lock
xlat
je
sub
add
mov
inc
mov
mov
cmp
out
pop
jae
test
inc
push
mov
adc
sub
jecxz
scas
xor
add
cs
mov
mov
aam
lret
cmp
push
push
push
jo
xorb
lea
test
xor
jg
test
insb
mov
orl
test
dec
mov
sub
xchg
int3
xchg
xor
jle,pt
push
push
jge
cli
outsl
pop
sbb
jae
addl
cmpsl
pop
jnp
jge
ds
mull
cmp
inc
test
int
fisttps
pop
lock
aaa
and
cmpsb
nop
xor
subb
jo
out
in
fildll
push
mov
icebp
cmpsb
mov
roll
mov
dec
shlb
out
hlt
sub
pop
adc
cmp
fistpll
pop
mov
insl
dec
push
xor
fdivs
ret
lds
jns
push
out
add
scas
mov
fs
push
pop
rcll
test
popa
xchg
mov
push
loop
test
ds
js
add
int3
pop
push
inc
jmp
dec
lcall
mov
fistl
cmp
xchg
pop
mov
shlb
rorl
add
scas
in
ret
scas
test
fistpl
cmpl
ljmp
bound
fmul
scas
mov
in
test
jbe
lock
xor
popa
gs
and
pop
cli
imul
pushf
jge
and
dec
movsb
in
jne
ja
push
repz
sbb
pushf
push
and
lock
sbb
jnp
xchg
add
cmp
xchg
dec
orb
and
and
dec
xlat
fiaddl
and
sarl
mov
xor
inc
fisubrs
aaa
jl
mov
pop
mov
or
imul
mov
jmp
in
and
sarl
shrl
test
fsts
push
bound
cmp
sbb
into
mov
ds
scas
xchg
sub
xor
lds
mov
shll
scas
mov
frstor
mov
cwtl
cld
and
cmp
jge
jp
imul
mov
icebp
das
enter
test
or
rolb
ret
jae
xchg
cmp
inc
ret
inc
sbb
lea
or
loope
add
mov
mov
dec
sub
inc
out
add
lods
lahf
incl
shll
psubd
dec
mov
into
inc
ficomps
cltd
jmp
clc
cmp
inc
xor
stc
adc
roll
add
mov
js
xor
decl
lock
outsb
loope,pt
or
dec
popf
fnstsw
sti
lock
adc
xor
fistpl
cltd
adc
daa
mov
pushf
xchg
mov
pop
cmp
fistps
jb
xlat
jl
cmp
loope
inc
pop
repz
adc
shrb
or
pop
mov
adc
cltd
mov
mov
loopne
les
mov
shr
xor
lea
test
test
pop
cli
push
movd
icebp
in
pop
nop
ficompl
push
cmp
sbb
loopne
fwait
stos
iret
test
and
mov
fistl
lcall
clc
int3
daa
xchg
and
jge
lods
fprem
add
xor
leave
test
outsl
stc
add
sti
push
movsl
popf
loop
nop
xor
leave
jmp
outsb
neg
fdivs
inc
mov
inc
rclb
mov
mov
dec
push
xchg
xchg
mov
or
pop
cmp
sub
pop
mov
out
popa
fimuls
out
pop
je
sub
fsubl
sahf
push
lahf
mov
negb
loope
jnp
pop
or
inc
mov
lret
cmpsb
popw
pop
mov
xor
dec
outsb
push
ljmp
xor
push
push
aad
fucomi
mov
adc
pushf
dec
stos
cmc
jmp
add
adc
ds
push
xorl
popa
adc
adcb
cmpsl
mov
subl
jne
ret
stc
sub
sub
xchg
dec
int3
xchg
ficoml
ljmp
sahf
sub
lcall
std
sbb
aas
es
ret
repz
or
addr16
lea
bound
movsb
xchg
xchg
les
sub
lds
lret
sub
sub
mov
lret
xor
xor
sbb
out
xchg
jmp
mov
lods
sahf
das
mov
mov
jbe
movsb
xor
xorl
pop
lcall
in
mov
fiaddl
jno
sbb
lret
xchg
jne
cmpsb
jns
jbe
imul
mov
enter
ja
jo
mov
xor
sub
inc
xor
adc
or
outsl
and
lock
xlat
in
sub
rclb
jmp
xor
or
sub
aad
das
or
inc
mov
rolb
or
cmp
mov
aaa
add
add
mov
hlt
shrb
mov
adc
push
call
jns
aad
es
pop
ficompl
push
push
mov
and
outsb
movsl
mov
mov
jge
xchg
lods
rcll
cmc
push
rcll
xor
stos
data16
pop
rcrl
enter
stos
sbb
and
int3
jecxz
xor
and
lret
adc
in
aaa
stos
imul
sbb
imul
loope
stc
jle
rcrl
lret
xor
cwtl
sahf
mov
or
mov
scas
inc
stos
ret
jb
clc
push
bound
cmpl
jg
sbb
test
insl
adc
jns
and
mov
lods
jns
push
fsubs
or
xchg
icebp
das
cmp
lahf
sub
in
cwtl
xchg
add
jmp
inc
inc
addr16
mov
mov
or
xchg
dec
pop
sub
into
fildl
push
test
notb
or
mov
dec
and
imul
and
mov
sbb
push
xor
icebp
call
dec
jmp
mov
movswl
movsl
adc
sub
add
fists
or
xchg
stos
stc
xchg
jns
jbe
call
es
fnstenv
add
xchg
inc
or
imul
mov
imul
lea
repz
push
mov
ss
rcll
mov
movsl
dec
jle
xchg
stc
fwait
int
push
arpl
sbb
dec
jbe
add
and
mov
jae
push
test
out
xor
lret
jp
lock
mov
ds
jge
mov
adc
scas
or
popf
out
arpl
xchg
iret
ss
loope
mov
fstpl
dec
sub
push
loopne
arpl
pop
add
dec
cmp
nop
je
aaa
lret
ffree
aas
inc
lock
adc
repnz
sub
gs
pop
bound
or
dec
outsb
aas
int3
outsl
xlat
je
lcall
fwait
into
scas
mov
jp
adc
js
or
outsl
mov
dec
push
jmp
sub
std
lahf
jo
mov
incb
sub
push
push
jo
xchg
adc
cmp
into
daa
test
fs
aas
pop
sbb
repnz
scas
mov
inc
adc
cmp
sarl
pop
xor
loope
dec
xor
jae
pop
js
out
lahf
ss
fistl
ss
lcall
stos
xchg
mov
gs
inc
call
in
xchg
xchg
sarl
or
clc
fldt
dec
fwait
mov
push
repz
add
cld
mov
adc
pop
out
push
push
lods
ffree
xchg
stos
push
inc
mov
cwtl
aaa
je
mov
into
sbb
xor
test
hlt
mov
clc
sbb
pop
dec
lea
fsubl
js
sub
jg
test
jnp
push
out
push
mov
cmp
xor
arpl
movsb
int
dec
pop
lods
jmp
repnz
rolb
and
sbbl
add
es
jno
adc
and
xchg
mov
sbb
push
in
aas
lret
sub
sbb
add
enter
icebp
sub
ss
jb
imul
hlt
mov
push
fiadds
xor
dec
fs
fsubl
mov
movsl
mov
scas
push
or
pop
jecxz
jl
push
or
bound
outsl
jo
push
enter
cmp
daa
ret
jno
fidivrs
stos
cmc
xchg
rcrb
fdivrs
jge
les
add
xor
hlt
dec
dec
iret
sbb
insb
test
push
dec
push
add
lahf
mov
sub
mov
inc
ja
push
jecxz
mov
aas
push
cmp
pop
lahf
pop
push
bound
mov
sbb
sarb
mov
pop
push
mov
cmp
in
xchg
stos
cli
or
inc
lods
push
pop
jl
push
sub
xchg
nopl
daa
fstp
cs
dec
add
jb
sub
les
cmc
mov
ret
adc
inc
andb
push
aas
push
jle
cli
cs
xlat
inc
cmp
xchg
push
dec
rorl
sub
dec
push
push
cs
cmp
sub
cld
adc
jmp
dec
mov
dec
mov
clc
cmovb
cs
cmp
outsb
cmp
cmpl
xchg
fsubp
lock
cmpsl
inc
imul
insl
into
rcll
sbb
xor
push
mov
jb
movsl
push
icebp
icebp
mov
add
shl
and
or
sbb
mov
sbb
jne
neg
arpl
loop
arpl
mov
xor
stos
clc
rorl
push
fcmovnu
xchg
add
mov
pop
mov
hlt
ds
les
jge
dec
mov
jl
jbe
hlt
loopne
jnp
loope
incb
lods
scas
scas
jg
out
inc
jb
jno
pop
repnz
xchg
mov
stos
test
bound
repz
dec
push
adc
lahf
sbb
ljmp
in
pop
out
mov
imul
fildl
ja
push
mov
pop
mov
sub
call
dec
mov
imul
mov
cmp
xor
daa
aaa
mov
outsl
mov
movsb
or
cmp
in
jp
xor
fadd
out
and
or
in
loope
inc
jge
inc
leave
jnp
cmp
int
rolb
call
push
mov
testl
pop
cli
pushl
sub
sub
lock
mov
stos
mov
and
xor
sahf
adcb
imull
jno
fs
sub
or
sbb
dec
negb
jg
xchg
sbb
xchg
pushf
xchg
movsw
leave
cltd
cmpsl
loop
xor
int
mov
negb
loopne
mov
pop
mov
loope
stos
jg
mov
int3
aaa
dec
ret
xor
mov
fistpl
pop
jmp
nop
xor
shlb
rorl
lock
jp
addr16
jno
sub
cld
cld
lds
or
xchg
and
jne
add
ret
xor
bound
pop
xor
lods
jl
dec
sub
pop
ja
xchg
jae
shll
cli
lret
mov
in
jl
inc
hlt
pop
mov
outsl
divb
popf
out
popa
fwait
cli
xorl
sub
cmp
dec
dec
dec
fdivrs
sbb
fadds
cwtl
dec
add
or
jbe
mov
out
lock
jne
aam
cmp
aaa
xor
scas
push
mov
test
outsl
cmp
pop
cmp
pop
sub
fidivrl
ret
and
inc
lds
sub
dec
jnp
push
xchg
sub
imul
mull
mov
repnz
dec
mov
leave
mov
mov
push
pop
adc
xlat
or
out
dec
mov
push
pop
jg,pt
mov
inc
pop
pop
sbb
mov
xchg
mov
xor
or
ret
icebp
sub
int3
mov
jl
push
xchg
loope
cmp
or
mov
xchg
fsub
ds
mov
adc
mov
scas
sub
mov
and
jns
cmp
popa
stc
mov
movsb
xor
aad
sub
xchg
daa
jmp
ret
mov
xor
iret
xor
outsb
call
insb
lret
lea
adc
ja
xchg
cli
test
push
loope
jo
out
add
negl
xlat
std
mov
ja
lcall
aad
aas
bound
mov
inc
mov
push
push
scas
clc
addr16
mov
cltd
pop
imull
cmpsl
or
pusha
push
mov
je
ret
xchg
aaa
sub
and
aad
loope
out
movsl
loop
mov
hlt
and
movsl
pop
push
push
lret
daa
mov
clc
jmp
push
les
shlb
leave
pushw
lods
into
mov
aas
pop
lock
jge
pop
addr16
xchg
and
push
mov
add
aam
movsb
call
jmp
ficompl
in
xor
mov
or
cmp
shl
dec
out
xchg
ja
sarl
imul
adcl
dec
sub
inc
hlt
lret
jno
cmp
fbstp
mov
xor
push
jmp
xor
gs
ds
push
mov
addb
notb
sahf
std
pop
cmp
inc
arpl
fcmovb
inc
stos
bound
inc
inc
int3
pop
sbb
lock
movsl
jp
mov
lret
addr16
add
in
rolb
imul
jns
xchg
fsubr
xor
insl
cmp
mov
shll
sub
push
repz
push
mov
push
xchg
and
aad
xor
sbb
test
clc
mov
es
mov
mov
cmpsb
test
lahf
mov
push
fcomi
jns
add
sar
push
xor
gs
xchg
cmp
ds
rcrb
add
ds
pop
icebp
addb
insb
movsb
push
addr16
int
sbb
insl
fucom
jne
daa
imul
nop
xchg
dec
mov
ss
stos
mov
addb
lret
cmc
pop
fildll
imul
xlat
sbb
cmpsb
adc
fs
rorb
out
mov
push
out
sbb
icebp
xchg
sbb
outsl
lea
fld
xchg
test
sbb
js
push
repz
dec
pop
fdivr
rcll
imul
jg
ret
pop
nop
or
xchg
cmp
shll
lahf
cmpsb
in
pop
sub
mov
or
mov
mov
sar
inc
shrb
fcoml
push
sar
movl
xchg
jp
push
sahf
fisttpl
jns
mov
ud2
negl
int
shll
scas
sub
fildll
sub
out
and
inc
repnz
inc
rcr
or
testl
jne
jl
or
int3
and
jo
enter
sbb
aad
icebp
rolb
sub
sahf
push
addr16
push
sub
jecxz
sti
sub
cmp
ja
sub
flds
adc
mov
aaa
gs
not
into
shll
icebp
std
sbb
and
jmp
jns
clc
xor
cmc
cmpsl
jecxz
fstps
in
adc
xlat
cmp
push
add
inc
fldl
subps
outsb
push
jae,pn
mov
jle
cmp
mov
xchg
orb
sub
or
insb
or
int3
xchg
or
or
xor
jne
add
push
sub
sahf
and
pop
adc
pop
xchg
jg
out
cmp
in
pop
pushf
mov
pop
jle
inc
sbb
xchg
mov
pop
inc
push
lcall
pop
out
xchg
jecxz
ljmp
cmp
in
dec
mov
pop
mov
pop
pop
lcall
dec
fcoml
neg
cmpsl
rorl
lret
or
aad
dec
jp
mov
paddusb
lret
sub
sub
addr16
js
jb
movups
pop
mov
fwait
stc
lock
cltd
or
lods
je
dec
imul
mov
mov
stos
push
bound
test
insl
adc
icebp
rorl
loope
and
and
std
mov
add
daa
rorl
inc
setp
sub
cwtl
aas
pop
mov
test
lds
xchg
ror
pop
sbb
cs
mov
rcrl
jecxz
mov
clc
lods
fwait
pushl
sub
jne
cmpsl
leave
movsl
pop
and
pop
clc
cmpsb
daa
frstor
xchg
fwait
and
mov
dec
xchg
add
cmp
std
and
inc
inc
mov
cmp
outsl
mov
push
sbb
xor
fcoms
pusha
pop
xor
dec
ds
jge
mov
mov
flds
ret
int3
xlat
fistl
mov
jecxz
inc
and
jl
lods
in
sub
dec
fisubs
push
mov
sub
aas
call
sahf
lods
and
mov
push
pusha
adc
in
adc
lea
xchg
pop
jecxz
cmp
dec
pop
mov
imul
das
fstpl
std
pop
rclb
sahf
sti
jmp
dec
in
out
hlt
jno
mov
jbe
in
or
add
mov
in
dec
adc
cli
mov
ret
insl
mov
addr16
sbb
mov
lcall
xor
lock
pop
cmp
xchg
nop
clc
pop
sbb
push
les
scas
push
rcrl
roll
mov
out
fcos
push
add
push
lret
rcrb
cmova
cmc
inc
aas
fiadds
imul
pop
lds
aaa
aad
sub
rorl
add
lahf
or
dec
cmp
or
jb
fwait
stos
and
mov
dec
std
add
inc
ljmp
in
mull
fisubrs
mov
fucomip
jl
xor
nop
addl
lods
movb
cmp
iret
sub
cmpsl
pop
sarb
aas
jnp
push
xchg
fcmovbe
and
lods
xchg
xor
cmp
rolb
faddl
setle
fidivs
or
fdivrl
push
outsl
inc
xchg
add
mov
inc
mov
cld
loopne
cld
repnz
jne
cmpsb
xlat
sbb
cbtw
test
mov
inc
je
daa
mov
movsl
jecxz
or
push
and
cmp
data16
daa
xchg
xchg
movsb
mov
add
push
xlat
int3
into
xchg
cs
push
xor
aas
into
shll
dec
xor
jno
pop
jmp
push
add
push
es
lret
mov
inc
push
push
mov
add
xor
cltd
and
loope
stos
daa
push
aas
or
das
sub
xor
imul
rcrb
mov
out
mov
xchg
ficomps
enter
xchg
inc
leave
jg
mov
data16
dec
inc
jmp
aaa
fyl2xp1
add
jns
xchg
repnz
testl
cld
jne
pop
add
xor
push
jl
imul
push
or
pop
jp
push
in
mov
xor
xchg
mov
fdivs
cmpsb
fxch
icebp
jge
stos
shl
sbb
fnstsw
ret
in
repz
xchg
or
jl
inc
cs
leave
lcall
out
jg
pop
lcall
mov
mov
push
mov
xchg
sti
dec
push
push
dec
pop
xor
push
ja
dec
je
pop
nop
int
cld
out
adc
loop
addr16
stos
mov
mov
push
popf
adc
repnz
popf
mov
inc
sbb
or
out
jmp
dec
dec
hlt
bound
or
mov
jl
lret
jmp
inc
inc
jnp
sar
dec
xchg
adc
lret
movsb
dec
jle
push
testb
push
int3
jno,pn
and
out
fistl
dec
or
jmp
adc
data16
and
insl
aam
sbb
adc
out
or
mov
test
adc
andb
cld
hlt
aad
pushf
xor
cld
mov
scas
leave
das
dec
jg
pop
pop
mov
push
sbb
jns
xlat
xchg
add
in
lret
pop
adc
movsl
test
faddl
jecxz
jmp
outsb
das
enter
jbe
and
in
dec
enter
outsb
xchg
xchg
xor
in
call
inc
mov
sbb
cwtl
xor
clc
mov
rcll
arpl
cltd
aam
mov
jnp
outsb
sub
adcb
icebp
dec
cmp
sbb
in
test
std
divl
jecxz
stos
shll
mov
js
jmp
mov
stos
adc
or
xor
pop
jno
repnz
jb
sub
fistl
jge
int3
mov
push
pop
sub
sahf
push
or
insb
jnp
daa
pop
imul
sarb
adc
adc
push
stos
adc
push
push
mov
push
or
mov
mov
sahf
sahf
mov
push
push
aas
ljmp
test
loopne
push
mov
push
xchg
mov
dec
mov
mov
fisubrl
popa
adc
dec
and
aam
insb
add
xchg
push
out
jb
cmovp
lds
out
sub
loope
stc
jno
add
dec
mov
xchg
xchg
ret
add
roll
hlt
cli
ljmp
jb
enter
pop
dec
xor
mov
push
daa
xchg
les
add
add
jg,pt
mov
ret
xchg
xor
test
les
dec
shrb
pop
cli
push
or
push
lds
pop
mov
sti
in
push
sub
adc
jb
jp
in
stos
and
mov
jbe
mov
mov
inc
or
cmp
test
testl
pop
imul
out
sbb
ss
outsl
pusha
inc
pop
mov
jecxz
adc
mov
repz
pop
mov
cmpsb
div
lods
and
ror
xchg
sbb
add
sbb
or
dec
arpl
es
pop
lret
dec
jge
repnz
and
or
sub
shl
int3
ja
cltd
ja
xchg
jmp
loope
push
mov
push
sti
icebp
adc
push
mov
fwait
add
inc
cli
in
jbe
push
and
sbb
loopne
sbb
pop
data16
push
and
sbb
cmp
int3
lret
adc
add
cmp
or
daa
fcmove
loopne
stos
mov
shl
imul
pop
cmpsb
xchg
mov
pop
push
int3
in
and
pusha
lret
push
xor
jl
sbb
cmpsb
or
fsubl
jb
jno
pop
imulb
jb
xchg
lock
fsts
fsub
pop
or
dec
or
stos
ds
mov
subl
add
pop
jl
iret
and
pop
adc
and
scas
adc
in
xor
and
cmp
stos
inc
lret
sarb
mov
push
mov
or
arpl
sbb
and
cli
adc
cmc
dec
enter
or
mov
pushf
data16
imul
data16
xchg
loope
test
xchg
xlat
push
lcall
ja
pop
cld
shll
adc
divl
mov
out
addr16
cmc
jae
sahf
and
push
aad
sub
inc
fs
xor
popa
mov
push
or
sub
push
daa
inc
das
pop
fs
test
neg
out
jg
sbb
mulb
cmp
loop
add
stc
sub
or
push
pop
andb
lea
adc
test
out
sub
lock
inc
mov
ret
je
push
push
mov
cmc
sbb
aam
test
sbb
mov
js
inc
xchg
push
popf
in
mov
fs
das
mov
mov
divb
cmp
shrl
inc
shlb
xor
test
fistl
roll
push
insl
daa
int
xchg
mov
add
ret
lret
scas
cld
out
push
fwait
sub
scas
stos
dec
xchg
cmp
in
out
mov
or
and
add
bound
stc
clc
cmp
repz
and
mov
and
adc
add
pop
push
dec
mov
data16
aad
jecxz
or
jmp
cmp
mov
call
push
insb
insb
mov
sub
mov
enter
or
lods
sub
ficoml
aas
ljmp
aam
sbbb
insb
mov
mov
lock
js
test
inc
xchg
fwait
mov
mov
ret
xchg
pop
js
xchg
xchg
add
sti
pop
lea
adc
pop
xchg
cmc
and
gs
adc
adcb
xor
jp
and
movsb
and
add
mov
xor
dec
scas
xor
mov
or
sub
lret
sbb
int
rcrl
and
pop
sbb
push
repnz
movsl
imul
std
xchg
addr16
mov
fstps
outsl
test
enter
cmc
mov
pop
arpl
insl
sub
inc
push
and
xor
xchg
arpl
inc
jnp
mov
xlat
repnz
pop
jmp
mov
ficomps
xchg
rcrl
jne
pop
sbb
inc
sti
lret
aaa
cmpsl
pusha
pop
and
cli
loop
pop
pop
in
call
pop
lret
nop
mov
mov
mov
mov
popf
aas
repz
pop
cmp
xor
ss
xchg
pop
out
cmp
mov
pop
cmp
dec
pop
mov
pop
out
incl
dec
lret
inc
stos
sbb
pushf
and
gs
clc
sbb
add
test
mov
sar
sbb
sub
or
orl
xor
lcall
pop
iret
ss
sub
mov
mov
pop
mov
xchg
push
jle
or
adc
cmp
add
add
jo
sbb
push
fs
pushf
xchg
scas
or
fbstp
dec
xchg
js
orb
ss
stc
inc
mov
sti
and
xchg
dec
push
lcall
dec
nop
push
mov
adc
jecxz
insb
in
rolb
mov
or
insl
loope
lcall
js
je
or
jp
jp
fsubrl
jnp
or
mov
xorl
jnp
lods
pop
cld
call
adc
dec
jbe
loope
repnz
fmull
mov
scas
fmulp
push
push
into
out
lret
pop
test
dec
leave
pop
mov
data16
cli
cmp
cmp
or
dec
leave
rcrb
outsl
add
lret
scas
dec
add
cs
cmpsl
inc
hlt
cmp
inc
mov
xor
ret
cmpsl
mov
cld
push
mov
je
movsl
sti
push
mov
push
jb
mov
popf
sahf
pop
fbstp
aam
inc
mov
popf
stos
lods
fincstp
mov
fwait
xor
cli
ljmp
mov
xor
enter
scas
clc
int
cmp
loopne
repz
mov
sbb
and
sbb
cmp
add
ret
loopne
outsb
xrelease
in
sahf
rclb
push
xchg
push
int
andl
push
stos
das
outsb
sub
and
mov
mov
dec
movsb
jmp
sahf
jne
in
add
and
orb
pop
cmp
in
lret
movsb
iret
in
test
fcoml
mov
addr16
insl
or
xchg
das
outsl
repnz
add
xor
sbb
jp
scas
adc
push
outsb
js
inc
gs
and
scas
xchg
push
cwtl
jge
push
test
movsl
stc
push
jl
sub
mov
or
push
cmp
lods
mov
xlat
mov
leave
fs
pushf
les
test
lods
jl
dec
test
ljmp
add
pop
out
mov
popl
or
or
ja
add
mov
sbb
popa
aas
cmpsb
out
sbb
mov
xor
xor
push
push
das
repnz
gs
cmovnp
jbe
lock
imul
pop
pop
push
xor
adc
xchg
xor
push
sub
adc
subl
testb
fadd
notb
dec
push
sub
mov
xor
int3
push
mov
mov
pop
orl
inc
mov
xor
xchg
mov
loop
loope
test
subl
add
cld
lcall
in
aam
test
loop
je
and
jnp
daa
inc
test
call
test
fwait
popa
out
fmulp
sbb
mov
add
pop
cs
jnp
jecxz
xchg
ret
pop
mov
cli
addr16
lods
popa
mov
call
push
das
adc
les
lret
xor
xchg
mov
pop
mov
fisubs
ljmp
into
adc
ss
pop
dec
pop
dec
in
mov
mov
inc
lret
cmp
lds
into
mov
dec
rorl
cmp
pop
sarl
push
inc
out
jl
sarl
push
inc
lods
sti
jb
xchg
scas
and
lret
sub
in
gs
mov
mov
and
push
inc
repz
or
rorb
jo
and
cmpsb
push
xchg
inc
mov
and
arpl
mov
jo
cmpsb
stos
fneni(8087
jl
scas
mov
adc
enter
and
cmp
rcrl
xchg
and
mov
xor
add
or
jb
mov
push
shl
push
arpl
inc
xor
pushl
push
inc
add
adc
cld
mov
cmp
or
int3
cmp
sbb
sbb
mov
lcall
clc
outsb
into
into
sbb
ja
outsb
sub
aaa
adc
cltd
imul
jno
cmp
shll
mov
das
call
sub
icebp
fsubs
enter
jns
outsb
jnp
xor
mov
sub
cld
jb
clc
dec
adc
cmp
inc
mov
sti
mov
in
mov
mov
push
inc
ds
mov
clc
js
mov
push
outsb
or
xor
pop
mov
testl
popa
lahf
dec
test
pop
dec
and
stos
lcall
xorb
mov
ljmp
mov
mov
ss
jo
aas
push
cmpb
mov
sbb
push
add
mov
pop
sbb
repnz
cld
inc
out
xor
fs
jne
movsl
cmc
inc
mov
xor
or
jge
je
xor
cmc
dec
lea
into
or
dec
add
paddsb
inc
lods
or
lea
mov
mov
enter
mov
clc
dec
clc
testb
xor
dec
repz
push
pop
das
dec
popa
lcall
dec
or
sbb
leave
out
sub
rcll
ror
in
rolb
subb
cmc
sub
adc
and
lds
push
jge
imull
js
fldt
xor
adc
and
and
push
add
xchg
pop
jge
dec
lods
and
rolb
push
or
out
mov
mov
and
cmc
xor
imul
mov
lea
incl
ja
or
out
mov
cmp
mov
test
add
sarb
in
mov
enter
sub
push
jae
pusha
sub
xchg
mov
pop
outsb
push
enter
jge
mov
xor
pandn
rcl
mov
out
sub
in
mov
adc
std
jle
mov
or
into
cmpsl
out
pop
lods
push
stc
fisttpl
jl
fwait
enter
push
rorl
nop
jp
imul
dec
mov
ficoml
stos
lock
dec
ror
pop
xor
stc
aaa
sti
out
sub
into
sbb
das
loop
cmpsb
lds
sbb
xor
aaa
jb
in
cld
sub
dec
bound
fidivrs
clc
ljmp
or
mov
sarl
lahf
dec
add
lcall
outsb
pop
test
sub
sbb
testl
stos
fs
das
xchg
xchg
daa
arpl
inc
in
sbb
out
out
sub
mov
jl
add
dec
sub
xor
incl
mov
or
xor
int3
lods
mov
inc
sub
inc
sbb
repnz
call
daa
inc
inc
inc
divb
ja
insl
sbb
lds
mov
push
mov
and
hlt
clc
inc
nop
xchg
imul
push
not
add
clc
mov
xlat
icebp
cs
bound
ja
or
inc
add
dec
mov
cmc
adc
es
movb
imulb
sub
rorb
push
aam
xchg
je
outsl
mov
and
sti
scas
sub
rcpps
push
sub
icebp
mov
gs
imul
sbb
aas
push
into
fnsave
mov
mov
push
jmp
xor
insb
pop
push
xchg
mull
fisubl
sbb
sub
in
mov
cmpsl
int3
sub
mov
mov
xor
cmpsl
test
xlat
push
rorl
stos
jae
jno
movsl
pop
cli
sub
or
push
mov
in
xchg
adc
or
dec
fstpl
js
fs
rolb
fcmovbe
or
xchg
and
xor
pop
sub
cwtl
sub
sbb
push
aas
sub
sub
lea
lcall
or
and
jmp
test
hlt
nop
lods
push
fisubl
dec
scas
insl
jbe
inc
mov
mov
je
leave
xchg
dec
iret
xchg
fildll
sbb
xchg
mov
mov
mov
movsb
jle
dec
cwtl
xchg
imul
jb
out
mov
pop
movsl
cs
out
ftst
sub
les
add
lea
lods
and
aas
mov
hlt
adc
ljmp
movsl
inc
inc
negl
dec
movl
js
pop
std
xchg
xorl
rorb
mov
pop
xor
sbb
insl
and
fs
xor
pop
fstpt
data16
dec
cmp
sbb
push
pop
pop
sbb
sub
jge
jb
andl
andb
cmp
inc
or
xchg
jnp,pn
mov
stc
outsl
xchg
inc
sahf
or
imul
icebp
cmc
out
xchg
ljmp
cs
or
mov
mov
mov
mov
insl
sbb
or
int
mov
sti
shl
insl
adc
jecxz
or
pop
pop
scas
loopne
xor
in
adc
rcll
jl
sti
lcall
repnz
push
dec
and
mov
shr
push
adc
mov
inc
fildll
sub
xor
aaa
mov
faddl
sub
mov
pop
sahf
and
pop
dec
cmp
js
xadd
jge
sarl
push
or
push
add
arpl
xchg
xchg
sub
sub
ja
loop
mov
stos
cltd
lods
and
hlt
mov
jle
mov
add
and
sbb
sbb
imul
jp
adc
repnz
xchg
xor
rorl
popf
mull
sub
cwtl
iret
push
dec
loopne
lret
sbb
xor
push
iret
es
outsl
inc
cmp
cmp
and
mov
or
mov
rcll
aam
sbb
pushf
ja
fdivl
or
xchg
push
sbb
xlat
mov
mov
xchg
add
xlat
cmp
cli
scas
shlb
movsb
add
clc
in
or
adc
sti
ret
mov
xchg
jns
bound
or
xchg
and
mov
outsb
in
mov
aad
xor
pop
loope
push
cmpsb
mov
push
adc
and
jmp
mov
repnz
jle
pop
negb
mov
test
bound
lods
hlt
mov
xchg
and
sbb
jl
mov
mov
or
jmp
mov
jnp
add
bound
mov
cmp
adc
pop
jae
push
dec
shrb
sarl
nop
in
cltd
mov
fadd
test
mov
sbb
pop
repz
sbb
lea
jns
fmull
adc
adc
test
sub
jp
es
mov
dec
jmp
dec
pop
xor
ds
xchg
and
sbb
daa
js
or
and
xor
xchg
xchg
std
test
jmp
xor
cmp
jle
sahf
stos
in
xchg
pop
dec
ja
popf
vpcmpeqb
or
in
dec
push
mov
and
pop
addr16
jecxz
inc
add
mov
jb
dec
rorl
fldenv
xchg
test
add
pop
ja
test
frstor
adc
icebp
ret
faddl
push
dec
jnp
sbb
sarl
lahf
xchg
or
js
decl
sub
mov
and
loop
inc
lods
loopne
pop
out
inc
rcl
pop
mov
out
out
daa
mov
jge
cmpsb
adc
lods
dec
mov
add
jle
jno
ljmp
out
cmp
xchg
test
dec
jbe
loopne
mov
inc
adc
push
out
pop
jmp
and
imul
int
movsl
hlt
mov
add
or
mov
push
or
jbe
mov
pop
inc
mov
jns
jp
jmp
mov
mov
adc
dec
int3
fisttps
xor
fucom
jbe
loopne
aam
push
into
in
mov
add
imul
pop
iret
mov
incb
test
mov
jmp
dec
jmp
aam
fidivrs
cmp
push
mov
scas
xchg
div
in
sbb
mov
pushf
ljmp
jge
in
stc
ss
lock
jae
in
popf
fimuls
dec
fiaddl
fucomp
pop
ljmp
mov
dec
lods
lret
repnz
cli
fs
mov
lcall
pop
mov
lock
mov
cmp
mov
pop
push
and
ficoms
mov
push
mov
bound
sub
fs
shr
sub
cmc
scas
lcall
repz
daa
xor
mov
sti
add
mov
and
loop
pop
and
loope
lds
mov
jne
sahf
mov
push
movsb
inc
ds
or
loope
push
data16
call
icebp
insl
add
pusha
fidivrs
add
in
jg
xchg
mov
je
xchg
scas
mov
sub
lds
test
mov
clc
xchg
mov
or
sahf
sbb
ds
adc
idiv
pop
out
xor
out
or
movsl
or
aam
push
loope
or
or
std
add
mov
add
gs
das
cmp
lods
mov
push
jle
neg
movsb
rcrl
sub
sub
push
add
and
mov
dec
loope
popf
push
fstps
idivb
dec
fnsave
loopne
pop
out
in
hlt
adc
outsl
ret
jl
adc
sti
orb
inc
jmp
outsb
das
shll
xchg
stos
ss
leave
out
aaa
mov
and
or
in
decb
cs
dec
pushf
cmp
inc
mov
and
mov
shlb
js
loopew
xchg
lret
dec
pusha
xchg
test
stc
ror
xchg
sbb
in
into
jb
dec
or
xor
mov
es
jl
mov
loop
jmp
dec
jnp
xchg
pop
mov
scas
pushf
cmp
in
sti
jg
outsb
mov
mov
dec
rcrb
pop
je
cmp
dec
sub
jbe
mov
jae
xchg
mov
pop
ret
jno
sub
mov
aam
std
mov
xor
les
mov
mov
insl
add
daa
bound
mov
dec
xor
push
repz
sub
adc
xchg
sub
mov
add
shlb
fists
enter
pushf
and
rcr
leave
ljmp
not
mov
shll
xchg
mov
roll
inc
int
xor
in
imul
dec
mov
pop
xchg
jg
jp
iret
dec
inc
pop
add
mov
push
add
not
jo
push
jno
push
popf
jle
xlat
xor
lea
bound
mov
mov
mov
push
adc
lods
in
outsb
fdivrs
jno
test
leave
inc
nop
scas
adc
jmp
addr16
xchg
outsb
xchg
scas
pop
xlat
scas
xchg
inc
cli
scas
jbe
pop
add
movsl
add
cmp
stc
sbb
push
jle
xchg
fcompl
adc
lds
sbb
xchg
dec
mov
pop
fadd
cmp
dec
jge
stc
scas
push
rclb
int3
loop
add
jne
push
mov
scas
pop
call
movsl
lods
mov
insb
pop
or
cmc
mov
popa
jae
insb
mov
add
in
lahf
mov
lds
or
sub
xchg
das
inc
mov
mov
inc
data16
test
push
outsb
xchg
ljmp
scas
mov
mov
cld
int3
out
fsubl
add
stc
nop
in
sub
xchg
jno
fs
das
cmp
cmp
dec
xlat
mov
sub
jne
testb
clc
or
nop
inc
stos
test
cmpsl
mov
fistpll
stos
mov
pop
inc
pop
push
aas
rcll
push
sub
incb
dec
mov
mov
cld
nop
test
xchg
dec
push
push
push
in
std
sub
push
nop
orl
sbb
jl
mov
sbb
sahf
mov
fistpll
pop
adc
adc
sub
call
cltd
out
mov
fisttps
mov
inc
sbb
cmc
imul
loop
inc
inc
add
and
lret
sti
dec
lods
adc
jae
insb
adc
mov
inc
insl
fimuls
imul
jg
adc
jns
jmp
test
xor
es
lds
sahf
add
lods
std
loope
jle
dec
mov
loope
test
test
sub
test
pop
rol
hlt
ret
testb
popf
sub
andl
cmp
mov
cmp
mov
dec
iret
dec
js
jecxz
xchg
mov
xor
nop
pop
mov
dec
leave
bound
mov
sbb
and
data16
popa
out
xchg
mov
xchg
scas
adc
add
mov
data16
xchg
xchg
fcmovnu
das
sbb
mov
pop
fildl
shl
mov
push
or
add
adc
jl
jl
lods
mov
adc
push
and
loop
xchg
fsubs
xor
cmp
pop
mov
pop
and
inc
jne
ror
popf
push
rcl
mov
mov
stos
xorl
jb
insb
repz
mov
fnsave
stc
jg
push
fwait
mov
jg
in
jmp
negb
pop
xchg
orl
sbb
insb
jmp
int
adc
push
aaa
dec
jle
lods
and
insl
lret
lret
xor
lret
les
nop
jle
xchg
out
test
push
cmpsl
push
cmp
lcall
pop
lock
cmc
nop
add
and
push
sbb
popa
dec
dec
cmp
push
adc
mov
cld
sahf
cmp
jne
lcall
ret
not
repnz
fcmovbe
xchg
imul
push
adc
lret
mov
lods
ljmp
pop
aaa
lcall
mov
out
leave
sbb
or
mov
insl
insb
add
lret
jle
je
jae
arpl
adc
cmp
ficompl
and
stc
xor
aam
or
loop
pmaxub
mov
inc
lods
data16
push
popf
int
fucomp
xchg
mov
push
jecxz
in
js
sbb
movsb
aaa
xor
mov
aaa
or
sbb
push
inc
add
js
mov
push
add
loop
shl
outsb
je
mov
xor
aas
dec
pop
cmp
mov
mov
je
mov
xchg
jp
ret
jb
sub
sti
movsb
scas
lcall
lcall
dec
movsb
push
push
cmp
dec
rclb
push
push
das
mov
arpl
daa
cmp
loop
test
loope
and
adc
sbb
fwait
xor
arpl
pop
xor
ret
mov
daa
xor
mov
js
and
or
inc
jge
idivl
lret
mov
shrb
orl
and
xchg
add
mov
dec
inc
jns
shr
cltd
mov
aaa
sbb
and
nop
sub
mov
aaa
loopne
adc
sub
movsb
pop
into
sar
adc
and
in
add
mov
test
jb
dec
jge
xchg
jo
roll
add
mov
leave
lret
xor
sub
cmp
das
pop
nop
mov
imul
inc
xchg
mov
mov
testl
jmp
dec
fisubl
addr16
sbb
inc
je
lods
add
adc
jae
das
xor
cmpsl
and
dec
push
test
sub
out
mov
push
xor
fsub
or
jl
fiadds
into
mov
mov
inc
pop
xchg
fiaddl
cmp
sub
je
lea
dec
jmp
inc
fwait
add
or
mov
ljmp
popf
int
fsubs
sub
push
inc
pop
rol
pop
xchg
sub
in
cmpb
inc
imul
mov
pop
rolb
sub
mov
jno
imul
sub
sub
cmp
lret
jno
cmp
dec
in
fnstenv
pop
push
mov
movsb
jb
cmp
add
xchg
das
lret
lahf
lcall
mov
loopne
cltd
sahf
lods
xchg
cltd
sub
push
pop
bound
cmp
scas
jl
dec
mov
sbb
lea
pop
adc
dec
push
add
sbb
mov
adc
cli
rorb
jle
mov
cli
push
or
movsl
dec
call
aas
xor
loop
sbb
clc
cwtl
push
mov
jnp
lret
loope
enter
sub
in
mov
loop
addr16
adc
popa
xchg
call
xlat
pop
outsb
adc
mov
stos
popa
mov
xor
jbe
inc
test
mov
data16
jg
rcl
cmp
jmp
cmp
mov
lock
mov
fdiv
jno
mov
fidivrl
mov
xchg
mov
test
movsb
jp
mov
dec
inc
rolb
mov
ds
call
movsl
loopne
repz
pop
pop
aam
ljmp
dec
jne
and
sbb
inc
mov
cmpsb
mov
inc
jne
xchg
aaa
pop
xchg
cmc
loopne
aad
mov
add
jmp
pusha
cmp
in
and
mov
gs
jnp
adc
mov
xchg
rcll
mov
mov
push
push
xchg
add
sbb
cltd
int
test
les
mov
fildll
out
add
push
sarb
push
outsl
dec
loopne
loope
arpl
enter
and
inc
sub
jne
test
push
jne
add
fs
rorb
sub
cmpsl
sbb
rclb
int3
mov
jns
out
mulb
cmpsb
lahf
ja
mov
pusha
adc
push
lods
xlat
cwtl
gs
or
pop
or
push
gs
sub
clc
std
cmc
and
movsb
or
nop
mov
lea
enter
int
scas
mov
push
fdivs
arpl
nop
in
lods
inc
loop
xchg
aam
stc
andb
sbb
pop
inc
les
push
xchg
push
fcmovnb
cltd
mov
sarl
mov
outsl
pop
mov
daa
gs
loope
xor
icebp
xor
dec
or
mov
sbbl
and
push
ja
mov
xor
jp
outsl
push
xchg
sti
sub
pop
sbb
jle
movsl
test
es
lods
cmp
mov
mov
dec
xor
dec
loop
mov
imul
stc
push
nop
pop
shrl
cltd
mov
cld
testl
sub
mov
pop
xlat
pop
imul
pushf
pop
repz
cmp
add
push
rcrl
inc
int
inc
out
cmp
shr
mov
f2xm1
sti
cld
sub
rcll
inc
leave
lahf
push
call
out
and
arpl
xchg
pop
push
cmp
push
shll
or
stos
repz
ror
adcb
push
insl
adc
imulb
sahf
and
bound
and
push
pop
iret
clc
cld
movsl
mov
mov
mov
fadd
insl
movsl
adc
xchg
dec
movsb
aam
add
ja
mov
jle
pop
repnz
pop
or
inc
jb
leave
movsb
xchg
pop
jne
rcrb
nop
fidivrl
icebp
addb
out
cmp
idivl
jnp
xor
ja
jecxz
dec
cwtl
icebp
adc
pop
push
push
stc
sti
mov
push
iret
or
sub
xor
pop
sbb
mov
daa
push
loopne
mov
ja
or
pop
dec
cltd
jp
jae
orl
int3
jo
in
out
cmp
inc
fisubl
jns
ja
adc
or
mov
adc
data16
notb
lock
jae
imul
cmp
pop
jp
js
push
jbe
or
add
adc
pusha
stos
dec
cwtl
pop
mov
enter
mov
lret
mov
mov
fs
or
dec
lds
ja
dec
jecxz
mov
out
sub
pop
movl
jo
mov
sub
mov
add
pop
pop
ret
lret
call
xchg
fildll
sbb
and
insl
data16
ljmp
leave
mov
in
push
lahf
pop
dec
push
pop
xor
ljmp
add
adc
mov
sbbl
sub
jno
pop
popaw
xchg
xchg
mov
inc
cmp
xchg
pop
and
pop
data16
js
mov
adc
loope
arpl
xchg
sub
movsl
dec
out
jecxz
cmp
dec
cmp
movsb
xor
lcall
xchg
popa
push
jl
scas
pusha
addr16
pop
test
jne,pn
pop
mov
jp
iret
cmpb
les
and
aaa
bound
sbbl
xchg
nop
mov
andb
sbb
inc
pop
or
cs
inc
movsb
jg
lods
mov
fstpl
cmpl
jne
push
into
lahf
sbb
iret
cmp
push
pop
outsl
cli
int3
inc
outsl
daa
cmpsl
pop
mov
mov
cmpsb
int
sbb
movsl
fsubl
cmp
jbe
inc
shrl
sbb
mov
push
sbb
sbb
jae
mov
xor
ret
je
sahf
xchg
fcoms
cmpsl
push
repz
aad
xor
inc
xchg
outsl
outsl
jg
inc
jne
test
loop
or
cmp
xchg
out
out
mov
add
test
xchg
nop
sbb
iret
sahf
ret
xchg
sahf
loope
test
xchg
fmuls
sahf
stos
xchg
fwait
mov
fisubrs
add
scas
push
pop
dec
inc
imul
and
or
int3
push
stos
scas
push
js
icebp
mov
pop
push
inc
scas
push
mulb
cld
inc
or
dec
cmp
aam
sti
jnp
dec
insl
pop
mov
jb
push
aaa
xor
cmp
mov
cld
cmp
cmp
sub
and
test
adc
cmpsb
decb
pop
add
daa
rcll
scas
shlb
fs
bound
cmp
jmp
add
lret
out
lock
insl
clc
jg
jle
loopne
push
icebp
ficompl
cmp
outsl
pop
mull
fcoml
pop
xchg
dec
sub
pop
jno
inc
repnz
push
stc
jbe
ss
pop
cmp
adc
fwait
adc
xchg
pop
scas
push
test
push
cmp
mov
ret
adc
ja,pn
cs
out
rclb
rolb
mov
sub
pop
mov
shll
cmp
add
xchg
lds
jmp
cmp
push
xchg
popa
int3
jmp
mov
cmpb
insb
in
jle
adc
repz
test
shll
out
jne
inc
addr16
mov
fninit
fwait
xchg
test
jae
jb
push
fidivs
std
push
push
lock
sbb
inc
mov
mov
out
adc
xor
cld
xor
hlt
jmp
mov
stos
lahf
aam
mov
jno
jecxz
ja
test
addr16
mov
push
pop
out
inc
lcall
int
sbb
and
inc
and
sub
hlt
jl
cmp
xor
xchg
sbb
je
dec
shlb
jge
test
dec
jp
cmc
lods
outsb
jmp
in
dec
movsb
fcoml
sbb
and
jno
loop
sbb
ljmp
and
fldenv
outsl
mov
mov
mov
ret
jmp
jne
push
mov
xchg
jle
sbb
les
add
mov
ja
cmp
sbb
pxor
pop
aam
nop
push
inc
jp
mov
sti
push
into
aas
jecxz
add
xor
jg
lds
lock
inc
or
rorb
fmuls
rorl
mov
mov
cmp
jp
cs
pop
push
xlat
fs
dec
jp
xor
dec
insl
xchg
je
frstor
mov
das
jnp
shrb
pushf
dec
push
push
je
test
dec
sti
dec
pop
jl
lea
loop
loopne
popa
and
popa
nop
out
in
mov
push
out
sub
scas
mov
jecxz
inc
add
std
inc
rcll
in
xchg
cmp
and
xor
cmp
xor
jmp
jecxz
imul
push
add
xchg
lock
movl
mov
dec
xor
push
fimuls
cmp
testl
cmp
sbb
mov
cwtl
test
repz
adc
out
inc
or
shl
sbb
pop
int3
call
pop
cmp
hlt
rclb
mov
imul
and
fidivrs
dec
add
fbld
mov
negl
clc
idivl
mov
push
pop
loopne
das
fisubrs
mov
cmp
pop
fidivrl
into
and
sub
jno
dec
xchg
xor
and
dec
addr16
adc
mov
pop
lods
rorl
or
or
dec
out
movsl
pop
lahf
xor
sahf
pop
shlb
arpl
in
and
xorl
ret
xor
pop
mov
sub
icebp
or
out
sahf
sahf
mov
outsl
test
les
js
test
mov
push
out
pop
cmove
cmp
imul
xchg
mov
add
cmp
jle
mov
imul
icebp
xor
mov
scas
lods
loope
imul
cmp
clc
lds
push
movsb
rorb
or
je
sub
lock
adcl
or
sti
ret
push
out
sbb
xorb
mov
insl
mov
push
mov
cmp
icebp
push
jecxz
stos
loope
bound
adc
lds
mov
xor
imul
popa
js
push
dec
jno
jp
lods
sub
imul
call
std
dec
daa
push
sbb
ljmp
mov
xchg
filds
fstps
inc
add
mov
adc
mov
mov
lret
cwtl
in
or
imul
add
test
xor
in
push
and
fldenv
int3
pop
lods
adc
dec
mov
sub
jg
jno
sub
cmp
jecxz
add
and
sub
or
int
pop
rcll
add
fldcw
push
mov
mov
jae
push
scas
and
mov
popa
in
stos
pop
cs
push
push
inc
jns
xchg
clc
pop
mov
xor
mov
scas
call
or
mov
mov
pop
dec
stos
cmp
mov
jb
pop
inc
aad
repnz
inc
stos
loope
popa
in
pop
dec
sbb
dec
push
xchg
loope
or
lea
push
push
add
adc
popa
aaa
xor
bound
ja
xorl
jne
testl
in
aas
and
mov
jo
dec
mov
inc
arpl
incl
sbb
push
stc
push
arpl
test
in
in
iret
fsubs
ret
push
popa
mov
sbb
stc
add
xor
imul
cmp
nop
repnz
push
sub
push
jbe
arpl
sbb
xor
sbb
rclb
decl
cmc
fwait
pop
pop
xor
jl
daa
ret
push
movsl
out
and
or
and
mov
add
add
push
push
cmp
cmc
xchg
cmp
or
or
bound
xorb
mov
rol
sub
pop
in
pop
cwtl
popf
test
or
sub
dec
and
fiadds
test
add
inc
xor
xor
adc
repnz
lcall
loope,pn
fistps
cmc
mov
outsb
pop
mov
cmpb
mov
cmp
cwtl
mov
cli
xor
loope
je
les
mov
add
and
jbe
xchg
dec
xlat
dec
mov
loopne
inc
adc
adc
testb
sub
into
sbb
sti
or
sub
cmpsb
mov
cli
mov
push
js
or
fmulp
or
jle
ljmp
fsubrs
ljmp
inc
inc
push
push
js
sbb
ja
xor
jl
xchg
nop
mov
testb
jg
mov
outsl
mov
loope
jmp
outsl
or
iret
jbe
dec
je
mov
je
sbb
popa
jae
and
push
dec
inc
bound
xchg
lret
in
jmp
mov
int
dec
add
mov
sbb
sub
sahf
sub
mov
outsb
imul
xchg
js
and
mov
subl
and
dec
xchg
push
mov
mov
ja
fsubrl
fsubr
jmp
loop
add
push
es
mov
mov
pop
mov
mov
mov
push
cmp
imul
and
xchg
sbb
xchg
imul
mov
push
cmpsl
sub
jmp
shrb
and
sub
rolb
testl
dec
in
psrlq
jecxz
int
out
adc
sub
inc
test
mov
daa
orl
lcall
test
lods
lds
adc
inc
aaa
lcall
or
xchg
or
push
inc
lret
jg
xchg
mov
mov
in
inc
loop
pop
insb
rorl
pusha
mov
adc
add
push
inc
testb
pop
jne
ret
mov
add
rep
jge
xchg
and
inc
sbb
icebp
scas
pop
adc
jg
lahf
movsl
das
nop
cwtl
jl
mov
mov
xlat
mov
out
or
pop
jecxz
loop
loop
lods
out
std
hlt
add
cli
push
into
into
call
mov
pop
test
fisubl
sbb
sbb
adc
dec
shll
xor
movsb
ss
jle
or
mov
jnp
push
dec
fcmovbe
and
mov
popf
jg
fiadds
inc
mov
adcb
repz
and
xor
das
icebp
dec
sub
inc
push
loopne
mov
mov
stos
mov
stos
xchg
mov
movsl
cli
mov
scas
dec
lock
jp
fdivrs
xchg
and
lret
sub
push
fnsave
pop
sahf
add
pop
cld
mov
mov
cmc
insb
lds
jnp
pushf
xchg
or
pop
clc
das
mov
mov
lods
mov
hlt
adc
sub
push
jnp
mov
lahf
subb
mov
or
clc
shrb
pop
sbb
pop
cmp
bound
or
xchg
ret
mov
pop
cltd
xor
or
fistpl
imul
push
mov
push
mov
je
aad
hlt
inc
cmpsb
js
jge
lret
icebp
out
test
jns
mov
inc
cmp
add
push
lret
adc
out
into
cmp
stos
add
inc
in
cmp
or
inc
sbb
call
iret
cmpb
fimuls
push
mov
js
enter
les
lcall
mov
sub
jnp
pop
mov
loop
jne
and
xchg
add
mov
xchg
sbb
cmp
sbb
inc
push
push
cs
mov
je
into
xchg
xchg
mov
lock
jb
sbb
jp
xchg
out
xchg
pop
sbb
fistl
sub
mov
add
dec
test
push
xor
fs
pop
cmp
cmp
fisubrl
add
jne
cmpsl
xchg
dec
bndldx
pop
pop
adc
push
gs
push
dec
mov
ja
jns
loopne
xchg
test
les
xchg
int3
inc
popa
ss
lods
fadds
lods
cmp
jo
ffree
out
insb
sbb
cmp
into
test
popf
jecxz
outsb
in
pushf
mov
push
loopne
mov
mov
pop
add
insb
mov
ss
je
xchg
and
hlt
std
ja
movsl
mov
mov
int3
xchg
mov
mov
pop
data16
mov
inc
mov
adc
loope
sub
cwtl
test
scas
pop
gs
addr16
sbb
mov
jbe
sbb
popa
mov
hlt
mov
xor
aad
pop
imul
xchg
sti
jl
rcrb
and
out
jmp
orl
test
pop
outsl
pop
lahf
xchg
insl
jb
mov
add
dec
or
mov
dec
ficoml
dec
pop
stc
adc
in
mov
mov
mov
jp
push
sbb
inc
lret
add
lds
das
sti
sbb
dec
ljmp
fstsw
lea
xchg
lods
test
cs
jge
dec
or
loope
pop
xlat
pop
mov
sub
inc
lret
mov
mov
xor
lods
mov
in
push
push
adc
daa
add
xchg
xlat
add
movsb
rolb
or
jno
lret
notb
lahf
adc
enter
pop
pop
or
fistpl
xchg
call
xchg
mov
or
pop
pop
jno
xor
insl
lods
jns
xchg
aam
push
sti
aas
mov
mov
xchg
mov
cmpl
test
daa
aas
test
data16
mov
mov
outsl
sbb
fistl
sub
pusha
xadd
sarl
pop
adc
in
imul
cmpsb
xchg
xchg
shll
or
and
sahf
and
fcoms
ljmp
xor
xor
enter
jle
lods
test
ret
in
sbb
mov
in
fdivrl
fdivp
push
jne
ret
sar
add
push
and
xchg
xor
shlb
sbb
mov
lods
pop
pop
insl
xor
int3
leave
mov
out
dec
in
insb
lcall
aaa
or
fucomip
mov
ror
ret
clc
xor
mov
push
jp
ficoml
cld
xchg
xor
xchg
mov
xor
out
jl
mov
and
pop
add
cli
and
xchg
es
dec
xchg
sub
sbb
cmp
or
jno
push
fisttpl
fstl
sbb
and
adc
lock
mov
dec
repnz
mov
mov
inc
sbb
and
fwait
cmpsb
lret
lahf
pop
xchg
mov
pop
push
rolb
sarb
cmp
sub
pushf
cli
test
lcall
cmovle
cli
dec
and
popa
jge
and
andl
lods
subb
fs
mov
jne
in
pop
mov
mov
lods
push
pusha
add
and
jg
xchg
or
xchg
movsb
add
mov
jae
decb
pop
add
xchg
sub
xor
test
jle
lcall
push
xor
adc
mov
jbe
ljmp
mov
cwtl
cmpb
rcl
iret
mov
shrl
jns
mov
xchg
ret
lock
pop
xor
push
sub
les
push
or
mov
xlat
iret
jmp
cmp
jns
mov
lahf
or
cmp
cwtl
add
popf
or
cmp
cltd
inc
pop
xchg
inc
inc
stos
mov
fdivs
inc
aad
cmp
je
cmp
jecxz
into
add
pop
jns
mov
mov
inc
pop
lods
and
or
inc
aad
call
push
loop
pop
mov
sub
in
add
int3
cmp
push
push
lds
stos
jecxz
jge
cld
add
data16
fcompl
ret
div
cmpsb
out
xor
cwtl
out
jnp
test
sbb
cmpsl
out
push
dec
repnz
xchg
jb
movsl
or
cli
mov
sub
cmpsb
rcr
mov
sub
shrb
adc
xchg
push
rcll
testb
js
sbb
mov
inc
incl
out
and
pop
fmul
sub
mov
rorl
mov
in
cmc
pop
lret
cmp
push
icebp
xchg
push
outsl
popa
sbb
fisubs
mul
nop
clc
icebp
fidivl
pop
ljmp
push
icebp
sti
addr16
add
mov
lea
xchg
bnd
mov
aam
mov
test
cmpsb
movsl
sbb
jbe
pusha
out
add
push
ss
xor
push
dec
mov
cltd
cmovg
daa
mov
pop
insl
adc
in
push
xor
insb
pop
push
xor
lea
ret
pop
sub
lds
sahf
or
dec
repz
fcoml
inc
addr16
xchg
inc
mov
or
shlb
push
xchg
xchg
adc
cld
sbb
sub
js
xchg
cmp
in
mov
cmp
fmulp
sub
jl
adc
xlat
cli
push
mov
mov
xchg
inc
add
ja
mov
or
roll
sti
jns
add
popa
bound
lods
xchg
in
jne,pn
dec
jb
lock
fs
loope
rcrl
jb
inc
cmp
cli
repz
mov
enter
mov
xchg
jns
jg
cmpsl
xor
out
fwait
add
out
cmpsb
aam
sub
insb
xchg
push
sub
push
fs
cwtl
leave
jg
dec
mov
jmp
and
or
push
sti
or
stc
popa
dec
sbb
inc
gs
arpl
cld
xchg
sbb
push
mov
mov
mov
lods
mov
lret
mov
adc
pop
push
sub
pop
stos
pop
movsl
and
std
jbe
xorb
addl
xchg
mov
rolb
loopne
mov
mul
mov
dec
int
stos
pop
in
sahf
cwtl
fwait
lret
sbb
push
rorl
xor
dec
xor
mov
jb
jne
or
inc
out
dec
aad
jmp
or
das
adc
dec
inc
enter
pop
pop
add
test
and
sbb
inc
mov
mov
or
pop
cmpsb
test
jge
je
jbe
mov
cmpsb
fildl
adc
and
negb
stos
in
lea
adc
pop
arpl
cmp
push
mov
push
test
xchg
ret
push
push
inc
out
cld
inc
lcall
and
ja
jecxz
sub
pop
orl
int
sbb
pop
inc
add
push
in
push
xor
mov
push
icebp
shrb
popf
leave
xchg
mov
xchg
into
and
mov
jbe
or
int3
ret
pop
data16
ljmp
cld
push
fnstenv
rorl
pop
shrl
mov
test
cmp
fdivrs
in
lods
cmp
rcl
jbe
and
fldl
rorl
dec
add
adc
mov
ljmp
push
and
ret
add
aad
in
ds
mov
dec
daa
mov
xchg
cmpsl
xchg
pushf
in
test
cld
mov
xor
stos
xchg
in
leave
cmp
jbe
mov
das
dec
mov
jnp
rorb
xor
test
cld
sbb
cld
in
lock
mov
lret
pushf
xchg
cmp
jno
rcrl
inc
jae
sub
cmp
and
fs
or
xchg
mov
add
push
or
jecxz
insl
clc
push
fildll
sub
test
xorb
xchg
jnp
int
add
jnp
stos
jns
into
sarb
das
cmp
push
ret
sti
mov
push
sbb
jmp
adc
mov
fimull
pop
pop
jnp
data16
sarl
fwait
dec
adc
je
loopne
add
and
cmp
dec
pop
push
out
test
daa
xlat
add
cwtl
cld
dec
dec
out
pop
cmp
outsb
cmp
cmc
lea
loope
outsb
adc
das
cwtl
js
jl
sub
sub
cltd
push
int
sbb
mov
add
dec
call
lock
clc
bound
dec
in
mov
mov
lea
aad
movsb
test
pop
sbbb
jb
push
sub
add
push
adc
adc
test
iret
jmp
or
inc
std
dec
jmp
je
lret
scas
outsl
dec
and
xor
icebp
jbe
outsl
repnz
jge
into
ds
lret
jmp
stos
and
rdmsr
lcall
nop
xor
ljmp
mov
repnz
dec
add
dec
pop
mov
into
in
xlat
xchg
testb
inc
scas
dec
repz
repnz
cwtl
or
xchg
ds
jmp
lock
cli
push
nop
int
push
loope
lods
jns
ja
lods
orl
sahf
mov
cmp
push
rcrl
lcall
sahf
dec
dec
push
rol
cs
nop
sub
es
pop
je
mov
mov
push
xchg
in
shrl
dec
fs
pop
and
push
scas
fimull
hlt
sbb
xlat
xchg
sbb
leave
dec
mov
sub
sub
mov
mov
sarb
loope
mov
mov
mov
inc
mov
test
aad
cmpb
dec
mov
or
and
sahf
push
aam
sarl
popa
inc
pop
loope
mov
pop
popa
mov
sub
ljmp
xor
push
outsl
lcall
mov
push
and
cltd
xchg
fcomip
sub
xor
mov
andb
and
aas
fidivrl
repz
jnp
cmp
call
shl
aaa
imul
movsl
push
in
fmul
mov
pop
sbb
xchg
pop
inc
jb
dec
or
jmp
sub
pop
xchg
loope
adc
add
int
cli
dec
call
mov
test
inc
xor
clc
stc
test
sub
sarb
jg
push
cld
shrb
jbe
push
push
mov
pop
cli
xchg
add
fiadds
iret
int
lods
inc
add
add
inc
mov
in
lods
inc
xor
movsl
loopne
cltd
fstpt
call
cs
jne
aas
pusha
out
in
pop
decl
out
cmp
js
outsb
push
in
rcl
jno
leave
imul
adcb
imul
cltd
pop
mov
fstl
insl
dec
ljmp
inc
mov
je
lahf
jne
or
js
dec
daa
les
stc
xor
xor
push
in
ss
lds
mov
sar
aas
mov
push
jo
jae
mov
pop
sub
call
aam
iret
or
in
imul
xchg
arpl
cmpsl
dec
int
push
ss
and
pop
rcrl
addr16
out
bound
cmp
out
push
jbe
int3
and
mov
mov
aam
mov
sahf
mov
xchg
adc
in
or
nop
pop
nop
faddl
in
ret
push
in
mov
mov
or
adc
cmpsl
mov
aas
adc
dec
insb
cltd
movsb
add
mov
add
add
inc
sub
jae
jecxz
je
sbb
inc
cmp
fstpl
imul
gs
push
cs
dec
cmp
ficoms
mov
sbb
es
lods
xchg
fcoms
cmp
jge
mov
mov
les
xchg
adc
mov
mov
lea
inc
sti
imul
aas
push
or
dec
addb
push
aad
add
mov
xchg
out
out
test
or
or
jge
idivl
dec
and
pop
pushf
jecxz
js
and
or
jp
repnz
pop
push
xor
clc
ret
pop
xchg
out
pop
adc
inc
cmc
mov
inc
mov
mov
adc
mov
rcll
in
and
sub
cltd
pop
or
dec
push
outsl
movsb
mulb
adc
fisubl
imul
mov
sbb
pop
aaa
fcmovnu
mov
lret
cmpsl
lret
addl
in
inc
inc
xor
hlt
adcb
xorb
in
xchg
or
test
loopne
addr16
mov
les
sti
loop
ret
arpl
add
mov
adc
xor
xchg
cmc
lea
aaa
fs
lahf
cmp
lret
daa
push
jp
ret
mov
mov
sbb
adcb
add
sbb
stos
pop
inc
mov
xor
or
sarl
fcoms
scas
or
repnz
cmp
push
movsb
xor
outsl
and
pop
cmc
push
shrl
ss
repnz
xor
out
jno
enter
les
push
jns
scas
and
pop
inc
movsb
mov
test
int
aas
inc
and
mov
das
jno
cmp
xchg
ds
dec
cmpsl
pushf
mov
scas
out
sbb
fldl
jae
or
mov
adc
fstps
stc
loop
adc
sbb
adc
cltd
addl
mov
mov
rcl
mov
out
stos
pushf
push
mov
adc
xor
fs
mov
sub
and
lds
ficomps
xlat
push
aaa
leave
jo
mov
mov
or
dec
and
leave
daa
es
sbb
fiaddl
inc
sbb
sub
loop
pop
in
loope
test
cmp
inc
clts
inc
xlat
testb
mov
lcall
xchg
mov
mov
xor
pop
aam
jnp
cmp
iret
and
push
inc
mov
out
aas
mov
add
cltd
lcall
sti
and
clc
or
lcall
mov
pop
sub
mov
dec
mov
sarl
pop
mov
sti
scas
bound
xor
shr
in
pusha
sub
fwait
loop
loope
int3
sub
mov
sub
cmp
hlt
lds
into
mov
and
adc
xchg
popf
or
and
arpl
mov
mov
scas
and
pop
sub
mov
movsb
stos
or
sbb
js
test
xchg
mov
mov
mov
lret
loopne
fwait
xchg
int3
cld
lcall
sbb
or
push
pop
es
pop
pop
sub
imul
push
aam
cltd
aaa
in
ljmp
lret
loop
xchg
cs
xor
inc
sub
jmp
call
out
push
sbb
insb
in
test
mov
jecxz
adc
imul
in
lods
or
call
out
mov
pusha
inc
jno
pop
jb,pn
add
hlt
iret
cltd
jae
cld
adc
and
and
ret
sub
leave
push
and
push
xor
notb
int3
mov
inc
pop
sbb
xchg
push
imul
push
or
pop
jb
inc
popf
and
push
nop
jbe
sub
out
outsb
xchg
inc
push
jmp
call
outsb
dec
ljmp
dec
test
mov
cmpsb
test
xor
mov
adc
jle
stos
cld
dec
or
inc
jl
and
mov
loop
iret
cmc
jge
push
jno
push
div
add
jge
addr16
ljmp
inc
sti
sahf
cmpsb
xor
and
push
push
xchg
cltd
jns
cltd
addr16
inc
or
jl
mov
or
cld
das
push
sub
adc
imulb
or
or
cmp
clc
sbbb
pop
ja
xor
dec
jne
imul
out
daa
leave
cmpsl
cmpsl
aaa
xor
mulb
jnp
out
dec
push
cld
pop
ja
pusha
out
stos
pop
addr16
cmp
fldpi
imul
xchg
sbb
aaa
add
dec
push
jbe
add
mov
xchg
adc
inc
in
jle
icebp
and
nop
lods
xchg
mov
movl
adc
scas
inc
cwtl
stc
mov
and
lock
movsb
iret
notl
sbb
cli
and
das
sub
faddl
and
test
dec
jns
mov
into
sbb
lret
mov
mov
fstl
and
jecxz
repnz
push
outsb
cmpsl
mov
mov
movsl
mov
cmp
scas
lods
aam
loopne
insb
add
cltd
or
sahf
jns
sbb
xchg
xchg
xor
push
jbe
fwait
xchg
xor
cmp
inc
aad
xor
movsb
sub
int
sbb
dec
pop
repz
test
xor
scas
jle
sbb
cld
lret
adc
popf
or
mov
or
mov
mov
sti
jno
mov
jg
sub
divl
mov
push
movsl
pop
jecxz
shll
js
test
scas
ja
out
and
idiv
rorb
jo
fpatan
fsubrl
and
pop
adc
push
rcrl
loope
mov
fldl
test
jo
mov
aaa
in
loope
jo
stc
out
lock
popa
cli
test
mov
ret
xlat
stos
lret
mov
arpl
mov
cltd
lret
cmp
pop
lcall
fcmovu
loope
hlt
sub
fcomi
xlat
ret
dec
stos
movsl
jne
jae
pushf
dec
xchg
inc
jbe
mov
imulb
addr16
pop
sbb
xlat
in
adc
loope
push
pop
and
es
mov
loope
out
inc
jle
push
xchg
push
rolb
sarb
xchg
mov
dec
adc
jb
inc
pop
scas
mov
sbb
fiaddl
fisttps
fdivl
out
fnsave
xchg
pop
inc
push
cltd
dec
negb
xor
adc
clc
movl
and
sub
mov
xchg
mov
enter
xchg
fcoms
add
jnp
out
lods
imul
pushf
mov
or
dec
cmp
js
push
aad
jle
adc
mov
jge
push
movsb
aam
loopne
push
testb
mov
or
mov
or
out
lock
inc
je
xor
orb
bound
jmp
inc
popa
js
test
loop
sahf
adc
addr16
cltd
neg
ret
mov
sub
lret
sub
mov
dec
lcall
fdivp
mov
cmp
push
adc
enter
mov
mov
dec
ret
inc
add
repnz
mov
fdivr
adcl
xor
loope
xchg
outsl
jp
int3
insb
push
jne
dec
xlat
movsb
xor
add
lock
je
adc
lret
insl
push
mov
sbb
sub
and
dec
jg
cmp
pusha
sbb
xor
pop
or
in
push
push
cmp
test
xor
push
dec
outsb
fadd
cmp
xlat
mov
gs
mov
cmpsl
sub
jb
pop
mov
or
rclb
xor
sbb
mov
inc
ficomps
cmp
clc
popa
sub
test
xchg
test
mov
sub
sub
mov
sub
mov
lock
arpl
push
insl
push
movsb
sub
aaa
adc
adc
rorb
outsb
call
cmp
xchg
enter
mov
sbb
mov
in
jae
je
addl
xchg
std
sub
into
pop
mov
int
mov
gs
jge
sub
addr16
enter
movsb
not
and
dec
jb
mov
ja
adcl
mov
das
int3
pop
xchg
dec
jge
mov
sub
push
outsl
jb
insb
xor
in
mov
popf
test
hlt
pop
addl
nop
fsubs
push
sub
mov
sarb
bound
scas
fbld
in
and
add
cmp
inc
insl
addb
adc
mov
fistps
mov
out
popf
xor
daa
inc
insl
mov
aam
xor
icebp
jo
out
jge
lods
mov
sbb
data16
add
dec
mov
mov
out
mov
cmc
adc
lcall
jp
insl
inc
push
call
jmp
xchg
xor
fwait
int
outsl
pop
mov
and
and
sub
add
jg
nop
hlt
test
repnz
add
mov
xchg
jae
push
push
outsb
shrl
jge
aas
test
mov
and
inc
mov
in
mov
cmc
push
mov
xchg
incb
or
xor
or
mov
sub
mov
fistl
pop
test
push
sbb
sub
fisttpll
and
sbb
push
cmp
negb
negl
dec
das
xchg
rcr
into
fwait
test
rcll
aaa
pop
cmpsb
cmpsl
or
movsb
cmpsb
xchg
mov
std
in
loopne
ffree
push
xor
in
fwait
ss
adc
jno
les
push
push
mov
pop
sbb
ljmp
mov
ja
bound
test
adc
pop
and
fwait
mov
sahf
scas
dec
insb
adc
jno
pop
jg
mov
xchg
cmp
loop
pop
dec
fsubs
inc
mov
les
pop
jae
pop
sub
jo
cmp
inc
lret
cmp
xchg
and
aas
pop
push
cwtl
and
mov
js
int3
fcom
enter
cwtl
dec
xchg
fwait
adc
out
pop
decl
dec
pushf
imul
les
ficoml
inc
ficomps
repnz
push
leave
dec
out
xchg
mov
testl
fisttpll
sahf
imul
std
and
int
xchg
sub
test
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
loopne
adc
into
pusha
mov
jns
mov
cmp
pop
pop
add
aaa
data16
data16
hlt
cmp
pop
dec
clc
daa
imul
cmpsl
push
pop
fwait
xor
dec
punpckhdq
dec
sbb
push
fs
mov
sub
jle
neg
imul
imul
mov
ljmp
pop
cmp
mov
xor
inc
cmp
insl
leave
dec
rclb
out
imul
std
jl
hlt
hlt
and
aam
es
xorb
fnsave
or
push
rcrl
movsl
mov
testb
aad
mov
cli
mov
mov
push
sbb
ss
xchg
mov
add
movsb
xlat
sbb
pushf
pop
in
aam
cmp
aaa
iret
outsl
cmp
cli
lock
cmc
mov
push
aam
and
mov
push
aas
push
fnstenv
popf
xor
push
cwtl
adcl
dec
dec
mov
sub
jg
or
filds
add
cli
ds
adc
or
and
mov
dec
inc
into
fstp
inc
mov
js
pop
movsl
mov
sbb
mov
repz
add
loop
mov
add
daa
add
mov
mov
fiaddl
and
sbb
xchg
add
push
cmp
aas
mov
dec
sbb
push
add
and
popa
pop
cmp
xchg
pushf
sub
sbb
or
cmpsb
loope
rcr
into
cli
mov
sub
dec
pop
sahf
outsb
or
mov
ja
ret
ret
movsl
push
cwtl
mov
xchg
inc
fstps
in
jl
jo
js
cmpb
mov
imul
add
lock
imul
aas
adc
sub
lret
adc
out
fnstsw
dec
adc
mov
cmp
orb
rcll
subb
out
jnp
daa
testb
mov
push
rclb
bound
lret
xchg
jno
aad
divl
xor
mov
xchg
movsb
data16
je
sub
icebp
out
in
push
popa
dec
xchg
mov
repz
and
jle
orl
mov
add
pop
gs
repz
pushf
xor
sub
and
xchg
adc
sbb
adc
jb
aam
and
aad
inc
cmp
sbb
or
add
add
jmp
lret
or
sahf
int
data16
mov
sbb
ret
inc
fmull
cld
call
imul
mov
inc
push
cmp
push
imul
fmull
into
movsb
push
adc
xchg
cmp
iret
cli
bound
and
inc
in
es
cmp
lods
outsl
push
aad
jmp
mov
fwait
sti
test
fimull
xor
cmpsb
cs
mov
xor
out
fdivl
negb
cli
fsubl
and
sti
dec
xchg
insb
in
xor
fidivrs
je
hlt
into
or
dec
fmull
dec
mov
sub
xlat
repz
push
xchg
inc
jle
cltd
inc
or
fstpt
cmp
scas
fsubs
or
incl
xchg
arpl
mov
jnp
aaa
xor
inc
mov
jae
xchg
ja
lods
lcall
movsl
into
adc
dec
repz
outsb
sub
mov
cs
pop
sbb
lcall
fidivs
das
cmp
sbb
and
sbb
dec
sub
jecxz
xchg
sbb
jae
out
es
xor
push
aaa
jmp
sbb
push
fsubs
sub
in
sti
je
and
push
inc
movsb
sbb
adc
jmp
stc
roll
xor
sub
push
adc
jge
mov
sub
leave
xchg
dec
lds
clc
lods
cmp
or
xchg
cmpsb
mov
ljmp
and
mov
sti
sub
dec
sar
xchg
lahf
popl
sbb
cltd
pop
pop
int
bound
sahf
je
cmp
sbb
mov
lret
pop
int
aad
ss
mov
les
movl
inc
cmp
lret
arpl
cs
jbe
fmuls
mov
insl
fistps
subl
mov
cmp
sub
sbb
cli
jnp
repz
xchg
cmpl
cmc
push
xchg
cltd
movsl
cli
cmp
xchg
notb
xor
xchg
mov
xchg
mov
mov
dec
jb
cltd
mov
test
and
sti
leave
outsl
inc
push
adc
push
inc
aas
sar
stc
xor
fsincos
and
mov
sub
dec
mov
ss
dec
mov
add
ljmp
loope
das
pop
xchg
mov
mov
adc
lret
aam
movb
sbb
jbe
int
ss
sub
cwtl
arpl
pop
inc
jb
pusha
rorb
in
iret
fwait
xchg
mov
dec
shrl
push
mov
sub
cmp
lret
push
xchg
ja
fildl
adc
dec
js
xchg
xor
clc
inc
sahf
xor
rcl
cmp
cltd
std
je
xchg
mov
fs
fisttpll
and
test
test
mov
insl
cld
je
stos
sub
fldln2
xor
cmpsb
sub
and
cmp
cwtl
popl
repnz
jge
das
aas
push
pop
lret
mov
or
jb
mov
xchg
repz
lods
pop
jae
ljmp
jl
sub
idivb
ds
xchg
outsb
test
ret
and
dec
jg
or
and
pusha
scas
rcl
call
test
jae
mov
push
mov
sub
int
icebp
push
int
mov
inc
jp
cltd
aaa
test
add
cwtl
int
les
cmpsl
xor
stos
fmull
imul
dec
mov
fs
and
fiadds
sbb
in
fdivs
popf
inc
cltd
leave
push
addl
sti
es
push
dec
mov
mov
aam
push
clc
mov
mov
and
push
and
fsubrp
lods
mov
in
out
pop
insl
outsb
fcoms
add
mov
movsl
test
xor
lahf
cwtl
xchg
mov
push
aaa
cmp
daa
sbb
mov
mov
adc
inc
sbbl
fbld
adc
fwait
and
pop
call
push
push
or
loope
popa
push
or
cmp
cmc
jmp
cld
push
jecxz
and
shl
lea
add
imul
cmc
shlb
scas
mov
jb
stc
add
movsb
enter
dec
flds
inc
loope
and
test
out
outsl
lock
pop
dec
adc
xorl
add
push
xchg
arpl
xchg
sgdtl
push
rcr
jmp
adc
jbe
repz
out
jns
lret
sti
jno
dec
fsubrl
data16
jge
inc
mov
push
icebp
negl
dec
addr16
inc
mov
out
add
xor
push
jbe
popf
push
push
add
mov
jmp
sub
xor
fidivrs
fiaddl
push
and
int3
xchg
out
push
in
lret
jl
push
std
cmpsb
adc
enter
in
popa
xchg
xchg
dec
fidivs
outsl
test
shll
int
and
push
bound
and
es
mov
outsl
arpl
push
and
push
jbe
or
or
lock
or
in
mov
xchg
ret
inc
jg
mov
push
rcrl
adc
into
gs
mov
sbb
es
enter
outsb
sub
adc
and
mov
das
sbb
jnp
sub
ficompl
in
sahf
iret
test
mov
mov
fsubl
out
scas
pop
lds
rolb
jg
dec
pop
xor
dec
cmpsb
cmp
call
ret
push
cmc
lods
aad
fidivrl
je
int
cmp
jno
inc
dec
cld
test
pop
ljmp
mov
push
loopne
cmp
test
stos
aad
out
inc
pop
loop
cwtl
adc
fistpll
jo
shll
mov
ret
or
mov
cmp
xlat
push
mov
jmp
jg
lret
or
push
lods
aaa
mov
mov
and
push
sub
push
and
aad
xchg
pusha
add
les
xchg
cmp
lods
jo
mov
cmp
cmp
hlt
cmp
out
test
xchg
test
adc
iret
adc
and
popa
mov
push
imul
sbb
sub
sbb
inc
subl
add
aad
imul
mov
loope
repnz
mov
jnp
jge
mov
xor
adc
stc
sarb
es
dec
mov
jb
xchg
or
cld
push
adc
scas
fidivrl
out
imul
int
out
cmpsb
pop
and
sbb
mov
lret
push
push
mov
xor
fcompl
test
stos
jbe
lret
pop
fiadds
or
mov
testl
xchg
lret
inc
lahf
lahf
aam
mov
xchg
mov
leave
xorb
repz
mov
out
xor
push
xchg
setp
jl
aaa
jb
fmuls
sbb
mov
ja
mull
dec
cmpl
cmpl
repz
cmp
sub
ss
adc
mov
shr
add
es
mov
dec
mov
arpl
cwtl
dec
sbb
push
cmp
sub
sbb
in
in
inc
je
sbb
jne
jns
pop
mov
pop
pop
lcall
ja
cmpsl
mov
xor
lret
lods
test
push
push
cmp
mov
xchg
pop
push
push
and
push
cmp
fidivrs
adc
jp
sbb
add
pop
mov
gs
sbbl
imul
sub
out
push
ja
mov
movsb
nop
popf
loope
dec
xor
movsl
fmuls
lcall
bnd
shrl
dec
pop
lods
mov
inc
jg
cltd
lcall
xor
push
imulb
jnp
xchg
mov
addr16
cmp
imul
jae
out
pop
je
mov
hlt
lahf
dec
les
int
std
xor
mov
push
jae
inc
imul
inc
in
pop
dec
call
jno
rorl
inc
mov
lods
cmp
idivb
push
pop
sub
shlb
aam
push
mov
scas
pop
pop
call
xchg
or
cmpl
push
popa
addb
loopne
xchg
in
inc
xchg
das
add
cltd
lock
pop
sub
cmovbe
or
ficoml
pop
sbb
jbe
js
xchg
adc
outsb
into
mov
leave
push
inc
lock
push
cmp
in
adc
mov
adc
or
js
pop
push
and
dec
cwtl
int
imul
adc
test
jno
pop
inc
dec
imul
inc
test
rclb
aad
cmpsb
dec
loope
pop
xchg
or
xor
xor
data16
mov
push
inc
mov
xor
scas
in
mov
int
adc
inc
dec
cld
cli
add
gs
mov
int3
test
and
add
popl
in
push
addr16
pop
jg
arpl
out
in
adc
movsb
mov
les
cmp
iret
clc
mov
sbb
sahf
scas
jmp
sub
int
pop
pop
rcll
pop
pop
daa
mov
mov
nop
out
popa
push
add
fucom
sbb
pop
call
sub
sarb
nop
mov
and
lcall
daa
inc
adcb
call
movsl
push
je
movsb
and
int
in
enter
lahf
les
adc
lods
mov
mov
ret
sbb
lahf
sarl
dec
add
jo
lods
mov
sub
cltd
or
imul
xchg
sbb
in
ret
in
add
dec
pop
repz
fiaddl
mov
lea
inc
cmpb
test
jbe
inc
pop
xor
aas
sbb
xchg
add
test
std
divb
push
mov
add
mov
mov
or
enter
pop
jbe
lock
lea
add
push
cmp
imul
ror
sub
out
arpl
ret
call
xor
dec
jae
mov
jne
icebp
in
clc
mov
ficomps
cmpsl
shll
fs
pop
add
sbb
mov
aad
add
and
hlt
push
adc
lds
and
into
aaa
mov
mov
outsl
jmp
aad
scas
popl
xchg
mov
movq
stos
mov
xchg
xchg
lds
xchg
add
not
rcrl
xchg
fcmove
leave
cmp
adc
in
popf
sahf
lods
mov
lret
call
out
enter
cmp
push
dec
push
scas
test
ret
ffreep
icebp
inc
push
int3
or
fdivr
xchg
imul
cs
cmp
mov
xchg
cmpl
pop
pusha
jmp
mov
add
or
xchg
leave
pop
cmp
nop
mov
pop
test
mov
arpl
shll
pop
jnp
inc
lea
icebp
xlat
pop
test
stos
dec
dec
shr
add
sbb
in
cmpsl
mov
test
mov
or
loopne
xor
dec
repz
mov
ficoms
xor
gs
inc
stos
xor
out
scas
nop
dec
das
ds
pusha
push
mov
mov
pop
mov
xor
pusha
js
call
imul
cmpsb
jno
cwtl
cltd
xor
jne
adc
jne
dec
ljmp
pop
add
jns
push
aam
pop
std
inc
jmp
repnz
cmpl
pushf
xchg
inc
mov
jp
iret
xorb
stc
push
push
insb
loop
fwait
dec
mov
pop
xchg
xor
lea
push
xchg
nop
ljmp
stos
mov
data16
fsubrl
dec
inc
scas
dec
sbb
push
test
cmp
mov
mov
push
xchg
loop
adc
inc
mov
pop
add
or
movsl
dec
add
ljmp
cmp
aaa
jge
movsl
jns
jg
in
lahf
xchg
addb
xchg
rorb
faddl
push
cmp
mov
int3
pop
aas
and
fs
in
cltd
dec
mov
xlat
lcall
test
in
sbb
pop
push
adc
xor
cmc
jae
aam
arpl
sbb
pop
sbb
sub
mov
sub
mov
mov
fdivs
and
push
and
addr16
dec
orl
sub
lahf
movsb
in
mov
mov
inc
xorb
push
lods
jbe
test
xchg
mov
roll
xchg
in
nop
pop
loop
xchg
ret
sub
lret
xor
jle
xlat
daa
sub
adc
cld
jmp
mov
gs
ljmp
xchg
cltd
gs
inc
fsubs
pusha
dec
pop
xchg
xchg
and
jle
jno
test
inc
mov
and
andl
xor
sub
into
cmc
mov
es
sbb
leave
xchg
mov
in
pop
in
lea
mov
dec
pop
pusha
lea
jae
pop
rcl
push
xchg
dec
adc
fisubs
jmp
movsl
fcomp
jg
mov
pop
add
jp
jb
jo
push
xor
and
mov
aad
mov
pusha
xchg
ds
mov
ret
dec
out
lea
jp
subl
scas
xor
scas
pop
sub
ficomps
in
xor
jecxz
pop
add
nop
imul
or
jecxz
push
mov
out
add
out
rolb
lret
cmpsb
cmp
and
dec
arpl
pop
int3
orb
in
test
int
mov
int
aam
add
aas
mov
roll
sub
sbb
int3
stos
and
int3
push
outsl
mov
out
xchg
jbe
mov
int
xlat
orb
sarl
pop
popf
push
scas
dec
inc
scas
sub
cmp
loope
mov
aam
fists
addr16
sub
lock
aaa
pop
pusha
cld
and
rcrl
push
int3
rolb
shll
sti
push
rcr
subl
scas
loopne
mov
ljmp
lret
adc
call
mov
push
aam
call
loop
jp
add
mulb
mov
or
mov
cmp
lret
roll
lods
inc
jmp
xor
and
popa
dec
clc
out
sbbl
sarb
push
push
outsb
fisttpll
inc
ret
cmpsl
es
js
jns
pop
cmp
sub
ljmp
rolb
inc
stos
cld
jg
into
push
add
sub
push
int3
and
rorl
mov
stos
sahf
jmp
fnstsw
lcall
inc
dec
test
lods
out
cli
div
and
fsubrp
adc
mov
pop
mov
cmpl
call
lock
dec
leave
es
imul
sbb
je
sub
icebp
popa
add
mov
dec
aaa
cmpsl
mov
push
jp
movsl
in
pop
cltd
inc
cld
negl
call
dec
dec
fcomip
push
mov
lahf
shll
xchg
leave
cmp
xor
rorl
daa
and
xor
cmp
mov
fbstp
xchg
push
xchg
jo
xchg
addb
inc
aaa
xchg
cld
jmp
jg
jmp
ret
cmp
sub
push
xor
je
jae
insb
stos
sarl
or
xor
pushf
enter
dec
aam
pop
and
pusha
jmp
jo
subl
adc
pop
inc
jno
add
add
clc
mov
lret
outsb
test
or
cwtl
mov
rclb
loopne
mov
push
cmp
inc
movsb
pop
jecxz
add
jg
and
dec
cli
shl
testb
ds
mov
mov
andb
push
jno
or
dec
sbb
ret
aas
sbb
cmp
mov
out
repz
fs
cltd
negb
mov
inc
cmp
sbb
mov
enter
jp
mov
xlat
or
jo
push
out
push
pushf
jbe
or
sbb
mov
neg
mov
jle
sub
insl
test
ret
stos
cmpsb
push
pushf
push
into
pop
and
inc
mov
movsb
push
cmp
call
cli
mov
es
sti
test
mov
mov
fists
mov
push
call
call
jns
xor
cmp
in
out
stos
pusha
mov
and
pop
fnstcw
incl
ror
cmp
fdivl
xor
inc
sub
pop
fmull
and
cmp
mov
sbb
ret
mov
lods
mov
mov
or
mov
mov
inc
adc
movsb
roll
xor
or
scas
inc
jnp
fisubrl
jno
adc
out
pop
pop
icebp
cwtl
int3
test
arpl
jmp
in
push
pop
call
xchg
dec
jns
push
fidivl
or
dec
xchg
mov
jbe
jecxz
jne
les
mov
push
mov
jb
loop
mov
jne
xchg
in
xchg
or
fs
inc
sub
ficoms
or
out
pop
test
cld
mov
pop
sahf
jmp
pop
push
mov
in
cld
fimull
hlt
rclb
ret
add
lahf
ljmp
xorb
or
pop
push
ja
stc
push
pop
cmpsb
fcmovbe
mov
in
mov
imul
fwait
dec
fcoms
jns
std
xor
aam
mov
out
mov
fldln2
imul
xor
std
mov
mov
pop
sar
mov
cmp
ja
mov
cmpsl
jnp
cmp
jecxz
in
jnp
ffree
sti
lds
outsb
mov
addl
dec
dec
xor
mov
lcall
ret
bound
insb
xchg
dec
dec
xor
test
push
mov
scas
xchg
fwait
aad
mov
add
loopne
arpl
imul
jl
jns
out
jne
test
xor
outsb
sub
rcrb
jne
test
mov
jecxz
shrl
mov
cmpsb
sbb
mov
cmp
pop
mov
out
pop
icebp
add
ja
fbstp
push
cmp
iret
mov
pop
sbb
dec
insb
jne
out
adc
test
out
sub
movsb
cmpsb
push
add
ja
xchg
sbb
addb
push
test
lock
pop
add
shlb
and
xor
cli
mov
push
inc
cmp
xchg
dec
sbb
addr16
push
push
loop
mov
fwait
pusha
cmp
mov
std
fiadds
dec
std
negl
sbb
pop
xlat
cmp
xchg
sti
out
cltd
lcall
pusha
xor
jbe
ficoml
dec
and
cli
dec
or
shrb
in
mov
fcoml
fisubrs
xor
mov
in
negb
subb
lret
ss
pop
inc
int
ffreep
imul
aad
jmp
or
hlt
mov
repnz
sti
mov
popa
add
aas
movsl
in
jle
hlt
adc
in
sub
jnp
xchg
mov
pop
incl
sahf
adc
sbb
pop
lret
sahf
mov
ss
push
js
test
mov
xor
cli
popa
pop
shrl
inc
push
mov
lds
sub
aam
push
inc
and
mov
lods
pusha
fsubrs
clc
jno
adc
inc
test
mov
cmc
xchg
add
out
cmpl
push
stos
add
add
stos
lods
mov
repz
cli
push
push
push
outsb
xor
xor
mov
xlat
cmc
jecxz
lret
sarb
inc
sub
dec
ficomps
das
fcomps
jo
cmp
testb
xlat
mov
xor
cmp
mov
mov
repz
inc
push
add
addr16
cs
stos
mov
add
mov
popf
dec
iret
push
add
push
cmpsl
das
cmp
adc
mov
iret
ret
fstp
subb
addr16
or
mov
sub
stos
adc
pushf
or
scas
pop
out
std
dec
inc
fmul
ja
adc
cmp
inc
lret
aad
sub
insb
lods
xor
das
cmp
xor
cld
add
mov
out
xor
mov
scas
cmp
add
stos
push
inc
lcall
das
xor
jmp
outsb
sbb
lock
dec
das
stc
rolb
icebp
add
pop
mov
cmp
cltd
xchg
loope
orb
test
ret
inc
je
pushf
stc
cmp
repz
push
insl
mov
in
jne
push
lods
insb
in
in
ljmp
xor
adc
xchg
andl
mov
push
in
lcall
fs
xor
mov
inc
push
jmp
and
cmp
sahf
fidivrs
lea
fstpt
je
jne
and
jbe
cltd
jns
mov
fnstsw
mov
stc
pop
pop
pop
dec
lock
aad
or
je
push
sub
or
push
push
xor
sbb
or
in
inc
mov
lods
cmp
es
inc
push
inc
addr16
mov
outsl
jl
inc
push
pop
lret
test
mov
or
xchg
inc
loopne
mov
or
lock
enter
std
sub
leave
test
ret
dec
cmpsl
fstp
icebp
pop
aad
lock
imul
adc
icebp
pop
adc
adc
sbb
sahf
add
or
cld
and
lock
jbe
push
and
stos
adc
insb
dec
movsl
loope
lods
aad
dec
and
xchg
dec
adc
and
mov
cltd
stos
sar
push
fbstp
and
mov
ret
mov
movsl
arpl
loop
dec
jno
adc
inc
fs
repz
mov
adc
cmpsb
mulb
jo
jge
adc
repnz
push
std
stos
sub
jne
mov
xchg
add
jbe
push
sub
outsl
lea
jecxz
movsl
arpl
into
sbb
cmp
push
iret
movsl
xchg
sarl
fstps
out
xor
cld
xchg
jns
sub
fstps
push
mov
shll
xor
xchg
nop
cmc
mov
aam
negl
xor
shrl
sbb
cmp
addb
push
inc
add
pop
repz
mov
rcr
or
aam
jae
sub
nop
ds
ret
or
push
stos
loop
aas
and
shl
mov
mov
push
jbe
add
adc
call
jbe
or
imul
inc
test
pusha
push
and
sbb
jl
push
xor
imul
xchg
adc
adc
js
fsubrp
pop
xchg
imul
js
jmp
inc
mov
mov
push
or
imul
ret
stc
push
jae
push
fs
test
push
sahf
scas
fnstcw
jmp
push
sarb
pop
push
insb
adc
out
cmpsl
dec
dec
sbb
inc
mov
insl
jg
inc
inc
iret
gs
mov
stos
xchg
out
and
movsb
rorl
xchg
xchg
in
push
movsl
js
push
xchg
or
add
add
add
add
pop
add
inc
xchg
sub
pop
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
lods
outsb
add
outsb
add
outsb
