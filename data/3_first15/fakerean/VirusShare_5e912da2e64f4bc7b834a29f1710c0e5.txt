add
test
cmp
mov
orl
push
push
mov
push
mov
mov
movl
call
mov
test
pop
mov
je
mov
push
call
push
lea
push
lea
call
test
jne
cmpl
je
pop
xor
pop
pop
leave
ret
mov
test
je
mov
mov
test
mov
jne
xor
ret
mov
mov
test
mov
mov
jne
xor
ret
mov
push
call
jmp
pushl
andl
lea
mov
movl
movl
mov
andw
push
call
mov
ret
sub
push
mov
test
je
push
mov
push
push
xor
cmp
mov
jl
test
jne
mov
test
jne
mov
test
jne
mov
mov
test
jne
mov
test
mov
jle
mov
mov
xor
jmp
lea
cmpb
je
add
add
cmp
jl
test
jne
pop
pop
pop
pop
add
ret
movl
jmp
mov
mov
jmp
lea
cmp
jae
mov
mov
push
mov
sub
push
add
push
call
mov
pop
pop
pop
pop
add
ret
push
mov
mov
test
jne
mov
test
mov
pop
jne
xor
ret
mov
push
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
mov
cmpw
push
push
je
mov
mov
mov
mov
jmp
lea
mov
movzwl
cmp
je
test
je
cmp
mov
je
cmp
je
mov
mov
mov
add
add
mov
cmpw
jne
mov
pop
pop
pop
add
ret
mov
sub
test
je
cmp
je
mov
mov
movw
mov
add
push
push
add
push
call
add
test
je
mov
mov
cmp
mov
jne
mov
add
call
test
mov
je
mov
mov
mov
movzwl
cmp
lea
je
lea
test
je
mov
cmp
je
mov
mov
mov
add
movzwl
add
cmp
jne
mov
cmp
je
mov
mov
lea
push
push
movw
mov
add
push
push
call
add
test
jne
mov
mov
cmp
jne
mov
mov
jmp
add
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
mov
movzwl
mov
xor
test
mov
mov
mov
je
mov
test
je
cmpw
jne
cmpw
je
xor
test
je
xor
movzwl
test
je
cmp
jg
cmp
jne
test
jne
cmp
jne
mov
add
lea
movzwl
test
jne
test
jne
xor
cmpb
jne
xor
cmp
jne
test
jne
push
mov
cmpw
je
add
mov
test
jne
mov
push
call
add
test
je
mov
mov
lea
push
call
add
test
mov
je
lea
mov
mov
mov
mov
add
push
push
push
call
movzwl
add
test
je
mov
mov
mov
mov
mov
mov
mov
mov
cmpw
je
mov
test
mov
mov
mov
mov
je
mov
test
jne
xor
pop
pop
pop
pop
pop
ret
cmp
jg
cmp
je
movb
jmp
xor
jmp
cmpw
jne
movzwl
cmp
je
test
jne
mov
mov
jmp
cmp
jne
mov
jmp
cmp
jne
jmp
cmpl
je
mov
mov
push
push
push
call
add
pop
pop
pop
xor
pop
pop
ret
xor
jmp
mov
lea
xor
inc
lock
inc
ret
mov
mov
test
je
push
pushl
lea
call
xor
pop
ret
push
mov
sub
call
mov
test
je
push
xor
cmp
je
mov
pop
leave
ret
push
lea
mov
movl
movl
movl
call
push
push
push
lea
push
lea
push
call
add
lea
call
cmp
je
mov
push
add
push
pushl
call
add
lea
call
mov
jmp
push
mov
sub
call
mov
test
je
push
xor
cmp
je
mov
pop
leave
ret
push
lea
mov
movl
movl
movl
call
push
push
push
lea
push
lea
push
call
add
lea
call
cmp
je
mov
push
add
push
pushl
call
add
lea
call
mov
jmp
mov
mov
test
je
call
xor
ret
push
lea
sub
mov
xor
mov
mov
andl
andw
push
mov
lea
lea
add
push
mov
mov
mov
push
movl
movl
call
test
js
lea
call
test
mov
je
testb
jne
testb
jne
xor
mov
xor
pop
call
add
leave
ret
mov
add
push
call
test
pop
jne
jmp
push
mov
sub
push
xor
cmp
push
push
mov
je
mov
call
test
jne
mov
pop
pop
pop
leave
ret
lea
mov
push
lea
push
lea
movl
mov
call
mov
test
jne
mov
lea
push
push
mov
mov
push
call
test
mov
jne
cmp
je
mov
lea
call
mov
jmp
push
push
push
pushl
push
pushl
pushl
call
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
push
mov
mov
mov
call
add
jne
mov
mov
call
test
je
mov
test
je
mov
push
call
xor
mov
mov
pop
pop
ret
mov
test
push
push
je
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
push
call
mov
mov
xor
pop
pop
ret
add
mov
test
jne
jmp
mov
cmp
jb
push
mov
andl
xor
push
pop
mov
mul
seto
neg
or
push
call
mov
neg
sbb
pop
and
add
pop
ret
push
mov
push
lea
push
call
test
js
mov
mov
push
pushl
push
call
mov
test
mov
js
mov
mov
mov
pop
leave
ret
push
push
call
pop
xor
cmp
je
movl
mov
mov
mov
mov
mov
cmp
je
mov
push
call
pushl
mov
push
push
call
push
mov
push
call
pop
pop
ret
xor
jmp
push
mov
decl
mov
jne
movl
mov
test
push
mov
movl
je
push
call
andl
pop
andl
push
call
pop
xor
pop
pop
ret
mov
test
push
push
je
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
push
call
mov
mov
xor
pop
pop
ret
add
mov
test
jne
jmp
mov
cmp
jb
push
mov
andl
push
mov
call
mov
neg
sbb
pop
and
add
pop
ret
push
mov
push
lea
push
push
push
call
add
test
js
mov
mov
push
pushl
push
call
mov
test
mov
js
mov
mov
mov
pop
leave
ret
push
xor
cmp
jne
push
push
call
cmp
pop
je
movl
mov
mov
mov
mov
mov
cmp
je
mov
push
call
pushl
mov
pushl
push
call
mov
mov
push
call
mov
pop
pop
ret
xor
jmp
push
mov
decl
mov
jne
movl
mov
test
push
mov
movl
je
push
call
andl
pop
andl
push
call
pop
xor
pop
pop
ret
push
mov
push
mov
testb
je
mov
test
mov
jne
test
jne
mov
mov
mov
mov
mov
and
or
mov
andl
movl
movl
pop
mov
pop
ret
push
mov
testb
push
push
je
testl
je
mov
xor
cmp
je
pop
xor
pop
pop
ret
push
lea
mov
call
mov
mov
lea
push
push
call
pushl
mov
lea
mov
call
mov
cmp
je
mov
call
push
lea
call
test
pop
jne
movb
mov
add
mov
call
mov
call
lea
call
lea
call
jmp
push
lea
sub
add
enter
mov
lea
mov
call
mov
mov
call
add
je
mov
mov
mov
mov
test
je
mov
push
mov
mov
push
mov
lea
mov
mov
push
mov
call
push
pushl
lea
push
pushl
call
inc
add
pop
fdivl
mov
test
je
mov
test
jne
xor
cmp
jb
mov
sub
lea
mov
test
jne
mov
push
push
call
test
jne
inc
cmp
jb
lea
push
lea
call
mov
test
mov
mov
jne
mov
test
je
mov
push
call
mov
mov
call
mov
mov
mov
pop
pop
mov
xor
call
add
leave
ret
lea
call
lea
push
lea
mov
call
mov
call
lea
push
pushl
lea
push
call
pushl
pushl
call
pop
pop
jmp
push
mov
push
call
andb
andl
movb
pop
ret
push
mov
sub
push
mov
mov
mov
push
mov
test
push
je
mov
mov
mov
mov
lea
mov
mov
push
mov
call
mov
push
pushl
mov
lea
push
call
mov
andl
mov
mov
mov
mov
mov
movb
lea
push
push
push
mov
push
pop
mov
call
call
lea
push
lea
call
mov
test
jne
mov
test
je
mov
push
call
mov
mov
call
mov
mov
mov
pop
pop
pop
leave
ret
push
push
push
mov
xor
cmp
jne
call
mov
cmp
jne
mov
mov
mov
cmp
je
cmp
jne
mov
add
je
mov
cmp
je
testl
jne
mov
push
pushl
mov
push
call
cmp
jne
push
call
mov
push
pushl
mov
push
call
cmp
jne
pop
pop
xor
pop
ret
testb
jne
mov
push
push
push
push
call
jmp
mov
call
pushl
mov
call
jmp
push
mov
cmpl
je
mov
call
test
jne
xor
pop
ret
push
mov
push
mov
push
push
mov
add
push
lea
movw
call
mov
xor
cmp
mov
mov
je
mov
lea
push
push
call
test
js
mov
sub
jne
movw
lea
call
pop
mov
pop
leave
ret
mov
jmp
push
mov
sub
andl
push
xor
push
inc
mov
test
movl
mov
jne
lea
push
call
lea
push
lea
push
lea
push
lea
push
lea
push
push
pushl
call
add
cmp
sete
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
cmpb
jne
xor
pop
pop
leave
ret
mov
push
mov
push
lea
call
test
je
cmpl
je
mov
mov
mov
xor
pop
ret
mov
mov
push
mov
lea
movsl
movsl
movsl
movsl
pop
jmp
test
jl
cmpw
jae
test
jbe
test
jle
add
add
cmp
jb
mov
sub
test
jle
push
movzbl
push
push
call
add
test
jne
or
ret
mov
jmp
sub
ret
push
mov
push
push
cmpl
je
push
mov
push
mov
push
mov
pushl
mov
add
call
cmpl
pop
mov
je
cmp
je
mov
sub
andl
mov
mov
movsbw
mov
mov
push
mov
call
cmp
pop
jne
cmpl
jne
mov
dec
cmp
jb
sub
andl
mov
movsbw
mov
mov
push
mov
call
cmp
pop
jne
cmpl
jne
pop
pop
pop
leave
ret
push
lea
sub
mov
xor
mov
mov
push
mov
push
mov
push
lea
push
call
mov
lea
xor
push
lea
mov
fnstcw
adc
and
mov
test
std
fiadds
aas
add
lea
lea
call
push
lea
call
test
je
andl
lea
push
pushl
call
pop
pop
push
push
lea
push
call
mov
push
push
pop
lea
call
test
jne
push
push
pop
lea
call
test
jne
push
push
pop
lea
call
test
jne
push
lea
lea
call
andl
lea
sbb
aam
adc
inc
lods
movl
call
test
mov
mov
mov
lea
push
lea
push
push
call
test
mov
movsb
movl
push
pop
lea
call
test
jne
push
pop
push
mov
lea
call
test
jne
push
mov
lea
call
test
jne
push
push
pop
lea
call
test
jne
push
mov
lea
call
test
jne
push
mov
lea
call
test
jne
push
push
pop
lea
call
test
jne
push
push
pop
lea
call
test
jne
push
push
pop
lea
call
test
jne
push
push
pop
lea
call
test
jne
push
push
pop
lea
call
test
jne
mov
lea
push
mov
call
pushl
mov
pushl
push
call
cmp
mov
cs
inc
add
add
cmp
add
jne
call
lea
call
pushl
pushl
call
pushl
pushl
call
xor
add
inc
lea
call
mov
mov
pop
pop
xor
pop
call
add
leave
ret
cmpl
je
mov
decl
cmp
jge
cmp
jne
inc
inc
jmp
cmp
jg
add
jmp
movzbl
movzbl
sub
ret
xor
ret
cmp
je
xor
ret
mov
push
mov
call
pop
test
jne
inc
jmp
push
pop
jmp
push
mov
cmp
je
cmp
jne
mov
push
mov
call
test
pop
je
xor
pop
ret
push
pop
jmp
push
mov
mov
mov
mov
add
cmp
jl
push
pushl
pushl
call
add
cmp
jne
pushl
pushl
pushl
call
sub
add
neg
sbb
inc
pop
ret
mov
lea
imul
shl
cmp
push
jg
test
mov
jne
mov
mov
cmp
push
mov
jg
mov
cmp
pop
jg
cmp
jg
cmp
mov
pop
jge
mov
mov
jmp
mov
jmp
mov
jmp
push
mov
cmpl
je
push
mov
call
test
mov
mov
pop
jl
mov
pushl
imul
mov
pushl
lea
push
call
neg
sbb
and
add
pop
ret
push
mov
push
push
xor
cmp
push
push
jbe
xor
inc
push
shl
pop
sub
mov
dec
mov
mov
mov
not
test
je
movzwl
test
jne
push
pop
shr
test
jne
or
shr
test
jne
or
shr
test
jne
or
shr
test
je
cmp
jg
and
cmp
jne
mov
shl
lea
shl
or
movl
add
pop
pop
leave
ret
addl
inc
cmp
jb
jmp
andl
mov
jmp
or
shr
jmp
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
mov
mov
addl
mov
add
test
jne
mov
mov
mov
pop
ret
call
test
jne
xor
pop
ret
int3
int3
int3
int3
int3
movzwl
test
je
jmp
lea
cmp
je
movzwl
add
test
jne
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
cmpl
push
mov
push
je
mov
lea
sub
lea
cmpl
push
lea
lea
mov
mov
jne
call
test
je
mov
lea
mov
push
push
push
mov
lea
push
push
call
mov
add
cmp
jne
xor
cmp
je
mov
cmp
je
mov
mov
addl
mov
cmp
je
mov
call
mov
mov
push
push
call
add
cmp
jne
mov
mov
pop
mov
mov
mov
mov
pop
pop
mov
pop
pop
ret
mov
cmp
je
lea
mov
cmp
mov
mov
mov
mov
je
jmp
pop
pop
pop
xor
pop
pop
ret
int3
int3
int3
int3
int3
int3
sub
mov
push
push
mov
push
mov
cmp
mov
mov
jne
lea
mov
mov
lea
mov
movl
lea
mov
mov
lea
push
push
push
push
call
mov
add
cmp
mov
je
cmp
jne
mov
test
je
cmpb
je
mov
test
jne
sub
sar
push
push
mov
push
call
jmp
mov
test
je
mov
push
lea
push
push
movl
call
mov
add
mov
mov
mov
mov
sub
je
sub
jne
jmp
add
cmp
ja
movzbl
jmp
mov
test
je
mov
push
call
add
mov
mov
mov
mov
mov
cmpl
je
xor
pop
pop
pop
add
ret
cmpb
je
mov
mov
pop
pop
mov
xor
pop
add
ret
nop
lds
adc
roll
pushf
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
push
mov
movzwl
test
je
cmp
je
movzwl
add
test
jne
pop
pop
pop
mov
pop
ret
mov
cmp
je
lea
mov
cmp
je
mov
mov
mov
addl
add
cmp
jne
mov
cmp
je
mov
movw
mov
addl
push
push
lea
push
call
add
test
je
mov
cmp
je
mov
mov
jmp
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
test
jne
mov
mov
mov
mov
movl
mov
lea
mov
mov
lea
mov
mov
mov
ret
mov
sub
sar
cmp
jl
add
test
push
push
push
jne
mov
sub
sar
cmp
jge
mov
mov
mov
lea
push
call
add
test
je
mov
mov
mov
mov
mov
mov
cmp
mov
jne
mov
sub
lea
sar
lea
add
pop
pop
mov
mov
mov
mov
pop
ret
mov
lea
cmp
jne
mov
sub
mov
sar
add
lea
push
push
mov
call
add
test
mov
je
mov
mov
sub
mov
sar
lea
add
mov
lea
pop
pop
mov
mov
mov
pop
ret
sub
sar
add
push
push
lea
push
call
add
jmp
pop
pop
xor
pop
ret
push
mov
and
sub
push
mov
mov
push
mov
push
mov
cmp
mov
jne
lea
lea
mov
mov
mov
mov
mov
lea
push
push
push
mov
mov
push
call
mov
mov
add
add
cmp
mov
ja
jmp
mov
test
je
cmpb
je
mov
test
jne
sub
sar
push
mov
push
push
call
add
mov
mov
mov
mov
mov
sub
je
sub
je
mov
jmp
mov
test
je
mov
push
lea
push
push
movl
call
jmp
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
mov
call
add
cmp
jne
mov
push
mov
push
push
call
add
test
jne
addl
cmp
je
cmp
je
mov
test
je
mov
mov
lea
movzwl
test
je
jmp
lea
add
mov
movzwl
add
test
jne
cmpb
je
mov
test
jne
movw
mov
mov
mov
push
push
call
add
cmpl
jne
cmpl
jne
mov
mov
mov
push
push
push
push
call
add
pop
pop
pop
mov
pop
ret
mov
test
je
mov
mov
xor
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
add
push
mov
mov
push
call
mov
addl
mov
mov
add
add
mov
mov
mov
mov
mov
mov
sub
push
lea
push
mov
push
lea
push
push
call
mov
mov
sub
sar
mov
mov
add
cmp
jne
mov
mov
lea
mov
mov
mov
mov
push
push
xor
mov
mov
mov
mov
push
push
mov
call
add
cmp
jne
mov
cmp
je
mov
mov
push
mov
mov
push
push
call
add
cmp
je
mov
cmp
jne
mov
mov
mov
mov
mov
jmp
mov
add
mov
push
push
movl
movb
call
add
add
cmpl
mov
mov
jne
lea
call
test
je
mov
mov
push
lea
push
mov
push
lea
push
push
call
add
cmp
jne
cmpl
je
mov
cmp
je
mov
movw
addl
mov
test
je
mov
mov
lea
push
mov
lea
mov
mov
push
push
push
mov
call
add
test
jne
mov
mov
mov
xor
cmp
mov
je
mov
mov
push
push
push
call
add
xor
cmp
je
cmp
je
mov
mov
mov
mov
mov
mov
push
push
call
add
cmp
jne
mov
mov
mov
cmp
mov
mov
mov
mov
jne
cmp
je
mov
jmp
mov
mov
jmp
mov
test
je
mov
push
call
add
mov
mov
mov
mov
push
push
push
lea
push
mov
call
add
test
jne
mov
test
jne
movl
pop
pop
pop
mov
pop
ret
mov
mov
cmp
mov
mov
mov
mov
je
jmp
mov
cmp
je
lea
mov
cmp
mov
mov
mov
mov
je
jmp
mov
push
call
add
test
je
mov
push
mov
call
add
test
mov
je
add
mov
jmp
mov
mov
movzwl
add
test
je
lea
add
mov
movzwl
add
test
jne
jmp
mov
push
push
call
add
test
jne
jmp
mov
rcl
add
test
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
jmp
mov
sub
add
push
push
mov
mov
call
add
test
je
mov
lea
mov
mov
mov
lea
jmp
cmpb
je
mov
mov
mov
xor
pop
pop
pop
mov
pop
ret
mov
mov
sub
push
mov
add
push
push
call
movzwl
add
test
mov
jne
mov
mov
mov
mov
sub
push
add
push
push
add
call
add
test
je
push
push
mov
mov
push
call
mov
mov
mov
add
cmpb
mov
je
cmpb
jne
test
je
cmpb
jne
cmpl
jne
cmpl
je
cmpb
je
push
push
push
call
add
test
je
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
push
push
call
mov
add
jmp
mov
lea
mov
jmp
mov
test
je
add
push
lea
push
push
call
jmp
cmpb
jne
mov
test
jle
cmp
jne
mov
mov
pop
pop
mov
xor
pop
mov
pop
ret
nop
test
adc
outsb
cmp
outsl
cmp
jg
add
dec
outsl
cmp
push
mov
add
dec
mov
add
push
mov
add
in
add
out
add
lcall
adc
jo
adc
movsb
add
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
push
mov
push
push
xor
push
mov
push
add
push
mov
mov
call
add
test
je
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
lea
add
cmp
mov
jg
mov
xor
cmp
mov
jle
mov
mov
lea
mov
mov
mov
mov
mov
mov
push
push
call
add
push
mov
push
push
push
call
add
test
je
mov
mov
cmpw
jne
mov
movw
mov
mov
mov
add
add
cmpb
je
mov
mov
lea
cmpl
mov
lea
mov
mov
je
add
mov
push
mov
mov
push
push
lea
push
push
call
mov
add
cmp
jne
cmpl
je
mov
cmp
je
mov
movw
addl
mov
test
mov
mov
je
mov
mov
mov
mov
mov
test
jne
add
mov
add
add
cmp
mov
mov
jl
mov
mov
mov
test
jne
mov
movl
cmpl
jg
mov
xor
xor
cmp
mov
jne
cmp
jne
cmp
jge
mov
add
cmp
mov
jl
mov
mov
test
jne
cmpb
je
mov
mov
test
jne
mov
mov
test
je
mov
mov
xor
cmp
mov
je
mov
cmp
jne
mov
mov
add
mov
mov
mov
xor
mov
add
test
jne
mov
add
add
cmp
jg
mov
mov
add
push
lea
push
push
mov
call
add
cmpl
jne
mov
mov
mov
xor
pop
pop
pop
add
ret
call
test
je
mov
jmp
cmpb
movb
jne
mov
mov
lea
push
mov
push
push
mov
push
push
push
call
add
test
jne
cmp
je
mov
cmp
je
mov
mov
movw
addl
mov
mov
mov
mov
jmp
mov
mov
mov
mov
add
lea
mov
cmp
je
mov
mov
mov
addl
mov
mov
add
test
mov
jne
mov
test
mov
je
push
push
push
call
add
test
je
cmpb
mov
mov
je
push
mov
call
add
test
jne
jmp
mov
test
je
mov
mov
lea
mov
add
cmp
jne
jmp
mov
mov
add
add
test
jne
mov
jmp
mov
mov
mov
mov
lea
mov
push
mov
push
add
push
call
mov
mov
add
pop
pop
mov
xor
pop
add
ret
cmpb
jne
mov
add
addl
movw
jmp
mov
mov
movzbl
mov
shl
test
mov
je
lea
sar
test
jne
mov
test
je
sub
mov
mov
test
jle
mov
movzwl
cmp
mov
je
cmp
je
movw
add
cmp
jge
mov
jmp
mov
xor
push
push
mov
mov
add
push
call
mov
mov
add
test
je
cmp
mov
mov
jle
xor
mov
mov
movzwl
mov
cmp
je
mov
imul
mov
addl
movzwl
xor
mov
add
cmp
mov
mov
jl
lret
in
inc
add
adc
cli
cmp
mov
mov
movzwl
mov
cmp
mov
je
mov
imul
movzwl
mov
mov
addl
movzwl
movzwl
xor
add
test
mov
mov
jne
mov
mov
add
and
mov
lea
add
add
mov
cmp
je
cmpb
je
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
addl
mov
add
test
mov
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
subl
mov
mov
mov
mov
mov
mov
jne
cmpl
jne
mov
add
xor
jmp
mov
movw
lea
mov
call
test
je
mov
cmp
je
mov
mov
mov
mov
addl
add
cmpw
jne
mov
add
mov
nop
cmp
je
movzwl
mov
mov
addl
movzwl
mov
add
test
mov
jne
cmp
je
mov
mov
mov
call
test
je
mov
cmp
je
mov
movw
addl
mov
subl
mov
mov
mov
mov
jne
cmpl
jne
add
mov
xor
jmp
mov
push
push
push
mov
mov
push
call
add
test
jne
mov
add
addl
movw
jmp
lea
mov
mov
movw
mov
test
jne
jmp
mov
call
test
je
mov
cmp
je
mov
movw
jmp
mov
mov
mov
sar
mov
add
mov
test
jne
cmp
mov
jae
movb
mov
mov
mov
shl
mov
mov
lea
add
add
push
push
call
add
test
je
mov
mov
or
test
je
mov
lea
add
add
lea
mov
sub
sub
test
movl
jne
mov
jmp
add
mov
shl
push
mov
mov
mov
push
call
add
test
je
cmp
mov
jle
mov
push
mov
push
push
push
call
add
jmp
int3
int3
int3
push
mov
push
mov
push
push
mov
mov
cmp
je
mov
mov
lea
push
movw
addl
cmpl
lea
mov
je
mov
mov
push
push
push
lea
push
push
mov
call
add
cmp
jne
cmpl
je
mov
cmp
je
mov
movw
addl
mov
test
je
push
add
lea
push
push
call
add
test
je
mov
cmp
je
mov
mov
mov
pop
pop
pop
pop
pop
ret
mov
mov
mov
cmpb
je
movzwl
cmp
je
test
je
xor
movzwl
cmp
je
movzwl
add
test
jne
pop
pop
pop
mov
pop
pop
ret
cmpw
jne
cmpw
jne
cmpw
jne
cmpw
jne
movzwl
test
je
cmp
jne
test
je
push
add
push
add
push
call
add
pop
pop
mov
pop
movb
mov
pop
pop
ret
add
pop
mov
pop
pop
movb
mov
pop
pop
ret
test
jle
xor
mov
mov
jmp
lea
mov
cmp
je
mov
mov
mov
mov
mov
add
add
cmp
mov
jl
mov
cmp
je
mov
movw
mov
add
push
push
lea
push
call
mov
mov
add
cmp
jne
jmp
call
test
jne
jmp
lea
call
test
jne
jmp
sub
push
push
mov
push
push
mov
test
je
mov
movzwl
xor
test
mov
mov
je
movzwl
nop
imul
movzwl
add
xor
movzwl
test
jne
mov
lea
mov
and
xor
cmpl
je
mov
mov
mov
cmp
jne
mov
movzwl
sub
test
je
movzwl
add
cmp
movzwl
je
mov
mov
mov
test
jne
mov
movzbl
add
not
sub
and
shr
mov
add
shr
and
or
mov
mov
movzbl
cmp
jb
sub
mov
cmpl
into
inc
add
add
inc
add
push
or
mov
sub
shr
test
jne
mov
mov
mov
mov
push
call
mov
mov
mov
lea
add
cmpl
je
mov
push
push
push
call
mov
mov
add
mov
mov
addl
mov
mov
inc
add
add
pop
pop
pop
pop
add
ret
pop
pop
pop
xor
pop
add
ret
mov
test
je
mov
movb
movl
mov
push
call
add
test
mov
je
push
push
push
call
mov
movzwl
add
xor
test
je
mov
movzwl
jmp
lea
imul
movzwl
add
xor
movzwl
test
jne
mov
sub
and
jmp
mov
sub
add
mov
jmp
add
movzbl
mov
mov
shl
mov
lea
mov
mov
mov
push
call
add
test
je
push
push
push
mov
call
add
cmpl
jbe
xor
mov
mov
cmpl
lea
je
mov
mov
mov
movzwl
xor
test
je
imul
movzwl
add
xor
movzwl
test
jne
mov
mov
add
mov
and
cmpl
jne
mov
mov
add
cmp
mov
jb
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
lea
and
add
mov
cmpl
je
xor
lea
test
jne
mov
lea
mov
not
and
add
shr
shr
and
or
movzbl
cmp
jb
sub
mov
cmpl
je
jmp
xor
test
jne
mov
mov
add
not
add
and
shr
mov
add
shr
and
or
movzbl
cmp
jb
sub
mov
cmpl
jne
jmp
mov
sub
add
mov
jmp
mov
sub
add
jmp
int3
int3
int3
int3
int3
sub
mov
mov
push
mov
push
mov
push
push
mov
mov
mov
mov
lea
push
push
push
push
call
add
cmp
je
cmp
je
cmp
jne
cmpl
mov
mov
lea
mov
je
mov
mov
push
push
push
lea
push
push
call
add
cmp
jne
cmpl
je
mov
jmp
cmpb
je
mov
cmp
je
mov
movw
addl
mov
jmp
xor
pop
pop
pop
pop
add
ret
add
cmp
ja
movzbl
inc
add
inc
add
and
sub
push
add
push
mov
push
call
movzwl
add
test
jne
mov
mov
mov
sub
add
add
cmpl
mov
mov
mov
je
lea
mov
mov
push
add
push
mov
push
lea
push
push
call
add
cmp
jne
mov
cmpl
je
mov
cmp
je
mov
movw
addl
mov
test
je
push
push
mov
push
call
mov
mov
mov
mov
add
add
cmp
mov
je
mov
cmpb
je
cmpb
jne
test
je
cmpb
jne
cmpl
jne
mov
test
je
mov
mov
push
lea
push
push
mov
movb
mov
push
push
push
call
add
test
movb
je
pop
pop
pop
pop
add
ret
mov
call
test
je
mov
jmp
mov
call
test
je
mov
jmp
mov
cmp
je
mov
mov
addl
mov
jmp
lea
mov
out
adc
mov
adc
mov
adc
aaa
adc
aaa
adc
push
add
push
push
push
push
push
push
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
push
mov
push
push
mov
cmp
mov
mov
mov
jne
lea
lea
mov
mov
test
mov
mov
movb
mov
jle
mov
push
mov
push
push
lea
push
push
call
add
cmp
jne
mov
cmpb
je
cmpl
jne
mov
test
je
mov
cmpb
mov
mov
je
test
jne
mov
sub
sar
push
push
push
call
add
mov
mov
sub
je
sub
je
mov
lea
push
mov
mov
push
push
push
call
mov
mov
mov
mov
add
jmp
mov
add
cmp
ja
jmp
cmp
jne
jmp
imul
addb
add
je
mov
mov
mov
sub
push
add
push
push
push
call
mov
add
test
je
mov
mov
mov
sub
mov
sar
mov
mov
mov
cmpl
jne
test
jne
cmpb
jne
jmp
mov
push
mov
mov
push
push
call
add
test
jne
mov
cmp
je
mov
add
cmp
mov
mov
je
mov
mov
push
lea
push
mov
push
lea
push
push
mov
call
mov
add
cmp
jne
cmpl
je
mov
cmp
je
mov
movw
addl
mov
test
je
mov
push
push
push
call
add
test
mov
je
cmp
mov
jne
mov
mov
mov
movl
mov
movb
cmpl
je
xor
mov
mov
cmpl
je
jmp
mov
push
mov
push
mov
call
add
test
jne
jmp
cmpb
je
test
je
mov
mov
xor
pop
pop
pop
mov
pop
ret
cmpb
jne
mov
mov
push
push
push
push
movl
call
add
pop
pop
pop
mov
pop
ret
cmpl
jne
jmp
mov
push
push
push
call
add
test
jne
mov
mov
jmp
cmp
jne
mov
cmp
jne
cmpb
je
mov
push
mov
push
push
add
push
push
call
add
cmp
je
mov
pop
pop
mov
xor
pop
mov
pop
ret
mov
movb
movb
cmpl
je
mov
mov
mov
sub
push
add
push
push
lea
call
add
test
mov
je
mov
mov
movb
mov
cmpb
jne
cmpl
je
cmpl
jne
push
push
add
push
call
add
test
mov
je
movl
mov
cmpb
je
cmpl
je
mov
mov
mov
mov
sub
push
add
push
push
add
call
add
mov
mov
add
cmpl
je
mov
add
mov
mov
mov
cmpl
je
jmp
mov
cmpb
je
cmpl
je
cmpl
je
jmp
mov
cmpb
je
mov
mov
mov
push
push
push
add
call
add
test
je
mov
mov
push
add
push
push
call
add
test
mov
je
cmp
mov
jne
mov
mov
mov
movl
mov
movb
cmpl
jne
cmpl
jne
mov
mov
mov
cmpl
je
jmp
mov
movb
cmpl
je
mov
mov
mov
mov
sub
push
add
push
push
add
call
add
test
je
mov
push
push
add
push
mov
call
mov
mov
mov
add
mov
cmpl
je
cmpb
jne
cmpb
je
test
je
cmpb
jne
cmpl
jne
cmpl
je
mov
movb
mov
mov
mov
push
mov
push
push
movb
mov
mov
push
push
call
add
test
movb
je
mov
cmpb
je
movb
cmpb
jne
mov
test
je
jmp
call
test
jne
jmp
mov
mov
jmp
mov
mov
movl
jmp
cmpl
je
mov
mov
push
push
push
lea
call
add
test
mov
je
mov
mov
movl
movb
movl
jmp
mov
test
jne
cmpl
jne
cmpb
jne
mov
test
je
mov
push
call
add
jmp
mov
test
je
mov
mov
push
push
mov
push
mov
push
push
call
add
lea
movl
call
jmp
mov
mov
push
push
mov
call
add
test
jne
jmp
call
test
jne
jmp
mov
mov
push
push
mov
push
push
mov
push
call
add
lea
call
movb
jmp
mov
mov
movb
cmpl
je
cmpl
je
push
lea
push
push
mov
call
add
test
je
cmpb
jne
inc
add
mov
mov
push
mov
mov
push
mov
push
push
push
call
add
test
je
cmpb
je
inc
add
jne
mov
test
jne
inc
add
add
add
jmp
mov
mov
movl
jmp
nop
out
cmp
adc
mov
add
jmp
mov
add
sahf
mov
cmp
mov
add
dec
rolb
test
add
lock
add
cs
add
subb
adc
mov
cmp
and
cmp
repz
adc
xor
adc
cmp
jg
cmp
ret
sub
adc
sub
adc
sub
adc
sub
adc
cmp
insl
sub
adc
sub
adc
sub
adc
sub
adc
cmp
dec
sub
adc
sub
cmp
push
xor
cmp
popf
xor
cmp
scas
xor
adc
cmp
imul
cmp
jae
cmp
divb
cmp
mov
cmp
xorb
adc
cmp
lea
cmp
into
rolb
mov
add
mov
cmp
push
xor
adc
mov
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
mov
push
mov
mov
add
mov
inc
add
add
add
add
movl
mov
je
push
mov
mov
mov
mov
lea
push
push
push
push
call
add
cmp
je
cmp
jne
cmpl
mov
mov
mov
mov
je
mov
mov
push
lea
push
mov
push
lea
push
push
call
add
cmp
jne
cmpl
je
mov
mov
jmp
movl
mov
mov
mov
pop
pop
pop
pop
add
ret
add
cmp
ja
movzbl
jmp
add
push
push
call
add
test
jl
lea
call
test
je
jle
xor
mov
mov
lea
mov
cmp
je
mov
mov
add
mov
addl
cmp
mov
jge
jmp
mov
call
test
jne
jmp
mov
call
test
je
mov
jmp
sbb
aaa
adc
in
adc
in
adc
in
adc
adc
ret
add
in
jecxz
adc
out
adc
pop
add
pop
pop
pop
pop
pop
pop
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
push
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmpw
je
lea
mov
cmp
je
mov
mov
mov
addl
add
cmpw
jne
mov
pop
ret
pushl
pushl
pushl
call
add
test
je
mov
cmp
je
mov
andw
addl
mov
ret
xor
ret
push
mov
push
lea
cmpl
je
pushl
lea
push
push
push
mov
push
call
add
cmp
jne
mov
pop
pop
ret
call
test
jne
jmp
mov
mov
push
xor
and
or
jne
xor
test
jne
call
test
jne
mov
pop
ret
mov
call
xor
test
jne
test
jne
test
jne
test
jne
ret
mov
jmp
mov
ret
push
mov
mov
call
cmp
jne
mov
xor
test
jl
mov
cmp
jge
mov
test
je
mov
pop
ret
xor
jmp
push
call
test
pop
je
xor
inc
ret
push
pushl
call
neg
pop
pop
sbb
inc
ret
mov
test
push
push
je
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
push
call
mov
mov
xor
pop
pop
ret
add
mov
test
jne
jmp
mov
decl
mov
je
ret
movl
push
movl
call
pop
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
testb
jne
mov
test
jbe
push
push
mov
push
xor
push
mov
xor
lea
movzwl
mov
and
xor
cmp
je
cmp
jae
mov
shr
movzbl
shl
mov
and
add
mov
shr
and
xor
cmp
jae
cmp
jae
cmp
jae
cmp
je
test
jne
add
cmp
mov
jb
pop
pop
pop
pop
pop
ret
cmp
ja
jmp
cmp
ja
jmp
mov
test
je
mov
call
test
jne
xor
ret
xor
inc
ret
push
mov
add
call
pop
ret
push
mov
push
andl
push
push
mov
testb
push
je
mov
test
jne
mov
test
je
mov
cmp
jne
movl
mov
movb
mov
mov
mov
test
jne
lea
mov
call
test
jne
cmp
jne
mov
xor
inc
test
mov
je
mov
push
call
mov
push
push
push
mov
call
andl
mov
mov
test
jne
cmpl
jne
mov
pop
pop
pop
leave
ret
pushl
mov
pushl
pushl
push
call
jmp
push
mov
mov
cmp
jb
mov
push
pushl
mov
push
call
test
je
mov
mov
mov
pop
ret
push
mov
sub
mov
xor
mov
mov
push
mov
push
mov
cmpl
je
push
push
mov
lea
mov
call
mov
xor
sub
je
dec
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
clc
call
cmp
pop
pop
je
cmp
jne
pushl
mov
pushl
mov
call
pop
pop
xor
pop
mov
pop
xor
pop
call
leave
ret
mov
lea
movl
call
jmp
andl
pushl
lea
mov
movl
movl
mov
mov
movb
call
mov
ret
push
mov
sub
mov
xor
push
mov
sub
push
push
push
push
lea
push
call
fcoms
fs
jecxz
jae
add
add
mov
add
add
mov
add
jmp
pop
mov
add
pusha
imul
out
add
rolb
cli
pusha
add
loope
mov
push
sub
pop
popl
push
push
push
push
push
call
cli
stos
jmp
jmp
add
push
insb
pushf
xchg
add
add
lods
aad
std
add
enter
out
nop
out
movsl
fs
add
out
add
add
lret
add
push
push
push
call
fidivrl
movsb
shl
fiaddl
add
xchg
pop
rolb
ja
add
add
mov
add
pop
shll
jecxz
jecxz
xchg
push
ret
mov
jne
in
hlt
pop
push
push
lea
push
lea
push
push
push
call
xlat
pop
lret
sbbb
add
push
jp
arpl
add
add
jae
icebp
mov
add
call
in
call
loopne
filds
jb
add
add
add
jle
add
xchg
mov
add
xchg
mov
in
pop
push
push
push
push
push
call
add
mov
imul
shr
add
xchg
add
add
call
xchg
shlb
jbe
lock
test
mov
mov
add
imul
add
sub
pop
call
push
push
push
call
add
aam
imul
add
nop
add
add
add
addr16
add
cmpb
add
add
mov
mov
add
lea
add
movl
add
aam
add
loop
add
sub
pop
push
push
lea
push
push
push
lea
push
lea
push
lea
push
call
add
test
subb
or
mov
mov
mov
add
les
out
push
pop
ja
lret
loopne
mov
test
add
jbe
add
stos
mov
stos
mov
lcall
lcall
out
add
push
push
push
push
push
call
mov
add
jle
outsl
rclb
jmp
add
add
push
sbb
add
add
incb
add
add
add
add
jns
add
add
mov
in
lcall
jb
add
ret
push
push
push
lea
push
push
call
add
mov
add
addb
sti
js
loop
pop
add
add
test
fiadds
add
push
nop
test
ret
stos
add
push
mov
std
add
push
add
scas
mov
int3
pop
mov
enter
mov
roll
out
loope
add
in
pop
mov
push
push
push
push
push
push
call
scas
movsl
icebp
add
add
add
fwait
add
add
popf
add
aam
mov
jl
push
xchg
jbe
mov
arpl
jge
add
loop
into
pusha
add
jle
add
popa
add
popf
mov
add
outsl
xchg
add
fdivl
call
add
push
push
push
push
push
push
push
push
call
bound
add
sbbb
loope
mov
sahf
sti
mov
mov
add
xchg
addl
repnz
jae
add
mov
outsl
loop
jbe
popf
add
les
add
sub
pop
add
push
push
push
push
push
call
addl
jmp
cli
add
enter
add
in
add
imul
movsb
add
mov
call
add
lcall
ret
add
add
push
push
push
push
push
push
push
push
push
push
call
out
xchg
jmp
mov
cli
pop
add
mov
lods
add
jl
add
add
cmpsl
stos
add
mov
movsb
add
add
xchg
fdivr
lcall
pop
add
lret
lods
mov
out
pop
push
push
call
add
cld
add
jae
xchg
add
xchg
jl
pop
add
mov
xchg
pop
mov
testl
les
add
add
ja
js
movl
cmpsb
add
clc
sub
pop
xor
push
push
lea
push
push
lea
push
lea
push
lea
push
push
push
call
push
mov
test
je
add
aam
add
in
arpl
fildl
out
xchg
aad
add
ret
imul
out
in
add
jae
add
mov
add
push
cli
add
xchg
add
add
add
popf
add
mov
lcall
sub
pop
add
push
push
not
rol
sub
push
or
not
add
sub
ror
inc
shl
sub
sub
add
pop
rol
pop
push
push
push
push
push
push
push
push
push
push
call
push
fwait
imul
jne
clc
jo
add
loope
fadds
add
mov
add
add
push
add
in
test
cmpsb
add
pop
mov
lret
pop
cltd
sub
pop
pushl
push
push
lea
push
push
lea
push
push
push
lea
push
push
push
call
out
add
add
add
xchg
add
xorl
mov
add
add
popa
in
loopne
pop
add
add
jo
add
jbe
test
addb
add
add
scas
push
aad
aad
push
add
movb
add
jl
push
aam
in
fcomps
mov
add
js
push
lea
push
push
lea
push
push
lea
push
lea
push
call
mov
fdivs
xchg
add
cwtl
movsl
pop
cmpsl
mov
add
movsl
test
add
add
add
mov
add
add
std
add
add
xchg
jbe
add
into
xlat
add
test
add
add
lahf
loop
in
loopne
lcall
inc
call
lea
push
push
push
push
push
push
call
add
movsb
add
add
jl
in
in
add
push
add
lret
cwtl
add
xchg
add
aad
add
add
into
add
fucomi
add
add
xorb
stos
add
add
in
call
push
push
push
push
lea
push
lea
push
push
call
mov
jb
pushf
xchg
jge
push
lock
add
add
add
xchg
popa
jno
rolb
lock
mov
imul
jl
add
lcall
jne
push
lea
push
call
cli
add
faddl
stc
mov
pop
ljmp
add
add
js
mov
mov
mov
add
xchg
push
ret
in
add
add
add
stos
add
cmc
movsl
lret
addr16
cmc
imul
add
stos
sub
pop
pushl
call
push
lea
push
push
push
push
push
push
call
add
jae
aam
add
xchg
stos
fwait
push
lret
add
add
add
jne
add
add
add
andb
add
jo
add
add
in
in
pushl
pushl
push
push
push
lea
push
push
push
push
call
push
add
adcl
xchg
fildl
fiaddl
data16
add
je
insb
nop
add
hlt
jo
ja
ljmp
add
ja
test
mov
push
push
roll
aad
add
stos
mov
movsl
fsubs
add
popl
add
add
pusha
add
sub
pop
call
push
push
dec
not
sub
push
or
inc
add
not
sub
dec
not
dec
pop
dec
ror
pop
push
push
push
push
push
push
push
push
call
je
testb
jno
mov
mov
cld
add
leave
add
xchg
loope
clc
add
add
add
loopne
mov
fldcw
add
out
push
add
bound
sub
pop
pushl
call
push
lea
push
call
arpl
test
out
lret
xchg
add
sahf
fs
add
int
add
add
in
add
add
add
add
xchg
add
add
outsl
sub
pop
push
push
push
lea
shr
ror
push
or
not
add
lea
sub
xor
sub
sub
inc
xor
sub
pop
not
add
ror
pop
push
push
push
push
push
lea
push
call
add
add
push
add
add
xchg
loope
faddl
stos
add
test
ja
pop
mov
jge
push
push
idivb
push
add
icebp
add
add
push
repnz
loope
add
test
add
shrb
scas
cwtl
test
add
fdivr
test
push
add
lcall
push
push
call
add
add
add
push
fwait
add
adc
insb
mov
pop
icebp
push
hlt
out
cli
in
jle
jp
pop
pop
add
fwait
leave
add
add
arpl
sub
add
out
mov
mov
scas
jle
test
nop
add
shl
add
iret
add
call
add
rclb
or
adcb
xchg
into
mov
lea
push
call
add
out
add
add
xchg
enter
add
in
cli
fldl
add
add
mov
fiaddl
cld
add
add
clc
ja
out
scas
mov
add
stc
add
push
push
int
enter
cli
add
sub
pop
mov
push
push
push
push
push
lea
push
lea
push
push
push
push
call
mov
add
mov
mov
pop
add
add
lcall
fwait
sahf
jnp
mov
add
lds
add
out
rol
frstpm(287
add
push
push
push
push
push
push
lea
push
push
push
call
mov
push
mov
loop
in
js
mov
add
cmpsb
add
xchg
scas
jne
in
loopne
mov
push
push
push
call
add
faddl
add
add
add
mov
mov
pusha
outsl
add
add
xlat
add
lds
push
out
mov
add
loope
jp
add
add
add
bound
mov
xchg
jp
rol
mov
je
jo
popf
xchg
ljmp
add
jl
add
add
mov
in
hlt
lcall
pop
in
push
lea
push
lea
push
push
lea
push
push
push
push
call
add
fisubrs
cli
pop
add
ljmp
add
pop
movsb
push
hlt
add
fildl
add
add
jo
add
faddl
add
filds
push
push
jae
add
add
add
add
add
leave
add
mov
pop
test
mov
xchg
add
ret
add
add
add
push
push
push
push
call
mov
mov
add
ret
add
roll
add
pop
pop
add
cld
mov
movl
jne
add
mov
cld
pop
push
lret
addr16
add
addb
add
jne
mov
fidivrl
push
add
pop
xlat
cmpsb
stc
sub
pop
mov
xor
push
push
call
mov
mov
test
add
test
add
mov
scas
lret
jns
add
movsb
pop
hlt
add
add
xchg
add
out
out
add
add
add
add
add
mov
out
negl
add
jecxz
in
movsl
add
lcall
jne
push
push
push
push
push
push
call
lds
into
jmp
add
fnstcw
mov
xchg
add
mov
add
mov
add
add
add
mov
add
lcall
push
push
lea
push
push
lea
push
push
call
add
mov
cmpsl
aam
add
fwait
xlat
add
popf
add
sarb
into
lods
add
mov
rolb
cltd
add
add
scas
bound
shll
jb
jno
pop
popa
xchg
add
scas
add
add
leave
xchg
mov
popf
fidivs
add
aad
mov
lcall
inc
or
scas
push
lea
push
push
push
push
push
push
push
call
cwtl
stos
notb
mov
jecxz
add
add
add
add
in
mov
add
add
mov
add
js
add
add
stos
imul
pop
add
roll
add
add
add
fiaddl
test
fadds
add
lcall
lock
push
push
call
add
fwait
add
add
add
add
subl
add
aad
add
add
push
xchg
fildl
jmp
clc
pop
mov
xor
push
push
lea
push
push
push
push
lea
push
lea
push
push
call
add
add
add
lret
add
imul
aam
push
lea
mov
shrb
ja
repnz
int3
add
xchg
addb
testl
add
jmp
lcall
mov
cmpl
iret
jge
sub
pop
push
push
push
lea
push
push
lea
push
lea
push
call
add
add
add
add
leave
mov
add
add
push
xchg
jnp
icebp
add
cltd
add
clc
lcall
xchg
add
shlb
call
xor
push
push
lea
push
push
push
push
lea
push
lea
push
push
call
pop
add
mov
add
loop
add
in
rolb
roll
sbb
push
mov
mov
mov
add
jb
lods
fwait
stos
push
arpl
jecxz
in
add
add
mov
in
fcompl
enter
dec
pop
push
push
push
push
call
push
mov
add
out
repnz
add
out
mov
add
mov
add
incb
jbe
je
fadds
imul
ja
out
pop
bound
add
xchg
add
add
movsl
push
je
mov
pop
rep
push
lea
push
call
add
add
int3
enter
add
popa
mov
add
mov
rcll
std
add
push
pop
cwtl
iret
push
add
lods
imul
pop
hlt
push
push
push
lea
push
call
add
pop
rol
pop
sti
add
mov
add
jb
add
add
jb
int
add
enter
icebp
repnz
mov
add
lods
push
jmp
fs
add
lods
add
lcall
pop
in
push
push
push
push
call
jns
adc
add
loop
mov
add
mov
add
fnstcw
fdivs
mov
fstpt
popf
mov
mov
les
iret
shl
outsl
in
push
mov
pop
add
add
add
add
push
lea
push
push
call
add
add
add
mov
add
mov
jp
add
add
loopne
pop
add
test
imul
lahf
lea
mov
in
hlt
lcall
ret
add
add
mov
push
push
lea
push
push
call
add
ret
add
xchg
pop
cmpsl
add
cli
add
jnp
addl
fwait
pusha
add
insb
lret
add
add
fldl
sub
pop
xor
push
lea
push
push
push
push
lea
push
push
push
push
push
call
fs
lock
jbe
leave
jo
add
pop
fcomps
mov
nop
mov
in
xchg
popa
cmc
add
iret
add
les
add
push
push
push
push
lea
push
call
mov
stos
mov
std
out
std
add
add
test
add
cwtl
add
hlt
add
ljmp
add
cmp
add
iret
add
in
in
pop
mov
push
push
lea
push
push
push
lea
push
push
push
push
lea
push
call
imul
addl
jmp
add
arpl
je
add
mov
stc
mov
into
add
add
add
add
out
add
aam
nop
mov
lcall
adc
push
lea
push
push
push
call
add
add
rcrl
add
xchg
fwait
add
jp
scas
ret
push
jle
add
add
aad
add
pop
add
xlat
icebp
add
add
in
loopne
divl
test
call
cmpsb
jbe
add
les
lock
add
push
lea
push
lea
push
push
push
push
push
push
push
push
call
mov
xchg
in
lahf
popf
lea
icebp
jmp
popf
push
add
mov
mov
add
add
add
out
add
imul
in
fdivr
lcall
dec
sub
lods
mov
push
lea
push
lea
push
push
call
in
add
push
add
scas
pop
push
testl
cltd
add
add
mov
jnp
addb
add
cld
add
lret
cli
push
in
call
xor
push
lea
push
push
call
movsl
jl
add
push
add
ror
add
add
stos
lret
add
add
push
les
add
add
push
add
add
movsl
iret
cmc
add
in
add
xchg
hlt
push
nop
loope
mov
notb
add
push
add
nop
clc
jno
add
mov
cltd
int3
push
jbe
add
add
add
les
add
push
push
push
push
push
push
call
mov
add
push
mov
xchg
add
in
insb
add
push
loope
xorb
add
add
in
je
jae
add
push
push
add
incb
fmuls
add
test
add
add
mov
add
add
cwtl
add
add
add
push
xchg
sub
pop
add
push
shl
rol
sub
pop
add
push
sub
rol
not
pop
mov
push
push
shl
xor
xor
add
push
sub
add
dec
sub
shr
sub
sub
ror
lea
pop
xor
xor
pop
push
dec
pop
pushl
call
push
push
push
push
push
lea
push
lea
push
push
call
mov
add
arpl
jle
leave
add
xlat
jecxz
add
gs
jno
add
xchg
add
stos
add
stos
jo
push
faddl
rolb
add
stos
mov
cmpsb
add
out
add
pop
test
push
add
aam
scas
add
add
pushf
pusha
imul
add
add
sub
lldt
ret
cmp
lret
push
push
or
not
add
sub
add
add
shr
sub
pop
sub
dec
rol
pop
push
lea
push
push
lea
push
lea
push
call
add
out
je
mov
imul
out
mov
push
stc
roll
add
sub
add
add
jnp
add
fsubr
nop
out
pusha
mov
lcall
je
add
add
lret
ret
add
add
push
lea
ror
pop
push
push
inc
xor
pop
call
push
shr
inc
pop
mov
push
push
shl
xor
add
pop
push
push
push
push
push
push
call
testl
jl
out
jne
add
cmc
in
add
lahf
scas
mov
pop
rolb
add
movsl
add
add
lcall
pop
hlt
add
push
lea
push
push
call
jp
pop
pop
rclb
xchg
mov
add
imul
pusha
test
add
shlb
add
clc
pop
insb
xchg
gs
jae
add
pop
add
add
push
dec
rol
sub
pop
mov
push
push
push
lea
push
push
lea
push
lea
push
push
push
push
call
test
ret
int3
mov
add
add
sahf
jecxz
jmp
bound
add
data16
test
cltd
fsubs
jae
sti
out
enter
ficompl
mov
loop
out
mov
add
mov
pushaw
pop
mov
jnp
mov
jmp
imul
ja
add
add
xchg
add
xchg
test
in
fcompl
xor
push
push
push
lea
push
push
push
push
push
lea
push
lea
push
call
add
enter
outsl
addl
mov
mov
lcall
outsl
add
repnz
cwtl
mov
xchg
loop
stc
mov
int3
add
add
mov
xchg
add
stos
add
add
push
mov
add
in
fcomps
les
add
not
pop
add
push
push
push
call
lods
sti
jnp
pop
dec
add
ret
fildll
mov
mov
ja
lret
popl
add
loopne
or
push
add
add
xchg
add
add
add
movsl
add
je
in
clc
pop
mov
xor
push
shr
add
pop
add
push
sub
ror
sub
pop
pop
push
dec
pop
mov
xor
push
push
push
push
call
push
add
sti
add
movsl
stos
mov
mov
add
jae
fs
add
add
add
lcall
movsb
push
add
pop
mov
push
push
lea
push
push
lea
push
push
lea
push
push
push
push
push
call
add
mov
add
add
push
add
cmpsb
fdivl
mov
mov
add
mov
add
push
jae
mov
jne
mov
add
fwait
add
add
add
add
data16
mov
in
fdivr
lcall
or
push
lea
push
push
push
push
push
push
push
push
lea
push
call
add
jns
fldenv
add
add
gs
add
mov
add
add
xchg
push
loope
pop
add
add
test
fdivr
lcall
les
shl
pop
or
je
mov
xor
push
push
push
lea
push
lea
push
push
call
add
bound
imul
fidivrl
add
add
add
add
loope
add
rcll
jae
add
in
stc
push
pop
js
add
mov
pop
jle
add
mov
jl
stc
xchg
add
mov
add
mov
add
addl
sbb
scas
push
push
push
lea
push
lea
push
call
xchg
add
add
mov
fildl
push
addl
mov
mov
pop
add
fsubl
clc
fists
add
clc
add
sub
pop
add
push
push
push
call
add
add
shlb
mov
addb
popf
add
std
lret
push
mov
sahf
data16
leave
add
jmp
aad
in
div
sti
jge
cwtl
popf
fisttpll
stos
mov
lcall
jne
push
push
lea
push
push
call
add
mov
add
les
pop
mov
add
add
push
mov
mov
add
fcomps
xchg
scas
enter
mov
mov
int3
vandnps
pop
add
outsl
add
mov
hlt
pop
mov
push
push
lea
push
push
call
mov
addb
add
jge
pop
insb
add
lea
xchg
add
je
fdivrl
cmc
rorb
iret
jne
add
add
add
popf
filds
call
add
jae
xorl
xchg
add
in
hlt
pop
xor
push
push
lea
push
lea
push
push
call
pop
lahf
les
add
cmc
addb
lret
add
out
call
add
add
jo
lds
mov
in
in
lcall
les
shl
add
pop
add
push
push
call
mov
jl
je
add
add
in
jp
jmp
fsts
int3
roll
mov
arpl
push
add
push
fcoml
movl
movsl
add
add
xlat
add
mov
loope
test
add
mov
arpl
in
clc
pop
pop
rep
push
shr
xor
pop
mov
push
push
lea
push
push
push
push
call
jb
stc
jne
add
mov
ljmp
lahf
add
mov
xchg
mov
movsl
push
rcr
stos
pop
xchg
stos
in
cmc
jne
push
movsb
sub
pop
xor
push
lea
push
push
call
sar
nop
mov
mov
sahf
xchg
add
mov
add
push
add
add
pop
xchg
add
out
lods
add
add
add
movsl
out
pop
add
add
clc
mov
aad
add
add
add
into
sub
pop
add
push
xor
lea
pop
or
je
push
push
push
call
add
add
add
cmpsl
jno
add
mov
add
add
add
outsl
lahf
mov
mov
in
hlt
lcall
repz
push
push
call
add
movsl
mov
add
xchg
rcrb
clc
jecxz
add
mov
add
add
jo
out
push
lahf
int
aam
sar
stos
add
add
add
add
add
sub
lea
push
call
test
popf
add
orb
add
add
leave
mov
shl
je
arpl
add
rcll
mov
je
mov
movsb
test
clc
hlt
insb
add
jbe
js
icebp
je
sub
pop
add
push
lea
inc
pop
rep
push
push
push
lea
push
push
push
push
push
push
call
pop
add
add
add
add
test
loope
cld
add
arpl
fwait
add
add
call
mov
xchg
add
scas
fistpl
out
fiadds
fildl
rcrl
add
add
add
push
gs
shrl
sub
pop
pop
push
push
sub
ror
push
push
pop
add
not
ror
dec
sub
ror
pop
sub
pop
push
push
push
push
push
push
lea
push
push
call
mov
in
mov
insb
out
add
fdivs
add
pop
mov
xchg
xchg
push
insb
jo
loopne
leave
sti
jmp
jmp
add
add
loope
imul
pop
push
add
inc
shl
pop
mov
mov
push
lea
add
not
pop
mov
push
push
push
push
push
push
lea
push
call
xchg
add
add
addl
add
lock
push
jle
mov
jp
fnstsw
test
add
out
lods
data16
add
andb
add
mov
add
sub
pop
jmp
push
pop
push
push
dec
pop
mov
push
xor
lea
inc
pop
add
push
rol
inc
pop
push
push
push
push
push
push
push
push
call
je
gs
cmpsb
jecxz
add
mov
add
add
pop
jmp
add
add
add
std
mov
sahf
jne
sahf
test
add
add
cmpsl
add
jmp
sti
sub
pop
push
push
ror
ror
pop
push
push
push
lea
push
lea
push
push
push
lea
push
push
push
push
call
lcall
fwait
jmp
jbe
mov
loopne
mov
cmpsb
xchg
iret
add
scas
xchg
test
jl
in
fcomps
mov
push
push
push
push
call
int3
add
push
add
mov
andl
add
jl
std
add
push
int
pop
add
movsl
mov
sahf
loopne
mov
in
push
lret
xchg
mov
jle
add
add
cmc
mov
pop
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
fbstp
add
rcll
mov
test
out
add
mov
fnstenv
addb
add
pop
loope
fiaddl
add
add
jge
notb
lds
add
addb
jae
add
jl
add
add
lcall
sub
pop
pop
push
pop
pop
pop
push
lea
push
push
push
push
push
push
call
test
add
mov
test
rcrb
add
mov
push
mov
push
cmpsb
jp
fisubs
adcb
add
add
lcall
push
not
xor
xor
pop
ret
push
push
push
call
add
add
ret
add
test
add
add
mov
add
add
clc
cmpsl
add
pop
add
mov
clc
lcall
in
push
lea
push
push
lea
push
push
push
push
lea
push
push
lea
push
call
pop
add
add
xchg
sarl
mov
mov
pop
add
add
add
je
push
add
out
movl
test
add
add
add
popf
add
add
xchg
cld
add
mov
add
add
jns
jge
sub
pop
add
push
push
push
call
cmpsl
add
add
pop
pop
add
mov
jl
pop
add
mov
test
add
mov
rcl
lods
add
lods
push
xchg
scas
mov
xchg
lock
add
fiadds
pusha
sub
pop
push
push
lea
push
call
int3
mov
ret
in
add
add
sbbl
pushf
test
arpl
add
add
add
add
shlb
xchg
mov
add
add
add
jne
clc
into
pop
add
add
add
jbe
addl
aad
in
clc
lcall
push
push
push
push
push
push
lea
push
push
push
call
rorb
jl
fisttpll
add
test
in
loope
aad
add
fisubs
add
xchg
stos
add
js
lods
gs
xchg
add
cld
outsl
fwait
add
add
jb
cwtl
outsl
mov
movsl
testb
pop
add
sti
add
add
push
add
pop
movl
addl
push
not
shr
pop
test
je
push
not
sub
add
lea
pop
mov
pop
push
push
lea
push
push
push
push
lea
push
push
call
jle
add
mov
add
add
jge
add
ja
mov
xlat
addb
mov
imul
push
add
add
roll
add
in
add
fdivrl
in
loopne
pop
push
lea
push
lea
push
push
push
lea
push
push
call
jb
rolb
scas
push
jle
add
push
push
push
pop
ret
push
mov
fisubs
add
add
call
pop
push
dec
add
pop
pop
leave
push
xor
shr
ror
sub
pop
ret
push
push
dec
xor
pop
mov
add
push
push
call
ror
add
add
cltd
add
stos
add
test
mov
add
sar
mov
pop
cmpsb
gs
mov
add
in
xchg
add
add
add
xchg
jo
jno
fidivrs
neg
mov
les
jno
lret
add
add
repnz
mov
fdivr
add
push
lea
push
push
call
fnstsw
add
add
cld
mov
leave
add
mov
push
ljmp
in
add
pop
add
xchg
push
add
add
mov
add
stc
mov
mov
hlt
pop
push
push
push
lea
push
lea
push
push
push
push
call
test
mov
out
add
add
cld
lods
add
pop
add
add
leave
add
pop
add
lret
xlat
add
lods
add
add
add
add
lods
mov
lcall
push
push
push
lea
push
push
lea
push
push
lea
push
call
mov
bound
add
imul
insb
cli
add
fstps
mov
add
add
add
out
add
popf
add
jmp
xlat
add
add
mov
add
add
add
add
pop
add
lcall
inc
cld
add
add
push
push
lea
push
lea
push
lea
push
push
push
lea
push
call
movl
mov
add
add
xchg
add
jb
movsb
add
add
data16
fdivrl
add
sarb
add
cli
jecxz
xchg
push
add
stos
jo
stos
rolb
rcr
sub
pop
addl
push
push
call
loopne
xchg
ror
lods
lods
out
int
add
mov
mov
pop
add
fwait
add
add
int3
outsl
stc
jae
push
add
add
lea
add
pushf
add
mov
mov
add
jle
add
add
add
add
add
jno
add
add
sub
pop
push
push
push
lea
push
lea
push
push
push
push
call
popf
add
add
mov
add
add
lret
add
add
fiadds
cwtl
add
cmpsb
lret
push
mov
add
cmc
int
mov
add
mov
shlb
movsb
sub
pop
call
push
push
push
push
push
push
call
lods
lret
add
pusha
add
pop
leave
cmpl
add
out
add
mov
pop
add
add
mov
xchg
mov
add
add
ljmp
add
add
jge
rcr
add
add
sahf
sub
pop
mov
push
sub
pop
pushl
push
push
push
push
push
push
call
add
jns
add
mov
stc
add
add
lock
lds
add
mov
in
lods
popf
outsl
mov
jne
add
add
add
add
add
mov
xchg
add
mov
ljmp
lock
add
add
add
cld
push
call
push
push
not
pop
push
call
push
push
push
push
push
call
fnsave
add
andb
fiaddl
mov
outsl
jb
mov
push
add
loop
push
add
int
add
iret
jb
js
add
pop
fwait
add
add
jge
add
test
call
or
jmp
pop
pop
pop
push
dec
sub
pop
pop
push
not
dec
pop
pop
leave
push
add
pop
ret
push
lea
push
call
lcall
stos
jne
in
add
add
jb
mov
push
add
add
repnz
add
mov
mov
add
js
add
fstps
js
mov
cltd
jecxz
add
add
jge
out
add
push
push
push
call
pushf
shrl
insb
sbbl
rolb
push
add
add
pusha
add
cmpsb
jb
js
add
add
stos
add
scas
flds
add
add
jnp
add
mov
push
jmp
nop
nop
fisubrl
add
add
in
push
lea
push
push
push
push
lea
push
call
add
add
cmpb
add
andl
add
add
repnz
test
xchg
add
push
add
add
push
add
mov
in
jl
lock
add
add
in
call
add
push
inc
shr
sub
not
pop
push
push
push
pop
push
push
push
push
push
push
call
mov
add
push
hlt
add
clc
shlb
add
add
mov
lods
mov
add
add
iret
bound
add
aam
add
test
push
pushf
iret
xchg
xorl
add
fists
out
pusha
add
lcall
inc
cld
or
add
push
shr
pop
push
call
push
add
pop
push
push
push
lea
push
lea
push
lea
push
push
lea
push
push
call
add
int
jns
add
rolb
xchg
add
add
add
mov
add
icebp
insb
pop
nop
subb
je
adc
add
sub
pop
call
push
dec
sub
inc
add
pop
subl
push
push
lea
push
push
push
push
call
add
mov
pop
mov
loope
movb
insb
cli
add
stc
add
cmpsl
aam
mov
jne
stc
add
lcall
rolb
fiadds
push
add
add
arpl
data16
enter
push
insb
mov
cmpl
jne
push
inc
sub
pop
pop
push
add
rol
pop
pop
push
push
push
lea
push
lea
push
call
mov
stos
mov
xlat
add
add
add
mov
imul
add
mov
jne
mov
jmp
push
in
test
mov
test
mov
add
add
bound
fstpt
mov
in
jp
repnz
jp
add
pop
push
push
push
lea
push
push
push
call
add
add
jmp
push
add
cmc
addr16
je
cmpsb
into
lock
jne
je
andb
add
xchg
add
out
fldl
aam
add
scas
push
outsl
add
sub
pop
leave
push
push
lea
push
push
call
add
add
add
xchg
add
movsl
xlat
add
fwait
add
sti
add
xchg
ret
xchg
cli
add
add
jo
in
mov
add
filds
add
fistpll
push
add
push
mov
lock
ret
push
lea
sub
pop
push
mov
push
shl
not
rol
xor
pop
add
push
ror
rol
shr
pop
push
push
add
add
ror
pop
push
push
rol
rol
shr
pop
push
push
lea
push
push
push
push
call
mov
fwait
je
pop
add
mov
fwait
add
add
sahf
filds
pusha
mov
jle
add
repnz
into
mov
add
mov
add
push
push
push
rol
dec
not
xor
push
or
not
add
sub
xor
not
sub
xor
ror
inc
pop
dec
pop
push
lea
push
push
lea
push
push
call
add
add
add
movsl
add
jne
add
mov
add
lods
loop
rcrl
mov
lahf
addl
in
in
lcall
jne
call
push
push
lea
push
push
push
push
push
push
push
call
iret
add
add
loopne
add
pop
lcall
add
add
mov
mov
fldcw
mov
int
add
sub
pop
call
push
push
push
lea
push
push
push
call
push
add
fadds
stos
addb
jno
out
add
pusha
aam
add
add
outsl
je
bound
mov
add
lea
add
addb
imul
add
jns
push
stos
lods
mov
add
add
addb
add
add
add
xchg
add
int3
mov
clc
add
aam
in
call
push
lea
push
push
lea
push
lea
push
push
lea
push
push
call
add
iret
mov
add
add
les
lods
test
jecxz
out
out
jns
add
incb
lcall
inc
cmp
not
inc
ror
pop
sub
mov
push
lea
push
push
call
popa
mov
gs
add
loopne
mov
aad
add
cwtl
popf
pop
add
add
add
hlt
add
add
fs
andl
jae
stos
je
add
mov
add
add
xchg
add
addb
popl
nop
jno
add
sub
pop
shr
add
push
sub
dec
inc
inc
pop
mov
push
ror
sub
pop
mov
push
push
lea
push
call
shll
add
scas
scas
test
repnz
stc
add
add
imul
add
fstpt
pop
jno
jecxz
add
mov
rcl
add
mov
pop
int
fwait
add
add
add
add
inc
or
rol
sub
pop
add
push
rol
add
sub
pop
mov
push
dec
xor
pop
mov
push
lea
push
push
push
push
lea
push
push
push
push
call
add
mov
div
out
add
in
aad
add
add
pusha
pushf
stos
scas
mov
fiadds
popa
add
add
in
add
in
add
divl
iret
add
add
xchg
add
add
add
fadds
add
add
add
out
xchg
out
add
lcall
pop
outsl
jne
push
not
pop
cmp
jne
push
push
lea
push
push
push
push
push
push
push
call
add
add
int
lahf
add
add
xchg
out
add
fbld
add
xchg
jnp
mov
or
add
add
add
add
lea
add
addl
add
nop
sub
pop
mov
movl
push
push
push
push
push
call
kmovb
push
add
insb
push
push
add
xchg
push
add
cld
add
sti
ljmp
add
xchg
pop
add
add
lret
arpl
add
clc
out
jae
xchg
fmull
add
push
dec
pop
mov
push
shl
dec
pop
mov
sub
jne
push
ror
rol
add
pop
mov
movl
push
push
push
push
push
lea
push
lea
push
lea
push
call
xchg
clc
add
hlt
add
add
add
xchg
add
xlat
mov
mov
ret
jp
push
add
lea
add
imul
sub
pop
jmp
push
pop
mov
mov
push
push
push
push
push
push
lea
push
call
jae
imul
mov
add
add
add
add
enter
add
call
mov
add
iret
add
loope
call
fcmovu
sub
pop
cmp
jne
push
sub
not
sub
pop
mov
push
push
push
push
push
push
push
lea
push
push
push
call
mov
mov
mov
insb
add
js
lret
test
pop
pop
mov
jae
mov
add
pop
xchg
xchg
add
pop
je
add
test
lcall
mov
add
mov
add
add
mov
fadds
add
add
out
add
pop
add
sub
pop
movl
push
push
push
lea
push
push
lea
push
push
push
call
xchg
out
fwait
imul
fildl
lcall
push
loop
flds
jecxz
add
push
jmp
add
push
stos
add
add
sti
into
add
add
data16
jge
add
xchg
lds
scas
add
add
add
out
add
xchg
pop
mov
xchg
add
xchg
gs
pop
jmp
push
ror
xor
pop
mov
push
push
push
lea
push
push
push
lea
push
push
call
add
add
addl
int
xchg
fcompl
pusha
test
lods
add
aam
mov
add
push
in
mov
add
add
add
add
add
jbe
add
icebp
add
sub
pop
cmpw
jne
push
lea
push
call
pusha
movsl
repnz
icebp
add
gs
add
fsubr
lock
mov
addb
add
int3
jo
add
fldt
ret
mov
xchg
add
sub
pop
mov
movl
push
push
lea
push
lea
push
call
pop
movl
xchg
add
xchg
test
add
out
cwtl
cmpsl
pop
lods
cmpb
add
ret
out
add
jo
mov
in
add
add
in
add
js
shl
in
lock
lcall
mov
add
push
add
pop
pushl
push
push
push
push
push
push
push
call
popa
mov
mov
add
push
cld
filds
add
in
add
out
add
add
fiadds
sti
lods
into
mov
ja
call
add
pop
pop
push
rol
pop
mov
mov
push
push
push
call
hlt
push
add
mov
aam
mov
add
shlb
in
add
add
ror
cld
icebp
pushf
aam
push
cli
xchg
mov
add
sub
pop
mov
push
push
add
push
xor
add
lea
sub
add
shl
pop
add
add
lea
pop
push
lea
push
lea
push
push
call
add
add
jp
hlt
push
into
add
push
add
mov
scas
aad
add
popf
movsl
jns
stos
ret
push
add
mov
mov
mov
lcall
call
push
not
xor
pop
cmpl
je
push
push
ror
xor
xor
push
or
not
add
lea
add
add
sub
shr
pop
lea
inc
ror
pop
push
sub
pop
push
push
push
push
push
push
call
mov
add
cld
pushw
add
nop
xchg
stc
add
add
add
add
pop
add
mov
mov
data16
add
push
ficoml
shl
aam
fcoms
call
cmpl
je
push
push
dec
push
or
not
add
shl
sub
lea
pop
dec
pop
push
push
call
add
add
jbe
lret
lret
popl
add
pop
addl
andl
mov
add
add
test
popf
int3
add
loopne
add
nop
add
out
mov
mov
data16
mov
popf
mov
testb
add
lods
add
sti
test
in
clc
pop
push
push
rol
sub
ror
pop
call
cmpl
je
push
push
xor
rol
push
or
not
add
add
sub
dec
rol
pop
inc
pop
push
add
pop
push
push
dec
dec
dec
shl
pop
call
cmpl
je
push
push
dec
lea
push
push
pop
add
add
sub
dec
sub
xor
pop
inc
ror
xor
pop
push
rol
pop
push
push
push
push
push
lea
push
call
popf
add
arpl
add
mov
add
add
add
gs
add
add
out
add
add
jecxz
add
mov
add
lcall
add
add
out
mov
add
test
push
xchg
add
add
sub
pop
call
push
push
call
lret
outsl
pop
add
test
jecxz
add
xchg
push
incb
add
mov
lret
js
add
in
test
add
jb
gs
xchg
mov
add
add
std
jmp
add
jge
add
add
cmpsb
ja
xchg
sub
pop
cmpl
je
push
push
shr
inc
add
push
and
add
sub
sub
sub
add
inc
xor
pop
pop
push
push
push
push
push
push
push
call
mov
jle
cwtl
add
jl
add
mov
add
add
mov
add
add
xchg
incb
add
lcall
add
add
jnp
xchg
mov
in
in
lcall
call
push
push
call
push
xchg
test
push
mov
fwait
add
add
into
popl
mov
add
mov
hlt
in
add
add
movsl
movsl
scas
mov
outsl
jecxz
push
add
cmpl
je
push
push
sub
xor
push
or
inc
add
add
sub
rol
shr
add
pop
xor
rol
rol
xor
pop
push
lea
push
lea
push
lea
push
call
add
add
xchg
repnz
mov
mov
add
je
jns
addb
jno
clc
add
ja
pop
add
push
add
mov
mov
mov
in
lock
lcall
call
push
sub
sub
shr
not
pop
cmpl
je
push
push
shl
push
sub
add
dec
sub
ror
ror
not
pop
rol
inc
ror
xor
pop
push
inc
inc
ror
pop
push
push
xor
pop
call
push
ror
inc
sub
sub
pop
cmpl
je
push
push
add
ror
lea
push
or
inc
add
sub
add
sub
rol
add
pop
sub
add
pop
push
rol
add
pop
push
push
shl
dec
sub
pop
call
push
lea
xor
shr
xor
pop
cmpl
je
push
push
ror
sub
add
push
and
add
shl
add
sub
not
ror
not
pop
rol
sub
pop
push
lea
push
push
push
push
push
push
call
loop
jb
jle
add
loop
jo
jbe
add
mov
add
lods
jnp
add
mov
add
mov
hlt
xchg
lods
jnp
add
test
xlat
test
push
lahf
sar
pop
ljmp
pop
push
push
ror
pop
call
push
lea
sub
dec
pop
cmpl
jne
mov
push
shl
pop
movl
push
push
call
add
add
add
loop
add
aad
add
jo
xchg
in
add
add
cmpsb
add
test
jo
iret
rorl
fnsave
add
add
loopne
in
clc
pop
jmp
push
push
lea
push
push
push
push
push
lea
push
push
lea
push
call
jno
ja
fadds
outsl
add
jbe
ja
add
mov
hlt
ficomps
mov
add
add
add
mov
add
sub
pop
xor
pop
push
lea
push
push
push
push
lea
push
lea
push
push
lea
push
lea
push
call
pop
rcr
mov
jne
xchg
mov
add
lock
push
test
add
roll
xchg
add
test
lahf
bound
add
popf
cmpsb
add
outsl
add
fiaddl
stc
aad
imul
push
xor
pop
pop
push
add
pop
pop
push
lea
push
push
push
push
push
push
push
push
push
call
push
add
add
iret
cld
add
add
outsl
add
jne
add
insb
je
mov
push
fisubs
in
add
add
jbe
add
add
lcall
push
sub
inc
shl
pop
ret
push
push
push
push
push
call
outsl
add
lods
xchg
add
mov
lds
test
mov
pushf
adcl
insb
pop
jae
add
pop
sub
pop
mov
push
push
lea
push
push
push
call
add
mov
add
add
insb
call
add
add
add
imul
xchg
loop
xchg
mov
in
jne
pop
add
pop
add
lret
xchg
arpl
push
stc
in
add
xlat
test
sti
add
out
add
in
pop
add
push
pop
cmpl
jne
push
push
rol
push
or
inc
add
shr
add
sub
rol
sub
add
inc
pop
add
pop
push
push
push
push
push
push
push
call
test
pop
add
mov
push
mov
add
je
iret
hlt
add
xlat
jno
mov
testl
add
lock
fs
add
add
lea
in
in
pushl
push
push
push
push
push
push
push
push
push
push
call
rcr
add
mov
add
mov
icebp
in
push
popf
fdivl
mov
xlat
shlb
sbb
out
add
push
clc
mov
add
movsl
hlt
mov
jecxz
lds
data16
pop
mov
movsl
add
popa
mov
add
out
sub
add
pop
push
push
push
lea
push
call
jae
add
jo
add
xlat
jbe
add
add
add
jne
jnp
add
push
mov
add
out
popa
insb
add
add
add
add
enter
repnz
int
lock
add
fdivrl
leave
add
add
jae
add
sub
pop
call
jmp
push
lea
push
lea
push
push
push
push
push
push
push
push
call
add
cld
data16
testb
pop
pop
pop
pop
add
push
add
xchg
add
je
add
add
hlt
xchg
add
adcl
sub
pop
cmpl
jne
mov
push
dec
inc
pop
call
push
lea
push
push
push
lea
push
push
call
add
rolb
add
pop
add
add
nop
pop
push
jmp
out
mov
jne
iret
add
jecxz
add
jnp
loopne
stc
lods
aam
fistl
ret
push
inc
pop
jmp
push
lea
push
lea
push
push
push
lea
push
push
push
lea
push
call
clc
mov
or
in
jb
cwtl
bound
add
int3
into
add
cld
add
add
fiaddl
addb
add
mov
mov
in
fdivr
lcall
jge
add
test
add
push
push
rol
lea
rol
push
sub
add
rol
shr
sub
add
ror
sub
pop
sub
not
pop
push
lea
push
push
push
push
push
push
push
call
add
pop
add
lret
scas
fldl
jb
add
out
mov
scas
add
lcall
mov
mov
bound
push
addb
jecxz
add
add
mov
add
push
cli
rcr
les
aam
cmpsb
mov
in
loopne
pushl
call
push
lea
push
push
lea
push
push
push
lea
push
push
push
call
fiadds
add
mov
push
lods
xlat
xchg
je
add
add
call
aad
lock
repnz
add
add
add
add
add
stc
jbe
cld
push
mov
mov
push
mov
out
add
add
stos
nop
add
in
sub
pop
push
push
push
lea
push
push
push
call
loopne
jnp
mov
mov
push
xchg
add
cmpsl
imul
leave
add
pop
add
fsubp
add
pusha
jle
addw
add
jae
push
stos
addl
pop
jns
test
pop
call
push
dec
pop
jmp
cmpl
je
push
push
push
call
imul
stos
fstps
push
add
cmpsl
push
xchg
cwtl
lret
mov
mov
testl
in
mov
sub
pop
cmpl
jne
mov
push
add
not
pop
mov
push
push
shl
rol
not
pop
jmp
push
push
lea
push
or
inc
add
ror
add
sub
rol
shl
add
pop
lea
shr
shr
pop
push
push
lea
push
push
push
call
arpl
add
add
add
push
arpl
push
add
add
out
xchg
mov
out
add
add
cwtl
add
add
fiaddl
popf
int3
out
popa
add
cmc
ja
add
push
aad
fwait
test
in
mov
mov
ja
xchg
imul
add
jne
push
push
push
lea
push
lea
push
push
call
add
add
add
fs
hlt
add
add
pushf
not
add
filds
mov
add
insb
add
sub
pop
call
push
lea
push
lea
push
lea
push
lea
push
push
push
push
push
lea
push
call
xchg
hlt
mov
sarl
fnstcw
push
add
xlat
roll
add
movsl
add
add
mov
mov
lcall
shrb
cs
xor
add
sub
dec
ror
sub
add
inc
pop
inc
not
pop
push
add
xor
pop
pushl
push
not
pop
call
push
sub
rol
pop
call
push
push
add
sub
push
or
inc
add
sub
dec
sub
dec
sub
inc
pop
add
rol
ror
dec
pop
push
ror
pop
pushl
push
not
ror
sub
not
pop
call
push
lea
push
push
call
imul
rolb
movsl
pop
fildl
loop
shll
add
popf
jne
add
mov
int3
nop
iret
xchg
add
add
ja
std
add
out
add
out
mov
add
lret
add
add
mov
add
add
fldt
xlat
lret
sub
pop
call
push
push
rol
push
or
not
add
sub
sub
add
rol
dec
sub
pop
rol
shl
ror
pop
push
push
push
call
jnp
hlt
jbe
xchg
pop
loope
jb
add
int3
into
cmpsb
in
add
add
cltd
lret
add
add
jnp
pushf
add
add
add
rclb
addl
add
add
aam
sub
pop
pushl
push
rol
pop
call
push
push
push
push
push
push
push
push
push
push
call
add
add
add
add
push
add
add
shr
iret
add
add
cwtl
add
add
add
ret
add
shlb
outsl
xchg
push
cmpsb
jne
add
iret
enter
fdivr
lcall
shrb
movsb
fcompl
xlat
rol
push
or
not
add
sub
add
shr
sub
lea
pop
sub
dec
shr
pop
push
lea
sub
sub
pop
pushl
call
push
shl
pop
call
push
push
rol
xor
add
push
xor
add
shr
sub
sub
not
pop
shl
inc
xor
shl
pop
push
push
push
push
call
jno
shlb
add
push
jns
add
cmc
jge
add
rolb
in
add
test
lret
jno
add
mov
je
movsb
pusha
test
fwait
mov
add
jle
add
mov
loopne
in
lock
lcall
jne
push
lea
push
push
push
push
lea
push
push
push
push
push
call
mov
fnstenv
add
add
push
icebp
loop
jmp
negb
add
ljmp
mov
mov
add
add
test
add
push
add
add
add
add
movb
pop
call
push
ror
shl
ror
shl
pop
call
push
push
dec
xor
sub
push
push
pop
add
add
ror
sub
add
rol
pop
rol
add
rol
pop
push
push
call
mov
mov
add
popl
add
shr
mov
add
add
push
mov
jle
jl
mov
pop
add
push
movsl
add
add
push
sahf
pop
bound
add
cmc
xchg
xchg
fildl
movsb
lcall
add
mov
pop
pushl
push
lea
rol
pop
call
push
lea
push
lea
push
push
lea
push
lea
push
lea
push
call
add
popa
rcll
stc
mov
mov
mov
add
add
add
add
xchg
add
into
pop
scas
out
add
push
add
xchg
add
rcrb
xchg
add
mov
rol
add
add
mov
add
pop
out
arpl
call
push
push
rol
rol
sub
push
push
pop
add
not
sub
rol
sub
inc
xor
not
pop
not
shl
shl
pop
push
shl
rol
shl
ror
pop
pushl
call
push
push
lea
push
lea
push
call
add
popa
mov
xchg
add
add
add
fsincos
loopne
popa
jne
cmpsb
jle
add
jnp
mov
fisubs
addr16
add
cmc
mov
js
repnz
mov
add
add
lcall
shrb
cli
into
or
add
not
sub
inc
shr
sub
shl
lea
pop
xor
add
sub
not
pop
push
push
push
lea
push
push
lea
push
push
lea
push
call
add
add
add
add
mov
mov
mov
jmp
test
add
data16
add
add
pop
add
jecxz
call
iret
pusha
xchg
jae
add
filds
popf
add
mov
add
add
mov
in
loopne
lcall
jne
call
push
push
push
lea
push
lea
push
push
push
push
call
sarl
add
add
mov
jo
fidivs
ror
fwait
add
add
add
add
stos
add
je
sub
pop
call
push
push
ror
push
sub
add
xor
sub
ror
pop
add
sub
xor
pop
push
sub
pop
pushl
call
push
push
call
add
add
mov
in
les
stc
add
add
add
mov
add
add
add
push
mov
mov
xchg
sti
pop
add
push
sbbl
xchg
lods
xchg
test
xchg
mov
add
add
push
sub
pop
lea
push
lea
dec
pop
push
push
dec
ror
pop
call
push
push
dec
push
push
pop
add
not
sub
add
pop
dec
shl
shl
pop
push
push
lea
push
push
push
push
push
push
push
call
jae
add
jns
mov
add
stos
mov
movsb
roll
add
pusha
int3
pop
pop
mov
arpl
push
add
in
fcompl
jne
push
lea
push
push
push
lea
push
push
push
call
ret
out
add
cltd
add
add
add
mov
add
add
push
repnz
jns
mov
addl
in
in
call
push
sub
rol
rol
shl
pop
call
push
push
not
shr
push
xor
add
shl
ror
sub
lea
pop
not
pop
push
push
lea
push
lea
push
lea
push
push
lea
push
push
push
call
xchg
test
mov
fstl
in
add
mov
in
andb
add
lds
lea
add
add
rolb
jne
add
xchg
loope
add
in
add
out
add
mov
rorl
push
roll
xchg
movl
rcrb
jno
fs
pop
pushl
push
add
lea
sub
pop
call
call
push
push
rol
lea
push
sub
add
add
shl
sub
inc
add
shr
pop
add
pop
push
lea
push
lea
push
push
lea
push
call
add
push
add
mov
add
lcall
ljmp
add
add
add
lcall
mov
lret
mov
out
mov
pop
add
add
add
fnstenv
add
in
lcall
jne
push
push
push
push
lea
push
push
call
add
stos
add
fistps
mov
repnz
rcrl
push
mov
cmpl
in
add
lds
fidivrl
add
add
scas
add
add
add
add
add
add
idivl
mov
mov
add
add
lahf
leave
add
int3
mov
in
call
call
push
push
lea
push
push
push
push
push
push
push
call
stos
add
pop
add
arpl
add
mov
addr16
add
add
loopne
push
mov
add
xchg
add
mov
lcall
shrb
push
test
push
shl
dec
push
push
pop
add
shr
add
sub
add
pop
xor
pop
push
not
pop
pushl
push
lea
push
push
lea
push
lea
push
call
movsl
loopne
jmp
xchg
arpl
sbbb
add
add
add
clc
lea
clc
imul
add
nop
add
jns
add
add
add
rcr
test
incb
loop
push
in
pop
jecxz
mov
mov
mov
mov
loope
add
add
repnz
pop
call
push
push
sub
add
push
xor
add
ror
lea
sub
sub
ror
pop
ror
ror
pop
push
push
shr
sub
ror
push
or
not
add
lea
sub
ror
add
not
pop
dec
pop
push
lea
push
push
lea
push
lea
push
lea
push
lea
push
push
call
push
jmp
jle
movsb
fldenv
add
shl
stc
out
mov
add
pop
push
pusha
pop
cwtl
add
add
lret
add
int
jge
xchg
mov
add
mov
add
sahf
pop
in
cltd
add
icebp
fiaddl
sti
mov
fistl
jp
add
rclb
xlat
fdivrl
lea
push
lea
push
push
push
push
push
push
push
call
add
add
push
stos
add
pop
stos
fwait
lea
mov
add
popf
add
add
mov
xchg
lds
popf
mov
movsb
rol
lea
add
push
add
add
add
outsl
mov
xchg
add
jmp
out
rolb
pop
add
add
in
fdivr
lcall
push
add
add
pop
dec
jne
call
push
shr
pop
mov
push
lea
push
push
push
call
add
xchg
test
add
add
hlt
pop
movl
addb
add
add
xlat
pushf
mov
add
addl
add
mov
in
lock
lcall
add
lea
xor
pop
lea
push
push
ror
shr
ror
push
or
not
add
shl
ror
ror
dec
sub
sub
pop
rol
shr
pop
push
sub
sub
pop
pushl
push
rol
pop
call
push
push
push
lea
push
push
push
push
push
push
push
call
add
test
mov
ja
outsl
test
add
mov
cwtl
nop
add
js
addb
pop
add
lret
add
add
add
mov
xorb
leave
push
mov
add
lods
into
pop
xchg
rolb
add
mov
xchg
add
jb
mov
add
xchg
sahf
sub
pop
push
push
xor
pop
call
push
push
inc
shl
shl
push
or
not
add
inc
lea
sub
xor
pop
shr
pop
push
add
add
shr
pop
pushl
call
push
push
push
push
push
lea
push
push
push
push
call
add
push
add
sar
movsb
add
into
add
add
stc
cmpsl
add
lcall
leave
popl
out
mov
scas
std
mov
lea
add
iret
fwait
push
roll
mov
mov
jecxz
mov
cld
nop
sub
pop
call
push
push
push
call
mov
iret
insb
mov
mov
leave
test
clc
pop
add
aam
push
addl
mov
add
lods
lcall
hlt
add
push
add
add
add
mov
xchg
add
jmp
in
hlt
lcall
inc
cld
push
shl
pop
lea
push
push
add
shr
push
or
not
add
shr
rol
inc
add
sub
pop
shl
shl
pop
push
shl
lea
shl
xor
pop
pushl
call
push
lea
push
push
push
call
push
add
add
add
pop
pop
push
movsl
add
add
add
aad
int
push
enter
pop
mov
add
add
jns
icebp
cli
add
jge
add
loopne
add
mov
filds
in
lock
lcall
add
push
push
call
add
add
bound
cwtl
add
add
add
testl
add
mov
add
mov
jns
jbe
jle
outsl
add
pop
je
add
mov
fiaddl
stc
je
add
push
jle
leave
add
mov
add
jae
sub
pop
push
push
push
push
push
push
call
int
jb
jnp
addl
jmp
fidivrl
clc
jmp
add
lret
add
mov
add
add
jge
jno
pop
mov
add
add
mov
mov
add
fs
test
mov
add
sahf
std
add
add
xchg
add
fldl
add
push
push
push
lea
push
push
call
add
add
push
add
mov
mov
add
clc
jo
popf
scas
arpl
add
jecxz
add
push
repnz
mov
out
pushf
js
popf
mov
fiaddl
add
xchg
bound
pushl
push
push
dec
dec
push
sub
add
add
sub
sub
add
add
pop
dec
pop
push
push
lea
push
push
push
push
call
add
jns
orb
add
lahf
add
lret
pop
jno
pop
aam
mov
ljmp
add
push
aam
int
add
mov
push
add
add
test
add
add
add
lcall
add
add
pop
data16
arpl
mov
lcall
push
add
pop
call
push
push
sub
dec
add
push
xor
add
shl
add
not
sub
rol
pop
dec
pop
push
push
call
xchg
push
add
ret
int3
iret
add
insb
add
push
call
nop
pop
mov
add
jp
add
add
mov
lcall
mov
in
add
mov
add
fucomip
cld
add
clc
lcall
jne
push
push
push
push
call
loope
in
fildl
test
add
fiadds
add
add
stos
js
lock
jae
pop
jp
cwtl
add
mov
cltd
xchg
add
add
add
cmc
add
add
add
aam
divl
test
add
add
add
mov
add
mov
add
push
sahf
sub
pop
call
push
push
push
push
push
lea
push
lea
push
call
pop
mov
add
jle
cld
ret
movsb
add
test
lock
add
add
cwtl
add
add
jbe
into
mov
in
lcall
call
mov
sbb
push
add
add
add
scas
add
add
xor
ljmp
add
mov
out
pop
add
mov
out
jbe
iret
clc
movsl
nop
cmpsl
xchg
cmpsl
aad
add
fwait
xchg
testl
aam
add
jo
add
sub
lcall
shrb
dec
aam
push
dec
sub
push
and
add
lea
inc
sub
sub
dec
pop
shl
shr
lea
rol
pop
push
not
dec
xor
pop
pushl
call
push
push
push
push
push
call
mov
push
push
enter
jno
mov
addb
add
mov
sahf
leave
add
add
jl
pusha
push
add
jns
in
push
sub
pop
call
push
ror
shr
pop
pushl
push
push
push
push
push
lea
push
call
add
add
add
lea
add
lock
add
push
in
jne
mov
sbbl
clc
pusha
pop
movsb
add
mov
add
add
mov
int3
add
aam
loope
add
std
imul
outsl
mov
movsl
add
add
add
mov
push
ror
pop
jmp
push
push
push
or
not
add
inc
sub
lea
shl
sub
pop
xor
ror
not
pop
push
push
lea
push
call
add
mov
add
xchg
add
loopne
mov
pop
scas
push
mov
add
mov
sti
add
addr16
cltd
ljmp
add
stos
add
add
cltd
ja
lock
add
pop
add
cld
add
jne
push
push
push
call
addb
insb
add
add
add
add
scas
movsl
in
add
jp
add
enter
add
clc
mov
xchg
addl
add
cmc
add
add
hlt
lcall
sbb
add
push
lea
lea
xor
pop
push
call
push
push
add
inc
not
push
xor
add
not
add
sub
shl
add
xor
pop
dec
pop
push
add
pop
pushl
push
push
call
jecxz
jmp
add
test
add
gs
add
add
pop
add
add
add
add
pop
xchg
mov
add
fcmovu
movsl
pop
arpl
js
in
clc
lcall
jp
add
push
push
push
push
push
push
push
push
push
push
call
push
shl
jns
add
cwtl
iret
fsubs
add
gs
add
fildl
xchg
cli
add
jnp
sub
pop
call
push
sub
sub
pop
leave
push
lea
pop
add
push
add
shl
pop
pop
pop
push
not
pop
pop
push
push
push
call
add
cli
stos
xchg
push
pop
scas
fidivl
add
out
push
mov
roll
add
fsubrl
add
ret
xchg
add
xchg
add
aad
subb
popa
jmp
lcall
rclb
lea
push
push
call
xchg
out
ja
mov
cltd
add
test
add
shl
xlat
mov
add
cli
pop
mulb
mov
lcall
imul
add
add
int
add
jmp
xchg
enter
xchg
movsb
sbbl
jle
in
lock
inc
push
sub
pop
ret
push
add
not
rol
pop
leave
push
sub
pop
ret
push
push
lea
push
lea
push
push
push
push
lea
push
call
rcr
ja
add
push
mov
lds
addb
add
add
loopne
add
lcall
push
add
cld
lahf
gs
fdivrp
mov
outsl
data16
push
out
rolb
jl
jb
data16
rcr
add
mov
ja
push
cli
mov
xchg
xchg
add
mov
loopne
push
push
sub
pop
mov
cmpl
jne
push
push
push
push
push
push
lea
push
push
call
xchg
cmpsb
xlat
add
jle
lret
fiaddl
add
push
add
roll
xchg
add
sti
jp
test
push
leave
lods
fstpt
add
push
mov
into
rolb
shlb
fiadds
add
aam
test
inc
and
push
push
push
lea
push
call
add
add
pop
mull
out
add
add
lock
xchg
sti
add
into
lods
lods
jp
out
add
lcall
outsl
xchg
add
lods
jle
mov
arpl
add
add
cmpsb
arpl
insb
add
aam
sub
pop
jmp
mov
push
inc
not
pop
and
push
lea
push
push
push
push
push
push
lea
push
push
push
call
add
insb
stos
xlat
add
aam
out
lahf
xlat
jno
int
add
lea
scas
add
add
pop
in
add
out
jmp
aam
mov
ja
shrl
test
push
add
sahf
fisubrs
add
add
add
sub
pop
xor
push
push
call
add
hlt
lret
add
add
test
test
pusha
add
add
add
mov
mov
jmp
mov
pushf
lea
pop
add
push
je
hlt
pop
cwtl
imul
add
jb
add
add
fimull
add
std
sub
pop
xor
push
sub
inc
pop
add
xor
push
push
push
call
add
lcall
shlb
ja
jge
roll
int3
in
pop
add
movsl
fs
add
jl
loopne
mov
mov
lcall
fidivrl
mov
add
add
sub
pop
dec
push
push
push
push
push
push
push
push
call
jnp
negl
stos
xchg
mov
loopne
addb
mov
add
add
add
jp
shll
gs
add
add
out
sahf
cli
add
add
add
lcall
jmp
push
push
lea
push
push
push
push
lea
push
lea
push
push
push
call
cwtl
push
cmpl
add
add
and
add
popf
add
add
jns
leave
sub
pop
jmp
sub
push
dec
pop
pushl
push
ror
shl
lea
inc
pop
pop
sub
push
push
push
push
lea
push
lea
push
call
xchg
in
mov
add
popf
add
push
jbe
hlt
stc
mov
add
add
add
fwait
add
xchg
icebp
out
ja
add
jp
lcall
xlat
stc
add
mov
add
out
add
fwait
popa
mov
add
movsl
popf
insb
in
call
cmp
jne
push
lea
push
push
call
test
xchg
add
in
jns
pusha
lods
add
add
movsb
fldl
add
add
scas
add
add
out
gs
push
add
lret
add
stc
in
add
add
lds
movb
add
loopne
pop
lock
pop
out
add
add
push
xchg
add
enter
push
lea
push
push
push
push
lea
push
push
call
les
add
test
add
add
lcall
add
add
add
mov
mov
add
jl
add
mov
mov
add
xchg
cwtl
lea
add
add
test
add
movl
enter
cmp
shrb
int3
pop
sub
mov
push
push
push
push
push
push
push
push
call
fldcw
std
add
loopne
aam
out
roll
push
add
add
add
add
mov
call
add
popf
pop
add
in
mov
pop
sub
pop
shr
push
push
call
mov
add
add
lret
mov
movsb
xchg
add
mov
add
sub
push
mov
loopne
add
rcr
push
add
add
pop
xchg
pop
mov
lock
mov
mov
jns
mov
push
add
icebp
add
testl
lahf
shrb
push
xchg
mov
stos
sub
pop
add
push
lea
push
push
push
push
push
push
call
add
in
out
test
add
add
add
out
add
mov
sti
mov
add
jne
add
add
popf
fadds
jmp
push
lea
push
call
aam
add
fiadds
mov
add
add
stc
add
divl
add
lds
add
ficoml
add
add
add
jno
add
out
mov
leave
stc
test
filds
xor
fistps
push
push
push
push
call
mov
addb
xchg
xchg
pop
add
add
push
pop
in
add
data16
rcl
enter
ja
in
lock
shr
push
xor
not
pop
and
sub
push
add
add
pop
cmp
jne
push
push
push
push
push
push
push
push
push
call
fmul
add
mov
incb
add
pop
andl
mov
sahf
pushf
ja
add
push
out
add
xchg
add
add
incb
add
addl
scas
scas
push
lea
repnz
add
add
add
rolb
sub
pop
leave
ret
push
shl
add
add
sub
pop
push
push
rol
pop
mov
add
push
push
push
call
add
add
add
xchg
pop
add
cli
fsubrl
cmc
add
add
mov
mov
flds
mov
in
jl
addr16
outsl
pop
jne
icebp
push
sbb
cltd
jge
add
pop
out
xchg
cmpsl
add
clc
add
test
in
test
add
add
lcall
push
push
push
call
add
add
lods
loope
fiaddl
add
add
jnp
andb
xchg
in
rcr
mov
filds
add
lcall
push
lea
inc
add
xor
pop
push
push
push
pop
mov
push
lea
push
push
push
lea
push
push
lea
push
call
add
jle
add
enter
add
cmpsl
popa
scas
test
add
xchg
filds
add
mov
test
sti
out
sub
pop
lea
sub
push
push
call
add
stc
mov
add
aam
add
add
mov
stos
int3
add
add
pop
add
clc
lcall
adc
fwait
pop
adc
push
push
push
push
push
push
push
call
loopne
add
int3
add
int3
add
add
jne
sub
mov
add
add
add
mov
add
xchg
lret
add
jae
icebp
add
shl
pop
add
mov
add
aad
shlb
fiaddl
int
js
push
cwtl
add
add
ret
sub
pop
shr
push
shr
pop
add
mov
push
add
pop
add
push
sub
add
pop
mov
push
push
push
lea
push
push
push
push
lea
push
lea
push
call
stos
jge
cld
sahf
add
cli
add
push
add
add
add
add
add
add
lcall
add
iret
int
imul
sub
pop
add
push
lea
dec
add
pop
xor
mov
push
lea
push
push
lea
push
push
call
iret
cmp
stc
add
add
popf
add
add
xlat
xlat
mov
mov
xchg
fmuls
sub
pop
and
rol
push
push
lea
push
lea
push
push
lea
push
push
push
push
call
ja
iret
bound
add
data16
testb
xchg
mov
add
add
add
add
add
test
add
filds
lds
add
in
add
in
fdivr
lcall
rolb
lea
pop
xor
push
ror
pop
inc
push
push
call
fisttpl
jne
add
add
mov
add
rolb
add
out
jb
add
xchg
add
pop
int
add
iret
add
test
add
add
ja
lea
add
jne
xchg
lret
mov
in
add
add
add
cmp
jne
push
add
shr
pop
add
push
xor
ror
pop
cmp
je
push
inc
add
add
pop
add
push
push
lea
push
call
add
loop
pusha
mov
fwait
push
add
mov
add
xchg
fnstcw
mov
mov
add
mov
lcall
push
jae
pusha
add
out
js
cltd
add
insb
mov
sub
pop
cmpl
jne
push
not
pop
xor
push
lea
push
push
call
add
mov
mov
add
add
jp
cmpsl
cld
add
mov
add
mov
out
imul
push
add
addl
add
popl
add
add
fs
pop
pop
pop
push
push
lea
push
lea
push
push
push
push
push
lea
push
push
call
shr
imul
jle
add
add
jno
xchg
add
imul
add
sarl
shll
mov
mov
addr16
shr
mov
add
xchg
cmpsl
std
add
sahf
sahf
add
mov
add
pushf
mov
mov
mov
ljmp
lcall
push
rol
add
shr
pop
pop
push
add
pop
pop
push
lea
pop
leave
ret
push
not
pop
mov
push
xor
add
pop
add
mov
push
push
push
push
push
lea
push
push
lea
push
push
push
call
add
add
test
add
ret
add
add
mov
pop
add
cmc
add
call
add
jb
add
mov
add
add
mov
add
incb
jmp
in
add
cli
loop
imul
add
sub
pop
cmpb
push
push
push
lea
push
lea
push
push
call
add
xchg
imul
add
jb
add
test
add
mov
jge
add
lods
addr16
pop
push
arpl
add
add
lcall
scas
sar
push
push
call
xchg
scas
add
in
scas
add
add
jmp
roll
jp
add
je
flds
add
cli
fiadds
insb
test
mov
aam
sahf
mov
add
in
clc
lcall
push
push
push
push
push
call
add
add
icebp
imul
add
sti
xchg
add
add
add
add
addl
add
mov
xlat
mov
add
mov
add
in
add
outsl
ljmp
pop
sub
add
in
pop
call
xor
push
lea
push
push
push
push
lea
push
push
call
add
stc
add
jbe
rcrl
add
push
scas
add
into
mov
add
add
add
movsl
rcrl
mov
add
cmpsl
int3
pop
jne
enter
test
pop
push
lea
pop
pop
pop
push
lea
push
push
lea
push
push
call
add
add
mov
add
add
add
add
xlat
test
ljmp
add
add
add
repnz
ret
add
outsl
cltd
scas
shll
push
sub
pop
pop
pop
push
push
push
push
lea
push
call
add
push
mov
lods
loope
add
add
cltd
loopne
mov
add
ljmp
fisubrs
add
push
in
add
add
jae
jmp
scas
add
ja
push
xlat
lock
add
push
xchg
add
add
lcall
push
push
push
push
lea
push
push
push
push
lea
push
call
fbstp
int3
add
jmp
insb
lods
mov
xlat
fstps
roll
loopne
mov
push
mov
pop
pop
mov
add
mov
in
xchg
stos
lahf
ja
filds
add
add
test
add
add
lahf
jbe
pushf
sbbb
nop
jbe
out
addl
cltd
in
gs
pop
ret
push
shl
sub
xor
pop
push
push
push
push
call
filds
push
popl
lret
add
add
add
add
xchg
test
test
call
int3
mov
sti
mov
add
pop
mov
add
push
lea
push
push
lea
push
push
call
mov
xchg
push
jp
add
mov
add
add
mov
add
add
shr
arpl
cmpsl
jbe
add
jb
nop
add
fldl
add
rcr
rolb
add
push
test
roll
in
in
in
lcall
push
lea
push
lea
push
push
lea
push
push
push
lea
push
push
call
andl
mov
in
out
out
add
imul
cld
scas
add
add
repnz
movsl
loope
stos
mov
addb
mov
in
fcompl
push
push
push
call
in
rolb
imul
roll
insb
mov
into
add
popa
into
add
out
out
hlt
jno
movsl
ljmp
in
fistl
add
xchg
add
add
in
mov
shlb
fcomi
add
sub
pop
push
push
lea
push
lea
push
lea
push
push
lea
push
push
call
add
sti
add
icebp
test
jp
add
sbbl
loop
add
add
mov
sub
pop
mov
push
not
pop
push
pop
push
push
call
negb
jmp
jle
clc
jmp
loopne
xlat
add
mov
push
cmc
add
jnp
add
ljmp
test
les
lock
add
add
fiaddl
ficompl
add
ljmp
add
add
add
jecxz
in
clc
lcall
push
cmp
ljmp
rol
pop
shr
push
shr
not
pop
add
mov
push
lea
push
lea
push
push
push
lea
push
call
filds
pop
add
iret
add
movsl
add
add
arpl
into
add
imul
mov
adc
add
fcos
jae
push
push
push
push
call
fstpl
xlat
add
lcall
jns
ret
lock
pusha
mov
add
mov
add
jmp
sub
pop
popl
push
push
push
lea
push
lea
push
call
aam
divl
in
add
cmc
add
add
imul
test
mov
mov
cld
bound
add
nop
mov
add
icebp
add
stos
add
add
pop
add
sub
pop
mov
push
inc
add
ror
pop
add
push
push
push
lea
push
push
lea
push
lea
push
push
lea
push
push
call
cltd
pusha
shlb
add
pop
lahf
out
je
out
add
test
outsl
testl
add
mov
lods
mov
add
notb
mov
adc
lea
push
push
push
push
push
push
call
sti
aad
mov
arpl
add
out
cmc
add
popf
js
add
push
pop
add
mov
mov
in
loopne
lcall
adc
mov
push
push
lea
push
call
insb
pop
out
add
jno
add
add
add
xchg
add
add
mov
jp
clc
push
add
rol
fwait
jl
js
add
xlat
testb
add
add
mov
lea
mov
pop
add
push
push
call
add
mov
add
cli
xchg
jecxz
popa
add
add
stc
add
popf
fxch
addb
in
imul
lret
cmpsb
mov
mov
addb
enter
jno
jp
add
add
add
clc
lcall
rclb
pop
rol
push
add
lea
dec
xor
pop
nop
push
lea
push
push
push
lea
push
push
lea
push
call
arpl
mov
mov
jle
add
imul
mov
stos
fwait
jno
pushf
add
out
leave
push
incb
add
scas
rolb
add
gs
add
add
ret
add
add
lcall
push
push
lea
push
push
push
lea
push
call
add
add
add
testb
cmpsl
sbb
add
add
ja
cltd
stc
test
add
into
mov
mov
mov
stos
add
call
push
call
cli
fcompl
aam
add
add
nop
xchg
addr16
xchg
bound
xchg
add
int3
pop
jge
xlat
fcomps
jmp
mov
out
jge
add
mov
add
xchg
loopne
add
mov
add
mov
clc
add
push
jge
sub
pop
nop
push
push
push
call
test
add
mov
loop
mov
ret
add
frstor
sahf
mov
jnp
mov
ja
scas
add
add
icebp
lds
add
add
xchg
inc
add
add
rolb
lcall
inc
push
push
push
push
push
push
push
push
call
jp
push
jle
pop
cmc
pop
into
mov
popa
pusha
push
mov
add
add
jns
aam
add
cli
aad
add
mov
lret
popl
test
add
add
sub
pop
nop
push
add
not
not
pop
nop
push
shr
not
shr
not
pop
cmpb
jne
push
push
push
push
lea
push
push
push
push
push
call
add
add
xchg
add
add
add
jecxz
pop
lods
popl
add
fiadds
xlat
add
hlt
jmp
mov
cli
add
addl
add
pop
add
testb
add
stc
jp
enter
add
add
xchg
add
add
jecxz
xchg
add
lcall
inc
pop
ss
push
sub
rol
ror
not
pop
nop
nop
push
inc
pop
cmp
je
nop
push
shr
ror
shl
pop
nop
push
lea
push
push
lea
push
call
js
test
lahf
aam
movsb
xchg
pop
add
into
add
add
add
xchg
add
out
mov
fs
test
mov
add
add
add
add
push
jmp
pop
inc
push
push
push
push
push
lea
push
push
lea
push
push
lea
push
call
add
clc
fs
cmpsb
jae
xchg
add
stos
jecxz
lea
lret
add
add
aad
add
pop
out
idivb
add
leave
add
jmp
mov
fsubrl
into
add
xchg
popa
xchg
add
pop
cmpsb
popf
out
mov
enter
imul
push
pop
cmp
jb
xor
push
shl
sub
dec
dec
pop
jmp
push
push
push
push
push
lea
push
call
push
shrb
nop
test
mov
mov
rcl
mov
test
add
push
jecxz
add
add
out
add
loopne
add
sub
pop
mov
add
push
lea
pop
movzwl
push
inc
xor
lea
pop
mov
push
sub
pop
add
push
ror
pop
mov
push
add
sub
pop
xor
push
push
push
push
push
push
lea
push
push
lea
push
call
mov
add
pop
mov
fcompl
add
push
rorb
add
add
test
add
add
mov
test
aad
addb
nop
add
loopne
shl
pop
shl
xor
push
lea
pop
shl
push
dec
dec
sub
pop
xor
push
push
push
lea
push
push
push
push
push
push
call
add
add
add
add
add
lret
cli
jge
fiaddl
add
add
lret
add
int
loope
pop
add
rol
add
jecxz
jno
add
jl
fldcw
add
std
lea
add
sub
pop
shl
xor
push
inc
pop
mov
push
inc
not
lea
pop
add
pop
push
xor
add
sub
add
pop
pop
push
shl
lea
add
pop
pop
pop
push
dec
pop
leave
push
push
lea
push
lea
push
push
push
push
call
fsts
cld
add
mov
addr16
leave
addl
pop
mov
repnz
add
cmpsl
xchg
lret
mov
ffreep
mov
cwtl
pop
xchg
add
mov
add
call
fisubrl
add
mov
in
lcall
or
push
lea
push
push
push
push
lea
push
push
push
push
push
call
pop
xchg
xchg
ja
add
push
mov
lods
add
jb
add
stos
mov
push
jo
add
jae
xchg
add
test
add
add
shll
push
add
mov
mov
sub
pop
push
push
push
lea
push
push
push
call
add
popf
pusha
idiv
add
add
mov
add
jge
mov
stc
fsubrs
popf
out
add
iret
int
add
in
push
push
lea
push
push
push
lea
push
push
push
push
push
push
call
pop
loope
jle
pop
scas
addl
nop
leave
pop
xchg
mov
add
xchg
add
add
push
enter
add
pop
push
push
xor
pop
push
push
push
push
push
push
push
call
jns
add
pop
sti
cld
rclb
xchg
add
outsl
test
xchg
add
test
mov
add
mov
mov
mov
mov
test
add
add
in
mov
roll
ljmp
pusha
add
mov
mov
lcall
dec
or
adc
mov
push
push
push
push
lea
push
call
mov
stc
arpl
jecxz
add
data16
popf
add
gs
add
outsl
add
add
ja
lret
add
xchg
add
add
add
lcall
rorb
test
or
add
cmpsb
xchg
push
call
add
out
add
bound
add
add
mov
cmc
clc
enter
add
std
xchg
push
push
mov
add
add
movsl
testl
mov
add
mov
add
add
popa
in
pop
lret
mov
hlt
lcall
testb
test
add
push
push
push
push
push
push
push
push
push
push
call
add
incb
add
add
imul
incb
add
gs
add
add
shl
cld
ret
sti
int3
mov
lret
add
fldt
lea
add
add
add
add
xchg
jbe
cld
jno
int3
push
scas
add
add
fcomps
notl
mov
push
push
push
push
push
call
cld
push
mov
xlat
jae
add
mov
mov
add
mov
out
ret
in
add
add
sti
add
xchg
fs
push
add
add
lea
jl
out
fadds
add
mov
std
add
add
xchg
lods
add
cwtl
fildl
add
enter
add
dec
or
pop
push
push
lea
push
push
lea
push
push
push
call
fcomp
addb
add
fsubrs
add
jl
pop
faddl
lods
push
sahf
enter
jbe
xchg
repnz
pop
inc
push
push
push
push
push
call
pop
nop
mov
add
jo
incb
iret
mov
sahf
add
aam
data16
add
add
add
out
shlb
xchg
cmc
mov
add
add
mov
push
add
cltd
mov
mov
add
std
add
mov
in
lcall
rorb
test
add
push
push
push
push
push
push
push
push
call
jo
add
jp
xchg
fists
test
add
add
mov
add
add
mov
pop
xchg
iret
mov
push
xchg
mov
lcall
rorb
or
add
push
push
push
push
call
add
xchg
add
mov
push
add
cli
cmpsb
mov
movsb
add
add
add
test
add
icebp
push
testb
add
je
fwait
mov
xchg
loope
xchg
negl
jns
in
lock
mov
push
shl
rol
pop
inc
cmp
je
push
push
lea
push
push
call
mov
add
add
add
fistpl
neg
mov
add
fdivr
les
add
ljmp
mov
mov
js
add
in
mov
call
add
add
cmc
loopne
icebp
sub
pop
test
jne
push
lea
push
push
call
cmpl
fisubs
loop
cld
movb
fnsave
roll
add
jns
jge
add
jae
add
mov
fs
pop
xor
pop
push
xor
inc
pop
pop
push
push
push
push
push
lea
push
lea
push
push
call
out
sahf
repnz
in
rolb
jo
js
add
out
mov
add
add
add
add
andl
add
xchg
add
fiaddl
flds
sahf
in
jge
push
push
stc
aad
add
jo
mov
ljmp
insb
push
add
add
pop
push
rol
pop
leave
push
push
push
push
lea
push
push
push
call
scas
add
movsb
add
jle
add
imul
mov
loopne
add
push
cld
add
js
add
in
add
add
lahf
pop
add
add
or
mov
push
shr
sub
pop
inc
cmp
jne
push
add
sub
inc
pop
lea
push
push
push
lea
push
push
call
add
cmpb
add
add
jge
shlb
jl
mov
int
mov
xchg
add
shrb
mov
jns
cmpsb
mov
out
nop
leave
fnsave
add
lret
mov
sub
pop
mov
test
je
push
shl
shl
add
pop
mov
push
xor
shl
pop
add
push
lea
push
lea
push
push
lea
push
push
push
lea
push
push
call
mov
add
add
fadds
add
add
mov
pop
in
add
mov
stos
add
add
add
sub
pop
cmp
jne
mov
push
push
push
push
push
push
push
lea
push
call
movsl
add
mov
je
mov
pop
mov
mov
mov
pushf
add
push
add
add
add
mov
les
stos
add
add
rorb
roll
add
push
xor
inc
pop
mov
add
push
push
lea
push
call
add
add
add
pusha
add
pop
mov
add
pop
pushf
loope
fisttps
add
fdivr
iret
xchg
add
add
add
add
add
popf
jle
pop
jl
fmulp
lea
idivl
in
hlt
pop
cmp
je
push
push
push
push
push
push
push
push
call
add
add
shl
push
shrb
mov
jne
add
mov
icebp
jge
arpl
add
xchg
add
add
push
add
add
push
mov
add
push
pop
sub
pop
jmp
push
lea
push
push
call
addl
vpshufb
xchg
add
cli
add
popa
in
std
clc
add
repnz
fcmovbe
add
add
add
mov
jbe
repnz
xchg
enter
add
fimull
add
vshufps
pop
add
sub
pop
xor
push
push
push
push
push
push
lea
push
push
call
add
add
add
mov
lahf
add
mov
add
add
mov
mov
push
into
add
push
test
ljmp
in
iret
add
in
loopne
lcall
pop
push
push
push
push
lea
push
push
lea
push
push
push
lea
push
call
jle
add
lods
aad
push
add
mov
popl
add
rol
cwtl
fcmovnbe
add
sahf
xchg
push
add
in
push
mov
subb
cmpsl
mov
add
add
jne
mov
popa
add
in
mov
sub
pop
pop
push
push
push
lea
push
push
push
call
jle
movsl
push
jp
stc
cltd
scas
xchg
stos
add
add
add
jo
lret
jmp
clc
in
sahf
pushf
lods
movsb
insb
mov
lret
add
add
addb
pop
loop
arpl
add
mov
cld
mov
add
fildll
jmp
add
in
call
lea
push
lea
push
push
push
call
jmp
mov
icebp
mov
mov
scas
mov
xchg
mov
and
pop
add
mov
mov
stos
push
imul
movsb
sub
pop
ret
lea
push
sub
ror
xor
dec
pop
pop
push
shr
sub
pop
pop
push
add
lea
pop
pop
pop
push
push
push
push
push
push
push
push
lea
push
lea
push
call
add
fcomp
shlb
lret
add
add
lods
addl
ja
mov
jl
mov
push
cli
testl
jbe
add
sub
pop
leave
push
push
push
push
lea
push
call
add
stc
add
add
add
cld
push
pop
repnz
imulb
lret
add
add
xchg
pusha
add
out
mov
jge
xchg
pop
mov
push
mov
scas
push
mov
pop
ret
push
push
push
call
add
pop
mov
add
push
int
mov
add
jnp
add
in
xchg
scas
add
add
add
add
mov
jp
pusha
add
fdivp
add
add
les
add
push
pop
add
cmpsb
lahf
popa
add
fcomip
add
lcall
push
push
push
lea
push
push
call
aam
add
add
leave
add
lea
pushf
in
xlat
add
add
add
clc
add
loopne
add
xchg
add
add
fwait
push
add
add
testb
ror
mov
push
out
sub
pop
pop
push
lea
push
lea
push
push
call
add
add
add
push
fnstenv
push
add
add
test
loop
scas
add
mov
push
push
jno
mov
push
add
data16
add
mov
rcrl
add
pop
xchg
fsub
add
mov
imul
dec
add
add
add
add
mov
xchg
insb
mov
add
stos
fwait
enter
add
add
pop
jl
pop
movsl
add
add
mov
add
add
fs
hlt
add
add
fiaddl
push
lea
push
call
fistl
add
add
popa
data16
add
add
divb
add
add
add
aad
rcl
je
add
jo
out
add
add
ret
jl
jl
add
add
mov
add
call
test
sub
pop
pop
leave
push
shr
add
pop
ret
lret
sbb
mov
scas
lret
fnstsw
scas
pushf
mov
scas
jo
mov
scas
lret
scas
mov
scas
mov
add
stc
pop
pop
notb
jns
mov
fistpll
mov
daa
divb
inc
pop
push
adc
inc
loop
lds
or
cmpsb
mov
jg
pop
xor
bound
cmc
mov
or
shrb
loopne
push
mov
subl
dec
sub
push
push
fsubp
fimull
aas
repz
cmp
mov
adc
out
push
jne
in
push
imul
dec
out
arpl
sub
roll
popa
xchg
inc
fdivrp
inc
and
arpl
mov
jg
add
jecxz
push
push
fchs
sub
sbb
xor
mov
xorb
fiadds
jno
sub
sahf
push
fimuls
and
notb
and
outsl
stos
cmpsb
imul
ljmp
mov
or
pop
inc
imulb
das
cmp
xor
loopne
call
scas
popf
aas
pop
lea
test
xchg
adc
xchg
sub
adc
movsl
push
in
fsub
rorl
scas
dec
mov
inc
shrb
xor
jge
movsl
scas
cmp
xor
jo
push
es
addr16
xchg
subb
fsts
sbb
sti
ljmp
jecxz
stos
insl
and
cmpb
adc
push
jge
adc
mov
cs
mov
mov
insl
das
das
cmp
cmp
pop
xor
popa
xchg
mov
pop
shrl
cmp
in
push
pop
or
push
push
lcall
dec
adc
fwait
out
mov
ds
adc
mov
idivb
mov
outsl
jbe
fsub
stc
data16
sbb
ljmp
fcoml
loop
insl
arpl
test
or
repnz
sbb
jo
and
dec
push
push
xchg
cmpsb
add
xor
insb
imull
int
mov
int
xchg
pushf
repnz
push
repz
sbb
js
data16
sti
inc
and
frstor
subl
xchg
and
sbb
andl
mov
call
ds
pop
cmp
push
dec
xor
out
test
cmpsl
popa
lahf
push
or
loop
mov
shlb
fildll
mov
jmp
add
pop
pop
enter
and
lods
es
in
mov
add
hlt
data16
push
mov
sbb
fmuls
mov
test
mov
sub
insb
mov
mov
ficompl
into
mull
mov
lds
jno
xor
arpl
mov
xor
and
fdivl
xchg
sub
cmpsl
mov
pop
jp
jecxz
loope
test
add
rcll
repz
enter
nop
sbbb
mov
lahf
mov
pop
clc
cmc
ret
fistpll
push
push
stc
cli
and
pusha
enter
add
xorl
dec
sahf
sbb
cmc
and
mov
dec
push
ret
xchg
mov
in
je
jno
adc
and
inc
dec
cwtl
push
loop
mov
popl
loopne
xor
lock
cltd
scas
arpl
outsl
aad
add
aam
mov
xor
test
pop
lods
inc
shrl
push
push
jmp
rolb
push
cmp
ret
aaa
aam
out
imul
dec
xor
push
push
jno
or
js
xchg
int
pop
push
cmp
add
aam
sub
xchg
xchg
faddl
stos
imul
stc
cmp
out
and
popl
enter
and
stos
mov
inc
cmpb
popa
sbb
cld
xchg
loope
test
pop
sbb
push
xchg
adc
mov
and
jae
lods
xchg
jg
int
push
sub
cmp
jo
inc
pop
xor
cmp
ret
pop
xor
arpl
and
imul
pushf
aad
out
pop
je
and
out
cs
xchg
add
pop
mov
add
mov
in
or
adc
xchg
push
xchg
xchg
je
pop
and
dec
popa
adc
sbb
cmc
mov
pop
ja
jmp
push
aad
pop
xchg
sub
popf
les
in
cmp
in
xchg
into
jno
aad
add
loop
xchg
addb
push
jno
shr
dec
enter
pop
test
mov
cmpsb
push
xlat
sub
jl
sbb
fprem
pop
ret
adc
fadds
mov
sahf
mov
or
pop
fcoms
fists
push
xor
pusha
xchg
mov
ja
jge
sbb
and
jnp
mov
loope
push
scas
bound
addr16
inc
das
stos
adc
jp
mov
dec
cmp
dec
data16
data16
and
rorb
ljmp
cmp
decl
mov
pop
ds
cli
xchg
scas
adc
sub
das
pop
out
add
mov
pop
adc
inc
andb
iret
popf
test
cmpsb
inc
push
push
push
into
jp
mov
dec
sbb
sub
jge
add
imul
lods
sbb
mov
lahf
push
lds
adc
in
pop
mov
mov
pushf
mov
ljmp
pop
or
add
cmpsl
in
cli
jbe
ret
or
sbb
out
int3
in
cltd
jo
mov
pop
xchg
stos
xor
cmc
lock
jns
mov
push
push
pop
xchg
inc
mov
pushf
sub
stc
scas
out
mov
inc
orb
or
ret
cmp
pop
or
dec
mov
fdivrp
mov
mov
sbb
sbb
and
adc
fldcw
mov
clc
cli
fimull
inc
and
sub
in
aaa
cmpsl
and
mov
push
inc
aam
int
jp
cmpsb
adc
jno
and
aaa
hlt
shll
stos
scas
push
or
test
pop
loopne
cltd
push
cmp
add
shl
mov
pop
or
fists
xchg
movsl
cmpsb
mov
out
cmp
stos
test
xchg
shrl
ja
push
dec
jb
xlat
fcom
jno
mov
js
jb
mov
enter
out
add
push
test
mov
rorl
daa
sub
call
aad
cli
cmpsb
or
test
cmpsb
outsb
add
lods
popa
fnstenv
sarb
mov
dec
push
mov
lahf
sub
jecxz
loop
add
xchg
jecxz
gs
mov
inc
mov
pop
cwtl
iret
ret
decb
mov
ret
not
in
aas
fucom
in
jg
ja
das
sti
gs
pop
xchg
aam
repz
xor
inc
push
jae
sbb
adc
cmpsl
ret
push
ljmp
scas
push
iret
pop
pushl
and
les
lahf
dec
loope
popa
test
xor
call
insl
add
add
pop
mov
jl
test
cmp
scas
and
pusha
lret
out
lods
mov
push
xchg
push
incb
leave
fucom
pop
xor
aam
rol
xor
je
arpl
xchg
dec
sbbb
stos
cli
dec
psubw
cmp
push
shrl
xchg
cmp
sub
sub
stos
cmp
out
jbe
xor
add
lods
bswap
add
mov
jbe
mov
lock
lds
push
xor
in
mov
movsl
cmpsb
dec
test
pop
push
xchg
adc
cs
neg
or
cld
jg
adc
subb
cwtl
xor
cwtl
or
xchg
pop
xchg
popl
push
std
lcall
jae
insb
mov
inc
lret
and
jle
sub
and
add
pop
and
and
lea
scas
cmp
lcall
or
pop
push
addr16
pop
fldcw
out
push
insb
in
lcall
push
arpl
test
add
shlb
fsts
insb
add
outsb
ffreep
or
adc
test
sub
adc
addr16
aad
notl
xchg
addr16
push
xor
repnz
ljmp
dec
add
mov
and
push
pop
mov
lret
sahf
inc
and
sbb
fstpt
mov
xchg
xchg
rep
cltd
xchg
sub
pop
jp
pushf
aaa
xchg
sub
jmp
or
dec
jbe
xlat
mov
and
test
push
adc
jo
rorb
out
pop
pop
sub
icebp
add
popa
mov
push
out
or
add
xchg
push
dec
mov
adc
orb
cltd
imul
add
dec
cld
mov
xchg
mov
pop
jge
or
xor
mov
xor
push
lods
test
pause
fidivrs
in
mov
loope
flds
adc
jne
sbb
jae
sub
xor
xor
push
dec
leave
cmp
int3
popa
imul
pop
jge
adc
push
lods
mov
add
repnz
pop
les
addl
mull
or
or
fndisi(8087
lcall
sbb
cmp
popf
mov
ja
pushf
icebp
scas
add
xchg
cwtl
cmp
ljmp
sub
cmp
hlt
aam
jo
nop
fs
pushf
mov
jb,pt
loopne
mov
lea
lret
addb
imul
fwait
push
sbb
adc
push
xchg
ss
dec
sahf
adc
sub
mov
sbb
movsl
in
adc
nop
xor
incl
jg
into
out
dec
and
mov
inc
loope
test
lock
ljmp
pop
lret
mov
enter
stos
and
mull
jo
inc
in
fsts
das
sbb
xchg
mov
in
add
jge
dec
scas
push
push
cmpsl
ljmp
jl
stos
pop
int
mov
out
cmp
push
int3
add
jecxz
lret
out
loopne
xchg
int
int3
cwtl
sbb
in
sbb
mov
nop
cs
push
dec
mov
inc
aam
sbb
jmp
adc
ret
push
pop
aad
xlat
shll
fisttps
rorl
bound
test
xlat
mov
adc
loope
mov
pop
xor
ja
dec
stc
ret
push
add
mov
icebp
das
push
les
out
and
adcb
cli
sub
mov
testl
xor
adc
popaw
jnp
arpl
push
jnp
pop
adc
push
sub
movsb
add
or
aad
inc
cld
jno
inc
mov
in
and
xlat
fdiv
jno
jl
pop
mov
pop
in
xchg
xor
outsl
mov
push
push
icebp
xchg
or
arpl
mulb
in
aas
das
popf
mov
sbb
mov
and
pop
inc
sbb
mov
push
or
cld
sbb
or
les
cmp
add
push
mov
lar
xchg
dec
adc
mov
fwait
pop
notb
or
xchg
daa
lods
and
xor
cs
js
jbe
inc
mov
sub
inc
jnp,pt
cwtl
sub
loop
add
lods
popa
fwait
jns
loop
sahf
push
leave
pop
lods
mov
pusha
std
sbbb
xchg
jmp
xchg
dec
mov
je
popf
aad
out
mov
loopne
test
add
sub
mov
push
cmc
cli
pop
xor
push
out
push
and
push
outsb
mov
and
push
jbe
stos
fmuls
shlb
in
mov
insl
jle
test
fiaddl
rcll
data16
or
jns
adc
jmp
sub
ds
inc
int3
jnp
and
mov
lods
adc
es
cli
pop
cli
cmp
push
jmp
arpl
mov
or
out
mov
pop
popf
add
xor
mov
sahf
pop
out
in
shrb
int
test
or
mov
xor
loope
outsl
stos
les
out
mov
dec
mov
dec
jmp
repnz
dec
icebp
mov
mov
and
fdivrl
movsb
push
adc
pop
cmp
lret
arpl
jbe
cmpb
mov
sub
or
xor
into
dec
ret
fisttpl
sub
lahf
lahf
loopne
out
iret
rep
xchg
test
mov
int3
arpl
repz
dec
mov
inc
faddl
in
mov
loopne
ljmp
mov
sbb
icebp
fisubrs
rorb
cmp
cmpsb
push
dec
push
mov
lret
sub
push
inc
ljmp
int
pop
outsl
shll
dec
std
idivl
or
imul
jg
add
mov
xchg
rclb
add
scas
and
cmc
movsl
lret
inc
pop
fstps
cmp
push
aad
mov
mov
or
pop
stc
fistpll
shl
jp
rorb
arpl
lods
dec
lock
mov
shrb
ljmp
push
cmp
push
jne
jmp
aas
add
cld
in
rclb
jnp
mov
xor
pop
mov
mov
xor
cmp
jo
lcall
roll
outsb
addr16
mov
push
outsl
ret
dec
stos
aad
rol
and
adc
rorl
cs
fnstcw
or
push
dec
cmc
loope
cmpsl
ss
sub
xlat
push
cmp
sbb
push
notl
sbb
inc
fcomi
lods
nop
cld
and
push
mov
push
xchg
in
iret
cmp
or
cs
add
imul
pushw
cmp
outsl
mov
inc
rolb
mov
pop
adc
test
rep
xor
divb
cmp
pop
xchg
in
pop
ss
sbb
test
pop
movsb
inc
fcompl
adc
mov
fs
push
sub
iret
es
and
cmpsl
jb
sti
in
dec
jbe
aam
pop
pop
test
call
dec
jmp
outsl
in
in
lea
int
aas
or
or
sbb
mov
mov
rolb
dec
jns
push
stos
mov
pop
xchg
push
sbb
cwtl
and
add
subb
pop
test
xor
lcall
idiv
xlat
addl
int
and
stc
jae
in
aam
cmp
iret
push
repz
push
xchg
and
daa
or
push
rcl
aas
jmp
xlat
xchg
add
sti
cmpsb
clc
pop
pop
in
aas
mov
call
cmpsl
loop
js
in
out
div
cmpsb
push
mov
xchg
sbb
jae
gs
fbld
and
xor
jbe
cmp
jle
jns
or
xor
imul
imul
call
ds
jmp
push
addr16
adc
inc
aam
lcall
pop
xchg
scas
jge
xchg
addl
pop
dec
push
pop
inc
mov
scas
stos
jg
mov
pop
pop
mov
xor
cmpsl
in
jge
sub
inc
push
jo
mov
cmpsb
jae
adc
sbb
adc
mov
test
xor
inc
push
push
mov
clc
insb
outsb
sub
jle
call
movsb
push
xchg
jbe
int
xchg
fdivrl
push
sub
clc
sub
xchg
imul
popa
sbb
ss
ss
mov
cmp
ss
xchg
rclb
out
sub
push
inc
mov
js
fwait
sub
xchg
cmp
std
add
aaa
popfw
loope
fdivl
sbb
je
push
jmp
cmp
mov
orb
insl
add
mov
gs
sub
cmpsb
dec
dec
mov
mov
push
aad
in
xorl
jg
dec
sti
nop
mov
int
pop
imul
mov
fdivs
add
call
mov
or
push
xor
and
mov
pop
pusha
xor
jb
pop
sti
incb
das
and
int3
inc
inc
or
pop
jnp
repnz
cmp
ja
jb
adcb
adc
mov
int
mov
adc
add
mov
add
cltd
scas
or
cmp
movsl
mov
aad
xchg
pushl
mov
cli
pop
lcall
push
cmp
mov
scas
shlb
xchg
sbb
aam
mov
out
in
ds
add
sub
adc
inc
mov
out
sbb
jg
push
xor
and
cmc
push
aaa
negb
fs
cmp
movsl
xor
outsl
inc
mov
cmp
inc
cmp
mulb
or
sub
mov
dec
push
out
push
sbb
push
jmp
jo
test
aas
mov
dec
add
enter
popa
out
call
sbb
cmpsl
popa
outsb
add
mov
adc
adc
fldt
pop
jb
sbb
std
cmp
pop
aaa
cld
xor
push
sub
loopne
mov
insl
leave
testb
mov
sbb
jne
mov
cmc
ret
std
cmpsl
pop
out
andl
pushf
jns
adc
push
cmp
sahf
pop
fisttpll
add
and
push
in
hlt
iret
testl
jecxz
pusha
das
jo
xchg
pop
jns
mov
pop
mov
or
imul
adc
imul
sbb
jb
push
sub
bound
add
adc
loopne
mov
outsl
mov
jno
aas
mov
mov
push
cmp
lods
inc
ds
mov
inc
sahf
adc
mov
lock
sub
push
mov
push
enter
mov
mov
cmp
ret
mov
jb
dec
xchg
xchg
pushf
inc
js
jno
iret
jmp
imul
pop
out
mov
lods
inc
inc
sbbl
push
sub
jmp
pop
fwait
movsl
xor
mov
subl
xchg
out
test
and
mov
and
rclb
fldl
mov
or
test
push
inc
in
insl
enter
sub
xchg
push
push
mov
mov
loopne
sub
or
mov
int
push
or
mov
add
push
jnp
test
dec
mov
icebp
and
mov
pop
adc
sti
rcl
loop
aad
cld
push
movsb
sbbb
test
dec
and
and
cmp
cld
add
inc
and
pop
push
test
mov
mov
jmp
das
adc
js
test
nop
push
imul
or
jno
pop
adc
into
pop
shrb
mov
jg
popf
or
shll
arpl
mov
cmp
les
pop
pop
aad
leave
xchg
lods
push
mov
and
mov
fistpl
inc
jp
stos
test
add
lcall
lock
mov
lods
fisubrl
xchg
ljmp
mov
pushf
pop
and
jno
xor
int
add
xor
enter
cld
push
dec
jp
cmp
add
das
mov
popf
lret
add
sbb
ds
mov
data16
test
test
ds
xchg
xlat
rep
repz
shll
stc
test
or
stos
inc
fstpt
mov
scas
dec
push
mov
and
cmp
fistl
insl
lods
push
movsb
jp
cmp
push
mov
movsl
mov
ret
inc
mov
rclb
hlt
sbb
pop
add
cltd
add
inc
sbb
dec
push
mov
push
fdivrs
jns
sbb
mov
pop
inc
imul
or
dec
cltd
pop
sbb
into
push
fxch
jp
dec
push
shlb
lahf
loop
lret
and
movsl
cmpsl
or
adc
ljmp
or
mov
cltd
and
pop
pop
jno
pop
lret
pop
in
out
and
pop
sahf
movsb
subl
lods
fsubrs
adc
dec
cli
in
test
sub
jge
cwtl
in
xor
mov
mov
leave
xchg
popa
aam
adc
outsb
jbe
inc
xchg
mov
insb
mov
mov
rolb
pop
jp
inc
icebp
dec
pop
mov
lcall
int
lret
add
cmp
mov
icebp
lock
cltd
dec
imul
mov
pop
dec
or
mov
pop
mov
mov
test
cld
xor
sub
sbb
sbb
or
push
push
push
test
push
xchg
sub
jbe
jl
pop
out
lcall
das
imul
rcrl
ret
mov
fisubrs
in
mov
mov
xchg
mov
fdivs
test
add
out
stos
add
pop
push
insl
sub
jmp
sbb
pusha
cmp
cmp
repz
popf
addr16
je
jae
fstl
sbb
cwtl
outsb
in
das
andb
xchg
push
aam
or
out
mov
pushf
add
ret
or
ret
cmc
insb
or
sub
test
les
and
lea
clc
mov
jg
dec
add
push
addr16
insb
les
push
sub
pop
jne
gs
pop
rcl
stos
fildll
jb
push
sbb
enter
loopne
call
sub
ret
out
cmp
pop
xor
inc
sbb
in
insl
cmp
popf
inc
nop
push
xchg
inc
shr
adc
aad
dec
int
add
loop
jno
pop
popl
mov
aas
aad
clc
and
cmpxchg
adc
xchg
aam
cs
mov
div
roll
enter
rcl
in
push
ss
lds
stos
in
jmp
xor
cmp
xchg
aas
stos
out
jg
xcrypt-ecb
cmpsl
dec
fimull
test
mov
lock
in
es
insl
ret
out
cmpsl
jmp
int3
int3
scas
mov
test
into
add
mov
repnz
mov
divl
mov
lcall
pop
cltd
inc
lods
push
divb
dec
repz
ss
jmp
fbstp
imul
dec
mov
add
sbb
sahf
cmp
test
mov
add
sti
ret
push
insb
or
stc
cwtl
stos
push
int3
or
shrb
inc
adc
push
jecxz
test
jae
test
mov
loope
jle
jo
fistpl
mov
ds
push
fnstcw
push
push
and
pop
scas
in
jo
mov
push
push
data16
scas
cmp
test
inc
orl
pop
and
or
and
aaa
aam
cmpsl
push
sbb
mov
mov
nop
push
out
inc
cmp
cmp
push
or
clc
mov
pop
pop
movsl
mov
xchg
les
dec
testl
jno
js
into
xor
pop
and
pop
and
fs
jbe
xor
inc
aas
push
adc
ja
adc
sub
cmpsb
pop
sbb
lock
sub
pop
sub
add
es
dec
rcl
push
xchg
push
xchg
imul
nop
loope
rclb
xchg
sub
xchg
mov
jb
xchg
cld
int3
mov
pop
lods
loope
cmc
dec
out
jae
cmp
mov
sti
in
jl
xchg
js
jge
dec
scas
adc
adc
mov
push
aad
xchg
sbb
sbb
jg
nop
dec
std
and
jbe
jbe
mov
fcoml
dec
cmpsb
sub
lcall
push
cmp
sbb
in
jmp
scas
push
mov
push
loop
pop
je
stos
and
mov
cs
js
mov
xchg
cmp
loop
lods
leave
subl
jnp
sahf
dec
cmpsb
test
and
cmp
add
into
stc
jl
hlt
sub
mov
sbb
fmul
test
jno
out
inc
add
jecxz
addr16
imul
stc
jge
int3
xlat
inc
jb
push
xchg
or
test
and
repnz
arpl
cmpsl
scas
stos
aad
dec
sbb
jge
js
pop
arpl
dec
leave
sbb
jmp
sub
es
iret
mov
xor
and
movsl
jb
test
sbb
xchg
sbb
and
call
outsl
fadds
sahf
xchg
mov
fs
cwtl
inc
adc
mov
test
pusha
sub
jo
sbb
mov
adc
cmpsb
pop
add
and
push
pop
outsb
jns
mov
dec
mov
dec
or
fisttpl
lret
popa
lea
dec
ret
or
mov
shrl
out
out
or
insl
push
les
push
xchg
inc
stc
leave
pushf
je
ret
pop
mov
icebp
out
pop
gs
fsubp
and
es
jle
cltd
fildl
fldcw
imulb
jl
out
jnp
out
outsb
add
repnz
nop
add
or
das
gs
mov
imul
dec
aam
push
ljmp
andps
lahf
in
mov
adc
test
cwtl
jecxz
popf
imul
fsubr
int3
leave
xor
dec
adc
test
pop
adc
cmp
clc
push
dec
fwait
in
packssdw
and
xchg
sbb
les
gs
inc
jo
mov
mov
insb
rorb
stc
out
or
stos
pop
inc
cs
pop
call
jp
sbb
or
inc
flds
xchg
pushl
fwait
pop
in
pop
pop
imul
mov
lahf
xchg
fisubrs
inc
jmp
cld
pop
inc
pushf
loop
jae
stos
mov
pop
mov
insl
push
jp
dec
mov
mov
outsl
inc
mov
or
ffree
push
pop
ficoms
add
cmp
add
mov
mov
pushf
clc
pop
fiaddl
pop
cmp
add
repz
or
stos
std
adc
push
dec
cmp
push
in
pop
pop
js
mov
push
imull
cmp
or
inc
or
mov
repz
out
cmc
hlt
lds
xchg
daa
and
nop
sahf
mov
shlb
push
repnz
repnz
push
push
and
mov
adc
adc
je
int3
cmc
adc
sahf
xchg
sarl
sub
lret
cmc
or
pop
aas
jl
mov
inc
add
pop
ljmp
sub
arpl
jg
add
cmpsb
dec
jnp
pop
pop
in
xor
dec
lahf
xchg
and
pop
dec
push
ljmp
or
insb
aad
lds
fs
mov
inc
xor
xor
mov
sahf
xchg
lods
call
insb
mov
lea
sti
loopne
jae
arpl
sbb
jbe
mov
gs
aad
pop
insl
test
pop
daa
mov
push
popf
cmp
outsl
push
add
adc
or
sub
mov
adc
fadds
xor
fsubrp
int3
insl
jg
mov
inc
pusha
sub
lock
and
add
xchg
dec
sbbb
xchg
xchg
movsl
ret
pop
out
out
mov
cmpsl
mov
and
dec
push
jg
out
js
popf
dec
xchg
inc
mov
cmc
test
dec
pop
mov
outsb
add
push
mov
or
loopnew
push
mov
rorl
mov
cmp
xchg
inc
outsl
xchg
xor
pusha
sub
cmp
mov
lods
xchg
sbb
jbe
dec
push
popa
iret
mov
nop
cmp
stos
jle
push
pushf
sub
aaa
pop
jne
mov
mov
or
cmpb
xchg
jns
dec
jle
lea
jp
adc
dec
xchg
mov
out
pop
daa
imul
out
jae
cltd
mov
les
jo
inc
scas
mov
add
jae
xor
or
add
outsl
sub
push
cmc
data16
stos
cmpsb
xchg
jmp
loope
call
lea
and
jmp
mov
fcmovnbe
mov
nop
shl
loop
add
gs
jae
cwtl
mov
sbb
notb
xor
sub
and
std
out
sub
adc
insb
jae
sbb
add
cmp
dec
sbb
into
mov
sbb
sbb
and
inc
iret
mov
ret
call
adc
lcall
cltd
inc
ss
jecxz
or
push
and
cmp
imull
ror
jns
cmp
aas
daa
fs
dec
push
xchg
test
pop
push
cmp
xor
lret
stos
or
pop
clc
xor
inc
push
cmp
popa
lods
fistl
loope
xor
xchg
sbb
add
mov
sbb
adc
out
dec
xor
cld
nop
repz
movsl
jecxz
jae
push
adc
int3
fsubrl
sub
mov
out
jnp
mov
mov
xchg
inc
in
pusha
cmp
daa
sub
jg
cld
ret
sti
jns
loope
or
add
sub
sbb
cmc
out
pushf
in
mov
loopne
into
adc
mov
das
out
inc
out
mov
in
orb
cmp
mov
jge
test
push
xchg
iret
mov
or
cmp
fs
imul
xchg
cmp
imul
lret
jge
mov
xlat
sub
lret
or
xchg
and
sbbl
test
fwait
and
inc
dec
xorl
pusha
scas
fsubrl
push
cmp
mov
xchg
push
push
std
jo
add
orl
incl
mov
mov
imul
dec
repnz
and
shr
jl
pop
clc
inc
std
dec
bound
mov
enter
roll
scas
or
cwtl
in
andl
movsl
inc
popa
inc
lahf
sbbl
test
cs
xlat
int
rolb
scas
lret
daa
xor
loopne
push
scas
or
xchg
das
dec
and
cltd
mov
mov
add
test
lret
mov
lret
inc
rorb
cmp
dec
fsubs
js
lahf
jmp
std
pop
cs
xlat
fadds
into
je
push
fnstsw
or
loopne
sub
sti
test
xchg
mov
push
and
mov
out
add
scas
mov
pop
test
mov
popa
inc
mov
stc
out
push
sbb
sub
mov
sbb
push
out
jno
lds
xchg
dec
mov
mov
xorl
jnp
cwtl
mov
sbb
movsb
or
js
xor
sbbb
mul
or
mov
sub
inc
inc
or
push
jae
imul
fdivrp
shl
sbb
push
mov
sub
cmp
add
cmpb
imul
movsb
mov
jne
mov
repz
cmpsb
and
and
ja
outsb
xchg
icebp
fwait
enter
ret
xchg
xlat
sti
push
cmpsb
and
sub
loop
mov
adc
ret
xor
outsb
dec
inc
out
int
cmp
sbb
scas
pop
mov
jmp
stc
rcrb
fnstsw
push
int
movsb
xor
cmpsb
push
pop
pop
pushf
rcrl
ret
test
mov
dec
je
enter
mov
xchg
addr16
mov
pop
lds
mov
dec
icebp
inc
sub
gs
cltd
dec
mov
or
xor
inc
aas
std
push
mov
push
mov
jo
int3
iret
ds
push
imul
out
mov
or
sbb
std
pop
xchg
loopne
xor
add
ret
push
psllq
jl
bound
adc
add
fwait
push
adc
xor
idivl
inc
xor
mov
ret
into
popf
cmc
cmp
or
sbb
xchg
or
repz
iret
cmp
test
cmpsl
icebp
fs
inc
dec
inc
mov
adc
mul
lods
pop
add
pusha
popa
insl
mov
push
sbb
in
int3
imul
cwtl
cmp
aad
adc
imul
fs
in
inc
movsbl
pop
lea
mov
dec
cltd
jae
or
hlt
mov
or
mov
mov
sub
jo
mov
cltd
loop
loop
fcomip
push
add
fidivs
push
sub
jl
insb
enter
loope
adc
sarl
mov
adc
popf
mov
in
or
mov
outsl
add
fsubp
fnstsw
xlat
cmp
aam
paddsw
push
add
push
test
add
cltd
mov
popa
mov
test
cs
fs
repz
xchg
dec
cltd
mov
test
mov
fmuls
and
sahf
jp
imul
sub
test
push
or
and
int
dec
cmp
sbb
push
insb
inc
mov
jae
cmp
dec
sub
bound
gs
xor
out
add
add
outsb
das
call
dec
ja
clc
imul
dec
jno
pop
or
cmp
lods
inc
fildll
dec
jbe
mov
hlt
mov
iret
sarb
jp
mov
lds
fs
pop
push
mov
loop
or
xchg
cmp
or
xchg
mov
scas
loope
iret
roll
inc
sbb
push
push
mov
adc
ret
add
mov
cmp
int3
xlat
dec
dec
xchg
aad
bound
daa
cmc
sbbl
pushf
je
aam
stos
cmp
fistps
cmpsb
movsb
fistl
push
xlat
in
xchg
jmp
xchg
loope
push
dec
stc
xchg
or
mov
dec
inc
xor
loope
push
mov
inc
test
lret
mov
xchg
pop
icebp
jmp
sbb
or
inc
repz
iret
movsl
sub
or
in
mov
xor
lea
outsl
movsl
in
inc
aaa
lret
out
sbb
imul
sti
popf
jbe
out
pop
mov
xchg
inc
lods
notb
push
dec
les
cmp
mov
pop
repnz
leave
jle
sbb
sbb
test
sahf
xor
arpl
jnp
rorl
push
xor
scas
sub
mov
pop
loopne
aam
pop
mov
pop
add
mov
repz
jmp
jae
roll
add
dec
cli
or
pop
dec
out
mov
mov
push
push
cli
jl
arpl
or
lods
fwait
mov
xchg
push
add
gs
pushl
fwait
das
popa
loop
mov
rcrl
xchg
pop
int
xor
or
in
or
and
add
lret
out
shll
data16
std
adc
sbb
jnp
mov
cmpsl
sub
clc
dec
jno
or
mov
jmp
mov
sub
xchg
and
stos
inc
sbb
loope
pop
jmp
xchg
push
lods
or
fcmovnb
sub
lods
inc
mov
adc
push
movsl
cmpsb
and
movsb
leave
iret
sbb
int
mov
imul
scas
cwtl
push
xchg
lcall
push
adc
lea
loope
cmc
rcll
cmp
lahf
sub
mov
es
mull
repz
sbb
or
test
sub
out
push
outsl
add
mov
add
sbb
cmpsb
mov
mov
cs
adc
push
jl
and
mov
lds
push
outsl
adc
fs
mov
int3
mov
jmp
out
cmpb
jno
cld
jbe
ja
mov
push
mov
nop
and
std
push
and
fldcw
push
pop
dec
mov
dec
mov
popa
imul
pushf
mov
call
mov
jno
test
sub
push
fisubrl
jo
arpl
loopne
test
dec
repnz
sbb
mov
cmpsl
fnstcw
fldcw
mov
aad
je
outsl
popa
sub
mov
cmc
arpl
add
mov
push
mov
cmpl
in
xor
in
stos
div
mov
mov
lcall
orl
sub
fwait
xchg
xor
pusha
daa
mov
arpl
push
gs
adc
xor
mov
jae
enter
mov
inc
sbb
mov
sub
add
mov
adc
lahf
ja
xor
inc
or
push
pop
std
fstps
or
aam
cltd
push
out
push
push
xchg
and
addr16
pop
sbb
xor
inc
es
cmpsb
adcb
dec
or
ret
mov
jb
pop
js
gs
inc
or
loop
cli
push
adc
outsl
jge
fisubl
push
loope
enter
cwtl
adc
mov
jle
cmp
add
mov
dec
and
adc
out
cli
jnp
mov
sub
xchg
lret
jmp
testb
arpl
stc
stos
mov
push
movsb
dec
xchg
pop
mov
rcrl
inc
jbe
cmpsb
mov
popf
sbb
xor
cmpl
pop
mov
shrl
xchg
sbb
sbb
lahf
mov
dec
or
out
and
sub
adc
aas
xbegin
test
cmpsb
lods
fisubs
add
popf
add
push
add
mov
faddl
movsb
data16
lcall
ret
jmp
mov
push
aas
xor
in
dec
inc
stos
scas
inc
cmpsb
push
iret
ss
leave
stos
lcall
mov
xchg
push
mov
shrb
mov
fidivrl
adc
add
mov
loope
daa
iret
inc
dec
in
xor
inc
or
fisttpll
adc
mov
ja
dec
pop
out
dec
xchg
scas
add
xchg
inc
inc
roll
pop
mov
icebp
mov
call
pop
fdivrl
in
lret
insb
xor
and
push
xchg
or
decl
aad
mov
push
mov
mov
jg
xor
mov
out
aad
pop
movsb
mov
jg
enter
outsl
sbb
add
jmp
fs
and
mov
mov
jno
or
outsb
loopne
xor
mov
mov
mov
mov
fildll
lds
mov
mov
test
inc
xchg
gs
adc
jle
out
sub
mov
in
xor
sub
xchg
aam
cmpsb
pushf
movsb
out
mov
pusha
fistl
daa
rcrl
ret
xchg
std
adc
lahf
std
xchg
cmp
mov
inc
pop
mov
test
cli
das
sbb
imul
sahf
pop
push
and
adc
cmpsl
or
xchg
es
inc
mov
jmp
mov
fistps
add
divl
aad
xchg
ret
inc
inc
jl
jmp
stos
int
shrl
popf
scas
fidivs
dec
psubb
inc
call
fildl
pop
shl
popf
imul
popf
out
mov
sti
shlb
repz
jne
scas
loope
loopne
mov
cmp
mov
pop
movsl
dec
mov
ud2
inc
loop
insb
test
aas
inc
inc
add
cld
adc
lcall
jecxz
aad
xchg
adc
pop
inc
repz
jbe
push
and
call
add
std
mov
push
lahf
mov
xor
lods
push
cmp
test
orb
imull
sub
popa
arpl
adc
aam
adc
pushf
mov
mov
mov
stc
mov
adc
in
cmp
inc
fs
outsb
xchg
pop
mov
ss
adc
adc
sub
out
dec
xor
popa
rolb
jne
adc
lods
js
dec
ljmp
in
fsubl
cmpsl
lret
mov
icebp
pop
push
aaa
into
js
dec
fxch
xchg
jmp
sar
ret
in
stos
and
add
pusha
cmpsl
in
xor
pop
push
jns
call
fcoml
xor
loope
or
pop
lcall
push
mov
out
sbb
xor
or
and
mov
and
outsb
int
adc
jle
xor
add
xchg
loop
jl
push
add
sbb
sti
push
mov
ljmp
dec
popf
add
imul
lods
sbb
mov
dec
xchg
leave
xor
fcom
daa
inc
push
sbb
arpl
or
lock
daa
mov
insb
in
cltd
jbe
pop
sub
adc
out
mov
repnz
mov
ss
cmpsl
int3
cmc
push
fisubs
cmp
ss
push
ror
inc
daa
adcl
sbb
js
mov
mov
add
mov
pop
adc
mov
mov
jp
dec
scas
cmpsl
out
jbe
aam
pop
fcomi
out
mov
mov
xchg
cmp
fst
adc
mov
and
shr
fwait
cmp
cmp
push
or
dec
scas
pop
cs
daa
mov
into
add
mov
aam
pop
xchg
call
push
mov
jg
sbb
mov
mov
pop
and
push
out
mov
cwtl
dec
xchg
push
ds
dec
addr16
jns
lret
cmp
and
rcr
xor
mov
xchg
stos
icebp
fwait
pop
popf
std
addr16
cmp
cmc
push
mov
cmp
clc
stos
daa
or
cmp
ret
cmp
mov
push
dec
pop
inc
jno
push
test
bnd
mov
push
adc
push
aam
cmp
notb
sub
push
lods
xor
sbb
lcall
pop
test
stc
xchg
fidivrl
push
in
loope
jg
inc
int
pop
iret
psubb
out
sti
andb
mov
mov
lahf
mov
cltd
das
jmp
outsb
mov
cs
dec
aaa
les
adc
cmpsb
bound
mov
stos
xor
inc
mov
loop
or
cmp
sbb
push
fsubrl
enter
iret
or
fimuls
sbb
arpl
aaa
add
and
out
push
lock
cwtl
fadds
ffreep
dec
adc
jecxz
mov
repnz
cmp
push
fistl
cmp
inc
mov
push
lahf
jo
dec
ja
jae
int
das
mov
fisubs
add
out
cmc
cmp
int3
or
and
cwtl
test
fisubrs
imul
inc
stc
inc
push
xchg
arpl
orl
or
mov
and
stos
clc
sahf
dec
add
outsb
inc
jnp
std
mov
mov
dec
jp
les
fdivrs
pop
bound
push
xchg
push
xchg
hlt
jg
push
lods
pop
sbb
out
xchg
and
addr16
leave
xchg
sbb
insb
mov
xor
pusha
xchg
mov
into
divl
lret
adc
les
inc
pop
gs
jecxz
xchg
in
mov
stos
addr16
sbb
aam
addr16
lods
mov
xor
pop
mov
dec
inc
jne
cmp
test
add
adc
and
out
ss
repnz
mov
mov
adc
popa
cli
les
shll
xchg
add
notl
popf
loope
cmpsl
and
bound
movsl
xor
add
fnstsw
iret
and
ja
adc
imul
xchg
push
pop
ret
insl
sbb
mov
repz
mov
dec
aaa
inc
xchg
loope
or
jecxz
ss
adc
add
add
icebp
pop
test
scas
sbb
or
pop
addr16
cmpsb
ljmp
cli
pop
in
lret
int
and
dec
sbb
ficompl
mov
into
inc
and
fwait
cmpsb
out
testl
push
sbbb
decl
iret
push
faddl
out
cmp
outsl
imul
cwtl
sub
xor
sbb
add
mov
mov
jnp
aad
int3
ret
add
pop
mov
icebp
mov
dec
lods
xlat
ja
test
call
bound
sub
loop
std
xor
mov
push
cmpsb
adc
ja
cmc
cmp
std
scas
push
ja
ret
fsubrs
arpl
mov
cltd
or
push
out
into
stos
hlt
and
rorb
movsb
adc
roll
iret
inc
daa
xchg
cmp
push
ret
pop
xor
inc
pop
stc
mov
out
lahf
enter
jbe
jmp
test
mov
jnp
and
sbb
sub
dec
movsl
mov
pop
mov
dec
add
push
inc
lea
push
xor
and
sbbb
xchg
pop
mov
loopne
decb
cmp
sub
adc
push
xor
inc
pop
add
jnp
pop
mov
scas
add
pushf
les
xchg
dec
adc
in
mov
ret
push
stos
jg
ljmp
dec
push
inc
aam
scas
loopne
jge
pop
sbb
sub
aaa
add
dec
sbb
cmc
mov
aaa
jl
call
mov
pop
inc
subb
inc
arpl
push
int
ss
dec
jl
mov
fisubs
ror
jno
inc
sar
inc
inc
ss
rcrl
imul
incw
and
nop
lds
sahf
adc
fmull
dec
xchg
lods
jge
mov
loop
inc
adc
xchg
aaa
or
mov
adc
fstl
lods
ffree
roll
add
pusha
and
mov
in
pop
out
daa
cs
into
fstl
sahf
fisttpll
push
test
out
and
test
ror
ss
jne
mov
lods
jmp
js
inc
sbb
or
lret
cmp
jns
mov
fdivrl
or
mov
jo
popa
push
insl
fcomp
add
bound
mov
mov
shll
add
shlb
and
add
in
pushf
lea
and
cs
fnstenv
idiv
out
aam
mov
adc
in
arpl
cli
push
lock
outsb
rcll
or
add
cli
enter
inc
mov
das
mov
stc
mov
jo
cmp
xor
xor
addb
out
test
js
rolb
out
mov
fistl
xchg
cmp
lea
iret
pop
cli
mov
and
adc
sub
imul
cmpb
mov
outsb
cld
call
cmpsl
push
ljmp
inc
test
dec
roll
jno
cwtl
dec
dec
ret
add
stc
add
cmp
loope
cmp
cli
dec
data16
lcall
sbb
stc
adcb
sbb
pushf
cmp
or
fmulp
xchg
and
ja
mov
aas
pop
mov
mov
and
jne
loope
aas
mov
inc
and
in
mov
mull
xchg
xlat
lods
dec
mov
clc
or
pop
add
repnz
sbb
rorb
int
pop
nop
jg
sub
aam
aad
sub
xor
std
push
push
das
mov
sbb
and
es
pop
xchg
test
sub
xor
cld
das
pop
mov
lods
orl
lods
std
inc
ljmp
js
orl
fists
mov
sahf
stos
js
jle
lods
fcomps
aaa
in
xchg
negb
xchg
sbb
lret
stc
lds
mov
pusha
dec
adc
cli
pop
sub
outsl
test
cmp
mov
test
roll
mov
xor
xorl
sbb
loop
sub
es
int3
ja
and
push
int3
sub
dec
lds
mov
test
fcompl
mov
mov
sti
lods
sub
dec
je
repz
rorl
mov
sub
lds
hlt
sbb
mov
int
mov
sub
jbe
dec
clc
mov
repz
cmp
lcall
push
adc
dec
and
lret
adc
or
scas
push
xchg
jg
shrl
push
dec
cwtl
dec
cmp
mov
jmp
dec
fsubs
scas
adcb
sar
xor
fcomi
lock
sub
cmovge
rcll
and
sub
push
jecxz
fistps
orl
jecxz
xchg
or
or
sbb
jmp
test
sahf
pop
mov
in
mov
adc
inc
dec
leave
je
iret
pop
mov
stos
mov
cmp
ja
test
lock
adc
and
mov
dec
adc
xchg
cmc
mov
mov
cmp
sbbl
cmpsl
inc
dec
dec
mov
and
cltd
stc
fsubl
lahf
push
loopne
lahf
add
jg
xlat
pop
lds
push
addr16
mov
pop
test
or
cmc
ss
jge
sub
jbe
pop
call
add
ret
ret
pop
sbb
push
cmp
or
xchg
ss
shrl
aas
fstpl
xlat
in
ja
dec
mov
xchg
lret
jbe
push
cwtl
les
cmp
push
xchg
mov
imul
leave
ficomps
pop
or
pop
cmp
test
test
gs
dec
push
fdiv
and
sub
inc
push
cmp
movsl
in
mov
or
adc
mov
lret
mov
icebp
int
stc
adc
xchg
mov
mov
xchg
in
mov
shlb
clc
shll
test
mov
sbb
leave
pop
icebp
test
or
push
sbb
ds
mov
fldcw
js,pn
roll
mov
jge
xchg
xor
in
lock
enter
cwtl
inc
inc
mov
addr16
push
or
std
xchg
mov
imul
outsb
imul
outsl
xchg
inc
jge
and
pushf
cmp
or
ljmp
adc
mov
dec
ret
jo
xchg
push
loopne
push
xchg
mov
mov
sub
ret
js
cmp
std
stc
inc
dec
mov
mov
xor
mov
call
sbb
faddl
insb
insl
jno
xor
mov
stos
xlat
inc
ficomps
lods
push
lahf
sbb
push
cmpsb
jmp
cwtl
ds
mov
addr16
inc
ficomps
lock
xchg
daa
add
test
cmp
mov
cmp
cmp
mov
cli
and
cmp
mov
inc
jnp
inc
das
or
inc
insb
mov
mov
sub
aam
lret
aaa
push
mov
jge
std
movsb
jnp
rcrl
lret
dec
rcrb
sub
cmp
push
imul
and
shr
jg
pop
push
loope
mov
test
daa
inc
add
fwait
dec
pop
sbb
movsl
mov
fs
push
push
sub
adc
adc
push
jecxz
xor
dec
mov
test
mov
cmp
lret
mov
or
xchg
ljmp
mov
fisubs
into
add
xor
testb
aad
dec
pop
loop
dec
add
jno
cmp
cmc
test
push
jo
inc
cld
xor
rcrl
arpl
repnz
mov
popf
sbb
add
imul
jb
and
nop
test
jecxz
les
rolb
iret
and
les
sub
and
inc
test
out
push
cmp
jbe
sbb
cmp
inc
loop
mov
and
pop
popf
pop
add
outsl
mov
adc
iret
add
mov
xchg
and
pop
sbb
push
pop
sbb
sbb
jnp
cwtl
and
stos
add
loopne
dec
ds
pop
jge
pop
pop
lods
stc
mov
bound
add
add
adc
cmp
xor
into
jbe
lods
subl
ret
cld
je
mov
mov
jae
roll
xor
mov
xor
je
addb
xchg
mov
or
add
iret
fs
pop
stos
mov
push
pop
pop
xchg
sbb
ljmp
jae
int
mov
outsl
aad
mov
test
scas
lods
rcll
and
or
scas
mov
cmp
das
sarl
sbb
clc
inc
movl
dec
dec
leave
cld
popa
popa
insl
inc
xor
xlat
cmp
push
aas
lcall
xchg
mov
aam
clc
xchg
test
push
scas
mov
jns
fists
scas
mov
mov
bound
leave
xchg
lods
outsl
aaa
clc
pop
out
daa
push
push
mov
add
xchg
jge
rcll
popa
dec
mov
clc
nop
popf
stos
pop
or
das
or
in
ficoms
inc
mov
lcall
rcll
add
popa
xor
adc
pop
into
dec
jnp
inc
ljmp
bound
jo
out
stos
pop
lock
loope
pop
adc
xchg
inc
leave
incb
push
pop
sti
jp
push
and
or
pop
add
pop
int
xor
cwtl
hlt
mov
inc
mov
das
jae
out
shl
fcmovbe
cld
sbb
sub
icebp
cld
je
adc
and
jecxz
mov
pop
js,pt
inc
imul
lret
cwtl
xchg
aaa
jo
pop
push
xor
inc
cmpsb
inc
jp
cwtl
insb
sbb
test
movsl
xor
cmpsb
ss
jmp
nop
test
sahf
aam
fwait
mulb
mov
sbb
sbb
call
into
shll
mov
pop
jno
mov
fiaddl
inc
sbb
enter
xchg
cltd
jns
mov
push
in
and
dec
roll
fwait
and
xor
sub
mov
lock
sub
adc
xchg
or
out
loop
jo
push
gs
jo
jb
aam
bound
sbb
addr16
fldl
popa
add
lods
inc
push
mov
mov
xor
adc
add
add
jnp
test
clc
out
or
enter
fsubr
sti
jg
adc
dec
sti
dec
add
pop
mov
cmp
cmpsb
and
push
mov
pop
sarb
fcom
es
sbb
das
dec
adc
or
faddl
pushl
punpckhbw
or
push
icebp
jb
mov
sub
fisttpll
rcll
mov
mov
popf
rcl
cmp
loopne
xchg
inc
mov
stos
adc
mov
inc
adc
fs
push
mov
test
jmp
jne
in
pop
sti
mov
pop
fs
lea
mov
pop
shrl
xchg
into
xor
call
pop
jne
mov
adc
mov
xor
and
mov
dec
pop
adc
jns
pusha
pop
pop
loope
daa
mov
pop
jmp
pop
aaa
push
sbbl
aas
xchg
roll
bound
jo
jp
nop
imul
sbb
push
jle
iret
dec
pusha
and
enter
adc
mov
jbe
sbb
sub
push
test
cmp
out
xchg
cmp
and
push
cmp
test
or
lret
and
repnz
ljmp
xor
mov
cmp
test
lahf
add
lcall
dec
xor
mov
out
out
and
loopne
loope
addr16
or
mov
test
hlt
lods
dec
orl
popa
push
mov
xor
push
adc
das
mov
and
ror
jbe
fcmove
push
out
sub
and
jge
mov
lret
lods
ljmp
dec
mov
or
stos
adc
leave
xchg
push
test
pop
in
in
gs
inc
push
cltd
sarb
add
out
lret
lock
adc
jo
lret
mov
insb
xor
fwait
sub
mov
aaa
lods
pop
sbb
cmpsb
mov
lahf
jb
aas
and
push
mov
or
xchg
call
xchg
push
aas
scas
ja
jle
mov
sahf
jno
loop
scas
lahf
idivb
and
mov
out
or
ffree
mov
jmp
sub
xchg
lahf
cmpsl
outsl
cmpsl
mov
fwait
hlt
push
mov
mov
or
xchg
sarb
sub
jne
cmp
cmc
je
mov
sub
fwait
idivb
adc
in
mov
jg
lahf
xor
adc
jne
sub
js
int
jg
mov
push
fwait
pop
pop
mov
or
iret
out
pop
push
test
aas
ss
mov
mov
dec
aaa
push
aas
loop
je
and
out
cmpsb
mov
stc
pop
loopne
notb
ljmp
out
jp
sub
xlat
mov
inc
cltd
cmp
cmpsl
pushf
add
xor
not
add
sub
stc
shr
incb
stc
insb
xor
or
daa
inc
and
push
push
dec
ficoms
lds
adc
test
test
rorl
dec
mov
cmp
or
mov
mov
ss
push
shl
loopne
enter
sub
loope
lds
insl
cld
hlt
test
lea
xor
clc
bnd
pop
gs
jb
mov
xchg
mov
jb
inc
add
xorb
aaa
xchg
fcmovu
cmpb
adc
jl
add
adc
dec
daa
repnz
add
cmc
sbb
das
or
sbb
sbb
jmp
and
pop
shrb
in
mov
shll
sahf
mov
add
aam
mov
into
sub
popl
subb
ret
mov
insb
pop
xchg
shrl
lret
cltd
loop
bound
nop
lea
cmp
imul
int3
adc
adc
or
xchg
and
push
or
pop
mov
add
sub
xchg
imul
mov
in
mov
mov
xchg
and
in
or
lret
dec
jbe
jnp
in
shrb
inc
fistpll
sbb
push
jno
cmpsl
imul
mov
testl
xchg
lds
in
movsl
mov
jnp
hlt
and
hlt
out
test
xchg
addr16
add
inc
mov
hlt
cmpsb
push
lock
mov
es
jo
mov
and
in
loope
test
inc
xchg
icebp
rcrl
cli
testl
lock
and
hlt
mov
or
int
jge
cld
jne
push
xor
sbb
pop
and
mov
xchg
fidivrs
or
les
loope
xor
out
call
idivb
movl
std
into
xor
in
push
and
imul
mov
mov
movsl
sub
ror
aas
xor
pusha
movsl
daa
add
xor
mov
andb
xlat
js
movb
movsb
iret
aas
je
out
ficoms
stos
fsubl
enter
sahf
sti
adc
xchg
xor
jo
mov
xchg
sbb
out
pop
mov
aad
aas
stos
push
cmpsb
sarl
rcrb
mov
and
xchg
jp
jl
fmuls
adc
cmc
cmc
hlt
jno
cmp
adc
mov
int3
mov
and
lods
xchg
shl
mov
repz
inc
add
jbe
fdivr
loopne
jnp
xchg
xchg
aad
pop
jne
push
jno
adc
mov
addl
or
lods
push
out
je
shll
mov
orb
push
dec
and
cmc
out
xor
jp
ss
and
inc
je
cwtl
ljmp
aaa
jo
ljmp
mov
loope
repnz
mov
pop
push
add
aam
add
das
mov
sub
sbb
ljmp
mov
pop
in
sti
bnd
sbb
cwtl
cmp
push
pop
add
lret
mov
xchg
cmp
cmp
scas
mov
enter
xchg
add
adc
cwtl
cli
ds
inc
mov
push
or
adc
xor
ficomps
vxorps
out
mov
jl
cmp
repnz
outsl
js
jge
mov
jnp
sbb
pop
sti
jp
out
pop
push
dec
ffree
in
insl
cltd
std
popa
xor
rol
hlt
mov
lods
lret
cmc
repz
stos
loope
xor
or
dec
push
in
cmp
inc
sbb
inc
mov
aam
pop
adc
lock
jo
decl
push
pop
mov
or
pop
dec
lea
lcall
mov
xchg
lock
jo
rcrb
sets
je
xlat
lret
mov
dec
ret
lahf
xor
xchg
into
mov
and
inc
fnsave
mov
pop
das
gs
iret
pusha
push
ret
imul
addr16
adc
cmp
push
jmp
jmp
fiadds
pop
fs
push
cld
enter
mov
mov
mov
dec
inc
mov
sbb
jns
xchg
push
shll
mov
add
stos
and
pop
push
mov
test
or
fistps
out
ret
cmpsb
mov
ljmp
add
icebp
mov
xchg
add
je
out
jns
pslld
js
mov
popa
loope
cmp
xor
mov
sbb
out
xor
xchg
outsb
mov
inc
in
xor
xor
fisubl
lret
out
dec
aad
push
push
add
inc
loop
aaa
stc
push
insl
cli
adc
daa
push
pop
idivb
or
dec
or
sbb
add
and
cmpsb
mov
cmp
xor
xor
mov
sub
cli
inc
imul
aad
out
xchg
push
call
jle
test
jecxz
pop
repnz
adc
imul
dec
jle
cld
cmpb
mov
or
sbbl
push
test
adc
aad
jns
or
shll
push
dec
or
inc
jle
sub
mov
lret
out
mov
retw
inc
add
or
sub
xor
jb
pop
ror
lea
and
ljmp
dec
xchg
insb
std
cmp
loope
enter
arpl
aam
roll
fidivrs
xchg
in
push
push
lcall
push
addl
fsubrl
fcoml
in
sahf
shl
push
inc
in
mov
aam
add
rcll
push
xchg
out
add
sahf
push
mov
inc
mov
inc
outsl
and
dec
mov
mov
xor
pop
mov
inc
push
sahf
imul
mov
xchg
addb
push
lret
inc
movsb
test
xorl
jmp
jno
push
xor
or
std
xchg
add
pop
fwait
jns
and
out
lahf
sti
lods
cmp
mov
mov
mov
mov
cld
adc
arpl
mov
dec
dec
adc
mov
mov
out
jge
and
jb
xchg
xor
jns
or
lret
ret
nop
add
cmpsl
xchg
lahf
push
roll
loope
mov
cs
lret
adc
outsb
or
dec
shlb
js
cld
in
loop
xor
push
xchg
add
mov
jnp
jl
pop
mov
xlat
pop
mov
fnstcw
repz
test
idivb
mov
lds
bound
mov
and
mov
aad
sub
or
imul
sti
jle
or
imul
out
or
arpl
push
fnstcw
adc
lods
bound
js
test
aaa
mov
add
inc
inc
jmp
out
lods
or
sbb
adc
jne
iret
push
fxch
nop
idivb
mov
xor
clc
nop
mov
rorl
add
xor
ret
and
xchg
out
lret
lock
das
xor
call
or
mov
cmp
aad
inc
sar
pushf
sbb
xlat
mov
ret
fwait
int
jo
mov
dec
xor
dec
and
cltd
mull
fwait
jno
add
call
push
jnp
lcall
repz
mov
and
mov
push
imul
push
lahf
loopne
jge
push
imul
and
fimull
or
pop
inc
pop
ret
lods
or
lods
xchg
lcall
mov
aam
les
xor
test
inc
test
cmp
xchg
in
dec
or
push
insb
das
sbb
add
lods
xor
sbb
mov
pop
adc
outsb
xorl
addl
push
jle
mov
dec
imulb
cld
jo
test
lods
mov
repnz
sbb
lret
xchg
loopne
push
cmpsl
lods
mov
stos
std
push
out
out
cmp
sbb
sub
test
fs
or
and
arpl
sahf
inc
outsb
shrb
pop
jbe
xchg
jg
repz
int3
les
adc
clc
and
pop
ret
aaa
shl
mov
mov
into
sarl
push
cmp
push
xchg
xchg
and
cwtl
pusha
inc
mov
les
jg
rcrb
icebp
jnp
mov
fistps
jnp
or
sar
or
call
mov
faddl
pop
push
icebp
jne
push
sbb
adcl
dec
gs
stc
sub
fdivs
adc
ds
in
mov
dec
and
dec
fistpll
mov
and
rorl
sub
xchg
add
mov
pop
and
xchg
and
imul
mov
or
xlat
imulb
nop
fldcw
mov
sbb
mov
xchg
xlat
lahf
mov
fidivl
inc
xchg
fcomps
pusha
xor
xor
imul
inc
lcall
sub
xchg
pop
sub
pop
dec
imulb
inc
jbe
jno
dec
out
push
es
andl
cmpsb
testl
pop
out
pop
js
jo
adcb
push
dec
mov
pop
pop
rol
xchg
mov
pop
sbb
mov
inc
add
cmp
mov
dec
jo
fs
or
pusha
cmp
xor
xchg
mov
dec
repnz
out
sbb
ss
cmpsb
loopne
xchg
cs
inc
gs
clc
cmp
sbb
in
xor
mov
imul
cmp
and
mov
push
push
pop
repnz
xor
test
mov
mov
push
xchg
or
inc
in
lret
into
mov
and
cmp
lea
cmc
lock
pop
pop
cwtl
lods
mov
inc
loopne
or
mov
into
inc
cli
out
sbb
test
add
ficoml
cli
add
jge
inc
cmp
xor
sti
fbstp
push
push
stos
jae
sbb
adc
mov
adc
dec
add
test
adc
pop
inc
gs
in
pop
aaa
pop
or
dec
fwait
mov
dec
push
add
jb
dec
outsl
iret
imul
out
dec
es
pop
jae
cwtl
inc
jns
imul
das
out
mov
aas
repnz
and
dec
loope
xor
cs
adc
and
push
sub
fistpl
dec
xchg
jecxz
ja
inc
fisubs
xor
in
mov
imulb
into
cmc
and
gs
xor
lods
lret
ret
sbb
inc
out
sbb
divl
loope
cmpl
repz
sbb
stos
pushf
add
stos
fdivrl
mov
es
pop
std
sbb
out
sub
insb
sub
lcall
cs
mov
xor
push
cli
fisttps
mov
test
and
es
loope
repnz
xchg
push
or
cs
stos
lods
js
dec
adc
mov
cld
push
jnp
dec
fisubs
inc
dec
fdivrl
mov
or
popf
dec
ret
stos
enter
in
imul
xchg
jae
push
or
imul
push
enter
add
scas
mov
push
shll
push
mov
scas
push
push
shrb
daa
es
push
lret
pop
cmp
js
test
mov
ja
mov
sbb
iret
push
mov
sbb
shlb
mov
lods
std
fldl
add
lahf
fadd
int3
roll
in
fnstsw
pusha
mov
lock
std
mov
negl
mov
fdivs
pop
iret
push
push
fsubrl
les
in
sahf
cmc
xchg
or
sbb
scas
fwait
jmp
fstpt
or
xchg
jg
adc
nop
idivl
xor
mov
lock
ljmp
lahf
stc
inc
mov
and
pop
xchg
rorb
or
sbb
js
mov
sbb
repz
xchg
imul
notl
inc
iret
add
xchg
mov
popa
fcoms
mov
lret
idivl
add
test
mov
mov
xor
xchg
mov
push
ds
fistps
imul
test
xchg
add
test
sub
add
inc
adc
movsb
adc
flds
js
xchg
or
xlat
xor
push
xchg
idiv
fs
cmp
mov
ret
in
repz
mov
sbbb
out
scas
mov
filds
and
into
mov
mov
lods
in
add
xor
dec
inc
sbb
out
sahf
cmp
sbb
repz
push
adc
lahf
jo
cli
arpl
sub
stos
pop
or
ljmp
out
cmpb
add
iret
pop
add
or
inc
imul
arpl
mov
pusha
shl
in
jl
pop
in
xchg
lret
and
add
add
lcall
sbb
add
test
popa
mov
bound
xchg
in
lret
add
cmpsl
adc
mov
inc
adc
push
faddl
notb
cwtl
xor
xor
cmp
cmp
xor
leave
cmp
lods
sbb
hlt
jp
xor
out
inc
pop
and
xor
cltd
or
cmp
jb
jecxz
cmp
or
mov
pushf
xchg
ficompl
inc
cmp
outsl
popa
cmp
push
cmp
sub
xlat
aam
out
lahf
add
repnz
xor
fsts
sbb
lcall
mov
push
out
js
mov
cwtl
pop
push
mov
jne
insb
mov
int
mov
xor
in
xchg
sahf
mov
jle
popa
sbb
or
enter
stos
les
mov
sub
xchg
mov
jl
out
arpl
sarb
pop
jmp
popf
mov
pop
push
xor
inc
inc
xchg
sar
test
dec
out
test
pop
jne
stos
into
ret
jl
xor
ret
mov
pop
and
push
fldcw
jno
dec
inc
mov
mov
out
out
add
cmp
insl
lea
aaa
sub
or
dec
sbb
mov
sbb
add
mov
out
and
inc
repnz
pop
movl
decb
out
pushf
pushf
decb
gs
cs
push
pushf
icebp
lret
stos
mov
out
loop
pop
push
jb
jns
xchg
push
mov
out
insb
sbb
mov
xor
shlb
shll
out
scas
addr16
orb
pusha
ljmp
xor
jbe
inc
shrl
ja
mov
insb
test
sbb
jne
sbb
adc
out
xchg
lcall
iret
sbb
sub
out
jno
xor
fisttps
aas
inc
dec
call
push
lock
aas
cmp
pop
adc
jecxz
out
inc
jb
daa
or
dec
ret
push
sbb
outsl
jbe
loope
dec
mov
sbb
jns
or
stos
jge
scas
ss
sub
xchg
outsl
mov
dec
mov
cli
mov
push
das
testb
faddp
cmp
dec
stos
outsl
add
imul
and
cs
adc
cli
xor
inc
icebp
xor
mov
rolb
mov
lahf
cltd
sbb
vmwrite
mov
inc
test
cmpl
test
sub
adc
shlb
sbb
or
inc
in
aad
imul
filds
mov
mov
imul
cmpsb
lods
pop
cmpsl
dec
push
or
icebp
dec
and
mov
hlt
cmpsb
pop
inc
fcoms
push
or
scas
mov
jge
or
push
pushf
inc
fistps
pusha
in
jg
jge
aad
push
frstor
mov
push
or
popa
mov
int3
arpl
cltd
pop
pop
fcoms
test
push
dec
xor
stos
xchg
and
push
add
xchg
add
jp
pop
loop
push
sysret
enter
xchg
fcoms
lahf
fs
scas
leave
dec
pop
pop
out
cwtl
icebp
inc
in
mov
mov
sub
sbb
inc
aam
mov
pop
aas
jbe
add
dec
or
xor
int3
mov
adc
add
enter
pushl
sbb
fidivrs
insb
mov
adc
jp
repz
in
jge
pop
and
outsb
dec
cli
inc
jp
vpmullw
jle
inc
icebp
dec
sub
cwtl
das
test
stc
push
pop
xlat
in
aam
mov
sar
in
loope
and
add
push
enter
or
mov
mov
sbb
fldcw
cmovae
inc
clc
mov
int
xchg
jmp
xchg
jge
es
sbbl
sbb
inc
shrl
sbb
out
dec
sahf
dec
adc
and
insb
pop
adc
xor
adc
mov
pop
sbb
xchg
sbb
push
push
stc
xchg
inc
decb
push
pop
dec
mov
stos
mov
and
sahf
pop
daa
mov
ss
inc
jp
push
adc
lods
jb
mov
cmp
jno
add
xchg
jle
mov
ss
cltd
add
dec
jle
sbb
xchg
scas
and
ljmp
mov
and
pop
push
xchg
mov
lock
dec
jno
xchg
cmc
clc
mov
cld
js
cmp
wrmsr
insb
cmp
std
fwait
aam
pop
fcompl
add
jg
fldt
movsl
testb
push
in
hlt
loope
mov
imul
int
pop
test
push
or
pop
lds
mov
adc
pop
jbe
int
xchg
in
pop
jmp
idiv
dec
sar
push
jno
jns
ret
xchg
ret
cmpsl
inc
outsl
outsl
mov
insb
add
jo
mov
pop
popl
jg
insb
loope
inc
inc
in
jo
mov
add
data16
lds
mov
mull
mov
sub
inc
push
xlat
jl
inc
mov
popa
or
aas
mov
fsubrs
sub
jb
mov
jae
insb
in
push
in
push
sahf
jnp
ficomps
hlt
xchg
cs
xor
cs
shr
pop
ljmp
mov
mov
jle
or
dec
test
popa
ds
push
ljmp
xchg
dec
arpl
xchg
divl
mov
aas
test
dec
je
jmp
imul
mov
mov
aaa
and
cmpsb
pop
mov
subb
cltd
jno
out
mov
scas
mov
push
stos
mov
cmpsl
les
or
jmp
sub
push
jl
xor
inc
bound
scas
inc
jmp
jbe
leave
adc
mov
sar
out
lods
xchg
nop
jle
and
stc
call
mov
push
mov
push
xor
es
lret
lods
or
mov
fisttpl
sahf
sub
lret
add
not
cld
outsl
sub
aad
punpckhwd
dec
or
ffreep
mov
insb
ljmp
ss
mov
lcall
js
add
xchg
sub
test
pop
adc
fcmovb
sub
add
lds
adc
inc
pop
xchg
adc
fimuls
imul
mov
popfw
jnp
dec
outsl
in
sub
mov
enter
lods
sub
pop
sub
mov
pop
popa
test
aad
adc
fimuls
xchg
mov
jge
push
sub
cltd
mov
add
cmpsb
cmpl
inc
push
pop
dec
jmp
out
xchg
xchg
jmp
sub
scas
xor
lret
or
mov
fwait
lods
inc
int
push
push
loopne
sub
frstor
mov
into
outsb
imul
cmc
lods
scas
inc
stos
scas
imul
xchg
lahf
mov
ret
xor
test
stc
mov
aaa
push
into
into
mov
mov
cmp
xor
dec
nop
imul
jae
fsts
xor
cmp
aaa
out
cmp
mov
ds
in
in
scas
lea
test
repnz
xchg
insl
push
xchg
std
or
dec
xorl
jp
cmpsb
cmp
fs
cmp
rcll
out
mov
lret
fcompl
or
push
xorl
mov
mov
in
rcr
rcrl
cmpsb
xor
insl
mov
xlat
scas
jg
and
mov
test
cld
or
dec
mov
std
pop
mov
pop
repnz
sbb
push
mov
dec
ljmp
xchg
mov
jmp
arpl
push
or
adc
insb
sar
idiv
adcl
pop
in
insl
sbb
pop
mov
das
xchg
shl
fsubrs
mov
inc
sbb
or
push
adc
mov
pop
mov
mov
xor
and
cmc
insl
int3
dec
sbb
js
inc
and
sar
fcos
jl
cwtl
and
jne
adc
in
cmp
lret
sti
dec
dec
inc
mov
xor
mov
aaa
pop
pusha
mov
lahf
and
rcrb
insb
push
mov
mov
adc
pop
cmp
mov
scas
fmuls
push
adc
data16
int3
sti
stos
cmc
popf
xor
lahf
xchg
pop
outsl
aad
paddusb
decl
sub
sub
mov
loopne
mov
adc
mov
ja
push
xlat
inc
mov
inc
jne
push
xor
dec
gs
mov
fdivl
aam
push
imul
adc
and
push
js
and
pop
adc
cmp
loope
mov
aas
pop
mov
fs
cmpsl
outsb
or
shll
pop
cmc
sti
or
lret
mov
xor
in
inc
mov
dec
pushf
ljmp
mov
lods
mov
movsb
jo
mov
fbstp
mov
sbb
dec
mov
rol
push
cltd
pusha
aam
sub
push
mov
or
jns
mov
arpl
push
test
movb
cmpsl
push
mov
sub
lea
xchg
ds
aas
test
fs
lret
scas
ret
movsl
in
or
jge
dec
pop
ljmp
add
es
and
xchg
jns,pt
cmpsb
xor
in
or
mov
jbe
imull
fisubs
push
into
lahf
rorb
nop
jno
fistps
dec
mov
mov
sahf
adc
jo
xchg
push
push
xor
mov
jecxz
add
arpl
pop
mov
or
mov
mov
adcl
xor
stc
xor
mov
cmp
sbb
mov
push
and
mov
dec
and
push
in
int
xlat
mov
cwtl
ficoms
pop
jge
aad
insb
lcall
enter
inc
xor
xchg
nop
jns
pop
jg
sub
and
push
inc
and
test
test
out
fnsave
pop
sahf
or
out
mov
fcomps
ds
into
je
mov
pusha
test
cmpsb
in
jmp
lret
lods
pop
pop
mov
scas
rcrl
mov
cmp
xor
je
sub
pushf
jns
push
fwait
cmpsl
push
push
xchg
call
out
xor
dec
loop
fildll
cmp
fildll
fldcw
aam
cmpsb
mov
push
insb
fiaddl
sbb
stc
dec
iret
stos
cs
inc
jne
adc
dec
gs
adc
and
add
cmc
in
dec
pop
inc
push
pushf
pop
xor
adc
cmp
aam
pop
ss
rorl
les
cmpsb
mov
testb
icebp
add
insb
sarb
push
es
jge
cmc
paddd
leave
mov
arpl
int
outsl
xchg
sahf
mov
enter
cmp
rcr
dec
sub
scas
in
in
test
in
push
pop
and
loopne
dec
sbb
int3
loope
jne
push
mov
stc
mov
jns
sbb
int3
mov
insl
bnd
cwtl
and
fistps
sbb
loop
int
push
inc
sti
xchg
mov
je
scas
sbb
in
int3
mov
lahf
cmova
mov
sbb
pop
fists
sbb
sub
loop
mov
jo
nop
mov
out
jmp
jns
jnp
xor
fwait
xchg
sti
xlat
sub
ret
outsb
outsb
adc
into
movsb
push
xor
sub
mov
jnp
xlat
or
jno
xchg
sbb
fst
outsb
fisttpll
aaa
hlt
mov
push
mov
div
aas
nop
cmc
dec
adc
mov
pop
mov
add
mov
and
push
in
je
add
adc
push
aam
mov
dec
or
add
outsl
or
loopne
push
cmp
pop
jnp
in
and
xchg
loope
aas
fisubs
sahf
add
cmp
jo
xchg
arpl
xor
fs
dec
push
lds
cmp
stc
ret
in
je
xor
inc
pop
aad
insl
jmp
push
mov
jb
push
in
aaa
lahf
sahf
fistl
sbb
aam
sbb
add
pusha
add
out
in
bound
stc
popa
inc
test
push
mov
das
leave
dec
push
mov
lds
pop
fdivrp
adc
daa
pushf
cmpsb
dec
pushf
lds
sub
mov
add
inc
mov
mov
out
and
jno
or
xor
mov
mov
pop
inc
mov
push
sub
lahf
cmp
ljmp
hlt
int
mov
fistpll
inc
cli
daa
inc
dec
loopne
and
mov
outsb
mov
cmp
and
notb
fdiv
add
test
sbb
loop
cmc
mov
in
jmp
popf
imul
mov
xor
inc
dec
rclb
addl
dec
icebp
aaa
mov
xchg
adc
push
add
mov
lods
bound
repz
lea
or
nop
adc
std
test
addl
outsl
jnp
sbb
pop
push
test
pop
mov
fisttpll
adcl
pop
mov
sub
xor
ja
mov
cli
mov
fists
pop
test
ds
imul
test
bound
movaps
int3
add
jnp
cmpsb
orl
cltd
sbbb
jo
inc
xor
insb
cmpsl
xchg
push
cltd
xchg
jle
lds
jle
pushf
ds
sti
mov
jecxz
je
ja
xchg
xor
jnp
xchg
cwtl
push
pushf
mov
mov
push
jnp
lods
sub
mov
insb
loop
das
leave
shll
cmp
add
cmp
ja
jbe
cmpsl
repnz
in
add
popf
js
daa
and
push
jno
dec
push
mov
push
push
das
add
repnz
hlt
mov
ljmp
push
pop
sbb
test
dec
push
add
jle
mov
sub
xor
push
add
push
add
jno
negb
add
in
ss
or
movsl
jp
mov
inc
repnz
pop
inc
push
mull
lret
push
mov
stos
jno
jge
sub
mov
jl
ljmp
mov
adc
jg
shll
sbb
stc
push
fdivl
ljmp
mov
arpl
out
cmp
int
ja
adc
pusha
fidivrl
hlt
sub
push
or
imul
dec
lret
push
orl
add
lods
jmp
sub
frstor
cmpsb
add
dec
das
stc
or
sbb
ljmp
addr16
aaa
push
add
or
mov
sbb
sub
rcl
lea
rolb
aad
or
cmp
sub
jne
pushf
pop
int
movsl
or
lock
cmp
jecxz
dec
or
dec
mov
adc
xchg
stos
jg
fimull
and
xchg
jne
push
dec
ret
rorb
push
aad
int3
jmp
fisttpll
push
jae
bound
aad
lock
inc
fsubs
xchg
int
and
push
pop
inc
sbb
or
inc
mov
jae
scas
hlt
into
fnstsw
mov
cmp
icebp
repz
shlb
pop
loope
mov
lret
push
testl
pop
add
ljmp
repz
cmc
xorl
mov
xchg
flds
jp,pt
and
inc
pushf
mov
pop
mov
mov
mov
xchg
pop
sub
iret
std
shll
sub
jmp
cmp
push
mov
lds
dec
mov
xchg
mov
adc
jp
hlt
mov
jg
fimuls
sbb
add
cld
dec
rcrl
sbb
outsl
mov
cwtl
add
dec
jmp
icebp
hlt
mov
pop
fdivr
pop
js
xchg
adc
aad
bound
push
sub
daa
fldenv
dec
mov
mov
mov
mov
je
mov
or
movsl
pushf
pop
and
pop
fucomip
sub
dec
push
inc
shl
adc
pop
mov
or
lock
jge
sub
lahf
mov
mov
pop
rolb
mov
lret
and
xorl
push
movb
and
mov
popa
add
out
push
xor
cmp
inc
and
fcmove
rcll
ret
ficoms
or
cs
outsb
pop
stos
mov
pop
stc
xchg
mov
mov
push
loop
int
loope
loop
sbb
cld
stc
insb
xor
insl
mov
cld
mov
pop
popl
adc
adc
mov
lea
cmp
into
mov
fsubr
mov
outsl
repz
addr16
loope
inc
xchg
dec
cmc
ret
adc
pop
push
mov
mov
ljmp
hlt
loope
cmp
dec
jl
cs
mov
daa
loopne
mov
shr
jl
pop
dec
mov
notb
shrl
and
aas
push
icebp
js
xchg
push
popfw
jnp
cmp
shll
scas
stos
in
mov
add
jecxz
or
inc
push
xor
sti
mov
insb
imul
dec
inc
adc
add
in
add
aad
nop
addr16
ffreep
les
push
jne
pop
inc
cs
jge
es
jb
stos
xchg
mov
or
jp
cmp
das
popa
cmp
dec
subl
jnp
mov
jge
sub
mov
add
xchg
pop
pop
cld
bound
ds
inc
add
add
jae
test
decb
aaa
imulb
pop
push
adc
aas
sbb
adc
rcr
pushf
lahf
or
daa
pushf
xor
xor
xor
pop
mov
push
pop
repz
and
push
insb
stos
adc
pop
mov
inc
mov
dec
repnz
inc
in
mov
or
sbb
pop
dec
loope
adc
dec
andl
xchg
lods
les
in
fldt
sbb
dec
xor
sbb
scas
test
adc
ja
mov
mov
mov
movsb
cmp
test
repz
xchg
fs
pop
gs
outsl
mov
jle
stos
mov
std
and
xchg
push
daa
push
mov
in
xor
pop
inc
shrb
lahf
sbb
adc
sti
mov
inc
iret
call
pop
hlt
or
cli
dec
xchg
mov
iret
jb
aam
adcb
mov
cmc
push
or
stos
icebp
mov
pop
add
add
loopne
pushf
outsb
adc
mov
rorl
push
jo
push
mov
data16
mov
cmp
shr
push
xor
or
stc
outsb
inc
sbb
lret
xchg
outsb
and
popf
loope
lahf
mov
inc
out
mov
bound
sbb
push
cmp
add
xchg
cmpsl
pushf
dec
sbb
xchg
cmp
stos
mov
mov
cmp
pop
push
jae
inc
imul
or
test
push
pop
pop
jno
adc
mov
lret
idiv
rcrl
pop
out
xchg
xchg
cmp
clc
sub
lahf
adc
sbbl
stos
shll
sub
loope
and
icebp
insb
loop
roll
pop
inc
add
jne
pop
push
or
mov
shr
xchg
leave
stos
sub
inc
lahf
sub
cmpsl
jns
std
dec
js
inc
xor
xchg
daa
lds
pop
xchg
mov
lret
test
icebp
xlat
or
jne
adc
stos
lret
mov
pop
jnp
lods
bswap
movsb
into
fmull
leave
pop
insb
inc
insl
imul
in
shlb
push
jb
fdivs
push
lcall
out
sub
jns
out
add
jl
xchg
cmp
lretw
ret
mov
sbb
pop
mov
insl
enter
dec
mov
popa
mov
jecxz
lods
sub
push
adc
pop
or
out
lret
xchg
inc
fdivr
stc
js
inc
dec
push
pop
outsl
mov
std
push
loopne
add
inc
daa
inc
sti
cli
mov
out
push
sub
push
push
outsb
lods
lret
fbld
stc
lret
loop
lret
adc
pop
dec
clc
mov
out
lods
movsl
cmpl
sbb
mov
dec
push
or
mov
movb
ja
push
test
xchg
and
pop
xor
adc
lea
xchg
xchg
ret
cmp
enter
mov
arpl
mov
pop
push
xchg
jb
jo
test
mov
clc
aad
adc
adc
jmp
sub
test
push
adc
dec
and
lods
sbb
js
arpl
dec
adc
fdivrp
push
ljmp
lea
fmull
stc
cmpsb
xor
negl
sbb
cld
lock
in
lds
lret
or
cmc
ljmp
sbb
add
sbb
daa
pusha
aam
lret
sub
arpl
scas
rcrl
loop
jle
out
scas
daa
imul
lea
mov
lds
cmpsb
dec
mov
pop
jo
push
pop
add
inc
inc
sbb
sbbb
push
mov
mov
push
jae
cmp
adc
sbb
cld
stos
jmp
out
push
adc
dec
push
jmp
in
fcomi
divl
sub
data16
stos
dec
pop
inc
outsb
mov
int
in
cmc
jae
aam
addr16
shrl
or
sub
mov
sti
in
into
dec
adcb
insl
jb
cltd
shll
iret
decl
mov
xor
sbb
cmp
and
cmp
test
sbb
inc
pusha
addb
outsb
repz
cwtl
je
mov
scas
or
cmp
fdivr
lea
ficoml
sub
jae
xchg
lods
out
inc
pop
cmpsb
imulb
test
popf
popa
inc
cmp
cmp
stos
xchg
xor
add
cmp
cmp
stos
lods
xchg
push
rcr
jb
inc
ret
dec
mov
jge
stos
shll
push
jnp
cld
dec
adc
pushf
fsubl
push
pop
pusha
push
xchg
jne
pop
movsb
sub
jle
test
or
sarb
add
aad
fmuls
add
xchg
aad
scas
imul
shl
mov
inc
add
sti
push
xchg
dec
arpl
in
mov
jp
mov
int3
test
push
jp
mov
push
test
es
pop
xor
lds
or
mov
repz
xor
insb
popf
pop
cmp
inc
icebp
jg
lret
push
ret
add
int
imul
push
out
dec
adc
cld
jmp
in
add
add
cmp
cmp
xchg
cmp
in
mov
xchg
insb
add
inc
mov
mov
pop
inc
jo
leave
push
out
leave
inc
sbb
scas
aad
pop
inc
mov
xchg
and
mov
repnz
cmpsb
test
dec
and
add
and
add
pop
lods
pop
xlat
pop
loop
or
sub
jnp
or
aam
cmpsl
push
xchg
dec
mov
lret
addl
pop
mov
cld
cmp
push
inc
cs
aas
xchg
cmp
push
add
cmpxchg
xor
pop
push
je
push
dec
shll
mov
xor
sub
pusha
or
dec
into
jae
clc
or
xchg
sbbb
jge
ret
cmp
test
inc
jl
mov
jmp
les
or
outsb
inc
xchg
mov
daa
mov
mov
imul
xchg
sbb
or
fstpt
pop
aam
stos
push
dec
mov
sahf
pop
sub
jmp
pusha
jno
sbb
pop
fistps
sub
and
lods
sub
mov
jo
loope
push
int
add
test
jmp
movsl
push
xlat
lods
aam
and
data16
mov
scas
leave
out
repz
and
pop
bound
mov
fcoml
push
shrl
sub
fwait
mov
push
aad
dec
xor
sub
frstor
jmp
inc
or
xchg
push
sti
push
movsb
xchg
stos
rep
add
cs
mov
popf
aad
dec
out
cld
loopne
loop
jmp
mov
inc
cmp
dec
int
mull
mov
push
jl
xchg
dec
mov
out
xor
les
out
xor
ldmxcsr
mov
movsb
mov
repnz
aas
lcall
std
jge
and
iret
bound
mov
sub
jae
ret
mov
mov
push
add
in
xchg
in
or
dec
pop
mov
dec
fwait
aas
mov
pop
movsl
dec
mov
cld
addr16
ja
and
pop
movl
cmp
test
fbstp
sahf
int3
jl
dec
rorl
idivl
jecxz
popa
lea
sub
mov
sbb
fdivl
in
fimull
popa
inc
pop
imulb
sbb
xorb
dec
ja
fcmove
ds
inc
nop
and
out
scas
dec
dec
pushf
dec
jnp
stos
test
sarb
in
dec
sub
xchg
jge
outsl
repz
mov
scas
clc
pushf
popf
dec
pop
in
dec
and
scas
lock
fs
jge
in
mov
sub
aaa
lret
lods
in
fcompl
xor
xor
or
in
in
insb
xorl
shl
das
mov
xchg
mov
jge
shrl
mov
push
aaa
xlat
jno
aaa
or
in
sub
nop
dec
lret
mov
bnd
xchg
mov
out
and
lods
lret
pop
sbb
leave
jle
fsubr
push
cwtl
cmpsb
mov
sbb
jno
out
fdiv
aas
hlt
inc
sub
mov
jae
insl
cmc
adc
lret
lahf
mov
sahf
imul
es
push
sub
sub
lar
xor
and
cmp
jb
and
fcmovnbe
cwtl
mov
jnp
jecxz
and
dec
push
mov
pop
mov
push
add
cmp
dec
mov
mov
jmp
call
loope
jb
stos
xchg
fdivrl
out
int3
xchg
jle
lea
rcr
push
jg
inc
and
mov
dec
lret
aad
cld
pop
test
movsl
scas
jp
popf
lods
lcall
int3
cmp
out
movb
daa
add
in
xor
mov
lds
repnz
jae
pop
loop
les
mov
jle
push
mov
shr
test
jns
fstl
out
and
xchg
call
mov
mov
dec
mov
inc
mov
xor
cli
aam
and
int
shll
inc
sub
jns
push
sahf
push
pop
fistps
mov
jns
daa
push
xchg
xchg
push
sbbb
nop
sub
mov
cmp
or
clc
les
sub
lret
test
sub
sub
mov
jo
ja
and
dec
test
dec
lock
mov
xchg
push
mov
bound
imul
adc
lock
pop
xchg
xor
or
dec
inc
in
push
loope
push
fdivl
aaa
fwait
pop
dec
mov
inc
sbb
out
dec
push
sbb
in
dec
pop
imul
aas
sub
popf
xchg
xchg
xchg
dec
repz
popf
mov
xor
mov
fcomps
mov
ja
jb
pop
aam
pop
cmp
and
xor
sbb
and
ja
mov
cld
je
in
sub
lock
bound
xchg
inc
aaa
std
and
jno
rorl
pop
sbb
testl
aad
jns
out
ljmp
ud0
out
test
es
jmp
movsb
xchg
xchg
and
inc
pusha
loope
arpl
ror
xchg
fstps
nop
pop
lock
movsl
mov
cmpsb
jl
es
lahf
dec
ret
dec
mov
jle
cmp
dec
or
xor
and
std
jg
insl
repz
ss
aam
jne
jge
das
in
mov
repnz
push
push
fidivrs
xor
push
sahf
sbb
int3
and
and
mov
push
out
jno
scas
lods
adc
rep
dec
jbe
aaa
ror
shll
cmp
pop
popf
stc
or
pop
pop
shll
inc
or
xchg
xchg
test
and
sbb
das
es
jecxz
pushf
aad
sbb
sub
pop
cwtl
push
jge
mov
mov
addr16
leave
loopne
out
mov
jecxz
or
xlat
jp
add
lock
mov
jb
mov
pop
xor
out
xor
push
adc
dec
xchg
cmpsl
leave
adc
push
add
xlat
or
or
add
fs
neg
pushf
xchg
scas
inc
mov
fstps
daa
std
mov
push
dec
add
cs
jnp
mov
inc
xchg
aas
fst
xor
pop
mov
mov
movsl
movsb
test
dec
les
jns
idivb
fdivl
ljmp
hlt
push
cmp
sub
insl
aaa
popa
sub
outsl
jge
cmp
sbb
sbb
sub
mov
lods
sarb
jns
dec
pop
lret
pop
cld
push
lods
pop
and
daa
xchg
mov
in
int3
ljmp
loope
int3
je
jp
ror
inc
leave
push
jno
pop
adc
out
fucomp
out
mov
mov
push
fimuls
aad
sbb
add
repnz
cmpb
cmpsl
adc
movsl
push
cwtl
sub
jbe
jne
xor
mov
iret
in
pop
nop
iret
cmp
hlt
call
inc
test
or
iret
mov
or
leave
pop
cmpsb
xchg
jns
js
pop
aas
lret
xchg
faddp
ret
fldenv
sbb
dec
mov
fisubrs
popf
imul
inc
call
mov
popf
out
leave
push
sti
sub
mov
pop
cmpsl
xchg
int
rclb
pop
jo
std
mov
add
pop
test
jle
lret
mov
lret
fs
mov
inc
xorl
add
xchg
inc
mov
mov
loopne
and
xchg
push
cmp
cli
insb
dec
cli
pop
subl
inc
sti
popa
out
mov
xor
out
ret
fwait
dec
adc
and
fsubp
int
imul
fdivr
xchg
jae
push
cwtl
push
xor
inc
jo
add
push
xchg
xchg
fidivs
jno
in
sbb
cmp
mov
pop
sbb
xor
fnstenv
arpl
pop
cmp
ret
jns
inc
mov
dec
mov
repz
outsb
mov
fs
int3
mov
hlt
lock
mov
adc
sub
or
inc
xor
and
xchg
sub
or
mov
xchg
push
mov
xlat
faddl
inc
rorb
shll
push
mov
pop
cmp
out
mov
mov
push
add
cltd
xchg
les
adc
dec
mov
cltd
lds
xor
out
shll
adc
xor
sbb
jle
cmc
mov
daa
repnz
jle
fisubrs
or
jecxz
push
aam
cmpsl
sbb
in
movsl
neg
hlt
adc
pushf
mov
pop
repnz
pop
cld
dec
add
adc
sti
jo
cltd
mov
cmpb
cli
add
push
cmp
test
inc
push
push
push
adc
sub
insb
or
cmc
pop
loope
push
xor
xor
xor
fnstcw
jle
add
push
pushf
mov
out
inc
jno
dec
adc
mov
and
xor
les
xor
jne
std
enter
aad
ds
jb
inc
mov
fucomip
and
pop
push
or
rolb
xor
mov
jg
and
and
aaa
push
imul
xor
xor
sbbl
outsl
adc
ja
sti
and
jg
cmp
insl
sub
test
inc
mov
bswap
shr
loop
fmull
test
aad
push
mov
pop
stc
test
rorb
aam
or
mov
mov
insl
mov
fdivrs
lret
and
pop
pop
pop
shlb
mov
jbe
mov
sbb
cmp
adc
imul
dec
outsb
push
rclb
out
or
mov
sti
aaa
sbb
bound
loopne
adc
rcrb
in
out
sti
xchg
dec
cs
inc
je
pushf
push
adc
add
lea
xchg
aas
iret
sub
adcb
mov
pusha
cmp
mov
and
daa
sub
lock
enter
neg
into
int
jge
mov
or
cld
push
mov
sub
mov
subl
daa
jmp
imul
imul
iret
pop
jg
lret
mov
jne
sarb
xor
xchg
or
ss
jns
scas
lods
fisttpl
das
xorb
inc
out
call
je
or
into
add
shlb
or
add
mov
les
and
aas
sbb
or
aaa
popf
ficomps
aad
dec
lcall
add
cmpsl
sahf
cs
push
mov
pop
or
mov
xorl
xorl
ss
mov
jmp
cld
loop
fs
adc
lods
or
sahf
cli
fwait
lea
in
das
push
clc
jnp
movsb
mov
pop
outsb
inc
push
jae
sub
orl
add
js
lock
loopne
outsb
jl
sub
into
mov
aad
gs
cmp
push
sbb
mov
pop
js
push
jge
xor
lahf
shrl
inc
daa
jbe
mov
push
cltd
test
adc
xchg
testb
shrb
daa
add
pop
pushf
clc
xor
andl
loope
xchg
arpl
dec
push
aam
push
nop
loopne
testb
xchg
mov
stos
imul
jmp
xchg
imul
adc
jp
xlat
mov
pop
push
sub
bound
xchg
sahf
int3
inc
mov
adc
or
and
rcr
insl
push
push
mov
sarb
fdivrs
jo
sub
cld
mov
es
scas
or
aad
push
push
xchg
cmpsl
xchg
mov
lds
fwait
mov
clc
loope
inc
mov
pop
dec
adc
push
push
in
sbb
cwtl
pop
test
lods
cmpsl
int
mov
sub
inc
mov
cwtl
lea
aas
fimuls
xor
test
test
roll
cmp
into
ret
mov
mov
jp
nop
out
outsb
adc
xchg
insl
sub
jno
jle
negl
je
imul
sub
xchg
push
popa
and
pop
incb
cs
jl
shlb
add
and
mov
pop
add
mov
bound
lods
dec
fmuls
pop
push
adc
jle
cmc
adc
mov
push
pop
mov
ss
bound
mov
addr16
mov
mov
mov
aad
mov
popf
xor
and
jns
mov
scas
pop
shlb
lahf
cld
push
cmp
mov
or
xchg
jb
jo
sub
or
stos
cltd
mov
stc
sbb
or
popa
xchg
int
jg
xorl
mov
imul
jbe
out
push
out
pusha
icebp
cmpsb
xor
mov
ljmp
loopne
adc
popfw
out
gs
cmp
stos
iret
dec
std
add
add
sub
pop
push
out
out
sarl
adc
mov
pop
fstps
cltd
lret
pop
lahf
xor
cmpl
or
jbe
push
and
dec
jg
jp
jb
add
xchg
xor
cli
mov
mov
xchg
lock
sti
jl
imull
jne
mov
pop
lcall
scas
nop
adc
inc
fidivs
dec
mov
jb
stos
repnz
or
insb
xor
and
pop
test
je
mov
adc
fwait
scas
ljmp
pop
and
in
cld
cld
insl
xchg
pusha
mov
sbb
sub
jmp
and
jne
jle
xor
test
mov
test
push
or
mov
cmp
movsb
daa
mov
lahf
inc
push
xor
filds
pop
test
movsl
cli
sub
lods
lea
in
sub
push
mov
sbbl
or
jl
add
push
outsb
dec
loope
popa
mov
bound
repz
mov
push
pop
jns
aam
xchg
lea
cmp
mov
shll
pop
adcl
xchg
add
out
imull
pop
int3
imul
mov
cmp
daa
mov
xor
fwait
test
push
repz
cmc
out
add
shrl
or
mov
call
push
cld
lss
mov
aad
test
jle
stc
mov
int
aaa
in
lcall
lods
xchg
imul
outsl
mov
mov
inc
push
dec
out
ret
je
inc
xor
ss
or
xchg
insb
loop
jbe
or
mov
jo
loop
movsl
pop
sbb
out
mov
ror
and
int
rol
jle
or
add
scas
push
insb
jge
pop
insb
xchg
and
adc
mov
inc
or
cs
mov
mov
scas
es
mov
mov
push
add
xchg
xchg
rorb
xchg
pusha
fstpt
lea
ds
add
jp
in
push
cmp
add
lahf
or
cmp
arpl
sub
and
mov
and
xchg
jnp
sbb
mov
and
ja
xor
jne
rclb
xchg
testl
ss
out
and
test
dec
jnp
scas
mov
in
test
cmpsb
push
cmp
and
insb
push
int
jae
mov
loopw
mov
pop
sub
adc
push
out
sarl
mov
jo
jmp
adc
or
es
mov
dec
inc
enter
mov
lods
inc
mov
pop
out
insl
xor
and
arpl
jo
cmpsl
in
or
stc
and
mov
cmp
pop
in
rcrb
notb
mov
enter
push
or
mov
sub
das
dec
mov
incb
outsb
cmpb
pop
rclb
outsl
inc
loope
mov
mov
and
shll
stc
inc
xchg
jg
xor
push
push
inc
fucomi
movsl
imul
insb
in
xchg
fcomp
rcr
mov
lds
out
jo
sbb
aas
scas
orb
xchg
shlb
xchg
or
movsb
sbb
cmpsb
pop
adc
dec
inc
lea
xor
cmp
pop
stos
aam
adc
lret
loopne
rcrl
xchg
mov
push
fisttpll
test
mov
xchg
or
mov
fbld
dec
push
add
fistpl
sub
mov
cmpb
inc
push
ret
aam
cmp
sub
cltd
sbb
sub
bound
scas
and
mov
cs
int
pusha
outsl
sub
es
movsb
sub
leave
lods
push
lds
aas
or
pop
mov
push
push
inc
mov
jl
ljmp
xchg
pop
jl
xchg
xchg
insl
mov
cmc
test
xchg
pop
and
nop
out
shlb
inc
sbb
adc
shlb
sbb
aad
push
insl
xorl
mov
lret
insb
add
mov
mov
inc
inc
in
loop
sbb
jno
pop
inc
popf
dec
aad
stc
pop
out
jle
lcall
jo
cmp
movsb
iret
mov
insw
pop
std
xchg
negl
pushf
mov
push
mov
jmp
out
loop
dec
jne
or
add
mov
dec
test
bnd
hlt
in
dec
lods
push
lcall
cs
add
pop
mov
push
mov
in
adc
cltd
mov
cltd
adcl
jb
les
insl
sub
in
sbb
test
sbb
mov
mov
fsubs
inc
cltd
inc
or
fucom
jne
jne
add
fstl
adc
or
xchg
xor
shlb
and
sbb
imul
jp
xchg
push
mov
adc
inc
into
aaa
insb
bound
fstps
std
or
movsb
inc
addr16
sbb
pusha
add
dec
setge
aas
fildll
les
mov
fs
inc
test
lahf
repz
out
xchg
out
pop
mov
cmpl
sbb
loope
je
shl
sub
cmc
cltd
jnp
dec
add
int
test
incb
jmp
sarb
test
fwait
adc
outsl
lret
jp
xor
leave
icebp
daa
or
imul
ja
mov
int3
clc
mov
insl
repnz
mov
dec
jle
cmp
xorl
cmp
add
rcrl
in
lea
cmp
jo
lahf
push
adc
pop
push
xchg
mov
sbb
int3
sbb
bound
dec
mov
mov
sbb
stos
movsl
pop
test
mov
dec
and
sbb
fildl
push
xor
push
and
pop
insl
add
xor
pop
xchg
insl
sbb
jbe
cli
ja
cmpsl
addr16
mov
lods
sbb
mov
fnsave
dec
pop
imul
and
divl
stos
subl
pusha
cmp
movl
out
xchg
cmp
dec
les
int3
popf
cmp
test
jae
aad
lods
dec
je
dec
std
dec
lods
xchg
adc
mov
out
pop
mov
movsb
iret
rorl
jae
sub
cli
and
push
jecxz
movsl
jnp
mov
xlat
jbe
das
xor
rol
shlb
mov
adc
jnp
sub
pop
dec
mov
xchg
pop
movsl
mov
jecxz
add
or
in
or
lret
es
shrb
cs
test
jl
inc
aad
mov
jae
ret
push
jge
dec
add
push
rcll
sub
popf
out
stc
dec
xor
jle
xchg
lods
aaa
ja
jle
rcrb
dec
outsl
add
and
or
aas
arpl
push
enter
jae
test
dec
in
stos
cmp
iret
cmp
xor
outsb
and
in
in
adc
std
jmp
pusha
push
out
jg
negb
mov
sub
xchg
push
test
push
xchg
ret
or
in
adc
push
dec
xor
out
cld
sub
into
andb
imul
lods
push
std
in
out
xchg
inc
cmp
fnstsw
loop
cli
push
cmp
hlt
jbe
adc
sub
inc
out
aad
and
aam
push
xchg
shll
push
lods
movsl
out
in
pop
or
mov
dec
xchg
cmp
hlt
test
xchg
and
inc
pusha
dec
xchg
inc
dec
jbe
inc
lret
test
mov
pop
sbb
mov
adc
cmp
test
fcmovbe
push
mov
pusha
loop
in
sarl
cmp
pop
pop
push
mov
push
stc
fldl
fistpll
lret
in
nop
test
mov
push
add
sbb
repz
fiaddl
es
lea
scas
je
jmp
push
bound
dec
pop
dec
rcrl
xor
or
dec
add
js
jl
pop
xor
dec
fcompl
js
fwait
mov
push
decb
pushf
mov
call
stc
push
or
dec
inc
nop
xchg
jg
out
mov
aad
xchg
xor
mov
gs
call
imul
call
xor
or
iret
in
xor
push
pop
test
scas
popa
daa
lods
movl
movsb
ljmp
rcrb
js
leave
pop
ss
mov
jmp
orl
hlt
jo
les
xchg
test
das
push
dec
dec
xor
jge
pop
out
cmp
xor
ficompl
jp
arpl
mov
cmp
xchg
sub
mov
xchg
fimull
clc
bsr
insl
xchg
rcll
add
inc
lock
into
inc
xchg
cli
lcall
rcrl
in
inc
jl
inc
jge
xlat
out
std
sbb
or
adc
sbb
push
add
inc
out
pop
lock
out
and
pop
fwait
mov
out
aad
mov
or
dec
jns
mov
cmpl
xchg
inc
jl
xor
subl
mov
pop
insl
mov
out
outsl
aad
bound
test
mov
and
out
mov
sub
xchg
test
adc
adc
stos
sub
pusha
add
lods
and
pop
icebp
mov
xchg
lret
jnp
scas
mov
push
dec
fcoml
push
sub
lock
loopne,pt
or
inc
mov
push
pop
sbb
xchg
es
fcomi
adc
add
xchg
inc
arpl
popf
nop
add
hlt
or
mov
pop
push
jns
xlat
xchg
fwait
mov
filds
xchg
fcomip
int
scas
jl
mov
out
mov
jbe
roll
faddl
push
mov
inc
repz
dec
fcomp
lds
mov
scas
or
sub
cmp
idivb
mov
outsb
add
int
xchg
mov
in
ljmp
outsl
je
mov
jecxz
xchg
test
sbb
push
sbb
loop
pop
fistl
insb
aaa
xlat
pop
add
inc
xchg
stos
sbb
icebp
dec
adc
jecxz
leave
or
xchg
xchg
aad
jns
add
into
out
inc
xor
aaa
mov
test
mov
sahf
mov
fstp
mov
mov
das
mov
loope
dec
ss
stos
add
mov
jo
sub
mov
call
ljmp
adc
call
add
sbb
sti
or
jge
add
lock
in
push
push
cmp
in
lret
push
call
int3
jmp
cli
pop
std
sti
dec
xchg
fiadds
xor
mov
adc
mov
dec
cld
pop
dec
lret
loopne
dec
and
mov
mov
or
mov
stos
jecxz
jae
xor
adc
mov
subb
rorl
aaa
push
add
add
sbb
fists
scas
stos
je
ret
rcrl
jecxz
add
cmpsl
add
and
scas
dec
shr
cld
dec
pop
mov
in
xor
jle
jae
nop
add
or
mov
enter
mov
dec
or
rorb
inc
sbb
adc
inc
jae
cmpsl
sbb
jge
iret
les
repnz
iret
rorl
sti
popf
xchg
mov
js
popa
cs
pop
outsb
dec
jecxz
inc
cltd
mov
cmpsb
js
dec
cmp
push
sub
inc
hlt
cwtl
icebp
cmp
lea
or
xchg
dec
jbe
je
and
cmp
in
sbb
lods
xchg
repnz
rolb
dec
add
add
and
adc
dec
or
add
popl
pop
in
xorb
rol
movb
sub
pop
mov
rorb
bound
test
dec
adc
jg
xlat
push
dec
inc
dec
ss
cli
xor
inc
loope
sarb
loope
pop
jae
xchg
ss
sub
stos
rorb
jmp
dec
jnp
stos
jnp
sub
add
outsb
out
xor
xor
aas
dec
push
mov
les
adc
cmp
mov
pop
fdivrs
data16
shll
add
roll
xchg
fistpll
mov
icebp
pop
xor
xchg
stc
inc
pop
in
cmp
push
xchg
mov
insb
jmp
lds
call
xlat
aam
movsb
scas
int
clc
jbe
add
mov
mov
int3
xchg
xchg
sbb
and
imul
pop
add
sbb
jge
jp
dec
mov
test
push
inc
xchg
add
or
lock
push
mov
xorl
mov
xchg
jno
inc
cmpsb
in
jp
adc
pop
test
add
lcall
imull
mov
popf
cmp
and
and
xor
fimull
pop
cmpsb
jbe
test
and
jbe
pop
add
scas
push
add
sarl
popf
test
imul
sub
add
mov
lahf
jae
xor
fidivs
adcl
mov
push
cwtl
cmp
mov
xchg
call
mov
sub
pusha
push
imul
clc
mov
lahf
shr
les
icebp
pop
xor
mov
mov
insl
pop
into
xchg
jns
cmp
cmp
test
mov
imul
mov
pop
add
and
daa
inc
jmp
xchg
inc
testb
dec
flds
pushf
outsb
push
xchg
mov
inc
pushf
sbb
xchg
cmp
dec
cmc
dec
cmp
out
mov
xchg
inc
jge
fsubrl
les
in
mov
loopne
push
and
cwtl
xchg
int
popf
jge
push
hlt
push
scas
cmp
mov
xchg
mov
mov
lds
inc
imul
call
mov
adc
mov
xchg
jmp
dec
xor
cmp
outsl
test
outsb
mov
dec
fcomp
fdivrs
lcall
adc
scas
or
adc
jnp
xchg
into
inc
dec
push
out
lret
or
jae
jne
repnz
pop
jns
cmp
push
xor
adc
xlat
mov
mov
push
js
xchg
test
push
mov
jo
popf
sti
lea
push
or
xor
std
scas
push
mov
les
xchg
mov
inc
addr16
stos
lret
lcall
je
icebp
and
cmc
daa
sub
sbb
aad
mov
add
xor
mov
add
repz
inc
fistps
dec
push
lret
loope
shrb
mov
lahf
jl
dec
loop
jno
xchg
or
adc
push
mov
jmp
cmpsb
dec
xor
hlt
test
lea
push
imul
and
xchg
outsl
stos
cmp
cmp
int3
mov
jo
in
aad
out
out
notl
mov
outsb
out
movsl
cmp
inc
leave
or
xor
jbe
pop
lea
mov
jnp
sbb
or
nop
dec
push
push
add
jae
faddl
jno
inc
mov
mov
aaa
imul
dec
add
notb
lret
fnstsw
inc
lret
add
stos
cmp
jle
jg
and
pop
test
xchg
fsubrl
aas
and
pop
scas
aaa
mov
push
sbb
pop
in
and
dec
nop
or
xchg
fcompl
shlb
xchg
std
aas
out
repnz
jno
sub
mov
xchg
pop
and
xchg
jmp
sbbb
or
xchg
stos
fcomp
xchg
sbb
jnp
stc
mov
inc
xor
pop
pop
push
sarb
jno
inc
addr16
pop
jne
lds
dec
sub
mov
lods
out
in
mov
enter
pop
hlt
dec
push
mov
ds
imul
popf
scas
and
inc
das
lret
jno
mov
mov
orl
adc
jmp
movsl
pop
pop
test
and
fistl
xchg
imul
aas
leave
cmp
movsb
popa
jno
fisubrs
in
inc
push
mov
mov
pop
push
inc
fnstsw
push
sti
std
xchg
into
push
bound
enter
cmpsb
shr
cmp
ja
in
fstpt
fcmovu
push
outsb
or
jp
mov
stos
out
push
xlat
outsl
xlat
test
push
rclb
inc
data16
in
xchg
inc
lret
mov
jmp
and
fstps
mov
mov
xchg
fsubr
adc
ja
mov
addr16
rcll
cld
out
arpl
cmp
addr16
jp
aas
xchg
mov
xor
test
cmp
cmp
mov
shll
mov
int
pushf
addr16
popa
mov
out
mov
sarl
jbe
cld
push
cmc
repnz
mov
adc
js
hlt
lock
subb
clc
or
cmp
jmp
out
sbb
sbb
xchg
and
lds
xor
xchg
aam
leave
jmp
cmp
and
and
arpl
push
icebp
lods
jb
cmc
pop
mov
outsb
mov
mov
out
ljmp
jecxz
addr16
mov
loopne
xlat
loopne
cmp
scas
adc
push
adc
test
rorb
fidivl
fistpll
sub
xorb
xchg
cli
add
jg
or
popf
xchg
and
mov
aaa
cld
pop
pop
mov
imul
rclb
jae
fldcw
add
push
call
lret
imul
repz
inc
aaa
xchg
mov
jns
xor
push
mov
mov
dec
imul
dec
mov
stos
sub
cli
testb
sub
add
insl
mulb
clc
jne
bound
jle
mov
and
mov
stos
mov
lods
jbe
not
cs
jg
cld
nop
gs
ret
push
movsb
jo
adc
mov
lcall
insb
xor
dec
or
and
movsb
sbb
pop
mov
inc
ja
push
les
or
aad
dec
dec
inc
loop
stc
cmp
and
aad
into
or
cwtl
mov
sub
lea
cmp
pop
imul
cmp
aad
add
sbb
sub
adc
shl
stc
in
xor
mov
add
pop
jmp
adc
cmp
das
xor
repnz
adc
notl
jp
and
call
pop
vzeroupper
mov
dec
sub
negl
nop
mov
xchg
std
and
lods
sub
imul
xor
sub
popf
je
fldcw
fcmovb
int3
mov
and
out
ret
sub
or
jecxz
jmp
xchg
mov
cs
pushf
push
sbb
jmp
data16
jmp
fisttpl
movsb
sub
es
push
rclb
xor
dec
push
mov
mov
dec
fs
dec
mov
and
in
sbb
mov
xorl
add
sub
and
mov
divb
insb
cmpsb
in
stos
mov
push
inc
dec
cmp
dec
fidivrs
xor
enter
add
mov
scas
cmp
add
push
scas
aas
or
insl
adc
lea
add
xchg
clc
and
push
or
jg
jne
dec
out
arpl
push
mov
adc
sbb
sti
push
mov
hlt
dec
inc
add
sbb
mov
adc
xchg
jle
cmp
daa
scas
fiaddl
xchg
push
cmpsl
jp
mov
push
shr
push
movsl
js
ljmp
test
xor
xlat
inc
mov
or
sbb
inc
fisubl
adc
push
fidivs
pop
adc
icebp
xchg
pop
rcl
mov
inc
dec
dec
fs
nop
pusha
in
rcrl
scas
stos
mov
push
dec
lea
jnp
push
popa
adc
jmp
mov
xchg
sbb
into
mov
push
scas
adc
or
cmp
cmp
xchg
sub
mov
sti
imul
hlt
iret
jb
shlb
loop
adc
mov
mov
dec
sub
neg
fcomps
gs
iret
xorb
push
lds
mov
out
and
and
out
rorb
jnp
outsl
ds
jp
xchg
pop
leave
cmp
mov
rcrl
pop
cmp
fcomps
lods
sub
inc
int3
shll
mov
and
push
fimuls
pop
mov
xor
pushf
or
jmp
movsb
push
pinsrw
fnstenv
mov
push
pop
dec
out
jle
and
dec
shlb
mov
xor
jmp
and
je
insb
inc
int3
fs
mov
aam
or
push
cmp
scas
jecxz
addr16
data16
enter
into
arpl
and
fld
mov
outsb
scas
sbb
mov
inc
pop
jl
aaa
mov
mulw
stc
and
movsl
stos
mov
pop
add
jae
ret
mov
sti
into
mov
out
addb
xor
and
popl
repnz
lods
jno
xor
fildl
outsb
mov
test
lret
sti
lret
int3
xor
push
sbb
mov
insl
mov
dec
sbb
add
or
and
inc
or
leave
repz
aad
int3
jl
icebp
cmp
add
inc
inc
out
push
popf
or
enter
ffreep
fadds
cmp
rorb
mov
test
testl
mov
shll
lcall
repz
scas
cwtl
add
lret
add
cmpsl
xorb
sti
mov
dec
pop
pop
cmp
cmp
and
pusha
xchg
lea
dec
add
mov
mov
js
dec
mov
jl
sub
shrb
gs
in
dec
dec
push
cmp
insl
fs
sub
push
inc
dec
jne
sub
xor
or
pop
adc
inc
jbe
jg
push
mov
jg
iret
jl
aad
les
mov
repnz
ds
mov
hlt
inc
lock
mov
xchg
sbb
xor
inc
imul
jecxz
add
xor
mov
sarl
ljmp
and
pop
xor
inc
cmpsb
lock
clc
xor
cs
fstps
push
dec
loop
sbb
jb
cmp
jl
pop
jle
cmpxchg
insl
js
fstps
push
negb
or
push
or
sbb
rorb
incl
dec
inc
idiv
lret
adc
rorb
cmp
mov
pop
rclb
ja
or
xchg
inc
loop
jb
addr16
clc
jp
jne
inc
cmp
mov
cmp
rolb
outsl
pop
dec
and
into
inc
mov
cmp
add
inc
mov
mov
movl
ficompl
lea
aaa
sbb
xor
cmp
sub
inc
sub
add
sti
dec
imul
or
rorl
xor
mov
push
adc
iret
je
in
xchg
mov
sbb
xchg
mov
enter
divb
cltd
sbb
lcall
pop
movsb
pusha
lock
mov
push
bound
xor
jle
fdivl
fcomp
aad
or
or
int3
repnz
lods
ja
mov
decb
pop
mov
ja
dec
stos
or
out
adc
fstpt
dec
sub
push
sub
adc
insl
dec
mov
popf
adc
add
push
mov
push
cmpsl
mov
imull
ljmp
xor
mov
xchg
xor
mov
mov
std
test
fiaddl
ss
mov
inc
arpl
add
divl
cmp
sub
sbb
cmc
enter
in
lods
out
das
cwtl
sbb
mov
push
sub
mov
mov
xchg
mov
std
lahf
sbb
jno
fcompp
push
fdivl
insb
loope
and
mov
out
or
mov
mov
mov
sar
sahf
jg
std
jl
mulps
cmp
sub
addr16
sar
imull
sbb
ret
ret
sbb
cmp
xor
imul
imul
cmc
ret
dec
push
mov
cmpsb
hlt
scas
jl
sub
cmp
cwtl
mov
repnz
ds
hlt
xchg
mov
mov
push
pop
nop
pop
push
in
adc
fwait
inc
inc
jbe
jmp
xchg
int3
adc
xchg
sbb
ret
pop
pop
lods
add
jecxz
rorl
test
adc
sub
mov
jno
mov
xor
mov
xchg
inc
jb
lods
popa
mov
push
add
dec
push
call
jg
add
xchg
jo
mov
xchg
and
ret
lahf
lahf
inc
data16
inc
aam
fmul
jecxz
cs
pop
inc
test
cmp
push
stc
dec
sbb
jge
es
mov
in
roll
mov
subl
jns
mov
inc
cld
mov
ds
stos
sub
mov
pusha
xor
pop
imul
andl
push
push
in
aaa
repnz
xlat
aaa
stc
scas
mov
xor
les
popa
ja
jbe
push
mov
mov
mov
std
add
mov
cmp
jae
mov
sbb
into
mov
aaa
fadds
adc
daa
and
ja
pop
push
fistps
insl
xchg
outsb
push
add
fcoms
or
loop
inc
es
cmp
mov
push
cmc
iret
lcall
and
fsub
insl
fstp
pop
push
movsb
xchg
xor
incl
lret
mov
jbe
push
and
stos
push
mov
pop
xor
push
repnz
rorl
and
mov
lods
add
lea
xor
sbbl
jbe
mov
pop
jbe
dec
sti
dec
sub
inc
ret
int3
pop
or
and
enter
adc
cmp
push
sub
cmp
ljmp
sbb
scas
and
dec
inc
mov
fdivs
mov
inc
mov
mov
imul
icebp
mov
aaa
rolb
push
adc
mov
inc
lret
je
imul
dec
push
push
faddl
mov
mov
bound
cwtl
stos
ss
xor
xor
addr16
lds
ret
sbb
ljmp
in
aaa
in
mov
jg
push
inc
decb
subl
std
lods
ficomps
jl
push
js
fldenv
aam
ret
sbb
dec
addr16
dec
mov
xchg
jl
cld
mov
pop
sub
in
adc
push
adc
ja
repz
test
pop
aam
pop
adc
test
test
inc
mov
and
out
or
aam
xor
dec
pop
xorb
mov
or
dec
xorl
out
gs
xlat
mov
fs
repz
mov
and
and
lock
mov
and
fdivrs
insl
inc
mov
adc
push
ret
aam
iret
cmp
cmp
movsl
into
and
inc
jnp
inc
repz
mov
fildl
cld
jmp
mov
sbb
mov
cmpl
push
or
dec
dec
test
add
sub
sbb
shlb
pop
jae
inc
and
xor
lods
xchg
xchg
or
lahf
mov
mov
xorb
or
insb
push
or
mov
int
add
push
mov
aad
mov
mov
mov
add
leave
fists
call
pop
cpuid
repnz
mov
sbb
loop
add
mov
sti
jbe
fistpll
jns
mov
xor
xchg
mov
scas
or
xrelease
movsb
dec
cld
push
gs
inc
push
sub
idivl
sbb
xchg
add
gs
and
pop
cli
jno
jp
movsl
fs
push
pop
scas
mov
and
cltd
dec
out
push
cmp
mov
or
jb
stc
sub
or
and
sbb
in
and
adcb
push
aas
and
int3
pop
lds
mov
mov
hlt
mov
pop
adc
dec
incl
ficomps
fisttpl
dec
push
mov
ds
mov
push
adc
xchg
call
add
pop
test
or
icebp
push
mov
mov
xchg
jge
cmc
int3
sub
jl
aad
inc
sub
xchg
aaa
into
cmp
sbb
mov
sbb
xchg
inc
mov
sbb
or
cld
mov
mov
fcompl
insl
incl
cmpsl
mov
in
adc
jmp
shll
ja
es
daa
push
sbb
sub
push
imul
bound
fists
fbld
lret
mov
pushf
cmp
in
xor
mov
test
pop
lret
ds
popf
sub
push
add
mov
or
hlt
js
daa
test
xchg
xchg
lahf
gs
mov
icebp
push
dec
adc
adc
push
mov
movsl
in
mov
lods
adc
pop
jno
mov
inc
sahf
or
fsub
mov
pop
jge
test
push
push
dec
push
push
lahf
xor
sbb
or
mov
dec
mov
addb
xchg
repnz
js
gs
sub
addr16
or
mov
addr16
cmp
rolb
clc
push
cmpsl
push
sub
xor
aam
mov
or
pop
xchg
sub
mov
xor
out
cwtl
mov
jmp
pop
mov
outsl
push
push
scas
push
mov
xor
jbe
xchg
cmpsb
sbb
adc
cmp
ljmp
scas
jae
jne
sarb
sarl
xchg
lret
jno
inc
cmpsb
sub
xchg
pop
fstl
lcall
out
lcall
and
sub
mov
sahf
pop
iret
adc
add
jmp
pop
adc
jae
sbb
jp
sub
adc
sbb
sbb
sbb
jb
xor
rep
arpl
sbb
pop
dec
std
xchg
xchg
inc
add
out
xor
lahf
enter
jo
and
mov
in
pop
inc
aas
mov
jae
jg
mov
icebp
sbbb
xor
gs
cmp
mov
jmp
pop
lret
lods
ret
leave
jnp
enter
stos
or
inc
enter
popa
xor
es
lods
cs
ret
fldt
sbb
mov
test
xorb
add
sbb
xor
mov
push
inc
out
in
loopne
testb
sub
ret
add
jb
adcl
lods
mov
movsb
fimuls
pusha
sub
jne
mov
inc
jp
xlat
sub
sbb
cltd
or
lahf
adc
dec
jl
les
rcl
shl
iret
mov
fadd
mov
pop
adc
pminub
es
add
loopne
adc
fwait
scas
stos
and
cmp
xchg
out
xor
dec
sub
add
ss
imul
test
mov
addr16
imul
js
out
push
adc
out
daa
push
ret
cmp
lcall
shl
gs
aad
mov
sbb
loop
adc
xchg
aas
ffree
push
sbb
out
push
stc
dec
shrb
sub
outsb
test
jnp
std
adc
cmpsb
sahf
lret
outsl
xchg
cwtl
xchg
push
popa
test
mov
fwait
sbb
cmp
sbb
sbb
into
sub
xor
jle
mov
xchg
movsb
enter
and
and
adc
inc
mov
out
sarb
addr16
test
outsb
enter
jecxz
std
pop
mov
dec
popa
pop
sub
stc
inc
dec
sbb
sbb
push
dec
dec
stos
rcrl
inc
mov
jae
ja
jmp
pop
in
adc
lock
test
jg
xor
mov
test
dec
adc
jae
xchg
xor
push
into
testl
xor
sub
in
jp
jns
insl
ret
insb
xlat
sub
pop
in
popa
xor
cltd
lcall
fxam
push
flds
imul
in
and
jge
bound
imull
mov
mov
mov
and
inc
cld
push
std
dec
xchg
cmc
adc
pop
inc
cmpsl
xor
xchg
push
outsb
repz
dec
push
lret
mov
push
xorb
lock
pop
pop
jnp
insb
cwtl
ficomps
out
cmp
xchg
nop
not
ret
icebp
mov
lds
push
lds
mov
push
pop
sub
sarb
push
gs
adc
cmp
sbb
test
lods
int3
repz
outsl
ret
hlt
push
outsb
stos
mov
sahf
cmp
sarl
popf
jp
cs
shll
inc
das
mov
inc
ret
popf
fwait
sarl
leave
outsb
iret
rcrl
xor
fyl2x
mov
dec
mov
clc
mov
sbb
mull
sub
pop
in
mov
xor
fsubrl
sub
gs
inc
lea
pop
xor
roll
jle
cld
add
pop
mov
das
ds
jno
cmp
filds
cmp
pop
lds
pusha
adc
push
or
sarl
pop
lcall
sbb
push
imul
cli
mov
int
sarl
int
mov
outsl
or
call
ja
mov
adc
sbb
ret
fidivl
dec
es
jle
sahf
xchg
ret
scas
push
sbb
sbb
jp
dec
jns
pop
sbb
je
jns
sub
scas
ljmp
ror
xor
dec
ficoml
mov
loope
imul
inc
pop
aam
pop
cmc
xchg
jns,pn
in
aam
scas
adc
mov
pop
push
jg
out
test
inc
lds
cmp
mov
or
hlt
xchg
xor
outsl
mov
or
das
inc
push
iret
imul
outsb
adc
int
jo
jp
lock
mov
mov
cmp
add
fildll
sti
xchg
call
xchg
mov
insl
sti
shl
das
lock
subl
shlb
cmpsl
loop
popf
je
popa
ret
adc
les
sti
testb
mov
adc
xchg
add
mov
test
xchg
cmp
jmp
imul
sahf
imul
lahf
imul
sub
call
and
pushf
outsb
mov
mov
xchg
xchg
lods
je
imul
xchg
shll
cmpsb
scas
pusha
jg
aas
or
roll
mov
loope
mov
clc
xor
inc
sub
inc
and
sub
ds
push
push
and
jmp
push
jle
xchg
push
lret
loope
jno
outsb
adc
xor
outsl
mov
leave
push
lea
mov
fwait
repnz
mov
cmp
sbbb
xchg
and
sbb
movsb
stos
mov
xchg
push
and
insl
mov
hlt
cmpsb
call
loopne
andb
add
or
outsb
das
cld
push
into
or
xchg
dec
cmp
filds
cmpsb
xchg
mov
push
xchg
pop
pop
enter
push
repz
inc
fbstp
jge
adc
rorl
repz
jl
out
xor
xor
and
nop
outsl
adc
pop
mov
jbe
jle
enter
sbb
push
popf
call
lods
das
ljmp
mov
push
jo
lahf
mov
sub
mov
inc
fisttps
dec
je
mov
push
fsubs
data16
test
in
aam
xchg
xor
add
and
or
inc
addr16
incb
lds
outsb
imul
fsubl
dec
ret
or
xchg
into
stos
mov
scas
cmp
jne
loope
repnz
mov
popf
xlat
xchg
adc
lahf
dec
arpl
loope
mov
stos
push
jl
pop
add
lea
dec
cltd
jne
or
int
or
xor
sub
xchg
ja
in
mov
xor
xor
cmp
fistl
add
mov
sub
in
dec
push
les
faddl
cmp
mov
clc
nop
add
push
stos
cmpsl
test
aas
repz
lahf
mov
mov
jg
inc
mov
loope
mov
ljmp
mov
out
pusha
and
push
std
pusha
dec
mov
mov
jo
lahf
cmp
or
adc
repz
cmp
imul
sub
imul
adc
loope
xor
jb
scas
pop
pusha
xlat
in
nop
push
xchg
call
pop
repz
add
xlat
mov
fisttps
shll
jge
mov
inc
data16
lock
dec
sbb
leave
movsb
out
mov
xor
fdivrp
pop
push
and
aaa
push
in
cmp
fldt
pop
add
insl
sbb
imul
in
and
dec
int3
les
popa
inc
mov
inc
or
push
xor
test
rcrl
sbb
sbb
xchg
mov
int3
mov
add
jg
mov
out
xchg
shll
mov
mov
cltd
xor
lock
shlb
cmp
cmp
jb
repnz
out
sbb
add
jae
sbb
push
insl
out
rcl
bound
pop
and
or
xor
mov
pop
lahf
popa
sub
cltd
cld
daa
and
js
addl
sub
dec
dec
or
pop
push
mov
lahf
out
sub
jno
inc
pushl
std
js
push
xchg
jbe
xchg
push
rcrl
outsl
mov
xor
cld
mov
fisttpl
or
jno
and
cmp
mov
repz
cli
pop
jl
dec
inc
sub
ds
push
fldl
sub
mov
rorb
movsl
cmp
adc
mov
enter
and
fdivrs
fdivrp
pop
or
mov
sbb
dec
push
jbe
inc
in
xchg
ret
or
sub
pop
inc
inc
xchg
xor
or
imul
lcall
xchg
inc
movsl
push
xor
leave
inc
test
pop
roll
sub
cmp
or
sbb
sub
shlb
adc
loopne
mov
add
mull
cwtl
push
insb
mov
daa
inc
ret
sbb
mov
int
xlat
mov
out
clc
fdivrl
ljmp
dec
jae
adc
add
or
fsubr
int3
add
pop
sbb
arpl
popa
xor
jge
inc
push
pop
xchg
mov
stos
inc
bnd
jp
iret
ds
mov
cmc
bound
or
ljmp
mov
aaa
pop
mov
sbb
mov
mov
jg
push
xchg
cmp
idiv
pop
inc
iret
adc
js
sbbb
cmp
pop
test
mov
add
jmp
test
dec
cwtl
pop
std
dec
or
or
mov
adc
pushf
xchg
punpcklwd
shlb
sub
in
adc
je
out
into
mov
push
mov
jle
les
jge
pop
cwtl
iret
out
cmovs
pop
loop
cmp
stc
cmp
icebp
or
jp
imul
push
aam
test
jmp
jbe
and
es
hlt
inc
rol
mov
mov
mov
and
add
sub
xchg
das
xchg
xchg
ss
in
rclb
ds
ficoms
add
sbb
mov
bound
inc
jg
inc
mov
inc
addr16
sbb
mov
xchg
repnz
add
mull
mul
push
jmp
repnz
ret
mov
mov
jl
and
mov
or
cmpsb
adc
mov
loopne
mov
dec
outsb
inc
ljmp
mov
cmpsb
test
repnz
pop
push
push
jmp
mov
xchg
lock
cwtl
ret
scas
arpl
adc
adc
pop
cmp
push
inc
mov
fdivl
fdivs
adc
mov
xor
lock
sub
popa
inc
imul
in
cmp
fnstsw
mov
adc
stos
clc
or
data16
cmpb
sub
in
push
jecxz
test
dec
leave
sbb
adc
xor
orb
add
lahf
clc
js
xchg
sbb
and
jo
jge
ds
call
sbb
loopne
nop
fstl
sbb
out
or
mov
jne
dec
inc
and
mov
lahf
sub
push
inc
jp
pop
je
popa
scas
shl
pop
xor
pop
cmp
in
push
inc
lcall
out
mov
imul
sti
divb
jae
push
cmp
xrelease
add
imul
sub
and
stos
xlat
push
out
mov
shlb
adc
mov
mov
or
sub
nop
cmc
nop
iret
pop
mov
ss
scas
cmpsl
add
int3
pop
fsts
jle
cmpl
imul
scas
pop
scas
push
aad
inc
stos
ret
dec
adc
aaa
in
mov
fidivrs
adc
push
js
mov
clc
pop
and
sbb
mov
push
xchg
jo
das
mov
xor
or
mov
outsl
jnp
ds
negl
jg
inc
jg
lcall
hlt
mov
or
jae
loopne
pushf
lret
and
repnz
add
leave
xor
xlat
in
sbb
roll
shrb
mov
outsl
cld
fisubs
adcl
insb
stos
xor
loopne
les
sub
scas
sub
mov
sbb
rclb
popf
xchg
and
add
xor
in
jno
scas
xor
xor
mov
dec
xlat
and
mov
lret
cli
dec
sub
or
data16
mov
lods
jl
lret
mov
ss
cmpsl
xchg
call
add
adc
xchg
stos
cltd
adc
xchg
inc
cmp
inc
dec
mov
push
fistpll
add
jle
mov
xchg
subb
mov
aad
push
inc
pusha
ljmp
sub
sub
fnstsw
push
pop
xor
jge
cltd
scas
scas
aaa
mov
mov
push
ja
dec
lahf
push
stos
inc
or
adc
mov
cltd
mov
or
xchg
sub
sti
and
jl
fldenv
mov
fucom
jns
ljmp
xor
cld
xor
or
xor
add
mov
int3
push
or
movsl
test
mov
inc
arpl
adc
popf
stos
adc
enter
mov
loopne
fistpl
test
mov
xchg
or
inc
xor
mov
popa
dec
aaa
js
lods
out
push
jmp
xchg
mov
arpl
movsb
pop
mov
or
jg
or
pop
aam
pop
cli
iret
stos
bound
in
ds
mov
movsl
jnp
pop
inc
fcmovnb
call
adc
addl
xchg
lds
sub
fnstsw
out
adcb
pop
or
sbb
push
loopne
or
add
into
add
pop
jmp
sub
ficoms
push
ja
negb
insl
js
push
xor
movsl
roll
call
mov
les
fsub
xchg
addr16
sbb
mov
push
jge
lock
js
inc
inc
cmp
jo
push
mov
dec
aas
out
mov
sub
inc
adc
pop
pop
add
ljmp
xor
jge
fildll
adc
add
cltd
lahf
sub
add
mov
and
inc
mov
sub
sbb
mov
loope
jg
dec
daa
fwait
pop
mov
shll
jne
out
mov
mov
notb
lahf
push
pop
subb
movsb
sbb
lret
sbb
mov
loopne
push
into
and
mov
bound
clc
mov
mov
pop
aaa
addb
and
cs
mov
mov
cmc
psllq
repnz
mov
adc
or
bound
movsb
inc
sbb
testb
rcrl
jns
ficoms
pop
push
push
pop
ljmp
fs
gs
mov
aas
loop
xchg
xlat
mov
push
cmp
aas
or
add
fcoms
repz
lock
pop
imul
or
outsb
fwait
mov
jb
inc
dec
jae
shrl
shll
pop
xor
sti
lret
mov
and
icebp
inc
pop
test
in
fadds
insb
mov
lcall
mov
mov
in
jnp
ss
jmp
das
cltd
jecxz
or
inc
jl
ffree
bound
jl
xchg
or
xor
jns
fcmovnbe
daa
push
insl
pop
js
inc
push
adc
pop
pop
gs
aaa
push
in
cmc
cmp
mov
sub
xor
into
scas
lock
jae
push
xchg
dec
xchg
xchg
sbb
sbbl
push
stc
mov
and
push
mov
pop
mov
ret
addb
mov
leave
push
shlb
mov
xor
movsl
mov
addb
outsl
movsl
push
adc
loopne
mull
jp
mov
lods
push
pusha
movsb
mov
jb
arpl
sarl
and
das
inc
push
dec
dec
out
dec
mov
cltd
scas
dec
xchg
jns
sahf
jecxz
jecxz
push
stos
inc
dec
enter
cmp
mov
sbb
cmpb
repnz
lods
rolb
xorl
cmpb
fcom
or
push
pop
pop
cmp
hlt
test
fbstp
enter
inc
pop
and
in
clc
loopne
pop
sub
or
mov
dec
inc
sbb
jae
daa
mov
pop
pop
or
or
or
ss
in
sub
jle
fs
stc
sub
sbb
sbb
lea
xor
ret
lahf
mov
inc
mov
das
sarl
aam
jb
inc
ret
jecxz
movsb
fsubrl
pop
xor
sub
rcrl
ret
lods
loop
cld
push
dec
test
add
insl
cmpsl
jnp
add
dec
aaa
cli
stos
add
jno
add
icebp
push
out
adc
aad
cmp
movsb
pop
inc
dec
adc
fmuls
mov
add
jmp
rorl
inc
clc
imul
and
pop
cmp
sub
pop
jmp
mov
dec
mov
call
ljmp
ds
cmpsl
and
pop
sub
cmovnp
adc
mov
aad
jb
int3
data16
bound
xor
cli
add
xchg
sub
jno
gs
fs
test
xor
rorl
and
pop
sbb
pop
hlt
and
cli
adc
testb
lods
dec
dec
das
out
pop
lds
ret
insl
sti
pop
jecxz
pop
mov
fwait
lea
in
mov
test
nop
jmp
test
xor
mov
cmp
pop
int
adc
mov
jns
in
out
fs
pop
xor
jne
xchg
add
xchg
imul
stos
adc
scas
push
add
repz
sbb
in
lret
fcmove
in
dec
and
push
mov
jecxz
popa
lods
push
mov
outsl
test
lds
loop
das
in
popa
roll
ss
jge
xchg
fsubl
rcrb
mov
sbb
cld
sbb
xor
jae
sub
or
cwtl
xrelease
mov
adc
sbb
push
jmp
or
add
test
popf
data16
js
std
cmp
insl
xor
lock
inc
mov
aaa
mov
mov
dec
outsl
mov
xor
inc
sarb
dec
sbb
mov
sub
repz
pop
jb
mov
mov
lds
roll
sti
in
add
xor
adc
and
cltd
rcll
jo
pop
jmp
adc
mov
add
add
iret
cld
iret
loope
xlat
jb
sub
mov
movsb
mov
xchg
fsubl
jae
test
jmp
inc
jne
xchg
push
cmp
pop
loopne
add
pop
jbe
xor
jne
pop
push
repz
enter
pop
incl
int3
xchg
push
lds
jl
jae
mov
jge
test
es
je
int3
lret
cmp
pop
jae
std
test
push
xor
xor
ret
fstpt
mov
push
cmp
sub
iret
and
rorb
lea
je
cmpsl
mov
adc
ds
cmp
mov
adc
pop
clc
add
xor
stos
and
jle
mov
cltd
mov
mov
rcrb
mov
test
lds
fsubrp
test
outsl
test
and
jmp
mulb
js
xchg
xor
pop
inc
lea
bound
test
popf
sbb
mov
xchg
gs
test
sbb
out
push
insb
lahf
popa
fcmovnb
fcmove
test
lahf
inc
lcall
imul
ljmp
mov
pop
cld
push
fwait
addr16
adc
test
and
mov
sub
jo
imul
sub
xor
int
testb
mov
in
inc
gs
add
fadd
roll
and
add
xchg
loopne
or
push
mov
mov
push
jmp
push
lcall
shrl
mov
arpl
sbb
les
mov
icebp
iret
icebp
data16
mov
mov
popa
sub
int
je
shll
nop
mov
adc
mov
pop
dec
xor
push
in
mov
sub
daa
dec
sbb
pop
insb
fisttpll
xchg
push
loop
in
mov
dec
dec
sti
xchg
in
jp
out
ret
jle
push
sub
jl
icebp
xchg
aas
hlt
inc
and
adc
mov
pop
sbb
js
xchg
test
sbb
loop
enter
repnz
std
sete
scas
ret
daa
imul
sbb
and
mov
cmpsb
mov
inc
inc
lret
mov
ja
subl
in
pop
fstpl
or
daa
bound
xor
xchg
cmp
dec
mov
pop
or
negb
mov
divb
pop
ss
frstor
inc
imulb
and
jp
xchg
cld
out
add
lods
add
jle
sbb
sbb
mov
mov
xchg
sahf
add
push
add
sub
sub
repz
std
cmpps
sub
pop
sbb
jmp
add
sbb
fstp
sbb
mov
cmpsb
dec
rol
sub
push
lret
or
xor
outsl
push
push
cmpsb
push
pop
jl
test
sub
pop
mov
sbb
sub
cwtl
jmp
fisubrs
ret
cmp
mov
sub
jecxz
pop
imul
cmp
dec
xchg
inc
aaa
out
xor
aad
aam
push
pop
mov
xchg
fnstenv
aas
pop
inc
dec
and
jmp
xor
sbb
jmp
sti
stos
je
jg
loop
adc
lcall
push
pop
stos
fcmovu
fbstp
jg
pushf
cmpsl
icebp
xchg
jp
idivb
or
imul
ds
stc
and
mov
mov
xor
sbb
roll
or
in
lock
addl
push
push
clc
dec
push
xor
pop
in
dec
sbb
xchg
jae
aaa
mov
pushf
mov
hlt
or
jo
xchg
and
mov
and
stos
sub
jae
xchg
mov
sti
hlt
pop
mov
dec
xor
out
pop
jbe
xchg
jae
std
out
jle
or
and
sub
add
decb
cmp
add
pop
xor
xchg
pop
inc
clc
lds
inc
xor
sub
test
adc
lahf
jmp
adc
loopne
push
pop
pop
xchg
rcll
inc
dec
dec
xchg
int3
nopl
jbe
dec
popf
stos
fldenv
mov
push
loope
pop
ret
dec
aam
imul
and
or
lret
out
sub
imul
rorl
dec
mov
inc
dec
test
pop
mov
pop
xchg
mov
cmp
fdivrs
in
xor
in
lahf
aaa
imul
daa
stos
sarb
cmp
dec
push
xchg
jnp
out
pushf
loop
push
sub
cmpsl
xor
insb
aam
mov
jle
cli
inc
aaa
ret
pop
push
loope
xor
pop
mov
jecxz
in
test
pop
dec
lods
pop
testl
xchg
mov
rcrb
adc
jbe
or
and
das
outsl
gs
sub
into
inc
dec
pop
cmp
dec
out
hlt
stc
dec
ret
xchg
mov
mov
test
in
adc
mov
inc
lahf
pop
stc
cmc
jbe
xchg
arpl
mul
testl
leave
idiv
sub
jns
addr16
flds
outsb
imul
pop
pop
jb,pn
sbb
aad
or
xchg
sub
cmp
lcall
lods
test
pop
or
pop
cltd
lea
pop
cs
loopne
inc
push
push
in
sub
xor
lret
les
push
in
repnz
sub
shrb
mov
es
nop
adc
ss
pop
cmpsb
or
jl
cli
sub
xchg
dec
sbb
pop
rclb
rcr
adc
add
notl
fucom
pop
fistl
xchg
je
lods
cld
sarb
or
mov
sub
sub
pop
sti
mov
adc
adc
dec
mov
mov
inc
orb
push
mov
ljmp
pop
shll
add
ja
xor
lds
test
ficoml
and
rcr
push
jne
xor
pop
shl
scas
fs
xchg
gs
sub
mov
pop
xor
sub
or
mov
push
out
push
pop
aas
mov
stos
or
cs
add
into
fdivs
cmpsb
enter
sti
mov
push
movsl
lcall
push
call
pop
lds
cli
sub
cmp
mov
pop
loope
jns
outsb
cld
inc
mov
cmpsl
cmp
inc
jae
ss
hlt
cld
rclb
push
insl
ss
fcom
mov
leave
negb
and
out
cwtl
xor
sbb
in
mov
nop
or
insl
dec
xchg
inc
xchg
jl
dec
aad
lea
jge
mov
insl
dec
aam
xchg
lret
test
mov
negl
jb
inc
adc
mov
pop
lret
mov
push
push
scas
jecxz
mov
cmpl
add
push
testb
leave
rcll
pusha
iret
mov
sbb
fcompl
jmp
pop
jge
fwait
and
sub
fs
pop
mov
mov
and
in
push
aam
nop
in
sbbb
cmpsb
imul
mov
adc
leave
pushf
stc
je
sub
xor
push
and
fwait
jecxz
test
subb
xchg
pop
leave
pusha
pop
xchg
cmp
adc
movsl
sbb
negl
lods
jns
adc
xchg
lods
mov
xchg
adc
aam
pop
jg
sub
cmp
clc
rol
ja
cs
clc
and
or
hlt
int
push
call
xor
and
jae
inc
addl
mov
jae
leave
mov
mov
jbe
sub
push
mov
out
pushf
divl
jbe
sar
cmp
imul
aas
mov
jle
lea
jb
or
sbb
pop
out
sub
aad
ficoms
flds
xor
sub
inc
stc
inc
sahf
inc
pop
int
fidivrl
inc
mov
rorl
mov
sub
arpl
pushf
fsubrp
out
xor
mov
ret
xchg
push
lret
jmp
dec
call
leave
ds
das
mov
out
pop
stos
xchg
push
jns
push
jle
int
pop
aas
mov
or
mov
js
cld
cmp
mov
jecxz
jnp
pop
pop
movsl
fcoml
pop
or
cmp
lcall
outsl
lea
ret
add
lret
sbb
jmp
or
in
fidivs
hlt
cmp
insl
add
arpl
jge
ja
sbb
js
xchg
mov
mov
cmp
pop
cmpsl
xchg
xor
jnp
inc
push
jl
lods
mov
cltd
jmp
cmp
mov
mov
sbb
xchg
stos
movsl
mov
add
das
mov
cli
sbb
ret
rolb
fxch
div
lcall
push
pop
sub
jnp
js
aas
dec
sbb
jns
shlb
mov
cmp
mov
daa
and
pop
inc
enter
cmp
movb
shrb
stc
xor
scas
int3
fcmovnu
outsl
faddp
pop
sbb
adc
hlt
sbb
cmpsl
iret
mov
pop
xor
stc
pop
scas
repnz
in
jae
mov
movsb
fiaddl
dec
popa
sub
in
sbb
loope
mov
push
into
push
shr
icebp
js
xchg
pushl
lret
stos
ffreep
xor
mov
push
pushf
sub
jno
dec
dec
ljmp
pop
in
dec
arpl
rclb
ret
out
jg
dec
mov
call
mov
fsubrs
jmp
add
xchg
aaa
sahf
shll
rclb
add
scas
fwait
dec
jl
and
adc
pop
cmpsb
ds
sbb
lods
insb
mov
push
lret
test
inc
sub
inc
lea
cltd
jle
cmpl
push
aad
pop
cld
mov
ja
punpckhwd
jg
out
cs
outsb
pop
cmc
and
lea
stos
ror
loop
fisubl
pop
xor
stos
mov
ficomps
call
dec
addb
add
xor
or
pop
pop
sbb
daa
sbb
jge
bound
pop
shrl
js
andb
dec
cmpb
jle
fnstcw
push
fiadds
inc
push
out
pop
subl
push
jp
dec
inc
ficompl
ja
aad
inc
es
loopne
sbb
aaa
inc
nop
loop
sbb
pop
adc
dec
mov
xor
sub
pop
add
nop
push
repnz
sub
jns
or
mov
in
pop
sarb
or
cltd
cmp
aad
cmpsb
aad
inc
movsl
mov
out
jb
in
pusha
cmp
or
mov
cmp
aaa
orb
push
test
sbb
add
fcmovnbe
sbb
xchg
fwait
sub
sub
mov
shlb
xchg
xchg
in
outsb
cmpsl
out
daa
mov
aaa
fs
ss
popf
add
and
roll
and
push
js
out
pop
jge
push
test
push
dec
scas
or
fnstsw
les
mov
or
cld
dec
xchg
insl
mov
smsw
dec
inc
mov
fiaddl
aam
push
xchg
fldenv
sub
mov
scas
mov
fs
inc
aaa
jmp
add
push
push
popa
jbe
xchg
enter
jo
data16
jo
sbb
sbb
out
jle
repnz
fsubrs
aad
pop
fists
push
push
jae
out
fs
in
pop
inc
mov
rolb
lcall
and
or
push
int
loope
arpl
icebp
outsl
lret
cmp
cld
lcall
repnz
cmp
ja
xchg
cld
mov
mov
dec
in
sub
add
mov
icebp
popf
daa
xor
mov
ljmp
call
lcall
popf
in
std
cmp
add
aas
loopne
js
cmp
and
push
mov
aaa
in
adc
repnz
push
adc
mov
icebp
and
pop
cwtl
or
mov
sahf
cmc
cmp
cltd
cwtl
sti
pop
in
pop
movsb
dec
mov
scas
std
jb
cmp
mov
mov
cli
push
fidivl
sbb
aad
scas
daa
and
ljmp
cmc
enter
xchg
in
jmp
sub
orb
push
sbb
cld
in
push
mov
mov
cs
and
sarl
rcrl
push
and
or
movsb
test
jp
push
incb
and
cltd
pushf
std
sti
cmp
mov
decl
mov
in
int3
das
jle
add
incl
push
and
xor
lcall
sarl
mov
sub
inc
clc
mov
inc
or
dec
daa
xlat
ss
cmp
fisubrl
int
mov
insb
adc
mov
pop
hlt
dec
mov
in
out
fsubrl
jnp
jae
mov
push
outsl
je
pop
popf
mov
lret
outsl
pushf
push
dec
xchg
fldenv
xor
sbb
mov
push
xchg
push
adc
dec
push
inc
jns
mov
inc
cmpsl
mov
insl
stc
les
fs
sbb
fwait
pop
pushl
or
lds
shrl
and
fcomps
fsts
inc
add
xor
ret
jp
inc
dec
mov
pop
ficoms
mov
push
push
ds
rcrl
mov
pushf
insl
stos
sahf
fimull
out
frstor
cmp
es
push
pop
jns
aam
gs
popf
in
push
ljmp
data16
mov
ja
dec
sbb
dec
sbb
xchg
in
cmp
les
mov
xchg
mov
mov
test
cmp
les
inc
imul
sbb
std
cmp
in
test
imul
jle
xor
or
jecxz
inc
andl
dec
leave
mov
pop
push
les
jl
pop
rclb
sub
out
das
sbb
mov
lcall
and
lods
jnp
sbb
mov
andb
sahf
dec
leave
pusha
cs
cmp
movsl
outsb
push
adc
lods
inc
cmp
pop
pop
mov
stos
fs
pop
js
cltd
repnz
fisubrs
push
ja
add
mov
lcall
repnz
aam
movsl
int
icebp
mov
push
push
repz
int3
mov
and
inc
push
mov
mov
aam
fisttps
in
dec
add
mov
mov
enter
in
cmp
push
nop
sahf
scas
dec
jp
mov
mov
cld
repz
leave
jbe
rolb
jae
and
stos
adc
daa
push
jnp
inc
lods
pop
fs
repnz
mov
loopne
mov
cmp
and
clc
push
cs
imul
push
int3
inc
add
lcall
push
popa
cmpsb
mov
adc
ja
rol
jns
icebp
or
jo
mov
test
mov
pop
fisubrs
aas
sbb
mov
pop
in
dec
xor
idivl
and
fcompl
push
push
roll
xchg
xor
cld
in
iret
lahf
pop
jle
test
aam
cltd
pop
add
shr
gs
dec
sqrtps
xchg
sbb
adc
dec
sbb
jne,pt
rolb
movsb
jo
xchg
jl
sub
dec
xchg
dec
icebp
movsb
add
pop
sbb
sub
je
adc
pop
sbb
test
dec
call
push
xchg
roll
int
inc
out
adc
sub
out
xor
mov
stos
shlb
jae
rclb
int3
fwait
enter
aaa
popl
ja
jnp
testb
cmp
mov
push
cmp
inc
mov
and
pop
cltd
ret
int3
pop
mov
mov
loop
and
leave
call
jg
push
jge
cmp
mov
mov
das
inc
push
movsl
loopne
outsb
repnz
add
sbb
loopne
pop
or
out
push
mov
add
ret
mov
ljmp
xchg
adc
and
cmp
movsb
stos
push
ljmp
popa
xor
fsub
add
xor
adc
xchg
mov
mov
push
loopne
jne
popf
cltd
push
jb
and
mov
sub
add
lret
imul
out
xchg
push
add
gs
sbb
fldt
lods
fdivp
fwait
jg
in
cmp
adc
dec
je
push
cs
pop
mov
jns
lcall
imul
movsl
loope
sbb
and
add
lods
pushf
jle
lahf
jae
out
scas
loope
pop
jns
fbstp
dec
cs
add
ljmp
mov
dec
loope
cli
push
xchg
mov
and
sub
cmp
and
or
pop
mov
and
jnp
push
mov
dec
in
inc
sub
ret
js
idivb
mov
pop
cmp
cmp
fidivs
daa
xchg
mov
dec
dec
pop
xchg
test
imul
cld
int
pop
lock
ds
outsb
and
adc
xor
inc
shl
insb
pop
pop
push
lock
fistpl
xchg
mov
ret
or
ret
cmpsb
gs
in
inc
pslld
rcrb
adc
sub
jecxz
pop
decl
test
sbbb
inc
dec
stc
mov
or
and
push
sti
clc
adc
or
roll
jo
inc
sbb
inc
scas
mov
xor
sub
fdivrl
jle
les
sub
mov
pop
or
out
loope
dec
seto
xor
push
push
fidivs
test
cmp
out
fwait
nop
rol
inc
mov
inc
shr
push
mov
add
inc
stos
ds
icebp
jbe
repz
popf
ret
sub
inc
mov
inc
inc
das
dec
cmpsb
jno
inc
mov
fmul
jnp
add
das
adc
daa
dec
or
insl
cmp
shl
fcmovnb
das
jle
mov
push
into
mov
xlat
or
leave
adc
in
fidivrs
test
clc
pop
add
jno
insb
push
inc
mov
add
jmp
xor
inc
ret
inc
movsb
je
push
fcmovnb
push
imul
out
xor
lret
jo
popf
sub
push
jns
adc
rolb
lds
and
leave
mov
pop
addr16
inc
mov
test
xlat
and
push
mov
mov
or
rcrb
popa
pop
or
dec
adc
std
dec
leave
bound
and
adc
dec
xchg
adc
out
aaa
mov
stos
imul
out
popf
pop
test
fistpll
push
xchg
lcall
push
xchg
int
in
aam
dec
repz
hlt
inc
mov
imul
es
fwait
xchg
pusha
rorb
fs
mov
arpl
mov
or
adc
xor
aas
outsb
sbbb
dec
cmpsb
stos
fwait
test
scas
in
jns
inc
jae
jbe
xor
sbb
sub
lret
jno
push
fiaddl
xchg
pop
das
test
mov
sub
scas
xchg
sub
jmp
pop
cmp
dec
sub
xor
cwtl
arpl
shl
or
cs
aad
pop
insb
js
sub
sbb
stc
cmp
push
mov
mov
test
mov
sti
sbb
mov
sbb
lods
inc
aaa
fbld
sbb
ficoms
fstpt
push
fbstp
pop
sbb
lods
aaa
out
pop
mov
insb
test
sti
testl
xor
push
das
xorl
add
sub
enter
mov
aaa
or
mov
out
xor
cmpsl
inc
xchg
in
sti
adc
in
lea
mov
mov
jmp
fisubl
fistps
cmp
adc
loope
cltd
inc
fcomps
stos
jp
daa
jno
sbb
adc
or
scas
in
mov
icebp
mov
test
cmc
ljmp
mov
lret
in
lea
sbb
cmpl
xchg
dec
test
jp
loop
cs
sbb
in
ja
mov
push
cmp
inc
sub
mov
aam
stos
es
ret
mov
pop
lret
and
lea
loop
jp
and
test
stc
sub
out
pop
jl
add
xchg
cwtl
push
push
sahf
add
mov
pop
bound
dec
daa
lods
sbb
rcll
outsl
icebp
or
stos
xorl
mov
cwtl
jge
scas
dec
pop
andl
test
add
cmp
lds
push
ficomps
cmpsl
into
pushf
loop
jnp
fistl
sbb
dec
scas
std
jge
mov
jl
addl
es
jl
add
cmp
sti
lret
and
or
repz
and
cmc
call
fs
mov
sbb
ljmp
and
xor
popf
cs
test
test
lods
leave
and
sbb
or
enter
jmp
inc
xchg
stos
mov
cli
bound
cmp
imul
cmp
pusha
fmuls
sbb
aaa
int
jb
mov
cmpsb
and
loop
pushf
lcall
shlb
arpl
mov
pop
mov
inc
bound
mov
fiadds
lods
ret
das
add
add
fs
sti
pop
pop
cmp
and
sbb
cltd
inc
lods
sti
sub
test
sti
xchg
xchg
mov
add
test
ja
cmp
sub
jge
daa
xchg
jo
in
xlat
mov
push
scas
jmp
cmp
push
sahf
popf
mov
insb
dec
fisttpl
sar
stc
arpl
jg
and
pop
out
scas
and
sahf
imul
jp
sub
fmuls
or
loope
xlat
lea
fwait
cs
jb
or
push
push
inc
loopne
mov
je
hlt
lret
sbb
sahf
add
das
orl
cmp
push
add
lret
pop
repz
mov
xor
jecxz
popa
cmp
gs
xchg
dec
or
addr16
or
sbb
in
jae
jbe
lcall
dec
imul
cli
mov
push
push
jle
add
test
addb
mov
pushf
arpl
inc
gs
pop
sub
inc
xchg
pop
scas
adc
gs
ljmp
mov
loopne
push
lcall
xlat
inc
aas
cmpsl
ljmp
or
popf
add
jp
dec
popa
xlat
mov
sbb
nop
shrb
in
mov
mov
pop
rorl
mov
aaa
shlb
sbb
or
push
jl
iret
loope
mov
xchg
popf
and
dec
cmpsl
popf
arpl
fisttps
test
sbb
sarl
pop
je
imul
aam
mov
in
sub
fwait
lret
call
push
addb
mov
test
insb
mov
sbb
lret
dec
mov
add
pop
jbe
hlt
sub
pmuludq
test
xor
pop
dec
rolb
inc
add
jecxz
in
hlt
loope
loope
and
dec
shlb
aaa
cmp
lahf
loopne
push
sub
cmp
pop
pop
js
in
imul
ljmp
jnp
inc
push
fdivrl
nop
enter
orb
sbb
stc
cwtl
xlat
or
jl
subl
mov
leave
adcl
pop
or
mov
sub
gs
cwtl
les
sbb
and
loopne
lods
cmpl
mov
pop
outsb
or
mov
insb
push
movsl
mov
bound
push
rcll
incl
pop
mov
inc
shr
push
xchg
pop
test
cmp
popa
movsb
pop
test
sub
outsb
push
sbbl
adc
or
fcoml
mov
jge
test
cmc
aam
jge
inc
inc
into
pushf
mov
roll
in
outsl
jae
sbb
push
repnz
out
mov
xchg
cmp
xor
out
inc
repz
mov
js
call
xor
std
pop
push
push
and
inc
add
xor
push
sub
fcoml
push
sub
pop
lock
out
sti
and
sbb
add
rol
jbe
push
pop
jno
cs
jns
test
jp
adc
jmp
inc
in
and
insb
mov
cmc
inc
leave
jp
lds
testb
cltd
mov
lahf
icebp
adc
outsl
xchg
push
inc
imull
jge
add
or
xchg
outsb
adc
nop
jae
rorl
es
mov
xchg
inc
jbe
add
mov
movsb
fmull
scas
aaa
cmp
ljmp
rcr
stc
in
iret
jp
or
mov
pop
dec
into
adc
sub
bound
dec
mov
lcall
pusha
xchg
and
aam
sub
popa
xchg
mov
sbbb
push
cmp
xor
mov
outsl
push
or
cmp
in
pop
call
jb
or
inc
sub
clc
dec
int
jg
inc
nop
cmp
scas
repz
push
jns
add
into
fs
sbb
adc
fmull
push
int
mov
arpl
xchg
lods
mov
hlt
push
bound
sarb
adc
inc
mov
out
and
in
lahf
fsubp
das
jno
jge
movsb
aad
push
js
out
aaa
mov
jmp
and
loope
popa
rcr
pop
adc
insl
and
ret
inc
mov
lods
xor
jns
pop
das
mov
cli
mov
scas
sub
jne
mov
cwtl
add
stos
mov
ljmp
xor
sbb
jbe
xor
aas
xor
loop
push
mov
mov
in
lcall
dec
add
imul
sti
pop
cmp
sbb
pop
and
shl
sbb
inc
and
or
cmp
jmp
in
mov
cmpsb
mov
inc
sub
sbb
mov
fbstp
out
adc
mov
loopne
in
push
xor
dec
jb
push
shlb
aad
dec
add
mov
out
std
pop
loopne
cmpsl
push
sub
cmp
stc
call
lock
push
adc
inc
pop
scas
lock
std
ret
cld
xchg
cmp
pop
mov
fstp
mov
test
fisttpll
pop
cmpsb
inc
in
movsb
mov
pop
jecxz
leave
or
inc
sahf
or
imul
hlt
pop
mov
iret
out
clc
and
lods
cltd
dec
sbb
movsl
jl
xlat
lods
sub
adc
bound
xchg
je
xchg
push
fnsave
sbb
in
cmp
jbe
mov
cmp
stos
mov
mov
rcrb
and
fists
mov
mov
mov
call
mov
xchg
sbb
pop
mov
push
sarb
pop
icebp
mov
data16
mov
xchg
enter
xor
pop
mov
add
mov
ficoml
adc
lods
sub
jg
xchg
pop
dec
jne
clc
ficompl
call
mov
loopne
dec
xchg
out
add
call
push
pop
and
mov
scas
xchg
pop
test
dec
stos
fimuls
mov
aaa
mov
movsb
jle
js
outsl
cmp
insl
jge
xchg
into
cmpl
loopne
leave
xlat
mov
jp
inc
and
adc
and
repz
xlat
int3
in
and
loop
cli
lods
arpl
subb
jae
and
push
pop
xchg
sbb
lahf
mov
fcomps
shrb
mov
pusha
mov
xchg
stos
sti
lods
push
ja
scas
lret
imul
je
and
or
cli
ret
mov
jle
jle
bound
adc
les
xchg
xor
shl
xchg
xlat
push
je
lret
divl
mov
out
xor
lods
enter
fistl
push
pusha
popa
lret
sahf
fnstenv
repnz
shlb
mov
fiaddl
icebp
stos
inc
es
cmpsl
jmp
aad
test
test
push
dec
outsb
jg
and
adcb
pop
sbb
dec
dec
scas
adc
rol
cltd
push
lea
loope
sbb
out
rcrl
sub
daa
js
nop
in
xchg
jmp
mov
xchg
repnz
add
icebp
pop
dec
movsl
pop
inc
in
or
clc
out
aam
int
pop
pop
adc
std
pop
lea
icebp
xchg
jecxz
dec
ss
lods
push
mov
and
enter
in
int
pushf
cmp
test
outsb
loopne
pop
cwtl
cltd
pop
incl
pushf
sub
push
lea
popf
inc
sub
in
pop
dec
inc
jge
enter
xchg
push
mov
pop
jmp
mov
ret
xor
shll
dec
ja
movsb
insb
dec
les
ret
inc
xor
movsb
mov
xor
cs
mov
popa
add
add
dec
inc
scas
xor
jae
lods
dec
mov
mov
jp
pop
xor
movsb
mov
jmp
push
mov
xor
mov
dec
ja
jo
mov
repz
adc
dec
scas
or
sbb
cmpsb
outsb
fldenv
sbb
test
mov
sbb
repz
dec
lahf
in
xor
push
inc
pop
mov
dec
mov
lock
ja
imul
jle
xchg
adc
add
outsl
sub
sbb
aas
mov
pop
xchg
icebp
aaa
gs
popf
lea
in
xchg
pop
xchg
loope
inc
push
jo
out
les
rclb
adc
call
push
cmpb
lcall
fld
and
jle
mov
loopne
push
or
out
gs
hlt
shr
mov
pop
out
cmpsb
addl
mov
es
in
decl
inc
inc
mov
scas
adc
pop
into
lahf
pop
xchg
nop
int
xchg
add
pop
mov
xor
in
leave
out
add
out
and
mov
dec
jl
ret
pop
in
fbstp
sub
lcall
cwtl
sub
add
mov
notb
fistpl
push
ret
xor
ja
sub
mov
leave
leave
jns
xor
xchg
mov
and
jle
xor
mov
enter
in
xlat
iret
lret
insb
imul
les
pop
push
xor
pop
push
idivb
out
into
pop
mov
sub
out
xchg
jno
cwtl
pop
mov
mov
inc
stc
cmp
insb
xchg
adc
hlt
sbb
je
jmp
pop
jmp
aad
pushf
adc
js
mov
daa
cmp
int
push
jb
jb
mov
mov
cmp
pop
adcl
push
subb
pop
cwtl
movsl
xchg
notl
adc
mov
aad
xor
xor
push
dec
sub
sub
add
lahf
in
inc
movsb
lret
mov
xor
call
and
fisubs
lea
imull
pusha
adc
dec
notl
lock
shl
pushl
in
rcrl
fs
and
mov
sub
xor
sbbl
out
push
jae
mov
lret
inc
add
push
push
push
ffreep
push
insb
pop
or
cmc
push
hlt
xchg
adc
loope
inc
fcoml
div
fwait
adc
imul
mov
inc
cmp
aam
xor
and
movsb
arpl
jno
dec
jo
dec
adc
mov
outsl
lret
mov
jo
sar
lahf
jecxz
cmpb
pop
xor
jno
mov
adc
push
out
inc
inc
or
adc
js
sub
add
or
push
in
mov
jge
lea
pop
iret
dec
cs
ror
shr
ret
mov
ret
imul
daa
int3
adc
cmpsb
pop
dec
mov
pop
pop
je
xor
push
and
add
jecxz
in
stc
orl
ficompl
movsb
and
xor
sbb
cmp
shll
shlb
and
sbb
aas
xchg
or
loope
mov
adc
mov
jb
mov
test
mov
sbb
or
stc
iret
aaa
sbb
ljmp
sarb
inc
ret
leave
cmp
test
dec
rcll
jmp
or
mov
icebp
sub
mov
mov
sub
repnz
adc
out
es
jmp
int3
enter
in
cld
int
fst
pop
adc
pop
xchg
inc
loop
mov
jle
lea
je
les
xchg
movsb
mov
loop
cmpsl
mov
xchg
sti
sub
xor
inc
imull
dec
pop
sbb
pushf
fcmovbe
mov
cmp
xor
cmp
mov
and
lret
dec
stos
test
stc
xor
dec
push
and
mov
cmp
subb
imul
fcmovnbe
in
jbe
out
fisubl
push
pop
and
jb
jno
testl
sbb
aaa
jge
lcall
in
repnz
sub
popa
inc
cltd
mov
lcall
and
dec
pop
das
lret
in
cmp
out
inc
movsl
xlat
pop
int3
cmp
jnp
and
imul
xchg
gs
push
pop
and
adc
lret
aas
jecxz
outsl
inc
inc
outsl
add
call
into
outsb
or
movsb
and
jp
push
test
movsb
xchg
mov
lret
fistpll
outsb
pop
jecxz
mov
icebp
or
xchg
call
push
stos
cmp
cmp
cmc
pop
in
push
xlat
fs
push
clc
gs
addr16
jmp
stos
cmp
cmc
cwtl
je
pop
mov
sbb
or
jbe
push
jg
pop
in
fisubl
sbb
mov
lret
jo
cltd
inc
cmp
hlt
or
push
mov
enter
lret
or
js
add
jbe
mov
xchg
xor
inc
jne
dec
outsb
xchg
jo
fidivrs
cvtpi2ps
inc
inc
mov
fcmovnbe
into
pop
mov
iret
sarl
loope
iret
push
fstpl
lahf
add
insl
test
and
or
std
push
inc
and
xchg
pop
out
mov
cltd
dec
or
icebp
fdivrl
push
subl
sub
dec
mov
push
inc
loope
mov
lds
pop
mov
shlb
enter
add
sbb
sbb
cmp
or
mov
fwait
mov
fistl
cwtl
add
out
movsl
arpl
cmp
mov
lret
mov
out
data16
icebp
ss
nop
pop
mov
push
es
fdivs
jbe
ljmp
fcomi
cwtl
add
ja
stos
push
divb
dec
adc
jg
inc
pushf
inc
inc
fidivrs
xchg
fs
idivb
pop
les
mov
and
sbbb
mov
enter
lahf
insl
fcmovnb
loopne
mov
sbb
mov
call
les
dec
jb
jno
jecxz
les
sub
adcb
rclb
fcomi
push
cmovnp
inc
mov
xchg
mov
dec
cmp
mov
xor
dec
dec
in
mov
or
cmp
mov
adc
insb
frstor
sub
out
int
stos
lds
imul
in
sub
mul
mov
sbbb
adc
jl
pop
sub
mov
xor
outsb
xorb
mov
int
rcl
mov
inc
inc
cltd
fbstp
fs
mov
enter
daa
mull
and
aad
or
xchg
mov
dec
nop
mov
dec
daa
imul
pop
gs
cmp
mov
out
scas
nop
cmp
sub
inc
test
adc
xchg
ret
loopne
cld
mov
pop
sbb
cmpsb
adc
inc
enter
shr
imul
cld
push
cmp
add
push
xchg
fists
sub
add
xchg
and
jl
jp
jb
xchg
xchg
xchg
and
xor
or
push
in
mov
lret
arpl
fcompl
jo
mov
jb
scas
clc
daa
xor
dec
inc
push
xchg
hlt
push
out
mov
add
jle
aad
dec
pavgusb
inc
iret
inc
out
adc
fldt
out
sbb
dec
fmull
sub
cmp
insb
sub
lret
push
clc
mov
popa
or
es
push
hlt
push
cmp
pop
outsb
push
sub
rorw
xchg
mov
testl
int
in
mov
xchg
mov
mov
pop
lea
movsl
je
jl
imul
xor
push
or
mov
daa
aam
lock
test
inc
inc
mov
cmp
pushl
xor
sub
jne
inc
das
jge
push
sarb
aam
mov
mov
sarb
pop
xlat
jecxz
mov
int
add
mov
xchg
inc
xchg
fildll
xchg
pop
lret
sub
arpl
hlt
loop
in
in
jge
ljmp
push
inc
xchg
shl
xor
pop
push
and
cwtl
into
imul
sub
aam
mov
clc
stc
ficoms
sub
insb
jl
pop
sub
subb
dec
push
call
test
xrstor
pop
xlat
in
enter
mov
push
ds
dec
sahf
push
mov
push
xor
add
pop
mov
cmc
fadd
and
rolb
sub
mov
xchg
jge
pop
mov
testl
adc
stc
cmpb
mov
dec
sub
fldenv
mov
xchg
cli
fidivs
adc
and
ss
popf
je
addr16
test
push
shlb
lret
sahf
negl
sbb
arpl
dec
fcoml
mov
dec
aas
fsubrl
ud1
out
mov
loop
jl
dec
ret
movsb
push
mov
push
dec
and
sub
add
cmc
nop
jno
aad
xor
push
fisubrs
mov
ss
cmpsl
push
sbb
xchg
cld
sbb
jns
lods
out
insl
dec
pop
push
jns
dec
int3
fbld
std
into
xchg
cwtl
or
xchg
sbbb
pop
icebp
jb
lods
inc
lock
repz
push
rclb
xor
fcmovbe
repz
dec
hlt
mov
fdivl
shlb
inc
pop
cld
sub
lds
insb
xor
mov
jp
outsb
pushf
adc
fstpl
or
mov
or
mov
out
or
and
cmp
and
shrl
push
sub
bnd
pushf
hlt
aas
cmp
test
sub
dec
scas
pop
pop
popf
repz
test
sub
pop
mov
push
leave
xchg
xor
xchg
scas
lcall
xchg
fwait
ret
jle
bound
jo
and
mov
dec
or
data16
negl
sub
cmpsl
xchg
lods
sub
test
int3
adc
push
or
xlat
je
xlat
in
mov
xlat
cmp
mov
sub
testb
std
lea
ret
jge
sub
test
fucomi
dec
jo,pn
mov
adc
mov
mov
mov
gs
outsl
cmp
jl
int3
ja
sbb
rcrl
test
rcl
std
xor
aas
jb
lcall
inc
mov
roll
jge
inc
cmp
mov
mov
aad
repz
dec
and
or
push
jl
xlat
lods
jne
adc
push
shrb
test
mov
loope
andb
out
inc
pop
push
pop
inc
jecxz
and
sar
andb
dec
das
lahf
ret
jnp
mov
sti
in
in
pusha
adc
cmp
dec
xlat
test
add
fisubrs
pop
or
mov
sbbl
lea
adc
jns
ss
inc
repnz
jo
jg
repz
add
cmp
mov
mov
repz
add
inc
pushf
rcrb
rcll
and
mov
cmp
imul
mov
movsb
sub
jb
into
pop
idivb
inc
in
push
or
stos
ja
xor
jp
popa
movsl
xor
sub
jne
bswap
jp
sub
adc
mov
in
les
mov
out
pop
mov
stos
rorb
fmulp
stos
jle,pn
add
dec
inc
adc
bound
daa
sbb
data16
push
xor
push
or
mov
insl
jle
mov
mov
loope
cmp
fs
icebp
push
mov
sti
loop
mov
mov
cmpsb
mov
ret
xor
ja
inc
jo
out
ret
sbb
ret
mov
sbb
xchg
fisttpl
insl
push
inc
mov
mov
orl
clc
xchg
imul
pusha
sbb
int
gs
xchg
pop
pop
fimuls
jmp
lret
sahf
clc
jg
scas
movsb
adc
stc
into
push
xor
pop
xchg
test
cwtl
pop
imull
and
es
les
fdivrs
pop
in
dec
loopne
leave
les
stos
aas
div
dec
hlt
test
push
outsl
mov
cld
jecxz
xchg
leave
das
ss
loopne
dec
mov
mov
or
pop
arpl
mov
pop
xchg
push
dec
pusha
cmc
subl
jno
out
test
pop
scas
adc
fxtract
xor
and
test
jns
xchg
sbb
addr16
movsb
lret
push
mov
shll
neg
mov
jl
les
add
jo
jl
push
push
adc
mov
or
and
xorl
push
pop
mov
mov
int3
mov
pop
jnp
pop
ss
xor
sub
decl
out
mov
push
adc
add
call
jge
push
mov
cmp
movsb
dec
insb
pop
enter
jne
push
in
out
mov
pop
imul
mov
jbe
cwtl
add
insl
xchg
data16
sahf
pop
xchg
pusha
xor
jg
cmp
push
bound
subl
sti
das
addr16
rorb
adc
sti
sub
scas
cmp
arpl
dec
test
fdivl
js,pt
fsub
mov
jne
fsts
cli
mov
push
mov
lods
insl
pop
out
leave
insb
mov
outsl
push
mov
cmp
insl
sbb
aas
mov
test
imul
fisttpl
daa
es
in
dec
push
inc
or
adc
xchg
pop
and
jmp
or
xlat
aad
push
int3
jmp
scas
enter
repz
jbe
ja
jmp
in
cmpl
mov
pushw
sbb
jbe
out
mov
lcall
test
xchg
lods
push
cmp
pop
mov
and
in
ds
dec
fdivl
std
mov
aaa
stos
scas
data16
lret
fcmovu
pop
sub
mov
mov
xor
adc
in
addr16
fisttpll
xor
pusha
ret
pusha
mov
pop
and
rcr
add
xor
movsb
xor
in
inc
cli
push
mov
and
je
pop
testb
fs
stos
or
push
jle
adc
add
mov
jge
mov
ret
xchg
loope
ja
ljmp
push
adc
push
fists
xchg
pop
in
mulps
mov
xlat
push
popa
xchg
mov
mov
and
xor
pop
adc
sub
mov
ret
and
rolb
hlt
mov
sbb
popa
loop
xchg
das
jae
xor
test
imul
icebp
mov
pop
dec
and
sub
cld
pop
inc
stc
xor
dec
insb
imul
rorl
ret
movsl
sbb
adc
dec
fwait
push
jae
add
add
mov
ffreep
fbld
dec
mov
mov
jl
add
xchg
jo
inc
sub
dec
loope
lcall
outsl
in
add
push
lret
sbb
xlat
xlat
xor
int
pop
call
js
inc
xlat
push
ret
outsl
mov
or
divl
pushf
ds
int
shrb
jge
xchg
add
int3
push
je
cmp
xchg
fsubrl
pop
leave
bound
cmp
aas
mov
sub
pop
out
jnp
push
and
jmp
jns
pop
addb
daa
fsubl
shlb
sbb
mov
pop
imul
pop
inc
xchg
int3
push
jb
add
std
mov
inc
insl
out
sub
xor
cld
pushf
data16
sti
cltd
aas
inc
incl
loopne
push
pop
sbb
iret
mov
xchg
jg
cmpsb
add
sti
shlb
mov
cmpsl
push
cmpb
stos
xchg
or
addb
push
xchg
data16
ljmp
mov
mov
push
fcomip
daa
sarl
jge
addr16
xchg
push
pop
divb
add
call
call
enter
push
insb
push
imul
lahf
and
and
movsb
inc
loopne
or
pop
icebp
mov
pushf
sahf
scas
mov
pusha
bound
loop
and
cmpsb
jb
icebp
mov
stc
fdivs
sbb
add
adc
or
mov
xchg
lods
and
mov
testl
call
jae
jne
mov
loop
xor
cmp
dec
stos
rclb
test
or
call
das
cmp
cmp
pop
les
or
loope
iret
mov
mov
mov
mov
pop
sub
ljmp
data16
or
sbb
pop
fimull
pop
mov
shll
cmp
int3
cmp
std
aam
adc
jg
arpl
outsl
adc
out
mov
nop
cli
xchg
lods
and
jae
es
test
hlt
popf
nop
js
int3
xchg
dec
out
push
cmp
clc
rcr
fwait
sbb
popf
sbb
push
call
adc
mov
test
dec
and
cmp
sub
dec
pop
xor
ret
ret
in
fcmovnb
mov
leave
loop
dec
push
inc
cmc
test
shll
mov
add
sbb
push
jle
out
into
mov
push
dec
aad
cmp
xor
pop
stc
fldenv
nop
xor
cmp
scas
cmp
mov
xchg
cmc
out
pop
lahf
aas
and
and
pop
dec
fldl
sub
ficoml
lock
xchg
je
jecxz
out
add
and
jle
or
sub
xchg
call
loope
dec
xor
pop
pop
mov
dec
out
sti
pop
pop
loopne
sahf
mov
movsl
xor
clc
in
sbb
inc
adc
icebp
mov
icebp
and
iret
gs
inc
jns
xor
cwtl
cmpsb
les
xor
sbb
xchg
jl
sub
in
push
xchg
xchg
sti
mov
inc
push
pop
sbb
test
scas
mov
in
insl
in
rcr
ret
dec
out
add
ja
xchg
xchg
mov
adc
jecxz
mov
daa
iret
mov
sbb
lcall
dec
push
mov
cmp
sbb
notb
push
mov
idivb
cli
into
push
fsubl
fsubl
pop
push
daa
aaa
push
sub
xor
mov
mov
xchg
shl
loop
jge
loop
and
ss
stc
mov
sbb
enter
adc
adc
push
pop
mov
cmp
sbb
dec
rclb
into
fisttps
nop
stc
sti
adc
mov
leave
or
aaa
push
clc
roll
inc
cli
adc
scas
push
aas
sub
mov
lock
mov
and
lea
sbb
cmovo
arpl
ljmp
cmc
sarb
sub
test
sub
aas
pop
or
sarl
lcall
rorl
cld
jnp
xchg
sub
lahf
out
outsb
stos
fstpt
push
sbb
fs
add
cmp
xor
sub
cmp
stc
mov
icebp
xchg
dec
cmpsb
movaps
hlt
rorb
xchg
push
dec
imul
mov
cmpsl
jp
push
jns
sbb
cmpsl
pop
loop
aaa
sbb
jae
mov
jae
mov
sbb
cmp
and
dec
lds
rolb
stos
ror
in
rorl
inc
xchg
adc
out
arpl
scas
xor
dec
mov
inc
scas
cmp
cmp
cmp
jae
dec
mov
movsb
rorb
icebp
iret
jbe
lea
cli
stos
mov
sub
xor
jecxz
add
inc
out
jmp
pop
pusha
fisubs
mov
mov
mov
pop
aaa
xchg
mov
out
ret
xor
dec
mov
into
jp
pop
iret
enter
mov
mov
jp
lock
inc
repz
in
pushf
cmpsl
mov
cmp
test
sub
jecxz,pt
push
cmp
and
mov
pop
dec
pop
enter
xor
fists
fisubrl
xchg
pop
inc
jmp
or
mov
pop
in
and
adc
int3
movsb
adc
enter
pop
cmc
inc
icebp
mov
test
adc
push
sub
jae
xchg
int3
cmc
mov
add
xor
fdivrs
leave
cmp
cltd
loope
sarb
lock
sbb
xlat
nop
or
push
pop
cld
sbb
js
sbb
cli
outsb
sbb
inc
xchg
push
aaa
call
or
fdivrs
aas
cltd
loopnew
js
cmc
push
je
jb
das
adc
addr16
addr16
xor
hlt
or
in
aas
sub
sbb
fisubrs
mov
fdiv
jl
mov
gs
mov
add
ret
lock
fimull
sub
bound
stos
inc
aaa
lahf
cmp
push
xor
mov
adc
ss
dec
hlt
mov
mov
lods
lea
outsb
inc
dec
cs
shr
fistps
jne
jb
enter
pop
adc
pop
sub
adc
lret
mov
test
xor
pop
xorb
por
add
cltd
std
mov
test
mov
in
jne
sub
inc
daa
int
push
xor
rclb
jnp
shrl
mov
ss
aas
gs
mov
mov
lock
push
mov
jg
movsb
lock
scas
xchg
ljmp
inc
cmpl
divb
sub
ficoml
jle
mov
sarl
mov
or
fucomi
icebp
ror
data16
mov
popa
mov
in
push
mov
cmp
shlb
into
mov
inc
out
mov
mov
les
imul
mov
xor
push
iret
push
fimuls
imul
aaa
sbb
xchg
cli
xchg
push
push
popf
jp
lds
out
outsb
shld
mov
mov
roll
and
cmc
mov
pop
popf
inc
out
gs
int3
in
add
pop
mov
mov
inc
or
push
jp
andl
or
out
jge
stos
fstpl
adc
pop
pop
and
movsb
adc
bnd
nop
mov
xor
repz
inc
or
mov
xor
dec
jnp
leave
cmp
decl
lds
stos
daa
jmp
add
jne
push
dec
jne
cmpsl
daa
and
inc
fistps
push
aas
mov
out
enter
scas
sub
stos
enter
in
data16
push
imul
mov
lods
call
imul
inc
dec
and
leave
cwtl
jne
dec
je
out
and
pop
aam
outsb
push
int
test
dec
jmp
push
xchg
xchg
sbb
lcall
sbb
iret
push
jp
jno
sbb
out
fimull
loop
cmp
faddl
lea
dec
js
mov
inc
arpl
push
xor
inc
dec
mov
lea
fildl
push
fistl
aas
into
cmpl
icebp
or
mov
loope
jno
inc
sbb
popa
inc
push
xor
in
pop
lods
mov
mov
push
mov
fisubl
and
pop
mov
mov
lods
out
pop
outsb
or
cli
cmpsb
inc
jmp
sti
xchg
xor
jmp
mov
out
fstps
test
pushf
mov
xor
es
push
push
mov
loop
adc
xchg
outsb
clc
push
and
pop
repnz
and
out
mov
inc
dec
out
subb
shlb
addr16
loop
js
push
xor
popa
les
call
jp
pop
cmc
lcall
and
push
add
adc
or
bnd
stos
push
jecxz
es
mov
adc
push
inc
and
dec
xchg
pop
jno
cwtl
xor
jle,pn
in
push
in
ds
pop
in
xorl
or
notb
cld
jnp
sub
fwait
jle
add
cmp
mov
jb
or
xchg
repz
pop
adc
icebp
in
mov
ror
adc
popa
xchg
test
icebp
xchg
inc
ret
push
inc
int
jle
xchg
push
push
sbb
xor
or
aad
mov
add
fldl
add
mov
in
push
testl
cmpl
stc
hlt
es
inc
mov
xchg
or
lret
xor
clc
mov
loop
mov
inc
sbb
ljmp
sub
aaa
lods
call
sbb
call
sbb
jns
cmpsb
add
jg
hlt
mov
and
push
adc
inc
xchg
push
test
sbbb
pushf
cwtl
clc
mov
and
pop
loope
stos
sbb
xchg
or
xchg
cmp
sti
lahf
popa
xlat
out
pusha
sbb
and
gs
je
int3
cmpsl
jecxz
pop
sub
popf
xchg
sbb
iret
clc
popa
xchg
jmp
clc
lds
fst
jo
xchg
dec
xor
test
ret
scas
or
push
jb
push
inc
cmp
push
mov
rcrl
jmp
lret
ds
add
ret
cmp
adc
fdivrl
or
pop
xor
push
xorl
rcrb
adc
dec
js
xor
jle
mov
pop
jg
xchg
xchg
pop
mov
iret
and
mov
dec
push
mov
pop
inc
fdivrl
xchg
lods
dec
fisttps
adc
sahf
pop
inc
or
stos
mov
in
push
jecxz
lahf
or
jae
int
mov
fdivs
jns
lret
in
push
sbb
into
mov
shrb
add
loope
jo
lret
dec
push
in
and
out
pusha
dec
or
dec
dec
push
push
xchg
nop
sub
stos
jo
adc
popa
jg
inc
mov
rol
ret
pop
mov
sbb
push
cs
mov
mov
lret
adc
filds
fcoms
cmp
or
add
mov
lods
xor
inc
jg
in
mov
mov
xor
cmpsl
sub
xorb
mov
pop
ds
mov
add
fistpl
inc
or
cmp
imull
push
es
fcoms
loop
jb
inc
mov
adc
mov
cmpsb
mov
test
enter
adc
adc
mov
or
mov
orl
outsb
jmp
sbb
or
jle
jecxz
inc
xor
mov
mov
test
or
in
fldt
mov
cmp
inc
adcb
jg
dec
into
in
aad
pop
out
aaa
mov
mov
out
jns
jo
jbe
xchg
and
fucomip
sarl
add
inc
mov
lds
sbb
mov
inc
jecxz
int3
loop
pop
mov
inc
and
sbb
inc
and
dec
xlat
mov
sub
mov
notl
and
ljmp
repz
dec
cmp
jge
sbb
adc
ret
xor
shufps
jle
mov
inc
push
xchg
es
push
inc
dec
jmp
push
xchg
test
lods
outsb
xor
xchg
insb
push
mov
rolb
pop
jecxz
rcr
out
push
lods
sarl
mov
dec
rcrl
push
mov
outsb
push
jg
aam
test
je
out
fcompl
xorl
xlat
mov
xor
mov
bound
shr
dec
out
imul
stos
shrl
outsb
jbe
lea
lock
mov
sbb
mov
rolb
push
sti
dec
adc
out
mov
xchg
sahf
mov
add
les
repz
mov
sahf
mov
mov
push
test
pop
mov
xor
jmp
aaa
std
inc
sbb
pushf
shrl
pop
xchg
negb
add
or
cmp
sarb
sub
push
in
mov
out
mov
addl
test
lock
stos
xor
das
repz
adc
push
jae
cmp
lret
jno
popa
mov
cmpsb
call
push
arpl
ret
shl
mov
ret
cmp
insl
and
aam
dec
pop
push
xchg
push
sbb
aas
add
sub
push
aad
fs
or
dec
test
jge
call
test
sub
add
pop
mov
or
mov
test
sarl
xchg
popa
adc
shr
popf
adc
in
and
std
inc
push
dec
repz
inc
or
ss
jb
add
push
xor
sbb
mov
cmpsb
rol
std
jb
and
and
nop
mov
cmpsb
pusha
jp
sub
lahf
shll
popf
cmpsb
jns
lds
popf
das
pusha
cmp
fsubs
imul
fsubl
or
mov
lock
roll
sbb
push
callw
dec
cmp
popa
pop
and
push
and
hlt
int3
adc
add
pushf
mov
pop
mov
adc
out
arpl
pop
xchg
int3
jge
pop
add
popa
lcall
sbb
pop
adc
insb
add
adc
jle
repnz
jae
dec
mov
xchg
lcall
into
sub
sbb
jo
xor
sbb
roll
je
sub
and
loope
pop
inc
jnp
jge
arpl
out
out
and
adc
cmp
sub
push
cmp
icebp
and
ret
sub
mov
xor
jmp
loop
inc
and
jp
mulb
lahf
lods
push
sub
rcll
daa
data16
aaa
je
ret
cltd
and
bnd
insb
fsubl
cmc
loop
dec
stc
adc
shr
lret
mov
sub
sbb
sbbl
out
test
sahf
sub
xor
inc
xchg
or
adc
sbb
inc
out
jbe
loopne
xchg
add
pop
test
xchg
add
mov
insb
ja
pop
cmpsb
sub
mov
sub
stos
or
je
sub
imul
aas
jge
and
sti
pop
notl
jb
cmp
mov
adc
sbb
mov
sbb
mov
pop
mov
sub
outsb
jbe
sub
pushf
cmc
imul
mov
jo
stos
jmp
fcmovb
push
aaa
orb
enter
mov
in
pop
adc
imul
sub
mov
scas
inc
in
icebp
mov
sbb
lods
pop
inc
mov
pop
popa
aas
dec
test
lahf
adc
xor
push
gs
xor
repz
jge
incl
adc
jg
pop
xchg
xor
in
cmp
scas
negl
nop
inc
and
lea
fistps
insl
or
cld
and
lods
sbb
leave
cmp
or
jnp
int3
les
add
out
pop
stc
jnp
mov
imull
jbe
xor
scas
scas
lock
sbb
adc
bound
pop
push
repz
cld
arpl
xor
cmp
loope
dec
push
mov
data16
mov
dec
inc
add
jo
fstpl
stos
addb
cmpsb
jnp
out
dec
sbb
daa
and
inc
lds
mov
xor
fmull
ret
int3
leave
lahf
jno
push
mov
xchg
dec
dec
mov
inc
cmp
lret
mov
movsl
and
push
or
pop
and
lret
lods
in
js
mov
fsub
icebp
test
add
hlt
push
xchg
mov
jo
adc
aas
xchg
out
xor
adc
jb
aam
mov
mov
lods
sbb
push
sbb
mov
dec
cld
movsl
sub
add
ja
stc
shlb
cmpsb
xor
dec
xor
and
fistpl
jmp
fsubl
xchg
jne
add
ficoml
push
sub
sub
push
xchg
in
pop
xchg
or
sti
nop
popa
xchg
loopne,pn
push
insl
cld
mov
stc
fadd
adc
sub
loop
mov
jo
push
add
sbb
jl
xchg
pushf
in
in
aam
inc
dec
pop
push
pop
inc
mov
mov
es
pop
test
xlat
data16
dec
out
leave
aaa
fnstsw
and
push
cmpsb
dec
in
jmp
adc
adc
sub
out
pop
dec
iret
add
das
adc
dec
mov
mulb
testl
and
lret
gs
in
push
aas
outsl
inc
addr16
rorb
add
adc
mov
sahf
hlt
icebp
inc
jae
jle
lcall
mov
mov
dec
aad
and
sar
mov
xlat
loope
jbe
and
jmp
and
aaa
fs
mov
cmp
rcll
mov
in
ret
push
das
iret
push
pusha
pushf
das
cmpsl
mov
mov
in
sub
inc
push
bound
and
fdivrs
or
inc
loop
cmp
jbe
bound
xor
push
mov
repz
bound
mov
jnp
iret
fs
pushf
std
sub
lds
ret
jmp
sub
cmp
xlat
push
in
cmc
add
inc
int
movb
mov
or
cmp
fiaddl
fdivr
and
lock
clc
cmpsl
js
test
sbb
rorl
jnp
sub
sub
mov
sub
cmc
pop
push
out
test
pop
mov
xorl
int3
andl
sbb
push
sbb
pop
xor
add
xchg
inc
in
data16
ljmp
adcl
ja
lods
pop
sahf
shlb
lea
adc
es
sub
aad
push
lods
cmp
gs
insl
inc
lret
pop
in
insb
cmp
jecxz
or
or
push
push
add
or
orb
mov
icebp
lahf
add
movsl
int
sarb
fistl
int3
loopne
cwtl
mov
popf
xchg
mov
sahf
stos
dec
aas
and
movsb
push
add
out
jbe
fsubr
aad
xchg
jge
add
mov
cmp
cmp
sub
inc
and
pop
scas
dec
jp
dec
and
inc
sahf
or
aaa
call
ds
xor
scas
jb
repnz
pusha
inc
jmp
fmuls
mov
loopne
push
xchg
ss
ja
xchg
lock
and
int3
jne,pn
imul
cmp
push
imul
inc
pushf
mov
add
pop
sub
addr16
popa
jnp
xor
or
daa
push
shrl
icebp
and
or
les
pop
sbb
cmp
or
nop
mov
lds
pop
popf
mov
mov
fs
xchg
inc
insl
mov
ret
xchg
push
mov
or
push
mov
sbb
pop
push
inc
pop
or
inc
dec
lret
fucomip
pop
je
pop
push
push
jmp
aam
xchg
push
lods
xchg
jns
rolb
sahf
mov
std
stos
adcl
loopne
sub
mov
adcb
inc
mov
cmp
fsub
loop
or
call
cmp
shlb
stos
sub
pop
or
in
jne
cs
sbb
and
lods
sbb
in
fisttpl
jle
pop
ret
mov
insl
fprem
lock
sbb
or
test
daa
dec
adc
sub
popa
and
imul
inc
fcompl
outsl
stc
nop
inc
push
jmp
cmpsb
fisubs
loope
aam
addr16
adc
imul
scas
into
mov
jne
or
std
push
inc
mov
andl
add
jl
push
or
or
add
and
dec
inc
pop
loope
dec
sbb
push
lock
cmp
icebp
popf
inc
or
and
scas
push
push
push
stc
adcl
aad
insl
inc
fldl
pop
aam
bound
fldcw
fidivrs
xlat
loopne
cmpsb
add
loope
out
std
stos
fwait
ljmp
xchg
pop
lcall
and
fadds
insl
pop
dec
dec
mov
xor
add
movl
call
or
les
dec
gs
lcall
repz
mov
fdiv
out
sarb
push
fimuls
xchg
sahf
sahf
dec
lret
and
movsb
push
mov
clc
jae
and
mov
xor
mov
clc
xchg
orps
outsl
ja
mov
push
pop
es
xchg
sub
ss
inc
mov
mov
out
pop
pop
adc
bound
xlat
jo
sahf
sbb
clc
mov
mov
repnz
fadd
imul
pusha
adc
inc
shll
imul
dec
push
ds
or
cmpsb
iret
mov
dec
ret
xchg
pop
jne
xchg
mov
nop
nop
sub
xchg
loop
dec
arpl
fbld
pop
aas
out
xchg
mov
wbinvd
xchg
fldt
mov
xchg
and
sbb
iret
pop
sub
loopne
mov
mov
sub
cltd
jb
cmpsl
sbb
sbb
clc
nop
xor
in
test
mov
sub
fnstenv
out
add
adcb
cli
mov
imul
ret
mov
xchg
xchg
fsubr
pop
loopne
inc
ss
stos
insl
or
and
rclb
jae
and
inc
hlt
pusha
cmpsb
mov
dec
xlat
mov
fldt
in
mov
in
pop
in
stc
ja
pop
stc
enter
jecxz
cld
adc
js
inc
adc
xor
leave
jmp
xor
adc
in
cltd
test
push
push
cwtl
push
or
mov
ficomps
xchg
dec
shll
cmp
sub
jecxz
loop
and
in
pusha
cmp
and
mov
sbb
pop
lret
lret
stos
ficoms
clc
cmp
xchg
xchg
push
rorb
xor
sbb
or
lds
inc
and
mov
mov
adc
sarl
insl
inc
pop
cwtl
sub
xorb
mov
pop
or
scas
es
repz
movsl
xor
test
ja
push
xchg
adcl
in
pop
push
lret
inc
ret
sub
lock
cmpsl
inc
xchg
aad
popa
dec
xor
jb
repz
adc
adc
mov
loopne
inc
inc
scas
imul
jae
ljmp
inc
in
test
out
test
shll
xor
cltd
clc
call
aam
jmp
dec
pushf
in
popa
sub
sbb
pop
inc
mov
in
fildl
add
xchg
movsb
lock
sbb
xor
inc
inc
mov
and
jno
andl
and
outsb
mov
cld
in
pop
dec
bound
scas
mov
cltd
testl
and
inc
sti
xlat
adc
or
shlb
and
sub
or
mov
mov
jmp
or
fidivl
inc
inc
std
xchg
sub
icebp
adc
sbb
icebp
dec
test
dec
xor
jo
xor
inc
das
outsl
xor
ss
sub
mov
add
mov
push
mov
out
ljmp
sahf
movb
push
nop
test
js
sub
jecxz
icebp
test
scas
repz
add
pop
mov
jbe
outsl
push
scas
dec
fsubl
stc
arpl
ss
pusha
jbe
cmp
sar
in
scas
jns
ss
test
mov
mov
data16
adc
gs
mov
into
imul
lcall
sar
xor
shll
xor
test
icebp
fists
add
xchg
adc
scas
in
pop
rcll
cli
add
cmc
xor
rclb
mov
lahf
xor
xchg
xor
cwtl
lret
jb
xor
test
insl
repz
push
movsl
xor
call
pop
mov
xchg
jo
rcrl
push
cmp
rcr
pusha
xchg
int
out
into
jb
sti
jnp
pop
xchg
lahf
dec
insb
sbb
mov
inc
out
mov
xor
mulps
pop
or
adc
xchg
mov
push
pop
and
inc
mov
gs
in
xchg
mov
mov
pop
inc
and
lods
pusha
pop
mov
les
push
pop
lea
movsb
mov
aaa
push
xchg
sbb
jo
fchs
adc
js
cmp
xorb
and
subl
xor
repz
push
lock
add
jbe
popa
xor
andl
mov
add
jno
and
add
inc
repnz
cld
nop
iret
adc
enter
popa
xor
int3
add
mov
arpl
ret
jnp
fcoml
pop
loope
push
pop
int
int3
jp
pop
mov
inc
xor
pop
dec
test
fcompl
mov
jo
push
xchg
xor
int3
jle
ret
cwtl
jo
shl
jmp
lock
push
inc
sub
jb
add
adc
jnp
xchg
cmp
mov
insl
rcrl
cltd
push
xchg
insl
std
pop
imul
ret
mov
test
mov
outsb
clc
adc
fldt
jns
pop
loop
loope
enter
arpl
and
cltd
xchg
mov
xor
lds
sbb
mov
sbb
cmp
cmp
in
adc
add
cs
push
pop
loope
mov
les
in
pusha
inc
and
xchg
cmp
cs
jmp
nop
mov
stc
mov
sub
and
ret
xchg
leave
push
add
sub
push
sbb
test
pop
sub
inc
push
xchg
mov
inc
out
mov
loopne
mov
ret
sarl
pop
ret
sbb
mov
mov
mov
dec
inc
lret
pushf
and
push
lret
mov
push
pop
jmp
fisttps
mov
lret
inc
jno
add
aam
and
cmp
dec
sbb
dec
fsubrs
out
mov
mov
pop
and
xor
addr16
daa
ror
movb
outsb
inc
jb
xchg
inc
out
sbb
xchg
dec
leave
push
cmpsl
jl
scas
xlat
stos
bound
test
negl
sbb
jne
xor
daa
adc
popa
in
outsb
icebp
sarb
push
out
xchg
sub
push
cmp
shll
mov
pop
mov
xchg
test
pushf
ja
imul
inc
pop
sub
cmc
xchg
pop
pop
iret
and
sbb
xchg
icebp
dec
inc
negb
sbb
pop
data16
addb
sbb
cmp
or
pushf
sbb
loop
mov
cmp
mov
adc
pushf
hlt
mov
mov
movsb
int
add
cmpsb
ret
call
lods
fs
jne
cmc
add
sbb
jg
cmpl
inc
cmp
sbb
js
je
lcall
add
mov
out
xchg
cli
fcom
jbe
dec
pop
das
push
repz
aas
pop
pop
or
cmp
dec
ret
in
fs
fcmovnu
sub
and
ja,pt
push
cs
movsb
call
loopne
fistpll
mov
cmp
jbe
xchg
add
idivl
js
bnd
or
pop
stos
or
ret
mov
or
out
cmc
dec
testb
test
enter
popa
xor
imul
daa
imul
out
lods
sub
popa
mov
test
incl
mulb
cld
mov
push
inc
cli
aad
push
jmp
or
lret
push
in
movsl
cltd
xchg
stc
push
pop
mulb
jno
pop
push
xchg
aas
fsubrl
fistpl
ror
xchg
in
cmp
cmpsb
shl
pusha
mov
in
cmp
fdivs
std
idivl
mov
sub
jmp
cmp
sti
fwait
leave
push
jle
sub
gs
hlt
add
filds
lahf
jns
mov
add
mov
jmp
jo
cmp
dec
push
daa
push
clc
pusha
mov
or
cmpsb
and
int
insl
mov
stc
fidivs
jl
shlb
nop
lods
pop
test
jb
sbb
mov
pop
xchg
adcb
test
push
gs
and
pop
lret
sahf
movsl
push
push
clc
inc
mov
out
mov
test
pop
adc
cmp
arpl
fnstenv
jns
cwtl
and
repz
push
inc
jns
leave
aam
pop
inc
cmp
dec
push
pop
pusha
ljmp
dec
push
mov
pop
jne
lds
dec
arpl
nop
xchg
add
lods
icebp
nop
push
sti
bound
or
outsb
inc
ljmp
fimuls
mov
mov
and
es
fcompl
mov
add
push
sbb
popf
pop
test
mov
aam
imul
cmpsl
stc
inc
and
cmpsl
bound
aad
and
or
push
pop
fsub
lret
lret
xor
jge
sub
sub
roll
das
popf
mov
pop
test
sbb
xor
leave
push
popa
fwait
inc
sarb
leave
pop
push
or
sbb
jg
std
xchg
shrb
test
and
lds
pop
in
jbe
ljmp
lds
xor
lahf
dec
pop
mov
push
xorb
push
inc
mov
fcompl
xchg
out
lock
pop
in
aad
cmp
divl
bound
int3
inc
xchg
ljmp
jnp
adc
xor
push
loop
jge
in
mov
adc
mov
divl
aad
insb
mov
rolb
jns
rol
pop
push
fidivrs
pop
cmpsb
in
sub
pop
xchg
mov
fcomps
push
push
jns
cmovg
sbb
mov
out
fidivrl
test
push
sbb
xchg
sub
lock
xorl
movsl
shll
pop
inc
xchg
lcall
bound
call
lret
adc
or
dec
push
mov
mov
pop
jno
adc
add
movsl
push
orl
in
pop
mov
mov
sub
movsl
out
shrb
daa
add
js
fwait
rorb
aam
ljmp
in
pop
lcall
roll
call
and
movsl
out
pop
out
aaa
push
icebp
push
mov
jp
js
jmp
cmc
jecxz
mov
sub
in
jg
mov
inc
pop
ds
dec
pushf
into
push
flds
dec
or
xchg
adc
xor
adc
mov
stos
mov
ficoms
jno
dec
pusha
xlat
sub
ja
inc
addb
enter
xlat
mov
sub
mov
cltd
fisttps
lds
or
add
xchg
sbb
sub
rcll
lahf
pop
roll
mov
jmp
sub
jno
out
fcmovne
pop
mov
js
inc
cmp
in
loop
jg
int3
test
nop
pop
bound
xor
sub
inc
clc
cmp
inc
add
rcrb
sub
adc
cmp
rolw
dec
or
ds
nop
adc
popa
mov
pusha
jo
repnz
mov
cld
push
das
cmp
mov
xor
dec
ljmp
xor
popa
dec
jbe
sbb
mov
jae
wbinvd
pop
pop
fs
notb
imul
das
pop
add
mov
sbb
ret
pop
jp
dec
cmp
inc
addb
outsb
mov
jl
sub
or
or
stos
mull
dec
stc
pusha
xor
aaa
cld
shlb
jle
mov
or
cld
pop
xor
rorl
fnstcw
je
dec
fiaddl
es
jne
add
addr16
or
mov
xorl
push
out
sti
inc
xor
pop
lods
xor
push
in
scas
pmaxsw
mov
pop
mov
sub
dec
inc
divl
dec
add
cld
jge
loop
cwtl
sbb
insl
pop
loop
cmp
cmp
cwtl
flds
dec
ds
pop
shrb
aaa
aaa
aam
add
and
jl
add
arpl
or
jno
popl
out
sbb
int
lcall
mov
sub
adc
pop
pop
cmpsl
mov
dec
in
cmp
movsl
outsb
cltd
xor
lahf
ja
aas
dec
sbb
or
into
jge
adc
gs
mov
lods
mov
add
jl
imul
int3
or
pop
faddl
sbb
rorl
push
mov
in
int3
das
mov
in
cmp
movzwl
aaa
sbb
cmp
adc
inc
sub
je
xchg
popf
xchg
nop
mov
in
push
iret
xchg
cltd
test
adc
mov
jmp
dec
mov
fiadds
jmp
mov
fimuls
sbb
or
leave
cs
shll
xchg
lods
push
mov
out
ljmp
dec
gs
inc
mov
dec
test
lret
paddsb
xchg
les
punpckhwd
push
movsb
cld
out
mov
xor
mov
adc
lret
xlat
cmpl
mov
xchg
jecxz
or
jne
rclb
sub
cmp
and
jne
iret
ret
cs
push
lahf
hlt
adc
jecxz
push
mov
push
cmp
pushf
fbld
pop
repz
pushw
inc
jecxz
xchg
push
push
cmp
push
lret
lcall
stos
mov
xchg
xor
loop
push
scas
jbe
sbb
pop
lret
movb
ret
data16
push
ja
loop
stos
push
jns
mov
jle
lahf
lods
imul
sbb
xor
repz
jb
mov
mov
dec
jg
pop
jbe
sub
jne
jae
stos
xor
mov
ja
aam
rorl
mov
rorl
cmc
aas
and
loopne
repz
daa
lcall
test
sbb
dec
mov
adc
mov
hlt
jg
jno
insl
dec
insl
mov
mov
add
dec
mov
popa
outsl
xchg
push
lock
push
rcr
inc
jns
frstor
mov
dec
mov
imul
inc
xor
jl
outsb
mov
push
shl
sbb
jbe
cltd
xchg
gs
push
fs
lahf
das
dec
cmp
mov
xor
inc
loope
jecxz
dec
add
sbb
push
testl
dec
lcall
jmp
insl
loope
addl
or
daa
inc
lods
loope
sahf
in
push
adc
push
fwait
test
inc
inc
xchg
sar
xchg
lret
js
and
xchg
cwtl
shll
mov
insb
ljmp
or
cmpsl
fisttpl
add
sbb
test
fwait
repnz
mov
dec
ret
hlt
push
bound
push
lret
jmp
or
repz
jae
xchg
inc
aad
pop
in
or
inc
or
pop
pop
xchg
dec
mov
int3
cmp
in
mov
mov
fisubl
sub
int3
jbe
push
or
movsb
sbb
sbb
cld
sahf
cmp
lret
pushf
sbb
inc
insb
mov
loopne
flds
and
sbb
mov
push
mov
pusha
push
idivb
sbb
insb
sbb
inc
jns
sbb
mov
cmpsb
xchg
mov
xor
cltd
lods
push
or
adc
mov
outsl
push
imul
sbb
and
jmp
lods
xor
push
ja
aam
in
rorl
mov
push
xor
jno
sub
or
cmp
xor
stc
pop
lds
aas
mov
jns
xor
push
xchg
inc
add
movsb
mov
aam
outsl
lahf
aad
xchg
les
std
xchg
jnp
adc
mulb
ds
xlat
lea
push
xchg
pusha
fstpt
jb
scas
repnz
xchg
mov
jne
lods
push
into
xor
jp
lret
mov
and
jl
add
outsb
and
fistps
test
jnp
xor
dec
ret
ficomps
pop
mov
sub
nop
lock
mov
and
xchg
fsubs
shlb
call
imul
incl
mov
inc
mov
je
fsubs
insl
stos
divl
out
dec
jns
mov
das
arpl
xchg
jnp
gs
scas
outsl
pop
or
jp
cmpsl
aaa
push
cs
ret
push
xor
cmp
sbb
outsl
negb
in
and
icebp
movsl
dec
lahf
mov
fisubs
push
pop
repnz
ficompl
sahf
mov
xlat
pop
push
clc
in
mov
icebp
dec
push
ss
stos
dec
enter
sub
push
mov
mov
pop
sbb
loopne
jno
or
lods
jb
lret
jmp
xlat
mov
xchg
xchg
sahf
js
push
loope
pop
dec
sbb
repnz
and
sbb
xor
mov
mov
dec
fidivrs
mov
je
in
mov
insb
je,pt
pop
mov
ss
and
loop
scas
popf
jge
insl
popa
xchg
out
mov
jo
fs
cmp
stc
and
mov
dec
daa
mov
and
mov
xchg
sbb
push
xor
mov
dec
xchg
push
or
aaa
loop
mov
push
push
cmp
aaa
sbb
push
mov
dec
mov
add
lahf
cmp
scas
sbb
xchg
int3
shrb
mov
lods
xor
mov
insb
dec
cmpsl
jge
push
ret
push
gs
jns
or
mov
pop
cli
imul
mov
test
sbb
jae
jne
cs
cli
shr
xchg
mov
push
out
jns
arpl
jbe
mov
sbbl
jno
sub
bound
pop
repnz
dec
and
cmp
mov
mov
xchg
es
jl
sub
mull
aam
test
and
jmp
jp
push
les
insl
bsr
call
inc
inc
xor
inc
inc
test
push
or
and
fildll
mov
and
outsl
inc
lds
or
mov
adc
dec
lret
dec
lock
fs
movsl
lret
popa
sub
xchg
jne
sbb
dec
test
fidivl
mov
push
fstps
fincstp
jl
ljmp
xchg
inc
mov
arpl
push
loopne
xchg
icebp
rorl
jbe
std
dec
ss
add
sbbl
or
mov
into
jnp
push
mov
jge
in
cltd
out
mov
and
fs
insb
and
mov
lahf
pop
out
pop
jae
mov
or
and
lods
dec
sbb
dec
adc
and
inc
mov
sub
das
sub
and
push
cld
loope
ret
and
cmp
outsb
test
xor
out
push
push
je
xor
xchg
pop
loope
cmp
and
adc
dec
pushf
adc
lahf
stc
jp
pop
sti
subb
dec
int
in
jnp
pusha
add
icebp
cmp
cmpsb
add
sub
sub
jae
mov
movsb
imul
xadd
das
mov
rolb
xor
jno
sahf
mov
adc
mov
push
jnp
pop
xchg
jbe
adc
jmp
adc
cld
lock
and
and
mov
sbb
or
pop
xchg
inc
lret
lea
push
cld
dec
bound
ja
hlt
or
fs
js
mov
add
or
data16
jmp
mov
arpl
sub
add
or
test
xor
pop
xor
cmc
mov
mov
mov
aam
lcall
cmp
mov
sub
mov
js
pop
push
loop
int3
pusha
mov
loope
adc
xchg
dec
xchg
lahf
xchg
orl
and
or
divl
mov
rcrb
orb
test
mov
aam
jg
repz
aas
cmp
int3
rolw
aad
mov
mov
dec
jo
jmp
pop
sarl
push
cwtl
mov
mov
icebp
jmp
fisubs
mov
cld
movsb
xchg
testb
aad
mov
cmp
push
pop
xlat
int
inc
arpl
xlat
mov
in
pop
popf
call
std
jge
and
xchg
out
mov
mov
repz
mov
js
pop
int3
cmp
aaa
and
cld
aad
bound
sarb
adc
dec
mov
jb
jns
cld
test
popa
in
xchg
addr16
cmc
adc
jo
aam
stc
mov
ret
aad
jne
jge
xor
xchg
in
xlat
loopne
xchg
jp
dec
filds
jno
push
rcrl
into
adc
lret
loop
push
pop
loopne
push
sbb
psrlw
pop
loope
loop
les
movsl
cmp
shl
adc
pop
insl
mov
mov
pop
mov
inc
mov
sahf
add
andb
bound
push
shll
repz
cmpl
outsl
addr16
add
push
mov
inc
sbb
jmp
mov
xlat
fs
je
aaa
push
cmp
mov
push
jno
pop
sbb
std
push
fnsetpm(287
pop
xchg
pusha
inc
stos
in
sub
cmc
fiadds
inc
xchg
mov
cltd
inc
dec
sub
jecxz
arpl
cmp
or
add
jbe
sbb
add
out
jl
adc
xchg
jne
dec
fisubs
push
xchg
rcr
kunpckwd
dec
loopne
push
sarl
fnstsw
aas
daa
fimull
dec
hlt
rorl
sbbb
inc
daa
insb
inc
xor
dec
in
cmpsb
mov
gs
outsb
sub
arpl
mov
fistl
loope
mov
pop
fildll
jb
loopne
pop
inc
inc
lret
jle
adc
lret
or
xor
pushf
push
stc
pop
mov
dec
mov
aaa
mov
pop
add
or
dec
xchg
adc
outsl
jp
push
xor
pop
mov
add
mov
pop
mov
hlt
mov
int3
loopne
sbb
xor
cwtl
lahf
loope
mov
rcr
mov
or
xor
dec
adc
fdivr
jno
dec
mov
movsb
shlb
dec
pop
push
shrl
das
adc
sbb
add
mov
adc
arpl
push
add
cmp
ss
inc
leave
push
insl
lahf
dec
inc
xor
repnz
push
ljmp
jns
mov
add
jecxz
ds
shl
out
jg
ret
je
ss
or
je
mov
lret
insl
pop
lods
outsb
stos
lods
mov
cmp
int3
lret
test
stos
ds
add
xor
sbb
mov
lret
add
ret
aad
xchg
xor
jne
and
jl
aaa
inc
jmp
and
xor
jo
push
xchg
xor
sbb
xchg
outsl
mov
mov
or
pop
cmp
sbb
cmp
push
fildll
sub
push
sbb
adc
mov
loop
or
jbe
fcmovb
mov
lret
mov
mov
into
sbb
out
push
insb
sub
cmc
clc
push
mov
notl
and
or
cmc
mov
xor
mov
mov
cli
jle
insl
inc
notl
dec
sbb
nop
aam
out
cmc
test
fldcw
insb
push
or
mov
cs
lods
arpl
in
and
push
cmp
outsb
push
sub
outsb
mov
xchg
mov
nop
push
rcl
pop
mov
mov
movsb
cmp
push
dec
ja
lret
or
out
xchg
repnz
adc
pop
push
loopne
scas
outsb
push
mov
xchg
dec
xlat
inc
and
into
inc
mov
mov
out
sahf
in
push
jg
xor
pusha
pop
leave
or
adc
fmull
dec
lret
jg
pop
add
cmpsl
inc
loope
adc
mov
pusha
sbb
pushl
mov
cltd
movsb
popa
jbe
mov
movl
push
fcomip
call
xchg
cmc
rep
push
push
jecxz
pop
jno
jb
hlt
pop
xchg
neg
arpl
call
jne
dec
sbb
push
stc
mov
jns
sub
sub
mov
inc
cmp
xchg
pop
jo
int
cwtl
ss
mov
outsb
xor
dec
xchg
cmp
mov
test
inc
push
sahf
inc
popf
or
add
lock
nop
adc
cmc
fnstcw
incb
mov
add
std
sub
cwtl
pop
dec
loopne
loopne
daa
mov
xor
sbb
into
notb
push
xchg
popf
and
cli
dec
sahf
adc
call
loope
out
loopne
stos
sbb
sbb
int
enter
ja
pop
aam
mov
hlt
mov
push
std
ret
dec
mov
sets
push
in
push
es
cltd
xor
orl
ret
inc
cld
nop
in
cmp
es
jp
stc
fcomi
rclb
out
adc
sbb
imul
add
xchg
push
and
cltd
pop
mov
cwtl
insb
fidivrl
addr16
xor
cmp
imul
lea
mov
or
xchg
ja
pop
or
jge,pt
pop
add
mov
call
test
std
pop
xchg
aam
jns
call
sbb
pusha
push
jbe
mov
js
loope
and
sbb
mov
jo
addr16
xchg
in
jo
dec
les
xor
pop
lahf
lahf
scas
pop
loope
pop
lret
sub
sub
push
sub
popa
inc
push
jp
pop
cs
pop
xchg
mov
in
mov
push
test
pop
and
cmp
dec
mov
cmpsl
je
lcall
sbb
insl
iret
adc
aad
jecxz
push
mov
mov
cltd
aas
inc
hlt
repz
insb
jo
cmp
pop
std
xchg
sbb
or
lret
pusha
xor
sti
cmp
mov
jp
mov
cmp
dec
loop,pt
push
push
shll
aas
push
fcoms
ljmp
outsl
sub
test
cmp
ljmp
mov
xor
ds
fsubs
add
sub
lods
xchg
jb
out
xor
mov
sbb
pop
lret
mov
mov
or
int
mov
adc
fildl
dec
call
push
xchg
lds
lahf
jmp
cli
xor
fdivl
sbb
jle
addr16
mov
clc
lods
cmp
fs
jl
pusha
xor
add
ret
dec
aam
out
dec
aam
mov
push
sub
adc
pop
mov
pop
pop
xor
fdivrs
mov
jmp
mov
sbb
push
lahf
mov
lea
insb
cmp
dec
pop
test
and
shll
movsl
repz
fs
outsb
insl
jmp
mov
fimull
cmp
div
mov
lea
popa
out
out
jl
add
push
sbbl
popf
mov
mov
std
pop
mov
out
mov
adc
xor
push
push
cld
jmp
gs
xorb
cmp
rol
or
and
mov
cld
sbb
pop
shll
sti
pop
testl
push
lea
push
stos
loop
add
and
das
test
mov
jbe
add
sub
inc
roll
mov
jb
pop
xlat
ja
jne
lea
mov
xchg
or
jge
sub
or
lods
stos
xor
cmp
xchg
cld
loope
pop
jmp
inc
es
les
add
lock
mov
sbb
add
ljmp
xchg
adc
xchg
cmp
rcrl
add
and
insb
jbe
jg
inc
lahf
sete
cmp
ret
enter
jp
out
loope
lahf
jmp
jecxz
test
mov
jo
pop
leave
xchg
sub
mov
cmp
adc
iret
seta
stos
jecxz
cmp
das
psubsb
cwtl
outsl
testl
adc
jge
in
andb
mov
add
add
push
pop
scas
mov
lods
movl
mov
arpl
and
pop
xor
ret
push
inc
mov
push
ret
lods
mov
popa
cwtl
inc
xchg
jae
leave
daa
pop
aam
push
vshufps
test
scas
push
jle
das
mov
xchg
dec
sbb
xor
xchg
sub
inc
insb
movsb
testl
pop
cmpsb
loope
jbe
push
clc
adc
cmp
add
xchg
cltd
add
std
mov
aas
std
jb
std
imul
aam
cmp
cli
out
mov
sahf
or
sub
mov
jge
sub
mov
xchg
mov
inc
imul
in
dec
cmp
sub
mov
nop
mov
movsb
dec
mov
aad
and
jae
mov
push
inc
inc
push
jo
jae
jmp
jecxz
lcall
mov
imul
shlb
clc
clc
gs
pop
xchg
ja
adc
arpl
sbb
or
dec
pusha
mov
jle
cs
sub
imul
daa
enter
loopne
gs
xchg
adc
jecxz
das
sub
cmp
jno
xchg
cmpl
call
jmp
popf
jo
inc
mov
xor
insl
lret
sub
lds
jnp
fisttpll
psubusb
pusha
xchg
jns
xchg
dec
mov
loopne
test
dec
gs
adc
mov
jecxz
daa
lds
jo
loope
in
inc
pushf
sub
mov
aas
inc
dec
inc
sub
lock
pop
pop
cmpsb
loope
into
js
fs
arpl
jp
dec
jecxz
mov
repz
jnp
inc
xor
pop
daa
repnz
xchg
fsubrs
add
push
dec
int
or
and
mov
add
push
addr16
out
push
loope
sub
push
movsb
jb
fistps
sti
movsb
or
outsb
ret
rolb
sub
popa
and
push
mov
adcl
adc
les
stc
pop
cmp
hlt
std
lahf
cmp
ja
std
pop
dec
adc
xchg
rolb
jg
jae
fiadds
bound
arpl
cmpsl
insb
shll
pushf
das
inc
aad
cwtl
call
imul
mov
pop
ds
inc
out
sti
push
fisubl
jns
fwait
xchg
filds
xchg
and
push
insl
into
mov
cmc
add
leave
mov
dec
das
sub
imul
sbb
shl
ja
pop
xor
cs
or
fbstp
je
lods
movsl
les
dec
cmp
inc
xchg
and
mov
sub
sub
push
ja
sbb
rsqrtps
sbb
mov
mov
lock
mov
ljmp
mov
lea
push
xchg
outsb
mov
lock
sti
aam
add
push
and
mov
sbb
lea
loop
adc
sti
nop
dec
scas
imul
xor
inc
adc
adc
aam
out
inc
xchg
cmc
mov
fistps
pop
testl
cmpsb
add
mov
shr
jmp
scas
xor
jnp
pop
fisttpl
cltd
setae
ja
mov
add
ret
or
outsl
jl
data16
push
out
adc
jl
push
mov
push
jae
ja
sub
fs
xor
movb
fstps
test
xchg
push
rclb
scas
dec
add
inc
add
mov
je
mov
xor
sub
dec
dec
cmp
jb
test
xor
push
cld
jmp
xchg
in
scas
sub
mov
sbbb
xchg
pop
and
ror
inc
add
sub
and
lret
push
insl
sbb
pop
mov
into
and
imul
nop
out
pop
in
dec
out
lea
mov
push
out
dec
jmp
insl
xor
shlb
or
andb
filds
ljmp
out
jg
shrb
sti
js
mov
lret
push
sub
mov
push
enter
test
cmp
mov
dec
divb
and
dec
nop
insl
xchg
into
sahf
pop
repz
mov
jb
cmp
xlat
mov
mov
mov
push
adc
out
sahf
sbb
pop
push
jmp
lods
hlt
in
nop
xchg
leave
adc
xor
xor
add
sub
scas
inc
mov
mov
xor
dec
or
dec
cmp
jge
adc
inc
mov
shlb
sbb
pushf
inc
in
loopne
fisttps
push
pop
adc
adc
clc
pop
xor
loop
pop
insb
ret
movsb
aas
lcall
jns
icebp
xor
cltd
stos
sbb
mov
or
fisubrs
ret
icebp
xor
in
mov
jp
das
cmp
and
inc
loop
repnz
cmp
scas
daa
div
push
add
ds
add
daa
rorb
jmp
mov
push
lods
xchg
adc
mov
loopne
hlt
mov
andb
fisubrs
jne
mov
dec
imul
in
jge
xchg
xchg
cmp
adc
faddp
add
shrb
test
cmp
lcall
roll
dec
leave
jns
insb
fildl
mov
xchg
out
out
aad
mov
and
mov
inc
dec
or
mov
sub
mov
or
jne
lea
jb
cmpsb
in
sbb
push
call
int
pop
bound
add
sbb
adc
cmc
add
jne
xchg
fstps
inc
cs
xchg
push
test
imul
imul
adc
out
sub
adc
xor
jecxz
xor
xor
lods
pop
mov
inc
dec
xchg
fisttpll
adc
xchg
insl
fdivs
mov
sub
popf
loop
scas
mov
scas
jp
push
cs
lods
jne
cmp
fcomi
test
jo
xlat
test
and
sub
pop
stos
fs
xchg
adc
je
stos
scas
cmp
push
xchg
sbb
inc
and
shll
mov
mov
add
mov
jne
int3
insl
shrl
mov
into
push
scas
xor
popf
pop
adc
sub
ret
push
or
jns
or
push
test
pop
cli
cmp
cld
das
or
add
mov
scas
out
pop
push
xchg
pop
mov
aad
adc
pop
jecxz
add
sahf
pop
pop
sub
inc
mov
decb
or
inc
inc
cs
fimull
and
data16
inc
or
rcll
iret
loopne
sahf
mov
adc
fnstcw
push
or
push
xor
pushf
test
jns
jbe
call
and
arpl
pusha
pop
movsl
or
mov
loop
call
or
test
jnp
push
inc
xchg
loopne
sbb
lds
negb
loopne
in
out
call
xlat
and
adc
lea
out
mov
push
xor
push
xor
jbe
jbe
xchg
std
sbb
js
andl
dec
fnstcw
ds
fsub
add
add
movsl
sub
push
test
test
fidivl
cmp
cmpsb
dec
mov
cmpsb
mov
lcall
push
mov
test
pop
stc
push
xchg
xchg
inc
dec
das
xlat
push
xchg
popa
add
pushf
xchg
jb
xor
and
dec
or
dec
sbb
pop
inc
adc
sbb
push
mov
testb
jp
pop
fnstsw
cli
ds
ljmp
movsb
jb
pop
ss
lods
jp
je
sbb
jne
icebp
mull
mov
repz
sbb
fcmovnb
int3
or
mov
and
lcall
sbb
xchg
leave
imul
adc
aas
xchg
or
dec
jb
pop
bound
xor
add
inc
in
add
arpl
sub
xchg
push
cld
jo
inc
shrl
cmpsl
fucomip
pop
call
adc
sub
pop
out
push
loopne
mov
sbb
lcall
std
jnp
xor
ja
testl
ja
movsb
jle
fwait
aad
out
mov
enter
jnp
pushf
jnp
mov
push
pusha
repnz
cmc
push
test
xchg
cli
daa
enter
xchg
inc
sbb
addr16
repnz
xlat
pop
add
pop
and
insl
lods
nop
mov
pop
fsubrl
lods
inc
sub
push
and
fdivr
addr16
imul
dec
int3
lods
jmp
lods
call
mov
or
insb
movsb
stos
mov
adcb
pop
jecxz
lds
dec
and
fstpt
add
insb
inc
sbb
cmp
in
test
push
int3
dec
mov
xchg
mov
push
push
pop
addr16
pop
daa
cmp
mov
into
fists
cmp
inc
ja
loopne
fistpll
add
lcall
and
fs
and
mov
dec
testl
xor
orl
dec
push
xchg
std
subb
loop
push
adc
xchg
jl
mov
adc
enter
xchg
sbb
sub
adc
mov
stos
cmpsl
pop
ds
pop
xor
outsl
push
scas
adc
ljmp
inc
popf
mov
pusha
cmp
enter
and
adc
lods
add
insb
adc
dec
test
iret
out
sbb
or
mov
insl
sub
jnp
icebp
mov
loope
sar
out
inc
in
test
cmc
lods
sub
out
jg
dec
mov
frstor
push
faddl
cmp
test
sub
sti
or
fwait
and
out
mov
cmp
ret
cltd
mov
sbbb
movsb
insb
xchg
mov
sub
mov
pop
hlt
jl
mov
adc
hlt
jl
ret
push
loop
rorl
adc
ret
mov
es
push
pop
jno
imul
jle
push
es
ret
or
xor
pushf
xchg
cs
inc
shrb
dec
sahf
inc
mov
lahf
cmp
mov
push
sub
cmp
lods
repnz
mov
sbb
in
jbe
jle
lcall
xchg
push
fwait
cmpb
ljmp
pop
fadd
mov
rcl
pop
and
or
pop
je
mov
adc
sahf
jns
xor
insl
and
pop
in
xchg
sub
je
jae
lods
mov
mov
shr
jb
and
xor
push
sbb
sub
pop
insl
idivl
aam
pusha
loopne
jmp
aad
pop
jmp
loop
lds
mov
movsl
and
outsb
inc
push
sub
push
mov
shr
push
test
lock
lahf
jge
pop
xchg
sbb
sub
xor
xchg
mov
cltd
cmpsl
rcrb
or
push
mov
jg
dec
xor
leave
sbbb
xchg
movsl
inc
xchg
and
addr16
push
sbb
jbe
cmc
test
leave
fnstenv
jmp
mov
push
cmc
inc
sub
aaa
sbb
cmp
push
mov
mov
jge
adc
cmp
mov
cli
test
lret
lods
mov
mov
out
insl
lahf
pushf
or
adc
lret
and
test
mov
mov
into
fnstenv
xchg
cmp
mov
dec
ret
push
pop
insb
dec
or
push
pop
push
fnstenv
in
rcll
out
scas
sbb
out
jg
xlat
test
and
xchg
cltd
mov
xor
rorb
shl
aas
xchg
stos
in
out
mov
call
or
adc
fistl
fdivrl
rclb
ljmp
adc
push
notl
icebp
add
cltd
test
sub
jp
rclb
out
or
inc
sti
stos
flds
xchg
lahf
or
jmp
jo
dec
cmpsl
into
jb
mov
stos
pushf
sahf
andnps
int
adc
and
es
mov
movsl
and
adc
fdivrl
or
push
adc
adc
inc
das
jno
repnz
push
lds
imul
push
mov
inc
mov
push
cwtl
sub
pop
add
stos
dec
xchg
in
xchg
mov
ficoms
adc
pop
je
cmpsl
mov
ret
rcll
incb
jnp
mov
inc
stos
jbe
cmpsb
das
aaa
mov
call
mov
inc
fstpl
cltd
add
dec
xor
dec
test
inc
ja
push
mov
add
or
pop
push
push
dec
sahf
into
push
mov
push
mov
sbb
ret
jno
enter
push
push
cltd
out
insb
mul
enter
pop
cmp
dec
hlt
sahf
repnz
sub
out
mov
leave
inc
cmp
mov
adc
add
jae
lds
lods
mov
lahf
lods
stos
out
dec
add
imul
mov
pop
inc
clc
imul
jns
jb
mov
hlt
mov
lahf
cmp
pop
test
pop
sbb
and
addl
mov
sub
leave
mov
inc
add
xchg
scas
test
add
int3
xlat
rcrb
data16
cmpsb
push
mov
loop
mov
movsb
and
push
mov
notl
sbb
push
ret
push
rcl
stc
push
or
mov
sti
das
xor
xchg
adc
pop
pop
lret
into
test
dec
pop
push
lea
or
insl
mov
cli
sar
das
push
rorb
pusha
pop
fimuls
mov
jo
mov
pop
jmpw
dec
movsl
inc
xchg
inc
cmp
outsb
mov
sub
aam
in
pop
sbb
add
mov
pop
mov
test
movsb
mov
xor
jo
ret
shlb
mov
sbb
mov
cmc
lock
inc
enter
outsl
jne
das
enter
mov
and
add
dec
aaa
push
loope
sbb
mov
repnz
pop
sbb
add
stc
xchg
dec
imul
sub
jns
push
outsl
jl
jp
fsub
push
sbb
fsubl
mov
daa
sbb
adc
andnps
ja
int3
fisttpll
mov
lds
movsb
push
dec
aas
mov
push
add
sub
ljmp
pop
xchg
pop
xor
jbe
lds
mov
xorb
push
or
call
in
in
bound
psllw
je
inc
fildl
sub
bound
or
add
pop
stc
inc
xchg
lahf
jnp
loopne
ret
xchg
and
and
fwait
push
mov
outsb
lcall
or
add
imul
iret
push
fs
cli
imul
sbb
dec
frstpm(287
xchg
out
cmp
cmp
iret
std
cmpsl
xlat
or
xlat
pop
addr16
mov
pop
pushf
or
inc
inc
lods
orb
cltd
sub
imul
jge
fs
mov
into
xor
mov
and
rcll
sbb
lods
inc
ss
push
xchg
push
push
add
xchg
pop
in
in
loope
mov
and
sbb
nop
xchg
pop
xchg
mov
or
movsb
mov
adc
mov
pop
jmp
inc
pop
inc
xchg
push
jbe
in
push
jnp
ljmpw
jnp
out
pop
push
pop
out
cmp
dec
loopne
adc
pushf
jae
sub
sub
sub
dec
dec
repnz
ds
les
loopne
cmpsl
fiadds
and
enter
inc
in
cmp
inc
scas
inc
push
pop
and
adc
shll
cmp
popf
outsb
aad
mov
xchg
daa
inc
out
cmp
decl
scas
pop
dec
mov
mov
rcrb
shr
cmpsl
mov
ljmp
fstpt
outsl
shll
push
fbstp
fisubl
repz
popf
in
insl
pop
mov
stos
add
jl
inc
mov
ljmp
cmpsb
mov
mov
xor
fs
aaa
leave
sub
jmp
ret
sub
cli
jbe
mov
adc
sub
js
xchg
int3
arpl
loopne
out
and
bound
test
jae
test
jp
es
jmp
and
or
fldcw
push
cltd
in
je
jno
out
sar
xchg
mov
mov
xchg
push
inc
mov
push
repnz
pushf
leave
mov
leave
stos
push
clc
shl
pop
mov
cmp
xchg
cmp
aas
pop
push
inc
adc
sub
sbb
xchg
or
pop
jle
xchg
cli
xor
sub
adc
inc
and
fisttpl
into
cmpl
test
loope
add
sub
into
sbb
pop
cltd
pop
sub
es
ret
dec
mov
jnp
and
aaa
push
and
daa
test
mov
push
out
inc
gs
loop
in
popa
add
cmpsl
mov
sub
fs
inc
fsubr
pop
gs
lret
filds
dec
sub
adcl
ret
mov
adc
push
lea
stc
mov
cli
adc
inc
mov
int3
shrb
adc
stc
xchg
leave
mov
mov
sti
cmpsb
inc
sbb
and
xchg
cltd
addl
out
xchg
filds
push
mov
xor
loop
jp
pop
int3
add
adc
stos
sahf
push
push
pusha
pop
iret
lock
cmpsb
cmp
push
outsb
mov
add
test
sti
rorl
scas
into
mov
push
cltd
pop
mov
mov
adc
xchg
dec
or
mov
movsl
insl
cld
cmp
call
pushf
xor
lret
sbb
cmpsb
pop
scas
xor
in
push
in
xor
hlt
hlt
cmpl
mov
ja
and
sbb
sbb
shl
dec
mov
cmp
dec
and
mov
mov
fidivs
mov
adc
jp
adc
cmpsl
outsb
test
cmp
push
lcall
lock
fisttpll
mov
mov
ret
mov
jmp
and
jnp
nop
jmp
pop
inc
dec
ret
jb
xchg
mov
js
add
out
ljmp
xchg
mov
test
dec
dec
insb
xor
outsl
mov
cli
repz
clc
inc
sbb
int3
imul
push
cmp
cmp
adc
or
cltd
jne
sbb
mov
vpmacssww
enter
push
sub
das
push
insb
je
sbb
cwtl
enter
aas
clc
add
out
ljmp
stos
jo
xor
dec
insb
leave
dec
pop
mov
sbb
and
pop
lods
lahf
mov
push
add
xchg
fisubrs
cltd
jo
cmpsb
inc
jge
mov
push
test
and
mov
xchg
aas
insb
outsl
stos
mov
ljmp
sarl
call
adc
dec
inc
or
lcall
daa
add
lods
and
push
in
out
arpl
aas
int3
xor
mov
inc
test
sbb
cmpl
push
movsl
int
movsb
jle
unpcklps
xchg
in
dec
in
call
jge
lods
jb
bound
xchg
cmp
mov
mov
mov
andl
dec
test
insl
add
scas
or
data16
aad
aaa
jne
iret
fbstp
mov
mov
ds
out
mov
mov
xor
push
pop
jecxz
add
je
aas
mov
mov
sbb
xchg
mov
lods
repnz
jbe
mov
add
mov
mov
ficoml
sbbl
int3
mov
and
mov
lret
sub
xor
stos
or
sbb
dec
mov
push
leave
jae
dec
int3
mov
lcall
out
jmp
into
insb
push
mul
xchg
fadds
fdivl
popf
scas
pushf
add
imull
or
inc
stos
aam
je
push
mov
test
jne
add
fmulp
es
mov
movsl
push
cwtl
and
es
in
sbb
mov
daa
sub
out
mov
mov
movsb
dec
scas
xor
sub
xchg
popa
and
mov
push
outsl
sahf
leave
out
push
mov
push
out
sbb
xor
lahf
mov
push
mov
jno
mov
rcr
dec
int
into
mov
or
xchg
jno
mov
inc
cmp
lds
sub
mov
jbe
stos
mov
rcr
sub
out
dec
scas
js
sbb
adcl
in
call
add
xchg
fstp
into
cwtl
popa
mov
cmp
cmp
test
fiaddl
lahf
sbb
dec
mov
gs
xor
and
fstl
aas
insl
jp
mov
pop
inc
mov
or
sub
jg
adc
shlb
es
inc
loope
jg
sub
gs
mov
add
popa
rorb
sub
fwait
inc
pop
jmp
pop
mov
inc
icebp
popa
mov
cmpsb
dec
push
mov
pop
je
les
xchg
lcall
enter
jns
push
movl
popf
scas
push
jno
push
repz
or
sbb
dec
jmp
rclb
addl
in
fldenv
aas
sbb
repz
mov
adc
jb
in
inc
imul
inc
ret
xlat
les
pop
pop
std
sub
jno
add
test
in
mov
idivb
outsb
loope
js
adc
mov
popa
test
push
cli
rcrb
fsubs
mov
clc
push
mov
dec
inc
je
cli
ss
fnstsw
mov
push
push
pop
or
push
mov
pop
mov
int3
mov
adc
mulb
adc
cmc
lahf
lds
pop
enter
popa
notb
out
sub
cli
cmp
sbb
push
lret
sti
pop
sub
cltd
movsl
sub
xchg
std
add
das
icebp
shrb
loop
mov
loopne
test
sti
and
or
out
pop
dec
mov
inc
jo
adc
jge
js
in
mov
stos
loopne
loop
popf
movsb
push
sbb
cld
dec
pop
sahf
mov
cmc
add
fmul
mov
mov
into
or
xor
mov
jae
xchg
rorl
test
mov
mov
sbb
xchg
cmp
pop
inc
fisubrl
push
jp
cmp
pop
push
adc
mov
shrb
jp
leave
movsb
test
jbe
add
sub
or
loop
js
sub
repnz
dec
add
xor
push
enter
mov
lahf
movsl
pop
xchg
pop
lcall
out
jbe
sbb
or
in
push
lock
clc
inc
hlt
or
int3
out
into
movsl
mov
int3
dec
cmp
shll
out
cmp
xlat
xlat
xchg
flds
popf
movsb
js
push
adc
lahf
mov
int3
clc
arpl
cmp
fisttpll
pop
lahf
pop
push
sarb
pop
aam
sbb
sbbl
lods
jae
xchg
push
cmp
add
sbb
and
or
test
lods
dec
lods
sbb
xor
push
and
cmp
dec
lret
out
xchg
ret
movb
mov
mov
daa
or
imul
in
in
out
mov
repz
fcompl
cli
or
fimuls
fisubrs
inc
pop
cmpsl
pop
and
invd
mov
lcall
icebp
lods
or
sahf
stos
or
test
testb
push
imul
pop
cmp
sbb
and
mov
mov
andl
mov
insl
out
mov
mov
rcrb
aas
aas
sub
push
xchg
mov
rcr
inc
cmp
fnsave
lods
lcall
dec
cmp
out
mov
jecxz
push
aas
in
add
jecxz
pop
pop
lds
dec
mov
xlat
ljmp
sarl
add
pop
fdivs
mov
sbb
xor
clc
push
pop
mov
xchg
outsb
stc
loope
push
hlt
ds
test
orb
push
add
out
aad
mov
sbb
or
jbe
out
int
orb
or
inc
sub
into
ds
push
push
loope
inc
xchg
push
mov
mov
test
hlt
xor
mov
and
dec
btl
out
xor
mov
sub
push
mov
push
sub
xchg
mov
mov
mov
inc
fstps
cltd
aam
cwtl
mov
lock
sbb
dec
call
gs
les
incb
mov
loope
push
or
icebp
add
loop
into
loope
cmpsl
pop
nop
lret
data16
nop
pop
loop
jp
imul
scas
xchg
push
xchg
test
mov
scas
add
repnz
pop
xor
incl
inc
and
and
sub
inc
pop
jg
pop
iret
dec
mov
fcmovnu
ret
mov
mov
push
cwtl
mov
or
imul
fidivrs
aad
nop
nop
and
loope
mov
mov
cs
and
sbb
sbb
add
cltd
ds
rcrb
lods
into
adcb
xor
in
inc
cmp
mov
sub
sub
je
xor
cmp
push
ror
lahf
push
pop
push
imul
sbb
in
lcall
adc
mov
inc
push
dec
jae
dec
sub
sub
mov
sub
mov
add
inc
adc
pop
daa
lahf
dec
jmp
jecxz
xchg
push
int
xchg
and
xchg
out
icebp
loopne
mov
movsl
ljmp
andb
in
or
test
shl
adc
pop
ret
scas
inc
data16
orl
pop
lahf
popa
adc
cltd
push
in
mov
jne
jg
jae
inc
test
and
sahf
push
repnz
clc
notl
dec
jnp
ds
mov
mov
scas
or
imul
jg
push
es
dec
fwait
xor
or
in
xchg
outsb
lcall
ja
fldcw
int3
loop
xchg
jbe
fisttpll
add
inc
and
lock
xor
rorb
add
push
dec
shll
pop
lods
mov
jbe
dec
jno
popa
xor
pop
stos
repnz
negl
and
add
mov
bound
fadds
adc
aam
mov
or
std
inc
cld
adc
jge
pop
in
cli
jae
iret
das
popa
les
ret
scas
jb
gs
sarb
push
inc
out
out
popf
ds
add
xchg
daa
outsb
movsb
lods
lock
rcr
jae
int3
popa
inc
mov
add
jbe
setne
sub
push
in
lds
mov
flds
adc
jae
dec
arpl
push
call
adc
xorb
add
out
idivl
in
lahf
jl
les
mov
mov
fbld
sbb
xchg
lods
int
add
sbb
lds
ficompl
stos
out
mov
dec
clc
scas
add
cmp
cmp
pop
sub
repz
in
inc
xor
pusha
and
call
fistpl
mov
sahf
ljmp
js
mov
and
out
mov
inc
aaa
out
pushf
push
adc
and
ds
sbb
cs
adc
inc
pop
test
xchg
lret
insl
ret
mov
jg
xor
add
xchg
dec
fs
xor
jge
xchg
stos
iret
and
lods
pop
pop
out
aam
lret
adc
lahf
das
nop
lods
inc
push
fistl
loope
fimull
push
popa
cmp
ret
pushf
lock
dec
pop
xchg
hlt
inc
and
sbb
scas
clc
js
pop
xor
arpl
or
imul
ds
ds
iret
dec
or
fidivs
mov
into
adcb
pushf
lcall
dec
cmp
push
out
shlb
test
mov
sti
jo
push
sub
push
lock
jns
cs
xchg
inc
stos
xor
nop
shll
mov
mov
jbe
sahf
sub
icebp
xor
xor
adcl
inc
test
cmp
in
mov
jne
mov
xor
pop
clc
out
lea
dec
sub
aam
push
adc
pop
pushf
scas
scas
aam
ds
test
fcmove
jge
dec
adc
sti
test
jg
jnp
and
fnstenv
mov
cmpsb
sub
frndint
push
xchg
cmp
test
jecxz
push
in
xor
mov
jb
add
popa
jbe
and
cmp
jp
dec
sbb
xor
es
repz
cmp
in
cmpsb
xor
mov
std
or
or
aad
xor
test
out
pop
icebp
aad
pop
jnp
xchg
fcmovne
push
jmp
mov
mov
sahf
mov
pop
cmp
lods
iret
mov
xor
xor
xchg
lds
xchg
or
push
in
shrb
in
cmpsl
inc
xor
cmp
xor
cmp
adc
lret
and
daa
add
jne
adc
pop
inc
sahf
enter
xor
mov
psubb
cmp
lret
out
in
leave
dec
push
mov
pop
push
adc
aam
es
jg
paddusw
sahf
out
cmp
scas
cmpsl
xor
mov
dec
jno
inc
cmp
frstor
xchg
loop
push
jge
cltd
insb
push
fistl
scas
std
fwait
dec
sbb
into
cli
hlt
or
faddl
sub
movsb
dec
lea
cs
cmpsl
leave
xchg
or
in
push
add
xchg
sub
icebp
jne
divl
ret
insl
xchg
mov
jno
jae
adc
out
into
push
and
out
xchg
in
xchg
and
std
popa
sub
gs
clc
sub
ds
xor
gs
sub
cmp
xchg
pop
je
stos
push
push
loopne
sbb
popf
mov
pusha
pop
or
cmp
in
xchg
mov
out
repz
jmp
xchg
xchg
push
stos
mov
inc
dec
and
sbb
sub
aas
bound
je
or
rclb
sbb
inc
aad
imul
and
ror
insb
jno
and
push
mov
or
xlat
out
inc
mov
add
cmpsb
int3
adc
jb
jnp
jle
ret
or
ljmp
cmp
jae
pop
sbb
sti
push
pop
pop
scas
jnp
xchg
sbb
lret
fnsave
dec
or
jb
sbb
pop
dec
or
aad
lods
loopne
outsl
outsl
xor
pop
ficoml
jmp
cltd
mov
rcrl
push
xchg
loop,pn
cmpsb
mov
lret
adc
inc
in
test
inc
inc
int
or
pop
aam
mov
scas
jl
fists
daa
push
inc
mov
jne
mov
jg
add
push
xchg
xchg
ja
ja
sahf
push
pop
jo
push
push
es
add
lea
xchg
mov
cli
dec
cmc
out
addr16
enter
hlt
or
imul
jl
jp
ja
movsl
mov
dec
ret
jnp
cmp
sbb
in
jnp
jmp
and
imul
mov
lahf
push
jno
aaa
add
inc
dec
sar
mov
mov
sbb
sbb
out
cmp
jg
cmpsl
or
pop
fidivrs
stc
mov
inc
cwtl
xchg
data16
cltd
sub
sub
insl
xchg
mov
jmp
insb
aam
add
out
xchg
arpl
pop
sbb
fcmovnu
inc
push
ss
into
pusha
icebp
sahf
jecxz
dec
test
imul
mov
jbe
lahf
iret
pop
mov
cs
insb
popf
out
js
inc
xchg
aaa
pusha
adc
out
out
out
push
aas
adc
inc
clc
clc
adc
pop
adcb
inc
test
mov
xchg
add
lret
and
push
in
out
sbb
mov
xchg
repz
xor
and
adc
jo
outsb
adc
or
xor
in
fwait
inc
in
xchg
jo
add
cli
into
pushl
test
mov
cs
mov
or
mov
call
cmp
out
or
mov
insb
push
dec
in
add
roll
sbb
popf
negb
adc
pop
cmpsl
push
xchg
xchg
cmp
sarl
popa
popf
xlat
dec
aad
lods
xchg
fbld
xchg
and
int3
cmp
push
jmp
or
cmpsb
add
int3
xchg
into
in
pusha
cmp
iret
subl
inc
std
shr
xor
push
cld
sbb
mov
ljmp
cli
jg
xor
cmpsl
test
or
cmp
mov
ss
sbb
ja
ds
das
test
ret
push
cmp
push
cmc
mov
inc
fadds
mov
cltd
pop
mov
int3
push
je
pop
dec
and
xchg
test
jmp
hlt
mov
insb
addb
xor
jne
jne
mov
mov
add
je
adc
jb
mov
ljmp
xor
jb
mov
mov
pop
sub
cmpsb
pop
mov
call
repz
sbb
dec
insl
jne
in
cmp
cmpsl
or
mov
dec
jl
push
or
mov
adc
xor
in
cltd
aad
rolb
xchg
add
imul
inc
mov
ret
loope
es
jnp
fndisi(8087
int3
aaa
out
pop
aad
sbb
mov
jle
outsb
in
push
ret
or
push
and
push
jb
or
sub
repz
sarl
inc
sti
out
ret
mov
mov
mov
push
lcall
xchg
out
push
imul
out
enter
das
cld
faddl
orl
mov
lods
dec
push
mov
outsb
mov
fidivrs
mov
mov
ret
jbe
adc
xchg
sub
push
sarb
mov
sbbb
or
mov
das
fcompl
ja
imul
lock
xchg
imul
pop
call
rorb
pop
xor
dec
leave
mov
jecxz
pop
test
or
push
je
and
fwait
sti
push
fistps
pop
popa
pushf
add
mov
jle
shlb
fs
jmp
push
cmp
insl
shlb
mov
jbe
jno
jns
cli
cmp
repnz
out
lret
inc
ror
in
data16
mov
pop
outsl
mov
inc
pop
fbld
mov
mov
enter
xor
cmp
in
mov
cltd
jns
mov
inc
sub
daa
mov
movsb
jmp
and
push
nop
add
hlt
test
js
jae
pop
subl
jb
cwtl
sti
sbb
addr16
pushf
cmc
sbb
inc
cltd
jo
dec
mov
daa
cmp
imul
pop
xchg
ja
xor
add
cmp
call
mov
add
cwtl
and
ret
jp
cmp
xor
sub
or
mov
lods
fld1
sub
inc
es
sbb
mov
xchg
add
add
call
add
cltd
call
loopne
inc
adcb
mov
sub
mov
out
and
push
adc
sbb
insb
add
jle
stos
cmpsb
fadds
in
cwtl
adc
outsb
pop
test
aaa
add
or
fs
divb
lds
add
push
std
test
and
jp
arpl
xchg
negb
stc
fbld
repz
repnz
push
mov
mov
in
adc
in
jp
xchg
jbe
fnstcw
jecxz
and
stos
push
or
cwtl
cmpsb
push
adc
push
mov
mov
xchg
adcl
aam
mov
xchg
ja
xor
or
jne
out
push
mov
dec
outsl
cmp
cmp
mov
add
xor
dec
pop
js
mov
xchg
or
pop
mov
inc
iret
inc
jno
dec
cmp
jecxz
cmp
xchg
bound
sbb
ds
lcall
iret
xlat
jbe
rorb
loope
sub
or
or
insl
mov
cmp
inc
jmp
sti
fwait
xchg
push
ret
call
pop
sub
pop
mov
bt
int3
sahf
jl
xchg
in
daa
jnp
push
test
les
push
movsl
fnsave
jbe
scas
std
inc
js
mov
sbbb
lret
lods
cmc
xlat
stos
lods
mov
xchg
inc
push
add
int3
and
cmovl
ret
mov
push
rcrb
mov
pop
insl
adc
fdivp
out
popf
sub
xchg
inc
mov
loop
out
in
mov
lods
lret
jbe
xchg
cmpsb
fdiv
sbb
mov
aaa
xchg
and
pop
xor
jb
sub
mov
mov
or
fstps
aas
shll
and
lcall
cld
dec
inc
inc
add
pop
fldl
sbb
mov
cmp
movsl
fsubr
enter
adcb
or
out
icebp
je
call
inc
and
test
sti
imul
orl
inc
sub
enter
jo
dec
rorb
inc
insb
jnp
leave
into
cld
cs
xor
les
insb
sub
aad
in
add
push
fidivl
shlb
jp
pop
and
orl
fbld
xor
xor
push
mov
dec
pop
dec
arpl
hlt
dec
aad
fimuls
push
mov
adc
inc
jp
add
enter
jecxz
mov
mov
es
loopne
cwtl
hlt
pop
jb
int3
cmp
xor
fsubrs
das
lahf
jno
add
pop
mov
test
test
inc
xchg
andl
push
stos
lcall
push
pop
testb
jae
out
add
dec
int3
add
push
add
rcrb
call
aas
sbb
cli
sbb
dec
mov
mov
jl
loop
mov
dec
jge
mov
ret
mov
xchg
popf
push
adc
jg
cwtl
outsl
out
sahf
cmp
inc
lea
cmp
xor
add
xlat
lods
pop
fs
lods
enter
fcmovnbe
icebp
sar
gs
pop
mov
cwtl
outsl
lret
xor
stos
cmp
add
sbb
movsl
sub
aaa
mov
stc
sub
push
jge
mov
push
in
inc
pop
lret
out
fs
ret
and
xchg
push
ja
mov
cmp
jbe
mov
movsl
in
add
xorl
jb
das
push
rcll
hlt
scas
dec
cltd
shrl
fs
cmp
dec
jge
pop
adc
js
inc
aas
push
push
mov
jo
push
mov
push
jbe
push
push
out
add
xor
push
ljmp
lods
sub
jne
outsb
sub
shr
pushf
mov
es
adc
loop
mov
sbbl
xchg
nop
mov
notb
je
pop
xlat
inc
sbb
loopne
imul
mov
push
push
gs
iret
in
arpl
mov
jnp
push
adc
mov
mov
mov
inc
aaa
pop
pushf
cmp
dec
mov
hlt
fsts
dec
sahf
pop
push
pop
lret
out
sbb
cltd
pushl
xchg
adc
jbe
imul
sbb
jo
mov
or
ret
mov
jnp
lahf
and
daa
mov
jb
lock
inc
inc
mov
js
cmc
and
jl
jcxz
fistps
cmp
mov
aas
jns
push
sub
or
fdivs
call
push
hlt
bound
mov
xor
jne
test
repnz
or
outsl
call
pop
fistl
adc
push
mov
dec
enter
add
arpl
xor
push
add
popf
push
sub
popf
js
loope
fdivrs
xor
xor
dec
mov
pop
xor
sbb
push
xor
cli
xchg
pop
movzbl
cmp
mov
cs
xchg
pop
out
lcall
or
shlb
mov
shlb
lds
inc
scas
xchg
stos
xor
lcall
les
xor
shl
pop
mov
xchg
mov
stos
xchg
xchg
adcb
icebp
xchg
push
es
sbbl
mov
iret
imul
mov
fadd
fsubl
pop
in
lods
in
pop
clc
cmp
stos
dec
adc
mov
xor
push
popf
lods
daa
loopne
jnp
inc
ljmp
push
ljmp
into
test
in
jmp
out
sti
test
pop
or
sbb
inc
out
or
pop
test
or
jnp
xchg
mov
aas
mov
push
cmpsb
dec
lea
repz
mov
sub
inc
inc
hlt
add
leave
out
pusha
pusha
dec
xor
and
xchg
loop
aas
jno
dec
ret
imul
jmp
or
outsb
mov
mov
enter
mov
fidivl
mov
addr16
les
sbbb
sub
lea
dec
test
add
pop
xchg
push
lock
mov
cmc
pop
testl
ss
loopne
pop
pop
dec
jne
movsb
rcrb
testb
idivb
add
mov
jae
jg
rclb
loopne
inc
loope
mov
notb
inc
or
adc
outsb
lahf
sub
cmp
std
pusha
nop
aad
xchg
sahf
inc
dec
lods
imul
mov
xchg
fwait
out
ret
inc
loopne
aad
mull
adc
outsb
lock
cvtdq2ps
mov
dec
dec
xchg
mov
ljmp
pop
add
xor
pop
push
add
mov
and
ret
push
outsb
fwait
inc
push
loop
int
addr16
outsb
insl
inc
subl
ja
inc
jne
push
arpl
and
xor
repnz
ret
lret
ret
push
add
inc
leave
push
cs
mov
das
rcr
jne
or
or
enter
push
lods
arpl
arpl
mov
mov
dec
dec
int
pop
out
sub
xor
push
push
jno
call
push
mov
test
jg
and
enter
cmp
pop
or
int
lds
pop
test
sahf
into
dec
stos
push
jae
cwtl
lahf
mov
sbb
ljmp
movb
sbb
pop
mov
daa
stos
cmp
lret
or
add
mov
insb
mov
ss
enter
pop
jnp
bound
pop
jo,pt
lcall
shl
adcl
rcrl
jl
mull
adc
ljmp
cmpsl
pop
cmp
add
and
sar
into
out
dec
hlt
pop
lds
pop
psubd
cmp
xchg
loop
out
mov
mull
inc
mov
xor
cmc
jge
pop
cmpsb
xchg
add
jge
pop
xchg
add
cmp
rclb
lahf
jbe
cltd
or
ds
sub
adc
hlt
pop
ljmp
into
cmpsl
cmpsb
filds
cmpl
sbb
or
in
inc
icebp
icebp
ss
xchg
mov
sahf
mov
outsl
dec
imul
inc
insl
inc
xor
ret
dec
insb
sahf
pop
pop
push
push
mov
or
pop
or
push
daa
jne
cld
das
test
push
cmp
out
mov
and
daa
add
pop
mov
push
in
pop
sti
mov
iret
push
jne
insl
jg
dec
adc
aaa
adc
dec
and
xor
and
jl
daa
jmp
fwait
jae
lcall
mov
test
mov
jbe
bound
test
aas
je
dec
xor
add
loop
mov
jle
dec
inc
test
loop
loope
lock
addb
or
aas
xchg
adc
adc
push
push
push
addr16
jle
insl
and
cmpsb
pop
inc
jmp
adc
add
adc
xchg
bound
in
pop
sahf
nop
mov
out
iret
mov
xchg
fwait
out
iret
sahf
jns
scas
push
lcall
cwtl
sub
add
mov
popf
mov
xor
rcll
testl
sahf
xchg
inc
movsl
lods
mov
cltd
jg,pn
mov
rorl
sub
mov
jae
fimuls
xchg
addr16
movsb
movsl
xchg
adc
fdivrl
pop
xor
daa
inc
lret
out
movsl
cmp
mov
adc
lea
and
mov
mov
xchg
ret
cltd
lea
sub
fsubl
mov
dec
or
popa
cltd
and
mov
dec
sbb
pop
add
xchg
lock
and
daa
aad
or
add
sub
es
fcmovnu
ffreep
arpl
and
mov
xor
push
test
lahf
call
add
add
sub
mov
cwtl
cld
push
jl
pop
mov
lahf
loop
add
dec
sbb
inc
sbb
jno
loop
shll
sub
cmp
push
pop
mov
push
bound
and
nop
mov
movsb
xor
dec
insl
pop
push
fcmovb
jmp
push
in
xchg
inc
rorb
jge
cmc
addr16
pop
jl
lahf
out
xor
ret
dec
cltd
fld1
cmp
adc
adc
push
cmp
mulb
sbb
pop
ret
lock
inc
pop
aam
lret
loop
xchg
lds
adc
out
aad
inc
pop
ds
insl
fcmovne
popa
test
pop
movsl
sahf
fs
mov
adc
xchg
sbb
in
jno
add
and
js
or
inc
ret
and
mov
out
adc
loop
mov
es
push
int
lahf
clc
xor
fsubrs
jmp
inc
hlt
mov
push
iret
add
out
mov
dec
mov
inc
mov
lret
adc
jno
out
inc
dec
aas
movsb
xchg
lock
xor
repnz
lds
and
pop
ret
pop
pop
std
sbb
test
xor
insb
fyl2x
xchg
icebp
sbbl
add
jno
stc
shr
popf
filds
sub
jnp
scas
add
clc
adc
mov
stos
cld
ds
int3
dec
test
inc
aam
mov
movl
xchg
arpl
out
xor
cmp
aaa
cmp
push
stos
jno
xchg
sbb
jns
push
stc
dec
push
sbb
xor
movsb
mov
out
pop
sbb
call
aam
cli
sub
fwait
push
sbb
pop
insb
outsb
push
sbb
ret
addb
outsb
push
push
movsb
cmpsb
faddl
cmp
mov
mov
rcr
ret
cmp
xlat
fisttpll
mov
je
scas
push
negl
loop
mov
mov
mov
xchg
and
decb
inc
jno
mov
fdivr
pop
jp
std
pop
stos
inc
inc
stc
or
push
push
dec
mov
cmp
fcmove
fs
pushf
or
fnsave
cld
fsub
push
das
add
jno
inc
push
cltd
pusha
adc
inc
movsb
or
inc
cmp
cmpsl
ljmp
jmp
aam
dec
dec
xchg
fisttps
rorb
push
mov
cmp
jne
mov
imul
mov
mov
pop
stos
mov
cltd
in
xor
pop
out
les
pop
movsl
mov
lcall
jp
mov
push
dec
enter
or
pop
pop
lcall
mov
adc
push
push
cmp
cmp
leave
xchg
loope
loop
aaa
cmpsl
or
mov
xor
pushf
cli
mov
sbb
sbb
dec
push
pop
aas
dec
and
cmp
out
jle
add
out
loope
jle
ret
pushf
sbb
out
pinsrw
rcrl
dec
pop
inc
push
mov
mov
fisttpll
pop
aam
int
mov
inc
xchg
repz
test
mov
insb
sbbb
fldenv
idivl
mov
repnz
push
and
push
movsl
mov
adc
aaa
enter
sub
fbld
sti
cmp
push
out
js
sbb
mov
std
push
loopne
jp
jb
ret
dec
clc
jo
pusha
cmp
cmpsl
les
fs
and
xor
stos
add
das
leave
or
or
mov
mov
imul
repz
push
mov
or
jnp
sbb
jmp
adc
inc
out
scas
mov
push
sub
lock
xor
scas
mov
dec
pop
dec
push
out
push
dec
mov
pushf
mov
xor
add
enter
popf
test
movsb
scas
mov
in
lcall
cltd
rclb
push
jne
xchg
lahf
adc
mov
xchg
aaa
push
jl
subb
cmc
xchg
lcall
sbb
out
pop
pusha
pop
and
dec
call
inc
ljmp
dec
lds
in
mov
ret
mov
roll
decl
inc
or
adc
xor
mov
jp
std
mov
inc
repnz
pop
jmp
pop
enter
ret
dec
cmp
fidivrs
adc
mov
dec
lret
xor
pop
pop
dec
ljmp
pop
inc
popa
ljmp
lahf
add
jle
fistpl
mov
sbb
add
mov
dec
mov
imull
pop
test
in
adcb
xchg
push
mov
xor
ja
cmp
mov
movntq
cltd
loope
cmc
add
push
push
sub
jge
push
mov
sub
lea
les
fisttpl
jp
mov
nop
test
jecxz
mov
out
push
dec
xor
jl
or
insl
push
lds
push
mov
test
iret
and
sbb
pop
lahf
push
inc
inc
dec
pop
add
cmp
cmp
add
jecxz
push
sahf
lahf
mov
jmp
jmp
cltd
das
jle
insl
sub
and
inc
dec
cmp
pop
add
cmp
mov
mov
push
shlb
nop
add
lds
sbb
popf
mov
and
and
into
sub
pop
sbb
lods
pop
add
cmpsb
and
loope
mov
mov
mov
pop
int3
fwait
scas
cmp
bound
pop
pusha
js
lods
int
in
push
addr16
pushf
xor
or
or
push
ds
lcall
cli
arpl
lods
test
push
and
push
jnp
shll
gs
mov
push
std
pushf
pop
or
dec
gs
repnz
pop
dec
loope
add
add
imulb
add
mov
int
mov
push
sbb
cmp
subb
cld
sbb
mov
pusha
fucomi
movsl
into
inc
jns
loope
scas
dec
dec
mov
and
push
push
cmp
js
lds
pop
fs
mov
out
push
cli
sbb
push
dec
das
in
jnp
pop
sub
adc
stos
test
mov
out
arpl
and
je
xor
add
push
xlat
mov
lods
mov
scas
pop
lret
jo
xchg
add
jp
in
lock
push
hlt
leave
pusha
mov
js
leavew
mov
inc
out
movsl
and
pop
jge
js
pop
aad
cmp
inc
loope
dec
jmp
sti
push
cmp
pop
inc
push
insl
xchg
xchg
je
push
xchg
cmp
add
cmp
pop
mov
jae
pop
lcall
dec
add
mov
mov
and
repz
rcrl
inc
dec
mov
lcall
jmp
sub
jl
daa
cmp
test
jo
push
rcl
pop
and
and
inc
imul
jo
test
cmp
and
mov
xor
shlb
mov
add
sub
and
in
pop
and
xor
insb
pop
cmpsl
cmovl
ret
lcall
sub
or
mov
dec
adc
mov
jmpw
into
fmuls
jl
fwait
in
fildl
mov
rorl
jl
push
je
xchg
jle
adc
leave
mov
pop
cltd
jg
or
jmp
ds
in
icebp
inc
xchg
push
rcrb
sti
shlb
ret
in
push
dec
dec
mov
adc
dec
cmp
mov
xor
inc
test
fdiv
lahf
dec
lcall
bound
inc
aaa
jns
jae
sti
in
mov
arpl
mov
jae
fdivs
dec
pop
or
repnz
movsb
cld
es
shll
push
gs
inc
scas
cs
inc
test
jae
movsb
or
mov
orb
pusha
divl
inc
xchg
leave
data16
lret
test
lret
push
inc
in
sbbb
insb
lret
jmp
out
hlt
or
pop
add
jb
cld
mov
dec
jb
pop
xchg
scas
push
mov
pop
mov
or
cwtl
ret
sti
mov
add
jns
sbb
cmc
or
cmp
jo
push
fcomps
mov
sbb
jp
bound
lods
mov
mov
mov
pop
outsl
cwtl
insb
imul
sti
icebp
jmp
xor
arpl
fwait
imul
xchg
mov
push
mov
ret
pop
les
aas
fmull
loop
dec
mov
sar
aas
mov
xor
cli
mov
mov
nop
mov
add
fsubrl
mov
pushf
insb
ljmp
lret
adc
es
or
testb
mov
add
or
inc
fstl
sbb
int3
dec
out
jge
dec
mov
xor
push
push
and
arpl
cmp
mov
fidivs
lods
enter
dec
mov
imul
dec
int3
mov
mov
test
stos
sahf
fnsave
cld
jl
lret
test
sbb
lods
insb
push
add
add
lret
leave
or
jne
rcrl
dec
test
gs
push
xor
xrelease
dec
stc
push
mov
push
outsb
cli
dec
lds
or
insl
xchg
cwtl
xchg
add
lret
cmp
or
or
into
stos
into
mov
push
cmpsl
pop
sbb
cmp
jae
mov
xchg
mov
mov
imul
stc
mov
and
dec
pop
sub
cld
outsl
sbb
and
adc
cmp
add
aad
icebp
and
sahf
jno
fistps
jo
shrl
lock
aad
sub
cmp
push
add
cmpsl
pop
das
ficomps
mov
clc
xchg
sub
movsb
rolb
jl
jle
or
sbb
hlt
mov
das
pushf
cwtl
bound
cs
add
orl
mov
pop
pop
push
add
shr
int3
mov
dec
cld
icebp
je
push
dec
push
adc
and
jge
sbb
add
fildll
mov
jo
mov
gs
arpl
rorl
filds
mov
dec
inc
pushf
add
jl
cs
call
stos
aam
mov
cmp
xor
das
xchg
cs
xor
ds
ja
js
cmp
pushf
xorb
dec
imul
dec
in
xor
sbb
sbb
mov
or
jl
pop
xchg
incl
xor
hlt
lods
inc
or
add
jae
test
and
out
jmp
jnp
stos
cmp
imul
and
xchg
pop
dec
push
mov
adc
cmp
push
pop
cwtl
adc
mov
add
ss
loop
jp
xchg
dec
rorl
gs
sub
fisttpl
orl
cmp
xchg
outsl
mov
jne
mov
inc
push
mov
roll
rorl
push
call
mov
ss
xor
xchg
cld
jns
inc
pop
xor
scas
jg
mov
enter
jne
lcall
sub
faddl
mov
xchg
jmp
sub
aam
push
fwait
push
aaa
imul
out
gs
call
stos
fwait
in
test
mov
test
leave
xor
es
cmpsl
mov
insb
adc
push
xchg
stos
jge
sub
enter
cmp
lret
or
test
sub
push
cmc
pop
sub
sbb
js
sub
dec
mov
hlt
push
roll
aas
xor
movsb
bound
pop
adc
xor
jmp
xlat
xlat
and
in
aam
bound
dec
push
push
push
xchg
test
stos
in
fsubr
jne
lahf
je
mov
iret
mov
and
or
ss
jno
push
add
push
dec
sub
dec
inc
insb
mov
into
clc
imul
mov
scas
inc
movsb
shl
cmp
or
mov
mov
out
xchg
cmp
and
leave
aaa
js
mov
mov
std
scas
es
mov
inc
sbb
jns
int3
aad
out
push
arpl
fistps
xor
push
pop
add
clc
add
dec
repz
das
out
push
xchg
and
ss
cmp
adc
jp
das
inc
shll
pmuludq
jp
inc
lret
stos
sub
cmpsl
adc
cmpl
xchg
fs
unpckhps
pop
mulb
idivb
out
mov
aad
ds
pusha
cltd
xlat
ljmp
add
and
mov
xchg
dec
cmp
mov
lret
fdivl
cmp
das
insl
dec
pop
mov
insb
pop
shll
shlb
sub
call
push
adc
into
jg
fs
mull
or
pop
jge
inc
in
or
mov
cwtl
adc
mov
fstpl
mov
into
mov
enter
sbb
sbb
jl
ret
int
pop
jmp
stos
sub
cmpsb
lods
fmuls
mov
nop
mov
nop
das
js
adc
out
in
mov
mov
push
xchg
lahf
mov
pop
mov
enter
mov
jmp
shrl
subl
sbb
jns
mov
jecxz
loope
jne
xor
movsb
xor
insb
xor
or
mov
pop
add
ljmp
mov
jo
mov
mov
push
push
inc
xor
mov
jnp
int3
out
mov
lds
sahf
lea
notl
adc
and
in
aad
sub
cmp
jecxz
leave
sub
sbb
lods
sub
jl
fsts
idivl
mov
arpl
sbb
in
lahf
pop
mov
pop
stos
jl
enter
push
adc
dec
sub
aas
lods
mov
fisubrs
gs
imul
xchg
pop
adc
std
add
aad
cmp
jmp
nop
mov
mov
aaa
cli
jge
inc
push
popa
cmpsl
or
push
fsts
mov
push
adcl
jp
pop
dec
stc
mov
bswap
cmp
data16
sahf
ss
icebp
ds
xor
sbb
xlat
loope
mov
rcll
add
bound
leave
push
scas
ljmp
jb
cmpsl
das
mov
outsb
lea
dec
test
jmp
addl
mov
in
insb
icebp
int
jno
mov
mov
sbb
test
xchg
int
sub
add
xchg
dec
xor
adc
in
cwtl
add
lds
pop
adc
mov
mov
sub
jmp
test
stos
adc
xor
jo
loop
or
iret
cltd
std
outsl
sbb
jmp
lahf
cwtl
xchg
inc
push
inc
push
ficompl
outsb
sarb
nop
pop
cs
test
imulb
shl
repnz
push
aaa
mov
sti
adc
push
xchg
repz
mov
adc
out
mov
push
into
mov
cld
add
inc
shll
fistpll
mov
lret
lea
pop
mov
jo
fisttpll
push
int3
jno
test
nop
inc
mov
pop
stos
lods
xor
mov
mov
shr
dec
mov
popl
cmp
jns
jb
addr16
sbbb
and
add
mov
faddl
pop
je
fists
inc
cltd
push
cmp
push
pusha
stos
xchg
scas
cmp
or
test
shr
insb
or
in
jle
rorb
fdivr
adc
das
ret
adcl
out
jecxz
cmp
xchg
lock
scas
jl
in
sahf
inc
jge
outsl
mov
mov
adc
mov
ds
nop
xchg
push
jg
mov
sarl
mov
jbe
mov
inc
jbe
push
push
pop
outsl
cltd
scas
notb
adc
aam
js
lods
cmp
cmc
sub
jecxz
xchg
lcall
cmp
lock
repz
lahf
test
lds
repnz
sbb
adc
adc
cld
mov
inc
cltd
sbb
scas
sbb
popf
xor
lahf
dec
xchg
insb
xchg
xor
aas
or
push
xchg
fucompp
das
mov
out
or
mov
cwtl
clc
nop
sbb
xchg
ljmp
stc
mov
enter
fwait
ds
outsb
and
mov
mov
cld
daa
mov
xchg
adc
inc
mov
pop
mov
inc
mov
cmp
pop
sti
icebp
adc
jge
mov
lahf
pop
push
das
mov
ds
iret
and
xlat
cmc
or
add
pop
and
sbb
and
out
iret
mov
ret
aas
xchg
pop
je
lock
mov
arpl
fldcw
gs
orb
dec
jno
clc
mov
ret
hlt
or
jae
ret
data16
push
stos
leave
rorb
inc
xor
sbbb
sbbb
lods
int
out
pushf
mov
xchg
and
sub
clc
popf
inc
cmpsl
int3
xchg
and
stos
sub
adc
push
inc
sti
bts
xchg
mov
inc
lcall
sub
push
loope
cmp
sbbb
inc
add
mov
adc
testb
loop
es
stc
cltd
subb
rcrl
movsl
add
xor
and
dec
push
pop
fstps
sub
into
adc
mov
insb
ja
xchg
hlt
mov
xchg
loope
dec
incl
add
push
icebp
loopne
push
addr16
rcrl
mov
mov
lds
repz
inc
jns
test
xor
popf
xchg
in
push
hlt
adc
rorb
sbb
std
lcall
icebp
pop
sub
dec
in
inc
xor
xor
push
xchg
out
pop
mov
test
nop
dec
mov
sahf
movsl
sbb
test
rorl
mov
mov
push
mov
xor
insb
in
aaa
pop
jns
shlb
mov
fistpll
xlat
xchg
ja
sub
lods
lds
jecxz
xor
mov
leave
leave
xchg
add
div
sub
xlat
sbb
std
jno
test
rcl
push
cmp
add
imul
cltd
jle
cli
jo
lods
pop
pop
or
popa
clc
data16
std
fsubrs
popa
shl
jg
mov
push
adc
call
mov
clc
hlt
adc
stc
mov
lock
subl
out
push
or
cld
loope
movsl
xchg
cmpb
cmc
xor
inc
inc
fwait
jbe
sbb
icebp
mov
jns
fcomp
push
lods
lods
inc
out
mov
ret
add
lea
or
ficompl
adc
rorl
cs
scas
sub
inc
jecxz
sub
out
push
cmp
jae
out
jp
jge
sahf
mulb
mov
lock
test
mov
xor
cld
push
push
fneni(8087
xor
movsl
stos
enter
adc
sub
xchg
xchg
mov
shl
test
test
outsb
cwtl
rol
stos
jg
jmp
mov
sbb
rcrl
fdivs
out
in
adc
lret
jns
inc
sarb
lahf
shl
cmp
cli
xchg
jne
subb
imul
lret
dec
fdivl
cmp
test
xchg
dec
pop
pop
jg
test
pop
inc
repnz
or
cli
jnp
fildll
dec
bound
lds
cld
push
mov
dec
push
adcb
xchg
mov
arpl
jb
push
dec
cli
lcall
mov
jns
loope
adc
lods
nop
lcall
int3
pop
aad
in
xor
aam
sbb
mov
movl
xlat
int3
test
jae
add
or
and
inc
or
jge
mov
maxps
leave
repnz
mov
lret
out
dec
add
arpl
ret
and
pop
adc
xchg
push
roll
ret
in
adc
hlt
das
xchg
sbb
fstpl
xor
pop
jmp
fsubr
or
jg
scas
movsl
les
mov
sbbl
inc
int3
mov
fstpl
test
jl
xchg
cmp
mov
pop
jno
js
push
scas
push
pop
in
call
xchg
jge
scas
test
jp
xchg
xor
mov
cmp
sbb
or
push
loopne
xor
sti
mov
in
inc
test
daa
dec
fwait
das
and
jle
sbb
mov
pop
mov
ret
dec
scas
rolb
test
mov
xchg
mov
cwtl
frstor
mov
xor
xor
sub
mov
mov
ret
rorl
jbe
jno
popa
sbb
ror
push
cltd
xchg
and
negb
sbb
push
mov
xchg
aaa
std
mov
or
out
incl
push
mov
mov
jecxz
xchg
or
push
scas
cmp
dec
xchg
es
jae
es
pop
inc
mov
mov
inc
divl
dec
lret
and
lahf
fbld
shrl
add
enter
sub
sbb
or
aaa
mov
lret
inc
jl
addr16
mov
inc
or
shrl
sahf
lods
dec
lods
loopne
sbb
fs
dec
insb
je
testl
sub
push
test
xchg
inc
fmull
cmpsb
aad
pop
sub
fnsave
ds
std
test
xor
jmp
xor
rolb
jbe
cmp
xchg
mov
jae
pop
cmp
cltd
mov
xor
imul
adc
ds
in
cs
inc
adc
inc
pushf
nop
xchg
inc
lods
or
ret
fwait
mov
mov
cmpsb
pusha
cwtl
fdivl
lds
outsl
dec
mov
pop
ret
movsl
add
cwtl
jmp
pushf
or
inc
sub
xchg
ljmp
jp
pop
cli
int3
clc
and
call
sahf
inc
adc
add
lret
popf
adc
mov
cmp
and
jns
add
jge
lahf
mov
fadds
dec
lds
pop
xorl
lods
ret
sbb
push
lea
push
lock
js
mov
or
and
in
mov
xchg
rorb
sub
cmp
pop
pop
lds
es
inc
xor
mov
aam
dec
pop
std
out
mov
out
xor
mov
in
outsb
icebp
sbb
jae
push
sub
or
daa
mov
add
shrl
jg
fstpt
mov
outsb
sub
xchg
jo
cmp
adc
adc
ret
enter
idivl
das
pop
cli
ljmp
push
sub
cmpsl
cltd
cmp
negb
jo
pop
addr16
out
push
sub
pop
mov
cwtl
cmc
cmpsb
mov
adc
xor
add
out
jo
ds
push
xchg
cld
jp
adc
jo
lret
jno
test
nop
dec
or
push
fs
scas
jno
dec
cmp
in
jae
movl
test
pop
adc
xchg
dec
push
sub
fidivrl
add
cmp
adc
jle
pop
xor
or
mov
xchg
mov
arpl
xchg
pop
dec
pop
xchg
aas
pusha
add
shr
loop
out
arpl
or
pop
mov
subb
pop
clc
push
inc
add
add
jns
inc
sbb
sub
shll
andl
add
loope
aas
inc
add
add
sti
xor
out
add
and
xchg
in
sub
pop
pusha
push
inc
daa
popa
adc
fs
cmp
stc
leave
fstpt
xchg
or
imul
lock
fmuls
gs
adc
add
lods
push
in
inc
insb
pop
icebp
push
cmpsb
or
jecxz
sub
pushf
lahf
lods
lods
leave
mov
stos
ret
mov
push
add
adc
flds
adc
and
lret
repnz
and
pop
and
loop
addb
add
jecxz
add
xchg
sub
inc
rcrl
rorl
jecxz
inc
jnp
sbb
jp
pushf
push
mov
cmp
pop
sbb
das
xor
xor
pop
dec
jmp
mov
lock
call
push
pop
push
jmp
xlat
xchg
push
mov
loopne
xchg
jno
movzbl
mov
into
outsl
mov
shlb
sub
adc
or
stc
or
mov
lcall
jno
xchg
cltd
mov
cld
repz
les
add
ret
add
je
aam
lock
add
push
out
scas
imul
push
mov
loope
ljmp
inc
xchg
scas
ror
sbb
push
jle
push
jge
hlt
mov
jl
mov
sahf
clc
data16
or
xchg
aaa
addb
cmpsb
dec
test
mov
pop
xor
xchg
sbb
in
lea
je
loope
dec
std
fldl
repnz
mov
mov
cli
jge
hlt
xor
jb
pop
mov
push
pop
pushf
adc
xor
pop
sub
add
pushf
stos
bound
mov
outsl
enter
das
mov
xchg
ficomps
pop
gs
int3
movsl
inc
out
mov
and
sbb
lock
jle
fst
orl
std
mov
dec
stos
cmp
and
fiadds
in
push
or
xor
mov
cmp
in
sub
lcallw
gs
xchg
mov
lret
inc
mov
enter
jle
xchg
jge
cwtl
inc
inc
push
xchg
in
inc
pop
lcall
mov
or
sub
jae
or
insl
sub
push
enter
shrb
out
or
sub
test
mov
inc
adc
inc
jbe
and
shlb
sub
push
nop
test
cltd
cwtl
popa
es
inc
cmp
jae
jl
fiadds
outsb
sbb
je
das
mov
sub
mov
out
xchg
shr
dec
inc
movsb
dec
cld
xor
mov
mov
or
movsl
out
imul
push
in
push
push
pushf
mov
xchg
in
xor
fstps
test
and
aas
stc
les
cltd
shlb
sbb
push
xchg
fwait
push
roll
cmp
sbb
test
pop
xchg
mov
scas
dec
mov
ret
ja
pusha
loop
xchg
scas
push
mov
mov
push
or
xor
movsb
sarl
inc
les
adc
xor
das
test
jb
jge
cltd
es
or
pop
push
or
test
pop
es
jg
jbe
jo
xchg
iret
repz
jecxz
js
movsl
xor
ret
mov
ja
xchg
xchg
mov
andb
sbb
push
adc
jecxz
add
xchg
xchg
les
lock
adc
push
rcrl
outsl
jecxz
mov
dec
std
flds
fiadds
mov
mov
add
ret
sub
jbe
jnp
cltd
cmpsb
adc
push
sti
mov
fldenv
inc
mov
jecxz
pop
out
dec
aam
mov
pop
mov
rorl
push
mov
mov
push
les
stos
jmp
mov
mov
sub
mov
enter
mov
mov
dec
and
ds
cld
mov
in
push
repz
ljmp
mov
or
pop
push
clc
js
pop
cmpsl
das
sub
fsubl
aas
pusha
adc
cmpsb
lcall
out
sbb
add
push
scas
ljmp
ret
inc
jecxz
push
lret
lods
out
inc
pop
mov
jae
hlt
cmp
test
push
std
icebp
aas
ret
xorl
insb
callw
call
mov
dec
cmc
ja
lcall
add
punpckhwd
mov
aas
add
mov
jns
mov
negl
cltd
sbb
sti
mov
sbb
mov
jge
fst
fcmovne
icebp
test
or
cmp
add
push
pop
loope
iret
mov
inc
pop
xor
xor
insl
mov
or
rol
and
sahf
lret
add
inc
stc
or
mov
notl
test
or
push
mov
into
mov
mov
pop
mov
xchg
js
sbb
addr16
push
jmp
xor
arpl
add
and
xor
adc
dec
mov
mov
imul
jp
test
adc
mov
sub
pop
dec
insl
dec
stos
iret
dec
xor
iret
mov
movsb
cltd
stc
sar
imul
push
cmp
fs
jle
scas
in
push
test
in
addl
outsb
jp
sbb
subl
jno
stc
xchg
pop
or
lcall
or
iret
and
loopne
jne
xor
mov
pop
or
fs
add
out
iret
mov
in
fistpl
insl
jmp
cld
pushf
mov
xchg
lds
mov
andl
jb
test
sub
sbb
nop
push
pop
adc
out
push
adc
lahf
mov
popf
and
sbb
es
cmc
testb
ret
insl
mov
adc
sub
lahf
movsb
dec
or
adc
or
xchg
cmp
mov
dec
jb
xor
out
addr16
jb
aam
push
out
aad
in
mov
mov
xor
out
and
sahf
ja
cmpl
es
rorl
notl
mov
cmp
psubusw
jae
sti
inc
test
lods
sub
cmp
fadds
dec
jge
mov
stc
sub
add
xor
push
fdivrs
iret
cmp
jl
jg
ja
orb
push
mov
in
mov
loopne
sbb
gs
stc
ret
inc
rol
or
ljmp
mov
and
cmp
and
loope
pop
fneni(8087
push
jecxz
je
jle
cld
cmp
jmp
aam
pop
mov
pop
nop
sub
cmp
mov
xchg
dec
and
fs
test
mov
lods
inc
cmp
sub
int3
push
sbb
sti
sbb
jae
xchg
movsl
add
fmull
popa
xchg
jno
sub
or
loop
or
push
add
scas
pop
pop
cmc
xchg
out
inc
fldcw
jecxz
ret
add
cmp
les
mov
xlat
mov
frstor
cli
mov
je
mov
xlat
mov
xchg
stos
lds
pushf
mov
imul
scas
roll
xor
mov
adc
xor
or
add
scas
inc
aam
ds
xchg
sbbl
scas
jg
xchg
int
sbb
xor
jmp
daa
jmp
adc
ljmp
movsb
and
jb
jmp
das
fsubrl
push
or
sub
stos
or
scas
sbb
andl
lods
cmp
cmpsb
xchg
mov
stos
push
stos
push
pusha
nop
cmp
mov
xchg
jle
sbb
js
loopne
adc
push
mov
insl
xor
jbe
sbb
repnz
jp
cmc
sti
sub
push
inc
sub
lret
punpckhdq
inc
mulb
xchg
fdivl
aaa
push
xorb
and
dec
pop
jb
je
outsb
add
movsl
add
jmp
mov
stos
cmc
inc
add
push
into
call
inc
sub
jbe
cmp
push
pop
mov
popa
push
xchg
into
adc
sbb
adc
xchg
mul
repnz
mov
sahf
int
push
inc
iret
sub
sar
and
push
ljmp
imul
rclb
and
mov
lods
movsb
fstpl
dec
xor
lods
sti
fldt
nop
movsl
addr16
and
jmp
and
jne
lds
lcall
or
pushf
mov
mov
pop
pop
add
daa
push
data16
dec
and
xchg
mov
adc
jo
add
scas
mov
push
add
mov
cmp
dec
push
std
mov
or
sarl
repz
pop
pop
das
jp
inc
orb
lcall
sbb
dec
xchg
and
or
rcll
rep
sbb
cmpsb
sub
test
jmp
xchg
mov
dec
xor
add
push
cmpsb
xor
ret
push
mov
divps
mov
or
ret
inc
sbbl
adc
lods
jb
dec
out
addr16
inc
mov
mov
mov
leave
iret
dec
inc
leave
fsub
pop
or
cltd
les
outsb
sahf
stos
lcall
pop
xchg
cmpsb
sub
dec
dec
aad
and
add
dec
xor
into
pop
fstpl
sar
mov
pop
inc
loop
push
dec
repz
movsb
fistps
sbb
pop
std
mov
mov
ds
push
or
addl
xor
movsb
test
inc
dec
jbe
lea
lahf
les
sub
adc
bswap
adc
in
cmp
jp
int
xorl
jle
xchg
rcrb
inc
insb
push
mov
andb
jo
push
test
imul
dec
cli
dec
shlb
mov
push
push
adc
push
dec
push
in
and
jbe
ss
sub
cld
cs
sub
mov
push
sub
adc
out
das
rclb
push
adc
sahf
add
xchg
sar
xor
and
sub
cmp
mov
sbb
iret
loopne
lock
sub
loope
test
js
pop
std
in
in
mov
sahf
je
cwtl
pop
dec
cmp
ja
adc
shll
jge
loope
es
jo
dec
int
sub
dec
pop
inc
inc
sbb
fdivrp
mov
or
mov
pop
push
and
jne
roll
inc
icebp
outsl
aad
jae
dec
sub
cmpsb
fwait
or
pop
iret
int
xchg
popl
push
andl
lea
out
mov
pop
push
cltd
gs
push
sahf
pop
xchg
lahf
mov
shrl
pop
dec
push
cmpsl
jmp
rcll
pusha
xchg
jge
fcoml
dec
mov
jne
adc
in
mov
lods
add
xchg
mov
movsb
addl
test
out
in
xor
xor
sub
jl
into
lret
jle
dec
mov
sarb
pop
jmp
into
mov
xlat
outsb
rolb
pmulhw
movsb
and
mov
movl
hlt
push
stc
leave
xchg
cmpb
cs
pop
dec
fdivrs
sub
inc
outsl
xchg
add
pop
test
bnd
cmp
jecxz
sub
pop
icebp
jge
pusha
mov
or
in
pmaddwd
lods
sbb
in
jb,pt
cmc
shrl
sahf
jns
cmpsl
test
shrl
dec
les
ret
aas
push
iret
cmp
mov
insl
adc
inc
repnz
cli
pop
rolw
flds
mov
cmp
cmp
ss
test
sbb
pop
sbb
inc
add
ds
mov
mov
mov
cs
std
dec
lret
sarl
adc
mov
sbb
pushf
scas
adc
aaa
xchg
xor
inc
mov
jg
push
cmp
ss
cmp
push
test
lds
adc
nop
or
ljmp
sahf
or
incb
test
sub
and
pop
lods
jecxz
fsubrp
shl
jmp
out
aad
jae
aaa
outsl
and
push
mov
adc
ret
adc
mov
les
pop
adc
jl
mov
fisttpl
aas
mov
pop
sti
imul
lods
inc
sbb
sub
out
or
push
jae
loopne
xor
push
jno
cmp
sub
test
cmc
xor
imul
mov
punpckhwd
mov
fwait
gs
xor
inc
subl
nop
js
shr
aad
in
cmp
loopne
fs
loopne
adc
outsb
xchg
mov
xor
nop
jl
mov
jle
pushf
adc
mov
or
sbb
adc
mov
fldcw
outsb
leave
cli
dec
loop
imul
inc
das
push
pop
adc
test
subl
in
inc
push
mov
jno
aam
or
dec
out
xchg
popl
fnsave
cmpsb
out
lods
mov
cwtl
aam
arpl
je
mov
and
and
test
cmp
shll
jge
xchg
push
or
xchg
ljmp
loope
arpl
xor
int3
pop
pop
adc
leave
in
jae
dec
or
int
xchg
les
outsb
bound
xchg
je
and
scas
test
sub
adc
or
stos
mov
adc
nop
adc
nop
ds
mov
mov
int3
call
dec
xchg
xchg
mov
and
insl
cli
dec
sub
lods
gs
call
or
sub
sbb
xlat
mov
movsl
shlb
shl
or
das
xchg
push
jae
mov
test
mov
out
popa
popf
out
orl
xor
pop
pop
push
popf
xchg
xchg
nop
or
lret
cmp
loope
push
rcrb
ret
xchg
add
jle
mov
mov
icebp
xor
jecxz
sub
sub
ret
sbb
jmp
out
xchg
mov
mov
adc
xor
xor
sub
leave
cmp
idivb
outsb
aas
mov
sbb
sbb
cwtl
adc
cmp
cmp
push
loope
ds
jns
movsl
dec
push
in
sti
adc
lret
mov
mov
imul
mov
dec
fcmovbe
mov
pop
insl
mov
icebp
outsb
or
ja
mov
roll
pop
stc
push
add
cmp
pushf
sub
inc
mov
dec
sbb
sub
pop
sub
inc
sar
add
fiadds
cltd
xchg
std
push
mov
xor
into
std
data16
or
mov
ds
inc
iret
imul
and
aaa
cmp
stos
fwait
push
ret
je
add
movsb
cmp
movsl
ds
testl
mov
dec
fisttps
lcall
gs
in
xchg
insl
and
aam
movsb
sbb
cmc
scas
jl
iret
hlt
add
mov
mov
mov
mov
inc
pushf
pushf
rorl
test
insb
leave
dec
imul
fwait
inc
xchg
mov
loope
jl
sahf
js
push
cmpsl
aaa
test
cmpsl
push
imul
push
inc
mov
test
inc
cmp
xor
jne
mov
lods
push
out
sub
and
mov
imul
inc
xor
pop
repz
int
adc
int
jge
inc
push
xchg
int3
xor
lods
test
loop
lahf
mov
mov
movsb
adc
insb
rcrb
stc
fwait
rorb
xchg
sbb
cmp
ds
add
xchg
scas
test
sub
stos
ret
out
push
pushf
push
out
or
pusha
and
call
sbb
xchg
mov
paddq
push
mov
bound
sub
popl
mov
jecxz
mov
jo
test
mov
pusha
and
xor
repnz
add
pop
mov
sub
fisttpll
clc
fucom
stos
cltd
insl
jbe
notb
jmp
xor
aam
iret
jno,pn
sub
lods
and
test
in
mov
bound
cmp
pusha
add
leave
mov
lahf
and
or
and
popf
out
out
fwait
dec
popf
imul
sbb
push
frstor
dec
fmull
pop
push
push
roll
pushf
or
push
aam
ja
lret
movsl
mov
push
insb
push
and
pop
pop
gs
arpl
loop
add
repnz
mov
in
outsb
add
adc
fisttps
mov
adc
adc
and
into
insl
fsin
xlat
dec
cmp
cli
cld
push
jmp
add
mov
xor
mov
or
pusha
sub
cmpsb
cltd
sub
lcall
xor
xor
push
add
inc
mov
mov
xlat
rcrb
leave
jg
mov
and
cmp
std
test
adc
mov
nop
icebp
clc
mov
pop
call
fdivr
adc
shr
pushl
cltd
push
mov
pusha
aam
mov
mov
sbb
push
jle
or
into
fsqrt
out
pop
inc
add
sbb
jne
in
fcomps
mov
sub
dec
scas
pop
sahf
mov
rcrb
jo
sub
movsb
push
nop
cmp
push
cs
out
sbb
or
aam
xchg
pop
pop
jae
inc
addl
sbb
mov
fwait
data16
es
jo
xor
jns
ljmp
jae
pop
xchg
jmp
push
pop
fisubl
insl
sbb
pop
call
movsl
and
insb
into
aaa
and
mov
cmp
push
aaa
mov
outsb
daa
test
add
into
sub
push
xchg
push
add
inc
sti
jmp
outsl
shlb
sahf
in
push
mov
xor
lret
vaddsd
push
call
roll
dec
sub
mov
mov
aaa
push
mov
cli
popf
aas
mov
sbb
vprotb
outsl
jne
lock
pop
xor
cs
pushf
minps
and
int
adc
xor
mov
jo
les
and
call
out
lret
dec
push
sbb
ljmp
aaa
insb
xchg
in
mov
mov
aas
or
inc
mov
xchg
jmp
mov
mov
inc
insl
sti
xlat
jo
loopne
out
xor
fnstenv
sub
add
xorl
cmp
mov
mov
cltd
fwait
mov
daa
dec
sbb
divl
sub
gs
mov
loope
dec
pop
sbb
push
lea
mov
xor
jns,pt
roll
sub
arpl
pop
testl
xorl
pop
movsl
cltd
or
nop
icebp
xchg
ret
cmpsb
fldcw
xor
dec
add
fmull
dec
mov
sbb
outsl
hlt
jno
sti
mov
outsb
cmpsl
cltd
rcrl
or
and
pop
ficoms
xor
dec
pop
mov
jae
sub
inc
std
pop
dec
xor
sbb
lcall
mul
jbe
push
xchg
jae
xchg
jmp
fbstp
cmp
outsl
push
arpl
xchg
imul
push
cmp
test
or
sbb
mov
push
sbb
sti
or
adc
pop
push
mov
pusha
cmp
mov
jbe
jmp
icebp
in
int3
hlt
mov
pop
or
lds
in
das
jp
xor
sbb
push
and
pop
iret
loope
loopne
adc
or
inc
cmc
fptan
inc
pop
dec
test
jne
xchg
cmpsl
sub
rcrb
fs
lcall
ss
pushf
fcomip
push
cmp
out
js
jg
mov
test
cmpsl
fnstsw
mov
push
and
leave
das
adc
sti
outsl
in
mov
jmp
pushf
subb
mov
roll
push
pop
lods
stos
push
repnz
inc
sub
sub
aas
add
dec
fptan
jl
lods
xchg
popa
jno
orb
cli
into
xor
loop
leave
xlat
shll
xchg
sbb
fisubl
xchg
outsb
jl
lcall
cmp
xor
mov
rcrb
lret
dec
xor
jno
stos
lret
data16
pop
insl
aam
fildll
gs
stc
fcoms
pushf
xor
test
or
imul
imul
clc
testl
mov
dec
xor
rcrb
mov
dec
sub
insb
or
mov
push
in
mov
cli
aam
xchg
pop
or
mov
xchg
das
jbe
xchg
iret
mov
push
lods
jl
mov
cmp
push
push
pop
cli
mov
inc
jmp
jbe
into
out
into
sub
shr
negl
inc
lcall
inc
inc
dec
xchg
add
outsb
cmp
testl
mov
mov
dec
mov
pop
cltd
xor
out
adc
data16
imul
enter
push
jmp
fcoml
or
ss
lods
xchg
xchg
inc
fs
scas
or
pop
xchg
jne
mov
push
cmp
lcall
cwtl
add
jecxz
in
push
rolb
push
sti
mov
inc
add
fstl
loopne
sbb
xor
push
les
imul
dec
data16
add
lods
cld
call
sub
adc
pop
jecxz
cmp
fs
and
xchg
inc
or
pusha
cltd
sti
mov
cwtl
jecxz
cmc
lahf
push
adc
sbb
clc
enter
ljmp
cwtl
cmp
jmp
stos
xor
imul
xorl
aad
fldcw
sbb
push
outsl
mov
sbb
mov
or
fcmovb
mov
or
lods
mov
or
rolb
cmp
sub
jns
mov
fidivrs
sarl
push
or
push
pop
jp
add
dec
hlt
addr16
jae
addl
mov
dec
dec
mov
aaa
pop
pop
scas
ret
or
pop
mov
out
test
jno
pop
mov
mov
pop
sbb
push
mov
jle
sub
dec
fnstcw
fisttpl
pusha
xor
pop
pop
idiv
test
sbb
imul
outsb
xchg
adc
fdivp
cmp
mov
into
lahf
mov
pusha
cwtl
jnp
jb
and
test
cli
insl
jl
pop
jno
jns
je
mov
inc
mov
pop
test
jmp
jns
mov
sarb
sbb
stos
cltd
dec
ja
xlat
sbb
int
loopne
js
iret
rol
rorl
in
out
loope
xor
mov
je
shlb
push
add
arpl
cltd
xchg
outsl
jnp
and
push
jp
aaa
mov
mov
ja
adc
pop
fwait
jmp
lret
and
out
fwait
pop
mov
dec
jae
push
fnsave
cmp
jb
adc
xchg
jp
in
mov
ljmp
or
add
adc
and
mov
clc
ja
inc
scas
xchg
mov
pop
sub
push
and
mov
mov
pusha
ss
inc
cld
incl
pop
pop
movsb
lock
lret
mov
addr16
mov
pop
mov
lret
jb
jno
roll
mov
pop
sbb
inc
data16
mov
out
adc
xchg
out
ds
jp
sub
dec
negb
sbb
cmp
sbb
sbb
jecxz
cltd
dec
and
cmpsl
mov
lock
cld
test
hlt
cmpsb
push
and
repnz
and
sbb
pushf
or
cwtl
into
mov
pop
inc
mov
or
in
les
xchg
arpl
push
mov
cmp
add
adc
stc
inc
mov
sbb
jnp
ds
bound
sti
jns
jne
mov
arpl
mov
inc
xchg
call
insb
rol
lds
sub
mov
inc
int
jge
sub
pop
push
mov
and
ret
push
rcll
enter
js
mov
add
xchg
mov
ret
adc
add
repnz
int3
adc
mov
xchg
xchg
leave
inc
imul
and
outsb
divl
ret
or
pop
mov
icebp
fildll
scas
mov
ja
out
hlt
cmp
movsl
or
jb
into
push
sti
lea
insl
sti
pop
xchg
fs
mov
ss
pop
fsubl
mov
adc
xchg
lds
mov
popf
hlt
cltd
sti
aaa
movsb
icebp
push
int
mov
mov
mov
push
and
mulb
das
adc
cmp
je
std
push
push
xchg
outsl
fsubs
inc
cwtl
dec
lock
fwait
mov
popa
fists
push
and
xchg
adc
dec
xor
stc
lods
mov
dec
jecxz
lcall
sbb
pop
ret
jp
and
cmp
aas
sub
out
mov
dec
mov
lods
mov
or
adc
insw
std
jb
lds
push
fnstenv
push
fdivs
jle
mov
icebp
or
lea
mov
push
lret
lods
loop
xor
xchg
mov
jno
adc
mov
test
ds
cmc
out
mov
call
roll
inc
outsl
cltd
push
mov
fiaddl
fdivrs
xor
je
inc
pop
mov
jp
in
pop
mov
pop
out
pop
rcrl
nop
cli
dec
xor
lret
push
lea
out
lret
mov
and
ror
jp
cmp
dec
jg
lret
dec
inc
push
outsl
out
jne
xchg
rolb
loope
notb
push
inc
out
adc
xor
mov
xchg
filds
push
pusha
jno
cwtl
sbb
mov
fwait
sub
push
jae
mov
aad
or
icebp
fnstenv
mov
push
dec
stos
mov
clc
movsb
roll
push
lock
xchg
add
les
dec
arpl
in
loop
mov
shlb
or
sbb
arpl
outsl
js
cmpsb
cli
cmp
inc
xchg
inc
lods
mov
aad
mov
pop
mov
push
cltd
lock
insl
daa
pop
das
pop
clc
addl
or
xlat
ret
lcall
mov
sbb
or
mov
add
push
sub
xchg
cwtl
cltd
insb
lea
aad
lret
xchg
aas
aam
xchg
jle
test
add
jecxz
shrl
push
pop
mov
sub
cmp
popf
dec
divl
lret
mov
out
jo
out
sub
scas
sbb
inc
add
cs
sbbb
push
ret
and
sbb
adc
push
nop
lds
mov
outsb
add
and
xchg
jmp
test
je
popf
sbb
dec
jg
mov
mov
stos
inc
add
mov
stc
mov
jmp
mov
add
xlat
int
dec
and
jne
sub
push
fucomip
push
mov
stos
movsb
outsb
cmpsb
scas
jecxz
sti
xchg
cmp
ret
cli
lea
xor
lret
mov
dec
and
and
repz
mov
test
push
out
add
inc
push
orl
fmuls
or
mov
adc
popf
les
mov
in
mov
lret
mov
dec
je
push
mov
jae
xor
dec
add
lock
jno
in
mov
mov
jnp
xor
into
xchg
jb
insb
jmp
aaa
dec
mov
and
inc
popa
xor
out
push
in
mov
movsl
cmp
dec
das
cld
js
sub
push
ja
fwait
mov
test
dec
mov
pop
ss
jno
imul
rcll
divb
ss
pop
xlat
mov
inc
cmp
mov
push
cmpsl
dec
mov
pop
and
xchg
imul
test
into
shlb
out
scas
or
imul
adc
sbb
rorl
iret
push
popa
jbe
xor
jno
mov
jns
push
jle
arpl
arpl
scas
cmpsl
jno
cmp
and
sbb
dec
sarl
gs
dec
sub
jge,pt
pop
sarb
nop
sub
push
adc
movsb
loope
fwait
lods
std
cmpl
loop
inc
push
inc
ja
mov
test
cs
mov
out
pop
push
jge
mov
inc
inc
mov
repz
or
inc
mov
ret
xchg
repnz
ds
clc
inc
add
call
push
add
mov
xchg
imul
jle
jecxz
mov
push
push
bound
mov
mov
xlat
push
pop
xor
sub
or
cmp
fwait
mov
movsb
lods
mov
std
adc
sbb
pop
rolb
pusha
cmp
sarl
push
das
ret
lock
push
cmpsb
mov
jl
sub
dec
push
in
and
fsts
jnp
xchg
int3
xchg
xor
test
and
push
and
sti
mov
mov
jle
dec
fbstp
das
sbb
aas
xchg
and
cmpsb
push
fcompl
mov
mov
imul
sti
lahf
xchg
xor
add
xchg
nop
push
mov
cmpsl
dec
xor
mov
or
jb
loopne
jg
cs
jne
pop
push
imul
out
or
mov
fs
in
cmpsb
loopne
daa
jae
stos
inc
and
add
rcl
push
scas
mov
or
scas
inc
testb
js
ja
add
or
rorl
cmpb
fimull
mov
mov
subb
xchg
movsl
push
mov
push
cld
xor
into
and
movsb
cmp
pushf
push
xlat
cltd
xchg
fwait
shll
mov
repnz
mov
xchg
cmp
mov
pop
hlt
jl
js
leave
in
or
jno
xchg
jno
or
adc
lea
mov
outsb
add
inc
ret
pusha
sub
filds
test
rol
xchg
lahf
and
fxch
push
sbb
mov
push
xlat
les
sbb
mov
mov
xchg
cmp
fimuls
xchg
mov
cmpsb
int
dec
popl
or
dec
inc
scas
dec
cltd
xlat
pop
fimull
sbb
inc
xchg
adc
dec
pop
sub
fstl
int
mov
mov
into
ds
test
sbb
sbb
push
cmp
insl
subl
into
jg
ret
and
fbld
add
outsb
ljmp
pop
xor
jbe
cmc
xchg
ja
into
mov
fs
xchg
push
dec
inc
icebp
lret
pop
xchg
cmp
je
js
jne
shrl
or
xor
inc
adc
dec
hlt
iret
mov
test
lcall
ds
in
pop
or
inc
or
lahf
loopne
out
cwtd
orl
ss
aad
iret
pop
push
xchg
or
iret
std
jle
lock
mov
pop
out
push
push
push
xor
dec
push
xchg
test
cltd
pop
sbbl
xchg
mov
jg
lock
cli
push
rcrl
xor
xor
fucomip
shr
test
inc
std
icebp
adc
jbe
or
push
xchg
lock
es
or
inc
mov
xchg
cmpsl
pop
pop
sub
cs
jns
mov
loope
loopne
sub
mov
adc
and
hlt
jbe
xor
lcall
pop
call
inc
xchg
fidivl
out
mov
cmp
sub
sbb
loope
rcrl
lcall
sub
cs
inc
add
pop
dec
adc
push
dec
in
out
int3
std
pop
adc
adc
or
mov
jnp
out
cmp
dec
arpl
fld
leave
test
pop
cmp
jne
fs
int3
cmp
inc
rorl
test
adc
imul
ljmp
movsb
and
jo
mov
std
lea
out
jbe
xchg
data16
test
idivb
add
push
and
xchg
xchg
and
pop
and
jge
xchg
out
cmpsl
lods
inc
inc
xchg
sub
mov
mov
xor
xchg
and
lods
je
mov
and
add
mov
lcall
mov
jecxz
sub
dec
mov
cld
fdivrl
mov
mov
jge
mov
lock
int
xchg
mov
sub
inc
and
sub
out
into
enter
cmp
inc
inc
imul
inc
cld
scas
sub
js
and
mov
xchg
scas
cld
ds
mov
jns
out
add
adc
pop
cmp
ja
xor
sti
inc
xchg
ljmp
mov
cmp
inc
daa
daa
fmull
ss
adc
adc
cmp
cld
pop
jns
sbb
lods
mov
fmul
jmp
cs
xchg
ficoms
mov
lret
add
sbb
pusha
out
inc
orl
xchg
in
mov
lret
scas
pop
iret
and
pop
ds
and
sti
and
das
sub
imul
data16
fs
mov
xor
lret
lret
in
fistl
jmp
sub
out
aas
add
xor
push
xlat
js
stos
dec
in
fwait
dec
pop
pop
or
xchg
xchg
repnz
sahf
lock
jno
les
jbe
addl
mov
xor
clc
aaa
add
and
and
insl
add
pop
push
inc
inc
rolb
jle
add
adc
repnz
xchg
cmp
mov
fwait
pop
xchg
pop
cmpsl
lret
adc
pop
jno
movsb
mov
sub
iret
and
push
push
in
enter
daa
pop
roll
xorb
or
sahf
push
insl
sub
jle
bound
lcall
inc
adc
popf
dec
int3
jl
mov
mov
outsb
lahf
push
setbe
fcoml
in
popa
in
iret
ret
out
push
loopne
jge
xchg
dec
ja
dec
fwait
cld
adc
push
or
lcall
in
out
fildl
cmp
mov
jmp
mov
stos
sub
mov
push
sub
jb
je
sub
fs
sti
lods
lret
adc
adc
addl
mov
inc
xchg
addl
adc
and
lcall
lret
pop
sbb
leave
mov
daa
adc
pop
into
ss
lahf
or
cld
push
div
int3
nop
rcrb
mov
xor
pop
pusha
push
sbb
adc
out
nop
adc
icebp
icebp
jl
hlt
jb
xor
adc
bound
fidivrs
shlb
es
push
imul
xor
mov
xchg
push
xor
jge
mov
or
sbb
mov
outsl
or
repnz
cmp
or
mov
cmp
jne
pop
arpl
inc
in
sbb
rorl
imul
xor
mov
xor
repz
add
pop
scas
mov
adc
mov
fs
hlt
or
call
inc
std
loop
jecxz
pop
push
and
scas
fbstp
xchg
fadds
lea
cld
push
mov
cmp
out
bound
pop
adc
jl
cmp
dec
cmp
jbe
call
int
cmp
and
rcl
and
add
add
movsl
xchg
mov
push
stc
xor
mov
push
cmpsb
xchg
mov
jmp
cmpsl
mov
pop
jb
idivl
popa
push
mov
lods
or
cmpsb
pop
stos
add
sahf
arpl
lret
dec
pop
push
cmp
daa
ljmp
outsb
fcmovb
arpl
and
loope
or
pop
lods
lock
or
push
cmc
adc
shl
cltd
jecxz
pop
jmp
in
into
fs
sub
xor
ljmp
mov
and
das
mov
cli
jl
loope
in
jno
jle
mov
in
fcomi
mov
xchg
stos
inc
push
adc
cld
xchg
pop
lea
push
push
mov
jb
mov
jp
dec
pop
test
mov
mov
ret
shll
mov
aas
or
inc
ja
push
out
pop
roll
mov
ror
fnsave
mov
xchg
enter
jmp
push
xchg
xlat
mov
shll
mov
xchg
add
dec
jbe
add
divb
push
int3
pop
cmp
bound
std
scas
stc
pop
hlt
xlat
loopne
hlt
fisttpl
xor
cmp
xchg
cmp
lods
sub
rolb
bound
jecxz
cmpsl
stc
xchg
fisubrl
pop
sbbb
jae
jno
xorb
mov
jnp
lods
std
inc
push
sub
scas
mov
shrl
fsubp
mov
ds
mov
jbe
loope,pt
bnd
call
and
ds
fistpl
or
es
cmpsb
fs
xor
insb
es
or
sub
and
lret
sbb
jae
fildll
jne
nop
sub
aas
cmp
fwait
daa
dec
pop
movsl
dec
sub
cwtl
adc
stos
add
or
rcll
dec
mov
adc
or
clc
clc
leave
add
cmp
repz
repz
popa
cs
test
jle
mov
mov
xor
int3
sbb
push
lret
mov
push
lods
dec
push
jno
mov
test
int3
stc
testl
in
xor
cld
mov
or
jne
dec
lret
xor
test
and
mov
sub
mov
andl
xor
nop
jl
aaa
hlt
push
inc
ljmp
sbb
mov
aad
inc
iret
mov
mov
mov
scas
push
jle
sbb
and
inc
pushf
test
fwait
jno
pop
cmc
push
push
dec
pop
and
mov
mov
mov
fistps
dec
pusha
cmc
clc
unpckhps
ficompl
rolb
mov
je
sub
mov
dec
push
sbb
xchg
mov
iret
and
icebp
adc
cmp
sar
gs
jno
cmpsb
mov
lods
cltd
inc
sarl
jnp
push
lret
cmc
pop
fidivrl
repnz
cmp
test
sub
sbb
fmull
imul
ds
adc
cmp
mov
sbb
jmp
psrlq
pop
pop
addl
mov
mov
mov
nop
mov
cmpsb
mov
mov
lds
loop
inc
addb
and
jb
push
stos
imulb
ret
out
jbe
or
dec
test
push
mov
clc
fidivrl
or
jo
in
inc
in
pop
dec
and
inc
and
add
imul
fwait
adc
xor
iret
popf
sub
mov
xchg
jne
jne
and
xchg
xchg
rcrl
test
mov
ds
std
pusha
imul
push
push
lods
out
xor
cmp
std
fs
roll
inc
xchg
cmpsb
push
push
inc
mov
add
paddd
mov
or
adc
and
sub
mov
mov
sub
test
stos
pop
xor
fmuls
sub
push
sub
dec
cwtl
int
movsl
popf
sbb
out
aad
add
icebp
call
and
ror
lcall
mov
jp
outsl
inc
andb
push
sbbb
scas
lea
mov
js
stc
hlt
shrl
je
mov
fists
push
shrl
sbb
xor
inc
mov
mov
fdivs
das
add
ljmp
out
mov
pusha
xchg
shrl
out
cmp
pop
sbb
and
movsb
add
enter
push
int3
sarl
fsubl
ss
inc
nop
out
aad
sbb
in
xchg
jle
push
dec
loope
pop
pop
out
inc
outsl
mov
fimull
bts
scas
push
xchg
jbe
aam
mov
push
cwtl
xchg
add
add
or
call
pop
xchg
or
out
jmp
lret
pop
and
lea
pop
jmp
jmp
pop
loopew
aad
mov
jp
jg
je
sbb
sahf
sbb
push
fsubs
jp
icebp
dec
adc
mov
or
and
shll
testl
mov
pop
loopne
push
xor
jecxz
inc
ja
fs
ret
fcoml
push
rcrl
negl
std
lret
cmc
inc
or
outsb
daa
ja
mov
push
cmp
xchg
sub
mov
js
add
cmc
inc
xchg
int
mov
adc
or
fninit
push
ja
fildll
repnz
leave
pop
ret
jbe
mov
mov
int
xor
and
cmpsl
movsb
or
xor
or
inc
xchg
mov
xor
cmp
mov
test
test
imul
mov
pop
sbb
adc
push
or
cmp
das
or
pop
addl
jb
mov
test
cld
pop
addb
lods
iret
aaa
cmp
imul
add
or
inc
mov
aaa
lods
or
sbb
mov
je
or
jge
cld
fisttps
jne
in
mov
into
or
lock
loop
mov
push
mov
sbb
enter
fldenv
dec
adc
roll
adc
jecxz
or
mov
xor
mov
nop
outsb
sbb
cld
and
mov
jp
inc
xchg
push
mov
sub
inc
int3
daa
rolb
pop
xorl
leave
faddl
dec
dec
or
in
mov
and
scas
inc
pop
pop
inc
scas
push
inc
or
in
xchg
dec
xchg
loop
adc
xchg
add
clc
xchg
xchg
incl
or
xor
mull
and
outsb
ret
xor
xchg
inc
repz
repz
xchg
pop
fiaddl
lret
ffree
mov
ljmp
mov
or
dec
cmp
xchg
nop
shlb
cmp
push
xchg
dec
lahf
jge
jns
sub
push
push
adc
out
mov
in
cmp
or
pop
cltd
notb
sbb
jl
jne
add
or
insb
mov
into
jnp
jmp
or
dec
and
stos
out
arpl
fwait
mov
mov
out
negl
inc
in
jne
fcmovnbe
lock
push
jmp
adc
or
adc
out
jno
push
mov
mov
dec
add
inc
mov
hlt
insb
shrl
testb
ror
sub
repz
call
xor
jae
outsb
adc
lods
xchg
daa
scas
mov
std
adc
mov
scas
add
mov
xor
dec
or
sub
push
lahf
mov
add
xchg
jb
std
mov
cli
lret
push
push
lret
xor
shll
les
popa
or
inc
add
cmp
mov
and
fcomps
pusha
aaa
dec
gs
pop
push
pop
xchg
lcall
xor
dec
push
into
jmp
rcl
add
ret
and
es
mov
lods
or
mov
or
sub
or
clc
out
adc
fs
clc
jo
and
pop
xor
cmp
or
and
flds
loope
pop
fcmovnbe
negb
daa
mov
xor
jne
mov
test
and
pop
inc
shll
xlat
add
enter
mov
pop
or
sarb
cmpsl
in
cmp
cmp
sarl
sub
mov
mov
lock
fistpll
mov
dec
dec
aaa
xor
cld
lock
mov
mov
xlat
outsb
lret
jg
into
dec
ja
xchg
shll
dec
cmp
jp
shr
fists
xchg
push
mov
dec
mov
mov
pop
mov
inc
adc
ret
fsubl
jl
mov
xchg
dec
fs
jmp
leave
push
dec
ret
inc
mov
fistps
pop
loop
add
scas
sti
xorl
movsl
out
fs
cwtl
xchg
scas
in
xor
inc
inc
xchg
push
stc
mov
fwait
pop
ds
cwtl
and
inc
orps
jnp
mov
dec
ret
out
fsubr
or
add
gs
jne
dec
dec
stos
push
sbbl
lds
and
test
lods
int
ljmpw
push
clc
mov
adc
xor
push
shrl
xchg
dec
scas
sub
mov
cmpb
jns
sbb
jne
enter
pop
push
ss
fld
inc
aaa
pop
push
adc
xor
jnp
sbb
sub
xchg
ret
popf
mov
sub
xchg
and
in
pusha
sub
add
notb
js
rcr
mov
div
stos
lret
ror
aad
in
adc
test
lcall
sub
inc
dec
inc
sbbl
insb
inc
clc
fcoms
adc
mov
das
cmp
jbe
mov
stos
jno
pop
xchg
stos
add
idivl
pop
dec
scas
cmp
movsl
jmp
inc
pushf
enter
mov
or
inc
push
pop
xchg
mov
mov
addr16
xor
add
adc
rol
jmp
cmpsb
xorb
int3
xlat
orl
xchg
xor
mov
pop
or
aad
ffree
aaa
hlt
inc
cld
mov
dec
sub
arpl
xchg
mov
mov
add
dec
shlb
xchg
push
mov
cmp
dec
or
mov
sbb
cli
out
and
je
mov
push
inc
mov
or
mov
jno
fldt
cmp
mov
jnp
data16
jge
pop
mov
pop
popa
mov
hlt
xchg
dec
jle
pop
rolb
jb
xchg
push
in
and
xor
jno
sbb
mov
fnsave
dec
cmp
mov
inc
dec
mov
mov
lds
jl
sub
pop
inc
shrb
dec
dec
ret
lret
sub
mov
fimuls
pop
mov
add
inc
sub
jl
add
aad
fsts
pop
jo,pn
xor
repnz
inc
dec
test
mov
insb
jp
pop
pop
lcall
mov
or
mov
nop
push
pushf
sub
adc
in
clts
jne
data16
xor
sub
cltd
push
mov
pop
arpl
push
cmp
mov
out
mov
out
or
std
inc
mov
mov
xchg
int3
xchg
mov
pop
pop
or
dec
xor
lret
lret
jmp
adc
fstpt
cltd
aam
inc
push
add
xchg
scas
or
mov
mov
clc
fdivl
test
dec
and
sbb
mov
test
and
mov
add
pop
jbe
bound
pop
xor
adc
xorl
test
stos
push
lret
sbb
imul
aas
scas
negb
xchg
aas
test
fs
setg
testl
xchg
lods
adc
incb
fwait
in
fwait
icebp
pusha
adc
subb
jno
insl
push
aad
aam
mov
add
jmp
push
fstpl
addb
add
xchg
sub
mov
jno
popa
mov
sub
fwait
or
or
mov
cmp
add
ds
test
adc
sbb
sbb
sahf
jbe
addr16
jb
cmpsb
cs
xor
fdivrp
imul
jp
mov
stos
xchg
xor
mov
mov
js
enter
lock
xchg
pop
fdivl
jmp
int
mov
sbb
movsb
xchg
pop
iret
sub
outsl
dec
imul
cmp
jge
mov
cmp
sahf
push
les
nop
sbb
int3
mov
les
add
and
popa
notl
mov
adc
cmp
fwait
cmp
daa
loope
xchg
jp
fs
out
lea
inc
add
bound
mov
jo
pop
not
jno
cmp
jmp
dec
jno
fisubl
orl
mov
mov
mov
arpl
dec
xchg
rclb
pop
imul
mov
jne
int
pop
popf
or
fsts
stc
pop
adc
arpl
push
fidivl
fucomp
add
ret
sub
mov
sub
cwtl
aam
sbb
mov
cmp
lods
das
sti
xor
cld
fistps
lret
jo
jge
or
jno
and
mov
push
in
ljmp
xchg
mov
aas
or
add
mov
sbb
insb
test
or
bound
fists
cltd
jle
xor
xchg
pop
add
iret
mov
add
fisubrl
pop
sub
jno
mov
es
push
scas
xchg
xchg
push
lock
mov
es
loopne
imul
out
aad
fisttpll
in
or
popl
je
sbb
lock
ss
pop
mov
pop
out
imul
jns,pn
enter
adc
mov
fistps
sub
cwtl
das
and
jno
mov
test
cwtl
std
rolb
test
push
jecxz
xchg
pop
push
mov
mov
cmp
mov
xor
orl
or
sub
aas
adc
gs
sub
incb
mov
xor
inc
hlt
jmp
inc
es
adc
outsb
jno
faddl
fldenv
lds
mov
xor
fstpt
push
mov
xor
imul
fisubrs
adc
mov
out
outsb
jo
loop
or
insb
dec
scas
int3
flds
ds
pop
subb
cltd
lea
add
icebp
loope
add
inc
dec
test
jae
in
sub
mov
jnp
rol
pusha
push
lret
daa
xor
add
jne
add
shll
push
out
hlt
jae
arpl
cld
stc
and
out
cwtl
pusha
inc
mov
sub
test
imul
imul
push
ljmp
addb
adc
scas
jae
dec
sbb
mov
inc
lds
mov
xchg
and
cltd
test
daa
ss
mov
pop
xchg
aas
xor
aam
lods
mov
cmpsb
push
push
dec
push
lcall
shl
cli
in
stc
shrl
aad
dec
lcall
dec
js
in
bound
into
and
pop
dec
pop
imul
xchg
mov
in
shll
popf
fldenv
leave
push
inc
jne
jo
inc
and
psubsb
xor
call
iret
adc
roll
xor
lock
and
adc
out
nop
insl
push
out
lcall
sub
jno
pop
fisubs
cmp
stos
push
daa
jb
xchg
es
dec
fildll
outsl
out
lret
je
adc
mov
push
aas
sbbl
lea
cmp
jnp
xlat
std
and
sbb
jp
test
mov
and
cmp
bound
sub
fadd
adcb
pushf
mov
aad
add
pop
xor
cmpl
inc
int
jge
fadd
inc
repnz
pop
adc
loopne
jo
mov
push
and
mov
fucomp
lea
pop
push
fistpll
mov
and
add
es
xchg
push
fists
xchg
sub
sub
mov
clc
mov
sub
jmp
icebp
aas
inc
dec
cltd
jae
xchg
inc
stos
inc
mov
cltd
enter
fistl
dec
js
daa
add
pop
pop
push
pop
dec
call
adc
sti
test
je
pop
jg
shrb
pop
stos
xchg
sbb
mov
add
lds
std
dec
push
daa
or
call
ror
mov
cmp
jg
sbbl
jmp
rclb
je
loop
pop
dec
cs
push
fsubrl
sub
stos
icebp
std
popa
mov
jmp
xchg
adc
call
je
sbb
call
mov
adc
call
or
jmp
js
jl
sub
push
sbb
push
hlt
add
mov
lea
mov
push
adc
aaa
jmp
popa
stos
jp
in
aam
mov
ljmp
inc
aas
push
divl
xor
xor
js
imul
pop
xor
add
popa
pop
jl
mov
bound
mov
insb
xlat
mov
ja
adc
mov
pop
cltd
fwait
pop
xor
adc
sub
add
pop
in
ret
or
mov
xchg
lods
shlb
adc
add
out
cmp
mov
addr16
jb
lret
lds
ror
arpl
push
sub
scas
sbb
sbb
jae
fnstenv
jge
jo
cmp
jp
ljmp
cld
test
loope
add
pop
aad
pushf
lock
push
sub
mov
sahf
pop
or
hlt
inc
fwait
inc
sbb
mov
xlat
or
mov
pop
add
cltd
or
shlb
outsl
xchg
cmp
push
pop
pop
fmuls
int
dec
add
scas
sbb
jg
cmp
in
add
add
psubd
sub
and
sub
loope
jo
lret
fwait
or
inc
adc
dec
lods
mov
and
dec
and
ret
mov
xchg
jne
push
cwtl
xchg
jne
rcrb
push
insb
xor
mov
push
inc
push
adc
jb
or
scas
mov
push
mov
add
cwtl
pop
in
jae
push
popa
fsubs
jge
or
push
rdpmc
ret
cmp
cmp
popf
cltd
rcl
sahf
orb
loopne
or
leave
push
pop
cmpsb
push
mov
hlt
dec
jne
push
ror
push
rorb
shll
int
cli
add
dec
ja
loopne
test
out
jecxz
imul
dec
popa
cvttps2pi
cmp
and
mov
repnz
xor
fisttpll
popf
sbb
sbb
cli
push
mov
es
xchg
inc
push
aad
fstp
jmp
dec
movsl
pop
sbb
test
idivb
sbbb
mov
push
sub
xlat
pusha
pop
jl
adc
stc
addb
loopne
daa
push
fwait
dec
mov
or
pop
in
add
loope
in
lods
xchg
xor
sbb
andl
mov
gs
mov
fbstp
xchg
dec
jge
cli
cmpsl
rcr
jb
push
jp
sub
pop
rcrb
adc
push
fisubs
xchg
rcll
es
pushf
jno
fnstcw
sbb
lret
xchg
js
push
arpl
sbb
pop
fwait
and
test
cltd
dec
orl
gs
fsubrs
and
fisubrs
pop
shlb
imul
imul
cltd
cwtl
movsb
adc
mov
or
mov
mov
scas
jl
jge
or
mov
sub
push
adc
push
aaa
mov
adc
dec
push
lds
test
fmuls
mov
test
mov
popa
roll
xchg
mov
jnp
sbb
jmp
push
ficomps
rcl
addr16
and
xor
loop
iret
fdivl
fsubrl
dec
mov
jecxz
fisttpl
or
mov
pop
std
scas
in
das
and
ror
pop
xchg
iret
insb
and
pop
call
cwtl
xchg
subl
jl
aaa
daa
xchg
outsb
leave
shrl
push
ltr
adc
lods
mull
mov
fidivrl
mov
stos
jmp
out
and
jecxz
fildl
es
jmp
mov
lahf
idivl
and
aas
dec
xchg
hlt
xchg
cmp
dec
jl
out
cltd
lcall
or
imul
jns
inc
jp
mov
pusha
pop
mov
inc
leave
xlat
ds
or
push
in
loopne
cmp
jnp
dec
adc
aam
push
stc
and
jp
mov
into
cmp
mov
push
push
pusha
or
lret
xchg
call
lahf
lret
inc
adc
inc
cmp
outsb
xchg
pop
and
sbb
inc
push
or
mov
inc
int
outsl
inc
lret
data16
adc
add
push
enter
add
push
add
daa
xchg
roll
cmp
jl
and
stc
lahf
scas
and
jl
lcall
sbb
fld
mov
pop
sub
xor
jmp
movsb
sbb
sub
je
xchg
lcall
jne
fcmovbe
ficoml
sbb
dec
mov
test
pushf
enter
dec
es
pop
das
mov
int
sub
cmpb
xor
fsubs
lods
mov
into
pusha
in
insl
ja
out
stos
mov
shlb
outsb
enter
mov
sarl
dec
test
jo
scas
push
test
xchg
mov
xchg
cmp
scas
sub
lock
ja
mov
scas
mov
adc
jae
sbb
sbb
call
xchg
mov
scas
push
in
add
lods
stc
push
dec
adc
loop
pusha
pop
lahf
stos
cmp
fcompl
pop
push
lahf
into
lcall
cmp
cmp
xchg
sbb
push
cmc
pop
mov
in
nop
adc
mov
pop
daa
xchg
repnz
sub
mov
or
test
orl
push
fnsave
xchg
push
adc
arpl
adc
sub
mov
sub
frstor
mov
push
ja
sbb
pusha
xor
test
lahf
adc
cmpsb
daa
sbbb
cmp
xchg
test
and
jns
jne
sbbl
xor
sub
and
es
sbb
add
popf
jns
jno
or
push
inc
ficomps
das
mov
xlat
stos
scas
or
push
inc
mov
ss
push
sub
aad
adc
movsl
ret
pop
jg
movsl
mov
pop
jb
cmp
jmp
cmp
inc
test
jns
sub
fwait
jo
mov
scas
bound
pop
les
jo
sbb
andl
out
movsb
sti
and
inc
lret
ret
testl
out
dec
cs
pop
inc
dec
pop
sub
cmp
fs
push
cmpl
sub
sbb
or
addr16
pop
int
inc
xorl
std
cmpsb
out
loopne
mov
xchg
mov
mov
mov
adc
in
das
idivb
cmp
stos
or
in
outsb
jge
scas
movsb
jo
cmp
ja
loop
push
fnstsw
jnp
mov
mov
push
inc
and
push
lret
mov
cmpsl
pop
cmp
mov
push
jp
xor
pop
xchg
pop
jp
ljmp
les
inc
enter
push
xchg
mov
fcomps
jmp
dec
pop
cs
daa
and
data16
mov
adc
imul
lahf
pusha
dec
out
data16
mov
inc
aas
xor
xchg
div
pop
iret
xor
clc
stos
inc
aam
loope
xchg
sbb
xor
lret
inc
fstpt
xor
adc
push
daa
in
outsb
cmc
aas
out
rcrb
dec
and
sub
xchg
cmp
loope
jmp
imul
fists
fistpll
enter
and
mov
jae
dec
sarb
aas
loope
sahf
scas
aaa
dec
pop
arpl
test
pop
dec
cmp
sub
shlb
imul
dec
add
or
arpl
sti
pop
outsl
pop
out
out
sub
test
mov
lret
inc
clc
or
in
rcl
orl
mov
mov
bound
sub
push
loop
lods
jns
push
jmp
test
repz
popa
out
xchg
shll
jns,pn
dec
daa
sbb
inc
push
or
cld
repnz
mov
add
and
mov
add
cmc
repz
fwait
push
mov
fs
jo
das
leave
pop
icebp
mov
xchg
lock
daa
filds
outsl
popf
inc
push
icebp
or
cmpsl
pop
pushf
cli
cmp
lea
jne
pusha
outsl
xor
mov
ret
and
push
mov
shr
mov
out
mov
mov
scas
popa
rclb
xchg
fsubrs
ds
cmpsb
faddl
sub
inc
push
lret
lods
call
sbb
push
outsl
dec
mov
mov
jmp
or
jae
adc
pop
and
cld
and
sbb
shr
push
xor
dec
imul
xchg
mov
ja
sarl
pop
je
add
gs
int3
insb
mov
jns
xchg
or
test
and
movsl
loope
sub
lods
imul
addb
loop
adc
scas
sub
xchg
testb
sahf
cltd
lods
popf
and
pushf
aaa
mov
in
neg
mov
insb
push
out
and
ret
fisttpll
and
adc
aaa
into
pop
jno
pop
and
mov
imul
test
inc
and
pop
adc
cmp
cld
sti
mov
test
stc
fsub
int3
ljmp
ret
lret
xor
mov
jg
inc
sbb
bound
fadd
fsubrl
sbb
stc
mov
sbb
lret
push
and
cs
sbb
hlt
mull
xor
jge
inc
dec
push
pop
push
movsb
mov
in
push
aas
icebp
ret
inc
push
lahf
daa
dec
bound
inc
lds
jmp
rcrb
stos
pop
das
call
das
xchg
push
popa
or
mov
outsb
js
out
and
add
mov
dec
xchg
std
or
jle
cmp
cmc
sbb
stos
outsl
stc
or
push
mov
xchg
jp
test
xor
lahf
imul
sbb
dec
inc
inc
and
jns
sub
push
xlat
aas
dec
repnz
cli
js
int
mov
pusha
pop
fxch
stos
mov
mov
sub
dec
orl
xor
arpl
mov
scas
inc
sbbb
adc
outsb
sbb
xchg
notl
loope
sbb
outsb
sbbb
or
add
out
jno
adc
mov
pushf
nop
out
mov
mov
jp
jae
xlat
or
ljmp
into
ja
push
push
das
xor
pop
cmpsl
jecxz
dec
pop
sbb
cmp
out
inc
pop
push
int
shrb
jge
sub
adc
jp
add
fs
inc
in
or
gs
aas
jns
sub
fs
push
les
insb
pop
sbb
ret
inc
in
ret
dec
loope
and
sub
xchg
out
jo
add
loop
jmp
and
int3
cmpsl
inc
mov
lahf
mov
aad
sub
cmpsb
mov
lds
mov
fnstcw
call
adc
in
xor
cmpsb
std
push
mov
mov
dec
ret
mov
dec
and
loop
int3
adc
imul
lea
aas
inc
dec
pop
pop
lock
sarl
lahf
je,pt
pop
cmp
xor
cmp
jle
es
mov
mov
flds
in
les
jge
insb
dec
mov
icebp
push
aas
cmc
inc
mov
loope
xchg
rcr
nopl
pop
addr16
cwtl
dec
dec
cmp
ret
fimuls
lahf
push
adc
adc
hlt
xchg
mov
mov
or
test
pusha
jnp
inc
and
enter
lret
out
mov
mov
add
jecxz
sub
jbe
mov
inc
push
loope
cmpsl
scas
pop
mov
push
jbe
sub
or
int3
mov
frstor
mov
pop
sub
inc
iret
imul
testl
jns
sub
xor
fistpl
pop
and
and
fdivrs
adc
cmpsl
xlat
cmp
test
mov
ljmp
push
cmp
mov
xchg
fnstcw
inc
cmpsb
sbb
push
stos
ret
and
shll
cwtl
pop
outsl
js
cld
push
scas
or
or
jecxz
mov
xchg
data16
repnz
cld
popa
inc
and
in
dec
insl
fcomp
sub
jno
xor
dec
mov
js
jl
xchg
test
js
in
xchg
and
das
jge
sti
mov
shr
lret
xchg
or
cmc
add
repnz
dec
xlat
ret
pop
mov
int
pop
hlt
test
jno
ret
movsl
pop
sbb
jbe
aam
lock
mov
sbb
dec
jne
mov
loop
ja
fcmovnb
pop
arpl
jae
lds
ja
lahf
rcr
pop
mov
xor
cmp
insl
int
sbb
movsb
ljmp
nop
fisttpl
rcrl
aaa
pop
inc
mov
imul
xchg
add
lock
adc
xchg
or
jmp
lea
lret
arpl
xchg
sbb
loop
add
imul
adc
je
je
jb
lea
leave
lahf
mov
js
or
jae
dec
ds
or
adc
jns,pt
sub
fnstsw
jne
adc
ret
and
imul
xor
sub
push
daa
imul
cmp
xchg
ss
lcall
xor
rcll
dec
or
or
rol
sbb
dec
xchg
rcrl
test
xlat
jmp
in
ficoms
fisubl
ljmp
fdivrl
jbe
ss
sar
aad
inc
fsts
loop
and
pop
lock
sbb
jb
mov
pop
inc
xor
mov
push
loopne
stc
cmp
push
testl
mov
mov
sbb
sub
rorb
xor
mov
lcall
sbb
mov
xchg
pop
nopl
jae
pop
loopne
push
nop
or
cmp
jbe
in
mov
jb
pushf
xor
mov
push
inc
jge
mov
and
cmp
adc
les
hlt
xor
pop
inc
push
sub
ds
les
js
in
jne
mov
and
sub
inc
data16
fwait
jne
cltd
repz
out
mov
dec
pop
mov
outsb
mov
loop
dec
cli
movsl
dec
add
lods
test
sbb
test
jecxz
sbb
divb
test
cmpsb
inc
dec
jg
dec
in
pop
les
mov
pop
shl
shrl
xor
add
scas
and
mov
xor
mov
pop
dec
mov
mov
out
sub
fbld
mov
adc
dec
jle
mov
insl
sbb
cmpsl
jmp
mov
cmp
nop
push
and
or
pop
mov
daa
push
repz
jns
test
push
out
jno
inc
btr
dec
call
push
popa
inc
repnz
insw
mov
adc
push
push
cltd
ja
xchg
subb
push
lret
and
mov
sub
mov
icebp
out
jne
pop
daa
imul
ficomps
and
mov
mov
ja
sub
inc
movsb
js
aas
xchg
stc
mov
in
lods
imul
jno
pop
icebp
mov
inc
jmp
jge
dec
mov
xor
sub
cmc
loopne
outsb
outsl
sbb
dec
sbb
lcall
popa
xor
xor
dec
rcrl
push
push
push
pop
lods
push
mov
xor
in
in
out
nop
sub
loop
mov
repnz
xor
jp
imul
push
pop
arpl
and
test
pop
invlpg
inc
dec
stos
sarl
jle
sbb
sub
add
loope
mov
xchg
and
cmp
fwait
and
int
xchg
outsb
insl
clc
mov
xor
sbb
or
sti
jl
mov
std
pop
dec
and
inc
sahf
mov
sub
mov
cmp
lret
dec
xchg
push
pop
add
dec
or
loope
rcll
gs
xor
or
roll
pop
shlb
repz
or
scas
mov
loope
mov
sbb
lods
aam
xchg
mov
inc
loopne
and
sahf
in
divl
jbe
cmp
pop
sub
cmpsl
movsb
loope
inc
movsl
dec
cmc
scas
ret
shll
cmp
mov
js
xchg
sub
loopne
scas
mov
aad
int3
or
sbb
nop
inc
add
dec
mov
ret
xor
loope
or
ret
dec
pushf
fidivl
repz
cmp
leave
imul
push
out
xor
int3
push
or
fs
adc
cwtl
sahf
jge
and
rorl
sbb
sub
sbb
xchg
sarl
fsubl
fsub
sahf
push
and
lods
and
rcl
dec
pop
mov
sbb
mov
add
rolb
hlt
sbb
fmul
sahf
mov
int3
aas
or
push
hlt
xchg
int3
inc
outsl
inc
push
push
dec
xor
xchg
jl
cmp
jnp
jae
fidivs
cmp
mov
xchg
aad
and
xchg
loop
jmp
shrl
xor
pop
dec
lods
mov
or
gs
dec
mov
pop
not
mov
aas
add
xchg
js
loope
xlat
sub
pop
ljmp
dec
sti
test
sbb
mov
cmp
std
out
hlt
or
push
pop
xchg
dec
faddl
push
jnp
and
hlt
sub
mov
inc
dec
adc
mov
test
and
les
dec
pop
ljmp
cmp
mov
inc
fsubrl
cmp
sbb
or
push
pop
shlb
sbb
push
dec
rol
pop
sub
push
icebp
sbb
mov
dec
imul
cmpb
xchg
jno
push
subb
sarl
sub
jnp
or
or
pop
sub
adc
loope
das
mov
std
loopne
mov
test
mov
fs
icebp
adc
mov
imul
cwtl
cmp
fidivl
test
push
rcrb
into
insl
push
push
jmp
xchg
aas
xlat
xor
call
sub
jle
push
xchg
add
lods
or
lea
mov
inc
sub
sti
lods
push
sub
push
mov
repnz
mov
pusha
jmp
test
mulps
ret
xchg
popa
leave
mov
stos
cmp
and
mov
mov
adc
les
lret
push
out
push
dec
movsl
push
push
popf
movsl
outsl
sub
add
inc
int
subb
push
addb
inc
jbe
cli
rorb
pop
xor
or
outsb
and
insb
sarb
push
lods
test
xchg
ret
jbe
testb
cmp
fmull
pop
or
fsubrs
shlb
fidivrs
nop
sub
sbb
cmc
outsl
push
fdivrl
push
cmp
jno
into
scas
lods
jne
test
xchg
stc
jne
or
insl
fiadds
testb
cmp
or
outsl
scas
lock
xor
sbb
in
pop
dec
jl
repnz
pop
daa
movsl
sbb
cltd
fsubl
mov
or
ja
scas
movb
jbe
mov
sbb
pusha
mov
adc
xchg
movsb
mov
daa
mov
cld
pushf
movsb
adc
jmp
mov
cld
int
insl
and
cwtl
nop
cli
js
ljmp
or
flds
hlt
mov
hlt
jb
ret
xlat
push
push
mov
sub
jmp
arpl
xchg
mov
sub
dec
add
push
aad
pop
cmp
add
sub
gs
xchg
out
add
add
adc
sub
push
or
jne
fsubr
mov
std
outsb
mov
mov
sub
pop
mov
xor
xor
dec
cmp
movsb
lods
mov
fsubs
mov
mov
adc
mov
lret
std
sub
pop
sti
push
call
lds
das
stc
test
dec
in
jl
push
adc
mov
xchg
call
adc
int
dec
mov
add
mov
push
mov
cmpsl
lock
inc
popf
cmpsb
mov
shll
subb
ficompl
loop
fmull
mov
dec
repnz
call
jo
cmpsl
xchg
cmp
sbb
and
sbb
mov
dec
lahf
inc
rorb
out
es
xor
dec
xchg
fs
in
fistpll
cmp
out
ret
xchg
inc
jp
stos
iret
in
xchg
std
sbb
mov
add
pop
sub
xchg
jno
icebp
sub
hlt
adc
add
sarl
pshufw
lds
add
jne
fstps
testl
pop
mov
repz
mov
imul
mov
sbb
lods
outsb
and
jns
insb
adc
push
dec
sbb
jbe
add
push
sub
cld
insb
icebp
cmp
mov
jae
cmp
sahf
imul
out
pop
out
jl
dec
xor
subl
mov
add
cmc
lock
loopne
mov
sbb
mov
fmuls
sbb
mov
adc
insb
int3
test
movsb
xchg
dec
inc
gs
pop
xor
rorb
icebp
popf
jg
or
stos
pop
out
ss
mov
fnstsw
aas
pop
push
add
mov
aad
mov
mov
pop
mov
xchg
jb
mov
inc
jge
jo
inc
stc
in
add
xchg
push
inc
lea
mov
pop
ret
aam
xchg
dec
dec
push
loope
mov
icebp
xor
xor
inc
out
push
jbe
icebp
nop
pop
xchg
fidivl
push
fdivrs
stc
rorl
push
mov
into
pop
mulb
xor
adc
dec
sbb
sub
sahf
and
sahf
push
std
scas
test
hlt
aas
mov
aad
jae
mov
aam
xor
pushf
jbe
in
pop
adc
stc
ds
push
loop
leave
sub
add
lods
ficoml
sub
mov
mov
inc
jns
cmpsb
ljmp
bound
pop
popf
jecxz
ret
hlt
push
fistps
bound
cld
push
or
icebp
jl
xlat
mov
pop
pop
fisubrl
push
ss
push
pop
adc
mov
movsl
in
cmp
outsb
ret
adc
imul
xor
mov
push
inc
mov
ret
xor
or
push
sub
mov
ss
add
ret
adc
jecxz
fbstp
cmpsb
dec
pop
mov
ja
mov
jo
mov
lock
movsb
xor
fadds
cmp
in
push
lock
gs
mov
mov
push
cwtl
pop
test
lds
insl
mov
sub
xor
push
dec
fsubrs
leave
mov
lods
shl
push
mov
push
sbb
fst
outsl
dec
mov
loope
push
push
adcl
xchg
imul
dec
pop
cmpsb
rorb
lret
ss
je
outsl
inc
or
in
test
cmc
mull
push
inc
ja
fisubrs
mov
in
int3
lods
fists
adc
pop
sti
xor
addl
test
aam
scas
out
adc
cmpsl
movsl
xchg
mov
add
pushf
clc
movsl
jno
or
hlt
xchg
jnp
and
add
loop
fnstsw
dec
int3
iret
ss
stos
push
imul
mov
and
xchg
lcall
pop
ss
daa
test
dec
aam
es
dec
dec
adc
pop
jl
out
int3
sub
push
jmp
stc
das
xor
and
sbb
and
jp
shl
mov
aad
jg
leave
in
adc
jnp
pop
push
cld
bound
pop
pop
les
jle
das
idivb
add
cltd
dec
dec
mov
push
insb
fdivs
into
sub
mov
inc
mov
pop
fs
or
lds
imul
hlt
add
xlat
repnz
xchg
mov
mov
inc
or
sbb
jmp
loopne
sub
cwtl
mov
mov
push
loop
mov
cmp
pusha
fdiv
push
in
je
inc
js
cmpb
xchg
jecxz
ljmp
push
imul
out
int
test
stos
xor
pop
jecxz
mov
fimull
inc
int3
add
pop
and
push
or
add
int
pop
das
or
or
lds
shr
xchg
stc
cld
and
insl
rorb
addl
xor
adc
jmp
mov
mov
sti
loope
xor
mov
lods
hlt
push
mov
je
jno
xchg
cmp
jg
jnp
push
mov
rclb
inc
mov
lcall
xchg
jb
cmp
sbb
add
push
jno
cmp
inc
leave
mov
add
inc
jmp
xchg
dec
push
scas
push
aad
loop
dec
mov
or
fs
push
add
adc
pushf
sbb
xchg
imul
push
scas
loop
cli
cwtl
inc
and
inc
roll
test
xchg
push
std
cmp
xchg
mov
lret
jg
xchg
xchg
into
and
xor
rcll
mov
dec
inc
lea
adc
adc
pop
xor
dec
in
in
and
pop
lods
adc
lahf
push
push
add
sahf
inc
dec
not
pop
pop
out
lods
dec
and
in
cmp
fisubs
xchg
sbb
fcmove
insb
xor
pop
nop
jo
movups
aas
sub
ret
dec
es
dec
add
cmpsb
pop
add
es
test
fsubr
out
and
pop
mov
dec
fwait
push
fistps
scas
xchg
js
inc
mov
test
pop
in
adc
sub
dec
inc
push
mov
push
dec
sar
push
mov
mov
or
ja
addr16
sbb
pusha
dec
rcrb
movsl
cltd
xchg
ds
cwtl
clc
ret
adc
xchg
dec
fisttpl
sub
sub
or
xchg
leave
mov
ja
movsb
int3
ret
xchg
movb
adc
ret
into
ss
cmp
inc
in
pusha
or
pop
ffreep
cld
lea
adc
cld
lock
clc
adc
mov
jmp
iret
adc
loope
andl
cmpsb
and
mov
adc
icebp
or
insb
test
ljmp
dec
test
into
mov
test
cmpsl
lret
lcall
or
xchg
pop
mov
add
xor
dec
aam
bound
xor
push
fwait
movq
mov
lret
mov
mov
xchg
cmp
xor
cmp
hlt
stos
pop
adc
pop
mov
jae
lcall
sbb
add
repnz
aad
lods
mov
add
imull
ret
int3
ds
ret
sti
add
loopne
ja
sub
into
andl
xchg
xchg
sub
mov
roll
mov
test
push
fucomi
es
jo
insb
lds
into
icebp
outsl
inc
int3
popf
xchg
dec
mov
sub
mov
add
cmp
imul
xchg
test
ja
jns
xor
aam
mov
fadd
push
xchg
mov
shrb
in
lret
jecxz
add
aaa
dec
scas
xlat
dec
nop
adcl
xchg
fldl
out
cwtl
movsl
add
add
mov
pop
cmp
nop
sub
xchg
sub
jle
xlat
adc
aam
jb
sti
xchg
std
or
pushf
out
pusha
mov
outsl
in
xchg
adc
aam
inc
dec
and
movsb
or
pop
lret
mov
bound
lret
inc
psllw
adc
bound
js
sub
aas
cld
daa
fwait
or
sbb
sub
inc
add
enter
sbb
scas
popa
jl
jo
xchg
addl
mov
test
outsl
js
imul
cmp
mov
add
push
movsb
inc
in
or
fldl
xor
pop
stos
js
test
arpl
arpl
pop
sarb
pop
insb
lahf
mov
jb
mov
push
cmc
and
and
shrb
fstpt
into
inc
adc
push
mov
repz
es
push
sbb
xchg
pop
dec
sbb
pop
movsl
sahf
mov
lret
push
adc
mov
aad
push
test
outsl
dec
mov
jo
das
aas
in
lcall
leave
subl
psrld
mov
push
out
in
and
push
inc
fcmovnb
dec
cmpsb
ss
adc
mov
cmpsb
push
rcr
xadd
jmp
dec
jnp
mov
test
gs
lods
mov
std
sahf
inc
mov
jle
cld
add
out
jbe
fnstcw
aas
imul
imul
push
in
cmp
adc
gs
mov
push
cld
pushf
sbb
xlat
adc
jmp
sbb
pop
outsb
add
in
iret
hlt
or
cld
or
iret
das
pop
mov
inc
xor
or
stos
push
cmc
inc
lret
fidivl
cmp
mov
jle
lds
or
push
mov
and
sarb
lret
mov
fcos
xchg
lret
movsl
mov
iret
dec
and
cld
mov
addr16
repz
mov
clc
cmp
cmpsb
test
xor
cmp
jo
mov
inc
std
lea
cmpsb
adc
in
push
scas
pop
jnp
and
imul
addl
pop
loope
push
push
lock
adc
lds
jle
fcmovnu
sub
in
or
push
fs
stos
push
mov
movsb
sarb
pop
xlat
pusha
mov
icebp
adc
inc
mov
test
push
mov
jb
sbb
ret
into
jnp
inc
cmp
lret
gs
mov
ret
js
int3
mov
pop
fldl
out
mov
ret
mov
mov
cli
inc
push
data16
out
xchg
push
push
add
dec
lods
fnstsw
popf
aas
subb
sbbl
rcrb
xlat
xorl
jno
mov
pop
gs
cmp
in
push
jmp
and
or
add
nop
int
out
rep
fwait
jmp
jns
cmp
adc
mov
int3
pop
xchg
movsl
lret
pop
sbb
adc
pop
push
sub
dec
lea
xchg
dec
jmp
inc
notb
pop
sbb
test
je
adc
push
into
xchg
aas
mov
xchg
mov
and
mov
xchg
aaa
jge
mov
scas
mov
lock
pop
mov
jmp
mov
rorl
push
sbb
addr16
call
mov
inc
xor
xchg
sbb
inc
stos
mov
adc
jle
fmuls
js
in
aam
fcmovb
mov
pusha
test
xchg
sub
mov
jecxz
push
xor
pop
mov
adc
fdivrs
mov
sub
clc
pop
jmp
sub
mov
lock
inc
les
fiadds
das
push
movsl
push
pop
push
xor
ja
xlat
call
insl
dec
xor
xchg
test
in
mov
xchg
lea
sub
add
aas
sub
shlb
dec
loop
fildl
lea
or
mov
mov
scas
lcall
xchg
xchg
inc
add
mov
icebp
dec
xchg
flds
lret
stc
xor
jecxz
je
mov
add
faddp
test
pushf
sbb
psubsw
mov
jno
addr16
int3
in
jge
lcall
fdivs
or
rclb
mov
adc
jl
scas
pop
pop
or
fstl
push
cmpb
es
enter
pop
jg
inc
push
xor
mov
lahf
scas
popa
fdivs
pop
pop
pop
or
mov
iret
sub
jle
mov
addr16
cmp
call
in
add
xor
das
cmp
shlb
sub
sub
push
and
mov
jnp
or
clc
cmp
adc
and
cmp
jbe
mov
jne
dec
ret
in
daa
dec
fdivl
lods
xor
and
repnz
mov
test
mov
addb
lods
into
in
push
add
add
push
push
cli
aad
test
icebp
sub
and
scas
je
sbb
inc
sbb
jo
lods
mov
idiv
inc
xchg
js
add
jmp
or
stc
jecxz
add
out
mov
jbe
out
xor
xor
sti
or
ret
sbb
sub
pop
fstpl
sub
fldenv
test
sbbl
adc
push
push
notl
jne
push
xchg
sbb
sbb
add
stos
mull
mov
loop
fidivrs
int
stos
xor
int3
out
or
rcl
movsl
popa
loope
fdiv
xchg
inc
jb
out
lock
cmp
jb
lods
mov
adc
push
arpl
in
popa
cltd
push
js
push
jl
iret
xchg
inc
lock
mov
xchg
inc
adc
push
mov
hlt
mov
scas
sub
cmp
jne
movsb
test
jnp
and
mov
xor
andl
jle
fcompl
or
leave
js
mov
in
jle
mov
pop
pop
js
and
call
adc
ljmp
fs
gs
les
dec
sub
cmp
jbe,pn
mov
push
out
cmp
sti
xor
loop
lahf
pop
inc
mov
call
sti
push
push
pop
js
cld
dec
push
xor
fisubrl
hlt
xchg
sbb
push
jmp
int3
adc
mov
or
cmp
jle
out
bound
rol
jo
xchg
adc
push
sti
call
movb
lcall
imul
mov
dec
mov
cmc
cmp
push
les
jg
gs
testb
in
push
xchg
mov
dec
in
xor
or
leave
push
xchg
aam
cli
fwait
enter
jg
push
and
scas
push
cmp
pushf
inc
dec
sub
sub
or
mov
sbbb
lcall
xchg
cmp
and
hlt
dec
xchg
or
sbb
ja
cmc
dec
dec
out
mov
pop
push
sbb
xor
addb
aaa
icebp
pop
jle
mov
in
stos
mov
xchg
add
std
fcoml
adc
xchg
jno
adc
fsubr
inc
in
cmp
cmpb
mov
pop
xchg
pop
lahf
stc
and
in
lods
arpl
aas
mov
and
and
or
popf
push
in
insb
aaa
push
jne
fistps
jnp
push
div
xlat
out
pop
adc
cwtl
sahf
and
sbb
jnp
and
sbbl
sarb
fisttpll
pop
xor
sarb
sub
jg
lret
sbb
dec
mov
jo
mov
push
adc
gs
mov
and
sub
add
xor
or
scas
lods
and
mov
and
pop
add
aas
mov
sbb
jp
mov
mov
das
push
dec
cmp
in
addr16
jae
aad
out
jns
add
insl
loop
or
mov
mov
clc
xchg
shr
jbe
pop
jge
push
sbb
and
mov
add
negl
cmp
sahf
xor
and
jl
loopne
adc
out
lcall
test
inc
cmp
push
fisttpll
push
rcr
dec
leave
repz
sbb
cli
and
sarb
test
and
out
loop
pop
jg
push
mov
into
xlat
mov
adc
mov
and
sub
icebp
in
inc
sub
negl
sahf
outsb
xor
movsl
push
rcrb
mov
or
mov
cmpsb
or
dec
incb
sbb
cmp
sbb
mov
hlt
and
int3
push
pop
mov
push
push
aaa
fdivrp
jbe
je
mov
mov
rorl
mov
xchg
jne
faddl
pusha
popa
push
inc
mov
dec
cwtl
enter
xchg
enter
jge
sub
clc
xor
nop
pop
je
dec
ss
xor
lods
xchg
ja
mov
dec
data16
repnz
and
gs
lods
popf
enter
inc
scas
and
dec
stos
aam
in
add
pop
add
xchg
stos
mov
mov
cmpsb
fbstp
test
or
jp
sbb
shr
push
jnp
sarb
loop
pop
test
in
cmc
bound
addl
adc
add
dec
jae
dec
jecxz
jno
aam
push
sbb
lods
sbb
das
bound
dec
or
ljmp
jmp
cld
dec
call
scas
dec
mov
inc
adc
mov
sub
jle
dec
fdivr
stos
mov
in
mov
adc
pop
fildl
aad
pop
inc
jge
adc
ret
pop
idivl
push
loopne
inc
movaps
loopne
add
mov
jnp
loopne
sbb
jmp
lds
cmp
inc
in
jp
shl
xchg
lds
adc
xor
jnp
fistpl
inc
mov
aam
pop
or
iret
std
adc
lds
mov
push
loopne
imul
incl
movsb
and
xchg
mov
mov
lahf
sbb
data16
les
gs
ret
cmpsl
xchg
dec
jo
jle
in
rol
les
jbe
testb
and
add
sub
into
into
push
jl
xchg
test
xchg
xchg
daa
dec
mov
popf
mov
inc
mov
shlb
push
mov
stc
xlat
fidivrl
push
loopne
into
jb
or
fisttps
inc
inc
jno
xchg
pop
mov
and
es
rorb
loop
push
dec
mov
mov
push
insl
pop
and
cmc
add
push
js
adc
and
sub
insb
lods
xor
mov
cmpl
shlb
mov
adc
push
ds
lods
sub
shl
dec
mov
std
mov
inc
ljmp
cmc
mov
lret
movsb
arpl
pop
hlt
mov
ret
xchg
iret
pop
cwtl
cmp
insl
pop
pusha
mov
add
mov
fsubp
adc
xor
cld
push
rorl
xlat
js
insl
pop
add
pop
push
pop
xchg
or
xchg
cmp
cmp
jno
stos
cmpsb
jmp
enter
inc
sub
loop
je
sahf
roll
adc
aad
out
sbb
fisubl
out
push
into
adc
movsl
inc
adc
push
repnz
xlat
pop
es
movsl
xchg
mov
outsl
cmp
mov
ja
and
push
xchg
loope
jl
inc
pusha
leave
lret
sbbl
cli
push
jbe
inc
push
cmp
xorb
cwtl
cmpl
xchg
fucom
jle
jae
or
in
xchg
ss
dec
in
sahf
cmp
inc
inc
mov
nop/reserved
cltd
or
mov
lods
fidivl
ffree
xchg
loopne
addr16
pop
sub
push
sub
xchg
fdivrp
dec
xchg
fwait
push
jge
adcl
inc
out
imul
jl
enter
adc
repnz
mov
gs
xchg
mov
mov
ret
pop
xor
pop
pop
jg
cmpl
popf
cmc
call
pop
xchg
xor
inc
xor
fidivs
jecxz
jbe
mov
mov
loopne
mov
popf
cmp
gs
and
push
addr16
cmp
inc
and
push
xor
dec
cmp
aam
dec
or
stos
dec
xor
inc
dec
fwait
mov
lock
dec
xchg
xor
lea
icebp
sbb
or
inc
and
pop
mov
mov
adc
jg
sbbb
push
fs
mov
xchg
ret
mov
pushf
fists
stc
pop
xchg
iret
ljmp
add
xchg
jl,pt
or
dec
cmp
pop
pop
pop
and
or
pushf
sbb
and
inc
push
sub
pushf
cmpsb
lock
sbb
sub
mov
aam
ret
mov
ja
mov
adc
mov
into
xchg
pushl
pop
test
mov
cmp
lods
je
leave
inc
daa
inc
hlt
test
fwait
jg
cmp
lds
jge
dec
and
sti
add
icebp
xchg
es
xlat
dec
xor
call
fs
leave
cmpsl
and
mov
jmp
jnp
out
dec
add
mov
pusha
sbb
add
incb
mov
mov
fildl
enter
xchg
mov
fwait
lea
dec
jbe
cmp
es
xchg
xor
into
xchg
mov
add
mov
mov
and
popf
xchg
dec
lock
aad
test
sub
in
sbb
pop
lret
jge
mov
sbb
notl
leave
xchg
sbb
inc
fmull
xor
aad
adc
xchg
fwait
cmp
jge
jmp
aaa
mov
lcall
jle
lret
jbe
jae
lret
pop
or
xor
out
je
sub
or
inc
cli
aaa
call
mov
ds
inc
mov
mov
enter
inc
sub
dec
mov
xorb
push
clc
adc
dec
pop
jecxz
insl
sub
popa
push
pop
push
cs
dec
mov
aad
repz
dec
xchg
push
in
popf
fwait
lock
xchg
fisubrl
imul
out
cli
pop
cmp
push
in
cld
jecxz
movsb
rcr
mov
test
scas
aam
outsl
div
fmulp
sahf
fcomps
ss
jae
mov
cs
icebp
imul
mov
xchg
loopne
std
es
pushf
push
sbb
mov
add
dec
stos
add
movsb
aaa
imul
adc
pop
xchg
jne
lea
adc
rcrb
sub
repnz
dec
hlt
sub
mov
dec
dec
add
inc
inc
pop
push
adc
es
sbb
fcomps
clc
and
mov
xchg
mov
iret
testl
icebp
ret
mov
jae
inc
fisubrs
adc
pop
adc
jo
or
adc
inc
add
adc
cli
movsb
in
lods
repnz
xchg
mov
iret
push
xchg
out
push
dec
sbb
ret
sbb
fnstcw
fwait
data16
lock
out
scas
inc
mov
insb
popf
and
mov
jb
push
fimuls
repnz
push
push
pop
jmp
dec
jo
loopne
dec
aas
fldl
mov
mov
test
mov
dec
addr16
lods
push
jnp
cmp
and
lds
pop
sub
mov
fcomip
rol
push
cltd
js
xor
scas
mov
fldl
ss
mov
jnp
push
dec
pop
lret
sbb
or
jns
scas
fmuls
and
imul
sub
add
cmp
aaa
mov
in
mov
push
popf
xchg
test
add
cmp
or
pushf
pop
or
pop
inc
test
xchg
add
out
and
sbb
sub
int
mov
cmp
mov
jbe
mov
mov
and
loope
xor
repz
push
adcl
or
pop
test
and
mov
pop
pop
rcr
cmp
mov
dec
push
scas
popa
pop
push
push
cmc
ljmp
fstl
fstpl
out
icebp
shrb
shlb
pop
daa
shrl
call
dec
inc
push
cmp
xor
mov
test
adc
jg
daa
addr16
inc
or
push
cwtl
fistl
cwtl
loopne
mov
jb
inc
mov
xlat
mov
jbe
test
pop
adc
cmpsb
lret
hlt
inc
jmp
mov
sbb
xchg
push
dec
mov
jecxz
inc
out
pop
push
sub
pop
fsts
sahf
mov
lea
cltd
movsl
add
add
in
mov
adc
je
enter
pop
les
sub
or
inc
loope
test
call
call
sahf
bound
jg
adc
fildl
mov
fidivs
sub
dec
dec
jle
out
popa
and
lret
push
xor
pop
ja
mov
xchg
adc
dec
leave
arpl
jmp
jne
adc
mov
adc
fwait
jbe
adcb
cmp
adc
xor
inc
scas
sbb
or
ljmp
add
dec
lret
xor
ficomps
into
add
hlt
shll
dec
stos
mov
sbbb
mov
out
lods
mov
add
mov
cld
jb
mov
js
xchg
dec
lods
sbb
pushf
out
mov
push
mov
pop
jae
cli
popa
incb
insl
scas
xor
jl
jmp
mov
xor
test
int3
arpl
push
add
clc
xor
cmp
mov
aam
mov
mov
mov
lahf
nop
ficompl
push
cmp
fucom
dec
loope
call
inc
pop
push
sub
or
sub
rol
rorl
nop
pop
xchg
cmpsb
arpl
fnsave
pop
inc
daa
and
pop
sbb
mov
cmp
shll
mov
ds
push
dec
ja
cmp
push
test
mov
sahf
jno
cmp
lcall
dec
mov
xchg
xchg
sti
bound
fisubl
cmp
jle
fwait
scas
stc
push
mov
pusha
sarb
adc
push
mov
fmuls
mov
mov
inc
addr16
adc
jge
push
lds
push
xor
fstpl
pusha
xchg
test
dec
jo
dec
sbb
dec
ret
inc
sbb
mov
into
or
loope
imul
ficompl
aas
addr16
dec
xor
jb
loop
faddl
rol
xchg
or
mov
dec
ja
mov
fs
mov
pop
call
loopne
mul
movsb
jns
lcall
aam
out
xor
aaa
js
push
dec
push
add
adc
mov
js
cmp
pop
pop
lock
sbb
orb
jb
sub
adc
dec
xlat
ret
fcompl
in
shlb
sbb
mov
fsubrl
xor
pop
icebp
rcrl
push
sahf
popf
incl
out
enter
jle
aad
pop
xchg
push
pop
lret
xor
clc
popf
imul
and
jmp
out
pushf
rorb
jle
popa
mov
or
andb
push
nop
push
popl
jae
jecxz
mov
sarb
out
bound
pop
inc
sub
repz
or
mov
xlat
or
mov
xor
xor
adc
test
sub
aad
push
cmc
pop
lret
into
test
mov
stc
sbb
jge
rolb
dec
cmpsb
ja
xor
jge
jg
out
test
scas
ja
jge
jmp
mov
sbb
cmpsl
cli
loopne
mov
je
shll
push
mov
aam
sarb
push
jl
enter
ja
mov
ds
xor
aam
sbb
inc
sbb
jo
inc
ds
mov
pop
aaa
inc
out
nop
mov
dec
jbe
pop
jns
xchg
mov
sub
nop
adc
mov
xchg
stc
aas
mov
fs
xor
adc
push
inc
push
insl
fstl
jl
jmp
dec
cmpsl
je
dec
movsb
sub
mov
jecxz
rep
push
inc
adc
or
mov
pop
mov
mov
call
xor
mov
imul
add
out
sar
lock
pop
out
into
pusha
or
sahf
xlat
decl
jp
cwtl
jae
jg
outsb
mov
gs
mov
push
outsb
mov
inc
mov
stos
sbb
sarl
jg
lcall
dec
jl
jae
jp
push
cs
pop
mov
sub
outsb
jge
pop
mov
pop
lock
gs
lods
sbb
add
incl
scas
sbb
xlat
jmp
int3
jo
dec
jne
cmpb
push
call
lea
mov
jae
adc
fstps
xchg
add
movsb
xchg
sahf
mov
std
sub
jns
push
mov
out
mov
jp
std
push
movsl
xchg
jae
stos
loop
iret
movsl
lcall
mov
pop
cmp
xor
std
sarl
and
jnp
les
orl
cltd
cld
mov
jne
lds
out
loope
sti
push
push
inc
xchg
mov
les
sub
ret
fidivs
cmpsl
arpl
incl
insb
ljmp
loopne
loop
jbe
popa
mov
out
insb
xchg
fidivl
mov
jle
cmpsl
movsb
aam
push
test
xlat
mov
mov
jns
subb
icebp
lods
lock
sub
push
and
fucomip
stos
dec
insl
sbb
push
addr16
dec
mov
clc
pop
mov
lods
push
adc
cmpb
mov
inc
push
cwtl
fnstsw
gs
sbb
bound
adc
subb
cld
je
cmp
push
xor
repnz
inc
push
insl
adc
mov
fsubrl
cltd
inc
ror
sub
xor
inc
pusha
sub
cmpsl
or
adc
inc
pop
std
es
inc
xlat
js,pn
mov
ss
popa
sub
xchg
xor
xor
das
cmp
stos
cmc
ss
jl
mov
shll
push
repnz
mov
cmc
dec
or
mov
ja
fidivrl
xchg
jb
sbb
sbb
jnp
mov
dec
push
push
mov
cltd
aad
push
bound
loopne
in
daa
push
jae
xchg
fwait
shr
gs
mov
and
inc
add
xor
ffreep
in
scas
daa
test
or
inc
or
xchg
push
out
mov
aaa
xchg
ret
pop
push
mov
and
inc
imul
dec
and
aad
dec
call
jecxz
cmc
loop
jnp
inc
inc
jecxz
cmp
jmp
iret
or
dec
inc
sbb
mov
in
mov
inc
add
out
xchg
das
sub
out
mov
push
int
sub
mov
jbe
xor
jecxz
mov
cmp
scas
movsb
and
lahf
das
bound
jp
fwait
sbb
shrb
mov
and
cs
mov
daa
dec
ljmp
or
fisubrl
ja
lcall
fsubs
fsts
or
adc
and
pop
or
ja
clc
cmpsb
pop
aaa
jge
cmp
jns
loope
shrl
adc
sahf
clc
push
xor
jmp
cmp
mov
pop
movl
push
and
iret
push
push
fs
mov
mov
lcall
and
ss
out
mov
out
pop
push
inc
or
pushf
sti
shll
jp
sub
loop
inc
je
and
cmpsl
adc
in
mov
mov
push
sbb
or
mov
cld
lds
jne
dec
pop
push
push
repnz
adc
fwait
or
ss
mov
inc
add
aam
lcall
and
cld
repnz
inc
xchg
iret
int3
bound
push
or
fmulp
mov
stos
cltd
test
fdivrl
stc
sbb
inc
pop
push
out
int
shrl
xchg
rorb
cwtl
add
lods
imul
add
sti
xor
std
dec
int
cwtl
push
aad
mov
mov
loopne
push
sub
jo
xchg
pushf
imul
fmuls
ror
xchg
add
fdivrl
rclb
cmp
push
test
pushf
orl
cmp
cmp
jns
repnz
in
lret
adc
je
cmp
lret
pusha
pop
inc
xchg
stc
pop
dec
xchg
in
mov
xchg
xor
fistl
mov
push
cmpsb
test
sub
pop
mov
push
int
push
inc
dec
add
imul
xor
jle
aam
inc
mov
jo
jb
adcb
jb
mov
inc
sbb
sub
jecxz
fucomi
add
adc
dec
mov
movsl
mov
arpl
gs
jp
push
insl
xchg
sub
add
rorl
jg
sbb
js
mov
decb
call
dec
sarl
pop
mov
in
fisttpl
ja
mov
xchg
jbe
dec
dec
jg
sbb
addb
mov
push
sbbb
pop
pop
sbb
dec
cmp
scas
iret
test
leave
xor
scas
loopne
or
lahf
lods
test
jg
aam
adc
mov
out
data16
ret
lahf
add
cmp
in
mov
jge
arpl
jbe
mov
pushf
pop
mov
cmp
mov
lods
mov
out
fisubs
sub
sub
jo
lods
std
adc
iret
jle
pop
dec
push
scas
shll
out
mov
test
mov
inc
cmp
mov
add
fsubs
push
lea
mov
movsl
add
mov
idivb
dec
in
mov
fwait
mov
and
mov
pop
cs
sarb
dec
outsb
dec
cs
push
test
repz
mov
xchg
mov
or
pushf
jp
subb
aam
jo
sub
mov
mov
cmpb
pop
inc
cmp
push
jb
rol
out
imul
jp
dec
mov
insl
pop
jle
inc
cmp
movsb
mov
dec
inc
andl
cltd
mov
rcr
cmp
push
cwtl
xchg
ret
test
loope
arpl
cmpsb
aam
lods
dec
add
test
push
mov
mov
push
jns
push
xor
add
aaa
mov
enter
call
cs
adc
daa
in
rol
out
fistpll
cmp
lahf
xchg
add
fildll
data16
rcrb
lock
clc
aam
aas
inc
insb
icebp
data16
imull
jbe
arpl
loope
mov
arpl
push
imull
xchg
cltd
mov
int3
jmp
xor
aas
es
mov
or
scas
test
mov
xchg
popf
add
negl
out
mov
ficoms
in
sub
int3
aas
cli
negl
xchg
mov
imul
cmp
jns
outsb
rcll
test
xor
mov
dec
pop
mov
lock
lods
rcll
push
mov
mov
inc
jno
mov
xchg
ret
cli
lea
mov
inc
stos
js
mov
dec
fisubrs
fcomp
sbb
push
das
sar
insb
mov
cmpsb
jmp
cmc
aad
push
or
and
xchg
cmp
adc
adc
loope
dec
in
mov
aas
xor
ret
jno
shl
push
push
sub
addl
subl
inc
mov
jl
enter
mov
cmp
jecxz
and
ret
movsl
xor
mov
ret
xor
dec
and
sub
push
or
mov
mov
jae
inc
or
pushf
sub
ja
push
jbe
jmp
xor
adc
push
cmp
cld
imul
adc
adc
cld
aad
jo
sbb
pop
cwtl
mov
jp
add
xor
aam
and
dec
les
movntps
popw
xchg
or
aam
call
cmp
adc
xchg
mov
adc
aad
push
mov
jns
mov
incl
inc
inc
pusha
jne
xchg
xlat
lds
mov
mov
xchg
pop
sbb
inc
iret
daa
fldz
add
push
jnp
sbb
jle
dec
into
movsb
in
ret
pop
inc
cltd
jne
ja
out
jle,pt
daa
addr16
jb
push
xor
popf
out
fistps
outsb
jbe
inc
xchg
sub
hlt
mov
adc
ss
push
push
jle
cmovns
repnz
das
je
dec
test
test
mov
jnp
rorb
pop
sub
jge
push
jbe
mov
or
lret
push
cmp
pop
pop
dec
cs
sbb
cmp
xchg
push
xchg
mov
sub
or
mov
and
xor
ds
cmp
fs
movsl
dec
stos
mov
sbb
aas
inc
loope
xchg
mov
inc
aas
mov
xchg
mov
arpl
mov
pop
jnp
or
fidivrs
fmuls
daa
dec
clc
xchg
pusha
mov
xchg
jp
cmp
adc
int
test
xlat
mov
movsl
add
lea
mov
sbbl
ret
mov
adc
xchg
ljmp
and
pop
mov
mov
ds
push
lods
pop
or
xor
ljmp
movsl
sti
inc
push
sub
cmp
cmpsl
pop
dec
pop
mov
rorl
sbb
inc
arpl
call
pop
mov
xlat
cs
shll
or
rorb
mov
out
lret
das
icebp
pop
jp
mov
fs
shr
jo
adc
mov
dec
in
mov
es
ja
or
notb
push
fadd
flds
xchg
sub
cmp
hlt
lret
adc
sbb
fldcw
fdivrp
scas
mov
sub
or
insb
push
cmp
adc
pop
jnp
ja
sar
rclb
push
das
cmp
sbbl
sub
dec
sub
loopne
sub
inc
mov
mov
roll
or
add
jmp
cwtl
pop
sub
pop
scas
pusha
or
push
addr16
xchg
adc
shlb
test
imul
int
inc
std
jns
aas
mov
add
inc
mov
lret
cmpsb
arpl
fstpt
js
dec
sbb
cmp
mov
out
movsb
dec
adc
sub
push
movsl
jmp
jmp
leave
outsb
cld
xchg
adc
xchg
adc
in
cwtl
xchg
cmp
or
dec
fnstenv
insb
or
ret
mov
xor
xchg
jmp
xchg
mov
cmp
jne
scas
nop
or
or
in
xchg
pop
test
xor
and
lods
xchg
loope
cmpsb
lods
xlat
stos
xor
pushf
stos
jb
popf
imul
movsl
loope
jecxz
call
sbb
jne
adc
mov
mov
mov
xor
in
loope
int
xchg
push
pop
mov
aaa
jecxz
mov
out
sub
jae
mov
aaa
imul
mov
push
fs
xlat
pop
mov
clc
xchg
test
add
and
pop
iret
add
jle
inc
push
or
dec
ss
hlt
imul
outsl
inc
jnp
iret
ds
mov
scas
push
dec
std
popa
pop
sbb
adc
adc
jmp
push
jae
and
sahf
dec
inc
push
dec
iret
pop
stos
ja
rorb
mov
inc
and
sahf
lret
insl
mov
xorl
xor
dec
test
xchg
js
insb
sahf
mov
pop
ds
jae
je
call
or
movl
mov
scas
ljmp
fiaddl
lods
cs
pop
ret
iret
sub
lods
sub
pop
shll
pop
xchg
popf
sub
rolb
outsl
jo
xlat
outsb
pop
mov
aas
and
cmp
pop
add
adc
aad
sub
xchg
push
mov
add
mov
push
adc
loopne
mov
popf
cwtl
aaa
push
xchg
movsl
fadd
mov
ficomps
push
les
ss
mov
jbe
sbb
imul
loop
add
or
pop
or
sarl
and
xchg
xor
pop
dec
and
mov
shrb
xchg
jg
scas
int
mov
lea
push
mov
inc
ljmp
mov
jl
out
inc
push
das
push
into
or
fadd
out
xlat
lds
push
mov
xchg
jno
adcb
jle
xcrypt-ctr
cmpsl
sbb
and
cwtl
and
jg
lods
pop
jmp
jp
insl
shll
dec
daa
xchg
mov
adc
rep
xor
add
pop
push
push
push
dec
and
mov
jl
sub
push
push
adc
shr
in
ds
xchg
je
rorl
bound
fxch
sbb
fmuls
insb
imul
xchg
fcompl
les
dec
add
pusha
stc
add
jg
inc
cwtl
pop
shr
cwtl
pop
add
pop
sbb
xlat
xchg
sub
or
in
into
jg
cmp
and
fidivrl
mov
push
add
inc
lods
fscale
and
or
int
movsb
iret
arpl
lods
fiadds
push
and
lods
ret
pop
push
dec
lahf
push
add
adc
mov
jg
push
hlt
mov
sbb
test
cltd
mov
cmpsb
das
pop
cmp
std
jge
mov
sub
sbb
mov
xlat
out
or
sbb
mov
gs
sub
aaa
inc
test
int3
out
pop
rcrl
call
sub
mov
cmc
push
fs
mov
jmp
inc
loope
adcb
cwtl
in
cli
out
ja
mov
xor
or
xor
adc
jno
fadd
cmp
sub
xlat
xor
jp
movsl
rcl
lea
stos
int
leave
mov
paddsw
or
mov
and
sbb
xor
inc
jge
mov
or
cld
inc
lock
leave
rclb
lret
pop
cmp
aaa
mov
mov
push
jnp
aad
rcrb
movsl
test
inc
adc
aad
inc
icebp
xor
orl
mov
ljmp
jae
push
in
cmpsl
sub
imul
fsubr
jne
inc
js
mov
movb
pop
mov
pop
loopne
mull
push
je
inc
inc
movsl
test
call
mov
inc
addr16
mov
test
cmpsb
stos
dec
orl
jo
ljmp
xor
mov
out
bound
pop
xchg
xchg
push
lcall
push
lret
mov
inc
dec
ret
jo
push
scas
popf
iret
push
xlat
mov
cmpsb
icebp
sbb
xor
mov
cmpsb
or
sarl
imul
and
fcompl
pop
popw
pop
xchg
shll
outsb
add
and
pushf
push
and
scas
fcmovu
lods
mov
inc
rcll
andb
add
ljmp
sbb
jge
dec
inc
aaa
lcall
in
in
aad
inc
js
cmpl
sbb
cld
lcall
sbb
movl
pop
xchg
push
ret
lret
xor
jge,pn
fs
cld
mov
inc
pop
sarl
jnp
test
push
mov
cmp
imul
rorl
rcrb
aad
pop
pop
jge
fs
ljmp
fnstcw
fadds
mov
lock
scas
pushf
push
and
arpl
xor
fdivrs
push
jmp
out
aaa
test
and
test
jecxz
das
aam
sarb
lods
in
popa
push
jecxz
or
lcall
dec
xor
cmp
setns
in
add
jg
add
pop
push
pop
pop
jo
xor
stos
stos
mov
xor
in
fsub
dec
shll
icebp
push
mov
int
loope
or
or
fwait
cmp
inc
popa
popa
jne
mov
std
inc
lods
inc
test
fildll
lock
push
mov
roll
push
cltd
lcall
sbb
enter
cld
leave
pop
push
in
test
jo
jbe
pop
and
iret
mov
out
jno
xchg
test
sti
das
popa
jb
push
mov
movsl
addr16
enter
sbb
adc
adc
imul
add
icebp
cs
mov
testb
dec
arpl
cmp
mov
repnz
and
pop
sbb
adc
jnp
aas
jns
or
pop
in
cmc
out
mov
add
neg
out
adc
mov
and
inc
cmpsb
sarl
shll
les
and
jmp
push
and
jnp
ljmp
ret
aaa
cwtl
and
adc
mov
jecxz
push
pop
jl,pt
ret
test
es
adc
daa
shl
adc
pushf
movsl
out
mov
lahf
and
fbstp
out
ret
and
xor
dec
lahf
loope
pusha
cmpsb
insb
dec
leave
mov
in
add
mov
jnp
cmp
cmc
sti
pop
imul
adc
in
aad
les
mov
lods
dec
or
xor
les
mov
in
lea
xchg
cmc
and
lret
daa
and
pop
cmpsb
out
xlat
insl
repnz
xchg
sbb
mov
pusha
in
add
mov
imul
inc
mov
or
xchg
lock
add
lods
movsb
mov
scas
xchg
jg
cmp
xchg
cmpl
or
mov
dec
lcall
bound
xor
mov
mov
popa
cs
ds
loop
dec
and
mov
hlt
mov
mov
xlat
and
dec
fsts
daa
mov
cld
cs
es
sti
arpl
push
dec
sub
mov
jns
hlt
jecxz
jmp
in
jle
mov
sbb
or
jnp
push
leave
pop
orb
xor
push
movsl
sbb
xor
test
mov
pop
dec
rcrb
or
jbe,pn
adc
pop
ljmp
dec
ret
repnz
scas
icebp
sub
and
mov
sti
in
xchg
popa
rorb
cli
and
movsl
lret
bound
daa
pop
jns
out
push
fsts
les
or
inc
ljmp
das
or
jp
pop
shl
gs
cmp
aas
sahf
adc
push
mov
in
out
lcall
pop
xchg
fsubr
inc
cld
or
nop
adc
sbb
lahf
xor
popa
mov
das
std
cmp
xorb
in
shlb
decl
xlat
or
mov
pop
lods
lahf
cld
adc
mov
mov
add
xchg
jne
nop
cmpsb
rclb
or
sbb
rcl
xor
xchg
pop
movups
cmpsb
out
pop
mov
sub
dec
xchg
push
es
mov
pop
es
xchg
pop
dec
add
ds
jecxz
fsubrs
js
cli
jmp
and
test
daa
out
ficoml
jbe
or
jl
push
cmpsl
leave
mov
movsb
cmp
xchg
lret
or
and
lret
jno
xchg
lock
sbb
xor
in
int
cli
xor
xchg
pop
lcall
stos
int
mov
adc
push
push
sahf
push
out
inc
and
pop
sub
ds
mov
lock
mov
jl
loopne
mov
sub
fdivl
mov
jo
movsl
xchg
push
repz
orl
lea
sbb
mov
sti
std
imul
ljmp
popf
add
sub
aas
fildll
pusha
mov
push
xor
iret
mov
aad
ja
dec
in
xchg
xchg
lahf
inc
lock
aad
fdivrs
aaa
jmp
jle
cmp
ret
xor
add
pop
sbb
push
scas
sub
out
jb
in
popa
pop
dec
lods
fisttpl
out
popf
f2xm1
andb
fstpl
mov
or
dec
movsl
and
cmp
mov
aaa
inc
ja
inc
int
jb
xchg
and
sub
cmc
insb
nop
push
clc
jg
leave
dec
push
cmp
xor
xor
cs
inc
push
lock
ljmp
lods
mov
clc
fcoms
mov
sub
cld
pop
inc
sbb
popa
mov
mov
ret
mov
jns
inc
mov
int3
sbb
out
movl
push
jge
mov
ret
popa
push
pop
sub
jnp
mov
jae
and
push
sbb
leave
or
xor
inc
mov
jae
scas
mov
adc
testl
sarl
add
xor
loop
sub
mov
je
out
in
das
icebp
cmc
orl
xlat
fsubrl
ret
cmpb
lods
fdivrs
ljmp
push
mov
mov
inc
adcl
pop
cmp
ss
sbb
inc
jmp
fdivs
jle
sub
mov
das
inc
pop
mov
es
sbb
pop
lock
jo
cs
or
cmpl
insb
enter
mov
orb
test
repz
dec
fnstcw
shll
jno
pop
jne
inc
scas
stos
pop
fcoms
jg
and
or
inc
cwtl
mov
sbb
sub
and
jmp
push
and
ljmp
clc
js
sub
sbb
xchg
cmp
sub
sahf
mov
mov
movsb
mov
fistps
jns
mov
push
mov
add
lock
gs
adc
pop
std
sbb
jecxz
push
sub
sbb
pop
jb
pop
inc
lock
push
repnz
movsb
movsl
pop
inc
cmp
adc
add
loopne
inc
cmp
lret
fwait
mov
imull
adc
outsl
rolb
ret
xor
pop
sbb
mov
nop
jl
inc
jnp
sbb
mov
iret
xor
mov
pop
popl
sub
in
dec
xor
test
jl
pop
roll
dec
jae
in
push
add
mov
dec
test
add
sub
es
push
xor
out
lds
mov
jne
movsb
mov
adc
sar
popf
mov
shll
or
inc
insb
xchg
pop
mov
aaa
pop
mov
xlat
or
cld
mov
ss
sbb
and
push
cmp
or
or
mov
cmp
lea
aas
or
inc
push
sti
mov
dec
iret
jmp
xchg
call
sub
push
int3
test
scas
xchg
adc
sub
out
divl
jge
pop
push
sbb
js
and
cmp
jb
popl
mov
insl
sub
out
or
lcall
pop
inc
clc
add
jge
test
sahf
xchg
cmc
movsb
scas
pop
push
jnp
xlat
nop
mov
js
pop
mov
enter
and
addb
sub
mov
inc
pop
xchg
fisttps
push
sbb
loopne
test
rcrb
int3
bound
rorl
mov
xor
dec
push
arpl
loope
movb
xchg
sbb
jno
in
out
fcompl
nop
or
push
and
andb
adc
subl
loopne
dec
push
push
add
mov
lock
lahf
inc
inc
test
lret
xchg
clc
cmpsb
xlat
shld
in
inc
adc
or
adc
xchg
jne
faddp
les
das
call
sub
mov
stos
push
jecxz
xchg
mov
fs
cli
fimuls
jle
pop
sub
push
push
mov
mov
sbb
and
sbb
mov
push
data16
xor
dec
push
aas
movsb
add
xor
cwtl
push
mov
push
ret
fiadds
lods
dec
push
jno
ret
out
fsubrs
nop
adc
sahf
jle
stc
mov
fstpt
fdiv
sub
popa
mov
xchg
and
inc
icebp
repz
inc
jg
mov
push
orb
js
xor
and
jbe
sbbb
lods
xchg
push
inc
arpl
add
sbb
pop
mov
mov
cld
sbb
push
mov
fistl
mov
ja
or
shrb
fcoms
jmp
int
insb
mov
cmc
push
add
inc
mov
lahf
and
pop
stc
into
aad
jns
mov
cmp
inc
inc
cs
jmp
inc
xor
es
gs
bound
sbb
xor
or
adc
push
cmp
je
push
dec
movsb
push
pusha
ss
sahf
jbe
jns
loop
jno
xor
sbb
popa
pop
jp
jae
jge
adc
mov
jp
pop
fdivl
and
data16
dec
repnz
les
dec
xlat
lods
pop
sbb
jecxz,pt
sbb
pop
adc
aaa
ror
adc
addb
sub
mov
or
dec
adc
jnp
push
dec
int3
repz
dec
push
inc
loopne
add
iret
dec
mov
push
add
dec
in
inc
inc
pop
sub
xor
xor
es
aad
push
cmp
mov
mov
loopne
hlt
fs
scas
xchg
inc
xchg
leave
bound
insb
clc
lds
xor
sub
divb
push
adc
fwait
out
push
push
adc
mov
sbb
jle
jle
dec
or
adc
cmp
push
lret
out
dec
push
nop
ljmp
ret
fstps
cltd
and
push
imul
xchg
int
dec
jecxz
push
pop
lds
add
dec
fsubs
mov
xlat
sti
imul
adc
lods
jg
add
fisubs
adc
test
sahf
cmpl
ret
orl
jb
jecxz
inc
loopne
jge
cmp
rcrb
push
push
xor
pop
ret
push
mov
out
xor
mov
lods
pop
in
push
jl
pop
fnstsw
vorps
or
or
aam
test
fsubrs
mov
xchg
mov
sub
in
lea
in
ret
and
adc
mov
test
and
pop
add
stos
aam
push
push
jo
xor
push
aam
popf
mov
scas
add
mov
fsubs
je
jno
std
mov
ja
std
into
and
mov
jno
test
pop
sbb
inc
dec
sbb
insb
inc
sbb
int
sbb
xchg
jle
fwait
lock
mov
lods
in
les
xchg
sbb
stc
and
or
dec
xor
fisttps
test
xlat
pop
push
push
mov
cli
and
jae
mov
inc
add
pop
and
sbb
pop
adc
das
pop
cmpsb
in
adc
outsb
push
dec
test
es
sbb
or
scas
popa
adc
mov
es
jp
push
arpl
test
xor
sbb
cmpsb
mov
jg
push
sbb
cltd
testb
bound
fwait
in
lods
loop
add
lods
int
pop
sbb
mov
sub
arpl
pop
jnp
pusha
mov
mull
cmp
outsl
sbb
arpl
mov
leave
imul
push
pop
inc
mov
mov
loop
push
xchg
pop
jl
sub
mov
lcall
mov
jne
sbb
push
pop
pop
mov
pop
push
jp
imul
cmp
pop
out
sub
xor
mov
mov
mov
andl
xor
cs
dec
ret
in
arpl
aad
mov
or
jecxz
or
inc
xor
iret
xchg
movsd
cld
nop
pop
mov
cmp
sub
push
jne
cli
cmp
sahf
popa
or
lahf
xchg
into
dec
int3
lret
in
push
lret
jg
shll
jno
and
lods
bound
inc
out
into
gs
adc
les
jnp
push
pop
mov
pusha
arpl
mov
ja
mov
mov
inc
inc
pop
in
xchg
ss
mov
add
outsb
jl
xchg
leave
dec
mov
jge
cwtl
into
sub
pop
push
ds
pop
scas
data16
inc
adc
cvtps2pi
mov
add
push
push
xor
clc
ret
push
push
push
adc
xor
cli
mov
mov
inc
mov
mov
jle
lods
xchg
ja
fisubrl
jp
stos
dec
in
ja
jecxz
mov
ljmp
mov
adc
test
in
ret
clc
and
mov
sbb
push
mov
in
jae
mov
xchg
cmp
mov
jg
outsl
pop
shr
out
pop
jns
in
out
xorb
xchg
add
out
cmp
lahf
inc
mov
mov
mov
pop
inc
xor
sbb
in
or
inc
vxorps
cmp
mov
test
push
stc
or
dec
xchg
out
add
insb
shl
xchg
test
test
and
push
and
cmpb
popa
ds
adc
dec
lea
je
loopne
and
das
cwtl
movsl
aaa
dec
xorb
pop
and
inc
in
daa
andl
inc
and
xor
cmpb
aad
and
mov
gs
lret
out
outsl
inc
or
divl
mov
aad
js
mov
jnp
add
inc
jnp
xor
aad
out
std
les
mov
test
je
jo
int3
scas
mov
adc
cld
mov
add
mov
stos
mov
in
ss
jne
repz
sub
lret
repnz
adc
ret
dec
inc
out
lods
stc
push
iret
add
mov
jge
clc
push
mov
fistps
clc
sub
in
aad
pop
adc
jo
orl
inc
or
popa
mov
cmpsb
mov
push
loopne
hlt
push
ja
sub
out
mov
imul
dec
add
xlat
lock
cli
sbb
pop
in
pop
mov
movsb
movl
lret
push
mov
mov
cmp
aaa
shll
pop
in
add
mov
pop
add
jg
push
mov
mov
pushf
jp
sti
inc
add
loope
ficomps
mov
mov
shlb
loope
shl
scas
mov
jnp
push
xchg
jo
outsb
cwtl
ret
idivb
pop
test
and
pop
loope
cmp
imul
into
mov
inc
popf
popl
jle
cltd
sub
das
xor
xchg
inc
stos
inc
rcll
or
in
mov
js
sti
add
call
data16
mov
xchg
pop
gs
mov
fs
xchg
jle
lahf
cmp
pusha
sti
loopne
fcmovb
push
mov
arpl
jb
adc
cmpsl
mov
cwtl
or
dec
pop
int
lds
sub
fucom
rcr
leave
insl
inc
out
xor
adc
mov
xchg
jl
std
movsl
mov
dec
in
jmp
sbb
test
pop
rcrb
mov
pop
test
ror
dec
hlt
jne
fsts
pop
sbb
cmpsb
jp,pt
sub
jp
rcrl
mov
sbb
stos
and
xor
movsb
fwait
out
add
cmp
test
xchg
sub
add
cmp
sub
bound
inc
push
and
popa
daa
push
shrb
mov
cmpsl
and
xor
gs
nop
adc
lret
dec
cltd
lret
lcall
das
sbb
and
lret
icebp
cmc
ret
pop
adc
pop
repz
cwtl
outsl
cmp
jb
sub
and
and
and
out
or
jle
pop
outsb
arpl
add
loop
sub
xchg
mov
cmp
divl
dec
mov
jg
and
fcoms
lock
clc
rol
inc
inc
rorb
jge
shrl
rolb
jo
inc
adc
xchg
push
xchg
sub
inc
inc
push
out
addb
and
inc
lods
pop
push
adc
lea
xor
push
xor
xor
test
int
jle
loop
mov
dec
inc
sbb
js
pop
std
fs
cld
adc
or
adc
push
es
addr16
xchg
mov
mov
push
daa
sbbl
adc
lret
jae
loop
or
mov
dec
aad
lcall
or
arpl
fisttps
fistpl
out
xor
test
xchg
add
in
cltd
pop
lea
fisttpl
pop
jecxz
data16
jne
repnz
es
call
incb
test
pop
pop
int3
adc
xorl
jmp
int
movsb
ja
mov
adc
xlat
popf
push
dec
fiadds
imul
loope
mov
jns
cs
jno
dec
push
bound
push
pop
test
clc
icebp
push
xor
das
ret
sbb
popa
iret
cmp
les
push
or
inc
pushf
popa
mov
bound
and
xlat
rorb
js
jne
flds
cmpsb
mov
or
push
push
mov
ror
sub
xor
out
xchg
mov
and
and
mov
lea
xlat
cmp
dec
cmp
mov
pop
mov
icebp
xchg
jo
mov
movsl
sbb
sti
dec
and
js
test
insl
pop
rcl
jbe
mov
add
inc
hlt
cld
xchg
jge
dec
das
movb
in
imul
lahf
xchg
mov
ja
mov
add
mov
push
push
push
jg
push
ret
int
loopne
xchg
mov
data16
push
scas
fdivrs
jge
out
clc
jp
fisubs
mov
jb
orl
les
sahf
out
jbe,pt
in
movsb
ljmp
dec
es
push
add
cs
loope
sarl
sub
ss
in
sbb
xchg
mov
sub
pop
es
inc
jle
sub
jno
mov
push
out
enter
lahf
pusha
mov
dec
xchg
mov
dec
push
jne
out
push
les
aas
adc
push
jne
push
jmp
inc
cmc
addr16
ret
mov
jo
mov
lods
dec
popf
sbb
imul
call
push
xor
fcompl
sti
ss
or
push
cmp
cltd
gs
cmp
adc
mov
jp
popf
aas
mov
sub
insl
mov
call
call
xchg
sahf
sbbb
out
inc
lods
pop
cmpsb
fiadds
icebp
dec
xlat
int3
adc
fmulp
mulb
dec
sar
mov
or
aas
mov
repnz
daa
scas
movsb
out
push
in
or
pop
jb
mov
fcompl
cmp
mov
cmp
cli
sbb
fcomp
cmc
outsl
cmp
cld
pushf
icebp
mov
cwtl
pop
ficomps
add
cmp
movsb
out
loop
push
sbb
hlt
je
lods
jecxz
jnp
pextrw
cld
int
fsubp
in
mov
mov
sbb
push
ret
or
addr16
jmp
arpl
iret
scas
dec
mov
fldenv
mov
mov
arpl
add
add
in
rcrl
cmp
push
pop
xlat
add
xor
push
and
mov
sbb
addl
sub
push
ja
mov
call
dec
pop
leave
scas
sub
mov
push
rcr
and
popf
cld
adc
pop
cmp
adc
incb
xor
loop
std
lret
loop
addr16
cmp
fdivs
popa
lods
dec
cmpsb
sbb
and
pop
and
push
sbb
leave
xchg
adcb
shrb
push
into
xchg
add
sarb
sbb
inc
mov
xor
mov
cmp
imul
std
stc
ret
imul
out
loopne
js
adc
shll
adc
pop
xor
mov
popl
inc
mov
add
mov
scas
push
jecxz
icebp
push
and
sbb
adc
jle
mov
scas
push
test
sbb
xor
sti
ret
lret
jo
cmpsb
out
stc
add
iret
fucomip
xor
imul
and
out
mov
insb
lds
add
lcall
paddb
faddl
je
cmp
mov
in
lock
fistpll
add
inc
scas
ficompl
fst
hlt
and
popl
data16
lcall
xchg
or
test
lret
pushl
sub
je
in
push
and
mov
jp
sub
mov
or
stos
push
test
cld
dec
out
or
cmc
and
push
cmp
mov
mov
dec
inc
jmp
pop
clc
in
xchg
jb
lcall
push
ja
insl
jle
outsb
repnz
dec
mov
icebp
dec
cli
adc
pop
dec
or
jp
sub
cmc
push
xchg
fidivl
rcr
push
and
pop
xchg
cld
mov
aaa
sub
lods
dec
call
icebp
pop
rclb
sbbl
movsb
mov
outsl
jg
pushf
cmp
ja
xchg
mov
xor
mov
mov
incl
push
dec
push
outsb
aad
jns
inc
sarb
fisubs
movsl
outsl
lods
cli
test
jns
xor
pop
and
stc
and
sbb
or
aam
sbb
sti
aas
outsl
and
mov
mov
fs
mov
xchg
or
inc
mov
nop
test
icebp
negb
das
lock
xchg
out
mov
aam
hlt
je
loope
es
out
lods
addr16
push
shll
fcmovnb
dec
flds
aam
adc
mov
repnz
pop
xor
imul
mov
lahf
jl
jecxz
ret
cmc
stos
sub
jns
enter
push
sbb
fldenv
outsl
cltd
je
push
test
decl
mov
dec
fwait
push
mov
dec
push
cmpsb
shrb
clc
jmp
inc
test
adc
cmp
push
imul
push
jmp
pop
jge
ret
out
int
push
pushl
xor
and
insl
xorl
mov
pop
xor
repnz
pop
pop
outsb
xchg
fwait
je
test
das
push
xchg
in
push
pop
xlat
fcoms
sub
inc
sbb
addl
movsl
mov
out
or
pusha
push
add
mov
ret
lcall
insl
aam
es
jle
out
sbb
fisubs
stos
stc
inc
pop
add
push
xchg
push
outsb
inc
add
pop
push
adc
cmpsl
imul
lds
in
lret
push
lahf
mov
push
in
dec
push
sub
loope
xor
add
out
cmp
push
repz
lods
pushf
jmp
lret
lret
rcll
daa
push
mov
into
sbb
mov
xchg
mov
cmp
cld
mov
sub
and
lea
adc
iret
idivb
lahf
xor
xchg
pop
xchg
pop
leave
mov
push
cmpsb
sub
scas
scas
je
in
inc
and
filds
mov
aam
leave
cmpsl
cmpsl
pop
bound
pop
dec
sub
bound
add
mov
jge
idivb
ret
stos
adc
mov
fdivrl
sbb
adc
pop
jecxz
into
sti
lods
dec
push
aas
repnz
aam
push
jo
cmp
int3
or
hlt
fnstcw
adc
and
inc
in
stos
or
out
stos
pop
or
dec
aad
in
push
jb
cmpsl
pop
sbb
gs
repz
ficomps
xchg
aam
xor
fsubl
into
rcr
mov
pop
cmp
movsl
mov
xchg
andb
mov
mov
and
ret
pop
inc
dec
adc
push
pusha
in
mov
mov
sub
cs
arpl
nop
jae
cmp
mov
dec
lcall
mov
and
aaa
and
xchg
leave
jb
pushl
cmp
sar
lock
sbb
dec
test
ds
mov
cmp
mov
cmpsl
adc
jne
inc
loop
addb
ljmp
sbb
leave
imul
insb
jbe
mov
xor
xor
add
sti
test
ja
adc
cs
add
dec
pop
outsb
inc
push
mov
cmp
jg
cmpsb
call
pop
sbb
jae
xor
jo
rorl
mull
arpl
mov
aaa
daa
stos
aam
push
pop
stos
push
out
shll
xor
nop
sbb
inc
scas
cmp
popf
xor
out
fistl
mov
and
jae
mov
repz
pop
imul
push
popf
fldt
testl
clc
jp
mov
jnp
mov
das
sbb
out
or
pop
inc
addr16
dec
lea
xchg
push
test
in
jno
pop
lods
fistl
out
sbb
filds
and
mov
rcrl
sbb
push
jns
push
xchg
dec
or
pop
pop
xor
jge
mov
mov
push
push
icebp
hlt
jle
pop
cld
mov
nop
xchg
addr16
test
and
and
lea
push
lods
popa
mov
int
jb
ret
mov
lret
call
push
and
loop
add
rcl
shlb
cmp
xor
in
cli
movl
xchg
dec
loop
add
sbb
imul
std
arpl
outsb
outsb
add
add
mov
movsb
inc
inc
ret
mov
jle
sub
xchg
jae
sti
out
xor
shrl
cwtl
mov
jnp
rorb
stc
and
arpl
or
loope
shlb
xorl
or
xlat
push
sarl
adc
mov
nop
cmp
push
dec
sbb
push
add
xchg
mov
pushf
ja
sbb
jb
and
scas
mov
jge
and
leave
cmp
ror
inc
adc
xorl
pop
outsl
insb
mov
fcoml
sbb
add
sbb
fiadds
movsb
ret
fxch
ss
mov
pop
xchg
sbb
and
cmp
adc
jl
jg
ja
xchg
jecxz
std
sub
loope
xor
iret
pusha
lods
jns
cltd
push
sti
cmp
out
out
ss
mov
push
popa
fldenv
and
dec
js
or
push
lods
pop
in
sub
frstor
imul
push
ss
stc
leave
sub
jmp
out
cli
int
pop
mov
arpl
cmpsl
xlat
outsl
lods
sbb
mov
push
insl
cmp
addr16
dec
dec
jo
imul
xor
filds
cmp
xchg
pop
test
lcall
inc
test
mov
je
pop
std
lret
in
sub
int
xor
adc
cmp
fs
sub
pop
xchg
icebp
in
sbb
fimuls
fiadds
cmpsl
sub
fwait
lahf
inc
call
add
adc
xchg
lahf
xlat
lods
enter
into
adc
xchg
pop
sti
push
push
shlb
or
es
in
xchg
or
ficoms
sub
cmp
arpl
add
sub
push
jno
lods
inc
or
sub
cmp
bound
aaa
add
mov
mov
jmp
std
mov
push
setne
cmp
push
rcrl
xor
insb
insw
cmp
inc
fs
cmc
sbb
push
inc
dec
shr
or
xor
cmp
lcall
fwait
insl
insb
test
dec
jb
mov
jecxz
cmp
notb
pop
enter
loope
jbe
mov
je
icebp
xchg
jl
dec
mov
call
in
mov
xchg
xor
mov
or
jne
les
sub
outsl
mov
sub
int
cld
add
dec
icebp
scas
and
out
fldl
daa
pop
and
fimull
das
lods
imul
inc
out
add
ds
pop
dec
push
js
sub
sub
loop
sbb
out
jae
adc
fs
out
cmp
jne
daa
xor
mov
mov
mov
or
add
fldl
fmull
int
jmp
xchg
out
sbb
testb
popa
pop
add
mov
cmp
xchg
xchg
aaa
inc
loope
mov
inc
xor
sub
rorl
imull
sbb
mov
movsl
add
inc
cltd
insb
lcall
jl
and
pop
in
out
sub
pop
loopne
movsl
insl
add
push
pop
lret
fs
loope
dec
add
xlat
add
clc
adc
and
inc
jne
push
lret
push
push
and
xchg
sbb
mov
jnp
inc
xor
jae
inc
test
mov
popf
mov
fwait
movsl
aam
sbb
sub
fisubrl
lock
repnz
das
rcr
jg
mov
inc
xchg
jae
clc
popf
xorl
pop
data16
sbb
mov
les
xchg
inc
push
fmull
pop
xor
rorb
cmp
fbstp
call
jl
xchg
pop
sub
ljmp
mov
jle
test
mov
inc
dec
insb
mov
xchg
push
jge
pop
add
xor
mov
mov
sbb
xor
in
push
or
cmp
std
cmp
out
push
mov
jl
ret
lock
loopne
sub
std
imul
mov
int3
imul
pushf
or
cwtl
js
sbb
sbb
cmpsl
into
ss
xchg
stos
mov
cwtl
pop
add
imul
xchg
and
std
sbb
mov
push
aas
je
cmp
mov
pusha
jb
dec
mov
fs
push
loop
cmc
movsb
pop
dec
cmp
mov
bound
mov
out
inc
fdecstp
les
idivb
jp
cltd
pop
and
rcll
jns
mov
movsb
push
push
mov
mov
xor
mov
fwait
in
xchg
mov
gs
push
stos
cmpsl
cmp
mov
mov
mov
inc
test
mov
es
mov
cmp
pop
push
mov
testb
fimull
adc
rorl
cmp
test
cmpsb
imul
and
xchg
imul
jnp
aas
mov
cmc
fistpl
rcrl
lds
pop
fwait
sbb
fwait
add
xlat
mov
fcomps
movsl
ds
out
jl
xchg
sbb
cwtl
or
sahf
movsb
imul
pop
es
insb
int
inc
sub
or
les
nop
fnsave
cmp
aas
cmp
dec
scas
ret
or
pop
push
sahf
xchg
mov
jmp
pop
call
pop
dec
ja
lods
in
mov
loope
push
xchg
adc
xor
mov
ss
jl
iret
mov
add
cmp
mov
fnclex
inc
push
cmp
arpl
stc
inc
xor
popf
xor
xchg
call
arpl
lret
xchg
dec
cli
add
cld
xchg
jbe
fdivrs
mov
adc
js
and
add
xor
xchg
test
xchg
mov
sub
js
in
cmp
pushf
sbb
ds
xor
ss
and
add
repnz
aad
and
jne
pusha
insb
les
lods
add
jmp
xchg
pop
push
or
sbbl
xchg
xlat
mov
stos
cmpsl
lock
ss
fs
cli
cs
inc
sub
shl
adc
outsb
xor
dec
jne
insb
pop
jge
shll
iret
sahf
or
pop
dec
jbe
jle
cmp
fldcw
or
jl
lods
les
loopne
add
inc
test
mov
xchg
dec
mov
repnz
xor
fs
add
and
out
repz
jnp
mov
sbb
shl
jns
lret
mov
xor
cmp
cwtl
test
pop
nop
notl
stc
cmpsb
ja
push
add
fcomps
mov
and
shlb
arpl
jmp
mov
nop
or
and
push
adc
dec
xchg
cs
mov
stc
lds
popf
sbb
flds
outsb
enter
jecxz
mov
sbb
push
movsb
call
or
dec
add
popa
sbb
fisubs
ss
jnp
lret
adc
frstor
mov
mov
ret
pop
dec
mov
pop
push
inc
rorl
jb
fucomip
into
adc
cmpsl
sahf
fistpll
out
pop
fcmovu
daa
xchg
test
mov
dec
and
imul
inc
rcrl
mov
xchg
cld
and
outsb
ja
sbbb
or
jl,pn
adc
ss
fwait
xorl
xlat
xlat
add
jae
fiadds
pusha
cmc
scas
push
stos
not
bound
inc
es
mov
hlt
mov
test
popf
xor
lret
movsl
mov
out
sub
inc
or
imul
into
jbe
xor
repnz
ljmp
xor
pop
in
push
les
or
push
mov
mov
push
sbb
sbb
push
adc
jnp
and
pop
gs
mov
mov
xchg
mov
sahf
cmp
inc
sub
jne
insb
jns
loopne
inc
and
mov
insb
push
dec
add
cltd
sti
cmpb
lcall
pop
loopne
rorb
cltd
pop
mov
and
adc
dec
jg
adc
push
cwtl
push
fwait
cld
sahf
fistpl
cli
clts
add
ds
bound
in
in
repnz
xchg
add
shll
pusha
aad
sub
or
mov
or
notb
repz
cmp
jge
or
movsl
cltd
inc
mov
jo
push
lahf
imul
paddusw
scas
fdiv
movups
inc
or
lds
xchg
je
pop
jbe
popa
clc
das
lcall
in
cmp
mov
fucomi
or
out
out
in
mov
dec
enter
call
dec
adc
sahf
int3
add
jns
push
ss
jle
add
fcmovnu
negb
jns
aad
xor
nop
jns
mov
cmpsl
leave
push
push
sub
mov
out
sbb
je
nop
or
sbb
fwait
xchg
lcall
dec
repnz
inc
insl
xchg
pop
notb
sub
mov
cmp
sbb
test
lds
xchg
cs
cmpsl
or
inc
xchg
mov
dec
js
test
pop
mov
nop
xchg
mov
cmpsl
outsl
pop
push
push
mov
pop
inc
push
rcrl
sbb
inc
pop
jmp
in
daa
mov
mov
rol
push
xchg
mov
roll
add
std
je
lahf
mov
cmpsl
fsts
xchg
sbb
test
ret
and
pop
mov
dec
cs
add
ss
push
loopne
or
repz
int
push
sahf
mov
enter
and
mov
pop
inc
add
in
popf
mov
pop
push
dec
push
sub
out
jg
cmp
leave
pop
repnz
test
jecxz
jae
inc
or
inc
xor
fs
adc
pop
mov
decb
jg
std
call
sbb
add
rolb
fisttpll
icebp
and
cld
xchg
add
repnz
lcall
push
cwtl
sbb
sub
outsl
inc
push
pop
int3
cmpsb
cmp
mov
inc
push
sub
adc
pop
sub
dec
les
pop
sbb
pop
xchg
sbb
cmp
lds
lods
pop
bound
mov
loope
inc
ss
xchg
pop
mov
push
into
sub
or
cmp
frstor
call
mov
aad
jg
pop
mov
sarl
dec
clc
es
dec
fadds
cmp
in
sub
cmp
repz
jmp
dec
inc
dec
and
hlt
int3
shrb
sbb
jno
fdivrs
out
test
sub
loope
test
jecxz
adc
aaa
adc
out
leave
or
xchg
adc
jo
push
jno
cwtl
jl
pop
mov
dec
mov
mov
pop
xor
xchg
push
jne
fsubrs
xchg
lods
cli
sti
mov
pop
jnp
pusha
and
int
test
xchg
es
lret
xor
mov
sti
into
fisubl
addr16
leave
fbld
shrl
mov
mov
loopne
insb
mov
iret
lock
jae
mov
cmp
jns
outsb
mov
mov
jbe
dec
scas
and
pop
iret
add
repz
mov
pop
mov
pop
pop
pusha
inc
stos
sub
popa
sub
adc
iret
movsb
pop
adc
mov
jno
dec
and
xchg
pop
mov
rorl
inc
pop
dec
lret
pop
push
jmp
sub
scas
outsb
jbe
shll
sub
pop
jns
out
ljmp
inc
jmp
cmpsl
pusha
ret
ss
and
adc
lcall
addb
mov
jle
cwtl
or
mov
xchg
into
mov
mov
jns
cltd
adc
enter
xor
inc
xchg
js
or
mov
pop
iret
inc
dec
xchg
adc
cmp
icebp
mov
scas
outsl
mov
cld
aas
dec
add
xchg
add
jg
and
sub
jns
pop
out
stos
xchg
outsl
orb
int3
popf
aam
jo
xor
jns
dec
dec
int
mov
lcall
lret
outsb
lret
push
aam
imul
xlat
movsl
mov
into
imul
orl
rcll
lods
push
jo
and
sbb
imul
xchg
lods
out
cmp
xchg
sbb
cmp
jb
add
xor
push
outsl
jbe
add
mov
pusha
es
pop
outsl
push
nop
cmpsl
push
add
ds
or
popf
pushf
dec
iret
fchs
mov
lock
sarl
imul
les
jo
push
ljmp
push
pop
mov
mov
mov
push
sahf
scas
add
xchg
mov
ret
je
push
add
dec
gs
rcll
push
test
mov
jb
sub
push
adc
sub
movsb
mov
fsts
jb
pop
into
not
inc
jne
mov
mov
xchg
leave
dec
lea
test
scas
pusha
and
mov
mov
rclb
stos
iret
sahf
jmp
sbb
data16
shlb
pop
or
fsubrs
loopne
lds
stos
insl
xor
push
dec
pop
jb
insb
cmp
push
ret
js
gs
outsb
xchg
push
pusha
jo
dec
lcall
mov
aaa
cwtl
pop
mov
and
aas
lea
add
cltd
sahf
jmp
out
pop
push
call
iret
and
and
inc
push
sahf
shl
inc
adc
lahf
sbb
xor
je
loope
push
push
loop
sub
cmp
adc
insb
dec
test
dec
push
cmp
iret
push
pop
gs
out
push
outsl
jge
lret
xor
aad
fildll
inc
idivb
js
cmp
push
iret
xchg
jmp
mov
mov
movsl
adcb
lret
and
dec
data16
jb
sub
into
jns
test
jge
mov
iretw
ds
and
js
scas
ja
inc
and
ja
xchg
jmp
push
jp
insl
dec
pushf
dec
inc
dec
fcompl
movsl
inc
push
push
stos
mov
fdivrs
add
mov
arpl
dec
shlb
mov
lock
mov
push
inc
xchg
stos
shrb
lods
jmp
mov
mov
push
xchg
es
add
inc
cld
out
dec
arpl
sub
jno
stos
frstor
jb
push
jp
cmpsl
push
xchg
or
sbbl
sbb
clc
push
sahf
add
pop
jp
pop
scas
jbe
dec
fmuls
pop
sub
test
sbb
add
scas
scas
add
pop
xor
pop
mov
and
mov
rcrl
push
inc
stc
jge
sarl
mov
in
in
clc
imul
mov
and
fnsave
inc
subl
jnp
lret
lock
mov
cmp
loopne
jecxz
mov
out
int3
or
ror
cmc
dec
xor
push
into
sti
xlat
sbb
dec
int
sbb
fnstsw
and
mov
aam
pop
sub
add
lcall
adc
mov
jmp
mov
sub
jo
push
or
cmp
push
xorl
xor
mov
mov
dec
call
mov
cmpsl
add
jne
dec
loopne
test
test
movsb
mov
jo
or
inc
lahf
and
imul
xor
push
lret
mov
mov
test
loopne
pop
lahf
dec
lods
ret
not
or
mov
rcrl
cld
adc
push
jg
sub
les
loope
xchg
xchg
fsubp
jno
push
dec
fsubr
insb
inc
jecxz
dec
ds
hlt
add
inc
pop
and
dec
xchg
mov
cmp
movsl
imul
fldcw
push
inc
clc
mov
arpl
imul
cltd
and
mov
and
outsb
lahf
int3
in
adc
scas
push
dec
lods
divb
or
add
orl
in
enter
xor
and
movl
pop
cs
scas
xchg
or
push
dec
pop
dec
or
lret
jb
push
pop
push
push
leave
sbb
pop
mov
rcrb
inc
push
cmp
mov
push
jb
sbb
fldenv
push
xchg
jnp
jg
mov
and
gs
rcll
aas
sub
int
daa
sbb
js
mov
loop
adc
lds
lock
pop
and
jmp
add
push
xchg
int
std
jnp
or
add
imul
call
rol
cmp
dec
mov
fistpl
xchg
stos
dec
into
mov
mov
dec
aas
xchg
jnp
repz
insl
sub
lcall
jmp
dec
test
sub
fcmovb
es
lds
and
hlt
ret
push
sub
jg
xchg
xchg
adc
fwait
mov
adc
scas
mov
popf
shlb
addl
dec
popf
mov
push
pop
mov
mov
std
push
loopne
pop
xlat
push
and
data16
cltd
leave
dec
or
jmp
jmp
mov
lcall
inc
add
in
lahf
dec
sub
scas
lcall
mov
sbb
dec
mov
push
insl
and
xor
cmp
gs
je
fwait
sbb
fs
mov
fimull
mov
std
pop
xor
vmread
lcall
jnp
pop
sbb
adc
lods
lret
iret
jle
dec
xchg
add
out
pusha
cli
fwait
adc
sbb
add
jle
inc
decl
push
push
test
push
or
test
gs
mov
out
enter
push
clc
or
and
push
popf
mov
pop
dec
inc
xor
stc
xchg
xchg
dec
fwait
or
sarb
js
mov
pusha
das
stc
ljmp
xchg
in
aaa
je
push
shlb
arpl
cli
cwtl
xor
adc
adc
mov
inc
icebp
and
xchg
jo
mov
and
leave
mov
xor
loop
push
lcall
mov
sub
aad
clc
test
daa
or
cld
hlt
test
test
pop
movsb
cmp
aaa
daa
jne
cmpsl
cmp
push
sub
jg
sarb
lahf
jg
inc
ret
push
nop
jbe
push
adc
out
push
or
inc
jle
or
or
nop
enter
mov
mulb
jno
xchg
in
push
push
fisttps
loop
pop
jmp
push
add
in
xor
xchg
mov
and
jno
inc
ds
faddp
cs
pop
push
sub
scas
scas
in
xchg
subl
sbb
xchg
add
jecxz
mov
cmp
adc
std
mov
not
and
sti
and
imul
nop
jns
add
push
aaa
jle
cmp
or
pop
add
jae
hlt
mov
pop
mov
inc
sub
add
push
or
lcall
sbb
mov
inc
stc
xchg
lds
movsb
sbb
add
mov
testl
scas
lcall
lea
or
xchg
push
lret
mov
lods
pop
xor
mov
mov
mov
push
mov
clc
jmp
data16
mov
xor
xor
mov
cltd
cmp
in
dec
add
inc
fwait
dec
and
ja
inc
mov
dec
arpl
sub
jo
and
ret
adc
pop
dec
loop
cmpsl
out
mov
mov
xchg
std
in
out
daa
jae
add
dec
test
outsl
push
sub
jbe
sub
fcmovnu
push
inc
xchg
adc
ljmp
pop
jo
call
cmp
xchg
sahf
push
mov
pop
andl
fldcw
mov
int3
add
sbb
daa
hlt
and
cs
push
addb
cltd
ficomps
sub
stos
dec
and
push
popf
pop
dec
sub
int3
jae
xchg
cmp
fadd
rclb
jecxz
sub
mov
addr16
lret
imull
rcl
add
sbb
cmp
aam
jmp
mov
sbb
jp
popf
clc
xchg
jnp
sub
push
ror
pusha
js,pn
adc
je
sbb
imul
stos
pop
jle
or
push
rcll
sbb
jo
jae
adc
xor
mov
lea
push
test
sbb
xlat
mov
and
ja
pop
sbb
ficoms
shrb
jl
add
xchg
mov
dec
jns
lahf
or
mov
cli
mov
clc
cmc
test
out
aaa
into
sbb
fsubs
push
lods
sbb
add
add
jns
movsb
or
adc
ljmp
daa
inc
pop
xchg
push
push
sbb
mov
mov
jecxz
sub
out
inc
cmc
das
in
in
ljmp
push
outsl
push
mov
xlat
cltd
adc
hlt
insb
jo
insb
mov
mov
movsl
push
sbb
push
lds
cmpsl
ret
xchg
and
cmpsl
enter
fwait
mov
mov
fimuls
iret
fnstcw
cmp
mov
xor
in
in
jmp
and
adc
aas
xchg
jl
loope
fsubp
mov
sub
ret
sahf
jmp
cltd
dec
jecxz
inc
inc
jns
add
outsb
dec
mov
cmc
adc
push
push
jb
mov
out
add
jns
hlt
aaa
cmc
sahf
jne
mov
ja
sbbl
jns
mov
sti
in
outsl
popf
addr16
ret
in
scas
aaa
in
lods
mov
mov
jge
pop
cli
jmp
call
and
repz
loopne
push
or
clc
dec
cmc
int
xchg
mov
je
cli
shlb
jbe
push
rcll
push
mov
ret
adc
mov
mov
pop
test
and
xchg
sarb
das
sbb
int
out
out
pop
inc
icebp
addr16
mov
into
test
jae
mov
lret
adc
push
aad
ret
sub
sbb
rcr
stos
and
sti
xor
jmp
sbb
test
popa
dec
sbbb
mov
or
push
mov
cmp
pop
push
dec
adc
push
insl
mov
ret
jg
or
add
push
call
in
push
ljmp
jns
sub
sbb
insb
xchg
dec
push
dec
add
mov
enter
push
es
lret
test
add
sub
fisubs
mov
sub
mov
jae
repz
mov
jns
lret
int
rcr
ss
leave
mov
push
jmp
lret
popf
or
xchg
popf
xchg
int3
dec
jno
xor
frstor
lretw
sbbb
dec
imul
mov
dec
push
pop
repz
stc
add
cwtl
aam
loope
aam
xchg
icebp
pop
jg
push
push
das
and
inc
cmp
fldl
jmp
lods
xchg
add
push
jns
pop
lods
and
lahf
insl
aas
cmpb
stc
cmpsb
out
sub
scas
out
pop
mov
aaa
sub
sub
call
push
mov
iret
mov
gs
jo
cmc
jns
push
lahf
mov
popa
ss
adc
cmp
aam
cmp
test
dec
into
lret
ljmp
mov
jbe
dec
adc
lea
outsb
test
pop
shlb
mov
xchg
jge
pop
xchg
jmp
mov
mov
or
mov
shl
fcomp
jns
or
sub
xchg
mov
jnp
adc
mov
cmp
push
jae
mov
xchg
mov
sahf
andl
jge
cld
push
cmp
inc
xchg
mov
daa
xchg
mov
lcall
or
test
xchg
stc
idivl
cmp
add
mov
xchg
jno
movsl
ret
jmp
bound
cltd
bound
out
mov
and
lods
inc
ret
adc
outsb
imul
or
test
cmp
jno
lods
call
std
mov
cmp
xor
cwtl
bound
pop
or
and
test
pop
stc
sti
icebp
and
sub
out
repnz
cltd
fldl2e
cwtl
sti
sub
in
insb
scas
jp
scas
mov
in
jnp
rol
add
mov
and
mov
mov
and
xchg
and
push
or
sbb
jp
repz
sbb
add
in
cmp
push
push
inc
inc
jbe
ds
push
sub
dec
enter
push
lods
ret
scas
or
ret
push
arpl
add
ds
mov
push
cmp
fwait
aas
sbbb
pop
pop
es
js
mov
shl
mov
aas
cmp
into
jne
adc
js
pop
lods
xor
scas
cmc
idivl
and
push
jae
loopne
xchg
std
mov
sbb
jg
test
rolb
push
shl
outsl
cmp
pop
dec
dec
sub
lds
pushf
xchg
adc
pop
dec
mov
loop
or
dec
dec
and
mov
xchg
xchg
outsb
mov
aam
dec
icebp
ret
sub
test
sub
jmp
fs
jne
test
clc
sub
pop
adc
xchg
mov
dec
dec
imul
idivb
xchg
mov
decl
daa
popa
fs
mov
pop
jecxz
cli
call
scas
mov
jnp
icebp
stc
add
pusha
or
mov
mov
push
xor
push
inc
jge
xchg
nop
pop
call
stos
stos
stos
movsl
insb
cwtl
ljmp
scas
jne
inc
adc
push
jl
or
insl
xchg
xor
repnz
xor
mov
outsl
pop
in
in
add
mov
cmpsl
popf
in
shrb
push
push
xchg
movsb
bound
xchg
xchg
fisubrl
cmpsl
gs
outsb
add
test
stos
mov
push
jbe
mov
or
loope
int3
push
and
negb
mov
mov
aam
and
sahf
mov
dec
sub
xor
push
adc
push
lods
and
ss
mov
inc
scas
jno
movsl
into
icebp
cwtl
dec
aad
jb
insl
imul
psrlq
mov
fsubrs
addr16
test
and
xchg
cli
inc
mov
fldt
jae
ds
jb
push
jmp
dec
cli
icebp
add
pop
aaa
repnz
push
sbb
ljmp
es
cli
fsts
and
scas
out
cld
lock
ret
lds
and
pop
jae
xor
movl
dec
popa
call
xor
sbb
ret
lahf
fs
lods
dec
cmp
das
dec
lods
pushf
js
ret
cli
mov
loopne
sbb
sbb
pusha
cmpb
adc
inc
inc
mov
lds
jnp
mul
dec
insb
push
dec
in
cwtl
jb
push
fdivs
dec
sbb
adc
mov
in
xorb
imul
pushf
popa
fnsave
sub
frstor
lret
and
xchg
into
mov
mov
loop
scas
cwtl
xchg
lock
ret
xor
fistps
sbb
scas
mov
inc
jmp
or
fcomps
out
sbbl
aaa
mov
aad
lock
or
repnz
data16
jecxz
cltd
adc
cltd
fldcw
mov
ljmp
mov
scas
cmp
jl
stc
cmp
jnp
push
mov
into
or
and
jmp
ror
inc
loope
sbb
addr16
imul
les
cmpsl
pop
not
cmp
jae
inc
sub
cwtl
in
xorl
sub
add
cmp
push
cmp
adc
or
andb
jne
inc
cmp
and
hlt
loope
jmp
mov
shll
jl
xor
mov
sbb
sub
dec
sahf
aas
rol
or
inc
cmp
aam
das
insl
pop
add
xor
or
pop
aaa
stc
test
inc
add
movsl
mov
xchg
sti
adc
jns
sub
jmp
push
nop
cmc
cmc
pop
or
pop
mov
and
add
arpl
mov
sti
fsub
rcll
xor
addr16
repnz
cld
lret
ret
xchg
rcrl
mov
or
jmp
test
push
add
xchg
repz
adc
and
fdiv
sub
stos
jecxz
cwtl
popa
cmp
dec
rolb
push
push
push
scas
call
xchg
fdivrl
sub
mov
push
sbb
sbbb
adc
mov
inc
pop
pop
daa
lcall
jecxz
fdivl
push
inc
in
insl
into
fnstsw
add
push
sub
or
push
push
ja
loop
add
ficompl
cmp
jl
jge
stc
fistpl
xchg
pop
mov
mov
push
mov
outsl
inc
pushf
test
sub
mov
andb
xchg
or
repnz
lods
cli
jp
dec
cmp
lods
inc
jmp
inc
jge
sbb
adc
aad
jecxz
fwait
dec
loop
mov
dec
or
stos
mov
mov
add
jecxz
orl
jmp
int3
xor
mov
pop
mov
inc
xchg
jne
dec
push
adc
pusha
das
mov
cwtl
ficoml
fisubrs
xor
ret
and
rcr
inc
sub
idiv
in
dec
cmpb
or
xchg
in
clc
dec
jae
mov
insl
bnd
outsb
repnz
or
add
adc
mov
test
and
icebp
scas
std
int
mov
or
jp
rcrb
call
mov
andb
pop
mov
cmp
nop
adc
sarl
dec
ret
push
and
arpl
push
xchg
ret
test
or
dec
mov
inc
mov
push
lahf
shlb
out
sbb
or
push
movsb
fimuls
sub
add
adc
mov
std
loop
mov
and
popa
in
sbb
dec
inc
cs
and
inc
sti
out
push
xchg
ljmp
mov
scas
jmp
test
dec
popa
or
mov
push
fcomps
cmc
nop
shll
mov
adc
scas
popa
mov
enter
loop
xor
inc
jo
sbb
imul
data16
push
int3
xor
push
idivb
cwtl
pop
mov
dec
iret
sub
inc
in
sub
push
xchg
or
lret
or
mov
arpl
push
sub
pop
fisubl
scas
imul
inc
adc
add
mov
inc
iret
lahf
out
sbb
std
pop
out
outsb
cmp
insl
sub
pop
dec
lock
jne
in
sahf
clc
push
cmp
jp
inc
push
push
repnz
jle
pop
les
sbb
inc
push
lahf
push
fstps
scas
out
mov
push
push
icebp
or
dec
adc
lret
ret
pushf
inc
mov
xchg
out
mov
jmp
out
sub
jmp
add
sub
and
add
sbb
fldcw
push
jp
push
cmp
aaa
loop
mov
shl
aas
push
cltd
pop
dec
adc
je
sub
adc
inc
jnp
or
fldcw
rclb
bound
in
stos
jecxz
jo
int
xchg
dec
mov
dec
pslld
add
lods
jo
xchg
imul
lods
xchg
bound
xlat
sbbl
mov
test
inc
lea
jno
lcall
mov
or
push
fcoml
jle
xorl
iret
aad
inc
adc
push
adc
fsubs
inc
jg
pop
mov
rclb
cmc
xchg
enter
pop
mov
add
xchg
inc
std
pop
mov
rorl
shlb
ror
loopne
out
stos
xor
mov
std
ds
cwtl
insb
xchg
sbb
shl
push
ss
pop
imulb
outsl
cltd
lahf
inc
xchg
ds
or
loop
fs
enter
and
lret
divb
xor
dec
into
and
inc
jg
or
repnz
data16
out
in
in
in
inc
inc
add
add
xor
lock
xchg
adc
and
push
mov
add
mov
push
xor
inc
lret
daa
pop
fadds
aaa
cwtl
aas
xchg
lcall
nop
dec
or
clc
mov
mov
push
mov
jo
mov
in
xchg
out
mov
clc
stos
jecxz
scas
cltd
sar
adc
add
lret
add
movsb
dec
dec
scas
add
adc
mov
flds
test
out
imulb
sti
clc
cmpsb
adc
out
aas
jnp
je
in
aaa
inc
pushf
in
cld
frstor
inc
fdivrs
decl
dec
and
data16
cs
jmp
xor
fmul
lret
mov
and
mov
add
mov
lret
xchg
nop
add
cmp
sbb
cmpsl
add
mov
mov
out
adc
outsb
sub
jecxz
jle,pt
xor
or
fistps
popa
lahf
lods
mov
mov
notl
inc
clc
cmp
pop
nop
mov
inc
mov
pop
lods
jecxz
daa
adc
and
cmc
add
cmpsl
sbb
mov
sub
push
pop
cmc
sbb
mov
mov
aam
and
xor
das
mov
adc
mov
jnp
pop
scas
or
adc
pop
int
stc
lret
mov
imul
fimull
push
mov
xor
jne
retw
add
mov
mov
fdivrl
movsb
lret
out
neg
fildll
push
rcr
je
ss
cmp
inc
push
repz
mov
rcl
pop
inc
cmpsb
pop
jmp
push
xchg
leave
dec
cwtl
inc
mov
stos
jmp
pop
out
and
lock
mov
push
or
dec
pop
dec
push
lock
pop
inc
imul
sub
push
xor
xor
ss
jp
stos
hlt
cmp
in
pop
shrb
fnstsw
xor
das
push
cmpsb
cmp
dec
arpl
popa
movsb
nop
imul
pop
push
jmp
fwait
mov
orb
mov
pop
push
cmp
ret
idivl
lret
add
outsl
fcomp
or
clc
dec
cwtl
aaa
mov
sub
mov
dec
cmp
lcall
dec
lret
andb
sbb
mov
sub
or
mov
addb
pushf
adc
jl
arpl
lock
insl
fwait
out
dec
sub
inc
cmpsb
xor
mov
inc
inc
movsb
out
data16
cmp
mov
lods
push
cmp
je
push
mov
adc
jmp
cmp
stc
in
sbb
loopne
cmpsb
lods
pop
lcall
sub
fmull
add
mov
add
inc
lods
add
mov
stos
out
rcll
sti
jp
xlat
mov
xor
scas
mov
andl
xchg
imul
dec
xchg
and
inc
andl
push
push
mov
adc
outsl
dec
dec
test
in
and
outsl
cmc
mov
add
rorb
dec
adcl
dec
mov
add
std
lods
inc
lret
push
xchg
sbb
inc
cli
lahf
jmp
lock
orl
cmp
mov
aad
lods
xchg
dec
stos
movsl
jle
push
add
push
inc
pop
and
sbb
out
jae
inc
adc
pop
jge
inc
leave
pop
cmc
dec
sub
add
out
mov
inc
mov
fdivrl
std
leave
sar
not
fsubl
clc
pop
les
push
push
fwait
imul
inc
outsb
mov
sub
jnp
xlat
data16
ficoml
inc
dec
xor
cmpsl
fwait
pop
adc
mov
pop
adc
rcr
sbb
ss
jp
and
xchg
mov
mov
int3
push
jle
in
adc
jb
jle
into
pop
insb
sub
div
loopne
adc
adc
pop
ds
scas
or
mov
lret
or
flds
addl
push
sub
push
jmp
lcall
pop
lret
aaa
jb
xor
stos
pop
jp
clc
push
push
mov
xchg
jo
mov
cmovp
stos
inc
mov
icebp
and
jae
lods
vxorps
fcoml
push
dec
or
xchg
dec
jbe
lods
push
shll
cmp
sti
cmc
aaa
inc
movsl
inc
das
or
jns
mov
mov
mov
add
push
loope
incl
mov
adc
inc
aaa
outsl
loop
ss
stc
and
inc
mov
movl
cmp
mov
clc
and
xchg
popf
lods
sub
mov
lret
daa
loop
icebp
jmp
cld
fldenv
or
jge
mov
mov
sbb
mov
jle
fsts
jl
mov
pop
ds
jecxz
sub
call
imul
push
mov
rorb
les
ds
inc
mull
stos
fsubs
roll
pop
pop
mov
pop
and
pop
pop
out
dec
fnstenv
popa
out
xchg
push
or
push
sbb
xchg
mov
sbb
xor
stos
iret
adc
repz
pusha
adc
adc
fucomip
out
dec
sbb
stc
inc
inc
mov
test
xchg
das
das
mov
push
pusha
lret
inc
fwait
shlb
xlat
fists
mov
inc
adcl
loop
pop
call
in
icebp
pop
push
inc
adc
or
or
mov
sbb
in
sub
out
sub
fidivs
adc
or
es
sbb
add
pusha
mov
lcall
xchg
addr16
cwtl
xchg
ficompl
cmp
loop
rcl
loope
mov
mov
add
popl
and
jg
shl
mov
add
js
push
outsl
push
dec
mov
orl
and
sahf
mov
jl
jno
fnstenv
icebp
jmp
jmp
jecxz
sbb
mov
push
push
xchg
into
xchg
push
lret
sub
push
shl
xor
hlt
cmpsb
cmc
jne
jge
leave
cmp
icebp
mov
rclb
cmp
sbb
adc
jl
pop
sbb
mov
sub
mov
xor
sbb
sahf
iret
ja
dec
aaa
scas
cmp
inc
imul
sub
out
adc
xlat
cmpsl
mov
popf
add
xchg
fld
lcall
dec
dec
inc
or
mov
in
sbb
repnz
sbb
sub
dec
mov
test
in
clc
cmp
jb
mov
pushl
addl
xor
fsubrs
mov
and
dec
push
adc
or
add
mov
fimull
rol
xchg
popa
dec
fsubrp
loop
daa
outsb
inc
int3
aad
subl
sahf
jno
rorl
sub
insb
dec
roll
or
push
and
add
gs
or
sbb
mov
in
push
xor
cmpsb
add
sarl
lret
ret
movsb
dec
adc
push
shl
jge
adc
adc
pxor
fists
arpl
addb
fcmovu
sub
or
sbbl
mov
pusha
mov
lock
aaa
int3
jnp
nop
pop
lods
xchg
xchg
adc
rcll
xor
and
or
rolb
pop
adc
das
data16
xor
xor
sub
lods
xchg
push
pusha
test
mov
xchg
or
loop
aas
out
fs
xlat
sub
mov
mov
inc
xor
sub
aam
clc
adc
jo
xchg
inc
pop
ret
and
test
movsb
xor
test
and
test
sub
mov
je
jmp
add
or
lcall
mov
stc
ret
and
in
ror
jmp
popf
push
xchg
leave
or
pop
out
jmp
out
pop
adc
fisubrl
or
jns
lods
mov
sbb
push
out
pop
inc
mov
std
mov
fsubrs
mov
adc
xchg
or
jge
or
mov
out
mov
in
fucomp
dec
sahf
jg
int
das
pop
adc
mov
adc
or
sbb
cltd
hlt
aam
pop
es
jo
cmc
cs
andl
pushf
incl
adc
add
pop
rcll
aad
rcrl
adc
and
std
movsb
or
mov
scas
loop
dec
jecxz
mov
faddp
adc
and
push
cs
push
pop
daa
xchg
fidivrs
clc
add
cmpb
cmpsl
sbb
xor
or
adc
repnz
int
jp
outsl
push
pop
mov
rcrb
sbb
xchg
mov
ret
and
push
pop
mov
repnz
rorl
shll
lods
pop
add
adc
pop
inc
leave
out
xchg
lret
jmp
lds
loop
cmp
inc
cmpsl
jle
sbb
repnz
adc
dec
cld
jge
mov
lds
in
movl
imul
xchg
push
push
loope
push
and
in
int
xor
and
jl
je
mov
loop
rolb
mov
push
jno
or
or
data16
mov
outsb
les
inc
in
or
push
orb
and
mov
enter
bnd
mov
fwait
popf
movsl
cmp
scas
cmp
fcmove
pop
sub
dec
jne
sub
add
inc
fsubrl
dec
movsb
ds
pushf
sbb
icebp
mov
push
mov
clc
or
cmp
mov
and
fiaddl
jbe
inc
imul
mov
mov
icebp
jne
cmp
jmp
fwait
iret
jbe
xor
mov
iret
inc
mov
sub
in
fmul
add
inc
mov
inc
shrb
xchg
scas
mov
jno
push
lret
cltd
and
lds
repnz
stos
enter
push
sbb
pop
in
fisttps
xchg
xchg
cwtl
push
mov
inc
or
in
add
push
cli
xlat
dec
std
push
xchg
loop
stos
cmpsl
rorl
das
pop
out
adc
sub
mull
sub
out
lret
loopne
add
pop
mov
pusha
lret
xor
mov
jmp
jo
or
fcomps
std
xlat
inc
jle
dec
adc
pop
pop
mov
sub
jg
hlt
loope
push
shll
jnp
aam
xor
sbb
lcall
add
cs
and
pop
push
add
roll
pop
out
and
and
and
cltd
add
push
cld
xor
jle
sbb
aas
test
test
cmp
call
jae
pop
out
or
shr
xor
in
xchg
ficompl
dec
sub
sti
mov
mov
adc
stc
sti
int3
int3
xchg
out
stos
inc
push
loope
loop
mov
fidivl
lods
pushf
mov
repz
add
jle
in
add
inc
ret
insl
push
xlat
negb
test
mov
jle
push
push
cli
subb
xchg
aam
sbb
shll
repz
lea
and
enter
lock
mov
cmp
dec
dec
sbbb
pop
jns
xchg
ret
int
jl
mov
pop
mov
movsb
jno
popa
out
insb
xchg
and
add
lods
xchg
rclb
xor
jbe
or
mov
js
enter
pop
sub
loopne
movsl
std
mov
lahf
enter
js
and
dec
mov
and
scas
gs
aaa
sub
fcoms
iret
leave
sbb
stos
xchg
lock
mov
inc
push
pop
lahf
lcall
adc
mov
mul
mov
test
sub
pop
leave
mov
add
shr
bound
fnstcw
and
in
add
push
xchg
sarl
jnp
jnp
in
frstor
xchg
jnp
call
xchg
adc
xor
mov
adc
pushf
inc
mov
daa
push
out
or
pop
enter
xchg
pop
out
movsl
add
pushf
pop
aas
sahf
lds
jmp
and
jle
mov
add
adc
jle
dec
jo
adc
push
sub
faddl
std
xchg
mov
stos
jg
inc
fs
or
xchg
leave
into
mov
inc
jae
adc
adc
mov
lds
mov
imul
xchg
insb
xchg
orl
lds
adc
push
or
es
sbb
cmp
or
mov
ret
push
cs
dec
pop
gs
fwait
or
mov
incb
je
rcr
xchg
cwtl
cmpsb
pusha
adc
sub
adc
rcl
fmull
movsb
inc
inc
ss
aaa
jno
rolb
inc
push
push
shlb
data16
jo
mov
pop
dec
fldenv
sbb
inc
ljmp
jno
in
scas
adc
mov
mov
and
or
pushf
mov
cmp
xor
hlt
testb
jp
data16
stc
push
pop
ljmp
decl
sub
mov
idiv
sbb
cltd
gs
andb
mov
or
mov
jmp
stos
xchg
push
enter
lds
int
fiadds
pop
mov
ret
adc
pushf
push
push
dec
roll
or
add
rclb
mov
test
stc
jge
stos
lret
and
inc
xor
or
lods
in
push
js
xor
jecxz
or
or
fisttpl
xlat
adc
and
or
arpl
xchg
xorl
cmpsl
push
mov
dec
mov
jge
add
les
ds
adc
add
inc
push
fidivrs
push
or
stos
mov
inc
mov
dec
hlt
ja
cmpsl
jmp
adc
and
push
dec
pop
mov
testl
jle
push
mov
pop
insl
out
das
hlt
cwtl
jne
dec
sbb
add
fisubs
dec
jbe
cmp
mov
or
insb
or
lds
cmp
sub
ror
sbb
cmp
sbb
lods
sahf
stc
cld
xorl
int
mov
xchg
jp
imul
jns
aad
js
js
cmpsw
or
mov
fdivs
mov
add
outsb
cmp
lret
cmp
lods
fld
cmp
mov
clc
mov
ljmp
mov
repnz
fnstsw
out
add
aaa
lret
push
cld
mov
and
inc
xor
dec
out
popa
xchg
xchg
mov
cld
add
subb
xchg
bound
shlb
inc
popa
jbe
mov
lea
das
inc
xor
lods
addr16
shll
cmpsb
inc
sarb
mov
pushf
lea
jno
ds
and
pusha
leave
fisubl
std
push
inc
jp
out
or
mov
dec
test
imul
mov
gs
imul
iret
jp
dec
loop
or
xchg
xchg
fildl
frndint
pusha
and
dec
ja
inc
adc
ljmp
adc
mov
adc
icebp
mov
cmc
sbb
mov
mov
xlat
and
popa
mov
mov
stc
loope
imul
inc
fiaddl
add
push
xchg
xlat
adc
xchg
scas
dec
jmp
mov
jb
dec
and
xchg
pop
push
in
cmp
add
mov
push
sarl
pop
aad
pop
dec
jp
sbb
enter
pusha
cmp
adc
inc
and
hlt
dec
int
dec
jp
sub
xor
addr16
mov
or
sti
pop
mov
inc
icebp
pop
scas
fsubl
or
jp
fsubrs
aad
mov
xlat
ds
cmp
sbb
mov
in
dec
into
ljmp
hlt
cmp
js
in
icebp
dec
call
popa
add
idivb
js
aaa
addr16
and
fidivrs
dec
fbstp
popf
sub
test
adc
pop
mov
lods
lret
inc
lahf
std
cs
sbb
mov
ds
push
cwtl
cltd
pop
mov
sub
mov
int3
lods
test
adc
push
push
mov
adc
ficoml
add
jecxz
mov
mov
shlb
test
imul
les
loope
xor
dec
scas
dec
and
outsb
adc
mov
loope
je
clc
push
push
mov
lds
xor
repz
push
jecxz
stc
push
or
push
aaa
add
pop
in
mov
das
aam
out
es
mov
ret
pop
sbb
sbb
mov
jno
mov
test
mov
xchg
xchg
mov
leave
add
rclb
js
hlt
cmp
movsl
mov
inc
lods
enter
cli
sbb
adc
sub
rcll
fwait
sub
mov
and
fdivr
jecxz
out
loope
daa
out
stos
ja
sarl
or
jbe
iret
repnz
cmp
inc
mov
popf
cld
and
leave
and
sbb
clc
adc
mov
inc
xchg
xchg
and
jg
ds
jmp
and
dec
fsubp
mov
adc
jg
push
in
pop
sbb
lock
sbb
dec
mov
sbb
pusha
push
rdpmc
mov
popa
call
repnz
std
pop
andb
inc
mov
dec
out
fisubl
adc
negb
cld
test
pop
or
or
bound
jmp
ljmp
xchg
aas
lret
push
xchg
movb
enter
cmp
xor
jnp
push
inc
scas
in
cmpb
test
sbb
jno
int
xor
faddl
repz
nop
jae
fwait
push
add
fwait
dec
lcall
cli
pop
fs
pusha
dec
loope
jb
mov
cmp
fadd
adc
ret
mov
sbb
pop
lret
mov
xchg
xor
repz
jmp
in
cmpsl
adc
cmpsl
mov
imul
das
cmp
inc
mov
jnp
mov
xchg
les
mov
and
jp
dec
es
gs
and
add
leave
mov
stos
cmp
mov
sbb
pop
lods
out
fbstp
push
aas
outsb
repz
fidivrl
cs
xor
lods
dec
jge
cmp
add
gs
pop
cmp
cmp
mov
dec
dec
das
lods
mov
mov
mov
sbb
aaa
scas
imul
jp
aas
dec
add
outsl
lods
add
js
xchg
mov
aad
pop
mov
cmp
sbb
data16
in
mov
jnp
xor
mov
mov
and
jge
cwtl
push
push
aam
lea
or
push
mov
pop
xorb
push
cmp
loopne
in
lock
lahf
jmp
scas
jl
xor
cmp
mov
mov
cmp
xchg
imul
mov
push
lea
inc
add
std
inc
loope
bound
repz
movsb
mov
mov
inc
xchg
lret
outsl
daa
mov
xchg
xchg
lock
mov
cs
sbb
mov
pop
aam
add
mov
jns
mov
jmp
or
shl
mov
jp
jl
jbe
out
pop
jns
or
movsb
loope
push
enter
je
dec
repnz
lret
imul
scas
jecxz
andl
ds
adc
jge
add
loope
dec
xchg
das
add
add
negl
add
aas
nop
or
enter
insl
jg
adc
cmp
in
cld
bound
outsb
xor
xor
jmp
jb
lock
and
push
push
movsb
test
insb
aam
lds
add
outsl
bound
jmp
jg
out
lcall
pop
jns
add
ds
push
pop
push
daa
in
xor
nop
mov
lea
fcompl
mov
outsb
jle
fnstcw
sbb
jne
sbb
sbb
dec
mov
dec
jecxz
lock
push
or
xor
leave
and
test
test
xchg
andl
cmpsb
repnz
lahf
mov
add
outsb
arpl
out
pop
cmp
mov
rcll
xor
stos
xor
cmpsl
mul
pop
xchg
xor
popa
cli
scas
and
adc
xor
adc
and
sahf
adc
sub
mov
inc
mov
mov
lret
data16
nop
and
mov
mov
xchg
cmp
rorl
push
out
out
adc
push
addr16
xchg
jbe
cmc
pusha
mov
cmpb
xor
inc
imul
xor
jecxz
sub
xor
rorb
pushf
mov
xchg
loope
cmp
cmc
nop
pop
cltd
les
push
or
xor
mov
sbb
jae
in
lret
adc
sub
into
in
xor
add
arpl
scas
cmp
iret
adc
jo
inc
enter
jg
cmc
adc
jle
cmp
test
cmp
dec
aas
adc
lock
cmp
pop
int
pop
xchg
fadd
loop
int3
jns
push
mov
dec
pop
add
sbbb
dec
repnz
jne
add
mov
mov
dec
cmp
dec
imul
inc
sub
loope
out
shrl
out
mov
mov
push
mov
mov
xor
dec
mov
sbb
xor
scas
xchg
outsl
and
and
xchg
and
jp
dec
mov
dec
jecxz
test
test
test
jp
push
cmp
test
inc
push
movsl
adc
mov
movsb
in
xlat
cmp
or
push
push
xchg
xor
pop
pushf
jns
cmp
xchg
bound
xchg
sub
lcall
push
idivb
jg
lret
dec
sbb
lock
outsl
xor
in
sub
push
and
into
jb
in
nop
mov
stos
push
loop
sahf
rcr
inc
mov
cmp
sub
push
or
sahf
xor
les
pop
dec
insl
pushl
pop
pop
dec
iret
push
adc
push
pop
ret
pop
loopne
or
mov
mov
ljmp
xchg
inc
cmp
stos
lahf
inc
mov
mov
loopne
int
sub
add
outsb
inc
stos
pop
popf
pusha
enter
push
les
jmp
fildl
lods
mov
lods
les
enter
int3
mov
dec
insb
mov
mov
and
pop
xchg
push
push
inc
outsb
add
test
or
sbb
mov
rolb
pop
jo
rol
pop
pop
into
lods
outsl
rcr
cmp
mov
shll
iret
cmp
sbb
jae
and
imul
or
jnp
daa
idivb
or
addl
mov
cld
adc
ficompl
incl
mov
inc
xchg
mov
xchg
mov
pop
xlat
xor
and
flds
scas
out
add
and
mov
and
add
lods
ds
mov
jo
in
pop
xor
in
pop
mov
pop
mov
adc
cwtl
adc
jns
pop
andnps
xlat
pop
sbb
dec
loope
adc
fstpl
mov
stc
outsl
pop
dec
cmpsl
xchg
pop
aas
je,pt
divl
sub
lea
sub
aaa
repz
pop
cmc
mov
ja
std
push
scas
push
mov
sar
loopne
pop
jno
not
jno
pop
pop
adc
test
jl
imul
mov
mov
jae
jecxz
jg
std
pop
cmp
out
repnz
adc
sar
cmp
das
out
sub
out
imulb
inc
sub
xchg
negb
pop
das
xor
ss
pop
aas
mov
insl
xor
pop
fwait
mov
outsb
inc
cmp
outsl
sub
add
mov
sahf
adc
gs
xchg
pop
sbb
jg
loope
jp
ret
lds
jp
test
and
xor
fisubl
cmp
jmp
bound
and
sub
loop
shll
sbbl
mov
cmp
ja
mov
mov
ficomps
mov
cmp
xchg
in
pop
sub
stos
dec
aad
xor
test
cmpsb
sbb
rcrl
sub
mov
pop
aaa
ffreep
fdivrs
xor
add
nop
inc
jne
and
rcl
mov
out
inc
lods
mov
shrl
xchg
mov
adc
clc
xchg
inc
and
adc
jmp
out
out
je
sub
adc
ja
cmpb
loopne
add
nop
pop
xchg
fcom
mov
jnp
clc
addr16
loope
cld
stc
fs
sub
xor
fs
mov
jg
dec
stc
xchg
and
gs
mov
mov
icebp
dec
imul
xlat
or
js
in
push
add
ficompl
push
add
jmp
dec
push
xor
clc
cmp
pop
push
lcall
jecxz
mov
inc
out
jae
repz
push
std
jno
lds
cmpsb
sub
add
lahf
test
cmp
jbe
dec
xchg
clc
adc
cmp
mov
mov
rcr
lock
inc
xor
add
insl
std
aaa
pusha
movsl
jo
lcall
fprem1
push
sbb
in
aaa
jae
mov
and
cmp
xor
arpl
mov
out
hlt
stos
mov
dec
seto
repnz
xor
out
ret
pop
popa
cmpsb
xor
scas
lcall
dec
lods
loop
outsl
sub
xchg
mov
pop
sub
or
leave
adc
cwtl
xor
call
push
out
sub
nop
or
imul
mov
lods
push
mov
dec
mov
xlat
push
fadd
fs
jmp
mov
pop
push
dec
test
adc
inc
mov
push
hlt
cld
mov
inc
in
inc
xchg
mov
push
or
call
xor
pop
mov
nop
mov
add
push
cmp
enter
cmp
sbb
cltd
lods
or
jge
testb
dec
add
push
xor
xor
sub
cmp
xor
addb
pop
leave
call
jne
xchg
jle
mov
jp
out
call
sbb
icebp
in
lods
and
xor
js
and
cmp
jle
jne
subb
insb
add
fwait
int3
outsl
mov
ret
ret
test
add
push
mov
ret
mov
mov
sub
aad
out
shl
adc
insb
and
loop
ja
mov
inc
jmp
icebp
rclb
cmp
adc
lods
jo
inc
arpl
es
bound
out
xchg
pop
pop
mov
jae
push
fistl
xor
and
jo
xadd
loope
and
int3
loopne
ja
xor
inc
push
clc
mov
dec
mov
arpl
fnsave
ss
cmp
dec
mov
mov
and
lods
xlat
imul
pop
adc
pop
xchg
cli
cmp
inc
fstpl
out
arpl
or
cmp
mov
pop
call
cmpsb
repnz
mov
sub
xchg
popa
es
or
popf
movsb
imul
shrb
je
and
mov
push
push
lret
xchg
xor
aas
movsb
adc
movsl
add
ret
lret
ret
jno
pop
test
loope
clc
dec
inc
and
push
movsl
xor
repz
sbb
out
rsm
stos
mov
mov
cmp
aam
clc
loop
mulb
das
mov
shll
inc
popf
xor
lret
fwait
pop
into
jmp
xchg
inc
in
cs
cmp
sub
jmp
inc
sahf
mov
xlat
dec
push
aam
daa
mov
pop
pop
pop
add
pop
sub
pop
add
cmp
insb
subl
lret
mov
or
push
ret
daa
inc
add
mov
clc
sub
outsb
mov
shufps
adc
mov
sub
mov
and
jl
orl
lret
mov
or
insl
and
xchg
mov
sub
and
cli
push
insb
push
loop
dec
clc
notl
lahf
push
jl
or
and
sub
cmp
out
push
adc
push
mov
cmp
in
cmp
xchg
mov
clc
mov
add
jnp
ffreep
testl
in
jnp
inc
int3
sub
lea
adc
xchg
dec
in
dec
push
mov
sbbb
pop
out
sbb
ds
jns
mov
sbbb
ficompl
mov
call
ss
push
and
fs
pop
loop
and
pop
mov
xor
lahf
addr16
test
pop
xchg
shlb
enter
into
sub
dec
jb
and
sarl
sub
sbb
xchg
fnstenv
cmp
stos
or
and
cld
in
xor
mov
xchg
scas
hlt
mov
xorl
sbb
push
dec
jb
mov
mov
cltd
lret
pop
pmaddwd
cmpsb
jnp
cmp
mov
cld
hlt
cmp
into
jo
dec
test
lret
jo
pop
cld
orl
mov
cli
lods
inc
ret
movsb
in
loopne
jne
bnd
decb
cmpsl
rorb
xchg
ds
les
lea
xchg
inc
mov
sub
inc
clc
xor
mov
leave
cs
fstpl
or
mov
dec
popf
movb
or
inc
push
mov
adc
ret
jno
insb
mov
aas
int
fsubrs
aas
sub
inc
lods
leave
xor
jge
xor
sub
aam
call
add
lret
mov
sub
es
dec
mov
fwait
repz
nop
inc
popa
lds
fstpl
enter
sub
jno
sub
sti
jle
cs
outsb
popf
mov
jg
data16
and
push
lods
imull
xor
and
sub
into
loop
push
mov
xchg
cmpsb
std
pop
ucomiss
mov
sahf
mov
rcrl
pop
cmp
mov
xchg
dec
push
mov
cli
dec
mov
mov
xor
neg
cmpsl
test
mov
adc
sarb
out
insb
cmp
or
jle
push
sti
cmp
mov
push
pop
in
sar
xlat
lret
rclb
popa
rcl
loop
arpl
lods
mov
out
cli
aaa
xchg
add
movsl
xchg
aaa
in
outsl
jl
xchg
mov
bound
and
and
adc
sub
ljmp
push
rdpmc
push
push
orb
push
mov
test
xor
sti
or
inc
xchg
pusha
pusha
cmp
lret
imul
or
scas
mov
std
xchg
jg
dec
mov
cmpsl
sbb
fs
jg
jnp
lds
arpl
sub
add
ficompl
andl
mov
adc
mov
popa
dec
hlt
mov
mov
jmp
push
xchg
sub
nop
mov
jno
fisttps
stos
push
andb
sbb
dec
mov
inc
xlat
pop
dec
sbb
pop
sub
out
ss
cmp
rolb
xchg
lods
insl
or
xor
adc
cmp
mull
push
and
outsl
add
sub
insb
xor
push
sub
mov
cwtl
std
push
movsl
pop
mov
out
fidivl
out
dec
sbb
rcrb
and
push
pop
push
fdivr
jge
lea
in
xor
and
push
xchg
xchg
loop
insb
or
push
push
push
push
or
sub
sub
pop
ficoml
fiaddl
lds
sbb
add
cli
loop
pop
sub
jge
sub
cltd
repz
bound
sarb
inc
mov
push
push
mov
and
mov
cmpsl
fmull
pushf
push
xchg
mov
rcl
mov
adc
sub
movsl
jb
mov
lods
dec
addr16
and
sub
adc
pushf
movsb
stos
mov
adc
mov
outsl
inc
leave
shl
fnsave
push
inc
cmpsb
stc
and
test
mov
add
arpl
xor
es
lods
fwait
add
int3
or
add
fbld
and
cmpsb
adc
adc
xlat
xchg
jl
out
pop
in
out
or
adc
xchg
or
mov
icebp
mov
fsubrp
out
or
js
sahf
pop
into
add
dec
and
cmpsl
cmp
jae
lret
sub
cmp
loope
lcall
or
jl
movsb
int
out
jmp
aas
movsl
sub
movsl
sahf
cld
dec
mov
loop
out
adc
adc
push
jnp
and
fimuls
hlt
mov
orl
clc
mov
movsb
mov
push
mov
adc
push
fldl
pop
in
adc
pop
imul
out
inc
das
fbld
aad
hlt
inc
inc
inc
push
dec
add
leave
sbb
fnsave
ficompl
pop
loop
testl
iret
test
nop
and
add
fldcw
dec
cmp
ss
inc
xor
inc
xchg
jmp
mov
pop
popa
add
sub
jg
mov
test
xor
jge
xchg
iret
xchg
mov
pusha
aas
out
mov
mov
clc
pop
cli
stos
fiadds
ficoms
mov
frstor
fldenv
pop
jns
movl
xor
getsec
push
loopne
lcall
sarl
xchg
mov
ds
mov
js
aaa
ljmp
jo
ret
jmp
nop
pop
sub
imul
loope
movsl
scas
repz
add
ret
je
out
ret
push
jg
loopne
add
in
add
mov
add
inc
int3
push
jmp
fidivrs
movsb
and
cmc
imul
orb
loope
in
xor
shll
inc
pop
movsl
push
push
imul
rorb
icebp
jmp
mov
cmp
add
nop
scas
stos
dec
mov
dec
push
adc
lea
xor
stc
push
in
lret
mov
ja
testb
iret
aam
shrl
insb
sbb
mov
fbstp
into
arpl
int3
or
pop
jmp
push
incl
clc
out
sub
les
ss
addb
sbb
sahf
dec
shll
dec
jle
nop
mov
sbb
sbb
cmp
shlb
pop
xchg
gs
pop
in
push
lock
icebp
xor
mov
ja
rolb
stos
sub
arpl
and
inc
cmp
jo
movw
add
jmp
xlat
aaa
iret
test
ret
xor
inc
lret
iret
fwait
xor
xor
aad
fiadds
dec
enter
jno
sub
pop
jle
xchg
dec
push
sarb
iret
mov
mov
lds
cmp
ljmp
in
sub
std
jle
jno
pop
cmp
outsl
push
fwait
adc
cwtl
inc
lods
loope
lahf
push
sbb
movsb
add
roll
mov
mov
xchg
out
lret
add
stc
in
nop
ret
shlb
push
cltd
push
in
jge
in
stc
ficoms
sub
inc
add
clc
mov
in
gs
push
leave
scas
mov
jmp
test
jo
jae
or
cs
insl
or
mov
mov
inc
sahf
fwait
pop
out
sub
sub
outsl
adcb
int
hlt
pop
and
mov
lea
into
jns
fstpl
xchg
adc
fildll
scas
xchg
in
sti
hlt
sub
inc
sub
mov
mov
adcb
xchg
pop
pop
iret
cld
icebp
jb
icebp
fadds
xchg
adc
loop
je
and
mov
xchg
out
mov
in
pop
fists
adc
dec
es
pop
add
in
into
aaa
mov
outsl
fwait
cmp
pop
icebp
test
mov
adc
mov
cli
loopne,pt
int3
xor
add
gs
adc
or
in
js
shl
lock
frstor
arpl
mov
cld
pop
mov
mov
es
or
sahf
mov
add
adc
es
jg
xor
mov
hlt
or
cld
mov
pop
int
cmp
idiv
mov
in
xchg
dec
loopne
in
cwtl
call
fstps
xchg
push
jnp
xchg
cmc
testl
popa
or
aad
fbstp
jg
and
pmulhuw
adc
stc
and
adc
inc
xor
rclb
out
das
loope
aas
pop
push
xchg
bound
lea
jae
jns
loope
sub
jno
mov
testb
jnp
enter
pop
hlt
fcoml
test
or
popa
loop
pop
mov
cmp
push
xor
pushf
fsubrs
imul
clc
and
xchg
mov
pop
push
dec
or
enter
andl
xchg
and
mov
scas
xchg
pop
mov
inc
mov
mov
shlb
shll
mov
jae
shlb
push
icebp
movsb
inc
faddp
in
les
jmp
cmpsl
mov
jp
fldcw
aas
or
sbb
and
cmp
xchg
jnp
test
shll
lret
mov
fisttpll
or
imul
cltd
pop
add
arpl
mov
pop
adc
sahf
into
sub
mov
in
sahf
ds
dec
stos
popf
xchg
sbb
pop
mov
and
lcall
pop
inc
lcall
daa
sub
leave
xchg
add
bound
mov
sbb
jge
pop
mov
xor
addr16
dec
pop
cmp
test
cmp
pop
sub
cmc
sbb
push
mov
lcall
enter
nop
sarl
in
jo
aad
cmpsb
adc
pop
scas
insb
cmp
dec
clts
and
fdivrl
mov
dec
inc
loop
and
xor
or
dec
mov
adc
push
iret
push
daa
fdiv
insb
pop
loopne
mov
fdivp
out
pop
hlt
mov
jl
daa
mov
popa
sahf
gs
xchg
fsubl
nop
and
mov
sbb
or
xor
cmp
mov
movsl
sbb
cmpsl
add
mov
cmc
aaa
jne
adc
inc
and
cli
push
pminsw
and
inc
out
imul
andb
nop
push
pop
add
mov
imul
je
call
sub
push
jb
xor
push
cmp
mov
jl
inc
shlb
pop
lret
mov
or
push
mov
test
test
inc
cli
mov
addl
sbb
add
adc
rorl
imul
cmp
fwait
mov
pusha
inc
xchg
out
pop
sarb
cmp
jne
mov
sbb
xor
lcall
pop
enter
iret
xchg
out
xchg
mov
cmpsb
mov
mov
cmp
xor
cmp
sub
cs
icebp
out
add
sbb
hlt
mov
movsb
jmp
loopne
cmc
pop
imulb
dec
add
insb
add
xchg
cmp
clc
leave
ret
inc
fwait
sbb
gs
xchg
shrl
pop
ret
out
sub
sahf
push
inc
jbe
or
mov
or
mov
pop
imul
push
xor
jge
cmp
add
lcall
bound
sbb
outsl
mov
add
lock
push
sub
in
xor
jne
ror
ljmp
jp
daa
divl
pop
fwait
arpl
sbb
xchg
xchg
aas
adc
ja
cld
inc
pop
test
or
push
mov
movl
mov
loope
xchg
fisubrs
out
dec
pop
cmp
pop
push
cmpsb
dec
in
lods
mov
sbb
add
xchg
xchg
jge
pop
pushf
push
in
sbb
les
mov
shll
cwtl
test
nop
mov
jg
scas
inc
sub
mov
repnz
xor
cmp
jb
int3
mov
add
pop
cmpl
inc
jge
addb
jmp
popa
push
cmp
push
inc
dec
dec
popf
popa
and
sbb
push
sarb
mov
ret
and
xchg
xor
jne
xor
dec
xchg
or
inc
jb
call
or
insl
mov
add
fldl
adc
mov
pusha
or
and
xchg
jp
mov
test
cld
inc
icebp
mov
pop
mov
cld
scas
ret
pop
add
xchg
adc
mov
es
add
inc
push
mov
popl
adc
test
imul
push
fstpl
push
sub
push
in
out
shll
pop
jmp
push
lcall
xchg
movsl
xor
inc
cmpsl
or
and
mov
je
lock
inc
sub
jl
cmc
adc
xor
xchg
cwtl
jne
dec
inc
hlt
ret
sahf
dec
inc
shll
and
fs
add
outsl
scas
fcmovnu
clc
add
cli
sub
pushf
pop
les
fdivs
push
dec
and
pop
mov
mov
and
ret
jne
scas
and
sub
mov
hlt
aad
push
mov
dec
xor
es
arpl
in
pop
cmc
mov
xor
int
out
aas
sub
dec
adc
lds
fldt
mov
movsl
test
mov
cld
sbb
cmp
cmp
sbb
cmp
notl
mov
inc
push
sarb
sub
fldt
add
fiadds
xchg
pop
sub
scas
pop
dec
xchg
mov
push
iret
dec
inc
das
gs
ja
les
sbb
jmp
mov
xchg
mov
mov
mov
jle
test
test
scas
test
cmc
sub
inc
xchg
jns
sub
das
jge
pushf
loop
call
jmp
call
stos
cmp
imul
sbb
lds
insb
mov
loope
in
fnstenv
inc
in
sti
ss
adc
rcr
pop
cmpsb
sub
pop
sarb
xlat
movsl
push
pop
add
repnz
add
stos
cld
into
sbb
inc
dec
movsb
icebp
test
sbb
lret
pop
add
dec
xor
in
jecxz
jno
rcrl
insb
outsl
lds
adc
or
je
jo
adc
sbb
addl
int
mov
popf
push
mov
sbb
adc
jnp
sub
sub
push
xlat
add
repnz
lret
sub
iret
fisubl
std
xchg
les
fs
sub
adc
jge
into
mov
jmp
mov
mov
or
xor
and
push
push
inc
lahf
or
sub
imul
stos
and
int
jnp
pop
xchg
inc
cld
cmp
sbb
add
fstpt
fadds
jbe
xchg
xor
mov
or
inc
insl
flds
icebp
outsl
fcom
jp
and
add
out
pop
push
cmpsl
out
dec
mov
fldt
push
add
sub
cmp
test
insb
loope
pushf
scas
jbe
insb
cmp
andl
fwait
icebp
sub
loope
pop
fistpl
xlat
popa
into
addr16
andl
dec
nop
out
jo
sub
sar
xchg
out
iret
cltd
and
jp
je
daa
pop
imul
iret
xchg
sub
gs
mov
loop
push
add
inc
adc
mov
popf
pop
js
jb
xor
nop
mov
and
loope
add
and
pop
xchg
sarl
imul
jle
cwtl
out
bound
addr16
mov
or
out
adc
pop
cmc
sti
and
stc
and
push
sub
cmp
insl
outsl
push
out
cli
add
movsb
repnz
sub
adc
add
mov
adc
push
mov
pop
lahf
bswap
inc
lods
cmp
mov
mov
jns
mov
lock
fs
cmp
shll
mov
push
dec
xlat
add
imul
sub
mov
fcomi
jmp
add
std
adc
hlt
jbe
xor
push
cmp
inc
in
sbb
stc
gs
pop
mov
mov
adc
aaa
lcall
or
int
movsb
dec
idivl
sub
and
daa
inc
mov
lahf
pop
mov
mov
mov
in
addl
pop
xor
popa
push
ficompl
in
cmc
add
add
gs
mov
int
idiv
das
scas
insl
addr16
fs
nop
jnp
lahf
jmp
ja
jecxz
mov
mov
mov
pop
push
pop
aaa
clc
clc
push
hlt
fdivrl
sbb
mov
insl
rcrb
jnp
push
or
loop
pop
js
ljmp
repnz
mov
aad
jo
repz
xchg
insb
fwait
lret
mov
sbb
in
sub
sar
fcmovnb
mov
sbb
adc
and
and
and
jbe
inc
inc
je
sti
lods
out
push
adc
ret
inc
shrb
xorb
inc
adc
out
mov
adc
rclb
adc
rolb
sub
lret
pop
cmp
rcl
sbb
out
test
inc
rol
test
add
mov
mov
cmpsb
out
cmp
mov
ljmp
lahf
fmuls
mov
popa
mov
mov
aas
pop
popa
test
jnp
addl
adcb
pushf
sub
icebp
gs
pusha
push
push
loope
xchg
iret
int3
add
jne
rolb
mov
loope
icebp
arpl
fistpl
addl
add
xchg
xchg
inc
in
add
ja
std
ljmp
sub
inc
mov
sub
sti
sbb
jmp
pop
sub
movsb
js
cmp
aam
and
jl
scas
iret
mov
out
or
and
out
pop
decl
sub
mov
inc
shll
loop
cwtl
gs
andl
aas
ret
mov
xchg
inc
jle
push
sbb
mov
mov
insb
cli
test
jmp
dec
repnz
enter
nop
push
xchg
xchg
loope
test
push
xor
xchg
sbb
push
dec
xchg
push
adc
and
pop
jae
jmp
push
or
aas
push
cmp
push
pop
jb
xor
std
std
mov
xchg
inc
aaa
cmp
or
cli
mov
pop
xchg
mov
jb
jmp
enter
popf
inc
and
mov
mov
cli
fisttpl
push
repz
sti
repnz
xchg
jp
mov
push
loopne
jecxz
cmp
push
shlb
popf
jecxz
inc
adc
mov
int3
in
xchg
adc
test
cmpl
xor
add
adc
sub
add
iret
xor
or
jp
bswap
inc
pop
and
sub
test
and
mov
out
or
cli
and
test
movsb
push
cmp
subb
mov
out
xor
adc
jle
cwtl
sbb
popf
pop
lea
xor
call
or
test
aad
je
add
daa
pop
push
jmp
mov
pop
outsl
add
jns
leave
xchg
cmp
jmp
xor
add
mov
repz
cltd
jbe
jge
sub
dec
test
push
adc
movsb
popa
cmp
adc
sub
adc
insl
xchg
push
lret
mov
and
xchg
dec
xor
and
push
popf
call
mov
enter
in
outsb
jo
cmp
addr16
xorb
enter
cmpsl
push
mov
pop
lret
clc
push
out
das
cld
lcall
stc
sub
mov
in
push
dec
inc
lock
mov
dec
sub
out
mov
aas
sbb
dec
hlt
mov
push
inc
xadd
sub
xchg
mov
lock
or
ss
test
dec
push
inc
out
or
mov
xchg
daa
xchg
pushf
arpl
clc
push
adc
repnz
insb
test
adc
push
clc
push
stc
adc
out
push
inc
cmpsl
ds
mov
dec
cmpsb
in
call
int3
jb
inc
hlt
adc
push
imul
dec
daa
test
push
xchg
lahf
fidivrs
sbb
leave
xor
int3
enter
outsl
fwait
loopne
add
xchg
enter
cmp
xchg
adc
push
adc
push
jmp
insl
sbb
outsl
iret
clc
outsb
lods
cmp
push
dec
mov
loopne
mov
test
arpl
scas
aaa
dec
mov
jne
pop
cli
inc
xchg
mov
sub
adc
addb
imul
clc
mov
mov
scas
loop
dec
dec
arpl
sti
pop
dec
sbb
push
or
rcll
adc
sbb
and
push
ret
xchg
mov
inc
sub
repnz
enter
lods
ret
mov
arpl
pop
ljmp
mov
xor
lea
mov
add
add
js
das
sub
sub
cmp
push
fcmovnb
scas
adc
sub
or
push
mov
scas
push
repnz
xor
insb
pop
adc
pop
mov
inc
jmp
fstpt
out
adc
outsb
adc
pusha
addr16
iret
jns
aam
jnp
xor
out
jp
sbb
and
cltd
fucomi
dec
cmpl
pop
ret
cmpsb
out
xor
xor
xor
into
mov
jle
imulb
mov
lds
cmp
das
inc
push
fstpl
pushf
aam
lret
adc
shlb
adc
jbe
xor
lods
shll
jle
sbb
test
add
jo
mov
leave
or
aaa
pop
and
lret
ljmp
mov
fists
push
or
pop
push
out
inc
adc
add
sbb
push
inc
out
xlat
aas
out
cmp
into
lret
or
adc
out
sarb
pop
fs
pusha
and
sub
cmp
aad
fwait
inc
jl
xor
xorb
notl
int
test
into
cs
outsb
inc
adc
fsts
hlt
in
mov
mov
push
add
outsl
mov
and
and
out
ss
repz
jle
xchg
and
incb
pop
mov
cmpsl
std
xor
pop
dec
in
jae
mov
jmp
iret
mov
roll
dec
jne
outsb
adc
jns
or
add
aas
add
inc
xchg
aam
repz
aad
fwait
pop
push
sbb
mov
fidivrs
jecxz
or
jmp
jle
pop
test
xor
cmp
cmp
gs
sahf
xor
cmp
adc
outsl
arpl
dec
adc
jbe
popf
in
rcrl
and
mov
sub
data16
sub
sub
jecxz
repnz
mov
mov
scas
inc
pop
sub
or
xchg
mov
mov
cli
imul
mov
sbb
int
jno
add
jge
mov
popf
pop
jmp
jbe
mov
push
in
or
jecxz
aam
mov
iret
in
std
cmp
ss
in
pop
jle
mov
push
insl
jo
cmp
pop
lea
cmc
cmp
sbb
movsb
push
aas
or
jnp
jmp
push
pusha
jne
stc
imul
lahf
mov
lock
push
push
insb
cmp
in
scas
xchg
mov
and
jb
hlt
inc
fldenv
and
adc
enter
scas
and
or
not
and
cmp
jb
cmpsb
push
xchg
lcall
sti
aam
adc
iret
sbb
test
cmp
mov
sbb
xchg
bswap
mov
adc
adc
inc
add
jae
push
pop
sub
add
mov
fwait
loopne
sar
push
je
popf
into
add
mov
mov
into
lods
pop
sbb
mov
sti
mov
test
and
and
and
dec
lods
or
movsl
xlat
cld
or
dec
sbb
push
rcrl
cmp
xor
out
sbb
es
push
gs
jae
jp
pop
jne
pop
jno
jl
and
aam
nop
dec
push
sbb
adc
mov
rclb
pop
das
je
in
sbb
xor
mov
imul
mov
add
addr16
cmp
and
out
xchg
mov
fldl
jecxz
xor
rcr
xor
cmpb
imul
xor
movsl
int
aaa
xor
jns
jns
jo
jmp
sub
push
jmp
shll
dec
sub
mov
push
cmp
xor
jmp
pusha
and
out
pop
mov
or
sub
in
es
adc
cmp
in
repnz
jnp
fwait
adc
inc
pop
inc
into
jmp
loopne
cmp
fistpl
mov
mov
xchg
pop
inc
inc
cmc
mov
and
test
icebp
aaa
jg
mov
movsb
loop
divb
in
and
push
push
dec
or
jmp
fstl
xchg
ja
rcl
adc
pusha
mov
mov
test
inc
fst
push
xchg
adc
add
or
sub
cmpsb
stc
or
or
jle
aam
faddp
xchg
lret
mov
sti
das
mov
jle
inc
push
pop
loopne
xor
inc
stos
inc
xor
dec
sub
xlat
and
mov
je
pop
jg
iret
xchg
lcall
ret
adc
ljmp
xor
cs
in
insl
std
push
inc
jecxz
jb
pop
stc
loop
stc
mov
or
lods
push
fucompp
push
enter
mov
xchg
adc
rcrl
cmp
dec
movsl
add
add
mov
push
add
int3
test
xchg
jmp
sbb
push
xchg
cwtl
xor
mov
in
popa
cltd
lds
inc
fs
scas
lods
movsb
cmp
jmp
lds
and
mov
and
addr16
cmpsl
int3
icebp
jmp
enter
inc
sahf
jns
dec
or
cli
push
jns
sub
add
mov
pop
add
cmp
mov
mov
lods
pushf
imul
sbb
es
or
test
push
cmp
je
sub
outsb
xchg
int
jmp
insl
xor
scas
lret
rorl
jecxz
cmp
dec
mov
addr16
out
repnz
jb
aaa
fadd
or
cmpl
cmp
test
mov
testb
sbb
orb
aam
jecxz
movsl
out
movsb
adc
sbb
dec
jbe
jecxz
jp
push
test
push
xor
flds
and
fwait
repz
sub
dec
pop
fnstenv
push
or
cmpb
mov
aaa
pop
add
dec
imul
cld
out
cmp
imul
cs
adc
sub
clc
cmp
bound
arpl
mov
mov
or
dec
mov
or
mov
or
mov
cmp
mov
sahf
pusha
outsl
lret
jno
adc
pop
fadds
fnstsw
stos
mov
jns
mov
sub
sbb
inc
sub
ret
mov
cmp
outsb
dec
sbb
xchg
imul
mov
xchg
icebp
sbb
inc
jne
and
jbe
mov
shl
rorb
jae
movb
mov
stos
movsl
mov
addb
pop
icebp
arpl
jle
xchg
cli
ret
scas
cmp
addr16
or
adc
sbb
or
loopne
jbe
out
test
xchg
lds
add
in
repnz
aam
pop
cltd
mov
inc
lcall
push
pop
ret
cmp
jmp
jmp
xlat
fstpt
push
jns
mov
xor
dec
pop
mov
mov
das
pop
outsb
jmp
dec
mov
jbe
call
jl
mov
cmc
mov
mov
or
mov
std
fs
jle
pusha
es
dec
sbb
clc
outsl
in
push
insl
aas
jo
cmp
mov
fmuls
mov
jle
std
fadds
sub
mov
push
xor
pop
frstor
in
jno
and
leave
imul
in
jecxz
or
push
jmp
pop
cmc
ja
xchg
inc
lcall
fisttpl
fwait
sbb
and
push
test
sbb
jnp
mov
add
test
jb
mov
push
mov
int3
mov
outsb
scas
or
movsl
pushf
mov
xor
sub
andl
jbe
or
xchg
sar
lcall
enter
jb
push
daa
faddl
xchg
push
cmp
out
xchg
mov
sbb
in
aad
test
mov
das
lds
into
inc
adc
in
lods
enter
movl
mov
pushf
shr
std
xchg
push
sub
inc
adc
add
ja
add
xchg
and
jg
repz
xor
cmp
movb
imul
scas
and
out
push
imul
nop
mov
fstl
fbld
or
icebp
sti
jg
ss
push
out
test
push
cs
loope
cmp
pushf
jns
xchg
ljmp
adc
out
test
shrl
fistpl
stos
sub
outsb
gs
fisttpl
jb
je
subl
int3
mov
mov
ja
les
adc
dec
test
neg
cmpsb
sub
insb
push
fwait
adcl
mov
inc
and
imul
pop
mov
aaa
dec
mov
scas
enter
ljmp
shll
test
bound
cwtl
jbe
popa
jae
pusha
xor
stos
mov
mov
jno
jmp
pop
addl
mov
inc
mov
ficompl
lahf
pop
les
ljmp
cli
dec
sub
dec
andb
lea
imul
std
push
call
and
mov
pop
sbbl
xchg
inc
cmc
and
stc
or
andb
cmp
dec
mov
fs
add
into
out
xor
rolb
mov
clc
iret
fisttpl
fildll
fwait
pop
push
mov
inc
mov
adc
cld
cld
iret
in
lods
les
mov
adc
setl
repnz
cmp
scas
dec
arpl
mov
adc
in
cltd
fcoms
cltd
loope
mov
sar
andb
and
mov
sbb
or
in
rep
cmp
sbbl
mov
jecxz
sub
int
cld
dec
or
push
push
mov
aas
xchg
jg
xchg
jae
xor
test
and
je
les
mov
fisttpll
sub
outsb
xlat
aas
mov
lahf
fsubrs
aam
fbld
jne
dec
jns
stos
jecxz
ds
dec
inc
repnz
mov
mov
sbb
dec
fldl
xchg
dec
mov
ja
jb
lea
negl
xchg
faddp
mov
addr16
cmp
cmp
push
xor
sbb
adc
repnz
xchg
add
hlt
and
mov
popf
push
aaa
cmp
cwtl
call
dec
xchg
mov
mov
or
adc
jb
iret
sub
lret
dec
mov
cs
iret
xchg
lds
rcr
mov
and
mov
xor
xorb
insl
adc
adc
push
or
fsub
mov
sub
rcrb
pop
adc
rcll
lret
and
xor
jnp
dec
ret
sub
icebp
mov
jg
jne
xchg
mov
clc
cmpsl
lret
sub
push
or
aas
mov
mov
adc
into
inc
jp
inc
inc
fstps
loop
lods
cmpsl
mov
cmc
sub
add
push
pushf
fdivrs
sub
mov
sbbl
movsl
sbb
jmp
mov
xchg
arpl
xor
jle
and
cmp
jns
jne
out
sub
fsubr
add
ljmp
xchg
popa
frstor
cwtl
in
pop
or
mov
adc
and
add
or
fmuls
inc
sub
cmpb
stos
xchg
in
fnsave
enter
mov
sub
aad
gs
imul
sarl
popa
cli
cmc
pop
jmp
jno
mov
das
mov
mov
adc
rcl
in
enter
add
cmpsl
mov
ficomps
cwtl
rorl
cmp
mov
add
pop
mov
mov
add
lcall
sbb
test
pop
or
mov
std
fs
sarl
push
push
adc
or
inc
cwtl
std
iret
mov
add
xchg
sbb
stos
mov
dec
pop
out
out
mov
push
out
pop
inc
mov
pop
ds
push
rcrl
cmp
cwtl
lret
jne
loop
repz
inc
sbb
jmp
test
mov
in
and
mov
lods
sbb
mov
ret
sbb
adc
ret
fsubr
xor
and
add
or
mov
repz
pop
add
sub
ja
icebp
fcomps
jge
mov
adc
popa
xor
inc
cmc
inc
adc
fidivs
push
xchg
std
jb
jns
xor
das
fdivrs
xchg
loopne
outsl
sub
push
call
movsl
push
cmpsl
lret
push
add
xchg
iret
cltd
xor
rcr
loop
scas
pop
mov
out
pop
mov
or
jb
pop
bound
add
gs
mov
mov
cmpsb
mov
cmp
mov
fildl
rcll
popf
add
xlat
dec
mov
sub
mov
adc
cmp
int3
test
ja
jne
popf
cltd
jb
outsb
imul
add
jne
cmp
fwait
jbe
bound
add
lods
dec
xorl
repz
jmp
fcoml
sub
sub
js
mov
jg
fbld
xor
jp
sbb
sub
imul
push
jl
jnp
xchg
cmc
jno
shlb
add
adc
xchg
xlat
and
pop
mov
mov
leave
fs
dec
dec
mov
dec
jbe
jno
mov
adc
dec
fwait
xchg
ret
jbe
mov
or
cmp
push
and
or
mov
pop
xchg
cwtl
add
icebp
loopne
popa
arpl
fs
jae
ret
ret
fdivrs
repnz
xchg
xchg
jns
clc
out
lock
cmpsl
arpl
loopne
cmp
in
roll
mov
xchg
mov
aam
lods
fcmovnb
scas
enter
das
mov
ficoms
mov
nop
dec
xchg
and
in
mov
mov
mov
jmp
push
and
jb
mov
loope
and
mov
and
jbe
jns
xor
dec
cmp
mov
invd
mov
out
lds
es
shll
mov
fwait
adc
jno
pop
test
and
icebp
dec
in
sub
into
pslld
fcmove
cmp
dec
dec
pop
jmp
pop
pop
add
and
lcall
sub
xor
sub
xchg
cmp
xchg
and
bound
sbb
mov
test
xchg
lahf
mov
mov
adc
icebp
jne
pop
sub
filds
test
sub
or
dec
push
imul
dec
cli
sub
leave
cmp
pop
in
mov
push
mov
sub
gs
rol
fwait
add
icebp
cmp
ds
jae
clc
or
jge
push
xchg
adc
lds
cld
and
jl
aas
and
and
mov
and
pop
incb
in
pop
jns
inc
lret
test
adc
or
cmpsb
lock
stc
xchg
xor
push
mov
push
mov
xchg
cmc
push
xchg
or
aad
lahf
aam
mov
jnp
pop
xchg
cmp
addr16
shl
imul
jno
xor
movsb
push
pop
adc
jmp
imul
movsl
add
push
xchg
repz
loop
arpl
lds
xchg
fistpl
pushf
out
ja
das
arpl
cwtl
aas
push
int3
in
loop
movsb
fs
aad
xor
jns
test
mov
stc
imul
push
dec
cwtl
fnstsw
hlt
lods
xor
xchg
aaa
sbb
and
adc
sub
cmp
mov
insb
test
sbb
dec
mov
js,pt
inc
scas
push
loop
call
or
inc
jo
int
fucom
jmp
out
sahf
daa
cmp
push
dec
vfrczss
lock
jno
notl
mov
les
dec
pop
iret
mov
sbb
mov
adc
arpl
sbb
loopne
or
insl
lahf
cmp
mov
sti
inc
int
mov
push
add
sbb
mov
dec
in
xlat
xorb
add
pop
cmp
xor
jp
mov
sahf
and
sub
ljmp
inc
pop
jge
inc
push
ret
imul
testl
hlt
aad
rep
pop
sub
das
and
mov
aas
sbb
xchg
xchg
sbb
or
int3
push
data16
js
xor
jns
cld
and
pop
adc
xchg
ret
jo
cmp
inc
mov
dec
mov
ljmp
inc
pop
movsl
lret
sub
mov
xor
jmp
inc
lret
mov
rcrb
cmpsb
mov
mov
sti
and
sub
ss
ljmp
cmc
and
in
aam
push
jb
add
lods
cli
sbb
xchg
dec
cld
cmpsb
xor
xchg
movsb
or
sbb
cmp
stos
cmp
xchg
mov
mov
rorb
addl
push
es
push
in
sub
sub
mov
jno
jbe
inc
scas
prefetch
adc
sbb
lret
in
pop
fsubr
mov
and
jae
cwtl
rcl
lcall
jne
ljmp
push
pop
dec
in
xlat
cmpsb
sbb
rorl
call
ficomps
cli
fdivrs
hlt
xchg
add
les
mov
mov
inc
ljmp
push
dec
adc
dec
es
aad
loope
test
dec
xor
inc
aam
push
int3
dec
or
outsb
xchg
fmul
push
xchg
push
fwait
adc
lret
mov
js
and
dec
mov
xor
sub
and
fidivrs
fimull
pop
jge
add
pop
adcb
test
clc
popf
int
mov
mov
push
dec
inc
shl
mov
push
ljmp
popa
or
cs
addb
les
shlb
fldenv
in
mov
stc
adc
aam
and
adc
pop
pop
in
cmp
psllw
jl
sti
sbbw
bound
push
lcall
push
dec
nop
add
das
faddl
or
xchg
dec
and
sbb
jge
lret
sbb
and
sub
loop
xor
popf
aam
sbb
and
xchg
in
notl
ficoms
out
or
hlt
add
mov
adc
dec
or
arpl
xchg
fldl
sub
pushf
sub
add
movsb
mov
mov
gs
mov
add
sti
data16
cmp
inc
lods
sub
loope
aaa
inc
push
and
cmp
xor
inc
stos
shrb
popa
jb
std
adc
add
inc
xlat
aaa
xor
sarl
mov
int3
xchg
jo
je
sbb
xchg
test
dec
and
mov
int3
int
jne
inc
shll
inc
inc
add
movsl
mov
psadbw
in
or
jl
jp
inc
mov
inc
out
add
cmp
fstpt
movsl
cmp
push
and
testl
sarl
push
popa
sbb
jo
into
and
aad
pop
lret
push
sbb
pop
inc
jmp
or
mov
or
jmp
cmp
inc
jnp
mov
mov
out
cmp
cmp
cltd
push
mov
in
pop
fadds
int
push
pop
cmpb
sbb
and
outsl
scas
jne
cmp
dec
inc
push
sbb
in
idiv
hlt
shll
inc
lret
lock
repz
push
xchg
sub
and
out
xor
dec
xchg
adc
movsl
ss
lds
and
adc
dec
mov
xor
pop
inc
dec
inc
mov
sti
and
test
outsb
je
or
in
bound
testl
lahf
mov
mov
pop
dec
jno
or
shlb
aam
push
cmp
mov
cmp
sahf
inc
mov
test
ja
pusha
iret
pop
mov
mov
hlt
jbe
inc
cmc
cmp
cltd
mov
push
shlb
cmpl
cmp
add
pop
pushf
adc
mov
loopne
int
jecxz
imul
jp
test
pop
xchg
faddl
or
pop
adc
outsl
movsl
imul
es
add
jnp
or
out
mov
and
fnstsw
lcall
addr16
jge
jge
jg
add
shlb
pop
mov
cmp
jo
fidivs
mov
scas
jp
and
push
data16
popf
pop
mov
xor
int
dec
add
xor
cs
inc
xor
push
std
out
sub
mov
lds
lock
xchg
jnp
add
mov
dec
mov
repz
ss
leave
pop
sub
dec
stos
scas
sarb
jae
repz
sti
nop
jnp
push
xchg
clc
and
cmc
xchg
scas
cmp
test
sarb
lea
dec
add
dec
mov
push
scas
jnp
icebp
mov
mov
ljmp
and
in
cmpsl
shrl
icebp
xchg
stos
fstl
loope
jbe
cmpsb
mov
cwtl
mov
and
dec
pop
movsb
std
push
xor
aas
scas
or
mull
in
add
in
stc
iret
test
scas
or
dec
repz
ljmp
add
cli
cld
add
imul
pop
dec
test
push
lods
push
decb
daa
out
outsl
lcall
sbb
push
dec
daa
iret
aam
sub
jge
pushf
leave
pop
pop
test
sbb
xchg
out
sarl
sub
and
cmpl
mov
mov
outsl
mov
and
mov
mov
fidivrs
pop
mov
push
test
lcall
outsb
into
hlt
ud1
mov
add
aas
js
addr16
xchg
rcr
mov
push
test
mov
es
inc
sbb
push
mov
int
jbe
and
jge
test
pop
psrlw
fcomp
cmp
outsl
fs
dec
inc
or
scas
xchg
sub
mov
xchg
and
inc
mov
ret
mov
repz
jmp
popa
dec
inc
ret
sbb
into
and
daa
fmuls
inc
inc
addr16
mov
xchg
iret
inc
push
ds
and
push
stos
imul
sub
sbb
das
xlat
sub
leave
loop
or
adc
xchg
out
cmpb
and
push
test
and
mulb
add
movsb
xor
mov
adc
xchg
add
in
pop
cmpsl
xor
jbe
add
mov
movsl
es
lret
push
aaa
dec
adc
test
bound
dec
les
mov
lds
aad
add
or
adc
mov
ljmp
push
xor
inc
fidivrl
lret
fidivrl
gs
data16
and
sbb
xor
das
sbb
sub
push
fdivs
dec
xor
sub
negb
sbb
int3
xor
iret
xor
data16
push
popf
nop
mov
cmp
out
ja
aam
sub
pop
loope
mov
lcall
outsl
jg
call
daa
jae
popa
lock
add
dec
mov
jno
in
fwait
pop
sub
movsb
jnp
cmpsl
dec
jecxz
fnstcw
jbe
add
loop
mov
aad
movsb
pop
add
mov
jg
and
pop
or
dec
scas
and
out
vdivsd
inc
daa
inc
leave
mov
pop
roll
outsb
push
pop
add
push
fs
mov
fimull
jns
or
cltd
lahf
test
cmp
sub
out
push
jmp
stos
cmp
sbb
test
jno
push
xlat
sbb
pusha
push
mov
push
jno
loopne
test
cmpsl
mov
lods
jno
mov
sbb
testl
fimull
cmpb
mov
or
nop
jl
test
clc
lock
sub
js
mov
imul
shll
and
adcb
mov
inc
mov
outsb
lea
out
or
jnp
loop
inc
push
js
daa
xor
sbb
rcl
stc
pop
hlt
mov
mov
xor
pop
lea
cmc
push
shl
and
dec
ret
std
out
rolb
dec
and
sbb
imul
add
sub
lcall
mov
pop
shl
add
out
cmp
cmp
cmp
cltd
lods
ret
fxtract
mov
stc
mov
dec
dec
mov
xor
dec
ret
push
repz
lods
xorb
xor
test
xor
call
mov
fidivrs
xor
in
or
les
loope
dec
outsb
mov
sub
outsl
rcrl
xchg
icebp
jns
jae
dec
sbb
sbb
xor
int
jp
movsl
lcall
lret
pusha
sbbb
iret
outsl
pop
push
sub
pop
jnp
shrl
and
iret
sbb
repnz
sbb
lahf
out
xchg
mov
jecxz
movsl
xchg
and
mov
xchg
mov
mov
and
mov
mov
mov
ret
fmul
xor
mov
aam
daa
bound
push
mov
shlb
popf
aas
sbb
in
jle
lock
mov
xor
sub
adc
or
mov
scas
push
or
daa
inc
ss
inc
xlat
mov
imull
enter
lods
xor
sbb
mov
adcb
jmp
pop
test
fwait
jae
pushf
outsl
into
xchg
imul
test
arpl
loop
jmp
mov
mov
mov
cld
fwait
pop
fs
test
ss
lcall
mov
and
and
stc
mov
lret
mov
leave
call
sub
sub
iret
iret
fnstsw
xor
adc
gs
mov
mov
xor
or
push
mov
int3
notb
or
adcb
jo
scas
sbb
cmp
dec
leave
enter
or
or
cmp
ja
out
pop
mov
or
add
xchg
xchg
test
stc
mov
inc
and
push
push
mov
loop
jmp
in
cmp
fwait
lea
sti
aas
cs
mov
add
int3
xor
add
mov
pop
aam
lret
ds
push
cmpb
stos
xor
cld
movsb
into
dec
sbb
xor
data16
repz
cmpsb
pop
hlt
adc
sbb
xchg
add
pusha
and
inc
fs
aas
xor
push
adc
call
out
int
insl
mov
testb
mov
sbb
aad
sub
repz
and
sub
cmp
sbb
dec
lods
mov
and
jmp
mov
int
mov
jp
push
sub
repz
jnp
mov
out
mov
repnz
in
in
enter
xchg
xor
dec
xchg
stos
popl
mov
mov
xorl
stos
xchg
push
mov
test
mov
adc
mov
rcrb
arpl
push
fists
je
insb
ret
out
xchg
loope
ljmp
int3
cmp
pusha
out
xor
pop
rorl
data16
sti
xor
stc
ljmp
in
inc
push
aas
pop
push
pop
das
mov
lahf
pop
mov
lods
aaa
mov
push
sbb
das
pop
cmp
push
pop
rclb
lahf
mov
leave
xchg
loopne
mov
sub
lcall
xchg
add
out
add
icebp
test
pop
repnz
push
mov
pop
dec
adc
cmp
dec
fnstenv
scas
decl
cmpsb
mov
cmpsl
clc
cmp
adc
sbb
pusha
sbb
pop
mov
lds
mov
mov
clc
adc
push
pop
ret
das
ds
orl
mov
les
stc
jae
push
fidivrs
lret
call
jg
adc
loope
int
pop
and
test
scas
rol
xchg
pop
fcoml
or
mov
adcb
insl
dec
pop
lret
ds
jl
mov
adc
outsl
jnp
push
mov
popa
outsb
lahf
xchg
inc
ja
hlt
fcomps
nop
inc
and
stc
mov
das
mov
lock
imul
test
out
mov
cmp
mov
mov
mov
clc
or
cmpsl
leave
test
xchg
mov
push
mov
xchg
fistpll
mov
out
ret
fwait
pop
xchg
inc
popf
js
imul
xchg
mov
subl
mov
mov
push
mov
add
xchg
dec
addr16
jp
adc
mov
inc
notl
test
add
mov
sbb
cmp
sub
add
divl
ds
mov
lret
movsl
je
dec
cmp
mov
or
mov
scas
add
les
cmpsb
mov
sti
sti
scas
lret
ljmp
dec
rolb
popl
adc
mov
jmp
jle
xchg
xchg
loopne
gs
xchg
pop
popf
mov
and
stos
xor
mov
imul
add
pop
outsl
lds
in
ret
and
movsb
sarb
jl
mov
add
shrl
pop
popa
out
out
jle
popa
ja
js
xchg
ret
mov
push
sbb
lods
loop
push
dec
cmp
lods
mov
add
icebp
xor
in
fwait
push
popl
sbb
xchg
xor
or
jnp
test
add
pop
sbb
repnz
cmp
call
movsb
xor
mov
mov
cmp
shrb
popl
mov
jp
push
mov
stos
test
rcrb
cmp
xor
insl
jg
add
mov
test
inc
out
test
xchg
fistl
push
inc
jge
xchg
jg
movsb
jne
mov
aaa
stc
push
clc
test
or
stos
pop
adc
mov
add
mov
rcrl
lahf
jp
adc
cli
or
push
daa
sub
push
stos
mov
repz
sahf
fucomp
sub
test
sarb
push
in
jne
pop
sahf
pop
int3
dec
jns
pop
iret
cmp
mov
sub
inc
jecxz
cmp
push
in
movsb
jno
inc
pop
ja
arpl
scas
jmp
and
jmp
mov
or
push
or
sbb
sti
pop
sbb
sbb
push
mov
out
enter
mov
fwait
les
out
stos
lret
fiaddl
pop
paddq
and
outsl
cmp
sti
loopne
repnz
or
pusha
pushf
cmp
inc
inc
xor
pop
out
lcall
mov
pop
repz
mov
call
stos
mov
fldl
jae
das
dec
insb
pop
xchg
popa
xchg
repz
mov
pop
adc
adc
mul
mov
adc
scas
daa
imul
push
cmpsb
xchg
fisubrs
daa
movsl
es
pop
cltd
xor
test
push
out
adc
adc
data16
xor
jo
pcmpeqd
mov
push
mov
sar
ljmp
xchg
test
in
enter
cmc
sub
dec
dec
mov
pusha
in
add
push
xchg
xchg
or
je
addr16
test
inc
adc
cmc
test
sbb
xor
cmp
in
shll
std
ss
sbb
fisttpl
inc
fwait
shl
jecxz
or
stos
out
fsts
pop
add
sbb
push
in
jl
das
movsb
adc
cmpsl
iret
xor
stc
std
insb
mov
sbb
cmovns
rorb
scas
mov
jge
jno
pop
pop
cmp
movsl
adc
mov
sahf
mov
leave
outsl
jae
inc
pop
jp
push
xchg
add
and
mov
jle
movsl
mov
mov
pop
mov
push
outsl
lret
jl
fisubrs
add
pusha
adc
and
andl
ficompl
movb
cmpsb
fcoms
movups
jp
jle
sbb
into
loop
xchg
dec
cmp
cmp
mov
fistpll
out
arpl
aam
fucomi
push
xchg
or
mov
pop
cltd
out
stos
jmp
add
xor
mov
xor
inc
fwait
xchg
jns
insb
push
scas
push
dec
add
in
mov
jne
aas
cmc
sbb
idivb
enter
pushf
arpl
hlt
lahf
sbb
cmp
sbb
lahf
insb
mov
sub
adc
lds
dec
mov
jne
int
mov
adc
add
inc
bound
add
mov
shlb
mov
std
cmp
daa
mov
xchg
sub
enter
add
and
jno
clc
sub
btr
fdivrs
sub
xchg
stos
pop
ljmp
pop
orl
xor
mov
sbb
and
xchg
ret
or
stos
stos
into
xor
adc
out
cmc
adcb
call
cmp
rcrl
std
add
dec
mov
stc
andl
pop
mov
into
dec
or
xchg
push
movsb
sub
popf
pop
aas
and
add
cmp
push
jnp
push
and
popa
adc
sub
std
mov
sub
mov
mov
pop
pop
push
jmp
xor
clc
jo
sbb
inc
scas
testl
sub
or
jmp
sub
aas
jb
fwait
cld
lahf
fwait
daa
std
fidivl
fcmovb
jae
fcomi
jnp
mov
les
pop
push
jle
lret
jle
lret
lea
mov
add
mov
dec
shl
ss
xor
push
lods
test
inc
jle
aas
push
in
lods
jnp
lcall
xchg
pop
jbe
cltd
xor
cmp
or
popa
sbb
aam
cmp
hlt
loopne
adc
mov
sbb
pop
aaa
jge
or
fwait
and
scas
xchg
xchg
stos
and
or
in
dec
fdivrl
push
cmpl
sbb
push
sub
out
dec
icebp
inc
push
jp
inc
sbb
mov
push
loope,pt
sbb
push
pop
mov
xchg
mov
and
add
into
cmp
lea
imul
iret
adc
ficoml
push
pop
addr16
adc
outsb
fiadds
jmp
fcomps
sahf
push
fldcw
cltd
jp
imul
aas
call
lahf
jge
sub
gs
ret
ljmp
mov
cmp
fnstsw
mov
jne
pop
push
popa
cmp
dec
stc
pop
dec
pop
cmpsb
or
into
xor
cltd
lret
popa
mov
mov
jmp
mov
sbb
cmp
and
mov
xchg
cmp
adc
push
jns
inc
daa
enter
mov
cmpb
sub
xchg
add
insb
cltd
mov
into
stos
lss
sbb
ret
pop
outsl
mov
fstps
jno
inc
fidivrl
xor
lods
add
mov
push
dec
popf
xchg
out
and
xchg
or
outsb
scas
lcall
dec
out
mov
pop
mov
pop
cmp
add
cli
cld
jmp
jae
mov
stos
insl
test
push
xchg
adcl
xchg
rcrb
mov
pop
cmp
sbb
pop
adc
addb
aam
mov
and
xchg
mov
xchg
pop
call
das
idiv
xlat
data16
outsb
xchg
dec
fists
outsb
aam
pop
push
frstor
fldcw
sbb
insl
xchg
mov
lock
subb
mov
andb
scas
xor
cmp
imul
mov
mov
push
push
cmpsb
repz
mov
in
add
test
jge
out
lods
stos
fldt
insb
xor
pop
test
push
jl
rcrb
lcall
mov
scas
sub
shll
int3
ja
xor
mov
and
loop
sbb
and
add
fbld
loopne
inc
bound
lahf
sti
icebp
rolb
js
lods
mov
push
lock
into
in
push
inc
push
lock
sub
scas
or
lds
lods
lahf
xor
inc
sbb
addb
hlt
add
imul
decb
cmpsb
mov
xor
popa
cmp
inc
incl
push
pop
mov
popl
cmpsb
adc
pusha
push
jo
push
sbb
inc
imul
cld
insb
arpl
aas
pop
jg
cli
pop
mov
lret
mov
test
test
mov
aad
lods
outsl
inc
scas
popa
gs
iret
test
stos
ds
sub
sbb
pop
fwait
xchg
mov
dec
sbb
pop
add
xor
hlt
xchg
xor
fmul
add
pop
sbb
fwait
into
pop
dec
mov
dec
inc
rorb
vmread
call
sub
add
cmp
or
shll
cmp
or
pop
cmpsb
fisttpl
add
adc
dec
and
arpl
into
push
adcb
lahf
subb
lahf
rclb
lods
insl
inc
add
xor
fcoms
add
jo
lret
iret
inc
imul
call
das
pop
cmc
sub
sbb
sbb
push
movsl
xchg
shll
orb
push
sub
enter
ja
mov
enter
mov
fnstcw
out
cmpsb
xchg
repz
adc
jo
pmullw
fisubs
xchg
jle
orl
pushf
fsubl
insb
lahf
xchg
dec
stc
sub
jle
mov
and
xchg
cmc
rorb
xchg
xchg
aaa
xor
jle
push
sbb
add
icebp
insb
bnd
fsub
rep
loopne
mov
mov
shr
xor
cmp
add
sbb
mov
xchg
sahf
in
or
ret
scas
mov
mov
cld
movzwl
test
ret
pop
ret
push
jo
int3
insl
xchg
shll
repz
daa
xchg
push
adc
inc
test
sahf
cld
sbb
shrb
jp
sub
xchg
mov
xchg
xlat
aas
xchg
stc
push
stc
aaa
sub
inc
inc
jnp
es
inc
sbb
into
lahf
xchg
or
sahf
arpl
add
fstps
aas
sub
mov
pop
fmul
and
add
aas
mov
xor
mov
lret
inc
mov
pop
and
jno
ja
push
mov
addr16
jnp
xchg
lret
sbb
cmp
sub
mov
icebp
xchg
bound
mov
mov
cmpb
jbe
scas
cs
aaa
or
stc
or
aam
fs
or
or
dec
push
into
mov
and
lods
fisubrs
mov
test
or
data16
arpl
mov
jmp
fcoms
in
xchg
outsl
aas
outsb
push
sbb
sbb
in
mov
popf
imul
gs
and
int3
xor
mov
jge
sbb
sbb
mov
pushf
and
and
ss
mov
cmp
and
lods
std
and
lret
and
xchg
xchg
jg
mov
flds
adc
sbb
mov
adc
xchg
in
pop
push
call
fs
adc
and
sub
mov
push
jae
xchg
adc
das
mov
cmpsl
pop
fldt
sbb
int3
inc
jl
push
add
lret
xor
jmp
js
movsl
addr16
mov
pop
pusha
out
inc
mov
inc
nop
push
fwait
and
sbb
data16
jge
mov
cmp
lock
test
loop
jl
jb
fmuls
cmpsl
cs
pop
ret
lods
fiadds
mov
xor
inc
sbb
mov
mov
dec
pop
add
rorl
or
lds
jg
xlat
fwait
into
pop
xchg
lods
scas
leave
sub
mov
mov
insl
push
pslld
push
cmp
jg
sbb
aas
int
call
std
sub
test
and
jne
in
inc
cmpsb
dec
cmp
push
clc
dec
hlt
or
sbb
pop
xchg
movsl
stc
mov
stos
jns
dec
sub
imul
clc
daa
repz
fimull
lods
das
in
fsts
or
fmul
or
pop
xchg
cld
mov
sub
mov
xchg
add
js
dec
icebp
ja
lods
in
fadd
cmpsl
mov
jle
cwtl
push
cmp
sbb
dec
sbb
mov
rcl
xchg
dec
lods
nop
popa
xchg
jno
lret
ficomps
cli
and
shll
enter
aad
insl
xchg
nop
pusha
sbb
inc
pop
inc
scas
xor
fucom
mov
insl
mov
mov
mov
pop
push
push
sub
add
mov
je
pop
ficomps
xchg
je
push
hlt
clc
cmp
pop
popl
std
test
pop
enter
xchg
in
scas
mov
loopne
shll
or
fstpt
add
xor
jecxz
pop
push
dec
out
out
int
leave
dec
in
or
gs
testb
test
aas
ljmp
mov
mov
mov
xchg
sub
scas
imull
ficompl
add
mov
cmp
out
fs
jmp
sbb
inc
lahf
mov
hlt
cmp
jp
jnp
pop
cmp
insb
mov
cmc
lds
xor
aad
jg
mov
mov
inc
sbb
pusha
mov
inc
sahf
add
mov
jecxz
movsb
popa
cld
mov
dec
xchg
xlat
insb
mov
xchg
aam
pop
loop
xor
rcll
shrl
or
out
test
imul
inc
dec
push
jns
sarl
ja
nop
std
in
xor
jae
sbb
xor
pop
push
insl
cmp
sub
test
or
jns
lock
je
xchg
mov
or
js
cwtl
rorl
and
aam
mov
mov
xor
faddl
cltd
jg
inc
aas
jns
mov
adc
push
gs
fidivrs
outsl
push
sbb
pushf
xchg
or
ret
shl
shlb
dec
test
mov
insl
out
xchg
outsl
dec
add
insb
lock
dec
add
sub
movsl
mov
jno
xchg
divb
rol
sti
cmp
ja
xlat
subb
mov
stos
mov
lods
popl
mov
mov
pop
scas
add
popf
testb
lods
sub
pop
pusha
push
cmpsl
push
ret
cmp
out
inc
loop
pop
xor
ss
xchg
sbb
or
test
and
bound
movsb
mov
sbb
in
inc
iret
imul
inc
in
jno
mov
inc
dec
mov
jmp
cmpsl
in
movsb
mov
cmp
movsl
addl
xchg
xchg
mov
fsubrl
and
add
and
pop
jo
add
inc
insl
repnz
fistl
ljmp
scas
adc
outsb
and
sahf
test
lcall
pshufw
inc
ljmp
xor
pop
ljmp
add
cvtps2pi
xor
fucomi
jg
mov
shll
or
jp
sub
arpl
lret
dec
mov
cli
adc
push
push
nop
add
dec
push
add
cmpb
mov
inc
sarb
jae
scas
sbb
mov
lods
out
xchg
sub
or
lods
dec
sub
mov
pushf
and
orb
xchg
pop
jnp
mov
shrb
sub
and
sbb
pop
mov
mov
jo
and
xor
push
inc
mov
and
fisttpl
adc
lea
test
scas
mov
or
mov
aas
and
mov
mov
adc
test
cmpsb
jno
xchg
and
jle
fidivrs
hlt
sub
or
push
nop
cld
dec
fstpl
mov
lcall
sub
cmpsb
mov
stos
add
inc
mov
shl
lret
sbb
das
add
mov
fimull
jle
pop
or
scas
movsb
scas
negl
cmc
xor
push
ljmp
cs
fidivrs
clc
mov
mov
push
jnp
inc
insb
in
imul
xchg
outsb
cli
aas
hlt
mov
outsb
mov
dec
pushf
jg
mov
jns
ret
dec
sub
movsl
lds
jbe
lea
fdiv
and
movq
jb
stos
fcmovnbe
pusha
test
mov
jge
push
and
scas
sub
dec
cwtl
pop
mov
add
sub
fisttps
test
sbb
popl
jge
xchg
or
sbb
ss
loope
add
push
test
mov
int
push
sbb
decb
loopne
into
lock
push
and
test
inc
test
sub
xor
sbb
sahf
das
icebp
mov
stc
jecxz
rclb
mov
rcr
or
sti
cmp
je
leave
cmp
jns
pop
cmc
and
push
sub
add
js
les
psubd
mov
pop
sub
and
xor
dec
xlat
adc
in
xchg
fmul
sub
decb
adc
dec
and
stos
rol
xlat
mov
cld
mov
in
inc
mov
lock
outsl
loop
outsl
icebp
pushf
jecxz
mov
add
push
ror
pop
outsb
mov
insb
scas
jge
scas
cmp
xchg
add
push
add
bound
sahf
xor
jnp
jno
cmp
fs
sbb
gs
push
loope
and
and
mov
pop
shlb
mov
enter
rorb
cmp
ficompl
pusha
icebp
xor
mov
arpl
sub
cld
lea
shl
xchg
rolb
or
clc
adc
ret
ja
jecxz
xor
mov
jmp
mov
sub
stos
mov
loopne
pop
int3
xlat
jmp
push
stc
nop
jo
mov
cmc
movsl
xchg
testb
mov
xor
aaa
fidivs
xchg
dec
scas
pop
and
clc
xchg
cmp
aaa
iret
call
or
movsl
mov
sub
lods
xchg
xor
hlt
mov
sbb
scas
jmp
in
cmpsl
gs
jns
fwait
jbe
rcll
pop
cltd
stos
push
lods
inc
loope
iret
jmp
jno
outsl
jle
das
inc
mov
inc
imul
lahf
pop
pusha
jo
sub
dec
inc
lock
test
mov
movb
dec
lret
push
sbb
mov
xchg
fldl2e
push
mov
inc
cmp
jo
mov
fisttps
dec
dec
push
push
inc
insl
sbb
lods
daa
rclb
mov
xor
fistpll
sbb
jns
int3
inc
movsb
imul
or
mov
sbb
shl
ror
xchg
std
repnz
xor
or
sbb
bound
mov
lock
inc
mov
pushf
lret
jmp
cwtl
out
aaa
xchg
jo
out
xor
aas
icebp
out
lcall
pushf
iret
jns
mov
xor
mov
int
pop
cmp
repz
and
xchg
inc
addr16
jp
xchg
and
mov
pop
jo
dec
push
fstp
aas
sub
fstpt
rcl
mov
stos
cmp
les
inc
sub
pop
cmp
roll
xchg
pop
bndldx
or
jg
cli
add
xchg
movsl
sarb
imul
pop
mov
cmp
sbb
sub
rolb
pop
dec
xchg
sub
sub
and
sbb
push
cmp
test
jne
int3
cmovnp
sub
inc
popa
mov
dec
xchg
xchg
mov
aam
inc
or
sbb
mov
adc
xchg
aaa
rcl
call
xor
das
jo
nop
mov
xchg
rorl
addr16
xor
push
jb
loope
fs
ror
cltd
ret
cmpsb
sbb
mov
dec
fwait
pop
mov
xor
je
pop
imul
ret
add
fwait
leave
xchg
add
sbb
pop
sbbb
or
mov
stc
cmp
jb
mov
pop
outsl
mov
cmc
stc
loop
mov
sbb
outsb
and
out
sub
aaa
cmpsb
pop
daa
sub
nop
fistl
jo
and
mov
popa
push
movsb
add
and
lret
test
imul
aam
sbb
xchg
lea
ret
das
adcb
xchg
jae
leave
sbb
lods
jns
movsl
xchg
sbb
jge
push
sahf
xorl
push
outsl
cmpsl
iret
or
pop
jl
ljmp
mov
shl
sahf
repnz
push
je
sbb
ficompl
lcall
cwtl
cli
add
cmp
data16
mov
test
icebp
sbb
and
mov
nop
loope
sub
cwtl
adc
push
jae
xchg
scas
or
push
sbb
stos
scas
xchg
leave
mov
cmpsb
icebp
pop
and
filds
std
fsubrs
xchg
dec
xor
fmul
aas
inc
and
jecxz
xor
iret
jo
mov
and
sbb
xchg
stos
pop
mov
lahf
push
stc
adc
addr16
push
orl
xorb
cmp
pop
call
ja
add
adc
adcl
inc
dec
or
mov
mov
xor
sbb
push
mov
cmpsb
daa
push
sbbb
xchg
xchg
stc
adc
fistps
jecxz
test
addb
mov
mov
adc
fcoms
in
cmp
out
sahf
and
inc
or
xlat
pop
lcall
jge
dec
dec
jb
je
add
sbb
inc
jl
adcb
mov
loopne
rcr
and
pop
je
or
aam
xchg
or
or
adcb
cmp
pop
dec
adc
notb
ret
jmp
dec
in
inc
cld
and
xchg
xchg
push
mov
pop
and
sar
aad
add
cld
or
js
negl
rolb
mov
sbb
sbb
cli
mov
adc
imul
in
jp
les
adc
out
jae
cmova
call
xor
push
fsubrs
stc
mov
cli
mov
shll
mov
xchg
pavgw
out
sbb
sarl
dec
cmp
mov
clc
jae
inc
lods
nop
jb
push
xor
jl
inc
and
out
and
test
movsb
mov
rcrb
pop
cld
je
pushl
sub
icebp
sub
ret
cmp
xchg
mov
xorl
call
sbb
and
pusha
pop
push
adc
dec
adc
dec
loop
popa
rolb
popf
inc
push
aad
jmp
xchg
gs
in
enter
cmpsl
inc
mov
ja
push
rclb
xor
sub
cli
xchg
lcall
in
int3
inc
lods
jbe
xor
or
xchg
jbe
and
call
inc
mov
jae
stos
in
push
repz
scas
lods
xor
jmp
out
idiv
mov
ljmp
add
imul
fs
cmc
test
xor
push
push
cmp
cmp
mov
jo
push
rcll
cmp
test
stos
orl
sahf
in
sub
and
data16
out
leave
ret
sbb
repnz
mov
imul
jl
push
push
lock
push
addr16
xchg
in
xorl
adc
xor
or
in
ljmp
inc
scas
xor
mov
sar
lret
into
cmpsl
xchg
mov
adcb
sub
sbb
clc
stc
jp
xchg
xchg
jl
xor
sahf
fnsave
or
push
mov
cwtl
setbe
inc
imul
addb
pop
add
sub
jo
and
mov
xchg
inc
mov
and
movsb
sub
lods
bound
pop
hlt
push
jne
jb
cmp
into
icebp
or
xchg
into
adc
mov
sbb
jnp
out
pop
push
jl
add
cld
int
inc
setns
fdivrs
loope
push
mov
jge
mov
add
test
aad
and
loop
mov
pop
mov
jb,pn
mov
xchg
mov
xor
pop
adc
outsb
pop
movsl
mov
push
jno
pop
jmp
add
aas
inc
in
xchg
lahf
aas
fsubl
icebp
loop
mov
test
in
ret
xchg
pop
in
daa
xor
ja,pn
lods
pop
decb
stc
into
add
jae
test
pop
dec
repnz
add
dec
int
loopne
jecxz
jnp
les
out
dec
xchg
dec
add
cmc
jg
ss
insb
pop
loopne
jno
jo
push
xlat
aad
aas
inc
in
dec
push
fwait
sarb
jae
mov
adc
jb
xchg
add
xor
pop
outsl
lret
cmpsl
enter
call
shl
rcll
push
in
pusha
mov
jge
or
mov
and
daa
insl
jae
xorl
lahf
arpl
outsb
adc
push
xchg
repz
out
push
jb
aad
aam
mov
sub
adc
mov
push
sahf
idivb
cmp
shrl
and
mov
sahf
and
fsubrl
dec
add
mov
sbb
lds
adc
ljmp
mov
popa
cmp
stos
and
fnsave
out
cmc
mov
icebp
scas
inc
fwait
push
mov
std
stc
fisttpll
xor
call
je
lahf
movsl
hlt
rclb
push
jmp
cld
rclb
push
push
in
cwtl
sub
pushl
addr16
jbe
movsb
push
mul
add
dec
xadd
pop
iret
fmull
out
xchg
das
jbe
inc
push
cmp
lahf
mov
push
lods
push
push
and
imul
cltd
sub
xchg
stos
shr
mov
in
shrb
loop
stc
in
dec
mov
pop
lods
data16
aad
ljmp
out
mov
cltd
cmc
xor
test
pop
adc
movsl
stc
in
push
cmp
enter
insl
inc
lods
xor
popa
or
movsl
mov
popf
sub
aas
lcall
ljmp
push
daa
aas
xor
pop
mov
xchg
push
dec
mov
sahf
test
pushf
cmpsl
push
idivb
cmpsl
std
js
out
das
daa
xchg
inc
adc
cmpsb
sub
sti
adc
rcr
or
add
fbstp
sbb
sub
push
add
push
in
mov
aaa
add
clc
aas
xor
bound
xor
sub
sarb
cltd
jle
mov
add
ror
mov
push
inc
cltd
cs
sbb
pop
jl
lret
jp
jne
aad
xchg
out
sbb
inc
xlat
flds
scas
push
and
and
push
sbb
mov
out
fistps
adc
cli
dec
mov
push
xchg
mov
push
sub
test
ss
lods
aad
add
popa
jae
and
or
adc
dec
incl
fiaddl
repnz
test
out
sbb
aas
push
pop
mov
mov
cmp
es
xchg
xchg
sti
popa
inc
lcall
mov
jmp
outsb
jae
in
cmpl
shlb
xor
shrb
mov
test
sub
shlb
pushf
mov
sub
jbe
xchg
push
sbb
int
xchg
sbb
lret
dec
lea
inc
rcrb
std
inc
pushf
jge
outsl
shrb
das
mov
inc
daa
cltd
jle
test
es
cltd
xor
jp
push
pushf
or
lcall
xchg
movsb
das
adc
push
adc
out
pop
scas
pushf
pop
out
xchg
rclb
xor
jno
jge
inc
xchg
sub
adc
adc
cmp
es
test
inc
sbb
xchg
stc
jl
sbb
ss
loope
jecxz
inc
daa
cltd
jmp
or
cld
push
das
sub
add
jae
xor
and
pop
pop
pop
fildl
enter
add
xchg
int3
mov
daa
adc
mov
cmp
hlt
std
and
ss
je
mov
jge
sub
jnp
cmp
shrl
cld
xchg
leave
sub
int3
outsb
xlat
lahf
mov
jp
mov
xor
pop
mov
sub
ljmp
ficompl
rclb
inc
inc
popf
int
add
xchg
mov
and
lods
or
xor
mov
sarb
ja
roll
icebp
inc
incb
mov
int3
test
xor
shll
cmp
xor
cmpsl
mov
andl
jno
gs
or
dec
mov
xor
sub
sti
cs
lods
shr
in
ds
or
xchg
icebp
inc
lods
outsb
idivb
push
les
jnp
aaa
pop
fcomps
lret
jl
sbb
add
test
je
jge
push
add
xchg
push
pop
mov
sbb
mov
test
jp
mov
push
ss
mov
jnp
rolb
into
sub
adc
test
sbb
movsb
jmp
lods
push
loopne
mov
jge
push
lea
sbb
mov
cmc
and
jp
dec
imul
jnp
cltd
scas
mov
pop
das
push
ljmp
xor
xor
test
adc
sub
movsb
pop
sub
cmp
add
jmp
fiadds
es
in
xor
mov
popa
mov
push
ljmp
aaa
inc
int3
jl
mov
cmp
lods
pop
dec
jg
jg
xor
push
mov
lcall
test
popf
icebp
cmp
scas
cmpsl
xor
das
dec
pop
call
pusha
inc
iret
lahf
in
jae
aad
popf
stc
xchg
lea
mov
dec
fprem
gs
pop
inc
je
pop
imul
pop
push
lahf
push
loop
sbb
movsb
or
movsb
andps
call
dec
mov
sub
out
pop
push
ret
push
and
mov
cwtl
mov
add
mov
jg
inc
and
or
imull
jecxz
loopne
and
sbb
loopne
ret
lcall
xor
push
sub
xor
pushf
sbb
xchg
dec
mov
sub
push
inc
nop
cmpsb
daa
jmp
mov
lcall
sub
ljmp
daa
aam
dec
sbb
pop
cmp
in
add
pop
outsl
shrb
int3
pop
ja
add
insb
push
jl
bound
mov
loopne
cmp
cmpsl
pop
test
aam
cltd
jmp
pop
rcrb
xor
lahf
cmp
mov
dec
lret
call
adc
mov
adc
std
lahf
daa
pop
sub
lahf
mov
jl
pushf
mov
mov
andl
test
outsb
lds
pop
sbb
scas
pop
inc
push
mov
inc
mov
pop
dec
add
sbb
ss
enter
jnp
ret
loopne
push
pop
jmp
xchg
sub
push
push
and
fs
xlat
adc
icebp
xor
adc
clc
cli
movsb
mov
push
daa
adc
mov
cmpb
inc
xor
loope
test
or
leave
jl
or
pop
pop
or
out
inc
fstps
lods
ret
xchg
or
push
mov
cltd
or
in
dec
test
mov
add
sti
sub
lods
inc
outsb
shll
cmc
daa
mov
int
jle
mov
sbb
mov
cmpsl
xor
lods
xchg
pop
mov
lcall
push
pop
adc
mov
popa
pop
incb
mov
adcb
and
popa
jecxz
sub
into
test
das
mov
negb
imul
iret
jo
mov
push
jle
ret
jbe
pop
jge
out
hlt
sbb
xchg
mov
push
adc
and
xor
push
dec
adc
mov
push
pop
imul
dec
pop
lock
mov
ljmp
pop
loope
mov
int
arpl
adc
fimuls
cmp
das
into
loope
and
xchg
into
test
aad
pop
lods
xchg
inc
push
popa
push
lock
outsl
dec
int3
cmp
lods
ja
fsubl
in
loop
pop
in
scas
push
cmpsb
mov
cwtl
int3
adc
jl
ds
test
dec
jge
insb
movsl
sub
movsl
sub
cmp
inc
cmpsl
je
jbe
mov
adc
adc
jg
and
sub
cli
in
xchg
adc
in
mov
addl
jnp
iret
sub
sbb
and
xchg
fcomip
xchg
orl
push
inc
into
fisubs
fisubrs
shrl
push
and
mov
pop
js
jne
mov
mov
pop
ret
inc
push
adc
sbb
inc
sub
lahf
test
aaa
pushf
adc
cmp
pop
sub
mov
or
test
ret
cld
add
jno
std
lods
jnp
and
lods
add
lret
sti
and
push
inc
jle
test
rcr
mov
orl
cmp
cmc
in
test
rcrl
dec
inc
in
in
jl
lds
roll
cltd
imul
adc
sub
xor
add
jae
cmp
sub
lret
out
inc
mov
jb
cli
bnd
into
mov
jle
pop
je
xchg
add
scas
fwait
movsb
adc
cli
xchg
repz
xchg
push
sarb
pop
add
cmp
rclb
add
and
sbb
jnp
cs
inc
movsl
or
xor
in
cmp
xchg
add
add
xorl
push
out
pop
pusha
add
lahf
adc
mov
push
cmp
sahf
in
push
xor
mov
mov
xchg
jne
xchg
mov
cmp
ja
frstor
mov
fs
cmpsb
into
loope
dec
push
cmp
push
sub
pop
fidivl
xor
lock
test
test
cmp
es
rorb
aam
sbb
ja
js
jb
dec
movsl
jge
test
pop
lret
and
mov
dec
mov
mov
add
stos
push
jno
icebp
mov
dec
and
cmpsb
adc
xchg
mov
or
mov
dec
sahf
cmp
outsb
mov
test
scas
cmp
xchg
dec
push
cmp
adc
aas
xchg
out
cmpsl
cmp
ss
jo
inc
xchg
jecxz
add
popf
std
mov
movsb
pop
push
sbb
add
lahf
adc
and
mov
andl
bound
pop
xor
or
fldcw
sub
pminsw
pop
inc
cmp
insl
movsl
mov
add
xchg
mov
add
push
sbb
inc
push
test
hlt
ret
stc
add
insb
call
push
mov
lret
dec
xor
pop
pop
out
fs
inc
and
mov
ja
and
xchg
cmpsl
mov
and
pop
cld
leave
mov
cli
push
xchg
cltd
out
mov
insb
mov
bswap
or
xor
jge
stc
cs
and
shlb
add
mov
repnz
popf
mov
dec
cmpsl
inc
pop
int
fiaddl
loope
lret
into
cwtl
jno
dec
jae
cmpl
filds
ret
ret
sub
jle
test
jmp
pop
mov
add
and
fsubl
jae
jmp
or
pusha
cli
jmp
xchg
test
pop
testl
adcl
adc
sbb
jne
push
jae
fbstp
and
pop
push
mov
lret
adc
jg
adc
xchg
mov
mov
in
push
add
insl
lods
mov
mov
xchg
es
imul
or
jmp
mov
sbb
xchg
dec
mov
pop
adc
cmp
fisttpl
testb
pop
shr
orb
and
xor
add
cmpsb
dec
mov
adc
cmp
clc
xor
or
pop
cmp
repz
pop
push
mov
mov
xchg
scas
aas
jle
dec
push
adc
mov
je
and
dec
cmc
divb
call
and
inc
sbb
std
pop
test
stos
popl
iret
popf
sbb
pushf
insb
jmp
xor
add
fcoml
mov
cli
or
push
je
inc
mov
push
outsb
xor
shlb
sub
jmp
jb
fsts
mov
aaa
divl
or
mov
mov
mov
sbb
loope
dec
repnz
push
out
lret
mov
pop
adc
cmpsl
movsb
xchg
cmpsl
pop
shlb
sbb
adcl
in
mov
add
mov
push
xor
insl
xchg
sub
mov
inc
xor
cmp
mov
insb
dec
xchg
jne
jnp
in
add
js
inc
adc
xor
lcall
popa
push
sarb
lcall
mov
sbb
inc
insl
xor
out
pushf
test
loopne
dec
push
xchg
mov
aam
out
mov
fs
or
daa
dec
or
pop
rcrl
out
daa
push
es
mov
lds
adc
data16
dec
push
daa
or
mov
push
mov
in
sarb
aad
sbb
pop
mov
lock
cmp
testb
jecxz
cltd
or
aam
xor
push
setns
int
jle
sbb
in
daa
xchg
into
mov
icebp
andl
stc
out
in
push
dec
shl
testl
add
imul
ret
add
ret
mov
bound
adc
sub
inc
lds
popw
xchg
imul
xchg
sub
push
adc
repz
cmp
cmp
in
sub
add
mov
or
stc
mov
inc
es
rcll
or
out
pop
test
and
cmp
outsb
jnp
inc
out
jecxz
leave
cmp
dec
loopne
out
call
jge
sub
xlat
loop
mov
push
xchg
nop
iret
push
fdiv
mov
repnz
mov
cld
mov
add
aam
std
xchg
inc
mov
push
imulb
mov
add
int
push
xchg
fwait
ljmp
jmp
mov
sbb
sub
add
daa
stos
adc
idivl
cmp
enter
mov
sub
pop
mov
popa
cmpb
mov
jmp
imul
fimull
jae
lea
enter
in
sub
test
clc
mov
jnp
push
int
inc
shr
xor
shll
insl
lcall
insl
scas
repnz
test
push
cwtl
jb
loope
and
pop
jmp
ficoml
fldt
lret
mov
dec
pop
mov
pop
sbb
gs
stos
xchg
mov
mov
repz
xchg
sbb
lods
in
loope
stc
sbb
into
mov
mov
sbb
imul
cwtl
mov
rclb
push
pop
rorb
jmp
sbb
mov
dec
xorl
js
lret
mulb
xlat
in
sbb
into
adc
ja
call
dec
in
xchg
or
fisubs
in
mov
dec
mov
mov
jbe
push
inc
push
jb
push
or
sub
fstpt
lods
xor
sar
mov
sub
je
test
arpl
xchg
hlt
adc
and
cmp
cmp
jmp
sub
mov
sub
add
add
xchg
mov
sub
shll
out
mov
cmpsl
nop
jmp
scas
popf
adc
sar
mov
loop
inc
in
and
lock
jns
mov
sarl
push
movsb
sub
cld
cltd
test
mov
jle
leave
inc
xor
int3
dec
insl
xlat
mov
into
xor
ja
jp
dec
jae
call
jae
push
dec
ror
mov
js
adc
fcoms
call
mov
aam
mov
xlat
cmp
addr16
pop
mov
sub
mov
mov
xor
sbb
xchg
hlt
rorl
icebp
add
jno
add
loop
bound
icebp
shll
cli
pushf
rcrb
xlat
imul
sahf
out
cld
pop
sahf
addr16
jmp
stc
addl
aad
sbb
cld
mov
jmp
or
pop
mov
in
loopne
cmpb
jmp
mov
in
or
clc
call
mov
sub
pop
inc
movsb
insl
popa
gs
push
jl
adc
adc
or
test
push
subl
push
pop
lret
mov
and
xchg
cltd
mov
dec
hlt
out
lods
aaa
mov
adc
dec
mov
js
or
mov
xor
inc
sbb
es
push
aaa
and
in
into
lcall
dec
ret
jnp
sti
push
lods
mov
loopne
jno
test
stos
sti
mov
icebp
or
dec
in
cmp
mov
std
and
dec
inc
shl
aad
lods
test
out
xor
lods
fldcw
shrl
jle
pop
sar
frstor
jl
mov
add
xor
push
sub
loop
clc
movsl
lcall
sub
ja
lea
das
mov
ja
enter
push
sbb
push
subb
dec
push
fisubs
ret
cmp
aas
xor
insl
cmp
lea
sub
js
xchg
aas
pcmpeqw
mov
inc
pop
loop
push
or
jb
pop
pop
xlat
pop
test
inc
fisttpll
adc
ret
sti
cltd
shrb
dec
cli
xor
insl
inc
in
mov
xor
cmp
cli
loope
push
testb
adc
xchg
pop
iret
mov
dec
out
bound
scas
daa
pop
inc
call
lods
mov
mov
push
pop
stos
test
popa
psubd
insl
jo
cwtl
push
daa
inc
sbb
cmc
in
cmpsb
dec
adc
fiaddl
push
aam
jae
fldl
xchg
test
fs
movsl
int
call
and
adc
sahf
test
enter
lock
stos
fcomip
loopne
insb
lcall
sbb
addb
push
jns
dec
lods
mov
rclb
inc
cmp
pushf
sarl
imul
cld
mov
adc
out
loop,pt
and
adc
sbb
outsb
mov
sub
cltd
add
or
data16
mov
adc
and
add
and
js,pn
or
stos
call
pop
data16
mov
cwtl
jns
or
xor
pop
or
mov
cltd
movsb
out
shll
mov
outsl
cmp
jecxz
es
imul
in
repz
jae
adc
stc
mov
and
pop
or
mov
dec
sar
scas
jnp
pop
xchg
and
movsl
dec
std
push
rolb
icebp
aaa
lret
fsubrs
pop
fisubs
and
mov
cli
inc
es
imul
out
es
mov
adc
xor
sti
or
sub
jne
sbb
pop
cltd
js
fdivrp
mov
jp
add
outsb
popa
shlb
lahf
adc
xchg
xor
cmp
in
out
stos
popa
adc
subl
jg
mov
mov
sahf
xchg
jbe
jmp
xchg
fs
xchg
pop
jp
mov
imul
pop
mov
rcr
and
jo
adc
ret
inc
push
jecxz
jmp
jno
push
call
sub
test
andl
movl
imul
inc
insl
loop
popa
pop
dec
sahf
das
test
jns
cmp
stc
dec
fcmovne
std
adcl
mov
out
pop
jecxz
call
pushf
sub
test
fdivrs
popf
push
cmp
add
jae
and
sub
ret
mov
gs
mov
out
ja
jl
xor
test
fdivp
mov
insb
js
sbb
je
sahf
cmp
imul
lock
xor
test
scas
ret
cmpsb
sbb
mov
inc
xor
fistpll
inc
in
and
cld
cmp
outsb
jns
mov
or
pop
pop
les
pop
insb
adc
test
daa
xchg
in
clc
cld
sub
and
add
rorl
jp
jns
add
push
outsb
test
and
je
dec
mov
in
cli
pusha
jns
arpl
in
call
out
sub
aaa
inc
out
jmp
push
bound
int
iret
pop
jbe
in
add
xor
scas
mov
xor
inc
cmpsl
in
xchg
sbb
push
mov
adc
mov
add
mov
mov
imul
and
dec
idivl
test
xchg
enter
inc
push
daa
js
mov
dec
push
jno
sbb
dec
sbb
sub
sub
sub
sbb
pop
sbb
pop
jge
jmp
mov
jle
movsb
sbb
into
adc
dec
xor
das
cmpsl
dec
scas
inc
or
call
mov
xorb
lods
lea
mov
jge
dec
call
mov
cmc
cmpsl
inc
pop
adc
ljmp
outsb
mov
pop
xchg
pop
mov
ffreep
inc
add
inc
cmp
cmp
sahf
dec
in
fstp
cli
scas
outsb
pop
dec
stc
ja
jmp
and
push
pop
push
lret
out
and
pop
mov
icebp
inc
mov
mov
jae
aaa
dec
adc
lcall
les
xor
mov
idivl
push
leave
xor
xchg
into
sbb
mov
iret
jb
sbb
mov
jle
sbb
in
add
sbb
dec
sarl
push
or
adc
shl
jle
cmp
pushf
lahf
push
cmp
adc
or
inc
jo
xchg
cmp
add
mov
sub
lcall
pop
inc
mov
xchg
cli
ja
mov
movsl
mov
and
jne
fdivrs
out
pop
mov
cmpsl
out
lods
add
mov
push
stc
jae
sar
mov
les
mov
out
push
jp
outsl
decl
inc
test
cmp
inc
cwtl
cmpsb
and
imul
inc
dec
inc
movsb
push
rcll
aas
lcall
dec
xor
mov
aaa
mov
xchg
rcl
fcmovb
adc
inc
sbbb
push
sbb
in
in
hlt
xlat
jb
pop
xchg
sbb
iret
mov
fsubrs
pusha
push
mov
mov
test
loope
sub
jns
push
mov
test
mov
or
fldcw
xor
sub
cmpsb
adc
cli
pusha
lahf
fstpt
lods
inc
mov
dec
mov
add
or
xor
shll
mov
jnp
jmp
sub
adc
fwait
lock
mov
lcall
fistps
dec
xor
push
je
aaa
cmp
push
in
test
or
and
xchg
jle
out
sbb
pop
call
xor
cmp
imul
test
and
cmpsb
pop
ss
cs
sti
and
cld
ja
sub
xchg
cmp
sub
dec
mov
adc
xchg
popa
call
bound
mov
mov
fwait
adc
out
inc
daa
sub
mov
mov
in
cmp
jno
mov
js
sbb
mov
lret
adc
add
in
fwait
mov
mov
enter
sbb
ret
cld
jne
pop
lret
mov
mov
add
xor
out
mov
out
out
mov
xchg
inc
test
call
jecxz
je
pop
lds
testl
xchg
lock
scas
mov
adc
jle
lret
inc
and
inc
imul
ds
stos
adc
cmp
fidivl
movsl
movsl
stc
push
jno
cwtl
jecxz
sbb
xor
xchg
inc
out
data16
mov
xor
sbb
ficomps
stc
mov
leave
loop
rep
in
xor
jnp
in
mov
subl
adc
sub
jg
test
in
cmp
rcll
sub
sar
pop
repz
and
sub
iret
testl
push
adc
pop
mov
loope
inc
adc
int3
add
outsl
gs
outsb
scas
incl
fdivr
inc
mov
bound
push
fs
pusha
push
pusha
movsb
or
roll
outsb
repnz
xchg
jno
sbb
pop
mov
clc
orl
test
sarb
roll
out
movsb
jno
mov
addr16
cmp
shll
sub
sbb
sbb
shrb
or
pop
or
xor
out
cmpl
and
mov
lahf
arpl
push
call
pusha
cmp
int3
cltd
aad
jp
cmc
dec
pop
xlat
xor
push
sbb
and
push
sub
sbb
mov
dec
mov
pushf
lret
xchg
mov
jmp
nop
sti
inc
sti
sbb
fstpl
pop
mov
ret
push
aam
mov
notl
and
int
movsl
mov
fstpl
jo
mov
hlt
mov
leave
test
xor
popa
sub
addr16
out
out
outsb
int3
pop
lret
stc
add
or
in
test
mov
aam
int
arpl
ficoml
test
push
lcall
add
inc
pop
dec
test
and
les
in
xchg
cld
adc
sti
cmp
sub
cmpsb
and
into
jl
clc
mov
icebp
icebp
jge
nop
lret
pop
sub
xlat
xchg
cmc
shl
xchg
daa
xlat
out
ret
lret
sub
dec
stc
push
mov
sub
fildl
xchg
leave
push
sub
loope
cmp
jno
and
cmp
jge
cmc
sub
inc
mov
jno
mov
sbb
dec
cmpsb
push
xchg
mov
iret
imull
and
lds
jg
mov
xor
je
pusha
into
aam
ficoms
jbe
cmpsb
fs
push
sbbl
pop
movsl
push
fldenv
stos
hlt
adc
lret
popf
dec
pushf
cmp
int3
adc
cmp
mov
es
ljmp
inc
xor
xor
enter
inc
fiadds
mov
sub
enter
add
xchg
adc
cmp
lods
xchg
mov
loop
push
ja
xchg
lods
jnp
adc
jo
arpl
lea
mov
mov
stos
xor
cmp
dec
mov
pop
sub
push
and
aas
xlat
rorl
lea
jge
pop
adc
pop
sahf
xor
mov
mov
jle
or
shrb
and
in
shll
jo
dec
daa
shrb
arpl
mov
or
xor
mov
pop
testl
movsb
movsb
inc
jnp
out
ss
stos
faddl
js
imul
std
insb
pop
rcl
pop
adc
pop
sub
and
xor
sbb
dec
sbb
rcll
jne
loop
mov
cmp
xor
mov
mov
jne
mov
adc
xor
dec
and
fists
xchg
inc
notl
clc
xor
xchg
xor
xorb
mov
cs
daa
call
and
jns
jae
inc
xor
pusha
daa
out
mov
jo
mov
xor
mov
fstl
nop
inc
mov
xor
push
or
lret
push
cwtl
out
mov
xor
andl
scas
and
ja
or
lret
movsl
shll
pop
or
daa
in
and
inc
add
sub
adc
movsb
subb
and
mov
mov
push
leave
inc
fcmovnb
stos
push
mov
clc
xchg
movb
lret
imull
pop
mov
cmc
inc
stc
inc
cmp
xchg
mov
pop
xchg
or
pop
jmp
dec
cmp
push
pop
xchg
xchg
shlb
pop
xchg
jge
adc
fisubrs
sbb
pop
or
adc
cmp
in
mov
sbb
lods
or
xchg
pop
or
test
inc
add
test
jle
push
push
stc
mov
shlb
in
jbe
and
and
inc
mov
mov
scas
sub
pop
je
rcll
in
sahf
cmp
and
sbb
lcall
inc
dec
lods
mov
js
dec
movsl
inc
inc
lods
sub
jno
sub
lock
mov
or
cmp
adc
loope
adc
add
hlt
stos
sbb
addb
jmpw
mov
lahf
adc
xor
lahf
xchg
dec
mov
in
sarl
push
pop
push
das
xchg
dec
dec
jp
test
icebp
cltd
mov
lea
xchg
lret
fwait
pop
ljmp
push
js
inc
sub
cmpb
out
in
and
inc
out
mov
sbb
sub
inc
subb
sahf
insb
enter
fsubp
test
adc
popf
jmp
repz
sarb
ljmp
add
fiaddl
cmp
inc
loop
out
roll
and
add
insl
in
test
cmp
insb
bound
hlt
jge
push
pop
push
xor
xor
mov
lods
sahf
fisttps
ds
insl
add
shll
dec
pop
adc
cs
xor
leave
and
jg
cmp
out
inc
add
sub
dec
out
or
mov
lods
dec
cmp
sti
int3
cmp
adc
mov
mov
add
jmp
fcoms
mov
jbe
jo
lock
sbb
lret
addr16
sti
sub
out
insl
sub
out
repz
fs
aad
je
cli
enter
push
jns
mov
pop
push
jbe
pusha
sti
popf
stos
cmp
inc
stos
jae
fldt
pop
mov
adcl
adc
into
mov
arpl
fisttpll
movsl
push
push
iret
jae
outsb
decl
outsl
lea
pusha
outsl
adc
das
xchg
mov
call
sbb
dec
cmpl
pop
je
dec
lock
iret
pop
mov
dec
xor
pop
rorb
pop
les
cli
and
jl
push
push
xor
and
ret
repnz
jnp
movsb
shr
cmpsb
pop
ds
test
ret
fs
mov
mov
mov
jge
jge
pushf
pop
addr16
cs
loopne
int
fwait
enter
push
dec
jle
adc
dec
mov
or
aaa
mov
cmp
xor
out
insl
rorb
mov
fstl
gs
call
movsb
cli
cltd
mov
mov
repnz
adc
push
or
jge
mov
push
mov
lea
adc
pop
push
int3
mov
mov
push
add
test
rcrb
push
hlt
icebp
push
jge
pop
jnp
jmp
mov
pop
jle
in
mov
cmp
dec
sub
add
push
adc
in
mov
icebp
ret
shr
inc
mov
pop
and
jns
xchg
call
mov
out
xchg
xchg
loope
jno
rcl
fsubl
ret
lds
mov
loop
sub
cmp
jnp
mov
add
mov
push
int3
and
repz
ret
lods
push
sar
pusha
rcll
adc
mov
ds
repnz
and
inc
xchg
in
loop
aas
std
mov
cmp
push
lods
shlb
movsb
push
and
fstl
popf
fmull
sub
xor
sub
or
xor
xor
dec
mov
rol
lods
jmp
mov
iret
cmc
or
in
xor
jae
adcb
jp
or
shrl
pop
or
mov
insl
sub
push
sbb
rorb
dec
jno
mov
arpl
sub
inc
sub
mov
pop
aas
adc
ja
ss
mov
ja
mov
rclb
pop
mov
js
adc
fildll
dec
xchg
sti
and
xor
mov
cmpl
adc
in
adc
xor
mov
jo
test
dec
ficoms
sahf
adc
shrb
cmp
push
mov
inc
sbb
xlat
outsb
dec
lcall
pop
dec
mov
sti
mov
cmpsb
aaa
xor
cmp
cmpsl
loop
fwait
insl
adc
and
sub
out
and
xchg
jae
sbbb
aad
mov
pop
ljmp
cmp
mulb
mov
movsl
xchg
push
cmpsl
lret
adc
sbb
mov
daa
mov
or
push
mov
test
sub
hlt
stos
mov
popa
scas
test
bound
addr16
sahf
pop
and
jb
je
dec
jo
cmp
sub
ja
mov
dec
jns
xchg
roll
movsb
dec
mov
outsb
jne
sti
adc
cmc
inc
mov
mov
cmc
loop
test
mov
or
rcr
sbb
xlat
in
popf
sbb
stos
cmp
inc
and
fisttpll
jmp
inc
inc
insb
mov
push
dec
inc
mov
jnp
push
adc
inc
pop
incl
daa
call
cmp
lret
and
orb
pop
xchg
pop
scas
inc
sbb
and
xchg
fdivs
adc
aaa
es
fsubrs
and
ds
jbe
int
icebp
lock
fnstcw
pop
mov
iret
je
mov
cld
and
movsl
sbbb
fimuls
lret
movsl
inc
call
adc
lds
loopne
push
insl
push
xchg
jo
sbb
inc
movsb
jb
sahf
xchg
ds
nop
push
and
cmp
test
sbb
out
pushf
push
mov
insl
fmull
or
pop
mov
pop
out
push
cmp
xchg
mov
dec
test
js
popf
and
shll
pand
repz
popf
repnz
popa
icebp
mov
jg
pop
rolb
jbe
dec
jmp
lcall
push
loop
scas
adc
pushf
mov
and
imul
es
popl
xchg
rorb
insl
push
mov
scas
jg
add
fwait
cs
jo
aad
mov
adcl
jmp
lahf
jnp
dec
xlat
jb
mov
dec
sub
cmp
lods
sub
adc
add
loopne
sbb
out
test
inc
bound
pop
aaa
push
out
inc
inc
je
mov
and
les
aaa
xor
mov
push
out
imul
int3
fidivrl
ret
adc
popf
pop
call
adc
cli
movsl
mov
cmp
js
sbb
sub
popa
es
imul
add
cmp
push
jmp
cmp
adc
pop
sahf
xor
testb
in
mov
cmp
popf
xlat
es
pop
xor
push
xor
lods
inc
hlt
jmp
mov
inc
mov
cltd
stos
xchg
cmp
jae
idivb
and
cmp
sub
ret
or
mov
and
inc
in
sti
lods
push
xor
push
lcall
jmp
bound
add
inc
jg
test
xchg
pop
test
test
xor
dec
imul
lret
ss
addr16
sbb
bswap
sti
jo
sbb
stc
sbb
or
insl
inc
pop
inc
lods
enter
mov
aaa
das
ror
dec
push
scas
lods
jecxz
cmpsb
add
mov
fcompp
dec
imul
inc
imul
adc
sub
in
jecxz,pt
mov
pop
sbb
lret
xor
dec
mov
and
xchg
xchg
ljmp
popa
test
push
dec
mov
adc
clc
or
xor
sbb
testl
jle
fistps
rcl
or
xlat
sub
push
pop
adc
hlt
sbb
adc
iret
in
clc
and
outsl
rcrb
test
mov
cld
add
jae
repz
or
out
push
cmp
dec
cmp
mov
xchg
lods
or
jne
jnp
push
arpl
fisttpl
fsubl
neg
mov
ret
mov
jge
insb
stos
lock
or
sbb
stc
jbe
cld
call
pop
sahf
es
and
mul
xchg
jg
mov
int
xorl
cmp
mov
cmc
addr16
aad
rol
push
sbb
call
pop
xchg
inc
push
mov
xchg
stos
inc
data16
sbb
enter
adc
loope
mov
negb
cmp
jbe
jl
test
inc
fisubs
jmp
cmp
bound
xchg
adc
imul
lods
shlb
mov
push
inc
std
xor
pop
or
xchg
or
jmp
pop
shrl
ja
mov
push
in
adc
or
ret
and
mov
enter
inc
add
mov
sar
jp
jge
cmc
cli
fucomp
das
pop
push
repz
insb
jmp
mov
and
inc
or
lahf
enter
jge
addr16
jle
or
adc
adc
push
mov
dec
sub
out
vmptrld
out
icebp
push
cli
pop
pop
movsl
sbb
test
push
test
test
or
nop
mov
out
mov
out
inc
movsb
out
cmp
xchg
aad
or
pop
xor
repnz
pop
inc
and
or
lock
add
mov
cmp
test
loop
outsb
sahf
cmp
dec
lock
sub
push
push
ret
cmpsl
lods
adc
shll
jne
push
jecxz
mov
test
mov
mov
jnp
and
mov
and
sbb
push
cmpsb
add
ret
lock
js
stc
cmp
lods
inc
inc
movsl
ja
add
pop
push
pop
mov
fmull
push
or
inc
lock
push
adc
stos
pop
cs
xchg
inc
jns
imul
jg
and
sub
jns
pop
popa
mov
jmp
or
mov
stc
mov
adcl
cmp
stos
xor
test
push
mov
push
jnp
adc
and
push
daa
out
adc
aas
xor
or
adc
sbb
jp
and
ljmp
inc
lock
mov
sbb
or
adc
and
les
mov
cmpsb
jmp
sahf
call
jno
sub
loop
ret
jmp
in
mov
push
dec
sub
mulb
daa
add
mov
pop
mov
shll
dec
mov
inc
push
sbb
aaa
hlt
mov
mov
jl
add
or
imulb
loopne
test
pop
fldpi
jge
inc
jge
adc
mov
roll
lret
add
jge
jp
adc
mov
cmp
jg,pn
jp
mov
rorl
mov
movsl
sbb
jns
inc
cmpsl
jg
in
or
arpl
inc
jl
add
xor
jecxz
rclb
repz
ret
std
fldcw
les
mov
popf
movsl
in
cmpsb
pop
sbb
ljmp
xchg
testl
fnstsw
jecxz
mov
jno
shr
pushf
or
xlat
fwait
les
pop
in
jb
cmpsb
mov
mov
rclb
sub
fsin
enter
icebp
mov
out
pop
imul
pushf
cmpsb
jbe
scas
mov
jbe
aaa
jle
shl
gs
mov
push
adc
ds
imul
pop
stos
adc
xchg
mov
xchg
lods
sub
test
xor
xchg
mov
aam
pop
pop
repnz
lcall
pop
fwait
cmp
and
out
movsb
and
ds
pop
fnstenv
vmwrite
add
int3
or
in
call
movsl
test
pop
inc
adc
mov
pop
negb
ss
sub
or
imul
dec
dec
mov
mov
adc
fsubl
mov
push
sti
lea
divb
sahf
out
lock
or
movsb
call
in
loop
imulb
ror
mov
dec
mov
daa
mov
into
lods
pop
cmc
and
dec
fiaddl
jp
dec
dec
sahf
xor
in
insb
push
popf
cmpsl
jno
int3
xchg
mov
push
les
sbb
lea
and
pop
je
lcall
sti
mov
lret
imull
mov
aad
push
