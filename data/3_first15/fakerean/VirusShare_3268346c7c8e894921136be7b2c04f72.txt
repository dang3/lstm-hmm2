sbb
add
mov
pushf
mov
add
out
int
pop
sbb
dec
cmp
add
xchg
arpl
mov
mov
pop
lock
and
test
sub
jo
rcll
nop
xor
or
sub
stos
test
jnp
inc
ds
inc
push
movsl
lock
or
push
dec
sbb
xor
sub
and
and
jne
sub
pusha
mov
out
pusha
inc
sbb
ss
lods
lods
ffree
mov
jbe
xor
mov
ljmp
pop
je
mov
cld
mov
scas
outsl
inc
cwtl
push
daa
fildl
lds
fs
xor
mov
add
ror
push
push
shrb
adc
xor
mov
rcll
dec
xor
divb
ret
adc
shr
inc
jbe
lods
daa
sub
sub
adc
fmul
sub
scas
call
lea
loop
xchg
js
int
sbb
dec
cltd
hlt
popf
lods
xlat
jbe
outsb
inc
leave
dec
and
stc
pop
lcall
cli
or
es
dec
pop
cmp
jmp
filds
mov
lret
int
mov
popa
cs
mov
into
mull
adc
rclb
push
push
repz
xchg
mov
fadd
mov
mov
test
mov
inc
out
mov
xor
in
popf
jae
inc
add
jl
fdiv
in
xor
divb
out
adc
jnp
lods
bound
das
inc
out
pop
in
pop
fsubr
push
addr16
lods
adc
loopne
push
push
mov
in
arpl
int
jmp
push
dec
daa
xchg
adc
dec
stc
cwtl
sbb
jl
out
jo
pop
add
fsts
in
mov
insl
sub
fidivrs
mov
xor
pushf
jne
xchg
or
je
jl
imul
test
leave
lahf
add
sub
lds
mov
cmp
notl
or
fcomp
mov
les
xor
insl
pop
test
jg
jge
adc
push
push
xchg
add
sbb
mov
scas
adc
scas
add
pusha
rolb
pop
inc
lods
add
xor
sbb
push
jae
cmpsb
loope
jns
mov
xor
loopne
add
leave
xor
lret
pop
pop
mov
inc
xor
dec
and
mov
xorb
add
sub
clc
and
adc
jl
hlt
add
pop
pop
push
aaa
jmp
mov
mov
subl
push
mov
adc
les
popf
popf
mov
push
sub
popa
inc
pop
enter
cli
fcmovu
jbe
xor
inc
mov
dec
inc
lret
inc
mov
outsl
push
inc
jge
sbb
loop
mov
sbb
xor
mov
shrl
icebp
and
leave
in
sahf
bound
lods
mov
and
dec
fdivrs
xchg
cmpsb
sub
dec
mov
jl
enter
fwait
jg
in
mov
scas
or
sti
insl
lahf
xchg
insb
movsb
add
sub
dec
and
out
mov
jae
adc
jp
and
or
sahf
rcll
xlat
popf
push
loope
rcll
sub
jo
push
pop
inc
mov
jo
sub
into
call
mov
xorl
xchg
xchg
mov
or
movsl
lods
in
enter
roll
or
sti
mov
das
aam
push
and
sub
push
nop
sti
lods
and
pop
mov
dec
xchg
add
loopne
mov
xchg
push
pop
arpl
cli
in
adc
mov
pushf
dec
test
inc
aam
or
lret
adc
jle
rcl
xor
cmp
mov
add
dec
stc
mov
jns
xchg
cmpb
scas
adc
mov
sahf
cld
sbbb
test
pushf
mov
mov
jns
call
cmp
lret
mov
je
push
mov
lcall
pushf
pop
mov
ret
pop
cmp
pushf
addr16
in
out
push
repz
inc
lret
scas
jp
lret
cwtl
pop
rcrb
popf
push
mov
mov
in
push
mov
xchg
frstor
fs
fnsave
cmpsb
outsl
out
ljmp
mov
push
js
adc
inc
adc
ret
xor
inc
out
das
call
sub
pop
dec
mov
mov
xchg
mov
sub
dec
sbb
mov
add
mov
movl
push
out
cli
sub
int
xchg
scas
mov
loop
outsl
out
xchg
pop
pop
fldl
sbbl
mov
xor
push
xchg
pop
inc
dec
iret
xor
ja
lds
imul
mov
dec
mov
or
std
cmp
or
or
cmpsl
lea
lret
and
aad
push
pop
push
add
cmp
sti
xor
idivb
sbb
sahf
inc
jno
idivb
jmp
adc
xchg
sbb
movsb
sbb
adcl
mov
jnp
inc
fdivs
mov
stos
pushf
adc
popa
mov
enter
push
outsb
xchg
out
in
adc
add
movsb
dec
push
insb
xor
or
inc
jmp
cmp
outsb
aas
mov
cld
xor
push
cmpsl
pop
sub
push
cmp
adc
mov
repnz
cmpsb
dec
jbe
ret
push
dec
dec
shlb
inc
inc
xchg
das
fs
pop
push
mov
pop
cmp
fnstcw
inc
mov
xor
dec
js
test
push
imul
das
sbb
cmc
scas
movsb
gs
imul
insl
pop
gs
int
push
insb
push
in
inc
rcl
int3
cmp
jge
movsb
js
jns
and
mov
repnz
pop
in
bound
mov
popa
subl
imul
ja
push
outsl
xchg
out
sub
jge
sub
out
xchg
int3
or
mov
and
inc
ret
dec
cmp
pushf
je
shlb
push
jae
cmp
adc
push
sbb
test
lea
inc
cmp
jb
stos
sbb
jmp
push
mov
sub
fdivs
leave
xlat
in
cmp
and
jecxz
aaa
divb
mov
in
pop
jg
test
mov
sbb
inc
sar
xor
inc
adc
jge
and
pop
jns
adc
aas
mov
out
mov
xchg
push
sub
add
sti
test
sbb
dec
sar
pop
mov
loop
stc
pop
adcl
lret
test
push
mov
arpl
lods
pop
mov
inc
xchg
ss
mul
ret
pop
lods
or
repz
mov
fisubl
and
pop
repz
leave
push
mov
pop
push
rclb
in
mov
jns
mov
mov
aaa
fcoms
xchg
lcall
movsl
scas
mov
cli
mov
add
dec
iret
mov
insb
cmp
pusha
dec
pusha
add
mov
call
mov
popa
loopne
shr
je
fstpl
out
cwtl
jmp
dec
aad
or
movsb
mov
push
jp
xchg
mov
and
sbb
cmp
cmpsb
and
push
xor
inc
add
xchg
xchg
scas
bound
loop
xor
pusha
push
cld
js
xchg
out
add
sbb
mov
fs
push
pushf
call
test
xchg
add
scas
sbb
cld
jae
dec
in
cmpsl
stos
cmpsl
mov
out
div
adc
lea
pop
cltd
cld
hlt
icebp
push
cmp
sarb
fbstp
and
fldenv
mov
lahf
scas
sbb
jle
mov
gs
repz
daa
or
insl
gs
aas
nop
mov
adc
xchg
gs
and
cwtl
pusha
xchg
push
movsl
mov
add
sub
jmp
rcrl
ds
cli
pop
and
mov
je
adc
push
icebp
xor
and
inc
mov
lcall
jnp
or
lcall
cwtl
jo
pop
pusha
sbb
fisttpll
mov
xor
cmc
shrb
push
ret
jne
nop
mov
cmp
test
addr16
dec
jle
movsl
aad
adc
and
sub
add
pop
leave
mov
movsb
aad
in
idivb
adc
mov
enter
shll
xor
inc
adc
stos
subl
or
int
and
fsubs
gs
push
jecxz
clc
test
and
int3
dec
mov
pop
or
ror
push
lret
xchg
cld
pop
movsb
sub
adcl
loopne
into
cmp
jecxz
popa
push
cltd
push
fcomps
xchg
xor
push
push
add
imul
mov
movsb
test
out
test
icebp
int3
xor
sbb
fsubl
sbb
xor
xor
fldenv
pusha
ljmp
adc
sbb
push
subl
sub
clc
xchg
pop
jle
mov
stos
xchg
mov
loope
aaa
pop
jl
sbb
lret
in
sub
in
lock
mov
sbb
dec
fucom
in
mov
and
sub
dec
cwtl
pop
mov
push
jecxz
sub
rol
aad
xchg
push
insb
adc
pop
mov
push
lahf
dec
loope
cmp
fisubl
rorl
jle
mov
sahf
sub
dec
mov
fsubp
jno
mov
add
loop
mov
xlat
repz
es
inc
mov
repnz
xorl
call
or
fmuls
cmpsb
sub
test
out
mov
or
xchg
into
test
fwait
out
test
shr
sub
int3
aam
cltd
pop
mov
mov
sub
push
sahf
ds
test
sub
jmp
xchg
cmp
shrb
rol
mov
fdivrl
sub
push
hlt
dec
cmpsl
fwait
pop
push
cmp
mov
add
push
sti
and
scas
out
cltd
lret
les
cld
andl
testl
adc
aad
and
mov
dec
mov
lahf
sbb
frstor
sti
movsb
push
xchg
fistl
sub
scas
cld
adc
call
sbb
push
sub
mov
inc
sbb
sub
in
gs
stos
imul
std
jns
sub
inc
xchg
pop
pop
mov
xlat
outsb
sbb
call
imul
ss
pop
inc
and
hlt
dec
outsb
mov
pop
inc
push
push
pushf
xlat
cmp
stos
movsl
les
mov
dec
pop
loopne
imul
mov
fwait
fwait
or
jo
mov
adc
dec
shrl
jg
mov
xchg
lock
test
or
insb
lock
push
fdiv
call
decl
out
xchg
or
push
inc
rcr
mov
mov
adc
mov
jne
in
in
jo
pop
fs
mov
testb
xchg
mov
pop
sub
sbb
repz
xchg
jb
aad
cmpsb
jge
lret
rol
and
insl
xchg
xchg
dec
mov
ja
jno
cli
push
data16
scas
dec
and
es
lret
cmc
adc
xor
aas
lret
xchg
out
arpl
insb
movd
mov
mov
jecxz
scas
mov
mov
mov
pop
mov
in
mov
test
push
sub
sar
jns
scas
sbb
cwtl
ljmp
inc
das
inc
frstor
sbb
xlat
cld
repnz
xchg
push
jnp
shlb
pop
jno
or
pusha
inc
stc
cmp
daa
xchg
sub
sbb
inc
inc
sbb
dec
cld
xor
adc
imulb
aam
dec
push
adc
ljmp
outsl
xor
inc
outsl
shlb
movsl
and
les
mov
jg
sub
mov
movsl
vprotd
fistpl
mov
das
mov
ficoml
ljmp
xchg
cmpsb
mov
push
andb
imul
xchg
ret
pushf
add
add
sbb
sbb
mov
lcall
fldenv
sub
fs
into
jnp
nop
pop
out
push
ljmp
loope
adc
jge
xchg
push
push
xor
and
dec
pop
push
or
mov
movsl
data16
pop
and
sub
jmp
mov
cmp
jnp
cltd
psraw
aad
jecxz
lcall
leave
int3
cmpsb
fsubrs
enter
fdivp
or
jl
or
insb
test
adc
fisttpll
in
inc
sub
mov
push
outsb
push
mov
xchg
xchg
xchg
mov
and
es
daa
jg
pop
lods
push
ret
sarb
push
add
xchg
data16
aaa
or
fwait
cmp
mov
mull
or
es
lods
sbb
push
mov
jbe
or
jne
test
fwait
les
mov
fildl
mov
mov
aam
pop
cmpsl
xor
mov
movsb
shll
mov
inc
sub
movsl
iret
xor
loope
and
inc
into
jnp
inc
push
push
jecxz
mov
mov
fiadds
fs
pop
pusha
xchg
mov
pop
jmp
int
lret
or
lock
and
mov
in
and
pop
std
mov
enter
jp
inc
les
jo
mov
clc
call
repz
lock
cmp
es
push
cmpsl
stc
das
or
dec
mov
in
dec
or
in
out
fisttpll
aas
test
frstor
inc
roll
add
std
xchg
jge
fidivs
sub
mov
mov
mov
pop
dec
adc
cmp
imul
xchg
inc
bound
icebp
adc
xor
imul
push
stc
and
push
cld
xlat
mov
rcll
jae
inc
cmc
mov
cli
arpl
enter
lcall
inc
call
out
xlat
rorl
gs
icebp
or
add
dec
ja
dec
popf
sbb
inc
fsts
pushf
inc
adc
or
inc
xchg
ffree
mov
ror
and
loopne
or
ljmp
in
sar
sub
aad
inc
cmpsl
and
mov
insb
je
sbb
push
or
inc
lcall
fstp
pop
enter
xchg
mov
pop
mov
lods
fidivrs
paddsb
push
inc
addr16
test
cli
nop
jp
pop
mov
xchg
int3
andb
jmp
addr16
inc
les
stos
ljmp
sbb
rol
je
lds
enter
ds
imul
push
cmp
mov
shlb
adc
xor
xor
jnp
inc
stos
mov
mov
push
or
cld
mov
xor
inc
aas
mov
sub
cs
lret
push
push
xchg
unpckhps
stos
std
stos
std
in
mov
cmpsb
lods
jns
add
adc
mov
repz
fadd
xor
mov
out
jge
jbe
xchg
and
push
mov
gs
aas
ds
adc
mov
pusha
xchg
push
xlat
aas
loope
jmp
add
xchg
xor
popf
cltd
pop
cmp
sahf
dec
jg
or
xlat
or
xor
cld
cmp
jg
push
lock
mov
xchg
sbb
in
mov
ja
xor
xchg
pushf
pop
jo
call
addb
dec
gs
jle,pn
rolb
or
mov
add
jmp
mov
test
xchg
or
mov
sub
and
push
scas
jno
add
cmc
cmp
call
inc
cmpsb
inc
fimuls
inc
test
mov
mov
pop
mov
inc
loope
or
pop
mov
fiaddl
cmp
adc
enter
xor
xchg
std
sti
lcall
mov
dec
dec
add
cwtl
push
push
insl
cmp
subl
test
nop
cmp
mov
mov
outsb
out
aad
adcl
lea
divl
xor
inc
movsl
mov
fucomi
in
add
mov
jge
sahf
mov
pop
test
or
adc
cmp
mov
in
imul
imul
aas
mov
rcrb
cli
xlat
aas
mov
and
mov
popf
push
scas
and
or
ljmp
jp
out
mov
xor
push
push
and
mov
sarl
int3
adc
inc
leave
rcll
loope
lret
cmpsb
into
test
jns
popf
ja
mov
cmp
sbb
arpl
movsl
fldt
pop
icebp
mov
add
rcl
adc
mov
repnz
push
add
repz
sub
push
xchg
cmpl
push
leave
inc
shlb
rcrb
xchg
sahf
push
xlat
pause
std
mov
pop
mov
sub
imul
inc
inc
lock
fwait
mov
adc
cmp
jne
out
push
mov
xor
in
inc
xchg
lods
mov
jmp
ds
arpl
test
mov
inc
xor
ror
pop
cmp
fcomps
roll
mov
subb
sbb
out
pusha
push
adc
jns
xchg
fidivrs
stos
ret
leavew
and
dec
shll
pushf
mov
sar
adcl
sub
push
repz
sbb
fnsave
lock
jmp
jmp
cs
pop
and
clc
scas
aas
adc
cld
push
pop
fwait
cmc
xchg
or
out
int
cmp
cmp
dec
push
clc
sub
push
das
dec
sub
ljmp
or
jno
outsb
xchg
jno
lods
fsubrl
in
push
sbb
popa
nop
cmc
movsl
addr16
lret
pop
jg
out
sub
clc
mov
adc
fsubrl
rolb
ja
das
add
or
mov
mull
out
mov
out
les
rclb
inc
xlat
iret
out
cmp
repnz
out
cmp
fwait
xor
fiaddl
negb
shll
sub
and
imul
dec
pop
nop
dec
stos
aaa
jnp
hlt
shl
xchg
das
mov
decb
push
jne
cli
in
and
mov
sub
jbe
pop
xor
dec
dec
icebp
pop
loop
cmpsb
xchg
sub
jnp
sbb
gs
mov
and
ss
into
loop
fnstenv
sub
mov
adc
mov
mov
xchg
sahf
test
bound
push
lcall
inc
adc
fdivs
cmp
fldenv
cmpsb
icebp
push
jecxz
in
mov
repnz
test
fwait
lcall
jg
fnstcw
call
dec
jge
mov
mov
fcmovbe
fsubrs
hlt
pop
aaa
sub
out
mov
pop
cmp
jns
xchg
inc
jmp
daa
rol
loopne
push
sti
test
js
dec
lahf
outsb
dec
mov
cli
dec
stc
push
or
decb
cmp
jl
jmp
das
lret
fsubs
xor
aas
pop
add
or
roll
mov
inc
cmp
pop
mov
sti
jbe
sti
jg
into
mov
xchg
lds
mov
dec
jb
lea
clc
push
shlb
lods
jle
inc
cmp
ja
or
or
fldt
in
push
xlat
scas
out
dec
pop
dec
es
xchg
test
jg
cltd
lahf
xchg
add
jp
add
xor
inc
imul
mov
mov
mov
aas
out
mov
jo
cs
mov
cwtl
xchg
inc
in
ljmp
scas
sbb
jmp
leave
mov
xlat
int3
pop
iret
mov
mov
cmp
add
loopne
aaa
xchg
jns
daa
xor
imul
sub
ja
test
stos
faddl
mov
mov
shl
rorl
stos
dec
add
or
pop
dec
dec
aaa
call
pusha
push
mov
sar
mov
cmp
pop
out
sbb
pop
inc
outsl
fcompl
ret
fsubl
and
fiaddl
cmp
divb
and
pop
mov
mov
lcall
jp
inc
fldcw
cmpsb
pusha
testl
jmp
mov
cmp
sbb
or
jne
loopne
add
ja
cmp
sbb
xchg
xor
xchg
and
outsl
mov
push
cmpsl
xchg
mov
leave
sub
jae
cmpb
xchg
loop
cmp
insl
clc
dec
filds
mov
xchg
in
int
cltd
xorb
pop
cmp
mov
getsec
sub
push
nop
cmpsb
jge
dec
dec
push
fwait
adc
mov
sbb
xor
fisubrl
leave
jno
bound
xchg
loopne
movsb
push
or
cmpsl
nop
push
cld
dec
and
jp
in
fcmovnb
sbb
inc
imul
out
push
cs
pop
add
dec
inc
adc
jno
inc
bound
push
mov
xchg
out
and
jns
std
clc
ds
fmulp
push
negb
je
or
xor
sub
xchg
add
dec
push
inc
out
and
lods
push
mov
jnp,pt
sbb
sbb
sahf
sub
in
pop
in
lcall
jl
jae
or
test
mov
mov
ss
inc
cmpsl
popf
mov
and
sbb
gs
pop
push
pop
shll
mov
push
jb,pt
sti
movsl
outsl
bound
ljmp
jns
cmp
pop
sub
notb
cmpsl
mov
sub
push
jmp
pop
xchg
into
sti
clc
and
sbb
icebp
jbe
sub
inc
cmpl
xchg
or
xchg
pop
out
cmpsb
imul
int
les
jne
pushf
inc
repz
popa
pop
sbb
mov
sbb
xchg
adc
push
mov
cmpsl
int
jle
insl
add
outsb
jbe
rcrb
inc
sbb
inc
jae
call
popf
sbb
inc
imul
iret
test
xchg
mov
js
rclb
aam
lods
test
cmpsb
mov
hlt
cmpsl
push
or
push
add
jmp
push
cmpsb
nop
sti
lea
push
cli
add
xchg
icebp
inc
in
lds
fwait
cmpsl
movsl
sbb
xchg
notl
mov
cmp
inc
pop
inc
inc
fwait
xorb
dec
jb
fldt
push
mov
jne
xorb
jp
fsubl
or
mov
notb
pop
repnz
fdivrp
mov
jmp
addb
mov
nop
outsb
imul
outsb
pusha
cmp
shrb
fildll
iret
sbb
std
out
and
pop
ja
xor
xor
cmpsb
xor
div
or
sub
sub
mov
cld
cltd
adc
inc
add
cli
mov
mov
les
mov
xor
negl
xchg
leave
cmc
mov
push
adc
dec
movsl
das
stos
inc
sti
sub
xchg
hlt
mov
and
jmp
mov
xchg
inc
mov
push
jmp
sub
out
or
xor
push
pop
inc
or
lahf
out
call
mov
add
add
inc
jp
mov
insl
and
push
inc
or
ljmp
sub
pop
daa
inc
push
fcmovne
pavgw
push
out
das
nop
in
int
lret
push
push
adc
popa
pop
orb
ret
ja
iret
leave
popa
cmc
push
test
divps
cli
and
add
nop
adc
loop
push
daa
ret
mov
out
lret
xchg
sbb
push
xchg
fcmovnbe
and
daa
pushf
push
sbb
and
xchg
sbb
aaa
daa
imul
leave
adc
jno
imul
jne
inc
enter
imul
cld
outsb
cmpsb
cmp
jmp
pop
sbb
ret
jmp
mov
pop
dec
and
in
in
out
mov
jo
out
sbb
dec
jmp
imul
enter
aaa
fsubp
or
adc
outsl
xor
notl
push
dec
and
add
ds
xchg
mov
in
mov
push
les
sbb
mov
mov
add
fcomi
dec
adc
icebp
inc
cld
fnsave
jno
sbb
iret
add
cmp
sbb
scas
sahf
fbld
mov
jmp
aam
pusha
sub
pop
and
test
sub
lret
push
xchg
add
xor
jecxz
sbb
jmp
push
in
sub
loopne
and
adc
sub
rcr
cmc
xchg
in
dec
mov
jae
sbb
push
in
sbb
inc
sbb
sbb
jnp
mov
fsub
jne
push
mov
cmp
lock
xchg
xchg
xor
mov
rcrl
cmpsl
xchg
push
push
fwait
mov
inc
dec
xor
insl
jbe
mov
pop
push
loopne
les
mov
jp
fdivp
push
bound
fisubs
in
lahf
lahf
push
outsl
movsl
ljmp
mov
push
sub
add
mov
mov
arpl
std
xlat
pop
aad
mov
jge
shrl
xor
fwait
and
movsb
pop
std
xchg
mov
sahf
xor
out
loope
xor
fwait
inc
inc
jg
inc
iret
push
data16
les
subb
ret
imul
jbe
xchg
fs
jb
mov
andl
fxch
or
adc
jl
je
sahf
pop
sbb
gs
cmp
ds
fstps
mov
jmp
sbb
dec
leave
daa
and
adc
mov
add
cmc
in
loopne
repnz
sbb
jbe
ret
adc
inc
jno
movsb
cld
xchg
mov
mov
lcall
dec
mov
lock
push
rolb
rolb
cmpsl
dec
test
mov
js
xorl
gs
jp
jnp
push
nop
arpl
pop
xor
movsl
iret
lock
repz
adc
ja
jecxz
push
ret
mov
leave
insb
cli
inc
mov
lods
sbb
xorl
sbb
adc
push
push
push
dec
xchg
xorb
and
addr16
pop
push
mov
jbe
pop
into
xchg
adc
adc
jge
jb
fidivrs
dec
and
or
xchg
mov
sub
out
push
cmp
cmp
mov
inc
xchg
leave
pop
xlat
adcl
mov
or
pop
or
out
pop
js
nop
fbld
punpcklwd
sti
addr16
push
outsb
sbb
mov
ljmp
fwait
scas
pop
out
or
dec
pop
inc
jge
sbb
aaa
je
push
leave
std
fs
lods
leave
pop
add
cld
mov
adc
shl
fcom
or
add
cmpl
xor
push
repz
lea
jo
or
push
add
xchg
mov
inc
xchg
jp
dec
insl
pop
cmp
sub
push
mov
and
mov
adc
jne
test
aad
faddp
test
or
int
popa
sbb
out
mov
in
mov
add
push
cmc
mov
push
ror
ljmp
sbb
push
inc
adc
mov
dec
sub
jnp
cltd
xor
shll
idivb
xor
xor
andb
insb
in
lahf
loope
push
jl
push
jbe
popf
ljmp
jno
shll
mov
cmpsb
lret
jge
icebp
int
inc
rcrl
test
repz
jge
add
jns
cli
and
shl
sub
mov
sti
xchg
xchg
adc
stos
adc
cmp
daa
inc
cld
repnz
adc
sub
add
loop
xchg
xor
mov
lds
in
in
xchg
call
pop
push
sbb
push
cmpsl
cmpsl
inc
hlt
sub
clc
cmp
ja
push
aam
popa
pop
je
sbb
jle
pop
push
mov
insb
daa
and
dec
bound
into
mov
inc
xor
inc
inc
sub
sub
rolb
imull
inc
lret
rorl
adc
test
imul
int
cli
push
xor
dec
insb
sbb
imul
mov
push
mov
sarl
gs
adc
imul
arpl
add
std
mov
das
xchg
lcall
mov
sbb
shll
fmul
lcall
out
rcrl
adcl
lds
inc
aaa
clc
clc
xchg
aaa
jns
pop
popa
mov
les
mov
and
imul
jecxz
and
adc
int3
setns
mov
sbb
out
andb
and
or
xor
pop
mov
icebp
ljmp
stos
bound
cs
mov
sarl
sbb
pop
mov
push
mov
sub
dec
sub
lock
adc
push
mov
test
pop
xchg
push
xlat
cmc
int3
aaa
sti
xor
sub
add
lock
adc
jp
add
stc
push
cld
push
push
mov
lods
movsl
outsb
pop
and
mov
xchg
cmc
int
jne
cld
int
psubw
mov
subb
leave
hlt
jb
xor
jp
je
sti
les
adc
sbb
jl
mov
aaa
bound
adc
out
adc
out
or
push
pop
cmpb
stos
sti
movl
lcall
push
lds
stos
loope
push
inc
mov
xchg
mov
test
pop
sbb
sub
or
sti
xchg
mov
or
addl
sub
inc
or
loopne
mov
xchg
add
jg
sbb
xor
aaa
js
sub
add
inc
lods
lods
or
push
fs
xor
or
test
iret
and
xor
pop
js
dec
int3
loope
cmpsb
inc
mov
adc
pop
adc
jns
jnp
and
xchg
cli
xchg
mov
add
shll
in
rorl
xchg
movsb
insl
mov
shlb
push
cltd
rcrl
mov
xlat
aam
push
out
ret
out
xchg
mov
mov
aad
mov
lock
movsb
xchg
jecxz
sub
repz
lock
dec
xchg
ljmp
ss
stos
xchg
or
sbb
sbb
push
mov
dec
imulb
xchg
std
pop
push
ljmp
push
out
mov
push
clc
or
inc
inc
inc
and
jge
cld
fists
test
jmp
repnz
adcb
sti
lahf
je
aad
cmp
mov
hlt
mov
xchg
popa
rcrb
mov
jle
test
xor
repz
shlb
mov
fsts
hlt
mov
es
movsl
cli
clc
jge
jecxz
mov
mov
or
inc
bound
mov
pop
jns
cwtl
jp
sub
jno
push
xchg
mov
test
sub
xchg
mov
aam
cwtl
out
paddw
mov
iret
xchg
adc
std
out
ss
jmp
mov
loope
out
sti
loop
push
lods
mov
dec
dec
adc
shl
shl
fdivr
je
push
jne
jae
sbb
sarl
sbb
stos
dec
stos
xor
inc
mov
shrb
repnz
sub
daa
loop
arpl
insl
or
pop
ss
add
push
jmp
int
rcrl
cli
mov
arpl
xchg
add
adc
cmp
or
sub
inc
sbb
inc
sub
mov
mov
mov
mov
dec
mov
popa
sbb
pop
sub
sub
out
cmc
ja
stos
cmpsl
mov
setbe
jp
sbb
xor
enter
fcmovu
lahf
frstor
inc
out
mov
cmp
sbb
pop
mov
or
mov
addl
ss
sub
push
lret
mov
mov
daa
sub
lods
push
dec
cmpsb
outsl
daa
cmpsl
lods
hlt
rorl
aaa
jnp
ljmp
mov
mov
sarl
das
sub
mov
iret
shlb
push
and
or
mov
lock
push
mov
incw
jbe
int3
or
rol
test
adc
sti
fstpt
andb
in
fwait
cmpb
pusha
hlt
mov
adc
cmpsl
sbb
repz
lock
fbstp
js
or
sbb
add
and
dec
pop
jge
mov
or
stos
mov
mov
add
jo
aad
fcmovnbe
fs
mov
inc
daa
adc
mov
add
loop
aad
iret
test
pop
lret
xchg
dec
movsl
insb
stos
sbb
loop
cmpsl
push
push
sub
xor
lods
ljmp
mov
fistpll
xchg
cmc
mov
enter
sub
add
pop
call
sbb
enter
fimuls
xchg
dec
lahf
lret
jle
call
imul
fnstcw
psadbw
clc
out
mov
sub
mov
iret
daa
add
push
push
inc
shlb
jo
out
and
shlb
add
bound
lret
shl
call
imul
or
cli
sbb
pop
add
add
mov
pop
xlat
or
xlat
sub
push
stos
lds
fists
aam
mov
lret
out
subb
dec
aas
arpl
dec
mov
das
push
or
lods
mov
jae
add
xor
fldt
xchg
mov
aas
push
xor
popa
mov
jno
mov
jo
sbbl
data16
jbe
add
movsl
and
testb
in
push
bound
push
pop
ret
mov
movsb
inc
shll
movsl
jb
fcompl
cwtl
pop
jmp
or
data16
inc
mov
push
inc
shrb
and
adcb
aaa
adc
cwtl
pop
dec
insl
daa
add
xchg
sub
push
out
mov
pop
jae
js
mov
addr16
and
and
in
clc
xlat
test
movsl
mov
sub
pushf
test
subl
std
dec
mov
dec
subb
jns
fwait
jle
outsl
adcl
mov
mov
add
pop
call
mov
adcb
sahf
pusha
sahf
push
xor
test
inc
mov
pop
fstpl
adc
jns
jle
xchg
jae
mov
pushl
pop
push
add
xor
fidivrs
cmpsl
jne
push
fdivp
xlat
pop
adc
xchg
out
pop
lods
mov
arpl
push
and
ljmp
xor
outsb
cmp
movsl
cmp
cmpsl
shl
pop
xchg
movsb
cmpl
jo
add
int3
lods
mov
mov
push
dec
dec
mov
sbb
xor
rcr
xchg
ljmp
dec
mov
loope
cmpb
scas
xor
cmpl
sti
sbb
inc
neg
add
sti
scas
imulb
pop
popf
mov
aaa
cmp
cmc
xor
push
pop
gs
fldt
mov
icebp
add
jae
inc
xchg
test
mov
pusha
sbb
jb
aad
jno
sarl
data16
imul
jo
inc
xor
out
sbb
jbe
sbb
stos
cs
sub
xor
sbb
mov
jo
mov
jo
std
cli
popf
pushf
sbb
aaa
mov
xchg
pop
ds
out
call
gs
out
and
dec
pop
lock
rcll
add
xor
imul
add
lea
dec
in
scas
test
daa
mov
int3
or
mov
xlat
lods
clc
icebp
pop
cld
cmp
jbe
or
movsl
cmpsb
inc
xchg
dec
push
out
adc
add
mov
fsubrp
xor
lea
inc
insb
or
and
mov
js
adc
fsubp
stc
out
mov
ret
jp
lds
sbb
loopne
cmp
stos
jbe
sbb
adc
test
inc
imul
in
mov
fstps
ja
jge
call
loope
mov
out
test
jno
jno
in
lret
test
or
or
and
inc
mov
or
ficoml
cld
adc
stos
aas
inc
bound
mov
test
jnp
or
jae
or
aam
adc
jge
in
daa
into
pop
pop
jg
add
scas
out
jb
pusha
ret
int3
test
xchg
int
icebp
loopne
rorl
mov
jmp
mov
cmp
push
pushf
hlt
stc
cmp
mov
dec
cli
call
sarl
sub
iret
andb
adc
clc
sub
mov
sbb
pop
dec
pop
push
test
sub
es
add
add
cmp
inc
cwtl
adc
fsub
imul
jecxz
adc
xchg
mov
or
push
jb
cmc
jle
pop
cld
mov
cs
mov
out
pop
xor
andb
addl
dec
insl
xchg
sbb
insb
fwait
mov
mov
inc
dec
pop
xchg
sub
adc
jbe
xorb
push
stc
jns
stos
xchg
aas
insl
fstps
jae
sub
mov
xor
lds
fisttps
mov
stos
lods
sbb
imul
gs
sbb
out
int3
je
pcmpgtd
es
and
lret
int3
pop
jle
aaa
call
xchg
cmpsl
add
sahf
loopne
dec
inc
fsubl
mov
in
push
cmp
pop
movb
js
fcomps
outsb
aam
jne
lock
sbb
arpl
lret
mov
pop
dec
mov
sbb
aas
fistl
push
iret
mov
sbbb
or
mov
push
out
mov
test
rcrb
sub
lcall
pop
add
sbb
stos
xchg
roll
out
sbb
lods
xchg
dec
mov
sub
in
call
fs
xchg
mov
movsb
orl
mov
stc
pusha
adc
push
shlb
jmp
mov
sbb
add
dec
ss
out
test
mulps
jb
stc
ret
sarb
cmpl
ds
jb
cmpsl
or
mov
leave
push
stos
xor
insb
jmp
jmp
sahf
gs
les
push
mov
int
repnz
ljmp
lret
fs
xor
lret
cmp
mov
stc
push
jl
outsl
add
pop
xor
lea
ficoms
incb
cwtl
sub
xchg
mov
idivb
jb
arpl
and
mov
inc
sahf
xchg
or
inc
adc
mov
mov
mov
pop
xchg
mov
divl
jne
cli
hlt
pop
adc
push
cmpsb
insb
movsb
push
outsl
es
pop
jne
ds
jmp
bound
sbb
cmp
ror
cmpsl
jo
outsb
add
push
ss
cmp
test
lods
das
sbb
das
jnp
scas
push
stos
add
sub
outsl
lock
push
add
loopne
push
inc
ret
insb
out
aam
sbb
iret
dec
popa
sbb
imul
les
mov
adcl
test
sub
test
jmp
mov
insb
loopne
xchg
inc
push
imul
fdivrp
xchg
pop
sub
xor
mov
or
and
push
ret
stos
xchg
xchg
push
fwait
pusha
je
mov
sbb
rolb
arpl
cltd
and
subl
scas
fisttpl
add
daa
in
mov
cli
lea
cmp
push
mov
and
in
push
lods
mov
xor
mov
into
roll
clc
mov
nop
push
decl
jbe
fwait
cltd
popa
sub
xor
aas
sbb
repz
add
cmp
mov
dec
pop
gs
sub
gs
dec
xchg
in
fsubrl
int
dec
insl
nop
jp
mov
pop
test
and
jno
fs
xor
cltd
dec
mov
cli
or
lahf
inc
hlt
scas
inc
clc
jns
into
or
sub
jge
call
inc
push
mov
fwait
adc
in
pop
add
fisttpll
fistpl
adc
push
adc
mul
dec
adc
dec
sbb
jge
mov
add
hlt
cmp
and
cltd
jne
push
aam
cmp
and
adc
negl
push
inc
sti
pop
lods
movl
mov
cld
into
cmp
pop
push
sub
lea
movsb
cwtl
rolb
xchg
repnz
imul
fbstp
sub
and
and
popa
push
mov
mov
in
insb
lret
cwtl
mov
jno
insl
imul
xor
pop
ret
dec
roll
cli
fisubrl
inc
add
cmpsl
pop
pop
pop
mov
dec
mov
out
mulb
or
cmp
in
sub
je
movsl
jae
mov
in
and
push
cmpl
faddl
xor
daa
add
stos
jp
pop
shll
mov
mov
jecxz
push
jl
movsl
xchg
call
xchg
std
xchg
imul
pop
inc
mov
inc
push
lahf
ret
mov
xchg
and
inc
imul
xor
outsl
pop
jno
mov
add
cltd
aad
mov
xchg
xor
pop
ror
dec
add
pop
das
and
add
sub
xchg
loope
test
mov
dec
cld
or
jecxz
in
stos
int
jbe
push
loop
clc
and
cmp
gs
fstpl
sub
cmp
ds
sbb
lahf
pop
pop
sub
xlat
scas
fistpl
inc
inc
ds
aam
mov
dec
inc
insb
mov
icebp
xchg
mov
sub
les
test
dec
movsb
and
sub
scas
fbld
and
sub
out
push
call
int3
cmpsl
aas
es
inc
mov
call
sbbl
decl
mov
and
xchg
aam
push
adc
jno
test
int
inc
sbb
mov
add
dec
mov
add
push
lret
xchg
and
in
xchg
sub
pop
dec
cmp
cmc
xchg
out
push
in
push
loope
mov
mov
sub
fidivs
aaa
pop
insl
push
push
jb
inc
push
inc
jb
daa
mov
xor
daa
repnz
xchg
mov
and
notb
cmpsl
add
repnz
leave
imul
negb
loopne
ret
cltd
lea
je
iret
rolb
lret
inc
hlt
mov
mov
pop
inc
mov
cli
sub
xchg
inc
and
dec
clc
cmpsl
stos
xchg
jo
je
aaa
adc
mov
je
jnp
dec
arpl
push
adc
jno
jne
inc
icebp
mov
pop
jl
pop
push
icebp
mov
push
sti
mov
jmp
aas
dec
jl
push
sbb
icebp
bound
lret
mov
sti
lret
jmp
nop
inc
mov
les
rclb
ds
jle
loop
sbb
mov
sub
lods
cmp
dec
pop
js
jb
and
cmp
int3
cltd
mov
aam
xchg
cmp
icebp
pop
jle
rol
test
mov
inc
fidivrl
into
dec
ss
repz
dec
push
repz
pushf
inc
dec
int3
cwtl
add
iret
cmp
lret
adc
and
fadds
inc
push
scas
cmp
cmpsl
idivl
xchg
stos
push
add
dec
mov
fldl
test
in
xor
jne
cmp
pop
inc
xlat
inc
daa
out
xor
lods
in
adc
jecxz
and
test
pop
scas
jno
sbb
imul
sbb
les
mov
imul
cmp
mov
clc
add
andb
lds
sub
insb
rolb
aam
call
pop
pop
add
pop
pop
inc
mov
and
outsl
popa
inc
je
rcrb
clc
xchg
cmp
pop
fld
pop
lods
icebp
mov
dec
dec
outsl
lods
leave
adc
stos
mov
mov
jmp
mov
or
js
outsb
cmpsb
aam
inc
shr
add
cmp
outsb
gs
xor
test
or
test
jge
dec
out
lods
jge
and
shll
or
push
icebp
pusha
fs
mov
jecxz
cmp
mov
outsb
stc
popa
jecxz
cli
inc
or
adc
mov
cmpsb
cmc
inc
cmp
lret
lcall
or
pop
pop
xchg
cmp
push
js
mov
push
ljmp
js
sub
and
icebp
push
lret
fmull
mov
cld
adc
and
push
add
aaa
mov
cmp
nop
daa
pop
imul
dec
cld
mov
inc
inc
mov
lcall
into
outsl
sbb
shll
ljmp
or
pusha
out
inc
js
jb
xorl
pop
jb
cmp
adc
sbb
mov
inc
xor
out
fcompl
push
stos
test
je
lock
fists
add
mov
mov
push
inc
or
aad
push
mov
dec
in
fldcw
mov
jb
lods
jp
ljmp
into
sub
pop
mov
fists
push
fucom
iret
and
stc
repnz
lret
sbb
inc
jnp
setbe
mov
ret
pop
push
cmp
loope
or
xchg
cmp
sub
test
outsb
xor
cli
fsubrp
xor
inc
push
in
adc
sub
xor
imul
jno
out
adc
jmp
dec
jo
xchg
lock
daa
sbb
out
imul
inc
mov
cmp
mov
xor
xchg
jb
outsb
lea
xor
lods
mov
pop
push
xchg
cli
add
push
push
ljmp
outsl
aaa
mov
pop
cmp
sub
sbb
clc
inc
xor
lahf
xor
faddl
mov
mov
aad
cmp
xor
dec
mov
in
sbb
inc
push
push
rcll
std
sbb
into
lock
daa
clc
movsb
subb
xor
pop
xor
stos
xchg
mov
push
or
mov
test
stos
test
mov
fists
jno
idivl
mov
mov
xchg
adc
jmp
mov
xchg
das
xchg
pop
in
addb
in
adc
jmp
push
pop
dec
js
and
fnstcw
cmpsl
pop
imul
jge
clc
jge
in
mov
mov
mov
popa
mov
pop
dec
pop
add
pop
dec
loopne
sub
es
push
jecxz
inc
mov
call
in
cs
enter
cmp
rol
inc
loop
adc
inc
in
jb
sahf
push
lea
mov
shlb
test
pop
addr16
cmc
inc
pop
mov
mov
push
je
imul
add
adc
enter
and
in
mov
push
sbb
repz
push
hlt
push
jo
cmp
push
js
mov
add
psraw
push
or
or
mov
inc
and
hlt
cli
int3
or
inc
pushf
push
jno
adc
push
sub
pop
nop
pop
add
aam
repz
dec
mov
adcb
mov
lea
data16
dec
repnz
push
pop
out
rorb
push
daa
xchg
mov
and
xor
aaa
bound
int3
xchg
scas
xchg
mov
pop
jo
jno
pop
sub
into
std
dec
jecxz
pop
xchg
inc
push
xchg
inc
wrmsr
jg
movsb
stc
imul
sub
les
mov
addb
jne
jl
out
jo
scas
xchg
xchg
aam
xor
lahf
les
shl
push
xchg
and
add
insb
sub
arpl
sub
leave
or
leave
mov
and
mov
lock
inc
mov
push
lea
stos
adc
aas
mov
andb
cltd
aam
mov
ljmp
lods
xchg
int3
dec
sbb
mov
lahf
fwait
roll
adc
jae
mov
outsl
leave
pop
sbb
add
daa
mov
pop
leave
mov
fcoml
xchg
scas
or
imul
push
fwait
pop
inc
dec
and
cmp
xlat
adc
mov
mov
mov
cmp
lods
jns
xchg
stos
es
pop
and
fildl
mov
in
or
lea
imul
cmp
jo
sbb
mov
mov
add
mov
ljmp
popf
push
arpl
add
mov
jbe
cltd
sub
cli
ss
push
pusha
inc
loop
or
sub
pusha
push
inc
dec
jg
jmp
ret
inc
sbb
xchg
outsb
addb
xor
lahf
mov
ds
das
xor
pop
ret
cmpsl
or
or
mov
mov
or
sbb
jo
ffree
std
lods
aam
int
and
xchg
enter
pop
cmpsl
lods
fbld
mov
data16
lock
xchg
fistl
cmp
aas
push
fistl
inc
lahf
notl
dec
sarl
js
xchg
out
add
xchg
fadds
test
out
or
fcmovu
xchg
ficompl
pushf
out
aam
mov
ja,pn
jl
cmpb
sahf
jno,pt
cmp
add
mov
mov
js
xchg
loope
fprem
cltd
cmpsb
pop
push
or
jne
pop
add
cmp
and
pushf
das
and
test
inc
lret
ja
popa
jnp
test
icebp
stos
int3
dec
cmp
push
add
ljmp
aad
xorl
clc
fs
arpl
rcrb
fidivrs
pop
int3
lods
clc
mov
add
fiaddl
mov
pop
in
fidivrs
jle
sub
jmp
fucomp
jnp
push
pushf
cmp
xor
pop
sbb
orl
push
push
repnz
push
pop
arpl
inc
sti
mov
mov
icebp
mov
xchg
ja
add
clc
outsl
mov
mov
test
sub
adc
int
imul
out
inc
sbb
jmp
or
mov
testl
jle
les
and
push
mov
jnp
test
push
out
shl
mov
jbe
nop
add
mov
cld
mov
adc
rclb
popa
inc
and
push
negl
popa
or
fistpll
pusha
cmp
xor
ffree
popa
jb
sub
test
xchg
adc
inc
add
daa
jno
in
inc
lods
and
xchg
mov
adc
sub
imul
scas
cli
shl
outsl
xchg
in
xor
aas
rcl
jne
scas
fstp
jae
test
add
jmp
push
jmp
fs
mov
mov
sbb
cwtl
int3
xchg
sbb
inc
test
or
lock
es
mov
add
in
pushf
and
mov
push
mov
xchg
sub
mov
cmpsb
cli
lds
xchg
xor
sbb
inc
jns
pop
movsl
mov
andl
pop
sbbl
lock
fwait
sbb
and
inc
nop
arpl
adc
push
adc
sbb
mov
or
mov
xchg
cmp
push
pop
and
cmp
nop
adc
fisubrs
adc
jae
test
int3
repz
ds
mov
add
dec
scas
add
fisubl
fldl
sub
cmpb
mov
test
in
push
sbb
add
xchg
cltd
sbb
inc
adc
sbb
jns
sbb
dec
shll
movsb
ficomps
and
loop
xchg
ljmp
fs
push
xchg
and
pop
loop
dec
cltd
jne
mov
cmp
fcoms
fdivrl
mov
pushf
fildl
jne
cmpsl
pop
movl
jecxz
outsb
fidivrl
jbe
rorb
jmp
xor
dec
movsl
call
dec
rol
pop
adc
pop
cmp
lea
fistps
jo
cltd
mov
dec
jo
jl
mov
dec
pop
test
xorb
jge
shll
stos
pop
push
xorb
jle
or
and
lds
push
xchg
dec
xchg
mov
mov
sub
adc
mov
rorl
pop
out
mov
adc
ljmp
lret
xchg
mov
mov
ftst
inc
adc
mov
push
xchg
xchg
scas
imul
sti
dec
dec
mov
mov
sar
and
shlb
adc
adc
jp
mov
mov
mov
jg
pop
stos
adc
inc
adc
insb
adcb
push
xor
or
xchg
mov
ret
icebp
mov
mov
mov
das
cs
ds
jnp
sbb
mov
and
pop
cwtl
inc
dec
fstps
jns
xor
std
cltd
iret
xchg
test
sbb
cmp
or
mov
dec
inc
stos
or
sub
push
lret
mov
fsubs
cld
out
ds
lods
sbb
es
mov
pushf
sarl
xor
sbb
mov
pop
jnp
dec
pop
sbb
aaa
mov
std
pop
jo
jmp
pop
rcr
stos
jo
into
mov
and
outsl
dec
arpl
aam
cmpsb
lahf
jns
popa
mov
adc
loop
mov
out
es
int
and
movsl
insl
push
pop
or
scas
push
or
insb
xchg
mov
aaa
icebp
scas
cmpsl
and
or
stc
sbb
loopne
mov
imul
jbe
lock
lods
test
scas
jp
xchg
faddp
cli
ror
outsb
sti
jno
mov
cmp
add
push
dec
push
sbb
out
ljmp
int3
cs
sbb
aas
popf
in
enter
dec
pop
sbb
and
lea
pop
xchg
xlat
push
jo
cmc
ss
in
divb
jg
outsb
lret
pop
mov
int3
inc
inc
or
push
pop
cmp
add
xlat
add
cmp
lcall
mov
sub
xor
and
jl
jle
ss
jecxz
mov
scas
shll
clc
inc
js
inc
call
adc
incb
shll
pop
pushf
loope
cli
cmp
test
push
and
lcall
dec
or
adc
mov
mov
pop
sub
fs
push
pop
mov
icebp
loop
adc
ljmp
mov
aaa
mov
jb
and
int3
out
xchg
pop
clc
mov
inc
adc
push
insb
gs
out
xchg
int3
test
shlb
lret
adc
js
outsb
jg
push
jns
popa
insb
dec
mov
mov
inc
xchg
je
xor
lock
data16
sbb
xor
hlt
es
and
test
jae
fstpt
push
lods
push
pop
ret
pop
dec
dec
mov
mov
loopne
xor
cltd
out
rorb
xchg
std
mov
stc
sti
stos
aaa
cmpl
cmpb
or
pop
inc
test
pop
pop
mov
cli
xor
enter
js
ret
mov
jl
xorl
and
add
sbb
sub
mov
rol
add
insb
or
in
jne
jg
outsl
pop
mov
data16
popa
movl
popa
gs
and
add
test
ja
call
in
xchg
icebp
adc
push
ds
add
popf
popf
insb
inc
xchg
xchg
inc
aas
cmp
and
scas
ja
cmp
pop
jnp
and
testl
sub
lods
mov
xchg
jns
mov
test
outsb
mov
or
imul
add
xchg
insb
sub
xor
sti
jle
or
cwtl
test
je
sbb
test
push
dec
in
jmp
dec
sub
cmc
stos
pushf
cmc
sbb
cwtl
shlb
lret
sub
dec
test
lock
imul
or
fdivrp
mov
sti
pop
cmc
je
push
ret
in
in
xchg
dec
pop
mov
pop
xor
cmp
add
push
rorb
in
std
daa
sbb
mov
popf
pop
pusha
inc
std
in
fisttps
or
push
out
xchg
lret
pop
adc
pop
iret
dec
mov
jb
push
scas
gs
mov
or
fists
jg
in
pusha
in
xchg
lahf
daa
mov
enter
jnp
loopne
xchg
rclb
xor
jg
loope
fs
mov
std
adcl
xor
push
fidivl
or
mov
cld
sbb
xor
sahf
lcall
in
pop
pop
leave
add
jmp
mov
jg
inc
mov
cmp
negb
fs
xchg
mov
pop
dec
jle
inc
and
add
and
sub
pop
cmpsl
sbb
sbb
pop
inc
aam
jae
mov
pop
dec
sbb
or
int3
shl
dec
pop
or
pop
xchg
xor
negb
clc
lods
and
cltd
loopne
iret
aam
add
scas
cmp
jl
mov
aas
xchg
pop
jae
or
jo
inc
xchg
enter
test
ja
mov
mov
stos
push
fimull
int
xor
repnz
loopne
cmpsl
mov
cmp
pop
aam
xchg
lret
out
pop
push
aas
push
not
adc
inc
pop
pushf
xchg
adc
sbb
jle
test
stc
andb
lahf
mov
enter
pusha
cmpsb
in
sbb
bnd
out
scas
leave
xor
stos
gs
xchg
xor
cmpb
push
rcrb
bound
pop
loop
adc
dec
mov
rcll
dec
pop
dec
or
push
mov
insb
fisubl
push
das
in
push
addr16
mov
mov
cmpsl
pop
scas
add
xor
xor
xchg
inc
mov
pop
js
xchg
push
and
jle
sub
cmpsl
dec
xchg
fwait
pop
lock
les
dec
addr16
cmp
jp
cmp
add
rcl
xlat
and
pop
push
std
inc
cld
xchg
jmp
and
and
push
das
jne
jnp
mov
xor
hlt
ret
leave
scas
and
shrb
les
mov
arpl
lret
cmp
add
das
popa
xor
inc
out
imul
sub
or
mov
dec
pop
int
mov
push
adc
or
inc
das
adc
cmpsl
sub
mov
in
push
mov
imul
sub
scas
imul
data16
cmpsb
popa
clc
jae
ss
cmp
inc
out
lahf
sbb
mov
jge
push
or
mov
test
xchg
lods
and
ja
mov
in
pop
push
pop
fsubrl
ljmp
inc
sbb
lea
movsl
push
cmp
pop
fcmovb
pop
dec
dec
mov
cmp
clc
xor
xor
lcall
leave
movsb
jae
xlat
cld
cmp
and
imul
adc
fnstsw
lds
mov
mov
xchg
jb
jmp
movsb
loopne
mov
jecxz
int3
mov
jp
xor
test
test
or
movsb
fcompl
stos
dec
roll
sub
or
enter
lods
pop
cmp
fidivl
mov
and
mov
les
xchg
jecxz
rcr
movsb
add
add
testl
push
jnp
sub
lods
push
ret
dec
jno
stos
cmpsb
mov
or
movsb
push
pop
pop
inc
loope
hlt
test
test
ret
pop
mov
push
xchg
cmpsb
mov
pushf
cld
shlb
and
das
ljmp
mov
nop
aad
dec
je
adc
repnz
stc
scas
sbb
loope
sarb
pushf
rcrb
mov
in
mov
xchg
or
xchg
test
push
add
aam
jp
mov
inc
pop
aam
aas
stos
sarl
push
push
jne
sub
test
fwait
aam
mov
aaa
mov
data16
sub
jns
divb
jecxz
outsl
dec
push
repz
xchg
test
jo
aas
repnz
and
cmp
mov
andl
mov
lret
xlat
xchg
inc
dec
imull
shrl
mov
aad
xchg
pusha
lahf
out
push
jae
jmp
cmp
mov
mov
jbe
ljmp
jge
dec
pop
mov
pop
or
jae
leave
cmp
insl
or
aas
in
xlat
sbb
pop
sub
or
inc
xchg
mov
test
fstl
loope
pop
adc
jb
out
inc
ljmp
dec
cmp
jg
jo
jge
push
subl
pop
dec
and
xchg
push
aam
rorb
push
fdivs
sti
jecxz
addr16
cmp
nop
pop
push
mov
add
and
cltd
repz
mov
mov
mov
xor
adc
dec
insb
xor
repnz
push
dec
add
mov
mov
test
outsb
or
pop
dec
jnp
loopne
int
cmp
sub
loopne
scas
sub
sarl
nop
cmp
cltd
jle
jo
jmp
add
loopne
mov
stc
mov
aas
mov
cmp
jo
adc
das
push
pop
inc
adc
aas
or
xlat
shl
mov
loop
idivb
mov
mov
cwtl
push
inc
bound
repnz
aad
inc
cmp
mov
xchg
push
xor
sub
jp
sub
adc
dec
fwait
adc
lret
pop
into
mov
jb
insb
arpl
pop
xchg
call
lea
mov
cmp
aaa
fwait
cmpsb
mov
insb
lea
std
or
and
test
inc
fwait
inc
out
sbb
inc
mov
shll
comiss
fistps
inc
and
cwtl
mov
mov
jo
xchg
ljmp
jb
addr16
mov
enter
sbb
mov
mov
or
outsl
mov
dec
sbb
mov
sub
sub
push
pop
cmp
mov
sbb
sub
mov
aaa
mov
mov
insl
cmp
lret
sbb
test
jnp
fwait
inc
xchg
inc
adc
jl
sub
hlt
sbb
aaa
lcall
and
aas
movsl
dec
xchg
inc
push
pop
push
push
xchg
aas
pop
lea
arpl
push
push
jbe
js
mov
jo
insb
pop
test
call
mov
popa
mov
fcom
lret
sub
mov
cli
fprem
shr
mov
sbb
push
in
ja
xor
jb
ret
mov
lds
sub
mov
enter
insb
insl
iret
adcl
jns
lret
mov
pop
adc
jae
mov
pop
movsb
decl
mov
mov
sbb
add
fistpll
pop
jae
add
iret
and
orl
mov
or
xchg
mov
rolb
xor
jnp
xchg
int
out
les
cmp
sbb
jecxz
pop
inc
sub
in
mov
push
in
sbb
leave
jecxz
sti
inc
push
ds
adc
mov
jns
cmp
xchg
in
loope
push
mov
push
inc
xorl
sbb
lods
mov
jbe
xor
popl
in
stos
xor
lods
insb
or
and
xor
int3
sub
sub
cmp
not
dec
leave
pop
ds
shlb
jmp
sbb
xor
mov
out
ret
mov
aaa
dec
push
sahf
inc
call
jl
jmp
mov
imul
enter
mov
outsb
pop
orl
testl
sti
dec
ficomps
and
popa
scas
dec
lret
pop
xlat
dec
pop
xchg
ret
mov
inc
std
dec
jmp
mov
or
sahf
inc
adc
or
push
into
int
into
or
mov
popa
dec
stos
in
daa
lea
stos
or
sub
inc
or
into
xchg
fs
addb
pop
mov
sbb
sbb
jo
push
adc
pop
pop
sub
in
loopne
loopne
and
and
in
sti
test
sahf
xchg
jbe
shll
mov
sbb
test
sahf
xchg
lods
dec
adc
mov
imul
dec
inc
sbb
test
lret
in
rorb
into
xorb
push
add
popa
or
je
pop
icebp
repnz
outsb
pop
jp
test
lret
dec
out
rclb
cmp
jmp
xchg
jmp
lret
sbb
mov
mov
mov
pop
inc
pusha
das
inc
cmp
rcr
stos
rcr
or
jge
mov
je
aas
sub
adc
aam
movsl
sahf
movsb
xor
xor
call
cmp
lahf
xor
sbb
lret
lcall
add
ret
dec
xchg
out
cmpsb
aad
jns
or
dec
nop
mov
mov
in
lret
arpl
mov
and
jns
repnz
jo
xor
mov
dec
repz
mov
jne
imulb
jle
xchg
mov
mov
inc
lock
mov
sub
cwtl
test
jo
lea
or
fninit
or
cs
mov
aam
dec
ffree
ret
movsb
mov
and
add
push
xchg
inc
ljmp
popa
fildll
mov
inc
pop
rcrl
fidivl
sarl
jmp
ficomps
lret
mov
stc
sbb
scas
mov
xchg
mov
lods
push
shlb
pop
xchg
xor
loop
cmp
mov
icebp
icebp
add
iret
xchg
int
push
pop
dec
push
xchg
jmp
jmp
repnz
rorb
mov
or
lahf
cmp
push
aam
push
xchg
int
shll
fnstsw
cmp
mov
or
xchg
faddl
mov
imul
in
add
push
sub
inc
push
lock
mov
es
movl
sbb
xlat
xchg
jge
fbstp
les
jl
inc
jmp
mov
test
movsl
iret
inc
stos
mov
loopne
jnp
aaa
and
jne
je
jp
pop
lret
lock
adc
nop
cltd
push
inc
mov
cmp
das
out
dec
dec
gs
ror
cmpsl
loope
xchg
pop
sbbl
ja
enter
or
movl
insl
fistpll
testb
cwtl
cs
out
stos
test
scas
pop
or
fxam
push
xchg
test
call
fstpl
jmp
xor
int3
or
fdivr
dec
icebp
shr
jp
movsl
add
mov
out
jmp
leave
jmp
mov
jns
jge
jge
pusha
movsl
jb
xchg
jb
out
mov
fcomp
fdivrs
adc
lahf
test
mov
jge
adc
add
dec
xor
cld
ds
add
movsl
sahf
loope
jb
outsl
cld
ret
add
rorb
pop
sahf
lret
leave
es
adc
mov
shlb
pop
loopnew
stc
push
insl
dec
stos
clc
cmp
cmp
lock
cmp
aas
dec
test
cmpl
repnz
lock
ja
inc
subl
lods
shr
sbb
inc
cmp
mov
or
lcall
mov
call
adc
push
mov
rcll
push
push
in
sarb
rclb
cltd
loop
xor
fnstsw
arpl
sbb
sbb
fsubl
push
lret
imul
nop
cli
jae
mov
mov
std
dec
orl
nop
out
je
xor
jle
sahf
std
mov
adc
test
fcom
mov
xchg
mov
and
ja
mov
sub
mov
push
cmpsl
fimull
std
xchg
xor
add
lcall
jp
in
pop
std
xor
push
mov
mov
cmpsl
jno
data16
pop
aaa
cmc
shll
sub
test
push
mov
mulb
dec
pusha
xchg
call
cwtl
mov
lahf
sub
sti
dec
jl
insl
sbb
xlat
dec
xlat
cmp
cmp
pop
mov
lahf
xchg
icebp
or
inc
fisttpll
cwtl
aaa
xchg
clc
test
or
mov
mov
ret
test
push
jb
sti
fsubrl
xchg
push
or
sub
mov
xchg
shlb
sub
loopne
cmp
sbb
jns
adcb
xchg
mov
inc
ja
mov
mov
pop
es
pop
add
jmp
add
xchg
gs
mov
adc
and
mov
dec
cs
icebp
inc
leave
loop
aas
enter
xchg
stos
sub
xor
rcl
fptan
fwait
mov
push
fsubrs
mov
rep
cmp
jp
lods
and
jle
insb
or
push
cwtl
dec
xchg
and
push
xor
push
cwtl
hlt
push
out
outsb
dec
dec
mov
push
int3
push
xchg
sbb
out
push
fnsave
jo
mov
sbb
dec
pop
test
les
cmp
nop
arpl
aad
gs
add
dec
test
inc
pop
mov
jns
lods
fadds
jnp
and
nop
aad
rcll
test
aam
mov
add
imul
xchg
mov
out
pop
stos
ret
hlt
int3
aaa
imul
dec
rorl
sahf
mov
lods
mov
push
icebp
ss
call
loope
xchg
push
fdiv
rorl
mov
negl
pop
xchg
xor
shll
cltd
xor
pop
lds
daa
test
clc
jle
xor
sahf
cli
arpl
mov
dec
mov
data16
clc
scas
out
test
jle
push
xchg
and
mov
pop
pop
shll
jo
add
dec
ja
bnd
or
leave
xor
xor
cmp
jmp
rcrl
jmp
ss
sub
xchg
inc
cltd
mov
mov
aaa
push
and
ds
and
adc
cli
adc
xor
loopne
rclb
push
xchg
fsincos
sbbl
dec
lock
cmpsb
frstor
jnp
pop
or
cwtl
aas
ljmp
lds
mov
or
add
mov
es
pop
inc
mov
dec
movsb
fsubrs
dec
mov
rclb
or
or
sub
mov
fcoml
jns
outsl
out
imul
inc
xchg
mov
mov
int3
xor
rcrl
mov
and
mov
inc
jmp
add
or
cli
imul
sub
test
or
out
jp
mov
mov
cli
test
aaa
push
push
movaps
insl
pop
adc
ds
lds
sarb
cmp
enter
sahf
pop
mov
or
mov
bnd
push
dec
enter
mov
xchg
inc
enter
cmpb
addr16
jnp
sub
fwait
hlt
and
add
inc
popf
fisubrl
addl
aas
lahf
cmpsb
mov
movsl
inc
pop
and
out
jg
dec
shll
lret
lods
pop
je
mov
fcmovnu
shrl
stos
daa
nop
pop
push
filds
arpl
sbb
shrb
sbb
into
and
and
mov
movsl
sti
mov
xor
push
xor
mov
cwtl
dec
xor
pop
sub
rolb
or
fisubrl
pop
xchg
push
adc
sub
stc
mov
movhps
jp
add
xchg
inc
fcmove
xchg
adc
mov
outsl
lods
dec
mov
or
jle
lods
mov
pushf
cld
adc
push
pop
xor
rolb
in
mov
adc
dec
lahf
movsb
jns
add
and
sbb
jbe
gs
fcoms
adc
test
sbb
dec
shll
sti
jno
loopne
add
pop
inc
cmp
test
dec
cwtl
or
cli
push
cmp
sub
popf
or
push
shll
jns
popf
xor
add
inc
test
adc
int3
icebp
dec
dec
out
and
xchg
popl
pop
hlt
mov
add
bound
xchg
jns
test
sub
notl
ret
call
inc
xlat
sub
push
mov
cmp
addr16
out
mov
mov
add
pop
cmpsb
enter
movsb
dec
push
inc
out
sbb
out
jnp
mov
jne
jl
rol
jge
aad
lods
test
lods
add
push
mov
cmpsb
insb
xchg
repnz
lock
call
rcl
loop
jecxz
mov
aad
dec
mov
jnp
cmc
lea
xor
pop
scas
in
mov
xor
and
loope
out
cmp
mov
imul
mov
dec
sbbb
flds
inc
ret
hlt
shll
push
mov
cltd
in
cmp
sub
pusha
mov
out
sti
lods
and
es
shlb
int
js
fnstenv
dec
inc
scas
fldcw
daa
cld
int3
jmp
cmp
inc
loope
or
popa
dec
iret
xchg
pop
xor
imul
bound
cmpsl
push
cli
adc
in
fnsave
xchg
and
pop
xor
lahf
ds
cmpsb
jnp
dec
cmpsb
test
arpl
adc
addb
or
pop
pushf
xchg
sbb
xor
addr16
jmp
xchg
outsb
decl
pop
movsl
xchg
std
and
scas
xor
dec
xor
pop
outsl
decb
or
jg
cs
hlt
pusha
lret
les
incl
aaa
xchg
out
inc
jo
fdivl
mov
das
mov
xor
ljmp
imul
dec
pop
mov
das
lahf
push
pop
mov
loope
sbb
jge
and
addr16
rcrb
call
jno
in
cwtl
mull
pop
insb
xchg
movb
push
lret
jno
dec
in
in
dec
pusha
xor
enter
xchg
lea
loope
cmc
movsb
inc
push
fdiv
mov
test
xchg
sub
rcll
sbb
dec
lea
mov
cmpxchg
into
dec
in
fdivs
clc
stos
ds
outsb
into
adc
or
lahf
in
js
in
lret
cmpsl
into
out
and
movsb
repz
lret
sub
jb
mov
adc
jne
mov
or
mov
ret
shll
xor
pop
pop
inc
iret
leave
outsl
rol
js
movsl
xor
call
dec
push
enter
lods
push
xchg
pop
pushf
pop
mov
ds
fdiv
in
data16
push
popf
idivl
sbb
adc
mov
dec
in
jbe
adc
sbb
fidivs
fbld
cmp
fnsave
sub
dec
sub
out
pop
bound
fcoms
cmpsb
mov
mov
leave
xor
jg
stos
js
out
data16
ljmp
ljmp
add
cmpsl
or
je
loop
add
pop
jle
daa
pusha
popa
call
pop
outsb
inc
lret
and
out
or
pop
fucomip
and
sub
lods
gs
xor
sahf
in
push
cmp
mov
test
lahf
sbb
outsl
cli
fcompl
sub
movsb
aaa
cmpsl
push
pop
out
js
pop
lcall
aaa
divb
inc
cmp
cmp
nop
pop
rcll
ret
jl
jle
xor
pop
pop
pop
cmp
lea
fwait
imul
les
dec
add
cmp
jo
cmc
cmp
shr
loopne
mov
lds
arpl
cmp
shlb
stos
or
rcll
sub
stc
pop
push
shrl
into
outsl
cmpsb
cwtl
add
add
fisttpl
sti
insb
cli
sahf
test
dec
and
xchg
daa
push
push
ret
jb
add
pop
dec
popf
cmpsl
jno
fsubs
cmc
adc
cmp
aaa
mov
mov
xlat
cld
pop
sbb
loopne
pusha
or
push
sub
dec
push
ret
andb
xchg
shr
fiaddl
ss
push
cmpsb
scas
cwtl
pop
jmp
andl
add
push
mov
mov
popa
stos
in
je
sub
pop
popa
xchg
mov
sahf
sub
cmpsb
sub
inc
jb
cltd
movsb
sbb
or
and
dec
ja
and
cmpsl
inc
jge
loopne
jae
mov
je
adc
pmaxsw
std
aaa
int
std
ror
int3
cmovg
mov
mov
dec
adc
push
and
insl
adcb
jae
cmp
cmpsb
dec
loope
clc
push
repz
lret
lods
inc
int
data16
sahf
lock
lds
adc
mov
sub
fstpl
lock
pop
rcrl
push
imul
cmpsl
push
bound
mov
push
cltd
out
xor
dec
or
jno
cmp
outsl
mov
paddusb
sti
mov
xchg
jge
shll
mov
or
push
in
push
insb
or
loop
xchg
xchg
cmpsl
fisubs
sbbb
mov
mov
iret
add
and
fistl
inc
mov
cmpsl
push
or
mov
aam
mov
std
sbb
sbb
shll
or
arpl
pop
in
xchg
fsqrt
leave
in
xor
ja
xchg
fwait
and
testb
lahf
mov
push
jecxz
jmp
sbb
xor
jnp
mov
stos
cmpsl
imul
or
and
daa
jo
cmc
rolb
pop
adc
jl
sub
add
inc
nop
fs
popf
mov
std
sbb
cltd
jecxz
pop
cli
xor
sahf
imul
mov
outsb
fs
jge
out
jmp
test
mov
or
add
cs
mov
sub
and
pop
sub
int
jnp
and
sub
inc
dec
or
call
mov
stc
loop
shrb
mov
stos
shl
jge
and
xchg
mov
sub
lods
push
cli
or
adc
xor
inc
fnstsw
cmp
nop
testl
xchg
std
jl
roll
or
cmp
and
out
mov
jl
adc
inc
push
mov
sbb
mov
xchg
sub
jecxz
sub
paddusb
sbb
fidivrl
pop
sbb
bound
adcb
mov
xor
ja
inc
jae
mov
xchg
inc
inc
mov
mov
xchg
dec
and
sub
out
push
xchg
cmp
movsb
sbb
arpl
xchg
lahf
in
mov
gs
inc
lods
call
adc
jbe
cltd
imul
aas
lret
cmc
outsl
js
out
icebp
sti
sub
les
push
jns
stos
adc
test
out
or
pop
rcrb
dec
pop
adc
shlb
adc
mov
push
cli
cmp
xor
jno
cld
dec
push
ja
je
push
shll
push
ljmp
xchg
mov
jp
movsl
mov
jmp
dec
insb
dec
das
in
push
or
in
push
clc
sub
sub
sub
push
pop
idivb
jmp
xchg
mov
cmc
xchg
movsb
mov
jae
jno
testl
pop
sbb
scas
faddp
cmp
mov
push
clc
ret
jl
jnp
popf
fidivs
cmpsb
nop
pop
xchg
testl
call
in
scas
or
cli
rcl
sub
xor
or
mov
mov
loope
data16
add
push
push
cli
es
out
push
pop
movb
and
cmpsb
push
push
gs
lret
imulb
push
add
insb
cmpsl
cmp
rorl
and
in
push
ret
pop
ja
lock
mov
out
ljmp
pop
push
mov
sbb
sarl
js
int
mov
inc
ja
cmp
push
mov
cwtl
mov
ljmp
pop
push
scas
sub
push
and
lcall
das
mov
push
mov
cltd
pop
push
loope
push
test
cmp
jecxz
add
cltd
andnps
pushf
mov
adc
or
add
iret
push
pop
loopne
push
pusha
scas
int3
pushf
ja
lods
insl
stos
mov
pop
nop
lods
add
rep
mov
insb
cmp
lock
jae
aad
int
lods
pop
push
mov
push
fwait
das
shrl
inc
xor
ret
loopne
add
or
dec
push
lods
inc
pop
lods
ds
mull
mov
adc
call
dec
jo
je
lock
xchg
std
icebp
jl
sti
lahf
jle
stos
cli
arpl
and
inc
push
pop
ljmp
pop
repz
add
lods
lds
mov
push
pop
pop
les
adc
jo
pop
cmp
ljmp
icebp
or
jmp
repnz
mov
pop
dec
sub
dec
cwtl
jo
jl
int
push
in
mov
test
mov
in
push
movsl
rcrb
and
xor
push
outsb
mov
lahf
cmp
and
jns
lcall
push
lret
cmp
inc
cltd
ret
cmc
pop
pop
cmp
mov
jne
cmpsb
jbe
nop
inc
cmc
aaa
cld
mov
mov
inc
sarb
mov
sti
push
push
pop
or
ficoms
cmp
imul
inc
cs
pop
movsb
sub
jp
aad
jge
xchg
or
in
jl
cmp
add
jae,pt
adc
mov
lcall
or
fcmove
mov
fildll
and
and
mov
mov
pop
xchg
add
push
or
stos
mov
sbb
pop
push
popf
cli
out
jns
pusha
inc
test
mov
nop
add
sub
jp,pn
and
xchg
mov
ljmp
sbb
roll
add
lcall
push
out
loope
mov
xor
xchg
lock
je
scas
aas
call
mov
dec
pushf
addl
call
jns,pn
xchg
enter
lret
daa
lret
sbb
test
lret
cmp
fcoms
xchg
mov
fsubr
mov
add
mov
nop
xchg
mov
push
je
cltd
pusha
test
mov
adc
sarl
sub
xchg
cmpsl
xchg
push
mov
sub
sbb
daa
popa
stos
dec
ficoml
and
int3
jge
jns
inc
jecxz
outsb
in
addb
int3
stos
and
lds
adc
iret
mov
sbb
leave
sahf
sub
inc
out
push
fistpl
mov
das
dec
out
in
lcall
cmpsl
popf
cld
cmpsb
and
mov
sbbl
sbb
repz
enter
in
add
jae
inc
shr
push
icebp
cmp
jp
add
add
mov
push
dec
push
enter
ds
dec
adc
stos
xchg
xor
dec
imul
pop
cltd
cltd
dec
stos
push
out
or
push
inc
dec
push
mov
mov
nop
pop
dec
push
push
cmp
jo
xchg
inc
rcrb
add
call
cwtl
push
icebp
sbb
aad
or
pop
push
stos
lahf
je
mov
cmpsl
loop
cld
popa
stos
or
and
rclb
jg
clc
pop
push
out
popa
fisubl
fsubrs
pop
fists
jbe
add
flds
dec
les
es
enter
jnp
inc
iret
inc
push
lcall
and
adc
mov
movsl
insb
cmp
add
fdivl
xlat
lock
out
aam
mov
dec
cmp
and
gs
jno
dec
test
aam
add
andl
xor
pop
aam
push
push
mov
in
subl
fwait
push
add
or
call
adc
sub
jmp
jne
pop
lock
mov
fisttps
dec
cwtl
hlt
aam
dec
jg
push
int3
sahf
clc
stos
push
adc
mov
inc
mov
addr16
call
movsb
fstpt
stos
or
pop
adc
xchg
cmc
dec
jbe
cs
movsb
xchg
pushf
sbb
scas
dec
sub
add
mov
loop
xchg
repz
outsb
mov
hlt
jecxz
repz
push
xor
adc
pop
push
jp
sbb
xor
mov
inc
push
cmpsb
ss
loope
and
inc
divl
es
push
popa
sbb
push
in
sub
hlt
mov
ffreep
ret
jmp
addr16
fs
hlt
cmp
imul
mov
inc
test
das
jne
sbb
fcmovnbe
cmpsl
pop
cli
je
jl
lea
imul
push
aam
mov
lea
and
push
xor
das
jno
pop
push
xor
cmpsb
jnp,pn
gs
and
std
jnp
inc
jne
pop
out
cmc
pop
adc
adc
jo
fwait
sub
lods
add
imul
cmc
pushf
adc
stos
jl
pop
ret
mov
mov
repz
out
sahf
inc
lret
ret
movsb
pop
xchg
jecxz
inc
mov
fsubrl
or
sub
adc
rorb
jmp
fs
fbld
int3
jno
mov
push
test
mov
ljmp
push
xchg
inc
adc
out
test
outsb
sub
imul
inc
neg
sbb
ss
outsl
jecxz
adcb
xor
sub
pusha
adc
inc
pop
jbe
jge
mov
and
jnp
cmp
in
rorl
sbb
add
xor
mov
push
jno
or
inc
jbe
mov
stc
rol
cmp
dec
or
or
iret
dec
xor
add
mov
xchg
les
nop
rol
cmpsb
add
dec
inc
xchg
mov
shrl
pop
cmpsb
repz
xor
and
ljmp
and
lret
repz
xchg
je
testl
push
lcall
jp
inc
mov
adcl
mov
cs
mov
movsb
aas
lea
nop
test
leave
add
es
lea
push
aaa
xchg
enter
jae
add
jnp
jl
call
outsb
fdivl
or
or
mov
icebp
repnz
sbb
sbb
test
add
jae
cld
lock
cld
mov
sbb
jg
sub
mov
mov
insb
gs
int
sub
sbb
ljmp
ljmp
ds
inc
mov
inc
in
add
scas
adc
stos
dec
in
push
fs
push
lahf
or
xchg
xor
push
enter
pop
scas
sub
out
sbb
movsb
jns
fnstsw
fwait
shll
movsl
mov
dec
lock
cmp
jecxz
mov
repnz
jp
test
sub
out
popf
push
shrl
repz
xchg
fisttpll
cmpsl
sub
xchg
inc
loop
and
or
cmp
push
mov
mov
and
clc
xchg
mov
imul
scas
pop
outsb
xor
xchg
jno
jnp
add
repz
ds
int3
and
sbb
scas
jge
or
nop
adc
push
lahf
cmp
mov
and
loopne
aaa
gs
dec
inc
pusha
sbbl
push
pop
sbb
sbbb
lock
aas
aaa
cmp
shll
jge
inc
aas
adc
or
mov
je
sub
arpl
stos
jp
jb
add
adc
push
repnz
sbb
sub
imul
fwait
insb
mov
sbb
xchg
mov
pop
mov
add
fistpl
pop
inc
sub
aad
or
nop
fldl
xchg
loop
lods
pushf
out
sub
aam
scas
sbb
sub
xchg
mov
jbe
enter
cmp
jbe
xchg
jmp
cld
or
sub
addb
and
aam
ret
pop
shll
adc
repnz
and
xor
or
fwait
jnp
popa
push
jae
sub
pmaxsw
lock
bound
pushf
inc
cmpsb
pop
aad
clc
pop
sub
in
xchg
sbb
lret
fimuls
mulb
in
popa
out
outsl
cld
mov
dec
and
push
mov
in
repnz
faddp
insl
lret
popa
pop
jl
ret
mov
adc
adc
sub
negb
inc
into
test
fsubp
sub
pop
fidivs
push
dec
mov
movsl
cmp
mov
pop
pop
cmc
icebp
daa
ds
mov
jle
gs
dec
dec
push
imul
test
xchg
call
pop
xchg
data16
push
adc
mov
fsubs
imul
popf
test
bound
jae
cmp
pop
inc
mov
jmp
mov
jge
fstpl
out
lds
sbb
dec
leave
in
push
lret
mov
or
jb
cmp
add
pop
sahf
movsl
daa
icebp
lcall
mov
sbb
fsubrs
sbb
or
aam
pop
mov
mov
push
data16
mov
inc
adc
cmp
stos
scas
add
fdivs
or
xor
push
push
dec
hlt
fistpll
push
mov
xchg
stc
test
je
mov
push
popf
mov
insl
jmp
sti
cld
pushf
xchg
and
mov
lea
add
dec
notl
xor
adc
out
sahf
leave
js
aam
adc
leave
outsb
adc
test
adc
and
div
mov
ljmp
movsl
ficoms
inc
call
movsb
leave
and
ss
jecxz
popf
pop
inc
inc
mov
dec
jecxz
cmp
xlat
lret
inc
daa
aam
push
and
push
dec
sub
mov
cmpsb
fidivrs
push
push
mov
or
lret
jo
faddl
into
das
jbe
mov
push
mov
popa
mov
ss
sub
jb
pop
mov
or
cmpsl
in
insb
mov
loope
xor
mov
mov
add
je
jo
jle
xchg
repz
sub
lds
xchg
ds
dec
jecxz
les
xlat
cwtl
cmpsb
and
xor
push
fistpll
xor
scas
and
popa
add
not
mov
fsub
mov
sub
xchg
mov
or
test
dec
dec
mov
loopne
out
xlat
push
pusha
jo
outsl
jmp
mov
fcoml
arpl
xchg
add
xor
pop
clc
cmpsl
mov
mov
cmp
pushf
jl
popf
mov
mov
and
pop
in
outsl
ljmp
mov
sbb
dec
dec
mov
cmp
cli
imul
in
xchg
fnstsw
xchg
lahf
mov
movb
dec
sub
repz
rcl
push
dec
mov
dec
lret
orl
xchg
xchg
mov
hlt
ret
mov
loopne
sub
aad
dec
test
insl
out
test
cmp
cli
pop
lret
lcall
jecxz
jns
xorb
scas
push
imulb
divl
mov
idivb
iret
cmp
add
mov
sbb
daa
inc
das
je
mov
std
mov
pop
repz
pop
lods
cmp
adc
cld
adc
add
jbe
bound
xchg
popa
mov
jmp
and
aam
pop
push
ret
mov
out
int3
lret
xlat
push
jne
data16
std
xchg
loopne
int
sti
pop
outsb
xchg
sbb
loopne
push
pop
mov
daa
jae
out
gs
pop
lock
dec
mov
ljmp
or
rcrb
sub
and
or
into
popa
hlt
sub
rcrb
insb
pop
sub
dec
imul
lcall
into
sub
aaa
adc
and
push
stos
test
sahf
andl
cmpsb
dec
jp
nop
add
sbb
int3
cld
push
sub
xor
inc
jle
push
iret
stc
ljmp
orb
xor
sub
adc
pop
sub
sti
and
inc
xorl
pop
jb
out
xchg
popf
pop
aam
insb
sbb
sbb
adc
xor
xchg
pop
xchg
out
sbb
sub
loopne
leave
loopne
xor
push
mov
mov
outsb
dec
jg
mov
into
mov
aam
and
adc
jecxz
movhps
push
and
push
rcrl
cmp
jg
test
lea
jae
inc
jecxz
or
adc
dec
ja
inc
ljmp
out
jns
cmp
cmpsl
aaa
jmp
xchg
mov
test
outsl
mov
jb
popl
aaa
ljmp
jmp
cltd
cwtl
nop
lds
adc
stos
push
jnp
mov
and
mov
das
fstl
sarb
inc
out
cmp
cmpsl
lcall
jne
loope
cs
jecxz
adc
lea
jne
test
in
mov
jnp
push
sub
lds
sbb
ret
mov
mov
inc
xchg
adc
into
aad
or
xor
outsb
cmp
push
test
dec
outsb
xchg
sarb
sub
sbb
lock
scas
out
push
fnstenv
jp
push
inc
add
sbb
xor
mov
mov
adc
clc
inc
test
mov
andb
cmp
cmp
lret
inc
jbe
add
lods
mov
dec
and
out
push
call
mov
movsl
mov
pop
hlt
push
enter
mov
js
adc
inc
and
ret
push
pop
xchg
mov
push
and
sahf
popf
mov
inc
add
dec
gs
or
add
or
pop
or
ret
jne
cmp
jl
std
inc
pop
fdivrs
outsb
jmp
mov
aam
dec
movsb
push
sub
push
inc
sbb
std
push
mov
pop
popf
or
mov
aas
mov
arpl
pop
push
push
add
ljmp
pop
fnsave
push
cmp
mov
icebp
ret
inc
push
push
repnz
jo
aad
les
dec
arpl
inc
fisttpl
data16
sbb
pop
push
outsb
pop
dec
sbb
and
sub
and
in
mov
jbe
dec
adc
fs
dec
gs
sub
sub
aad
mov
xchg
xor
sub
push
gs
push
daa
and
mov
das
add
add
test
push
jmp
dec
sub
sbb
adc
cmpsl
insl
cmp
add
and
xchg
mov
clc
xchg
add
fucom
fucomp
xchg
adc
mov
xchg
lret
lret
test
rcrb
aas
aad
add
stc
daa
mov
jle
fstps
icebp
or
push
inc
or
pop
aas
scas
daa
xchg
scas
sahf
fistl
inc
outsl
adcl
pop
xlat
inc
add
dec
xchg
xchg
dec
dec
ja
repz
js
popf
test
mov
shrb
jo
inc
xchg
push
loope
pop
pop
fidivs
lret
inc
pusha
loope
int3
imul
cmp
mov
pop
push
jb
ret
add
inc
and
iret
icebp
mov
push
mov
mov
in
lods
push
js
ds
cmc
mov
in
insl
push
jle
mov
jns
fstps
nop
and
je
ss
js
movb
add
mov
lds
dec
das
lcall
fbld
aam
mov
pop
mov
or
test
pushf
sahf
cmp
rorb
xor
push
test
test
aaa
ja
fwait
xchg
and
notb
xchg
mov
sbb
pop
popf
not
sbb
cmp
dec
mov
xor
icebp
inc
or
sub
test
mov
lds
das
and
jl
cli
cmpsb
inc
jns
sub
ds
aad
mov
pop
pop
xorl
mov
test
daa
dec
xor
test
mov
les
or
insl
inc
mov
adc
jne
pushl
insb
cmpsl
in
and
mov
imul
mov
in
xchg
jl
push
dec
dec
jno
out
mov
test
xor
adc
lds
push
out
sub
cltd
outsb
and
test
ror
roll
mov
ja
lods
xchg
das
outsl
adc
jne
icebp
in
std
or
dec
in
dec
mov
jne
xchg
or
add
imul
insb
loop
cmc
xor
cmp
jns
icebp
mov
orl
pop
xor
mov
mov
into
test
lds
adcb
test
inc
adc
sti
lcall
frstor
into
rclb
movsl
push
add
loop
sbbb
mov
outsl
or
imul
push
sub
xchg
or
sub
jae
mov
div
xorl
xor
out
lods
ss
dec
insl
xchg
std
sbb
and
mov
fidivs
cmp
pop
sti
xor
cmp
loop
daa
lock
mov
mov
push
push
xchg
popa
or
sbb
incb
ret
xchg
xor
loop
adc
xor
test
cmp
shlb
lock
cmc
loope
std
insl
dec
je
fisttpll
add
and
iret
mov
lcall
cmp
mov
cmc
pushf
xchg
mov
icebp
jge
sub
dec
cmp
cltd
lods
cmp
out
adc
stc
xchg
inc
adc
test
jnp
adc
pushf
cmp
dec
lods
mov
cmp
push
in
jmp
call
pop
mov
push
xchg
jmp
or
fwait
fs
adc
sbb
es
out
sbb
push
jge
repz
stc
iret
loopne
mov
js
scas
mov
jg
fdivrl
insl
es
jecxz
mov
into
loope
aas
mov
cs
dec
mov
dec
lock
inc
and
xchg
sbb
leave
sahf
out
adc
pop
stc
jo
xor
jg
sbb
and
lds
insl
testb
and
jg
jecxz
fisubrl
xor
mov
aaa
xor
sub
mov
aad
out
fcomps
xchg
test
out
add
push
xor
sbb
inc
mov
popf
add
pop
dec
sub
xor
cwtl
lret
ret
test
jge
add
jmp
push
std
inc
inc
adcl
cwtl
push
and
int3
xchg
inc
call
outsb
add
jmp
rclb
and
jmp
cmpsl
mov
xchg
dec
mov
cmovne
lret
sub
pushf
mov
add
call
cmovns
dec
sub
cmp
mov
jbe,pn
iret
out
pop
or
je
lock
jmp
iret
test
sbb
mov
js
rcr
imul
dec
icebp
cmpsb
rolb
mov
shlb
mov
test
sbb
jp
cmp
addr16
mov
test
mov
xor
out
xchg
pop
sbb
bound
push
add
adcl
icebp
bound
jno
dec
aam
jnp
lahf
aam
fnstcw
push
loop
adc
push
pop
push
push
mov
insb
push
and
int
shrl
nop
jecxz
ja
loopne
dec
dec
ja
pop
dec
in
sbb
movsl
mov
inc
xor
or
scas
cmp
out
ja
and
sbb
fidivrs
out
popw
sahf
xor
jl
cmp
or
jno
out
jae
mov
xor
bnd
in
es
jmp
out
in
lahf
adc
push
mov
cmp
jbe
addb
aas
and
or
fimull
jo
inc
and
sub
cmp
repz
lret
fnstsw
sub
cmp
push
pop
sub
cmp
and
mov
dec
jmp
mov
leave
test
movsb
jg
xchg
pop
pop
add
dec
lret
dec
mov
xchg
add
pusha
jge
movb
xchg
fs
dec
ljmp
xlat
jne
and
pop
cmc
loopw
dec
xchg
xor
dec
in
shlb
mov
adc
fildll
inc
xchg
sbb
push
ljmp
and
js
jmp
adc
sub
mov
lcall
sbb
pop
jo
or
js
dec
pusha
mov
shlb
mov
add
cwtl
mov
cli
or
cs
loop
test
icebp
push
push
and
in
imul
ret
inc
mov
pop
adc
inc
push
aaa
arpl
nop
mov
pop
adc
jo
fiadds
shrl
pop
xor
test
lods
insb
sub
insl
testl
adc
call
jo
pop
and
adc
push
sarl
push
dec
enter
pop
aas
xor
lock
rcl
push
lods
mov
mov
imul
shld
add
or
xor
mov
push
ljmp
aad
mov
and
jne
js
ds
xchg
pop
rolb
pop
mov
jb
and
lods
cmpsl
and
js
mov
push
sub
ja
cltd
mov
xor
rcll
pop
xor
push
inc
dec
adc
ret
mov
cwtl
jp
leave
inc
cltd
sub
pusha
mov
pop
je
fildl
imul
adc
out
insb
insl
mov
in
xor
xlat
loopne
sub
mov
repnz
pushl
mov
nop
or
std
fs
add
test
sub
stc
and
xchg
inc
or
push
adc
adc
push
mov
adc
jb
mov
pop
repnz
notl
inc
lcall
mov
xor
adc
cmp
pop
mov
in
insl
call
dec
pop
rolb
jne
inc
jl
fadd
mov
into
xchg
iret
pop
in
lret
sub
jb
in
into
daa
mov
hlt
jp
pop
cmp
push
lea
sahf
fs
maskmovq
imull
or
rcrb
and
cmp
pusha
fimuls
push
imulb
cmp
jg
sub
cmp
adc
sbb
and
add
mov
xor
scas
or
sahf
dec
jno
cwtl
and
leave
cli
pop
jl
lahf
sub
sbb
cmp
pusha
pop
mov
xlat
jno
enter
sahf
scas
out
addr16
mov
mov
inc
jns
jbe
in
mov
daa
aam
and
jecxz
mov
jle
inc
sbb
mov
mov
mov
not
jl
or
pop
adc
int
sub
pop
addr16
and
enter
sti
out
ja
insl
pop
xor
pushf
jb
imul
icebp
in
inc
sbb
xor
cmp
xchg
inc
ss
cmc
es
mov
pop
inc
dec
mov
sub
negl
dec
lea
or
cmp
push
loope
adc
xchg
jno
dec
mov
lret
pop
out
inc
insl
out
pop
cmp
hlt
int3
lds
cmp
mov
pop
incb
pop
mov
mov
inc
stos
xlat
mov
out
dec
insl
addl
mov
in
pop
adc
jo
mov
inc
cmp
add
cmpsb
lods
mov
lahf
aad
test
sbb
popa
lods
dec
imul
and
test
add
xor
je
aaa
fisttpl
out
test
vmovdqu
nop
test
jecxz
push
and
jecxz
xor
cmc
ficompl
adc
jmp
pop
rol
lods
fldenv
arpl
inc
and
call
pushf
pusha
rorb
adcb
mov
lock
out
xor
pop
add
xlat
or
mov
jno
adc
aam
pop
call
mov
cmp
lds
clc
out
jnp
xchg
push
push
xchg
sub
arpl
xchg
insl
repnz
mov
lods
xor
add
lock
inc
clc
xor
push
add
add
cmp
mov
aam
push
out
gs
loope
mov
mov
mov
jmp
pop
and
call
pop
pop
add
loop
push
hlt
xlat
mov
lods
loopne
jecxz
rcrl
pop
out
stc
imulb
or
sbb
fidivs
dec
imul
lret
repnz
and
xchg
jp
call
and
mov
inc
xorl
mov
add
mov
push
sar
push
roll
and
arpl
cli
fldlg2
dec
dec
mov
cmp
mov
add
xor
or
push
mov
add
int
ljmp
lods
inc
mov
inc
and
nop
jmp
inc
aam
loopne
cs
outsb
add
mov
in
mov
shlb
add
rolb
sarb
in
js
mov
cltd
cmp
sbb
bound
push
cli
and
xchg
fisubrs
sbb
jb
fadds
aam
sbb
sti
or
mov
inc
adc
pop
loope
enter
mov
pop
loope
outsb
aas
push
sbb
sbb
dec
inc
mov
nop
cmp
fnstenv
xchg
or
xchg
fcomp
jmp
inc
sub
stos
shl
jae
xchg
jb
xchg
mul
inc
cld
xor
pushf
sahf
je
pusha
sub
mov
mov
adc
clc
lret
imull
cmp
mov
scas
or
stos
aad
pop
xchg
insb
loop
inc
add
int
outsl
push
pusha
out
jg
mov
ret
xor
pusha
xor
cmc
fldenv
aam
test
aad
pop
into
cmpsl
or
insb
mov
adc
pop
pop
mov
inc
inc
add
mov
das
incl
mov
adc
sbb
out
sti
and
fcoms
repnz
imul
pop
lret
pop
push
dec
pop
sbb
lods
test
dec
lds
mov
pusha
mov
lock
imul
mov
outsb
pop
cli
push
icebp
sbb
dec
popf
and
loopne
inc
cmp
scas
mov
das
movsb
mov
dec
mov
adc
or
and
jg
loop
insl
xchg
cmpsl
dec
mov
or
push
ret
and
lcall
mov
xor
out
jo
test
imul
js
rcl
decb
sub
push
out
gs
cmp
stos
sub
adc
stos
insl
insb
repnz
xor
scas
testb
or
popl
pushfw
arpl
lret
outsl
loopne
push
pushf
notl
fsubr
mov
in
jge
das
sbb
shl
cltd
cmp
insb
pop
mov
jecxz
and
inc
jl
dec
ret
pop
mov
ljmp
sub
pop
std
cs
sub
out
lods
jb
loope
hlt
mov
int
inc
lret
push
test
ss
sub
scas
jp
popa
xchg
mov
add
cmp
cmc
mov
xor
jnp
xor
add
cmpsb
xchg
pop
sbb
div
repnz
xchg
rorb
lds
lods
push
mov
push
mov
fnsave
dec
adcb
and
in
mov
xor
ja
in
jno
or
push
pop
sbb
add
push
mov
fistpl
pminsw
and
cli
insb
sahf
xchg
rorl
sbb
push
int
addr16
lea
xchg
pop
xor
scas
jecxz
mov
dec
stos
jb
mov
in
imul
call
enter
push
push
sbbb
and
mov
outsl
aad
cmpsl
cmc
adc
cmp
testl
or
lahf
pop
xor
sub
pop
and
pop
cmc
notb
xlat
inc
and
sbb
inc
popa
pop
fimuls
dec
push
jns
push
icebp
test
gs
cltd
in
mov
pop
or
lret
filds
stc
int3
xor
cmp
xor
mov
xor
fwait
adc
lahf
or
stos
sub
int
mov
arpl
push
lret
sarl
xchg
jp
jnp
mov
aam
in
ret
aad
test
sti
lcall
inc
out
test
push
or
cmp
inc
mov
aam
sub
lea
pop
gs
fldenv
jo
xchg
push
dec
psubusb
lahf
xchg
fldt
adc
fdivr
cmp
jle
insl
fs
icebp
mov
pop
jge
mov
popf
popf
inc
sbb
call
sbb
xchg
push
and
add
and
and
testl
data16
mov
inc
cmp
cmc
sbb
mov
cld
push
fists
inc
jne
cwtl
shll
addl
subb
dec
inc
or
fldenv
mov
mov
inc
add
jle
stos
stos
xor
xchg
xchg
ja
test
repnz
push
cmp
mov
dec
mov
outsb
das
cmpsl
adc
out
jge
add
dec
sbb
ss
cmp
adc
add
mov
dec
sbb
cmp
imul
sbb
mov
dec
sub
inc
inc
jno
stos
pop
fisubrs
call
movsb
jle
add
mov
push
mov
mov
dec
mov
xor
imul
and
nop
sahf
mov
sahf
shl
dec
pushf
add
test
add
mov
xchg
jp
cmp
lods
rcrl
leave
out
insb
mov
aaa
fstps
and
divb
cmc
sbb
movb
imul
jb
mov
int
jae
repnz
cmp
xor
repnz
hlt
int3
dec
fdiv
pop
aaa
stc
dec
pop
inc
cmp
xor
loop
inc
inc
das
in
test
cld
pop
icebp
mov
push
insl
dec
dec
mov
cli
and
adc
fidivs
jle
lcall
shll
imul
jecxz
add
in
sub
cli
push
icebp
out
jnp
mov
cs
jle
inc
inc
mov
cwtl
pop
jno
or
add
inc
adc
and
lahf
imull
xchg
aam
test
pop
lcall
cs
or
popa
test
inc
je
xchg
das
push
add
jnp
adc
xchg
jmp
mov
or
jecxz
inc
sarl
ror
pushf
cmc
repz
stos
ja
or
push
lret
xchg
sbb
pop
cmp
xor
xor
mov
xchg
push
sub
cmc
addr16
xchg
adc
cmp
arpl
ret
movsb
pop
fmul
inc
adc
push
inc
cmp
adc
rolb
fildl
jmp
inc
inc
lds
hlt
push
and
sbb
adc
nop
mov
jle
xchg
lods
es
jo
sub
mov
add
push
mov
in
dec
inc
test
repz
lea
adc
in
or
ja
fs
fiaddl
or
movsl
jg
insl
pop
mov
jae
xor
adc
int
aam
pop
outsl
int
mov
pusha
jne
xchg
fdiv
xor
mov
repz
jl
add
dec
nop
jmp
outsl
bnd
sub
mov
sbb
jle
popf
pop
jne
fdivrs
dec
add
sub
jo
cli
add
lret
sub
sahf
nop
mov
sbb
imul
cmpb
and
or
repz
out
imul
ret
lods
mov
mov
fs
lahf
stos
mov
jo
in
rorb
sub
jp
add
outsl
sbb
mov
loop
icebp
ljmp
xchg
pop
lret
cli
fnsave
test
shlb
in
push
xchg
xor
jnp
stc
insb
mov
inc
lea
xchg
addr16
xchg
popf
jnp
pop
sub
lods
xor
adc
or
stos
jge
mov
movsl
pop
jge
scas
or
mov
jmp
xchg
xchg
fildl
push
adcb
mov
out
push
imul
jbe
lock
fcoms
pop
fstpl
mov
lock
addr16
out
jae
jmp
icebp
cmp
sahf
popf
por
jns
mov
leave
push
xchg
or
sbb
insb
add
inc
adc
mov
cmp
dec
jb
test
mov
xor
inc
in
out
rolb
mov
rcl
ret
mov
popa
xor
xor
rorb
pop
dec
sub
mov
pushf
fistpl
xor
movb
xchg
jmp
pop
push
mov
js
jb
mov
mov
jmp
outsl
xor
jge
imul
lods
cmp
dec
xchg
xor
loopne
clc
xchg
dec
pop
mov
call
jne
dec
loop
xlat
mov
bound
loopne
jecxz
pop
inc
sub
dec
sub
test
aas
sub
repz
push
or
pop
dec
faddp
pop
test
mov
into
push
rcl
and
add
sbb
pop
push
repnz
xchg
pop
and
mov
sub
nop
jmp
imulb
jae
or
test
in
dec
adc
jnp
mov
sarl
xchg
negb
pop
dec
xor
sub
and
dec
aad
testb
dec
xor
mov
mov
xor
push
lods
stos
push
sub
cmpsb
ret
sub
sub
mov
popa
cmp
mov
cltd
clc
popa
push
xchg
mov
and
xchg
or
lcall
pop
or
mov
das
and
mov
je
addr16
cwtl
or
add
lock
add
fs
lcall
cmp
arpl
insl
ss
add
or
es
fcom
sub
insb
push
sub
push
lods
lock
dec
adc
sti
les
lods
testb
dec
stc
sarb
mov
inc
and
lods
enter
jno
jae
loop
jns
notl
jl
sub
mul
add
ja
arpl
movsl
popa
xor
out
nop
mov
cmc
sbbb
ljmp
cmp
push
xchg
jns
sbb
movsl
sub
adc
or
sbb
mov
mov
add
jnp
push
cltd
sti
add
add
mov
jbe
sbb
movsl
dec
lahf
jp
sub
jbe
mov
and
xchg
dec
xchg
and
outsl
inc
cld
jns
je
and
jl
add
sbb
jmp
or
jns
push
ja
ds
cmpsb
mov
fucomi
mov
mov
cli
ficomps
aaa
cmp
out
mov
xchg
pushf
xchg
fcmovu
inc
sbb
mov
callw
lock
sub
aam
sar
and
fmull
cltd
mov
dec
cltd
add
mov
mov
inc
xor
ds
push
cli
cmpsb
dec
inc
push
sub
mov
repz
pushf
jecxz
and
xchg
mov
cmpl
dec
xchg
mov
mov
aaa
in
xchg
pop
dec
mov
mov
mov
push
in
inc
pushf
pop
lcall
inc
push
lods
adc
test
mov
cmc
dec
movsb
or
cmpsb
imul
mov
mov
dec
stos
rol
inc
push
out
fisubs
aas
jmp
lock
aad
ret
lods
cmp
mov
push
mov
ds
bound
das
test
fs
fiadds
push
pop
add
fsubs
mov
mov
clc
pop
inc
fsts
sbb
xlat
outsb
andb
enter
das
xchg
ja
sub
or
dec
repz
pop
mov
mov
push
std
inc
sti
cmp
inc
mov
insb
jmp
mov
aam
push
add
jle
in
sbb
or
push
jo
adc
add
mov
js
xchg
mov
ret
dec
and
add
scas
lcall
adc
fcomi
xchg
hlt
xchg
pop
ret
cmp
jb
pop
cmp
jecxz
and
cmpsl
out
mov
pop
ret
repnz
push
mov
dec
inc
adc
out
dec
pusha
pop
inc
arpl
sti
sbb
fldl
int
jo
lock
mov
les
dec
out
dec
dec
sbb
aaa
xor
int3
mov
xchg
int
jno
jl
lock
push
enter
lods
xor
in
mov
xlat
mov
inc
mov
add
shrl
pop
cmp
pop
mov
sub
leave
fnstenv
push
mov
dec
add
lahf
pop
clc
insb
jl
mov
xchg
mov
bound
daa
sahf
aas
lods
push
xor
addr16
mov
inc
ja
push
mov
fisubrl
ret
pushf
cwtl
cli
sbb
loop
push
std
std
jnp
adc
das
and
inc
mov
jne
push
jnp
daa
ja
xchg
inc
inc
rcrl
add
iret
enter
jmp
sahf
pusha
push
iret
jle
lock
pop
jl
adc
add
jae
add
and
mov
daa
add
mov
sub
in
lret
xlat
fadd
mov
push
adc
sub
inc
rcrl
loopne
add
dec
test
xchg
leave
lods
lea
and
lea
andb
pushf
lods
arpl
cli
enter
data16
aas
aam
daa
sub
lret
inc
fcoms
pop
push
imul
mov
outsl
add
pop
push
xchg
cmp
sahf
pop
cld
subb
test
and
add
mov
hlt
mov
mov
mov
daa
clc
inc
xchg
loope
inc
push
adc
popf
sbb
sub
jmp
pop
mov
iret
jb
mov
push
mov
push
lret
js
add
sub
push
or
aam
xlat
mov
das
dec
add
xchg
sub
mov
xchg
sub
movsb
lret
cltd
cmp
cmc
mov
adc
rcrl
int3
popa
adcb
cs
es
cld
call
push
out
mov
gs
fsts
das
sti
mov
push
test
cmc
jle
mov
pushl
lret
xchg
jmp
inc
jp
addr16
lret
mov
lret
jmpw
jb
mov
into
icebp
imul
or
push
adc
push
jp
mov
or
pop
in
test
loope
fcmovnbe
hlt
rcll
repz
sti
lods
jne
sbb
jmp
pop
pop
hlt
push
out
imul
filds
add
jmp
outsl
mov
push
fiadds
sub
sub
pop
into
roll
inc
scas
and
ret
jo
testb
mov
shl
and
xchg
xor
das
clc
inc
or
decb
sub
sbb
aas
stos
jl
cltd
mov
inc
cmp
lea
stc
adc
test
jmp
add
adc
jp
sub
xchg
imul
sub
xchg
icebp
shll
leave
xchg
pop
xchg
cli
push
xchg
add
inc
adcl
dec
xchg
sub
jecxz
inc
xchg
xchg
sub
lea
xor
cmp
imull
into
les
dec
dec
in
aaa
daa
pop
sbb
mov
push
icebp
push
insb
repz
decl
aam
sub
inc
mov
test
xor
inc
fdivrs
mov
or
dec
in
push
fildll
xchg
sarl
enter
sbb
push
subb
fwait
and
out
mov
int3
rcll
xchg
pop
out
mov
pushl
fildl
inc
ss
pop
mov
adc
test
imul
push
aad
xor
mov
xchg
dec
hlt
add
cld
repz
test
mov
xchg
shr
push
push
dec
in
enter
mov
pop
adcb
std
jmp
sub
push
jns
sahf
js
xlat
or
and
hlt
faddp
mov
push
jb
je
mov
sbb
pop
testl
and
push
and
jecxz
mov
repnz
push
dec
jmp
std
add
aaa
inc
int3
imul
jae
ret
add
fwait
mov
addb
lock
pop
jnp
jmp
jmp
imul
in
mov
daa
lods
inc
les
sbb
push
xchg
in
mov
aam
mov
and
mov
mov
pop
cmp
aas
cmp
or
jne
fwait
lcall
pop
movsl
pusha
and
imul
jp
dec
inc
push
cmp
dec
cmp
ljmp
inc
roll
cld
lods
out
push
dec
or
int3
xchg
out
lcall
lret
jns
xchg
fstp
jae
add
mov
in
push
pop
mov
neg
shrb
aam
cmp
jae
sbb
imul
jl
fwait
mov
jns
jge
or
xorl
lret
jg
repnz
mov
fnstcw
inc
mull
jb
ss
les
dec
das
add
mov
mov
mov
inc
add
pop
outsb
cmp
xor
pop
jl
mov
xor
pushf
jns
inc
cmp
lahf
xchg
xor
add
movb
test
fmulp
lods
aaa
jno
ficompl
jbe
cmp
stos
ret
out
pop
jnp
test
jmp
inc
fdivrs
mov
adc
dec
mov
sbb
aad
xchg
nop
repz
popa
in
nop
mov
xlat
pop
out
and
aaa
mov
imul
adc
sbb
testl
sub
int
xchg
push
fbld
mov
repnz
daa
mov
push
cwtl
shrl
daa
ret
bound
mov
pop
inc
mov
push
or
loop
xor
imul
mov
das
ss
std
call
cmpsl
lret
loopne
fisubl
popf
jnp
imul
mov
jno
out
mov
bound
shl
test
rcrl
and
jns
mov
mov
push
or
sub
jp
test
aam
dec
pop
push
dec
arpl
hlt
push
mov
push
js
inc
ret
vmread
icebp
rclb
push
lcall
out
and
inc
and
adc
clc
or
cmp
push
imul
jns
mov
xchg
fisttps
mov
sbb
outsl
dec
cmp
push
sub
jmp
outsl
cmpsb
lods
movsb
adc
sub
in
pusha
pop
rcr
and
and
sub
cmp
hlt
sub
push
outsl
inc
jg
insb
rcl
add
stos
xorl
fucomp
cmc
jnp
ja
mov
fnsave
xchg
push
xor
jo
aaa
add
xchg
push
xlat
pop
push
cmp
mov
fisubrl
rsm
data16
sti
sbb
add
xor
aad
decb
push
sahf
gs
mull
leave
push
shrl
fcomps
aad
xchg
arpl
push
sbb
add
aam
pushf
fsts
dec
lods
stos
in
xchg
pop
test
dec
or
pop
dec
pop
aaa
inc
pop
shr
fldcw
data16
popf
daa
jnp
xor
mov
test
jle
lret
mov
das
int3
std
pop
hlt
mov
or
movsb
movsb
sqrtps
daa
mov
iret
daa
shlb
in
inc
in
jp
sub
nop
mov
xchg
adc
shlb
and
test
ret
fdivrl
mov
sub
fwait
adc
cwtl
or
lock
sti
adc
pop
das
jnp
pop
xchg
xchg
inc
or
pop
js
fildl
stos
imul
loop
xchg
xchg
sub
pop
out
and
and
and
popa
pop
nop
dec
push
cwtl
in
or
daa
setno
add
push
sbbb
jae
std
inc
or
mov
cmp
jl
hlt
xor
push
xor
lock
jle
imul
adc
cmc
out
sbb
pusha
inc
lods
push
fwait
loope
cld
and
mov
pop
push
sub
fisubrl
add
mov
ljmp
subl
cmp
push
outsl
jae
xor
out
frstor
lea
xlat
jbe
lods
or
andb
jae
enter
cltd
or
pop
or
out
push
lahf
xchg
icebp
pop
add
adc
pusha
pop
les
out
rcrb
mov
aaa
loope
pop
jmp
adc
insl
or
outsb
xchg
loop
test
sub
in
das
push
adcb
imul
xchg
push
cmp
scas
push
test
and
aas
sub
shll
gs
enter
pop
out
pop
nop
lahf
pop
fstps
mov
mov
adc
inc
dec
xor
push
sub
out
lcall
cmpsl
test
gs
cmp
mov
adc
imulb
sub
adcl
jge
dec
xor
cmp
pop
or
cwtl
xor
clc
xchg
fldcw
fwait
or
mov
loope
lcall
mov
and
jg
stos
pusha
cmpsb
xor
add
lods
lret
xchg
lret
cmpsb
and
shl
std
dec
lods
xor
lret
mov
lcall
jl
mov
dec
arpl
fldcw
arpl
cmp
sub
mov
pop
outsl
xchg
dec
jecxz
es
pop
fstpt
pop
dec
aam
aas
mov
sti
sti
dec
pusha
std
push
hlt
frstor
lret
sub
stos
mov
add
adc
lahf
outsb
xor
or
jmp
iret
gs
xchg
inc
lds
and
pop
mov
jbe
vmovntdq
push
ds
jno
shl
add
pushf
sbb
ret
and
xor
lret
icebp
adcl
sbb
sub
repnz
add
push
xchg
mov
aam
dec
out
jp
fs
sbb
test
jnp
xchg
adc
stos
push
sub
int
cltd
sub
pop
fidivrs
and
shrl
jl
add
sbb
cmpsl
ja
mov
pop
pop
pop
mull
shll
sbb
inc
sbb
ss
lahf
pop
cmc
cmp
push
jne
push
and
fwait
sarl
insl
mov
push
pop
xchg
fsub
sti
and
or
enter
mov
mov
les
jp
pop
int
or
fists
shrl
mov
xlat
add
in
in
shll
or
inc
inc
adc
scas
adc
in
adc
mov
ret
lcall
arpl
dec
or
mov
loope
mov
das
add
ret
cli
xor
negb
push
es
jecxz
cli
shrl
outsb
cmp
inc
imul
xchg
jns
stos
xchg
jnp
push
xchg
inc
stos
imul
nop
mov
lcall
adc
sub
loopne
adc
bound
enter
andb
mov
pusha
mov
mov
sahf
xorl
out
in
xchg
jmp
stos
jp
cmp
pop
jecxz
repz
lock
movsl
inc
ss
movsl
pop
xchg
pop
pop
les
insl
pushf
cmp
shrl
mov
mov
inc
icebp
cld
xchg
mov
xchg
xor
jmp
lea
lods
adc
jp
loope
fucom
cmp
imul
cld
mov
fadds
pop
xchg
outsl
adc
cmp
jne
sti
popf
xchg
call
adc
sub
or
xor
cli
jo
mov
imul
loop
dec
cs
std
out
movsl
jmp
jge
xor
ficoml
jbe
pop
repnz
cmc
movsb
and
mov
push
repz
fadd
adc
cmp
xor
mov
sub
mov
jne
lock
push
xchg
into
popl
xchg
jns
fdivl
or
xor
pop
jb
xchg
cmc
lods
aas
scas
stos
cmp
fiaddl
ret
ljmp
mov
call
jns
nop
or
fisubs
movsl
jp
or
inc
xor
mov
lock
xchg
add
cld
leave
ja
in
movsb
das
xor
cmp
mov
add
mov
jecxz
je
jnp
pop
out
and
fsub
mov
loopne
add
push
sub
add
and
popf
jb
dec
adc
fstps
xchg
inc
xor
out
jns
inc
out
repnz
in
imul
xor
adc
xchg
mov
fcmovnu
int3
push
push
adc
jns
sarl
test
icebp
or
cmp
int3
and
inc
mov
add
add
mov
pusha
gs
mov
out
adc
dec
loop
mov
lcall
negb
insb
dec
adc
push
call
and
jmp
mov
mov
movsl
push
jp
mov
jo
loopne
mov
ljmp
sub
scas
ljmp
out
and
push
movsb
jmp
and
pop
sub
ss
pop
jmp
pop
repnz
lea
pop
inc
xor
popf
int3
adc
fstpt
iret
lods
push
mov
add
es
sub
pop
mov
mov
sti
movaps
sbb
lcall
sub
stos
xchg
cmp
inc
aaa
sahf
mov
hlt
cmpsb
in
mov
es
orl
inc
xor
dec
movsb
jb
fstps
stc
popa
cli
cs
push
cmpsb
mov
cmpsl
push
adc
mov
loopne
popf
imul
movsb
push
js
ret
std
pop
mov
lea
mov
jo
sub
and
xchg
jbe
add
lods
imul
mov
add
stos
jno
fwait
in
xor
xchg
ds
sub
mov
cwtl
sub
imul
cmp
stos
pop
mov
gs
mov
scas
xor
xchg
lret
adc
push
sub
mov
dec
hlt
cmp
shll
shlb
push
adc
xchg
mov
xchg
lahf
cmpsl
mov
pop
shll
aaa
xchg
movsl
mov
pop
hlt
jb
and
jmp
push
jl
call
aam
sub
dec
inc
mov
pop
pop
out
and
push
sub
insl
sarb
pop
out
lock
ljmp
out
adc
mov
insb
cmp
das
dec
adc
xlat
imul
sub
data16
shl
jmp
lods
lods
jg
outsb
roll
cmp
stc
loope
int3
repz
push
inc
pusha
jecxz
fiadds
mov
mov
movsb
stc
push
mov
hlt
jmp
cmc
fldl2e
jge
enter
mov
and
fidivrl
pushf
mov
ret
dec
lahf
or
call
inc
cmpsl
or
subl
mov
sbb
test
jp
jecxz
es
inc
sbb
xchg
std
cwtl
cmp
adc
outsb
xchg
fcmove
mov
or
dec
lock
mov
stc
pop
jmp
and
stos
xlat
or
aas
cmp
ljmp
cmc
sub
cmp
jbe
sub
mov
mov
sbb
or
bound
inc
xchg
outsb
dec
test
mov
add
mov
sub
loopne
out
ja
push
cmc
cmp
push
test
mov
fldenv
xor
jno
inc
es
scas
adc
sub
dec
adc
push
loop
dec
out
mov
pop
mov
pop
scas
popf
pushf
jns
sarl
adc
cmp
insl
enter
cld
lea
mov
fists
aas
mov
and
andb
movsl
out
bound
test
ds
jmp
cs
sub
ds
cmp
cmpsb
or
cs
dec
mov
int3
ss
aas
mov
pop
mov
ja
adc
sbb
mov
orl
inc
jecxz
sbb
movsl
push
loop
xchg
lods
cs
jbe
and
pop
mov
cs
inc
shl
loopne
adcb
testb
add
pop
inc
test
mov
or
out
mov
jmp
push
xor
add
popa
outsb
adc
ret
leave
xchg
and
jne
push
mov
jl
nop
mov
pusha
stc
pop
out
push
mov
push
fcompl
ret
imul
ljmp
out
hlt
int3
lcall
in
jo
cld
rol
inc
add
xchg
out
xchg
inc
das
mov
jae
stos
sub
icebp
lods
jle
xchg
adc
sbb
fimuls
insw
shr
xchg
sub
cmp
push
pop
daa
add
pop
push
pop
jmp
pusha
cmp
push
cmp
subl
out
xor
inc
mov
jns
stos
into
jae
push
inc
sub
cmp
jg
push
lock
ds
inc
inc
jp
ljmp
mov
in
testb
cmp
mov
or
pop
xor
int3
popf
cmp
xor
lea
add
cli
add
shrl
push
out
clc
cli
pushf
or
push
mov
les
jb
js
add
xor
pop
jge
push
cld
popa
sbb
lods
push
and
ja
mov
and
sub
inc
sub
rolb
mov
outsl
sbb
iret
mov
push
add
inc
rcr
or
faddl
scas
add
push
mov
or
pop
ljmp
jo
xor
mov
pop
xor
outsl
test
gs
jg
rcrb
xor
es
ljmp
xchg
or
sti
fdivs
dec
cmc
shr
fnstcw
notb
mov
popa
push
test
dec
push
and
in
fs
imul
adc
mov
jle
sti
daa
sbb
int3
mov
std
sbb
sbb
xchg
jmp
inc
ret
cltd
ss
pop
shufps
push
sub
fcompl
mov
fdivrs
sti
mov
sub
push
jmp
push
fldl
dec
cmp
pop
mov
add
xchg
mov
push
push
pop
cmp
jp
xchg
xor
in
das
addl
xor
add
xor
add
sbb
pop
jmp
sub
mov
add
int3
les
cmp
mov
adc
dec
mov
jmp
lea
divl
bound
fidivl
mov
or
sbb
jmp
addb
test
dec
dec
cmp
pop
insb
stc
mov
cmp
out
ret
xchg
repnz
pop
fwait
insl
or
ja
xchg
pop
add
and
xchg
pushf
pop
test
rorb
jne
shll
xchg
stc
or
imul
sub
mov
repnz
pushf
mov
lea
sub
cld
out
mov
loope
mov
cmp
enter
lret
and
pop
mov
xor
xor
mov
push
xor
dec
pop
jbe
xor
leave
pop
adc
and
pop
sbb
xchg
jp
xor
or
dec
cltd
push
lods
iret
sub
mov
adc
fwait
xor
xor
mov
cmpsl
adc
pushf
cwtl
lods
iret
test
fisubs
cmp
mov
xchg
popf
cli
orl
jp
mov
shl
pop
mov
aas
mov
xlat
je
dec
jl
xlat
add
inc
cltd
jmp
cli
ret
dec
mov
jmp
dec
fwait
shrl
insb
in
add
inc
push
ja
mov
xchg
dec
pop
repz
not
lods
pop
jo
lea
push
jne
xor
hlt
sub
fcoml
adc
data16
cmpsb
stos
insb
sub
in
das
pop
adc
fs
lds
les
lcall
or
jb
into
imul
xchg
jnp
sti
cli
icebp
test
aaa
or
popa
frstor
and
in
fisubs
push
inc
xchg
pusha
inc
fnstenv
adc
xchg
cmpsl
ds
mov
xchg
fmul
fcoml
rcrl
jmp
fisubl
push
js
mov
or
hlt
shlb
dec
and
mov
cmp
dec
bound
pop
adc
jo
into
mov
ja
push
mov
add
mov
pop
fimuls
sbb
sbb
xor
call
cld
icebp
jecxz
mov
xor
rol
xor
sbb
and
sbb
mov
dec
jl
jmp
sub
mov
push
cmpsb
mov
jbe
mov
stos
icebp
xor
xchg
into
jne
or
insb
pop
add
xchg
sub
add
cs
int
sbb
rclb
adc
or
test
or
sub
retw
sbb
test
cmp
xor
fists
mov
das
sahf
dec
adc
jno
mov
andl
sbb
xor
sub
fistl
int3
xchg
sub
cmp
sbb
stos
fildl
dec
xchg
sbb
or
add
xchg
xchg
xchg
mov
inc
cmp
pop
stos
mov
sub
fwait
mov
push
xchg
inc
ret
cmc
ss
mov
jbe
imul
test
push
std
rdtsc
popf
cld
cmp
out
mov
and
daa
cld
fwait
icebp
addr16
pop
dec
dec
mov
cs
dec
out
lahf
in
or
adc
enter
out
sbb
mov
int
nop
cmpsl
ror
lds
faddp
add
out
jg
aam
dec
fwait
ss
add
ss
adc
add
out
mov
fistl
add
popa
lahf
nop
mov
xchg
int3
sub
pushf
jp
call
xchg
mov
sti
dec
xchg
inc
dec
cmp
inc
pushf
inc
daa
fildll
test
popa
clc
pop
pop
in
xchg
ljmp
inc
inc
lcall
cld
ss
jno
sub
sub
arpl
adc
sbb
nop
aam
adcb
jle
decl
inc
inc
jp
lea
mov
fwait
jg
mov
mov
aam
xchg
test
mov
cmpb
dec
sti
mov
jp
xor
in
and
jno
cmp
data16
bound
jno
sbb
js
jmp
dec
jl
xor
mov
or
jns
adc
roll
push
movsl
adc
je
daa
mov
mov
enter
out
jo
mov
mov
imul
sbb
loop
loopne
rcr
pop
shll
js
out
fcoml
mov
into
out
or
mov
mov
adc
lock
mov
inc
jecxz
lock
loope
mov
inc
sarl
cmp
std
arpl
fwait
jnp
dec
xchg
repnz
loopne
loopne
lds
push
lret
dec
dec
loop
jg
insl
cmc
sub
mov
gs
sbbb
inc
mov
xor
mov
bound
out
mov
mov
scas
dec
in
add
inc
aad
or
jecxz
jle
adc
mov
or
out
pop
scas
imul
xchg
movq
loop
pop
xor
imul
pop
inc
mov
mov
leave
das
and
dec
dec
cmp
xor
es
pop
fildl
pop
dec
into
lea
shrl
sbb
mov
mov
jo
xlat
cwtl
xor
sbb
dec
bound
pop
testl
int
pop
cmc
jne
push
or
stc
xlat
cmp
aad
leave
or
rolb
stc
out
ljmp
and
lods
out
mov
adc
stos
inc
cmp
pop
in
out
lock
in
adc
mov
stc
pop
repz
push
inc
fimull
mov
popa
pop
dec
imul
iret
or
mov
inc
push
loop
icebp
mov
filds
push
adc
icebp
or
xchg
dec
iret
push
lds
lea
test
fsub
xchg
sub
pusha
aad
lret
or
out
ds
out
jnp
mov
lcall
lret
out
push
push
insl
xor
jle
es
insl
fidivrl
shrb
movsl
push
pop
mov
mov
inc
aam
stos
cmp
dec
enter
xor
stos
ss
cltd
cmp
fcoml
daa
jb
jge
jae
mov
mov
and
sbb
xchg
int3
test
std
sub
lods
mov
and
ja
cmp
add
xchg
cwtl
lret
jmp
int
or
inc
testl
adc
push
cmp
mov
xchg
daa
add
mov
mov
dec
fldt
mov
lret
add
nop
lea
mov
iret
daa
adc
dec
cmpsl
fnsave
stos
or
push
lds
xchg
or
mov
je
pop
popa
push
loopne
js
ret
sub
mov
xor
dec
jg
xor
xchg
lahf
adc
iret
xchg
fisubs
int
test
or
mov
mov
mov
and
sbbb
movsl
jmp
push
sbb
mov
jne
xchg
dec
mov
sbb
lods
jns
adc
sarl
or
mov
les
pop
out
xchg
lods
aam
bound
sub
or
and
aas
and
lds
and
iret
incl
fchs
pop
xchg
jne
loope
inc
jae
stos
and
int
jno
mov
xlat
push
fstps
sbb
dec
gs
sbb
or
pop
test
sub
call
mov
xchg
imul
insl
add
pop
mov
fistl
adc
movsl
frstor
ret
iret
inc
xor
movsl
sub
call
push
jb
push
ret
movsb
inc
or
in
in
mov
jle
roll
icebp
fmuls
lds
mov
pop
cmp
dec
push
je
jge
fdivrl
add
stc
jge
ret
add
push
lret
daa
mov
icebp
push
pop
nop
mov
jle
xchg
inc
jne
cltd
adc
mov
adcl
ss
pop
inc
rclb
inc
xor
in
or
lahf
loop
cmpsb
incb
gs
test
cmp
push
or
inc
sub
sbb
sbb
cmp
mov
mov
and
insl
leave
mov
imul
cmp
adc
loope
test
repz
push
test
pop
adc
roll
cmp
repnz
or
pop
jmp
test
andl
sbb
test
lods
add
cmp
cmp
sarl
xlat
push
pop
jge
idiv
das
clc
cmpsw
cli
lods
jge
mov
aam
jae
mov
dec
inc
out
mov
xor
pop
sub
mov
push
aad
repnz
clc
div
dec
insb
stos
adc
pop
push
movsl
je
pop
or
mov
pop
mov
insl
cmc
icebp
gs
mov
imul
sbbb
int3
int3
mov
movb
mov
arpl
push
aaa
xlat
outsb
adc
push
addr16
push
mov
push
push
loope
lret
scas
jmp
cmpsb
lods
mov
cld
jbe
out
shll
imul
and
cmp
mov
data16
push
leave
enter
lods
mov
mov
fstpl
xor
xor
xchg
and
aam
sbb
or
jne
pop
popf
inc
ret
add
mov
movntq
out
add
jmp
stos
mov
mov
sbb
cwtl
mov
iret
icebp
lods
mov
push
sbb
jnp
or
fstpt
movsb
mov
mov
movsb
adc
shlb
call
push
rclb
addr16
iret
aaa
xchg
enter
test
xchg
cmpsl
push
stc
jmp
sti
fmuls
add
adc
pop
cmp
shll
xor
sub
fnsave
and
ret
fldl
xlat
push
fisttpl
repz
lods
dec
adc
insb
divl
lods
call
sbb
shrb
adc
lods
inc
mov
jecxz
mov
xchg
mov
fcompl
sbb
jne
jb
lods
jnp
and
mov
xchg
add
scas
mov
clc
sbb
xor
mov
jbe
mov
notb
popa
adc
in
adc
mov
rorl
pop
inc
das
mov
inc
ret
and
stos
inc
jecxz
idivl
std
push
sub
cmc
jg
jge
nop
xlat
enter
dec
or
mov
dec
lret
out
jae
inc
shll
pop
xor
xorl
jl
rcll
enter
cmp
hlt
push
jo
push
or
dec
lods
rcr
fistpl
mov
cltd
lods
sub
push
cmp
fsincos
add
add
cltd
es
mov
fcompl
imul
insl
leave
in
rcll
in
cmp
push
and
or
push
dec
cmp
mov
mov
outsb
es
test
cmp
inc
pop
mov
mov
and
cmpb
or
nop
mov
mov
stos
fst
gs
xchg
add
lret
mov
es
scas
mov
out
loop
pop
in
pusha
xorb
scas
mov
xchg
xchg
pop
addr16
cmp
xor
push
in
sub
repnz
ret
in
roll
cmp
push
or
rcl
mov
inc
in
dec
out
dec
add
fnsave
pusha
xchg
inc
lods
imul
jg
pop
andl
adc
push
jns
test
icebp
rorb
or
adc
push
adc
imul
sub
cltd
lahf
and
push
sbb
outsl
mov
push
data16
pop
push
imul
es
js
into
pusha
or
jg
test
cmp
jg
sbb
test
stos
cmp
call
mov
jo
outsl
sub
sub
push
adc
or
mov
enter
faddl
loopne
pop
mov
cmp
bound
out
push
maxps
inc
insl
lock
and
mov
or
popf
and
out
mov
xor
fsubl
lret
popa
addr16
jno
js
loopne
pop
test
adc
fisttps
paddusb
dec
pop
outsl
fwait
lods
dec
call
fdivrl
mov
hlt
mov
cmp
add
int3
mov
cs
and
das
std
out
lods
in
xchg
clc
dec
xor
pusha
stc
add
sbb
insl
fidivl
jg
call
and
loop
xchg
jle
adc
cmp
icebp
pop
das
pop
xor
mov
sub
or
fdivs
insl
loopne
repz
pop
push
or
punpckhbw
out
cmp
iret
sub
js
mov
adc
jl
sbb
pop
aas
js
mov
xchg
std
inc
adc
popa
add
jno
inc
testl
or
and
xor
mov
hlt
std
fs
lcall
outsb
lea
sbb
and
aam
or
inc
cmp
pop
jns
sub
fimuls
push
cmp
nop
fldcw
dec
clc
mov
xlat
mov
xchg
inc
dec
jmp
fwait
push
xor
fsubp
stc
mov
sub
mov
dec
shll
mov
pushf
out
dec
push
mov
push
and
ljmp
int3
test
jae
mov
loopne
xchg
jne
fnsave
push
cmp
or
mov
jge
in
dec
shr
xor
ja
addl
cmp
cmpsl
xchg
jo
adc
xchg
xor
imul
mov
mov
out
mov
xchg
repz
cld
jge
out
addr16
or
push
mov
pop
out
inc
ret
rep
mov
sahf
stos
xchg
add
and
lahf
js
pop
mov
subl
push
in
push
sub
sbb
mov
inc
mov
push
and
shrl
mov
mov
aaa
mov
mov
jb
shlb
test
pop
loope
mov
mov
je
cli
pop
jmp
push
movsl
inc
daa
imul
xchg
push
sahf
sub
pushf
adc
jl
mov
jg
lahf
jle
into
sbb
inc
pop
and
test
jo
xchg
xchg
repz
cmpsb
popf
jae
mov
sbb
adc
jp
shlb
xchg
lret
stos
enter
jne
mov
rorl
arpl
dec
sub
js
and
or
fcompl
push
in
stos
jge
mov
nop
add
insb
cmp
push
ss
test
iret
cli
aas
cld
stos
dec
inc
inc
and
test
imul
xor
inc
sub
jp
or
loop
arpl
test
mov
data16
sbb
push
mov
stos
shlb
pop
stos
mov
add
xor
and
hlt
int
xor
aaa
movsb
inc
xor
adc
mov
sbb
ja
dec
jo
adc
push
testb
ljmp
sub
repnz
jp
add
cmp
sbb
push
adc
xchg
test
fstpl
cmpsb
mov
adc
jae
into
out
xchg
mov
das
icebp
mov
xor
sub
add
mov
out
addr16
jl
loop
xchg
cmp
push
call
hlt
hlt
mov
add
push
bound
sbb
leave
xor
pop
test
sbb
lods
jns
daa
push
ljmp
mov
fcomps
stos
dec
or
xchg
add
bound
aam
push
xor
inc
cmp
fsubs
out
inc
outsl
mov
aad
mov
ds
push
iret
outsb
cmc
sbb
aas
int3
adc
test
push
mov
enter
push
stc
ret
inc
inc
and
shrl
andl
scas
stos
push
je
rol
les
mov
and
iret
sbb
sub
mul
je
iret
stc
pop
sarl
jge
pop
sub
adc
pop
inc
outsb
test
lret
push
int3
nop
rclb
inc
add
push
data16
push
xlat
add
out
clc
push
inc
notl
xor
and
xchg
and
std
shrb
lds
cli
iret
mov
push
loop,pt
mov
inc
or
cmpsb
adc
push
and
sbb
adc
cmp
pop
mov
sub
dec
inc
pop
adc
jo
mov
cmp
test
mov
add
in
mov
jge
shlb
call
jge
sub
jmp
sbb
or
mov
mov
shr
cmovo
mov
sarb
les
pusha
push
popa
inc
push
jae
dec
aas
adc
out
mov
nop
xor
mov
loopne
cmp
mov
pop
jno
cmp
adc
xchg
or
hlt
push
pop
fs
mov
cltd
adc
mov
xchg
and
adc
jo
sub
sbb
stc
bound
mov
lret
je
insb
cltd
lea
rorb
dec
loope
mov
mov
sti
xor
dec
test
addr16
pop
push
call
adc
mov
inc
add
test
push
and
sub
xchg
data16
ja
add
pop
dec
pop
xor
nop
lods
xchg
call
sub
call
data16
fs
fcomps
inc
jo
mov
inc
xor
xor
loopne
jl
cs
xchg
sub
loop
sub
pop
xchg
mov
pop
sub
scas
loopne
inc
repnz
test
fiaddl
jl
add
xor
pop
bound
jae
or
xor
in
sbb
mov
pop
out
push
xchg
add
mov
loope
rol
mov
cmpsl
iret
dec
mov
pushf
pop
fsubp
popf
pop
or
push
sbb
pop
insl
sub
pop
ret
stc
adc
in
jp
jle
lods
cmpsl
push
xchg
pop
xchg
add
out
popa
xor
es
lahf
adc
movsl
popa
les
add
mov
ret
cmp
dec
lds
bound
aam
fs
cmp
aas
lea
subl
sub
jecxz
insl
mov
fidivrs
cmp
sub
mov
sbb
pushl
pop
push
mov
shll
lret
pusha
xor
pop
sti
movsl
xor
xor
mov
mov
ret
inc
lods
sbb
aam
push
lret
dec
push
mov
int3
dec
pop
loopne
push
in
and
negb
and
rcrb
xor
test
and
sbb
outsl
loope
sub
jge
push
mov
cmp
cmp
adc
sbb
or
xorb
aam
cli
cmp
in
push
adcb
or
jmp
sbb
dec
pop
add
push
mov
fisubrl
popf
imul
gs
mov
insb
and
pop
ficomps
mov
pop
fwait
or
jo
addb
in
sbb
hlt
stos
sub
jp
jno
mov
xlat
dec
imul
add
aas
dec
js
popf
adc
clc
dec
mov
sahf
jmp
push
in
mov
sub
mov
sub
or
mov
stc
je
repz
flds
cmp
jns
addr16
leave
sub
gs
outsb
sbb
std
and
adc
loop
mov
sbbb
xor
xorb
push
sbb
pusha
bnd
inc
stos
inc
xor
je
shlb
ljmp
out
test
push
inc
add
inc
int
pushf
cmp
arpl
jmp
push
sbb
lock
dec
jge
pushf
dec
fwait
sbb
in
xchg
mov
pop
rcrl
or
sbb
in
cmpsb
dec
dec
sub
add
mov
scas
out
sti
and
inc
shrl
inc
iret
or
sbb
aam
stc
mov
mov
pop
andl
jno
or
pop
clc
cwtl
rcl
pop
lock
popf
int
sbb
leave
sbb
std
movsl
or
lods
sub
mov
jle
aad
jnp
mov
movsl
iret
popa
ficomps
mov
dec
pop
xchg
dec
jnp
leave
ljmp
dec
mov
repz
mov
xchg
or
push
add
dec
jl
cwtl
mov
int
or
test
or
push
inc
dec
cmc
mov
push
mov
mov
mov
mov
aad
xor
push
cld
movsl
and
push
sbb
sub
int3
int
repnz
aaa
dec
mov
jnp
pop
pop
rcrl
add
ret
sbb
sbb
cld
aaa
jmp
or
rcrl
mov
out
inc
mov
push
in
dec
pop
shl
movsb
cmc
jno
outsl
pop
sbb
pop
fwait
fs
pop
sub
xchg
mov
lret
inc
pop
sahf
mov
jo
xchg
jmp
mov
push
leave
cmp
js
jae
cmp
fsubp
xchg
fstpl
mov
or
and
imul
cmpsl
outsb
shl
dec
pop
mov
lret
push
xchg
adc
imul
or
js
mov
dec
pop
test
adc
jmp
arpl
rcl
xorb
fsubrl
fsubrs
xlat
cmpsl
push
jb
inc
and
sbb
xor
and
jecxz
push
and
adc
movsb
je
pop
push
ljmp
xchg
lea
repz
repz
dec
mov
xor
mov
movsb
or
jge
loop
add
cmp
lret
fwait
aas
pop
sbb
inc
mov
sub
mov
cmpsl
jb
daa
jno
jp
rcrb
inc
cmc
or
sub
adc
cltd
xor
mov
xchg
dec
or
in
scas
int3
in
add
sbb
mov
sti
add
xor
sub
xchg
clc
in
pop
arpl
mov
adc
cmc
and
leave
hlt
sbb
adc
int
add
js
inc
cltd
cmp
cmpsb
dec
mov
aas
adc
mov
outsb
push
sub
inc
mov
cmp
xchg
cli
pop
pop
dec
adc
or
and
addl
push
rcl
and
shlb
push
sub
adc
btr
push
mov
popa
movsl
mov
xchg
fwait
dec
daa
adc
cmp
and
sbb
add
cmp
testb
fcmovb
inc
data16
fwait
jmp
call
ror
sbb
xchg
outsl
outsb
daa
imul
cmp
adc
popf
cmp
aam
into
gs
fsubl
outsb
or
xlat
or
or
mov
lcall
mov
push
mov
sbb
sbb
or
xor
and
mov
lods
lea
and
xchg
mov
aam
fadd
imulb
mov
jae
aas
push
ja
adc
lods
stos
mov
and
or
pop
or
pushf
xchg
popa
inc
pushl
push
jg
mov
mov
filds
pop
iret
mov
pop
roll
pop
imul
push
jnp
jecxz
loop
rorb
mov
adc
jbe
or
test
icebp
sti
jnp
in
mov
pop
fdivrs
cs
inc
sbb
add
pop
rcrb
dec
cmc
lock
dec
hlt
mov
xchg
pop
enter
push
sahf
enter
mov
call
xor
pushf
xor
pop
jns
aad
dec
and
push
scas
push
mov
lcall
push
push
gs
pusha
mov
sti
push
filds
dec
loope
sbb
push
inc
push
cli
dec
adc
repnz
loopne
xchg
lcall
daa
sub
sbb
sub
nop
add
jb
xor
cmp
mov
orb
mov
fsub
sub
inc
pushf
or
xor
jbe
sub
outsb
popa
push
add
jg
pop
pop
and
shl
int
add
enter
and
sub
jo
cmp
sbb
scas
popf
push
cs
dec
test
xchg
add
add
mov
dec
xor
jb
lahf
xchg
pushf
xchg
fmull
stos
cmpsb
jecxz
addb
push
pop
jo
ljmp
lcall
bound
lds
dec
mov
loopne
mov
rorl
inc
add
sbb
or
jnp
sarb
aas
aas
nop
adc
xor
inc
and
mov
push
mov
les
jge
inc
mov
pop
insl
xor
and
xor
clc
js
imul
mov
push
testl
ljmp
les
mov
sub
arpl
xchg
or
aam
imul
das
jns
inc
sbb
stos
inc
ret
ja
push
pop
mov
sbb
int
gs
or
int
inc
imul
jle
xor
xchg
xchg
mov
in
shll
or
inc
stc
or
cltd
arpl
pushf
mov
mov
inc
in
test
fstpt
push
adc
jl
lods
leave
pop
jp
call
or
and
or
or
add
andb
xchg
mov
clc
inc
clc
mov
pop
push
imul
stc
inc
or
outsl
scas
fcomps
sbb
ret
push
shll
xlat
jl
mov
mov
ret
and
dec
push
ja
xchg
jo
add
inc
sbb
cwtl
aas
sbb
mov
dec
sbb
testb
sub
ja
scas
shrl
lcall
dec
std
add
movsl
sbb
nop
mov
les
imulb
inc
mov
inc
jbe
orl
je
in
dec
jbe
or
dec
imul
pushl
stc
mov
gs
sub
lods
push
dec
mov
adc
fucomp
dec
ds
clc
push
test
js
xor
mov
xchg
mov
ds
inc
jbe,pt
dec
cli
pop
fidivs
movsb
test
lea
rorl
xor
and
popf
insl
jmp
adc
cmpsb
fldenv
jae
mov
push
dec
cmp
stc
inc
xor
inc
movsl
in
add
cmc
addb
cmp
nop
stos
sahf
test
test
cmp
les
test
dec
lahf
idivl
les
ljmp
js
xchg
sub
add
aam
out
push
std
sub
adc
fsubrl
ffreep
lcall
push
repz
imul
add
das
fdivrl
test
inc
fwait
jp,pt
push
data16
popf
ds
push
outsl
add
mov
sub
jmp
sub
mov
and
ret
div
jmp
and
lods
add
fs
jae
add
xchg
or
cwtl
lock
daa
mov
cmovno
ds
or
nop
fnop
mov
jecxz
sbb
cmc
jp
in
mov
push
popa
cmp
clc
arpl
leave
push
mov
mov
dec
push
mov
inc
repz
cmp
mov
push
push
loop
cmpsb
ja
orl
dec
push
loope
daa
insl
adc
cmp
add
or
mov
xlat
dec
xchg
xchg
add
ss
mov
dec
or
repnz
bound
xor
cmp
xor
dec
adc
addr16
arpl
mov
mov
mov
dec
lahf
js
inc
mov
rcrl
inc
inc
rcll
push
rorb
jl
icebp
ljmp
jl
cmp
pop
pop
push
jge
fs
fbstp
add
aaa
dec
and
bound
push
fs
mov
movsb
cmc
inc
clc
xchg
call
pop
jno
ds
loopne
inc
push
sbb
pop
inc
and
jp
add
into
push
icebp
mov
cmp
insl
jl
sahf
xor
gs
icebp
imul
into
int3
xchg
mov
loop
mov
push
cwtl
adc
loop
shrl
add
insl
shlb
and
and
mov
icebp
lock
gs
push
into
inc
popf
push
aad
aam
and
out
shl
dec
sub
sub
xor
sbb
sbb
rcrl
add
pop
add
jmp
testl
rclb
je
push
cmpsb
les
adc
or
addr16
sub
xor
scas
pop
push
gs
sbb
xor
xchg
jb
pop
sbb
lret
xchg
dec
mov
and
adcb
and
jb
ss
test
pop
imul
fisubl
mov
ss
xor
hlt
ret
sbb
cmc
leave
out
xor
sbb
cmp
xchg
aad
xchg
out
outsl
aas
sub
fisttpl
mov
testl
out
mov
fcoml
fdivs
punpckhbw
push
call
mov
enter
outsb
cs
push
lret
push
xlat
jmp
add
jg
aad
adc
pop
out
jnp
lods
lahf
fs
scas
nop
mov
in
out
lret
ja
push
xchg
loopne
inc
cltd
xchg
mov
sahf
iret
fwait
mov
push
xchg
or
jle
push
out
push
scas
adc
pop
lds
and
inc
faddl
sub
int
sub
pop
fsubs
mov
into
xchg
out
push
fcoms
and
test
fistl
mov
mov
lds
aam
les
sbb
aad
test
lods
nop
ret
shl
jns
mov
mov
gs
jbe
lock
imul
imul
es
cltd
scas
pop
dec
shll
mov
fsubrl
std
test
mov
fwait
or
mov
ss
sub
push
gs
out
xor
addr16
shr
pop
loopne
mov
pop
fcom
jmp
adcl
movsl
leave
cmp
test
test
or
outsb
sub
push
sub
lcall
and
xor
or
addr16
jp
sub
jecxz
mov
inc
jmp
pusha
mov
ret
je
fdivrp
xorb
outsl
je
shrb
inc
sbb
jb
and
adcb
repnz
xchg
subl
inc
push
daa
lods
into
clc
xchg
push
sub
iret
clc
sbb
inc
mov
lock
push
mov
add
pop
push
sahf
pop
push
imul
add
mov
in
add
jge
push
push
push
sbb
cwtl
jnp
imul
adc
addb
jg
xchg
cmp
lea
jg
cmpsl
mov
scas
cld
pop
call
loop
daa
notl
insl
push
fwait
and
cltd
mov
stos
xchg
push
andb
xchg
push
sar
lods
imul
jecxz
lods
dec
aaa
sbb
sub
pop
xchg
in
pop
sbb
xor
inc
jg
mov
aad
adc
arpl
mov
je
mov
ret
pop
ret
mov
out
insb
xor
add
mov
or
mov
inc
sbb
mov
iret
or
fiadds
and
pop
mov
xchg
adc
dec
sbb
mov
mov
xor
inc
add
mov
mov
je
js
adc
add
mov
clc
mov
movsb
adc
in
pop
mov
popf
test
cwtl
jb
movsb
mov
scas
rcl
xchg
ret
add
pop
fistl
loope
cmpsb
ja
testb
cmp
pop
add
cs
xor
js
xor
ljmp
lock
aad
movsl
sub
dec
fwait
sub
dec
push
mov
fs
add
ror
imul
nop
xor
pop
nop
cld
data16
inc
test
test
xchg
js
pop
ljmp
pop
mov
sub
add
dec
pop
push
sub
xchg
xchg
imul
mov
xchg
stc
loopne
sbb
inc
or
testb
jbe
xchg
movsb
add
int
or
dec
sbb
mov
add
xchg
aam
notb
daa
insl
inc
out
rolb
fsubrl
xor
mov
test
xchg
out
clc
mov
ss
jg
cli
js
scas
add
pop
and
addr16
icebp
les
lods
sahf
shll
dec
push
std
xchg
push
iret
cmpsl
xor
or
lods
loope
inc
inc
roll
push
cmp
les
rol
aaa
shll
fstpt
xor
aad
mov
in
jle
mov
mov
adc
movsl
out
in
dec
jae
xchg
sub
mov
jne
insb
and
cltd
or
xchg
movsb
lods
fcomp
adc
inc
fisubs
leave
out
cmpsb
in
and
and
push
into
scas
add
cli
lods
cwtl
xor
out
push
popf
cmpb
jo
aas
les
sub
sahf
lds
lret
in
mov
lahf
dec
enter
add
shll
push
xchg
les
push
jb
inc
jle
fldl
in
decl
mov
push
in
jbe
mov
popl
adc
cltd
pop
sub
cmp
mov
add
mov
mov
stos
int
fnstcw
pop
popa
mov
out
dec
mov
cli
xor
inc
add
aam
mov
sahf
pop
into
aaa
fbstp
push
mov
insl
test
negl
sbb
shl
inc
cmpsl
adcb
pop
test
aam
xor
je
int
adc
aas
enter
xchg
cli
cmp
add
push
cmc
data16
and
or
movsl
sub
xlat
pop
test
sub
cmp
push
pop
push
xchg
mov
cmpsb
mov
imul
cmp
in
fistpll
inc
add
sbb
cltd
mov
adc
jae
lahf
out
stc
sbb
add
movsb
jne
ds
mov
xchg
sbb
mov
popf
cwtl
push
test
xchg
dec
mov
ret
xchg
int3
adc
dec
add
js
daa
push
std
and
lret
orb
adc
in
xor
cwtl
push
xchg
sub
add
scas
out
in
adc
icebp
mov
pop
jmp
cmpsb
mov
sub
push
push
js
and
lret
int3
pop
aad
lds
xchg
xchg
cwtl
cmp
orl
pop
push
clc
cmpsb
adc
sub
pop
push
push
sahf
loope
out
je
cmc
fwait
pusha
mov
xchg
mov
lret
inc
ficoml
sub
cmp
mov
movhps
dec
mov
adc
push
mov
lahf
scas
out
aas
pop
mov
dec
test
and
inc
jle
daa
in
or
xor
or
inc
cmc
rol
data16
ret
test
mov
push
dec
lods
frstor
test
jmp
cli
add
adcb
push
int3
lods
sete
movb
jmp
mov
mov
cmpsl
fwait
adcl
pop
jmp
or
jo
insl
jo
or
gs
insb
mov
fstl
mov
jno
fldz
int3
cltd
je
int
mov
sub
jmp
call
mov
cwtl
addr16
les
into
adc
fs
roll
out
jo
lods
or
mov
inc
xor
in
sub
cmp
cwtl
in
pop
ljmp
pop
mov
lea
mov
cmp
popf
mov
xchg
std
outsl
pop
cli
mov
cmpb
daa
mov
sbb
pop
push
push
popf
test
icebp
fsubs
sbb
icebp
mov
push
fwait
sub
lahf
adc
ret
xlat
mov
sahf
les
and
mov
mov
popf
push
or
xchg
movsl
inc
ljmp
lea
mov
push
sbb
mov
cmpl
xchg
push
imul
in
stos
adc
xrelease
xchg
out
ss
push
clc
stos
pushf
sbb
cmp
test
pop
jecxz
push
out
inc
nop
fidivrs
mov
int
or
push
jecxz
or
addb
repnz
in
clc
fisubrl
and
pop
mov
dec
std
add
sub
shrl
std
or
pop
test
imulb
fdivl
lahf
mov
pop
and
mov
mov
sub
movsl
repnz
adc
mov
cmpsb
imul
lock
sub
pop
jl
pop
push
or
repz
dec
inc
adc
lret
or
and
hlt
adc
pop
stc
in
jns
dec
mov
pop
mov
in
add
leave
orb
xor
mov
or
sub
ja
inc
fsubl
movsl
jns
xchg
jle
sti
sub
push
pop
xor
cmpsl
adc
dec
fmul
mov
xor
outsl
push
test
jp
pushf
mov
fnstsw
push
mov
adc
cltd
cmpb
or
jp
pop
xorb
add
xchg
push
andb
sbb
lea
aam
pand
cwtd
aam
mov
mov
ficomps
and
sub
push
jae
scas
sarb
hlt
xor
cmpsb
or
push
push
mov
mov
adc
icebp
cmpsb
add
pop
mov
popf
jg
push
and
popf
pop
push
adc
lahf
dec
mov
push
pop
mov
mov
mov
das
mov
lock
negl
gs
pop
outsb
add
mov
adc
aas
add
adc
lret
pop
inc
add
pop
xchg
outsl
cli
xchg
aas
mov
dec
fnstcw
dec
fcoml
inc
popf
lret
pop
out
insb
cmp
adc
or
loopne
cltd
mov
push
inc
lock
ficomps
sub
imul
push
jae
fimull
cmp
lds
add
loope
xchg
aaa
xchg
dec
and
or
push
push
pop
adc
outsl
jmp
ja
pop
add
call
cmp
mov
cli
icebp
iret
std
push
int3
lock
fwait
pop
xchg
int
ficompl
add
leave
xchg
push
sub
jle
call
sub
mov
fcmovne
addb
mov
in
aas
jg
lcall
xchg
jle
xchg
dec
leave
cwtl
mov
popa
outsl
fisttpll
jmp
push
add
insb
test
mov
push
xchg
jo
out
ret
xchg
or
loopne
mov
les
aad
outsb
sub
mov
icebp
fdivr
out
sarb
xor
cmp
mov
or
jge
lods
jl
adc
leave
xchg
cli
fnstcw
sbb
jnp
cmp
fildl
mov
xor
or
data16
idivb
dec
mov
mov
push
int
addb
mov
into
pushf
rorb
jbe
mov
mov
lods
push
shrb
cli
xchg
jae
adc
idivl
outsb
ss
sbb
jnp
ja
cmp
pop
add
in
sub
lods
push
adc
sub
dec
mov
mov
pop
xor
rcrl
imul
or
mov
dec
movsl
sbb
nop
mov
mov
imul
in
dec
repnz
fadds
nop
lods
test
xchg
cmp
movb
rcrb
popf
pop
movd
push
std
in
mov
xchg
xchg
or
out
and
aad
mov
popf
add
cmp
cmpsb
dec
dec
jno
gs
adc
pop
add
orl
add
jo
imul
pop
repnz
setl
dec
dec
add
pusha
ja
fstps
into
pop
fwait
orb
push
mov
fsubrl
cwtl
outsb
icebp
fisubrl
mov
test
pop
mov
add
xchg
incw
shll
cmp
int3
scas
les
out
sbb
mov
add
in
aad
int
jbe
xchg
mov
dec
mov
in
xchg
mov
jp
mov
mov
push
adc
div
or
stc
sub
out
mov
dec
adc
pushf
test
adc
loope
jne
pop
and
movsl
push
stos
push
dec
add
popa
jecxz
xor
add
dec
out
push
rcpps
aas
ds
ljmp
int3
pop
jg
fstps
mov
mov
adc
xchg
out
test
dec
mov
xlat
je
cltd
outsl
jl
dec
xchg
roll
dec
xchg
fists
lods
adc
mov
jbe
rol
sub
xchg
add
sahf
leave
pop
mov
dec
out
out
fcoms
out
mov
mov
inc
sub
iret
and
push
aam
aaa
jne
cmpsl
inc
adc
out
inc
push
add
outsb
cld
or
and
sbb
call
mov
inc
mov
fdivl
js
js
fsts
rcrb
push
sahf
outsb
mov
jbe
lret
or
test
scas
popf
cwtl
into
ja
cmpsb
popf
test
sub
cmp
cld
pop
rorb
and
jb
push
xchg
inc
addb
xor
sub
or
xor
cmpsb
mov
fdivrs
xchg
jo
cmp
outsb
push
sbb
loop
stos
cld
cmpsb
sbb
sahf
pop
and
pop
pop
adc
mov
dec
push
or
idivl
xchg
iret
sbb
rcrb
xchg
adc
jb
cli
sbb
inc
pop
test
pop
imul
cmp
push
aad
xchg
sbb
jl
imul
fcomps
adc
sti
lahf
shrl
push
dec
icebp
and
lock
adc
inc
dec
cmp
pushf
mov
adcl
leave
pop
xor
add
out
rcrb
xchg
movsl
adc
mov
fs
inc
loopne
jg
stc
outsb
pushl
jmp
jns
into
cld
popa
jae
out
mov
push
dec
xchg
js
or
and
into
xchg
das
popf
iret
loope
jmp
enter
jle
sti
sub
repnz
xor
pop
loope
pop
push
lds
ljmp
aaa
sbb
and
xor
shlb
testb
iret
bnd
pop
push
fwait
rcr
addr16
dec
adc
and
push
es
aaa
xchg
scas
fcomip
loope
cmp
fs
push
ss
xchg
inc
adc
xor
addr16
int
cmpsl
lds
push
lahf
or
test
dec
xchg
pop
sub
inc
rcrl
std
pop
pushf
mov
cltd
sbb
fwait
lods
ja
pop
jb
xor
jne
fucomp
jb
scas
dec
leave
cmp
mov
mov
adc
mov
jmp
sbb
adc
jecxz
pop
push
rclb
pop
in
mov
in
mov
add
ret
dec
das
pop
fnstsw
repnz
pushf
push
sahf
mov
add
add
rol
dec
or
mov
xchg
xchg
insb
pop
popl
inc
push
into
adc
xchg
jge
cs
jp
and
and
lods
dec
movd
jl
insb
mov
add
xchg
inc
sbb
loop
inc
push
loop
adc
cs
add
arpl
pushf
lds
jmp
ss
add
scas
movsb
iret
jno
sbb
xor
arpl
divl
mov
cmp
and
adc
call
out
add
sbb
sbb
cmpsl
push
pop
leave
out
or
dec
xchg
dec
shl
add
xchg
push
sbb
inc
lods
inc
xor
js
cmp
jmp
loopne
outsl
or
xchg
mov
cli
test
andl
sub
xorl
lods
stc
pop
push
dec
test
pusha
movsl
in
sub
pop
repz
popf
stc
sarl
mov
test
movl
lcall
or
xchg
and
or
push
sbb
push
insb
jae
in
out
test
fbld
or
push
imul
xchg
lret
shl
pop
outsl
out
pop
lret
mov
push
jae
ror
inc
inc
aad
mul
mov
cmc
adc
and
mov
fdivl
xchg
out
xchg
or
loope
in
jne
push
mov
and
xor
adc
and
aam
pop
popa
push
lock
push
lret
cld
inc
mov
sbb
jno
or
cmp
std
jp
int
push
jmp
std
pop
xor
or
push
pop
push
test
jmp
jno
nop
jecxz
dec
inc
pushf
out
or
negb
out
jl
pop
rorb
in
xor
inc
push
repnz
add
xchg
xor
adcb
sub
sbb
aaa
mov
aam
cmp
mov
lea
xchg
loopne
fildl
adc
imul
xchg
xchg
jl
stos
fstpl
fnstcw
mov
pop
pushf
inc
xchg
xchg
adc
bound
pop
pusha
lret
xchg
xchg
aad
jl
sbb
je
cmp
jns
inc
dec
mov
inc
hlt
ss
xor
lret
fs
jge
shlb
ds
pop
adc
xchg
clc
add
xchg
icebp
icebp
xor
fstpt
mov
jno
sahf
loope
out
cmp
shrb
sub
jbe
mov
sub
mov
sbb
xor
mov
stos
jno
enter
mov
xchg
pop
std
dec
push
dec
xchg
sub
xor
push
shl
add
imul
jmp
mov
dec
or
inc
ljmp
cwtl
mov
enter
jae
add
repnz
jnp
adc
adc
jle
and
push
iret
repnz
pop
dec
xor
or
in
jae
int3
mov
mov
push
loopne
out
movsl
cmp
insl
cmp
pusha
in
lods
push
xchg
ret
dec
icebp
mov
addr16
or
imul
hlt
js
mov
push
mov
cmp
dec
mov
lret
fdivrs
into
push
iret
test
mov
out
or
sbb
or
movsb
ret
insl
cmpsb
cmp
xor
inc
ffreep
mov
and
rcl
jmp
flds
pushf
add
dec
fwait
sti
ds
add
es
cmp
orl
sahf
ficoms
inc
mov
jg
cmpsl
repz
stos
lret
sti
nop
inc
pop
test
mov
lds
scas
and
inc
mov
popa
jmp
jne
test
xchg
pop
jg
daa
xchg
pop
dec
jns
ljmp
jp
add
test
jbe
add
mov
mov
cmp
dec
dec
jae
outsb
sub
insb
mov
mov
push
or
movsb
jb
jmp
add
imul
jg
mov
inc
js
clc
shlb
ror
xor
fwait
xchg
xor
adc
add
xor
sbb
jno
or
or
mov
in
push
and
jle
cmp
jg
movsl
shlb
jo
lret
sbb
repz
cli
pop
pop
inc
push
jl
jnp
mov
sahf
add
ret
jp
adc
lods
mov
push
sub
add
lods
test
xor
mov
mov
dec
repnz
push
and
pop
int3
cld
fwait
inc
addb
insb
daa
cmc
push
iret
dec
xchg
cmc
cld
sbb
dec
and
sbb
jmp
sub
jae
jl
out
into
icebp
pushf
outsl
iret
cmpsb
jno
test
lods
std
adc
in
mov
pusha
jae
fstpl
outsb
push
decl
mov
dec
xchg
repnz
popa
cmc
jg
push
movsb
dec
push
jbe
scas
icebp
arpl
loopne
lahf
adcl
nop
mov
sbb
roll
and
lds
add
and
mov
ret
inc
cmp
or
mov
mov
jno
pop
jp
cmp
je
dec
jne
push
add
test
mov
test
std
lock
lods
adc
pop
and
and
and
lea
adc
pop
sub
es
dec
repnz
jae
adc
jbe
movsb
call
lgdtl
inc
in
jo
mov
mov
xchg
adc
les
mov
pop
mov
sbb
pop
test
ja
xchg
icebp
or
or
add
out
lea
lods
outsl
add
fmuls
or
dec
iret
cltd
int
add
jge
xchg
sbb
mov
aam
cmp
xor
xlat
and
cld
adc
nop
xchg
lock
jnp
decb
cmp
aas
xchg
ljmp
ret
xor
jg
ljmp
push
mov
shlb
adc
xchg
in
test
and
in
mov
popf
lret
iret
daa
lahf
or
sbb
in
fadds
dec
jbe
jne
jmp
iret
jnp
out
mov
and
or
dec
xchg
mov
xchg
xchg
sub
das
push
nop
movsl
sbb
lea
cmp
mov
dec
xor
add
mov
pop
push
cmp
mov
add
push
adcl
inc
loop
es
js
jmp
aam
in
rcrl
int3
ds
aam
das
push
pop
mov
xchg
jne
sbb
mov
aad
cmp
ds
into
aam
cmp
lcall
arpl
rorl
test
pusha
lock
scas
mov
arpl
inc
int3
inc
pop
jmp
cmp
pushf
dec
cmp
pop
pop
dec
sub
xor
inc
or
pusha
cli
push
inc
sbb
addr16
cmpsl
mov
pop
mov
and
lods
xchg
fstl
mov
mov
int3
adc
adc
and
lcall
or
sbb
fiaddl
or
xorl
lods
sbb
sar
pop
data16
lea
inc
dec
pop
inc
pop
mov
repnz
xchg
jne
xorl
insb
push
xor
mov
hlt
mov
mov
lret
ret
fwait
pop
aas
testl
xor
pop
je
mov
inc
out
loop
movsl
mov
hlt
test
xlat
insl
mov
jo
add
ss
rolb
icebp
popf
xor
or
fwait
xchg
xchg
es
mov
xor
push
sub
data16
adc
xchg
adc
sub
leave
sti
mov
or
ss
stos
add
lods
and
inc
xor
rcll
dec
sub
ja
dec
and
repz
mov
jecxz
insb
shlb
jle
rolb
lds
mov
cld
jb
iret
mov
in
lret
cmpl
aas
addl
cltd
out
into
add
cmpsl
mov
sub
fs
dec
ja
out
and
mov
jecxz
ljmp
fs
aas
and
xor
gs
mov
and
mov
mov
mov
mov
add
push
pop
dec
rorb
andl
cmp
xchg
out
leave
shlb
lds
shll
xchg
jg
fadd
leave
insl
inc
inc
scas
das
inc
sub
mov
arpl
rcr
lock
jle
testb
push
aam
mov
sub
inc
push
je
repz
vprotd
xchg
out
out
push
push
in
jo
cmp
inc
dec
inc
xchg
hlt
jnp
ficomps
dec
or
xor
pop
mov
push
sbb
xchg
sbb
inc
pop
fsubrl
jb
mov
mov
scas
rorb
cli
sub
in
fisttpll
mov
and
ja
jne
divb
xlat
push
dec
mov
dec
test
and
outsb
mov
out
out
mov
mov
xchg
push
mov
pop
addb
pop
das
pop
addr16
data16
addr16
shrl
lret
aaa
jbe
add
jae
xor
inc
sub
xchg
xor
lds
push
in
push
pop
xor
call
ja
dec
xor
mov
cmpsb
out
pushf
ret
pop
cld
lea
test
sti
iret
aas
pusha
mov
fsubl
mov
mov
movsl
pop
jns
pop
dec
cmp
mov
pop
in
in
inc
mov
xchg
lcall
popf
insl
dec
xor
xchg
push
fnsave
xchg
dec
scas
sub
sbb
insb
push
mov
xchg
xchg
out
adc
data16
lret
aaa
stos
dec
aam
mov
nop
push
sub
std
push
cmpsl
cmp
jp
mov
xor
dec
lcall
mov
xorb
insb
mov
fildl
cmp
iret
fsub
aas
mov
inc
xor
jne
imul
mov
in
lods
jns
mov
push
sub
inc
lods
fnstenv
pop
loop
jbe
cwtl
push
xor
fidivl
xchg
out
insb
push
in
xchg
sbb
imul
dec
shlb
js
xchg
hlt
xor
ds
lret
adcb
cmp
mov
repz
loope
add
scas
iret
cmp
mov
lahf
cmp
sti
addr16
div
cmpb
ret
and
mull
rol
inc
aaa
out
push
jo
jo
jmp
jns
les
stos
lcall
mov
rolb
sbb
clc
pop
mov
fistl
lock
xchg
mov
popf
in
test
lret
mov
cmc
popf
pop
ret
mov
outsb
mov
aam
adc
mov
ljmp
pop
mov
jb
dec
into
aas
mov
leave
lea
adc
or
scas
push
loop
lods
jp
cmp
ljmp
lock
rorl
xor
jmp
xor
mov
imul
es
fcoml
fldenv
leave
push
divb
and
adc
fdiv
mov
push
push
xor
test
lods
outsl
cmpsl
push
mov
ds
xchg
and
push
adc
iret
push
and
insb
adc
arpl
mov
mov
std
push
adc
dec
aas
push
push
pop
jno
lods
adc
jnp
adc
or
movsb
mov
iret
inc
int3
movsl
aad
lock
imulb
jbe
mov
jno
push
aas
push
mov
cmp
push
jecxz
cmp
sub
clc
xchg
jg
pop
shll
add
pusha
add
addr16
aaa
mov
cltd
imul
pop
lret
inc
das
repz
loop
sub
mov
icebp
cmpl
sbb
and
pop
or
out
idiv
and
cwtl
and
insb
push
aam
cmp
xchg
xor
mov
inc
mov
xor
test
out
jecxz
cmp
cmpsb
jmp
les
xchg
or
iret
in
xor
cmp
push
fcomi
mov
push
out
mov
loope
pushf
adcb
popa
and
mov
mov
sarb
sbbb
aaa
sub
xor
cmp
xchg
pop
push
dec
cs
push
test
adcb
and
lds
adc
push
push
jbe
test
jmp
shrb
sub
andl
fstpl
rclb
divl
xchg
lods
and
jmp
dec
dec
shlb
mov
adc
test
int3
scas
jbe
test
sub
push
outsl
leave
leave
imul
sub
dec
in
inc
jecxz
push
pop
xchg
adc
cli
xchg
dec
outsl
mov
mov
lods
lcall
mov
or
adc
pop
repz
lods
jecxz
mov
or
sbb
decl
lcall
mov
loopne
in
or
sub
push
dec
cmpb
ret
clc
or
jnp
inc
je
xor
cmpb
into
stos
mov
cmp
stos
sub
push
push
outsl
pop
ss
fmull
mov
int
test
pop
add
dec
adc
pop
out
xor
jno
jecxz
and
insl
sub
inc
push
jmp
cmp
push
fisttps
adc
jns
add
sbb
outsl
adc
xchg
mov
test
insl
test
or
popf
add
mov
pop
xchg
jge
xchg
lcall
add
xchg
add
addr16
pop
inc
roll
add
ja
jb
pusha
lret
jbe
sbb
pop
das
inc
lret
and
mov
lods
jo
jne
fidivrl
dec
addr16
outsl
dec
je
clc
ret
mov
xor
fwait
andl
sbb
adc
in
nop
imul
xchg
negb
mov
roll
aas
shrb
and
push
push
dec
lock
and
fstpl
xchg
jbe
cmp
mov
stos
fidivrl
pop
pop
add
mov
loop,pn
imul
icebp
add
push
std
xor
int3
fnstcw
shr
inc
js
pop
xor
scas
mov
clc
cmpsb
mov
adcl
add
xor
insb
dec
sbb
xchg
jecxz
fwait
nop
test
mov
and
and
xor
jb
insl
testl
cmp
push
scas
fnstcw
add
pop
rcrl
fs
mov
jne
cwtl
push
push
jb
fdivl
mov
fistl
flds
and
out
movsl
movsb
inc
mov
mov
mov
mov
xor
xchg
cmc
push
lods
dec
and
xorb
scas
push
mov
ljmp
call
ds
pop
lods
dec
lret
inc
fbld
dec
fsts
lods
cld
mov
ror
jbe
adc
fsubs
nop
push
outsb
sbb
or
push
push
inc
adc
mov
repz
sub
xchg
jno
adc
dec
adc
jne
mov
push
mov
ja
sub
out
inc
xor
push
fdivp
or
loope
mov
hlt
dec
add
mov
cmpsl
pop
movsl
in
mov
popf
daa
sbb
out
mov
push
mov
pusha
pusha
fwait
loope
pushf
stos
out
xchg
ljmp
scas
aam
mov
sarl
leave
dec
cltd
testb
fs
jp
sti
outsl
jl
frstor
add
shl
xchg
jae
aad
stos
lret
dec
in
scas
test
mov
das
push
pop
mov
addb
mov
andb
or
test
mul
push
pop
jno
jbe
repnz
jns
pop
cmp
push
mov
loope
pop
loope
movsb
xchg
jbe
dec
cli
adc
outsl
mov
repz
pusha
mov
and
adc
mov
les
loope
imul
daa
adc
cmp
popf
xor
mov
dec
movsl
jmp
jp
inc
test
sti
jns
idivl
push
dec
adc
cmp
xor
shll
mov
sbb
pop
jmp
outsl
stos
shlb
jp
shl
jns
pop
push
loop
pop
mov
or
push
cltd
sti
jae
nop
ljmp
jge
fwait
push
aad
or
call
add
and
sub
shlb
or
add
dec
sbb
push
push
or
jb
cmpsb
fsubrl
insl
movsb
in
or
iret
pop
mov
cmc
or
inc
push
jb
pop
jo
fsts
out
mov
pop
mov
cltd
fcoms
xchg
jno
movb
test
decl
pop
cmp
pop
jl
xchg
sbbb
pop
xchg
ss
and
cmp
jmp
mov
jmp
fmull
cmc
mov
jl
cmp
stos
dec
cmp
adc
mov
cmpsb
lea
movb
les
lds
stos
cmp
cmpsl
cmp
cmpsl
in
dec
cmp
fdivs
sbb
dec
lcall
inc
push
or
ja
or
lret
insb
mov
cmp
out
rol
aam
cmpsl
out
fs
aad
pop
and
clc
push
xor
sub
pusha
loopne
stc
sbb
pusha
and
xor
dec
aaa
loop
mov
jae
or
aas
sub
lock
out
xchg
shrb
sbb
mov
xor
adcb
fdivp
mov
inc
mov
gs
push
lcall
rorb
or
xchg
hlt
icebp
or
jnp
stos
dec
inc
push
or
dec
inc
and
pop
roll
fiaddl
cmc
inc
mov
xchg
adc
and
add
sub
ret
adc
or
daa
jle
in
test
lret
sahf
fnstenv
pushf
lds
add
mov
das
lahf
dec
and
pushf
pop
dec
rol
adc
sub
cmp
lcall
out
mov
imul
insb
inc
lock
jge
adc
mov
pop
cld
pop
jecxz
stos
sub
out
push
jle
les
enter
fwait
push
int
mov
and
mov
sbb
popf
push
stos
lret
aas
adc
pop
sti
les
or
pop
in
dec
cmp
pop
cmp
popa
bnd
repnz
inc
sub
divb
enter
pop
and
jae
repz
es
mull
xor
enter
jnp
push
popa
dec
fiadds
lcall
int3
lahf
mov
repnz
sbb
and
rcrb
jbe
je
or
imul
cmp
add
aas
xchg
sti
push
pop
arpl
lahf
leave
sub
outsb
pop
dec
mov
out
clc
jb
pusha
mov
repnz
push
mov
sbb
mov
int
inc
mov
xor
fildl
dec
mov
mov
test
xchg
jne
movsb
popf
int
imul
mov
shr
adc
inc
frstor
pop
out
sub
xchg
adc
push
push
ss
push
dec
insl
xchg
inc
test
xor
leave
int3
je
cltd
aam
sub
jl
mov
sbb
lds
push
js
push
arpl
and
mov
std
jmp
sub
and
xchg
cmp
cmp
test
pop
mov
push
out
push
pop
mov
imul
scas
add
or
jge
sbb
mov
out
jp
aas
jb
pushf
nop
mov
dec
cmp
sti
or
xchg
nop
inc
cs
jg
sbb
loop
inc
cmp
mov
xchg
xchg
lahf
pop
jg
pop
push
inc
jb
into
mov
ret
push
sbb
in
xchg
or
cld
repnz
dec
lret
add
stc
mov
adc
add
and
push
xchg
sbb
sbb
pop
hlt
je
insb
insl
movsb
lcall
addr16
inc
cwtl
jno
pop
inc
shrl
in
loope
pop
dec
mov
sti
mov
pop
jne
in
lcall
inc
mov
sub
outsl
xchg
iret
enter
repz
push
in
mov
push
xchg
push
push
in
mov
xchg
nop
stc
xlat
push
arpl
adc
mov
pop
cmovg
test
lods
lock
int
xchg
enter
mov
pop
and
nop
insb
mov
add
dec
sub
jl
scas
std
ja
loopne
add
and
pop
les
adcl
je
rcrb
jb
sbb
and
addr16
xchg
inc
mov
dec
iret
mov
test
mov
mov
mov
sbb
jle
dec
jno
imul
xchg
mov
scas
mov
push
fdivrs
mov
adcb
pop
sbb
insl
add
and
add
lea
push
jle
jmp
sub
sub
add
cli
adc
rcl
inc
push
lods
pop
pushw
lea
inc
mov
mov
mov
gs
jmp
test
sub
inc
cld
in
mov
jecxz
dec
cmp
xor
frstor
push
mov
adc
pop
mov
xor
xor
stc
inc
mov
iret
inc
mov
cli
sbb
dec
xchg
jl
cmp
add
xor
add
xchg
pushf
mov
dec
mov
xchg
stc
cltd
shr
jne
pop
clc
add
out
inc
xchg
outsl
scas
ror
arpl
sub
jo
ret
adc
adc
push
inc
inc
pop
rorl
dec
test
out
gs
inc
mov
jns
dec
mov
aam
push
clc
jl
cmp
andb
jae
nop
dec
pusha
jle
mov
in
add
les
and
lcall
mov
jge
xchg
pop
cmp
das
movsl
xlat
data16
imul
insb
mov
push
dec
lock
dec
sub
mov
lcall
ret
ljmp
pop
cmc
sub
jb
in
inc
insb
push
and
stc
adc
sarl
nop
jmp
aas
dec
insl
or
xchg
cmp
jae
inc
and
aad
repnz
incb
mov
add
pop
into
orb
fdivl
pushf
or
lret
adc
in
lcall
cmp
fsubr
das
jbe
mov
negl
push
call
xchg
push
xchg
std
pop
pop
scas
ss
sahf
xor
in
aas
mov
fsub
pop
mov
loopne
popa
arpl
out
dec
mov
push
mull
movsb
xor
mov
or
stos
lret
rclb
sbb
sbb
pop
mov
nop
cmp
push
mov
adc
mov
shll
in
in
cli
or
push
fidivrl
sub
mov
add
inc
xchg
mov
xchg
pusha
cmp
dec
jno
inc
push
jae
pop
shlb
mov
in
adc
loope
xor
xor
scas
xchg
aas
mov
xchg
jmp
mov
out
repz
je
inc
jnp
imul
lods
movsl
std
loop
out
mov
adc
cmpsl
mov
sbb
add
adc
cmpsb
std
cmp
out
fnsave
push
xchg
sbb
int3
xor
addr16
pop
add
pop
in
and
sbb
fstpl
mov
aad
mov
or
push
sub
mov
pop
insl
insb
test
or
adc
jle
loop
adc
insb
inc
push
add
mov
lahf
mov
pop
dec
ja
cmp
cmp
cltd
xor
jne
stc
aas
imul
imul
in
add
cltd
in
inc
mov
leave
cmp
inc
call
imul
adc
in
cltd
pop
mov
sbb
xlat
sub
ljmp
add
dec
or
push
sub
add
daa
sbb
xor
xor
and
repz
daa
cmp
xchg
test
dec
imul
dec
pop
or
cmp
mov
jge
cmp
mov
imul
mov
test
and
dec
push
jmp
jge
pusha
inc
mov
xchg
stos
or
xchg
xchg
fs
out
and
into
out
lds
mov
pop
mov
and
clc
adc
outsl
pop
cwtl
add
pop
dec
bound
xlat
ret
and
mov
adc
xchg
add
or
adc
hlt
stc
pop
dec
shrl
xor
loopne
dec
push
aas
mov
jns
inc
cmp
or
loope
or
lods
repz
sbb
pop
ret
pushf
je
push
mov
popa
mov
mov
cmp
lock
sti
add
pop
int3
in
dec
icebp
mov
mov
lret
cltd
arpl
cmp
sarl
jmp
lcall
into
outsl
icebp
xchg
lock
les
mov
adc
scas
mov
call
fildl
fbstp
push
loope
fstpt
daa
shrb
or
adc
insl
xor
cld
lock
push
adc
sbb
cld
shl
out
dec
daa
dec
push
pop
xchg
sub
pop
push
cmp
inc
push
es
dec
lahf
stc
stos
push
ret
cli
dec
gs
out
push
adc
dec
cli
mov
fs
fwait
mov
fnsave
pop
jns
xor
mov
inc
jbe
sub
sbb
in
lret
inc
test
adc
aas
dec
call
jp
adc
dec
es
adc
ret
xlat
jp
dec
xlat
jb
test
dec
nop
push
mov
xor
imul
jg
rol
sbb
sub
sub
jle
or
xor
inc
call
mov
sub
pop
loop
pop
pop
mov
cmp
mov
enter
mov
dec
or
popa
pushf
sub
pushf
cmovg
roll
mov
pushf
leave
xchg
sti
sub
loop
dec
jmp
ret
in
xchg
sbb
test
out
mov
pop
adc
mov
sub
cli
shll
jecxz
mov
cmp
loopne
enter
out
sbb
inc
push
push
cmpsb
shrl
mov
out
push
leave
xchg
cmp
mov
inc
and
mov
repnz
call
cwtl
push
arpl
jl
out
cmp
dec
jle
test
pop
jge
insb
insl
mov
cmp
cld
add
fcompl
lock
xchg
fsubs
fldt
mov
sub
pop
outsb
shl
mov
push
insl
mov
xor
jb
aas
out
negb
imul
mov
push
pop
pop
push
lahf
out
jl
xchg
or
pop
inc
xchg
je
sbb
inc
iret
add
push
ret
push
pop
enter
dec
mov
add
lahf
dec
xor
dec
jbe
js
and
inc
jbe
movsb
mov
mov
dec
lock
mov
dec
cmp
and
subb
clc
cmp
mov
movsl
lcall
sub
jo
dec
add
int3
idivl
jp
adc
scas
je
cmp
inc
testb
cmp
adcl
insl
add
push
pminub
add
or
mov
jmp
pop
sub
lret
sahf
xchg
call
icebp
mov
inc
jmp
into
mov
and
lea
int3
pop
ja
jns
sub
imul
icebp
jnp
mov
repnz
push
cwtl
addl
sbb
lods
enter
adc
add
icebp
mov
xlat
mov
xchg
adc
mov
push
in
and
pop
popf
gs
or
leave
push
addr16
ret
int
arpl
jge
pop
test
sbb
repz
adc
stc
pop
fnstsw
pusha
xchg
push
sub
cmpsl
gs
mov
out
enter
mov
loop
repz
inc
cmp
aam
mov
inc
or
stos
test
popa
insb
lret
shll
test
iret
push
inc
add
fs
mov
mov
sarl
jnp
pop
sahf
jo
sbb
add
shll
dec
dec
inc
ds
inc
or
mov
sub
ljmp
cltd
push
add
sbb
std
mov
xor
in
ja
aad
pop
and
xor
imul
xor
andl
bound
ds
pop
popf
call
out
mov
hlt
jo
cld
sbb
mov
cmp
mov
popf
adc
xchg
loopne
push
invd
fbstp
dec
pop
cmc
call
mov
jne
clc
hlt
imull
adc
rcll
imul
jae
clc
cltd
js
inc
out
and
sub
and
lret
mov
cwtl
push
les
sarl
xchg
mov
and
shll
jmp
mov
fs
icebp
stos
push
xchg
cld
jecxz
lock
jo
in
imul
adc
xchg
mov
pop
adc
pop
aam
push
jmp
ss
mov
sbb
or
das
iret
pop
xor
mov
xlat
fcoml
jl
and
sbb
sub
sbb
adc
ficoms
jae
dec
lds
sbb
out
xchg
jo
fadd
mov
scas
sti
jbe
ret
mulb
sub
cmp
sub
mov
xchg
std
push
xchg
inc
cmp
fidivrl
out
push
in
and
in
jl
xor
in
out
jl
xchg
push
sub
push
loopne
push
nop
and
in
add
js
bound
add
inc
mov
xor
outsb
enter
out
incl
dec
adcb
mov
loopne
push
mov
stos
lret
movsb
neg
insb
push
adc
xchg
inc
imul
adc
aad
or
je
xchg
lds
nop
lock
ss
add
sbb
pop
inc
scas
sub
dec
out
xchg
es
xchg
inc
mov
pop
out
shlb
mov
in
cmp
je
mov
pop
mov
lods
sbb
dec
lods
sbb
fs
sbb
ja
test
ljmp
leave
fcompl
fcomps
aam
popf
xchg
cmp
mov
dec
fbld
pop
insl
mov
dec
iret
repnz
lret
sub
js
hlt
or
push
xlat
in
cwtl
jns
in
fwait
add
sbb
into
push
adc
shll
and
bound
cmp
add
out
xor
inc
inc
pop
leave
outsl
or
sbb
inc
sbb
inc
mov
mov
int
nop
iret
movsb
sti
sbb
das
adc
and
cltd
adc
mov
jl
popf
cld
int3
push
xor
add
xchg
mov
scas
mov
adc
mov
pusha
inc
imul
imul
mov
xchg
clc
pop
shlb
mov
pop
or
adc
loopne
ret
xchg
lret
outsl
cld
sahf
cmp
xlat
xchg
shll
in
xchg
in
jp
jp
mov
mov
ret
std
rcrb
jmp
push
out
or
xchg
aad
in
lfs
add
fnsave
adc
mov
iret
pop
and
sub
adc
popl
jmp
xchg
aas
xchg
xor
repnz
jmp
xchg
sbb
lods
data16
lea
pop
mov
jo
jle
fistpl
adc
fwait
mov
popa
ret
mov
cmp
sub
jl
inc
in
rol
cmovns
stos
mov
xchg
ret
stos
mov
pop
adc
shll
cmp
stos
xor
and
cli
icebp
aaa
xchg
mul
jg
ja
repnz
test
notb
out
mov
in
inc
cmp
cmpsl
bound
adc
push
xchg
sub
sbb
imul
jl
leave
out
mov
cli
fwait
test
jg
sub
mov
ss
imul
mov
lcall
or
icebp
into
sbb
repnz
ss
sbb
fs
jmp
mov
cmp
or
cmp
push
sub
int3
jo
sbb
xchg
movsb
lret
andb
and
xchg
cmp
jnp
or
sub
xor
mov
hlt
loope
aas
andl
or
push
or
bound
mov
fs
fstl
mov
icebp
arpl
fbld
nop
push
push
divl
xchg
cmp
popa
cmpsl
and
push
xor
ret
dec
fidivl
das
or
jno
dec
das
inc
enter
lcall
repnz
int
cs
xchg
ret
mov
inc
popa
std
dec
insl
sahf
movl
push
out
lds
sahf
and
dec
sbb
or
cli
lret
jo
test
in
mov
in
and
inc
stc
or
test
lods
mov
push
ss
into
push
insb
lcall
mov
ret
in
pop
sub
pushf
jnp
les
push
sbb
dec
jns
cwtl
xor
xchg
mov
xchg
icebp
mov
jecxz
fwait
outsl
orl
ss
and
and
out
iret
and
jb
sahf
push
push
mov
jb
sub
fdivrl
lds
es
pop
or
adc
mov
sub
or
hlt
loop
imul
adc
mov
push
movsb
fimuls
push
xchg
sub
shl
out
mov
mov
push
and
mov
pop
aas
inc
push
call
out
mov
int
movsb
ljmp
mov
mov
lds
adc
sub
stos
push
xchg
cmpsl
mov
jle
mov
push
adc
iret
leave
inc
int
andl
cmp
sub
jo
dec
divl
fistps
fwait
dec
rclb
cmp
mov
xor
adc
subl
aad
js
aaa
and
lea
enter
cmpsb
cwtl
push
outsb
push
cmpsb
std
xlat
inc
ljmp
pop
add
ret
lds
jg
pop
scas
xor
mov
insb
movb
cltd
test
icebp
lods
loope
push
out
dec
inc
divl
rorb
mov
icebp
hlt
cmpsb
push
nop
inc
aad
mov
cmp
jae
insb
xchg
mov
ret
xor
test
push
adc
insb
or
lret
adc
add
add
cli
fistps
mov
cmpb
jno
or
or
das
mov
adc
pop
insb
and
frstor
add
es
imul
je
fisttpl
cld
sbb
pop
inc
repnz
test
aas
push
out
mov
mov
pop
shlb
sub
insb
test
icebp
xchg
fucom
outsb
call
mov
out
ds
lds
mov
pop
notl
arpl
cwtl
or
in
xchg
jge
icebp
mov
add
fnop
sub
pusha
rcrl
loope
lods
sti
xchg
stc
push
jns
pop
mov
into
mov
stos
jbe
push
pop
mov
ret
fisubl
cld
jnp
outsl
mov
iret
test
mov
addr16
cmp
sub
repz
mov
lds
xchg
insb
fnsave
daa
push
pop
adc
lret
lret
xchg
push
daa
pop
jae
pop
inc
xor
lods
pop
mov
in
leave
ficoms
lret
mov
test
and
ja
dec
ljmp
push
out
add
xchg
imul
push
xchg
imul
mov
sti
cmp
imul
ror
cld
inc
xchg
sbb
mov
xchg
and
pop
dec
data16
jbe
push
sub
movb
mov
jae
pop
leave
fldt
addr16
ss
rorb
test
jl
add
or
movsl
mov
clc
mov
cmp
push
inc
dec
mov
cld
fwait
test
add
sub
mov
cmpsb
jb
mov
stos
dec
ljmp
jmp
pushf
mov
inc
aam
xchg
into
xor
outsb
int
out
fwait
add
pop
pop
imul
sbb
popa
sbb
jnp
dec
nop
sahf
aam
cwtl
pop
lods
push
ficomps
mov
pop
xor
stc
inc
cmp
sysexit
fwait
rcl
push
ficomps
lock
fdivs
and
inc
fcmovnu
ds
lcall
push
movsl
xor
xor
subb
sub
in
xchg
fwait
or
je
push
adc
cld
mov
adc
push
into
push
ds
jno
jns
jmp
pop
pop
ja
cmp
ja
inc
and
sarb
cld
fnstcw
bound
push
lods
lcall
adc
xor
pushf
dec
mov
mov
jne
roll
stc
pop
adc
inc
fisubrl
pop
dec
sbb
jae
jmp
mov
popf
push
rcll
cmpsb
push
mov
popf
shll
shl
fstpt
not
repnz
or
cmpsl
outsb
mov
fistpl
cmp
sub
stc
int
mov
inc
int
fwait
pop
addr16
cmp
push
push
insb
test
push
and
push
stos
sahf
sub
inc
stos
mov
sbb
js
xor
add
fbstp
gs
in
mov
add
inc
xchg
sbb
jl
inc
test
mov
sbb
adc
test
imul
inc
adc
les
jle
push
jl
imul
xor
ja
pop
leave
enter
stc
pop
arpl
xchg
testl
cmp
mov
pop
bound
int3
cmp
ret
push
and
cli
mov
adc
addr16
mov
lahf
push
cld
les
sub
loop
sti
lahf
mov
subb
sub
maxps
aam
xor
push
inc
push
jno
mov
or
jae
cmp
mov
mov
popf
test
insb
inc
lock
sub
aaa
scas
mov
xchg
and
ror
lcall
ds
cmpsl
inc
shr
mov
daa
inc
mov
into
daa
fsts
test
movsb
mov
push
pop
sub
push
stos
mov
xor
jne
ss
push
pop
aad
js
mov
xchg
jnp
idiv
insl
cwtl
cmp
dec
adc
pop
xchg
inc
pushl
inc
cmp
jecxz
sbbl
int
test
aas
sbb
aas
mov
dec
xor
fs
insl
xor
mov
mov
and
xchg
jne
sub
pop
aaa
add
and
push
loope
sbb
roll
scas
xchg
xchg
ss
xacquire
jl
cmp
xor
cmp
shl
xor
iret
insl
inc
sbb
popf
jns
add
cmp
sub
lret
jns
mov
leave
data16
mov
sbb
es
bound
inc
inc
leave
cs
cld
xchg
sarb
leave
adc
les
scas
pop
mov
push
into
test
mov
cmp
mov
xor
mov
jb
loop
xor
scas
xor
leave
jnp
mov
xor
clc
cmp
ss
push
mov
and
loopne
jmp
sub
ss
cs
xchg
test
jecxz
adc
scas
mov
inc
sbb
test
insl
xchg
adc
sub
cld
mov
cld
dec
push
cld
fnstsw
fwait
sbb
mov
xchg
add
and
daa
clc
repnz
repnz
int3
int
lahf
adc
fxch
cmp
push
rolb
push
sbb
movsb
hlt
mov
sbb
pushf
mov
mov
rorb
sbb
push
pusha
rol
pop
push
lea
xchg
test
lds
int
int
fldlg2
call
in
aaa
mov
movsl
cmp
xor
call
cmp
cmpsb
sbb
mov
stos
xchg
je
sub
insl
pop
enter
push
jle
fstpt
sti
and
pop
das
or
push
cltd
insb
mov
in
jbe
adc
xchg
jle
mov
mov
cli
test
adc
lcall
sub
sub
daa
inc
nop
je
cwtl
clc
arpl
cmp
inc
cmc
pop
nop
and
jge
jl
mov
or
sbb
mov
push
adc
fimull
jne
mov
cli
push
pop
jge
in
and
push
or
icebp
in
sbbl
jp
pop
aam
mov
test
adc
arpl
test
pusha
cmp
insl
in
cmpsb
or
mov
dec
dec
movsl
or
sub
nop
gs
cmp
or
fisttps
shrb
out
icebp
in
mov
xchg
sub
out
mov
xor
jecxz
shl
inc
push
or
aad
or
hlt
jl
jp
jmp
jle
jecxz
xchg
push
or
mov
jg
insb
sahf
stos
js
jecxz
call
jl
rcrb
lods
ret
jle
mov
shlb
lahf
and
push
ror
dec
adc
clc
pop
subl
stos
and
lds
in
les
pop
mov
jl
push
and
lcall
pop
and
cmp
cltd
mov
xlat
inc
push
pop
pushl
dec
fsubrs
sub
loop
out
and
jnp
xchg
mov
call
cmpsb
mov
sbb
std
out
in
out
repz
gs
cmp
aad
pop
gs
xor
mov
adc
out
push
aad
jnp
leave
mov
pusha
mov
pop
popf
es
sub
inc
popf
sbb
jbe
int
adc
ds
cmp
jns
mov
xorl
dec
mov
xor
push
insb
out
pop
stos
lahf
cmp
imul
sbb
xor
jecxz
and
mov
enter
fwait
or
cmpb
andl
push
into
mov
into
sub
hlt
daa
xchg
frstor
or
aas
mov
add
mov
cmpb
xchg
dec
mov
cmpsb
fdivrs
lods
sbb
enter
hlt
pop
dec
pop
sbb
ret
adc
mov
stos
divl
lahf
jle
mov
lock
cmpl
dec
aad
push
or
and
out
loopne
pusha
std
sub
push
push
adc
repz
addr16
pop
lret
repz
fs
or
out
jg
cmpsb
jno
cld
in
jle
mov
in
mov
dec
mov
fucom
push
and
out
dec
dec
mov
imul
loopne
out
xchg
popa
mov
lock
nop
mov
xchg
or
fwait
test
adc
push
test
cmp
fnstenv
or
imul
outsb
pand
mov
loopne
mov
mov
jp
inc
push
mov
fs
cmpsb
mov
adc
mov
dec
sub
xor
mov
mov
push
mov
les
and
dec
ret
imul
and
aaa
fisubrl
mov
xchg
rorb
push
movsb
popf
add
sbb
mov
hlt
lea
jmp
fs
jae
mov
mov
xor
mov
mov
aas
lock
clc
mov
sbb
test
cmp
aad
cwtl
jae
xlat
pop
jne
push
es
jne
in
fistpll
lret
in
or
sub
testb
nop
mov
or
stos
cmp
lret
clc
cltd
pop
or
mov
out
arpl
int3
fildl
inc
inc
cltd
aam
fistpl
dec
mov
add
js
mov
loopne
xchg
push
js
lcall
cmp
into
mov
enter
sub
sbb
mov
mov
pop
sbb
jecxz
ja
add
pop
js
sbb
add
ret
dec
sbb
mov
sub
mov
aam
rcrb
ret
cltd
int3
xchg
inc
das
out
fwait
xchg
xlat
stc
and
nop
out
mov
sarb
cmp
and
add
repnz
fldcw
sbb
pusha
sahf
popl
push
daa
adc
fldcw
add
cmc
inc
pop
mov
sbb
add
pushf
das
lds
jg
loopne
jge
fwait
add
ja
dec
and
sub
aaa
pushf
xchg
sub
fdivs
cwtl
pop
cmp
dec
sbbb
out
push
mov
xor
xor
movsl
and
dec
push
xor
stc
xchg
xor
cmp
dec
aam
mov
push
xor
push
sub
movsl
dec
push
ss
mov
jl
pop
mov
cmpsl
mov
xchg
pusha
push
mov
mov
or
mov
add
or
leave
fistl
pop
sbb
aas
mov
cs
sbb
mov
push
or
dec
shrb
repnz
aas
mov
sbb
hlt
mov
or
sub
push
aam
aaa
push
mov
push
inc
sub
es
test
sbb
mov
cmp
jnp
subl
insb
test
mov
cmp
sbb
sub
sbb
dec
xor
lods
andl
push
pop
xchg
outsb
sub
inc
lods
das
adc
mov
movsb
stos
sbb
xchg
pushf
xchg
cmp
mov
add
lods
lcall
movq
cmp
repz
add
pop
xchg
add
adcl
ficoml
aas
idiv
pusha
mov
jl
xor
out
rcrb
dec
pop
fidivrl
or
mov
mov
inc
jns
push
cmpsb
pmuludq
aas
fidivrl
insb
cmp
rcl
jbe
pop
inc
sbb
loop
sbb
pop
outsl
imul
movsb
adc
inc
mov
add
insl
lock
adcl
pop
loopne
jp
jno
push
xor
rcr
arpl
xor
fwait
sub
in
mov
movsl
jne
pop
xchg
push
fdivrl
pushf
pop
mov
hlt
scas
jbe
mov
stos
lock
imul
push
mov
sarb
xchg
pop
inc
lret
repnz
push
xor
cld
mov
out
add
leave
cmp
sbb
mov
add
or
sbb
ja
adc
mov
xchg
and
mov
sbb
push
ja
xchg
imul
cmp
cwtl
push
out
jo
fcmovb
add
cli
test
sti
or
mov
cwtl
lea
mov
in
out
lret
cli
mov
pop
mov
fsubs
jne
lcall
adc
mov
or
lds
test
push
mov
cmp
adc
sub
push
movsl
push
dec
or
sbb
aaa
imul
iretw
sub
xchg
pop
enter
pop
xor
push
stc
sub
das
pop
insl
ret
hlt
pop
inc
dec
dec
dec
testb
int3
lods
sub
push
out
mov
test
aas
pop
insb
mov
inc
out
icebp
mov
pop
ljmp
jno
sbb
sar
aas
mov
loopne
leave
push
insl
dec
mov
inc
mov
dec
add
mov
sarl
or
or
sub
in
push
scas
lahf
out
mov
out
mov
in
mov
xor
or
mov
jb
lea
cmp
sub
or
fcomip
cmp
push
mov
push
mov
xchg
mov
xchg
insl
loope
xchg
pop
xchg
rcll
lcall
frstor
sub
push
dec
and
nop
insl
jbe
popf
adc
dec
sbb
or
sub
push
sbb
mov
mov
mov
and
pop
fnstcw
push
lret
int
nop
lahf
xchg
adc
cmpsl
loop
movsb
iret
in
adc
nop
icebp
pop
std
adc
pushf
pushf
ss
cmpsl
mov
pop
push
pop
inc
cmc
mov
addr16
cltd
jecxz
dec
sub
aad
sub
lods
andl
ja
or
clc
orl
pop
push
push
and
dec
and
movsb
outsl
xchg
xor
mov
mov
sub
adc
data16
sti
sahf
in
je
enter
fs
rcr
pop
or
call
or
lods
jmp
lock
or
cld
sub
and
shrb
or
inc
mov
and
mov
movsl
enter
sbb
jecxz
push
popa
dec
iret
bound
jns
shlb
pop
or
inc
push
nop
loopne
or
sub
loopne
mov
negb
lcall
outsb
mov
xchg
xchg
mov
sbb
scas
in
mov
leave
aaa
in
add
test
rcrl
aad
cmc
ret
stc
movsb
xor
and
sarl
cld
add
push
stos
push
nop
jmp
arpl
loope
mov
lock
daa
jne
ret
fidivs
dec
mov
mov
out
movsb
push
aam
and
dec
add
xchg
mov
lcall
cltd
test
out
mov
cmc
insl
or
dec
stc
add
jg
xor
jns
or
and
lcall
nop
sub
mov
adc
push
or
sar
int
repz
lods
mov
sub
in
add
loop
sahf
notb
pop
lret
mov
xchg
xchg
dec
mov
xchg
or
jns
inc
add
je
push
dec
sub
dec
inc
fdivl
cmp
sbb
jbe
test
adc
imul
sub
add
or
or
cmp
xchg
out
pop
ret
ror
outsl
ljmp
xchg
xchg
xlat
aam
fyl2x
jecxz
fidivrs
push
adc
jmp
lret
pop
adc
dec
je
in
sub
ss
pop
cs
cmp
mov
flds
iret
adc
jmp
push
and
add
mov
jne
push
mov
mov
or
scas
push
in
pop
pop
xor
lret
stos
shl
cli
push
pop
xchg
mov
pop
imul
dec
xor
xor
xor
pusha
jge
push
xor
dec
notl
faddl
loope
add
arpl
xor
in
aaa
loopne
or
dec
fdivrp
mov
add
mov
push
push
imul
sbb
daa
xor
cmc
notb
jne
dec
das
rol
and
sub
xchg
cmp
dec
pop
rclb
or
or
pop
cmp
lds
mov
add
sti
loope
jae
sbb
mov
movsb
mov
jl
xor
fwait
jle
xor
adcl
mov
nop
imul
xor
mov
sti
push
add
fwait
decb
shrl
push
das
test
lcall
sbb
and
inc
popa
jae
es
daa
call
lahf
inc
test
cmp
and
stc
mov
fwait
mov
sub
mov
xor
or
scas
shll
pop
xchg
fstl
dec
add
aas
mov
mov
lahf
jbe
sbb
cmp
push
fisubrl
imul
mov
dec
lahf
dec
leave
into
push
inc
pop
lret
lcall
cli
hlt
jo
mov
aas
fsub
popf
xchg
jno
and
int
sub
push
decl
or
movsl
xor
ljmp
lahf
or
adcb
aas
mov
push
cs
icebp
mov
outsb
mov
add
fbstp
push
out
nop
movsl
cwtl
mov
sti
lods
jecxz
push
scas
adcb
push
fdiv
aam
xor
arpl
jp
dec
dec
sbb
fwait
mov
adc
cmp
sub
jno
dec
cmp
mov
movsb
sbb
lahf
ss
int
sub
dec
stc
xchg
dec
jae
pop
cld
xor
fildll
push
mov
push
stos
bound
push
adc
cld
pop
fwait
mov
mov
pop
xchg
jbe
jnp
add
ficomps
in
xor
sbb
repnz
adc
scas
xor
mov
subb
imul
jae
std
in
adc
sarl
xor
test
repz
mov
mov
jo
ljmp
ficomps
sub
lret
je
adc
push
mov
pop
fisubl
mov
lods
aas
fs
fcomps
inc
aaa
arpl
jae
insl
imul
faddl
mov
sub
fistpl
and
mov
jae
lock
fcoml
sub
jle
lret
adc
in
lret
lock
adc
xchg
popa
mov
pop
mov
pop
xchg
jmp
bound
es
roll
leave
cmc
mov
jne
adc
dec
or
mov
jge
lcall
mov
jg
sar
add
pop
cltd
dec
in
into
into
sbb
push
loop
arpl
push
push
iret
add
add
mov
call
cmpsl
popa
and
ja
jns
mov
mov
arpl
mov
mov
js
cs
in
adc
inc
sub
mov
ljmp
fmull
inc
lock
pop
inc
cld
sbb
clc
pusha
xor
xor
mov
enter
lret
cmp
mov
dec
and
inc
or
movsl
mov
sbb
dec
pop
loop
add
dec
fnstcw
push
pop
inc
inc
sub
mov
sbb
in
sbb
mov
sub
sub
mov
add
or
insb
add
inc
je
fldt
sub
push
pusha
inc
cltd
lea
adc
and
fidivrs
loop
xlat
aad
repz
ds
lret
dec
dec
fildll
int
mov
sti
in
add
outsb
inc
inc
xor
cmp
ljmp
les
enter
mov
lods
mov
jns
xor
mov
inc
mov
popf
leave
sbb
cmp
push
add
test
movsb
sub
lods
add
push
call
test
jmp
adc
push
sub
and
fsubrl
fstpt
jnp
xchg
lds
xchg
add
out
xor
lret
fbstp
inc
xorb
add
push
inc
xchg
mov
aad
or
jmp
xchg
xlat
pusha
inc
cmp
or
mov
xchg
scas
inc
stc
out
leave
xchg
js
adcl
pushf
jbe
and
decb
int3
jbe
add
pop
sub
adc
ficoms
adc
and
stc
pop
push
dec
add
je
dec
clc
imul
cmp
mov
pop
fs
loope
sub
mov
movsl
lods
movsb
inc
aad
adc
stos
lods
std
adc
pop
loop
nop
fcomip
jecxz
push
add
shlb
mov
add
fidivl
lcall
xor
icebp
imul
mov
mov
xor
jnp
xchg
push
xchg
cmp
add
or
int
add
xchg
push
push
fnsave
push
scas
jecxz
sarb
test
loop
in
mov
rorb
xor
mov
cs
or
shrl
sub
sbb
sti
loopne
popa
loop
xlat
inc
imul
add
mov
gs
imul
popf
cld
popl
mov
mov
into
xchg
fsubl
ja
sub
test
shrl
cmp
and
stos
lret
jae
divb
pop
push
shr
mov
aad
inc
and
fs
bound
jp
ss
fstl
xor
das
cmp
push
ficompl
nop
sbb
das
or
dec
mov
cwtl
icebp
dec
push
das
cmp
lea
nop
je
lods
inc
mov
mov
int
pushf
or
mov
ret
ss
out
jne
stos
jnp
sub
dec
jo
cli
or
hlt
push
xor
sbb
scas
jle
mov
dec
int3
arpl
dec
sbb
jo
popa
inc
jns
rclb
xchg
sahf
mov
xor
lcall
test
add
loopne
dec
or
mov
push
push
mov
das
sub
mov
lahf
mov
loop
test
cmp
ja
mov
pop
sar
push
mov
popf
mov
aam
jp
jae
jne
xlat
loop
das
das
inc
rcrb
push
aas
xchg
fs
fcoml
or
push
cltd
push
sub
es
aaa
inc
sbbb
pop
iret
daa
lods
mov
stos
or
in
add
mov
cltd
loopne
stc
push
jge
xchg
ret
enter
nop
mov
pop
in
out
lea
mov
mov
out
and
mov
sbb
push
cmp
jecxz
ja
pop
arpl
rcll
jbe
adc
xlat
divl
mov
test
pop
lret
mov
out
mov
xor
push
shl
popf
inc
mov
repz
cmpsl
pop
xlat
jae
shrb
push
push
ficompl
in
xchg
pop
xchg
cmpsl
push
ss
add
xchg
test
cltd
ficoml
mov
loop
aaa
ret
aad
aam
jp
test
testb
inc
fistpl
push
jb
into
sub
lcall
push
scas
cmpsl
dec
lods
loopne
push
cmp
sub
push
je
lea
adc
cmp
mov
mov
fwait
dec
out
jnp
xor
lret
add
pop
mov
pop
repz
adc
push
sub
fcmovu
inc
fsubl
repz
and
push
test
jb
les
add
sub
push
or
push
dec
or
nop
fstpl
lock
sbb
cmp
jo
call
add
ja
and
test
ret
gs
pop
or
mov
fdivl
test
imul
push
testl
aam
cld
adc
jne
add
xor
push
inc
jns
dec
pop
in
add
inc
mov
dec
pop
ret
mov
ret
testl
icebp
mov
dec
ljmp
or
dec
xchg
inc
add
das
mov
aad
pop
jle
out
cld
cmp
adc
inc
hlt
cmc
fldcw
std
lcall
in
sbb
sahf
push
bound
dec
into
test
mov
mov
xor
push
push
loope
es
sub
xchg
outsb
inc
out
xchg
loopne
sub
or
inc
daa
or
dec
lock
sbb
in
xor
lret
and
jmp
imul
pop
pushf
jg
inc
mov
pop
xor
loope
ss
xor
push
cltd
shll
push
shll
mov
dec
test
nop
xor
push
sbb
pop
mov
push
push
test
cmc
stc
adc
push
jmp
mov
mov
mov
sbb
in
fidivrs
hlt
movsl
or
arpl
jns
punpckhwd
sub
add
ficoms
movsb
mov
push
movsb
enter
outsl
enter
add
in
repz
cmp
sub
out
or
mov
cli
mov
es
adc
lds
icebp
cwtl
in
mov
pusha
das
xor
jp
mov
gs
adc
fs
popa
inc
ljmp
add
leave
lcall
or
jge
or
stc
jns
iret
jno
adc
icebp
xchg
inc
test
xchg
sbb
mov
dec
stos
or
push
fsubl
ljmp
enter
lea
icebp
fcomi
xor
jno
insb
loope
in
sub
xchg
inc
ret
mov
xchg
inc
ret
es
push
fdiv
lea
icebp
addb
pushf
inc
push
ljmp
add
lcall
pop
pop
sub
or
dec
sbb
xchg
cmp
and
inc
xor
cmp
cmp
mov
int
lret
push
popa
jecxz
call
je
sbb
std
mov
xchg
sbb
mov
imull
pop
test
icebp
fdivl
cltd
mov
inc
pop
jo
out
mov
jb
mov
ret
mov
mov
outsl
mov
or
adc
ja
int
gs
fbld
aaa
scas
addr16
imul
fs
xor
jmp
pop
inc
or
fs
andb
and
inc
mov
push
sub
pop
lret
pop
or
movsl
das
and
cltd
nop
push
stos
outsl
and
enter
cmp
mov
out
repz
imul
pop
lods
ds
xlat
jb
pop
inc
scas
xchg
out
cld
test
add
mov
idivl
push
mov
lock
or
addr16
bnd
fildl
in
jno
loopne
xchg
adc
cmpb
push
mov
idivb
push
jecxz
mov
lahf
add
divb
xchg
sub
sub
sbb
jo
mov
ja
aas
xchg
pop
cli
mov
pop
mov
sub
mov
out
or
popf
pushf
mov
jb
cmpl
push
imul
ret
fldcw
out
test
arpl
mov
jle
mov
sarb
xchg
and
sub
loopne
add
sbb
inc
bound
lahf
pop
dec
test
inc
lcall
cmpsb
sahf
lcall
add
hlt
loope
fdivrs
adc
xchg
out
iret
pop
jne
js
sbb
pop
inc
movsl
adc
test
pop
test
js
mov
js
mov
jne
je
out
test
add
sbb
movsl
lea
scas
lea
jb
mov
xchg
xchg
push
loope
jecxz
cmp
push
and
fisttpl
and
pop
or
jle
loopne
subl
shl
mov
popa
sub
or
cmp
jle
shrb
adc
jne
push
push
pushf
imul
xchg
out
int
push
mov
cmp
jmp
cmpsl
sti
lods
pop
loope
lahf
mov
cmc
aas
sti
mov
int3
imul
mov
std
jecxz
inc
mov
mov
mov
out
out
fstpl
mov
ficompl
in
pop
fisubs
ja
xchg
lret
jle
outsl
and
in
outsl
add
decb
imul
lss
pop
ja
jbe
aad
imul
iret
ret
xchg
in
sti
push
scas
outsb
mov
ss
add
xchg
cvttps2pi
sbb
sub
cmpsl
popl
sbb
lea
cmp
cmp
scas
and
or
movsl
icebp
daa
mov
jne
fwait
push
pop
sbb
add
mov
add
notl
push
lds
test
cmpb
add
pop
cmpsb
mov
rclb
cmp
cltd
std
int3
and
xchg
xchg
sahf
jo
push
fisubrl
dec
shlb
popa
inc
out
pop
shl
adc
sub
addr16
sbb
in
outsl
icebp
dec
sbbb
mov
imul
adc
std
or
aas
aas
lret
sbb
in
leave
xor
adc
mov
repnz
jnp
ja
cli
xorb
jbe
pop
inc
movsb
imul
daa
mov
xchg
clc
and
xor
jae
cmpsl
bound
das
xchg
cmp
in
pop
std
fistpll
or
or
sahf
xor
lcall
xchg
out
in
push
clc
fisttpl
rep
inc
sub
cmpsl
lea
loop
and
les
shl
mov
cmpsb
pop
in
sub
outsb
int
enter
and
repnz
inc
sub
adc
jae
psllq
push
mov
fsubrs
enter
mov
leave
sub
jae
xchg
fcom
sbb
push
in
repnz
sbb
insl
sbb
inc
pop
dec
mov
popa
cmp
in
orb
jge
mov
lods
mov
jo
fnstcw
cmpsb
dec
jl
jb
pop
push
jne
pop
adc
fs
movsl
popf
jb
subb
mov
inc
sub
add
cmp
pop
cwtl
in
or
jb
or
sarl
inc
mov
or
sub
adc
ja
pop
data16
leave
pop
or
test
loopne
fsubs
mov
ret
mov
sbb
mov
push
dec
pop
or
cmp
pop
in
dec
push
push
mov
pop
mov
push
add
enter
ret
jmp
std
sbb
divb
pop
fcmovnbe
xor
pop
push
or
fimuls
inc
sub
rcll
pop
lods
pusha
test
in
dec
shlb
popa
ja
arpl
das
lods
dec
pusha
push
push
imull
and
ja
in
les
adc
in
test
lahf
sbb
cli
inc
lahf
cmp
and
fsubs
push
dec
test
mov
notl
or
hlt
in
repnz
add
fidivrl
push
mov
push
stc
inc
in
outsl
pop
xor
mov
xor
imul
dec
jl
push
lret
fnstenv
cs
mov
adc
jns
sbbl
dec
call
outsl
xlat
loopne
xor
test
fldl
push
mov
mov
mov
cmp
mov
mov
packssdw
inc
and
jnp
aaa
or
repnz
pushl
outsl
jnp
sbb
ljmp
sbbb
sbb
sbb
enter
jge
add
pop
add
es
sbb
jge
rcr
jns
dec
loopne
decb
shlb
sbb
repnz
test
add
lret
enter
inc
dec
fnstcw
pushf
xlat
pop
jb
mov
imul
xchg
ljmp
sbb
or
out
out
xchg
adc
popf
ffreep
call
outsl
cmp
xor
xor
xchg
movl
imul
dec
fidivrl
cmp
mov
insb
fnsave
gs
sbb
xchg
mov
or
cmp
or
sbb
push
fcoms
int3
dec
inc
or
and
adc
sbb
cmp
mov
cmp
roll
jg
ret
jns
cmp
and
sub
stos
or
jnp
inc
call
adc
ficoms
inc
inc
xchg
out
lds
push
push
jl
inc
movsl
mov
jl
mov
mov
fs
or
adc
in
leave
jno
popa
xchg
add
imul
adc
and
dec
lock
xchg
movsl
push
jecxz
pop
out
sub
xor
movb
out
push
fwait
mov
int
mov
pop
push
add
jno
mov
daa
lods
xchg
arpl
pop
and
pop
pop
aad
fucomip
or
mov
outsb
jg
lret
jae
inc
test
cltd
cwtl
dec
inc
mov
mulb
or
push
mov
faddl
sti
outsb
movsl
adc
jae
cmp
scas
lret
sbb
xor
jns
xor
popf
or
scas
scas
shrl
push
cmpsb
mov
or
subb
and
std
js
cmp
sbb
pop
out
lret
mov
mov
fs
push
or
fcomps
xor
xor
insb
loop
imul
jns
cwtl
or
dec
mov
inc
jbe
mov
pop
mov
scas
popa
dec
sub
mov
sub
dec
pop
sub
jb
fldcw
add
jmp
inc
mov
cmp
popf
mov
stos
icebp
aaa
incl
or
ljmp
arpl
cmp
call
mov
mov
mov
das
arpl
fidivs
or
jb
mov
jl
pop
mov
xor
rcr
cld
pushf
enter
and
aad
lcall
dec
jge
sub
fcompl
mulb
dec
lds
or
lahf
mov
push
lcall
cs
je
inc
ds
and
pushf
bound
insb
repz
fs
inc
pop
push
mov
mov
loope
sub
pop
mov
imul
fimull
sub
outsb
fcos
push
test
outsl
loop
push
imul
out
ds
cmpsb
sub
adc
inc
scas
mov
call
ss
cmpsb
and
notb
add
lahf
outsb
xchg
inc
add
sub
or
xor
pop
adc
lret
icebp
in
lods
sub
mov
inc
arpl
xor
je
or
add
iret
sbb
mov
mov
jle
inc
mov
jle
aad
adc
jmp
cmpsl
shlb
add
or
jp
xor
pop
sub
sbbb
int
sti
insb
jne
and
inc
adc
das
jbe
shrl
pop
push
aam
add
and
int3
stos
out
rorl
inc
pushf
xor
call
nop
es
adc
repnz
sub
push
inc
cmpsb
in
lock
xchg
and
lea
fisubrl
push
fistpl
out
push
dec
sbb
std
shlb
ja
jge
or
fdivr
mov
out
cmp
repz
sub
lret
out
sub
data16
mov
cli
mov
pushf
push
inc
pop
clc
mov
mov
ja
loop
dec
int
mov
xchg
mov
sbb
mov
inc
cmp
call
dec
xlat
pop
or
negb
mov
xchg
dec
inc
mov
jno
xchg
adc
mov
imul
leave
add
add
mov
sub
add
popf
xlat
sub
mov
cmc
jb
cmp
xor
inc
and
fnstcw
mov
push
cs
mov
mov
jno
push
add
repz
lret
xor
dec
jns
addl
xor
rcll
test
jno
lret
into
and
mov
lret
popf
xlat
pop
int3
mov
pop
or
lods
pop
les
dec
xchg
jne
negl
dec
mov
mov
adcb
mov
sbb
mov
jg
lahf
mov
inc
push
cmp
mov
pop
in
mov
mov
imul
imul
in
push
push
xchg
inc
aad
adc
push
sub
lret
xor
roll
dec
sub
cmp
jge
push
mov
dec
mov
outsb
sub
jmp
fsub
testl
sbb
lret
sbb
push
push
fsubl
inc
cli
adc
push
or
xchg
mov
js
leave
aam
popa
mov
scas
or
adc
dec
push
inc
arpl
lahf
push
mov
and
jo
and
and
mov
cmp
pop
shr
movsb
movsl
lock
cwtl
sbb
int3
ds
xchg
push
gs
bound
jno
aas
imul
clc
push
aad
add
pop
adcl
std
data16
pop
jg
ret
stc
in
add
inc
xorb
hlt
mov
mov
rcrb
mov
out
pop
lcall
ret
pop
jg
cmc
data16
ret
test
or
dec
dec
adc
mov
sbb
jb
negl
adc
ss
sub
push
push
idiv
and
shrl
add
loopne
imul
inc
inc
sbb
lcall
xchg
dec
dec
movaps
jnp
and
in
xchg
xor
loop
xchg
and
in
jbe
or
or
pusha
je
jle
stos
mov
loopne
jo
clc
rcrb
xchg
jns
cmp
subl
fdivl
adc
ljmp
mov
pop
sbb
loop
xor
inc
leave
jmp
mov
dec
push
pop
je
out
iret
mov
arpl
clc
mov
fldt
fnstcw
xchg
mov
mov
mov
lret
xor
movsb
scas
stos
fsubrs
ret
pop
lcall
nop
add
sbb
mov
push
mov
jl
je
and
sbbl
and
sahf
bound
int3
ljmp
xchg
arpl
sbb
dec
pop
mov
test
xchg
pop
push
mov
inc
stos
pushf
sub
jle
cmp
rorb
push
ds
or
aaa
enter
xchg
in
jl
out
in
test
repnz
sub
xchg
fwait
xorl
sub
pushf
stos
stos
int
and
push
xchg
xchg
or
mov
outsl
sbb
ret
fdiv
in
cmpsl
xor
sbb
out
test
push
cmp
or
dec
push
jo
enter
rorb
addr16
loope
cmp
cmpsb
stos
or
mov
bnd
lret
push
scas
addl
insb
popa
ljmp
and
cmp
inc
xchg
ret
lods
pop
xor
fs
inc
cmp
cmc
in
cld
ret
adc
dec
xchg
mov
hlt
push
je
iret
push
dec
jne
or
cld
mov
jbe
stos
popf
icebp
adc
add
out
adc
jge
out
pop
mov
push
pushf
stos
jb
pusha
jle
stos
popf
int3
imul
push
sbb
shll
and
sbb
les
cmpb
lods
scas
lcall
cmp
pop
int3
rol
cltd
cmpsb
std
iret
pop
jp
data16
pop
es
cmp
dec
mov
cmp
out
mov
xchg
adc
mov
pushf
jnp
in
xchg
push
sti
lods
sbb
or
add
push
clc
push
or
stc
sub
shrb
push
scas
in
adcl
mov
test
dec
add
xorb
out
addr16
inc
push
sbb
imul
mov
mov
cmp
stos
xchg
loope
xchg
sub
inc
bound
inc
dec
cmp
pusha
or
lahf
cmp
jne
lret
aas
add
push
pop
push
mov
sub
xor
imul
insb
orl
ljmp
push
fidivrs
lret
imul
or
jmp
xchg
loope
lret
push
add
test
sub
inc
das
adc
test
dec
leave
adc
push
push
and
jl
arpl
mov
adc
lock
testl
fisubrs
addr16
loopne
jle
add
add
dec
movsl
imul
jo
call
mov
lds
cwtl
shl
pop
out
jno
inc
es
mov
stos
fisttpll
sub
sbb
jns
sub
adc
test
fsubl
dec
pop
sbb
xchg
add
adc
js
inc
and
fbstp
dec
mov
sbb
mov
loope
mov
cmp
sub
in
mov
cli
mov
testl
sbb
lahf
fwait
cs
inc
push
xor
push
nop
cmpl
xor
push
dec
adc
jnp
sbb
and
mov
pop
sahf
je
shlb
call
or
sbb
sbb
jbe
incb
push
cmp
lds
mov
sarb
fisubs
mov
lahf
xor
or
mov
jle
pop
clc
sub
xchg
repnz
push
or
pop
and
mov
xor
addr16
aam
arpl
cmp
add
les
or
test
repnz
outsb
dec
or
lds
sti
ret
insb
dec
fdivs
sub
in
movsl
push
lods
popf
sti
call
and
sbb
sbb
mov
mov
jne
inc
mov
or
push
rcl
int3
cmp
daa
push
push
adc
xlat
pop
sbb
and
hlt
pop
mov
les
sarl
add
cmc
rcrb
insb
jnp
dec
incl
sbb
xor
jmp
push
repz
sbb
push
cmp
nop
mov
jb
sub
inc
dec
inc
mov
int
dec
scas
js
fst
fwait
test
or
adc
mov
inc
mov
stc
mov
mov
hlt
ficompl
sbb
movsl
clc
adc
cld
ret
imul
test
cmp
cs
jmp
add
in
lods
push
std
push
adc
push
lret
into
xchg
sbb
mov
jae
lods
xlat
mov
mov
jo
adc
aam
mov
loop
sbb
jae
jno
cld
push
mov
enter
mov
daa
vcvtsd2si
mov
xor
lds
sub
fstpl
js
sub
sbb
or
adc
movl
imul
lcall
mul
sbb
inc
jae
mov
mov
xor
shlb
xlat
push
addr16
rcll
jae
sub
test
mov
popa
mov
sbb
jne
repz
adcl
mov
cli
sarl
sub
aas
push
das
popf
inc
cmp
imul
mov
mov
dec
ret
mov
jnp
cmp
push
jge
sti
mov
cmpsl
out
push
pop
mov
or
push
mov
pop
dec
jae
sbb
insb
xchg
push
xor
lods
ds
movsb
cwtl
or
sub
pusha
jb
adc
xor
push
les
stc
in
test
inc
sub
fildl
pop
xor
sbb
ret
lds
inc
pusha
pop
mov
jo
jnp
xchg
pop
and
pusha
xchg
inc
les
jmp
test
pop
sub
stos
sub
ret
dec
mov
push
decl
xor
es
sahf
bnd
adc
loopne
sbb
pop
push
dec
outsb
xchg
mov
cli
xchg
and
xchg
repnz
loope
xchg
jmp
daa
cmp
mov
cmc
jbe
xor
jl
inc
outsl
lret
pop
mov
mov
jl
outsb
cltd
cmp
push
das
aam
lods
jo
add
adc
and
xchg
jmp
push
or
je
ja
repz
xor
aam
out
mov
lds
hlt
dec
std
stos
loope
push
inc
or
int
push
gs
cltd
or
xchg
add
mull
xchg
and
insl
xchg
mov
loop
cltd
movsl
jno
push
push
push
test
jge
fistpll
pop
cwtl
inc
dec
outsl
pop
das
scas
or
je
mov
pop
shrb
in
xchg
inc
xchg
add
xchg
push
push
scas
int3
mov
test
stos
inc
cli
ret
lret
subl
aad
inc
repnz
lock
int
pop
arpl
cmpsl
movsl
mov
pop
in
out
push
dec
ret
sarl
mov
std
push
mov
inc
mov
jg
cltd
jl
jmpw
cmc
fsubl
jne
add
leave
mov
cmp
jns
pop
jno
xchg
push
or
out
xor
add
pop
pop
inc
clc
dec
pop
in
ds
xchg
push
lret
aas
lret
adc
xchg
sti
pop
adc
fdivs
scas
mov
outsb
and
les
jecxz
hlt
decl
mov
popf
loop
pop
mov
scas
sub
sub
leave
pop
mov
add
sbb
add
add
aad
push
xor
cmpsb
out
push
repz
and
ja
les
mov
add
sub
gs
ljmp
orl
mov
push
sub
stc
sub
jae
cmpb
scas
sub
sbb
push
fnstsw
aaa
mov
pop
imul
and
pcmpgtb
pop
cmp
xchg
mov
mov
xchg
cmp
push
jmp
mov
or
mov
xor
mov
sub
push
adc
push
sbb
cmp
sub
or
adc
mov
fistpl
xor
xchg
jno
lahf
cmc
jno
jne
int
sti
jb
dec
dec
lret
loope
fstpl
out
fstl
or
icebp
cmc
add
inc
sbb
in
dec
or
ds
loopne
jno
mov
loop
insl
inc
sub
push
ret
popf
into
adc
dec
test
cmpsb
filds
cmp
in
sub
and
cli
lret
dec
push
popa
mov
fidivrs
add
fdivp
push
adc
push
lret
in
adc
inc
dec
mov
add
and
adcb
scas
pop
pop
jnp
cmp
aas
repz
in
dec
stos
clc
mov
lret
stos
test
mov
and
xchg
inc
dec
and
add
lods
or
rcrl
push
ret
aad
imul
adc
cmp
les
xchg
adcb
pop
inc
adc
mov
lds
scas
push
and
dec
sbb
mov
div
ds
cmp
adc
insb
loopne
sbb
lahf
xchg
icebp
test
insb
pop
shlb
lgs
shl
pop
aaa
imul
inc
clc
jo
xchg
mov
outsl
or
data16
mov
mov
pop
fadds
xor
rcl
push
jge
sbb
jp
outsl
les
bnd
pushf
jb
lcall
pop
or
vxorpd
sti
dec
popf
arpl
mov
movsb
out
xchg
pushf
push
xchg
push
scas
orl
jmp
lods
insl
push
out
jb
xchg
jns
decb
nop
cmpsb
stos
scas
or
sbb
and
and
repz
pushf
in
mov
out
push
loopne
repnz
jns
pop
dec
in
orb
aas
fnsave
rol
inc
insb
ss
push
push
aaa
xor
dec
inc
les
pop
sub
sub
sub
pushf
lods
repz
pushf
fsubp
jg
iret
or
decb
outsb
addb
jae
not
sub
lods
ret
into
cwtl
into
ljmp
push
cmp
loop
dec
push
inc
bound
jo
mov
pop
addb
lea
sub
ficoms
sbb
lret
fmul
stos
sbb
cs
mov
lea
aaa
cmpl
adc
cwtl
xor
lods
kmovw
and
mov
inc
daa
xchg
mov
ljmp
pop
sub
mov
sub
mov
jecxz
in
mov
stos
pop
in
pushf
out
movsl
jl
or
ret
dec
in
les
jge
imul
out
std
fdivr
repz
mov
sbb
subb
dec
ss
je
repz
dec
mov
and
test
repnz
popa
mov
mov
jae
add
movsb
xchg
pop
lock
incl
iret
sub
inc
js
mov
subl
pop
cwtl
add
mov
in
icebp
jmp
iret
xor
sub
xorl
loop
fs
fldl
popf
ret
jge
jbe
xor
sti
cmpb
xchg
jae
fidivrs
sbb
cmp
stc
inc
out
sbb
jge
mov
dec
xchg
pushl
add
mov
xor
popf
stos
xor
jmp
psubsw
cs
cmc
outsb
jbe
lock
push
sub
and
sub
aaa
jno
ror
adc
ljmp
movsb
or
lea
mov
add
add
test
movsl
pop
adc
inc
mov
inc
stos
aaa
cmp
and
or
add
or
push
pop
xor
jae
mov
sbb
je
fdivs
je
loopne
int3
ds
xchg
xor
and
cs
jecxz
js
lcall
cs
in
xorb
arpl
dec
js
sahf
cs
push
inc
sbb
xor
lds
inc
imul
rcll
leave
mov
mov
ds
mov
adc
ja
xor
cmp
cmp
and
mov
adcb
pop
and
dec
mov
rcll
xchg
lret
in
mov
je
adc
xchg
xor
xlat
in
xor
insb
push
enter
out
sahf
pushf
inc
pop
ret
jns
and
mov
inc
dec
xchg
push
ret
sahf
mov
mov
mov
lods
aaa
cmpsb
fwait
mov
xor
push
mov
dec
rorb
insb
push
add
fisubs
jmp
aam
push
out
sbb
adc
mov
cmpsb
std
lods
fs
shld
cmpsb
inc
xchg
lahf
ja
and
jae
push
or
jge
cld
lret
jecxz
popa
mov
xchg
movntq
aaa
xchg
pop
cmp
fsubrs
pushf
inc
hlt
mov
pop
xchg
ficoml
sub
mov
andl
dec
xorb
dec
push
stc
cmp
jl
in
popa
push
jns
mov
jno
pop
data16
mov
div
xchg
mov
je
mov
sbb
aam
and
test
popa
sub
addr16
cld
nop
aaa
gs
jge
cmp
stos
ficompl
jle
push
fadd
in
xchg
cmp
out
xchg
inc
dec
jge
jp
dec
push
jp
sub
aad
inc
dec
scas
bound
popa
pop
push
in
mov
inc
inc
shrb
add
pop
mov
mov
cmp
xchg
jl
imulb
fldl
jns
icebp
sub
sbb
stos
int3
fildl
push
inc
push
dec
int
loope
insb
inc
daa
nop
insb
rclb
dec
cmp
inc
enter
ret
jle
jbe
addr16
out
divb
sub
test
stc
outsb
pop
xchg
fs
lods
jg
and
cmpsb
outsb
xor
fst
sbb
fwait
push
xor
adc
push
repz
in
lret
rcrl
xor
xor
pop
fucom
bound
mov
xchg
aas
sub
loope
adcl
lds
fisubrl
outsl
push
mov
popf
pop
pop
sbb
pop
stos
sub
or
shll
dec
jb
sbb
in
sub
mov
mov
add
into
jmp
pop
xchg
in
inc
jnp
adc
je
push
mov
shrl
lds
pop
inc
std
cmpsl
std
cmp
mov
inc
sub
fdiv
add
aam
lahf
dec
add
aaa
jg
jl
pop
lcall
add
sarl
andl
adc
or
fdivs
lret
enter
rclb
mov
mov
dec
icebp
or
sar
add
imul
add
das
pusha
or
jb
add
orb
cmp
cmp
mov
call
leave
and
mov
enter
dec
or
mov
dec
jle
xchg
lret
testb
test
cli
cli
jno
fcoml
cmpsl
ret
int
and
rcll
repz
pop
sub
rolb
jno
or
int3
fdivrp
adc
rol
add
lret
jle
xor
push
cld
cmp
push
jp
gs
imul
mov
sahf
aam
out
les
cwtl
cmp
push
sbb
pop
aas
push
mov
adc
arpl
repnz
test
cmp
jecxz
sub
stc
call
ja
cmp
adc
mov
jle
push
ljmp
in
fimuls
bound
xor
or
rcrl
add
shl
cmpsl
cmp
inc
mov
mov
imul
jb
xor
sbb
cmpl
sub
push
push
test
push
in
aad
push
mov
mov
leave
push
or
pop
jge
lods
pop
pusha
xor
pop
mov
mov
les
setp
dec
pop
hlt
sub
and
inc
cwtl
pop
les
jp
mov
mov
dec
or
and
mov
mov
int
bound
pop
add
jnp
daa
sub
loopne
aaa
popa
fwait
or
fildl
aas
inc
cs
and
inc
push
js
mov
or
push
insb
mov
xor
mov
mov
pop
mov
out
sbb
int3
adc
out
mov
dec
aad
lret
cwtl
ja
inc
shrl
ja
cmc
push
mov
addb
sbb
cmp
arpl
imul
xchg
ss
bound
dec
sbbb
push
sbb
pop
mov
and
mov
jbe
fstps
jge
repnz
aas
cmp
inc
jl
stc
sbb
out
les
jbe
pop
fiaddl
out
and
daa
mov
jle
scas
jbe
ljmp
add
fisttps
sti
cmp
lds
fistpll
aam
add
lds
stc
ja
jb
outsl
jno
in
daa
fsubs
push
push
dec
push
push
sbb
or
mov
lds
ljmp
imul
push
pop
sub
jp
js
shr
mov
jnp
pop
rcrb
test
adc
in
mov
sti
insb
cld
adc
fsubrs
push
pop
cmp
loope
data16
mov
cmc
sbb
das
dec
ret
shl
mov
mov
add
dec
es
pmullw
push
fldcw
jle
outsb
popf
mov
mov
dec
fmul
clc
sbb
ficomps
add
std
or
mov
sbb
pop
push
adc
adc
orb
ljmp
mov
lcall
and
call
push
std
clc
fcoml
out
sub
jae
movsb
mov
xchg
inc
push
in
pop
pop
lcall
xchg
lea
ficoml
cmpsl
ss
mov
xchg
sub
arpl
imul
mov
imul
mov
popa
filds
jecxz
mov
push
xor
inc
test
adc
lret
push
mov
imulb
mov
dec
cmc
adc
xchg
addr16
andb
rcll
jmp
test
or
lret
xor
jo
or
or
xchg
push
jno
pop
into
jo
sbb
xchg
std
xchg
hlt
or
dec
push
hlt
xor
cltd
ja
mov
jl
das
aam
xor
mov
or
into
mov
or
rcr
or
nop
insl
arpl
scas
das
jns
pop
pop
sub
fldenv
fdiv
sbb
xor
out
movsl
pop
imul
xor
mov
adc
repz
test
cli
sar
cwtl
pop
bound
cmpsl
cmp
jl
in
arpl
int
push
pushw
fldl
inc
jecxz
mov
sbb
into
push
mov
stc
push
or
shll
imull
push
cmp
jae,pn
sub
push
loopne
sarb
xchg
neg
inc
jp
xchg
jb
out
lahf
addb
push
mov
imul
rcrb
out
xor
mov
shr
dec
pop
push
andb
jb
sub
aad
sbb
mov
lods
add
sub
inc
push
out
outsb
into
fstl
cmp
int
js
inc
and
mov
iret
inc
push
cmp
add
and
inc
xor
inc
add
shlb
data16
adc
or
jl
movsb
jle
mov
sub
jo
fisubrs
sbb
mov
nop
xchg
xchg
cmpsb
and
jb
jno
test
aas
xchg
out
pop
push
sbb
mov
mov
fisttpl
aam
push
pop
pop
cmpsb
mov
cmp
mov
pop
das
ret
shlb
dec
adc
xchg
adc
cmc
repnz
jne
fldt
mov
dec
mov
loopne
lods
adc
sub
pop
rcll
cmp
xor
lret
cmp
and
lods
mov
add
es
pusha
cmp
and
ja
xor
pop
mov
sbb
test
adc
testl
mov
lods
dec
mov
mov
arpl
inc
or
add
jne
aas
fldl
xchg
ret
mov
nop
andl
sbb
arpl
lea
mov
pop
test
cmp
pop
jno
dec
ja
pop
dec
sbbb
push
adc
lods
je
and
dec
mov
xor
insb
jg
aaa
nop
xchg
test
lods
xchg
mov
jge
scas
xchg
lcall
loope
jnp
pop
cli
dec
das
dec
xchg
add
dec
es
mov
es
xor
cmp
pop
pop
add
sbb
cwtl
pop
test
int3
ficomps
xchg
sub
pushf
mov
inc
jo
sbb
movsl
xor
push
push
aaa
mov
lcall
nop
mov
jp
fsubr
and
mov
cmp
ret
adc
jo
out
out
rcrb
push
pop
in
mov
mov
stos
jno
sub
mov
jns
ret
imul
xorb
loope
fidivl
jo
push
out
xchg
xchg
xchg
jns
ja
cmpl
push
out
inc
sahf
rcrb
mov
cmpsl
aas
or
imul
sahf
les
sbb
iret
dec
lret
xor
sbb
cli
loopne
les
insl
xchg
adc
add
adc
or
mov
icebp
xor
int3
loope
es
jmp
xchg
int
push
pop
stos
push
push
mov
inc
push
sbb
inc
call
daa
xor
sbb
jmp
sbb
add
paddsw
mov
stos
and
inc
int
mov
std
sbb
push
std
pop
push
in
cli
out
sub
mulb
jnp
std
push
mov
cmc
jae
stos
pop
xchg
pop
cld
xchg
sub
std
inc
das
in
pop
int
and
pop
xor
sti
mov
bound
in
pop
jmp
mov
push
xor
mov
iret
adc
mov
lret
gs
js
insl
je
call
mov
push
cmc
jge
inc
sti
scas
iret
adc
push
mov
imul
insl
fucomi
shlb
pop
lods
or
out
mov
cmp
cmp
cmpsl
lret
mov
shrb
out
mov
xchg
repz
mov
sarl
lock
cmp
inc
cmpsb
mov
add
shr
inc
sti
cmp
fbstp
mov
dec
in
lret
mov
adc
add
orb
xchg
aad
ret
das
ja
popf
dec
test
pop
iret
aad
adc
lret
or
dec
loope
xchg
fisttpl
cs
das
ss
testb
mov
sti
jbe
lea
mov
adc
testl
inc
add
lock
push
or
ljmp
dec
xor
push
idivb
loopne
insl
leave
push
push
movsl
bswap
popa
add
fs
insb
mov
sub
arpl
xlat
jle
out
inc
cmpsl
push
sbb
insb
mov
dec
sub
add
push
rorb
adc
and
popa
dec
cs
and
jg
sub
mov
push
and
xchg
cmc
fisubrl
xor
daa
iret
jno
sbb
arpl
aas
rorl
pop
pop
jns
cmovge
pushf
mov
stos
lret
pop
jp
mov
or
fsts
sbb
jae
cmpb
pop
sbb
negl
pop
push
das
es
orb
hlt
mov
in
pop
jbe
adc
cmp
fwait
scas
enter
cmp
mov
mov
xchg
mov
push
lds
mov
push
scas
xor
frstor
xorb
sbbb
jbe
lock
out
sub
jp
jns
loope
outsb
and
in
vrsqrtps
add
stos
sti
xchg
fxch
cmc
jmp
repz
cmpsb
dec
std
sbb
push
xlat
out
lret
fsubrs
ja
adc
or
pop
dec
mov
ss
rol
sub
pop
fldl
push
hlt
jb
inc
sahf
xchg
jns
int
out
negb
lret
push
mov
popf
flds
test
hlt
lock
pop
dec
mov
cmp
xor
add
add
dec
mov
lret
sbbl
stos
adc
push
repz
nop
cmp
dec
repnz
loope
push
jo
cmp
sub
jno
inc
not
adc
xor
es
sbb
clc
js
mov
wrmsr
sbb
lock
sti
out
or
je
or
dec
xchg
mov
push
jle
pusha
push
aas
ret
sbb
hlt
loop
add
imul
loopne
mov
xor
mov
int
add
mull
sbb
sahf
aas
test
test
shlb
call
mov
ficomps
xor
adc
or
hlt
cltd
imul
shl
inc
call
jns
dec
mov
ret
jae,pn
xchg
jle
lock
inc
lock
adc
addl
mov
jecxz
mov
xchg
aam
jle
or
in
pop
lcall
jmp
or
and
repnz
mov
aaa
xchg
sub
jmp
lahf
test
rcrl
outsl
fidivrs
and
lret
js
xchg
jle
xchg
out
call
lret
xchg
or
jp
subb
add
insb
inc
sub
push
cmc
stos
scas
rcll
je
iret
fidivrs
daa
movsl
push
out
or
test
push
jb
adc
inc
in
fdivrl
cmpsb
movsl
jmp
daa
movsb
ret
aas
addr16
push
xchg
test
adc
lock
cld
push
push
loopne
mov
cmpsb
add
mov
cmp
call
adc
dec
xchg
inc
jo
je
sub
rol
lret
xchg
iret
sub
mov
aas
lds
adc
gs
mov
jle
cmp
sarb
xchg
mov
push
repz
nop
add
push
aaa
lock
subl
inc
inc
lds
jae
mov
push
mov
cli
jge
mov
cmp
mov
fcmovnb
ljmp
xor
jne
out
or
popa
xor
mov
cs
sub
sarb
mov
outsb
dec
inc
test
ret
or
faddl
ret
iret
lods
mov
adc
lods
out
ret
mov
daa
fistpll
test
xor
movsb
test
inc
xchg
push
sbb
clc
scas
stos
push
jl
mov
inc
fldl
icebp
pop
aam
jecxz
inc
jmp
push
sbb
sarl
xchg
in
mov
sbb
and
pusha
mov
jnp
out
mov
adc
push
aad
cmpsl
hlt
push
push
pop
push
xchg
bound
loopne
cmp
inc
push
xchg
pusha
xor
cmpsb
and
jae
push
dec
add
jne
iret
jle
out
mov
movsb
pop
bound
and
and
mov
das
fucomp
cmp
mov
movsl
inc
popf
inc
mov
cmp
mov
inc
cld
fwait
sub
stc
filds
inc
add
ret
add
fld
mov
gs
jge
xchg
add
movsl
xlat
pop
xor
xor
adc
dec
push
mov
dec
ja
cmp
cmp
and
jmp
test
push
std
inc
mov
mov
inc
sbb
xchg
mov
iret
pop
sbb
inc
and
mov
push
lcall
inc
scas
xor
cs
jne
ljmp
fimuls
add
lods
insl
adc
into
inc
mov
test
leave
and
ljmp
int
aad
jo
pop
pop
pop
sbb
lods
jne
xor
dec
cli
dec
dec
ja
pop
and
fidivs
scas
stos
aaa
inc
sub
je
sbb
pop
mov
sti
lcall
or
imul
test
jg
lds
dec
jmp
das
idivl
xchg
imul
test
cltd
into
bound
xor
ss
inc
fildl
mov
push
das
add
jbe
jno
in
in
ljmp
pusha
dec
leave
inc
mov
je
fldt
nop
sbbb
fucomp
push
pushf
gs
lret
into
jp
int
test
push
vmwrite
fimull
jg
xor
mov
add
and
loop
int3
hlt
dec
lahf
mov
iret
cmp
jmp
lahf
cmpsb
add
pusha
sub
aas
sub
xchg
loop
imull
cmp
jge
mov
add
jge
xor
fwait
call
sahf
xchg
pop
cmpsl
daa
or
or
lods
cmpl
pop
or
rcr
ret
push
mov
or
mov
les
xchg
mov
data16
popa
adc
pop
sub
and
sbbb
out
aad
test
pop
sbb
aas
push
inc
subl
dec
popa
sbb
push
push
cmp
jmp
adc
adc
sbb
outsb
pop
add
jae
int
fsubrs
mov
push
in
lods
or
xor
dec
cs
hlt
repz
dec
ret
and
pop
lock
addr16
inc
arpl
mov
jp
out
add
outsb
ror
xor
insl
or
inc
and
inc
addr16
and
ds
add
fldcw
adc
mov
insl
fs
out
lcall
mov
hlt
ljmp
mov
pusha
dec
lea
mov
pop
mov
adc
jno
push
or
movsl
out
imul
nop
jge
jb
push
mov
gs
repnz
mov
sub
lods
movsl
push
bound
add
fistpll
add
mov
outsl
lods
fsubs
push
je
lea
adc
add
sub
unpcklps
adc
cmp
pop
in
pop
rclb
ret
fwait
jg
fsts
mov
jmp
fstl
mov
cmc
outsb
movl
jo
pop
or
push
dec
jmp
es
cmc
dec
push
test
mov
push
inc
in
cmp
jmp
and
and
jbe
outsb
mov
sti
fdivs
xchg
fwait
jge
jo
mov
sub
jmp
jge
xor
sbb
xor
aaa
hlt
repnz
jb
or
leave
subl
cld
movsb
or
adc
imul
aaa
scas
sub
lods
fmulp
or
insl
fnsave
and
adc
or
repnz
xchg
and
mov
std
mov
xor
cmp
sbb
push
xchg
inc
repz
test
sbb
mov
orb
popa
sub
xorl
push
subb
push
arpl
sahf
mov
das
jae
or
dec
jns
xor
push
das
mov
sub
cmp
pop
xchg
in
jge
mov
inc
repz
inc
dec
test
faddp
mov
jno
mov
fwait
icebp
out
in
jb
in
addr16
adc
push
jl
sbb
mov
xchg
pop
cmc
into
stc
inc
pop
inc
cmp
mov
nop
into
mov
arpl
jnp
jecxz
or
popf
mov
scas
xor
gs
sbb
push
cmp
js
stc
adc
negb
in
mov
out
dec
orb
gs
fstpt
aas
and
pop
loopne
or
fs
daa
push
dec
cltd
cmp
jecxz
mov
mov
filds
adc
jbe
inc
movsl
cmpsl
dec
leave
loopne
add
nop
sub
ret
mov
lock
jb
and
test
gs
sbb
add
aas
fsubrs
pop
movsb
clc
mov
ljmp
pop
add
xchg
mov
loop
adc
xchg
jbe
jmp
add
and
mov
pushf
in
cmpsb
sub
enter
out
lds
jb
xchg
andb
or
popa
in
xchg
jmp
pop
sbb
sbb
jg
in
jg
aad
sub
lods
addl
insb
js
jo
mov
pop
lahf
loop
pop
xchg
pop
xor
ja
inc
inc
rorl
xchg
push
popf
loop
cli
or
inc
gs
mov
inc
xchg
sbb
pop
lea
xor
movsb
xchg
shlb
sbb
cmpsb
dec
jo
mov
mov
js
pop
dec
cmpsb
pop
mov
or
mov
enter
ljmp
push
dec
pop
xor
aad
pop
fs
or
loopne
cwtl
adc
addl
lret
in
outsb
lods
ret
adc
jnp
shrb
scas
out
iret
inc
cmpsl
dec
xor
out
push
push
mov
mov
in
mov
in
sbb
pop
scas
and
popa
dec
add
test
jb
xchg
add
and
mov
sub
sub
fimuls
sti
pop
lds
inc
cmpsb
and
jae
jle
outsl
push
pop
jge
jecxz
fsubrs
mov
adc
add
dec
push
xchg
outsb
andb
mov
dec
shrb
jmp
imul
ljmp
push
mov
loop
ret
pop
movsb
repz
mov
repnz
jge
and
inc
jmp
pop
jb
daa
dec
xor
rcrl
push
sbb
scas
mov
sbb
daa
in
scas
bound
mov
xor
cmp
mov
and
jno
add
pop
pushf
cmpsb
jbe
pop
in
daa
add
ret
iret
sub
and
mov
jo
int
je
lcall
jl
push
fisttps
out
aaa
hlt
enter
inc
mov
insl
inc
in
sub
jg
add
nop
lret
mov
jnp
sub
scas
insb
xchg
sbb
jge
push
push
push
mov
out
jg
sbb
inc
pusha
icebp
cld
insb
push
cmp
rorb
sub
ss
out
push
sbb
aaa
xlat
stos
jb
fistps
sbb
js
or
shrb
cmp
aam
jnp
cmp
test
xchg
movl
jnp
mov
loopne
fidivrl
mov
fmuls
les
mov
sbbl
cwtl
adc
cmc
imull
lret
loop
adc
push
jb
push
fwait
aas
xchg
movsb
mov
ret
dec
and
xor
mov
in
sbb
and
push
mov
push
clc
jne
push
test
pop
push
or
adc
dec
jmp
lods
sbb
xchg
fldt
jo
int3
sub
test
aam
clc
pop
mov
adc
xor
push
ljmp
out
dec
pop
xchg
ret
stc
das
call
xchg
leave
xchg
cmp
pop
rol
sbb
sbb
xor
fcoml
mov
fistpl
fwait
pop
cmpb
or
mov
jmp
fcompl
popa
jle
mov
cltd
clc
add
sbb
hlt
jg
outsb
push
push
push
pop
pusha
pop
mov
and
repz
push
xor
sbb
xor
sub
jns
cmp
jb
pop
or
gs
out
push
pop
pop
out
cld
mov
decl
jns
lds
sbb
adc
pop
in
scas
push
or
mov
insb
and
loope
fsubl
ss
repz
adc
repz
adc
pop
fucomi
fisttpl
and
cwtl
mov
xor
lahf
adc
adc
mov
inc
sbb
jns
dec
mov
push
enter
mov
loop
push
shrb
arpl
inc
sbb
ds
push
mov
add
lock
stos
and
fisttpl
xchg
mov
or
inc
stc
cmpl
test
inc
sbb
repz
dec
ret
or
int
push
xor
dec
cmpsl
das
sbb
push
out
xor
stc
adc
cmpsl
jge
test
add
cmpsb
in
adc
ja
inc
sbb
ret
js
sub
pop
in
movsb
cmc
cmp
lock
and
ss
jl
push
or
mov
sub
ss
enter
xor
aad
insl
scas
inc
xor
dec
cltd
mov
fwait
pop
xchg
inc
mov
cmp
inc
push
inc
or
insl
xor
imul
je
pop
pop
mov
add
popf
not
ljmp
adc
pop
jge
cmc
roll
cmpb
ljmp
les
push
mov
mov
mulb
jno
fcomps
popf
cmpb
inc
cmp
daa
or
dec
fistpll
jle
push
cmp
mull
push
mov
mov
cmpsl
insl
pop
adc
imul
mov
loop
clc
mov
shrb
fsubl
pop
fimull
sbb
gs
ret
sbb
jno
das
jno
mov
jnp
jg
addb
shlb
xor
mov
lds
imul
inc
dec
into
push
pop
mov
inc
daa
ljmp
aad
popf
stc
icebp
jp
mov
lret
inc
mov
mov
sub
adcb
dec
clc
jns
in
mov
add
pop
cld
add
mov
jbe
andb
mov
push
addl
and
adc
pop
jg
adc
ds
or
add
inc
mov
jmp
sub
sbbl
in
jae
cmp
or
sub
and
push
mov
sbb
in
sbb
jmp
cmp
and
imul
inc
cs
std
ret
lret
push
loope
mov
inc
test
inc
shll
test
mov
pop
inc
push
mov
mov
insb
cmp
mov
arpl
faddl
insb
mov
push
xor
jne
fisubrl
jmp
jecxz
in
and
adc
ja
adc
mov
mov
mov
pop
push
jnp
fnstsw
jb
lea
out
push
xor
xor
and
adc
ss
xchg
fdivl
outsl
sub
xorl
test
pop
push
or
fistpll
stc
daa
push
popf
fidivs
scas
ret
shll
int
adc
mov
sub
mov
xchg
cld
cltd
add
iret
inc
add
mov
jmp
jmp
add
fwait
inc
imul
lods
xchg
sarb
and
mov
movsl
push
push
pop
icebp
dec
or
sbb
push
or
fdivp
mov
filds
pop
lcall
mov
lods
cmp
mov
pop
add
pop
fs
adc
mov
into
decb
jns
sub
mov
inc
mov
push
sub
enter
gs
shlb
or
imul
adc
pop
push
lcall
ja
mov
sbb
pop
xor
sub
outsl
adc
stc
cmp
ja
mov
or
adc
mov
push
sbb
or
int3
sar
out
bound
int3
in
lock
fdivl
jmp
cwtl
and
es
mov
lock
jne
pop
inc
mov
out
push
daa
mov
cmp
ret
mov
loop
stc
cmp
adc
mov
inc
cld
call
mov
pop
inc
inc
jg
mov
sti
std
mov
dec
mov
iret
mov
mov
in
inc
mov
mov
outsb
mov
dec
ljmp
pop
mov
sbb
jg
or
movsb
mov
jg
les
repnz
adc
sbb
int
pusha
mov
cli
and
subl
sub
mov
add
enter
xchg
or
sub
and
xchg
out
jge
repnz
inc
sahf
out
cwtl
and
adc
sbb
movsb
in
faddl
inc
inc
test
pop
cmpsl
out
sbb
cmpsl
pop
cmp
rorl
cmp
fisubs
mov
fwait
push
pop
loope
popa
push
mov
mov
xchg
icebp
scas
mov
ss
lcall
jge
dec
dec
pop
and
xchg
lods
cmc
lahf
xchg
out
loope
mov
push
insb
loope
dec
mov
xor
xor
sahf
mov
std
loop
xchg
cmpb
mov
ret
jp
push
sti
push
mov
sub
mov
outsl
aad
or
push
addl
add
dec
mov
xchg
push
cmp
and
adc
enter
ja
and
lcall
out
nopl
lds
jns
repz
sbb
ret
xchg
lahf
sub
sbb
fnstenv
mov
clc
leave
adc
xlat
outsl
repnz
mov
lock
mov
insl
loope
xchg
mov
push
cs
xor
sub
add
stos
mov
cld
testb
insb
dec
leave
shrb
sbb
mov
roll
jmp
sbb
pop
mov
add
or
xor
and
mov
std
add
test
mov
icebp
sub
push
loop
jmp
clc
mov
push
das
popf
cltd
ja
sub
xchg
dec
and
mov
add
sahf
mov
xchg
adc
inc
ret
popf
test
jle
loop
imul
dec
pop
pop
testb
xor
cltd
fildl
jnp
dec
mov
mov
xchg
cs
cmp
push
xlat
add
aam
mov
dec
mov
andb
sbb
jno
out
aad
mov
add
inc
mov
sub
inc
mov
xor
inc
xor
pop
sub
jmp
scas
fisttpll
or
ret
xchg
out
adc
sarl
xchg
dec
test
inc
in
or
dec
lods
stos
xchg
sub
fsubs
repnz
sbb
or
idivb
test
loop
jmp
lods
cmpsl
std
dec
cmpsl
push
hlt
int
xor
loopne
inc
bound
push
lahf
pop
mov
nop
cld
leave
inc
es
lret
dec
inc
cmpsb
xchg
icebp
sub
out
adc
rclb
mov
stos
sub
push
sub
cmpsl
movsb
xchg
rorb
sbb
mov
inc
shlb
xchg
cmpsl
imul
aas
lea
sub
xor
xchg
adc
repnz
shll
mov
movb
sub
in
and
jmp
sub
cwtl
mov
mov
dec
in
xchg
dec
sti
pop
push
mov
jbe
and
xor
mov
push
jge
out
dec
sub
aam
movsb
lahf
iret
outsb
fdivrs
lock
jg
fdivr
outsl
inc
inc
addl
ret
in
jge
movsl
pop
lods
dec
cs
mov
xchg
cmp
imul
push
sbb
rol
fiaddl
pop
imul
loope
push
dec
loopne
sbbl
cmp
mov
mov
rorl
not
pusha
add
jl
test
in
jg
testl
mov
xchg
sub
pop
in
add
in
push
shll
out
outsb
mov
mov
inc
sbb
lcall
lock
stos
pop
sbb
jge
shll
jb
dec
jo
jne
jbe
sub
inc
clc
js
fiadds
cmpsb
in
jecxz
add
xorb
mov
jb
out
inc
push
sbb
push
push
imul
xchg
jmp
into
popa
sbb
lcall
adc
or
lea
mov
sub
in
push
jb
lods
lods
popf
test
push
data16
xchg
and
jg
nop
dec
lahf
shll
stc
sbb
mov
jp
push
jne
loop
ss
mov
and
pop
shrl
out
cmp
sub
pusha
push
pop
push
jne
lock
mov
push
mov
test
push
in
aas
inc
lods
push
movb
mov
fstpl
aad
sbb
ss
aam
lock
cld
mov
ljmp
scas
mov
jge
or
mov
movsl
not
mov
xor
jns
repnz
add
fbld
pop
inc
pop
pusha
push
cmp
std
mov
rcll
pop
ret
cmp
lret
mov
stc
mov
xchg
addb
jbe
sbb
pop
or
test
mov
mov
stos
sub
fisttps
xchg
push
aam
xchg
lds
nop
outsl
leave
xor
jp
aaa
lret
ds
or
mov
add
cmp
cmc
fdivrs
test
jo
mov
lock
mov
popf
mov
or
mov
jo
add
stos
lret
xchg
mov
test
mov
sbb
lea
pop
mov
daa
pop
jbe
and
fldl
imul
xchg
inc
inc
cmpsl
push
cs
inc
cmp
add
pop
xor
pushl
xchg
cmp
jl
cmp
mov
and
dec
pop
out
stc
cmp
pusha
add
push
ror
mov
xor
nop
adcl
jo
popa
mov
js
int3
xchg
xor
mov
pop
mov
shll
or
mov
aad
mov
addr16
cltd
mov
lea
push
aas
dec
out
xchg
inc
adc
lea
jae
sub
jg
mov
jmp
mov
sbbl
adc
scas
add
and
pop
mov
dec
mov
cmp
jp
mov
je
pop
mov
adc
mov
jl
repz
mov
leave
add
cs
ss
mov
cmpsl
scas
aaa
adc
dec
add
in
sahf
nop
cmp
dec
ds
ds
pushf
push
call
cmpsl
inc
xchg
in
in
dec
inc
xchg
cmp
test
push
aam
in
adc
rol
insb
shrl
jnp
int3
insb
bound
jnp
sbb
call
mov
in
aam
mov
out
inc
push
fbstp
nop
cmp
test
pop
jb
in
cmpsl
lods
movaps
xchg
push
mov
xchg
push
cwtl
les
jg
and
jecxz
push
fcom
fnsave
pop
shlb
pop
and
cmp
sbb
and
out
divl
sub
mov
and
inc
mov
ret
jne
adc
push
inc
dec
jecxz
inc
inc
mov
lods
add
dec
repnz
jmp
in
xor
sbb
sub
dec
pop
sbb
or
nop
iret
es
sub
fstpt
lret
clc
stc
repz
addb
movsl
sti
cmp
xchg
push
sbb
push
push
loop
mov
add
mov
sti
mov
pop
insl
pop
push
mov
xor
sub
pushf
pushf
push
add
jmp
cmp
cmovge
lds
adc
ds
mov
ret
pop
imul
adc
jmp
out
jg
lahf
pop
cli
mov
mul
lret
insl
push
push
out
jbe
xor
add
xchg
mov
bound
into
iret
jl
adc
jae
xor
sub
cmp
cld
dec
data16
in
movq
fnstsw
pop
xor
test
ds
jecxz
jle
cmpsl
push
sub
xor
das
sbb
cmp
sbb
jmp
in
or
cltd
mov
push
into
jg
dec
roll
sub
fists
enter
jae
mov
and
pop
jne
aad
pop
lahf
adc
out
aaa
mov
lcall
fists
rcrl
testb
mov
outsl
mov
mov
pop
jge
popf
adc
pop
push
ret
stos
xor
add
test
div
dec
sarb
test
push
sbb
fldt
cld
and
xchg
pop
jl
iret
or
mov
jg
pop
adc
je
xchg
aas
mov
out
gs
fmull
rclb
es
adc
inc
insb
dec
mov
in
in
loop
cmpsb
lock
js
pop
sbb
add
sub
mov
fidivrs
negl
and
fisttps
insl
or
inc
inc
insl
nop
push
shrb
aam
or
lea
das
movsb
xor
xor
cmp
sbb
jl
inc
xor
jb
inc
push
jp,pn
sub
xchg
and
in
jle
sbb
mov
jno
outsl
cli
ret
pop
cmp
xor
imul
cmp
cmp
fwait
push
or
es
sar
adc
inc
roll
sub
cmp
mov
fnstenv
cmpsl
mov
cld
iret
adc
out
andl
xor
cmpsb
les
insl
or
sbb
or
adc
adc
dec
mov
cmpsl
cmp
mov
nop
add
rolb
mov
mov
les
xchg
arpl
or
int
call
fcomps
jns
repnz
sbb
inc
adc
pop
xor
pusha
jae
jne
xchg
push
mov
ss
sub
and
mov
nop
xchg
cmp
sbb
push
adcl
jl
dec
les
mov
js
jne
test
shll
stos
call
cs
adc
xchg
mov
test
sbb
jp
mov
jg
out
aas
jnp
xchg
pop
fwait
adc
cs
mov
cli
mov
jp
jns
pxor
jne
xor
jg
or
icebp
inc
dec
cmp
adc
inc
pop
inc
repnz
xchg
push
mov
std
ja
xor
push
jbe
pushf
outsl
adc
es
xor
js
and
out
add
xchg
mov
stc
inc
xor
ljmp
nop
test
in
adc
adc
pop
das
mov
outsb
mov
and
jno
lods
pop
loop
xchg
and
jp
push
inc
lea
pop
daa
xor
inc
sub
pop
mov
lea
mov
and
push
sub
cltd
lret
push
cmp
mov
jae
negb
data16
push
test
xor
daa
fmuls
push
cmp
push
decb
cmp
mov
ret
mov
push
cli
cltd
add
leave
push
loopne
in
push
js
loopne
mov
sbb
xchg
and
add
mov
outsb
push
mov
pop
push
icebp
lea
insl
int3
cmp
fildl
xchg
mov
sub
jb
adc
enter
push
jle
leave
les
das
lods
insb
inc
fldt
mov
cmp
xor
clc
push
pop
xor
push
adcb
cmp
pop
mov
out
mov
das
imul
jle
mov
dec
inc
push
sbb
pop
push
scas
pop
and
inc
jne
cmp
pop
inc
addr16
aam
push
add
add
mov
icebp
adc
rcll
mov
ss
cld
or
fstps
outsb
pop
sbb
sub
and
pop
adc
fcmovb
sub
cmp
int3
inc
cmp
xchg
or
ds
fwait
mov
pop
out
mov
jbe
jecxz
adc
dec
loopne,pn
popf
and
dec
inc
lock
fwait
inc
sahf
jbe
jg
dec
push
popa
sub
arpl
jne
jmp
push
mov
pop
jnp
sbb
sub
out
lea
or
jp
dec
push
fnstsw
fdivrl
call
adc
mov
push
mov
or
dec
pop
pop
push
sahf
adc
icebp
dec
mov
xchg
sub
sbb
push
push
popf
in
scas
repnz
mov
cmpsl
pop
movsb
out
rorb
cli
pop
add
aad
cmp
push
pop
leave
insl
addr16
mov
repnz
jle
or
push
pop
mov
mov
mov
push
xchg
mov
mov
out
xor
lcall
jl
test
mov
sbb
ljmp
aad
aam
and
push
pop
inc
mov
pop
ds
ljmp
mov
inc
lret
xchg
jae
inc
in
pushf
pop
ret
mov
in
shll
mov
fsubrs
mov
push
inc
shll
outsl
dec
cld
xchg
jecxz
fwait
mov
mov
repz
sahf
mov
aaa
mov
fwait
loop
sbb
jo
sbb
push
int
and
sbb
lahf
popf
stc
cmp
dec
mov
nop
lret
mov
je
adc
dec
int3
je
cmp
loop
push
and
xlat
and
xor
rcrl
jmp
div
int3
push
adc
ja
lods
xchg
enter
push
push
enter
bound
dec
icebp
rcll
cs
jns
test
aas
rcrb
inc
das
adc
bound
lret
pop
les
xchg
dec
sbb
pop
fcomp
jne
jnp
inc
sti
fimull
or
insb
mov
cmp
shlb
jo
les
xor
add
mov
xchg
pushf
scas
sbb
xchg
cmp
sbb
xor
mov
mov
shlb
jnp
push
nop
mov
sub
jbe
jb
idivl
ds
fsubl
js
xchg
mov
cltd
xor
shll
push
inc
stos
pop
and
jb
inc
xchg
mov
add
aad
in
es
cwtl
sar
ret
cli
loop
pop
cmp
xchg
lock
imul
xor
sub
push
es
and
and
jecxz
aad
hlt
popa
jo
mov
cli
leave
push
sub
insb
clc
cld
leave
les
cld
cmp
push
cli
ss
pop
and
aaa
jp
mov
pop
test
notb
jb
jp
push
test
fnstcw
loop
push
cmp
xchg
fimull
mov
and
ljmp
clc
icebp
xor
add
xor
sub
pop
or
outsb
mov
xor
dec
repnz
out
fiaddl
adcl
xor
int3
in
ss
and
lods
stc
adc
cmc
icebp
aas
ja
cmp
hlt
sub
pop
inc
stos
int3
ret
ja
insb
out
cmp
lods
xor
subl
adc
in
mov
xchg
xor
testb
jmp
insl
sti
sub
inc
dec
xchg
fiadds
lods
lcall
pop
ret
pop
test
fdivr
mov
rcrl
and
into
outsb
imul
jl
sub
push
fcomip
cs
xchg
sub
in
inc
cmp
hlt
mov
adcb
and
or
out
push
jl
mov
outsl
or
imul
push
lds
repz
pop
mov
mov
dec
fbstp
xchg
ds
mov
push
jnp
pop
stc
int
xor
cmp
repz
and
popf
push
mov
fistpll
sub
imull
es
stos
aam
xchg
adc
loopne
inc
sub
daa
adc
xchg
or
sub
or
mov
nop
jp
and
cmp
leave
mov
sbb
jns
push
outsl
repz
sahf
shll
inc
pop
cmp
mov
iret
mull
sub
add
jle
dec
mov
fmulp
pop
test
xchg
inc
jb
sbbb
or
dec
ljmp
insb
dec
mov
and
loop
mov
add
jl
mov
or
add
icebp
sub
or
adc
outsl
out
fs
xchg
lret
or
pop
repnz
sti
jo
pushf
dec
and
out
mov
fstpl
outsb
dec
fcomi
cmp
pop
jg
and
or
jecxz
and
xor
in
mov
xor
jae
int3
iret
aaa
jne
and
sbb
xor
dec
xchg
fadds
rcrb
popf
out
adc
push
divl
jp
xor
adc
sub
frstor
adc
mov
pushl
jle
sub
pop
sub
xchg
add
and
in
popa
mov
ja
cmp
mov
mov
jae
xchg
jmp
lea
push
cmp
xor
inc
cmp
repnz
std
mov
add
das
push
push
nop
icebp
jo
outsl
dec
dec
push
ja
mov
ja
sbb
push
scas
dec
push
xchg
pop
mov
movsb
add
mov
hlt
aad
outsb
cmp
es
les
pop
dec
repz
outsb
mov
movsl
daa
lds
sbb
ret
and
bound
fsubrl
je
pushf
call
adc
mov
shr
lock
lods
sarb
fstpl
mov
mov
xchg
outsb
and
lret
call
mov
sub
rcr
cmpsb
dec
adc
pop
push
xchg
lods
std
icebp
sub
pop
clc
mov
sbb
jb
dec
dec
sarl
pushf
or
lods
scas
ljmp
mov
out
rclb
jne
add
sbb
pusha
and
push
inc
cmpsb
push
imul
orl
inc
dec
mov
lret
fmuls
xchg
test
push
pushf
sarl
sti
clc
das
nop
insb
inc
inc
jae
pop
pop
pop
mov
ret
stos
mov
xlat
jno
mov
dec
jg
mov
mov
shll
std
sub
lock
insl
arpl
dec
aam
push
pop
mov
aam
pop
xchg
aam
pop
test
push
push
aas
movsb
popa
js
lcall
fnstsw
loopne
jns
add
cmp
xor
imul
les
jns
and
test
int
sti
arpl
cmp
out
xchg
das
pop
inc
adc
imul
insb
jb
and
xchg
movsb
lret
mov
mov
dec
sbbb
sub
sub
movsl
mov
mov
outsb
shlb
fs
inc
scas
pop
xor
repz
inc
loope
test
adc
xor
xor
xlat
aas
lahf
enter
pop
push
or
out
bound
rclb
pop
jns
outsb
pop
dec
inc
adc
imul
stc
ljmp
jno
shll
sub
jmp
cmpsb
xor
jae
cmpsl
fwait
clc
arpl
xor
shll
push
mov
add
insl
jbe
or
imul
pop
sbb
xchg
add
in
and
daa
ficoml
insb
bound
push
jns
adc
pop
dec
out
adc
mov
lods
push
mov
fldt
jno
jbe
pop
mov
aaa
imul
je
and
repz
repnz
lahf
cli
jo
xor
jmp
repz
cmp
sub
xchg
imull
ja
fisttps
cli
jbe
or
test
jne
mov
loopne
pop
nop
scas
pop
xchg
dec
mov
repz
jmp
mov
ja
xor
scas
test
shl
lret
push
inc
mov
adc
repnz
xor
nop
pop
mov
cwtl
xchg
xchg
out
xchg
pushf
cld
cmp
subb
jge
out
test
in
xchg
incb
js
mov
push
cmpsb
lods
fsubs
in
dec
mov
fstpl
inc
rcr
popa
sbb
mov
sbb
jno
cmp
mov
pop
lods
test
mov
leave
stos
mov
rcl
test
mov
and
call
cmp
sub
or
in
and
mov
mov
add
pushf
mov
add
mov
movsl
scas
inc
imul
adc
xor
call
outsb
stc
mov
call
movsl
ret
cmp
inc
data16
ret
mov
test
pop
pop
adc
fimuls
out
popa
scas
in
fidivrl
xor
ljmp
inc
fcomi
xor
jb
daa
add
push
push
sub
jle
jle
pusha
jle
add
jg
push
add
xor
push
xchg
cmp
xchg
hlt
pop
and
lds
mov
push
dec
mov
call
adcl
daa
jg
mov
je
int
and
adc
outsb
sub
xchg
add
jl
test
or
cs
mov
pop
push
sub
adc
mov
add
cmp
sbb
pop
stc
cli
dec
and
xchg
jns
dec
pop
roll
faddl
xchg
jge
pop
ja
addl
and
or
xchg
and
mov
dec
std
lahf
pop
not
jle
push
fdivrl
out
pushf
xchg
mov
pop
or
jo
jb
dec
outsb
je
mov
call
ret
dec
mov
aaa
pushf
ret
shr
inc
icebp
hlt
iret
jle
push
or
sbb
cli
xchg
sbb
xorl
incl
xor
add
pop
jmp
test
mov
mov
lea
mov
decb
mov
es
and
movsb
or
jmp
stos
loopne
mov
lods
adc
enter
imul
cmp
xor
push
mov
mov
icebp
pop
lahf
mov
or
jo
mov
adc
sbb
cmp
cmpps
dec
scas
and
and
jmp
inc
lods
mov
sub
mov
xor
xor
add
andb
int
lds
adc
mov
aas
into
pop
jg
notb
inc
mov
cmpsb
push
lcall
jg
pop
cld
dec
mov
addl
subl
add
mov
pop
fistl
pop
mov
mov
icebp
sbb
xlat
jno
loop
sub
push
xchg
jae
push
jp
dec
pop
bound
cmp
mov
iret
sub
sub
sbb
cs
out
push
mov
add
dec
aad
jne
or
mov
in
pushf
adc
int
jo
and
ret
and
cwtl
out
jmp
cmp
or
mov
mov
leave
inc
pop
filds
fcmovu
into
clc
xchg
xchg
add
in
xchg
lea
mov
dec
test
sub
ret
cmp
es
je
dec
push
movsl
push
jns
dec
ds
mov
inc
jb
adc
mov
test
jno
jmp
outsb
sbbb
add
sub
rcl
mov
dec
mov
jae
adc
insb
lcall
adc
int3
push
inc
cmpsl
push
add
inc
mov
mov
iret
sub
test
add
sti
out
push
icebp
stos
xchg
into
adc
dec
lods
inc
cmp
or
outsl
ljmp
shll
push
cmp
movsb
mov
imul
aaa
add
sbb
jg
sub
mov
ja
push
rclb
dec
repz
sub
mov
fucomi
cli
jmp
rcr
push
sbb
shlb
fcoml
idivb
jl
dec
out
sub
lea
loope
push
inc
fs
cmpsl
adc
push
faddp
mov
in
mov
movsb
repnz
adc
xchg
addr16
outsb
sbb
push
or
sbb
dec
sbb
bound
imul
fcompl
je
testl
sub
mov
jne
in
push
cltd
mov
lods
mov
lea
mov
inc
lahf
scas
lock
xor
fldl
mov
sub
push
sub
call
bound
pop
adc
xor
inc
dec
fiadds
das
dec
and
push
popa
or
in
ds
adc
popl
hlt
push
aaa
jns
shl
aam
leave
or
jl
push
jns
cltd
and
push
jo
aaa
add
xor
call
test
mov
push
enter
loop
fwait
dec
xchg
jbe
insl
aad
or
shl
ds
cmp
les
imul
gs
mov
inc
ljmp
cmpsl
push
sub
js
add
dec
out
pop
and
dec
cmp
mov
outsb
cli
loopne
in
fsubrp
and
movl
and
aam
dec
jo
leave
push
loop
sahf
sbb
push
gs
pop
mov
jl
out
mulb
xor
adc
mov
rorl
inc
daa
dec
fsubrl
push
inc
push
or
scas
and
push
loopne
ss
adc
jne
mov
cltd
adc
mov
sti
add
cltd
or
outsl
adc
dec
cli
push
push
popf
and
pop
pop
xchg
out
and
sub
pop
fstl
xor
push
repz
pmaddwd
or
inc
xchg
xchg
ds
jb
jbe
rolb
and
pop
mov
xor
mov
je
stos
outsb
out
add
shrl
out
ss
ds
js
test
jb
xchg
mov
inc
negl
rorl
rolb
imul
out
add
sbb
pop
ds
or
not
out
jo
dec
cltd
daa
xchg
rorb
mov
or
jnp
mov
scas
jo
fcoms
jmp
mov
inc
and
mov
jle
sbb
push
cmp
xor
loopne
dec
push
enter
dec
pop
dec
mov
fsts
dec
lret
fildl
lcall
lock
jbe
sarb
into
ret
andl
xor
loopne
pop
mov
mov
pop
pop
add
icebp
jmp
and
inc
out
push
cmp
inc
push
cwtl
mov
cmp
jmp
stc
add
in
into
stos
sub
and
cmp
mov
in
lcall
or
sti
leave
inc
push
lds
inc
data16
int
push
outsl
mov
mov
pop
jns
jp
ds
rclb
test
xchg
push
jbe
ljmp
or
int
mov
add
inc
andb
or
mov
movl
jno
cmpsb
mov
or
dec
sub
repnz
cmp
lods
pop
sub
test
cmp
outsl
and
fisttps
xchg
push
jb
sbb
repnz
jle
pop
and
dec
xor
popf
popa
aaa
jbe
mov
sti
dec
in
jmp
sub
fcmovnu
pop
sbb
int3
mov
rcl
or
mov
pop
nop
lods
shl
aam
and
inc
xchg
jg
imul
jge
push
pop
ss
adc
mov
leave
cmpb
shll
aad
xlat
filds
scas
pushf
scas
sbb
push
roll
fmulp
clc
aas
add
mov
mov
subl
or
fs
stos
adc
mov
mov
sbb
xchg
arpl
xor
jb
adc
stos
sbb
les
cmp
mov
pop
sbb
push
mov
data16
mov
loope
les
fisttps
or
pop
bound
sbb
lcall
testb
and
dec
int3
mov
popa
xchg
iret
adc
outsb
mov
xchg
xchg
pop
pop
rorl
sub
ljmp
std
mov
cmp
imulb
inc
ret
push
pop
mov
sbbb
xchg
loopne
pop
dec
ljmp
cs
inc
ljmp
push
xor
mov
inc
jmp
in
and
push
dec
xchg
loope
sbb
sub
js
add
out
in
dec
pop
inc
cltd
or
cmp
pop
jns
jns
mov
adc
fdiv
xor
jns
jl
aad
stos
sub
ljmp
jle
mov
push
push
cmp
jl
sub
insl
push
andl
lahf
aad
or
subb
add
mov
xchg
and
sbb
mov
insl
mov
aaa
push
fcmovu
mov
test
pop
mov
pushf
jge
add
rol
out
or
arpl
iret
xchg
cmp
mov
lret
mov
or
cmpsb
dec
cmp
sub
cmpsb
daa
scas
popf
jp
lods
pop
cwtl
aas
or
xor
imul
aad
inc
lea
mov
or
subl
insb
and
movsb
or
fs
fisubrs
dec
sarl
das
lds
adc
mov
fisubs
dec
fcmovb
cmc
ret
ret
mov
insb
xor
gs
mov
add
stos
test
dec
or
cld
sbb
jge
xchg
icebp
int
jg
sti
inc
pushf
test
test
add
aam
mov
sbb
adc
ret
cmp
pop
notb
lods
sbb
mov
mov
movsb
sub
leave
xor
xchg
or
mov
out
cmp
xchg
pop
shrl
xchg
test
sbb
cmp
ja
inc
and
xchg
lds
and
dec
pushf
pop
fisubs
dec
mov
cmp
adc
mov
lcall
imul
push
lods
rorl
and
pop
outsb
mov
nop
sti
fs
andl
shll
adc
cmp
int3
imul
add
push
inc
push
aam
pushf
mov
ja
push
ds
cmc
mov
imul
mov
inc
lods
adc
inc
in
xor
inc
in
lret
test
mov
or
inc
in
icebp
lock
push
xor
and
mov
bound
addb
push
flds
jle
fld
loopne
aam
mov
xchg
sbb
jbe
je
imul
repnz
ja
cltd
ljmp
push
or
mov
lahf
xchg
jle
mov
mov
pop
outsl
out
cmp
pop
lahf
mov
cmc
sub
subb
ss
push
jb
repz
frstor
mov
xchg
push
shlb
testl
lods
cmp
mov
fdivs
xchg
add
adc
pop
jl
in
in
cwtl
repnz
or
dec
push
mov
inc
sahf
xor
jmp
aas
adc
aad
lea
hlt
sub
fistps
scas
aas
mov
xor
inc
xchg
out
adc
adc
push
inc
inc
andb
xchg
popa
icebp
into
mov
jae
jns
lahf
aas
out
out
adc
shrb
and
out
cmpsb
scas
das
xlat
jnp
cmp
pop
into
adc
mov
inc
add
test
clc
dec
xor
aam
mov
dec
inc
or
lret
popa
std
jae
pop
lahf
es
push
jno
aad
stos
and
jnp
js
test
lds
lret
ret
adc
lret
mov
cmp
jo
test
and
jae
push
dec
dec
pop
push
push
xor
adc
xorl
arpl
pop
scas
jmp
das
aad
and
jle
imulb
mov
arpl
test
cwtl
sbb
clc
lods
mov
aad
fadd
imul
fnstenv
in
addr16
gs
pop
mov
push
std
into
sbb
out
pop
ret
divl
jmp
addb
push
enter
mov
lock
sbb
inc
ja
test
lods
addb
ret
test
pop
js
outsl
mov
mov
repz
sub
insl
aad
jns
jbe
jne
inc
outsb
jo
sarb
shlb
xor
adc
lods
sbb
cwtl
and
das
cmpsb
add
daa
cmp
mov
dec
jne
adc
mov
fdivp
stos
ffree
sub
pop
fimull
mov
push
dec
faddl
mov
push
add
ljmp
testb
push
jne
push
lret
pusha
movsb
test
fcmove
movsb
ss
add
lahf
jo
jle
push
icebp
fwait
adc
and
dec
add
stos
pop
inc
pop
push
jno
scas
testl
les
testl
lahf
mov
push
sti
mov
fisttpl
add
push
shl
test
xchg
les
aad
pop
mov
insl
mov
outsl
imul
xchg
loope
leave
cli
je
jecxz
and
fisttpll
aad
add
and
les
shl
into
cmp
lods
pop
hlt
xor
pop
rcr
repz
sti
cltd
cltd
or
add
sarl
dec
pop
mov
push
out
add
stos
movsl
inc
cs
jg
scas
pop
lock
inc
adc
mov
pop
divb
xor
add
sbb
xchg
popa
test
lea
fdivrl
andnps
cmpsl
and
ret
loopne
mov
adc
push
pop
sbb
imul
cs
dec
cs
pusha
adc
lea
or
sbb
sub
hlt
ja
jg
in
mov
ds
xchg
cmp
sar
movsb
sub
lret
out
jecxz
cmc
push
lods
add
adc
ljmp
mov
push
dec
mov
pop
int3
nop
rcrb
test
out
push
cmp
push
push
jl
test
push
fst
jno
mov
lds
push
sbb
xor
xchg
js
inc
mov
nop
nop
test
stos
fs
sub
test
xchg
hlt
test
adcl
ss
cli
lock
in
inc
pop
sbb
std
inc
mov
das
out
push
fbld
jnp
cmpsl
repnz
sbb
mov
cmp
push
ss
sbb
rorl
out
fidivrs
sub
aaa
in
jns
sarb
pusha
repnz
test
imul
pop
or
cld
jns
mov
or
rcrb
or
jnp
mov
inc
mov
mov
stos
and
bound
cltd
push
cs
jb
cmp
loope
insl
outsb
dec
mov
pop
loop
inc
inc
dec
adc
mov
psubq
shlb
sub
lret
call
mov
aaa
add
shrb
outsl
stos
jbe
cli
loope
mov
or
lcall
aam
ss
roll
clc
js
mov
mov
xchg
xor
push
in
lret
movsb
xchg
movsl
mov
pop
jbe
push
in
cli
add
xchg
jo
mov
or
addr16
out
mov
in
stos
and
fimull
pushf
and
push
fucomi
push
xchg
imul
std
loop
jmp
shlb
xchg
dec
shrb
aaa
rorb
bound
outsb
mov
sub
xor
jle
cli
pop
sbb
fst
push
dec
clc
dec
cmp
fsubrp
pop
mov
jmp
je
jnp
test
dec
scas
jmp
aam
loop
mov
jge
popa
and
adcb
dec
mov
mov
ret
fldenv
iret
dec
lcall
push
mov
push
ror
push
jecxz
ficompl
popf
push
in
lret
mov
repnz
add
lds
dec
fwait
push
inc
loope
mov
mov
sbb
loope
jnp
lcall
mov
add
push
inc
div
dec
out
loop
pop
push
rorl
gs
xchg
in
imul
outsb
lock
pop
sbb
sarl
inc
pop
xor
jg
push
clc
and
nop
sahf
fistpl
cwtl
jmp
xor
in
mov
enter
push
inc
jne
xchg
repz
jo
sti
lock
arpl
mov
dec
xor
mov
test
fs
mov
push
sbb
jmp
lods
test
call
mov
dec
sbb
imul
call
inc
flds
mov
push
inc
sbb
mov
ss
add
jg
cld
test
js
test
sub
fsubrp
loopne
sti
std
jno
jo
sbb
es
movsb
dec
in
repnz
mov
iret
into
mov
aad
pop
and
leave
stos
test
jo
mov
in
mov
mov
mov
rcrb
xchg
popa
pop
movsb
mov
push
pop
jnp
mov
dec
push
imul
xchg
popa
fildll
mov
jecxz
mov
sub
mov
push
lcall
test
gs
popa
nop
mov
adc
rep
push
movsl
dec
aam
fstpl
sti
mov
fnsave
repz
push
das
pusha
stc
and
dec
out
int
insb
mov
push
pop
orl
inc
lret
lret
inc
pop
add
mov
jmp
movsb
push
jmp
xchg
push
push
pop
fs
nop
push
lds
js
aas
mov
mov
nop
push
aad
out
inc
mov
inc
jg
cmp
sbbb
sub
jno
adc
inc
mov
scas
es
xchg
fldl
sbb
insl
inc
fsubl
jo
fists
leave
ds
push
or
sub
out
xlat
lock
insl
push
rol
out
shll
xor
sahf
ror
sbb
test
das
ss
mov
and
mov
cmp
and
mov
sbb
add
lcall
mov
negb
pushf
icebp
mov
mov
push
dec
jp
mov
vxorps
xchg
dec
rcll
sub
imul
adc
push
cwtl
scas
push
add
sbb
repz
xchg
inc
and
inc
adc
adc
fnstsw
pop
mov
loope
js
mov
out
or
repz
adc
xchg
leave
je
fldenv
icebp
mov
sub
jnp
lods
cmp
mov
jne
in
add
inc
out
xchg
into
lret
out
push
jne
test
lret
or
dec
inc
jns
gs
push
inc
popa
xchg
sub
xor
mov
dec
lahf
lods
add
dec
lret
pop
xchg
cs
lret
xor
loopne
dec
fstps
pop
dec
cli
inc
xor
mov
repz
push
out
dec
add
lods
cld
cmp
mov
idivb
arpl
cmp
push
mov
cwtl
mov
xchg
dec
xor
imul
mov
add
push
pusha
jge
or
ss
pop
add
cmc
xchg
repnz
ror
pop
adc
inc
rcrb
mov
int
xor
scas
push
dec
push
jp
or
and
pop
call
and
sub
aad
sub
push
and
gs
and
xlat
mov
sti
pushl
dec
shlb
mov
dec
sub
pop
push
ljmp
repnz
movsl
mov
pop
jge
jecxz
fs
aas
fisubrs
mov
adc
adc
shlb
imul
pop
iret
imulb
out
mov
in
xchg
sub
adcb
aaa
inc
mov
fdivl
mov
scas
andb
dec
movsb
add
lcall
aad
pop
push
add
add
fistpl
mov
ss
cmp
sub
lcall
push
cld
test
call
dec
pop
bnd
pop
or
mov
mov
pop
inc
pop
jno
lods
aam
lcall
jae
dec
lret
cli
xor
push
iret
test
nop
jmp
testl
jg
mov
push
dec
sahf
aam
push
sbb
inc
xor
jo
test
jns
mov
iret
pop
lea
jle
adc
push
sbb
cmpsb
lret
faddp
add
inc
shll
cltd
test
lahf
mov
dec
ret
nop
pop
sub
push
cli
out
notl
call
ljmp
imul
pushf
roll
in
in
or
cld
adc
or
or
in
stos
flds
mov
movsb
imul
jp
mov
inc
int3
dec
dec
ficomps
inc
jecxz
addb
jmp
or
fwait
mov
into
jb
loopne
xchg
ret
stos
sbb
aam
sahf
testl
jb
xorb
out
fmull
pop
add
sub
cmpsl
jle
fldl
movsl
sti
arpl
add
mov
xor
std
and
loopne
push
xor
pop
jo
pop
mov
inc
ds
and
ss
and
movsl
jle
xchg
lock
cmpsb
add
cltd
mov
call
mov
pop
in
loop
lea
sub
push
mov
dec
add
out
add
cmp
mov
in
movsb
add
addr16
mov
cmpsl
sbb
sbb
std
inc
jmp
sbb
aas
rcrl
mov
xchg
add
adc
cmpsb
ja
sarl
rcrb
imulb
pushf
sahf
jmp
xor
sbb
nop
stc
push
jnp
sub
inc
rol
jl
inc
sbb
push
sub
cmpsb
scas
adc
push
mov
data16
test
mov
cmp
pop
inc
rorl
out
jbe
clc
lret
cmc
inc
sarb
sub
ss
outsl
push
push
cmc
push
std
jbe
sub
push
andl
add
lds
jmp
in
leave
aam
pop
dec
fs
aad
popf
or
mov
adc
das
sub
test
outsl
or
sarb
lcall
fwait
and
ja
into
sti
push
push
in
scas
lods
lea
xchg
mov
jle
add
jmp
ljmp
movsl
lret
sbbb
mov
pop
fadds
push
dec
inc
adc
jp
out
into
jo
decl
fldenv
or
hlt
sbb
shlb
movsl
xchg
add
ds
add
inc
pop
inc
adc
out
frstor
insl
leave
adc
xorl
dec
aam
sbb
adc
xlat
int
popa
je
xorl
jb
fmul
mov
iret
adc
int3
lcall
cmpsl
idivb
sub
dec
ds
sbb
rorb
and
lret
xor
pop
pop
loop
xor
inc
hlt
dec
push
std
adc
inc
int
lods
iret
sub
outsb
sub
test
xchg
xchg
sarl
aam
xor
shrl
imull
jb
adc
mov
loopne
xchg
pop
mov
lea
sahf
addr16
mov
jl
out
xor
pop
test
fstl
and
filds
ljmp
pop
aaa
or
test
mov
lods
ljmp
test
push
inc
adc
out
mov
inc
fcoms
call
dec
cmp
insl
iret
pop
lcall
mov
pmulhuw
mov
das
xor
push
jmp
cmp
jg
cmp
fmul
and
or
insl
mov
outsb
aam
xchg
in
sbb
push
xchg
pusha
popf
mov
mov
jae
lahf
fildll
sub
roll
int3
popa
mov
lods
in
push
popf
xor
stc
dec
shl
pop
lods
adc
divb
ds
fisubs
mov
mov
mov
mov
inc
push
fldenv
shl
mov
pop
pop
ss
pop
pop
lahf
jmp
cmp
mov
test
pop
jb
and
out
cmp
push
mov
or
test
ss
push
xchg
das
lods
dec
out
xchg
pop
or
jle
iret
repz
cld
nop
cmp
xor
imul
mov
jle
sbb
lds
subl
mov
clc
aaa
insb
cmove
pusha
jl
mov
inc
adc
andl
divl
movb
loope,pn
pop
mov
push
sbb
inc
jmp
nop
sbb
scas
add
mov
out
ficoml
adc
xlat
repz
jns
rcl
inc
add
stos
cmp
fcompl
bound
cmp
leave
dec
xchg
out
pop
mov
ss
xchg
sahf
ds
and
stc
mov
adc
mov
int
gs
mov
es
mov
sub
ret
data16
push
ret
fs
stc
add
jle
dec
sarl
addl
repz
cwtl
jl
stos
stc
xchg
lea
lea
mov
cmpsb
jbe
or
pop
jo
pop
sarl
xchg
push
push
inc
or
loope
rcll
xchg
cwtl
negb
cltd
mov
mov
xchg
push
ret
das
xchg
or
pop
pop
je
pop
add
shlb
pop
repz
dec
mov
movsb
je
ss
ror
jmp
sbb
or
dec
sub
gs
dec
pop
aad
hlt
jp
lret
scas
test
xchg
imul
pop
add
pop
fisttpl
or
outsb
mov
mov
pop
or
stc
lcall
addr16
mov
push
fs
sahf
inc
xchg
dec
lret
add
std
xchg
sub
fdivrp
pop
out
pop
pause
adc
out
mov
push
mov
mov
sarb
add
inc
add
rcrl
mov
jecxz
ljmp
jg
fsubrs
xor
out
aaa
imulb
pop
xchg
icebp
dec
mov
push
push
cld
xchg
pop
mov
jl
mov
hlt
and
lods
sbb
mov
cmp
push
mov
dec
push
fcmovnb
cmp
call
pop
inc
and
jp
shr
jmp
ds
or
cmp
test
lret
popa
jns
add
push
lds
mov
out
cld
or
pusha
stc
push
shrb
arpl
scas
or
cmp
lods
cmpsb
sbb
les
sub
xor
loop
data16
mov
ja
std
loopne
pop
test
push
pop
push
jnp
movb
sbbb
mov
jl
shll
xchg
xchg
jae
jo
inc
dec
mov
jnp
mov
iret
push
push
in
add
int
sub
jb
andb
daa
mov
jnp
xor
push
sahf
scas
fisttpll
out
call
subl
dec
sub
mov
jle
test
ljmp
and
xchg
cmp
push
jmp
xor
stos
ds
jb
and
xor
sub
cs
jp
pop
jge
xchg
cmc
or
adc
jnp
imul
testl
adc
mov
pusha
pop
outsl
std
imulb
or
pop
rolb
mov
mov
sbb
lea
test
sub
rorb
mov
nop
pop
sbb
sub
fisttpll
repnz
inc
es
jge
inc
or
jb
cmp
xchg
pop
cli
add
push
ret
inc
cs
aaa
inc
pop
sti
inc
loopne
pop
inc
mov
sub
out
jp
shrl
add
fisubl
dec
sahf
das
leave
flds
aam
xchg
mov
jb
jo
test
pop
mov
in
cld
pop
adc
or
or
push
aam
push
repz
sub
pop
add
cmp
test
and
popf
stos
xchg
rcrb
push
cmp
es
dec
cmpsl
jp
mov
out
insl
inc
mov
and
and
lods
scas
popf
cmp
cmp
sub
into
dec
mov
jo
int
jg
adc
filds
xor
lods
jecxz
insb
les
mov
sbb
add
int
xchg
je
repnz
or
int3
jns
mov
jmp
cmp
inc
stc
dec
push
mov
inc
push
pop
pop
xchg
idivb
je
adc
dec
insb
mov
es
mov
lcall
ret
lcall
pop
bsr
push
add
sub
push
mov
push
push
cmp
jb
mov
iret
ss
ja
add
imul
xor
es
xor
sub
std
adc
cmp
cmp
jle
xor
int3
hlt
and
add
mov
xor
stc
sbb
mov
mov
lret
pop
lahf
xchg
test
dec
es
clc
sahf
xor
sbb
pusha
pop
and
pop
inc
jecxz
xchg
mov
pop
aad
xor
and
lods
cmpsb
loopne
mov
enter
mov
inc
ja
enter
leave
xorl
push
iret
inc
cmp
lds
stos
and
fdiv
cmc
or
repnz
iret
push
loopne
out
lret
xchg
xchg
popa
adcl
je
sub
in
orb
decl
lock
inc
shll
fildll
jne
mov
push
mov
and
lods
lock
mov
das
cmp
jg
scas
mov
movsb
sbb
push
test
mov
mov
push
lock
adc
xor
lea
sub
jle
jg
call
scas
daa
sbb
adc
in
inc
repz
lret
hlt
bound
cmpsl
int
jl
cmp
lods
hlt
jmp
lock
xlat
gs
movsb
in
xchg
call
adc
pop
xor
into
xchg
lods
mov
cli
pop
aaa
adc
loopne
shl
sub
pop
pop
inc
rcll
or
daa
popf
clc
aas
mull
mov
leave
addr16
popf
mov
shl
in
fldt
popf
push
adc
pop
and
add
push
fildll
lcall
adc
mov
andl
mov
push
cmp
xchg
lock
gs
inc
mov
dec
into
fdivs
adc
xor
adc
sbb
repnz
xchg
ret
mov
pushf
aad
fwait
inc
cmp
mov
ret
notb
sbb
pop
enter
std
push
jp
sbb
pop
sbb
cmp
and
push
test
lds
xchg
mov
sbb
jl
sbb
repnz
or
into
xchg
andl
inc
xor
inc
addr16
xchg
mov
sbb
mov
inc
xchg
adc
incl
sub
in
pop
dec
aaa
cmpsb
pushf
sub
dec
jno
sbbb
cld
fdiv
addr16
push
add
in
xchg
lea
cmp
pop
jae
rcrl
mov
aad
adc
xchg
aad
dec
aad
xor
mov
test
mov
sar
inc
inc
jnp
lcall
lret
jle
rcr
xor
test
add
cltd
push
popa
aad
inc
push
in
dec
adc
popf
clc
pop
xchg
in
mov
add
lahf
out
jmp
or
cli
mov
sub
imul
lods
xorb
std
jmp
mov
and
add
stc
inc
jl
sbb
inc
mov
pop
pop
push
inc
scas
pop
inc
sti
cli
dec
rcll
movsb
jb
pop
andl
and
push
cld
in
xchg
push
sahf
push
pop
add
jge,pt
orb
xor
lds
aaa
lods
push
outsl
movsb
xchg
ljmp
xor
jg
push
jb
daa
clc
cmp
lds
fs
jge
pusha
jmp
push
fwait
pop
lahf
out
rcr
mov
int3
inc
mov
imull
test
pop
loopne
sub
gs
pop
dec
cmp
and
push
dec
popf
fisubrs
pop
mov
inc
fidivrs
in
jb
xchg
test
test
lea
mov
add
adc
sub
mov
add
cld
jb
lock
sbb
dec
jb
repz
mov
or
push
xchg
push
call
shrl
pop
fmull
inc
inc
imul
cwtl
in
xor
adc
inc
shlb
sub
fldcw
and
add
icebp
cmp
stc
mulb
jne
in
movsl
ficoml
mov
mov
mov
adc
stc
mov
push
movsl
loop
or
rorb
mov
adc
pop
in
lods
inc
adc
js
add
mov
inc
mov
jns
push
jle
xchg
test
jns
mov
add
aam
jbe
fcompl
inc
fdivrl
pushf
cli
dec
je
jge
out
das
mov
nop
repz
and
jg
dec
subb
push
and
out
mov
call
mov
cltd
int
cs
sub
jno
les
inc
cs
mov
jns
jno
mov
xorb
cli
sarb
jmp
mov
fstps
jmp
add
hlt
std
pushf
push
lcall
fincstp
sub
push
jg
in
lahf
or
lds
loope
dec
mov
daa
out
cld
xchg
sbb
je
mov
and
imul
cwtl
mov
movsl
push
sub
inc
cld
jae
adc
rcrl
mov
mov
jl
jecxz
fldl
rcrl
lahf
pmaxsw
outsl
cld
push
insl
pop
into
jnp
in
dec
sbb
xchg
ljmp
sarb
mov
fucomi
dec
je
sti
mov
fs
xor
pop
jp
xchg
push
popa
cmc
or
mov
adcl
std
cmpsb
adc
jl
out
xchg
test
or
push
mov
pop
or
dec
mov
xchg
sub
pop
call
subl
enter
int
loope
cmpsb
and
cli
repz
sbb
sbb
add
sub
add
pop
sub
jmp
jb
sahf
inc
test
outsb
add
mov
addb
or
loopne
mov
adc
cmp
ds
movsl
push
movsb
sub
inc
pop
test
dec
lds
sbb
mov
adc
fdivl
mov
xchg
test
xchg
lret
jbe
pop
mov
xchg
test
adc
pop
inc
jl
jnp
adc
arpl
pop
mov
and
mov
or
roll
and
lds
mov
pop
ljmp
push
mov
jne
lcall
dec
sub
push
imul
out
adc
dec
sbb
out
mov
inc
addl
sub
mov
iret
inc
xor
imul
cmp
shr
pop
push
and
enter
arpl
std
xchg
mov
jo
rcrb
aas
repz
dec
movb
push
push
inc
mov
loop
mov
xchg
mov
jge
ljmp
iret
sahf
cli
xor
cmp
loopne
sbb
sub
mov
and
jnp
loop
cmp
xchg
mov
cmp
push
icebp
mov
mov
pop
lret
into
sub
popf
sbb
test
int3
jl
shll
lods
mov
and
movsl
scas
mov
popf
enter
fldt
imul
fisubrs
xor
mov
push
and
jle
push
xor
aad
out
push
jmp
xor
xchg
cmpsl
push
xor
jp
movsl
push
jnp
in
pop
stc
mov
xchg
jbe
sub
int
push
xor
sub
cmc
movsl
and
xchg
pushf
push
xlat
sub
mov
cmpb
pop
jae,pn
imulb
dec
in
iret
xor
fcmovnu
mov
and
push
shrl
mov
arpl
nop
jmp
loope
adc
xchg
pop
inc
mov
pop
cli
idivl
fiadds
sbb
mov
or
ret
push
cmp
and
add
pop
mov
int
inc
cli
pop
pop
fdivl
lock
fiadds
sub
cmp
stc
sti
cmp
inc
xchg
push
pop
imulb
ljmp
mov
jo
mov
sub
or
push
loop
inc
add
lret
add
push
mov
xchg
sub
inc
enter
or
and
fdivrs
mov
push
loope
add
sub
ret
inc
addr16
and
mov
cmpsb
insb
cltd
mov
push
es
dec
mov
fisttpll
scas
lea
jo
lods
popf
xor
lahf
mov
add
leave
mov
and
pop
push
shr
mov
mov
push
push
dec
shr
mov
sub
popf
xlat
leave
push
int3
xabort
lret
int
push
push
frstor
mov
push
fwait
imul
jle
insb
loop
insb
or
xor
loop
xchg
scas
pop
jl
dec
imul
jnp
mov
data16
sbb
sbb
and
fnsave
std
les
cmp
jg
aas
push
cmp
jge
mov
and
movsl
jmp
popf
dec
push
push
insb
lcall
out
stos
aad
outsl
jle
push
mov
jbe
sub
jae
cmpsb
mov
mov
iret
out
in
xor
xor
push
out
jae
xchg
push
mov
cmpsb
jne
sub
lret
xor
sbb
cmp
stos
stc
jb
jno
into
xchg
or
push
push
or
sbb
ret
inc
je
xor
pop
in
imul
repnz
or
push
data16
lahf
xsavec
std
int3
cmpsb
or
sbb
xlat
aad
ljmp
add
adc
adc
dec
mov
loope
int3
je
dec
xchg
push
push
repz
call
insb
fsubrl
sub
or
xchg
cmp
lods
mov
aaa
sti
lcall
add
stos
xor
out
lods
stos
fwait
sub
fdivp
pop
add
dec
pop
out
jo
pop
xor
fwait
mov
pop
xchg
sahf
pop
push
sti
jmp
insl
in
out
adc
push
sub
movsb
outsl
fcoms
sbb
dec
hlt
xchg
lret
jmp
mov
adc
jno
dec
mov
shll
in
std
sub
fdivrs
ljmp
inc
jmp
mov
adc
push
insb
in
lea
and
or
xchg
dec
push
out
je
sbb
into
push
push
lahf
pop
insl
and
inc
push
sub
int3
cmp
fidivl
aad
xor
cmpsb
mov
insl
cmpsb
imul
lea
xchg
ja
es
jns
pop
scas
jbe
lock
add
push
dec
stos
sub
mov
stc
sub
pop
pop
shlb
push
outsb
sub
adc
adc
cld
ret
sbb
pop
lods
test
pop
cmpsl
lret
inc
adc
dec
in
outsb
testl
lcall
xorl
in
clc
imul
bound
lret
pop
fdivl
aas
repnz
aad
iret
or
pop
or
jl
xchg
in
or
fprem
mov
xchg
mov
xchg
jne
jnp
xor
movsb
inc
add
lods
xchg
pop
fbld
loop
pop
fsts
nop
insl
bsf
adcb
nop
push
adc
inc
mov
and
pusha
push
movsl
lods
jle
icebp
in
insb
push
nop
xchg
xor
jne
push
xchg
cli
loope
fidivrs
stos
lret
and
arpl
mov
stos
push
andl
aam
dec
add
cmp
fs
sub
aam
subb
imul
pop
pop
xchg
mov
icebp
mov
ss
ss
pop
jne
or
sbb
jp
insb
fadds
xor
shlb
hlt
or
jecxz
outsb
mov
movsl
sbb
dec
mov
jbe
xorb
ret
ja
mov
call
adc
movsb
adc
pop
icebp
rclb
aaa
cmc
mov
xor
mov
fs
int
in
jg
dec
pushf
addr16
sub
push
cmp
cs
int
jb
jb
mov
add
xor
stos
inc
test
and
arpl
inc
inc
pushf
push
jns
icebp
popf
pop
lock
hlt
and
sub
dec
stc
cmp
adc
sub
push
jo
pop
and
push
jno
rcr
inc
mov
mov
into
xlat
mov
sbb
cmp
fwait
shll
adc
call
adc
push
pop
pop
mov
dec
insl
push
shrl
xchg
mov
sub
push
mov
popf
sahf
out
cs
cmp
adc
pop
arpl
jo
orl
jmp
add
lcall
and
xorl
jbe
loop
movsl
dec
lahf
mov
jecxz
lahf
mov
in
jae
mov
in
dec
xor
sahf
aad
fstps
int
mov
stos
loopne
ss
pop
cmp
pop
loopne
lret
sub
mov
iret
mov
outsb
xlat
mov
jmp
sahf
mov
in
je,pt
or
adc
cmc
mov
jno
xor
or
mov
addps
cmpsb
test
xchg
and
mov
sbb
out
shlb
mov
fnstenv
push
mov
lea
xchg
or
popf
push
das
push
or
addr16
stos
pop
push
std
sbb
and
sub
dec
js
inc
arpl
jecxz
imul
mov
or
dec
mov
sub
inc
mov
imul
test
ror
outsb
push
icebp
jg
fistps
cmp
pop
push
add
and
add
outsl
pop
mov
setb
ds
lret
sbb
or
jg
dec
sub
or
mov
lock
cmp
rcrb
aad
sbb
out
pop
mov
lret
sub
mov
gs
jp
cli
adc
enter
paddw
loopne
icebp
std
iret
pop
leave
jmp
stos
xor
cld
movsb
and
outsl
adc
in
ret
dec
mov
fsubp
cmpl
cmc
popa
cmpsb
or
mov
mov
std
and
mov
inc
sub
es
js
sarl
lods
dec
xor
lock
push
mov
std
mov
lahf
pop
and
inc
jle
jg
or
jns
mov
push
or
cmp
es
xchg
mov
inc
inc
in
cmpsl
lea
roll
push
cltd
sub
iret
scas
dec
mov
adc
adc
loope
mov
push
xor
in
jo
popf
jo
adc
sub
mov
cmp
subl
cmp
pop
jmp
mov
pushf
and
cmp
ja
fwait
and
mov
pop
xchg
outsb
ret
aaa
add
inc
mov
hlt
stos
popf
ljmp
dec
lods
in
sahf
mov
sbb
sti
pop
inc
in
decb
shrb
xor
cmc
shr
xor
fstpt
lahf
in
dec
or
lods
sbb
shlb
cmovbe
inc
xchg
test
out
jno
mov
cmp
cli
mov
push
out
or
push
iret
or
push
loopne
pushl
add
sbb
arpl
or
jg
out
out
fimull
xor
std
xor
enter
adc
mov
cli
insb
repnz
mov
pop
push
int
cmp
shlb
in
jle
and
hlt
xchg
dec
rcrb
ja
mov
inc
xchg
popf
mov
cmp
and
jbe
pop
xchg
jle
leave
jbe
push
fcomip
and
inc
mov
or
push
frstor
and
fldl
inc
or
cmp
sbb
popf
test
mov
cmp
cltd
iret
pop
fisubs
orl
add
or
pop
xchg
movsl
mov
sub
iret
dec
xor
int
cld
testl
dec
push
sub
jg
lcall
imul
cli
add
sub
pop
pop
lea
sub
ljmp
or
jmp
pop
out
adc
jns
pop
xor
inc
mov
loop
rcrb
dec
xor
movsl
cmp
out
dec
adc
pop
mov
in
jecxz
call
shll
xchg
xor
iret
mov
fwait
dec
mov
or
in
cld
shlb
dec
out
mov
xchg
idiv
jge
push
and
adc
out
push
daa
loopne
push
fldenv
int
xchg
push
stos
inc
mov
adc
mov
pop
push
adc
mov
mov
sub
or
xor
cmpsl
or
push
jle
mov
rorb
push
rcll
push
or
xor
cmpsl
fwait
inc
popf
mov
push
xchg
es
pusha
cmpsb
insb
add
add
out
jo
cmpsl
pushl
movsb
mov
movsb
adc
inc
jae
cli
gs
add
aam
add
leave
fsts
mov
adc
ds
jnp,pn
sub
fimuls
inc
test
or
jb
ret
push
inc
cmpsl
popf
sbb
sbb
scas
xchg
stos
mov
notl
popa
mov
add
cmp
roll
shlb
test
incl
pop
cmp
sarl
test
bound
aad
movb
sbb
mov
pushf
inc
lret
lods
sbb
jge
in
xchg
sbb
mov
xchg
and
mov
adc
aam
cli
jge
ret
sahf
ficoml
lods
add
xor
cmpsl
popf
cli
sbb
mov
cmpsl
mov
xor
mov
push
xor
mov
adc
pop
inc
out
and
sti
enter
and
lea
fcmovu
add
add
cmp
cld
pop
jle
imul
inc
pop
xchg
out
jp
clc
push
mov
aam
js
insl
push
mov
aas
test
lret
push
xchg
fdivl
sbb
sbbl
sbb
and
sub
repz
pop
nop
cmp
cli
xor
sbb
data16
sti
jmp
out
lea
lahf
imul
add
xchg
push
sahf
rcrl
loop
xchg
jo
dec
aas
push
cli
push
sti
push
jmp
mov
mov
repz
sahf
mov
push
sub
fisubl
lret
es
mov
push
shrl
mov
mov
hlt
ljmp
add
mov
sub
dec
pop
mov
fstl
sbb
jb
and
xor
stos
inc
xchg
pusha
scas
in
push
lahf
lret
mov
xchg
fs
rcll
dec
and
mov
aad
mov
or
xchg
dec
push
cmpsb
in
mov
adc
pop
sti
sbb
cld
repnz
ljmp
loopne
and
lret
pop
mov
add
dec
imul
or
fstpt
jecxz
ror
sub
mov
cmp
in
pop
add
add
cmp
sub
nop
or
adc
sub
xchg
subb
lret
inc
mov
test
movsb
jl
add
cmpsl
mov
dec
fldt
js
test
mov
out
or
clc
push
test
int
mov
sti
pushf
dec
or
xchg
mov
pop
push
lret
mov
mov
repnz
shrl
jnp
aaa
sbb
pop
xlat
xchg
cmpsb
sbb
fiaddl
lods
xor
stos
in
cwtl
loop
mov
xchg
pop
xor
subb
mov
dec
shl
mov
push
inc
dec
mov
adc
lahf
jb
push
repz
es
addr16
mov
push
push
iret
jae
popf
dec
imul
xchg
cwtl
jo
insl
outsb
or
inc
or
adc
sbb
std
xor
lret
push
inc
pop
xor
aad
or
ret
push
movsb
ret
int3
fwait
sti
mov
loope
fists
mov
icebp
int
mov
add
cmp
ds
jg
pop
leave
ljmp
dec
jp
fs
or
or
out
mov
loope
dec
sbb
call
or
inc
mov
lock
cmp
leave
mov
fsin
sbb
xor
push
and
mov
repz
pop
gs
cmp
scas
rcll
cmp
xor
dec
fwait
or
xchg
or
hlt
test
mov
gs
in
cltd
fsubl
xorl
pop
mov
pusha
adc
pop
pop
or
scas
arpl
outsl
cmpsb
iret
in
movsl
in
add
xor
jp
fwait
sub
mov
jns
scas
pop
call
cwtl
addb
fs
dec
pop
ficoms
mov
aaa
xor
push
mov
inc
mov
mov
add
mov
pop
sub
arpl
xchg
lret
out
dec
lahf
mov
lock
xor
or
das
push
push
mov
data16
jbe
xor
ret
in
cmp
pop
mov
mov
adc
jmp
je
rorb
and
mov
and
insl
dec
add
iret
and
or
sbb
push
sar
hlt
int
jecxz
ret
inc
andl
lock
mov
loop
aam
mov
dec
adc
push
mov
std
mov
push
lods
dec
ret
rorl
jnp
lea
push
adc
mov
lret
aam
inc
add
mov
int3
xchg
sub
xchg
test
mov
push
pop
mov
inc
pop
scas
cld
pop
ja
rcll
lds
pop
addl
lret
dec
xchg
xor
mov
jg
out
test
push
pop
repz
les
jg
xchg
lock
cmp
int
fldt
pop
cmpl
mov
dec
push
pop
orl
shrl
ss
jns
adc
mov
mov
xchg
das
rolb
xor
xor
in
clc
jns
pusha
and
dec
cmpsb
push
in
sub
or
rclb
pop
das
addb
cli
cs
adc
imul
dec
aam
adc
push
scas
ret
adc
arpl
lods
addr16
je
push
fwait
sub
inc
daa
jno
mov
pop
cmpsl
dec
aad
mov
pushf
cli
push
pusha
push
pop
and
xor
sti
xchg
xchg
mov
js
cmpsb
repz
cmp
imul
push
in
pop
mov
stc
pop
dec
cmc
jmp
jl
scas
fwait
xchg
test
lcall
enter
rolb
sub
push
xchg
pop
jl
and
sub
stc
enter
mov
inc
out
and
test
imul
push
mov
mov
and
cmp
add
mov
repz
mov
pop
es
scas
fs
mov
cli
push
shrb
pop
mov
aad
in
aas
orl
xchg
lea
fs
iret
js
fsubrp
repz
es
and
ljmp
and
fisubs
hlt
jg
ficomps
mov
ret
cli
out
adc
insb
outsl
js
adc
cmpsb
fwait
adc
fnstcw
loop
cmc
loope
in
loopne
and
lea
mov
sub
mov
ja
sbb
lods
and
cmpb
jg
or
mov
arpl
pop
outsl
sbb
push
js
jns
cli
sub
cmpl
clc
cltd
dec
ds
mov
push
enter
mov
std
and
add
cmp
xchg
fsubrl
lods
dec
jb
bound
inc
push
or
ja
rolb
add
out
dec
outsl
movsl
mov
jae
cltd
loop
stos
jb
ret
in
imul
mov
dec
sub
lcall
add
icebp
and
add
rolb
mov
lds
ret
inc
lcall
push
scas
jno
sbb
push
push
xchg
loope
adc
mov
call
and
inc
dec
sub
lods
and
ret
mov
pop
cmp
dec
xchg
jge
xor
and
inc
jg
and
fcoml
xor
or
inc
sar
loopew
or
sbb
outsl
push
pop
pop
ljmp
mov
jl
jl
adc
push
push
sbb
mulb
sbb
cmc
push
cli
aad
dec
dec
push
ret
out
push
fcom
add
shrl
inc
xor
adc
mov
adc
jnp
mov
jbe
fisubl
cli
xor
les
pop
pusha
cwtl
out
sub
jl
dec
lods
adc
mov
lahf
frstor
mov
test
lcall
push
adc
cmpsb
cmp
in
pop
stos
cmp
push
sbb
sti
imul
movsl
sub
dec
xchg
aaa
dec
stc
imul
push
add
sub
xchg
lcall
mov
adc
pusha
mov
xlat
pop
ja
mov
sbb
stc
mov
out
test
jne
sti
jae
outsb
push
cmc
aad
test
enter
mov
repz
test
push
add
sub
add
scas
mov
mov
mov
aam
neg
inc
cmc
mov
mov
into
pop
mov
aam
sub
mov
dec
aam
mov
rcll
repnz
jecxz
jns
inc
lret
cmp
fs
loope
jnp
push
xor
outsb
rcll
add
outsb
bound
sub
insl
popf
xchg
pop
and
rorb
movsl
lea
stos
js
movsb
shrb
mov
ss
hlt
not
test
das
bound
dec
ds
jp
rclb
inc
adc
fdivr
or
lds
je
dec
xor
insb
push
scas
jle
icebp
stos
popa
ja
gs
jnp
push
stc
dec
cmpl
nop
lods
sahf
push
negb
adc
ret
movsl
das
bound
mov
fildl
sahf
lahf
mov
or
addr16
dec
dec
xchg
paddsw
arpl
mov
xchg
sbb
xor
inc
or
mov
icebp
mov
loope
dec
add
pop
sbb
out
lcall
mov
cmp
add
es
hlt
pushf
fdivs
cmc
adc
adc
or
out
inc
addr16
cmp
mov
add
pop
loope
pop
mov
jns
aaa
jmp
clc
xchg
cmp
test
push
mov
vpslld
push
sbb
fcompl
fildll
rorb
pusha
push
scas
data16
aad
test
fildll
adc
pop
loop
out
hlt
xor
clc
mov
cs
jmp
ret
shlb
push
jo
ss
fs
call
mov
stos
and
in
mov
aaa
lcall
in
dec
pop
jge
xor
pop
and
pop
xchg
in
fiadds
ret
hlt
dec
cli
out
mov
xor
out
dec
dec
roll
mov
push
lods
std
lods
sub
data16
outsl
lds
loopne
rclb
das
sbb
and
jbe
push
inc
pop
test
in
pushf
pop
lcall
xor
hlt
repnz
sub
mov
popf
sub
fstpt
sbb
jge
xchg
sbb
mov
xchg
inc
mov
popa
push
mov
repz
out
xlat
icebp
sbb
mov
add
and
aaa
in
push
mov
lds
or
adc
pavgw
mov
or
iret
mov
shl
call
sub
xchg
fwait
data16
push
cld
adc
inc
ret
imul
xor
sbbl
scas
ret
add
and
sub
jecxz
lea
mov
addr16
addb
lds
daa
outsl
jb
inc
adc
sahf
fwait
sbb
andl
in
and
and
in
or
movsl
inc
mov
jne
sub
bound
sub
add
pop
adc
xchg
rorb
inc
cmpsl
sbb
dec
dec
sub
jo
jecxz
and
sbb
popa
stos
clc
movsl
sub
xchg
lcall
inc
fwait
lcall
mov
push
stc
dec
cmp
rcl
daa
outsl
xor
cld
add
cmpsl
push
loop
fwait
bound
test
addl
xor
dec
int3
popa
shll
mov
mov
in
or
stos
ret
mov
pop
jmp
push
mov
mov
jmp
les
incl
xchg
and
and
icebp
mov
jb
test
and
sub
and
pop
push
out
in
lea
sbb
jg
mov
cli
popa
pushf
or
scas
rcrl
mov
push
cmp
push
mov
fs
pop
mov
mov
pop
outsb
and
sarb
add
xor
or
in
addr16
jne
inc
pusha
add
cmp
cli
pop
mov
jbe
dec
ret
movsl
mov
stos
fimuls
loope
jmp
xor
cmp
push
jne
enter
xchg
lea
mov
sbb
imul
fimuls
jp
sarl
jmp
and
jle
mov
stc
dec
les
rcll
lahf
cmpsb
out
pop
sbb
dec
test
xor
pop
dec
lret
mov
or
repnz
cs
in
push
out
mov
jmp
sbb
push
lret
mov
rcrl
or
fldcw
xchg
mov
fs
scas
cmp
xor
cmp
jne
xchg
adcl
shlb
loop
push
and
sbb
pop
xchg
xchg
xor
jl
popf
jp
inc
add
adc
in
push
xor
in
mov
or
mov
add
or
rorb
mov
jl
mov
lahf
and
lods
pop
mov
mov
mov
inc
add
fs
in
dec
xchg
adc
dec
adc
push
mov
mov
addr16
pop
jo
test
pop
or
inc
hlt
test
cmp
dec
out
pushf
lock
pusha
add
jg
cmp
xchg
cli
jbe
mov
movl
jnp
dec
xlat
icebp
insb
sbb
jo
shll
mov
jecxz
sub
xchg
xchg
imul
cmp
int3
inc
movsb
cmp
dec
xchg
mov
push
lock
mov
push
xchg
pusha
xor
bnd
xor
inc
cmc
adc
in
push
mov
xor
mov
test
mov
push
pop
mov
xchg
daa
or
icebp
bound
lret
repnz
sbb
movl
shlb
mov
imul
xchg
mov
push
jb
leave
and
in
loop
mov
in
outsl
imul
pop
call
pushf
test
sub
arpl
fnsave
push
adc
mov
lahf
or
shll
mov
jns
ds
push
push
sub
jge
push
jae
xchg
ret
dec
mov
popf
cmpsl
lods
clc
push
adc
and
shlb
sbb
sbb
mov
pusha
xchg
rolb
outsl
pop
push
mov
mov
flds
call
rcrb
mov
call
or
or
das
mov
lods
mov
movsl
lret
push
and
cmp
pop
popf
dec
lahf
mov
cmp
mov
inc
dec
adc
push
push
pop
icebp
fldt
pushf
xor
push
dec
cmpsb
pop
sbb
mov
pop
ret
xchg
setns
gs
jnp
sbb
sub
not
ss
xchg
and
fst
push
jno
jmp
ja
or
mov
mov
psubd
push
jecxz
mov
cmpsb
cmp
and
lock
and
lret
push
sarl
pop
popf
in
push
pop
cmp
ds
mov
push
daa
out
lods
jecxz
addr16
xorl
jp
pop
ljmp
jmp
fwait
push
fwait
sub
jecxz
rorl
xlat
mov
inc
jnp
lods
push
popa
cld
ja
inc
loop
inc
push
pushf
and
push
xchg
cmp
pop
jp
dec
adc
cmpl
pushf
bound
cmp
push
ds
mov
ret
xchg
push
leave
pop
daa
lret
jns
out
cmpsl
scas
sub
cmp
adc
into
in
mov
sahf
xor
jnp
into
jbe
into
stc
sti
outsb
mov
mov
into
pusha
sbb
and
push
push
in
dec
mov
shlb
mov
fsubrl
mov
mov
cmpsb
adc
push
enter
adc
dec
xor
push
mov
ja
jne
imul
ret
lcall
xlat
fldt
test
inc
jne
inc
lcall
mov
mov
jb
sahf
std
enter
movsl
insl
sbbb
hlt
jl
xlat
adc
and
jl
add
dec
jno
das
lods
sub
fdivr
and
repnz
cli
popf
and
jp
dec
arpl
lock
sahf
mov
inc
pop
outsb
stos
mov
cmp
fwait
dec
add
das
mov
pop
leave
and
jp
lcall
xchg
sub
rorb
push
and
jge
cmp
orl
mov
jnp
mov
adc
lcall
mov
xor
xchg
push
sub
aas
mov
shlb
sahf
les
push
adc
pop
sti
ret
push
int
mov
cmp
lods
mov
push
inc
iret
jo
mov
imul
into
fisttpll
and
push
push
in
mov
cmc
imul
and
dec
push
jb
adc
fstpt
jo
hlt
jno
mov
or
pop
popf
adc
jns
jle,pt
sbb
cmpl
mov
fisttpl
inc
jbe
loop
sbb
jle
xor
rol
add
das
add
jp
rolb
inc
xchg
mov
adc
jae
repz
rorb
dec
ja
push
cmp
shrb
jae
ss
jmp
fists
sub
mov
pop
enter
inc
outsl
mov
dec
shrl
jge
cmp
xor
mov
lcall
push
adc
mov
sub
sbb
ss
adc
aas
imul
cli
dec
mov
push
inc
andl
push
cmp
gs
pop
or
loope
scas
shrl
jl
fsubrl
push
xchg
fiadds
jb
inc
shl
jb
std
out
pop
mov
sub
dec
push
std
jmp
cld
addb
cld
add
and
rcl
push
mov
or
and
mov
adc
lds
mov
popa
and
lahf
test
mov
xlat
test
adc
adc
push
mov
fwait
push
adc
inc
push
push
icebp
xor
insl
add
sbb
pop
scas
sub
sahf
dec
jmp
inc
xchg
cmpsl
pop
dec
and
ret
mov
mov
xor
fisubrl
xchg
pop
cmpb
repnz
out
and
mov
sub
mov
outsb
pop
enter
jp
mov
sbbb
lahf
mov
out
mov
call
mov
adc
push
lahf
cltd
xchg
aaa
cmp
test
mov
dec
repz
out
imul
and
jge
and
mov
data16
pop
jg
out
xor
mov
sahf
mov
jle
icebp
push
jb
in
push
ret
xchg
push
gs
xlat
clc
mov
mov
dec
sub
pop
lock
cli
xchg
or
jae
inc
cmpsb
cmpsl
push
icebp
lds
push
lcall
into
add
jg
shlb
inc
push
addr16
jno
in
cltd
pop
and
jp
rdpmc
jbe
push
mov
jbe
sub
or
arpl
adc
inc
mov
pop
mov
inc
mov
nop
pusha
add
iret
xlat
in
sarl
or
enter
mov
and
insb
sbb
sbb
inc
ss
inc
or
out
add
and
outsb
ljmp
cmp
jne
outsb
push
cmp
xchg
ret
ror
mov
sbb
mov
mov
rorb
adc
fs
sub
fistpll
cmp
arpl
mov
aam
mov
xor
sti
pop
sarl
jecxz
mov
jp
push
sarl
dec
lods
mov
ficoms
push
mov
inc
sub
mov
pop
addr16
sub
push
or
xchg
inc
test
cmc
cmp
sub
lret
ja
mov
push
pop
sahf
mov
les
and
js
inc
xchg
add
xchg
mov
xor
shll
mov
addl
std
or
mov
ja
jae
inc
add
inc
mov
xor
fldl
adc
repnz
pop
in
cmp
or
mov
xchg
add
icebp
out
xchg
imul
and
xchg
enter
popa
test
popa
dec
push
add
dec
aaa
and
mov
notb
sub
or
andl
movsb
sub
or
mov
and
mov
aad
fdivrs
pop
das
pushf
pop
in
mov
xchg
lret
loope
xor
repnz
mov
push
rcrl
dec
daa
js
lea
cmpsb
pop
xor
dec
scas
movsb
push
leave
add
push
inc
iret
test
movsl
cmp
xor
push
dec
jb
insb
mov
jo
add
or
sub
std
movsb
inc
lcall
fadds
or
out
mov
mov
sub
mov
mov
shll
sub
xor
dec
nop
fmuls
sbb
lods
cwtl
jno
cmp
je
mov
scas
push
inc
int3
stos
in
jne
addl
jmp
push
rcrl
xchg
and
fsubr
stos
aas
aam
sub
or
or
add
mov
sub
popf
or
sub
enter
mov
dec
mov
es
fstl
dec
addl
ret
es
pop
mov
inc
loop
adc
aas
jp
cmp
cmpsb
popf
cmpl
fwait
lds
jge
jle
or
add
add
push
or
gs
loope
add
sbb
daa
aaa
fdivl
dec
push
mov
lret
iret
dec
cwtl
mov
roll
stos
movsl
cmp
dec
repnz
add
arpl
push
mov
out
push
push
int3
test
add
cld
dec
sbb
push
adc
adc
arpl
mov
shrl
adc
mov
lret
mov
add
add
adc
movb
out
inc
mov
and
popf
imul
subl
ds
inc
arpl
sbb
and
inc
mov
jle
jecxz
out
pusha
mov
push
inc
std
fsubl
mov
cs
and
fistl
xchg
test
xchg
in
xchg
and
push
or
loope
mov
cli
gs
jg
int3
test
xor
inc
xor
xchg
das
fiadds
mov
add
push
in
and
movsb
stc
pop
jno
mov
jbe
pop
add
push
sbb
mov
sbb
leave
enter
push
xchg
inc
andb
mov
or
inc
pop
mov
in
ss
pop
add
mov
les
mov
mov
fidivs
stos
dec
idivl
aaa
sub
insl
cltd
xlat
insl
push
cmpsl
pop
add
jbe
imul
sub
aaa
xor
stos
lea
jg
and
in
push
in
push
roll
cltd
mov
inc
lcall
daa
inc
js
incb
mov
cmp
push
fstpt
jmp
sub
push
enter
xor
adc
sbb
std
loop
mov
mov
scas
shl
adc
and
pop
imul
repz
mov
rcl
jno
aad
aam
mov
pushf
inc
adc
jns
out
mov
lahf
pop
fs
in
cs
cmp
xlat
mov
xor
mov
mul
xchg
lock
les
lret
mov
out
shrl
imul
fmull
clc
clc
adc
dec
aas
add
je
or
js
icebp
insl
lock
fstpl
add
xchg
pushf
ret
sub
je
lds
scas
or
push
adc
mov
mov
dec
xchg
cltd
sub
call
roll
fstpl
sub
push
sub
cli
int3
int
into
push
iret
pop
and
sbb
adcb
push
mov
dec
xlat
js
push
dec
ret
insl
push
add
sarl
fwait
or
fisubrl
sub
mov
iret
lods
sbb
mov
scas
mov
loopne
xchg
ror
mov
cmp
pop
call
mov
stc
or
add
nop
ljmp
jae
lahf
mov
sub
or
test
cli
shlb
test
scas
sub
mov
movsl
inc
hlt
adc
dec
jnp
jp
jmp
lods
xchg
jns
pop
xor
jle
testb
nop
jle
jmp
jp
jmp
loopne
adc
cmp
mov
jo
js
mov
mov
add
in
dec
in
add
inc
mov
shrb
inc
ficomps
mov
cmp
adc
mov
xor
mov
jno
mov
aas
xchg
inc
mov
cld
insb
fwait
pop
outsb
daa
std
cmp
or
fldl
mov
idivl
adc
out
int
negl
jae
lds
js
outsl
ds
cwtl
xchg
js
or
mov
test
negl
mov
push
out
insl
popf
pushf
xchg
out
roll
mov
xor
and
sub
or
mov
int3
insl
jecxz
push
xchg
int3
cmc
mov
movsb
sti
cmp
jp
inc
cli
push
pop
and
subb
inc
out
mov
fbld
push
mov
std
pop
imul
xor
dec
das
xchg
adc
iret
sub
popa
inc
cld
pushf
ror
imul
insl
adc
mov
xchg
cwtl
mov
arpl
and
jo
test
xchg
xlat
inc
jl
lods
or
int3
inc
sub
sbb
or
das
scas
out
cmp
lret
cmp
cmp
lock
test
cmpsb
imull
scas
repz
int
cmp
sbb
mov
xchg
mov
rcrb
mov
push
ret
movl
cmp
mov
xlat
int3
ds
fcomi
fstp
js
mov
xchg
scas
movsl
loopne
push
push
or
xlat
dec
dec
inc
add
jmp
push
cmp
inc
adc
stos
stos
pusha
inc
adc
sahf
sbb
iret
add
pop
leave
fcom
test
pop
mov
inc
sbb
lods
aam
xchg
xchg
movsl
fstps
mov
or
sub
jl
and
and
push
lock
add
inc
insb
cltd
rolb
jnp
pop
rorl
cmp
cld
repnz
and
adc
mov
lret
pop
fldenv
scas
cmpsl
jne
repnz
mov
xchg
subl
dec
scas
sub
divb
out
mov
mov
dec
mov
fwait
sub
xor
aaa
dec
inc
out
adcl
jl
cwtl
test
mov
mov
mov
or
adc
cmpsb
das
ret
push
outsb
or
stos
sbbb
lret
sti
pop
xor
inc
xchg
adcl
cmpsl
xor
dec
es
enter
lret
aas
add
sbb
pop
push
inc
dec
into
dec
xchg
jl
fidivrl
xchg
fs
and
cmp
pop
pop
sbb
mov
or
fldcw
fsubrs
addr16
xor
push
adc
sbb
xor
sub
adc
clc
popaw
cmp
xlat
movsl
push
jg
push
cmpsl
jp
push
insb
adc
cmp
ret
jmp
es
scas
xchg
mov
aaa
xorb
loopne
insl
mov
in
adc
out
cmpsl
mov
ljmp
sbb
jne
inc
dec
mov
fwait
xor
mov
mov
inc
adc
int
stos
mov
pop
xchg
push
ss
push
lret
rcrl
mov
hlt
xchg
add
lods
sub
addr16
push
aad
add
repnz
lea
jle
adc
cld
out
je
xchg
out
mov
push
outsb
js
cmc
lods
pusha
cltd
adc
in
cmp
enter
ds
or
int
xor
dec
cmpsl
pop
mov
daa
xchg
out
jl
movsb
rorb
jmp
mov
jmp
adc
les
movsb
mov
js
paddd
sbb
mov
inc
adc
or
mov
add
inc
xor
xor
xchg
lock
out
push
es
mov
jno
push
jo
jo
pop
pop
adc
and
pop
xchg
xchg
test
cmp
enter
push
popf
dec
clc
pop
pop
enter
inc
jbe
pop
mov
ret
cmpsl
nop
data16
cmp
inc
sbb
jo
cmp
mov
stos
ja
inc
sub
call
adc
leave
push
xor
mul
lahf
fnstenv
enter
mov
push
pusha
adc
pop
mov
iret
enter
outsl
aaa
testb
mov
xlat
xor
ret
leave
cmpsl
cmp
sbb
stos
shrl
push
mov
mov
mov
adc
push
pusha
int
jns
xchg
mov
xor
les
xor
mov
imul
cmp
cmpb
cmp
int3
fnstsw
cltd
inc
mov
hlt
pop
adc
mov
cmp
xchg
dec
pushf
and
push
sbb
inc
sti
inc
sub
sbbl
loop
daa
in
fcoms
or
and
pop
shll
lret
push
ret
scas
into
stc
jecxz
sbb
js
int3
mov
das
stos
loop
mov
cltd
fnstsw
bound
jb
ds
mov
push
pusha
pop
lcall
and
ljmp
addr16
xchg
adc
dec
pop
sbb
sbb
xor
pushf
int3
mov
mov
inc
imul
jbe
in
or
out
ret
ffree
inc
in
lods
jl
sbb
jne
sbb
xor
jo
shlb
inc
xchg
cs
mov
scas
inc
repnz
mov
out
cmp
inc
dec
xchg
loopne
in
inc
jle
mov
inc
mov
stos
iret
loope
sarb
ja
arpl
imul
rorl
test
mov
dec
into
sub
pop
enter
xor
jnp
adc
out
push
cli
and
sbbl
xor
adc
leave
loopne
or
xor
push
pop
divb
pop
mov
in
add
jmp
cmp
mov
cmp
pop
lock
mov
mov
mov
mov
arpl
iret
insl
mov
jp
fwait
push
inc
imul
push
mov
mov
or
shll
pushf
shr
ret
clc
push
cmp
mov
aas
shlb
js,pt
mov
enter
or
mov
sbb
test
aam
fldcw
cmp
xlat
mov
scas
dec
push
mov
imul
rcr
stos
pop
pop
xchg
scas
jmp
sub
outsb
sub
jns
push
inc
push
movsb
shlb
xchg
xchg
jecxz
cmp
in
inc
xchg
daa
das
jmp
pop
and
jl
aad
push
hlt
jg
adc
mov
sbb
arpl
in
mov
pop
push
adc
popf
dec
je
xchg
push
sub
sub
lods
mov
aaa
mov
push
jb
sub
or
negb
std
fcmovnbe
gs
shl
shll
cmpsl
cmpsb
repz
fstpl
out
pop
or
pop
jge
dec
dec
outsb
fsubp
lret
pop
add
xchg
out
scas
jo
sbb
lods
aad
cmp
ja
push
cwtl
mov
mov
pop
xchg
lods
adc
insl
mov
xchg
shll
push
jge
cwtl
in
stos
cmpb
push
xchg
jmp
movsb
cltd
push
clc
lcall
loope
loopne
lods
imul
mov
imul
push
jmp
dec
fimull
cmp
in
dec
inc
mov
hlt
in
pushf
add
loopne
mov
sub
cmpsl
pop
or
jg
in
mov
pop
mov
sarb
jne
or
shrb
add
pop
xchg
aam
jns
insl
mov
sub
and
mov
fcoms
pop
lock
jmp
mov
sbb
add
stc
not
jle
rcr
in
jle
and
gs
jg
jo
dec
popa
stos
mov
pop
mov
inc
and
and
outsl
mov
idivl
dec
cmpb
and
or
pop
mov
sti
adc
aam
cli
add
jmp
push
addr16
fdivrl
xor
jmp
cmc
xlat
lds
movsb
subb
lds
pop
clc
sbbl
out
lds
mov
mov
das
xor
mov
and
sbb
loop
lods
out
movl
cltd
test
int
dec
push
mov
sbb
mov
push
sub
push
leave
cwtl
adc
pop
aaa
insl
je
sub
jnp
and
stos
faddl
mov
add
and
sub
push
test
js
cs
inc
lea
inc
jp
or
popa
in
ficoms
fmulp
xchg
enter
lds
cmpsb
roll
add
xchg
sahf
mov
mov
mov
pop
aaa
mov
push
loopne
jmp
inc
and
xlat
in
std
outsb
pop
cmp
mov
push
out
mul
pop
jg
subb
mov
jle
fs
and
and
cmp
push
lods
cmpsb
cltd
add
mov
stc
cld
sub
scas
jbe
adc
in
push
popf
sbb
or
mov
add
inc
mov
sbb
fisubrl
cmpsb
roll
test
sbb
and
pop
sbb
aam
sbb
jp
mov
lods
sub
inc
lahf
ljmp
sub
mov
mov
shrb
inc
add
xlat
ret
imul
jb
cmc
imul
or
fldl
mov
pop
js
clc
jb
daa
pop
imul
adc
xchg
xchg
and
jmp
pop
enter
mov
sti
xchg
movsb
adcl
mov
mov
jecxz
adc
add
add
push
popa
lret
sub
or
xor
lock
inc
stc
pop
lods
fs
fucomip
push
xchg
out
dec
jg
inc
sub
loopne
popf
push
xchg
jl
push
aas
push
cmp
lea
adc
std
insl
mov
sub
pop
ret
insb
pop
pushf
popf
cmp
adc
adc
push
xor
loop
and
hlt
scas
push
push
mov
adc
movsl
jb
cmp
cld
xor
fsts
mov
push
cmp
push
mov
mov
sub
push
mov
jnp
insl
in
popa
jae
stos
bound
lods
stc
mov
ror
cwtl
dec
int3
pop
mov
pop
addb
xor
adc
lods
mov
xlat
je
mov
lds
lea
pop
mov
lahf
jmp
cli
inc
mov
mov
scas
inc
aaa
sarl
hlt
jb
jno
shll
mov
enter
push
arpl
out
sbb
jmp
imull
adc
daa
inc
push
clc
mov
call
add
add
popf
push
adc
fcmove
or
addr16
aaa
inc
dec
in
xlat
addl
pop
sbb
jno
dec
pop
lods
rcrb
pop
inc
repz
add
mov
das
add
and
sbb
mov
jecxz
outsb
insb
fs
mov
mov
sbbl
mov
js
or
inc
jnp
mov
dec
insl
dec
mov
repz
dec
xor
repnz
into
test
push
pop
push
out
fnsave
pop
call
xchg
data16
cmp
mov
fs
in
xchg
xor
mov
cmp
hlt
lds
loopne
lds
mov
movsl
dec
mov
scas
xchg
mov
aaa
aam
mov
pop
icebp
cmp
add
incl
jbe
jecxz
out
xor
pushf
ds
push
cmpb
test
ret
push
mov
out
popf
xor
rorb
cwtl
test
roll
imul
les
fmuls
xchg
mov
fs
sub
sbb
add
dec
stos
mov
jb
arpl
out
xchg
and
sub
mov
into
in
xchg
outsb
adc
pop
mov
or
es
cmpsl
popa
jae
mov
push
and
sbb
stos
cmpsb
scas
sbb
fwait
push
fwait
and
lods
jge
xor
jbe
push
pop
loope
mov
pop
push
repnz
leave
imul
divl
jae
xchg
scas
inc
pop
xchg
push
sbbl
mov
shlb
mov
adc
xchg
xchg
jle
pop
dec
movb
fsts
sub
lahf
push
bound
cli
xor
sti
sti
push
lret
hlt
stos
cli
sbb
jg
add
inc
adcb
leave
and
push
movd
movsb
aaa
mov
outsl
iret
movsb
jmp
int3
xchg
cmc
cmpl
mov
aad
mov
icebp
add
mov
lret
lock
push
jb
popf
push
ret
dec
lret
xorl
pop
mov
mov
sub
inc
jne
mov
push
or
inc
and
sbb
clc
pop
shlb
outsl
lods
cmp
or
in
cmpsl
out
inc
faddl
jb
push
mov
pop
scas
sub
cmpsb
ja
adc
sbb
imul
mov
jle
add
or
cmpsb
cmpsb
icebp
sbbl
xchg
scas
pop
dec
ret
mov
ds
inc
pop
cmp
sarl
sub
fisttpll
add
xor
add
int
xor
xchg
mov
push
sbb
mov
xchg
lds
sahf
jl
jbe
mov
dec
adc
loopne
pop
pop
dec
mov
mov
push
sub
lods
sub
cwtl
xor
cmc
dec
clc
out
sub
mov
cmpb
add
adcl
add
enter
sahf
adc
mov
push
pop
int3
or
inc
mov
cmpsl
xor
inc
and
test
adc
ljmp
call
aam
and
into
test
mov
movsl
jge
nop
add
pop
repnz
push
and
cli
in
push
shlb
mov
pop
pushf
in
mov
mov
jbe
push
mov
jl
dec
mov
shll
jne
mov
jno
call
jp
inc
mov
mov
dec
insb
or
cmp
add
pop
fcmove
adc
movl
loope
cmp
inc
add
mov
pop
inc
dec
imulb
sahf
lea
xor
xor
cmc
int
ss
dec
push
xor
cmc
lock
jl
fwait
sub
or
push
in
jmp
cmp
insl
pop
pop
mov
out
cmpsb
adc
push
push
outsb
push
push
xchg
in
or
dec
xchg
ja
jp
loop
cmc
push
sti
lock
sbb
ds
in
xchg
xor
push
fdivrl
insb
mov
jo
add
and
push
inc
repnz
rep
xchg
mov
xchg
addr16
outsb
add
inc
pop
out
bound
jg
movsb
xchg
mov
call
lret
bound
or
outsl
jmp
lret
mov
xchg
ja
decb
xor
int3
pshufw
rorl
clc
dec
xchg
xchg
leave
xchg
fstpl
fists
call
xchg
imul
cmpsl
sub
jno
push
iret
mov
dec
jecxz
xor
aas
hlt
pmullw
ss
mov
or
cmp
scas
lea
ja
out
in
adc
int3
dec
jmp
and
dec
add
test
lock
addb
xchg
sbb
sub
test
jo
mov
aam
lock
mov
push
push
pop
push
or
dec
shll
cmpsb
and
or
scas
loope
enter
push
in
xchg
sub
stc
add
jbe
call
mov
dec
fildl
sbb
in
imul
into
ret
mov
mov
cltd
das
test
pop
and
jg
or
inc
xchg
js
inc
int
sub
push
mov
mov
mov
jno
add
mov
pop
rorb
int
lds
xchg
outsl
mov
cmp
dec
push
adc
int3
in
add
rcr
pop
dec
pusha
add
jb
cli
je
ljmp
insb
push
push
pop
pop
dec
pop
cmc
in
sub
iret
dec
lods
mov
negw
mov
fwait
jmp
xchg
inc
pop
and
rcll
in
ret
std
xor
push
add
xor
sarb
into
sub
push
xchg
test
push
push
pop
leave
pushf
mov
ret
ds
xor
addb
xchg
or
adc
mov
and
idivl
lods
ret
adc
sub
push
ds
daa
xchg
mov
mov
mull
xchg
cmp
and
rcrb
sbb
push
mov
add
xor
fisttpll
jno
and
pop
xchg
sub
cmc
bound
ud1
call
push
xor
and
negb
pusha
jge
mov
test
jne
adc
lock
mov
push
lret
xchg
mov
cmpsb
cmp
pop
leave
mov
mov
rcrl
add
xchg
pop
stc
es
and
stos
loop
pop
mov
pusha
inc
inc
out
divl
fcomps
inc
insl
pop
les
jne
fdiv
pushf
arpl
jno
enter
push
dec
mov
add
adc
cmp
in
pop
aas
stc
outsl
insl
jge
push
mov
sub
pushf
mov
and
test
adc
cmc
jmp
sbb
mov
enter
xchg
push
insl
fldenv
mov
xchg
shlb
sbb
cmp
mov
pop
push
rorl
push
sub
in
mov
rcrb
sub
sbb
sub
pop
ret
add
mov
pop
mov
lcall
mov
push
shlb
sub
pop
outsb
bnd
mov
fcompl
jp
and
push
inc
out
xchg
insl
xchg
pusha
mov
mov
or
stc
inc
lea
sbb
jmp
pop
and
jae
sbb
aad
aad
jae
cmpsb
jne
scas
pushf
mov
outsl
sbb
mov
sub
sub
push
sub
xchg
mov
xchg
mov
or
sub
mov
repz
push
scas
cmc
mov
out
dec
iret
push
inc
loop
jb
xchg
cmp
fs
xchg
push
adc
test
cmp
cs
ret
xchg
and
xor
lcall
rorl
stos
inc
pop
gs
scas
fwait
xchg
faddp
dec
rcrb
push
sub
push
inc
dec
xor
jo
pop
xor
iret
mov
or
test
adc
es
daa
leave
inc
xchg
adc
add
mov
xor
xchg
add
stc
sub
ds
adc
in
lods
mov
es
aaa
stc
xor
pop
int3
insl
push
cwtl
xor
cwtl
lock
fistpll
pop
jmp
rorl
pop
mov
out
sub
push
pushw
xor
loop
and
jmp
mov
decb
jge
outsl
xchg
mov
jecxz
sub
ja
inc
and
idivl
push
and
insb
lock
mul
popa
push
inc
lea
aam
adc
push
cmp
sbb
push
push
push
pop
mov
scas
xor
int3
push
movsl
incl
insl
adc
xchg
mov
dec
and
xchg
shr
data16
mov
out
push
stos
add
dec
iret
test
jecxz
je
xor
sbb
xchg
sbb
add
cmp
jle
push
mov
mov
dec
mov
nop
mov
xchg
add
hlt
cmp
lods
inc
lock
sbb
addr16
into
jns
nop
in
mov
test
mov
lret
rcrl
add
cmpsl
mov
inc
mov
dec
xchg
test
ret
in
call
jge
or
jne
or
fnstsw
ret
jae
sub
mov
xchg
pop
pop
icebp
and
lcall
push
popf
testl
xor
aad
xor
rcll
addr16
push
aas
movswl
and
xor
insb
in
mov
stos
xor
sbb
or
ja
fmulp
push
mov
xchg
js
out
popf
mov
cmp
stos
fwait
push
scas
pop
out
nop
lods
cmc
std
jne
out
lea
stos
xchg
and
fwait
inc
xchg
pop
out
xor
mov
jnp
movsb
leave
or
pmullw
rol
cwtl
addr16
daa
icebp
lcall
popf
sub
or
jl
adc
shlb
mov
inc
sub
inc
xchg
dec
or
test
mov
test
dec
in
cmp
daa
cmp
aam
sbbb
jnp
cld
outsl
fwait
xchg
push
sbb
and
ret
pop
test
sub
xchg
push
sbb
test
ret
mov
int
mov
in
add
cld
sahf
pop
outsl
xor
sub
pop
mov
shrl
xor
idiv
iret
and
outsl
xchg
push
inc
add
addl
pop
mov
xor
dec
out
jb
sbb
xlat
roll
mulb
push
testb
sti
ja
rcr
mov
jb
cmp
pop
iret
lea
pushl
jbe
mov
push
or
push
adc
movsb
sbb
push
mov
inc
fnsave
aad
dec
std
cltd
and
gs
or
adc
in
ljmp
lock
push
aaa
enter
iret
ja
ret
mov
test
scas
cli
mov
mov
icebp
or
sbb
loope
arpl
dec
mov
or
fldenv
ret
inc
cmp
insl
xchg
push
and
dec
adc
push
shrb
pop
cmpsl
jmp
adc
xchg
nop
sub
ffree
jae
test
ljmp
stos
fbld
inc
aam
bound
mov
in
and
inc
xor
push
aaa
clc
pop
push
shll
outsl
xchg
cs
or
jmp
shr
inc
mov
fnsave
mov
and
sbb
add
lea
out
xor
jl
mov
or
inc
std
jno
popf
xor
sbb
push
jo
pushf
mov
std
xor
push
fidivl
aad
add
xchg
mov
fisubrs
fs
mov
movsl
inc
addl
sti
int3
add
dec
xchg
mov
mov
adc
sbb
and
mov
mov
add
mov
pop
insb
mov
divl
adc
stos
add
ds
mov
sub
andl
pop
insl
push
stc
pop
cmp
cli
imul
daa
lods
out
mov
pop
sarb
push
adc
sbb
jo
push
iret
test
push
sbb
mov
test
mov
cmp
sbb
fldcw
sub
or
xor
push
xor
jb
mov
xor
push
sub
mov
out
loopne
lods
inc
test
insl
adc
jl
mov
fbstp
xlat
inc
mov
je
xchg
xor
dec
in
xor
cmc
adc
je
test
xor
or
pop
or
dec
loop
sub
jle
add
fisubrl
jbe
lods
rcr
fcom
in
out
mov
aam
fsubl
mov
xchg
push
arpl
push
mov
lahf
mov
pop
mov
hlt
dec
movsb
aaa
xor
push
adc
push
push
lcall
movsl
inc
clc
gs
dec
movsl
mov
enter
cmp
test
fisttpl
mov
xchg
xchg
fdivrp
loopne
pop
lods
test
mov
pop
ja
or
sbb
shrb
loopne
mov
popa
shr
push
out
lods
add
add
pop
std
data16
mov
push
in
aas
push
rcrb
xchg
ret
ficoms
test
sub
test
ret
mulb
sbb
insb
mov
sub
adc
inc
push
push
push
stos
ljmp
orl
sbb
adc
and
fbstp
imul
push
rdmsr
ror
stos
es
dec
pushf
fldenv
fistps
push
mov
rorl
sub
pop
dec
gs
repnz
jnp
lea
jnp
ss
or
pop
clc
ljmp
cmp
dec
lret
ficoml
outsl
outsl
push
sti
rcl
xor
das
cmp
pop
inc
push
outsl
jae
in
jecxz
jno
mov
in
adc
gs
gs
lock
in
pusha
icebp
nop
cmp
jle
subl
out
hlt
insb
adc
loope
push
scas
pop
aad
push
and
push
pop
insl
jl
and
xor
push
cmpb
xor
mov
test
adc
test
push
xchg
xchg
dec
add
bound
and
rcl
or
lahf
mov
cmpsl
sahf
jp
nop
cld
lea
insl
or
repnz
inc
and
mov
cmpb
pop
pusha
popf
dec
cmp
skinit
xchg
push
inc
cmc
into
xchg
fistpl
mov
inc
cli
pop
in
cltd
or
add
insl
jns
movsb
or
dec
mov
mov
jge
jnp
adc
test
mov
mov
rclb
and
push
sbb
sub
xor
mov
jo
jecxz
sub
adc
and
push
ret
decl
cmp
xor
push
mov
fwait
push
xchg
addr16
and
shlb
in
outsl
mov
inc
inc
jmp
cwtl
and
cmp
out
jnp
cmc
xchg
outsb
repnz
cltd
shrb
int3
in
mov
sub
push
sbb
push
xchg
mov
push
je
mov
push
int3
mov
xor
adc
mov
clc
ret
imul
das
rorl
jecxz
xchg
mov
sarl
arpl
jo
lock
insl
jmp
imul
test
mov
sbb
xor
or
jne,pt
mov
js
fwait
rorl
cwtl
inc
scas
xchg
cmpb
outsb
sbb
inc
and
stc
or
sbb
aam
leave
jb
dec
jle
fisttps
jle
push
into
jmp
fsubrl
stos
or
int3
cli
inc
mov
adc
xor
cmp
lds
popa
cmp
cs
js
pushl
test
inc
add
clc
sub
out
repz
cmp
imul
imul
movsb
lahf
sarb
xchg
pushf
xchg
sbb
fisubl
lea
sub
sub
rcll
cmpsl
icebp
adc
cmp
in
dec
add
xorb
sbb
cltd
popa
push
adc
xor
or
jl
loop
dec
dec
adc
mov
adc
jmp
ret
ljmp
xor
enter
popf
or
out
sahf
add
inc
cltd
inc
stc
push
pop
movsl
sub
fnstsw
add
jl
jnp
test
cld
jns
pop
je
in
dec
mov
arpl
fcoms
lock
dec
cli
dec
mov
jo
jg
adc
mov
pop
sub
cmp
jno
mov
xchg
repz
out
jmp
faddl
adc
mov
out
lret
xchg
loop
xchg
lret
or
dec
dec
cmp
xchg
filds
movsb
cltd
rol
rcrb
fdivl
mov
sbb
jmp
dec
in
aam
adc
push
mov
or
ss
or
sahf
pusha
xor
addr16
popf
loope
cmp
push
push
into
jno
insb
mov
sbb
xchg
call
es
or
pop
movsb
test
pop
mov
or
pop
ror
mov
lahf
pop
fisttps
fwait
sub
pop
sub
jnp
clc
fucomp
stos
pop
in
push
pop
mov
enter
add
and
test
and
cmp
dec
test
push
scas
lcall
and
jae
and
ror
mov
push
test
dec
push
add
inc
inc
jp
dec
mov
fiaddl
sub
or
inc
enter
mov
add
cs
popa
lea
adc
jnp
mov
sahf
ss
fldl
mov
popa
fcmovne
mov
fs
int
dec
lods
pop
loopne
rcr
xchg
bound
dec
in
cmp
mov
lea
shlb
nop
and
add
leave
and
out
mov
test
xor
xor
and
inc
outsb
iret
scas
push
scas
sub
in
add
inc
decl
jns
jmp
dec
loope
orb
push
push
jno
ss
leave
dec
imul
xchg
cmp
push
out
shlb
mov
pop
stc
sbbl
mov
xor
pushf
cmpl
out
cmp
xchg
sub
out
sarb
imul
or
dec
cmp
jno
push
scas
out
mov
mov
sti
dec
xchg
aaa
mov
shrl
ja
jge
pop
jl
js
movsl
push
sbb
add
iret
jle
pushf
pop
stos
sub
sub
mov
inc
stc
xor
xlat
push
jge
adc
nop
fildll
add
or
and
test
dec
test
loopne
scas
or
enter
fmul
jg
test
pop
outsb
int3
add
les
cli
ret
addr16
cmc
mov
out
sbb
lods
xchg
and
inc
cmpsl
out
sbb
add
pop
imul
mov
divb
jle
sub
divps
sub
and
dec
orb
clc
das
cltd
sub
lahf
push
cmp
push
les
sbb
into
xor
cs
in
mov
stos
inc
cs
scas
adc
dec
rcrb
mov
stos
mov
xor
mov
xlat
outsl
add
jl
pop
xor
mov
pop
iret
mov
add
jmp
arpl
cwtl
pop
cmpsl
push
push
loopne
ja
sub
repz
fisttpl
cli
xor
jns
xchg
cltd
pop
repz
imul
mov
mov
cmpsl
stos
mov
mov
cmc
rcrb
jnp
aaa
cmc
in
jb
and
jae
cmp
adc
mov
loope
ret
mov
sub
fldenv
in
pop
push
scas
mov
mov
in
mov
fisttpll
jo
stos
mov
int3
mov
pop
insb
int3
call
sub
es
stos
lret
mov
fidivl
lods
xlat
bound
xchg
xor
inc
mov
and
sbb
mov
mov
js
in
push
jp
and
add
cld
fcomps
inc
dec
dec
mov
or
xchg
and
pusha
adc
cmpsb
or
lret
pop
dec
daa
call
jae,pn
cld
mov
cmpb
lret
push
cwtl
insl
pop
cli
int3
adc
clc
jo
cli
ja
js
add
mov
mov
idivl
mov
mov
mov
call
dec
iret
icebp
ja
adc
sub
xchg
lds
and
jno
push
nop
les
lahf
xlat
jge
xchg
pop
popf
sbb
mov
mov
sub
or
cmp
add
cld
into
daa
add
jg
or
movsb
je
adc
pushf
jmp
popf
lret
mov
sub
adc
sbb
mov
fldcw
jae
test
and
push
jbe
hlt
mov
in
popa
xchg
xchg
testl
dec
pop
lods
jg
mov
orl
aam
out
mov
repnz
mov
addr16
rolb
xor
adc
in
pop
loopne
cmp
hlt
jg
popa
jecxz
in
loop
dec
les
mov
jns
xorl
clc
xor
in
jbe
cld
push
ret
pop
adc
jmp
daa
push
xchg
mov
cmp
or
mov
fsubrs
cmpsb
sti
pop
jle
mov
in
scas
xor
mov
sbbl
xchg
mov
push
jns
insl
inc
out
sbb
lods
jecxz
popf
fcomi
xor
sub
idiv
std
imul
and
adcb
xchg
mov
pop
roll
lret
mov
pusha
insb
mov
lds
xor
inc
popa
sbb
andl
mov
daa
fdivs
test
stc
je
xor
out
or
xor
mov
or
loope
repnz
xor
dec
sub
push
mov
pop
jae
fidivl
xchg
popf
mov
jg
pusha
rcrl
fdivrp
arpl
dec
sahf
pop
cmp
mov
inc
pushf
xor
ss
insl
rcr
xchg
fsubl
push
push
adc
jb
ret
outsl
pop
repnz
and
inc
imul
dec
stc
pushf
push
fmul
mov
int
mov
vcvtss2sd
jl
mov
nop
movsb
dec
lret
stc
push
jmp
enter
add
push
mov
sti
push
cmpb
mov
cmp
pop
jp
jle
aad
xchg
scas
mov
dec
mov
ds
add
xor
rcl
aas
push
rcll
pop
xorl
and
push
pop
jp
repz
jmp
and
loop
push
call
arpl
push
inc
sbbb
dec
in
xor
jo
and
mov
out
es
je
inc
or
das
sub
mov
push
sub
mov
xchg
mov
dec
push
stos
in
xchg
test
or
or
mov
movsb
xor
adc
int
cmp
inc
push
cmpl
mov
or
push
push
push
mov
and
jl
dec
and
cltd
aad
negl
stos
out
ja
push
pop
and
xchg
xor
insl
addl
jg
mov
loop
cmpsb
clc
adc
fsts
sub
cltd
sub
and
push
inc
mov
in
xor
rcrl
insb
shll
out
icebp
repz
jne
push
sbb
fidivs
lahf
jge
cmp
mov
inc
mov
xchg
pop
mov
cmp
push
iret
xchg
add
icebp
push
insl
mov
sbb
jecxz
cmp
pusha
ret
pop
add
cmp
or
aaa
xchg
out
loopne
sbb
mov
orl
jae
lret
jmp
cmpl
mov
mov
loop
js,pt
jb
mov
scas
mov
pop
xlat
dec
decb
xchg
mov
pusha
hlt
mov
adc
pop
cmp
imul
and
cmpsb
ds
std
rorl
inc
cmp
dec
flds
pop
add
or
insl
fldenv
popa
or
ja
or
popa
push
pop
sub
ficoml
movsb
jno
ljmp
fcmovnbe
andb
fdivrs
pushf
jnp
push
movsl
and
int
pop
xlat
sbb
out
fists
das
std
mov
pop
mov
cltd
push
jmp
and
call
pop
leave
repz
xor
sub
scas
rcl
std
mov
xchg
out
popf
fsubrl
cs
jne
int
push
aad
add
or
sub
adc
fisubl
push
mov
jbe
jb
pop
fisttps
inc
ret
add
outsb
mov
pop
inc
enter
lcall
jge
lcall
pop
mov
dec
mov
sub
add
push
and
jle
int3
sub
xor
cld
sub
jnp
and
in
inc
mov
int
and
mov
scas
rclb
and
or
cmp
and
mov
dec
data16
mov
mov
jb
jbe
cmp
movsl
mov
repz
insl
push
cmc
sbb
clc
sbb
in
add
scas
cmp
scas
lcall
daa
or
icebp
aam
jle
fwait
in
add
xlat
cmp
lock
cmpsb
into
add
sbb
jmp
lock
int
sub
testl
inc
aaa
mov
dec
or
sub
cli
int
pop
dec
imul
imul
test
jne
clc
and
mov
inc
cltd
sub
adc
push
dec
imul
fidivrl
inc
in
jb
dec
sbb
add
xor
out
fimull
inc
xchg
mov
and
sbb
xor
mov
cltd
and
mov
clc
pusha
push
je
cmpsl
iret
mov
iret
mov
add
xor
hlt
insl
lods
mov
adc
xchg
mov
and
in
out
test
les
fsts
jno
test
aam
or
cmp
sub
popf
loopne
sbb
negl
xchg
xor
cld
sbb
mov
mov
repnz
jne
lret
and
sbb
cwtl
mov
inc
xor
mov
lods
cli
sub
lret
clc
push
arpl
jb
pushf
std
cwtl
insb
fsts
cli
xor
stc
mov
movsb
push
popa
ret
int3
mov
mov
push
push
mov
sbb
mov
mov
insl
mov
adc
or
cmp
xlat
test
in
cmp
xchg
push
mov
cmp
fists
jns
int3
pop
pusha
ficoms
push
jmp
push
jecxz,pt
ss
mov
pusha
xor
bound
xor
mov
out
dec
push
pop
shll
std
clc
in
sub
stos
xchg
lods
or
mov
scas
jg
sbbb
jo
add
sbb
je
mov
loopne
mov
and
loopne
bound
jmp
mov
scas
clc
inc
jecxz
mov
pop
jmp
icebp
mov
or
pop
sbb
xor
loop
imul
push
int3
jbe
push
jbe
pop
jmp
orl
mov
mov
dec
into
xor
popf
pop
ja
lret
jmp
xchg
mov
cmpsl
mov
or
push
and
mov
movsl
push
popa
dec
pop
mov
push
dec
pusha
js
les
mov
icebp
inc
adc
mov
outsl
mov
xor
xchg
call
adc
fnsave
mov
xchg
out
lds
and
shrb
in
andb
cmpsl
fadds
lods
jnp
mov
pop
mov
in
and
dec
fstpt
jecxz
jo
jbe
adc
adc
insb
cmp
jle
jecxz
mov
shrl
cwtl
vpsubsb
dec
xchg
stos
fisubl
lret
push
xchg
mov
lock
jecxz
mov
into
push
lods
sbb
nop
xchg
adcb
ret
data16
pop
jmp
test
lcall
and
imul
jp
fldenv
loope
test
push
scas
or
out
pusha
adc
and
jge
xchg
jmp
int
mov
jecxz
adc
in
int3
cld
xor
sahf
lock
xchg
imul
sub
and
sbb
dec
test
mov
stc
scas
jmp
sbbl
cmp
dec
mov
xor
or
pop
dec
sbb
cmp
xchg
mov
lret
rorb
cmp
loopne
mov
sbb
mov
push
notl
pop
xor
pop
and
inc
imul
in
dec
nop
sub
push
sahf
mov
jl
fstpl
or
sbb
xchg
repnz
jp
sub
negb
rcrl
outsb
sti
mov
fs
inc
mov
loope
stos
push
je
jb
andl
mov
rorb
call
inc
cwtl
mov
and
push
pop
rcrl
aas
sub
xchg
jecxz
aad
jno
fs
out
insb
sbb
cltd
repz
jle
xchg
ja
addl
nop
dec
mov
jmp
mov
into
mov
js
push
pop
imul
sub
rclb
rol
enter
call
mov
lds
jo
sbb
jecxz
dec
mov
adc
popa
lret
push
imul
aad
pop
adc
fcmovnb
js
pop
xor
inc
pop
push
ljmp
das
ret
xor
cmpb
cld
cli
mov
cmp
dec
ss
pop
adc
jae
repnz
mov
fs
ret
gs
cwtl
shl
fcomp
cmp
mov
jae
lds
stos
push
adc
push
cs
rcll
lret
push
dec
aaa
cld
lods
sub
stc
imul
pushl
int3
push
mov
and
mov
les
pop
pop
pop
mov
pusha
jp
enter
xabort
out
dec
inc
bound
stos
adc
xchg
cli
mov
outsb
jbe
xlat
aaa
mov
pop
jbe
sbb
ficomps
rolb
imul
stc
inc
inc
arpl
and
jecxz
lret
pop
add
popa
jns
sbb
jb
sbb
addr16
aaa
shlb
stc
ret
add
push
jge
addr16
mov
out
lods
pop
push
adc
add
add
adc
mov
lret
mov
pop
shl
add
and
push
loopne
insb
les
or
xchg
popf
push
lcall
gs
movsb
mov
test
and
mov
rol
orb
mov
add
shll
xchg
fldcw
enter
push
ja
cltd
push
faddl
cltd
sbb
mov
inc
adc
pop
push
pop
ljmp
xor
nop
cld
je
fcomps
mov
or
hlt
shl
fsubrs
push
xor
jecxz
pop
jns
fwait
mov
mov
fistl
ret
sbb
xchg
loopne
test
fldt
pop
sbb
dec
xor
sub
mov
sbb
push
add
jecxz
dec
mov
jbe
push
cld
insb
pop
insl
nop
sub
loope
xchg
int
into
adc
ret
jo
fsts
jg
test
int
mov
xchg
in
push
push
imul
hlt
pop
dec
jae
cmp
inc
fidivrl
xchg
int
sub
cmp
sub
and
in
mov
mov
out
jns
fisttpll
sbb
mov
cmp
pusha
jl
pop
in
bound
push
xchg
adc
dec
test
jge
mov
shll
jo
cmp
insb
jb
es
inc
dec
stc
dec
mov
jp
and
cmpsl
pop
iret
lahf
mov
shl
ss
inc
xchg
rcrl
scas
popf
cltd
jle
incl
loope
fadds
js
shlb
ds
imul
daa
jp
xchg
adc
lcall
push
scas
rcpps
scas
fs
or
dec
or
scas
arpl
sub
adc
jo
mov
mov
popa
loopne
xor
sahf
xchg
jmp
push
inc
lds
pop
mov
pusha
sahf
dec
push
les
stos
pop
out
mov
jb
fdiv
in
fwait
dec
adc
divl
sub
inc
inc
adc
or
flds
or
movsb
imul
fistps
aas
hlt
mov
adc
mov
pop
loopne
je
aas
dec
xor
mov
popa
mov
xor
out
pop
imul
add
mov
pop
les
add
testl
addr16
test
lods
inc
inc
mov
stos
mov
jecxz
xor
lds
test
and
adc
ret
adc
sbb
mov
out
dec
stc
and
iret
xlat
jo
push
outsb
xorl
or
pop
sub
es
dec
sti
xor
in
push
ljmp
aam
stos
mov
inc
inc
bound
adc
xchg
mov
sub
aas
inc
je
cmp
call
mov
mov
dec
fs
shlb
mov
jge
mov
andl
das
incb
pop
lods
or
and
imul
in
fcomip
jecxz
test
aaa
pop
dec
mov
push
push
inc
movsb
inc
xchg
sti
sbb
hlt
testb
lock
test
cmp
and
and
sbb
push
out
adc
cmp
add
and
mov
mulb
lds
fsubrl
in
jp
inc
xchg
inc
push
dec
stos
fildll
sbb
push
testl
icebp
push
xchg
lret
push
cmpsb
xchg
out
pop
xchg
and
push
sub
inc
mov
adc
push
jp
cmp
dec
out
ljmp
jne
movsb
fs
sub
test
outsb
mov
inc
fisttps
lds
adc
and
mov
stc
lcall
jbe
and
inc
jle
mov
lret
mov
cmc
dec
inc
inc
bound
mov
loopne
fcmove
xchg
mov
push
inc
lret
or
int
mov
adc
int3
or
lcall
mov
rcl
popf
xor
je
lret
daa
and
mov
stos
ror
dec
adc
pop
mov
fistpll
xchg
sbb
pop
out
insb
jbe
add
sbb
mov
mov
mov
sub
mov
sub
jl
imul
ret
jmp
repz
inc
adc
pop
or
xchg
and
fdivr
shll
std
and
lahf
xchg
fiaddl
frstor
nop
mov
js
das
shl
sbb
fidivs
insb
mov
aad
mov
inc
out
jo
dec
mov
test
mov
mov
pop
add
inc
popf
jnp
mov
add
aaa
sub
jns
mov
stos
int
mov
lret
movsl
sub
sub
mov
mov
lods
popa
fs
fidivs
pop
clc
dec
inc
mov
fwait
push
sarl
inc
out
jno
mov
sti
xchg
gs
lds
xor
sbb
sbb
jecxz
stc
in
ljmp
jbe
inc
test
sub
add
insl
test
insl
push
or
scas
ja
data16
repnz
and
mov
mov
insl
lods
daa
rcr
mov
repnz
xor
jmp
call
mov
mov
idiv
push
jns
inc
scas
fsubr
repnz
add
adc
shrl
sbb
scas
jecxz
sub
lods
xchg
cmp
test
in
ds
or
fadd
cs
mov
or
mov
dec
pop
frstor
xchg
xor
mov
mov
lret
jp
or
pop
movsb
fcmove
push
ljmp
push
jp
adc
xchg
dec
sarb
add
xchg
cmc
mov
negl
cmp
pop
sub
fs
dec
xchg
pop
popf
lahf
aad
ret
fildll
lcall
data16
push
adc
test
cmpsl
inc
dec
jno
push
xchg
bound
pop
test
cltd
nop
std
xchg
sbb
xchg
cltd
mov
push
js
ret
xchg
push
cmp
xchg
negb
fs
cmpsl
test
cli
cli
sub
adc
subb
pusha
pop
mov
lret
cmp
ret
adc
lahf
fxch
adc
mov
cmp
lods
cmc
decb
andb
pop
jmp
cli
jg
ret
mov
fwait
ja
mov
std
fisubs
jns
pop
adc
repz
dec
sbb
mov
dec
push
xchg
sbb
leave
lcall
jae
addb
or
push
cmp
push
cmp
out
sub
das
dec
inc
push
jp
mov
icebp
push
insl
mov
cwtl
outsb
ficoml
xorl
dec
adc
sub
mov
inc
pop
adc
shrl
movsb
fcmovnu
jp
pop
pop
cltd
scas
push
mov
bswap
pop
mov
pop
test
xchg
arpl
jg
mov
sub
mov
lock
inc
sub
rclb
je
sbb
icebp
push
xchg
jg
mov
pop
inc
cmp
cmpsb
fwait
add
cmp
mov
in
js
push
mov
daa
in
icebp
sarb
aaa
inc
mov
xor
jmp
int3
mov
sbb
divl
daa
jae
loopne
pop
inc
jns
and
pop
sahf
xchg
jno
sbb
xor
ret
sbb
insl
cmpsb
adc
fdivrs
movsb
outsl
mov
push
push
js
adcb
rcll
lods
test
mov
pop
mov
outsb
das
fdivrl
xor
inc
stos
popf
mov
sbb
mov
mov
dec
xor
mov
cmc
jae,pn
aam
test
pop
xor
in
mov
mov
push
sbb
ret
dec
bound
xlat
into
adc
sub
movl
test
lret
push
sub
sahf
push
lahf
mov
mov
push
dec
stc
jno
fldt
pop
mov
jb
aas
pop
and
push
pop
icebp
or
add
sbb
daa
ljmp
mov
xor
jg
adc
and
in
mov
ja
pusha
sbb
jmp
fs
jp
dec
nop
cmp
xor
fisubrl
lcall
fxch
mov
and
aad
ret
das
fdivs
or
jecxz
pop
xlat
dec
mov
cmpsb
or
sbb
loop
and
js
loopne
push
jns
lret
push
test
addr16
les
jbe
ljmp
and
cmp
stc
sub
push
push
mov
into
enter
mov
adc
jb
and
iret
mov
jb
inc
jns
movl
push
insb
call
das
xor
adcl
inc
dec
ss
adc
cmp
ficompl
add
mov
inc
sub
fdivl
inc
lcall
xchg
cltd
jge
xlat
ja
pop
jnp
movsb
push
xchg
nop
out
mov
mov
or
add
negb
test
inc
jg
imul
xchg
das
pop
inc
cmp
pop
mov
xorb
nop
aaa
mulb
scas
jne
adc
fnsave
sub
cmp
sbb
les
push
sbb
jg
jecxz
dec
shl
clc
call
fcmove
mov
repnz
imul
sbb
cli
jmp
sub
mov
and
jae
or
xor
cmp
in
insb
dec
mov
pop
fs
lods
pop
mov
xchg
jne
bound
cmp
mov
dec
cli
out
in
mov
jnp
lock
inc
bound
inc
jne
scas
sub
xor
and
ss
dec
inc
xchg
push
or
into
xchg
mov
movsb
dec
cwtl
in
fwait
jmp
add
push
and
mov
not
inc
je
mov
sbb
mov
ljmp
jae
mov
cs
insb
ss
fcmovu
jp
mov
or
inc
sbb
inc
or
mov
in
adcl
aad
loop
push
in
mov
adc
push
int3
ret
mov
mov
mov
push
mov
clc
popf
cld
or
cmp
fxam
idivl
mov
daa
push
icebp
out
xchg
fiaddl
pop
mov
xor
cmc
lcall
mov
test
adc
cli
outsb
mov
lcall
iret
mov
inc
or
in
cmp
xlat
fs
mov
icebp
pop
adc
test
mov
std
lods
enter
test
fwait
push
and
lods
mov
adc
data16
jecxz
xchg
pop
ret
adc
adc
adc
pusha
repz
xor
add
sub
cmp
lahf
dec
cmp
sub
std
scas
out
fwait
jns
das
lret
shr
mov
lret
out
and
out
add
mov
cmp
cltd
out
lock
lret
add
push
pusha
add
push
xor
push
push
sub
sahf
mov
mov
insl
fwait
dec
lahf
das
jmp
jb
hlt
fldlg2
cmp
and
test
jmp
js
out
out
nop
lods
or
rcll
dec
popa
mov
sub
xchg
mov
push
xchg
ss
add
sub
fsubrp
or
adc
das
addb
cmp
call
dec
arpl
popa
lcall
xchg
and
xchg
bound
and
push
sbb
cli
les
fwait
mov
pusha
into
out
mov
jmp
out
pop
clc
sbb
jge
test
sub
mov
dec
movb
mov
rorb
in
mov
ror
scas
scas
xchg
sbb
cs
inc
lods
out
pop
je
pop
out
add
mov
sub
mov
lret
in
mov
mov
xor
cmpsb
cmp
cmp
inc
mov
pop
fcomps
aam
mov
jp
dec
cmp
or
fs
dec
enter
or
int
xchg
fstps
jecxz
aam
mov
out
fdivr
je
hlt
mov
cmpsl
mov
aas
sbb
jae
aam
dec
xchg
test
sub
xor
icebp
es
push
sti
xchg
insl
xchg
jae
mov
dec
add
cmp
je
pop
mov
test
dec
jbe
insl
inc
mov
and
lods
sbb
adc
push
mov
lods
das
adc
adc
dec
and
xor
insl
cmp
xchg
push
pop
cltd
lcall
in
inc
inc
mov
sbb
dec
int3
insb
add
lock
xchg
inc
sub
inc
adc
xchg
push
add
push
add
inc
popa
cmc
jne
sub
hlt
push
pop
sub
cmp
mov
xchg
movl
xchg
shrl
je
loop
dec
pop
cld
push
and
sub
test
jbe
add
jge
jge
xor
sahf
or
nop
push
mov
imul
mov
xchg
add
lcall
test
jno
xchg
fsubs
jl
cmp
push
adc
enter
lret
in
out
and
push
adc
cld
test
jbe
lock
ljmp
cli
xor
stos
mov
imul
shr
cmp
cs
pop
fwait
cmpsb
sti
mov
mov
test
inc
ds
loopne
xchg
mov
xor
mov
in
sbb
inc
imul
mov
push
jle
xorb
dec
loop
and
hlt
ja
mov
add
jne
insl
or
xchg
test
sub
xor
jge
xor
insb
inc
movsl
scas
mov
pop
sbb
mov
push
bound
mov
push
int
mov
adc
mov
dec
dec
cwtl
stos
btc
or
loopne
jnp
inc
push
add
repz
mov
popf
ja
mov
pop
cld
mov
xor
ljmp
xchg
cmp
push
jp
mov
and
adc
loope
xor
mov
in
add
push
push
in
jle
cli
daa
dec
mov
aaa
in
mov
adc
push
pop
xchg
xor
rcrl
test
cmp
sub
inc
fildll
mov
iret
and
mov
sub
jg
fiadds
adc
mov
std
dec
xor
faddl
mov
inc
aam
fisttpll
outsl
lahf
push
test
inc
imul
sbb
jp
adc
or
jo
call
dec
loopne
cmp
mov
pop
cmp
orb
cmc
push
xor
add
mov
fisttpll
mov
pushf
inc
push
pusha
lcall
and
popf
pop
mov
push
push
mov
js
mov
xor
jecxz
or
dec
stc
fisttpl
dec
mov
mov
dec
hlt
add
daa
push
das
lahf
adc
cmp
iret
aaa
scas
xor
pop
inc
and
jne
or
pop
daa
mov
icebp
gs
xlat
and
cmpsl
cmpsb
mov
fisttpll
ljmp
lea
mov
or
mov
adcl
lahf
and
push
popf
movsl
dec
adc
fdivrs
sbb
ret
or
dec
mov
or
sub
add
popf
jmp
sbb
dec
sub
je
sbb
add
lds
shlb
xor
mov
mov
and
fnstsw
sub
dec
push
inc
push
aam
mov
xor
and
mov
push
roll
aaa
pop
push
xchg
movsl
mov
jge
jns
std
iret
add
rcll
fstps
push
insb
fildll
push
idivb
mov
mov
dec
jbe
bound
sbb
xor
sbb
mov
fadds
or
xchg
imulb
jbe
out
mov
int3
dec
hlt
xor
xchg
push
cmp
stos
mov
inc
push
jns
xor
and
pop
scas
sbb
movsl
or
in
inc
xor
mov
ljmp
add
std
add
push
adc
inc
leave
in
xor
lock
mov
enter
push
movsb
and
int3
negb
icebp
dec
pop
jcxz
mov
fadds
ret
jo
mov
push
jo
pop
xchg
adc
cs
dec
mov
jae
int
cltd
ss
sbb
shlb
adc
fwait
arpl
sub
mov
mov
jl
adc
aad
push
stos
dec
jns
jg
push
push
jecxz
outsl
sbb
out
pop
scas
fidivl
xchg
xor
push
inc
push
xorl
clc
rorb
sbb
mov
xchg
jg
stos
mov
outsl
cmpsl
push
jno
aam
sbb
adc
mov
insl
in
loope
into
push
shlb
xchg
out
cli
rep
sub
mov
je
mov
daa
divl
push
inc
test
add
lret
loop
leave
cmp
xchg
dec
rorb
mov
repz
xchg
outsb
sub
inc
add
hlt
push
icebp
shrl
jae
or
sbb
out
dec
lds
cmp
mov
sahf
mulb
mov
ret
out
das
mov
sbb
lea
popa
ss
popf
outsl
add
or
pop
iret
or
pop
push
sub
push
jmp
push
repz
out
sub
clc
xchg
loope
push
in
sbb
iret
ljmp
jns
pop
and
stc
jbe
imul
or
sti
insl
imul
inc
mov
adc
int3
and
push
in
out
lea
push
cmp
mov
mov
sbb
and
inc
hlt
test
jno
lret
ljmp
jo
in
mov
adc
shrb
cmp
pop
adc
adc
icebp
aas
push
cmpsb
pop
icebp
daa
lea
stos
loop
jg
or
mov
dec
into
fdivrl
jb
adc
cltd
pop
std
cwtl
addr16
cmp
pop
push
gs
sub
mov
outsb
cmp
push
jo
adc
cltd
cmp
or
cmc
es
or
lret
out
or
jb
lret
mov
adc
adc
ss
mov
xchg
mov
scas
sahf
fcomps
inc
mov
xchg
pop
aam
dec
mov
inc
bound
add
lods
aad
cmc
lahf
hlt
and
cmc
mov
push
cmp
mov
jns
cmp
cld
mov
push
test
adc
ss
lds
jl
inc
inc
sbb
jmp
jp
mov
push
rclb
call
push
icebp
mov
ret
jp
inc
dec
and
in
es
sbb
int3
je
inc
and
mov
call
in
ret
mov
lahf
lock
bnd
inc
mov
in
fldt
fwait
sbb
or
xor
dec
je
fs
add
rolb
cmpsl
and
lea
xchg
xor
lea
jmp
push
jo
mov
push
mov
dec
or
pop
testb
push
loopne
push
xor
aad
xor
dec
jns
sbb
xchg
push
hlt
mov
push
mov
das
bnd
je
rol
and
repz
stos
negl
mov
sbb
repz
xchg
frstor
mov
jmp
in
sbb
stos
dec
sbb
mov
dec
adc
cltd
add
jnp
mov
push
pop
or
sti
xor
cmp
enter
lds
inc
push
fs
pop
mov
jl
scas
push
pop
push
jne
dec
andl
adc
push
orl
xchg
negl
cmp
push
lock
in
sub
inc
inc
push
sbb
imul
std
movsb
dec
loopne
jl
mov
jo,pt
jecxz
push
repnz
in
sbb
cmc
iret
mov
mov
cmp
adc
loop
mov
fnsave
fldl
xor
mov
sub
adc
xchg
pop
add
cmp
and
mov
dec
and
lahf
shrl
jnp
jae
add
out
xor
jns
inc
icebp
daa
push
and
jl
std
sub
fisttpl
ljmp
decb
and
or
dec
adc
mov
lahf
inc
xor
fists
sub
jle
push
mov
jae
pop
loopne
ret
and
adc
push
pop
jbe
aaa
xchg
sbb
lock
xor
fstps
mov
js
test
dec
xor
or
push
push
pop
cmp
punpckldq
pop
loop
sbb
xchg
icebp
fsubrl
subb
ds
aaa
fwait
lcall
jno
mov
sbb
js
sbb
xchg
sahf
or
sub
jns
xchg
jl
pop
icebp
xor
aaa
repz
scas
xorl
divb
fs
adcb
lret
aaa
insl
and
fists
jl
ss
ja
lea
out
inc
mov
sar
leave
cld
ret
push
sub
xlat
jp
and
push
lea
mov
lea
jno
aam
or
adc
mov
notb
mov
adc
mov
rcrb
xchg
jo
lods
insl
add
pop
ret
or
adc
in
push
into
jl
push
pop
sbb
xor
imul
lods
imulb
stos
jg
cmp
inc
mov
out
das
or
loopne
push
stos
mov
xor
sub
imul
cmpsl
movsb
inc
stc
or
idivb
push
add
and
or
and
sub
insl
fildl
pop
nop
push
sbb
mov
inc
lret
sahf
inc
push
sbb
pushf
xchg
dec
pushf
fsubrs
sub
and
pop
jae
mov
add
inc
frstor
mov
shlb
push
popl
sti
or
adc
lahf
xor
ficoms
cmp
pop
cltd
sbb
loop
push
test
into
outsl
cmp
das
push
sbb
in
xor
inc
and
scas
mov
mov
dec
dec
sub
push
rcrb
and
out
dec
movsl
das
nop
add
movsb
lret
cmp
and
punpcklbw
cmp
cmpl
repz
push
jmp
mov
adc
js
mov
repnz
addr16
xor
dec
dec
mov
fdivrs
int
push
and
sub
push
jecxz
or
mov
inc
sahf
mov
mov
xchg
xor
pop
or
xlat
sub
pop
or
jg
xchg
ret
mov
pop
push
out
mov
xchg
repz
jns
repnz
sub
xlat
cmpsb
cmp
mov
movsb
jge
in
movsb
mov
cld
test
mov
jp
jg
inc
call
orb
pop
jo
aas
cmp
mov
sti
xchg
fmulp
sbb
sub
aam
fwait
cli
add
lods
fwait
clc
inc
into
int
xchg
jns
test
roll
insl
xor
popa
bnd
lret
addr16
lret
or
in
or
std
add
and
cwtl
sahf
cmp
inc
adc
or
je
notl
shrl
adc
gs
jecxz
jmp
and
repnz
jp
and
pushf
enter
data16
xorb
jo
ds
and
mov
lret
in
jbe
mov
ds
data16
js
in
shll
fisttpl
xlat
jae
mov
jno
out
xor
in
mov
leave
int
jnp
xor
rolb
add
std
xchg
popa
pfacc
daa
out
mov
push
mov
outsl
jl
adc
and
adc
mov
fisttps
movsl
xorl
dec
and
std
xchg
jo
inc
out
test
push
xor
pushf
jmp
mov
sub
gs
clc
cmp
lcall
rcll
pop
ljmp
pop
pop
rorl
scas
shld
mov
and
xlat
and
test
shrl
sub
pusha
jne
fwait
stc
mov
push
inc
sti
jmp
dec
mov
inc
xchg
mov
sbb
sub
xlat
jnp
jbe
in
fisubrs
shrd
addb
insb
lods
iret
mov
sub
add
out
int
loopne
add
paddq
leave
enter
pop
les
xchg
adc
cmp
and
stos
mov
mov
aam
dec
add
jecxz
lods
pop
push
int3
add
push
test
adc
sbb
lea
repz
pop
xchg
pop
outsl
movsb
lock
out
jmp
jge
jmp
jnp
adc
inc
cwtl
mov
outsb
cmp
arpl
in
call
xor
add
sbb
mov
pop
sbb
push
mov
mov
leave
or
mov
jp
push
mov
lds
mov
jge
adc
xchg
call
repz
cli
loope
xlat
mov
popf
scas
xchg
aas
push
in
jg
ja
xor
lcall
data16
xchg
add
fidivrl
lret
jne
cli
rol
inc
xchg
cmc
stos
fwait
jno
mov
jne
incl
ds
mov
xchg
jecxz
mov
jnp
and
dec
xchg
xchg
push
imul
cmp
push
mull
xchg
aad
imul
or
inc
stos
cmpsl
cmp
xor
push
out
gs
xchg
push
cmp
push
imul
push
lahf
sub
shl
bound
dec
ja
pop
dec
push
add
sub
out
xor
and
rclb
pop
jne
ret
inc
stos
jl
pop
das
ljmp
add
inc
aad
cmc
sub
push
push
not
ja
mov
xor
xchg
pop
sahf
xchg
stos
jne
stos
movb
pop
int
sub
lret
jb
pop
jns
pop
or
clc
in
cmp
cld
sub
xor
lock
push
out
movsb
push
adc
sub
aam
das
in
movsl
xor
add
fisttpl
addr16
int
push
pop
push
cmc
adc
push
cmc
add
push
adc
mov
pushf
pop
sbbl
nop
or
ss
ret
aaa
repnz
mov
outsl
das
and
mov
or
dec
xchg
leave
and
mov
push
pop
or
lods
mov
mov
out
inc
mov
insb
dec
lock
push
xchg
test
stos
mov
inc
pushf
mov
das
shl
add
in
pusha
cmp
das
ja
int3
popa
test
add
fists
or
jl
andb
lods
cmp
sbb
adc
iret
or
and
andb
sub
push
mov
movsl
cmpsb
sub
xchg
inc
xor
insl
insl
outsb
mov
dec
mov
add
sti
je
mov
test
dec
pushl
pop
psraw
push
mov
lret
xchg
inc
call
pop
aas
push
mov
mov
cwtl
mov
and
xor
cmp
mov
add
int3
lret
arpl
xchg
nop
push
cmp
roll
iret
pop
adc
cmp
in
movsb
cmovb
testb
imul
popa
or
add
cltd
jecxz
adc
fisttpl
das
mov
mov
outsb
adc
push
mov
jl
mov
jb
pusha
mov
addb
subb
fwait
push
hlt
xchg
idivb
or
nop
xlat
insl
pop
push
inc
pop
mov
stc
rorb
inc
adc
lcall
enter
cli
lea
xchg
xor
inc
mov
js
mov
out
xchg
rorb
js
inc
sti
test
dec
sar
negl
add
xchg
sub
mov
bound
in
mov
add
inc
xor
repnz
mov
dec
cltd
loopne
not
std
imulb
mov
lcall
aaa
pop
pop
imul
sbb
push
sbb
cli
ficoms
sbb
fistl
xchg
push
adc
sets
scas
out
shll
add
add
xchg
xlat
pop
pop
pop
jb
out
xor
sub
inc
arpl
mov
daa
lea
pushf
pop
sbb
fsubs
aad
dec
fisubrs
aam
xlat
dec
addr16
lea
call
mov
popf
mov
cmc
cltd
cmovo
daa
jae
push
inc
movsl
aad
imull
add
xor
cmp
pop
sub
xchg
and
int3
jmp
push
sub
repnz
xchg
movsl
mov
sbb
mov
jb
push
or
addr16
mov
jb
and
call
je
inc
out
rclb
sahf
inc
test
adcl
sub
test
outsl
sbb
lahf
nop
ja
and
jp
mov
icebp
call
cmp
mov
xchg
xchg
mov
xchg
jb
push
jge
sti
clc
mov
sub
cs
std
cmpsb
mov
sarb
dec
inc
lods
lcall
aas
and
rorl
rcll
dec
inc
mov
push
mov
data16
inc
enter
dec
cmp
arpl
dec
sahf
push
xchg
cltd
fisubrl
xor
sbb
push
aad
mov
icebp
into
push
outsl
aam
pop
dec
jg
cmp
push
xor
cwtl
arpl
jge
cmp
ret
int3
nop
pop
outsb
cmp
pop
je
lret
addr16
mov
or
dec
and
cmp
lret
sbb
mov
pop
mov
fisubrs
scas
ja
mov
lea
decb
test
jmp
enter
ret
movsl
rcrb
idivb
and
mov
movsl
xlat
and
cmpb
xor
mov
pushf
inc
lods
inc
xchg
aaa
sbb
lock
add
mov
mov
jge
in
mov
repz
xchg
lods
fdiv
mov
push
and
adcl
pop
cs
mov
data16
out
mov
daa
adc
nop
push
pop
add
dec
cwtl
ds
push
jae
in
cmp
inc
pop
inc
mov
jg
inc
repnz
outsb
xchg
xchg
xor
mov
sbb
jo
loope
test
push
out
push
out
lods
gs
test
jl
pop
cmpsl
aam
mov
mov
cmp
adc
addb
loope
out
jnp
mov
xorb
lds
in
cwtl
jg
mov
mov
out
imul
add
xchg
ds
mov
adc
lcall
cmp
fimull
fisttpll
push
repz
add
aam
lods
mov
cmpsl
sbb
fimull
mov
out
mov
lret
gs
loopne
cmc
cs
gs
scas
stos
inc
pop
xchg
inc
jmp
js,pn
gs
xor
cmpsl
aaa
fcomps
push
fcompl
cmp
add
fisubl
jbe
mov
lea
js
adc
and
cwtl
sti
cmpl
push
clc
jecxz
popf
jmp
xchg
mov
out
xchg
push
mov
xor
out
pop
ficoms
or
es
popa
and
call
mov
mov
clc
push
insb
or
mov
push
cs
test
sub
test
xlat
cld
pop
pop
mov
out
inc
xchg
fnstenv
jecxz
dec
lods
in
cmp
std
or
stos
sub
mov
add
pop
daa
jns
sbb
pop
cmp
jecxz
cmp
cmp
in
data16
bndstx
gs
dec
inc
mov
adc
mov
add
pop
cli
popa
in
fdivrs
repnz
cmp
lahf
push
mov
fisubs
lds
inc
ljmp
pop
mov
popf
arpl
leave
push
and
pop
mov
adc
cli
in
inc
mov
jb
jo
jl
inc
jmp
in
mov
movsb
push
and
dec
add
lret
stos
dec
mov
sbb
xchg
ret
add
cld
jg
nop
inc
add
jne
iret
sbb
test
in
into
pop
sub
mov
out
jae
fcoml
or
popf
sub
sub
pop
cmpsl
mov
xchg
cmp
jl
pop
ret
cs
cmpsb
or
sahf
mov
int3
hlt
and
loop
pop
jnp
lods
cmp
rcll
xchg
jno
addl
add
out
pop
adc
mov
xorb
lods
pop
xchg
rorl
int3
jg
jmp
mov
lcall
and
outsb
imul
pop
inc
pop
gs
andl
mov
pop
pop
cmp
js
les
or
pop
test
sub
lods
adc
jmp
inc
inc
push
mov
adc
sub
in
dec
mov
and
pop
push
push
xor
lock
xchg
mov
fwait
mov
aad
popf
repnz
cmp
xchg
mov
loop
sbb
hlt
dec
call
loope
add
leave
adc
rcr
cmc
xor
cmp
rcll
xorb
mov
or
out
icebp
cmpsb
lods
call
outsb
lcall
add
test
sub
xchg
mov
push
test
sub
mov
sbb
cmc
xor
outsb
jns
cs
es
mov
ret
sub
mov
lds
dec
adc
test
and
mov
shrb
sti
sub
rolb
imul
sub
cltd
cmpsl
mov
aas
push
test
cmp
inc
daa
icebp
out
jae
cli
repnz
stc
pushf
xchg
pusha
mov
roll
mov
stos
std
outsb
fwait
or
iret
or
or
in
aas
fsts
mov
mov
sbb
mov
insl
sub
mov
mov
lock
int3
mov
fdivl
xor
inc
lcall
sub
addr16
mov
mov
pop
sbb
popf
out
adc
std
pop
pop
sub
call
addr16
loop
dec
icebp
lret
push
add
jmp
mov
xchg
mov
stos
sub
mov
das
adc
je
push
stc
stos
push
and
jecxz
lds
pop
mov
nop
repnz
push
pop
adc
jl
imul
and
sbbb
push
dec
mov
push
js
jns
in
lds
leave
pop
mov
ss
sbb
jg
imul
adc
decl
sbb
clc
rcll
jle
xor
or
out
sub
push
sub
pop
mov
push
adc
fsts
das
push
jo
cmpsb
loop
cmp
xor
dec
icebp
lock
xor
sub
iret
repnz
adc
scas
jne
outsl
gs
xor
xor
aam
leave
push
in
lea
xor
lret
mov
dec
lcall
mov
dec
repz
cmp
sub
mov
xchg
adc
cld
sahf
mov
sarl
pusha
and
fnstenv
jae
ror
mov
imul
dec
and
fidivs
mov
cmc
mov
ficompl
adc
sbb
cli
movsl
out
icebp
xor
inc
add
mov
xchg
sub
lcall
or
cmp
pop
pop
std
pop
jne
sbb
pop
or
mov
pop
cmpsl
dec
popa
gs
or
mov
sbb
sbb
inc
sbb
mov
mov
pop
sbb
push
shll
popa
jg
mov
incb
popa
aaa
jp
jne
lret
push
and
cmp
xchg
popa
call
fwait
std
pop
xchg
nop
mov
push
test
into
dec
pop
jns
push
add
mov
mov
mov
inc
jg
dec
xlat
pop
xchg
jmp
sbb
mov
cmpl
pop
mov
aam
adc
mov
out
test
dec
test
inc
jns
es
movsb
and
jp
into
or
xchg
loopne
xor
xchg
gs
ds
clc
mov
sub
pushf
sub
mov
mov
mov
cwtl
ret
repz
adc
es
enter
int3
stos
adc
jns
inc
adcb
adc
repz
cli
mov
sub
adc
pop
cwtl
out
or
push
ja
xchg
mov
call
fwait
lods
mov
cwtl
or
lock
stos
inc
xor
inc
shr
and
jp
clc
lret
sub
push
aaa
int
mov
sahf
pop
lea
scas
test
sub
jo
push
cs
filds
or
fiadds
mov
loope
lods
je
mov
int3
in
jl
adc
push
fsubs
icebp
mov
xchg
shll
xchg
xor
or
sub
sub
iret
fadds
shrl
xchg
lea
xchg
lea
xchg
bound
and
les
ret
xor
fs
cli
icebp
test
rolb
testl
leave
xchg
in
fdivp
dec
leave
mov
shr
out
js
and
or
std
and
bound
and
lcall
test
mov
xchg
pop
pusha
dec
mov
movsb
jmp
lcall
fistps
lods
xor
inc
cs
ljmp
cmp
add
sbb
das
repnz
leave
outsb
lock
dec
rorl
lods
aad
mov
ret
nop
sbb
mov
test
xchg
push
repnz
aad
sbb
mov
ret
push
test
and
mov
push
in
sub
ret
dec
jecxz
xchg
pop
add
or
scas
jmp
and
inc
xchg
mov
idivb
int3
subb
mov
jmp
push
sub
xorb
jne
mov
xchg
pop
jg
or
mov
int
outsb
push
insb
cmpsl
adc
mov
mov
test
jp
and
pop
mul
sub
dec
cmp
out
mov
sub
pop
movsl
in
or
xlat
or
add
add
mov
mov
mov
ja
jns
pop
mov
pop
gs
imul
roll
inc
sub
stos
xor
ficoms
loopne
and
fiaddl
cwtl
mov
push
sahf
mov
jl
cmp
mov
sub
lahf
mov
sar
mov
outsl
aaa
cmpsb
push
push
addr16
push
push
in
or
in
and
inc
add
mov
lcall
or
repz
sahf
out
into
mov
cmpsb
sub
pop
mov
add
ret
mov
sub
clc
imul
cmpsb
ds
js
mov
jle
jmp
mov
dec
jnp
repnz
pop
and
imul
popa
inc
punpckhwd
mov
sub
or
mov
jo
jecxz
push
jo
lret
rcrl
adc
inc
mov
in
std
inc
loop
test
or
mov
xchg
pop
and
xlat
cmc
inc
dec
in
cs
out
cmp
push
sbb
xor
fstl
mov
bound
cmp
and
out
xchg
or
into
mov
sbb
mov
inc
out
push
xor
cmp
adc
cmp
xor
mov
add
lock
and
inc
cltd
push
add
or
xor
pop
insl
das
insb
movlps
lret
pop
adc
fiadds
jg
mov
xor
fsubrl
jb
fsubs
mov
sbbb
mov
hlt
mov
mov
jnp
sti
sbb
mov
inc
jae
jae
adc
call
jge
or
jg
cmpsl
xchg
mov
sub
arpl
mov
subl
nop
and
mov
stos
sarl
cmpsb
lods
mov
rol
mov
jno
jns
mov
loop
xchg
loopne
cli
js
inc
sbb
cli
dec
jae
test
or
imul
je
sbb
cmp
int3
call
lret
inc
ds
adc
aaa
cli
sbb
xchg
clc
fwait
cwtl
ja
cmp
jmp
and
sbb
movsl
add
cmp
adc
mull
inc
pop
add
scas
inc
xchg
add
leave
test
and
pusha
jl
sbb
inc
sub
adcl
lods
mov
push
lret
testb
pop
ds
xor
stos
add
push
push
push
jo
mov
lods
imul
lock
add
idiv
add
inc
movsl
iret
xor
test
lret
or
fstl
fstp
mov
pop
pushf
sbb
test
inc
inc
adc
push
test
aaa
xor
jbe
or
hlt
scas
xchg
or
xchg
lea
movsb
outsb
adc
push
scas
std
dec
aam
or
add
bound
jno
sub
xchg
jns
nop
pop
add
and
pushf
shrb
int
mov
pop
movsl
jne
adc
adc
repz
shl
sbb
mov
mov
mov
inc
lods
cld
cmp
ljmp
popf
lock
ja
nop
mov
xor
sub
and
icebp
mov
mov
ss
sbb
mov
lods
sbb
cmp
icebp
out
sbb
mov
lret
push
sbb
sbb
mov
dec
sbb
and
adc
lock
in
jae
leave
fists
or
int3
jnp
mov
mull
inc
jecxz
cmp
loope
ss
xchg
dec
and
insb
xor
adc
es
adcl
xchg
daa
rcll
jno
push
and
xor
mov
jae
iret
add
scas
negl
cmp
sub
icebp
aam
pop
sub
jl
jb
in
pop
or
sbb
scas
push
pop
inc
scas
mov
inc
dec
ss
xchg
cmp
dec
and
xchg
fnstsw
jbe
add
pop
pop
lret
mov
mov
out
add
lds
and
imul
sti
mov
xchg
jge
mov
xor
pop
icebp
sub
clc
inc
fld
xor
add
test
js
mov
cmp
push
fs
mov
lea
fldcw
push
repz
shlb
inc
movsb
or
jmp
mov
sub
in
out
xchg
sub
lea
les
sbb
push
scas
test
push
inc
dec
std
lret
jb
lret
jo
cmc
fwait
and
outsb
lods
jl
icebp
cmpsl
push
push
and
insl
punpckldq
lds
stc
jle
xchg
loopne
ret
and
xor
mov
es
push
idivl
mov
cmp
pop
sub
push
out
jecxz
rcrb
lret
jo
sub
call
jmp
das
aas
jno
clc
mov
xchg
or
dec
or
cmp
in
and
test
es
out
xor
push
xchg
inc
adc
imul
jp
inc
lcall
add
or
por
jae
jb
outsl
mov
mov
pop
push
mov
out
push
dec
or
sub
nop
push
aam
inc
addl
sub
add
scas
mov
movsl
dec
repz
rcrb
daa
hlt
xor
ljmp
sub
jae
or
sbb
fidivrl
repz
jne
pop
mov
movsl
push
or
cmp
sub
stos
insl
out
sub
incb
test
orb
inc
test
divl
in
out
mov
dec
sbb
dec
mov
ss
sbb
sub
fldt
xchg
or
movsl
outsl
faddp
addr16
je
cmp
je
dec
add
sub
insl
repz
ret
mov
pop
lret
aam
aaa
out
sbb
loope
out
adc
data16
mov
sub
hlt
jno
jge
stos
pop
mov
mov
add
cmp
pusha
jmp
jno
ds
scas
adc
push
fcomps
xor
sub
mov
mov
jg
outsb
xchg
clc
dec
adc
push
jecxz
test
jle
push
mov
cmp
pop
rcrb
mov
dec
stos
or
in
jge
xor
rolb
xor
sbb
cmp
pop
push
sbbb
cmpsb
inc
mov
lock
mov
cltd
push
shl
fidivl
int
lahf
aad
add
bound
aad
daa
fwait
mov
pushf
addr16
mov
out
pop
mov
popa
sarl
test
icebp
aam
cmp
cmp
jnp
aaa
xchg
ss
pop
sub
lret
cmp
cmpsb
sub
loope
rcrb
clc
cmp
xlat
push
sbb
mov
cli
dec
lretw
mov
arpl
lret
lds
add
cs
jbe
pop
jg
aad
fildl
pop
jnp
mov
push
lea
add
xor
push
cmp
push
std
xlat
fildl
in
xchg
sub
bound
subb
mov
xor
xchg
mov
bound
mov
add
lods
int3
sti
test
fisttps
add
aad
sub
lret
in
mov
mov
nop
xchg
add
push
fdiv
in
hlt
pop
sub
movsb
adc
jo
mov
add
dec
fs
sbb
pop
mov
inc
xchg
in
aas
stc
out
push
pusha
data16
js
xchg
nop
mov
cmc
mov
movsl
add
jb
das
dec
daa
loopne
lea
inc
lods
sbb
ja
xchg
jl
neg
loopne
nop
out
and
pushf
add
outsb
pop
add
jecxz
pop
jb
daa
mov
fs
adc
aas
mov
dec
mov
push
ljmp
lods
outsb
push
mov
mov
fistpl
data16
pop
cld
mov
cmpsl
or
leave
das
add
in
xchg
fwait
xchg
inc
mov
stc
test
cmp
cwtl
imul
xor
mov
roll
sub
shr
test
push
shrl
add
mov
scas
repnz
pusha
sub
mov
cmp
push
xlat
sbb
gs
mov
xchg
pop
jecxz
xor
rdrand
push
adc
mov
sub
push
sbb
fbstp
fmul
pop
clc
add
pop
sub
or
mov
pop
dec
push
pop
test
jbe
jecxz
and
decb
fwait
pop
and
dec
into
fisubl
lahf
popf
xchg
movsl
ret
add
push
jl
xor
out
add
rcl
mov
inc
push
fidivl
jmp
dec
fwait
xchg
cmp
pop
sbb
testl
xor
mov
xchg
mov
push
push
adc
popa
aas
data16
lret
int
rcl
mov
adc
cli
popf
lds
shl
adcb
insl
subl
out
movsb
jne
repz
xchg
dec
loope
dec
inc
cmp
out
or
sbb
dec
pop
in
adc
nop
rcll
xchg
ret
jecxz
icebp
jno
fstl
add
inc
dec
or
mov
inc
lahf
cmpsl
nop
xchg
fiadds
outsl
aad
lahf
inc
pop
insl
xchg
cmp
cmp
imul
es
cld
test
popf
mov
xorl
shl
mov
mov
dec
push
fnstsw
mov
and
stos
lret
fwait
mov
aas
addr16
add
jl
mov
or
push
cmpsb
sub
push
pop
cwtl
xchg
mov
add
jmp
out
xor
in
in
ret
pushf
xchg
sub
in
fsts
jmp
int
mov
sub
roll
test
or
jb
or
add
aaa
cmp
je
mov
out
cmpsb
int
bound
dec
mov
or
je
mov
and
cld
sub
loop
add
sub
rep
jo
adc
dec
sbb
xor
ficomps
jge
xlat
mov
mov
push
pop
jns
lods
push
in
fdivrl
xor
cmp
shlb
jle
push
or
mov
inc
test
pop
mov
rcrb
leave
or
fwait
mov
mov
adc
imul
or
fcoms
pop
sarb
push
das
sbb
popa
mov
mov
shl
cld
rcrl
mov
enter
out
jl
rolb
jle
xchg
xor
or
ds
stos
aas
cs
push
dec
xor
push
cli
movsl
stos
call
ja
sbb
imul
sub
add
cwtl
and
fsub
ja
adc
pop
inc
cmp
mov
rcl
and
cmp
rcll
push
xchg
mov
sub
push
mov
jle
jg
cltd
push
rolb
fwait
loop
push
pushf
sbb
shll
inc
mov
cmp
data16
loop
js
or
mov
push
cmp
lea
repz
cmpsl
dec
in
movsl
dec
pop
test
ret
cmp
jo
mov
and
pop
pop
push
jns
stc
adc
fs
repz
mulb
clc
jae
xor
push
std
insb
mov
mov
add
or
adc
mov
ljmp
and
loope
mov
pop
in
pop
cmp
pop
ja
jnp
push
cmp
orb
repnz
dec
stos
mov
mov
fstp
push
pop
lret
xor
push
rorl
mov
lea
cmp
pushf
push
mov
or
aad
fistpll
shll
jecxz
repz
stos
mov
mov
les
mov
sbb
pop
xor
or
jae
mov
cld
hlt
loope
scas
pop
enter
adc
mov
insb
add
fsubr
jp
lods
aaa
je
bound
fbld
mov
or
jne
sub
sti
jbe
inc
cmp
das
mov
mov
scas
mov
scas
scas
add
lahf
xchg
lea
pop
aad
inc
cltd
icebp
pusha
jbe
push
outsb
jae
sub
fsubrs
lods
aaa
pop
loop
jb
cld
fadd
pop
or
add
dec
pop
mov
test
pop
ja
sub
dec
mov
fdivl
shlb
sahf
adc
dec
pop
add
jg
mov
fistpl
sbb
mov
jo
pop
push
mov
dec
dec
push
aad
xor
lret
or
mov
cmp
out
xchg
dec
stos
xor
and
cmp
mov
mov
adc
mov
xchg
lods
pop
sti
mov
rorl
jne
int
call
lret
nop
outsb
jbe
add
scas
add
mov
pushf
push
fisubl
and
cltd
in
fisubl
push
mov
cmp
cmp
outsl
dec
add
ficomps
and
test
sbb
lret
pop
inc
loopne
dec
or
ret
xchg
enter
imul
orb
sbb
lea
mov
out
adc
mov
cmp
ljmp
mov
mov
jl
rol
lock
sbb
push
or
cmp
push
je
cld
dec
loop
cli
xor
data16
add
dec
push
lock
xchg
int
push
mov
nop
cwtl
repnz
mov
scas
inc
aam
gs
mov
xchg
pop
cmc
push
stos
cmpsl
xor
and
mov
pop
sub
and
fstl
sbb
mov
mov
popa
push
arpl
sub
mov
sahf
pusha
sbb
mov
ret
inc
out
dec
ja
sub
mov
daa
push
pop
cld
flds
pop
icebp
push
loop
insb
pop
cmp
hlt
imul
xor
fbstp
adc
dec
outsb
cmp
cmp
push
inc
jmp
divb
daa
pop
dec
xchg
out
es
fdivl
lret
lds
sub
dec
mov
idivb
mov
test
in
mov
cli
stos
mov
int3
xchg
nop
sub
fistps
sub
pushf
mov
inc
movsl
daa
les
nop
cmpsl
cmp
xlat
adc
cltd
out
xor
cmpsl
push
fcompl
push
sbbb
mov
sub
sub
mov
mov
mov
push
mov
inc
xchg
cli
fisubs
fs
or
stos
popf
ret
xchg
push
inc
mov
cmp
popa
sbb
ljmp
sub
clc
scas
push
pop
xor
dec
test
fidivrl
sub
cmc
fs
lock
jo
arpl
sbb
andl
clc
movsl
cmc
imul
aad
jae
mov
dec
mov
fmull
and
pop
mov
fwait
push
jmp
or
mov
inc
fldl
or
pusha
mov
or
nop
dec
inc
mov
popf
adc
push
sub
inc
add
xchg
out
repz
loop
mov
ja
adc
add
test
fwait
gs
pop
ljmp
out
jb
mov
jno
mov
jmp
loope
pcmpeqw
and
rcr
jg
mov
or
ljmp
loopne
ret
int
xchg
jbe
push
lea
lods
sbb
cld
xor
scas
outsb
inc
sbb
mov
mov
push
mov
mov
lcall
lea
cmp
pop
push
enter
xchg
call
mov
outsl
incb
mov
adc
sbb
cld
sub
and
xchg
jp
test
lret
fisubrl
mov
xor
movsb
arpl
pop
xor
mov
pop
mov
jo
arpl
sub
mov
imul
and
cli
dec
mov
popa
push
sahf
pusha
sar
push
mov
dec
jl
cmpsl
cmp
jb
inc
mov
outsl
call
mov
jp
lock
cmp
sub
daa
fcoms
test
xor
push
popa
sbb
jmp
mov
js
jnp
xchg
shrb
lret
or
cmpsl
stos
mov
push
xchg
sbb
mov
enter
dec
push
in
jg
mov
lds
rorl
insb
lods
xchg
dec
out
je
loopne
rcrb
leave
out
fidivs
jo
rclb
push
lods
mov
or
mov
mov
pop
pop
xchg
bound
shll
xor
jb
pusha
ds
cmp
xor
loopne
adc
fdivl
push
xor
aad
in
int3
dec
mov
adc
add
fists
adcb
mov
xor
test
cmp
les
push
popf
dec
xor
or
cmp
je
je
adc
cmp
in
aaa
sbb
lds
es
ficomps
aad
movsb
pop
mov
imul
gs
loopne
popf
stos
mov
mov
jae
jmp
mov
in
out
lcall
shll
inc
daa
mov
clc
sub
in
mov
push
push
repnz
mov
scas
out
fstpl
sub
pop
push
pop
data16
lea
mulb
out
test
xlat
mov
fcmovnbe
xor
out
pop
xchg
ror
je
jno
push
mov
mov
sbb
sub
cmp
jae
xor
sub
lds
xor
cmp
hlt
cltd
push
arpl
je
inc
int
add
mov
icebp
rcrl
dec
add
pop
xor
iret
or
frstor
test
or
mov
mov
sbb
mov
daa
jg
xor
stos
and
inc
sbb
dec
divl
push
sarl
cmp
pop
into
mov
pushf
cmpsl
iret
ret
sbb
adc
mov
int
es
insb
icebp
xor
in
inc
daa
int3
or
jp
adc
inc
xchg
bound
cmpsl
inc
xorl
or
ljmp
cmp
jb
mov
mov
mov
add
fcompl
mov
in
jmp
lret
mov
mov
and
or
cli
stc
pop
int3
pusha
mov
rcll
pushf
fld1
aaa
pop
lahf
shll
sbb
clc
push
ss
out
pop
sbb
loope
outsb
sub
mov
or
pop
lea
data16
fdivs
ret
insb
pop
jns
xchg
xchg
lods
jmp
sub
in
addl
aad
lret
or
enter
jg
push
inc
mov
leave
int3
lahf
xor
or
fmull
add
xchg
in
and
and
int3
xchg
outsl
sbb
jle
hlt
cmp
jl
inc
cltd
mov
xor
push
inc
xor
sbb
lret
xor
inc
dec
pop
mov
test
fstl
sbb
pop
push
idiv
cmp
std
xor
clc
nop
insl
in
sub
add
mov
js
in
loopne
mov
push
xchg
hlt
jl
insb
adc
bound
jns
xor
into
and
test
iret
mov
dec
dec
inc
lret
add
mov
es
shl
xchg
mov
pop
je
mov
pop
loopne
mov
mov
jae
movsb
sub
pop
das
jl
and
lock
das
push
add
mov
or
imul
test
jne
add
repnz
stos
lahf
cwtl
movsb
xor
adc
movsb
outsb
adc
jmp
sbb
out
adc
adcl
icebp
xor
dec
movl
test
push
xchg
imul
mov
push
push
stos
and
fbstp
cltd
mov
fidivrl
aad
inc
xchg
xor
negb
sbb
cmp
inc
lret
out
in
or
in
cmc
pushf
daa
sbb
inc
in
gs
pop
mov
data16
mov
shll
movl
faddl
arpl
lret
cmc
xchg
sarl
pop
pop
addr16
test
xchg
push
rol
das
test
fstl
xchg
or
es
out
cmp
pop
bound
stos
pop
or
lods
push
movsb
pop
add
or
sbbb
sub
repnz
and
mov
inc
mov
in
notl
sbb
mov
cmpsl
and
lds
pop
mov
ljmp
clc
fildll
xor
push
ds
or
push
ficomps
sbb
adc
mull
insl
xchg
inc
ja
mov
nop
test
push
sbb
aam
sub
mov
fisubs
imul
shll
push
xor
iret
jmp
add
loopne
je
push
jbe
aad
aad
cmp
cmp
adc
mov
imul
push
aas
rorl
sti
ret
push
roll
stos
aad
xor
test
aaa
mov
sbb
or
cmp
mov
ss
call
int3
mov
jmp
push
lret
mov
mov
repz
negb
jl
es
pop
inc
xor
sarb
mov
sub
gs
pop
xchg
adc
movsl
mov
mov
dec
addl
sub
pop
cmpsb
in
xor
out
mov
hlt
ret
or
mov
loopne
adc
aaa
push
insb
call
push
loop
hlt
lock
sbb
outsb
xchg
test
test
mov
add
xor
arpl
das
jb
push
mov
push
cmc
fwait
sbb
test
ljmp
gs
add
xor
lret
mov
or
sbb
cmp
sub
mov
jle
mov
and
and
cmp
push
pop
cmc
hlt
pop
fdivrl
call
jmp
sbb
pop
ja
psubsw
push
push
and
stos
gs
sbb
xchg
sub
sahf
cmp
dec
in
inc
inc
and
test
xor
xor
jle
cltd
sbb
cmp
xchg
adc
vphaddwd
mov
or
and
sbb
mov
shl
gs
pop
addl
scas
andb
and
push
dec
inc
jb
push
loopne
xor
or
xor
mov
jl
xchg
int3
xchg
dec
divps
and
imul
sbb
les
popa
cmp
push
popa
add
add
dec
in
and
xlat
bsr
push
cmp
fs
incb
mov
jl
cmp
mov
int
fwait
mov
lods
in
stc
js
push
ret
dec
popf
adc
xor
xchg
aas
inc
push
lds
repnz
sbb
push
adc
adc
dec
xchg
jp
push
les
inc
pop
mov
inc
neg
loop
clc
fadds
lds
stc
aas
mov
into
std
dec
testb
fdivp
roll
jle
xlat
dec
pop
pop
in
sarl
cmc
cmp
call
repz
pop
xor
inc
loopne
sbb
sbb
rcll
in
test
scas
push
fsubrs
push
cwtl
popa
jns
or
and
mov
shll
mov
ja
rol
mov
fwait
mov
or
div
pop
inc
push
or
test
aas
out
or
push
push
adc
es
dec
and
xchg
lods
dec
pop
jnp
addr16
or
lret
insl
jge
jno
int3
mov
les
das
adc
iret
add
and
pop
fmuls
repnz
nop
xchg
lock
mulb
sbb
movsb
jmp
sub
aaa
pop
sbb
inc
ljmp
xchg
sub
sub
push
sub
pop
aam
repnz
scas
inc
adc
mov
movl
ds
scas
lds
lcall
int3
xchg
jg
pop
add
and
sub
push
fcompl
sub
fbstp
xor
fisttps
or
loop
das
stos
cmpsb
ret
sbb
fidivl
imul
pop
lcall
or
xchg
mov
mov
out
aam
insl
add
data16
gs
hlt
incb
jge
dec
ss
add
ss
and
loope
add
frstor
dec
inc
mov
add
mov
jecxz
lods
jnp
adc
ja
in
sub
xlat
inc
mov
fistps
daa
jno
ror
lds
pop
arpl
daa
push
outsl
pop
cmp
push
scas
cld
inc
ret
aad
mov
lods
or
mov
or
imul
push
neg
sbb
or
lret
pop
fisubrs
or
icebp
pop
outsl
addr16
pop
inc
repz
stc
xchg
mov
imul
add
xor
jl
mov
xor
test
insl
fcmovb
movsb
sub
xchg
pop
adc
dec
add
test
fcomps
jo
mov
dec
pop
jb
push
lds
stos
xor
mov
adc
adc
fwait
pushf
cmp
pop
aaa
int
inc
fsubp
data16
ret
sbb
and
and
mov
push
jo
gs
xchg
in
cmp
push
jge
pop
clc
ds
loope
pop
aas
repz
cmp
mov
or
movsb
push
ret
cli
repz
and
popa
xchg
jle
jns
mov
sbb
add
xchg
mov
cltd
ja
dec
sti
or
nop
mov
jo
xchg
in
dec
stc
dec
xor
stos
sbb
xchg
sbb
dec
push
sbb
fs
test
hlt
jl
jle
adc
mov
jb
enter
nop
loop
psadbw
push
cmc
pop
lret
in
mov
jl
out
inc
mov
enter
hlt
in
add
or
mov
cmp
cmpsb
add
push
leave
repz
pop
mov
sub
fistpll
adc
jns
inc
xor
rcl
jl
pusha
xchg
aad
inc
test
jbe
jmp
popf
lods
pushf
cld
push
mov
dec
lret
cmp
gs
fcoml
js
xchg
mov
pusha
xchg
out
cmpb
pop
or
ret
pop
imul
add
push
iret
das
xchg
arpl
xor
mov
std
or
fstpt
and
cld
mov
fdivl
das
and
std
mov
xchg
push
push
pop
pop
xchg
xchg
stc
adc
insb
push
ds
mov
daa
pop
jp
pop
and
jg
call
lret
mov
jo
fisttpll
les
sarb
out
cmpb
mov
add
cld
data16
dec
inc
pushf
cltd
cmp
sahf
sahf
rorb
pusha
pop
sbb
mov
fldcw
filds
dec
xchg
mov
scas
in
mov
fstpt
icebp
mov
les
ljmp
pop
out
cmp
mov
xor
lret
repz
bound
out
dec
cmp
sub
add
and
shll
shll
or
clc
sub
pop
call
mov
insb
push
mov
xchg
sti
adc
xor
out
and
xchg
shl
js
sub
xchg
xor
mov
das
ret
push
mov
cltd
pushf
adc
mov
into
clc
sub
je
mov
dec
jbe
and
andb
les
in
cmpsb
aaa
ret
mov
repz
filds
pop
sbb
loopne
jecxz
sub
fs
dec
dec
or
xchg
inc
or
aad
mov
mov
inc
sbb
mov
add
sbb
outsl
test
mov
sti
mov
shr
sbb
shrb
movsl
cmp
mov
sub
inc
cli
mov
and
xchg
xchg
outsl
scas
add
jo
sub
mov
repnz
adc
inc
ret
subb
pop
adc
int3
sub
scas
outsb
mov
scas
call
inc
cwtl
fcmovne
xor
add
popf
movsb
or
outsl
pop
mov
sub
push
xchg
inc
mov
sahf
aaa
repnz
sbb
pop
push
add
rclb
mov
adc
icebp
lret
les
enter
repnz
xchg
movsl
mov
clc
or
mov
mov
cli
movsb
jbe
pop
adc
aad
or
push
outsb
jns
and
sbb
loope
lret
shrl
ficompl
inc
xor
addl
ss
test
jge
fisubrl
cmp
ret
and
test
cmpsl
xchg
lcall
psrad
call
imul
sub
int3
rclb
shl
imulb
rorl
pop
call
fwait
adc
mov
adc
subb
cmc
in
mov
int
adc
cmp
repnz
stos
or
pop
push
popf
mov
lods
sti
inc
lret
dec
out
xchg
push
sbb
gs
mov
les
xchg
sbb
sub
stos
lds
int3
call
es
imul
scas
cmp
pop
sti
ret
cmp
call
test
mov
pop
add
movsl
jo
out
add
je
ficoms
in
test
lea
sub
xor
xor
or
pop
xchg
cld
shl
xor
and
mov
int
mov
xor
inc
dec
mov
cmp
cmpsl
rcl
out
icebp
xchg
and
js
mov
mov
add
xchg
ret
dec
sahf
lds
mov
add
fidivrs
xor
das
ds
stc
sub
cmpl
filds
and
cmp
inc
mov
jae
dec
sbb
push
pop
xchg
cmpsb
push
movsb
mov
int3
sahf
loope,pt
sub
xor
test
aaa
cmp
jno
jb
ja
ljmp
into
push
pop
pop
push
pop
dec
sbb
dec
inc
sbb
sahf
sbb
fxch
es
mov
insb
scas
in
push
test
lcall
aaa
xor
flds
orl
std
cwtl
jl
clc
stc
icebp
dec
loop
pop
mov
and
push
divb
inc
outsb
test
push
push
fsts
icebp
inc
stos
iret
pop
sub
xor
repz
cmc
jmp
bound
inc
bound
dec
int
js
push
lcall
cmpsb
inc
pop
outsl
mov
ljmp
int
jne
sub
scas
mov
cmp
int3
pop
jge
pop
jecxz
mov
xor
call
dec
add
stc
add
jb
shll
pop
mov
cmp
mov
push
inc
and
lahf
shl
in
nopl
pop
adc
call
add
in
inc
iret
pop
push
pop
fstl
jb
xor
dec
xlat
pop
out
imul
insl
sahf
jns
sti
dec
cmp
scas
stos
out
jns
adc
fcmovnu
xchg
mov
lea
scas
pop
test
adc
sbb
leave
xchg
lea
lcall
loop
cmp
lea
je
pop
pop
push
push
call
jo
das
lret
ret
cli
fwait
sub
dec
in
xor
ljmp
test
dec
fdivrs
sub
hlt
lahf
mov
dec
mov
inc
mov
pusha
xchg
dec
push
mov
movsb
xor
lods
div
mov
adc
xchg
idivl
loop
in
in
add
or
pusha
or
or
adc
push
repz
mov
cli
outsb
inc
filds
sub
xchg
adc
ja
push
clc
popa
pop
lret
out
inc
mov
fdivrs
jne
pop
mov
jno
or
in
lret
dec
rcrb
jo
push
jne
push
ret
pop
rorb
frndint
mov
aas
int
push
dec
xchg
shrb
add
pop
movsb
mov
fists
mov
repz
test
subl
fwait
inc
orb
dec
bound
lods
dec
cs
outsl
scas
lret
jecxz
jp
call
je
divb
loopne
inc
in
mov
cmp
pop
mov
push
je
lret
xchg
cwtl
mov
ljmp
and
aam
xor
ss
push
sub
in
stos
lcall
ret
jns
in
push
push
movsl
mov
mull
loopne
mov
inc
add
std
pop
and
addr16
cwtl
int3
int3
jns
stc
je
std
dec
shr
pop
xchg
out
sbb
stos
or
push
lds
call
pop
out
pop
cmp
adc
sbb
pusha
push
push
sahf
xor
notb
sbbl
mov
xchg
lcall
insb
mov
cmc
and
pop
insl
add
add
popf
aas
daa
mov
add
mov
leave
fildll
cmpsb
lcall
adc
outsl
cmp
inc
sar
outsl
dec
aam
mov
jecxz
mov
mov
jmp
int3
cli
aad
jne
ret
xor
add
add
jg
jno
dec
popf
xchg
jns
add
pop
inc
and
sbb
pop
leave
fdivrs
frstor
jo
mov
js
adc
popf
xchg
jmp
push
sbb
mov
inc
imul
fwait
leave
sbb
inc
jnp
xchg
out
xor
movsl
ret
jle
loope
test
mov
pop
addr16
in
syscall
jle
mov
fwait
adc
jl
out
xlat
sbb
shr
mov
inc
popa
fiaddl
rcrl
adc
bound
pop
mov
ds
xor
cli
push
dec
pop
ljmp
rcrb
mov
pop
mov
cmpsb
add
in
data16
and
repz
mov
cmp
je
sahf
and
aad
cld
cmp
nop
add
movsb
inc
and
sbb
shll
sub
mov
inc
test
mov
out
sbb
aaa
in
loopne
mulb
or
push
jnp
pop
mov
dec
test
icebp
loop
ret
mov
xlat
cmpsl
daa
jbe
xchg
loope
sti
dec
pop
push
movsl
bound
or
aas
dec
stc
push
leave
xchg
cld
leave
hlt
addl
push
jb
and
pop
lods
lret
xchg
and
fmul
lea
es
into
popf
mov
sbb
pop
cmp
sub
sub
in
push
fdivs
scas
add
xchg
pop
cmp
jecxz
repz
scas
addr16
or
fbstp
gs
and
sarb
add
mov
lahf
outsb
rcl
inc
pop
pop
in
add
cli
jmp
out
imull
pop
std
xor
mov
xchg
outsl
cmpsl
add
xchg
stos
and
imul
in
lds
outsb
icebp
or
shlb
cltd
push
imul
lods
mov
and
pop
xchg
xchg
adc
mov
xchg
leave
outsl
sbb
mov
outsl
pop
push
push
negl
daa
stc
xchg
fdivrl
aam
push
nop
mov
xchg
cli
mov
aad
xor
popa
xor
pusha
xchg
das
push
ljmp
pop
popf
movsb
pop
imul
push
push
imul
pushf
loop
adc
xor
cmc
xor
lret
movsb
out
sbb
mov
ja
mov
sbb
pop
jge
fs
push
pop
sub
xchg
shlb
fdivs
inc
arpl
cli
mov
push
and
jmp
movsb
xchg
aaa
enter
xchg
cwtl
mov
repz
scas
jecxz
sub
cmc
cs
xor
ja
cltd
push
mov
mov
push
int
sub
sbb
lods
xchg
adc
arpl
in
and
dec
loope
mov
cmpsl
mov
cwtl
mov
jg
lds
cmp
test
mov
xchg
cmp
sub
adc
cs
jae
mov
mov
xor
rcll
mov
dec
jbe
pop
or
std
mov
popf
mov
test
inc
cmpsb
fsubl
sub
mov
insl
xchg
inc
out
add
fimull
or
sub
mov
movsl
dec
cmp
icebp
push
negl
sub
xchg
mov
and
test
push
mov
test
pop
shrb
cmpsb
roll
xchg
pop
cmp
lods
adc
aaa
nop
or
fwait
push
dec
out
lods
bound
sbb
add
sub
aaa
jbe
ljmp
insb
sti
test
rcrb
push
add
and
dec
imul
mov
mov
sbb
mov
or
orl
je
sbb
inc
scas
out
es
scas
inc
das
int
in
iret
pop
into
aam
add
cmpsb
out
flds
mov
cltd
inc
and
outsl
cmpsl
dec
sbb
fsts
mov
mov
aad
imul
dec
sub
mov
lret
jb
mov
dec
int3
rol
add
loop
mov
xor
mov
sbbl
mov
mov
xor
cmp
mov
mov
and
arpl
je
mov
or
xchg
add
add
pop
sub
and
push
push
mov
sbb
es
scas
pop
or
int
jle
enter
clc
scas
sbb
jg,pt
adc
aad
xor
mov
inc
pop
adc
loope
popf
in
mov
int
popa
stc
out
nop
jp
mov
pusha
test
leave
shrl
rorl
pushf
sub
lret
orb
dec
push
call
inc
add
pop
je
js
fsub
clc
inc
and
test
dec
cmp
out
jb
fldl
xchg
out
pop
dec
inc
pop
push
out
cmpsl
mov
mov
fstpl
sbb
cli
mov
divl
lds
lret
call
pop
pop
sub
inc
aaa
cmp
int
rorb
pushf
sbb
stos
test
pop
jno
std
lret
hlt
stos
sub
jo
testl
xor
hlt
inc
iret
cld
adc
push
movsl
sbb
dec
ficompl
or
mov
outsl
xchg
xlat
pop
pop
scas
enter
pop
popa
push
jnp
mov
xor
pop
dec
sbb
pop
cwtl
scas
xchg
ficoms
xor
das
fcoms
movlps
sbbb
mov
stos
mov
es
jnp
dec
inc
pop
repnz
in
xchg
mov
inc
jns
hlt
or
sbb
leave
xchg
or
aaa
cmp
in
lods
dec
lret
jecxz
insl
pop
sub
xor
inc
mov
sti
and
and
push
mov
xchg
fdivrs
xor
mov
nop
add
push
push
mov
out
pushf
orb
dec
mov
cltd
jl
jecxz
cli
gs
sbb
stos
popf
push
inc
push
lahf
push
jne
cmpsl
loop
push
lds
mov
adc
mov
xor
mov
dec
mov
rcll
cltd
cmpsl
in
in
and
add
cmc
push
xchg
negb
pop
mov
gs
xor
inc
icebp
cmp
movsb
repnz
shll
cmp
push
pop
cmp
lret
pop
mov
sar
mov
jecxz
scas
cmp
push
mov
pusha
jecxz
aad
lds
mov
jb
sub
dec
test
pop
add
push
mov
insl
out
xchg
push
adc
ffree
daa
push
inc
adc
popf
nop
sub
shr
mov
mov
je
xchg
call
lods
cwtl
mov
pop
pushf
inc
nop
sub
ja
test
cmpsl
rol
loope
das
push
mov
add
stc
inc
or
mov
or
sbb
or
jecxz
or
mov
divl
fcomp
jp
shl
xor
cmp
lcall
xor
sti
inc
cmc
shrb
je
and
cltd
and
lock
xchg
dec
and
bound
notb
inc
inc
stos
add
pop
jle
push
inc
ret
lock
ljmp
inc
jae
fs
into
scas
loopne
push
sbb
xorl
pop
adc
stc
adc
xchg
mov
outsl
dec
inc
aaa
or
adc
sub
adc
jl
add
icebp
repz
pop
out
fisubrl
jnp
mov
lea
aam
jp
jb
sub
pop
pop
mov
push
out
jmp
lea
shlb
and
push
lods
sti
sti
test
xor
in
or
lods
cmp
add
mov
icebp
iret
xor
int3
mov
sbb
out
lea
mov
es
and
cmp
mov
pop
jecxz
cwtl
call
dec
mull
and
lret
in
inc
xchg
xorb
jnp
jp
out
outsb
jmp
cmp
xchg
ja
cwtl
aam
adcb
outsb
and
ja
lret
push
lock
push
shll
sahf
mov
push
mov
push
mov
push
mov
inc
jno
pusha
inc
xchg
push
cmp
xchg
imul
add
mov
mov
mov
mov
and
mov
lock
loop
fmull
ljmp
cltd
fsubs
leave
sahf
jmp
adc
adc
adc
sub
jl
fstps
push
lcall
or
xchg
adc
mov
pop
dec
xor
xchg
icebp
clc
jmp
jle,pn
dec
aas
xor
sarl
clc
mov
xorb
ljmp
cmp
mov
dec
mov
leave
pop
aaa
jecxz
pop
inc
jmp
inc
popf
cmp
scas
sbb
divb
mov
xor
push
mov
stos
ss
jno
mov
loope
xchg
push
jo
int3
cmp
pop
call
push
stc
sbb
repz
adc
pop
mov
aad
push
push
mov
jge
xchg
enter
cmp
xchg
jmp
cs
sub
cmpsb
int3
repz
addr16
push
in
sbb
hlt
rolb
out
adc
popa
into
and
ljmp
inc
pop
mov
jne
fists
push
lret
mov
cltd
popa
jge
xchg
sub
sbb
test
cmp
jno
push
add
cwtl
xor
sbbb
mov
sbb
xor
popa
getsec
jb
lahf
lret
frstor
sbb
outsb
jmp
shll
ret
mov
sbb
fsubrl
dec
jl
sbb
sahf
not
test
shrb
add
insl
inc
sub
mov
dec
mov
hlt
in
xchg
or
mov
adc
mov
add
ret
push
fcmovnbe
xor
imul
cmc
and
mov
add
or
jp
cmpsl
mov
jo
popa
and
mov
fidivs
sarl
out
mov
push
and
or
and
jle
pop
rcll
dec
cltd
lea
lahf
in
sti
in
cmpsb
fisttpl
imul
push
lcall
cmpsl
pushl
sahf
out
or
mov
adc
fs
push
jmp
inc
cmp
ja
xor
outsb
inc
xchg
rcrb
inc
pop
jmp
push
mov
out
fidivrs
sub
repnz
iret
sbb
jl
or
inc
add
ret
test
and
stc
and
pop
lods
repnz
adc
cmpsb
xchg
lcall
es
ret
sbb
jmp
push
inc
pop
mov
movsb
rclb
jecxz
test
mov
loope
or
pop
or
test
sbb
mov
push
pop
adc
and
jge
jecxz
xor
addl
iret
test
sub
jl
and
mov
mov
adc
jne
cmpl
adc
stc
jg
das
mov
in
push
cmp
daa
xchg
cmp
imul
fistpl
cltd
cmp
sub
jp
sub
andl
lahf
mov
lahf
inc
jo
jmp
fnstenv
ja
int3
stc
in
and
push
cli
sarb
les
or
dec
jnp
mov
les
xor
xor
rorb
movsl
out
fisttpll
push
add
xor
cwtl
shl
jmp
or
lret
mov
call
dec
daa
xor
bnd
mov
sbb
push
xor
les
mov
test
push
lods
inc
std
jno
add
mov
insl
jno
ljmp
mov
insb
mov
ret
call
sbb
pop
lods
pop
jae
sbb
jp
testl
xchg
xor
shll
lea
xor
cld
adc
xor
cmp
cmp
mov
fistpl
inc
loop
push
scas
xor
mov
cmp
lahf
jne
push
mov
add
lods
in
jo
aad
xchg
mov
out
xor
and
mov
pop
jns
sbb
push
rcll
mov
out
int3
mov
scas
pop
stos
mov
pop
mov
inc
cli
sub
lea
or
inc
ret
or
pushf
aad
rcrb
xor
mov
xchg
mov
mov
xchg
outsb
sub
xchg
stos
mov
or
aad
enter
bound
dec
movsb
sbb
jp
lds
test
or
movsl
pop
sub
xchg
mov
fsubrl
inc
push
rcrl
mov
scas
add
je
sub
adc
push
in
pop
out
loope
add
loop
cld
xchg
dec
xor
je
pop
push
ret
das
cmp
dec
mov
xor
idivb
in
shl
xchg
adc
lea
pop
sbb
push
sub
imul
cmc
mov
xchg
ss
jbe
loop
test
mov
call
movsb
push
lods
mov
push
lea
leave
mov
push
inc
aas
add
filds
test
push
sarl
add
movsl
aad
sbb
sub
sub
pop
stos
test
sbb
pop
or
aaa
icebp
xor
in
lea
loop
mov
pop
sahf
outsl
mov
cmp
fists
int
movsb
es
loope
mov
arpl
out
add
mov
jecxz
mov
outsb
mov
stos
gs
jno
push
mov
sub
repz
push
cmp
mov
jge
jae
in
stos
loop
add
and
cmpsb
pop
imulb
lret
push
lahf
test
in
dec
out
xor
loop
sbb
jmp
hlt
cli
es
outsl
ss
jne
popf
and
xor
imul
push
or
adc
loop
aam
xchg
xchg
jo
mov
out
xor
std
stc
jno
popa
into
out
insb
lcall
sbb
cmp
nop
stc
pop
adc
stc
adc
adc
sbb
mov
adc
andb
out
das
aas
mov
testl
lods
cmp
repnz
pop
xorb
out
cmpsb
repnz
pop
xlat
aaa
xchg
jle
inc
jnp
xchg
outsb
cld
mov
adc
notb
shlb
pop
mov
sbb
or
sbb
testl
push
jecxz
movsl
loope
sub
leave
xor
ds
add
fwait
add
decl
cmp
cs
cmpsb
pop
pop
popf
les
ror
xchg
push
les
test
inc
dec
sub
inc
mov
jne
sbb
push
insl
fisubl
into
int3
pop
add
lock
insl
repz
cmpsb
push
sub
icebp
fistpl
and
mov
movsb
xor
rolb
lock
adc
loope
stc
add
cmp
rcr
in
lea
stc
movsb
mov
xor
sbb
outsl
stos
ror
fdivr
lahf
callw
je
movsl
aad
rolb
xor
mov
daa
test
sub
pushf
pop
ja
test
cwtl
imul
push
das
sub
lock
rcrb
lret
xlat
cmp
outsl
xchg
fistpll
cmp
sub
test
test
je
dec
jno
lods
hlt
pop
iret
aaa
inc
cwtl
dec
daa
jl
jecxz
call
subb
lea
sub
add
inc
push
pusha
xlat
mov
sub
push
dec
aad
out
rcll
pop
gs
ljmp
add
mov
popa
pop
dec
adc
mov
out
popf
arpl
int3
push
sarb
mov
dec
sub
and
sbb
xor
xchg
push
mov
push
jl
or
mov
insl
test
outsb
dec
lret
xchg
mov
aam
das
sbb
push
inc
inc
or
inc
xchg
in
fisubs
cmc
or
sbb
std
cmp
adc
xchg
rolb
inc
sbb
jo
pop
jp
mov
mov
je
and
movsl
rcr
xor
sbb
cmp
inc
sbb
leave
xor
sub
lahf
aad
sub
loope
jns
or
hlt
pop
fdivrs
ja
fstpl
inc
cmpsb
out
idiv
sub
mov
aam
and
fdivs
add
fcomp
shll
pop
out
push
mov
fadd
aas
loope
push
and
lods
add
stos
pop
fildll
adc
add
popf
sbb
scas
xchg
jbe
jnp
or
xchg
imul
jle
cmpsb
adc
jl
xor
jno
test
hlt
jge
cmp
jmp
inc
jo
lea
test
dec
repnz
sbb
mov
loop
leave
inc
cmp
cmpsb
xor
mov
fsub
ja
jecxz
mov
lcall
pop
xchg
movsl
scas
movsb
sbb
rorb
rcrl
cmp
ljmp
not
mov
fcompl
dec
sub
dec
mov
cli
lds
jecxz
arpl
lret
push
and
xchg
jb
scas
lret
es
or
cmp
int3
mov
xchg
add
add
jmp
aam
test
int
bound
test
inc
jne
fmulp
sahf
xor
sub
out
xchg
sahf
sub
sub
push
arpl
jo
cli
mov
loop
lret
inc
xor
and
scas
fcmovbe
add
jo
mov
sbbl
sti
nop
pop
ficoml
lods
sub
cmpsb
xchg
sbb
mov
push
dec
icebp
shlb
mov
sbb
or
jbe
aas
inc
into
insl
test
inc
test
bound
jecxz,pt
repnz
lods
inc
movsb
fisttpl
stc
or
cmp
test
cmp
push
cmp
stc
xor
jo
pop
filds
orb
popa
lea
pop
cmp
inc
jbe
jne
cmpsb
mov
sub
xchg
stos
std
pop
inc
cmp
bnd
mov
aam
imul
xor
rcll
push
mov
sub
inc
jbe
js
les
lods
incb
xchg
jg
dec
dec
scas
loopne
cmp
sbb
insb
jo
in
mov
jmp
inc
xchg
repz
lret
sub
nop
fdivl
ljmp
std
add
std
xor
xchg
sbb
lret
insb
cmc
rcll
or
cmpsb
mul
sub
shrl
out
sarb
insb
nop
aaa
xchg
rep
dec
outsb
cs
fildl
lcall
pop
add
push
mov
shll
cs
jge
shlb
insb
into
mov
out
jecxz
xchg
pop
adc
or
sbb
jecxz
or
push
movsl
jl
xor
nop
or
addr16
and
rcll
cld
dec
jmp
sub
enter
push
jb
loopne
push
push
or
adc
fwait
mov
sarl
cmc
xchg
test
cmp
xchg
push
inc
imul
leave
jle
loop
movsb
scas
xor
subb
xchg
mov
popa
mov
jno
insb
iret
and
je
push
movsl
mov
cmp
cmp
add
and
lcall
sbb
out
out
push
in
ja
out
xchg
out
jns
faddp
test
loop
adc
cmp
aaa
hlt
and
mov
bnd
sbb
or
xchg
imul
clc
sbb
js
std
cltd
mov
cltd
ljmp
sbb
inc
mov
scas
add
inc
mov
insl
cld
xchg
sub
call
pop
pop
xorb
repnz
or
ds
jmp
add
and
inc
mov
or
icebp
or
xchg
pop
sbb
mov
push
es
sarl
insl
and
and
fisubl
movsl
out
std
imull
jne
pop
lods
mov
and
in
xor
aas
cltd
mov
clc
arpl
adc
sbb
test
icebp
shll
sbbb
movsl
out
pop
mov
lret
sub
gs
pop
js
mov
adcb
enter
and
push
aas
sbb
pop
aaa
rorl
loope
fwait
mov
cmp
data16
pop
lea
js
movsl
mov
pop
add
pop
sarl
jecxz
sahf
sub
sti
mov
imul
cmp
or
aas
mov
mov
or
sti
movsl
mov
fnstcw
cmp
pop
xor
xchg
jge
cltd
nop
in
pop
mov
add
icebp
adc
xor
nop
mull
loop
cmpsb
and
mov
pop
outsl
sahf
mov
mov
dec
cli
insb
sub
xchg
or
lds
mov
or
push
in
jb
sbb
movsb
fisttps
adc
popa
in
sub
fnsave
std
cmp
ficoml
lods
ja
xchg
popf
cld
insl
mov
out
cmpsb
sbb
sub
xchg
or
int
sbb
push
arpl
mov
dec
push
mov
fsubp
jge
clc
in
sti
and
xchg
into
mov
fmul
mov
repnz
negb
stos
ficompl
lock
adc
fwait
leave
jnp
rcr
lret
and
in
outsl
scas
xor
fwait
mov
cltd
cltd
xchg
cltd
insb
push
dec
pop
xchg
mov
xchg
sbb
push
daa
sub
insl
sub
or
jb
sahf
adc
xor
pushf
stc
mov
xlat
xchg
dec
subl
adc
mov
rorb
iret
and
adc
dec
xor
mov
rep
push
repz
adcl
sub
imul
dec
repnz
js
or
out
xor
pushf
push
jecxz
adc
and
movsl
cmp
add
popf
aam
iret
pop
stc
or
es
cmp
jmp
aaa
fwait
imul
into
xchg
pushf
repz
ljmp
prefetcht0
jo
test
jmp
sarl
sbb
pop
jno
jae
movsb
je
aaa
or
mov
push
jno
pop
add
pop
lret
lret
stc
fsubrs
mov
mov
pop
inc
pop
mov
jne
mov
stos
test
add
push
adc
decl
xchg
ficoml
scas
loopne
test
js
in
fwait
pop
insl
aam
adc
dec
xlat
notl
dec
inc
movsl
cmpsb
and
mov
dec
int
jp
aam
sbb
fsubrs
sub
sub
addb
insl
jne
cmp
mov
jnp
mov
test
jmp
mov
insb
lret
mov
pushf
adc
sub
les
dec
cli
jnp
jp
loop
rcrl
lea
insl
xor
mov
xor
xchg
lds
dec
popf
cmpsb
aad
sub
jnp
mov
mov
xchg
adc
dec
add
out
les
dec
dec
adcb
sbb
and
fimuls
in
mov
repz
stos
mov
fistpll
push
mov
fdivs
popa
jl
xor
jnp
out
push
aaa
inc
cmp
add
outsb
pop
dec
fnstsw
sbb
or
fcmovnu
outsl
xchg
sarl
and
aam
js,pt
cmp
sub
test
jnp
pop
xchg
or
addr16
sbbl
adc
orb
repz
ror
aam
pusha
stc
jge
inc
mov
hlt
mov
sbb
sub
fcomip
sbbb
dec
cwtl
loopne
out
ds
xchg
nop
inc
test
cmp
mov
leave
js
xchg
cmp
push
pop
add
les
subl
ds
add
lahf
addb
sub
pop
out
sbb
xor
xchg
cli
int3
xchg
pusha
lret
mov
imull
xchg
loope
ja
push
jb
adc
jbe
mov
mov
repnz
in
das
repz
popf
xlat
mov
repnz
jle
cltd
jae
xchg
xor
sbb
cli
adcl
dec
cmp
fadds
push
push
add
xchg
ss
dec
inc
in
fmuls
rorb
cmp
jle
outsb
cmp
xchg
and
cmpsb
push
mov
inc
dec
stos
mov
lret
outsl
pop
dec
pop
dec
cltd
xchg
push
jge
es
shrl
mov
add
jl
popa
mov
loopw
mov
jmp
mov
es
mov
lahf
adc
insb
enter
out
in
xor
imul
adc
xor
sahf
pop
inc
adc
andl
mov
or
shrl
pop
loopne
lahf
mov
out
je
adc
lret
xchg
rorb
jecxz
mov
aam
cmpsl
pop
inc
fs
mov
leave
pop
inc
add
sub
push
lret
pop
mov
mov
adc
cli
stos
pop
or
adc
mov
or
std
or
repnz
pop
push
repz
inc
arpl
imul
mov
call
sbb
push
outsb
mov
sbb
and
push
xor
retw
sbb
mov
mov
cmp
push
mov
jae
lock
add
xchg
repz
jmp
fdivl
mov
pop
int
ffreep
add
jmp
aad
int3
push
test
xchg
and
xchg
out
daa
popa
test
inc
testb
fists
cmp
sbb
aad
sub
ficompl
dec
imul
in
cltd
pop
mov
mov
mov
add
or
fildl
dec
inc
mov
jge
cmp
cmc
cmp
loopne
add
pop
add
xor
js
mov
sbb
popa
push
cli
aad
test
cmp
out
add
sub
push
adc
push
jbe
xor
pmullw
call
xor
test
int3
xchg
addr16
or
dec
jo
xorl
jno
pop
nop
dec
lret
xchg
cmpsl
jp
stc
in
fld
scas
sahf
pop
pop
jo
lcall
icebp
jbe
mov
adc
movsb
push
pavgb
lods
pop
xor
pop
data16
jns
or
dec
sbb
jmp
iret
mov
data16
adc
adc
daa
bound
cs
iret
cmp
sbb
nop
push
push
xchg
jo
push
xchg
lods
pop
clc
das
insl
movsl
stos
push
push
or
and
xchg
fisttpl
ss
mov
mov
lock
jmp
test
or
decb
inc
and
orb
xchg
sub
movsb
add
mov
inc
mov
jle
cmp
std
imul
iret
in
cmpsb
bnd
mov
or
shrb
call
push
lea
mov
adc
adc
in
mov
test
lret
mov
jbe
and
fistpll
jle
and
xor
adc
gs
in
xlat
pop
out
sbb
jmp
mov
js
shlb
mov
push
jbe
xchg
in
pop
push
outsb
jb
or
inc
sub
and
xchg
mov
pop
shlb
mov
es
ljmp
sub
orl
jne
in
ljmp
xor
outsl
inc
sbb
cmp
roll
ja
xchg
inc
pushf
mov
stos
mov
lock
mov
pop
mov
mov
or
leave
jecxz
sbb
stc
arpl
int3
mov
lret
push
out
test
ds
incb
xchg
jge
dec
or
push
popa
jo
cmpsl
outsb
ljmp
scas
jb
ds
cmc
sub
pmaddwd
popf
fistps
mov
mov
out
andl
xchg
xor
subb
pop
aas
ja
cmp
sbb
stc
xor
lods
mov
scas
pop
popf
inc
xchg
pop
pushf
jle
pop
xchg
js
xchg
xchg
leave
int
cld
lods
push
mov
enter
mov
mov
jl
loope
cmp
lret
dec
mov
add
das
push
pushf
mov
push
lret
movb
jp
inc
divl
stos
or
xchg
mov
dec
in
push
data16
mov
maxps
sbb
test
push
div
aaa
sub
das
add
pop
cmp
inc
or
jp
arpl
aam
adc
out
mov
stos
or
pop
pop
push
sarl
mov
jae
in
pop
cld
mov
xorl
es
dec
or
lock
add
pop
cltd
add
adc
leave
add
test
test
test
lods
sbbb
mov
push
xorl
push
int3
xchg
or
mov
xchg
mov
repz
push
fstl
or
adc
test
cmp
mov
sub
in
xchg
cmp
or
inc
shr
imul
xchg
or
jmp
cmp
jl
sub
push
cmp
add
cmpsb
leave
je
cmpsl
and
mov
test
dec
test
push
loop
dec
dec
mov
fs
stos
sar
cmp
movsb
clc
cmp
outsl
pop
test
jns
rcll
outsl
xchg
xchg
and
scas
arpl
mov
jl
dec
repnz
aam
mov
std
mulb
mov
xor
popf
or
nop
mov
cmpsb
push
push
sub
data16
cmp
sahf
pop
add
std
inc
scas
sbb
pop
lods
fdivr
popf
sub
rclb
add
adc
and
dec
adcb
pushf
adc
jo
lods
pop
lods
shrb
call
sub
cs
call
pusha
push
decl
faddl
data16
cmp
pushf
out
int3
xlat
mov
cltd
ss
add
int
aas
arpl
jge
loope
inc
xlat
mov
mov
push
subb
cld
rclb
mov
fbstp
xor
sbb
addr16
dec
fwait
xchg
mov
pop
jmp
das
xor
aas
jo
outsb
out
xor
pop
xchg
mov
jne
xor
cmpsb
adc
inc
inc
test
mov
movsb
or
mov
sub
xchg
fnstcw
int3
mull
repnz
jne
pop
push
pop
stos
out
out
divb
push
xor
add
rol
xchg
daa
jle
push
mov
or
icebp
mov
mov
jmp
outsb
mov
femms
inc
mov
pop
clc
mov
es
cmc
imul
imul
push
xchg
ret
sbb
fwait
stos
pop
xorl
ror
sbb
jmp
psrlw
scas
iret
cmp
xchg
cmp
push
ret
and
test
sub
pop
pop
popf
lret
shll
fstpl
lret
push
pop
ss
push
rolb
repnz
inc
mov
jno
xchg
pop
xchg
push
into
gs
pop
cmp
jge
jge
movsl
mov
pop
dec
loopne
push
mov
rclb
popf
popf
loope
lret
fldenv
and
mov
or
adc
add
or
scas
subb
pushf
or
and
and
xor
sub
push
xchg
lods
in
pop
sub
mov
in
inc
push
out
push
jp
jl
jg
pop
lods
mov
mov
lret
test
clc
scas
repz
in
out
mov
mov
xor
push
sbbl
loop
in
or
jge
call
xchg
sbb
rolb
mov
xor
mov
xchg
rcrb
inc
daa
pop
mov
push
lea
int
idivl
shrl
mov
jmp
lods
je
push
or
push
push
xor
decl
mov
test
pusha
cli
xor
xlat
jb
cwtl
dec
je
xor
push
aam
push
mov
mov
dec
mov
fsqrt
into
ds
jmp
sar
jb
test
jge
pop
xlat
and
mov
sahf
ret
ljmp
call
sahf
enter
mov
sbb
add
inc
sarb
mov
iret
cmp
push
stos
fidivs
dec
inc
leave
mov
add
add
dec
aaa
stc
xor
aas
push
mov
mov
push
push
loopne
movsb
inc
jno
xor
sub
in
dec
mov
data16
bound
mov
sbb
cmc
scas
jecxz
cmp
push
xchg
dec
or
ror
sahf
fnstsw
sbb
mov
or
aad
push
and
jbe
leave
adc
push
loop
push
call
nop
daa
loop
inc
jb
bound
jecxz
inc
frstor
cmp
add
inc
push
push
ds
movsb
pushf
inc
sbb
add
sub
push
lods
jmp
ret
js
cli
adc
dec
pop
xor
int
push
lods
lock
leave
ficomps
jno
push
imul
sbb
stc
stos
sbb
test
pop
mov
mov
xchg
lea
xor
in
jl
repz
mov
les
daa
and
pop
std
stos
popf
lds
xchg
sbb
pop
stos
sti
call
insb
xor
arpl
leave
jle
in
shrl
cmp
js
cmp
pop
sbb
mov
sbb
insb
sbb
ror
jmp
adc
fucomp
mov
push
imul
test
repz
and
loope
mov
repz
arpl
xlat
cs
sbb
dec
int3
xor
jne
xor
pop
pop
mov
add
loopne
jmp
pop
sub
das
out
sahf
daa
out
mov
add
imul
add
shr
cmp
and
or
insb
and
mov
add
inc
or
mov
dec
mov
inc
popf
dec
or
xorb
push
lods
ljmp
jno
lahf
push
in
dec
shlb
sar
mov
sub
inc
jge
ss
mov
pusha
mov
and
call
in
pop
ret
fldenv
mov
mov
adc
frstor
mov
gs
fidivrl
cwtl
cmp
jg
inc
or
hlt
repz
add
mov
pop
ret
xlat
push
mov
in
aam
insl
decl
les
fsubrs
leave
dec
and
in
dec
fucom
jo
mov
das
push
inc
hlt
pop
scas
scas
out
sbb
and
adc
lea
push
mov
mov
xor
jp
xor
nop
add
scas
icebp
add
add
loope
gs
lea
xchg
dec
or
es
xor
sbb
mov
lea
leave
jle
repz
inc
push
shll
cmp
js
out
ss
pop
int3
sbb
mov
xchg
inc
or
mov
mov
push
andl
xlat
test
sti
imul
lods
inc
jg
aaa
dec
sub
mov
mov
lock
add
aad
pop
cmp
pop
aad
adc
bound
cmpsb
pop
adc
ds
sbbb
lods
pop
xor
mov
popf
jl
jbe
lea
and
dec
pushl
lcall
in
call
popa
jns
inc
ret
jnp
add
jp
and
inc
mov
jbe
negb
and
imul
mov
xor
leave
adc
add
into
sbb
inc
pop
repnz
inc
stos
pop
and
popa
or
add
add
test
jno
dec
cli
sub
daa
add
bound
xchg
adc
pop
mov
mov
xchg
inc
pop
push
int
or
pop
jns
movsl
mov
out
icebp
pop
test
mov
pusha
xor
push
mov
mov
mov
mov
not
incl
ljmp
aam
aas
push
mov
inc
dec
dec
rcrb
stc
sbb
pop
add
cmc
popf
push
cmp
mov
sahf
es
jno
mov
lock
xchg
push
leave
mov
es
pop
dec
out
add
fildll
lahf
fnstenv
xor
pop
push
out
es
jl
movups
jp
cld
mov
mov
outsb
js
loopne
pop
repnz
pusha
mov
repz
daa
arpl
inc
adc
out
lret
in
jae
lcall
sub
ss
ficompl
push
push
adc
sub
push
call
dec
mov
fstps
aam
cmp
imul
in
inc
lods
lcall
push
arpl
test
imul
shll
test
push
or
es
jp
in
test
cmc
mov
jl
sbb
dec
enter
je
sti
xor
sub
or
jae
fisubs
test
xor
add
subb
or
cld
jmp
rorl
ret
mov
rclb
nop
mov
jecxz
mov
sti
repz
mov
inc
scas
outsl
and
mov
ror
or
lret
sub
out
imul
mov
clc
and
and
test
je
sub
mov
dec
push
push
stc
adc
add
dec
int
or
push
aam
mov
cmpsl
int3
cmpsl
hlt
sarl
jle
enter
jno
int3
dec
jnp
arpl
int
scas
adc
sbb
lods
scas
push
inc
mov
outsb
mov
rcll
sub
sahf
sub
out
enter
jo
and
outsl
imul
lcall
dec
sub
fdivrp
pop
clc
orl
pop
xchg
jb
jns
jae
cmp
cmp
push
mov
jb
clc
ds
js
adc
js
sbbb
add
mov
dec
jns,pn
mov
xorl
jecxz
outsb
pushf
xchg
jmp
flds
imul
mov
or
xlat
cmp
sub
pop
jne
movsl
mov
push
push
mov
pop
xor
or
cmp
sahf
outsb
call
jge
jns
adc
mov
lcall
call
stc
mov
ret
pop
int3
fcmovu
cmp
fs
enter
sarl
sub
xchg
js
sbb
pop
add
addl
cwtl
inc
jge
sarb
lock
or
xacquire
int
adc
ja
dec
sub
out
push
pop
or
mov
neg
imul
push
les
jp
enter
insb
and
fucomip
fstpt
xor
and
test
ret
aas
fldenv
push
push
out
cmpsl
fcomps
jae
hlt
jecxz
shl
testb
or
inc
xchg
repz
ljmp
addl
sub
lcall
out
sub
pushf
and
and
insb
mov
push
repz
or
mov
jno
adcl
inc
mov
dec
testb
add
inc
mov
int3
dec
ret
sbb
and
nop
cmpsb
popa
decl
push
ret
jbe
xchg
ds
jle
or
inc
pushf
icebp
dec
mov
sub
xlat
pop
repz
lds
bound
sbbb
jbe
and
js
fisubrl
jge
ds
inc
hlt
clc
loope
jle
mov
mov
out
pop
sarb
push
rcll
call
fs
aas
sub
out
ret
pop
push
scas
out
orl
fdivrl
mov
arpl
pushf
cmc
jmp
pop
lcall
dec
aad
out
xor
shll
test
test
sub
pushf
out
insl
mov
and
mov
jp
inc
leave
addps
int
or
jne
sbb
aam
repz
jp
ds
sbb
cs
lcall
add
and
push
jecxz
jnp
js
into
clc
mov
popa
pop
cld
or
orb
popf
and
push
sbb
mov
cli
inc
sub
cmp
mov
das
and
mov
test
xor
stos
ss
daa
cmc
and
dec
or
nop
icebp
cmp
pop
push
mov
add
or
outsb
sbbb
inc
inc
les
sub
push
mov
pushf
sbb
dec
jl
loope
sarl
cltd
mov
mov
scas
stos
sub
mov
lea
mov
inc
add
test
scas
fdivl
sub
jbe
and
cltd
in
faddl
and
and
push
xchg
mov
or
jg
mov
call
aas
xchg
xchg
jge
jecxz
dec
push
andl
and
and
test
pop
xor
repz
pop
xchg
push
call
adc
ljmp
or
adc
cmp
dec
jne
lods
mov
lods
int3
add
xor
xchg
fsubr
inc
and
out
data16
push
mov
sub
pop
repz
bound
inc
xchg
mov
and
into
in
sub
jge
mov
ja
dec
mov
sub
push
dec
lret
fwait
rcr
mov
mov
push
and
bound
out
dec
pop
rcrb
sub
nop
fwait
sahf
mov
xor
shrb
mulps
gs
addb
loopne
or
add
inc
mov
sub
mov
jb
ss
shlb
pop
mulps
sahf
add
sahf
dec
pop
les
add
jge
or
aaa
mov
jmp
mov
or
pusha
cmp
or
push
es
int
xor
dec
cwtl
cld
add
pop
and
fldcw
inc
les
or
mov
xor
push
xlat
xlat
jmp
imul
jg
xor
insl
cmpsl
pushf
xor
ss
fnstcw
jge
pushf
data16
lock
dec
enter
sbb
dec
xor
or
sub
outsb
pop
add
xchg
jb
cs
mov
adc
lods
adc
sub
or
bound
adc
push
cltd
mov
jecxz
adc
adcl
push
cmpsb
cmp
or
add
sub
or
xor
subl
adc
lret
cmc
sub
scas
ja
mov
cmc
mov
popf
enter
addr16
mov
jle
push
outsl
add
dec
addr16
repz
cmp
push
sarl
lods
nop
xchg
adc
fmull
loope
lds
fs
fwait
or
sbbb
xor
cmp
mov
repz
push
in
sbb
imul
xchg
rcl
mov
aas
pop
into
push
repz
scas
xor
pop
das
inc
sub
scas
std
xchg
and
mov
mov
data16
push
push
push
and
mov
add
shrl
jno
sbb
jge
sub
rcl
adc
adc
js
andb
sbb
sahf
lret
xchg
fidivrs
test
pop
mov
sub
pop
mov
inc
imul
mov
and
inc
not
ss
stos
mov
adc
mov
lahf
dec
mov
push
cmpsl
and
and
push
rcr
ficoml
das
mov
popf
movsb
shr
cmc
sbb
aas
push
cmp
rcrl
jg
and
push
pop
repz
adc
mov
or
or
out
mov
and
jb
repnz
imul
inc
push
push
std
imul
xchg
push
dec
mov
sbbb
xchg
movsb
dec
sbb
loopne
lds
aam
jle
in
lea
pop
pop
ret
dec
jnp
out
subb
iret
je
or
xchg
aaa
xchg
clc
adc
cs
lahf
sbb
and
test
aas
jnp
ds
int
mov
mov
into
jmp
add
dec
cwtl
xlat
movsb
and
clc
nop
push
inc
cli
js
push
or
add
cmpsb
popf
test
loope
or
jecxz
imul
mov
jg
adc
fmull
dec
js
test
ljmp
mov
and
jbe
fmul
shrb
ja
popf
adc
mov
sbb
cltd
add
mov
jmp
iret
loop
mov
fisubrl
daa
push
adc
in
inc
cwtl
mov
test
push
xor
ds
lods
cltd
aas
cltd
inc
fs
inc
inc
test
repz
fisttpl
inc
xchg
test
xchg
push
pop
aam
xor
dec
sbb
not
sbb
jmp
imul
mov
ror
mov
sarl
adc
jecxz
movsl
sub
sbb
or
mov
enter
lahf
mov
or
pop
dec
adc
lds
movsb
lock
sbb
cmp
shll
adc
movsb
out
loope
les
outsl
fs
movb
push
and
js
cmp
ljmp
sbb
and
xchg
pusha
mull
ljmp
jecxz
std
or
adc
fisttpl
imul
insb
xor
xor
dec
sbb
or
push
mov
repz
bound
push
pmulhw
pop
sub
dec
lock
jecxz
shll
sub
mov
ss
inc
out
jnp
mov
cmp
lea
xor
xchg
roll
xchg
pop
jno
stos
jg
loop
bound
dec
push
dec
mov
xchg
incl
xor
jecxz
lock
mov
mov
rcrl
nop
movsl
mov
push
and
addr16
or
rcrl
jae
xchg
ljmp
addr16
cmpsl
int3
cwtl
push
dec
push
insl
jo,pn
jl
cmpl
jbe
sbb
out
dec
fmuls
out
pop
into
sub
and
movsb
and
jmp
rcrl
out
sub
leave
mov
test
lret
push
popf
cmpsl
adc
mov
inc
pop
dec
and
lret
xor
push
sub
pop
adcb
mov
repnz
lds
gs
mov
mov
cld
cmp
sub
repz
push
hlt
mov
outsb
lahf
cmpl
sar
inc
ja
jo
pop
je
xor
jmp
add
pusha
jo
out
add
pop
and
cmpsb
repnz
dec
mov
aad
sub
xchg
lcall
push
add
jmp
adc
dec
sqrtps
cmp
ret
ljmp
shll
pop
data16
mov
lcall
lea
dec
xchg
xor
dec
dec
and
rorl
stos
into
mov
inc
out
sub
push
sub
jg
leave
xchg
mov
xor
jecxz
push
mov
dec
dec
andb
idivb
mov
pop
addr16
mov
jp
cwtl
jge
cmp
and
mov
shll
jno
cmpsl
inc
in
gs
std
insl
in
xor
idiv
bound
lret
in
out
rclb
jl
cmp
ja
push
push
or
mov
in
cmp
scas
ret
lret
call
aas
inc
xor
loopne
in
sub
and
lods
imul
std
sub
lds
scas
int3
add
addl
cmpsb
pop
push
add
add
pop
sub
push
shll
addr16
push
mov
fs
aad
stc
mov
int3
sbb
or
add
jge
or
and
lcall
dec
sub
pop
mov
or
add
es
fildll
int3
pop
insl
insl
pop
and
or
and
and
leave
mov
mov
push
push
adc
mov
xor
lret
ja
adc
jge
sbbb
push
push
xchg
shr
mov
and
cmpsl
in
xor
dec
add
repz
stos
fistps
mov
imul
inc
pop
adc
sbb
xchg
sbb
xchg
mov
jne
in
in
outsb
icebp
dec
or
in
shlb
aaa
shrl
jo
xor
dec
xor
dec
imul
shlb
scas
dec
push
ret
xchg
les
fs
mov
push
mov
dec
push
lcall
mov
push
pop
adc
gs
push
jecxz
push
out
aam
pop
mov
loope
gs
lea
inc
into
movsl
ror
cmc
mov
mov
sbb
iret
pop
fwait
pop
sbb
lret
test
lds
push
or
in
scas
negb
mov
sub
inc
add
lods
daa
iret
and
inc
cmc
push
mov
mov
sub
inc
lea
sti
sub
dec
jmp
jmp
sub
pop
adc
jmp
loope
jg
sbb
rcll
int
nop
jle
testl
test
mov
movsl
push
dec
xchg
cli
in
rcrb
push
adc
pop
dec
outsl
sub
frstor
jle
mov
in
scas
mov
sub
insb
daa
rorl
dec
stc
pop
shlb
mov
aam
addr16
mov
cltd
dec
lret
in
jns
adc
cltd
jmp
add
outsb
ljmp
aam
sub
push
jle
in
xchg
hlt
int3
sbb
scas
xchg
sbb
push
dec
aam
movsw
cmp
cld
imul
into
pop
arpl
adc
je
xchg
cmpsl
insl
stos
and
sub
push
rcrb
negl
xor
mov
repnz
mov
sub
jg
push
push
add
inc
jecxz
out
insl
xor
ror
stos
cmpb
mov
sbbb
call
in
les
ds
stos
fwait
scas
pusha
jp
jnp
call
jl
add
test
mov
or
inc
fucomi
cmp
rorb
aad
stos
aam
ret
ss
add
imul
ret
pop
mov
xchg
jne
aad
out
sbb
jo
aad
xchg
popf
mov
clc
mov
pusha
cmp
xlat
dec
inc
mov
cmp
jns
dec
push
imul
and
jne
jmp
sub
sbb
fs
inc
xchg
cmp
push
sahf
mov
or
fwait
addr16
repnz
xor
dec
mov
sub
cmp
jl
fwait
dec
inc
jle
ljmp
push
inc
pop
test
sub
pop
xchg
sbb
jne
popf
aad
into
lret
adc
frndint
mov
call
int
xor
xchg
mov
stos
mov
pop
pop
bound
adc
repz
gs
or
or
inc
ret
xchg
sbb
sbb
addr16
adc
push
jmp
out
push
popa
and
aad
dec
aas
rcll
add
sahf
mov
push
in
test
ds
xchg
jb
andl
jg
mov
add
inc
icebp
cmp
or
popf
xor
jbe
lcall
and
push
sahf
pop
sbb
mov
lret
fdivrs
data16
into
pop
aam
hlt
push
faddl
xor
xor
pop
xchg
cmp
fcmovnu
int
inc
es
sbb
cmp
or
mov
pop
mov
loope
xor
jno
roll
outsb
xchg
mov
push
leave
clc
mov
cmpb
fdivr
cld
mov
sbb
jno
jns
cmp
mul
cltd
test
jo
mov
sub
sub
and
test
lds
fwait
fs
test
add
bound
ja
leave
in
imul
mov
mov
decb
adc
jno
notb
mov
xchg
adc
push
mov
pushf
daa
pop
les
sub
mov
imul
rorl
lock
and
jl
repnz
pop
clc
lcall
movsb
lods
pop
push
das
hlt
test
aaa
pop
sbb
add
inc
push
sbb
inc
shrb
lret
inc
xor
mov
xchg
fimuls
loope
adc
push
dec
inc
push
stc
daa
jae
out
imul
jne
dec
dec
adc
popf
fbstp
jecxz
jb
xchg
sbb
aas
jmp
imul
test
fwait
push
orl
pop
inc
je
movb
sbb
push
and
and
mov
sahf
jl
je
aaa
sbb
pop
push
add
pop
fwait
test
addr16
mov
push
mov
dec
jno
push
push
sbb
cmc
mov
pop
out
pop
push
inc
dec
inc
cwtl
pop
or
bound
jg
stc
and
xchg
mov
push
lret
adc
aaa
jge
call
scas
push
mov
out
cmp
or
lret
jmp
stos
out
sbb
je
xor
mov
push
lds
push
mov
lret
sahf
mov
xchg
adc
jle
push
dec
xchg
pop
in
cmpsl
dec
sub
fwait
mov
test
or
ljmp
mov
std
bound
jbe
inc
sub
sbb
dec
or
mov
mov
or
in
outsb
push
dec
jp
lods
lods
pop
inc
sbb
mov
test
cmp
or
pushf
pop
arpl
mov
loop
xchg
insb
inc
push
cmp
sti
js
scas
sti
ds
fdivr
xor
arpl
push
pop
add
mov
sbb
xor
movsb
xchg
arpl
roll
cmpsl
jns
dec
jp
loope
or
fisubrs
cld
ljmp
dec
mov
xchg
sbb
jl
push
inc
lret
enter
pusha
aas
je
pop
dec
fistpl
fbstp
cmp
cmpsl
dec
iret
mov
push
dec
or
test
xchg
add
int
repnz
clc
mov
pop
outsl
mov
sbb
rolb
pop
lds
repnz
imul
adc
sbb
and
test
pop
inc
gs
jno
arpl
movsl
pop
std
bound
or
jmp
cmc
sub
mov
push
dec
pop
sub
mov
imul
insb
and
aaa
mov
sbb
pushf
leave
cs
push
lods
clc
scas
adc
aam
mov
inc
fmul
iret
cmpsl
fistl
xor
sbb
out
test
and
adc
jmp
data16
pop
out
inc
jnp
sbb
pop
insb
pusha
es
sahf
xor
lret
fldt
pop
sbb
pop
das
into
inc
into
ljmp
pop
dec
sbb
daa
jmp
xchg
xchg
ljmp
ljmp
push
xor
sub
xchg
mov
sarb
test
lret
xchg
sbb
xor
adc
mov
add
mov
stos
mov
cld
pusha
lods
loopne
loopne
repz
fdivr
mov
out
les
lahf
xchg
cmc
lock
fimull
pop
adc
and
ret
adc
testl
das
inc
sbb
fiadds
rcll
jp
lds
sub
push
jg
std
popf
in
daa
mov
sub
lcall
je
lods
or
test
mov
loopne
dec
out
and
mov
pop
mov
mov
sbb
mov
andb
xor
ret
scas
stos
roll
or
js
imul
notl
out
pop
add
pop
sahf
mov
sub
pushf
pop
ret
faddl
and
sahf
xor
std
or
cltd
cli
pop
jnp
inc
xor
mov
dec
pop
mov
sub
jae
gs
add
or
push
or
xor
popa
push
repnz
lret
cmp
fwait
add
cmp
cs
pop
sub
mov
xor
enter
js
in
frstor
and
into
jge
aam
mov
lds
bound
mov
into
outsl
addb
shl
sub
ss
inc
filds
sbb
lock
mov
mov
out
addr16
inc
adc
int
mov
out
je
jg
scas
xchg
mov
jne
or
fsubl
pop
ds
andb
sub
inc
rcl
jae
ret
mov
hlt
lds
inc
add
adc
pop
sbb
push
cli
in
loopne
imul
sub
outsl
loope
and
in
aam
std
xchg
fnsave
add
sti
stos
ds
jge
adc
in
inc
out
aad
mov
xchg
repnz
pop
fcoml
rcll
jns
imul
cmpsb
mov
sarl
xchg
mov
outsl
stos
ficoml
popl
dec
mov
gs
daa
fwait
jge
fnstenv
or
jmp
adc
cmp
pop
and
pop
xchg
push
push
js
xchg
jmp
mov
cwtl
cltd
jnp
mov
xchg
xor
ret
add
aaa
sahf
push
movsb
insb
or
loopne
push
pusha
scas
mov
sbb
push
pop
mov
pop
add
pop
xchg
ret
or
jge
sbb
adc
mov
jno
adc
mov
loop
in
inc
xor
adc
mov
lahf
out
rcr
lods
sub
jg
addr16
sti
cmc
ja
mov
mov
inc
rcrb
mov
sbb
adc
fists
and
daa
xchg
addr16
push
out
popa
pop
mov
mov
jae
popa
inc
adc
fmul
dec
cmpsb
mov
jmp
ret
js
mov
popa
inc
je
fcoms
sbb
push
rcrl
xorl
mov
push
push
or
aas
jne
dec
push
ljmp
stos
test
cmp
clc
js
sub
jge
mov
xchg
jo
jmp
lret
dec
jge
xlat
cmp
loop
lahf
push
subl
out
or
push
test
sti
cmp
dec
mov
arpl
pusha
cltd
mov
mov
lea
add
jmp
push
sahf
in
mov
xor
add
xchg
js
inc
out
mov
xlat
arpl
insl
lock
lcall
pop
cmp
popf
xchg
xor
cmp
repnz
inc
out
addr16
pop
push
sbbl
jmp
scas
add
das
or
cwtl
dec
push
mov
sarb
pop
lods
test
fsubrl
out
dec
rcll
add
lods
loope
sub
stc
negl
lcall
popf
inc
ror
mov
js
xor
or
loop
jnp
xchg
out
push
andl
mov
imul
mov
shrb
insl
push
adc
mov
fdivl
es
mov
inc
mov
ja
rcll
sbb
popa
pop
mov
cmp
mov
aad
jno
hlt
fimuls
ficoms
scas
clc
fists
shll
fwait
dec
sbb
clc
repz
mov
sub
pop
cli
icebp
push
fimuls
cmp
pop
into
sub
add
pop
mov
adc
pop
dec
push
and
movsl
add
les
ret
iret
jo
xchg
rol
jo
sbb
shrb
xchg
shl
shll
xchg
sub
andl
mov
sub
fidivrl
aas
lods
cmp
shrb
jae
das
jne
jbe
and
ficomps
mov
cmp
mov
push
lds
hlt
fistpl
mov
rolb
outsb
jg
pop
ljmp
lock
pop
inc
inc
mov
pop
mov
jle
cmc
pop
bound
popf
cmpsb
jecxz
inc
jb
in
scas
sub
std
negl
push
ds
push
mov
mov
push
jo
subb
mov
xor
aaa
add
cs
xchg
sti
rorl
sbbb
add
repnz
fdivp
dec
ficomps
scas
mov
dec
gs
js
cs
leave
add
into
cwtl
jae
mov
mov
push
pusha
je
mov
int3
std
mov
jl
ljmp
imul
fisubrs
je
xor
mov
test
or
mov
stos
xor
fsubs
aas
clc
xchg
movsb
and
push
push
test
sbb
jmp
movsb
int
adc
add
and
mov
jmp
sbb
xor
mov
dec
cmp
xchg
and
sub
cmpsl
cmc
into
fnsave
xchg
jbe
fs
adc
pop
push
push
mov
pop
cmp
in
in
sbbl
pop
push
out
into
gs
fcmovnu
ja
les
leave
cwtl
inc
in
sbbb
jb
adc
ret
sub
lret
dec
aad
mov
pop
xor
xchg
push
add
cmpsb
mov
inc
mov
imul
iret
and
in
outsl
add
ljmp
or
jle
decb
adc
icebp
aas
mov
push
xor
dec
push
lock
xchg
adcl
sbb
pop
fstpl
cmpb
into
sub
and
mov
jbe
xor
and
dec
cmpsb
fsubrs
sub
sub
add
ljmp
xchg
inc
jnp
andl
or
fildll
mov
sbb
or
cmpsl
out
and
xchg
xchg
xor
ja
mov
push
stos
test
cmp
mov
movsl
mov
jg
cmp
and
xchg
inc
aad
adc
outsb
push
inc
fucomi
push
out
or
push
and
out
data16
sbb
xor
lret
movsb
push
xchg
dec
jnp
and
push
outsl
je
dec
mov
lcall
test
cltd
ret
les
adc
test
mov
fistl
jg
shlb
mov
push
pop
jns
stos
push
fsubs
stos
loop
ret
sub
cwtl
add
push
mov
jb
sbb
cmp
sbb
inc
pop
setns
sbb
fsubrs
call
fistpll
into
rcll
adc
cwtl
ljmp
cmc
mov
lea
aam
aam
jno
mov
test
or
pop
inc
jns
pop
or
or
inc
xchg
dec
mov
mov
and
add
dec
inc
inc
sub
xchg
jbe
push
mov
jmp
sbb
cmp
jmp
pop
xorb
cwtl
lret
sbb
cltd
sti
in
and
xchg
ljmp
les
cmp
clc
pop
cmp
aad
inc
test
sbb
pop
xor
int
movsl
cmp
fdiv
sbb
shrb
adc
adc
ficompl
dec
fcompl
xor
popa
cmp
sbb
sbb
les
xor
repz
mov
adc
xchg
add
test
nop
imul
push
mov
pop
lcall
insl
xchg
pushf
int
sub
popa
pop
adc
in
pop
jle
test
push
lret
addl
test
scas
imul
test
inc
xchg
mov
xchg
push
sbb
push
xchg
sahf
mov
xor
push
mov
mov
scas
test
insb
and
outsb
dec
ja
mov
cmp
sub
lret
aas
cwtl
adc
xor
dec
pop
xor
mov
shll
je
dec
imul
jne
mov
imull
leave
fldenv
jmp
je
pop
and
mov
movl
arpl
pop
icebp
movsl
lcall
icebp
lds
add
jge
cmp
loop
xchg
xor
je
inc
test
xor
adc
add
insb
mov
stos
cmp
add
cmp
sbb
xor
add
and
aam
rcrl
imul
sahf
push
xlat
and
mov
ror
cmp
nop
in
mov
fadds
xor
in
dec
jo
rclb
xchg
mov
imul
fcompl
cli
dec
inc
push
fldt
aas
mov
mov
and
fildll
mov
mov
or
lcall
sbb
lret
scas
xlat
stc
int3
mov
repz
push
or
out
int
sub
and
outsb
sbb
mov
dec
fdivrp
xor
sbbb
xor
lock
movsb
jmp
cmp
pusha
ret
mov
fistl
les
xchg
ret
in
dec
push
int
sub
jae
push
mov
dec
ja
and
sub
push
mov
jmp
stos
jnp
jns
mov
pushf
shl
dec
dec
and
xchg
loop
inc
dec
negl
mov
icebp
add
jge
pop
cltd
rol
cwtl
jl
inc
adc
sub
mov
popf
sbb
fiaddl
push
mov
in
jo
mov
mov
jbe
push
or
aam
iret
rcrb
xchg
ja
in
inc
adc
xchg
jns
and
mov
dec
jbe
pop
mov
inc
adc
push
xor
mov
dec
add
pop
icebp
testb
gs
mov
adc
int3
xchg
xchg
pop
dec
repz
mov
daa
xchg
adc
outsl
out
push
inc
or
idivl
scas
gs
push
or
out
jnp
aas
adc
lret
push
aad
add
xchg
or
fisubrl
push
mov
sbb
jno
mov
hlt
mov
lcall
subl
jo
inc
sub
jnp
pop
or
hlt
pop
xchg
cmp
or
dec
scas
mov
sub
cmpsl
into
push
xor
mov
outsl
jg
rcll
call
insl
jb
fisttpl
jge
andb
idivb
hlt
outsl
and
or
lock
hlt
xchg
call
inc
jge
leave
push
adc
sub
mov
mov
pop
or
fmull
mov
iret
mov
mov
inc
std
out
jecxz
add
inc
imul
jb
repz
sar
aaa
fildll
sbb
in
dec
inc
push
nop
addr16
mov
xlat
mov
add
pop
stc
mov
in
mov
shlb
sub
hlt
mov
dec
push
inc
pop
xchg
or
xchg
push
sahf
outsl
lea
mov
lock
movsb
test
mov
mov
and
stos
ret
mov
inc
cld
sub
insl
icebp
orl
adc
mov
jae
leave
mov
sbb
pop
mov
sub
ds
cmp
adc
js
mov
mov
sub
or
and
fcoms
fmuls
cmp
jecxz
inc
mov
add
in
repnz
enter
mov
jg
xchg
sarl
push
pushf
lods
and
xor
les
stc
add
scas
fdivrs
push
sub
sti
push
pop
rcl
std
sbb
adc
adc
cs
loop
sub
pushf
ljmp
cmp
pop
pop
fadds
mov
ja
add
rolb
cld
sti
orl
out
sub
dec
in
lods
mov
sub
loope
fcoms
mov
fld
dec
mov
loope
clc
cmp
ret
mov
sub
roll
sahf
pop
push
mov
fsts
cmc
pop
fmuls
sarl
adc
add
sti
or
adc
push
sbb
push
cli
sub
fcmovnbe
dec
fs
push
xchg
add
inc
pop
jo
notb
mov
push
sbb
ss
nop
outsb
or
std
push
cmp
cmpsb
addr16
fcmovbe
xor
lods
xor
inc
lret
fwait
test
iret
or
stc
repnz
lea
std
xchg
xchg
imul
lods
mov
jns
cmp
in
iret
mov
ja
dec
mov
xchg
ja
scas
sbb
mov
test
movsb
cmpsl
cmp
mov
sbb
jg
and
das
adc
cltd
dec
xor
and
inc
xor
cmp
sub
mov
xor
test
dec
in
mov
push
sbb
popa
aas
inc
test
lea
mov
dec
repnz
jnp
jb
add
jae
sub
test
test
scas
mov
sti
inc
jmp
jl
or
push
pop
pop
jge
int
dec
es
push
lea
jno
in
mov
je
das
sbb
push
vmovlpd
rcrl
inc
or
mov
cs
or
xchg
mov
shrd
insb
outsl
or
pop
fisttpl
gs
xchg
adc
dec
ficoms
adc
xchg
fsub
pop
jae
push
pop
push
mov
cmp
or
gs
adc
dec
inc
ret
jo
test
mov
imul
out
xchg
lret
hlt
push
mov
lods
push
mov
mov
xchg
fstpt
rcr
mov
stos
ss
cli
int3
inc
pop
daa
out
jbe
aaa
pop
fs
aad
mov
add
shrb
cmp
bound
push
fdivrl
sub
in
jae
ror
jbe
mov
mov
mov
mov
cmpsl
out
cmpsl
mov
movsb
stc
imul
sub
push
mov
or
dec
hlt
jp
fisubs
popf
stc
mov
fwait
popf
jge
sub
cmc
mov
test
or
xor
std
fwait
sti
and
out
faddl
mov
pop
in
fwait
cmp
lds
int3
sbb
insb
lahf
popa
mov
cmc
shll
jne
outsl
add
mov
repz
gs
stos
jg
int3
addps
dec
scas
pop
inc
mov
pop
and
xor
mov
sbb
in
mov
add
js
je
adc
cmpsb
ret
inc
mov
mov
int
fwait
mov
mov
jo
test
push
dec
int3
call
pop
push
jmp
pop
clc
in
inc
xlat
pop
lahf
mov
or
or
daa
stos
cmc
aad
jo
push
mov
ss
test
pushf
jae
dec
lcall
pop
xchg
mov
jnp
mov
jbe
fisubrs
adc
sub
add
cmp
xor
cs
mov
sub
inc
mov
mov
dec
push
xchg
mov
mov
xorb
dec
mov
aad
xchg
mov
and
sbb
ds
cwtl
cmp
pop
mov
aas
add
xchg
pop
scas
mov
gs
xchg
js
add
cmp
mov
lcall
mov
mov
lret
into
mov
in
add
popf
scas
xchg
mov
xchg
lock
and
loopne
add
xor
jns
jns
cmp
dec
in
xor
repz
dec
xchg
add
push
fdivrs
sub
inc
imul
lcall
fsts
fistl
dec
clc
mov
jbe
and
pause
lahf
fadds
out
mov
dec
stos
add
xchg
repnz
push
push
jl
into
cmpsl
cltd
ret
outsb
sub
frstor
and
xchg
shl
mov
pop
mov
fidivl
clc
or
dec
sub
leave
jbe
cmp
dec
and
in
xchg
out
mov
daa
popa
dec
jbe
jns
mov
sbb
repz
jo
sbb
jb
loop
jmp
push
cmpsb
push
int3
inc
mov
filds
and
and
in
xlat
sbb
jns
push
jl
movsl
repz
ret
jne
xchg
icebp
dec
push
sub
xchg
cld
dec
ljmp
xor
mov
test
popf
ja
mov
sub
popf
icebp
push
push
fcoms
sbb
push
mov
sar
bnd
jmp
add
imul
roll
mov
mov
mov
in
add
dec
adc
orps
sbb
jne
mov
push
mov
xor
sbb
jbe
push
inc
pop
pop
push
dec
loop
shrl
in
inc
fistpl
cmp
or
adc
sub
lret
xchg
or
rorl
ret
mov
shlb
dec
sti
or
pop
push
dec
mov
ljmp
cmc
inc
inc
adc
rorl
fsubrl
ss
dec
ss
push
cli
lcall
mov
pop
les
or
xor
lret
scas
out
cli
fistl
testb
push
out
adc
in
and
add
lds
scas
ljmp
mov
popf
pop
jp
syscall
lret
xchg
push
lret
cmp
fwait
inc
jmp
adc
roll
shl
popf
adc
or
pop
pop
cltd
fimuls
xchg
daa
addr16
ds
pushf
cmp
rorl
outsl
xchg
cs
test
adc
push
mov
inc
in
or
repnz
push
adc
pop
pop
fdivr
inc
shrb
cmp
mov
scas
push
jp
cmpsb
arpl
inc
and
dec
xchg
lret
out
and
insl
ja
xor
jae
xchg
es
sbb
mov
mov
pop
push
cmp
loope
dec
cs
fs
punpckldq
insl
push
mov
ss
cmp
mov
call
stos
test
dec
cwtl
inc
mov
and
js
xchg
xchg
xor
lods
xchg
add
xor
sti
lcall
test
sbb
sub
jae
fistps
std
sub
xchg
pop
inc
arpl
rorl
jg
cmpsb
xor
js
push
xor
push
sbb
sub
add
push
js
sub
sbbb
orl
xchg
mov
cltd
xchg
push
push
push
lds
xor
pop
test
rcr
jnp
xchg
aam
jmp
leave
lret
repz
int
xchg
cmp
shrl
out
pop
mov
mov
movsl
fcmovnbe
int
test
orl
fs
imul
mov
in
stos
mov
sbb
addr16
inc
popl
les
sub
test
loopne
dec
sbb
dec
dec
sub
ds
dec
xor
test
in
cwtl
xor
xlat
push
test
leave
adc
fs
sub
call
imul
nop
xchg
and
inc
dec
mov
xor
dec
sbb
ds
testl
xorl
mov
scas
das
mov
outsl
mov
movsl
add
insb
xor
and
sbb
xor
push
mov
pop
icebp
lds
hlt
nop
cli
icebp
in
and
lods
xchg
fistpl
ja
js
shlb
in
inc
adc
and
inc
jmp
mov
mov
pushf
arpl
enter
adc
inc
adc
in
pop
rol
in
pop
fstpl
mov
cmpsl
xlat
mov
cmp
add
inc
shll
fsubrs
test
push
adc
jp
dec
mov
pop
adc
cmpsb
add
xchg
mov
and
mov
push
in
xchg
mov
dec
sub
ss
sbb
shr
inc
push
lods
jle
adc
mov
scas
jmp
sarb
adc
xchg
mov
or
ret
mov
or
scas
fimull
fwait
repnz
out
inc
or
iret
sub
and
xchg
bound
xor
movsl
loop
cltd
mov
and
movsl
add
insl
push
pop
sar
lods
mov
lahf
into
add
xchg
or
xor
sub
jle
pop
inc
ror
adc
rcrl
adc
hlt
nop
rorb
push
les
scas
dec
jecxz
aas
popf
aaa
shrl
in
mov
test
and
adc
aaa
adc
dec
ljmp
sub
loopne
mov
sub
das
xor
jecxz
xor
mov
das
sbb
stos
jno
jle
lds
sub
sarb
jo
outsl
outsb
sub
and
scas
lods
mov
or
adc
push
or
pop
lret
jl
dec
lahf
sbb
fsubrs
sahf
push
mov
lds
imul
pop
scas
sub
dec
popf
adc
cmc
dec
std
cmp
in
jge
push
ja
and
jns
or
icebp
mov
sbb
jl
loop
xchg
out
push
xchg
std
adc
cmc
cwtl
aas
jle
push
cli
scas
and
scas
in
push
adc
int3
fdivl
xchg
add
mov
leave
jge
push
dec
xchg
fisttpl
mov
enter
ds
hlt
mov
cmp
cmpsb
cmpl
add
and
mov
sbb
mov
data16
enter
dec
aad
lret
or
xchg
xor
pushf
aad
cmpsl
pop
mov
icebp
xor
xchg
inc
lock
sub
dec
sbbl
mov
jnp
xchg
xor
xor
movsl
add
or
mov
ret
call
adc
mov
enter
stc
jmp
cmp
pop
and
jecxz
pop
pop
dec
mov
data16
inc
and
xchg
lahf
sub
int3
mov
push
in
lret
jl
das
mov
jno
xor
jp
imul
adc
lods
rcll
mov
mov
dec
iret
cmpxchg
adc
movsl
inc
mov
scas
repnz
add
pop
cmp
stos
or
mov
push
cltd
add
push
mov
ficoms
xchg
pop
xchg
insb
xor
stos
xchg
add
mov
mov
xchg
xor
add
jnp
and
xchg
mov
shll
inc
fs
xor
das
xor
cmp
cmp
xor
jmp
shl
rcl
loopne
cmpsl
push
pop
loop
ss
push
gs
ds
lahf
in
xchg
daa
dec
jns
push
loopne
xchg
xor
leave
push
sarb
or
sub
jle,pn
or
sub
popf
ds
jmp
sub
push
dec
dec
stos
movb
je
flds
and
cli
xorl
push
and
push
fsubp
ficoml
jg
add
dec
add
scas
xchg
iret
dec
nop
and
sbb
icebp
out
movsl
jae
mov
xor
adc
dec
aaa
xlat
sub
repnz
mov
pop
out
jnp
lea
jo
gs
lahf
sub
fs
or
mov
subl
cmp
cwtl
dec
popl
scas
dec
fld
insl
xchg
mov
es
dec
add
sub
clc
pop
std
lret
inc
xor
jns
test
cltd
xor
imul
xchg
div
repz
repz
cmpsl
adc
inc
and
scas
jmp
in
mov
mov
mov
imul
sbbl
lods
test
xchg
sub
cli
into
mov
cmp
mov
dec
or
movsb
xchg
mulb
or
out
xchg
cmp
test
add
das
cmp
mov
adc
or
rorl
ljmp
sahf
popf
out
fimull
pop
push
fisubrl
pushf
jns
mov
int
call
xchg
shl
push
inc
sbb
mov
and
inc
fidivrl
imul
jg
scas
sbb
push
pop
push
xchg
call
fiadds
or
mov
lock
cld
movsb
test
test
mov
xchg
adc
jno
pop
push
xlat
fnstcw
scas
xor
ljmp
fwait
mov
popf
loop
jmp
sahf
in
cmp
and
mov
jl
js
xchg
bound
sbb
lods
repnz
int
aam
aaa
push
sub
mov
insl
enter
xor
xchg
stos
sub
mov
dec
outsl
jbe
out
sbb
sbb
xor
movsb
add
mov
push
mov
stos
hlt
inc
xchg
adc
sub
mov
sub
xor
test
pop
aas
push
cmp
push
pop
movsl
inc
jb
daa
dec
incb
xor
mov
jnp
mov
lret
push
in
sbb
pushf
aam
pop
lods
xchg
xor
lods
lock
add
mov
cmp
and
insb
in
scas
add
inc
loope
xchg
repz
int
xor
in
mov
in
stos
xchg
nop
das
inc
add
xorb
xchg
adc
jae
aam
leave
xor
add
or
cs
adc
push
xchg
pushf
daa
xor
sahf
jb
inc
leave
aas
rorb
mov
inc
hlt
ds
fistpll
xchg
data16
push
add
mov
icebp
scas
adc
mov
xchg
leave
fcmovu
mov
dec
das
rorl
ja
dec
or
adc
pop
and
stc
inc
into
in
rorl
add
jno
push
xor
pop
hlt
ljmp
mov
inc
incb
pop
stos
sbb
or
rcr
push
push
cmp
mov
nop
pop
addb
add
jae
sub
sarl
outsl
mov
sub
jb
popa
push
sub
and
xchg
jns
pushf
fdivl
and
mov
adc
fisttpl
ja
pop
dec
aad
ljmp
into
in
mov
xchg
xchg
pop
insb
shll
jnp
jns
je
xor
bound
xchg
ret
sti
lcall
fstpt
fnsave
test
ja
cmp
cs
xchg
mov
mov
or
insl
push
repz
adc
pop
lods
fsubrs
dec
push
test
add
and
in
and
add
push
jmp
lahf
in
add
mov
scas
rorb
mov
or
push
push
fdivrs
sarl
loopne
adc
test
push
pop
xor
mov
pop
mov
std
loopne
inc
push
push
jmp
pop
push
test
rcl
ret
dec
pop
push
mov
mov
leave
push
in
mov
adc
jp
mov
dec
pop
mov
jo
dec
faddl
js
push
lods
pop
sub
cmp
mov
xchg
add
in
mull
repz
xchg
cli
fcomip
ret
pusha
cmp
addr16
cmp
fabs
sbbb
add
jbe
fsubrp
adc
mov
cli
pusha
ss
cmp
sub
dec
mov
lret
fsts
les
inc
jbe
in
fsubrs
stos
test
add
jb,pn
xchg
ja
mov
inc
lea
sbb
imul
xor
loop
jmp
mov
xchg
cmp
sub
arpl
xchg
call
jecxz
aaa
inc
lret
xchg
mov
and
pop
jne
mov
sbb
nop
call
jb
inc
loopne
icebp
cmc
push
sub
pop
sbb
nop
adc
mov
mov
push
jne
stc
push
inc
divb
dec
fsts
sbb
cmp
repnz
or
xchg
push
dec
jns
push
lret
mov
inc
sti
push
push
unpckhps
xchg
inc
fmuls
pushf
xor
mov
mov
push
xor
pop
push
jo
stos
mov
fidivrl
xor
mov
notb
cmp
std
insl
std
sahf
negl
mov
xchg
mov
pop
mov
daa
mov
pop
mov
sub
mov
negb
sarb
mov
push
or
test
xchg
dec
ja
mov
jnp
lcall
jge
insl
dec
inc
insl
push
add
ret
movsb
ja
daa
mov
ret
loope
roll
call
inc
pop
and
pop
je
xor
stos
mov
xchg
mov
xor
xchg
mov
mov
addl
movsl
aaa
out
jge
mov
repz
jns
jo
cmp
add
in
stos
xlat
pop
pop
ret
xchg
xchg
dec
sub
adc
cmp
fidivrl
jnp
sub
test
jl
dec
adc
lahf
push
nop
jmp
cmp
cmp
pop
scas
dec
cmpsl
dec
inc
mov
std
xchg
inc
pop
movsb
sbb
and
xchg
sbb
stos
loope
movsl
gs
adc
lahf
jmp
mov
in
pop
sbbb
sbb
in
and
push
pop
icebp
icebp
cs
xor
adc
sub
and
xor
lcall
pop
outsl
outsb
popl
xor
lret
ret
sub
mulb
nop
pop
scas
mov
inc
push
loop
out
addr16
cmp
mov
insb
lret
pop
sub
frstpm(287
inc
lock
push
call
roll
outsb
fldenv
pop
jle
sti
call
mov
adc
icebp
lods
pop
cmp
pop
adc
iret
int3
insl
sti
mov
push
adc
ficomps
mov
cmp
sub
sbb
fwait
push
pushf
dec
mov
popf
imulb
test
mov
out
lret
movsb
push
sbb
sub
mov
push
xchg
add
and
movsb
data16
jno
fucompp
sbb
aam
ficompl
xor
and
mov
inc
mov
pop
jecxz
pop
out
mov
mov
loope
or
push
aad
mov
fld
daa
mov
or
arpl
dec
ss
js
mov
ja
cs
pop
xor
adc
jno
cmp
ljmp
sbb
in
jp
add
adc
fnstcw
ja
test
jle
xor
gs
push
in
push
cmp
cmp
out
xor
cwtl
fbld
jge
in
in
xor
das
sub
or
fildll
add
xor
sub
mov
push
das
and
sub
cli
repz
dec
sti
sti
js
inc
orb
inc
push
pop
jle
std
es
insl
rcll
subb
sbb
or
mov
dec
jnp
test
sbb
popa
pop
shl
sub
gs
ljmp
leave
pop
adc
xchg
insl
push
mov
mov
aad
icebp
loopne
ret
cmp
repz
add
scas
mov
xchg
int
test
push
xchg
inc
int
sbb
fabs
imul
add
sbb
in
stos
popf
sbb
mov
ss
mov
and
adc
sub
pop
mov
test
inc
scas
jge
cwtl
adc
cmc
xchg
mov
dec
outsb
iret
shlb
adc
cmp
rcrb
push
sahf
jg
mov
xchg
mov
add
jbe
adc
sahf
mov
dec
mov
ret
mov
sbb
and
xor
mov
mov
loopne
loop
mov
sbb
xchg
cmp
ret
adc
shrb
dec
and
and
mov
imulb
push
sub
add
lds
jle
test
nop
fisubl
push
lcall
xchg
xchg
inc
pop
push
je
pop
not
insl
es
scas
sahf
dec
icebp
pop
jle
fisttps
add
iret
xchg
xchg
shrl
add
mov
dec
lds
push
sbb
mov
popf
sbb
je
mov
sub
lods
sahf
mov
mov
jo
xor
dec
cmp
test
dec
xchg
mov
sahf
mov
sarl
sbb
sbb
adc
xchg
xor
lahf
mov
xchg
lcall
aam
bound
add
push
cli
fldcw
mov
pusha
cwtl
test
pusha
pop
mov
cmp
sbb
push
push
push
aaa
push
inc
xchg
xchg
mov
loop
nop
pop
xchg
je
sahf
jno
imul
or
cmp
pop
loope
or
cld
in
xor
xchg
xlat
cmc
jno
xchg
mov
clc
test
push
test
pop
or
xlat
ficoms
jmp
loopne
cmp
aas
sub
pop
push
filds
jae
addr16
or
push
popf
icebp
jp
jae
or
xchg
lret
mov
nop
jns
div
mov
jecxz
add
outsb
jbe
xor
and
rorb
cmp
les
pop
xor
xor
xor
test
pusha
mov
ret
pop
mov
jno
movsl
inc
push
push
arpl
xchg
push
mov
ror
xchg
mov
add
test
jmp
out
cwtl
test
ss
fidivrl
mov
leave
loopne
aas
jl
inc
jo
imul
cmc
pop
sbb
jne
cmp
pop
je
push
nop
es
es
xchg
and
sbb
cmpsb
jb
testl
mov
test
and
loope
cli
aam
out
add
imul
jne
daa
push
pop
sub
push
movsb
lret
notb
cli
xor
mov
mov
cwtl
in
cmpsb
fnstsw
call
xchg
and
call
pop
loop
inc
xchg
sub
adc
lea
inc
and
inc
cmp
mov
cmpsl
andb
inc
sub
popf
jmp
xchg
inc
xor
and
fistpl
and
lcall
jmp
rcl
sti
ds
xchg
dec
pusha
cltd
add
lods
stos
sub
and
mov
lahf
out
xchg
fwait
leave
mov
aaa
test
mov
mov
and
sub
dec
adc
out
push
inc
test
add
mov
imul
sub
call
mov
mov
xor
shrb
mov
xchg
jno
xchg
leave
xor
add
lahf
sbb
cmpsb
std
mov
pop
push
mov
sti
mov
icebp
ja
aam
stos
pop
mov
mov
imul
mov
imull
cmp
cmpps
sahf
pop
arpl
rcrb
insl
mov
repnz
sub
leave
rcrb
cmp
add
push
mov
mov
inc
push
xchg
mov
cmp
sbb
test
xor
mov
lock
outsb
cmp
and
push
sbb
stos
cs
xchg
scas
cvtdq2ps
imul
fwait
add
fwait
or
js
mov
pop
push
cmp
push
data16
inc
push
test
mov
sbb
sub
xchg
aas
adc
subl
jo
repnz
ds
mov
adc
xor
mov
outsl
dec
xchg
sub
push
or
adc
cltd
xorb
pop
aas
repnz
sub
mov
rorb
push
cmp
mov
out
jns
pop
or
xor
jge
mov
cmp
mov
jae
sahf
jecxz
and
push
out
xor
or
cmp
add
and
ja
cli
clc
imul
nop
mulb
dec
insl
xchg
add
aam
cmp
stos
enter
aas
xorb
int
xor
adc
add
mov
push
fucomp
enter
shlb
mov
sub
xchg
int
push
fidivrl
cmpsb
stos
mov
je
lret
push
loope
dec
push
dec
out
pop
aaa
fbstp
pushf
push
fadds
std
cmp
xchg
mov
js
sub
sub
push
popf
movsb
or
mov
xchg
push
test
lret
data16
pusha
or
lfence
scas
testb
leave
gs
inc
jmp
pop
out
mov
ljmp
cmp
sbb
dec
lret
lds
mov
fildl
notl
xchg
cmpsb
movsb
sti
pop
insb
ss
jmp
orb
iret
loopne
mov
xor
sub
lcall
dec
mov
mov
add
insl
mov
movsb
test
mov
xlat
orl
daa
fisubl
jno
mov
mov
and
mov
test
int
xchg
xlat
jnp
sahf
fcomps
push
and
lea
dec
sbb
mov
xlat
adc
out
pop
cld
inc
pop
mov
cmp
mov
movsl
in
insl
lahf
mov
test
xor
xor
lahf
lret
out
insl
imul
sub
mov
add
fstl
cmpsb
lock
lods
push
fidivs
jge
cltd
lahf
cmc
add
stc
jnp
mov
cmpsb
mov
dec
addb
dec
cmp
push
jns
mov
xchg
add
cmp
repnz
xor
inc
lahf
hlt
mov
stos
arpl
xor
sbb
repz
shrl
mov
mov
repnz
fildl
or
dec
sbb
xchg
arpl
fstps
xchg
data16
pop
xchg
add
mov
sub
sub
test
xor
mov
jae
and
in
mov
xchg
push
movsb
test
call
or
jno
hlt
lods
movb
cltd
js
xor
or
lcall
and
sub
test
pop
add
sbb
hlt
push
and
test
inc
rclb
inc
push
push
cmp
push
jb
or
icebp
repnz
add
test
mov
jp
xor
lcall
pop
adc
scas
int3
ret
jbe
push
in
xor
add
cmpsl
in
push
adc
outsb
jmp
pop
lret
dec
mov
fldl
add
inc
pop
mov
push
mov
aad
js
adc
cld
jb
sbb
xchg
ficomps
jg
xchg
xchg
lods
test
mov
insb
dec
xor
hlt
jle
cltd
insl
xor
testl
in
mov
fstl
mov
sbb
pop
lahf
adc
out
xchg
adc
jecxz
daa
xor
sbb
mov
aad
push
add
je
cmp
dec
inc
test
xchg
imul
scas
aad
mov
ss
pop
daa
pop
dec
mov
pop
pop
xor
and
jne
or
out
insl
sbb
scas
loope
mov
pusha
subl
test
dec
pop
out
inc
mov
and
push
pop
ja
add
vphaddubq
je
arpl
cmp
loopne
or
push
stos
push
or
rcrb
pop
cltd
cmp
fsubrs
leave
jg
xorl
enter
cs
ret
pop
std
inc
pop
ss
dec
mov
inc
orl
adc
cs
iret
repz
jne
lods
mov
mov
sarb
repz
imul
sub
nop
mov
dec
sar
idivl
pop
dec
decb
jo
filds
out
sbb
testl
aas
add
adc
sbb
push
sbb
enter
mov
dec
fs
and
int3
mov
jle
bound
sti
fsubrp
test
das
test
enter
dec
add
or
xlat
cmp
nop
insb
enter
cmp
pop
cld
das
jmp
and
push
adc
jns
fstpt
cmpsb
rcrl
add
pop
std
divl
lret
addr16
rclb
and
xorl
out
inc
dec
scas
enter
mov
lcall
mov
jno
imulb
cmpsb
push
mov
dec
push
addr16
lahf
lods
mov
das
inc
push
enter
in
shrl
push
jno
int
gs
fs
add
loopne
int
or
andb
add
ja
push
decl
or
mov
fstl
push
and
out
push
ja
dec
ret
xor
dec
call
lds
js
fcmovu
subb
enter
in
bound
insb
dec
cmp
jo
pushf
jne
mov
sbb
mov
fiadds
inc
jne
in
mov
mov
mov
into
mov
pop
sub
or
mov
ds
sbb
xor
dec
cli
adc
shrb
mov
inc
out
push
mov
ss
pop
cmp
in
aas
dec
mov
aaa
cmp
scas
fldcw
std
jmp
fstl
jmp
pop
std
pusha
sub
mov
bound
fsubs
mov
mov
pop
adc
pusha
mov
lret
dec
fwait
add
outsb
jle
out
cli
xor
or
inc
aam
jne
xor
or
push
mov
push
repz
mov
sub
push
jns
fbstp
jo
cmp
or
aaa
insl
daa
sub
sbb
loop
adc
mov
push
xchg
clc
ret
sbb
outsb
shlb
mov
pop
jnp
push
popa
dec
add
push
rorl
adc
add
clc
in
out
test
test
mov
dec
jne
or
daa
dec
and
inc
jl
pop
xchg
pop
mov
sbb
hlt
or
imul
add
add
xchg
jmp
jp
scas
adc
pop
xor
or
cwtl
in
arpl
pop
pop
fmuls
frstor
mov
dec
dec
enter
ja
push
mov
faddl
jmp
ja
fisttpll
xchg
xadd
sbbb
jne
imul
jne
leave
les
xor
sbb
lea
and
pop
cmp
insl
rclb
enter
fcoms
mov
xchg
adc
fadds
mov
outsl
adc
stc
mov
sbb
and
jb
dec
cli
jge
shrb
loope
imul
ret
loope
jo
mov
fsubp
imul
js
push
cmp
adc
jo
xor
outsb
push
cli
xchg
mov
push
fs
xor
scas
xor
scas
ret
mov
outsb
cmpsb
or
add
jle
clc
lock
mov
dec
imul
popf
bound
jb
xchg
add
push
inc
mov
cmp
call
mov
mov
mov
pop
lods
lret
dec
in
mov
test
stos
xor
out
dec
scas
add
xlat
xchg
lods
ljmp
mov
repnz
pop
push
das
mov
popa
mov
cmp
repz
loope
ret
loope
pop
sub
and
data16
call
jbe
ret
jnp
mov
inc
outsb
std
enter
and
xchg
popa
fisttpl
or
cmp
and
or
subl
lea
jmp
sarb
shlb
mov
shlb
cld
or
dec
in
leave
stc
jo
pusha
mov
ds
push
cmc
lea
mov
test
and
out
ficoms
sti
xchg
mov
and
cmp
push
mov
and
in
inc
ret
lcall
incl
clc
fnstsw
jbe
mov
add
adc
aam
ljmp
mov
mov
jmp
je
mov
xchg
into
or
mov
movsb
dec
mov
dec
test
xor
out
rep
fisubrl
xchg
jle
or
ds
in
pop
jae
jne
fnstenv
cmc
jecxz
xor
test
cwtl
mov
test
enter
and
jb
fs
rcll
xchg
jb
sbb
adc
mov
aam
jb
xor
out
mov
mov
out
jbe
inc
sbb
lahf
int
in
cwtl
pop
dec
or
adc
push
sub
lret
imul
mov
push
ja
rorb
stos
sub
pusha
cmc
int
loop
sti
inc
test
rorl
push
mov
cmp
insb
cwtl
out
xchg
into
popl
stos
mov
inc
aaa
ret
divb
mov
or
pusha
ljmp
adc
pusha
push
testb
sbb
stos
imul
pop
aad
pusha
outsb
mov
inc
loop
add
notl
fwait
mov
mov
xor
jecxz
mov
insb
sbb
movb
mov
pop
icebp
mov
sbb
inc
mov
popa
test
cmp
popf
test
add
mov
mov
in
jp
out
mov
lods
mov
xlat
pop
push
inc
push
and
mov
lcall
in
xchg
mov
pop
inc
jmp
shrl
test
xchg
dec
into
sub
xor
clc
push
les
fnstsw
lcall
lret
xchg
push
popa
outsb
cmpsl
xor
pop
push
jecxz
nop
js
xlat
scas
in
hlt
loop
in
push
mov
je
pop
push
cmp
and
rsm
mov
aam
pop
add
les
stc
add
out
push
bound
lret
pop
fsubrp
bound
cs
and
ror
add
outsl
loopne
rorb
cmpl
shrl
aaa
loopne
mov
repnz
mov
jecxz
adc
dec
or
addl
cwtl
mov
pop
stos
aam
popa
or
inc
int3
in
mov
cmpsb
add
pop
rorb
aas
jbe
mov
das
leave
outsb
addr16
cltd
andb
outsb
xor
sahf
cmpsl
cld
test
int3
mov
mov
mov
cmpl
jns
nop
data16
xor
scas
push
into
ljmp
sti
out
imul
inc
jne
add
lcall
and
and
xor
aad
insl
orb
and
lret
pushf
in
call
and
or
dec
pop
int3
and
sbb
mov
lods
and
push
sbb
outsb
add
cltd
mov
or
dec
enter
inc
nop
fldt
cmp
adc
mov
or
mov
int3
aad
xor
push
je
sbb
jp
xchg
in
xchg
xor
dec
or
dec
rorl
push
dec
mov
push
fcoms
xor
mov
mov
nop
mov
mov
pop
dec
adc
mov
gs
notl
jmp
aas
mov
adc
mov
xor
es
add
or
in
inc
ja
adc
pop
insl
xchg
daa
int3
ss
jno
aam
mov
mov
xchg
xchg
mov
cmp
ljmp
add
iret
insb
int3
pusha
push
add
aad
cltd
xor
push
adc
imul
lea
fldenv
in
fdivrl
nop
clc
dec
xchg
int
ljmp
insl
aam
jg
cmp
push
jo
popa
popa
rol
fdivrl
aam
hlt
cmpsl
sbb
rorb
cmp
dec
cmp
mov
in
js
mov
pop
dec
add
and
mov
adc
pop
add
lcall
jle
outsb
push
outsl
mov
cli
outsl
push
push
fnsave
adc
jbe
and
inc
add
add
ret
pop
arpl
rcl
xchg
xor
mov
add
loope
dec
insl
dec
cmpsb
cmp
sbb
jp
insl
cmp
jo
adc
cmpsl
outsl
mov
pop
rcrl
xor
rcl
out
imull
push
sbb
mov
jno
xor
mov
jnp
lahf
pop
lods
xor
into
scas
jp
sbb
inc
jno
xchg
push
jb
ds
jp
sti
adcb
daa
pusha
movsb
das
inc
fsts
push
xchg
inc
stos
mov
pop
ds
xchg
and
cmp
cmp
pop
cmp
ja
rcll
xchg
xchg
pop
int
in
test
movsl
ds
out
xor
mov
nop
movsl
sub
push
mov
in
jp
sub
daa
icebp
js
frstor
and
cld
int3
stos
pop
push
gs
notb
ljmp
out
cmc
sbb
mov
bound
mov
mov
cmpsl
pop
jl
shlb
push
jle
fmulp
mov
addl
stos
inc
mov
push
jmp
aam
cmp
mov
scas
cmc
aaa
push
push
stos
mov
sbb
pop
iret
stos
push
cmpsb
jg
mov
hlt
js
fcmovb
xchg
in
xor
mov
xchg
cwtl
mov
sahf
mov
pop
divb
arpl
retw
rcrb
dec
shrb
or
enter
sbb
dec
add
cmpl
pop
adc
mov
push
jb
mov
mov
les
lock
push
enter
ficoms
dec
or
mov
jmp
ss
mov
push
pop
inc
pop
fs
out
rorl
pushf
movsb
sub
clc
or
mov
cwtl
movsb
xor
fildl
int
cmp
xor
mov
cmpsl
mov
fmull
ss
imul
in
push
fwait
data16
mov
jnp
loope
mov
xchg
shll
push
and
test
sub
and
cmp
jg
pop
xchg
mov
jle
pusha
and
sar
push
pop
imul
inc
xor
jmp
ja
sbb
or
leave
sbb
pop
outsl
add
daa
dec
test
mov
sub
cwtl
notl
loope
inc
jl
inc
dec
outsb
in
mov
andb
fwait
int
xchg
stos
mov
pop
gs
xchg
push
mov
movsb
mov
sbb
pop
addb
iret
push
int
ror
add
fwait
push
sub
pusha
mov
test
mov
repz
cmp
sub
or
pop
mov
cwtl
outsb
mov
cmp
sub
loope
nop
repz
mov
xor
imul
in
jmp
pop
out
sbb
xchg
dec
mov
adc
out
hlt
jno
dec
sub
stos
sub
push
cli
shrb
cmc
or
jns
int3
or
out
mov
jge
lahf
xor
dec
rorb
insb
and
add
and
dec
inc
rolb
clc
push
dec
sub
lea
sbb
xchg
int
aas
outsl
adc
stos
pop
ja
mov
stos
push
inc
push
mov
xor
hlt
test
pop
shlb
pop
push
mov
iret
neg
push
out
xor
push
loope
jmp
jb
repz
psubq
out
aas
xchg
xlat
adc
insb
cli
mov
jge
cmp
aad
rcll
mov
stos
call
jno
xchg
adc
aad
mov
xchg
insl
repnz
in
testb
mov
or
jns
add
pop
call
pop
inc
scas
dec
or
outsl
cmp
push
and
or
dec
xor
jno
shr
add
adc
test
add
addb
lcall
leave
push
das
add
pop
sbb
xorl
ficomps
sbb
and
and
mov
iret
data16
popl
test
mov
loop
jnp
mov
mov
pop
sbb
dec
cmp
stos
mov
jp
jns
negb
test
fsubs
test
mov
repz
xlat
call
outsb
aad
fstpl
adc
cs
xor
test
sub
ja
je
fisttpll
fisubrl
push
mov
push
push
push
or
dec
aaa
es
pop
adc
fs
mov
fldt
mov
mov
inc
ds
ret
adc
push
jmp
into
adc
mov
push
arpl
out
int
dec
and
dec
mov
lds
push
pushf
xor
add
push
pop
loopne
sub
jo
leave
pop
push
sub
cmp
push
mov
popa
adc
cs
sahf
fmull
sub
fldl
and
out
dec
jl
jle
mov
fwait
ljmp
das
arpl
test
sbbl
roll
mov
adc
mov
push
mov
in
and
mov
mov
jecxz
mov
div
mov
add
pop
ror
std
loopne
jle
or
inc
sub
jb
test
sahf
sahf
inc
rcll
js
out
cwtl
loop
sbb
int
xchg
mov
inc
xor
nop
jle
fists
adcl
mov
mov
insl
xor
pop
mov
std
leave
inc
hlt
adc
mov
mov
push
jne
cmc
mov
aam
aad
dec
lret
pop
es
sub
jl
mov
ja
ret
insl
push
popf
in
notl
mov
sbb
mov
mov
pop
xor
jno
loope
and
xchg
movsb
es
jle
add
dec
lahf
xor
dec
xchg
daa
clc
negl
dec
mov
cmp
or
outsb
repnz
mov
cs
jo
stos
xchg
cmp
lods
dec
into
sub
mov
add
or
dec
lock
mov
and
into
mov
movsb
or
cs
out
bound
or
adc
dec
and
fldcw
sub
cmpsl
addr16
aas
push
les
jns
or
push
outsl
sahf
push
mov
pop
pushl
imul
or
cmpsb
push
xor
mov
fwait
test
and
push
xor
cmc
adc
cltd
clc
or
cmpsl
xchg
push
pop
pop
mov
xchg
adc
or
dec
cltd
sub
mov
or
imul
fwait
addr16
mov
into
int
or
ret
mov
sub
sub
pushf
mov
cmp
das
mov
mov
insl
pop
jns
sub
or
pushw
nop
rcrb
mov
lods
dec
inc
and
mov
je
iret
movsb
push
inc
imul
cwtl
xor
inc
fmuls
add
addl
call
or
mov
mov
xchg
jp
jecxz
or
stos
dec
loop
adc
push
add
mov
push
jmp
lods
lods
fstps
repz
xor
bnd
out
stos
mov
xor
mov
jge
ljmp
jle
adc
cmp
pop
and
cmp
dec
les
inc
cmp
mov
adc
movsb
and
imul
jns
jo
adc
out
mov
xchg
test
fdivrp
test
stos
imul
cwtl
xor
cmp
cwtl
mov
sub
or
dec
pop
lods
sahf
rorl
aas
ss
jbe
jno
xchg
fsts
into
into
dec
pop
out
cld
sti
cmp
cmp
insb
jae
add
loope
imul
filds
and
cli
shll
iret
mov
call
jne
movsb
xchg
inc
in
xor
cli
arpl
test
fidivl
cmp
or
idivl
cltd
inc
cmp
jno,pn
into
lods
xor
inc
mov
stc
int3
pusha
es
daa
mov
adc
mov
shlb
xor
stc
shr
jl
lret
cs
shrl
xor
mov
inc
adc
lock
push
add
push
push
or
loope
cmp
jnp
jg
loopne
mov
mov
scas
cmp
test
stos
mov
cmc
pop
in
imul
jb
jnp
cmp
jb
mov
jmp
outsb
out
sub
lods
clc
mov
adc
insl
mov
rcrl
dec
ljmp
mov
mov
fwait
loope
lea
scas
inc
push
rorl
jb
inc
inc
sbb
mov
arpl
sbb
mov
pop
enter
std
and
adc
xchg
sub
dec
loop
mov
test
cltd
rcll
push
or
inc
mov
sbb
mov
push
icebp
sub
cld
test
pop
movsl
ret
jno
cs
xchg
fnop
insl
cmp
mov
sub
fstl
mov
xor
into
out
ljmp
inc
pop
cs
test
sub
cmp
and
push
cmc
fsubs
pushf
inc
addr16
fists
mov
arpl
pop
in
iret
les
mov
shrb
out
lret
cli
sub
jns
push
roll
add
roll
pop
in
mov
cmp
mov
push
xlat
cmpb
mov
and
sbb
mov
mov
add
adc
dec
xor
add
fisubrl
sbb
mov
rcll
and
pop
imul
outsb
iret
test
jno
add
icebp
xchg
ds
inc
sub
and
dec
or
and
in
dec
stos
pushf
cs
loop
xchg
jp
mov
push
add
dec
jno
je
fsubrs
dec
sub
mov
bnd
sub
test
push
bound
sub
in
or
and
fnstsw
dec
sbb
mov
loope
loope
test
dec
rorl
add
sbb
add
jb
add
loop
movsl
outsb
mov
mov
add
cmp
je
aas
mov
cmpsl
les
fistpl
loop
outsb
cmc
jmp
test
ja
inc
mov
sbb
mov
sub
mov
push
fwait
cli
into
inc
mov
push
pop
imul
pushf
adc
adcl
push
cmc
popa
shrb
faddl
mov
mov
add
sbb
leave
push
sub
out
repnz
mov
add
rcrl
push
push
xor
lods
imul
and
xchg
test
mov
fidivrl
das
roll
mov
inc
dec
mov
sbb
xlat
test
sbb
and
add
sti
sbb
dec
insb
add
pop
pop
cli
mov
sbb
into
mov
pop
insb
jbe
xlat
xlat
addr16
push
adc
dec
les
sub
or
mov
outsl
sahf
jg
popa
pop
push
mov
mov
aas
or
dec
stos
dec
subl
and
je
pop
jae
xchg
lret
pop
in
and
adc
and
aaa
in
mov
js
out
push
loopne
inc
imull
push
jmp
imul
jae
jg
sti
mov
cmpsb
mov
xchg
mov
imul
das
mov
mov
and
xlat
subl
icebp
iret
rolb
inc
sahf
fcos
push
outsl
ret
stos
mov
sbb
cmpsl
mov
inc
sub
xor
sub
jno
push
fs
mov
jge
dec
lahf
cli
add
sahf
addr16
mov
push
and
dec
mov
rclb
stos
lret
cmp
cmpsb
push
cmpsl
and
sbb
sti
xchg
jns
or
pop
outsb
pop
mov
adc
sub
xchg
in
adc
sub
repz
pop
das
test
xchg
shlb
or
rcl
icebp
cmp
adc
or
dec
sub
mov
subl
push
lret
dec
xsavec
mov
xchg
lea
cmpsb
cmp
outsl
fnstcw
test
lods
cmc
stos
jb
fwait
xor
mov
mov
push
sar
loope
jbe
xchg
bound
lret
insl
cld
pop
aam
xchg
xor
call
lcall
popf
xchg
or
in
imul
lea
aam
lods
inc
cmpl
dec
pop
xchg
std
enter
push
sub
out
xchg
bound
cmp
sbb
je
arpl
or
add
add
out
test
push
nop
insb
xchg
out
pusha
das
dec
xchg
pusha
je
inc
add
and
jns
or
testl
cmc
mov
imul
cmp
scas
ret
lcall
psubsb
xchg
pop
daa
daa
xchg
in
jne
jmp
mov
subb
inc
jnp
dec
daa
cwtl
insb
dec
mov
test
enter
hlt
fcom
lahf
cmp
sbb
rcrl
aas
imul
loop
xor
jo
sbb
mov
je
xor
pop
sub
pop
pop
jbe
sub
inc
outsb
movsl
dec
jnp
dec
cmpsl
xor
lahf
sbb
cmpsb
loope
inc
and
mov
lret
pop
cli
cli
jge
mov
testb
std
mov
cmp
mov
insl
xchg
iret
sub
xor
jno
out
sub
aaa
inc
out
dec
rep
cwtl
int
or
repnz
or
divl
cmpsl
dec
push
jne
jmp
mov
enter
scas
fsub
and
jae
cmpsl
cmp
call
loope
jnp
iret
dec
pop
js
sub
pusha
xor
mov
ss
cmp
lods
das
addl
aaa
and
stos
rol
enter
jl
test
xor
sahf
mov
aas
testb
daa
add
arpl
cld
mov
pop
cwtl
adc
jg
inc
dec
jp
mov
inc
shll
sub
xor
mov
lahf
in
mov
jge
or
in
and
mov
jecxz
pop
out
ficomps
jo
push
cmp
cmp
add
andb
test
std
pop
mov
mov
jp
out
and
arpl
movsb
xor
mov
jecxz
xchg
pop
sub
outsl
insl
fwait
and
or
fdivr
enter
mov
les
cmp
jmp
mov
add
in
pavgb
in
int
xor
and
add
mov
lds
sbb
xchg
and
jbe
out
bound
push
cwtl
xchg
mov
pop
jle
loop
ljmp
jb
pop
mov
sti
clc
cli
out
sbb
xor
sub
dec
icebp
xorl
loop
inc
add
scas
pop
jno
sub
out
cs
sti
insl
add
jb
int
out
jecxz
jle
aad
pop
jns
cmpsb
cmp
dec
mov
mov
aaa
add
insl
mov
and
add
push
xor
rcl
inc
clc
insl
xchg
pop
movl
jne
push
pop
inc
movsb
loopne
add
cmp
ret
xor
fs
xchg
int
mov
add
pop
lds
inc
xchg
xchg
dec
or
arpl
push
dec
xlat
and
lahf
std
dec
test
sbb
loopne
cs
push
sti
loope
fistl
push
dec
adc
aam
cwtl
in
or
xor
iret
insb
jge
xchg
cmp
lds
mov
outsl
cmp
xor
cmp
dec
mov
or
mov
cmp
inc
sbb
or
mov
imul
mov
cmp
es
imul
das
jg
push
sti
add
mov
inc
es
js
stos
call
pop
movsb
sbb
cmp
xorb
in
push
stc
test
xchg
cmp
adc
mov
int3
sbb
jno
mov
insb
dec
je
xchg
jns
cli
fists
mov
test
sub
aas
leave
mov
pop
fcmovnb
scas
pusha
nop
pop
push
inc
jb
mov
push
mov
out
ljmp
jo
cmpsb
ss
test
and
cmp
test
in
pop
sbb
mov
repnz
bound
into
insb
xchg
xchg
lret
mov
push
mov
clc
sti
jmp
xchg
or
repz
filds
ret
push
shrb
sbb
imul
inc
sub
jmp
mov
and
add
into
jge
daa
movsb
jmp
xchg
cmp
mov
mov
stos
adc
ljmp
adc
or
sub
daa
or
jae
sub
mov
pop
bound
cs
fmulp
sti
mov
xchg
loop
xchg
loopne
inc
adc
test
inc
xchg
xor
shl
lret
aaa
ja
and
xchg
add
push
or
sbb
adc
add
mov
sub
sub
fistl
jne
jo
vpsrld
and
stc
xchg
in
pop
pop
and
xor
cli
ss
loop
lods
dec
ficomps
clc
jne
cltd
jb
or
sbb
sub
test
lock
and
shlb
inc
mov
incl
subl
pop
negb
push
stos
pop
sbb
out
push
sarl
sub
int3
jl
call
insl
lret
repnz
push
or
hlt
add
testb
push
mov
cld
xchg
cmp
addr16
fwait
sub
outsl
inc
mov
jle
jmp
loope
ret
cmp
mov
mov
pop
push
aaa
xor
lock
mov
frstor
out
test
pop
add
aaa
xlat
xor
std
mov
fstpl
xor
mov
dec
icebp
pop
nop
jne
out
xchg
fcomps
repnz
add
repnz
testb
sbb
mov
test
adc
and
mov
push
sbb
mov
aaa
jbe
ljmp
mov
adc
es
movsb
inc
insl
divps
adc
notb
mov
and
pop
faddp
sbb
adc
xchg
and
aam
jb
test
cmp
dec
xor
pop
arpl
mov
add
push
mov
cmc
xchg
sub
aam
jno
loope
dec
adc
clc
add
push
es
push
push
jg
add
incb
sub
dec
inc
shrb
icebp
stos
dec
dec
lret
cmpsb
gs
shrl
pop
jo
ret
pushf
outsb
push
movsl
xor
je
jecxz
addr16
mov
iret
xchg
cmc
mov
push
push
pop
jl
lds
mov
movsb
lahf
cli
add
out
int3
jno
idivb
leave
xchg
cli
push
push
lods
mov
xchg
or
mov
sub
and
orps
mov
and
adcb
pop
sbb
xor
mov
cmpsl
add
outsb
sarb
cmpsl
icebp
fs
or
mov
negb
push
dec
cmp
js
cmpsl
fidivs
jmp
cmp
aam
xor
aad
iret
sbb
lock
mov
push
cltd
jne
or
js
mov
lock
and
ja
stos
jnp
mov
inc
cs
js
shlb
inc
xor
fsubr
sbb
notl
mov
mov
test
test
or
dec
jbe
movsl
jecxz
cli
cli
xchg
and
mov
sub
fsubp
loope
int
or
mull
imul
or
lds
xor
dec
dec
or
pop
ret
std
add
jmp
sub
xchg
and
xor
mov
push
and
or
mov
ret
or
add
daa
dec
inc
ficomps
nop
xor
scas
dec
or
aam
bound
inc
pop
xchg
int3
ja
mov
lret
repz
or
push
fldcw
xchg
add
mov
jp
add
bound
mov
jecxz
rorl
test
test
cmpsl
sbb
push
aaa
mov
jb
dec
pop
pop
pop
pop
mov
mov
inc
shlb
lret
dec
mov
push
xor
je
stc
popa
cmp
pop
popf
inc
dec
int3
adcl
nop
aad
dec
dec
aad
inc
cmp
push
sarl
aad
mov
pop
in
xchg
or
dec
test
ret
inc
nop
mov
outsl
jle
pop
movb
mov
cmpsb
mov
inc
fcomps
repnz
aaa
jg
push
int
xchg
inc
lds
add
mov
imul
mov
add
loopne
cmpsl
popf
in
mov
mov
jmp
pop
loop
mov
adc
rep
das
mov
mov
push
test
rol
sti
out
xchg
and
jbe
int3
inc
push
shll
jg
rcr
aad
cmp
test
rcrb
adc
mov
cmp
mov
adc
fidivl
cmpsl
mov
or
aad
xor
mov
sarb
inc
ret
or
hlt
xor
addb
mov
add
add
scas
xor
and
xor
pop
test
fsubrs
lret
sub
jge
sbb
outsl
outsl
cmp
aaa
stos
xchg
push
push
mov
pop
xor
pusha
push
mov
sbb
mov
jp
jbe
xchg
xchg
and
or
insb
cwtl
xor
mov
cmc
push
mov
cmpsb
inc
repnz
and
jl
sbb
outsb
and
dec
mov
mov
jecxz
pop
aas
test
push
lret
fsubr
mov
outsb
sub
enter
rolb
mov
in
ds
sbb
out
cli
add
shll
cmp
add
push
sub
mov
aaa
pusha
icebp
scas
mov
into
enter
scas
inc
lahf
push
lods
ds
add
pop
dec
push
jmp
or
cltd
imul
sbb
mov
lahf
into
push
jl
lods
xor
loope
or
jmp
pop
rcll
xor
jbe
xchg
xor
sbb
movl
inc
jmp
pop
adc
iret
gs
mov
nop
sbb
pop
cli
aaa
mov
iret
rcr
xorl
lods
pop
nop
pusha
lea
xchg
cli
push
shrb
stos
push
insl
test
lahf
movsl
lret
xlat
mov
adc
cld
xor
xlat
pushf
adc
mov
mov
mov
dec
mov
mov
out
movsb
cmpsl
movsl
mov
mov
inc
lcall
mov
shlb
cmp
cli
neg
aad
and
cmp
out
inc
in
pop
je
dec
fisubs
arpl
repnz
mov
dec
mov
popa
cli
pop
cmp
xlat
test
test
lret
dec
repz
add
jnp
dec
in
xchg
dec
jecxz
push
pop
cmp
pop
jno
jb
pop
mov
int3
ror
jecxz
lods
xor
xor
outsl
xor
push
loopne
mov
aas
jmp
orl
mov
ret
rorb
aaa
fsubp
cmpsb
mov
popf
dec
inc
and
arpl
aad
das
and
imul
js
add
in
std
adc
loope
mov
dec
lods
fidivrs
shrb
adc
push
call
push
mov
inc
test
xchg
xor
add
push
sahf
lds
dec
cmp
scas
dec
push
dec
adc
sbbb
mov
stos
sbb
mov
mov
jl
out
xchg
fs
jns
xchg
sub
dec
ret
cwtl
aam
mov
popf
jo
test
and
and
add
pop
inc
mov
rorl
jecxz
loope
cmc
cmp
pop
sbb
jae
movsb
pop
mov
xchg
clc
or
insl
stos
mov
add
lods
fistpl
push
imul
inc
lret
xor
push
sahf
push
and
mov
movsb
or
pop
in
mov
mulps
jge
aaa
loop
mov
jmp
pop
incl
negl
inc
xor
subl
dec
sbb
jbe
mov
push
xchg
loope
iret
jbe
loope
push
lods
ret
shl
mov
mov
pop
loope,pn
xor
into
jp
lahf
int
sbb
inc
fs
adc
jmp
mov
sub
mov
clc
inc
pushl
push
xor
aad
push
bound
iret
push
cs
es
cli
or
xchg
push
movsb
repz
cmp
xor
je
aad
lret
fidivrl
sbb
in
add
roll
jo
cmp
adc
xor
add
dec
mov
test
out
or
cli
int3
mov
pop
shlb
pop
or
inc
xlat
fbstp
jp
push
cmpsl
negl
jns
ds
xlat
add
es
fldcw
cmp
sbb
and
mov
pop
fnstsw
imul
mov
loopne
jns
test
fidivl
inc
ret
fwait
mov
push
xor
cmc
or
adc
je
push
mov
std
aad
add
cs
cmc
cmp
fistl
adc
push
mov
mov
push
pop
mov
scas
in
mov
pop
xlat
shlb
out
movb
shrb
stc
jbe
dec
jbe
mov
inc
fimuls
and
das
cwtl
pop
out
sbb
fstpt
xchg
lods
subl
test
les
insb
hlt
or
add
pop
adc
cmp
pop
out
movb
add
mov
mov
jmp
mov
jle
xor
adc
and
jno
rcl
mov
pop
xor
das
mov
add
xor
mov
sbb
pop
xchg
jno
or
sub
call
out
repnz
adc
andl
sti
mov
jo
mov
ss
lods
jne
shl
sbb
daa
imul
mov
sbb
int3
push
daa
cld
stos
nop
shrl
out
pop
mov
inc
jmp
popf
pop
es
jnp
xchg
out
mov
jp
mov
std
mov
cmpsl
mov
xchg
loope
fwait
iret
xorb
or
sbb
xchg
mov
adc
inc
inc
sahf
xlat
jns
addr16
aad
mov
or
in
mov
je
push
cmp
xor
loop
adc
cli
inc
or
mov
dec
add
push
in
sub
jno
cmp
adc
jl
sarl
mov
jb
sti
mov
or
push
push
rcll
jge
fcmovnb
int
sbb
jecxz
ss
hlt
test
lret
scas
cmc
pop
popa
pop
int3
notl
cmpb
pop
sbb
movsb
movsl
jae
imul
or
jg
inc
imul
sub
addr16
js
mov
iret
in
push
lods
push
adc
sub
lcall
out
adc
mov
in
sbb
ret
jge
dec
mov
cmp
ror
movsb
xor
out
ret
mov
sahf
jp
add
jae
ud1
xchg
shl
push
arpl
cmc
fsubr
mov
fcmovb
cmovno
jae
push
jge
addr16
shll
xlat
sti
arpl
sbb
jo
push
inc
in
mov
lret
inc
fistpll
roll
cmp
mov
mov
push
pop
dec
sbb
mov
imul
fiadds
out
gs
push
dec
xchg
push
adc
add
jo
incl
test
pop
pop
push
stc
lahf
push
movl
xlat
push
rep
shlb
mov
xchg
xchg
add
out
jge
sub
dec
fimuls
js
lock
dec
mov
shlb
mov
push
inc
ja
sti
or
sub
addl
dec
inc
mov
xchg
inc
cld
test
ds
mov
arpl
sbb
test
jnp
cmp
in
cmp
xor
mov
inc
push
in
leave
push
mov
inc
lahf
fisubrl
mov
mov
jbe
mov
aam
test
pushf
nop
push
sbb
fs
ret
xchg
add
stos
dec
jmp
je
sahf
pusha
dec
adc
mov
scas
jl
aam
cmp
mov
sti
addr16
add
xchg
mov
cltd
aas
adc
push
push
fsubrs
pop
cmp
ret
cmp
push
into
add
orl
mov
push
repz
push
jge
mov
xchg
out
pop
jno
fcompl
cs
mov
movl
jecxz
out
xor
sub
cmp
das
fstpl
adc
ds
mov
and
pop
pop
lods
out
or
cltd
xor
das
nop
andb
popa
test
test
xchg
loop
inc
adc
mov
cmpps
push
sub
pusha
aad
das
jb
or
push
pop
mov
jmp
mov
imul
mov
xorl
outsl
xor
scas
aaa
xchg
nop
aad
sbb
mov
mov
std
sbb
aaa
mov
pop
dec
bound
pop
leave
pop
jns
leave
pop
cmpsb
fsubrs
popf
adc
lret
in
imul
dec
ret
push
std
popf
dec
loopne
rcrb
stos
and
popf
pusha
sbb
lret
orl
cld
adc
ss
and
testl
xchg
mov
cmp
sahf
lds
test
sbb
push
inc
sahf
mov
push
adc
push
test
xor
fs
aas
jae
out
out
mov
xchg
std
xor
pop
popf
dec
or
push
and
dec
pop
fsubs
sbb
mov
shll
out
pop
xchg
cltd
movsb
sub
adc
fsubl
popa
add
jno,pt
shll
lret
jecxz
shlb
push
mov
mov
cmp
jmp
or
or
ja
out
lahf
ljmp
push
daa
sbb
pushf
cmp
out
aas
call
addl
addb
cli
jmp
sahf
push
and
cltd
mov
outsb
and
or
add
mov
push
dec
flds
mov
test
popf
xchg
lahf
sarb
cmp
or
xchg
and
lds
inc
stos
sbb
or
into
dec
loope
enter
xor
adc
rcll
add
jl
or
cmc
repz
sub
std
mov
test
stos
jle
scas
mul
add
pop
addr16
sub
jae
push
jbe
ret
add
jge
data16
sbb
xchg
and
packuswb
pusha
mov
cmp
xor
aad
dec
repz
insl
cwtl
jbe
xchg
test
outsl
cli
adc
loopne
jp
test
push
int3
inc
mov
mov
push
enter
push
loope
jb
xchg
lret
jmp
and
mov
shlb
cmpsl
shll
mov
out
fmull
fistpll
sbb
push
inc
add
int3
mov
loope
dec
scas
sbb
cmc
fs
jae
inc
sub
mov
mov
push
add
les
adc
mov
push
mov
mov
call
movsb
leave
xlat
sub
daa
roll
nop
pop
mov
mov
ds
xchg
pusha
push
in
inc
dec
dec
push
cwtl
lret
fwait
push
ret
and
dec
loopne
xor
in
push
or
shll
dec
hlt
mov
sbb
pop
imul
add
movsl
ja
jbe
push
adc
push
fdivrl
or
outsl
fnstenv
mov
mov
fwait
push
leave
cmpsb
mov
cmc
lods
pushf
push
in
shrb
push
test
hlt
ljmp
push
xchg
or
cltd
sbb
push
cmc
movsb
pushf
xor
sarb
push
lds
pop
into
and
jle
jl
adc
cli
call
aaa
add
and
loopne
es
mov
xchg
jle
out
loopne
mov
jge
sarl
addr16
mov
cmp
mov
sarb
bnd
repnz
daa
scas
push
mov
stc
popa
mov
loopne
insb
ljmp
sub
xor
xchg
xorb
jnp
mov
and
mov
lods
cmp
roll
scas
adc
out
push
push
out
movq
mov
cmp
inc
sbb
pop
aam
out
inc
gs
lods
cmp
cmp
add
mov
test
jae
add
dec
cmp
icebp
jno
jge
cmp
js
mov
xor
ret
aam
notl
or
insb
mov
inc
inc
fadds
xlat
add
and
fistpll
fwait
mov
insb
cmpsl
and
ret
loopne
js
dec
call
sub
sub
or
mov
rcll
push
or
es
and
testb
dec
rcr
sarl
pop
push
sti
insl
sub
mov
dec
push
add
aam
sbb
push
dec
clc
push
scas
nop
jbe
jb
outsb
cmp
cwtl
outsl
jmp
add
sub
push
mov
or
lock
jecxz
sbb
ja
ljmpw
out
cwtl
push
clc
mov
sbb
jae
adcl
mov
jae
imulb
popf
xchg
shl
xor
mov
fimull
imul
xlat
std
in
jp
clc
xchg
hlt
jp
xchg
and
jl
and
ja
std
and
adc
cltd
popa
lret
in
and
push
nop
adc
lahf
rcrb
rcll
cmp
inc
mov
mov
mov
loope
inc
sub
or
push
dec
sub
fsubs
scas
mov
mov
jns
add
notb
data16
cltd
ss
pop
in
mov
mov
pop
ljmp
pusha
mov
insl
cmpb
cld
mov
inc
jecxz
dec
or
nop
push
fldcw
out
dec
flds
test
xchg
in
add
loopne
negl
cltd
outsb
mov
mov
adc
enter
jl
es
fdivrs
imul
sahf
pop
and
dec
sub
sub
adcl
add
in
repz
mov
sub
or
addr16
cmpsl
xchg
xor
outsb
jge
mov
mov
cli
repnz
or
ret
addl
jno
or
scas
and
fimuls
xor
push
int
pop
das
sbb
hlt
mov
jb
inc
shll
leave
fisubrs
ret
neg
sub
dec
inc
dec
push
ss
sub
push
fistpl
inc
cmp
inc
ljmp
jb
mov
or
mov
sub
fstl
sbb
sub
pusha
dec
negb
mov
cld
orl
fs
daa
or
pop
aas
filds
mov
cmp
aam
mov
gs
sub
adc
mov
mov
lahf
aas
jbe
idiv
orl
pop
adc
adc
add
add
jnp
sbb
push
test
out
or
push
pusha
out
jns
ret
mov
popf
std
mov
sahf
es
loopne
dec
dec
or
xor
stc
pop
in
xchg
data16
test
pop
in
lds
les
pop
in
test
jg
imul
test
jae,pn
xor
push
sub
inc
cltd
inc
and
or
shlb
xor
imul
and
aaa
out
add
dec
loopne
btc
fisttpl
adc
leave
cmp
sbb
test
jg
shlb
mov
shlb
sub
dec
stos
mov
mov
mov
cmpsb
sub
scas
lret
and
xchg
andl
add
pop
mov
mov
jge
js
test
fwait
or
fsub
call
add
lods
mov
lcall
and
loopne
pop
or
leave
xor
push
in
mov
mov
sub
jp
pop
mov
lea
adc
ja
cmp
je
xchg
pop
sbb
ret
mov
stos
inc
cwtl
popf
and
or
test
pop
js
loop
aad
fcom
lods
xchg
popa
test
in
push
mov
fldt
loope
add
pop
repz
xchg
insb
jo
mov
ret
loop
push
inc
loopne
pop
mov
leave
in
jp
push
out
cmp
movsb
cmp
cmp
or
inc
pop
mov
cmp
out
sub
push
or
mov
mov
cmpsb
mov
leave
int
adc
jnp
jmp
mov
mov
mov
cltd
jb
push
xchg
and
lods
call
adc
loopne
pop
std
push
lods
fdivrp
test
sub
or
or
std
mov
pop
js
mov
mov
popf
adc
jns
xchg
cmc
mov
inc
aas
es
outsl
fisubs
xchg
or
in
ret
outsb
cmpsb
adc
jb
fwait
pop
jg
in
outsb
pop
data16
mulb
dec
call
and
sti
add
mov
cld
stos
and
mov
mov
sub
jl
imul
push
lock
call
and
xorl
outsb
js
cmp
rcrl
mov
cwtl
adc
rorl
or
loop
xchg
mov
mov
hlt
jno
add
test
add
test
push
test
push
cld
in
stos
add
in
sti
mov
call
mov
loopne
xchg
jge
ljmp
data16
inc
movl
mov
inc
xchg
xor
push
scas
push
inc
loop
pusha
dec
inc
xchg
scas
flds
ret
cmpsl
pop
jecxz
ja
lods
cmp
jns
or
aam
hlt
push
scas
out
mov
mov
add
mov
test
in
dec
ja
inc
notl
push
mov
pop
adc
scas
scas
xchg
popf
jb
mov
int
adc
push
dec
je
mov
pushf
movsl
mov
jns
stos
sahf
test
test
dec
push
sbb
sbb
dec
and
lods
xchg
xor
push
or
push
ja
mov
lea
je
daa
mov
dec
adc
mov
jae
mov
fisubl
pop
dec
stc
loopne
std
mov
and
stos
rcrb
mov
test
xor
cmpsl
ljmp
nop
fdivr
out
mov
mov
arpl
mov
sahf
fs
jo
dec
es
fildl
shll
out
jmp
aaa
aad
in
cmp
push
aam
aam
dec
push
add
in
jle
repnz
sahf
loop
iret
cmp
mov
iret
test
movsl
xchg
fdivl
xchg
ja
xor
int
mov
push
mov
ds
mov
mov
aad
xchg
xchg
push
dec
xchg
mov
in
xlat
jg
xor
test
inc
lods
mov
inc
pop
add
pop
pop
mov
js
in
add
sub
push
dec
pop
xchg
int
jmp
sbb
xor
in
push
cltd
push
lods
cmpsb
aad
dec
inc
pushl
sub
sub
ret
xchg
int3
jp
adc
nop
pop
xor
scas
in
sahf
jl
jmp
lods
xchg
push
xor
add
into
lcall
jp
mov
lret
jl
mov
ficomps
and
enter
cmp
jae
jnp
test
inc
jmp
mov
xlat
sti
mov
inc
add
imull
test
jae
dec
ja
insb
aad
movsl
call
and
in
jbe
imul
rolb
sub
fcoml
clc
add
movsb
dec
or
cld
lcall
shll
and
scas
xor
jo
push
das
cwtl
sub
sbb
xchg
addl
lcall
repnz
bound
out
pop
adc
push
imul
xchg
pop
repnz
rcr
mov
xor
mov
mov
scas
int3
aas
movsl
lods
sbb
hlt
jl
dec
mov
imul
loop
jmp
inc
sub
push
popa
mov
ficoml
ds
dec
daa
fs
adc
cs
pushf
movsb
push
push
dec
xchg
sbb
mov
xchg
lds
adc
pop
jbe
or
adc
push
dec
pop
mov
adc
imul
push
aas
inc
mov
dec
movsb
aam
in
cmp
cmp
mov
jmp
and
mov
mov
mov
test
movsb
clc
inc
push
mov
ret
and
lahf
idivl
cmp
aas
pop
dec
lret
jo
mov
xor
pop
push
cs
inc
mov
out
mov
mov
scas
test
andb
jecxz
pop
or
jmp
cltd
fiaddl
and
adc
inc
mov
inc
fnstenv
or
sbb
mov
daa
jp
pop
pop
cli
ret
fcoml
clc
jecxz
jmp
ret
or
xor
jno
mov
add
lcall
dec
jp
mov
call
cltd
movsb
adc
lahf
pop
mov
push
movl
test
sbb
stos
rorl
stc
xor
jnp
lfs
and
bound
leave
inc
xchg
fbld
sub
lcall
in
push
push
movsl
les
mov
testl
jl
in
pop
lock
or
fdivrl
inc
lcall
je
leave
shrb
mov
or
pop
shlb
mov
add
fcmovnbe
and
addr16
sub
push
es
leave
add
cmp
inc
dec
sti
mov
mov
sub
outsb
arpl
xorb
pop
sbb
dec
sbbl
stos
rorb
call
mov
lds
adc
aaa
fsubrs
or
test
pop
std
jns
mov
adc
lret
das
mov
xor
mov
push
call
jmp
mov
mov
add
sbb
pop
insl
xor
jmp
les
pop
jg
push
add
inc
or
les
aaa
mov
push
xchg
bound
pop
sbb
sub
xor
or
fisttps
mov
arpl
mov
inc
mov
mov
enter
or
jne
cli
and
daa
mov
clc
pop
mov
add
pop
add
dec
fisubrs
or
pop
aas
sahf
out
movsl
and
jbe
lret
nop
mov
sub
mov
sub
sbb
or
cmp
cmpsl
add
inc
push
stc
xchg
adc
push
enter
push
das
test
mov
jnp
ficoms
lahf
push
ficompl
mov
dec
cmp
mov
lock
inc
pop
cwtl
mov
sbb
xor
iret
sbb
inc
mov
mov
flds
jg
push
adc
or
daa
fcom
test
aam
fisubrl
or
cmp
add
xchg
add
int3
cwtl
mov
xchg
loope
pop
fstpt
cmp
lret
push
adc
lods
sbb
dec
inc
inc
cld
mov
jns
jo
subl
mov
call
cwtl
pop
clc
xchg
dec
add
loopne
xchg
and
add
and
fmuls
xchg
test
dec
push
aaa
in
loope
or
cs
sti
out
mov
shrb
or
xor
or
in
je
push
leave
mov
leave
mull
dec
or
mov
gs
sbb
jnp
jge
inc
ret
xchg
mov
int
sahf
in
xor
sub
iret
mov
mov
sarb
mov
int3
lret
nop
add
xchg
aaa
push
cld
iret
ret
jae
and
mov
mov
rcll
add
lret
dec
xor
ret
xchg
jp
jmp
in
pop
push
or
aad
in
inc
dec
iret
or
xchg
or
ljmp
lahf
adc
test
and
mov
push
xchg
popf
sub
or
popf
in
cwtl
jmp
add
jne
and
in
push
mov
in
xchg
fisubrl
push
or
mov
sarb
arpl
out
mov
ja
outsl
and
dec
loope
out
push
jb
out
jae
inc
xlat
in
addb
repz
fcompl
leave
cld
cwtl
jge
jg
adcl
and
inc
jl
sub
in
mov
nop
mov
cmp
mov
and
pop
ds
lret
ret
xchg
fistps
fcmovb
add
sbb
or
dec
inc
scas
dec
insb
sbb
shll
xchg
and
clc
dec
jle
negb
je
lahf
push
pop
clc
mov
xor
mov
addr16
mov
fs
adc
jmp
mov
mov
ret
aas
push
daa
arpl
pop
lahf
pusha
lds
pushf
push
and
mov
add
dec
inc
int
xchg
or
xor
das
das
ljmp
hlt
inc
rorb
mov
pushf
je
aas
inc
push
push
fnsave
pop
outsl
pop
jge
dec
lods
es
cli
rorl
sahf
je
mov
jb
fnstsw
sub
aam
cltd
mov
shll
fdecstp
xchg
and
pop
aam
cmp
shrb
pop
pop
dec
rolb
in
lods
push
daa
repnz
and
add
cmp
in
arpl
inc
inc
adc
sub
pushf
cmp
test
pop
imul
ret
stos
lret
xorl
lret
and
cli
cmp
mov
rclb
mov
or
xor
popf
mov
lret
push
mov
inc
push
cmpsl
fnstcw
in
cmp
add
bnd
dec
xchg
ljmp
mov
out
xor
inc
les
inc
push
push
into
out
into
or
pop
pop
aas
adc
cli
mov
mov
jp
fstps
mov
jmp
lock
push
add
sbb
pushf
cltd
push
mov
popw
pop
adc
fsub
and
push
jle
and
dec
mov
movsl
sub
ret
inc
add
jbe
push
sbb
je
push
jle
lock
lock
outsl
mov
pop
lock
gs
data16
gs
xchg
shrl
adc
pop
adc
subps
sbb
lock
xor
pop
loop
lock
mov
sbb
mov
test
mov
rcll
sbb
sbb
movsb
enter
pusha
mov
in
rolb
lar
jns
fisttpl
cmp
push
jo
mov
pop
push
jns
nop
xor
mov
imul
add
xorb
and
inc
mov
loopne
nop
pop
fimuls
dec
stos
push
adc
xor
cmp
in
add
or
mov
fimull
xor
push
loopne
xchg
test
xchg
push
outsl
mov
mov
xchg
mov
xchg
mov
andb
cmp
adc
lds
out
cltd
xchg
mov
xor
pusha
cmp
or
mov
bound
pop
stos
pusha
and
add
test
dec
adc
push
add
mov
insb
lds
popf
scas
cmp
test
test
es
imul
lods
in
push
cmpl
dec
out
dec
shl
cmp
push
mov
ror
inc
andl
cmpsb
pop
cpuid
js
scas
in
scas
push
or
xchg
xchg
movl
mov
mov
lock
lods
shlb
cmp
jbe
push
add
and
popf
scas
pop
sub
ror
ljmp
nop
fidivl
mov
int3
pop
sub
or
adc
dec
std
ds
ret
std
cli
movsb
mov
jmp
lret
lret
dec
sarb
jb
push
inc
ja
jmp
data16
ret
mov
adc
or
pop
push
push
cmpsb
loopne
xlat
cmp
push
stos
mov
ror
mov
xchg
aas
fiadds
ds
jnp
mov
xchg
dec
mov
test
and
xchg
lods
and
mov
inc
repz
leave
jle
xchg
out
out
inc
xchg
or
or
imul
sub
pop
das
mov
dec
add
das
push
sub
aas
xor
repz
js
shlb
psrlw
mov
dec
icebp
pop
ror
imul
adc
call
pop
xor
nop
and
lret
test
sbb
negb
stos
addr16
pop
jne
dec
test
push
in
lock
mov
iret
in
mov
cmp
stos
outsl
fisttpll
fldcw
cmp
xchg
jle
jns
mov
insb
inc
cmpsl
loopne
cld
rcrl
dec
sub
jae
lcall
test
js
sbb
sbb
lahf
push
mov
daa
push
aad
scas
pop
sub
js
call
push
fadds
out
lods
mov
in
pop
es
sbb
clc
adcb
push
jb
popa
nop
ficompl
imull
sub
andl
jae
pop
xchg
sbb
pop
mov
mov
xchg
sub
ret
data16
sbb
jg
dec
dec
fidivrl
xchg
popf
dec
push
int3
sbb
int3
insl
or
subb
jle
adc
xor
mov
test
mov
dec
fidivrs
or
mov
or
jle
xor
cmpsb
sbb
cmc
js
sub
mov
sahf
por
and
loope
pop
inc
shll
cmc
sti
int3
sub
sbb
push
gs
push
pop
mov
outsl
dec
data16
cld
pop
aas
rorb
mov
cmp
jecxz
mov
cmp
jmp
and
fistl
jge
lret
xchg
adc
mov
iret
push
pop
jp
insl
mov
push
pop
inc
ficoms
push
mov
mov
imul
xchg
popa
and
xor
push
ds
iret
mov
lcall
aad
stos
dec
jp
fstpl
jno
jle
popa
push
xchg
loopne
pop
sub
push
cmc
loopne
fbstp
mov
bound
push
popa
mov
mov
leave
mov
mov
psllq
shrl
lret
xlat
aas
sbb
out
enter
jo
cmpsl
andl
movsb
cmp
test
call
push
test
ficomps
in
mov
je
popf
and
cwtl
and
nop
push
mov
ljmp
ja
cltd
and
sbb
adc
adc
xor
fcomip
fistps
mov
pop
shlb
test
in
mov
rcll
mov
lret
jns
lods
mov
cmp
and
ret
xchg
daa
insb
fwait
mov
popf
mov
xchg
jmp
daa
push
push
std
fs
or
and
pop
mov
fcoms
inc
mov
test
loope
mov
lds
xor
int
xchg
out
neg
add
mov
push
std
sbb
xchg
cmp
loopne
jmp
test
lds
loopne
pop
xchg
mov
add
push
sbb
fimull
insb
cmpsl
jmp
sti
inc
mov
lods
testb
push
pop
sub
mov
pop
das
test
nop
loope
lret
js
jns
ror
jne
jbe
pop
mov
into
dec
lret
cld
adc
rolb
iret
adc
inc
leave
push
xor
mov
popf
mov
enter
mov
movb
xor
aad
cmp
adc
pop
xchg
mov
lock
mov
mov
sbb
sbb
add
lret
rcrl
scas
outsb
cmp
nop
cmp
or
mov
lods
or
mov
cmp
and
pop
dec
mov
inc
lods
popf
fsubs
or
sbb
jecxz
icebp
jae
mov
pusha
shlb
adc
outsl
in
fwait
pop
mov
fwait
pusha
push
jae
push
outsl
rolb
lea
inc
xor
stos
inc
fstpl
into
daa
mov
mov
aam
je
gs
mov
jge
mov
test
insl
sub
int3
push
xor
lds
cmp
mov
es
lea
ljmp
outsl
add
mov
sar
sahf
jnp
outsb
sbb
mov
cmpsb
das
out
rep
fisubl
movb
lock
jno
sbb
push
aas
test
rolb
pop
int
pop
mov
fsubs
push
enter
xor
fildl
imul
rcrl
xor
rcrb
mov
and
cmpsl
pop
dec
lods
ret
fbld
mov
addr16
dec
lret
insb
or
fldcw
out
test
je
pop
xor
xor
add
push
xor
adc
imul
jmp
ror
mov
cmp
jmp
bound
std
mov
mov
xchg
xchg
fcmovne
aam
inc
dec
not
lea
leave
inc
push
jns
mov
in
cmp
mov
jmp
xchg
in
sar
xlat
mov
mov
mov
sbb
into
dec
or
xchg
cwtl
sub
rorb
cmpsl
dec
movsb
lret
xchg
and
ret
in
fiadds
mov
jge
mov
add
pusha
adcl
mov
inc
pop
rcrb
or
push
negl
lahf
dec
pop
stos
fdivr
xor
ss
mov
adc
scas
jbe
je
push
sti
inc
fldl
imul
and
pop
ja
cmpl
roll
es
aaa
sarl
subl
mov
mov
cld
mov
and
mov
nop
lret
repnz
sbb
pop
jo
cmpsb
add
or
imul
xor
fldt
stos
addr16
sub
aad
adc
push
inc
and
jb
lods
add
xchg
and
ss
sti
pop
repz
scas
fbld
jo
pop
mov
xor
adc
idiv
pop
sbb
jbe
fsubrs
int
lret
stos
sub
out
icebp
fdecstp
inc
mov
les
jmp
iret
sub
mov
mov
xchg
fcmovnu
in
fldenv
xor
or
cmp
cld
les
test
xchg
scas
inc
mov
addr16
lret
loop
std
js
push
popl
add
test
push
fs
sahf
movsb
cwtd
and
stc
data16
push
sub
xchg
sub
push
fildll
ss
mov
popa
jo
pcmpgtw
idivb
js
rcl
xor
sub
cwtl
fsubr
add
das
xor
xchg
mov
dec
sub
xorps
and
lds
xchg
lock
sub
mov
ljmp
or
dec
lret
cmpsb
jle
sub
aam
add
ja
lret
sti
fcoms
syscall
pop
stos
sti
cmp
leave
add
push
pop
cmpsl
dec
jb
xor
adc
xor
xchg
add
loopne
les
les
ljmp
stc
cltd
outsl
jl
arpl
lret
lret
into
mov
imul
jbe
shrb
outsl
out
call
xchg
aam
les
cltd
mov
pop
insl
xor
and
push
cmpl
mov
filds
pop
fstp
cmp
decl
cmp
sti
xor
je
cld
xchg
icebp
jge
shll
leave
jg
xor
std
movsb
loop
jmp
or
cmp
and
add
xchg
ljmp
adc
xchg
and
hlt
xchg
je
inc
adc
stos
insl
push
jge
into
gs
push
mov
fistpll
orl
popf
jecxz
mov
icebp
mov
ja
push
ss
jge
jns
les
and
in
sub
fsub
xchg
mov
jmp
repnz
mov
and
push
cmp
fstps
jns
sbb
mov
sbb
xchg
addr16
daa
jne
push
mov
jl
sub
negl
sahf
jns
test
arpl
int
mov
jns
test
mov
hlt
adc
xchg
xchg
push
lods
out
dec
mov
mov
loopne
insb
adc
aam
lret
xchg
pop
push
arpl
icebp
pop
pop
divl
lods
lods
out
hlt
cltd
outsl
call
push
sub
and
cmp
stc
fmulp
mov
mov
rorb
pop
cmc
mov
inc
xor
orl
pusha
test
fwait
push
imul
shr
and
pop
jmp
adc
stos
fcomp
ret
xchg
and
es
je
xchg
in
xor
jmp
or
or
sbb
mov
in
ds
inc
cmp
lods
cs
add
inc
adc
jg
push
or
lea
xor
bound
bnd
inc
fildll
sbb
shll
daa
in
pop
imul
push
push
icebp
or
fistps
mov
inc
popf
bound
rorb
adcb
add
sbb
lods
and
jne
jae
dec
aam
jge
in
outsb
mov
faddp
adc
inc
push
scas
lcall
push
jo
sub
ret
mov
xor
es
gs
inc
out
outsb
push
out
pop
xor
rcrl
add
daa
scas
inc
loopne
mov
jne
pop
sbb
or
or
jns
inc
in
cmc
or
ret
mov
push
ret
testb
or
add
mov
into
scas
ret
pushf
cli
shll
xorl
aaa
es
jns
jne
scas
incb
orb
test
daa
xor
stos
ret
sahf
arpl
xchg
cmp
pop
cbtw
faddl
mov
mov
aam
xchg
mov
test
dec
in
ficoml
sub
adc
inc
xchg
push
decb
addr16
icebp
cmp
sti
call
jbe
cmovs
leave
sti
mov
and
jle
add
adc
push
lcall
sub
or
pop
cmpsl
dec
pop
cmp
loope
mov
fdivr
cmp
and
mov
pusha
or
add
mov
imul
push
jecxz
xchg
nop
pop
mov
xchg
xchg
sti
jns
cmp
ret
cmp
push
mov
sarb
movsl
sbb
arpl
mov
in
je
jmp
dec
repnz
push
push
inc
aaa
hlt
daa
stc
pop
jmp
mov
push
adc
push
mul
push
scas
xor
cld
sub
jno
and
mulb
orb
gs
jg
mov
pop
jp
push
sub
xor
int3
push
xor
mov
leave
mov
sbb
inc
test
mov
and
xchg
xchg
pop
mov
jo
dec
dec
jp
dec
in
imul
cmp
ljmp
iret
xchg
leave
cmp
pushf
js
xchg
or
negb
xor
sbb
fnstsw
aas
dec
pop
ret
inc
add
adc
push
ljmp
mov
aad
push
push
fnstenv
scas
push
add
dec
dec
pop
sets
sub
fimuls
mov
add
pop
data16
outsl
fs
mov
push
sbb
and
repz
mov
in
sub
or
cmp
adc
lock
inc
mov
pop
test
dec
jle
fs
dec
mov
lea
leave
cmpsl
mov
incl
xchg
sbb
push
xchg
jmp
add
and
lods
cs
add
cmp
mov
fwait
jge
fwait
rdtsc
xor
mov
pop
pushf
inc
sahf
js
pop
xchg
inc
jmp
sbb
arpl
sub
cmp
jae
mov
xor
rep
fwait
sarb
pop
and
lret
inc
and
out
mov
sarb
leave
or
int
push
in
push
cmpsl
test
add
cmp
imul
jmp
aad
xchg
mov
mov
inc
ffreep
rcll
dec
and
push
in
movb
out
iret
pop
jge
inc
jp
dec
jns
mov
testb
xchg
sub
mov
pop
mov
clc
lods
adc
std
call
das
push
ficoml
negb
push
sti
and
or
adc
out
add
mov
adc
adc
pushf
sbb
mov
sbb
lods
mov
out
or
cmpsl
sar
iret
mov
add
bound
repnz
popf
add
rcr
jnp
cmc
xchg
out
scas
jecxz
cmp
push
jmp
pop
lret
inc
and
pusha
fsts
repz
sbb
mov
jne
out
daa
add
sbb
xlat
sbb
loopne
clc
push
mov
pop
adc
push
jmp
xchg
rcrb
loop
arpl
or
mov
out
fidivrs
mov
in
insb
or
dec
xlat
and
pop
insb
sahf
dec
sbb
ljmp
data16
clc
dec
leave
mov
add
or
out
sbb
mov
int
repnz
xchg
sbb
xlat
sbb
sbb
add
popf
icebp
mov
dec
addr16
cwtl
rclb
outsb
popf
pop
push
sub
std
orb
decb
xor
movsb
int
outsb
hlt
mov
sahf
dec
and
cmp
imul
outsb
int
or
inc
repz
fwait
inc
jno
sub
icebp
xchg
add
clc
sub
xor
jg
jb
push
mov
xor
pop
repz
icebp
mov
push
xlat
out
jmp
lods
lock
sub
data16
dec
mov
out
push
xor
pop
loope
xor
scas
hlt
fcmovbe
enter
pop
movsl
inc
in
inc
test
cli
add
pop
push
push
xlat
or
cmc
movsb
dec
or
or
adc
push
sbb
iret
pop
cmp
mov
push
in
sti
loope
movsl
pop
inc
mov
or
lds
mov
icebp
neg
popa
int
fcompl
push
pop
lds
cld
fistps
adc
pop
jle
movsl
adc
jne
dec
sahf
xorb
xorl
cmpb
lea
clc
push
int3
into
push
dec
clc
insl
pop
sub
sub
inc
sbb
cld
mov
sbb
mov
jl
je
jg
ljmp
mov
mov
cmp
xchg
cwtl
sarl
sbb
mov
mov
sub
pop
or
push
movsl
aaa
or
arpl
loope
ljmp
mov
or
int3
sbb
xor
leave
inc
bound
push
cmpsb
mov
imul
loop
paddsb
dec
outsb
mov
add
decb
push
int
mov
aam
mov
pop
xor
pop
add
pop
stos
stc
aas
jbe
in
out
iret
subb
pusha
pop
inc
fiaddl
and
xchg
cli
ljmp
jne
jbe
sbb
ret
mov
dec
add
push
roll
scas
test
std
xor
mov
adc
icebp
std
inc
mov
call
pushf
es
jnp
jne
into
pinsrw
loope
xchg
shlb
fimull
insb
xchg
sbb
imul
dec
sub
fsub
std
in
addr16
das
shr
test
mov
out
sbb
push
popf
dec
xchg
mov
test
sbb
push
and
fistl
inc
addl
les
inc
mov
adc
adc
inc
js
imul
ret
or
adcl
lret
inc
mov
frstor
or
mov
popf
pop
mov
push
pop
data16
mov
xor
bound
inc
xor
stos
fbstp
lods
test
sub
mov
in
push
sahf
arpl
adc
popa
push
sbb
std
cmpb
inc
fisttpl
push
movsl
push
xchg
sbb
test
test
push
mov
mov
cwtl
mov
enter
pop
cmp
int
adc
sub
scas
push
es
sub
inc
lock
je
add
xor
add
int3
mov
imul
inc
jecxz
mov
xchg
and
loop
inc
cld
cld
call
cmp
adc
adc
push
int3
jp
cmp
das
out
adc
or
lods
pop
and
pop
and
dec
sbb
xchg
cmc
jns
sbb
ja
or
lret
pop
jge
int
ja
movsl
sahf
out
cmp
jae
pop
iret
icebp
popf
fsubl
das
mov
cwtl
push
jno
pop
cmp
or
adc
js
jge
je
mov
pop
mov
cmp
inc
outsw
and
push
jns
mov
inc
mov
sub
fwait
jle
sub
fsubr
aaa
psubw
stos
jo
adcb
inc
orl
insl
jbe
stos
sub
mov
les
jbe
inc
shr
cmp
int
jl
inc
sbb
add
cmp
in
jno
loop
inc
fldcw
push
pop
es
xchg
roll
xchg
add
inc
out
pop
dec
cmp
std
roll
icebp
imul
push
test
fimull
mov
je
fs
ds
adc
xor
jp
push
or
ss
ficoms
paddusw
cld
or
xchg
je
arpl
in
mov
xchg
or
ret
add
cmp
inc
mov
pop
mov
jecxz
pop
stc
in
cwtl
xchg
xchg
rol
and
jle
repnz
xchg
xchg
pop
or
outsl
dec
shl
loopne
pop
das
nop
inc
fists
mov
inc
testl
leave
mov
adc
movsl
xchg
aaa
mov
jo
dec
add
pop
jo
shlb
hlt
enter
push
cmp
and
dec
adc
jle
mov
adc
cmp
stos
dec
xchg
lods
test
jg
sub
mov
cwtl
rcr
negl
and
dec
push
je
add
pushf
cwtl
insb
test
pop
das
pop
sarl
pusha
jmp
stc
aad
xor
out
and
flds
sub
cmc
cmpsl
xlat
jno
int3
sub
lret
icebp
mov
adc
mov
sub
cs
ret
fisttpl
xor
cmc
jbe
pop
mov
jmp
lea
xchg
inc
sbb
outsb
xor
dec
arpl
ret
iret
adc
into
cmp
imul
jno
cmpl
cmp
push
int
jns
lods
xchg
andl
repnz
fwait
push
dec
or
xor
cs
and
cltd
pop
in
jg
popa
adc
and
loopne
cmpsb
lods
arpl
jle
int
and
sub
sahf
sbb
push
cmp
fmull
fadd
dec
aam
sub
andb
scas
jmp
loope
fldl
xchg
push
in
pushl
fildll
rcll
or
and
sub
stos
je
xor
rclb
out
movsb
push
cli
fcom
push
cmp
ja
lret
xor
jae
outsl
rorb
addr16
andb
rolb
fwait
mov
push
test
pop
or
sub
cli
sub
out
pop
cmc
dec
out
mov
mov
addb
cld
jg
cmp
sub
lret
inc
js
push
lods
daa
out
scas
push
inc
and
lcall
mov
push
mov
mov
dec
out
aad
std
js
xchg
pop
repnz
mov
mov
loopne
in
mov
jg
xor
shlb
push
adc
fadds
lds
test
ret
mov
mov
pop
fisttpl
pop
iret
cltd
and
pop
pusha
aaa
add
cmc
movsb
mov
mov
data16
push
movsb
mov
dec
call
clc
dec
or
lock
pushf
lock
insl
hlt
mov
test
mov
lret
das
cmp
lret
jmp
jmp
out
js
repnz
inc
rorl
test
out
fwait
inc
sbb
xchg
or
sahf
dec
inc
pop
popf
cmpsb
stos
lret
lea
rolb
jno
ret
je
jnp
out
pop
pop
into
lock
test
dec
mov
stos
rcrb
jecxz
sbb
fisubl
lcall
pop
and
cltd
addr16
dec
xchg
ficomps
das
mov
sarl
test
jbe
gs
mov
sahf
imul
pushf
sbb
scas
shlb
int
cmp
xchg
sub
mov
sbbb
sbb
jg
xor
pushw
fs
inc
sahf
decb
jg
pop
repz
outsl
aas
xor
xorl
lahf
mov
stos
ds
arpl
in
fcmovnu
add
cmpb
ja
psrad
mov
dec
insb
lea
ja
dec
shrl
sti
and
aaa
aas
xor
cmpsb
mov
sub
js
mov
jbe
inc
inc
cltd
fcoms
stos
jmp
inc
imul
ret
add
xlat
in
test
pop
xchg
cmpsl
add
or
movsl
push
cmpsl
dec
rcrb
decl
call
cmc
dec
lahf
sbb
mov
dec
sub
mov
addb
leave
sbb
iret
jne
into
sbb
pop
dec
out
ljmp
xor
sbb
ja
xor
aas
inc
or
imul
adc
pop
fwait
jb
pop
int
add
mov
xor
jnp
pop
loope
or
mov
es
inc
adcb
cmpb
mov
das
push
xor
adc
stc
ret
daa
test
sti
out
or
pop
mov
pop
mov
bound
lods
sahf
lret
xor
es
push
jo
or
push
jns
das
into
cmp
mov
sub
mov
jge
gs
out
ror
sti
int3
pop
mov
xor
mov
and
cmc
adc
dec
cmp
mov
jnp
mov
mov
lds
repz
incb
cli
sbb
xchg
mov
loopne,pt
xor
inc
out
adc
xchg
pop
lret
das
fs
push
mov
rcll
popa
int
lahf
mov
popa
divb
popf
negl
cmp
mov
int
xor
add
pop
gs
add
cmp
std
mov
sti
adcl
sti
mov
test
jnp
cmc
or
dec
or
mov
and
push
dec
int3
es
cmp
add
and
in
aas
cmp
jo
sub
pop
sbb
mov
loope
mov
loope
lock
sub
jo
jle
sub
push
pop
jbe
mov
sbb
mov
pop
xor
pop
adc
mov
lods
cwtl
lret
cld
stos
and
and
mov
cmpsl
mov
cmp
je
pop
or
pop
lret
jno
inc
ljmp
aaa
fimuls
sub
add
xchg
das
sbb
jl
daa
or
and
sbb
arpl
inc
cmpsb
push
pop
xor
cld
stc
bswap
dec
dec
out
fcompl
sarb
mov
lock
xchg
push
cmp
lahf
adc
and
push
pop
jae
ror
outsb
jp
pop
xchg
sbb
mov
push
clc
rcll
or
mull
lcall
stc
popl
out
jge
enter
push
imul
cld
inc
jns
sbb
jg
jmp
scas
adc
jb
loope
lds
stos
rclb
testb
mov
aad
xchg
push
xor
push
inc
lcall
xorl
icebp
fisubl
out
fldcw
sbb
popa
mov
and
shr
cmp
add
adc
shlb
sbb
ja
mov
testb
xor
adc
adcb
push
sub
and
xor
xchg
or
mov
shl
popf
xchg
cli
cmp
fsubrl
jbe
sub
mov
add
addr16
mulb
dec
mov
mov
mov
cs
sub
out
xor
sub
ror
movb
test
out
xor
push
loope
inc
jnp
out
fcoml
xlat
jne
cmc
inc
inc
xchg
inc
in
lock
adc
je
inc
sub
pop
cmp
loopne
lock
lds
fldcw
leave
xlat
cmpsb
adc
fwait
js
scas
push
inc
xchg
or
xchg
mov
repz
dec
pop
popf
sub
les
stos
xchg
or
fcmovu
cmp
sti
outsb
or
scas
add
xchg
sarl
aaa
rorl
jp
add
pop
jb
adc
lods
and
js
pop
sti
and
jmp
icebp
loopne
into
icebp
inc
add
jns
jnp
xchg
stc
leave
mov
mov
push
xchg
in
stos
mov
jle
fdivs
and
mov
sbb
lcall
lods
jecxz
test
mov
ja
sub
popf
mov
cmp
cmp
fwait
into
cmp
xchg
pop
jp
lods
inc
call
cmp
mov
fdivs
lahf
add
fdivrs
aaa
sub
stc
into
call
push
push
std
cli
inc
scas
adc
out
lcall
or
test
inc
dec
movsl
test
sbb
pushf
ret
addr16
outsl
mov
jecxz
jb
mov
fisubrl
lahf
in
sub
lcall
pop
lea
ja
out
inc
sbb
lcall
into
xlat
sbb
mov
in
mov
add
and
insb
test
adc
out
sbb
int
dec
add
call
pop
mov
dec
cmpsb
jo
jle
lcall
mov
popa
mov
ja
xchg
pminub
adc
add
fnsave
sub
cli
ret
jne
jb
iret
mov
int
mov
sub
push
push
add
lcall
ret
daa
cmpsl
mov
pushf
jnp
insl
jno
cmp
and
rorb
dec
jmp
and
movsl
test
sarb
sbb
dec
loopne
jo,pt
subl
push
adc
adc
dec
dec
cmp
int3
add
or
mov
adc
sub
js
fbld
jmp
iret
dec
popa
bound
push
jns
xor
sbb
out
hlt
sub
lret
pop
insb
inc
adc
mov
sub
iret
gs
xchg
or
ja
push
sbb
mov
pusha
ljmp
sub
stos
imulb
mov
fwait
inc
xor
mov
rclb
cmp
fwait
xchg
xor
pushl
sbb
insb
popa
inc
mov
int
cli
mov
loopne
lret
pusha
movsb
data16
and
xor
pop
daa
cmpsl
push
xchg
or
push
sahf
fwait
sub
pop
in
daa
add
pusha
add
dec
xchg
mov
dec
xor
rorb
sbb
adc
clc
icebp
pop
js
xchg
inc
mov
dec
aaa
pop
or
std
push
mov
pop
jle
sarb
jecxz
push
mov
enter
test
inc
lret
and
loopne
mov
sub
mov
bound
mov
sbb
movsl
or
inc
ret
fmull
gs
jno
sbb
push
rol
sbb
dec
outsl
or
jbe
mov
repz
dec
xchg
add
lcall
fwait
cmp
sbb
inc
movsl
jb
pop
jnp
inc
cmp
sbb
dec
and
push
ror
aam
aam
xor
or
or
inc
sarb
sbb
jp
pop
lock
add
pop
jae
cli
mov
mov
shrl
rorb
enter
popf
mov
pop
pusha
sbb
push
scas
andl
push
dec
sbbb
aam
mov
and
std
es
mov
out
inc
sbbb
fstp
cmp
outsl
movsl
xchg
mov
pop
cmpsb
adc
push
jbe
and
fisubl
sbb
jbe
gs
insl
daa
leave
loope
push
cs
add
mov
into
mov
subb
sub
or
pop
not
shlb
cmpsb
loop
mov
push
jb
mov
or
rolb
xor
xchg
or
dec
stos
cwtl
or
mov
lret
cmp
mov
loopne
jmp
xchg
dec
es
sbbb
out
mulb
hlt
insb
loope
pop
add
in
int3
fdiv
add
sub
lds
test
push
mov
dec
sti
scas
imul
jae
xor
dec
jle
hlt
das
aas
inc
and
xor
stc
jmp
mov
xchg
mov
sub
aad
pop
xchg
leave
ret
pop
xchg
int3
je
out
test
sbb
push
sub
sub
push
ds
mov
adc
rcll
pushf
xchg
xchg
ffree
imul
lcall
mov
add
inc
pop
je
sarb
mov
sub
and
adc
mov
cmc
cmc
mov
mov
or
ret
shl
inc
lea
push
in
addr16
cmpsl
and
push
push
xlat
push
movsl
mov
sbb
add
std
xchg
mov
clc
clc
jne
and
mov
cmp
xor
mov
lret
pop
cmpsl
fisubs
sbb
nop
dec
lcall
int3
push
cmp
inc
mov
movsl
xchg
dec
clc
xchg
outsb
ret
jnp
mov
jnp
inc
push
push
cmc
push
pop
je
sub
dec
sbb
icebp
movsb
ret
mov
push
xor
rcll
lcall
mov
shll
inc
dec
mov
ret
das
es
fsubrp
js
fs
cmp
pusha
jg
sbb
dec
lock
mov
jg
mov
nop
mov
stos
mov
enter
adc
xchg
adc
in
sbb
lods
mov
pop
push
pop
shlb
push
jmp
aad
out
fisubrl
test
or
out
xchg
jmp
popa
adc
mov
sbb
dec
shlb
cmp
dec
add
sbb
mov
in
sub
out
jns
cld
stos
idivb
fildll
ja
popf
xchg
inc
lret
mov
bound
inc
ret
inc
or
fsubr
call
cmp
out
inc
inc
cmp
andb
cmpsl
shll
xlat
push
sahf
and
ljmp
ljmp
insb
loop
pop
push
adc
and
or
dec
das
imull
fcompl
pop
test
sub
stc
mov
add
mov
dec
sub
push
mov
jbe
sub
and
mov
cld
loopne
scas
push
push
cld
pop
push
add
or
divb
shl
pop
insb
insb
cltd
pop
aas
test
push
ss
test
data16
pusha
inc
mov
aad
dec
and
add
xchg
inc
stos
mov
cmp
mov
popf
js
adc
je
cmp
adcl
fbstp
out
sub
mov
and
sahf
das
mov
shll
addr16
bound
xchg
cmpsb
addr16
ret
and
in
add
nop
jb
cmp
jmp
loop
les
add
int3
xor
jne
sbb
xor
testl
shrb
dec
xchg
movsb
jns
mov
xchg
xchg
test
mov
rol
xchg
in
xchg
push
sbb
push
packuswb
xchg
xor
testl
inc
mov
jle
movsb
sbb
jns
jo
jnp
inc
in
in
movsb
mov
mov
jbe
out
lret
arpl
icebp
pop
xor
xor
test
mov
js
inc
int
mov
and
jmp
aad
mov
je
add
out
mov
sbb
and
stos
mov
dec
js
dec
or
es
out
mov
les
popa
sub
and
shrb
mov
cmpl
mov
jp
sarb
cmc
adc
add
dec
in
mov
sub
inc
test
out
leave
xor
dec
movl
add
push
aas
fstl
or
or
dec
lret
xchg
sbb
leave
mov
pop
js
jbe
xchg
arpl
mov
es
nop
adc
lret
dec
outsl
sub
push
fstpl
adc
pop
jne
xchg
sbb
and
jno
mov
sub
lret
sbb
jg
icebp
int3
mov
outsb
shl
inc
test
xchg
scas
and
push
and
fcompl
cmp
out
mov
xor
or
pop
call
or
imul
mov
and
rcrb
scas
test
jmp
into
xor
repz
xlat
fwait
inc
lahf
fisubs
pop
adc
mulb
mov
cmp
addl
sub
mov
insb
jle
add
and
fwait
xchg
adc
dec
cwtl
inc
movl
mov
in
insb
pop
xor
dec
cli
adc
or
out
insl
or
repz
push
lret
xchg
cs
shl
andl
jb
mov
xlat
enter
fcmovu
loopne
in
push
jmp
out
inc
jae
lods
out
inc
sbb
enter
fwait
push
mov
arpl
les
pop
mov
jp
testl
mov
out
outsl
inc
pop
gs
lock
in
ret
mov
sarb
fdiv
adc
pop
sbb
cmp
xchg
or
call
das
insb
fstps
mov
lcall
xor
and
int3
push
pop
xor
shrl
pop
loop
nop
pop
adcb
and
jecxz
sbb
sub
imul
mov
jo
adc
adc
pop
in
scas
ds
cmpsb
repnz
push
imul
xor
push
push
lods
jl
inc
xchg
loopne
jp
push
insb
cmpsl
pop
or
mov
mov
stos
sub
call
int3
xchg
lret
mov
mov
icebp
subb
cmpsb
cmp
mov
sub
jo
sub
mov
push
sahf
addl
or
pop
bound
and
out
data16
and
fwait
jmp
xor
cmp
pop
arpl
or
clc
push
lret
rcrl
xor
mov
add
jge
mov
sbb
xchg
orl
inc
mov
hlt
add
cmpsl
push
mov
je
dec
test
adc
pop
jl
or
rorl
out
fcomi
inc
mov
fcomi
cmpsb
dec
fisttpll
and
hlt
xchg
ljmp
stc
mov
and
xor
dec
loop
pop
and
push
add
or
pop
nop
push
shl
adc
ja
sbb
adc
mov
mov
faddl
test
inc
inc
lahf
mov
adc
pop
mov
sub
mov
aas
out
cwtl
std
sbb
out
fcomps
mov
mov
mov
pop
inc
sarb
iret
fidivl
adc
ds
pop
sub
sub
mov
inc
sub
movsb
or
nop
mov
add
int
lock
mov
jmp
jbe
mov
loope
out
test
jae
lahf
movsb
xor
adcb
cmc
ret
sub
mov
out
inc
sti
sarl
pop
pop
sbb
nop
ret
adc
int
mov
out
adc
jecxz
pusha
les
sbb
inc
xor
push
xchg
repnz
fldl
aam
cmpsl
outsl
cmpsb
int
add
int
bnd
jo
gs
cpuid
je
psllq
loop
shlb
pop
mov
pop
and
loopne
sub
movsb
xlat
cli
cmp
into
inc
adc
imul
sub
out
clc
test
xchg
and
cwtl
addl
sub
push
add
add
movsl
das
outsb
in
pop
and
sub
loopne
inc
sub
fmulp
pop
push
and
pop
call
push
ss
test
fmull
adc
cltd
pop
pushf
ss
loop
out
push
pop
inc
shl
add
sub
jp
test
ss
or
repz
push
xor
pop
or
xchg
fs
inc
out
es
push
in
cltd
push
in
jb
push
lahf
jo
dec
loop
fwait
arpl
inc
inc
push
outsb
push
jno
daa
pop
pop
dec
and
es
xchg
push
ficompl
and
lods
ljmp
inc
adc
iret
add
cmp
fdivs
inc
sub
shrl
push
in
xor
pusha
orb
sub
ss
dec
sbb
xor
sbb
jo
hlt
push
inc
movb
lds
arpl
js
push
ret
or
fcoms
jle
int
leave
cmp
jae
icebp
leave
dec
xor
mov
jne
bound
pop
movsb
sbbb
xor
fnstsw
inc
mov
sbb
sbb
call
mov
dec
into
mov
or
jne
add
dec
aas
into
jo
fimull
pop
inc
mov
push
es
in
imul
and
and
jmp
cld
sub
fdivs
mov
inc
notb
imul
dec
les
xor
test
je
and
ljmp
outsb
and
pslld
rcrb
sub
mov
sbb
je
sbb
cld
fldt
out
dec
xlat
jns
xorb
lret
and
ljmp
out
stos
push
imul
subb
mov
ss
xor
mov
es
stos
pop
pop
or
pop
jg
jl
jmp
lods
lcall
push
adc
leave
scas
push
push
sarl
fwait
inc
dec
popa
pop
fwait
icebp
imul
lcall
ds
cwtl
ret
inc
push
and
add
out
in
mov
ljmp
and
push
xor
add
cmp
int
filds
popa
call
add
insl
push
repnz
and
inc
inc
mov
test
les
sub
push
jg
mov
pop
data16
xor
inc
js
add
mov
mov
pushf
fistpll
loop
cmp
or
stos
dec
ds
pop
out
lods
xchg
shr
roll
jg
pop
icebp
test
lods
inc
fisubrs
add
mov
or
or
mov
dec
sti
shll
mov
pop
in
repz
push
xchg
inc
imul
mul
es
aam
cmp
ficompl
add
push
push
jbe
sbb
out
gs
enter
ds
ja
bound
push
rclb
or
inc
ds
jge
push
scas
jnp
stc
and
cltd
cmp
inc
mov
cs
mov
dec
jecxz
xor
xorb
sbb
mov
xchg
int
cmp
xor
inc
push
aad
addr16
pushf
sub
lea
hlt
jmp
pop
pop
mov
arpl
sub
lds
adc
push
mov
fmuls
or
into
in
add
lods
icebp
cmp
std
sub
jnp
dec
adc
jl
or
mov
jbe
sbb
adc
sub
and
and
cmpsb
pop
jo
int3
jo
push
or
pop
loope
scas
das
jbe
xchg
sbb
aaa
out
sub
test
js
mov
push
or
in
lcall
mov
cmp
lock
and
daa
mov
aas
les
xchg
mov
and
ret
inc
subb
fcmovb
mov
cmpsl
aas
sahf
and
push
in
rcrl
repnz
dec
pop
mov
jecxz
lods
cmp
dec
or
mov
pop
push
xor
and
xor
push
pop
cwtl
imul
clc
xchg
js
fstpt
fdivrl
jmp
cmp
shl
push
push
xor
pop
dec
xor
or
and
mov
in
and
push
mov
xor
add
xor
dec
rolb
lea
adc
inc
push
mov
int
aad
jg
xlat
out
mov
xlat
inc
in
les
mov
mov
dec
add
movb
inc
cmp
test
cwtl
pop
xchg
cmc
jno
push
sub
add
les
lahf
jmp
int3
fs
repnz
dec
movsl
out
sub
jmp
mov
ret
into
inc
dec
cmp
cmp
clc
sti
in
mov
sbb
into
cmp
adc
mov
aam
xchg
mov
rcr
testl
mov
dec
subl
gs
bound
jmp
mov
push
stc
cmp
or
lea
inc
adc
stc
dec
loopne
pop
cmc
mov
iret
fwait
nop
mov
pop
mov
popf
movsl
lcall
filds
inc
inc
addr16
cmc
cmp
xor
jl
jbe
lods
pop
mov
mov
cmp
lds
pop
mov
dec
mov
push
movl
stos
mov
cs
xchg
lods
push
jae
in
jge
push
push
aad
mov
jbe
mov
xlat
out
or
lahf
addr16
push
mov
adc
push
and
inc
enter
into
gs
stos
adc
mov
add
fldt
mov
mov
inc
loop
lods
push
lods
or
insb
arpl
jne
mov
lret
mov
lret
or
aaa
es
jle
push
sbb
pop
mov
mov
mov
js
xchg
xchg
or
xchg
adc
neg
mov
aas
mov
outsb
mov
je
xor
imul
push
xor
pop
xchg
notb
pop
faddl
fnstcw
sub
bound
mov
push
jmp
aas
xchg
idivl
fcmovnbe
jne
repz
icebp
lods
popf
mov
sbb
repz
in
push
cs
cltd
sub
adc
dec
dec
in
push
in
mov
sbb
aam
loopne
mov
stos
imul
gs
les
mov
sub
and
push
pop
dec
and
fisttpl
or
in
rcrl
js
shrb
jb
sub
pop
mov
mov
popl
mov
pop
call
mov
sbb
inc
sub
je
xor
cwtl
inc
adc
sbb
cltd
dec
ficompl
jnp
rcrl
sub
cltd
jno
adc
jecxz
std
sbb
outsb
aam
jae
pop
and
cmp
mov
mov
mov
push
mov
movb
mov
loopne
into
pop
inc
dec
insl
or
das
dec
icebp
aam
push
popa
fildl
xor
mov
adc
or
mov
mov
out
sbb
arpl
jmp
ljmp
mov
lods
inc
mov
leave
fbstp
mov
dec
pushf
and
movsb
mov
jp
jle
lahf
ds
mov
or
rclb
bnd
lret
ljmp
ret
and
pop
mov
addr16
mov
cmp
mov
cwtl
or
cwtl
xchg
outsl
fiaddl
outsb
outsb
mov
or
push
mov
jb
int3
mov
jb
imul
outsl
adc
fstl
les
cmp
pop
test
jp
dec
push
fimuls
xor
adc
int3
mov
ret
jp
or
inc
adc
pop
ficompl
and
cmp
xchg
cmpsb
or
hlt
cld
mov
out
mov
flds
cmpsl
imul
scas
or
imul
les
rol
test
mov
push
int
jae
popf
lea
push
add
addr16
cwtl
push
xchg
mov
sub
or
shl
sub
lea
xor
or
fwait
xchg
pop
dec
xchg
and
scas
inc
pop
lds
push
xchg
xchg
pop
lahf
testl
into
add
call
ljmp
sahf
dec
xlat
popf
inc
ret
jno
mov
or
xchg
ret
mov
xchg
mov
cmc
popa
mov
cltd
test
xchg
and
xchg
dec
dec
stos
mov
hlt
jnp
fisubrs
mov
loope
or
dec
sahf
or
cs
fistps
pop
push
loopne
fdivp
testl
push
ret
es
dec
shll
aam
decb
add
cmp
dec
add
sahf
insb
mov
ss
mov
cmpsb
lods
mov
adc
xchg
icebp
sbb
jge,pn
ret
pop
push
and
mov
ja
std
testl
shrb
jecxz
into
sti
xchg
push
stos
lods
lahf
push
sbb
test
pop
xor
es
fdivl
shl
mov
sbb
push
add
mov
push
pop
pop
sbb
inc
out
clc
xchg
inc
mov
xor
xchg
xor
and
inc
into
addr16
push
arpl
leave
pushl
dec
sub
adc
dec
xor
aam
jmp
adc
or
fnstsw
js
shll
and
roll
sub
or
xorb
jns
aaa
cmpsl
jecxz
int3
xchg
test
nop
iret
ret
icebp
jno
jmp
test
sbb
cmpsb
cwtl
push
jecxz
lcall
fists
in
and
cmp
mov
xchg
jo
ja
fs
xlat
addr16
shll
sub
cmp
inc
mov
add
adc
dec
outsl
sbb
jae
stos
and
jge
popa
repnz
out
in
push
xor
cs
aas
aas
test
push
or
movsl
xor
cmpl
sbb
and
repz
ret
lock
loop
sub
mov
fdiv
jmp
sbb
loope
push
ss
sub
push
fsubl
or
cltd
stos
pop
adc
cmp
jmp
push
xor
push
imul
stos
ja
mov
sub
faddl
sub
ror
xchg
mov
ss
and
out
mov
mul
cmp
scas
adcl
cmpsb
xchg
ss
or
es
out
jl
jmp
popa
mov
cwtl
mov
mov
mov
gs
lret
js
out
out
out
les
xchg
push
dec
jbe
cli
and
insl
test
mov
sbb
add
mov
in
cmp
out
push
xchg
xor
pop
sub
jb
hlt
sub
mov
fstp
or
ret
sbb
add
in
shr
lods
dec
test
lock
xchg
pusha
mov
inc
cmpsb
jnp
gs
ja
test
mov
rclb
sbb
ja
mov
or
popa
sbb
mov
aaa
int3
lock
inc
in
add
dec
lds
dec
sub
shrb
add
inc
pushf
xchg
loop
jmp
mov
out
push
lret
mov
hlt
dec
test
and
xchg
or
loopne
loop
lock
fadds
cmp
dec
in
popa
cli
sbb
dec
adc
mov
inc
sbbb
dec
jnp
xorb
aaa
mov
movsl
mov
cmpsl
out
test
movsl
mov
outsb
jg
ret
pop
sbb
sbb
push
int3
mov
sub
xor
or
add
xor
lock
and
push
sbb
xchg
cwtl
lods
subb
cld
pop
mov
cmc
loope
xchg
sti
movsl
mov
sbb
xchg
add
jmp
sbb
inc
xchg
stc
adc
and
or
mov
arpl
cld
loop
xor
xor
xlat
imull
fildll
or
mov
push
mov
mov
xor
mov
sbb
add
out
cmc
xchg
fsubs
rcll
sub
shlb
cmp
mov
gs
lcall
arpl
lds
lret
pushf
adc
inc
dec
jmp
in
adc
inc
pop
sbb
sub
popa
cltd
sub
ret
mov
fstpt
in
push
fldl
pop
pop
push
dec
lret
ret
lock
sbb
push
cmp
addl
push
xor
and
fs
push
jle
pushf
leave
jg
insb
dec
dec
inc
cltd
insb
cmp
mov
inc
add
cmp
adc
ljmp
cwtl
and
cltd
push
pop
dec
lds
pop
add
mov
xor
or
loop
cli
or
cmp
push
pop
adc
imul
mov
ja
test
push
add
or
jecxz
push
push
add
jno
iret
and
roll
push
push
mov
cs
aam
fildll
aam
push
xor
xchg
sti
push
inc
xlat
jg
mov
in
lds
or
sub
push
stos
mov
sbb
jb
mov
add
mov
mov
int3
xchg
add
push
sbb
ds
and
je
cmp
enter
out
scas
xchg
cmpsl
mov
rolb
lds
ss
mov
lret
stc
mov
adc
cmp
cmp
sub
notl
dec
call
cmp
mov
sbb
mull
sbb
loope
test
push
ljmp
jno
xchg
std
adcb
cmp
lahf
pop
jae
rolb
mov
lret
fldcw
pop
cmove
cltd
xchg
jo
xchg
push
pop
sbb
data16
adc
or
adc
cltd
nop
imul
push
adc
outsb
popf
jge
loope
mov
add
push
inc
rolb
and
xchg
dec
pop
cmp
cmpsl
bound
push
int3
push
cmp
sbb
cmp
dec
test
dec
fwait
decb
mov
paddq
int3
jns
ficoml
cs
mov
outsb
xor
aad
dec
fadds
bound
sub
iret
adc
sub
pusha
mov
test
cmp
ror
sbb
mov
add
pop
sub
enter
stos
aam
int3
and
cmc
lahf
add
push
inc
lret
sub
push
mov
mov
cmc
insl
mov
int
jae
lea
mov
or
xchg
mov
xchg
xchg
arpl
adc
push
xchg
sub
mov
and
je
insl
into
jo
fldcw
fs
insl
cmp
sbb
leave
aam
jnp
xor
sbb
dec
sti
js
push
jg
sub
test
jno
inc
bnd
inc
sub
fcmovnb
repz
ss
aad
jmp
xchg
inc
cwtl
jnp
stc
pop
jo
loope
inc
je
push
fidivs
sbb
pop
sbb
pop
push
jl
adc
fmulp
inc
repnz
insb
push
xchg
jns
cmp
push
dec
mov
xorb
pop
dec
xor
enter
in
in
test
adc
insb
inc
aaa
repnz
adcb
call
push
movb
fimuls
fwait
lds
addb
scas
adc
inc
pop
push
test
or
pusha
adc
push
mov
lods
ljmp
push
pop
sub
out
out
imul
mov
and
push
fidivrs
jl
fldt
test
cmp
push
outsb
lcall
ss
and
mov
loopne
xor
adc
mov
xchg
mov
mov
out
sbb
je
xor
xorl
lcall
ljmp
insb
mov
xor
rorb
add
lret
loope
out
pop
mov
and
adc
xchg
jp
lahf
jg
repnz
insl
push
pop
pop
popf
cwtl
or
lock
and
mov
pop
js
push
jnp
cmpsl
cmc
test
aas
ret
ljmp
dec
popa
jbe
or
aas
out
cmp
sbb
adc
mov
movsl
imul
stc
xchg
int
or
or
ret
push
stc
rcrl
inc
xchg
sbb
mov
mov
adc
or
xchg
lret
leave
iret
enter
xchg
pop
pop
into
cmp
lahf
in
outsl
in
inc
mov
cs
cmp
sub
cld
jns
pop
cmovae
xor
ss
sub
das
jle
sahf
es
fdivr
inc
jb
push
xchg
jbe
xor
xlat
and
push
fdiv
out
std
fs
cmp
lods
in
test
sub
out
inc
outsl
movsl
cmp
decb
aad
push
xor
jecxz
sarl
imulb
pop
and
dec
pop
iret
xor
mov
xor
fnstcw
ror
xchg
pop
dec
xchg
mov
mov
add
sub
ret
adc
adc
dec
inc
jmp
imulb
les
bound
inc
enter
pop
aaa
inc
mov
mov
rclb
cli
rorb
repnz
xchg
push
lahf
les
cs
mov
adc
jg
fistpll
adcb
add
test
or
rolb
sbb
mov
xchg
cmp
out
dec
mov
mov
xchg
mov
dec
xchg
mov
push
out
xchg
mov
movl
mov
in
sti
mov
aad
jne
sbb
lods
jecxz
mov
jmp
inc
cs
sbb
popa
and
xchg
adc
inc
or
mov
and
and
arpl
repnz
cmp
cmp
adc
sbb
xchg
in
adc
mov
xchg
ss
out
pop
sub
pop
dec
adc
add
andb
jbe
or
mov
in
je
or
test
fsubrs
or
xlat
out
sbb
adc
mov
imulb
movsl
mov
push
mov
sub
xchg
or
jb
adc
stc
fs
sqrtps
pushf
fistps
mov
push
aaa
xchg
enter
movsb
and
xor
sub
jae
mov
mov
imul
nop
inc
pop
ss
push
dec
add
push
jl
and
push
stos
inc
subb
gs
mov
mov
outsb
adc
mov
mov
enter
fstpl
iret
adc
icebp
or
and
add
pop
aaa
xchg
movsl
outsl
add
jbe
sahf
adc
adc
sbb
pop
ret
gs
loop
inc
add
mov
sub
in
xchg
mov
push
inc
mov
cmp
jno
leave
mov
sub
cmp
sbb
fwait
pop
iret
add
xorb
dec
jmp
in
dec
pop
pop
in
in
lahf
jl
mov
in
clc
pop
shlb
popa
lret
adc
cmc
mov
push
insl
out
aad
push
out
xchg
push
movsb
xor
sub
add
or
divb
or
ja
add
dec
out
mov
insl
lret
cs
push
push
xor
push
xchg
jae
les
popf
fxch
mov
mov
cmpsb
push
aaa
daa
and
test
les
push
jmp
aam
mov
lock
pusha
aas
inc
in
cmp
mov
adcb
jge
jle
cli
sbb
sub
xorb
loope
test
in
xchg
jnp
xchg
pop
cmp
mov
jae
mov
adc
jp
loopne
jnp
aam
mov
scas
jmp
roll
lcall
xor
xchg
fwait
xor
cmp
sub
dec
cmp
jle
or
push
iret
jmp
jmp
pop
xchg
and
cmp
repnz
cli
lret
fs
mov
xchg
mov
and
int3
push
dec
test
push
orl
mov
mov
movzwl
leave
clc
out
dec
sbb
sub
inc
imul
sub
enter
pop
or
cli
adcl
inc
pop
imul
scas
rcrb
jne
dec
jmp
push
loope
xor
inc
and
pusha
jge
arpl
loopne
loop
ret
jmp
or
bound
pop
lods
roll
inc
out
mov
dec
sbb
or
mov
aas
push
and
into
scas
bnd
dec
mov
mov
xchg
ljmp
les
outsb
cltd
lret
cwtl
mov
leave
ljmp
insl
ljmp
mov
push
outsb
xchg
and
jno
rorb
mov
aam
je
mov
in
xchg
sbb
loop
cld
adc
scas
inc
das
mov
pushf
scas
and
xchg
mov
mov
pop
fnstenv
adcb
sti
stc
repz
out
sub
imul
ja
inc
cmp
push
fsubrl
mov
xchg
push
mov
jg
push
pop
nop
push
fisttps
shrb
andl
xchg
and
add
or
out
cwtl
cli
ret
loop
xor
pop
push
imul
mov
inc
xor
fistps
mov
cmp
insb
adc
outsb
inc
shl
int
insl
adcb
hlt
or
das
call
movsl
cmp
pusha
das
jbe
jo
and
inc
movsb
scas
dec
cmpsl
in
call
scas
push
push
dec
sub
and
fs
sbb
xor
xlat
test
fistpll
inc
scas
mov
cld
ds
add
jbe
es
dec
jnp
sbb
mov
dec
adc
pop
and
fs
push
inc
mov
sti
bnd
aam
jbe
pusha
bound
ja
push
dec
pop
cltd
mov
push
pop
addl
mov
vpaddw
jp
imul
mov
clc
imul
cmp
in
shlb
popa
jbe
nop
scas
rorl
test
lds
pop
cmp
jo
icebp
jmp
mov
lahf
sbb
int
loope
out
enter
and
adc
and
iret
in
add
mov
scas
cwtl
int
mov
jno
xor
out
jne
idivb
sub
stc
stc
and
jle
mov
pop
shlb
jne
repz
inc
test
adc
shl
fildll
mov
pushf
inc
jae
mov
cld
enter
dec
mov
cmp
push
dec
outsb
sar
mov
inc
popf
movsb
jo
mov
and
and
inc
outsl
xchg
xor
leave
pop
gs
aad
dec
mov
mov
jge
cmp
push
push
sub
lahf
aas
xor
adc
adc
std
add
xor
flds
jecxz
lea
push
adcb
rcrb
aaa
adc
ja
fwait
clc
dec
mov
movsb
ljmp
xchg
xorb
subl
out
lahf
or
enter
or
inc
dec
pop
xchg
movsl
sti
add
test
xchg
xlat
adc
push
mov
jp
cli
cmpb
ja
jnp
shll
adc
addr16
fnsave
es
mov
fldenv
xchg
adcb
shlw
pusha
cwtl
add
xor
rclb
ret
xlat
inc
xchg
xor
cld
mov
out
iret
lods
or
stos
pushf
and
pop
fsts
xor
and
mov
cmp
je
mov
enter
aaa
adc
call
push
pop
mov
popf
pop
adc
out
mov
fiaddl
xchg
repnz
lret
mov
jbe
xchg
or
and
addb
and
adc
mov
repz
ljmp
es
outsl
dec
add
cmp
pushf
adc
in
adc
fwait
jo
sbb
push
xchg
loopne
popa
clc
inc
mov
jb
dec
cmp
daa
push
jmp
mov
cmp
icebp
es
mov
jge
call
and
aad
cmp
insb
nop
sarl
jecxz
and
add
mov
cli
scas
sbb
test
js
shll
push
sub
lea
int
inc
icebp
orb
sbbl
xchg
lcall
test
jb
fisubrl
lock
cmp
daa
jno
inc
cmc
xchg
into
xor
stc
pop
pop
pop
sbb
or
test
fldt
xchg
ficoml
adc
mov
ror
or
ljmp
ds
mov
push
cltd
icebp
dec
jb
jp
dec
push
call
and
scas
dec
lea
jb
lret
or
xor
inc
in
sub
push
pushf
jnp
sbb
push
pop
sbb
cmpl
bound
ljmp
in
sbb
lret
inc
scas
inc
push
subps
mov
push
xchg
mov
xor
rcl
faddl
mov
or
mov
incb
sub
push
xor
xor
push
sub
je
or
xchg
mov
fs
test
out
cmp
pop
sub
insl
or
scas
pusha
jp
xor
sbb
xchg
imulb
inc
pop
lock
jecxz
iret
push
or
fs
push
dec
jmp
pop
xchg
mov
push
sbb
lcall
jne
inc
pop
pop
xchg
in
pop
mov
in
mov
xchg
enter
pop
add
imul
ror
and
pop
inc
sbb
lret
pop
jl
outsb
fwait
mov
mov
nop
nop
or
and
aaa
fs
insb
xchg
shlb
and
aad
xchg
dec
cmp
mov
lock
fisttpll
xchg
cli
dec
inc
enter
repnz
and
lock
orb
test
jns
mov
lods
gs
mov
test
mov
adcb
shrl
icebp
scas
lods
loop
xor
mov
aas
in
jnp
js
int3
mov
pop
mov
ret
inc
mov
mov
stos
inc
inc
rcrb
push
das
or
adc
mov
insb
inc
lea
mov
andps
or
ficoms
enter
repnz
lcall
adc
fcomps
xchg
lods
sub
cli
fildll
sarl
cltd
add
in
cli
push
ja
cmc
xchg
je
fcompl
bound
sub
daa
nopl
push
xchg
jl
fdivrs
fstpt
loopne
dec
cmpsl
ficompl
in
iret
cmp
mov
sub
movsl
inc
mul
fisubl
push
dec
iret
fistpll
sub
jns
mov
aaa
daa
addr16
mov
and
dec
jg
insl
out
sbb
pop
pop
lret
test
mov
movsb
lock
lock
dec
rclb
mov
nop
ret
mov
mov
or
cmp
insb
pusha
push
mov
adc
push
inc
or
out
rcrb
fisttps
inc
and
repz
lods
mov
pop
push
sbb
test
cmp
fistpll
lea
push
push
stos
in
fdivrs
cmc
ljmp
inc
imul
jp
mov
dec
ss
xchg
repnz
dec
in
movsl
cmp
icebp
push
in
mov
jne
enter
cmp
add
stos
ret
xlat
sbb
jge
in
fs
mov
popf
iret
mov
mov
aad
pop
scas
orb
mov
mov
mov
repnz
mov
push
inc
xlat
mov
xor
inc
xchg
push
mov
xchg
sti
mov
adc
lahf
loop
adc
lock
int3
and
rcll
xor
cwtl
xor
data16
lds
and
dec
pop
repnz
ret
xchg
sarl
cmp
add
popf
js
pop
lret
enter
xchg
sti
rorl
out
dec
lahf
pop
shlb
hlt
xchg
push
push
cmp
push
mov
adc
fsts
in
adc
mov
lods
inc
jmp
push
sub
xchg
icebp
mov
cmp
push
xor
xor
test
pop
add
xchg
insl
push
mov
inc
decb
ljmp
jne
jp
push
and
fildll
pop
jo
dec
sbb
xchg
scas
roll
sub
das
ljmp
dec
repz
xorl
xchg
lods
mov
pop
test
mov
inc
imul
and
pop
jmp
sub
rcr
pop
and
xorb
or
repnz
nop
imul
outsb
sti
pushf
pop
push
sub
pop
lea
aam
dec
sarl
cmp
sub
xor
or
sub
enter
sub
in
mov
in
loopne
mov
mov
xlat
lea
imul
add
mov
lahf
pop
jl
aam
lahf
lods
xchg
and
mov
stos
jge
in
enter
add
shlb
dec
push
les
adc
ss
inc
mov
jmp
pop
out
push
push
mov
push
inc
and
mov
cs
outsb
xorb
push
mov
faddp
mov
aad
stos
cmpsb
push
outsl
das
orl
xchg
xchg
fildl
popa
push
cltd
xchg
cli
push
in
andl
js
cwtl
aam
fistps
aad
mov
cltd
and
inc
addb
int
and
mov
push
movsb
push
cmp
adc
push
mov
and
pop
sti
cmp
imul
andl
mov
sbb
sub
add
adc
cmp
fdivr
mov
popa
xchg
mov
push
add
lods
das
bound
sbb
scas
mov
add
cltd
add
pop
pop
enter
push
sbb
test
dec
out
push
rcrl
imul
jle
inc
lret
call
and
adc
pop
adc
call
inc
insl
xor
mov
int
addr16
pusha
jp
imul
int
or
out
xchg
or
mov
loope
fistl
inc
dec
inc
loop
and
addr16
jno
sahf
push
out
xor
push
out
dec
inc
loope
movsb
adc
scas
add
mov
mov
sub
sub
out
or
es
lahf
jle
in
fsubl
in
fsin
out
hlt
add
dec
sbbl
jae
iret
cltd
jbe
out
js
test
adc
lret
test
loope
jl
jo
out
push
jne
mov
push
xchg
and
xor
xorb
xchg
in
fidivs
mov
bnd
inc
or
push
repnz
out
jecxz
fbstp
fsubrl
in
int
xchg
inc
in
vunpckhps
push
sti
in
adc
movsb
sbb
iret
inc
cltd
out
icebp
lods
adc
push
out
jae
js
insl
mov
movsl
rolb
pop
cmp
xor
pushf
mov
sgdtl
add
sub
sbb
inc
jbe
aad
xor
dec
cmp
stos
stc
loopne
lret
mov
pop
sub
ljmp
or
pusha
pusha
cmp
xchg
mov
inc
adc
mov
jo
lods
fstps
fsubs
repz
repz
ret
pop
push
popa
scas
mov
rcrb
sbb
jle
mov
das
int3
jns
movsb
rcrl
incb
mov
fsubrl
aaa
dec
insl
dec
inc
inc
or
pop
pop
xor
dec
mov
fdivr
pop
push
sbb
mov
enter
cmp
xor
gs
dec
or
shlb
adc
aam
int3
mov
xor
ror
fcompl
xor
adc
xor
push
aas
cmp
push
ja
cltd
fs
sbb
testl
jl
loopne
sbb
pop
stc
orb
pop
fnstenv
fwait
out
inc
cwtl
mov
mov
xchg
rorl
sub
leave
add
or
fistpll
inc
ljmp
fcompl
mov
es
aas
mov
sub
or
rcr
and
rolb
daa
loop
pop
pop
sub
pop
lods
pop
adc
cmp
scas
loopne
lods
or
loope
sbb
aaa
scas
mov
fisubrs
inc
stos
aaa
ret
test
test
dec
repz
cmpsl
out
add
sbb
out
clc
push
mov
lahf
adc
mov
mov
or
adc
mov
stos
pop
and
jns
mov
out
sub
loopne
fldl
mov
adc
lcall
out
adc
addl
shl
pop
inc
and
hlt
jno
popa
rcrl
dec
xchg
bound
orb
rcrb
iret
lods
xchg
adc
out
andb
fs
je
mov
lea
loop
pushf
test
or
mov
sbb
xchg
adc
cltd
test
sbb
xchg
cmp
sbb
lret
add
das
insb
inc
pop
leave
scas
mov
inc
xorl
add
cli
cmpsb
cmp
into
lods
mov
test
fcoml
pop
aam
jge
or
inc
lea
pop
cmc
push
ret
xchg
jle
lret
ds
xor
mov
mov
mov
mov
xchg
int3
sub
jno
sarb
jge
punpcklbw
xchg
insb
jae
sbb
push
movsl
push
and
pop
idivl
js
push
xor
push
push
test
push
xchg
aam
data16
repz
out
sub
lock
aad
adc
jge
or
cmp
arpl
das
rorb
xor
and
push
xchg
movsb
popf
dec
mov
andb
dec
pop
adc
xor
lods
fs
lret
cmp
inc
add
dec
sbb
icebp
jno
dec
sbb
xor
sbb
movsb
lods
mov
push
mov
stos
mov
push
into
sbb
inc
cmp
imul
cmp
and
cmc
and
or
ficoml
jmp
and
sub
repnz
call
mov
bound
daa
xlat
jl
mov
mov
call
push
insl
add
inc
pop
xor
jo
pop
mov
push
jge
pushf
lcall
cmp
adc
or
add
stos
pop
adc
imul
xchg
in
add
inc
fstpl
std
enter
lret
dec
stc
mov
push
jmp
imul
imul
fiadds
test
gs
ja
xor
enter
out
pop
leave
mov
fidivrl
cmp
out
xchg
sbb
sbb
mov
loop
hlt
mov
out
shl
fcmovu
lret
std
into
inc
sub
push
leave
mov
fistpll
out
bound
movsb
cwtl
push
loope
jno
lret
leave
pop
xor
idivl
push
orl
ss
repnz
out
cmpsl
mov
xchg
xchg
xchg
les
mov
mov
mov
cmpsl
mov
cmpsb
push
movsl
imul
sub
mov
jge
mov
outsl
adc
jnp
lret
push
jge
mov
add
insl
mov
ss
mov
xchg
add
jmp
loop
int3
out
xchg
add
mov
jp
mov
jecxz
movsb
not
fs
sbb
out
jns
mov
scas
rorb
lcall
std
ret
xchg
nop
xchg
add
incb
cwtl
sarl
decb
and
gs
mov
mov
lods
mov
lods
iret
stos
test
mov
movsl
js
add
ss
cmc
inc
xor
push
outsb
jp
xchg
test
sub
js
push
cmp
push
mov
mov
cmp
sbb
mov
stos
adcb
scas
adc
jne
push
int3
stos
or
jb
std
dec
lods
fstpt
imul
dec
push
movsb
inc
int3
les
xor
insb
fadd
xchg
mov
dec
sbb
stos
fdivrs
jl
sbb
std
sbb
jb
push
jmp
ljmp
and
sahf
nop
xor
jne
or
pop
sub
sub
aaa
inc
push
leave
insl
bound
pop
decb
arpl
mov
loop
arpl
xchg
sbb
and
pop
ds
sbb
push
and
insl
loop
xchg
cmpsl
lret
xchg
xor
cli
or
cmpsb
cld
leave
aas
popa
das
sbb
mov
fidivs
pop
popf
imul
pop
test
nop
mov
mov
sbb
mov
sub
add
ret
jl
fwait
int
imul
adc
add
add
mov
loope
sbb
and
mov
adc
push
mov
stc
fsubrl
push
sarl
outsb
pop
mov
mov
mov
mov
jne
hlt
out
and
xchg
insl
push
cmc
mov
fidivl
push
push
lcall
lock
or
movsb
les
daa
lea
mov
add
jl
push
gs
mov
out
cmp
mov
dec
jnp
movsl
clc
int3
data16
in
inc
xor
add
mov
push
clc
dec
cmp
and
sahf
lock
xchg
loope
and
sbb
out
dec
xor
mov
sub
imul
int
xor
js
push
or
pmaxub
and
inc
add
dec
jg
lea
or
pop
cmpsl
jno
fsubl
jge
in
mov
mov
stos
imul
jmp
sarb
test
jmp
divb
pop
cmp
insb
dec
ror
mov
lds
outsl
arpl
jbe
das
xchg
ror
pop
add
lahf
mov
dec
stos
sub
sbb
test
xchg
rcrl
aaa
sub
dec
lea
xchg
loopne
jbe
outsl
dec
in
ret
dec
and
ds
sbb
mov
loope
jb
insb
or
aaa
femms
scas
cmpsb
sbb
popf
pop
dec
rclb
xorl
je
push
jecxz
scas
ret
out
push
sub
push
je
pop
cmpsb
cmp
je
push
cmp
push
cmpsl
cmpsb
push
adc
jae
jle
lret
outsb
cwtl
mov
xor
pop
jno
scas
inc
dec
lds
mov
test
push
in
or
sub
sbb
cmpsl
ds
xor
out
loopne
mov
daa
repnz
stos
js
xchg
daa
ret
jae
mov
adc
out
out
out
jmp
lret
stos
addr16
arpl
adc
dec
pop
jns
shll
or
xor
jl
xor
gs
and
jb
les
xchg
fimuls
xchg
aam
xchg
cmp
fidivrs
lcall
dec
jl
sbb
jae
rorl
sub
xlat
sar
xchg
mov
push
mov
imul
dec
subb
movsl
fisubrl
repnz
arpl
loope
pop
pop
xchg
bound
outsb
loop
test
xor
bound
leave
cld
xchg
fsubrl
xchg
insb
adc
push
sub
out
or
xchg
out
cmp
xor
mov
pushl
cmp
outsb
pop
int
hlt
int3
lret
cltd
dec
loop
mov
cmp
shrb
and
pop
cmp
mov
test
ret
and
mov
jne
adc
jg
jg
outsb
jmp
mov
in
shrl
mov
jb
add
in
pop
test
xchg
xchg
xchg
imul
repz
mov
sbb
mov
imul
sti
hlt
data16
adc
add
into
adc
shrb
and
pop
pop
icebp
xchg
and
fdivrs
shr
clc
mov
and
mov
adc
outsb
cltd
or
mov
mov
inc
pop
bnd
mov
mov
adc
sbb
xchg
pop
xorl
aas
shrl
loop
mov
cwtl
int3
cmp
adc
push
daa
mov
ret
inc
ret
sub
push
pop
and
add
add
insb
stc
inc
jne
imul
jno
mov
add
pop
mov
lock
xchg
popa
sti
dec
call
push
sbb
and
sub
ret
xchg
scas
xchg
xorl
std
subl
adc
aas
push
push
arpl
in
xchg
popl
inc
dec
xor
mov
fstpl
and
shlb
inc
sti
fsts
loop
loopne
mov
test
jle
in
cmp
inc
pop
out
pop
add
xchg
test
mov
loope
es
test
loop
fwait
dec
sub
cmpsl
jecxz
sbb
sbb
push
hlt
test
test
ss
sub
xorb
int3
xchg
or
in
lea
xchg
mov
sub
fnstsw
or
sbb
jg
out
and
or
clc
sub
dec
daa
push
scas
sub
sbb
ds
fstpl
in
popa
adc
push
fwait
push
gs
jbe
iret
mull
ret
mov
xor
inc
cmp
and
mov
in
adc
int
mov
fxam
sti
daa
test
jg
cmp
xchg
ljmp
cmp
popa
xor
mov
shlb
leave
or
adc
mov
and
cmp
fwait
imul
es
jnp
push
bound
orl
mov
jl
mov
loope
mov
cmp
sbbl
rclb
sub
cmp
repnz
je
cmpsb
sbb
xor
jb
fmul
xchg
int3
fdivrl
stos
mov
scas
inc
sti
jb
xchg
jo
in
and
inc
lods
jae
adc
pop
imul
adc
and
mov
hlt
cmpl
add
test
dec
ds
cmp
pop
push
push
stos
test
adc
or
mov
mov
fsubrs
js
push
daa
shll
push
js
and
call
inc
lret
ja
mov
cwtl
xor
test
in
and
mov
jo
fldcw
idivb
pop
aaa
in
fimull
and
aas
daa
jp
push
cmpsl
lcall
push
leave
es
jp
roll
insl
out
xchg
mov
mov
roll
mov
scas
push
jbe
ljmp
cmp
sbb
cld
push
bswap
jb
push
insl
lret
add
add
data16
cs
ds
aad
cmp
inc
mov
imul
cmp
cmp
and
push
mov
mov
cmc
xchg
pop
in
rcl
pop
push
xor
mov
into
cmp
dec
sub
and
inc
push
fwait
not
dec
nop
lds
push
ss
fcompl
adc
sbb
pop
or
push
xchg
xor
aad
push
or
dec
ret
or
mov
cmpsl
hlt
and
imul
adc
imul
lret
cltd
cmp
int
cmp
mov
stc
dec
outsb
lods
addr16
cld
adc
sub
mov
pop
mov
imull
jno
aaa
mov
cmp
xchg
and
jns
mov
incl
push
xor
and
mov
ret
insb
sahf
outsb
pop
xor
repnz
cld
das
xor
push
aad
dec
loope
cmc
int3
sahf
je
imul
fsubrs
ss
xor
mov
inc
shl
cmpsb
or
sbb
pop
shlb
fimull
into
dec
mov
scas
xchg
ljmp
shl
pop
cld
mov
out
fwait
insl
lods
int
pop
pop
push
nop
fwait
mov
add
mov
pop
ret
faddl
cmpsb
xor
dec
adc
mov
fcomp
mov
push
add
ret
aam
cmp
insl
inc
push
loop
sub
mov
cltd
push
repz
dec
sub
sbb
push
leave
pop
adc
sbb
xor
adc
xor
mov
aad
clc
pop
cmpsl
and
adc
movsl
cld
sub
stos
push
jp
incb
mov
std
and
call
xor
loop
scas
dec
cmp
add
dec
in
mov
pop
push
lods
les
pop
pop
and
pop
out
sbb
stc
cmp
pusha
jmp
cmp
mov
mov
add
cmpsl
pop
call
jge
sub
in
hlt
cmpsb
or
rcrb
cld
addr16
pop
fnstenv
andb
outsl
or
jecxz
rolb
jb
fcoml
dec
dec
push
push
push
xor
or
pop
push
add
dec
leave
jb
sub
dec
jns
pop
out
shrb
inc
push
xchg
data16
rcll
fs
mov
mov
test
fbld
into
mov
inc
mov
mov
bound
push
fadds
cmp
std
scas
and
pop
lcall
mov
aam
jb
in
dec
fstps
push
insl
movups
and
xchg
cmpsl
pop
inc
dec
mov
lret
lret
inc
push
mov
addr16
aaa
std
roll
xchg
scas
jg
xchg
mov
add
push
jl
jns
inc
mov
and
icebp
pop
or
jb
icebp
sbb
and
sbb
push
pop
cmp
pusha
ret
lods
dec
lea
mov
and
sub
inc
enter
inc
mov
jle
mov
cs
jbe
push
or
call
popa
loope
rcrl
ljmp
xor
jmp
sarl
in
pop
or
jnp
sub
ljmp
sub
arpl
sarb
push
sbb
xchg
addr16
jg
loope
ror
mov
sbb
pop
jp
cltd
pop
in
pop
xchg
or
insb
bound
dec
cmp
sub
js
add
lcall
cmp
sub
push
jmp
pop
shlb
mov
pusha
je
cs
cmc
fiaddl
pop
xchg
je,pn
test
pop
or
popa
fimuls
or
jae
int3
lds
pop
test
aas
lret
faddp
psrlw
daa
push
mov
movsb
sti
mov
fcomip
subb
push
arpl
and
popl
jmp
inc
xchg
adc
push
add
in
cwtl
int
jnp
cs
or
lret
cmp
ret
or
mov
fwait
adc
jg
mov
fs
xchg
ret
dec
push
repz
jecxz
xchg
movsb
lods
idivl
adc
or
or
ljmp
xorb
adc
sub
adc
mov
call
pop
and
fsubp
stc
xchg
jle
sarl
hlt
mov
xorl
xchg
sahf
iret
fldl
mov
and
sbb
inc
lods
sub
mov
inc
mov
insb
outsb
imul
mov
movsl
mov
xchg
arpl
mov
inc
fildl
cmpsb
test
inc
aam
stos
xchg
rorb
xor
test
sbb
cmp
pop
jle
outsl
fistps
xchg
mov
outsb
mov
popa
push
lods
in
inc
ljmp
rolb
xchg
mov
sarb
movl
int3
or
int3
lcall
das
cmp
fidivs
add
clc
jne
ja
adcb
jge
fisubrs
lret
fs
sub
int
fs
in
aam
clc
xor
sbb
xchg
mov
punpckhwd
mov
mov
pop
flds
sete
das
push
or
leave
cmp
jno
movw
cld
mov
ror
sbb
push
push
xchg
popf
jbe
pop
cmpsb
mov
jno
roll
pop
into
mov
mov
cmpsb
arpl
ds
sbb
mov
sbb
test
shrb
out
setl
cmpl
lahf
sbb
adc
xor
scas
scas
pushf
xchg
aas
cli
cld
mov
inc
dec
mov
and
mov
jg
je
mov
fstpt
xchg
pop
and
scas
stc
adc
push
je
stc
jge
bnd
jns
mov
lods
mov
pop
or
inc
negl
and
xlat
sbb
pop
cmp
pop
test
inc
mov
popf
stos
mov
xor
testb
cmc
shl
jns
pop
int3
mov
ss
xchg
inc
stc
scas
add
pop
mov
popf
sub
adc
jg
xor
or
pusha
ja
adc
fstps
lret
mov
lret
andl
int3
mov
and
movsl
es
xor
mov
out
fstl
out
ss
cs
and
mov
iret
movsl
lahf
imul
out
fsts
lret
cmp
sbb
stc
mov
pop
sub
in
test
push
sub
jno
pop
xchg
outsb
iret
mov
aad
ret
mov
enter
cmp
adc
cmc
mov
leave
lock
aad
sbb
aam
add
add
pop
jl
jge
inc
adc
cli
inc
mov
adc
push
ret
jmp
pop
daa
ror
es
pop
imul
ficoms
adc
sub
inc
push
inc
adc
and
add
mov
or
pusha
mov
stos
ret
les
mov
repz
mov
movsl
movsl
decb
cmp
cmp
sbb
repnz
mov
or
and
test
inc
les
insl
ljmp
xor
push
sub
push
sub
mov
mov
mov
in
aam
ret
mov
cs
je
mov
add
lret
xor
cmpsl
and
sub
ret
fcmovb
cmp
mov
repz
push
fdivrl
adc
shll
mov
insl
jns
add
cmp
xor
mov
add
add
jo
push
movsb
fisubrs
repnz
fwait
jle
sub
ja
mov
jbe
push
jnp
leave
mov
fisubs
push
ds
addl
and
jae
pop
push
mov
pop
test
jp
les
and
mov
inc
das
sub
lahf
push
cwtl
decl
lock
in
push
aas
shl
pop
sbb
call
orl
popl
adc
mov
fwait
aaa
sbb
aaa
xchg
inc
arpl
lahf
inc
mov
pop
inc
mov
cs
bound
mov
ret
scas
add
inc
cmp
in
xchg
aas
cmp
in
mov
je
inc
rcr
jg
imul
jne
sti
mov
jns
imul
push
leave
add
outsl
xchg
xor
daa
sub
lock
or
sbbl
or
adc
mov
or
sub
pusha
mov
xchg
scas
or
data16
mov
adcl
test
fidivl
insb
lods
mov
pop
adc
add
lods
jno
adc
cmp
js
fidivrl
iret
xchg
inc
inc
lds
sub
push
xchg
dec
jno
or
inc
inc
aam
lods
mov
je
xchg
pop
pop
icebp
or
adc
mov
push
pop
clc
lahf
fcomps
dec
outsb
aas
lret
cs
repz
daa
sti
inc
mov
test
mov
adc
roll
out
call
inc
jae
mov
and
or
dec
lods
shlb
int3
cs
psllq
inc
cmc
sahf
test
cltd
cmp
frstor
sub
repz
jmp
or
push
outsb
fwait
bound
shlb
lcall
icebp
mov
push
icebp
xchg
mov
pop
mov
pop
or
and
dec
and
sbb
ljmp
mov
mov
and
mov
pop
jnp
inc
jnp
lret
les
mov
cwtl
add
add
jb
inc
cmp
scas
clc
int
hlt
mov
test
pusha
xor
cmp
jp
clc
sub
mov
rorb
dec
sar
out
in
mov
cmp
sahf
xor
dec
fmuls
bnd
mov
cmp
mov
mov
mov
jns
test
in
stos
xor
and
pop
ss
sti
mov
add
popf
ljmp
or
xchg
push
test
add
inc
and
pusha
pop
stos
sub
das
mov
adc
hlt
jl
or
and
call
imul
adc
mov
inc
fdivrl
xor
mov
fs
mov
xchg
ret
into
out
cmp
add
cld
push
jg
shlb
das
xor
xchg
enter
je
loop
add
mov
lret
dec
mov
lret
push
lret
inc
imull
sahf
mov
xchg
mov
dec
in
fcmovnu
das
outsb
xchg
int3
mov
push
inc
sbb
mov
xchg
inc
dec
call
lock
aas
xchg
push
adc
stos
pop
xchg
movsb
aas
ljmp
xchg
lret
mov
sbbl
adc
mov
scas
or
out
cmp
sti
sarb
pop
leave
xor
lods
movsb
stos
push
in
int
xor
lds
xchg
scas
out
mov
lcall
or
pop
mov
test
pusha
xchg
mov
jae
push
pop
push
mov
push
sbb
add
or
xor
push
pop
sub
shlb
gs
cmpsb
scas
lock
inc
jecxz
cmp
sbb
cmp
int
out
mov
jne
test
hlt
mov
xchg
jo
roll
lods
xchg
xor
push
lcall
lods
mov
outsb
pop
stos
das
incb
pop
psrld
sbb
rcl
xor
sub
or
mov
dec
inc
inc
cli
enter
mov
add
dec
jecxz
mov
filds
inc
je
rcr
shl
jecxz
call
add
imul
xchg
mov
and
ss
fadd
push
sbb
bound
fcmovnu
out
mov
fisttpll
aam
sbb
movsb
imul
inc
pop
sti
stc
and
pop
clc
fisubl
cmp
lea
shlb
fwait
or
jge
loope
xor
jae
and
mov
mov
add
jb
js
jb
sub
fsubrp
jae
pop
pop
cli
or
lods
xchg
xchg
xchg
daa
jb
mov
cmpsl
push
jno
cli
push
loope
repz
xchg
mov
mov
test
mov
popa
adc
jle
mov
mov
mov
or
loop
jno
or
xorl
jle
fcmovnb
jns
dec
add
int3
clc
ss
push
lcall
and
pop
loop
dec
in
pop
notb
push
bound
sbb
jmp
push
pop
pop
js
std
insl
jnp
pop
rclb
sti
push
scas
mov
mov
cld
inc
sbb
jge
mov
fwait
jo
jp
or
sete
mov
sub
daa
fstpt
hlt
int3
and
fnstenv
inc
outsb
and
mov
sbb
add
mov
cmpsb
add
lret
inc
sbb
mov
add
mov
push
and
out
popf
iret
add
cmc
add
adc
rorb
insb
mov
in
add
mov
dec
or
into
pop
es
cmc
cmpsl
rcrb
xchg
je
into
mov
lock
movsb
mov
movl
movl
and
clc
mov
xchg
fsubrl
out
lret
mov
xchg
or
fcoms
enter
adc
fadd
je
in
jno
jl
outsb
add
adc
in
add
shlb
adc
sbb
cltd
aaa
aaa
or
imul
push
add
cmpsb
adc
xchg
aad
push
jp
xchg
sbb
adc
push
pop
jo
or
sbb
dec
mov
xor
xor
sbb
mov
mov
mov
lods
arpl
rcll
or
push
lcall
enter
cs
push
ret
lea
or
aaa
mov
test
xchg
mov
bt
sahf
xlat
mov
lret
and
and
in
pop
sbb
sub
mov
inc
add
sahf
mov
jne
popa
cmpsl
jae
lods
adc
clc
out
push
sbb
mov
bound
mov
fdivrl
dec
out
dec
or
sar
mov
fsubl
push
js
mov
jno
sbb
scas
sahf
lods
ficomps
xlat
std
add
repnz
push
bnd
pop
pusha
jmp
pop
or
xchg
jne
xchg
cmp
sub
aaa
xor
dec
lahf
cmp
clc
idivb
flds
and
cmp
mov
mov
push
inc
enter
rcrb
cltd
jno
loop
fdiv
push
rcrb
mov
stc
imul
xor
fldl
aam
jp
stos
loope
int
mov
xor
push
xchg
adc
xlat
fbstp
ja
test
sub
dec
hlt
add
add
xor
fcomps
lahf
pop
outsl
push
pop
jl
fadds
sub
arpl
adc
ja
sub
pop
inc
fcmovne
imul
cmpsb
or
les
and
test
orb
push
xchg
loopne
scas
sub
shrb
jae
out
sarb
or
xchg
outsl
inc
push
lea
sub
nop
inc
sar
pop
add
or
sbb
out
aaa
lcall
mov
out
stos
out
mov
pusha
xchg
insb
repz
or
xchg
into
lods
fsub
or
jp
lcall
push
adc
stc
sub
fnsave
cmp
cmp
into
add
stos
les
push
mov
cmp
inc
in
or
pop
aaa
in
cmp
pusha
stos
ficompl
jg
mov
or
stos
mov
add
lret
cmp
fisttps
or
pop
ds
sbb
test
and
push
lock
dec
popa
orb
fidivrs
push
mov
call
enter
clc
jno
xchg
pop
mov
fisubs
xor
sti
daa
jb
dec
mov
mov
push
repz
xor
jle
stos
popf
shr
push
adc
test
cli
mov
mov
lret
fwait
andl
cli
add
mov
aaa
inc
cmp
into
cmp
mov
sti
jnp
jno
inc
sbb
or
fnstenv
mov
loop
sbb
cmp
imulb
pop
fisttpll
push
data16
inc
jno
leave
pop
out
adc
bound
xor
stos
sbb
enter
gs
jno
add
and
and
mov
popa
mov
inc
mov
fwait
dec
inc
and
in
adc
addr16
fbld
scas
pop
xchg
insl
xor
sbb
mov
loopne
cmpl
imul
sbb
in
dec
ja
fnstenv
add
cwtl
pushf
dec
push
jp
sub
mov
lds
in
inc
lahf
dec
fiaddl
dec
das
xchg
daa
xor
cltd
loope
test
jns
pop
and
jp
loope
sub
je
add
aad
int3
push
flds
sub
lcall
adc
mov
or
test
aas
dec
lahf
mov
jecxz
push
jge
add
or
ret
test
icebp
movsl
xor
cltd
xchg
sub
dec
jmp
add
dec
pop
xchg
mov
data16
mov
sbb
xor
fisttpll
xchg
inc
jle
pop
ret
xchg
pop
mov
inc
data16
or
pop
das
sub
out
xor
lods
push
mov
out
lock
mov
xlat
shll
jl
out
pop
ret
out
dec
mov
mov
stc
aaa
sub
aam
xor
mov
enter
mov
arpl
push
sbb
jle
sub
cltd
in
cmc
cmpsl
sti
cltd
pop
outsb
or
or
add
pop
mov
gs
xchg
inc
xor
jo
pop
leave
sbb
or
sbb
add
or
dec
lods
js
je
add
std
inc
loopne
sbb
test
rclb
mov
jg
outsl
push
mov
cmp
movsl
jmp
or
je
les
cs
dec
jp
inc
movsl
stc
push
add
dec
cmp
jne
dec
pop
inc
dec
out
shrb
or
inc
jns
std
sub
outsl
pop
fld
pop
or
cmp
out
psrlw
jmp
leave
xor
xor
mov
test
gs
repnz
adc
and
sbb
pop
es
test
push
cmp
lds
pop
sub
cmp
jg
rorl
out
or
add
sub
push
ja
xor
fsubrs
push
jecxz
fcompl
sahf
adc
cmp
sbb
iret
xor
popa
add
lods
dec
add
adc
cmp
xchg
jecxz
mov
and
xchg
cli
test
and
fwait
subb
cld
cmp
and
nop
mov
rclb
and
loop
mov
arpl
push
lret
je
sahf
dec
xor
pop
xchg
fwait
xchg
fistl
js
imul
js
mov
pop
lods
lret
hlt
xchg
sbb
cmp
loop
ss
xchg
xchg
icebp
es
push
pop
imul
xlat
aam
dec
lock
lret
pushf
shrb
les
dec
loopne
push
sbb
addr16
shrl
or
mov
xchg
insl
imul
dec
inc
ja
arpl
mov
add
push
mov
jo
or
pushf
or
mov
dec
pushf
mov
pop
jecxz
or
lret
ja
dec
adc
stc
pop
mov
cmp
out
mov
or
pop
fsubl
inc
pusha
les
or
or
sbb
ds
adc
xor
mov
movl
sub
call
xor
in
pop
icebp
jge
adc
shl
into
lds
jecxz
jle
jnp
outsl
hlt
outsb
insb
jae
ficomps
adc
scas
daa
and
mov
stos
lea
xchg
mov
stc
push
cmp
aas
shl
out
in
jns
jmp
loopne
call
cmp
xor
mov
jmp
sub
pop
ljmp
les
mov
push
arpl
pop
je
jo
int
xor
test
jmp
adc
sub
jb
push
in
mov
adc
mov
jp
mov
push
sbb
mov
push
jae
ja
cwtl
and
mov
mov
jno
and
mov
adc
sub
out
ja
enter
mov
pushaw
pop
lock
inc
xchg
push
pushf
push
mov
repnz
mov
ss
popf
repz
icebp
pop
sbb
and
sub
rol
mov
test
jae
push
mov
cltd
and
out
cmp
jno
sbb
adc
hlt
dec
lahf
dec
adc
in
pop
mov
mov
int3
stos
lret
push
xchg
arpl
mov
mov
dec
bound
xchg
mov
fs
sbb
xchg
cmp
push
inc
jae
fs
lcall
sub
repnz
in
out
addr16
inc
ja
mov
bound
cmp
pop
dec
xchg
inc
rorl
sti
ljmp
js
xchg
aaa
mov
inc
or
inc
movsl
push
roll
fiaddl
roll
pop
jnp
repnz
jle
in
pop
jno
fisttps
sub
xchg
mov
dec
inc
push
idivl
int3
mov
jecxz
sbb
aas
add
sbb
push
push
fisubs
pop
jle
mov
or
mov
int3
sbb
or
sub
inc
xchg
cwtl
mov
add
jp
lahf
inc
loop
mov
dec
pusha
push
clc
sti
ret
stos
mov
movsb
jle
xor
clc
bound
inc
adcl
in
fcomp
pop
fiaddl
sbb
jge
sub
and
jmp
sbb
sub
push
xchg
sub
and
cld
test
mov
push
sbb
or
stos
dec
xchg
jmp
call
loop
stos
jp
cmp
shrl
sbb
lea
jbe
mov
mov
adc
repnz
adc
jb
add
inc
daa
out
fsubrl
out
test
jp
jle
rclb
data16
or
xor
mov
cli
pop
lds
xchg
call
leave
jp
in
mov
aad
pop
iret
pop
loope
popa
fs
sub
shl
dec
out
imull
int3
mov
or
cmpsb
sahf
rolb
and
mov
add
test
pop
xor
test
cmpsl
test
adc
lds
ljmp
enter
mov
pop
aad
pop
sbb
sbb
leave
dec
in
or
adc
pop
and
iret
xchg
push
jge
hlt
movsb
mov
in
jmp
les
into
out
pop
and
out
sahf
or
jne
shrb
jp
pop
jne
or
sbb
loope
sub
loopne
xor
xchg
jae
inc
lcall
cmp
adc
jns
fimuls
dec
flds
pushf
stos
clc
adc
mov
mov
pusha
lea
test
subb
in
mov
push
test
nop
mov
jmp
dec
divl
inc
cmp
clc
popf
mov
iret
clc
adc
push
mov
lea
fadd
inc
outsl
rcrb
mov
movsl
js
sub
imul
push
inc
adc
mov
sub
popw
dec
and
scas
test
repz
and
cmpsb
cmp
adc
xor
lcall
mov
push
sbb
push
shlb
ja
dec
sub
or
jl
add
jne
testb
imul
cmp
andb
sahf
adc
lods
pop
push
sbb
movsb
ret
xlat
mov
packuswb
mov
xlat
pusha
mov
cmp
gs
stc
mov
movsb
out
mov
fldcw
mov
inc
inc
push
sub
xor
sub
ljmp
bound
int3
dec
push
mov
in
arpl
scas
sbb
stos
clc
pop
ljmp
cmpsb
mov
sti
rolb
add
dec
mov
jo
hlt
inc
scas
in
mov
leave
xor
add
stc
mov
and
jns
pop
sub
out
xchg
push
loope
pop
jbe
cmp
push
xor
cmp
imul
imul
repnz
repnz
inc
mov
into
cmp
loope
push
mov
retw
outsl
inc
xchg
fwait
inc
leave
ficoms
push
les
push
adc
cmp
cmpsl
dec
jno
push
xor
std
lret
sbb
arpl
xchg
lcall
dec
cmpsb
fisubs
mov
loopne
xor
xchg
ljmp
outsb
push
adc
out
popf
into
leave
repz
or
lret
stc
lds
adc
dec
adc
jne
xchg
push
daa
mov
push
inc
mov
dec
fisttps
and
pusha
and
sub
out
push
out
fcomps
in
push
mov
push
mov
sbb
aaa
das
cmpsb
daa
add
icebp
loop
cltd
call
mov
in
pop
and
dec
lcall
out
add
jg
inc
repnz
sbb
scas
jne
rorl
jne
lcall
ds
sbb
mov
xor
sbb
dec
jecxz
push
ljmp
outsb
push
repz
aaa
xor
xor
mov
xchg
aas
adc
test
mov
inc
jp
mov
gs
xchg
cmpsb
stos
sub
loope
jmp
std
pop
or
je
dec
fwait
push
es
filds
push
mov
aam
inc
call
inc
mov
or
icebp
mov
ficomps
dec
loopne
movsl
mov
xor
xor
frstor
shl
and
adc
pop
pop
or
daa
sbb
inc
dec
gs
inc
and
or
or
and
nop
lret
les
jnp
push
fsubrl
bndldx
lock
inc
xchg
mov
cmp
pop
test
mov
lahf
out
mov
stos
stc
imul
mov
jge
test
sub
adc
cmp
ds
inc
pusha
addr16
popf
nop
pushf
mov
dec
hlt
pop
push
and
jp,pt
inc
sbb
cmp
imul
xlat
inc
cmp
and
add
ss
mov
pop
icebp
push
pop
xor
out
jg
jmp
and
cmc
incl
bound
out
cmpsb
aaa
mov
dec
shlb
push
repnz
daa
nop
rcrl
sbb
out
out
jg
enter
in
je
push
ror
sub
add
jle
xchg
sbb
mov
std
adc
jnp
sub
sbb
rclb
jge
dec
repnz
int
or
mov
inc
divl
xor
out
jne
cli
aam
cmp
mov
adc
cmpsb
dec
data16
out
jge
ljmpw
dec
dec
imul
xchg
pushf
and
movsl
fldt
in
ret
mov
mov
in
arpl
or
push
mov
mov
jle
ficoml
sbb
scas
iret
js
jno
shlb
in
jbe
mov
pop
sar
mov
sbb
leave
mov
lods
dec
xor
fisubl
dec
pop
mov
lods
mov
cwtl
sbb
jp
mov
dec
sub
adc
push
cltd
fmuls
test
add
cmp
popa
sub
cmp
rcl
pop
fldcw
orb
sbb
ret
nop
scas
fxch
inc
cmp
fnsave
pop
lret
xor
cld
ljmp
mov
jbe
shll
sub
test
filds
cli
movsl
xchg
and
xchg
cmp
iret
call
mov
iret
dec
cmp
iret
push
or
mov
xchg
mov
iret
cmp
mov
bound
add
aas
repz
jnp
in
scas
das
mov
into
mov
dec
adc
inc
jbe
sbb
push
and
cmp
movsl
lea
or
out
jo
shlb
or
pushf
pop
mov
mov
outsl
insb
in
jge
jl
adc
repnz
or
lret
push
cmp
sub
dec
mov
ja
mov
loopne
sub
mov
lods
aas
into
adc
stos
dec
push
mov
les
mov
push
cmpsl
cmpsl
mov
push
mov
lahf
xor
test
sub
int
jecxz
pop
add
inc
push
aaa
stos
mov
pop
dec
pop
sbb
or
mov
movsb
push
mov
imul
push
fmull
mov
scas
scas
mov
aas
and
test
adc
push
push
lcall
imul
lods
inc
or
popa
adc
call
in
iret
push
fs
lds
nop
jge
sub
inc
pop
sbb
mov
dec
das
jbe
add
jge
mov
add
out
iret
xor
movsb
adc
lods
inc
jo
sti
subb
mov
dec
lahf
sbb
rcrl
outsl
cmpsb
mov
pop
sub
mov
xor
addr16
dec
cmp
ljmp
out
adc
jmp
dec
xchg
insb
and
push
pop
adc
or
push
cmp
jo
mov
mov
jo
pop
fidivl
fwait
mov
sbb
movsl
sbb
stos
icebp
jae
pusha
pop
outsl
push
cwtl
lret
mov
mov
and
pop
inc
and
inc
popa
and
sahf
fsts
inc
push
jb
sub
into
mov
fdivrl
arpl
dec
mov
sti
aaa
mov
add
test
mov
xchg
ds
nop
popa
dec
dec
mov
addr16
hlt
lcall
lfs
stos
jle
arpl
shl
inc
mov
cli
div
push
cmc
loope
jge
and
jecxz
loopne
mov
jnp
jle
outsl
bound
das
pop
stc
mov
inc
pop
pop
cwtl
movsl
cmp
lods
scas
cmp
mov
xchg
cmc
and
inc
xchg
repnz
push
mov
jnp
hlt
xor
pushf
clc
scas
js
adc
out
es
mov
loope
sub
in
push
subb
pop
mov
mov
js
or
jnp
sbb
es
jbe
pop
addr16
or
inc
mov
ret
sub
adc
fdivrs
incl
es
dec
cld
pop
adc
mov
movsl
inc
in
push
int3
xor
enter
pop
sar
mov
lret
stos
mov
dec
xchg
jbe
test
cmpsl
cmp
dec
adc
jne
cmp
fdivrl
pop
sub
clc
rcrb
daa
push
jo
scas
jle
fxch
jns
xor
jne
mov
mov
xchg
icebp
pop
or
lret
es
nop
fs
pop
push
jo
jo
adc
push
jae
inc
fwait
sub
jl
adc
dec
add
mov
subb
scas
shrl
cli
sbb
xlat
sub
sbb
movsl
push
pop
adc
jp
dec
push
mov
adc
iret
xor
call
xor
das
pushf
sub
dec
popf
inc
mov
test
insl
inc
xchg
adc
pushl
jmp
in
ds
mov
mov
jge
iret
in
mov
in
xchg
aam
push
sub
pusha
inc
mov
in
dec
outsb
push
mov
jmp
pop
jns
call
out
adc
adc
negb
xchg
repnz
mov
push
mov
lahf
into
test
push
das
les
sub
mov
and
stos
jle
jno
mov
sbb
push
add
mov
lock
lods
loope
xor
daa
test
inc
inc
adc
int3
mov
shl
lock
mov
mov
popa
sbb
insb
xor
sbb
mov
test
push
mov
add
data16
cmp
scas
int3
mov
sbb
je
push
out
pop
mov
inc
sarl
out
sbb
es
vrsqrtss
std
adc
ret
push
aad
mov
or
fnop
fcom
inc
mov
mov
scas
and
jns
gs
push
bound
xor
adc
pop
dec
out
shl
insb
mov
call
mov
add
jmp
xchg
xchg
imul
sbb
inc
leave
jle
adc
and
push
sub
mov
or
adc
aas
lahf
ja
sbb
fdivrl
lcall
or
bound
and
mov
xchg
fildl
decb
jnp
and
cltd
jmp
fimuls
sbb
sub
dec
adc
cwtl
add
ss
ret
in
pop
mov
push
mov
fiadds
rcrl
pop
jp
sbb
cltd
es
jmp
push
data16
inc
lahf
bndstx
fmuls
inc
jl
idivb
pop
mov
out
jae
jmp
dec
mov
adc
ret
scas
stos
jmp
jl
sub
stos
rol
jne
loope
mov
das
ss
orl
adc
out
sbb
dec
dec
add
inc
scas
mov
popa
ffree
jne
sbb
cmpb
enter
pop
pop
pop
fcoms
or
inc
decl
in
fidivl
mov
push
jecxz
mov
test
xchg
data16
fldl
jne
xchg
sahf
sbb
dec
xchg
mov
hlt
popa
cmp
clc
xchg
cmp
and
sub
sub
fs
push
and
and
in
lods
repz
adc
jo
sub
add
icebp
cmp
inc
or
and
xchg
or
jmp
mov
test
add
daa
cwtl
stos
jle
or
or
adc
and
inc
push
and
or
jle
pop
stc
aas
dec
or
sbb
push
icebp
and
xchg
inc
call
inc
mov
lock
mov
pop
notl
sub
shll
test
inc
jb
outsb
jns
add
les
push
test
outsl
ret
sub
adc
xchg
ret
cmp
insb
lock
dec
ret
fcoml
bound
ljmp
xor
jb
jg
and
sub
mov
jmp
cld
dec
jae
data16
stos
mov
outsb
push
out
mov
xchg
mov
ret
les
fwait
cpuid
jnp
sub
insl
out
aas
mov
addr16
cltd
add
mov
mov
push
xor
jl
lods
addb
jecxz
cmp
ficompl
in
mov
out
subb
push
cld
add
rcll
nop
inc
ja
lods
pop
inc
dec
jmp
mov
mov
dec
inc
leave
in
dec
scas
and
sub
add
shrb
ret
cmp
push
hlt
fwait
jns
xorb
outsb
jge
and
jbe
mov
test
xor
pop
and
push
sbb
test
push
mov
repnz
adc
adc
ljmp
enter
xor
pop
and
out
shrl
dec
out
push
jae
cmp
inc
insl
aaa
jo
lea
dec
cld
xlat
push
dec
je
insl
sahf
jg
cmpsl
mov
fstpl
pop
das
pusha
xlat
mov
aaa
push
imul
loope
movsl
test
and
adcl
sub
mov
xor
dec
insb
outsb
inc
movsl
jp
pusha
mov
scas
jp
fidivl
jge
mov
sbb
push
fistpll
cmp
mov
xlat
je
lahf
jle
sub
pop
sti
mov
jge
rorl
das
jg
push
or
dec
je
pop
lret
mov
je
xchg
push
push
clc
ss
jmp
pop
sahf
mov
cmpsl
outsb
mov
and
jl
xchg
mov
jl
imul
sub
sti
jl
cmp
and
stc
cmp
nop
gs
mov
in
cmp
xor
hlt
pop
test
xchg
dec
fsub
dec
fadd
pop
mov
sbb
or
mov
adc
add
jbe
mov
dec
std
movsb
inc
in
xchg
dec
or
sub
iret
xor
xchg
pop
jle
sahf
xor
jge
andl
std
xchg
jb
cli
lods
dec
mov
mov
mov
jle
add
adc
ret
cmp
js
jns
pop
sti
sbb
mov
mov
and
mov
lods
mov
int
or
add
popa
out
push
lret
fs
push
fnstenv
sti
ret
aaa
xchg
adc
subb
xchg
gs
sbb
inc
movsl
push
in
push
dec
xchg
cmc
lods
fsubs
pop
inc
adc
pop
out
mov
gs
scas
and
lods
cltd
pop
dec
xchg
fsubrl
xchg
and
or
in
adc
sar
in
addr16
jno
jecxz
xchg
mov
or
addr16
push
js
xchg
mov
lret
or
cmpsb
int3
pop
popf
fldt
xor
fidivrs
push
push
sti
cmp
cmp
cmp
jmp
ret
in
dec
xor
sbb
lret
push
aam
inc
xchg
cmp
clc
dec
cmp
inc
mov
and
fisttps
shl
cltd
aad
dec
or
sbb
lcall
xchg
mov
pop
cmp
push
fbld
push
out
das
jo
xchg
fisubrs
daa
int3
aam
pop
gs
mov
adc
icebp
jne
dec
rcl
outsb
pop
jo
aam
inc
lods
test
mov
inc
jg
and
fcmovu
std
movsb
test
mov
pop
lret
inc
mov
incb
in
push
nop
ficoml
mov
js
mov
clc
xchg
xchg
sarb
push
push
repz
sbb
aad
sbb
inc
cmp
jle
jno
lods
ret
push
mov
mov
scas
rcl
into
fcompl
loop
ror
xchg
push
sub
faddl
cltd
call
push
add
in
pop
mov
dec
cmp
jp
sbb
pop
cld
mov
xchg
shrl
mov
enter
sbb
cmp
dec
pop
push
imul
xchg
cli
pusha
adc
cmp
loopne
out
inc
or
mov
push
dec
js
arpl
mov
rolb
and
test
icebp
popa
push
push
outsl
fimuls
mov
lret
mov
pandn
xor
cmp
jnp
test
inc
inc
fisttpll
xchg
mov
inc
sub
imul
dec
and
xlat
pop
cmp
xor
xchg
lret
add
lcall
rcrb
or
mov
jg
repnz
and
adc
cmp
or
test
rep
or
or
aam
dec
cmp
cmpsl
dec
cld
pop
jnp
stos
insb
stc
and
adc
lds
sub
adc
adc
cs
in
ss
add
mov
idiv
xchg
jp
jb
jmp
pop
jb
adc
mov
push
das
cltd
cwtl
inc
push
aas
pop
pop
addr16
into
leave
into
add
or
in
adc
shll
lods
dec
mov
mov
stc
ret
ja
imul
rorb
push
cmp
inc
inc
inc
leave
popa
ss
push
movsl
ficompl
jle
les
aam
jecxz
sub
orb
sbb
push
mov
ret
xchg
insl
push
pop
inc
les
test
lea
sbb
xchg
or
inc
jmp
mov
dec
dec
lcall
jnp
andb
xor
push
pop
xor
push
pop
add
inc
and
out
push
out
pop
jp
inc
fimuls
notl
fmull
xchg
or
mov
pushf
inc
jbe
mov
out
out
add
sub
push
dec
in
test
stc
add
add
ss
aad
push
int3
mov
xchg
sbb
shrb
pop
add
sbb
adc
enter
daa
imul
dec
dec
sub
cmc
adc
mov
lock
push
fildll
pusha
add
cltd
mov
jecxz
sub
loope
jl
test
add
fsubrs
movsb
inc
jg
loope
push
xchg
lret
enter
mov
movsl
stos
mov
sahf
mov
sub
sti
out
loope
and
xor
addr16
subl
xchg
and
int3
sub
xchg
push
out
or
lahf
xchg
out
shr
xchg
inc
sbb
pop
out
ss
mov
in
jmp
xor
fs
xchg
popl
push
jnp
adc
pop
test
inc
mov
push
jge
or
pop
xchg
adc
xchg
cwtl
insl
fildl
and
ljmp
jne
fcomip
xchg
ja
shlb
dec
mov
dec
and
incl
jnp
sub
cmp
add
mov
pop
mov
or
popw
stos
pop
adc
cmp
jp
hlt
push
cmp
lret
jnp
cmp
stos
leave
adc
push
dec
jle
cmc
je
daa
xchg
push
push
mov
fwait
sub
add
xchg
add
std
sbb
stc
insl
lods
cmc
pop
dec
xor
daa
sti
out
jecxz
cld
push
out
xchg
add
mov
faddl
inc
cmp
scas
or
xchg
xor
in
leave
adc
in
pop
std
faddl
cs
in
movsb
in
faddp
in
aam
fdiv
xchg
inc
mov
mov
enter
jle
push
mov
lods
push
jnp
mov
push
xchg
xlat
cwtl
xchg
out
jle
and
cmp
inc
push
push
xor
roll
xor
adc
das
lods
test
gs
cmc
or
mov
mov
xchg
pop
xchg
sub
mov
mov
filds
sbb
jmp
inc
pop
dec
enter
pusha
ds
imul
mov
in
xchg
in
mov
xor
jge
lods
mov
add
std
fistps
mov
daa
in
jecxz
fidivrs
repnz
adcb
ds
ror
mov
and
stos
sbb
outsb
je
xchg
sbb
mov
add
lds
add
stc
dec
add
bound
test
shlb
mov
cmp
mov
inc
sub
dec
jg
shl
or
inc
popf
sbb
loope
add
adc
xor
in
mov
xchg
pop
xchg
push
pushf
rolb
jecxz
sub
adc
jns
sbbl
mov
sub
xor
incb
aam
das
push
mov
out
js
icebp
sbb
add
dec
dec
pop
sub
sbb
mov
test
je
rol
add
jns
mov
ja
and
xchg
fnstsw
cli
lea
daa
ss
xlat
mov
mov
xor
out
mov
inc
stc
pop
xor
and
neg
mov
ds
or
sti
or
fs
mov
sub
mov
mov
out
rorb
hlt
ds
pop
scas
bound
mov
insl
lret
pop
cmp
cmpsb
push
andb
xchg
add
jae
movsb
repnz
movmskps
xchg
adc
loopne
push
cmp
mov
call
out
mov
or
pop
mov
push
mov
je
dec
out
dec
aas
iret
rcrl
into
push
or
mov
pusha
adc
xor
rorl
adc
daa
lret
mov
imul
xchg
ret
mov
fidivrs
sub
or
scas
push
test
sub
hlt
or
inc
xchg
pushl
cmpsl
in
sub
and
js
sub
xchg
loopne
aas
jle
cmp
dec
pushf
test
ds
pusha
lods
inc
pop
mov
scas
add
stos
test
adc
scas
jnp
add
pushfw
rcll
sarl
xchg
or
jbe
int3
iret
cmp
mov
jo
inc
pop
imul
mov
pop
mov
dec
dec
inc
or
cli
or
lret
pop
sbb
dec
mov
push
xor
aaa
insb
mov
ljmp
mov
mov
inc
sahf
pop
cwtl
mov
fs
add
fmull
push
mov
int3
sti
dec
dec
mov
idivl
push
mov
in
cmpsl
cmp
inc
cmp
mov
jbe
push
enter
mov
cwtl
in
and
sbb
popl
jnp
sarb
lds
shrb
jne
sub
mov
mov
inc
fcoms
cs
or
rcrl
fsubl
pop
ja
add
cltd
xchg
insb
push
push
rorl
and
mov
dec
push
loop
fidivrs
jge
int3
sub
mov
fcomps
xchg
cmp
fld
loopne
stos
sbb
dec
mov
shlb
mov
gs
sub
ret
int
mov
cwtl
xchg
mov
sarb
cmp
cmp
aaa
dec
popl
and
or
loop
jo
pop
cld
jp
repnz
inc
push
mov
loopne
ja
mov
inc
mov
inc
mov
sub
mov
adc
outsb
sbb
into
sahf
jae
ljmp
int3
jmp
inc
cltd
incl
adc
stos
inc
push
loop
je
mov
push
loope
pop
pusha
pop
adc
jmp
inc
data16
lahf
lds
rcll
clc
ja
mov
adc
addr16
sub
inc
mov
inc
and
jnp
pop
dec
adc
test
pop
int
movb
push
sbb
mov
sbb
and
jo
push
out
push
or
shrl
xchg
inc
cmc
movb
mov
xchg
aas
and
rcl
adc
arpl
ja
in
fdivl
mov
mov
icebp
and
push
ficompl
sbb
or
xchg
adc
jg
xchg
jge
add
push
and
mov
test
icebp
in
dec
imul
ja
and
push
pop
mov
loop
mov
xor
jns
test
mov
shrd
jmp
jle
mov
xor
inc
out
gs
fildll
pop
leave
lods
sub
dec
sbb
adc
push
rol
sbb
scas
adc
pop
shll
add
mov
mov
stos
movsb
sbb
les
sti
sbb
jle
pop
xchg
mov
in
fmulp
adc
mov
pop
sbb
jl
lds
nop
imul
int
adc
sub
pop
ret
cmp
push
call
mov
adc
loopne
mul
bound
jnp
push
outsb
stos
cmc
pop
loope
jno
cmpsb
sub
push
adc
loopne
mov
sarb
or
test
inc
sbb
das
insb
jp
cmpsl
fstpl
xchg
push
ffreep
add
jl
ret
push
cltd
mov
test
jnp
dec
or
adc
das
push
sub
xchg
jbe
mov
pop
adc
mov
adc
and
dec
mov
xor
pop
loopne
mov
test
orl
mov
mov
pop
insl
jbe
sub
sub
mov
adc
xchg
pop
inc
push
popa
or
mov
or
fucom
cltd
cmp
cmp
mov
lods
mov
das
sbb
lock
mov
mov
fwait
imul
cmp
mov
fiaddl
lcall
test
ret
cmpsb
mov
iret
and
sarb
jnp
cwtl
sbb
sub
xchg
push
mov
push
jnp
imul
mov
mov
cmp
mov
in
cmpsb
test
mov
and
je
jb
repz
les
dec
cmp
inc
mov
frstor
fsetpm(287
dec
xor
lret
push
adc
ret
stos
sarb
sub
pop
in
pop
pusha
fnstcw
dec
mov
add
iret
popf
push
sub
iret
mov
mov
xorb
sbb
sub
or
mov
add
add
in
jo
add
repz
mov
mov
fisubrs
cs
bound
cmp
leave
and
clc
adc
testl
loope
icebp
cmpsb
nop
sub
test
push
movsl
lods
fdivs
xchg
cmp
shrb
dec
push
mov
push
loopne
bnd
xor
push
push
sbb
cmp
mov
cmp
push
repz
shll
mov
push
sbb
leave
stc
jl
pop
adc
xchg
jae
repnz
dec
fidivs
push
add
add
outsb
jmp
leave
cmc
lahf
stos
jg
push
sub
add
fcoms
push
xchg
scas
cld
clc
adc
fwait
dec
inc
jno
test
jg
jmp
mov
mov
add
shlb
push
jns
adc
add
cmpsb
cmp
lret
sub
lret
xchg
mov
fs
mov
dec
stos
shlb
push
xchg
push
mov
loop
shlb
sub
bound
out
cmp
dec
test
pop
mov
adc
pop
ret
xchg
in
nop
pop
or
xor
cmpsb
outsl
dec
or
jne
std
mov
aam
add
inc
cwtl
add
xchg
lods
sbb
and
shrl
xor
dec
aad
movsl
ret
lahf
je
sbb
jmp
rclb
leave
inc
aam
std
and
jo
in
pop
ret
mov
sbb
mov
adc
pushf
dec
fstpl
jp
je
push
dec
sub
test
out
aam
in
mov
add
xor
cmpsb
in
outsb
sub
jl
lret
std
jmp
pop
pop
mov
push
out
jp
jmp
add
and
pop
shrb
popa
std
xor
cld
arpl
fmull
enter
pop
fsincos
xchg
aad
pop
lret
xchg
xchg
outsb
lret
pop
fidivrl
mov
jbe
or
fidivrl
inc
adc
stos
dec
scas
ss
adc
inc
xchg
test
mov
push
mov
mov
cmp
roll
ret
sub
adc
mov
jb
or
fucom
xchg
cmp
dec
out
xchg
nop
push
push
in
sub
jnp
xchg
movsl
scas
lea
leave
pop
inc
sti
cmpsb
lahf
in
dec
loop
es
add
testl
lcall
fildl
push
icebp
jns
xchg
xor
cmc
jecxz
jne
cmp
xchg
mov
pop
test
mov
cmp
fidivrs
mov
insl
cmp
xor
dec
stos
add
push
adc
scas
das
les
and
aam
shr
lods
inc
stos
or
jnp
or
xchg
insl
adc
mov
xchg
fstps
movsl
pop
incb
insl
mov
test
push
loop
mov
hlt
ss
shll
les
imul
sub
aad
pop
fwait
mov
fcompl
dec
xchg
xchg
fstp
out
loopne
lcallw
push
lock
pop
stc
test
int
insl
vpsubq
sti
sub
aaa
pop
lret
pop
addr16
jp
sub
inc
sub
jne
test
pop
and
lret
push
insb
mov
bound
jno
sub
or
out
pop
xchg
or
int3
mov
sub
in
xor
sbb
lcall
scas
xor
sbb
add
jb
xchg
mov
xor
das
mov
fistl
mov
arpl
gs
inc
xlat
fstps
mov
enter
mov
pop
cwtl
sbb
xor
and
jb
sti
mov
lods
in
jl
mov
and
into
xchg
xchg
popa
jne
add
pop
lods
popa
lret
call
mov
bound
dec
into
arpl
pop
mov
mov
stc
subl
mov
je
lcall
test
dec
jns
lcall
and
push
js
std
xchg
lds
fstpt
stos
mov
mov
insl
adc
xchg
inc
arpl
xor
in
ja
test
aas
pop
xor
add
xchg
push
cmp
sub
std
iret
jno
jnp
jecxz
test
cmpsl
push
sahf
cmpsb
push
xor
xor
xchg
iret
lods
repnz
fwait
es
push
scas
dec
loopne
and
mov
mov
mov
std
dec
xchg
sbbl
repz
push
or
leave
xlat
fwait
movsl
jb
lcall
mov
imul
bound
and
das
pop
add
mov
xor
mov
je
dec
negb
add
lods
jbe
xchg
addl
inc
nop
shlb
jbe
inc
push
mov
xchg
stos
push
sub
dec
ret
xchg
mov
ror
push
into
jecxz
lods
jne
mov
pop
addb
ds
sarl
xchg
cltd
dec
clc
adc
ret
fisubrs
iret
push
dec
and
jo
test
cmc
mov
xor
dec
popa
test
insb
lahf
cmp
mov
xor
cmp
cmp
push
jg
inc
movsl
cmp
cmp
cmp
xchg
aaa
imul
xlat
xchg
pusha
jmp
cltd
clc
mov
repnz
add
mov
jns
inc
dec
popl
dec
iret
cmp
mov
incl
cli
mov
pop
xor
icebp
sub
jmp
mov
test
inc
cmp
lcall
shlb
push
imul
inc
mov
movsb
inc
push
outsl
inc
lods
dec
jne
leave
xor
popa
and
gs
xor
sub
inc
jo
xlat
pop
call
pop
ffreep
jne
insb
stos
imul
clc
test
sub
jns
jp
je
inc
fisttpl
data16
hlt
lret
mov
scas
jmp
push
out
sbb
jo
dec
inc
jne
jae
cmpsl
cwtl
jecxz
mov
loope
out
sbb
jmp
sahf
fadd
aad
sub
rolb
jnp
xchg
sbb
xor
adc
ficoms
push
add
cwtl
test
mov
fwait
in
add
jl
mov
and
inc
and
mov
pop
sbb
cmp
sahf
gs
clc
clc
jecxz
push
and
ret
cwtl
test
pop
movsb
mov
in
sbb
lret
call
dec
pop
shlb
add
repnz
cmp
loopne,pn
push
sarl
mov
xchg
call
int
xor
call
mov
ret
inc
cmp
jmp
repz
cwtl
popa
jnp
xor
mov
insl
pop
enter
xor
shrb
insw
and
mov
mov
xor
mov
call
mov
xor
and
xchg
sub
xor
xor
push
mov
inc
jae
cmp
insb
das
xor
fnstsw
scas
imul
jl
js
or
jl
in
pop
dec
push
cli
arpl
or
mov
lahf
mov
lcall
or
fwait
mov
push
loop
stos
or
xchg
push
hlt
push
mov
call
xor
cmp
aad
or
pop
clc
shlb
cmc
lods
mov
dec
push
scas
add
or
pop
sbb
jecxz
and
sbb
negb
fcmovnu
hlt
mov
jl
lds
push
cmpsl
inc
and
cmp
gs
repnz
out
aas
cltd
push
cmp
xorl
cmpsb
mov
and
lea
lret
xchg
test
cld
sub
imul
sub
out
jns
mov
loop
mov
stc
pop
mov
add
lret
mov
insb
sbb
xchg
xchg
xor
adc
ficomps
inc
sub
fisttpl
cmp
out
test
push
jnp
dec
sub
pop
xchg
xchg
sahf
ss
push
and
push
sahf
mov
les
add
cs
mov
cltd
addr16
out
jb
pop
mov
mov
xchg
xor
sbb
xchg
es
das
dec
mov
call
adc
pop
stos
movsl
add
mov
jb
out
fisttps
popa
sub
cmp
jecxz
dec
inc
inc
sarl
lods
cld
pusha
scas
in
pop
ret
ja
les
dec
lds
mov
and
clc
or
jecxz
or
lret
fldenv
mov
js
arpl
inc
cmpsl
dec
les
cmpsb
push
pop
xor
dec
mov
iret
test
xor
or
daa
mov
xor
test
mov
test
xchg
sbb
jb
sbb
insb
fcoms
into
jbe
bound
push
stc
clc
jge
mov
cli
cmpsb
inc
lret
fdivrl
fsub
mov
dec
adc
inc
and
sbb
mov
addr16
sbb
popf
out
push
pop
repz
jle
pop
ret
testb
fdivs
mov
lcall
jae
addb
sbb
js
bound
mov
ds
aad
push
jns
mov
push
test
int
jns
jnp
loop
xchg
repz
roll
inc
sbb
push
and
jl
into
shlb
aas
iret
cmpsb
xor
divl
add
xor
lods
out
pusha
cmp
inc
outsb
leave
fstpt
iret
aaa
ljmp
das
pop
roll
add
push
sbb
dec
inc
movsl
pop
inc
sub
out
cld
mov
push
cmp
adc
fistpl
das
mov
pop
es
movsl
xor
rolb
outsl
and
sbb
rcl
add
sahf
aas
popa
rcrl
cs
in
push
push
inc
pop
mov
rorb
movsl
ds
hlt
lcall
inc
rorl
adc
out
lock
out
scas
enter
fstl
add
cld
aas
pusha
sahf
or
imul
cmp
mov
push
push
adc
into
adc
add
aam
test
lret
in
jne
test
imul
and
icebp
int3
mov
mov
ficomps
daa
nop
sub
cmp
loop
stos
push
adcl
call
pop
subl
lea
cmpsl
lahf
std
jmp
in
push
mov
push
negb
je
add
dec
mov
adc
test
aad
call
cmpsb
mov
jge
mov
push
pop
jnp
into
mov
mov
cmp
js
addr16
out
daa
cmpsb
divl
shrb
add
sbb
xor
dec
das
addr16
mov
loop
cmc
dec
js
mov
cli
cmpsb
inc
aad
rcl
jg
pop
and
scas
sub
xchg
push
or
push
out
scas
insb
lock
int
or
sub
adcl
sbb
mov
iret
xor
push
xor
outsl
adc
mov
cmp
pop
loope
dec
and
or
add
xlat
jns
or
imul
in
ds
xchg
dec
or
sub
cvtps2pi
testb
dec
jb
cltd
stc
cmc
stos
mov
test
adc
shlb
cmp
cmp
lds
outsl
and
xchg
adc
push
js
xchg
mov
cmp
sbb
jb
in
dec
outsb
cmp
or
hlt
stc
pushf
rcrl
cvtps2pi
sbb
and
xchg
fisubs
clc
js
call
mov
ret
adc
xchg
cld
inc
sbb
inc
dec
pushf
mov
pop
push
insl
cmp
pop
dec
inc
fcomp
js
add
dec
fmul
mov
outsl
int3
out
sbb
sti
lods
xor
fidivrs
push
addb
or
adc
arpl
jge
cmc
ret
cld
mov
pop
xlat
rclb
lods
rcrb
adc
jmp
mov
test
push
mov
push
xor
ss
mov
or
xchg
mov
cmpsb
cwtl
inc
jp
faddp
mov
push
adc
rolb
jno
xchg
push
xchg
shll
push
jg
mov
jmp
addr16
fcmovnu
shlb
xor
inc
andb
iret
lds
dec
mov
pop
call
je
aam
push
mov
cli
adc
and
mov
int3
in
int
and
rolb
sbb
mov
jo
repnz
adc
push
inc
in
inc
cli
jle
mov
fcomps
pusha
mov
sbb
xchg
data16
lock
mov
dec
mov
dec
push
adc
cmp
mov
jne
adc
pop
test
push
test
jne
mov
repnz
xchg
push
cmp
mov
rolb
push
xchg
imul
dec
out
int3
daa
mov
mov
imul
mov
jp
inc
or
and
and
sub
xchg
mov
cmp
jbe
movd
jg
sahf
xor
jmp
out
lahf
mov
fyl2xp1
xchg
cmp
mov
outsl
sub
out
fisubrs
movsl
mov
leave
sub
cmp
push
pop
popf
pop
insb
sbb
ljmp
fwait
sarl
adc
lret
mov
stc
sub
mov
iret
pop
repz
sbb
stos
push
mov
pop
sub
push
lret
prefetchnta
jo
xor
es
adc
shr
adc
cmpsl
xchg
mov
clc
ss
xchg
ret
cmpl
fstp
mov
sti
lock
lea
jb
ficomps
dec
jg
xchg
out
mov
cli
test
pop
sub
repnz
ljmp
out
push
testl
inc
mov
divb
les
inc
sub
mov
lds
sub
aad
sbb
daa
mov
cli
jle
or
pop
out
cwtl
les
pop
stos
cmp
test
or
mov
jmp
mov
out
fwait
push
lcall
je
mov
adc
cmp
mov
cmp
xchg
insl
add
mov
mov
dec
mov
pop
rolb
xor
add
mov
dec
inc
push
push
pop
xor
je
mov
mov
dec
loopne
mov
xchg
subb
mov
adc
pop
mov
cmpsb
int
pop
inc
lea
in
xlat
cli
jb
jmp
clc
test
mov
ret
sbb
out
or
out
pop
add
adc
dec
jb
xchg
popa
test
xor
out
loopne
test
jmp
idivl
jmp
or
dec
and
cwtl
lret
imul
fnsave
cwtl
xchg
xchg
add
int3
push
and
addr16
xor
movsl
jmp
insl
hlt
imul
xchg
cmp
pop
insb
iret
or
nop
mov
lock
test
or
sbb
in
xchg
pop
jb
inc
inc
ret
jecxz
popa
orb
mov
mov
int
fsts
xor
and
repz
mov
adc
pop
orl
cld
push
or
pusha
shl
and
dec
mov
call
inc
rcrb
mov
and
mov
test
pop
add
movl
sbb
cmpsl
fsubs
lock
fisttpll
sbb
data16
cmp
aad
jmp
movsb
xchg
aam
add
rcll
mov
outsb
adc
sbb
lods
lcall
pop
sbb
jbe
push
jbe
dec
filds
inc
sub
push
push
scas
sbb
daa
negl
fwait
xchg
fstl
xor
adcl
cs
xchg
outsb
mov
ljmp
jecxz
mov
mov
push
outsl
ret
dec
or
out
push
call
nop
sahf
push
xchg
mov
int3
or
rol
in
cwtl
cmp
push
fstps
jno
adc
or
outsb
xor
cmp
int3
dec
shlb
arpl
aad
add
add
push
sbbb
inc
push
and
fidivrs
adc
xchg
inc
mov
push
cwtl
in
fwait
dec
into
cltd
pop
xchg
inc
jnp
or
inc
ss
outsb
out
adc
test
inc
sub
xchg
inc
pop
les
push
xor
lods
les
mov
pop
or
sub
or
xchg
jb
or
fs
lcall
out
mov
shl
in
push
loop
cmp
jbe
int3
or
andb
pop
and
cmovg
int
push
mov
pshufw
sub
pop
lods
pop
in
xlat
shrb
test
rcrl
in
outsl
cltd
jns
lds
mov
or
dec
jecxz
push
mov
idivb
inc
gs
in
mov
jmp
jns
jl
xor
scas
rcrl
je
inc
cli
jae
jmp
in
je
jnp
sbbl
sbb
push
mov
mov
es
das
in
adc
nop
xor
inc
xchg
xor
jecxz
int3
mov
in
adc
test
pop
mov
fsubl
or
lock
repz
xchg
dec
ljmp
and
out
sti
mov
outsl
loop
test
jno
sbb
inc
push
xchg
out
cmc
lds
loope
jl
insl
or
mov
or
inc
push
movsb
jg
cmp
fists
aam
adc
in
add
aad
inc
push
xchg
js
iret
fsubl
imul
pop
movsl
lods
xchg
xchg
xor
fimuls
xor
mov
out
sub
in
dec
cmp
roll
or
push
xor
push
cmpb
mov
xor
pop
or
aad
pop
mov
daa
and
mov
add
das
inc
sti
adc
inc
dec
push
xlat
push
lcall
add
cli
xchg
and
sahf
mov
sbb
xor
sub
push
jo
mov
ljmp
cli
jno
add
and
ret
call
sbb
stos
scas
insb
pop
inc
xlat
dec
adc
push
pop
stc
add
and
stos
push
in
sahf
cmp
sbbl
lods
dec
sub
outsb
in
sti
and
aad
push
stos
cmp
and
push
and
sbb
cwtl
hlt
lock
mov
stc
rorl
ret
addr16
aaa
iret
aas
pusha
mov
jmp
mov
adc
mov
shrl
xor
shr
arpl
mov
int
push
dec
mov
leave
ret
shlb
aam
idiv
js
add
sti
xor
mov
mov
cltd
lods
sti
and
cmpsb
loopne
pop
ja
fs
dec
inc
ljmp
push
shll
add
aaa
cmp
scas
jo
xchg
arpl
ss
movsl
std
jo
sahf
pop
sub
dec
xor
push
dec
xchg
mov
lcall
jl
sub
test
lods
or
adcl
in
cltd
push
es
bound
cmp
rcrl
stos
push
daa
cld
inc
test
cmp
dec
xchg
xorb
sub
and
dec
jmp
or
arpl
jae
jmp
mov
jno
mov
jl
shll
insb
aaa
pop
lahf
sub
test
call
imul
outsl
mov
push
popa
cmc
push
mov
ljmp
in
xchg
pop
pushf
adcb
or
movsl
xchg
ljmp
jmp
mov
ja
dec
andl
lock
adc
divb
push
int3
cmpsb
loopne
mov
mov
sbb
push
xchg
push
sbb
pushf
fs
mov
dec
pop
out
js
and
stc
cmp
sar
fwait
ja
jnp
das
jns
dec
int
in
into
ljmp
shll
lcall
daa
cli
scas
push
adc
jns
adc
cs
pushf
jmp
xchg
mov
and
cmp
aam
inc
sbb
sti
cmp
aad
sub
stos
add
fs
mov
addb
dec
inc
pusha
lods
inc
test
cmp
gs
dec
enter
add
sti
test
mov
xor
fimull
std
adc
aad
in
jne
and
addr16
mov
cmp
out
pop
cmpsl
scas
jl
test
sub
add
cwtl
jo
fldcw
or
addr16
pop
sbb
sub
pop
mov
jl
inc
inc
ret
fsts
mov
bound
mov
subb
xchg
xor
adc
arpl
ja
test
mov
addr16
loope
xchg
in
and
cmp
xor
test
mov
iret
arpl
and
xchg
test
mov
call
stos
xchg
cmpsl
test
mov
cmp
mull
and
pop
cmp
adc
inc
xchg
stc
xlat
loope
sbb
mov
sti
sub
mov
ljmp
sbb
sub
push
outsl
mov
cmp
mov
insb
sbb
adc
push
inc
leave
jmp
pop
sbb
dec
xchg
sahf
mov
xor
stos
jne
cltd
mov
cmp
outsl
cmp
nop
clc
jbe
nop
cmp
adc
fucomi
fxch
mov
flds
outsl
test
lods
movsb
push
and
push
dec
fistps
push
push
loopne
and
lret
and
fsts
mov
mov
rcll
aam
mov
shrb
in
xchg
xor
adc
add
push
mov
xorb
imul
test
leave
stc
xchg
dec
mov
push
sbb
mov
jecxz
jle
sub
mov
int3
arpl
adc
inc
xchg
mov
mov
xchg
xchg
mov
std
add
inc
loopne
loopne
in
out
or
lret
inc
xchg
idivl
jo
jno
mov
xchg
insl
sub
aas
pop
mov
and
inc
mov
jno
dec
inc
into
adc
popf
or
js,pn
stos
jge
jno
stc
push
daa
in
cld
xor
fs
sub
call
add
jbe
lret
popf
mov
je
push
repnz
rep
push
mov
add
out
iret
mov
insl
rorb
es
xor
data16
dec
and
xchg
das
dec
lret
jl
lock
xor
and
lret
add
test
adc
aam
int
call
mov
add
or
fists
in
push
lahf
into
pop
call
jnp
lcall
cmc
sub
xor
cmp
adc
rcr
or
mov
sub
pop
sti
mov
arpl
insl
push
sub
mov
loope
cmp
ds
adc
out
vmovaps
rcll
scas
cmpl
in
mov
sub
aas
jg
xchg
inc
outsb
aas
xchg
sub
add
cmp
stos
add
lock
xor
loope
cs
adc
dec
out
and
out
cmc
jae
incb
andl
pop
lret
dec
adc
or
jle
stos
mov
fwait
sub
mov
shrl
cmc
daa
pop
mov
div
sbb
or
pop
popa
fwait
xor
xchg
das
add
fsubp
adc
jno
jo
dec
pop
mov
sub
or
xchg
shr
cmp
inc
imul
test
push
or
jno
sub
cli
push
mov
insb
adc
or
test
mov
fsubl
xor
push
mov
push
pusha
cmp
sub
jo
insl
add
movsl
or
test
pop
in
decb
test
or
fidivrl
cmp
stos
sub
popf
add
inc
or
xor
imul
mov
aam
inc
imul
cmpsb
adc
hlt
shl
popa
stos
jae
aas
xor
loopne
jo
jne
jmp
sub
mov
in
adc
push
dec
iret
out
pop
dec
sub
adc
fwait
push
jnp
loop
enter
js
jne
sub
lcall
mov
adc
sub
xor
mov
in
mov
test
popw
adc
imul
testl
stos
sub
cmpb
push
mov
rcrl
icebp
repnz
bound
and
pop
sub
dec
or
mov
and
xlat
sub
and
xchg
push
rcrl
jo
mov
dec
pop
adc
lret
ret
xchg
in
cmp
dec
cmp
out
inc
lods
fucomip
in
jns
lods
pusha
adc
jecxz
js
imul
addl
cld
in
sub
adc
pop
push
push
insl
pushf
push
fwait
das
dec
and
dec
lods
xchg
cmp
hlt
leave
xchg
scas
mov
sub
sbb
test
cs
push
mov
dec
call
dec
and
cltd
sbb
lret
imul
pop
ficomps
sbb
mov
repz
jg
push
sbb
stos
mov
mov
pop
pop
not
push
jae
cmp
pop
popf
xor
or
int3
shll
mov
fwait
sub
out
mov
mov
ja
dec
dec
cmpsb
insl
sub
mov
lahf
clc
xor
mul
cmp
hlt
sub
lods
int
ljmp
sbb
dec
aas
add
mov
dec
pop
frstor
jno
pop
int
sbb
out
xor
sbb
std
mov
lea
jnp
icebp
mov
jnp
xor
insl
jecxz
mov
adc
jne
aam
and
or
fwait
and
push
lods
loopne
sahf
ret
xor
cld
adc
cmp
sub
pop
or
aas
cmc
push
outsb
and
adc
int3
sarl
repz
idivl
add
pop
cli
cmp
and
in
repnz
mov
in
out
mov
inc
cmp
fwait
push
or
lods
or
fisubl
ljmp
bound
xlat
sar
inc
repnz
fwait
das
xchg
lret
call
lds
imulb
ret
ret
outsl
dec
xchg
imul
lcall
dec
push
cltd
int
shrl
test
in
or
fwait
push
or
dec
dec
adc
lret
lcall
dec
push
xor
fstpt
out
or
xor
mov
mov
insl
scas
inc
sti
lahf
mov
lcall
push
adc
xchg
cltd
dec
push
pop
out
lcall
cmp
jbe
pop
lock
movsb
lds
icebp
push
xchg
inc
xorl
loope
enter
inc
rcl
adc
and
cmp
push
pop
mov
push
lods
inc
mov
xchg
mov
mov
inc
aaa
push
iret
add
test
pop
xchg
jl
insb
nop
adc
mov
in
fildll
sub
jae
mov
inc
shr
push
push
jnp
je
cmc
pop
rorb
test
pop
popf
mov
jo
mov
lods
sbb
jecxz
rorl
inc
pop
pop
xor
cmp
aam
cmp
push
cwtl
jns
or
jbe
mov
fucomip
divl
mov
dec
out
data16
ja
dec
scas
xchg
shll
jge
cmp
mov
sub
or
into
xor
in
push
jns
fisubrl
adc
fildl
or
pop
inc
xchg
mov
xor
call
movsb
jb
jns
jl
cmp
add
xchg
add
jae
lahf
sub
push
mov
sti
sub
into
outsl
sub
aam
icebp
fcomps
int
out
popf
in
xor
lods
push
push
decb
dec
pop
les
cwtl
mov
cmp
fs
push
dec
jo
pop
mov
cltd
pop
add
xchg
out
xlat
dec
sti
mov
xchg
andb
xchg
movsb
or
pushf
cs
aaa
mov
and
das
mov
dec
repz
iret
ret
cmp
scas
js
adc
test
jmp
movsb
xchg
loope
incb
jecxz
es
inc
into
dec
cmp
and
out
xor
pop
add
mov
and
clc
std
adc
sub
xlat
nop
dec
sbb
and
adc
mov
lahf
pop
scas
fadd
dec
sarb
fistpll
and
cmc
sbbl
fisubs
fucomp
inc
cmpxchg
scas
and
out
pop
jg
add
fidivrs
movsb
pop
pop
mov
inc
test
ret
dec
push
mov
mov
pop
into
adc
addr16
fs
les
dec
mov
ljmp
mov
push
mov
add
jmp
rorl
sbb
call
cmp
mov
mov
stc
dec
jle
mov
inc
inc
loop
cli
shr
ds
clc
and
out
sbb
push
and
xchg
jae
mov
push
push
xor
cmc
adc
and
jns
lods
xchg
mov
mov
or
sbb
lods
mov
mov
stos
xchg
and
outsb
ficoms
pop
mov
int3
inc
inc
int3
repnz
xor
adc
rol
mov
ret
cmpb
xor
jo
call
data16
inc
lods
sub
hlt
daa
or
test
stos
pop
arpl
adc
add
sbb
lock
lret
pusha
jno
or
int
push
mov
xchg
xor
jbe
add
jle
adc
cs
jbe
push
addr16
jnp
pusha
cmp
push
adc
inc
cwtl
add
xor
add
sbb
stos
sbb
xchg
xchg
xchg
sbb
adc
mov
mov
mov
cmpl
mov
cmp
fs
or
or
rol
out
lds
divl
aam
aas
iret
adc
fimuls
pop
ret
jecxz
ljmp
jmp
xchg
mov
inc
xor
xor
test
jae
mov
call
and
jle
pushf
mov
mov
nop
inc
pop
ss
dec
cmp
ss
aam
sub
mulb
jp
pushf
inc
stc
lret
and
adc
mov
daa
rclb
mov
jp
cld
pop
and
dec
cmp
mov
xchg
mov
mov
dec
and
inc
jo
inc
and
ja
lods
push
test
fstps
and
sbb
sub
sbb
fimull
add
movb
jbe
xchg
icebp
mov
sub
jne
daa
test
jp
leave
cmc
inc
and
jne
push
inc
rorb
leave
and
mov
movl
movsl
mov
add
mov
mov
int
sub
scas
sub
movsl
inc
std
lods
or
pusha
fidivrl
cmp
lret
add
xor
ja
neg
outsl
outsl
mov
das
fildll
mov
pop
lcall
loop
ja
mov
sub
xor
call
loop
into
sbb
int3
cwtl
fldenv
or
add
xorl
mov
shlb
jge
sbb
xor
jle
pop
lret
jo
fdiv
out
repnz
add
ljmp
and
xor
sarb
sbb
shll
adcl
jmp
mov
lahf
dec
orb
mov
sub
dec
adc
lock
or
test
jbe
cmp
xchg
sbb
xchg
add
mov
movsl
jmp
sbb
test
mov
push
adc
or
add
test
push
mov
pop
or
sub
and
push
inc
cmpsl
div
mov
mov
mov
pop
lretw
cli
in
push
fisubl
jp
mov
mov
xchg
scas
sub
mov
test
sahf
call
adcb
jmp
cwtl
aad
int
dec
pop
outsl
scas
movsl
aaa
ret
xor
mov
pop
int3
add
rclb
ljmp
andb
cmp
cmp
out
push
cwtl
shll
mov
push
jmp
mov
add
addr16
pop
pushf
push
inc
or
in
scas
push
sub
loope
stos
mov
push
les
xor
mov
inc
cmp
sbb
fstps
adc
inc
pop
aaa
mov
popf
adc
jmp
cmc
inc
add
xor
cmp
push
cmc
fnstsw
pushf
add
loope
push
sub
in
call
cmp
shrb
cld
and
inc
pushf
mov
jg
cld
leave
xchg
inc
inc
aad
adc
test
ret
aad
inc
out
addr16
xchg
fimuls
push
cltd
gs
adc
clc
lods
adc
jnp
ror
xchg
fcomps
pop
pop
movsb
loope
out
pop
inc
je
xlat
pop
mov
sbb
xchg
outsl
fists
sbb
das
test
push
push
je
mov
dec
mov
fcompl
mov
push
repz
data16
jo
jg
ret
lret
and
or
in
cmp
jg
sub
insb
scas
sti
mov
pop
xor
push
push
fisttpll
xchg
mov
and
push
pop
fs
into
daa
adc
adc
adc
sbb
xchg
mov
add
loope
das
outsl
in
and
xchg
pop
push
movsl
cmp
inc
xor
addr16
push
xor
lea
fsubl
inc
sub
jo
cmp
into
call
dec
jge
mov
cwtl
xor
stos
mov
mov
lcall
loope,pt
lds
push
xchg
jbe
lea
inc
ss
insb
notb
sub
pop
std
lret
arpl
and
sbb
jno
out
fisubrs
loopne
cmp
mov
mov
into
rol
cwtl
imul
and
daa
add
mov
fdivs
lods
push
int3
sahf
xchg
shll
mov
xchg
ret
sbb
imul
lods
and
sbb
inc
int
cmpl
lret
imul
sarb
dec
daa
add
ss
xchg
dec
mov
clc
lret
sbb
mov
xchg
loope
mul
mov
or
inc
sub
mov
mov
outsb
cmp
je
movsb
jae,pn
sub
std
ret
inc
pop
xchg
and
int
jne
hlt
dec
mov
push
jne
push
xchg
cmc
and
lods
sarl
jno
cmc
or
jecxz
insl
dec
je
or
add
aas
adc
int3
jp
xchg
ficomps
push
scas
mov
popa
cmp
cmpsl
mov
mov
push
push
push
in
xchg
roll
and
dec
cmp
push
fstpt
push
sbb
xor
das
stc
adc
dec
push
jne
mov
mov
and
and
mov
repz
and
xor
inc
adc
fs
inc
idivl
into
mov
aas
cmc
fs
mul
push
je
ljmp
sub
xchg
sti
mov
inc
adc
and
cli
outsb
push
dec
lcall
sbb
or
mov
mov
xchg
scas
add
jno
jmp
lret
into
sbb
lea
bound
cs
das
out
push
xchg
pushf
icebp
inc
jbe
cmp
scas
fcom
mov
das
mov
sarl
rorb
cmc
pusha
push
fbld
xacquire
out
adc
mov
mov
mov
and
pop
cmp
jno
pop
test
pusha
inc
movsl
push
dec
mov
pusha
sub
mov
push
ficoms
call
xor
das
mov
pop
pop
mov
push
cmp
cmp
subb
jg
cli
shlb
adc
xchg
jle
adc
xorl
repnz
dec
pop
lcall
sbb
mov
dec
ds
lcall
negb
inc
cli
ret
dec
jne
push
mov
outsb
sbb
inc
jb
mov
xchg
aas
cmpsl
mov
daa
leave
sbb
and
movsl
movsl
inc
mov
call
inc
push
aam
lds
into
adc
cli
adc
mov
incl
pop
jg
or
test
or
repz
ds
or
and
stos
stc
in
movsb
mov
imul
data16
das
in
loope
sbb
mov
mov
or
push
and
lds
dec
cltd
sahf
mov
nop
sub
inc
jl
jns
or
lds
enter
insb
mov
jg
xchg
movsb
cmp
out
loope
adc
push
scas
adc
cmc
stc
jl
xchg
fcompl
cs
movsl
xor
call
aad
ds
add
not
rcrb
imull
sub
mov
xorl
aas
or
movsb
mov
mov
movl
cli
ds
lods
int
fnsave
and
mov
mov
ret
ja
repz
stos
cld
fucom
lods
test
pop
xchg
divb
fwait
shrb
call
jbe
pop
in
add
mov
loop
pushf
into
gs
repnz
jne
add
sub
adc
ds
sbb
sbb
insl
lock
sub
add
test
pop
mov
aad
mov
int
push
or
mov
lock
xchg
int3
fisttps
push
call
push
lods
repnz
test
cwtl
dec
adc
or
fadds
sub
jns
dec
rolb
ret
mov
push
jp
in
jl
notl
repz
sub
mov
push
das
clc
shlb
dec
jb
clc
shlb
inc
rorl
pushf
shrb
imul
sti
movb
out
popa
pop
in
xlat
mov
push
xchg
sbb
out
push
les
sub
and
push
sub
xchg
mov
pop
mov
push
sub
icebp
icebp
loop
add
or
jb
test
fidivrs
in
jo
test
rol
test
push
aam
inc
ret
jae
add
dec
inc
in
ret
xchg
fdivl
jge
dec
inc
dec
dec
jb
pop
xlat
and
lods
test
push
shlb
sub
fcoml
rcrb
pop
xchg
xor
mov
repnz
imul
orb
pop
pop
pop
and
icebp
or
ss
mov
dec
das
fdivr
and
pop
and
xchg
arpl
iret
sbb
xchg
stos
push
insl
push
pop
add
or
xchg
fstpl
cmp
mov
xor
std
pop
jp
xchg
stc
mov
pop
adc
lret
ret
sub
push
mov
in
call
and
cmp
fxch
into
mov
jge
lds
jo
xor
sqrtps
mov
inc
sbbb
leave
pop
or
mov
mov
push
bound
lahf
stos
dec
jnp
je
mov
int
inc
jle
addb
xchg
into
inc
mov
insl
movsb
and
test
jp
lret
push
shlb
mov
stc
cmp
and
mov
sub
add
pop
roll
adc
jle
shll
lock
sbb
cmp
xor
iret
ret
mov
movsb
sti
mov
es
arpl
imul
js
xchg
push
jns
fwait
push
or
jle
mov
cmp
push
stos
aaa
iret
inc
inc
xchg
mov
std
jnp
pop
or
cmpsb
scas
adc
push
pop
jmp
movsb
addl
push
into
mov
ss
dec
lahf
push
xor
arpl
js
jl
xchg
pop
mov
arpl
sbb
mov
and
aaa
in
push
mov
enter
xchg
mov
sbb
sti
add
loop
popa
push
dec
cmc
ret
cmpsb
and
subl
dec
push
add
sub
dec
inc
mov
bound
and
push
mov
mov
dec
jle
mov
xchg
icebp
sbb
xchg
lcall
adc
dec
jne
jge
cmp
sub
int3
jns
pop
rcrb
shlb
adc
jmp
add
sbb
nop
decl
or
icebp
push
hlt
cmp
inc
dec
cmp
lods
lea
lock
pushf
dec
mov
lahf
inc
in
mov
pop
imul
fmull
or
lret
pop
push
cwtl
test
pusha
bound
sub
sti
js
add
lock
rcr
repz
xchg
loopne
add
mov
aaa
addb
cmp
frstor
adc
mov
aas
in
into
fbstp
mov
dec
dec
sub
fcmovnbe
mov
sub
ficompl
aam
cmp
pop
sti
idivl
stos
sbb
shrb
sbb
fdivr
jge
sti
add
dec
pop
xchg
pop
xchg
or
jp
cmp
shrb
inc
enter
and
cmpsb
cmpb
movlps
mov
outsb
nop
popa
lock
dec
cltd
gs
xchg
mov
adc
fwait
sbb
sub
pop
sbb
push
lock
into
or
insb
jl
lods
dec
pop
adc
fadds
aaa
dec
sti
mov
mov
xor
fwait
jp
jne
mull
push
gs
dec
hlt
push
in
outsl
insl
lods
sbb
outsb
lcall
inc
adc
inc
outsl
dec
in
pop
insb
jle
inc
int3
add
movsb
mov
inc
std
jo
sub
xor
sub
or
hlt
shlb
mov
outsb
jle
jp
test
cmp
lret
cmp
test
out
addr16
sti
add
xorb
jge
mov
xchg
test
mov
add
pushf
test
popa
and
adc
aam
push
jecxz
and
stc
sti
call
shll
add
jl
pop
fisttpl
les
adc
sbb
repnz
je
cs
addl
or
aad
sbb
or
js
sub
jno
and
stos
mov
push
ss
or
adc
fldl
in
pushf
pop
mov
cmp
mov
push
push
or
cmovg
mov
push
xchg
pop
pop
adc
mov
aam
stos
mov
pop
cmp
pop
mov
filds
sbb
xor
lcall
inc
and
push
pop
mov
add
roll
adc
ret
mov
xchg
and
dec
sbb
cld
mov
pop
jne
adc
jns
lea
fwait
pop
sbb
or
repz
outsb
jbe
jge
insl
subb
dec
scas
and
sti
fwait
lock
int3
dec
mov
aaa
shrb
pop
dec
call
add
pop
clc
cmp
push
scas
movsl
aad
aad
pop
add
fidivrl
mov
push
and
addr16
lret
pop
add
dec
sbb
cmp
push
lds
rcll
insb
out
pop
cmc
gs
and
mov
jle
loop
out
jno
out
push
addr16
inc
cmc
ss
push
lahf
inc
add
daa
movl
jp
fcoml
adc
ds
pushf
mov
nop
movsl
or
adc
xchg
sbb
repz
popa
push
mov
xor
jae
mov
mov
in
mov
jns
and
cwtl
mov
popa
push
jecxz
jne
or
sub
xchg
jmp
std
jp
in
into
rcrb
push
popa
xor
mov
movl
out
push
stos
cmp
shrb
mov
push
push
pop
jns
or
cld
inc
mov
flds
mov
sbb
lret
dec
aaa
roll
pop
dec
sete
imul
scas
mov
mov
test
sbb
and
mov
popf
stc
mov
or
mov
mov
lahf
shlb
push
movl
in
test
fwait
das
jnp
add
fimull
outsb
test
aaa
mov
mov
in
push
shrl
xchg
nop
and
mov
jne
push
push
xor
push
in
pop
sbb
cwtl
daa
push
push
xchg
push
mov
xchg
mov
popa
test
jle
mov
lahf
sahf
add
aad
dec
dec
push
adc
sub
mov
in
pop
adc
js
lods
or
cwtl
push
insl
js
rorb
xchg
imul
xchg
pop
cld
repnz
aam
lret
mov
leave
or
psrlw
lods
or
add
fsub
sbb
dec
filds
push
out
inc
and
xor
sbb
cld
js
sbb
cmp
push
inc
or
mov
push
shll
dec
orb
loop
push
or
sbb
and
inc
or
cmp
mov
in
pop
inc
sahf
aaa
rcll
adc
cmp
out
test
pop
jno
push
pop
es
push
xchg
push
fs
pop
iret
cmp
mov
cwtl
jo
rolb
imul
jno
and
int3
mov
xor
call
mov
dec
or
or
shr
xor
aaa
loopne
ds
cmpsl
dec
scas
jns
dec
jne
imul
std
rcll
sbb
push
movsb
mov
or
nop
pop
lea
in
gs
shll
push
sbb
int3
enter
scas
or
pop
lea
push
rcr
xchg
fdivrs
pop
movsl
xor
or
cwtl
push
xor
inc
test
ds
mov
sbb
pop
mov
sub
out
test
xchg
sub
testl
adc
cmp
jecxz
movsl
xchg
or
push
mov
xchg
insl
mov
sbb
aad
xchg
jno
mov
pop
and
mov
pop
inc
out
xchg
lcall
xor
dec
mov
push
cltd
stc
cwtl
push
adc
jle
cld
outsb
mov
lea
push
and
mov
push
mov
jbe
adc
or
add
sub
loopne
dec
sub
sbb
data16
xor
cmc
jb
mov
es
ret
insb
mov
dec
jno
negl
push
push
jne
sbb
lret
std
fadd
xor
test
lds
testb
jae
pop
movsl
or
loop
fdivrl
test
mov
fsubrs
pop
gs
inc
jo
and
fldenv
add
mov
insb
repnz
and
jae
sbb
xor
int
pop
lds
test
fsubrl
jg
dec
dec
aam
outsl
in
push
flds
ss
inc
adc
outsl
fdivp
mov
mov
rol
idiv
movsl
xor
cmpsb
imulb
movsl
cmovb
cmp
subb
pop
mov
mov
je
aaa
add
insl
rorb
push
sti
pushl
les
cmp
inc
rcl
sub
cmp
mov
repnz
push
sahf
dec
and
push
das
mov
add
repz
xchg
sbb
or
sub
mov
cwtl
outsl
clc
hlt
pop
push
or
lret
addl
int
jbe
add
ja
pusha
sub
jge
cmp
add
cmp
pusha
nop
sub
gs
push
inc
sub
xchg
jae
lock
pop
aaa
int3
pop
mov
xchg
shrb
repnz
ret
shlb
adc
lods
mov
movsl
jbe
dec
add
sub
jne
cmp
push
mov
dec
mov
test
push
adc
jmp
cmp
xchg
add
loopne
jg
jge
xchg
mov
lock
gs
insb
or
cmpsb
jo
or
inc
pop
das
xorl
push
pop
jnp
enter
mov
mov
stos
es
addr16
jb
pop
mov
adc
or
inc
jae
ljmp
mov
cwtl
mov
mov
add
mov
push
mov
sbb
clc
mov
test
rcr
lods
fcoml
dec
xchg
mov
gs
rorl
ret
addr16
ret
xchg
rcr
rcrb
push
fildl
adc
adc
in
ds
mov
push
outsb
inc
bswap
aad
or
sti
cld
cmp
push
ficomps
add
aaa
icebp
and
jecxz
and
mov
mov
mov
js
iret
push
mov
sbb
mov
mov
mov
and
adc
in
icebp
inc
repz
pusha
aaa
imul
jbe
xchg
push
adc
mov
or
add
ret
jle
cmpsl
lods
loope
jae
and
or
sbb
aad
adc
inc
jbe
fbld
mov
add
and
shrb
push
test
repnz
int
sbb
scas
xchg
loopne
test
cmpb
arpl
repz
xor
cmp
fsubs
daa
iret
jnp
jae
stos
imulb
mov
jo
cmp
ss
push
mov
in
and
test
ds
and
xchg
dec
push
insl
sbb
lret
push
cltd
mov
lret
inc
pop
lret
jne
nop
sarb
mov
rcr
insl
push
pushf
lret
push
push
es
sbbb
jmp
popf
sbb
in
jb
xchg
ja
cmpsl
bound
jnp
add
push
add
dec
rolb
jno
enter
push
scas
int3
push
fnstenv
ds
push
int3
lcall
pop
lods
movsb
jp
scas
test
pop
out
enterw
adc
mov
mov
arpl
cmp
fcoml
int3
inc
fmuls
out
mov
rol
sbb
imul
push
mov
sub
dec
push
pop
mov
add
rorl
xchg
scas
xchg
mov
out
mov
push
adc
mov
sub
mov
inc
shrl
pop
pushf
pop
rol
sbb
js
loope
aam
mov
fs
cld
mov
xor
aam
imul
and
lock
out
addr16
push
sbb
imul
dec
in
nop
je
sbb
cli
adc
or
push
shrb
xchg
std
mov
out
inc
mov
jne
push
pop
dec
sbb
push
cmp
cmp
out
adc
inc
xor
jae
idivl
fs
adc
mov
add
inc
mov
test
inc
sub
or
in
xchg
mov
jge
dec
loopne
jl
pop
add
and
sub
mov
lahf
loop
jne
rolb
bts
pop
imul
sub
movsb
subl
add
test
adc
hlt
adc
inc
movsl
jl
out
lret
add
out
cs
mov
in
and
jmp
lcall
jp
js
popf
jae
xlat
push
out
imul
cmpl
fwait
daa
mov
aam
cli
es
aaa
inc
cs
sub
sbb
jns
jnp
cmpsl
test
mov
lods
dec
mov
sub
fs
jns
cwtl
stos
cmp
and
sbb
cmp
nop
lret
lahf
jmp
push
add
cmp
stc
test
cltd
adc
adc
cmc
xorl
cmp
and
popa
rcll
pop
and
jge
fcoms
adc
cld
movsl
lret
stos
sbb
outsl
imul
mov
push
orb
jecxz
push
mov
sbb
shr
add
fcoms
rol
pusha
mov
aad
xor
loopne
push
rol
sbb
adcl
in
rcl
sar
mov
mov
inc
nop
dec
pop
xchg
dec
sub
jbe
xchg
mov
xchg
cmpsb
sub
add
lret
ficompl
jmp
insl
adc
test
ljmp
rcl
repz
movsl
shlb
cld
repnz
xchg
ja
stos
out
and
sub
xchg
pop
lods
push
jecxz
push
aad
add
shl
jae
push
and
mov
mov
cmpsb
popf
aad
mov
xor
dec
scas
mov
sti
ror
lcall
cmp
adc
mov
jno
pop
into
push
jo
mov
rcl
aam
xor
aaa
incb
nop
ja
movsb
or
clc
clc
xor
je
jb
dec
and
mov
push
xchg
out
cld
cmp
sti
xchg
cmpsb
in
add
sbb
mov
mov
pop
sub
push
lock
pop
mov
cli
pop
inc
mov
insl
pop
test
add
pusha
arpl
xchg
roll
call
pop
pop
mov
push
pop
je
pusha
movsl
iret
or
add
sahf
out
test
sti
mov
mov
inc
test
push
mov
xchg
ljmp
xchg
les
lock
gs
inc
push
fistl
int
insb
imul
insl
ljmp
mov
ret
add
adc
xchg
dec
push
jg
fildl
das
cmc
repz
sub
btc
jae
roll
sahf
daa
xchg
sbb
sbb
sar
shl
pop
lahf
cmp
mov
adc
std
pop
cwtl
dec
add
add
mov
pushf
ja
mov
push
cli
pop
scas
xor
or
xor
push
xor
adc
jge
add
adc
dec
inc
pop
loopne
in
mov
repnz
scas
mov
jb
js
inc
jl
xchg
in
iret
in
jne
stos
push
loop
push
mov
dec
pop
sbb
and
sti
ljmp
push
test
mov
push
push
sarl
clc
adc
test
pop
sbb
mov
je
push
mulb
mov
int3
cmpsl
jp
jmp
pop
aaa
pop
into
insl
mov
cmpb
mov
adc
es
lods
sbbb
and
sub
sub
stos
aad
or
push
aas
mov
push
mov
mov
mov
fisubrs
dec
test
sub
xor
stos
or
aaa
sub
cltd
lods
sub
xlat
sahf
loopne
inc
mov
and
or
dec
adc
push
sarl
lahf
dec
and
add
das
cltd
test
xor
cmp
dec
cmc
mov
test
jo
icebp
pop
push
loopne
pop
stos
cmpsb
push
scas
out
mov
push
testb
inc
jecxz
fiadds
stc
pop
mov
ret
jno
std
jo
cmp
das
iret
sbb
hlt
mov
sub
xchg
add
mov
lock
mov
in
inc
inc
push
mov
shll
push
cmp
push
jne
or
dec
fldl
pop
sub
sbb
sub
push
push
jbe
jns
mov
push
outsl
push
inc
sbb
mov
inc
inc
es
cs
shll
xchg
xor
bnd
mov
dec
scas
adc
cmpl
sub
or
push
and
ja
sbb
push
lock
xchg
and
cmc
cmpsl
mov
in
jnp
mov
test
lret
add
fcoms
dec
popa
xchg
mov
xchg
jno
sbb
xor
cmp
dec
sbb
pop
sti
insb
pop
dec
lahf
popf
call
popf
cmp
test
popa
jmp
jno
mov
cmp
andb
pop
jmp
or
adc
int3
push
pop
xor
pop
insl
mov
jne
stos
out
lcall
imul
dec
adc
lret
dec
in
inc
in
call
mov
lea
adc
sbb
jno
push
and
enter
xchg
dec
lea
jle
aaa
outsl
adcl
inc
in
test
clc
testb
xchg
subb
xor
test
push
xchg
or
mov
ljmp
lea
mov
push
cmovp
lock
mov
adc
cmpsb
repz
movsl
inc
push
mov
repz
jbe
sbb
jo
add
dec
repnz
add
leave
mov
inc
mov
inc
mov
jbe
jns
xlat
jg
lcall
cmp
adc
cmpsl
in
int3
adc
jno
xor
lea
mov
ret
lods
and
outsb
cmp
popf
test
js
stos
sub
mov
rcl
cwtl
ret
jp
dec
push
mov
loope
dec
mov
mov
cs
mov
cmp
test
sbb
imul
pop
dec
sbb
mov
xor
jae
cmpl
mov
mov
xchg
jno
jo
ja
lret
jmp
xor
push
adc
sbb
jns
sbb
loopne
test
lds
ret
arpl
sbb
mov
cmpsb
scas
jne
jb
jnp
cmp
jne
xchg
in
xor
aam
xor
movsb
or
ret
sbb
mov
add
stc
idiv
dec
test
rorl
fdivl
push
xlat
ja
cmp
popa
daa
movb
pop
sub
scas
or
adc
cmp
lea
xor
test
roll
sbb
dec
fldcw
xor
std
sub
rcrl
ficoml
in
push
ds
push
push
mov
in
nop
imul
jne
popf
or
push
popa
nop
fdiv
push
fmull
stc
not
sbb
mov
daa
nopl
pop
mov
int
bound
imul
xchg
push
mov
std
lock
dec
and
sub
mov
adc
jmp
jge
pop
mov
pop
sub
mov
xor
or
fiadds
mov
sub
sbb
jp
inc
es
cmp
jle
inc
cmp
and
shl
and
aas
rorl
loop
out
cltd
inc
int
push
sub
aas
xchg
rcrl
ret
pop
pop
add
lcall
adc
pop
add
xchg
stc
and
ret
xchg
add
dec
dec
repnz
aas
inc
mov
pop
mov
lock
mov
fcoms
and
dec
movsb
mov
outsb
inc
outsl
jb
stos
test
aam
adc
movsl
push
sub
xchg
push
pop
hlt
sbb
arpl
mov
jbe
dec
and
addr16
loopne
test
and
or
push
cmp
pop
aad
mov
pop
fs
movsl
push
or
incb
fiadds
dec
cwtl
mov
cmp
int3
iret
shlb
mov
pop
imul
inc
cmpsb
mov
push
stos
and
movsl
ret
mul
rorl
mov
mov
test
imulb
cld
xchg
scas
or
dec
xchg
adc
ret
mov
pop
mov
jb
xor
jmp
ret
inc
stos
fdiv
test
pop
shr
mov
shl
add
sbb
and
dec
sbb
sub
out
mov
xor
cmp
fs
js
push
pop
imulb
js
jo
fwait
xor
sub
pop
push
mov
out
xor
out
adc
out
inc
pusha
xchg
xor
mov
inc
sbb
dec
mov
hlt
push
or
sbb
loopne
pusha
lds
fstpl
test
jmp
cmc
xor
fsubrl
pusha
jl
int
fisttpl
jno
js
cmpb
jo
pusha
inc
cmp
mov
clc
mov
or
xchg
lods
in
pushf
or
inc
inc
popa
mov
lods
bound
imul
inc
mov
pop
fwait
mov
adc
inc
adc
lea
daa
cmp
mov
fwait
adc
jle
xchg
loop
test
cli
test
arpl
ja
pop
adc
sbb
bnd
enter
arpl
sub
arpl
mov
add
popf
mov
test
cmpsl
push
pop
xchg
mov
cmp
int3
mov
and
stos
lea
adc
shrl
in
pushf
out
lds
mov
insb
pop
push
cmp
shr
loopne
xchg
mov
mov
lahf
loop
cs
imul
xor
inc
movsl
mov
movsb
mov
test
ljmp
mov
aad
fildll
ret
and
mov
jae
cmpb
sub
fcom
xor
stc
cmc
push
pop
sbb
fiadds
push
add
cmc
in
rcll
jb
popf
mov
dec
cmp
xchg
pusha
ss
xor
pop
or
clc
sub
mov
test
into
push
mov
in
cmpsb
push
clc
cmp
push
pop
add
add
lock
mov
fists
push
cmp
in
or
mov
inc
cmpsb
test
or
cld
xor
cmpsb
dec
clc
inc
sub
aad
test
and
mov
aam
cmp
pop
lods
xor
out
ljmp
jle
inc
mov
aaa
jno
pop
xor
add
or
dec
xor
lahf
add
mov
sub
cli
jl
int3
sbb
loope
pop
sbbb
and
sbb
mov
pop
push
pop
mov
mov
loopne
adc
adc
bound
repz
icebp
int3
mov
jmp
lret
lret
nop
or
push
stc
cli
test
push
mov
xor
rcrb
cmp
sub
dec
aam
jnp
dec
inc
lods
scas
inc
jle
and
and
sbb
sub
or
inc
add
inc
mov
lods
mov
in
sar
jmp
lods
shrl
stc
add
jnp
dec
jo
mov
cmp
sar
insb
adc
bound
mov
js
or
push
minps
shl
aas
and
dec
and
gs
push
push
inc
movsb
cmp
mov
cmp
nop
shrl
ljmp
repnz
cld
sub
xchg
loop
ja
cmp
cmp
in
insl
aam
adc
fadds
sbb
or
jb
inc
jg
imul
add
mov
mov
inc
loope
repz
roll
sub
jb
movsl
repz
mov
fimuls
push
mov
imul
mov
push
sbb
jmp
int3
in
mov
test
xor
test
inc
popa
out
mov
cmp
inc
sbb
push
cli
mov
jnp
out
mul
es
xchg
in
push
jle
push
rcrl
imul
sub
nop
jl
leave
shll
cmpsb
fcomip
mov
adc
push
inc
jb
fmul
or
mov
sbb
mov
sbb
or
addr16
lret
inc
sbb
xor
or
pop
scas
movq
ljmp
bswap
dec
and
push
sub
aam
lret
loope
jb
push
test
xchg
sub
push
dec
push
sub
mov
dec
mov
pop
push
push
inc
pop
adc
movsl
push
xchg
push
pop
lods
fsts
data16
cmc
insb
jbe
sub
pop
push
movsl
addr16
cmp
jg
xorb
and
sbb
out
add
scas
cmp
int3
mov
mov
and
fisttpll
arpl
pop
push
popf
shll
adc
stos
cmp
pusha
pop
lret
jb
or
push
imul
dec
fisubrl
inc
or
mov
stos
jns
adc
test
cmpsl
jp
adc
adc
push
sbb
cs
sbb
stos
test
mov
adc
shrl
lds
scas
pop
pusha
lock
or
lret
mov
popf
push
dec
movsl
lock
or
mov
pop
mov
add
xchg
xor
dec
adc
cmp
add
pop
adc
movsb
ret
mov
stos
imul
xchg
subl
mov
out
int
and
inc
jne
cmpsl
inc
std
lea
jnp
out
inc
movsb
into
push
or
sbb
scas
nop
lret
clc
lret
xor
and
cli
pop
stos
in
or
icebp
in
mov
mov
dec
xchg
movsb
xchg
xchg
sub
xor
inc
add
test
mov
mov
in
clc
stos
sub
push
mov
mov
xchg
je
out
mov
add
sub
mov
shl
pop
xor
xor
lods
xchg
cmp
fwait
in
lret
cmp
mov
std
gs
pop
nop
and
jp
mov
mov
fidivrs
push
sbb
call
xor
in
or
mov
jb,pn
aaa
mov
mov
out
pop
enter
inc
rclb
or
dec
sbb
mov
es
sar
or
into
shll
test
pop
push
in
mov
sbb
iret
movsl
xchg
xchg
and
js
or
xor
adc
mov
scas
mov
pop
adc
mov
in
mov
xchg
stos
push
loopne
xor
adc
mov
xchg
pop
add
push
or
lret
mov
jb
sti
add
das
in
pop
sahf
fidivrl
inc
jbe
push
ficomps
in
pop
sbb
xchg
imul
mov
rcll
jae
and
scas
jne
inc
inc
in
mov
sbb
adc
mov
push
sub
xor
jg
sahf
test
mov
out
adc
cmp
mov
pop
repz
pushf
push
loope
out
cltd
jecxz
xorb
loope
push
and
push
jmp
inc
fisubl
and
lock
mov
pop
mov
sarl
and
rorb
divl
jge
cmpsb
les
call
shlb
and
bnd
xchg
ljmp
mov
jecxz
push
jmp
repz
jo
lea
js
xor
es
or
pop
fmull
call
inc
push
cmp
sub
je
adc
mov
leave
fstp
mov
cmpsl
inc
or
cmpsl
out
out
adc
sub
jnp
mov
lock
jae
outsl
dec
je
lds
popf
push
loopne
lods
fbstp
leave
mov
add
gs
cld
movsl
mov
ja
jae
lcall
fs
aas
daa
fisubrl
fwait
out
mov
pop
mov
int
rcl
cs
das
daa
in
aas
inc
dec
loope
jae
push
mov
push
mov
push
dec
scas
mov
mov
push
and
ret
loop
mov
mov
fiadds
and
lret
cmp
cmp
fisttpll
pusha
push
loop
js
lcall
push
jo
dec
int
push
out
in
imul
mov
lahf
scas
repnz
call
adc
rcl
ret
pop
out
test
loopne
test
icebp
and
popa
imul
or
push
and
add
pushf
ret
enter
in
and
xchg
sub
aad
daa
and
mov
push
out
dec
sbb
in
xchg
mov
mov
jmp
mov
jbe
adc
push
daa
pushf
inc
bound
inc
cmpsl
pop
sbb
scas
push
shrb
and
outsl
pushl
mov
and
pop
lcall
push
jecxz
pop
inc
xchg
fcmovnu
inc
lret
inc
sahf
inc
mov
and
adc
add
xor
cli
mov
xlat
xor
inc
and
fsts
adc
pop
into
sbb
test
js
dec
xchg
sbb
pop
inc
xorl
push
sahf
mov
cmp
in
ja
cwtl
ror
add
test
adc
int
xor
mov
mov
cmp
jle
in
add
dec
mov
add
hlt
fstp
adc
push
loope
jmp
adc
repz
fsubr
fs
loopne
cmp
and
dec
testb
jp
jne
push
mov
in
mov
js
in
mov
mov
sub
test
cwtl
sub
sbb
ret
into
nop
inc
jb
stos
iret
cmp
sti
jecxz
fadds
dec
lea
ficomps
and
fdivrs
lret
jg
movsl
js
mov
ds
out
dec
ja
pushf
dec
ficoml
sub
mov
pushf
mov
repnz
outsb
aas
inc
cmp
cmpsb
outsl
icebp
pop
fwait
sub
fwait
jns
add
jno
mov
movsb
cmp
mov
pop
ljmp
add
ds
gs
jbe
jmp
rcrl
repz
cmp
out
xor
icebp
shll
repz
push
ficompl
cmc
dec
sbb
jle
loop
push
and
shrb
cmpsl
pop
sbb
inc
inc
pushfw
push
outsl
je
adc
aam
cmp
mov
fmuls
push
push
daa
fdivrl
loopne
cmp
aad
pop
xchg
xchg
add
xor
and
les
pushf
pop
scas
adc
xor
or
pop
fwait
sub
rcrb
push
jnp
pop
adc
leave
xor
bnd
jg
unpcklps
rcll
push
jg
xchg
cltd
push
shr
inc
and
cli
ror
mov
inc
data16
hlt
lods
jmp
pop
insl
leave
shlb
add
aas
lds
out
xor
pop
xor
aad
pop
cmp
enter
inc
rorb
add
dec
outsb
push
leave
test
add
xchg
aas
mov
xor
popa
lods
neg
popa
jnp
addb
pushf
mov
sub
push
mov
repz
hlt
mov
insl
outsb
test
lret
pop
sub
pop
ss
adcb
popf
mov
inc
cmc
cwtl
es
out
dec
pop
adc
int
or
movsl
shlb
xor
jno
cmp
je
jle
dec
push
int
pop
dec
jl
shlb
jge
sbb
mov
es
push
push
pop
testb
lahf
mov
inc
xor
pop
mov
mov
cld
fs
out
add
mov
into
out
jno
add
or
jge
lods
loope
mov
add
xchg
mov
pusha
push
insl
xor
push
lcall
in
leave
jnp
imul
arpl
repnz
push
mulb
jge
sti
push
test
pop
sbb
mov
shrb
cmp
xlat
push
mov
cmpsb
lds
dec
dec
stc
leave
arpl
negb
jno
movsb
sti
notb
inc
pop
rorb
cmpsl
movsl
bound
cmc
sbb
scas
ror
and
inc
insb
cli
arpl
out
jns
imul
idivl
stos
adc
xor
jne
adc
sbbl
push
dec
shll
repz
jl
push
fwait
loop
test
fnstenv
mov
xchg
mov
out
out
jno
add
lahf
in
sti
gs
mov
adc
lds
xchg
gs
push
aam
jnp
mov
daa
ljmp
stc
adc
mov
into
movsb
ret
cmpsb
jbe,pn
sub
push
lods
xchg
dec
jg
pop
out
pushf
inc
push
mov
add
cmpb
add
sub
fistpl
mov
sub
mov
aad
int3
mov
mov
xchg
xchg
mov
or
jno
xchg
clc
int3
scas
test
xor
dec
std
mov
jb
mov
int
sbb
cmc
inc
jmp
dec
xor
das
jg
aaa
and
push
push
aam
popa
add
in
add
andb
inc
int3
push
cmp
int
cmpsb
push
sahf
xchg
popa
lods
push
adc
xor
pop
mov
add
mov
push
popa
pop
or
mov
and
shlb
pop
inc
shll
je
test
test
mov
jle
insl
rcl
stc
push
fisubrl
inc
loopne
or
push
rol
es
int
adc
fldt
adc
sti
push
adc
sbb
pop
sarb
test
pop
push
mov
inc
lret
and
repz
cld
mov
out
cmp
stc
sub
movsl
inc
test
and
cmp
fcoms
ret
in
inc
repnz
ja
arpl
ljmp
aam
repz
sahf
mov
cmpsb
and
lods
loope
xchg
mov
sub
pop
pop
clc
mov
testl
lods
pop
popa
mov
mov
jo
dec
loope
fisubl
cs
fsub
je
out
sbb
mov
jb
loopne
dec
cmp
or
pop
and
out
fnstcw
dec
mov
cmp
xchg
dec
adc
pop
mov
jle
test
std
fsub
mov
inc
mov
aad
jmp
pushf
pusha
out
sub
mov
ds
int3
cltd
mov
add
fnstsw
sbb
icebp
dec
sub
xor
mov
and
sar
adc
cmp
cmp
imul
lock
daa
jecxz
ficomps
sbb
repz
js
cmp
sbb
sahf
or
mov
imul
push
in
mov
les
mov
mov
daa
add
lcall
add
adc
jge
add
fisttpl
jge
sahf
or
fs
popa
repnz
cmp
push
push
jl
xchg
and
jecxz
sub
repnz
mov
sub
jb
in
cmpsb
lahf
sar
cmp
jnp
pushf
sbb
and
xor
sbb
das
inc
call
mov
fbstp
fisubl
pop
dec
jle
xchg
dec
nop
cmpb
insl
xchg
stc
dec
shlb
leave
xor
lea
adc
iret
inc
add
sub
fildl
push
and
mov
and
sub
rcrb
rclb
test
mov
inc
adc
fcoms
add
stos
fstp
xchg
cltd
lock
outsb
cli
xor
inc
push
ja
ret
daa
fiaddl
sub
xor
add
movsb
jo
sub
std
mov
sbb
adc
mov
mov
data16
cli
or
ficomps
stos
cmp
pop
clc
ja
out
lock
cmp
popf
test
pop
test
cmp
pop
mov
add
test
jo
sub
jp
push
jecxz
push
cli
lea
sbb
cmp
lret
push
push
pop
push
mov
xor
in
repnz
adc
push
jmp
lret
sarb
out
nop
xchg
cmp
sarb
cli
xchg
arpl
cltd
stos
pop
mov
dec
call
xor
pushf
ret
jo
loope
out
xor
xor
repnz
mov
sbb
add
jno
xor
test
dec
mov
icebp
or
adc
mov
int
in
pop
pushf
adc
sub
test
cmp
decl
mov
int
addr16
pop
mov
leave
inc
dec
hlt
inc
add
and
jae
and
lret
lret
add
push
xchg
in
aaa
pop
add
popf
push
lea
in
pop
outsl
iret
stos
inc
std
lods
cmp
pop
sub
xchg
mov
ja
and
aaa
cltd
sub
push
jne
xchg
mov
adc
testb
lahf
xor
rcr
mov
jbe
xor
cmp
push
inc
cmc
mov
je
mov
loope
xchg
and
rcll
hlt
lahf
pop
in
fs
mov
cmpsb
add
sub
inc
inc
popa
movsl
fwait
loope
shr
pop
pusha
jne
stos
xor
lods
jo
ljmp
cltd
iret
loop
sbb
push
loopne
mov
and
dec
hlt
push
push
lret
faddp
sbb
out
fsubs
lahf
gs
ss
stc
out
inc
mov
imul
gs
and
movsb
out
frstor
xor
popf
sahf
aaa
stos
inc
lds
sar
std
xchg
xchg
cwtl
mov
lds
or
ljmp
cmpsb
inc
mov
shrl
jae
les
jns
push
movsb
test
add
xor
push
adc
and
cmp
xor
cmpsl
jae
outsb
jae,pt
inc
je
inc
clc
jl
bnd
cmp
push
fxch
mov
push
sub
fcmovbe
pop
mov
data16
sub
fs
jo
push
dec
dec
hlt
les
and
add
cs
ret
test
mov
or
iret
sub
int3
inc
nop
push
push
test
repnz
popf
bound
and
lahf
iret
mov
rorl
add
mov
movsb
mov
sbb
mov
cmp
subl
popa
dec
adc
in
loopne
loope
iret
lds
xchg
nop
nop
mov
sub
sbb
dec
ret
jle
inc
pushf
repz
and
xor
push
pop
rorl
mov
call
shll
cmpsl
and
mov
daa
fs
mov
stos
xor
xchg
call
dec
cmc
jno
popf
sub
test
mov
das
pop
mov
lahf
pop
sub
pop
stc
je
insb
adc
push
sbb
pop
iret
aad
gs
fs
cmp
push
xor
pop
repnz
in
mov
mov
mov
inc
std
push
add
dec
scas
int3
stos
sub
cmp
movsl
push
ja
mov
outsb
add
sbb
jnp
mov
mov
sbb
xor
push
push
dec
adc
cmp
mov
inc
push
fmull
mov
popf
loope
pop
imul
mov
add
insb
xchg
orl
sahf
orl
push
scas
test
mov
lock
xor
into
mov
loope
dec
mov
ja
push
cltd
cmp
lods
scas
loope
mov
mull
add
jae
frstor
sub
stos
dec
andb
dec
cmp
loopne
mov
or
add
ja
add
mov
fdivrl
pop
out
shlb
dec
sub
bound
or
sti
sbb
dec
xchg
inc
rorl
scas
popf
fists
mov
mov
adc
push
push
jle
jmp
add
les
jae
sub
and
xor
mov
mov
mov
rcrb
fnsave
lds
add
pop
imul
stos
div
cmp
arpl
mov
loopne
loopne
mov
pop
xor
xchg
and
imul
popa
mov
mov
arpl
cmpsl
or
sbb
loope
xchg
or
fwait
cli
dec
mov
sti
sbb
js
stos
movsl
jg
push
out
pop
xchg
shll
scas
cmpsl
pusha
std
ret
dec
sbb
xor
fisttpl
pop
or
push
adc
lcall
stc
xchg
hlt
cwtl
lret
sbb
cmp
push
insb
sti
std
lret
and
sub
movsl
pusha
fldenv
fmulp
adc
in
sahf
adc
push
shr
adc
je
shll
jnp
pop
push
jae
addr16
push
pushf
repz
mov
int3
outsb
movsl
push
mov
sub
in
jmp
faddl
rclb
stc
adcb
xchg
in
push
xor
sahf
xor
loopne
xor
sbb
sbb
int
imul
lods
mov
inc
inc
mov
pop
mov
sub
or
mov
dec
sbb
add
incl
aad
inc
lahf
mov
adc
xlat
mov
fwait
ljmp
mov
out
das
stos
dec
mov
cli
loopne
arpl
cmp
or
in
push
bnd
mov
jecxz
dec
pop
addl
pop
push
out
mov
lahf
mov
push
pushf
imul
push
push
xchg
xchg
adc
xor
jmp
divb
test
xchg
int3
mov
pop
shl
fcoms
ja
mov
imul
scas
in
adc
sub
cmovp
fdivrs
push
imul
jbe
sub
push
xchg
les
dec
inc
ja
cltd
loopne
or
cmp
nop
dec
sti
push
out
shl
dec
or
xor
or
je
jnp
mov
cmp
imul
mov
xchg
pusha
and
aas
or
pop
adc
test
cwtl
or
mulb
mov
and
xor
and
faddl
loopne
pop
dec
jns
into
insb
sub
push
lods
leave
mov
and
mov
call
mov
add
mov
mov
cmp
cwtl
mov
mov
jb
mov
ljmp
std
test
test
cs
shll
xchg
push
test
push
cmp
pop
lret
jecxz
and
mov
cwtl
push
jecxz
nop
xchg
out
push
add
ret
lds
jo
in
rorl
inc
gs
or
sarl
jne
inc
sbb
push
je
pop
add
push
lahf
pop
push
sbb
repz
movsb
test
cwtl
push
test
inc
inc
mov
mov
sub
jno
adc
ja
xchg
pop
dec
fs
fwait
repz
mov
adc
test
mov
push
lahf
addr16
daa
or
adc
cwtl
fucomi
push
negb
ret
jno
add
cmpsb
ljmp
ficompl
test
js
inc
cld
popa
movb
push
pop
adc
fldcw
shlb
mov
push
mov
jecxz
cmp
sub
leave
int
add
cltd
xor
push
fstl
mov
mov
or
in
push
pop
mov
movsl
ljmp
popf
inc
xchg
sahf
add
sar
outsb
xchg
aad
push
psubd
rorl
adc
shr
ljmp
sbb
mov
jno
or
pop
sar
xor
mov
cmp
push
sbb
adc
inc
lock
decl
push
mov
sub
addr16
out
imul
or
int3
bound
adc
cmc
sbb
jecxz
fwait
inc
or
jle
pop
cmc
pop
nop
pop
cmp
sbb
data16
jnp
pop
mov
jl
gs
pop
jo
aam
push
sbb
sub
push
cmp
xor
cltd
add
sbb
mov
in
push
xor
jecxz
push
pop
push
cmp
jb
and
sti
enter
rcrl
es
dec
cmp
outsl
push
ret
adcb
mov
jg
lods
repz
mov
gs
repnz
mov
ja
and
xchg
xchg
add
outsl
stos
or
and
cld
sbbb
jg
xchg
mov
ss
mov
mov
cli
test
sar
cmp
daa
xchg
cmp
sub
mov
sbb
mov
push
cli
mov
sub
iret
jmp
xlat
cmpb
fs
rorb
arpl
pop
inc
pop
and
lds
mov
pop
cmc
xchg
inc
inc
add
inc
push
lcall
int
jb
mov
sbb
data16
and
xor
push
jno
push
ljmp
aam
add
lret
inc
add
sahf
jp
push
cwtl
cmp
int
lock
cmpsl
mov
adc
leave
xor
sbb
pop
fs
mov
fcomi
adc
repz
push
jnp
mov
adc
sahf
sbb
fwait
add
adc
xor
ret
xchg
pop
dec
scas
idiv
in
and
dec
loop
add
nop
adc
xchg
push
leave
add
sub
xor
pop
movsb
add
mov
mov
testb
cltd
pop
add
sbb
rclb
sarb
cmc
lods
cmp
jbe
scas
ljmp
xchg
popa
push
xchg
pushf
pop
mov
sub
lock
inc
fsubs
or
pop
bound
cmp
add
jbe
pop
mov
outsl
xchg
cmpsb
jbe
pop
and
inc
mov
jnp
inc
pop
mov
inc
cmpb
xor
pop
lcall
mov
arpl
roll
in
ljmp
clc
push
jmp
sahf
mov
push
inc
mov
add
ret
enter
lds
cltd
in
cwtl
shlb
outsl
sub
fiaddl
or
cmp
cmp
pop
icebp
fists
pop
mov
xor
mov
lods
cmp
adc
jno
pusha
js
adc
mov
stos
outsb
icebp
jo
outsl
sbb
xchg
mov
xor
sti
sbb
nop
xchg
ljmp
cwtl
pop
or
fildl
movsl
nop
cmp
insb
sbb
aad
loopne
pop
sbb
popa
jmp
push
cmp
fstl
adc
jne
cmp
out
ror
call
mov
adc
ja
jp
out
lds
push
addr16
xchg
dec
lods
decl
mov
in
mov
dec
sub
inc
fcmovne
or
icebp
leave
out
shrl
mov
bound
loope
mov
xchg
faddl
add
cs
sbb
adc
mov
out
test
push
aad
mov
mov
out
or
mov
push
lods
outsl
pop
repz
or
pop
adcb
xchg
cmpsb
xlat
mov
mov
push
test
js
pop
xchg
and
inc
pop
mov
ja
mov
adc
lcall
imul
aam
out
push
cmp
add
jmp
fs
jns
jb
push
jle
mov
cmp
icebp
push
pop
adc
adc
mov
sub
cli
mov
or
ja
xchg
cs
xchg
mov
icebp
leave
mov
mov
push
sub
and
mov
cmp
lea
jg
xchg
add
test
dec
inc
repz
pop
pop
lcall
xchg
rorl
cmc
xor
arpl
lret
sbb
nop
jmp
and
repnz
sub
out
aad
fstpt
xchg
inc
sub
pop
mov
mov
aas
and
dec
sti
xchg
cmp
inc
jmp
je
sarl
push
jne
jno
inc
xor
fbld
inc
fcompl
xchg
sbb
loope
or
pushf
mov
shlb
xor
xchg
repz
pop
out
mov
xlat
jno
mov
flds
mov
sbb
insl
jl
xchg
mov
pop
imul
addr16
push
mov
js
add
lea
xchg
push
movsb
movsb
push
les
in
mov
jp
mov
cmp
sub
jno
lcall
mov
adc
pop
out
stos
inc
lcall
pop
lret
int
mov
xor
sbb
sub
or
lods
xor
and
lret
dec
lods
out
dec
push
adc
arpl
mov
fidivl
into
ljmp
xchg
xchg
inc
or
fadds
aas
inc
fldenv
jno
shlb
bound
or
stos
and
push
or
shll
fwait
mov
mov
and
or
aas
lds
dec
add
mov
hlt
sub
and
outsb
sbb
cmpsl
pop
xchg
dec
aaa
mov
lret
hlt
fsubrs
movb
bound
sub
xchg
mov
cltd
inc
int
and
shlb
in
adc
mov
in
add
ss
out
add
stc
push
ja
ret
adc
cmpsl
dec
pop
sub
adc
pusha
orb
mov
add
in
cmc
xchg
sub
add
sahf
mov
dec
xchg
xchg
mov
scas
stos
stos
aad
jle
loop
mov
push
stos
push
flds
pusha
mov
xor
outsb
or
add
xor
aaa
push
pop
push
mov
daa
and
sub
jmp
ud1
mov
lods
cmpsl
xor
add
cmpsb
cmp
loopne
lret
adc
ja
xchg
testb
aad
pop
adc
and
aam
test
cmpsl
push
adc
jmp
xchg
aam
lahf
xor
pop
lret
push
fnstenv
push
dec
jne
movsb
and
mov
testb
fcoml
mov
insb
pop
mov
mov
shll
subb
xor
popa
adc
sbb
movsl
fs
int
push
cwtl
orl
jecxz
add
test
dec
cs
dec
add
jecxz
mov
jle
shlb
push
pop
lret
mov
shrl
inc
loope
shrb
sbb
je
jbe
jnp
out
cs
lods
shlb
fbstp
insl
lahf
rorl
mov
cmc
nop
cmp
notl
cli
xor
mov
adc
es
inc
data16
push
cmc
xor
and
or
adc
out
movsl
jg
int3
add
roll
icebp
dec
mov
arpl
and
push
and
cmpsl
cmp
pop
aad
jne
inc
xchg
fs
jno
jl
cmc
sbb
je
fmuls
and
stos
in
inc
stos
fmuls
sub
inc
xlat
add
into
inc
adc
jae
jne
test
jb
les
mov
fs
or
jb
sarl
stos
inc
movsb
cmpsb
mov
xor
arpl
mov
inc
je
xor
xchg
ljmp
mov
nop
add
stc
icebp
decl
push
push
push
push
lret
leave
xchg
icebp
sti
push
cmp
icebp
xchg
gs
movsl
std
sbb
inc
pop
cmpsb
outsl
dec
and
ret
mov
sbbl
mov
aas
or
stos
sub
je
test
cmp
jl
cltd
mov
shll
pop
dec
mov
pop
add
mov
aam
sbb
ljmp
loopne
fidivs
sbb
push
jle
xchg
xchg
jns
ret
mov
in
lock
inc
ret
sbb
pop
jmp
mov
ljmp
push
lea
push
xchg
xchg
mov
repnz
and
inc
mov
push
das
js
rcll
xchg
adc
rclb
sub
into
dec
sbb
pop
mov
mov
mov
and
xor
pop
in
push
adc
pop
loopne
in
scas
push
jnp
out
mov
movsb
xchg
and
cli
sub
mov
cmp
ds
push
mov
rol
jns
xchg
je
or
jmp
mov
mov
loop
mov
bound
fdivrs
test
xor
mov
xor
pop
xor
mov
inc
hlt
sbb
sbb
fdivl
stos
push
inc
pop
xchg
or
cmp
andb
pop
andb
adcl
xchg
xor
dec
sbb
shll
cmp
dec
ret
dec
out
ss
or
or
mov
test
sahf
test
mov
call
pop
xchg
movsb
fadds
rclb
ja
and
jmp
ret
fisubl
rolb
xor
mov
pop
cmp
mov
test
add
lea
and
aas
xchg
push
jecxz
jb
cmc
jge
xchg
jb
adc
mov
pushf
sub
fwait
cld
xchg
and
stos
push
sarb
mov
fnstenv
sub
sub
je
sub
dec
xor
fistpll
jbe
and
std
push
call
loopne
sbb
or
mov
repnz
sbb
jns
dec
jg
mov
mov
in
shl
mov
ja
movsb
add
push
dec
push
xchg
clc
loopne
pop
loopne
stc
push
arpl
add
jg
add
push
js
jmp
pop
pusha
mov
and
and
roll
xor
lock
les
aas
insl
dec
xchg
test
scas
or
jne
xor
nop
xor
popf
fsts
repz
popa
mov
aad
aam
ud0
rcll
pop
ljmp
jl
mov
or
mov
dec
pause
dec
loopne
pop
fdivs
adc
cmpb
mov
stc
mov
sub
and
and
popa
dec
jbe
inc
sbbl
lods
push
out
movsl
jnp
lea
sub
inc
jns
cmp
mov
fwait
das
sub
mov
inc
inc
lock
pop
js
out
stos
std
or
rorb
xchg
push
mov
dec
cwtl
int3
shrb
or
push
rclb
bound
enter
data16
js
jl
push
dec
pushf
cmp
and
dec
inc
push
lret
mov
std
sub
or
bound
and
mov
dec
enter
aaa
clc
in
and
mov
push
adc
xchg
stos
dec
cld
inc
adc
jle
aas
cld
sbb
shr
pusha
fdiv
shl
mov
mov
outsl
xor
inc
imul
rorb
mov
seta
xchg
loope
xchg
test
add
cmp
lods
mov
and
je
arpl
xchg
cmp
add
cmp
pop
push
inc
jno
add
repz
mov
dec
xor
push
mov
popf
mov
sub
xor
lods
pushf
cmp
aas
out
inc
mov
imul
pop
mov
push
jp
xchg
outsb
sub
aam
inc
test
jge
js
add
and
push
stos
mov
pop
sbb
cli
loop
sbb
in
decl
out
test
cmp
aaa
mov
decl
lods
stos
adc
push
push
add
ja
std
popl
push
fiadds
and
push
ret
xchg
and
jns
cmp
push
sbb
shl
or
out
test
sbb
xchg
sub
jnp
mov
int3
clc
sbb
ja
bound
daa
jle
dec
test
jmp
pushf
mov
cvtps2pi
lahf
in
test
mov
xchg
xor
fwait
inc
dec
cld
loop
mov
pop
cmpsl
xor
out
push
sub
push
cli
adc
push
cmp
mov
sbb
jo
dec
icebp
inc
push
lret
and
icebp
or
in
lea
jp
jmp
pop
mov
push
pop
std
xlat
mov
dec
mov
mov
jmp
mov
loop
aad
imul
or
aam
loopne
lahf
cli
pop
sub
adc
add
int3
sbb
psrlq
pop
sub
xchg
and
xchg
fistps
xchg
addr16
out
xchg
xchg
mov
jge
push
outsb
adc
je
sub
pop
mov
mov
xor
dec
cmp
sbb
insb
add
test
push
jo
xlat
insb
push
xor
xchg
push
and
xor
inc
inc
or
and
push
out
mov
push
mov
xor
scas
inc
lret
cmc
cmpsl
push
jecxz
addb
xor
and
mov
aas
xor
jmp
cmp
outsb
jae
pop
add
in
fwait
test
test
jno
scas
lea
sub
jecxz
pop
add
cli
sub
inc
ja
mov
pop
adc
outsb
ret
dec
add
xchg
je
mov
dec
cmp
or
icebp
jecxz
xchg
cwtl
push
push
mov
fdivs
pop
xchg
loop
cmc
push
jmp
and
inc
lods
out
ror
adc
int3
jne
dec
cmpl
subl
sbb
jbe
sbb
xor
xor
sub
push
mov
mov
sti
and
pop
push
sahf
add
pop
rclb
cmpsl
sarb
mov
cmp
shr
subl
push
lds
and
rclb
cmp
cmp
inc
lret
testb
in
hlt
addl
mov
arpl
clc
mov
and
dec
int
lods
adc
scas
cmp
xor
movsl
and
lea
daa
stc
shlb
mov
das
jl
mov
sub
or
adc
pop
movsb
adc
xchg
psubusb
stos
jo
pop
lcall
imul
addr16
mov
addb
fistl
or
clc
mov
rcrb
sbb
ds
dec
outsb
pop
sub
cmp
or
in
mov
mov
and
xchg
out
lods
gs
push
or
in
js
xor
sub
nop
mov
insb
pop
pop
or
stc
cltd
out
lret
jp
mov
ss
inc
or
or
ss
push
cmp
dec
xor
in
mov
lea
xor
cmp
dec
bound
ret
push
sahf
and
pextrw
daa
es
insl
repnz
decl
jo
aam
adc
sbb
lods
add
jge
mov
ret
shrb
call
pop
popf
gs
and
mov
mov
test
mov
stos
enter
or
es
inc
xchg
test
jns
aam
cmp
popa
mov
cmp
xchg
push
cld
insb
jne
mov
xor
cmpsb
jle
pop
fildl
bnd
or
push
mov
add
nop
jmp
jecxz
std
mov
stc
add
xchg
mov
loopne
loop
adc
xchg
pusha
loope
cmc
or
or
syscall
iret
leave
inc
mov
mov
sub
and
lcall
lds
jo
add
push
inc
cmpl
stos
mov
adc
and
test
dec
and
fsub
xlat
jge
pop
push
xor
jae
in
sub
jge
lcall
outsb
pop
lods
mov
lock
testb
inc
clc
inc
sbb
scas
ja
jg
mov
push
lea
andb
dec
sub
bnd
enter
cmp
scas
dec
aaa
xchg
or
mov
scas
test
sbbl
fnstcw
popf
outsb
lcall
pop
mov
jo
dec
and
jne
call
xchg
push
inc
push
mov
pop
lret
jg
sub
or
pop
cltd
imul
inc
cmp
push
adc
in
sbb
add
rcr
jno
rol
sbb
push
js
mov
inc
shrl
mov
cld
jecxz
mov
fistps
adc
jnp
xchg
adc
or
movsl
and
sti
in
adc
shlb
aad
cmpl
aam
rolb
ret
fwait
rcrl
aam
fisubrl
cmp
mov
or
add
pop
or
jae
cmp
jp
fs
pop
pop
dec
and
out
sub
cmp
clc
gs
mov
and
out
mov
or
cmp
mov
data16
inc
divb
leave
mov
inc
xchg
xor
mov
xchg
shl
mov
sub
dec
in
nop
adc
loop
lods
sbb
pop
shlb
aaa
mov
fs
popa
dec
mov
inc
ret
push
mov
in
fsub
jnp
aas
mov
jg,pn
orb
hlt
ret
pop
lock
mov
sub
inc
push
inc
mov
jmp
add
xchg
or
lahf
mov
jecxz
mov
adc
cli
jnp
xchg
inc
insl
scas
ss
lock
dec
aaa
shlb
push
pop
lret
xchg
mov
cmp
popw
mov
inc
mov
xchg
xor
xchg
cmp
push
pop
scas
ror
inc
jge
dec
jb
movsl
inc
sbb
mov
aas
pop
cs
aam
add
leave
pop
int3
pop
mov
lret
negb
sbb
sub
aaa
sti
int
push
aas
outsl
and
cmp
test
loope
dec
jnp
or
ljmp
xchg
jnp
les
add
fbld
xchg
fwait
cld
in
stos
push
iret
pop
es
hlt
ljmp
jmp
ljmp
sbb
inc
in
pushf
dec
in
out
and
xchg
pop
std
sbb
call
insl
arpl
dec
ja
loopne
jbe
daa
in
movsl
sub
mov
push
push
outsl
out
popf
imul
ja
mov
pop
test
pushf
or
test
or
ss
scas
or
cmp
mov
push
cld
mov
std
popa
push
dec
rorl
mov
rolb
fisubs
clc
lods
insb
cmp
mov
fildl
sbb
gs
out
jecxz
stc
add
in
mov
movsl
outsl
sbb
mov
mov
jge
xchg
xchg
aam
or
cmp
stc
scas
mov
cmpl
imul
flds
lcall
xchg
leave
aaa
stc
mov
rol
and
pop
add
insb
lea
mov
jg
lcall
push
jne
cmc
test
scas
or
int3
cmp
jno
mov
jl
fcoml
push
repnz
cmp
testb
int3
dec
sub
addr16
pop
mov
les
mov
and
xor
pop
jnp
mov
stos
xchg
sti
loope
pop
add
or
ljmp
push
jp
mov
mov
xchg
inc
testb
fcomi
js
movsl
push
mov
rcll
or
mov
enter
pop
pop
fsubs
jno
sbb
insb
xchg
xchg
and
fldl2e
dec
mov
pop
pop
sti
test
mov
ret
push
sbb
mov
inc
int
adc
xor
pop
outsl
mov
pop
push
enter
sbb
call
movsb
fisubs
ret
adc
icebp
cmp
std
inc
add
fisubl
jge
adc
lods
sbb
mov
cwtl
insl
out
inc
jle
and
arpl
movb
pop
arpl
adc
mov
push
xor
inc
aad
das
fwait
cs
aas
in
mov
cmp
pop
xor
iret
cmp
push
pushf
scas
xor
cwtl
inc
int
push
repnz
pop
xlat
jbe
jae
mov
clc
jae
pop
dec
pop
fisttpl
inc
push
jle
pop
xor
fadds
in
idivl
xor
xor
jns
movsl
sub
mov
rcll
mov
ja
ret
pop
in
adc
dec
or
fs
enter
inc
cmp
add
and
cmp
ja
orb
push
divb
jne
add
jo
lret
sub
or
jns
cltd
mov
fiaddl
dec
imul
stos
pop
jb
jno
enter
pop
lcall
mov
mov
inc
dec
mov
adc
test
or
mov
mov
push
cs
jb
out
into
sub
int3
cmp
imul
pop
or
push
jmp
popf
lcall
stos
cmp
push
xchg
in
inc
outsl
bound
sti
mov
dec
rcrl
in
mov
stc
xchg
in
fsubl
daa
stos
ljmp
sub
adc
jae
fisttpl
cld
sbb
push
cmpsl
jo
adc
mov
add
sub
aaa
fnsave
iret
push
test
add
in
dec
sub
mov
sub
sub
loopne
fwait
js
sbb
dec
lods
pop
mov
repz
shll
test
sub
jmp
fs
mov
cwtl
outsb
mov
sbb
cld
shrl
pusha
sub
sub
incl
rcrb
adc
push
addr16
jle
xchg
gs
and
gs
jnp
add
lahf
scas
in
inc
dec
jae
mul
and
or
divl
cld
addr16
mov
jns
mov
clc
dec
imul
out
lods
mov
sarl
push
xchg
jp
jl
pop
push
call
call
fstl
sbb
mov
mov
sbb
in
scas
out
push
cld
dec
jl
insl
jbe
xchg
cli
xchg
pop
lahf
movsb
pusha
sarb
in
mov
pusha
imul
xchg
xchg
cs
clc
movsl
pop
out
sub
imul
xor
test
jo,pt
rcrb
sub
mov
iret
ja
push
inc
jmp
popf
lods
jae
pop
frstor
adc
or
cmp
pop
daa
test
push
sbb
daa
adcl
push
mov
dec
sbb
mov
outsb
mov
aas
int3
fidivl
repnz
out
xchg
scas
mov
dec
outsl
dec
gs
jle
faddl
mov
in
sub
mov
xor
pop
out
xlat
add
dec
scas
jb
cmp
js
idivb
inc
mov
pop
push
and
cmpsb
int
sti
mov
popa
and
mov
cmp
pop
pop
cmp
rolb
rcrb
out
aam
xchg
adc
push
cmc
rorl
pop
clc
sahf
pop
je
inc
pop
xchg
jecxz
sbb
inc
cmpsl
clc
sbb
mov
cli
adc
xchg
lods
aad
sub
xchg
adc
pop
mov
and
imul
pop
pop
mov
leave
mov
pop
cmp
in
movsl
add
pop
mov
push
mov
adc
and
mov
add
sbb
jae
outsb
sarl
pushf
das
mov
lock
xchg
mov
xchg
fbld
mov
push
orb
pop
incl
sbb
ljmp
and
pop
inc
or
iret
and
leave
xor
xlat
dec
fsubs
pop
insl
mov
xchg
or
lret
in
xchg
jns
xor
rolb
sub
dec
out
adc
sub
mov
adc
push
je
fcompl
into
movsl
mov
pop
ljmp
mov
sub
mov
dec
sub
fistpll
dec
fs
xchg
pop
inc
inc
xlat
imul
movsb
dec
cld
call
pushf
push
push
paddsw
lcall
scas
out
in
push
pop
push
jne
push
xor
ret
inc
dec
aas
jl
mov
fucomp
inc
xchg
push
les
mov
into
xchg
sub
popf
mov
or
es
in
popf
enter
mov
mov
mov
mov
outsl
shll
fwait
es
mov
inc
shlb
daa
jl
jge
imul
insb
fsubrs
sub
or
shll
and
cmp
and
jmp
aaa
shl
nop
shll
js
lods
xchg
jecxz
test
adc
aad
shlb
pop
add
jae
pop
test
pop
push
ret
push
adc
loopne
adc
data16
mov
mov
sbb
pushf
mov
add
xchg
movsb
or
lods
cmp
popf
leave
lods
mov
cmpb
inc
xchg
sub
popf
and
xor
ret
stc
sub
jmp
or
aas
stos
jl
inc
bnd
push
arpl
repz
xchg
mov
xchg
dec
icebp
jg
mov
loope
jns
mov
das
ja
sbb
push
inc
sti
and
lods
pop
jo
andl
xchg
dec
inc
jp
inc
dec
mov
jl
jb
aas
add
add
iret
jg
sub
mov
adc
mov
cmp
ret
leave
push
xlat
push
or
inc
lock
xchg
or
cld
fcomi
dec
xor
mov
push
ss
mov
xorl
das
dec
sbb
dec
or
sbb
mov
mov
sub
imul
inc
sub
fstpt
dec
pop
in
inc
jne
mov
mov
das
test
addb
adc
movsb
repnz
push
sarl
dec
xchg
fwait
jp
fwait
stc
stc
inc
mov
in
leave
pop
cmpsb
shrl
loope
insl
loopne
adc
adc
push
cs
xorb
pushf
mov
mov
or
dec
and
mov
mov
mov
lods
mov
fcmovnbe
iret
or
imulb
dec
mov
and
add
pop
inc
push
cs
mov
add
inc
adc
out
ss
fists
loope
test
mov
sub
rorb
data16
out
cmc
ret
fisubrl
sub
outsb
add
in
add
ret
popf
in
cmpsl
mov
rcrb
xor
xchg
mov
xor
inc
insl
lods
mov
and
mov
inc
test
stos
dec
cmp
ret
inc
jecxz
sti
mov
repnz
jne
or
loope
dec
clc
sahf
cmpl
mov
mov
out
addb
jo
mov
dec
fstl
jl
scas
push
dec
add
mov
mov
test
sub
test
cli
xchg
xorb
into
adc
xor
ljmp
in
add
push
int3
sarl
cwtl
loope
adc
arpl
stos
jb
cmp
scas
cmc
and
enter
jmp
pop
and
aas
notl
ret
frstor
push
int
xor
and
stc
or
loope
repnz
mov
lahf
dec
push
imul
fwait
sub
shlb
cwtl
mov
rclb
cmp
out
data16
insb
and
aaa
repnz
cmp
mov
jb
and
js
push
mov
mov
or
out
sarb
jae
aaa
enter
inc
mov
stos
pop
mov
mov
push
jg
pushf
movsl
adc
cltd
les
sbb
jp
push
ja
ficomps
xor
xchg
fdivrs
fdivs
push
adc
mov
popa
sahf
push
jmp
outsb
fistl
les
sub
bound
insb
cmp
xchg
stc
movsb
es
je
das
das
push
mov
pop
sub
in
out
das
and
push
sarl
and
xor
out
sub
cld
stos
pop
adc
stc
mov
or
xlat
adc
xchg
push
push
dec
fidivrs
adc
pusha
jp
xchg
xchg
mov
pop
lods
rorl
xchg
testl
sbb
xchg
sub
jo
jne
fbstp
pop
jge
mov
jns
jbe
subl
popa
das
add
shlb
push
sbb
dec
add
add
xchg
jecxz
mov
dec
cmpsl
pop
dec
mov
icebp
test
xchg
sti
mov
fcompl
jge
sbb
out
imul
add
jb
loope
or
orl
mov
sub
mov
sbb
and
sahf
enter
xchg
out
and
push
mov
xchg
sbb
test
dec
cmp
or
sahf
jge
jmpw
mov
loope
xchg
sub
adc
push
or
xchg
mov
scas
sti
mov
sub
ret
subb
test
cld
imul
out
xlat
adc
es
aam
notb
jmp
jns
mov
adcb
mov
je
mov
cwtl
movsb
mov
push
adc
cmp
add
mov
test
cld
int3
mov
call
mov
mov
push
mov
pop
loop
lods
call
push
mov
push
imul
dec
cmp
push
std
or
mov
sub
mov
les
mov
es
mov
cmp
add
shl
cli
dec
sahf
sub
scas
inc
loopne
sbb
pushaw
in
push
subb
lods
xchg
jl
mov
push
dec
rcl
jb
insl
dec
pusha
movsl
fdivs
cli
xlat
lods
stos
mov
and
dec
xchg
jle
in
je
xor
sarl
inc
test
lds
jne
popf
pop
adcb
ss
lods
mov
addb
inc
pushf
add
mov
sbb
orl
add
sbb
std
adc
into
sti
add
and
jg
movsl
ljmp
jno
sub
add
in
mov
push
mov
repnz
jmp
shr
stos
add
inc
xor
fisubs
popa
es
pop
dec
in
mov
push
gs
rclb
add
test
mov
jge
fldcw
fists
dec
clc
inc
ret
mov
int3
xor
cmpsb
or
cmp
insb
sbb
rcrl
mov
lods
test
or
adc
and
pop
mov
aad
aaa
jno
mov
pop
lret
fbstp
sbb
inc
cltd
cli
aaa
lret
push
adc
dec
insb
or
xor
jge
cmp
mov
inc
dec
mov
in
aaa
jne
and
or
xchg
setno
fistps
mov
stos
xchg
outsb
dec
je
inc
clc
dec
xlat
sub
test
insl
in
and
incb
insb
repnz
sarl
mov
dec
and
jge
push
jle
sar
dec
fwait
iret
dec
test
add
add
mov
mov
fcompl
mov
xor
out
cmp
js
es
push
cli
mov
adc
and
or
cli
bound
jb
ret
push
stos
icebp
insb
popf
sbb
add
test
mov
lret
cltd
scas
pop
mov
add
lods
or
xchg
dec
pop
daa
add
sti
fisubl
xor
xor
sbb
cwtl
lods
sahf
xlat
pop
lahf
aaa
fidivrl
and
push
sarl
cld
jmp
in
mov
xor
imul
sbb
inc
stos
add
lret
jg
mov
ja
fildll
insl
jg
adc
add
and
xchg
pop
in
test
out
out
adc
or
jmp
jbe
lods
out
push
and
xor
dec
inc
mov
sub
stos
xchg
mov
lret
cmp
popa
stos
xchg
fists
push
aas
ret
cld
mov
or
inc
lret
push
push
mov
mov
aas
shlb
loopne
mov
mov
call
xor
stos
jl
pop
cmp
pop
daa
repnz
cmpsb
push
cltd
ds
cmpsl
mov
mov
xor
loope
mov
or
dec
cmp
sahf
fcompl
fldl
insl
stos
sbb
push
sub
std
pop
into
lcall
and
bound
push
adc
mov
mov
popa
js
mov
loope
xor
adc
mov
dec
mov
mov
jl
sbb
aam
fisttps
aaa
cmc
pop
push
imul
mov
and
scas
aaa
sarl
add
dec
push
mov
or
sub
push
pop
in
movsb
mov
mov
fildll
push
mov
pop
or
cmp
mov
pop
cli
fisubrs
adc
jne
or
addr16
push
sbb
lds
jo
pusha
mov
inc
into
mov
pop
xor
pop
call
int
popa
jp
stc
stc
pop
and
cmpsl
xor
dec
popf
std
sbbl
movsb
xlat
inc
cltd
push
scas
lods
sbb
mov
sbb
outsl
ret
movsb
addr16
in
and
mov
fimuls
jnp
mov
jne
pop
jl
call
movsl
add
popl
jmp
and
out
xchg
adc
inc
sbb
jl
jge
adc
xor
mov
sarb
mov
xor
mov
push
push
dec
pop
imul
sbb
jge
mov
sub
outsl
dec
cmpsb
sub
and
mov
lcall
fisubl
jo
push
or
stos
ss
mov
cmp
sub
mov
js
jno
pop
rorb
std
xchg
pushf
insb
dec
fcmovne
in
nop
inc
xchg
jns
xor
sub
cli
push
nop
aad
dec
loop
mov
cmp
jns
xor
mov
or
sbb
pop
aam
or
xor
test
sbb
pop
sbb
cli
popl
add
popf
cmp
inc
mov
inc
sbb
out
mov
dec
sti
int
xchg
addr16
aas
xor
dec
in
lea
sub
cmp
test
mov
das
fwait
mov
lea
sbb
jno
loope
or
mov
sub
or
xor
imul
ret
push
jle
cwtl
pop
int
js
and
call
ret
cwtl
mov
nop
or
cmp
and
mov
cmp
test
das
stc
push
ljmp
fwait
in
pop
out
cmp
mov
insl
xchg
idiv
and
es
int3
lret
jb
inc
ds
mov
imul
inc
dec
cs
pushf
push
jle
mov
lock
mov
cmpsb
mov
pusha
xchg
xor
or
fcompl
repz
or
daa
sbb
shll
and
test
or
or
out
sbb
ret
xor
je
loopne
sahf
pop
inc
psubsw
outsl
adc
inc
sbb
rol
fcmovb
loop
and
imul
inc
int3
cltd
stos
call
stc
xor
test
aas
sub
lret
shll
int
mov
daa
jge
pop
icebp
jl
inc
mov
jbe
pop
ds
mov
mov
adc
loope
or
and
sahf
pusha
inc
or
leave
pop
jg
out
xchg
hlt
adc
dec
push
mov
xchg
daa
adc
cmpsl
call
dec
xchg
sub
push
cmp
into
inc
outsl
pop
loop
xor
mov
xchg
aad
jns
ret
and
inc
aad
andb
dec
mov
daa
int
jp
cmp
jbe
movsb
cmp
stc
iret
sub
push
adc
mov
outsb
outsl
mov
fwait
add
cmpsb
dec
lock
mov
shll
inc
cmp
mov
popf
int3
mov
roll
rol
dec
cmp
fistl
outsl
xchg
inc
and
std
inc
ja
fabs
pop
enter
mov
pop
mov
test
inc
and
incl
pop
std
vpaddw
ret
sbb
add
push
mov
cmpsb
stos
mov
xchg
jl
mov
orl
dec
test
pop
ret
jne
pop
mov
or
xor
sahf
lret
xor
pop
hlt
lds
sbb
jecxz
sub
xchg
cmpsl
fcmovbe
loop
mov
lret
pop
dec
pop
or
cmpsl
push
lret
adc
mov
sarb
adc
or
lock
lods
jge
movsb
subl
out
jnp
sub
sbb
mov
pop
adc
inc
sbb
or
subl
flds
movsl
sub
mov
outsb
or
in
pop
loop
nop
and
dec
test
push
std
adc
jnp
aam
xor
jg
lea
jno
outsb
mov
fcmovnbe
sti
jb
xchg
pop
or
push
mov
push
mov
jg
jecxz
xchg
shl
andb
mov
mov
and
or
dec
mov
sub
mov
cmp
jmp
jnp
push
fiaddl
int3
xchg
aam
ljmp
cmp
xor
jno
jmp
addr16
imul
and
mov
aad
in
ret
movsl
cmpsl
push
imul
cmp
movl
sub
lds
outsb
test
rcll
je
pop
icebp
xor
lahf
aad
adc
mov
lods
dec
pop
push
mov
call
push
adc
lahf
xchg
mov
loope
xchg
shrb
pushf
xor
push
sub
loop
fs
out
popa
test
cmp
aad
sahf
mov
xor
inc
imul
call
sub
imul
dec
fs
fcmovbe
sbb
dec
xchg
adc
inc
inc
cltd
leave
cld
lods
push
leave
push
and
js
mov
imul
outsb
xor
mov
lock
fldenv
shlb
add
out
sbb
mov
sub
cltd
lods
test
cld
jo
xchg
and
fst
out
push
mov
iret
xchg
push
push
les
mov
push
xchg
ljmp
fcomp
fnstsw
mov
fs
jae
cltd
sti
mov
dec
fcompl
sbb
jg
ret
push
adc
jl
push
dec
mov
mov
or
sub
mov
movsb
jbe
adc
jge
push
mov
mov
and
sbb
pop
mov
xchg
dec
rclb
in
ret
or
xor
mov
inc
xor
subl
rorb
dec
xchg
jb
cs
lret
and
gs
nop
rorb
pop
in
sbbl
dec
arpl
sbb
mov
inc
dec
xchg
test
mov
cmp
push
cmpsl
push
mov
mov
bnd
jmp
adc
jge
movsb
test
pop
pop
mov
xchg
rcrb
mov
sbb
addb
mov
inc
lret
xor
outsl
sub
shl
jb
incb
or
or
cs
mov
jmp
or
and
push
gs
add
and
iret
pop
push
add
mov
sbb
mov
xor
cmpsl
pop
imul
sar
in
cld
push
xlat
das
add
lds
movsl
aas
call
lcall
mov
lahf
int3
dec
push
inc
push
ss
enter
add
push
jb
pop
lods
cmp
sub
stc
jno
inc
jbe
clc
inc
dec
mov
lds
ds
icebp
in
pushl
dec
lock
out
xchg
clc
aad
inc
xchg
lock
outsb
and
and
push
les
jmp
jbe
adc
push
pusha
mov
je
orb
pop
inc
cmp
aad
mov
sbb
loop
inc
out
mulb
adc
out
imul
repz
push
jecxz
je
lods
push
mov
xor
frstor
int
aaa
cwtl
sub
es
movsb
inc
fcmovu
jae
gs
xor
rolb
jae
jnp
cli
mov
aam
xor
dec
cs
fistpl
dec
sbb
or
push
lea
mov
iret
adc
gs
sub
jb
and
outsb
mov
das
loop
movsb
int3
mov
fcom
mov
and
adc
dec
lods
adc
test
out
xchg
subl
sbb
cmp
mov
xchg
push
cmp
push
adc
add
or
and
adc
adcl
pop
mov
jmp
fmull
xor
xchg
dec
mov
sub
mov
xchg
adc
or
adc
xchg
push
js
cmp
add
pushf
lret
or
pop
xchg
pop
lret
fimull
mov
test
xchg
loop
pop
push
loopne
inc
add
test
or
dec
outsb
dec
movsb
cmc
push
aas
adc
mov
sub
insl
inc
divl
fisubrl
fnsave
test
pop
mov
bswap
in
xchg
jns
xlat
pop
test
outsb
add
lret
loop
scas
test
inc
clc
mov
push
inc
mov
add
les
jp
cmpsl
mov
insb
shll
rclb
add
cmp
in
lock
ret
clc
icebp
jnp
push
je
cmc
add
jecxz
cmp
pop
dec
pop
sub
jb
push
iret
stc
pop
or
jo
lret
insb
or
xor
fwait
stos
sbb
adc
add
mov
dec
scas
add
add
xlat
mov
mov
pop
scas
add
sbb
loope
enter
nop
adc
daa
psubsw
sub
lds
mov
test
dec
daa
getsec
dec
push
inc
xor
mov
arpl
jns
jno
lock
rolb
je
cmp
push
js
mov
or
in
das
aad
test
ret
pop
int
inc
push
push
int3
fisttpll
push
nop
dec
icebp
xor
push
add
dec
mov
push
aam
push
icebp
fwait
cmp
and
jmp
popf
cld
inc
jae
dec
mov
xor
in
fnstsw
mov
fistl
call
in
imul
lea
lahf
mov
iret
psubsw
leave
test
orb
mull
repnz
and
and
cmpb
xor
jbe
adc
push
cmp
inc
jne
in
jmp
mov
pop
repz
mov
push
fidivrs
sbb
mov
repnz
xchg
mov
fwait
lea
mov
pop
xchg
aam
add
xchg
jle
sub
lret
push
ret
or
in
out
pop
sub
inc
pop
inc
gs
hlt
or
adc
and
scas
jmp
adc
lret
stos
add
push
scas
add
jno
enter
enter
in
mov
dec
fucomi
aam
jne
dec
dec
jmp
repz
and
clc
adc
and
add
std
inc
in
pop
lock
iret
jge
sbb
pop
daa
push
imul
mov
xor
test
xor
std
addr16
dec
hlt
loope
pop
pushf
and
jl
or
adc
cmpsl
xor
mov
or
or
sti
idivb
aaa
lret
inc
and
es
and
cltd
iret
pop
mov
dec
fwait
mov
fiaddl
sbbb
sti
iret
mov
push
jae
stc
pushf
in
inc
xor
cmc
push
stos
push
mov
cwtl
sahf
in
ja
test
add
jmp
imul
sbb
stos
inc
mov
lea
push
mov
jge
shlb
add
jae
push
lcall
cmp
mov
jns
adc
push
push
xchg
add
sub
mov
mov
arpl
cwtl
inc
ds
in
sub
test
insl
imul
in
sbb
or
fisubs
dec
or
insl
out
subb
mov
mov
sti
test
push
xchg
inc
jmp
pop
mov
inc
das
lcall
shrb
cltd
and
lret
daa
cmp
fildll
sub
cwtl
mov
test
dec
shlb
into
jge
std
or
inc
insl
mov
in
mov
xchg
dec
add
lea
sbb
int3
inc
mov
dec
sbb
loopne
es
das
into
sub
push
and
cli
push
aaa
cwtl
inc
sarl
ss
out
jne
fidivl
pop
shll
jle
adc
fstl
icebp
add
push
add
int
sbb
sarb
ret
mov
inc
imul
nop
lcall
jge
xor
adc
or
pushl
out
mul
rcr
jle,pt
int3
lods
dec
ja
dec
ljmp
std
cld
or
pop
jno
jb
cmovb
or
pop
ds
ss
add
sbb
push
std
jb
xor
dec
aaa
jge
sbb
mov
test
mov
mov
dec
jns
in
pop
std
push
hlt
popa
pushf
sti
stos
sbb
out
cmp
xlat
mov
push
pop
or
cmc
cmpl
data16
sahf
jno
mov
dec
cmp
pushf
mov
mov
stos
shlb
ds
daa
cmp
or
iret
or
adc
push
mov
ret
jmp
xchg
sbb
jne
icebp
dec
mov
loope
in
lods
mov
lret
push
subl
sbb
lea
mov
or
adc
dec
pop
pop
xor
lret
lods
xchg
mov
hlt
dec
scas
daa
inc
mov
sub
cwtl
addr16
push
mov
xchg
test
push
repnz
cmc
dec
cltd
jns
fstp
aam
mov
out
subb
xchg
pop
call
test
pop
rep
dec
pop
stc
repz
in
in
testl
fs
into
pusha
sub
jl
mov
insb
push
into
jle
add
or
fcom
jns
lock
clc
test
sbb
xchg
pop
aam
xor
mov
xlat
mov
mov
scas
std
add
mov
out
mov
pushf
out
mov
or
jns
jmp
loopne
out
jg
vcvtsd2ss
testb
lods
xorb
rcr
in
xor
insl
jno
and
xchg
pop
cli
call
add
cmp
xlat
mov
xchg
lock
in
mov
pusha
bound
push
retw
xchg
jecxz
scas
pop
lods
xor
test
sub
out
loopne
xor
or
lret
mov
inc
mov
fnstcw
sub
xchg
in
addr16
push
add
iret
nop
aas
cmp
sbb
xchg
ss
stos
pop
into
inc
cs
mov
or
mov
rcrl
xchg
or
adc
xor
mov
sti
mov
push
sbb
bound
push
xor
pop
sub
jo
xor
push
into
icebp
sbb
or
mov
loope
jle
sub
std
adc
and
js
mov
test
fdivs
add
lds
dec
rcrl
cmp
jecxz
cwtl
mov
mov
mov
insl
or
insl
das
adc
inc
cmc
xor
xlat
fwait
adc
dec
add
aaa
rcrb
lahf
push
sub
stc
notl
ret
call
jge
lahf
inc
mov
add
es
jmp
xor
or
test
nop
sbb
add
insb
adc
mov
and
inc
mov
std
mov
cmp
repnz
testb
xchg
jns
or
jb
sahf
dec
daa
mov
push
pop
lret
and
fsubl
and
std
mov
sub
mov
lea
xor
jecxz
pop
rclb
cmc
into
jb
xchg
ret
sbb
ss
insb
xor
push
jle
int
sbb
in
push
pop
adc
jbe
mov
push
lods
add
movsl
pop
in
cmpsb
or
cmp
cmp
jecxz
fstpt
inc
fdivl
enter
jbe
jne
movsb
fs
mov
imul
mov
mov
or
adc
lods
push
repz
push
dec
mov
movsb
adc
sub
mov
adc
push
fld
popa
add
cld
xchg
add
push
adc
push
cmpb
pop
xor
fwait
push
cmc
cli
fucomip
js
stos
or
iret
out
andb
shll
xlat
jbe
andl
jne
stos
adc
cmp
dec
mov
subb
fidivs
jmp
sub
in
pop
mul
xchg
into
mov
in
mov
or
adc
xor
jge
and
in
adc
xor
addr16
or
fldt
inc
inc
dec
adc
adc
dec
mov
enter
and
inc
data16
mov
pop
sbb
push
rcrb
jae
ds
dec
dec
popa
movsl
xor
setle
jns
push
adcl
clc
push
ja
inc
or
mov
or
pop
ss
pop
ret
aaa
pop
call
adc
lret
jge
in
pop
or
xor
cli
push
fldt
pushf
jle
sub
fcom
out
jb
into
pop
add
test
inc
stc
jb
mov
pop
loop
pushf
and
mov
mov
dec
push
shlb
lock
inc
aam
sub
cltd
add
mov
js
mov
mov
xor
push
xor
fs
pushf
addr16
cmp
add
and
inc
jmp
roll
ds
test
sub
or
sbb
loope
outsl
aad
cli
sub
sbb
inc
adc
xchg
jnp
enter
adc
mov
mov
cmpsl
movsl
mov
dec
sub
mov
mov
or
mov
jge
push
cld
loopne
mov
shll
inc
ret
push
fwait
imul
cmp
test
bound
orb
xchg
daa
mov
stos
into
adc
inc
push
push
xchg
ffree
jecxz
or
stos
mov
iret
mov
xchg
lahf
jmp
cltd
add
lcall
or
pop
sbbb
push
and
int3
mov
cmpsb
popa
out
lcall
inc
inc
and
loope
punpcklwd
and
pop
aas
call
push
in
int
pop
pop
rorb
dec
xchg
inc
cld
outsl
fdiv
adc
mov
fld
test
lods
sub
and
and
or
inc
mov
das
sub
push
inc
outsb
sbb
cmp
sbb
add
add
dec
scas
imul
rclb
aas
and
lea
cmp
sbb
daa
push
pop
loope
test
jge
mov
jmp
and
mov
push
xchg
sarb
mov
pop
movsb
notl
or
adc
push
xchg
test
gs
jo
push
cwtl
sbb
mov
dec
sub
ds
adc
lret
mov
loopne
stc
ja
es
out
push
or
test
adc
xchg
or
rcll
or
out
iret
adc
xlat
icebp
inc
icebp
cmp
retw
inc
xchg
leave
int
pop
pop
jecxz
and
xor
and
fwait
in
fisttpl
imul
inc
stc
into
insl
inc
and
sub
and
sti
mov
idivl
lret
fnstcw
testl
ret
xor
dec
jl
lahf
fadds
lahf
xor
push
mov
iret
pop
clc
mov
add
pop
femms
insl
lcall
dec
subl
sbb
mov
dec
popf
sbb
fdivp
inc
push
adc
stos
nop
jnp
push
push
lcall
pop
xor
ret
cmp
cmp
mov
jl
xchg
push
cmp
ret
cmp
sub
jge
ret
push
cmc
pusha
into
adc
xor
inc
adc
xchg
rcr
push
mov
add
pop
dec
cmp
pushf
add
and
push
enter
and
pop
xchg
jle
outsl
sbb
in
push
push
push
inc
mov
inc
or
cmp
icebp
xchg
push
pushf
xor
addr16
bndldx
out
sahf
mov
jnp
push
xchg
ljmp
test
adc
pop
mov
or
mov
and
adcl
fbstp
ljmp
xor
inc
js
fnstcw
sub
rorb
je
push
inc
lock
test
adc
cmpsl
inc
add
push
dec
xchg
jp
sub
insb
sbb
adc
enter
ret
adc
dec
jns
pushf
push
pop
dec
mov
sub
imul
jo
rcl
xor
or
int
pushf
push
popf
push
xlat
dec
hlt
mov
scas
jge
cmp
repnz
and
cmp
in
xor
rol
shl
ljmp
ja
fs
pop
pop
pushf
stos
push
fsub
mov
jmp
fiadds
cwtl
mov
xchg
jg
in
or
rclb
and
ljmp
out
pop
enter
inc
push
fs
lods
dec
push
pop
out
inc
adc
pop
sarb
call
dec
xor
push
mov
jae
imul
cmpsb
add
add
loope
inc
mov
stos
inc
push
sub
lods
add
xor
shlb
popa
fildl
pop
xchg
mul
or
lret
pop
inc
and
xor
mov
xchg
int3
dec
enter
lods
lcall
int3
mov
inc
cmp
scas
mov
movsl
out
inc
lods
fbld
test
jge
lret
ficompl
arpl
outsb
mov
xorb
cmpsb
iret
or
cmpsl
inc
mov
inc
push
or
ds
stos
ret
inc
int
loope
jecxz
es
int
fsubs
pop
nop
sub
inc
fsts
cmp
mov
loop
vaddss
lds
mov
pop
xchg
sub
pop
add
ja
jge
outsl
mov
cmp
test
xchg
xlat
pop
jae
into
pop
repz
jne
jmp
jb
rclb
hlt
mov
outsl
mov
mov
notl
jne
aam
rolb
add
inc
stc
mov
jno
ljmp
or
xchg
loope
and
jecxz
cmpl
pop
pop
xchg
jns
in
ret
inc
enter
fistps
jg
add
shl
enter
cltd
dec
loope
cltd
adc
cli
bound
lds
addr16
fdivrl
jmp
in
dec
bound
jg
mov
popf
cmp
repz
je
jp
fdivs
cmp
mov
push
ja
add
stos
js
lea
jmp
int
lcall
stos
bound
pop
repnz
ja
jecxz
push
sbb
lea
mul
notb
mov
mov
jbe
negl
ret
inc
push
mov
repnz
data16
roll
xor
mov
lret
std
xorl
xchg
xchg
xor
xor
mov
cli
clc
pusha
pop
clc
push
adc
push
push
iret
shrb
fs
push
lret
aaa
adc
insl
icebp
in
inc
xchg
and
es
pop
xorl
add
mov
jge
rclb
dec
inc
push
push
mov
mov
mov
scas
xchg
adc
ds
lcall
ljmp
in
or
test
xchg
movb
cli
mov
fmul
add
bound
repz
mov
dec
adc
scas
mov
repnz
std
push
and
xchg
leave
xor
xor
in
push
scas
xor
xchg
cmp
fistpll
cmpsl
pop
rorl
lds
fisttpl
jne
test
cmc
and
jge
inc
js
in
aad
and
xchg
ret
mov
fwait
mov
push
iret
in
inc
dec
xchg
icebp
and
leave
xor
jge
scas
into
sub
fisubl
add
in
stos
xor
fyl2x
outsb
xchg
sub
mov
or
adc
mov
xor
xchg
jg
mov
cli
lods
fists
sbb
das
out
mov
or
pop
jb
push
test
push
mov
ja
cmovne
and
js
outsb
and
inc
addr16
imul
sahf
jge
cwtl
aaa
inc
int
aaa
fsubr
ja
jmp
cs
cltd
mov
push
in
push
xor
sbb
lcall
mov
scas
mov
adc
iret
jae
pop
ss
xor
insl
test
clc
xor
push
dec
xchg
sbb
mov
test
cwtl
insb
mov
test
pop
ljmp
mov
xlat
adc
mov
aad
mov
jne,pt
mov
in
mov
push
ljmp
xchg
lock
jge
in
and
pop
xor
call
push
insl
sbb
cli
std
inc
les
daa
divl
pop
in
add
mov
lcall
pop
push
cs
mov
mov
sbb
mov
test
out
scas
mov
jne
sub
cli
xor
divl
jmp
xor
ljmp
mov
aad
mov
ds
pop
and
cld
ja
sbb
sub
push
fidivs
in
cmpb
ficomps
add
push
cmp
mov
pop
js
cltd
hlt
shlb
icebp
push
mov
test
jl
repz
xor
int
mov
fsubrs
pop
lret
mov
shl
push
cmp
aas
int
in
add
popf
inc
shll
cmp
stos
mov
ret
ds
or
stc
dec
sarl
pushf
and
int
xchg
pop
xor
test
mov
dec
lea
lret
xchg
mov
xchg
nop
xor
push
lcall
lret
imul
loope
jmp
sbb
mov
outsl
stc
in
les
sbb
pop
imul
test
adc
lods
into
sbb
mov
cmpsl
sbb
aam
cltd
pop
repnz
pop
lcall
loope
nop
push
cmp
mov
jmp
inc
push
shll
lock
jecxz
xor
pop
dec
ror
popa
test
sbbb
icebp
in
cwtl
fwait
loop
das
mov
mov
mov
or
mov
imul
dec
jp
mov
in
jge
or
out
cmpb
jp
cmp
add
sub
cmpsl
or
xchg
ss
loopne
push
fadds
jg
dec
cmc
test
mov
pop
inc
fidivrs
mov
lret
dec
leave
int
adc
fsub
test
ret
mov
outsb
pusha
outsl
mov
enter
add
mov
data16
je
scas
ret
pop
addl
sub
xor
stos
add
sti
xor
jmp
aaa
mov
or
mov
and
push
jmp
jbe
rcll
sbb
fstps
or
lea
orl
fadds
adc
and
shlb
out
enter
push
sahf
ret
test
push
fstl
xlat
jecxz
cmp
push
dec
aam
icebp
pop
sbb
roll
jp
sbb
stos
daa
push
lock
rclb
popa
shll
je
mov
xchg
iret
inc
stos
mov
xchg
mov
inc
inc
sarl
ret
imul
push
push
bound
stos
fwait
repnz
nop
push
mov
jo
mov
mov
xchg
xor
add
push
jecxz
add
sbb
pop
cli
ds
bound
push
inc
pop
shr
imul
sbb
push
in
sbb
add
jnp
lcall
jo
add
arpl
repnz
mov
test
rcl
std
movsl
movsb
bound
test
nop
in
jns
sbb
adc
popa
push
stc
jns
mov
add
pop
mov
jecxz
bound
sub
cmpl
addl
jle
dec
xchg
lret
jecxz
add
scas
loope
enter
rcr
mov
dec
stc
and
je
in
nop
insb
popf
jg
push
aaa
cltd
push
xchg
add
and
jne
fwait
lods
into
lcall
pop
fimull
push
insl
dec
fadd
lds
ljmp
std
jnp
dec
sub
mov
pop
xchg
test
lahf
arpl
movsl
repnz
pop
scas
mov
and
clc
jl
cmp
rcr
mov
dec
lds
add
and
fcoml
fidivrl
loop
pop
mov
push
lret
cmp
dec
cs
clc
loopne
pop
shl
jbe
push
mov
cld
push
push
mov
movsl
or
scas
mov
mov
mov
mov
pop
push
pop
mov
imull
fs
cmc
jge
fs
add
and
xlat
push
mov
cmp
imul
scas
mov
sbb
xchg
dec
addl
clc
mov
dec
out
lods
mov
ret
mov
xor
dec
adc
mov
sbb
xchg
nop
mov
jle
push
and
sub
popf
adc
push
movsl
call
fisttpl
fldl
mov
mov
lds
jbe
push
test
ret
fistl
addr16
and
mov
push
shrl
and
fucomp
aas
push
cwtl
addr16
mov
push
jno
xor
xchg
fidivrs
addb
jbe
pop
jl
push
imul
mov
cvtps2pd
imul
data16
push
stos
or
push
arpl
adc
gs
imul
sub
xchg
dec
inc
lcall
adcb
mov
fidivrl
popf
cli
sub
out
cmp
fsub
subl
ret
and
inc
ja
test
xor
rcrl
cmp
sbb
sbb
push
mov
xor
into
push
les
dec
push
mov
fsubs
mov
ret
adc
mov
mov
and
dec
imul
jp
dec
xchg
mov
rolb
add
fs
fwait
cmc
mov
sub
ret
lea
in
insl
loop
in
dec
ljmp
adc
and
sbb
jmp
scas
or
jb
xchg
ret
lds
sub
adc
mov
and
pop
push
daa
movsl
out
dec
ja
mov
adc
shld
xchg
pusha
into
ficoml
sbb
rcl
or
mov
test
ret
test
adcl
dec
and
adc
inc
shrl
insb
sub
xor
loop
dec
nop
rclb
mov
sub
in
jmp
xchg
push
imulb
mov
scas
or
ret
dec
sbb
pusha
add
push
stos
call
sub
dec
adcb
test
jge
cmp
jae
or
ds
xor
jae
cmp
jle
orb
and
xlat
loopne
pop
incl
sbb
adcb
aad
pusha
or
inc
xor
and
addl
xor
sub
cmp
pop
das
or
movups
and
mov
insb
out
testb
jle
dec
cmpsb
filds
testl
arpl
pusha
mov
fistpl
mov
js
push
ret
mov
fimull
mov
ret
dec
cltd
xor
pop
movsl
shl
or
inc
mov
xchg
sbb
test
fstpt
scas
push
jnp
ja
js
test
out
mov
mov
mov
mov
jge
cmc
cld
add
and
test
mov
in
mov
stos
mov
repz
push
mov
xor
or
pop
andb
mov
cmp
rorl
pop
dec
mov
outsl
sub
sbb
out
pop
stos
xor
mov
mov
ror
fistl
mov
mov
add
add
cwtl
mov
sbb
std
and
xchg
jae
sub
xor
or
xchg
jmp
scas
cmc
xchg
into
enter
jg
addl
jo
aaa
insl
xlat
insb
xor
mov
mov
shl
out
mov
pop
adc
push
dec
lcall
adc
sbb
mov
jbe
out
pushf
sub
rcrl
repz
mov
outsl
pop
mov
stc
sbb
pop
imul
and
cmp
push
xchg
jp
pop
sbb
xlat
mov
jecxz
stos
je
push
bound
enter
jmp
fs
xchg
notl
rcll
mov
cmpsb
cmc
and
insb
pop
sub
imul
data16
aas
lret
enter
dec
mov
cmp
adc
xchg
icebp
rcrb
or
call
pop
mov
pop
das
sahf
mov
test
xchg
imul
mov
dec
jo
orl
dec
pop
jp
sahf
adc
jbe
cmpsl
sbb
inc
fwait
clc
push
sbb
adc
movsb
cli
xchg
jns
fcoms
cmp
jmp
insb
sbb
add
sbb
dec
or
jg
adcb
adcb
js
mov
pusha
sbb
iret
xchg
jb
pop
pop
sahf
int
push
dec
and
mov
ret
xchg
shrb
xchg
xor
neg
mov
sbb
scas
adc
clc
stos
loope
popf
das
xor
addr16
or
stos
fwait
leave
xor
inc
cmp
jl
inc
sahf
orb
out
sbb
repz
dec
and
xchg
xchg
xchg
adc
aam
cld
pop
cmpsb
fmul
push
aaa
das
addr16
ljmp
es
dec
pop
push
mov
shll
push
insb
sti
loope
jle
rolb
fnstcw
inc
das
lret
pop
rcrl
dec
cli
lahf
mull
push
in
xor
xor
lods
jmp
and
push
cmp
repnz
addl
add
mov
push
sub
movsb
mov
shlb
out
lret
gs
stos
ret
lock
mov
mov
or
mov
adc
je
xor
lock
or
rcrl
cmp
insb
mov
push
sbb
iret
dec
outsb
adc
rorl
js
sahf
fcmovnu
ret
stc
addb
fwait
adc
leave
iret
mov
xlat
das
scas
xchg
jnp
aas
in
lret
cmp
jb
fsubrs
or
xchg
mov
jo
aad
fsubl
jbe
inc
lret
fwait
sub
sbb
inc
cmp
mov
stos
dec
imul
jp
ljmp
mov
mov
leave
cltd
cwtl
mov
test
xor
call
insb
pop
aam
mov
jmpw
mov
jae
adc
sbb
add
loope
cmp
inc
mov
mov
pop
inc
in
inc
pop
aad
ss
sbb
sub
sbb
leave
mov
xchg
out
test
fistpl
jmp
out
pusha
inc
insb
stos
je
dec
dec
mov
outsb
jb
adc
andb
push
fidivl
jp,pt
enter
xlat
insl
icebp
xchg
jnp
shrl
sub
jae
sub
mov
addl
imul
mov
jl
test
addr16
push
aam
and
xchg
adc
dec
aam
into
loopne
cli
icebp
sbb
das
inc
cwtl
addr16
sub
roll
cld
outsl
das
es
test
bound
into
arpl
arpl
scas
and
adc
sti
sub
sub
mov
dec
inc
xchg
stos
in
dec
cwtl
mov
mov
jmp
enter
into
mov
sbb
add
adc
push
loope
mov
mov
mov
jno
aaa
pop
jl
stos
adc
sub
incl
popa
jbe
inc
jb
test
xchg
mov
mov
int3
inc
fsubs
popl
gs
mov
cmp
mov
bound
mov
scas
push
push
mov
add
add
add
addr16
add
pop
nop
mov
fbstp
push
popf
movsb
je
loopne
ret
xor
fldenv
add
push
sub
in
arpl
xchg
jle
loop
jne
and
adc
incl
jl
and
pop
sbb
push
or
iret
out
mov
out
fdivr
jmp
cmp
mov
add
stos
dec
xchg
or
int
mov
jne
insl
inc
outsl
jo
jae
divb
inc
sub
cmp
sbb
int
ficompl
out
out
dec
mov
push
sbb
stos
imul
imul
fwait
das
xchg
push
cmp
mov
fs
call
push
aaa
aam
adc
dec
mov
jle
mov
or
sub
push
pusha
and
xor
and
cmp
cli
push
sbb
outsl
fwait
xchg
dec
inc
xor
repnz
lret
xchg
and
or
cmp
test
push
adc
das
or
decl
ficompl
cmp
jg
or
pop
mov
jle
xchg
adc
sub
pop
movsb
lahf
in
les
push
loope
push
pop
in
cmp
inc
or
xchg
andb
push
int3
lea
test
sbb
int3
mov
xchg
aaa
pushf
dec
clc
movsb
xchg
inc
mul
dec
cmp
cmp
pop
push
mov
fdivs
inc
cld
std
stc
fisttps
sbb
inc
cmp
movsl
adc
dec
outsl
test
adc
test
adc
pop
ds
rorl
jbe
popf
and
xchg
rorl
mov
jle
jns
push
mov
movsl
scas
dec
xchg
movsl
adc
add
dec
jge
or
sub
jg
push
mov
adc
xor
stc
sub
scas
gs
je
push
loopne
aaa
lahf
jmp
imul
je
or
ss
mov
pop
outsb
sahf
adc
test
ret
out
dec
push
mov
and
push
xchg
inc
aaa
mov
sbb
mov
mov
dec
mov
in
mov
jecxz
dec
ds
sahf
push
out
test
or
push
hlt
pop
mov
loope
jge
popl
inc
pop
xchg
shlb
repnz
int
xor
adc
dec
xchg
call
enter
cmpsb
gs
jae
and
add
cmp
cmp
mov
mov
sub
into
mov
pop
outsl
inc
idivb
xlat
sarl
popa
shll
jmp
and
mov
sbb
int3
in
notb
sub
movsl
and
and
and
adc
cmp
xchg
mov
and
pop
lods
lret
cmp
jmp
dec
push
adc
adc
inc
arpl
inc
pop
xor
out
cmp
imul
insl
jno
or
mov
xchg
jb
xor
sub
loop
sub
hlt
dec
mov
mov
mov
cmc
orb
mov
fbld
rolb
cmp
mov
fmull
xchg
loop
push
jle
call
ljmp
xor
sbb
fisubrl
mov
mov
inc
mov
push
fxch
mov
sbb
pop
inc
sbb
ja
dec
xchg
push
cld
out
pop
mov
in
push
pop
orb
xchg
dec
out
hlt
mov
clts
or
ret
popf
dec
insl
mov
and
or
pop
out
mov
cs
xchg
xchg
imul
jmp
dec
dec
jnp
inc
int3
in
mov
mov
ss
je
push
pop
imul
jmp
shrb
push
dec
jns
push
bound
or
fistps
cli
pushl
idivl
cmp
test
jp
cmp
push
adc
sub
idiv
inc
and
lret
cmpb
bound
repnz
insb
xchg
jb
xchg
xor
repz
int3
insb
lds
lret
iret
push
repz
into
mov
sub
xlat
fmull
xchg
or
cltd
or
std
jmp
jne
inc
mov
roll
and
inc
push
or
insl
aad
mov
pop
mov
movsl
in
mov
cmp
or
mov
je
loopne
xlat
inc
inc
mulb
cld
ret
cmp
sbb
xchg
aam
sub
fs
in
test
mov
ja
in
mov
ret
cmp
adc
sub
inc
fimuls
sbb
mov
pop
lret
xor
mov
push
adcl
out
xlat
cwtl
shrl
stos
dec
loope
xchg
in
or
dec
lahf
outsb
mov
xor
sbb
push
cmpl
dec
loop
inc
lea
std
sub
sarl
pop
mov
xchg
cmp
push
mov
mov
push
in
fildl
add
js
lea
pop
or
shrb
add
adc
mov
dec
sub
mov
pop
cmc
jb
jno
fstps
sti
xchg
rclb
inc
ficoms
push
outsl
loopne
pop
fistps
mov
cld
sbb
or
in
sbbb
lods
or
pop
les
aas
mov
mov
mov
xchg
pop
mov
add
pop
and
sbb
dec
lret
dec
sbb
jmp
mov
cmp
adc
push
movb
pop
popa
mov
loop
dec
sbb
pop
jmp
add
jecxz
fcmovne
mov
call
fstpl
jmp
lcall
adc
add
adcb
lret
xchg
movsl
ret
mov
mov
push
repnz
dec
mov
mov
sub
sahf
insb
jo
ror
imul
das
les
mov
out
jb
xor
and
stos
jecxz
mov
lds
pusha
subb
xor
repz
js
sbb
adc
push
or
cltd
jno
pop
mov
mov
dec
pop
jns
inc
test
adc
xlat
xor
in
mov
ds
pop
lods
imul
and
sub
test
icebp
pop
out
shrb
movsb
push
mov
out
stc
je
cld
add
iret
mov
cmp
into
imul
sub
dec
fildll
xor
jo
mov
mov
xor
popf
dec
jl
jns
jnp
das
stos
leave
jne
xchg
adc
call
xchg
ret
mov
mov
adc
push
testb
add
cmpsb
mov
shlb
repz
jg
insl
jne
xchg
inc
insl
hlt
push
xor
mov
aad
mov
or
arpl
adc
push
jbe
inc
cmpsb
stos
pop
fidivl
in
outsl
imul
aam
cmpsl
jecxz
push
mov
xor
xor
push
cltd
ljmp
push
jle
fldenv
in
pop
jb
lds
and
push
inc
inc
pop
scas
fwait
gs
lods
js
leave
jle
lahf
clc
je
std
add
lea
adc
cmp
sbb
bound
out
inc
mov
xchg
out
mov
inc
addb
sarb
outsl
adc
or
clc
push
gs
and
rorb
and
das
push
and
mov
or
cmpsb
mov
lea
jl
mov
push
mov
push
jmp
clc
push
cmpsb
fisubrs
and
movsb
insb
mov
adc
cmpsl
pusha
mov
mov
ja
scas
outsl
or
jecxz
pop
or
or
pop
rorl
or
mov
sub
sbb
push
jae
adc
add
in
push
in
call
orb
fnsave
mov
adc
aam
pop
add
out
pusha
addr16
pusha
cwtl
cmp
pop
loop
sbb
mov
incb
sub
iret
jbe
add
pop
into
cltd
pop
jmp
sbb
out
fdivr
fnsave
push
mov
jmp
mov
lcall
fldt
int3
in
icebp
mov
insl
inc
shrb
daa
sbb
inc
int
testb
xor
push
xchg
mov
leave
mov
test
sahf
std
sbb
mov
adc
push
sub
dec
jns
cltd
jne
xchg
jmp
mov
mov
std
mov
ss
pop
outsb
dec
jbe
push
mov
fdivrl
and
jmp
dec
inc
inc
aam
pushf
dec
mov
push
outsb
lret
add
mov
test
je
jno
fists
xchg
and
or
mov
push
push
inc
inc
lcall
inc
f2xm1
jnp
je
add
sub
adc
lea
mov
mov
xchg
xlat
ret
dec
fnstcw
scas
dec
sti
pushf
jne
repz
sbb
loope
movsl
rorl
stc
or
push
mov
jno
sub
lahf
mov
mov
mov
mov
mov
lret
mov
cs
mov
in
fnstcw
sahf
xor
movsl
jmp
cmc
inc
lahf
dec
inc
xor
sub
cmp
fldl
outsl
mov
jns
aaa
pusha
out
or
push
cmp
pushf
pusha
dec
push
scas
adc
push
loopne
adc
in
hlt
xchg
inc
daa
jno
mov
adc
lods
loop
mov
lods
fnstsw
lods
out
mov
inc
shl
notb
js
popa
lock
test
sbb
fdiv
push
fsub
dec
je
xchg
cmp
fs
loop
sbb
jbe
jno
jl
sub
mov
push
push
aad
mov
jmp
inc
push
dec
ljmp
insb
test
sti
out
pop
jge
jae
push
int
sbb
addl
popa
movsb
lea
cld
push
push
inc
push
sub
pushf
pushf
lret
repnz
aam
inc
sub
cmp
and
or
insb
leave
dec
mov
ret
dec
mov
hlt
jb
mov
xchg
pop
mov
mov
pop
dec
test
xor
mov
iret
xchg
jno
ss
mov
xchg
in
and
mov
mov
gs
cmp
ljmp
sbb
rclb
xchg
push
mov
cltd
fsubs
mov
movsl
int
lahf
dec
add
imul
hlt
mov
pop
imull
aam
ret
or
dec
insb
es
and
int3
xlat
dec
dec
stos
and
adc
arpl
insb
repz
ror
out
icebp
test
or
jmp
dec
pop
stc
adcb
pusha
adc
movb
xchg
incb
jae
mov
fisttpll
loop
mov
insl
stos
inc
into
ljmp
sub
mov
xorl
mov
fs
sub
lahf
adc
pop
das
rolb
insb
je
imul
fists
icebp
push
lea
pop
in
out
dec
sub
xchg
xchg
or
loop
cwtl
jae
adc
xor
dec
pop
sub
adc
push
stos
into
leave
jno
jae
push
aaa
xor
call
fs
cmpb
and
test
xchg
pslld
fisubrs
mov
or
jmp
and
or
outsb
xchg
sbb
into
mov
adc
ljmp
jo
dec
out
add
mov
mov
and
aas
data16
xor
mov
xchg
sti
bound
cmp
xorb
sbbb
jge
mov
and
and
cmp
mov
popa
sub
jns
and
je
and
shlb
xchg
imul
cli
mov
xchg
lods
mov
call
sbb
pop
push
imul
sbb
or
adc
or
int3
out
ja
fisttps
jbe
cmp
lret
cld
sub
imul
xlat
fists
outsb
push
xor
mov
leave
imul
les
xor
push
ja
call
inc
scas
lret
icebp
mov
in
rorb
adc
repnz
pop
cmc
fdivr
imul
imul
lret
cltd
xor
pop
lods
mov
arpl
inc
pop
and
push
popf
cmp
dec
jnp
outsb
imul
adc
ret
and
adc
rep
dec
pop
arpl
sbb
loopne
push
pop
cmpsb
jnp
pop
fsubrs
xor
mov
in
ljmp
pop
xchg
lret
pop
imul
xor
mov
cmpsl
push
cmp
icebp
adc
jp
fimull
sti
mov
xlat
push
aaa
imul
adc
pushl
insl
cmp
aaa
ja
frstor
stc
aad
aas
imul
inc
inc
dec
xchg
fs
mov
sti
jb
inc
and
out
hlt
int
loopne
jg
sub
fistpll
add
add
inc
sbb
mov
push
push
leave
xlat
xchg
adc
pop
push
sbb
jne
dec
pop
outsl
pop
or
mov
push
out
stc
push
in
mov
or
stos
mov
loope
repnz
fildll
std
pop
inc
xchg
ss
sbb
xlat
sarl
scas
por
out
movsb
add
mov
xchg
dec
std
dec
xchg
sub
xlat
pushf
push
xor
pop
xchg
fsts
aaa
dec
push
popf
push
into
xor
fists
stos
repnz
popf
sbb
lods
ret
dec
data16
and
rcll
js
cmp
pop
and
cld
call
test
mov
jne
aam
std
mov
push
imul
into
push
in
out
out
or
iret
in
mov
pop
lds
xor
jae
daa
pop
in
xor
xchg
cmp
mov
mov
cmpsb
repz
in
pusha
movl
js
out
repz
add
and
in
inc
repz
sbb
sub
leave
movsl
dec
xchg
pop
xor
into
push
cmp
cli
dec
icebp
and
cmpl
sub
push
imul
sbb
add
inc
and
ja
out
out
es
fcoml
xchg
and
cmpb
mov
dec
jl
or
rclb
test
cld
bnd
pop
push
mov
sbb
mull
xchg
repz
dec
mov
mov
push
loope
mov
inc
test
cld
out
jne
adc
mov
or
sub
sub
ds
insb
icebp
dec
add
movsl
cld
inc
pop
push
testb
jno
in
scas
mov
ljmp
pop
test
or
inc
leave
or
dec
jle
cmp
sahf
rol
dec
adc
js
sub
inc
or
std
in
add
or
inc
stc
pop
xchg
push
mov
jle
inc
aaa
bound
push
clc
shl
imul
inc
stos
aad
pusha
xchg
mov
insl
pop
or
pop
mov
cwtl
aam
pop
push
inc
xor
inc
fdiv
sub
mov
jo
rep
call
dec
loop
int3
push
mov
popf
fldcw
dec
xchg
mov
jp
fwait
mov
int
or
jp
pop
insl
fbld
push
insb
add
cmc
lret
xorb
jle
fwait
mov
iret
jmp
mov
int3
adc
mov
xchg
js
fdivs
pop
mov
cmpsl
mull
daa
dec
mov
and
repnz
movsl
mov
loop
ret
pop
xchg
lcall
pop
pop
pop
or
mov
or
jecxz
pop
and
imul
bound
mov
jmp
mov
mov
stos
inc
lret
rcll
xchg
sbb
inc
dec
or
mov
jecxz
add
cs
popl
std
inc
mov
sub
and
jo
iret
pop
shlb
or
xlat
or
imul
ficoms
inc
inc
test
xchg
lahf
dec
sbb
imul
mov
imul
inc
push
sahf
aad
jle
inc
loop
pop
jle
aas
fstl
xor
test
or
and
in
xchg
mov
inc
adc
jne
pop
push
je
cli
imul
mov
jecxz
mov
loop
out
jp
js
push
xchg
in
xchg
mov
push
gs
lods
cwtl
data16
pop
es
mov
imulb
jle
pop
fadds
mov
xor
fdivl
scas
and
lock
dec
add
nop
test
rclb
dec
gs
cmp
mov
into
in
js
mov
aad
roll
ret
sbb
push
dec
xchg
mov
and
jle
jnp
jae
xchg
pop
add
fidivs
jle
shll
inc
or
dec
addr16
sbb
les
outsl
outsl
xlat
jne
fcomp
mov
iret
fisttpl
mov
cmp
lret
test
sbb
xchg
sub
jmp
lock
push
sahf
stos
mov
jmp
in
int3
out
sub
out
jp
aam
fidivs
mov
push
push
movsb
jae
mov
inc
test
and
mov
scas
push
test
mov
loope
and
jo
or
mov
pop
adc
and
adc
fcompl
ffree
mulb
stos
cmc
mov
mov
js
jmp
in
dec
xor
cmpsb
addr16
mov
xchg
insb
test
xor
popa
outsb
popl
cmpsl
andb
jns
int3
jl,pt
xchg
add
mov
xchg
inc
adc
test
lock
or
fs
fnsave
xchg
pop
maxps
push
inc
shll
jl
pop
in
lods
dec
popa
jo
cltd
jae
inc
adc
int3
mov
mov
sub
in
pop
imul
xor
cmpsl
shlb
sub
das
jae
test
pop
data16
jp
in
mov
cwtl
stc
int3
sti
cltd
ljmp
cwtl
loope
sti
adc
xor
jne
fcoml
inc
xchg
mov
mov
cmp
cltd
mov
fwait
test
mov
add
scas
data16
cmpsb
jecxz
mov
adc
adc
xor
leave
add
ss
mov
cmp
insl
adc
dec
xor
xchg
clc
rorb
pop
aad
cmp
sarl
pop
xchg
xchg
push
cmp
xchg
into
xlat
mov
cmp
jmp
cmp
ret
mov
sub
xor
mov
push
adc
mov
imulb
rolb
pop
jns
dec
add
sub
pop
cmp
adc
mov
stos
cmp
sub
lahf
pop
mov
dec
cmpsl
pop
jg
add
push
mov
add
xchg
cwtl
push
cmp
mov
xlat
xorb
pop
int3
pop
mov
mov
lret
jo
out
loope
inc
cmp
mov
or
xchg
xchg
mov
xchg
lahf
adc
stos
mov
pop
push
and
xor
dec
leave
aaa
ds
cmp
adc
insl
and
cmp
jl
dec
cli
lahf
xchg
xor
data16
and
shlb
fsubl
jle
pop
test
sahf
push
adc
lock
rcr
fistpl
gs
int3
test
jns
verr
inc
add
xor
mov
dec
out
mov
inc
pop
bound
in
dec
mov
ret
pushl
rcl
jno
scas
adc
add
jg
faddl
xchg
sbb
lret
std
cltd
cmp
push
mov
xchg
mov
mov
xchg
and
dec
push
pop
in
jmp
inc
xor
inc
icebp
inc
or
push
xor
pop
jp
jnp
adc
or
shll
mov
nop
xchg
les
and
fbstp
and
icebp
bound
iret
adc
test
pop
xor
fisubl
mov
rcl
scas
cmp
pop
bound
enter
imul
push
cmpsb
sub
push
xchg
jp
mov
movsb
imul
lret
and
hlt
lock
push
dec
lods
xlat
fildl
jne
lret
sbb
ficoml
mov
dec
in
mov
repnz
jl
hlt
mulb
adc
adc
mov
rclb
nop
add
mov
mov
xchg
inc
lahf
pop
out
fisttpll
xlat
cmp
or
jp
add
jno
xor
das
pop
insl
and
adc
jge
insl
jbe
jns
popf
iret
dec
outsl
or
int3
out
addl
push
shl
push
jno
xchg
sti
mov
jg
mov
and
fwait
adcl
adc
pop
inc
mov
rcrl
cmp
fnstenv
xlat
ds
sbb
mov
addr16
aaa
cwtl
or
das
inc
ret
insl
rcll
lret
adc
fdivrp
dec
cmpsl
enter
les
sbb
push
les
cmp
in
jp
pop
lods
fists
insl
push
xchg
push
lret
scas
clc
adc
jns
adc
shlb
or
incb
pop
lahf
sub
pop
push
xor
xchg
loop
cmp
pop
adc
cmp
dec
add
mov
xlat
pop
rclb
rclb
scas
pop
dec
jmp
pop
dec
out
test
sbb
mov
sub
jbe
push
xor
ljmp
lahf
push
sbb
int3
loopne
sub
adc
push
mov
or
mov
ds
mov
imul
shrb
xchg
xchg
mov
test
cmp
mov
push
push
add
sub
stc
mull
ss
sub
mov
adc
clc
sub
dec
mov
adc
negl
mov
cmpsl
xchg
dec
mov
dec
xor
pop
push
leave
pop
mov
ss
pop
jbe
pop
out
xchg
cmp
xchg
dec
mov
lods
cmp
test
movsb
cmpsl
std
and
xchg
dec
cltd
icebp
fstpt
add
push
rorb
sbb
adc
jo
xor
mov
bndstx
andl
pusha
xchg
jmp
test
int3
add
fistps
push
loop
lret
add
fstpl
test
hlt
stc
ficoms
cmp
sbb
leave
aaa
fcomps
push
ret
jnp
ret
pop
aad
iret
and
cli
adc
mov
add
xchg
push
xchg
push
lock
mov
mov
sub
fildl
or
in
add
stos
lock
cmp
or
cli
or
loope
jg
aad
insb
mul
cmp
sbb
mov
imul
mov
stos
or
test
idiv
inc
mov
push
xor
cmp
pop
lods
loope
out
xchg
imul
in
lea
push
adc
pusha
mov
iret
push
call
xor
not
stc
mov
xchg
and
xchg
push
mov
push
jo
ds
gs
test
xlat
cmpsl
roll
imul
clc
rcll
inc
jg
out
cmp
xor
gs
sub
add
dec
push
fimuls
xchg
mov
dec
inc
pshufw
or
mov
ss
push
les
aam
cld
cmc
pop
mov
inc
inc
ret
les
cmpsb
lcall
aad
and
data16
jnp
int
inc
jle
sub
pop
push
mov
push
ficomps
mov
or
repnz
cmp
fnsave
cmp
imul
or
scas
popa
daa
mov
pop
test
push
jbe
scas
cmp
in
and
push
popa
add
jns
and
add
inc
add
cs
inc
out
iret
fcmove
add
mov
inc
mov
out
adc
and
es
mov
pushl
lcall
xlat
stc
xlat
jno
iret
mov
jns
mov
pop
int3
sub
cwtl
in
cld
mov
jle
push
divb
xor
pop
dec
sbb
out
xor
dec
stos
data16
dec
mov
stos
xchg
xchg
inc
lds
mov
je
fdivl
in
jae
pop
dec
int
fnstcw
pop
cmp
out
push
and
pop
xchg
adc
out
loope
test
shr
jns
cmc
sub
sbb
push
insl
xor
popa
pop
xor
sbb
mov
shlb
pop
mov
pop
nop
mov
pop
test
dec
rcl
repz
lods
aaa
stc
mov
push
jns
pushf
mov
push
xor
lock
or
pop
mov
xchg
dec
imul
xchg
adc
add
stc
mov
rorb
movl
out
enter
js
sub
pop
mov
movsb
cwtl
adc
jecxz
pop
data16
mov
loope
sahf
fstp
jg
dec
sbb
lahf
cmp
pop
aaa
pop
cmp
arpl
mov
jbe
daa
mov
lret
adc
outsb
cmp
mov
mov
xchg
or
adcb
ror
adc
xchg
or
xor
das
jle
adc
mov
or
or
mov
arpl
insl
inc
ljmp
sahf
iret
test
xchg
call
ret
scas
ret
arpl
test
inc
mov
cmc
cmp
arpl
push
adc
adc
jno
arpl
stc
gs
mov
call
cli
or
daa
call
int
pop
cmp
mov
cmp
notl
sbb
lds
jns
jb
adc
xchg
xchg
cmp
shlb
pop
xchg
gs
mov
into
icebp
daa
dec
orb
xor
pushf
negb
adc
in
lods
pushf
push
adc
in
cmp
pop
push
test
aam
and
lcall
test
jp
ret
mov
or
lods
dec
pop
cwtd
outsb
sub
sbb
dec
ret
sbb
push
std
loope
and
gs
call
mov
dec
mov
ret
shll
cmp
cwtl
jp
sub
gs
dec
out
mov
loope
cmpb
vandps
mov
inc
jmp
cld
mov
roll
xchg
scas
sbb
pushf
pop
sub
aam
out
dec
pop
je
in
cmpsl
filds
mov
mov
dec
sub
mov
dec
pop
sub
fdivrl
or
push
mov
mov
les
push
cmp
pop
dec
mov
ret
repz
mov
pushf
cmp
shll
mov
or
cmpb
jbe
dec
mov
jle
and
dec
push
xlat
cmpsb
cwtl
cmp
testb
shl
mov
pop
ljmp
lods
mov
push
fsubs
idivb
lods
sbb
mov
stos
cmp
lcall
fdiv
inc
loopne
fcoms
pop
xchg
xchg
out
xchg
cmc
ja
sti
outsl
pop
fldl
clc
adc
pusha
inc
in
mov
add
push
mov
fs
loope
sbb
lret
adc
and
push
fsubs
mov
and
push
imull
pop
pop
testl
cli
or
cmp
or
inc
movsl
add
mov
dec
jne,pn
bound
div
stos
dec
rorb
fs
out
rcrb
xchg
xchg
ja
push
imul
dec
outsl
mov
xor
insb
rcrb
nop
pushf
cmpsb
inc
in
insb
adc
cmp
cwtl
xchg
xchg
shrb
xchg
test
rclb
imul
pop
insl
xor
push
ret
jae
jmp
xchg
test
xchg
and
test
and
es
push
in
mov
iret
xchg
imul
mov
mov
add
cmp
or
xor
fxch
ret
mov
dec
mov
cli
push
jne
mov
in
jne
daa
mov
rcll
mov
xchg
in
stos
fwait
or
mov
pop
mov
mov
pop
mov
subl
lret
inc
mov
dec
and
xor
xor
xor
repnz
xchg
cld
jbe
sbb
subb
mov
lahf
ret
push
lods
or
push
test
or
or
test
aad
in
gs
and
aad
fimuls
out
orl
adc
sbb
xor
xor
xchg
add
mov
js
inc
or
ljmp
hlt
test
push
pop
cmpsb
rcr
mov
mov
out
adc
cmp
pushf
sbb
icebp
push
cmpsl
idivb
mov
cwtl
sahf
mov
fisubrs
cli
gs
push
jl
insl
das
push
ret
loop
pushf
in
cwtl
pop
fsubs
in
jne
push
or
add
dec
pop
push
insl
jo
ror
sti
cmp
es
push
xlat
stos
push
scas
xorl
sbb
pop
jbe
lods
sub
xor
cmpl
adc
mov
xchg
popf
gs
jb
push
cmpsl
adc
negl
xlat
popa
movsb
inc
stc
das
pop
ja
lods
loope
stc
daa
into
push
xchg
testl
pop
xchg
arpl
add
pop
mov
xor
repz
push
leave
inc
pop
fimuls
cmpsl
clc
lahf
jl
lods
rclb
stos
push
dec
pusha
pop
inc
fnstsw
popa
int3
push
jecxz
or
roll
out
in
mov
xor
adc
aaa
mull
rorb
rcrl
xchg
pop
and
lods
and
popf
nop
shll
add
lret
and
and
jae
xchg
dec
test
movsl
rcrl
or
jne
test
mov
jo
inc
icebp
and
inc
testl
les
lock
xchg
cmp
mov
aaa
pop
stos
lods
fsubs
xchg
lret
jg
xor
stc
icebp
pop
fsubp
xchg
dec
in
call
adc
mov
loopne
pop
and
das
insb
lahf
and
or
push
xor
rcrb
add
jno
xchg
lods
mov
nop
mov
loop
jge
mov
mov
jo
not
xor
call
xorl
enter
mov
pusha
xchg
ficompl
scas
jecxz
js
adc
pushf
dec
lahf
mov
mov
roll
mov
imul
push
xchg
xchg
jge
je
sub
pop
mov
mov
aaa
mov
lret
push
dec
mov
scas
imul
rcrb
cmpsb
aaa
jg
xchg
sub
nop
push
xor
or
icebp
push
xchg
xlat
cs
xchg
mov
mov
lcall
inc
add
xor
leave
scas
sbb
adc
addr16
xor
jo
fildll
or
mov
jns
out
xor
rcrb
cmp
mov
aaa
jbe
out
sarl
lock
enter
add
aas
daa
mov
cmpsb
mulb
pop
out
mov
insb
xor
aam
hlt
out
movsb
fcomps
sahf
mov
je
jns
rol
jl
lret
mov
pusha
mov
and
inc
and
mov
adcl
adc
imul
imul
push
add
cli
movsb
es
scas
hlt
hlt
or
jne
mov
dec
xor
int3
xor
adc
js
sub
fstp
push
mov
inc
xchg
pop
stos
inc
das
imul
pop
out
or
pop
enter
jl
cmp
mov
sbb
mov
notb
scas
insl
in
dec
popf
dec
mov
lock
repz
insb
inc
xor
gs
lods
mov
push
and
in
sti
sbb
fnstcw
loop
bound
pushf
shlb
mov
rorb
das
subl
xchg
ss
xchg
adc
push
pusha
pop
fdivl
insl
add
dec
mov
ds
pop
dec
xchg
jge
pop
movsl
je
xor
popf
loope
adc
jp
mov
ss
movsb
lret
addb
in
mov
data16
outsl
es
fstps
mov
add
stos
scas
dec
int
inc
nop
insl
in
dec
sarl
movsl
adc
jae
sub
icebp
movsb
cmp
fnstcw
xor
nop
sbb
and
or
sub
xchg
lahf
es
adc
xor
mov
shlb
jns
cmpsl
test
xchg
fldl
xchg
lea
sbb
mov
sub
inc
dec
mov
inc
add
fcmovne
inc
insl
push
and
enter
movb
jp
ss
imull
adc
mov
xor
sub
and
pop
push
leave
push
fistpll
out
fnstcw
or
or
cmovs
test
xchg
xchg
and
stc
lcall
mov
into
pop
jo
sbb
mov
cmc
and
cmp
stc
outsl
int
imul
fstl
cwtl
arpl
loope
iret
cmpl
mov
xchg
fistps
xorl
xchg
imul
das
out
pop
lcall
nop
testl
or
adc
dec
aam
pop
cmp
out
xor
cmp
icebp
fwait
mov
push
loop
inc
notl
adc
imul
fsubp
push
mov
xchg
cli
push
xchg
stos
and
sub
in
xchg
adcl
or
int
mov
cmp
mov
clc
xchg
pushf
lds
ljmp
add
inc
pop
daa
pushf
xchg
adc
xorl
mov
wbinvd
lret
lahf
sbb
jne
ljmp
pop
inc
fisubrl
mov
push
fdivr
mov
mov
mov
mov
test
stos
jno
sarl
les
test
addr16
dec
inc
mov
inc
xchg
out
jnp
and
and
out
xor
xchg
push
mov
sub
imul
sub
mov
cmp
fisttpll
ja,pn
insl
nop
push
in
insl
inc
ljmp
jae
int
cmpsl
loopne
dec
mov
cmovle
inc
lret
pop
enter
in
pop
loopne
test
stos
pop
dec
push
inc
push
repnz
jmp
sbbl
subb
ret
push
movsb
mov
andl
push
jb
xor
push
mov
fildll
shr
out
xchg
in
aad
ljmp
mov
in
xor
pop
mov
mov
mov
mov
sub
mov
add
and
pop
xchg
or
out
push
mov
icebp
test
lock
push
int
mov
jecxz
fwait
rolb
imul
xchg
xchg
add
dec
fcmovb
lret
sarb
popf
lahf
and
imul
ret
push
inc
fdivrs
scas
ss
xchg
and
pop
in
mov
insl
imul
pushf
mov
inc
pop
mov
push
mov
xchg
xor
jns
xorl
pop
push
push
popa
dec
imul
dec
cld
cwtl
add
inc
mov
pusha
xor
mov
cmp
pop
pop
in
sbb
fcoms
bnd
jmp
xor
inc
xchg
ficoms
movsl
lods
sbb
cmp
and
jle
jns
mov
mov
test
movsl
mov
js
or
jb
and
pop
jno
aas
std
lock
lahf
push
insl
adcl
or
jecxz
dec
mov
bt
shrb
pusha
icebp
daa
sbb
std
mov
out
dec
cmp
add
xor
addr16
sbb
loop
inc
fwait
pop
hlt
aam
pop
adc
imull
stc
add
xbegin
orl
inc
cmc
xlat
pushf
xor
jns
mov
cmp
scas
dec
jo
repz
test
out
or
fnsave
jbe
lock
sbb
mov
inc
fisubs
sub
addb
pop
bound
jecxz
mov
lods
or
imul
es
push
sub
mov
lea
mov
pop
jg
out
cmc
mov
and
outsb
pushf
mov
repz
pop
mov
pop
bound
sahf
movsl
mov
sbb
and
jmp
addl
lods
cmp
cmpsl
adc
and
int3
xor
hlt
loop
imul
adc
adc
pop
xchg
fists
add
sbbl
mov
xor
fidivs
div
jbe
inc
dec
or
out
push
push
xchg
mov
inc
jl
pop
in
scas
pop
adc
sbb
cltd
pop
pop
mov
jo
cwtl
xorb
xchg
mov
add
jno
xchg
pop
mov
repz
ss
out
sub
push
sarb
jns
aad
pop
mov
pushf
jns
aam
cltd
bound
scas
imul
xor
pop
pop
divl
nop
mov
mov
mov
dec
cmp
gs
test
in
adc
xchg
js
mov
daa
and
jbe
sub
and
out
and
push
fildll
data16
xor
dec
imul
ljmp
adc
dec
xorl
ret
fldt
cmpsl
push
dec
ret
adc
xor
jno
ret
call
arpl
addr16
push
pop
xor
add
mov
sub
test
fadd
mov
cmp
stos
mov
shll
jmp
push
jnp
xor
xchg
rcrl
adc
cmp
pop
adc
movsb
sub
push
outsl
push
push
lahf
xchg
adc
mov
sbb
push
add
out
movsl
fcmovnbe
fistpl
mov
loope
int
in
add
or
xlat
into
pop
or
lret
loope
lock
cltd
inc
out
aam
jb
add
cld
xlat
lock
cmp
jo
push
cld
dec
fistpll
dec
scas
adc
adc
push
clc
das
in
nop
arpl
sbb
mov
mov
movb
push
je
mov
hlt
outsl
dec
mov
popf
add
push
insl
or
jb
sub
sub
jmp
add
and
add
leave
inc
mov
int
jmp
rolb
push
push
inc
jns
pushf
push
nop
lock
cmc
cld
insl
jnp
sti
push
pop
out
mov
fs
into
nop
rorl
mov
jae
popf
sub
or
cltd
movsb
outsl
mov
outsl
cmp
and
ficompl
fmull
inc
imulb
nop
aad
pop
push
push
add
aad
movsl
xlat
or
mov
dec
mulb
test
fwait
xor
fstpt
mov
sub
hlt
push
es
add
nop
data16
cmp
cmp
inc
loop
lret
adc
and
dec
out
call
mov
adc
fwait
aaa
jmp
dec
or
jns
xchg
pop
xlat
xchg
into
jle
stos
cld
aas
cmp
mov
jb
push
out
in
pushf
dec
push
sbb
or
cmpsb
sub
pop
idiv
and
adc
push
adc
pop
gs
and
sub
adc
cs
stc
jae
sub
jb
loope
ja
dec
mov
xor
xchg
push
and
in
xor
movsb
dec
cmp
outsb
mov
dec
adc
inc
out
xor
sub
icebp
mov
out
es
lahf
pop
sbb
pop
fidivl
decb
cmpsl
fsub
shl
das
mov
lret
sub
sahf
jl
sahf
outsb
rorb
idiv
jno
or
addr16
rep
in
add
mov
iret
adc
lea
jg
test
push
pop
push
lea
mov
out
shll
mov
pop
or
insl
or
hlt
rcll
or
xor
xor
scas
adc
fmull
cwtl
push
ret
dec
lcall
enter
xor
sbb
mull
cmp
sbbb
xor
arpl
test
bound
push
jl
or
push
ficomps
xchg
repnz
and
in
dec
push
into
push
outsb
inc
fidivrl
mov
bound
imul
mov
testl
jmp
pop
std
flds
hlt
inc
pop
mov
imul
adc
xchg
add
iret
or
push
mov
ds
xchg
inc
daa
sbbb
fs
dec
scas
rcrb
xor
mov
and
fs
fwait
pop
scas
fnstcw
cmc
cmp
push
iret
imul
inc
lahf
sti
cwtl
cs
fnsave
sbb
rcl
sub
loop
or
ljmp
inc
mov
loope
xlat
cmp
loop
leave
or
cmp
mov
mov
lret
jne
loope
out
sbb
ja
orb
jl
das
xchg
lcall
jne
push
addr16
movsb
sbb
fsubl
xlat
sti
push
or
lahf
out
cmp
dec
push
iret
out
fimull
mov
scas
dec
inc
fstpl
std
sbb
adc
xor
bound
cltd
loopne
xor
mov
aas
and
addr16
push
mov
push
shll
inc
pop
repz
cmpb
dec
mov
adc
iret
dec
push
bswap
jecxz
dec
cmc
xor
push
jno
jge
js
out
lahf
test
dec
jne
popa
test
push
aam
push
ret
roll
pop
daa
cmp
push
cli
into
jno
int3
arpl
shlb
push
pop
mov
add
popl
rcrl
pushf
jbe
inc
cmp
adc
hlt
pop
and
xchg
xor
xchg
xchg
xchg
add
out
outsb
popf
cmp
stos
or
rcrb
shl
ds
push
mov
xlat
cmp
cmc
clc
lock
rolb
leave
pop
inc
into
mov
pop
rolb
push
addb
xlat
pop
fiaddl
inc
rcrb
xchg
iret
and
push
dec
push
cmp
push
or
idiv
cmpsl
repz
add
xchg
and
ds
cwtl
pop
call
stc
jne
mov
xor
sahf
arpl
dec
lock
jnp
aad
xchg
and
mov
mov
sarb
add
adcb
mov
jne
movsl
cmp
inc
cli
enter
test
cmp
cltd
push
cwtl
in
sbb
in
dec
cmp
jno
push
ds
fisubrs
int3
test
inc
pusha
mov
lcall
andb
push
sub
cmp
popa
mov
nop
js
xor
add
xor
inc
fcmovu
shrb
ljmp
lret
popf
adc
pop
nop
test
int3
loopne
adc
fidivrl
stc
mov
iret
subl
mov
mov
sahf
push
in
sbb
jl
in
push
jmp
pop
dec
fwait
lret
xor
aaa
cmp
sub
pop
mov
mov
lds
xchg
std
sub
mov
mov
sahf
mov
pop
pop
adc
xor
add
jnp
loop
inc
es
mov
jl
jl
mov
mov
mov
mov
or
out
sub
and
sub
popa
ljmp
loop
js
mov
push
repz
into
dec
divb
daa
sbb
inc
or
dec
and
xor
fwait
ljmp
dec
hlt
adc
mov
dec
pop
pusha
mov
jecxz
call
adc
rcr
and
bound
or
and
hlt
jmp
rol
mov
and
pop
mov
fucomip
xchg
jmp
cmc
and
bound
xchg
repz
dec
rol
or
adc
lods
insl
mov
sbb
add
je
sub
in
pushf
jne
shrb
xchg
dec
ficomps
push
sub
mov
notb
add
popf
sub
push
arpl
mov
xchg
push
inc
mov
adc
mov
sbb
ja
mov
pusha
fs
pop
sub
cmp
mov
les
mov
cs
push
xchg
or
mov
pop
das
icebp
int3
adc
cmp
mov
fbld
push
pop
xlat
sbb
cmp
icebp
lods
or
xchg
call
push
add
xchg
mov
mov
xchg
imul
xor
hlt
gs
daa
insb
add
fistl
iret
mov
dec
test
int
lods
mov
xor
cld
arpl
add
fsub
sbb
adc
into
lods
scas
push
mov
insb
push
je
imul
das
outsb
push
lock
mov
rorb
fldcw
pop
fdivl
dec
outsb
mov
sub
inc
add
mov
add
out
in
loopne
mov
loop
cmp
aaa
push
jae
pop
pusha
sbb
mov
int3
pop
pop
dec
iret
xchg
pop
push
cmp
xlat
pop
icebp
pop
or
nop
cmp
push
dec
rdtsc
sbb
pop
data16
aam
idivl
adcl
stc
or
std
nop
mov
int3
cmp
hlt
in
mov
dec
ret
pushf
jne
and
ret
xor
cld
mov
mov
jno
dec
sbb
lods
cmp
movsl
outsb
push
pop
pusha
and
dec
mov
es
fistpl
mov
dec
ret
int
push
imul
mul
jmp
lods
or
insl
sbb
pop
adc
dec
add
pusha
mov
add
in
xor
and
jp
inc
sub
mov
adc
negb
mov
jns
cld
out
mov
fildl
arpl
cmp
sbb
xor
aas
push
pop
add
dec
sub
xchg
rclb
push
mov
push
jb
mov
xchg
fdivs
jne
dec
inc
pop
sub
jg
jae
dec
pop
or
add
sub
cs
pop
clc
jo
mov
das
lods
stos
xlat
sbb
int
cmpsb
ficomps
or
mov
lods
arpl
outsl
and
lea
push
rorb
add
mov
aad
fcom
jmp
mov
test
cmp
test
jle
cmp
and
insb
adc
push
lcall
add
lds
sub
rcrb
mov
andl
fstpl
fcomi
int3
jo
jmp
mov
xchg
sbb
fnsave
jl
scas
push
movb
inc
stos
or
sbb
inc
sbb
cs
mov
hlt
imul
mov
int3
daa
ja
int3
std
sahf
xor
add
ss
mov
pop
dec
in
das
imul
mov
aas
pop
pop
ljmp
dec
pop
pop
xor
xor
add
push
dec
push
xchg
cli
lods
and
mov
xchg
cmpl
fisubrl
fstpl
xor
inc
xchg
push
cld
mov
enter
adc
pop
jmp
push
xor
fnstsw
add
cltd
pop
mov
dec
mov
sarl
sar
ds
cmp
push
mov
inc
lods
into
xor
push
lcall
and
in
push
cmpsb
rcrl
add
inc
cmp
std
fmull
mov
mov
fildll
push
push
orl
and
adc
mov
in
lods
ret
sbb
or
xchg
stos
aam
jne
pusha
daa
es
push
xor
xchg
sbb
mov
xor
sub
sbb
in
adc
loop
xchg
or
pop
add
es
js
jbe
sub
jb
arpl
insb
lea
or
je
mov
sbb
dec
sbb
aam
cltd
jns
xchg
pop
insl
adc
mov
les
mov
aam
mov
mov
lods
sarb
pop
mov
pop
sub
inc
adc
xor
jecxz
adc
xor
sub
scas
jl
jmp
xchg
dec
pop
subb
mov
flds
inc
shrl
mov
ds
sbb
mov
mov
in
sar
icebp
cmp
fists
mov
push
cs
loop
shlb
lret
jmp
outsb
iret
add
cmpb
dec
movsb
shll
jle
xchg
adc
pop
aaa
sbb
repnz
pop
mov
mov
imul
mov
mov
rclb
push
shlb
xchg
daa
sbb
add
dec
subb
mov
rorb
jge
addr16
loopne
bnd
aam
insl
popa
add
aam
mov
cmc
lods
sub
lahf
lret
xchg
pushf
lret
pop
je
in
lret
lcall
adcl
nop
push
cmp
jg
sub
mov
and
cwtl
fbld
push
out
pop
scas
mov
rorl
imul
cmpsl
rcr
addr16
pushf
repz
cli
shr
push
outsl
imul
xor
xchg
xchg
pop
push
pop
adcl
jnp,pt
cmp
decb
push
fisubrl
rcrl
test
iret
int3
movl
or
push
push
rclb
sarb
aad
mov
jnp
stc
pop
adc
repz
push
push
loop
sbbb
stos
lahf
mov
inc
insb
mov
into
xchg
pop
push
xchg
cmp
das
aam
xchg
aad
adc
icebp
mov
push
mov
mov
pop
sahf
lods
adc
push
fsubr
xchg
aad
mov
mov
adc
xor
xchg
or
inc
shl
and
inc
scas
sub
jo
push
mov
clc
mov
xchg
icebp
stos
add
mov
ret
fsubrs
das
mov
imul
mov
xor
pusha
mov
pop
and
pop
insl
inc
pushf
je
icebp
in
push
pushf
sub
add
push
xor
dec
lock
pop
xchg
adc
rol
fs
sti
sbb
dec
pop
aas
shrb
out
or
mov
loope
push
ljmp
imul
mov
rclb
insl
fldenv
test
fiaddl
insl
mov
mov
mov
pop
pop
mov
inc
stos
es
outsb
xchg
lods
xor
sbb
pop
push
and
aam
gs
sbb
jecxz
xchg
adc
movsl
xor
sbb
dec
dec
push
push
test
jle
sub
lock
lock
cs
fcoml
arpl
daa
in
fisubs
shlb
mov
ret
fistpl
mov
push
jns
leave
xchg
jbe
enter
icebp
adc
pop
bound
mov
enter
les
push
mov
push
inc
push
mov
lock
xor
mov
ret
leave
lahf
scas
xchg
jb
mov
jl
in
loopne
cmp
push
ror
loope
or
subl
popl
popf
fbstp
lret
negl
cs
call
mov
cmp
xchg
jns
mov
cmpsl
pop
fimuls
insl
mov
dec
ljmp
and
mov
sub
cmpl
jecxz
shrb
into
xlat
out
js
testl
in
mov
xor
add
aas
cmc
sti
shlb
out
mov
xor
or
or
in
icebp
inc
pop
leave
xchg
xchg
mov
mov
adc
das
cmp
cld
sub
add
in
fistpll
inc
lods
out
sub
inc
push
in
push
ss
cmp
add
or
jp
loope
pop
sbb
jbe
lcall
adcl
inc
in
cmpsb
nop
aam
fstps
and
sbb
add
insb
repz
sahf
lea
ja
rorb
imul
jne
fdiv
test
pop
lret
fbld
xor
out
sbb
xchg
fisttpll
or
sub
stc
in
cmp
cltd
fidivrs
movsb
ds
lods
adc
or
stc
fnstcw
outsl
nop
jmp
daa
out
ret
cwtl
lahf
adc
lods
or
subb
push
mov
cmpsb
jg
mov
sbb
push
mov
outsb
adc
add
scas
xchg
fcompl
ljmp
out
test
push
fs
adc
data16
mov
or
movsl
xchg
out
jecxz
test
lds
add
add
frstor
in
push
mov
scas
mov
cmp
push
imul
shl
inc
hlt
dec
shrb
popf
dec
sub
es
cwtl
lret
fidivl
jle
ja
fistps
or
fucomi
xchg
es
xchg
femms
push
ret
mov
cmpsb
scas
mov
nop
out
or
cld
dec
or
xchg
decl
in
out
out
bound
add
dec
or
cmp
sub
les
bound
mov
pop
xchg
sub
mov
lods
rcr
pop
enter
loope
adc
or
int
lock
xchg
call
push
mov
pusha
pop
or
add
rcll
pop
xor
cmp
jbe
jmp
fiaddl
adc
fsubs
mov
andl
push
repnz
pop
cmp
push
decl
pop
mov
cld
jmp
xchg
adc
imul
xlat
add
cmp
inc
out
jns
leave
mov
test
pop
cli
arpl
dec
mov
cmp
add
hlt
sub
cmc
sahf
jp
xor
insb
daa
cmpsb
rcrb
push
xlat
out
jo
or
aad
cmp
mov
adc
movsb
jb
out
out
sti
and
mov
cmp
and
clc
mov
mov
jmp
mov
jge
inc
scas
mov
nop
and
sub
push
xchg
jmp
jb
loop
push
and
jnp
sub
int3
push
ss
arpl
loopne
add
push
and
int3
sbb
push
cmpsl
mov
aaa
scas
ljmp
xchg
pusha
repnz
mov
icebp
push
push
sub
xor
testb
movsl
mov
out
mov
je
mov
iret
dec
in
jp
movb
add
popa
test
pushf
jp
ret
fldl
seta
mov
outsl
adc
movl
add
jne
pop
cli
hlt
jo
pop
std
jne
repz
xor
fwait
mov
ds
mov
dec
cmpb
shlb
inc
ret
fidivl
sub
add
pop
nop
dec
jb
clc
int
mov
adc
lds
and
sahf
xchg
pop
aam
divl
adc
lods
mov
dec
cltd
adc
repnz
aad
mov
es
sub
test
inc
inc
pop
bound
mov
push
into
jp
bound
into
sub
push
xchg
jns
lods
addr16
inc
cmp
sub
dec
movsb
cli
mov
hlt
ret
mov
mov
sbb
inc
cmpsb
or
sti
dec
imul
mov
jl
push
aad
sti
gs
outsl
pop
call
ss
xor
call
test
xchg
inc
add
dec
push
mov
add
xchg
mov
outsl
sbb
sbb
iret
cmp
dec
inc
mov
xchg
dec
out
bswap
sbb
add
shlb
cmpsb
and
inc
pop
call
jmp
pop
inc
shrb
cltd
sti
sub
jmp
mov
aas
push
ljmp
and
loop
inc
sarb
pop
xor
aas
push
imul
jg
fisubrs
push
addr16
inc
sbb
mov
or
cld
test
push
icebp
push
imul
mov
lahf
add
xchg
femms
pop
xor
xchg
add
lock
aad
test
mov
cmpsl
sub
jp
dec
push
movsb
out
mov
dec
out
mov
cli
cmc
aaa
repz
aaa
and
rcr
adc
lahf
cmp
or
cmp
insl
icebp
mov
or
mov
out
aas
gs
int
or
mulb
add
int
inc
pop
cmpsb
or
mov
xchg
dec
notb
call
xor
fldl
sti
scas
or
movsb
or
xchg
adc
jp
mov
ficoml
cwtl
adc
sbb
cld
mov
push
mov
mov
outsl
xchg
lcall
xor
jge
lcall
in
mov
mov
jns
test
leave
fisttps
sbb
test
stos
inc
std
adcl
faddp
fcoml
mov
add
mov
mov
mov
sub
std
repz
fs
test
lahf
out
insl
rcrl
std
pop
incl
mov
gs
dec
or
and
bound
iret
cltd
bound
or
ss
mov
stc
shlb
subb
test
mov
popf
fwait
addl
arpl
sbb
rcll
ljmp
hlt
xchg
in
push
pop
in
xchg
loop
imul
and
stc
bound
sub
jmp
mov
test
push
pop
mov
sbb
xchg
movsb
inc
sub
arpl
sbb
inc
fnstenv
les
rcrb
scas
dec
xchg
inc
mov
push
cli
cmp
mov
loop
mov
bound
test
or
xor
cmpsl
sbb
js
jae
lea
insb
pop
mov
pop
fwait
stos
or
out
add
push
lea
jmp
pop
mov
add
sbb
mov
ds
insl
fldl
mov
push
and
std
cs
repnz
and
pop
ja
repnz
inc
mov
or
adc
fists
mov
lock
push
mov
jne
jae
popf
pop
imul
loop
xchg
call
jno
daa
js
fucomp
pushf
mov
inc
loope
jge
push
adc
mov
lret
shlb
shlb
movsl
scas
and
stos
adc
adc
adc
mov
in
jle
adc
or
imul
outsb
push
adc
mov
pop
testl
jno
cli
jmp
dec
roll
jge
lcall
jmp
psraw
jno
stos
push
repz
add
jge
jb
and
pushf
xor
bound
fnstcw
inc
push
shlb
jl
push
sbb
or
aad
mov
test
adc
cmp
scas
sub
sahf
stos
inc
mov
jle
loope
fdivrl
sub
scas
cltd
rclb
in
push
cmpsl
adc
inc
scas
repnz
adc
xchg
xchg
xlat
mov
push
push
enter
aas
xchg
loop
inc
movsb
adc
or
jae
push
addr16
xchg
mov
out
ja
xor
push
aaa
mov
add
dec
xchg
andl
jle
jp
and
jmp
movl
test
jecxz
xor
or
stc
jbe
aaa
push
inc
cmc
repnz
mov
cld
popf
dec
lea
mov
mov
fwait
outsl
lods
loop
das
adc
xchg
pop
inc
loopne
xor
fidivrs
pop
sub
jge
pop
mov
and
xchg
stc
push
std
push
movsb
cmpsl
cmpsl
dec
mov
in
divb
push
jmp
jns
js
mov
lods
xchg
mov
push
movhps
icebp
std
xchg
je
pop
rorb
das
js
scas
push
add
aaa
push
push
pop
shll
xchg
add
in
ror
lret
ljmp
xchg
jge
push
adc
jo
sahf
cmpsl
scas
js
dec
into
mov
inc
inc
and
mov
pop
mov
inc
push
std
dec
subb
std
stos
roll
das
insl
adc
sahf
mov
aad
mov
mov
stos
push
movsb
out
dec
jmp
mov
out
xchg
iret
mov
jnp
psubd
add
scas
sbb
xor
scas
xrelease
mov
lea
pop
mov
cld
jns
movsl
pop
push
mov
jmp
jp
xor
sarl
xchg
jle
icebp
xchg
insl
sbb
lcall
call
fwait
cmp
aad
push
cmc
cld
hlt
imul
dec
push
fisubrl
push
mov
pop
js
loopne
pop
aad
jp
dec
ja
in
mov
push
mov
ffreep
push
cwtl
aad
mov
iret
ljmp
ss
sub
mov
cmp
js
or
out
jmp
or
imul
cltd
xchg
insb
xor
pop
xchg
inc
inc
std
adc
cmpsl
int
mov
mov
fcom
test
push
jbe
sub
lea
test
testb
pop
int3
in
int
stc
lods
dec
xchg
pop
pop
cmp
shll
daa
out
adc
dec
xor
add
pop
inc
xchg
hlt
push
and
xchg
pop
xchg
sub
adc
mov
pop
and
lahf
xchg
popf
rcl
inc
adc
out
or
mov
mov
pop
sub
stc
or
pop
sub
or
sbb
xchg
xchg
mov
cmp
ja
push
inc
jne
rcrl
lcall
jg
xor
jecxz
xor
cwtl
ja
mov
shr
sar
jle
cmpsl
cmp
femms
mov
jne
sbb
push
xchg
push
popf
adc
lds
mov
int
rcr
shll
loop
sub
mov
mov
mov
jl
mov
ret
stos
lret
xchg
mov
scas
cmpsb
adcb
mov
orb
inc
out
cmpsl
xor
aad
lods
pushf
inc
cs
jecxz
mov
adc
lret
popf
inc
ret
xchg
cmp
jnp
sub
mov
sti
sub
lret
xchg
fstp
xchg
sub
js
xchg
push
nop
lcall
ss
mov
mov
lods
mov
ljmp
js
jo
jo
pushf
pushl
jno
insb
adc
lcall
out
popa
jp
push
call
sub
lcall
adc
xor
lret
push
mov
fidivl
jp
push
insl
mov
cmp
pop
mov
rclb
test
jmp
or
push
push
inc
inc
out
push
test
cmp
pop
ja
inc
ja
loop
mov
mov
inc
mov
sti
jge
or
pop
test
loope
bound
dec
hlt
out
testl
mov
leave
fiaddl
push
push
lahf
jge
popa
test
scas
cmp
pop
sbbb
das
ds
inc
mov
dec
dec
mov
mov
push
mov
sarl
fdivrs
add
test
cmpsb
dec
movsl
ds
in
jecxz
mov
pop
mov
dec
sub
mov
ljmp
loopne
sub
sar
pop
enter
popf
mov
stos
pop
xlat
ficomps
icebp
fiadds
inc
jecxz
loop
loopne
ss
xor
inc
jl
jo
call
outsb
lods
mov
enter
mov
fwait
add
jle
lret
mov
sbb
jp
pop
mov
sbb
daa
push
hlt
push
in
sarl
inc
loop
mov
scas
loope
fcompl
and
mov
popa
rcrb
cli
cmp
pop
mov
loope
loopne
loopne
in
or
sub
aad
ret
aas
push
in
push
ds
sti
into
mov
flds
push
sub
push
leave
push
loopne
orb
inc
dec
add
jmp
int
scas
cmpsb
xchg
mov
imulb
cmp
popf
test
push
fcmovbe
popa
std
in
xor
cmpsl
xlat
movsb
xor
pop
xor
fldenv
cwtl
cmp
jb
je
push
int
xor
fdivl
cmp
testl
sbb
insb
cmp
jae
ds
xor
mov
sub
add
cs
push
loope
cld
or
pop
repnz
xchg
jo
pop
bound
loop
add
outsb
xchg
and
or
popa
xor
push
dec
pop
xchg
aam
stos
ss
lcall
jmp
sub
mov
sub
push
call
cmp
push
mov
cmc
shrb
adc
leave
data16
jae
mov
add
mov
add
rcrl
shll
pusha
fstl
inc
pop
add
jae
xchg
sub
add
xor
pusha
inc
jae
stos
idivl
xchg
sbb
push
and
mov
add
int
xorb
lea
adc
popa
dec
jg
lcall
ficoml
data16
hlt
xchg
andb
ficompl
fcmovb
out
fucom
sbb
dec
sbb
xchg
jg
ret
in
mov
addb
std
push
inc
or
push
out
fs
popf
sub
inc
lods
lret
loope
cmp
daa
mov
rorl
and
xchg
or
jb
sbb
arpl
lcall
pusha
test
push
jmp
in
jb
fldl
hlt
xchg
push
movsl
pop
popf
loop
xor
add
cmpsb
je
pushf
jg
fistl
lcall
insl
and
jge
mov
sub
lods
pop
add
fs
pop
rcll
cmc
mov
push
and
cmc
aas
adc
scas
jmp
cmpsb
dec
mov
andl
adc
int
pop
scas
jecxz
pop
adc
dec
mov
or
leave
fstps
jno
mov
cmp
sahf
or
fstl
jbe
lcall
jle
mov
repz
call
int
fnstenv
sub
pushf
push
bnd
push
cmp
cltd
or
adc
in
fists
dec
scas
lahf
jmp
fwait
xor
mov
into
lahf
jg
lods
cli
push
push
lret
cmpsl
inc
cmp
mov
pop
scas
scas
adc
cltd
or
popf
adc
jp
in
cli
lret
sarb
mov
in
mov
div
dec
movsl
cmp
aam
xlat
dec
test
stos
mov
jne
push
outsl
pop
push
jecxz
adc
cld
inc
mov
mov
movsl
jae
xor
stc
cltd
lret
aaa
jne
inc
jecxz
sub
stos
adc
xor
test
insl
inc
mov
add
fdivrl
lahf
fistps
jbe
stc
mov
lret
sarb
push
jmp
mov
es
dec
test
mov
adcl
mov
push
jne
bnd
out
or
mov
push
cmc
mov
xor
lea
dec
dec
xchg
xchg
inc
ds
mov
fs
xor
inc
jo
push
iret
test
gs
xchg
inc
dec
mov
pop
xchg
sub
ss
pusha
xchg
shll
aad
mov
and
outsl
fstpl
cmc
out
or
pop
sbb
or
cs
popf
mov
mov
in
in
movsb
pop
or
push
sub
fidivl
jp
push
lea
movsb
in
es
fstl
sbb
jae
fsubrl
movsb
jl
push
js
popa
outsb
xor
negl
add
out
mov
loope
dec
es
mov
scas
pop
sub
dec
and
rol
jecxz
sbb
dec
ss
std
in
aaa
outsl
pop
fdivrl
sbb
or
cld
loope
paddb
adc
cmpsl
sub
add
add
cmpsb
jns
mov
repz
imul
and
sbb
fs
xchg
mov
shrb
sub
push
rol
mov
mov
aad
pop
nop
jl
push
and
xchg
fwait
dec
sub
lea
inc
sub
cli
jb
loope
pop
loope
adc
fwait
mov
and
mov
out
dec
rcrl
pop
icebp
popa
ds
push
ljmp
test
fs
mov
dec
arpl
imul
imul
inc
or
outsb
pop
ds
into
and
xchg
insb
xor
mov
std
daa
cmp
aas
stos
dec
fadd
jmp
mov
jno
xchg
test
scas
sub
ret
popa
clc
cmp
ret
in
mov
xlat
or
xor
push
sub
cwtl
or
fistpl
pop
push
fwait
cmp
push
sti
mov
rcr
les
jmp
jle
lock
in
xchg
xchg
mov
pop
push
or
imul
or
mov
outsl
inc
scas
adc
cmc
dec
lea
xchg
ds
outsl
mov
push
pop
sbb
aas
dec
fbld
jl
mov
sub
cmp
movsl
mov
mov
repz
push
mov
sbb
hlt
dec
jno
ljmp
sbb
jns
sub
daa
loopne
pop
mov
push
cmpsb
dec
mov
mov
lret
or
pop
mov
sbb
xchg
cmc
sub
aam
icebp
imul
cmp
push
es
in
int3
cld
add
pop
mov
push
shll
les
cltd
mov
sub
pop
cmp
mov
pop
xchg
addr16
adc
aam
pop
lods
jbe
lcall
inc
ret
das
mov
inc
dec
in
dec
xchg
mov
lahf
pop
adc
xor
or
pop
cmp
jl
inc
pop
ljmp
stos
test
pop
jl
mov
nop
incb
movsb
sbb
ret
in
flds
addr16
aas
arpl
and
inc
pop
sahf
sbb
xor
fs
ret
stc
adc
into
icebp
dec
inc
and
movb
dec
shll
push
inc
push
xlat
fwait
std
pop
sub
xor
xchg
ljmp
and
xchg
dec
jp
add
out
dec
jp
je
les
lock
add
cmp
sahf
mov
int
call
data16
mov
cli
jg
loopne
xor
lods
mull
cltd
xor
gs
cli
in
ret
hlt
loopne
pop
gs
push
add
call
lahf
lods
push
sub
loopne
insb
mov
sub
mov
cmp
sub
into
fnsave
repnz
fsubs
jb
or
aaa
sbb
jnp
stos
aaa
adc
lret
pop
pushf
pop
imul
or
ret
mov
and
js
or
ror
and
movsb
push
and
hlt
jecxz
xlat
push
xchg
xor
paddusw
pop
out
mov
bound
jge
das
test
test
cmpsb
mov
push
dec
fsubr
sbb
repz
xchg
adcl
mov
sub
xchg
or
cmpsb
jns
fisttpl
jle
cmp
test
pop
ljmp
int3
pop
scas
aas
in
xor
jp
dec
mov
fsts
dec
dec
movzbl
mov
jmp
sahf
add
lds
pop
aas
in
std
mov
inc
dec
iret
cmpsb
sbb
sbb
jo
ror
std
std
stos
aam
das
dec
push
mov
mov
add
fiaddl
loope
scas
push
ds
mov
andb
mov
dec
sbb
icebp
in
shlb
into
fidivrl
fwait
and
inc
insl
pop
movsb
lret
js
in
movsl
pop
cmp
push
outsl
cmp
or
pop
lret
mov
mov
xchg
ror
jnp
into
aas
xchg
jb
cld
test
pop
pop
jno
into
cmp
aad
fstl
lods
mov
enter
sti
out
cs
cld
mov
lcall
jg
xchg
out
sub
mov
jne
and
in
jg
pop
out
fdivs
xchg
xchg
les
repnz
idiv
pop
stos
loopne
pop
mov
jnp
ret
dec
leave
lods
loop
xchg
adc
call
daa
xchg
add
or
mov
xor
jnp
cmp
add
xorb
sub
nop
ss
mov
cmp
cmp
movsl
aad
jp
xor
data16
das
addl
mov
xchg
add
mov
pop
rorl
in
data16
inc
adc
movsb
jmp
and
lahf
mov
shlb
imul
shll
rolb
mov
in
lock
mov
xor
mov
jmp
adc
inc
scas
xor
mov
lds
ficoml
lea
scas
lods
or
jno
mov
pop
fwait
mov
lds
out
in
add
xchg
pop
xchg
mov
sub
pop
mov
push
mov
mov
mov
arpl
popf
in
pop
iret
testl
out
and
std
sub
hlt
mov
shlb
ja
repz
adc
cmp
cmc
pop
cmp
lret
iret
ss
cmc
add
adc
xlat
fstpt
jp
cli
push
and
sbb
pop
lret
xchg
inc
mov
sbb
mov
dec
addl
jle
inc
sub
dec
ja
mov
jo
sub
sahf
jae
aam
adc
and
pop
repz
pop
inc
out
cmp
and
sub
ror
test
pop
and
jp
shrb
or
call
xchg
xor
mov
cld
push
push
push
jno
leave
popa
mov
or
and
pop
in
scas
xor
stc
add
pop
lds
es
inc
push
push
inc
push
rorl
loopne
cwtl
repnz
mov
adc
scas
mov
mov
xchg
test
and
xorl
lds
push
xchg
sub
jp
loopne
ds
gs
rcll
push
les
insb
adc
dec
dec
ss
xlat
cs
rorb
adc
mov
push
imul
out
dec
sbb
ja
xchg
pop
jae
addr16
mov
dec
roll
test
xor
out
out
push
lods
add
cmp
frstor
mov
enter
aas
sarl
fs
xchg
cmpb
mov
in
fstpt
sub
pop
test
xchg
cs
call
fsubs
mov
rcrl
sub
lret
in
and
das
ljmp
cmp
cmp
mov
cli
clc
lods
sub
call
call
ret
dec
movb
sarb
icebp
sub
inc
mov
sbb
inc
in
dec
pop
mov
and
sarb
pushf
out
mov
icebp
xor
sarl
push
movsb
mov
xchg
sub
adc
jmp
xor
pop
gs
mov
sub
sbb
or
sbb
pop
add
xchg
add
mov
jge
sbb
jno
rcll
das
add
enter
test
cmp
mov
scas
mull
jl,pn
add
aad
adc
or
xchg
fwait
in
sbb
inc
sub
psrlw
je
dec
scas
mov
inc
movsb
dec
xchg
add
roll
fcmovnbe
imul
outsl
add
arpl
daa
sub
addr16
xchg
mov
sbb
enter
icebp
insl
adc
lods
mov
or
rcrl
push
mov
adc
pusha
mov
fdivrl
xchg
icebp
jae
push
pop
mov
add
popl
int3
pop
sbb
int3
sub
lret
xor
sbb
dec
fidivrl
cmpsb
mov
jo
mov
jb
out
ret
jbe
ret
inc
subb
mov
jnp
sub
inc
sbb
pushf
sub
sbb
rolb
into
ds
lods
mov
mov
fcmovbe
jp
or
dec
mov
movsl
xor
cmp
iret
jle
scas
int3
std
out
xchg
ret
adc
push
add
sarb
ss
xlat
push
fildl
dec
stc
nop
xor
mov
xchg
rclb
cmp
cli
bound
call
inc
push
fwait
out
mov
into
out
js
add
sbb
mov
dec
sub
out
cld
mov
push
repz
ret
cltd
push
js
cltd
jnp
mov
jns
stos
lock
xchg
push
push
inc
adc
popa
xor
or
shlb
repz
es
in
sub
test
rcr
fcoms
sub
pop
lahf
test
push
adc
daa
push
push
sub
cmc
imul
fimull
fmul
das
rol
cltd
out
jg
fnsave
in
notl
test
and
lds
mov
push
mov
fsts
push
es
fs
movaps
inc
pushf
lret
cli
jle
fstpt
lods
loop
dec
mov
data16
mov
dec
xchg
sbb
daa
cmp
push
and
pop
adc
stos
jmp
inc
pop
pushf
stos
mov
ds
adc
pusha
pop
clc
adc
jns
mov
push
scas
sbb
pop
insb
mov
fs
imul
roll
lds
push
jo
add
xor
out
xor
aaa
rcll
jae
mov
xchg
addr16
in
jae
mov
in
xchg
inc
bndstx
popa
push
cld
dec
dec
adc
push
adc
rcrl
inc
fsubrp
or
add
xchg
shrb
sti
mul
dec
jle
outsb
and
cmp
js
mov
push
sub
mov
pusha
insl
lret
shrb
aad
xchg
daa
push
cmp
push
jl
in
lret
movsb
js
arpl
out
stos
add
imul
loopne
pop
iret
jns
imul
mov
sbb
sub
mov
popa
lea
movsb
inc
mov
hlt
ja
into
mov
jg
andl
test
in
jge
divl
mov
rol
mov
push
xchg
sub
dec
bound
shr
arpl
mov
rcl
repz
mov
mov
mov
mov
jnp
dec
cwtl
mov
xchg
dec
jg
push
gs
nop
cmc
out
fisubrl
lahf
subb
push
out
push
or
mov
inc
pop
dec
push
or
xchg
jo
test
ret
mov
enter
out
push
sbb
push
es
mov
out
adc
add
imul
jge
popa
repz
dec
stc
or
jae
lods
sub
loope
jge
xlat
mov
mov
dec
gs
adc
decl
push
adc
dec
and
xor
xchg
out
xor
lods
xor
jl
jp
cmc
iret
or
int
xchg
and
xchg
pusha
notl
daa
std
inc
js
xor
sbb
inc
dec
push
sbb
pop
bound
cltd
or
and
bound
gs
popa
or
inc
ret
adc
outsb
or
movsl
or
pop
frstor
mov
popf
scas
mov
fistpl
sbb
and
repz
jo
adc
dec
xchg
xor
sub
addl
mov
xchg
add
sub
cwtl
les
fs
push
pop
dec
ret
mov
xchg
inc
push
sub
jle
loopne
das
or
push
adc
test
sbb
jl
nop
shl
in
std
inc
int3
cltd
lret
data16
js
mov
sarl
test
fdivl
jg
imul
notl
jno
lret
sar
sbb
xor
push
jmp
jno
daa
xchg
fnstsw
daa
loope
adc
adc
cmpsl
iret
cli
push
addr16
mov
int
fdivrl
and
cmc
mov
sahf
sub
je
mov
fsubr
ss
popf
xchg
adc
scas
jnp
std
imul
mov
sub
sub
dec
cmpsb
push
imul
sub
add
adc
in
sbb
sbb
clc
add
xchg
pop
aas
jecxz
xor
adc
push
sub
pop
push
dec
adc
and
push
xor
sub
out
js
jp
dec
add
pop
push
iret
pop
enter
push
lahf
fdivs
jae
notb
push
sbb
pop
aas
push
mov
loopne
add
into
adc
push
shr
repz
jmp
dec
cltd
xor
push
scas
stos
push
dec
inc
adc
pusha
data16
adc
in
xchg
gs
sbb
pushf
pop
push
fwait
ret
pop
adc
out
jae
cmp
sahf
inc
cmp
fistl
cli
leave
fldl
sahf
inc
mov
ljmp
dec
add
pop
inc
push
imul
shl
std
hlt
les
dec
or
pusha
adc
pop
jnp
sbb
sbb
push
psrlw
in
insb
and
sub
mov
outsb
mov
xchg
fisubl
out
insl
sbbb
xchg
popa
xchg
push
mov
sarl
repnz
cmc
sarl
iret
in
xor
and
fstl
or
mov
mov
mov
scas
mov
or
sub
add
out
add
shr
mov
into
adc
loope
jg
pop
pop
into
cmp
xchg
sbb
mov
or
sbb
or
add
xlat
out
mov
aad
pop
jp
lahf
imull
push
cltd
cs
movsl
std
sub
dec
xlat
nop
add
cmp
enter
mov
mov
js
inc
repnz
rolb
dec
sbb
push
ret
int
jle
hlt
sub
enter
pop
fninit
ljmp
push
adc
mov
cmp
push
jle
pop
sbbb
ss
out
addr16
call
mov
std
test
scas
mov
xlat
cmp
and
idivl
pop
mov
les
out
mov
xchg
stos
adc
jmp
dec
insl
mov
into
icebp
mov
pop
sbb
mov
scas
xchg
pop
jle
repz
imul
ja
push
and
push
mov
shl
xchg
adc
scas
sbb
jne
mov
cmp
or
cld
sbb
pop
lahf
xchg
push
movsb
cmc
pop
icebp
pop
xchg
mov
lds
cwtl
stos
call
push
push
lcall
imulb
cltd
in
push
inc
jno
mov
ds
orl
scas
or
push
jne
mov
mov
jge
into
fwait
sub
adc
loopne
aaa
dec
cmpsb
mov
mov
xchg
aaa
jno
xor
out
inc
je
pop
movb
out
fstl
pop
rorl
data16
push
pop
popa
out
stc
add
dec
sbb
dec
cld
mov
sahf
roll
stc
jge
into
mov
movsb
push
inc
je
aaa
cmpb
pusha
xor
mov
mov
and
pop
aad
inc
xor
imul
fmuls
push
mov
inc
sarl
push
mov
adc
or
sbb
inc
dec
sbb
pushl
lahf
hlt
fcoms
mov
ret
push
or
ds
mov
loopne
cmpsl
aam
incb
cmp
or
pop
add
push
mov
ss
adc
xor
daa
sub
mov
or
movsl
jns
pop
insb
jl
outsl
insl
mov
or
or
idivl
cmp
fsubs
orb
cltd
bound
sahf
xchg
adc
jecxz
jne
adc
repnz
pop
mov
pop
ljmp
add
xor
or
movsl
jle
add
push
cmp
add
ss
sarb
pop
ss
mov
jmp
sti
jne
js
ret
repz
pop
fcoms
xor
jge
mov
gs
lcall
imull
imul
jae
sbb
stos
sarl
sbb
lahf
push
scas
mov
sub
and
push
pusha
ljmp
jne
mov
push
xchg
mov
cmc
pop
mov
push
dec
add
sti
testl
loopne
gs
add
inc
pop
jge
or
sub
mov
ja
repnz
lret
xchg
mov
jb
add
sub
and
testl
jp
xor
ret
jle
fisubrl
inc
insb
sahf
fstpl
clc
adc
lea
jno
loope
pop
jb
scas
decl
push
inc
inc
outsb
jb
mov
imul
pop
or
movsl
add
jnp
cwtl
xchg
int
and
jnp
add
cmp
rcl
loope
lods
gs
divl
movsb
xlat
xchg
xor
stc
xchg
repz
ret
and
lret
mov
notb
loope
mov
push
sub
cli
push
mov
call
mov
cmp
fstl
mov
sub
and
dec
push
pop
mov
push
aad
lahf
fsubrs
cli
pop
scas
aam
testl
inc
out
std
add
notl
test
in
test
movsb
cmp
inc
iret
or
dec
js,pt
cwtl
loop
mov
daa
fldenv
cmp
xor
pop
push
sysret
mov
adc
pop
repnz
cmpsl
lds
push
mov
jle
or
js
pop
mov
stos
xor
xchg
dec
jno
adcl
test
adc
xchg
in
xchg
adc
stc
rclb
xchg
jle
aas
clc
lret
js
daa
and
sbb
dec
and
in
das
jne
push
in
call
sub
insb
or
scas
jnp
out
cmp
mov
scas
fadds
mov
div
ss
clc
push
inc
popf
mov
aad
mov
std
jns
rorl
ret
inc
movsb
push
pop
dec
in
call
outsl
test
mov
and
int3
lahf
scas
sbb
popf
std
pop
out
mov
mov
mov
jae
or
sbb
jmp
lds
jno
ret
lret
push
or
loope
sub
cld
int
lcall
stos
in
jle
repnz
mov
and
sbb
adc
cld
mov
repnz
out
aas
mov
mov
fs
sbb
xor
popf
out
mov
dec
insb
dec
lea
push
mov
xchg
adc
stc
push
xchg
mov
sbb
fwait
jno
inc
sbbb
push
or
fistpl
push
insb
int
stos
push
cld
enter
jnp
sbb
adc
mov
fdivrl
out
jecxz
xchg
dec
in
cmp
lock
orb
repnz
pop
fstpl
cmpsb
rolb
add
pop
leave
icebp
push
adc
sbbl
dec
and
push
inc
jb
dec
sti
in
adc
cmp
sub
mov
aam
gs
mov
in
sbb
lret
lahf
mov
mov
fildl
ror
fwait
cmp
lods
cmpxchg
adc
jge
xchg
mov
js
stos
enter
pop
ja
inc
enter
add
negl
shrb
cld
shrb
stos
lcall
inc
lods
pop
out
xchg
setl
push
stos
mov
cmp
movsb
loop
push
add
and
or
lss
imul
shlb
popa
pop
jbe
push
mov
jecxz
cwtl
dec
push
xchg
insb
in
lret
ret
sub
xor
push
arpl
mov
ss
outsb
mov
adc
xchg
ficompl
jbe
cmpsl
ss
mov
movsl
lcall
data16
ret
call
sbb
pop
jae
mov
push
les
sahf
inc
ret
insl
xchg
fldcw
mov
dec
test
repz
inc
stc
mov
pop
xchg
shl
icebp
jb
pop
mov
fwait
adc
push
xchg
sbbb
mov
mov
and
xorb
xorl
or
stos
sub
and
lret
repz
sbb
int
out
popa
iret
pusha
adc
into
cmp
call
jno
stc
fstpt
nop
push
cli
add
sbb
mov
pop
movsl
clc
mov
jl
jbe
leave
fstps
cmp
les
loopne
push
add
pop
add
out
in
lock
gs
pop
jge
cmpsb
fstpl
push
xor
inc
mov
pop
sti
repz
loope
xchg
pop
inc
mov
shr
mov
mov
mov
push
cmp
ljmp
xchg
jno
sbb
mov
mov
and
ja
dec
lcall
push
nop
loopne
cltd
test
es
mov
ljmp
loope
or
aam
pop
gs
idiv
jb,pn
sbb
popa
jge
xor
cmp
cmpsl
clc
stc
arpl
adc
aam
pusha
in
dec
scas
mov
dec
and
movsb
test
fwait
loop
push
stc
stos
daa
das
inc
lds
stc
pusha
xor
mov
sub
add
xchg
inc
data16
cmp
out
out
cs
aam
mov
add
pusha
clc
jb
inc
mov
xchg
ss
ja
mov
jns
push
mov
repz
adc
inc
les
rcrb
jno
rcrl
ret
xchg
and
pop
andl
jnp
adc
jg
aas
dec
ja
jb
movsb
mov
or
nop
inc
gs
adc
inc
adc
dec
sub
and
jmp
cwtl
sub
mov
arpl
adc
nop
sub
in
movsb
jo
and
mov
mov
fisubrl
mulb
aam
outsb
int3
leave
or
xchg
stc
cli
xchg
sahf
pop
ljmp
dec
pop
mov
inc
loop
insl
in
mov
sahf
or
adc
cmc
fcom
pop
jns
mov
and
sub
dec
inc
mov
pop
lock
stos
mov
movsl
add
mov
jb
aam
int3
sbb
iret
cli
ds
xchg
add
jmp
jns
std
and
push
cmp
incb
sub
mov
sbb
mov
push
jmp
cmp
pop
fcompl
xor
orb
jmp
pop
xor
pop
outsb
sub
dec
or
fsts
lret
hlt
push
mov
push
stos
cld
mov
testb
lcall
dec
divl
sub
lock
shrl
push
inc
out
jns
scas
lds
je
cmp
icebp
push
jbe
xchg
jg
lcall
imul
xchg
popa
cld
mov
sbb
add
fldenv
fsubrp
mov
fisubs
add
movsb
stos
mov
loopne
fdivl
adc
dec
cmp
and
arpl
std
mov
cmp
mov
out
cmpsl
out
jl
in
sbb
js
test
mov
mov
cmp
repz
cmp
rcrl
push
push
mov
xchg
cmpsb
fadds
xor
dec
out
xchg
mov
sub
inc
cwtl
pop
out
or
inc
pop
mov
pop
inc
mov
cmc
pop
loope
push
xorb
ret
adc
fdivrs
pop
cmp
mov
arpl
shrl
pop
cmp
xchg
sub
xlat
jmp
je
mov
xor
movsb
inc
jecxz
sbb
int3
xchg
mov
cmp
push
inc
inc
popa
push
jecxz
dec
jb
imul
mov
sub
popf
adc
out
mov
sub
lea
push
adc
lcall
shrb
sbb
lds
sbb
jb
jl
or
push
jp
iret
negb
adc
inc
xorl
push
ret
ja
sub
and
pusha
xchg
lods
mov
mov
sarb
fbstp
inc
mov
fcoms
mov
shl
mov
insb
mov
pop
add
or
xchg
mov
push
add
or
push
in
mov
sbb
xchg
mov
dec
mov
das
ja
sub
xor
sti
push
fprem1
jae
sub
sbb
lds
add
jbe
loopne
fs
mov
sub
xchg
mov
jmp
sbb
cmpsl
imul
sbb
mov
rorb
sbb
xor
sub
mov
jo
sti
push
fcmovb
loopne
sub
movsl
cmp
push
sub
cmp
lds
clc
push
push
dec
and
dec
push
push
dec
cs
lahf
test
and
lods
fstpt
sub
movl
jle
push
int
dec
leave
pop
mov
add
adc
xor
push
js
lcall
jecxz
xor
lods
jmp
pop
mov
stos
sub
mov
rcrl
mov
pop
pop
mulb
mov
movsl
aaa
imul
rorl
jg
add
adc
cmpsl
aam
les
out
xor
push
idiv
and
orl
jge
aad
fcmovbe
xor
mov
and
jo
push
icebp
je
test
sbb
test
pop
jns
inc
lret
sbb
insb
xor
mov
cmp
mov
nop
dec
aam
dec
dec
ret
ja
and
mov
shrb
out
sub
push
shll
sahf
xor
inc
push
push
cli
pop
inc
sub
dec
pop
pop
cmp
data16
arpl
cmp
insb
insb
add
ret
loope
mov
mov
gs
xchg
inc
cmp
jmp
adc
mov
add
test
add
pop
push
sar
insb
dec
mov
sbb
jp
adc
xchg
clc
es
jnp
gs
mov
push
fsubs
roll
mov
or
test
sub
adc
dec
mov
cld
pop
les
push
xchg
inc
or
mov
or
pop
adc
inc
xchg
or
imul
mov
rclb
in
mov
insl
xchg
push
mov
cli
xor
inc
xchg
jle
mov
subl
jbe
and
ret
out
incl
outsl
fs
and
lock
imul
sarl
mov
dec
jo
lods
xor
dec
aas
pop
push
and
test
in
jo
loope
push
ret
jns
xchg
pushf
and
add
add
sti
jmp
cwtl
test
xorl
sbb
push
out
stc
or
push
sbb
sub
pusha
scas
or
pop
push
movsb
addr16
leave
jge
jne
mov
call
enter
inc
ljmp
xchg
mov
fnstcw
dec
sbb
cmp
movsb
scas
pop
adc
in
aas
insb
and
pop
cmc
and
stos
leave
sbbb
pop
in
aaa
leave
sbb
out
and
push
das
dec
insl
add
test
ljmp
xchg
popf
push
push
cwtl
imulb
scas
mov
insl
pusha
ss
insl
movsb
rcrl
loop
es
dec
jge
insl
push
mulb
mov
jnp
test
jmp
push
jno
fucomip
out
sub
loope
xorl
push
and
sub
ja
push
add
insb
push
xor
imul
jno
cmp
test
roll
hlt
mov
aas
adc
std
add
int3
jmp
pop
in
push
in
xchg
imul
cmp
iret
cli
cmp
adc
xorl
fcmove
ret
insl
lret
icebp
outsl
icebp
sbb
leave
loope
jmp
pop
add
dec
ret
dec
mov
dec
dec
mov
mov
dec
shlb
imul
jle
das
jecxz
xchg
dec
sbb
or
inc
mov
in
cmp
dec
mov
add
jl
xor
adc
jne
inc
mov
rcll
add
int3
ss
push
pop
push
scas
in
xor
testb
lds
mov
lret
xor
push
cmp
fsubrl
xor
sub
jno
loop
add
sbb
and
sbb
cmpsl
rclb
jae
cltd
repz
idivl
test
sub
xchg
les
jns
mov
mov
inc
in
in
es
test
sti
jne
mov
cltd
or
js
icebp
mov
aas
frstor
aad
out
cmp
xor
mov
mov
ret
ss
mov
hlt
xchg
and
stos
mov
fs
cs
int
lock
or
and
ficoml
ret
lds
pop
and
shrl
mov
jge
jle
stos
mov
test
outsl
maskmovq
negl
addb
repnz
and
clc
xlat
xor
fcomps
fidivl
or
jne
xlat
mov
push
sub
mov
cmp
in
add
inc
movsb
std
fldenv
xor
cmp
push
clc
data16
push
add
sar
pop
pop
inc
mov
call
sbb
cs
ret
mov
cmp
sbb
scas
lea
pushf
jo
std
pushf
or
div
sub
dec
mov
push
cmp
push
jns
or
pop
sahf
std
adc
clc
mov
jb
dec
flds
adc
cmp
cwtl
enter
mov
jae
xchg
xchg
xlat
jae
mov
cmp
cmp
jbe
or
rcll
jp
repz
mov
in
ljmp
add
jno
addr16
inc
sti
iret
add
cmp
or
add
xor
shlb
int3
dec
or
xor
test
mov
stos
hlt
cmp
and
xor
pusha
arpl
ror
dec
imul
adc
sub
xor
mov
lods
xor
jg
push
int
ljmp
mov
add
xor
insb
adc
jp
outsb
jb
test
xor
fildl
adc
fdivs
and
jle
or
lds
rcrl
int3
fcmovnu
lret
mov
jno
cmp
xchg
xor
or
out
lret
mov
jne
cmp
jo
jl
ja
mov
mov
push
mov
nop
push
xchg
pop
inc
jae
jmp
pop
jge
inc
inc
and
mov
ss
sub
or
mov
daa
or
jne
nop
push
cmpsl
sub
mov
mov
xor
movsl
ret
sub
sub
cwtl
aam
je
xor
loope
in
add
mov
stos
xchg
pop
test
daa
jecxz
stos
fnstsw
push
add
std
dec
and
out
lcall
fnstsw
mov
cwtl
jmp
xor
test
insb
dec
out
jo
aam
inc
out
lret
mov
xor
je
xchg
fcom
outsl
cmc
xchg
iret
pop
fimull
sub
cmpsl
xchg
rol
sbb
xor
push
push
addr16
xchg
push
mov
mov
or
xchg
mov
aam
nop
or
stos
inc
sbb
xlat
cmp
jne
sub
dec
mov
mov
int
sbb
repnz
je
inc
mov
divl
iret
push
pop
stos
loop
sub
adc
lds
iret
xchg
dec
aad
sahf
add
pmaddwd
mov
rorb
sub
fbld
push
pop
sub
dec
or
or
push
clc
mov
sub
sbb
mov
jns
jns
sub
pop
or
sbb
push
lea
adc
imul
stc
test
sub
push
xchg
lret
cmp
or
sub
pop
sub
jmp
lock
xor
cmp
outsl
mov
cmovg
sub
mov
incb
add
cmp
sub
sub
dec
shlb
pop
scas
dec
sub
lahf
int
mov
xchg
cmpl
repz
out
mov
fdivrl
mov
fs
xchg
adc
mov
psubb
rclb
sub
imul
fs
fnsave
js
or
icebp
push
nop
add
js
out
addl
push
mov
mov
dec
das
mov
and
xchg
inc
fnstsw
push
das
or
cli
aam
je
lea
dec
lcall
out
jae
cmp
or
jne
iret
adc
xchg
add
pop
dec
jle
add
lret
jne
sbb
mov
jns
loop
xorl
mov
push
out
sbb
arpl
scas
inc
or
and
jno
ss
jae
mov
les
mov
aas
insb
pop
mov
outsl
mov
xchg
outsb
mov
xchg
nop
inc
mov
mov
inc
repnz
std
sbb
pop
popf
incb
push
mov
pushf
bsr
adc
mov
fwait
pop
mov
enter
aad
loope
sbb
jg
push
lahf
mov
int
ljmp
mov
adc
pushl
push
call
or
inc
sbbb
push
loop
mov
fidivrs
mov
rolb
mov
stos
aam
ret
subb
cmpsl
aad
test
dec
sbb
add
sahf
ljmp
jns
push
mov
jp
xor
mov
dec
or
ret
pop
xchg
push
lods
cmpsl
cs
ror
and
stos
dec
ja
jnp
adc
shll
sbb
or
mov
gs
sub
decl
out
loopne
pop
addr16
shlb
test
test
scas
cmpsl
push
scas
insl
push
or
lahf
shll
cmp
mov
jbe
adc
adc
and
out
int
and
fcmovnb
pop
adc
and
fmul
dec
mov
or
addr16
adc
jbe
dec
fwait
dec
insl
cs
fldenv
mov
fwait
addr16
push
and
add
mov
jo
icebp
sti
loopne
push
mov
push
cltd
dec
xchg
cmpb
rorl
rcrl
je
adc
dec
or
cmp
hlt
addr16
mov
xor
test
int
pop
jne
insb
sub
sbb
jg
lds
and
sbb
out
mov
fidivrs
push
adc
mov
push
jo
xor
inc
stc
mov
jmp
mov
sub
lcall
dec
push
push
add
lock
adc
jns
mov
mov
dec
lods
mov
or
jecxz
sub
xor
mov
psrlq
or
mov
rcll
out
test
les
pop
pusha
in
push
sub
cvtpi2ps
jl
addr16
dec
adc
ja
mov
and
mov
out
cmp
jmp
jg
xor
call
xlat
sbb
jle
mov
dec
test
leave
mov
std
push
test
adc
les
das
xor
sub
pop
mov
out
hlt
out
lds
jmp
lcall
mov
or
sub
dec
lcall
imul
mov
and
into
pushf
aad
xchg
inc
adc
and
sub
jmp
or
sub
sbb
aas
pop
pop
push
mov
js
dec
xor
daa
dec
cmpb
idivl
int3
dec
mov
pushf
enter
inc
je
xchg
fistl
into
adc
mov
xor
push
insb
mov
out
cmp
jl
push
pop
cltd
adc
sahf
stos
int3
test
mov
pop
lahf
push
insl
imul
mov
jmp
cmpsl
outsb
push
adc
jae
test
push
sarb
fwait
mov
bound
sub
lds
outsl
mov
or
inc
and
pop
adc
mov
sti
gs
xchg
rcrb
mov
inc
xor
lds
add
aas
or
lock
mov
mov
jecxz
fisttpll
les
call
mov
in
adc
shl
sub
mov
aam
rcrl
scas
hlt
pop
mov
jmp
push
fsubrs
stc
cmc
add
mov
sub
test
outsb
cwtl
lods
outsl
shll
sti
int
xor
lret
scas
test
orl
mov
xor
push
mov
add
sbb
xchg
mov
gs
mov
outsl
pop
out
addr16
pop
mov
pop
fsub
dec
stc
jae
adc
sbb
std
leave
cli
in
ret
ljmp
lock
xchg
scas
out
shl
add
insl
sub
loope
data16
test
jb
imul
inc
mov
cwtl
sbb
mov
or
mov
ret
lret
pop
int
or
cmp
clc
add
inc
add
fists
mov
es
test
call
mov
jp
je
pop
dec
popa
das
jae
mov
add
fcmovu
out
repz
sub
jb
add
mov
pop
or
add
out
pop
add
mov
fisttpl
pop
dec
aam
dec
js
lock
pushf
cmc
ret
xchg
mov
lods
pop
mov
das
pop
arpl
jecxz
xchg
shlb
mov
inc
pop
pop
lods
fsubs
xchg
and
jl
sub
jl
lds
jnp
or
mov
and
adc
dec
inc
dec
shl
pushf
ftst
gs
dec
mov
sbb
jg
cltd
jnp
pushf
push
dec
outsb
mov
xchg
xchg
lea
adc
sar
dec
adc
mov
sti
fisubrl
lea
popa
and
xchg
enter
push
imul
xorb
push
mov
ljmp
pop
adc
lret
xor
add
pusha
add
adc
lret
pop
fdivrs
imulb
jmp
pop
add
lea
jmp
ja
xchg
push
inc
xlat
mov
dec
insb
adc
jp
sbb
arpl
push
and
adc
into
mov
std
xchg
aam
mov
push
mov
or
mov
rol
dec
inc
jbe
stc
or
ja,pn
popf
shll
cwtl
fnstcw
push
jne
mov
leave
add
mov
aas
cmp
in
mov
test
test
rorl
pop
dec
popa
push
inc
sbb
add
push
push
mov
imul
pop
cmp
sbb
sbb
add
mov
jl
movsl
xchg
es
jle
jle
mov
cmp
test
xchg
mov
je
inc
loopne
jb
dec
mov
mov
sbb
cmp
fldenv
mov
fcomip
and
xchg
push
jnp
xor
stos
cmp
in
sub
imul
mov
ds
and
sub
push
std
loopne
aad
mov
arpl
popf
push
pop
sbb
std
jo
push
fld
lea
sub
in
push
outsb
cmc
fisttpll
repnz
xchg
scas
lods
xchg
pop
xchg
ret
cmp
lds
jp
cmp
sahf
clc
sbb
and
lods
orl
cmp
ds
loope
lahf
out
sbb
push
adc
fldl
xchg
pmullw
insb
pop
cld
xchg
loopne
xchg
push
lcall
xor
jge
ljmp
xlat
pusha
jbe
xchg
xchg
lods
jecxz
and
out
add
mov
insb
inc
pop
out
sbb
mov
inc
mov
xor
sbb
push
jne
xchg
addl
lods
in
pop
pop
shl
mov
lods
fistpl
cmpsb
pop
scas
lcall
add
lods
out
push
xchg
pop
push
iret
cmpsl
in
outsl
mov
sti
pop
dec
stos
mov
call
sub
rclb
out
int
addb
xchg
cmc
jmp
push
clc
fld
in
jno
push
cmp
out
dec
push
in
cltd
mov
xchg
push
push
cs
sti
arpl
jns
add
mov
stos
pminub
or
lods
xor
pushf
pop
or
lods
les
cmp
xor
dec
mov
les
fldcw
add
cmp
pop
adc
mov
icebp
aas
insb
mov
gs
daa
adcb
adc
sub
dec
sub
xchg
aad
sahf
nop
cltd
push
add
push
lret
arpl
ja
lds
or
loop
xchg
insl
test
push
iret
add
dec
adc
addl
sub
in
mov
add
mov
or
shll
loopne
fwait
notb
insl
out
sbb
adc
ret
cmp
inc
inc
mov
das
jae
int3
icebp
xor
test
enter
daa
jae
xchg
aad
in
cs
sbb
dec
pop
loopne
fcmovnbe
shrb
xor
enter
negb
dec
enter
dec
and
call
mov
ds
out
aam
dec
mov
add
dec
aad
ret
jge
test
push
scas
jle
nop
rcrb
into
or
test
xchg
push
repnz
mulb
mov
int
sub
mov
push
fmull
pop
orl
dec
arpl
out
outsl
loopne
dec
inc
mov
sbb
lret
mov
lods
sub
add
adc
and
inc
sub
lods
das
or
dec
cmp
mov
cli
mov
and
aam
xchg
inc
push
fwait
in
jb
in
xchg
fwait
outsw
or
lds
lods
mov
push
movsb
adcb
lahf
decl
xchg
cmp
jle
sub
aad
sub
and
sub
adc
roll
cltd
pushf
pop
cmp
mov
or
pop
js
cltd
mov
int
add
ljmp
add
pop
imul
xor
pop
and
adc
data16
sub
je
aad
scas
lcall
inc
push
sbb
mov
push
inc
pop
mov
mov
lock
out
push
fwait
push
mov
push
iret
fwait
pop
in
shr
adc
loope
push
add
lock
xor
dec
insl
scas
cltd
pop
sub
jge
fstpt
bound
adc
inc
and
pusha
shrl
jne
outsl
das
sub
xor
jo
lret
sub
jb
pop
jge
sarl
xchg
add
mov
lret
in
clc
cwtl
into
dec
add
inc
add
jg
or
jae
testl
and
out
sub
pop
rcrb
hlt
inc
cmp
pushf
and
add
rcr
sbb
pop
cmp
sub
jmp
leave
mov
aad
add
and
sub
jl
cmp
mov
scas
sub
cld
mov
lahf
dec
jb
das
sub
outsb
pop
inc
scas
dec
mov
adc
lahf
xchg
and
pop
push
pop
addr16
scas
les
sbb
add
in
jns
hlt
sbb
negl
pusha
daa
dec
aam
ja
repz
scas
imul
add
inc
cmp
inc
xchg
movsb
shlb
outsl
loop
inc
xchg
enter
xchg
mov
in
xchg
sbb
sarl
movsl
shll
popf
mov
jnp
dec
inc
hlt
fcom
push
scas
incl
insb
cmpsl
pusha
clc
push
push
shr
fs
push
jbe
cmpsl
jno
adc
jmp
mov
cmp
aas
xchg
xor
mov
fldl
int3
imul
mov
shll
mov
and
xchg
enter
push
inc
jb
insl
or
or
dec
push
mov
sbb
aad
jl
add
xor
push
push
mov
in
inc
jmp
cmp
jne
iret
and
in
jb
nop
rcrl
in
add
xchg
inc
fldt
inc
imul
cmc
sub
mov
jge
ds
loopne
push
mov
fisttpl
xchg
mov
mov
ljmp
mov
mov
xor
add
dec
cmp
pop
and
xchg
cltd
xor
mov
cmp
and
pop
shrl
mov
xchg
ret
ss
sti
add
xchg
pop
xorb
out
stos
adc
es
mov
jae
xor
test
add
add
rcrl
mov
mov
and
cmpb
or
sbb
xor
fisttpll
arpl
jg
test
dec
sahf
xchg
mov
and
mov
cmp
cwtl
mov
jnp
hlt
mov
cltd
pop
sbb
and
out
idiv
jnp
inc
dec
xor
movsl
int
add
sbb
shrb
sysexit
and
out
pop
jns
icebp
cmp
xchg
push
xchg
fildl
xchg
jns
js
pop
and
push
sbb
mov
sbb
mov
mov
mov
in
jl
cmpsl
pop
pop
scas
xchg
and
cmp
imul
xor
in
push
int3
xchg
pusha
dec
inc
jle
inc
push
add
imul
out
idivl
or
out
js
xchg
cmp
sub
mov
nop
imul
jae,pn
incl
lds
sub
xor
and
xchg
out
stc
xchg
in
testb
mov
xlat
std
ds
inc
push
push
pop
cmp
pusha
adc
jbe
ljmp
imul
adc
inc
lret
push
mov
push
jmp
push
mov
push
into
out
and
dec
loop
movsb
pusha
stos
and
xor
enter
push
lods
leave
pop
adc
idivb
gs
popa
mov
clc
imul
xchg
push
pop
ja
lahf
js
add
iret
cltd
jp
inc
leave
aad
cmp
adc
lahf
inc
int
inc
cmp
popf
clc
cmp
sahf
sbb
push
stos
cmc
jmp
pop
ljmp
jnp
out
ret
adc
aam
xor
jmp
test
popa
push
add
sub
in
cli
shll
repz
adc
and
mov
xchg
cmpsl
add
and
jns
add
push
push
imul
pushf
or
sahf
mov
test
xchg
push
xchg
test
jmp
mov
xlat
jns
and
ja
mov
push
int
cltd
cltd
ja
cmpsb
mov
pop
pusha
pushw
lods
add
push
addb
pop
mov
inc
cmpsb
xchg
push
outsl
cmp
addr16
adc
fbld
fdivrs
pop
jg
adc
push
fs
inc
ror
dec
cs
jecxz
jg
xchg
iret
das
inc
pop
push
or
xor
inc
fstps
lock
jge
stos
dec
xchg
add
dec
and
dec
rolb
sub
xlat
sub
sbb
ret
mov
inc
mov
rcrl
movsl
and
movsb
hlt
push
andl
dec
in
test
xor
data16
push
sub
outsb
lahf
adc
xor
adc
cmp
fucomi
cmpl
pop
test
sub
loop
loope
dec
sbb
hlt
jmp
rcll
cmpsl
jno
sbbl
cmpsl
sub
adc
addr16
xchg
push
mov
cwtl
scas
shrb
add
cmp
push
icebp
lret
je
jno
adc
mov
ret
outsb
repnz
sar
mov
js
mov
lods
fmuls
repz
cli
fcmovnu
test
lret
nop
outsl
shlb
insb
pop
pop
out
cld
cmpxchg
mov
jnp
stos
push
and
and
cmp
cmpl
cmc
fisubrl
pushf
mov
xchg
xor
sbb
dec
bound
mov
xchg
scas
or
xchg
adc
mov
mov
das
xchg
imul
pop
dec
jne
ljmp
push
xchg
jecxz
pop
push
pop
out
daa
popa
jns
xor
cmp
rorl
or
push
sbb
push
mov
cmc
into
xchg
jae
pop
xchg
adc
pusha
cmp
outsl
dec
es
nop
int3
xor
inc
sahf
test
pop
xorb
std
into
les
xor
xchg
or
jns
int
cmp
scas
adc
lods
mov
mov
xor
cli
fs
push
leave
into
add
push
jge
repz
push
sbb
pop
sti
xor
cmp
push
loop
dec
lcall
jp
xchg
adc
jno
lcall
int3
incl
clc
xchg
shll
popf
push
and
addr16
xchg
ret
aaa
push
sarl
and
scas
scas
add
adc
testl
lahf
or
sti
call
xchg
iret
call
stos
imul
xchg
pop
jge
in
lds
rcr
sbb
ss
out
jb
aaa
or
jno
jnp
ljmp
or
and
xchg
adc
mov
push
lods
popf
add
jne
pop
adcl
adc
in
arpl
mov
push
iret
stc
cmp
adc
decb
push
imul
jae
lods
add
mov
pop
or
mov
add
call
outsl
fiadds
pop
iret
push
call
pop
adcl
lods
rcl
add
sahf
mov
aad
in
inc
dec
test
stos
sbb
fcmovnb
add
outsl
pop
fisttpll
xchg
shll
sub
xchg
cmc
or
mov
hlt
lods
fwait
sar
push
cmpsb
xchg
mov
in
arpl
push
sub
outsl
jo
sub
mov
mov
lret
xchg
push
or
stos
sbb
mov
cmp
xchg
adc
sub
data16
loop
loop
adc
xchg
pusha
adc
inc
cmpsb
sbb
push
xor
les
or
or
in
lock
andl
sbb
dec
and
ret
sahf
imul
push
insb
cmp
ja
sbb
and
jmp
mov
xchg
les
jo
enter
shlb
add
push
popa
scas
pop
movb
mov
push
push
icebp
loop
les
cmp
cmpb
int
dec
dec
aam
jne
cmp
cmp
leave
jmp
mov
or
mov
and
or
arpl
jnp
xor
or
ljmp
mov
dec
push
js
jns
jae
mov
mov
jle
push
sbb
arpl
mov
sub
inc
xchg
inc
dec
sub
mov
add
push
jne
loop
lock
je
inc
xor
stc
push
adc
mov
mov
test
cmp
lds
or
push
mov
loopne
out
push
icebp
inc
call
lret
and
in
mov
sub
xor
jge
mov
loope
mov
sahf
imull
jbe
lcall
ficoms
pop
cmpsb
xor
enter
repnz
cmp
pushw
push
loope
inc
std
inc
adc
dec
lret
xchg
push
lods
clc
sbb
clc
call
or
jo
push
cmc
cs
fdivp
test
jae
cmpsl
jae
int
inc
sub
lret
pushf
icebp
into
mov
ds
insl
cmpsb
addr16
sbb
out
gs
dec
mov
sub
or
rcr
in
xor
push
hlt
rclb
std
repnz
or
hlt
or
sub
aam
pop
adc
and
in
ljmp
cmp
xor
das
sub
or
js
pop
test
pop
cmpsb
add
leave
nop
std
or
xchg
cli
sub
add
fisttpl
push
shrb
push
or
jmp
popa
fistps
dec
aas
xchg
jl
push
mov
daa
mov
mov
sbb
outsb
ds
loope
leave
mov
mov
mov
add
cmovae
cmp
dec
mov
les
aam
orb
jl
test
adc
sti
pop
data16
jge
and
mov
xchg
cmp
mov
cmp
das
jmp
xchg
jl
push
add
xchg
out
xchg
sbb
sub
setle
lret
dec
loopne
pop
call
sbb
stc
xchg
dec
inc
out
jno
xor
adc
xchg
lock
mov
mov
repz
or
pop
dec
add
test
sub
pop
sti
sub
fadd
lret
cmpsl
cmc
nop
es
cmp
mov
sub
sti
pop
jmp
mov
cmp
aas
ja
roll
pushf
and
pop
add
cmp
pop
push
ss
or
adc
insl
mov
clc
notb
pop
ljmp
fistps
and
xchg
pop
jmp
pop
xor
aaa
add
cmp
adc
mov
in
ficoml
jl
mov
and
cmpsb
dec
push
fimull
fwait
mov
mov
bound
imul
shl
mov
cmc
popa
jecxz
cmp
mov
lcall
dec
inc
pop
mov
pop
iret
rol
idivb
test
adc
jae
push
lret
ret
clc
sub
sti
add
cmp
xchg
stos
sub
cmp
mov
fists
outsb
rolb
mov
mov
jae
out
shl
xchg
add
imul
ljmp
add
repnz
shrb
imull
push
mov
mov
xchg
sub
adc
out
or
aad
and
sub
dec
push
call
lea
stos
clc
jp
sbb
insl
cmp
xorb
test
fisttps
or
add
xor
add
fdivr
xchg
dec
mov
loop
mov
out
adc
adc
mov
rorl
push
dec
test
mov
cmp
notb
jl
cmp
sbb
ja
lods
loope
repnz
inc
add
add
xor
jmp
call
div
sub
adc
jbe
idivb
into
lcall
arpl
mov
sub
cmpsl
dec
lcall
lahf
jmp
insb
ds
mov
sub
pop
fldt
dec
lcall
cwtl
call
mov
fcmovu
jo
jae
js
push
cs
jnp
out
xor
push
xorb
aaa
inc
popa
mov
inc
adc
or
and
push
cmp
jecxz
aam
sub
mov
push
xchg
pop
leave
test
dec
jg,pn
arpl
adc
loopne
sub
hlt
xchg
xchg
pop
jne
cmp
call
add
cltd
xchg
lds
sub
jne
sarl
loopne
out
js
sub
outsb
xchg
call
stc
in
and
sub
mov
add
jb
ds
pop
imul
cmp
xchg
cmpsb
lret
stc
test
push
mov
lahf
xchg
sahf
fsts
es
es
sub
inc
inc
lea
aas
push
mov
imul
xchg
sbb
xchg
add
pop
fistpll
sub
mov
test
cs
xor
mov
sti
movsl
xchg
sub
cltd
dec
sbb
jae
scas
shr
add
adc
jg
test
dec
cmp
arpl
das
jle
mov
cli
jo
paddsb
xchg
scas
or
xchg
dec
push
clc
fisubrs
call
cmp
jmp
mov
imul
sti
hlt
mov
sub
mov
inc
jecxz
lret
inc
stos
mov
nop
outsb
pandn
loopne
xchg
pop
and
inc
adc
aaa
rorb
or
in
iret
rorl
pop
or
fwait
cmp
mov
jns
adc
in
mov
lcall
inc
fs
mov
dec
cli
push
cwtl
in
jbe
mov
add
loope
cmpl
outsb
test
pop
pop
je
imul
aas
bound
dec
hlt
loope
loope
icebp
sbb
faddl
add
sub
sub
fsubl
test
sbb
push
push
and
cmp
bound
js
outsl
jl
std
adc
jne
leave
stos
dec
mov
sub
bound
int
popf
lret
ss
mov
out
add
xchg
adcb
and
inc
xacquire
lock
mov
je
push
sub
inc
adc
adc
mov
fldl
mov
dec
cmp
enter
sar
fbld
or
clc
inc
sub
mov
ret
shlb
mov
in
jmp
fldenv
dec
push
bound
mov
push
jo
dec
dec
int3
cwtl
adc
cmp
idivl
xchg
in
in
dec
test
daa
cmpb
pop
movsb
test
xchg
stc
pop
mov
gs
and
push
aam
in
aaa
adc
idivl
pop
xor
pop
add
jl
cmc
ja
daa
cld
jne
fldcw
pushf
xchg
mov
cmpsl
and
test
cmc
stos
jnp
push
fistpll
in
jl
lret
mov
mov
js
pop
ja
nop
mov
sub
jge
mov
push
shlb
out
jl
std
push
push
push
aaa
push
aas
add
aas
mov
mov
inc
mov
mov
sar
pop
mov
jnp
aas
cld
pop
sbb
nop
xor
mov
ret
je
clc
push
das
jge
add
sub
push
hlt
ds
push
pop
xor
lret
loop
xchg
aas
inc
sbbl
sbb
jno
out
movsl
jecxz
xchg
push
jg
or
popa
mov
imul
cli
jle
sbb
mov
inc
mov
adc
ds
and
mov
fs
xorl
int3
push
call
pop
cli
sbb
ljmp
mov
mov
shlb
hlt
and
mov
fists
mov
outsb
inc
iret
je
cmc
xchg
mov
inc
hlt
rol
shll
nop
jmp
sub
inc
mov
cwtl
jg
cmp
dec
sub
ljmp
sub
jmp
pop
push
cmp
inc
out
inc
orb
sbb
loopne
xchg
inc
cmp
test
mov
fimull
xchg
push
ret
cmpsb
jne
cmp
xchg
add
mov
push
inc
cmp
mov
sti
inc
outsb
ficompl
inc
hlt
jl
nop
jl
pop
jmp
test
adc
inc
push
cmp
sub
call
lahf
fadds
or
sbbb
mov
popf
stos
sbb
int3
out
sbb
and
subl
rcll
pusha
mov
lea
inc
add
jg
movsl
mov
mov
mov
dec
mov
jl
divl
jns
and
pop
mov
jo
sti
in
add
inc
fs
insl
leave
push
cmc
loope
imul
jbe
jbe
insl
mulb
mov
clc
xor
into
pop
pop
xor
jae
dec
pop
aaa
cmp
mov
add
add
and
lock
pop
mov
dec
test
repz
push
movsb
inc
mov
fs
leave
push
test
cmp
or
push
cmp
dec
jb
outsl
sub
push
scas
push
sti
or
jo
adcb
add
outsl
push
pop
leave
push
js
das
fistpl
testl
dec
jp
fstl
xchg
roll
mov
push
mov
push
sahf
pusha
sbb
out
dec
or
inc
je
ret
fs
push
mov
dec
pop
rcrl
add
or
cmpsb
cld
jne
inc
out
add
repnz
iret
jae
pop
movsl
pop
push
and
or
testb
push
xchg
mov
dec
jnp
das
xorb
jg
mov
jge
pop
xor
inc
sub
adcl
xlat
insb
out
jl
fdivl
sbb
mov
pop
xchg
jae
xor
dec
gs
or
xchg
jnp
popf
mov
push
xchg
js
into
ljmp
rcrl
mov
sbb
leave
xor
aaa
push
pop
dec
aaa
mov
pop
jg
jg
mov
and
inc
jo
add
xchg
pop
data16
sbb
sub
clc
faddl
out
lcall
rcr
lea
adc
stos
addr16
fistpl
movsl
jnp
dec
cld
fwait
cmp
jge
dec
iret
jno
pop
and
dec
dec
sti
in
push
das
outsl
lods
out
fdivl
push
enter
gs
sbb
loope
mov
mov
sbb
or
test
jmp
lods
scas
dec
lret
movl
imul
repz
inc
sbb
fcomp
mov
sbb
xchg
xor
into
pop
fnsave
jmp
xchg
xor
dec
loope
push
xchg
inc
xchg
aam
xor
or
cmc
sarl
push
mov
int
outsl
ss
dec
push
add
imul
xor
xchg
add
test
sbb
inc
push
and
test
mov
xchg
sub
scas
les
mov
mov
xchg
call
dec
sub
sti
mov
cmpsl
sub
mov
rolb
in
daa
pop
mov
rcll
xchg
outsb
lea
jne
enter
sub
push
push
subl
test
movsl
inc
xchg
repnz
cmp
mov
scas
inc
adc
mov
mov
xlat
mov
bound
fsubr
mov
mov
pushf
xchg
cmpsl
ds
and
adc
xchg
xchg
fcompl
repz
add
push
mov
and
xlat
stc
fimuls
into
out
outsb
xlat
and
jecxz
dec
js
inc
nop
ret
ja
jle
int3
incb
test
dec
stos
dec
leave
sahf
push
inc
xchg
cltd
mov
sbb
or
dec
cltd
out
dec
fiaddl
sub
lahf
jne
xor
jl
jbe
ja
nop
scas
cwtl
mov
inc
faddp
mov
loope
sbb
adc
cld
int
js
leave
xchg
mov
push
jbe
cmp
out
and
test
lock
adc
jmp
xchg
shrl
sub
dec
cli
movsl
cmpb
int3
adc
shl
cmp
sbb
cld
sbb
cmp
lea
xor
sub
inc
enter
xorb
mov
aaa
gs
movsb
int
cltd
and
xor
xchg
jnp
mov
pop
inc
and
fcoml
std
add
mov
in
jg
lods
sbb
or
data16
fs
sbb
mov
xchg
adc
ficoml
lods
dec
enter
cmpsb
pop
repnz
jmp
aaa
mov
lods
xchg
out
mov
xchg
jl
scas
dec
lods
andl
or
xchg
pop
pop
pop
jne
mov
push
lods
les
loop
inc
sbb
arpl
push
pop
dec
push
mov
ret
loope
adc
fldcw
push
insl
mov
iret
push
repnz
ret
iret
cmpsl
in
mov
push
fwait
xlat
cmp
es
mov
push
shr
repz
repnz
cwtl
stos
jnp
pop
add
push
dec
adc
sbb
mov
fwait
in
pop
mov
xor
test
outsb
jbe
mov
dec
jbe
aaa
mov
xchg
inc
mul
dec
int3
sbb
fisubl
cs
adc
xchg
loopne
inc
xchg
mov
fiaddl
data16
sbb
jmp
pushf
push
fistl
mov
mul
dec
out
jns
sub
pop
ds
movsl
mov
cmc
fcmovnb
mov
out
aas
push
jae
and
fs
jp
rcrb
les
rol
sub
stos
inc
cld
add
out
imul
cs
add
lret
xor
inc
mov
imul
mov
mov
sub
fnstenv
popf
imul
imul
nop
and
aam
push
iret
xor
cltd
sub
inc
cltd
xchg
nopl
sub
nop
xor
popa
inc
int
add
les
inc
mov
nop
cmp
iret
aas
scas
cs
xor
inc
xchg
add
inc
push
xchg
adc
inc
jo
ds
fs
pop
push
xchg
push
shll
pop
pop
enter
mov
rolb
loopne
xchg
mov
pop
insl
mov
lcall
dec
dec
adc
rcrb
mov
add
lret
xor
xor
xchg
int
movsl
imul
mov
out
sub
jns
shrb
loopne
add
aam
xchg
and
and
and
add
icebp
or
and
outsb
mov
mov
xor
mov
dec
adc
push
stos
cli
mov
jno
insb
fidivl
or
pop
scas
imul
adc
or
jl
flds
push
sarb
dec
lds
sub
sbb
lods
andb
sarb
push
sbb
mov
movsl
xchg
dec
xor
in
imul
add
dec
scas
mov
in
std
loope
mov
imul
and
clc
xchg
in
pop
xor
scas
leave
test
cmp
fcoml
aaa
in
and
ss
sbb
movsb
out
test
int
pusha
jl
xchg
orb
stc
sub
jge
mov
enter
dec
out
je
mov
or
call
data16
and
xor
cmpsb
mul
pop
sbb
adc
popa
inc
push
jno
ret
pusha
adc
int
add
xchg
lds
cli
sbb
pop
sub
sbb
pushf
inc
out
push
xchg
adc
push
inc
loop
jns
lret
jbe
inc
imul
aaa
int
and
cmp
adc
imul
subb
push
sbb
adc
cwtl
out
imul
stc
shr
cmpsb
ja
cld
enter
shlb
clc
sbb
mov
imul
sarl
test
lds
mov
test
push
jmp
rclb
dec
into
jmp
rclb
lahf
cmp
or
insl
cli
mov
int
ljmp
jle
push
addr16
in
cmp
sub
cli
int3
in
loop
jo
pushl
mov
lret
inc
lds
stc
lcall
push
call
pop
and
sti
add
pop
push
add
call
clc
clc
pop
popf
cmpsb
pop
or
incb
cmpsb
add
jae
xchg
in
fdivrs
sub
jns
cltd
icebp
xor
scas
xchg
cmp
dec
cmc
gs
cmpsl
mov
decb
loope
xor
cwtl
cmp
lds
popf
push
ss
dec
cmp
jne
mov
loope
cmp
jl
fisubl
ret
inc
dec
jge
popa
stos
stos
and
or
out
or
test
mov
out
fimull
shrl
inc
repz
pop
adc
lahf
cmpsb
sbb
mov
loopne
xchg
cmpsb
mov
mov
adc
repz
imul
flds
mov
ds
xor
jb
jecxz
mov
jae
dec
pop
add
into
fwait
sarb
cmp
outsl
adcb
mov
ret
pop
js
xor
pop
cld
mov
repz
fildl
sarb
adc
test
test
mov
mov
or
call
xchg
mov
daa
mov
orl
jge
adc
add
mov
out
scas
loop
enter
pop
jne,pt
mov
pusha
fcmovb
mov
mov
stc
xorps
add
sbb
scas
jno
mov
in
or
mov
push
push
adc
push
aam
data16
dec
pusha
shlb
push
mov
dec
filds
lds
mov
mov
cmp
ret
mov
adc
lahf
jns
imull
ds
jnp
mov
sbb
xchg
inc
scas
dec
and
and
subb
dec
stos
or
cwtl
rolb
mov
ja
adc
shl
jp
xor
sub
adc
push
jmp
in
js
jns
xchg
xchg
or
daa
ret
enter
cltd
pusha
lds
shrb
sub
lods
inc
pop
pop
mov
les
add
xlat
lock
fistl
cmp
and
mov
js
add
cmc
leave
mov
gs
rcrb
dec
mov
mov
mov
bound
add
es
addr16
pop
adc
movsb
jmp
arpl
in
jbe
sbb
clc
adcb
mov
repz
xchg
mov
out
shlb
adc
push
ja
sbb
repz
jl
rol
icebp
out
mov
lds
sub
ljmp
dec
dec
add
out
push
movsl
imul
push
mov
dec
mov
popa
mov
push
ja
cmp
ss
in
in
jno
ret
jl
movsb
int
fs
fsubrs
jne
xchg
lods
ja
mov
add
inc
sbb
inc
push
mov
call
sti
addr16
sub
mov
lods
cmpsl
cmp
and
mov
or
cli
lock
sbb
and
cld
dec
ja
sub
jge
dec
mov
add
inc
xchg
xchg
subl
movl
imul
mov
dec
add
ja
push
sbb
mov
push
aam
adc
push
sub
fucompp
or
and
push
push
inc
fwait
pop
or
mov
repz
mov
loop
push
and
punpckhbw
in
sti
fnstsw
mov
lret
popf
jmp
sub
push
and
jl
cmc
ret
push
mov
sub
xchg
dec
adc
lods
outsb
jno
ss
cwtl
les
lock
push
dec
mov
or
push
pop
push
out
and
shll
lcall
pop
outsl
inc
pop
test
add
jg
mov
out
lcall
jno
sub
arpl
mov
mov
jmp
les
jg
les
nop
loop
std
pushf
cmp
mov
shll
dec
inc
int3
inc
push
fmul
mov
sub
popf
jg
cmpsb
sbb
jbe
xchg
arpl
stos
lcall
shrl
cmpsb
and
adc
jbe
or
data16
inc
fwait
enter
ror
in
push
and
outsl
les
xor
jns
sub
out
inc
mov
cmp
add
sbb
ret
jne
imul
in
insl
dec
rcll
loopne
push
incl
add
fsin
adc
xchg
sti
out
ret
mov
mov
cld
inc
cmp
in
jle
sbb
cmpsb
insb
negb
add
sbb
and
push
adc
loopne
loop
scas
xlat
dec
adc
xchg
add
cli
or
mov
cmpsl
insb
in
lock
fstp
iret
or
pushf
icebp
mov
inc
jecxz
mov
push
inc
mov
cli
fnsave
xor
shll
aaa
aad
mov
xor
or
mov
mov
aad
mov
xor
rcll
ljmp
jp
nop
mull
dec
sti
mov
mov
add
ljmp
and
gs
aam
mov
jbe
lcall
mov
add
add
fwait
out
shl
movsb
dec
add
jne
xor
jecxz
js
pop
test
in
bound
push
push
xor
ret
and
aam
mov
pop
loop
andb
jo
cld
popf
push
test
pop
or
dec
pop
daa
and
sub
sub
mov
scas
rclb
iret
jnp
addl
push
je
mov
into
loopne
pusha
inc
inc
dec
adc
aaa
shr
and
jle
xchg
jl
sub
in
adc
popa
rclb
scas
negl
mov
aas
aaa
fistpl
mov
test
mov
rorl
fsubp
xor
ret
loopne
fiadds
dec
push
subl
add
daa
addl
dec
mov
xor
jae
mov
jae
loopne
mov
mov
push
cmp
lcall
hlt
mov
inc
mov
mov
loope
fcompl
inc
lock
idivb
mov
cmpsb
xchg
xchg
push
fstpl
sbb
push
scas
nop
mov
jl
push
lret
push
aas
jb
icebp
cmc
push
js
subb
test
cmp
and
sbb
push
insl
movsb
inc
orb
xchg
sub
sbb
dec
dec
pop
filds
cmp
or
jge
or
in
sub
jae
sub
loopne
nop
ss
jmp
fstps
cwtl
cmp
adc
or
cli
add
das
cmpsb
aam
mov
rcrb
pusha
cltd
cli
lret
mov
lcall
pushf
in
sub
int
sub
mov
xchg
dec
mov
fdiv
jo
lret
sbb
xchg
jnp
sti
mov
push
fsubrs
push
inc
jle
sbb
push
pop
xor
jns
movsb
aas
and
mov
mov
std
jecxz
cmc
int3
mov
loop
push
inc
mov
jmp
and
cmpsb
xor
insb
cwtl
jo,pn
clc
add
lret
push
and
adc
ja
pop
je
inc
mov
jns
stos
push
or
or
sbb
leave
xchg
push
cs
inc
or
pop
inc
fldl
xor
mov
dec
lret
or
lahf
jne
scas
pop
dec
xor
mov
aad
test
test
cmpsb
das
adc
out
adc
adc
data16
fsubrl
mov
push
cltd
xor
jmp
cmp
sbb
pop
sbb
jne
mov
inc
les
xor
ds
mov
mov
xor
pop
mov
in
and
mov
pop
rcrl
mov
jecxz
dec
sbb
mov
mov
shrb
das
test
mov
mov
mov
ja
imul
cwtl
ljmp
mov
pop
mov
cmpsl
jae
dec
mov
out
gs
mov
sahf
dec
in
add
in
cmpsl
add
sub
pop
xchg
mov
aad
dec
xchg
fwait
call
sub
ljmp
arpl
xchg
js
mov
push
lahf
out
jne
pushf
fcomi
jp
pop
lahf
lahf
mov
xchg
rcll
cli
lds
in
test
dec
and
or
fs
dec
aam
jo
scas
mov
fsub
rclb
pusha
jb
jge
inc
out
mov
jecxz
add
xor
dec
push
or
add
fs
adc
dec
fwait
mov
mov
adc
scas
add
mov
mov
xchg
stos
inc
mov
lret
shll
clc
push
mov
adc
scas
mov
ficoml
pop
add
dec
push
sbb
push
aam
in
mov
add
nop
stos
pop
add
data16
ja
mov
xor
jecxz
push
dec
aam
mov
pop
leave
cs
popa
lea
jns
jmp
jne
cmpb
lock
cmp
sahf
imul
pushf
and
push
inc
mov
push
pusha
push
leave
mov
imul
push
push
inc
and
push
pop
mov
notb
inc
sahf
jecxz
into
mov
icebp
sbb
mov
jnp
mov
mov
cmp
pusha
jno
mov
pop
int3
sarl
and
sti
pop
mov
pop
imul
jno
push
push
mov
das
icebp
cmpsb
scas
cli
js
jno
fcmovu
js
xchg
out
or
inc
clc
mov
out
mov
fistps
xchg
sbb
les
fwait
pop
xchg
mov
repnz
mov
aaa
sbb
jb
lds
clc
call
fldl
sub
mov
sub
dec
movsl
and
pop
mov
bound
pop
fiadds
cmp
mov
xchg
iret
pop
notb
pop
imul
xor
and
cmp
jbe
dec
xchg
xchg
mov
ret
clc
inc
jns
or
xlat
outsl
mov
fidivrl
sub
mov
iret
mov
in
inc
push
in
fs
cmp
rcrb
icebp
pop
mov
test
ret
movsl
jecxz
sub
adc
enter
insb
add
loope
sahf
mov
enter
ljmp
testb
jg
or
test
dec
mov
in
mov
mov
dec
add
ss
test
mov
aas
dec
out
pushf
xlat
mov
outsb
lcall
shrb
mov
divl
pop
movsb
in
push
xchg
cli
xor
in
mov
testb
mov
cmp
push
in
xor
ljmp
and
pop
xor
shlb
bnd
sbb
js
jle
dec
pop
test
mov
aas
es
cmovne
insb
imul
adc
mov
cmp
loop
hlt
add
mov
xchg
adc
xchg
shl
lock
iret
aas
adc
lods
xor
cli
incb
dec
inc
outsl
cli
faddl
pop
push
sub
pop
fcomi
xlat
adc
fiadds
add
xchg
push
daa
fcmovb
and
outsl
xor
test
xchg
mov
shll
ds
sub
iret
mov
sbb
mov
mov
xchg
pop
sub
pop
sub
add
dec
xchg
in
xchg
mov
shrb
int
jbe
sbb
push
dec
sub
adc
repnz
jbe
mov
js
imull
test
push
jnp
out
xor
adc
dec
pop
jae
hlt
fstps
pusha
sahf
adc
stos
dec
mov
fistl
pop
lret
hlt
loop
pushf
pop
xchg
sahf
mov
mov
cmp
xorb
std
sbbl
push
fbld
xor
mov
add
loop
lret
add
shlb
jg
inc
push
pusha
lahf
faddl
add
sub
jb
and
sub
sbb
lea
mov
jo
lret
test
cmp
inc
ret
mov
addr16
cld
or
sbb
jmp
add
mov
mov
lock
movsl
shlb
in
jmp
xor
data16
arpl
lods
xor
jmp
sbb
pop
and
bound
nop
jp
jecxz
das
add
sub
lods
xchg
roll
fnsave
sbb
pop
int3
pushf
int
pop
ss
addr16
mov
jno
rcr
xor
orl
mov
aad
sbb
rcrl
shrb
mov
dec
movsl
sbb
imul
mov
mov
gs
sbb
dec
xchg
push
aaa
insl
and
scas
push
jae
movsb
xchg
cwtl
dec
mov
inc
pop
scas
pop
ljmp
insl
cmp
jns
xor
xchg
xor
dec
test
neg
sbb
push
dec
stc
mov
pop
js
sbb
sbb
addr16
test
mov
mov
ljmp
inc
adc
push
or
and
inc
mov
xchg
int
jo
lock
test
and
leave
sbb
xlat
sbb
and
in
les
add
in
ljmp
xor
sahf
pushf
hlt
cwtl
dec
inc
xor
adc
push
or
repz
outsl
mov
pop
jg
xor
jae
ret
lds
pop
in
mov
jns
mov
sub
cmp
sahf
dec
cmp
jnp
in
sub
pusha
push
xchg
aaa
and
rcrb
adc
lods
add
loopne
aaa
and
mov
fstpl
sbb
in
pop
subb
push
jp
ret
mov
icebp
xchg
sub
je
les
adc
pop
dec
inc
inc
xlat
and
mov
xchg
jl
sahf
mov
cs
mov
pop
fmulp
push
xchg
jne
jae
push
cmp
rolb
adc
aaa
mov
arpl
xor
test
sti
bnd
addr16
out
out
enter
and
in
ja
faddl
jmp
aas
hlt
sti
movsl
lret
psrld
push
prefetchwt1
std
icebp
cli
lea
shll
sub
ljmp
imul
mov
int
hlt
adc
lods
add
daa
jno
sbb
fstl
mov
or
push
push
in
fbstp
xchg
push
lret
jb
inc
mov
arpl
sahf
mov
aas
loop
fcoml
jne
inc
cmpsb
push
lret
sarl
xchg
sub
loope
mov
xchg
cwtl
sub
pop
imul
clc
add
or
cmovae
psubsb
jg
cwtl
and
andb
divb
out
jp
incl
dec
pop
push
add
test
cmc
pop
mov
icebp
pusha
repnz
pop
adc
push
sbb
sub
xor
mov
and
push
mov
push
lock
pop
fdivp
pop
fcomps
pop
in
push
xor
adc
push
notb
add
jae
jge
in
jmp
fs
lret
pop
in
mov
lea
enter
imul
jae
add
xor
fcoms
xchg
fsubr
rorl
cmp
push
rorb
aad
jno
out
in
leave
pop
cld
mov
aaa
ss
sub
xor
lea
cltd
jbe
dec
and
loope
mov
add
add
xor
aas
pop
iret
loope
add
dec
mov
xlat
pop
cmp
mov
aad
bound
loop
mov
aaa
xor
add
inc
ficompl
lret
fs
adc
call
andl
hlt
aaa
mov
lret
inc
mov
xor
mov
adc
jp
xchg
sub
jecxz
ss
cmpl
adc
lds
repz
stos
pop
sbb
inc
pop
mov
xor
push
mov
cmp
cwtl
mov
imul
add
rolb
pop
fadd
lahf
in
decb
pop
mov
jle
lock
jbe
jns
rclb
mov
stos
dec
lods
dec
subl
shrb
and
adc
dec
in
lods
jns
sbb
jmp
scas
inc
inc
dec
jge
adc
repnz
popa
jle
pop
push
ds
iret
ret
xchg
ss
lahf
push
insl
lds
pop
pop
mov
out
stos
lock
inc
jge
adc
pop
popa
push
pop
adc
push
test
sbb
or
and
push
std
sub
das
std
mov
and
dec
cmpsl
mov
add
popa
cmpsb
filds
mulb
xchg
inc
loopne
sub
ds
add
dec
insb
push
and
outsl
int3
xchg
push
dec
mov
shlb
cmpsb
call
int
icebp
adc
jmp
mov
mov
inc
dec
pop
cli
xor
jecxz
rorl
int
addr16
sub
dec
jo
repnz
jmp
lds
mov
inc
jp
int
insl
movsb
stos
and
pop
xchg
or
jle
js
mov
jns
mov
mov
lret
movsb
jb
jne
and
pop
mov
mov
out
cmp
adc
repz
jb
mov
jb
fnstsw
std
cmp
ret
out
daa
cwtl
lcall
ss
sbb
jo
push
roll
add
add
mov
loop
sub
pop
nop
out
mov
sti
or
es
pop
xor
test
outsb
push
inc
fstpt
xchg
bound
pop
shlb
ret
dec
movsl
lods
int
jo
test
les
rol
jmp
mov
jg
out
iret
mov
push
aam
mov
or
test
sti
ret
lahf
dec
dec
inc
pop
lahf
je
hlt
sub
pop
add
and
stos
or
fisttpll
ror
test
pop
stos
fnstsw
mov
shl
and
or
inc
rcl
mov
aas
test
sub
adc
jmp
pushf
add
jmp
adc
not
mov
pop
mov
test
mov
mov
add
int
mov
pop
push
rcrb
std
rcr
push
xchg
xchg
fisttps
pushl
jmp
mov
pop
sarl
pop
ljmp
dec
dec
push
xchg
jmp
or
pop
adc
push
rcll
in
add
push
xchg
xchg
in
aam
rcrb
push
test
cli
icebp
fwait
push
add
aas
jbe
mov
sahf
test
das
aam
jb
mov
and
push
jmp
movsb
jg
mov
mov
dec
dec
xchg
inc
call
push
mov
sub
cmp
xchg
outsl
fsubrs
pop
jns
ds
xor
ja
inc
xchg
icebp
ret
mov
push
jle
repnz
mov
arpl
hlt
aas
sub
and
shl
jne
and
shrl
lret
addr16
fwait
inc
daa
imul
ret
mov
das
mov
scas
mov
adc
and
nop
mov
leave
aad
and
jae
insl
cmp
icebp
sub
ds
ret
sub
dec
xchg
dec
cmc
dec
das
data16
jns
stc
push
cmpsb
rorl
adc
xchg
jb
sbb
pop
or
lahf
mov
lods
repz
push
xchg
mov
ret
jne
sbb
and
sbb
mov
mov
jp
add
mov
lds
gs
jl
pushf
sbb
xchg
mov
iret
jb
jbe
adc
orb
idiv
or
test
out
in
xor
sbb
int3
adc
cld
jne
mov
sbb
fwait
lods
cmc
cmp
push
enter
push
test
pop
cmpl
or
aas
shll
jns
inc
xchg
mov
adc
lret
fcmovnu
and
sub
cli
adc
loope
lret
mov
push
adc
or
mov
data16
jg
in
xor
cli
and
or
lcall
and
mov
mov
add
xlat
cmp
push
and
mov
cld
and
sbb
jge
mov
es
or
pop
movl
jns
stc
lahf
or
pop
jno
pop
into
aam
popa
mov
pop
jge
movl
mov
inc
inc
jl
fxam
pop
push
sbb
sub
in
adc
add
mov
movsb
fidivs
outsb
push
shl
fstpt
cmp
rcll
call
cmp
pop
cmpl
or
mov
jne
inc
dec
jge
or
mov
ss
mov
cmpsb
sbb
add
push
inc
cmpsl
ss
jl
mov
sbb
ljmp
add
mov
neg
sbb
lret
lods
inc
mov
imul
and
rolb
or
xchg
repnz
gs
jecxz
repz
push
mov
jl
dec
adc
or
inc
mov
lcall
or
outsb
scas
fmull
mov
dec
jmp
out
addb
xchg
push
mov
lods
or
push
pop
std
and
sahf
mov
je
cmp
out
sbb
jae
mov
jns
cmp
lock
push
mov
xchg
lods
outsl
push
and
push
je
sub
test
xchg
pop
je
test
xor
lods
ljmp
push
mov
das
xchg
add
dec
and
add
loopne
shr
push
popa
jno
test
hlt
js
jecxz
mov
inc
jb
frstor
or
hlt
cmp
add
ja
int3
cmp
ljmp
xchg
add
test
cmpsb
sub
dec
je
pop
inc
das
in
xorb
mov
scas
cmc
cmp
int3
stc
dec
mov
and
mov
lret
aaa
std
outsl
mov
or
push
pop
xor
shr
mov
fistps
sub
outsl
out
xor
push
sub
pop
add
bound
inc
jb
and
sbb
inc
jb
sbb
cmp
and
mov
pushf
pop
inc
lds
pop
scas
sub
xchg
ret
notl
mov
sbb
fs
hlt
jbe
clc
lcall
shrl
push
in
mulb
arpl
jmp
lods
popa
stc
fsubrp
cmc
inc
insl
adc
incb
lea
out
shrl
push
cmp
fcoml
dec
mov
sbb
fidivrs
jmp
mov
jnp
test
int3
dec
std
mov
xchg
xchg
imul
out
add
cltd
gs
rcll
mov
in
out
add
ja
sbb
and
push
adc
push
data16
mov
movsb
scas
dec
in
fidivl
icebp
mov
arpl
cmp
jbe
pop
add
fs
mov
push
sbb
sub
arpl
sti
out
ret
jns
cmp
or
mov
xorl
lahf
call
jns
test
mov
add
lods
dec
in
pop
dec
mov
and
cwtl
and
je
and
pop
test
les
dec
fidivs
cmp
fists
inc
int3
jnp
call
lods
xchg
je
cmp
add
cmpsb
test
enter
adc
mov
cmp
push
lcall
or
xor
ror
add
stos
adc
ja
and
ss
gs
mov
cmp
in
int
pop
repnz
mov
adc
jg
or
adc
sbb
mov
fldenv
jmp
push
add
jmp
inc
scas
mov
sahf
fwait
inc
call
mov
mov
adcb
cwtl
enter
pop
jmp
outsl
ret
loop
push
push
fsubrs
leave
xor
sbbb
sbb
xor
sbb
jbe
adc
cmp
mov
jecxz
sub
fdivs
andb
out
xor
cmp
add
fadds
out
adc
ss
inc
pop
adc
lea
sbb
jae
nop
xchg
faddl
dec
lods
jmp
mov
and
sahf
inc
into
lods
test
and
in
aaa
cmp
mov
sub
mov
cmp
jne
cmp
xchg
jl
jecxz
jecxz
fmuls
imull
test
adc
mov
rolb
fiadds
xor
aad
cmp
sbb
lahf
lods
aaa
movsb
pop
pop
dec
mov
inc
rcl
stos
bound
ret
adc
fld
stos
dec
xor
or
push
sub
xlat
rol
fisttpll
inc
push
cmp
arpl
fisubs
aaa
fsubrp
nop
fidivrl
sbb
push
in
add
xor
stos
inc
xchg
jle
sbb
adc
shll
pop
pop
xor
mov
sub
lods
cs
arpl
cltd
or
xchg
test
mov
sbb
mov
add
jbe
jg
and
ret
lock
cmc
mov
or
shll
mov
jnp
inc
les
test
in
add
leave
ljmp
jb
and
inc
ljmp
sub
faddl
mov
hlt
mov
xor
jmp
xor
lret
jb
orl
sbb
inc
mov
repnz
ret
leave
ljmp
inc
call
sub
cmp
mov
jg
in
push
mov
cs
nop
fldcw
shll
add
jp
jnp
in
cmpb
lds
stos
loopne
sar
in
push
insb
add
fwait
sub
das
sti
xor
mov
stos
cmp
jg
and
add
xor
roll
and
insl
add
xchg
add
xchg
sti
add
mov
popa
int3
pusha
mov
dec
adc
outsl
repz
mov
dec
mov
push
jle
outsb
ljmp
jmp
mov
ss
mov
pop
cmp
jne
aam
mov
sbb
sbb
fwait
and
sub
push
inc
inc
xchg
sub
enter
xchg
popf
sub
jmp
xor
jbe
cld
das
pushf
add
cltd
ja
mov
fs
ds
and
jp
mov
call
cmp
jmp
rolb
aas
push
scas
lcall
loopne
mov
popa
jno
add
sub
jmp
jae
mov
test
pop
filds
mov
xchg
mov
test
xchg
or
scas
shrl
sbb
or
mov
dec
add
in
cmp
mov
add
fdivrs
in
fwait
push
repz
mov
in
adc
inc
or
lds
xchg
or
nop
int
pop
or
mov
idivb
fs
mov
pop
sbb
jge
jecxz
mov
push
popf
in
cmp
or
add
pop
or
mov
outsb
lret
mov
push
lds
outsb
sub
xor
xor
dec
arpl
scas
mov
std
pop
dec
lret
push
ret
hlt
cmc
int3
jle
mov
or
mov
cs
jb
cmpb
fcmovu
and
loop
dec
shlb
andb
lcall
add
mov
stos
jg
outsl
int
push
cmpb
push
jb
jl
mov
aam
pop
aam
add
pusha
sub
cltd
scas
push
imul
add
dec
add
addr16
nopl
inc
mov
arpl
stos
push
jo
dec
xchg
adc
addr16
pop
xor
inc
xchg
rcrb
sbb
loop
or
and
icebp
jnp
xchg
mov
movsb
mov
stos
in
and
lods
sbb
insb
imul
add
push
rorl
repz
pusha
cwtl
outsl
and
decl
mov
mov
loop
jg
xchg
insb
push
cld
mov
or
es
hlt
pop
bound
mulb
mov
stc
scas
mov
sub
inc
sbb
aas
sbb
jle
mov
sub
lret
jb
mov
or
mov
sbb
pop
inc
imul
in
inc
loope
sbbl
insl
lret
xor
movsb
pop
pop
inc
insl
std
or
fcomps
loop
add
ljmp
pop
and
les
cmp
pop
pusha
mov
mov
push
out
mov
dec
or
mov
sbb
mov
ss
dec
out
xchg
repz
std
lret
insb
xor
inc
mov
jae
xchg
jne
lcall
lret
and
pop
femms
mov
mov
ss
arpl
pop
dec
popa
lcall
jge
into
lds
cmp
imul
inc
mov
mov
mov
ret
and
negb
sub
inc
mov
aas
add
lods
dec
andl
dec
loopne
popa
addr16
mov
cmc
adc
test
inc
and
push
xor
leave
mov
sbb
arpl
fcoms
loop
mov
iret
subl
and
push
push
xchg
out
xor
stos
inc
xchg
cmp
mov
sbb
jae
xchg
add
pop
mov
sti
ja
mov
shlb
in
mov
mov
jmp
dec
or
clc
push
in
ret
mov
ja
cmp
push
pop
cmpsl
and
dec
jno
inc
pop
das
fimuls
cmp
stos
int
out
sbb
cwtl
add
shlb
popf
hlt
jno
mov
xor
aad
jmp
sbb
xchg
orb
fs
inc
cmp
inc
je
aad
loopne
arpl
sub
sbb
sub
push
adc
mov
fstpl
lods
std
xchg
stos
mov
fstps
push
cmc
mov
push
add
jecxz
shll
outsb
mov
cwtl
mov
sbb
out
inc
insb
das
divl
pop
mov
dec
fbstp
adc
sub
xchg
sbb
add
pushf
test
xchg
mov
xchg
in
aas
out
aaa
sub
out
nop
xchg
push
lcall
cmp
scas
fiaddl
popf
sbb
adc
or
mov
int3
cmp
inc
sbb
jbe
and
sbb
in
lahf
aaa
or
insl
pushf
iret
cmc
lea
addb
mov
ret
lret
sub
pop
mov
xchg
adc
and
and
mov
dec
shl
mov
stc
loop
inc
add
gs
jl
push
inc
lcall
pop
jecxz
jnp
in
movsb
aaa
jp
shrb
push
or
sbb
jge
pop
mov
mov
pop
pop
dec
mov
jo
test
ja
pop
mov
scas
cmp
cmp
push
xor
es
fnstsw
iret
aad
cmp
stos
xchg
mov
adc
cmpb
push
es
or
rclb
xor
xor
test
add
pop
mov
xor
sbb
xor
xchg
push
adc
push
scas
stos
xlat
inc
push
push
mov
arpl
fs
push
mov
je
jb
dec
adc
xorb
jle
mov
pop
add
out
inc
out
scas
fidivl
std
jno
stos
das
inc
rcrl
add
sub
ret
mov
in
cmp
mov
bound
movsb
movsl
ljmp
repz
gs
jecxz
cmp
pop
je
dec
or
hlt
xchg
sub
sahf
call
xorl
ret
sti
sbb
adc
xchg
cmpsl
fdivs
test
aas
jb
bound
mov
cmpsl
shlb
stc
push
int3
fistpll
lcall
push
test
sbb
cld
neg
addr16
cmc
insl
movl
data16
mov
lock
fidivl
dec
inc
loope
clc
lds
adc
sub
push
sub
xor
sbb
sbb
xor
mov
scas
xor
sub
test
mov
add
dec
mov
pop
out
mov
or
jno
jno
push
xchg
out
push
push
clc
add
int3
ds
lods
fcoml
xchg
int
pushf
arpl
jb
mul
pop
lretw
pop
fistpl
test
sub
ficompl
hlt
cmp
sbb
xchg
rcrb
shll
cmp
mov
pop
das
jae
xor
lcall
xlat
sti
mov
jp
jae
sbb
jmp
ja
dec
cmp
mov
cld
sub
mov
or
in
inc
shl
add
fnstcw
sti
adc
call
mov
dec
lock
test
adc
sbb
mov
cmp
mov
loopne
jne
sbb
mov
into
xor
pusha
test
test
hlt
enter
cmp
and
pop
xchg
push
xchg
xor
fldenv
jmp
sbb
repz
cmpsl
shlb
xchg
adc
and
adcb
xor
xchg
inc
mov
push
add
pop
cld
call
jg
shll
ja
dec
scas
aad
and
call
and
jmp
ret
ret
dec
fwait
clc
loop
xor
add
mov
mov
ds
add
dec
gs
pop
arpl
das
ret
sarl
aas
or
jecxz
xchg
pop
sub
xor
inc
jle
adc
mov
push
pop
iret
frstor
mov
jmp
mov
cmp
or
add
into
fistl
das
in
mov
iret
push
scas
mov
dec
jno
ret
xchg
xchg
out
pop
xorl
xor
mov
imul
inc
push
data16
push
jb
arpl
mov
inc
xor
inc
fnstsw
mov
in
aam
test
out
mov
push
hlt
inc
pop
insl
pop
mov
aas
sub
mov
shrl
movsl
mov
fwait
mov
mov
leave
pop
inc
mov
loope
popa
in
inc
cmpsb
nop
push
in
outsl
test
dec
in
das
push
shlb
orb
dec
stc
push
or
mov
movsl
enter
in
or
test
push
mov
repz
pop
dec
mov
dec
shll
fsubrs
popf
xor
pop
je
cmp
mov
fnsetpm(287
mov
pop
add
jae
jb
mov
mov
repz
rdmsr
jge
mov
mov
cwtl
xchg
lea
cltd
lods
popa
jl
mov
mov
fmuls
mov
add
mov
cmpsb
subl
and
movsb
daa
pop
dec
scas
cmp
outsb
repnz
scas
add
orl
aas
dec
dec
rol
push
movsb
test
in
ds
push
pop
ja
xchg
repnz
xchg
cltd
int
ret
rol
stc
xchg
pop
mov
into
jns
cli
mov
fld
jmp
push
and
popa
aas
inc
mov
sub
loopne
push
mov
and
fs
mov
testb
inc
insb
xor
ja
out
sti
and
sbb
mov
in
pop
fdivl
dec
rcrb
jo
ret
stos
xchg
add
fcomps
or
sub
lea
adc
testl
xor
je
push
or
ds
notb
xlat
repz
mov
cmp
fldenv
inc
fwait
cmpsb
and
pop
dec
sbb
insb
push
popf
jp
cmp
pop
adc
in
jae
mov
xor
test
or
ja
negl
out
inc
xchg
add
and
aam
pop
add
push
sub
cmp
dec
xchg
popf
in
mov
adc
lcall
dec
jmp
or
aam
rcrb
sbb
sbb
adcl
in
scas
mov
fdivs
and
roll
or
sahf
je
mov
sbb
daa
call
stos
in
xchg
add
sbb
pushl
jo
mov
insb
lock
call
and
mov
push
pop
rorb
dec
int
stc
mov
shrl
mov
lahf
adc
dec
ret
dec
div
leave
mov
mov
call
inc
mov
sub
outsl
sarb
shlb
out
inc
mov
mov
arpl
and
lea
sbbb
sub
jl
out
mov
rclb
lcall
mov
fstpt
jae
inc
mov
fs
xchg
call
enter
cmpsl
dec
xchg
imul
in
roll
mov
movsb
lock
movsb
lods
pop
inc
or
aaa
in
push
jle
jg
xor
fstpl
or
inc
lahf
jns
mov
ficoml
ds
mov
pop
mov
adc
pushl
imul
lock
dec
cltd
adc
dec
adc
push
cmpsb
mov
cmp
mov
repz
or
out
inc
stos
cmp
dec
xchg
and
push
xlat
push
scas
pop
repz
mov
jle
jno
cltd
scas
jl
jp
ret
mov
outsb
lret
jmp
pop
pop
movsb
xchg
mov
xchg
pop
clc
outsb
in
int3
xchg
pop
and
leave
jnp
outsl
mov
push
gs
pop
lods
stc
testb
inc
fsubr
outsb
aaa
sti
cli
mov
jl
push
push
mov
jmp
cmc
mov
rcrb
dec
xor
xor
ret
fnsave
loopne
jae
push
je
das
mov
fstpl
jge
das
rorl
and
dec
jb
iret
push
scas
mov
imul
lods
sbb
push
push
jecxz
les
mov
loopne
push
or
adc
xor
aam
scas
inc
adc
inc
push
andl
sti
inc
ret
addb
lods
and
xchg
out
insb
scas
cmp
or
les
fdivl
mov
in
mov
insl
cmc
sbb
idivl
xchg
pop
aam
or
adc
stos
inc
dec
xorb
lret
dec
dec
jge
loopne
push
inc
sub
jle
loop
mov
xchg
mov
lock
adc
mov
and
js
adc
data16
pop
sub
mov
imul
fildl
fidivs
js
dec
or
gs
push
aam
add
mov
inc
int
loop
xor
into
sbb
or
faddl
inc
fs
out
aaa
ret
cmp
es
xchg
cmpsl
jp
push
jns
daa
loopne
cmpsb
lea
xchg
mov
xor
lock
shl
adc
ds
dec
cwtl
push
push
negb
sarl
cmpsl
data16
negb
in
dec
rcl
outsb
adc
lods
scas
dec
pop
add
jno
scas
pop
xchg
push
enter
pop
mov
call
xchg
dec
cs
sub
mov
push
idivl
adc
cwtl
pop
adc
mov
test
in
cmp
jg
or
cmc
xchg
iret
mov
mov
push
enter
pop
sbb
mov
test
add
jne
adc
scas
rcrl
dec
ret
jmp
out
pop
or
pop
icebp
or
pop
mov
mov
inc
repnz
push
shll
lods
int
and
push
mov
mov
jnp
cs
icebp
mov
sub
ja
mov
jmp
dec
xchg
pop
outsb
cld
add
pop
adc
sahf
orl
xlat
mov
loope
iret
inc
enter
lea
in
sbb
push
xchg
test
aam
sbb
ret
xchg
mov
or
push
inc
leave
rcl
dec
mov
jg
cmp
push
mov
mov
in
lret
mov
call
mov
daa
pop
in
out
xor
cltd
mov
sets
inc
jg
icebp
divl
mov
fimuls
mov
mov
fcompl
popf
mov
jle
xor
in
add
aad
mov
adc
stos
sbb
jbe
rorl
or
push
xor
jg
xor
lock
roll
movsl
lds
sub
outsb
je
gs
add
adc
stos
iret
shl
mov
cmp
mov
push
dec
dec
xor
cmp
gs
pop
dec
push
pop
mov
mov
push
sub
push
jnp
dec
cmp
gs
sbb
inc
mov
push
or
jae
inc
lods
stos
lock
inc
stc
add
sub
fdivrs
mov
sahf
push
fmull
enter
ret
insl
jl
cmc
arpl
mov
xor
pop
cmpl
xlat
sbb
loop
ficoms
and
pop
adc
scas
mov
lahf
rclb
jbe
dec
jl
mov
cmp
es
xor
sbbl
xlat
inc
test
cmp
sub
mov
shlb
dec
rcrl
loopne
xorl
std
dec
mov
insb
sbb
xchg
icebp
fwait
lret
sbb
cwtl
adc
decb
mov
mov
mov
mov
sub
cld
adc
adc
call
test
mov
orl
es
test
outsb
push
jmp
lahf
xchg
mov
js
push
lcall
sbb
xchg
std
mov
cwtl
xchg
pushf
cltd
jle
aaa
xchg
xor
mov
sub
lds
imul
jae
nop
adc
bound
mov
inc
push
mov
mov
aas
and
int
sub
pop
mov
loopne
btc
push
cmp
add
mov
pop
jae
push
je
push
movsl
mov
pop
sbb
jbe
test
adc
add
pop
les
sti
mull
cmpsl
ljmp
push
sub
lea
sub
out
cmpsb
jae
and
add
arpl
sub
arpl
jl
adcb
cmp
xchg
je
cmc
push
enter
movl
aaa
mov
or
loopne
in
stc
mov
aam
dec
cli
enter
dec
sti
cmp
push
loop
jnp
mov
adc
dec
lea
int3
dec
es
cli
xchg
xchg
add
sahf
mov
dec
neg
lds
jns
push
test
mov
mov
addb
arpl
mov
jp
xchg
xchg
or
sahf
and
popa
out
cmp
inc
xchg
lahf
cmpsl
lock
xor
inc
daa
fcmovnbe
xor
testb
loopne
nop
out
addl
shrl
fildll
sbbl
inc
or
out
andb
cmpsl
pusha
add
lea
mov
jnp
sti
fldt
xchg
fisubs
outsb
mov
mov
inc
or
into
sbb
fistps
test
jb
addr16
leave
stos
sbb
das
in
pop
out
out
adc
mov
dec
mov
sub
ficoml
in
dec
sbb
push
jno
nop
inc
popf
or
shrl
stos
mov
pusha
and
leave
add
aad
aaa
imul
popa
xchg
jns
fldenv
xchg
push
sbb
or
xchg
test
sub
mov
mov
aad
dec
in
pop
add
je
pop
fnstsw
or
scas
lret
loop
cmc
xchg
mov
je
mov
cmp
adc
and
dec
pop
fcmovb
adc
adc
nop
or
les
jae
mov
ret
sbb
inc
enter
xor
mov
lahf
jle
jno
add
jecxz
movsb
and
mov
xchg
xor
je
repz
mov
in
iret
pushf
enter
cs
sub
rclb
mov
fxch
aas
insb
imul
out
mov
jmp
and
push
pop
sbb
jmp
test
fadds
loop
mov
repz
iret
bound
ds
mov
jg
mov
out
arpl
cmp
jg
divb
sub
stos
lret
in
jg
inc
add
in
mov
inc
repz
ret
push
fwait
popa
sub
pop
mov
fisubrl
sub
fmull
push
data16
inc
mov
dec
outsb
inc
notb
fcmovnu
cmp
jge
pop
fsubrs
sub
in
add
mov
leave
push
push
and
and
scas
incb
xchg
bound
movsl
jl
rclb
jmp
lcall
sub
push
loopne
adc
shl
inc
negb
pop
lret
sbb
or
repnz
rcrl
xor
xchg
cmp
fcomps
icebp
sbb
idivl
jmp
das
fidivrs
dec
mov
jle
test
dec
sbb
ss
lret
into
sbb
inc
cld
dec
outsb
add
ljmp
enter
stc
outsl
pop
mov
hlt
sub
int3
fdivl
xor
nop
subl
neg
pop
cmp
cmp
shrl
sub
fnstcw
push
mov
xor
mov
pop
aad
pop
rcrl
xchg
inc
add
sbb
enter
sar
adc
cmp
and
mov
mov
cld
add
push
or
sub
xchg
mov
outsb
popa
je
data16
mov
jle
pop
mov
cmp
fsts
aas
lods
repz
mov
push
xchg
dec
or
and
push
push
mov
push
jge
lahf
add
cmpsb
jecxz
adc
iret
jo
and
jecxz
lock
lret
xchg
incl
sti
lods
xchg
pop
ss
ss
mov
jp
out
sbb
jae
js
push
adc
cmpsl
lock
rclb
sub
clc
jp
dec
not
test
mov
in
add
push
mov
xor
out
adc
in
filds
mov
mov
lods
out
cmpsl
jnp
sar
pop
push
inc
push
outsb
jmp
andl
cmp
imul
aam
cs
rol
ret
xor
push
mov
imul
adc
push
aam
push
push
popa
mov
fistpll
add
repnz
xlat
enter
aam
xchg
mov
fsubl
lods
fildl
inc
fdivr
loopne
inc
dec
add
lds
mov
cmp
leave
ljmp
xchg
lock
xchg
inc
inc
popa
clc
sub
or
and
jne
mov
addr16
das
xorl
ds
dec
mov
mov
mov
inc
sar
mov
in
jns
stc
xchg
jo
mov
push
sub
sub
and
lods
mov
fnstenv
addr16
arpl
mov
adc
bound
outsl
adc
iret
into
lret
aaa
sbb
cltd
xor
sbb
inc
loope
sbb
testl
je
cltd
stos
mov
push
jno
push
sub
sub
inc
cmp
in
jns
jge
xchg
mov
xor
movsl
adc
adc
jge
jae
rep
or
les
adc
fbstp
xor
mov
mov
mov
pop
sub
imul
mov
out
pop
mov
shrl
jmp
and
mov
movlps
outsl
xchg
jo
js
cmpsl
add
ret
adc
sub
lahf
push
inc
mov
cmp
push
bound
jne
clc
inc
loopne
push
vunpckhpd
popa
jg
pop
dec
xchg
fiadds
mov
fcoml
bound
dec
mov
cmp
xor
test
dec
add
xchg
push
inc
ret
pop
sub
jb
ds
push
addr16
mov
and
and
aaa
addr16
dec
sahf
and
daa
adc
push
xor
jne
xchg
push
pushf
je
loop
fnstenv
fimuls
mov
test
jns
xchg
or
movsl
cmp
cli
jb
fisttps
loopne
pop
xchg
dec
pushw
push
nop
and
fisttpl
cli
inc
loop
loopne
fldcw
jmp
cmpsb
je
add
xor
inc
xor
jne
dec
sub
lcall
lods
pushf
push
and
faddl
sbb
sarb
lcall
jb
jnp
push
inc
enter
insl
rep
sbb
lods
sbb
in
out
cmp
iret
inc
fs
xor
cmp
sbb
lcall
cmp
mov
mov
pop
mov
loopne
mov
scas
int3
sub
push
icebp
lods
popf
aad
les
xchg
popf
jbe
mov
mov
pop
ja
ds
add
sti
jnp
push
outsb
stc
push
adc
pop
ror
cmp
lods
outsb
mov
push
popa
sbb
addr16
scas
je
sbb
scas
lcall
fistpl
dec
test
and
out
les
out
sbb
pop
add
xchg
adc
mov
pop
int
data16
test
outsl
and
std
daa
call
repz
ret
pop
test
lret
and
xchg
xchg
sbb
mov
js
jns
adc
sub
loop
or
int3
mov
cltd
jmp
icebp
rcll
fisubl
out
dec
mov
sbb
xchg
xor
imul
pushf
call
arpl
xchg
and
in
push
je
fwait
lods
cmp
das
fs
lods
shrb
leave
inc
dec
dec
xor
in
gs
push
and
jo
pop
lock
clc
test
add
xor
popf
xor
jno
pop
pusha
scas
rorb
cld
sub
jmp
cmp
xchg
and
add
into
or
in
incl
and
lds
addl
push
inc
xor
into
mov
push
pusha
pop
xchg
int
out
enter
or
out
pop
sbb
mov
and
hlt
or
jnp
sti
shr
inc
cmp
dec
into
loop
addb
mov
add
xchg
xor
hlt
sub
sbb
mov
enter
xchg
push
ret
int
mov
xlat
cmp
pusha
aad
mov
jmp
movsl
testb
test
das
data16
loopne
int3
aad
add
adc
dec
xor
addr16
bound
sub
dec
outsb
insb
or
mov
rorb
outsl
sub
add
cmp
push
out
and
mov
xchg
sbb
sub
push
test
ret
or
cld
or
enter
push
stc
sbb
sbb
and
lcall
sti
sub
test
fsub
push
mov
push
movsl
xchg
jo
mov
sbb
fimull
cltd
mov
aas
cmp
movb
popa
dec
xchg
and
in
jecxz
jnp
testl
xchg
jmp
and
pop
xor
test
push
jecxz
repnz
jb
jb
jo
int3
inc
sbb
fwait
daa
dec
pushf
xchg
in
mov
cld
or
xchg
mulb
cld
pop
push
dec
mov
push
outsl
cltd
cmp
inc
inc
pusha
sarl
arpl
mov
pop
fcmovbe
cmp
das
xlat
sub
or
loopne
aaa
stc
int
clc
sbb
aaa
jo
add
enter
fcomi
aaa
nop
je
fbld
mov
stc
rcrl
or
lcall
repz
fbstp
mov
cmpsl
scas
sbb
or
dec
sar
and
test
ds
xor
adc
sti
fwait
xchg
mov
inc
inc
sub
mov
lds
sub
sti
scas
out
jnp
xor
xchg
sbb
xchg
cbtw
adc
int
hlt
popf
mov
adc
mov
cld
jg
push
mov
loope
and
mov
mov
stos
xchg
sbb
push
inc
fdivs
das
jns
or
cmp
pop
pushf
jecxz
mov
popa
sub
push
cmc
cmp
rcll
mov
xor
cltd
clc
and
out
dec
mov
mov
leave
fldl
lods
jbe
das
arpl
add
mov
xor
imul
jne
mov
or
fs
mov
icebp
mov
lock
rolb
adc
test
and
mov
dec
in
and
push
nop
pop
cmpsl
ret
adc
aaa
roll
jecxz
test
push
mov
nop
int3
sub
out
js
ds
and
bound
inc
mov
rolb
jecxz
sets
hlt
int3
subl
pop
fs
lds
xchg
mov
repz
push
dec
dec
adc
notl
out
cmpl
in
add
std
inc
aad
loopne
int
or
and
addr16
jae
outsl
imull
jne
sub
sub
fwait
mov
scas
xlat
repz
test
into
movsb
divb
push
mov
scas
jecxz
sahf
aad
mov
test
sub
xor
stos
sub
faddl
pop
arpl
les
fdivrs
jge
sar
js
and
and
adc
xchg
push
push
pop
pusha
adc
add
in
add
cmp
mov
fadd
popf
dec
cmp
std
push
or
dec
dec
lods
mulb
inc
lea
sbbb
pop
jecxz
jp
jnp
enter
mov
xor
test
push
or
push
popf
cmp
shr
adc
jbe
cmpsl
and
xor
mov
pop
mov
js
imul
sarl
lock
rcrl
push
je
jbe
mov
aaa
add
pop
cmp
and
xchg
cmpsb
add
push
xchg
mov
inc
jmp
lahf
cmc
or
mov
pop
xchg
push
nop
dec
sbb
call
push
fcomip
push
jns
pop
sub
xlat
ret
dec
insb
enter
pop
push
popa
xchg
cmc
fidivrl
mov
cmp
cmp
mov
lods
mov
jecxz
sub
fistps
jns
pop
mov
mov
add
push
jp
xor
mov
sbb
popa
sbb
push
mov
xorl
lret
jo
les
inc
out
xor
and
sbb
mov
sub
movsb
xchg
fs
xor
subl
fwait
mov
mov
push
jg
mov
push
pop
rclb
les
fimull
fs
push
dec
rorl
or
aaa
xchg
pop
data16
push
mov
movb
std
filds
ja
cld
lods
sbb
and
pusha
mov
cmp
dec
xchg
xchg
call
dec
xchg
mov
xor
shr
fists
aam
sub
adc
xor
arpl
inc
loope
mov
xor
dec
addr16
adcl
inc
sbbl
cltd
xchg
push
xchg
out
dec
aaa
adc
jl
mov
dec
lods
push
scas
xor
negb
mov
test
mov
pop
mov
xchg
mov
scas
fcmovnb
or
stos
mov
push
in
jo
cs
push
gs
add
sbb
icebp
inc
add
andb
sub
pop
fsubl
int3
daa
je
test
xchg
addb
aad
mov
adc
ret
xor
cmpb
das
adc
je
pop
subl
mov
mov
mov
lret
xchg
xchg
cli
jp
out
sub
ljmp
jmp
loop
and
push
subl
pop
fidivl
pushf
gs
xchg
fdivs
scas
cwtl
push
push
test
sbb
jae
xchg
mov
dec
insl
mov
pushf
xchg
push
jecxz
jbe
mov
call
fnstenv
push
cmp
cld
ds
fmul
push
pop
cli
subb
push
cld
enter
lods
sub
or
jmp
and
in
jle
pop
mov
push
rolb
and
mov
dec
lods
pop
sbbl
lods
ja
daa
inc
lcall
mov
pop
dec
push
pop
sub
dec
decl
inc
negb
mov
add
out
push
test
and
or
pop
lahf
loope
jecxz
mov
addr16
jl
or
js
mov
jne
pop
jecxz
jge
enter
leave
push
pop
cltd
xor
dec
mov
xor
shll
inc
sbb
pop
and
mov
inc
shll
or
jl
mov
dec
push
sbb
or
mov
and
cwtl
loop
cmp
pop
add
cli
adc
mov
or
xchg
cmpsl
dec
fcmovne
lahf
loopne
xchg
stc
out
mov
inc
icebp
mov
pop
in
pop
lods
cld
dec
push
jo
dec
ja
push
cmc
mov
push
dec
fstl
push
adc
mov
inc
sahf
mov
xor
or
int
lock
mov
sub
xchg
pop
sub
adc
inc
cmpb
dec
stos
mov
pop
mov
sarl
out
shlb
fisubrl
mov
lds
jno,pt
jge
mov
cwtl
mov
sbb
loopne
mov
xor
pushf
sub
mov
xor
lea
aas
cmp
in
xchg
mov
jnp
scas
sub
sbb
mov
stos
lock
jp
rorb
daa
mov
xchg
sub
cltd
push
inc
enter
push
mov
xchg
dec
loopne
adc
outsl
ja
cmp
xor
dec
add
outsl
xorb
inc
adc
sub
fstpt
mov
xchg
push
xor
les
add
in
ss
adc
je
hlt
shl
push
push
sbb
fcompl
or
clc
inc
pop
lea
jle
insb
adc
and
jb
fwait
sub
pop
inc
aaa
inc
pop
aaa
lods
aaa
lret
les
pop
jmp
das
add
push
test
mov
cmp
movsl
adc
or
inc
fnstsw
mov
test
sarb
mov
mov
dec
inc
and
testl
sub
insl
js
mov
sbb
push
cmp
push
lret
mov
mov
push
out
iret
mov
add
arpl
mov
jnp
push
and
in
pop
jnp
cwtl
xor
les
cwtl
imul
or
clc
xor
mov
cmp
lahf
imul
xor
xchg
or
enter
or
pop
xor
and
fwait
rcrl
addr16
push
and
iret
shlb
xor
or
or
imul
mov
aaa
int
out
popf
push
dec
icebp
cs
stc
fstl
subb
cmp
ret
ljmp
in
cmpsl
inc
xchg
insl
in
jge
pusha
mov
push
inc
add
xor
lock
fchs
movsl
out
subl
iret
mov
dec
lea
or
mov
popf
dec
outsb
rcrb
dec
inc
pop
fistpl
jb
ror
insb
push
cmp
mov
test
sti
fsubrl
mov
mov
inc
fdivr
mov
rcrb
sbb
adc
mov
cmp
sbb
call
mov
popa
add
ds
pushl
inc
cmp
push
or
test
push
cltd
into
nop
pop
push
aaa
and
add
jge
int
inc
dec
lret
sub
xchg
rclb
sbb
sbb
inc
xor
popa
jbe
add
imul
push
dec
add
pop
cltd
or
nop
dec
mov
and
in
js
addr16
stc
xchg
mov
jae
dec
sub
jne
mov
mov
imul
adc
insb
jnp
adc
mov
lea
ret
mov
and
into
out
lfs
movsl
int
mov
jne
mov
stos
cmp
ds
dec
push
repz
test
jge
inc
outsb
push
arpl
shlb
sbb
inc
ret
arpl
mov
in
inc
sub
fs
sbb
and
dec
cmovno
and
into
mov
xor
loop
add
imul
push
icebp
insb
inc
insl
pusha
xorb
mov
iret
cmpsl
loope
int
xchg
int3
test
lret
shlb
mov
inc
push
sub
sub
jb
mov
es
jb
mov
test
and
xchg
nop
cmp
and
inc
or
add
mov
aaa
jnp
pop
pop
sbb
lcall
pop
inc
cld
clc
scas
int3
cmp
push
rclb
cmp
adc
push
movsb
jle
enter
rorb
and
movsl
lcall
sti
lods
aas
into
int
mov
repnz
dec
lods
mov
mov
mov
adc
in
sub
pop
push
repnz
cmp
or
je
stos
mov
out
stos
mov
outsl
or
aaa
in
jle
push
nop
inc
push
out
mov
jl
adc
call
daa
push
mov
push
mov
inc
mov
mov
lods
mov
dec
loopne
push
jne
or
or
push
sub
pop
lret
stos
lods
or
jl
imul
dec
dec
mov
fstpl
aaa
mov
push
cmp
mov
callw
jnp
ljmp
movsb
js
nop
cmpsl
data16
pop
adc
jl
dec
mov
inc
test
pop
inc
daa
xorl
mov
mov
adc
andb
in
push
icebp
xchg
ja
jmp
std
push
mov
daa
mov
push
mov
in
adc
sbb
das
pop
leave
repnz
jb
push
inc
das
cmpsl
mov
add
mov
test
lock
pushl
xorl
aam
jecxz
pop
lea
iret
or
dec
push
jmp
cli
cmc
mov
lock
ret
arpl
sbb
lret
das
outsl
je
shlb
scas
push
add
inc
std
mov
push
or
and
imul
mov
or
aad
xchg
test
clc
cmp
dec
and
rcrb
sahf
lods
cltd
pop
xchg
adc
fcoml
jne
dec
inc
adc
aad
out
xlat
jl
insl
mov
int
cli
mov
ss
or
insl
jecxz
fsubrp
in
cmp
scas
sbb
mov
add
fsubrp
jne
movsl
xor
mov
cmp
mov
dec
sarl
mov
xchg
sti
sub
ljmp
mov
std
out
add
mov
push
sbb
jnp
push
jl
popf
mov
mov
gs
xchg
push
and
sbb
sub
jecxz
dec
adc
ss
push
mov
sub
adc
xor
lret
das
inc
gs
sub
aas
xchg
push
inc
xor
lds
dec
lahf
jne
inc
inc
lret
pop
icebp
push
dec
pop
lcall
and
cwtl
sub
nop
cwtl
cli
shll
clc
stos
and
xor
bound
add
stc
lds
add
xor
jl
adc
inc
rorl
in
pop
push
rorb
or
adcl
lcall
mov
retw
dec
xor
push
pop
mov
ljmp
and
sbb
movsl
mov
mov
std
dec
imul
adc
in
mov
push
pop
out
add
inc
mov
pop
mov
mov
push
add
xchg
push
add
mov
stc
in
loope
and
mov
adc
cltd
lret
dec
sub
pop
mov
cmp
scas
fiadds
pop
sub
mov
cmp
inc
and
clc
jle
mov
adc
mov
mov
bound
testb
pop
push
mov
xor
pop
mov
jb
repnz
add
sti
add
lds
mov
fsts
lret
add
ffreep
out
int3
pushf
or
mov
pop
movsb
mov
push
mov
and
fsubrs
aad
pop
rcrl
dec
nop
dec
popa
jb
or
mov
pushf
fs
dec
jnp
mov
pop
cs
jne
ret
rclb
imul
jmp
mov
jbe
cmp
insl
xlat
sbb
cmp
test
xlat
stc
mov
mov
sbb
orb
outsb
and
mov
lds
xlat
inc
pop
mov
mov
pop
xchg
mov
lods
das
test
push
pop
mov
sub
enter
push
lds
dec
test
movsb
inc
scas
jg
dec
adc
xor
jge
cmp
loop
pop
subl
sbb
sti
inc
aad
pop
adc
movsl
or
sti
lds
pop
daa
and
inc
out
cmp
popa
inc
fmul
mov
sbb
mov
mov
insl
sub
and
fstpl
and
ja
call
adc
enter
inc
add
add
outsl
pop
lret
jmp
lock
cld
popf
mov
push
bound
push
or
pushf
mov
pop
std
popa
xor
stos
xchg
fists
call
jnp
pop
jl
xchg
inc
jle
or
adc
cmp
xchg
jmp
int3
gs
jp
imul
shr
lcall
in
pop
imul
into
pop
in
fs
adc
push
adc
add
xchg
rolb
inc
push
mov
sbb
jg
jnp
cli
mov
mov
ret
insb
jns
inc
and
push
lds
xor
lea
repz
xor
ret
pop
jmp
decl
mov
testl
or
clc
add
push
inc
dec
loope
int3
shlb
push
es
hlt
inc
ljmp
or
std
imul
push
imul
negb
inc
leave
mov
or
mov
sqrtps
dec
fnstenv
gs
mov
add
xchg
dec
xchg
jae
and
fisubs
xchg
fisttpll
xor
fiadds
int
pop
scas
add
mov
dec
dec
bound
push
pop
popf
es
shlb
popa
add
out
push
cld
jmp
xchg
mov
add
xor
dec
lock
xor
cmp
or
stos
push
jmp
jo
mov
nop
jae
bound
out
sub
jo
shl
jge
out
sbb
mov
and
mov
loopne
leave
ss
cs
xor
add
jl
test
and
into
push
lret
addr16
sbb
push
jl
stos
add
pop
frstpm(287
into
mov
shll
arpl
fmulp
popf
xchg
out
imulb
adc
xlat
popa
scas
sbb
stos
lcall
adc
and
mov
mov
xchg
roll
shll
popa
mov
dec
call
call
and
das
cmp
adc
lahf
inc
xchg
out
lahf
sub
cmp
lret
pop
data16
mov
adc
sbb
adcl
imulb
ljmp
mov
pop
sbb
add
mov
dec
les
dec
jno
sbb
lock
stc
jmp
hlt
mov
mov
xchg
jg
xchg
ja
push
daa
fadds
ret
dec
hlt
push
sbb
push
cmp
clc
sti
sbb
iret
or
add
add
mov
mov
adc
cli
pop
xchg
lea
adc
sub
mov
test
mov
xor
xor
sbb
shl
outsb
cmp
insl
xor
inc
mov
xchg
icebp
fs
xor
pop
scas
cmc
imul
sub
cmp
rcrb
out
and
movsl
sarl
test
mov
mov
les
outsl
sbb
adc
jnp
mov
cmc
cld
mov
test
mov
mov
pop
xor
mov
imul
jp
dec
pop
push
jp
sub
scas
ja
inc
pop
add
fstpt
xchg
jnp
lahf
mov
sarb
je
add
imul
pop
imul
inc
add
lcall
push
jecxz
cmp
mov
inc
push
add
rclb
sub
and
inc
xlat
inc
or
jne
movsb
dec
xchg
fbstp
pop
and
jp
mov
into
enter
fwait
orl
js
fwait
in
push
inc
ds
nop
adc
lret
jnp
pop
or
jle
mov
pop
push
mov
or
dec
daa
mov
faddl
mov
ss
int3
push
xor
movsl
dec
cwtl
mov
pushf
push
jmp
xor
test
pop
sbb
ret
mov
cmp
dec
dec
cltd
mov
test
fs
cli
mov
dec
mov
cmpsb
mov
les
lea
fidivrl
sbbl
push
popl
mov
sbb
push
cmp
and
inc
rclb
dec
hlt
mov
pop
mov
lock
mov
push
pop
ror
add
in
ds
inc
aad
push
cmp
cmpsb
add
pop
or
pop
lods
push
arpl
mov
push
inc
insb
mulb
xor
xor
test
fcomp
cs
int
or
imul
add
ja
clc
shlb
xor
imul
movsl
dec
inc
jge
push
pushf
mov
test
bound
sub
inc
jno
out
stos
aad
inc
testl
ljmp
jmp
jle
call
dec
int3
mov
jge
ss
hlt
lock
out
idiv
test
sbb
sub
push
shll
pusha
mov
lods
mov
mov
icebp
mov
orb
notb
sub
lcall
in
out
lock
stc
and
sbb
pop
scas
pop
stos
loopne
clc
and
mov
ds
insl
and
pop
push
jmp
xchg
lds
repz
sti
int3
lock
testl
call
in
cmp
xchg
imul
test
jg
cmpsb
mov
sbb
scas
dec
mov
cmp
inc
jbe
mov
push
imul
pop
or
ss
loopne
pop
int
mov
mov
shlb
mov
inc
sbb
cltd
mov
lret
mov
call
adc
push
inc
lods
jbe
lods
inc
pop
inc
pop
lds
xor
push
test
std
pop
std
xchg
test
jb
xchg
mov
fld
inc
xchg
adc
sti
mov
mov
lds
rcrb
fcompl
cli
mov
jle
mov
arpl
push
test
inc
scas
xchg
ret
addr16
dec
cmp
lock
fcoml
sub
sarb
or
lock
mov
sub
lahf
loop
in
mov
push
lock
loope
sbb
out
or
adc
xchg
mov
insl
mov
ljmp
or
xor
addl
jns
aad
call
aas
add
outsl
pusha
je
mov
sub
lods
out
xchg
shl
inc
out
mov
xor
xor
push
jns
pop
push
fs
jae
jl
mov
pusha
mov
cmp
lea
movb
mov
push
out
imul
xchg
mov
es
mov
iret
ror
add
mov
push
sbb
jge
mov
icebp
pop
js
mov
mov
pop
sahf
mov
sub
push
mov
push
dec
sarb
xor
mov
sahf
sbb
idivl
lret
ret
mov
xor
fcoml
arpl
lods
push
mov
mov
test
mov
mov
add
icebp
hlt
shlb
jle
sbb
jbe
mov
test
popa
lahf
add
mov
orb
adc
adc
cli
mov
and
rcl
xor
inc
mov
xchg
movsb
fistl
js
into
pop
lret
adc
mov
and
adc
les
sbb
or
and
idiv
fs
pop
xor
jae
sbb
mov
shl
mov
sti
inc
xchg
rcr
cmpsb
nop
xor
jmp
lahf
insl
loopne
pop
ljmp
cmpsb
xor
mov
mov
lahf
or
jmp
test
jmp
icebp
jb
mov
inc
nop
fcoms
mov
mov
bnd
lods
add
xor
rclb
xor
aad
bound
mov
mov
xchg
cld
insb
shll
xchg
xchg
sbb
std
adc
adc
aam
inc
jne
jecxz
pop
popf
or
sub
negb
or
call
cltd
cmpsl
es
cmpsl
and
fwait
insl
sahf
gs
mov
dec
push
sub
popf
sub
xchg
adc
inc
sub
cltd
mov
mov
ljmp
lcall
sbb
adc
das
mul
push
inc
out
sti
pop
stc
jecxz
mov
in
sbb
pop
jp
add
pop
in
inc
idivl
xor
push
add
jo
xchg
in
mov
cmp
and
arpl
shlb
cmp
cs
ljmp
pop
or
xor
in
ljmp
lahf
jb
test
cmp
push
inc
dec
add
repnz
jns
ljmp
jge
mov
sbb
call
pop
in
mov
or
mov
shlb
xor
ds
xchg
add
sub
xor
dec
add
sub
sub
int
jle
or
lods
push
out
xchg
mov
pop
inc
jecxz
loop
cmc
in
lahf
stos
adc
aad
nop
jecxz
add
mov
sub
ficomps
in
int3
shr
xchg
fildl
hlt
dec
inc
and
push
and
mov
fildll
push
call
adc
push
ss
dec
fdivrp
inc
push
jle
xchg
mov
jle
jg
mov
ficoml
mov
call
pop
push
ffreep
dec
dec
cltd
aam
and
inc
adc
call
lds
je
cwtl
xchg
ud1
pop
out
loop
addr16
sub
cmc
xlat
hlt
dec
pop
push
aas
gs
out
dec
push
aad
or
insl
pop
mov
xchg
cmpsl
push
add
pop
shl
mov
mov
adc
mov
imul
fs
jle
push
mov
ret
sbb
jecxz
push
xlat
xor
mov
xchg
add
stc
lods
fwait
mov
bound
cmp
and
adc
xchg
cs
sbb
rcrl
inc
idivl
push
test
or
clc
hlt
mov
cmpsl
cli
les
xlat
mov
andb
cmpsb
jecxz
js
adc
jg
movsb
mov
mov
cmp
cmpsl
xchg
cmc
mov
test
stos
jae
push
daa
nop
inc
shl
mov
push
gs
lahf
inc
xor
popl
mov
xlat
imul
add
out
inc
aad
ja
insl
lahf
popa
std
lds
jecxz
mov
dec
push
aad
decb
test
sar
std
repz
inc
add
enter
sub
push
idivb
sbb
xchg
pushf
aas
movsl
divb
in
ret
insb
push
je
mov
mov
pop
cltd
ds
mov
xor
aad
dec
rcr
sub
roll
cld
and
mov
scas
movsb
adc
adc
je
or
push
js
nop
pop
insl
ljmp
outsb
sub
inc
adc
pop
or
xchg
mov
xchg
hlt
push
pop
loop
pusha
gs
sbbl
mov
sbb
or
orb
dec
fidivrl
jg
pop
mov
xchg
clc
mov
ficomps
dec
movsl
sbb
lods
lahf
mov
mov
das
sub
dec
sub
aas
and
fidivrl
xchg
push
and
pop
test
outsl
jmp
shl
or
frstor
scas
shl
sbb
or
lds
jno
adc
jbe
std
mov
ffree
or
fldl
imul
push
sub
pop
mov
movsl
xlat
sbb
sbb
scas
ja
mov
lods
fwait
and
lods
sub
mov
in
cmp
mov
jecxz
pop
mov
mov
or
cld
call
mov
fisttpll
arpl
sbb
aam
push
aam
imul
outsb
pop
js
cmp
sub
lahf
fs
jae
or
lret
dec
mov
outsl
mov
jge
mov
int3
push
lea
ljmp
mov
imul
aas
pop
cli
mov
cmp
mov
idivb
mov
inc
push
jae
xor
add
sub
and
mov
iret
shrb
int3
sub
mov
cmp
cmp
loopne
add
cltd
lods
mov
push
mov
daa
pushf
push
xor
mov
pusha
mov
test
add
add
flds
xchg
mov
lods
leave
xchg
std
pusha
cmc
fdivl
rcrb
loop
mull
fisubrs
mov
inc
xchg
mov
into
pop
or
nop
insb
push
pop
hlt
sub
cmp
adc
pop
mov
cs
jmp
lahf
pop
roll
test
and
inc
jecxz
repnz
sbb
xor
cmpsb
jle
in
mov
aam
jg
jecxz
mov
dec
xor
test
rolb
push
jo
rorb
push
xchg
xchg
sbb
sahf
test
movsl
jmp
pop
orb
cmp
dec
sub
mov
cmp
daa
dec
pop
lcall
cmp
call
sti
aad
push
pop
rcr
subb
and
dec
insb
pop
or
xchg
sbb
rcrb
mov
xchg
cmpsl
sbb
mov
xchg
jmp
aaa
push
fwait
orb
mov
jb
push
fmuls
ja
ds
inc
xor
sbb
mov
push
mov
cmp
sbb
fmull
cmp
test
shll
pop
push
mov
repz
fcom
repnz
mov
dec
inc
mov
xor
insl
xchg
xor
jmp
ds
out
lret
push
mov
test
in
out
mov
adc
fimuls
or
jecxz
sbb
sbb
sub
dec
pop
pop
sub
jae
jns
jl
push
hlt
adc
hlt
jbe
sub
inc
les
adc
stos
movsl
jg
sarl
dec
jp
mov
rorl
repnz
je
pop
mov
fldt
sti
mov
adcb
sbb
push
and
sub
in
sbb
insb
ficomps
stc
fnstsw
aam
int
decl
sbb
mov
addr16
pop
shl
dec
jne
add
test
daa
xor
imul
lret
pop
popf
iret
push
test
inc
and
outsl
fildl
mov
pop
sub
enter
ja
cmp
addl
cltd
lods
fsubrl
xor
clc
xchg
test
sbb
int3
xor
gs
add
cmp
stos
clc
sahf
cmp
pop
lock
push
mov
mov
xorb
sub
mov
or
lcall
pushf
xor
out
dec
arpl
add
jecxz
sbb
bound
dec
xor
cmc
jno
and
cmp
push
loope
or
mov
scas
and
js
leave
mov
daa
mov
bound
std
ja
or
cld
dec
scas
mov
lds
or
scas
fcompl
in
mov
push
int3
mov
dec
sbb
cmp
js
push
ficoms
or
rorb
jl
pusha
mov
cmp
push
and
stos
popa
push
push
in
hlt
mov
dec
inc
inc
cltd
andb
mov
jl
mov
subl
std
punpckhwd
stc
xchg
in
sub
dec
xor
aad
insl
mov
fstp
jg
adc
push
cwtl
clc
add
cmp
xchg
jo
pop
bound
add
aad
fistps
pop
ljmp
cmpsb
push
adc
inc
lds
enter
data16
pop
aad
and
ffree
in
rorb
pop
fstps
jo
dec
xor
mov
or
insl
ret
add
pop
aaa
es
jne
mov
pop
sti
insl
push
dec
shll
test
and
dec
sbb
jmp
sub
fbstp
push
xlat
insl
xor
pop
ret
leave
or
sub
inc
cld
test
adcb
mov
or
inc
out
mov
rcrl
insl
inc
popf
icebp
dec
inc
aas
dec
inc
ficoms
stc
xor
add
jno
adc
ljmp
mov
in
push
mov
mov
loope
fsub
adc
cmc
xchg
or
std
sbb
test
iret
or
and
test
mov
and
pop
mov
bound
pushf
dec
iret
jae
cmp
ret
and
fstl
sbb
adc
mov
pop
subl
and
cli
test
dec
and
mov
sbb
push
dec
mov
rcll
add
rcll
inc
ljmp
das
jl
xchg
sbb
lahf
fcom
scas
mov
mov
gs
mov
push
pop
jns
mov
cmp
roll
dec
xchg
popa
lcall
cmpsl
mov
ljmp
mov
sub
test
mov
pop
jecxz
int
pop
in
ss
out
aam
in
and
bnd
xor
outsl
dec
out
aad
frstor
mov
sub
pop
test
push
aas
add
sub
gs
shlb
test
mov
neg
pusha
test
int
push
mov
ja
faddl
std
or
pushf
js
cmpsb
push
mov
bound
push
cmp
subl
xchg
imul
gs
add
testl
sub
in
sub
add
jne
mov
jns
lea
leave
loopne
arpl
or
pusha
andw
mov
lea
out
out
pop
mov
mov
add
mov
jle
cmp
cltd
ret
call
movsb
out
xchg
adc
popa
movsl
cld
and
dec
pop
sti
dec
scas
xor
addl
lahf
add
mov
mov
int
jbe
stos
lcall
lea
fxch
data16
cmp
jge
xor
ficomps
enter
mov
call
mov
push
aad
cltd
cmpsl
add
decl
mov
and
pushf
mov
out
mov
add
popa
cmc
mov
push
dec
inc
inc
cmp
mov
andl
sbb
sub
jge
jae
ljmp
and
sub
mov
sbb
cmpl
cmpsb
push
xchg
mov
mov
pop
pop
jns
jo
xor
scas
scas
pop
inc
xor
or
test
aam
and
mov
mov
ljmp
addl
cmpsb
test
cmp
imul
mov
jle
pop
pop
data16
mov
xor
push
das
or
jmp
cmp
sbb
outsl
lock
fs
dec
test
jecxz
push
adc
cld
mov
jb
inc
push
lods
pop
arpl
xchg
push
iret
mov
adc
jbe
cmp
rorb
xor
add
sub
pop
test
fiaddl
inc
push
cmp
inc
imul
jg
adc
ja
fcmovu
push
lea
pop
adc
dec
push
ret
ret
cwtl
mov
adcb
push
ds
repz
in
xchg
repz
cli
lods
test
xlat
inc
push
push
and
lock
jl
out
ret
call
inc
dec
pop
outsl
pushf
cmp
xrelease
lret
xorb
xor
enter
xchg
xor
sar
pusha
repz
pushf
mov
sub
psllw
push
out
xor
xor
lods
ss
int3
xchg
popa
mov
jne
or
push
sbb
sbb
das
xchg
aad
push
mov
cmp
adc
inc
inc
cwtl
pop
push
movsl
mov
mov
inc
push
lret
push
inc
rorl
adc
enter
cmpsl
mov
jecxz
pop
daa
in
adcb
jecxz
in
push
cmp
fadds
mov
cmpsl
outsl
xchg
jmp
mov
lret
pop
dec
push
push
scas
xor
jg,pt
pop
xchg
sbb
rcr
mulb
inc
jno
pop
out
sbb
dec
mov
add
adc
mov
int3
pop
loopne
pop
xchg
jmp
dec
rorb
ss
xorl
testl
mov
or
jge
mov
enter
cmpsb
adc
push
loop
cmpsl
push
loopne
ss
jg
cmpsb
adc
mov
mov
cltd
cmp
dec
inc
mov
push
pusha
pushf
aad
ss
dec
inc
push
or
movsb
daa
ss
pop
lahf
fidivrl
insb
bound
adc
addb
xchg
std
cmp
adc
or
fwait
mov
add
lret
scas
jb
sub
push
dec
and
adc
push
dec
into
lock
jp
mov
mov
repz
dec
push
lret
inc
dec
push
or
sbb
bound
push
repz
cmp
sub
aaa
cmp
imul
mov
xchg
hlt
or
call
pop
cmpsb
js
and
jl
inc
lcall
pop
aas
imulb
add
mov
xor
xchg
mov
sub
aaa
loop
push
cli
ffreep
push
pop
loop
mov
and
addr16
cmpsl
sti
cli
jge
add
mov
mov
mov
inc
je
mov
loope
mov
jo
adc
incb
es
inc
es
inc
dec
cmp
jo
fnsave
mov
pop
insb
xchg
fnstenv
mov
mov
xchg
outsl
inc
jnp
ja
sub
andb
jle
out
mov
push
push
pop
vpmullw
jp
xor
loopne
pop
in
jecxz
div
xchg
xor
mov
decl
arpl
mov
jmp
mov
ja
xchg
lea
repnz
stos
fsubl
or
fdivrs
and
loop
cltd
aad
insb
stos
mov
fmuls
sarb
out
xchg
out
add
notl
pop
pushf
daa
inc
imul
and
out
outsl
lods
xor
aam
stos
or
stos
cwtl
pop
popa
cli
mov
lea
mov
xchg
psrad
lea
and
popf
push
shl
mov
popa
pop
jge
fwait
mov
mov
leave
cmpsl
test
iret
adc
jle
pusha
fcomps
inc
xchg
push
test
int
xchg
popf
fwait
inc
xchg
js
roll
xchg
enter
mov
pop
js
dec
sahf
xchg
out
ljmp
cmpsb
aas
insb
stos
cmp
in
push
mov
mov
cmpsl
sub
outsl
add
cmp
xchg
jnp
xlat
movsb
ror
cwtl
je
xchg
in
fbld
cmp
lods
xchg
imul
lds
lea
sub
dec
inc
lahf
cmp
and
arpl
inc
insb
aam
jbe
push
push
mov
lret
push
cwtl
jbe
cwtl
outsl
lret
or
or
push
adc
imul
mov
mov
xchg
loope
adc
addr16
sbb
jbe,pt
pop
push
rcll
or
adc
jl
nop
out
pusha
xchg
push
in
sub
fcoms
mov
scas
and
dec
push
jns
mull
int3
lret
int3
fsubl
stc
add
add
notl
icebp
aam
dec
rcrl
push
ljmp
add
cmpsb
lods
test
jge
nop
dec
or
stc
and
mov
add
dec
adc
and
lcall
adc
push
mov
daa
test
fnstcw
push
sar
xchg
movsl
sbb
push
aad
loop
insb
push
xor
cli
pop
xchg
cmp
push
or
and
fsubp
inc
xchg
test
pusha
testb
leave
pusha
daa
jg
mov
bound
loopne
push
rcr
mov
in
adc
int3
push
cwtl
mov
aam
cmp
adc
push
fwait
mov
lods
and
jp
shrb
loopne
js
out
xor
imul
cwtl
pop
ds
mov
mov
jl
loope
push
ja
cmpsl
ss
jbe
push
in
pop
sbb
xchg
subl
mov
mov
test
inc
sub
mov
sbbb
int
repnz
pop
mov
and
or
shll
push
rcr
fdivr
xor
jle
add
cmpsb
lret
push
in
sbb
pop
add
iret
shrl
aam
outsl
ss
rorl
mov
jno
fdivl
js
mov
mov
insl
push
mov
jmp
pop
out
and
inc
cwtl
movsl
cmp
sub
data16
push
aaa
xor
mov
mov
xchg
sub
imulb
test
mov
sub
inc
cwtl
inc
int3
sahf
das
mov
cmp
sarb
mov
mov
mov
cmp
xchg
jo
push
and
in
popa
cmc
mov
cld
out
xor
icebp
mov
fs
mov
lret
adc
xor
movsb
gs
mov
mov
fdivl
adc
jae
xlat
pop
lea
and
xor
inc
das
in
in
sbb
test
cld
jne
add
mov
sub
and
sub
xchg
and
sahf
enter
pop
fisubs
mov
cmp
push
xchg
ficoml
push
mov
mov
dec
hlt
data16
mov
imul
sbb
es
and
ljmp
pop
and
add
pop
aas
mov
sub
lea
stos
sti
lods
sbb
call
jecxz
add
test
jl
inc
push
in
lods
sub
xor
xlat
fs
jecxz
mov
jp
loopne
jae
ret
adc
cmpsb
fsubl
lcall
xchg
or
popa
fidivrs
ret
test
daa
rolb
or
cmpsb
cmp
lds
in
mov
jne
mov
xor
mov
pop
sub
push
push
mov
shll
mov
test
adc
adc
int3
repz
rcr
insb
dec
sar
pop
xchg
cmp
popf
cld
mov
add
andb
inc
sub
mov
out
scas
mov
xchg
rcr
and
in
dec
mov
enter
leave
std
mov
dec
or
stos
xor
dec
adc
push
sbb
insb
and
push
je
scas
inc
mov
leave
add
adc
cmpb
imul
test
inc
pop
dec
xchg
xor
ja
lock
and
mov
rclb
push
push
ss
nop
mov
rol
repz
repnz
test
and
and
icebp
mov
jle
cs
in
imul
add
test
jbe
fstpl
mov
cltd
test
xchg
jo
test
xchg
mov
adc
jmp
mov
sub
sbb
stc
sbb
cmp
fldt
pop
test
stos
xchg
repz
pop
mov
sub
test
fs
mov
pop
jo
rolb
test
enter
outsl
stos
sahf
mov
xchg
xchg
ja
sub
pop
ds
add
dec
and
add
sbb
mov
icebp
js
popa
xor
add
sbb
outsl
shlb
push
xchg
jmp
subb
data16
jle
test
daa
sti
arpl
push
loop
in
push
imulb
xor
pop
sub
adc
mov
xorl
rcrb
push
add
dec
adc
jmp
add
shrl
jne
call
inc
mov
sub
mov
dec
cltd
and
rclb
mov
mov
pop
add
and
mov
pusha
pop
xor
add
dec
stos
loop
add
sbb
push
mov
cltd
int
jmp
movsl
mov
movsb
sub
movsl
hlt
adc
addb
jne
es
xor
and
inc
cmp
fstps
and
adc
push
xchg
fcoms
cltd
daa
jle
mov
pcmpeqb
bound
pop
andl
adc
subb
lret
arpl
ljmp
test
or
nop
or
insl
ljmp
in
enter
xchg
sbb
fisttpll
out
in
ficomps
ficoms
rcll
divb
cmp
mov
bound
jnp
imul
and
movsl
add
push
sti
in
cmc
hlt
or
out
out
push
or
call
cmc
stos
fdivr
outsb
pushw
js
xor
shrl
push
push
sub
or
stos
les
xchg
push
test
jmp
mov
cli
or
ret
sbb
or
and
arpl
dec
in
cld
adc
jg
or
aam
inc
fcoms
pop
inc
pop
add
xor
mov
sub
call
xchg
stos
jbe
lret
test
test
jl
sbb
in
mov
mov
out
pop
and
test
push
lcall
out
nop
adc
nopl
jmp
lret
add
or
ror
sbb
pop
mov
or
sub
inc
insb
inc
sub
inc
aaa
outsb
mov
mov
movsl
outsb
xor
inc
mov
adc
sahf
cmpsb
jecxz
push
fimull
xlat
xchg
mov
daa
arpl
sub
mov
xor
add
fs
out
dec
lods
adc
cmpb
jo
or
and
aam
mov
iret
xchg
shll
push
mov
fcomp
jb
icebp
orl
sbb
fisubs
mov
adc
cs
mov
mov
jno
into
fisttpl
pop
loope
imul
rcrb
repnz
insl
es
xchg
inc
lret
push
in
pop
push
xchg
enter
movsl
or
fstl
ja
pop
cwtl
jle
mov
shlb
push
push
mov
adc
rclb
pop
mov
mov
xchg
out
scas
in
sbb
inc
xchg
fsubrs
fmuls
add
cmpsb
subl
scas
hlt
pop
mov
sbbb
and
movsb
mov
push
jbe
cli
mov
xor
pop
out
loop
push
inc
popf
inc
sub
cmp
push
popa
mov
push
or
enter
mov
jo
push
or
pusha
push
in
mov
cmp
push
dec
paddb
out
test
mov
push
fdivrs
shl
xorb
xor
cmp
fcoms
daa
flds
imul
sub
cld
xor
cmp
testl
sbb
mov
mov
push
add
pop
inc
add
pop
mov
add
or
pop
iret
jae
inc
fwait
adcb
mov
test
pop
pop
cmp
out
scas
and
cli
fistps
inc
repz
mov
push
sbb
xor
or
rclb
xor
and
adc
scas
push
gs
and
das
loopne
mov
cltd
sti
std
push
loopne
insb
insl
inc
push
fs
add
fists
aas
out
push
movsb
jge
mov
push
lcall
in
jge
fdivs
xchg
hlt
ret
insb
test
push
call
sarl
mov
stc
lock
leave
ss
cwtl
mov
lcall
and
rcll
mov
fsubp
sbb
xor
clc
inc
jae
push
cmc
fwait
xlat
not
dec
inc
xor
loop
and
push
sti
pusha
pop
repnz
push
mov
adc
es
and
in
xor
sbb
imul
sub
inc
fldl
pop
test
hlt
testl
xchg
movsl
fldenv
fs
ds
dec
push
icebp
push
mov
dec
sub
mov
call
cmp
add
rolb
pop
outsb
int
jl
cld
shrl
mov
in
imul
sub
push
push
inc
add
scas
icebp
ja
push
or
mov
imul
mov
leave
jecxz
push
getsec
xchg
or
sbb
push
popf
loop
inc
mov
push
mov
mov
add
xor
orb
test
inc
sub
inc
pop
push
inc
mov
sbb
jmp
inc
jmp
ret
inc
lret
mov
ret
xor
xchg
out
mov
icebp
out
cmpl
xchg
je
movsl
inc
jmp
mov
mov
add
and
insb
push
mov
xor
sub
test
cli
mov
inc
daa
xchg
lock
cmp
jmp
int
fisubrs
pushf
mov
inc
cwtl
ret
and
jmp
jae
sbb
mov
xchg
mov
addr16
out
sub
fcmovnb
sub
loop
loopne
cmpsl
sbb
mov
notl
sub
repz
cld
aaa
adc
das
dec
insl
rcrb
sbb
cmp
mov
repz
movsl
sti
popf
in
and
lcall
daa
xor
mov
clc
dec
cmp
inc
mov
push
clc
mov
add
into
ss
pop
out
popf
jg
fdivrl
dec
mov
insb
ret
sbb
inc
pushf
adc
xor
idivb
mov
cmpsb
and
sbb
mov
iret
push
and
pop
xchg
arpl
nop
pop
les
push
fwait
iret
out
clc
mov
lods
into
jmp
movsb
fs
fisttpl
aaa
mov
xlat
inc
outsb
mov
pop
cmp
fiadds
cmp
dec
push
clc
xlat
add
pop
addr16
aad
int
pop
xchg
cli
jmp
cld
orps
jae
dec
adc
push
imul
xor
iret
pop
xor
int3
and
bound
mov
jmp
cmp
and
push
and
fmull
aad
sub
jno
fwait
jno
and
sub
pop
jle
es
jmp
xor
test
mov
fwait
in
sub
mov
cmp
adc
into
popa
xor
repz
jmp
lcall
inc
mov
pop
or
movsb
jns
dec
xor
cmc
push
xor
test
add
xchg
int3
pusha
sub
mov
dec
mov
xor
add
jle
cmp
dec
jl
into
or
pop
outsb
mov
sbb
and
in
cmpsb
mov
cmp
mov
push
dec
mov
push
loope
xor
adc
je
sub
js
sub
or
lret
push
mov
out
fidivrl
mov
in
ret
into
push
fisttpll
jg
out
push
sbb
insb
xor
scas
lea
mov
add
cmc
and
aas
loopne
aad
pop
inc
cld
jg
mov
test
cmp
adc
int
mov
xchg
mov
push
out
sbb
rol
and
cmp
ljmp
push
sub
or
jmp
imul
fsts
xor
cmp
popf
cmpsb
sbb
aam
dec
addb
or
jecxz
test
push
jb
out
inc
testl
xor
and
jp
xor
or
jp
fdivs
lcall
xchg
jp
aas
ret
stos
arpl
das
sub
xlat
xchg
jg
mov
lcall
jl
push
mov
daa
jg
ja
test
jge
adc
scas
sti
xor
mov
xor
insl
ror
icebp
call
cmpsl
popf
rep
dec
cld
addr16
push
or
lahf
outsl
aad
scas
fistpl
and
xor
dec
cmp
arpl
movlps
sub
dec
cmp
test
leave
cli
push
xchg
mov
imul
mov
adc
mov
push
sbb
mull
stc
std
lret
fmul
scas
mov
into
movsb
fisubrl
sub
mov
push
lods
dec
mov
in
sbb
ja
fistpl
fildl
loopne
xchg
dec
adc
ret
in
pop
push
dec
in
fnsave
scas
jmp
rcr
ret
sbb
xor
mov
xchg
rclb
scas
xchg
cmp
in
mov
jmp
adcl
popf
dec
fldt
mov
mov
shll
stc
shlb
lods
or
xor
mov
inc
jno
stc
cs
stos
test
in
mov
stos
mov
aas
xchg
sub
stos
add
jmp
jno
sub
shrb
jmp
cwtl
xchg
pop
lock
pop
das
mov
rcll
jo
xchg
add
fsubs
inc
sub
cli
pop
daa
mov
adc
lods
cmc
mov
jnp
cmc
push
sti
inc
mov
xchg
jg
adc
cmp
imul
cld
xlat
cmp
lret
popf
cmp
mov
mov
in
cmpb
lea
in
popf
mov
inc
pop
push
out
push
pop
add
adc
or
jb
sub
loop
jbe
add
inc
mov
and
push
add
das
add
lret
jg
sub
cmpsl
and
aas
xchg
mov
sub
xor
xchg
aam
inc
sub
jbe
ss
movsl
adc
cmc
xchg
outsl
repnz
ret
mov
inc
clc
in
push
or
jae
out
leave
add
cld
pop
cmp
add
fdivrs
adc
stc
pop
scas
xlat
push
neg
push
mov
cltd
xor
js
fisttpll
inc
push
call
das
popa
pop
faddl
xor
nop
fisubl
cmp
cmpsb
outsb
adc
hlt
cmp
paddq
ljmp
scas
mov
leave
sti
mov
jb
ret
sub
xor
call
xor
mov
dec
pop
jne
fists
sbb
cmp
push
fistpll
push
sub
or
inc
and
addr16
mov
jmp
loope
xor
icebp
mov
into
xor
dec
stos
jp
dec
xor
rcll
vmread
outsl
xor
inc
gs
inc
sub
sbb
out
pop
jno
xchg
adc
fisttpll
mov
cs
or
mov
icebp
push
pop
clc
mov
rcll
push
cwtl
dec
orb
xlat
cltd
pop
jmp
jl
dec
loop
ss
clc
and
stos
mov
or
mov
pop
jg
jge
leave
imul
fwait
push
shlb
imul
mov
mov
loope
push
or
in
or
or
sub
mov
imul
lahf
nop
out
push
mov
sub
and
loopne
jge
sub
stc
sbb
dec
ror
int3
xor
stos
inc
push
sbbl
dec
fstps
xchg
cmp
mov
cld
mov
insl
repz
or
cwtl
rcll
push
test
arpl
test
test
pop
xchg
xchg
sub
adc
daa
int
cmp
decl
push
xorl
pop
fimuls
popa
das
rcll
stos
mov
jecxz
push
iret
mov
orl
cs
shlb
cld
aam
cmp
add
mov
sbb
js
and
xor
std
jge
lret
mov
fistps
jle
arpl
cmp
inc
fnstsw
stc
lock
shll
adcb
jbe
call
outsl
call
lods
pop
xchg
daa
inc
leave
cmpsb
adc
pop
xorb
dec
push
addr16
sbb
das
xchg
mov
jge
sbb
aad
lret
cmp
stc
push
mov
dec
js
out
sub
mov
lahf
js
jnp
pop
mov
pop
mov
out
push
jnp
cwtl
adc
sub
cmpsb
add
and
inc
out
pop
subl
scas
adc
aas
dec
sbb
adc
jp
mov
dec
push
mov
lods
out
repnz
sub
mov
imul
sub
mov
aam
jns
cs
lcall
push
inc
movsl
test
insb
and
push
ja
imul
xchg
lods
stos
push
pop
js
aam
test
es
loopne
mov
add
in
and
mov
int
ret
das
rcl
insb
fs
pop
inc
jecxz
inc
inc
ret
ds
sub
push
mov
pushf
cmpsb
jo
mov
mov
out
push
ds
mov
inc
mov
cmc
sahf
add
hlt
push
lods
mov
shrb
jmp
mov
stc
lret
mov
pop
jecxz
xchg
cmp
sub
push
pusha
fcomip
xchg
xchg
cwtl
mov
mov
insb
imul
ds
pop
popa
jge
mov
hlt
loopne
sti
cwtl
outsl
sub
mov
sub
ds
mov
or
daa
cmp
dec
js
push
je
sub
rolb
sbb
or
pop
jmp
in
das
xchg
int
push
dec
fwait
lahf
sub
das
adc
clc
ss
pop
testl
loope
test
lock
stc
xlat
lea
mov
ss
ljmp
xchg
cmc
fisttpl
or
inc
lret
pop
push
inc
leave
cmp
data16
popf
aad
fiaddl
xor
mov
das
maxps
add
cmp
xchg
xchg
ror
mov
stc
mov
xchg
adc
xor
call
fildl
hlt
and
cmc
jle
inc
repz
jo
mov
sub
loop
jmp
arpl
leave
test
xchg
push
loopne
jg
mov
cmc
in
jbe
bound
jp
push
mov
dec
in
and
shr
pop
dec
aas
ss
pop
orl
mov
lret
pop
cwtl
sbb
inc
cld
mov
jo
out
enter
loop
addb
jo
mov
lcall
sbb
cmpsb
das
pop
rorb
sbb
idiv
enter
int
add
jmp
add
repz
repnz
nop
add
mov
loopne
outsb
xor
repz
iret
adc
call
sbbl
sub
jb
and
inc
mov
mov
das
mov
adcb
std
shlb
pop
cmp
bound
bound
dec
test
mov
sub
pop
and
mov
add
cmp
lock
data16
js
loope
negl
iret
movsl
sub
mov
dec
negb
dec
shlb
add
pusha
xchg
loopne
push
cltd
clc
scas
push
inc
cs
mov
loop
push
dec
cmp
repz
rclb
push
gs
rcrl
mov
adcb
fdiv
xor
lods
mul
inc
mov
jns
lock
outsb
sbb
xchg
out
jb
sub
pop
frstor
push
outsl
testl
cmp
gs
adc
test
xchg
stos
dec
lcall
push
mov
add
or
mov
aam
adc
adc
and
xchg
in
xor
adc
das
or
lret
xchg
pop
mov
mov
pop
out
ljmp
es
add
xor
mov
fst
cmp
sbb
bound
mov
push
int
push
aaa
loopne
lahf
cmp
shll
xlat
loope
pop
jle
jge
jge
push
dec
scas
xchg
sbb
in
push
cmp
aad
add
jl
xchg
popa
jle
frstor
lret
in
jp
sub
loopne,pn
jb
sbb
repnz
cwtl
lods
push
pop
cmp
xchg
call
jge
fstps
jne
and
sar
test
sbb
cmpsl
mov
outsl
fs
nop
adcb
xchg
adc
shr
clc
lods
add
mov
or
call
divb
out
jecxz
mov
out
sub
lcallw
out
aam
mov
pop
inc
xchg
jnp
inc
or
mov
xlat
cmc
add
push
rolb
je
xor
xor
lea
lcall
push
outsl
dec
cli
sahf
jae
sbb
clc
pop
in
cli
out
push
adc
sbb
int
sbb
xchg
std
and
jg
sbb
testb
pushf
sub
and
xor
jle
jb
dec
in
sbbl
cmp
xchg
push
jle
and
push
push
dec
pop
mov
sti
pop
mov
add
daa
push
adc
pop
in
push
mov
xchg
sub
inc
inc
aam
push
lret
sbb
enter
or
fwait
or
scas
adc
push
lret
fisubs
mov
sbb
lea
xlat
inc
fs
push
out
xchg
stos
mov
std
mov
es
sub
jecxz
je
xchg
cmp
notl
dec
cmp
aam
inc
xor
mov
mov
pusha
sub
jl
fcmove
out
outsl
popf
jno
sub
stos
and
lret
lock
sbb
mov
das
stc
mov
and
mov
arpl
imul
and
jle
fwait
es
popa
jl
das
mov
addl
push
add
sbb
stos
fwait
dec
mov
mov
xchg
mov
sbb
int
push
subb
mov
daa
lret
add
movb
mov
popa
sar
cmpsl
and
cltd
in
pop
adc
xchg
pop
dec
ja
pop
sbb
push
gs
stc
subl
lret
cmc
loopne
loop
jno
fs
push
add
out
inc
lcall
dec
sbb
dec
aad
inc
jo
mov
rcll
sbb
inc
jmp
cmp
pop
test
outsl
call
cwtl
xchg
gs
push
push
inc
mov
fcomps
fmuls
pop
popa
scas
lret
pop
das
out
fisubs
data16
lods
jl
fsts
mov
in
sub
push
out
or
ljmp
mov
testb
xchg
or
shll
xchg
xor
cmp
insb
movsl
cmp
mov
fsubp
mov
mov
pop
mov
sub
xchg
sub
dec
dec
js
stc
add
cmpsb
lcall
mov
inc
mov
cltd
inc
cmpsl
cld
fmull
popf
cmc
xchg
mov
inc
xchg
xchg
inc
cltd
dec
call
mov
dec
push
and
insb
call
inc
xchg
lret
lock
jbe
sarb
xchg
cmpsb
int3
test
jg,pt
call
in
xchg
stc
cs
or
cmp
xchg
pop
push
push
inc
pop
aad
repz
hlt
mov
fsubrl
stos
or
sub
xor
test
inc
sbb
stos
lea
sbb
stos
cmpb
cld
aad
inc
add
jb
hlt
rclb
sub
das
or
iret
pop
jle
addb
stos
movsb
and
fs
shlb
ret
pop
stos
or
add
in
or
add
jae
loop
xchg
mov
in
push
push
and
mov
sub
mov
pop
mov
cmp
fwait
xor
jl,pt
inc
dec
mov
add
pop
xchg
dec
std
dec
cltd
jb
pop
pop
mov
dec
cmpsl
fadds
inc
ss
hlt
xchg
insl
lods
and
fmuls
aam
add
adc
mov
popa
out
scas
or
outsb
sub
imul
cli
lods
mov
pop
xor
mov
imull
sahf
lods
std
mov
xlat
hlt
das
or
mov
or
xor
mov
arpl
jg
pop
and
push
pop
les
cs
sti
push
mov
scas
ja
pop
sbbb
push
sbb
cmp
imul
ljmp
in
dec
aad
mov
add
xor
jl
stc
add
mov
dec
daa
sbb
cmp
xchg
push
and
push
dec
sub
xor
push
into
cmp
lahf
sbb
arpl
mov
sub
inc
loopne
popa
aas
lret
push
pop
mov
pop
into
daa
sbb
cli
inc
pop
push
mov
test
inc
test
lcall
push
adc
ds
cli
ljmp
jne
out
and
pushf
imul
mov
add
mov
repnz
cmp
jmp
in
outsb
lret
cmp
add
roll
fdivl
loope
les
mov
xchg
mov
popf
dec
xchg
mov
sti
jns
js
cmp
cmp
jmp
bound
scas
adc
pop
imul
or
mov
notl
pop
pop
lods
mov
adcb
inc
mov
unpckhps
fisubrs
lret
int
mov
push
pop
nop
xor
dec
popa
stos
lods
or
cmp
jne
cmp
mov
repnz
or
lcall
or
and
mov
mov
jecxz
movb
lds
cmp
test
mov
jmp
loopne
inc
jnp
and
jno
cmp
or
scas
out
punpcklbw
or
push
idivb
iret
xor
mov
jecxz
xor
xchg
adcl
xor
or
lock
icebp
dec
xor
test
bound
shrl
out
or
lcall
insb
dec
sub
and
dec
fsubl
mov
jae
jb
lcall
mov
pushf
mov
pop
fadds
pop
mov
adc
or
shlb
aam
add
mov
lcall
mov
or
test
or
shl
ret
and
popa
cmp
sbb
sbb
push
jle
mov
and
stc
mov
mov
insl
add
sahf
or
aam
cld
scas
mov
adc
sub
jno
int3
sar
add
jbe
add
mov
or
add
pushf
out
movsb
cmp
pop
mov
mov
in
adc
sbb
push
test
adc
push
lods
and
add
mov
cmp
mul
flds
mov
cld
push
xor
stc
sub
fidivrl
and
xchg
fs
insl
mov
inc
lea
jmp
pop
xchg
out
lods
mov
jns
mov
and
je
or
or
jmp
push
imul
pop
xor
xchg
leave
sbb
and
dec
push
sar
cld
aaa
sbb
pop
fmuls
ss
and
in
adc
cwtl
nop
sti
in
lock
lods
lea
out
and
ss
fmull
push
adc
xchg
loope
in
jb
add
leave
push
addb
xor
loope
dec
and
repz
cmc
andl
test
data16
mov
and
mov
fdivr
jns
negb
dec
jbe
mov
pcmpgtw
cmp
and
sahf
cmp
adc
xchg
jns
pop
mov
mov
outsb
inc
jmp
pop
je
cmp
sub
mov
push
jae
lcall
lods
out
adc
inc
sarl
or
out
fcmovnbe
jl,pt
and
push
mov
mov
pop
int
mov
test
scas
fldenv
lods
enter
sbb
test
adc
loop
jno
and
xor
bswap
jne
xor
iret
add
add
push
aam
test
mov
mov
scas
push
add
jno
dec
ss
jg
outsl
jp
xor
cmpb
dec
sbb
mov
out
aas
nop
cld
loop
iret
or
push
call
inc
add
shrl
roll
jbe
mov
lods
shlb
les
dec
ret
aaa
xor
clc
or
rolb
stos
mov
fdivl
rcrl
xchg
cmc
pop
sbb
fildl
mov
pop
add
dec
cmp
xchg
mov
or
je
sub
sti
in
ja
in
call
or
scas
jg
repnz
dec
mov
loop
sbb
aad
sbbb
loope
ds
xor
push
leave
inc
adc
stos
mov
mov
xchg
fistpl
orb
inc
inc
cltd
adc
xchg
mov
pop
inc
mov
lods
pop
sarb
add
mov
xchg
iret
sti
inc
addr16
dec
xchg
cmc
mov
in
push
call
cwtl
push
xchg
xor
mov
movsl
movl
clc
js
sysenter
das
mov
dec
sub
cli
fsts
push
cmp
mov
xor
lods
fbstp
ficompl
dec
mov
push
arpl
jl
dec
aaa
adc
inc
adc
push
inc
xchg
dec
push
lods
pop
cmpsb
sti
stos
repnz
push
push
mov
pop
sti
ds
push
inc
xorb
push
int
testl
ror
sbb
cmp
pop
imul
fstps
leave
jl
sti
mov
push
iret
xchg
in
or
clc
daa
btc
push
test
mov
imul
ficoml
xchg
sub
jle
push
adc
lahf
pop
mov
inc
mov
push
jae
jle
pop
insl
or
add
mov
mov
jb
push
mov
iret
pusha
cmp
or
negb
inc
sub
mov
into
rcrl
rcrb
jae
xchg
fiadds
mov
mov
jge
mov
xchg
in
rclb
jne
nop
mov
aad
dec
sahf
jp
mov
xor
aad
add
in
sbb
push
sub
movsb
decl
imul
out
dec
mov
rcl
mov
fwait
push
dec
outsl
and
xchg
jb
add
pop
aaa
inc
add
xchg
sub
adc
cmp
and
xor
or
jp
cmc
sahf
adc
sti
inc
sbb
fs
or
adc
fdivrs
clc
xchg
sti
xchg
ret
adc
mov
push
xor
adc
and
loop,pt
mov
clc
pop
ss
dec
iret
sub
inc
add
and
and
ret
jmp
fldcw
pushf
fidivs
popa
shlb
adc
imull
jns
push
dec
pusha
fdivl
mov
ret
outsl
mov
in
dec
daa
sbb
aad
and
repnz
inc
and
push
mov
dec
xchg
fsts
mov
mov
out
cmp
fwait
aaa
xchg
pop
xchg
out
mov
jecxz
fstps
pusha
mov
hlt
push
sti
and
sbb
sbb
daa
adc
adcl
xlat
xchg
and
jmp
xchg
mov
and
xchg
pop
loope
test
pop
repz
mov
push
jp
lea
bound
cmp
pop
mov
adc
add
jnp
jbe
movsb
shr
aaa
mov
pop
cmpsb
addr16
pop
cmp
push
pop
pop
sbb
lret
addr16
or
push
cmp
stos
test
mov
in
ret
or
add
mov
test
mov
fistpll
push
scas
ret
movsb
add
sahf
enter
sbb
fsubs
fistl
inc
xor
cltd
or
pusha
or
in
rcrl
cmp
ror
pop
cmpsb
loop
scas
cli
cmp
stc
adc
insb
push
aaa
pop
cmpb
clc
std
dec
mov
or
add
movsb
mov
sbb
out
popf
mov
in
fisttps
in
mov
popa
adc
or
rcll
int3
cmpsl
icebp
jl
out
jecxz
mov
cs
xor
push
jnp
ret
sbb
sbb
mov
je
inc
inc
sbb
setg
sar
mov
movsb
rorb
mov
sub
cmp
arpl
das
repz
push
mov
sbb
repz
push
arpl
cmc
shlb
mov
in
pop
mov
fiadds
mov
lds
xchg
inc
pop
push
pop
add
faddl
mov
adc
xor
mov
jecxz
in
jg
jp
xchg
cmp
ret
fbld
mov
push
lcall
subb
andb
add
mov
xor
in
lods
movsl
int3
lods
rcrb
ret
ficomps
out
pop
mov
inc
push
insb
sbb
cmp
xor
mov
mov
movsb
dec
jg
lods
into
inc
sub
xchg
sbb
jg
insl
adc
and
cmp
xchg
je
dec
mov
jp
xchg
mov
sahf
push
xor
int
add
mov
xchg
add
fdivp
sbb
test
mov
dec
movsl
aaa
xor
ds
adc
test
sbb
stos
iret
fisubs
leave
aaa
adc
adc
fsubs
push
sbb
fisubrs
lock
add
mov
push
stc
in
xchg
sub
jle
mov
test
pop
aam
inc
fbstp
mov
cmpsb
xorl
fcmove
adc
in
pop
mov
insl
in
sbb
dec
mov
and
dec
xorb
add
icebp
arpl
push
mov
and
and
jb
out
mov
pop
push
aad
sub
scas
pushf
mov
mov
adc
movsl
jo
gs
and
fs
inc
nop
lods
dec
inc
jmp
mov
cmpsb
dec
mov
dec
mov
jp
lods
jg
pushf
xrelease
jl
daa
fildll
push
out
sub
les
in
or
jno
loope
int
dec
loop
pushf
sbb
lcall
roll
ret
cmpsb
xchg
cmp
rcl
xchg
cmp
aam
repz
fidivrs
and
mov
mov
test
add
xchg
mov
lods
fidivs
mov
jg
lret
mov
mulb
aam
lahf
or
pop
and
push
adc
inc
mov
add
sar
inc
add
xorb
loope
add
andb
jne
fnstcw
sarb
sbbb
push
push
xor
lea
cmp
dec
jle
in
mov
testb
mov
fsub
sbb
insb
int3
mov
aad
repnz
lret
jmp
pushf
lods
pop
jp
ja
sub
push
mov
cs
mov
mov
jp
js
inc
sahf
or
sbb
in
xlat
xchg
aas
test
cmp
hlt
lods
lods
cwtl
insb
add
cmp
sbb
test
dec
in
cmpsb
mov
mov
clc
add
movsb
add
addr16
imul
aaa
sti
popaw
xor
jge
and
into
sti
pop
lods
bnd
dec
push
push
lods
lahf
mov
movsl
scas
xor
pop
icebp
pop
int3
cmp
xor
repnz
pop
stos
sub
rcll
jmp
inc
jl
jmp
mov
repz
push
sub
call
push
cmpsl
xor
push
add
push
lahf
sub
sarb
out
mov
add
inc
and
fnsave
fildll
sbb
clc
popa
std
rcr
jl
test
adc
xor
sbb
in
orb
cmp
dec
pop
jg
jmp
dec
mov
roll
out
sub
sbb
jb
arpl
add
addr16
mov
movsb
xchg
loop
sbb
int3
cmp
cmpsb
insl
stos
sbb
dec
push
mov
jne
adc
inc
mov
sub
push
nop
lret
inc
jbe
das
fwait
es
mov
dec
jge
push
push
jnp
push
push
push
in
subl
add
ljmp
fcmovb
loopne
lds
sub
and
cmpl
mov
mov
dec
add
inc
test
stos
fisttpl
int
arpl
cwtl
leave
iret
mov
push
sub
mov
daa
out
dec
dec
push
jmp
mov
out
cmpsl
lret
lcall
mulb
jge
xlat
jecxz
shrb
jmp
in
insl
ficompl
pop
mov
jecxz
xlat
movsl
cmp
xchg
lret
mov
push
popf
jge
jmp
mov
iret
in
aad
cwtl
lret
jecxz
fmul
mov
fdivs
xchg
addb
daa
dec
test
jge
leave
es
imul
mov
das
rcrb
popf
add
ret
outsb
jg
ss
in
jp,pt
sub
push
cmp
cwtl
sub
cli
or
jmp
or
arpl
pop
in
insb
dec
mov
das
aas
les
jno
and
insb
mov
mov
cmp
in
inc
insl
inc
imull
jmp
mov
fs
jae
sub
jns
popa
sarl
pop
xor
xchg
dec
pop
insl
ret
mov
je
aad
cmc
in
mov
repz
sti
add
adcl
pop
mov
out
sbb
daa
mov
cwtl
add
pop
movsb
popf
adc
xor
ficoms
jmp
fstp
ret
adc
scas
jge
in
or
lcall
clc
mov
sub
jae
cmp
pusha
into
inc
and
xchg
xor
mov
ss
mov
aam
imul
sahf
adc
cvtpi2ps
sub
or
adc
les
add
stos
outsl
jbe
bound
inc
imul
mov
jmp
add
sbb
push
xchg
inc
and
cltd
jp
nop
xor
dec
cmpsl
cmp
fstl
imul
lret
sti
repnz
add
inc
movsl
ds
in
pushf
lret
xchg
scas
mov
sub
xor
rcrl
cli
inc
dec
jg
shlb
dec
insb
cmp
dec
or
rorb
lcall
push
adc
inc
adc
insb
xchg
enter
cmp
arpl
mov
push
jne
push
mov
push
call
push
lods
jo
dec
inc
cmp
add
pop
fwait
jg
push
imul
and
popf
aas
and
dec
leave
aaa
addr16
bnd
test
or
lock
test
or
mov
decb
dec
movsl
add
xlat
or
xchg
insl
aaa
mov
shll
cs
pop
and
cli
jmp
data16
mull
and
sbb
pop
dec
push
inc
nop
pop
aas
bnd
enter
add
ret
mov
push
cwtl
in
or
out
pop
push
jbe
add
andb
mov
popa
xchg
cwtl
push
sbb
repnz
lods
adc
bound
repz
xchg
cmp
inc
mov
sbb
lods
inc
stc
je
rclb
pop
pop
ret
cmp
inc
jl
jp
aaa
jne
test
pusha
shlb
filds
test
mov
dec
mov
js
sub
push
mov
aas
pop
stc
lds
push
pusha
iret
xchg
dec
xchg
int3
inc
stos
cmpsb
ljmp
rcll
jle
bound
inc
cmp
data16
fnstcw
loop
mov
pop
xchg
test
pop
stos
lret
notb
cs
shlb
inc
mov
sub
fdivr
sbb
pusha
cld
mov
jbe
push
sbb
les
inc
xor
cld
cmp
lahf
and
fdiv
jl
scas
pop
jle
sbb
arpl
test
out
xlat
fcom
mov
repz
lods
loop
jns,pt
cmp
mov
push
cld
sub
sbb
data16
add
cmpsb
into
xchg
sub
jb
adc
pop
test
xchg
inc
fisttpl
bnd
mov
push
push
sbb
and
cs
and
lcall
push
in
lock
inc
sbb
sti
into
xor
mov
cmp
lcall
hlt
repz
out
hlt
push
std
sti
jne
cmc
insl
or
movsl
subl
in
imul
inc
cmc
in
mov
push
insl
xchg
add
xchg
and
pop
sbb
sahf
gs
push
mov
in
pop
xchg
das
inc
pop
or
mov
stos
ds
orl
ljmp
dec
mov
jae
sub
jecxz
test
leave
in
mov
sbb
jb
cwtl
pusha
mov
cs
mov
aaa
mov
loope
xchg
aaa
adc
mov
mov
movsb
cltd
dec
in
daa
in
das
ret
lock
pop
sub
and
push
lods
add
mov
sub
mov
int
xor
pop
mov
adc
insb
inc
lcall
int3
mov
adc
lea
xchg
js
je
stos
xchg
jne
push
xchg
sub
daa
adc
dec
arpl
ror
mov
mov
rolb
pushf
fcmovb
xchg
cmp
enter
insl
inc
jo
addl
fsubl
out
sbb
xchg
bound
lds
sbb
idivb
inc
pmullw
shl
cmp
fisttps
cmc
lcall
mov
mov
jmp
fdiv
lahf
jnp
mov
push
pop
sbbb
mov
mov
xchg
cltd
ljmp
andl
ret
lret
push
mov
pop
les
data16
test
cwtl
cmc
dec
push
pop
sbb
jae
xlat
pop
push
sub
pop
subb
test
jnp
js
clc
jmp
mov
out
notl
lahf
pop
lods
xor
lcall
mov
inc
test
mov
sub
jmp
mov
sub
addr16
movb
and
xchg
add
pop
repnz
sbb
movl
arpl
sbb
mov
repz
in
ja
mov
and
adc
xor
xchg
xor
scas
rclb
adc
pop
jle
jp
jns
bound
sub
daa
pop
or
push
push
ret
pusha
outsl
push
mov
mov
mov
mov
xchg
lcall
aas
xchg
in
pop
jmp
fsubrs
movsl
push
push
mov
test
push
or
test
enter
int3
mov
aaa
shrl
push
test
xchg
mov
and
ja
lea
add
cltd
call
das
mov
xor
push
xchg
or
addl
cmp
sbb
bswap
inc
pop
outsl
xchg
cmp
mov
in
dec
decl
inc
mov
add
push
sahf
jno
jge
das
notl
push
cs
mov
mov
dec
aaa
adc
push
add
enter
rclb
nop
lods
test
psrlq
enter
mov
sar
inc
shlb
fstpt
dec
push
in
jae
stos
dec
add
xor
std
movsl
sub
push
dec
hlt
cs
fldl
lcall
pop
push
test
inc
mov
jno
inc
subb
stos
push
push
pop
adc
dec
adc
testl
ljmp
push
popa
ret
mov
jo
aad
add
add
leave
inc
xchg
mov
mov
addr16
pop
sbb
cmp
push
sbb
test
cwtl
popf
sbb
loop
or
pop
outsb
cmpsb
sbb
lods
adcl
push
lret
gs
stos
fstps
dec
hlt
cmp
mov
adc
jae
inc
out
and
in
push
jae
outsl
daa
sub
inc
push
or
clc
cli
mov
inc
rclb
shrb
out
loopne
mov
addl
rol
pop
xchg
inc
mov
or
into
push
ljmp
adc
mov
xorb
push
or
rcrl
aad
sbb
in
call
push
dec
cld
adc
xor
mov
or
sub
fstps
xchg
xchg
ljmp
call
adc
outsl
mov
mov
popa
mov
mov
out
sti
cmc
add
pop
loopne
in
imul
jge
jge
xorb
into
std
test
mov
stos
pop
xchg
or
dec
mov
pushf
push
incb
popf
out
test
jecxz
jnp
loopne
or
imul
dec
inc
cmp
ljmp
js
les
loop
stos
jb
adc
or
loop
lods
les
pop
pop
outsb
cmp
pop
xor
sbb
cmp
add
or
jg
or
sbb
mov
pushf
and
sar
mov
sub
ret
sbb
inc
sti
cmp
cmpsl
in
cld
bound
jns
mov
movsl
ds
lods
jne
xor
xor
nop
inc
or
pop
cld
loopne
xor
dec
cmpsl
sbbb
mov
icebp
lret
outsl
adc
rcrb
mov
jae
in
clc
into
inc
div
pushf
jg
xor
sub
xorb
imul
dec
out
inc
sub
inc
adc
call
jb
fdivs
sub
mov
push
sahf
bound
popl
in
or
jnp
adc
ret
in
lret
fs
xchg
mov
pop
test
mov
sbb
push
sub
dec
xor
inc
aas
mov
sub
add
or
adc
pop
cmpb
faddp
andl
sarl
arpl
and
and
lock
in
mul
negl
outsb
lods
lock
cmp
add
dec
frstor
push
mov
push
dec
outsb
cmp
push
xlat
dec
pop
jbe
add
xchg
enter
adc
shll
mov
or
cmp
ja
xchg
mov
adc
cmpsb
sbb
jnp
inc
cmc
decb
leave
ja
rol
push
cmp
xchg
test
or
orl
pop
jbe
out
sub
pop
int
int3
movsb
aam
call
push
ds
inc
repnz
scas
leave
xor
je
iret
test
add
mov
call
xor
push
jp
mov
repnz
in
mov
and
popl
andb
rcll
jb
pop
lds
cltd
imul
stc
mov
xchg
les
mov
into
test
testb
cmp
push
in
mov
push
test
xor
pop
je
pop
fwait
pushf
mov
mov
pop
mov
jecxz
adc
and
mov
sti
sbbb
sub
lret
cmp
pop
test
dec
ja
andl
test
jmp
xchg
pop
outsw
adc
add
push
loopne
fistpll
aaa
push
into
mov
stc
cmp
pop
adc
mov
xchg
pop
mov
data16
adc
les
cmp
in
shl
dec
js
or
cmpsl
and
imul
adc
outsb
nop
pop
push
jo
out
les
pop
mov
mov
xor
aad
jg
gs
push
mov
lds
jle
cltd
inc
pop
je
xchg
daa
ror
enter
mov
out
jnp
inc
bound
mov
stc
and
pop
sbb
rcr
mov
push
xor
shlb
pop
xchg
in
sub
std
adc
dec
or
pop
movsb
xor
jl
insb
orb
leave
gs
dec
xchg
sti
sbb
imul
push
cs
test
xor
mov
imul
and
inc
int
subl
inc
out
push
push
scas
stc
cmpsl
dec
and
nop
adc
arpl
add
add
test
data16
inc
xchg
data16
mov
mov
xchg
jo
ds
and
and
pop
inc
iret
and
jo
pop
sbb
cltd
andl
pushf
mov
jne
insb
mov
stos
inc
xchg
test
mov
pop
cmp
jae
mov
clc
mov
fsubr
or
stos
hlt
in
xor
clc
stos
mov
mov
sub
pop
xchg
test
xchg
sbb
sub
pop
jecxz
xchg
in
xchg
es
or
mov
rcll
gs
push
lock
add
je
sbbl
mov
scas
cs
call
xchg
push
stc
cld
and
jmp
daa
and
jle
lea
addr16
add
gs
aad
lret
mov
cmp
and
jle
movsb
lods
mov
call
push
popf
push
out
subb
sub
adcb
sub
adc
adc
push
pushf
dec
js
or
push
inc
shr
ds
lock
dec
inc
ret
cmp
jl
cmp
pop
negb
mov
enter
mov
repz
mov
fwait
mov
mov
mov
xor
push
mov
outsb
pop
fisttps
push
and
imul
aaa
mov
cmp
mov
das
pop
cmc
inc
cld
push
dec
subl
sti
mov
pop
imul
add
fidivrs
cli
pop
movsb
addr16
cmc
int
mov
shlb
outsb
bound
mov
mov
mov
sbb
pushf
dec
std
dec
into
loope
mov
and
mov
push
sahf
pop
into
testl
lods
jle
jp
fwait
push
mov
orb
ret
mov
lods
dec
stos
cmpsl
cmc
xchg
lahf
out
and
add
mov
or
in
mov
pop
fabs
lods
cmp
or
iret
push
cmp
negb
adc
ljmp
inc
cmp
mov
imul
push
rcrb
shr
jg
and
sbb
xor
jp
xchg
adc
jne
jne
inc
mov
loop
aad
or
adc
repz
add
int3
push
jecxz
clc
lea
in
rcrb
dec
pop
xchg
mov
and
mov
pop
inc
pop
sbb
or
inc
rcrl
int
jmp
imul
mov
or
inc
mov
ja
jns
movsb
in
icebp
push
jne
or
insb
and
sbb
xor
in
sbb
loop
push
mov
push
xchg
in
mov
mov
lret
xchg
mull
test
mov
dec
jge
adc
js
lret
div
jns
mov
jge
mov
sahf
fsubl
call
cmp
fwait
sti
or
sbb
xchg
ljmp
cli
in
gs
and
mov
aaa
jmp
pop
es
cmp
jmp
lcall
popa
repnz
pop
sarl
mov
les
mov
add
idivl
ret
aam
lods
ret
les
popf
arpl
loopne
xor
pop
mov
aam
ss
cmp
fnstenv
mov
imul
daa
fdivrs
movsl
adc
mov
pop
hlt
mov
dec
sahf
lahf
aaa
cmpsl
fs
fs
mov
sub
idivl
iret
dec
scas
repz
outsb
inc
mov
arpl
cld
popa
mov
sub
cmp
inc
mov
sbb
js
add
push
and
stc
sbb
pop
sub
jl
xor
dec
icebp
pop
or
cmp
push
bound
scas
stos
cmp
cli
adc
and
pop
add
inc
push
shlb
jmp
mov
cwtl
aaa
pusha
rolb
mov
data16
sbb
into
xlat
mov
push
jnp
add
push
je
pop
dec
or
jbe
mov
inc
insb
out
addr16
xor
aas
insl
ud1
mov
or
pop
les
push
insl
sbb
sub
fwait
push
add
and
fistpl
push
mov
xchg
xlat
repnz
dec
and
or
push
add
lret
inc
or
ljmp
adc
mov
or
movsl
mov
in
js
xchg
outsl
jp
sbb
jecxz
pop
cmc
insb
jp
inc
xchg
int
adc
arpl
mov
fldl2t
mov
scas
stos
testl
sbb
lcall
lcall
dec
mov
lods
push
out
sbb
and
and
xchg
and
imul
stc
into
inc
ret
out
negb
mov
dec
gs
aas
test
in
rclb
scas
dec
hlt
stc
adc
push
xor
popf
movsb
pop
cmp
lods
fidivrs
and
das
pop
rolb
adc
sub
inc
or
dec
fucomp
test
sub
xor
jbe
and
leave
pop
xor
xor
leave
out
fisubl
xchg
ja
add
xchg
repz
es
xor
add
jo
xchg
dec
pop
test
cs
inc
sub
jns
inc
rol
repz
or
lcall
push
jnp
movsl
int3
dec
mov
in
sbb
jo
mov
xor
or
clc
ljmp
cmp
sbb
pop
mov
not
mov
pushf
dec
nop
mov
xor
into
pop
mov
cmp
mov
inc
das
inc
mov
leave
inc
lods
data16
mov
cmp
dec
ret
mov
mov
dec
cmp
in
push
inc
mov
mov
outsb
cmpsb
imul
mov
mov
pop
cli
mov
pop
andb
ret
and
pop
mov
inc
jle
sub
aam
pop
jl
pop
push
mov
hlt
out
out
mov
gs
xor
std
pop
jge
dec
jne
je
mov
imul
mov
jg
pop
xchg
cli
pop
push
and
jle
incl
xor
cltd
push
mov
imul
mov
inc
dec
call
sti
adc
repz
sahf
mov
cmp
mov
mov
dec
or
and
ret
jmp
push
dec
fadd
cltd
ss
push
scas
xchg
dec
outsl
test
lods
and
hlt
push
imul
and
adc
adc
aam
sbb
test
jnp
xchg
jge
addr16
dec
icebp
mov
pusha
mov
adc
push
inc
jnp
nop
mov
rorl
sbb
and
sub
std
add
fidivrl
push
jecxz
push
jbe
mov
sahf
jp
mov
dec
sbb
insl
dec
mov
rcl
jno
adc
loope
mov
add
shrb
sbb
jg
add
std
scas
std
cmp
data16
mov
lods
add
pop
add
leave
pop
and
outsb
insb
cwtl
dec
mov
or
sbb
pop
jo,pn
std
jae
inc
xor
in
mov
xchg
adc
data16
lret
mov
mov
pop
pop
imul
inc
fnstenv
loopne
dec
sbb
into
pop
inc
mov
call
icebp
jns
nop
sahf
mov
and
mov
sahf
cmpsb
jp
stos
fsubr
mov
movsb
sub
sub
jae
pop
dec
jnp
cmp
out
fs
dec
add
test
adc
stos
mov
inc
nop
ljmp
jg
loop
rolb
pop
outsl
inc
lock
popf
aad
es
jecxz,pt
je
push
scas
jge
adc
jns
xchg
add
and
add
xchg
xchg
das
jae
fsubl
add
add
sub
fisubrl
xchg
ljmp
aaa
xchg
into
xor
push
sahf
push
cli
or
out
or
or
sbb
pop
es
sbb
sub
inc
pop
int3
mov
das
ja
xor
fsub
loop
shrb
pop
or
outsl
cmp
add
push
stos
dec
mov
mov
aas
int3
aam
rcr
arpl
fildl
push
push
mov
or
movsl
pop
mov
cmp
adc
enter
jle
popf
stos
outsb
jae
pop
lcall
fistpl
outsl
leave
jo
out
fidivl
sbb
repz
xchg
icebp
in
xchg
mov
jg
and
jp
adc
mov
je
pop
or
icebp
pop
enter
mov
aaa
xor
aaa
arpl
jmp
mov
cmp
popf
sub
clc
inc
mov
sbb
xor
dec
nop
mov
mov
icebp
dec
push
jns
push
icebp
or
lods
andb
mov
sub
jecxz
adc
xor
sbb
cmpsl
lea
stos
mov
movb
in
mov
cmpsl
pop
stos
dec
mov
sbb
sub
sub
jb
sbbl
stos
nop
std
imul
jae
xor
jp
pop
scas
lret
or
pop
out
clc
xlat
add
pop
aaa
data16
jl
or
cmp
cmp
add
imul
add
or
pop
jnp
aad
repz
fstpl
xor
adc
fldcw
mov
shrl
push
push
inc
cli
lods
lahf
lcall
pop
bound
lret
pop
mov
int
mov
lretw
icebp
call
mov
aaa
shl
pop
dec
inc
pop
int
jns
adc
testb
decl
aas
push
movsl
scas
sub
jp
inc
add
cmp
addr16
cmp
repz
cmp
out
xchg
jo
mov
jl
mov
js
xchg
inc
mov
adc
leave
inc
add
icebp
jbe
dec
mov
push
sti
movsl
icebp
daa
inc
lahf
xor
loopne
or
data16
sbb
pop
jne
adc
cmc
inc
mov
xor
xchg
stos
mov
push
mov
dec
dec
xor
push
mov
xchg
bound
std
out
out
fnstenv
mov
jne
push
sbb
data16
lods
inc
ss
lahf
inc
pop
subl
jo
cmp
or
or
imul
adc
loop
ljmp
dec
xchg
pop
rolb
aam
icebp
inc
loopne
push
or
pop
mov
and
imul
xchg
mov
iret
mov
mov
mov
fs
aam
push
addps
or
push
xlat
daa
out
repz
dec
push
dec
fldcw
mov
or
imul
in
add
rcrb
vmovntpd
out
dec
xor
mov
lock
or
in
mov
mov
add
dec
xchg
lea
mov
lock
loopne
movsb
loop
push
jmp
mov
push
xor
pop
stc
ret
lods
enter
or
mov
fistl
jnp
cmp
in
clc
xchg
out
adc
imul
push
cmp
push
jnp
inc
pop
leave
xor
jbe
sbbb
loopne
push
sahf
stc
xor
testb
popa
cmp
enter
adc
repz
and
sahf
aad
xlat
sbb
shl
push
cs
mov
pop
outsb
mov
and
jl
cmp
data16
pop
movsb
cwtl
fidivl
xchg
fdivrs
cltd
push
cmp
add
pop
popa
fisttpl
sbb
popa
sub
sbb
loopne
push
pusha
or
idivb
inc
sbb
mul
mov
mov
xor
test
pop
cli
xchg
xchg
and
into
add
jl
and
adc
add
lret
cmp
pusha
fisttps
mov
int
mov
cmp
aaa
inc
pusha
outsb
nop
icebp
jb
mov
lods
test
into
lahf
loop
xor
sbb
pop
push
cli
movsl
sbb
sub
andb
jb
and
jae
repz
cmp
out
and
stc
pop
mov
mov
pop
pushf
pop
lea
mov
nop
cmpsl
mov
sub
jle
mov
cmpb
adc
bswap
es
sbb
das
sub
repnz
cmp
xchg
or
push
cmp
pusha
outsb
inc
stc
cmp
push
int
ljmp
mov
mov
pusha
mov
dec
loopne
lret
gs
push
mov
insl
pop
xchg
lods
iret
pop
adcl
leave
xchg
stos
sbb
push
adc
dec
int
test
outsl
and
xor
sarb
push
cmp
out
fcomp
dec
ja
loopne
mov
or
call
leave
mov
push
xchg
cmp
aad
mov
mov
jae
push
adc
xor
test
lahf
dec
xchg
add
dec
cmpb
mov
sub
jno
sub
adc
ja
lahf
sbb
push
jp
push
imul
es
js
cli
jg
adc
bnd
in
cmp
pop
lret
sub
call
inc
aad
repz
bound
or
add
loop
mov
clc
jb
and
dec
cltd
mov
mov
pop
mov
int3
fbld
cmp
leave
push
cmp
sbb
mov
xchg
hlt
call
mov
xlat
cmp
jb
cmpsl
pop
mov
aam
and
les
mov
lahf
aam
je
sub
int
or
loope
sbb
cmp
inc
int3
mov
mov
cmp
xchg
sbb
cmp
cmp
daa
mov
cmp
inc
mov
lahf
push
xor
out
fs
repz
pushf
xchg
push
xchg
mov
aaa
leave
mov
cli
ljmp
jnp
andl
int
or
jl
adc
cmp
dec
ret
aas
pop
mov
and
iret
hlt
ret
mov
idiv
popf
sbb
cwtl
mov
mov
js
jecxz
pop
pop
and
inc
add
sbb
lahf
or
mov
out
inc
lret
imul
ja
in
cwtl
in
push
mov
ret
sbb
lea
cmpsb
fucom
push
mov
dec
movsl
fcmovb
loop
cmpl
mov
std
pop
lods
rorl
test
dec
push
ss
lods
stc
jne
pop
pusha
iret
push
mov
adc
adc
in
lea
inc
test
sub
leave
ljmp
mov
jmp
adc
ja
xchg
mov
stos
cmp
xor
stc
sub
fcompl
cld
cwtl
enter
movsl
jne
loope
cs
push
rorb
mov
xchg
inc
xchg
push
push
leave
int
or
imul
mov
nop
and
cmp
mov
data16
pop
insb
ret
imul
pop
jne
stos
mov
xor
push
dec
and
dec
int3
test
xchg
test
inc
mov
sahf
sub
jae
push
adc
mov
pusha
mov
push
test
xchg
mov
mov
adc
jae
mov
lahf
jge
in
cmpsl
dec
mov
xchg
sub
jecxz
das
clc
popa
icebp
jle
arpl
mov
shll
jg
sbb
cmpsb
xchg
push
popa
or
pop
pop
jecxz
adc
sbb
jge
fisttpl
pop
push
pop
filds
lds
cmpsl
jne
and
imul
sub
jnp
add
cmpsl
cmpsl
out
jnp
out
sbb
aam
mov
movsb
jno
call
push
enter
fldcw
fwait
arpl
ficoml
andl
sub
adcl
daa
test
cmp
popa
dec
cli
dec
pusha
or
pop
lea
push
xchg
les
cmpsb
jns
addr16
and
mov
adc
jns
enter
push
or
es
adc
daa
inc
jno
xchg
clc
sbb
andb
sub
mov
push
jne
pop
push
lods
inc
xor
test
mov
push
icebp
push
stc
imul
mov
sub
push
mov
inc
fs
and
xor
test
inc
mov
push
dec
sub
jb
insb
push
nop
adc
dec
pop
leave
dec
testb
ret
and
jge
imul
xor
aam
aad
insl
cmpsl
imul
shll
cmpsl
fwait
sbb
test
repnz
inc
adc
pop
out
insb
mov
mov
and
test
test
jg
cmpsb
aam
hlt
mov
rolb
push
pop
dec
cmp
repnz
mov
lock
shrl
adc
out
jb
pop
push
and
std
mov
test
dec
or
mov
js
cmp
push
es
lret
adcl
jnp
pop
lahf
mov
mov
sbb
pop
mov
push
out
dec
inc
and
cmp
sbb
sahf
lret
sbb
cli
lret
mov
add
and
lods
cli
add
mov
rorb
shlb
pop
dec
mov
cld
cltd
xchg
xor
push
lock
sbb
sbb
mov
and
es
mov
clc
mov
xchg
out
shrb
outsb
mov
add
ffreep
lock
or
lock
addr16
lahf
cmp
pop
iret
rclb
sub
lds
jno
testl
cmp
push
ret
shr
cmp
jne
jno
outsl
std
sub
gs
notrack
dec
iret
mov
scas
jo
popf
sbb
sub
xchg
fistpl
dec
inc
cmpsb
push
cld
dec
out
mov
mov
add
jno
sbb
iret
cmc
out
xchg
sbb
rorb
decl
xor
push
push
shlb
call
or
sbb
jmp
or
cmp
incb
ret
cmp
inc
xor
adc
into
test
cmp
xor
sahf
cmp
fcoms
push
out
cmp
or
mov
ret
test
inc
out
in
mov
jle
ja
push
fcoms
mov
dec
lcall
inc
sub
roll
test
cmpsl
repnz
fs
add
lods
fwait
xor
sbbb
jecxz
pop
stc
cwtl
pop
xlat
mov
pusha
lock
jmp
and
sub
nop
jb
pop
push
insl
cs
inc
iret
imul
or
loope
sbb
inc
cltd
out
jmp
mov
mov
push
inc
lods
sub
push
rcrl
sbbb
xor
imul
jl
xor
cmp
and
in
push
cmc
mov
push
roll
insl
mov
rcll
jnp
into
adcb
cli
jg
or
push
je
fs
rcrl
dec
pop
cmp
scas
add
adc
fs
mov
lds
int3
inc
xchg
pusha
push
or
ret
xor
cld
pop
xor
in
hlt
mov
lods
push
lahf
icebp
mov
ljmp
sbb
ret
push
and
scas
jecxz
jmp
cmpsb
mov
add
add
ss
leave
pop
pop
pusha
sub
ds
lahf
test
or
sub
xchg
mov
test
imul
jp
add
inc
dec
into
add
sbb
test
pusha
fidivs
mov
lret
es
push
ds
rorb
ret
mov
fisttpll
repnz
jae
repnz
sub
sbb
push
sub
or
pop
ss
cmpb
cmp
pushf
sub
push
inc
xlat
in
fsts
stos
mov
loop
adc
push
rorb
mov
fwait
mov
outsb
push
adc
xlat
and
sbb
add
out
lret
cmp
cld
aam
shrb
fsubs
jl
dec
scas
mov
or
inc
dec
ljmp
cmp
jl
xlat
or
arpl
ja
cld
xchg
ret
sbb
fucomi
pop
dec
mov
movntps
xchg
adc
orb
cmp
pop
push
cmp
or
jmp
fdivrs
cld
nop
icebp
push
arpl
je
mov
loopne
test
mov
jmp
scas
rcrb
jge
push
aas
shrb
xchg
ficoms
inc
rcrb
and
movsb
ret
sub
out
ret
push
std
dec
fsubrl
mov
in
fisubrs
sub
arpl
mov
lret
rcll
test
arpl
jecxz
xchg
cld
inc
shrl
jmp
stos
insb
sub
inc
sti
movsb
push
push
pusha
nop
aam
stc
sti
fs
movsl
ljmp
pop
adc
pop
iret
dec
jno
rolb
std
push
addr16
fsubrs
inc
sub
into
std
pop
adc
pop
and
jae
cli
xchg
in
dec
fldln2
add
mov
das
cwtl
mov
fsubl
and
cli
ss
xchg
imul
mov
push
mov
int
adc
cmpl
divb
or
cs
orl
mull
mov
jl
jl
ljmp
mov
xchg
sub
mov
aam
dec
out
adc
pop
mov
and
insl
loop
movsb
call
int3
test
js
sbb
jno
pusha
adc
lods
in
jmp
test
loope
cmp
out
push
adc
loop
cwtl
add
mov
mov
pop
jmp
ffreep
call
mov
clc
add
aam
popf
xchg
mov
mov
and
mov
sub
mov
pop
popf
adc
mov
movsb
add
xchg
xchg
cli
sti
push
jl
hlt
jle
push
lret
xchg
iret
dec
mov
pop
jecxz
outsl
push
test
les
dec
es
je
and
je
out
scas
cmp
lret
jnp
fwait
inc
in
cs
add
push
sub
stos
fstpl
and
mov
push
cmp
sar
ss
xor
or
sahf
mov
icebp
or
and
in
and
or
push
pop
cltd
push
inc
mov
mov
mov
fsubrl
dec
aad
xchg
icebp
and
loop
jle
jmp
sub
out
sub
inc
mov
adc
or
je
push
pop
fistpl
mov
jp
into
aad
mov
jle
popa
movsb
xor
pop
push
push
pop
dec
andl
dec
iret
sbb
pop
dec
pop
into
add
sub
data16
sub
xor
and
xor
rolb
mov
mov
or
aad
insb
nop
or
ljmp
cmp
cwtl
mov
and
arpl
movhps
lds
push
test
lock
cli
sbb
ficoml
inc
push
inc
pop
inc
and
sbb
jl
inc
pop
scas
or
mov
in
xchg
ret
cmpsb
jp
or
jno
lahf
push
gs
dec
data16
fiadds
hlt
dec
or
xor
fnstsw
movb
outsl
cmpsb
and
sahf
push
push
ljmp
imul
sbb
push
xor
mov
mov
outsl
xchg
dec
js
or
or
mov
mov
push
mov
push
imul
aas
negl
mov
call
push
xchg
add
cwtl
mov
and
out
or
push
sbb
xchg
cmp
std
addl
xorl
sbb
add
dec
dec
pop
pop
arpl
dec
ljmp
movsl
icebp
fisubs
out
dec
insl
clc
lcall
mov
mov
push
mov
jne
imul
popf
mov
cmp
jo
imul
lods
call
int3
push
inc
test
scas
rcl
fildll
lds
lods
popa
std
stos
push
push
or
mov
xchg
or
int
sbb
mov
gs
lock
jnp
xorl
sarb
jae
pop
into
test
dec
jno
fldl
imul
cli
pushfw
hlt
xor
sbb
xchg
lcall
mov
adc
and
push
sub
imul
sub
paddd
shrl
xchg
add
lds
inc
loop
cs
rclb
mov
sbbl
mov
out
icebp
jmp
bound
mov
insl
xor
test
sbb
adc
fisubrs
adc
sbb
aam
mov
lcall
xor
cmp
mov
fstl
arpl
push
fidivl
dec
out
mov
test
shll
fdivs
push
ss
mov
jmp
aas
das
mov
fcmovb
cmp
push
sbb
sbb
add
popa
sub
sbb
and
ds
fisubl
push
xchg
les
in
push
pop
sbb
pop
sub
mov
lock
jl
or
and
scas
push
ret
adc
push
movsb
xor
bound
sahf
xor
imul
loop
xchg
popa
or
fsts
dec
aam
sbb
in
fmull
stos
sub
cmp
xor
fs
push
clc
dec
js
data16
mov
or
push
clc
loope,pn
gs
loope
mov
jmp
hlt
or
int3
mov
dec
daa
dec
imul
add
je
js
into
mov
int3
stos
popf
add
sub
cmc
das
outsl
test
pop
test
mov
mov
lds
sahf
cld
cmp
nop
cli
addr16
mov
lcall
nop
dec
mov
mov
mov
movsl
ljmp
stc
push
sbb
xchg
std
xor
shrb
cld
cmp
inc
std
test
push
xchg
lea
dec
sarb
jmp
push
xor
mov
push
jns
cmp
out
loop
and
addb
dec
aad
or
daa
and
jl
lods
adc
std
jmp
cli
loope
and
mov
and
jp
adc
cbtw
add
or
mov
addr16
in
xor
cmp
xchg
call
sub
pushf
mov
sti
loope
ss
fbld
jmp
sub
push
sub
or
fnstenv
mov
pop
jo
aas
cltd
stc
jb
std
mov
and
dec
inc
mov
mov
mov
sub
xor
mov
dec
rol
loop
int
int3
in
or
sub
nop
popf
mov
xor
pop
mov
jb
mov
adc
pusha
aas
rcll
hlt
xchg
ds
pop
pushf
aas
jge
pop
ja
les
jbe
cld
loop,pt
xor
sbb
les
adc
cld
aas
bound
push
into
push
jp
pusha
dec
into
das
jno
pop
pop
js
dec
dec
idivb
xchg
arpl
push
stc
xor
cmpl
or
cmp
inc
xchg
faddp
push
mov
inc
xchg
cmc
pop
mov
adcl
out
das
pop
mov
mov
lea
pushf
cs
dec
int3
cmpsl
mov
out
jmp
jnp
lret
inc
test
lret
fs
cltd
cmpsb
arpl
fcomps
movsl
cmpl
scas
mov
loop
jnp
lret
xor
xchg
das
es
xchg
cld
scas
ret
push
cwtl
push
lods
cmc
int3
stos
cltd
addb
shll
test
test
add
call
mov
push
adc
aas
popf
nopl
or
push
and
jb
pusha
jne
dec
sbb
rcll
movsb
adc
loopne
repz
fcomps
mov
mov
in
adc
rorb
rcr
xchg
pop
ret
mov
add
jle
shr
addr16
int
inc
scas
jns
popf
or
test
mov
bound
and
aam
arpl
lcall
aaa
push
rcrl
add
fdivl
aas
lcall
add
cli
stc
stos
addr16
enter
int
scas
pop
push
jle
jbe
test
ss
cmovne
ds
jbe
cmpsb
push
or
pop
and
dec
lods
xor
or
outsl
sub
add
mov
call
pop
jns
jp
stc
fstps
mov
jg
sub
orb
mov
jns
aas
repnz
jae
xchg
cld
insb
xchg
stc
push
add
pushf
add
cld
js
push
fwait
mov
sub
daa
mov
jae
ja
jbe
lods
insb
mov
xor
out
test
cltd
aad
ror
sbb
mov
icebp
repz
arpl
lret
fbld
rolb
mov
inc
fisubs
jbe
sbb
mov
lock
test
mov
add
and
pop
cmpsb
sbb
inc
popa
icebp
pop
sbb
jl
and
xchg
add
inc
and
cmp
pop
arpl
xor
jb
and
or
jl
test
jmp
xchg
fs
mov
bound
push
stc
mov
fstpl
cmp
jp
cmc
xor
pop
fwait
call
icebp
lret
call
adc
mov
ret
jl
addr16
fcmovnb
out
hlt
sbb
add
into
and
lds
push
fnstenv
mov
aaa
pop
and
sub
movsb
xchg
es
insl
lret
add
hlt
stos
mov
add
jb
ja
repz
mov
dec
push
stos
orb
loop
loopne
xor
stos
jbe
pop
movsl
pop
add
test
mov
mov
leave
jle
shll
lret
push
pop
stos
adc
aad
mov
test
xchg
popa
cmpsb
xchg
daa
addl
or
xorb
sti
mov
clc
leave
dec
ret
rcr
mov
test
stc
fwait
test
adc
outsl
movb
or
jg
dec
mov
stc
mov
dec
mov
sbb
inc
jge
mov
fcmovnu
xchg
insb
push
mov
dec
xchg
push
rol
loope
xchg
daa
or
insb
inc
sahf
sahf
ds
xchg
pop
add
xor
dec
dec
sarl
int
or
mov
ja
not
adc
or
addb
dec
insl
or
test
ret
int3
push
mov
or
cmp
jne
fistpll
adcb
loop
sub
aaa
cmpsl
pop
dec
adc
sbb
movsl
andb
push
addr16
cmc
mov
and
arpl
inc
cmp
or
mov
fsubl
or
frstor
inc
sub
dec
lret
cmpsb
add
dec
in
fisubrs
ds
popf
pop
lds
mov
lret
ljmp
mov
addr16
aam
inc
mov
ret
jae
jbe
pushl
sub
insl
aam
inc
les
xchg
push
xchg
or
sub
inc
or
pop
fisubs
ljmp
cs
rol
mov
cmp
push
inc
push
mov
repz
xor
sub
repnz
iret
fst
outsb
fnsave
xchg
sbb
or
mov
adc
cmp
int
mov
lock
xchg
mov
xor
movsb
mov
call
into
xchg
ret
pop
push
sub
mov
xchg
mov
addr16
mov
cmp
cld
rorb
inc
ja
add
aam
cmpsb
test
imul
pop
dec
loopne
or
pop
jne
push
xchg
push
mov
or
mov
popa
test
mov
push
shlb
push
ret
fucomp
nop
jns
xchg
adc
mov
dec
aaa
scas
scas
lcall
filds
arpl
cwtl
adc
pop
dec
push
cmp
jp
cmp
dec
sbb
pop
cmp
hlt
daa
int3
popl
xor
jmp
int3
aas
add
lds
scas
int3
dec
xchg
mov
ljmp
aad
dec
cwtl
imulb
mov
fsubr
jo
mov
mov
ja
pop
mov
fisttpll
sub
fmull
rclb
pop
jne
mov
out
arpl
repz
mov
movsl
adc
jo
stos
push
rclb
mov
jne
pop
rcr
xchg
hlt
jmp
xchg
fbld
test
pop
pop
js
fldl
sub
pop
decl
iret
leave
sub
lods
popf
xchg
mov
cs
mov
mov
xchg
pop
out
inc
push
push
pusha
in
sbb
je
ja
shl
sarl
xchg
aam
mov
sub
mov
leave
icebp
lds
jle
xchg
faddp
call
xchg
jecxz
enter
cwtl
loopne
push
xor
pop
mov
pop
addr16
and
fstps
xor
lret
jns
jl
ss
fiadds
ja
mov
stos
mov
call
add
mov
pop
aad
popa
sub
add
inc
int
push
stos
jnp
fists
adc
fwait
daa
xchg
cli
jne
jg
push
push
cmp
ja
mov
add
add
mov
repz
jge
jnp
jle
cmpsb
movsl
mov
xor
and
inc
loope
pop
stc
xor
pop
dec
mov
loop
fbld
sub
sbb
imul
stos
arpl
or
sub
mov
mov
ficomps
xchg
daa
push
mov
cmpsl
adc
mov
cmp
adc
xchg
sahf
rcl
add
shll
cwtl
adc
jle
xchg
push
mov
scas
or
mov
mov
inc
imul
inc
and
sub
outsb
mov
movsl
pop
int3
xchg
insl
insb
ljmp
xchg
ret
shr
inc
cmpb
mov
stc
dec
rolb
cmpsb
mov
int
cmc
xchg
dec
xchg
or
push
int
test
lret
push
pushf
stc
jns
fwait
insb
lret
in
mov
sbbl
lods
inc
mov
fistpll
or
add
ficompl
lock
shlb
dec
jnp
add
sub
cmp
mov
jge
xor
pop
or
shr
int
cmpsb
movsl
ud1
or
loopne
jp
fmull
cmc
mov
or
xchg
pop
xchg
mov
mov
scas
jb
adc
push
in
inc
adc
ss
js
mov
sub
ficomps
lds
dec
pop
movsl
sbb
shlb
xor
jl
cltd
arpl
inc
jns
ja,pt
or
xchg
inc
fstps
and
das
pop
int
aas
mov
loope
inc
or
sub
jno
pop
lcall
pop
std
sbb
rcr
push
std
dec
enter
dec
mov
ud1
adc
xor
and
adcl
test
popf
ja
cmc
decb
dec
xchg
pop
lret
popa
pop
mov
imul
xor
or
cltd
xchg
adc
add
test
xchg
out
and
arpl
enter
daa
repz
outsl
movb
dec
jne
ret
fdivr
cld
lahf
negb
lea
sub
not
fs
jnp
out
push
clc
data16
dec
pusha
dec
jae
sub
push
or
cmpsl
stos
pusha
std
call
leave
pop
stos
dec
mov
add
pop
cmpsb
leave
ljmp
cmp
lea
push
clc
ret
push
push
mov
pop
stc
cli
adc
aas
mov
imul
loop
cld
sbb
pop
incb
test
dec
jp
adc
loop
pushf
xchg
sub
jmp
stc
mov
mov
das
and
mov
jmp
mov
dec
es
jmp
cmp
cltd
dec
mov
pop
dec
or
dec
pop
daa
lcall
orb
das
xchg
push
jns
adcb
and
scas
cs
lds
daa
aas
aaa
mov
mov
sub
cmp
mov
gs
sbb
in
add
fnsave
dec
loopne
xchg
lock
shr
or
jo
mov
xor
jle
mov
dec
out
pop
mov
fdiv
insl
mov
addl
xlat
xor
dec
cmp
pop
lods
sub
aas
cmp
adc
pusha
cs
testl
adc
jae,pn
fstpl
fdivl
int
test
sub
in
push
adc
add
xchg
xor
xchg
cmp
sti
add
mov
xor
test
out
xor
mov
jecxz
inc
pop
insb
mov
stos
jb
pop
jo
pushf
test
xor
jns
les
mov
andl
fwait
int
adcl
cwtl
gs
daa
xor
jecxz
add
data16
lahf
sub
mov
pop
mov
add
hlt
ja
fldt
mov
int3
in
sub
scas
enter
mov
add
fistpl
cli
lea
mov
negb
int3
dec
mov
pop
add
pop
pop
add
push
xor
pop
ss
xchg
xor
and
and
ja
or
sub
xor
or
into
test
insb
lods
sub
dec
sahf
sub
hlt
or
movsb
xchg
scas
sbb
jecxz
dec
xchg
jmp
inc
add
popf
aad
dec
or
add
fsubs
rcl
mov
cli
push
mov
jg
mov
clc
and
adc
sub
or
adc
add
loopne
jno
mov
push
push
inc
mov
sub
xchg
and
cmovb
lods
jno
xchg
add
jno
xor
dec
cwtl
jmp
fistps
mov
shlb
add
inc
rolb
mov
jmp
repz
out
or
stos
repnz
jecxz
sbb
mov
mov
pop
repz
repnz
andb
mov
inc
sbbb
cmp
adc
push
jle
pop
popl
loopne
adcb
loop
shlb
pop
jmp
insb
les
inc
outsl
adc
out
aaa
test
loope
xchg
push
mov
aam
sub
les
movsb
xchg
mov
loope
push
mov
jp
addl
push
idivb
mov
das
lret
addl
outsb
inc
dec
arpl
add
andb
into
mov
jl
jae
mov
add
inc
add
sub
jnp
pop
fwait
or
std
add
add
cltd
jmp
loope
inc
and
add
xor
cmp
pop
movsb
mov
pop
in
xchg
cmp
fstpl
and
push
add
push
ds
and
mov
shr
movhps
xor
in
lds
and
dec
adcl
test
mov
cmp
loope
iret
imul
dec
pop
jg
mov
push
addr16
adc
leave
sbb
sbb
dec
cwtl
aad
add
sub
pusha
rcll
or
orb
mov
or
push
int
loopne
sub
mov
lods
lods
dec
fs
pop
repz
xor
and
mov
popa
cltd
in
sub
xor
pop
jnp
and
or
and
imul
rolb
clc
insb
scas
add
jecxz
fiaddl
push
mov
xor
call
sbb
jmp
jp
jbe
mov
in
arpl
adcb
imul
loopne
add
das
rcrb
imul
aad
lea
jo
adc
sbb
and
out
call
fimull
xlat
ds
nop
fidivrs
stos
jge
add
ret
inc
lret
scas
xor
mov
lret
fsubs
popa
int
jl
sbb
aad
jno
das
xor
or
pop
jp
movswl
test
out
cmpsb
testb
or
mov
add
enter
cmp
popa
and
mov
lock
mov
das
dec
add
mulb
jbe
ljmp
inc
inc
inc
mov
hlt
sbb
mov
xchg
dec
add
jge
pop
fwait
cwtl
faddp
jnp
mov
jl
sbb
add
dec
daa
ja
xchg
mov
rcr
sub
mov
js
js
aas
sbb
das
pop
fxam
popa
out
adc
imul
mov
call
mov
jbe
jp
xchg
sbb
add
inc
test
push
mov
pushf
and
sub
gs
mov
push
push
mov
jns
xchg
pop
push
inc
xlat
imul
and
ds
fistl
jp
cwtl
cmp
popa
or
shlb
sbb
add
jne
out
bound
pop
push
cmp
pop
rorb
aaa
aas
fmul
inc
sbb
push
mov
ds
push
xchg
dec
pop
xchg
sub
daa
out
mov
sub
sbb
push
mov
pop
jmp
ljmp
inc
inc
add
jp
sarb
xchg
sti
xor
fldcw
adc
out
add
push
sbb
sbb
inc
mov
std
sahf
sub
icebp
loop
enter
iret
jne
pop
sbb
sarb
outsb
ret
movl
push
add
adc
shlb
jl
out
test
mov
and
sti
js
fildll
aam
lock
mov
test
rcrl
paddsb
mov
xor
daa
xor
fcoml
out
in
pop
adc
push
ss
mov
ret
xchg
into
ficoms
mov
and
xchg
faddl
sub
inc
push
cs
cmp
xor
repnz
add
pop
dec
and
pushl
pop
js
pop
nop
mov
sub
sub
push
iret
stc
rolb
call
sbb
call
lret
inc
xor
or
divl
mov
mov
sbb
inc
pop
push
jo
nop
stc
mov
lods
adc
sub
imul
adc
jmp
jo
push
cmp
mov
loope
fmuls
pusha
lock
inc
in
dec
sbb
push
inc
in
pusha
xchg
pop
push
dec
inc
imul
mov
cmp
cld
nop
adc
inc
daa
std
sub
enter
or
lret
or
je
cmp
pop
sub
mov
sub
lcall
xor
and
dec
fdivrp
xor
stc
movsb
sbb
lds
pushf
mov
loop
xchg
mov
lret
xchg
cli
ret
stc
pop
push
clc
adc
testb
insl
dec
jo
push
lods
in
leave
xor
int
push
cmp
pop
mov
push
rolb
jg
inc
push
popf
pop
dec
sub
mov
mov
jge,pn
leave
dec
xchg
cmp
sbb
push
pop
jnp
popf
fldl
fdivrs
push
cvttps2pi
ss
outsb
sub
int3
divb
mov
inc
loop
mov
dec
push
jae
sub
inc
into
rcrb
or
dec
loopne
xchg
jecxz
inc
arpl
je
bound
or
jg
mov
cwtl
aad
jne
mov
popa
jns
repz
jg
test
ret
js
cmpsb
jp
pusha
nop
repz
jbe
pop
ljmp
lret
lods
lods
xchg
int3
lahf
cmp
sbb
mov
adc
imul
jecxz
out
xor
cli
pslld
es
pop
mov
push
push
es
mov
out
xlat
mov
dec
pop
jbe
cmpl
cmp
lods
jmp
lods
jbe
cmc
mov
js
pop
shrl
xor
cltd
mov
idivl
cltd
test
push
in
ja
sub
cmp
pop
call
dec
pop
mov
or
push
cmp
out
pop
mov
shl
push
cmc
mov
dec
mov
cmp
adc
iret
mov
dec
es
nop
adc
mov
rclb
mov
mov
xor
cmp
scas
mov
mov
add
loop
mov
xor
add
add
aas
jae
sub
cmp
ds
pusha
dec
mov
fidivrs
mov
mov
inc
push
sub
fmull
and
ja
dec
mov
jnp
mov
pop
push
int
subl
jnp
add
sbb
add
xlat
std
aad
push
rcr
push
clc
mov
fistpl
jecxz
bound
scas
sub
push
mov
hlt
mov
xor
add
xchg
shll
lret
out
jge
outsl
mov
push
les
idiv
push
testb
jg
repnz
int
cld
pop
xor
iret
xor
and
ficoms
out
cmpsb
inc
lret
jo
sub
and
repnz
scas
dec
jmp
es
push
push
mov
adcb
xor
mov
lock
shrb
jns
ss
in
ds
mov
jb
inc
sub
cmp
xor
daa
push
pop
rclb
xchg
jl
push
es
negl
lea
loop
and
aas
mov
push
movsb
cli
pop
xchg
sub
sub
icebp
fisttpll
popf
aaa
out
jne
mov
adc
in
daa
cmp
push
jbe
inc
fs
xorl
aad
mov
sub
loopne
mov
lret
ljmp
jbe
repz
jmp
pusha
add
test
scas
ds
cli
mov
xchg
lret
andl
xchg
mov
movsb
cmc
movsl
mov
push
ss
je
xchg
test
jnp
jns
in
inc
mov
adc
push
stc
in
or
fdivrl
repnz
cmpsl
lcall
int3
or
mov
jge
fistps
mov
push
jle
cld
js
xor
xchg
das
fdiv
sbb
xor
in
adc
mov
arpl
arpl
test
int
mov
ja
xlat
dec
lods
bound
sub
jle
stc
insl
std
inc
iret
je
test
pop
pop
mov
jmp
sbb
loope
push
gs
cltd
cli
in
pop
push
in
pop
leave
popf
jmp
or
add
shl
cmpsb
pop
lods
xor
jg
xor
cwtl
push
pop
xor
sbb
dec
jge
out
iret
and
mov
nop
xchg
add
scas
sbb
outsb
dec
fldenv
ja
push
jmp
rcrb
clc
out
or
cwtl
push
stc
or
push
sysret
mov
cmp
jge
aam
push
test
mov
mov
imul
xor
or
pop
mov
lcall
jecxz
icebp
out
insl
cmp
sbb
or
adc
jo
and
jmp
popf
mov
sub
ss
dec
insb
lea
cltd
test
fcompl
cmpsl
daa
jb
dec
adc
test
mov
call
push
insl
aas
stc
jge
gs
mov
inc
cmpsb
adc
add
push
sub
fs
mov
jge
leave
inc
in
mov
aad
out
in
in
icebp
add
sarb
cmp
xor
push
push
es
inc
add
lods
xchg
cltd
jmp
insl
test
popf
icebp
insl
mov
jmp
rorl
adcb
fwait
shl
inc
sbb
pop
or
mov
les
pop
mov
adc
out
add
lret
push
dec
sti
inc
inc
jnp
or
shlb
jp
inc
cmpsl
xor
leave
cmp
rclb
sub
xor
test
jge
dec
add
repz
sub
push
ret
adc
and
pop
std
sahf
in
mov
add
loope
xor
enter
sbb
sbb
xchg
pop
cmp
stc
inc
fldl
jae
jb
and
sub
jo
mov
pop
sub
inc
xchg
clc
mov
push
lea
lods
test
int
jl
jge
icebp
lret
aas
sub
adc
mov
cmpsb
push
inc
pop
sbb
xchg
push
inc
sbb
or
fwait
add
pop
repz
and
pop
nop
ss
mov
dec
dec
jp
insl
loop
push
adc
add
xor
xchg
dec
pop
inc
out
iret
mov
out
iret
loope
jnp
adc
jmp
fwait
gs
scas
or
adc
fmuls
sti
addr16
gs
xor
pop
add
mov
es
fistl
and
outsb
loopne
jl
cmc
lock
jo
cmp
sub
je
or
push
inc
repnz
push
popf
popl
insb
push
movl
sbb
sbb
test
or
mov
inc
cmp
and
insl
mov
cmp
or
pop
add
orl
or
popa
sti
jmp
nop
push
cmp
dec
fsubs
jle
add
inc
mov
push
mov
cltd
iret
hlt
sub
loope
cmp
or
cmp
fsts
mov
ucomiss
push
scas
and
mov
in
pop
scas
xor
bound
ss
jno
test
and
xor
std
rcl
and
xor
adc
sub
jne
jno
pusha
lea
pop
jle
dec
out
ffree
jb
xchg
pop
cmp
mov
ror
push
clc
lcall
jnp
divl
inc
out
ds
push
sarb
out
inc
cltd
movaps
inc
pop
add
push
push
test
ss
sbb
fimuls
push
jb
inc
outsl
fucomp
push
test
or
or
or
push
in
pop
fstps
mov
push
pushf
cmpsb
xor
out
fwait
movsl
enter
push
cltd
ret
adc
fnsave
push
push
in
inc
xchg
pop
cmp
dec
jns
lret
enter
jl
mov
xor
aaa
sahf
stos
cld
xchg
inc
xor
jbe
inc
aam
ffree
shlb
pop
xor
xchg
push
hlt
iret
dec
clc
rol
xor
xor
das
sub
jp
in
pop
in
lahf
aad
sbb
inc
out
xlat
fucomip
ss
dec
or
adc
nop
xchg
cmpsl
jae
cld
cmp
hlt
imul
fcmovnbe
outsb
testl
lcall
popa
fdivr
cmp
push
xchg
lcall
sub
pop
pusha
cmpsl
pop
sti
dec
xor
jp
addb
int3
jp
sub
push
test
dec
lock
lods
ja
jae
xor
adc
mov
cmc
mov
das
mov
and
add
in
xlat
mov
addr16
and
arpl
add
push
push
stos
xchg
hlt
dec
mov
pop
pop
scas
mov
pushf
mov
lret
inc
adc
cmp
imul
daa
mov
test
mov
jbe
mov
vmread
or
neg
adc
sbb
jp
or
adc
fldcw
notl
and
adc
scas
dec
and
testb
repnz
inc
loopne
aad
iret
aad
sbb
shlb
or
call
stc
sti
les
dec
cmc
xor
lock
fwait
loopne
adc
mov
mov
leave
ret
sub
out
mov
cli
jmp
mov
sbb
sahf
in
lods
and
and
sahf
dec
push
dec
adc
lock
int3
popf
push
jecxz
loopne
mov
hlt
dec
cmp
je
xchg
push
jnp
in
mov
fwait
lret
cmp
jns
sbb
jnp
js
cld
popa
lcall
push
cmp
jp
cmp
fldt
mov
push
andl
test
sbb
xchg
sub
add
shrb
add
dec
dec
xlat
repz
adc
push
push
loope
negl
mov
lcall
push
cli
lods
sub
push
pop
fstpt
sbb
pop
jle
mov
repz
dec
daa
jo
aaa
and
pop
mov
jns
or
sub
jbe
jge
bound
or
mov
sub
clc
push
divb
loope
dec
lahf
or
cmp
fs
jp
jae
cmpsl
inc
mov
mov
cmp
mov
aas
jp
shll
mov
mov
or
cmp
ss
cli
or
add
iret
pop
loop
mov
pop
lock
pop
in
testl
and
in
cld
dec
xor
sbbb
jmp
mov
lds
pushf
xchg
xor
or
pop
lea
stc
out
dec
test
out
pop
sbb
sarl
clts
xchg
mov
lea
mov
jg
pop
lret
xchg
loopne
pop
ret
jle
xchg
cwtl
mov
sbb
jns
push
push
nop
insl
mov
leave
data16
test
scas
sarb
mov
jp
cli
pop
jecxz
call
in
sbb
fwait
imul
fistl
scas
mov
sbb
or
test
push
dec
std
dec
pusha
xlat
mov
jnp
je
aam
lods
bswap
loopne
dec
inc
push
sbb
inc
pop
or
in
dec
cmp
je
repnz
xchg
sub
lods
mov
test
aam
xor
aas
pop
movsb
sbb
push
sahf
and
pop
lods
jmp
shrb
mov
call
pop
mov
cmp
dec
gs
mov
leave
push
lods
test
pop
cmp
jp
xchg
adc
leave
sbb
mov
jns
dec
addr16
ljmp
adc
js
repnz
jnp
adc
es
cmp
jne
xor
in
jno
loopne
gs
stc
out
int3
movb
fwait
aam
sub
ret
lods
loopne
sbb
add
rorb
lret
push
shlb
mov
divb
rolb
test
and
mov
push
and
in
in
aaa
mov
enter
test
mov
nop
mov
dec
gs
test
ds
and
add
ret
dec
addr16
and
sahf
fwait
mov
cld
push
jne
les
mov
bound
pop
imul
insb
adc
test
add
xor
iret
daa
testl
orl
inc
dec
repz
or
insl
and
jb
jns
addb
into
imull
pusha
lcall
or
out
stos
mov
add
out
add
test
cltd
int
in
push
ja
mov
das
daa
stos
jecxz
dec
add
sub
sti
ret
adc
push
bound
inc
fcompl
dec
repz
fwait
pusha
sbb
repz
and
sub
je
addl
movsb
cld
mov
mov
push
hlt
sahf
xchg
xchg
jae
mov
addr16
mov
pushf
imul
ret
xchg
sub
xchg
dec
negl
fdivr
mov
jb
jecxz
pop
loopne
shll
clc
jecxz
loope
in
shl
in
inc
add
and
les
outsb
xchg
push
cmp
pop
add
mov
jmp
dec
sub
enter
out
jne
nop
fisttpll
ja
int3
filds
stos
add
aaa
sub
mov
clc
pop
push
push
mov
fdivl
imul
stos
dec
jbe
bndstx
int3
fstpt
jbe
sub
movsl
xor
shrl
lods
test
cmp
jno
and
out
or
mov
cmp
jo
inc
jno
pusha
repnz
cs
or
fiaddl
jbe
mov
cmp
and
jmp
aam
dec
inc
out
xchg
out
mov
mov
insb
add
sub
fs
pusha
dec
push
and
mov
movsl
lret
fimuls
mov
aad
add
jl
imul
pop
xor
adc
jl
and
test
fs
pop
jg
push
lock
clc
stos
add
inc
sub
scas
ss
lret
sub
popa
dec
or
test
xor
scas
mov
rcll
or
or
shrl
xchg
call
fucomp
sub
insb
adc
out
cmpsb
lods
pop
gs
inc
pop
movsb
sbb
ret
mov
popf
xchg
dec
mov
aaa
dec
insl
ficoml
dec
jnp
movb
and
mov
jp
pop
mov
lret
cmp
in
pusha
mov
mov
in
cmpsl
mov
push
mov
mov
gs
cmp
and
hlt
lea
dec
push
popa
or
aam
mov
fistl
mov
inc
fld
adc
test
loop
xor
xchg
mov
and
push
rorl
sbb
jecxz
mov
orl
cmp
arpl
xor
xchg
xor
mov
in
adc
push
popf
cltd
sbb
sbb
das
leave
xor
mov
das
dec
push
cli
xor
shlb
mov
movsl
inc
add
in
mov
arpl
frstor
cmp
mov
pop
divb
and
and
lock
push
cld
push
cwtl
xor
cmp
loop
fs
dec
ljmp
add
sbb
imul
jl
loop
test
loop
loop
xor
addr16
fs
int
xchg
in
out
mov
cmp
stos
inc
jns
repz
int
movsl
or
xchg
insl
xor
cwtl
fdivrl
xchg
outsl
hlt
test
repz
call
in
cmpsl
stos
aaa
hlt
and
loop
mov
xchg
scas
das
xor
fidivrl
loope
rclb
push
leave
cmpb
aaa
fisubrs
negl
popa
jl
mov
sub
gs
inc
jp
push
sub
pop
mov
pop
xorl
sub
aaa
or
fldenv
outsb
xor
pop
lahf
mov
xor
scas
loope
jg
push
cmp
jge
cmp
mov
push
jmp
ret
mov
popf
xor
repz
cld
test
mov
cltd
inc
in
xchg
adc
cs
incl
cmp
lock
cmp
call
std
inc
shlb
repz
popf
mov
pop
xchg
mov
les
or
mov
ficompl
sahf
jbe
mov
sbb
outsb
inc
cmp
in
repnz
mov
sub
xchg
daa
data16
or
jnp
addr16
call
mov
je
sbb
in
insb
push
daa
dec
aam
or
jge
fsubs
loop
js
push
out
push
addr16
sbb
rorb
nop
dec
push
pop
jge
inc
jle
pop
sbbl
andb
mov
in
ret
repnz
push
loopne
test
lds
mov
out
inc
pop
mov
psraw
out
jg
mov
ss
lcall
push
dec
or
lods
popa
sub
mov
scas
push
out
push
repnz
cmp
cmp
in
rcrl
mov
push
cwtl
insb
enter
insl
fiadds
sbb
add
cmp
enter
loop
mov
and
out
jbe
test
cmpsb
cltd
xchg
mov
jns
jg
sub
xorl
into
ss
sbb
mov
cmp
push
cltd
mov
addb
daa
sub
cmp
popf
fbld
jbe
lods
lods
mov
nop
xchg
adc
push
mov
dec
mov
dec
lods
test
or
lret
sbb
ljmp
adc
xchg
out
lcall
out
cltd
in
jmp
fldcw
hlt
out
adc
cmp
jns,pn
mov
ds
jl
mov
sbb
je
cltd
movsb
mov
pop
inc
mov
aad
pop
out
jns
sub
ss
aad
or
imul
mov
das
iret
jge
ffree
ja
jmp
and
mov
push
xchg
sbb
jp
out
mov
std
jle
scas
sub
and
lods
xor
mov
push
jo
cmp
xchg
leave
mov
test
jnp
repnz
cmp
pop
rol
pop
xchg
sbb
pop
shrl
lcall
lcall
cmp
arpl
dec
pop
pop
fwait
sbb
mov
or
fs
ret
sub
pop
fsqrt
rcrl
mov
cld
sahf
adc
push
push
repz
add
loop
add
movsb
pop
nop
repnz
imul
xchg
lea
clc
shlb
and
cmp
xchg
mov
sahf
add
push
or
aaa
push
xorb
xor
pop
sub
sbb
call
inc
mov
xchg
pusha
or
inc
adc
xor
lds
nop
sub
xor
lds
mov
pop
mov
fistl
sahf
sbb
xor
out
mov
xchg
fwait
push
aaa
mov
inc
xchg
shr
pop
sbb
add
mov
movsb
sbb
test
in
bound
jge
aaa
sahf
in
push
lret
mov
fildl
arpl
fidivs
seto
ret
test
cld
repz
mov
mov
repnz
mov
ljmp
cld
lret
adc
xchg
shrl
movsl
cs
test
clc
cmp
mov
jae
push
jns
in
ljmp
mov
push
or
xor
and
inc
sub
jbe
dec
iret
sbb
jae
push
fdiv
in
andl
nop
outsb
dec
popl
push
popa
repz
stos
scas
jbe
fsubr
ds
aaa
and
mov
cmpsl
repz
mov
or
jbe
sub
lock
xchg
adc
pop
cmpsb
cmc
pop
bound
mov
pusha
fst
mov
aam
bound
rol
leave
fwait
test
aaa
pop
decb
mov
aaa
les
dec
fadds
xor
loopne
mov
mov
es
loopne
js
jl
xchg
test
push
sahf
adc
cli
cmp
rcl
dec
cmc
adc
testl
jns
adc
dec
mov
and
scas
inc
or
sbb
inc
test
mov
gs
cmp
pop
stos
mov
or
push
das
mov
add
pop
insl
daa
inc
cltd
mov
xchg
or
fnstenv
jae
add
loopne
lods
fsts
and
add
mov
push
xchg
jbe
cltd
add
add
sub
pop
dec
and
pop
arpl
pop
mov
xor
std
out
ja
or
xchg
sub
out
pop
sahf
add
dec
sbb
mov
and
fisubrs
add
dec
popa
iret
jae
push
iret
pusha
sar
out
sbbb
mov
jmp
pop
cld
cmp
stos
mov
mov
ljmp
pop
or
or
add
aad
jne
pop
cltd
cmp
fisttps
dec
into
das
rorl
lods
int
stos
iret
pop
cmpsb
pop
fwait
out
ds
mov
ljmp
lahf
or
jb
jmp
cs
ficoml
jo
mov
enter
repnz
xchg
fisttpll
popf
mov
sub
xchg
mov
push
addr16
mov
and
imul
lahf
or
push
lea
inc
pop
mov
cmp
fcmovnbe
mov
rorb
out
int3
iret
mov
dec
dec
lret
push
hlt
jns
arpl
cmp
fists
mov
inc
in
cmp
push
shr
mov
or
fxch
arpl
scas
iret
mov
outsb
mov
fwait
repz
and
push
pusha
lea
scas
cld
push
and
aas
out
in
xor
mov
xchg
cld
outsb
jbe
jecxz
nop
stos
lods
ficoms
push
cli
fnstcw
mov
mov
xchg
mov
data16
fcmovnbe
loope
cld
add
xchg
test
cmp
sarb
dec
inc
inc
mov
je
push
loope
je
jo
pop
loope
mov
cmp
jle
mov
imul
cmc
fs
lret
mov
andb
and
pop
lock
mov
and
sub
dec
push
iret
push
insl
leave
iret
or
aad
sub
sbb
add
subl
or
lds
repz
inc
or
shr
outsb
add
push
jae
jb
ret
mov
test
cmpl
cli
into
add
ds
cmpsb
mov
mov
sahf
jge
outsb
sti
dec
cmp
inc
add
or
lret
pop
fcoml
rcr
test
bound
and
into
leave
sti
jle
mov
jecxz
dec
jle
xchg
xchg
mov
lock
xchg
sub
lods
jo
mov
add
and
cmc
loopne
shlb
stos
xor
ss
mov
test
stos
push
xor
loope
push
dec
popf
cmpsl
xor
icebp
loopne
sbb
es
pop
xchg
lods
xchg
cmpsl
cmpsb
xchg
lret
cmp
pushf
rolb
mov
pop
mov
movsl
adc
test
lahf
pop
mov
adc
jge
mov
sbb
jb
push
sbb
pushf
fs
xor
rorl
shrl
jne
cmpsl
fisttpll
dec
add
push
data16
or
js
aas
lcall
shrl
arpl
push
int3
push
stos
xchg
sub
ss
enter
pop
ficoms
scas
sub
mov
or
addr16
sub
ss
std
addr16
in
jle
pop
push
mov
sbb
adc
lret
mov
sub
mov
sub
mov
add
repz
jl
nop
cwtl
nop
shlb
jne
lret
and
movsl
into
dec
daa
mov
inc
xchg
push
jle
mov
lret
loope
pop
inc
xchg
sbb
sbbl
jl
dec
faddl
jl
mov
adc
add
iret
or
int
int3
dec
and
mov
cmc
sbb
inc
rcrw
ret
in
clc
and
sub
pop
cld
xor
mov
jmp
push
mov
cmp
out
xor
addr16
and
sub
xchg
mov
or
mov
adc
cld
inc
ja
jb
sub
jae
les
lcall
xor
notl
shlb
pop
mov
xchg
shll
out
push
jg
stc
test
aad
jns
mov
xchg
adc
aas
push
sar
xchg
dec
imul
ljmp
mov
cli
psubq
lret
mov
mov
sub
mov
in
stos
pop
iret
push
lret
xchg
int3
jecxz
popf
xlat
ja
pop
mov
je
jo
xor
push
sub
or
shll
dec
adc
mov
pushf
push
cmp
and
shlb
in
jmp
and
popf
inc
cwtl
loop
call
sub
movsb
sarb
mov
aas
mov
fmul
lock
or
mov
jb
add
and
mov
or
sub
pop
add
mov
lods
jg
mov
sbb
push
push
pop
movsb
mov
test
pusha
rorb
mov
je
xchg
jp
and
into
mov
add
adc
inc
push
cli
repnz
test
into
mov
push
scas
orl
mov
shrb
dec
dec
rorb
fcoms
jmp
xchg
mov
loope
and
bound
jb
mov
aam
add
xchg
ficoms
and
fildl
js
pop
scas
mov
dec
ds
jl
stc
mov
mov
mov
notl
mov
pop
nop
pop
mov
loope
mov
cmp
adc
inc
fwait
pushf
daa
nop
push
test
aad
inc
dec
ljmp
std
aad
xor
xor
test
stos
lcall
xchg
dec
arpl
fmulp
or
fmuls
frstor
dec
adc
loop
adc
lahf
nop
cmpsl
push
add
test
jns
cmp
or
cmp
lret
stos
xchg
and
mov
pop
aam
pop
loop
cmpsl
adc
xchg
inc
fiadds
jecxz
dec
jp
sub
pop
out
jecxz
sub
orl
in
jmp
xor
sbb
dec
out
push
cwtl
cli
sbb
lea
mov
test
mov
cmp
loopne
jp
lret
mov
cltd
test
and
jae
xchg
into
adc
push
ret
cs
shrl
inc
xchg
jbe
mov
push
cli
adc
sti
dec
mov
fnstenv
jecxz
xchg
aam
pop
cld
or
fcmovnu
rorl
push
pop
mov
push
scas
fldl
daa
popa
jno
or
xchg
outsl
lods
sti
dec
push
divb
lock
fstl
or
dec
out
mov
or
jge
push
jp
lea
jp
popf
push
and
stos
lahf
les
or
test
push
data16
ret
repnz
outsb
sub
mov
inc
out
dec
stos
rcll
sbb
xlat
push
mov
xor
aad
popa
fldenv
int
jecxz
dec
fs
jp
push
dec
nop
cltd
test
add
add
sbb
jo
lods
sbb
cmp
leave
mov
sub
cmp
push
loopne
cmp
sti
xchg
mov
fstpl
or
mov
pop
dec
insl
popa
mov
ja
xor
imul
loope
adc
addr16
dec
cwtl
dec
push
call
scas
sahf
pop
hlt
xor
js
cld
rol
out
dec
ret
xchg
shll
in
aad
and
inc
pop
in
fs
and
inc
mov
and
sbbb
pop
gs
or
xchg
ja
inc
inc
ja
push
mov
hlt
outsb
jge
in
cmp
scas
cmp
mov
jge
stos
outsl
xchg
pop
fiadds
enter
inc
stc
mov
sbb
push
or
imul
add
inc
lods
fs
movsb
jmp
js
jle
add
sub
mov
sbb
push
push
sub
xor
fldenv
iret
stc
fldenv
fdivrs
sub
gs
call
shr
ja
fidivs
mov
les
push
scas
sbb
xchg
leave
jmp
into
add
imul
repnz
scas
push
cmpsl
pushf
test
pop
pop
dec
cmpsl
mov
add
sbb
hlt
xchg
stos
cmpsb
leave
pop
fsubrl
daa
shrb
sub
fstl
push
addr16
inc
cmc
inc
pop
push
clc
ret
mov
icebp
sbb
ret
jne
push
or
add
das
fidivrl
xchg
inc
daa
mov
enter
fcoml
push
jbe
push
mov
mov
cmp
sbb
fisubs
inc
dec
aad
mov
or
cli
ljmp
push
adc
cmp
sbb
and
and
outsl
xchg
out
cmp
lahf
lods
xchg
adcb
cmp
js
cli
int3
pop
cmp
ja
inc
jle
gs
mov
iret
test
aaa
test
sahf
inc
out
sub
jge
cmp
cmpsb
aas
cmpsb
dec
repz
mov
movl
dec
mov
movb
dec
xchg
mov
in
inc
pop
mov
pop
cmp
pushf
out
mov
loop
xor
imul
inc
add
addb
add
add
dec
inc
imul
js
movsl
scas
popa
xchg
add
adc
cwtl
mov
andl
add
add
cwtl
fnsave
pop
pop
sub
loopne
mov
arpl
ficompl
int3
cs
push
cmpsl
shlb
dec
rcr
dec
adc
lret
add
hlt
sbb
or
fwait
in
sub
in
or
enter
jne
mov
cltd
mov
mov
idiv
xchg
dec
fcomi
cltd
xchg
sbb
rcrb
add
jecxz
gs
shr
jle
scas
xchg
mov
sub
mov
call
and
jo
mov
cmp
pop
mov
lods
xchg
js
xchg
mov
pusha
push
movsl
jecxz
push
aaa
in
aad
mov
aam
lahf
adc
push
xor
enter
jp
xchg
xor
push
cmpsb
das
jno
jp
insb
mov
outsb
pusha
lods
pop
or
test
push
jns
fistl
pop
pop
out
jns
call
mov
je
cmpsb
mov
mov
outsl
hlt
jno
jne,pt
gs
pop
ds
xchg
ret
push
ret
cmc
pop
sahf
push
fmull
fnstsw
inc
pop
dec
aam
and
xchg
cmp
or
jne
mov
adc
pop
and
mov
push
cltd
xchg
push
ret
sub
and
dec
and
push
pushf
out
mov
lahf
gs
lods
jae
push
flds
test
dec
dec
or
mov
sarl
scas
dec
jns
fistl
clc
fstl
and
stc
imulb
cltd
pop
inc
out
inc
xor
movsb
jmp
mov
andb
shrb
hlt
sbbb
ds
scas
add
repnz
gs
pop
cmp
leave
sbb
adc
lret
mov
adc
jae
fstpt
ljmp
mov
ror
nop
push
repz
and
std
ror
add
lods
sbb
test
mov
scas
jae
pop
pop
cmp
sahf
or
add
sarl
push
lret
scas
lea
push
insb
inc
mov
repnz
sbb
lea
scas
movsl
in
fistpll
int3
sbb
jbe
cld
pop
fistps
sahf
out
clc
leave
cltd
stc
push
sub
jno
nop
in
pslld
pop
neg
add
lahf
dec
or
fnstcw
dec
popa
sub
out
mov
ljmp
sub
div
repnz
jnp
imul
nop
in
xor
cmpsl
inc
pop
jl
mov
cmp
out
or
aaa
inc
stos
std
mov
mov
ja
push
pop
sbb
or
subb
add
adc
adc
xchg
mov
pop
add
je
jmp
or
mul
adc
sbbl
addr16
shl
movsb
repz
mov
xor
gs
adc
mov
mov
inc
sbb
cmpsl
loop
mov
cltd
cwtl
pusha
mov
lock
mov
or
popf
dec
mov
sbb
pop
pop
adc
les
push
hlt
icebp
xlat
das
cmp
and
and
scas
jae
daa
cmpl
test
push
call
mov
cmp
lret
ret
lret
loop
add
lods
sahf
push
shll
insb
movsb
ds
xlat
adc
pop
xchg
inc
push
rcll
xor
int
mov
adc
dec
push
jmp
mov
jl
popa
jl
inc
dec
mov
movsl
and
jo
jnp
pushf
lahf
imul
mov
pushf
inc
xchg
pop
adc
jge
jp
test
cmc
pop
les
fcmovnu
out
mov
fdivl
notb
mov
mov
jns
jg
jne
stos
ds
in
add
cmp
daa
push
sub
out
popa
popf
sub
and
mov
pop
in
jg
cmp
fcmovnb
scas
imul
or
pop
or
mov
shll
scas
mov
jne
or
fs
jp
daa
inc
mov
xor
test
xorb
pop
push
enter
jno
xchg
test
mov
sbb
insl
ss
daa
mov
inc
lods
lods
xchg
mov
arpl
outsb
cmp
add
mov
mov
icebp
push
mov
outsb
daa
insl
jmp
lods
dec
push
es
mov
loopne
xor
dec
push
rcl
stos
adc
adc
popf
loopne
aad
pushf
sub
mov
rcll
mov
popf
in
inc
ret
inc
cmp
popf
roll
out
pop
roll
mov
test
cmp
imul
test
lcall
lds
push
lahf
mov
sbb
in
mov
es
jl
push
loop
nop
dec
inc
test
test
dec
not
add
jbe
call
leave
dec
addl
nop
cmc
push
adc
out
fdiv
jecxz
xchg
into
cmpsl
mov
insb
cmp
out
arpl
add
jl
xor
and
push
xor
cmp
stos
or
ss
imulb
scas
ja
inc
sbb
leave
test
shll
sbbb
push
data16
hlt
adc
dec
push
push
cmp
insb
lret
cmp
mov
rol
mov
imul
rorl
jbe
in
sbb
jmp
inc
dec
les
stc
push
pop
sbb
into
mov
lcall
mov
ror
or
mov
adc
rcll
mov
fistpll
rcll
and
mov
insb
add
loope
push
cmp
lods
push
test
cmp
push
and
adc
pop
cmp
jle
adc
and
fdiv
enter
xor
pop
call
ljmp
stc
shl
stos
scas
rcrb
fistpl
dec
in
jnp
pop
scas
jns
pop
xor
inc
push
dec
cli
cld
pop
adc
mov
out
bound
jl
stc
or
xchg
inc
stos
mov
inc
jo
ret
xor
cld
mov
insl
cltd
mov
movsb
mov
xor
inc
roll
sbb
mov
and
jbe
mov
je
in
and
push
imul
clc
push
jae
ja
inc
and
inc
inc
push
popa
mov
mov
test
jnp
mov
adc
loopne
pushf
out
adc
xchg
shrl
scas
jle
repnz
sub
mov
shrb
jmp
dec
sbb
xchg
push
sub
stos
mov
cmc
jnp
mov
enter
inc
cs
push
test
jnp
pop
mov
mov
inc
js
lahf
int
decl
lods
call
clc
pop
lcall
jbe
inc
out
icebp
push
arpl
cmpsl
ds
jg
in
mov
hlt
sub
in
in
xchg
mov
mov
sub
iret
and
jns
mov
push
push
aas
mov
adc
int3
outsl
sub
push
xchg
dec
push
pop
dec
fistpll
push
fs
stc
clc
xchg
lock
xchg
jle
mov
xchg
out
aam
push
adc
add
push
mov
and
and
jmp
sti
hlt
mov
sub
insl
jne
sbb
test
data16
cs
xor
in
dec
jne
and
xor
movl
xor
das
fwait
stos
mov
lock
jbe
pop
xchg
cwtl
xchg
int3
ja
aad
add
adc
jne
jns
jl
enter
mov
aam
xchg
iret
stos
sbb
push
orb
fadds
rorb
fcomi
stos
sub
jbe
pop
adc
ret
dec
sub
sbb
dec
xor
adc
nop
xchg
xor
outsl
sbb
sbb
fnstenv
mov
sbb
rcll
mov
sahf
sub
dec
mov
test
mov
repz
daa
sub
stos
push
mov
or
out
ds
xor
push
inc
insb
fldl
xor
sub
lcall
jae
test
loope
out
mov
outsb
popa
push
dec
inc
int
in
imul
in
jmp
mov
mov
scas
cmp
shlb
enter
orb
ljmp
cmpsl
jl
and
out
cltd
addb
test
jnp
insl
ret
js
pop
sub
sub
jge
ficompl
jb
add
dec
push
mov
test
inc
test
pop
push
stos
xor
adc
scas
ljmp
lock
sahf
inc
test
pop
adc
lods
push
stc
xor
pop
inc
leave
aas
mov
add
pushf
inc
and
mov
andl
rolb
jno
pop
pusha
imul
and
inc
pushf
repz
aad
inc
std
int3
push
mov
and
lds
add
imul
cmp
add
idiv
leave
mov
inc
fcom
sbb
mov
std
sub
xor
mov
mov
mov
and
mov
xor
fmull
xchg
insb
or
pushf
mov
push
test
out
adc
inc
mov
push
mov
ret
std
push
mov
add
push
test
fsubp
fdivr
lret
test
mov
fadd
add
mov
pop
loop
sub
inc
xchg
xchg
test
test
bound
mov
sub
andb
pushf
idiv
xchg
sti
mov
add
popa
jne,pn
cmpsl
cmp
mov
fucomi
pop
sbb
in
sbb
adc
add
or
cld
or
dec
xor
push
xchg
das
xchg
mov
xchg
or
mov
jb
sbb
mov
mov
sti
mov
jns
fnstenv
pop
jo
mov
add
or
pop
dec
stos
nop
jp
out
inc
or
insl
call
mov
or
jns
in
lock
mov
mov
popf
and
xor
mov
and
inc
aam
add
sbb
stos
and
test
orb
dec
outsb
sub
and
add
and
or
lret
adc
cmp
lds
imul
adc
data16
sbb
xchg
movsl
mov
pop
jle
add
xor
cmp
pop
cmp
icebp
mov
cmpsl
or
xchg
aad
push
ds
daa
in
xlat
mov
jnp
nop
sub
mov
je
add
mov
or
dec
lock
mov
iret
out
out
add
jb
lock
cmp
inc
pop
movsl
fwait
adcl
pop
mov
bound
adc
lock
imul
cmpb
xchg
push
or
mov
xor
add
insl
test
gs
mov
ljmp
into
mov
pop
pop
xchg
add
xor
movsb
xorl
add
sub
push
aaa
mov
adc
and
jp
andb
and
adc
enter
popa
inc
inc
mov
daa
cmpsb
inc
leave
scas
add
sbb
mov
je
addr16
pusha
sub
in
mov
addr16
add
lds
mov
cmpb
pushf
dec
lock
loope
clc
out
js
sub
adc
xchg
test
cmp
test
inc
jno
fiaddl
fildl
xchg
fisttpl
mov
shlb
push
aad
jne
mov
es
clc
cltd
dec
mov
je
dec
fcompl
lods
sbb
xchg
movsb
mov
lret
and
out
test
ja,pn
outsl
mov
movsb
adc
dec
cmp
add
mov
scas
test
add
and
lods
bound
sub
in
imul
mov
out
sub
sub
sbb
sbb
lahf
mov
mov
pop
mov
inc
ss
repz
pop
jnp
lret
pop
xchg
pop
test
ret
or
pop
pop
mov
inc
xlat
mov
nop
icebp
call
pop
jl
push
lds
stos
pop
push
dec
xchg
adc
inc
jge
lds
dec
jp
stos
push
cmc
outsl
cmp
rorl
inc
es
jge
fsubr
loope
insb
popa
cld
sub
lock
hlt
and
sbb
jne
andb
inc
xor
lods
and
dec
sub
into
lcall
aad
nop
call
lret
in
ret
mov
pusha
adc
push
inc
adc
jno
jnp
test
cltd
mov
cltd
popa
lods
and
and
adc
gs
mov
shrb
or
add
jnp
rolb
and
cmp
call
andb
out
push
es
push
jns
mov
xlat
adc
fistps
in
iret
and
outsl
mov
or
mov
adc
jl
out
andnps
add
push
inc
xchg
fstpt
fisttps
xchg
in
das
movsb
fcmovnu
push
add
jg
inc
call
mov
cmpsb
jle
lea
inc
lds
sbb
mov
cli
mov
push
out
cmc
cli
and
and
cld
lret
lahf
ljmp
or
push
adc
test
mov
push
sbb
gs
or
and
add
aam
imul
add
mov
leave
jns
and
out
and
cltd
inc
ss
mov
xchg
mov
xchg
fs
int3
pop
imul
jl
sbb
repz
or
push
inc
sti
xchg
lret
ja
repz
popa
mov
bound
mov
pop
or
cmpsb
loop
xchg
cmp
add
adc
mov
es
sub
loope
mov
push
mov
mov
scas
adc
mov
dec
scas
jb
pushf
dec
stos
out
mov
lret
lret
jp
pop
cmp
cltd
fs
lahf
sbb
jbe
or
gs
inc
test
mov
pop
ds
andl
rorl
adc
orb
add
xchg
daa
adc
outsb
lock
mov
mov
pop
xchg
insb
or
push
mov
xor
hlt
push
lret
aam
adc
stos
sbb
mov
scas
mov
dec
sub
mov
xchg
or
jp
dec
push
dec
popf
xchg
dec
lahf
aad
xorl
insb
jl
cmp
cmp
mov
xor
outsb
mov
daa
push
out
lea
shlb
inc
adc
lret
push
loop
add
popf
aas
ret
mov
jae
je
std
cmp
push
lds
mov
xchg
in
movsl
repnz
fwait
movsb
mov
leave
insl
sub
add
inc
popf
call
jo
shlb
pop
jb
cmpsb
adc
ja
movsb
sbb
popf
pinsrw
dec
mov
in
adc
enter
jl
push
cmc
xchg
aad
and
shll
push
shlb
ja
jo,pt
mov
mov
or
loopne
shrb
dec
add
pop
mov
aam
dec
and
scas
or
jecxz
sahf
insl
gs
xchg
xchg
movsb
dec
sarl
lods
je
hlt
jg
fdivs
cmc
add
nop
inc
shrl
arpl
jnp
add
je
out
mov
insl
mov
cwtl
in
xchg
int3
int
sub
pop
clc
pusha
adc
pop
mov
sbb
jecxz
cmc
fwait
xor
lods
mov
and
mov
bnd
into
and
dec
mov
ret
sub
jecxz
outsb
pop
cmp
adc
movsb
push
mov
inc
andb
ret
push
inc
or
insl
fistl
sub
sub
mov
sbb
sti
adc
pop
daa
add
push
test
dec
jne
mov
dec
cld
sbb
jbe
add
mov
icebp
scas
les
pop
fildll
fnstsw
lods
int
dec
push
daa
mov
outsb
test
adc
xor
sub
jnp
xor
lret
sbb
mov
movsb
in
decb
mov
pop
inc
mov
dec
popa
push
les
mov
mov
mov
inc
inc
sub
or
pop
mov
test
lock
pop
add
mov
add
ret
dec
jp
daa
sbb
pop
push
sbb
dec
pop
mov
pop
xlat
in
movsb
mov
inc
pop
pushf
push
xor
xchg
dec
js
inc
jns
push
lock
scas
jp
idivb
mov
xor
push
js
ret
imul
outsb
push
or
aad
sbb
shll
scas
xchg
sub
mov
fwait
pop
add
mov
lock
cs
sbb
sbb
das
jg
mov
data16
jns
pop
xor
incl
pop
mov
stc
in
shll
out
pop
pushf
cltd
cmc
movsl
daa
dec
ret
stos
xor
fsubl
xor
stc
sbb
jne
movl
loope
loope
testl
out
test
inc
mov
add
mov
mov
mov
mov
dec
and
cmp
out
sbb
repnz
lods
mov
adc
push
jno
ror
stc
push
cmp
sbb
stos
mov
je
add
mov
cs
cmp
mov
lods
pushf
xchg
ljmp
mov
rorl
push
mov
mov
push
cwtl
dec
adc
xchg
ret
xrelease
and
adc
div
clc
in
inc
pop
fdivs
loop
xlat
aad
mov
mov
fwait
add
mov
test
scas
das
cltd
int3
lcall
xchg
adc
inc
imul
sub
mov
push
mov
loope
sbb
adc
dec
adc
sbb
cmp
pop
adc
ja
loop
andl
icebp
outsb
pop
cld
xchg
xchg
stos
mov
lret
scas
pop
cmp
lds
push
push
cmpsl
jb
aam
pop
cmpsb
sbb
scas
cmp
push
incl
rcrl
or
xchg
ja
lods
mov
int3
mov
repnz
mov
pop
dec
outsl
jb
xchg
scas
xor
std
adc
je
outsl
mov
jge
addl
arpl
fisubs
jl
sbb
mov
das
mov
lret
jnp
and
cmp
adc
adc
or
mov
sahf
push
sahf
add
and
xchg
mov
and
hlt
cmp
xchg
sbb
adc
mov
xor
lret
jb
push
jge
loopne
jg
mulb
mov
xor
ret
inc
jne
xchg
push
push
cmp
pop
and
mov
mov
sbb
sub
or
xchg
mov
cltd
sub
add
sub
sub
rcrb
jecxz,pt
pop
je
sahf
xor
sub
xor
hlt
shll
inc
inc
xchg
lahf
call
sub
xor
aad
data16
dec
push
pop
add
mov
sub
bound
sub
push
es
orl
ficoms
pop
xchg
int
jecxz
addr16
mov
aam
sti
add
jb
xor
cmpsb
pop
gs
aad
add
inc
iret
and
cmp
sub
inc
pop
leave
mov
dec
jl
mov
in
mov
jns
pop
xchg
lea
and
lret
inc
inc
leave
mov
loopne
xchg
pusha
push
dec
push
ss
ss
notb
ds
in
dec
inc
pop
loope
jne
mov
cmp
fcoms
enter
fsubp
push
push
push
arpl
pop
jmp
sub
orb
pusha
mov
ret
push
mov
roll
sbb
daa
lock
filds
or
lods
inc
jp
loope
jnp
fcmovnbe
popa
pop
and
inc
enter
insb
les
js
test
xor
push
pusha
cmp
xor
xor
ja
adc
cmpsb
jmp
dec
xchg
xchg
inc
mov
nop
cmpsl
int
dec
dec
cli
mov
in
push
and
xchg
lcall
dec
xchg
daa
inc
js
mov
push
mov
add
mov
jnp,pn
arpl
jle
std
or
lds
rol
jb
mov
or
lods
cwtl
xchg
jns
cmc
fisttpll
lods
cli
adc
les
in
fsubl
xor
fcmovbe
and
ss
mov
mov
mov
push
pop
mov
xlat
daa
pushf
jne
call
cli
in
push
sub
ja
cmp
xchg
or
lret
sub
dec
jge
push
inc
fildll
mov
xor
scas
sbb
jne
sbb
add
mov
adc
dec
xor
mov
push
pop
cmp
pop
mov
call
jecxz
pop
cld
je
fbld
lds
inc
hlt
add
jmp
cwtl
xlat
lret
push
add
jmp
sub
mov
xor
sbb
push
shrl
enter
stos
inc
add
sub
movsl
dec
add
in
inc
lods
shl
sub
pop
adc
stc
jae
test
mov
lods
cs
cmp
movsb
sub
pop
js
fincstp
inc
in
ja
fldcw
dec
push
pusha
add
ss
xor
ljmp
sar
mov
sahf
mov
pusha
cmpsb
jge
jmp
xchg
cs
pushf
add
shlb
jns
lret
lahf
in
enter
test
test
mov
repz
shrd
sbb
or
jbe
pushf
dec
lods
stos
cs
dec
or
nop
mov
cmp
es
dec
data16
cltd
cmpsl
in
sti
andl
add
test
imulb
into
rolb
mov
push
in
sub
inc
push
inc
jnp
popa
pop
ret
stos
xor
sbb
cs
shrb
std
pop
mov
fsubs
mov
sbb
mov
jno
cmp
and
and
aaa
fistpll
dec
mov
xor
fs
ljmp
mov
movsl
mov
fmul
rcl
push
xchg
push
add
mov
in
lds
sub
dec
mov
sbb
imull
add
stc
mov
inc
or
sarb
cmp
popa
and
adc
mov
mov
add
mov
shr
mov
lock
jno
sub
add
mov
push
std
cmp
std
add
cmp
or
xlat
jne
in
aaa
adc
mov
push
xchg
mov
ljmp
aad
mov
out
sbb
or
jle
ret
jae
hlt
xor
inc
sar
data16
mov
lock
pop
fisubrl
ljmp
adc
xor
pop
aas
jg
dec
fisttpll
add
xor
stos
lods
sbb
insb
mov
ss
loopne
ret
in
adc
rcl
fbld
lds
call
sti
pop
fistpll
sti
popa
xchg
adc
jmp
sub
add
push
pop
sbb
in
mov
jnp
mov
fstl
xor
xchg
adc
loopne
xchg
push
clc
fwait
lock
hlt
lret
outsl
lahf
jb
xor
repz
shrl
push
gs
dec
cmp
push
jecxz
dec
cmc
aad
pop
mov
fimull
push
inc
push
push
jge
sbb
push
mov
lds
sub
test
pop
mov
xorl
xchg
jg
movsb
add
mov
push
xor
rep
popf
out
or
loop
cmpsl
adc
lret
aas
stos
fidivl
push
testl
fcmove
jnp
pop
ds
jno
sub
push
loopne
push
xor
sub
mov
fdivs
popf
mov
test
mov
adc
movsb
aam
jae
lods
aas
test
shrl
fimull
js
int3
ret
or
test
shl
jle
in
lahf
pop
mov
fsubrs
pop
adc
scas
js
fnstsw
push
shlb
mov
xchg
dec
xchg
std
inc
lock
scas
adc
mov
push
jl
dec
arpl
js
std
mov
xchg
mov
dec
aam
jl
rcr
std
repz
in
pop
test
push
mov
push
jecxz
mulps
jbe
dec
insl
cld
loopne
jne
pop
sbb
movsl
nop
or
jmp
mov
rorb
jmp
stc
adc
xorl
add
inc
fs
fwait
and
adcb
cmp
stc
jge
scas
rcrl
into
mov
xchg
in
jbe,pn
test
push
js
shld
adc
or
stc
cmp
push
mov
enter
loop
lret
loopne
cmpsl
fists
push
xlat
mov
test
pop
adc
mov
mov
pusha
sahf
sub
out
add
fmuls
roll
xor
pushf
add
shr
lock
jbe
fisubrl
mull
xor
cld
out
iret
jl
leave
mov
aad
decb
test
icebp
push
push
or
mov
mov
call
bound
inc
cmp
leave
lock
fiadds
jl
dec
popf
idivb
cmp
adc
das
mov
jbe
cmp
popa
mov
lahf
imul
test
jo
mov
fisubl
lods
push
in
je
call
adc
je
mov
xor
mov
ficoml
lock
mov
jnp
pop
into
addb
sbb
movsl
adc
out
pop
mov
ja
loop
insb
xor
aad
fadds
cmc
jne
dec
lret
pop
ret
mov
push
inc
mov
int
push
cwtl
add
mov
aam
add
dec
in
movsl
add
adc
roll
jne
jnp
cmc
rorb
dec
movsl
cmp
sub
and
inc
or
sub
icebp
and
adc
sub
jg
stc
inc
shrd
jmp
push
jns
or
push
in
loope
xchg
pop
int3
ds
sti
fcmovnb
cmp
ds
stos
jnp
cwtl
xor
mov
pop
mov
sbb
sbb
jecxz
cmp
push
repnz
fimull
cmp
jmp
cmpsb
sub
jne
les
cli
cmp
mov
pop
mov
adc
shrl
into
das
leave
dec
lods
push
test
pop
pop
mov
xchg
push
aas
jnp
cmp
dec
inc
adc
push
ljmp
dec
xchg
lods
insb
imulb
ja
fnstenv
push
enter
aam
cmp
fcmovnbe
mov
jecxz
dec
xor
lret
xchg
sbb
push
pop
popf
mov
jns
cmc
xor
cmpsb
sti
xor
sbb
dec
inc
ror
imul
jmp
test
inc
mov
jnp
mov
or
pop
inc
sub
imul
pop
mov
mov
or
mov
mov
stc
or
enter
call
and
stos
dec
popf
js
enter
jg
leave
inc
xor
icebp
cs
lock
in
mov
testb
sub
mov
dec
pop
add
popf
test
insb
es
lods
in
arpl
xchg
inc
ret
cwtl
inc
out
push
test
lret
fisubl
fs
clc
and
pop
dec
lcall
stos
es
scas
js
push
push
faddp
das
lods
or
cmpsl
rclb
pop
rcr
pop
xchg
cmp
jo
jge
mov
fwait
mov
cmp
inc
push
aaa
hlt
xor
mov
adc
mov
sahf
out
mov
push
rcrb
jge
cmp
js
inc
xor
add
pushf
cmpsl
in
sub
push
repz
push
jecxz
push
sub
clc
jecxz
push
mov
pop
insl
pusha
int3
lret
repnz
xlat
mov
cmp
sbb
ljmp
adc
pop
shrl
test
adcb
xor
push
test
aas
fwait
pop
test
xchg
les
push
xchg
insl
outsb
popa
jbe
std
out
add
sbb
fsubrs
ja
mov
push
jl
fsts
lds
pop
jae
xchg
addb
jb
push
cmpsl
int3
mov
push
mov
mov
pop
mov
imul
dec
outsb
inc
sbb
in
cmp
jb
outsb
push
lock
ret
int
jns
mov
or
jb
sarb
jb
sarl
sbb
cmpsl
pop
in
ror
out
fnstsw
or
cli
inc
sbb
int3
es
fdivrl
sub
jo
dec
sahf
outsl
mov
inc
dec
jle
clc
cwtl
xchg
into
mov
inc
lods
inc
pushf
sbb
xor
subl
dec
lcall
imul
ljmp
mov
sbb
mov
push
lret
dec
lds
cmp
in
lcall
push
xchg
mov
adc
or
mov
negb
negl
mov
mov
adcl
hlt
jbe
mov
sbbb
xor
dec
pop
sub
sbb
push
les
inc
jp
push
or
movsb
xor
sub
xor
and
push
jmp
sbb
decl
pop
inc
jp
xlat
scas
mov
dec
pop
xchg
xchg
enter
pop
inc
xchg
addr16
insl
sbb
mov
inc
pop
jle
adc
sbb
insb
ror
mov
js
ja
jb
mov
jle
out
cmp
enter
adcb
cli
pop
lret
insl
addr16
nop
mov
push
mov
je
mov
pop
add
fistl
and
in
test
repz
xchg
adc
scas
inc
or
movsl
mov
push
jne
pop
outsl
es
sub
mov
or
push
lcall
mov
enter
leave
fildl
fimuls
pop
hlt
jmp
push
sub
inc
fadd
fldcw
and
jecxz
lea
cmp
add
cmc
jbe
sqrtps
nop
std
arpl
rcrb
jmp
andb
and
dec
push
jns
daa
scas
jmp
test
mov
sahf
cmc
sub
call
ljmp
cmpsl
imul
push
and
cld
cld
popa
pop
jnp
xor
xlat
ret
cmp
int3
clc
jnp
xor
clc
fistpll
ret
or
sbb
lret
rolb
stc
jmp
cmpsl
lcall
mov
ds
xchg
or
pop
ljmp
sbb
mov
mov
cmpb
add
xor
sub
lea
cli
imul
jge
imul
lret
ds
dec
aam
stc
cmp
inc
cmp
add
bound
shld
jecxz
movsl
xorl
xor
iret
mov
jae
mov
push
mov
insl
sub
xor
inc
hlt
mov
mov
and
outsb
push
test
loope
cmc
xor
lahf
mov
dec
xor
mov
in
dec
loop
xchg
insb
dec
popf
mov
loope
out
mov
push
mov
cmpsl
xor
arpl
push
jl
das
icebp
bound
in
mov
out
test
and
adcl
inc
ss
cld
mov
aaa
push
and
or
testl
bound
nop
add
je
xor
insb
or
int3
or
fistps
rolb
shlb
pop
jp
mov
push
xchg
fnstenv
dec
out
pop
xor
mov
push
fdivs
xchg
fcoms
fistpl
and
inc
mov
or
xchg
push
sub
insb
xchg
bound
fwait
dec
and
adc
lods
rolb
cmpsb
jno
notl
jno
and
mov
scas
ja
push
pop
shrb
dec
inc
pop
mov
out
mov
inc
stos
sbb
or
inc
mov
push
aam
test
pop
test
shll
or
loop
and
adc
lods
popf
outsl
mov
ret
ds
jnp
insl
push
and
inc
push
adc
xchg
jo
outsl
and
and
call
hlt
ds
stos
mov
cmp
cld
je
popa
lods
jge
xor
mov
mov
incb
stos
sti
cmpsb
mov
movsl
enter
and
lret
cmp
inc
cltd
in
aaa
andl
pop
or
inc
jb
out
cs
repnz
aad
cmpsl
pop
stos
pop
sbb
mov
mov
xor
lret
scas
mov
mov
sbb
mov
xor
loopne
jno
and
mov
sbb
pushf
cmp
outsb
int
or
add
mov
test
inc
cmp
and
cmpsb
fnstenv
push
imul
into
movsl
leave
sahf
int
or
mov
add
popa
add
sub
andl
mov
pushf
inc
aas
xchg
push
iret
and
or
int
adcl
xor
adc
jno
pand
sub
xchg
sahf
subb
stos
and
and
xor
lcall
push
sti
jmp
cmp
jno
jmp
sbb
mov
test
lods
cmp
imul
into
mov
insb
adc
or
jg
shl
cld
add
pop
mov
cmp
or
or
inc
bound
add
popf
out
loopne
push
loop
bound
sbb
xor
fisttps
fs
xchg
rol
or
ficoml
push
scas
xchg
fisubrs
out
sbb
test
nop
sub
outsb
js
es
insl
push
lcall
fsubrs
mov
or
lods
cmpsb
mov
icebp
out
mov
in
insl
loopne
addr16
ss
pop
sub
sbb
nop
adc
decl
sub
pop
sbb
cli
jmp
cmp
add
hlt
xchg
xchg
fldl
pop
sti
mov
sbb
or
push
ds
lret
je
sub
stc
push
sbb
and
and
es
divb
jnp
pop
mov
sbb
mov
inc
ret
dec
shrb
or
mov
in
outsl
shll
xor
push
or
out
in
cmp
mov
lret
sbb
xor
add
fs
mov
inc
outsl
jb
addr16
mov
dec
dec
loopne
mov
leave
push
popa
mov
push
jae
pop
jo
out
or
add
es
arpl
and
rcrl
push
testb
dec
mov
mov
stos
sbb
cli
mov
ljmp
ficomps
mov
movsb
inc
jecxz
push
out
inc
dec
sub
jns
test
subb
xchg
scas
imulb
ja
add
movl
stos
pop
or
gs
pop
jg
andb
insl
jns
push
xchg
pop
and
or
dec
jae
add
orb
jnp
sub
fdivrp
pushf
pop
aaa
dec
notb
cmp
loopne
popa
or
sahf
fs
out
or
ror
aas
sbb
sahf
xchg
arpl
cmp
adc
test
daa
imul
gs
dec
mov
sahf
jns
xor
pop
mov
mov
call
rcrl
cmpsb
loope
jl
mov
xchg
lret
push
cmpsl
adc
push
or
loop
mov
jb
cltd
cmp
mov
xchg
mov
mov
sbb
mov
jg
pushf
sub
pop
scas
xor
pop
cwtl
jl
fucomi
aaa
dec
pop
and
cltd
es
mov
mov
in
dec
xor
mov
mov
lret
les
sub
pop
stos
inc
sahf
test
lods
sarl
pop
cld
outsb
jl
lcall
insl
and
inc
fdivl
in
xor
enter
push
dec
cmc
mov
xchg
test
aad
leave
cmpsl
sbb
mov
fnstenv
or
sub
cmp
daa
pop
not
or
sub
popf
decl
cmpsb
inc
enter
lret
mov
push
sub
push
test
push
xchg
gs
mov
pop
jl
icebp
sbb
into
jl
mov
js
fsubrs
cmp
mov
mov
pop
jp
mov
mov
call
cmc
popa
cs
repnz
mov
dec
cmpsb
push
jge
push
ds
cmp
jecxz
or
push
add
outsl
add
mov
xchg
mov
lret
cmpl
xorb
mov
ja
js
adc
jo
andb
loop
popa
das
mov
stos
loop
xlat
cmp
aam
inc
mov
std
push
mov
xor
add
out
pop
iret
add
cmp
clc
mov
or
mov
sub
lcall
movsb
mov
mov
and
insb
test
out
jg
jnp
int3
sub
in
repz
leave
pop
outsb
adc
pop
push
dec
repz
mov
jle
addr16
pushw
inc
leave
mov
idiv
repnz
sub
xor
out
fisttpll
sbb
pop
sbb
sub
xorb
cmp
mov
clc
aam
loope
pop
inc
adc
pop
mov
cwtl
imul
cld
sbb
adc
jmp
add
sbb
pop
out
mov
imul
test
cmpsb
out
popa
imul
mov
insb
ljmp
mov
shrb
mov
push
push
fld
xor
pop
rcll
mov
sti
dec
insb
or
sub
mov
push
mov
pop
push
lods
lea
xorl
xor
mov
dec
sub
mov
add
mov
adc
pop
jae
call
filds
jb
scas
es
mov
shll
cmp
movsb
pop
or
pop
jno
addr16
or
scas
addr16
sub
jp
ja
and
jb
ljmp
cmc
cmp
loopne
pop
sahf
mov
pop
adc
ss
and
push
pop
mov
add
mov
or
outsl
mov
outsb
sub
pop
test
rcrl
insb
jg
inc
icebp
mulb
cmp
dec
mov
add
mov
lock
mov
shl
lret
fimull
and
push
mov
and
stos
iret
pop
and
add
inc
fcompl
int
jmp
hlt
loop
leave
mov
rol
popf
or
nop
sbb
xchg
push
ret
es
fisubrs
daa
andl
push
sub
dec
sbb
in
push
popf
cmp
ss
or
andl
pop
out
data16
sbb
cmpsl
xor
jecxz
pop
mov
cmp
ss
inc
mov
outsb
dec
ljmp
cli
stos
mov
outsb
inc
jns
ljmp
iret
in
mov
iret
ret
pop
mov
pop
imul
andl
push
xchg
sbb
sbb
lods
push
sub
mov
sbbb
xchg
ss
int3
dec
sbb
add
mov
inc
int
jp
dec
out
pop
sub
jmp
inc
mov
push
push
sbb
js
jns
adc
mov
push
nop
scas
sahf
push
divl
xor
lea
mov
fdivr
test
xchg
jns
std
push
jae
mov
insl
and
push
in
stc
dec
inc
mov
push
mov
sub
xchg
fdiv
or
inc
sbb
rolb
test
fmuls
push
xchg
dec
or
push
sub
dec
push
sub
and
pop
sub
push
xchg
sub
imul
or
subb
pop
dec
test
mov
cmpl
mov
dec
loopne
xchg
in
inc
adc
lret
fbld
nopl
push
jbe
bound
pop
jl
repnz
loopne
pop
mov
xor
mov
xor
lds
cmp
inc
sub
and
icebp
mov
imul
dec
je
popf
cmc
xor
mov
mov
dec
out
cmp
sti
sahf
je
lods
aam
fcmovnu
sahf
jo
mov
ret
popa
cmp
incb
ljmp
std
dec
mov
add
cltd
call
orb
dec
xchg
inc
das
pop
testb
mov
ret
mov
adc
cld
cwtl
shll
xchg
int
int3
je
clc
jmp
in
ret
push
jo
sbb
inc
das
lcall
mov
pop
pop
push
cld
xchg
xchg
sbb
jnp
out
cmp
and
loope,pt
shlb
inc
pop
stos
cmp
in
jp
push
notb
movsb
scas
push
loope
and
xor
ss
add
cld
sbb
push
inc
cltd
inc
loope
fisubrl
aam
dec
test
pushl
insb
popa
inc
repz
dec
xlat
push
inc
nop
push
mov
lcall
data16
or
adc
mov
punpckhdq
adc
loope
iret
enter
mov
das
lods
outsl
lahf
mov
adc
xor
add
ja
inc
lahf
adc
mov
inc
fsts
cmp
dec
adc
jmp
add
int
clc
push
out
push
test
out
inc
xchg
pop
push
ret
sbb
dec
jp
adc
inc
adc
movsb
imul
fcoms
lea
repnz
orl
add
in
jl
mov
xchg
mov
sub
push
add
adc
add
out
loopne
je
cld
arpl
lods
ja
jecxz
push
test
outsl
pop
mov
push
mov
add
add
pushf
sub
dec
push
pop
jecxz
add
xchg
push
xor
push
mov
push
es
add
test
xlat
sub
imul
stos
scas
ljmp
lea
aas
fbld
xor
mov
sub
jp
inc
lcall
sub
sub
or
and
add
into
add
add
xchg
xchg
xor
aaa
jp
sbb
dec
popa
mov
fsts
push
inc
xchg
xchg
test
nop
dec
push
cmpl
cltd
in
lods
sub
push
aaa
jg
pushl
mov
mov
mov
push
jl
imul
imull
xor
clc
cmpl
ss
cmp
add
test
push
push
out
test
das
jb
lea
and
lret
mov
sbb
out
insb
repz
repnz
ss
insl
sub
rcl
lods
aad
jno
xor
xor
lds
mov
dec
das
jg
jnp
cmp
in
xor
bound
pop
lods
cwtl
cmpsb
add
rorl
sbbl
loopne
sub
aaa
xchg
add
inc
cltd
out
lcall
mov
push
mov
mov
xchg
divb
adc
pop
pushf
push
inc
xor
pusha
out
fcoml
mov
addr16
xchg
mov
imul
mov
lcall
ret
mov
mov
and
jge
lea
fbld
add
bnd
aas
addr16
sub
rorl
xchg
lods
insl
inc
mov
les
mov
popa
jle
out
xchg
dec
icebp
outsb
lcall
lret
lods
and
xor
fnstsw
bound
gs
mov
push
mov
sbb
or
out
xor
jo
movsb
add
clc
test
push
pushf
inc
pushw
leave
and
ret
cmp
xor
xlat
dec
data16
sub
adc
xchg
and
ja
jge
mov
push
xor
inc
dec
pop
movsl
push
arpl
jecxz
fsub
adc
sbb
push
jg
xchg
mov
dec
or
cmc
std
fwait
into
or
in
insb
out
mov
sti
gs
mov
shlb
incb
xor
add
popf
inc
dec
test
repz
sarb
mov
jmp
jb
pop
cmp
pop
mov
ficomps
pop
imul
mov
call
in
add
je
mov
jmp
sbb
push
rorl
push
and
xchg
pushf
jle,pn
daa
and
dec
movsb
mov
pop
jo
jnp
loope
adc
jl
sti
dec
or
scas
mov
dec
repz
xor
push
ficomps
inc
jl
fcompl
mov
stos
xchg
mov
pushf
ret
jnp
stos
mov
loope
mov
lcall
cs
int3
pop
push
test
cwtl
arpl
lods
popa
lods
jl
xor
cltd
mov
xlat
or
push
push
ds
mov
pop
xor
mov
xor
clc
dec
ret
jl
mov
push
lods
adc
xor
rclb
cmp
testl
cwtl
lcall
test
push
and
xchg
mov
xchg
xor
inc
mov
pusha
pop
xchg
insl
push
shrl
push
out
adc
scas
addr16
add
push
sub
jecxz
scas
repnz
add
xchg
mov
int
mov
out
xchg
mov
aas
hlt
dec
adcb
imulb
push
add
sub
ret
cmc
add
shl
dec
pop
push
subl
pop
xor
xor
inc
insb
xor
lret
inc
inc
jge
out
insb
mov
insb
dec
cmp
xchg
scas
js
dec
ret
clc
mov
sub
mov
pop
xchg
add
push
sub
cmp
aam
mov
xchg
push
outsl
or
std
imul
jmp
xchg
mov
push
add
and
jmp
mov
mov
loopne
sti
repz
mov
xor
js
mov
mov
sar
in
cltd
jbe
mov
rorl
mov
loop
cmpsl
push
ljmp
push
das
out
and
insb
xor
push
aad
xor
imul
sub
lods
pop
mov
jae
mov
xor
fisubl
imul
push
push
cmp
aam
push
loopne
jg
lods
test
cld
cmp
cmp
in
push
cltd
mov
out
pop
and
out
sub
lret
ss
into
adc
mov
pop
stos
ret
stos
push
es
call
popf
pop
jl
mov
xchg
fs
arpl
fistl
in
mov
cmpsb
xchg
fwait
mov
xor
shr
sbb
xchg
jbe
mov
aas
and
clc
sbb
jg
test
push
out
shlb
pop
xor
mov
rolb
fcomps
fwait
popa
pop
outsb
addb
sub
rcl
lret
xor
push
fiaddl
in
std
loope
cmp
pop
add
cwtl
jecxz
mov
sbbb
or
ds
into
out
movsl
lret
rcl
push
mov
jne
insb
jmp
insb
mov
divb
inc
mov
fdivr
pop
push
adc
das
xor
and
out
insl
jmp
push
add
jmp
es
je
in
das
xor
in
subb
aad
insl
push
push
mov
fwait
and
test
xchg
dec
lds
adc
js
jae
dec
cmc
icebp
daa
into
sti
ficoms
push
jge
xchg
xor
sub
sbb
pusha
lea
or
push
leave
sbb
push
xchg
in
iret
cmp
aas
subb
shl
insl
es
adc
adc
push
in
cld
or
push
scas
lods
dec
cmc
movsl
or
fsubp
xchg
addr16
inc
add
daa
mov
cmp
cmp
ja
push
sti
push
lods
add
les
inc
mov
pop
mov
test
pop
sub
jbe
sub
adc
sahf
cmc
mov
and
mov
xchg
add
ljmp
cmpsb
cltd
mov
test
test
sub
js
scas
cs
sbb
clc
lock
stc
data16
jo
pop
adc
cmp
repnz
xor
pop
rcrb
mov
xor
movsb
in
inc
or
pop
icebp
rclb
inc
ljmp
loopne
nop
loop
and
loopne
sub
dec
adc
into
daa
push
js
lea
jnp
jge
jmp
adc
xchg
push
push
fs
xchg
hlt
mov
mov
and
jle
sub
dec
xor
loope
out
mov
ror
popa
ror
popa
orb
fsubl
sub
pop
sub
fisttpll
lahf
ja
ja
pop
enter
mov
and
lods
jne
sbb
sbb
push
int3
in
rol
push
bound
loope
inc
inc
pop
int
int3
push
sbb
test
sbb
loop
xor
mov
mov
sub
mov
test
aas
jmp
cmp
push
sub
add
inc
xchg
clc
pop
arpl
sub
cmp
cmp
mov
iret
ret
push
lea
sub
jge
loopne
out
stc
js
ja
xor
rol
jns
insb
xor
or
outsl
cmp
mov
adc
js
sub
push
xchg
push
jecxz
shrl
sbb
and
out
ja
movsb
inc
xor
dec
xor
mov
xchg
dec
xchg
data16
lahf
or
cmpsb
clc
imul
sub
stos
and
sbb
int
lahf
aam
out
and
scas
lds
int3
ret
push
push
inc
lods
mov
popf
inc
dec
filds
mov
dec
es
xchg
and
repnz
fs
fnstenv
sbb
test
mov
dec
inc
lea
lods
sbb
movsb
and
adc
cli
imul
jmp
cmp
stos
inc
sbb
out
push
inc
jle
push
in
loope
arpl
xchg
mov
int
pop
mov
xor
or
xchg
and
push
lea
xor
movsb
mov
ds
mov
repnz
sbb
inc
pop
lcall
mov
enter
sbb
roll
mov
jg
and
cmp
imulb
test
fdivs
jg
inc
inc
jb
lea
xchg
aaa
lea
adc
mov
mov
aaa
das
mov
scas
and
lret
test
mov
cmp
loop
repnz
es
cmp
pop
daa
add
fldt
arpl
jae
pop
popf
ret
push
repz
cmpsl
in
fldt
das
leave
jp
scas
or
push
xlat
pop
and
and
xor
jbe
or
push
mov
cs
leave
inc
movb
fstpl
push
or
mov
or
cmp
in
je
and
push
push
ja
mul
lcall
or
dec
icebp
jo
pop
repz
add
out
push
je
repnz
insl
lahf
aad
sub
inc
or
xchg
pop
and
lods
dec
movsl
mov
adc
dec
mov
jbe
xor
mov
jno
icebp
xor
fwait
mov
sub
adc
mov
mov
mov
into
scas
xor
mov
or
stc
rolb
xchg
cld
add
lds
cmc
mov
cld
xchg
outsl
sub
xor
sbb
out
push
mov
rol
out
test
aam
popa
je
test
jecxz
stc
mov
cmpb
jb
pop
ds
mov
ret
outsl
mov
sub
xor
push
je
mov
pop
jg
mov
jbe
jl
lea
add
ret
xchg
jle
lods
notb
inc
inc
dec
rolb
sub
std
mov
cltd
mov
jg
icebp
pushf
test
daa
sub
adc
mov
fstl
cld
mov
insl
inc
leave
js
filds
cwtl
sbb
adc
imul
xor
and
add
mov
out
pop
or
xor
xor
aam
mov
xchg
xor
sarb
cmpsb
pushl
fdivrl
mov
fiaddl
cld
push
cmc
cmpsb
outsb
jge
mov
mov
out
nop
jmp
gs
fidivrs
into
mov
in
in
cmc
notb
inc
cld
std
or
popa
std
cmp
out
repz
cmp
std
jb
int3
movsl
push
add
xor
inc
stc
and
das
inc
ret
add
int
cmp
daa
loop
push
repnz
inc
mov
push
std
loop
pop
pushf
mov
jl
or
sub
xor
sub
sub
push
jb
js
test
dec
jle
jo
xor
cmp
loope
mov
pop
scas
cmp
or
mov
dec
mov
test
mov
add
fucomip
test
mov
imul
mov
daa
adc
cmp
fisttpll
sub
inc
dec
xchg
fs
xchg
dec
xchg
xor
and
inc
ljmpw
add
shrl
mov
inc
mov
clc
test
cmp
sahf
sahf
loope
cld
shlb
jle
push
jo
push
pop
mov
rol
jns
in
jp
out
out
cmc
lea
mov
jns
push
orl
cwtl
cmp
mov
or
pop
pushf
stos
fidivrl
lds
iret
push
ljmp
divb
lcall
jl
inc
inc
pop
mov
das
rorb
clc
inc
aam
add
xchg
xchg
cmc
aad
pop
lock
aam
cmp
movsb
mov
leave
imul
xchg
cmpsb
stos
xchg
ja
dec
push
adc
cmp
or
cmp
rcll
xor
cltd
cmp
inc
mov
aaa
push
pop
out
pop
mov
or
sbbb
cmp
mov
iret
test
sahf
sahf
sub
lret
xchg
rcrb
in
sahf
clc
adc
insb
loopne
mov
adc
inc
inc
pop
push
in
popa
leave
sbb
xchg
jecxz
lahf
in
push
mov
jno
call
pop
pop
push
inc
subl
scas
dec
dec
cmc
xchg
int3
dec
and
add
sbb
subl
mov
mov
aas
add
repnz
inc
test
jns
mov
arpl
push
cmp
ret
mov
mov
mov
mov
mov
bound
outsb
sbb
inc
insb
pop
stc
add
icebp
sbb
xchg
ja
push
cwtl
and
dec
ret
or
dec
hlt
ret
adc
or
mov
pop
ficomps
push
shll
stc
inc
ss
ljmp
in
add
out
pop
lret
or
idiv
cmpsb
push
mov
movsb
mov
and
leave
ja
sbb
outsb
push
mov
aas
pop
ffree
push
mov
stos
sub
push
sub
jnp
or
in
inc
add
loop
add
push
mov
out
mov
push
call
sbb
leave
mov
mov
inc
dec
scas
xor
sbb
cld
test
xchg
cmp
pop
out
cmp
adc
push
jmp
and
pop
loop
flds
sub
adc
lcall
pop
pop
push
nop
sbb
mov
xlat
mov
es
fmuls
scas
ljmp
imul
sti
mov
xlat
xor
mov
cmpsl
lods
xor
and
adc
jecxz
push
out
inc
xchg
pop
sub
divb
test
arpl
into
adc
fcomps
mov
mov
sub
jmp
xor
nop
xchg
and
sub
xchg
dec
add
fsubrs
jb
and
int3
adc
mov
test
and
dec
mov
add
iret
pop
bound
and
dec
ja
xchg
in
fmull
outsl
out
push
jb
mov
test
fs
inc
rolb
jnp
or
pmulhw
jge
loopne
and
xor
cmp
pop
fiadds
sbb
fwait
push
cli
push
mov
dec
inc
cmp
jl
ds
add
sub
sub
scas
in
push
aad
inc
mov
not
mov
pop
push
sub
jnp
xlat
xchg
mov
mov
ds
fiaddl
add
orl
fsubs
pop
imul
dec
jne
in
outsl
mov
repz
adc
sbbl
add
in
mov
inc
mov
add
mov
shl
ja
push
or
and
and
jg
xchg
fbld
sbb
sarb
bswap
fmul
mov
add
ja
mov
xor
push
sbb
mov
fadd
ds
add
fsubrs
out
jae
or
mov
lds
or
test
movsb
add
cmp
rcrl
and
or
or
daa
ret
outsl
sbb
mov
out
mov
in
or
inc
push
sbb
fldcw
rcrl
pop
hlt
icebp
shrb
dec
xchg
call
mov
cmp
ret
aaa
cs
inc
lret
pop
out
xchg
xchg
mov
hlt
movsl
into
mov
cwtl
mov
mov
add
ljmp
or
mov
push
jb
sarb
inc
jo
jae
pop
add
lret
mov
hlt
inc
shrb
rolb
cmp
cmpb
rcrl
pop
add
push
dec
push
inc
dec
loope
cwtl
sub
sbb
movsl
sub
int3
sub
mov
movsb
mov
shrb
fcomi
sbbl
mov
inc
and
test
es
push
pop
add
fcomi
jo
pop
lds
psrld
push
cli
stos
ja
addr16
sarb
inc
adc
add
mov
fsubrs
scas
mov
pop
and
jo
and
and
cmp
pop
inc
and
mov
cmp
call
out
jno
mov
repz
cmpsb
sbb
mov
mov
stos
adc
and
xor
lcall
enter
gs
jne
out
sti
popa
push
push
lcall
mov
or
in
jecxz
inc
rorl
les
dec
jmp
push
aad
or
lods
std
out
xchg
cltd
into
and
stc
ss
subl
or
leave
cli
pop
pop
push
dec
iret
xchg
push
aam
push
push
push
pop
cwtl
int
mov
sbb
mov
jg
cmp
mov
mov
mov
mov
inc
movsl
insb
push
rcrb
pop
js
test
lcall
stos
dec
lcall
shl
icebp
xchg
jne
fisttpl
outsl
inc
or
call
push
aad
push
rcrl
cld
pop
cmp
add
fimull
scas
es
stc
ds
fbld
cwtl
insb
add
rclb
sbb
flds
jmp
inc
xchg
lret
je
ret
pop
sbb
jp
insb
or
insl
xchg
nop
daa
push
xor
push
mov
and
sbb
sub
xchg
lret
jo
add
push
inc
add
pop
int
popa
ret
push
jl
xor
push
pop
or
mull
jb
addr16
add
mov
lock
inc
pop
and
inc
fisttps
xchg
cmp
es
jg
adc
insl
in
in
mov
lods
movd
loopne
scas
lret
rcr
clc
jge
xchg
push
fwait
imul
jnp
xor
and
xor
test
inc
in
push
xchg
cmp
add
mov
xchg
daa
movsl
push
in
mov
fdivrl
lea
mov
xchg
idivl
adc
jge
aas
dec
dec
shrl
push
cltd
cmp
and
mov
fninit
shll
test
add
ret
les
rol
sub
test
or
fistpll
push
hlt
mov
lock
sbb
movb
ljmp
call
add
and
fwait
xchg
loope
data16
sub
pop
cmp
in
mov
push
mov
pushf
mov
add
mov
inc
adc
pop
sbb
xchg
lea
lcall
jle
shll
aaa
lretw
shlb
arpl
mov
mov
ljmp
or
rcr
sbb
arpl
fmull
push
pop
inc
imulb
int3
std
pop
cmpsl
andb
bswap
cs
mov
and
cmpl
cmp
sub
mov
xor
sbb
sub
xor
dec
ja
int3
ds
lahf
int3
das
xor
imul
shrb
mov
aas
je
out
mov
mov
sahf
enter
es
inc
jmp
mov
test
sub
xchg
and
in
push
dec
lds
and
in
cltd
xor
stc
add
fs
loopne
idiv
scas
fsubl
cmp
dec
dec
add
pushf
inc
dec
push
stos
call
inc
hlt
adc
fwait
push
and
cmpsb
imul
xor
adc
aaa
cmc
mov
or
adc
inc
aas
mov
xchg
cltd
sbb
rolb
enter
sub
inc
mov
sbb
icebp
push
jae
pop
hlt
mov
push
sub
xchg
ljmp
lret
sbb
jl
in
sub
out
out
lcall
popf
pop
mov
jne
lods
push
add
mov
pop
lock
std
mov
dec
sti
orl
sbb
mov
or
pop
int3
xchg
insb
je
mov
xchg
loop
dec
clc
add
addr16
imul
add
and
inc
es
ret
jmp
sti
out
push
cmc
push
lock
int
in
pop
jno
xchg
cmp
stos
cmp
xchg
fstl
mov
jecxz
fcoml
push
test
cmpsb
or
push
aad
push
jne
loope
inc
sti
push
mov
xchg
xor
cs
sub
cwtl
mov
scas
out
into
jecxz
popa
xchg
xor
xchg
out
pop
or
lcall
int3
jne
and
jmp
jno
xchg
out
popf
int3
clc
ss
fwait
jae
mov
sbbb
shrl
das
mov
xchg
in
inc
pop
call
pop
mov
fcoml
mov
cmp
bts
out
iret
outsb
and
ljmp
movsl
divb
push
inc
or
outsb
xor
into
imul
sti
sub
rcll
sbb
push
lea
loope
and
ffreep
cld
xor
movsl
popa
pop
xchg
and
jg
es
xchg
test
jecxz
mov
pushf
xlat
rcrb
pop
mov
or
inc
and
xlat
lret
adc
mov
fsubs
sub
and
jle
adc
pop
addr16
mov
pop
push
lds
cmp
lret
cmc
mov
jle
xchg
mov
das
paddusb
addb
mov
jg
push
jne
adc
sti
mov
push
mov
int3
inc
cmc
adc
inc
xchg
dec
pop
gs
mov
cmp
jge
and
fsubr
shll
push
or
add
imul
cld
pop
aas
cmp
mov
mov
data16
or
ds
sbb
fdivrs
int3
and
mov
ljmp
mov
fimull
or
sbb
fmul
add
repz
xor
out
sti
cli
or
movsl
jmp
or
aaa
xchg
fs
cmpsb
mov
insl
movsb
inc
std
mov
and
bound
fmuls
inc
mov
xchg
push
and
out
lock
push
sbb
inc
mov
subb
loop
lea
lret
xor
adc
mov
stos
cwtl
push
cmpb
repnz
jbe
insb
test
cs
pop
fmuls
and
and
jb
scas
pop
mov
jnp
sub
add
retw
cmp
add
imul
aas
push
cmpsl
mov
in
xor
sbbl
daa
mov
stos
jmp
and
mov
push
test
int
loop
or
sbb
js
mov
stos
inc
jecxz
shll
xchg
gs
push
xchg
icebp
sub
or
lret
hlt
std
enter
dec
jg
scas
pushf
add
out
and
into
lret
pusha
cltd
setb
fsubl
push
lock
pop
xchg
push
and
jno
sbb
or
je
inc
stos
lahf
cmp
out
sub
xor
sub
mov
int
lahf
lods
notl
sub
loop
pop
jge
hlt
je
pusha
ja
out
dec
fadd
jecxz
and
mov
lods
add
outsb
and
insl
cld
scas
ret
imul
jbe
adc
lods
sub
popa
lea
ljmp
pop
daa
mov
jecxz
inc
cmp
lods
movsb
inc
sahf
repnz
adc
stc
arpl
enter
mov
pop
aaa
cld
and
sarb
lock
or
fnstenv
test
jmp
loope
cmpsb
jns
in
stos
push
mov
push
or
adcb
push
sub
call
fcmovne
cmp
inc
enter
aam
ret
jmpw
pushf
rolb
mov
pusha
jae
mov
or
daa
pop
xchg
pop
shll
and
cmp
push
xchg
repnz
push
fs
and
mov
xchg
xchg
cmp
mov
test
push
cli
push
sbb
sbb
je
daa
roll
ljmp
or
xor
pop
stos
shlb
xchg
xor
in
je
negl
iret
test
cmp
mov
and
outsl
jecxz
jb
lds
jns
xchg
inc
cltd
lods
push
rorl
setge
scas
in
mov
push
push
jnp
push
ficoms
pop
cmp
push
xor
cs
jecxz
rcrl
ds
fiaddl
fwait
sub
enter
lods
pop
adc
or
mov
stc
pop
add
pop
inc
sbb
jmp
minps
or
scas
out
push
sbb
lahf
lea
push
sub
pop
pop
outsl
pop
int
imul
xchg
pop
cltd
jb
mov
add
icebp
xchg
inc
mov
dec
scas
and
adc
lock
adc
xchg
push
ljmp
sub
jle
sub
inc
push
rcr
mov
lea
jo
loop
push
adc
xchg
push
cltd
mov
sbb
notb
clc
leave
or
aam
movsb
dec
mov
sub
sbbl
xor
push
cltd
sub
or
cmp
test
js
mov
xchg
pushf
in
cmp
into
sub
and
movsb
ds
fstps
movsb
insb
call
out
shlb
or
jl
adc
add
test
mov
js
fcmovnu
loope
jg
stos
pop
mov
cs
repz
lret
push
popa
sti
sbb
ret
mov
mov
and
jnp
popf
lahf
icebp
jle
mov
cmpsl
mov
pop
pusha
sbb
pop
test
je
pop
and
scas
scas
stos
stos
int3
push
pop
dec
inc
xor
stos
jmp
mov
out
in
ficompl
adcl
std
rclb
daa
mov
fildll
lcall
mov
shlb
gs
add
cli
jle
insl
das
dec
mov
shl
jecxz
je
adc
add
sub
sbbl
ja
leave
lret
push
rclb
cltd
hlt
fwait
loope
xchg
pop
mov
adc
out
je
and
cmp
outsl
fadd
and
jmp
lcall
mov
sbb
or
adc
mov
shrb
es
test
loopne
sub
xchg
add
push
in
jmp
or
sbb
mov
sbb
cmpsl
popa
jns
or
push
dec
or
xlat
sahf
das
testl
inc
pop
fildl
xchg
mov
sti
test
sbb
push
cmpsl
cmpsb
dec
xchg
jmp
mov
enter
adc
sarl
inc
icebp
fnsave
push
cmp
out
ds
mov
clc
fs
inc
lret
repnz
mov
dec
xor
fnstcw
lahf
inc
aam
jp
adc
adc
sbb
cmc
imul
jb
jbe
rcrb
push
int
mov
cmp
daa
leave
sub
cmp
inc
add
inc
add
jl
jge
xchg
push
sbb
and
xor
lret
gs
loope
add
mov
cwtl
add
aam
imul
inc
lcall
push
inc
test
insb
int
in
lret
fcoml
stos
popf
ficoml
enter
cmp
mov
inc
loopne
sbb
mov
pop
adc
jecxz
cld
sub
mov
stos
dec
in
push
mov
test
push
mov
dec
sub
add
test
incl
std
lods
pop
mov
pop
addb
push
imul
push
sahf
jp
and
adc
out
jnp
adc
mov
add
loopne
mov
test
add
inc
into
sub
add
or
or
add
mulb
gs
jns
jg
push
in
adc
adc
adc
and
gs
ds
or
test
shll
jae
inc
pushf
mov
xchg
jae
mov
adcl
add
xor
pusha
leave
push
mov
xor
dec
pushf
sub
sub
outsb
pop
mov
int3
or
movb
cmp
paddd
idivb
add
je
cmpsb
in
add
cmc
push
int
xor
ss
iret
movsb
loop
mov
adc
dec
arpl
sar
mov
imul
mov
addr16
clc
adc
int3
jns
mov
clc
inc
mov
loope
add
jbe
cmovp
fwait
pop
fwait
mov
adc
cli
inc
mov
cmpsb
or
push
or
mulb
cmp
in
sarl
jp
pop
jae
dec
imul
outsl
cmp
push
lock
mov
out
dec
push
cltd
xchg
cmp
jne
dec
or
out
mov
lret
imul
or
and
stos
ror
movsb
jmp
dec
push
add
cltd
add
or
pushf
loop
frstor
sub
sbb
cmpsb
cmc
stc
fistl
scas
ja
pop
bound
loop
adc
push
call
mov
jl
xorb
mov
test
sbb
xlat
lcall
mov
inc
cli
adc
cli
xchg
insb
jmp
insb
cmc
testl
pop
icebp
je
sarb
adc
arpl
int3
mov
xor
and
cwtl
lret
add
cmp
adc
jecxz
loope
pusha
pop
xlat
sub
in
lods
imul
outsl
scas
test
lea
adc
mov
cltd
push
sbb
mov
xlat
mov
insb
jno
push
dec
push
ret
sahf
ret
mov
add
adc
pop
sbb
pop
fildl
add
lahf
stc
cvtdq2ps
push
mov
in
data16
mov
cmpl
popf
xor
popf
push
sub
cld
adc
das
mov
fwait
mov
clc
fs
shll
mov
xchg
push
cmp
leave
dec
push
or
fcoml
hlt
imul
mov
dec
nop
dec
adc
out
ffree
cs
xor
cld
xor
cs
mov
cmpl
ret
lea
lahf
mov
ljmp
stos
das
pushf
push
shlb
mov
roll
xlat
cmp
andl
xor
arpl
lds
addr16
pop
xchg
rorb
or
int
movsb
inc
insl
pop
jp
mov
popa
lock
insl
push
or
push
mov
push
enter
and
lods
in
xor
cmp
xchg
jge
in
sub
hlt
fs
mov
lcall
jno
jne
repz
pushf
xchg
loop
subl
sti
push
sarl
negl
out
mov
repz
and
cmpsb
repz
push
orb
test
pop
mov
pop
mov
mov
xchg
inc
push
sahf
inc
or
cmp
lock
fildll
je
pop
add
mov
pop
xchg
push
les
jnp
jl
frstor
mulb
mov
pop
movsb
jb
and
xor
pop
jecxz
jbe
mov
push
inc
lahf
pop
adc
fbstp
or
mov
cmp
xchg
enter
fs
xchg
lret
cli
aas
adc
int3
popa
aad
ss
sbb
enter
xor
addb
shlb
pusha
shll
mov
and
lods
push
inc
add
adc
and
inc
movsl
add
mov
cmp
insb
iret
call
adc
lds
popa
stos
mov
je
in
xor
loop
lds
rcll
jb
movb
hlt
shrb
repz
add
std
in
inc
mov
push
ret
nop
or
mov
xlat
mov
xor
loop
insl
lods
rorl
mov
imul
out
insb
mov
movhps
hlt
mov
jae
and
or
bound
cmpsl
or
xlat
mov
jecxz
lea
out
xchg
out
clc
repz
cs
mov
lcall
lret
mov
das
lods
das
push
sbb
rol
jg
xor
aaa
push
mov
out
stos
sbb
les
push
and
and
push
mov
jo
imul
mov
cmp
cmp
pushf
pop
and
outsb
lock
scas
mov
enter
push
xor
mov
xor
movsl
lcall
jb
xor
mov
loopne
cmp
adc
push
inc
aad
cmp
paddw
push
je
out
sub
sub
int
sbb
mov
call
out
pop
bound
arpl
fwait
mov
movsl
and
clc
mov
mov
jns
lock
ds
scas
test
inc
fisttpll
xor
aam
pop
inc
xor
dec
mov
dec
icebp
add
mov
out
mull
mov
popf
insl
cwtl
repnz
jne
bound
jae
push
mov
sahf
jo
movsb
xor
ret
aad
pusha
dec
shll
in
sahf
jb
nop
cmpsb
arpl
pop
mov
pop
mov
and
lds
inc
mov
in
xchg
push
fs
out
leave
dec
cwtl
cmp
sti
leave
repnz
scas
jbe
rcll
cwtl
lret
ja
cmp
std
cmc
mov
js
cltd
mov
xor
mov
and
inc
adc
or
inc
adcl
lock
push
fwait
mov
or
jl
fsts
fnsave
cwtl
ret
sub
hlt
dec
xor
stos
movsl
pushf
dec
out
jg
cli
xchg
mov
roll
xchg
xor
sub
sahf
sub
mov
mov
xchg
fistpll
cmpl
push
lods
jg
pop
negb
dec
xor
fisttpll
fidivrs
dec
ljmp
push
xor
pop
sub
lea
std
dec
enter
xchg
gs
aaa
sub
ss
es
dec
imull
sub
test
inc
mov
fdivs
or
cmp
push
sti
test
inc
or
jp
movsb
push
out
idiv
mov
pop
ret
enter
aam
lods
aad
loope
lret
das
xchg
mov
test
xchg
mov
mov
xchg
jle
or
js
aam
outsl
out
call
ss
push
sbb
sub
jge
adc
xchg
rolb
mov
lods
fidivs
dec
mov
push
or
fcompl
ds
sub
jb
inc
sbb
and
out
xor
xor
faddl
sub
mov
add
in
inc
daa
jg
dec
xchg
inc
sub
cld
xor
test
pop
je
fadds
repnz
and
sbb
inc
cvtps2pi
loop
shlb
push
and
pop
into
pop
or
int
lret
jbe
mov
out
mov
inc
add
cmp
adc
xor
or
sub
mov
sbb
and
xor
mov
test
sbb
xlat
pop
gs
sub
mov
lahf
out
xor
mov
jmp
popaw
shr
push
inc
xchg
sbb
iret
mov
adc
aas
sbb
rcl
mov
popf
stos
sbb
push
aam
pusha
xor
mov
test
cmp
push
cmp
pop
out
lcall
hlt
xchg
xchg
daa
repz
cmp
push
and
loope
shlb
mov
push
mov
imul
aas
xchg
stos
fwait
test
rol
xor
pop
scas
mov
fstl
mov
xchg
rclb
movsl
arpl
call
sahf
jmp
jnp
popf
mov
in
pusha
stc
popa
dec
repnz
ja
stc
xchg
out
xor
out
out
mov
stc
cwtl
inc
je
dec
inc
popf
aas
mov
leave
cli
jge
adc
jb
shl
int3
mov
cmpsl
or
stos
jbe
adc
ljmp
aaa
test
cmp
pop
out
jecxz
aaa
inc
daa
sub
nop
push
fnstsw
jl
imul
lretw
imul
loope
enter
orb
xchg
pusha
loopne
mov
xor
mov
and
in
or
mov
insb
loope
cmp
push
inc
clc
push
loope
sub
xor
hlt
and
and
mov
jge
js
pop
pop
test
in
repz
fst
push
repnz
rclb
movsl
test
fldl
cmp
jmp
scas
sub
push
inc
xchg
push
mov
mov
dec
test
jmp
aam
xor
ja
adc
addr16
push
jecxz
xor
fistl
insl
repnz
push
lret
dec
loopne
xor
in
enter
jnp
pop
xchg
or
in
cmp
jge
xor
addr16
mov
pop
hlt
inc
outsl
lea
lods
dec
and
push
pop
loope
dec
test
jmp
and
push
sub
movsl
add
mov
popf
mov
pop
pop
mov
mov
xchg
movb
bound
sub
cmpl
cmp
loope
cmp
jo
add
pop
ds
mov
gs
mov
dec
sub
je
sub
sti
add
mov
test
lcall
out
ja
mov
or
lea
adc
cwtl
dec
fwait
pushl
les
insb
push
iret
loope
cmp
xchg
add
sbb
jne
imul
push
sbb
inc
push
xchg
loopne
xchg
sub
sub
in
xchg
mov
imul
add
mov
lahf
cmpl
xchg
lock
mov
push
mov
dec
aad
mov
push
cld
dec
fwait
pop
sar
adc
cmc
pop
pushf
insl
outsb
mov
leave
out
dec
sbb
ljmp
push
subb
loopne
add
ret
and
xor
inc
rcrb
mov
xor
lds
add
xlat
aam
jbe
out
loop
cli
mov
addr16
jle
and
out
jle
ljmp
sbb
mov
jmp
mov
add
xchg
cmp
push
cmp
xor
adc
mov
xor
testl
xchg
mov
and
mov
daa
sub
lds
aas
pusha
or
lods
mov
loopne
dec
mov
pop
jmp
cmp
ja
push
and
or
icebp
jmp
ficomps
and
mov
or
fisubl
jns
jo
int
repz
jns
jecxz
call
ss
leave
mov
inc
sub
push
in
inc
in
fisubl
push
test
dec
jno
push
push
call
and
cmpsb
cmpsb
adc
inc
xchg
or
in
mov
in
push
mov
test
repz
or
lret
inc
cmp
push
mov
cmpsb
jbe
outsb
push
push
lret
mov
lar
push
scas
jae
loopne
mov
mov
sbb
pop
jnp
cltd
lret
sbb
fdivs
cmc
dec
cwtl
int3
jnp
dec
push
push
dec
push
inc
repnz
mov
aaa
fdivs
sub
out
pop
adc
push
cmp
fdivrp
xchg
data16
imul
data16
pop
and
jmp
mov
cmp
sub
sbb
bswap
mov
xor
pop
test
lcall
sbb
cmp
out
xchg
icebp
aam
pop
jne
sub
sub
push
and
loop
inc
push
inc
dec
and
inc
adc
lds
inc
and
imul
jmp
je
inc
push
inc
sbb
jb
imul
bound
xchg
fcompl
pop
or
xor
push
inc
push
lahf
xchg
pop
mov
dec
mov
or
movsb
mov
cmp
test
sub
aam
add
jns
test
js
sub
adc
fsubp
cmp
gs
mov
mov
mov
ja
jle
test
daa
out
ss
pop
ficomps
loope
outsb
repnz
lahf
jb
dec
imul
sarb
loopne
jnp
icebp
iret
cmpsb
stc
jmp
mov
daa
push
sbb
cltd
fnstsw
push
stc
sbb
and
cwtl
cli
add
imul
cmp
loopne
cmp
jo
mov
adc
sub
inc
pop
mov
and
push
cmp
aad
inc
sbb
imull
jae
orl
orl
jecxz
cmpsl
inc
jmp
outsb
and
icebp
in
adc
je
add
mov
xor
cmp
popf
pop
popf
test
aam
movsb
cmpsb
stos
scas
sbb
mov
inc
and
push
mov
notb
push
xchg
outsb
cmpl
jmp
xchg
dec
push
mov
les
sbb
push
int3
mov
movsl
mov
jp
cmp
aas
lret
shl
das
cs
cmp
or
push
mov
sub
lret
popf
outsl
dec
pusha
cld
ret
mov
cwtl
xchg
cmp
adc
daa
aad
adc
orl
or
xor
subb
inc
xor
arpl
xor
and
aaa
test
jmp
dec
scas
xor
pusha
mov
int
lret
fldcw
sbbb
adc
jnp
mov
movsl
sub
out
xchg
fnstcw
ds
dec
pop
and
outsl
xchg
insl
mov
mov
lret
jmp
or
fwait
out
inc
mov
int3
daa
popf
and
or
mov
aam
sbb
add
and
add
inc
insb
fists
push
push
or
push
iret
in
push
out
out
sahf
fwait
test
pop
adc
sub
inc
pop
mov
push
sub
jle
cmp
fbstp
loopne
lcall
inc
notb
subb
push
cld
popa
cmp
jne
popa
repz
adc
out
sub
xor
repnz
sub
loope
xor
pop
pop
add
adc
ret
jbe
test
icebp
mov
jl
mov
add
mov
test
fiaddl
pop
mov
mov
ret
inc
or
jmp
nop
sti
lahf
cmc
mov
mov
lds
jno
adc
outsl
and
je
adc
push
jecxz
in
xchg
mov
mov
lret
fstpt
and
xor
nop
sub
xchg
xor
xchg
shr
out
xchg
lahf
insb
imul
push
cmc
lods
idiv
aad
pop
mov
add
and
bound
and
popf
test
push
mov
movsl
lcall
fisubrl
clc
fisttpl
cmp
jle
xor
out
mov
ret
pop
orl
mov
push
repnz
fucomip
aad
std
out
push
mov
es
lea
jne
jp
ja,pn
push
inc
movsl
addr16
sub
ljmp
mov
mov
add
jge
push
fmul
repz
lret
xor
xchg
scas
jnp
pusha
clc
mov
in
ret
sbb
dec
aaa
ljmp
mov
sbbl
jmp
xchg
rorb
sbb
inc
gs
or
push
nop
jle
mov
das
mov
mov
int3
ljmp
lret
mov
andl
xor
rdpmc
inc
and
push
inc
xor
lea
pop
popf
movsl
sub
sub
xchg
xor
out
inc
xchg
mov
mov
sti
lods
fcoml
sub
arpl
pop
dec
cwtl
jg
cltd
jno
inc
mov
hlt
stos
push
pushf
xor
mov
ss
jmp
add
sbb
fsubr
cmp
mov
adc
int
dec
gs
cmp
inc
or
cltd
xchg
out
mov
mov
stos
mov
lods
call
testl
push
add
movsl
rorb
lcall
jmp
jg
xchg
jno
scas
imul
stos
insl
pop
or
ret
mov
fnsave
imul
mov
pop
adc
mov
mov
std
xchg
loop
mov
js
and
in
cmp
dec
lret
pop
xchg
das
jle
adc
adc
pop
clc
lods
mov
mov
sub
rolb
mov
or
ss
cmp
pop
lret
or
dec
stos
mov
leave
insl
mov
sarb
cld
scas
mov
pop
pop
pushf
cmc
cmp
sub
and
imul
jge
cmp
add
lret
pop
pop
inc
rorl
call
mov
xchg
lods
mov
mov
aad
inc
mov
cmpsb
pop
inc
jns
ss
roll
jmp
jl
subl
push
add
xchg
inc
mov
mov
scas
xor
in
ret
jae
rolb
push
mov
idiv
sub
ret
add
lods
lret
jecxz
cmpsl
push
out
xchg
aas
xor
out
pop
aaa
mov
in
jge
sub
into
lea
push
ja
or
test
mull
adc
mov
push
pop
rcrb
pop
faddl
std
daa
xlat
dec
enter
mov
push
adc
mov
push
add
cmp
jae
leave
sub
add
xchg
outsb
xlat
pop
stc
adc
into
cmp
scas
js
xchg
add
repnz
lar
fs
out
jns
mov
fildll
and
mov
arpl
cwtl
dec
out
mov
push
lcall
shll
cltd
lds
inc
shlb
stc
std
push
jbe
daa
adc
scas
jl
mov
mov
inc
push
fwait
dec
lret
dec
cld
popa
pop
setae
je
adc
xchg
insl
mov
cmp
idivb
stos
test
adc
lcall
and
inc
mov
mov
adc
mov
sub
lock
lods
xor
cmp
add
adc
adc
stos
loop
add
inc
ret
pop
pop
adc
daa
and
xchg
mov
add
cmp
xor
out
arpl
dec
shrl
sti
add
and
aaa
adc
pushf
or
shr
mov
mov
adc
xchg
cmp
cltd
or
stc
inc
adc
gs
call
pop
mov
mov
mov
or
and
xor
xchg
mov
int3
jl
or
sti
aaa
jbe
xchg
adc
inc
in
push
xchg
add
pop
into
shlb
jno
push
sbb
daa
dec
sbb
daa
daa
rorb
int
popf
push
jge
push
les
pusha
sahf
mov
dec
cmp
dec
stc
inc
popa
dec
ret
mov
cld
pushf
mov
adc
xchg
mov
pop
cmp
sub
ja
sbb
lods
dec
int
sbbb
test
pop
push
push
jb
mov
cmpb
pop
es
push
in
icebp
xchg
int
js
shlb
adc
orb
lods
add
mov
movsl
mov
jle
adc
fildl
insl
inc
sbb
mov
xchg
adc
mov
hlt
shl
push
lret
xor
in
mov
sbb
icebp
and
cltd
and
inc
frstor
psrad
imul
lea
and
push
add
out
fwait
jo
daa
scas
popf
inc
sbb
cwtl
adc
and
pop
js
test
aas
push
scas
ret
scas
arpl
addr16
cltd
xor
in
add
or
xor
fcomi
mov
leave
xchg
cltd
arpl
mov
inc
cwtl
xchg
or
jl
movsb
sub
dec
inc
and
das
xchg
outsb
data16
bnd
insb
jecxz
mov
jmp
out
xlat
sub
jle
pop
cmp
in
push
nop
out
in
lods
pushl
arpl
daa
in
jmp
push
out
lret
mov
cmp
or
stos
or
sub
cmp
insl
test
repz
jecxz
out
jp
jmp
test
cmp
jp
jne
mov
out
bound
in
ss
or
or
adc
ret
sub
std
loope
insb
mov
aaa
pop
xchg
sub
in
pop
mov
cld
jle
and
sbb
and
xor
push
in
mov
imulb
std
ss
test
sarl
scas
mov
push
outsl
test
outsb
lock
or
inc
mov
rol
aad
loopne
popf
mov
fistpll
mov
xor
test
sub
dec
jo
iret
inc
sbb
popa
fsub
dec
mov
push
ds
xor
test
mov
sub
inc
sahf
jmp
mov
pop
add
add
push
js
push
push
and
pop
icebp
ljmp
jge
push
addl
dec
lds
pop
insl
rcr
jecxz
pop
pushf
xchg
or
sub
je
lods
adc
sbb
into
jnp
lahf
jmp
push
in
xor
aad
cli
pop
imul
in
sbb
lahf
vmovss
pop
fildll
adc
pop
sub
or
cmp
jnp
icebp
pop
std
push
jbe
xchg
cmc
ret
dec
cmp
mov
jae
mov
sahf
and
clc
in
xchg
adc
pop
mov
ss
pop
dec
cmpsb
xlat
cmp
dec
in
movsb
std
stos
jae
mov
in
je
loope
test
loope
pop
sbb
subb
fcom
stc
dec
addb
in
test
std
out
je
rcrb
pusha
int
aad
cwtl
cwtl
test
inc
push
xor
out
pop
lret
xchg
xchg
push
jge
fucomip
movb
aad
cli
push
mov
lods
xchg
jl
adc
mov
push
ja
push
orb
aad
cmpsl
fcoml
scas
inc
dec
xor
xor
jmp
xchg
jmp
into
mov
aas
push
gs
add
mov
cmp
rolb
fisubrs
jne
in
mov
adc
icebp
aaa
add
call
push
decl
xchg
fstps
add
push
pop
adc
sub
add
jnp
loop
mov
stc
pop
loopne
mov
jb
sahf
aaa
push
mov
mov
jnp
add
lods
in
sahf
adc
call
push
addr16
shlb
ljmp
and
cltd
jge
js
mov
xchg
push
jb
ja
ret
lahf
mov
imul
outsb
push
adc
cmp
pop
fdivl
pop
cmp
stos
add
push
sub
fucomip
mov
mov
cmp
pop
out
mov
sbb
fs
cltd
les
xchg
repz
lds
cmp
cmpsb
into
clc
out
outsb
out
sbb
loop
addr16
pop
fnstenv
cltd
cmpl
push
jecxz
xchg
hlt
push
clc
cltd
int
adc
mov
mov
frstor
negb
add
jne
xor
movsl
jg
xchg
imul
dec
ret
je
inc
lret
xchg
add
jae
or
mov
pop
imul
in
add
dec
fistpll
addl
aad
cmc
and
pushf
adc
fs
lock
sbb
rcrl
add
fwait
dec
rol
fnstenv
insb
pusha
xor
orl
lock
push
shll
sbb
cmc
ljmp
jmp
test
int
mov
push
xor
mov
test
pop
xchg
cmp
fidivs
mov
andb
adc
cmpsl
nop
cmpsl
pmulhw
jb
pop
mov
push
sub
cs
xchg
in
or
jge
inc
xchg
jo
push
test
xchg
fwait
movsb
loope
lods
scas
push
iret
rcrl
mov
xor
and
pop
sbb
jecxz
mov
lods
mov
mov
ret
inc
outsl
in
sub
gs
mov
xchg
daa
sub
sbb
mov
cli
je
test
icebp
cmpsl
and
scas
jo
and
mov
pop
jae
lcall
iret
popf
add
and
dec
ljmp
iret
push
pop
sub
jle
jmp
test
lds
inc
xor
inc
imul
push
stos
stc
imulb
stos
xchg
enter
ret
mov
mov
cli
dec
outsl
push
inc
mov
bound
lret
sub
sub
ficoml
fstl
jb
test
cmp
insl
xor
sbb
je
inc
and
jp
outsb
sahf
enter
cmp
dec
in
push
pop
sub
gs
rol
sbb
test
cld
rorl
into
cmp
push
in
xchg
les
mov
pop
shlb
rorl
add
lret
ljmp
mov
ja
shr
mov
pop
testb
dec
mov
xor
loopne
cmpsb
fidivl
lcall
cltd
dec
imul
sbb
aam
pop
aad
in
sti
mov
pushf
popa
xor
lock
push
cs
popa
insb
leave
jb
test
out
and
cmp
test
pop
pop
sbb
testb
or
adc
lock
pushf
inc
pop
xchg
mov
sub
jg
mov
xchg
mov
xor
mov
in
mov
dec
daa
mov
cmp
inc
xchg
sub
fadds
aaa
xchg
push
xor
add
ds
sbb
and
jge
adc
ret
mov
sbb
out
sub
and
in
or
mov
xor
bound
out
xchg
inc
jne
andb
int3
into
lret
cmp
mov
divl
inc
push
jl
ljmp
pop
sub
sub
movsb
cltd
adc
sbb
xchg
mov
gs
into
mov
cs
inc
pusha
inc
xor
test
daa
and
cmp
fdiv
stos
lahf
arpl
pop
xor
dec
jno
sbbl
sub
out
cmp
repnz
negl
cmp
inc
test
lds
cmp
jns
sti
into
out
adc
fwait
pop
xor
in
jg
xrelease
sbb
inc
mov
inc
iret
lret
popa
incb
aaa
into
xlat
jp
pop
mov
adc
jbe
inc
movl
test
call
sbb
push
pop
mov
aaa
or
add
mov
in
xor
adc
and
xchg
decl
jo
loop
mov
inc
add
pop
testl
mov
mov
iret
sbb
inc
scas
and
aas
jbe
ret
xor
daa
mov
xor
or
loop
movsl
sahf
into
add
and
mov
cmp
lret
cmpsl
js
or
jl
lcall
fmull
and
and
inc
insl
popf
and
leave
fsubrl
jecxz
push
das
mov
into
loope
sbbb
lods
sahf
cmp
daa
xchg
inc
dec
xchg
ss
inc
lahf
ret
add
dec
pop
pusha
adc
sub
notl
adc
cmp
mov
or
adc
mov
pop
out
xor
xor
sbb
ret
loop
lods
add
push
mov
andl
push
cmpsl
xchg
repz
cmp
cwtl
adc
or
mov
orl
stos
movsl
mov
push
xor
xor
pop
insb
push
frndint
mov
mov
popf
cmp
push
sbb
popf
add
lahf
fistpl
inc
xchg
inc
sti
test
popf
lea
int
popf
test
jo
stos
int3
insb
gs
fnsave
out
jg
xor
xchg
add
leave
fcompl
stos
test
sbb
dec
xchg
add
jns
out
ret
fwait
xor
xchg
ja
ret
pusha
inc
bound
repz
mov
pushf
std
push
fcmovu
mov
jbe
sub
cmc
push
mov
inc
repnz
cmp
test
daa
mov
fcoml
xor
xor
lods
xchg
mov
iret
shrb
adc
cmpsl
subl
dec
mov
lods
dec
ds
push
repz
mov
test
mov
dec
push
mov
cwtd
mov
sbb
mov
in
popa
into
call
xchg
sub
add
and
sbb
aas
or
push
mov
rcrl
jmp
cwtl
inc
xor
xlat
imul
mov
sbb
fildll
mov
pop
gs
adc
add
jmp
jge
sti
jo
jmp
mov
cmp
mov
ret
adc
fists
mov
jp
insb
lods
or
add
dec
and
jne
inc
cmc
or
add
test
mov
insb
inc
add
cmp
mov
jmp
dec
loopne
xchg
call
outsl
mov
out
dec
ret
pop
lea
rorl
lods
cld
push
repz
add
inc
cmc
pop
outsb
sahf
int3
test
test
jb
add
stos
mov
test
cmc
ret
add
and
jmp
mov
addr16
xor
or
popa
out
xchg
xor
sti
test
xchg
and
cmp
in
pop
ret
ja
or
inc
xor
scas
jb
mov
inc
inc
lret
call
jne
cwtl
mov
dec
je
mov
and
sub
imul
fnstcw
repz
leave
pop
loop
jl
xchg
inc
pushf
mov
jmp
dec
gs
dec
dec
add
mov
repz
push
and
adc
arpl
lods
dec
test
jno
push
jp
xlat
pop
mov
sbb
stos
imul
adc
jecxz
mov
xchg
or
test
fcmovu
dec
push
xchg
addl
add
jle
xor
loop
mov
stos
or
cld
sub
bound
mov
adc
aad
jge
and
in
cwtl
gs
pop
push
jle
in
in
or
sbb
aad
popfw
int3
rorl
dec
cmp
int3
sub
lock
std
les
cltd
mov
xchg
jb
mov
iret
fstpt
loopne
pop
push
subl
in
cld
push
add
or
sti
subb
mov
mov
push
cmp
mov
cmp
idivb
es
mov
pop
inc
or
mov
cli
stc
xor
xchg
pushf
out
inc
icebp
fmull
adc
or
js
loop
ficoml
sahf
and
aaa
fldenv
pop
fcoml
mov
int3
xchg
adc
pop
aaa
aam
sti
xor
xchg
inc
or
push
add
pushf
jae
pusha
inc
push
vphadduwd
xor
sub
lret
push
cmc
cmp
fcmovb
cwtl
mov
mov
das
dec
sub
push
xchg
mov
movsl
xchg
loopne
and
pop
push
cmc
loopne
push
cmpsb
mov
clc
pop
call
pop
cmp
cmp
cmp
ret
jb
xor
imulb
inc
in
scas
mov
icebp
push
imul
mov
cmp
push
scas
addr16
pop
push
call
jge
and
test
mov
shl
gs
adc
inc
stos
dec
ja
lret
push
mov
ja
and
int
jg
or
sbb
xor
cmpsl
add
add
mov
jmp
out
imul
js
iret
push
aas
push
out
xchg
in
xrelease
and
jg
cwtl
icebp
clc
repnz
ret
jns,pt
mov
inc
loopne
test
test
push
jg
testl
and
jmp
dec
fldcw
pusha
lds
int
nop
fisubrs
out
and
es
cltd
sbb
into
outsl
and
xchg
ret
xor
dec
jl
scas
push
mov
rolb
test
and
mov
add
cmp
pop
push
in
xor
xor
cmp
aaa
push
daa
xchg
mov
out
mov
inc
pmulhuw
mov
dec
loop
ret
jnp
ljmp
ds
push
mov
enter
mov
xchg
lret
fldt
fwait
lret
sub
dec
mov
adc
shll
dec
sbb
or
adc
lret
mov
pop
lods
test
std
dec
xchg
adc
lret
mov
mov
cli
or
movsl
lods
mov
or
push
pop
out
hlt
cwtl
inc
dec
xor
les
sti
hlt
add
subl
add
xchg
mov
xor
ds
add
mov
xchg
xor
aaa
push
in
shl
cmp
pop
insl
adc
inc
mov
dec
leave
add
mov
push
sbb
mov
loop
ret
nop
stos
mov
mov
sbb
mov
adc
and
loope
pushl
pop
xor
xchg
pop
icebp
out
pop
sbb
add
jge
repz
gs
pop
inc
loop
xor
cmpsl
adc
call
sub
push
xor
out
sahf
orl
mov
mov
mov
adc
sti
dec
insb
clc
fs
or
daa
mov
xor
mov
mov
sbb
sub
adc
repnz
dec
and
sbb
pop
hlt
fcompl
or
adc
data16
mov
mov
mov
out
out
and
pop
rclb
mov
mov
mov
inc
test
cmp
push
popf
leave
lods
mov
mov
adc
je
push
adc
outsb
icebp
add
adc
mov
orb
ljmp
rolb
adc
out
call
int
fwait
out
pop
pop
fs
sub
mov
fdivr
jmp
adc
mov
popa
imull
mov
mov
adc
jp
adc
sbb
stc
add
int
data16
lods
xchg
xor
outsl
cmpsl
iret
mov
lods
cmp
inc
mov
xchg
scas
jne
jno
cmpsb
imul
xchg
sub
or
add
data16
inc
push
mov
iret
xor
pop
pop
mov
mov
test
pop
pop
sub
scas
bnd
mov
mov
jae
jg
and
pop
arpl
jae
push
test
mov
or
add
daa
clc
jl
mov
push
clc
jae
test
push
fs
lea
xchg
pop
test
ja
push
sbb
xchg
mov
insb
popa
xor
push
jmp
pop
xchg
xchg
or
dec
ret
jmp
ss
dec
shll
sbb
adc
imul
int
add
out
lds
xchg
lret
sub
std
insl
sbb
push
or
xchg
arpl
cmp
sbb
pop
mov
cmp
jnp
sub
pop
pop
rcl
cli
or
movsl
pusha
jo
je
int
and
xor
addb
pop
cmp
das
mov
push
and
add
ljmp
sbb
iret
out
sbb
scas
sub
lea
push
fmulp
sbb
xchg
add
int
jp
cltd
repz
push
mov
jg
fisubrs
jl
popf
add
jmp
xor
fwait
jge
dec
aad
mov
fisubrs
push
movb
mov
es
mov
dec
push
fistpll
loope
or
js
add
pop
dec
jbe
imul
pop
xchg
dec
push
roll
cmp
movsl
mov
push
push
popf
push
or
jle
fldenv
fldcw
dec
rol
pop
ret
out
mov
mov
call
cltd
jg
aad
lods
sub
dec
jg
outsl
test
mov
jl
in
aas
outsb
mov
cwtl
and
sarl
jle
jo
js
push
xor
mov
outsl
mov
sahf
mov
shll
dec
popf
cli
adc
sub
sbb
inc
lret
sahf
push
iret
out
sub
jae
adc
das
loop
jg
inc
das
lock
inc
jae
cmp
rolb
mov
sbb
add
mov
mov
popf
shlb
jnp
sub
xchg
xchg
sub
and
lock
cli
push
ret
dec
cmp
jp
scas
aam
lcall
jle
cld
push
insb
in
pop
stos
lds
out
adc
xchg
loop
mov
xchg
push
push
jle
js
out
filds
push
in
sbb
mov
movsl
add
in
xchg
lock
cmp
gs
out
out
pop
adc
adc
and
shll
add
or
and
mov
mov
push
push
cmp
jmp
adcb
xor
cmp
push
xor
dec
in
cmpl
or
incl
scas
call
es
jb
mov
inc
inc
sub
push
dec
add
js
mov
jbe
lahf
mov
pusha
push
mov
mov
movsl
mov
pop
push
push
cmp
pop
push
movsl
pop
inc
mov
sbb
xor
daa
cmpsl
mov
lds
rolb
push
sbb
jnp
cmp
xor
mov
popf
es
xchg
in
dec
data16
shlb
stos
jp
mov
cltd
dec
mov
ficoml
xor
enter
scas
inc
dec
aaa
push
jno
mov
pop
cmpsl
ds
loope
cmp
pop
in
mov
mov
lcall
add
cld
and
shl
ret
cmp
jmp
mov
and
inc
int3
mov
fstl
iret
in
out
add
jb
in
loopne
and
inc
push
int3
fsubs
neg
addr16
dec
rclb
and
or
lock
pop
cmc
dec
in
stos
sub
js
adc
and
int
out
jbe
dec
add
xchg
adc
jns
add
xchg
xchg
enter
sub
imul
adc
xchg
ja
movb
cmp
pop
mov
adc
push
pop
jmp
xchg
pop
adc
mov
pop
sub
stos
xchg
push
sub
js
sbb
out
or
popa
jo
jmp
js
mov
mov
xor
fstl
shrb
imul
mov
out
data16
cmp
jno
pop
sub
lods
xchg
data16
int3
shr
mov
adc
sub
mov
push
pop
fists
jmp
aam
sbb
mov
sub
xchg
push
in
dec
sbb
lods
cltd
pusha
test
adc
cmp
mov
or
insl
out
ss
and
cmp
mov
sahf
lahf
inc
push
popa
sbb
mov
mov
imul
cmp
jns
mov
in
xor
popa
cwtl
xor
mov
testl
jg
fsubl
aam
int3
mov
dec
sbbl
dec
lahf
jle
xor
sub
mov
jmp
lcall
xor
and
test
sbb
loop
jg
cmp
gs
adc
sub
aam
and
add
jle
jecxz
nop
pop
sub
outsb
pop
mov
and
cmp
jle
pop
push
cwtl
and
sbb
ljmp
sub
cmp
iret
xchg
xchg
xor
out
rclb
adc
jae
dec
xchg
push
movsb
cs
test
std
jg
xor
in
mov
mov
mov
cmp
push
or
mov
js
cmp
mov
jecxz
xor
sub
add
jp
sub
push
or
jl
ds
mov
lea
pusha
dec
in
scas
lahf
cltd
fs
lods
int
aam
lods
mov
ret
stos
addr16
add
idivb
and
jg
dec
cmp
pop
pushf
xor
outsl
inc
lods
rorl
cmp
enter
add
add
fisubrl
popf
mov
hlt
mov
push
or
icebp
xchg
jo
xchg
dec
adc
sbb
pop
loopne
ss
mov
lret
mov
mov
xor
leave
mov
and
cmp
rorl
cmpsb
lea
push
dec
loope
push
or
xchg
ret
push
popa
add
push
add
mov
je
ljmp
jle
dec
data16
and
mov
adc
imul
pop
dec
sti
inc
xchg
aam
icebp
add
xchg
sub
adc
dec
xor
in
pop
push
xorl
out
mov
insl
ffreep
cmp
cmp
lcall
jl
ror
call
or
mov
or
sahf
sbb
add
in
mov
lcall
mov
repnz
jmp
call
mov
loop
movsl
lea
mov
mov
dec
andl
cmp
pop
xlat
or
cmp
repz
pushf
test
scas
mov
sbb
fidivl
cwtl
cld
inc
aad
pushf
lea
aaa
add
push
mov
int3
inc
pop
and
std
add
in
ret
hlt
das
outsb
int
cmp
mov
imul
xchg
jmp
xor
pop
sarl
out
fsubl
mov
sti
mov
jmp
pop
cmp
call
push
push
ja
mov
idiv
xchg
scas
inc
adcl
push
sub
cs
fbstp
mov
imul
xor
push
mov
movsb
and
leave
fidivrs
test
push
xchg
ret
mov
shrl
pop
pushf
adc
repz
add
pop
mov
mov
call
iret
jns
repnz
dec
pop
js
push
out
mov
jge
xor
or
div
xlat
int
push
sub
not
mov
fisubrs
test
pusha
dec
or
add
cwtl
adc
lock
jmp
mov
repnz
jns
sbb
xchg
ret
mov
adc
mov
cmp
cs
aad
scas
pop
xchg
mov
mov
nop
and
mov
out
lahf
dec
mov
mov
sti
test
cmp
outsb
ficoml
das
sti
and
mov
sbb
ss
cs
jno
jne
adc
inc
out
jle
daa
cmc
and
xlat
orl
cmp
xor
inc
inc
jo
popa
jb
ds
adc
and
dec
orl
imul
sub
stos
xor
inc
mov
outsb
and
jne
xchg
rolb
into
pop
ljmp
imul
mov
dec
shll
ds
and
dec
lcall
add
xor
and
mov
pop
movsl
hlt
cltd
aad
enter
cmpsb
adc
sti
and
icebp
call
dec
jl
iret
jecxz
dec
xor
and
inc
inc
mov
or
lret
xorb
aam
fnstenv
scas
lahf
xor
mov
push
cmpsb
mov
call
adc
sub
pop
xor
lcall
ret
add
sbb
xor
mov
loope
lds
inc
adc
scas
mov
aaa
lock
int
sbb
out
xlat
or
in
leave
jg
pop
insl
or
je
xor
test
mov
dec
stos
pushf
xor
dec
xorb
rcrb
imul
outsb
mov
or
lahf
pop
and
fldl
and
das
xor
test
jecxz
stos
aam
lds
xchg
adc
push
jmp
test
push
popa
push
call
hlt
insl
inc
push
dec
pxor
pop
add
es
push
repz
mov
sarl
clc
mov
dec
shrd
dec
dec
and
lea
add
fwait
clc
lahf
fldt
outsl
cld
mov
xchg
pop
jecxz
bnd
hlt
adc
clc
ds
popf
xchg
clc
mov
in
repnz
push
popf
adc
sarb
popf
mov
das
in
pop
fnstcw
icebp
sbb
push
jns
pop
mov
mov
ret
mov
cmpsb
adc
mov
jmp
or
or
mov
into
jle
dec
xchg
or
jo
adc
sbb
testb
fcoms
pop
xchg
add
andl
insb
rcl
out
mov
je
mov
jns
mov
cs
xor
scas
adc
jae
outsl
dec
out
pushf
pop
and
lahf
out
jae
adc
and
adc
push
pop
mov
daa
cmc
adc
pop
out
shll
cmp
cmp
dec
sub
mov
lods
in
orl
jge
xor
subl
lea
or
dec
shrb
int
fs
in
fwait
pop
js
stc
adc
aad
push
inc
in
cmc
sub
movsl
xchg
repz
movsb
cmp
sbbb
cmc
xor
xor
lock
cmp
or
xchg
sub
out
mov
sub
lret
ljmp
dec
jbe
fcomps
movsb
push
mulb
pusha
data16
fcomi
imul
push
jns
clc
xor
repnz
lds
pop
xchg
lea
xor
sub
push
xchg
les
pop
and
mov
stc
or
dec
movsb
sub
int
mov
mov
outsl
mov
jb
cmp
aad
dec
stos
idivl
and
loope
xchg
pop
adc
fmulp
das
into
fldt
test
cltd
aaa
sub
ret
sbb
add
stos
add
lock
enter
aas
pop
insb
bound
dec
mov
or
xor
mov
adc
xor
sbbl
adc
lret
mov
mov
loop
das
fsts
clc
fmull
adc
notl
adc
cmpsb
cs
adcl
imul
dec
pop
call
inc
mov
sti
and
std
test
and
push
mov
lea
cmpsl
out
test
push
rcl
jge
dec
xchg
fldt
push
cli
mov
xor
int
xchg
cmp
enter
pop
notl
ret
leave
xor
xchg
ret
pushf
in
jnp
and
adc
jb
gs
mov
mov
or
sahf
pop
stos
inc
dec
or
xchg
fs
push
xchg
adc
sub
movsb
xor
jp
mov
inc
sbb
int3
iret
mov
jns
pusha
lds
addr16
movlps
xor
push
inc
sbb
adc
xchg
and
addr16
pop
pop
pop
shrb
and
add
sbb
jecxz
or
or
xlat
or
mov
xor
xchg
push
and
lahf
ror
pop
lods
sahf
mov
mov
pop
cld
pop
out
call
adc
mull
je
cmp
xchg
jb
popa
lods
or
mov
sub
and
dec
push
lahf
sub
or
popa
outsl
jl
pop
sub
cmp
loope
xorb
xorb
into
mov
xor
and
out
sar
xchg
mov
test
out
outsb
xor
add
jle
hlt
jns
mov
xchg
std
repz
iret
addr16
aaa
or
daa
aad
xchg
dec
xchg
stos
in
sub
sub
mov
mov
jo
imul
or
push
cmp
loopne
es
fs
in
addl
cmc
cmpsl
mov
shll
in
cwtl
jae
push
mov
gs
jb
and
das
rorb
xchg
outsl
imul
shr
push
hlt
incl
mov
jge
out
sub
loop
fcmovnbe
insb
sub
loope
lods
cmpsl
dec
and
push
and
pop
sub
in
and
sub
nop
mov
xlat
das
rorl
lods
jbe
mov
inc
mov
pop
lea
repz
xor
jbe
stc
mov
cmc
and
ret
cmp
pop
lds
lret
jb
std
scas
in
push
repnz
outsl
mov
fyl2x
xchg
cmc
mov
test
fsubs
insl
push
das
sbb
mov
daa
lea
popf
movsl
pop
jecxz
or
cmp
pop
mov
pop
mov
and
add
inc
cmp
add
insl
mov
jo
jmp
sub
fisttpll
add
pop
inc
test
xchg
fbstp
in
inc
dec
xchg
push
fs
sub
mov
sti
xchg
pushf
xchg
into
cli
pop
inc
fcmovnb
aas
dec
icebp
mov
repz
sub
pop
jno
outsb
dec
call
cltd
and
shrl
lret
cld
ds
aad
sbb
pushf
add
cmp
out
or
cmpl
push
push
push
mov
push
push
stos
push
adc
add
sbb
ljmp
data16
call
rolb
out
imul
lods
xor
sbb
arpl
mov
in
pop
cmp
mov
mov
mov
rcrb
sahf
or
push
mov
cwtl
sbb
adc
mov
sahf
dec
addb
ja
xchg
into
idivl
inc
mov
imul
xchg
imul
cmc
sbb
cmp
xchg
push
adc
push
jbe
lods
jg
leave
sti
jbe
mov
cmp
push
inc
incl
mov
inc
cmpb
fwait
jg
imul
push
lds
and
dec
addr16
jl
cld
pop
loop
add
mov
std
shrl
adc
ljmp
outsb
imul
inc
mov
out
push
inc
out
movsb
int3
jmp
cmp
sub
sub
lret
sub
loopne
scas
mov
sub
leave
push
adc
setg
and
movsb
jae
sarb
fcmovnb
js
dec
sbb
movsb
xchg
ror
push
mov
add
imul
mov
addr16
out
addr16
cld
insl
dec
arpl
push
mov
xor
popa
data16
lock
mov
push
dec
xchg
xchg
gs
addr16
jge
xor
push
icebp
xchg
into
mov
add
or
sti
stos
push
cmp
dec
push
push
xchg
mov
cmp
push
sub
sbbb
cli
arpl
or
mov
aas
dec
mov
mov
push
push
mov
sub
jo
jno
jnp
cmp
dec
jl
xor
adc
dec
in
xchg
fdivs
mov
rol
mov
xchg
lret
icebp
lcall
stos
sbb
jl
pop
rolb
push
ds
aas
shrb
nop
dec
fistpll
cwtl
adc
loopne
fwait
sub
ja
sub
adc
out
sahf
jns
mov
cld
movsl
mov
insl
mov
push
jbe
sahf
xor
rorl
jle
adc
outsb
jg
bound
or
shll
insb
jae
sbb
out
cld
push
xor
sbb
js
packuswb
popf
mov
cmpl
jg
loop
or
add
sub
shlb
inc
xor
outsl
int
inc
pop
pop
inc
mov
jns
add
out
iret
xchg
add
popw
pop
insl
stos
out
sub
mov
sbb
enter
sub
adc
mov
stos
pusha
inc
out
inc
mov
push
mov
jo
jl
fs
notb
shrb
sub
xor
inc
push
test
stos
mov
sub
push
inc
sarl
dec
fiaddl
mov
pusha
sub
xchg
je
pop
push
jae
movsl
mov
daa
and
xchg
insb
or
pop
dec
jp
jnp
fistps
iret
movsb
in
dec
push
and
sub
in
mov
aad
stos
jo
in
in
cmp
cmpsb
aad
sbbb
cmp
outsl
arpl
sbb
imull
insl
jnp
or
es
fsts
mov
lods
push
int
pop
mov
dec
mov
adc
xchg
pop
pop
test
mov
imul
rep
fsts
pop
xchg
test
add
adc
mov
xchg
pop
cmpsb
daa
mov
jae
lret
and
sti
inc
shl
mov
push
pop
push
sahf
mov
pushf
xchg
jo
lret
cmc
sub
and
add
dec
sub
fmul
mov
and
gs
xchg
shll
rdpmc
dec
jae
sbb
cmp
sbb
jae
dec
sbb
push
shr
jo
cltd
pop
jns
scas
inc
outsb
mov
fcmove
add
subl
out
xchg
jecxz
xor
mov
dec
mov
sub
mov
jae
std
jns
imul
inc
loope
js
in
cmp
in
pop
jg
pop
add
data16
out
mov
in
xlat
xchg
mov
pop
add
cmc
adc
data16
sar
inc
add
inc
push
mov
dec
shll
add
inc
shll
mov
data16
jle
aas
ficomps
shl
lods
pop
pop
or
mov
js
out
dec
pop
arpl
add
jbe
stc
cltd
icebp
repnz
aad
push
jg
testb
sbb
inc
je
je
sbb
jnp
scas
out
out
push
cmp
and
push
mov
repnz
fstpt
rorb
lahf
ret
xchg
mov
pop
add
rcr
shll
push
popa
pop
cltd
fwait
lea
aas
and
ret
mov
mov
repz
inc
fs
loopne
push
and
outsb
jne
daa
rorb
cmpsb
push
push
stos
lock
rcrl
mov
dec
movsb
out
fisubs
dec
adc
inc
xchg
mov
inc
sub
out
mov
xchg
test
sbb
mov
pop
std
addl
scas
dec
jae
jne
clc
insb
and
and
adc
jg
aad
pop
xchg
cmp
xor
add
dec
in
int3
scas
jo
scas
shlb
fdivs
mov
cs
fcomi
cmp
fwait
cwtl
lea
std
out
rcll
add
ret
xchg
xchg
pop
cmp
or
inc
js
leave
cwtl
add
push
call
into
jl
push
es
mov
in
or
sbb
test
ja
sub
dec
incl
dec
in
bound
mov
andb
jae
cmc
sbbb
data16
or
cmpsl
shr
addr16
mov
cltd
js
std
daa
cmpsb
in
inc
jecxz
test
jns
stos
cmp
pushf
xor
mov
divb
call
cmp
mov
pushf
inc
jne
loop
repnz
scas
leave
pop
pop
jb
pop
xlat
push
insl
cmp
or
jmp
xchg
js
pop
jmp
jne
jno
and
addr16
movsl
fs
cmc
mov
mul
in
movsb
ds
sbb
andb
adc
mov
sbb
sti
or
pop
stc
fs
bound
popf
les
fcompp
les
into
sub
fadds
rcll
and
xchg
loopne
push
add
aaa
pop
sbb
ds
push
stc
push
inc
dec
fst
in
frstor
add
aas
out
mov
jo
mov
aam
adc
push
sub
mov
leave
push
fisubrs
mov
das
in
add
ja
lods
rcrl
or
jmp
packuswb
incb
outsb
jp
push
outsb
ljmp
ss
mov
loop
push
mov
dec
into
mov
mov
sbb
jl
inc
sub
and
mov
inc
or
inc
mov
xlat
lret
into
aaa
sahf
ss
mov
cmp
pop
fs
adc
test
mov
fcoml
fs
jmp
in
loopne
mov
or
mov
loope
cmc
dec
cmp
dec
jbe
inc
or
iret
fs
clc
gs
dec
lea
jbe
mov
mov
add
push
idivl
int
cs
insl
imull
nop
cmp
test
or
sub
push
lret
jne
sbb
and
sub
jmp
shll
ret
sub
jno
sarl
loope
dec
fimull
mov
or
mov
jmp
icebp
xchg
movsb
imul
dec
jge
pop
scas
jg
and
xor
jne
loop
je
xor
loop
push
repnz
test
cwtl
push
fiadds
and
nop
push
popf
pop
repz
jp
mov
push
in
gs
adc
ret
scas
into
aas
test
push
xchg
pop
hlt
cmp
cmp
cmp
pop
push
into
cmp
rorl
movsl
mov
ret
stos
dec
out
inc
pop
out
loope
mov
mov
push
ficoms
ficoml
ljmp
andl
cwtl
into
add
shlb
fs
sbb
inc
aaa
je
adc
aaa
ljmp
mov
pop
push
sub
clc
pop
gs
lea
inc
lods
test
mov
pop
and
mov
sbb
push
inc
pop
xchg
jl
jp
test
popf
mov
jae
xchg
scas
cltd
mov
insb
and
lock
adc
aam
ds
lret
fnsave
imul
je
push
dec
ret
inc
push
cmp
addr16
sbbl
mov
jo
pop
mov
jo
mov
jne
pop
jo
push
ljmp
push
loopne
push
mov
mov
imul
ja
mov
jne
imul
inc
dec
xor
sti
push
jmp
fcoms
fsub
lods
or
adc
xor
dec
ss
jge
aam
cmp
jecxz
fwait
pop
rcrb
mul
shlb
pushf
les
fsubrl
in
xchg
jecxz
js
sbb
sti
mov
cmp
je
push
inc
gs
iret
popf
jb
dec
sbb
aaa
cmpsb
movsl
sbb
addb
sbb
les
iret
xchg
pushl
xchg
cmpsb
mov
push
js
mov
or
push
push
mov
cmp
xchg
add
mov
insb
jl
pop
arpl
repz
inc
xor
int3
hlt
call
and
fnstcw
lock
add
push
outsb
fistps
xchg
or
mov
loop
clc
out
and
dec
mov
fdiv
and
mov
testb
and
cmp
dec
iret
das
es
jne
fucomip
pop
test
adc
push
xchg
mov
loop
ret
rcll
xchg
dec
dec
in
jle
xlat
cmp
cmovb
scas
ret
into
fnstsw
push
icebp
arpl
push
loopne
xor
or
mov
push
loop
pop
mov
out
call
adc
outsb
add
leave
add
adc
push
aad
enter
jmp
or
loope
xchg
lcall
pop
lcall
fadds
jl
popa
je
jl
or
dec
jp
cmpsb
xor
data16
push
jbe
push
cwtl
clc
ret
xorb
cmp
mov
pop
dec
mov
or
je
pop
jne
sub
adc
imul
loope
outsl
iret
aam
mov
jge
lock
repz
or
dec
dec
add
dec
int
stos
daa
mov
bound
pop
insb
sbb
or
and
movsl
outsb
movsl
addr16
xor
and
push
mov
lret
inc
lea
dec
push
imul
jo
pusha
jo
and
leave
dec
ret
or
xor
adc
fimull
int3
test
xchg
lcall
scas
cmp
sub
add
aas
pushf
mov
out
lahf
in
mov
xchg
sub
jns
and
cmc
mov
push
mov
nop
xchg
jp
lret
mov
pop
lcall
mov
push
sahf
fiaddl
and
mov
mov
stos
scas
shl
jle
pop
adc
sbb
mov
add
sbb
lret
movsb
mov
push
cmp
sbb
pop
and
mov
mov
mov
outsb
test
or
sbb
push
xchg
cmp
outsb
ret
xor
fnstsw
pop
dec
cmp
and
push
xor
into
inc
pop
inc
pop
push
sti
mov
addr16
pop
dec
into
adc
addr16
sbb
mov
adc
jmp
clc
into
dec
int3
inc
sub
cs
scas
jle
out
jbe
sub
cmp
or
rclb
cwtl
lods
push
push
xor
xchg
xor
xor
jmp
cmp
cmp
mov
fldl
in
mov
js
lock
fbld
ja
adc
aad
adc
fwait
into
cmc
rcr
mov
add
imul
xor
enter
adc
fnsave
out
xor
imulb
sbb
mov
sar
jmp
loope
orb
dec
dec
adc
xlat
sub
insl
add
dec
stos
pop
test
clc
lock
xchg
icebp
mov
mov
clc
clc
sahf
jg
movsl
and
mov
xchg
xchg
pextrw
jg
scas
mov
data16
mov
and
mov
adc
jae
jmp
cli
mov
and
notb
imul
shlb
mov
pop
in
lcall
loopne
stos
inc
xorb
jo
rcrb
pop
and
add
in
enter
std
aam
jmp
jmp
add
test
repz
out
movsb
aaa
xor
popf
fs
xchg
add
lods
cli
xor
in
adc
cmpsl
aad
xorb
add
repz
lcall
jo
jmp
jecxz
aad
mov
call
les
jge
jge
imul
rolb
mov
jns
add
lret
lcall
jae
sbb
lds
sbb
adc
stos
cltd
xchg
mov
insb
insb
mov
sub
and
div
adc
les
mov
xchg
jecxz
xchg
mov
dec
xchg
in
repnz
adc
and
sbb
cmc
push
lods
mov
imul
push
rcrl
xchg
adc
mov
loope
aas
or
movsl
jp
test
mov
in
cwtl
fsubs
fsubr
cmp
push
and
mov
in
mov
sbb
jb
xlat
cmp
adc
sub
inc
sub
out
dec
add
pop
sahf
fwait
pop
inc
or
sbb
outsb
not
arpl
pop
pop
jae
cwtl
stos
and
pop
sub
sub
loop
push
push
add
mov
aas
inc
sbb
sub
aas
sbb
push
xchg
jge
xchg
jl
mov
stos
mov
orl
inc
cltd
or
mull
mov
dec
add
fstl
xor
outsl
dec
mov
addr16
jmp
or
dec
cmpsl
repnz
aas
dec
inc
mov
and
push
stos
jmp
dec
adcb
icebp
arpl
daa
sbb
dec
loopne
add
add
fisubrs
orl
fistpl
cmp
adc
adc
adc
inc
rdmsr
xchg
cmpsb
cmpsb
enter
jp
pop
clc
pushf
fwait
jo
rcl
insb
lds
cmpsb
pop
repnz
in
nop
add
dec
insl
movsb
jo
adc
push
pop
addr16
dec
adc
lret
sub
jge
push
and
mov
fmuls
pop
mov
mov
sbb
adc
inc
shrl
adc
inc
push
aaa
sub
aam
outsl
cmp
cld
cmp
sub
in
sbb
std
sbb
scas
out
and
data16
dec
lds
rol
gs
andb
push
lahf
xchg
inc
std
mov
rolb
inc
cmp
cmp
ret
je
inc
cwtl
dec
bound
mov
movl
mov
sub
lret
fadds
xchg
imul
xor
xchg
cmp
pop
aam
lahf
cmpsl
or
inc
lea
mov
out
cld
push
xor
loopne
xchg
shrb
adc
mov
pop
xchg
mov
or
popf
clc
frstor
jne
mov
jns
push
add
and
test
jmp
out
jle
mov
jl
in
insl
shlb
dec
sbb
frstor
shl
xchg
mov
xor
jge
xor
add
sbb
in
rorl
cmpsl
out
push
ds
push
mov
aad
cs
mov
pop
xchg
rolb
lea
xchg
faddp
xor
fs
rclb
mov
adc
stos
outsl
add
xchg
or
scas
mov
mov
xor
loopne
mov
outsl
sub
lods
js
mov
jo
stos
aas
pop
mov
shrb
jns
aad
mov
mov
jnp
dec
dec
add
dec
aad
into
out
and
push
popa
push
add
jbe
inc
add
in
or
int
clc
movsb
push
enter
mov
xor
pop
jb,pt
jne
fwait
jp
mov
leave
add
mov
out
ja
daa
pop
add
pushf
and
fs
scas
das
or
xor
push
or
xor
je
ljmp
lret
adc
lahf
outsl
push
dec
push
jo
push
pop
leave
iret
fistpl
inc
inc
das
inc
mov
mov
ljmp
scas
mov
adc
jne
jg
mov
dec
mov
outsb
pusha
jno
shll
xchg
mov
push
setns
cwtl
ds
arpl
xor
dec
pop
or
lods
lods
mov
inc
in
xor
mov
xchg
and
js
dec
xchg
loop
push
pusha
jns
and
cmpsb
and
dec
out
add
repnz
fbstp
cs
fsubs
adc
in
nop
rcll
mov
ja
jae
js
sti
lods
popa
clc
add
xor
mov
outsb
sub
mov
dec
xchg
insb
mov
rcrb
mov
adc
movl
out
xchg
lret
fdiv
or
enter
lock
ror
mov
in
mov
jbe
idivb
test
into
and
add
lahf
adc
fidivl
push
mov
cmpsl
sub
ss
iret
sub
pop
loop
out
or
or
xchg
pop
xchg
int3
sub
dec
mov
inc
jmp
xor
push
mov
outsb
clc
push
mov
jmp
push
in
pop
jne
fimull
int
cmc
data16
test
xchg
cmc
add
jmp
cmp
arpl
push
cwtl
xlat
ficompl
pop
loope
flds
jmp
in
cmp
xchg
in
scas
jge
sub
rorb
mov
xchg
jno
cmp
jno
xchg
aas
pop
pop
das
sbb
shrb
test
notl
insl
sbb
xchg
xor
sti
inc
pop
mov
in
insl
pop
pop
pusha
popa
xchg
add
inc
pushf
push
jp
xchg
mov
push
sti
cwtl
jne
popa
ja
mov
xor
dec
adc
mov
push
sbb
pop
xor
cmp
cmpsl
cmc
fadd
mov
lock
pop
imul
arpl
sbb
push
adc
shrl
mov
push
rclb
das
xor
cmp
lret
or
jle
imul
bound
cmp
xor
inc
out
and
std
pop
pop
pop
cmpsl
fsubs
pop
aam
jbe
scas
mov
mov
or
adc
jb
and
pop
arpl
sub
sub
inc
fs
push
lods
push
adc
insl
notb
push
ss
push
dec
cmp
inc
sub
ret
jmp
jo
mov
lds
cs
or
xchg
dec
bswap
adc
sti
popa
fcompl
clc
ret
cmc
dec
cmp
jae
sub
movsb
sbb
xchg
in
out
mov
pop
fmul
movsl
stos
lods
rorb
jle
pop
push
insl
adc
mov
adc
je
js
mov
pop
in
enter
push
sub
lahf
sbb
fiaddl
sbb
mov
lds
hlt
dec
sub
lods
jns
js
into
xchg
adc
inc
lret
mov
sbb
adc
out
jmp
repz
into
adc
ret
int
in
xor
rcrb
mov
mov
jo
push
rep
out
out
or
stos
pop
pop
mov
mov
mov
add
test
repz
lock
icebp
in
add
push
jae
inc
inc
repnz
in
lret
xchg
mov
fdivs
mov
pop
test
pop
cmp
xchg
out
fwait
icebp
mov
jecxz
xchg
leave
jecxz
roll
lods
pop
pop
ljmp
xlat
test
mov
mov
sbb
cmp
jbe
add
rcll
mov
lret
popa
pop
scas
dec
std
mov
mov
filds
pop
enter
fwait
jle
inc
jnp
enter
loope
jno
sub
xchg
call
movsb
xor
dec
mov
mov
lock
and
adc
pop
push
test
mov
mov
jbe
add
nop
xchg
jmp
inc
and
push
fdivrs
cmpsb
pop
jne
add
pop
pop
cwtl
pop
addb
jno
mov
insl
les
jp
lds
rclb
fwait
outsb
sti
pop
movsl
in
jmp
and
sub
adc
push
gs
test
out
mov
pop
push
je
das
sub
sbb
ror
adc
push
popf
cmp
gs
test
imul
aad
outsl
mov
cwtl
mov
lret
adc
rorl
jae
mov
or
fwait
insl
xor
in
mov
push
std
pop
loope
dec
and
rcrl
aam
dec
in
lea
jno
mov
jge
mov
jl
int
cmpsl
mov
insl
test
out
rcl
enter
es
cmp
fnstcw
imul
das
mov
push
cmp
stos
ficomps
sub
jle
fisubs
jle
rcrb
add
lods
je
daa
xor
fstpl
fistl
out
cli
xor
loope
inc
loope
mov
pusha
lds
movsl
out
xorl
push
imul
mov
sarb
pop
inc
lea
out
mov
mov
mov
jnp
add
pop
sub
ss
lea
mov
setno
sub
jle
arpl
mov
ss
ljmp
ljmp
iret
cmp
mov
mov
lcall
or
dec
jp
stos
and
es
stc
cmc
xchg
cmpsl
push
popa
dec
push
pop
fcoml
add
repz
test
gs
shll
pop
lods
jae
or
cltd
test
dec
cmc
dec
xchg
dec
dec
into
xor
hlt
sub
call
divb
cmp
pop
sub
xchg
cmpsl
je
sbb
and
inc
jp
push
inc
or
or
push
sub
leave
popa
jp
leave
mov
adc
ljmp
xlat
xlat
sub
xor
scas
adc
push
cmp
stc
cmp
aad
or
ja
arpl
or
sti
in
sarl
mov
dec
jns
and
testb
sarl
pushw
fsts
mov
cmpl
popf
test
insb
cwtl
add
xor
popa
add
out
in
adcl
das
pop
push
mov
jl
dec
xchg
movsb
sub
negb
and
lret
sub
fwait
pop
das
jb
sub
das
out
call
jbe
xchg
cltd
mov
push
sbb
lock
out
ss
push
push
cmp
cmp
add
in
ds
enter
fistps
pop
mov
stc
test
iret
and
mov
pop
xchg
mov
dec
nop
repz
stc
and
fsts
xchg
sti
scas
out
das
loope
add
cwtl
rcr
jecxz
pop
ret
inc
jno
leave
fsubl
test
sbb
add
push
insb
call
loop
in
lahf
fildl
nop
les
out
repnz
cmp
mov
mov
loopne
sahf
jne
xor
ret
testl
pop
nop
fidivl
mov
jmp
or
pop
and
jge
lods
mov
push
stc
xchg
fdivl
xor
cltd
mov
add
xlat
icebp
fmuls
les
nop
xor
call
icebp
movsl
or
jge
mov
fnstenv
push
push
and
mov
jno
mov
sarl
jns
subl
and
sbb
push
fiaddl
das
loop
pop
add
jae
fwait
add
push
mov
test
pushf
cmp
inc
push
push
xor
add
cwtl
insb
pushf
cmc
ret
jg
adc
dec
in
arpl
pop
rcrl
test
mov
xchg
cmp
aad
sbb
add
add
xchg
sbb
das
jns
jnp
mov
push
pop
sub
jecxz
stos
lret
les
fld
sub
sbb
jecxz
jecxz
sbb
loope
ret
lahf
in
add
stos
sub
fistl
cmp
aad
adc
xchg
cs
imul
repnz
or
popf
imul
fsubrl
xor
mov
jns
jge
movb
xchg
mov
xchg
int3
xlat
aam
nop
mov
dec
add
cld
pop
mov
pop
popa
cwtl
sbb
cld
jp
push
xor
loope
mov
cli
and
add
ljmp
subb
addb
mov
ljmp
pop
nop
jg
adc
inc
and
lods
cmp
and
xchg
and
sar
aas
clc
ror
dec
cld
divps
sarb
lea
inc
and
pop
outsb
and
or
push
lcall
push
xchg
rcl
bnd
dec
sub
push
cltd
iret
shll
sbb
mov
pop
pop
lret
movsb
loop
mov
mov
stos
idivl
mov
decb
mov
fistl
or
popf
push
mov
icebp
sbb
movsl
cmpsl
or
mov
add
dec
sub
cltd
out
sbb
and
lahf
inc
js
ja
cs
xor
mov
subl
adc
pop
pushf
stos
push
mov
notl
cmp
in
mov
adc
test
or
cmc
adc
add
push
mov
adcb
stos
mov
cmp
xor
mov
cwtl
jl
push
mov
or
jbe
or
out
aaa
pop
adc
jo
jge
cmpsb
adc
dec
iret
add
mov
push
test
sub
or
jmp
repnz
loopne
outsb
enter
bnd
and
push
lods
out
adc
repnz
mov
hlt
push
mov
xor
push
jmp
mov
pop
push
outsb
mov
inc
xor
and
test
mov
and
sbb
aas
mov
cltd
or
push
sbb
mov
xlat
xlat
adc
loopne
pop
cmp
cltd
jp
cmp
arpl
outsl
inc
cs
mov
or
fldt
inc
add
xor
in
movsb
insb
testb
mov
and
outsl
sub
adc
adc
push
jae
add
push
cmpsb
dec
xchg
fdivr
outsb
sbbl
movsl
mov
add
shrb
in
fbstp
xchg
test
jbe
mov
pop
push
lcall
icebp
mov
daa
dec
jbe
aad
testl
int
adc
jnp
inc
add
ss
push
xor
ss
aam
mov
mov
push
cbtw
gs
dec
cwtl
lds
jmp
mov
jbe
bound
inc
push
mov
cmp
mov
mov
inc
das
pop
xorb
rolb
lahf
cmp
jno
and
subb
mov
lock
ret
cmp
mov
xchg
call
jmp
xor
xchg
lock
inc
mov
pop
xor
jp
dec
add
cmpsb
mov
mov
jne
and
sub
dec
test
mov
xchg
mov
fwait
sbb
imulb
xchg
fists
sti
aaa
outsl
ret
or
test
loop
mov
call
add
xchg
out
aam
inc
dec
push
pushf
jb
xlat
inc
mov
roll
daa
arpl
iret
addr16
cltd
scas
pop
inc
sbb
andl
insl
jmp
or
add
sbb
iret
insb
add
sbb
sahf
cmpsb
leave
sbb
xchg
js
add
add
mov
dec
or
sbb
xor
std
insl
xlat
cmpsb
ljmp
mov
shr
ljmp
cmpsl
in
pushf
ja
sarb
add
xor
std
gs
loopne
mov
push
hlt
sub
mov
mov
gs
mov
sub
cltd
sub
jp
cmp
fdivrs
jae
loopne
sarb
adc
mov
inc
sub
xchg
add
pop
pop
or
scas
stos
outsb
add
ds
push
sbb
shl
out
sub
bound
and
jl
sub
stos
imul
dec
mov
cmpl
and
test
js
cli
pop
pop
ret
int3
jl
inc
sub
jo
xchg
aad
dec
sbb
inc
cmp
insb
in
and
cmp
int
int3
dec
mov
leave
clc
inc
pop
lock
xor
out
sbb
or
cmpsb
pop
jmp
mov
and
icebp
add
xor
mov
fstpt
push
jne
jge
add
push
fs
mov
stc
popa
addr16
stc
leave
pop
es
sbb
cld
or
cli
sub
jns
and
pop
sub
pushf
cld
call
mov
mov
xchg
mov
or
cs
outsl
xchg
cltd
lock
mov
mov
jb
ja
sbb
das
mov
xchg
daa
jb
mov
jp
das
in
jae
std
jno
lret
add
sti
add
ss
cmpl
push
sub
imul
dec
bound
adc
lret
jg
mov
sub
rcr
push
xchg
pop
sub
arpl
test
clc
outsl
mov
sub
in
ficoml
mov
lcall
xor
xor
test
fdivrs
mov
ret
mov
jb
push
repnz
push
shlb
test
pop
xor
je
pop
mov
pop
jnp
aad
push
in
mov
and
mov
hlt
mov
mov
lods
push
aam
pop
adc
rcrb
push
mov
sbb
push
mov
popf
sub
test
pop
mov
rorb
xchg
mov
xor
push
lds
pop
inc
out
mov
jns
add
data16
les
inc
mov
pavgw
jno
sub
mov
lret
pop
lock
jmp
push
test
lcall
das
shll
xlat
je
stc
shlb
fwait
mov
mov
mov
ret
aad
adc
xor
shrb
aad
jge
outsb
ret
outsb
mov
or
cmpsl
xorl
jno
lahf
inc
xchg
lcall
stos
enter
xor
push
add
stos
repnz
addb
adc
mov
jne
adc
int3
popf
xchg
push
pop
pusha
and
test
cli
jbe
cmovae
mov
mov
insb
inc
jge
pop
cmpb
jecxz
or
add
jmp
inc
cli
xor
pop
aam
cmp
loop
popa
insl
sbb
jb
mov
dec
pop
stos
pop
mov
push
jp
and
or
sbb
imull
scas
pop
fiadds
stos
or
int
push
ret
js
adc
pusha
cli
cwtl
fisttpl
cmp
mov
cmpsb
xchg
jae
or
or
movb
mov
addr16
inc
lds
dec
jne
test
jnp
xorl
cmp
leave
sbb
and
and
movsl
mov
push
push
icebp
and
insl
mov
test
lret
jne
mov
cmp
scas
test
adc
or
roll
add
fisubrl
int3
fstpl
int
loope
mov
test
clc
jno
mov
cli
push
jmp
jo
adc
sub
pusha
scas
pop
push
mov
sbb
ss
pusha
pop
ss
popa
cmp
inc
outsl
mov
in
sub
sbbb
pop
sub
pop
push
ret
out
cmpsl
pop
pusha
mov
or
ss
das
repz
outsl
and
outsb
dec
add
dec
mov
or
and
outsb
adc
mov
sahf
incl
dec
and
xchg
push
insb
pop
fists
or
inc
xor
pop
addr16
inc
sti
into
mov
pop
sub
cld
enter
cmp
mov
out
aad
movsb
nop
addl
jnp
sbb
imull
or
insl
stos
or
je
mov
jecxz
fwait
xchg
lds
mov
cli
pop
adc
jae
sbb
mov
mov
push
jb
add
test
xchg
loopne
adc
adc
lcall
mov
pop
ljmp
sar
xchg
dec
loopne
mov
xor
sub
cmp
int3
pop
out
outsl
cld
in
insb
xor
inc
xchg
jmp
mov
rcrl
sbb
sbb
lock
in
push
int
sub
popa
push
scas
dec
shll
shl
or
xchg
sbb
jg
xor
popa
mov
out
ret
aad
test
fwait
mov
ds
ficoms
xlat
pop
xor
and
sbb
ret
insb
fiadds
jne
cmp
xchg
cli
cmp
jne
adc
or
pop
sbb
pusha
pop
jo
jp
leave
aam
arpl
inc
rorl
jnp
push
std
cmp
daa
cmc
cwtl
jno
outsl
push
lret
test
outsl
lret
add
xor
xor
mov
xchg
ds
daa
sbb
cmp
arpl
sti
inc
push
jl
lea
sub
push
adc
xchg
test
inc
cmpsb
inc
pop
arpl
sbb
cmp
std
xchg
enter
pusha
je
stos
cmpsl
xchg
cmp
add
push
popa
inc
rol
sbb
xor
lahf
icebp
sbb
adc
out
add
jle
xor
push
mov
ret
jg
push
mov
out
and
js
push
jl
pop
cmpsb
mov
lock
pop
in
repz
enter
push
jg
lods
push
hlt
jbe
pop
push
dec
push
rol
ret
mov
dec
aad
add
dec
mov
xchg
lds
fisubs
mov
inc
out
sub
adc
cmp
jno
xorb
popa
sub
lock
arpl
fs
push
cmpsl
or
adc
push
push
add
dec
out
ret
in
push
inc
aaa
ret
pop
xchg
push
andb
fwait
inc
and
je
jg
jae
pop
pusha
in
mov
cmp
jne
mov
jmp
fisttpll
add
movsl
mov
add
mov
ja
les
xor
gs
xchg
arpl
leave
and
add
cmpl
push
xor
mov
shll
lea
xor
fstl
push
ja
sub
jle
leave
xchg
rorb
iret
mov
cld
popf
daa
aas
scas
stc
push
mov
pop
out
ret
popl
inc
or
int
mov
or
mov
lret
repz
int
fcmovnb
cwtl
jg
push
fwait
ret
jo
mov
pop
jns
repnz
xchg
cmp
mov
adc
xor
dec
lods
insl
jb
imul
cmp
into
icebp
iret
pop
gs
pop
data16
or
aad
std
sbb
loopne
insl
or
jmp
ljmp
fwait
push
sbb
mov
xchg
mov
xor
jnp
push
testb
pop
mov
mov
inc
sub
int
inc
add
and
popf
scas
cltd
fldt
jl
xor
xor
inc
clc
or
ds
push
or
popf
insl
mov
fsts
stos
mov
dec
pop
insb
xchg
and
ficoml
addr16
nop
jo
fimull
out
lret
cltd
mov
sbb
stos
mov
jo
int
lcall
mov
dec
mov
jns
adc
xchg
sub
ret
add
jo
hlt
dec
adc
idivl
lea
stos
push
vsqrtpd
push
cmp
add
or
add
test
je
test
jno
push
addl
out
mov
adcb
lods
add
mov
push
mov
cmp
pop
cmp
jne
mov
inc
sub
adc
fwait
adc
test
test
mov
adc
cmc
outsl
sub
mov
cmp
mov
sahf
pop
push
fildll
jne
icebp
mov
aad
push
ja
aam
fcoml
push
outsb
mov
and
loope
ret
xor
pop
xchg
rol
lea
loope
inc
cmp
mov
enter
int3
and
rcrl
sub
sahf
pop
mov
imul
test
sbb
movsb
imulb
mov
or
bound
rcl
inc
fiaddl
or
push
dec
addr16
and
shlb
or
jns
into
nop
add
in
mov
fsubrp
add
iret
pop
xor
fsubrp
mov
fdiv
pop
leave
daa
dec
adc
clc
xor
aaa
popf
push
add
cwtl
dec
sub
mov
inc
popf
pop
mov
notb
loopne
loope
gs
xchg
push
mov
outsb
push
push
ljmp
push
iret
das
int3
mov
xor
and
fsubrs
add
mov
and
jmp
mov
in
xchg
es
js
out
push
hlt
pop
sub
adc
or
subl
and
fldt
stos
scas
mov
popa
je
add
dec
test
mov
loopne
mov
sbb
adc
jl
adc
lods
cmp
adc
and
push
pop
lods
or
stos
adc
sub
jae
repz
xlat
shlb
cmp
xchg
xchg
mov
adc
mov
pop
adc
es
inc
or
pop
sub
ret
jmp
xor
sarl
push
sarl
cltd
sbb
mov
inc
pop
daa
xor
bound
adc
xchg
adc
add
jb
xlat
push
mov
xchg
and
inc
mov
sbb
ds
jl
jne
sbb
lock
xchg
push
xchg
lea
ret
adc
push
cs
jne
xchg
in
ja
xor
xor
or
sbb
mov
jne
dec
movsb
sub
sbb
sub
movsl
xlat
xor
add
and
arpl
ret
mov
pop
subl
das
jp
push
scas
dec
js
xor
lret
rorl
cmp
cmpsl
push
xor
mov
dec
lock
out
ret
ja
adc
fwait
fs
int3
inc
pushf
ljmp
xchg
dec
ret
sbb
mov
jecxz
gs
sbb
stos
jp
mov
cmp
shlb
sub
shrl
push
popa
adc
insb
ret
cwtl
icebp
aaa
sub
arpl
lds
notl
rcll
out
sahf
jp
loop
nop
fdiv
das
clc
xor
xchg
cmp
dec
jb
sbb
or
addr16
xchg
xchg
xchg
dec
xchg
push
and
int
jb
xor
scas
cs
inc
adc
sti
sub
dec
adc
mov
pop
fsubr
loopne
fwait
je
out
push
icebp
push
pushw
out
test
add
insl
loopne
call
cmp
data16
arpl
rorb
sbb
xchg
xor
into
lcall
lahf
push
clc
ds
lret
mov
xchg
cmc
jae
popf
negb
or
jl
fmul
jnp
pop
lock
cs
shrb
mov
leave
cmc
out
mov
mov
std
fwait
lods
dec
push
pop
fcoml
pop
dec
jecxz
cwtl
out
adc
xlat
pop
sub
push
addb
pop
sub
add
or
sbb
mov
and
psubsw
popa
popf
and
cmp
push
in
ret
decl
andl
push
xlat
cmpsl
ror
lret
stc
loopne
and
sahf
xor
leave
add
cmpsb
inc
pop
imul
push
out
pop
and
xchg
std
mov
loope
lcall
mov
out
pop
jnp
in
es
cmpl
int3
outsb
jo
xchg
pop
sti
nop
test
xor
push
cmp
sar
mov
push
ljmp
and
mov
aas
pop
pop
ljmp
jg
inc
jb
xchg
inc
js
push
cmpsl
jnp
int
in
mov
les
mov
in
lret
fimull
int
adc
stos
scas
int3
js
xchg
jo
les
arpl
rclb
out
mov
stos
aaa
in
sbb
cmp
sub
mov
cwtl
mov
xor
jo
mov
inc
es
ret
aaa
rcrl
pop
in
push
std
bt
inc
cli
push
add
lods
loop
jae
xor
jae
jl
dec
ja
jno
pusha
lods
in
mov
push
add
lea
test
cmpsl
push
push
sub
sub
mov
cltd
sub
mov
sub
daa
mov
sub
shll
mov
mov
jo
or
test
stc
mov
lods
aam
fcomps
jge
cmp
out
push
and
mov
mov
jns
ret
xchg
sbb
or
jae
or
adcb
push
push
xor
rcll
int3
xchg
xor
xchg
shrb
mov
cmpsl
sti
sbb
push
out
xchg
in
mov
inc
pop
insl
push
popl
xchg
dec
daa
ljmp
pusha
mov
popf
mov
in
arpl
and
fcomps
and
xchg
mov
inc
mov
nop
stos
mov
sbb
xchg
dec
in
mov
aad
cwtl
popf
mov
movsl
gs
xor
into
orb
test
and
out
outsb
loopne
fsubs
cwtl
movsb
sbb
mov
add
add
push
je
lahf
fdivl
jno
vpsllw
rorb
push
es
or
add
fildll
inc
cmc
aam
pop
xor
mov
out
pop
data16
fisttpl
es
int
mov
jno
shr
cld
dec
in
or
xchg
jo
jmp
mov
pop
ds
fnstsw
and
dec
ficoms
sti
jnp
push
jmp
ljmp
icebp
xchg
mov
out
mov
cmp
aam
jmp
lcall
ret
mov
test
lds
sti
mov
mov
dec
popf
mov
push
mov
jo
cwtl
insb
stos
out
push
mov
pextrw
sarb
sub
and
adc
pushl
shrl
mov
jl
adc
mov
aam
imul
mov
cld
mov
mov
fs
adc
xchg
fiaddl
es
aaa
push
and
adc
dec
mov
fadd
fbstp
icebp
sub
push
xchg
aas
cltd
pop
nop
mov
rolb
sub
je
push
push
lret
sub
das
xlat
js
push
adc
push
inc
repz
sti
pusha
adc
cmpxchg
test
sub
adc
add
dec
jnp
aaa
jo
jmp
jo
adc
add
adc
repz
test
out
in
jecxz
ljmp
or
add
jle
mov
cwtl
lock
insl
jmp
leave
sub
mov
lret
fcmovu
jns
jb
hlt
jns
movsb
and
dec
jmp
mov
test
stc
aam
sbb
mov
pop
popa
cli
lock
mov
jno
subl
fisubrl
mov
jne
adc
ja
enter
pop
mov
pusha
or
add
sub
bound
addr16
lock
les
or
cbtw
dec
fldt
inc
hlt
inc
ret
inc
js
xor
push
ret
sub
inc
jl
in
ret
jbe
mov
inc
sbb
adc
sub
inc
pop
mov
mov
push
sbb
sub
pop
cltd
lret
das
or
add
dec
mov
out
jg
aam
cwtl
rorl
ja
daa
rcl
inc
lock
inc
ret
jae
sub
push
xor
sub
mov
rcrb
stos
or
es
pop
and
inc
mov
sub
add
scas
pop
inc
inc
cmc
stos
hlt
fstpl
mov
lahf
mov
jbe
cli
fs
adc
std
stos
push
leave
sbb
cmc
cmp
jg
mov
mov
pop
lds
add
push
sbb
loope
or
pop
sbb
repnz
stos
xchg
xchg
adcl
cmp
in
inc
mov
leave
aam
dec
xchg
mov
mov
lret
xlat
push
pop
mov
xor
out
and
dec
out
ss
sbb
mov
pop
andl
dec
mov
mov
les
cmp
and
cld
add
xchg
aaa
lea
in
and
imulb
mov
outsl
and
cmpsl
out
and
insl
dec
dec
cmp
push
inc
or
daa
or
cmp
cmc
cwtl
cmp
leave
dec
sbb
mov
hlt
cwtl
and
and
push
arpl
test
iret
fsubl
push
jl
xchg
cmc
lret
sub
or
mov
push
sub
enter
xor
sub
xorl
in
fs
sbb
dec
fistpl
pop
fisubrs
jmp
or
inc
loop
imul
sbb
js
adc
mov
fcompl
je
outsl
push
fdivl
push
jns
into
shlb
ret
jle
lahf
xchg
repnz
push
xor
add
mov
movsb
iret
stos
iret
dec
mov
sub
xchg
loope
sbb
jmp
xchg
inc
pusha
test
enter
inc
lret
jmp
pop
ficoml
adc
lret
cmp
arpl
or
and
pop
sti
mov
ja
dec
xchg
push
mov
nop
or
rcr
or
aam
out
inc
push
icebp
fcmovb
cmp
cmp
movsl
mov
push
mov
and
adc
out
push
or
outsl
push
mov
ret
jnp
mov
or
rorb
or
push
mov
out
mov
rcll
xor
pop
sub
call
mov
xchg
jae
mov
ljmp
cmpsl
mov
cli
add
sahf
cmp
scas
divb
aad
xlat
cli
dec
jg
jb
xchg
cmpsl
mov
pop
lret
xchg
lahf
mov
std
mov
lods
xchg
lret
push
icebp
das
add
dec
imul
int
adc
inc
sub
push
pop
popa
pop
dec
add
arpl
out
into
addr16
mov
or
ja
fnstcw
rcr
ror
fwait
xlat
jae
xor
xchg
rcl
das
xchg
add
mov
mov
inc
xor
popf
lods
sahf
loopne
jno
shrb
mov
or
imul
lods
add
mov
rorb
shll
and
sbbl
jae
and
sti
xor
nop
push
inc
jg
decw
clc
jge
jge
jp
jecxz
pushf
add
cmp
roll
mov
icebp
loopne
popa
jmp
push
xor
out
ljmp
lret
inc
cltd
or
ljmp
aam
stos
test
int3
sahf
leave
xchg
aas
fsts
inc
adc
ds
push
cmpsl
lock
or
call
aaa
leave
ljmp
or
mov
jae
jecxz
cmp
cmp
pop
cmp
popl
adc
sub
jo
inc
jae
jle
adc
fistpl
test
pop
jno
fs
sbb
cmp
push
and
cltd
xchg
jns
fwait
sub
pxor
or
dec
fwait
pop
push
out
push
mov
dec
std
xchg
test
xchg
or
sbb
aaa
push
mov
iret
or
jmp
mov
enter
dec
repnz
pop
cld
call
js
dec
cmp
cmp
into
sub
add
dec
sti
js
mov
in
bound
mov
push
lcall
mov
adc
jle
test
cmp
xchg
fs
cli
push
mov
loop
push
cmc
popf
sbb
in
cmp
cmp
aad
dec
stos
test
jb
push
test
and
mov
and
push
cmp
cmpsb
int
sti
push
dec
ror
mov
cmpsb
cmp
pushf
hlt
repnz
jbe
call
pop
adc
js
xor
out
cmp
bound
xchg
or
dec
test
lcall
ret
sub
andl
adc
test
shlb
insl
data16
xchg
mov
stc
push
sub
jbe
inc
arpl
mov
sbb
cmpl
pusha
fcmovu
mov
mov
dec
mov
in
inc
clc
push
call
push
in
gs
imul
enter
or
add
lods
clc
xchg
xchg
add
dec
adc
or
jp
cmp
dec
arpl
ret
cmc
outsb
cmp
add
imul
out
jbe
retw
mov
jbe
pop
imul
inc
jp
cmp
pop
adc
aad
or
scas
xor
mov
out
jbe
sub
pop
pop
call
xchg
clc
idivb
push
sub
sub
sub
jnp
sti
mov
orl
ss
out
pop
pop
in
xchg
roll
test
pop
in
loopne
xchg
mov
lret
cmp
or
je
push
sbb
inc
test
push
movzbl
mov
fcomps
nop
mov
aaa
sbb
push
xchg
lcall
scas
push
out
push
mov
adc
mov
and
xchg
inc
sub
sub
daa
dec
out
jnp
les
stos
lahf
rorb
and
bound
add
cmp
mov
push
jb
loopne
outsb
push
or
fnstenv
xchg
or
sub
adc
pushf
inc
int
sti
cmp
mov
jmp
inc
pushl
pop
cmpl
loopne
pusha
push
in
out
sbb
xor
xor
lds
xchg
jno
testb
jno
andl
sahf
dec
test
jb
clc
call
push
push
cmp
ret
ja
mov
push
mov
mov
sbb
or
mov
sub
pop
int
call
das
add
mov
into
je
inc
add
leave
cmp
enter
imul
jmp
pushf
xchg
push
cltd
lods
mov
bound
pop
movl
dec
les
popf
jmp
jle
sti
sarl
sbb
aad
xchg
lret
mov
mov
sub
popf
xchg
jo
jge
out
cltd
push
cld
pop
add
shl
rorb
das
bound
dec
aas
das
lods
jnp
rclb
mov
sbb
loop
or
inc
fbstp
stos
push
cmp
in
sub
xor
nop
arpl
jecxz
jmp
ret
jbe
cmp
dec
inc
xchg
mov
dec
pop
pushf
push
rcll
mov
push
push
fcompl
jge
daa
insl
cli
jne
lods
test
xor
pop
inc
fsubrs
mov
enter
adc
movsb
xor
mov
jle
pop
nop
iret
je
lock
popa
call
and
in
add
xchg
jg
cmp
mov
push
rcrb
and
adc
push
fldt
mov
test
xchg
xchg
jmp
add
cltd
push
jp
jle
lods
hlt
mov
jmp
in
ds
jl
pop
sahf
cmp
int3
test
dec
lret
jp,pt
sbb
jno
sub
pop
mov
std
icebp
dec
inc
out
mov
jl
ret
cs
in
imul
cmpsl
cmp
movsb
cltd
mov
sbb
or
and
sub
cs
loop
shrl
jns
int
gs
pop
ljmp
inc
mov
movb
and
shrl
bound
pusha
cmpsl
lea
fiaddl
pop
test
jp
adc
fdivl
xor
test
inc
adc
and
out
hlt
into
fs
xor
sbb
scas
and
mov
pop
or
pusha
pop
test
or
out
jecxz
inc
xchg
outsl
loop
fstl
leavew
jae
mov
dec
je
push
sbb
ds
jb
jae
sarb
mov
jo
cmp
cmp
sti
sub
xchg
repnz
push
sbb
cmp
inc
xor
rcr
push
loop
ficompl
lods
add
or
fcoms
mov
ret
in
xchg
outsb
dec
jbe
xor
jns
imul
xchg
cmp
shlb
mov
jbe
add
in
scas
movsl
fimuls
xchg
repz
adc
cmp
into
stos
add
outsb
cmc
lret
sbb
es
and
jne
and
push
xchg
cmpsb
mov
arpl
xchg
and
gs
aas
in
test
and
xchg
and
hlt
xchg
xchg
sub
lret
addr16
das
sbb
lahf
mov
lods
jo
sbbl
mov
xor
dec
hlt
mov
and
popf
sbb
test
lods
push
lahf
repnz
mov
sbb
cmp
sub
pop
cmp
mov
cltd
sbb
gs
cmp
jl
mov
repz
test
imulb
out
jmp
mov
ja
dec
sbb
jg
and
in
mov
inc
pop
lods
mov
lods
loope
xlat
inc
addr16
movsb
stos
push
rcrb
dec
xchg
movsl
sti
jo
lock
mov
hlt
leave
cwtl
int
mov
push
daa
ss
xchg
lods
push
pop
rcrb
aam
pusha
jl
sbb
test
push
pop
out
mov
cmp
loopne
loopne
fimuls
mov
and
testb
shll
popf
sub
shll
lret
mov
outsb
add
pusha
or
sbb
arpl
repz
add
inc
outsl
jo
push
sbb
dec
pop
and
jbe
nopl
mov
enter
mov
pop
lret
sarl
jnp
test
lea
jns
add
adc
scas
cmp
add
test
fimull
add
jne
pop
lds
shll
lret
sub
jo
inc
add
adc
mov
add
jp
push
or
aas
adc
dec
xor
xchg
in
mov
sahf
mov
pop
int3
cmp
arpl
dec
mull
imul
cmp
inc
cmp
jl
jne
jae
fsubl
cmp
add
daa
ret
pusha
inc
push
cmp
jge
jae
dec
cs
nop
mov
xchg
jno
sbb
popa
dec
inc
add
sbb
sub
outsl
and
xor
popf
pop
sub
push
jmp
adc
cmp
jb
push
mov
pop
mov
hlt
into
add
or
xor
insb
call
push
loopne
sbb
mov
fprem1
fstl
or
pushl
mov
lock
hlt
aaa
mov
std
into
int3
dec
leave
xor
fcompl
jno
pop
jle
mov
xchg
mov
xor
mov
add
dec
repnz
or
add
and
aam
loope
and
fwait
clc
enter
mov
push
push
pop
mov
push
mov
subb
sahf
lds
sub
call
jmp
pop
daa
cld
or
inc
jmp
icebp
add
or
jbe
fnstenv
ljmp
lock
xor
out
mov
cmpsb
fidivs
popf
cmp
dec
or
rolb
lcall
ret
push
bound
movsl
xchg
or
fsubl
cmpsl
add
or
scas
adc
add
push
daa
arpl
sbb
test
sub
divb
aam
jno
fisttpl
test
scas
mov
xor
xchg
xchg
and
jae
push
arpl
vmovss
cmp
sbbb
jg
aaa
inc
cs
rorl
hlt
pop
push
push
jno
repz
or
mov
sub
dec
cmp
xor
ret
movsl
inc
les
mov
dec
pop
data16
imul
out
das
movsl
or
cmpl
xor
push
js
lcall
xchg
ss
scas
xchg
dec
jns
popa
pop
push
pop
dec
mov
adc
xchg
inc
js
jbe
push
fwait
cmp
ja
inc
inc
sarl
add
xchg
adc
incb
push
data16
in
test
pop
stos
ljmp
aaa
push
icebp
xchg
jno
xchg
mov
dec
in
and
xchg
push
push
dec
pushf
icebp
sbb
popa
sbb
jge
lods
jle
or
test
jae
clc
pop
mov
cwtl
idiv
cmc
pop
cltd
mov
addl
dec
add
push
sbb
pop
in
jno
cmp
icebp
pop
push
or
push
pop
imul
icebp
sahf
dec
cmp
inc
push
adc
jns,pt
dec
jmp
aad
jb
mov
stc
pop
js
push
add
push
sti
xchg
push
rolb
pop
or
xlat
mov
cmp
jmp
inc
shrb
pop
and
push
mov
mov
mov
in
pop
jne
lahf
fstpl
stos
addr16
mov
xchg
mov
cmp
xchg
rcrl
inc
ds
ficompl
sbb
gs
mov
ret
jmp
mov
and
dec
stos
lcall
xchg
or
stc
push
cmpsl
push
cli
leave
lret
inc
ja
subb
push
mov
cmp
out
addl
or
mov
popa
cmpsb
xchg
xchg
mov
sbb
movaps
lods
loopne
ja
mov
inc
sbb
movsb
pop
pushf
push
mov
inc
sbb
or
xchg
pop
cs
cmp
in
adc
dec
das
mov
adc
cwtl
ror
dec
pcmpgtw
or
out
and
out
lret
pusha
into
inc
mov
fstps
pop
sub
sahf
sbb
jg
pop
sub
lea
mov
sti
sahf
idivb
cmp
xor
insb
mov
mov
cmp
sahf
dec
mov
roll
pop
popf
jp
mov
into
or
adc
jae
add
sbb
aaa
mov
fsubrs
and
or
loopne
cmp
pushf
lahf
loopne
or
lods
push
mov
imul
xchg
fcmovu
mov
pop
les
inc
xlat
mov
rorb
clc
mov
sbb
push
leave
outsl
cmpsb
das
repz
xor
push
mov
pop
inc
ret
pop
stc
pushf
fsubrl
imul
nop
out
pop
mov
add
jle
and
outsl
cmp
das
cld
gs
sbb
inc
dec
rorl
rclb
add
pop
cld
decl
or
lods
pop
xchg
test
xor
out
test
stos
sbb
stos
cmp
flds
shrb
add
idivl
sbb
lahf
xor
jne
pop
jae
sub
dec
dec
adc
icebp
mov
shlb
sub
mov
popa
add
mov
inc
xchg
mov
sahf
rorb
cltd
in
cmp
fs
sbb
jl
stos
xchg
out
jae
aaa
jbe
mov
lret
push
js
dec
bnd
dec
adc
add
mov
mov
jl
dec
xchg
push
jnp
jmp
sub
scas
int
mov
dec
jo
add
out
out
imul
push
xchg
mov
scas
mov
add
pop
jns
ss
ja
das
mov
inc
dec
aad
rorb
loop
negl
or
jne
lds
jne
mov
out
test
aad
in
cmp
mov
push
ret
push
sub
or
push
mov
pop
jb
push
mov
cs
mov
jge
frstor
jb
cmp
adc
lret
mov
outsl
xor
ljmp
mov
iret
xor
cmp
sti
aam
enter
iret
lcall
push
scas
jae
shufps
std
adc
test
cld
call
fwait
or
cmpsb
add
mov
fmul
mov
xor
rcrl
movsb
test
cmpsb
filds
jle
mov
inc
push
mov
popa
mov
mov
and
inc
fwait
adc
mov
movl
dec
or
mov
dec
adc
and
iret
test
mov
jne
sarb
fstp
arpl
inc
push
xorl
xor
pop
mov
mov
sub
aad
sub
and
lahf
dec
test
push
or
ja
jmp
mov
dec
aam
gs
fs
xchg
enter
jne
or
push
cli
push
and
rclb
push
aas
jecxz
mov
xchg
cmp
mov
pop
jmp
ss
lret
adc
sub
sub
push
cmp
and
and
sub
pop
cmc
and
or
inc
mov
roll
push
roll
repnz
add
shrb
push
adc
pushf
pop
and
xchg
xchg
pop
insl
sbb
sahf
push
cmp
hlt
mov
ja
jne
nop
xchg
lahf
xor
int
xor
add
in
push
jno
mov
push
cwtl
xor
rcrl
jae
pop
sti
adc
int
inc
or
mov
adc
jle
push
pusha
or
lds
xchg
loopne
rorl
xor
lock
sbb
push
xor
dec
scas
mov
cld
inc
cmpsb
mov
xor
in
add
adc
mov
cmp
sti
stos
es
pop
mov
bound
mov
mov
push
inc
jno
rcrb
test
pop
or
inc
das
and
not
insl
dec
jne
pop
inc
orb
dec
and
loopne
and
push
cmpsb
fptan
adc
sub
imull
cmp
mov
test
inc
mov
shlb
cmp
cmp
cmpsb
jbe
and
jmp
inc
adc
pop
jno
xchg
int3
jp
sbb
jne
dec
into
jne
cmp
or
rolb
cs
clc
and
in
inc
lcall
cmp
stc
mov
or
cmp
mov
loop
push
xchg
mov
shr
cmp
push
pushf
pop
icebp
jo
es
xor
aaa
cmpsl
xchg
mov
jl
dec
fpatan
in
jl
cs
lret
mov
jne
mov
sub
popa
insl
jbe
pavgb
add
push
pop
mov
repnz
fdivrl
xlat
popa
cltd
xlat
inc
jl
js
pop
push
xor
cltd
cltd
or
lock
pop
mov
mov
sarb
fucomip
mov
sub
cmp
imul
push
cmp
xchg
aaa
testl
jecxz
dec
lods
xchg
inc
fldenv
pop
push
mov
inc
pushf
or
pop
pop
test
sbb
cld
je
pop
push
int
adc
cmpsl
and
in
xchg
insb
sub
nop
dec
je
push
pop
pop
push
pop
adc
jb
rolb
outsb
dec
cmp
out
sbb
ljmp
cmp
or
aas
pop
ret
movl
mov
movsb
fsubs
das
mov
adc
mov
sub
dec
ljmp
adc
jmp
ljmp
push
insb
inc
cmpsl
ja
nop
pop
scas
stos
aaa
jl
aas
sub
and
or
or
mov
lock
fmul
lcall
jno
ret
or
out
subb
cmp
mov
ucomiss
ret
call
fadds
dec
arpl
sbbb
add
ss
ljmp
out
adc
pop
mov
je
gs
ds
aad
adc
mov
inc
cmp
cmp
inc
in
test
dec
xchg
faddl
push
push
sbbb
iret
cli
pop
test
lea
xchg
js
and
dec
lods
test
pusha
das
and
sub
inc
ja
sub
mov
sub
xor
jg
pop
dec
sbb
fldenv
push
idivb
cmp
stc
daa
sbb
inc
aad
loopne
loop
cmp
pop
mov
popf
or
xor
cmpsl
scas
aas
mov
add
push
jl
stc
leave
out
lods
jmp
inc
add
mov
orb
adc
push
aaa
mov
jg
xlat
pop
rol
push
cmp
ret
movsl
in
jmp
inc
and
jno
push
out
stc
mov
test
in
fmul
fcoml
cld
add
mov
das
push
adc
mov
lret
orl
xchg
or
lcall
stos
xlat
or
dec
cli
loop
movsl
je
xchg
sbb
shrb
push
inc
and
mov
fcoms
push
xor
fildl
mov
cmp
test
rclb
mov
sti
mov
pop
sub
ljmp
les
mov
repnz
movsl
daa
js
dec
and
clc
fidivrs
and
mov
sub
lods
aad
inc
add
xstore-rng
cmpsl
xchg
imul
es
jmp
xchg
sbb
rcrl
dec
xchg
sub
inc
or
dec
adc
sbb
push
sbb
jg
sub
cld
dec
jle
sti
or
inc
xor
daa
fsubrl
and
mov
fs
mov
jbe
sub
mov
mov
or
jne
cmp
add
scas
cmp
adc
in
cmp
loopne
in
dec
lret
dec
mov
lret
out
fs
ret
pop
mov
jb
shlb
ja
cmp
xchg
outsb
or
pop
into
pop
push
push
xor
pop
loopne
xor
aas
inc
push
or
push
cs
cmpsb
dec
mov
xor
lret
pop
push
std
loope
test
dec
out
out
pushf
nop
fdivrs
stos
xchg
mov
and
shll
push
fnstcw
lret
clc
jno
scas
mov
or
fimull
fwait
adc
sbb
lods
leave
lahf
je
je
subl
jae
lret
mov
ss
or
mov
push
jge
and
lcall
dec
xor
push
pop
in
pop
mov
test
push
sub
xor
mov
push
jae
lret
in
cmpsl
xchg
mov
add
jle
mov
arpl
fldcw
and
loop
scas
pushf
ret
inc
mov
mov
sub
or
adc
jns
add
icebp
fists
push
lods
and
xchg
mov
in
lods
mov
cmpsl
out
xchg
inc
mov
fiaddl
fldl
hlt
jbe
and
decb
or
and
sti
fistpl
pop
out
mov
ss
cmp
fincstp
sub
add
sub
and
in
insl
ja
aam
adc
cmp
sbb
in
popa
push
aaa
mov
jb
aam
mov
lahf
push
cmp
or
cmp
xchg
dec
push
push
jmp
sub
inc
and
stos
xchg
test
adc
enter
pop
mov
inc
pop
push
xchg
cwtl
int
popa
sbb
test
lret
jo
adc
adc
or
inc
jno
or
pusha
pusha
subb
arpl
push
inc
loopne
je
push
and
pop
test
test
xor
push
mov
sub
cltd
aad
push
je
adc
xlat
bound
add
jge
fsubrs
xor
mov
lret
aad
jge
dec
paddb
mov
xlat
cmc
cmp
sti
or
mov
jmp
outsl
push
pop
in
loope
test
mov
or
mov
fnstsw
fildll
popa
pop
stos
pop
sarl
out
sub
mov
xchg
pop
cltd
jnp
rcll
outsl
repnz
loopne
adc
mov
mov
mov
fs
jecxz
xchg
hlt
das
cmc
jle
xchg
sti
mov
cmc
fld
in
add
jmp
jmp
test
stc
das
adc
std
pop
ret
nop
mov
push
adc
rol
imull
and
inc
mov
mov
xchg
xchg
cmpb
inc
jge
je
push
jne
push
push
sbb
rcr
leave
pop
add
sub
sbb
dec
push
and
sbbb
mov
mov
inc
hlt
repz
test
loope
repz
pop
es
stos
xchg
rolb
call
push
add
sub
bound
pop
mov
adc
cmp
or
jp
sub
xlat
pop
add
push
fwait
out
out
pop
inc
mov
cwtl
test
adc
outsl
xchg
jno
mov
fnstenv
addr16
jge
subb
push
insl
jg
popa
adc
dec
push
jb
pusha
or
ja
xchg
mov
insl
cmp
sbb
lret
push
lret
outsb
dec
fdiv
mov
lea
popf
int
push
addb
call
ja
jmp
andb
mov
movsb
push
mov
xchg
rcrb
pop
jge
jns
in
icebp
loope
outsb
mov
add
lcall
and
mov
dec
repnz
int3
aam
cltd
ja
push
jae
sbb
dec
lock
out
mov
sbb
call
sub
add
sbb
insb
mov
mov
sub
test
xor
xorl
sub
push
repz
mov
movsb
mov
inc
inc
add
mov
lahf
jmp
mov
js
inc
and
and
insl
xorl
test
aam
test
pop
shr
lret
jle
push
jmp
add
mov
jp
mov
dec
in
dec
push
loope
jmp
jmp
cld
nop
sbb
lods
add
or
add
or
out
scas
lds
mov
movl
and
mov
addb
sub
jbe
sub
int
rcll
jecxz
ds
pop
mov
lret
xchg
imul
sahf
subb
push
mov
mov
dec
faddl
pushl
ret
mov
mov
xchg
adc
fidivl
push
ficomps
inc
inc
xchg
and
dec
sub
cmpsl
aam
aas
ret
lock
and
movsb
mov
scas
lret
adc
lret
xchg
push
movb
pusha
push
popf
mov
xlat
inc
jno
fidivs
int
mov
pop
nop
or
clc
xlat
stos
push
mov
mov
jne
fsts
pushf
xchg
xchg
jp
xchg
inc
repnz
push
add
mov
sbb
hlt
fbstp
dec
movsl
or
pusha
jp
lcall
daa
jne
popf
jnp
ds
mov
testl
mov
mov
push
push
mov
mov
iret
cmpb
add
xchg
mov
lock
aad
cmp
sub
sbb
xor
mov
xchg
xorb
cli
sahf
push
loop
or
or
mov
xchg
fs
aas
sbb
dec
icebp
dec
inc
cs
bound
mov
pavgw
out
hlt
int3
mov
pop
jae
xchg
pop
aad
cmpsl
pop
mov
notl
sub
push
pop
icebp
jmp
add
mov
outsl
jmp
xor
stos
and
repz
add
sbb
pop
daa
movsl
cmp
and
ljmp
lcall
movsl
xchg
jmp
jns
sub
in
inc
mov
loope
jmp
movl
lret
jl
sbb
loop
mov
aaa
push
add
mov
lea
xchg
xorl
dec
cltd
push
jmp
pop
cmp
movb
and
aad
xlat
insl
inc
lret
push
mov
cs
sub
mov
negl
popa
push
mov
jae
lods
jle
es
lret
mov
push
push
mov
pusha
mov
out
mov
dec
or
pop
cmpsl
xor
insb
adc
fists
idivl
rclb
inc
dec
jno,pn
fdiv
pop
inc
jbe
add
mov
mov
addl
jnp
add
call
inc
inc
xor
fldcw
lds
ret
push
jns
dec
mov
add
xlat
mov
ljmp
sbb
push
dec
xor
js
outsb
pusha
push
out
adc
data16
mov
in
fs
dec
and
xchg
or
or
push
adc
js
add
cmp
leave
mov
fmull
sbb
mov
push
dec
jecxz
mov
add
xchg
cmpsb
clc
xor
idivl
mov
rorl
mov
int3
and
xchg
pop
repz
mov
push
lock
in
test
jno
popa
data16
mov
mov
mov
loop
in
test
les
inc
sbb
in
lock
or
xlat
mov
sbb
push
shrb
inc
jae
arpl
iret
lret
enter
lret
cmpsl
test
push
pop
cs
mov
xor
insl
js
sbb
shll
lcall
imul
cs
push
cmp
cmp
cmp
in
ja
mov
gs
int
rol
and
push
ficompl
jbe
ret
cmp
xor
push
mov
nop
jns
cmp
pop
cmp
push
add
xchg
mov
mov
insl
insb
les
pop
jp
dec
rol
lods
or
push
aad
cmp
mov
lahf
jecxz
pop
shl
pusha
nop
mov
cltd
inc
cmpsl
mov
mov
mov
outsl
shrl
xchg
and
inc
xchg
push
jge
lret
pop
mov
movsl
and
ret
mov
add
fldt
aad
and
lahf
enter
push
jo
aam
mov
push
pop
mov
xchg
ja
sub
and
leave
ds
inc
insl
ror
leave
sub
shufps
sahf
jp
mov
mov
je
sarl
cmc
outsl
push
pop
loope
cs
add
and
aaa
sub
lock
pop
ja
sub
pop
cmpsl
xchg
vsqrtss
jecxz
cmpb
std
jecxz
addr16
add
pop
lods
test
pop
je
sub
mov
int3
das
test
andl
stos
push
xchg
stos
or
fdivl
push
dec
test
cltd
sbb
push
test
mov
mov
add
out
aam
dec
inc
pop
in
xchg
and
cld
xchg
adc
jmp
insb
fcmovne
mov
mov
jbe
or
xor
add
cwtl
pusha
jbe
fidivrl
inc
adc
sub
pop
movsl
pop
pop
test
cmp
arpl
adc
mov
adc
cmpsl
cmc
sub
cmp
dec
iret
push
jb
adc
pop
lret
adc
push
ja
jbe
jnp
sub
les
mov
mov
ret
pop
ret
test
pop
jbe
push
clc
or
adc
inc
push
repnz
push
cmp
or
shll
mov
negl
cmp
sbb
pop
clc
sbb
fs
xchg
xor
aad
jmp
rcrb
push
add
inc
dec
sub
xchg
and
into
push
jmp
jno
inc
ret
bound
inc
out
repnz
and
scas
xchg
and
jle
mov
fisttps
addb
jmp
add
jp
inc
cmp
out
xchg
lcall
fstpl
mov
jo
stos
lods
scas
xchg
and
testl
xchg
sahf
jae
sbb
xchg
dec
outsb
lret
jecxz
cmp
std
popa
inc
inc
je
jae
jg
repnz
xchg
adc
inc
mov
mov
xchg
adc
imul
fcoms
xchg
mov
sub
cmpl
inc
jp
inc
mov
stc
push
jl
je
push
adc
add
rcl
adc
std
and
or
pop
cmp
in
xchg
cmp
pop
or
inc
pop
popf
pop
jp
push
out
push
sbb
rol
mov
js
mov
mov
push
into
fcoml
cwtl
js
xchg
and
lods
fiadds
cwtl
cmpsl
fimuls
repz
sub
movsb
xchg
pop
shlb
dec
mov
test
in
jno
adc
jmp
out
les
pushf
sti
dec
push
dec
movsb
cwtl
mov
dec
int
pop
adc
ret
jns
cmp
fnstenv
incl
sub
or
sbb
xor
mov
out
shll
cmc
push
pop
stos
iret
adc
dec
loope
xchg
ret
aas
ret
or
mov
data16
repnz
mov
mov
pop
daa
inc
insb
ficompl
jp
jns
inc
cmp
or
ret
or
aas
sbb
xor
xchg
lret
mov
pop
jp
into
mov
pop
xchg
gs
mov
insb
jle
mov
je
outsl
sbb
outsl
mov
in
xor
add
dec
jb
lcall
push
xchg
sub
dec
pop
dec
popa
mov
outsl
aas
cmp
dec
inc
mov
ds
sub
repnz
cltd
repnz
mov
sub
fsubl
ficomps
or
into
cmp
mov
outsl
and
inc
loope
ss
enter
jno
cmc
mov
loop
dec
ljmp
adc
mov
shll
mov
cmp
dec
leave
xchg
bound
mov
jecxz
js
fldt
jg
outsb
aaa
call
inc
ficoml
pop
insl
inc
div
in
imul
mov
mov
rcr
leave
call
push
cmpsl
enter
jecxz
loop
jecxz
cli
nop
xlat
aaa
int
iret
and
pop
hlt
mov
jp
test
ss
enter
pop
push
jg
shll
aaa
mov
push
xor
pop
pop
insb
pushf
lret
aaa
or
pop
fcoml
cmp
dec
inc
cwtl
inc
loop
loopne
push
mov
pop
dec
bound
out
sub
adc
mul
mov
in
pop
and
mov
add
mov
xchg
insb
and
in
push
add
mov
add
xchg
inc
sti
and
loop
jo
sti
and
pop
mov
sbb
cmc
add
testl
bsr
jecxz
test
insb
add
das
adc
dec
xchg
sbb
dec
stos
enter
pushf
pop
mov
and
cli
mov
push
xor
jge
xchg
and
movl
mov
sti
arpl
cmp
sahf
daa
movsb
adc
jns
fsub
push
or
inc
or
inc
jnp
lahf
sti
sub
lods
mov
mov
pop
dec
pusha
lock
jmp
fwait
sub
es
frstor
add
repnz
mov
and
popf
loopne
sbb
dec
lret
add
mov
sarl
pop
jp
sub
leave
xchg
adc
and
and
jne
fsubs
out
xor
or
xlat
add
jp
inc
es
popf
add
enter
cmp
mov
lcall
imul
aas
jbe
adcb
out
in
push
xchg
mov
add
cwtl
les
addl
dec
push
mov
jae
push
jne
xchg
sti
cmpsb
jne
je
or
mov
mov
bound
xor
out
arpl
and
jp
leave
insl
icebp
test
in
lahf
inc
in
dec
add
dec
mov
sbb
aad
loope
mov
cmp
dec
fistpll
push
add
cmp
cli
cmp
dec
popf
jb
xor
outsl
jbe
sub
or
add
fmulp
popa
lret
out
xor
xchg
pusha
pop
mov
fptan
mov
fwait
inc
addr16
xlat
cmp
cmp
lret
dec
sbb
mov
rorl
mov
decb
push
adc
pop
pushf
add
fnstcw
jae
and
mov
out
mov
in
int
ja
inc
push
iret
pushf
dec
jbe
xor
dec
insl
push
loope
aam
mov
jae
insb
add
xlat
shrb
inc
add
jnp
les
inc
xchg
ljmp
pop
sub
in
inc
xchg
jb
insb
push
scas
mov
or
icebp
fsubrs
sub
in
dec
push
inc
sahf
xorl
sub
mov
cmp
lret
repz
xchg
aam
outsl
test
je
lcall
pusha
xchg
or
xor
mov
lods
xor
mov
inc
inc
xchg
xchg
test
popa
cmp
xchg
xchg
sbbl
dec
addr16
loopne
mov
sub
cmpsl
push
dec
addb
ficoml
xchg
std
test
dec
inc
lea
fidivrs
and
out
in
mov
mov
inc
les
shl
sub
std
fidivrs
and
mov
cltd
mov
loop
scas
pop
enter
mov
hlt
mov
push
fwait
pop
mov
mov
and
dec
inc
mov
pop
loop
jbe
and
inc
movsl
sub
aaa
inc
pushf
xor
or
xchg
mov
cltd
sub
mov
lea
mov
stc
in
dec
test
or
dec
sahf
and
push
inc
xchg
push
cld
lahf
push
add
insb
fsubp
mov
mov
and
xchg
push
aam
stos
fdivs
movsb
sbb
jae
cmp
push
daa
arpl
imul
cltd
pop
mov
das
dec
jge
loope
nop
les
les
jmp
enter
es
sbb
push
or
nop
add
mov
sarb
decb
fs
sbb
mov
lahf
out
xchg
jge
stc
test
jp
pop
pop
adc
cmp
xchg
push
shll
insb
sbb
mov
cmp
inc
leave
adc
push
inc
aad
push
mov
or
orl
std
jnp
test
xor
push
ds
add
dec
pop
adc
and
sbb
cltd
sarb
sbb
pop
add
std
sub
cmp
int3
imul
out
mov
leave
pop
in
in
aaa
rorl
repz
mov
in
push
cmp
loopne
ja
jbe
mov
mov
ror
inc
aam
push
je
mov
mov
lea
fwait
cmp
mov
pop
xor
lret
xchg
xchg
je
dec
inc
rolb
xor
imul
adc
setge
sbb
mov
or
in
insl
pushf
test
call
int
in
mov
imul
shll
lahf
mov
loopne
mov
push
push
out
int3
mov
fstl
xor
mov
rcrb
test
dec
cld
popa
movsb
loope
xchg
sbb
adc
sti
lea
pop
out
inc
jb
jmp
and
sub
jns
jmp
push
and
mov
lock
and
repnz
fs
push
mov
bound
sbb
jo
cmp
hlt
or
dec
pop
pop
outsl
ud1
push
sub
jnp
pushf
out
sbb
popf
fistpll
arpl
call
xlat
mov
lods
ret
in
stc
mov
push
je
dec
xchg
test
mov
fwait
imul
mov
lods
nop
or
outsl
inc
loope
jns
les
aas
add
nop
push
push
aas
push
xchg
inc
mov
ds
mov
iret
pushf
adc
jae
aam
fstl
ret
fcmovnb
mov
mov
mov
mov
or
xchg
fcoml
ljmp
std
cltd
jo
insb
aas
mov
dec
jo
mov
ror
mov
loopne
cli
out
fdivs
stc
div
and
mov
ljmp
jp
mov
add
mov
sbb
cmp
xchg
scas
mov
aam
pop
or
stc
mov
das
popf
push
push
mov
ds
mov
mov
mov
mov
test
adc
imul
dec
mov
pusha
cs
pusha
mov
and
mov
adc
sub
mov
mov
pop
scas
adc
rdtsc
pop
ret
pushf
test
pop
mov
sarb
xor
xchg
add
jecxz
out
cmp
fisubrs
push
dec
mov
xchg
out
or
pop
andb
jl
mov
call
xchg
jl
pop
mov
pop
aaa
cltd
daa
mov
pop
sahf
adc
je
add
in
es
mov
loopne
mov
sub
pop
cltd
mov
inc
xor
imul
push
jnp
pop
pop
std
cmpsl
push
cmpsl
shrl
xrstor
loope
pop
loope
fiaddl
mov
adc
cmp
das
adc
add
in
xor
inc
and
mov
mov
test
fnsave
dec
pop
mov
xchg
dec
cld
out
add
mov
test
movsl
pop
mov
adc
inc
pop
jb
xor
pop
shll
ss
insb
test
inc
push
shrb
dec
lret
cmpsb
imul
cs
fbld
out
insl
shlb
ljmp
xchg
and
push
mov
or
xchg
aad
cmp
jbe
adc
add
int
push
or
pop
andl
arpl
ret
es
rcrb
xor
lods
loop
shlb
mov
stos
push
push
xor
mov
adc
in
add
test
pushf
jle
xchg
ret
jae
aam
cwtl
mov
inc
ja
dec
imulb
dec
sub
in
lods
fdivr
xor
jg
pop
sbb
sub
out
inc
jb
insb
pop
sub
in
sarl
jp
dec
imulb
cld
adc
pop
xor
jae
pop
mov
aaa
test
jno
mov
popa
idiv
sub
pop
or
mov
ljmp
sub
iret
outsb
out
and
add
out
ljmp
sbb
rcrb
push
mov
sub
in
adc
pop
cmp
ja
sub
push
dec
imul
jns
cmp
lds
push
sub
daa
leave
fwait
sbb
sbb
cmpsb
mov
sub
push
xchg
add
mov
jbe
lods
xor
in
inc
jecxz
ds
test
sub
dec
push
mov
mov
or
out
or
jp
pop
int3
jae
pop
inc
mov
xor
mov
or
andl
push
dec
out
sbb
fidivs
jno
mov
push
dec
out
scas
out
enter
enter
or
orl
pop
or
outsl
aas
jmp
shll
in
xchg
sub
inc
push
dec
mov
sub
pop
xchg
add
bound
and
shrl
lcall
ss
adc
pop
imul
aam
dec
cmp
fcomps
xchg
bound
cmp
jg
sahf
cmp
gs
mov
adc
fildll
jnp
es
sub
gs
mov
lret
out
sbb
adc
adc
scas
mov
pminub
jecxz
in
inc
rcl
xchg
fldcw
stos
sub
cmp
ret
ficompl
mov
dec
and
mov
pop
mov
movsl
dec
test
testl
aam
or
dec
cmpsb
test
rcrl
fldz
xchg
lea
es
stc
sbb
cld
pop
js
loopne
arpl
std
and
idiv
mov
cmc
nop
mov
imul
loop
mov
pop
mov
jbe
fstps
fsubr
ljmp
xor
mov
adc
stos
fcompl
add
mov
fmuls
adc
pusha
pop
in
cmpsb
xchg
mov
xchg
sarl
xchg
pop
jge
jb,pt
sahf
sub
lret
adc
out
jge
mov
int
and
movsl
mov
cld
mov
loop
sahf
lods
mov
ljmp
movsb
xchg
ss
xor
fwait
cwtl
pop
cli
xor
ror
sbb
jo
and
mov
adc
push
in
and
in
sbb
mov
lret
mov
int3
aam
or
divl
mov
mov
jle
clc
jp
inc
test
xchg
cs
stos
int3
flds
stos
maskmovq
fistpl
mov
mov
and
idivb
or
mov
pop
mov
mov
dec
loop
mov
jmp
bound
push
lea
repnz
or
lcall
sahf
movsl
push
dec
push
cmp
jg
xor
mov
incb
in
inc
cmp
sub
mov
dec
push
stos
xorl
aam
dec
stc
cmc
sub
mov
xchg
call
inc
dec
inc
mov
jle
xchg
fidivrl
pusha
repz
fs
pop
les
in
xchg
jge
push
insl
cmp
insl
lret
add
aad
sbb
push
adc
jle
aaa
inc
mov
jnp
dec
test
adc
repz
dec
notb
repnz
cmp
adc
daa
and
js
adc
fucomp
outsb
jg
jle
xlat
sbb
hlt
pop
jbe
mov
inc
sub
imul
ror
add
fcoml
outsl
xor
mov
cmpsb
arpl
test
mov
cmp
adc
xchg
jb
cmpl
lods
sbb
add
in
mov
popf
int3
and
call
adc
jle
add
mov
and
mov
jno
dec
scas
mov
ss
add
xor
or
imul
cmc
sbb
sbb
mov
adc
mov
cmp
js
stos
notb
loopne
cltd
dec
mov
inc
aam
add
repnz
inc
mov
call
dec
sahf
scas
add
mov
sbb
xchg
push
cmp
inc
je
nop
cmp
inc
ss
lods
mov
or
and
shrl
mov
dec
xchg
nop
dec
pusha
and
stos
push
adc
rcrl
cmp
pushf
lret
dec
fnstcw
xchg
aaa
mov
push
testb
push
xlat
xchg
popa
xchg
inc
pop
roll
lock
mov
stc
into
or
fsubs
jmp
test
mov
hlt
fdivrs
mov
xlat
sub
hlt
and
inc
push
pop
fwait
mov
leave
fldt
xor
mov
dec
adc
and
sbb
adc
nop
dec
arpl
xchg
inc
cmpsb
mov
xchg
hlt
movsl
shll
rorb
inc
pop
and
repz
mov
hlt
fcomps
clc
fsubl
rclb
xchg
sbb
xchg
inc
cmp
loop
xchg
lret
and
push
mov
add
xchg
mov
sti
or
mov
loop
mov
dec
clc
sub
lock
sub
mov
dec
add
imul
adc
lea
nop
out
ss
fnstcw
mov
inc
std
or
aaa
xchg
push
mov
sbb
dec
pushf
inc
popf
cli
fcoml
mov
mov
insb
adc
iret
scas
xchg
aaa
leave
or
xor
sahf
adc
pop
xor
mov
fstl
aam
dec
lds
outsl
ja
test
shll
push
inc
pop
mov
sbb
fcomps
and
popf
das
nop
pop
je
mov
hlt
imul
sbb
out
inc
aas
mov
pushf
sbb
and
out
sub
push
cmp
fwait
gs
xor
inc
xor
pop
mov
outsl
inc
jno
sarb
add
jg
addr16
mov
mov
dec
aam
mov
or
push
cmp
add
dec
aam
ret
or
int3
mov
mov
arpl
scas
arpl
incw
push
shll
push
jns
jp
or
mov
das
fidivs
aaa
push
adc
pop
cmp
push
jle
jbe
xlat
adc
enter
fwait
stos
arpl
test
cli
es
lock
xchg
scas
xchg
movsl
inc
les
push
pusha
fldt
mov
xorb
mov
cmp
fincstp
adc
push
mov
sbb
cli
xchg
add
add
mov
mov
add
in
add
or
repnz
jns
ret
insb
les
mov
ljmp
repnz
jge
lea
clc
push
enter
xchg
push
push
sbb
fsubrs
lods
jmp
mov
cmp
xchg
adc
jb
jb
ja
xor
inc
nop
mov
ss
test
xchg
jge
xor
xchg
mov
pop
rcl
sahf
lods
sub
les
and
mov
xchg
in
enter
adc
mov
dec
mov
fwait
stos
shlb
loop
out
jns
jg
mov
aad
jno
dec
je
xor
fidivrs
into
xchg
push
imull
xor
out
test
mov
cmc
iret
dec
jae
nop
add
mov
adc
or
out
mov
imul
ror
jne
popf
lahf
mov
pop
dec
cmp
sbb
jb
xor
cltd
std
inc
fcmovnu
in
dec
enter
cmp
sub
stc
add
pop
scas
push
test
pushf
mov
xchg
arpl
mov
sub
mov
or
add
cmp
mov
shll
addr16
mov
xor
inc
push
repz
daa
add
add
mov
xor
add
rol
cmpsl
xlat
lock
push
or
xchg
daa
inc
cmp
pop
je
mov
xlat
fmulp
jae
cmp
lret
xchg
mov
cmc
pop
adc
std
mov
sub
push
lea
add
xor
test
jb
dec
adc
sbb
inc
pop
cmp
jle
inc
out
sub
stos
mov
push
push
xchg
cmp
out
mov
fimuls
sbb
or
daa
outsb
imul
lods
jl
push
jg
fstp
or
movsl
bound
addr16
lds
std
xchg
lcall
data16
mov
lds
mov
xchg
daa
xchg
imul
test
push
sbb
mov
ss
js
mov
mov
cs
mov
add
inc
xor
enter
add
popa
ret
dec
sub
in
add
icebp
jbe
pop
sbb
add
dec
dec
xlat
outsl
test
notl
fwait
push
popf
cwtl
mov
pop
adc
insb
and
inc
mov
push
mov
rolb
fwait
or
call
sbb
movsl
arpl
clc
xchg
js
outsb
sbb
fists
repnz
push
imul
jno
dec
orl
mov
imul
ljmp
pop
aam
xchg
xchg
and
cmp
fidivrs
and
mov
sbb
sbb
mov
pop
jno
xchg
loope
sub
outsb
sbb
mov
jae
or
jle
ljmp
fildll
int
decl
cmp
jns
int3
cmp
outsb
inc
jo
sarb
outsb
cwtl
sub
mov
pushf
xor
mov
loopw
cli
fstpl
dec
inc
mov
scas
pop
xlat
ja
pop
jge
lahf
mov
jo
adc
movsb
popa
add
aam
cld
jecxz
rcll
push
hlt
daa
push
adc
xor
jp
imul
insb
push
lods
jl
shrb
das
shll
stc
aas
enter
mov
xchg
daa
lods
sahf
mov
cmpsb
push
les
frstor
cmpsb
push
fwait
stc
cld
mov
mov
loop
adc
dec
jbe
jecxz
add
cmp
sbb
sbb
mov
lock
int
dec
in
daa
js
daa
xchg
lahf
sub
test
rcl
mov
gs
cmc
jecxz
pusha
or
roll
cwtl
add
adc
shr
sub
xchg
scas
lahf
cmpsl
xor
popa
fidivrl
pop
cmp
mov
mov
jbe
sub
adc
jnp
add
imul
cmp
sahf
scas
repz
bnd
out
lret
loop
mov
test
dec
add
dec
push
outsb
lcall
cmp
stos
xchg
mov
pop
ret
inc
popf
dec
aas
clc
dec
cld
ss
mov
pop
or
inc
shrl
test
and
sbb
imul
enter
pusha
insb
xchg
sub
je
adc
xor
jl
and
or
pop
clc
or
adc
inc
dec
cmc
xor
ja
dec
cmp
sbb
fcompl
mov
enter
rol
push
icebp
xor
xchg
das
add
dec
cmp
adc
add
xor
add
mov
cmc
popa
addr16
icebp
insl
xchg
pop
dec
push
test
sbbb
jbe
imul
imul
or
out
inc
insl
pop
dec
sarl
ficoml
nop
xchg
jns
daa
js
sub
rcr
and
push
mov
subl
lods
imul
xchg
fbstp
pop
sarb
insb
fdivrs
rcl
js
cvtps2pi
fmulp
lods
cmp
push
mov
ret
and
test
mov
movsl
loope
scas
push
mul
xchg
outsl
stos
cmpsb
shlb
push
stos
push
mov
mov
adc
jns
and
inc
lods
mov
jecxz
inc
ljmp
into
xchg
aam
mov
and
or
cmp
xorl
adc
adc
imul
dec
dec
add
sbb
jmp
out
dec
xor
push
negl
daa
pop
test
mov
pop
mov
mov
cmp
jns
repz
jno
dec
dec
ficomps
shll
shl
xchg
add
mov
sbb
pop
popf
inc
xchg
pop
mov
ljmp
rorl
add
mov
out
mov
mov
pop
int
xor
push
test
xor
int3
loope
pop
out
scas
push
pop
cltd
pop
loop
lcall
push
test
xchg
fs
mov
mov
mov
cli
xchg
mov
int
ds
push
xchg
sub
mov
cltd
pop
int3
push
dec
aam
mov
push
fstpt
mov
fildll
push
mov
pop
popa
rcll
mov
movsb
jmp
or
mov
mov
pusha
ds
cmpsb
aad
mov
ljmp
pop
pusha
jnp
loop
mov
mov
aaa
mov
mov
inc
xchg
jns
pop
jge
sahf
mov
lahf
enter
jbe
iret
or
inc
dec
jge
js
sbb
jnp
sub
stc
outsl
dec
mov
in
sub
hlt
push
mov
and
jne
out
lods
out
fisubl
xchg
jmp
push
adc
fnstenv
mov
inc
adc
and
imul
xor
mov
or
subl
push
out
mov
push
or
dec
fidivrs
or
pop
sbb
pop
stos
xchg
push
mov
push
or
pop
scas
adc
and
hlt
cmpsl
adc
mov
lret
jno
push
out
inc
adc
sbb
pop
mov
lock
jae
aad
jmp
adc
adc
xchg
xchg
mov
push
sub
mov
push
aas
fs
mov
mov
stos
in
cmp
jl
adc
push
push
push
lods
push
lds
adc
sbb
adc
jbe
in
adc
push
insl
xchg
mov
aas
add
test
dec
mov
inc
mov
sbb
pop
or
scas
pop
mov
adc
sbb
rcl
mov
rcr
dec
jle
pop
popl
rorb
jp
aas
fcoml
or
jl
push
adc
xor
loopne
and
frstor
inc
and
fdivl
fcmovu
jne
xlat
lds
xchg
stos
push
ret
dec
lcall
loope
pop
pusha
test
mov
sub
mov
lcall
ss
sbb
mov
les
stos
das
jb
jg
add
cld
xchg
mov
add
push
paddsw
mov
shlb
push
mov
cs
in
push
xchg
in
ja
fstps
insb
inc
dec
bound
loopne
push
div
cmpsl
and
idivb
and
mov
cli
out
jg
mov
cmp
xchg
inc
subb
jge
outsl
dec
inc
cmp
xchg
mov
sub
inc
mov
lret
jno
js
sbb
mov
out
mov
mov
jp
cmpsl
jbe
fsubr
and
pushf
stos
mov
test
fstpl
mov
jge
or
xchg
es
and
int3
and
addr16
scas
xchg
xor
stos
imul
pop
push
jmp
pop
leave
push
jle
xchg
pop
stos
clc
or
and
or
cmpsl
dec
adc
dec
or
jl
int3
jp
xor
jae
xchg
pop
mov
mov
mov
jge
subb
fsub
insl
lods
cli
jge
ret
sbb
mov
imul
adc
dec
shrl
add
sbb
push
cmp
jo
push
jno
shrl
push
jbe
ljmp
xor
adc
xlat
jp
pop
js
movsb
xor
xchg
inc
mov
mov
je
in
jbe
out
sbb
in
adc
xlat
adc
pop
cs
inc
mov
aaa
xor
mov
dec
data16
int3
add
cli
test
test
cmp
cmp
and
cmp
in
mov
shrl
pop
mov
push
std
xchg
les
in
sub
xchg
add
fdivs
test
daa
xchg
mov
cltd
lock
shll
iret
mov
out
mov
test
sub
fadd
cmp
adc
cs
lods
cmpb
std
outsb
add
aaa
aad
fidivrs
xor
jge
jne
inc
or
cmc
xchg
call
lds
dec
jae
push
test
popa
push
push
mov
loopne
loopne
push
xchg
or
push
repz
outsl
xchg
pushf
cmp
jle
sar
in
adc
divb
sbb
adc
mov
loope
lret
outsl
leave
xchg
scas
adc
xchg
rol
and
mov
fadd
push
sub
ds
mov
movsb
inc
mov
mov
xchg
pop
lea
outsl
and
xchg
int
push
push
aas
inc
fnstcw
pop
pop
loop
mov
rep
and
hlt
ficomps
add
pusha
imul
aad
and
push
cmpsb
cmp
jae
ss
sarb
shrl
ss
imul
mov
push
cmpxchg
fs
inc
dec
leave
test
fadd
xchg
int3
popf
stc
fwait
test
std
adc
sbb
jmp
in
adc
xchg
pushf
pop
jbe
ret
sbb
in
iret
pop
add
jg
clc
lcall
lret
mov
insb
xor
test
push
cmp
add
jg
xchg
xor
lods
sbb
call
and
cwtl
dec
dec
xchg
or
cwtl
je
jl
addb
jbe
xor
nop
out
adc
xchg
sub
adc
div
push
sub
pop
pop
xor
aaa
es
mov
sahf
fldcw
xchg
adc
filds
fcom
enter
rorl
jg
mull
jnp
or
mov
pop
cmp
in
sbb
jp
iret
or
dec
push
mov
jecxz
jmp
xchg
imul
aam
not
jae
cmp
push
aad
repnz
int3
pop
std
adc
enter
and
lds
push
lret
jl
jnp
xchg
frstor
out
sub
sub
popf
xor
adc
add
rcrl
xchg
mov
daa
mov
sub
lods
sbb
mov
pop
and
and
lahf
dec
sub
or
mov
loop
aam
and
addr16
popf
jo
fisubrs
insl
cwtl
sbb
mov
in
cmpsl
mov
cmp
cmp
inc
add
fdivrl
add
mov
jle
push
xchg
je
sub
stos
popa
cld
mov
or
scas
xchg
push
sti
fmuls
mov
mov
fucomip
je
sbb
jecxz
ret
push
arpl
xchg
inc
inc
movsl
add
sti
xor
jle
inc
dec
je
sub
insb
sub
sub
shrb
mov
and
mov
enter
or
mov
add
sub
lock
shll
push
repz
sar
xchg
arpl
mov
mov
jg
add
inc
shll
call
inc
bound
ss
xor
cmp
mov
loop
int
pusha
mov
loopne
dec
les
scas
pop
push
out
xlat
sub
adc
xchg
xchg
jecxz
jnp
pop
mov
iret
aam
popl
ljmp
daa
push
cld
repnz
scas
jbe
adc
pop
cmc
mov
cmpsl
lds
xor
push
jg
fbld
jno
push
loope
jb
pusha
xor
dec
xor
mov
dec
cmp
ja
push
xchg
ds
cmpsb
scas
dec
mov
inc
inc
jns
dec
cmp
and
ja
cmp
je
scas
xchg
imul
cs
push
outsb
xchg
fstpt
push
pop
adc
xchg
popf
sbb
push
iret
leave
xchg
xchg
call
lret
cltd
xchg
addr16
mov
dec
pop
dec
popa
mov
arpl
std
lret
jl
pop
clc
out
add
pusha
and
stos
push
mov
lcall
xor
lods
inc
sub
imull
test
cwtl
sub
dec
sbb
xchg
shlb
cmc
push
jmp
push
xchg
lds
mov
and
leave
jno
pop
rcrl
ljmp
xchg
lret
fstpt
shl
mov
jbe
loope
and
add
and
les
mov
sub
data16
add
dec
jecxz
pop
dec
sbb
pop
push
pop
pop
movsb
arpl
or
jb
xor
inc
push
test
or
hlt
xchg
jae
sbb
rorb
mov
inc
push
imul
pop
inc
clc
jmp
cmp
sbb
movsl
sbb
push
xchg
outsb
dec
inc
aam
lcall
mov
jmp
inc
das
fstpt
stc
jo
mov
sub
dec
stos
daa
adc
repnz
mov
leave
loope
lea
subl
fbstp
test
mov
mov
inc
ja
mov
jecxz
or
push
roll
iret
fcmovnb
sti
js
mov
pop
dec
data16
mov
test
ret
jb
mov
or
cmp
scas
adc
xchg
jno
loope
stos
cmpsb
pushf
fidivrl
cmp
andb
sub
rcrb
cs
add
dec
test
pop
js,pt
jmp
jge,pt
inc
jno
test
ficomps
push
aaa
loope
add
cwtl
fiaddl
mov
and
ljmp
mov
jl
lcall
jp
sbb
jbe
pushf
pop
jno
mov
and
cltd
lock
bound
inc
xchg
inc
faddl
and
push
mov
rcl
xchg
xchg
stc
iret
lock
mov
movsb
pop
sub
test
mov
sbb
movsl
sahf
nop
jns
push
add
mov
repz
enter
or
les
leave
daa
addr16
push
mov
scas
test
mov
cli
mov
mov
jmp
xor
ljmp
sahf
dec
bound
aas
out
sbb
adc
jp
dec
scas
dec
cmp
pop
mov
shll
sarb
shrd
mov
jp
ljmp
mov
mov
out
push
faddp
mov
cmpxchg
ljmp
cmpsb
iret
mov
jno
or
jne
daa
cwtl
into
mov
jnp
sbb
jecxz
pop
inc
add
imul
int3
leave
cmpsb
xor
cld
xchg
xchg
jecxz
imul
add
pop
adc
xchg
bound
je
inc
je
sub
jmp
dec
and
jp
fidivrl
pusha
sbbl
insb
mov
sub
push
stos
lock
insl
cmp
test
in
in
cmp
lcall
fsubrl
push
cmp
std
ret
or
sahf
fidivrs
getsec
mov
and
push
cmpsb
mov
and
sub
sbb
sbb
cmpl
rorb
push
push
xorl
call
or
push
xchg
rol
sbb
inc
jmp
inc
pop
call
sub
enter
sub
sub
push
jnp
inc
push
inc
outsb
xchg
outsl
int
addr16
in
jae
jmp
mov
xchg
sbb
mov
jo
and
test
pop
lods
jmp
dec
std
sbb
inc
dec
std
stc
lock
pop
mov
add
push
mov
gs
icebp
out
inc
jecxz
adc
nop
pop
rcrb
in
mov
sti
cmpb
lods
cltd
addr16
ds
or
mov
aas
movsl
dec
inc
rcrb
and
mov
or
mov
popl
xchg
imul
sbb
mov
cmc
push
push
cmpsl
xor
inc
pop
leave
or
cmp
adc
inc
xchg
pop
xchg
xor
push
sahf
add
adc
sub
mov
std
lods
cld
lods
rcl
bsf
dec
movsb
sbb
and
scas
sub
dec
adc
cmp
fwait
push
rcr
jae
out
nop
data16
mov
push
xor
cmp
and
xor
pop
inc
cvttps2pi
dec
pop
xor
jnp
and
in
loop
out
je
and
pusha
mov
out
ds
mull
rcrw
cs
xor
out
pusha
jle
xchg
xchg
sti
or
xor
dec
mov
add
add
xchg
int
sub
jge
stos
dec
mov
ljmp
mov
push
adc
out
in
lret
xchg
icebp
mov
and
cltd
dec
add
add
dec
pop
out
sti
or
dec
push
sub
stc
pushf
aas
mov
sbb
xchg
push
sub
testl
ljmp
xor
jle
pushf
pop
dec
pop
aad
add
fcos
dec
xor
sub
fs
rcr
aas
or
ss
pop
jecxz
mov
push
dec
daa
or
adc
fldcw
mov
push
shr
ret
and
clc
ja
pusha
sub
and
loopne
data16
je
outsl
inc
mov
cli
loop
pop
scas
ds
insl
sbb
imul
jp
mov
or
pop
sub
int
sub
imul
xor
loop
or
add
sbb
push
pop
out
jae
or
int3
xchg
jmp
add
outsl
mov
imul
ds
push
fnsave
pop
xor
inc
jns
fsubl
inc
lock
pop
leave
daa
mov
jo
cmp
pusha
add
stc
sbb
movsl
sbb
add
scas
pushf
push
mov
loop
xchg
add
cmc
sahf
and
push
inc
jp
xchg
sub
jl
sub
dec
stos
les
jmp
mov
ret
cld
sub
xor
push
jo
mov
inc
int3
or
cmp
dec
rcrl
mov
push
aas
mov
dec
jb
ret
nop
das
mov
jge
jmp
sub
xchg
mov
add
insl
clc
dec
sub
xchg
inc
aad
mov
dec
mov
pop
xor
rcrb
outsl
out
push
or
in
jmp
fimull
sub
sbb
jb
aad
jg
insl
xchg
clc
in
mov
sbb
inc
push
and
xchg
lods
rcrb
ss
cmc
mov
fadds
sub
sbbl
jge
lock
les
mov
dec
jecxz
jns
jmp
pop
ds
lahf
mov
lods
pcmpeqw
enter
int3
popl
mov
adc
ss
pop
mov
int
das
fcoml
inc
jmp
jns
mov
inc
int3
sarb
push
stos
lcall
out
jmp
add
sbb
sbb
outsb
adc
shlb
mov
mov
xor
outsl
imul
push
xor
mov
lods
ret
push
shrb
dec
pop
stos
sar
jbe
cld
fdivr
mov
leave
movsb
fbstp
repz
pop
mov
push
jns
mov
icebp
mov
fidivs
xor
mov
inc
push
test
dec
arpl
test
pop
je
dec
icebp
mov
dec
leave
out
or
mov
mov
lods
mov
jns
daa
sbb
jo
jecxz
xlat
test
add
dec
popf
sbb
and
addl
ja
pop
pop
movsb
dec
mov
adc
push
aas
out
outsb
jno
outsl
xor
sbb
ja
adc
cmc
push
insb
cmp
jl
int3
jmp
cmp
and
push
rcl
mov
lds
test
pop
pop
inc
lahf
mov
ret
lret
push
repnz
lea
testl
adc
mov
mov
call
add
in
dec
and
sti
loopne
rclb
xchg
shlb
add
mov
cmc
push
mov
dec
cmpsb
test
cwtl
fs
fisubl
int
fidivrl
fbld
jae
cmp
push
fadd
mov
das
test
dec
fnstcw
inc
sbb
or
mov
mov
xor
out
and
xor
jmp
xor
push
hlt
sbb
fcmovb
push
nop
pop
js
cmp
xor
xor
lret
ret
idivl
cmp
fistpll
jne
add
shll
cmp
hlt
mov
push
mov
mov
pusha
inc
xchg
into
sbb
push
xor
add
aaa
jp
fldenv
jb
insb
in
cwtl
sarl
mov
or
jnp
ljmp
and
and
fnsave
in
daa
dec
and
xchg
icebp
xor
cmp
fsts
addr16
push
push
jge
out
sarl
xor
jbe
fistpl
aas
pop
cmp
xor
sub
or
data16
out
or
dec
aaa
pop
pop
insl
cmp
pop
adc
and
adc
cmp
lods
mov
sub
hlt
test
es
ret
test
mov
mov
mov
inc
outsb
sti
orl
push
push
iret
repz
outsb
lock
adc
xchg
repnz
mov
jmp
outsl
mov
int
xchg
fidivrl
sub
sub
and
xor
jo
inc
pop
push
ja
popa
mov
xor
stc
cwtl
sub
cld
aad
fildll
sub
mov
test
fidivrs
jo
stos
js
push
scas
andl
mov
sub
loopne
push
adc
subl
pop
or
or
aam
and
adc
in
mov
cmp
jecxz
repnz
mov
mov
and
les
push
jnp
mov
test
and
add
push
push
xchg
rorb
popf
lea
mov
movsb
add
pop
push
or
ret
xchg
aas
mov
sbb
xor
call
xor
movsb
outsl
in
pop
push
pop
js
mov
lods
mov
lret
xchg
sti
mov
xor
outsl
jp
xchg
insb
adc
xor
aam
out
fsub
xchg
aam
iret
inc
shrl
scas
out
repnz
in
popf
jne
xchg
adc
insl
out
mov
aas
popf
loopne
and
fbstp
enter
sbb
push
ljmp
jp
cmp
jecxz
popf
sti
dec
adc
inc
js
mov
mov
scas
scas
jp
jb
sub
pusha
fsubr
mov
cmpsl
sub
inc
js
ja
mov
ljmp
push
fisubs
mov
aam
dec
or
and
cmpsl
xchg
cmp
aas
cmp
mov
sbb
dec
lahf
mov
xor
lock
sahf
mov
cmp
sub
lcall
lock
pop
cmpsl
mov
test
lods
ret
pop
xchg
pop
stos
push
dec
out
and
or
sub
push
and
jb
jmp
push
or
insb
inc
popa
shlb
rcr
lahf
mov
jne
outsb
shl
sbb
stc
test
cld
and
lea
sbb
adc
imul
push
aaa
pop
leave
pop
ficoml
orb
mov
rep
jo
mov
push
xorb
add
std
xor
and
out
xor
mov
sub
ss
arpl
es
xchg
aad
in
ds
fstp
stos
sbb
filds
jb
cmp
jecxz
test
jge
add
mov
aad
xlat
mov
shll
pop
jp
jne
inc
push
push
in
push
test
stc
nop
dec
inc
sti
incb
cmp
in
inc
pop
sub
inc
jge
sbb
mov
sbb
jo
mov
adc
icebp
jmp
cld
mov
lcall
cmp
movsb
addr16
mov
sbb
cltd
out
mov
repz
insb
push
fldenv
ret
ds
out
insb
adc
js
adc
mov
hlt
or
into
mov
fdivs
inc
sbb
les
xchg
jmp
movsb
scas
int3
test
lea
dec
sbb
sub
adc
mov
nop
sahf
mov
test
insb
mov
push
ja
cmp
ret
xchg
lret
scas
clc
jns
ret
mov
xchg
xchg
nop
and
ret
adc
dec
pop
les
shll
addr16
jne
and
pop
jg
mov
mov
inc
fisubrs
xchg
faddp
xchg
pop
sarl
push
pop
pop
add
rorl
dec
mov
cwtl
lods
cmp
fldcw
push
outsl
add
mov
in
test
ja
cs
add
jmp
cld
out
out
and
mov
and
movsb
sbb
inc
sbb
lahf
shl
mov
leave
mov
lods
sbb
inc
xor
push
loope
xorl
out
mov
jg
adc
mov
xor
sub
js
cmpsb
mov
or
stos
adc
fdivs
sub
leave
repz
add
cmp
lea
lds
xor
rcrl
fmul
or
inc
sbb
sbb
aaa
cmpsl
loop
mov
leave
movsl
inc
lahf
and
mov
sbb
sub
xor
dec
push
and
ficomps
loopne
notl
cmp
je
and
and
push
shld
jae
aaa
enter
push
pushf
mov
add
inc
xlat
add
outsl
pop
in
sarl
leave
adc
out
or
xchg
pop
nop
inc
jmp
xor
lds
and
es
sbb
shlb
xor
adc
push
mov
pop
cs
pop
or
mov
sbb
int3
pop
in
outsl
mov
andw
jle
jb
scas
jp
adc
icebp
and
int3
mov
and
xchg
sub
and
mov
pop
push
orb
jb
dec
mov
addr16
data16
fisubl
les
int3
test
fimuls
cmp
add
jb
mov
cltd
clc
fldenv
add
cmp
and
loop
sbb
or
adc
daa
pop
fwait
jbe
dec
mov
fmull
imul
ss
sub
jmp
pop
or
push
loopne
int
sarl
adc
mov
cmpsl
mov
loope
enter
fbld
stc
or
adc
jp
xchg
jns
mov
mov
and
add
aad
pop
pusha
and
mov
sahf
cs
shl
repz
mov
jmp
popa
rorb
xchg
xchg
pop
int
aad
insb
ss
sub
bound
xchg
sahf
lock
mov
jns
xchg
xchg
mov
mov
enter
mov
or
test
mov
sbb
stc
incl
pop
jmp
push
add
in
jo
xchg
mov
test
mov
and
dec
jae
sub
decl
xlat
push
in
mov
cltd
inc
dec
in
int
movsb
scas
popf
mov
xchg
mov
fldenv
sub
mov
jg
shll
xchg
jne
mov
and
inc
inc
add
push
sbb
stc
lock
ffreep
cmp
pop
sbb
pop
sub
ret
xchg
sbbl
popf
fcoml
bound
data16
mov
mov
sbb
adc
popa
pop
mov
adc
add
mov
es
addr16
push
movsb
cmp
xor
and
mov
pop
jmp
ficoml
adc
mov
sub
jl
adc
test
lret
mov
push
inc
iret
sub
push
dec
mov
push
lock
test
pop
outsl
mov
int3
addl
imul
out
and
mov
mov
dec
adc
out
adc
sti
mov
rcrb
lods
icebp
int
jg
lret
loope
xor
dec
dec
sub
cmp
or
jns
mov
decb
xchg
mov
add
or
loop
call
mov
pop
mov
int
pop
mov
aam
fdiv
push
test
repz
shr
mov
xchg
sbb
add
jno
xchg
sbb
lret
loope
adc
iret
and
sbb
inc
jp
daa
adc
dec
pop
daa
mov
cmpsb
dec
push
repnz
or
cmp
in
dec
out
xchg
mov
push
dec
push
jmp
leave
jmp
xchg
push
jle
mov
xor
sub
and
xchg
or
mov
repnz
es
xchg
scas
loopne
out
cmp
push
jnp
rorb
ret
fildll
jp
outsl
loope
dec
xor
mov
icebp
sbb
push
xchg
cmp
test
sbbb
repz
cmp
adc
xchg
pop
jae
adc
xchg
xor
roll
xor
push
fimuls
ret
lock
dec
mov
xlat
out
mov
dec
adc
push
rcll
xor
xor
cmp
cmpsb
jl
mov
adc
int
jno
add
push
mov
js
clc
fxtract
add
rcll
pop
xor
push
call
jno
sti
push
pop
loop
and
dec
repz
and
outsb
mov
and
xchg
dec
stos
inc
jp
aaa
outsl
je
repz
es
push
dec
jno
add
repz
mov
sbb
add
lahf
jg
mov
xchg
xor
fstp
push
jae
mov
xchg
imul
inc
mov
mov
xchg
shrl
cltd
xlat
mov
sbb
xorb
mov
ja
pop
stos
xchg
nop
cltd
mov
jg
sbb
adc
or
jo
jnp
sbb
les
adc
sub
lcall
iret
mov
mov
pop
sbb
pop
inc
mov
popa
mov
jg
dec
xchg
or
sub
sarl
movsl
adc
ja
xchg
movsb
or
popf
arpl
paddsb
movsb
lret
xlat
std
das
fildl
sub
shlb
cmp
test
mov
lods
pop
bound
dec
sub
fists
cmp
or
imull
aaa
out
sub
pop
xlat
ss
stos
or
sbb
jae
adc
ret
xchg
ljmp
push
scas
push
pusha
les
push
std
test
inc
and
inc
add
jg
lret
ljmp
inc
int
sahf
sub
add
adc
aaa
pusha
cmp
gs
pop
gs
inc
mov
andb
addl
pop
mov
push
leave
xor
xchg
rorl
in
call
jge
xor
test
inc
bound
imul
out
adc
and
cmp
int
or
cmp
or
scas
ja
mov
lds
outsl
shrl
sub
std
enter
test
add
xchg
mov
sahf
xchg
mov
sub
dec
pmaxub
fcomp
push
push
out
pop
es
outsl
xor
lahf
ret
pop
fadds
mov
push
jbe
std
jns
jle
jne
mov
cmp
or
stos
mov
adc
in
sbb
lea
scas
push
mov
jg
scas
testl
inc
xor
scas
in
je
cmc
xor
ret
popa
pusha
inc
das
mov
and
mov
mov
adc
sub
fsubrs
xchg
and
mov
lock
lcall
in
pop
add
ja
dec
ret
adc
repnz
repz
sub
xchg
cltd
jle
add
adc
and
dec
out
push
icebp
adc
mov
gs
xchg
rcl
ret
xor
xor
sarl
subb
mov
add
jne
adc
mov
movsb
sbb
cmp
jnp
jbe
insl
mov
es
xchg
sub
xor
popa
aad
mov
outsl
out
pextrw
iret
push
lcall
addr16
mov
les
mov
cmp
fmull
xor
cmp
sub
adc
push
xchg
add
xor
test
loope
pop
repz
add
loopne
mov
dec
cli
xchg
sahf
cltd
jmp
add
sbb
xchg
jge
mov
aam
or
mov
std
jmp
fildl
lahf
fsubp
lret
push
cld
or
jo
and
push
imul
pop
loopne
add
or
or
jnp
int3
icebp
and
and
pop
sbb
fidivl
sbb
sub
loop
jb
sbbb
add
ljmp
inc
push
mov
mov
pop
mov
sub
sub
in
xor
pop
jecxz
sbb
jle
insb
push
es
mov
pushf
mov
sub
push
cwtl
daa
dec
pop
cmp
out
mov
push
in
adc
andl
pushf
lcall
imul
push
movq
int
pop
xchg
fildll
dec
and
leave
push
mov
dec
loop
pop
sbb
dec
sub
pusha
jge
arpl
ja
push
push
in
adc
test
outsl
or
xor
out
xchg
mov
lret
inc
jnp
sub
fcoms
xchg
out
cmp
fsubrs
add
adc
negl
push
out
cltd
sub
sbb
sub
ljmp
mov
fwait
jmp
dec
mov
fiaddl
fwait
dec
arpl
sbb
mov
gs
in
mov
stc
sbb
in
aas
jp
sub
aam
xor
cmp
jg
mov
in
mov
aaa
push
inc
int
pusha
mov
icebp
cltd
or
jmp
mov
aam
cs
inc
sbb
fisttpl
popf
les
out
sbb
jmp
aas
push
aas
dec
popa
lea
inc
and
xor
pop
push
fnstenv
push
mov
js
xchg
insl
loop
jmp
push
adc
inc
or
or
mov
out
lahf
jl
xor
dec
lock
sahf
aam
adc
sbb
mov
mov
repz
mov
fsubrs
add
cmpb
jecxz
movsb
orb
xchg
iret
jecxz
lahf
add
pusha
js
cmp
mov
imul
es
js
icebp
pop
popa
jno
cli
xchg
push
sbb
pop
outsb
sahf
xor
gs
mov
movsl
push
ds
push
lret
sahf
pop
inc
into
cmpsl
aas
dec
addr16
cmp
hlt
fwait
mov
xchg
jl,pn
and
out
sbb
add
fwait
aas
shrl
or
enter
int
or
pop
push
lods
insl
jp
jle
xchg
xor
into
ret
lcall
pop
push
imul
sbb
push
dec
fs
mov
iret
mov
jb
mov
push
xchg
xchg
mov
call
mov
pushf
aad
ss
repnz
subl
icebp
push
clc
pop
int
inc
inc
xor
test
pop
mov
sbb
and
sub
mov
stos
fisubrl
imul
cmp
mov
cld
mov
jmp
shrb
push
jbe
push
pop
add
btsl
lds
mov
addr16
fcoms
sbb
xchg
scas
xor
push
sub
and
jmp
outsb
inc
sub
sbb
sub
fidivl
push
jmp
mov
cmp
mov
dec
in
mov
and
ljmp
mov
xor
ss
outsb
dec
mov
ja
cmp
lahf
rorl
pop
imull
aas
les
ds
adc
adc
pop
pushf
jecxz
ljmp
and
add
or
mov
mov
xchg
cwtl
stos
pushf
adc
inc
iret
xchg
int3
add
cmpsl
mov
ror
jno
in
mov
mov
jmp
sti
sub
sti
int3
jno
cmpsb
pop
jne
data16
cmp
imul
jno
nop
or
pop
movsl
inc
fildl
lret
sub
scas
add
roll
push
pop
inc
inc
mov
inc
and
dec
push
push
insl
scas
addb
in
xchg
xor
clc
and
or
rorb
xchg
orb
xchg
fisubl
in
iret
rolb
scas
fwait
mov
in
pop
jno
sbb
jno
pusha
inc
add
mov
adc
xchg
jo
jecxz
std
data16
mov
mov
dec
stos
inc
xchg
jl
mov
and
xor
fstpt
dec
cmp
imul
mov
pop
jecxz
cmpsl
adc
cmpsb
jno
xchg
stc
push
sub
push
lcall
jecxz
sub
iret
adc
stos
jnp
add
ret
cmc
push
cmp
cmpsb
pop
cmp
lock
cmp
movsl
mov
enter
sbb
ret
and
sbb
cmpsb
or
cmp
scas
push
adc
inc
bound
jl
and
mov
imul
xchg
ss
andl
hlt
lret
push
mov
mov
lods
aas
pushf
inc
ds
jmp
insb
pop
add
aaa
xchg
scas
stos
lea
lret
and
adc
movb
lahf
push
inc
jg
xchg
icebp
fcoms
add
popa
cmc
xor
cmp
fldenv
or
xor
shrb
mov
xor
aas
arpl
data16
jg
lock
js
fdivl
jl
mov
sub
or
repz
fdivr
xor
dec
dec
jge
mov
add
mov
xchg
rcll
sbb
jns
dec
push
mov
adc
add
inc
push
or
inc
lcall
and
xlat
jecxz
roll
jmp
sub
dec
pop
cmpsl
movsl
int
stc
insl
and
jg
push
or
roll
lcall
ret
ficompl
jl
cli
insb
pusha
out
push
dec
lods
mov
or
sbb
dec
push
insl
ljmp
aam
stos
mov
push
add
scas
ret
mov
or
adc
cmp
adc
fsts
and
jmp
hlt
out
ret
adc
xor
mov
jbe
test
mov
and
repz
add
mov
test
ds
clc
scas
xchg
mov
cwtl
iret
cmp
shlb
rcll
sbb
lods
std
movsl
adc
outsb
inc
add
ficoms
jp
cmp
ret
jns
xchg
addr16
push
sub
xchg
inc
int3
mov
mov
test
scas
sub
xchg
jmp
push
pop
nop
pop
int
mov
idivl
cmp
jge
pop
sbb
lret
in
push
mov
std
subl
bound
push
xchg
mov
jbe
fildl
cld
loop
ds
cmp
mov
push
inc
mov
addr16
dec
hlt
stos
shrl
mov
not
xchg
push
cmc
adc
xor
in
or
fcoml
or
nop
and
and
leave
push
jge
lcall
pop
push
inc
mov
adc
pop
mov
aas
dec
test
mov
sbb
shrl
popl
mov
dec
pop
cmc
daa
xor
push
std
jae
lods
mov
inc
sub
mov
pop
push
popa
push
and
push
sti
inc
pop
cmp
xchg
icebp
cld
loop
mov
stos
sbb
stc
xor
lods
lahf
xor
and
pop
out
cmp
jns
shr
bound
cmp
mov
scas
hlt
rcrl
sti
jmp
inc
popa
mov
pop
jmp
call
fstl
lea
nop
inc
pop
aam
idiv
xchg
repz
aam
sbb
rcl
jo
leave
fsubs
xchg
jae
mov
aas
xchg
add
je
popa
mov
pop
xlat
jb
mov
rcl
jl
mov
xchg
mov
ss
mov
adc
loopne
add
jae
jne
pop
leave
sub
sbb
lcall
inc
pop
jb
cwtl
fwait
and
adc
and
mov
jmp
insb
das
fists
sbb
cli
or
pop
and
daa
jmp
pop
ret
dec
lods
cli
testl
mov
xchg
int3
in
or
mov
pop
fwait
cltd
clc
pop
mov
pusha
sahf
sub
pop
leave
jmp
and
jo
add
push
iret
jno
ret
repz
cli
jecxz
in
or
mov
cli
addl
in
clc
jnp
inc
icebp
int3
push
ret
mov
xchg
data16
jg
cmp
loope
test
fdecstp
leave
sbb
adc
lret
movsb
cltd
cli
aam
call
mov
call
pop
mov
movsl
inc
out
xor
jns
mov
dec
cmp
xchg
lds
fcomps
xchg
out
or
add
shl
xor
roll
clc
or
out
inc
mov
ja
rclb
mov
and
fistpl
lock
sub
adc
outsb
pop
inc
pop
add
xchg
dec
mov
ret
mov
sbb
mov
andb
and
pop
les
mov
nop
stc
xlat
pop
xor
hlt
dec
mov
incb
icebp
mov
inc
cmp
adc
mov
sahf
mov
ja
push
fsub
lock
sbb
loope
pop
mov
mov
lods
lcall
adc
loope
add
mov
repnz
pop
add
mov
push
imul
cmp
cmp
inc
in
xorb
cwtl
mov
or
cmp
xchg
xchg
jecxz
fucomp
xchg
xor
sti
xlat
sahf
fs
jmp
aam
mov
dec
push
imul
stos
pop
inc
add
mov
lret
dec
xchg
and
jo
icebp
xchg
inc
shr
mov
bound
pop
mov
push
aas
inc
xor
filds
sbbb
pop
mov
cltd
xor
xchg
clc
mov
jne
stos
stos
jmp
jge
in
jnp
cmp
adc
insl
cs
faddl
dec
out
rorb
imul
loop
adc
adc
inc
stc
sti
xor
movsb
mov
movsl
jmp
lahf
pslld
std
jnp
std
loope
test
xchg
mov
insb
or
and
mov
cmp
ror
enter
add
push
xor
int
enter
adc
jno
iret
lea
sarl
daa
xor
ds
popa
lods
and
pop
cmp
jge
test
addr16
lods
call
jl
enter
loop
aam
aad
cmp
lret
ljmp
fnsave
loope
xor
cmpsb
aad
mov
sub
insl
inc
notl
popa
ja
dec
bound
mov
insb
nop
test
add
push
lods
and
lock
ret
cwtl
push
or
into
cli
cwtl
jl
cmc
push
scas
movl
sub
mov
jg
mov
loop
scas
and
add
lods
sahf
mov
mov
add
outsb
or
ds
mov
fadd
inc
sti
cmp
repz
addr16
xlat
mov
bound
sbb
lret
orl
xchg
mov
int3
adc
dec
fwait
add
jae
loopne
stc
or
add
jl
xor
aaa
mov
rcl
sub
xchg
pop
xor
out
into
cmp
clc
ljmp
xchg
pushf
aaa
addb
arpl
test
fstpt
mov
push
nop
push
pop
lahf
mov
inc
xchg
enter
rcrb
push
dec
sbb
fwait
in
lret
xor
aaa
cltd
inc
adc
push
jge
fbstp
mov
cmpsl
xchg
pop
lea
cmpsl
xor
movsl
outsb
aad
rcl
fwait
adc
sbb
jbe
sub
sahf
test
pusha
inc
inc
imul
lcall
inc
sbb
iret
outsl
scas
fs
mov
mov
lcall
pop
adc
sbb
popf
xchg
mov
std
adc
jne
loop
into
lods
cmp
mov
ret
dec
daa
mov
lahf
lods
inc
inc
push
addb
loop
and
mov
jne
leave
movsl
ds
insl
gs
daa
adc
inc
cmp
movsl
pop
cmovs
popa
in
cmp
ja
mov
jecxz
adc
jo
pop
or
xchg
pop
xor
jae
or
dec
jg
cmp
daa
addr16
inc
sub
pop
adc
sub
push
pusha
dec
sbb
push
insl
movsl
subl
mov
adc
or
js
cmp
scas
mov
data16
or
cwtl
mov
lret
pop
aaa
mov
sub
dec
dec
cmp
push
lods
addr16
pop
jecxz
add
dec
movsl
jmp
lods
stos
add
jb
inc
dec
stos
dec
dec
hlt
jle
lds
jg
sbb
out
jmp
push
enter
std
sub
aad
sub
loop
repnz
into
inc
xchg
ret
sub
ds
add
je
aaa
xlat
fstl
pop
cmpsl
js
iret
jb
jecxz
pusha
rorl
ss
leave
ret
shr
in
inc
in
cmp
adc
xchg
jno
arpl
not
cmp
int3
adc
mov
push
rolb
inc
inc
repnz
jp
scas
and
push
hlt
push
leave
fdivrl
dec
push
fcoms
rcr
sahf
cmp
loope
fistpll
es
imul
cmp
or
stos
sahf
or
lahf
out
mov
in
jmp
addr16
stos
lods
test
or
fisttpl
js
lea
lret
xor
sahf
cmp
test
cltd
stos
in
aad
decl
inc
popa
mov
adc
int
addr16
sub
pop
iret
out
sbb
iret
ds
jp
mov
arpl
lods
pusha
fidivrl
and
cmp
sub
sub
push
mov
and
sub
or
jmp
mov
insb
daa
clc
mov
xor
stos
pop
jbe
cli
lret
mov
insl
stc
and
or
pop
jge
xor
movsb
jl
inc
mov
popf
push
xchg
shlb
fs
in
in
adc
out
and
adc
iret
adc
jne
rclb
xchg
shll
jle
lock
lds
das
jns
or
sub
std
inc
lock
or
std
cltd
mov
sarl
sub
sbb
push
aas
mov
xor
pop
push
rol
negl
and
jp
jmp
add
sbb
sbb
mov
adc
sub
stc
test
jge
sub
lock
mov
adc
dec
xchg
rep
push
in
inc
adcl
xor
scas
pop
push
jp
mov
jno
insl
cmp
lahf
lahf
or
jno
jo
adc
fimull
rol
inc
ffreep
in
cmp
pusha
sbb
add
mov
inc
in
and
pop
sahf
scas
sub
and
sbb
dec
ret
cld
xor
fcmovbe
jg
lcall
loop
lret
mov
and
sbb
jl
push
jo
push
enter
pop
xor
add
or
inc
jmp
std
inc
xor
out
mov
xchg
insl
pusha
ja
mov
dec
hlt
dec
mov
mov
pop
mov
pop
inc
xchg
pop
fadd
or
daa
pop
mov
stos
lods
sbb
mov
shrl
js
loop
sub
clc
shrb
inc
adc
mov
in
int3
jne
negl
test
jecxz
push
adc
hlt
flds
dec
and
ss
sbb
gs
je
xor
test
xlat
fxam
cld
int3
enter
mov
push
sahf
aaa
xchg
andb
inc
push
jae
mov
outsb
inc
jmp
out
popf
jne
lods
int
sub
dec
hlt
int3
jae
jns
aas
and
daa
xor
push
pop
jne
cwtl
gs
pop
mov
outsl
adc
or
push
mov
cmp
scas
dec
cmpsb
pop
imul
xchg
flds
jmp
out
and
imul
add
mov
jns
cmpsb
shrb
lret
xor
test
inc
sbb
xchg
fildl
loope
scas
movsl
orl
mov
sbb
shl
movsb
xchg
aaa
fucom
sti
sub
mov
or
insb
imul
add
das
xchg
mov
addb
cwtl
clc
std
cs
mov
outsb
adc
mov
scas
cs
mov
stc
xchg
inc
jecxz
rcll
dec
or
jmp
adc
in
test
mov
pusha
shrl
repnz
mov
mulb
fsubrl
ror
dec
sahf
clc
rclb
mov
add
int3
mov
or
test
jo
faddl
lcall
mov
pop
jnp
aaa
adc
and
in
sub
scas
mov
loopne
fbld
dec
sub
in
mov
xor
pop
dec
cmpb
nop
cmp
daa
xchg
pushf
daa
test
in
clc
push
repz
dec
xor
pushf
lahf
insb
aaa
out
push
mov
add
loope
fcoms
ret
out
cmp
loop
js
push
jo
add
xchg
or
int
jecxz
xor
ds
stos
or
addr16
fmull
push
fldcw
mov
mov
scas
or
xchg
out
movsl
xor
and
or
pop
stos
adcb
or
enter
xor
fstpl
sub
ljmp
inc
repz
push
cmp
mov
rcrl
and
and
mov
int
cmpsl
test
xlat
aam
jnp
sbb
cmp
xor
push
lcall
mov
int
push
outsl
shll
repz
movsl
dec
cmpsl
dec
jno
mov
out
add
and
sbb
and
rcll
jnp
int3
xchg
xchg
sub
adc
cmp
jle
dec
pop
push
leave
push
movsb
and
jbe
mov
adc
ss
out
sbb
push
push
add
xor
xor
jne
sub
pop
popa
lcall
lahf
or
and
ret
adc
mov
jae
lea
xchg
mov
sbbl
sbb
mov
mov
ret
mov
mov
loopne
inc
stc
mov
adc
jecxz,pt
dec
cmp
shr
lret
and
jecxz
jp
mov
jo
mov
jle
imul
pop
jmp
lea
adc
out
cmpsb
inc
push
pop
and
aam
movsl
shl
mov
and
shl
test
add
sahf
fiadds
movsb
or
jmp
jb
aad
lods
or
add
inc
fsubrp
enter
call
int
xchg
jbe
xor
pop
and
pop
daa
cmp
int3
inc
add
xlat
xchg
add
ss
mov
pop
out
out
jmp
add
xor
mov
jge
rclb
mov
sub
arpl
sbb
movsb
call
ficompl
cmp
inc
mov
or
aam
in
loop
xchg
aad
xchg
int3
xor
mov
lahf
shrb
shrl
push
test
cmp
gs
scas
bound
nop
sbbb
mov
les
jp
dec
scas
inc
pop
addr16
pop
adc
mov
cmc
mov
cmp
cmp
dec
leave
xchg
lret
push
sbb
addr16
xor
test
rcl
push
arpl
in
xor
loopne
pop
mov
push
dec
mov
es
and
repnz
pushf
ret
mov
jns
popa
adc
jg
ret
inc
push
dec
cmp
and
jmp
or
test
scas
and
cltd
decb
sbb
sbb
adc
and
and
mov
in
push
aaa
enter
lock
mov
mov
mov
jge
and
stos
insl
jg
xchg
jge
jae
push
bound
push
xchg
lods
xchg
push
mov
loop
imul
fnsave
sahf
xchg
sahf
xchg
inc
jg
push
filds
mov
push
mov
jp
push
out
xchg
cli
repz
or
or
and
leave
jecxz
pop
aam
sbb
cltd
mov
and
inc
mov
sub
push
mov
les
ret
mov
fimull
xor
fidivrl
sub
movsb
or
cmp
insl
mov
lret
stos
mov
imul
jns
xchg
std
mov
fs
hlt
call
ja
and
sub
dec
lds
shrl
in
adc
and
mov
jl
rcrl
lods
pop
test
adc
push
pop
pop
loope
fstps
cltd
adc
sbb
and
or
mov
loopne
cld
mov
loope
sub
not
stos
sbb
add
mov
adc
jge
ss
push
repz
loopne
sti
mov
mov
adc
cmp
aam
lahf
repnz
ljmp
mov
jg
shlb
stc
mov
cmc
jmp
fidivrs
push
dec
in
xchg
jns
ja
leave
xor
xchg
das
sbb
repz
loop
xor
cmpsb
jl
call
sti
dec
and
test
add
inc
lahf
movsl
loopne
aad
fisttpl
mov
and
mov
dec
jae
std
xchg
mov
hlt
pop
bound
ficoml
fsubr
adc
jo
popl
push
jae
pop
pop
add
pop
sbb
lock
and
call
cmp
cwtl
cmp
pop
pushl
testl
cmp
add
test
lea
pushf
sbb
aaa
push
mov
aam
mov
cmp
and
add
sbb
imul
aam
add
xlat
loop
or
movsb
nop
and
jne
ret
cli
add
inc
es
xor
xchg
imul
mov
mov
xchg
jmp
shl
das
adc
and
inc
xor
call
cmp
jl
dec
push
sub
dec
add
push
jno
fmuls
lods
and
xor
inc
xchg
dec
mov
xor
mov
shll
sub
imul
push
mov
lds
inc
fwait
jg
rcrb
xchg
in
repnz
jmp
pop
push
sbb
pop
and
or
fwait
fwait
gs
in
hlt
push
dec
addl
ljmp
dec
ret
add
daa
cmp
cltd
sar
push
lock
sub
sub
push
xor
adc
in
imul
lahf
dec
ja
shrb
jbe
lds
and
outsl
add
dec
and
pop
pop
fwait
xchg
int
cwtl
js
sbb
out
xchg
cmpb
daa
repnz
xor
pop
pop
push
lods
aaa
cmp
int
sbb
adc
pop
xchg
dec
push
jbe
cltd
cmp
lcall
xor
repnz
jl
jp
pop
pop
mov
ds
push
lret
lret
mov
rorl
loop
ljmp
push
fisubl
std
mov
add
xor
sbbb
mov
stos
cs
lea
push
inc
cmpsl
fwait
scas
adc
mov
popf
cwtl
popa
dec
cmp
cmp
and
pop
aad
xchg
popf
jecxz
fistps
add
sbb
mov
jo
xchg
add
jns
gs
adc
andl
fsubr
pop
fs
or
inc
xchg
add
arpl
aam
jge
sub
mov
fildll
pop
dec
es
mov
mov
mov
cmp
xchg
hlt
loop
dec
sbb
lcall
cli
mov
dec
xchg
jl
flds
inc
icebp
bound
cmpsb
iret
xor
sub
xchg
loop
adc
or
loope
xchg
nop
jg
std
dec
mov
iret
mov
ss
cmp
lret
lret
jns
push
lods
mov
fs
inc
outsb
in
cli
xchg
ss
fisttpll
cmp
push
rcl
fimull
js
es
xor
lock
icebp
mov
popf
fidivrl
fwait
xorl
mov
mov
lahf
push
std
fstl
cmp
dec
pop
mov
addl
por
push
pop
pop
shr
call
mov
lret
popa
pusha
dec
shrl
push
jmp
push
roll
test
icebp
insw
sbb
out
dec
movb
loop
cli
adc
inc
sbb
js
mov
orl
incl
pop
loopne
sub
mov
or
scas
mov
ja
aas
hlt
fcompl
js
pop
add
push
jle
fsts
js
jmp
ret
insl
sbb
daa
inc
shlb
xchg
sub
mov
daa
out
xchg
or
cmp
movsl
pop
or
in
shll
or
addr16
sti
test
xor
out
inc
mov
lcall
mov
fwait
sarl
js
popa
xchg
and
mov
enter
cmp
inc
mov
es
and
orb
xchg
orl
scas
pop
sub
dec
testl
jns
jle
aas
leave
adc
jnp
loope
js
xlat
xor
mov
dec
dec
sbb
imul
dec
jle
xchg
repnz
or
and
xchg
push
loope
sub
movw
mov
mov
ret
movsl
inc
jnp
filds
cltd
aas
popl
out
scas
push
test
dec
mov
pop
dec
mov
adc
mov
xchg
int3
aad
cli
mov
int
adc
cmp
jno
inc
jno
fldt
movzwl
pop
xchg
repz
pop
test
leave
fcomps
testl
mov
push
adc
jae
mov
jnp
pop
fadds
pminsw
pusha
lcall
and
xor
xlat
lahf
sbb
sub
fucomp
aad
mov
ja
aam
loope
mov
mov
add
dec
test
lret
sub
cmp
mov
mov
dec
and
jb
xchg
pop
mov
addr16
inc
inc
aas
mov
jle
cmp
int
xchg
orb
cmp
add
lahf
add
scas
lahf
fldt
mov
jl
cmp
sbb
dec
ret
stos
mov
cs
pop
mov
xchg
scas
in
mov
inc
cmp
dec
mov
sbb
cmp
dec
inc
les
push
or
push
cmp
cmp
lds
ficompl
fcomps
aas
test
decb
mov
add
fisubrs
jge
or
push
pop
xor
adc
pop
mov
mov
out
inc
pop
jbe
loop
es
scas
sbb
mov
gs
pop
fmul
xor
mov
or
add
test
int3
cmpsl
cltd
ljmp
addr16
push
idiv
jns
mov
addb
out
ficomps
enter
repz
mov
mov
sub
in
lock
scas
in
dec
ficoml
bound
mov
xchg
sahf
ret
sbb
dec
aad
fnstenv
out
sub
push
adc
lcall
into
loop
int3
outsb
and
movsb
repz
dec
negl
rorl
jmp
sbb
xchg
faddp
pop
pop
insl
inc
mov
add
cmp
jb
outsl
dec
xor
mov
jno
hlt
sub
test
outsb
sbb
es
scas
pop
xorl
or
pop
cmpsl
stos
or
xor
push
push
fwait
subl
lock
pop
out
movsb
push
dec
adc
hlt
xor
jae
mov
jne
jl
mov
jp
inc
inc
pop
add
ja
ljmp
push
cwtl
mov
into
dec
insb
mov
jae
cmp
shlb
icebp
sahf
popa
movsl
push
das
call
sbb
mov
xchg
mov
dec
repz
xchg
inc
mov
mov
sub
repz
js
mov
addb
adc
repz
das
xchg
pop
decb
sub
aas
add
std
or
cwtl
push
mov
sbb
xchg
hlt
jo
shrb
mov
call
mov
in
dec
pop
pushf
mov
sbb
dec
cmovl
add
loopne
cmpl
pop
or
sbb
repz
lea
loopne
lea
test
sub
mov
into
popa
fstpt
fistl
jns
xchg
inc
frstor
lgs
addl
mov
imul
dec
mov
xor
push
jb
into
xchg
adc
and
adc
xchg
push
lock
rolb
dec
mov
xchg
cmp
int
add
loopne
jb
sbb
adc
jb
popf
pop
fcmovne
mov
jb
cmpb
inc
cs
mov
imul
inc
addr16
test
or
sub
mov
xor
mov
cmp
push
aas
fildl
add
or
pop
das
cld
fadd
pop
sbb
mov
negl
les
fldt
mov
mov
mov
pop
test
pop
addr16
inc
ds
insl
sub
push
lret
popa
lods
clc
xor
dec
mov
popa
std
sub
sbb
pusha
xchg
int3
pushf
cltd
xchg
xor
jae
repz
pushf
pusha
pop
pop
test
fwait
sbb
sti
push
xor
push
xchg
fadds
dec
mov
cltd
mov
leave
cmpsb
lahf
sbb
ret
adc
cwtl
dec
mov
mov
dec
adc
push
jae
inc
outsb
sbb
test
add
in
mov
dec
cltd
cld
out
js
call
sbb
das
js
inc
aad
shl
mov
das
pop
and
cmpsb
ljmp
test
stc
xor
sbb
add
and
jge
or
xchg
dec
stos
fstpt
push
sbb
shlb
bound
inc
adc
sbbl
jmp
fwait
sub
cld
pop
sbbl
lea
xor
and
cmp
or
xchg
lret
popf
jle
and
ljmp
mulb
mov
fs
mov
into
mov
stos
jns
mov
pop
pop
in
or
in
pop
jns
and
nopl
in
cld
xchg
xlat
mov
int
sbb
repnz
popa
xchg
sub
mov
fsubs
mov
shr
arpl
cwtl
out
test
mov
fisttpll
std
adcl
fldenv
imul
sub
ss
mov
incb
push
cmp
push
icebp
jbe
out
bound
xchg
insb
cmp
sub
push
or
fbstp
pop
push
add
and
rcrl
add
les
push
orl
out
xchg
fsubs
push
or
pop
jbe
leave
sub
sbb
mov
dec
stc
xor
cltd
loop,pn
daa
xlat
ret
and
adc
test
cwtl
ret
sbb
js
inc
cmpsb
cmpl
pushf
outsb
pop
cmp
jp
adcb
les
into
xor
xor
jnp
sbb
loopne
adc
int3
out
lea
cmp
xchg
int
cwtl
sbb
mov
pop
addl
xchg
aaa
mov
das
stc
sbb
aaa
or
adc
dec
dec
pop
out
jg
cmpsl
faddl
jns
enter
dec
les
dec
pop
das
int3
adc
js
stos
xor
xor
insb
push
mov
inc
divl
jae
mov
call
out
je
fwait
mov
xlat
call
push
gs
mov
pop
inc
mov
pushf
jle
sbb
jae
mov
adcl
notl
jl
fs
adc
jb
mov
and
inc
mov
or
int3
dec
rcrl
lret
pop
mov
push
aam
aas
cmp
or
sub
pop
push
xchg
icebp
in
dec
pop
jl
arpl
cmp
aaa
sub
ret
rorl
cmp
or
dec
insl
push
test
inc
int
adc
sub
imul
iret
sub
int3
jb
push
adc
cmc
xchg
sub
push
je
clc
std
mov
cmc
movl
setb
inc
mov
adc
repz
add
push
repnz
hlt
xchg
xchg
and
scas
push
jmp
clc
pop
int3
jb
repz
sbb
pusha
das
jmp
dec
push
dec
adc
fldcw
bound
testl
pushf
in
add
fwait
sbb
test
jne
mov
data16
cmovo
mov
test
je
std
pop
adc
jo
mov
mov
sbb
mov
subl
mov
ds
repnz
bound
fwait
xchg
adc
outsb
xchg
mov
lea
outsb
cmp
cltd
ret
cmc
xchg
leave
loop
mov
lods
das
push
les
dec
fnsave
push
jle,pn
cs
mov
jg
cld
test
in
push
icebp
es
dec
xor
and
mov
outsb
jge
mov
mov
sub
ja
iret
jae
sbb
and
or
ljmp
and
fisubrs
andb
inc
add
bound
mov
iret
add
adc
scas
push
test
test
paddd
xor
mov
inc
jl
mov
xor
out
or
gs
bound
js
ret
push
pop
and
adc
enter
arpl
sti
mov
out
lahf
popa
pop
push
mov
jmp
aas
ret
push
cmc
out
imul
daa
jno
outsb
inc
hlt
dec
popf
pop
jg
jns
popa
jns
outsl
pop
and
xor
and
sub
lds
ret
pop
ficoml
arpl
fldt
push
imulb
in
sbb
pop
mov
and
jne
pop
inc
inc
scas
sahf
adc
int
add
addr16
pop
call
fs
mov
cmp
mov
bound
jae
cmpsl
pop
movsb
sub
dec
mov
out
lods
mov
inc
mov
pushf
sbb
shll
cmc
cmpsb
adc
jmp
bound
pop
repz
lock
inc
loopne
sbb
ret
add
dec
jge
adc
adc
out
out
or
aas
pop
xor
inc
js
sti
shr
mov
sbb
rcrb
xchg
and
cmp
sbb
cmp
in
mov
sbbl
incb
psrad
inc
lret
jl
es
andb
in
mull
xlat
lret
lret
lret
rorb
and
fmull
mov
dec
push
lds
mov
mov
ja
lods
and
das
sub
push
shl
popf
out
inc
imul
rorb
sarl
and
mov
es
jbe
cmc
sbb
into
iret
push
mov
add
inc
inc
xchg
push
add
out
xchg
sub
mov
rorb
mov
sbb
and
sahf
or
pop
cmpb
push
xchg
in
sbb
cmpsb
divl
pop
cs
xchg
inc
mov
lahf
test
std
jle
ja
inc
xor
sbb
test
or
adc
sbb
and
divb
mov
test
ret
sub
in
mov
or
out
enter
gs
repnz
lret
push
mov
sub
fs
xchg
xchg
cmp
out
jnp
cmp
push
data16
orl
lock
fs
jns
mov
fisttpll
mov
mov
jne
mov
cltd
fs
adc
pop
xor
jle
std
push
es
outsb
stos
ljmp
cmp
popf
pop
inc
pop
mov
aas
aaa
sub
mov
loope
aaa
push
ficompl
outsl
jecxz
aad
stos
xor
ja
mov
addr16
sub
inc
cmp
repz
out
inc
pop
push
pushf
mov
ret
stos
mov
inc
repnz
push
in
xchg
or
stc
and
leave
pushf
in
jnp
sub
dec
dec
sub
sbbb
xor
mov
add
mov
sub
push
push
cmp
push
add
lret
data16
fcmove
inc
mov
mov
xor
xchg
in
sbbb
es
sbb
or
push
sbb
pop
inc
pop
xchg
cmp
xchg
or
cmp
repnz
shl
jp
shll
push
fsubr
adc
les
mov
loopne
push
mov
inc
stc
xchg
push
in
sbbb
xor
cli
add
bound
fstl
pop
stos
dec
lret
pop
xchg
lock
bound
repnz
cmpsl
mov
mov
aaa
mov
repnz
stos
clc
aad
clc
pop
dec
cmp
or
or
or
jb
lahf
jae
aam
gs
fdivs
les
mov
push
imul
rclb
pushf
dec
out
mov
pop
mov
push
orl
mov
sbb
gs
cmp
cmp
int
or
scas
ljmp
inc
jmp
and
mov
or
pop
push
xor
std
ret
pop
mov
xchg
xchg
ljmp
ds
jmp
fnstenv
incb
mov
pop
push
lret
mov
movsb
inc
push
fwait
jg
jp
mov
push
aas
fs
mov
in
and
jle
in
imul
fcomp
addr16
roll
mov
mov
dec
js
mov
bound
or
sub
jo
addl
inc
dec
fs
addl
jnp
es
dec
dec
inc
jns
dec
cmpsl
push
in
sbb
xor
icebp
dec
fsubr
adc
xor
in
push
adc
in
jno
push
pusha
add
out
aas
data16
call
xor
mov
push
test
repz
jge
push
loop
outsb
flds
sbb
jbe
push
stc
cli
or
sbb
xchg
out
fistpl
pop
call
popf
data16
mov
xchg
popa
pop
incb
dec
or
lods
mov
inc
inc
push
sti
mov
push
dec
imul
bound
ljmp
in
lock
mov
out
or
add
les
sti
clc
dec
pop
xor
adc
mov
inc
pop
jns
jns
sub
sub
test
adc
lock
push
push
sarl
in
mov
adc
mov
push
mov
addr16
jae
jmp
jcxz
js
add
cmp
xchg
pop
mov
roll
loop
and
jae
lret
mov
clc
inc
sahf
push
cmp
std
jle
cmp
out
or
sahf
and
add
jb
je
shll
shlb
jae
testb
adcb
fldcw
cmp
xchg
iret
xor
cmc
js
and
into
repz
fdivl
cmc
mov
sbbl
jecxz
fisttps
jl
enter
arpl
cmp
addb
icebp
leave
push
jmp
cmc
add
addb
pop
xchg
out
mov
lahf
xor
mov
cmp
icebp
fnstenv
jae,pt
mov
pop
push
imul
out
jne
push
jmp
mov
ds
mov
and
decl
rclb
mov
fcmove
das
cmpsl
jno,pn
test
insb
pop
pop
rcrb
js
adc
cmp
and
sub
or
mov
or
std
call
mov
imul
add
test
adc
outsl
cmp
sbb
test
add
pop
addr16
jns
movsl
push
inc
insl
mov
mov
in
cltd
movb
cmpsb
xor
mov
jecxz
xchg
ret
outsl
pusha
out
lea
dec
jmp
stos
sarb
push
jae
mov
mov
inc
pop
mov
sbb
sub
jmp
mov
jns
cli
inc
mov
in
xchg
mov
push
mov
and
lahf
jle
mov
loop
sub
add
dec
ret
pop
fmuls
movsl
jg
lcall
dec
shlb
mov
push
mov
iret
fstl
imul
adc
sbbl
xorb
call
inc
push
inc
lcall
and
out
sub
sub
movl
push
stos
adc
or
cs
cltd
push
xchg
lds
sub
cli
pusha
lret
stc
adc
xor
jecxz
paddd
push
daa
outsl
sub
mov
or
outsb
inc
push
pop
movsl
xchg
inc
xorb
adc
aas
testl
xchg
push
lret
inc
rcrb
js
stc
jmp
cld
sub
jg
sbbl
test
int3
xchg
iret
sbb
ds
pop
call
negb
mov
pop
jno
rorb
enter
and
fimull
pop
je
push
fs
xchg
fnstenv
mov
lods
popf
fcmovu
pop
xor
outsl
sub
push
loop
xor
and
pop
ljmp
jb
cltd
inc
mov
orb
add
xlat
mov
jl
lret
dec
shlb
sub
jl
in
push
jmp
loopne
push
mov
push
push
jecxz
incl
mov
pop
and
pop
lea
addr16
decb
pop
sbb
inc
adc
pop
dec
add
mov
loope
xchg
mov
das
iret
adc
xchg
repnz
sub
push
stos
sub
xor
inc
ja
fdivrp
add
or
push
add
aaa
ss
xor
and
int
adc
mov
push
rolb
fwait
inc
mov
ljmp
jns
and
dec
inc
nop
bound
nop
mov
mov
push
xchg
mov
cmp
cmp
mov
add
xor
cld
pop
lock
mov
stc
sahf
jb
pop
subb
lret
sub
ret
imul
dec
test
test
or
js
cmp
cs
inc
cmp
mov
inc
mov
stos
imul
xchg
in
aas
dec
cmp
fcomps
jne
sub
xor
in
jle
sbb
test
xchg
ds
sub
lret
jno
or
loope
std
cmpsb
sub
enter
pop
mov
sbb
loope
mov
pop
insl
insb
movsl
xchg
rcr
add
jno
adc
ss
shll
pop
popl
rorl
dec
sbb
stos
adcb
xchg
popf
inc
cmpsl
arpl
and
call
push
dec
or
inc
movsb
mov
cli
pop
push
sub
dec
xchg
cmpsb
pop
jo
enter
cli
sarb
stc
outsl
enter
aam
jns
cmp
repnz
pop
lcall
scas
sar
loop
rcrb
sti
pop
jno
add
xchg
mov
sti
inc
setl
xor
xor
add
xorb
out
arpl
lock
aam
outsl
stc
mov
jg
cltd
ja
adcb
push
cmc
mov
aad
push
jne
aas
lods
mov
vmread
fwait
pusha
mov
ret
sahf
ret
pop
popa
negl
insb
push
popa
pop
mov
insb
jae
adc
jbe
out
sub
jbe
and
xor
dec
nop
sub
sarb
out
inc
sub
sub
int3
fs
push
in
jmp
jbe
insb
addr16
xor
jle
mov
je
pop
testl
outsb
mov
mov
sbb
xchg
test
fcomi
imul
dec
jnp
adc
pop
xchg
push
push
lret
pop
repz
or
pop
js,pn
loop
incl
mov
xchg
jl
aam
andb
fdiv
push
in
cmc
cmpsb
mov
test
xor
test
jne
ja
mov
in
and
leave
movsb
sbb
fmull
mov
mov
aad
lods
leave
fnsave
sbb
dec
dec
seta
add
push
push
xchg
mov
aam
fisubrl
and
adc
jp
cmpsb
bound
inc
mov
fcoms
rorl
hlt
inc
test
inc
push
jno
xchg
mov
push
clc
xchg
mov
je
cmc
mov
mov
out
fs
or
outsl
jmp
and
imul
jbe
sbb
ffree
mov
and
sub
xchg
mov
push
mov
inc
popa
mov
ret
pop
add
flds
ret
stos
jbe
test
cmpsb
xor
shrb
inc
lret
inc
jp
ds
xchg
test
andb
test
cmp
lds
setb
xchg
push
push
pop
std
dec
std
lahf
inc
mov
imul
insb
inc
jns
popf
jge
cmp
stos
jns
fmull
add
orb
adc
cmp
clc
push
lahf
test
inc
cmpsl
push
ljmp
pushf
xchg
out
lea
jne
jne
test
mov
sahf
push
mov
dec
push
lock
shlb
fdivr
and
jmp
or
cmp
or
pusha
push
pop
jle
pusha
and
or
fcoms
lods
mov
inc
xor
fistpl
add
inc
iret
es
gs
lea
imul
aam
mov
sbb
add
push
xor
int3
ds
mov
dec
add
into
jae
lahf
data16
stos
push
ds
mov
mov
push
add
mov
inc
sbb
lods
stos
mov
lret
filds
jle
jge
push
imul
pop
sub
and
xchg
or
in
adc
js
xchg
jg
shr
and
mov
pop
popf
dec
pop
pop
ja
inc
inc
sbbl
push
call
sub
filds
loope
ljmp
lret
sbb
ficoml
adc
icebp
and
out
pusha
mov
mov
lea
cmp
or
mov
or
push
lret
xor
popl
inc
mov
or
add
push
pushf
inc
divl
fcoml
in
xor
inc
scas
sub
daa
testl
aaa
and
jp
int
xchg
mov
scas
adc
fcoml
pop
xor
test
jo
xchg
xchg
dec
sarl
push
js
push
xor
jo
jmp
rolb
cmpsl
movsl
aam
hlt
pop
mov
inc
ja
shr
push
inc
fistps
cmp
mov
or
cmp
mov
xor
cmp
cmp
out
xchg
jb
mov
mov
inc
out
xlat
mov
xchg
push
mov
ret
xchg
xchg
dec
test
icebp
scas
mov
ss
xchg
daa
pop
cmp
pop
scas
jge
push
inc
test
scas
sub
cmp
jmp
repz
pop
test
jl
jmp
xchg
xor
lcall
sub
sub
xor
add
pop
sub
mov
dec
jbe
or
or
repz
in
push
scas
mov
insb
fwait
stos
mov
mov
cli
icebp
fidivs
dec
repz
fucomp
lcall
out
sbb
and
cld
sbb
popa
scas
inc
xchg
push
mov
fwait
ret
push
je
popf
scas
mov
cmp
add
push
test
std
adc
mov
aam
subl
enter
outsb
mov
leave
dec
mov
sahf
cmp
xchg
and
push
and
inc
jbe
push
test
dec
xchg
cld
ds
dec
mov
adc
int3
aad
dec
inc
push
jb
mov
cmp
xor
out
push
fnstenv
hlt
int
mov
add
sbb
jbe
in
rcrl
imul
out
pop
sarl
loop
mov
pop
pushf
pop
push
lcall
add
neg
repz
fmul
pop
and
cmp
cmpb
mov
push
stc
cmp
push
mov
cld
dec
cmpsb
add
ds
inc
out
das
xchg
pop
add
cmpsb
lahf
sbbl
out
cmp
xchg
sub
adc
mov
cmp
push
aad
mov
jmp
lods
xor
out
lock
mov
rcll
lea
inc
sub
or
or
inc
shlb
jne
sbb
mov
into
icebp
push
ja
pop
or
mov
pop
ret
fwait
into
scas
lock
inc
sbb
dec
xchg
sub
lock
push
repnz
or
js
adc
sub
outsb
fimull
out
stc
pushw
hlt
ret
loope
and
mov
and
and
js
rolb
pop
lret
in
jbe
pop
subb
xor
ja
sub
inc
je
pop
lods
in
loope
fstl
xor
es
jae
push
loope
loopne
mov
jns
xchg
mov
jae
hlt
adc
inc
aas
mov
sbb
lds
push
pop
lahf
movsb
pushl
mov
mov
rcll
mov
fdivr
adcb
lods
dec
pop
movsl
pop
std
mov
arpl
call
dec
mov
scas
jne
xchg
sub
add
sub
icebp
callw
or
not
int
mov
xorb
gs
mov
add
clc
outsb
push
pop
icebp
enter
leave
pop
or
xor
jle
xchg
mov
rol
ret
jne
bound
lret
inc
sbb
shll
cmp
std
gs
mov
xor
aam
push
cmp
push
dec
outsb
loope
fnstcw
xchg
add
push
iret
rolb
clc
add
lea
fnstsw
into
xchg
adc
cmp
mov
adc
in
jb
sub
lret
xchg
inc
sbb
js
fmull
sar
sub
sub
stos
add
cmp
xchg
leave
movsl
pop
xchg
and
xchg
dec
fbld
push
or
loope
pop
push
test
jmp
sbb
add
lea
stos
cmp
fwait
cmp
mov
adc
iret
add
clc
jb
andl
mov
xor
test
pop
xor
xchg
mov
arpl
mov
cli
mov
hlt
inc
in
cli
sbb
adc
arpl
dec
jmp
int
lea
divb
bound
pop
gs
sbb
cs
lods
bound
cwtl
dec
jmp
mov
xchg
in
jle
out
cmp
cmpsb
addr16
int3
mov
pop
subb
out
in
test
xchg
push
loope
insb
jns
add
dec
lds
cmpsb
pop
xor
into
or
xchg
ds
lea
bound
lds
enter
ror
sahf
cli
pushf
hlt
dec
arpl
mov
sar
cmp
testb
scas
sub
mov
ljmp
pop
ja
subl
xchg
into
push
jns
push
gs
mov
ret
xchg
in
sub
push
mov
cmp
dec
scas
add
ret
xchg
sub
inc
iret
lret
lret
xchg
imul
fdivr
or
jge
or
fcmovnbe
mov
pop
sbb
hlt
mov
add
shl
sahf
ljmp
sti
es
jl
aad
mov
sub
enter
xchg
xchg
ficoml
aam
sub
js
test
clc
insb
jb
cwtl
movsl
mov
mov
ss
and
cmp
in
push
es
lahf
hlt
leave
out
scas
add
out
jecxz
nop
js
dec
orb
or
dec
in
jl
ljmp
cmp
fldl
jb
mov
mov
fs
ljmp
bound
mov
test
jge
test
mov
arpl
and
mov
cltd
rol
filds
mov
cmpsb
in
sti
cmp
mov
int
adc
loope
jmp
hlt
push
sub
mov
jp
lret
insb
std
fs
fistl
xor
in
push
push
popf
jl
jns
xchg
enter
xlat
or
xchg
jmp
and
xchg
xor
xor
jl
fnstcw
std
out
lahf
out
dec
call
int3
fucom
xor
dec
imull
add
jge
lcall
pusha
mov
mov
insl
or
jo
cli
inc
stos
jne
xchg
mov
xorl
jmp
pusha
push
jbe
fcomps
adc
lcall
adc
add
lcall
outsb
push
testb
mov
or
xchg
xchg
fistl
sub
je
out
sbb
sbb
pushf
stc
inc
sbb
rclb
bswap
mov
ja
ficoms
add
and
outsb
xor
mov
punpcklwd
cmpsb
dec
dec
fwait
lock
jae
aam
add
pop
lret
sahf
xchg
in
lock
sti
sbb
je
push
mov
pop
lret
adc
cmp
cmpsl
push
inc
sti
ja
mov
shlb
jecxz
arpl
and
and
push
rclb
add
addps
mov
jg
mov
std
cs
xchg
movl
cmp
jo
data16
mov
loopne
dec
sub
xchg
pusha
jecxz
dec
in
xor
xchg
in
dec
sti
dec
xchg
xor
roll
dec
or
xlat
lret
adc
and
jl
or
ss
loop
mov
push
jle
int3
pop
out
out
mov
xor
aaa
stos
lcall
ffreep
pop
xlat
push
adc
clc
jg
mov
xchg
sbb
inc
fimull
ret
fdivl
push
loop
mov
sbb
ret
sub
dec
mov
add
lea
push
mov
or
cmp
push
out
xlat
push
pop
ror
loope
movsl
xlat
mov
lea
les
cmp
mov
mov
cli
arpl
inc
jle
xchg
sbb
mov
sahf
fmul
xor
mov
add
lods
cmp
mov
lods
mov
or
repnz
test
pop
movsl
xor
add
call
xor
cltd
cmp
aam
and
leave
hlt
bound
movsl
and
sub
and
mov
test
mov
ret
jge
jle
mov
adc
lret
xlat
pop
loop
pop
pop
pop
adc
add
mov
in
repz
data16
cmpsl
xor
jl
push
sarb
mov
dec
ljmp
mov
leave
dec
ljmp
hlt
pusha
add
andl
and
lods
cmpsb
scas
cmp
sub
sbb
fdivl
loopne
sub
pop
cli
lods
pushf
mov
ss
cmc
add
enter
sti
sbb
jp
lea
xchg
pop
mov
pop
push
sar
jnp
push
hlt
fiadds
mov
ficoms
mov
inc
ret
and
mov
mov
rcrb
adc
test
mov
daa
shl
sub
inc
nop
fidivrs
ret
xor
ss
sbb
cmp
aas
pop
or
arpl
and
loope
iret
lcall
fisubs
and
testb
lods
shlb
lret
sarb
jns
lcall
std
jg
mov
dec
xor
lret
aad
xchg
ret
pop
jg
xchg
jl
add
test
mov
mov
cmp
lds
incl
and
jno
lret
pushf
pusha
and
pop
mov
pop
push
inc
mov
sarb
loopne
mov
lods
cmp
xorl
xor
adc
adc
lcall
scas
rcrl
leave
xchg
sbb
js
pop
and
push
push
push
inc
stos
ljmp
int3
cld
shrb
sahf
push
cmpsl
in
dec
adc
shr
ds
or
insl
sub
mov
sbb
sub
out
sti
push
xor
das
or
cmp
mov
mov
repnz
out
mov
inc
sbb
push
mov
add
add
pop
pop
out
cmp
xchg
dec
jno
cld
mov
cmp
xchg
or
push
lods
in
xchg
inc
enter
lcall
ja
in
and
push
test
jo
fs
sub
jo
int3
ret
je
inc
arpl
scas
mov
mov
pop
orb
pop
insb
push
sbb
push
add
or
insl
inc
hlt
scas
fbld
xchg
je
pop
push
or
mov
fwait
test
fcomip
sbb
jp
rcrb
subl
cmp
xchg
xchg
movsl
sti
popa
add
jle
or
arpl
insb
sub
mov
clc
ss
aam
pop
cmp
fists
dec
cmp
fiaddl
xchg
sub
clc
xlat
dec
adc
cs
sub
fs
add
hlt
mov
mov
pop
inc
sbb
mov
mov
push
int
xor
fmull
inc
jo
mov
lods
fadd
push
xor
adc
cmpsl
std
shll
cmp
dec
adc
xchg
clc
fidivl
loopne
outsl
cld
pop
cs
insb
and
mov
dec
adc
cli
aam
repnz
pushf
fldt
lahf
dec
xchg
into
lahf
xchg
pop
dec
push
xchg
fidivs
ret
push
add
repnz
xor
xchg
movb
adc
push
negl
sub
out
stos
cmc
call
loopne
jnp
sbb
pop
rcl
mov
sarl
jp
leave
sbbb
movsb
jnp
sbb
push
test
test
stc
aas
push
or
lahf
inc
in
outsb
sub
and
xchg
fs
sbb
add
add
xor
bound
push
pop
inc
inc
pop
sbb
stos
bound
lahf
lcall
sbb
fcompl
cmp
sahf
mov
cmp
cmp
out
inc
inc
leave
fwait
pop
fbld
in
mov
mov
inc
push
ds
jle
mov
pop
pop
loop
adc
jecxz
popa
les
stos
adc
add
rorl
adc
pop
fwait
sbb
mov
add
xchg
push
lea
sbb
sbb
xchg
lods
nop
push
xchg
addr16
xor
mov
lret
jge
ds
int
lret
arpl
loop
push
cmp
fimuls
arpl
fsubrs
sub
sub
inc
aaa
fisttpll
adc
pushf
shrb
xchg
xchg
lret
sub
arpl
nop
mov
cwtl
mov
aam
mov
dec
ret
dec
push
sbb
sbb
gs
or
inc
or
cltd
mov
arpl
in
and
dec
xchg
pop
mov
cs
jle
fldenv
pop
dec
pop
jo
adc
ret
lret
inc
sub
lahf
cmpb
or
int3
loop
lods
xchg
out
ss
xor
loope
js
mov
lcall
sub
iret
leave
jl
popf
les
sbb
scas
or
inc
fsubs
pop
mov
loop
out
aam
ficoms
jne
mov
jne
aaa
fcmovnb
movsb
jecxz
push
cld
sbb
mov
fs
mov
adc
cmp
jns
popf
adc
clc
std
xor
insb
das
imul
sbb
rcr
dec
divl
fstl
add
es
push
jmp
fsubl
sub
insb
in
push
lahf
ds
or
ret
mov
cmp
mov
mov
in
imul
push
pop
cmp
bnd
push
cltd
pop
cwtl
mov
fldl
fnstcw
sahf
jmp
or
popa
or
sbb
outsl
cmp
movsb
outsb
lahf
stos
aas
in
mov
adc
and
dec
add
insl
je
imul
jns
jbe
xor
lret
add
cld
mov
jecxz
inc
dec
pushf
data16
dec
cmp
out
mov
sbb
mov
ret
mov
mov
lods
push
lret
das
cmpsb
pop
ljmp
addr16
pop
mulb
sub
fidivs
adc
loope
push
repz
xlat
and
addl
stos
iret
add
jb
ds
sbb
pop
inc
dec
inc
push
push
int
or
and
add
xchg
push
inc
xchg
popf
xchg
pop
sub
and
not
lahf
addr16
je
fwait
jnp
jl
sarb
sbb
outsl
test
pop
or
sbb
mov
daa
jnp
out
addl
test
xor
pop
lods
movsb
sbb
ljmp
xchg
pop
pop
mov
fstps
lods
add
sub
ss
cmp
dec
dec
aam
outsl
mov
push
pusha
in
add
adc
cltd
lock
insb
fidivrs
aam
push
dec
ret
xchg
fistpll
in
cmp
maskmovq
test
faddl
iret
ljmp
mov
pop
push
stos
push
orb
push
pop
xchg
movsb
mov
sub
add
hlt
ds
and
jb
jne
dec
mov
jb
add
addr16
xchg
stc
cmp
jo
cmp
addb
fisubrl
xchg
std
lret
add
out
ja
popa
xlat
ds
int
mov
fildl
in
jmp
icebp
push
mov
popl
pushf
push
outsb
pop
movsb
popa
loope
mov
cmp
lcall
sub
mov
or
test
xor
cmpsl
arpl
imul
mov
and
cmpsl
lds
or
push
sbb
ja
mov
push
lods
add
xchg
lahf
sub
sbb
shl
cltd
pop
mov
repnz
daa
stos
fsubrp
testb
fnstenv
testb
sti
mov
test
pop
xor
or
divps
nop
add
std
insb
mov
push
les
jmp
mov
xlat
jmp
push
jno
loop
stos
push
mov
push
je
jne
cmp
cmp
cwtl
out
sbb
push
mov
push
cmpsb
cmpsb
icebp
test
movb
mov
sbb
scas
or
lcall
neg
cmpsb
push
loop
ret
dec
ficoml
and
gs
call
das
shll
rorb
lods
xchg
jno
psllq
lods
and
jns
out
ret
xchg
mov
jmp
push
jno
inc
pop
jecxz
adc
pushf
movsl
xchg
xchg
imul
daa
push
and
push
adc
mov
data16
int3
xlat
xchg
jne
mov
popl
xor
pop
ja
addr16
or
sbb
jno
add
outsb
jns
sbb
call
or
mov
and
jbe
mov
jg
sbb
fisubrs
in
push
std
mov
loop
push
xchg
pusha
adc
data16
cmp
mov
clc
inc
pop
insl
mov
jl
pop
stc
or
shll
dec
jp
ret
and
ds
pop
pop
and
push
inc
jmp
in
dec
cmc
out
shr
outsb
pusha
push
xchg
push
cltd
in
insb
adc
sbb
aaa
ret
in
inc
out
cwtl
rol
addr16
adc
and
filds
call
xchg
nop
fidivs
and
stc
add
cmpsl
inc
fs
lods
push
cld
and
mov
sbb
add
js
pop
dec
pop
scas
mov
mov
or
cli
mov
mov
pop
rcr
ret
je
cmp
fdivp
xchg
sbb
pushf
cmp
loope
jb
mov
rorl
adc
xor
mov
jne
sbb
jle
sbb
xchg
sub
orl
ja
fidivs
test
shll
dec
cs
cmp
pop
std
pusha
stc
jl
fldt
adc
push
cmpb
push
daa
sar
xor
sti
mov
sbb
fcoml
mov
pop
lock
iret
push
icebp
lea
cwtl
lcall
icebp
mov
aad
int
in
das
mov
movsb
mov
mov
subl
sub
mov
jmp
inc
sti
adc
mov
push
cltd
es
add
movsl
das
popf
iret
cmp
and
jmp
mov
push
push
pop
jecxz
lret
mov
fwait
shrb
xchg
xor
xchg
fnstenv
rcl
mov
inc
test
fsubrp
rcr
pushf
lock
or
gs
mov
mov
cmpsl
inc
mov
fiadds
pop
adc
lea
and
xchg
or
test
in
jl
js
imul
and
jno
daa
dec
pop
add
lahf
xchg
jns
subl
repz
lcall
inc
fs
cmc
xchg
outsb
or
aaa
iret
push
popf
mov
movsbl
in
or
fcompl
pop
ja
cmp
and
and
in
ffree
cmpsb
into
add
push
and
cwtl
in
mov
pop
jae
jno
push
sub
in
inc
mov
dec
xchg
insl
and
add
push
nop
inc
cmc
dec
mov
jle
std
shll
adcl
or
fistpll
out
sbb
aam
pop
ja
fsts
imul
push
insl
icebp
xchg
dec
pusha
sbb
cs
xchg
lods
pop
test
push
pop
cmc
js
jmp
add
loopne
lock
xchg
adc
or
jnp
lods
leave
inc
jno
sub
sbb
enter
rclb
movb
cmc
movsl
jmp
hlt
pushf
mov
sbb
pop
loope
xor
ds
movsb
cmc
add
andps
cld
push
push
mov
call
xor
pop
out
jnp
xor
loope
adc
add
fsubrl
jo
rcr
adc
xor
inc
add
dec
add
leave
adcb
clc
mov
jae
faddl
mov
push
pop
out
xchg
dec
inc
cld
leave
fcomps
cli
insb
stos
sbb
sbb
push
pop
rcr
pushf
lcall
pushl
xchg
push
mov
rcrb
lret
pushf
inc
das
sti
test
out
adc
popf
mov
dec
add
mov
add
adc
inc
inc
jmp
jb
out
adc
push
cmpsl
xchg
ss
inc
or
and
adc
xchg
mov
sbb
mov
movsl
pop
add
push
cli
sbb
push
sahf
movsb
mov
test
mov
inc
cwtl
mov
inc
ficomps
adc
push
clc
daa
shlb
je
repnz
sbb
cmpsl
ds
shlb
ljmp
jle
loopne
imul
add
sub
pop
lcall
mov
jg
daa
pop
mov
pusha
inc
sahf
add
pop
jb
shlb
push
jmp
and
mov
movsb
cmp
sbb
ret
hlt
pop
xor
cmc
orl
shl
xor
ja
addr16
sub
stc
das
notl
push
mov
jmp
dec
jle
or
or
ficoml
lock
cmp
cltd
mov
sub
aad
xchg
xor
ss
arpl
push
cmovae
mov
into
adc
or
les
sar
mov
mov
push
repz
push
and
out
adc
loope
mov
shl
es
or
out
arpl
adc
xchg
dec
or
loope
jbe
sets
outsl
std
pushf
loope
xor
jl
into
hlt
clc
inc
gs
pushf
shll
daa
hlt
and
jo
cmp
jbe
mov
or
aas
sub
sub
push
push
sti
aad
fistpl
dec
out
inc
ret
and
mov
mov
mov
mov
xchg
adc
pop
orl
aas
sub
add
inc
add
cld
dec
mov
pop
cmp
out
cmp
xchg
insl
pop
and
xchg
aaa
aam
das
das
in
pushf
subl
sub
sbb
aad
test
pop
push
fwait
repz
ret
subl
cmp
pop
ja
push
stos
dec
mov
sbb
sti
scas
xchg
lret
add
add
lret
inc
and
jno
push
lret
xor
mov
jl
add
jb
mov
mov
push
aaa
aaa
not
adc
cmp
sub
mov
loope
mov
xorl
std
jl
ficomps
push
test
mov
mov
push
sarb
leave
mov
push
cmp
shlb
sbb
add
loopne
lods
cwtl
fwait
rcl
stos
sbb
sub
arpl
fstpl
iret
sti
addr16
leave
xchg
insl
cs
adc
aad
push
xchg
test
popa
sbb
and
cmc
mov
imull
pop
pop
arpl
outsl
out
xchg
repz
push
hlt
pop
xchg
popf
bnd
sub
stos
cmpsl
movsl
sbb
imul
jp
pop
js
cmp
push
sub
inc
fists
jae
mov
xor
call
stc
sarl
and
test
or
and
push
xor
ret
and
fcoms
fdivp
call
push
xchg
ds
mov
insb
add
mov
add
call
loope
jns
mov
sub
sub
jb
incb
cmp
in
jecxz
in
dec
xor
addr16
cmpsb
loopne
mov
push
pop
orb
test
mov
rclb
adc
js
pop
jl
mov
bnd
loopne
push
data16
rorl
xor
xchg
xchg
and
jnp
or
call
lods
decl
jl
mov
les
jl
adc
icebp
fmuls
je
popf
sub
fildl
dec
mov
inc
sbb
mov
fidivl
push
aaa
cltd
out
pop
inc
xchg
mov
jo
repz
mov
in
pop
jg
xor
cmp
mov
in
nop
ds
test
push
sub
xchg
dec
clc
sbb
loope
cmp
dec
jno
mov
mov
jge
xchg
add
sbb
and
add
aaa
rcll
sbb
int3
mov
mov
cmc
movsb
jns
sbb
cs
jmp
incl
ja
push
mov
scas
add
cwtl
paddsw
dec
add
mov
jmp
fmull
sbb
pop
test
pop
std
jmp
outsb
mov
das
and
sbbb
inc
decb
mov
loope
jb
in
ret
dec
mov
jge
jp
dec
inc
add
cmpsl
popf
popl
xchg
les
xor
icebp
lds
cmp
shl
shll
lcall
sub
mov
sarb
movsb
call
icebp
mov
xchg
js
dec
dec
xchg
jo
xchg
les
lret
in
adc
leave
xchg
jmp
push
add
insl
pop
jge
mov
dec
out
lds
pusha
repnz
xchg
inc
dec
sub
test
push
adc
xchg
push
or
lea
sti
sub
mov
lock
pushf
ret
lea
sub
cmp
pushf
xor
fwait
loop
call
iret
stos
or
fldenv
cmp
mov
shlb
push
movl
inc
addr16
into
sbb
lcall
pusha
mov
jae
popf
jge
shlb
mov
lcall
adc
mov
and
push
repz
cld
jge
mov
and
es
xor
dec
sbb
popl
cs
sbb
addl
or
call
xor
test
sbbl
mov
vorpd
repz
pop
ja
jnp
cmpsl
out
imul
cmp
xor
inc
push
sbb
js
es
es
stos
sub
mov
imul
or
pop
sub
and
push
rcll
dec
loop
and
sub
push
pop
clc
int
movsb
mov
stc
outsb
mov
in
adc
xchg
or
cmp
cmp
mov
lret
ss
repz
cmc
idiv
lds
sbb
cmp
rcrb
aam
jge
fistpll
sub
fcomps
jmp
inc
movsl
and
les
mov
loope
adc
or
push
sub
pop
loopne
cmp
or
inc
add
sbb
lock
mov
cmp
loop
aas
push
push
mov
inc
cmp
mov
mov
rorb
hlt
or
repz
sti
cmc
and
ret
imul
xor
xchg
inc
xchg
ds
add
cltd
push
push
adc
aad
testl
aad
pop
cwtl
lea
push
pop
out
pop
sub
pusha
and
scas
out
push
mov
xchg
inc
jno
shl
lahf
xchg
iret
cltd
leave
sbb
mov
push
gs
jne
sub
shrl
push
inc
sbb
jae
pop
sbb
jne
loope
data16
cmpsb
add
nop
fld
sbb
mov
or
js
jecxz
cmp
or
add
adc
or
insb
cs
cli
scas
outsb
cli
cmp
mov
inc
pop
mov
ljmp
rolb
inc
mov
pop
cmp
dec
lods
inc
ds
fwait
add
loop
or
aad
scas
jbe
daa
and
cmpsl
dec
or
shlb
push
rep
std
jns
lods
mov
ljmp
jle
xchg
lcall
aam
ret
inc
jmp
adcl
jnp
sbb
inc
jbe
sti
push
in
add
push
mov
sub
faddl
icebp
fnsave
stc
or
or
pop
shll
mov
cli
pop
cmpsb
cmc
mov
inc
loope
lret
pop
and
add
mov
mov
clc
sbb
sub
jo
nop
lods
dec
fldenv
mov
inc
mov
mov
xchg
cmp
mov
pusha
dec
push
lcall
push
mov
out
mov
cli
scas
jno
sbb
xchg
xchg
cmp
dec
add
pop
cmp
xor
xor
xorb
cmp
ss
pop
push
jecxz
es
cmp
sub
add
test
insb
adc
mov
shlb
ljmp
add
daa
mov
mov
fidivl
adc
mov
sbb
sub
mov
loopne
inc
pop
outsb
lea
xchg
aas
cmp
outsl
flds
xchg
mov
xchg
loop
movsb
xchg
push
pop
mov
aaa
cmpsl
in
arpl
outsb
cmp
insl
push
adc
dec
in
cs
add
xchg
sub
testl
data16
jns
mov
and
pop
imul
mov
jnp
lods
add
sbb
ret
cmc
out
jnp
and
jecxz,pt
aad
lret
sbb
sbb
sub
xor
inc
or
and
or
lahf
xor
jb
inc
ja
xor
dec
pop
dec
jl
jno
ret
je
dec
rolb
aaa
rcrb
lods
call
sub
sbb
jb
mov
ltr
adc
lahf
icebp
loop
cld
jmp
out
js
notb
add
pushf
repnz
mov
das
stos
out
rclb
push
loope
stos
pushl
inc
shll
dec
repz
imul
iret
push
pop
shll
gs
jmp
push
jo
mov
pop
dec
das
cmpsl
adc
cmp
xchg
mov
ret
stos
xor
cmc
cmp
dec
xlat
xor
fisttpl
jp
xor
mov
rolb
ja
push
xor
outsl
fdiv
pop
xor
push
shlb
cmc
mov
inc
or
ljmp
mov
movb
pop
adcl
add
popf
out
inc
repnz
imul
lahf
pop
dec
out
push
or
ret
pusha
xchg
jns
lahf
gs
pop
sub
dec
mov
mov
mov
fimuls
aaa
mov
mov
cli
hlt
insl
out
push
sub
ret
sub
pop
clc
icebp
aad
xchg
push
push
cmpsl
push
je
mov
xor
xorb
pop
pop
test
ja
mov
shl
xor
pop
iret
lock
dec
das
xor
cld
xchg
fdivs
adc
add
mov
mov
loope
mov
push
xorl
imul
xlat
loop
and
outsb
faddl
push
mov
mov
push
adc
push
inc
push
xlat
cmp
mov
jge
ret
jnp
pop
lret
jmp
scas
push
pop
inc
xchg
imul
enter
mov
iret
push
pop
fcmovnbe
aas
lods
loope
pop
bswap
jge
jae
fcmovu
and
xchg
pop
xor
jecxz
adc
loop
jle
adc
dec
dec
out
test
xor
add
or
cli
adc
leave
ljmp
xchg
in
cmp
xor
cmc
shll
xchg
daa
jecxz
inc
jp
aaa
inc
sub
adc
enter
popa
dec
fdiv
cs
nop
jmp
xchg
ljmp
call
add
mov
dec
jns
stos
leave
cwtl
add
cmp
int3
je
ficompl
pop
cmpsl
int
mov
stos
mov
imul
jg
lret
mov
add
push
xchg
or
js
pop
mov
mov
xor
imul
lea
aad
mov
lds
cmp
and
pop
pop
in
movsb
stc
cli
xor
jl
scas
or
adc
mov
addr16
lds
xchg
std
mov
lret
lret
jmp
bnd
mov
add
push
sbb
pop
adc
mov
cmc
pop
rcll
imul
push
sub
shlb
lock
cmp
cmp
and
nop
mov
adc
adc
idiv
ljmp
push
fimull
xchg
popa
ja
jb
cld
mov
fcoms
in
iret
mov
jecxz
or
inc
movb
test
sub
loop
stos
xlat
loopne
pop
xor
pop
lcall
or
or
or
mov
dec
leave
fnstsw
mov
insb
out
inc
inc
jecxz
ret
rcrb
clc
sbb
popfw
cli
push
jmp
and
xchg
lcall
dec
cmp
fildl
cmc
pop
mov
imul
pop
js
iret
fidivs
jecxz
adc
decb
pushf
mov
inc
scas
inc
sti
loop
aaa
pop
xchg
aas
jo
adc
xchg
int3
add
dec
dec
push
repz
dec
imul
mov
add
jecxz
mov
lea
cli
mov
int3
jl
ret
idivb
data16
pusha
pop
das
adc
pushf
jnp
xor
inc
cmp
ja
mov
mov
sub
mov
int
pusha
pop
and
jne
ret
call
outsb
inc
dec
pop
xor
dec
push
insb
dec
test
sti
sub
xor
and
mov
push
mov
stos
and
sub
jl
aam
daa
shl
jg
mov
or
ss
fstps
sub
mov
jge
adc
adc
cmp
cmp
xchg
divl
movsb
aaa
test
mov
jl
sbb
adc
sbb
das
iret
mov
jbe
in
mov
mov
repnz
cmp
adc
mov
xorb
xchg
and
div
sti
sub
cwtl
or
push
add
and
clc
pop
pop
dec
std
cmp
scas
xchg
mov
enter
xchg
dec
mov
mov
outsb
ljmp
xchg
in
mov
decb
loope
sbb
hlt
cmp
push
insl
orb
stos
inc
xor
fchs
sub
push
call
int3
test
cmp
dec
dec
jl
out
or
ja
mov
je
inc
pop
inc
je
repz
int3
push
add
test
xchg
jns
notb
data16
lock
xchg
mov
repnz
lods
sbb
or
outsl
xor
xor
insl
adc
addr16
inc
ds
addr16
push
shrb
test
insb
ds
xor
add
jg
mov
fwait
add
mov
ljmp
jge
dec
sarb
lea
cs
or
lea
or
adc
cmpsl
repnz
mov
xchg
mov
cs
inc
ljmp
sbb
xchg
int3
pop
dec
pop
scas
pop
shlb
xchg
adc
fisubs
in
iret
lds
dec
pop
pop
pop
enter
cwtl
mov
add
push
ss
aad
ret
hlt
cli
or
cmpsl
or
or
sti
dec
jge
mov
jae
jl
and
push
mov
lret
fnstsw
nop
mov
bound
dec
scas
mov
mov
mov
and
inc
aaa
mov
bound
sub
lea
adc
repnz
dec
dec
pop
sbb
pop
cltd
or
dec
fisubl
std
sahf
push
mov
jmp
jb
shrb
mov
sub
pop
lods
cmpb
fwait
test
dec
lock
dec
test
pop
jnp
leave
je
xchg
mov
push
lea
fwait
xchg
aam
cmp
lahf
in
out
shlb
adc
cmp
jbe
fiadds
les
push
mov
jl
dec
mov
push
xchg
sub
stos
imul
mov
and
mov
mov
sbb
push
rol
call
ds
arpl
cld
dec
aad
xor
in
jecxz
out
push
dec
lods
push
cmp
add
sbb
dec
pop
lea
lods
repnz
jns
shr
inc
xchg
int3
jmp
cmp
jge
inc
push
sahf
adc
xchg
inc
push
mov
fcompl
popf
sbbl
mov
cmc
scas
ret
jle
jmp
xchg
aaa
ljmp
jge
psubd
adc
popa
fdiv
dec
pop
inc
push
outsl
pop
test
sbbl
repnz
mov
adc
dec
popf
lret
shll
mov
cwtl
mov
rorl
repnz
mov
test
pop
stos
in
movsb
data16
fcmovbe
add
notb
mov
mov
nop
leave
pop
stos
bound
push
jbe
lods
rcrb
xchg
and
inc
xor
pop
sbb
outsb
aad
cmpb
xchg
push
mov
insl
xor
pop
repnz
fiaddl
in
and
out
outsl
sbb
out
jo
and
ficompl
out
ljmp
adc
xchg
jbe
or
xchg
outsb
mov
fdivrs
sahf
xor
mov
lock
out
lock
jns
sub
lahf
pop
cs
lods
sbb
adc
add
mov
sbb
xor
insl
dec
add
ja
push
or
lret
insl
mov
scas
xchg
inc
xchg
sbb
rcrl
adc
xchg
pop
fcmovnbe
faddl
ret
subb
rclb
xchg
inc
sub
fsubp
fimull
jmp
push
xchg
fdivl
pop
roll
inc
notb
sub
inc
cld
das
lods
cmp
inc
fs
push
shll
sti
pushf
jp
dec
mov
push
test
cmp
cmp
adc
int
cld
in
popf
xchg
adc
xor
sbb
shrl
mov
mov
add
push
sub
sbb
cmp
xchg
and
jle
or
addb
lock
mov
sub
cmp
clc
mov
popf
and
xor
stos
cmp
lcall
or
mov
dec
or
push
repz
push
push
sarl
xchg
and
inc
mov
mov
cltd
or
xlat
push
mov
inc
mov
adc
mov
lea
push
xchg
je
cwtl
cli
test
cwtl
js
push
pushf
xor
adc
mov
xor
subb
sti
hlt
mov
aas
jl
inc
das
cltd
sti
inc
jbe
pop
cs
mov
push
dec
push
fildl
add
aas
cltd
push
dec
adc
dec
or
out
mov
sbb
pushf
movsl
or
stos
adc
inc
mov
jmp
insb
imul
mov
inc
out
jno
adc
cmpsl
inc
xlat
mov
inc
mov
cmp
add
mov
mov
sbb
xor
repz
popf
add
arpl
jecxz
inc
cmp
or
mov
and
int
dec
and
xchg
aaa
push
pop
mov
add
arpl
lods
rcr
pop
sbb
xchg
scas
xor
mov
mov
fwait
cmpsl
xor
cmp
jmp
mov
test
adc
or
jae
andb
pop
lods
cmc
ja
popa
jecxz
aas
cmpsb
mov
jmp
mov
ret
dec
dec
sbb
roll
fisubl
mov
aaa
addr16
cmc
aas
ret
stos
mov
add
subb
rcrb
mov
adc
loope
add
and
jnp
js
adc
xchg
xchg
ja
call
cs
and
in
mov
int3
aas
add
pop
or
cmp
loopne
add
push
int
mov
xor
js
mov
repz
aas
stos
popa
out
sbb
jns
test
xor
sub
jo
filds
aad
gs
shll
cmp
pop
fmull
jno
loopne
scas
cmp
xchg
xchg
movsl
jnp
es
add
outsb
stc
xor
xchg
stos
push
mov
push
jmp
pop
fcoms
pop
movsl
pusha
aad
lock
or
dec
enter
pop
fiaddl
sbb
mov
jno
shlb
ret
popf
subl
xchg
add
and
sbb
ljmp
or
repnz
shll
clc
lcall
aad
mov
jns
fldenv
jp
es
pop
arpl
daa
cmp
pop
mov
xchg
jge
xor
mov
insb
inc
mov
and
xor
pop
nop
cmpsb
cltd
cmp
cli
mov
mov
mov
inc
dec
mov
xchg
cmp
stos
lock
push
pop
dec
xor
lea
dec
ja
ret
leave
sub
into
xlat
or
fistpll
jmp
sbb
inc
xor
clc
or
cwtl
add
lds
dec
inc
repnz
loopne
adcb
jae
cwtl
fsubl
daa
subb
inc
aas
rol
sahf
frndint
testb
pop
aam
and
mov
scas
inc
adc
mov
mov
int
scas
sbb
adc
sahf
dec
adc
dec
hlt
sub
jge
push
xchg
and
iret
int3
mov
cwtl
push
mov
mov
ds
mov
inc
mov
adc
enter
pusha
lds
cmp
cwtl
pop
aaa
shll
jle
pop
mov
pop
leave
bound
outsb
clc
loope
sahf
out
sub
lods
pop
pop
fs
stos
adc
or
mov
jae
scas
in
cltd
xchg
mov
fs
mov
hlt
or
clc
rclb
pop
lcall
pop
fsubl
les
dec
ret
movsb
and
xchg
cmc
cmp
mov
mull
adc
cmpsl
insl
xchg
push
js
add
jo
addr16
or
and
sbb
pop
mov
lcall
xchg
jnp
mov
lret
shl
xor
lods
and
jno
jnp
mov
icebp
loopne
fs
sahf
jge
in
dec
pushf
imul
mov
inc
jae
adc
es
insl
cltd
das
test
mov
test
add
test
cmp
cltd
mov
and
dec
or
sub
outsl
jl
stc
mov
insl
and
clc
xor
fmuls
mov
xchg
cli
sbb
inc
inc
outsl
sbb
adc
das
scas
mov
push
add
push
lret
int
cwtl
pop
xlat
or
and
xor
sarl
pop
xor
popa
push
xchg
popa
sbb
adc
in
lock
ja
in
cmp
inc
int3
ss
add
in
push
lods
scas
notl
jbe
sub
pop
xor
mov
test
mov
or
das
pop
jae
adc
mov
cmpsb
and
arpl
aas
lcall
out
in
cmc
pop
mov
pop
adc
xor
dec
scas
xchg
or
inc
mov
or
xor
xor
jp
inc
and
lock
lahf
lret
enter
loope
loopne
loope
mov
hlt
mov
ret
add
pushf
mov
sub
adcl
fsubl
pop
cmpxchg
xchg
xor
bound
and
mov
jl
shr
xlat
push
scas
add
push
pop
fnstsw
or
adc
filds
mov
sbb
cli
jecxz
push
lock
or
popa
adc
dec
fisubs
leave
cmp
sub
adc
xchg
stos
inc
cmp
push
mov
cmp
fnstsw
pop
insb
adc
clc
xor
jp
and
jle
pop
testl
aas
fwait
pop
mov
cs
cmp
mov
add
mov
jmp
push
daa
lods
inc
xor
inc
in
mov
outsb
std
ja
mov
pop
and
mov
inc
shl
lods
inc
jle
movsb
je
and
sti
jo
hlt
in
in
jp
leave
adc
xor
test
mov
pop
loop
pop
movb
test
and
mov
jl
sti
xchg
mov
int
fdivrp
xchg
scas
cmpsb
mov
outsl
lods
cmp
push
inc
or
jle
sarb
cmc
push
jl
jbe
loopne
test
mov
fdivr
jge
mov
jecxz
out
nop
pop
mov
lods
divb
jno
mov
xor
mov
pop
mov
fcmove
in
cmpsb
mov
mov
xchg
xchg
outsb
adc
je
xchg
das
leave
ret
jg
mov
sbb
inc
outsl
adc
das
enter
or
cmp
pop
lods
add
pushf
pop
out
dec
ficoml
ja
sub
jmp
xor
sbbl
pop
xlat
push
into
nop
dec
ja
pop
orb
cwtl
xor
int3
int3
sbb
decl
cli
loopne
movsl
int3
dec
mov
movsb
mov
enter
mov
push
shl
mov
xorl
jge
mov
std
or
cld
fiadds
xor
cmp
mov
dec
pop
push
push
gs
or
pop
imul
push
jbe
iret
dec
xor
stos
lods
leave
lcall
dec
add
or
lahf
cld
inc
mov
add
sub
sarl
hlt
pop
je
iret
add
pop
jne
data16
mov
or
jns
jecxz
sarb
xlat
je
push
mov
dec
ret
jno
lods
jp
outsb
mov
das
cld
jmp
outsb
xchg
sbb
inc
add
fxch
sti
sbb
lret
pop
or
test
jno
lods
sahf
fs
imul
icebp
push
jl
stos
adc
iret
cmp
and
mov
xlat
dec
jge
sbb
jp
jecxz
cld
dec
outsb
test
fisubrl
mov
pusha
in
mov
daa
scas
adc
cltd
jns
and
loopne
jge
icebp
mov
leave
pop
jbe
out
dec
mov
jo
cmp
cmp
insl
lea
test
out
jno
sbb
mov
inc
mov
loope
imul
push
xorl
aaa
cmp
adc
add
out
lds
mov
out
push
mov
cwtl
ret
out
in
rol
fwait
lcall
aam
sub
sub
rclb
mov
cs
and
or
insl
loope
addr16
mov
lock
insl
movsl
and
lds
fldcw
mov
hlt
jno
dec
rcr
insb
push
in
sahf
outsb
dec
shrb
and
in
orb
pop
cmp
and
rol
test
ljmp
movsb
subl
adc
fmul
mov
lret
out
stos
jo
jb
xor
fsts
cmp
cmc
jecxz
pop
xor
cmp
loop
push
and
and
xor
mov
adc
shl
aas
dec
js
cwtl
or
pop
sbb
push
and
pop
push
sahf
push
mov
mov
inc
xchg
repnz
mov
push
and
mov
dec
cmc
push
cmp
insb
push
cmpsb
jle
cld
decb
lret
mov
push
xchg
mov
sbb
sti
shll
jecxz
xlat
lret
xchg
mov
jbe
repz
cwtl
and
sbb
add
xor
cmp
lock
int3
xor
push
pop
iret
xchg
push
jecxz
adc
mov
push
dec
xchg
mov
dec
call
xchg
std
sbbl
inc
stos
mov
data16
adc
push
mov
stos
js
in
ss
add
mov
pop
cli
enter
shlb
mov
dec
movsl
xor
xor
fcoml
pop
sti
outsb
mull
in
fmuls
lods
cli
stc
ret
jno
cmp
mov
daa
icebp
cmp
loope
adc
cltd
test
and
mov
add
jl
enter
mov
push
push
int
iret
lods
adc
out
imull
or
xor
stos
inc
mov
and
mov
pop
cmp
stos
sub
or
fnstcw
push
xchg
insb
dec
outsb
push
mov
xor
cli
sub
das
pop
andb
fnsave
push
in
scas
mov
fdivrl
xor
xor
cli
dec
push
mov
push
inc
and
pop
pop
mov
inc
cmp
sti
jp
xor
imul
iret
add
in
mov
insl
push
jne
outsb
mov
repz
and
mov
cmp
jb
enter
cmp
mov
out
ss
mov
cld
xchg
mov
sti
cmc
add
inc
pop
mov
aas
lods
dec
es
mov
xlat
mov
mov
nop
stos
cwtl
lcall
pop
into
popa
xchg
scas
or
sbb
sbb
mov
and
xor
sub
sub
stos
bound
sub
mov
cmp
dec
in
cmpsl
inc
add
jnp
xchg
inc
mov
out
cmpsl
aas
jle
lret
sub
enter
mov
cmc
dec
fst
std
mov
push
xchg
ret
not
ljmp
lcall
mov
sbb
mov
add
adc
xchg
in
lods
sub
sub
aaa
inc
lcall
push
rorb
pop
pop
xchg
pop
fdivr
data16
sbb
loop
jo
sbb
dec
jo
push
add
loope
or
push
lock
arpl
shrb
aam
loopne
sub
xor
es
push
neg
inc
fucom
lahf
shll
lcall
insb
adc
ljmp
or
xchg
ds
nop
cmc
loope
inc
xchg
int3
mov
or
or
hlt
adc
leave
ret
mov
push
pop
stc
xor
in
pop
sub
cmpsl
xor
xlat
fcomps
lahf
adc
inc
cld
and
xor
xor
mov
aam
pop
jbe
jb
pop
sub
mov
testl
inc
outsl
lahf
xlat
cltd
inc
out
xor
jmp
dec
cmc
xchg
mov
mov
lret
push
pop
adcb
jnp
aam
sbb
sbb
ss
in
dec
push
cmp
scas
lock
xchg
cmpb
ret
mov
js
and
sbb
lret
jns
cmp
roll
mov
repnz
and
and
call
icebp
data16
push
jo
push
cmp
push
inc
pop
adc
hlt
sbb
ret
shlb
dec
ret
and
mov
outsl
pusha
pop
rorb
out
adc
sbb
and
push
pop
push
cld
inc
or
ss
xchg
popa
jge
xchg
jnp
mov
jo
loop
mov
jmp
or
mov
pop
les
adc
cs
mov
cmpsl
lock
xor
stc
movsl
and
movsl
or
into
cmp
add
insb
andl
nop
mov
sbb
cmp
movsl
lds
pop
sbb
pop
cmp
ret
sbb
or
mov
lretw
jp
mov
jmp
lea
int3
pop
cmc
inc
jne
jbe
ret
lods
xchg
andb
ss
neg
daa
sbb
insl
inc
aaa
jmp
xchg
sub
ja
pop
xor
and
pop
mov
notb
hlt
and
push
sub
stos
ret
cmp
and
sub
test
sub
sbb
int3
jne
iret
std
add
mov
popf
jge
int3
cmp
mov
inc
push
jne
pop
or
xchg
inc
cmp
jg
pop
into
xor
pushl
jmp
xor
mov
pop
sbb
lds
mov
mov
fbld
xor
enter
bound
cli
fadd
clc
lock
cmp
inc
stc
mov
mov
jne
mov
adcb
adc
jno
mov
pop
sub
cmpsb
xchg
jg
pop
not
cld
push
sub
adc
sub
xor
push
outsb
scas
or
cs
imul
inc
and
sbb
or
mov
cli
scas
pop
xchg
in
lods
lds
or
push
push
loopne
xor
fmuls
mov
fidivrl
in
fsincos
ds
mov
sub
fwait
inc
and
dec
push
mov
adc
mov
lret
lods
pop
stc
cmp
or
dec
mov
cmc
cmp
or
pop
into
pop
mov
sarb
fstp
clc
push
fidivl
jne
lock
in
sahf
cmp
in
xor
aam
addr16
inc
scas
and
cwtl
push
and
adc
movsl
mov
fcomi
loopne
adc
dec
mov
xlat
xchg
xchg
mov
push
dec
add
push
jmp
sahf
cld
jmp
aad
popa
cmpsl
jnp
shrb
push
sbbb
in
pop
mov
cmpb
hlt
xchg
loop,pn
scas
lret
sbb
mov
in
cmc
mov
mov
xchg
aas
jecxz
in
and
adc
neg
mov
sbb
ja
ljmp
cmp
xor
mov
daa
mov
push
dec
mov
arpl
pop
inc
clc
imul
sub
dec
dec
pop
xchg
popa
out
cmp
mov
pop
dec
inc
aam
lds
mov
push
iret
dec
dec
cmc
outsl
out
aas
push
testl
data16
push
sbb
and
shrb
push
sbb
pop
adc
scas
ljmp
sbb
mov
pop
sub
cwtl
mov
lret
mov
jge
jae
cmp
shl
and
fiadds
les
insb
mov
xchg
cmpsb
push
adc
fwait
fwait
into
mov
shr
cmpsl
push
loope
mov
mov
lahf
mov
clc
gs
lds
fs
js
ljmp
add
pop
jmp
jns
lret
mov
adcl
gs
jo
hlt
lds
add
inc
mov
jg
test
xchg
jno
outsl
add
lods
pusha
cld
add
test
xchg
mov
jno
mov
fistl
movsb
cmp
icebp
and
clc
lea
lods
lahf
sub
jno
arpl
lds
or
popf
mov
dec
cmc
dec
mov
xchg
repz
xchg
adc
cmp
mov
in
stc
pop
jae
dec
into
xchg
sub
jns
xor
xor
jnp
in
mov
repnz
add
enter
pop
inc
movsb
mov
rcrl
pusha
or
push
fdivrs
lock
int3
add
fildl
movsl
js,pn
push
shrl
adc
pop
pop
pop
pop
mov
push
xchg
pop
or
lods
insb
cmp
movsb
lds
ss
lret
in
cmovno
or
stos
insb
or
pop
xor
insb
adc
add
rolb
lock
jge
ret
xor
enter
inc
jbe
pop
cmp
adc
nop
mov
movsl
pop
fwait
cli
lret
push
stc
rorb
mov
adc
gs
add
add
testb
push
shll
cmp
cwtl
xor
cld
scas
push
xor
xchg
mov
and
movsb
inc
mov
push
inc
repz
cmp
fwait
shll
pop
gs
pop
mov
inc
add
xchg
add
fsts
jecxz
hlt
lods
adc
add
inc
add
jbe
sahf
js
lods
scas
dec
jae
fstpt
adc
sub
or
movb
sti
inc
add
stos
loop
dec
mov
mov
mov
mov
aad
pop
or
aad
cs
lret
add
fnstsw
pusha
in
ja
and
adc
int
gs
mov
movsb
icebp
pop
daa
enter
ss
or
jge
mov
mov
aam
test
ja
lds
pop
nop
pop
lret
in
cmpb
enter
and
out
and
adc
jg
call
sub
inc
lcall
gs
out
adc
push
adc
lock
jge
xchg
mov
hlt
mov
repz
jecxz
and
sub
daa
sub
cld
rcll
in
mov
dec
pminub
mov
movsl
cmc
xchg
mov
sbb
jmp
xor
sub
out
das
cmp
adc
ss
jbe
mov
dec
xor
sti
test
pop
ret
pop
in
or
out
push
imul
push
adc
push
cltd
dec
add
int3
scas
adc
aas
inc
jmp
jmp
xchg
fcoms
add
mov
jns
cmp
mov
push
out
hlt
jg
mov
mov
iret
adc
xor
nop
ret
out
shrb
mov
hlt
out
lds
std
les
mov
xchg
lods
push
out
pop
add
insl
inc
andl
repnz
addl
sarb
adc
dec
addl
adc
xchg
mov
lock
cltd
mov
ret
push
fidivl
cmp
sbb
test
inc
mov
pop
in
repz
fwait
or
dec
shr
dec
dec
add
jge
adc
or
cmpsl
sbb
scas
jo
xchg
jne
jo
sbb
cli
sub
test
std
xchg
inc
addr16
xor
or
xchg
adc
stc
lock
push
enter
mov
sub
mov
mov
pushf
mov
fcmovb
and
jno
mov
scas
dec
mov
push
push
pop
xlat
jbe
rclb
ret
mov
fisttps
shlb
in
mov
pop
dec
mov
fldcw
mov
rcll
cmp
fbld
and
sahf
test
jl
stc
and
dec
clc
and
nop
insl
lahf
mov
dec
sar
sbb
cmp
push
adc
pop
fdivr
adc
loopne
pushf
or
xchg
imul
aaa
daa
jmp
adc
insl
mov
xchg
dec
aaa
dec
fs
ret
cmp
add
loop
and
push
pusha
sbb
jge
addr16
rcr
fildl
pop
sbb
or
inc
aas
pop
cmpsl
mov
cmp
pop
sub
ss
mov
inc
addr16
jle
dec
pushf
bound
orb
jb
push
push
ja
xor
push
push
and
addr16
mov
rorl
adc
mov
jno
dec
push
icebp
aaa
sbb
fstl
test
pop
inc
xlat
pop
pusha
lock
loopne
sahf
mov
cmp
popf
sbb
repnz
lods
outsb
out
sub
sub
ljmp
lods
mov
popf
pop
push
push
cltd
repnz
pop
xchg
jecxz
negb
and
in
push
movlps
fisttpll
loop
ss
ret
rcr
jns
bound
and
cmp
mov
ja
sub
fldenv
stos
inc
sbb
mov
push
or
aas
mov
mov
cld
adc
and
rorl
inc
iret
adc
push
pop
dec
cmp
popf
arpl
je
adc
sub
filds
cltd
leave
jnp
mov
add
fwait
add
out
jle
inc
push
fsts
add
lahf
pop
push
fldenv
ljmp
negb
dec
mov
movsl
push
ret
icebp
ljmp
in
lods
mov
jg
adc
xchg
cmpsb
sarb
jp
inc
popa
lea
jecxz
mov
pop
jmp
cmpsb
xlat
ror
outsb
into
jne
addr16
mov
push
xor
cs
jmp
jg
inc
mov
rolb
sbb
cmc
dec
jg
sbb
cmp
dec
fdivrs
stos
add
cltd
call
cld
or
pop
loope
sahf
or
lock
adc
jle
xchg
dec
add
and
mov
xchg
movsb
add
mov
cmpsb
mov
pop
test
cmpsl
mov
std
pop
ja
xchg
dec
xor
in
movsb
mov
or
xchg
shlb
call
pusha
icebp
jbe
mov
cmp
divb
xchg
xlat
xchg
outsb
scas
mov
outsl
test
pusha
mov
lods
push
push
inc
sti
test
cmpsb
pop
pop
xchg
and
loope
inc
inc
bound
mov
icebp
xchg
adc
dec
int3
stc
mov
fs
dec
xchg
sbbl
jle
xor
aaa
sbb
jb
pusha
daa
pop
mov
mov
sub
ret
fwait
cwtl
or
push
sarb
out
push
mov
pop
mov
ss
lcall
push
int3
xorl
out
cli
sub
jb
push
aas
xchg
jnp
mov
xchg
jae
sub
out
repnz
cmp
imul
dec
in
out
jmp
sbbl
roll
mov
mov
or
adc
test
adc
mov
sub
jno
or
xchg
push
repnz
iret
rclb
mov
cmpsb
xchg
mov
mov
ss
aad
pop
sahf
nop
in
or
repz
nopl
in
imul
mov
mov
movsl
mov
les
sub
xchg
loopne
dec
out
std
inc
shll
dec
sub
mov
sti
in
dec
cmpb
es
adc
dec
adc
mov
jp
pop
or
sub
cwtl
fs
dec
pop
les
aam
add
add
popa
push
addr16
mov
adc
pop
xchg
jne
inc
and
mov
dec
stos
xor
imul
rcll
outsl
cmpsb
scas
ja
inc
push
lahf
loopne
xchg
or
jge
mov
insl
pusha
pop
mov
xor
jmp
dec
fdivl
pop
repz
sbb
xchg
pop
sbb
jo
enter
cltd
mov
in
push
push
xchg
or
push
imull
jmp
dec
loope
das
or
or
cld
dec
fsubrl
fs
pop
mov
js
fistpl
push
outsb
add
out
cmp
and
mov
adc
or
push
sti
adc
scas
sub
repz
mov
ss
in
stos
cmpsb
cmp
movsb
cmp
data16
gs
imul
leave
sbb
lock
out
push
push
gs
xor
out
or
push
jmp
icebp
jp
jae
js
and
scas
cmpsb
ret
push
sbb
add
and
imulb
add
xchg
pushf
dec
adc
inc
xor
jle
test
sbb
es
lods
lock
stos
in
sbb
and
mov
call
dec
and
out
and
jb
add
loop
and
mov
popf
mov
xchg
dec
lret
dec
xor
iret
mov
dec
bound
and
aad
outsb
daa
outsb
movsl
lret
mov
sub
jae
push
int3
mov
out
push
out
push
xchg
cs
insl
orb
add
xlat
inc
int3
test
fcompl
lds
and
das
lea
xchg
addr16
lock
or
mov
ret
jo
nop
push
movsl
push
int3
fs
rcll
inc
addb
hlt
or
xchg
dec
int
xchg
sbb
and
cmc
inc
xor
popf
push
mov
int3
adcb
pop
sub
test
add
fidivrl
rorb
je
jbe
or
lods
inc
xor
push
daa
nop
test
aaa
dec
adc
repz
lahf
sub
mov
push
xor
ds
dec
push
in
xor
push
adc
out
xor
leave
testb
shlb
inc
adc
out
mov
cmovg
push
sti
sub
js
mov
ljmp
icebp
scas
push
in
rclb
je
pop
mov
jbe
hlt
iret
xchg
cwtl
and
scas
adc
push
dec
dec
lods
seta
xor
repnz
add
adc
je
imul
lahf
mov
out
mov
xor
test
cmp
in
cmp
mov
adc
paddsb
xchg
or
test
test
adc
mov
mov
jmp
xor
jbe
ret
cmp
pushf
bound
sub
outsl
cmp
mov
dec
notl
xchg
jmp
cltd
sub
mov
jmp
test
loope
push
adc
cld
inc
js
out
sbb
mov
js
enter
out
dec
clc
mov
mov
ds
add
adc
mov
push
sub
mov
push
aaa
cwtl
push
mov
xchg
mov
sbb
test
fwait
mov
sub
jg
popl
addr16
lea
mov
sub
sub
pop
xor
dec
sub
out
xlat
jp
cli
mov
loope
scas
icebp
shll
fcomps
xor
jmp
jno
or
mov
in
add
stc
push
lret
pushf
xchg
scas
mov
cmc
or
jbe
out
pop
mov
xlat
pop
stc
frstor
in
in
and
mov
cmpsb
dec
stos
test
insl
aaa
mov
jp
bnd
sbb
les
scas
lret
jmp
adc
xor
out
stos
add
int
cli
add
popf
inc
mov
jle
sbb
jno
lret
xchg
fisubl
cmpsl
pop
pop
lds
push
movsl
xchg
xchg
arpl
nop
pop
test
lods
mov
xor
xor
mov
adc
jle
lahf
sub
xor
cmp
add
pop
push
shr
jns
in
or
pop
dec
nop
pop
aad
rcll
rcrb
cltd
lds
out
imul
sub
movsb
pop
cmp
adc
inc
adc
arpl
mov
and
inc
sub
jmp
mov
sahf
push
push
cmc
in
loop
stos
daa
add
add
mov
and
cmp
sub
in
xchg
mov
add
push
in
repnz
les
test
or
push
loop
jl
out
imul
or
xor
lock
pop
rorl
mov
xor
jb
pop
imul
push
mov
push
mov
popa
ficoms
inc
ds
cs
adc
jmp
and
push
sarb
out
scas
arpl
ss
mov
add
scas
ficomps
call
mov
or
sbb
cld
int
cmpsl
test
pop
cmp
cmp
mov
in
inc
pop
cmpxchg
fldl
mov
mov
pop
dec
or
add
dec
lock
fwait
jmp
sbb
jns
mov
sbb
jo
call
pushf
push
ret
stos
push
mov
cmpsb
std
jne
inc
dec
lds
push
dec
xchg
ret
push
sbb
je
fadds
fiaddl
iret
sub
inc
ja
mov
cltd
das
fiadds
pop
pop
xor
pop
stc
movsb
xchg
inc
xor
adc
lods
mov
xchg
xor
push
push
les
das
imul
daa
pop
cmpsb
jmp
or
test
mov
jp
push
xchg
sub
repnz
das
gs
fistl
in
fnstcw
pop
mov
add
mov
icebp
stos
pop
cmp
aaa
loope
or
inc
movb
mov
sbb
cltd
xchg
movsb
sub
mov
sub
int
orb
jp
int
sbb
les
inc
or
scas
cmp
and
lods
aaa
or
pop
pop
test
out
sbbb
mov
jns
mov
pop
jns
xor
push
push
jle
std
sti
jl
xor
xor
nop
cli
cli
insb
push
sbb
aaa
movsb
ret
out
jle
mov
push
fwait
out
mov
mov
lcall
and
push
or
jo
notl
pop
push
mov
popa
dec
xor
shlb
dec
mov
cmpb
mov
mov
and
and
mov
sub
mov
or
fnstcw
add
ljmp
mov
subl
rol
dec
xorb
ja
xchg
adc
fwait
rol
inc
or
or
cmp
pop
jns
jnp
out
fisubrl
lds
andb
inc
xor
xor
jecxz
push
lds
and
jle
sahf
sub
push
cmpsl
pop
mov
das
dec
push
fimuls
sti
mov
jns
dec
in
mov
idiv
repnz
stos
daa
lcall
pop
cmp
divb
enter
test
divl
cmp
movsl
ret
add
test
jge
mov
xchg
hlt
or
filds
aad
sub
dec
icebp
jmp
fistpll
mov
sub
in
icebp
lds
jecxz
scas
pop
mov
ja
xor
lods
inc
add
insb
lods
dec
mov
lcall
int
mov
in
cmpsl
cld
lret
sub
imul
cmc
mov
int
fsts
jo
out
jnp
xchg
push
push
sbb
dec
push
sub
xchg
cmpsl
mov
jne
push
frstor
ja
dec
add
mov
mov
push
jae
call
add
aad
lea
xlat
outsb
idiv
mov
int
out
loopne
outsl
pop
push
sub
test
dec
pop
inc
adc
dec
in
jo
jne
into
inc
fistpl
pushf
mov
addr16
call
mov
jnp
cmp
pusha
popa
and
mov
fwait
mov
push
mov
cmpsb
sub
cli
sarl
fs
inc
fistl
mov
adc
lret
sbb
cld
pop
std
sbb
pop
sub
or
cli
mov
repz
xor
in
inc
cmp
mov
mov
lds
ss
lcall
inc
insl
sub
xchg
or
and
cmp
sub
mov
das
je
push
call
or
es
pusha
mov
ja
jl
mov
sub
add
out
pop
jmp
test
adc
xchg
addr16
popa
ret
push
xchg
fs
in
sbb
push
inc
stos
int3
scas
xor
jno
push
imul
push
daa
fwait
icebp
fimuls
add
pop
add
dec
test
mov
dec
cli
cmp
push
inc
push
sbbl
stos
lods
sbb
xor
jbe
sub
mov
sbb
test
push
arpl
stc
aaa
add
mov
ja
add
xchg
mov
inc
xchg
xchg
push
lcall
pushf
repz
call
aam
xchg
xlat
adc
add
mov
rcrb
pop
xchg
cwtl
iret
cmp
leave
pushf
js
xor
push
pushf
xor
cmp
out
std
roll
push
call
ja
mov
inc
inc
enter
std
lods
add
cltd
xchg
ljmp
hlt
nop
aas
pop
popf
pop
imul
test
mov
inc
pop
or
in
mov
inc
xorl
mov
push
out
sahf
mov
add
sub
sub
cmp
and
rcrb
sbb
subl
mov
test
clc
lock
push
hlt
sbb
test
ss
sbb
lods
aam
cli
mov
adc
test
push
ljmp
in
je
fsubl
or
hlt
and
inc
pop
les
rol
and
adc
sbb
dec
xor
jne
lret
dec
data16
cmp
xchg
xchg
mov
aas
ja
jns
sbb
cmp
int3
xor
inc
cmp
insb
inc
addb
lcall
pop
call
bound
dec
movsb
lods
add
das
rcrl
or
inc
inc
push
pop
push
sub
mov
add
fwait
xchg
scas
jl
add
add
data16
ljmp
add
xchg
daa
aaa
mov
mov
lret
cld
lods
xor
cmp
or
xchg
mov
mov
mov
and
test
sub
cwtl
xchg
push
jecxz
cli
ja
mov
out
hlt
into
lahf
cwtl
jo
jbe
cltd
pop
sahf
test
or
sarl
fistps
ljmp
loope
mov
mov
pop
outsb
andb
xchg
rcrb
in
dec
xlat
lcall
pop
mov
jno
cmp
bound
aad
cmpsl
leave
std
lods
and
cltd
mov
jbe
cld
push
mov
mov
jo
inc
test
xchg
out
mov
ss
out
sti
cmpl
mov
jmp
adc
in
and
stc
add
cmc
lock
mov
mov
mov
popa
xchg
testb
xor
mov
dec
sub
mov
fs
xor
push
add
sbb
test
shrb
rolb
je
call
mov
cli
stos
iret
sub
mov
pop
cmp
aas
pop
dec
jnp
aam
je
mov
pop
dec
jnp
lock
push
push
gs
outsl
mov
out
cmp
inc
jl
icebp
push
add
jge
cmpb
push
jae
fisttpl
jg
mov
fnsave
mov
cs
stc
xchg
rol
loop
scas
xlat
int3
jns
add
xor
push
xor
sbb
jl
pop
mov
mov
cld
mov
out
jmp
mov
jo
fs
in
cmp
orb
fldenv
sbb
pop
push
dec
sbb
mov
push
or
xchg
xchg
add
pop
test
pop
dec
iret
call
push
in
jle
push
push
jae
mov
add
mov
icebp
push
xchg
dec
cmp
inc
sub
hlt
lahf
add
dec
sbb
add
add
in
shl
sbb
push
in
jbe
aaa
sub
sahf
xchg
js
and
shll
hlt
mov
jp
dec
pop
div
aaa
lods
inc
outsb
mov
or
cmp
push
into
stos
xchg
xchg
and
and
enter
hlt
cmp
cld
pusha
push
mov
orb
mov
sbb
repnz
cmpsb
mov
hlt
mov
xchg
push
loop
mov
icebp
xor
push
pop
push
repnz
add
fs
adc
out
ss
fld
xchg
pusha
jo
pop
cmpsl
enter
inc
sbb
mov
shll
leave
xchg
add
fwait
shll
in
pandn
pop
ljmp
jl
int
and
xchg
inc
pop
movsb
das
lahf
mov
push
xchg
mov
push
cmp
xor
or
push
mov
popf
push
mov
out
xor
shrl
stc
fidivrs
mov
xchg
mov
pushl
dec
es
testb
fistl
test
cmp
adc
add
jl
cli
imul
les
andl
hlt
test
jmp
imull
out
add
iret
fistps
dec
aaa
inc
cmpsl
or
and
sub
xor
icebp
or
test
jge
sbb
pop
nop
testl
push
mov
dec
adc
es
cs
and
jnp
scas
out
xor
mov
loopne
cmp
lret
xchg
pop
pop
mov
and
xor
movsb
mov
xchg
jecxz
add
aam
ror
jne
ror
imul
dec
repz
and
icebp
jmp
inc
ja
cmc
xor
shlb
sub
jecxz
in
cs
rclb
scas
push
cmp
repnz
mov
call
push
push
push
or
mov
xchg
iret
fbld
sub
xchg
fcoms
movsl
sbbb
js
sarl
shlb
mov
pop
xchg
mov
arpl
mov
dec
and
sbb
leave
lcall
mov
aaa
push
lret
dec
imul
dec
scas
xchg
xor
rorl
push
ds
and
hlt
outsb
out
adc
mov
test
sub
test
ja
sub
shlb
data16
imul
jae
cmp
mov
in
pop
les
xchg
jmp
adc
push
cmpsl
jnp
pop
jle
in
mov
jmp
inc
std
ror
stos
dec
inc
or
in
test
scas
xor
loop
push
xchg
and
sahf
pop
jp
rclb
cmp
into
cmp
daa
aam
movsb
pop
popf
inc
adc
jge
jbe
jp
cs
movsb
jo
aaa
lea
mov
mov
bound
push
mov
mov
mov
fbld
inc
ror
mov
fnstsw
sub
mov
jae
pop
jp
sub
fisubs
xchg
sub
mov
mov
sbb
xchg
enter
movsb
es
lods
daa
dec
xchg
mov
xchg
xchg
jnp
xchg
loopne
jno
push
and
in
outsl
ss
sbb
cs
popa
nop
and
scas
xlat
subl
icebp
shl
add
or
inc
test
mov
cmp
imul
pop
je
cld
outsl
cmp
in
imul
jle
jl
data16
hlt
sbb
inc
mov
adc
inc
bound
addr16
mov
inc
in
call
adc
cmp
enter
je
out
xchg
add
xlat
stc
sbb
mov
dec
cmp
in
add
sub
rorl
fabs
jo
mov
mul
adc
sub
inc
cs
pop
lcall
pop
adc
and
dec
jae
sbb
gs
jb
jg
js
inc
inc
cmp
dec
sti
adc
stos
adc
movsb
pop
push
adc
lret
insb
cli
add
adc
sub
pusha
jb
xchg
lock
sbb
les
mov
push
out
icebp
ja
mov
sarb
ja
add
mov
jg
sub
sub
cmp
xlat
sub
cli
push
pop
fsubrl
add
jns
lret
lret
cli
je
sub
inc
sub
std
xor
lods
jmp
mov
add
imull
or
in
rorb
shrb
int3
mov
data16
mov
mov
adc
add
js
push
sub
and
xor
stos
cmp
and
mov
jbe
rol
insl
push
cmp
out
pop
xor
cld
dec
mov
mov
xchg
xorl
pop
mov
mov
cmpsb
mov
xor
mov
or
inc
mov
scas
mov
push
inc
mulb
insb
pusha
and
push
testl
inc
cmp
fnsave
mov
jp
dec
dec
inc
pop
dec
xchg
ss
xchg
rcrl
mov
cmp
adc
xchg
les
ret
jne
dec
xchg
mov
xchg
shl
cmp
or
inc
xor
in
mov
ret
inc
js
popa
stos
sbb
inc
fimuls
or
mov
inc
clc
leave
or
pop
cltd
sub
jns
mov
xchg
sbb
js
pop
and
cmp
cwtl
or
das
jne
and
xchg
leave
insb
scas
shl
adc
mov
loope
int3
hlt
outsl
sub
std
rolb
or
out
push
out
mov
stos
leave
push
lods
xor
add
adc
adc
lds
sbb
jg
rcr
jmp
sbb
or
push
xchg
mov
test
xor
mov
fs
lea
call
into
xlat
lods
sbb
and
sar
rolb
je
jo
out
add
mov
fbld
push
daa
mov
imul
call
push
push
cld
mov
xor
stos
cmp
stc
scas
dec
sbb
or
push
pop
jae
sbb
jne
mov
and
mov
xor
push
mov
mov
daa
jnp
and
or
ja
pop
ret
lea
push
dec
fmul
and
or
mov
jp
in
fstpt
sub
or
and
inc
clc
jo
adc
add
push
sbb
fs
mov
lock
mov
pop
add
xlat
pop
data16
in
inc
mov
mov
jecxz
jmp
aaa
xchg
into
arpl
subl
lret
xchg
xor
mov
cmp
add
enter
mov
subl
cmc
or
rcll
and
rol
lods
dec
arpl
jl
push
rolb
cmpsb
xor
jno,pt
pop
sbb
inc
pop
push
mov
lds
xor
inc
push
ljmp
xor
iret
fisttpll
mov
push
inc
jmp
ret
pop
adc
cltd
xchg
adc
daa
push
jo
inc
rolb
dec
pusha
push
fisubl
mov
mov
adc
cmp
jnp
add
mov
and
sbb
mov
sbb
int3
xchg
cs
jl
setbe
push
mov
xchg
jp
fsts
lods
push
xchg
sub
push
testl
mov
sub
stos
inc
movsl
mov
cmp
lods
bound
jae
xchg
pop
xchg
mov
sub
pop
mov
arpl
fadds
repz
fcompl
jnp
inc
jmp
push
popf
jne
inc
inc
std
iret
clc
mov
aad
sub
cmpsb
out
data16
jo
out
popf
push
push
pop
cs
cmp
lret
cmpsl
push
xlat
stc
xor
jae
fadd
push
rorb
xchg
aad
sbb
insl
add
cmp
mov
ja
cmp
in
jge
scas
ja
rorl
cmpsl
clc
mov
adc
addl
rcl
mov
std
inc
outsl
dec
xchg
nop
negb
insb
in
fsubp
hlt
sbb
xor
xchg
jge
jns
aaa
and
adc
mov
and
lods
sahf
movsl
pop
movsl
jle
fwait
das
jg
icebp
popa
rcrl
in
xchg
addr16
data16
test
js
pushf
fwait
arpl
adc
cmp
push
fimull
data16
pop
popf
cmpsl
xor
add
fprem1
lret
jp
into
fnstcw
rorl
pop
or
ss
push
push
sub
icebp
scas
dec
js
push
push
mov
mov
mov
or
push
sub
cmp
bound
adc
inc
mov
dec
pop
pop
adc
insl
jns
out
and
stos
pop
aaa
dec
mov
fs
inc
inc
fisttpl
mov
pop
cmp
pop
insb
push
cmp
xchg
dec
xor
xor
pop
mov
stos
sub
in
sbb
fistps
mov
sbb
popa
dec
jb
cmpsb
pop
bound
sarl
mov
je
mov
aam
xchg
int3
cld
cmp
cli
push
out
xchg
pop
and
dec
cmpsl
mov
imul
add
jae
dec
push
adc
add
pop
in
xchg
and
fldt
cld
mov
lods
mov
cmp
mov
mov
inc
mov
xchg
out
sub
and
popa
enter
inc
sub
dec
push
daa
fwait
ljmp
shl
inc
nop
pop
adc
cmp
jecxz
mov
mov
in
push
dec
js
jecxz
adc
dec
out
mov
push
sub
jne
scas
jno
ja
divb
pushf
incb
insl
xchg
in
or
lret
negb
lods
xor
lods
jle
sbb
mov
out
lret
insb
scas
jge
or
aas
xchg
inc
dec
xchg
push
stc
inc
popa
cmp
aam
pop
inc
mov
sub
jecxz
sahf
xor
push
pop
pop
jo
ret
sub
jo
sub
pop
fwait
mov
repz
xorb
cli
sarb
sahf
pop
fwait
and
pop
in
mov
daa
and
mov
cmc
loope
out
mov
je
arpl
icebp
jl
fidivs
add
sub
test
push
loop
and
nopl
xchg
imul
cwtl
push
mov
xchg
shlb
out
xchg
xchg
mov
test
pop
jg
data16
push
out
jp
push
je
fsubp
cmp
lock
out
ss
inc
adc
mov
fists
jno
dec
or
sub
in
std
ret
push
jg
ret
sub
stos
jge
mov
addl
leave
pusha
push
or
sub
inc
add
insb
cmc
imul
xchg
mov
mov
jp
pop
push
aad
or
push
pop
add
movsl
enter
mov
or
add
dec
cli
mov
outsl
mov
jne
shrl
dec
mov
dec
ss
adc
sbbb
inc
iret
outsl
cld
mov
jmp
pop
mov
mov
and
ret
dec
fdivs
inc
jnp
cmpsl
or
pop
in
sbb
cmp
sub
mov
cmovl
std
pop
fsubl
pop
jno
mov
in
je
ss
mov
inc
xchg
push
psraw
hlt
pop
sub
outsb
dec
xchg
pop
xchg
outsb
sub
test
test
in
ljmp
jns
inc
jne
push
mov
incl
scas
es
cmp
xchg
sti
fsubs
jg
xor
and
bound
inc
je
jns
jle
lea
jb
adc
leave
sub
fsubrs
dec
jge
adc
xchg
aaa
js
or
pop
std
xor
ficomps
sbb
dec
push
xlat
pop
cmc
popl
cmp
js
adc
cwtl
inc
xor
ss
data16
pop
inc
mov
push
push
jb
mov
repnz
jae
or
std
bswap
adc
xchg
xchg
sti
div
sub
jle
and
mov
push
stos
lret
push
clc
mov
fbstp
lods
sbb
lds
popf
and
das
xchg
fiadds
decl
dec
sbb
in
sub
subb
mov
sub
mov
lret
mov
mov
xorb
daa
in
pusha
pop
mov
cld
dec
xchg
and
adcl
daa
jmp
or
lea
ljmp
dec
sub
and
push
pop
movsl
sbb
in
loope
bound
sub
pushf
jb
fstpl
add
pop
dec
jg
ja
xor
and
out
or
inc
sub
les
sub
lret
stos
mov
adc
ja
push
xor
stc
jg,pn
cwtl
imul
add
mov
mov
loope
adc
test
add
sbb
fmull
lock
es
es
and
faddl
shlb
mov
imulb
idiv
cli
jle
inc
enter
add
xor
xor
xchg
dec
out
lret
cmp
movb
and
jb
xchg
sub
sbb
xchg
jmp
lock
sbb
jl
mov
inc
dec
test
pop
inc
mov
cwtl
repnz
das
jno
mov
pop
push
lods
leave
and
stos
mov
dec
and
push
sub
mov
xor
idivl
xchg
sti
inc
ss
clc
aaa
outsb
adc
and
shlb
nop
xorl
mov
mov
pop
das
mov
xor
sbb
xor
cwtl
sub
pop
xchg
outsl
outsb
arpl
lret
xchg
in
shlb
dec
and
lret
push
sarl
push
lods
and
ror
xchg
paddsw
int
add
mov
or
aad
imul
pushf
negl
iret
sti
adcl
into
xorl
dec
mov
add
sbb
cmp
push
iret
inc
js
lret
pop
es
es
test
subl
aad
in
mull
jne
call
ljmp
jae
enter
adc
inc
lret
stos
in
fwait
ss
nop
push
jl
lds
sub
addb
sbb
adc
xchg
sbb
ljmp
jb
add
sub
in
add
adc
sbb
adc
repnz
sbb
pop
sbb
loop
in
dec
mov
push
pop
cli
mov
or
leave
in
sahf
xchg
push
mov
dec
mov
mov
cwtl
out
xor
mov
lret
cmpsl
add
mov
inc
mov
add
ds
popa
flds
cmc
dec
mull
mov
packsswb
sub
sub
sti
inc
movsl
out
jecxz
sbb
in
into
dec
and
push
xor
rorb
adc
sbb
jle
and
pop
jb
rorl
out
outsb
icebp
adc
hlt
jp
ljmp
xchg
lods
scas
jmp
dec
outsl
jecxz
mov
popa
rcr
pusha
rorl
mov
filds
sub
jns
mov
ljmp
hlt
ja
cwtl
pop
inc
or
movsl
imul
adc
cmp
and
pusha
dec
mov
scas
xchg
fidivrl
fs
adc
and
subl
mov
filds
sti
add
lcall
cld
or
movsb
cwtl
sbb
and
cwtl
dec
pop
es
add
jb
add
mov
push
inc
xchg
adc
ja
add
int3
cli
cmp
inc
push
leave
cmp
jecxz
adc
pop
js
mov
ret
test
cmp
jb
fiaddl
cmp
lahf
mov
dec
adc
or
lds
daa
rcrl
rclb
loope
fdivrs
mov
repz
fcmovnb
mov
enter
ficomps
mov
sbb
aas
stos
adc
mov
sub
pop
cli
out
sbbb
jg
xor
in
jns
or
cltd
or
sti
aam
xor
push
stos
cmpsb
ret
cld
mov
js
fcoms
daa
fisubl
mov
sbb
push
mov
scas
inc
push
mov
inc
mov
movsb
scas
ret
ret
in
sar
xchg
pop
out
add
test
mov
fld
stos
insl
testl
jge
fdivrs
xorb
inc
mov
inc
mull
push
mov
aad
shll
mov
push
cmp
jecxz
jge
mov
stc
lods
mov
addl
bound
inc
adc
imul
and
jb
lds
and
test
mov
cli
mov
lahf
sub
test
repnz
mov
inc
rcrl
jnp
xchg
add
shlb
mov
add
or
lahf
cltd
fidivs
xor
hlt
sahf
xor
out
mov
outsb
out
inc
ljmp
or
in
ljmp
iret
repnz
jae
xor
adc
fstpl
mov
pop
mov
push
push
dec
cmp
mov
jae
pop
clc
sbb
inc
inc
daa
repnz
rcll
je
xor
stos
ljmp
leave
fldt
add
pop
pop
stos
cmp
inc
ret
mov
std
dec
pop
fnsave
repz
cmpsb
insb
push
out
push
outsl
cmp
fld
lock
sbb
mov
push
mov
or
cmpsl
daa
stos
inc
jo
dec
push
cmpb
sub
xchg
jne
cwtl
and
lods
leave
mov
das
mov
dec
sub
push
jle
scas
out
rcll
sbb
jae
fsubrs
pop
in
lret
lcall
shl
push
cmp
mov
ret
jmp
lods
mov
negl
js
testb
mull
int3
sbb
out
icebp
fcoms
iret
and
test
cmp
call
rcr
fwait
xchg
jae
cs
scas
enter
pop
insl
js
dec
inc
xlat
xor
out
pop
cmp
inc
lods
notl
mov
mov
bnd
loop
and
adc
sbb
add
stos
repz
jle
jecxz
adc
push
push
arpl
xchg
shlb
mov
sub
sub
sbb
cmp
adc
mov
call
sub
mov
mov
clc
sbb
mov
pop
inc
sbb
push
loopne
and
lds
stos
xor
ljmp
stos
notl
jmp
mov
enter
pop
jmp
repnz
jge
sar
mov
sbb
sub
test
mov
fistps
add
or
mov
adc
mov
and
lea
aad
idiv
roll
cmpl
pop
lahf
rcr
inc
sbb
mov
dec
inc
dec
push
sub
test
rcrl
leave
int3
test
js
movsb
add
mov
adc
dec
pop
les
je
xchg
xchg
or
or
fsub
call
movsb
pop
leave
ljmp
jno
fcompl
cmovle
and
mov
sbb
xor
adc
sbb
push
pushf
inc
xor
mov
test
cli
adc
lcall
sbb
insb
sbbb
jnp
lahf
xchg
and
enter
push
shrl
jnp
outsl
cmp
outsb
sahf
cmp
push
vmovddup
outsl
inc
sbb
mov
aaa
stos
push
loop
or
lcall
or
test
mov
fsub
jp
pop
sub
pop
cli
leave
mov
idivb
jp
pushf
sbb
leave
sti
movsb
pop
jo
mov
ja
lds
in
fbld
pop
inc
test
ret
inc
in
add
pop
pop
adc
push
dec
test
jno
sar
xchg
imul
dec
jmp
mov
cwtl
cmp
inc
mov
sub
jno
add
mov
xor
adc
jge
mov
inc
xchg
mov
fs
jmp
rcrb
push
lcall
aaa
and
mov
lret
andb
mov
cmc
mov
aaa
bound
cmc
je
scas
int3
jb
je
lcall
sbbl
ret
scas
xchg
mov
push
add
hlt
mov
or
loope
pop
nop
cli
add
inc
clc
pop
arpl
dec
sbb
int
push
mov
push
mov
decb
in
std
and
rep
sti
cmp
mov
add
sbb
popa
and
gs
arpl
hlt
dec
cmc
aaa
sub
mov
ror
push
stos
mov
mov
imul
daa
movsl
fmuls
imul
push
lret
dec
out
adc
dec
pusha
cmc
pop
pop
xchg
inc
addr16
xchg
adc
pushf
mov
push
add
jmp
sub
leave
loope
fistl
push
or
iret
mov
inc
jbe
pop
mov
int3
push
xor
inc
jmp
push
or
imul
mov
dec
cli
mov
in
ret
add
into
and
or
in
jnp
daa
xor
dec
lods
gs
cwtl
mov
fistpl
add
pop
scas
sahf
adc
inc
xor
xor
int3
jle
pop
shl
and
inc
cmp
ljmp
out
mov
sub
push
negl
sub
xchg
xor
fwait
push
sbb
daa
cmp
ret
fdivs
jl
xor
xorb
mov
push
pop
outsb
test
dec
xor
inc
fcompl
mov
sahf
test
popf
imul
jp
sahf
jge
mov
negl
mov
int3
inc
out
cmc
pop
mov
jne
loope
cli
ja
icebp
test
lahf
inc
pop
test
jmp
sbb
dec
mov
call
cmp
pop
fs
or
xchg
sbb
mov
push
adc
das
out
push
or
xchg
imul
mov
movb
addr16
sbb
mov
aad
or
int
and
lds
sub
aam
daa
cmp
mov
inc
push
movsb
cwtl
in
arpl
movsl
cmpsl
out
add
mov
cmc
push
adc
pushl
call
lds
pop
push
pushf
testb
push
jmp
inc
inc
xor
mov
mov
cltd
out
das
daa
in
sub
xchg
adc
inc
jmp
xor
push
xor
lods
cmp
jle
add
in
cmpsl
mov
sti
jg
mov
sub
jnp
and
iret
mov
ret
clc
push
ljmp
cli
pop
adc
push
sub
xor
leave
sub
xchg
cmp
lahf
stos
xchg
xchg
cmp
int3
outsb
into
xor
and
and
outsl
pop
inc
enter
sub
dec
xor
add
mov
aad
daa
or
fnstsw
dec
or
push
mov
dec
les
popf
and
out
push
fs
push
mov
addl
test
ds
jge
xchg
adc
out
aas
xchg
loopne
mov
cwtl
add
sahf
sub
inc
outsl
es
xchg
xor
stc
push
incb
imul
test
dec
arpl
addl
jbe
int
or
push
inc
mov
in
adc
test
and
in
les
xchg
xor
xlat
adc
les
stos
dec
jle
or
rorl
into
sbb
and
or
cmp
addb
jne
aaa
and
mov
icebp
xor
mov
insl
add
pop
testb
imul
aam
sub
pop
pop
ds
jmp
jb
jl
gs
bound
push
sarb
jge
fcmovu
movsl
notb
inc
cltd
outsb
push
out
adc
inc
enter
dec
loopne
daa
in
shlb
xchg
test
aam
cmp
inc
mov
stc
mov
hlt
leave
ds
jb
call
pop
sub
adc
fs
movsb
cmpb
scas
cmp
pop
outsb
mov
hlt
cltd
pop
loop
imul
xor
shrl
ss
icebp
push
sub
xchg
or
dec
sysret
int3
xor
mov
bnd
into
xchg
and
sti
out
sub
and
dec
jle
pop
push
xchg
jae
or
pushf
icebp
fs
enter
or
adc
dec
and
push
inc
fst
rorb
pushl
andl
cmp
add
sub
loop
fmull
addr16
xlat
adc
or
es
inc
cltd
mov
gs
xchg
dec
dec
pop
mov
push
bound
pop
sub
xor
fwait
xor
mov
lods
sub
ds
and
pusha
leave
into
cmp
fcmovnb
data16
hlt
pop
into
cmp
mov
scas
int
in
lods
jae
mov
jmp
push
sub
inc
or
push
fyl2xp1
cmpsl
mov
inc
lcall
sub
lret
lcall
push
and
xor
gs
out
pop
leave
ret
jmp
aad
fistpll
sbb
in
push
sbbb
ljmp
sub
mov
std
leave
mov
dec
dec
ret
sbb
pop
pop
movsl
mov
addr16
push
scas
jb
pop
ljmp
and
jg
mov
mov
daa
jne
imul
push
push
les
and
call
adc
addl
inc
xor
inc
sub
adc
in
pop
fwait
add
jae
xchg
hlt
imull
stc
push
ds
fdivs
xor
lahf
pop
xchg
or
mov
out
sub
pop
shll
xor
sbb
into
mov
xlat
outsb
es
aam
mov
mov
mov
mov
cmpsb
gs
jnp
lea
jnp
gs
adc
and
mov
mov
push
pop
pop
xor
cwtl
mov
aad
xor
mov
jle
cmpsb
movups
mov
pop
xchg
xor
push
cmp
push
inc
sar
xchg
and
push
repnz
jp
sub
shlb
test
sbb
in
or
add
sub
ret
cmpsb
shl
test
or
mov
cmp
inc
push
dec
in
dec
jb
dec
push
inc
mov
sbb
stos
loopne
shll
rsqrtps
clc
dec
fbld
sub
rorl
in
cmp
xor
or
mov
call
xor
mov
dec
push
icebp
movsl
push
push
xchg
mov
xlat
loop
out
add
sub
test
lret
xchg
into
and
rol
pusha
xlat
mov
sbb
in
cmp
push
push
mov
dec
jge
or
cmp
out
push
push
sub
jg
mov
mov
mov
push
shrb
filds
out
mov
jno
out
fisubl
sbb
js
or
cli
push
inc
arpl
rcl
and
dec
mov
sbb
jp
jne
imul
adc
push
or
fists
jp
or
mov
mov
inc
or
in
pusha
sbb
xor
out
fucomip
pop
cmp
test
iret
cmp
repnz
imul
into
mov
cmp
adc
add
mov
add
adcl
sub
jge
das
ret
imul
mov
inc
jae
mov
aas
jae
mov
outsl
push
xchg
insl
scas
sbb
mov
test
dec
fbld
int3
inc
je
mov
loopne
clc
sarb
call
and
imul
xchg
cs
movsb
adc
pushf
xchg
or
jge
mul
ja
push
adcl
dec
jae
push
mov
bsf
outsb
jnp
movsb
xchg
icebp
mov
jecxz
pop
fistl
outsl
ds
or
imulb
pop
pop
sahf
mov
nop
and
or
jb
pop
mov
jo
xchg
sub
es
pusha
fistps
in
push
adc
cmp
jo
sbb
or
dec
mov
lret
std
in
clc
sbb
mov
fidivl
mov
cwtl
out
enter
shlb
out
rclb
jmp
jmp
xor
mov
bound
push
nop
pusha
stos
sbb
out
fwait
xchg
shl
add
sbb
sbb
lret
cmp
inc
jne
negb
je
fildll
pop
cmc
je
lahf
sbb
sub
iret
jb
mov
cli
pushf
sti
mov
fimull
clc
jge
inc
and
roll
or
mov
lock
cmp
lods
pop
mov
repz
ds
sub
ss
and
sahf
mov
std
pop
cld
inc
fwait
push
push
nop
push
mov
jnp
rcl
rolb
in
ljmp
inc
repnz
in
rolb
popf
mov
arpl
lahf
in
cmp
adc
pop
cmpsl
and
xchg
xchg
ss
mov
inc
imul
cmp
aam
sub
shlb
out
xchg
mov
leave
fcompl
mov
and
mov
mov
test
out
push
dec
fisubl
roll
scas
mov
push
mov
and
jnp
adc
imul
repnz
call
jmp
lret
xor
js
push
cli
insb
xchg
jb
push
repnz
sbb
sahf
mov
fidivrs
fimuls
sbb
adc
shlb
pushf
sahf
mov
push
sbb
inc
sub
iret
in
andb
jl
mov
aad
les
push
fldt
xchg
cmpsl
ss
mov
adc
push
jle
fld
jecxz
push
pop
dec
mov
dec
js
push
pop
leave
repz
xor
fcoms
ret
adc
xchg
jne
jmp
mov
pop
fstps
inc
ret
insl
mov
push
adc
mov
cltd
push
jnp
outsb
cli
jb
shrl
int
xor
cltd
xchg
bound
mov
mov
push
int
arpl
ja
cmp
mov
rorl
sbb
addr16
cmc
and
xor
push
xor
pop
push
dec
sub
les
cmp
mov
fistl
sbb
cwtl
cld
palignr
dec
jns
add
out
lds
push
notl
sub
sub
cs
outsl
cld
dec
pop
fcoml
stos
dec
inc
nop
push
inc
pop
cwtl
clc
sbbl
add
gs
jae
sbb
lea
mov
in
jge
or
adc
notl
sub
mov
imul
imul
xor
jl
mov
jg
cmp
pop
ficoml
imul
jle
pushf
add
in
mov
dec
pop
sbb
repnz
push
jb
into
fwait
jmp
fiadds
ja
fmul
daa
xor
dec
mulb
out
push
jp
aad
inc
sub
dec
pusha
sbb
add
cmp
sub
cld
aam
dec
pop
push
test
outsb
arpl
mov
mov
cs
gs
push
xchg
adc
push
cmpsb
cmp
jbe
ljmp
mov
jns
rclb
sub
mov
arpl
cli
inc
mov
xor
push
jbe
lds
scas
test
jns
mov
push
icebp
cwtl
popa
cmp
and
jmp
pop
push
and
clc
cs
mov
decb
push
cmpb
dec
inc
jo
mov
lds
or
sbb
pop
popw
cmp
push
push
jno
add
adcb
mov
loopne
cs
sbb
fiadds
sub
into
xchg
bound
and
push
xor
arpl
pop
lock
loop
xor
popa
lods
mov
mov
push
dec
sub
data16
clc
sarl
cmpb
push
cmp
div
in
repnz
mov
cmpl
push
inc
dec
inc
push
loop
int
test
mov
lds
mov
addr16
push
ljmp
dec
scas
add
imul
lds
mov
jno
imul
mov
jl
inc
cmp
out
mov
add
sbb
inc
popf
xchg
pop
scas
js
sub
and
mov
cmp
xchg
scas
or
das
addr16
rclb
and
adc
sbb
adc
decl
rcl
fists
sahf
sbb
gs
sahf
es
inc
stos
loopne
sbb
push
lds
mov
lahf
imul
gs
adc
cld
pusha
cmp
cmpsl
aas
into
and
enter
ret
sub
scas
pop
cmpb
int
push
cltd
pop
xchg
outsl
or
inc
sbb
dec
test
cli
leave
addr16
mov
movsl
faddl
out
xor
cld
push
or
and
shl
ret
iret
in
inc
xchg
push
add
xchg
xchg
aam
loopne
or
jmp
test
adc
imul
push
iret
addr16
insl
jo
xor
push
ja
sbbl
mov
fcmovnu
dec
pushf
inc
loop
insb
test
aas
repz
mov
mov
loopne
sub
add
push
pop
mov
lods
stos
stos
pop
sbb
lcall
sbb
pop
sbb
xlat
aad
and
pop
sarb
mov
fsub
movsl
fdiv
test
and
fbld
cmpl
mov
dec
dec
push
add
xchg
les
mov
ror
aam
inc
pop
sbb
push
jnp
cmp
mov
xor
shll
popa
sbb
sub
xlat
pop
out
xor
daa
xchg
xchg
inc
adc
jmp
and
fimuls
pop
adc
mov
ds
dec
sub
mov
cli
dec
ss
mov
inc
push
int
add
sbb
aaa
orb
stos
je
sbb
loope
sub
mov
js
call
adc
sub
shlb
mov
inc
js
dec
or
pop
xchg
dec
adc
subb
iret
and
sub
scas
jb
clc
shl
jnp
movsl
or
push
mov
xor
scas
test
adcl
xor
ljmp
push
aaa
data16
call
jmp
sub
shrb
pushf
inc
mov
nop
in
mov
and
sbb
sbbb
dec
sub
xchg
stos
in
xor
xor
or
sbb
pop
lods
dec
dec
jae
lods
cmpsl
jge
cmp
adc
pop
je
push
jns
pop
icebp
cld
dec
fisubrl
ljmp
repnz
push
fidivl
das
cmpsl
in
stc
xchg
aas
pop
es
cwtl
push
push
cmp
mov
loope
cli
addr16
lahf
imul
xchg
and
mov
jbe
mov
xor
cltd
int
gs
mov
fcmovu
push
sbb
ret
xchg
pop
adc
jnp
loop
cs
pop
add
iret
xor
xor
hlt
mov
testl
and
xor
mov
jecxz
mov
test
jnp
jns
mov
lret
mov
push
lock
pusha
lea
mov
fwait
jnp
cli
out
sbb
xor
xchg
insb
xor
add
cmpsl
or
and
fimull
cmpsb
fisubl
daa
xor
pop
insb
dec
and
mov
sub
inc
and
add
jg,pt
test
fwait
imul
xchg
pop
jle
jl
fldl
mov
ja
les
or
sarl
cmp
and
jge
and
ret
push
sbb
lods
push
xchg
add
ss
add
sub
jmp
sbb
xchg
xor
push
sti
pop
jecxz,pt
pop
or
das
inc
xor
inc
scas
push
mov
imul
fwait
ljmp
daa
mov
out
push
jb
sub
pop
jecxz
cmc
and
adc
fildl
mov
adc
dec
sti
sbb
ret
add
and
mov
pop
in
fs
iret
mov
jl
jg
dec
xchg
dec
lret
dec
faddl
add
test
sbb
aaa
out
or
stos
and
pop
out
pushf
sub
adc
ljmp
cmpb
mov
scas
aas
push
ss
negl
jp
dec
inc
cmp
out
ret
lcall
sbb
mov
or
add
pop
dec
adc
sbb
aad
xchg
test
movsb
test
or
scas
xchg
sbb
fucomi
inc
sti
pop
cmpsb
repz
loop
das
ljmp
test
jno
test
repz
jno
cmp
push
jb
lods
sbb
lods
inc
dec
mov
bnd
insb
mov
cld
xchg
jno
pop
xlat
mov
mov
mov
mov
loop
cmp
arpl
push
cwtl
clc
into
pushl
sub
mov
cmp
mov
fucomp
inc
xor
dec
cmpsl
test
ds
push
sbb
test
es
xor
int3
pop
push
fdivrs
cmp
jl
mov
shr
sbb
insb
fldt
push
test
push
rcrb
sub
mov
scas
ficoml
jne
lahf
jb
ud0
out
adcl
lock
dec
out
aas
sahf
sbb
xchg
and
sub
push
ret
lds
fcmovbe
int
add
cmp
adc
and
lahf
sub
xor
in
sub
das
add
sub
and
loope
sub
lea
or
ss
dec
xchg
mov
mov
fisttpll
out
sbb
mov
adc
lods
inc
fcomps
cmpsb
xchg
push
dec
std
cmp
lock
int3
dec
imul
mov
dec
xchg
out
mov
jns
xchg
ret
or
stos
fildl
gs
pop
sub
lods
pop
repnz
and
test
jl
push
mov
mov
test
cld
dec
xor
mov
adc
in
ljmp
popf
mov
iret
ret
jnp
xor
mov
mov
pop
mov
ds
into
adc
shrd
push
out
outsb
dec
cmp
jg
mov
inc
jb
or
in
lods
jae
add
jne
in
mov
rolb
xchg
add
in
out
dec
push
xchg
lea
js
test
loopne
outsb
pusha
push
stc
lods
push
lock
sbb
and
fwait
adc
adc
test
mov
cmpsb
mov
insb
lock
and
out
xlat
shl
xor
add
pop
test
in
add
and
push
mov
and
ret
add
pop
fmull
fwait
push
movsl
test
push
ja
call
ffreep
xchg
flds
negb
dec
cmp
lods
adc
adc
inc
jne
out
lods
cmpsl
inc
pop
test
push
in
xchg
loop
sub
mov
enter
data16
mov
out
xlat
jp
mov
js
mov
shl
mov
in
shll
lret
pop
adc
fisubs
jo
sti
dec
mov
or
mov
mov
pushf
movsb
pushf
shrl
xor
cld
mov
sub
xorb
das
adc
enter
imul
jae
hlt
negb
insb
test
add
mov
and
leave
add
mov
xchg
jae
insb
test
test
dec
inc
and
pcmpeqd
cmc
or
xchg
roll
dec
cli
fwait
sub
dec
inc
movsl
mov
into
mov
fidivrs
xchg
in
imul
mov
push
lcall
arpl
icebp
pop
xchg
and
mov
and
popa
fstpl
popa
jns
ret
mov
cld
cmp
outsl
cmc
fnsave
pop
loop
outsl
xor
les
ds
rcrb
lock
or
xor
movsl
pop
fimull
stc
sbb
sbb
sub
arpl
push
sbb
mov
sbb
push
pop
push
je
cmp
add
push
push
sbb
dec
lds
lods
rorl
or
pushf
xchg
rorl
adc
out
mov
pop
dec
mov
cmp
pop
cmc
mov
push
cmp
dec
sti
and
and
add
mov
cmp
int3
fildl
int
std
add
lods
pop
lret
es
pop
push
jae
in
push
mov
xor
xchg
mov
push
xchg
and
mov
mov
ljmp
gs
mov
das
add
das
roll
sub
mov
mov
cmc
inc
in
fisubl
sarb
or
stos
fcoms
notl
inc
out
push
cli
cwtl
in
cmpsb
lcall
mov
push
sbb
int3
mov
fistpll
xor
xor
jb
fistpl
enter
cmpsl
mov
push
gs
ret
xor
push
push
pop
push
fcmovu
xlat
mov
loop
sub
mov
mov
jmp
call
in
or
loope
mov
stc
cmp
pop
subl
jnp
dec
add
popf
sub
jge
push
dec
stc
pop
in
bound
xorl
dec
push
cmpb
add
adcl
sub
cmc
jne
jns
push
pushf
push
push
cmovns
popa
std
pause
js
hlt
xchg
fwait
cmp
fadds
nop
dec
xor
outsb
push
push
ret
mov
sub
pop
fsubrs
jmp
hlt
call
xlat
xchg
or
inc
cld
mov
pushf
or
je
mov
cli
cmc
push
cmp
dec
inc
arpl
mov
in
and
je
xchg
shlb
clc
nop
cs
in
fidivrl
cmp
negl
daa
imul
ja
jge
into
push
popf
lea
insb
pop
loopne
adc
hlt
adc
js
mov
iret
out
in
push
xor
cmpsb
test
xchg
and
mov
lahf
in
pop
rolb
add
lret
mov
ja
in
mov
cmp
push
pop
add
xchg
icebp
into
popa
lock
mov
pop
lret
pop
jmp
or
mov
cmp
mov
push
jns
leave
shrl
xchg
cmp
jae
mov
mov
test
jnp
iret
sbb
verw
scas
push
mul
or
test
movsb
andb
jnp
xorb
test
lret
inc
inc
ljmp
pop
daa
or
sub
pushf
mov
mov
fstps
inc
pop
insl
dec
out
mov
pop
lock
into
dec
xlat
test
sti
ds
arpl
pop
fwait
mov
mov
cmp
push
enter
mov
mov
xchg
cmpb
mov
lahf
xchg
push
adc
adc
fs
outsb
lods
lcall
inc
faddl
and
rcll
jb
sub
aas
stos
pop
fimuls
movsl
stos
mov
scas
clc
test
mov
int3
mov
hlt
mov
mov
repnz
fadd
xor
aas
and
pop
sub
fimuls
pop
ss
mov
lods
ja
shrl
aad
test
repz
outsl
ret
push
pop
pop
jne
sbb
xlat
ja
mov
pop
or
insl
in
aad
and
push
inc
mov
loope
push
cld
sub
cs
xor
ret
push
mov
xchg
mov
mov
or
jbe
xlat
inc
mov
sbb
pop
out
lret
sbb
pop
cmp
or
pop
push
cli
sbb
imul
insl
imul
mov
push
icebp
daa
mov
cltd
mov
mov
push
xchg
and
push
mov
add
and
mov
mov
jecxz
adc
daa
loop
mov
je
push
inc
pop
push
pop
dec
xchg
cmp
lahf
cs
jmp
dec
push
mov
call
imul
or
inc
sbb
mov
xor
jne
rcll
dec
test
cmp
dec
gs
fwait
andl
testb
or
jb
add
popf
jns
add
pop
ljmp
push
jle
stos
sbb
adc
dec
xor
loope
inc
adc
or
rcrl
dec
stc
and
fstpl
loope
mov
icebp
or
daa
testl
adc
mov
or
cmp
div
into
sbb
cmp
cmp
jbe
xor
mov
fidivrl
sbb
js
insb
jmp
adc
xchg
arpl
mov
push
aad
je
aaa
ret
jmp
in
ljmp
adc
sub
f2xm1
sbb
dec
or
mov
xchg
filds
or
adc
push
out
mov
arpl
frstor
mov
js
std
dec
movsb
jge
push
fdivrs
sub
std
fs
mov
aam
push
fld
push
je
fdivr
or
push
sbb
pop
mov
sbb
clc
cwtl
inc
daa
clc
dec
push
shrl
xchg
std
and
popl
dec
adc
js
int
stos
mov
cmp
stos
adc
lret
mov
mov
cmp
jl
dec
out
aas
js
cmpsl
das
mov
dec
sbb
jae
mov
xchg
xchg
lahf
xchg
test
fcmovb
jmp
mov
mov
or
in
jg
into
stc
outsb
sbb
xchg
dec
mov
push
xchg
pop
mov
add
stos
out
pop
out
int
adcl
cmpsb
fcoms
imul
jmp
cmc
mov
xchg
and
xchg
inc
sti
dec
or
mov
jmp
lea
pop
dec
stc
mov
xor
lods
pushf
xor
in
mov
aam
mov
daa
loopne
jmp
enter
nop
pop
jbe
sbb
test
adc
bound
mov
mov
push
dec
fdivrs
xchg
mov
popf
loopne
push
jl
sti
cmp
push
sub
pop
movd
adcl
std
cmpsl
or
lock
and
jp
scas
sbb
xchg
fldcw
aad
xchg
push
stos
test
loopne
jmp
push
sbb
pop
lods
std
jecxz
push
lahf
into
cmc
negb
add
insl
dec
sub
and
push
mov
cltd
int
and
pop
or
fstps
pop
cmpsb
scas
mov
xor
mov
mov
sub
ljmp
fmuls
fidivrl
cmc
sub
sub
pusha
test
stos
in
xor
stc
sub
std
dec
or
jmp
adc
repz
dec
and
sub
xchg
repz
pop
mov
mov
loope
jp
sbb
pop
sub
pop
jns
xchg
add
pop
shlb
push
add
in
sbb
pop
loop
in
pop
test
or
fsqrt
xchg
mov
mov
out
cs
and
push
loop
or
push
mov
arpl
outsb
inc
push
adc
orl
or
adc
inc
push
sub
sbb
sbb
cltd
fs
mov
cmp
cmpsl
loopne
adc
movsl
inc
outsl
push
sbb
push
push
ja
mov
aas
add
adc
inc
pop
lods
aam
sub
fists
sub
jb
rcr
push
dec
outsl
aad
das
mov
insb
cmpsb
lea
ja
into
sub
sbb
dec
push
sbbb
pop
aaa
adc
pop
pop
inc
cmpb
and
data16
push
in
shrb
add
adc
leave
cmp
clc
fnstcw
mov
cmpsl
pop
nop
sub
loop
sub
jae
or
dec
inc
mov
cmp
adc
mov
stos
adc
insb
mov
stos
pop
rolb
das
cli
dec
pop
aad
ret
in
dec
jne
add
xor
sbb
inc
roll
xor
xor
lds
clc
sbb
pop
aas
into
and
into
shrb
jmp
hlt
outsl
sub
cld
sbb
mov
pop
sahf
mov
inc
aaa
sti
adc
repz
add
sbb
addl
add
ljmp
insl
jne
and
jbe
ficoml
xchg
ljmp
stos
inc
push
fiaddl
dec
push
in
mov
xor
mov
loopne
ret
and
loop
loop
icebp
add
out
sbb
push
addr16
push
mov
and
into
pop
add
test
test
add
and
push
stos
ljmp
mov
mov
pop
pusha
out
add
adc
add
mov
add
hlt
adc
cmpsl
sahf
bound
into
cmpb
data16
dec
cmp
mov
loop
ficomps
mov
jmp
and
popf
xchg
inc
outsb
jbe
jne
xchg
loope
data16
pop
cmc
mov
test
outsl
fcoms
popa
fldenv
jp
cmp
or
enter
xchg
lcall
xor
testl
dec
loope
or
pop
sbbl
loopne
adc
out
repnz
xchg
jo
movsl
sub
push
mov
jmp
fsubr
mov
jae
out
jmp
or
ss
sub
out
ss
fucomip
add
stos
or
les
nop
mov
or
add
dec
pop
cli
push
adc
ds
jb
repz
shl
mov
hlt
jne
ja
in
inc
mov
mov
push
sub
cltd
leave
jecxz
add
push
ds
sub
stos
xor
adc
repz
orl
in
ljmp
inc
data16
fwait
sbb
and
xchg
xchg
pop
jle
mov
mov
inc
and
les
stc
mov
jge
lock
mov
jns
cmpb
jmp
mov
push
mov
pop
aad
pusha
push
jg
cmp
lret
xor
cmpsl
jmp
negl
xchg
sbb
cli
out
shlb
inc
repnz
cmp
lcall
stos
ficoml
fldt
ja
movsl
test
lahf
insl
mov
and
adc
mov
mov
idivb
fildl
and
mov
push
mov
ficomps
cmpsl
dec
int3
sbb
pop
lahf
jb
cmp
and
jbe
popf
xchg
mov
mov
aaa
xchg
pop
jle
xor
or
and
dec
jge
inc
stos
cmp
fucomip
rorl
mov
mov
loopne
sbb
div
dec
rcrl
shlb
mov
es
sbb
movsl
fwait
ror
push
jl
test
jbe
mov
ja
push
add
test
pop
inc
popf
jge
or
sbb
insb
mov
push
pop
ja
test
jecxz
cwtl
in
inc
and
inc
lock
in
xchg
out
imul
sbbl
dec
dec
and
shl
mov
add
out
xchg
pextrw
and
and
icebp
cli
push
rcll
cmp
and
adc
push
iret
out
xchg
movsl
pop
sub
mov
sub
jbe
sbb
lods
xor
insl
jecxz
into
enter
xchg
pop
insb
ret
sahf
test
out
imul
cld
jb
stos
sub
dec
js
lret
add
pop
test
dec
or
and
pop
mov
xchg
es
fucomp
subb
mov
outsl
rol
ret
cmp
sub
pop
outsb
cmp
cmpsl
call
sarl
jb
lcall
pop
cwtl
flds
rcrb
inc
test
shll
cmc
addr16
pop
inc
xlat
test
stos
ja
ret
mov
sbb
adc
jo
ret
fs
pop
test
testb
addr16
cmp
arpl
mov
push
cwtl
out
push
or
loopne
mov
sbb
mov
add
je
cmp
test
dec
cmpsl
sbb
mov
mov
xor
xor
sbb
nop
shlb
rcll
pop
push
push
dec
mov
loop
outsb
or
mov
je
lock
adc
imul
popa
repnz
xchg
and
loope
xchg
cmp
mov
mov
add
scas
lahf
imul
cmpsb
mov
loop
aaa
dec
addr16
cmp
xlat
jbe
test
mov
aam
cmp
scas
fcmovu
jne
push
push
push
insb
xchg
in
in
aaa
pop
xlat
cld
pop
js
jns
xchg
imul
mov
incb
icebp
mov
inc
jmp
sar
dec
iret
daa
ljmp
sahf
mull
das
mov
jae
pop
mov
mov
pop
pop
sbb
inc
xchg
cmc
ficoms
jecxz
inc
notb
xchg
leave
fldcw
clc
loope
sub
imul
es
adc
aaa
jno
call
repz
add
out
lret
mov
dec
pop
inc
test
bound
repz
movsb
xchg
scas
dec
das
lods
and
out
push
jg
shrb
sbb
lret
xor
dec
or
push
icebp
pop
push
sbb
xor
pop
mov
inc
pop
mov
xchg
or
lods
lahf
xlat
mov
xor
mov
jecxz
xor
ret
cmp
add
andps
iret
popf
fcmovnbe
and
cmp
shlb
inc
inc
or
mov
insb
mul
cmc
cli
cmp
sti
sar
dec
ret
xor
pop
adc
sub
nopl
or
mov
dec
mov
and
sub
xor
fidivs
decl
int
inc
out
lds
inc
in
test
mov
cmp
sbb
sbb
push
arpl
xor
push
fnstsw
or
push
pop
cwtl
repz
mov
mov
fsubrs
daa
call
cmp
orb
cmp
scas
sahf
dec
insb
pop
js
jle
out
cwtl
ret
aaa
aad
sbbl
roll
scas
lret
add
outsb
jge
pop
xchg
int
xor
push
loope
sub
mov
mov
out
add
dec
cmpsl
imul
inc
movsb
test
add
xchg
push
test
mull
lods
movsl
iret
pushw
icebp
jb
je
jne
push
lds
lds
or
sbb
jae
cmp
test
in
push
pop
std
adc
outsl
inc
fcoml
aam
dec
divb
push
xchg
jp
scas
cmp
movsl
sub
imul
push
inc
cld
cmp
in
and
cld
ss
adc
add
push
xchg
pop
into
cwtl
sarl
push
das
xchg
stos
add
dec
xchg
or
xchg
xchg
push
in
cmpsb
add
adc
aas
popf
sahf
insl
cmp
aam
and
add
cmp
pop
mov
adc
pop
notb
inc
add
adc
cmc
mov
lahf
jp
js
stos
cli
cmp
xor
push
cwtl
or
imul
xchg
adc
adc
jo
mov
add
xchg
mov
mov
mov
push
in
and
pop
ss
mov
in
icebp
mov
cmpl
push
in
mov
mov
sub
sbb
xchg
mov
or
or
xor
daa
dec
or
adc
mov
fucomi
out
mov
push
xchg
sbb
ljmp
mov
sub
test
shr
popa
mov
addl
mov
clc
lret
xchg
xchg
stc
stos
adc
insb
push
ss
sbb
adc
xlat
inc
enter
xchg
dec
inc
xchg
popf
adc
jo
dec
ljmp
jge
pop
sbb
xchg
sti
hlt
pop
or
scas
sub
add
mov
cmp
test
jae
jmp
das
jecxz
inc
inc
xchg
fimull
sbb
lods
int
fistpl
dec
test
outsl
or
ja
out
pop
and
push
lods
outsl
popf
out
mull
cmp
popa
adc
insb
enter
inc
mov
and
notb
push
les
lcall
or
aad
mov
enter
out
ret
ljmp
xor
and
scas
pushf
rorl
add
cli
scas
repz
je
lock
jne
cmp
sti
or
scas
xchg
nop
out
jl
movsl
ror
into
cli
xchg
push
add
xchg
xor
jae
mov
push
xor
mov
fiadds
dec
std
jecxz
fisubs
mov
mov
in
inc
mov
cmp
es
jp
mov
or
rorl
mov
mull
test
leavew
mov
cld
out
out
jns
pop
dec
clc
xchg
mov
jne
movsl
in
fcomi
shrl
or
stc
add
inc
xor
pop
add
int
call
sub
arpl
outsb
add
rcl
adc
lahf
jae
adc
pop
loope
xchg
data16
pop
pop
orl
mov
jge
dec
add
pushf
push
jmp
or
shlb
cmp
into
test
pop
and
mov
lods
call
mov
pop
sbb
inc
in
frstor
sub
push
ret
mov
mov
lahf
addr16
push
sub
scas
daa
stos
sbb
decb
cs
jo
push
dec
sti
mov
mov
push
or
xchg
xor
outsb
inc
mov
iret
inc
notl
xchg
ja
shrl
outsl
mov
es
mov
sub
lock
xchg
sub
mov
and
fbld
je
sbb
mov
test
fucom
jne
mov
add
dec
loop
mov
pop
mov
mov
mov
pop
push
int
outsl
sbbl
or
popa
into
mov
cmc
pop
jns
sbb
sti
repnz
pop
leave
dec
cld
add
stos
adc
ds
lcall
mov
jge
lret
mov
sarb
sub
bound
mov
push
mov
in
repnz
xor
xor
dec
mov
mov
popf
test
push
lret
push
push
push
inc
pop
adcb
neg
ficompl
cmp
mov
mov
mov
push
inc
das
pop
mov
scas
dec
sbb
xor
xchg
filds
adc
adc
pop
dec
and
stos
cltd
sub
out
add
mov
out
lods
lods
push
sarl
insl
or
pop
xlat
stos
jl
mov
cmp
mov
arpl
sub
insb
and
int3
mov
enter
pop
fxch
popa
sahf
lods
mov
imul
pop
xchg
jp
cwtl
test
dec
arpl
push
pop
out
cmp
out
andl
xor
jns
push
mov
adc
xlat
dec
sub
xchg
imulb
sbb
jecxz
int3
scas
pop
pop
nop
xor
push
xchg
xchg
test
test
lock
sub
mov
out
xchg
sbb
mov
ret
je
sub
sub
addl
sbbl
pop
in
mov
pop
nop
cld
jo
sbb
insl
pop
xchg
mov
iret
pop
rcl
inc
xchg
fcmovne
test
scas
lods
in
es
mov
cwtl
jnp
enter
xchg
subl
adc
movsl
and
sub
xorb
jge
fiadds
adc
popf
outsb
imul
iret
ds
fldt
push
fs
sti
pop
repz
outsb
inc
dec
das
mov
fcompl
ficomps
push
icebp
and
das
insb
xchg
popa
outsl
or
out
sbb
leave
scas
lods
mov
dec
push
mov
notb
jp
jae
push
test
enter
pushf
movsb
popa
dec
adc
repnz
pop
push
fprem1
add
xchg
inc
dec
push
adc
inc
sti
mov
mov
xchg
imul
fsub
in
sbb
out
lea
popf
mov
jbe
dec
inc
das
xor
jns
adc
pop
or
lock
inc
out
mov
mov
adc
pusha
fsqrt
outsl
mov
mov
arpl
push
push
loope
jl
inc
stos
dec
jae
test
sbb
dec
lods
and
ret
cmpsl
or
mov
aam
das
dec
call
jge
sub
mov
dec
mov
sub
outsb
dec
push
incl
or
cmp
fimull
cmp
outsb
jns
fcoms
fs
and
je
adc
or
xlat
rcr
xorl
dec
mov
daa
mov
fs
sbb
dec
mov
add
mov
mov
cmpsb
shrb
cmp
pop
pop
fadds
sti
dec
cwtl
inc
cltd
lcall
mov
fldl
pop
dec
xchg
sub
xchg
push
inc
das
in
testl
fs
xchg
out
xor
cmpsb
mov
push
ret
xchg
fstpt
push
mov
cli
mov
stc
xchg
fcoml
and
mov
aad
xlat
les
add
sbb
pop
mov
mov
pop
push
subl
andb
add
jae
imul
push
sub
push
xor
add
cmp
test
aam
sub
bound
gs
loopne
into
aad
mov
ret
xchg
jnp
rclb
add
xchg
xchg
scas
jo
and
test
pop
test
sbb
fildl
es
mov
lret
int
dec
les
pop
pop
in
inc
repnz
mov
mov
pop
mov
mov
push
outsl
cmp
cwtl
sarb
int
pop
add
pop
cmp
scas
jle
call
jge
jmp
or
iret
andl
std
into
pop
pop
lret
mov
sbb
into
or
test
inc
pushf
xor
adc
in
mov
shlb
cld
and
scas
inc
in
pop
mov
mov
jae
enter
repz
gs
or
pop
jns
incl
mov
adc
add
jnp
aad
jl
repnz
in
mov
adc
sbb
dec
arpl
or
sbb
or
jno
movsl
clc
jb
jecxz
pop
movsl
push
sub
mov
insl
adc
cmpb
inc
inc
mov
movsl
and
dec
pop
inc
mov
dec
pop
int3
adc
movsl
mov
mov
dec
sub
aaa
punpcklwd
leave
bound
push
idivb
cmpb
les
mov
das
dec
enter
scas
dec
pop
and
fcomps
pop
cmp
mov
sti
push
out
xor
fstps
xor
jbe
push
mov
inc
mov
test
mov
test
mov
out
jno
jnp
stos
xor
xor
pop
icebp
aad
mov
cmp
mov
pusha
sub
mov
jg
aad
mulb
xor
sbb
in
sbb
insl
mov
inc
sbb
cmp
or
mov
lahf
dec
xchg
push
pop
mov
gs
icebp
stos
imul
inc
mov
bound
lea
adc
xchg
fldt
sub
std
add
mov
ret
lret
daa
and
pushf
insl
jbe
mov
mov
or
pop
adc
lods
movsl
dec
in
mov
enter
call
aad
testb
in
lret
not
mov
out
xor
dec
mov
add
nop
or
push
mov
xchg
ret
inc
imul
mov
cwtl
pop
fs
add
pushf
mov
add
mov
pop
cmp
jns
je
scas
inc
sub
cs
push
and
inc
or
gs
dec
rorl
loope
rorb
out
scas
jns
outsl
aas
sbb
aaa
std
xchg
lods
jno
mov
pop
sbb
mov
das
mov
mov
shl
lret
inc
sub
int
jns
roll
shlb
rclb
lods
sbb
mov
ljmp
mov
push
push
jg
popa
aaa
inc
ffree
sbb
xchg
and
push
push
popw
mov
daa
lods
in
jle
cmp
dec
cs
mov
orl
mov
adc
mov
es
pop
sbbl
or
push
adc
leave
popf
sub
das
sub
jnp
cld
shll
sbb
mov
inc
sub
inc
ja
mov
adc
dec
incb
inc
js
or
or
sbb
push
mov
mov
dec
faddl
test
stc
pop
xor
sub
xchg
xorl
mov
loope
inc
sub
push
mov
mov
add
in
in
shll
mov
mov
faddl
sub
into
lods
jae
xor
mulb
mov
xchg
cmp
divb
stos
mov
xlat
cmp
mov
out
push
jns
sub
outsl
std
loopne
out
bound
cmpsb
shrl
xchg
sbb
lcall
or
pop
push
push
shlb
wbinvd
std
lods
sbb
cmp
scas
hlt
dec
test
jmp
mov
aam
iret
push
test
pop
das
cmp
dec
lock
mov
sbb
mov
js
daa
out
mov
test
and
xadd
repz
jb
stc
or
sub
pop
dec
cs
add
mov
adc
mov
mov
inc
mov
xchg
stos
sub
cmp
out
popf
arpl
stos
loopne
iret
mov
and
int
mov
out
movsb
inc
dec
sub
sbb
mov
or
and
xor
pop
fstps
lods
pop
sarl
mov
je
scas
mov
push
mov
dec
int3
fs
js
adc
pop
daa
scas
sbb
decb
je
cli
and
cmp
addb
rorl
repz
test
shr
inc
adc
cs
mov
or
cmp
ret
outsl
and
adc
addl
and
dec
movsl
mov
test
fwait
cltd
and
notb
adc
jecxz
inc
adc
fldenv
int3
mov
pavgb
pop
dec
jb
std
sbb
sub
stos
sbb
or
sbb
gs
fstl
mov
loop
shrl
iret
jbe
dec
sub
xchg
push
and
ret
pusha
mov
shlb
cs
in
insb
jno
mov
xchg
jle
negl
jecxz
mov
subl
inc
add
cli
cmp
pushf
push
or
and
mov
ret
inc
mov
repnz
mov
xor
or
mov
pop
push
cmp
ja
mov
cmp
in
mov
aas
mov
dec
push
addl
dec
and
push
add
aas
jb
pop
sub
in
cmpl
mov
out
inc
fwait
movsb
inc
mov
pop
mov
int
xchg
mov
outsb
sti
aam
adc
nop
leave
xchg
mov
mov
mov
lock
call
jg
push
ret
and
sub
push
mov
xchg
je
and
mov
xorl
sbb
mov
jbe
aaa
jmp
inc
enter
pushf
jne
or
cmpsb
jge
pop
sub
mov
push
mov
hlt
push
ds
jmp
andb
sub
pop
sub
pop
inc
adc
popa
or
call
xor
shl
lea
popa
aad
sbb
hlt
cwtl
mov
aas
das
xchg
mov
jmp
in
jl
xor
fiadds
jo
mov
scas
jmp
or
loop
sbb
add
stc
ret
xchg
xor
fadds
ficomps
adcl
mov
ret
dec
repnz
inc
adc
push
inc
cmp
push
out
loope
ss
mov
xor
pop
mov
adc
push
sbb
and
cmp
push
fldt
push
pop
sbb
xor
aad
cmp
imul
ficoml
xor
sub
xlat
sub
sahf
jnp
fiaddl
rcll
dec
mov
or
pushf
and
stos
and
xchg
mov
dec
mov
lods
mov
pop
jnp
rcrb
add
mov
inc
and
dec
inc
xorl
aaa
shll
and
aam
mov
pop
cld
enter
js
ljmp
push
outsb
inc
cmp
sub
adc
jnp
stos
fstps
test
insb
xchg
fidivrl
push
std
dec
and
enter
sti
push
pushf
mov
insl
dec
mov
divb
jae
jo
ror
sbb
mov
mov
imul
cmpsb
jns
loopne
jp
push
cwtl
cwtl
sbb
mov
or
out
dec
inc
jae
dec
mov
lock
sub
adc
movsl
xor
dec
rcrl
aaa
test
jg
push
jmp
pop
iret
fdivs
add
mov
dec
test
lret
and
jno
cmpsb
push
add
ljmp
pop
sub
push
jne
jnp
cltd
xchg
rcrl
pop
cld
push
sahf
rorb
mov
push
mov
push
sub
comiss
popa
jecxz
add
aam
lcall
sti
in
cmp
insl
ja
andb
pusha
sarb
out
push
mov
test
loopne
xor
psubsw
subb
sub
cmpsl
test
lahf
or
ret
mov
dec
xlat
xchg
mov
adc
mov
lods
or
les
cltd
loope
int
daa
cmp
inc
movsb
jge
out
and
cltd
repnz
mov
loope
outsb
nop
or
jg
enter
stos
adc
xchg
loopne
sbb
or
add
jb
push
or
stos
jmp
in
sub
add
and
dec
scas
imul
in
xor
lcall
mov
movb
pop
or
cltd
cmc
fwait
arpl
movsl
cwtl
jae
add
jae
hlt
jle
and
and
mov
xor
in
push
xor
fs
mov
mov
inc
xor
inc
jo
mov
imul
push
xor
jnp
rcl
ds
data16
mov
loope
jo
pop
xor
lahf
mov
cmp
mov
and
sbb
cmp
add
stc
loope
xchg
push
cltd
and
mov
repnz
lret
sbbl
jo
mov
aaa
xor
cmp
cmpsb
push
js
aaa
jge
lahf
dec
lods
mov
adc
cmpl
ret
adc
cmpb
jge
pop
xor
push
push
ds
push
ds
loopne
inc
rorl
push
arpl
mov
call
data16
testb
out
xorl
add
or
test
cmpsl
jns
push
aaa
cmp
cmp
fs
inc
orl
jl
aas
push
dec
lahf
ret
xchg
and
mov
pop
stos
orl
icebp
roll
les
shrl
adc
sbb
xchg
ljmp
repz
pop
push
pop
jecxz
push
cmc
inc
xor
push
mov
fidivl
and
sub
sbb
inc
pop
jg
xor
dec
xchg
adc
shr
movl
inc
inc
test
pop
and
jg
xor
std
add
and
inc
sbbb
orb
icebp
je
add
scas
imul
pop
movsl
add
cmpsl
sbb
dec
push
inc
hlt
fnsave
ret
and
ret
or
hlt
loop
arpl
and
cmp
icebp
sbb
ds
cmpb
mov
nop
movsb
fcmovb
xchg
or
lcall
and
mov
dec
insl
std
mov
xor
mov
jl
and
es
jmp
in
adc
lahf
insb
loope
mov
hlt
into
mov
lret
mov
sti
stos
divb
ja
sbb
stc
enter
subl
push
xchg
add
dec
xchg
jne
in
pop
sub
popf
sub
mov
xor
mov
or
pop
or
pusha
addr16
repz
pop
push
sub
lock
xchg
xor
shrb
dec
pop
xor
fsubl
aas
int
pop
adc
mov
jl
ds
aam
out
testl
xchg
addb
add
or
push
sbb
out
or
inc
fdivs
test
dec
sub
fcmovnu
stos
cmp
popf
iret
das
pop
adc
cmp
or
out
cltd
pop
das
and
push
sub
daa
out
add
or
lods
mov
out
js
sub
ret
jge
push
fldt
ljmp
adc
ja
add
repz
xor
mov
xchg
and
mov
push
pop
filds
xor
jne
ffree
mov
daa
pop
xchg
lea
or
xchg
loope
out
popa
mov
scas
fwait
push
dec
data16
mov
mov
mov
push
cli
jmp
lea
jo
bound
andb
adc
adc
jl
mov
outsl
out
shll
arpl
mov
mov
pop
stc
insb
int3
aas
sub
sub
add
into
mov
testb
push
sub
jns
add
xchg
lret
popf
int
push
xor
jp
xchg
xor
mov
je
jl
and
sub
xor
sub
movsb
rcrl
sub
mov
adc
insb
inc
mulb
pushaw
xor
dec
gs
push
lds
testl
hlt
add
movsl
aad
xlat
loopne
mov
xchg
faddp
adc
add
fwait
mov
clc
pop
mov
push
les
jnp,pt
ds
cli
jl
stc
cld
and
adc
lock
adc
shlb
mov
gs
mov
lret
mov
xlat
adc
jne
and
fs
mov
dec
dec
add
sub
lcall
scas
lea
or
sbb
push
pop
dec
push
or
push
sbbb
lahf
int
pop
pop
inc
sbb
inc
cmp
mov
dec
xchg
push
jne
js
popa
scas
jne
loop
and
shrb
xchg
mov
out
dec
cli
aad
sbb
arpl
mov
outsl
leave
mov
call
adc
sub
leave
das
out
je
pusha
jmp
int3
add
inc
jnp
pop
in
mov
imul
ret
sbb
gs
sbb
stc
or
pusha
cmc
lret
sub
fstpl
xchg
icebp
push
mov
sbb
pop
push
rcrb
inc
movsl
inc
jbe
dec
dec
stc
mov
fsubrs
call
fimull
pop
pop
jo
mov
xchg
add
jp
lds
pop
jp
scas
mov
pop
xchg
int3
mov
cmp
movsl
fstpt
pop
dec
cli
xchg
inc
pop
xlat
repnz
inc
lret
cmp
sbb
test
stos
jl
add
mov
mov
int3
and
adcl
in
add
inc
pop
cli
je
jnp
cld
mov
fsubs
lret
mov
in
add
dec
push
push
cmpsl
movsl
and
fcompl
lret
xor
inc
les
add
in
add
lds
pop
sbb
bound
jne
mov
fs
xor
test
inc
pop
repnz
ss
iret
int
sub
xor
sbb
xor
push
sbbl
sub
mov
pusha
pop
fdivl
out
cmp
mov
or
mov
iret
cwtl
mov
sbb
push
mov
shlb
scas
adc
xchg
add
mov
popl
jle
push
es
dec
jecxz
sbb
dec
push
inc
sbb
pop
bound
ljmp
addr16
push
mov
divb
cmp
je
lcall
adc
imulb
dec
inc
jl
mov
bound
sar
enter
clc
cmpsb
xlat
cmpsb
or
add
or
int3
pusha
ljmp
stos
mov
aaa
addr16
xor
jecxz
add
stos
mov
or
lds
pop
xchg
or
push
das
in
pushf
ficoml
xchg
xchg
repz
adc
xor
lahf
icebp
sbb
imul
fbstp
xchg
mov
xlat
xor
hlt
jmp
sbb
adc
push
pop
cmpl
mov
pushf
adc
mov
shll
mov
dec
pop
cli
mov
imul
xor
test
test
sti
inc
dec
mov
icebp
or
dec
mov
add
or
adc
mov
push
inc
fldenv
in
ret
add
imul
sbb
fucomip
mov
repnz
push
loope
ret
push
imul
lea
jo
pop
push
mov
push
daa
cli
mov
mov
imulb
sub
sub
bound
push
ss
fadd
mov
mov
lcall
subl
mov
xchg
mov
xchg
dec
xor
out
cmpsb
ret
repz
adc
popf
lock
push
adc
mov
shl
push
bound
scas
mov
push
xchg
aas
fisttpl
mov
loopne
inc
aaa
xor
scas
sbbb
mov
cli
dec
bound
addr16
cmpsl
popa
rcll
pop
data16
pop
mov
cmp
outsb
ds
out
xlat
sbb
mov
sbb
pop
or
adc
push
stc
test
push
inc
push
mov
or
sub
ret
mov
stos
pop
outsl
xor
inc
inc
lea
jp
idivb
ds
add
sub
xchg
test
sub
jg
push
imul
push
in
dec
sbb
and
sub
es
pop
adc
rep
xlat
scas
xchg
sub
jge
pusha
cs
push
push
fistpl
pushf
inc
adc
cmp
pop
dec
xor
cmpsb
cmp
sbbl
xor
daa
insb
in
cmp
sbb
mov
push
arpl
lds
jge
gs
icebp
push
mov
sbb
pop
jnp
add
jmp
push
in
mov
push
add
jb
ret
aaa
pop
js
sbb
sub
pusha
jbe
mov
aad
mov
lock
loope
scas
icebp
xchg
and
pop
cmpsb
push
or
mov
push
icebp
push
lds
pop
pusha
les
pop
or
stc
dec
repz
fsubrs
cwtl
cmpsb
inc
cld
xchg
mov
repz
insb
and
fsub
jbe
int
cmp
push
dec
dec
push
sahf
or
movb
cmp
js
aas
add
daa
popf
insb
xchg
and
in
insl
divb
insl
in
inc
mov
xor
mov
mov
xchg
push
sub
pushf
popa
aas
movsb
adc
xchg
insb
pop
mov
popf
in
cwtl
push
dec
out
in
gs
mov
jbe
adc
jnp
push
aaa
inc
sbb
aas
mov
lods
mov
jb
mov
icebp
lea
push
xor
lods
int
je
push
aas
pop
lahf
shrl
int3
out
or
addb
mov
shll
and
pop
nop
sbb
iret
aaa
outsl
and
mov
aas
cmp
cmpsb
dec
push
xor
lahf
stos
pop
sub
and
jae
scas
adc
xor
or
popa
add
jp
lgs
in
dec
shlb
and
int
inc
jge
mov
lock
mov
test
and
in
xlat
out
inc
orb
or
adc
out
xchg
jbe
enter
inc
lcall
cwtl
testb
xlat
add
dec
hlt
or
adc
push
clts
stos
lods
cmp
gs
push
inc
add
xor
ja
inc
mov
imul
sub
ret
cs
rcrl
and
out
stos
cmp
loopne
dec
jns
pop
stos
sub
arpl
enter
stos
or
and
jne
clc
mov
inc
and
shlb
push
out
adc
test
shll
sub
sti
out
ss
push
rcrl
mov
lcall
out
push
push
jg
mov
mov
mulb
pop
sbb
aad
mov
push
push
inc
sub
dec
mov
imul
pop
jg
jmp
jl
inc
scas
jnp
add
aaa
add
mov
loopne
je
inc
popf
js
test
mov
pop
inc
je
aam
in
mov
push
push
pop
into
popf
addb
or
rcll
inc
jge
mov
hlt
mov
test
ljmp
sub
sti
jnp
fnsave
mov
push
lret
push
push
mov
push
std
stc
pop
lret
call
or
mov
ret
shlb
ficoml
mov
adc
iret
pop
push
jmp
xchg
in
add
bound
cmpsb
cmp
dec
gs
roll
ljmp
icebp
sub
push
sbb
pop
pop
into
sub
or
xor
mov
int
mov
lret
out
aaa
es
testl
punpckhbw
xchg
xor
movb
sub
push
loope
ja
mov
mov
out
lret
outsl
jmp
inc
ret
ficoms
adc
and
jo
sahf
hlt
ja
daa
clc
dec
bound
clc
stos
pop
or
rorl
mov
out
xlat
pop
mov
addr16
cltd
insl
les
popa
sbbb
adc
das
arpl
arpl
xchg
mov
lods
jnp
pusha
mov
xor
xor
bound
adc
pop
push
das
pushf
lret
loop
iret
insl
mov
int3
xchg
fsts
sbb
add
scas
jp
stc
scas
add
adc
cmpsb
out
xrelease
fdivl
rcr
aaa
into
dec
xchg
dec
and
cmpsl
jecxz
ret
mov
sub
rolb
add
inc
mov
lea
mov
adc
out
out
lret
dec
xchg
fisubl
repnz
push
inc
jp
dec
lahf
and
push
scas
dec
negl
jns
cmpsb
fildll
jno
cmpsb
das
xor
xchg
mov
loopne
mov
ljmp
inc
mov
in
lea
cmp
cmp
adc
sub
insb
adc
nop
mov
inc
lcall
xchg
pop
push
cmp
loope
std
dec
imul
inc
jl
adc
mov
jo
addr16
ljmp
call
nop
mov
cltd
jp
adc
imul
ffreep
ficompl
je
shl
into
sub
add
mov
filds
xchg
mov
sbb
sbb
sarb
dec
orl
rorb
mov
mov
rolb
scas
loopne
sub
scas
xchg
push
std
add
je
jb
adc
insb
sub
and
xchg
movsl
in
jp
lods
xor
lahf
rorl
lcall
in
add
add
jns
dec
jbe
sbb
jl
mov
mov
iret
jne
repz
cmp
mov
loopne
jmp
fs
sbb
inc
jns
sbb
addr16
fmull
pop
sti
cmpsl
mov
dec
aaa
idiv
dec
idiv
inc
fidivrs
jno
mov
sbb
push
scas
fiaddl
dec
xor
xchg
xor
xchg
cs
in
push
outsl
movsb
xchg
gs
or
and
lcall
xchg
xchg
mov
subl
fstl
push
sbb
icebp
gs
mov
xorb
pusha
mov
movl
mov
pop
jp
adc
inc
bound
iret
pop
add
outsl
mov
and
rorb
adc
xor
push
int3
or
sbb
subb
push
in
and
nop
ret
inc
pop
into
in
lahf
sbbl
mov
popf
leave
pop
scas
lret
pop
sti
addl
cmp
icebp
add
stc
mov
popf
in
push
inc
aad
pop
mov
mov
inc
adc
push
push
jp
xor
in
xor
in
mov
adc
shrl
cmpb
data16
lahf
cmp
xor
mov
jns
insb
hlt
int3
mov
imul
pop
repnz
push
jbe
pop
out
dec
mov
mov
insb
lahf
push
test
mov
loope
push
rcl
ds
jnp
add
test
lret
adc
sar
fwait
xchg
pop
repnz
stc
add
mov
in
repz
loope
imulb
xor
xor
imul
cmp
mull
add
mov
addr16
popa
stos
jecxz
mov
enter
fbstp
and
aaa
movsb
movsb
dec
test
gs
push
sbb
ljmp
jae
bound
enter
xchg
test
sbb
shl
mov
jp
icebp
stos
sub
jecxz
push
dec
nop
clc
stc
xor
outsb
jmp
mov
out
push
and
in
ds
ret
xor
out
in
jnp
cld
xor
jns
pop
ret
and
add
aas
data16
pop
pop
push
adc
lea
and
lea
jno
mov
fld
adc
jb
xor
ds
sub
xchg
dec
inc
scas
cld
std
mov
dec
add
jbe
daa
mov
cmpsl
mov
insb
int
mov
jmp
mov
xchg
pop
or
adc
mov
mov
push
xchg
push
sub
add
enter
ret
dec
and
pop
xchg
push
popa
aad
sti
lds
ja
stos
mov
fs
cmc
xchg
test
or
clc
mov
sub
xchg
pop
xor
call
cmp
mov
mov
inc
mov
movsb
fisubrs
lret
clc
fiadds
lcall
pusha
add
or
rolb
mov
ss
cli
pushf
xor
sub
test
das
sub
mov
mov
sbb
lcall
mov
jl
mov
cmp
adc
or
add
push
mov
mov
popf
pop
rcll
int
mov
lcall
cmc
sti
cmp
pop
rolb
test
dec
adc
das
loop
xchg
leave
mov
mov
mov
add
ret
and
sbb
insb
popf
test
fcmovnu
sub
stos
sbb
and
and
loopne
xchg
std
push
repz
jo
dec
jl
out
sbb
inc
sar
std
jmp
adc
inc
jb
movb
cmc
push
insl
mov
jle
xchg
ret
mov
xchg
cmc
cmp
push
jecxz
lods
jb
lret
cmp
aad
dec
insl
in
inc
dec
mov
mov
mov
or
ja
mov
popf
lahf
sub
xor
mov
js
fnstcw
push
subb
adc
sub
mov
andl
ficoml
sbbl
push
push
fisubs
pop
pop
clc
push
stos
movsl
mov
inc
shll
dec
rorl
mov
ds
pop
jg
or
loope
adc
test
xchg
mov
cmpsl
and
test
cmp
outsb
jge
push
add
jp
push
ret
mov
add
icebp
sar
add
mov
mov
push
test
std
fs
jle
dec
mov
push
cwtl
mov
sbb
add
into
push
jecxz
or
mov
push
std
nop
fnstcw
fwait
in
or
push
loope
lods
jbe
inc
dec
jg
pop
jno
mov
mov
push
icebp
inc
add
pop
push
xchg
jg
cmp
fidivl
dec
inc
cld
and
inc
orb
jmp
mov
scas
orb
xor
mov
mov
mov
adc
loopne
add
adc
test
pop
jo
jno
scas
jge
andl
mov
adc
lahf
cwtl
xor
loope
pop
daa
lods
push
cmp
out
adc
push
xchg
push
ds
adc
jmp
neg
popa
or
inc
popa
bnd
adc
int
lahf
jns
in
mov
push
jl
aad
ss
ret
lods
lods
aad
adc
aaa
pushf
xchg
insl
daa
jb
jno
and
sub
ss
jo
xchg
and
mov
sub
pop
js
jb
fldcw
push
mov
and
sbb
and
test
arpl
pop
test
in
push
lock
out
jl
in
adc
mov
pop
sbb
xchg
cli
mov
inc
push
xor
adc
or
and
cmp
jmp
stos
call
dec
test
fsub
sahf
sbb
xor
jno
dec
xchg
pushf
movsb
push
lds
dec
popa
addr16
sub
jbe
int
mov
dec
jmp
lds
jg
push
imul
push
push
jmp
imul
movsl
xchg
or
jmp
fst
andb
adc
int3
xchg
mov
mov
pop
push
cmp
fwait
jmp
ficoms
pop
sbb
and
jno
mov
and
fcoms
sbbb
inc
mull
adc
rcll
arpl
cmp
push
lret
std
cld
xchg
neg
inc
pusha
ret
inc
add
dec
popf
or
adc
insb
pop
mov
out
inc
pop
jmp
xchg
mov
call
adc
inc
dec
aaa
push
xchg
lock
inc
push
xlat
int3
or
iret
mov
mov
push
daa
add
mov
xor
mov
jp
out
dec
xchg
push
fsubs
xchg
sub
repnz
das
xchg
cmp
mov
cli
movsb
pushf
das
or
repnz
inc
and
push
cmp
add
pop
fs
nop
or
fcoml
push
pop
out
mov
dec
push
addr16
xchg
pop
hlt
incl
jg
pop
scas
ljmp
shll
mov
ljmp
add
ja
mov
add
mov
pushf
push
jbe
pop
jmp
mov
mov
fimull
push
push
dec
cmc
sbb
xchg
mov
mov
xchg
cmpsl
icebp
jno
xor
push
mov
sbb
dec
sub
cmp
test
das
movsb
idivb
test
loop
inc
stos
insl
push
inc
and
push
mov
push
lret
mov
mov
sbb
fs
or
and
lods
mov
ret
in
fs
mov
xor
xchg
adc
lret
test
sub
jl
adc
stc
adc
lods
dec
push
ds
sbb
push
sbb
jbe
call
cmp
mov
mov
and
jmp
addl
mov
cld
pop
cmpl
mov
xchg
pop
adc
ret
gs
cmpsl
jp
call
popa
arpl
in
cld
mov
scas
test
sbb
and
jmp
cld
stc
or
mov
add
leave
jmp
mov
out
add
pop
divb
dec
stos
fstl
sub
je
clc
pusha
sbb
adc
adc
and
nop
aaa
rcrl
fucomi
xchg
xor
inc
stos
pop
repnz
fistpl
ret
xor
ss
xchg
iret
fldcw
or
loop
or
call
out
xor
pop
jb
loop
loop
push
jns
mov
dec
mov
jl
and
inc
gs
insl
xlat
into
imul
dec
sbb
dec
repz
jp
mov
mov
into
push
cltd
jne
dec
imul
xchg
aad
hlt
jno
adc
movsl
pop
iret
fs
lods
pop
mov
popf
test
cs
mov
repnz
loopne
sbb
add
cmp
sbb
shll
jle
adc
rcll
xor
inc
cwtl
dec
pop
in
sub
ret
adc
xor
pop
gs
sbb
add
mov
rcrb
push
xor
and
pop
sub
in
mov
xor
mov
orl
mov
jbe
fucom
dec
mov
fmul
mov
jo
mov
push
push
jle
out
sub
fistps
arpl
hlt
cltd
test
call
jmp
mov
div
xchg
mov
les
dec
popf
or
inc
xor
cmp
or
lds
dec
pop
jne
in
mov
pop
cs
arpl
mov
xchg
jg
sub
in
pop
std
push
cmp
dec
jecxz
ss
pop
cmp
addr16
cli
mov
movsb
xchg
mov
movsl
mov
loop
jne
pop
into
test
mov
cwtl
in
pop
push
pop
stos
cmpl
adc
mov
pop
mov
imul
mov
rcl
call
cmp
out
aas
dec
pushf
test
stc
mov
xor
mov
dec
xor
adc
mov
push
jmp
test
inc
dec
popa
push
xchg
cld
out
popf
jne
lret
mov
sbb
and
sbb
and
shrb
cwtl
cmp
test
mov
ror
and
jecxz
jp
repz
lcall
mov
sti
xchg
lods
scas
lds
jo
repnz
xor
enter
outsl
add
fsubs
inc
pop
inc
sbb
scas
clc
sar
xchg
rolb
pop
insl
pop
dec
mov
xor
test
lret
jo
ja
mov
mov
or
ss
addl
mov
cmc
cli
adc
mov
push
cmp
cmp
and
sarl
or
or
ljmp
loopne
xor
fnsave
lea
sbb
dec
and
adc
dec
cmp
stc
push
fsubrl
faddl
jne
push
push
or
pop
ret
into
lcall
sarb
sti
cli
ja
cmc
sbb
jmp
cmp
ret
add
test
bound
push
jns
mov
mov
pop
in
mov
cmp
sbb
pop
inc
pop
lea
xor
test
lcall
imul
dec
xor
sbb
cld
cmpsl
stc
xchg
dec
js
add
sub
mov
dec
add
cmc
fcomps
into
dec
test
add
pop
mov
mov
jno
inc
cwtl
sub
fs
sbb
imul
and
push
cmpsl
sub
cmp
pop
sahf
mov
enter
mov
imul
jbe
xchg
loop
out
in
push
lret
dec
imul
dec
or
lret
inc
dec
mov
mov
and
jp
out
and
std
ss
push
neg
inc
cmp
lahf
dec
sub
lods
mov
jo
and
popa
and
in
pop
jp
and
sub
icebp
sbb
test
shl
into
add
out
into
sbb
jl
mov
mov
sub
pusha
fbld
sbb
adc
pop
xor
pusha
loopne
jnp
and
push
ds
arpl
fstps
and
sub
add
arpl
push
cwtl
pop
in
pop
mov
imul
cs
xor
into
popa
bound
push
sbb
add
inc
arpl
xchg
sti
scas
sar
data16
cltd
dec
fsubrl
xor
in
inc
mov
jo
and
jp
push
cmpsl
push
rcrl
jo
mov
pop
stos
aaa
insb
loop
push
xchg
adc
mov
sar
lds
jecxz
inc
sahf
ret
and
lods
jge
push
aam
mov
and
aas
mov
adc
mov
sub
jno
mov
cmp
jp
push
inc
add
addr16
cmp
data16
ds
iret
movsb
xchg
dec
pop
xchg
sub
push
jbe
outsb
xchg
dec
lret
sarl
sbb
dec
mulb
ss
xchg
ret
mov
pop
or
es
popf
add
addr16
dec
lods
pop
dec
imul
test
or
dec
icebp
fimuls
fstl
mov
addr16
jo
sbb
push
jns
aad
or
dec
repz
pop
pop
xor
jb
sub
push
push
decl
ds
push
adc
popf
rol
jno
or
push
cwtl
mov
je
call
je
js
aaa
repz
inc
fs
cld
cmpl
movsb
sub
loopne
jle
fisubs
loop
lock
loop
test
ljmp
nop
je
pop
mov
fsubrl
pop
jns
out
cmp
int3
aaa
or
sub
outsb
mov
xlat
shlb
or
push
push
fdivrl
repz
jl
cmc
add
adc
mov
lods
sbb
ss
add
scas
inc
fsubrs
mov
jbe
shrl
aas
pop
xchg
mov
or
icebp
jge
out
pop
dec
ss
push
pextrw
cltd
test
lret
add
mov
aad
adc
jno
add
jecxz
push
movl
or
lahf
add
imul
shl
push
jge
je
cmpsb
lcall
aaa
sbb
cmp
in
push
outsb
mov
aam
mov
stos
loop
xor
push
xchg
fnstsw
in
test
in
jbe
ret
sahf
pop
mov
jns
insl
pop
cmp
inc
cmc
mov
xlat
mov
stos
xchg
insl
daa
add
mov
push
jmp
jns
rol
stos
lcall
lret
les
sub
fsubrs
in
jno
les
fcmovnu
jno
insb
cmpsb
movsb
inc
lret
push
incl
ljmp
inc
add
test
inc
dec
fists
mov
add
or
sbbb
aas
bound
cs
aam
cs
jmp
test
arpl
loop
nop
lock
aas
incl
and
mov
outsb
or
and
les
aad
nop
shlb
hlt
push
inc
jo
insb
hlt
loop
mov
mov
fistpl
cmp
pop
mov
lods
nop
pop
jecxz
push
cmpsl
pop
movsl
and
sbb
inc
jnp
cmpsb
insb
xchg
inc
xchg
aaa
sub
dec
sbb
lcall
adc
mov
into
test
mov
sbb
sub
mov
push
adc
test
adcl
ret
xor
or
jle
push
or
pop
xor
push
push
pop
inc
sub
mov
pop
inc
inc
sti
jns
leave
loopne
ror
stos
cmpsl
mov
add
push
jge
stos
xor
icebp
ss
jmp
in
ret
ss
iret
packsswb
cmp
into
jp
mov
mov
insl
xchg
push
sub
jl
in
jmp
mov
adc
mov
dec
orb
ror
sbb
fcompl
jle
pop
sub
push
pop
jns
pop
arpl
mov
fldt
adc
insl
cmp
adc
in
cs
mov
jecxz
push
jae
dec
dec
scas
cwtl
and
sbb
fisttpll
in
popa
jmp
push
jecxz
and
dec
xlat
sbbb
dec
push
mov
sbb
scas
mov
dec
div
lret
or
test
push
adc
cmpsl
xchg
or
push
xchg
or
in
adc
pop
fptan
das
int3
push
mov
ret
sub
cmpsb
xor
rcl
les
leave
fwait
jmp
cli
mov
leave
adc
cmp
push
ret
inc
lds
out
lods
mov
jmp
repz
mov
ror
cltd
sbb
inc
mov
stos
inc
repz
mov
cmpsb
cmc
mov
lret
pop
jmp
fwait
xchg
jno
cs
jno
in
test
mov
push
and
push
dec
push
jl
andb
xchg
bound
jmp
enter
orb
cmc
cmp
rcrb
xor
imul
shrb
jo
ret
mov
jno
addl
lret
data16
ret
xchg
jb
aam
fwait
sbb
testl
sbb
int
clc
dec
scas
mov
insl
pop
dec
push
inc
movsl
inc
xchg
lods
jne
test
dec
data16
mov
mov
xor
call
pop
rorl
inc
sub
cmp
adc
push
aaa
out
sub
lcall
cmp
insl
inc
sbb
call
sbb
mov
int
xor
rcr
add
pop
jno
push
jp
icebp
dec
outsb
cmp
xchg
mov
sti
xor
repz
out
int3
pop
mov
xor
push
nop
lea
mov
fs
sarb
movsl
lret
shll
sbb
aad
xchg
dec
dec
xor
aas
mov
and
roll
xor
and
push
rcll
xchg
cwtl
sbb
sbb
nop
push
jnp
push
fistl
adc
push
push
mov
sbb
stc
sub
repnz
mov
and
or
shlb
push
fistpll
or
cmp
inc
aas
add
pop
mov
fistl
xchg
jno
sub
pop
push
dec
or
dec
fsubs
lock
dec
jo
fnstsw
ret
mov
push
loopne
dec
psrlq
notb
push
push
or
sbb
sahf
ret
jo
lea
pop
bound
mov
mov
outsb
int
or
push
inc
stc
js
xchg
adc
xor
repz
push
mov
sbb
inc
lock
lock
pop
imul
add
scas
sbb
cmp
sbb
inc
cmp
mov
xor
lock
setnp
fnstcw
sbb
mov
add
cmp
leave
xchg
push
cmpsb
jecxz
add
xor
iret
xor
and
dec
ljmp
push
cltd
mov
dec
mov
push
aad
fnsave
xchg
jge
xchg
lods
imulb
dec
cmc
icebp
lahf
pop
push
adc
sub
shrb
jge
dec
cmp
mov
outsb
sbb
push
cwtl
sub
cmpsb
xor
addr16
xchg
fistl
xchg
sbb
add
daa
scas
jmp
lcall
stos
push
movsb
sarb
shl
hlt
add
add
sti
nop
repz
mov
loop
mov
sub
mov
xchg
adc
lds
test
hlt
mov
je
mov
or
out
decb
imul
sub
mov
dec
pop
bound
cmp
dec
xchg
inc
pop
jns
daa
call
lahf
add
xor
stc
lcall
push
inc
popa
loop
cmp
sub
shl
call
jne
leave
loope
pop
in
gs
jge
fs
fwait
xorl
fldt
lods
loop
sbb
jno
loopne
dec
shr
stos
push
mov
ficompl
ds
mov
xor
scas
pop
lock
cmp
mov
loop
in
movsb
jo
loopne
lret
or
div
stc
pop
and
aaa
mov
stc
pop
mov
mov
sti
ret
loopne
loopne
std
mov
pop
pop
ret
out
cmovbe
loope
ret
mov
pop
iret
cmp
add
jns
ds
cmpsb
xor
mov
mov
adc
push
movsl
push
pop
stc
addl
pop
cmpsb
out
mov
sahf
pop
cwtl
inc
fldt
adc
xchg
cmove
or
neg
dec
sbb
add
jns
shl
adc
daa
push
inc
adc
jp
jp
subl
inc
dec
clc
jecxz
mov
repz
repnz
mov
mov
push
leave
rclb
fisubrl
mov
push
lods
mov
ja
repz
scas
jg
xchg
push
pop
loope
leave
pop
adc
xchg
pop
xchg
nop
lcall
lds
dec
sbb
jmp
pop
fsubl
cmpsb
add
lcall
mov
imul
mov
pop
mov
pop
jno
sub
jmp
xor
push
test
pop
adc
inc
sub
fs
mov
cmp
xchg
cwtl
das
in
push
jnp
aam
xchg
jle
sub
in
sub
test
movsb
sarb
pop
push
ja
test
adc
xchg
fstpl
push
repz
xchg
lods
test
push
sarb
scas
shr
mov
pop
bound
mov
sub
xchg
and
cli
fs
test
addr16
sbb
xchg
scas
loop
mov
loope
xchg
push
mov
jmp
and
dec
jl
and
test
and
mov
aad
cltd
adc
fimull
push
in
pop
add
out
lods
mov
xchg
fistpll
nop
xchg
daa
jne
mov
fwait
outsl
test
ja
mov
cmp
test
aam
das
in
arpl
stos
fsub
fdivl
adc
push
jno
negb
add
xchg
mov
mov
xchg
pop
sti
xor
mov
fwait
cli
adc
and
xchg
sbb
jbe
xchg
adc
mov
stc
test
pop
outsl
leave
mov
je
xor
int3
adc
dec
dec
dec
ret
js
lock
bound
filds
insl
jbe
dec
push
aas
das
cld
inc
sbb
push
or
orl
pusha
popa
daa
jg
cli
xlat
inc
loopne
pop
test
rcrl
fldenv
jp
push
gs
xor
cmp
xor
test
lret
push
dec
jbe
xchg
pop
pushl
ret
scas
xorb
push
or
scas
das
jle
das
out
pushf
pop
cmp
repnz
mov
mov
push
ret
mov
outsl
addr16
push
jo
movsb
mov
aaa
ss
inc
pusha
lds
fnsave
hlt
pushf
daa
dec
cmp
bound
adc
outsl
sub
push
iret
push
out
push
cmp
xor
jg
inc
ret
lods
es
pop
xchg
gs
and
mov
int
sub
add
pop
enter
leave
loope
aaa
hlt
clc
jg
mov
xor
adc
in
cmp
int
mov
xchg
ljmp
out
shrb
int3
mov
sbb
jns
pop
popf
xor
mov
dec
jecxz
loope
in
sub
mov
mov
or
aam
ljmp
bound
and
dec
int3
popf
inc
xor
cltd
jb
pop
mov
xchg
sahf
rcrb
jmp
jp
ja
aam
mov
cli
cld
xchg
addb
mov
xchg
jle
mov
pop
inc
push
es
xchg
outsl
mov
lods
out
imul
mov
lock
test
lret
shll
pushf
push
push
loopne
pop
mov
int
aam
dec
inc
movsl
hlt
pop
sub
movsl
sbb
fiadds
push
jle
xchg
inc
lret
inc
loopne
dec
stc
xor
jbe
fldl
clc
ja
pop
outsb
movsb
lret
rorl
aam
sahf
pop
int
mov
and
xchg
into
xchg
loopne
jb
insb
or
inc
outsl
pusha
cs
xorb
xor
jle
fidivrl
xor
shlb
jl,pn
and
mov
pop
xchg
sbb
test
push
stc
xchg
dec
and
lea
lods
adc
jp
adcb
mov
outsb
cmpsb
dec
in
pushf
kmovb
xchg
push
inc
test
mov
inc
loop
mov
imul
sub
jo
ret
fsubrs
loopne
mov
cmp
lods
popa
adc
pop
jl
jae
rolb
scas
mov
add
add
jb
sub
lcall
xor
out
filds
bound
rorb
enter
enter
cmp
mov
cmc
xlat
rcr
push
push
push
lea
and
mov
shl
push
fidivs
xchg
pop
sub
push
scas
aam
lods
pop
lods
inc
jbe
xlat
cld
adc
push
in
scas
cmp
cld
fsubrl
pop
jns
fstl
mov
mov
mov
add
ret
lret
push
dec
dec
jnp
inc
add
fldcw
and
out
push
repz
faddl
pop
jecxz
pop
and
or
mov
add
or
inc
movb
outsl
cmpl
popa
adc
inc
pop
aam
hlt
lcall
jbe
and
cld
into
ljmp
cld
scas
outsl
dec
mov
sub
mov
sahf
adc
test
mulb
arpl
scas
or
rorb
dec
sahf
movsb
adc
ret
fninit
rol
mov
pop
ljmp
push
push
xor
sub
adc
outsl
and
loopne
mov
jl
scas
dec
xchg
sub
imul
add
pushf
nop
pop
mov
popa
sub
jae
mov
movsb
dec
dec
dec
int
les
loope
dec
xchg
or
scas
sub
xchg
inc
lcall
sbb
cs
stos
popa
add
mov
sub
pop
aam
sub
div
cmc
shr
or
lea
iret
cld
mov
mov
xor
es
ret
push
sahf
cli
lods
cld
in
mov
mov
push
test
dec
pop
mov
push
cmpl
loopne
inc
repnz
push
in
test
mov
ret
lods
mov
je
pop
inc
jbe
cmp
cmp
mov
dec
add
or
das
fisttpll
movsb
mov
outsb
or
scas
sbb
push
and
inc
call
inc
inc
mov
jae
mov
mov
out
fsubrl
sahf
adc
xchg
xor
roll
mov
popa
sbbl
inc
popf
add
dec
xchg
xchg
call
adc
fsubl
mov
sub
adc
call
add
out
xchg
fisubrl
faddl
mov
les
out
aas
nop
cmpsb
or
test
jb
sbb
into
sahf
clc
jmp
or
clc
imul
cs
sar
jge
test
cmp
lock
jnp
std
jmp
out
and
push
jb
insl
add
cwtl
scas
test
pop
pop
test
insb
mov
jns
cs
mov
subb
lret
mov
jge
fcomi
adc
jns,pt
shrl
jmp
sub
inc
push
call
out
sbb
ret
jb
sub
aam
sbb
dec
inc
insb
ret
in
movsb
xor
fwait
lcall
inc
jnp
pop
jl
dec
cmp
sti
dec
fcomi
inc
mov
std
and
insb
xlat
xlat
in
xchg
loop
or
dec
adc
inc
popf
and
ret
mov
popa
inc
mov
in
cld
sbb
mov
or
out
pop
ss
lods
jnp
dec
std
cmp
and
sub
xlat
and
inc
stos
xchg
xchg
ss
and
inc
ds
add
mov
mov
inc
test
mov
notb
mov
insb
jns
fdivp
mov
jno
sti
in
into
jge
sbb
icebp
adc
out
cli
in
or
add
mov
xlat
daa
mov
repz
scas
adc
insb
cmp
aam
jo
or
sub
fs
setbe
sub
rcrb
mulb
xchg
inc
cmp
pop
push
jb
rol
imul
insb
loop
gs
in
sbb
loopne
je
xor
das
pop
xor
int3
mov
xchg
xchg
push
adc
xchg
pop
fisttpl
icebp
enter
mov
pop
lcall
xor
mov
dec
mov
xchg
add
mov
outsl
inc
insl
cmp
lret
mov
xlat
vminpd
aad
popa
xchg
ret
mov
push
sub
xchg
scas
jb
add
test
out
cli
jecxz
cltd
rorb
imul
dec
and
xchg
jle
add
pop
mov
pop
in
es
ror
xorl
lods
idivl
mov
push
daa
push
inc
stc
ljmp
xchg
test
sahf
adc
scas
inc
lods
movsb
ja
cld
aad
int3
call
jae
shrl
sbb
addr16
scas
movsb
sub
inc
mov
dec
aad
xlat
or
sbb
ficoml
fildll
dec
push
ljmp
jl
cmp
cmpsb
popa
pop
mov
fwait
movsb
jo
cltd
adc
lods
and
push
pop
sub
dec
repz
loope
push
lods
mov
or
push
jb
push
iret
sahf
stos
adc
dec
and
out
and
into
cwtl
sbb
xchg
ret
ljmp
push
ljmp
daa
add
repz
cmp
sub
fimull
jp
pop
push
sbb
int
and
inc
dec
enter
loopne
push
cmpsl
xchg
outsb
mov
mov
jle
sub
lcall
iret
mov
inc
aad
pop
neg
arpl
sbb
in
in
repnz
jb
mov
mov
repnz
and
pop
or
push
shl
lret
push
push
xchg
adc
inc
jno
scas
daa
xchg
jle
add
jns
out
lods
mov
xor
adc
clc
pop
mov
aad
je
or
push
out
xor
aas
inc
push
xor
pop
push
xchg
mov
fs
jne
movsb
ljmp
dec
mov
leave
ja
aaa
mov
push
jno
push
mov
jmp
inc
scas
inc
popa
xor
jp
cmp
fdivs
loopne
arpl
aaa
loopne
clc
adc
das
mov
out
push
lret
call
iret
divb
mov
pop
push
cmpsb
add
js
insb
shl
int3
xor
repz
inc
mov
xchg
mov
sub
gs
push
add
arpl
aam
negb
push
lret
sahf
lret
cmp
imul
push
mov
sbb
jmp
cmpsb
outsl
jmp
jg
inc
mov
mov
push
ljmp
mov
xchg
push
enter
cmp
mov
cmp
mov
add
popf
dec
lock
rorl
imul
call
sbb
mov
push
pusha
decl
push
push
mov
pop
add
sub
cmc
cmc
or
push
sbb
jg
outsl
test
xor
push
jmp
je
adc
push
shl
std
jb
cmc
je
lock
pop
xor
sahf
cmpsb
or
mov
xor
push
mov
into
data16
ret
push
cltd
jns
sarb
pop
lcall
icebp
cmp
push
mov
mov
or
pop
in
mov
sub
lds
push
xor
pop
mov
test
sub
add
adc
lret
sub
in
mov
sub
mov
bt
push
sti
jp
inc
dec
popa
inc
dec
pmaddwd
mov
jne
loopne
jb
fstps
outsb
adc
bnd
pop
or
bound
add
fstpt
es
push
and
out
pop
jmp
or
xor
aad
je
sub
mov
cltd
add
pop
arpl
std
rorb
aad
jbe
outsb
pop
push
sub
imul
xchg
cmp
xor
xchg
in
out
nop
mov
das
cmp
sub
cmc
pushf
shll
pop
push
das
push
gs
sub
mov
cmp
sbb
dec
mov
dec
mov
mov
inc
and
fistps
jecxz
incb
ljmp
mov
jnp
enter
in
pop
fucom
popa
mov
mov
xchg
out
jp
inc
imulb
lret
repnz
or
bound
push
lea
in
add
sub
jp
inc
sub
and
cs
push
adc
adc
pop
lock
or
pop
insb
mov
sub
xchg
mov
pushf
mov
mov
mov
pop
jl
mov
fwait
enter
mov
and
push
mov
iret
cmpsb
jno
or
pop
xlat
mov
notb
iret
xor
push
cwtl
orb
jbe
add
xchg
hlt
fists
mov
cmp
cmp
push
or
int
mov
jne
pop
pop
sub
notb
mov
mov
int
stos
lahf
aad
or
or
rcll
dec
xchg
sub
sub
fwait
mov
inc
fnstcw
bound
sub
inc
adc
ss
push
sbb
nop
xor
fbld
sub
xor
negl
xor
push
mov
loope
leave
into
es
flds
aad
mov
push
enter
add
je
mov
xor
mov
rcrl
and
pop
and
xchg
addr16
pop
push
adc
mov
std
cmp
dec
push
mov
lods
adc
sbb
adc
or
push
test
dec
incl
ds
dec
or
xchg
lock
and
sbbl
ss
add
mov
aaa
mov
dec
ds
es
lahf
inc
mov
add
jne
adc
cld
cwtl
adcb
jge
jmp
insl
aaa
lcall
adc
push
js
push
adc
pop
cwtl
imul
inc
pop
insb
sbb
in
push
gs
push
cltd
and
sahf
stc
nop
nop
test
cmp
sbbb
stos
pop
pop
test
loope
repnz
mov
add
icebp
mov
mov
in
push
das
cmpsl
sbb
jmp
push
push
inc
sub
pop
xchg
ret
jmp
mov
in
sbb
adc
out
push
sub
cmp
idiv
mov
mov
pop
arpl
cmpsb
cli
push
popa
inc
mov
mov
or
aaa
xor
je
xor
in
negl
fs
add
je
les
dec
and
insb
xor
shll
movsb
popa
inc
adc
cmc
and
jge
inc
enter
movsl
testb
jg
fidivs
icebp
sbb
leave
pop
cmp
jbe
nop
adc
mov
out
push
jmp
int
sub
fstpl
pop
cs
jle
mov
fwait
in
sti
or
xchg
out
xchg
cmp
fldcw
pop
inc
shlb
in
frstor
adc
xor
jbe
add
js
mov
pop
sahf
sbb
inc
popa
ret
pop
je
loop
mov
nop
xor
or
aad
out
mov
pop
ja
push
repz
mov
fidivrs
mov
int
pushf
sbb
sub
push
cmpsb
sub
mov
stc
xchg
lods
or
aas
lds
int
mov
jge
mov
in
and
xchg
inc
xor
fnstsw
cltd
fs
push
in
adc
aad
xor
fimull
loopne
fists
mov
and
loope
ljmp
push
mov
bound
mov
cmpsl
cmp
sub
push
dec
fildl
sub
cmp
fdivrl
into
sahf
cwtl
push
jne
dec
or
notb
mov
or
dec
jl
flds
push
inc
sbb
mov
xchg
push
add
dec
aas
sahf
lds
cmp
or
hlt
mov
test
mov
mov
cmp
in
xchg
xor
sbb
mov
faddl
repnz
xorb
cwtl
sbb
jp
mov
xchg
out
gs
push
andb
aad
mov
inc
push
xchg
aaa
xor
inc
pop
cltd
movsb
ja
mov
insb
jo
pop
or
xchg
fisubs
pop
push
inc
dec
jb
mov
fldt
loop
mov
sbb
push
pop
cmp
mov
mov
sub
lret
jae
add
test
stos
add
test
mov
pop
clc
std
add
ret
mov
int
das
insl
or
cmp
int
and
xor
xchg
loope
push
pop
int
dec
pop
ret
jge
sbb
xchg
lret
or
mov
std
lods
stc
xor
rol
movsb
mov
xchg
dec
add
daa
pop
call
mov
mov
mov
repnz
mov
mov
pop
inc
dec
dec
lds
test
sub
stos
push
xor
in
pusha
loope
adc
lret
movsb
rol
pop
xchg
movsl
in
sub
aas
or
sbb
fcmovnbe
cmp
fwait
dec
ret
xchg
movsb
push
mov
and
arpl
lahf
sbb
shrl
cmp
adc
adc
or
cwtl
dec
cld
repz
mov
hlt
cs
int
mov
sbbl
mov
mov
lcall
cmp
das
clc
xor
sub
add
mov
sbb
mov
mov
xor
mov
inc
push
rorb
lods
lods
int
sub
pop
psrld
sbb
sub
dec
dec
enter
into
pop
sbb
jle
fidivl
cmp
cwtl
std
xor
lret
icebp
loop
mov
xchg
fdivp
or
mov
stos
pop
nop
loope
xlat
sub
mov
pop
sub
out
jl
loop
xor
adc
jo
fwait
out
pop
xchg
sti
into
fimuls
lcall
xchg
sbb
mov
insl
movsl
sbb
nop
popa
mov
adcl
jne
movsw
add
arpl
mov
insb
pop
xchg
cmp
gs
lret
mov
stc
pop
jbe
jae
dec
pop
test
movb
fcoml
mov
loope
cmpsb
sub
jno
jmp
arpl
rcl
jecxz
sbb
inc
inc
stos
addl
fcompl
repz
push
loope
sbb
ret
jecxz
xchg
inc
adc
push
dec
negb
jecxz
mov
int
lcall
sub
fldz
push
add
and
push
mov
das
test
int
out
cs
les
jmp
hlt
arpl
nop
je
fldcw
cmpsl
shl
sti
hlt
push
sbb
outsb
adc
sub
fisttpl
sbb
int
insb
pop
fiaddl
sti
mov
mov
pushf
push
inc
pusha
or
dec
mov
aad
popf
es
lock
das
gs
outsl
outsl
jecxz
xchg
sbb
or
adc
sub
aaa
and
repnz
sbb
out
movsl
lret
movsl
jns
push
push
pop
pop
pop
ds
push
arpl
nop
outsl
nop
adc
sbb
cmp
inc
xchg
and
mov
out
inc
and
fs
push
dec
jno
jne
adcl
stos
xchg
push
or
hlt
sbb
lcall
pop
or
dec
dec
or
push
mov
mov
mov
sub
xor
out
pop
data16
dec
fsubrs
cli
pop
jb
shl
ret
icebp
jo
cmc
jp
push
lcall
ss
in
iret
and
cmp
stos
adc
mov
mov
mov
into
movsb
lcall
insb
or
push
jge
paddsb
in
jo
fwait
adc
outsl
test
mov
dec
xchg
test
jb
xor
push
aad
je
std
sbb
add
xor
push
fisubrs
jp
stc
aaa
cli
into
jae
adc
movsb
push
push
and
test
cmpb
sub
pushf
pop
mov
out
add
lods
out
jl
mov
sub
jp
inc
in
iret
mov
loop
sbb
and
xor
loope
cmpsl
sbb
push
add
fwait
aas
sub
shll
repnz
rcrb
popf
or
push
nop
sahf
test
aad
fistpll
dec
stos
fldt
je
push
jle
aas
jo
and
cmpb
popa
loop
mov
xchg
jns
xor
mov
and
mov
mov
rcr
movsb
popf
jae
stos
loop
add
xor
dec
xor
and
cmc
and
jbe
cld
push
loopne
and
out
push
lea
into
fistpll
adc
inc
cld
adc
inc
scas
mov
cmpl
pop
xchg
pop
jle
inc
cwtl
inc
dec
aad
addr16
out
repz
cs
sahf
mov
mov
jecxz
mov
or
pop
dec
mov
xbegin
push
pop
push
sbb
cmpsb
lods
dec
clc
outsl
push
lock
xchg
or
cs
push
sub
imul
mov
ljmp
adc
stc
imul
icebp
hlt
pusha
xchg
idivb
jecxz
push
sub
movsl
mov
or
aad
stos
mov
nop
cmp
push
dec
sub
aas
sahf
dec
mov
rcll
push
xchg
dec
ss
add
out
out
jg
add
pop
int3
cmp
push
sub
out
mov
mov
sahf
lods
push
xchg
dec
inc
je
flds
scas
fwait
sbb
inc
fs
nop
push
push
in
cmc
xor
inc
outsb
add
out
mov
into
clc
or
push
mov
icebp
mov
lock
movsl
cli
push
xchg
mov
lret
adc
sbb
repnz
in
mov
into
push
into
jecxz
faddl
pop
push
add
jp
cmp
cmc
orb
les
sarb
std
nop
inc
xlat
sbb
aas
mov
cmp
insl
mov
aaa
push
mov
rorl
inc
inc
push
adc
jle
fmulp
mov
xchg
dec
fisttps
and
cmc
dec
push
loop
stc
pop
insb
out
fs
mov
leave
ret
pop
mov
addr16
inc
jbe
clc
aad
mov
mov
imul
xorb
das
popa
cmp
mov
fbstp
into
lea
out
mov
mov
add
js
mov
imulb
aas
mov
xor
out
rorl
sar
repz
mov
clc
les
icebp
add
xor
popl
leave
adc
add
test
push
lcall
xchg
cmpsb
sbb
es
jns
loope
jo
mov
jl
arpl
imul
ds
mov
lods
mov
ss
pop
pop
insl
loopne
pop
push
add
call
fs
hlt
pop
jnp
andb
pop
out
adc
fwait
and
into
pop
hlt
ljmp
adc
mov
loope
negb
add
in
stos
lcall
je
dec
cmp
add
int
push
xchg
mov
ficoml
xchg
jl
ret
jmp
imul
inc
mov
push
push
fwait
push
pop
sbb
xchg
bound
mov
imul
dec
clc
pop
sbb
xor
dec
js
push
lods
push
lock
push
or
inc
notl
push
pop
jge
jbe
mov
dec
push
pop
fmuls
push
cmp
inc
imul
adcb
gs
mov
mov
jp
imul
add
into
pop
inc
adc
add
xchg
mov
mov
inc
mov
inc
inc
ret
loop
mov
les
pop
mov
ss
out
decb
inc
imul
mov
push
bound
sbb
xchg
xor
add
xchg
sub
mov
mov
fsubl
sbb
rcll
into
mov
mov
stos
mov
neg
or
push
push
inc
lret
xchg
cwtl
cmc
push
mov
add
mov
insb
mov
insb
jo
fcoms
xchg
mov
pop
mov
popl
sub
mov
add
dec
testl
leave
sbb
das
mov
or
xor
mov
and
pop
scas
pop
lcall
mov
popa
pop
mov
mov
test
jb
je
mov
lcall
mov
cmpb
push
cmp
stos
add
sbb
xor
pop
outsl
inc
fildll
fstl
mov
push
add
out
xchg
popa
icebp
test
shll
sub
adc
movsb
fwait
pop
xchg
cwtl
or
out
gs
cmp
les
lods
and
and
push
mov
sti
pop
sbb
xor
sbb
add
xchg
mov
dec
shl
int3
cmp
jns
add
push
sub
inc
jge
icebp
movsb
loopne
mov
sub
adc
rorb
push
and
mov
inc
push
scas
js
inc
es
mov
jbe
mov
cli
daa
shll
iret
imul
stos
fmuls
mov
lcall
arpl
rol
xor
push
push
andl
popa
push
mov
mov
inc
les
push
rclb
popa
jp
out
pop
or
dec
arpl
pop
dec
jmp
repnz
or
imul
inc
dec
jnp
aam
sub
ja
xchg
enter
les
aaa
stos
and
mov
adc
jae
inc
jns
cmp
inc
xlat
negb
stc
mov
subl
aad
ljmp
popa
ret
jnp
je
cmp
xor
sub
unpcklps
in
lods
adc
cmp
aas
and
int3
mov
cmpsb
out
pop
mov
test
sub
popa
add
jne
and
lods
addr16
and
stos
add
xchg
fldt
loopne
jbe
or
sub
js
dec
sbb
cmp
jg
jnp
in
loopne
inc
dec
sar
cmp
test
xor
pop
jnp
dec
test
mov
mov
fcmovu
lcall
iret
outsb
out
sbb
insb
daa
adc
adc
or
mov
pop
dec
lret
cmp
or
xor
push
clc
pop
not
dec
faddl
das
or
xchg
mov
lods
push
mov
dec
push
xchg
push
fs
stos
dec
mov
scas
mov
mov
ret
mov
mov
es
inc
ss
cs
pop
cmp
fnsave
jb
dec
and
outsl
cltd
mov
cltd
dec
aam
inc
adc
mov
dec
push
inc
repnz
aam
mov
hlt
sub
sub
xchg
pop
lret
push
ret
xchg
out
imul
imul
sbb
sbb
sub
pop
nop
out
fs
arpl
into
call
movsb
adc
and
pop
mov
out
xor
mov
pop
dec
das
call
std
test
push
out
call
xor
push
jecxz
cmp
cmp
add
pop
push
dec
movsl
mov
ja
int
lahf
aas
stc
xor
dec
pop
sti
pmulhw
bound
xchg
xor
jb
js
cmpsl
sub
or
inc
fnstsw
sar
adc
fwait
icebp
fwait
add
jp
mov
shlb
mov
cmp
ret
lods
sub
stos
pop
mov
pop
mov
cli
and
lret
adc
loope
xchg
fisubl
jae
push
sub
or
dec
mov
dec
cmp
nop
call
inc
ss
xor
sub
lcall
movb
pop
adc
das
sbb
push
das
leave
in
pop
insb
das
ja
or
adcb
insb
pop
in
imul
repnz
cmpsl
adcl
es
out
insl
lods
xor
cmp
or
fmul
outsl
jo
fdivrs
cmp
pop
test
jmp
sbb
lret
sbb
push
adc
shl
inc
iret
mov
mov
jmp
cld
and
dec
push
push
out
ret
jmp
into
mov
xor
enter
rolb
aas
and
fsubr
mov
bound
sbb
mov
rcll
pop
add
ds
lahf
xchg
add
pop
pusha
sti
mov
insl
push
sbb
ss
rcrb
rclb
adc
filds
repz
jg
add
add
push
xor
faddl
test
xor
mov
mov
fs
repz
lret
xor
sub
sub
pop
in
shll
push
sub
xor
fbstp
inc
add
or
push
int3
mov
mov
enter
pop
xchg
scas
sub
fs
js
sub
fimull
movsb
insl
loop
xor
repnz
in
pop
ficoml
adc
aas
jp
sub
lret
xor
mov
fwait
sbb
jno
push
or
sub
call
xor
jge
shlb
pop
inc
cmpsb
pushf
andl
outsb
dec
popf
or
jne
jmp
xlat
mov
enter
stos
repnz
mov
push
daa
add
es
adc
lea
cmp
inc
add
roll
inc
cli
mov
nop
push
loop
jmp
mov
dec
std
push
aaa
and
scas
mov
xor
cli
out
mov
cli
stc
adc
mov
hlt
cmpsb
sub
fldenv
cmp
fcmovb
cmp
js
push
xchg
lahf
cmp
leave
mov
mov
and
xor
mov
cwtl
jl
jnp
aam
in
dec
loop
jp
jle
pop
pop
and
and
adc
outsl
cli
inc
dec
ret
and
aas
pop
cmp
mov
dec
sarb
sbb
cld
and
mov
or
push
fmuls
and
adc
sub
jecxz
inc
popa
jl
fimuls
addb
xor
fcomip
fildll
pop
scas
jle
dec
mov
inc
pop
dec
in
and
pop
fs
mov
cmp
inc
fcmovne
xor
mov
sbb
sahf
inc
cmp
dec
call
daa
xchg
imul
rcrl
jns
mov
fcomi
leave
jge
shlb
xchg
jns
mov
xor
mov
cmp
adc
mov
sbb
lods
mov
jle
cmp
movsb
icebp
pushf
mov
sbb
xchg
inc
lds
sarb
jno
enter
fmull
adc
mov
pop
mov
inc
sbb
arpl
mov
outsb
or
pop
jp
loop
lret
jb
inc
repnz
jecxz
jg
push
out
loopne
stos
adc
aaa
repz
ss
icebp
push
mov
pop
push
jae
inc
clc
test
and
push
lods
pop
sub
sub
jp
adc
jmp
xchg
and
testb
out
mov
les
lods
push
xchg
js
in
loopne
leave
shlb
sbb
cmc
adc
das
fwait
cld
scas
inc
scas
xchg
jmp
pop
jl
ljmp
cmp
pop
xchg
xchg
movsl
mov
push
cmp
push
inc
pop
sub
sub
test
jmp
adcl
and
inc
dec
or
push
outsl
push
mov
andl
add
and
jae
std
xchg
adc
cld
in
hlt
cmp
lods
popa
call
xchg
divl
loop
ss
dec
mov
mov
xchg
cli
test
fwait
movsl
fucomi
out
mov
and
xchg
in
push
pop
cwtl
movsb
lcall
call
pop
stc
std
mov
rcrb
xchg
iret
and
std
adc
int
cs
mov
xor
and
stos
xchg
sub
xchg
adc
jo
dec
rol
sub
push
cmp
adc
jno
cmp
ficomps
cltd
xchg
pop
test
rolb
push
xor
popa
mov
sarl
sub
fisubrs
test
stc
ret
xchg
outsl
push
jle
aam
inc
pop
adc
lahf
popf
mov
leave
adc
mov
mov
push
daa
sti
popf
inc
and
loop
sti
ja
adc
fsubrs
hlt
lods
icebp
faddl
cltd
inc
lods
andb
cmp
add
inc
call
iret
inc
xor
and
inc
jg
cmpl
jne
push
fs
mov
or
cmp
das
jmp
movsb
xor
movsl
pop
sbb
test
adc
jp
pop
add
mov
das
ret
loopne
popf
push
imul
enter
or
js
mov
mov
pop
inc
inc
iret
sbbl
out
push
icebp
dec
cs
push
jp
mov
ficoms
ss
cmp
dec
test
jg
push
dec
out
lods
mov
scas
cmp
cli
aas
shl
jae
dec
loopne
and
stos
push
dec
addr16
xor
aaa
pop
insl
in
and
dec
inc
add
ja
adcl
and
mov
adc
shl
sbb
sbb
scas
dec
cmp
outsl
or
loop
cmp
aad
pop
insl
mov
adc
add
iret
cli
stos
jmp
sbb
mov
push
out
mov
jg
add
rclb
in
push
scas
mov
cmpb
mov
lods
mov
aad
lahf
rol
mov
es
cli
add
test
push
stos
ret
mov
outsb
pop
dec
aad
adc
pop
pop
adc
aam
inc
xchg
fistps
xor
fwait
out
ret
sbb
jp
testb
push
push
xchg
sbb
jmp
pop
cmp
cmp
pop
inc
lds
and
push
pusha
add
jnp
or
mov
mov
clc
and
pusha
subl
ss
cs
mov
pusha
adc
jl
movsb
in
cwtl
push
inc
aaa
out
imul
xor
adc
xor
sub
popf
scas
jle
add
pop
sub
pop
mov
jo
lea
pop
fwait
scas
push
push
add
loopne
popl
insb
sub
sbb
push
dec
outsb
push
dec
cmpsb
push
xor
nop
in
or
dec
repz
icebp
fidivl
adc
dec
inc
or
jno
push
std
and
push
xlat
movb
idiv
jno
mov
insl
out
cld
hlt
xlat
stos
fwait
jbe
and
mov
jl
jne
mov
push
inc
xor
jmp
imul
xchg
lret
mov
sbb
push
and
int
inc
fisttpl
sarb
daa
andl
mov
nop
xchg
shll
int3
mov
cld
ret
loope
rolb
inc
loopne
push
and
add
nop
inc
and
push
mov
push
xlat
xchg
or
les
add
je
jl
cmpsb
add
jae
clc
leave
dec
lcall
inc
sub
fcmovnbe
cmovae
cs
pop
adc
fs
neg
sahf
ljmp
out
addl
iret
fwait
sub
pushf
jnp
mov
cmp
mov
jmp
mov
es
mov
jne
clc
hlt
data16
xchg
testl
lock
cmp
insb
xchg
mov
fsubs
push
ss
adc
leave
loopne
es
adc
mov
add
dec
cmpsl
lret
lds
gs
insl
cmovs
adc
stos
add
cli
loope
push
out
mov
arpl
aam
inc
push
testl
daa
outsb
sbb
xchg
or
sub
adcb
add
dec
test
xchg
lock
add
push
mov
adc
icebp
push
cmp
je
arpl
and
daa
inc
jp
ss
xchg
jl
xor
jmp
std
std
lahf
cmp
cmpsb
add
cwtl
ljmp
add
sub
jge
sub
push
pusha
movsb
fstps
in
loop
sub
stos
ret
xchg
inc
sbb
test
les
iret
xor
mov
ljmp
fldl2t
xor
mov
pop
in
inc
imul
fs
mov
and
cld
dec
and
adc
dec
and
xor
inc
inc
movsb
pop
push
cmp
cmc
movsl
add
add
lock
pop
in
push
in
scas
xor
adc
cmp
cmp
into
mov
and
je
mov
mov
mov
hlt
xor
das
or
cmpsl
pop
pop
push
sbb
mov
adc
jo
jge
xchg
inc
adc
je
push
popa
outsl
mov
ja
push
mov
pop
popf
jp
xchg
ja
xchg
outsb
lahf
push
jg
je
pop
and
popa
pop
inc
jmp
fidivrs
fidivrs
clc
scas
dec
in
fistl
lret
arpl
pop
add
addr16
shlb
mov
int3
push
mov
lret
dec
adcl
mov
push
xor
mov
fadds
sbb
icebp
dec
cmp
dec
arpl
loope
nop
pop
das
in
aad
sub
imul
fsubs
lds
lahf
sub
mov
shr
lret
inc
lds
lea
enter
xchg
xchg
andb
into
jae
int
mov
jl
ss
repnz
lock
in
and
push
push
lea
jo
fwait
mov
iret
add
adc
orb
ret
fs
dec
mov
fsubrs
xchg
cmp
div
push
sbb
hlt
daa
adc
lahf
sub
push
xlat
cmpsb
or
lods
dec
inc
xchg
adc
loope
fwait
leave
addr16
dec
xchg
cmp
stos
loope
ret
push
cmp
mov
xor
xchg
stos
xlat
xchg
sub
add
push
mov
fs
lea
scas
out
and
xchg
mov
test
cli
lea
sub
in
lea
and
int
sbb
enter
loop
jnp
pop
fwait
push
cmc
xchg
stc
mov
rcrl
outsl
pop
insb
cmp
adc
inc
push
inc
outsb
pop
xlat
lcall
loop
jbe
scas
sarb
or
push
jne
push
sbb
cmpsl
movsl
movsl
fdiv
out
into
sbb
lcall
leave
lods
dec
ret
mov
push
test
bound
fcompl
out
int3
adc
hlt
nop
repnz
xor
fnsave
incb
pop
or
mov
lret
lock
fs
xor
ljmp
xlat
daa
xchg
lahf
push
leave
and
lcall
in
push
setle
sbb
test
and
clc
testb
mov
xor
push
adc
loopne
add
jl
adcb
fcomps
ja
repnz
mov
repnz
xor
or
mov
push
popa
mov
and
sub
aad
ja
sbb
loop
adc
scas
push
mov
repz
adc
xchg
sub
mov
mov
out
and
sub
xchg
cmp
jmp
mov
mov
mov
mov
jge
adc
xchg
sub
sbbl
pop
mov
int3
sub
jnp
pop
mov
pop
sarl
idivb
bound
arpl
out
sub
pop
cs
fs
iret
fbstp
mov
add
lods
ficoml
pop
pop
stc
dec
jmp
test
mov
inc
jmp
mov
cltd
inc
add
mov
adc
jl
mov
cld
and
or
push
mov
stos
popf
push
aam
sysret
mov
push
js
int3
pop
jne
add
mov
and
sbbb
sub
xchg
pop
jno
roll
ja
loope
ret
push
test
movsl
xchg
mov
xor
lahf
mov
xchg
jo
in
adc
fwait
inc
fildll
je
mov
fstl
lods
cmp
and
jo
ljmp
xor
and
pusha
mov
dec
push
mov
pop
cld
mov
sbb
icebp
inc
bound
push
shrl
in
das
leave
dec
jno
shlb
push
jnp
ja
xchg
xchg
or
mov
or
cmp
cli
popa
sbb
loop
jo
ffree
aad
or
fwait
and
cmp
sbb
rcll
xlat
loop
repz
in
jg
jge
scas
pop
jbe
push
in
xor
mov
test
cmpsl
cmp
loope
inc
mov
jns
shr
fdivr
push
movsb
xchg
pop
ss
mov
xchg
data16
repnz
add
sub
ret
dec
mov
sub
scas
test
es
dec
lea
dec
nop
cmpsb
xchg
lret
pop
xor
insb
cmp
daa
int
lret
cmpsl
das
mov
pusha
adc
jno
cwtl
adc
imul
movsb
aas
leave
add
and
das
ret
lcall
mov
outsb
adc
shl
add
sti
lea
mov
sbbb
pop
and
or
lods
cmp
in
ret
xchg
mov
fldenv
out
cli
mov
mov
add
push
mov
or
mov
popa
add
dec
inc
mov
mov
test
out
xor
stc
pop
push
int3
sbb
sub
les
xor
ljmp
sub
inc
xchg
out
ljmp
mov
mov
divb
enter
daa
test
add
lret
and
out
inc
xchg
loope
mov
or
into
xchg
inc
push
push
loopne
loop
pusha
out
scas
loope
pop
or
pop
xchg
xchg
adc
mov
xchg
je
test
andl
loope
xor
pop
jge
test
and
lcall
pusha
sub
data16
test
pop
mov
inc
mov
insb
mov
ret
pop
aaa
sbb
mov
push
scas
pop
dec
and
xchg
jge
add
mov
pop
lret
jb
add
cmpsl
dec
adc
lock
add
movsb
sub
push
in
mov
enter
jo
in
ret
dec
push
lcall
divb
in
jno
adc
lret
orl
addr16
test
cli
inc
lods
pop
dec
jle
rorl
jae
lods
ljmp
sahf
js
movsb
and
push
fs
std
out
mov
lods
inc
sub
xor
std
lcall
int3
roll
sti
inc
and
in
imul
es
gs
enter
orb
mov
test
cmpsl
pop
adc
jp
dec
mov
mov
fisubl
hlt
aaa
sub
movb
les
inc
xchg
fsubrs
xlat
and
test
dec
add
add
lock
or
pushf
push
testb
int3
push
lds
cltd
mov
ds
or
jo
mov
add
sarl
push
add
sub
push
jae
or
mov
xchg
push
mov
sti
dec
leave
rcl
jbe
pop
jbe
shrl
and
aad
lods
jp
lahf
rol
mov
mov
outsb
sub
dec
fadds
lock
imul
cmp
fs
lods
inc
ss
lods
pop
pop
mov
jo
xor
sub
push
mov
insl
or
xchg
incb
inc
and
jp
mov
xchg
adc
cli
loop
cmp
daa
sbb
xchg
add
or
mov
stc
or
jmp
adcb
add
inc
add
insl
add
jg
pop
sbb
scas
pop
sbb
mov
lds
enter
mov
sar
dec
pop
add
cmp
inc
mov
and
fwait
andb
adc
add
adc
mov
icebp
dec
iret
mov
test
inc
and
in
das
jge
jecxz
push
movsb
mov
shll
push
jnp
push
cltd
dec
ret
xlat
in
gs
int3
sbbb
mov
mov
ja
jl
xrelease
fcom
mov
sbb
int
or
dec
fldcw
in
dec
push
pop
sti
clc
add
add
sub
rcrl
inc
sbb
sbb
int3
dec
jne
sbb
jb
test
inc
adc
mov
cltd
sub
mov
in
mov
mov
adc
ret
mov
adcl
adc
das
push
push
or
out
pop
xchg
add
scas
xor
ds
jno
xchg
js
xchg
rcrb
mov
mov
mov
adc
sbb
das
jo
jns
pusha
pop
mov
rcrl
mov
sbb
je
adc
jle
push
push
jns
fisttpl
sbb
xorb
lcall
mov
pop
sub
je
out
mov
fimull
data16
jmp
enterw
jae
push
invd
lahf
std
pushw
sbb
push
xor
sub
ja
mov
mov
int
xor
adc
out
lds
pop
xor
and
addr16
jbe
jae
aam
nop
scas
sbb
lods
mov
or
popl
fidivl
inc
jne
xor
and
fmull
in
sub
pop
imul
jbe
pop
loop
inc
jo
jno
fidivrl
and
xchg
sub
jecxz
jp
ret
roll
outsl
repz
mov
dec
in
push
out
fldl
dec
leave
movsb
test
xor
or
iret
inc
mov
xchg
dec
mov
ljmp
inc
cld
jno
cmp
mov
jg
jno
sti
add
xchg
fidivs
insb
imul
dec
pusha
pop
ja
jg
nop
xor
lock
jne
push
lret
jl
cli
or
icebp
dec
push
cmp
add
push
cwtl
shlb
movsl
repnz
fcmovbe
push
lds
mov
bnd
jns
lcall
push
sahf
popa
mov
in
mov
je
unpcklps
int3
stos
in
push
xchg
add
arpl
outsl
nop
sub
gs
inc
adc
mov
rorb
imul
repz
mov
sub
inc
sbb
subl
sbb
fs
sub
xchg
ja
mov
shlb
dec
insl
inc
cmpsl
xor
jne
sbb
ret
mov
rolb
and
mov
pop
aad
push
add
sbb
inc
push
lahf
pop
ss
jle
dec
sbb
fimull
data16
push
sti
dec
jb
aas
cmp
push
js
loope
sbb
sub
pop
fdiv
pusha
mov
push
out
lahf
cmp
cld
shrb
gs
test
test
pop
ret
into
ret
stos
hlt
mov
push
addl
push
int3
rorb
mov
fadd
loop
cmp
repz
pop
nop
jno
adc
leave
sub
popf
loope
fldln2
mov
fistps
adc
xor
or
xor
negb
cmp
repz
popa
jno
lods
call
hlt
mov
rorb
xor
xor
mov
add
and
add
lock
adc
xor
mov
mov
cmp
popf
out
cltd
push
mov
fistl
dec
xor
pop
adc
mov
aad
mov
das
mov
not
or
jmp
rcrb
mov
dec
and
push
sti
pop
arpl
cli
lret
iret
adc
pop
pop
inc
lea
jb
adc
lret
cmc
xor
jo
push
loop
xor
inc
fcmove
xchg
dec
lret
jle
xor
stc
xor
and
aaa
fucomi
sbb
dec
inc
lods
frstor
fisttpl
sub
inc
out
sbb
sub
outsl
addl
inc
scas
test
divb
jecxz
add
cmpsb
leave
popa
dec
stos
ljmp
lods
aad
mov
pop
aam
mov
mov
out
pop
das
or
dec
pop
cmp
mov
sbb
mov
add
xor
push
pop
les
testb
add
and
mov
push
inc
sahf
jg
jnp
lcall
cmc
mov
inc
movsl
shrb
pop
es
mov
js
adc
xor
mov
lahf
mov
rcll
pop
jns
pushf
lcall
sbb
lock
jnp
call
stc
push
sub
hlt
adc
repz
lahf
mov
mov
and
ret
call
lods
xchg
fwait
mov
mov
cltd
js
inc
popf
fidivs
mov
lods
clc
cli
loop
jno
push
rclb
ljmp
icebp
fwait
pop
jno
cwtl
mov
loope
dec
sbb
xchg
cmpsl
loopne
sbb
test
pop
jp
mov
pop
orb
add
dec
popa
pusha
sub
jmp
cmpsl
fisubs
outsb
aas
cmpsb
ret
dec
sub
mov
pop
or
adc
inc
sub
push
xlat
loopne
adc
bound
loop
out
repz
test
das
shr
xor
rcr
dec
aaa
aam
inc
rcrb
movsb
jae
iret
cltd
jb
inc
testl
sarl
in
add
scas
and
add
pop
cmp
hlt
nop
push
pop
adc
sub
adc
xlat
scas
aad
lahf
andb
mov
mov
xor
dec
adc
cmp
repnz
stc
ficomps
sbb
loopne
ret
popf
dec
loope
jle
adc
aam
lock
inc
outsl
dec
jo
bound
rorl
nop
push
stos
push
or
test
dec
mov
cmp
xor
xchg
mov
jae
cmp
or
inc
inc
sub
stos
popa
les
jp
test
and
mov
jae
ror
and
sub
dec
mov
shlb
jle
pop
add
dec
jmp
dec
data16
cs
push
leave
pop
aam
shrb
lahf
lds
icebp
mov
mov
and
mov
or
popf
mov
inc
scas
sub
loop
gs
cwtl
dec
enter
pop
rolb
sbb
jae
fwait
insl
jno
adc
mov
cmp
push
mov
mov
nop
push
in
iret
pop
sub
addl
iret
pop
stos
dec
sti
mov
or
sub
sub
rcr
mov
rcr
sbb
cmp
jbe
sti
fs
jge
mov
jnp
std
xchg
jp
data16
push
in
fistpll
jb
mov
xchg
mov
xchg
jp
cmpsl
mov
dec
sarb
pop
je
jle
xchg
sub
cmpsb
aas
mov
and
xchg
or
pop
pop
add
inc
mov
in
and
adc
adc
dec
outsb
je
mov
aaa
xorps
push
mov
fwait
add
sbb
and
imul
test
test
xchg
les
fistpl
outsb
and
jae
je
and
test
inc
and
sarl
js
sti
and
jb
push
adc
sub
pushf
mov
cltd
cmp
cmp
aad
icebp
fisubrs
stos
stos
pop
dec
sbb
cmp
ja
sbb
jo
in
loop
pop
xor
xor
lret
inc
mov
add
hlt
in
inc
test
cwtl
mov
mov
push
into
mov
sbb
fnstsw
add
in
testb
cmp
mov
jnp
js
iret
pop
fwait
inc
inc
add
mov
outsl
push
fs
fldenv
sbb
repz
jg
out
push
popf
adc
leave
add
lret
data16
nop
xor
imul
ja
insb
scas
xchg
insb
bound
les
and
je
imul
loope
das
aad
adc
adc
cmp
mov
repnz
mov
sbb
ja
lods
lret
mov
pop
out
add
cwtl
sub
fsubrs
lds
pop
popl
add
mov
out
std
mov
into
dec
sub
movsl
jge
jmp
aas
add
inc
fwait
in
bound
lods
cwtl
add
enter
mov
or
and
and
xchg
fmuls
jns
orb
xchg
xchg
fsubr
pop
dec
cmp
jo
and
cmp
aam
divps
jl
subb
mov
stc
hlt
mov
sbb
aad
lcall
lcall
in
dec
xlat
in
mov
jmp
pop
jecxz
sti
or
sbb
lea
sub
cwtl
call
xchg
js
mov
cs
sbb
fisubrl
xor
mov
aaa
test
loope
mov
pusha
call
setge
loop
sti
or
xchg
dec
bound
test
push
or
mov
test
daa
cltd
mov
lds
ret
out
jecxz
or
bound
mov
mov
sub
pop
jl
push
sbb
ret
fsubs
jae
cmp
xchg
lock
jle
xchg
mov
ficoms
dec
jge
addb
push
dec
cld
fs
je
mov
and
lods
xor
add
xchg
lock
rorl
insb
cmp
inc
xor
inc
gs
cmp
mov
jmp
jg
sbb
stos
adc
das
ds
popa
loop
and
cwtl
xchg
adc
imul
enter
push
pop
dec
or
mov
xchg
sbb
pushf
hlt
or
jmp
cmp
addr16
inc
addb
add
xlat
or
xchg
jb
and
jnp
out
sub
adc
cmpsl
mov
mov
adc
jns
push
sarl
push
fstpl
jecxz
ds
adc
loope
and
out
dec
daa
xor
popf
mov
ret
mov
or
dec
cltd
ss
ljmp
lods
shlb
jo
aaa
and
decb
icebp
mov
inc
std
push
mov
fnsave
cmpsl
fnstenv
inc
sbb
push
push
jl
pop
insb
aam
shll
push
xchg
ret
push
int
leave
out
icebp
mov
imul
push
inc
jp
mov
xor
jae
inc
popf
adc
imul
cmp
and
cwtl
ljmp
dec
rclb
add
cmpsl
out
jmp
or
pop
fdivl
lea
fs
pop
adc
dec
int3
and
stos
adc
cli
negb
fs
in
sbb
fnsave
push
add
inc
mov
dec
xchg
jne
push
mov
cmp
repz
jae
test
push
fwait
bound
test
xchg
out
push
lahf
cld
mov
mov
jb
jecxz
xchg
adc
sbb
lcall
jl
in
push
inc
push
fldcw
or
rorl
xchg
rorb
xchg
outsl
out
ja
pop
in
in
repnz
sub
ret
cmp
mov
xor
xchg
mov
push
dec
mov
cltd
dec
test
xor
imul
xor
rcll
xor
add
popa
jmp
push
lock
dec
mov
iret
push
int
addr16
pop
xorl
push
imul
xchg
dec
lcall
xchg
mov
xchg
data16
jne
xchg
into
xchg
fnstsw
mov
inc
cmp
jecxz
jae
jmp
in
out
ficoms
scas
pop
and
pop
push
lret
jns
lcall
cmp
jge
push
and
jmp
cld
push
cmova
outsl
sbb
into
jl
xlat
mov
xor
loopne
pop
mov
jg
lcall
pop
dec
xchg
cmp
dec
test
inc
ror
jo
pop
mov
xchg
pop
jnp
cmpsl
jecxz
xor
add
or
push
aam
sub
stos
into
and
jle
shr
mov
out
lock
je
clc
decb
mov
jne
insb
jp
fiadds
inc
fbstp
cmpsl
lret
sbb
shl
std
es
inc
jb
jl
repz
enter
jne
pop
sbb
imul
push
ret
aad
std
loope
xchg
shr
mov
das
xchg
shlb
xchg
cmpb
movsb
movsb
jns
mov
rcrl
pop
jnp
lret
inc
or
and
outsl
sarb
sbb
js
cmp
mov
orb
pop
pop
cltd
and
xchg
jecxz
push
xchg
sub
mov
mov
adc
sub
adc
adc
jg
xor
dec
xchg
mov
cmp
leave
lahf
cmc
popf
mov
add
subl
rorb
cltd
cli
push
addr16
and
andb
jno
add
outsb
aas
imul
inc
mov
push
cs
jecxz
arpl
dec
push
and
mov
loop
es
adc
lea
mov
sub
push
jle
dec
lock
mov
or
sarl
and
sbb
icebp
mov
or
push
inc
je
cmp
sahf
stc
or
or
adc
dec
and
push
xchg
or
mov
cmp
pop
aad
mov
mov
fildl
dec
sbb
mov
mov
jmp
rorb
jno
pop
xor
xchg
dec
mov
xor
test
in
dec
cmp
cli
or
xchg
icebp
lret
cmp
mov
scas
dec
dec
jnp
int
xor
shl
cmc
inc
divb
adc
mov
mov
push
lods
inc
lret
push
xchg
pop
adc
inc
push
dec
fsubs
jne
in
and
xor
push
xchg
cmpsl
xor
inc
sbb
mov
pop
sbb
and
ss
cwtl
sti
js
scas
das
push
pop
inc
dec
out
mov
pop
js
jp
pop
fstp
arpl
pushl
xchg
scas
push
dec
in
push
mov
mov
xchg
adc
mov
dec
sbb
out
sbb
lahf
jnp
xlat
xlat
mov
stc
xchg
cmp
xorl
adc
lea
scas
outsb
sub
sub
aad
jmp
mov
xor
push
sti
and
scas
rol
dec
test
mov
out
inc
pusha
push
ss
jns
cmc
xlat
lahf
gs
lods
push
jnp
xchg
sub
cmpsl
jns
cs
jne
adc
out
lods
je
mov
push
lcall
imul
adc
clc
lock
mov
je
sbb
xor
cs
add
mov
add
outsl
ret
add
mov
jnp
xlat
pop
out
aas
sub
fadds
jg
add
jecxz
stc
inc
sbb
sub
mov
sub
jae,pt
xchg
mov
cmpsl
out
dec
arpl
inc
aaa
in
hlt
mov
loopne
in
mov
nop
cwtl
popa
pop
cwtl
push
repnz
cmp
cmpsl
or
xchg
dec
cmp
nop
fdivs
push
xor
mov
cld
jmp
aaa
popa
sub
fwait
cld
push
sbb
and
movsl
push
inc
mov
in
push
lret
xchg
sahf
fildl
mov
rcl
call
cmpb
sub
or
bound
outsl
xchg
stos
pop
incb
mov
in
cmpb
jno
or
sub
and
movsl
xchg
mov
popa
pop
aas
lcall
dec
fcoml
push
pop
pop
cmp
out
or
mov
cmpsl
pop
loope
imul
fdivrl
out
push
xor
lret
popf
and
aaa
mov
in
sbb
sbb
mov
or
and
pop
lcall
je
icebp
cmp
pop
andb
adc
sub
mov
xchg
pushf
cmpsl
movsb
mov
lahf
lret
cmc
dec
lahf
adc
leave
adc
cwtl
lock
shll
in
sub
dec
cmp
test
jmp
inc
xor
jae
or
jge
pop
sbb
das
arpl
pop
test
inc
pop
out
sti
mov
mov
push
bound
pop
add
adc
pop
out
mov
and
outsl
jle
loop
xor
subb
sti
movsl
pop
or
jge
aas
jmp
cmp
push
ja
mov
pop
orl
cltd
inc
pop
add
lcall
scas
lahf
or
mov
or
inc
cs
xor
daa
movsl
cmc
mov
outsb
negl
jl
push
test
fiadds
in
adc
outsb
lahf
mov
pop
cmp
jne
outsl
mov
add
jne
cmpb
xchg
test
out
test
xchg
inc
out
pop
bound
mov
or
push
jg
clc
scas
lds
jp
pop
xchg
and
sbb
fwait
xor
fwait
inc
out
rorb
mov
fld
adc
repz
stc
test
mov
cmc
ja
push
scas
push
pop
test
movl
das
je
xchg
or
lds
lods
outsl
addr16
outsl
mov
inc
dec
out
scas
lds
dec
aad
fwait
nop
fs
xorl
outsb
cwtl
outsl
scas
push
iret
inc
sbb
add
jp
imul
mov
xchg
ret
ret
jns
xchg
push
arpl
into
xchg
and
mov
ret
or
lret
out
sbb
and
rolb
mov
inc
shrb
daa
fildll
jge
popa
subb
ss
fdivl
lcall
mov
push
pop
fisttpl
xor
fistps
inc
or
mov
lea
std
loopne
adcb
add
stos
push
jl
call
inc
scas
sbb
jecxz
xor
je
aaa
push
add
cwtl
inc
imul
in
clc
fwait
je
leave
add
orb
add
das
dec
dec
jae
inc
movsl
cmpsl
lods
mov
inc
adc
mov
sbb
stos
sbb
lock
mov
push
ds
fdivrl
mov
push
push
add
adc
outsb
pop
fldl
gs
cmp
sbb
pop
fs
jo
dec
fistps
xlat
outsb
fadds
ret
fs
outsl
inc
movsl
mov
push
ljmp
mov
push
push
xchg
ror
scas
in
in
aas
jge
ret
clc
pop
movsb
push
fwait
sbb
xchg
fldl
xchg
dec
push
jecxz
cs
mov
adc
imul
sub
pop
mov
shrl
xor
lods
add
scas
jne
mov
leave
jno
jb
dec
push
push
push
add
fldcw
push
mov
mov
ds
sahf
push
cld
xchg
lods
rol
xor
lds
jl
imul
mov
inc
mov
scas
mov
xor
in
jle
incb
mov
xor
mov
scas
inc
push
mov
test
ljmp
cmp
das
mov
int
xlat
sub
xchg
popl
xor
out
cmp
xchg
loope
xchg
dec
inc
dec
pop
into
mov
or
mov
inc
mov
mov
inc
cmp
push
outsb
roll
sub
jno
mov
mov
test
mov
inc
pop
inc
sub
aad
inc
mov
mov
pop
jle
leave
repnz
sub
jo
push
cld
dec
mov
ja
ss
mov
in
fabs
mov
lea
cli
jae
cmp
pop
scas
xor
stos
popf
sub
cmp
and
add
inc
xchg
repz
jmp
mov
sub
arpl
jbe
sbb
mov
sub
insb
push
data16
cmp
addl
pop
das
jne
adc
ds
out
ljmp
pusha
push
lods
mov
out
je
sarl
sbb
sbb
js
sahf
add
adc
cmp
add
dec
scas
dec
mov
ret
and
loope
xchg
push
push
hlt
ret
mov
ja
lds
mov
mov
sub
das
aad
cmc
sbb
repnz
test
stos
out
pop
jl
enter
mov
imul
loopne
mov
inc
adc
jb
adc
cmc
jl
mov
push
aas
pop
scas
out
das
lods
inc
mov
sbb
jns
adc
xorl
sub
incb
pop
add
in
rclb
xchg
outsb
stos
sti
fmull
pop
or
pop
sbb
cli
int3
mov
ss
fildl
addr16
jo
dec
fsubs
xor
jge
xchg
jl
jbe
and
cmp
nop
sub
leave
das
sub
push
cwtl
xlat
cmc
and
xchg
mov
pop
mov
pop
sbb
in
outsb
xchg
out
ret
adc
fdivr
mov
out
cmp
adc
mov
imul
in
movb
jo
sub
xor
fincstp
mov
aaa
clc
push
mov
mulb
jge
mov
pop
mov
ficoms
xchg
and
scas
pop
test
cmp
rclb
jmp
xor
sbb
cmpsl
dec
lsl
mov
dec
xor
pop
pop
in
rolb
add
ja
out
test
push
lock
lret
outsb
xor
repnz
bound
add
or
fnsave
out
enter
jle
popf
cli
cmp
dec
lahf
rcll
mov
xor
push
sub
cmp
imul
mov
push
pop
mov
xchg
sbb
das
movsb
or
imul
repnz
pop
fptan
xchg
cld
jbe
xchg
push
mov
mov
or
icebp
imul
test
push
icebp
imul
xor
out
out
sbb
enter
xor
movaps
adc
into
sbb
stos
mov
sub
cmp
dec
jnp
jb
mov
icebp
stc
cmpsl
xor
mov
mov
add
adcb
sahf
fildll
sbb
imul
stos
icebp
jge
stc
xor
push
lods
int3
ret
int
es
add
sub
aam
xor
mov
jmp
stos
daa
or
adc
leave
adcb
rcr
xor
adc
push
ds
adc
jne
mov
xchg
popl
adc
fsubp
xlat
xchg
cmp
adc
outsl
sbb
dec
ret
scas
inc
or
hlt
add
jae
or
xchg
sbb
mov
jno
daa
adc
xor
dec
loopne
in
push
je
aam
lock
mov
xchg
sbb
lcall
inc
mov
and
sbb
push
add
sahf
stos
mov
iret
pop
rolb
imul
mov
jb
mov
loopne
cmp
fisttpll
jno
mov
mov
xor
xlat
mov
enter
and
cwtl
mov
arpl
pop
xchg
hlt
rclb
sahf
pusha
jnp
sti
xchg
inc
mulb
lret
cltd
ja
icebp
insb
jb
mov
xchg
loopne
mov
scas
xchg
cmp
mov
ss
lds
jge
daa
jno
out
cmp
lret
cmp
xor
gs
rclb
jo
push
jg
sub
fimull
mov
push
dec
enter
mov
sbb
mov
mov
jg
and
fs
lea
xor
pop
cmp
push
rcrb
sbb
out
jle
repz
jp
xor
mov
inc
ljmp
sub
xchg
add
jmp
faddl
popa
add
push
xor
xchg
addb
mov
xor
dec
aaa
scas
mov
sub
xor
xchg
mov
add
and
fcmovu
jp
xchg
hlt
call
push
mov
imul
mov
jecxz
push
aad
aam
and
gs
andb
inc
cmp
incb
push
pop
dec
sub
les
pop
fdivl
ret
sub
adc
lock
pop
and
and
xchg
popf
add
cltd
sbb
inc
xchg
pop
jl
into
xor
xchg
enter
jle
sbb
push
mov
xor
adc
in
jo
in
lahf
jns
cvttps2pi
pop
jae
adc
shll
movsl
sub
out
cltd
movsl
xchg
repnz
dec
sahf
xchg
and
aam
mov
out
mov
stc
mov
or
ret
les
imul
cmp
loope
shll
mov
lods
dec
lcall
and
jp
popf
daa
sbb
cmc
nop
push
cltd
enter
and
lret
cmpsb
xor
es
cwtl
jmp
dec
inc
jecxz
mov
xor
subl
fidivrs
aam
lahf
nop
sbb
mov
add
stc
inc
sbb
and
cltd
repnz
notl
daa
sahf
ror
push
rcll
add
inc
push
push
ret
clc
and
aas
enter
dec
aad
ficoms
aad
imul
data16
mov
js
lds
popf
ret
cmpl
pop
cld
mov
cmp
xor
jb
or
xchg
adc
sbb
inc
inc
adc
mov
add
xchg
orl
out
lods
mul
adc
int
es
loopne
in
lret
sub
mov
popa
popa
pop
mov
mov
jmp
mov
jg
xchg
mov
imul
push
xor
adc
sbb
and
add
stos
push
testb
dec
addr16
cmp
inc
sbb
push
ljmp
psubsb
push
xchg
das
pop
jle
icebp
xorb
jmp
fcmovne
outsb
sub
xor
sbb
add
sub
loope
out
xor
lock
repnz
and
xchg
xlat
sbb
dec
mov
and
xchg
rcll
std
dec
cltd
lock
roll
mov
jge
int3
push
js
xchg
sbb
xchg
mov
or
add
sub
pop
inc
dec
pop
das
mov
aam
stos
xchg
andb
xor
mov
mov
inc
repnz
lock
outsb
sbbb
rcll
push
add
cmp
jg
jbe
mov
dec
ja
jmp
or
sahf
jne
cli
push
dec
inc
lods
test
adc
mov
mov
jle
inc
xchg
test
inc
orl
dec
cld
dec
cltd
in
daa
sub
sbb
push
xchg
xor
pop
cld
mov
and
jge
mov
xor
dec
popf
adc
out
cmp
shll
and
lcall
aas
arpl
shrl
mov
and
mov
pop
jmp
imul
and
jle
aas
fs
je
mov
sub
test
mov
adc
hlt
aam
jg
push
hlt
rorb
pop
loopne
test
add
xor
icebp
cmp
pop
das
icebp
push
lret
fwait
jge
les
mov
add
add
push
movsl
hlt
sbb
cli
inc
push
push
lea
adc
int
inc
or
push
lds
out
cwtl
jl
mov
push
adcl
or
cmpsl
jecxz
lahf
push
add
mov
loope
pop
add
sbb
rorb
sbb
cmp
mov
xor
mov
sub
mov
sub
sahf
bound
inc
inc
inc
out
mov
ffree
inc
sub
dec
pop
js
dec
test
test
sub
lret
out
mov
sub
lods
xor
push
inc
jmp
mov
cld
jp
add
cmp
pop
inc
pop
clc
sbb
hlt
ds
fdivrs
mov
inc
test
imul
sbb
adc
inc
adc
adc
fimuls
inc
scas
pop
in
mov
fbld
mov
jae
js
push
cwtl
lds
xchg
xlat
or
sahf
in
test
aaa
mov
jle
jge
xor
cmp
outsb
repz
push
cltd
mov
push
js
push
xor
rcr
or
inc
jne
cmp
xchg
vmread
int3
imul
stc
rcrl
dec
fdivl
rolb
mov
jle
xchg
and
add
jecxz
push
add
xlat
std
fwait
xor
shl
or
jge
cmpl
inc
jno
out
gs
hlt
js
sbb
or
push
or
sub
cmpsl
iret
inc
das
popf
adc
js
or
jb
in
adc
sub
sbb
fucom
mov
test
daa
call
int3
js
mov
push
fidivrl
add
ficompl
add
shrl
and
xchg
dec
adc
bound
jbe
inc
ja
cwtl
outsl
daa
into
mov
xchg
out
test
cwtl
hlt
insl
sub
ss
cli
jo
sub
mov
dec
sub
push
sbb
mov
sub
lahf
lret
add
movsl
sahf
or
xor
xchg
aam
insl
add
cli
cli
and
jmp
fcmovnb
inc
jl
mov
ret
repnz
mov
and
pop
pop
cmc
loopne
sbb
shr
xchg
outsl
negb
loop
mov
out
stos
shlb
mov
in
push
daa
cmp
ds
xchg
and
ds
loope
or
xchg
mov
jge
adc
sbb
mov
xor
cmpsl
sbb
das
push
jmp
or
jbe
push
fcmovnb
dec
aam
out
dec
pop
mov
push
cmp
sahf
shlb
mov
cmp
movsb
gs
lods
push
mov
jle
test
sbb
stos
fstpl
les
or
xchg
dec
insl
dec
test
jle
inc
sbb
mov
adc
push
sub
xor
shll
push
jb,pn
loopne
std
jp
cs
pop
jae
mov
adc
push
and
push
push
mull
jne
xlat
cmpsl
outsb
jns
xchg
mov
cs
cmc
mov
adc
xchg
aaa
arpl
mov
dec
lods
ret
jno
pop
xor
pop
pop
fsubr
add
push
or
push
sub
setp
xchg
pop
call
jecxz
push
daa
fildl
scas
sahf
aas
jl
inc
jge
faddl
addr16
loope
sbb
dec
jp
in
or
out
out
pop
dec
fcmovb
mov
rorb
jg
in
dec
mov
cli
gs
mov
cmp
js
test
cli
nop
cvttps2pi
rolb
gs
es
loop
adc
lahf
lods
shl
cmp
cmp
push
mov
ror
cmp
call
jle
dec
std
push
in
repnz
scas
and
jb
jg
push
mov
test
rcrl
xchg
dec
icebp
sub
push
mov
aas
popa
iret
dec
std
mov
inc
loop
pop
adc
jae
jge
or
xchg
add
hlt
fwait
cmp
clc
aaa
loope
in
rol
out
sbb
test
cltd
lahf
jle
sbb
cld
jp
stos
les
lock
mov
inc
cmc
out
sbb
lret
daa
fldl
cs
test
mov
mov
dec
or
jae
inc
outsb
mov
cli
add
mov
mov
test
call
xchg
rcrb
dec
ret
cmp
popa
bound
into
mov
je
adc
mov
test
std
das
xchg
int
xchg
push
popf
mov
add
mov
dec
pop
pop
sbb
aam
xchg
cmpsb
mov
fsubs
addr16
mov
add
int3
add
mov
imul
mov
rcrl
std
fwait
shr
and
sub
xchg
lock
jne
cs
mov
pop
xchg
cltd
mov
enter
and
inc
inc
xlat
mov
adc
loopne
cmpb
push
ss
jno
stos
pop
lcall
test
outsb
mov
pop
cmp
dec
mov
or
mov
lret
add
add
and
shl
adc
push
mov
fs
call
sub
cmpsb
xchg
mov
out
xchg
sbb
push
imul
ret
insb
sub
pusha
call
jg
loopne
lahf
mov
ss
stc
jp
out
rolb
fs
movsl
out
or
sub
stc
add
sbb
jb
int
into
or
xchg
fisubl
int3
mov
shrb
cmp
or
jecxz
push
push
lcall
xchg
movsl
test
daa
or
lods
push
fisubs
dec
fdivrl
dec
sahf
mov
das
xchg
out
insl
or
cmp
pop
and
pop
ret
mov
xor
scas
sbb
fmuls
pop
xchg
nop
cmp
cmc
jae
cmp
aad
jno
les
inc
leave
std
enter
repz
rcll
inc
jp
lds
mov
push
xor
gs
imul
fimuls
lea
dec
mov
add
sbb
hlt
fldt
icebp
xchg
in
pop
fnstsw
and
pop
push
ret
adc
ds
cmp
push
jge
inc
clc
fwait
dec
mov
xchg
xlat
pusha
das
mov
and
lret
stc
outsl
aaa
mov
or
addr16
dec
call
xchg
ljmp
out
stos
mov
and
cmpsb
lcall
add
sahf
xchg
push
ljmp
ret
imulb
loope
ret
jno
jg
je
mov
stc
pop
fmuls
fistps
mov
dec
aaa
xchg
leave
sub
jp
push
mov
movsb
or
adc
dec
cmpsl
adc
in
sbbb
jnp
scas
push
shll
call
cmp
test
pop
mov
rclb
loope
pop
insb
es
add
nop
add
cmp
sbb
jmp
sbb
xor
or
inc
subb
mov
dec
stc
movsb
pop
or
cmp
push
cmp
jb
shl
mov
or
sub
xchg
rolb
or
lock
pop
ss
fdivrp
jnp
xor
mov
push
cwtl
mov
push
ja
mov
inc
mov
lret
addb
push
sti
or
int
xor
inc
fadds
or
in
sbb
or
xor
adc
jne
lods
xchg
sahf
fiadds
mov
xchg
jno
imul
out
clc
and
cmpsb
pop
lods
jge
mov
rorl
aas
in
jmp
adc
cmpsl
sbb
dec
cwtl
outsl
rcrb
icebp
and
jl
leave
sub
inc
cmp
outsb
test
xchg
nop
stos
pop
sub
mov
push
int
push
into
or
jmp
jne
adc
xchg
sub
and
pusha
pop
inc
inc
call
in
lods
inc
test
xchg
jp
gs
mov
adc
jl
mov
xchg
xchg
mov
outsl
mov
test
xlat
mov
mov
fcmovbe
push
xchg
mov
mov
add
das
jp
sub
lods
addl
imul
lret
mov
shll
inc
jns
adc
and
out
test
sti
stc
push
mov
mov
xchg
arpl
pop
add
mov
mov
sub
mov
aam
mov
pop
push
jmp
mov
xchg
sbb
cwtl
out
xchg
push
popa
push
test
add
cmp
bound
cmp
lods
pop
adc
add
and
mov
mov
lock
fnstsw
cltd
iret
push
insb
or
ss
cltd
test
sub
add
adc
fcompl
add
decl
icebp
sbb
mov
and
push
repnz
inc
push
inc
or
xor
vmwrite
mov
sahf
and
dec
adc
sbb
xchg
roll
adc
lret
xchg
mov
std
xor
out
pop
js
pusha
out
and
add
in
or
mov
ret
insl
dec
outsl
sub
mov
cmpsl
push
popf
push
cmp
lods
aas
xor
incl
mov
sbb
xchg
xchg
mov
scas
outsb
push
jl
push
add
inc
test
loopne
sbb
pop
lea
insb
cmp
adc
pop
mov
xchg
lret
inc
cmpsb
or
neg
insl
inc
dec
inc
mov
and
mov
adc
and
jo
in
dec
mov
loopne
ja
jecxz
xchg
fidivrl
loop
push
stos
lret
shll
fcmovnu
stc
dec
je
fmull
xchg
inc
imul
andl
movsl
pop
or
insb
pop
and
aas
push
or
dec
icebp
xchg
pushf
icebp
aam
std
mov
push
sub
inc
or
addr16
out
cwtl
add
popa
scas
fdivrp
sbb
add
lds
sub
out
mov
cmp
popa
out
outsl
into
in
add
fldl2t
iret
push
orl
insb
out
dec
test
dec
cs
push
push
or
pushf
xchg
test
jg
aaa
sarb
sub
adc
adc
push
clc
test
aas
push
dec
out
fs
idivb
je
jl
imul
jp
push
loop
out
fldt
add
push
leave
je
mov
and
mov
jb
pop
out
loop
lock
std
dec
inc
sar
mov
cltd
sbb
inc
sub
shlb
add
dec
push
jnp
cmpsl
jo
in
stos
cmp
xchg
or
and
adc
test
sub
mov
adc
xchg
popf
ret
scas
lea
shr
fs
int
gs
xchg
push
mov
fsubl
cltd
pop
in
jge
icebp
pusha
push
daa
fdiv
les
pusha
ret
popl
xchg
add
and
inc
repz
sub
adc
lret
hlt
arpl
mov
repnz
imul
testl
stos
inc
jo
test
nop
sahf
clc
mov
and
cli
in
push
push
pop
dec
je
les
sbb
je
scas
xchg
pushf
rcrl
jns
rolb
ds
adc
mov
lods
das
mov
shl
push
mov
ret
imul
lret
scas
push
jle
xlat
adc
and
out
cmp
mov
std
xor
repnz
fistl
adcl
int3
loopne
icebp
sub
ret
pop
insl
xchg
xchg
outsl
in
fdivp
mov
lock
ret
daa
rcl
jp
and
mov
gs
mov
and
dec
loope
mov
lock
mov
adc
sti
push
push
add
xor
mov
pop
jge
lcall
loop
nop
adc
enter
inc
and
scas
ret
pushf
jg
sti
adcl
jnp
mov
ret
jnp
add
fstpt
fisubl
clc
cltd
shrl
cld
xor
pop
icebp
shll
mov
stos
pop
clc
xchg
inc
dec
mov
sub
movsl
ud1
fstps
fimuls
jl
inc
pushf
cmpsb
xor
ja
cmpsb
push
jge
mull
popf
sbb
push
das
dec
cmpb
std
je
ss
lcall
adc
out
push
and
enter
stos
pushf
lret
popf
push
lahf
or
push
and
or
scas
mov
scas
scas
cmc
ret
mov
pmaddwd
xchg
mov
cli
mov
or
cmp
add
push
push
movsl
cltd
aaa
test
sbb
mov
add
icebp
mov
xchg
adc
insb
jbe
mov
xor
in
lods
cmpsl
sbb
dec
sub
int3
mov
ret
insb
cmp
insl
dec
jno
push
cmpsb
bound
repz
push
dec
dec
test
push
sbb
xchg
sbb
jo
int3
jno
out
ret
mov
mov
les
das
ljmp
adcw
test
insb
loopne
inc
out
push
or
and
xchg
and
push
insb
mov
loopne
insl
setge
out
notl
das
popf
pop
in
mov
dec
popf
or
push
je
or
in
add
or
inc
pop
adc
data16
xlat
adc
mov
pop
into
dec
dec
inc
jl
or
jp
xor
jae
pop
outsl
lea
inc
inc
mov
sbb
cmp
repnz
outsb
insl
adc
mov
cmc
ja
push
leave
test
dec
jnp
cmc
jge
ds
mov
aas
lcall
out
pop
xchg
sbb
ficomps
sbb
iret
inc
xchg
inc
lcall
add
xor
imul
sti
stc
shr
add
daa
outsl
inc
dec
jo
shll
iret
add
scas
add
in
push
pop
push
push
dec
addr16
and
jmp
sbbb
sbb
jl
mov
popa
outsl
mov
insb
imul
sub
gs
pop
sahf
popa
pop
xlat
dec
add
adc
popf
xchg
mov
push
sbb
xor
mov
cmc
jp
add
push
nop
cmc
jecxz
clc
adcb
ficompl
hlt
mov
in
jecxz
xorl
jp
repz
stc
mov
push
icebp
dec
sub
xlat
inc
das
mov
cmp
lds
or
out
daa
lret
gs
test
gs
scas
inc
addr16
jle
mov
cmc
dec
jae
je
sarl
jb
jmp
mov
pop
das
xor
xlat
arpl
and
sarl
inc
aas
or
cmp
push
xor
aas
out
mov
in
dec
cli
cwtl
mov
repnz
lds
add
jno
push
pushl
xor
xchg
insl
imul
inc
inc
and
mov
aam
pop
mov
cs
stos
stos
lock
add
xchg
mov
inc
mov
mov
pop
pop
xor
or
popa
int
or
ret
jp
lahf
imul
icebp
std
push
sbb
mov
xchg
sub
mov
test
xchg
insl
inc
xor
mov
cmp
and
enter
cmp
adc
push
push
cmpsl
push
arpl
xchg
pop
dec
cmp
fdivrs
adc
movsl
aaa
aaa
sbb
lock
adc
sub
inc
out
xchg
aas
push
call
jmp
pop
sub
cmp
mov
adc
fdivrl
das
xchg
rol
push
loop
jg
aam
xchg
es
push
mov
jmp
sub
movsl
repz
jae
arpl
sbb
pop
push
shr
test
or
push
jb
jle
inc
cmp
ret
insl
push
lds
sti
lods
imull
or
sbb
popw
aas
or
fstpt
jp
pop
mov
sbb
cmpsb
inc
inc
inc
popa
add
popf
es
rcr
mov
mov
std
icebp
pop
mov
jp
fsubrl
mov
or
test
lock
inc
je
jl
mov
sub
push
in
lods
xchg
cmpb
test
mov
sub
inc
sbb
mov
push
sub
fsub
adc
test
sub
or
push
jne
push
pop
mov
adc
lock
popa
adc
into
push
adc
loop
inc
xchg
inc
scas
cmp
rorl
loope
xor
adc
jo
fwait
xchg
addr16
jg
sub
imul
test
inc
repz
cmpsl
stc
pop
pop
icebp
dec
stos
imul
xchg
pop
cmp
pop
and
sub
aam
inc
mov
jecxz
or
std
xchg
call
imul
and
adc
inc
pop
mov
xor
push
fs
lods
lret
and
jnp
rcl
test
or
ss
lea
outsl
inc
push
cs
mov
in
cmpsl
stos
inc
test
jae
pop
or
or
xchg
subb
or
sahf
out
adc
ret
jo
and
mov
push
jecxz
rorb
pop
xchg
adc
nop
push
mov
test
outsb
mov
in
rcll
cwtl
inc
bound
popf
sub
add
mov
sahf
loope
fnstenv
cli
bound
and
add
rclb
inc
out
add
push
xor
mov
stc
stc
or
jmp
mov
mov
loope
outsl
lret
sbb
cli
push
mov
pop
mov
dec
call
int3
imul
insl
jo
in
add
pushf
xor
jne
jecxz
push
pop
call
xor
dec
adc
and
mov
cli
mov
adc
mov
gs
popf
push
jne
xchg
aad
ret
and
cmp
lock
out
test
push
or
pushf
test
rorb
pop
jecxz
adc
sub
aaa
sar
pop
rolb
mov
push
pushf
sub
test
in
mov
mov
les
jg
test
inc
and
gs
clc
jg
fnstcw
fists
lods
sti
mov
data16
mov
daa
cmpsl
mov
pop
jns
arpl
out
inc
ljmp
jno
outsl
hlt
mov
bnd
into
arpl
mov
add
sbb
inc
xchg
cmp
call
scas
iret
dec
inc
push
sbb
xor
add
inc
cmp
xor
lret
fbld
lret
add
out
nop
mov
and
lds
mov
std
lods
ljmp
into
sahf
sub
in
int3
sub
fidivrl
and
push
lahf
xor
add
or
movsb
jns
fcmovnu
aas
and
lock
and
addr16
push
dec
pushf
cmp
xlat
and
aad
nop
lea
adc
and
and
push
stos
popf
mov
push
pop
adc
sub
movsl
xor
inc
std
jecxz
cs
jecxz
jle
mov
addl
test
or
call
adc
and
pop
xchg
stos
sbb
xor
sbb
lds
pop
scas
cmpb
adc
out
mov
mov
lcall
out
cmp
add
inc
and
xchg
frstor
enter
xlat
pushf
cltd
in
sub
or
rcrl
adcb
cmp
sbb
lahf
dec
cld
aaa
mov
mov
adc
inc
divb
jmp
or
jne
xchg
push
leave
call
icebp
xor
je
add
pop
loopne
jp
pop
test
jecxz
call
sahf
loope
adc
jmp
pop
inc
add
jb
mov
cmc
movsl
lcall
mov
add
scas
icebp
lret
adc
ret
xchg
dec
pop
rolb
dec
mov
jnp
xchg
outsl
and
icebp
jl
or
insl
xchg
imul
jo
sub
add
pop
icebp
lds
loopne
stc
jae
and
push
or
xchg
leave
push
cmp
shl
cmpsl
sbb
negb
into
movsb
or
xor
mov
cltd
in
icebp
loope
hlt
push
lock
adc
dec
fs
test
pop
mov
jnp
jecxz
out
out
cwtl
inc
mov
cmp
gs
lahf
inc
stos
lods
xor
sbb
cmp
cmpsl
les
loope
mov
test
or
pop
jecxz
mov
je
xlat
lods
sub
loopne
stos
cmp
std
int
aas
and
outsb
inc
mov
adc
cwtl
sub
mov
ds
cmc
in
xorl
xchg
jae
jle
testl
jl
sbb
das
sbb
mov
shll
lret
outsb
and
inc
fidivrs
jge
pop
in
shll
roll
aad
pop
pop
cmp
or
cmp
dec
andb
jmp
ljmp
daa
outsb
mov
adc
cmp
xchg
push
push
mov
sti
sub
jecxz
cmpsl
cli
jp
je
or
push
arpl
stc
sbb
stos
ja
js
jo
xor
fwait
mull
push
push
je
or
dec
mov
out
dec
push
fsubrs
or
xlat
cmp
cli
push
fnsave
insl
sub
and
sub
push
fucom
mov
stc
xchg
jnp
aam
cmpsl
idivb
pop
mov
push
aaa
sub
jl
sbb
pop
rorl
sahf
int
adc
sub
cmpsb
pop
cltd
pop
sarl
arpl
ret
inc
sub
mov
adc
test
gs
mov
ds
mov
mov
push
sbb
xchg
fwait
movsb
out
lock
test
arpl
push
add
ljmp
addb
icebp
lea
inc
pop
lret
mov
cs
fisubl
fistps
mov
adc
mov
enter
dec
testb
data16
gs
fstps
fcomps
dec
incl
orb
rorl
mov
mov
dec
aaa
sarb
jae
in
lcall
sarb
jnp
pop
mov
sbb
stos
or
jae
sbb
fstps
sarb
add
push
pop
or
ss
and
xchg
sub
or
jge
push
jmp
je
cmp
adc
je
rorl
xor
mov
add
ror
mov
add
push
xlat
lea
pop
out
pusha
pop
dec
dec
dec
icebp
cmpl
ss
mov
cmp
sbb
jnp
add
movsl
sbb
jmp
push
cmp
scas
ds
fiaddl
mov
dec
pop
bound
adc
or
rcrl
cmpsb
push
push
xor
dec
jecxz
fs
out
sub
mov
ret
lods
popa
lods
adc
add
inc
adc
sti
mov
fistpl
adc
sbb
jp
leave
shlb
xchg
mov
gs
outsb
pop
test
dec
fstl
inc
icebp
pop
sti
gs
xor
and
xchg
inc
fcompl
xor
sbb
flds
pop
ss
xchg
syscall
mov
cli
repnz
sbb
fmull
jbe,pn
into
scas
push
loope
cwtl
or
sbb
shrl
lcall
movsl
xchg
mov
sub
in
pop
xor
xor
mov
sbb
fcmovnbe
sbb
push
imul
lcall
subb
jbe
push
stos
xor
sbb
outsb
fcmovu
jno
sbb
sbb
loope
aaa
pop
enter
jecxz
testl
pop
sub
sub
pop
sub
mov
rorb
sub
push
adc
cmc
add
push
icebp
adc
inc
mov
push
mov
nop
out
enter
inc
dec
mov
daa
xchg
aaa
sbb
addr16
xchg
or
xchg
rol
sub
adc
loop
push
mov
or
ds
add
mov
jg
iret
bound
rep
int3
cmpsl
or
sbb
push
mov
notl
ret
icebp
rolb
mov
jl
xchg
add
pop
daa
xor
dec
add
data16
push
xor
and
sub
cmp
les
lea
mov
ficomps
pop
enter
dec
mov
movsb
imul
ret
cmp
cmp
fdivrs
xchg
adc
pop
push
out
lods
idivb
je
aaa
xchg
fiaddl
mov
xor
xchg
je
pop
and
out
loopne
cmp
mov
and
in
pop
cmp
inc
xor
pusha
push
clc
jbe
xor
int
and
test
mov
jge
ljmp
jno
pop
and
ficompl
aad
add
sar
push
cmpl
mov
mov
add
dec
aad
mul
lock
or
cli
inc
or
push
inc
xchg
lahf
jge,pn
enter
pop
ret
jo
cmp
xchg
je
loop
hlt
xor
stc
adc
dec
repz
je
ljmp
inc
andl
in
pop
cltd
les
adc
or
jle
mov
rcll
add
movsl
jl
loopne
and
xchg
push
nop
jg
push
xlat
jno
adc
popf
push
andl
mov
pop
jle
and
fcmove
lahf
ret
sahf
or
jne
mov
rcll
or
mov
adc
lret
sub
mov
shrb
out
dec
das
ljmp
out
leave
cmp
cmp
cs
inc
outsb
sub
push
mov
inc
mov
xor
ret
push
imul
into
fdivrp
mov
mov
dec
lahf
sarb
dec
es
or
int3
jmp
leave
push
in
push
sbb
pop
jbe
popf
popf
sti
jbe
clc
and
mov
cmp
scas
fwait
aad
push
or
add
mov
add
sbb
mov
cwtl
push
pop
mov
scas
cld
clc
mul
xchg
mov
cmp
xchg
pop
loope
pop
out
xchg
fmul
mov
and
adcb
je
jg
adcb
mov
outsb
daa
out
push
push
cs
mov
arpl
cli
jnp
jb
test
inc
sbb
mov
push
jmp
lcall
stc
jecxz
data16
pop
mov
outsb
jg
popa
repz
mov
dec
adc
loopne
jnp
insl
xor
xchg
push
into
test
dec
adc
or
xor
xchg
sbb
jle
loop
mov
mov
lahf
xchg
loope
in
jae
add
lods
adc
push
loope
mov
inc
bound
test
fwait
add
pop
dec
fsubrl
add
add
ja
inc
lods
cmp
jb
fdivrs
outsl
xchg
push
mov
sbb
icebp
add
lret
cmp
int
stos
sbb
sub
or
push
int
lret
cmpb
sbb
clc
cmp
aas
int
mov
or
js
iret
bound
add
cmpsl
mov
mov
jne
mov
lret
inc
mov
jle,pt
mov
aaa
mov
xor
add
xlat
rcrb
dec
mov
rep
test
rcrl
and
push
test
scas
xor
inc
pop
shll
or
sub
cli
fmuls
pop
sahf
dec
dec
mov
lcall
stc
lods
jns
cltd
daa
xor
cmc
jae
scas
orl
dec
cmp
sbb
xchg
dec
lods
inc
pusha
pop
jb
aaa
stos
adc
inc
mull
and
ret
mov
das
xor
and
daa
pushf
push
les
lea
xor
push
mov
mov
push
inc
icebp
lods
fsubr
inc
in
mov
and
cmp
ja
xor
pop
xor
or
push
jnp
lahf
mov
dec
mov
fs
cmpxchg
dec
xchg
cltd
fstpl
flds
mov
jo
mov
inc
fst
popf
mov
sarb
aaa
push
jnp
xor
jns
xchg
dec
dec
mov
sti
or
add
xchg
xchg
jle
jns
loope
dec
pushf
hlt
mov
cmp
mov
dec
in
xchg
lahf
nop
int3
or
fisubrs
push
test
out
push
mov
or
or
jmp
rcl
stos
dec
mov
lahf
cmp
xor
cwtl
adcl
cmp
xor
lret
decl
push
call
mov
gs
jne
cmp
rcrl
jo
enter
mov
adc
mov
fcomps
bound
pop
int
jne
or
shll
xor
call
jnp
dec
rcr
dec
mov
icebp
xor
dec
cs
int
xor
sub
lahf
xchg
or
loop
test
sbb
call
mov
lods
mov
popf
and
jno
test
out
and
inc
test
inc
and
popf
mov
jbe
sbb
sbbl
enter
lret
pop
sahf
xor
test
aaa
insb
inc
in
movsl
out
mov
mov
add
jno
lods
cs
std
gs
jge
into
adc
jmp
fildl
jge
outsb
push
mov
cmp
push
sbb
pop
rorl
hlt
jno
cmp
push
inc
sbb
sti
cmp
pop
push
and
pop
mov
and
xchg
sbb
movsl
stos
xor
mov
out
mov
sbb
insl
lcall
ret
adc
loop
jmp
push
aam
push
push
adc
xor
cmp
pusha
xchg
das
aaa
out
pop
pop
mov
cmpsl
jge
std
loop
xlat
nop
fisubrs
daa
js
pusha
jbe
leave
call
mov
jge
repnz
ret
scas
std
test
lea
dec
mov
xchg
sub
adc
xchg
nop
mov
bound
imul
shrl
xor
lock
pop
jmp
or
pushf
xlat
push
insb
jecxz
pop
jb
bound
outsb
scas
popl
xchg
xor
dec
jp
sub
repz
lahf
xor
leave
lds
xchg
pushf
aam
or
in
leave
out
add
dec
dec
xor
scas
cli
sahf
test
mov
jecxz,pn
mov
push
lods
imul
leave
inc
jnp
jns
out
adc
xchg
inc
xor
cmpsb
out
int3
sub
int
jp
sti
jns
pop
adc
daa
repz
mov
sti
ret
inc
stc
mov
loope
and
lods
and
and
sub
fsubs
and
lahf
jge
into
inc
sbb
and
test
mov
mov
ficompl
lret
xor
lea
enter
pusha
int
loopne
jl
xor
es
jo
adc
and
subb
add
dec
pop
scas
faddp
dec
push
in
pmullw
xchg
out
cs
push
mov
cmp
cld
push
in
jle
add
or
sub
pop
mov
loopne
jbe
shr
mov
sbbb
cmp
lds
orl
adc
and
dec
fdivrs
cmpsb
call
lods
jle
popa
test
dec
jge
shlb
push
xchg
xchg
xor
xor
cmpsb
int3
push
gs
add
mov
push
mov
jp
test
xchg
push
xchg
dec
sti
rcrb
les
imul
xchg
sbb
aaa
mov
cli
mov
pusha
outsl
in
xor
push
dec
in
cmp
out
mov
adc
sti
out
inc
push
ret
mov
push
dec
inc
out
jo
adc
jmp
mov
xor
adcb
adc
adc
test
xchg
hlt
cmp
sti
ljmp
nop
leavew
mov
popf
push
pushf
les
xor
xor
sbb
shlb
fstl
or
push
test
call
ja
in
sbb
cmp
push
jns
or
pop
in
sub
imul
incl
sbb
mov
xchg
push
insl
jb
push
push
sbb
pushf
xchg
push
mov
adc
in
addr16
mov
dec
lods
fsubrs
sbb
xchg
sti
add
aam
shl
inc
lret
test
iret
aas
push
adc
and
or
sahf
pop
push
dec
icebp
cmp
icebp
stc
adc
pop
sbb
pushf
pop
dec
pop
xor
negb
nop
pop
and
jge
xchg
mov
xchg
xor
ja
pop
in
lret
fiadds
dec
mov
inc
int
xor
mov
test
cli
cmc
test
jae
mov
sahf
xor
inc
push
push
inc
in
int3
push
hlt
cld
pop
stos
jbe
in
pop
or
xlat
push
mov
fmull
flds
add
adc
mov
mov
loopne
movsb
mov
mov
inc
add
mov
xchg
cld
push
enter
stos
add
sub
nop
shl
pop
rorl
add
lret
pop
int3
inc
cmpsb
mov
sbb
mov
hlt
inc
mov
shlb
adc
xchg
and
dec
adc
es
push
mov
in
jns
jmp
arpl
popa
lock
outsb
orb
mov
popf
loop
jne
inc
mov
mov
xchg
xor
icebp
and
scas
add
xorb
push
dec
cmp
out
ljmp
cld
jae
mov
in
lock
decb
pop
test
ret
fadds
xchg
xor
cmc
test
test
sub
andb
or
ljmp
or
idivl
mov
incb
xor
jo
rorb
xor
rcr
lahf
xor
pusha
fadd
add
jne
lret
fstp
insl
lahf
lea
xor
mov
fists
lods
cmp
mov
std
loop
mov
repnz
push
jle
pop
xchg
ret
insb
lods
or
movsb
sahf
xchg
add
es
jnp
imul
sub
or
adc
jmp
dec
add
inc
out
rorl
lods
dec
scas
out
adc
mov
cmp
aam
test
jb
mov
int
pop
sbb
jg
sub
jg
dec
out
sbbb
xor
cmp
mov
dec
and
insl
repnz
lcall
xchg
sub
jo
das
enter
ret
cmpsl
xor
dec
ljmp
scas
cmp
out
cmp
pop
add
dec
outsb
sbb
jns
leave
pushf
add
jg
fwait
mov
jb
jbe
int3
int3
pop
add
add
pop
pop
iret
into
push
rcrb
mov
xlat
bound
adc
jae
imul
iret
jae
xchg
out
jbe
xor
inc
mov
jp
in
and
cmp
sbb
or
sbb
cmp
pop
xor
loop
cmp
fistl
jae
mov
int
or
sbb
pop
inc
or
sbb
popa
push
cmpb
mov
arpl
sbb
and
push
adc
imulb
ljmp
scas
popa
sbb
xor
shlb
jl
cld
mov
mov
push
xor
ficoms
cmpsb
mov
xchg
push
pop
xor
test
push
cmp
cmp
or
ds
inc
add
add
sub
sahf
ljmp
insl
filds
pushf
loop
sub
stos
mov
fstl
and
xchg
lcall
or
les
daa
hlt
das
jnp
insl
lock
pop
xor
outsb
sti
shlb
inc
cli
je
rcll
dec
cmp
arpl
stc
sbb
insb
and
push
in
adc
dec
popa
les
int3
popf
fiadds
dec
fnstsw
ficompl
jg
test
mov
sub
mov
add
or
jg
sub
ret
and
mov
jmp
dec
dec
xor
sar
pop
out
lock
xchg
arpl
arpl
push
xchg
cmpsb
mov
fs
adc
insb
aad
loope
push
pop
mov
pop
insb
aad
out
push
cwtl
mov
pop
test
inc
ds
jecxz
das
sub
or
jns,pt
int3
mov
push
movsb
mov
or
jle
push
push
mov
jle
mov
subb
into
jns
and
aas
clc
inc
push
pop
fwait
xchg
adc
xor
lods
lret
mov
mov
fsubp
hlt
gs
stos
repnz
pop
sbb
sbb
xor
sub
push
push
add
xchg
js
rcll
push
enter
jl
pop
into
popa
shl
sbb
cli
test
rcl
stc
pop
xchg
mov
loop
pop
mov
xchg
jae
inc
ret
xchg
cmp
lods
jmp
sub
sti
scas
xchg
xor
pop
iret
lahf
mov
fwait
or
xor
cmc
mov
push
xchg
stos
imul
orb
ja
adc
nop
lahf
cmc
cs
out
jnp
in
mov
aas
comiss
jnp
aaa
pop
or
mov
mov
sbb
xor
inc
mov
push
dec
sbb
cli
in
add
out
outsb
imul
lret
in
push
sub
in
loopne
mov
push
add
jle
ds
mov
pop
jmp
push
pop
stos
xor
inc
outsb
pop
jns
pop
push
mov
cld
xchg
mov
dec
clc
std
pop
jno
pop
aas
mov
testl
imul
lods
cmpsl
repnz
ret
add
sbb
pushf
mov
xor
sbb
inc
lock
jg
sti
popf
and
movsb
subb
pop
dec
or
sub
cmp
data16
leave
sti
outsb
std
mov
adc
dec
mov
mov
std
into
xor
jg
sub
movsl
mov
mov
in
sahf
gs
call
push
xchg
dec
dec
sub
and
mov
mov
aaa
arpl
hlt
cmp
dec
xchg
filds
mov
std
into
mov
rcr
push
xor
insl
pop
mov
pushf
mov
insl
mov
ds
out
shl
aaa
rclb
xchg
pop
sbb
subb
into
mov
jnp
add
cli
mov
jno
push
mov
pop
adc
shl
push
push
mov
push
pop
je
filds
stc
jb
jg
fdivrl
pop
test
add
bswap
ret
aad
xor
mov
add
pusha
popa
xchg
pop
hlt
fs
es
daa
cs
jecxz
pop
sahf
test
ja
push
push
test
mov
adc
outsl
mov
call
xchg
call
daa
and
jmp
in
add
cltd
mov
clc
stos
mov
loopne
cmp
dec
cli
pop
pop
bound
mov
or
pop
enter
cld
mov
faddl
jle
sub
sub
fdivrl
popa
jb
aad
imul
insb
shll
ljmp
cmc
or
cmp
incl
shlb
icebp
sbb
xor
and
push
lods
fmull
rcll
adc
cli
mov
pop
jne
pop
or
pandn
cmpsl
pop
icebp
cmp
cltd
jno
mov
dec
push
fimuls
jnp
sbb
mov
xchg
insl
cmpsb
repz
test
aas
mov
sbb
fstps
pop
and
loope
push
sbb
in
add
rclb
int
mov
aam
push
pop
push
push
xor
pop
cmp
push
aad
mov
jecxz
xchg
rolb
mov
imul
aaa
repz
xchg
and
test
pop
sub
sbb
lds
jle
mov
mov
sbb
js
and
sahf
add
cld
ret
push
and
pop
xchg
loope
insb
loopne
pop
gs
inc
adc
inc
ja
jge
or
imul
lcall
shll
lret
ljmp
xor
cmp
cld
jecxz
aad
js
mov
add
sub
xor
ja
dec
fwait
xchg
inc
pop
lcall
xchg
cmpsl
aam
or
ret
mov
inc
aaa
adc
pop
imulb
sbb
shl
mov
xchg
jnp
add
cld
sbb
out
xor
or
sub
xor
or
mov
sbb
and
std
in
mov
and
lahf
lea
mov
lahf
jg
xor
cld
ror
jecxz
adc
rcl
xchg
dec
dec
xchg
lret
inc
or
les
pop
push
popa
push
sar
add
mov
outsb
stos
fdivs
xchg
sarl
adc
mov
push
pop
rcll
cmpb
sbb
nop
in
orb
pop
jae
xor
add
sahf
lds
push
sbb
mov
aas
mov
mov
sti
pop
mov
les
or
repnz
pop
iret
movsb
loopne
sub
lea
push
mov
pop
cmpsb
imul
fldcw
dec
dec
and
les
mov
ljmp
jmp
ror
add
or
test
sub
pop
and
mov
cmpsl
cmp
xchg
ret
jae
mov
ficomps
xorl
pop
sbb
sbb
vandpd
lods
cmp
rol
pusha
sarl
xchg
sub
mov
lds
cmp
mov
jb
data16
push
mov
mov
inc
lret
mov
lret
xchg
mov
pushf
sub
ret
movsl
out
add
jle
mov
cmp
popf
gs
and
pop
and
jg
pop
mov
adc
pop
out
adc
add
lods
mov
ret
pop
icebp
mov
sbb
aaa
dec
pusha
xchg
dec
fs
fsts
jb
cwtl
inc
arpl
int
fucomip
xor
sub
mov
jns
push
adc
sub
rcr
arpl
dec
mov
fchs
adcb
inc
cmpsb
adc
adc
popf
rolb
pop
push
mov
jecxz
aas
and
addr16
lret
xchg
lcall
mov
mov
cs
aam
mov
fwait
push
push
ret
cli
mov
xchg
xchg
call
orl
das
sbb
je
push
fst
push
inc
sub
hlt
test
fnstenv
cmp
lret
pop
jg
mov
jb
nop
outsb
in
test
dec
sub
lods
pop
mov
xor
push
inc
arpl
outsb
mov
outsl
call
pop
xchg
mov
mov
mov
hlt
xchg
xchg
add
sub
or
pop
jl
pop
lock
aas
mov
or
stos
outsl
scas
call
hlt
jae
pop
das
ds
add
mov
movsb
mov
inc
sub
mov
push
adc
xchg
or
mov
add
mov
out
push
aas
fs
jae
xor
xor
dec
arpl
mov
sahf
repz
fdivs
call
sbb
inc
scas
into
jmp
insl
or
fisttps
add
ja
cmp
add
mov
mov
jnp
or
out
fsubrs
sub
bound
andb
inc
fisttpl
sub
mov
xchg
ficoml
fsubs
lock
repz
cld
mov
clc
mov
mov
add
xchg
pop
inc
out
test
mov
push
in
push
dec
cmc
mov
mov
into
sbb
jne
jns
xchg
or
sti
fdivrl
fmuls
cmp
and
ror
add
jmp
xor
cmp
push
cmovge
pop
inc
pop
cli
mov
cmp
jne
out
jb
mov
gs
jp
clc
cli
inc
pop
and
mov
xor
push
jecxz
je
stc
scas
popf
in
daa
add
out
sub
xchg
mov
pop
movb
dec
inc
std
jns
add
clc
loope
dec
daa
movsl
js
ljmp
pop
xchg
xchg
jb
xor
mov
cmpsb
xorb
cmp
subb
add
and
aas
cmp
daa
out
pop
xor
mov
mov
mov
cmpsb
cmp
mov
push
call
into
sub
movhps
lods
and
cs
movsl
fst
test
jl
lds
loopne
out
push
jg
push
fwait
mov
int
and
dec
test
push
js
xchg
cbtw
mov
cmp
jmp
push
cmp
shll
enter
test
rorl
jle
jns
xor
mov
cltd
jns
test
std
insl
sub
dec
flds
cmpsb
or
xchg
xchg
and
lahf
jge
ds
mov
push
or
sbb
mov
fisttpl
ljmp
repnz
jmp
addr16
xchg
sarb
shrl
and
test
mov
sahf
call
push
movsl
or
testl
mov
clc
add
ds
sahf
xchg
mov
andl
popf
sub
xchg
aaa
xchg
rcrl
push
xchg
dec
aas
lods
cmp
mov
sbb
or
jl
in
fbstp
mov
rcrb
xchg
and
xlat
pop
test
pop
imul
filds
leave
xchg
ds
jp
scas
jecxz
xor
inc
jnp
sub
pop
and
add
or
or
js
inc
dec
test
cld
push
adc
pushf
shll
rorb
mov
inc
test
xchg
popl
int
dec
pop
sub
loopne
faddl
outsl
xor
cwtl
addl
mov
lret
shrb
jne
push
fimuls
cmp
lods
inc
mov
mov
mov
daa
data16
xchg
lock
pop
insl
scas
popf
daa
ret
jbe
addr16
clc
push
lock
pop
inc
jmp
scas
imul
arpl
cmp
mov
jae
dec
imul
sbb
add
sub
jecxz
jle
enter
cs
lods
cmp
mov
lret
mov
repnz
mov
xor
jge
das
sti
leave
test
ficompl
push
sub
sbb
mov
lock
cmp
cld
daa
dec
int3
insl
cmpl
or
xchg
fildll
and
jo
sub
rcl
addr16
imul
pop
or
out
sub
or
out
inc
out
mov
lods
notl
lret
xchg
xchg
lods
xor
ret
insb
shll
fsubrs
insl
rclb
aas
pushf
out
jle
sbb
iret
xlat
or
clc
ds
mov
mov
mov
pop
repz
inc
cmp
ja
leave
hlt
dec
cmp
loopne
addr16
pop
dec
mov
int
cmp
movsl
pop
fs
push
and
xchg
dec
daa
cmc
imul
mov
push
sub
out
inc
movsb
pushf
push
movsb
pop
int3
jecxz
cwtl
or
movsb
push
xlat
int
mov
dec
pop
sbb
movsb
xchg
aam
lock
push
lds
mov
pop
out
push
and
fs
adc
cmp
jnp
and
adc
add
ret
test
jns
lods
xor
xor
xor
cmpsl
loope
je
mov
sbb
jnp
mov
lret
mov
sbb
mov
xchg
cmp
or
push
loopne
fistpll
mov
inc
mov
out
sti
jne
dec
cmp
repz
inc
sbb
leave
loop
movsb
call
mov
outsb
fwait
mov
push
sti
dec
push
pop
sub
cmp
sbb
cli
fwait
imul
push
xor
fwait
ret
aaa
nop
mov
push
movsl
jns
pop
add
neg
cmp
pop
shrb
pop
add
fwait
lea
icebp
insb
cmp
cmp
jno
or
sbb
dec
push
adc
lahf
fidivrl
push
lcall
call
movsb
gs
pushf
out
lahf
push
dec
test
adc
cmpb
or
popf
sub
sub
js
and
and
popf
ja
int
leave
stos
dec
cmp
mov
shl
cmp
pop
dec
add
ficompl
fwait
nop
sbb
inc
xchg
or
rcr
or
out
mov
push
jl
mov
sbb
mov
xor
dec
cmp
faddl
int3
push
shlb
mov
movb
fists
ret
movsl
stos
mov
xor
out
push
jmp
lcall
xchg
lock
sbbl
imul
or
adc
fmuls
mov
lock
fs
sarb
push
notb
and
clc
dec
jno
sub
hlt
inc
jb
inc
push
mov
addr16
iret
xchg
pop
sbb
lods
imul
mov
xchg
sbb
popf
pop
fwait
data16
mov
gs
test
stos
add
jecxz
and
cmpsl
sub
sub
jge
pusha
pushf
sbb
ja,pn
sbb
pop
hlt
push
xlat
xchg
cmp
sub
mov
xchg
or
push
jb
inc
lods
add
or
jae
xchg
mov
int
pop
xor
lea
lods
mov
and
dec
pop
addr16
cli
out
ficomps
mov
sbb
push
insl
push
pop
push
sahf
inc
xchg
in
push
push
js
sahf
fdivs
xchg
mov
and
jmp
and
xchg
jae
clc
lret
scas
into
push
sbb
stos
arpl
push
inc
cmp
loop
xor
or
xchg
lods
mov
and
lock
cld
cli
dec
lret
push
hlt
and
add
mov
ret
call
aam
jbe
xlat
les
xchg
out
xor
fdivrl
xchg
out
add
lcall
outsb
mov
std
and
sub
mov
rcrb
arpl
adcb
psrlq
ret
sti
xchg
in
aaa
out
lret
mov
cs
and
inc
adc
xchg
enter
jp
mov
andl
lcall
ret
inc
mov
out
pop
jbe
cwtl
aam
add
pusha
scas
mov
xor
test
lcall
ljmp
mov
daa
insl
popf
mov
xchg
in
cld
out
xor
cmp
cmp
addb
cmp
xchg
mov
cmp
loopne
lea
mov
mov
stc
xchg
subl
cmp
sub
cmpsb
out
mov
sbb
popl
subl
in
add
sub
push
pop
jnp
iret
pop
mov
mov
sarl
add
ret
jae
jnp
mov
inc
in
in
push
lcall
mov
dec
xchg
mov
sub
je
inc
sub
sarb
mov
pop
dec
xchg
outsb
or
enter
out
inc
in
jne
adc
cmp
xchg
jno
out
in
inc
push
pop
xor
fsubrp
es
mov
inc
int
pop
jmp
push
lahf
sub
in
push
mov
cmp
inc
mov
mov
sub
imul
adcb
jmp
loop
push
dec
adc
mov
je
xorl
ljmp
dec
mov
inc
fisttpl
mov
ljmp
mov
xchg
sub
push
loopne
xlat
jnp
adcl
inc
cmc
jae
mov
sbb
insl
add
fidivl
popa
pushf
mov
rorb
mov
pop
andb
jle
out
jno
or
inc
pop
fwait
cmc
shlb
push
jne
adc
mov
cmpsb
jns
sbb
and
cmp
mov
jl
leave
xchg
int
dec
mov
ret
sbb
cmpb
xchg
and
rorb
imulb
out
mov
roll
lds
les
push
std
or
and
fucomip
popf
jl
mov
mov
aam
and
inc
mulb
jns
insl
popa
cmp
scas
hlt
pop
lcall
fwait
or
or
dec
lods
mov
insl
loopne
mov
stos
lahf
cwtl
jmp
ret
push
call
fbld
rcrl
dec
mov
mov
cmp
mov
dec
data16
lret
push
movsb
push
insl
dec
mov
pop
and
jge
cmp
lret
outsl
arpl
ret
sbb
jno
jle
pop
push
pop
sub
lea
insb
ret
into
or
dec
inc
popa
ret
or
pop
addr16
jne
cld
int
hlt
ljmp
push
mov
pushf
push
cs
jecxz
pop
fmul
into
pop
dec
mov
stc
dec
mov
sbb
lea
stos
xchg
inc
lret
lahf
bound
mov
mov
test
cmp
arpl
jo
stc
loop
sub
in
inc
cmpsb
mov
cld
push
insb
mov
lcall
adc
cld
or
xor
je
js
fists
add
test
loop
sarl
hlt
push
mov
call
mov
pop
aas
pop
add
cmp
cmp
repz
xchg
mov
je
enter
test
out
jnp
adc
lea
jb
ret
insl
ljmp
mov
sub
lock
cmc
rclb
mov
pushf
adc
pushf
mov
adc
lds
cwtl
dec
aaa
fadd
loopne
mov
sbb
test
insb
adc
sbb
movsl
test
mov
mov
fiadds
sbb
imul
mov
lret
pop
imul
popf
xchg
rorl
fisubrs
mov
imul
hlt
sub
mov
mov
mov
mov
cmp
xor
xlat
pop
jno
loop
xchg
bound
jg
dec
enter
xchg
mov
popa
subl
ret
iret
cmpsb
mov
pop
mov
or
inc
mov
lods
dec
cmp
ret
repz
fstps
das
ljmp
in
inc
push
mov
adc
nop
cwtl
jbe
sub
push
sbb
mov
push
js
xchg
das
subl
imul
push
ret
mov
inc
jmp
add
popf
test
stc
loopne
adc
movb
fnstenv
jns
js
call
cmp
push
pop
cmp
sbb
and
mov
pop
ljmp
shrb
add
or
sti
jae
aas
mov
fs
or
rorb
jge
ficoms
fs
pop
mov
imulb
imul
jl
lcall
push
cmp
fucomi
ljmp
sub
inc
out
jp
push
ss
mov
inc
nop
test
std
ss
add
pop
pushl
cmp
xlat
and
and
data16
mov
je
lods
and
pop
jl
arpl
adc
inc
in
aam
xchg
ljmp
jno
mov
dec
mov
lods
cmp
inc
nop
dec
fiaddl
enter
push
mov
jno
popa
loopne
lcall
aam
sarl
icebp
mov
jb
dec
stos
push
add
idivl
adcl
scas
js
mov
test
in
pop
imul
xchg
pop
pop
mov
mov
jl
ror
cli
xor
int
dec
cmp
jae
test
sub
mov
fld1
xchg
lahf
cwtl
je
cmp
aam
mov
or
xor
pop
cli
adc
add
fs
inc
jno
mov
xchg
cmp
ss
std
cmpb
inc
pop
sub
jnp
fs
sbb
mov
fwait
in
hlt
push
test
lock
fsubrs
cmp
jl
data16
cli
add
cmc
mov
frstor
sub
cld
shl
int3
and
test
out
mov
add
stos
imul
dec
adcl
imul
adc
jg
mov
lock
xor
ss
popf
lret
push
or
and
inc
mov
jg
cltd
jno
sub
mov
adcb
pop
outsb
aaa
sbb
loop
iret
gs
ret
jne
jmp
sub
xchg
imul
cmpsl
mov
jns
mov
inc
or
jmp
sub
sbb
mov
pushf
pop
fidivrl
aam
imul
dec
xor
jl
and
cwtl
sub
push
daa
inc
popf
fcompp
iret
ds
jb
inc
outsl
hlt
sub
iret
add
mov
sahf
sbb
mov
adc
movsl
cmp
lcall
and
mov
cli
xchg
int3
stos
and
int
scas
ljmp
pop
pusha
or
pop
arpl
in
sub
int
test
lds
xlat
jne
and
pop
out
stos
add
lock
fistpll
aaa
push
fcomp
pop
fs
push
sahf
and
dec
xchg
mov
fwait
notb
mov
and
sahf
test
jmp
inc
es
shlb
sti
bound
xor
xchg
out
sbb
xor
stos
arpl
popl
mov
push
dec
sbb
or
daa
push
xchg
gs
out
das
or
lock
mov
and
add
fs
cmp
pop
inc
in
push
push
daa
and
sub
lods
mov
pop
outsb
lea
pop
cmp
xchg
lods
insb
int3
lock
aaa
inc
pop
pop
xchg
adc
je
aaa
push
jg
push
mov
mov
mov
movsb
in
adc
test
pop
nop
jb
orl
je
pop
mov
cltd
nop
dec
mov
sbb
int3
rol
inc
xchg
xor
sarb
out
fs
lret
movsb
push
pop
push
adc
outsl
int3
mov
xchg
xchg
rolb
test
test
insl
sbb
mov
fldl2t
dec
filds
lret
cmpsl
mov
inc
ss
aam
jno
outsb
sub
xchg
aad
lcall
cltd
mov
inc
pmuludq
aam
paddq
add
add
cmp
xchg
mov
or
dec
aad
adc
xchg
xor
fistl
in
jg
mov
jae
xor
sbb
dec
aam
out
mov
movsl
scas
jg
add
adc
and
inc
loop
inc
cmc
or
mov
aam
das
cld
sahf
orb
addr16
xchg
sub
mov
xor
out
ret
mov
jge
sahf
bound
cmp
jmp
sti
jge
inc
fsubrp
sub
jecxz
pop
inc
xchg
sub
repz
sbb
jb
loop
call
imul
xor
xchg
sbb
mov
lods
dec
or
xlat
mov
rcll
dec
pop
push
mov
xchg
jae
xchg
arpl
rcl
nop
dec
or
cs
adc
popa
or
sbb
adc
ret
pushf
jmp
and
xchg
cld
jmp
cmp
jnp
sbb
sbb
enter
jbe
das
pop
mov
jl
pop
out
jns
sbb
or
sbb
int3
int
in
adc
test
test
nop
pop
fimull
es
fimuls
cmp
mov
movsl
push
xor
mov
sub
mov
cmpsb
mov
jae
mov
insl
pop
mov
mov
sar
outsb
ror
fldenv
loop
or
int3
adc
xlat
adc
aaa
sbb
stos
lret
xor
and
mov
test
nop
jne
jmp
outsb
aaa
loop
pop
enter
subl
mov
pop
push
movsb
adc
int
out
mov
es
or
mov
sahf
les
push
loopne
dec
outsl
and
adc
dec
dec
adc
add
and
shrl
push
scas
or
lret
fiaddl
cmp
rorl
and
mov
cli
arpl
jg
stos
lahf
lods
xchg
cmp
cmc
jno
mov
inc
xor
or
add
mov
cmpsb
push
movsl
sbb
and
push
mov
imul
sub
cld
cld
pop
ret
clc
push
jmp
int3
fidivrl
lock
jg
xchg
add
cmp
mov
cmp
ret
and
dec
mov
sub
in
xchg
cmpsl
mov
aam
push
jo
das
mov
mov
imul
test
into
mov
inc
adc
mov
imul
aam
cltd
push
add
bound
int3
outsl
jle
cs
fdecstp
lods
fadds
shl
inc
pop
add
inc
mov
jmp
xor
sbb
sub
daa
lods
ja
dec
sarb
sbb
xorb
jecxz
push
inc
sbbl
cmpsb
xchg
std
jle
stos
mov
jle
aaa
ljmp
mov
push
leave
sub
inc
cmp
inc
pop
out
jae
sbb
pop
mov
jno
dec
inc
inc
jb
js
mov
sti
notl
insb
imulb
jo
push
mov
sahf
icebp
xchg
mov
ror
into
jbe
xchg
imul
jns
into
jne
dec
ret
push
shl
add
inc
push
out
mov
xor
imul
xchg
inc
bound
inc
jo
mov
outsb
rolb
cmp
jno
jno
in
call
or
out
test
call
lahf
in
jne
jno
movsl
pop
sub
jns
inc
adc
mov
jmp
lret
inc
dec
or
or
mov
call
xor
movsb
or
inc
mull
adc
push
pop
mov
or
das
jecxz
fcoml
imul
repz
push
ret
or
pop
lea
jno
icebp
jg
lods
sub
aam
cmp
mov
fidivrs
loope
orb
lahf
lock
loop
inc
add
cmp
mov
dec
cmp
insb
and
dec
fwait
daa
pop
popa
loopne
loopne
sbb
test
xor
mov
jno
fmuls
mov
sub
mov
mov
xchg
insb
insl
mov
int3
hlt
or
fcoml
mov
ljmp
mov
call
dec
jnp
leave
or
jmp
inc
test
pop
xchg
dec
lock
loope
insl
adc
ds
std
dec
stos
jecxz
mov
inc
faddp
or
lds
jno
sahf
mov
mov
pop
xchg
add
popa
fistl
mov
sbb
sbb
and
fdivl
aas
sbb
dec
cmp
dec
push
xor
lahf
and
xchg
push
fwait
mov
outsl
lds
xor
push
imul
sub
aad
shll
adc
movb
mov
dec
inc
or
inc
inc
lock
fbld
inc
adc
adc
test
cmc
or
pop
fdivrs
mov
lret
inc
daa
sub
addl
inc
dec
fbld
scas
call
jle
push
js
mov
mov
adc
sbb
loope
push
aaa
mov
lods
cmpl
xlat
sub
mov
sub
pop
sbb
dec
rol
roll
sahf
aad
cld
adc
pop
mov
and
cmp
and
xor
pop
das
jo
or
push
mov
shll
ljmp
push
dec
stc
pop
lret
cmpsb
inc
or
dec
sbb
xchg
js
jno
cli
add
shlb
imul
mov
stos
cmp
and
cld
push
lods
mov
sub
das
cld
rorl
pop
sarb
scas
inc
inc
push
sub
cmpsl
clc
mov
and
push
sbbb
and
jle
and
cmp
lret
cmp
push
les
and
ficompl
and
sbbb
clc
aad
lds
arpl
jle
gs
int
cmpsb
dec
adc
dec
and
shrl
popf
mov
jecxz
mov
or
shl
push
mov
jp
fmuls
jb
push
pusha
add
scas
cli
mov
andb
xor
pop
mov
test
pop
jbe
aad
lcall
cmp
mov
pusha
cmp
sbb
pop
sbb
sti
stc
ficoms
and
roll
incb
mov
jno
orl
dec
pop
data16
daa
or
sbb
lods
mov
xlat
xchg
dec
lods
lahf
xchg
jno
mov
lea
jns
rcr
push
lret
xorb
dec
sti
push
stos
and
pop
cltd
stos
or
jbe
pop
jecxz
xchg
stc
outsb
xchg
pop
adc
inc
xchg
daa
jmp
cmc
xchg
out
add
mov
sbb
mov
jno
scas
inc
sti
in
and
xor
outsl
inc
cmc
int
sbb
sarl
cli
push
repz
inc
dec
testl
aaa
jnp
call
and
out
pop
xchg
dec
inc
call
pusha
jl
pusha
mov
loop
movsl
xchg
inc
ds
or
mov
scas
inc
xchg
into
aam
xor
data16
sbb
cmpsb
mov
fcmove
call
scas
idivl
adc
shrb
dec
outsl
pop
lret
ljmp
jg
mov
jae
add
dec
xchg
sub
mov
sti
add
pop
cmp
cmp
mov
jl
sub
rorb
enter
jae
and
data16
into
popa
sbb
testb
call
push
pop
cwtl
jae
xchg
je
addb
xor
add
cmpsb
add
pop
xchg
les
mov
mov
imul
push
pusha
stc
jp
cwtl
and
repz
and
stos
enter
gs
mov
sbb
mov
fwait
push
scas
xchg
daa
jno
xchg
popa
insl
nop
clc
mov
sub
nop
cs
shr
cwtl
sub
xor
xor
push
sub
adc
pop
insb
inc
idivb
stc
sbb
adc
fisttpll
lock
lods
sahf
add
push
aaa
incb
in
ficompl
add
and
pop
jecxz
ror
add
es
loope
xchg
idiv
in
jno
iret
adc
pop
mov
scas
pop
in
jns
xor
arpl
jns
cmp
mov
sbb
sbbb
mov
xor
in
fs
sub
stos
pop
pop
sbb
cmp
icebp
pop
cmp
data16
and
mov
or
xor
jno
sarl
int3
cld
cltd
jecxz
out
mov
xchg
xchg
push
lcall
mov
cwtl
mov
lea
out
rorl
pushf
or
jmp
cmp
addr16
imul
add
push
cmp
shrl
xchg
in
rclb
call
push
iret
or
or
scas
repnz
xchg
mov
mov
lret
jle
xlat
lret
roll
push
push
jns
fiadds
cmp
xlat
in
addr16
fisubl
fsub
outsb
xchg
mov
into
ficoml
aaa
sub
int3
cmpsb
notl
add
mov
mov
or
and
cmp
push
into
push
dec
aad
iret
fcomps
xor
jecxz
mov
add
xchg
mov
popf
mov
nop
test
lock
fcmovnb
icebp
cmp
sarb
cmpsl
ret
dec
repnz
hlt
sbbb
lahf
pop
xchg
hlt
loop
inc
inc
stos
in
or
pop
cmc
mov
out
sub
testl
movsb
shll
push
adc
mov
in
loop
push
enter
adc
mov
daa
jle
jbe
ljmp
inc
pop
aaa
dec
add
jl
inc
adc
imull
cld
mov
xor
adc
inc
push
push
dec
subb
fnstcw
addr16
or
gs
in
mov
lods
fadds
push
dec
ss
add
iret
inc
mov
cmp
inc
cld
cmp
dec
inc
xor
inc
push
sub
popf
jne
push
pop
mov
sub
inc
pop
push
add
xchg
inc
push
rcrl
jg
ljmp
out
mov
xchg
xchg
mov
mov
insl
or
add
dec
fsubrs
jb
mov
or
jbe
pop
ljmp
test
sub
xchg
testl
mov
xchg
insl
icebp
out
dec
or
sbb
mov
or
cltd
repnz
lcall
mov
xor
xchg
mov
adcl
inc
mov
mov
popf
aas
inc
cmp
mov
push
ja
sub
popf
in
xchg
shlb
mov
xchg
stos
subb
push
cmp
aad
push
scas
rolb
jp
out
and
mov
pop
outsl
push
callw
push
or
jle
outsb
rcr
dec
lods
test
cld
mov
jae
scas
jns
sti
dec
aam
addr16
xchg
movsb
movl
jae
leave
pop
cmc
mov
mov
movsl
add
sub
pop
sub
jl
jnp
repnz
sbb
mov
jge
mov
jge
jb
rclb
leave
jnp
lcall
data16
jno
ss
out
test
in
scas
jb
mull
dec
dec
and
inc
dec
mov
cmp
xchg
fistpll
xlat
mov
jmp
dec
xchg
pop
dec
out
ret
arpl
nop
ja
xchg
dec
mov
sub
pop
mov
icebp
shll
mov
dec
push
stos
xor
fisubs
or
adc
cmp
push
inc
mov
cwtl
scas
or
jmp
sub
fisubs
and
aam
pop
add
push
jmp
push
rcrb
test
jno
jae
mov
fmuls
mov
fcomps
and
mov
addr16
movsl
mov
push
fisubl
cmp
sub
test
push
pop
push
jnp
dec
and
ja
nop
pop
jne
or
nop
xor
lock
push
fdivrp
in
lea
and
jne
dec
nop
and
sub
rcl
test
push
loop
sbb
pop
jle
sbb
push
nop
pop
xor
and
mov
mov
leave
mov
sub
dec
imul
sub
or
adc
loop
push
call
mov
lds
data16
mov
ljmp
inc
mov
sub
jno
pop
add
fnstsw
rcrb
mov
out
jp
jne
sbb
in
jbe
fldl
lret
test
ret
sbb
inc
andl
call
mov
jmp
js
call
into
inc
movsl
and
repnz
jge
push
imul
pushf
xchg
in
stos
imul
sub
bound
out
outsl
pop
xlat
push
lret
mov
insb
push
xchg
xchg
pop
repnz
xorb
int
push
movsl
push
das
xor
fwait
pop
mov
add
data16
cmpl
mov
sub
push
mov
in
into
aam
filds
mov
popa
xlat
test
aas
pusha
cmp
repnz
in
cld
outsb
dec
in
inc
out
mov
pop
push
rcrl
xchg
xor
dec
mulb
pop
mov
add
mov
or
jno
sahf
pinsrw
inc
outsl
in
loop
lods
lret
and
out
and
push
dec
mov
add
stos
cld
xchg
cmp
xlat
jo
sbb
out
push
push
adc
mov
add
mov
ror
imul
cltd
out
fldcw
mov
int
test
xlat
popa
movsl
dec
mov
jnp
std
dec
ja
mov
and
cmp
roll
dec
stos
jl
pop
call
mov
push
dec
sbb
inc
sar
aas
aaa
push
cmp
cmp
ds
sbb
scas
ret
push
fs
int
push
jbe
mov
rcl
mov
xor
jae
int
cs
popf
ds
js
mov
push
out
adc
out
pushf
scas
add
mov
test
negb
push
inc
xor
push
sub
imulb
adc
in
nop
fildll
lea
mov
es
and
push
clc
pop
add
xchg
jne
shrl
ljmp
ja
and
cwtl
enter
gs
and
nop
aad
orl
popl
xchg
in
outsl
add
sbb
js
pop
mov
jg
xlat
fnstsw
sbb
lret
lds
sub
in
adc
jge
outsb
cmp
mov
aad
lods
call
andb
inc
pop
sbb
sahf
cmp
out
enter
mov
sbb
push
sub
cmpb
ret
cmp
inc
xchg
cmp
or
int3
fs
popa
hlt
xor
dec
jle
fwait
jge
xchg
ljmp
cmp
testl
std
outsl
scas
arpl
pop
cli
fwait
sub
aaa
mov
mov
adc
pop
pop
in
jmp
ljmp
sub
xchg
xor
mov
cs
mov
or
push
fcomip
mov
pop
cwtl
xor
popa
pop
in
cmp
imul
leave
add
shll
push
jle
repnz
data16
mov
hlt
cmp
cmp
mov
xchg
popf
out
mov
jle
add
or
test
push
sbb
gs
outsl
mov
data16
add
fcomip
lret
cmp
add
push
gs
mov
inc
mov
mov
in
dec
jae
enter
add
imul
push
repz
xor
lock
dec
pop
movb
mov
imul
insl
add
js
cmp
pop
and
cmpsl
rorl
mov
imul
sbb
mov
jb
lret
push
jo
sbb
icebp
push
xor
xchg
sbb
sbb
lea
cmc
xlat
inc
xlat
push
mov
test
dec
or
pop
outsb
stos
mov
push
xchg
rcrl
or
call
stc
inc
stos
movsl
cmp
inc
inc
scas
xchg
and
and
xlat
loop
aam
lods
push
ret
stos
mov
mulb
sbb
hlt
add
inc
xor
lret
sbb
std
lock
sub
dec
lcall
out
jo
roll
and
js
ljmp
lahf
dec
clc
mov
mov
xchg
outsl
pop
rclb
mov
mov
sub
ss
mov
mov
inc
repnz
aad
daa
mov
bound
mov
test
pop
jecxz
adc
pop
and
mov
imul
jmp
adc
dec
fstp
adc
scas
adc
mov
inc
inc
cmp
sarl
inc
add
fisttps
inc
call
jl
pop
mov
lcall
push
cmpsl
dec
pop
aam
dec
cmpsl
scas
mov
or
lds
mov
or
adc
test
je
pop
out
xor
dec
lret
cmp
mov
sti
adc
mov
add
jmp
in
repz
int
xchg
bnd
sub
or
sarb
push
sti
lock
or
int3
xor
imul
mov
int
mov
arpl
in
mov
gs
mov
adc
jecxz
bound
inc
pushf
mov
adc
repnz
shlb
fwait
outsb
jg
int3
mov
loop
jmp
add
ret
lcall
dec
cld
outsl
arpl
sbb
cmp
je
inc
mov
mov
cs
pop
inc
sbb
adc
pushf
test
push
mov
sarl
xchg
icebp
repnz
loopne
or
ss
das
cwtl
and
daa
test
mov
cmp
push
cltd
scas
push
bound
out
jnp
ret
test
and
jbe
sub
fwait
jae
push
or
sbb
push
test
jno
fwait
pushfw
dec
adc
bound
mov
dec
mov
dec
mov
adc
adc
fildl
js
out
jo
mov
in
scas
ja
mov
aaa
mov
loopne
xchg
mov
push
aad
add
and
and
ja
stc
xor
jno
push
stc
jg
jp
scas
jecxz
mov
dec
popa
or
mov
dec
xor
ljmp
fadds
add
xchg
mov
data16
hlt
pop
ss
xchg
sbb
cmpsl
aaa
lds
xchg
inc
adcl
sbbb
movsl
test
ret
cli
add
and
hlt
mov
xchg
and
or
sbb
xchg
mov
mov
pusha
jb
aam
and
int3
dec
xor
leave
push
fldcw
sahf
out
test
push
jno
dec
push
cli
bound
jge
add
push
scas
cmp
out
xor
ljmp
xchg
movsb
js
xchg
sbb
cmp
sbb
rcl
push
mov
negl
mov
sbb
pushf
xchg
jae
in
in
sub
imul
repz
int
sar
aad
cmp
or
adc
jp
sbb
push
pop
push
push
cmp
or
jne
pop
xchg
mov
cwtl
push
stos
jecxz
fs
cltd
imul
pusha
inc
sbb
je
or
xor
jmp
imul
push
aaa
outsl
inc
pop
adc
int3
lea
ja
mov
mov
xlat
lds
in
shll
outsb
jp
popf
add
repz
mov
les
pop
aad
cltd
ljmp
or
push
xchg
and
int
in
mov
arpl
xchg
stc
shr
push
pop
mov
pop
lock
pop
ljmp
cmp
xchg
roll
xchg
stc
xchg
mov
data16
mov
add
jo
movsb
mov
sahf
dec
loopne
popf
or
pop
mov
push
fchs
jecxz
inc
push
xchg
dec
mov
loopne
iret
popa
mov
push
cmp
mov
xor
nop
ret
and
pop
jmp
cli
scas
adc
out
dec
push
mov
repz
test
pop
inc
push
mov
mov
fistpl
cld
sbb
movsb
lcall
mov
jle
int3
test
pop
jo
scas
xchg
or
hlt
mov
bound
fs
push
fsubrs
or
out
push
enter
test
mov
inc
mov
push
adc
xchg
nop
inc
fisubrs
push
jge
insl
gs
fildl
mov
push
jg
cmp
loopne
add
mov
lds
mov
mov
jge
nop
mov
rcrb
subb
decb
add
mov
insb
mov
out
or
outsl
or
mov
out
add
dec
scas
daa
into
cld
out
and
popa
mov
pop
repz
xchg
jmp
sub
mov
ljmp
jecxz
inc
jge
and
jmp
push
jp
inc
pop
inc
pop
incb
popa
dec
lods
lahf
je,pt
fwait
adc
in
jp
sub
mov
repnz
dec
mov
push
pushf
lods
inc
sub
cmp
pop
mov
cli
lret
inc
add
mov
adc
cwtl
mov
pop
ss
mov
lcall
add
add
pop
xlat
jae
mov
dec
std
movsl
cs
dec
mov
fbld
jbe
mov
imul
ret
scas
hlt
mov
xor
xor
data16
aaa
test
xor
fimuls
mov
cli
mov
in
loopne
sbb
fldcw
and
les
test
sbb
call
cmpsb
pop
cli
jo
xor
push
ss
mov
lcall
insl
loop
call
loop
clc
jno
and
jae
fwait
add
inc
inc
mov
out
gs
int3
xor
mov
mov
dec
cmp
jle
push
mov
push
xchg
pop
dec
cmp
test
sar
xor
out
shll
cmp
adc
mov
sbb
cmpsl
jnp
mov
repz
test
add
inc
sbb
fldcw
lock
mov
in
jecxz
mov
pop
ret
in
stos
test
xchg
mov
cltd
ja
xchg
ret
sub
sbb
push
xchg
mov
bound
adcb
fstpt
cmpsb
nop
aad
jmp
xlat
adc
in
pop
aam
test
pop
mov
ja
jg
jg
repz
mov
int
and
out
xchg
aas
mov
jl
pop
or
push
push
or
icebp
jp
movsl
cbtw
icebp
int3
int3
dec
and
xchg
in
lret
mov
pop
ret
scas
mov
push
out
dec
adc
dec
or
adc
decl
jl
sahf
inc
pop
cmp
mov
aad
mov
aaa
fwait
pop
lock
push
frstor
not
lret
push
sbb
inc
bound
and
lret
xchg
daa
jbe
ljmp
div
rolb
xchg
add
dec
scas
stos
movsl
ret
push
and
adc
sbbb
inc
xchg
daa
lods
test
jae
mov
test
inc
inc
stc
loop
fidivrl
shlb
lock
aaa
rclb
and
adc
iret
aam
push
cmc
sbb
push
cld
je
jbe
mov
clc
xor
xchg
sub
cmp
pop
adc
mov
dec
mov
popf
into
sbb
sbb
test
or
and
or
movl
and
mov
jecxz
mov
gs
add
mov
cmp
push
xor
ljmpw
or
push
xor
pop
movsb
jp
sub
fiaddl
jns
xchg
shl
js
ja
jo
or
fmuls
add
push
push
mov
xor
inc
es
mov
lock
adc
mov
pop
jg
std
out
out
inc
int
pop
mov
dec
stos
scas
mov
xchg
popf
push
in
or
push
xor
cld
or
mov
aam
sarb
outsb
test
adc
xchg
ret
in
xchg
test
loop
sub
pusha
mov
scas
and
push
fimuls
jns
cs
aam
pop
jo
or
arpl
sbb
mov
push
sbb
js
int
movsb
mov
xor
xchg
pusha
dec
notb
pop
pop
outsb
cmp
sub
and
xor
aas
and
xchg
xchg
lret
fisubs
xchg
xchg
mov
scas
divl
dec
inc
call
cli
inc
std
jge
dec
add
es
imul
dec
aaa
adc
cmp
add
push
aam
cwtl
leave
mov
jb
inc
cmp
aaa
or
mov
data16
out
daa
cs
push
test
popa
push
jb
les
aas
outsb
mov
jae
pop
mov
and
adc
mov
popa
gs
mov
aas
dec
fidivrl
sbb
testb
pop
ficompl
fisubl
out
fdivs
lret
aaa
rcl
mov
add
pop
or
into
push
inc
clc
jb
cmp
fdivrs
and
lcall
pop
iret
xor
fidivrl
test
movsb
out
mov
xor
dec
pop
pop
adc
jmp
rolb
ror
shll
mov
sbb
sti
cmpsl
sbb
push
xlat
gs
loop
cmpb
pop
push
or
inc
xchg
insl
dec
in
in
inc
and
int
test
out
test
outsl
sbb
lods
ret
movsb
mov
rolb
mov
inc
out
inc
pop
push
push
cmc
hlt
sbb
xchg
mov
mov
insb
sarl
rclb
bound
lea
ret
xlat
adc
out
pusha
push
inc
jns
test
jecxz
or
sbb
sub
mov
movsb
jne
scas
pop
out
jae
inc
dec
imul
mov
add
push
mov
loop
cmp
push
cmpl
outsl
test
dec
ds
les
pop
aas
into
pop
add
repnz
es
cli
cmp
orb
or
dec
sub
jge
ds
push
into
mov
imul
cmp
je
cmp
ja
pop
or
es
out
nop
add
fisttpl
fwait
mov
or
ljmp
and
into
add
mov
sbb
xor
dec
in
imul
stos
push
or
ss
pop
jmp
inc
nop
and
push
dec
ds
jae
sbb
and
shrb
shll
cmp
lods
insb
mov
mov
hlt
sub
lea
sbbl
sbb
jns
test
sahf
cmpsb
jbe
out
xchg
insb
lret
lret
shlb
xor
fwait
mov
push
pop
rcrl
pop
add
imul
or
cmp
dec
sahf
cmp
cmp
enter
fldt
or
loope
das
fdivr
mov
daa
leave
sub
or
icebp
fcoms
sbbb
jecxz
call
lcall
lahf
or
inc
fprem1
popf
push
shll
push
inc
sub
repnz
std
shll
jb
lock
sub
mov
stc
cmpb
repz
pop
les
iret
fadd
pop
sub
fldt
inc
int
stos
lea
xor
aad
test
fwait
or
lcall
testb
mov
sub
or
xor
ss
mov
stos
outsl
push
jecxz
mov
int
cmp
xor
xor
mov
fldl
les
rcll
js
in
mov
cwtl
xor
rcll
mov
dec
test
mov
rcrl
ret
push
push
xchg
adc
lods
xor
popf
mov
sub
inc
mov
add
lock
std
push
xchg
pop
sbb
add
cmp
mov
fwait
lahf
inc
cmp
add
cmp
xchg
add
movsb
and
mov
sub
orb
mov
not
out
jae
idivb
jle
push
jmp
add
cmpsl
lods
mov
mov
ss
out
push
pushf
sub
insl
aaa
pop
or
push
mov
std
ret
sahf
xor
ficomps
adcl
daa
icebp
pop
xor
gs
rcr
xor
push
sub
ror
jb
fldcw
mov
das
sub
sbb
data16
push
lea
xor
pop
test
shr
ljmp
and
and
cltd
cmpsl
enter
jne
sbb
xchg
jg
cmpsl
jmp
mov
sub
mov
jno
nop
sub
cltd
push
call
and
xor
ljmp
jns
pop
lret
xchg
mov
stc
xchg
out
inc
xchg
mov
and
sub
mov
int
shlb
pop
adc
xorb
jmp
outsl
test
lock
mov
add
xchg
push
lret
pop
shll
lods
push
ljmp
ret
xchg
lods
inc
adc
sbb
push
pop
int3
lods
int3
pop
pop
mov
xchg
aam
lds
jl
push
sbb
mov
outsb
xorb
std
push
in
xchg
lds
jg
push
sub
push
mov
fildl
dec
jnp
add
in
les
imul
push
js
popa
aad
outsl
xchg
stc
mov
xchg
pop
inc
int3
lret
fcomi
idivl
ss
jge
xchg
sbb
xchg
shrl
and
sub
add
and
and
and
addr16
or
jne
fnop
mov
pop
cmp
xchg
in
push
mov
in
sbb
inc
imul
ret
jnp
std
fwait
adc
dec
insb
aaa
test
jo
arpl
mov
and
jle
mov
xor
hlt
mov
icebp
enter
cmp
cmp
loope
jb
inc
push
xchg
in
in
add
inc
dec
in
pop
mov
sbb
xchg
dec
jns
xor
pop
test
sub
rolb
andl
pop
mov
fmuls
aaa
lock
repnz
loopne
imul
aaa
jnp
sbb
add
pop
ljmp
add
ljmp
jp
adc
and
xchg
js
lcall
xchg
cltd
jp
js
mov
imul
jmp
sub
mov
outsl
pop
cmpsl
rclb
add
andl
fnclex
sub
hlt
mov
jle
push
test
scas
adc
ljmp
popa
push
nop
aaa
push
mov
cmpsl
into
or
lock
xor
mov
test
test
dec
scas
and
in
jp
out
leave
cmp
fwait
pop
push
xchg
loop
ja
loop
lcall
ja
sbb
inc
jmp
push
sub
xor
sbb
xlat
lods
add
je
jl
push
out
imul
stc
pop
imul
cld
gs
out
and
mov
pop
mov
and
jb
push
sbb
insb
ja
cltd
aad
in
pop
or
dec
andl
rclb
add
pop
insl
pop
sbb
mov
sbb
pop
cld
xorb
xchg
xchg
or
in
scas
fcompl
jmp
mov
inc
in
add
in
rolb
jp
incb
adc
cltd
cmpsb
enter
out
lock
xor
enter
addl
and
add
and
ret
femms
xorl
sub
push
lahf
cld
stos
test
cmp
pop
adc
mov
sahf
inc
push
int3
mov
xchg
push
and
xchg
push
pop
pop
pushl
mov
pop
xchg
mov
xchg
mov
mov
or
ds
adc
xlat
sub
xchg
jle
pusha
jns
cmp
mov
test
stos
in
cmp
mov
or
push
inc
insl
mov
loopne
adc
sbb
dec
repz
cli
cld
imul
aas
sahf
fistps
sbb
fstl
lock
mov
ret
shlb
push
pop
in
mov
push
iret
jle
jb
jne
mov
hlt
ss
cs
inc
mov
hlt
test
loope
and
fstpt
xor
jp
rorl
loop
daa
test
sub
mov
inc
sbb
sbb
pop
das
sti
in
push
sub
push
ss
out
fisubrl
stos
jmp
dec
mov
hlt
adc
and
mov
pop
sub
sub
test
jle
loopne
adc
add
stos
enter
mov
popf
mov
pop
or
iret
idivb
add
xchg
enter
jo
in
in
int3
insb
and
xor
adc
or
pop
and
dec
push
xchg
mov
xchg
stos
test
nop
jmp
cmp
fnstenv
int3
rcll
and
inc
notb
xchg
roll
pop
dec
int3
pop
mov
not
loope
jp
add
aam
pop
mov
add
pop
xor
inc
mov
pop
sbb
outsb
jno,pn
arpl
pop
dec
aaa
js
push
daa
fdivrs
cmp
cmp
pop
sub
push
loope
ds
subl
jg
add
cwtl
pop
mov
aad
sbb
or
ds
outsl
fsubrp
push
out
out
fsts
push
ljmp
lds
negb
push
xchg
js
jae
jl
pop
or
iret
fiaddl
mov
xor
mov
jp
mov
mov
lret
aam
mov
xchg
inc
cld
ljmp
inc
or
and
add
lret
rdmsr
xchg
xchg
dec
inc
xchg
push
sbb
pop
jbe
jo
cmp
in
daa
cmp
cmpsl
mov
jge
and
in
jne
es
and
sub
mov
pop
mov
dec
sub
fcompl
icebp
stos
and
push
xchg
mov
fcoml
or
cmpsl
in
fstl
push
jae
fldcw
mov
int
testb
cltd
in
out
mov
mov
mov
dec
adc
dec
push
mov
mov
adc
add
ja
xor
push
xor
pop
icebp
inc
std
push
xchg
pop
push
mov
stc
inc
and
xchg
das
fwait
sub
das
fnstsw
inc
jbe
push
cmp
in
adc
jnp
scas
imul
or
jne
popa
and
mov
xchg
lea
out
xchg
fnstenv
xchg
dec
je,pn
test
mov
add
sbb
or
test
mov
mov
aas
js
pop
and
mov
outsl
push
push
pushf
push
in
xor
mov
sub
push
mov
test
add
cmc
mov
push
fldl
test
push
pop
divl
inc
adc
mov
push
rcll
xchg
cmp
cwtl
fstpl
orb
add
stos
xlat
pusha
test
push
dec
in
mov
xor
mov
mov
or
imul
xchg
push
dec
stc
aad
mov
rcrl
pop
adc
sub
dec
dec
fucomi
in
mov
push
xor
cs
insl
test
mov
in
add
cli
in
mov
or
repz
sbb
fwait
jl
jo
aam
repnz
pop
fwait
shll
jmp
lock
and
stos
xchg
imul
scas
in
call
pop
jecxz
xor
movsl
aad
sbb
cs
sbb
jne
fistl
fucomi
xlat
cmp
repz
lods
clc
pushf
int3
pop
sub
or
lret
xchg
test
in
popf
imul
add
std
rcll
mov
scas
fstpl
les
outsl
test
icebp
mov
sub
leave
cmpsb
and
cmc
loop
dec
pop
imul
das
insl
cmp
mov
in
shl
je
aas
sub
dec
mov
stos
movsl
mov
add
scas
xor
jle
cltd
jns
adc
inc
neg
or
and
fdivl
cltd
sbb
push
push
cmp
movsb
setnp
mov
lret
fistl
xorb
jmp
out
pop
dec
fwait
movsl
sarb
jecxz
les
sbb
cmp
out
push
cwtl
out
sti
sti
gs
nop
repz
stos
out
cs
adcl
scas
dec
inc
adc
arpl
inc
popa
stos
jno
out
or
stc
fnstcw
sub
addl
mov
push
cld
fcompl
movsb
outsl
xchg
lea
ja
and
push
lret
cld
add
cmp
cli
sbb
mov
dec
inc
inc
xchg
mov
repz
imul
in
jg
sbb
cmp
orb
jmp
out
ja
mov
mov
repnz
fiadds
enter
mov
jecxz
jae
test
add
cltd
and
cwtl
testb
and
or
ljmp
mov
sub
pop
test
jmp
push
popf
xor
and
insl
test
mov
rcl
addb
and
lock
push
fildll
or
adc
lahf
jb
inc
mov
xchg
sub
pop
daa
sti
fcmovbe
push
das
aas
pop
mov
int
jo
dec
loop
jecxz
stos
push
test
mov
cli
mov
jns
or
sti
pop
outsb
int
lret
jg
jl
adcl
hlt
cmp
xchg
sbb
clc
sbbb
push
sub
lods
stc
adc
xchg
fimuls
jb
dec
mov
sub
fistpl
xor
inc
sub
push
hlt
repz
sub
imul
xor
int
loope
jbe
aad
mov
pop
cmp
iret
mov
das
dec
repnz
movb
fmul
and
jnp
psubd
js
inc
sbb
mov
push
cmp
popl
jnp
sbb
pop
xchg
adc
insb
pop
popa
shrb
in
rolb
data16
and
stc
jae
movsb
pop
pop
sub
dec
push
mov
sbb
pop
inc
in
mov
cmp
out
scas
mov
data16
sbb
test
push
adc
out
xchg
outsl
lcall
sub
clc
clc
jge
addr16
and
int3
js
xchg
sbb
xchg
pop
ret
mov
das
fdivr
dec
clc
add
xlat
mov
push
sub
pop
push
ss
insb
sti
mov
lea
xor
add
shl
pushf
mov
and
divb
mov
in
lahf
std
push
js
mov
xchg
xor
cmp
xchg
movlps
sub
sbb
mov
arpl
mov
call
dec
arpl
fmul
jo
popf
icebp
mov
dec
daa
mov
mov
out
xchg
or
sub
sahf
jp
dec
outsl
gs
pop
and
adc
hlt
xor
mov
mov
or
popf
sarb
ret
addl
add
or
pop
enter
dec
in
sub
loope
or
inc
je
xor
jle
jbe
mov
mov
push
hlt
or
dec
sub
jno
movsl
jnp
mov
cmp
adc
inc
dec
das
cmp
or
ljmp
dec
adc
loope
dec
dec
push
sub
enter
mov
insl
pop
sar
cltd
or
pop
push
dec
adcl
cmp
adc
outsb
rolb
addr16
mov
out
inc
sub
dec
jne
out
cmp
iret
push
adc
adc
sbb
lret
les
or
outsb
mov
enter
bnd
aam
ja
jae
daa
shlb
aad
outsl
mov
pop
xor
stos
movsl
loope
sub
mov
mov
sub
jg
mov
push
or
out
insb
outsl
dec
cmp
dec
add
inc
mov
dec
or
dec
rorb
sub
inc
adc
pop
shl
mov
mov
aas
addb
flds
xchg
push
sub
lret
jne
daa
callw
pop
add
push
dec
mulb
out
mov
in
shrl
jmp
dec
xchg
sahf
push
xlat
shlb
aad
mov
pop
hlt
adc
lea
in
mov
loop
push
jmp
and
dec
add
faddl
lret
pop
sbb
jno
insb
clc
fcom
stc
jnp
xor
push
fsts
pusha
or
push
ljmp
fs
mov
movsl
lock
jbe
jnp
arpl
cmp
xor
mov
add
jns
adc
sub
jp
incb
cltd
push
adc
stos
idivl
imul
dec
sarb
bound
push
push
jb
mov
or
add
daa
jg
cs
jle
mov
pop
jmp
push
add
inc
mov
loop
pop
xchg
xor
cwtl
or
mov
insl
xlat
add
jle
xor
pusha
dec
pushf
loopne
test
inc
arpl
jnp
dec
push
cmc
or
icebp
shrl
shll
in
cltd
sahf
cmpsb
loop
jns
push
addr16
test
pop
je
cmpsl
lea
cmp
int
outsb
push
add
sbb
add
pop
adc
ret
sbb
adc
scas
xorl
pop
pop
pop
je
in
cs
cwtl
mov
sub
imul
mov
imul
mov
xor
xchg
fmuls
dec
xor
lods
mov
sbb
mov
adc
inc
sbb
aad
repz
cmpsl
test
inc
pop
stc
pop
xor
or
mov
test
pop
mov
dec
add
push
ret
xchg
fdivs
xor
dec
jnp
shufps
outsl
scas
adc
lcall
in
subb
cmp
fildll
sbb
mov
std
push
xor
or
mov
cwtl
pusha
es
fadds
and
cmp
not
aam
mov
das
mov
lahf
adc
xor
jmp
std
shrb
sub
cmpsl
lahf
mov
push
adcb
jne
clc
js
inc
inc
rclb
inc
xor
lea
dec
jne
push
pop
jle
fdivrl
call
push
xchg
pop
push
cs
xchg
xchg
fcomps
cld
mov
dec
test
push
icebp
cwtl
insl
xchg
xor
in
test
test
mov
icebp
xchg
dec
loope
out
lods
push
icebp
push
xchg
es
add
sub
xor
cltd
cmc
and
add
pusha
pmaxsw
cmp
dec
jp
insl
roll
xor
jne
pop
lcall
inc
push
jns
mov
ja
cmp
adc
jmp
pop
inc
mov
clc
push
into
cmp
mov
inc
mov
mov
lds
clc
fimuls
mov
popa
in
out
add
rclb
push
sub
lret
dec
inc
inc
or
arpl
cmp
repz
inc
js
in
jnp
sbb
xchg
lods
imul
stc
xor
repnz
push
fbld
xor
lcall
adcl
xlat
jl
scas
cltd
sub
xor
dec
or
pushf
jmp
test
pop
daa
into
xchg
stc
into
out
xor
das
sub
loope
jne
xchg
and
imul
in
repz
jne
sar
jle
je
mov
andl
jb
in
clc
mov
xlat
mov
and
xor
movsb
fistl
push
popa
xor
hlt
loop
out
push
scas
addr16
imul
mov
push
xchg
push
int3
or
fcmovne
mov
xchg
cmp
pop
jge
popf
lret
lock
cs
mov
cld
adc
cmpsb
fdivl
push
movsl
or
ret
in
rorb
inc
jle
or
rcrb
fwait
dec
xchg
sbb
addl
in
dec
push
imul
mov
or
sub
ss
mov
mov
mov
add
jp
xchg
outsl
mov
mov
es
xor
test
push
lods
push
push
cwtl
arpl
insb
cld
dec
jns
test
cmp
ret
je
push
sbb
pop
sti
pop
pop
mov
fdivrl
push
negl
lock
hlt
dec
mov
daa
std
cmp
inc
xchg
dec
sbb
lret
hlt
mov
and
add
push
insl
cmp
js
xchg
jo
in
test
clc
jmp
pop
cltd
mov
inc
stos
fbstp
insl
mov
jp
es
leave
call
jmp
sbb
call
test
xor
je
xlat
mov
test
and
lock
lcall
add
test
aas
xchg
xor
pop
icebp
sahf
jne
loope
pop
sbb
inc
pop
lds
or
inc
jnp
and
push
repnz
std
push
pop
or
pop
movsb
mov
cli
mov
jne
mov
or
add
in
pop
mov
lret
daa
push
mov
or
in
addl
sarb
xchg
xchg
adc
sbb
mov
loope
das
outsb
xor
fnsave
filds
dec
jne
loopnew
mov
add
mov
out
into
mov
bound
jne
dec
orl
in
and
fwait
popa
loopne
js
xchg
leave
mov
add
sbb
jge
sub
inc
mov
sub
and
mov
cld
jnp
push
mov
pop
ret
adc
jecxz
ss
mov
add
fdivrl
pushf
dec
or
ret
sub
mov
ss
fcmove
adc
stos
inc
pusha
xchg
push
popf
out
jge
call
fdivrp
outsl
int
lock
pop
dec
mov
xchg
test
mov
inc
js
pop
xchg
xchg
push
jae
pop
lds
roll
sbb
es
ds
sub
pushf
outsl
fiadds
xchg
push
inc
ss
stos
mov
mov
data16
popa
aas
ret
adc
cmpsl
bound
jb
adc
dec
mov
xor
lea
into
add
sti
pop
jmp
lret
std
jbe
xchg
nop
pushf
hlt
xchg
in
push
push
and
xchg
and
or
ficomps
scas
into
sub
inc
mov
dec
scas
imul
js
mov
lods
jb
stc
jo
dec
leave
out
out
pop
xor
xchg
dec
test
jns
stos
push
push
jno
daa
xchg
aaa
sti
sub
xor
popa
dec
or
push
adcl
push
stos
mov
and
jecxz
lret
pushf
mov
out
loop
and
es
jmp
cmp
stc
jb
aad
nop
jnp
es
pop
cmp
xchg
cmp
ret
pop
mov
dec
cli
data16
mov
outsl
je
add
out
pop
inc
shr
and
push
xor
or
xor
shlb
aas
adc
je
jmp
pop
inc
mov
fs
add
jle
push
fisttpll
popf
jle
mov
ss
call
scas
fistps
push
iret
aam
fucomip
sub
jns
mov
bound
mov
addr16
mov
cmp
jmp
push
push
lods
add
push
sub
adc
or
add
mov
nop
rorb
fstl
pushf
push
mov
shrb
shlb
sub
daa
mov
pop
lds
lret
xchg
cmp
push
loopne
clc
fdiv
leave
daa
jns
das
out
pop
loop
fmulp
rolb
in
or
xor
rclb
lret
xor
jmp
dec
and
inc
or
lret
lds
mov
imul
aas
stos
nop
cmp
and
addb
jnp
shll
push
stos
xor
cwtl
fstpl
inc
fs
push
fsubs
js
aas
ret
add
pop
add
xlat
inc
dec
sub
cmp
scas
mov
sub
cmpsl
jb
and
cmp
add
nop
movsb
repz
test
mov
cmp
mov
jle
push
lea
pop
adc
mov
mov
fwait
xchg
inc
inc
pusha
subl
enter
mov
test
cmc
and
cmc
lret
test
xor
rorl
shl
testl
data16
pop
adc
loop
insb
mov
repnz
sub
mov
imul
rcr
cmpsb
mov
fstps
pop
cmpsb
jmp
mov
cmc
pop
push
mov
fisttpl
mov
jns
popa
mov
test
lcall
ja
ret
cmp
es
daa
ficoml
fadds
push
lahf
push
sub
popa
jmp
or
ss
mov
cmp
fisttps
inc
sub
mov
or
adc
leave
pop
sbb
jmp
out
into
inc
test
in
cmovb
add
cmp
arpl
push
xor
aas
mov
dec
pusha
cmpsl
ret
xor
cld
addr16
sub
mul
push
out
psubsb
pop
mov
mov
adc
popa
inc
loop
push
mov
out
incl
mov
or
push
orb
call
mov
cs
push
data16
xchg
xchg
sub
aaa
incb
xchg
mov
mov
sbb
inc
ret
repnz
push
inc
jnp
mov
movsb
mov
push
sbb
test
sar
adc
dec
mov
xchg
push
subl
pop
mov
cmc
in
xor
sub
jle
xlat
xor
mov
cmpsb
mov
cmp
aas
inc
pop
daa
pop
mov
cld
stos
sbb
loope
out
hlt
ds
xchg
mov
rolb
sub
push
lods
lods
pop
pop
in
mov
pop
mov
mov
arpl
xchg
cli
pusha
mov
pusha
mov
fadd
xor
lcall
test
int
xor
and
decb
subl
popf
lret
jg
and
jno
dec
xor
add
daa
cwtl
ret
xlat
js
mov
sub
je
arpl
fisubrl
out
mov
aam
pop
mov
mov
ficoms
adc
pop
add
addr16
adc
arpl
inc
mov
dec
lcall
shl
ja
cmp
mov
ret
out
out
fnstcw
xchg
sbb
jnp
hlt
push
loope
cwtl
scas
pop
sub
sti
cmp
cmp
jnp
test
xor
in
ss
stos
cmp
cmp
mov
fdivrl
cltd
insl
mov
sub
pop
pop
imul
fnstcw
daa
mov
xchg
add
push
xchg
popf
outsb
add
adc
and
aad
push
pushf
sbb
pop
in
test
xor
pop
cltd
negl
rcrl
add
cmp
pusha
adc
shl
ret
lret
je
idivb
sbb
pop
fldt
aas
hlt
mov
push
sub
mov
mov
movsb
cld
cmpl
rol
stc
fistpll
xchg
es
mov
push
jg
loopne
adc
enter
jae
mov
adc
loope
ret
xchg
jns
pop
fsubs
push
cmpsl
cmc
clc
mov
jbe
inc
cmc
cs
icebp
aas
mov
xchg
loop
xchg
sbb
lret
ret
int3
out
xchg
xchg
outsb
inc
dec
inc
insl
mov
movsl
sub
test
inc
rcl
imul
dec
xchg
mov
sbb
mov
aas
popf
pop
mov
xor
test
dec
cli
das
sbb
lcall
cmp
adc
jb
cmpl
xor
mov
pop
bound
xchg
xchg
mov
push
scas
mov
arpl
stos
nop
out
inc
mov
in
imul
mov
dec
mov
mov
jne
insl
stos
pop
mov
test
out
stos
hlt
aas
popf
adc
test
popa
es
sub
pop
mov
lcall
jmp
ds
pop
and
dec
inc
push
inc
popf
ret
frstors
test
fnsave
sbb
mov
pop
mov
mov
pop
push
ss
xor
jbe
and
icebp
in
test
adc
mov
test
jp
es
xchg
cld
lcall
fwait
gs
sub
jl
icebp
inc
movsb
mov
lahf
dec
dec
add
daa
je
mov
iret
lea
lea
mov
push
ret
dec
and
sbb
jo
bound
fcomps
int3
andb
or
repz
mov
or
mov
mov
pop
scas
push
ficoms
das
pop
mov
test
push
test
dec
insl
mov
jmp
mov
loope
mov
or
mov
test
mov
les
outsb
xlat
stos
popf
mov
jmp
push
stc
sarb
mov
scas
and
xor
xor
fistps
fs
fs
sbb
sbb
inc
jo
stos
sbb
jo
fsubrs
int
mov
mov
push
sub
pop
pop
stos
or
jecxz
mov
mov
sub
mov
jmp
sub
into
lret
mov
xchg
and
addb
xchg
cmp
insb
xor
xchg
inc
jl
add
or
js
sti
xchg
dec
add
mov
call
or
jecxz
jp
or
jl
pop
mov
pop
and
jg
and
inc
jge
cmc
mov
or
outsl
cmpsb
mov
int3
cmpsl
cli
push
sub
cmp
jmp
inc
fildl
cwtl
stos
mov
push
sub
xor
jmp
lea
xchg
sbb
das
mov
imul
in
jne
lret
rorb
mov
pop
out
dec
xor
out
xchg
notb
scas
bound
push
in
outsb
inc
imul
bound
ret
into
push
in
pop
clc
mov
sub
inc
lods
xchg
mov
sahf
push
fs
arpl
adcb
adc
and
loopne
pushl
push
xchg
ss
xchg
lcall
mov
dec
inc
movsb
insl
pop
js
ret
shlb
sbb
in
inc
add
pop
dec
push
mov
pop
push
popa
ror
out
jmp
imul
jns
fistps
cltd
cmp
loop
lock
mov
daa
adc
fistps
mov
add
notb
addr16
mov
stos
push
jecxz
jae
ret
popa
es
fimuls
mov
lret
or
xor
pop
jp
mov
mov
jge
je
pop
scas
mov
mov
jb
inc
clc
stc
hlt
pop
sub
jg
lahf
das
aas
mov
xchg
mov
jecxz
xchg
cld
into
rorl
cmpsb
inc
and
mov
inc
pop
pusha
repz
mov
jmp
sub
lods
enter
xor
sbb
mov
in
xor
add
dec
pop
rclb
mov
sarb
int3
jb
sbb
add
in
or
fbstp
and
add
jae
in
xchg
mov
hlt
mov
and
aam
cmp
out
pop
and
adc
js
xlat
jle
jno
test
cmp
loopne
repnz
ficompl
lahf
push
adc
cmp
outsl
ret
movsl
xchg
adc
pop
xchg
stos
movsl
setno
cmp
rorb
add
jmp
push
push
call
fisttpl
or
shrl
jecxz
pop
add
arpl
dec
dec
cmpb
and
imul
jl
pop
push
push
cwtl
sub
jecxz
fwait
daa
in
jl
cmpsb
pop
into
sbb
mov
lods
cwtl
andb
outsb
mov
jns
xchg
sub
mov
or
mov
xor
lea
enter
mov
cmp
sbbb
out
pop
nop
leave
ja
jno
gs
int
loopne
mov
loopne
rcrl
jg
sbb
adc
dec
in
pop
add
xchg
or
cmp
dec
mov
push
push
and
or
incl
lret
add
xor
sti
hlt
and
adcl
adc
out
das
push
mov
into
sub
xor
sub
icebp
leave
mov
xor
dec
jbe
scas
mov
pop
aad
mov
out
cmp
jecxz
rorl
xchg
stos
lahf
mov
test
aam
push
jmp
outsb
sarb
popf
push
cmpsb
xlat
fnstenv
das
add
addr16
imul
xchg
shll
repnz
popf
cmovne
fimuls
or
sahf
or
mov
outsb
or
inc
jb
mov
pop
mov
movsl
xchg
fdivs
into
xor
imul
arpl
xor
add
cmp
mov
push
xchg
cs
jle
pop
push
jo
push
push
notl
and
jecxz
adc
out
clc
or
es
push
mov
out
mov
cld
pop
xchg
push
jo
sbb
mov
xchg
adc
mov
into
or
shrl
dec
test
dec
dec
push
pushw
mov
call
repz
push
push
je
or
shlb
xchg
pop
sub
fisttpll
xor
ds
mov
cwtl
clc
imul
or
sbb
cmp
icebp
aad
mov
push
xor
pop
push
cmp
pop
xchg
shlb
or
add
mov
ja
es
push
ds
lcall
mov
sub
and
int
shll
mov
lods
cld
jecxz
bound
icebp
popa
bound
leave
bound
sti
or
add
mov
xchg
adc
aad
cli
inc
movsb
movsl
pop
mov
out
bound
add
stos
mov
mov
jnp
lds
xchg
adc
fwait
cld
ds
int3
or
jae
push
xchg
ss
xchg
rcl
xor
aam
push
push
push
mov
or
adc
mov
sbb
or
movsb
out
adc
dec
mov
scas
sub
xlat
ret
push
mov
push
push
jne
iret
fnstsw
lret
sti
and
mov
in
out
mov
in
popl
mov
out
pop
push
sbb
lahf
sbb
cmpl
mov
xor
pop
fistpl
jne
orb
inc
pop
mov
or
addr16
cmp
pop
stc
adc
scas
mov
mov
sub
jns
scas
mov
lods
cwtl
xchg
mov
jmp
lahf
cmp
mov
sbb
add
pop
sub
das
addl
std
call
mov
divb
jg
xchg
mov
fnstsw
mov
testl
push
sbb
outsl
xchg
pop
std
cmp
jecxz
out
and
repnz
incb
sub
stos
clc
push
xchg
dec
xor
aad
cs
icebp
out
leave
cmp
imul
sub
in
and
push
or
out
mov
shrb
jns
xlat
dec
mov
cwtl
int3
mov
fnstsw
les
aaa
sub
popa
xchg
rorl
adc
xor
xchg
clc
jb
xchg
movsb
loopne
enter
fstp
mov
mov
adc
or
xchg
movsl
mov
add
inc
imul
mov
dec
lods
call
shlb
sub
jb
cld
insb
pop
addr16
pop
mov
ret
aam
rcr
lock
jbe
mov
jne
mov
pop
pop
mov
pop
scas
test
push
jg
mov
mov
outsl
cld
xchg
jns
imul
push
jo
push
into
insb
repz
dec
cli
clc
sub
xchg
mov
add
adcl
jne
xchg
sub
loop
mov
dec
shlb
adc
ss
mov
push
push
aas
call
mov
jne
pop
mov
pop
shlb
adc
imul
add
cmc
pop
xchg
inc
sbb
shrb
push
xchg
lock
or
stos
jle
fimull
xchg
fisttps
push
lock
daa
mov
cmpl
push
in
xlat
mov
mov
int3
jp
add
aaa
stc
popf
bound
push
xchg
lcall
testl
mov
jp
mov
pop
dec
loope
nop
inc
dec
insb
xchg
icebp
mov
xor
mov
sahf
and
dec
pushf
cmp
shrl
ja
lahf
fwait
dec
mov
xchg
inc
and
mul
dec
add
call
cltd
fwait
jno
lahf
aas
dec
mov
cmp
aad
jg
rcrb
imull
arpl
mov
mov
sub
pushf
jo
add
bound
lods
jne
or
sub
lcall
repnz
pop
lock
jecxz
push
sbb
ret
cmp
cwtl
pop
push
xchg
cmp
mov
or
sbb
dec
scas
or
fcompl
js
call
xor
jecxz
fisubrl
xor
push
cmpsb
ret
lret
sbb
jne
inc
mov
push
fisttps
sub
test
mov
ret
push
mov
jae
xchg
cmpsb
and
pop
in
push
xchg
cld
ja
jb
jmp
and
inc
and
push
mov
out
dec
inc
cmpsl
mov
fstpl
dec
xor
pop
cmpsl
push
bound
or
push
lds
or
push
sub
std
pushf
mov
mov
mov
sti
out
push
loopne
or
dec
ret
sub
aam
dec
iret
mov
lods
mov
ljmp
clc
js
aaa
cmp
pop
test
pop
sub
notl
lahf
aas
scas
fstpt
inc
or
insl
mov
sbb
lret
push
lock
gs
addr16
ret
lock
ret
pop
jne
or
insl
imul
movnti
jnp
mov
imull
inc
inc
mov
push
sub
imul
subl
int3
cmp
sbb
enter
outsb
rcr
imul
or
ffreep
xor
shr
in
jmp
mov
pop
cs
or
std
aas
aam
push
or
mov
sub
xor
mov
push
inc
and
mov
cmp
jns
xchg
inc
cld
loop
push
push
mov
enter
cmpsb
mov
pusha
loope
cmpsl
pop
xlat
enter
jb
fiaddl
push
xchg
pop
push
and
xor
sub
sti
push
pop
xchg
dec
jo
jno
dec
test
cmp
cltd
xchg
sub
xchg
lret
std
or
and
call
jb
add
stos
loop
dec
and
xlat
pop
add
adc
call
div
loop
in
mov
xchg
frstor
sub
sbb
aas
inc
sbb
push
push
cmpsl
lcall
or
fnstsw
fmuls
imul
js
push
lret
xorl
or
inc
mov
jae
repz
int
divb
dec
push
cs
inc
ja
pop
push
lds
stos
test
lret
test
adc
xchg
and
pop
in
sbb
mov
gs
aas
fmull
lea
sub
push
repnz
jecxz
mov
pop
ds
xor
jae
fildl
iret
gs
add
loope
or
test
mov
pop
push
cli
jp
xchg
cmp
movsb
mov
ja
sti
lock
iret
mov
mov
add
cmp
fisubs
mov
divl
lcall
fs
cld
sbb
mov
dec
fwait
shlb
icebp
add
add
add
fnstcw
xor
adc
jae
cmp
fnstsw
repnz
pop
shl
or
loop
jle
mull
pop
into
enter
xor
xchg
xchg
popf
add
xchg
mov
mov
inc
out
jmp
mov
jp
cmp
xchg
and
repz
dec
and
test
int
add
cmpsb
cmpsl
sbb
sahf
xor
ret
insb
insl
mov
in
add
stc
jge
lods
xchg
xchg
movsb
insl
test
mov
push
lds
mov
pop
pusha
addr16
in
lods
ret
cmpsl
mov
out
pop
jnp
seta
add
jl
cmc
out
xor
stos
and
inc
test
arpl
decl
fidivrl
or
xorl
enter
add
cltd
add
mov
push
xlat
pop
mov
mov
call
test
cs
in
pop
loope
pop
not
inc
roll
jge
mov
cwtl
aam
add
vmovaps
scas
cmpl
aas
push
xor
test
es
hlt
pop
loope
sahf
test
inc
and
js
ds
add
aad
sbb
pop
jle
dec
or
mov
mov
mov
xor
je
addr16
shll
js
cld
sbb
pop
push
xor
loopne
lret
fnsave
and
push
ja
cltd
je
push
outsl
in
push
mov
xchg
shll
pop
push
pop
inc
xchg
fdivp
mov
xor
icebp
cmp
pop
fs
and
loopne
mov
daa
jmp
scas
test
mov
adc
cmp
adc
out
and
mov
inc
xchg
cmpsb
jecxz
sbb
iret
add
dec
arpl
popf
les
mov
xchg
int
sti
dec
imul
inc
cmp
sahf
cmc
mov
lds
out
hlt
cltd
sti
pop
jne
xchg
xchg
cmc
inc
je
int3
or
insb
ret
mov
dec
adc
test
add
push
js
aas
pop
inc
push
pop
pop
xchg
mov
jns
shll
loopne
jae
mov
sub
loopne
mov
dec
inc
lret
fistpl
fbstp
adc
fdivl
or
call
cmp
mov
sub
outsb
jle
or
lods
test
shrl
adc
jl
push
sbb
jne
cmp
jne
enter
roll
clc
mov
mov
xchg
jae
push
cltd
lcall
jns
ror
add
es
loop
sub
dec
dec
sbb
cmp
loop
mov
xchg
pushf
aaa
dec
aas
dec
push
xor
shll
mov
pusha
inc
jno
mov
ss
lcall
or
jnp
mov
out
dec
jbe
and
in
dec
inc
sti
adc
push
adc
rorl
add
sbb
and
repz
add
lods
mov
in
xor
fimull
dec
fadds
xchg
ljmp
lahf
jbe
das
ja
mov
cmp
fsubs
lds
or
test
push
dec
enter
stos
xor
push
stos
leave
and
aam
out
roll
sub
push
sti
xchg
sub
xor
fnstcw
xor
sbb
adc
jo
loopne
jle
inc
les
aam
jo
int
stos
cmp
pop
test
in
jle
mov
rcrb
ret
loope
push
jno
in
inc
ds
mov
psllw
push
sub
insl
adc
dec
jne
dec
sbb
jo
jecxz
ja
cwtl
inc
xor
mov
lahf
in
int3
int
jo
mov
in
xor
and
adcl
and
sahf
dec
add
nop
fmull
inc
mov
inc
insl
inc
imul
mov
pusha
test
aam
mov
ffreep
jmp
int3
les
mov
addr16
or
push
mov
inc
sub
mov
inc
fiadds
jecxz
cli
cmp
repz
jle
add
cs
mov
dec
or
or
pushf
int
jb
outsl
cltd
insl
pop
call
xchg
ljmp
xchg
pushf
fnstcw
mov
decl
mov
add
cmp
dec
rcrl
pop
out
pop
std
aad
leave
or
in
sbb
sub
jle
or
popa
pop
movsb
aas
cmpl
mov
shlb
cs
std
and
icebp
in
pop
ljmp
xchg
mov
aas
bound
jge
sbb
jge
test
fistl
in
mov
mov
fnstcw
lahf
imul
xor
pop
sbb
adc
rcrb
js
cmp
mov
push
xchg
call
hlt
mov
xor
dec
cmp
addr16
push
jle
jb
mov
xchg
fcompl
lret
push
xchg
arpl
fs
test
out
lahf
in
roll
test
test
add
sub
sahf
imul
xchg
cmp
jnp
cmc
sub
xchg
adc
std
cld
in
dec
arpl
les
jb
push
out
rorb
daa
inc
adc
add
mov
inc
out
pushf
fstpl
sbb
fucomip
push
fcmovbe
push
lahf
dec
or
add
shlb
les
push
lods
ss
lods
subb
dec
insb
pop
imul
in
jmp
repnz
dec
lock
jmp
pop
add
add
sbb
or
int
sub
push
repz
imul
mov
hlt
sbb
out
subl
ret
je
mov
dec
push
js
fstps
xor
rclb
jno
add
clc
hlt
cmp
sub
dec
or
or
lock
fwait
jb
mov
pop
sub
fsqrt
jb
push
lods
and
fistps
pop
rclb
dec
dec
xchg
and
push
lcall
push
xchg
hlt
lods
xchg
aas
shll
jbe
push
ds
pop
inc
fdivr
popa
pop
ret
out
or
cmp
out
inc
shrl
or
mov
neg
push
sub
jecxz
outsl
aam
sysenter
cmpsl
cmpsl
sti
adc
add
and
popa
sbb
and
push
lods
xchg
inc
adc
aas
dec
mov
mov
ss
push
push
lahf
mov
pop
orl
iret
pushf
mov
int3
iret
mov
adc
int3
sahf
shll
xchg
adcl
fdivrs
clts
test
shrl
sbb
adc
cmpl
or
pop
push
or
push
cmpsl
mov
inc
add
jge
mov
jge
jg
pop
inc
mov
push
xor
fsts
mov
int3
dec
das
push
pop
mov
rolb
mov
sti
gs
ror
mov
insb
pop
jns
cli
xchg
jmp
maskmovq
imull
mov
push
popf
jae
add
movsl
aam
add
roll
and
jle
enter
test
loopne
aam
dec
mov
inc
push
movsl
mov
call
or
cmp
pop
jbe
ds
xchg
leave
mov
or
jno
insl
dec
fwait
mov
jns
mov
mov
imul
in
and
adc
adc
aad
or
fxam
dec
pop
ljmp
loop
push
pop
mov
pushf
xor
inc
push
imul
cmove
bound
pop
adc
pop
jno
pop
dec
repz
insl
xor
fadds
xchg
mov
fimuls
das
mov
dec
mov
insb
cmc
adc
xchg
lahf
jl
sti
clc
mov
sub
ret
inc
hlt
xchg
cmp
cmpsl
lret
ret
lock
mov
push
loop
inc
mov
test
and
and
enter
int3
inc
daa
adcl
jp
xchg
push
rclb
jno
clc
push
pop
fsub
pop
sti
test
fs
loope
xchg
loopne
lods
testb
movsl
inc
clc
mulb
cmpsb
mov
or
mov
ja
mov
int
push
xchg
cmc
and
xchg
into
mov
mov
pop
out
lock
cltd
bswap
arpl
cld
jo
add
in
mov
hlt
mov
mov
stc
repz
xchg
jecxz
xor
test
mov
cwtl
fs
aas
stos
js
test
dec
xchg
sbb
int
sbb
dec
fidivl
sbb
cmc
lcall
jne
push
pop
dec
jae
test
pushf
push
addl
mov
insb
fadd
add
jae
jle
dec
adc
mov
cmp
jnp
dec
dec
or
icebp
mov
cmp
sub
dec
pop
loopne
cli
push
inc
pop
xor
push
push
repnz
dec
push
lfs
mov
repnz
pushl
dec
call
xchg
xchg
daa
cmc
sub
inc
les
lret
inc
popf
lea
push
sbb
sub
xchg
sbb
bound
mov
xor
insb
imul
aaa
lcall
and
loop
pop
and
stos
int3
jl
jnp
adc
int3
lret
pop
add
dec
cmpsl
clc
add
mov
out
nop
insl
sbb
push
xchg
and
out
inc
mov
cmp
or
ljmp
push
in
push
test
lea
rcrb
pop
push
ljmp
sub
in
int
pop
repz
cs
adc
add
sub
test
add
cmpsl
shll
repnz
xchg
iret
sub
push
mov
int3
push
out
mov
push
ljmp
xchg
adc
std
rorl
cmp
cltd
sahf
sub
mov
push
cmp
dec
mov
adc
push
jecxz
fildl
dec
int
pop
loop
mov
das
lahf
jecxz
pusha
sub
fcomps
jo
cli
xor
data16
pop
test
rorb
incb
or
cmpsl
sub
mov
or
aam
jge
xchg
bound
or
jecxz
test
arpl
adc
add
push
sbb
test
xor
test
sahf
fwait
dec
ljmp
pop
jno
mov
sub
ljmp
mov
sbb
pushf
sbb
les
push
mov
movsb
cmp
xor
lcall
bound
lcall
sbb
ds
ficoml
leave
jo
sbb
mov
xchg
aad
out
xor
stos
fldcw
out
inc
test
xchg
push
movnti
cld
aaa
int
popa
sub
adc
ljmp
push
dec
jne
popf
sub
sbb
ds
inc
jmp
push
cmp
addb
mov
inc
jno
clc
xchg
push
add
sub
mov
std
add
ret
xlat
mov
into
cmp
cmpsb
push
dec
mov
aam
pop
inc
push
loop
lock
xor
dec
mov
pusha
scas
mov
in
mov
and
sub
gs
jb
inc
sarb
bound
aad
dec
or
ds
ja
push
ljmp
ss
push
lret
xchg
adc
insb
dec
xchg
loope
pop
outsb
mov
and
fidivs
adc
xor
jge
stos
fdivs
xor
jp
icebp
pop
pop
movsl
movsb
add
out
div
clc
enter
rol
xor
enter
popf
mov
idiv
out
mov
or
cltd
xchg
ret
mov
rcrl
xchg
mov
movsl
and
sbb
out
adc
mov
in
sbb
sub
adc
imul
xor
add
lock
ds
pop
pop
test
push
mov
and
mov
add
add
push
rclb
cli
stc
sub
or
push
mov
iret
lds
ja
arpl
inc
jl
jle
pop
ret
sub
jne
xchg
xchg
cmp
jge
push
push
jno
xchg
jae
orb
ds
or
sarl
cmp
lea
mov
push
sub
pop
mov
sar
adc
dec
xchg
jl
ficompl
or
sub
dec
cmp
outsl
mov
inc
pop
popa
jmp
or
mov
mov
or
xchg
xchg
ss
xchg
pop
push
mov
pop
lods
mov
nop
add
jp
xchg
inc
jecxz
in
jl
es
cld
sub
xchg
add
cmp
in
jb
fnstcw
mov
add
jns
test
push
mov
add
pop
cld
iret
lret
leavew
fs
push
mov
dec
mov
or
aas
mov
adc
dec
hlt
fiaddl
fdivrp
push
dec
or
test
mov
inc
cld
insl
test
pop
mov
and
or
repz
or
xorl
dec
testl
xchg
jle
dec
movsl
cmpsl
xor
hlt
ret
lea
cltd
icebp
das
clc
imul
das
movsl
pop
and
shll
aam
xor
lcall
fldl
ror
call
xchg
les
adc
sub
jmp
fcompl
jg
adc
cmp
std
popf
push
inc
inc
test
or
popf
mov
pop
fwait
or
inc
xor
stos
jp
inc
mov
lret
addl
in
jo
inc
test
pusha
or
cli
and
pop
push
stos
push
mov
mov
jge
sbb
sti
orl
cwtl
loop
mov
xor
pop
mov
das
fmull
jns
lret
push
cmpsb
xor
mov
popa
add
adc
mov
cmc
pop
xchg
in
pop
inc
mov
jp
dec
and
inc
imul
cli
sbb
stc
mov
dec
adc
pop
test
xchg
push
jbe
jbe
mov
adc
ret
mov
mov
pop
ja
lret
loopne
mov
pusha
lods
js
into
dec
cmpsl
jnp
imul
sub
sbb
push
mov
cmpsl
mov
sub
insb
cmp
mov
sub
xlat
pop
xchg
pop
call
cmp
in
pop
dec
stc
sbb
cwtl
dec
rolb
pusha
hlt
sbbl
pop
cmpsb
cmc
push
mov
rorl
aad
sub
ss
aaa
sbb
stos
popa
sbb
jbe
fnstsw
pop
cmpsb
mov
cmp
inc
inc
std
push
sarl
xor
in
sar
push
out
mov
push
or
dec
int3
addr16
adc
adc
xchg
sahf
gs
or
or
ficomps
cwtl
push
or
cmp
add
cltd
pop
mov
pusha
dec
push
pop
clc
pop
sub
push
ss
push
xlat
ljmp
test
cmc
push
inc
jp
adc
outsb
push
test
mov
or
test
lock
jp
and
andb
pusha
popf
mov
push
inc
loop
cmp
ljmp
in
cmp
test
repnz
scas
jno
rclb
sbb
pop
int
mov
inc
in
mov
inc
xchg
mov
mov
ja
cs
inc
inc
pop
es
mov
add
and
push
stc
fsubrs
adc
nop
cmc
repnz
outsl
pop
insl
jno
daa
pop
adc
loope
inc
jle
inc
push
lcall
dec
loop
sti
jb
scas
cli
sub
pop
adc
cmp
xor
fdivrl
push
rorl
rolb
stc
stc
leave
scas
bt
pop
notb
sub
mov
jae
popf
bound
sub
pop
adc
fildll
xlat
jp
adc
in
lret
and
sbbl
les
sbb
dec
mov
mov
adc
mov
mov
cmp
mov
stos
xchg
not
jmp
imul
in
loop
popf
cmp
pop
lock
mov
clc
push
ror
lcall
and
out
add
jo
mov
mov
das
sbb
sub
lcall
xchg
ljmp
xor
popa
pop
rcrl
sbb
push
mov
lds
pop
mov
flds
xor
lds
test
and
adcl
int3
test
fnstenv
dec
test
mov
rcrb
sbb
int
sub
mov
add
inc
cmpsl
fsubrs
jae
in
rolb
push
lahf
icebp
addr16
cmc
sub
lock
shrb
or
mov
inc
mov
sti
lds
les
adc
add
sbbl
iret
in
std
sub
insb
and
fnstsw
cmp
xchg
dec
xrelease
mov
imul
cld
adc
or
test
cmpl
adc
inc
mov
mov
out
in
cmp
dec
mov
xor
aas
add
ja
outsb
dec
xor
loopne
pusha
mov
pop
mov
imul
inc
sub
std
and
mov
test
into
imul
mov
mov
add
scas
push
cmpsl
mov
in
addb
daa
arpl
push
and
lahf
cmpsb
and
mov
test
and
cmpsl
push
repz
xchg
mov
cmp
repnz
pushf
test
xchg
shll
add
jmp
mov
lcall
dec
mov
mov
inc
fwait
aad
pop
imul
or
jp
jbe
scas
add
ss
loope
or
mov
adc
mov
inc
gs
inc
out
out
roll
mov
pop
ljmp
lods
push
out
mov
rorb
inc
insl
cmp
in
loope
inc
jns
mov
mov
loope
push
les
push
rorl
cmpb
push
cltd
mov
jns
lcall
mov
prefetchw
lds
ja
loopne
inc
add
mov
stos
out
xor
add
xor
cli
lods
xchg
dec
mov
mov
rolb
in
cmpl
lods
arpl
int
inc
mov
push
sbb
mov
js
pusha
jg
push
mov
pop
mov
gs
out
test
shll
ja
popf
daa
mov
movsb
ds
cmp
cmp
subl
cmp
inc
out
into
jns
imul
jbe
push
fnstenv
stc
xchg
xchg
jnp
jg
cmp
and
cwtl
jnp
cmc
mov
ja
sahf
adc
mov
ret
sub
rcrb
mov
mov
inc
push
mov
sub
mov
add
pop
js
out
cmp
mov
sbbl
adc
or
es
imul
push
jnp
push
stos
mov
mov
inc
insl
cmpsb
js
mov
arpl
xchg
or
jne
int3
sbb
xchg
cltd
xchg
ret
cmp
hlt
cli
outsl
jp
lret
mov
jp
add
push
int3
mov
popf
dec
and
in
lods
add
pop
clc
add
mov
push
jmp
dec
into
jb
stos
jb
repz
inc
jno
dec
pop
out
lods
int3
xchg
scas
inc
and
jnp
sub
jecxz
cmpsl
mov
out
xchg
pop
call
push
scas
jne
mov
imul
mov
mov
es
sub
test
shlb
mov
insb
fwait
cmp
sub
dec
mov
popa
cmpsb
jb
in
leave
pop
mov
ss
inc
mov
jle
in
pop
add
inc
in
jge
ret
movsb
lahf
test
sbb
add
cli
mov
incl
mov
ds
mov
fs
fs
leave
push
sub
js
and
adc
jbe
cmp
jmp
adc
xchg
cmp
iret
mov
aad
sahf
fcomi
shlb
insb
aam
sub
pop
cmpb
push
hlt
sbb
inc
xchg
cmp
adc
out
pusha
push
sbb
push
scas
mov
fnstsw
pusha
lret
pop
jmp
pop
mov
hlt
cs
mov
xchg
push
popa
or
or
mov
popf
xchg
mov
lcall
mov
dec
imul
out
popa
pop
aad
scas
shrb
sub
push
ret
fwait
add
mov
sub
out
loopne
cs
add
in
mov
test
int3
jne
inc
adc
mov
fadds
lock
jnp
test
stc
mov
sahf
fsubrs
daa
popa
xchg
mov
loopne
dec
stos
dec
aaa
dec
push
adc
inc
in
inc
bound
and
or
bound
lret
imul
mov
jg
cmc
push
xor
cld
int3
fstpt
sbb
movsb
insl
inc
mov
hlt
loope
aam
push
dec
out
fisttps
jne
push
mov
cs
push
push
xchg
push
dec
sub
enter
sbb
push
xor
lret
push
sbb
cmp
hlt
xchg
jno
stos
fiadds
ja
push
cmp
push
je
lret
or
out
xor
sub
and
mov
xchg
dec
lods
inc
movsl
inc
push
or
addr16
test
movsl
cli
sar
out
cmp
js
xchg
jnp
and
push
and
mov
lahf
inc
push
mov
jge
push
clc
jne
mov
cltd
mov
mov
xchg
or
bnd
sub
xor
and
stc
add
movsl
mov
adc
mov
test
pop
aad
mov
add
xchg
enter
fadds
push
leave
mov
out
repnz
mov
scas
and
pop
stos
mov
lcall
pop
sbb
pop
int3
test
dec
jb
mov
popf
aad
mov
lock
cmp
sbb
push
movsl
std
fiadds
dec
jns
insb
adc
outsb
pop
xor
stos
dec
icebp
jne
cmp
jmp
ret
jmp
push
dec
into
jbe
xchg
add
lret
sbbb
sbb
pop
loopne
popf
mov
popa
jnp
faddl
test
xchg
mov
out
xor
mov
test
das
inc
xchg
cmp
add
leave
test
cmpsb
icebp
and
shlb
xchg
and
lret
out
out
cmp
nop
lock
cwtl
fwait
in
in
cmp
push
js
xor
fnstcw
xchg
jb
cmp
insl
adc
arpl
sub
cld
fs
aad
push
or
add
mov
mov
push
scas
pop
pop
sbb
xchg
xor
cltd
test
sub
call
jle
in
and
mov
jno
js
mov
movsl
push
jge
sub
test
jb
mov
loope
iret
in
test
jo
aas
jg
sbb
sub
xchg
sbb
xor
dec
in
inc
cmp
mov
cmp
xchg
lods
add
lahf
movsb
mov
insl
and
inc
adc
sti
gs
sbb
inc
or
stc
jl
sub
add
das
mov
and
xchg
cld
pop
je
stos
shlb
test
bound
fnstcw
in
or
fcmovnbe
popa
adc
and
in
jecxz
add
sub
cmp
mov
pop
xchg
out
je
cli
xor
mov
sub
clc
inc
js
xor
dec
add
push
inc
sbb
inc
hlt
fsubs
jecxz
jnp
mov
pop
stc
inc
and
xor
dec
stc
iret
pop
cmp
into
pop
pop
popa
pop
pop
pop
bound
pop
add
mov
mov
sbb
or
fmulp
mov
cmp
aad
cmp
ljmp
push
dec
fcmovne
add
fisubs
mov
scas
test
sub
jle
cmp
rorl
or
push
mov
jecxz
cmp
pop
push
bound
cwtl
dec
mov
push
add
adc
jmp
xchg
cmpsl
test
xchg
xchg
scas
insb
adc
arpl
sbb
xor
or
stos
and
cmp
jmp
leave
das
jae
push
cmpsl
daa
das
rcll
mov
mov
dec
stos
sbb
cmp
fldl
rcrb
ljmp
add
jo
in
push
or
adc
mov
mov
jae
xor
pusha
add
ss
adc
out
sub
xchg
sbb
dec
lcall
sub
xor
jns
mov
test
mov
cmp
es
push
mov
xchg
ljmp
insl
mov
jp
in
add
lret
outsb
mov
xchg
sbb
sub
addr16
imull
xor
dec
popf
aad
xchg
decb
push
dec
pushf
mov
aad
clc
jg
and
cmpl
push
testl
cmpsb
inc
and
je
sub
cli
in
test
cmc
push
fmul
and
and
pop
inc
and
incl
inc
int3
loopne
adc
mov
lret
xchg
adc
or
pusha
dec
and
arpl
jae
mov
cld
movl
pop
sub
push
pop
pop
into
mov
sub
ret
data16
lods
or
stos
ljmp
or
xchg
filds
rcl
std
sbb
test
sbb
repnz
jg
iret
in
orl
mov
inc
mov
js
mov
pop
push
js
xorl
xor
push
lahf
adc
cmp
stos
lahf
outsb
lods
pop
das
and
pop
jb
out
pop
mov
lods
roll
mov
jb
xchg
ret
xor
mov
cmp
stc
mov
add
test
arpl
cld
xchg
jl
adc
das
repz
push
cli
and
frstor
pop
in
and
jecxz
adcb
test
movsb
push
leave
loop
sahf
into
add
prefetch
leave
push
es
or
dec
movsb
cmpl
out
int3
stos
int3
clc
lods
out
int
mov
sbb
push
push
addr16
or
hlt
icebp
dec
mov
scas
in
bound
mov
jge
cwtl
dec
jns
mov
jno
push
jo
jae
fdivl
push
push
mov
pushf
or
or
fs
xchg
shrb
enter
fisubrs
sbb
lcall
and
pusha
test
inc
int
jb
int3
ljmp
mov
push
outsl
add
jmp
mov
int
mov
or
mov
adc
jge
aaa
fadd
pop
cld
sbbl
ja
rclb
xchg
insb
xlat
std
inc
cmc
cmp
mov
int3
push
xor
inc
fs
mov
jl
fisubs
push
stc
stos
push
inc
mov
out
pop
sbb
std
pop
dec
dec
mov
out
add
sub
and
mov
or
mov
bound
cld
hlt
or
addb
inc
insb
cltd
and
jbe
sub
inc
xchg
ja
jbe
jg
sbb
push
fildll
mov
inc
rcrb
lods
pop
hlt
sbb
mov
pop
stos
divb
ss
leave
fwait
orb
xor
inc
fstpt
mov
insb
inc
and
sbb
xor
mov
and
addr16
cmc
fbld
aaa
jle
adc
test
in
sub
adc
add
inc
or
into
or
jp
adc
adc
bnd
mov
mov
and
xor
mov
adc
adc
or
stos
adc
xchg
int
into
ret
jbe
jmp
push
pop
mov
cmpsb
insb
pop
inc
cmp
dec
es
sbb
aam
mov
sub
pop
fstl
xor
mov
or
mov
shlb
xchg
mov
inc
jae
test
andb
dec
stc
or
inc
inc
insl
push
std
fcoml
xor
inc
xchg
sub
stc
cmp
in
xlat
adc
lods
adc
mov
jmp
adc
jle
int3
lcall
dec
in
push
int
mov
nop
mov
fwait
dec
push
cmp
rcll
daa
push
nop
cmpsl
mov
fdivrl
cmpsl
jbe
mov
pop
aas
pop
popa
xor
in
cltd
mov
pop
test
lds
jne
push
dec
jl
fiaddl
jecxz
daa
mov
or
pop
push
add
adc
xlat
cmpb
into
mov
mov
aad
aad
bound
fnstcw
sahf
stos
fidivrl
cmc
mov
les
mov
sbb
add
sub
out
inc
fdivs
paddw
adc
jp
mov
sti
mov
push
jno
call
pushl
mov
adc
xchg
cmp
lds
loope
popf
xor
das
out
pop
or
call
iret
sbbl
insb
lods
and
ficompl
orb
in
or
sub
lock
pop
ret
aaa
in
adc
inc
mov
xchg
repnz
add
data16
jmp
in
pop
int
push
pop
in
mov
add
mov
or
and
mov
xchg
fsubr
rolb
jnp
push
mov
dec
pop
adc
ret
dec
mov
mov
or
pop
push
cltd
fs
xlat
js
or
dec
dec
jmp
ds
cli
imul
ss
lret
int3
daa
int
adc
hlt
inc
mov
mov
cmp
xor
fldt
adc
xor
cmp
xchg
cmp
push
cltd
xchg
faddl
xor
ljmp
lds
outsl
cmp
xchg
or
hlt
sbb
fwait
pop
test
scas
test
out
xchg
data16
sbb
lea
adc
js
xor
repnz
arpl
dec
and
jle
and
and
outsl
sub
out
add
out
stos
add
aad
sub
mov
and
mov
mov
iret
sbb
fbstp
pusha
ficompl
cwtl
and
cmp
repnz
imull
jns
mov
mov
sbb
les
pop
fwait
sbb
sbb
stc
sahf
sbb
lods
or
mov
or
js
mov
jp
movsb
push
sub
and
push
out
loop
adc
fcmove
jne
inc
in
cld
fldl
adc
mov
jnp
push
inc
xor
pop
push
mov
dec
repz
ljmp
out
or
mov
ja
dec
add
ret
rol
mov
jb
cltd
into
pusha
lods
or
jmp
sahf
test
cmp
mov
xlat
and
or
ret
std
adc
cwtl
addr16
jbe
jge
jbe
ficoml
xor
adc
mov
in
addr16
loopne
pop
inc
cmp
mov
arpl
jno
cltd
sbb
adc
jle
sti
xchg
cmp
push
mov
xchg
repz
rorb
sbb
icebp
sbb
sub
add
cs
push
clc
mov
push
out
or
into
pop
fisubl
ret
je
mov
pop
mov
xchg
rcrb
jmp
mov
cmp
mov
imul
cmpsb
push
dec
pusha
fs
cli
aam
push
push
sub
dec
add
pop
out
cwtl
out
es
jge
xlat
int
call
xchg
pushf
mov
nop
andl
pop
xchg
adc
sbb
and
dec
sahf
test
sub
and
push
mov
push
sbb
popa
inc
and
imul
cmp
dec
shl
mov
hlt
int3
or
xlat
out
int
xor
or
or
popf
push
les
or
jle
dec
mov
lock
decb
in
mov
cmc
out
gs
in
push
scas
popf
adc
mov
loope
les
es
in
or
cs
sbb
les
jecxz
add
movsl
loope
push
daa
sti
cli
fmull
daa
inc
pop
fcompl
cmp
les
stos
or
nop
pusha
xchg
hlt
iret
jae
lods
mov
pop
xchg
adc
and
adc
mov
sbb
mov
inc
ja
in
cmc
adc
xor
outsb
mov
or
sti
cmp
cs
loopne
xor
xchg
pusha
js
pop
xchg
push
dec
add
movsb
lret
shrb
sub
dec
sub
push
push
in
out
sub
xor
cmp
out
pop
lds
test
and
dec
mov
add
sub
scas
xor
pop
mov
clc
out
int
inc
xor
add
jns
cmp
mov
pusha
inc
push
sbb
repnz
int3
inc
sub
subl
icebp
lock
mov
add
std
ljmp
jb
addr16
aaa
mov
jg
loope
cmp
lea
imul
xchg
in
mov
push
clc
xchg
ds
scas
es
or
enter
fidivrl
imul
inc
pop
insl
insb
mov
add
jle
xchg
xchg
imul
jle
mov
outsb
xlat
adc
sbbl
imul
and
xor
faddp
cld
or
icebp
pop
mov
xchg
shlb
sub
sub
inc
push
jecxz
lods
mulps
aam
repnz
mov
mov
jns
repnz
mov
lds
mov
fildll
jno
sbb
into
push
cmpsl
add
and
jo
repnz
or
dec
push
icebp
push
push
push
cli
push
add
mov
in
push
je
xor
in
loop
int
repnz
gs
xchg
or
roll
mov
inc
test
nop
sub
addl
mov
pop
sti
out
je
orl
xor
push
pop
leave
rolb
inc
sbb
testl
std
push
jo
adc
jnp
jne
mov
repz
mov
mov
lret
das
add
dec
or
mov
push
jecxz
xchg
std
cmp
dec
jns
xor
dec
jbe
mov
call
mov
mov
cmp
in
daa
insb
mov
loope
mov
mov
dec
repnz
sbb
jle
test
in
push
rcrl
or
movsb
push
jne
sbb
test
dec
fmuls
xchg
mov
push
movsl
inc
xor
adc
xor
int
jno
jmp
hlt
cmpsl
test
insl
aaa
adc
clc
add
add
test
scas
cmc
scas
loope
mov
rcrb
dec
jecxz
subl
lods
mov
adcb
add
mov
repz
jecxz
cmp
push
out
daa
jg
sub
sub
dec
or
jg
mov
movsb
loop
mov
das
fisubl
cmp
jne
std
push
push
jl
cltd
addl
lods
mov
shrl
scas
jg
pop
fiadds
mov
jae
iret
mov
aas
xor
mov
ja
and
push
fnstsw
nop
cld
jg
inc
test
pop
nop
cmp
enter
mov
rorl
cmp
cli
jmp
push
dec
mov
mov
sub
jl
add
pop
and
xor
leave
pop
scas
flds
cltd
testb
push
mov
push
xor
incl
dec
or
add
inc
out
stos
es
int
push
shrl
xor
sub
arpl
out
std
shlb
add
and
jg
aam
test
push
cwtl
mov
jbe
jo
js
fimull
push
fwait
push
mov
cli
pop
and
in
pop
xor
cmc
cwtl
enter
xlat
dec
out
in
mov
push
mov
mov
xor
data16
lock
scas
arpl
mov
test
push
mov
movsl
jae
cmp
and
pop
movsb
dec
xor
jbe
inc
inc
or
rol
adc
icebp
sub
pop
sarb
aad
push
idiv
jg
add
adc
sahf
mov
mov
mov
cmpsb
mov
add
ljmp
cltd
adc
repz
scas
inc
xor
fistps
dec
fsubrs
add
bnd
dec
mov
movb
sahf
int3
dec
sub
imul
pop
sti
sti
imul
jl
mov
in
fchs
mov
sbb
push
xor
mov
hlt
adc
xchg
dec
push
test
adc
pop
sub
fsub
negb
mov
push
pop
mov
mov
jmp
aaa
mov
mull
mov
mov
imul
daa
aas
jnp
scas
dec
in
xor
pusha
outsb
icebp
not
repz
mov
outsb
ss
mov
lret
sbb
aaa
enter
push
and
out
jb
inc
ja
mov
int
leave
mov
jl
and
test
outsb
xchg
outsl
lcall
fidivs
dec
and
push
sub
pushf
xchg
sbbb
out
push
mov
fwait
out
xchg
xor
arpl
je
mov
adcb
mov
daa
clc
jge
sbb
sub
dec
dec
sbb
inc
or
mov
cmp
cmp
mov
scas
aad
out
inc
jb
scas
lcall
and
into
pop
push
cmovb
fsubs
testb
xorb
adc
daa
xchg
jno
imul
mov
iret
repnz
xchg
or
fildl
ss
or
inc
jecxz
add
sarb
mov
push
lcall
subb
mov
push
add
outsl
movsl
arpl
loope
xor
rorl
idivb
rcr
scas
and
stos
dec
ds
push
mov
add
mov
in
fwait
cmp
aam
mov
in
xchg
cmpsb
and
add
js
or
xchg
jge
inc
es
aaa
or
push
cmp
cmp
sbb
mov
pushf
push
cwtl
mov
popf
jle
cltd
das
and
adc
lret
adc
jno
mov
js
pop
jno
mov
rclb
mov
and
sbb
xchg
movsl
test
jo
xchg
mov
or
fstpl
push
mov
push
lods
inc
int3
sbb
insb
adc
inc
dec
mov
jae
testb
sub
cld
add
add
pop
test
repz
dec
icebp
out
repnz
cmpsb
add
inc
addr16
add
cmpsl
icebp
or
jge
add
movsl
cwtl
xor
imul
ret
hlt
je
iret
pushf
mov
jne
mov
jae
fisubs
pop
adc
jns
jge
jbe
lret
mov
stc
sub
movsb
mov
movsl
test
stc
cli
or
xor
mov
inc
jo
fsts
xor
ljmp
mov
sub
lret
std
stc
push
or
push
in
scas
mov
enter
in
fidivrs
movl
adc
push
pop
sub
push
jns
mov
inc
jae
push
dec
xchg
pushf
cmp
xchg
movb
cmc
sub
xor
je
adc
sbbl
dec
sti
xchg
shl
push
in
sbb
mov
or
cli
add
dec
loopnew
sub
popa
out
dec
les
mov
lret
push
pop
push
dec
jp
inc
aad
mov
mov
jno
mov
gs
lea
mov
mov
xchg
xchg
cmpsl
inc
test
dec
sub
mov
pop
fs
repz
jg
or
jp
fstps
mov
push
stos
pop
add
mov
test
insl
js
shlb
ljmp
movsl
and
outsb
rolb
notb
add
imul
in
test
pop
sti
out
or
jg
outsl
or
mov
xchg
icebp
ret
pop
add
and
cmp
fiaddl
icebp
cmpsb
mov
test
cs
repnz
jg
mov
sbb
inc
jae
xor
mov
dec
jle
mov
testb
popa
sub
add
cli
jg
pop
inc
das
mov
ret
test
cli
cmp
rorb
es
inc
nop
jle
cli
outsb
rolb
pop
sub
inc
mov
pusha
movsb
jo
jge
dec
mov
cmc
cli
xor
rcrl
in
popa
mov
hlt
bnd
push
loop
rcrl
push
add
sbb
push
and
xor
xor
adcl
repnz
testl
mov
inc
ret
out
mov
push
lock
stc
dec
fwait
and
xchg
mov
mov
sub
xchg
xor
fs
loope
sbb
stc
sarb
nop
in
lcall
loope
inc
xor
pop
movsl
xchg
sub
rorb
jecxz
xor
push
push
cmp
insb
mov
mov
inc
mov
push
push
into
xor
mov
lods
adc
pop
scas
push
or
dec
aad
xchg
insb
mov
and
push
ljmp
shl
das
sub
lods
out
rorb
repnz
jge
dec
js
jmp
int3
nop
in
repnz
mov
or
mov
imul
sti
movsl
cltd
loop
arpl
test
xor
js
mov
push
push
push
clc
and
push
dec
fs
add
ret
push
in
aas
pop
mov
ljmp
ja
in
cmp
aad
fdivrl
jle
ret
repz
ss
gs
push
fiaddl
adc
lods
insl
pop
scas
test
mov
mov
push
push
mov
sahf
call
mov
jo
cmpsl
and
lret
jmp
pop
fsubrs
inc
loope
bound
xor
sbb
and
cmp
jl
or
mov
test
mov
mov
inc
xchg
iret
lods
dec
bound
iret
sbbl
sub
movsb
call
stos
mov
xchg
sub
mov
ret
cmp
idivb
mov
iret
aas
fildll
sub
jle
xchg
adc
cli
js
sub
xchg
xor
in
pushf
lret
mov
repnz
xor
es
cmpsl
and
stos
jecxz
sbb
add
leave
xor
sub
sub
mov
repnz
fs
push
dec
mov
notb
dec
inc
mov
or
jl
or
pop
or
push
push
mov
pushf
in
fadd
add
andl
aad
loope
fbld
xchg
filds
arpl
lds
jp
gs
xchg
sbb
in
fs
pop
lods
shlb
shlb
bndstx
shlb
stos
stos
and
xchg
mov
cmp
cmp
lcall
add
shl
movsb
push
and
scas
scas
cmp
dec
sbb
in
lret
call
aam
jmp
into
mov
dec
pop
outsl
push
dec
mov
sbb
jecxz
inc
pop
mov
in
fs
ss
dec
push
add
int3
inc
adc
xor
outsl
test
insb
fs
xor
mov
xchg
lods
out
or
and
or
xor
push
xor
push
fwait
aam
ljmp
and
aad
cli
push
and
mov
inc
lcall
lock
xor
test
fidivrs
in
push
sbb
mov
scas
popa
mov
mov
shrb
in
ljmp
ja
pop
mov
mov
nop
or
xor
xchg
mov
mov
clc
imul
popf
xor
mov
and
add
adc
mov
pop
mov
pop
mov
movsb
mov
add
and
sbb
imul
jle
push
pop
push
call
add
push
call
mov
scas
inc
aad
pop
imul
inc
das
popa
scas
rcrb
inc
outsl
in
popa
inc
mov
push
lea
cli
mov
adc
sub
push
inc
adcb
imulb
decb
push
ds
inc
popf
mov
jmp
mov
mov
cmp
jb
inc
clc
xchg
mov
push
cli
mov
and
cmp
push
pop
or
inc
outsl
dec
xchg
jl
push
push
leave
shl
pop
push
inc
xchg
and
testb
sub
xlat
xchg
cmp
insb
inc
aam
fcmovnb
dec
jecxz
jle
mov
or
push
dec
lds
sbb
popf
out
dec
mov
sub
jne
and
xor
cmp
mov
mov
out
xor
adc
push
inc
popf
je
sub
mul
mov
subl
mov
out
in
in
inc
pusha
push
mov
cmp
lds
add
jge
push
dec
xchg
ja
fdivrs
mov
xchg
shll
arpl
cmpsl
mov
scas
orl
pusha
push
xor
arpl
jbe
mov
adc
insl
pop
imul
loopne
xchg
dec
je
mov
cmp
add
sbb
mov
movsb
lods
sbb
les
sub
mov
push
inc
aas
loope
push
push
mov
call
jp
ret
and
imul
mov
leave
xor
loope
inc
ret
push
xor
bound
out
inc
xor
ret
aas
fwait
push
sub
and
xchg
add
loopne
pop
push
sub
sti
movsb
imul
xor
insb
sbb
int
adc
sbb
add
fwait
mov
sub
rcrb
mov
outsb
imul
fisubs
dec
jg
sahf
outsl
std
adc
movsl
dec
xor
push
xchg
xchg
pop
js
xchg
sbb
in
ret
femms
adc
popf
loop
fiadds
push
or
ds
push
mov
or
in
es
jg
leave
push
jnp
xor
push
adc
adc
cmp
dec
dec
sti
pop
je
in
mov
mov
jo
stos
daa
and
lret
test
call
out
xchg
cmp
adc
movsl
push
fs
mov
mov
je
xchg
or
call
cli
mov
lret
jo
xchg
jo
mov
test
repnz
adc
dec
push
cli
xlat
in
test
pop
pop
cwtl
outsl
mov
or
fadd
outsl
mov
cwtl
adc
push
ja
pop
push
jno
imulb
add
stos
pop
test
andb
or
push
adc
jae
outsb
faddp
fildl
push
fnstenv
inc
pop
or
shrb
out
mov
loopw
push
cmpb
or
repnz
pushf
push
out
dec
mov
addb
jmp
sbb
shll
pop
lods
xchg
xor
fildll
aaa
lods
scas
lret
adc
jo
mov
xor
shlb
rcr
adc
arpl
movsl
push
addb
pusha
add
pop
iret
sbb
mov
add
mov
add
ss
mov
push
dec
lret
icebp
jle
test
shl
inc
sub
inc
xchg
xchg
shll
mov
ja
shll
pop
cmp
repnz
and
in
mov
out
je
pop
push
jp
test
add
jmp
xchg
add
test
sub
mov
dec
aaa
lods
shl
push
cmc
xor
popf
sbb
adc
repnz
pop
pop
cmp
adcl
adc
ret
repz
repz
insb
pusha
push
jg
test
lea
mov
sub
ljmp
add
fnstenv
fnstenv
sub
mov
sub
out
mov
pop
sub
fildll
lret
jnp
cld
inc
push
nop
jg
dec
shll
test
xchg
and
add
adc
iret
mov
cmp
mov
scas
scas
or
mov
dec
mov
jne
out
pop
fs
mov
test
pop
xchg
and
into
ret
jge
push
stos
pop
or
push
mov
xchg
sti
add
stc
push
loopne
clc
les
cmp
scas
dec
sbb
aaa
arpl
cmpsb
mov
jb
push
jp
xor
sti
jl
dec
movsb
into
js
out
imul
dec
in
adc
mov
addl
lods
movsb
cmp
lds
jne
mov
mov
leave
mov
xor
dec
mov
sbb
jge
pop
fisttps
add
inc
pusha
cmp
ret
adc
fnclex
hlt
movsb
int
dec
adc
and
dec
mov
enter
out
mov
mov
jl
pop
incl
loopne
out
sub
xchg
jmp
xor
roll
jge
pop
rcll
data16
imul
sbb
fwait
xchg
sar
loop
mov
leave
push
mov
rcrb
mov
pop
loopne
ror
dec
xor
push
sub
mov
or
adc
aaa
dec
aas
sbb
mov
in
imull
jae
mov
cltd
das
rcrl
jecxz
xor
inc
push
movsl
daa
inc
iret
pop
je
jg
pop
mov
jnp
push
xorl
jns
sahf
xor
js
js
mov
pop
add
scas
mov
dec
mov
mov
xchg
mov
sub
mov
loope
mov
and
das
dec
mov
test
cwtl
clc
pop
pushf
shlb
and
loopnew
icebp
daa
cmp
dec
cmp
pop
pop
dec
jo
mov
cmp
ds
fwait
aad
in
lods
aam
in
ficompl
idiv
push
and
loopne
mov
jb
aad
lds
inc
jae
popf
mov
lods
movb
ret
jbe
adc
and
cmp
scas
test
mov
push
out
mov
mov
outsl
out
int
mov
push
es
pop
cwtl
mov
iret
fistpll
fistl
xchg
popa
sub
es
pop
add
scas
pop
cli
pop
cmp
fildll
icebp
gs
testb
faddl
add
popa
mov
cltd
fisubrl
xchg
fwait
jmp
js
jge
adc
outsb
xchg
fwait
mov
mov
xor
jbe
lds
mov
jnp
cld
int3
adc
jno
lock
adc
add
adc
adc
pop
xchg
inc
cmp
push
mov
in
incl
pop
subl
xchg
cltd
stos
fisttps
and
fists
popf
popa
push
jmp
lret
mov
pusha
inc
add
jb
out
loop
imul
ret
pop
lahf
mov
xchg
insl
adc
pop
test
aaa
cwtl
scas
jnp
push
rorl
xlat
pop
pop
push
mov
adc
addb
sbb
int3
imul
leave
lret
cmp
or
mov
dec
ret
jecxz
test
mov
push
andb
or
push
dec
xlat
fildll
pop
filds
mov
mov
sahf
pop
hlt
loop
sub
mov
push
jnp
mov
ds
cmp
sbb
fstl
mov
jl
sub
lock
sbb
pop
cmp
xor
es
push
js
push
ficoms
das
adc
test
xchg
in
cmpsb
cmpsb
dec
or
mov
je
sub
push
sbb
hlt
push
je
push
xor
inc
leave
mov
inc
pop
test
xor
fimull
arpl
loop
dec
pop
and
lahf
hlt
ss
mov
fmull
out
bound
ss
jp
inc
test
sti
adc
fnstenv
pop
mov
push
ds
mov
and
pop
pop
jnp
loop
sbb
xor
cmp
lea
out
mov
sbb
mov
rclb
and
pop
mov
and
push
lock
addb
in
pop
mov
mov
or
pop
arpl
rorb
mov
mov
xchg
outsb
adc
fldl
dec
xchg
mov
cmc
out
imul
call
fistps
xchg
mov
and
xor
xor
notb
repz
xchg
lods
dec
fwait
enter
cld
pop
lret
xor
inc
movsl
mov
mov
sbb
xchg
in
xor
pop
lahf
cmp
mov
jo
push
push
sub
stos
mov
mov
cmpsl
sarl
jb
cmpsl
push
loopne
outsl
add
inc
stos
pop
les
add
add
popf
arpl
mov
adc
mov
pop
iret
aas
push
out
pop
test
shl
clc
cmc
mov
sbb
lods
pop
insb
lods
jmp
fstpt
sbb
hlt
adc
je
ret
inc
addl
jne
fs
mov
jne
jo
xchg
pushf
xchg
daa
lea
jno
hlt
jo
rcrl
mov
inc
add
add
sbb
jg
jne
push
jmp
jmp
fmull
dec
mov
mov
add
push
pushf
sub
cmp
inc
cs
cmp
ret
push
pusha
cmp
sbb
das
cmp
or
adc
stos
xchg
subb
dec
dec
jmp
push
sbb
xor
and
dec
lret
lret
loope
xchg
dec
aaa
jmp
call
fstl
cld
icebp
adc
mov
adc
repnz
jle
mov
mov
clc
lods
aas
mov
xchg
repnz
jnp
or
sarl
sub
xchg
out
mov
aad
mov
enter
mov
aaa
aad
adc
pop
mov
sub
pop
xor
mov
cmp
mov
daa
out
sbb
in
dec
in
adc
je
pusha
mov
mov
loope
push
into
rorl
dec
fstl
or
cmc
mov
sbb
mov
icebp
rorl
add
pop
adc
sub
aaa
std
enter
addr16
shl
push
sub
ljmp
ljmp
cmc
fldt
out
jb
loopne
or
rorb
jns
xchg
mov
cmp
enter
jo
lea
sub
outsb
arpl
sarl
mov
inc
mov
ja
xchg
fwait
inc
cmc
sbb
fucom
cmpsb
or
xchg
stos
psrad
push
je
jns
cmpsb
les
and
shlb
sub
xchg
inc
lock
mov
fcoms
mov
ret
movsl
cmp
scas
in
sub
jno
mov
ja
pop
xlat
cli
inc
adc
adc
rclb
pushf
push
pop
shrb
out
lret
mov
sbb
loopne
xor
pop
adc
clc
cmp
pop
add
inc
fwait
xor
or
inc
mov
sub
outsb
xlat
aam
push
das
push
push
pop
insb
inc
xorb
adc
dec
lret
ss
cli
push
jmp
xchg
subl
ficoms
inc
jo
mov
aad
sti
adc
add
or
inc
test
adc
mov
gs
jnp
insl
rcll
sub
jbe
or
lret
dec
ret
addr16
jb
scas
call
inc
jo
dec
stos
hlt
scas
in
aas
mov
mov
arpl
sub
jb
loopne
jmp
sahf
or
sbb
out
pop
sbb
mov
jb
adc
in
pushf
pop
xor
nop
push
pop
jo
in
movsb
mov
fbstp
mov
les
jb
cmp
idivl
push
test
push
sahf
or
mov
shlb
loop
mov
cmp
push
sbb
sbb
stc
mov
mov
shll
lods
or
jmp
mov
fnstsw
dec
inc
fnstcw
and
test
mov
lea
jb
cmpsl
add
mov
pop
cmpsl
push
loopne
push
les
push
sti
cmp
in
adc
movsb
or
inc
mov
jo
test
push
and
out
mov
loopne
movsb
lods
mov
rcrl
pusha
jno
push
aaa
enter
mov
outsb
sti
lds
jp
sub
lcall
add
cmp
out
and
cmpsl
lock
mov
lahf
or
mov
lods
jge
jmp
mov
in
mov
inc
dec
inc
fisubrs
or
stc
cli
int
mov
out
xchg
cli
pushf
xor
repnz
mov
inc
mov
lret
mov
and
inc
push
jo
jl
test
icebp
xlat
sub
mov
nop
outsl
add
and
pop
dec
add
adc
fadds
add
cmp
add
xor
sbb
push
ret
rorl
stc
mov
sub
jmp
cmp
cmp
inc
xor
jmp
pop
jle
dec
mov
cmc
mov
push
xchg
xor
jb
add
int3
lcall
sbb
xchg
sbb
scas
sub
add
sub
mov
dec
xor
test
pop
dec
xor
mov
arpl
pop
pop
out
lahf
inc
ljmp
and
lods
mov
pop
add
lds
scas
jmp
mov
pop
xchg
inc
mov
loopne
loop
push
and
mov
jae
dec
lds
js
cmp
outsb
ret
loop
push
cmpsl
out
fldl
leave
loope
stos
dec
dec
mov
jmp
ds
outsl
stos
test
adc
daa
dec
inc
divl
and
xchg
mov
mov
imul
and
repz
jno
and
std
and
arpl
mov
pop
or
jb
push
mov
cmp
mov
cmp
sahf
pop
dec
or
mov
mov
mov
pop
dec
cltd
ljmp
inc
xchg
nop
testb
push
popa
jmp
xchg
orl
popa
stc
jge
mov
push
iret
jge
ja
ret
adc
popa
adc
lds
inc
fidivs
addr16
outsb
cmp
cmp
sub
repz
test
into
ss
cld
stos
push
and
pushf
sbb
jbe
inc
jbe
mov
fcoms
lret
push
leave
or
pop
lds
pop
push
add
addr16
xlat
dec
ljmp
popa
in
fs
cmp
inc
xor
dec
and
cmpsl
cmc
dec
and
mov
rorl
jg
arpl
es
pop
xchg
xor
adc
or
int3
sbb
pop
stos
xor
incl
dec
push
fistpll
ret
adc
mov
loopne
cmp
and
pop
dec
rclb
or
push
into
or
dec
or
sbb
dec
std
and
adc
sub
push
inc
pop
lcall
loope
cmp
push
test
cltd
xchg
lahf
mov
test
jae
int3
insl
lds
addr16
dec
repnz
imul
mov
scas
sbb
pop
inc
mov
xor
dec
adc
sbb
push
xchg
push
add
xchg
scas
or
outsb
sbb
dec
push
push
inc
jo
jecxz
aam
imul
mov
in
ret
mov
sub
or
xor
mov
mov
out
sub
pop
mov
mov
xchg
and
sti
inc
repz
pop
ret
rcrb
scas
mull
mov
pop
push
dec
and
mov
and
mov
or
inc
loop
sbb
jns
sti
cld
rclb
or
lahf
and
dec
in
insb
jae
xchg
aas
jge
je
pop
repnz
in
test
lret
lock
insl
jp
popf
in
cmp
dec
cmp
fmull
xor
loope
movsl
sub
xchg
sbb
add
and
test
cmp
icebp
aas
fadds
mov
gs
add
call
in
bound
loopne
js
push
shl
push
jne
mov
mov
roll
es
pop
mov
cli
sub
jb
out
mov
xor
mov
xor
repz
adc
loop
push
stc
add
stc
jo
push
idivl
mov
test
jns
cwtl
leave
xchg
dec
shll
or
out
and
arpl
arpl
lcall
pop
sub
jmp
adc
mov
aas
pop
lods
subb
jle
dec
adc
push
orb
jp
cmpsl
hlt
pop
outsl
aas
cli
and
test
xchg
dec
pop
pusha
repz
pop
jmp
clc
mov
imul
push
in
xchg
and
and
adc
lds
mov
leave
cmp
insl
jns
into
jo
inc
xor
xor
fildl
push
pop
lds
dec
jmp
popl
insl
dec
je
sbb
fnsave
push
mov
inc
es
and
rcrb
mov
aad
sbb
sbb
pop
jge
arpl
adc
dec
dec
and
fsubp
cmpsl
repz
es
popf
cmpsb
inc
mov
call
xchg
fldt
maxps
inc
add
jge
mov
cltd
retw
sbb
add
push
push
add
repz
enter
daa
das
scas
and
scas
fisubs
fldt
mov
jge
xchg
adc
jge
or
fucomi
lds
jno
pop
push
popa
pop
popl
in
in
jns
xchg
movsl
cmp
in
dec
dec
je
nop
inc
mov
popa
mov
leave
sbb
dec
mov
in
jmp
lret
icebp
jp
or
icebp
pop
jg
inc
cmp
xchg
mov
pusha
jge
mov
push
fwait
xchg
push
aaa
xorl
imul
cmpsl
inc
js
fdivp
pop
insl
xlat
xor
punpckhbw
add
cmp
jo
shrl
icebp
insb
icebp
sbb
mov
push
pop
mov
addr16
and
adc
and
jb
push
dec
arpl
fisttpll
idivl
aam
mov
out
mov
sbb
fsubrl
lret
inc
rorb
push
dec
push
popf
pop
insb
lea
adc
aas
xchg
repz
pusha
jmp
push
icebp
mov
jbe
sti
loop
jnp
pop
addr16
jne
fstps
adc
test
sbb
jl
popf
pop
push
int3
adc
adc
cmp
push
shlb
ds
stc
lock
fwait
mov
out
test
push
imul
arpl
std
cmp
mov
or
outsb
dec
sub
and
lret
lds
push
xor
mov
dec
push
lcall
adc
pusha
mov
jmp
test
or
testb
push
lcall
add
inc
xchg
in
rorb
test
imul
std
or
pop
inc
mov
xlat
adcl
mov
push
clc
sub
jge
sbb
stos
out
or
mov
dec
fwait
stos
pop
lret
adcl
andb
ljmp
cltd
mov
pop
cmp
cmp
push
inc
mov
adc
call
lock
jg
fcoml
out
aas
xchg
leave
sbb
nop
shrb
mov
je
mov
sub
out
sbb
and
stos
scas
adc
mull
pop
lcall
lds
add
xor
push
addl
cld
sub
iret
mov
push
jno
push
ret
jns
inc
cmp
mov
and
arpl
jg
xchg
adc
rorb
pusha
push
adc
mov
mov
pop
adc
mov
into
aaa
push
aad
pop
cmpb
xchg
xor
ljmp
mov
mov
lret
lret
add
enter
push
lods
flds
cwtl
imul
pop
enter
icebp
push
or
sbb
jbe
dec
sti
jecxz
cmp
mov
cld
adc
inc
mov
xlat
pop
mov
lds
xor
push
and
mov
jno
dec
sub
lods
fldl
xor
bound
cs
pop
fistps
pusha
dec
push
gs
adc
mov
sbb
aad
stc
lahf
rclb
pusha
inc
rcll
sbb
iret
inc
sub
pop
xor
and
inc
scas
and
mov
dec
outsl
mov
iret
repz
stc
rorl
sarl
fisubs
mov
cwtl
mov
add
fimull
sub
jmp
aas
lret
push
xor
add
pusha
nop
scas
xlat
test
lret
das
out
jp
sbb
movsl
lods
push
push
jp
leave
insl
jge
or
iret
loopne
jmp
cli
decb
mov
mov
xchg
jnp
es
sbb
adc
jns
sbb
cs
pop
or
aas
xor
or
repz
loop
das
sbb
popa
dec
aad
push
sahf
push
ja
out
dec
adc
mov
imul
and
mov
lret
or
mov
shll
adc
adc
adc
stos
mov
imul
jge
xor
daa
or
fdivrs
stos
mov
adc
test
pop
inc
les
add
mov
fwait
jno
popf
jno
aad
lret
jno
jmp
push
lea
mov
and
shlb
jle
movsl
sbb
mov
hlt
mov
add
push
fwait
inc
punpckhbw
mov
ss
mov
xchg
mov
fildl
xchg
and
xchg
rcr
jb
cmp
js
push
aam
inc
pop
xor
fldl2t
xchg
shlb
shll
push
xchg
popa
push
jp
sub
mov
add
testl
in
or
rcll
xlat
mov
pop
jnp
xor
sub
pop
lods
push
mov
mov
into
popf
cmp
hlt
mov
outsb
cmc
stc
shrl
popa
add
cmpsl
scas
mov
ja
cltd
or
cmpsb
nop
xchg
fwait
data16
leave
sub
push
js
int3
inc
pop
xor
inc
jge
mov
repz
les
fmul
rcr
xchg
mov
push
lock
inc
in
in
repnz
ljmp
xlat
jae
je
adc
jmp
pop
int
fistpll
into
cmc
movsl
xchg
js
std
xchg
jae
lods
sbb
sbb
xor
sahf
push
fincstp
mov
aaa
jbe
out
push
add
cwtl
mov
xlat
adc
cmpsb
mov
cs
lcall
ror
in
out
les
sub
inc
jl
test
push
dec
dec
jno
jb
out
mov
and
mov
jno
cmp
jge
xchg
js
mov
in
adc
stos
jmp
mov
xor
jns
std
int3
fnstcw
fcomp
jo
add
lock
inc
es
aaa
aad
ds
stc
sbbl
mov
cmpsl
call
jmp
and
xor
fildl
sahf
lods
xchg
inc
fstps
aam
clc
sub
negl
fsubrp
icebp
and
in
pop
jns
jns
sbb
out
rcrb
pop
addr16
mov
or
push
gs
push
aam
pop
ldmxcsr
cmpsb
data16
push
cltd
fwait
add
or
inc
jge
lods
fldz
pop
jns
mov
mov
lcall
jo
xchg
jecxz
inc
lret
mov
insb
clc
pop
out
lret
mov
xchg
js
gs
lods
jns
lods
movl
repz
cld
clc
adc
bound
loope
subl
lret
sub
testl
and
int
ja
andb
in
or
shrb
je
loop
pushf
inc
sar
test
shrb
sbb
and
outsl
xchg
cmp
and
outsl
cwtl
cltd
loop
popf
repnz
xchg
xchg
scas
xchg
insl
xchg
xchg
xor
out
rcl
mov
pop
add
rclb
jg
inc
sbb
cmpsb
cwtl
and
push
mov
shr
cwtl
xlat
scas
in
fs
jg
cmp
lods
mov
xor
insb
and
cld
cmpsl
cmp
ret
cmp
dec
mov
fwait
dec
icebp
sub
pop
jae
arpl
and
pop
iret
mov
lret
jbe
jp
add
mov
icebp
pop
sub
adcl
mov
cmp
clc
jmp
out
xchg
push
es
or
lds
addl
clc
xor
test
pop
imul
stc
adc
popa
jmp
push
movsb
inc
mov
inc
decl
insb
xchg
test
sbb
cmp
lret
add
dec
pop
stc
xchg
scas
xor
add
incl
lods
cmp
mov
inc
or
call
hlt
xor
mov
sbb
xchg
aad
or
xor
hlt
push
cmp
aam
stos
mov
enter
lahf
cwtl
rol
rolb
in
mov
sub
cmp
cmp
dec
ret
xor
adc
cmp
mov
aas
imul
mov
icebp
mov
fdiv
mov
add
pop
add
out
pop
fbstp
rcrl
stc
popa
xchg
add
or
call
lahf
ss
ja
lock
adc
add
mov
xor
loop
add
xor
mov
fisttpll
lret
lret
jl
sbb
cmp
rol
push
xchg
adc
fwait
mov
sbb
rcrb
gs
add
repz
int3
cld
and
pusha
les
push
popf
adc
mov
dec
pop
ficoml
adc
lahf
les
insl
mov
cmp
push
out
cmp
inc
mov
int
in
mov
sbb
cmp
lods
imul
fdivs
mov
mov
out
sub
imul
add
sbb
aad
ret
test
jp
push
rep
stc
push
push
mov
jb
das
inc
inc
aas
call
int3
cmp
aam
jo
dec
push
out
push
and
jns
shll
mov
shl
fdivrs
bound
int
push
sbb
in
xchg
dec
cmp
sbb
lods
mov
mov
push
pop
pop
push
dec
inc
negl
inc
mov
cwtl
in
push
sti
fcmovnu
sarb
in
fcoml
push
push
xor
stos
data16
in
mov
lods
mov
insl
xlat
std
sbb
lret
sti
lret
push
adc
lock
jo
int
in
jne
jmp
xchg
xchg
mov
cmp
fisttps
lcall
notb
inc
xchg
ret
dec
int
mov
xor
shr
pop
pop
add
out
pop
adc
fs
mov
es
jl
ret
mov
jmp
pop
aam
mov
mov
jmp
or
imul
or
fcomps
mov
jle
ja
sub
push
mov
xchg
fistpl
repnz
clc
mov
and
inc
in
mov
push
mov
add
cld
or
xor
pop
addr16
lret
mov
adc
adc
popa
jmp
mov
xchg
test
add
mov
mov
lret
jle
arpl
popa
xchg
inc
xor
es
cmp
jno
mov
adc
ret
mov
xchg
sbb
or
jns
rcll
mov
add
inc
clc
lea
add
sbb
pop
loop
cld
in
push
das
scas
repnz
mov
adc
xchg
add
in
std
xor
fstps
jmp
repz
dec
test
movsb
xor
jnp
xchg
fidivrl
xor
push
call
testb
mov
sub
or
push
loopne
mov
loop
notrack
sub
mov
fdivrs
enter
push
sbb
outsl
sub
movb
or
pop
rolb
sbb
push
jge
int
loopne
mov
mov
test
lds
push
jns
jmp
pop
adc
xchg
stos
pop
fadds
sub
push
bound
jg
into
repnz
push
jbe
jnp
dec
add
test
scas
stc
mov
aaa
mov
push
cwtl
inc
xor
mov
mov
adc
pushf
arpl
ror
mov
insl
ja
pushf
addr16
in
repnz
push
imulb
mov
or
mov
stos
adc
jb
stc
loopw
pop
push
and
in
sbb
or
out
outsb
push
pop
adc
lret
dec
loopne
push
xor
mov
fldcw
inc
jmp
leave
sti
dec
subb
test
or
sub
aam
xchg
sub
and
fsts
mov
inc
mov
push
and
loop
and
hlt
xchg
xchg
cmp
cs
fisubrs
call
aam
imul
adc
mov
shr
and
jne
xchg
mov
int3
mov
and
imul
xchg
push
out
sub
les
ss
inc
sti
pop
cmp
mov
sbb
repz
sbb
sub
mov
sub
inc
mov
mov
test
incb
adcb
mov
mov
cmp
jmp
jae
cli
popw
addr16
mov
aas
push
fsubrs
rcrb
mov
adc
fisubs
outsl
jge
les
mov
mov
leave
push
add
mov
xchg
sahf
xlat
andb
test
cmp
sbb
pushf
or
sbb
sti
divl
out
mulb
xchg
loop
pop
pop
cmpsb
pop
push
xchg
stc
xchg
test
mov
arpl
sub
stos
pop
mov
cs
inc
adc
adc
clc
jno
pushf
xor
cmp
jg
out
or
xchg
insb
xor
jne
sub
mull
sub
sti
shr
mov
and
cmp
fsts
and
mov
mov
add
call
mov
dec
idivb
cli
jmp
out
dec
push
enter
leave
leave
and
cwtl
adcl
xlat
test
inc
mov
hlt
sub
outsl
out
xlat
ret
mov
arpl
mov
andb
adc
movsb
mov
inc
xchg
out
adc
and
out
sub
cmp
or
lcall
addr16
mov
cwtl
push
sub
fnstcw
cmp
idivl
fstp
mov
int
in
push
outsl
dec
xor
inc
les
and
mov
push
and
push
push
mov
stc
add
xor
or
roll
rorb
sbb
mov
aaa
sbb
ret
dec
mov
data16
mov
pop
xor
cmp
push
xchg
xor
addr16
enter
insl
stc
addr16
xor
add
add
ss
xor
lret
gs
pop
stos
mov
push
cmovns
mov
ds
mov
cltd
jb
xor
insb
call
mov
lods
inc
adc
dec
pop
mov
aam
popa
std
sbb
ss
and
push
mov
aas
leave
mov
or
xor
out
dec
outsb
les
loop
fistpl
xor
mov
in
adc
jno
xor
sbb
or
xchg
ljmp
mov
dec
lret
outsb
fwait
or
inc
shrl
pop
adc
push
pop
jmp
push
sbb
and
lock
sbb
leave
frstor
xor
test
pop
push
or
add
into
hlt
scas
pop
push
test
adc
adcl
cwtl
in
mov
inc
pop
xchg
lock
jge
xchg
push
jmp
orl
mov
imul
out
sbb
fs
cwtl
into
push
ret
xor
filds
shrd
cmpl
fildl
sub
addb
fmull
sbb
mov
fidivs
out
call
outsb
in
fldt
cmp
icebp
fstl
jns
xor
lret
push
call
mov
fcoms
mov
ljmp
ret
hlt
cmp
mov
push
inc
cmp
stos
aam
fidivrs
stos
or
lahf
xor
jg
test
jg
or
cmp
dec
lods
mov
jo
ret
pop
popa
push
cltd
mov
sub
pusha
loope
push
enter
test
repnz
mov
or
jp
fldcw
int
fildll
xchg
fidivrs
pop
scas
mov
xchg
mov
lods
nop
mov
mov
xor
int
mov
mov
sub
es
imul
addl
and
aad
mov
test
pop
dec
fadds
std
rol
sbb
cmp
push
or
cmp
test
jmp
outsb
test
lret
mov
pop
dec
or
xor
sub
sbb
add
adc
std
adc
sbb
cld
xchg
adc
out
lret
leave
adc
xchg
push
mov
inc
faddl
jb
push
sbb
mov
or
mov
sbb
je
hlt
test
into
xchg
cmp
inc
mov
push
int3
es
bound
dec
mov
je
jno
mov
imul
in
push
into
mov
ds
in
dec
pop
cmp
ds
adc
jl
fdivs
leave
ror
mov
test
aas
fcmovbe
sbb
sbb
xchg
adc
xchg
cmp
adc
fs
insb
mov
popf
ja
push
xchg
cs
ret
addr16
lret
mov
es
stos
dec
adc
ds
bound
jnp
lret
pop
xor
nop
out
xlat
pop
lock
push
mov
cmp
aam
aam
ss
rcrb
adc
std
std
stos
add
movsb
adc
adc
push
popf
jo
pop
addb
lret
cmp
sahf
lret
push
shr
sbb
dec
pop
outsl
aam
push
fstps
xlat
cmp
gs
jbe
or
inc
jle
mov
sub
pop
out
push
fisttps
mov
and
mov
push
add
and
xor
lods
jno
loop
xor
inc
rclb
push
fidivl
out
fcomip
dec
stos
fisubl
inc
dec
fnstcw
pop
push
adc
test
lret
hlt
mov
and
mov
lret
out
or
lret
inc
push
rolb
test
inc
xchg
enter
mov
cmp
mov
or
arpl
cmpsl
jnp
or
shrb
fnsave
imul
or
xor
sbb
add
sbb
pop
ljmp
nopl
mov
nop
or
jno
aad
mov
push
out
pop
mov
pusha
xchg
cli
aam
xor
ljmp
dec
adc
sarl
imulb
pop
mov
xchg
push
jno
aam
push
jbe
xchg
scas
push
aaa
rcr
stc
lret
ret
push
fidivl
in
pop
addr16
out
push
jle
mov
mull
jp
push
mov
clc
add
cmpb
push
cmp
or
inc
cmp
or
push
mov
mov
in
push
aaa
incl
int3
dec
and
adc
cmc
bound
cli
cltd
ds
and
outsb
and
inc
pusha
jnp
loopne
push
jbe
inc
adc
mov
sbbb
and
xchg
mov
xchg
xchg
inc
fisttpll
sub
jbe
scas
sbb
in
cli
or
pusha
adc
jl
cmpsl
jle
ror
push
in
cmp
repz
or
popa
push
cmp
or
je
test
ja
fwait
cmovns
in
push
pop
jp
insb
mov
mov
dec
sbb
in
mov
add
add
dec
je
enter
fsubs
in
xor
test
mov
dec
call
rcr
imul
pop
mov
movsl
fidivl
mov
jbe
setg
bound
enter
cld
xchg
notb
inc
nop
mov
sub
dec
adc
mov
or
sbb
sbb
inc
and
add
inc
fwait
push
sbb
leave
mov
ljmp
and
out
mov
mov
jb
xor
jge
jns
cmc
mov
mov
xchg
and
jle
fsubs
iret
cmp
das
sahf
cmp
scas
dec
sub
mov
repnz
sub
add
enter
mov
mov
push
popl
inc
dec
lock
adc
enter
roll
sbb
jp
in
popa
jmp
dec
xor
scas
fmuls
scas
daa
xchg
jge
mov
js
mov
pop
lods
in
adc
fisubrs
pop
lret
addr16
dec
lods
shrl
sub
popf
sbb
enter
push
ja
pop
jns
imul
and
mov
mov
test
xchg
mov
xchg
ret
out
sub
mov
adcb
mov
add
dec
shlb
and
bound
cmpb
ret
fwait
add
sahf
inc
cmp
jl
pushf
dec
popa
inc
outsl
lret
bound
sbb
in
sub
mov
std
push
cwtl
xchg
jbe
jge
jl
fistpl
lds
out
andl
jmp
fwait
scas
les
push
dec
dec
cmp
imul
mov
int
fisubl
in
dec
ret
mov
call
lods
pushf
stc
dec
inc
and
jl
icebp
push
mov
into
add
or
mov
lret
ret
idiv
jns
xchg
mov
add
mov
sub
mov
cmp
loope
shl
pushl
sub
xchg
inc
xor
pop
call
and
jnp
mov
xchg
and
jb
push
int
pop
inc
jae
xchg
xchg
jl
and
mov
test
xor
fisubs
lea
pop
xchg
arpl
outsl
lea
lods
subb
inc
pop
nop
mov
dec
pop
std
in
cmpsl
push
adc
lea
rcrb
outsl
mov
ljmp
pop
cld
in
arpl
pop
xor
nop
mov
dec
pushf
push
outsb
and
inc
push
ss
mov
enter
fstl
push
sbb
inc
sub
pop
cs
ss
xor
mov
inc
push
cwtl
out
mov
or
jl
pop
stc
pop
outsb
es
hlt
mov
mov
inc
push
jmp
sti
test
clc
sub
pushf
pop
adc
mov
lret
push
je
ret
loopne
xor
or
fisttps
sti
adc
xchg
lahf
push
mov
jmp
ds
xchg
fwait
cld
jge
push
cmp
push
das
or
stc
addr16
in
jnp
xor
mov
into
les
sarl
or
mov
aam
mov
push
mov
xchg
js
hlt
loop
test
xchg
repnz
mov
out
push
and
pop
sbb
push
xor
or
stc
rclb
jae
es
cmp
addr16
scas
jb
add
addr16
ds
mov
sahf
push
cwtl
xchg
jmp
fs
ficomps
fucomi
cmp
out
out
push
pop
dec
pop
add
cmp
dec
add
in
sub
inc
sub
scas
inc
push
into
enter
ret
xchg
mov
stc
or
cmp
inc
subb
and
dec
std
and
push
ss
loope
add
xchg
jbe
mov
sbb
mov
aam
outsl
addr16
xchg
mov
add
jmp
outsb
iret
add
in
pop
gs
ljmp
cmp
imull
mov
mov
mov
jg
pop
test
xchg
pop
mov
movsb
movl
push
mov
adc
push
ljmp
push
and
mov
pop
pop
pop
xor
pop
sbb
push
gs
jnp
mov
fnclex
aad
les
and
test
bound
sub
jns
push
and
aad
sbb
xor
lods
mov
lret
enter
test
pushl
cli
icebp
sub
mov
cmpsb
sbb
inc
cmp
xchg
sub
sbb
outsb
add
push
mov
and
rcrl
cmp
sbb
lock
shufps
mov
addr16
jnp
ja
insl
mov
mov
jl
inc
pop
dec
lods
add
jns
fldenv
sbb
cld
icebp
add
sahf
jnp
jne
push
dec
ss
ja
ljmp
mov
pop
mov
aad
inc
ret
jl
sbbl
das
push
sub
rorb
dec
jl
mov
clc
data16
sbb
adcl
in
outsl
add
lret
dec
mov
pop
inc
cli
int
push
jno
sahf
cmp
mov
add
ret
cmp
push
sub
jmp
test
ja
outsl
jp
in
and
and
gs
and
inc
das
into
js
add
jno
divl
fcompl
test
cli
pop
lcall
push
sub
pop
shlb
cmpsw
insl
aaa
icebp
fbld
dec
sub
les
and
push
pop
xorl
sbb
in
lods
nop
scas
mov
ret
std
push
push
scas
mov
test
sub
aad
addr16
adc
mov
cmp
test
pop
push
mov
out
inc
xor
pop
fstpt
pop
dec
or
mov
jge
add
mov
jle
cld
xor
jnp
ret
lock
leave
sub
cmp
repnz
shll
jg
mov
xor
mov
pop
add
push
imul
or
mov
pop
push
cmp
divb
mov
xor
sub
fstl
js
loop
jp
lods
dec
aad
push
insl
test
add
push
test
mov
fimuls
sbb
je
push
mov
mov
jbe
mov
xchg
lret
leave
mov
push
lea
inc
xor
cmp
jmp
cmp
xchg
test
repz
inc
jmp
aam
loopne
aas
call
mov
xor
xlat
int
loop
xor
jnp
es
cmp
je
cmp
rcl
mov
push
mov
hlt
pop
lods
push
xchg
rorl
xchg
shrl
test
dec
or
inc
repz
ret
in
push
mov
cmc
fisubs
lcall
push
inc
and
sub
jg
btr
test
mov
rcrl
movsl
into
daa
outsl
xor
movsl
add
in
mov
xchg
stc
aad
lahf
int3
mov
mov
dec
mov
pusha
stc
add
subb
fnstcw
push
les
adc
das
out
in
adc
cmp
mov
fwait
jnp
sub
outsb
adc
icebp
lock
sbb
xchg
jge
sbb
pop
mov
sar
popw
jl
mov
out
mov
mov
mov
mov
mov
in
in
inc
pushf
repz
pop
cmpb
cmpsb
outsl
jne
fdivrs
popa
pop
jae
xlat
pop
fistl
fnstsw
sbb
jb
mov
loope
lret
fmul
pop
dec
push
ljmp
inc
push
push
and
cmp
mov
mov
push
pop
mov
out
adc
or
test
inc
mov
subps
mov
mov
xchg
sub
cld
jae
scas
pop
icebp
sub
rorl
insb
jb
cwtl
dec
and
jecxz
out
xor
push
xchg
stos
dec
xchg
shlb
nop
lock
dec
fisubrs
mov
xor
addr16
xor
lret
stc
call
outsl
or
cmp
dec
leave
loope
xchg
cmp
push
test
test
cltd
ja
shr
mov
out
xchg
jne
push
mov
and
mov
push
ds
cmp
out
lock
inc
push
movsl
sub
enter
ljmp
out
jecxz
add
sahf
movsl
scas
push
push
int3
js
test
out
and
push
faddl
inc
sub
in
mov
popa
or
adc
mov
xor
push
xor
dec
jl
les
pop
add
mov
push
cmp
cmp
mov
jne
add
push
leave
and
dec
jp
pop
mov
out
cmpsl
mov
cwtl
ds
mov
div
jecxz
das
jle
inc
inc
pop
sub
and
ja
xor
jbe
jno
bound
xor
cli
lret
popa
or
jno
mov
mov
out
xchg
push
dec
and
mov
cmpsb
movsl
add
aad
inc
sahf
lahf
inc
bound
loopne
ficomps
xor
outsl
addr16
xor
mov
out
out
pop
popf
scas
jns
rcrl
roll
fnstenv
jbe
jl
adc
ret
imul
push
ret
or
insl
pop
das
inc
fsubl
frstor
mov
jnp
loope
sub
xor
cwtl
lods
mov
xchg
add
sub
jg
dec
add
sub
mov
lock
out
xor
mov
mov
sbb
out
outsb
mov
xor
push
or
pop
cmp
jae
xor
ret
push
xor
adc
jle
add
mov
mov
outsl
popa
std
dec
sub
add
adc
and
cmp
add
jo
outsl
and
mov
les
xorb
xor
pop
jecxz
mov
pusha
fisubs
mov
aad
jge
xchg
aas
mov
mov
loope
fimuls
enter
sub
sub
and
cmp
test
add
outsl
xchg
bound
inc
cmp
cld
dec
sub
sub
addr16
rorl
insb
and
add
push
arpl
hlt
add
cltd
in
aaa
fimull
xchg
mov
and
xor
jl
icebp
addr16
mov
movsb
mov
jmp
push
fadds
inc
xchg
mov
jp
adc
mov
push
jb
cmc
in
pusha
cmp
rcrb
inc
aam
insl
lcall
mov
sbb
mull
adc
mov
int3
sbb
scas
gs
cwtl
inc
add
mov
or
jno
iret
outsl
out
cli
or
mov
sub
jae
cmp
adc
adc
push
mov
int
outsb
pop
data16
mov
pop
pop
inc
mov
sbb
add
test
jecxz
xor
pop
movsb
pop
cwtl
push
aam
cmpsl
dec
mov
adc
xor
add
xchg
mov
daa
call
push
jae
xor
sub
ror
fistpl
aad
aad
mov
bound
rcr
aas
jne
test
mov
arpl
frstor
pop
nop
out
roll
sub
leave
xchg
pop
out
push
rcrb
icebp
xor
dec
xor
or
and
fwait
jns
fwait
xorb
sbb
push
adc
mov
fs
push
ret
pop
in
js
push
xor
mov
jp
mov
popf
popa
push
push
ja
push
aas
push
cmpsl
stc
lret
test
ret
mov
or
ficomps
cld
or
mov
or
push
dec
sar
push
mov
sti
push
pop
pop
movsb
and
jbe
jle
stos
sub
push
in
movsl
pop
adc
dec
jo
fwait
ss
mov
mov
int
sbb
imul
dec
cmc
orl
mov
pop
push
imul
add
hlt
mov
adc
dec
ljmp
fimull
jae
test
ret
mov
ffreep
test
mov
in
push
xchg
jle
push
int
fnstenv
mov
into
cmpsb
jbe
adc
inc
mov
icebp
adc
sub
ds
insb
xchg
in
add
loop
out
mov
and
scas
cmp
scas
mov
or
inc
jp
cmp
inc
out
imul
adc
lods
or
nop
in
mov
pop
mov
push
add
push
mov
or
pusha
adc
imul
aam
out
fsubrs
pop
dec
and
xchg
cmpsl
test
das
sbb
and
xchg
mov
ds
mov
leave
ss
xchg
sub
pop
inc
loopne
loopne
push
in
pop
mov
lds
push
shl
push
fisubrl
addr16
pop
imul
sbb
push
and
outsb
stos
popa
jb
clc
mov
xor
push
je
xchg
pop
inc
and
pop
pop
out
cmp
inc
shl
mov
loopne
mov
fstpl
xlat
inc
add
in
mov
mov
rolb
enter
call
inc
adc
or
jae
mov
cmp
lret
fdivs
mov
jns
mov
daa
dec
stos
inc
jl
add
nop
rcrb
insl
cwtl
data16
xor
das
sbb
mov
popa
fwait
mov
xchg
xlat
and
jno
dec
dec
xchg
arpl
icebp
adc
push
or
jnp
nop
mov
lea
sub
add
lret
fnstcw
sub
pop
call
mov
movsl
xchg
mull
cmpsb
mov
bound
add
mov
and
xchg
inc
leave
cmp
loopne
jmp
pop
adc
jecxz
mov
adc
stc
cmp
lea
or
sbb
hlt
lds
into
jp
mov
jbe
mov
out
js
mov
inc
aas
insl
out
mov
or
ret
insb
cmp
data16
dec
push
mov
subl
outsl
pop
popf
dec
imul
lea
mov
inc
popf
add
xor
pop
push
cld
push
pop
test
mov
les
inc
cs
adc
jo
std
fidivrl
mov
incl
aad
pop
cld
dec
andl
cmc
popf
mov
popa
push
popa
sbb
cmp
push
mov
lods
or
pushf
lock
imul
adc
arpl
sbb
out
inc
mov
mov
mov
or
fcoml
in
pop
imul
jae
jecxz
fstp
xor
mov
jg
inc
loop
mov
cmp
dec
mov
push
xchg
mov
in
arpl
or
cltd
cmpsl
clc
jno
jp
gs
mov
gs
stos
repz
jb
jg
stos
jecxz
sti
mov
movsl
gs
mov
rcrb
xchg
lea
xchg
adc
fisubrs
mov
or
add
pushl
lods
lock
pop
or
jg
xor
jge
sub
xchg
shrb
repnz
in
sub
cmc
push
mov
add
mov
cmp
out
inc
xchg
xchg
pop
into
inc
cmpsb
scas
iret
icebp
sbb
mov
mov
aad
lods
test
iret
adc
lods
add
jge
gs
mov
sbb
pop
pop
and
test
push
jns
int
js
sbb
testl
xchg
xor
popf
popf
xor
mov
adc
clc
sbb
add
add
pop
mov
lods
clc
xorb
rolb
mov
or
lock
dec
and
mov
mov
add
test
cmpsb
inc
fcmovbe
mov
stos
dec
and
gs
in
imul
pop
xor
xor
jo
mov
xchg
les
dec
xchg
mov
inc
outsl
fsubrs
pop
mov
mov
cmp
mov
jns
insl
xchg
sbb
xchg
dec
adc
mov
jne,pt
insl
aam
inc
dec
scas
push
gs
jle
orl
mov
fs
push
and
shl
pusha
out
cs
mov
loope
out
inc
test
mov
push
mov
andl
lcall
ja
stos
mull
mov
jl
imulb
mov
jns
ret
fwait
pop
xchg
paddb
fldcw
sub
loope
push
shrb
push
out
sbb
dec
imul
xor
cltd
leave
or
jae
jnp
push
lret
jb
out
cwtl
scas
pop
sbb
div
or
out
leave
shr
mov
arpl
or
ds
into
mov
dec
scas
imul
mov
cmpb
cmpsl
sub
pop
mov
cld
outsl
lret
pusha
pushf
fistps
faddl
push
mov
fmuls
mov
loop
cmpsb
subb
mov
ja
xchg
test
jne
and
mov
test
fdivl
sbbb
subl
push
ret
jge
jae
popf
jne,pn
adc
jg
ss
rcr
xchg
es
dec
jne
mov
jnp
fs
in
push
je
pushf
es
cmp
dec
and
xchg
cld
push
inc
jne
add
mov
repnz
insb
or
jle
and
jo
lods
stc
pop
add
pop
jg
jg
dec
cmp
test
push
add
lea
ds
cmp
sbb
in
es
sti
loope
cmc
cs
and
int
inc
imul
mov
mov
xor
scas
mov
push
adc
test
pop
adc
pop
lret
enter
in
into
sub
loopne
aas
inc
mov
mov
push
mov
dec
or
sub
push
ljmp
and
xchg
cmp
and
lea
icebp
dec
popa
je
mov
fucom
ja
imul
lds
insb
cmpsb
sub
pop
mov
mov
aas
std
cmpsl
js
xchg
push
hlt
popa
mov
ret
xchg
das
aaa
xor
cmc
jle
mov
add
or
or
mov
mov
imul
jge
mov
pop
cmp
cmp
and
mov
cmp
pop
leave
add
mov
jnp
aad
adc
and
or
sbb
xchg
push
and
stc
mov
xchg
push
dec
xor
test
ret
xchg
xchg
les
sbbb
pop
cmp
fwait
int3
out
inc
stc
fadds
jmp
ljmp
push
xchg
popf
lock
push
sub
aad
sub
pop
rorb
jne
fst
xchg
mov
pop
mov
and
or
mov
sbb
add
xchg
xchg
pusha
mov
dec
pop
fwait
push
dec
add
ret
icebp
rcrb
fsubrs
sbb
pop
adcl
jnp
daa
or
adc
and
dec
xor
cmp
or
mov
lods
aaa
fldenv
lods
rcrb
mov
sub
lret
shrb
add
dec
mov
popa
pushf
addr16
ret
lahf
adc
mov
sbbl
test
or
inc
pop
sbb
push
push
xchg
mov
sub
push
push
leave
and
lods
adc
mov
or
pop
ror
clc
jno
lods
add
mov
cmp
movsl
gs
movsl
andl
shlb
jge
imul
call
loope
loop
shl
in
bound
push
int3
inc
add
iret
mov
and
push
inc
mov
pop
mov
inc
into
fcomps
cmp
roll
sbb
rcr
sbb
dec
out
add
in
lahf
jle
push
adc
push
dec
clc
in
cmp
mov
sub
mov
lods
jb
add
mov
and
ss
xchg
push
lea
sti
mov
xor
sarl
pushf
arpl
push
rclb
mov
jae
rorb
jns
aaa
push
mov
sbbl
int3
fcmovbe
jae
or
push
pusha
push
sahf
imul
je
leave
xchg
pop
mov
or
popa
scas
rclb
ret
push
cli
leave
cs
pop
popf
out
jnp
movsb
std
loope
cmp
pop
stc
es
jp
sub
repz
mov
cmp
lock
dec
pop
or
fstpt
jp
std
ss
ja
mov
fstpt
pop
cmp
sbb
mov
sub
mov
or
out
es
jle
ljmp
mov
cld
fcomps
pop
rorl
loope
cmpsb
mov
sbb
int3
inc
xchg
shrb
cmp
inc
fnstenv
xchg
js
hlt
inc
cmc
mov
movsl
das
mov
pop
aaa
xor
lock
pusha
jns
nop
pop
js
popl
aaa
jne
int3
sbb
movsl
stos
out
bound
rcr
pop
in
mov
pusha
jae
test
repnz
jl
test
arpl
mov
jle
nop
mov
or
mov
out
imul
insb
repz
mov
icebp
insb
outsb
push
cmpsl
sub
cmp
out
add
pop
call
pop
dec
xchg
pop
pusha
dec
dec
pop
mov
fidivrl
jle
xchg
repz
xor
xor
adc
sbb
push
orb
or
push
adc
icebp
stos
mov
jl
fcompl
push
fsubs
push
mov
fstl
outsb
test
sbbl
call
pushf
dec
jecxz
jge
sub
mulb
and
cmc
movsb
cmc
int
sub
test
sbb
xor
gs
scas
stos
mov
fistpll
cld
xlat
enter
inc
mov
loop
mov
push
into
in
sarl
scas
pop
push
scas
cmp
sub
jbe
sbb
xchg
sub
cwtl
out
jmp
loope
in
subl
cli
jmp
sarl
xor
push
mov
or
mov
xlat
negb
push
jmp
roll
stc
inc
lret
sub
mov
test
test
xchg
popa
add
daa
fimuls
sbb
push
sbb
int3
aam
sub
enter
je
aaa
mov
adc
xlat
mov
sbb
pop
out
movsb
adc
mov
xchg
xor
jp
dec
or
add
and
and
push
xchg
jecxz
cmp
mov
in
mov
inc
lods
inc
insl
pop
cwtl
icebp
cmp
cwtl
ds
pop
scas
push
jle
jae
enter
cmp
fs
fdivs
push
push
das
fcom
jne
lret
or
scas
lcall
lcall
pop
sarl
xlat
ss
scas
leave
xlat
push
into
xchg
std
movsb
push
sub
outsl
mov
scas
mov
lret
add
lahf
bound
mov
adc
scas
fwait
in
adc
cmp
inc
xor
xchg
lret
xor
xchg
push
mov
inc
cmp
mov
into
js
push
xor
ds
sub
ja
mov
dec
test
sub
mov
sub
pop
ret
push
pop
nop
adc
mov
xor
adc
popa
insl
pop
jno
insb
cmc
xchg
and
out
xchg
repnz
insl
push
in
negb
sbb
ljmp
dec
rorl
add
call
fiaddl
shll
mov
jno
and
inc
add
in
aad
add
sbb
ljmp
and
fistl
sub
inc
add
insl
pop
jl
movsb
stos
and
sti
adc
in
sbb
or
cli
xchg
es
pop
cmp
mov
sbb
sbb
adc
test
ss
imul
cmp
int3
push
std
xchg
jno
xor
xchg
cwtl
fidivrs
lcall
cmp
loopne
arpl
cmpsb
int
mov
and
rcrb
lock
in
sub
mov
jp
mov
cmp
xchg
jo
push
pop
adc
push
cmp
rcrl
aad
int
cwtl
repz
imulb
push
or
cmpsb
pop
dec
gs
out
add
mov
mov
int
mov
cmpl
sbb
sub
call
clc
inc
stos
or
xor
dec
das
es
push
in
mov
and
not
adc
xchg
fistps
cld
arpl
sbb
mov
or
mov
push
jns
arpl
jge
sub
pop
fs
xchg
push
dec
mov
div
mov
mov
pop
or
mov
cmp
jbe
dec
test
cmp
adc
adc
or
xlat
cmp
jp
int
lcall
or
mov
sub
push
cmpsl
push
dec
push
arpl
pop
mov
enter
out
xlat
fidivs
mov
addr16
stc
pop
fwait
xor
adc
daa
sbb
or
and
push
fimuls
inc
loope
fidivrl
cmp
popa
test
xor
xlat
fidivl
lcall
enter
sub
xchg
or
or
push
prefetchnta
dec
call
xchg
ljmp
and
inc
out
ret
add
lea
mov
dec
fdivs
ljmp
dec
iret
cmp
ljmp
lret
out
or
iret
cmpsb
out
outsl
stos
js
loopne
mov
fs
add
aas
cs
leave
addr16
mov
into
pop
sbb
loope
mov
and
stc
push
mov
pop
imul
mov
fldenv
shl
fcmovu
lock
dec
test
leave
loopne
jp
shrl
xchg
fstpl
and
sub
push
addl
mov
cmp
iret
clc
sti
pop
adc
push
xchg
data16
sbb
inc
xchg
mov
dec
mov
mov
push
and
imul
cli
and
xchg
xor
stc
push
pop
mov
add
pop
ja
sbb
cmpsl
mov
inc
sbb
in
adc
jns
filds
js
dec
mov
inc
pushf
push
xchg
cmp
movsb
xchg
faddl
inc
xchg
data16
insb
iret
lret
mov
stos
lahf
lds
iret
aam
enter
out
jle
inc
mov
shlb
cltd
in
adc
adc
in
mov
mov
das
adc
movsb
mov
lds
mov
xchg
push
xor
adc
adc
push
xor
jl
pop
sbb
cmc
adcb
xchg
fsubr
mov
aad
xchg
or
nop
xchg
inc
push
add
test
inc
fucomp
aas
cmp
das
mov
shrl
xchg
ss
jmp
in
insl
inc
or
mov
pop
dec
icebp
jg
sbb
cwtl
pop
mov
dec
mov
movsl
sbb
aad
mov
lea
dec
call
loope
cwtl
cmp
movsl
xor
sti
xor
imul
adc
push
xor
das
mov
pushf
out
pusha
add
and
cmp
imul
mov
mov
dec
lcall
adcl
inc
push
xor
lock
jp
cli
insb
lahf
call
pop
mov
mov
imul
lcall
jmp
iret
adc
icebp
ss
mov
xor
dec
xor
or
mov
imul
dec
pop
mov
lock
sub
call
shll
repnz
lods
je
data16
clc
enter
mov
pop
mov
mov
es
sbb
adc
mov
inc
xchg
cmp
xchg
xor
mov
and
dec
sub
lret
mov
test
push
loopne
or
mov
rol
je
in
or
aas
adc
std
inc
stos
adc
bound
mov
shlb
in
in
pop
roll
mov
outsl
mov
mov
push
lahf
jno
jge
and
push
sbb
cmp
sub
or
mov
add
cmp
lock
outsb
add
dec
sbb
pop
sub
inc
imul
mov
push
mov
lock
rorl
test
ljmp
jge
addb
mov
out
mov
mov
lahf
in
or
or
imul
in
dec
fnsave
push
lea
jnp
push
mov
jo
sbb
lret
pop
xchg
cmp
adc
les
ficomps
jecxz
popf
sarb
adc
int
fwait
push
mov
sub
movsb
dec
aaa
lcall
outsl
imul
add
inc
jo
dec
mov
call
and
dec
mov
xchg
mov
imul
es
notb
xchg
sub
ret
xchg
scas
sub
mov
scas
push
pop
mov
sahf
push
cmp
xorl
mov
mov
xchg
mov
pop
aas
mov
ss
cmpsb
cld
icebp
jecxz
xor
dec
xor
add
mov
jno
xor
and
ret
hlt
loope
mov
leave
jne
cmpsb
hlt
xchg
repnz
jo
sub
add
xor
inc
dec
mov
les
popf
iret
stos
jmp
push
ljmp
imul
xor
cmp
sub
lcall
out
mov
hlt
out
movsl
fs
ret
fimull
and
sub
call
test
hlt
test
out
adc
lods
stos
dec
dec
or
mov
push
in
dec
ds
dec
lds
in
jmp
jns
mov
jl
sbb
lods
adc
mov
into
cltd
sbb
hlt
dec
push
iret
cmp
mov
out
or
lcall
sbb
cwtl
cs
sub
fistps
stos
mov
idivl
cmp
adc
cmc
test
popa
fimuls
jl
sti
aaa
cmpsl
scas
ss
pop
dec
enter
leave
outsb
ja
sub
pusha
cmpsb
pop
push
stos
push
pop
pop
subb
cmp
clc
dec
inc
cmp
xor
adc
jo
fisubl
pop
pop
imul
lods
xorl
lret
mov
lahf
gs
and
xchg
or
jg
inc
jmp
sbb
fs
out
cmp
xor
pop
cmc
sbb
inc
in
xor
test
xor
sub
lea
movsl
pop
push
xchg
xor
fcoml
daa
int3
pop
fistpll
jns
insl
fistl
std
sahf
scas
ds
fucomi
xlat
lods
xchg
enter
fbstp
repz
mov
mov
jae
lret
pop
sarl
inc
fisttps
mov
jno
inc
xchg
ror
sbb
pop
call
mov
cld
sub
out
les
fdivs
inc
xor
dec
cmp
out
icebp
mov
add
dec
pushf
pusha
pop
lahf
xor
add
rorl
sbbl
stc
rcr
cltd
adc
movsl
push
subl
inc
lods
xchg
cli
outsb
jle
and
in
pop
or
outsb
sub
cmp
ss
out
sbb
shr
cmc
push
adc
lcall
loopne
and
out
fldcw
push
fistpll
mov
and
lahf
pop
or
fs
dec
loope
push
scas
sub
sbb
xchg
or
dec
xor
aas
clc
sbb
pop
jae
or
imul
jecxz
push
pusha
or
daa
push
je
and
test
out
pop
sub
cmp
stos
xlat
out
or
je
inc
fcmovnbe
fcmovnu
rcr
push
mov
std
sbb
sub
jno
addb
nop
nop
mov
fld
xchg
addr16
aaa
cmp
std
xor
mov
fbld
daa
movsl
adc
mov
sbb
xchg
icebp
and
scas
adc
jp
loope
mov
sbb
xor
push
lahf
mov
das
loop
push
xchg
pop
movl
pop
cwtl
jl
sbb
les
fwait
cmp
push
filds
jae
loop
dec
out
add
out
add
or
aas
mov
les
or
ret
mov
sub
jg
inc
psubusb
xchg
or
shrl
scas
addb
aad
sbb
push
loop
push
insl
lcall
ficoms
add
add
fcompl
mov
outsb
fcomp
add
push
sub
adc
cmp
pop
adc
sbb
lret
xchg
testb
fwait
hlt
loopne
lock
cmp
mov
je
fbld
loop
int3
sbb
push
add
dec
push
jae
or
jno
mov
mov
out
das
xor
lea
add
xor
out
xor
mov
popf
fisttpll
xor
dec
cld
aas
ret
movsl
stos
mov
inc
xchg
fmuls
sub
je
or
inc
in
mov
insl
test
cmc
repnz
jnp
cltd
sub
movsl
push
mov
stos
push
push
int3
and
rorl
inc
mov
ds
cwtl
xchg
lds
inc
adc
test
and
outsl
hlt
out
js
dec
cmpsl
pop
xchg
les
adc
nop
mov
leave
cmp
ret
loop
sub
push
push
aam
xchg
js
push
pop
xchg
jae
and
test
push
int3
pop
cmpl
movsl
or
and
push
not
into
outsl
ljmp
push
jmp
imul
jmp
mov
je
popa
mov
loopne
incb
mov
sub
dec
test
fistpl
in
and
jmp
pop
push
mov
stc
inc
mov
sarl
or
add
sub
stos
mov
sub
xor
jno
orl
repz
add
pop
cmp
out
movsl
cltd
jle
insl
mov
fisttpll
jae
popl
js
pushf
mov
mov
inc
fnstsw
lret
dec
and
in
mov
pusha
pushf
mov
and
cmp
movhps
cmp
scas
xchg
out
shll
leave
icebp
imul
mov
nop
mov
or
sbb
icebp
lret
add
add
loop
cmp
dec
pand
cwtl
aam
jle
sahf
sub
jecxz
mov
adc
mov
repz
lcall
sti
push
fcmovne
mov
popl
out
xorl
pop
push
subb
stos
in
push
or
fbstp
je
push
lcall
dec
arpl
mov
aam
adc
lock
stc
sub
fs
nop
lds
pop
into
mov
cmp
stc
pop
mov
lcall
cmpsb
xor
cmpsb
xor
mov
xchg
mov
mov
xchg
je
subl
xchg
sbb
out
out
jnp
shrb
jo
loopne
jge
sub
or
mov
popa
dec
and
scas
dec
repz
xchg
fistps
outsl
mov
add
xor
push
test
ljmp
icebp
push
xor
xchg
jg
pop
ja
aaa
jnp
inc
push
pop
sbb
and
das
adc
mov
jl
adc
push
loop
mov
pop
addr16
les
sub
push
fisttps
addr16
adc
sbb
cld
dec
dec
mov
mov
cmpsb
stos
imul
btc
pop
mov
stos
aas
and
ss
sbb
stos
jp
stos
xchg
and
pop
loope
or
mov
cmpb
loopne
or
sbb
call
nop
pop
fidivrs
mov
sub
fdivrl
pop
push
clc
je
test
shlb
mov
in
jo
jecxz
lock
fwait
movsl
rorb
aam
repz
loope
sbb
in
inc
cwtl
rcr
movsl
imul
xlat
mov
push
pop
jae
lods
pushl
inc
fdivs
or
sub
nop
loope
ja
mov
jp
fcos
inc
cmpsl
jmp
loope
mov
aad
inc
cmp
std
inc
fiadds
in
lock
shlw
mov
sub
mov
pop
adc
cmp
adc
ljmp
ror
push
leave
addl
push
repnz
xchg
cmc
cmp
add
popa
sahf
stc
adc
xacquire
add
adc
mov
cld
ljmp
push
int
enter
push
lret
mov
cs
push
loope
mov
test
idivl
popf
push
mov
in
loop
mov
rorl
icebp
fbld
mov
pop
or
fucomip
mov
mull
adcb
rcl
jge
das
mov
inc
push
pop
mov
pop
rcrl
cltd
jnp
pop
mov
jmp
sub
inc
adc
jp
scas
test
sbb
mov
and
mov
mov
cwtl
fmul
dec
adc
mov
mov
xchg
or
mov
xchg
test
xchg
mov
push
ret
test
or
cmp
daa
arpl
shlb
ficomps
shll
and
push
fcmovnb
popa
mov
out
mov
pushf
call
pop
mov
xor
push
cs
jecxz
cmpsl
jo
arpl
sti
jne
fbld
fs
arpl
aaa
mov
add
adc
pop
pop
xchg
mov
push
push
cwtl
negl
push
push
xchg
lock
ret
and
or
xlat
xchg
cld
push
cmp
mov
mov
in
outsb
out
push
out
cmpb
add
daa
das
nopl
mov
addr16
sub
push
xor
push
dec
aam
mov
fwait
cmpsb
lcall
inc
cmp
inc
push
dec
push
inc
mov
cld
shll
mov
fnstsw
sarb
jno
repnz
repz
xchg
or
mov
adc
push
imul
in
in
int3
jp
push
jge
xchg
sub
jnp
rclb
push
fcoml
mov
jno
cmc
iret
mov
test
pop
mov
pop
lods
rclb
fldcw
jno
rcll
and
insl
sbb
xlat
mov
add
dec
fs
pushf
sahf
popa
popa
and
xor
sti
mov
push
subl
push
int
sarb
xor
imul
xor
je
fcompp
ret
cli
sub
xor
sbb
jge
jo
fbstp
shlb
xor
sub
sbb
inc
int3
push
ret
pop
aad
cwtl
js
pop
adc
or
adc
and
outsl
add
rcr
pop
or
incb
call
or
adc
dec
sbb
sub
add
xor
leave
ds
cmpsb
cld
mov
mov
sahf
dec
jae
inc
add
push
lret
cmc
not
mov
lock
rorb
stos
iret
xor
test
mov
mov
xchg
in
adc
clc
pop
pop
mov
add
mov
orb
shrb
inc
lcall
push
jns
add
sti
data16
and
ds
call
addr16
inc
jno
inc
mov
xor
cld
arpl
pop
mov
mov
lret
mov
mov
out
jl
jge
dec
cmpsl
xchg
push
jb
fwait
dec
loopne
jmp
mov
std
inc
imul
imul
loopne
cmpb
ja
stc
lds
aam
cmc
data16
xchg
jnp
push
out
xchg
daa
push
mov
dec
gs
iret
in
pop
inc
xchg
and
repnz
call
add
mov
out
add
out
lock
push
popf
jle
cmp
das
shll
fcompl
mov
push
push
or
dec
push
xor
scas
enter
push
nop
ret
pop
repz
icebp
flds
enter
jno
icebp
cwtl
inc
cltd
cmp
data16
pop
fstps
mov
je
lret
mov
sub
lea
loop
push
push
sbb
cltd
mov
inc
notl
lods
clc
xlat
cmpsl
fs
arpl
xchg
js
and
or
pushaw
in
add
jg
enter
int3
ljmp
insl
hlt
jl
stos
rcrl
push
push
je
mov
cmp
fs
sbb
add
or
cmp
xchg
pop
mov
mov
dec
lods
cmp
adc
and
pop
lods
test
jo
sub
jmp
mov
add
jl
jmp
xor
cmp
stos
cs
fiaddl
test
in
insb
in
insl
xchg
xor
xor
lock
cmpsb
loop
lods
stc
ret
stc
jmp
xor
sti
adc
bound
insl
iret
arpl
cmpsl
scas
add
adc
psrlw
ret
leave
xor
jp
sahf
std
clc
and
sub
pop
fistl
js
add
sub
out
adc
jae
inc
adc
adc
lcall
dec
pop
dec
sub
aaa
cmpb
aad
jl
stc
aad
std
xor
imul
dec
mov
fcoml
ss
mov
in
xor
jbe
imulb
adc
and
cmpl
or
push
adc
xor
repz
ficoml
fsubl
push
scas
add
push
addl
ret
push
je
sub
enter
add
cld
dec
shrb
pusha
scas
mov
test
xchg
nop
sarl
mov
shr
and
or
and
addr16
dec
test
mov
shlb
imulb
fildll
mov
mov
pop
out
test
testb
pusha
cmp
cmpsl
arpl
mov
xchg
xlat
data16
lods
adc
dec
das
mov
dec
push
mov
mov
jno
fbld
jmp
mov
popf
loope
mov
sbb
inc
mov
popf
insb
pop
ja
jnp
or
sti
bound
fsubs
gs
or
and
adc
jge
movsb
filds
sbb
inc
movsl
xor
lock
and
cmp
iret
lock
pusha
sbb
xchg
sbb
inc
pushf
dec
xor
and
scas
add
inc
inc
adc
pop
inc
fwait
push
dec
adc
push
es
lds
ret
stos
les
sub
inc
and
jge
xchg
sub
shrl
testl
inc
pusha
enter
iret
add
push
push
cmp
cmpsb
cmp
sbb
push
aam
jp
aas
xlat
mov
xchg
mov
xchg
lds
rcrb
add
mov
fcoml
mov
out
fs
pop
les
lods
dec
movsb
cs
out
int3
jge
xchg
mov
fsubs
mov
mov
lods
xchg
test
in
xor
sub
mov
mov
cwtl
loope
dec
jp
sub
xchg
mov
aad
mov
xchg
testl
ds
pop
jnp
bound
jb
aaa
jg
dec
mov
fbld
or
sub
imull
mov
inc
and
adc
push
int3
scas
les
cmp
out
dec
loop
jl
out
fmull
sahf
test
pop
cmp
mov
mov
imul
stos
stc
fs
mov
xor
push
or
movsl
xor
in
push
or
jl
mov
cmp
jno
push
cld
mov
dec
decb
out
pop
mov
lret
sbb
andl
sbb
and
and
incl
cmp
inc
xor
add
xor
mov
cwtl
xchg
cwtl
cld
pop
mov
push
xor
and
stc
jmp
sbb
jne
mov
cltd
xchg
and
and
push
jae
hlt
addr16
call
lds
lea
into
fnstsw
xor
pop
xchg
adc
adc
jmp
xor
sub
mov
sarb
movsb
popf
jg
cmc
sahf
xchg
loopne
adc
shrl
dec
insb
push
sbb
cld
pop
sbb
inc
push
and
push
sub
pop
sub
das
xchg
ja
testb
inc
sbb
test
xorl
jmp
jo
into
lds
cwtl
out
lods
cmp
inc
add
sbbl
mov
rolb
mov
dec
pop
insb
add
pushf
aad
mov
jle
cmp
mov
int
sbb
sub
inc
jp
fiaddl
pop
jne
pop
mov
lds
xchg
dec
das
xchg
adc
mov
and
inc
add
aam
call
sub
lret
je
fisubl
mov
inc
adc
mov
mov
inc
pop
addr16
jno
push
fisttps
loopne
adc
arpl
leave
or
push
cmp
pop
in
mov
mov
push
aas
shrl
fadds
mov
jecxz
aad
pop
pushf
xor
gs
rorb
mov
test
dec
sbb
fiaddl
div
cmpsl
clc
xor
bound
adc
add
push
mov
pop
pop
gs
out
dec
insb
in
addb
movsl
mov
pop
or
sahf
int3
dec
push
or
and
xchg
gs
clc
stos
add
mov
xlat
cmpl
mov
jae
scas
mov
fcoml
add
movsb
out
addb
sahf
mov
push
lds
push
lea
loopne,pn
dec
xor
mov
and
inc
cwtl
add
and
pop
daa
notb
mov
and
mov
cmp
pop
pop
and
xchg
inc
in
into
fistps
dec
cmp
xabort
sub
outsb
pop
test
add
fs
xchg
cmp
bound
mov
scas
jmp
sti
icebp
add
lcall
or
sbb
cmp
add
rorl
mov
decl
jbe
sarb
sub
or
and
cmp
add
orb
sbb
imul
addr16
dec
stos
ficoml
jmp
push
mov
sbb
das
and
repz
add
mov
or
test
stos
lret
aam
ljmp
imul
in
or
sahf
push
cmp
lods
popf
int
sub
loopne
xor
push
mov
gs
jne
adcb
sub
loope
pusha
insl
lret
daa
loop
sub
mov
sub
inc
inc
mov
or
mov
repnz
cmp
add
jmp
sbb
out
pop
mov
js
mov
es
cmp
movsl
test
into
in
and
movsl
adc
push
enter
push
and
das
and
xorl
lahf
mov
ljmp
int3
loop
push
lds
mov
cmp
test
mov
push
sahf
pop
mov
sbb
dec
adc
push
xlat
pop
mov
cmpsb
inc
popa
push
xor
mov
sbb
mov
sub
lds
in
lds
inc
mov
ret
cli
stc
mov
imul
sub
jmp
movsl
mov
adc
inc
adc
sub
push
xor
fsubrs
or
hlt
sbb
dec
xchg
fucomp
xchg
pop
push
inc
hlt
mov
mov
cwtl
dec
in
insl
adc
dec
and
xchg
xor
outsl
cmc
mov
lods
sub
jns
in
xor
mov
cli
lea
xor
es
movsl
sbb
xor
mov
mov
inc
ljmp
jno
jmp
adc
push
or
push
pop
daa
sbb
sub
popa
pop
loop
cmp
lock
mov
fmull
push
cmp
inc
add
jge
pop
dec
pushf
aas
test
inc
sbb
hlt
mov
or
jmp
nop
out
mov
or
pop
aaa
rcrl
push
ret
mov
mov
jecxz
mov
xchg
in
arpl
into
push
sub
adc
sahf
loop
mov
inc
dec
adc
ljmp
pop
in
sub
add
repnz
mov
push
adc
lahf
jns
mov
lock
sub
aad
mov
movsb
fldl
sbb
sub
aam
scas
jge
addr16
sbb
bound
inc
dec
movsb
mov
adc
push
jmp
pop
fadd
hlt
lea
adc
push
and
pop
idivb
data16
dec
inc
mov
or
fwait
xchg
jmp
scas
xorl
mov
je
mov
stos
xchg
adc
lahf
jne
cmpsb
stos
cmpsb
mov
inc
or
push
idivl
in
jl
cmpl
ja
aaa
sbb
sub
scas
adc
pop
mov
leave
sbb
or
cs
mov
inc
in
dec
cmp
pop
inc
leave
or
daa
inc
arpl
push
mov
push
sub
sub
cmp
out
scas
jne
into
adc
test
movsl
or
in
jb
loope
sti
fcoms
repnz
fisttpll
in
mov
cmp
mov
imul
daa
mov
inc
enter
movsl
cmp
fs
fsubp
arpl
notrack
shrl
and
out
clc
jmp
lods
aad
fisubrl
inc
mov
mov
cmc
ja
lods
xchg
dec
ret
loop
mov
nop
mov
xchg
imul
adc
adc
sti
cmp
ret
sub
iret
jns
jns
test
ljmp
out
ljmp
cmovle
sub
popa
dec
and
pop
fisttps
andl
xchg
mov
je
pop
jnp
loopne
pop
cli
push
mov
daa
pop
xchg
loop
cmc
mov
add
jmp
mov
inc
int3
cmp
jae
test
cwtl
xchg
pop
xor
pop
jno
and
movl
xchg
mov
pop
stc
roll
inc
stos
aas
sub
mov
push
inc
pop
sbb
xchg
sub
fs
fisubl
ficoms
add
sbb
in
or
adc
cwtl
js
icebp
adc
xchg
sbb
xchg
mov
xchg
cmpsl
cltd
mov
or
jns
aaa
xchg
daa
int
mov
pop
mov
outsl
decb
sub
std
lahf
and
mov
cmp
xor
mov
and
mov
mov
adc
and
jmp
call
aas
pop
and
jp
aaa
mov
or
in
pop
call
fs
rcrl
jp
insb
xor
fcompl
pop
adc
pop
aaa
lahf
cmp
xlat
and
popa
mov
lods
pop
in
lods
lahf
xor
push
mov
xlat
push
mov
adc
lret
stos
jmp
adc
or
sbb
in
cwtl
pop
mov
mov
hlt
lds
lock
fsub
stos
cmp
mov
icebp
in
xor
mov
leave
imulb
call
ret
mov
stos
lds
mov
pusha
enter
lahf
jns
and
xlat
fmull
insl
aam
ret
jb
jnp
xor
shr
lods
jne
push
insl
loopw
mov
xchg
adc
hlt
addr16
mov
push
mov
inc
imul
inc
xchg
inc
insl
std
pop
fadds
pop
or
scas
pop
inc
cmpsl
icebp
frstor
mov
mov
or
cmp
adc
out
mov
lods
sbb
xchg
jmp
arpl
jae
les
xlat
dec
pop
cli
cs
adc
sub
out
jmp
in
cmp
xor
and
test
cltd
and
inc
dec
dec
movsl
jp
fists
pop
mov
add
cmc
nop
mov
aaa
and
mov
push
scas
ljmp
sbb
in
pop
inc
inc
xchg
mov
push
push
ror
rolb
shl
nop
mov
ret
popf
cld
je
jecxz
or
sti
cmpsl
jp
cmp
mov
les
adc
mov
stc
data16
imul
or
or
dec
out
lret
sub
add
cli
add
bound
inc
or
add
int3
cmp
in
lret
imul
xlat
xchg
test
jnp
sbb
clc
push
adc
stos
outsb
cmp
cs
lahf
ret
xorl
mov
hlt
ret
les
movsb
jmp
out
lahf
les
jnp
stos
movsb
iret
rcrl
std
jp
shrb
call
adc
stc
sub
in
xor
enter
mov
notb
xor
inc
ficomps
add
pop
add
into
stos
rcl
mov
push
mov
push
lods
sub
in
mov
cmp
dec
mov
stos
and
les
xor
mov
addr16
in
jl
out
xor
movsl
push
mov
es
adc
pop
pop
loope
pop
mov
pop
cmpsb
adc
sub
sahf
bound
fwait
xchg
out
xchg
dec
cmc
test
out
out
divb
fstpl
stos
inc
adc
push
shll
xchg
pushf
insl
in
sbb
cmp
adc
stos
push
movsl
jp
push
xor
mov
jl
cs
test
sub
dec
adc
push
xor
push
mov
add
pop
cmp
xor
sbb
lods
dec
fst
test
test
xor
mov
dec
xor
inc
cwtl
xor
popf
xor
cs
pop
ljmp
lcall
lods
or
dec
xchg
xchg
int3
rcr
xor
pop
sarl
arpl
mov
cmp
lods
int
push
mov
outsb
or
sbbb
scas
out
lea
std
mov
cmp
pop
jae
xor
addr16
test
movsb
sub
movsl
aas
and
jb
sub
test
mov
stc
hlt
scas
addr16
inc
jnp
push
cmp
adc
sbb
test
jnp
es
xor
adc
sbbl
imulb
subb
mov
gs
cmp
notl
xchg
or
sbb
hlt
call
pushf
scas
leave
jl
xlat
sub
xchg
jle
fs
dec
shlb
sub
xor
vpaddd
cli
movsl
add
mov
or
addl
out
cmp
scas
jmp
divl
xchg
lds
lret
arpl
ss
ljmp
cs
push
mov
lret
mov
inc
cmp
out
ret
daa
xor
add
xchg
pop
inc
mov
sub
add
jb
xor
push
out
and
jns
out
sbb
xlat
lea
xchg
std
lret
mov
gs
inc
sub
enter
push
jno
je
sti
lods
pop
cmp
mov
loopne
int3
pop
stos
scas
adc
dec
shll
mov
out
popa
adcb
aad
xchg
xchg
inc
mov
and
loopne
in
mov
dec
ja
ljmp
fcompl
test
hlt
aas
in
push
rcrl
out
xchg
jb
pop
das
in
test
jmp
lods
in
push
mov
stos
shlb
les
push
and
cld
movsl
cltd
push
push
adc
mov
xchg
or
mov
je
mov
sbb
nop
adc
aad
fdivrp
sarb
insl
sbb
mov
roll
lcall
mov
adc
das
test
dec
out
fsubl
test
popa
pop
popf
cltd
pop
jne
push
jmp
imul
xor
pop
pop
lret
dec
and
dec
jb
jg
dec
lcall
movsb
sub
jbe
addl
mov
xchg
cwtl
inc
in
xor
notb
ror
out
ret
push
mov
scas
cli
int3
push
adc
in
ss
push
pop
mov
cmp
cmc
outsb
inc
sub
push
dec
seta
mov
addr16
xchg
int3
pop
repnz
xor
pop
xor
add
xchg
in
jb
push
nop
push
push
cli
sbb
inc
out
test
push
xchg
repz
and
and
sti
xor
addr16
inc
lods
mov
into
scas
rcll
push
in
icebp
inc
insb
cmc
and
das
jp
add
xchg
test
cmpsb
jmp
stc
add
ja
dec
mov
push
mov
mov
jecxz
mov
or
enter
add
es
loope
shlb
clc
ja
mov
add
xchg
out
push
fucom
inc
loop
push
fxch
pop
xchg
push
out
xchg
outsb
sub
hlt
sbb
jl
xchg
into
or
jae
adc
les
fimull
call
push
adc
enter
xchg
fisubrs
pop
jle
in
cmpsb
lock
cmp
dec
mov
mov
adc
stos
inc
jo
pop
repz
jns
fwait
mov
call
jbe
sub
and
clc
push
push
movsl
shrb
mov
negb
hlt
adc
pop
xchg
mov
frstor
repz
ret
dec
cltd
xor
inc
or
jae
cmp
sbb
or
dec
ret
push
mov
sub
out
adc
je
ja
cmpsl
push
sub
fsubrl
and
mov
popf
sub
lock
popf
mov
rcll
nop
cmc
cmp
aas
test
and
pop
jno
out
jge
cwtl
movsl
mov
cmp
rcl
mov
xor
xchg
xchg
sub
sub
mov
mov
call
and
xchg
cmpsl
cmp
into
pop
pushf
loopne
mov
decb
mov
lods
mov
js
adc
and
xor
cmp
rorb
add
leave
repz
insl
add
or
sub
mov
movsb
mov
pop
jp
mov
lahf
out
cmpsl
out
adc
rcrl
out
lret
fildll
or
daa
inc
das
cwtl
push
stos
xchg
inc
or
icebp
xchg
test
jg
adc
sahf
sbb
add
mov
fadds
sbbl
add
test
inc
js
sub
mov
lcall
xchg
push
loope
xchg
mov
sub
lret
push
ds
lock
nop
out
movsl
xor
stos
int
cltd
sub
xor
add
add
insl
jmp
loope
fnsave
and
sub
iret
enter
mov
jle
jno
popf
aaa
mov
jge
lds
mov
inc
mov
mov
adc
inc
add
mov
mov
push
out
adc
mov
loope
dec
hlt
xchg
mull
mov
cli
xchg
stc
jne
xchg
add
cmpsb
shrl
ljmp
movsb
mov
jmp
or
cmpsl
dec
test
pop
cmpsb
pop
xchg
push
mov
push
cmp
pop
cmp
test
xor
stc
inc
or
jl
jnp
xchg
jge
push
adc
in
dec
push
mov
loop
sub
in
mov
cli
inc
mov
push
mov
xchg
sbb
dec
movsb
movsb
push
dec
pop
or
push
inc
jo
orl
cli
sub
xor
stos
add
shrb
js
movsl
fstps
movsb
sbb
mov
push
andb
outsb
daa
push
cmp
jb
or
in
nop
es
sahf
push
inc
fsubr
test
int
dec
daa
test
dec
xor
mov
or
fdivrl
jle
orb
dec
mov
pop
mov
cmp
int3
jmp
lretw
leave
shrl
in
clc
xchg
mov
push
andl
jmp
andb
fcmovbe
mov
ret
shlb
mov
push
test
dec
mov
cmc
icebp
mov
in
xchg
rorl
inc
sbb
sbb
rol
aas
xor
xchg
jns
sbb
out
gs
pop
pop
js
ja
dec
bound
push
cli
mov
cmp
out
aad
lcall
adc
cmp
cmp
jnp
or
jbe
incl
inc
cltd
jo
ret
sub
sti
test
pop
cmp
gs
push
fidivs
sbb
ret
mov
fcompl
out
or
inc
jge
call
sub
std
out
loop
test
push
bound
test
mov
test
enter
pop
rcrl
jno
ret
adc
add
pop
dec
dec
out
mov
das
outsb
insl
loopne
xchg
pop
jmp
add
mov
mov
push
inc
xor
jo
xchg
pop
loopne
aas
xchg
push
in
xor
and
hlt
inc
xor
push
ret
daa
aas
pop
popa
add
xor
pop
inc
jb
rorl
mov
xchg
mov
dec
add
ret
push
mov
loopne
pop
mov
cltd
cwtl
out
add
movsb
add
dec
and
hlt
jo
aas
inc
xchg
xchg
mov
int3
push
test
cmp
out
ret
sbb
mov
xlat
xchg
lret
push
mov
aas
bound
dec
lcall
xchg
out
pushf
mov
divl
or
and
cltd
jb
pop
cmp
pop
jecxz
add
jnp
push
mov
ljmp
mov
fldenv
dec
mov
sbb
push
add
es
cmp
cmp
xorl
movsl
mov
dec
fnstcw
cmp
push
les
cmp
lahf
xor
inc
sahf
movsl
cs
cmp
rorb
xchg
out
int3
orb
dec
rorb
fimull
imul
and
fidivrl
lods
lods
mov
test
popl
adc
jne
xor
call
push
out
inc
lcall
enter
cmc
xor
jg
inc
jb
rcll
xor
icebp
jno
in
hlt
sub
cmp
shll
std
or
mov
adc
xchg
xor
or
sub
mov
lods
mov
xor
out
cs
jno
jge
not
lds
or
por
iret
pop
dec
inc
pop
adc
pop
jne
pop
jns
std
jns
lods
add
mov
sbb
push
and
ret
bound
mov
stos
cmp
test
and
push
pusha
sbb
incb
xor
jb
fcomps
jmp
cmovo
cmc
test
lods
mov
sbb
rcr
add
lods
ss
mov
dec
or
ljmpw
mov
fcmovnbe
jmp
jle
aad
add
or
movsl
pop
leave
test
jo
jge
inc
ss
cmpsb
daa
xchg
outsl
fisubrl
xchg
dec
je
mov
push
jb
lea
mov
jo
mov
aam
xor
mov
pop
inc
mov
inc
leave
push
fistpl
pop
int3
mov
dec
pop
mov
leavew
mov
lock
dec
or
movsl
jno
ja
inc
cmpsb
call
ss
repz
rol
cmc
mov
idivl
sub
mov
popf
jo
or
push
push
out
das
jnp
pop
mov
orb
fstpl
ja
repz
out
insl
and
xchg
arpl
jle
test
out
adc
lods
mov
dec
cmp
mov
aad
lret
mov
testl
loope
push
mov
mov
lret
mov
lock
inc
cmc
add
add
in
inc
cltd
inc
xchg
bound
mov
mov
call
jno
scas
movsb
sbb
sti
out
popa
addps
cmp
fs
aas
mov
popa
outsb
dec
push
cmp
bound
call
mov
or
lret
lahf
sbb
lea
mov
jae
std
jg
and
fsubl
data16
test
sub
fld
sbb
adc
inc
mov
in
or
sbb
ss
mov
push
mov
clc
repz
lcall
mov
mov
mov
dec
pop
sub
dec
lret
xchg
ja
ss
ret
dec
stos
popa
mov
sub
loop
pop
ficoml
pop
testb
xchg
sub
ret
cmpl
lds
or
lahf
and
int3
outsb
out
repz
push
lods
add
mov
movsl
or
repnz
filds
insb
les
arpl
data16
xor
or
je
jns
jmp
pop
xchg
imul
dec
mov
add
push
inc
adcl
push
rorl
jns
xchg
xor
push
add
or
in
out
dec
sub
sub
mov
and
ja
movsb
out
scas
cld
sub
or
aaa
rcrb
vpcomb
rcrb
pop
pop
lret
mov
xor
cmpsb
fisubl
cmpsl
and
cmp
inc
sbb
add
sub
mov
jp
sbb
add
rolb
shll
cmp
or
nop
sub
addr16
jne
xor
dec
cli
in
cmpsl
mov
fdivl
lcall
sub
leave
jne
test
jmp
ret
or
xchg
xchg
daa
cmp
cmp
or
cmp
mov
shll
sub
jp
rclb
and
fcoml
fistl
jl
lret
leave
mov
push
push
and
sub
or
dec
and
stos
es
mov
sahf
nop
sub
push
push
std
std
test
mov
add
dec
sub
pop
fwait
ds
out
insb
ds
and
push
pop
xchg
es
pop
test
mov
cltd
lcall
mov
mov
jmp
jl
adc
cmp
pop
mov
dec
add
cmc
cld
ljmp
hlt
xorb
outsb
jbe
mov
stos
cmp
loopne
adc
ret
mov
jle
inc
xchg
mov
mov
out
test
xor
mov
fsubl
cmp
inc
mov
lea
loopne
push
xor
xchg
cmpsb
or
pop
cld
nop
je
call
or
call
popa
aad
cmc
les
sub
sub
stos
mov
jp
ja
out
loope
xor
xchg
mov
mov
sar
rorl
inc
clc
xchg
aaa
mov
test
dec
dec
cltd
add
mov
cmp
xchg
stc
mov
and
cmp
sti
scas
loop
cmpsl
test
xor
imul
push
ret
imul
push
sub
minps
cld
test
pop
pop
and
pop
jnp
into
sub
stos
cmp
ds
testb
sub
pop
popf
imul
add
add
inc
push
cmc
or
mov
loop
out
sbb
lret
mov
addb
shr
movsl
xchg
adc
xor
out
and
inc
iret
cmp
popa
sbb
jmp
insl
jae
faddl
push
push
ror
test
mov
les
cli
and
aaa
lods
dec
mov
and
cltd
sarb
and
sub
xor
insl
rcrb
stos
lahf
and
leave
outsl
adc
jne
faddp
add
shlb
idiv
dec
sbb
push
push
lret
adc
fisttps
in
jae
mov
testb
dec
fsubs
jae
mov
repnz
test
mov
sub
inc
pop
jmp
repnz
in
adc
fst
mov
into
into
loopne
fadds
add
daa
mov
rcrl
push
jle
mov
and
out
ljmp
mov
imul
xchg
outsl
js
sbb
sub
rclb
or
sub
add
inc
push
aam
cmp
pop
sbb
imul
repz
adc
jno
mov
and
in
das
cmp
ja
ljmp
mov
pusha
outsl
sti
lret
or
xchg
push
and
popa
jl
mov
fidivrl
jne
push
ss
jmp
inc
jnp
mov
mov
push
dec
xor
mov
push
hlt
test
xor
ljmp
pop
jno
mov
mov
popf
inc
pushf
sbb
mov
std
out
dec
sbb
xor
rcrb
rol
vmovsldup
jns
out
pop
jns
ss
jl
jle
std
je
out
push
xchg
mov
std
adc
imul
and
nop
in
push
and
and
mov
es
mov
xchg
sub
xchg
lock
inc
xor
adc
or
sbb
cmp
je
dec
push
lcall
mov
in
add
pop
or
fcoml
dec
hlt
pop
ljmp
xchg
and
sbb
sub
sarl
jmp
jae
repz
xor
repnz
dec
mov
mov
insb
cmp
inc
imul
repz
fimuls
addl
sti
pop
lret
sarl
lret
inc
adc
add
popf
and
out
xor
pop
adc
divb
int
mov
out
mov
and
jo
cmp
cmpsl
arpl
xchg
lret
popa
and
jns
pop
sahf
xchg
push
cmpsb
imul
pop
push
lret
fwait
push
pop
dec
stos
dec
movsb
mov
mov
sub
dec
negb
out
in
dec
popa
pop
inc
rcl
xor
stc
mov
lea
or
fwait
mov
data16
add
sbb
add
test
jg
pusha
fisttps
inc
xor
icebp
mov
mov
sbb
das
adc
mov
in
xor
mov
shrl
call
std
cs
into
pop
add
inc
push
sub
and
movsb
mov
adc
sub
movb
in
and
int
adc
push
jp
push
jae
or
loopne
sbb
pop
pop
sub
into
xor
adc
movsb
fwait
mov
pop
loopne
test
cld
test
or
and
sub
cmp
lea
mov
mov
dec
mov
and
stos
or
dec
add
mov
add
cmc
fcmovb
sbb
mov
mov
and
adc
jmp
dec
je
inc
lret
pop
es
xor
add
in
dec
lods
std
es
cli
jbe
mov
mov
arpl
mov
aad
scas
pusha
jne
jne
pop
ret
jne
dec
loop
repz
add
pop
sahf
dec
dec
xor
outsb
bound
sub
icebp
mov
shll
inc
std
and
jb
sarb
jmp
shr
fmuls
ror
lods
ficoms
push
lds
insl
pop
ror
jg
repnz
mov
into
bound
pop
dec
pop
scas
ja
xchg
call
outsl
mov
push
ds
xchg
mov
in
cmp
mov
fnstcw
jp
repnz
sarl
into
adc
test
in
das
insb
mov
pop
push
inc
add
shrl
adc
ljmp
enter
daa
adc
dec
adc
cld
mov
pop
out
repz
add
ss
mov
out
mov
dec
inc
insl
inc
jno
mov
adc
jno
push
shll
clc
pushf
arpl
xor
add
sub
cmp
jp
rol
adc
fwait
xlat
and
or
inc
or
pusha
ss
in
add
adc
cmp
out
insb
cmp
push
test
shrb
cs
dec
or
cli
mov
pop
mov
jne
adc
mov
test
aam
sub
icebp
jp
jae
aas
lret
jne
xor
loope
repz
enter
jmp
scas
lahf
negl
insb
add
sbb
sub
sub
push
mov
movsl
sti
mov
pop
push
pop
push
aas
icebp
ret
nop
mov
shll
pop
inc
aad
addr16
adc
add
push
mov
pop
cmp
mov
mov
push
sbb
adcl
pop
jge
clc
xchg
and
or
loop,pn
dec
in
jb
cmp
pusha
fistpl
js
sbb
xchg
pop
mov
mov
xor
repnz
fst
or
lods
xchg
pop
rcrl
in
inc
dec
mov
sbb
hlt
adcb
and
mov
mov
jg
loop
cmp
cmp
ja
fisttpl
int3
outsb
or
aaa
push
mov
int
insl
jg
mov
or
mov
test
add
xchg
cld
xorb
xor
movb
or
or
push
fs
mov
xor
fildll
dec
xchg
xchg
inc
loope
mov
lods
pop
jns
lea
test
inc
mov
addr16
imul
xor
outsl
ret
mov
push
jl
data16
mov
mov
xchg
pop
dec
adc
leave
add
xchg
cltd
mov
push
cmp
dec
push
xchg
stos
jae
xor
movsb
in
test
in
jnp
pop
mov
xchg
inc
mov
mov
cmpsb
and
enter
add
push
lahf
or
push
dec
cmpsl
ljmp
fdivrl
nop
inc
shlb
jae
ss
test
mov
loope
pop
into
add
pop
add
out
push
incb
outsl
push
mov
mov
xchg
fmull
scas
dec
add
andb
mov
call
mov
loop
aam
pop
mov
push
ss
aam
cmp
movsl
xchg
test
ret
es
push
mov
aas
cmp
icebp
jecxz
rorl
shll
mov
dec
outsl
pop
lds
stos
and
sub
popf
xchg
pop
test
mov
cmpl
sbb
pop
lahf
clc
out
jnp
sub
sub
mov
mov
lods
lds
push
mov
loop
and
push
adc
loope
add
in
sbb
daa
mov
jle
adcb
mov
push
mov
shrl
mov
mov
cmp
inc
sub
sbb
repz
js
fwait
out
fbld
mov
fadds
pop
ja
add
sub
fwait
int
jae
in
adc
adc
xchg
push
inc
lea
adc
mov
jle
stc
pop
inc
mov
pop
mov
out
adc
lahf
aas
ret
out
lock
scas
inc
aad
push
pop
xor
mov
adc
inc
xchg
lods
stos
notl
dec
mov
cmp
jbe
bswap
adc
push
cmp
xor
std
adc
test
rcrl
pop
lods
jg
xlat
rcr
pop
inc
leave
iret
popf
dec
dec
pop
inc
sub
rcll
mov
mov
jg
xchg
dec
rorb
pop
mov
jg
pop
pop
jb
jnp
mov
fwait
stc
rolb
cmp
sbb
movsb
imul
mov
das
insl
pop
andb
cltd
mov
push
xchg
pop
dec
mov
mov
cltd
jge
push
stos
add
dec
xorb
stos
pop
push
test
sbb
je
fld
pop
jae
xchg
les
lods
jns
test
sti
jg
mov
inc
int3
movsl
jmp
cmc
push
dec
lods
js
movsl
lods
in
aas
andl
push
in
rolb
mov
jo
inc
dec
imul
mov
lret
jg
jmp
fmuls
sub
mov
pop
sub
jecxz
aam
adc
add
jae
stos
ds
cmp
arpl
xor
cmp
add
ret
data16
xor
aas
push
pop
cwtl
dec
jno
xor
clc
adc
pop
adc
push
or
mov
aas
jbe
sbb
and
cmp
mov
fisubs
int3
fcom
xor
out
mov
sbb
xchg
ljmp
fstl
lds
repz
push
mov
dec
loopne
mov
cld
pop
adc
loop
cli
adcl
aas
daa
dec
enter
call
insb
dec
bound
arpl
cmp
cmpsl
or
leave
repz
mov
push
sbb
pop
xchg
in
jp
in
sbb
jne
adc
xor
or
mov
scas
js
push
jmp
sub
dec
push
aas
push
sub
imul
dec
int
mov
scas
sbb
cwtl
jmp
aam
xor
mov
dec
mov
pop
dec
mov
iret
mov
inc
inc
push
adc
test
mov
sti
jbe
jg
cld
ss
insb
arpl
dec
mov
sub
movsl
hlt
dec
jnp
cmp
cld
ss
cli
add
or
imul
or
neg
xchg
sbb
adc
test
dec
inc
out
arpl
jns
mov
fs
rcr
xchg
fwait
cwtl
sbb
ret
stos
xor
fldenv
fldt
neg
call
add
stc
inc
xchg
jno
loope
int
xchg
lock
xlat
push
or
or
ret
ljmp
ja
xchg
mov
jo
mov
cld
test
in
sahf
push
jl
and
mov
or
stos
push
stc
pushw
inc
lret
shll
ret
mov
js
mulps
cmp
mov
dec
sub
lea
xor
add
cmp
adc
stc
or
out
rcr
pushf
incl
repz
xor
lods
rcrl
sub
cmp
in
pop
hlt
cmpsb
jnp
cli
clc
xor
lret
icebp
adc
add
inc
test
clc
pop
dec
mov
xor
pop
je
pop
fists
sbb
push
inc
ja
pop
popf
xchg
or
enter
sahf
xor
data16
add
mov
xlat
lahf
jns
ja
imul
sub
sbb
mov
fstpt
lds
fcompl
repnz
clc
movsl
mov
jmp
jg
scas
pop
add
ljmp
xchg
or
jno
pop
ljmp
sbbb
xchg
stc
stos
dec
fmuls
into
xchg
out
cld
ds
dec
push
xchg
and
jecxz
jbe
xchg
xor
enter
pop
rclb
daa
sbb
push
data16
mov
bound
sub
push
mov
insb
mov
mov
lods
into
cmp
imul
pop
fstpl
cmp
pushf
sub
fucom
mov
aam
dec
rcl
jbe
xchg
test
xchg
sbb
scas
ja
loop
std
cmp
in
sarb
jne
mov
jbe
jb
loopne
lds
sub
dec
bound
adc
ljmp
insb
pop
dec
jmp
jne
inc
adc
lret
cmp
sub
fidivl
dec
or
mov
mov
and
push
cltd
test
adcb
sub
cmp
pop
sti
loope
jmp
jle
ss
pop
outsb
div
or
jge
dec
mov
int3
mov
push
mov
push
xor
cwtl
rcrb
sub
ret
xlat
push
sbb
into
sbb
rorb
pop
movsl
out
ds
insb
mov
int3
cmp
jge
push
aad
icebp
sub
fwait
test
dec
insl
les
decl
and
push
test
jge
daa
mov
pop
push
sbb
cld
rol
stc
fsubrl
mov
xor
mov
ss
xor
orb
aam
sti
js
pushf
lret
mov
push
cli
push
inc
pop
pop
pop
inc
out
inc
pop
aas
pushf
sti
sbb
mov
xchg
adc
xor
mov
rorb
and
mov
inc
pushf
mov
xor
adcb
dec
push
subb
cltd
sub
add
jne
repz
rorl
dec
sbb
xor
lret
mov
xchg
dec
sub
addr16
lock
bound
add
daa
ret
push
lahf
lahf
rorb
jp
lock
push
jnp
shlb
adc
xchg
popl
nop
dec
mov
adc
call
push
mov
cld
mov
xchg
ret
out
lods
sbb
xchg
pop
mov
cmp
clc
pop
icebp
jbe
mov
test
push
and
std
add
ss
inc
mov
adc
cwtl
sbb
popa
mov
jg
lahf
pop
int3
cs
xorl
mov
add
inc
jge
int3
adc
mov
daa
pop
aam
rclb
lods
or
jnp
fisubrl
outsl
adc
sbb
orb
inc
jbe
mov
sarl
mov
or
push
jbe
lahf
mov
xchg
jns
jl
addl
adc
out
mov
sbb
sub
inc
adc
jbe
dec
js
mov
cmp
jp
lods
adc
clc
or
mov
add
xor
inc
pop
adc
inc
int
mov
jns
clc
imul
ret
mov
sbb
test
scas
lret
out
add
int
or
ja
cli
push
sbb
xchg
xor
xchg
loop
into
lcall
sbb
in
das
hlt
and
aaa
cli
mov
adc
or
xlat
jp
add
insl
adc
mov
or
pop
sbb
mov
lahf
or
and
xor
xchg
bound
mov
pusha
inc
lea
mov
inc
jne
xchg
xor
push
imul
sbb
imul
out
sbb
and
scas
lret
cmpsb
fdiv
nop
call
adc
or
lret
insb
imul
and
or
mov
leave
xor
xchg
inc
insl
xor
cltd
mov
pop
mov
and
dec
adc
xchg
or
dec
push
out
mov
push
mov
imul
xchg
dec
xor
rcr
cmp
jno
or
aas
sahf
mov
jno
cmp
js
pop
adc
lret
daa
inc
lock
in
in
arpl
push
mov
push
insl
shl
fcoms
icebp
cmp
outsl
ret
sbb
jae
dec
loopne
ja
pop
movsl
add
decb
fwait
mov
mov
inc
fidivrl
and
dec
negb
imul
or
pop
xlat
cmc
mov
addr16
pop
inc
sarl
addr16
cltd
cli
das
cmp
cmpsb
ja
xchg
lock
sbb
dec
cld
fmuls
int3
or
test
jmp
xchg
mov
sbb
out
js
mov
and
adcl
scas
orl
insb
pop
sub
pop
outsl
xchg
adc
outsl
mov
xchg
pop
xorl
mov
adc
mov
mov
std
xor
pusha
shrl
test
and
clc
in
or
xor
xchg
daa
das
dec
mov
jo
clc
add
push
or
sbb
xor
push
shl
sub
stos
push
or
pop
pop
fstl
notl
push
daa
out
add
lods
or
inc
or
add
mov
push
adc
je
mov
addb
jb
dec
jb
imul
xchg
cltd
dec
push
pop
push
inc
fsubl
cmp
sub
loope
cmpsl
mov
sub
mov
xchg
lahf
cmc
repnz
je
xor
mov
test
xchg
and
or
pop
jno
adc
xchg
int3
xchg
fninit
sub
xor
mov
sbb
or
scas
and
call
jle
dec
mov
mov
and
pand
lcall
or
stc
int3
movsb
dec
mov
adc
xchg
inc
and
stos
fisubrl
mov
mov
loopne
and
mov
xor
mov
bswap
push
insl
aaa
push
cmp
mov
dec
cld
pop
add
in
movsb
cmp
sub
mov
jmp
and
fidivrl
and
adc
push
icebp
fwait
movl
pop
int3
icebp
shlb
loop
lods
addr16
adc
pop
mov
jmp
sbb
mov
cmp
pop
iret
in
ljmp
xchg
fiaddl
sbb
std
and
lock
subb
push
cmp
sub
push
dec
es
aad
push
mov
enter
cwtl
sti
dec
pop
jnp
cli
or
adc
lods
cmpsl
cmp
lahf
cli
bound
lods
or
add
lds
data16
jae
and
cwtl
adc
nop
andb
lea
or
push
fcmovnb
outsb
push
adc
adc
fistpl
filds
lds
mov
fdecstp
pop
mov
xchg
jmp
rcr
psubd
mov
movsb
lods
mov
leave
flds
mov
mov
int3
cmp
pop
jl
mov
insb
pushf
dec
mov
dec
mov
sbb
pop
xchg
jb
pop
lds
lahf
adc
insl
inc
xor
mov
scas
jnp
lahf
ds
shrl
mov
and
ror
aam
pop
mov
mov
pop
aam
and
clc
out
xchg
mov
mov
test
cli
jnp
rcrb
jge
and
and
cmp
rorl
xchg
fs
lret
stc
test
fdivl
mov
mov
mov
out
xlat
cmc
cmpsl
push
add
sbb
aad
adc
dec
faddl
test
mov
int3
fldl
dec
andl
out
adc
xor
inc
out
mov
out
pop
repz
aam
or
xchg
fs
sbb
jmp
push
loop
and
jp
dec
xchg
mov
sbb
mov
divb
or
jne
or
cmpsb
or
jge
xchg
mov
jnp
mov
insl
inc
pop
aas
addr16
or
xchg
push
roll
jmp
jns
ljmp
fs
or
cmp
call
scas
mov
push
test
jp
hlt
xor
jmp
sbb
aad
push
pop
test
pop
std
inc
mov
jns
inc
mov
lods
cmpsl
repnz
js
dec
jg
add
mov
sub
xor
push
jne
or
aaa
or
loopne
push
or
sarb
pushl
pop
enter
aas
mov
mov
fwait
fmull
mov
jo
inc
imul
adc
sub
jae
pop
outsb
push
fsub
mov
lods
and
adc
mov
mov
inc
mov
mov
dec
lock
add
inc
mov
inc
call
movsb
loopne
xor
fidivrl
jmp
pslld
jne
ljmp
scas
xchg
jmp
out
stos
mov
add
test
adc
cmp
cs
mov
mov
mov
repz
or
mov
movd
daa
jae
sbb
mov
cmp
jno
call
mov
jb
in
fs
mov
aas
adc
xchg
jb
cli
imul
fimull
pushw
mov
inc
sti
jge
cld
cli
and
out
jmp
dec
inc
cmc
call
stos
in
xor
aad
les
cmp
loopne
xor
sub
in
jns
push
into
in
test
mov
or
xchg
aad
aam
notl
sub
lods
mov
mov
mov
out
cltd
or
jbe
test
sbb
loopne
dec
push
shll
cmp
sbb
stos
mov
cli
dec
inc
stos
sahf
adc
sarl
lret
std
xlat
mov
gs
dec
jnp
sbb
xchg
push
lret
jmp
sub
mov
stos
jno
add
xchg
out
add
leave
les
cltd
ds
push
imul
or
pop
rorl
sbb
lret
add
ds
stos
add
sub
in
jle
mov
adc
sub
or
fsts
or
int
movsl
push
movsb
mov
inc
dec
aaa
xlat
out
xchg
sbb
cmp
in
dec
push
xchg
sub
push
fsubrs
in
inc
sbb
or
pop
leave
aam
lods
dec
push
jb
lea
adc
xlat
cmp
mov
ficompl
dec
and
mov
ficoms
mov
sub
or
cmp
stos
cmp
push
xor
pop
rcl
push
mov
shlb
jecxz
cld
hlt
andb
out
ret
roll
stos
pop
xor
test
jecxz
sarl
js
sub
repz
and
push
jle
xchg
inc
inc
loope
repz
mov
les
les
dec
fdivrs
cltd
clc
push
dec
shll
xchg
andb
cmpb
dec
loop
and
and
rcrb
stos
stos
enter
cltd
pushf
add
push
mov
mov
xor
dec
jp
sbb
cmp
or
inc
mov
lahf
bound
xorl
cmp
mov
adc
popf
aas
add
push
clc
jl
xor
push
stos
or
cmp
mov
and
div
orb
ja
push
stos
dec
bound
loope
jmp
imul
adc
push
add
loopne
daa
into
push
dec
daa
mov
sub
adc
popf
jle
mov
push
and
xchg
jge
jae
insl
inc
sub
cmp
pop
mov
gs
xor
out
call
lcall
cmp
and
popa
mov
inc
and
sbb
jge
mov
outsl
pop
jmp
stc
sub
mov
cmp
iret
lods
test
mov
mov
cmpsl
movsl
mov
push
pop
inc
test
xorb
mov
jge
jae
ret
or
xchg
dec
lret
mov
or
or
scas
inc
cwtl
xchg
fiadds
mov
push
jnp
dec
pushf
cmpsb
aaa
cmp
imul
in
leave
fidivs
and
mov
mov
imul
ds
push
add
or
pop
ss
test
pop
jp
enter
lock
sbb
out
lea
dec
pop
mov
ret
cs
mov
sub
clc
dec
dec
mov
sub
mov
dec
fadds
lods
xchg
lods
pop
out
sub
filds
mov
sub
dec
imul
xchg
popf
add
pop
icebp
outsb
and
les
ret
ret
dec
cs
fdivrs
shll
and
fisttpl
inc
inc
fstl
mov
jbe
cld
or
sub
cmp
imul
mov
daa
shll
cmp
pop
push
mov
mov
fisubs
lods
data16
cmp
leave
mov
pop
adc
fcom
outsl
inc
movsl
mov
jno
shl
mov
orl
adc
pop
aad
nop
in
pushf
cltd
adc
mov
movsb
push
mov
inc
rorl
icebp
mov
xor
stos
jns
xchg
loop
call
out
popf
xor
jae
pop
cmp
sbb
mov
dec
jmp
xor
jl
dec
sub
jle
popa
arpl
cltd
jo
sub
and
loopne
scas
lods
popf
aaa
leave
test
xor
jmp
mov
cld
ja
cmpsl
rol
sbb
jo
ret
das
fiaddl
mov
test
movsb
or
scas
mov
pop
pushf
sbb
fwait
mov
test
xchg
cmc
dec
pop
pop
sub
adc
out
or
sbb
addr16
movsl
jb
je
dec
out
addr16
subb
rep
pop
scas
orb
add
leave
out
pop
add
cwtl
aas
mov
xor
xor
mov
add
popa
sarb
cmpsb
cmpsb
ffree
cld
insl
es
push
mov
aam
imul
stc
popa
fwait
les
add
scas
test
int
std
fwait
push
xor
std
jb
mov
adcb
cltd
mov
repnz
stc
rcrl
shl
andb
scas
loop
jnp
test
adc
sub
push
and
hlt
cmp
testb
pusha
lret
inc
pop
sbb
test
mov
cltd
hlt
cmp
dec
sbb
mov
and
inc
inc
stos
fistps
push
movsl
mov
in
pop
out
loope
jb
push
outsb
addb
mov
popf
imul
or
je
fdivs
xor
es
mov
call
rorl
mov
mov
dec
mov
jb
sub
fsubl
hlt
cld
cmp
loope
rcl
cmp
dec
shll
in
jne
sbb
fiadds
dec
in
mov
icebp
in
sti
mov
shl
inc
add
testl
sbb
ds
inc
mov
xchg
mov
jle
fsubrl
lret
aas
sbb
fwait
imul
and
loop
mull
dec
shr
or
mov
dec
mov
leave
movsl
xor
addb
push
jl
imul
stc
xchg
xchg
push
sub
add
dec
mov
lods
scas
pop
mov
add
mov
mov
aas
lcall
adc
xor
cltd
fst
pop
cwtl
call
pop
or
pop
mov
xchg
pop
sti
and
enter
ja
adc
test
int
je
loopne
lret
mov
xchg
mov
shl
into
inc
add
iret
bound
mov
dec
push
mov
jnp
mov
sbb
dec
pop
sub
imul
lods
and
pop
dec
int
hlt
ja
cmc
jno
sbb
out
jnp
hlt
xchg
scas
insl
xor
or
jecxz
jg
dec
and
xor
jbe
ss
cli
jnp
icebp
inc
movsl
daa
push
lret
and
rorb
sbb
fists
lock
mov
orb
mov
std
or
push
in
sbb
sub
repz
xchg
jnp
loope
mov
mulb
inc
addr16
test
ret
or
sbb
out
nop
into
adcb
push
mov
xchg
ljmp
cmc
sub
add
xchg
cltd
aaa
ljmp
pop
sbb
inc
add
adc
mov
mov
or
cmp
push
idiv
xlat
popa
hlt
push
add
addr16
dec
jle
cmpsl
lcall
call
test
dec
push
loop
data16
lret
xchg
jnp
inc
clc
sbb
push
inc
add
jbe
inc
fstpt
lea
mov
xor
ja
imul
test
int3
nop
pop
pop
shrb
pop
call
lods
dec
or
xchg
push
adc
jo
push
in
jae
fs
jl
arpl
add
stos
and
fimull
sbb
imul
inc
dec
add
pushf
pop
cmp
jg
aam
inc
stos
divb
mov
lret
rcr
pop
add
lods
jne
pusha
dec
movsl
or
adc
ror
pop
test
push
lods
inc
push
add
test
cmpsl
out
push
out
xchg
dec
dec
pop
pop
subl
mov
aas
jle
mov
arpl
jge
int
jp
inc
enter
popa
inc
and
adc
fwait
pop
outsl
popa
sbb
jge
xchg
fnstsw
sub
xchg
inc
test
jbe
arpl
and
test
mov
xchg
mov
outsb
popf
jg
mov
pusha
sub
icebp
rcr
push
shrb
dec
xor
das
push
adc
push
jmp
sub
jbe
cmc
push
inc
sub
or
mov
test
push
fs
and
dec
ffreep
out
les
loopne
jae
cltd
fildll
lods
cs
xchg
mov
jb
les
sub
imul
movsl
xchg
movsb
mov
lea
sbb
ret
jae
sub
jns
xor
into
jl,pn
xchg
xor
loopne
popa
jg
popa
test
stos
dec
dec
cmc
mov
inc
pop
or
hlt
mov
mov
push
mov
sbb
jb
test
mov
jge
insb
ljmp
pop
xor
leave
jnp
daa
lcall
je
jbe
jnp
jne
sbb
fs
xchg
sub
jno
xchg
mov
sbb
sbb
adc
mov
test
add
jle
pop
pop
jecxz
movsb
jmp
push
cmp
mov
inc
dec
jmp
push
outsb
adc
mov
sbbl
push
xchg
or
out
aaa
sbb
and
mov
or
mov
inc
idivl
stc
xor
in
movsb
xor
dec
clc
into
int
fisubrs
xchg
or
dec
xor
jb
xor
adc
outsl
lcall
stc
int3
sub
add
dec
sub
and
andb
jae
jecxz
mov
int
sub
leave
jb
hlt
push
rorb
inc
adc
pop
jno
lods
and
dec
mov
subl
movl
xor
addr16
sub
rcrb
push
loopne
ja
push
sahf
mov
and
cltd
pushf
ss
add
push
inc
jmp
mov
inc
sub
jmp
hlt
rorl
js
cli
dec
jne
mov
mov
sbb
sbb
or
idiv
pop
xchg
scas
rcrl
sub
mov
mov
fnstcw
frstor
jae
add
push
cmp
inc
mov
mov
and
xor
out
outsl
push
push
mov
ja
and
add
fsts
jnp
jno
mov
das
pusha
sbb
movlps
jle
hlt
pop
data16
mov
xlat
int
xchg
pop
xor
insl
xor
out
cmc
mov
test
dec
test
push
and
push
mov
faddl
pushf
jl
call
cmpsb
sbb
xchg
shrb
adc
pop
bt
mov
jns
stc
mov
dec
xor
jb
push
jecxz
cmp
lret
and
in
inc
xorl
xchg
iret
jge
sbb
aam
lods
mov
and
mov
or
push
dec
neg
arpl
out
jmp
jns
xchg
mov
pop
addr16
jmp
or
lret
ficompl
shlb
push
in
dec
aam
outsl
test
lret
jne
sbb
outsl
orb
xchg
dec
xchg
sbb
inc
scas
inc
cmc
xchg
sbb
lret
fwait
pop
or
push
or
inc
cmpsl
dec
mov
ds
push
notl
mov
test
mov
push
scas
xor
icebp
or
xor
and
dec
fisubs
sbb
cmp
data16
push
popf
pusha
ja
lret
roll
ljmp
rorl
inc
imul
mov
push
sub
lock
out
fidivl
cmp
rorl
xchg
push
pop
push
add
test
fisttpl
cwtl
sti
and
repz
push
jno
xchg
pop
and
aaa
mov
outsb
mov
popa
xchg
sbb
repnz
and
inc
sub
fisttpll
cwtl
jge
mov
and
aas
xor
pop
lods
into
int
shrb
in
repz
jne
adc
jge
rorb
pop
xchg
cmc
test
popf
lret
les
pusha
js
dec
sub
mov
xor
push
pushf
inc
ss
lret
test
cmc
cmp
arpl
imul
lret
xchg
xchg
jmp
jecxz
dec
int
push
xor
test
jne
insl
dec
gs
lret
into
xchg
dec
jnp
pop
add
adc
adc
add
mov
cmp
daa
push
mov
jne
rorl
aas
cli
jnp
movsb
mov
gs
fmull
hlt
cmp
outsb
inc
or
pop
sbb
test
cli
cmp
cmp
sbb
inc
decl
mov
js
jae
rolb
mov
jmp
mov
fisubs
cmp
adc
cmp
insl
icebp
xchg
aas
imul
iret
xchg
popw
orl
stos
mov
or
pushf
mov
clc
xchg
icebp
adc
fadds
or
cmp
aas
pop
sbb
test
ret
fsubl
out
mull
dec
cltd
inc
in
cmpsl
insl
scas
addr16
fucompp
addr16
jb
bound
pop
lret
pop
arpl
fcos
dec
cli
mov
adc
pop
imul
stc
loop
mov
rcr
nop
adc
ftst
out
cmp
lahf
cwtl
imul
insl
stc
mov
and
aam
adc
test
xchg
adc
xchg
add
js
test
aas
cmpsb
in
and
test
imul
lods
add
out
jle
lret
inc
pop
add
loop
adc
fistps
mov
mov
test
jle
insb
xor
adc
cltd
mov
inc
mov
jnp
jmp
je
sbb
scas
push
out
cmp
shll
and
jb
je
aas
xchg
pop
scas
xor
ror
or
jae
and
loopne
pop
loope
in
sbb
lret
xchg
je
jg
sbb
sbb
xor
in
cmc
popa
movsl
xchg
pop
pop
sbb
mov
mov
lret
push
es
mov
stos
mov
adc
jae
dec
jmp
inc
xor
lods
jmp
sahf
push
cmpsl
mov
sub
jno
cli
outsb
leave
nop
stc
in
pcmpgtd
pop
test
jmp
pushf
movsl
cmc
fiaddl
ja
jno
je
out
adc
into
mov
xor
jbe
jno
and
sbb
repz
sbb
fs
xchg
in
icebp
push
aad
push
adc
loope
jb
jne
sub
mov
mov
pusha
std
ficompl
insb
insl
lcall
icebp
loope
inc
ret
notl
push
mov
inc
and
lret
gs
fstpl
enter
addb
mov
xchg
adc
or
nop
out
fsin
push
out
iret
fsub
sub
cs
sbb
sub
data16
addr16
popf
mov
mov
outsb
std
inc
popf
sbb
mov
push
mov
test
fdivr
les
mov
mov
push
filds
adc
insl
fnstenv
aas
movb
push
and
fstpt
pop
test
out
xchg
cmp
push
pop
pusha
dec
sub
scas
push
aas
mov
push
xchg
mov
push
jmp
stos
daa
ret
dec
pusha
shlb
loope
pop
lea
cltd
sbb
popa
mov
dec
adc
push
xchg
or
pop
and
mov
mov
inc
xlat
bound
mov
pop
insl
std
outsb
mov
sub
dec
jns
out
xchg
xchg
and
lods
xor
or
fidivrs
jno
jmp
addb
out
dec
loope
cli
mov
lret
dec
cld
scas
icebp
sub
sbb
stc
xor
cmc
sub
pop
inc
idivb
mov
mov
inc
mov
popa
add
adc
inc
sbb
pop
pop
mov
hlt
jp
pop
mov
je
cmpsb
outsl
int3
fldpi
cli
in
cmp
shl
les
fadd
mov
lcall
mov
xchg
jmp
and
rolb
lods
out
push
adc
mov
add
dec
cmpsb
add
sub
or
cmpsb
jne
int3
fsubrs
inc
js
cmp
stos
inc
jecxz
inc
adc
push
ss
aas
movups
cmpsb
scas
popa
push
pushf
jbe
adc
addr16
call
jmp
inc
and
jbe
fidivrs
daa
hlt
test
dec
push
ds
roll
add
or
rorb
sbb
inc
mov
stos
mov
sahf
lods
sarb
push
loop
ljmp
mov
popa
push
jb
add
mov
popf
fwait
or
fwait
mov
mov
xchg
xor
leave
sbb
arpl
lods
adc
cmp
movsb
and
push
jae
add
clc
mov
fucomp
sbb
mov
faddl
mov
ret
shl
pop
inc
dec
cmp
push
iret
xchg
fcompl
inc
adcl
xchg
sbb
arpl
xchg
pop
icebp
gs
fcoml
sbb
loop
pop
jb
mov
jmp
fwait
add
lods
das
push
add
add
mov
dec
rol
outsb
mov
repnz
sub
inc
lods
and
enter
out
sub
xchg
rclb
dec
lods
orl
sub
rorl
das
orps
mov
add
cltd
cmpsl
xchg
fsts
nop
adc
lods
xor
addb
rcll
push
das
sub
or
push
cmp
mov
fnsave
dec
and
pop
mov
fsts
loopne
mov
jecxz
test
pop
sbb
cmp
test
jnp
xchg
loopne
leave
xchg
ds
outsb
aad
xchg
sbb
sub
movsb
mov
stc
inc
popa
adc
sub
in
movsb
add
out
ljmp
xchg
addr16
adc
cmpsb
imul
mov
cmpsb
in
ret
pop
mov
ficoml
and
lret
mov
out
xchg
push
jg
cmp
movsb
dec
pop
das
adc
jg
insl
pop
ret
movsb
sbb
idivl
cmp
daa
and
lcall
std
mov
and
mov
mov
cmp
ret
mov
scas
loope
jno
mov
aad
imul
or
sbb
lods
pop
fsubs
xorl
sbb
cld
lock
jno
sti
stos
addr16
adc
nop
jns
cmpsb
sbb
sbb
and
cli
push
cmp
cs
mov
shlb
outsl
mov
mov
push
dec
lret
sbb
cmp
test
pusha
xor
cmp
addr16
or
adc
in
push
fs
stos
ljmp
inc
fs
push
cli
dec
jns
jp
scas
xchg
xor
icebp
sti
push
ja
mov
pushf
stos
dec
sub
fidivs
xchg
cli
mov
pop
sbb
mov
es
les
faddl
or
sbbl
inc
loop
push
push
movsl
js
jmp
sub
fs
sub
xor
xor
loope
and
mov
jnp
sub
mov
jg
mov
push
adc
ljmp
xor
cmp
scas
pop
cmpsl
ja
xor
push
add
loope
sbb
mov
pop
insl
pop
push
pushf
sbb
or
inc
mov
mov
and
mov
jb
add
add
in
pop
es
sbb
mov
pop
dec
mov
sub
inc
mov
inc
out
or
insb
push
testl
dec
push
dec
aad
and
les
rcr
cmp
mov
mov
test
mov
pop
cmp
or
and
addb
in
into
ljmp
movsb
cltd
imul
dec
fisttps
mov
ret
aas
jge
fmull
xchg
jl
inc
mov
dec
cmp
push
fs
add
mov
mov
sbb
movsl
mov
insl
add
and
sub
test
mov
dec
out
xor
cmp
cmp
adcl
pop
jns
dec
lea
pop
stc
dec
cmp
cmp
cld
aam
cld
stc
jle
pushw
sbb
sbb
sub
jp
loope
push
jbe
shll
lahf
jge
movsb
inc
jns
cmpsb
mov
cmpsb
fsubs
lods
das
ret
outsb
jns
push
xchg
mov
cmc
sub
stos
negl
mov
pop
aad
push
dec
lock
jmp
sbb
and
xor
xchg
cmp
adc
out
mov
jl
jno
inc
jne
ret
scas
fisubrs
ds
inc
mov
outsl
lcall
xchg
add
mov
mov
xchg
leave
in
out
xchg
ret
and
adc
sarl
rcl
adc
test
jne
lods
imul
sub
dec
push
data16
or
push
movsl
xrelease
sbb
insb
testl
jb
adc
add
dec
dec
xchg
push
xchg
data16
xchg
cld
outsb
xchg
dec
mov
out
mov
js
dec
add
and
or
xor
jnp
sbb
insl
inc
sti
mov
stc
or
add
in
dec
jae
jg
filds
sbbl
cmp
lret
scas
insb
mov
addl
scas
xor
sbb
xor
mov
mov
aam
notb
sub
sub
lock
das
xor
cmp
in
ror
xor
xchg
push
flds
jecxz
add
mov
mov
das
cmpsb
pop
fidivrs
add
and
jp
jmp
pop
in
mov
jne
and
pusha
cmc
xchg
cmpsb
imul
push
dec
push
jb
mov
nop
jp
stos
inc
dec
jbe
push
int3
aaa
push
out
repnz
jb
mov
stos
push
mov
rcrb
hlt
in
mov
das
mov
shl
sbb
aaa
movsl
mov
adc
sbb
stos
loopne
daa
ljmp
lcall
int
sbb
pop
adc
jmp
imulb
push
sbb
ficoms
rclb
cld
jns
call
fmul
xchg
sbb
movb
aam
mov
dec
sbb
cmpsl
and
inc
adc
sub
out
shl
cld
mov
xor
mov
int
fdivrs
int3
adc
mov
adc
cwtl
and
cmp
mov
or
dec
cwtl
in
lret
test
add
outsb
and
cli
jmp
fistpl
jp
xchg
insb
mov
std
test
fidivl
xchg
pop
and
jmp
sub
lahf
dec
test
cmpsl
and
aad
or
pop
lcall
pop
out
into
testb
mov
ret
xchg
sub
inc
jg
sbb
fldl2t
push
cmp
ret
in
mov
xchg
xor
dec
frstpm(287
mov
sbb
inc
xchg
sbb
sti
aam
loope
mov
je
cltd
jl
xchg
pop
sbb
jg
iret
inc
pop
decl
add
test
ja
mov
mov
xchg
shlb
jge
mov
push
stc
xor
dec
nop
nop
push
mov
inc
ficoms
or
test
mov
out
sahf
mov
pop
fisubl
inc
ds
mov
xorl
test
loop
inc
sahf
xor
daa
fiadds
cmp
inc
dec
orl
xchg
pop
inc
push
dec
jne
add
sbb
cmpl
xor
sub
movsb
in
inc
ljmp
mov
sahf
in
sbb
adc
test
pop
push
adc
mov
rclb
xchg
jg
mov
dec
jmp
mov
stc
sbb
nop
lods
or
insb
xor
inc
aam
mov
dec
dec
fcomi
int3
ficomps
out
jp
mov
fmul
or
fbstp
and
in
push
xor
rcrl
scas
incl
aaa
cld
xchg
bound
icebp
in
stc
pop
fisttpl
sarb
push
imul
es
clc
dec
mov
subl
fidivl
cmp
ss
icebp
fwait
pop
iret
out
inc
jae
fsub
ds
enter
jl
inc
pop
pusha
rcrl
or
add
not
sbbb
push
push
cmp
push
pop
and
mov
sbb
pop
aaa
xchg
rclb
push
xchg
mov
loopne
sti
pusha
ss
repz
test
call
cmp
adc
fildl
push
fcomp
test
fisttps
or
mov
ja
jmp
or
push
xchg
add
notl
out
push
dec
mov
mov
icebp
rcl
sub
aaa
sub
jmp
in
ret
mov
xchg
mov
lock
pop
les
dec
mov
pop
sbb
sub
inc
mov
rcrl
jp
test
out
mov
or
jge
sub
adc
mov
add
xor
dec
je
iret
sbb
addr16
js
mov
pop
int
sbb
sub
lock
push
outsb
jne
xor
and
push
push
mov
jp
leave
shrl
gs
pop
cmp
jnp
or
in
sub
push
or
and
in
sarb
xchg
test
adc
das
xor
push
sbb
je
popa
lret
inc
inc
stos
inc
push
push
call
leave
or
jnp
adc
mov
pop
push
push
daa
out
cmp
pop
std
or
dec
cmpsl
in
add
aam
fistpll
mov
adc
pusha
mov
clc
or
xchg
shlb
out
ja
cmpsl
test
xor
cmpsl
lock
mov
jo
repz
gs
icebp
inc
loop
lcall
outsl
repnz
sub
sbb
fdivl
pop
cmp
sub
es
xor
pop
sub
stc
fsubs
mov
pop
fnclex
shr
cmc
cmpsl
call
adc
flds
xchg
sub
pushf
rcr
sbbl
mov
xchg
inc
sub
mov
es
int
pop
gs
jbe
loope
shll
faddp
hlt
and
es
dec
ljmp
scas
movsb
cltd
shrl
int3
and
mov
je
mov
mov
mov
addr16
inc
ret
lahf
jp
add
outsl
sub
out
out
xorb
cwtl
xchg
mov
test
shlb
pop
lret
add
pop
inc
dec
cmp
jmp
icebp
pop
xor
hlt
mov
xchg
fs
jae
cwtl
shl
lods
mov
lret
into
pusha
cs
scas
add
cmp
shlb
outsb
push
mov
xchg
mov
out
sbb
mov
outsb
jmp
jmp
cmc
jae
neg
cmp
test
or
pop
add
lock
cmp
add
xor
data16
sub
dec
push
xchg
cmpsb
jns
push
sub
or
jb
ret
shr
mov
je
stos
in
push
je
jecxz
push
es
iret
inc
xor
shl
outsl
es
int
fstpl
enter
fsubrl
sahf
push
inc
insb
add
loope
jnp
mov
mov
and
in
sub
not
push
add
fisubrl
dec
sti
cmp
or
push
xor
mov
mov
jmp
faddl
dec
cmp
ja
push
cltd
cmp
adc
xchg
and
adc
mov
sbb
std
in
inc
add
push
inc
dec
idivl
daa
in
daa
add
cmp
fsubrl
lret
xor
stc
and
inc
sub
bound
jno
push
stos
or
inc
cld
fisttps
cli
or
inc
bswap
push
xor
repz
adc
lds
dec
push
leave
xor
and
mov
and
lahf
mov
dec
int3
mov
pusha
in
sub
xchg
and
fists
sbb
jg
dec
inc
setl
bound
dec
cltd
mov
adc
scas
pop
add
stos
xor
xchg
clc
inc
sbb
xchg
roll
jnp
ljmp
push
dec
adc
mov
mov
xchg
cwtl
or
in
adcl
xlat
ljmp
mov
xor
jecxz
inc
jle
pop
cmpsb
push
rcll
pop
adc
sbbb
lods
mov
popw
jo
mov
in
dec
cmp
shll
fmuls
adc
cltd
cwtl
inc
mov
lcall
lock
sti
sbb
adc
js
pop
outsl
cld
je
inc
push
jp
sbb
outsb
stc
jne
sahf
jg
add
add
out
sbb
sub
lea
aaa
and
sbb
pop
adc
repnz
sbb
jnp
js
inc
sahf
mov
negb
mov
ficompl
push
mov
xor
cld
add
jl
mov
test
in
adc
ret
lods
adc
loop
xor
aam
dec
mov
cmpsb
add
and
test
mov
pop
ss
jmp
test
ret
jp
dec
push
or
das
fidivl
lock
pusha
cmp
inc
xchg
cmp
in
scas
fdivs
enter
cmpsb
es
aaa
pop
adc
les
sbb
ds
lret
out
in
fcmovb
divl
pop
dec
sub
int3
mov
faddl
sbbl
int3
scas
mov
xorl
js
fmul
div
cmp
jmp
leave
dec
inc
xor
das
int3
jmp
inc
and
mov
push
jg
sub
test
in
mov
xchg
xorl
inc
cmpsb
add
push
dec
fsubrp
lea
aam
insb
cltd
add
push
inc
pushl
dec
jp
outsb
fildll
push
xchg
jmp
decl
dec
mov
cmpsb
xchg
sahf
mov
lds
add
jle
mov
push
mov
mov
rcrl
cmp
jo
fs
push
shll
sbb
fs
jae
push
mov
jg
repnz
pusha
jne
dec
incb
dec
data16
test
addl
xchg
inc
push
add
loopne
rolb
rcll
dec
nop
test
jl
cs
ja
push
jge
cmp
adc
xchg
fidivrl
mov
adc
inc
push
pop
movsl
mov
xor
xchg
dec
lcall
aaa
test
sti
mov
xchg
iret
es
cmpsb
inc
out
mov
fildll
mov
mov
sbb
inc
pop
push
aaa
mov
imul
xor
push
sub
pushf
fisubl
jo
movsb
cld
ffreep
call
rcr
mov
fsubr
push
imul
mov
push
jbe
repz
dec
repnz
dec
pop
push
mov
pop
mov
scas
push
mov
shrl
addr16
sbb
add
and
sahf
pusha
cwtl
push
sbb
adc
jg
jecxz
les
dec
adcb
jge
ja
imul
lcall
fsubs
push
or
scas
mov
std
sbb
push
mov
pop
inc
cmpsb
addr16
mov
jg
jle
fcomip
fs
pop
xchg
jno
xchg
pop
xor
jnp
addr16
addl
orl
mov
adc
xchg
dec
jbe
push
es
fidivrl
inc
fidivrl
repz
lods
test
loop
cmpsb
vmwrite
icebp
movsl
mov
push
adc
test
mov
outsl
cmp
mov
push
shrb
adc
ds
sbb
scas
lods
xchg
mov
jno
xchg
mov
icebp
and
int
das
push
mov
sub
cmp
and
rorb
or
sarb
stos
cld
ret
std
orb
inc
sbb
in
lret
mov
pop
sub
pop
ljmp
cld
mov
jns
cli
xchg
mov
adc
sbbb
movntps
iret
mov
rorl
out
lcall
adc
sub
scas
adc
je
pop
leave
cwtl
ss
xor
decl
unpckhps
cld
or
pop
nop
addr16
sbb
add
mov
pushf
sbb
push
and
je
fs
sahf
mov
add
out
dec
or
data16
sbb
cmp
mov
aaa
inc
mov
das
pop
lcall
jge
pop
setno
mov
lods
mov
and
ljmp
xchg
mov
popa
cmp
lods
inc
xlat
sahf
inc
stos
shll
cs
scas
push
test
sbb
sub
sub
cmp
or
aad
adc
mov
dec
jle
andl
shl
lcall
inc
sti
movsb
testl
xchg
dec
and
fs
mov
mov
xchg
sub
dec
or
imul
adc
inc
xor
and
mov
dec
repnz
push
mov
inc
jl
jo
mov
in
add
outsl
push
adc
cmp
nop
inc
pop
arpl
das
mov
fwait
out
push
inc
push
jo
mov
js
div
fidivs
neg
adc
inc
xchg
mov
mov
cmp
insl
cmp
push
cmpsl
xor
gs
adc
sbb
xchg
in
xlat
sbb
dec
pop
subb
cld
adc
mov
xchg
fs
adc
cmp
mov
mov
dec
in
mov
xchg
add
mov
xor
mov
test
inc
xchg
cwtl
mov
mov
mov
out
roll
xchg
mov
push
push
movsb
mov
add
push
out
sub
sahf
orl
adc
loop
mov
je
ds
adc
push
and
mov
cmp
test
fildl
mov
loop
daa
insl
mov
push
aas
pminsw
les
mov
cli
xchg
mov
lock
add
out
outsb
jp
jnp
lea
into
adc
jl
loop
fsqrt
je
add
xlat
inc
mov
out
out
std
or
pop
xchg
fmuls
lods
xchg
hlt
mov
or
push
loope
inc
insb
dec
xor
sbb
push
or
ljmp
mov
xchg
jle
lret
xor
xchg
std
divl
xlat
stos
xchg
pop
subb
testl
fnstenv
ficoml
mov
jmp
into
stos
dec
push
shll
sub
addr16
sbb
sub
arpl
push
jecxz
pop
add
ds
mov
sahf
stos
xchg
repnz
mov
sub
dec
stc
mov
cmp
pushf
icebp
mov
fcompl
insb
loopne
lock
popf
xchg
ret
dec
cmpsb
add
ja
test
dec
test
ljmp
movsl
lcall
data16
js
jnp
fwait
ja
push
nop
or
lock
arpl
pop
inc
xorb
xchg
pushf
fildl
pop
call
loope
test
xchg
inc
adc
and
in
pop
jmp
and
and
jne
ds
or
in
lret
popf
mov
mov
loopne
fdivs
mov
mov
add
sbb
adc
mov
imul
mov
sub
sar
je
mov
clc
pop
xchg
and
jno
loope
scas
fcmovnbe
push
jbe
loopne
test
stc
das
sub
or
cmp
push
int
push
mov
dec
in
add
rcr
cld
outsb
or
cmp
inc
sub
dec
and
push
rcrl
imul
and
sub
sub
xchg
fdivr
in
int
jae
iret
inc
subb
jle
bound
test
cmpl
clc
mov
pop
push
jno
cmp
fisubrs
stc
pop
xor
xlat
mov
fiaddl
lods
lcall
pop
js
mov
mov
push
sahf
lods
iret
push
mov
aas
xor
pop
mov
cmpsb
sbb
add
jne
fisttpl
imul
fldt
loopne
inc
adc
cmpsl
jns
ljmp
adc
mov
ficompl
push
jne
dec
mov
xchg
sub
mov
adcb
jmp
xor
xor
call
push
fwait
test
stos
mov
aad
and
mov
jo
fs
iret
xor
inc
in
aas
ret
xor
pop
aas
aaa
cmp
lcall
int
jmp
jne
xchg
pop
out
das
and
and
cmp
push
dec
inc
adc
cmpb
mov
popf
insl
push
lret
sbb
outsl
lret
lret
lods
mov
mov
jmp
jbe
les
loope
mov
adc
push
mov
ss
cmpsl
inc
mov
mov
adc
cmp
xchg
aaa
cmp
subl
lahf
pop
mov
aad
fcomps
cs
push
mov
int3
and
int
inc
repnz
inc
push
add
in
inc
xorl
movsl
cmp
vmovdqu
xor
icebp
mov
nop
mov
pop
movsb
lahf
pop
cltd
test
ljmp
dec
repnz
add
push
cmpsl
dec
andps
std
inc
pop
xchg
xor
dec
or
mov
out
mov
cmc
aad
jg
xchg
js
dec
mov
add
test
add
push
push
jns
mov
fucomip
mov
inc
or
cmp
jl
pushf
mov
pop
jp
xor
loopne
xchg
call
jmp
mov
cmp
cli
scas
stc
out
xchg
enter
cmpsb
sub
loopne
mov
jne,pn
sbb
mov
inc
daa
xor
loopne
mov
push
adc
inc
ja
cli
stc
daa
and
cmpsl
jbe
pop
cmpsb
mov
add
dec
mov
xor
test
std
in
cmpsb
and
push
mov
ss
inc
insb
push
sahf
loop
out
cmp
add
jb
sub
add
sbb
mov
mov
jbe
fisttps
pop
sahf
lds
xor
xchg
jecxz
add
adc
mov
cwtl
dec
cmc
push
pop
xchg
pop
xchg
nop
inc
ss
add
sub
cmp
or
dec
cld
pop
jl
lock
setns
cmp
out
pop
jo
outsb
movsb
add
outsb
pop
repz
cmc
fadd
jae
dec
mov
stos
cs
pop
sbb
iret
aam
daa
loop
xchg
lods
mov
incl
push
sub
xchg
int3
incl
xchg
push
sahf
lods
jle
fnstcw
and
ret
into
lahf
and
cli
in
and
xchg
idivb
pushf
andl
mov
add
cmp
cmpsl
out
lds
aas
std
roll
or
test
lret
std
jne
addr16
or
fcoms
in
mov
testb
pop
into
ficoms
mov
adc
fdiv
js
mov
les
addl
pop
call
jno
movsl
nop
and
xchg
sbb
dec
xor
mov
hlt
sbb
sbb
test
push
xchg
cmp
popa
inc
aad
loope
push
push
icebp
sbb
inc
cli
xchg
arpl
adc
jns
sub
outsl
or
popa
fucomip
stos
or
pop
pop
repz
shl
std
cmpsl
sub
lods
cwtl
jo
sbb
sar
jge
cmpsl
shlb
sub
out
xchg
aas
mov
dec
inc
aad
orb
mov
mov
dec
data16
mov
leave
mov
icebp
loop
sahf
out
enter
push
add
std
push
fidivl
outsl
fwait
pusha
cmp
loopne
or
ret
cmc
pop
xor
mov
insl
jl
out
lret
push
inc
sub
inc
lcall
xchg
pop
out
std
pushl
dec
inc
repz
mov
outsl
add
out
cmp
insb
dec
and
aam
or
shl
pop
pop
int3
mov
jl
rcll
push
mov
push
mov
shll
inc
xor
and
fadds
in
ret
mov
leave
xor
inc
aas
and
jnp
into
xchg
ret
and
push
sub
std
pop
or
cld
cwtl
outsl
sti
pop
loope
sub
lds
shlb
inc
mov
fcomps
adc
push
mov
mov
sarl
xchg
js
push
adc
adcb
and
and
and
mov
mov
mov
fisubs
pop
adc
jge
sbbb
ds
xorb
dec
gs
ljmp
sbb
xor
and
mov
scas
or
jmp
aad
dec
jo
divl
push
popf
or
push
or
jl
xchg
and
in
xchg
frstor
sub
push
mov
ss
test
ret
incb
sbb
pop
mov
push
and
in
imul
mov
adcb
mov
and
leave
mov
mov
adc
dec
movsb
push
les
xchg
jne
scas
inc
rcr
jmp
jge
xchg
push
jnp
cmc
or
data16
inc
and
cmp
lret
adc
sbb
adc
xchg
clc
jecxz
inc
dec
and
pop
add
data16
xchg
aas
cmp
lods
ss
dec
mov
or
sub
jg
pop
and
aas
cmp
aas
repnz
adc
jp
clc
shrl
cltd
mov
stos
add
call
stc
sub
add
push
pushf
add
or
cmpsl
pop
out
nop
xchg
rorl
mov
sti
and
mov
out
dec
je
or
inc
mov
test
and
jle
sub
mov
mov
inc
jnp
xor
push
xchg
cmp
push
shll
jp
roll
and
shlb
mov
sub
aas
in
cs
cltd
and
leave
dec
xchg
out
outsb
push
pop
inc
dec
adc
cli
mov
inc
fdivrl
xor
add
mov
inc
push
pop
lods
sbb
loop
mov
je
divl
push
mov
mov
out
add
fbstp
jmp
imul
add
addr16
sarb
inc
dec
cltd
mov
lods
sbb
clc
fistl
pop
arpl
cld
push
add
mov
loop
mov
aad
or
mov
cmp
adc
or
mov
bound
idivb
inc
cli
repz
add
enter
add
sub
inc
adc
add
mov
push
daa
sub
cmp
add
popf
cmp
dec
imul
filds
xor
xchg
mov
outsl
data16
out
jbe,pn
xchg
xchg
mov
shr
lret
mov
mov
movsb
and
dec
and
lods
sbb
arpl
sub
jge
xor
adc
mov
pop
adc
pop
mov
cld
in
cmp
dec
inc
mov
ljmp
push
dec
mov
inc
cmp
lods
lods
adc
jg
leave
sub
inc
xchg
fcmovu
and
std
jae
cmp
mov
push
jo
cmp
stos
shrb
insl
cli
mov
push
iret
mov
out
sub
xlat
das
sub
mov
cmpsb
pop
add
test
mov
lock
incl
or
lret
push
je
sarb
fsubrl
loop
add
fsubp
jae
stos
arpl
lret
adc
into
sbb
es
sti
jmp
lea
mov
pop
sarl
cli
push
add
icebp
dec
cs
lds
sub
xchg
push
ja
mov
aam
shrl
mov
pop
fdiv
push
jl
push
movsb
push
leave
pop
xchg
xchg
imul
rorb
stos
insl
jbe
mov
jle
mov
ljmp
imul
hlt
push
pop
and
outsb
cmp
int
sbb
xchg
mov
shll
and
lea
out
pop
fstl
mov
popa
lods
mov
cmp
mov
ljmp
or
adc
inc
imul
mov
cmpsl
fldenv
pushf
out
jb
jb
mov
negl
or
mov
sub
mov
adc
lea
es
out
jle
ja
pmulhuw
ror
cli
and
and
cltd
inc
push
push
frstor
jge,pt
test
lods
repz
hlt
or
test
or
push
inc
fbld
pop
jmp
jns
inc
push
dec
mov
sbb
aaa
jno
ret
pop
mov
add
add
je
cmc
dec
dec
adc
inc
adc
cmp
push
jbe
out
xchg
stos
js
das
jnp
cwtl
gs
xor
adc
sarb
in
inc
pusha
icebp
adc
hlt
sub
mov
xchg
mov
ss
scas
aas
dec
lds
jl
movsb
sbb
rcll
xchg
sahf
and
setl
mov
sti
jg
loop
nop
outsl
xor
sub
mov
dec
adc
mov
jecxz
add
jge
jb
xor
sbb
jae
mov
ret
xlat
loopne
mov
fdivl
cmp
jbe
js
test
inc
add
aaa
lock
ficompl
bound
pop
add
inc
in
clc
pushf
and
test
sbb
push
jmp
or
test
xor
and
pop
psadbw
jne
mov
pusha
call
out
sub
fs
repz
lds
aad
xchg
sub
iret
les
das
mov
add
test
aas
sub
in
pop
cmc
or
or
imul
xchg
nop
cs
addb
mov
clc
pop
cmpsl
mov
mov
insl
lahf
aam
std
test
pusha
hlt
ficomps
and
adc
sarl
arpl
into
lods
mov
pop
icebp
ds
sbb
mov
cmc
lret
push
mov
call
mov
and
sti
mov
mov
jecxz
subb
mov
adc
std
add
adc
adc
cld
adc
movsl
lock
xor
adc
or
jge
mov
fstps
addr16
loope
fisttpl
scas
das
inc
fs
or
in
xchg
cmp
das
and
insl
fldenv
mov
and
xor
jne
cmpl
jns
into
std
xlat
mov
test
push
scas
test
adc
xchg
jno
jbe
movsl
sub
xor
ficoml
mov
hlt
dec
stc
scas
mov
sbb
jns
test
lea
andl
test
test
xor
xchg
cmp
enter
mov
je
dec
push
and
sbb
in
mov
lock
daa
imul
pop
mov
dec
call
mov
call
push
sbb
mov
lock
stc
sbb
fnstsw
pop
cld
push
mov
mov
dec
lahf
adc
or
mov
mov
sub
fsubrl
xor
les
mov
arpl
sub
cmp
xor
out
movsl
mov
in
scas
xchg
and
pop
push
ja
out
aam
xchg
mov
push
popa
leave
cwtl
out
lcall
push
xchg
pop
cltd
sub
into
fstps
lcall
push
sbb
lds
inc
push
outsb
imul
or
outsb
aam
push
push
add
push
xor
ljmp
push
imul
sbb
sahf
fstcw
add
push
xor
add
pop
add
movsb
adc
sar
add
outsl
mov
out
sub
lret
or
iret
subl
loopne
pop
lcall
xorb
pop
push
inc
mov
inc
fwait
mov
push
sti
adc
arpl
push
movsl
or
repnz
pop
push
add
adc
lock
clc
icebp
mov
xor
mov
or
jbe
pop
cli
je
push
in
push
push
pop
mov
xor
or
cmpsb
imul
cmp
pop
gs
or
int
jmp
bound
pop
and
clc
shlb
add
jbe
lods
mov
lea
lret
inc
dec
stos
inc
cmp
or
adcb
pusha
lret
mov
mov
mov
pop
js
movsb
in
das
or
mov
int
xchg
cmp
mov
mov
push
sub
movsb
fiadds
xor
cmp
lea
out
loope
stc
dec
js
push
cwtl
sar
int
push
outsl
outsl
mov
scas
sub
dec
nop
sti
push
aaa
imul
sbb
shlb
gs
cmpsl
cmp
sbb
sub
icebp
jl
cwtl
dec
test
mov
mov
aad
insb
xchg
pusha
stc
push
pop
cmp
adc
sarb
cltd
cwtl
dec
cld
andl
das
xlat
les
gs
ja
mulb
das
mov
movsl
sub
cli
mov
and
pushf
in
fs
jb
add
pop
cmp
jae
or
dec
mov
cmpsl
enter
daa
in
hlt
xchg
imul
push
xor
cmp
mov
jg
inc
sti
sub
pop
js
cmpsb
ret
xor
cmp
and
dec
out
jmp
out
push
push
fidivrl
push
lods
stc
ret
mov
lods
jo
rclb
mov
dec
sub
xchg
js
pop
adc
dec
aad
xchg
dec
xchg
iret
adc
pop
repz
xor
jg
xchg
clc
insl
insl
jo
popf
bound
shl
cld
pop
mov
mov
pop
std
popa
push
js,pn
pop
adc
fisubl
lret
cltd
fiadds
adc
xchg
xor
inc
in
adc
pop
mov
push
or
outsl
xchg
imul
pop
xchg
mov
insl
jne
lods
aad
mov
out
push
xor
pop
xchg
out
ja
jb
clc
mov
push
sbb
xchg
jno
inc
addr16
sbb
add
xchg
xchg
jns
sbb
jl
sbb
push
mov
sub
outsl
or
sub
sub
leave
pop
insl
movsl
pop
hlt
fdivrp
jne
mov
loope
mov
pushf
fldt
dec
mov
sbb
dec
sub
std
test
sub
outsl
cld
lahf
xchg
mov
insl
or
cmpsb
pop
xchg
lods
clc
xor
sbb
xchg
or
andb
cmpsl
ds
das
std
call
int
mov
xor
sbb
xor
negl
push
movsl
int
cmp
movsl
pop
addr16
sub
fnstenv
fwait
or
aad
int3
ficoms
gs
pop
je
dec
out
lret
jg
mov
jp
lds
mov
push
mov
sar
cmp
das
jp
loope
cltd
pop
in
or
xchg
sub
cmp
cmpsl
jbe
sub
filds
inc
mov
loopne
cltd
dec
gs
arpl
ret
mov
or
inc
xor
and
inc
stos
push
sbb
and
add
pop
jns
loopne
popa
jl
add
mov
and
jo
out
add
jl
movsl
daa
push
pop
xor
lods
mov
push
xor
pop
loopne
int3
test
sbb
sub
adc
xchg
in
sbb
mov
xor
gs
mov
add
dec
mov
mov
jmp
mov
insl
test
outsl
ja
add
push
sub
jmp
sbb
and
dec
adc
mov
and
pop
xor
xchg
es
lock
sbb
jno,pn
enter
insl
call
and
sarl
pushf
push
in
lock
mov
sbb
inc
and
insl
decb
xchg
dec
test
je
and
cmc
xor
sub
cmc
out
push
xor
ljmp
mov
ror
or
and
dec
in
aad
out
dec
ds
mov
shll
popf
mov
imul
or
mov
outsl
iret
daa
imul
push
cld
push
mov
call
gs
into
lods
fnsave
aam
sarl
pop
sub
mov
cmp
jg
jp
mov
loopne
adc
dec
stos
push
inc
test
insl
push
mov
cmc
add
scas
and
mov
scas
stc
sarl
xchg
cwtl
cmp
dec
and
sbb
sahf
mov
push
push
cmp
ljmp
inc
testb
mov
xor
mov
xchg
test
inc
mov
inc
inc
mov
add
imul
les
test
cmp
mov
lahf
lods
psrlq
inc
and
or
xchg
lds
mov
lds
aad
clc
or
xchg
cli
push
xchg
cmpsb
icebp
jg
add
jmp
pop
pop
ss
xor
xchg
popa
js
lret
or
sbb
jo
xchg
aaa
popa
dec
ljmp
mov
mov
sbb
loope
inc
add
call
negb
mov
cmp
add
pop
stos
mov
sarb
or
dec
int3
sbb
jbe
lret
sub
fdivrp
xchg
and
dec
lret
and
cmp
cmpb
in
mov
stos
and
ja
jo
cmp
or
push
inc
cmpsl
lcall
jle
mov
mov
fcompl
sti
add
aad
and
js
pushf
or
sbb
std
mov
bound
js
mov
scas
push
push
push
sub
cmp
pop
push
sbbl
movb
xlat
test
fstl
xor
ljmp
xchg
jecxz
mov
ja
jnp
inc
cmpsb
mov
nopl
push
lods
push
stc
sub
mov
je
gs
jbe
sub
add
adc
sub
shlb
sub
leave
dec
jecxz
jmp
fisubl
mov
mov
and
pop
xor
xorl
xor
jns
std
mov
sahf
jle
xchg
lahf
je
jnp
in
pop
mov
test
mov
ret
decb
or
mov
fwait
push
popa
inc
or
shrl
nop
cmp
pop
icebp
popf
hlt
dec
out
daa
jge
testb
das
pusha
gs
cli
lret
addl
add
or
rol
sub
add
jno
or
sub
jl
es
mov
add
hlt
or
stos
lret
mov
notl
pusha
fcoml
and
js
pop
in
push
or
adc
jo
cmp
xor
pop
in
and
mov
mov
mov
imul
movsb
mov
pop
xor
pop
adc
addr16
cmc
jns
jns
xor
jmp
fcmovu
les
jae
jl
fneni(8087
xor
xchg
das
lds
sub
mov
mov
loop
je
xor
clc
mov
ret
mov
stc
pop
sbb
loopne
rorb
cmp
and
jecxz
ret
dec
orl
xor
jp
mov
or
or
in
mov
cmp
sub
dec
int
fistl
stc
lcall
fsubr
into
jle
inc
mov
pusha
mov
pop
inc
cmp
or
insb
push
jne
fstpt
out
sahf
ret
sub
adc
fcomps
lea
in
cld
push
cli
or
or
cltd
cmp
push
push
add
push
rcl
scas
mov
adc
js
push
outsl
push
scas
hlt
insb
inc
fwait
pop
xlat
adc
mov
add
xor
cmc
test
or
jns
lahf
fwait
pop
aas
adc
dec
cli
shl
out
mov
jg
push
int3
ret
adc
fucom
or
cmp
add
sub
pop
aam
loopne
in
inc
lds
loope
mov
lcall
mov
test
mov
or
orps
mov
mov
mov
sbb
mov
and
mov
push
push
and
test
mov
bound
in
jae
mov
adc
jns
addr16
cmc
push
xchg
xchg
add
daa
sbb
adc
adc
shrl
xor
add
mov
xor
dec
jle
imul
sbb
int3
lods
or
push
js
scas
and
dec
mov
inc
pop
or
sub
adc
in
pop
ss
movsb
fists
jae
inc
and
push
mov
lea
cmp
hlt
pop
mov
int
xchg
ja
cwtl
xlat
jmp
fisttps
fcoms
mov
addr16
jmp
pop
jne
into
adc
jmp
insb
inc
insb
mov
sub
cmp
mov
sarb
imull
xchg
inc
inc
hlt
fs
or
mov
idivb
push
sbb
push
dec
mov
jbe
jae
xchg
adc
enter
and
add
insb
retw
aaa
jecxz
jne
add
mov
repnz
jg
xchg
dec
stos
jge
lahf
out
nop
pop
enter
movswl
mov
movsl
jns
shl
push
jp
popl
dec
sbb
inc
fcomp
push
or
aas
sahf
mov
push
jp
cmc
arpl
pop
xchg
jl
cmpb
mov
stc
mov
pushf
and
int3
mov
pop
dec
popf
sbb
add
jne
or
ss
jge
in
aaa
int3
loopne
mov
mov
adc
sbb
gs
pop
pop
sbb
test
sahf
dec
jo
pop
mov
sbb
imul
mov
pop
stos
push
adc
in
cmp
mov
stc
sub
sub
xlat
xchg
int
adc
inc
jl
call
dec
xchg
out
push
imulb
outsl
popf
outsl
sub
lea
sbb
js
adc
xor
xchg
add
and
mov
lea
idiv
sbb
push
jl
xor
dec
ja
add
in
in
xchg
popa
ds
mov
mov
and
aam
pop
xchg
xor
sub
jmp
and
cmp
test
inc
mov
shll
pop
jb
lock
push
push
sub
in
lock
inc
cmp
es
sbb
xchg
out
dec
loop
sbb
inc
aas
cld
push
cmp
test
sub
pop
dec
xchg
sti
lahf
cmp
push
xor
jecxz
or
inc
or
cmpsl
mov
out
scas
cld
hlt
mov
fsubrp
inc
or
push
xor
add
popf
ror
push
sbb
shlb
mov
data16
push
push
outsl
mov
jnp
ds
mov
sbb
add
jmp
cmp
xchg
imulb
incl
pusha
addr16
cs
cmp
sub
jecxz
jnp
jae
sbb
xchg
cmp
lret
mov
mov
lods
bound
ljmp
add
dec
sbb
arpl
lret
icebp
sti
push
aas
and
pop
sbbl
and
imul
and
xor
jno
notb
adc
push
xchg
out
cs
addl
mov
rclb
andb
and
out
xorb
sub
inc
pop
sbb
das
lea
mov
rclb
fidivrl
int3
sti
mov
jae
ljmp
fcmovu
push
insb
add
lret
cmp
jns
pop
pusha
pushf
and
outsl
pusha
fs
sbb
cmp
insl
insb
adc
push
dec
stos
push
mov
or
inc
jge
dec
mov
adc
popa
cs
and
jge
inc
jo
std
jmp
cwtl
xor
pop
dec
push
adc
xor
adc
pop
mov
stos
mov
ljmp
in
jnp
jns
jnp
sub
push
cmp
or
add
lods
pop
lret
daa
fidivs
and
in
mov
lds
mov
stos
mov
add
sub
add
gs
push
ss
mov
adc
mov
xor
and
mov
pop
sbb
adc
mov
adc
add
cmp
incb
test
dec
aam
aad
std
ss
in
sub
inc
inc
mov
repnz
mov
movsl
fwait
jne
cltd
aam
push
std
int
jb
inc
pop
hlt
inc
sub
push
clts
mov
filds
mov
stos
imul
nop
out
pushf
imul
push
push
hlt
outsb
scas
cmp
dec
dec
test
pop
sub
adc
xchg
loopne
mov
orl
jmp
loope
movsl
sbb
push
pop
xor
mov
mov
shll
mov
movsl
fs
pop
outsb
add
cld
in
shll
rcrl
xor
cld
scas
dec
cmp
sbb
hlt
lods
cmp
xor
dec
pop
push
add
mov
aas
out
cmp
arpl
fsub
lods
mov
les
stos
jnp
mov
ljmp
adcb
xor
addb
out
mov
fstpt
lods
pop
iret
out
adc
dec
cmpsl
leave
cmp
dec
aam
sbb
mov
sub
scas
fistl
add
aaa
push
imul
xchg
pop
mov
fiadds
mov
jl
insl
sbb
dec
movsl
out
push
xchg
imul
divb
push
je
jne
fildll
test
fs
sti
xor
sti
mov
xor
mov
and
mov
push
mov
lcall
int3
xor
mov
fcoms
aaa
push
gs
sbb
mov
cmp
jbe
lahf
test
pushf
dec
inc
lahf
aas
adc
pop
shrb
jne
sbb
jmp
mov
test
fldt
xor
push
je
pop
xor
dec
dec
pop
dec
in
or
mov
mov
rclb
sub
in
daa
mov
mov
lods
les
lret
imull
or
cli
outsl
enter
notl
ds
pushf
pop
mov
cmc
pop
stc
xor
in
fidivrl
xor
jnp
cltd
hlt
push
mov
xchg
pop
push
adc
scas
sbb
jecxz
fnstsw
mov
repz
jp
shlb
dec
jb
movsb
adc
push
cs
adc
jne
adc
pop
notl
hlt
adc
ss
mov
andb
je
cli
int
mov
and
aas
xchg
je
or
outsb
mov
pop
rclb
fisubs
push
mov
cmp
sub
in
sub
loopne
dec
jnp
add
pop
xchg
cs
out
fsubl
int3
fisttpl
xchg
stc
inc
ret
imul
lahf
test
push
jnp
outsl
push
xor
mov
and
pop
push
cwtl
in
sub
jnp
test
pop
mov
out
stos
stos
pop
jne
outsl
aad
nop
inc
sub
push
cmp
jmp
mov
mov
jg
pop
jmp
cmp
fwait
repz
jge
test
test
inc
xor
testl
adc
negb
les
xchg
push
lret
xchg
rcrl
xchg
add
push
nop
or
jg
mov
sbb
jecxz
lea
out
test
sbbl
mov
mov
push
inc
std
icebp
push
jge
lds
lret
pop
push
in
mov
aam
outsb
mov
or
mov
ss
xchg
out
push
inc
push
xor
push
or
nop
jge
fwait
push
pusha
and
in
ror
enter
or
adc
sbb
or
das
pop
test
mov
imul
pop
inc
mov
shrb
jo
and
or
mov
cmp
push
stos
in
addl
xchg
scas
push
imul
pop
or
add
lahf
stos
mov
ficomps
mov
fildll
xor
sbb
adc
mov
lcall
ja
sbb
iret
insl
jns
adc
ret
push
adc
es
inc
sbb
stos
mov
cwtl
fcomps
or
into
testb
inc
push
jl
jg
out
fcmove
mov
into
cwtl
inc
or
inc
daa
pop
sarl
arpl
stos
cs
jl
sbb
sti
cwtl
pop
mov
test
dec
test
sub
clc
aas
mov
test
shll
aas
inc
adcb
lret
mov
jb
jae
and
test
mov
lea
sbb
pop
movsb
leave
sti
enter
pop
out
scas
mov
add
negb
push
or
jge
les
sub
cbtw
std
enter
inc
inc
loope
mov
adc
fldl
in
jb
and
mov
clc
add
cmpsl
pop
mov
inc
loopne
pusha
out
push
idiv
xchg
subl
mov
jo
add
mov
int
or
imul
adc
in
inc
stos
and
jo
les
pushf
sub
and
jmp
cmp
push
mov
xchg
mov
mov
lahf
inc
shrb
cmp
into
shl
sub
pop
jmp
jecxz
sbb
rorb
mov
jbe
adc
xchg
hlt
clc
dec
rcll
mov
fdivr
pushf
mov
lret
test
pop
iret
add
inc
xchg
xlat
ficoms
gs
pop
push
int
sub
jne
pop
push
mov
jg
out
pop
loope
adc
dec
mov
mov
fnstcw
ret
cmpsb
pop
mov
inc
xorl
outsb
pop
dec
daa
fwait
test
pop
add
in
mov
sbb
jmp
adc
stc
push
out
ret
cmc
jecxz
mov
movsb
jp
cli
adc
and
mov
or
sub
fwait
dec
xor
adc
mov
hlt
and
incb
jbe
cmpl
pushf
push
imul
cmp
mov
jle
es
js
sarb
ljmp
sub
out
pop
stc
xor
inc
pop
inc
add
mov
mov
imul
inc
dec
notb
mov
fsub
ljmp
xor
or
push
into
pop
mov
mov
mov
test
aam
xchg
sbb
insl
fisubrs
pop
outsl
in
mov
jns
mov
or
out
sub
imul
jle
jne
xlat
add
cmpsl
mov
les
push
mov
imul
in
in
orb
jecxz
decl
shr
inc
adcl
mov
push
ss
pop
xchg
sbb
add
sbb
or
out
xor
jmp
in
ljmp
sbb
ja
in
outsl
mov
lahf
ss
sub
sbb
add
ds
add
adc
adc
xchg
inc
movsl
pop
ljmp
mov
lock
xchg
xchg
xchg
jmp
insb
add
jno
test
out
push
lock
dec
sahf
stos
mov
sbb
jmp
dec
leave
fptan
addr16
and
rclb
pop
and
shll
dec
push
and
hlt
and
push
pop
cmp
xchg
sbb
test
fstpt
fcomp
cmp
lock
stc
sub
adcb
sarb
jmp
mov
scas
jne
and
add
cmp
rcrl
gs
mov
xor
ds
popf
stos
dec
jl
adc
cmpsl
sub
dec
mov
sti
cmpl
rcrb
jp
aas
jbe
cli
dec
shlb
in
push
mov
dec
mov
sbb
inc
into
sti
in
loopne
loop
push
lock
dec
test
sbb
pushf
mov
push
lds
insb
ljmp
sbb
pusha
js
ljmp
cmp
mov
cmc
stos
fisttps
lods
pop
stos
mov
push
fcoml
movsb
cmp
mov
cmp
enter
push
ficoms
mov
cltd
hlt
mov
xchg
mov
std
ret
xor
mov
arpl
test
roll
sub
mov
es
add
lock
fisubrs
popf
ret
push
pop
push
or
rcrb
adc
lods
loopne
or
mov
loopne
pop
push
add
xchg
pop
and
xchg
cwtl
loop
jmp
xchg
jae
fiaddl
std
enter
dec
loop
mov
sub
lds
sbb
mov
int3
adc
and
sub
shlb
bound
adc
mulb
lret
icebp
sub
rcl
xchg
cmp
mov
mov
bound
inc
int
inc
pop
sbb
pop
sub
sarl
xchg
add
es
movsb
mov
jle
cmc
in
and
inc
pop
sbb
inc
test
xchg
dec
jg
pop
push
push
in
add
das
push
xchg
sub
ret
mov
inc
lods
mov
or
xchg
cmpsb
ja
out
mov
stc
ficoml
lods
inc
push
and
xchg
cltd
test
cmp
cli
cmc
xchg
lahf
iret
pop
daa
mov
inc
push
adc
andb
mov
leave
lock
pop
subl
cmp
addr16
popf
push
mov
clc
push
fcomps
xchg
jl
xchg
jno
in
arpl
ret
mov
repnz
xor
movsl
push
push
cmp
loopne
xchg
out
add
push
pop
jp
decl
mov
loopne
loop
inc
mov
imul
push
xchg
push
adc
dec
rclb
lret
frstor
movsb
xchg
adc
xchg
mov
or
mov
mov
inc
inc
ljmp
addb
mov
adc
pop
sbb
push
inc
jecxz
cmc
dec
lods
push
orb
sub
out
pushf
sub
scas
or
in
data16
mov
xor
mov
add
cli
arpl
and
mov
xor
push
push
mov
jg
add
loop
cmp
jmp
jmp
jae
push
inc
inc
mov
mov
mov
in
pop
xchg
pop
mov
or
adc
rclb
add
or
pusha
mov
out
in
leave
stos
lahf
inc
pop
cltd
pop
push
cmpsb
mov
pushf
or
repnz
mov
cmp
fsubl
lods
ja
test
xchg
dec
in
mov
mov
xchg
sbb
pop
orb
xchg
test
push
and
jo
jb
and
push
push
cmc
insl
in
mov
jle
mov
loopne
mov
stos
add
sti
outsb
mov
cmp
ficomps
into
enter
sbb
add
fstpt
std
int
mov
adc
in
mov
daa
sahf
lea
mov
dec
test
idivb
mov
mov
push
popa
cmp
stos
rclb
imul
mov
pop
enter
adc
mov
mov
out
enter
or
cwtl
mov
cltd
mov
pop
fs
mov
mov
shll
sbb
jmp
test
jmp
pop
cmp
sbb
stos
mov
scas
jo
test
dec
cmp
pop
mov
mov
adc
jp
cld
es
mov
in
enter
arpl
adc
jg
dec
or
dec
fisttpll
imul
dec
xchg
je
idivb
in
in
jmp
insb
adc
push
xchg
fmull
mov
mov
cmpl
adc
in
outsl
outsb
flds
sbb
sbb
lcall
dec
jbe
hlt
mov
aad
sbb
rclb
xorb
popf
mov
lea
or
or
xchg
or
mov
jb
pop
mov
jns
or
scas
out
faddl
nop
or
adc
fwait
int3
sub
xchg
lods
or
les
sbb
or
pop
xchg
xchg
add
lock
jo
clc
call
daa
inc
jle
mov
xor
insb
shll
ja
adc
jecxz
in
stos
dec
xchg
or
xor
je
scas
mov
aam
addr16
and
ret
mov
xchg
cmpsb
sbb
dec
aam
push
stc
cmp
adcw
decl
and
cltd
add
pop
scas
cmp
sub
adc
arpl
mov
xchg
lahf
mov
pop
in
test
mov
movsb
ret
repnz
cmp
mov
dec
xchg
movsb
mov
shlb
arpl
push
lods
in
icebp
lods
xor
adc
jge
in
mov
aaa
les
gs
int
rorb
xor
pusha
out
inc
int
fldlg2
insb
imulb
jnp
fcomi
push
lock
mov
dec
cmp
push
jne
inc
xchg
lahf
jno
mov
add
pop
xchg
test
dec
shll
mov
ljmp
mov
mov
in
mov
mov
jae
gs
mov
inc
leave
fldt
push
std
mov
adc
std
jmp
iret
mov
sub
or
inc
loope
mov
inc
inc
nop
arpl
and
adc
pop
xchg
inc
mov
pop
or
add
or
jb
jg
out
add
rcll
sarl
scas
mov
push
mulb
adc
in
and
mov
or
adc
fwait
push
cltd
mov
int
sub
subl
cmp
and
subl
xor
test
push
xor
adc
pop
stos
data16
shlb
mov
xchg
repnz
mov
xchg
mov
adc
push
mov
in
push
lahf
xchg
push
mov
hlt
xchg
mov
sbb
mov
inc
adc
pop
fs
notl
mov
or
pushf
xor
cld
movsl
mov
insb
iret
xor
lock
jmp
roll
push
jle
mov
adc
and
imul
fs
adc
out
push
xor
and
xchg
lods
xor
ret
xor
cli
adc
mov
mov
out
mov
loopne
notl
jno
or
cmc
sub
xor
pop
out
leave
sub
fs
sub
stc
cmc
mov
jle
dec
popf
xor
test
sahf
inc
lods
je
inc
scas
mov
xchg
mov
outsb
lret
pop
mov
sub
and
ljmp
adc
movups
icebp
xchg
daa
or
push
inc
imul
mov
jp
push
pop
or
call
orb
filds
or
push
cmp
push
in
lods
out
dec
leave
std
mov
lds
xchg
pop
pop
jno
out
ficoms
pop
call
pushf
imull
outsl
mov
popa
out
jb
sub
sub
ss
xor
cwtl
jno
pop
cld
mov
inc
sub
data16
add
mov
jl
cwtl
movsb
arpl
sbb
mov
cltd
lcall
push
mov
fsubr
ds
stos
xchg
lret
add
push
or
sbb
repz
pop
lahf
mov
clc
adc
bnd
stc
xchg
lods
xor
push
mov
outsb
sbb
clc
out
jg
push
dec
xor
ss
aad
gs
sub
dec
mov
inc
je
mov
fwait
movsb
sahf
pop
and
in
pop
popa
mov
push
jl
push
mov
mov
xor
ljmp
or
js
jne
imull
pop
mov
mov
dec
lods
cmpsl
jno
pop
mov
or
sbb
repnz
fdivrs
mov
insb
sub
xchg
inc
push
push
sti
mov
lds
jo
xchg
cld
arpl
in
fs
outsb
push
hlt
fs
test
inc
ss
push
outsl
mov
bound
fcmovnu
sbb
aam
jge
repz
aaa
push
mov
mov
push
pushf
cmpsb
aas
adc
xlat
clc
jp
jnp
mov
bound
leave
add
orb
cmpsl
in
adc
dec
push
sbb
add
ret
repnz
sbb
sbb
inc
pop
inc
repz
pop
out
adc
mov
and
push
aas
inc
xor
pop
in
and
inc
rcrl
arpl
xor
mov
pop
jl
hlt
add
push
adc
incb
mov
xchg
loopne
push
dec
xlat
sbb
loopne
arpl
repz
xor
dec
inc
xchg
fistl
aad
sub
xor
xchg
sbb
js
test
loope
sti
cltd
sarl
dec
or
leave
aam
jmp
xor
push
sahf
sbb
enter
mov
sub
cmpsl
es
cmp
sarl
ljmp
nop
ret
mov
cmp
add
jne
ss
ljmp
sbb
popa
shl
mov
pushf
les
or
xor
mov
shll
cmp
stos
mov
in
cmp
cmp
add
push
xor
sub
pushf
sbb
daa
and
xlat
mov
dec
inc
cmpsl
scas
fucom
or
cld
and
addr16
test
cmpsb
fisttpl
xchg
dec
mov
int3
cmp
pop
jnp
add
inc
sbb
push
sub
dec
divb
hlt
jmp
mov
inc
sbb
add
divl
out
ret
shrb
push
mov
jl
sbb
mov
shl
pop
pop
sarl
pop
cmp
cmpsl
cmpsb
js
jns
mov
fldt
ret
pop
xor
sub
dec
cmp
xor
add
adc
inc
scas
add
mov
push
call
cmp
ljmp
mov
push
push
inc
iret
push
popf
xlat
sbb
inc
jp
push
test
aaa
jns
or
adc
dec
subb
mov
mov
sub
adc
hlt
jno
or
dec
inc
loop
imull
or
push
or
push
push
dec
ja
cmpsb
or
sbb
cmp
fdivl
stos
push
mov
inc
enter
sahf
or
xchg
popa
imul
into
and
xchg
test
dec
rol
std
add
je
ljmp
rol
cmp
sub
in
int
mov
push
cmp
push
xor
nop
call
jge
push
jno
fidivrl
pop
xor
mov
addr16
imul
push
cmpl
iret
in
ja
daa
repnz
stc
js
std
out
or
or
cmp
jno
xor
js
cmp
push
or
test
cmp
imull
outsb
adc
fstpl
lahf
cmp
lea
jbe
dec
inc
adc
loope
cmpb
das
jge
mov
rorl
sub
stos
ret
jmp
dec
jns
jae
out
shrb
cmp
sbb
sti
pop
nop
dec
stc
mov
sbb
cmp
sub
subl
pop
mov
xor
adc
enter
jl
dec
cmp
fnstsw
xor
cmp
cld
jae
rcl
imul
shlb
mov
lds
jmp
es
push
cmpsb
xor
push
jl
test
clc
lds
les
xor
fimull
cmp
jb
xor
insl
mov
jb
sti
jno
mov
jmp
xor
test
mov
aaa
ja
out
cld
push
js
repnz
push
inc
loop
pop
mov
adc
out
pushl
fs
loopne
daa
xor
sub
jp
xchg
push
cmp
mov
cmp
das
mov
or
add
add
inc
jne
push
test
lds
sbb
stos
jnp
pop
mov
mov
adc
push
jae
or
insb
lret
testb
mov
jae
xchg
dec
scas
jo
cmpsl
ja
ja
cmp
es
test
daa
aam
mov
mov
lods
sar
imul
mov
add
loope
add
and
inc
jle
scas
jg
imul
iret
xor
leave
sbb
iret
rcrl
mov
inc
xchg
sahf
sahf
adc
fcomi
xor
out
sub
inc
mov
testl
add
lret
mov
popa
fiaddl
xor
jb
int3
adc
cmp
xor
or
popa
and
adc
fsubr
js
jecxz
cwtl
or
and
outsl
aam
and
cld
dec
repz
repz
fildl
fsts
rcrb
adc
mov
movsl
adc
pop
and
mov
or
enter
rsqrtps
mov
xchg
out
add
fldenv
jb
int
cltd
fwait
xchg
mov
xlat
fs
cmp
adc
mov
bound
jne
call
je
mov
jge
xlat
shlb
lea
xchg
inc
mov
jecxz
pop
ja
inc
jmp
push
dec
pop
mov
das
dec
or
push
ret
lds
add
out
sbb
xor
push
xchg
push
mov
jp
or
rcl
in
push
mov
and
mov
push
jle
pop
sub
sbb
push
inc
int
dec
pop
out
mov
sbb
add
iret
int
dec
mov
outsb
xor
enter
aad
nop
and
ja
sub
aad
fsubrp
add
pop
popf
cmpsl
sahf
xor
and
inc
xchg
iret
fwait
jmp
loop
xor
rep
mov
scas
cld
lea
pushf
ret
fcomps
je
loope
jp
mov
ss
idivb
adc
mov
add
mov
shrb
arpl
out
cs
insl
std
gs
push
lcall
loopne
mov
cmp
sbb
mov
cwtl
jp
dec
cmp
xchg
ficomps
mov
pop
cmc
dec
mov
out
sbb
mov
jl
xor
mov
inc
inc
mov
push
mov
mov
and
ljmp
and
push
sbb
pushf
add
test
ja
mov
push
int3
lods
and
cmc
adc
push
mov
rcrl
mov
adc
pop
jl
aas
imul
xchg
lea
sub
xchg
jg
mov
mov
gs
or
rorb
and
fucomip
sub
jbe
mov
lods
addr16
push
pop
cmp
popf
std
negl
mov
mov
dec
mov
sbb
dec
mov
mov
xor
out
xor
lret
add
or
aam
push
ljmp
sbb
test
outsb
ljmp
add
cmp
stc
lahf
push
call
std
push
jge
out
mov
xor
dec
push
outsb
push
scas
adc
push
jbe
stos
movsl
push
lods
mov
cmp
jo
mov
mov
or
dec
int
daa
jb
dec
call
loopne
pop
out
pop
jecxz
xor
ficoml
pop
cwtl
cmp
add
aad
rolb
cmpsl
sahf
push
push
out
cli
in
and
cs
jecxz
fisubl
ret
repz
lds
cmp
loop
fs
bound
outsl
push
sahf
mov
iret
add
les
push
out
adc
pop
fstps
xchg
xchg
lahf
push
fsubr
or
sub
nop
ljmp
mov
lret
out
sub
rorb
out
inc
shl
mov
sbb
and
cmpsb
mov
add
or
xor
imul
mov
fsubl
sub
mov
ror
fsubrs
inc
add
or
mov
xchg
outsb
lods
pop
sahf
add
jge
jno
int3
stos
dec
test
aam
or
jge
cli
mov
xchg
repz
test
inc
sbb
mov
je
and
ret
ret
shrb
repz
sbb
and
xlat
out
scas
insl
inc
jno
adc
jo
pop
push
cmp
push
xchg
sub
inc
mulb
shrl
mov
jmp
push
or
imul
aad
aas
imul
arpl
sub
fistpll
test
idivl
popf
and
fnstenv
fdiv
out
fsubr
rorl
sub
jge
jle
jmp
outsl
mov
xor
out
repnz
sbb
jb
jno
loopne
outsb
cmp
pushf
jle
pop
out
into
cmp
push
jle
jmp
cmp
jno
sbb
push
push
sbbb
leave
add
adc
inc
push
int3
mov
sbb
in
lret
lahf
test
xchg
mov
fisubl
mov
mov
xchg
add
out
bound
jno
push
inc
mov
clc
push
lock
or
je
aad
out
loop
cmp
insl
inc
ss
xchg
lock
mov
jne
stos
jmp
aas
and
xchg
push
fisubrl
mov
mov
shr
and
add
loop
pusha
adc
out
ret
jg
mov
aam
mov
stc
pop
mov
pop
in
push
leave
adc
subb
push
shll
scas
push
enter
sub
mov
jl
mov
jbe
imul
nop
cli
scas
push
or
mov
mull
add
inc
test
orb
push
in
negl
cmpsl
mov
and
push
shlb
iret
pop
ret
call
data16
arpl
push
dec
add
sbbl
and
dec
daa
inc
test
inc
cmp
loop
shrb
mov
imul
jb
xchg
sbb
ds
decb
push
cmp
js
jno
mov
divb
shll
xchg
fcomip
jmp
inc
sub
dec
lcall
add
mov
pop
pop
sub
or
pop
mov
imul
mov
dec
add
mov
push
fiadds
push
sbb
mov
icebp
or
mov
cmpsl
daa
fadd
ret
and
cmp
adc
mov
lock
jmp
sbb
test
jp
sti
das
xor
shl
cmp
in
mov
lcall
into
mov
subl
cwtl
out
bound
test
cmp
xchg
in
pop
test
sub
xor
int3
inc
cmp
repz
in
repnz
stos
jno
push
out
subl
push
ja
mov
shr
add
jnp
sub
lods
pop
xchg
ja
outsl
aas
loop
popf
inc
sub
xchg
dec
xchg
xor
cmpsb
andb
pop
fsubrl
dec
pop
xchg
in
daa
andl
cs
fs
mov
lea
xor
fwait
mov
out
stos
mov
mov
cmp
cmpsl
insb
idiv
xchg
cld
jb
movsl
add
dec
fisttpl
in
movsb
adc
mov
dec
arpl
cmp
push
jmp
xor
fwait
lret
out
dec
xchg
ja
pop
mov
jl
in
mov
clc
jmp
ljmp
adc
mov
mov
insb
mov
jo
test
mov
mov
ret
push
cs
repz
js
stc
rolb
popf
push
cmpsb
cmp
dec
dec
adc
pushf
inc
std
ljmp
or
mov
bound
jl
call
sub
pop
jno
sub
jl
int
pusha
repz
push
dec
xor
sub
cmpb
and
mov
nop
out
lods
inc
in
hlt
lods
scas
pop
pop
push
test
in
cmp
and
test
xor
inc
dec
adc
jae
int3
repnz
fs
std
rorl
dec
mov
cmp
sub
and
cmc
stos
mov
mov
pushf
gs
cmp
adc
cmp
push
jg
adc
or
mov
shlb
jne
mov
mov
aaa
lret
cmc
mov
push
fidivrs
lcall
loopne
or
adc
jl
popa
adc
in
stc
js
mov
pop
fidivrl
adc
inc
loopne
and
aaa
pop
jge
divb
jb
cwtl
jp
mov
mov
cmpsl
add
lds
imul
cwtl
ljmp
pushf
mov
movsb
loop
jmp
jns
scas
and
decb
sub
mov
jp
divl
js
push
mov
sbb
ja
xor
push
inc
add
in
adc
bound
cmpsb
jne
rorb
push
imul
sti
cs
cmpsb
xor
dec
xchg
dec
cld
iret
out
div
hlt
and
dec
jb
shrl
cltd
xchg
test
lret
cs
shrl
xchg
dec
and
int
push
loopne
push
adc
xchg
sub
sub
jae
lock
dec
dec
push
loope
roll
sbb
mov
add
insl
xor
dec
push
cmc
test
jne
xchg
test
cmp
pop
inc
push
adc
sub
iret
mov
jl
enter
in
push
ret
into
inc
lea
jp
subl
pop
stos
pop
aam
cli
jg
push
hlt
test
adc
mov
into
das
or
lods
ljmp
popl
lods
gs
jno
dec
ss
jecxz
mov
loope
icebp
and
add
ficoml
and
shlb
sbb
sbb
or
sahf
dec
movsl
dec
mov
ss
enter
mov
cmp
mov
fsubs
lods
xor
pushf
imul
out
pop
int
dec
mov
mov
dec
cmp
mov
adc
add
mov
mov
in
adc
add
cld
push
mov
mov
xchg
sbb
cmp
bound
outsb
repz
push
inc
cmp
popa
sub
flds
fs
push
push
insl
mov
pusha
jmp
xchg
dec
dec
cld
icebp
mov
sub
das
push
test
inc
push
xchg
outsl
xchg
sub
data16
stos
sbb
pop
fldcw
dec
cmpsb
mov
lea
mov
in
dec
mov
jne
or
fcoml
and
inc
xor
pop
into
cmp
lock
inc
stos
sbb
dec
sti
push
xlat
or
sbb
xor
add
dec
and
mov
fs
adc
loopne
push
fidivrs
cmp
loopne
adcb
js
add
cmp
mov
cmpsl
xchg
xorb
inc
xor
inc
adc
push
sbb
or
fidivl
mov
iret
mov
lcall
enter
in
and
push
aad
imul
add
outsb
sub
repnz
jbe
fdivs
inc
stos
cltd
cmpsb
bound
jmp
xor
mov
xor
lret
notl
push
push
jl
mov
test
bswap
xchg
jae
pop
stos
inc
cmp
cmp
adcb
mov
push
popa
ja
mov
xor
xor
mov
xor
int3
push
addr16
mov
xor
icebp
adc
add
sbb
xor
loop
sbb
fcmovne
xchg
pop
xlat
xor
cltd
pop
adc
std
inc
jae
insl
xor
test
mov
add
sbb
cld
in
lret
outsl
in
or
in
and
stos
ffreep
xchg
inc
inc
js
sbb
mov
xor
pop
lahf
push
cli
mulb
insb
cltd
cltd
loope
loop
cmp
mov
dec
arpl
sar
or
mov
and
xchg
das
test
mov
adc
push
pop
outsl
in
jge
dec
xchg
push
xchg
xchg
repnz
arpl
out
inc
lea
cmpsb
xchg
or
aam
sbb
std
jle
outsl
sbb
es
punpckhdq
cmpsl
pop
ljmp
xor
pop
es
mov
push
lods
and
add
pop
shrl
adc
int3
mov
jmp
push
pop
repnz
push
int
xchg
sbbl
je
and
add
or
lret
adc
push
mov
aam
adc
paddb
mov
pop
cmpsl
lcall
and
fildll
adc
and
jl
ret
clc
push
loopne
sub
ficoml
ja
or
jmp
pop
ljmp
fmul
xor
xchg
data16
push
lret
or
test
fimull
test
pop
setb
xchg
out
pop
or
xchg
test
cld
nop
stos
mov
data16
mov
and
inc
adc
or
jbe
and
cmp
ss
roll
mov
inc
orb
int3
testb
push
aas
rep
sub
cs
or
cmp
jl
mov
ficompl
jo
jecxz
and
and
popa
jmp
mov
mov
in
aad
xlat
int3
jg
sbb
dec
fcomp
test
pop
jle
orl
shl
mov
test
pop
dec
xchg
imul
mov
xchg
daa
mov
enter
mov
mov
out
add
push
sub
fidivrs
inc
pop
lock
das
lds
push
sti
cmp
jle
push
lret
cmpsb
movsl
cmc
cmp
add
lret
sbb
mov
push
ret
das
push
and
adc
pop
push
mov
stc
inc
add
std
sahf
popf
sbb
mov
je
cltd
outsl
stos
daa
cs
cld
je
out
mov
aam
movsl
cli
pop
repz
dec
imul
xor
cmpsb
xchg
inc
xor
stc
and
mov
scas
inc
fs
xor
mov
shrb
push
je
dec
sub
fdivr
and
dec
addr16
inc
rolb
jbe
mov
fcompl
jmp
insb
mov
ficomps
mov
lahf
adc
in
adc
decb
mov
in
notl
pop
shl
addr16
add
push
pop
cwtl
aad
dec
out
sub
mov
sbb
lret
test
mov
pusha
enter
dec
pop
arpl
push
rcrb
mov
or
and
sbbl
push
push
inc
pop
fildl
lea
in
fstpl
inc
out
xchg
lods
jmp
adc
loopne
bound
or
daa
xorb
push
mov
hlt
add
stos
addr16
rcll
scas
inc
push
and
out
or
mov
jmp
mov
mov
xchg
repnz
cmpl
in
inc
or
dec
arpl
stos
inc
jb
mov
repnz
xchg
loop
stos
push
shrb
jno
lahf
cwtl
popa
and
into
inc
xor
adc
xchg
xchg
rorl
popf
mov
dec
scas
dec
xchg
cmp
adc
push
pop
mov
xor
rclb
leave
cmp
ret
push
test
mov
xor
adc
jmp
test
lock
adc
icebp
pop
icebp
ja
lret
sub
xchg
mov
mov
clc
lcall
pop
inc
xchg
mov
pop
or
jp
orl
rcll
mov
cli
or
mov
cmp
into
push
pop
adc
movsl
int
pop
push
jnp
mov
push
outsl
push
pop
aaa
xchg
in
cmp
xchg
lea
inc
mov
dec
pop
push
mov
mov
lds
bswap
pop
mov
lret
jno
pop
mov
push
mov
add
cld
mov
and
xchg
in
dec
sbb
iret
add
call
out
adc
xor
insb
pushf
aas
jnp
loopne
mov
pop
pop
add
push
mov
test
ljmp
repz
ja
mov
or
jl
xchg
aam
mov
push
inc
ja
xor
pop
aaa
pushf
scas
lcall
pop
call
sbb
mov
fucomi
adc
mov
clc
std
mov
rclb
or
daa
incb
ret
std
cmp
lds
into
adc
sbb
and
pop
xor
cli
xchg
pop
adc
mov
xchg
or
xorl
lret
inc
fiaddl
mov
cmpsl
and
outsl
gs
imul
jbe
pop
ficoml
mov
push
outsl
sbb
subb
std
dec
lret
stc
and
out
or
out
jg
mov
push
adc
fs
mov
or
mov
ljmp
rcl
cmp
push
outsb
or
or
outsl
stos
mov
xchg
addr16
lods
and
inc
sbb
cwtl
jo
xor
cld
ffree
jne
dec
addr16
repnz
out
push
sbb
fistpll
push
inc
ret
lods
ljmp
andb
mov
xlat
das
outsl
movsl
negb
decb
xchg
popw
fcmovb
cmp
lods
sub
fdivl
dec
xchg
imul
sbb
jecxz
loop
out
ret
mov
out
movsb
lcall
add
pop
jns
and
popf
mov
insl
cmpl
xchg
test
push
and
jae
ds
mov
into
sub
xchg
inc
push
loopne
ja
testb
test
adc
sub
shl
dec
aad
or
mov
inc
lods
cmp
jecxz
out
hlt
repnz
pop
neg
sub
mov
bound
pop
ljmp
fs
gs
fcmovu
imul
int3
fnstcw
roll
loopne
xor
sub
icebp
fbstp
mov
add
ss
push
data16
cwtl
xchg
std
xorb
jb
aam
les
pop
pop
adc
test
nop
and
and
es
movsb
adc
lods
cltd
dec
push
add
and
add
cmp
fwait
sbb
or
add
inc
pop
scas
sbb
mov
add
aam
test
jne
not
leave
in
filds
dec
cmpsl
insl
or
in
mov
mov
pop
cmpsb
insl
xchg
imul
negb
mov
insb
adc
xor
inc
push
push
mov
hlt
scas
add
dec
test
test
shlb
jbe
lret
incl
mov
stc
imul
imul
xchg
loop
inc
shr
and
out
scas
mov
sub
mov
xor
je
retw
dec
sub
and
mov
faddp
in
lea
loope
mov
outsb
test
add
test
out
sahf
sub
clc
dec
sbb
jg
xor
lods
dec
sub
in
adcb
xor
mov
xchg
outsl
fsubrs
xchg
pop
fcompl
jbe
jne,pn
push
and
in
push
mov
ljmp
mov
ja,pn
cmp
mov
dec
in
jle
pusha
es
dec
ret
dec
pop
call
loopne
testl
fwait
shl
pop
add
mov
loopne
ja
sahf
add
outsb
ror
mov
pop
mov
rorl
push
xchg
mov
fwait
ret
inc
mov
cmp
push
mov
mov
sbb
stos
aaa
gs
out
xor
pop
dec
ja
movq
inc
push
jg
xor
pop
js
outsl
faddl
jne
xchg
jl
std
inc
std
sbb
aad
arpl
ficoms
sbbl
jb,pt
cmp
mov
lds
jge
fisubs
jb
add
push
insb
push
jmp
inc
shll
iret
lret
ds
add
fistps
movsb
mov
lahf
pusha
push
cmp
push
pop
fs
cld
add
fidivs
stos
je
pop
dec
mov
dec
push
push
fwait
mov
out
jbe
adc
jg
mov
inc
and
push
push
push
or
gs
inc
jnp
adc
mov
das
jb
inc
dec
push
adc
xchg
out
adc
shrl
xchg
jne
push
jbe
mov
jbe
gs
jbe
xchg
mov
add
mov
test
jg
inc
inc
shlb
fimuls
pusha
popf
dec
xor
jo
inc
adc
roll
icebp
cwtl
and
sbb
push
mov
rcrb
push
xchg
mov
sbb
lret
xor
xor
mov
push
in
xchg
add
xor
es
cs
pop
inc
outsb
push
mov
xchg
push
xor
test
pop
int
push
mov
movsl
cs
mov
rclb
push
sbb
add
sub
push
scas
jo
adc
aas
pushf
sahf
dec
ja
fldl
sahf
icebp
pop
sbb
out
movsl
push
dec
scas
ret
xchg
pop
cmc
jnp
xchg
mov
add
clc
dec
jmp
inc
dec
test
sbb
outsb
aam
lock
leave
jbe
sbb
add
in
inc
dec
pop
jp
arpl
sbb
mov
movsl
outsb
repnz
push
cmp
cld
mov
inc
dec
scas
bound
cmc
sub
jg
lret
cli
das
daa
pop
fbstp
ds
iret
adc
shlb
cmp
ficoms
jl
pop
es
stc
pop
or
call
fwait
aam
in
xchg
test
fidivl
rorb
dec
adc
sbb
pop
cli
clc
push
xorb
fiadds
je
das
or
pop
mov
and
daa
sbb
or
test
stc
sbb
push
push
out
mov
icebp
popa
aas
in
inc
push
ret
mov
mov
in
xchg
mov
ljmp
aam
mov
lret
cmp
cmpb
clc
inc
pushl
movsb
push
and
cmp
loopne
sbb
sub
pinsrw
push
fiadds
mov
fiadds
lret
or
xchg
sarl
pop
push
mov
lds
sub
or
outsl
pop
out
xor
mov
pop
les
outsb
fstl
ss
mov
and
and
je
push
jmp
imul
pop
in
pop
lods
je
mov
cmpsb
push
sbb
push
movsb
es
icebp
jae
adcl
add
adc
sbb
sub
and
lock
icebp
mov
scas
jge
aaa
xor
and
mov
daa
mov
cmpsl
insl
cmp
mov
mov
in
and
xchg
mov
shrl
cmc
inc
notb
mov
add
mov
fnstsw
movsl
jns
std
pushf
cmp
mov
and
movsb
mov
cmpsb
push
push
jl
js
sub
repnz
jb
out
mov
jp
sbb
ljmp
push
mov
cmp
leave
lcall
mov
jge
push
jmp
testb
adc
cmp
jge
add
lods
adcl
mov
pop
add
xchg
call
xchg
jmp
mov
xchg
lahf
cmpsb
pop
gs
adc
lret
sbbb
cli
mov
scas
mov
nop
ret
push
jne
cmp
movsl
and
je
pop
add
pop
add
or
jno
popa
sbb
loop
hlt
int
xchg
cmp
jl
test
movsl
test
xor
repz
or
push
mov
jne
insl
jnp
push
jl
jmp
sbb
push
int
fs
mov
add
pop
push
cmpsb
pushf
sub
pop
cmc
and
dec
scas
sub
stos
nop
dec
aas
in
fistps
les
mov
cmp
or
push
mov
add
xor
rorb
mov
test
mov
dec
or
movsb
dec
lods
xor
scas
insl
arpl
mov
leave
int3
sbb
cmp
xchg
sub
and
push
pop
dec
out
arpl
cmp
push
arpl
sti
adc
jno
mov
imulb
inc
mov
jecxz
jb
movsb
push
mov
push
lcall
movsl
hlt
push
fisubl
leave
popa
add
std
push
test
addl
mov
arpl
jo
lods
jecxz
faddp
fcomps
out
int3
sti
movsb
int3
lods
into
cld
adc
xor
mov
sbb
xorl
xorl
mov
gs
fnstenv
sahf
outsl
daa
inc
lret
mov
in
sbb
jnp
jmp
or
inc
ret
mov
roll
sub
inc
fwait
stos
xchg
test
xor
leave
inc
pop
sbb
leave
scas
mov
sbb
loope
shr
addr16
bound
and
and
pop
pop
pusha
rcr
cmpsl
loope
mov
jg
lret
xor
fidivrl
outsb
mov
jle
adc
or
sbb
jno
inc
jns
test
sub
lods
pop
test
cs
or
xor
dec
fnstenv
out
pop
jmp
test
mov
push
movsl
mov
mov
or
sbb
and
incb
daa
inc
sub
and
lret
testb
cld
push
cmc
outsl
mov
js
test
mov
adc
xor
loop
stos
cwtl
jo
lds
jmp
push
mov
fimuls
repnz
add
jno
hlt
xor
clc
pop
lcall
mov
mov
sbb
jl
inc
and
lods
mov
sub
ja
inc
aad
sarb
jb
mov
mov
mov
push
fdivrl
jp
add
push
xorl
xchg
imul
dec
cmpsb
mov
fadds
fidivrs
push
push
movsl
mov
std
mov
dec
testl
adc
sbb
mov
cmc
cld
or
std
mov
insb
ss
cmpsl
sbb
cld
pop
sub
adc
mov
sub
hlt
aad
dec
push
mov
lods
or
nop
cmp
pop
cmpsb
ds
fisttpll
inc
jle
sub
int
outsl
pop
inc
push
mov
ret
xor
xor
pop
xchg
aaa
jo
lret
int3
jge
std
arpl
clc
insb
lea
imul
test
mov
test
les
xlat
daa
repnz
sbb
fsubl
imul
sub
mov
jae
inc
sub
shrb
and
inc
mov
jecxz
aaa
add
mov
jno
inc
les
movsb
xchg
mov
cltd
fcmovbe
xchg
data16
pop
jecxz
fwait
and
or
add
sbb
push
bound
push
push
inc
jno
rolb
movsb
or
push
pop
inc
out
mov
shl
mov
jecxz
out
addr16
xor
imul
int
idivl
test
pop
mov
ss
roll
sbbl
or
bound
or
pop
and
les
cmpsl
cltd
jmp
imul
addr16
frstor
out
cmpsl
mov
adc
int3
pop
loopne
xor
ja
sub
sbb
adc
sti
cmpsl
test
xchg
xchg
aas
pop
jnp
pop
ror
adc
push
lds
jb
stc
cmpsb
inc
add
cmp
jb
xchg
mov
test
mov
inc
lret
sbb
dec
adc
push
xsaveopt
xchg
xor
mov
js
popf
in
loop
jno
lods
or
es
decl
in
mov
orb
sub
cmp
push
pop
xor
sub
addl
jo
int
dec
cmc
inc
movsb
out
dec
fnstsw
cli
ficomps
inc
shl
ret
cmp
push
repz
mov
int3
cmc
popa
rep
lret
dec
mov
push
movsb
xor
loopne
pop
dec
ret
in
bound
cmp
cli
xchg
fsubrs
out
pop
shr
adc
or
cmp
inc
fsts
push
rorb
pop
aad
jecxz
imul
add
xor
mov
call
xor
pop
pop
jae
jnp
subl
rcrb
scas
cmp
push
fstps
push
jecxz
lcall
add
aad
fisttpll
mov
and
and
or
flds
add
mov
xor
fistps
out
add
lock
inc
lea
push
jle
dec
imul
lahf
lock
js
add
fbstp
mov
dec
test
jbe
icebp
xlat
out
dec
sbbl
or
les
leave
jne
jbe
in
cmpsl
jecxz
inc
bound
mov
jge
pop
cwtl
or
adc
or
lock
jae
js
test
dec
and
movb
in
test
cmpb
les
ret
fmull
aaa
sbb
insl
shlb
rclb
push
mov
cmc
xor
into
add
fwait
mov
clc
repnz
orl
cwtl
loop
mov
jecxz,pt
jge
int
cmp
std
add
jp
add
in
in
repz
lret
cld
sub
jbe
jle
xor
and
lods
cmp
pop
xor
jmp
leave
mov
inc
lock
push
test
mov
pop
cs
cmp
xor
xlat
jb
sbbb
xorl
push
lahf
xor
iret
insb
mov
mov
nop
cmp
fcoms
pop
aaa
sbb
dec
jge
rol
mov
mov
push
loope
fnstsw
iret
push
lahf
mov
out
data16
fidivrs
xor
lods
testl
popf
mov
or
cmpps
add
les
daa
fcmovb
jns
sbb
sub
fdivs
subb
fwait
in
xchg
stos
out
pop
adc
in
out
push
sbb
fcompl
mov
xchg
dec
fimull
add
scas
int3
mov
les
out
or
mov
xor
jecxz
vrsqrtps
inc
repnz
mov
push
cltd
ljmp
addr16
dec
lea
sbb
pop
mov
int
jne
dec
loop
repz
call
xchg
int
jmp
cmpsb
or
iret
pop
inc
jnp
pop
mov
scas
inc
mov
loopne
lahf
push
jmp
mov
out
and
dec
fistpll
jp
xchg
iret
shrb
sti
lret
sub
das
mov
pop
popa
imul
cmp
scas
movsw
ja
cwtl
aam
in
cmp
in
inc
jne
in
add
inc
inc
mov
mov
sbb
jns
mov
lcall
popa
cmp
dec
in
test
sbb
insb
or
pop
mov
push
inc
sub
bound
outsb
mov
sahf
ss
jo
call
repz
insl
mov
sub
call
add
fstl
pop
push
add
stc
int
jmp
pop
sbb
dec
jle
pushf
dec
sub
cmc
or
nop
push
sarl
inc
mov
mov
outsl
sub
inc
jne
fdivrs
sub
cli
int3
das
sti
stos
hlt
shl
fstl
lahf
pop
sbb
ret
pop
push
dec
movsl
and
sub
dec
or
test
ss
and
iret
ja
sub
je
xor
mov
and
or
mov
hlt
insb
fidivrl
jg
lahf
ret
cmp
rcr
jecxz
jle
lahf
cmp
popa
movsl
lods
jle
jl
int
xor
into
jns
mov
sbb
cmp
sub
das
xorl
mov
add
cmc
inc
pop
into
nop
icebp
cmpsl
ljmp
stos
insl
out
test
pop
or
xchg
insl
inc
inc
popf
lods
int
mov
dec
loope
jmp
mov
lods
faddl
out
mov
mov
mov
add
mov
mov
loopne
int3
iret
hlt
dec
rcrl
rorb
jecxz
or
lds
fprem1
or
punpcklbw
xor
jne
je
lods
imul
and
pop
je
dec
lods
or
push
cltd
pop
adc
out
outsb
mov
mov
jnp
jb
cmp
imul
add
in
xlat
pop
std
xchg
mov
push
sahf
xor
pop
lcall
jnp
and
outsb
push
mov
bound
add
add
push
dec
loop
lret
int
cli
xchg
jg
xor
rorb
std
inc
mov
mov
repnz
addl
mov
jmp
push
imul
pushf
aam
jb
mov
sti
popa
inc
pusha
shlb
enter
mov
out
mov
mov
lcall
pop
ss
mov
enter
mov
mov
into
pop
test
xchg
cwtl
arpl
pushf
push
stc
xor
scas
in
xor
mov
in
and
jnp
dec
ja
aad
shll
mov
jb
sub
mov
stos
mov
cmc
stos
push
mov
push
push
int3
pop
sub
pop
cmpsl
adc
xor
incb
xor
jle
sbb
push
push
mov
mov
aad
cli
adc
std
push
mov
add
ret
call
and
out
add
add
xchg
dec
cwtl
mov
mov
add
jne
fcoms
add
or
or
jl
push
aaa
jecxz
cmpsl
out
scas
dec
mov
cmpsl
pop
inc
lea
cmpsb
sub
push
dec
inc
dec
sbb
mov
or
les
mov
mov
in
rorb
je
notl
sbb
aas
aas
addr16
jne
sbb
cs
inc
out
cmp
mov
push
pushf
and
xchg
xor
popf
hlt
ja
mov
dec
jp
cmp
mov
div
jbe
icebp
out
insl
mov
hlt
xor
orb
adc
adc
dec
fildll
ljmp
daa
jge
cmpsl
loop
shlb
mov
dec
xchg
movsb
popf
int
repnz
loop
inc
mov
loopne
xchg
pop
fisttps
jecxz
fcompl
int
adcl
je
loopne
stos
dec
adc
push
into
mov
fwait
test
pop
push
into
lahf
xchg
mov
mov
popf
iret
mov
add
bound
dec
jmp
sbb
ja
aad
sbb
mov
mov
addb
xor
and
hlt
ljmp
cs
and
mov
lcall
hlt
cmp
jp
fwait
std
sbb
outsl
movl
aad
fdivp
hlt
sbb
or
sti
iret
popf
mov
inc
pusha
inc
int3
jbe
or
sub
lock
add
jge
sub
cmp
loop
cmp
aad
sub
shlb
push
add
std
aad
or
add
rclb
andb
pop
cli
mov
add
scas
aam
inc
jg
jae
aad
mov
push
into
sbb
out
ss
aad
sub
or
sub
movsl
xchg
mov
pop
cmp
add
jge
lahf
insb
xchg
adc
mov
mov
mov
xchg
into
in
cmp
sbb
sub
push
ss
push
iret
lret
mov
xor
adc
dec
insl
sbb
inc
mov
and
ret
xor
pop
jns
push
pop
mov
lcall
dec
add
stos
test
xlat
cli
imul
insb
pop
or
scas
pushf
aas
pop
daa
inc
jb
arpl
insb
lods
xor
mov
incb
mov
daa
or
aaa
push
mov
adc
mov
mov
or
inc
popf
jae
fstpt
leave
into
mov
xchg
andb
jp
lcall
mov
sub
inc
jp
test
jo
xlat
xchg
fsqrt
fcomp
mov
mov
das
call
sub
sub
jns
enter
add
cmpsb
in
stos
mov
jne
imul
push
aaa
ret
sbb
inc
fstps
sbb
push
pop
add
jne
sub
xlat
into
mov
add
sti
out
jg
push
cld
inc
inc
cmpsb
fstl
icebp
aaa
xchg
pop
push
stos
add
mov
cmp
pop
dec
idiv
insb
daa
push
lds
xchg
adc
aas
push
popf
insb
sti
fmul
stc
mov
and
inc
xor
cmp
jb
xor
call
sub
or
add
jle
popf
or
mov
ja
int
jae
call
cli
cmp
ja
arpl
in
add
xlat
mov
dec
xchg
xchg
mov
out
and
scas
inc
test
fwait
and
lods
cmpsb
mov
xchg
into
pushf
push
sbb
lods
out
pop
mov
popf
shr
push
into
lret
or
loop
or
jecxz
jle
xor
mov
push
dec
int
mov
or
subb
scas
outsl
insl
test
dec
cmp
notl
cmp
scas
cmpsl
jbe
std
sub
ljmp
rcll
aaa
push
mov
flds
and
cmp
lds
daa
cmp
jp,pn
ja
sbb
fidivl
out
imul
into
push
mov
notl
sahf
pop
jne
roll
imulb
aaa
cmp
mov
jb
stc
mov
adc
xchg
out
push
aad
mov
in
push
out
xor
adc
push
imul
cmpsl
mov
pop
inc
cmpsl
add
test
mov
jo
sbb
or
clc
jge
fcmovbe
pop
jae
push
inc
cld
xlat
lods
stos
pop
inc
icebp
push
xchg
or
insb
mov
and
aas
push
push
mov
mov
andl
mov
sbb
mov
nop
sub
ret
dec
cli
in
imul
inc
test
ficompl
iret
sti
cmp
adc
pop
out
fdivl
fnsave
js
mov
xchg
rorb
jno
dec
js
mov
mov
cmp
inc
or
fiaddl
jp
pop
xchg
mov
gs
push
push
jns
outsb
or
jae
fidivrl
int
dec
aam
imul
push
mov
jo
insb
add
fistl
ljmp
mov
dec
inc
mov
push
lds
test
enter
cwtl
lock
jns
daa
in
add
in
and
loopne
xor
push
insl
lret
mov
inc
mov
out
movsl
sbb
add
or
imul
push
fmull
imull
and
repnz
jns
repz
dec
jno
xchg
in
bound
int
in
stos
mov
hlt
inc
jbe
adc
push
ljmp
jp
jg
call
loope
mov
fsubrs
cmp
pop
dec
popa
negl
jns
enter
cmp
push
xchg
jge
xchg
push
lds
adc
jle
es
out
adc
xchg
mov
pop
fsubs
fadd
mov
xor
es
movsl
lea
add
fimull
sbb
mov
hlt
xchg
loopne
outsl
int3
or
adc
and
dec
test
cwtl
xchg
int3
mov
adc
push
pop
hlt
adc
negb
lock
mov
and
dec
push
xchg
xchg
pop
pop
push
jo
pushf
sub
testl
in
cli
shlb
movb
inc
cli
push
cmp
ljmp
ret
sbb
aas
divb
dec
and
inc
leave
popa
mov
int3
shlb
mov
mov
pop
pop
iret
out
xchg
xor
fwait
cmp
rcrb
popa
stos
mov
inc
mov
daa
add
icebp
push
push
mov
add
pushf
lret
jmp
sub
and
jl
pop
cld
jb
xor
or
push
jne
sbb
arpl
push
mov
jbe
xchg
pop
outsb
arpl
or
arpl
inc
mov
mov
cmp
pop
pop
aad
xor
fwait
int3
push
fdivrl
cmp
dec
aas
dec
not
daa
jne
dec
in
sbb
mov
pushf
ja
inc
fldenv
dec
pop
mov
lods
cmp
hlt
in
stos
cmp
pop
mov
leave
inc
jge
std
fildl
and
or
push
mov
mov
push
jb
jne,pn
movsb
stos
push
dec
add
pop
fwait
enter
mov
test
cld
nop
adc
push
into
jl
dec
mov
rclb
jns
dec
mov
ljmp
push
xorl
or
pop
sub
inc
es
fsubrp
pusha
rorb
xchg
mov
push
imul
mov
nop
xchg
inc
push
lock
mov
bound
testb
cmpsl
adc
dec
out
out
test
xchg
rsm
sbb
into
mov
mov
les
and
test
pop
cltd
mov
xorb
into
xchg
mulb
ss
inc
inc
mov
jb
movsb
add
lahf
add
mov
shrb
icebp
icebp
fsubs
jnp
push
insb
fucomip
add
mov
jmp
aam
sub
movsb
jnp
xor
xchg
push
jno
mov
inc
sbb
lcall
aad
js
insl
stos
mov
loopne
popf
add
lcall
xchg
xchg
adc
js
or
sub
test
vmovaps
dec
mov
bound
imul
push
inc
xor
push
jne
movsb
int
push
adc
daa
testl
and
outsl
int
addl
cwtl
imul
outsl
dec
iret
daa
jo
pop
mov
sbb
cmp
sahf
xchg
mov
add
add
out
pop
or
mov
popa
dec
call
pop
call
iret
and
xor
sub
fwait
stos
dec
outsl
sub
pop
inc
shl
xchg
pop
call
sbb
cwtl
jne
inc
dec
adc
cmpsb
lret
push
out
int3
add
dec
dec
dec
out
pop
out
adc
sbb
lock
aaa
push
faddp
xor
cli
jp
pop
jne
push
add
mov
mov
out
mov
pop
xorb
popa
sahf
roll
in
mov
xchg
shrb
scas
pop
ds
adc
mov
loope
fimull
fsubrs
jne
pushf
sub
stc
cs
jb
fdivrl
mov
add
lods
pop
mov
mov
pusha
cmp
sbb
ds
cmp
ja
add
cmp
mov
test
ret
lods
jl
sti
clc
cli
inc
cmc
mov
and
or
pushf
in
dec
std
shl
addr16
insb
mov
xlat
imul
insb
and
insb
add
fistpll
int3
dec
mov
aaa
sbbb
push
sub
cld
mov
sbb
push
add
sbb
mov
xchg
dec
add
bound
addb
inc
push
clc
or
lahf
jle
call
lea
mov
push
mov
add
nop
push
fisubrs
fwait
scas
xchg
fbld
push
xor
inc
loope
lahf
ret
inc
ljmp
fmul
shrl
unpcklps
pop
fwait
inc
xlat
mov
push
cwtl
lret
fbstp
mov
jae
mov
stos
push
aas
mov
adc
mov
xor
bound
in
in
adc
rolb
push
fdivs
into
stc
test
das
lcall
loope
sub
and
ja
cmpsb
bound
out
ljmp
in
mov
cmp
sub
cmp
dec
sub
cwtl
xchg
push
sbb
add
mov
cmp
fisubrs
int3
fdivl
mov
cmc
pop
or
push
xchg
inc
jmp
jecxz
fisttps
incl
cs
stos
mov
pop
and
inc
xor
push
or
mov
out
aaa
xchg
or
pop
adc
test
test
lret
mov
dec
leave
enter
inc
cli
lcall
movsb
or
pop
pusha
push
sub
push
aas
xchg
in
mov
fwait
xchg
or
xlat
test
mov
movsb
jle
xor
dec
sub
pop
mov
icebp
push
xchg
test
dec
push
push
dec
xlat
or
lcall
mov
idivb
mov
sarb
in
fucomi
imul
movsb
out
mov
sbb
mov
pop
push
mov
sbb
mov
sahf
dec
cld
insl
in
les
mov
in
sbb
adc
dec
lds
cltd
inc
lods
lock
fidivs
sahf
or
mov
imul
and
lret
gs
addr16
fildl
push
sbb
push
cmc
lods
cs
xchg
xchg
and
in
popa
and
inc
sbb
out
sub
add
adc
sub
mov
dec
cmp
std
mov
jmp
mov
adcl
mov
pop
pop
rcl
shll
lahf
pop
pop
add
fucomip
ja
subl
out
sbb
test
sub
push
pop
loopne
pop
xor
shll
dec
push
add
jp
out
sub
lods
outsl
adc
fldt
dec
pop
xor
fstpt
sbb
sbbl
movsb
dec
repz
lret
adc
xchg
adc
fistpl
ret
addl
lods
mov
repnz
mov
imul
scas
xor
jmp
add
xchg
mov
data16
dec
fisttpl
adc
ja
mov
inc
push
inc
sbb
in
and
stos
jle
scas
clc
inc
inc
faddl
or
enter
movsb
cs
call
int3
jo
jo
mov
xchg
mov
dec
push
dec
xchg
rolb
dec
adc
or
stos
sub
mov
pop
stos
pop
push
cld
sub
rol
mov
push
cmp
popf
shl
or
and
loop
push
cmp
xchg
inc
inc
cld
sar
lret
addl
mov
test
mov
xor
pop
imul
xchg
mov
es
sbbb
lahf
lods
adcl
jae
in
mov
lret
xchg
repz
sar
sar
movd
or
dec
push
mov
fdiv
jne
mov
test
cmp
cltd
lods
outsb
int
jmp
je
mov
jle
ljmp
gs
test
cld
fnstcw
mov
sbb
js
pop
lcall
sub
rorb
sub
xchg
add
imul
pusha
pop
push
repnz
push
push
out
push
jb
std
dec
insl
push
frstor
int
int3
xchg
sbb
orl
pop
xor
xor
testb
fcmovne
pop
or
sbb
scas
in
je
outsl
lret
out
shll
nop
cmp
into
dec
xchg
shrl
arpl
scas
dec
jbe
adc
cmpsb
loop
notb
sbb
adc
mov
jb
adc
mov
and
test
pusha
pop
push
std
mov
cmp
push
insl
mov
aaa
je
loop
xchg
jbe
into
mov
int
jg
out
jl
xchg
mov
or
mov
jg
cmp
sub
dec
push
adc
sub
fdivr
cmpsl
int
iret
in
xchg
cmp
cmp
fildll
jecxz
jge
test
roll
sbb
stc
xor
cmpsb
mov
pop
or
rcrl
mov
jge
cmpsl
xlat
ds
das
inc
ss
sar
popf
scas
aaa
pop
sahf
mov
mov
dec
lods
iret
je
jae
enter
mov
rol
loop
enter
or
mov
jo
in
jecxz
cwtl
ficoms
mov
lea
add
insb
xor
arpl
fmuls
enter
cmp
mov
xchg
iret
inc
jne
repnz
xlat
loop
push
cld
sti
mov
sub
xor
sbb
jecxz
nop
push
flds
push
add
inc
cmpsb
test
jle
loope
lcall
or
mov
inc
push
adc
pop
loop
pop
stos
push
std
in
pop
outsb
adc
jecxz
add
cltd
xchg
js
das
sbb
ss
cmc
testb
lock
jle
bound
cmp
sbb
cmp
mov
sub
push
inc
jo
jmp
xor
stos
cmp
cmc
movsb
cli
lock
mov
dec
or
call
mov
repnz
pop
adc
pop
pop
sub
sub
jae,pn
dec
and
cmp
xor
es
dec
adc
fidivl
hlt
pop
lret
adc
hlt
daa
cmp
imul
cmp
movsb
call
jg
call
pop
adc
mov
sub
shr
pop
jp
push
adc
call
sbbl
cmpsl
insl
pop
xchg
mov
sbb
outsb
outsl
mov
adc
bnd
cmpsb
cltd
push
js
sub
scas
adc
fbstp
rcll
jae
mov
inc
and
pop
mov
outsb
push
mov
rcrb
test
loop,pn
or
mov
out
mov
fs
or
mov
mov
xchg
or
mov
lock
push
xor
mov
jmp
out
xchg
lret
pop
in
les
sub
imul
or
repnz
push
loope
fldl
xor
cmc
xor
stos
repnz
stc
repnz
je
rol
les
inc
pusha
cmc
cmc
xchg
loopne
fs
xor
mov
sahf
jle
adc
ljmp
lret
in
jnp
and
and
jns
pop
jne
sbb
xor
sub
mov
jge
and
mov
dec
cmp
and
sti
mov
int3
movsl
and
inc
loope
add
inc
pop
mov
push
pop
xor
movsl
in
or
lahf
inc
stos
inc
push
push
lods
mov
sub
les
scas
jecxz
xor
add
loopne
mov
pop
fdivrp
pusha
jg
push
add
fsubs
mov
das
out
ret
push
push
adc
pop
sub
movsl
inc
fsubrs
test
test
push
scas
popf
cmp
js
pushf
sbb
and
fprem1
sbb
pop
or
icebp
sub
imul
cltd
pushf
push
mov
leave
rcll
lret
mov
sbb
xchg
xchg
push
sub
cmpsb
sbb
ss
pusha
out
out
xchg
fnsave
push
repz
idivb
mov
test
sub
test
jnp
mov
and
pop
and
loope
into
sbb
imul
xchg
jne
add
xor
pop
adc
lods
adc
divl
inc
movsl
xor
mov
mov
fcoms
clc
add
mov
ss
xchg
test
mov
imul
outsl
in
mov
nop
inc
mov
lds
xor
addb
mov
hlt
adc
mov
leave
inc
outsb
push
rorl
enterw
cli
dec
icebp
and
arpl
mov
test
mov
or
jno
xor
in
push
jle
pusha
out
sar
jns
fldenv
inc
popa
aad
inc
aam
push
push
ljmp
add
mov
enter
adc
mov
repz
insb
mov
add
imul
mov
sbb
sti
movsb
push
mov
fdivrl
jnp
push
fnstenv
data16
ds
arpl
jns
mov
sbb
push
mov
push
jmp
mov
in
adc
enter
add
xor
jmp
fsub
or
paddsb
dec
fdivr
push
inc
call
dec
pop
std
clc
into
or
enter
xor
nop
xor
fucomi
stos
jp
imul
sub
imul
ja
sub
push
sbb
jg
shrl
sub
aas
push
jecxz
inc
add
shl
addr16
das
pop
es
aad
mov
inc
in
imul
aad
fwait
jns
test
push
or
fbstp
inc
scas
int3
test
sub
std
add
push
sbb
ror
dec
mov
dec
ljmp
dec
inc
rol
insb
incb
data16
scas
fnstenv
xchg
add
sbb
lahf
add
ja
adcb
sbb
or
mov
mov
cwtl
clc
mov
ds
adc
and
fwait
xor
arpl
das
jp
imull
lret
sbb
in
cld
cmc
push
cli
pop
ljmp
xor
push
iret
pop
mov
testl
ja
lea
fwait
mov
pop
xlat
xor
jmp
push
addr16
fsubr
sarb
sti
push
push
xor
dec
mov
test
xor
shl
cmp
aam
fld
sti
pop
repz
aad
dec
jl
aam
aaa
nop
adc
sti
in
push
in
adcb
dec
mov
push
adc
loop
ja
and
sub
xor
loopne
sbb
aad
cmp
imul
lret
add
jbe
or
jno
inc
inc
enter
fstps
subb
sub
out
aas
pop
mulb
sbb
mov
push
sub
dec
insl
ret
add
ftst
rcrb
mov
dec
sub
call
enter
push
push
test
mov
sub
cmpsl
stc
pop
in
mov
mov
bnd
bound
ja
aam
insb
mov
inc
pop
mov
dec
add
dec
mov
push
jecxz
mov
xor
mov
test
jo
test
das
lahf
lods
sbb
cwtl
xor
sahf
xor
fwait
pushf
push
nop
fidivs
or
nop
push
test
scas
mov
and
shlb
rcrl
jno
pop
rcll
pop
lods
jae
xlat
sub
mov
les
xor
push
xor
push
lds
add
sub
loop
call
add
test
data16
rorl
lahf
stc
and
vpxor
mov
int
cs
repnz
jl
xchg
jno
mov
ret
cmpl
mov
gs
jge
rclb
pop
test
ljmp
jno
std
aas
adc
jge
mov
jno
mov
mov
stc
mov
int3
inc
in
lret
push
mov
mov
xchg
jo
jno
and
mov
jp
push
rcl
sbb
and
jo
inc
push
ja
or
clc
arpl
mov
out
loop
fwait
out
pop
push
loopne
or
pop
jg
call
sbb
scas
or
xchg
or
mov
in
iret
pusha
in
push
add
aas
repnz
push
rorb
arpl
test
nop
cmp
sub
popf
sbb
pop
inc
mov
cltd
jecxz
pop
xor
mov
push
sub
in
cwtl
jle
aas
loope
jae
cmc
jns
adc
and
sbb
jb
fldcw
ds
jae
fwait
pushf
mov
jmp
add
xchg
xchg
out
int
ljmp
icebp
clc
push
mov
sahf
xor
jmp
push
testw
pop
cmpsb
xor
sub
and
xchg
sub
push
movsl
aaa
sub
mov
add
xchg
sub
aaa
push
push
incb
cmpsb
imul
out
in
sbb
jle
add
mov
js
and
test
jl
dec
add
lods
ja
push
scas
in
pop
dec
push
mov
push
cmp
pop
lods
jg
mov
xchg
out
ja
in
cs
cmp
into
push
mov
cmp
imul
pop
add
push
push
add
cmpsl
add
adc
cmp
lods
movsl
add
ljmp
mov
sbb
fmulp
sbb
xor
jecxz
cmc
xor
xchg
repz
mov
sub
int3
lods
out
push
lods
into
adc
xor
and
lret
mov
sar
push
cmc
mov
mov
inc
mov
aam
imul
ret
sub
inc
push
repz
adc
cmpsb
cmc
sbb
sarb
clc
push
into
mov
and
jae
jae
stc
adc
jmp
add
jne
pop
cwtl
sahf
mov
nop/reserved
sahf
fwait
aam
das
xor
inc
cwtl
ret
loope
xor
dec
pop
jae
pop
cmpsl
stos
push
mov
jns
jmp
popa
aad
fidivs
or
cmp
add
adc
lret
jb
je
add
jnp
adc
jp
inc
dec
inc
je
mov
xchg
popf
xor
cmc
mov
in
test
pop
inc
cmp
je
nop
bound
jge
add
sbb
push
scas
fisttps
add
data16
rcr
movsl
pop
mov
xlat
xor
dec
mov
mov
stos
adc
adcl
pop
loope
addr16
loopne
xchg
push
mov
lea
or
aaa
pop
sub
inc
and
enter
jne
cmp
es
sbb
mov
ljmp
popw
filds
or
add
or
nop
push
insb
pop
fcomip
dec
fnsave
imull
fbld
ja
mov
aas
andl
leave
sub
pop
pop
stos
cmc
dec
jns
fisttpll
scas
lock
test
repz
sub
scas
ljmp
inc
pop
or
aad
mov
scas
sti
cs
add
inc
mov
out
or
hlt
sub
inc
pop
andb
mov
sbb
push
and
sbb
or
push
lcall
test
fimuls
mov
inc
mov
jb
loopne
xchg
sub
mov
bound
cmpsl
movsl
jnp
clc
lahf
jb
inc
inc
sahf
push
lods
xor
or
push
aam
ret
test
sub
mov
imul
clc
cmp
mov
jmp
loopne
mov
dec
xor
xchg
cmc
jae
mov
in
push
movsl
dec
sarl
push
pause
jl
rorl
jmp
call
pop
mov
mov
inc
lods
ret
ret
stc
push
in
int
jecxz
adc
inc
mov
bound
rorb
lock
inc
push
das
cwtl
adc
xor
lret
dec
jb
int
cli
adc
xor
or
fisttps
xchg
and
pop
jbe
pop
cli
xor
jne
push
and
and
push
lea
test
adcb
jbe
xchg
insl
and
daa
pop
sbb
dec
cmpsl
add
cwtl
mov
xor
xorl
bound
aas
dec
push
test
push
fidivl
mov
test
mov
jmp
les
jno
cltd
jp
cmc
adc
add
cmp
popf
wrmsr
xchg
inc
jae
popf
jg
cmpsb
in
jns
pop
sub
xor
jbe
mov
mov
test
xchg
int3
mov
push
sub
jae
outsl
sbb
or
jmp
jl
jmp
insl
stos
xlat
pop
ds
jns
roll
sbb
out
imul
cmp
addr16
xchg
pushf
sbb
mov
scas
mov
add
sbb
xor
push
popa
add
sbb
fisubrl
cmp
ja
xchg
sub
fwait
insl
dec
leave
sarl
inc
int
inc
je
cld
or
adc
or
shll
dec
jp
or
int
pop
and
jo
mov
shr
mov
push
or
or
iret
mov
sahf
adc
out
cmpsl
int3
jmp
out
icebp
call
out
mov
test
jnp
pop
rorb
adc
scas
and
sub
add
pusha
ljmp
loope
push
push
enter
xchg
xchg
aad
pop
jge
jecxz
pop
mov
dec
mov
repz
add
repnz
mulb
push
popa
jnp
cmc
rcrl
xchg
xor
dec
aam
fildl
cmp
jns
imul
ljmp
jno
es
mov
or
daa
add
test
iret
jnp
imul
and
sbb
mov
jle
adc
mov
aad
addr16
ds
psadbw
mov
insb
repz
mov
cmp
push
cltd
out
pop
loop
shlb
jb
lret
sub
scas
hlt
pop
fistps
inc
push
adcl
inc
clc
inc
jae
jg
rcrl
dec
xor
shr
sub
xor
push
push
lods
js
push
add
lret
movsl
pop
rclb
int
xchg
xchg
imul
sub
or
pop
fmuls
ret
mov
inc
inc
out
jg
push
xor
push
push
lods
movsl
push
dec
or
xchg
mov
lds
xorb
push
sub
pop
mov
daa
aam
ficomps
or
jb
push
pop
sbb
dec
push
iret
jb
movb
nop
or
push
out
insl
sub
loop
nop
lcall
mov
jbe
xor
ffree
jl
in
add
jnp
jecxz
enter
and
int
lret
jge
out
mov
scas
lods
fsubrp
mov
jno
add
pop
fs
fbstp
cmp
ja
jne
out
jg
test
loopne
mov
or
scas
test
mov
int
ret
mov
push
das
insb
pop
roll
fsubs
repnz
lahf
inc
mov
rcrl
in
loop
xor
cmp
cmp
out
iret
shl
repz
sti
cmp
mov
in
dec
daa
dec
aam
sub
ret
sub
sub
pushf
sti
jnp
daa
pop
idivl
insb
jmp
xor
insb
cld
push
or
inc
sub
inc
adc
repz
xchg
nop
clc
sub
rcrb
mov
insl
and
dec
icebp
fsts
jl
leave
jns
subl
xchg
jecxz
rcrb
xor
mov
loopne
rclb
cmp
mov
mov
in
mov
sub
rclb
inc
jne
out
outsl
into
icebp
into
in
jo
and
cltd
push
insl
xchg
xor
popf
jmp
jmp
add
pop
add
dec
movsl
shr
sub
sub
mov
mov
xchg
call
or
outsl
rolb
add
call
cmpsl
lds
pop
push
push
clc
int
call
mov
cmp
enter
bound
lds
push
push
sub
sub
xchg
aad
cld
mov
js
addl
add
cmpb
sbb
mov
xchg
jl
and
push
jecxz
aaa
sbb
jmp
xchg
pop
in
ret
jmp
bound
push
and
or
test
xchg
push
call
lea
stos
push
dec
cld
push
mov
mov
rcll
jle
jp
test
xchg
out
cltd
icebp
adc
mov
cs
dec
xchg
or
mov
lods
test
or
hlt
dec
adcl
adc
fwait
xchg
sar
adcl
dec
call
mov
fdivrl
fbld
subb
adc
and
dec
inc
jae
mov
clc
cmpl
xor
sti
or
inc
xchg
and
mov
in
mov
imul
push
test
orl
and
pop
push
sub
cwtl
movl
out
mov
mov
jp
cmpsb
stc
mov
into
and
and
fwait
pop
jp
fiaddl
loop
mov
mov
pop
or
sarl
and
gs
jmp
xor
and
jns
aam
mov
hlt
frstor
int
shll
pusha
xchg
and
popf
leave
push
inc
sbb
and
add
lds
clc
mov
es
imul
cmpsl
xor
mov
mov
inc
jb
orl
shlb
fdivs
test
inc
mov
jp
movsl
pop
outsl
and
sub
add
sbb
sbb
mov
mov
mov
mov
dec
jb
sbb
shll
jno
pushf
test
push
xor
stos
cltd
mov
xchg
jl
push
mov
cs
sahf
fnstsw
adc
mov
ret
lea
sti
sub
movsl
neg
jno
pop
cmp
clc
inc
inc
out
sub
sub
das
inc
cs
sub
stos
call
psubsw
fsubrs
aad
adc
xlat
dec
aam
xor
aaa
orb
jmp
mov
clc
jnp
sbbl
jnp
xor
inc
pop
cmp
xchg
jmp
jb
data16
in
out
mov
pop
mov
cmc
sub
jmp
out
imulb
popa
jnp
jno
orl
sub
inc
mov
xor
push
imul
xchg
roll
push
movsl
lods
jecxz
dec
cmp
rol
lret
dec
cli
icebp
sub
mov
mov
push
xchg
xchg
repz
in
test
and
push
dec
icebp
ja
fbstp
lods
xor
mov
pop
scas
or
mov
sub
testl
pop
jno
addr16
cmp
sub
cmc
addr16
sub
rcll
inc
lahf
sahf
add
ja
rcl
insb
jnp
fdivr
xor
cmp
inc
mov
adc
dec
and
in
cmp
pusha
test
jae
insl
jle
insb
push
add
cltd
xchg
adc
nop
sub
ret
lret
movsl
rolb
push
fistl
ret
mov
rcl
push
sbb
add
fs
push
adc
push
lahf
ficoms
push
call
dec
pop
imul
sahf
dec
lret
jmp
mov
and
cli
mov
xor
jbe
lret
fldcw
imul
mov
adc
pop
cltd
xchg
xchg
mov
aaa
jle
add
fdivrs
sub
pop
mov
jge
xchg
cmp
movsl
sahf
mov
sub
outsb
arpl
add
lods
jmp
jbe
sbb
mov
mov
add
ljmp
pop
adc
int3
pop
rorb
xchg
pop
mov
mov
rcr
mov
scas
xchg
out
adc
sahf
push
pop
mov
iret
shlb
fcomps
jo
inc
jl
fcompl
cmc
jo
shll
cltd
xor
mov
bound
cmpsb
push
sbb
adc
sub
adcl
test
jmp
cmp
inc
dec
dec
cmp
push
out
in
xchg
js
pop
jl
out
paddq
fs
inc
out
lahf
scas
xchg
cmp
sub
push
std
xchg
enter
mov
ss
or
nop
pop
jae
std
in
mov
pop
lret
sbb
sub
add
insb
dec
lret
mov
jge
repnz
jb
mov
or
pop
lds
js
xor
or
or
int3
scas
adc
paddw
mov
lea
or
pop
fimull
jo
add
das
mov
mov
mov
jbe
mov
mov
int3
mov
push
js
xlat
and
adcb
pop
cld
dec
fst
xchg
pop
lods
sub
inc
pushf
dec
jecxz
pop
daa
sub
ja
adc
outsl
stos
xor
jne
lea
shrb
fadds
insb
mov
mov
sahf
push
sub
mov
in
outsb
sahf
rorl
and
or
adc
adc
push
cmp
mov
test
sub
jge
in
js
inc
adc
leave
cmp
jb
jnp
add
insb
aaa
or
scas
push
adc
cmp
adc
add
pop
push
scas
sbb
dec
test
jno
sbb
insb
or
not
fucomp
lock
cmp
in
cmpb
mov
adc
sub
mov
mov
popa
xor
loope
popa
or
lds
sar
movsl
cs
jbe
not
or
mov
aam
sbb
jg
xor
and
pop
shlb
mov
adc
addr16
lods
punpckldq
pop
sub
dec
lock
dec
rcl
imul
pop
mov
dec
adc
dec
stc
jmp
mov
xchg
lret
popa
jnp
movsl
rcl
mov
jo
decl
push
stc
nop
inc
jae
sub
subl
das
fisttps
adcb
lret
in
inc
add
add
pushf
rolb
jp
loopne
dec
or
sti
add
inc
in
enter
sahf
nop
pop
pop
push
cmpsb
stos
ds
fiadds
mov
stos
pusha
inc
sahf
out
mov
imul
mov
push
jge
hlt
inc
mov
cmp
adc
cmp
add
or
adc
xlat
ret
inc
dec
xor
outsl
mov
jae
lods
inc
std
sub
push
rol
inc
loope
flds
testl
cmc
pop
pop
int3
mov
push
cmpsb
ss
mov
iret
xor
not
int
sub
xchg
lea
or
aam
sub
xorb
aam
xchg
cld
adc
or
cmp
mov
fwait
inc
outsl
inc
fdivl
mov
fcmovu
orl
bound
jo
jae
ret
icebp
pushl
mov
xchg
mull
push
aam
out
fs
je
shrl
mov
je
sub
loope
add
push
sub
mov
ret
fists
int3
adc
pop
add
int3
shlb
rcl
jmp
fnstcw
mov
adc
cld
rcrl
imul
out
xchg
mov
negl
add
push
mov
mov
ret
in
sbb
repnz
cltd
jecxz
or
sub
lds
mov
or
ficomps
push
fisttps
lcall
jb
cmpl
xchg
fcom
push
nop
shrl
cmp
jo
insb
dec
inc
fwait
imul
leave
out
movsl
xchg
icebp
insb
fucomi
xchg
dec
rcll
inc
bound
pop
push
pop
xchg
push
ret
es
mov
fsts
int
push
adc
das
inc
scas
shll
inc
sub
mov
fisubl
mov
ficompl
lcall
leave
jo
dec
mov
mov
or
add
or
shlb
adc
dec
aad
add
es
xchg
fiadds
push
jo
aad
stc
push
jmp
mov
gs
fcompl
shl
popa
ret
push
stc
fistps
inc
mov
out
sahf
xor
maskmovq
negl
and
je
scas
ljmp
pop
cli
xchg
sbb
push
push
xchg
enter
pop
outsb
icebp
pusha
scas
jecxz
mov
sub
inc
in
pop
dec
sbb
push
pop
iret
pop
mov
mov
dec
ja
arpl
push
arpl
pop
cmp
pop
push
negb
out
loopne
ja
jl
lcall
pop
and
xor
aam
jo
xchg
xor
mov
out
jnp
or
sub
jne
negb
pop
lahf
stos
insl
cmp
dec
shll
pop
ret
push
hlt
movsb
rcl
adc
adc
pop
cwtl
xorb
fldl
fisubl
add
insb
jl
subl
sbb
dec
test
pop
sahf
pushf
xor
fwait
or
shrb
cmp
loop
sub
jecxz
or
movsb
leave
fs
or
mov
fstpt
pop
cmp
jbe
out
mov
fwait
cmc
mov
sub
hlt
fmull
mov
mov
jns
iret
pop
out
repnz
in
mov
out
adc
out
jmp
roll
mov
pushf
push
fldenv
pop
dec
jecxz
lfs
cmp
insl
cmp
mov
jbe
mov
mov
imul
loope
int3
inc
pop
jb
or
nop
mov
shl
inc
out
fmul
push
xchg
xor
xchg
shlb
jg
fndisi(8087
call
aam
mov
fistps
lods
repnz
pop
repz
mov
push
lret
mov
outsl
adc
fwait
aad
aas
sarb
mov
ss
pop
cli
outsb
std
and
loope
jns
push
jb
out
adc
cmp
pusha
movb
shl
xchg
fsubrs
jg
loopne
loopne
add
pop
data16
add
iret
idivl
sbb
sub
xchg
sahf
adc
push
loope
test
repz
scas
jmp
pusha
aad
fsubr
push
std
mov
pop
adc
pop
xor
and
cwtl
jb
sti
adc
mov
jg
and
mov
or
loope
jmp
inc
js
mov
sub
pop
imul
jb
adc
add
aad
xchg
fs
mov
sarb
inc
or
cld
ljmp
dec
in
or
jge
pop
mov
icebp
mov
xchg
and
daa
es
jl
mov
push
dec
dec
mov
lds
sar
dec
add
push
sarb
cld
or
bound
sbb
mov
cwtl
dec
jns
push
outsl
sbb
mov
xor
test
pop
jl
adc
fimull
lock
pop
sub
and
or
xor
mov
dec
add
fwait
add
xchg
iret
ss
sub
jnp
push
aas
sub
ret
scas
movsl
pop
std
xor
jo
push
test
nop
imul
ret
ljmp
sti
decb
cld
jae
pusha
adc
call
leave
cs
dec
rorl
test
scas
jge
test
lahf
sub
xor
mov
out
iret
jmp
jge
jle
xchg
adc
adc
add
mov
jmp
jge
mov
xor
push
lea
xor
jb
shlb
xchg
in
xor
stos
pop
inc
add
clc
xchg
imul
adc
fcmove
stc
push
and
sbb
arpl
aas
add
jle
mov
fsubrl
insb
or
add
imul
iret
mov
repnz
je
ljmp
mov
mov
dec
out
xlat
lea
lahf
fdivs
push
shr
and
or
jo
clc
cmc
in
mov
cmp
sub
shlb
sbb
imul
mov
cltd
hlt
mov
dec
pop
pushf
sub
das
and
in
pop
mov
negb
stc
mov
icebp
aaa
mov
cmp
xor
sbb
pop
out
lcall
adc
or
enter
aaa
and
dec
inc
sub
adc
cmpsb
add
mov
adc
and
cwtl
jmp
insl
sbb
mov
outsb
addr16
cwtl
xor
jns
or
dec
aad
loop
add
ss
pop
mov
ret
mov
dec
ljmp
cmpsl
push
xor
outsl
add
cltd
sbb
fldenv
and
mov
mov
mov
jnp
or
sbb
popa
push
insb
adc
mov
into
aad
push
mov
cmp
mov
sub
mov
mov
xchg
in
pusha
xchg
pop
mov
cmp
ss
lahf
mov
and
into
add
test
add
scas
lock
mov
adc
dec
dec
inc
add
mov
inc
and
nop
mov
inc
fs
mov
aam
inc
sub
std
lea
das
mov
mov
lcall
into
incb
add
mov
jmp
cmpl
add
aad
in
das
sbb
jl
rcrb
jbe
inc
pop
add
test
cmp
adc
in
loope
adc
add
jbe
aam
ljmp
jecxz
cwtl
fnsetpm(287
rol
mov
pop
ljmp
mov
dec
lret
cli
cmp
in
imul
out
dec
mov
std
inc
push
sbb
jno
out
insb
pop
mov
shl
out
sbb
sbbl
mov
add
and
in
add
xchg
into
xchg
sub
in
dec
addb
jle
int3
sbb
rcrb
push
leave
xor
pop
jns
xchg
aam
pop
lret
fcom
pop
adc
mov
push
mov
add
sbb
jmp
loope
push
dec
cmp
push
or
sbb
js
rorl
inc
or
or
test
mov
or
xor
pop
enter
adc
xchg
dec
sub
push
push
inc
in
icebp
aaa
cmp
mov
or
xor
sub
mov
scas
std
or
xor
sti
jge
push
ret
out
xor
jmp
lret
pop
dec
add
adc
cmp
dec
mov
fcoms
test
adcl
push
and
int
jecxz
cmp
sahf
push
popf
fcoml
imul
dec
incl
jmp
dec
fistpl
push
mov
loop
cmp
call
incb
cmp
mov
leave
push
or
aas
in
sub
gs
pop
dec
popf
inc
fwait
inc
mov
mov
cmp
jg
cmp
ret
rorl
out
xorb
and
jmp
outsl
jmp
sbb
rcrl
bound
pop
mov
aas
popf
inc
and
lds
enter
rcrb
mov
xchg
pop
push
push
cmp
orb
rcrl
xor
push
imul
mov
jb
lcall
test
loope
loop
int
iret
or
pop
xchg
pop
jbe
pop
xchg
test
fstpt
sub
fisubs
jg
repnz
mov
push
test
testl
or
call
inc
ret
push
push
shl
out
inc
cmp
xor
ja
inc
xlat
cltd
jge
cmp
xchg
test
inc
int
adc
jmp
sbb
xor
pop
pop
xlat
mov
or
dec
scas
or
xadd
mov
inc
enter
xchg
adc
gs
jl
in
sub
and
adc
mov
out
imul
mov
daa
cmp
pop
lea
aad
push
sahf
pop
repnz
dec
fistps
jno
inc
out
pop
push
push
xor
inc
out
jbe
jge
push
insb
or
popf
ret
cmpsl
push
adc
jno
mov
sti
mov
xor
insb
test
sub
popf
ds
test
or
dec
outsl
loopne
repnz
ljmp
int3
add
aaa
push
sbb
popl
ljmp
movsl
dec
inc
scas
sbb
sub
mov
lcall
sub
and
jbe
xor
mov
mov
or
inc
stos
dec
dec
or
cmp
call
sub
mov
scas
out
loope
or
push
iret
rcl
dec
push
insb
enter
sti
addb
aaa
and
sbb
lods
xrelease
nop
inc
movsl
mov
cmp
mov
pop
aaa
lock
inc
pop
mov
jmp
lods
mov
mov
cmp
jns
sbb
mov
lret
pusha
nop
xor
sub
xchg
ds
into
leave
outsl
lods
leave
test
or
sarl
xorb
lret
decl
mov
xor
mov
jo
jae
cli
mov
or
or
out
and
add
int
rcrb
sub
add
mov
ret
jg
pop
sub
push
ss
dec
out
dec
sub
in
loop
test
pop
stos
jnp
mov
add
pop
idivb
test
sar
dec
inc
or
dec
daa
fildl
sub
and
insb
das
cmpsb
dec
sbb
fcoml
jp
out
sub
pop
sub
leave
sti
push
jae
cwtl
sbb
pop
enter
mov
add
xor
enter
sbb
shrl
sub
xchg
mov
fs
xor
xchg
inc
pop
addl
repz
jno
loop
dec
adc
adc
mov
inc
es
xchg
dec
mov
and
xchg
xchg
or
pushf
fstl
ss
mov
ss
sub
iret
adc
lods
int3
xchg
outsl
mov
cmovge
add
adc
jns
sub
cmc
stos
push
sub
cmp
mov
in
loope
mov
add
mov
out
insb
sar
pop
mov
aam
shl
dec
test
fnstsw
inc
xchg
pushf
jno
fists
jmp
pushf
insl
and
dec
push
mov
dec
mov
in
push
imul
and
inc
inc
jmp
ja
pop
lcall
sbb
xor
add
scas
xchg
fwait
cwtl
outsb
in
inc
xor
out
sarb
xor
inc
addr16
sahf
sbb
sub
sub
pop
sarl
sbb
ss
inc
call
daa
or
push
out
inc
lahf
push
add
push
jo
fisubs
scas
push
dec
mov
cli
pop
mov
mov
sahf
cmp
imul
pop
pop
jnp
imul
sub
in
mov
jo
gs
or
ret
negb
push
sbb
mov
icebp
movsb
fcomi
das
je
pop
inc
mov
push
mov
into
scas
push
std
mov
aas
ss
inc
ret
mov
mov
xchg
lcall
lret
jp
sbb
push
ret
insb
jnp
sub
mov
sti
sahf
pop
fs
clc
pop
pop
jl
fcmovne
outsb
mov
mov
mov
cmp
jb
iret
pop
xchg
push
or
pushw
jno
xor
mov
dec
daa
repz
mov
mov
xor
test
and
clc
arpl
mov
add
xchg
pop
arpl
lret
dec
repnz
daa
js
dec
push
mov
scas
data16
push
mov
mov
pushf
sbb
dec
mov
jg
and
xlat
outsb
out
mov
sbb
xchg
inc
aam
xchg
fiaddl
js
in
adc
fsubp
add
test
push
enter
mov
ds
cmp
pop
inc
xlat
jl
loope
faddl
arpl
mov
push
mov
in
push
mov
dec
mov
xchg
and
and
push
cmpb
pop
cmp
push
ds
fucomip
ret
sbb
mov
cmp
dec
popa
xchg
push
je
sub
stos
fwait
int
mov
xor
pop
sbb
sahf
jge
add
negb
jns
outsb
pop
pop
and
adc
leave
movl
in
mov
mov
out
data16
in
inc
mov
in
inc
sbb
mov
mov
push
xchg
and
test
xor
daa
incb
add
and
rcll
call
add
leave
xor
push
push
push
gs
mov
cmp
jb
das
stc
stos
mov
mov
adcl
inc
mov
sbb
jbe
loope
inc
jnp
and
push
jge
fcomi
insb
imul
push
jp
mov
push
or
les
loop
jbe
xchg
in
mov
xchg
mull
jns
shl
scas
mov
mov
jecxz
or
push
lock
mov
adc
lea
xor
repnz
push
mov
pop
test
movsb
pop
add
std
insb
inc
outsl
and
in
ja
int3
lods
cmpsl
xchg
in
push
mov
out
mov
sbbl
sub
xchg
mov
or
push
cmp
mov
inc
in
jbe
gs
mov
ret
push
es
call
mov
ja
mov
jbe
sub
lods
addr16
hlt
aas
repz
data16
fidivl
and
mov
ret
aad
pop
mov
stos
sbb
scas
call
inc
test
out
mov
clc
dec
ret
loop
pushf
nop
add
xchg
loop
cs
repnz
pop
add
imul
testb
mov
sbb
xchg
cmpsb
in
and
clc
push
mov
jmp
inc
jmp
or
hlt
jle
loopne
and
cmpsb
jg
sub
lods
mov
add
push
xchg
add
aad
mov
cmpsl
jb
mov
mov
pop
mov
add
or
add
pushf
fs
jno
pop
lods
ja
adc
cmpsl
iret
mov
icebp
cld
inc
mov
shlb
xchg
sbb
mov
xor
jnp
ss
lahf
dec
pop
mov
jne
icebp
mov
mov
fs
insb
cmpsb
stos
cmc
and
jo
je
filds
and
shlb
inc
cmpl
mov
stos
pop
imul
leave
lods
out
sub
mov
sub
cmp
ds
jns
dec
fisttpl
ds
push
or
ja
sub
pop
sbb
lcall
in
or
stos
cmp
xor
cmp
das
stos
sub
shlb
rorl
mov
dec
inc
lret
lods
xchg
in
aas
in
jg
cwtl
pop
orb
mov
pop
fdiv
mov
fsubrs
cmp
and
dec
leave
push
xchg
in
xlat
inc
adc
in
adc
push
shl
jne
dec
xchg
lock
cli
or
call
shll
cmpb
cld
negb
adc
lret
dec
ss
lods
mov
or
xor
fcmovne
movsb
cmpb
imul
cmp
das
outsb
stos
gs
loopne
push
lds
lcall
jmp
pop
adc
inc
shll
and
mov
mov
xchg
add
addr16
fdivl
ss
push
data16
adc
adc
push
ficoms
jmp
mov
pop
lcall
je
mov
ss
push
and
jne
test
fcoms
and
in
bound
mov
jmp
mov
inc
jnp
fists
inc
xchg
repz
jnp
aaa
or
movsl
sti
fs
sbb
movsb
bswap
xchg
loop
add
orl
setp
cmp
xor
or
xor
pop
ficompl
push
sbb
adc
mov
adc
rcl
roll
mov
dec
cmpsl
ss
push
sbb
jns
in
xchg
jo
lahf
ljmp
mov
pop
inc
loopne
out
mov
sbb
clc
pop
stc
cmp
push
and
pushw
pop
cld
cmc
ds
pmulhw
dec
jne
pop
mov
repnz
xchg
cmp
xlat
ss
mov
js
lahf
mov
retw
push
popf
ret
lret
into
leave
mov
dec
push
jge
sahf
sti
pop
in
ffree
xchg
cmp
add
push
jb
pop
xchg
bound
or
push
lcall
loopne
aas
jne
sbb
test
lock
xchg
negl
mov
outsl
cmp
inc
xchg
xor
jl
mov
adc
add
ljmp
or
pushl
inc
ss
or
cld
jecxz
lret
xchg
imul
dec
lea
xor
inc
cmc
pushf
mov
pop
or
and
stos
cmp
jbe
dec
dec
ret
adc
ret
movsl
sbb
adc
mov
out
and
rcrb
loope
mov
mov
dec
jnp
in
mov
inc
lods
aad
and
arpl
repnz
das
fucomip
push
xchg
scas
stos
inc
adc
cmp
sti
ja
fstpl
sub
pusha
in
iret
jnp
inc
inc
mov
cmc
push
inc
rcll
into
mov
scas
push
dec
push
sub
jle
mov
and
xchg
test
stc
or
mov
sub
push
and
lcall
mov
sbb
push
fadds
mov
stos
gs
push
adc
pop
cmc
bound
mov
aad
xchg
pop
push
pop
mov
orb
movsb
lret
push
or
inc
or
and
fadds
addr16
push
cltd
dec
inc
repnz
mov
in
lcall
pushf
inc
loopne
or
cld
int3
push
scas
xchg
mov
mov
cmpsb
or
ficomps
push
lahf
sub
cmp
adc
jnp
imul
and
and
test
pop
lret
xchg
mov
fmuls
adc
stos
xor
inc
mov
push
jecxz
scas
cmp
mov
add
fisubrs
call
inc
sti
stc
fwait
es
imul
nop
cwtl
insb
in
sbb
mov
push
or
pop
push
inc
push
sar
sbb
aam
lods
mov
inc
imul
add
cld
bound
sbb
lcall
bound
mov
push
aam
out
cmpl
pop
and
hlt
lods
lds
and
iret
and
in
cwtl
sbb
imul
cwtl
jg
out
scas
in
mov
aad
push
push
sub
dec
outsb
adc
clc
mov
movsw
ds
cmpsb
lock
lods
xchg
mov
outsb
out
mov
jmp
sarl
outsl
mov
add
sub
cmp
adc
lret
insb
std
and
cs
mov
add
sub
xor
not
aas
xchg
es
and
cmp
mov
push
lret
pop
mov
add
sbb
bswap
add
orl
push
mov
lcall
cmpsl
xor
enter
mov
pop
mov
lahf
arpl
mov
jmp
and
cmp
pop
mov
push
sub
mov
cmp
add
imul
int
pop
scas
mov
jno
jmp
push
movsb
mov
xor
push
sbb
mov
cmp
ret
jg
dec
repz
dec
mov
mov
mov
add
mov
cld
fbstp
jno
push
jp
mov
hlt
stc
rcrl
pop
cmpsl
cmc
bnd
pusha
and
repz
or
movsb
xor
pop
stc
or
int
add
inc
hlt
nop
jbe
push
jmp
out
orl
cwtl
jp
loopne
jmp
ljmp
call
or
jbe
imul
ret
jp
test
xor
cld
ret
call
xor
push
mov
scas
les
ss
imul
mov
enter
jmp
mov
xchg
mov
jns
sub
pop
call
pushf
jg
push
mov
fs
push
js
aas
mov
adc
pop
stos
or
jle
cmp
fmull
xchg
adc
sub
enter
add
pop
dec
add
in
fwait
mov
cltd
sub
ljmp
int
push
push
pop
fcoms
dec
inc
mov
xor
add
loopne
fdivr
cwtl
or
push
sbb
push
mov
mov
jmp
cld
lods
push
fstpl
shrl
or
jle
lahf
xchg
xor
in
scas
in
inc
jmp
and
sub
jo
jp
outsb
lea
dec
mov
les
sbb
ja
push
inc
sbb
test
mov
rclb
mov
xchg
mov
bound
ljmp
xchg
inc
jl
mov
pushf
lods
mov
stos
cmpsl
and
cmpsl
pop
out
mov
dec
jns
cmp
repnz
inc
mov
cmp
xor
lods
cld
mov
add
scas
add
xchg
stos
xchg
sbb
stc
out
add
out
push
ja
loope
aad
jnp
and
std
int
out
adc
xchg
cmp
mov
cltd
pushf
icebp
and
push
icebp
jb
mov
scas
je
int3
cmp
fwait
sub
push
loopne
pop
repnz
inc
push
fildll
fimuls
dec
sbb
or
mov
icebp
pop
lret
push
dec
pushf
mov
push
mov
loopne
mov
lds
scas
les
iret
test
arpl
or
mov
pop
mov
ret
hlt
mov
ficoml
xor
mov
xchg
pop
xor
add
test
rcr
xchg
xchg
cltd
ljmp
rolb
sub
mov
pmulhw
stc
in
loopne
les
push
cmc
and
shrl
xor
mov
cwtl
ss
adc
andb
dec
or
jo
mov
xor
jmp
cmp
push
data16
inc
pushf
jp
and
movl
add
orl
jnp
ror
movswl
cs
sub
push
iret
outsb
jp
jmp
mov
rorl
rolb
stos
test
sub
pop
dec
xchg
daa
mov
imul
sbbb
xor
jle
jmp
lcall
fisubrl
mov
jb
out
push
in
add
sbb
nop
cmova
xor
xor
cli
int
or
jmp
inc
pushl
jge
icebp
lret
lcall
rcrb
dec
ficomps
push
cwtl
out
sbb
jl
clc
mov
jo
jae
lods
gs
xor
mov
scas
daa
pop
or
inc
pop
cmc
lret
outsb
cmp
cld
shrb
cmp
inc
xlat
out
shr
pop
push
ret
mov
daa
adc
iret
cmp
ret
lcall
shrl
out
ret
xchg
inc
mov
and
call
call
prefetch
ss
in
lea
hlt
pop
sub
dec
inc
sbb
out
ljmp
xor
mov
jne
fs
and
pushf
xor
aad
fisubrs
outsb
popf
in
movsb
je
jno
sub
inc
mov
push
sar
pop
fs
inc
rorl
lock
ret
dec
pop
mov
iret
or
mov
stos
call
test
popf
psllq
xorb
pushf
rol
xchg
sahf
push
ret
clc
mov
mov
es
xchg
scas
push
dec
enter
dec
mov
data16
mov
pop
sti
je
mov
pop
stos
pop
jmp
add
fsubrs
dec
int3
scas
enter
rcr
out
test
std
fcompl
addb
mov
add
pusha
stc
xchg
lds
out
lods
push
cmp
add
lock
rcrl
xor
pusha
test
mov
ljmp
test
stc
les
jns
jns
adc
lds
adc
add
sarb
xchg
and
dec
lds
push
icebp
or
inc
dec
mov
push
inc
push
shlb
fildl
jle
in
pop
gs
neg
xor
movsl
jne
push
dec
cmpsb
push
hlt
in
cld
mov
xchg
cld
jp
shr
fldl
es
in
push
in
ficoms
sbb
or
mov
out
add
outsb
or
enter
imul
cmp
sub
aas
inc
adc
xchg
or
mov
sub
fs
xor
cmp
sbb
sbb
lcall
mov
or
mov
and
imul
pop
inc
add
adc
fisubl
or
bound
xchg
cmc
inc
fidivrs
push
lea
push
jno
nop
xchg
adc
xchg
cmp
adc
jmp
sbb
test
xor
ja
push
pop
inc
out
std
fsubrp
jo
mov
shll
ja
or
mov
pushf
mov
idiv
xchg
arpl
push
cld
jecxz
insl
ljmp
cmpsl
push
rolb
bound
fwait
push
jbe
hlt
out
push
lea
arpl
pop
decl
lret
std
inc
scas
sahf
testl
jl
movsl
cmp
orl
mov
shlb
push
mov
push
out
mov
ret
scas
mov
fcompl
cmp
sti
in
adc
mov
mov
addr16
insl
pusha
enter
fisubl
insb
fsubrl
scas
scas
test
and
cwtl
mov
cmp
hlt
sahf
shll
pusha
cltd
mov
xlat
xlat
repnz
fldcw
xor
cld
lret
pop
and
pop
daa
movsb
ds
adc
mov
ljmp
mov
adc
aad
cltd
enter
pop
adc
popf
add
xor
and
mov
push
sbb
in
out
iret
mov
test
dec
negl
pop
insl
xchg
xor
sti
sbb
lcall
xchg
or
dec
lcall
ret
xchg
mov
and
cli
xchg
clc
xchg
xchg
adc
jge
xchg
cld
cmp
cmp
mov
push
rcll
fimuls
adc
jmp
or
dec
push
pushf
out
cmpsl
xor
fisttps
mov
daa
cmp
inc
pop
sarb
addr16
add
cmp
negb
mov
cmp
or
les
mov
sub
std
add
or
ja
jo
or
rcrl
sbb
std
xor
test
adc
cwtl
push
xor
xchg
sub
out
lods
adc
andl
enter
mov
insb
out
mov
push
roll
pop
in
mov
xchg
orl
into
dec
mov
xchg
movsb
subb
icebp
push
lcall
fists
xchg
int3
sbb
mov
mov
andl
sbb
out
sub
gs
addr16
and
cld
bound
mov
shlb
sbb
movsb
pop
rorl
mov
imul
aad
and
mov
lods
mov
lods
xchg
dec
inc
fcompl
rcr
push
mov
xchg
mov
inc
fistl
mov
and
cmp
or
xor
push
mov
cmp
jp
push
inc
testb
popa
lea
cmp
repz
xchg
add
or
out
or
or
hlt
lea
bound
and
mov
dec
loop
scas
bound
cmp
inc
pop
pop
cwtl
ss
sub
lret
xchg
loop
fldl
sbb
test
xchg
repz
sbb
inc
fcmovb
inc
scas
xchg
add
pop
cmpsl
pop
xchg
pusha
in
movzbl
dec
popa
dec
out
in
test
jecxz
pop
dec
xchg
inc
cmp
cmp
adc
xchg
xor
mov
cmp
push
jne
jg
cmp
or
rol
adc
cmp
mov
adc
ret
or
mov
xor
pop
and
sbb
xchg
push
cmpsb
scas
movsb
fsubrs
repnz
popa
das
cmp
insb
mov
cwtl
imul
or
vorps
fs
fcmovnu
adc
or
shlb
jmp
xchg
lcall
mov
xchg
outsl
push
pop
dec
cmp
outsl
mov
ds
jmp
xor
mov
jno
xchg
mov
sahf
or
lds
stos
cmp
mov
mov
lds
popf
pop
jae
daa
lock
mov
jne
filds
iret
add
in
sbb
mov
sub
insl
inc
sub
inc
fadds
in
lcall
sbb
fldz
sti
fldl
into
and
into
jbe
test
imul
repz
and
fistps
addr16
shll
lret
icebp
inc
outsl
pop
cmpsl
aas
cltd
fsubrs
add
sti
out
jl
arpl
xchg
inc
adc
lret
dec
negl
sbb
add
mov
or
fs
push
or
xchg
push
jmp
repnz
stos
loopne
popa
xor
es
inc
xor
iret
cltd
cmp
add
add
sub
inc
sbb
cmc
ljmp
mov
iret
jne
jb
aaa
js
mov
sub
arpl
xchg
rcr
adc
xchg
ja
pushf
mov
nop
in
jecxz
lods
pop
xor
ret
adc
jmp
sbb
icebp
pushf
dec
nop
pushf
lahf
cmc
pop
adc
xor
mov
xor
movb
mov
inc
pop
loop
xor
shlb
lods
inc
cmp
test
xchg
aas
pusha
push
orb
fcoml
push
fbstp
in
xchg
test
xchg
sbb
shrb
xchg
mov
cmp
int
ret
leave
dec
or
and
and
jno
test
mov
cmp
pop
lret
jno
pop
arpl
mov
test
mov
sbb
inc
xchg
ja
fcoms
jnp
sbb
jg
repz
mov
fiadds
lret
inc
or
jl
xchg
cmp
pop
mov
cld
inc
and
out
je
xlat
jmp
lret
hlt
sti
dec
loop
dec
push
fdivrp
movsb
fnstcw
loopne
mov
jl
and
cmp
nop
movsb
inc
sbbb
test
enter
dec
stc
sbb
leave
dec
xchg
push
sub
cmp
mov
das
fwait
or
xchg
cld
lcall
mov
shlb
cmp
push
adc
push
mov
mov
es
xor
in
shll
and
neg
lock
aam
sub
xor
mov
mov
push
aad
xchg
sbb
scas
sbb
into
push
mov
or
mov
mov
xchg
mov
mov
aaa
loopne
and
cmpl
add
xchg
lahf
inc
cs
loopne
pop
sbb
pop
pop
inc
pop
inc
dec
mov
dec
int3
repz
lahf
das
jne
push
or
and
das
insl
ljmp
inc
mov
xchg
dec
dec
jge
stc
pop
into
loop
test
loop
dec
dec
xor
popf
nop
lods
mov
sbb
into
adc
lret
jae
loopne
jne
lahf
dec
outsb
ljmp
push
push
arpl
xlat
repnz
or
das
stc
xor
pop
sbb
orl
sbb
jo
adc
push
dec
ret
pop
stc
in
dec
pop
das
mov
cltd
or
inc
cli
inc
ja
jecxz
or
in
pop
sub
dec
pushf
dec
mov
loope
lret
cmpsl
daa
outsl
xor
mov
lods
add
mov
cmc
push
jnp
popf
adc
sub
pop
xor
lret
sbb
call
jg
dec
or
ja,pt
lods
cs
or
adc
push
int
insb
mov
xor
sbb
sbb
mov
xor
xchg
andl
push
mov
out
call
in
dec
push
icebp
stos
loope
clc
ret
push
sub
jne
fisubl
leave
in
pushf
fstl
xchg
add
sbb
and
vpcmpgtw
inc
popa
enter
pop
inc
push
or
sub
mov
fadds
outsl
dec
repz
xorl
popf
je
xchg
clc
call
pop
fcomps
sub
mov
into
mull
ss
sub
push
shrl
and
and
pop
xchg
idiv
inc
mov
movsb
jmp
icebp
fidivs
xchg
int3
jg
dec
xor
push
sub
xchg
aas
jp
std
icebp
popa
loopne
mov
mov
mov
cltd
adc
adc
push
imul
mov
popf
dec
cmpsb
sbb
sbb
inc
rolb
scas
loopne
rcrl
nop
sub
testl
add
adc
mov
xor
je
jle
movsb
sbb
cmpb
add
add
or
fcmovnbe
mov
jecxz
cmpsl
pop
mov
cmp
mov
sub
jl
push
lds
jne
mov
mov
cmp
pop
and
ljmp
lret
popa
sbb
repz
ret
dec
test
mov
rcll
jl
pop
rclb
imul
pop
aas
sub
push
push
or
xchg
pop
xchg
cmc
insl
jne
sub
cmp
add
bound
push
dec
mov
out
add
jae
push
into
mov
stc
lcall
fs
xor
xchg
xor
mov
fisttpll
dec
pop
pop
mov
and
sub
push
xchg
or
xchg
js
js
daa
jns
ret
jne
fistpl
shrb
cs
cwtl
xor
shl
aad
jbe
add
shlb
jae
or
nop
aam
les
push
mov
adc
aas
dec
pushf
pusha
cmp
push
dec
inc
inc
movsb
inc
ja
subb
rcrl
daa
ror
clc
lret
frstor
popf
dec
jecxz
pushf
xchg
pop
fstpl
scas
repz
test
pop
sub
pop
inc
popf
cwtl
jo
sbb
movsl
jb
inc
call
push
inc
rorl
je
loopne
mov
scas
out
shll
or
sub
mov
pop
shll
imul
xchg
push
jnp
stc
dec
je
mov
in
fnsave
and
push
sbb
pop
sub
pop
push
sar
mov
add
dec
push
dec
add
add
xchg
jbe
mov
cld
testl
scas
jge
cld
xchg
lock
adc
das
and
sbb
adc
ja
adc
and
shrb
cmpsl
push
mov
adc
data16
inc
sub
test
aas
or
nop
cs
push
dec
and
pusha
push
add
imul
xor
mov
push
push
dec
pop
data16
push
pop
add
mov
jmp
mov
out
dec
inc
jo
add
or
push
inc
repnz
inc
or
inc
cmp
movsl
push
lcall
rcll
pop
adc
jae
pop
dec
ficomps
hlt
and
mov
pop
hlt
fists
addl
and
jg
test
dec
pop
insb
iret
sbb
xor
xchg
jg
dec
xor
out
pop
mov
ss
loop
call
fadd
xor
inc
ja
inc
sbb
adc
ja
cmc
out
push
cmp
mov
sbb
or
ljmp
add
lcall
testb
pop
sub
sbb
insl
leave
or
mov
sbb
pusha
call
inc
ss
repz
sbbl
jns
cmp
sub
loop
pop
cmpsl
addr16
add
out
mov
cs
push
and
mov
dec
mov
or
pop
daa
mov
out
adc
test
mov
sub
cmp
xor
xor
push
sub
lcall
sbb
pop
testl
imul
add
scas
dec
das
pop
add
mov
dec
inc
ret
sti
ljmp
sub
xlat
mov
ss
loop
cld
sub
adc
shlb
cmp
jmp
pop
push
cmp
sub
inc
jl
repnz
aaa
pop
pop
mov
je
xchg
ljmp
jb
fwait
movsb
lds
cltd
pushf
es
movsl
inc
adc
cmpsb
and
imul
add
mov
add
loopne
xor
mov
dec
add
pushf
stc
cld
daa
insb
mov
ja
push
sbbb
popf
jbe
ret
leave
sahf
add
dec
adc
push
ljmp
imul
xor
iret
into
in
cmp
add
addr16
sub
mov
xor
popa
xchg
jmp
cmp
or
xlat
or
mov
cmp
imul
xchg
dec
jne
fs
push
imul
icebp
sbb
mov
cwtl
mov
cmp
mov
aam
lea
repnz
leave
test
cmp
jecxz
jne
cwtl
push
push
add
enter
imul
dec
sub
jecxz
stos
fwait
leave
sub
pop
call
fbld
mov
cmp
bound
pop
js
gs
int
and
ljmp
ret
sbb
inc
inc
mov
and
push
out
push
jo
mov
push
loope
xchg
add
and
mov
adc
pushf
xchg
add
xchg
jl
push
mov
bnd
pop
fidivl
pop
incl
in
inc
mov
fldcw
xor
lret
out
lret
stc
lods
sti
pop
cmpsb
mov
roll
sti
mov
int
lds
sbb
sub
inc
cmpsl
jne
jb
cmp
cmp
pushf
push
adc
xor
sarb
rcll
and
fildl
mov
and
pop
inc
push
subb
pop
arpl
and
loopne
mov
jae
loope
and
inc
sub
cmp
data16
add
stos
xchg
daa
ds
sub
out
pop
cmpl
cmove
pop
xor
ja
imul
loope
pop
or
js
test
pop
movsb
add
out
dec
cmp
dec
add
fwait
pop
in
sti
dec
cmp
ficompl
es
and
mov
in
mov
iret
jp
mov
int3
aas
orl
insb
dec
cmp
scas
sub
sub
push
imul
fimull
arpl
fistpll
hlt
psadbw
jae
mov
orb
jl
pop
repnz
pushf
xchg
in
stos
cli
xchg
inc
mov
mov
sub
mov
and
pop
fdivr
push
mov
push
jne
leave
xchg
mov
data16
pushf
xor
addr16
shlb
pop
int
pushf
dec
cltd
outsb
int3
pop
dec
div
cmpsb
inc
add
fwait
in
add
inc
popl
inc
jge
pop
rcll
lea
cmp
ja
mov
jge
and
or
add
jae
cmp
je
mov
cvtps2pi
test
sub
dec
mov
loopne
and
and
pushf
in
xor
xchg
mov
and
push
pop
ds
dec
loop
mov
pusha
push
xor
cs
xchg
dec
push
xor
scas
insl
jbe
push
repz
inc
stos
rorb
mov
add
inc
jg
mov
mov
mov
sbb
gs
sub
pop
jb
popf
stos
ss
or
clc
addr16
inc
cltd
mov
fistpl
xchg
outsl
mov
es
push
xchg
in
jecxz
aad
jo
xchg
cmp
sahf
xchg
inc
adc
sbb
xor
pop
insl
or
outsb
stos
inc
cs
decw
xor
bound
repnz
cmpsl
sub
pop
pop
ret
or
idivb
es
scas
jno
adc
shll
pop
or
push
sub
popf
pop
rolb
icebp
repnz
mov
rcrb
inc
divl
and
ret
mov
mov
lods
xchg
mov
stos
icebp
in
in
and
mov
orb
mov
ja
mov
ja
adc
je
das
lock
fcomps
mov
adc
mov
divl
sub
xor
push
push
mov
jno
xor
jle
ss
xor
inc
jns
sbb
lahf
sti
cmp
inc
sahf
aaa
in
jle
adc
push
test
cmpsl
lock
repnz
call
mull
or
fwait
in
jle
xchg
xchg
xchg
xchg
add
push
nop
sub
fwait
mov
subb
ljmp
dec
int3
xor
xor
inc
cld
push
xor
stc
pop
cmp
int3
jns
sub
dec
ja
test
inc
sub
iret
hlt
sub
mov
ret
xchg
repz
mov
mulb
xor
das
mov
arpl
xchg
lcall
push
data16
push
xor
and
out
push
in
dec
rorl
pop
pop
shl
lret
pushf
orb
shr
xlat
fdivr
leave
cmp
das
push
cmpsl
push
mov
addr16
call
lcall
arpl
cs
jnp
xchg
idivl
int
bound
fdivrl
mov
mov
arpl
jecxz
dec
in
dec
out
std
lods
loopne
loop
cltd
je
pop
es
xor
test
sub
jno
inc
sti
ret
adc
shlb
mov
fcoml
sbb
mov
lea
insb
popf
xor
test
mov
jle
push
shll
clc
je
fstp
popa
jno
fwait
push
sbb
ds
mov
mov
cmpsl
incl
lods
pusha
jecxz
jo
lds
dec
push
stos
pop
idivl
mov
dec
out
repz
std
mov
popf
icebp
sub
gs
sbb
xchg
cmpsb
push
jle
in
push
shrb
mov
test
dec
dec
sarb
mov
pop
mov
fisubrs
fwait
xchg
sub
xchg
sahf
mov
out
sub
fists
pop
movsb
ss
push
std
cmp
sub
adc
xor
and
lods
pop
lahf
or
add
imul
inc
mov
push
add
arpl
dec
xchg
mov
cmp
aad
and
test
int
jp
pop
add
mov
inc
pop
cmc
xchg
pop
inc
mov
in
loope
scas
or
or
adc
mov
dec
pop
sub
out
cwtl
ret
pop
add
into
adc
pop
jae
enter
cli
xor
cli
cld
dec
and
in
xorb
push
xlat
mov
inc
pop
and
cmp
mov
stos
out
adc
pop
inc
pop
pop
xor
sub
or
bound
call
cmp
insl
pop
dec
jge
sub
shll
aas
int3
cmp
js
inc
xchg
insb
xor
jmp
out
add
pop
test
jp
add
xchg
jge
fisubl
mov
outsl
sub
mov
in
and
sub
cltd
dec
mov
outsb
sbb
sbb
push
sub
push
dec
sub
bound
out
sub
add
js
mov
std
xlat
xor
cmpsb
ret
arpl
js
push
push
jecxz
ds
mov
xchg
inc
push
sar
lcall
cltd
push
push
and
popa
inc
test
pop
lret
mov
jns
rcl
rcl
popf
jecxz
fisttpll
push
fidivrl
test
pusha
dec
lret
mov
xchg
pop
xchg
gs
cmp
out
push
mov
pop
sub
sbb
mov
shll
ret
mov
pop
adc
frstor
ljmp
testl
sbb
inc
aad
xor
and
sarb
adc
dec
movsb
inc
fnstcw
cli
test
or
mov
xchg
fwait
xor
push
dec
cmp
cmp
clc
mov
test
mov
jno
sub
dec
and
cmp
add
inc
dec
adc
pop
test
mov
mov
outsl
fistl
in
dec
mov
fldcw
sbb
inc
cs
or
lds
cmpsl
pop
mov
pop
jnp
aad
das
sbbb
sub
iret
stos
mulb
fldenv
xor
in
leave
xchg
rorl
push
lret
push
cld
icebp
push
in
imul
and
aad
aaa
hlt
sub
sub
jmp
pcmpgtb
ret
pop
popa
pop
inc
loop
jnp
push
cltd
mov
mov
add
pop
pop
data16
or
fsubrl
inc
lcall
dec
xchg
leave
sub
mov
cs
out
mov
cmp
and
push
mov
cmp
xchg
push
lock
loop
or
gs
push
popa
movb
mov
add
xor
fsubrl
cmp
dec
cwtl
pusha
or
aas
mov
daa
movsb
inc
std
xor
jno
sti
icebp
jg
repz
jnp
inc
or
ja
fdivl
cld
mov
sbb
mov
add
enter
mov
mov
bound
cmp
or
lret
addr16
je
add
xor
mov
mov
mov
sbb
sbb
lcall
adc
or
ret
lods
mov
repnz
or
xchg
jmp
lahf
daa
inc
mov
and
pop
mov
imul
inc
and
jle
inc
mov
or
adc
dec
mov
mov
rolb
aam
cmp
aam
addr16
clc
add
cmpsb
fdivrl
jns
mov
xchg
mov
inc
cmp
cmp
cmp
jge
mov
mov
xadd
mov
mov
in
decb
rcrl
lods
lahf
pop
pop
test
cli
inc
sbbl
add
sbb
push
inc
and
dec
sbbl
enter
imul
sbb
mov
loop
popa
sbb
sub
jae
inc
or
adc
clc
dec
xchg
dec
arpl
lcall
sbb
sbb
aaa
adc
sub
adc
ret
popa
cmpsl
hlt
mov
xor
mov
jns
pop
cli
loope
mov
inc
adc
pop
dec
sarb
mov
xor
fnstcw
or
loopne
int
and
inc
inc
cmp
test
xchg
loope
test
in
mov
inc
or
daa
ds
sti
pop
out
stos
inc
rorl
imul
movl
sti
test
xchg
aam
sub
ret
xor
cmpsl
fwait
mov
jecxz
adc
hlt
les
mov
cli
cmp
push
pop
jmp
jno
sahf
and
pop
inc
mov
sar
orl
dec
jae
and
sub
sbb
inc
in
scas
pop
add
aam
inc
push
xor
shll
xor
mov
or
aaa
in
add
insb
loopne
rcrl
mov
push
cwtl
ljmp
leave
cltd
cld
xchg
test
jle
sub
add
pop
addr16
xchg
jge
pop
sub
inc
scas
fdivrl
xchg
mov
xor
fstl
add
pop
xchg
dec
clc
ss
iret
xor
pop
clc
cwtl
mov
mov
cmc
jg
stc
add
call
mov
arpl
ror
and
cmp
or
jg
pop
push
loope
push
ret
and
jo
sub
add
pushf
mov
les
and
repnz
mov
xchg
shr
loopne
stc
addr16
lea
jns
outsl
out
jp
scas
lds
or
add
dec
in
adc
or
popl
pop
pop
sarb
jno
cltd
push
jecxz
andl
mov
jge
xor
mov
or
cs
push
fs
popa
and
jbe
gs
out
out
add
push
jecxz
js
push
nop
js
orb
mov
mov
xor
adc
cmp
jo
sbb
xchg
add
loopne
jno
add
push
sub
xor
dec
out
incb
xchg
lea
xor
mov
mov
and
movsl
mov
dec
fisttps
into
fdivs
mov
je
test
pop
push
jmp
xorb
test
ret
cmp
repz
ror
or
std
flds
aaa
xor
jne
jg
repnz
popl
jmp
xchg
dec
inc
inc
pop
scas
cmp
cmpsb
mov
sub
mov
leave
rol
mov
leave
sub
sahf
sbb
fbstp
shlb
fmull
inc
dec
add
jae
add
pop
jg
and
in
cmp
lods
and
dec
int
loope
scas
inc
into
repz
dec
push
push
mov
out
or
jp
fsubrl
xor
iret
shll
add
dec
jnp
add
shrl
inc
xchg
fsubrs
xchg
ja
and
mov
xchg
push
out
cmpsl
loope
and
or
cmp
loopne
cmp
dec
sbb
loop
out
push
dec
sar
sub
aas
and
or
lcall
in
int
call
pop
mov
cmp
test
pop
into
js
in
mov
xchg
push
and
cmp
movsl
repz
dec
jmp
aad
decl
cmp
js
stos
xchg
adc
pop
outsl
push
stos
sarl
push
push
sub
push
fistps
pop
es
dec
xchg
xchg
jb
int
outsb
ds
popf
in
jle
sub
jmp
or
lds
dec
cmp
and
iret
in
cltd
out
lock
adc
xor
or
pop
pusha
lahf
in
inc
insb
sbb
ss
cmp
pop
rol
jmp
data16
popf
fwait
cmp
xchg
inc
rcrl
xorl
jg
xchg
jns
sbb
xchg
shrb
mov
mov
rcll
pushl
sub
dec
scas
sub
repz
push
cli
ja
movsb
movl
mov
das
addr16
mov
cmp
xor
pushf
xor
in
mov
mov
sub
jg
push
dec
movl
add
aas
dec
jbe
pop
insl
addb
stos
lcall
loopne
fidivl
xor
pop
fs
cmp
inc
mov
sbb
or
push
leave
xlat
pop
lcall
fs
stc
and
inc
xor
enter
jbe
xor
int3
dec
jns
xor
lock
add
addr16
push
jae
adc
sub
js
dec
lahf
aad
jl
mov
repnz
in
rorb
xchg
and
outsl
push
sbb
inc
cltd
or
dec
adc
ss
cmp
mov
lahf
push
shll
or
pop
push
daa
add
or
loop
fbld
inc
lock
in
negl
ficomps
addl
xor
jnp
jecxz
adc
les
dec
lahf
ljmp
ret
xchg
clc
andl
mov
loope
aad
pop
and
aas
gs
addb
mov
or
sarb
loopne
fst
lock
cltd
jo
jae
cli
aas
lds
dec
ja
xchg
insl
xlat
imul
mov
cli
aad
scas
gs
sbb
pop
mov
mov
es
ret
mov
movsl
push
icebp
xlat
popf
scas
das
imul
insb
jb
dec
sub
pop
dec
andb
leave
xchg
pop
jecxz
jno
das
mov
and
xor
and
jg
sbb
addb
push
push
adc
aad
fdiv
xor
clc
insl
das
jbe
mov
cmp
pop
push
pusha
mov
push
adc
loopne
fsubrs
clc
pop
nop
jecxz
xchg
add
cld
mov
test
arpl
or
xchg
xchg
jb
es
insb
fcmovbe
xor
popa
rcr
iret
inc
fisubs
or
scas
add
add
and
js
pop
add
mov
and
sub
sbb
icebp
clc
paddq
dec
add
jb
xlat
mov
into
in
mov
es
cmp
addl
cmpsb
inc
mov
xor
pusha
jae
call
push
leave
mov
xchg
add
sbb
and
test
adc
icebp
or
or
mov
in
daa
or
sub
orl
imul
stc
cltd
dec
stos
roll
je
pop
test
xor
dec
out
in
cmpsl
cmp
mov
les
fisttps
pop
shr
xlat
loope
nop
adc
fildl
cltd
in
dec
pushf
lock
push
adc
xor
daa
mov
mov
fsubrp
cmp
or
outsl
add
dec
addr16
ljmp
inc
sub
setno
cmc
or
roll
mov
repz
leave
sbb
call
testl
add
pop
pop
inc
lret
dec
mov
ss
es
mov
lcall
andl
loop
stc
xchg
add
inc
adc
outsl
popa
lock
jb
dec
fs
mov
jo
movsl
jae
mov
icebp
xor
xor
shrb
notl
int3
in
sub
add
jnp
push
inc
aaa
xor
xor
movsl
inc
dec
int3
addr16
jb
mov
pop
cld
cmpsb
insl
cli
sarb
sub
mov
arpl
fld
setns
adc
das
pop
dec
ficoml
jns
cmpb
add
out
or
in
cmp
or
mov
test
les
addr16
inc
loope
popa
xchg
adc
mov
or
inc
push
add
adc
xchg
mov
divb
int
clc
stos
repnz
scas
sub
mov
and
and
mov
ja
cmpsl
push
sub
cmp
jmp
test
dec
xlat
scas
xor
sub
fstps
jns
xlat
addr16
notb
imul
imul
push
inc
out
xchg
cmpsb
ljmp
rorb
je
dec
xchg
cld
jge
jne
pop
xchg
push
roll
scas
or
cmp
test
mov
cmp
fwait
push
sub
cli
arpl
cltd
stc
addr16
imul
fstpl
inc
adc
cmp
movsl
mov
push
mov
leave
xor
ljmp
adc
ja
int
jo
pop
test
js
popf
inc
fstl
sbbl
xlat
sub
movsl
xor
cmp
cmp
insl
jmp
mov
jns
mov
and
popa
mov
mov
sbb
fdivrl
ss
idivb
loop
push
fcompl
xlat
lods
sbb
mov
pop
stos
mov
pop
stos
fwait
cmp
cmp
mov
dec
filds
push
adc
rcrl
jbe
xor
or
in
jae
hlt
sbb
dec
xchg
aad
orb
cmp
push
jle
or
sub
dec
leave
and
cld
mov
bt
sub
sub
fdivl
sub
repz
pop
cmp
lcall
xchg
xor
cmc
pop
outsb
adc
cmp
cld
call
addb
add
add
inc
ja
stc
sub
ret
mov
mov
push
mov
out
scas
adc
lret
or
sub
lods
dec
xchg
jecxz
ja
dec
or
jno
cli
xchg
mov
mov
iret
and
mov
xchg
sbb
movsb
ja
cmp
rcl
repnz
lret
repnz
in
mov
mov
xchg
sbb
cltd
shrl
imul
cmp
and
mov
pop
rcr
pop
icebp
int
inc
xchg
cmp
loop
jnp
jg
out
or
jns
subl
mov
dec
insl
pop
xchg
fistps
loope
add
sbb
cmc
pop
xor
cmp
mov
cmpsb
add
or
inc
rcl
jne
xchg
fs
xchg
adc
fcmove
clc
ret
imul
fildll
test
and
add
inc
shrb
scas
push
nop
mov
je
lods
mov
dec
sub
fidivrl
sub
sbb
pop
pop
mov
gs
call
jp
mov
mov
dec
and
lods
xor
or
stc
and
and
cmpsb
adc
repnz
insb
aas
mov
jns
xchg
insb
cmc
leave
and
cmp
or
adc
nop
popa
rclb
dec
cli
xchg
mov
cmc
cwtl
shl
popa
inc
popa
das
cltd
lret
lret
cmp
mov
add
cs
sbb
aas
sbb
outsl
or
rorl
inc
adc
mov
shll
clc
out
in
inc
xchg
jno
fisttps
pop
mov
mov
sar
and
jb
push
pop
jmp
call
or
mov
mov
mov
mov
sahf
cld
push
sub
xlat
icebp
sub
dec
scas
or
js
sbbb
xchg
xchg
jl
sahf
pop
push
cmp
and
scas
mov
test
cltd
sub
cmp
std
je
pop
lock
test
pop
pop
inc
cmpsl
mov
mov
sub
imul
outsl
push
or
jae
daa
and
mov
push
push
inc
les
nop
cli
cltd
and
fildl
pusha
inc
sub
cli
dec
lahf
jecxz
js
xchg
mov
fs
add
mov
jno
mov
mov
mov
adc
dec
mov
xchg
loope
cmc
sti
pop
mov
pusha
loope
and
rcl
call
add
mov
movsb
icebp
dec
pop
imul
loope
ret
movsb
dec
xor
dec
or
daa
xchg
mov
mov
push
jns
xchg
rorb
loope
outsb
test
shlb
xor
jbe
pop
inc
xor
cmp
sbb
out
aad
sahf
gs
fildl
sarb
scas
pop
xor
mov
mov
outsl
sbbl
lcallw
jns
adc
lods
add
or
addr16
in
push
xchg
jge
int3
add
cwtl
cli
inc
int3
cmp
insb
test
cmp
adc
sbb
pop
dec
inc
call
mov
inc
xchg
pushf
sbb
xor
andl
clc
pop
aad
jmp
push
xor
ljmp
int3
push
push
ljmp
test
int
iret
dec
pop
dec
fs
stos
push
push
mov
jle
fwait
cmp
in
xchg
and
xlat
aad
sub
rolb
imul
mov
or
inc
xlat
aaa
mov
cmp
jne
push
jmp
xor
fnstsw
repnz
jg
negl
fcmovu
xor
cmpsb
dec
pop
and
mov
cltd
fldl
add
adc
in
rcrl
pop
sub
cli
out
mov
addl
adc
scas
mov
sbb
jge
jmp
sub
in
pop
dec
mov
mov
pushf
xchg
push
iret
dec
and
pop
sub
add
jne
jge
xor
inc
mov
inc
enter
sbb
sub
inc
std
in
into
std
mov
loope
out
xor
and
xchg
dec
push
push
add
mull
mov
mov
adc
pusha
jo
cmc
mov
xor
mov
add
xchg
dec
inc
sbb
clc
pop
adc
inc
popa
adc
or
adc
rcl
or
mov
cmp
sahf
cwtl
sbb
sbb
push
jp
cmp
mov
lock
das
fisubs
inc
roll
adc
sbb
lock
xchg
lahf
cltd
mov
insb
push
adc
cltd
int3
xor
into
dec
push
jns
in
imul
lahf
dec
jbe
les
sub
shr
xchg
mov
je
lret
dec
lea
in
int3
push
push
dec
icebp
mov
stc
add
mov
movsb
roll
stc
jae
and
or
pop
imul
aaa
in
and
mov
clc
xchg
sbb
test
out
sarl
adc
scas
enter
and
data16
xchg
xor
cs
fistps
or
cmp
imul
push
xchg
shll
insl
movsl
jns
loopne
mov
cwtl
js
push
fisubrs
or
test
aaa
out
xchg
push
inc
mov
clc
mov
fsubl
nop
xchg
xchg
and
xchg
pushf
inc
cwtl
outsl
pop
fsubl
test
lds
cmp
sbb
lret
outsl
jns
mov
xor
lahf
sbb
jp
std
push
jle
ret
mov
dec
inc
adc
out
mov
mov
mov
inc
lods
js
test
jbe
cwtl
pop
lods
inc
in
test
push
rclb
jg
and
arpl
into
inc
mov
mov
scas
mov
jmp
stos
mov
jp
int
sub
les
add
and
xor
xor
jl
inc
loope
mov
sbb
adc
dec
xchg
xchg
xor
jmp
adcl
xchg
push
and
mov
inc
fs
mov
mov
or
push
cwtl
jns
xchg
cmp
mov
popa
mov
clc
ds
lea
jp
jns
sbb
mov
cltd
les
push
push
mov
dec
inc
dec
dec
dec
test
call
mov
add
xor
jp
inc
mov
xchg
aam
arpl
out
jb
mov
mov
and
pop
mov
cmp
add
mov
sbb
pop
sbb
fwait
je
or
mov
dec
mov
aaa
mov
jp
sub
sbb
add
pop
mov
es
fstps
punpckhwd
inc
fs
push
mov
adc
or
cmp
sahf
jo
stos
pop
mov
mov
xor
fwait
push
mov
or
shlb
js
mov
lahf
fucom
push
popa
jnp
ret
mov
pop
out
cmp
add
pop
stos
xor
addr16
lahf
fiaddl
sbb
push
or
xchg
jge
lret
pop
call
test
int
imul
adc
and
push
xor
xor
pop
sub
sahf
testl
adc
aas
cmpsl
jge
data16
adc
push
loope
loop
mov
pop
cmpsb
test
movsb
add
mov
scas
pop
insl
pop
jae
cmp
mov
cmp
inc
cmp
sub
call
rol
dec
inc
pop
pop
cmpsb
push
dec
pop
test
sbb
mov
mov
dec
jge
xchg
fsub
cwtl
in
inc
xchg
les
outsl
mov
mov
push
sbb
mov
pop
or
es
pop
cmp
out
cmpsb
enter
imul
test
sub
fcoms
std
jl
xor
adc
hlt
int
pushf
sub
jp
lods
xchg
push
jo
in
imul
push
cwtl
in
mov
mov
nop
xor
jb
fbstp
jae
scas
jp
jno
fnstsw
mov
scas
in
sar
xor
pop
cli
dec
out
popf
into
in
and
fsubrl
mov
repz
mov
cmpsb
mov
jle
pop
cmp
sarb
mov
cmp
jnp
test
adc
mov
jle
cmp
insl
stos
push
negb
mov
and
cld
lea
hlt
xchg
jo
mov
adc
out
inc
loopne
cmpsl
fldl
insl
call
mov
cmp
xor
adc
sarl
mov
or
adc
loope
mov
ret
add
insl
movsl
mov
inc
in
icebp
insl
jae
es
jb
xlat
push
orl
sti
add
fstl
call
jo
mov
lock
xor
inc
dec
incb
mov
movl
lcall
pop
int
je
lods
mov
call
rcr
mov
mov
inc
leave
inc
push
xchg
cmpsb
xchg
loopne
enter
xorb
gs
stos
cld
pop
push
cld
mov
mov
daa
jbe
sbb
je
cli
out
mov
sarl
sbb
cmp
dec
movl
aaa
mov
xchg
adcb
xor
sbb
outsl
xorb
dec
or
into
xlat
bnd
or
sarl
movsl
imul
incl
adc
ljmp
ret
nop
cwtl
fisttpll
cli
js
out
cmp
xorl
shlb
push
cmp
in
mov
out
sub
fbld
or
xchg
xor
push
sbb
and
ret
inc
les
pop
jmp
in
daa
mov
dec
addr16
cwtl
mov
dec
out
mov
mov
enter
dec
cltd
mov
dec
lahf
mov
arpl
aaa
xchg
fisttpll
mov
add
sbb
cld
pusha
data16
cltd
jp
cs
mov
pop
dec
orb
push
movb
cmp
lcall
and
mov
dec
mov
push
dec
xor
pop
adc
dec
xchg
push
popa
shr
mov
xchg
das
or
inc
xchg
xor
cmp
pop
dec
adc
xor
aas
cmp
mov
clc
subb
sbb
xchg
rep
xchg
call
mov
fwait
insl
jb
lds
mov
xor
les
cmp
jge
int
mov
fwait
jle
jo,pn
fs
mov
cwtl
and
xchg
push
cmp
lods
mov
ret
xlat
popf
jge
cmpl
je
jns
inc
sti
lods
push
adc
mov
lret
push
cli
push
repnz
jne
jg
jns
mov
fs
pop
movsl
movb
fs
cmp
jb
push
xlat
add
pushf
fs
cmp
daa
das
lds
aas
sbb
jmp
mov
push
push
bound
or
popa
cld
sbb
jl
adc
cld
gs
jnp
out
push
xchg
dec
mov
cmpsb
xchg
sbb
loope
mov
add
cmpsl
and
call
xchg
ljmp
pop
dec
popf
icebp
lea
push
inc
nop
imul
mov
add
push
lods
push
mov
jge
sub
xor
xor
xchg
jns
in
cwtl
xorl
aaa
mov
std
inc
in
sub
fs
push
jle
cmpsb
call
xor
fcom
mov
fisubrs
lods
push
dec
push
dec
sbb
pushf
mov
sti
outsb
fsubrl
adc
aaa
das
add
jp
movsb
mov
sarb
xor
sub
push
mov
faddl
lods
dec
add
jb
xchg
imul
xchg
inc
dec
out
shll
or
cmp
sarl
add
call
or
int
rcrl
es
or
mov
aad
sub
pop
addb
shll
aaa
orb
push
or
aad
bnd
push
stc
fdivrl
stos
push
mov
sahf
inc
sbb
xchg
gs
clc
ss
and
mov
in
cmpsb
in
push
or
test
roll
mov
jmp
sbb
in
std
mov
lds
sub
sti
imul
push
or
leave
int
xchg
fbstp
mov
cmpsl
jne
sbb
jns
sbb
sbb
int
mov
insb
jge
repz
ja
dec
and
leave
xchg
dec
dec
dec
mov
rorb
mov
jne
cmp
outsb
mov
sub
lahf
inc
jns
jmp
loop
xor
and
cmp
cmp
mov
cmp
cld
jbe
and
inc
sub
mov
lret
mov
inc
adc
cli
addl
dec
jge
add
mov
push
sub
sub
jge
and
push
clc
call
mov
loop
xchg
xchg
or
pop
adcl
push
sarl
or
in
and
sub
xchg
out
mov
lahf
inc
sbbl
cmp
cmpsl
xorb
cld
loop
out
outsb
dec
pop
data16
insl
adc
xlat
addr16
pop
movsb
add
add
test
ret
stos
jmp
rcll
xchg
mov
xor
jae
jp
repnz
lods
push
add
fsubl
mov
pop
pop
pop
xchg
adc
icebp
cltd
add
xchg
dec
sti
gs
fsubl
in
xor
cmpsb
es
pop
ds
push
add
cwtl
or
mov
dec
mov
insl
in
add
pause
lret
xchg
lods
dec
fadd
or
mov
loope
in
or
jmp
les
ss
jecxz
sub
gs
and
sbb
testb
and
push
sub
ret
fiaddl
xchg
sbb
cmpsl
into
jno
mov
js
mov
rorb
cmp
stc
adc
sub
ds
insb
adc
test
sub
push
inc
pop
push
pop
pop
xor
int3
lea
loop
insb
out
xchg
jb
adc
push
push
movb
xorl
mov
mov
jge
cmp
adc
sarl
cwtl
leave
lret
cmc
fcmovb
pop
inc
sbb
ds
or
repnz
testb
shrb
mov
or
aas
addr16
repnz
outsb
fistpll
data16
iret
cmp
enter
cmp
mov
jp
mov
xchg
sbb
push
scas
out
inc
vpcmpgtw
and
dec
movsb
sbb
sub
or
mov
jl
test
cld
mov
js
add
sbb
stos
in
es
adc
pushf
jg
jl
adc
jmp
pusha
cwtl
popf
shr
dec
hlt
sbb
fidivrl
xor
sahf
mov
push
pop
pushl
idiv
cli
fsts
sub
mov
lret
mov
mov
pop
ljmp
xchg
jmp
dec
sbb
mov
inc
sarl
lcall
inc
je
jl
popa
cmp
ljmp
cmp
push
jl
gs
jo
jl
aas
jp
and
xor
fnstenv
xchg
mov
into
mov
add
punpckhwd
aaa
and
lret
call
rorl
and
xchg
retw
push
lock
enter
ss
cmpsl
fcmovnb
ret
jg
movsb
jge
ds
and
arpl
hlt
xor
or
test
aas
cmp
sub
in
scas
loop
mov
inc
push
mov
dec
xor
addl
jb
sub
xchg
ljmp
cmp
ret
xor
xor
imull
xchg
stos
repnz
iret
and
mov
arpl
xchg
mov
aam
call
pop
arpl
push
rclb
xchg
xorps
add
sub
pushf
push
push
bound
sub
aaa
jg
pop
mov
clc
add
lcall
jge
mov
and
sub
mov
sbb
out
mov
xchg
add
mov
cmc
rorl
mov
pop
jb
push
popa
shlb
or
outsl
cmp
sub
lea
pop
mov
rcrb
and
ds
pop
lds
ret
xor
fistpll
jbe
add
push
sbb
push
pop
and
or
ret
mov
lods
lcall
push
jo
jne
mov
jmp
loop
arpl
push
add
xchg
dec
jg
cmpl
or
xor
rcrb
imul
jle
popa
adc
and
ret
cmpsb
in
stos
push
xchg
out
xchg
in
leave
movsl
or
pop
mov
or
ret
loop
adc
in
cmp
xchg
movsl
into
movsb
bound
out
stos
fisttpll
mov
imul
insl
push
mov
or
cmpsl
mov
mov
imulb
lcall
inc
fiaddl
out
das
xchg
test
lret
orl
xchg
xor
mov
sub
aas
jo
jecxz
aas
arpl
xchg
sar
mov
pop
lret
insl
or
push
sub
pop
jmp
mov
add
insb
jle
jge
pop
xchg
int3
in
cmp
dec
data16
sub
ficoms
fcompl
mov
lds
jl
inc
dec
test
ds
divb
pusha
or
iret
insb
in
add
xor
out
int3
test
roll
into
clc
jo
fisttps
or
sbb
push
jns
fimull
enter
mov
pop
icebp
js
mov
mov
adc
je
iret
imul
iret
ret
cltd
jnp
mov
shr
out
ror
loopne
into
icebp
pop
mov
add
adc
outsl
sbb
dec
lds
stos
jbe
pop
pusha
je
push
movb
pop
pop
jg
icebp
dec
cwtl
fdivl
out
cwtl
repz
addr16
sbb
xchg
or
lret
aam
sahf
dec
es
inc
outsb
test
mov
dec
cld
aad
or
loop
mov
fdivrl
and
scas
out
nop
jle
je
pop
adc
cwtl
ds
push
les
jl
xchg
stos
dec
xlat
adc
outsl
loop
and
pop
jmp
push
xor
adc
xchg
xor
lcall
aad
xor
jg
je
cli
add
push
dec
aad
andb
mov
enter
pop
xchg
jmp
ja
hlt
mov
pop
into
xchg
mov
popf
mov
dec
dec
mov
adc
mov
aam
sbb
xor
shl
movsl
cld
scas
jno
icebp
sub
push
sbb
cs
adc
push
inc
repnz
cmp
mov
out
sbb
std
dec
call
outsl
jg
or
cmc
pusha
push
sbb
out
frndint
sbb
out
xchg
xchg
out
dec
dec
addr16
jg
mov
das
rolb
lret
sbb
add
mov
stos
push
iret
xchg
and
dec
mov
outsb
div
jge
mov
addb
movl
fbstp
scas
aad
fbld
xorl
call
push
xchg
inc
sbb
mov
lds
in
movsl
add
divl
fwait
mov
je
pop
jns
jle
test
xchg
fldl
push
pop
inc
or
pop
mov
fdiv
mov
test
in
cmp
cld
ret
cs
subb
add
pop
xchg
dec
xor
push
cmp
lods
jo
cmp
or
test
mov
push
jo
xrelease
cld
int
and
das
or
pop
jnp
pop
in
xor
test
push
int
sub
stos
mov
popa
outsb
mov
flds
pop
adc
mov
jecxz
mov
sbb
stos
pop
rorl
mov
dec
push
call
loop
xchg
add
cwtl
mov
push
int
cmpsb
sub
fwait
pop
xlat
pop
in
idivl
loopne
mov
adc
inc
pop
pop
add
xor
test
rcll
cmp
dec
leave
fisttpll
out
xor
adc
ror
rcll
int
shrl
stos
mov
int
xor
mov
xorb
sahf
push
ss
lahf
mov
push
cmpsb
in
cs
sub
rcl
jno
fld
testl
repz
or
mov
mov
test
scas
loop
mov
loopne
cmp
add
inc
nop
push
push
addb
add
xor
into
xchg
rolb
aaa
in
ret
aam
add
sub
scas
aas
xor
popa
hlt
inc
insb
in
xor
push
xor
xor
inc
ja
push
sub
mov
lds
jl
movsb
fabs
lret
in
sub
push
or
hlt
sahf
subl
lahf
push
aaa
pop
sarb
sub
loopne
js
push
xchg
imul
jmp
push
sbb
xchg
mov
rolb
out
fcomps
imul
mov
dec
mov
sub
mov
les
xchg
mov
int
push
sbb
cld
push
push
bnd
or
fadds
sahf
int
repnz
mov
out
lcall
mov
sbb
add
pusha
ljmp
sub
loope
loope
cmp
and
aas
or
out
mov
pop
into
test
mov
adc
inc
in
lahf
repnz
mov
cmp
xchg
pop
mov
insl
cmp
popa
pop
xor
xchg
or
mov
and
jl
cmp
mov
bound
pop
mov
push
jg
in
mov
cld
lret
xchg
leave
in
adc
push
dec
xchg
push
or
mov
jbe
jbe
negb
je
jl
sub
gs
std
jecxz
decl
in
outsb
enter
or
js
ljmp
jb
xchg
adc
roll
bound
mov
bound
pushf
test
xchg
rorl
xchg
add
cmc
mov
cmpsl
push
out
orl
je
mov
mov
sbb
insb
imul
add
mov
pop
fwait
cwtl
mov
nop
leave
xchg
das
cmpsl
pop
lahf
pop
bound
addl
xor
das
mov
mov
sbb
sbb
fists
sbb
and
cld
push
lcall
adc
fmulp
cmp
pop
aaa
pop
pop
pop
mov
ds
dec
dec
icebp
notl
cmc
add
test
dec
sbb
inc
mov
and
fst
imul
xor
cmpsb
jg
mov
aas
dec
popf
cmp
cwtl
mov
xlat
and
repnz
mov
mov
sbb
mov
out
aam
aaa
cmp
mov
push
xchg
cmpl
pusha
addr16
insl
cmp
add
int
dec
loope
and
push
add
mov
js
mov
test
jnp
fmull
jo
push
jle
daa
xor
imul
nop
imul
test
mov
jle
mov
std
push
aas
imull
jb
call
imull
cmp
arpl
xchg
clc
jecxz
sbb
jmp
pop
mov
popa
mov
aam
jnp
ss
test
push
fcomp
or
insb
pop
push
xlat
imul
adc
cld
scas
lods
or
lea
rcrl
loope
adc
bound
push
aam
aam
mov
loop
insb
lahf
add
pop
xor
in
mov
negb
loope
sub
sub
pop
jno,pt
jg
in
or
bound
mov
inc
add
filds
hlt
xchg
jecxz
dec
xorb
push
std
leave
daa
push
mov
test
jb
xchg
jge
cmp
mov
add
mulb
push
fdivl
mov
sbb
sbb
into
ja
pop
ds
adc
mov
and
fwait
mov
mov
into
xchg
xlat
faddp
cmpsb
fcmovbe
out
daa
aaa
popf
jae
shll
inc
in
loopne
ss
xchg
mov
xorb
lret
mov
sbb
dec
outsl
fisubl
mov
faddl
ja
push
push
jmp
mov
mov
sub
imul
adc
inc
aam
sbb
out
mov
jle
cmp
push
subl
aas
imull
in
hlt
mov
lock
mov
mov
push
mov
jnp
stos
cld
mov
jmp
pop
push
and
mov
repz
ja
in
out
xchg
enter
imul
shl
ja
sbb
movaps
and
mov
std
add
xlat
adc
sahf
mov
enter
int3
ds
fld
inc
aas
push
push
cwtl
push
fisttpll
or
sub
inc
lock
sbb
loopne
add
into
sbb
imul
pop
xorb
pushf
sti
mov
sbb
pop
hlt
mov
test
mov
xor
xor
mov
and
in
or
in
add
lahf
daa
int
mov
dec
push
mov
sbb
jmp
movsb
jmp
sti
aas
xor
sub
jmp
sub
push
sbb
nop
fsubl
pop
mov
inc
js
stos
cmp
movsl
lahf
jg
mov
enter
loopne
data16
add
in
jge
enter
mov
sbb
inc
cmp
stos
or
fisttpll
pop
cwtl
push
clc
fbstp
sub
in
mov
test
aam
sbb
lret
push
in
jg
pop
repz
out
and
out
mov
daa
mov
mov
push
ds
lds
add
or
jbe
adc
insl
aaa
cmpsb
in
adc
push
lret
xor
aam
adc
push
arpl
ror
sub
fldl
ret
push
hlt
jb
ljmp
cmpl
in
gs
jmp
dec
inc
push
push
outsl
cli
add
jecxz
and
and
xor
dec
push
scas
insb
adc
xlat
mov
pop
test
pop
pop
xchg
je
sahf
stos
je
lods
jns
and
mul
cli
pusha
lcall
push
int
xlat
mov
jle
mov
fmull
pop
or
insb
ret
sbb
clc
and
es
fisubs
push
outsb
aam
pop
rcrl
jno
inc
mov
cmc
adc
lea
ds
fdivrl
in
insb
push
filds
pop
dec
mov
xlat
sti
sti
cmpsb
aad
mov
push
std
jne
adc
in
cmp
leave
test
inc
xor
sub
inc
lods
fidivrs
jae
insl
pusha
stos
outsb
dec
addb
pop
jns
and
add
flds
inc
fstps
and
cmp
xor
in
mov
inc
pushf
jae
jmp
inc
push
dec
das
pop
pop
cmp
xor
flds
adc
loop
imull
dec
fwait
fwait
out
dec
and
sbb
sbb
ja
fwait
push
mov
sti
and
in
or
cmp
mov
sbb
cltd
cmp
push
adc
cli
cmp
pusha
adc
add
pop
lock
sbb
imul
mov
inc
mov
clc
mov
cmc
rolb
loope
ja
lcall
cmc
movsb
xchg
jo
lock
mov
inc
pop
jne
sub
lahf
insb
stc
jg
and
faddl
dec
mov
sbb
push
sbb
ret
rclb
inc
xchg
inc
jns
mov
pushf
insl
subb
movsl
fadds
in
les
or
andl
or
xor
ljmp
push
imul
or
dec
ficoms
inc
inc
and
cmp
and
movsb
jnp
ja
cmp
adc
pop
push
faddl
xlat
lds
push
adc
push
sti
scas
xchg
jle
push
push
xchg
sub
mov
and
sub
aaa
inc
jo
pop
in
or
mov
dec
mov
or
mov
dec
or
sbb
mov
stos
aas
or
ror
jecxz
and
cltd
jp
cmpsb
out
jmp
xchg
cmp
pushf
inc
cltd
xor
jno
in
mov
arpl
dec
xor
outsb
inc
arpl
ds
es
outsb
cli
test
or
imul
inc
jbe
ds
stc
pusha
int3
orl
cmp
and
push
lret
ret
lods
xchg
stos
insb
adc
add
insb
xchg
mov
mov
jno
repnz
dec
mov
or
sbb
mov
mov
mov
shlb
adc
jae
xchg
or
inc
xchg
lret
movsl
jle,pn
dec
push
push
cmp
pop
aam
mov
or
xchg
add
pushf
push
test
test
add
insl
cmp
mov
daa
add
pop
test
mov
inc
xchg
sahf
dec
repz
in
lret
into
cmp
out
inc
lock
mov
mov
cltd
dec
in
xchg
lahf
test
jecxz
arpl
fmuls
or
mov
pop
inc
negb
jp
xchg
fadd
push
nop
in
cmp
pusha
cld
scas
jge
sub
loop
cmp
imul
pop
or
mov
push
shll
pop
enter
inc
cmc
in
dec
mov
jecxz
sub
andps
jmp
mov
push
xchg
ret
scas
push
mov
pop
cmpsb
cmp
add
xchg
adc
imul
add
jnp
mov
pusha
data16
imul
jl
bound
cmp
cwtl
pop
test
lds
lods
in
stos
xchg
sbb
lahf
pop
inc
mov
mov
popa
add
test
adc
sub
testl
icebp
stos
out
insb
cmp
cmp
xchg
xor
xchg
inc
les
pop
lods
fidivl
mov
stos
popf
cmpsb
lret
aad
sbb
jge
fs
pusha
xchg
mov
pushl
stos
test
ss
mov
sbb
into
shl
and
xor
pop
mov
mov
inc
nop
add
repz
lock
sbb
mov
sarb
dec
and
cmpsb
leave
pop
shlb
ret
jae
sub
filds
mov
mov
sub
sub
inc
pop
xor
cld
js
jb
data16
sbb
mov
fisubrs
lods
out
sbb
ljmp
cmp
mov
mov
repnz
leave
bound
cmp
sti
or
lret
call
orl
pop
loop
das
outsb
lret
icebp
mov
icebp
fdivr
int
lods
ret
dec
xchg
lret
mov
fsubrl
cmp
mov
push
aaa
and
inc
push
ja
adc
das
push
ret
leave
pushf
popf
hlt
lods
movsb
inc
stos
mov
hlt
andl
repnz
and
xor
shll
push
ret
rcl
dec
pusha
addr16
sub
cli
bound
inc
dec
xchg
jmp
jns
push
push
xchg
out
je
aas
pushf
icebp
lds
mov
add
divb
stos
fiaddl
and
jle
push
shlb
xchg
jg
xorb
je
xor
jb
gs
jno
sub
add
scas
jmp
jp
jecxz
movsb
stos
mov
repz
and
jns
jbe
test
jl
test
push
cmp
cmp
stos
or
mov
fadd
xchg
test
sbb
dec
addb
cs
out
inc
fldcw
xchg
push
loope
xor
xchg
pop
call
sysexit
repz
push
dec
mov
or
mov
mov
incb
mul
call
adc
popf
adc
nop
insb
je
sub
mov
mov
pop
push
aam
mulb
jnp
cmp
enter
xorl
sbb
xchg
inc
lahf
movsbl
pop
pop
lods
fmull
xchg
aam
jmp
xor
xor
push
jae
test
sub
jl
add
inc
cmp
cli
mov
adc
jo
ljmp
test
cmpsb
jb
fwait
mov
pop
push
xchg
jnp
lods
mov
jmp
mov
xchg
inc
addr16
xor
lcall
jmp
push
idivl
andl
inc
lahf
ret
xor
repz
or
cmp
sub
inc
lret
jnp
aaa
stc
cmpsb
xchg
pand
xchg
repnz
ja
sub
mov
fwait
xchg
cmc
clc
and
or
out
sarl
test
enter
xor
loop
adc
lret
jae
xrelease
test
jae
sahf
and
cmpsl
imul
push
jb
xor
cmp
dec
pop
inc
stos
jl
push
xchg
add
jmp
aaa
sub
loop
add
pop
les
cwtl
mov
decb
test
aad
push
fildll
push
cs
sbb
aad
fidivl
sbb
mov
xchg
orl
fnstcw
push
mov
stc
jp
movb
lods
ret
notl
or
sbbb
dec
les
push
xchg
lock
movsb
test
test
cmp
shl
rcl
std
rolb
sub
decb
pavgb
pop
sub
iret
mov
inc
insb
mov
cltd
xor
repnz
stos
dec
lock
iret
sub
cs
lahf
dec
mov
jp
test
fidivl
push
pop
jo
mov
or
lret
xor
das
inc
xor
add
in
dec
lea
pop
lds
rol
lcall
mov
or
mov
cmpsl
lds
cwtl
aas
mov
cmp
pop
pop
cmp
aaa
popa
mov
push
loope,pn
push
jmp
das
mov
call
xchg
lret
push
lods
adc
cmp
mov
out
aam
fstps
outsb
mov
outsl
inc
xor
ret
xchg
ficoml
pop
test
jno
jg
or
std
inc
push
mov
sub
and
fst
mov
push
out
adc
xor
ja
fsubs
fdecstp
mov
push
out
push
out
inc
mov
shl
fbld
inc
and
sbb
and
addr16
or
jbe
sar
out
fcmovb
jo
rcr
stos
jo
or
dec
in
sbb
insl
rcrl
cs
jbe
cs
nop
sub
test
push
sahf
push
sahf
xchg
xchg
int3
imul
int3
ljmp
jb
popa
out
fwait
popf
cmp
lahf
imul
mov
and
pop
icebp
repz
ret
push
sbb
pop
push
xor
and
mov
or
jns
in
adc
shl
xlat
sbbl
cmp
sub
imul
add
pop
fsubrl
mov
pop
xor
xor
outsb
into
xor
dec
mov
dec
pop
daa
cli
mov
cmp
lock
data16
rorb
inc
sub
shlb
fnstsw
adc
insb
or
addl
sti
cmc
push
outsb
ja
rcrl
adc
xor
or
cld
xor
mov
aam
cmp
push
and
mov
ljmp
pop
sbb
test
or
rcrb
addb
jno
dec
dec
push
fbld
frstor
loopne,pn
jbe
rorb
xchg
add
pop
hlt
lahf
lahf
mov
sahf
jbe
inc
movsb
inc
push
jnp
das
adc
fcomps
xchg
sbb
mov
xchg
mov
out
add
test
xchg
rolb
pushf
jno
fwait
push
hlt
stos
das
ljmp
xchg
lret
xchg
loop
jnp
divl
fsub
lahf
dec
ja
mov
aad
xchg
xor
sub
push
pop
lcall
cltd
pop
enter
pop
adc
cmp
test
jb
cwtl
ds
ds
dec
cld
test
sbb
mov
pop
add
and
shll
mov
adc
dec
sub
lods
out
out
mov
imul
aad
movsb
jmp
das
decl
pop
push
bound
jle
mov
sbb
movsl
or
pop
mov
pushf
movzbl
pop
inc
sbbl
jno
repz
lock
xor
pop
bound
shll
inc
cmc
lcall
xchg
sub
push
or
lret
cwtl
cmpsb
jns
push
enter
pop
test
push
mov
add
negb
push
rolb
ja
nop
xlat
xchg
jmp
loope
add
xor
add
fisttpll
outsl
enter
pusha
mov
mov
lods
jne
mov
and
outsb
dec
and
aad
ret
pop
sub
js
addb
mov
ja
sbb
add
int
and
enter
ljmp
aas
xchg
or
mov
and
jg
cmpsb
mov
movb
cmc
mov
sub
fisttpl
xchg
xchg
scas
and
test
int
or
sub
data16
imul
pop
stc
sub
mov
icebp
cmp
mov
fdivl
and
rcrl
sub
scas
cltd
pop
lds
sbb
bound
das
add
daa
dec
js
imul
add
loopne
int3
dec
out
enter
je
ret
push
push
mov
jae
cld
ret
sub
adc
xchg
mov
inc
fldl
adc
cmp
stc
sub
ljmp
decb
lea
loopne
adc
addr16
mov
sti
cwtl
xor
and
jnp
mov
cli
jns
gs
pop
mulb
test
lret
stos
cli
mov
mov
into
scas
pop
xchg
data16
adc
lds
adc
xchg
insl
negb
xchg
mov
cld
xor
mov
sbb
inc
and
mov
inc
test
fnsave
and
jns
adc
adcl
mov
stos
sub
fiaddl
inc
add
jmp
adc
sbb
jl
and
out
stos
xchg
xchg
ret
fisubl
lods
mov
icebp
push
mov
aas
and
cltd
mov
jecxz
fisttps
repz
lock
call
into
ret
pop
pop
test
adc
cwtl
pop
inc
add
test
mov
scas
mov
xchg
mov
xchg
aam
repz
inc
lcall
cmp
les
lock
pop
movsl
pop
fwait
mov
or
loopne
mov
iret
loope
push
cmp
push
test
fs
cmc
insb
and
push
js
inc
jecxz
call
decb
gs
inc
jns
xchg
arpl
jecxz
xor
jns
clc
adc
out
sahf
lds
loopne
add
icebp
out
cmp
add
aas
imul
leave
movsb
or
or
xor
add
sahf
call
dec
test
push
jno
push
dec
xchg
dec
xor
xchg
mov
lahf
push
inc
out
and
push
bound
pop
mov
push
jg
jmp
popf
popf
sbbb
pop
in
iret
jnp
call
je
xchg
sbb
mov
lock
jg
mov
jae
add
mov
sahf
jecxz
mov
pop
rorl
mov
ljmp
jl
ret
inc
sarl
push
arpl
or
jae
dec
ljmp
add
fimuls
or
xlat
scas
in
cmc
adc
fistpl
mov
push
jae
stos
test
lds
dec
jbe
insl
ja
loope
inc
out
pop
adc
aaa
jp
xchg
mov
or
mov
enter
jnp
xchg
jp
out
push
mov
mov
rcrl
imul
shrb
push
xor
jl
cmp
and
add
cmp
jo
icebp
pop
sti
fcomps
test
adc
push
cwtl
lret
icebp
mov
cmp
loop
rclb
sub
mov
add
in
sub
pop
jne
jne
ja
into
push
arpl
sub
js
inc
imulb
test
pusha
or
mov
sub
sbb
loope
sub
cmp
cmp
call
xchg
fists
xchg
stos
or
in
xchg
push
outsb
ljmp
xor
bound
push
pop
lcall
popa
jmp
jo
mov
sbb
fsubl
mov
cmp
xchg
testl
jae
sub
mov
mov
push
mov
out
mov
mov
xlat
adc
jmp
jno
add
pushf
lret
out
cs
in
pop
arpl
and
cmp
xchg
loopne
insb
arpl
insb
cmpsl
lea
add
or
loop
jns
or
sbb
lock
test
iret
cmp
or
inc
sbb
sbb
pop
shrb
and
cmp
clc
mov
push
mov
sub
mov
jno
dec
mov
fcmovnbe
jmp
mov
in
jo
dec
adc
jle
movsb
fstpl
bound
pop
or
jmp
lods
clc
pusha
dec
cmc
or
pop
jg
mov
lahf
lret
jns
pop
adc
es
scas
loopne
inc
adc
mov
mov
jo
dec
lods
cmp
ljmp
adc
push
cmp
xchg
add
out
mov
decb
out
loope
pushf
aad
mov
lods
repnz
or
mov
cmp
add
fcmovnbe
pop
ret
loopne
add
mov
inc
mov
fmuls
aas
cmp
ret
sbb
pop
inc
scas
in
and
lock
inc
subb
imul
das
or
add
xor
xchg
addr16
mov
mov
jg
add
cmpl
mov
mov
js
adc
orb
jo
iret
lods
dec
inc
pop
xor
and
jmp
scas
jnp
jecxz
and
adc
push
mov
and
mov
adcl
xchg
sub
rcrb
mov
enter
jmp
cltd
std
imul
mov
outsb
xlat
sub
scas
aam
movsb
mov
imul
mov
push
xchg
and
movsb
push
pusha
mov
popa
scas
add
hlt
pushf
inc
adcb
outsb
xchg
pop
push
sbb
pushf
mov
add
out
lret
arpl
mov
or
lahf
dec
test
stos
lcallw
or
loop
dec
lret
aam
ss
cmp
push
sbb
xor
mov
jg
icebp
cltd
and
inc
jmp
pushf
sbb
iret
cmp
cmpsb
mov
in
aad
test
fisttps
dec
lea
jae
xlat
int3
add
mov
jecxz
xchg
mov
xchg
inc
cli
lods
push
jae
and
xor
aas
add
cmp
inc
xor
sub
inc
adc
xlat
mov
jl
push
mov
inc
inc
push
jmp
and
roll
xchg
lock
mov
enter
inc
push
mov
out
xchg
pop
cltd
add
adc
add
push
dec
jns
pop
sahf
sub
mov
mov
adc
push
call
xchg
xor
adc
xor
jp
in
fldcw
scas
push
mov
xor
fnstcw
enter
adc
mov
sub
stos
mov
js
lret
sub
daa
int3
mov
les
lret
xchg
jmp
outsb
inc
in
rclb
push
mov
and
cmp
mov
addb
xor
testl
mov
mov
jp
addl
fisttps
add
and
enter
insb
cmpsl
sub
push
jno
inc
popa
fsubr
push
mov
push
ror
xchg
and
push
in
adc
je
in
xchg
push
add
cmp
insb
or
ss
mov
push
cld
and
dec
jo
cli
sub
cmp
sub
cmpsl
loop
cld
or
cltd
xchg
or
and
rcr
repnz
in
rolb
lock
xchg
data16
shrb
and
inc
xchg
sbb
xor
repz
cltd
add
sti
cmp
add
ds
adc
int
daa
movl
mov
xchg
popa
loop
mov
fcmovnu
loopne
mov
loopne
cmp
pop
xchg
dec
cmpsl
push
adc
sbb
int3
pop
mov
in
cmp
inc
jecxz
mov
cltd
mov
xchg
mov
ljmp
aas
adc
stos
in
sarb
lds
add
enter
testl
pop
lds
cmc
xchg
or
add
sub
jne
xchg
int3
sub
push
mov
sbb
popf
mov
faddl
mov
jns
sbb
pop
and
aaa
xor
jns
dec
cmpsb
cwtl
or
shll
out
cmp
mov
dec
mov
or
or
fdivrs
push
xor
mov
cmp
bound
out
adc
add
mov
fistl
test
push
ss
leave
movsb
stos
cs
call
mov
adc
ror
scas
jo
sub
shrl
and
pop
pop
pop
movq
fsubrp
xor
pop
push
mov
iret
call
hlt
into
pop
cs
mov
mov
icebp
jp
push
fisubl
scas
mov
jae
adc
pop
adc
mov
jnp
jge
testl
add
out
ret
out
les
xchg
mov
cmp
sbb
pop
iret
iret
pop
aaa
fwait
dec
in
cld
or
sbb
add
lcall
sbb
stos
scas
xor
sarb
push
ds
aas
pushf
mov
jl
dec
jbe
mov
mov
cmp
out
xchg
add
dec
lock
jmp
testl
fbstp
fcoml
in
pusha
aaa
and
xor
adc
pop
fidivl
addr16
mov
mov
mov
cmp
repnz
mov
sub
mov
repnz
stos
cmpsl
pop
mov
outsl
sbb
ret
fimuls
xor
outsl
out
inc
adc
fmul
out
and
std
cld
xchg
ret
and
adc
push
sub
xor
mov
mov
jmp
or
std
movsl
inc
rorl
cli
call
dec
aad
js
rorl
int
fstl
mov
pop
lods
rclb
fimull
mov
aam
jmp
jb
insb
lods
sub
add
stos
imul
gs
inc
jne
setbe
pop
mov
adc
mov
movsb
js
sahf
fdivl
adc
lods
out
jmp
pop
add
sbb
leave
mov
xlat
gs
call
and
aam
movsl
lods
mov
sbbb
outsl
mov
and
mov
cwtl
xchg
inc
sbb
push
icebp
and
mov
insl
lods
mov
dec
inc
mov
mov
mov
mov
dec
pop
call
inc
outsb
xor
and
cmp
sti
or
pop
inc
xchg
pusha
push
fdivs
pop
xchg
and
mov
sub
sbb
testb
hlt
sbb
les
aaa
icebp
scas
popa
push
into
test
and
loop
jne
es
in
mov
cmp
push
and
movsb
or
outsb
outsb
and
pusha
es
cmp
mov
lock
push
xchg
and
sub
lock
scas
push
jo
lock
and
lahf
andb
jnp
das
out
or
ljmp
adc
gs
scas
sub
gs
lahf
and
inc
negl
dec
push
cmpsb
mov
push
testb
push
loopne
sbb
inc
mov
push
push
repnz
inc
scas
sbb
and
jmp
or
mov
roll
mov
cmp
in
xchg
add
adc
pop
in
push
push
gs
jns
subl
add
jne
dec
xchg
call
add
dec
adc
js
fisubrl
sub
ficompl
fnstenv
js
fisubs
addr16
and
sub
shrb
mov
sub
jecxz
sub
cmp
insb
test
sbb
aaa
test
push
mov
sub
push
bound
pushf
hlt
or
out
pop
lods
das
xchg
xchg
mov
add
jno
lret
in
test
orl
dec
xchg
mov
cmp
test
ficoms
ljmp
mov
add
dec
dec
xchg
imul
scas
xor
insl
fmull
lret
popa
pusha
mov
mov
pop
lret
pop
rcrb
loope
int3
aaa
inc
loop
and
mov
pop
lcall
in
adc
xor
rcr
std
and
xchg
das
push
loopne
inc
imul
adc
repz
leave
shrl
cltd
cld
out
imul
aas
fdivrs
xchg
adc
adc
js
fisubrl
or
add
cmp
cs
nop
test
pop
mov
pop
lea
imul
jge
repz
loop
add
inc
aas
aad
xchg
js
push
sub
mov
out
sarb
sub
mov
mov
pop
inc
mov
sbbb
pop
lds
push
push
xchg
xchg
in
outsb
add
xor
lds
aam
loopne
cwtl
jo
dec
xadd
mov
mov
popa
shl
cmp
pusha
push
sub
popa
fs
sbb
mov
sbb
push
call
inc
int
inc
into
inc
ret
cwtl
pop
clc
push
iret
out
arpl
mov
jnp
mov
gs
es
aad
inc
push
push
jmp
fdivp
add
subl
inc
mov
and
dec
cmp
jecxz
sub
xchg
lea
lret
ret
shl
add
xchg
sbb
fwait
imul
inc
enter
bound
sti
inc
pop
jl
ljmp
cltd
sbb
mov
leave
int3
pmaddwd
shl
add
inc
data16
mov
inc
fstpt
shll
cli
adc
scas
xor
and
jnp
sbb
xchg
cwtl
xorb
mov
cmp
in
adc
push
mov
pop
and
and
mov
jge
add
ffree
adc
jno
in
dec
in
or
fistpl
mov
mov
jb
ret
mov
sub
adc
cli
lods
rcr
repz
js
inc
cmpb
xchg
push
pop
ret
lcall
adc
adc
jmp
lahf
leave
stos
mov
mov
in
jg
mov
int
gs
in
in
sbb
push
aad
mov
add
jecxz
or
ss
jnp
sbb
mov
mov
lock
dec
stos
es
pop
xchg
mov
clc
call
mov
sub
xor
fsubrl
add
adc
mov
add
and
xchg
cli
mov
inc
test
add
push
jp
fwait
out
pop
add
lcall
push
adc
mov
in
inc
xchg
mov
jle
cmp
cmp
sbb
mov
scas
imul
push
movsb
dec
xor
sbb
pushf
push
imul
jae
and
in
xchg
sub
push
mov
les
outsb
xor
lds
ficoms
repz
mov
in
jne
xchg
lret
jns
enter
std
clc
xchg
mul
xchg
mov
push
fwait
in
xchg
std
data16
fs
iret
imul
loopne
lock
icebp
loop
sbb
loop
in
jmp
push
repz
aam
jl
or
cmpsl
cmc
in
cmpsb
loop
jns
sbb
or
jno
push
sbb
sbb
push
sub
sub
sub
mov
outsl
stos
adc
dec
push
xchg
divl
sahf
out
xlat
fdivrl
fisttpll
loop
leave
sbb
xor
jns
mov
push
stos
push
jmp
inc
je
mov
or
aas
xor
das
test
push
or
mov
cld
sahf
lret
loope
sub
nop
xchg
loopne
jno
pusha
xor
in
std
ficomps
mov
dec
mov
stos
jbe
in
and
push
loop
jp
loope
mov
sub
push
out
iret
mov
xor
adc
lods
pushf
out
jmp
iret
ret
stc
inc
fdivr
idivl
pushf
fsubs
stc
add
pop
sarb
pushl
std
phaddw
jne
fs
sarb
sbb
mov
cmp
ret
fistpll
cmpb
sub
sbb
add
test
rorl
sarb
lock
mov
cmp
mov
jg
sahf
xor
idivl
dec
std
xchg
loopne
fdivrs
cs
xor
call
jno
popf
push
jne
mov
and
test
push
cmp
je
or
mov
movsl
ficomps
into
xchg
arpl
jnp
dec
push
adc
push
je
fstpt
jle
orl
bound
repz
shlb
outsl
out
jecxz
or
xchg
push
push
nop
push
test
mov
andb
out
push
aaa
push
mov
gs
fiaddl
mov
or
add
sti
cwtl
pusha
cmpsb
pusha
mov
int3
ret
add
sub
xchg
jl
fs
xor
les
dec
cltd
lret
push
loop
xchg
mov
loop
pop
sbb
dec
dec
or
adc
add
fistps
hlt
lea
adc
sbb
push
mov
sub
cld
cmc
add
mull
mov
jle
add
notb
cwtl
test
inc
ljmp
cmp
rcll
dec
push
dec
push
cmp
or
xchg
gs
into
andb
shr
pusha
jge
clc
mov
sti
fsubs
jg
sahf
mov
cmp
or
pop
insl
cmpl
push
aad
and
mov
push
repnz
pop
movb
xor
shlb
mov
mov
rcll
loop
xchg
adc
pop
dec
out
daa
negb
loopne
outsl
popf
jecxz
repz
push
fwait
scas
or
ret
inc
or
std
icebp
jbe
mov
push
movsb
sbb
icebp
lret
lahf
les
jg
cs
imul
dec
repnz
fldl
hlt
enter
dec
rcrl
shl
sub
inc
mov
mov
jl
jl
aas
jo
cwtl
outsb
mov
enter
dec
cld
popf
xchg
mov
sahf
and
sbb
lea
das
decl
xor
addb
fnsave
out
icebp
pop
out
mov
mov
lahf
lock
xchg
idivl
mov
je
mov
jmp
adc
in
lods
movl
sbb
fmull
ja
rcr
and
fsubs
adc
jo
sbb
loopne
xor
sub
sbb
stos
xchg
call
lea
jb
add
test
movsb
lds
stc
push
adc
icebp
xor
fsubs
inc
sahf
repnz
xor
mov
mov
jbe
ja
out
inc
mov
inc
dec
pop
int3
fidivl
pushf
sbb
daa
clc
push
es
mov
inc
push
rcr
je
lea
leave
jmp
jl
incb
mov
sbb
les
cli
dec
out
xor
inc
out
mov
dec
mov
jns
jge
dec
sub
mov
sbb
sbbb
adc
pop
add
lock
jnp
pop
dec
mov
jmp
sbb
and
jno
aad
ret
add
xchg
xchg
movsb
cwtl
pop
pop
pop
das
ja
adc
jne
aaa
or
lret
call
and
stc
add
dec
push
jb
in
jge
mov
shrb
out
sti
imull
sahf
fwait
jl
aad
mov
repz
push
xchg
push
mov
push
lea
xlat
mov
insb
stc
mov
insl
stos
sbb
in
pushf
dec
inc
fbstp
lds
mov
sbb
sub
in
scas
or
mov
mov
pop
xor
jo
and
scas
inc
add
xchg
insb
test
jge
sti
lret
cmp
es
push
je
scas
pop
loopne
cmp
jae
arpl
push
popf
ret
icebp
and
xchg
sub
mov
pop
add
in
mov
cmc
movsb
fidivs
mov
inc
out
cs
stc
ds
xchg
mov
cmp
lret
scas
sbb
ds
mov
andl
adc
idivb
inc
add
jmp
ss
mov
sti
sub
pop
insb
clc
jp
mov
lret
insl
pop
aas
jne
rcrb
dec
sub
or
cmpsl
leave
lock
xor
sbb
scas
mov
xlat
scas
in
adcl
jmp
mov
mov
or
and
sub
test
loop
out
add
in
in
push
sahf
ret
enter
cwtl
lcall
inc
jmp
xor
mov
mov
call
jg
pushf
lret
cmp
pusha
dec
in
pushw
pxor
or
inc
and
gs
or
icebp
cs
pop
add
adc
mov
lods
or
push
je
jle
mov
add
ja
ljmp
outsb
jmp
xlat
mov
std
mov
sub
inc
aas
sub
out
test
add
push
roll
dec
mov
and
push
mov
in
out
sbb
push
dec
push
and
int3
fs
je
xchg
mov
ljmp
mov
jmp
sub
mov
cmp
or
stc
add
addb
das
xchg
aam
push
mov
cmp
xor
add
or
mov
lcall
or
xchg
mov
dec
jae
mov
addr16
pop
lcall
mov
sbb
cmp
imul
push
cld
js
sti
bswap
adc
in
fsubrl
leave
arpl
dec
jp
test
inc
push
insb
pop
adc
in
sbb
outsl
clc
divl
test
mov
and
cwtl
inc
xchg
or
dec
inc
adc
lret
je
imul
aad
lahf
outsb
jne
lods
jbe
jge
mov
std
aaa
leave
inc
xor
scas
insl
fimuls
push
xchg
jns
aam
cmp
lcall
pop
sub
rolb
rorl
mov
xchg
inc
out
xor
and
daa
outsl
lods
pop
fcompl
or
jae
push
sub
sub
pop
in
or
dec
cld
cwtl
insb
push
addl
jno
or
pusha
ljmp
jge
jne
lret
mov
push
mov
subl
adc
mov
or
push
ret
xor
jns
movsb
mov
adc
push
mov
sub
hlt
mov
mov
jle
sahf
pop
arpl
or
pop
scas
mov
mov
mov
pop
push
popa
lret
push
pop
sbb
lods
xchg
outsb
fcompl
dec
insl
sbb
adc
lret
aaa
aam
cmc
adc
push
addr16
xchg
mov
push
sbb
ds
mov
lahf
dec
sti
mov
pop
sahf
ja
imull
sbb
ret
ret
aaa
fcomps
dec
divl
in
test
roll
sarl
dec
sbb
jle
or
cltd
xor
cmp
aad
js
aaa
adc
dec
dec
or
ret
aad
cwtl
dec
pop
ret
sub
mov
xchg
insl
arpl
and
xchg
mov
in
inc
arpl
pop
jmp
dec
test
loopne
push
testl
clc
insb
mov
and
cwtl
gs
mov
test
stos
js
lahf
daa
in
dec
js
outsl
inc
std
scas
out
add
push
sbb
clc
adc
inc
xchg
xchg
sbb
sub
jge
fcomps
test
sub
hlt
jb
xor
iret
lret
jg
cmp
iret
add
and
fadd
iret
les
lea
aaa
fcmove
or
jns
addr16
sub
data16
mov
and
pop
or
inc
xchg
loop
jge
mov
ds
in
outsb
in
leave
addr16
xchg
call
out
sub
or
adc
sbb
mov
or
aad
mov
cmp
xor
and
lea
jmp
fucomip
and
dec
cld
inc
arpl
test
xchg
ja
add
pop
rcr
inc
push
cwtl
in
push
aam
or
and
push
lret
adc
add
and
mov
and
imul
mov
jb
imul
rolb
xchg
sti
push
gs
jne
xor
cmp
arpl
int
xchg
lcall
aad
cmp
xchg
push
sbb
inc
pop
cmpsb
hlt
xor
aas
push
pushl
mov
fcomps
fldl
daa
mov
lods
and
repz
push
sbb
dec
sub
les
and
clc
leave
inc
dec
cmpsl
cmpsl
mov
cltd
fildll
lea
aaa
xchg
pop
xlat
mov
neg
pop
push
fldl
push
cmc
rcll
jl
mov
inc
xchg
and
jns
dec
outsb
cmp
fldenv
xchg
lcall
mov
or
fmuls
jae
mov
inc
aas
mov
gs
aaa
dec
stos
stos
xchg
pop
push
mov
pop
push
mov
inc
out
nop
or
dec
mov
andb
add
aaa
inc
aaa
data16
scas
sar
sbb
cmp
fidivrs
xor
mov
sub
jnp
sbb
pop
sub
inc
out
mov
jecxz
lcall
mov
mov
jne
jo
mov
cs
mov
sbbb
sub
pop
push
sub
out
les
inc
pop
inc
dec
in
jp
mov
inc
mov
sti
in
pop
mov
push
push
inc
push
clc
mov
in
dec
pop
sbb
push
rolb
aad
dec
cmp
xchg
jle
sbb
rolb
test
add
das
les
loopne
add
arpl
stc
loope
ret
and
cmpsl
mov
add
data16
ljmp
push
shrb
ja
shrb
idivl
push
daa
push
fldcw
call
fidivl
lahf
hlt
jp
adc
outsb
push
push
mov
addb
cld
adc
mov
cmpsl
push
inc
faddl
dec
lods
inc
inc
mov
sub
or
or
leave
lcall
aam
pop
sbb
daa
jae
jb
sahf
mov
push
add
cmpsl
js
jg
imul
imul
inc
fsub
shll
cwtl
ja
in
pop
movsl
aad
xchg
gs
dec
aad
aaa
sub
jp
sbb
mov
mov
xor
sti
pushf
push
test
aad
and
xchg
notl
addl
insb
aas
jg
sub
into
insl
aas
pop
stos
cli
pop
and
adc
in
pop
push
arpl
psubb
push
repnz
test
lods
xor
int
pop
jnp
in
lcall
sbb
scas
dec
pop
mov
test
out
push
lret
mov
push
inc
xor
sbb
movsl
push
sbb
fcomip
scas
push
cltd
outsb
push
rcrl
shll
push
inc
push
sbb
scas
in
test
add
out
pop
inc
sub
shrb
mov
cmpsb
sbb
pushf
cmp
pop
movsb
movsb
cmp
popf
outsb
in
push
ret
test
cmpsl
fstl
std
clc
xchg
scas
and
or
push
or
add
adc
xchg
pop
jmp
je
dec
inc
jae
cmpsl
mov
mov
xor
frstor
into
pop
mov
test
mov
jae
cmp
push
shrb
xchg
rcrl
inc
cmp
mov
jp
popf
jge
repz
or
lret
int
pop
jb
jl
test
mov
lock
pop
jnp
lods
out
insl
or
pop
xor
xchg
nop
xchg
cli
mov
leave
insl
add
mov
outsb
ss
push
out
rol
adc
jb
rorl
mov
cmp
pushf
pusha
mov
xchg
cmp
cwtl
int3
mov
fmull
mov
mov
pop
lds
pop
cmp
inc
xor
xor
shll
movsb
and
nop
inc
xchg
mov
aad
and
in
pop
lea
push
sbb
iret
into
stos
cmp
pop
adc
inc
xstore-rng
cmpsl
fsubr
mov
lock
sbb
cli
pop
or
mov
or
xchg
das
jbe
dec
or
dec
sbb
sbb
and
int3
add
or
pop
icebp
sub
clc
mov
shll
cmp
aaa
int3
or
out
xchg
rol
scas
mov
fimull
sbb
push
mov
cmp
adc
iret
jbe
lret
fdivs
stos
pop
shlb
pop
mov
loopne
into
adc
cmp
xlat
dec
out
sti
add
pop
lods
sub
or
stc
rclb
sub
data16
xchg
sbb
outsl
test
cmp
out
leave
and
and
pop
hlt
xchg
push
push
cmp
or
and
jnp
pop
in
push
test
mov
cmp
or
repz
push
xor
or
dec
mov
gs
mov
je
in
mov
mov
mov
sub
daa
add
dec
adcl
lea
push
fiadds
iret
repnz
int3
push
mov
bound
jecxz
ja
ja
int
clc
inc
js
outsb
dec
stc
loope
mov
add
stos
scas
js
adc
stc
scas
push
add
arpl
je
xchg
mov
leave
loopne
mov
loope
or
cmp
mov
stc
mov
bound
fcmovnb
lock
pop
in
in
outsl
iret
xor
xchg
cmp
jg
insl
xor
pop
iret
fcoml
or
dec
ljmp
or
xor
jmp
push
push
pop
inc
push
add
data16
mov
pop
mov
pop
sbb
scas
fisttpl
push
and
adc
leave
jae
jne
jecxz
movsl
push
stc
pop
mov
sbb
mov
out
into
jno
ficompl
inc
mov
or
loop
push
roll
insb
sub
sub
pop
adc
jae
aad
pop
sub
pop
in
ds
jle
lcall
sarb
sbb
into
lds
cld
mov
pop
adc
in
cmovle
or
or
mov
ffree
inc
pop
andl
cmp
sti
inc
test
hlt
xchg
out
popa
jge
xrelease
jo
scas
in
cmp
out
or
sbb
add
fcompl
mov
loope
fsubl
movsl
cli
add
cmp
repz
mov
push
sbb
sbb
movnti
pop
sti
sbb
or
jne
mov
fbstp
loop
jne
jmp
push
hlt
xlat
sbb
push
cld
test
xchg
adc
adc
sbb
jmp
pop
adc
pop
xor
adc
fwait
jnp
mov
fstps
fwait
jne
ja
dec
inc
scas
push
pop
sbb
aaa
mov
sub
inc
cmp
push
jno
jns
rcrb
cmpsb
jae
out
test
jge
repz
mov
jg
lods
sbb
sub
dec
mov
decl
sbb
mov
cltd
dec
inc
fnstsw
lods
xchg
pop
dec
sbb
add
das
gs
sub
mov
push
scas
xor
xchg
sub
loope
cmp
or
out
in
push
icebp
lock
incl
or
into
daa
jno
xchg
mov
cmp
dec
mov
paddw
loope
inc
xchg
cmp
in
fwait
js
sti
and
mov
or
sub
jg
ret
push
mov
aas
pop
sbb
sbb
in
imul
push
flds
andl
sti
xor
cld
in
insb
push
pop
into
jle
lret
cld
lock
scas
sbb
repz
adc
pushw
xor
mov
cmp
out
in
mov
fistpl
nop
pop
nop
cli
loopne
cmp
and
push
dec
das
pop
scas
insl
in
push
outsl
aaa
ret
push
pusha
lret
jecxz
pop
ds
in
mov
pop
adc
sahf
sub
shlb
push
out
mov
mov
add
stc
push
stos
push
xor
arpl
arpl
popa
movsb
sub
cmp
aas
or
and
imul
js
iret
clc
pop
mov
ss
adc
clc
mov
pavgb
imul
mov
push
stc
pop
dec
imul
push
cli
xor
jno
add
aaa
jecxz
sbb
ret
sbb
icebp
addr16
sub
dec
shrl
insl
loopne
jmp
pop
pop
add
sbb
sub
outsl
mov
pinsrw
jb
shlb
xchg
loope
and
out
mov
insl
and
inc
mov
mov
test
add
xor
cmp
ja
xor
sbb
cmc
sub
push
xor
jl
adc
cltd
inc
cmp
push
or
pushf
leave
insb
addr16
or
push
xchg
push
out
mov
mov
inc
pop
cmc
ds
sub
mov
je
outsb
pop
mov
and
jp
adc
idivl
jns
jae
xchg
lods
push
ret
push
jno
pop
push
into
xchg
jge
dec
or
mov
or
mov
icebp
loopne
fwait
adc
adc
shll
sub
xchg
dec
clc
pop
sti
xchg
nop
or
popa
mov
pop
test
pop
stos
or
loope
into
dec
dec
add
cmp
sar
out
pop
cmp
mov
mov
xchg
rol
xor
shl
dec
stos
jo
push
jecxz
addr16
imul
xor
lret
cmpsl
out
lret
adc
pop
mulb
xlat
lds
xor
add
aaa
xor
rcl
mov
nop
fcmovu
fldenv
pop
cmpsl
shlb
dec
pop
les
xor
into
rclb
sbb
pushf
xchg
or
inc
cmc
popf
sub
jne
lods
pop
jns
movsb
mov
add
js
adc
push
add
std
xchg
out
push
or
jp
pusha
mov
pushf
lret
lea
jno
daa
xchg
xchg
adc
cmpsl
sahf
mov
pop
cmp
push
mov
push
dec
cmp
xchg
pop
cmpsb
jge
inc
inc
sub
jno
and
adcb
icebp
and
iret
sub
jmp
pop
inc
aas
cmp
jno
mov
jp
int
syscall
jmp
sbb
mov
add
lret
xchg
sti
and
push
add
cmp
inc
mov
mov
lock
stos
dec
out
lret
cmpl
aam
xchg
pusha
leave
std
push
cs
loopne
rorb
xchg
xchg
dec
mov
les
jmp
lods
cltd
in
sbb
xchg
les
sub
or
setnp
enter
and
pop
mov
jns
outsl
jnp
xchg
cltd
pusha
dec
adc
mov
mov
push
push
sbb
lcall
daa
into
movsl
iret
push
xchg
aam
mov
xchg
sbb
adc
xor
or
rcrb
outsl
ja
adc
lahf
mov
push
popa
inc
mov
push
test
and
inc
cmpl
sbb
clc
cwtl
mov
rclb
cltd
les
add
in
in
add
subps
xor
test
mov
pop
push
cmp
loopne
popa
out
in
cmp
out
sbb
push
dec
pop
loope
int3
in
ljmp
pusha
popf
popa
fs
cmpsl
lods
push
jbe
imul
inc
adc
jecxz
mov
incb
cld
mov
push
adc
pop
mov
xor
shll
into
loope
fnsave
ljmp
xor
mov
lcall
jbe
xchg
mov
ss
imul
lret
adc
push
popa
adc
popf
cmp
ljmp
or
mov
jge
push
and
push
inc
call
add
mov
inc
mov
popa
cmp
ja
jae
movb
inc
mov
push
fldcw
dec
cmp
jle
scas
dec
sti
aad
jmp
lds
mov
pop
sti
jo
add
jbe
mov
test
push
jne
aaa
pop
mov
movsb
dec
xchg
loop
outsl
outsb
jae
test
pop
add
sub
pop
ja
inc
je
call
lods
ss
cmpsl
dec
lock
inc
xchg
jmp
xor
lcall
out
cli
test
or
or
ret
dec
adc
xchg
mov
fimuls
and
movsl
lock
popf
mov
push
mov
lahf
sbb
vpmacswd
add
test
pop
mov
fsincos
sti
cmc
cmc
paddb
bound
pop
loope
popa
jns
arpl
loope
push
adc
hlt
gs
cmp
mov
jmp
repz
cmpsb
or
sbb
cmpsl
push
push
ja
xchg
lcall
cwtl
mov
in
or
inc
sub
xor
mov
lods
sti
dec
lret
sub
sbb
js
and
jb
enter
mov
pop
data16
pushf
push
cmpsl
pop
cs
into
clc
xchg
mov
jo
mov
mov
clc
jo
xchg
cltd
mov
jecxz
cmp
inc
mov
mov
shll
inc
lods
test
cmpsb
jle
cmc
cli
out
jo
int3
adc
incb
or
jne
push
leave
je
or
jb
sarb
dec
jbe
pop
sarb
pop
cmc
mov
sahf
ds
fsubp
testl
add
loope
test
in
sub
and
loop
jmp
popa
sub
jmp
sbb
es
imul
or
outsb
sbb
cmpsl
cwtl
inc
push
shrl
add
sbb
push
mov
push
or
jnp
arpl
stos
cltd
aaa
and
xchg
pop
mov
mov
daa
jns
pop
lcall
out
jns
lcall
pop
jae
cmpb
bound
test
mov
push
pop
push
push
imul
rcll
xor
leave
adc
xchg
xchg
add
pop
popl
xchg
mulb
popa
pop
xor
adc
mov
frstor
push
xor
mov
jb
add
sub
adc
sbb
pop
int3
insb
lea
outsb
ljmp
mov
adc
sbb
ret
mov
dec
stos
rorb
mov
inc
mov
ds
xor
shlb
call
push
icebp
inc
andl
xor
out
and
mov
add
cmc
icebp
sbb
dec
pop
fadd
pop
cld
pop
inc
rcrb
ds
xchg
test
in
repnz
pop
sub
scas
adc
insl
mov
mov
pop
mov
popf
jae
inc
sbb
cmp
xor
out
sub
or
add
out
int
adc
push
popa
mov
or
imul
aam
jnp
int
lods
xor
jmp
add
mov
cmp
xor
mov
ljmp
and
and
sbb
lods
cmp
out
fadds
pushf
imul
out
sub
repz
xor
xchg
outsb
add
or
pop
int
mov
stos
in
ret
jae
adc
sti
lock
dec
xlat
xchg
scas
jle
fs
sti
std
test
push
outsb
out
rcl
jge
lcall
loope
add
sbb
jg
js
lret
decb
das
mov
sub
jno
imul
fbld
rorb
lods
lcall
push
inc
test
inc
es
cs
sub
in
inc
xchg
push
or
insb
lods
and
dec
ja
mov
jns
pop
push
add
lock
js
dec
ja
pop
jg
mov
dec
and
fldenv
daa
sbb
sub
sub
test
mov
add
push
fcompl
push
aaa
sub
mov
stos
outsb
mov
adc
mov
pop
add
xchg
pop
push
test
je
sbb
jge
mov
popf
and
xor
jl
scas
sbb
mov
cmp
or
xchg
cmpsb
adcl
and
mov
bound
scas
sbb
pop
out
jge
mov
pop
fsubrs
jno
xor
dec
pop
inc
push
cmpsb
pop
vpavgw
ror
and
in
test
push
outsl
inc
xor
js,pt
int
pop
jmp
push
xchg
insl
push
add
dec
fwait
rcrl
in
aas
mov
mov
cmp
out
popf
je
mov
pop
jg
push
repz
pop
push
pop
aad
fcmovnb
out
out
push
sbb
test
jge
data16
pop
insb
mov
shl
or
insb
out
clc
sbb
mov
jnp
jbe
repnz
shr
ret
mov
sub
iret
aas
fbld
mov
clc
iret
dec
gs
xchg
data16
and
rcrb
sbb
mov
clc
or
cmp
push
ret
mov
scas
orb
cmp
jne
repz
sbb
or
cwtl
pop
jmp
fwait
sub
test
fists
push
mov
mov
es
fdivrs
jle
push
dec
js
lret
test
pop
jo
dec
repnz
xor
add
pop
test
ja
data16
jp
cmp
ret
dec
lods
scas
sub
sarb
insl
lahf
push
shl
dec
adc
lahf
outsl
bound
push
push
mov
loop
aaa
sub
jg
clc
push
and
xor
mov
lahf
das
xchg
enter
shl
push
mov
pusha
xor
es
dec
xchg
aam
movsl
aad
xchg
fldenv
push
inc
mov
dec
adc
or
daa
jg
sarb
mov
in
adc
jae
mov
adc
push
negb
addr16
lods
mov
ret
test
in
add
fcomps
clc
mov
insl
mov
insl
pop
dec
lahf
mov
jle
in
or
mov
lret
aas
or
inc
push
mov
das
jg
data16
imul
jle
test
xor
scas
stc
mov
push
adc
dec
lods
jb
das
jne
repnz
nop
out
pop
cmovbe
ja
out
inc
pop
shlb
imul
mov
sbb
fimull
loopne
mov
cwtl
popa
pop
pop
imull
mov
push
mov
cmpl
in
psrld
lds
fisttps
stc
inc
xor
cld
cli
adc
mulb
rol
sti
push
fmul
mov
cmpl
aam
or
not
cwtl
adc
jae
cli
in
xchg
push
and
pop
mov
stc
clc
pop
icebp
mov
rcl
inc
mov
repnz
sbb
mov
pxor
mull
mov
add
cmovo
es
sub
std
jne
mov
adc
or
ja
data16
jnp
mov
je
int
pusha
push
pop
scas
dec
dec
dec
das
jmp
add
inc
iret
jg
xor
cmpsb
and
rorb
push
push
lahf
cmp
cmp
xchg
rcrb
adc
inc
push
andb
push
mov
pop
mov
mov
into
loope
add
lock
push
push
push
andb
jg
sbb
cmp
ljmp
call
jecxz
in
cwtl
mov
icebp
stos
add
jg
xor
lock
fisubrs
outsb
xchg
cmp
sub
and
and
push
es
flds
repnz
shl
cmc
pop
cmp
enter
mov
sub
dec
sbb
setle
cmp
das
aaa
fnstcw
pop
lock
push
aas
sub
scas
outsb
test
ss
inc
fnstenv
movsb
fcom
outsl
movsb
push
pop
jg
adc
sbb
sarl
push
frstor
bound
mov
mov
enter
lahf
mov
or
xchg
xchg
mov
in
cmpsb
test
daa
sub
out
pushf
stos
lods
xchg
pusha
or
or
add
sub
hlt
or
lret
mov
ljmp
xor
mov
push
test
nop
movsb
pop
sbb
jbe
enter
cmpsb
sub
mov
sub
mov
out
lret
sbb
xor
test
ss
adc
adc
lock
sub
xor
mov
scas
push
into
add
and
mov
mov
inc
fisubrs
mov
js
and
cmpl
into
test
cmpsb
push
js
push
aam
add
jecxz
imul
pushf
mov
and
insl
out
and
ds
cmpl
mov
popa
mov
loope
ds
lcall
push
lcall
ja
adc
pmulhuw
insl
ficomps
dec
mov
mov
jno
lahf
jne
or
movsl
cli
ja
out
insb
mov
adc
movsb
sub
cmp
jge
push
xchg
sbb
lds
mov
les
mov
mov
dec
mov
in
fcoml
inc
xchg
sti
pop
push
xor
jl
sbb
push
test
add
jle
icebp
ret
test
jmp
push
pop
fucomip
and
xchg
or
sub
and
xor
inc
dec
push
std
mov
loopne
loopne
jle
aam
sbb
test
sub
cmc
push
dec
add
icebp
js
fistpl
push
xchg
pop
and
jle
add
fisubrl
cmc
gs
outsl
bound
xor
fcmovnb
add
ja
sahf
jb
icebp
xlat
imul
sti
jmp
xor
lahf
mov
mov
daa
pop
xchg
jno
jno
js
lret
lahf
dec
push
jl
mov
lret
adc
xor
jp
cmc
les
sarl
dec
mov
sarb
cs
push
jne
jle
mov
sub
adc
inc
insl
xor
sub
clc
mov
lret
inc
sub
mov
pusha
subb
dec
adc
decb
popl
xchg
in
mov
sahf
jmp
fs
jnp
sub
push
inc
call
xchg
int3
adc
push
aaa
cmp
and
inc
iret
gs
movsl
subl
inc
ja
movsl
fwait
std
ret
dec
mov
inc
mov
pop
mov
loopne
xor
imul
mov
push
xorl
rorb
insl
jbe
imul
pop
dec
jp
xor
hlt
fidivrs
cmp
out
sbb
push
push
cmovp
mov
shlb
out
adc
pushf
push
mov
dec
jl
arpl
hlt
addl
lods
mov
dec
or
push
pop
popf
sub
in
fsubrl
xor
adc
and
inc
mov
pop
mov
lcall
scas
out
jne
push
out
popf
adc
lods
cmpsl
loopne
dec
push
mov
add
cltd
movsb
aam
shrl
shrb
lods
in
shr
inc
mov
fwait
das
test
daa
xchg
ss
pop
mov
jmp
arpl
shl
inc
stos
popf
adc
dec
cmc
sahf
push
dec
xchg
fwait
dec
pop
fsubrp
into
cmp
push
lahf
imul
lods
pop
push
lds
mov
jo
adc
xlat
hlt
ja
flds
pusha
pushf
xchg
aas
shrl
bound
ffree
push
cmc
rolb
jns
push
data16
les
jg
adc
jge
popa
sub
iret
sub
hlt
jmp
sub
lret
lods
mov
fisubrs
addr16
adc
push
cmp
insb
add
xor
iret
fcoms
ret
push
inc
xor
aas
and
call
es
inc
mov
mov
sub
imul
mov
push
mov
push
stos
pop
int3
mov
ret
adc
or
xor
mov
das
or
idivb
loope
std
aas
xchg
jb
push
add
lock
das
je
mov
sbb
sti
push
sbb
mov
dec
dec
sbb
stos
or
jnp
dec
cmpsl
cmc
add
mov
mov
add
lea
clc
cli
testb
std
ljmp
int3
cmp
movsl
test
mov
xchg
movd
cs
pop
or
popf
jo
cmc
push
adc
leave
ret
jb
inc
sub
sbb
fists
xchg
ljmp
pop
popa
push
dec
dec
add
shrl
dec
push
add
sbb
iret
dec
pusha
adc
lret
sbb
jmp
int3
dec
fwait
lods
adc
movsl
lock
negb
shrb
mov
pop
shll
jne
jge
outsb
add
sarl
dec
push
adc
pop
push
outsb
dec
push
test
call
aas
xor
mov
shll
pop
dec
jne
jb
rep
cmp
xor
cmc
lods
mov
les
in
sbb
and
xor
push
ficoms
push
sub
jno
or
pop
xor
xor
and
test
jmp
aad
and
xchg
out
push
stos
sbbl
cmpsb
cmp
ljmp
insb
push
push
rcrl
outsl
outsb
popf
imul
xchg
test
inc
adc
cmc
lods
int
andl
cmp
xor
popa
pop
in
mov
addr16
jecxz
pop
add
stc
movl
cmp
mov
int3
mov
xchg
lea
adc
jb
jne
mov
cmpsl
dec
sahf
mov
add
loopne
add
out
xor
sub
push
fs
lcall
punpckhbw
clc
lods
jmp
arpl
lea
fisubrl
iret
and
xchg
ret
imul
fyl2x
lret
jp
or
sbbl
stos
add
xchg
push
cmc
cmp
jo
sub
fidivrs
pop
inc
dec
es
xchg
insb
test
shll
jne
pop
cltd
pusha
fnstenv
push
jno
mov
pop
inc
lods
out
sbb
aam
add
into
out
jg
subb
lahf
sub
fwait
arpl
add
lock
xchg
xchg
lods
shrb
mull
and
push
push
push
mov
lods
adc
sbb
lds
ret
cmp
mov
in
fdivs
cmp
mov
stos
idiv
movb
mov
pushf
sub
xchg
cmpb
stc
cmpsb
xor
lahf
push
xor
popa
dec
out
add
call
pop
sub
dec
incl
outsl
clc
imul
jle
xor
and
sub
test
lock
jns
xlat
pop
fdivs
out
xchg
xor
xor
sub
insl
dec
xchg
jl
in
mov
push
aas
clc
lret
bound
add
adcl
jnp
sti
sub
add
enter
imul
inc
adc
cmp
cmp
pusha
mov
and
push
ss
movsl
pop
pop
mov
outsl
lret
jg
pushf
fs
sahf
nop
jecxz
xor
movl
inc
pop
xchg
sbb
cmp
pop
insl
data16
mov
movsl
pushf
mov
pop
inc
add
jno
incb
or
sbb
or
cli
push
mov
scas
int3
jmp
dec
aam
or
aam
fadds
and
and
ljmpw
aaa
repnz
adc
push
ret
xor
fldcw
lds
push
inc
aam
pop
sarb
sbb
scas
js
daa
cld
mov
pop
cmc
push
pop
xlat
int3
xor
push
xor
sti
and
fnstenv
das
mov
push
jecxz
dec
int3
rorb
insb
je
dec
iret
out
jnp
cmp
or
repnz
adc
mov
stos
push
je
or
inc
jno
jnp
push
gs
sub
or
mov
adc
xchg
pushf
rcl
aam
xor
pushf
cmc
mov
inc
sub
sti
icebp
add
xchg
xchg
xchg
cmp
dec
xor
mov
mov
mov
cmp
loope
mov
jb
xchg
pop
mov
daa
mov
sbb
cltd
loope
sbb
imul
jmp
pop
cmp
pusha
lods
sbb
lahf
push
jne
push
movsb
mov
test
sbb
mov
lea
push
mov
mov
inc
jns
pushf
inc
push
push
cmp
jae
jmp
pushf
notb
arpl
mov
sub
fld
sbb
fldl
cmp
cmpsb
push
sub
inc
xor
or
dec
xor
xor
stc
or
lods
xchg
mov
inc
push
movsb
pop
popf
mov
and
hlt
cli
mov
rorb
movsb
ss
or
mov
xor
adc
rcr
das
dec
xchg
jp
dec
loope
lcall
mov
popf
push
scas
xchg
xchg
hlt
inc
add
push
add
ja
jo
cli
mov
and
in
nop
pop
jno
cmp
subb
mov
mov
push
les
ret
inc
arpl
mov
lock
and
sbb
ds
xor
push
inc
testl
dec
cwtl
cwtl
lea
dec
icebp
fmull
xchg
push
push
das
test
xchg
fisttps
out
stc
mov
sub
mov
iret
test
sub
fsubl
ss
mov
push
fcompl
adc
outsl
and
cld
sub
mov
loop
sbb
popf
fs
mov
sub
into
xor
add
push
repz
in
xchg
or
add
cmp
sbb
subl
in
jmp
test
pop
or
lcall
add
and
sub
mov
xor
in
jmp
outsl
outsl
pop
daa
or
test
testb
push
mov
dec
icebp
jo
add
push
adc
frstor
mov
int3
lahf
sbb
aaa
inc
inc
fs
pop
daa
push
aad
sti
push
sub
mov
cmp
dec
adc
test
into
mov
dec
sbb
jae
lret
popf
test
mov
pop
insb
add
pop
dec
rcrl
pop
test
lock
push
in
mov
rcr
xchg
jne
and
xchg
outsl
pop
fcoml
push
loope
into
cmp
lret
cmpsb
jl
mov
jmp
in
fwait
imul
fcomi
mov
orb
fbstp
scas
cmp
loopne
adc
enter
lcall
mov
pop
call
rorl
adc
mov
push
push
jae
mov
push
mov
push
cmp
and
lahf
cwtl
inc
or
out
adc
cmp
fs
pop
bound
dec
out
sbb
insb
pop
cs
enter
aas
xchg
aas
cmp
push
inc
mov
adc
daa
pop
sub
add
int3
dec
cmpl
fcomp
hlt
inc
inc
fcmovu
gs
rorb
scas
jae
jmp
xlat
xlat
aaa
inc
cltd
mov
popa
test
mov
cwtl
pop
vfmadd132ps
pop
cmp
sub
mov
and
mov
test
iret
shrl
add
push
inc
push
mov
mov
sub
cmc
lock
jle
mov
or
mov
push
cwtl
repnz
ja
sbbb
inc
lret
push
jmp
fsubl
pop
fcoml
pop
arpl
adc
add
pop
scas
mov
sbb
dec
mov
xchg
out
sbb
cmc
inc
xchg
mov
jl
hlt
jecxz
jle
shrb
xchg
ss
xlat
sbb
inc
and
in
mov
sarb
out
lahf
ljmp
mov
inc
jne
sbbl
xchg
mov
pushl
popf
pusha
out
lock
pop
sbb
out
mov
pop
ret
xchg
pop
jo
sbb
shlb
cmp
adc
int
ljmp
push
shrl
lret
int
lock
subl
dec
xor
xchg
pop
aaa
dec
movsb
jmp
xor
mov
adc
push
outsl
xchg
lahf
sbb
js
lea
aad
leave
pop
icebp
push
popa
jge
hlt
and
dec
enter
mov
push
push
mov
jne
loop
lahf
mov
xchg
mov
xchg
mov
pop
or
mov
jae
sub
pop
push
push
in
jnp
es
or
xchg
add
call
cmp
pop
test
push
adc
inc
dec
into
add
xchg
daa
nop
dec
cmp
mov
mov
insb
inc
fcoms
sarb
push
mov
out
into
sahf
je
aad
pop
fcomp
fwait
popa
dec
imul
or
std
rorb
adc
pop
out
subl
test
je
mov
sbb
xchg
fsubrs
or
je
cwtl
mov
cld
outsl
daa
dec
adc
js
test
jae
mov
imull
scas
sbb
add
fildll
ss
mov
hlt
cmp
mov
jae
push
dec
pop
iret
pop
lock
dec
or
xor
push
jp
js
mov
pop
add
pop
push
dec
sub
adc
cli
call
repnz
jmp
inc
in
xor
dec
rcrl
or
pop
subl
cwtl
cmp
push
filds
lcall
add
push
das
inc
inc
mov
sbb
sbb
push
mov
pop
sbb
out
arpl
and
or
adc
sub
mov
xchg
lods
mov
mov
leave
aaa
stos
mov
rolb
imul
ds
mov
gs
jno
inc
xor
sahf
inc
fs
pop
out
scas
lock
cmp
jmp
adc
sbbb
jns
call
fxch
jnp
sahf
or
pop
fsts
cli
xchg
repz
paddsw
pop
sbb
xor
xchg
jae
pop
push
test
mov
xor
cmp
add
pop
in
or
loop
fs
imul
dec
inc
inc
les
sbb
pop
mov
roll
xchg
jbe
add
rclb
mov
call
insb
arpl
je
das
push
pop
xchg
cmpsb
imul
jnp
mov
push
arpl
cmp
adc
lods
add
jp
xchg
sbb
push
int
push
sbbl
or
and
cmc
mov
std
mov
fdivp
mov
sub
mov
bound
pop
mov
push
imul
lret
imul
clc
ficoms
inc
xor
inc
scas
pop
sbb
cmp
inc
cwtl
xchg
lret
inc
push
or
mov
fistpl
test
idivl
xchg
into
loop
mov
or
insb
ret
sbb
outsb
sti
dec
fisubl
test
push
in
icebp
lret
into
dec
test
push
les
dec
cmp
or
sub
inc
mov
pop
ret
sub
in
mov
je
xchg
xor
or
loop
inc
or
enter
fmuls
mov
mov
inc
mov
lods
add
shr
push
sbb
fcmovne
dec
dec
sbb
test
lahf
pop
jmp
cmp
aam
adc
and
pop
outsl
sbb
les
xor
idivb
push
inc
shll
and
sub
repnz
outsb
lea
mov
into
inc
cmp
movl
das
pushf
sub
aam
sub
cmp
cwtl
add
dec
scas
mov
xorb
push
jbe
movsb
incb
lcall
call
fnstsw
push
je
into
xchg
andl
mov
push
lock
xchg
add
mov
jl
mov
push
stc
sub
mov
jg
test
mov
pop
jecxz
jge
sbb
mov
int3
sbb
incl
jecxz
fldl
adc
out
add
sbb
mov
call
or
push
sub
js
outsb
pop
jl
rcrl
jnp
pop
cltd
pop
fstpt
or
out
jg
aad
stos
mov
pop
add
push
js
sbb
xchg
and
cmp
mov
adc
int
fnsave
mov
jp
mov
lea
pop
fsts
xor
es
push
movsl
pop
adc
addr16
adc
int3
clc
loopne
scas
repnz
xor
mov
mov
data16
lret
sub
xor
xchg
pop
push
sbb
xchg
xor
roll
mov
sbb
das
xor
addr16
stc
pop
insl
enter
int3
pop
dec
xor
enter
or
adcl
inc
pop
lods
jno
pop
inc
out
lcall
sbb
popa
aad
repz
cmpb
insl
stos
xor
xor
sbb
scas
mov
inc
out
pop
mov
aad
jmp
fcoms
lret
inc
inc
stc
and
insb
cltd
mov
xchg
or
imul
jmp
and
add
bound
sub
or
add
inc
imul
bound
dec
adc
push
ficompl
leave
nop
loope
in
jge
xchg
push
loope
lods
loop
xchg
mov
cwtl
dec
jbe
out
push
xchg
mov
test
lds
jne
adc
cmpsl
dec
loopne
mov
sahf
cmp
std
sti
call
int3
add
es
cmp
out
sub
mov
enter
daa
mov
push
ljmp
xchg
test
out
loope
push
stc
jno
ja,pt
imul
add
push
xor
add
pusha
pcmpgtd
lea
fucom
out
cmp
adc
popa
fs
pop
adc
adc
shrb
pop
sti
mov
aad
sbb
je
sti
sahf
shll
in
iret
rcrl
popa
leave
js
lret
dec
mov
xor
lods
into
aad
jecxz
rcll
movsl
rcrb
xchg
jne
insl
and
adc
inc
ja
or
pop
pop
and
prefetch
or
addr16
xchg
stc
orl
inc
push
pop
push
orl
lods
insl
lcall
iret
idivl
dec
fwait
stc
mov
fsubl
pop
lret
mov
or
cmp
fistps
sbb
in
mov
sub
mov
cs
lret
push
cmp
push
mov
ret
cmp
cli
lret
idivb
popfw
cmpsb
sub
repz
xchg
iret
lret
and
cltd
dec
iret
jl
adc
push
cmp
in
jbe
mov
es
call
es
mov
daa
cmp
add
pusha
xchg
roll
test
mov
out
aaa
stc
jno
insl
insb
dec
dec
subb
int3
mov
out
push
mov
ss
mov
sub
mov
call
lods
nop
add
add
mov
jb
pop
fidivl
test
fwait
cld
das
sbb
mov
inc
in
int
movsl
inc
std
out
and
adc
inc
pop
fistps
xor
adc
movsl
cmp
je
adc
mov
jno
int3
mov
pop
mov
ja
sub
sbb
cli
cli
bound
mov
jecxz
mov
cmp
dec
ret
lret
xchg
movsb
inc
dec
fdivs
push
sbb
movsb
icebp
cmpsb
jg
pop
or
push
test
cmc
mov
aaa
mov
repz
fwait
aam
cmovp
inc
pop
push
mov
sbb
lea
addr16
call
or
imul
sbb
add
xchg
in
outsl
out
scas
sbb
repnz
xchg
loopne
mov
das
aas
add
pop
mov
mov
pop
je
hlt
adc
imul
orl
es
pop
and
cli
sbbl
cltd
push
mov
outsl
es
pop
push
and
pushf
ja
and
jl
repz
mov
outsb
mov
sahf
popl
or
mov
pop
dec
push
je
sbb
jb
loope
dec
cltd
movsl
enter
mov
cmpsb
mov
and
xor
leave
mov
hlt
xchg
aad
xor
pop
lods
jns
movsl
xchg
shrb
adc
sbb
xor
pushf
push
jmp
jg
and
mov
mov
and
loop
sub
fimuls
fstl
movsb
adc
into
shlb
adc
and
ljmp
lret
sub
mov
stos
cmpsl
nop
mov
push
adc
aam
test
jle
bound
xor
or
ret
or
xchg
push
xchg
fwait
je
popf
and
in
pusha
jmp
adc
ds
cmc
testl
xchg
mov
sub
loope
xchg
sbb
pop
js
repnz
into
jae
add
js
stos
pushf
sub
rcll
inc
cltd
xchg
jbe
aad
jle
cltd
xor
or
fistpll
mov
jle
lods
jecxz
in
es
out
jno
mov
inc
test
hlt
fisubrl
xchg
arpl
jmp
xchg
call
xor
mov
insb
sbb
lahf
popf
inc
jmp
pop
jle
push
lea
cmpsb
ds
sbb
lods
sbb
out
iret
cmp
mov
lcall
imul
jns
out
cmp
fstps
xchg
push
popa
imulb
jb
movsb
add
xchg
in
mulb
push
shll
arpl
in
sub
int3
sbb
xchg
rolb
mov
push
push
lret
cmp
xchg
xchg
mov
je
add
dec
push
cmc
es
dec
jo
mov
sarb
imul
xorl
add
imul
push
stos
pushf
and
shl
aaa
movsb
mov
dec
xor
das
adc
cli
adc
ds
pop
pop
mov
pop
jns
in
fcomp
xor
loop
mov
mov
push
cmp
out
mov
xor
arpl
add
sti
pop
addb
pop
push
psrlw
hlt
push
dec
test
jg
stc
dec
rcrl
mov
inc
pop
cmp
outsl
jmp
ja
mov
ret
cwtl
rcr
and
outsb
jb
dec
jo
stos
pop
cwtl
dec
repz
hlt
cmp
xor
push
dec
mov
enter
jmp
icebp
mov
pop
stc
mov
mov
in
push
and
mov
sbb
push
aam
pushf
inc
out
fstl
push
movsl
adc
xor
pop
cmp
pop
sbbb
int
cmp
addr16
jnp
mulb
and
pop
pop
fucomi
dec
xchg
sbb
push
stc
clc
inc
push
cmpsb
jp
addr16
jno
mov
movsb
cwtl
mov
inc
jmp
xchg
outsl
xor
xchg
mov
push
xchg
shll
cli
orb
inc
and
cltd
ss
or
ja
mov
pushaw
pop
lds
or
enter
daa
xchg
data16
or
mov
cltd
push
pop
imul
fstl
xchg
aas
add
push
shll
js
adc
mov
ja
aas
in
rorl
aam
cmpsl
insb
repnz
jns
add
in
inc
push
loopne
sub
mov
lds
xor
adc
push
mov
xor
ficomps
icebp
cli
cwtl
es
fnstenv
in
shlw
fcomip
js
jae
and
jge
leave
mov
out
lock
cmp
mov
lret
xchg
mov
xchg
xlat
js
jae
jmp
cltd
sub
mov
xchg
xchg
je
jae,pn
pop
fs
mov
sbb
mov
adc
mov
in
popf
and
ja
das
stos
icebp
push
test
arpl
lock
inc
sbb
aaa
pop
outsl
mov
stos
adc
pop
adcb
gs
mov
xchg
fwait
out
xchg
outsl
mull
jo
ret
clc
xchg
pop
push
sub
sbb
xor
xor
and
mov
sub
inc
test
stos
adc
enter
push
inc
mov
and
add
dec
in
push
popf
insb
inc
pop
push
in
xlat
xor
sub
mov
xchg
repz
cmp
push
cwtl
in
mov
jbe
inc
imul
inc
movsb
aas
sub
fstps
ret
push
repz
push
sbb
lcall
push
jle
mov
das
lock
loope
push
dec
adc
push
add
mov
pop
fs
shl
pop
push
mov
movsb
cmp
in
push
pushf
mov
loop
xchg
mov
mov
ljmp
or
or
aas
outsl
mov
rclb
outsb
mov
mov
daa
dec
jg
stos
pop
test
insb
mov
inc
xchg
jo
ja
jge
mov
xchg
xor
xor
jg
mov
aaa
sbb
push
and
test
leave
mull
cltd
stc
adc
pop
mov
enter
jnp
push
shrb
fimuls
adcl
jno
imul
subb
addb
cwtl
mov
sbb
fs
and
add
movsl
fdivrl
imulb
lcall
cs
pop
fnstcw
and
xchg
xor
lods
sub
mov
data16
add
test
stc
insb
add
or
pop
cmc
xor
jno,pn
xor
ss
inc
or
dec
or
add
ficomps
xchg
cmpsb
mov
scas
cmc
fs
jbe
pop
xchg
ja
push
jl
xchg
xor
and
scas
inc
mov
mov
pop
jne
xchg
sahf
arpl
test
stos
std
add
sub
xchg
repz
loopne
jbe
sub
pop
in
inc
push
mov
add
jns
dec
sbb
shll
mov
sbb
jl
idivb
jae
sbb
push
sub
imul
sub
inc
icebp
push
xchg
adc
lds
aaa
cmp
sub
roll
cmpsb
adc
add
adc
lret
leave
dec
lea
or
xchg
xchg
and
pop
sub
mov
lock
add
push
sbb
cmp
sbb
out
dec
sub
inc
lea
ffree
insl
push
mov
mov
fwait
pop
mov
cmpsl
push
xchg
jmp
cmp
pop
int
dec
mov
lcall
push
sahf
je
imul
sbb
push
inc
mov
rclb
mov
into
fucomi
xor
sbb
mov
pop
loopne
aad
repnz
lds
mov
in
mov
into
mov
into
inc
fcomps
sub
nop
les
stos
test
jo
sahf
sub
mov
jo
insl
mov
rolb
jecxz
int3
loop
jmp
mov
scas
pushf
mov
insb
pushf
dec
push
sub
call
loopne
or
cmpl
loope
push
faddl
js
popf
mov
lahf
mov
add
mov
enter
stos
or
lret
mov
add
adc
pop
sbb
mov
enter
gs
call
loopne
shll
ds
repnz
and
arpl
or
in
jl
dec
test
cmp
test
xchg
jbe
test
cmp
pop
out
stc
pop
or
imul
pop
lret
or
cmc
dec
iret
jnp
loop
in
mov
push
scas
xor
push
lret
aad
add
outsb
aam
jle
dec
jbe
shll
jnp
dec
pop
jecxz
cli
pusha
cmc
fidivrl
cltd
xchg
cwtl
testl
inc
or
sbb
stos
push
xor
ds
adc
in
inc
jg
aas
cmp
rorl
xchg
jg
push
or
mov
imul
or
push
rorl
out
sti
or
lea
iret
sbb
xchg
rdmsr
fnstcw
jnp
sub
subb
sbb
or
sbb
scas
pop
push
rolb
push
out
addl
stos
mov
sarl
data16
jnp
jg
movsl
sbb
rorb
add
mov
outsb
dec
push
shl
fsubs
out
jecxz
addl
and
adc
xchg
mov
test
pop
cld
sbb
aad
aaa
jo
mov
shll
fcompl
mov
out
cmc
push
fbstp
mov
popa
rep
out
je
ret
inc
in
outsb
pop
xor
ret
and
call
pop
xchg
daa
lahf
push
fsubl
jp
ss
filds
repnz
xor
sbb
mov
shll
xchg
out
sbb
push
in
out
mov
movsl
cwtl
jmp
xchg
or
pop
mov
std
mov
and
movsb
adc
idiv
or
fisttps
in
sbb
jnp
mov
pop
cmp
faddp
inc
out
pop
clc
fs
aaa
shl
je
test
jp
pop
mov
testl
popf
leave
vmulss
adc
inc
inc
and
push
push
adc
inc
ret
pop
mov
ja
xchg
cmp
and
cs
mov
bound
pop
leave
leave
xorb
pop
pop
cs
cmp
mov
ret
pop
mov
ja
loopne
shll
stc
jbe
cmp
xchg
adc
and
pop
jp
mov
test
call
inc
jle
cmp
push
push
neg
jne
imul
or
add
mov
xor
sub
lret
loope
xor
sub
adc
das
jnp
push
adc
pop
call
pop
adc
test
inc
xchg
sub
pop
adc
jbe
out
subl
lea
call
cmpsb
dec
mov
and
jg
mov
repnz
mov
xchg
pop
mov
dec
popa
push
fwait
pop
and
jns
lcall
dec
push
scas
loop
jno
out
fadds
pop
call
jb
in
bound
out
mov
mov
cli
push
cs
out
mov
cmp
jnp
lret
cmp
jg
sbb
cmp
incl
cmp
mov
popf
cs
sarb
insl
mov
xor
in
mov
mov
dec
leave
sub
inc
dec
sub
inc
mov
es
int3
inc
xchg
inc
hlt
mov
int3
xor
mov
inc
sbb
jnp
pop
fdivr
lock
inc
and
push
mov
xor
scas
pop
xchg
fsubrp
push
push
lods
jae
test
das
xchg
orb
sub
push
and
cmpsl
dec
inc
popa
addr16
mov
arpl
repz
xchg
push
movsl
or
test
jmp
mov
sbb
sti
cmpsl
mov
popa
inc
cmp
pop
mov
inc
mov
or
mov
movsl
push
xor
imul
and
ss
and
adc
lahf
icebp
imul
push
pop
mov
and
mov
test
mov
mov
shlb
mov
jb
cmp
inc
dec
inc
xchg
and
cmp
jnp
inc
xchg
adc
in
jbe
jp
jge
movsb
shlb
mov
sub
lods
test
mov
xchg
and
mov
ret
sub
or
test
add
iret
mov
or
insb
and
rolb
mov
scas
jnp
mov
leave
lock
mov
jns
pop
sub
sub
fisubs
out
in
movsb
stos
jp
gs
movsb
jns
insb
pushf
cmpsl
dec
daa
and
stc
jnp
mov
cmp
pop
addr16
mov
mov
icebp
dec
jo
sub
and
sbb
ret
imul
and
xchg
jne
aas
adc
outsb
out
inc
js
add
pop
mov
mov
mov
notb
bound
cmp
pop
mov
xlat
sub
add
push
sub
sbb
negl
pop
jp
loop
pop
mov
or
inc
mov
xor
jmp
cmp
pop
dec
and
ret
sbbb
imul
mov
scas
jecxz
call
test
rcrb
add
xor
xchg
ljmp
or
mov
arpl
call
and
iret
inc
data16
pop
sub
and
inc
in
sbb
pushf
out
jp
aam
xor
cmp
movsb
jns
outsb
jo
sub
iret
arpl
jo
insl
dec
popf
pusha
or
shll
mov
ds
sbb
repz
mov
roll
push
dec
push
push
inc
lret
cmpsb
push
cmc
enter
xchg
ret
fdivr
mov
mov
xchg
stc
pop
or
xor
mov
outsl
xlat
dec
sub
data16
xlat
inc
insl
out
cmp
xor
fwait
daa
lcall
out
xor
mov
out
dec
dec
lods
mov
dec
inc
pop
andb
or
sub
cmpsb
scas
jb
adc
adcb
push
sub
repz
xor
cmp
jbe
cltd
sahf
repnz
and
enter
pop
ret
mov
insl
orb
leave
cmp
jbe
pop
negl
rorb
pop
loopne
and
je
insl
ja
sbb
push
hlt
std
and
push
ja
xorb
in
and
test
fst
ss
pusha
in
movsb
sti
push
push
jb
repz
push
leave
jae
jae
add
xor
push
fs
jne
push
outsl
sbb
xchg
and
inc
stos
test
xchg
mov
es
and
fcmovu
mov
aad
leave
lahf
mov
clc
pop
pop
cltd
rcll
orl
push
inc
pop
xlat
scas
addr16
loop
test
inc
mov
test
loop,pt
add
jb
lahf
adc
lds
adc
cmp
xchg
insb
enter
inc
mov
dec
mov
fistpl
pop
xchg
pop
xor
popa
mov
sub
aad
in
xchg
push
popf
jne
dec
xor
cltd
repz
xchg
pop
sub
fst
loope
fstps
cmp
inc
mov
inc
int3
adc
cmp
mov
jmp
dec
add
and
mov
mov
xchg
stos
cmp
inc
cmp
sub
popf
scas
data16
sbb
and
push
scas
xchg
jns
mov
out
adcl
or
arpl
lret
pushf
repz
ja
gs
mov
jnp
jmp
or
xchg
jl
sbb
add
mov
int
mov
xorb
cmp
mov
cmp
jle
xchg
jmp
arpl
xlat
or
inc
xor
sahf
add
push
pop
out
test
enter
gs
dec
in
stos
aas
push
int3
pop
jns
xor
inc
popa
xor
dec
mov
xor
adc
pop
push
add
adc
aas
jp
cld
repnz
ret
cmpsl
cmpb
xor
mov
dec
out
rolb
sbb
fldenv
inc
xor
in
not
stc
pop
cltd
loope
mov
lods
and
cmp
ss
aas
je
movsb
sbb
pop
outsb
pop
push
loopne
imul
iret
je
xor
and
mov
aam
xchg
and
movsl
sub
mov
scas
orl
or
sbb
add
iret
xor
pop
fsubrs
adc
mov
push
addr16
test
imul
pop
iret
mov
shrl
fwait
jne
push
pusha
xchg
stos
in
ret
lret
push
mov
lahf
test
inc
test
hlt
ficoml
ror
mov
cmp
jb
loope
push
pushf
aas
pop
into
adc
pop
fisubrl
push
nop
imul
test
cmp
iret
jle
xchg
sbb
sbb
shll
adc
ss
jmp
movsb
mov
popf
xchg
dec
lds
les
inc
test
shll
dec
adc
negb
pop
in
shll
cmp
adc
ja
add
sbb
mov
icebp
pop
adcb
ljmp
dec
shrb
loop
int3
add
sub
inc
aas
fsubr
fnsave
dec
popa
jo
or
loopne
xchg
xchg
shrl
addl
jno
mov
js
insb
stos
mov
std
ret
ror
sbb
popf
js
test
mov
pop
mov
sbb
sub
jo
test
xchg
jle
or
dec
cld
addr16
fisubs
ss
scas
jae
icebp
jmp
and
jge
sbbb
inc
jmp
addr16
fsub
mov
into
repz
insl
mov
ret
int
lahf
repz
nop
out
jno
clc
in
in
and
jae
fsubrl
pop
or
inc
jmp
mov
pusha
cmp
lods
jo
lret
pop
xor
fstps
aad
insb
shl
out
and
imul
das
sub
ds
sub
dec
pushf
aad
jae
aam
cmp
gs
test
scas
jb
and
fmul
cmovs
or
int
iret
roll
pop
inc
dec
adc
hlt
imulb
in
stc
mov
lock
xor
cmpl
lret
inc
jecxz
or
mov
add
imul
pop
loope
in
mov
jle
inc
std
xchg
cmp
lahf
jno
or
ret
dec
mov
loope
pop
jl
daa
cmp
mov
fmulp
and
dec
adc
test
lods
mov
and
dec
dec
push
mov
pop
sub
setge
dec
fnstcw
test
xor
scas
cmp
xor
js
cmp
mov
mov
orl
xchg
sbb
sub
push
inc
loop
js
gs
mov
pusha
mov
inc
mov
mov
lods
leave
in
sbb
dec
repz
and
mov
xchg
loop
cld
add
push
jg
push
movsl
loop
std
lahf
stos
add
cmc
fdivs
insb
andb
aad
or
push
push
xchg
jmp
in
pop
xchg
adc
mov
out
out
jmp
mov
jl
js
loopne
xor
mov
xorl
lock
push
mov
pusha
test
mov
mov
cmp
mov
cs
jmp
les
dec
cs
or
xor
mov
mov
and
mov
aaa
fsubs
incb
gs
and
call
repnz
cwtl
inc
int3
jne
outsb
mov
mov
out
xchg
insb
inc
ds
lret
call
movsl
pop
jecxz
push
or
mov
or
sbb
jle
cmpsb
xchg
jl
cs
fs
rorb
out
adc
lcall
xchg
jo
hlt
lock
mov
fidivrs
dec
das
adc
stos
mov
es
pop
stc
mov
imul
setle
sarb
pushf
pop
push
mov
add
dec
imul
cwtl
xchg
clc
out
xorl
xchg
sbb
lret
pop
inc
xchg
movb
jle
js
pop
dec
xor
or
lret
mov
mov
sub
and
pushf
outsl
cmc
mov
sbb
mov
sub
mov
push
pushf
xor
xchg
and
mov
cmp
push
adc
push
mov
cwtl
push
xor
mov
pop
push
out
mov
and
hlt
and
inc
pop
and
fcmovbe
jnp
pop
fsubr
ficoml
or
xor
push
or
sahf
aam
pop
mov
ljmp
lret
sub
mov
xchg
jbe
lds
jmp
out
outsl
lret
imul
das
inc
jmp
aas
arpl
cmp
jg
push
call
jne
xchg
imul
int3
in
sub
cmpsb
clc
das
cli
outsl
add
test
xchg
mov
arpl
sub
test
loope
mov
mov
ret
ss
cmp
je
adcl
cwtl
adc
repnz
dec
mov
rclb
scas
pop
xchg
popf
leave
stos
lcall
xor
jecxz
int
pop
aam
mov
mov
jbe
je
lea
mov
sub
push
scas
imul
xlat
insb
jge
pop
test
or
pop
xor
cmp
mov
dec
cmpsb
ds
mov
add
xor
sbb
loopne
jg
rcr
add
lods
outsb
mov
push
pop
adc
jb
enter
cmp
add
add
pop
sub
nop
data16
sbb
xchg
sahf
jae
sbb
mov
fidivrs
out
pop
sarb
mov
outsl
rolb
dec
in
push
clc
push
cld
mov
mov
mov
mov
adc
pop
negl
mov
inc
jae
pusha
incb
sbbl
push
pop
push
xchg
xchg
dec
rolb
idivb
push
pop
in
loope
insl
or
mov
and
dec
pop
fistl
sub
lcall
sbb
or
subl
in
or
popf
sti
jmp
sbbl
insl
xchg
dec
dec
push
pop
ror
jmp
dec
out
stc
je
and
ficomps
test
push
mov
mov
fwait
push
cmpsl
popf
enter
jge
out
xchg
jno
ret
imul
sub
fmuls
out
popf
leave
pop
loope
outsb
and
divb
subb
fstpl
cmp
or
mov
je
dec
mov
ret
std
push
xchg
test
loope
es
xorb
mov
jnp
leave
arpl
in
aaa
inc
and
push
icebp
or
pusha
jo
ret
sub
mov
mov
insl
hlt
cmp
mov
adc
pop
seta
mov
jmp
xchg
test
xor
xchg
aas
mov
push
pop
outsl
ret
inc
mov
cli
jg
cmp
je
repz
xchg
imul
in
sbb
in
inc
add
in
fistpl
stos
and
inc
sbb
les
bound
dec
mov
pop
mov
add
cmp
sub
jbe
xchg
pop
sub
repnz
in
mov
enter
lods
pop
or
or
pop
imulb
rcl
mov
ljmp
mov
loope
cs
jne
movsb
addl
xchg
mov
inc
mov
shrb
and
mov
sbb
push
sbb
test
push
sub
cwtl
sbb
sub
mov
xor
int3
cmp
roll
imul
inc
fbstp
cli
aad
shll
or
xchg
sbb
xchg
insl
arpl
orb
mov
ret
lods
lahf
in
cwtd
jb
or
push
push
pop
js
repnz
inc
mov
xlat
jg
dec
or
inc
sub
movsl
push
sbb
cmp
xchg
jno
clc
cmp
icebp
xchg
inc
int
and
testb
or
mov
stc
sub
out
pop
xor
push
jle
sbb
jb
out
mov
dec
push
rol
adc
sub
xchg
notl
adc
mov
scas
jno
fs
aam
iret
fs
sarb
je
inc
push
lret
hlt
movsl
xor
jo
out
fwait
jns
xorl
call
jae
jbe
cmpsb
lcall
jb
scas
mov
scas
repnz
mov
mov
push
cmp
and
sub
mov
inc
sbb
jecxz
out
je
and
sarl
sub
inc
xchg
jecxz
mov
push
sbb
lahf
xchg
inc
aas
mov
jmp
je
sahf
pop
sbb
cltd
xchg
xchg
outsl
imul
inc
and
jnp
sub
jae
loope
aas
mov
jge
rolb
scas
dec
shrb
xchg
insl
sti
addl
out
jnp
int
mov
xor
ret
leave
arpl
push
xchg
cmp
hlt
aaa
add
std
jo
jmp
xor
push
mov
inc
ss
outsl
mov
mov
int
mov
pop
lret
ljmp
das
jnp
cwtl
sub
or
cmpsl
movsb
jnp
bound
icebp
jecxz
xchg
fstpl
push
shll
je
sbb
scas
repz
push
lods
int
cs
and
inc
cmp
inc
push
je
cmp
mov
mov
cmp
fsub
fstpt
sub
xchg
mov
call
jbe
cld
int
push
hlt
cmp
popa
fwait
jge
and
mov
inc
std
aam
ds
stc
sbb
scas
mov
faddl
adc
aam
scas
mov
adc
sarb
into
cmpsl
scas
scas
rolb
aas
sbb
mov
fxam
rorb
and
shll
movl
das
dec
inc
push
inc
lret
aaa
ret
sbbb
sub
pop
mov
xchg
cmp
and
out
mov
iret
pop
ret
push
cmp
sbb
mov
loop
repnz
sti
hlt
imul
mov
cwtl
ljmp
je
frstor
jnp
enterw
stos
add
mov
push
pop
lds
sbb
enter
mov
testb
das
add
movsb
sub
mov
push
je
cmp
add
cltd
andl
jp
pop
pusha
add
cs
and
jmp
inc
add
cwtl
pop
xchg
ret
movl
xchg
int3
repz
scas
addr16
push
leave
inc
mov
ficoml
test
pop
cmpsl
clc
bound
dec
notb
jbe
xchg
sarb
stos
sahf
pop
std
mov
fadds
imul
pop
gs
outsb
sbb
pop
inc
in
loopne
and
xor
icebp
mov
add
fwait
iret
xor
xchg
xchg
and
ss
add
loopne
lahf
outsb
inc
stc
int3
mov
cli
sahf
out
pop
cmc
clc
mov
inc
sub
jnp
mov
mov
mov
pop
mov
out
xchg
ljmp
mov
fimuls
push
or
mov
fsubs
xor
out
fwait
push
and
jle
rclb
aas
mov
aam
mov
add
lea
dec
fsubs
call
mov
mov
shll
sti
xchg
pop
orb
cwtl
ja
sub
sub
shll
or
pop
dec
mov
fwait
xchg
push
lahf
in
sub
enter
dec
inc
cs
stos
and
popf
shll
mov
lea
sbb
scas
jl
push
mov
loopne
add
xchg
dec
stos
adc
les
in
loopne
pusha
pop
pop
xchg
mov
test
or
fcoml
or
jmp
int
ss
dec
loope
adc
lock
lret
test
xchg
cmp
loopne
sub
mov
ljmp
dec
test
mov
mov
pop
out
lret
inc
mov
leave
or
shl
push
ja
mov
pop
adc
bound
jmp
in
adc
cmc
data16
xor
sbb
xlat
mov
pop
insb
xchg
loope
insl
inc
sub
mov
faddl
pop
scas
in
sar
pop
cmp
lcall
movsb
sarb
cltd
scas
pushl
orb
dec
or
loope
in
xchg
loopne
xchg
dec
and
mov
cmp
in
inc
mov
or
cli
movsl
xor
xchg
mov
jge
or
inc
dec
pop
inc
insb
jb
jmp
iret
aas
mov
mov
sub
dec
orl
mov
je
sahf
out
popa
mov
aad
sbb
imull
fisttpll
mov
jg
cmp
jge
movsb
in
stos
out
test
mov
jmp
fs
or
add
jb
xchg
mov
sub
and
shll
mov
cmp
jae
fsubrs
jp
inc
or
sub
or
push
inc
mov
push
in
sti
lcall
dec
sub
cmpsl
or
mov
sub
and
xor
cli
cld
jg
jnp
xor
lock
push
mov
ss
jecxz
daa
addr16
movsl
test
stc
pop
push
mov
cwtl
xchg
adc
frstpm(287
outsb
and
rcl
pop
cmc
lock
movsl
insb
sbb
shlb
push
cwtl
lods
or
pop
xorl
in
out
in
js
xchg
jl
and
lods
push
cwtl
stc
imul
loopew
xor
jb
mov
sbb
xlat
mov
test
push
push
stos
out
mov
cmp
fmull
jo
and
outsl
and
int3
cmp
cmpsb
and
inc
repz
xchg
dec
roll
nop
inc
fistl
gs
test
pop
cmc
ds
fildll
aam
sbb
fidivrl
inc
arpl
bound
inc
pop
fbstp
sub
repz
jle
xor
pop
or
inc
pop
jl
mov
shll
or
loopne
pop
rcr
mull
test
imul
daa
jb
fidivl
xor
jb
adcl
lret
sbb
dec
dec
lahf
outsl
jecxz
clc
insl
cwtl
pusha
das
das
icebp
imul
xchg
mov
cmpsl
stos
cmp
add
loop
dec
xchg
mov
mov
iret
push
sbb
mov
mov
sbb
cmpsb
jbe
cmp
mov
js
nop
sbb
sbb
enter
xor
pusha
mov
fadd
popa
inc
inc
sbb
call
movsl
pop
adc
int3
sahf
hlt
xchg
shr
push
mov
pop
or
mov
ficompl
or
sbb
pop
or
std
jae
mov
outsb
push
jbe
mov
push
scas
fildl
adc
sti
mov
andb
mov
mov
mov
test
dec
xchg
mov
sti
repz
shll
or
fwait
mov
rcr
aad
pop
not
cmp
mov
les
xor
push
pop
leave
adc
js
inc
adc
fnstsw
and
jp
bound
cmpsb
mov
lock
dec
inc
lret
jae
cmp
in
mov
xor
shll
bound
mov
mov
lcall
jp
lahf
jbe
mov
imul
cmp
js
sbb
test
push
mov
imul
emms
push
push
jb
hlt
pusha
jg
xor
les
ficoml
jae
mov
dec
in
jno
xchg
dec
fdivs
rcrl
mov
jne
daa
cmp
andb
jg
add
pop
dec
xorl
addr16
sub
pop
xchg
in
stc
test
hlt
adc
data16
and
xchg
aaa
push
arpl
shlb
and
sbb
inc
jo
sub
pop
inc
rcr
lea
out
aaa
por
arpl
pop
fdivs
sbb
mov
jge
fbld
insb
imul
mov
lds
iret
or
les
incl
shr
fwait
clc
mov
jl
sub
scas
mov
inc
cmp
cmp
fildl
movsb
mov
movsb
leave
into
fldl
or
jbe
adc
fs
imul
xchg
shrb
xchg
arpl
xchg
test
ret
jnp
and
bound
mov
hlt
hlt
std
inc
pop
mov
dec
push
jo
cmc
cwtl
mov
cmpsl
test
push
xchg
or
ljmp
leave
xchg
xor
lds
push
jno
scas
xor
cmpb
cmp
aas
or
outsb
stc
pop
stos
push
lods
xchg
std
in
pop
jne
sub
rcl
rol
cmp
adc
inc
pop
and
ss
test
std
inc
dec
pop
roll
push
push
push
inc
and
and
lock
cmp
cld
inc
int
filds
mov
jmp
pop
pushf
scas
or
pop
das
xchg
lea
cmc
and
call
xchg
mov
cmp
adc
mov
shl
test
and
pusha
repz
pushf
and
fnstenv
pop
inc
add
cmp
hlt
push
pop
loopne
lods
pop
daa
cld
or
inc
sbb
into
sub
mov
or
dec
adc
adc
aaa
shll
or
mov
sub
push
outsl
aad
mov
imul
fnsaves
and
lds
pop
je
scas
or
mov
sbb
data16
das
std
mov
xchg
jle
popa
cwtl
and
stos
mov
js
mov
sub
mov
mov
xchg
pop
call
pop
shl
test
mov
mov
daa
xchg
inc
xchg
sub
xchg
js
test
mov
cmp
inc
mov
in
out
lea
and
cmp
mov
es
sbb
inc
sub
iret
cmp
shrb
cmpxchg
aam
imul
movsl
xor
xchg
jbe
adc
mov
or
add
pop
jne
xor
mov
pop
lea
sbb
stos
mov
je
push
faddp
jnp
xchg
mov
ret
stos
pop
lret
mov
xchg
scas
test
cmp
jecxz
popf
std
pusha
jl
fnstenv
aam
and
pop
or
cmp
jecxz,pn
mov
mov
repz
push
mov
sub
pop
sbb
xchg
sbb
cmp
aaa
out
mov
pop
and
ljmp
aas
adc
sub
add
fsubr
stc
add
fsubr
loope
jo
inc
mov
cmp
mov
std
mov
cwtl
js
fldcw
shl
out
loopne
ret
rolb
dec
push
sahf
and
test
bound
inc
or
movsl
mov
add
insb
cwtl
repnz
mov
mov
inc
push
or
outsl
pop
jp
adc
dec
add
bound
jno
jg
pop
subb
in
rclb
jmp
int3
es
aam
pop
jge
or
dec
stos
orb
xor
and
sarl
dec
pop
xchg
mov
jbe
cmp
or
add
aas
loopne
outsl
loop
cld
jae
add
imul
adc
or
repz
lods
xchg
std
jp
jb
xor
and
mov
arpl
popa
add
cld
sar
cld
xchg
test
pop
cltd
cltd
xchg
ljmp
cmpsl
testb
ds
scas
pop
push
push
fstpt
dec
out
adc
mov
adcb
add
inc
iret
les
add
inc
push
sti
jns
scas
or
and
outsl
and
icebp
mov
jp
pop
cmpsl
add
adc
xor
jo
jg
mov
mov
push
jae
cmp
test
cmp
push
cltd
insl
nop
mov
inc
jmp
out
mov
jnp
jne
stos
xchg
test
les
arpl
mov
addr16
sbb
imul
das
fimull
imul
notb
mov
test
mov
jb
mov
call
add
addb
cmp
subl
adcb
scas
adc
mov
cmp
je
lahf
xor
les
dec
movsb
insb
pop
mov
pop
mov
adc
cmc
outsl
fsubrs
scas
int
dec
and
add
mov
pop
xlat
adc
cld
mov
repz
pop
data16
adc
into
sbb
mov
mov
iret
les
jmp
lods
mov
sbb
in
ret
or
cli
insb
sbb
sub
inc
mov
jae
adcb
lret
jne
mov
sbb
mov
sbb
mov
popf
xor
dec
cltd
xchg
xor
movsl
and
cmp
inc
lea
lea
cmp
sbb
jb
lock
fnstenv
cmpsb
mov
mov
notl
fldenv
sub
lahf
shll
sbb
mull
ss
mov
mov
xchg
or
sti
sbb
sbb
rcrb
cmp
rcr
mov
repnz
mov
xchg
idiv
mov
mov
add
push
jmp
imul
xchg
jbe
in
mov
int
adc
test
iret
and
fwait
fstps
add
fbld
adc
dec
js
xor
fsubl
cmp
mov
lods
out
mov
dec
mov
cmp
aam
mov
add
leave
pop
sub
mov
sub
sti
push
dec
xchg
ret
push
cwtl
rol
mov
push
movsb
adc
fdivrp
js
or
test
add
push
sbb
aas
lods
adc
incb
je
sub
xchg
jle
lcall
flds
sbb
sarl
imul
mov
int3
xchg
mov
stos
fildl
out
adc
cmp
jnp
pop
test
and
popa
mov
loope
mov
cltd
cmpl
ss
jnp
lret
mov
inc
mov
jmp
ficomps
mov
or
fs
mov
mov
pop
mov
adc
test
bound
sbb
sub
jb
pop
pop
decb
mov
jb
aad
inc
mov
sbb
mov
push
pop
imulb
sbb
popf
pop
icebp
pop
scas
mov
cmp
lcall
cmp
pop
call
push
popf
pusha
mov
rol
push
and
pop
mov
fldcw
mov
add
add
add
sahf
jmp
lcall
test
popf
je
cwtl
imul
bound
sub
pop
imul
mov
test
add
jno
ss
dec
js
andl
sbbl
pushf
cmpsb
inc
ret
and
sahf
and
pushf
outsl
pop
sub
adc
jecxz
mov
xchg
frstor
cmp
fmull
xor
sub
ret
dec
fsubrs
inc
test
dec
test
adc
jecxz
xchg
cwtl
out
divb
jnp
movsl
add
je
adc
mov
adc
jecxz
ljmp
xor
push
stos
stos
rorb
cmp
mov
mov
sahf
dec
mov
mov
and
ljmp
out
and
scas
cmp
inc
sub
inc
stos
dec
push
push
out
add
ljmp
add
fnstsw
pop
movsl
add
sub
pushf
popf
fstpl
loop
xorb
cmp
mov
dec
sbb
and
shlb
add
mov
inc
jbe
or
mov
mov
mov
and
cmp
lcall
jae
repnz
out
sbb
ds
psubb
sub
dec
and
lret
lds
xor
sbb
inc
into
rcrb
and
mov
xor
mov
add
or
loop
rolb
cmp
test
subb
shlb
or
xor
xchg
call
insl
push
insl
stos
mov
cld
and
fsubl
mov
pop
jbe
movsl
inc
push
into
sbb
hlt
cmc
shll
and
loope
inc
iret
cmp
add
push
rolb
popf
xor
repz
lods
jne
inc
negl
fmull
dec
loope
xor
lods
push
pop
iret
outsb
mov
cmpb
dec
push
push
cmp
negl
scas
int3
cmp
mov
dec
mov
push
ret
jb
mov
es
movsl
aas
enter
pop
jg
dec
mov
sarb
mov
cmp
push
dec
popf
outsl
icebp
jl
divl
and
sub
dec
in
mov
lock
aaa
clc
inc
sub
sti
mov
leave
and
frstor
xor
lock
out
imul
rcll
lcall
xchg
rcll
cli
shl
mov
inc
add
imul
outsb
in
test
cmpsb
xlat
imul
mov
dec
sahf
sub
jns
fisubs
sub
stos
filds
sahf
je
dec
adc
mov
or
pop
dec
lcall
pop
sbb
pop
int
sub
xchg
ljmp
mov
dec
xor
cltd
iret
sbb
cmp
cmp
scas
push
pop
loopne
pop
xorl
es
call
add
mov
cwtl
clc
inc
add
aad
aaa
cmp
stos
dec
inc
into
jp
sbb
pop
clc
push
pop
push
mov
xchg
mov
and
call
lcall
roll
inc
and
jp
push
aam
xchg
push
jp
mov
stc
in
jecxz
mov
ret
adc
mov
sbb
and
iret
test
inc
dec
push
fisttps
cmp
insl
movsb
jg
js
xor
mov
push
lock
fwait
scas
sarl
fisttpll
nop
or
push
jecxz
xchg
pop
cli
mov
cmp
std
or
mov
repz
dec
jmp
jnp
add
xchg
inc
rolb
pop
shlb
pop
cmp
push
pop
call
popa
xor
shll
xchg
xchg
stc
mov
inc
les
ja
nop
push
pop
fistpll
sbb
mov
je
aam
insl
mov
push
lds
add
and
jns
dec
sbb
sub
jnp
outsl
insl
xor
sub
leave
xchg
lods
pusha
fstp
clc
mov
mov
paddsw
cmp
jbe
mov
dec
cmc
mov
and
push
dec
cmp
push
push
mov
inc
idivb
or
pop
insl
xchg
mov
test
sbb
lret
test
pop
insl
mov
xor
test
xchg
sbb
ljmp
lock
icebp
test
adc
daa
lds
filds
aam
cmpsb
cltd
lea
loopne
push
fildl
popf
cmp
xlat
jmp
add
in
pop
add
jecxz
xchg
repz
mov
mov
gs
cltd
jl
aas
popa
jecxz
xchg
sub
aaa
inc
imul
dec
or
mov
popa
test
xor
ljmp
adc
add
add
mov
notl
outsb
cmpsl
faddp
enter
cld
loopne
test
jnp
ja
rcrl
pop
mov
sbb
es
outsb
cli
ja,pt
adc
sti
mov
jno
xchg
mov
mov
adc
mov
scas
pop
orl
aad
outsb
out
pop
sar
repnz
inc
addr16
add
cmpsl
fcoml
das
lahf
arpl
jg
adc
jb
adc
mov
xchg
jb
push
enter
push
in
push
enter
sub
jp
cmp
lret
test
rcr
fildll
fisubs
es
pop
out
mov
xchg
dec
mov
sub
mov
adc
in
aaa
and
popa
sbbl
enter
scas
jb
test
push
rolb
ljmp
inc
fstl
and
push
mov
jecxz
sahf
jg
mov
lds
dec
push
mov
pusha
inc
mov
add
xchg
in
mov
cli
add
lret
xor
lret
out
cli
iret
mov
cmc
cmc
sub
loope
inc
aad
in
sti
pop
cmp
pop
int3
mov
mov
add
mov
inc
mov
sbb
cmpsl
adc
push
aam
jg
mov
or
and
into
dec
sbb
mov
into
adc
stos
or
xor
push
sub
add
lods
push
bound
dec
xor
jmp
test
out
sbb
mov
jle
popf
test
mov
fisubrl
xchg
push
cli
lea
mov
inc
mov
xchg
pop
jl
and
add
mov
leave
inc
mov
jmp
pop
sahf
fisubl
xchg
push
stos
push
movsl
mov
xor
call
lret
idiv
push
dec
sahf
into
pop
mov
sub
movsb
insl
jb
adc
cld
push
inc
scas
sti
stc
push
out
mov
div
adc
mov
adc
cwtl
lds
loopne
mov
mov
push
mov
lahf
xchg
mov
jb
data16
or
cmpsl
mov
icebp
add
and
mov
mov
and
adcb
inc
into
adc
sbb
incb
idivl
jecxz
rol
shrl
sti
outsl
xor
dec
fisubrl
std
xchg
incl
xor
cld
out
rorl
xchg
daa
push
dec
sbb
mov
sahf
mov
nop
pop
int3
lods
arpl
push
adc
add
clc
fnstenvs
mov
adc
jb
leave
shl
push
nop
jmp
sbb
pusha
cli
push
fwait
push
dec
mov
test
and
jno
jo
and
xchg
adc
push
xor
pop
testb
ret
adc
inc
ret
dec
xchg
mov
dec
push
xchg
icebp
cmp
fcompp
inc
xchg
mov
add
loope
fcoms
pop
mov
push
call
add
hlt
jns
adc
adc
mov
rcrb
mov
jl
fsub
mov
mov
dec
or
mov
push
and
int
jge
mov
lahf
add
addr16
lea
lds
sbb
sbb
rcr
repz
sbb
jb
fs
jp
lea
cmp
push
flds
test
cmc
add
pop
sub
fcmovb
aam
lock
dec
mov
imul
sub
aas
push
call
cmp
nop
inc
lods
ss
ret
test
mov
jmp
call
mov
int3
jge
std
mov
lock
shll
sbb
test
cli
es
jge
mov
cmp
adc
imul
repnz
in
mov
fnstenv
mov
cmp
fnstcw
xorb
sbb
sub
movl
mov
dec
ljmp
inc
mov
xchg
lods
andl
pop
adc
lds
xchg
repz
cmp
std
sbb
dec
and
push
lret
nop
jne
cmpb
iret
shlb
sub
ret
jo
xor
jns
jb
loopne
inc
mov
mov
test
lret
sbbw
aad
lods
xor
jb
pop
es
sti
movsb
std
mov
lahf
fprem1
ss
push
stos
push
dec
mov
push
xchg
xchg
mov
jecxz
arpl
or
stos
or
cmp
fistpll
fnstcw
jne
pop
push
pop
rorl
fsts
dec
leave
cmova
dec
scas
fs
cmp
or
cld
test
lods
mov
lcall
sub
les
jbe
cmp
jmp
mov
insb
pop
mov
cltd
mov
jle
outsb
pop
mov
add
aas
nop
sub
in
jp
out
outsb
dec
xor
inc
lret
rcll
push
add
enter
and
repz
out
nop
popa
mov
jmp
dec
xchg
dec
jle
adc
add
sbb
dec
icebp
sbb
pop
add
mov
adc
jbe
pop
pop
or
jns
popf
xlat
iret
cmp
xlat
cmpsl
push
movsb
clc
pop
daa
inc
pop
inc
imul
shrb
mov
inc
das
enter
dec
lods
insb
in
stos
adc
push
mov
push
push
fidivs
xchg
adc
cmp
dec
std
push
fidivl
xlat
sti
xchg
jne
mov
mov
or
xor
mov
arpl
mov
popa
xor
aad
fwait
mov
cwtl
mov
daa
cmp
sbb
call
mov
sub
adc
push
negb
inc
test
or
test
outsb
fistpl
stc
push
arpl
enter
jb
fnstsw
mov
jl
mov
push
mov
pop
ss
test
fs
pop
push
loopne
stos
jl
mov
pop
inc
stos
lret
data16
and
cwtl
loop
int3
lahf
mov
xchg
popf
sub
xor
xor
cmp
pop
xchg
mov
sbb
into
es
xor
aad
mov
loop
or
mov
scas
popa
pushf
ss
cmpsl
cmp
or
pop
adc
cmp
pop
call
cli
pop
clc
mov
add
jae
out
jl
push
clc
mov
ret
sub
loopne
mulb
or
std
mov
sar
xchg
and
pop
dec
loope
mov
jo
xchg
mov
movsb
add
dec
test
xorb
cli
ficompl
mov
mov
nop
fnstcw
test
push
test
and
out
js
aad
int3
xor
jge
inc
add
insb
loope
adc
jmp
inc
call
push
add
push
das
mov
adc
ret
ficompl
adc
sbb
mov
sub
mov
neg
cmpl
out
pop
mov
ds
mov
inc
cmp
psraw
cmp
aaa
and
out
leave
scas
cltd
sbb
push
mov
data16
sub
ret
dec
inc
mov
xchg
xlat
aad
mov
dec
data16
in
cmp
fwait
and
leave
repz
mov
divl
cmp
lret
fimuls
push
jbe
sub
jo
arpl
mov
push
dec
push
cmc
sub
fcmovnbe
or
adc
pop
jg
push
faddl
std
mov
lcall
dec
mov
mov
push
cmovs
mov
xchg
ret
lods
mov
mov
mov
pop
sbb
xor
add
sub
sub
mov
jb
adc
repnz
sbb
adc
pop
ret
mov
repz
sub
jno
xchg
dec
call
mov
fwait
roll
jp
add
pop
jp
inc
push
fisubs
jae
or
test
insl
test
in
jne
cmpsl
popa
mov
inc
lret
insb
cmp
cltd
cli
adc
cmp
push
mov
jb
push
test
fwait
cli
jbe
dec
mov
and
jne
pop
movsl
push
push
lcall
aas
cmp
cmp
jecxz
idivl
and
xchg
mov
data16
pop
cmpsl
out
jmp
enter
sahf
or
add
in
insl
int
mov
test
cld
fdivrl
fistpl
sbb
add
mov
push
iret
jb
mov
and
inc
sarl
xor
sbb
mov
xlat
scas
jmp
inc
leave
cs
push
jecxz
add
outsb
jb
ja
add
inc
mov
or
push
es
xchg
sbb
shrb
test
inc
pop
js
clc
cli
and
aad
dec
loope,pt
cmc
add
fisubrl
or
out
test
lds
imul
out
xor
or
push
enter
daa
test
stc
dec
ret
test
rcr
in
clc
dec
or
fsubp
cmp
popa
jmp
popa
in
pop
imul
flds
in
pop
mov
or
sti
sarl
das
jns
sub
sub
sbb
shll
mov
cltd
mov
or
push
or
mov
inc
or
fwait
jge
mov
loopne
daa
stc
inc
mov
int3
scas
pop
add
cmp
xchg
inc
out
adc
jmp
subl
enter
sahf
nop
outsb
xor
push
dec
xchg
sub
jb
xor
jle
icebp
push
xlat
cmc
loope
addr16
sahf
testl
sbbl
adc
ljmp
push
mov
push
psrlw
test
dec
adc
aad
and
imul
adc
jnp
cmpsl
lea
iret
or
jb
push
dec
int3
shlb
popf
sarl
sub
dec
aaa
sbb
sub
push
jno
gs
xchg
sub
adc
push
xchg
cs
inc
jmp
mov
cltd
loopne
xor
add
aas
aaa
cld
ret
mov
xor
gs
js
lds
lea
loopne
jmp
stos
sub
shlb
into
int3
out
rcrl
ss
cld
sbb
in
stc
inc
shlb
leave
mov
test
mov
jne
sbb
jo
aam
minps
mov
fs
shll
mov
movsl
mov
je
or
cmp
push
jbe
push
lcall
mov
xchg
cmc
cmp
xor
fsts
xchg
inc
cli
loopne
pop
cltd
out
sbb
push
inc
mov
ret
fimull
mov
or
cmp
dec
rclb
clc
and
sahf
add
lock
scas
popf
clc
cmp
cmpsl
push
pop
pop
clc
fdivr
pusha
hlt
pop
or
ds
hlt
or
lock
xchg
out
js
fucomi
mov
push
in
push
test
mov
es
fstpt
and
fisubl
inc
test
mov
cmpsl
cmp
cs
imul
adc
and
aad
push
enter
arpl
sbb
pushf
jg
cltd
insb
mov
xchg
mov
pop
nop
in
jg
cmp
mov
cmpsb
xchg
pop
dec
and
out
cmpsb
or
pop
into
sbb
jns
push
pop
mov
sbb
cmp
sbb
nop
sbb
ss
or
add
push
cmc
xor
mov
xor
inc
mov
stos
jge
pushf
scas
pop
jmp
mov
push
imul
dec
out
adc
insb
push
in
pop
xchg
insb
loope
sub
add
sahf
data16
std
mov
jae
js
add
repnz
inc
lret
shrl
test
pop
aaa
sub
ljmp
jbe
cli
cli
or
mov
push
pop
arpl
jno
jnp
fistpl
repz
and
dec
in
fs
inc
notb
xchg
pop
ret
inc
push
inc
daa
out
shlb
lcall
xor
jecxz
and
pop
js
mov
pop
xor
fcomps
pusha
cld
mov
and
adc
fisttpl
jns
loopne
mov
mov
mov
mov
sub
test
popa
std
pop
js
cmc
adc
dec
sbb
imul
dec
dec
loop
add
int
inc
movsl
stos
popf
xor
mov
pop
lret
xchg
jecxz
dec
into
xchg
jecxz
aam
sti
iret
mov
mov
nop
stos
arpl
mov
and
inc
mov
and
dec
jecxz
pop
dec
add
cs
loop
xchg
adc
adc
xor
push
and
cmpsl
jmp
and
ss
dec
add
popa
pop
popf
cmpsb
cmpl
ret
in
push
push
push
in
scas
xor
clc
add
out
jp
adc
lret
repz
je
xchg
jnp
mov
jno
xchg
adc
push
arpl
rorb
dec
push
jmp
cmp
dec
clc
popa
sub
movb
xor
jp
fnstcw
lods
sbb
jo
adc
filds
outsl
into
insl
mov
xor
jno
xchg
xchg
mov
shl
and
mov
adc
pop
cld
pop
adc
sbb
mov
inc
dec
xchg
and
dec
mov
cwtl
jle
test
mov
push
ret
stos
inc
adc
hlt
xor
shr
in
lret
push
sti
sub
ret
or
addr16
rcrl
in
or
jns
xlat
ret
mov
fwait
jbe
push
stos
adc
ja
add
fstpl
rorl
xchg
movsl
movsb
jne
pushf
sub
inc
in
cmp
cltd
fcmovne
jno
mov
sub
push
ds
pop
in
adc
sbbl
push
mov
pop
xchg
nop
rorl
lea
jae
inc
pushf
pop
xchg
pop
fdivl
mov
movsb
push
mov
pop
repnz
xchg
sbb
scas
leave
fidivs
mov
sbb
fs
adc
xchg
addr16
adc
outsb
push
fidivl
ret
jmp
scas
xor
popf
js
or
sarl
test
mov
and
es
imul
rolb
xor
sbb
bound
into
lods
fbld
inc
lret
xlat
inc
out
das
pop
mov
stos
cmp
add
cmpl
movsl
cmp
mov
daa
gs
lods
scas
rcr
adc
hlt
inc
or
mov
mov
mov
mov
inc
sarb
shll
sub
pop
arpl
xchg
cli
sbb
fstps
fldenv
imul
std
cwtl
jmp
nop
xchg
sub
or
sub
dec
cld
inc
jae
sbb
repnz
in
enter
ret
bound
fiadds
mov
in
sbb
loope
div
jnp
imul
mov
xor
dec
rcrl
inc
mov
inc
pop
mov
fxch
push
aam
aam
add
bound
mov
or
iret
xchg
dec
dec
addb
jge
rcll
pop
mov
hlt
fisttpll
iret
jns
sub
scas
xor
popf
clc
jecxz
xchg
xchg
xchg
pop
and
test
je
addb
mov
sub
mov
mov
inc
gs
ds
push
xor
imul
int
push
sbbb
or
dec
jne
fwait
psubusw
mov
shlb
stos
mov
pop
xor
mov
jle
shrb
and
xor
je
and
sub
sarl
mov
mov
pop
mov
xor
sarb
or
mov
dec
lret
mov
repnz
pop
or
push
inc
xchg
mov
fstpl
sbb
sbb
mov
jbe
in
imul
pop
fstps
jl
dec
adc
xchg
pop
mov
add
mov
in
jo
and
mov
inc
test
shll
pop
inc
inc
or
rorl
stos
cmp
popa
data16
mov
mov
call
scas
xor
idivl
xor
push
xchg
sub
and
popa
sub
out
dec
xchg
lds
mov
mov
sti
push
loope
sub
push
pop
movsl
xor
fisubs
fldt
ret
mov
add
mov
sbb
test
sbb
dec
xchg
mov
sti
sbb
xchg
insl
inc
jno
push
sbb
jbe
js
call
movsl
fs
nop
in
pop
stos
es
jle
ret
das
xchg
or
inc
push
fs
jl
hlt
shll
ja
jmp
loopne
cmc
sbb
ja
hlt
jl
sbb
shll
push
fs
xchg
push
add
mov
jnp
mov
test
push
push
xchg
flds
ficoml
push
cmp
int3
cwtl
sub
movsl
push
mov
fimull
fnstsw
aaa
inc
insl
clc
inc
arpl
sub
push
lahf
shl
pop
adc
adc
dec
sub
jae
lods
dec
cltd
mov
aas
mov
cmp
lock
inc
pop
add
ffree
shll
cmc
cmc
mov
hlt
dec
jo
sub
cmp
scas
pop
adc
arpl
or
das
push
add
ret
mov
sbb
enter
sub
cmc
adc
int
xor
mov
dec
mov
mov
rcll
in
xor
xor
pop
jp
jl
adc
dec
xor
mov
dec
in
push
or
insl
fcoms
or
jb
mov
push
mov
inc
xlat
push
fcmovb
gs
dec
jb
or
mov
add
dec
sbb
in
jno
mov
inc
rorb
xchg
jp
in
loope
cmpsl
test
jo
inc
cld
push
gs
mov
mov
cmp
mov
mov
mov
ja
xlat
fstl
stc
sahf
pop
notl
xor
fwait
inc
std
mov
jne
push
addl
jno
rorb
push
leave
mov
ja
pop
addr16
add
lcall
out
add
xor
pop
test
dec
mov
cs
popf
add
test
mov
or
and
xchg
idivb
dec
mov
aad
mov
ss
xor
add
mov
dec
and
xchg
mov
and
dec
sahf
sarb
mov
xlat
adc
xchg
fisttpll
mov
dec
mov
adc
mov
push
adc
iret
inc
add
jb
out
adc
push
push
orb
dec
xchg
inc
cmp
cmpsl
mov
scas
dec
jmp
mov
iret
ret
mov
and
sbb
out
adc
inc
insb
addb
mov
enter
test
xchg
jle
mov
adc
mov
mov
inc
sbb
fdivs
mov
dec
in
iret
jmp
lret
lods
arpl
cmp
mov
and
xor
in
sbb
adc
inc
mov
aam
dec
sub
adc
addr16
insb
cmp
add
aad
es
push
jns
mov
jne
ja
into
xchg
sub
xor
mov
mov
push
xchg
iret
in
or
cmp
and
adcl
inc
pop
scas
mov
movb
xlat
inc
cmp
fcoms
mov
adc
mov
mov
mov
outsl
out
pop
test
jg
and
mov
push
fs
mov
xchg
shlb
mov
mov
mov
loope
js
add
xchg
icebp
push
addr16
sti
jno
jle
push
insl
mov
int3
cmp
repnz
loop
cmp
dec
fmull
test
or
sub
lods
aad
push
add
aaa
mov
jno
sbb
jmp
mov
sub
jg
mov
jp
loope
mov
add
jecxz
fistps
or
dec
movsb
jmp
jnp
cmp
shll
idiv
test
mov
pop
stc
loope
dec
stos
jb
lods
cmp
repnz
push
inc
leave
hlt
kmovd
movsb
or
movsl
repnz
jg
mov
xor
nop
and
test
mov
jecxz
pushf
lods
scas
fsts
shrb
repnz
mov
jecxz
jle
sbb
fsubs
push
mov
rorb
test
xlat
mov
icebp
xor
pop
shr
into
mov
mov
sub
repnz
xchg
gs
enter
pushf
adc
mov
mov
sbb
mov
xchg
lcall
jecxz
mov
mov
das
pop
xor
mov
xchg
add
in
push
sbb
push
and
sahf
fstl
int
scas
imulb
ss
sti
or
in
mov
shrb
jp
xchg
ret
dec
xchg
and
push
movsl
pushf
dec
aas
mov
or
call
dec
xchg
jae
sub
inc
in
mov
icebp
push
pusha
test
inc
ret
mov
pop
movsl
lcall
pop
fldcw
sahf
push
cmp
cwtl
test
xchg
and
mov
xchg
push
xlat
das
push
fwait
jae
jnp
outsb
outsb
ja
stos
inc
mov
xor
aas
dec
lahf
lahf
pop
mov
sbb
inc
test
or
fwait
jg
or
pop
dec
rcrb
mov
arpl
stos
jo
and
xchg
adc
xchg
fs
pop
pushf
mov
xchg
adcl
cmc
pop
pop
clc
mov
ffree
js
pop
dec
fists
or
retw
jno
sub
mov
sbb
dec
add
in
int
inc
in
push
mov
and
stos
mov
add
cmp
sbb
loope
data16
movsb
loope
mov
fnstcw
adc
popa
test
je
adc
ret
dec
loopne
jmp
arpl
inc
xchg
outsb
mov
dec
push
xor
and
cmpsl
inc
leave
fmull
hlt
or
mov
mov
jns
dec
nop
das
orb
or
insb
stos
cltd
pop
sbb
lret
cmp
leave
dec
pusha
outsl
add
inc
sub
xor
xchg
daa
cli
rcll
mov
inc
fnstsw
mov
xor
stos
daa
fisttps
inc
mov
pop
fiaddl
adc
loop
or
stos
or
xor
stos
push
mov
nop
daa
jne
dec
out
mov
imul
pop
cmp
jns
cli
dec
adc
ljmp
push
mov
idivl
sub
fwait
shll
adc
push
or
fs
cmpsb
sub
xchg
iret
mov
mov
push
ret
mov
inc
mov
das
sub
and
lcall
in
push
in
iret
inc
jb
pop
inc
mov
test
sub
aam
mov
pop
stc
mov
xchg
pop
mov
popf
outsb
mov
xor
dec
xorb
xor
cmp
aam
inc
lea
or
imul
imul
xor
push
int
sub
bound
adc
enter
das
mov
jae
in
int3
inc
iret
mov
or
xor
fiaddl
jns
cmp
mov
inc
aad
sbbb
push
jge
or
mov
div
mov
fistl
jl
jmp
rdtsc
mov
stos
std
inc
and
inc
addl
sub
sub
insb
xor
stos
scas
insl
push
cmp
and
fadds
xor
pushf
inc
adc
push
test
mov
adc
adc
fadd
mov
outsl
fnstcw
rcrb
mov
cld
dec
iret
xchg
icebp
xchg
xor
hlt
repnz
lea
movsl
popa
pop
pop
lret
cld
xchg
push
xor
xchg
outsb
mov
aad
ret
pop
or
outsb
sub
or
pop
push
ljmp
mov
outsb
mov
mov
in
jo
xor
mov
out
jnp
jp
pop
aam
hlt
out
insl
movsl
mov
lahf
lock
pop
mov
shrb
lods
call
dec
in
add
mov
jp
adc
cmp
sahf
fadds
in
cmp
into
inc
sub
ja
ljmp
mov
loopne
xchg
inc
pop
dec
xor
movsb
mov
data16
push
mov
mov
push
inc
add
sbb
mov
shll
lret
lods
mov
cmc
outsb
and
adc
mov
aas
shll
aaa
popf
out
push
bound
nop
add
dec
or
mov
ljmp
mov
or
popa
jg
sar
dec
mov
scas
movsb
std
mov
jbe
mov
push
adc
and
xchg
pop
dec
cmpsl
jecxz
iret
pop
ljmp
push
out
jle
rol
jl
inc
hlt
jbe
dec
loope
in
dec
das
adc
addr16
pushf
les
insb
mov
sub
adc
inc
ror
pop
or
jnp
ret
loop
mov
lods
popf
stc
xchg
testb
popa
out
cmp
arpl
jmp
stos
stos
mov
dec
imulb
iret
pop
daa
fsubs
mov
scas
jne
ret
ret
jnp
pop
push
mov
stc
popw
push
xchg
jno
cmpsb
addb
pop
add
int
fnsave
xchg
xchg
adc
mov
push
cmp
fildl
jecxz
pop
pop
mov
xchg
lret
fdivr
sbbb
xor
jnp
mov
jmp
mov
loopne
das
adc
push
jno
mov
dec
adc
pop
fdivr
mov
cmp
pop
icebp
jb
pusha
jno
repz
pop
inc
mov
inc
cs
clc
mov
hlt
xchg
sub
xchg
lahf
sbb
mov
rol
mov
stos
dec
inc
ljmp
pop
aaa
push
dec
movl
add
dec
ja
outsb
fwait
adc
sbb
pop
xchg
xchg
call
int
sub
es
ret
ret
adc
jle
cmp
pushf
push
dec
stc
imul
jle
xchg
push
inc
adc
insl
test
add
es
mulb
fistpl
add
ljmp
inc
add
aaa
xchg
repnz
xor
test
mov
lret
notl
lcall
jl
popf
fwait
dec
int
out
pop
lea
and
and
cmp
rolb
mov
cmpsl
ja
or
outsl
jns
les
bound
movsb
pop
push
xor
addr16
xchg
sti
xchg
repnz
jno
in
mov
imul
sbb
or
mov
lds
or
and
es
int
jg
pop
test
insb
dec
sbb
pop
imul
xchg
mov
fs
test
push
sbb
mov
iret
loope
mov
orb
mov
jg
hlt
xchg
out
pusha
jmp
into
pushf
pop
in
and
mov
aaa
dec
stos
fs
jle
xchg
dec
pop
aam
outsl
stos
xchg
add
cmc
int
ret
outsb
int3
mov
pop
clc
lret
cmp
mov
jo
movsl
push
pop
xlat
pop
pop
adc
inc
testl
loop
aas
jbe
mov
lahf
stc
repnz
pop
leave
push
lea
in
xchg
rcrb
mov
ffreep
ds
lea
shlb
mov
bnd
aaa
and
jae
mov
fcomps
std
jg
jl
outsl
ss
test
test
and
jge
cmpsl
mov
xlat
mov
jo
mov
sub
aad
push
ret
dec
adc
jb
mov
sub
mov
std
inc
sub
and
sub
cmp
int
mov
jp
negl
or
cmpsb
leave
lahf
push
pop
push
mov
jmp
and
mov
pop
fsubrl
mov
fld
xor
pop
xchg
mov
ret
insb
sbb
mov
outsb
popf
jmp
hlt
outsb
ja
jecxz
xchg
into
rclb
out
daa
dec
aad
jbe
mov
and
mov
pop
add
push
fisubrs
adc
leave
pop
lcall
pop
adc
addr16
scas
pop
dec
jg
sti
pop
xchg
xor
je
pop
ljmp
loop
outsl
pop
jmp
fimuls
xchg
fidivs
dec
fdiv
push
test
mov
repnz
mov
jb
test
add
pop
add
mov
mov
pop
jg
jae
pushl
mov
test
jno
popf
sahf
push
repz
inc
jbe
sbb
pop
inc
idivb
icebp
adc
or
lret
subl
mov
pushf
icebp
mov
sbb
outsb
loopne
mov
test
pop
lods
inc
insl
inc
xchg
imul
arpl
mov
xor
push
xchg
out
dec
ja
movsb
dec
push
sub
cs
rol
pop
outsb
sbb
aas
xchg
mov
xchg
jno
pop
stc
jae
adc
and
inc
scas
pop
ds
xchg
xchg
ret
dec
pop
leave
pop
mov
xor
sbbl
xchg
sub
pop
cwtl
or
arpl
fs
outsl
mov
jbe
push
mov
cmp
xor
cltd
scas
loope
sbb
iret
rcrb
fdivrl
push
cmp
dec
add
stos
in
pop
aad
xchg
or
adcl
test
movsb
int3
xlat
or
jecxz
mov
xor
lods
mov
aad
sbb
mov
fists
push
lock
sbb
or
loope
inc
sbb
daa
out
ss
mov
ror
ret
leave
jp
inc
sti
cmp
adc
jae
ds
cmp
test
or
mov
xchg
outsl
stos
ret
leave
jge
and
test
cmp
movsb
push
dec
idivb
imul
mov
cmp
push
pop
movsl
divl
add
popa
sbb
out
jmp
aaa
sub
push
xchg
lea
cmp
ficompl
pop
cmp
sub
pop
movsl
cmp
cmp
and
mov
rolb
in
stos
gs
mov
push
stos
arpl
mov
repnz
xor
int3
lea
adc
jo
sbb
xor
inc
pusha
shrl
jae
decb
and
or
testb
xchg
xchg
mov
xchg
xchg
test
daa
sar
rclb
mov
hlt
inc
cltd
cld
loopne
jo
inc
mov
xchg
cmpsl
int
popf
jl
xor
nop
push
push
pop
out
jle
jo
jo
sbbl
je
push
imul
cli
loope
sub
flds
mov
data16
xchg
mov
int
add
inc
jbe
jp
fnstenv
or
add
mov
das
std
mov
or
pop
mov
sbb
sub
addl
mov
repnz
add
add
dec
dec
and
int3
sahf
xor
test
mov
add
or
sti
in
add
stc
cmp
xor
push
pop
sbb
leave
call
mov
mov
das
push
jecxz
mov
jecxz
repnz
rorb
clc
push
pop
xchg
clc
mov
aad
popf
idiv
loope
lahf
in
or
mov
mov
ret
xlat
dec
xor
ds
repz
aam
leave
jl
es
fidivrs
mov
clc
lods
jne
pop
add
lock
mov
scas
lcall
orb
pop
jnp
pop
je
cmp
mov
push
push
jae
jge
inc
jb
daa
push
mov
or
sbbl
mov
stc
lcall
push
dec
iret
lock
jp
orb
push
fiadds
outsl
adc
mov
popf
cmp
ljmp
in
xchg
lods
ds
xchg
pop
ljmp
jb
pop
rclb
dec
and
dec
pop
ret
inc
adc
in
int3
or
out
lahf
fists
mov
add
les
jg
push
jmp
cmpl
fs
ja
jbe
mov
adc
int
add
inc
aaa
mov
fistpll
aas
mov
fmuls
mov
cli
mov
push
not
daa
jns
imul
outsb
dec
jo
mov
call
fdivrs
mov
jp
hlt
out
sub
pop
push
push
ja
add
shr
cmpsl
xchg
mov
je
outsl
add
pop
sarb
cmc
push
or
fcoms
cltd
mov
push
leave
push
pop
xchg
push
cmpsb
cmp
sub
mov
xchg
push
jo
lods
ja
mov
add
clc
std
xor
or
aas
mov
add
mov
fisttps
loopne
mov
or
mov
aad
sbb
shl
movsl
imul
push
push
xchg
das
mov
sub
push
call
jo
push
shlb
repnz
pop
adc
in
jo
and
push
fdivl
out
jmp
into
jno
flds
cmc
xchg
jmp
dec
mov
test
mov
insb
sbb
sbbb
adc
mov
insb
cmp
jne
data16
adc
add
test
inc
push
scas
ds
sbb
imul
lea
cld
je
and
dec
in
pop
sub
insb
pushf
clc
and
test
push
sub
ret
jge
jnp
test
cs
and
out
mov
mov
mov
push
adc
in
mov
das
iret
cmpsb
lcall
inc
jnp
adc
or
test
out
adc
outsl
add
xor
or
or
loop
fmul
sbb
push
out
xlat
lret
xor
arpl
imul
das
add
fcoml
imul
mov
cmp
xor
rcr
mov
mov
mov
fimull
adc
mov
xor
aam
out
out
xchg
sarb
ret
or
int
test
inc
jge
xor
add
and
int3
test
jno
inc
pop
repz
dec
cwtl
jne
jmp
lods
push
fldenv
jbe
pop
data16
xlat
mov
ja
loopne
outsl
popa
fsubrs
dec
cmp
mov
int3
imul
sahf
add
lods
rorb
pop
pop
sub
jo
lock
fistpl
mov
and
mov
int3
in
fs
push
pop
sub
jnp
ljmp
xchg
and
mov
xchg
xchg
ret
sbb
shll
push
into
dec
dec
xor
xor
add
mov
fs
int
push
pop
pop
sbb
das
xchg
sbb
cmp
mov
es
outsl
and
sahf
movsb
inc
cmc
cli
xchg
clc
sub
scas
adc
loop
jb
ja
orl
mov
or
cwtl
and
cmpsb
test
sub
dec
std
pop
aam
mov
imul
pop
lahf
xchg
repnz
dec
jle
cli
mov
cmp
ret
stos
mov
xchg
mov
pop
imul
jno
js
mov
stos
popl
stc
bound
dec
cmc
jns
sbb
lea
and
aad
mov
clc
cmp
lret
test
mov
mov
mov
xchg
push
aas
sub
jo
push
inc
stos
adc
sbb
add
mov
sub
loop
jge
gs
popf
xchg
setbe
dec
test
mov
cmp
pushf
ret
adc
das
adc
push
rcrb
adc
mov
cld
sub
xlat
mov
push
dec
cmp
sub
mov
push
adc
and
sub
dec
into
inc
outsl
xlat
fisubl
ss
inc
jl
sarl
inc
pop
push
or
and
xchg
pop
jae
cli
push
jae,pt
paddusw
mov
adc
pop
int3
and
cmpsb
jnp
pushf
cld
adc
dec
mov
decb
divb
sub
pop
jmp
dec
push
sub
leave
push
lock
loopne
adc
add
cmp
mov
pop
icebp
cld
mov
cld
sbb
adc
sbbl
cmc
adc
mov
or
popf
jae
icebp
mov
das
xor
sub
repnz
test
mov
mov
insb
inc
xchg
jne
jge
dec
add
mov
mov
aaa
mov
notl
rol
scas
lret
cmc
xor
inc
pop
jl
sbb
outsb
movsl
and
pop
stc
jmp
hlt
add
or
jns
dec
rol
out
xchg
fstpl
call
stos
es
push
xor
hlt
pop
dec
xlat
ret
clc
lods
movsb
add
mov
cld
sti
jbe
mov
jg
mov
arpl
push
xchg
cmp
push
jge
dec
jg
and
dec
sbb
ret
stos
popa
aaa
sub
dec
add
xchg
mov
adc
gs
or
and
mov
cltd
xor
out
fs
sbb
push
jae
jno
outsb
ss
or
xchg
clc
lcall
pop
jns
sub
sub
jecxz
shlb
or
lret
popa
adc
pop
cli
sub
fcompl
test
xchg
or
mov
jle
pop
pushf
jbe
pop
insb
mov
iret
mov
fcmovnb
add
loopne
jae
cmp
push
loop
fisubrs
cmp
pop
mov
jns
inc
dec
ss
dec
test
xchg
cmp
xlat
lea
adc
inc
or
sub
je
outsb
and
pop
lea
call
loop
nop
cmp
mov
in
pop
filds
into
mov
mov
push
xor
lods
adc
lret
fucomi
fdivrl
inc
sbb
add
xchg
mov
pop
jbe
ret
sub
dec
mov
nop
out
addr16
loopne
aas
sbbl
sbb
adc
paddsb
out
bound
dec
imul
sub
in
ja
shlb
lods
and
adc
adc
xor
outsb
xor
sub
or
dec
outsl
lock
shlb
push
mov
inc
sub
xor
es
ds
mov
lcall
movsl
stos
fnstsw
out
mov
into
add
jmp
inc
push
mov
scas
jb
xor
stos
in
or
add
mov
pslld
mov
js
mov
outsl
pusha
jne
mov
stos
push
xchg
sbb
lock
add
aad
xchg
outsl
arpl
cltd
lcall
push
shll
mov
push
repz
cli
xor
pop
xor
jle
stc
test
xchg
repz
loop
cmp
jno
bound
push
xor
dec
mov
inc
push
push
or
repz
adc
mov
cltd
sbb
cs
mov
pop
pop
inc
stos
cltd
add
sub
dec
aas
adc
cmc
dec
xlat
bound
fistps
adc
and
jnp
shlb
xchg
test
xchg
loopne
loop
test
lods
mov
lods
orb
clc
mov
or
jp
mov
sbb
sub
push
add
lock
cwtl
inc
sbb
or
mov
js
fs
mov
orl
jecxz
cld
movsb
mov
out
lds
adcb
pop
call
mov
mov
loop
pop
ja
and
scas
outsl
sub
inc
dec
mov
pop
pop
or
movsl
mov
adc
clc
pushf
cwtl
push
xor
xor
push
xchg
push
rcrb
inc
push
iret
loop
das
into
popf
jecxz
cmp
lcall
jg
icebp
pop
pop
out
sahf
icebp
cwtl
in
cmpsl
mov
lea
js
push
push
rcl
adc
clc
push
jns
push
jmp
add
push
mov
fidivs
mov
test
jle
push
lea
or
iret
mov
in
stos
sarl
sub
in
mov
mov
pop
or
mov
sahf
scas
xchg
neg
sbb
outsb
mov
out
aaa
mov
es
jo
in
sbbl
dec
movsl
out
ljmp
pop
cmp
push
cmp
jae
push
cltd
push
bound
cmp
sub
int
cwtl
dec
in
lock
testb
jle
mov
aas
arpl
mov
mov
mov
mov
enter
fistpll
mov
rcrb
xchg
out
pop
rcl
adc
mov
ljmp
sarl
dec
inc
pop
jbe
lods
bound
push
mov
ja
nop
adc
rep
sbb
jbe
in
sbbb
fistpll
test
outsl
pcmpeqw
ret
rolb
pop
adc
addr16
mov
jnp
dec
mov
adc
lcall
fwait
sub
dec
in
bound
das
push
push
add
cld
or
rolb
jmp
mov
push
mov
mov
pop
or
or
adc
xor
push
sbb
in
test
mov
in
ss
imul
shll
loopne
add
mov
paddusb
ljmp
fadds
or
fildl
lret
hlt
rcrl
fildll
xor
cmp
jne
repz
sbb
add
mov
flds
inc
les
mov
ljmp
inc
fcmovu
pop
orb
je
jb
lea
test
pop
fildll
inc
mov
cwtl
xchg
jecxz,pn
daa
and
add
sbb
sub
lahf
sbb
or
movsl
sbb
mov
notb
lds
pop
xor
leave
jne
in
in
push
loopne
je
add
cwtl
subl
gs
loopne
loop
dec
rcrb
mov
dec
lahf
sbb
jns
repz
mov
push
xor
and
mov
adc
pop
lock
jmp
mov
mov
pop
xor
dec
loopne
aaa
xchg
js
mov
mov
mov
sbb
xor
sub
loope
adc
jl
dec
xor
cmp
imul
mov
lcall
mov
scas
stos
out
cs
cwtl
cmp
subl
pop
sub
dec
pop
fstl
mov
pop
fwait
mov
movsb
push
cltd
xor
adc
je
inc
push
out
test
test
lcallw
inc
sub
or
cmpsl
add
andb
or
mov
push
and
cmp
sub
test
sti
or
jge
wrmsr
pop
call
add
push
dec
in
jecxz,pn
into
shll
arpl
pushf
sub
cmpl
mov
push
jp,pn
addr16
jl
fs
mov
xor
daa
inc
gs
mov
adc
roll
and
sahf
int
xchg
std
ret
pop
pop
push
sbb
ljmp
add
aam
out
sub
push
cmp
jmp
pop
rorl
lock
mov
push
sbb
repnz
insl
pop
or
jge
fisttps
bnd
nop
xchg
rorb
cld
mov
sbb
loopne
pusha
movsb
imul
iret
loopne
lods
shrb
repz
jg
lods
ret
test
pop
or
fnstsw
bound
mov
shr
jne
jno
mov
xlat
or
loop
and
xlat
add
push
popa
clc
adc
mov
arpl
push
and
aaa
cmpsl
jp
or
leave
jecxz
leave
popa
cmp
xor
cld
mov
cmc
iret
subb
imul
test
mov
pop
std
ds
pop
mov
mov
or
sub
or
jmp
mov
mov
add
jecxz
sbb
shlb
movsl
mov
scas
cltd
mov
xor
aam
mov
add
cmp
out
dec
and
lahf
nop
mov
aaa
or
lret
mov
pop
je
push
loop
add
sub
sub
mov
xchg
mov
push
decb
push
in
outsl
inc
loopne
or
xchg
fildll
adc
mov
jecxz
sti
and
out
inc
mov
mov
and
pop
stc
pusha
add
push
xchg
fildll
popf
mov
insl
pop
sahf
stos
scas
cwtl
xchg
cmc
roll
push
dec
bnd
dec
sub
or
add
mov
pop
add
jo
out
iret
push
xchg
lds
jmp
add
dec
add
lcall
outsb
xchg
add
call
dec
fidivrl
enter
cwtl
lods
icebp
sub
pop
push
inc
lods
mov
outsb
aam
fwait
mov
pop
sub
adc
mov
jae
out
pop
or
or
jge
fstpl
and
mov
jecxz
jbe
cltd
push
sub
mov
std
sub
cmp
jno
ret
nop
inc
mov
mov
repz
insl
sub
jl
cmc
test
xlat
subb
aad
ja
fwait
jmp
ljmp
inc
xchg
adc
sub
xor
mov
lret
das
dec
addb
imul
sbb
stc
adc
sub
add
mov
ret
shrl
imulb
inc
aam
mov
xchg
popf
pusha
pop
fisubl
leave
std
sar
mov
xor
mov
nop
rorb
and
sahf
nop
or
imul
inc
push
cmp
idivl
iret
sbb
sbb
lcall
addr16
ret
aaa
cld
in
gs
mov
or
sub
hlt
inc
imul
inc
mov
add
lcall
lock
mov
data16
hlt
icebp
mov
int
cmp
mov
test
ret
cmp
sbb
mov
jmp
and
cmp
jmp
ds
xchg
fcompl
push
lret
lcall
dec
mov
sub
sbb
sub
inc
jae
sub
aad
sbbb
cmp
jg
enter
or
adc
addl
test
ss
repz
pop
push
cwtl
jge
dec
adc
mov
mov
dec
ds
xor
les
movsl
jmp
mov
ret
loope
cmp
jmp
jae
cmp
rcll
push
push
in
add
adc
push
mov
call
rcll
outsb
jecxz
mov
sbb
pop
fidivs
mov
pop
das
or
jo
xor
ljmp
out
pop
lea
pop
or
out
pop
and
inc
push
mov
call
fisttpll
mov
int3
xchg
add
jno
movsl
int3
stos
movsl
fldenv
xchg
and
sub
adc
mov
xor
inc
pop
fnstenv
sbb
sbb
dec
nop
cmp
push
adc
repz
push
mov
negb
xor
in
sub
pop
dec
fsubrs
xchg
ret
jns
mov
mov
arpl
sbb
xchg
divl
ljmp
pop
jl
xchg
pop
cmp
xchg
dec
sbb
mov
pop
sarb
lds
xor
repz
cld
insl
xchg
mov
cmp
pushf
enter
sub
adc
fisubs
dec
int
fsubl
out
imul
adc
push
in
xchg
insl
adcb
adc
hlt
jp
or
mov
push
sub
sti
mov
outsb
mov
adc
jge
leave
dec
shrl
push
loop
dec
and
sub
xchg
lahf
adc
push
cmp
out
lahf
rorb
add
dec
jns
movsl
dec
ljmp
ficomps
pop
mov
mov
sbb
es
cmpsb
scas
fimull
pusha
daa
idivl
xchg
xchg
call
cltd
cmp
dec
test
out
lcall
out
aaa
in
jp
adc
cld
dec
inc
jno
in
pusha
cld
data16
inc
mov
jb
dec
dec
mov
mov
and
cmp
pop
and
insl
fldt
daa
pop
pushf
insb
push
push
or
fcmovnbe
jnp
cltd
nop
or
inc
daa
nop
jo
adc
jg
mov
mov
jmp
adc
popa
aam
mov
sub
xchg
ret
out
scas
cmp
hlt
mov
and
push
sub
jp
jg
cmpsl
inc
inc
xor
add
dec
cli
movsl
lahf
insb
std
mov
mov
mov
repz
mov
pop
aam
push
loope
loop
pusha
mov
aad
add
aaa
adc
repz
xchg
cmp
sub
jecxz
xchg
test
fcmovb
push
jecxz
int
movsl
arpl
pop
pop
push
into
dec
fistps
push
mov
popa
sbb
fucomip
mov
insb
adcb
push
aam
adc
mov
pop
inc
xchg
sub
lahf
and
sahf
cltd
xchg
mov
xchg
lret
push
push
xchg
pop
pop
scas
adc
sub
movl
gs
cld
push
jle
xchg
jns
lret
stos
or
lea
jmp
arpl
loop
movl
mov
or
mov
pushf
or
lcall
or
and
xorb
fstpt
adc
cmp
inc
or
mov
mov
push
mov
stc
inc
push
adc
or
in
pop
dec
xlat
lret
lcall
cmpsl
jg
mov
pop
cld
cmp
jnp
xlat
je
imulb
jnp
int
add
in
stos
jo
movsb
ret
inc
lcall
or
in
and
inc
cmpb
mov
jns
gs
aaa
inc
clc
jbe
xchg
push
sub
rolb
push
xlat
inc
lea
scas
cmp
inc
les
cmp
mov
lahf
int3
sbb
es
lret
das
mov
fstpl
stos
xchg
ret
add
pop
cli
rcr
jne
bound
ja
pop
adc
call
jmp
mov
dec
pop
mov
sbbb
dec
stos
xchg
mov
nop
pop
ret
insb
test
pusha
push
jno
aam
fnstsw
cmp
jmp
mov
int3
testb
mov
sbb
mov
idivl
rorl
mov
sub
aas
repnz
std
add
jns
ds
and
std
dec
push
cmp
add
cli
fidivrs
sbb
and
xor
stc
cmpsl
xchg
sub
xchg
jmp
pop
clc
cmpl
inc
mov
sub
xor
pop
pop
out
pop
add
sub
aam
ja
sbb
test
pop
inc
es
sub
cltd
push
dec
fidivrl
dec
popf
or
xchg
push
repnz
or
sbb
in
addr16
pop
shrl
pop
jb
lret
dec
mov
popa
mov
mov
sub
cmp
aas
mov
imul
std
cmpsl
cld
xchg
aas
enter
dec
gs
mov
add
cli
cwtl
jg
mov
cmpsl
stos
iret
or
jb
push
cmpl
leave
pusha
xchg
dec
ss
cmpsb
decb
cltd
mov
lock
imul
std
xor
lcall
pop
insb
xchg
inc
movsl
into
push
jo
jne
fwait
pop
mov
cli
cmp
mov
nop
pop
lret
sbb
cwtl
sbb
push
lods
fmuls
fidivrl
pop
xorb
jb
enter
push
leave
into
jmp
adc
iret
cmp
mov
repnz
and
imul
stc
shll
popa
cli
mov
push
icebp
movsb
iret
push
enter
fstps
mov
xchg
jge
add
add
pop
lcall
or
jne
call
es
lds
and
jo
dec
ja
add
repnz
outsb
rol
lcall
and
fsubl
add
xchg
mov
add
inc
out
add
push
shl
cli
mov
out
in
iret
sbb
jns
cli
outsb
dec
and
shrl
out
mov
fs
xchg
ficomps
and
mov
dec
push
es
push
adc
inc
in
cmp
out
xor
mov
jle
nop
dec
fsubr
xchg
inc
jno
daa
sbb
xchg
cmp
xor
and
mov
mov
xorl
jne
lcall
js
cli
lock
sub
inc
fdivrp
shll
mov
setne
sub
test
icebp
sub
mov
cmpsl
in
mov
gs
mov
mov
aas
sbb
sbb
and
adc
inc
fildl
add
push
xchg
sarb
jg
rcrb
test
xor
pushf
repnz
call
jmp
adc
sahf
add
in
mov
adc
popf
ret
imul
mov
shrb
sbb
dec
jns
push
lea
popf
je
stc
pop
jg
xchg
repnz
movsl
in
and
out
scas
mov
inc
push
xor
jp
loope
daa
and
and
mov
sub
fwait
push
push
mov
pop
bound
rcll
mov
dec
jnp
cmp
dec
fdivrl
jne
mov
data16
or
shrb
into
xor
or
jl
or
xchg
sbb
fsubs
mov
mov
sub
call
jl
mov
sub
repz
and
add
das
or
bound
mov
inc
into
outsb
adc
mov
add
push
jp
stos
push
mov
stos
aam
sarb
clc
cmp
mov
xchg
sub
pop
mov
sti
cmp
loop
ja
jp
jae
adc
test
sub
mov
out
loop
lahf
xor
sbb
mov
mov
sub
sbb
pop
into
test
sub
rcll
pop
subl
arpl
sbb
or
xchg
dec
rcl
fldl
mov
bswap
ret
and
xchg
xchg
add
pop
push
imul
add
cmp
ret
bound
jno
or
aad
cmc
dec
ret
ljmp
fnsave
dec
test
mov
das
testb
enter
test
dec
scas
sbb
pusha
adc
dec
push
mov
adc
test
adc
mov
jmp
shrb
or
testl
adcl
mov
inc
jns
push
scas
pop
xor
mov
cmpl
mov
mov
mov
shl
cmp
jp
fidivrl
rcl
jge
pop
scas
testb
adc
testl
sub
outsl
lahf
and
subb
scas
fistps
push
rcll
xchg
dec
enter
adc
sti
frstor
lock
push
loopne
loopne
push
aaa
stc
loop
adc
xchg
xchg
xchg
lock
adc
xor
cmc
sbb
stc
repz
insl
in
xchg
cwtl
inc
mov
mov
icebp
pop
mov
mov
aad
add
imul
mov
and
add
xchg
dec
pop
sahf
and
shrb
inc
stc
mov
std
jp
and
sub
scas
rorl
inc
cmp
dec
sub
out
out
mov
sbb
push
fistpll
icebp
pop
pop
fsubs
ret
add
cmp
mov
loopne
dec
repz
outsl
popf
push
mov
xor
lret
push
std
daa
sbb
xor
sbb
jge
and
lcall
xor
pop
ljmp
adcb
test
pop
push
fcomps
jmp
and
aas
dec
dec
push
xor
je
jecxz
and
xor
stos
xchg
sbb
add
pop
int3
repnz
inc
dec
inc
lret
jae
mov
je,pt
cmp
inc
push
mov
pop
adc
out
push
sarb
add
push
mov
shlb
ss
cmp
lock
lahf
loopne
jnp
int
outsl
out
xchg
lret
out
dec
or
push
cmpsb
adc
outsb
xchg
ficoms
mov
mov
sub
fld
jmp
pushf
push
cmp
insl
fcoml
xor
and
call
mov
pop
xchg
mov
je
push
pop
sbb
insb
add
cmpsb
rcrb
mov
sub
sbb
js
xor
add
inc
imul
pop
in
fildl
inc
xchg
push
sbb
inc
daa
push
incb
xchg
dec
insl
push
cmpsl
jp
in
in
mov
hlt
fsubl
pop
jg
sub
and
mov
cs
mov
push
fwait
scas
test
mov
xchg
mov
mov
iret
or
sbb
xchg
bound
shlb
pop
lds
xchg
cmp
in
xor
out
stc
sbb
movsb
cmc
lea
call
ja
and
fwait
cmp
xor
fildll
fcomi
xchg
out
pop
lds
cld
pop
fsubr
sbb
jne
test
mov
rcll
daa
mov
filds
xorl
sahf
xchg
arpl
hlt
cli
fmull
xor
insl
ror
xlat
call
xchg
notb
mov
int
mov
push
xchg
scas
testb
clc
sti
daa
or
leave
je
jne
add
mov
xor
push
mov
sub
lret
jns
xchg
orl
push
xchg
xor
stc
push
shl
inc
ljmp
mov
loop
pop
mov
xor
out
push
sub
mov
and
aam
loop
push
rorl
sbb
adc
dec
pop
enter
mov
lods
mov
hlt
and
jmp
mov
pop
js
push
push
sub
and
adc
add
push
iret
test
jne
int3
cmc
dec
xchg
jp
iret
cwtl
cmp
sar
pop
xor
fucomip
pop
adc
xor
inc
fdivp
fisttpll
and
sahf
push
mov
push
enter
push
ljmp
mov
xchg
and
pop
mov
sbb
or
testb
outsl
mov
aad
fadds
je
xlat
adc
outsb
test
push
repz
js
call
out
das
xor
mov
sbb
and
sub
push
add
loope
insb
push
divb
sub
mov
leave
fs
jge
add
std
ljmp
add
cs
push
inc
insb
gs
xchg
das
and
js
shll
je
out
xor
sbb
repnz
cmp
xchg
xor
cmpsl
shlb
je
scas
gs
cmp
dec
outsl
xor
sbb
insb
stos
add
sbb
cmpsl
push
addb
sub
pop
shrl
popf
xchg
or
cs
mov
mov
lret
ja
xchg
outsb
js
test
sbb
push
jne
outsl
outsb
pushf
inc
cmpsb
movsl
and
adc
and
pop
jnp
loopne
xlat
mov
xchg
and
fisttpl
jae
adc
or
push
sbb
mov
fmull
xchg
xchg
pop
mov
rcll
insl
mov
mov
sub
mov
push
outsl
insb
dec
inc
pop
popa
pop
mov
xor
cltd
fwait
sub
scas
xchg
push
mov
mov
and
xchg
mov
out
inc
sbb
vhsubpd
dec
ret
xlat
xchg
mov
ror
xchg
dec
lods
gs
xchg
scas
cmc
jecxz
mov
arpl
push
inc
adc
nop
fildll
stc
outsl
cmpsb
adc
pop
mov
nop
xor
pop
int
sti
subb
cltd
xchg
in
sub
sti
pop
sub
test
cmp
loopne
jp
inc
addr16
out
lret
xor
xchg
mov
sbb
jbe
jp
xchg
pop
and
scas
daa
xor
fbld
test
push
xor
loopne
push
mov
mov
mov
outsb
mov
icebp
mov
leave
push
jp
dec
lcall
test
xchg
pop
test
lock
ljmp
cmpsb
mov
mov
jl
mov
lds
into
jg
lods
and
mov
mov
jecxz
ss
ds
mov
pop
push
add
pop
enter
push
ljmp
cmc
pop
lahf
shl
or
leave
sahf
in
mov
mov
enter
clc
adc
or
mov
cmp
and
xchg
and
pcmpeqw
push
rolb
pop
out
in
sub
push
lret
and
pop
fistpl
testl
and
push
push
aam
out
mov
sbb
ja
xor
lods
push
inc
add
pop
call
xor
cmp
loope
xchg
mov
mov
jae
lret
andl
and
inc
xlat
test
and
fisttps
mov
jecxz
xchg
dec
cmpsl
popa
bound
dec
jmp
stos
sub
rorb
repnz
inc
push
sbb
mov
inc
inc
mov
jle
jl
stc
aaa
and
mov
mov
cmp
sbb
jo
out
sub
in
inc
jnp
in
sub
pop
and
fidivrl
js
fwait
dec
jbe
aam
lea
push
jae
mov
inc
mov
push
call
adc
push
mov
pop
pushf
leave
aam
sbb
cli
mov
testb
lds
cmp
js
push
int
ja
or
dec
loope
icebp
faddl
mov
loop
sub
ss
jmp
js
mov
xchg
mov
aas
push
lea
pushf
sub
clc
mov
not
das
mov
in
and
shr
lds
mov
mov
mov
sbbb
xchg
rol
xlat
icebp
gs
push
xor
or
jle
out
mov
dec
or
rorl
cmc
mov
aaa
js
inc
aam
aam
push
xchg
add
inc
fcmovne
cwtl
sub
adc
add
xor
xchg
fistpll
mov
sub
out
mov
cmpsl
mov
xchg
lahf
push
fldcw
mov
xor
mov
jne
cmpsb
inc
mov
push
push
imul
clc
fs
pop
push
clc
push
add
adc
pop
cmp
subb
xor
fdivl
cmp
fmuls
cltd
ret
in
fdivs
mov
jg
adc
rolb
inc
adc
push
mov
push
or
ds
hlt
cli
out
dec
dec
xor
cmc
mov
sarl
xchg
scas
or
hlt
gs
lods
and
outsl
int
push
cmp
and
fs
lods
xchg
out
cmp
mov
xchg
pop
mov
sub
xor
fwait
and
pop
push
sbb
mull
mov
and
ficoml
jnp
out
inc
inc
sbb
in
fdivrp
filds
cld
dec
daa
push
sbb
js
movsb
daa
jge
push
imul
xor
fimull
mov
adc
jmp
ja
in
roll
dec
add
cs
push
mov
mov
subl
xchg
aaa
mov
push
xor
negb
lock
inc
push
lahf
shlb
clc
xlat
dec
mov
add
gs
in
test
icebp
xor
xlat
and
aas
xlat
jmp
pop
imul
adc
std
push
or
mov
ljmp
cmp
jp
lods
enter
add
sahf
aad
push
push
popa
in
test
ja
push
xor
subb
clc
xchg
je
mov
jns
push
shlb
rcrl
mov
jns
push
pop
nop
jns
lret
pshufw
loop
imul
mov
push
mov
aam
add
sub
push
cmpl
out
pop
enter
out
lods
daa
jb
adc
dec
xor
jae
adc
ds
enter
mov
sub
dec
vpsubq
jae
insl
mov
fstpl
mov
imul
ja
daa
pop
inc
lret
dec
pop
inc
or
mov
xor
out
stos
repz
or
add
iret
cmp
sub
xchg
lcall
add
icebp
adc
jecxz
ss
cmp
in
popa
push
sub
mov
pop
pop
xchg
adc
mov
adc
pop
insb
sbb
popa
aas
mov
call
in
pop
mov
pop
gs
mov
ss
sbb
rclb
leave
mov
mov
fstps
mov
xchg
mov
bound
imul
dec
test
pop
ds
out
push
xor
shrb
and
leave
mov
adc
sub
cmpsl
sbb
sarb
xchg
pop
sub
push
outsb
or
ljmp
mov
push
adc
inc
mov
mov
lock
adc
cs
adc
test
fidivl
test
addr16
mov
add
jl
les
std
inc
scas
lods
jbe
pop
out
jecxz
ja
loopne
or
test
adc
pop
jno
push
sarb
mov
sbb
movsl
jnp
pushf
pop
fs
lock
fdivrs
int3
pop
push
mov
fistpll
pop
std
scas
arpl
not
sbb
adc
sbb
pushf
std
xor
sub
lret
push
in
orl
das
mov
sahf
mov
pop
leave
sahf
mov
movsl
js
push
aas
stc
xor
cmp
xchg
ret
je
pop
rorb
das
leave
jo
jne
insl
add
add
xlat
jmp
nop
lods
clc
cwtl
icebp
ljmp
ljmp
mov
push
xchg
sub
jle
add
or
and
mov
mov
lods
cmc
loope
mov
xchg
jge
idiv
int
jno
dec
outsb
int
imul
mov
mov
or
cmp
pushf
sbb
xchg
hlt
jmp
test
inc
push
sbb
mov
dec
sub
pop
mov
dec
sub
lcall
push
mov
or
mov
arpl
negl
sub
or
ds
mov
pop
scas
dec
cmp
and
and
rcll
mov
mov
sti
nop
adc
ja
daa
cmp
addr16
arpl
sarl
push
sub
mov
sbb
sub
dec
ja
lods
or
push
push
out
insl
idivl
or
push
jo
and
adc
jl
cmp
loopne
adc
repz
cwtl
adcb
mov
test
leave
cmp
pushf
xchg
out
out
test
shlb
stos
scas
imul
fildl
iret
cmp
mov
into
mov
push
jne
ss
aas
add
adcb
ja
mov
loop
pop
xlat
dec
std
dec
mov
inc
jns
xor
test
out
sbb
es
es
pop
aas
popf
cmp
xchg
or
ljmp
lret
fsubs
clc
mov
mov
pop
push
sahf
dec
testb
mov
jp
jae
leave
fwait
mov
add
add
and
stos
fs
adc
dec
out
lds
lret
outsl
insl
and
lret
add
push
push
arpl
dec
jo
inc
and
scas
mov
mov
inc
out
xor
cmp
out
pop
mov
in
jmp
jno
pop
insl
sub
xchg
adc
scas
adc
jl
pop
and
mov
xor
xor
mov
xchg
imul
and
mov
int
outsl
es
out
jge
mov
inc
xchg
stos
stos
sbb
adc
daa
aad
dec
jp
or
std
mov
sub
mov
jp
rolb
ret
test
shrb
shrb
sahf
mov
cmpsb
xchg
cmp
repnz
and
jno
addr16
dec
fs
mov
inc
cmp
cmpsl
aas
adc
lock
pop
je
mov
push
push
hlt
pop
and
rcr
inc
mov
call
mov
data16
scas
adc
sarl
or
cmp
sbb
xchg
scas
or
in
test
mov
jp
mov
mov
clc
lahf
mov
pop
cwtl
fcoml
out
mov
add
add
dec
dec
test
jnp
mov
shll
ret
cmp
xor
jp
sti
push
dec
xor
pop
fwait
or
jecxz
add
dec
inc
sub
je
std
mov
jne
xchg
mov
or
jle
nop
aam
jg
aas
call
cmp
cmp
adc
loopne
das
pop
bound
cwtl
sti
fcom
aas
inc
in
stc
cmp
test
xlat
xorb
push
test
push
fcmovb
adc
add
negb
fcoml
mov
inc
fs
add
fdivr
outsl
ds
sbb
push
mov
or
jb
clc
push
ljmp
fimull
ret
mov
mov
aas
xchg
jo
adc
jb
mov
decl
jecxz
sbb
mov
xchg
hlt
mov
fwait
jmp
out
jno
cmpsb
stos
pushf
cmp
shl
adc
loope
in
pop
xor
cs
pop
scas
loope
dec
mov
push
sbb
pushf
cwtl
add
jbe
mov
std
outsl
ljmp
pop
and
cmpsl
insl
jo
hlt
aam
mov
outsb
inc
push
xor
jg
xor
fidivrl
pop
and
mov
adc
idivb
cmp
pop
andb
ds
add
mov
and
fs
xor
inc
or
hlt
sbb
rol
int3
hlt
aad
xchg
jnp
jmp
pop
fldt
int
cs
aam
repnz
adc
add
or
fsub
in
pushw
mov
inc
or
ja
cmpsl
mov
adc
lcall
add
shlb
push
inc
mov
cwtl
stos
lea
mov
xchg
push
mov
or
bnd
jmp
mov
jge
mov
lcall
je
loope
fdivrl
into
fcoml
test
mov
mov
mov
jl
lods
dec
ret
mov
arpl
fdivr
aad
inc
cwtl
mov
fwait
les
xor
gs
setg
cmp
mov
mov
jmp
into
sbb
jp
out
sub
and
inc
enter
push
gs
pop
lea
test
popa
and
ret
hlt
xor
pop
mov
push
cmp
aaa
fdivs
adc
add
popf
or
clc
adc
mov
sub
adc
out
lcall
sub
xchg
loope
ja
and
xchg
adc
add
mov
aam
jb
test
idivb
repz
loop
daa
fcomps
nop
popf
mov
aaa
gs
adc
daa
jg
mov
mov
aam
xchg
rorl
insb
out
pusha
mov
insl
ret
out
xor
cmp
flds
push
mov
or
sbbb
sbb
divb
sbb
std
nop
cmp
loope
and
jecxz
mov
jns
mov
jle
cmp
sub
add
addl
xchg
andl
outsb
xorb
pop
add
notb
fnsave
mov
ja
loope
pop
repnz
daa
push
xchg
mov
rclb
pop
or
push
in
cli
xchg
cmp
shlb
xor
jno
push
xor
sub
iret
push
dec
adcl
adc
dec
iret
lea
mov
shrd
bnd
mov
ret
dec
fbld
cmpsl
lea
les
popl
movsl
loope
adc
insb
pop
push
xchg
sbb
in
adc
in
xchg
jl
fs
shrb
in
jmp
pop
jp
pop
stc
sti
rcrl
jnp
imul
push
vcvttps2dq
pop
subb
popa
push
pop
stc
mov
mov
pop
sub
test
cmp
pop
mov
inc
pop
inc
rcrl
pop
sbb
hlt
adc
das
lock
cld
popf
sti
xchg
or
aaa
mov
jg
adc
fimuls
in
mov
mov
aad
inc
cmp
es
mov
loopne
pop
aaa
sbbb
or
pop
sbb
test
sbb
int
popa
push
xchg
int
insb
cmpsl
into
xchg
inc
mov
cmp
mov
daa
push
pop
mov
mov
outsb
bound
ljmp
jo
enter
pop
les
hlt
fstpt
add
inc
cltd
ss
cmp
scas
push
cwtl
mov
enter
push
incl
sbb
inc
mov
sbb
jb
jno
cmpsb
out
dec
sbb
push
rcrb
xor
jnp
rcl
xchg
push
jl
adc
jae
jo
sbb
mov
lret
incl
and
mov
xchg
push
mov
imul
and
fbld
adc
inc
add
leave
cmp
ss
arpl
ret
fldcw
cmpsb
mov
pop
mov
aad
ds
cmp
xchg
jl
add
aad
and
jle
sbb
mov
lock
inc
call
push
xor
popf
push
jbe
lods
mov
mov
fldt
adcb
aad
pop
lods
xor
jp
leave
mov
or
rolb
adc
inc
cmpsb
mov
jne
fidivl
inc
loopne
addr16
mov
xchg
mov
stos
es
mov
insb
add
cmc
xchg
pop
inc
andl
sbbl
rorl
cwtl
inc
and
mov
sbb
fwait
pop
fwait
loopne
shl
mov
push
stos
icebp
mov
outsl
fstps
bound
inc
call
push
dec
lret
test
add
cli
ds
out
xor
jmp
pop
arpl
pop
inc
mov
call
jecxz
fbstp
lds
daa
imul
lods
repnz
roll
xor
xor
push
mov
insl
dec
cs
jae
sti
int
mov
xchg
pop
inc
cmp
out
jg
ret
loope
jecxz
fsubr
cltd
sarl
enter
cld
faddl
movsl
jbe
xor
orb
xlat
dec
add
cmp
mov
scas
jecxz
push
andl
pusha
push
jno
mov
punpckhwd
das
ljmp
jne
jb
push
and
or
mov
imul
lcall
in
bound
and
out
aaa
inc
cmp
sbbl
hlt
mov
imul
pop
sbb
xchg
inc
in
in
sub
xchg
xor
in
orl
lods
or
xor
stos
add
ds
push
loope
jle
inc
inc
dec
cs
inc
sbb
pop
or
loopne
mov
jns
les
mov
mov
js
leave
or
gs
pusha
mov
stc
cwtl
loop
lret
pop
clc
push
xchg
gs
xor
loopne
push
pop
pop
pop
insl
xor
cmp
je
fisubs
popa
rorb
mov
fwait
repnz
in
sbb
cmpsb
iret
jae
orb
sub
out
rcl
mov
loope
movsl
xchg
loope
sahf
in
adc
pop
mov
sub
sub
jge
inc
adc
mov
pop
sahf
leave
jle
xor
push
cmp
jae
or
inc
frstor
sbb
ret
sub
dec
jecxz
leave
mov
jne
mov
inc
gs
sub
js
ja
add
ja
and
ret
pushf
sbb
fisttpl
adcl
bound
xchg
ja
scas
push
dec
int
and
aad
sbb
cld
insb
pop
dec
xchg
xlat
pop
sarl
mov
das
dec
sub
mov
sbb
mov
xchg
pop
lret
dec
cmc
pop
mov
aam
sbbb
rorl
mov
cld
or
jg
into
bound
loope
mov
push
xor
adc
nop
jmp
fs
pop
jns
push
and
mov
ds
add
inc
ffreep
std
cs
popa
xor
add
sbb
sbb
mov
lea
loopne
bound
out
mov
pop
jb
mov
dec
xor
inc
jo
sarb
jmp
or
mov
ficompl
dec
inc
push
cmp
das
clc
aad
jo
js
ret
inc
xchg
imul
xor
nop
std
push
imul
clc
or
imul
xor
pop
cmp
sub
andl
inc
mov
cli
jmp
pop
and
mov
cmp
lcall
xor
cmpsl
mov
or
sub
inc
xchg
sub
or
jp
or
mov
enter
cmp
jmp
sarl
jl
loop
dec
popa
xchg
xchg
out
sbb
div
popf
xor
sbb
lods
add
lock
lods
in
xchg
out
out
movsl
setg
shll
inc
jge
xchg
test
fcoml
mov
cmp
pop
xchg
adc
mov
mov
jb
inc
mov
rcrb
call
pop
jnp
test
mov
push
inc
filds
outsl
mov
jg
cmp
aas
add
cmc
mov
sbb
adc
dec
gs
rorb
cwtl
cwtl
mov
cmpl
pop
push
stc
mov
adc
sbb
in
sti
out
lods
push
insb
arpl
mov
js
mov
jmp
sbb
je
dec
jns
lcall
dec
sbb
mov
or
mov
lret
mov
stc
add
mov
ja
push
insb
sub
test
data16
mov
mov
sbb
mov
rcrb
pop
and
jl
adcb
xchg
out
jmp
test
test
nop
into
lcall
cmp
hlt
repnz
imul
pop
jg
cmpsb
sbb
roll
std
popf
imul
loopne
sbb
orb
dec
jbe
pop
mov
cwtl
add
or
je
dec
dec
loop
ret
mov
dec
jnp
jo
jge
mov
sbb
inc
cmp
aas
xchg
jp
cwtl
ss
inc
int3
push
test
cmp
or
in
rorb
fisubrs
pop
test
sub
lahf
lea
pop
sub
imul
mov
aaa
pop
jae
jbe
adc
pusha
jbe
dec
insb
outsl
push
fs
jl
adc
je
mov
and
cmp
pop
int3
jae
rcll
push
push
add
cs
inc
mov
imul
push
jb
mov
and
lds
rorb
mov
mov
inc
push
mov
inc
xor
mov
and
xchg
cmp
sub
insl
clc
sbb
imul
aas
pop
jg
es
or
int
cmp
cmp
and
xchg
arpl
adc
and
out
xor
mov
mov
adc
pop
ret
pop
dec
loope
jae
and
jo
shlb
or
xchg
and
cltd
mov
and
xchg
xor
lret
sub
pop
jl
iret
jmp
iret
adc
add
subb
add
fldl
mov
int3
lods
sbb
pop
mov
sbbb
jp
pop
sbb
repz
pop
sbb
test
fs
pop
adc
rcr
mov
push
das
daa
loope
mov
sbb
jecxz
mov
add
insb
sahf
jecxz
in
pushf
out
imul
mov
inc
mov
sarl
clc
addr16
lret
fdivs
inc
jecxz
push
mov
int3
mov
adc
push
loope
filds
movsb
lock
dec
loope
adc
or
movsl
fdivl
insb
and
pop
push
testb
mov
xchg
or
xor
mov
push
mov
scas
addl
add
orb
mov
mov
std
pop
xorb
out
push
popa
mov
leave
les
out
xor
add
push
cld
fsub
insl
cmpsl
rcll
sub
outsb
mov
sub
mov
inc
cmpsb
mov
adc
push
out
aad
sub
sbb
mov
or
or
mov
pop
loopne
xor
sti
jb
mulb
or
sahf
dec
ret
mov
leave
loope
mov
lret
sahf
dec
rcll
inc
loopne
cld
xor
or
jns
push
mov
and
mov
mov
insb
test
mov
divl
shl
xchg
pop
jp
jno
jg
cmpsl
aaa
mov
or
in
pushf
dec
int3
movsb
int
xchg
mov
jge
adc
or
sub
nop
adc
mov
mov
fbstp
dec
cltd
sbb
icebp
lret
dec
xchg
cs
xorl
dec
aam
mov
sbb
ljmp
sub
rorb
xor
mov
or
sahf
scas
dec
int
jmp
xlat
push
jne
pusha
lahf
enter
inc
add
jno
fdivrl
xchg
test
pop
loope
lea
packssdw
push
aaa
lods
fdivrl
xchg
into
test
fisttpll
mov
insb
pop
xchg
xchg
xchg
push
sbb
in
mov
sbb
neg
int3
js
mov
scas
imul
out
js
ja
das
sbb
mov
mov
mov
cmp
adc
or
rclb
in
incb
mov
inc
jg
jmp
popf
das
lcall
int3
xor
or
adc
sbb
sub
hlt
cmpl
mov
ss
xor
enter
pop
dec
cmp
lcall
cmp
add
mov
insl
in
jae
or
and
dec
mov
stc
ljmp
inc
call
les
dec
pop
loop
cmpsb
xor
pop
and
or
and
sti
lret
stc
lds
out
pop
in
popf
adc
lret
fdivrs
mov
scas
mov
push
lahf
and
hlt
mov
daa
and
pushf
in
daa
int
leave
fcomp
mov
jae
in
jmp
jecxz
push
jmp
mov
call
mov
ret
push
inc
ret
jno
loopne
das
movd
das
push
xchg
movsl
push
add
or
negl
jp
test
inc
cmpb
cli
cmp
xchg
add
rorb
jne
mov
iret
or
or
inc
xchg
int3
xor
pop
call
lcall
out
idiv
std
mov
call
stos
sub
inc
push
fwait
jmp
xor
pusha
mov
xchg
aam
dec
adc
jo
ja
mov
and
pusha
negb
push
mov
fisubrs
shrl
rolb
outsb
cmpsb
das
mov
push
xchg
test
lcall
fwait
cmp
xor
daa
push
jno
jne
pop
lcall
and
adc
jg
xchg
cld
pminub
adc
sub
das
pushf
xor
push
jae
pop
pop
loopne
jno
jno
movsl
outsl
jg
cmp
divb
adc
sbb
xorl
aas
sbb
dec
popa
lret
fistpll
cld
cs
sbb
lds
dec
jae
mov
imul
repz
dec
shll
pop
ror
add
fmull
ss
stos
push
imul
xchg
push
mov
lods
pop
lock
pop
rcrb
adc
dec
cmpsb
mov
sub
ja
mov
out
mov
sbb
fistl
je
outsl
xchg
insl
rcll
and
mov
inc
or
cmp
dec
lahf
mov
clc
ljmp
inc
daa
les
bound
adc
xor
fldl
cmp
shlb
mov
mov
aam
xor
xchg
push
and
sbb
addr16
arpl
imul
ror
push
cs
arpl
in
xchg
mov
sub
test
inc
cld
pop
mov
pop
mov
mov
jl
sub
int3
shr
daa
stos
cmp
inc
sarb
pop
shrl
aas
insl
pop
adc
out
ljmp
addr16
lret
iret
in
jge
jge
or
xchg
xchg
and
int3
or
inc
sub
int3
push
push
mov
bound
mov
out
cmp
sub
sahf
dec
fs
out
test
pop
loope
movsb
dec
cmp
cmp
ljmp
in
jb
lcall
lea
dec
and
inc
notb
loope
mov
mov
mov
jmp
inc
jno
mov
fdivrl
and
jne
jns
xchg
and
sub
into
add
push
xchg
or
je
sub
pop
lea
xlat
cwtl
or
add
pop
jp
dec
xchg
mov
or
push
jo
pop
enter
pop
out
pop
sbb
fdivr
mov
arpl
bnd
bound
mov
dec
xlat
push
in
lret
push
or
xchg
test
repz
jno
mov
pop
cs
call
lret
lahf
jecxz
jmp
jp
xchg
or
sbb
loopne
aaa
push
inc
mov
pop
dec
cmp
push
aam
pop
xor
sub
push
xor
out
xor
push
lcall
aas
in
jb
dec
cld
xor
adc
int3
mov
lret
pop
push
sahf
lock
nop
adc
ret
cmpsb
and
int3
mov
bound
pop
mov
mov
push
int
add
aas
shl
adc
sbb
cmp
int3
mov
jmp
sub
call
cmc
add
xor
movb
int3
sbb
test
sub
in
dec
fs
daa
adc
mov
fwait
dec
addb
dec
fidivl
call
arpl
cmpsl
js
inc
add
and
push
sub
or
mov
cmc
xchg
jne
rep
sti
sbb
xor
pop
outsb
xor
and
fildl
xor
iret
lods
repz
adc
aad
scas
cltd
orl
and
mov
add
icebp
test
mov
bnd
lret
mov
xor
xor
add
leave
dec
ret
jae
jne
adc
jge
xchg
lea
dec
xor
inc
sub
pop
or
dec
push
cmc
ret
push
or
dec
pop
shl
sbb
jmp
pusha
mov
sub
loopne,pn
iret
add
sbb
cmp
or
out
fcoml
lahf
push
mov
inc
or
dec
shll
cmpsl
pusha
mov
movl
cltd
or
int3
mov
fisubs
xchg
cmpsb
and
lret
enter
and
lret
cmp
mov
xchg
rolb
xchg
and
fiadds
adcl
mov
fistps
movsb
mov
out
sbb
mov
inc
jb
xchg
push
xor
jecxz
pop
add
cmc
scas
out
and
aas
pop
test
mov
incl
sbb
sbb
cmpsb
sahf
popf
sbb
gs
dec
mov
add
add
mov
test
xor
pushf
mov
inc
dec
pop
sbb
in
mov
xchg
dec
fists
int3
sbb
jmp
in
xchg
out
int3
arpl
fwait
push
mov
sbb
push
xchg
push
cmp
movq
sbb
xchg
lds
fmuls
das
ret
in
addr16
mov
call
mov
inc
sarl
jecxz
aam
mov
je
fisubrs
inc
fiaddl
xchg
out
or
pop
in
adc
sbb
dec
aaa
dec
nop
cmp
jg
lds
pop
xchg
mov
sub
test
out
jmp
ret
xchg
push
push
data16
insb
dec
mulb
cmpsl
jge
loope
scas
cmpsb
add
inc
call
pop
mov
sub
add
es
xchg
cmc
ret
cwtl
dec
andb
inc
sbb
arpl
lea
ror
rclb
in
and
sub
push
adcb
mov
pop
inc
ja
pop
rclb
out
enter
jp
and
addl
pop
sub
or
repnz
cmpsl
dec
repnz
adc
cmpsb
loope
cs
lahf
ret
mov
out
push
pop
repz
mov
jae
lret
std
jbe
jle
xor
xchg
and
mov
sbb
imul
xor
xor
sbb
pop
jno
push
sub
nop
sahf
adc
add
mov
xchg
mov
jns
pop
sub
popa
mov
mov
push
adc
ljmp
loop
imul
pop
and
jl
inc
inc
adc
mov
xchg
fwait
test
out
push
jle
and
mov
mov
les
movsb
dec
mov
outsb
clc
or
sbb
arpl
xor
cmc
hlt
popl
pop
dec
sbb
insl
cmp
mov
dec
inc
push
pop
imul
fldcw
in
mov
outsb
cmp
push
inc
notb
adcb
or
adcl
decb
sub
sub
loopne
addr16
fisttpll
lahf
push
sbb
popa
fmul
pop
dec
sbb
and
xchg
icebp
rorl
cs
mov
icebp
add
push
fnsave
mov
gs
xchg
mov
shl
orb
mul
stc
cs
shl
jo
popf
jae
and
sub
divps
out
jae
sub
push
std
mov
dec
les
roll
test
scas
mov
lret
cmp
dec
incb
or
ljmp
dec
xchg
movsb
in
stc
icebp
and
push
fnstenv
pop
cmp
add
aam
pop
xor
sbb
mov
cmc
leave
fistl
mov
fmuls
popf
and
dec
mov
cmc
xor
inc
dec
push
push
xlat
lret
enter
aam
data16
popa
aad
daa
loop
mov
sbb
pop
jb
jne
icebp
stc
pop
les
lea
out
pop
in
and
and
jmp
mov
mov
sti
clc
test
testb
repnz
mov
loopne
xchg
int3
popa
ret
int3
jp
data16
add
ss
fsubrl
push
inc
lods
xor
xlat
or
and
jo
clc
jp
ret
push
adc
stos
push
js
cld
xchg
inc
mov
mov
jg
mov
dec
movsb
mov
in
cmpsb
dec
xchg
lahf
fnstcw
mov
dec
cmpsb
sub
mov
movsb
icebp
xchg
and
adc
arpl
dec
inc
movsl
xchg
adc
xor
xchg
das
out
xchg
fidivl
adc
xor
mov
fldcw
outsb
pop
cmc
or
push
repz
sbb
push
inc
cmp
cmp
rcll
mov
lret
mov
mov
jg
in
mov
adc
enter
jle
inc
clc
cltd
or
xlat
xchg
inc
cmp
or
ja
adc
pop
or
or
ror
ja
mov
pop
fnsave
je
dec
stos
mov
pop
add
in
xchg
jge
in
lret
xor
inc
cmp
xchg
add
cmp
xchg
cmp
push
cmp
mov
jae
sbb
sbb
fdivr
add
mov
dec
repz
xor
fwait
aas
cmp
scas
pushf
test
jb
int3
xchg
stos
cs
leave
mov
sbb
fcomi
mov
push
add
add
adc
filds
push
aaa
jnp
fdivs
pop
push
jo
lret
stos
cmpsl
sub
cmp
xchg
xor
xchg
fldt
push
cmovl
mov
mov
mov
pop
mov
or
jnp
mov
mov
pop
lret
mov
jb
in
ret
cltd
dec
lds
aad
xor
ret
push
push
bound
stos
ret
jno
dec
out
or
mov
gs
lods
ret
add
vpxor
dec
mov
pop
pop
xchg
sbb
dec
sub
jge
push
mov
out
mov
into
xchg
movsl
cltd
push
pop
or
inc
adc
out
and
test
into
xchg
rorb
xor
mov
out
rorb
ja
push
and
adc
int3
scas
xchg
sbb
fisubs
mov
lods
cs
aaa
rolb
test
testl
ljmp
or
loop
jns
out
pop
scas
int3
xor
xchg
adc
das
addr16
sti
fs
lret
cmp
or
cld
mov
fcmovne
cli
out
mov
inc
sbb
inc
mov
inc
and
mov
mov
mov
and
sbb
push
dec
test
pop
mov
loopne
dec
ljmp
sbb
sub
imul
ja
pushf
pop
repz
mov
fs
push
out
dec
pop
mov
xchg
mov
push
dec
pop
jle
test
nop
cmp
ljmp
xor
out
in
inc
cmp
sub
jnp
cmp
push
pushf
xchg
mov
fs
dec
cmp
insl
aaa
pushf
rorb
in
push
dec
lea
adcl
sbb
lcall
mov
jmp
mov
repnz
cmpsl
or
inc
mov
aam
jne
test
jl
test
cmc
xor
pop
std
pop
jae
leave
test
jo
sub
fs
daa
loope
std
outsb
fwait
ja
sub
int3
cwtl
and
push
mov
or
bound
aad
pop
addr16
lds
adc
pop
inc
mov
xchg
mov
mov
cmp
add
testl
ss
enter
mov
idivb
xchg
dec
mov
loopne
or
pop
addr16
push
lret
cmc
ud0
push
adc
cmpsl
cmp
mov
fidivs
inc
shll
adc
mov
ret
test
mov
and
and
push
cli
enter
insb
fucomp
jns
jge
stc
test
loop
adc
mov
jbe
lea
mov
filds
add
in
pushf
imul
cltd
pop
outsl
shll
add
xor
scas
lods
imul
das
push
mov
mov
pop
addr16
mov
sahf
push
jp
scas
hlt
pop
jne
lcall
pop
pop
sar
aaa
das
xor
cmp
push
push
loopne
or
xchg
push
cmp
lds
sbb
cmp
or
out
and
loope
bound
pusha
dec
jne
xchg
cmp
mov
mov
sbb
in
mov
shlb
test
cld
mull
push
pop
fsts
pusha
shlb
sub
mov
push
push
stos
push
call
fs
imulb
mov
call
addr16
adc
out
cli
aad
aam
lahf
pop
aaa
cltd
mov
dec
add
push
xchg
loope,pt
cmp
sarl
jge
pop
pop
push
pushf
mov
fs
sbb
add
ds
dec
dec
nop
outsb
and
insl
lea
sbb
lock
lcall
sub
mov
lock
xchg
out
push
cmovb
popa
push
or
cmp
dec
loopne
outsl
loope
xor
jbe
sub
add
sub
lock
sti
mov
cs
jle
dec
mov
ds
shlb
stc
mov
jge
push
jg
sbb
sub
add
je
mov
or
cmp
jo
ljmp
popa
sub
or
add
scas
mov
pop
jg
icebp
out
adcb
into
mov
jns
test
loopne
outsb
lahf
and
push
lcall
in
pop
icebp
and
stos
cmp
shrl
das
test
dec
inc
insb
loope
dec
fwait
sar
or
add
mov
cmc
xor
outsl
sub
jns
jecxz
jp
outsl
in
cltd
sub
jle
sub
inc
lahf
jb
mov
sbb
sub
jl
sbb
jae
push
pop
js
cmpsl
int
jb
cmp
stos
xchg
mov
cmpsb
jle
push
sub
mov
xchg
call
inc
aam
add
add
lcall
cs
icebp
call
sub
ds
jb
mul
test
mov
sbb
mov
out
fcmove
sbb
and
insl
stos
das
inc
xlat
xchg
popf
mov
inc
rorl
mov
jecxz
xor
jle
lods
clc
mov
rorl
or
jecxz
and
mov
or
dec
in
mov
fwait
enter
aaa
xchg
lods
and
data16
ds
jg
xchg
adc
or
add
mov
lret
std
call
jl
dec
sbb
fstl
jb
mov
inc
or
add
adc
int
test
xchg
ret
pop
pusha
fsts
mov
out
sub
insl
pusha
call
arpl
jmp
mov
outsl
out
inc
mov
xchg
int3
mov
sub
xchg
sub
fadds
and
and
fnstsw
mov
cmp
push
rcrl
xchg
or
push
sbb
mov
xchg
xchg
cwtl
cs
or
pop
lret
jns
pop
mov
jns
mov
aam
push
cmp
inc
outsl
jae
leave
inc
cmpsl
out
push
dec
lret
cs
pop
pop
fdivs
stos
shr
or
sub
push
push
cwtl
and
test
fildl
rclb
aaa
cmpsl
sub
dec
fistpll
jg
out
sbb
clc
xchg
aam
and
orb
fiaddl
mov
cmpb
aad
jno
mulb
mov
jp
inc
out
into
out
test
roll
cmpsb
add
pop
add
adc
arpl
add
push
or
sub
loop
test
cmp
cmp
jge
inc
es
into
pop
test
adc
ret
cld
pop
les
loope
push
add
sysret
sahf
mov
xchg
dec
push
in
mov
and
iret
pop
cmp
cmp
sbb
sub
cmp
push
adc
and
shlb
orb
rclb
movsb
and
in
mov
in
dec
and
or
dec
sbb
js
mov
sbb
inc
aad
cmc
mov
jl
inc
hlt
mov
sbb
push
jbe
out
cmp
xchg
push
insl
sub
iret
add
adc
in
outsl
dec
int3
or
dec
fldt
psllq
ljmp
lods
jne
adc
push
pushf
or
into
add
ja
imul
xchg
pushl
outsl
int
stc
sarl
pop
mov
ficomps
jmp
sbb
dec
mov
repnz
mov
enter
xlat
jp
cmp
iret
sbb
inc
pop
es
and
dec
outsb
jns
imul
and
loop
ds
fsub
push
xchg
dec
and
filds
jbe
dec
outsb
mov
aad
jmp
repz
push
out
cs
aam
fs
les
das
cmp
lahf
or
sub
fs
or
iret
pushf
add
and
lahf
gs
pop
imul
icebp
sub
and
pop
cmp
jns
dec
mov
in
xchg
xchg
pop
sbb
or
loope
mov
jae
add
insb
mov
bound
sti
mov
mov
and
and
outsl
dec
dec
movsb
inc
xchg
dec
addr16
fisubl
mov
das
es
out
cld
aaa
xchg
xlat
stos
cli
jp
adc
pop
xchg
cmpsb
lods
mov
mov
cmp
arpl
or
and
sub
mov
daa
lret
push
xor
cmp
or
adc
push
loop
enter
addr16
sbbb
mov
and
jbe
repz
fldcw
lods
push
hlt
cmc
pop
mov
sub
mov
lods
aas
or
mov
mov
test
cmpsb
icebp
loopne
mov
or
lcall
mov
add
pop
dec
mov
push
xlat
int
mov
jb
xor
repz
ror
je
jb
jp
jno
pop
push
jae
mov
pushf
push
ja
mov
mov
jl
stos
cmc
sbb
loop
faddp
inc
out
lods
insl
repnz
pop
out
jbe
mov
inc
fcmovnbe
lods
cmc
ret
sbb
rorb
sub
lock
daa
pop
ds
aas
sbb
psrad
lock
testl
add
inc
pop
jg
lock
sub
repz
movsl
mov
nop
jae
hlt
cmpsb
lahf
pusha
in
je
out
call
sub
mov
mov
xor
aad
mov
xlat
xchg
push
gs
push
cmc
outsl
push
xchg
mov
mov
fdivrs
aaa
pop
push
or
outsb
and
cmp
pushf
cs
icebp
and
pop
ja
rorl
lock
ja
xchg
idivl
clc
and
les
mov
scas
in
xor
dec
pop
push
and
insl
pop
xor
mov
lock
loop
cmp
dec
rcrb
das
pop
mov
rol
in
mov
sbb
inc
cmpb
test
loope
out
mov
arpl
sub
sbb
push
gs
pusha
aad
popa
xchg
push
arpl
lret
in
adc
push
ja
test
add
pop
dec
dec
imul
dec
add
jp
aad
and
rclb
movsl
dec
clts
push
push
popf
fsubrp
movsb
clc
and
add
loopne
inc
js
jle
mov
repnz
inc
sbb
fldt
and
mov
iret
or
mov
pop
and
mov
dec
cmp
es
push
lock
jmp
sub
mov
in
outsl
xor
sbb
mov
xor
cmpsl
and
popa
scas
adc
jno
test
mov
jle
cmpsb
pop
jno
jae
inc
jg
jne
adc
das
sbb
daa
push
sub
bound
in
hlt
inc
mov
add
mov
sub
dec
xchg
push
mov
mov
call
lret
mov
inc
adc
jno
dec
add
fidivs
mov
jnp
imul
xchg
cmp
pop
std
xchg
fs
fldl
insl
mov
add
mov
adc
aaa
xor
scas
lret
sub
jecxz
test
lods
push
mul
insl
jae
cmc
adc
jno
xor
xor
jecxz
stos
dec
jecxz
cmp
push
add
dec
jne
xchg
in
test
add
mov
jp
int
notb
lret
mov
xchg
sbb
sbb
fsubl
jae
dec
fbld
cwtl
mov
fmuls
sub
pop
mov
inc
mov
test
adc
cmp
add
dec
mov
out
mov
inc
inc
or
ljmp
cmpsl
loopne
cmpsl
jns
sahf
loopne
out
push
or
jae
inc
pop
jo
scas
mov
sub
ret
mov
add
arpl
push
test
jns
js
and
push
cltd
ja
mov
add
xchg
ret
aas
sbb
outsl
mov
dec
fwait
push
jge
xchg
add
stc
sbb
mov
push
pop
mov
mov
dec
aad
pop
in
cmp
xchg
std
lock
insb
cmp
mov
stc
rol
mov
in
or
lahf
pop
shlb
popf
mov
add
jo
int
popf
movsb
out
icebp
adc
add
sahf
mov
cmc
cmc
sub
jo
inc
sub
xor
and
or
xchg
ret
push
add
popa
push
popa
shll
dec
or
cmp
lock
in
fnsave
pop
leave
mov
rcrb
fiaddl
into
outsb
cltd
dec
cmpsb
xchg
nop
push
in
in
andl
dec
ret
pop
mov
enter
mov
int3
mov
das
add
gs
sub
ss
lock
sub
lret
cmp
movsb
pusha
aas
test
jbe
cs
jecxz
loope
sbb
ljmp
jp
aas
aam
push
test
call
ljmp
and
jmp
mov
mov
lahf
aad
in
inc
push
mov
mov
daa
cmp
and
sarb
or
je
mov
in
aam
cmp
fs
or
movsl
cmpl
cmp
inc
mov
and
dec
dec
pop
mov
pop
imul
int
push
out
add
int3
sub
inc
test
and
fistpl
ss
in
lahf
pop
dec
in
xchg
loope
int3
fs
testl
jbe
sbb
fstps
or
jne
inc
mov
add
movsb
sub
mov
dec
xor
scas
dec
push
cltd
lea
leave
popf
mov
mov
out
add
adc
xchg
out
jmp
clc
push
dec
jo
cmp
loop
push
test
mov
outsb
lcall
push
cmpsl
insl
call
jb
stos
push
aad
shrb
jnp
add
sub
lods
mov
or
pusha
divb
loope
xchg
xchg
fldl
ss
add
inc
mov
das
repz
or
pop
scas
test
icebp
and
int3
das
aas
lret
push
mov
fmul
test
push
jmp
or
sub
xor
gs
xchg
cmp
push
inc
fsubrs
mov
ret
xchg
loop
and
push
ss
adc
push
fisubrl
xchg
clc
test
push
jne
aad
lret
sbb
and
in
mov
fstl
xchg
std
lret
pop
sbb
repz
rcrb
ret
mov
stc
js
push
or
push
leave
mov
sub
mov
aaa
cwtl
add
mov
bound
sbb
lock
cmp
add
nop
pop
sbbl
mov
in
pop
mov
jo
xor
sbb
scas
arpl
mov
or
inc
ss
mov
sub
addr16
xchg
xor
push
dec
lock
daa
cmpsb
stos
xchg
out
arpl
cli
jb
mov
mov
cld
add
mov
pop
dec
dec
jle
js
popa
fcompl
jno
pop
inc
dec
movsl
and
scas
ljmp
cli
fwait
lods
sub
incb
es
sahf
mov
mov
mov
in
das
cmp
inc
pushf
xorl
mov
loop
mov
add
cli
mov
mov
lret
movsl
stc
nop
sbb
mov
xor
pop
jns
sub
out
lds
pop
mov
loope
daa
xchg
xor
fcmovnb
cwtl
cmp
aam
xchg
lock
imul
sbbl
das
loop
xchg
lcall
loopne
mov
aaa
stos
mov
aam
aas
cmpsb
in
mov
xchg
xor
repnz
inc
mov
dec
je
mov
mov
sub
adc
xor
sbb
adc
aad
mov
dec
sbb
das
div
mov
adc
out
push
lds
sub
inc
or
lods
sbb
adc
mov
push
scas
ljmp
add
push
adc
and
lods
iret
adc
push
sub
push
scas
subl
push
pop
inc
lods
dec
and
and
fs
nop
ljmp
dec
push
cmp
mov
push
and
and
int
js
mov
dec
push
inc
adc
mov
andb
lahf
rcll
scas
sub
cmpsl
sbb
pop
push
lcall
fcoml
rclb
popa
mov
xor
hlt
or
add
cmp
jns
or
add
add
mov
cltd
jl
mov
jb
inc
mov
ljmp
test
popf
sahf
test
movsl
xchg
movsl
imul
lea
leave
jmp
fcoms
ret
xor
lods
fmuls
mov
fcmove
pop
cmp
test
push
test
adc
dec
mov
mov
sbb
mov
jecxz
mov
and
push
adc
inc
inc
and
sahf
subb
or
jns
subb
mov
adc
mov
scas
mov
inc
push
enter
iret
sbb
sbb
sub
xor
dec
stc
shll
inc
data16
fcmovnb
mov
out
enter
les
cmp
xor
mov
bound
test
inc
fnsave
ja
mov
sbb
cmpsb
pop
mov
and
imul
sbb
cmpsb
fisttpl
and
sbb
pop
gs
dec
call
mov
jmp
cltd
fstps
pop
pop
jle
sti
add
sbb
shll
movsl
jb
adc
clc
out
hlt
jg
and
outsb
stos
scas
lods
add
cmp
ffree
iret
loope
push
mov
and
popf
loopne
ret
andb
inc
clc
jae
jnp
outsl
push
cs
adc
test
idivl
stos
ja
adc
icebp
popa
lret
push
call
cmp
in
arpl
cwtl
repz
xor
xchg
or
int3
xchg
dec
mov
push
imul
push
loopne
and
pop
insb
stos
dec
js
xor
sub
leave
int
in
cmpsl
outsl
stos
test
lahf
cmp
and
jae
pop
aad
xor
and
mov
cmp
outsl
mov
outsl
dec
push
sub
mov
mov
mov
xor
dec
cli
mov
leave
jle
mov
xor
and
lds
addr16
test
add
jno
lock
xor
pop
sbb
mov
add
aad
mov
mov
pop
pushf
push
loope
push
orb
mov
cmp
mov
xlat
imulb
jge
sbb
xor
cmpsb
aaa
sti
adc
or
pop
pop
pop
add
mov
mov
inc
inc
loop
or
adc
xor
scas
rcl
gs
int
or
jecxz
cld
outsb
mov
mov
test
jbe
sbbb
lahf
xor
pop
fsubp
push
cld
les
mov
aam
push
mov
cwtl
out
push
mov
std
stc
xchg
in
subb
ss
pop
inc
push
insb
sub
addb
mov
fiadds
cmp
cwtl
inc
gs
or
mov
filds
mov
aas
adc
fdivrl
xchg
xchg
les
add
into
ret
sbb
lea
pop
dec
mov
sbb
rcrb
rep
or
rcrb
adc
inc
mov
mov
cmp
xor
sub
mov
jne
jecxz
cmc
and
mov
popa
sbb
aam
outsl
test
pop
pop
test
shl
xor
push
adc
insl
fidivrl
and
iret
mov
pushf
jle
lods
pusha
outsl
aas
mov
gs
in
call
inc
and
imul
mov
push
or
orl
into
ret
mov
mov
cld
dec
sub
into
inc
mov
cmp
cmp
pushf
aas
jnp
mov
ret
mov
test
insb
bound
insl
sub
dec
call
inc
jl
out
cmp
movsb
dec
cld
mov
int
adc
shll
int
pop
andl
cld
jne
loop
or
dec
jno
into
add
int
ja
add
pop
adc
ret
lret
movsb
bound
fsts
cmp
popf
fildll
jnp
xor
sahf
xchg
jl
test
jo
sub
mov
inc
outsl
xlat
sbb
and
dec
test
mov
mov
cmp
fwait
ja
addb
adc
add
mov
out
mov
pusha
sahf
sub
outsb
cmp
jae
outsb
jmp
pop
mov
arpl
mov
test
mov
sub
popa
jnp
imul
lods
test
adc
stos
xchg
imul
or
dec
insl
ja
sub
imul
mov
flds
or
lock
xchg
shlb
inc
xorl
subl
and
and
aam
jb
push
sti
je
sub
inc
pop
repz
orl
adc
dec
in
and
sub
out
fidivrl
icebp
test
xor
mov
jl
fs
xor
loope
or
movl
jp
dec
mov
pop
mov
mov
fwait
dec
pop
adc
pop
mov
or
jne
mov
stos
sub
xchg
call
xchg
push
jg
or
aaa
sbb
mov
xor
insb
clc
dec
movsb
fldcw
pop
mov
shl
call
lock
pop
mov
jbe
pop
sbb
in
imul
je
test
mov
rorl
push
das
dec
xchg
cmp
mov
xor
stos
sbb
sub
roll
cmp
icebp
dec
jge
mov
movb
mov
scas
xor
dec
or
or
mov
add
pop
mov
and
fisttpll
mov
jg
daa
cmp
xor
data16
mov
dec
stc
mov
mov
in
lds
icebp
aad
push
add
ljmp
adc
imul
faddp
mov
icebp
je
push
jge
mov
lret
test
shl
xchg
ret
or
cld
xchg
bound
xchg
hlt
stos
test
sbb
jle
rcll
inc
ljmp
in
push
mov
xorl
movsl
dec
xchg
jae
dec
or
adc
xchg
arpl
icebp
adc
xor
adc
pop
pop
imull
pop
add
or
sbb
push
fiaddl
and
push
loope
dec
vmwrite
fists
movsl
aaa
push
cmp
push
fwait
xor
imul
dec
mov
cmp
xor
in
and
sarl
add
sbb
mov
jg
pop
std
jo
inc
test
dec
mov
sub
inc
jno
xchg
cwtl
ds
dec
mov
push
outsb
das
add
add
clc
fisubrs
icebp
cmp
inc
lea
cs
sub
xor
cmc
test
add
add
shl
add
iret
mov
push
rorb
movb
dec
add
xchg
or
aaa
stos
notl
cmpsb
push
dec
dec
add
or
xor
mov
mov
loopne
je
aas
fildl
push
push
add
mov
xchg
scas
sbb
and
ss
ss
pop
pop
orb
mov
xchg
cmp
clc
jne
ds
loopne
loop
pop
scas
test
or
sub
rorb
push
or
mov
aaa
inc
out
test
dec
and
inc
inc
mov
pop
xchg
dec
adc
aam
mov
push
pusha
dec
pop
test
lret
mov
dec
js
arpl
in
sub
les
jp
mov
add
push
mov
icebp
xchg
lods
popa
orl
sub
sub
mov
jecxz
xchg
adc
or
adc
mov
sub
fnstsw
xor
das
xchg
jge
adc
insl
adc
dec
cmpsl
clc
arpl
loopne
dec
pusha
fstps
sbb
inc
hlt
orb
and
pusha
dec
pop
daa
jecxz
aas
mov
repnz
out
mov
outsb
jo
adc
mov
fstps
pop
pop
cmp
rcl
loope
lea
test
aas
sahf
iret
pop
sbb
push
jmp
and
stc
rcll
xchg
movsl
pop
std
popa
mov
stos
arpl
inc
pusha
in
call
pusha
lcall
rcll
call
outsl
mov
jmp
cwtl
loop
push
call
lods
xchg
lods
sub
aas
add
cmp
in
inc
insb
push
sbb
cwtl
scas
mov
sub
pop
sub
lret
push
dec
inc
call
loop
sbbl
hlt
jmp
rep
mov
inc
jg
lcall
out
inc
sub
add
pop
sub
orl
adc
stc
imul
addb
cmc
ds
xchg
cmp
in
lcall
imul
adc
and
mov
movsb
mov
loope
fsts
notb
sub
out
cld
mov
sbb
push
daa
mov
mov
insl
mov
stos
lret
fldl
fwait
popl
in
mov
imul
fcompp
in
popf
shrl
lahf
ret
mov
shlb
jle
sbb
call
loopne
push
sbb
icebp
sbb
ds
icebp
iret
je
andl
push
in
xchg
push
jmp
mov
mov
les
nop
mov
loop
movsl
cmc
cmp
push
jnp
ffreep
dec
ror
pusha
rorl
adc
push
inc
scas
jle
gs
into
fwait
cmp
cmp
icebp
mov
fiadds
sbb
movsb
pop
scas
push
pop
stos
mov
and
jge
jbe
data16
and
mov
mov
insl
lods
sbb
hlt
or
fnstenv
sub
pusha
adc
popa
mov
jo
aam
adc
fldcw
fstpt
inc
bound
mov
popf
xorl
cmpsl
lods
lcall
jbe
shrb
pop
sbb
xorb
popf
or
fs
mov
cmpsb
dec
aad
popa
mov
test
cmp
popf
fnstsw
pop
adc
out
pop
inc
addb
and
je
and
movsb
scas
dec
xchg
sbb
js
or
push
mov
sbb
ljmp
into
pop
test
cmp
mov
fstpl
adc
mov
dec
js
mov
cmp
cmc
icebp
ret
cmp
movsl
jg
push
subl
loope
cmc
nop
xchg
mov
lods
jg
ss
test
or
in
adc
sub
or
outsb
ljmp
test
mov
pop
mov
cwtl
dec
mov
insl
scas
mov
cmp
js
std
ljmp
stc
lcall
call
fcmovu
mov
adc
nop
cmp
ret
push
daa
test
icebp
jbe
sbb
xchg
xlat
jns
mov
lret
flds
sub
inc
pushf
push
dec
add
lahf
scas
cld
test
lret
fadd
lock
lods
outsb
inc
stc
sub
gs
and
out
insl
inc
jp
dec
jno
iret
fmuls
dec
fsubrl
push
dec
scas
dec
clc
iret
out
pusha
adc
out
sahf
dec
mov
dec
js
add
sbb
fcoms
iret
pop
stos
lock
add
push
cmc
or
filds
jbe
pop
addr16
inc
mov
adc
test
sub
adc
sub
daa
fbstp
int
out
or
xor
addr16
cmp
popf
push
fistpl
inc
mov
xchg
sahf
shlb
jecxz
mov
sub
jo
sarb
adc
scas
mov
pop
stc
jns
sub
mov
cmc
fnsave
test
pop
pop
push
xor
push
sub
lea
dec
xchg
cs
mov
lret
or
repnz
jbe
sub
cmpsb
and
pop
jne
cli
rorl
pop
push
aad
aas
add
cli
out
daa
mov
jo
dec
movsb
pop
mov
hlt
xchg
fwait
stos
push
and
dec
loopne
adc
push
mov
inc
xor
aad
push
test
mov
mov
sbb
fbld
repnz
push
add
jp
loope
push
xchg
xlat
add
shll
push
icebp
in
insb
std
push
ljmp
popf
ficompl
or
sahf
xlat
test
push
lcall
and
push
lcall
gs
sbb
and
adc
negl
out
hlt
cmp
mov
out
daa
aaa
into
mov
inc
mov
arpl
lret
push
sbb
push
cli
mov
add
sahf
in
adc
into
decb
aad
fldpi
neg
fistps
mov
test
push
into
jp
xlat
sarl
sub
xchg
test
out
out
rcr
mov
ret
loopne
mov
push
or
mov
sbb
lock
push
and
adc
and
aam
mov
leave
push
jo
pushf
outsl
ss
pop
adcb
sbb
mov
jo
enter
mov
cwtl
jbe
loope
out
lahf
jae
xor
test
inc
and
mov
scas
mov
sarb
imul
xchg
cmpsl
repz
out
xor
sbb
in
out
add
mov
enter
mov
lcall
sub
and
lock
and
or
xchg
jbe
dec
cmp
insl
aaa
ret
or
cli
out
adc
or
mov
push
test
push
das
fmull
jo
dec
xchg
out
inc
repz
ja
push
mov
lahf
adc
cmc
loop
mov
dec
int
sub
mov
pop
push
out
dec
mov
dec
pushf
and
pushf
sbb
push
sub
mov
mov
mov
loope
popf
pop
jecxz
out
or
lock
mov
push
xchg
enter
pop
fisubrs
std
insl
out
xchg
mov
dec
inc
xor
test
pop
mov
inc
movd
jp
mov
gs
enter
insb
adc
fisubrl
idivl
out
cmp
mov
les
adc
push
or
pop
pop
les
cltd
outsb
xchg
loope
sbb
lods
lods
stc
pop
adc
adc
ret
fdivs
and
shl
repnz
hlt
cwtl
dec
dec
fsubr
das
ds
jno
decl
push
sub
je
ret
pop
clc
in
and
pop
dec
out
ds
insl
or
pop
leave
inc
mov
jecxz
mov
mov
cmp
pop
stos
test
xchg
and
adc
push
jae
loop
shlb
aaa
push
pop
ss
outsb
mov
in
es
shl
xor
stos
cmc
adc
cs
and
mov
fiadds
es
nop
cmp
sbbb
add
xchg
mov
jo
andl
xor
mulb
sti
jb
xchg
mov
add
mov
cmp
inc
ja
pop
nop
negb
jle
sbb
fisubs
push
dec
test
inc
pop
addl
inc
sbb
or
mov
int
mov
jp
dec
dec
lret
adc
sahf
jns
orb
pop
mov
inc
mov
stc
jmp
cmp
in
sti
and
cld
out
push
jns
stc
mov
shrb
sub
sbb
stc
iret
push
push
and
cs
repz
popa
push
xor
pushf
mov
inc
mov
xchg
sbb
push
outsl
lahf
xor
insl
adc
pop
jg
jecxz
mov
fcompl
xchg
in
sub
sbb
push
mov
clc
cwtl
mov
sub
cmp
test
jae
pop
sbb
clc
pop
jmp
lds
mov
push
mov
jmp
xor
sbb
cmp
jns
lds
std
xchg
jmp
daa
addr16
lcall
stos
adc
test
nop
sbb
jle
je
decl
fnstsw
dec
adc
and
lods
js
out
out
sub
push
clc
sbb
pop
addl
cld
ret
xor
dec
xor
nop
push
stos
and
xchg
int
or
sub
jb
mov
push
or
push
fdivs
icebp
shl
mov
les
divl
ret
adc
jmp
xchg
jae
enter
movsb
jno
cmp
lar
cltd
inc
jle
and
les
icebp
pop
dec
test
push
dec
jae
popa
lods
pop
roll
pop
fldcw
pushf
sub
mov
fcmove
mov
pop
int
jne
insl
mov
xchg
filds
fwait
push
gs
cmp
add
mov
mov
outsl
addr16
and
add
int
xor
mov
addr16
inc
dec
xorl
or
push
and
dec
gs
stos
and
push
out
dec
push
jle
lret
pop
xchg
stos
repz
push
or
sahf
push
xchg
cmp
jl
cltd
or
test
dec
in
stos
repnz
pop
cs
ret
mov
js
sahf
gs
or
jle
cltd
or
test
or
push
xorb
push
leave
adc
mov
lods
les
cltd
add
jp
popf
lods
mov
int
push
xor
mov
and
pop
dec
lds
dec
les
adc
shlb
lds
xchg
iret
lret
scas
dec
insl
inc
push
add
dec
aas
sbb
mov
and
int3
mov
cmp
and
pusha
roll
movsl
es
xchg
or
fsubrl
scas
xchg
adc
push
inc
push
xlat
jo
loopne
clc
sub
jae
inc
mov
imul
in
cmpsb
test
mov
pusha
adc
and
and
outsl
jb
cmp
lahf
jmp
pop
pop
call
loop
mov
jno
sub
pop
ds
jp
push
aam
stc
fimuls
lea
enter
xchg
in
or
sahf
xor
lcall
mov
pop
fsubp
push
jb
jne
sti
xlat
mov
xor
dec
push
outsb
xchg
repz
adc
cltd
cmpsb
adc
add
aas
popf
cmp
jg
mov
mov
dec
iret
lods
out
or
aad
loop
outsb
mov
outsb
out
or
int3
mov
lret
fcom
add
fxch
sub
cmp
inc
dec
mov
xchg
fldt
data16
lea
jo
sub
cmpsb
inc
push
mov
jae
arpl
movsb
adc
in
popa
xchg
repnz
jecxz
ret
add
xor
xchg
sub
xor
add
sbb
popf
pop
sub
jns
adc
insb
es
popa
push
in
in
pop
push
add
mov
and
mov
xchg
and
ficompl
xor
in
ret
jb
mov
out
push
adcb
and
in
jnp
aas
jg
jbe
dec
pop
sbb
mov
sbb
jl
xchg
jae
imul
dec
out
adc
out
sbb
xchg
pop
mov
in
addb
sub
test
repz
into
out
mov
cmp
mov
std
inc
push
bound
nop
mov
test
jg
sbb
dec
pop
cmp
add
mov
inc
xor
add
sub
loop
mov
adc
outsl
jmp
insb
in
xor
xchg
icebp
mov
mov
dec
jecxz
jno
bound
lock
faddp
jecxz
rcl
mov
dec
inc
aad
sbb
lret
jl
fwait
xchg
clc
pop
lret
lret
arpl
aas
inc
mov
sbb
sbb
in
adc
mov
mov
mov
cltd
push
xchg
lods
test
pop
insl
cltd
lea
adc
into
lahf
and
sub
andnps
out
flds
xlat
outsl
inc
inc
rorb
cwtl
out
inc
filds
jecxz
sbb
cmc
mov
shrb
jle
int3
and
adc
movsl
scas
test
adc
insb
push
sub
xchg
pop
jnp
mov
xchg
pop
xor
inc
adc
xor
xor
mov
pop
fstl
push
imul
ficoml
loop
gs
jns
sub
inc
xchg
dec
jnp
imull
fistl
insb
int3
int3
call
xchg
imul
aas
xor
pop
mov
popf
leave
inc
movsl
push
call
stc
leave
push
insb
std
xchg
inc
repnz
addl
imul
int3
cmpsl
cli
int3
data16
mov
sub
lar
sub
lods
imul
jge
dec
fcmovnb
mov
mov
test
hlt
sbb
push
idivl
aaa
outsb
ja
js
inc
scas
inc
adc
js
leave
pop
fs
ds
pop
cmpsl
xchg
or
xchg
sbb
fistpll
clc
add
or
and
cwtl
inc
into
fldenv
mov
negb
add
idivl
imulb
add
cld
jns
push
daa
xor
enter
lods
adc
sbb
and
popa
loop
adc
pop
or
lds
mov
fldt
icebp
stos
mov
insl
mov
mov
xchg
pop
sub
mov
cmc
fisttpl
adc
mov
test
push
xor
iret
pop
sti
jb
rcrb
pusha
jns
shrl
hlt
or
jge
cmp
neg
push
dec
ret
add
pop
sub
xlat
mov
je
mov
mov
inc
ljmp
test
jnp
push
pop
movhlps
movsl
call
jnp
push
xchg
call
mov
sbb
jmp
sbb
test
mov
lret
adc
pusha
das
inc
xchg
lods
arpl
pop
inc
outsl
xor
imul
jb
push
mov
ror
sbb
fcoms
lahf
popf
movsl
xor
add
sub
imul
fldl
mov
xchg
mov
add
dec
cmp
ds
cmpsl
mov
pop
xor
cmc
scas
push
or
cld
xchg
js
out
push
orb
aam
cmp
mov
fldcw
cmpsb
lret
cmp
push
dec
push
adc
push
and
and
xchg
insb
int
jno
add
fsubrs
lods
push
fcompl
cmp
mov
aas
neg
sbb
stc
lock
dec
push
fsubrl
mov
push
js
jae
outsb
pop
aam
jnp
jmp
das
flds
cmpsb
push
popa
aam
loope
cs
inc
push
mov
xlat
data16
mov
jae
das
sar
int
pop
inc
cmp
fildl
push
mov
mov
mov
testb
out
mov
ret
and
xchg
jno
sub
dec
xor
popf
cmp
std
mov
imul
sub
mov
data16
cmp
pop
test
cs
xchg
push
xchg
fsubl
aaa
pop
ficoms
fwait
mov
mov
lret
je
push
dec
adc
lret
pop
in
lcall
clc
sahf
loop
lret
mov
es
adc
inc
sbb
jbe
mov
xchg
xchg
xlat
or
sub
pusha
adc
adc
sarl
lock
in
lods
mov
pop
fldenv
imul
and
lods
movsl
loope
ficompl
lea
inc
mov
call
ret
mov
stc
push
js
add
lret
jg
mov
push
outsb
shrb
ficoms
addr16
pop
inc
pop
daa
sub
movsl
push
or
or
xor
mov
inc
addl
add
cld
mov
mov
cmpsb
cmp
cmp
push
sbb
jge
xchg
jg
cmp
xlat
mov
cmp
movswl
outsb
adcb
xchg
mov
sub
cmp
insl
cmp
jecxz
pop
jge
hlt
rcll
dec
push
mov
xor
push
push
pop
mov
pop
adc
adc
mov
sbb
xchg
sbb
cmpsl
pop
jg
loop
xlat
and
dec
aaa
add
push
cmp
sub
or
mov
idiv
dec
cmp
mov
push
push
ret
fadds
loop
aaa
sbb
mov
xchg
and
mov
loopne
sbb
rcll
aam
mov
fwait
lds
jns
das
push
lret
mov
pop
mov
mov
xchg
pop
sti
lock
adc
gs
inc
lds
xchg
jg
xchg
jmp
push
inc
jnp
mov
aaa
jae
data16
cmp
xchg
mov
dec
dec
mov
data16
and
fstpt
jnp
and
outsb
inc
inc
loop
xor
iret
and
lahf
push
mov
cmp
inc
mov
xchg
in
ds
sub
les
inc
or
fdivs
jno
mov
jecxz
in
mov
cmp
das
dec
pop
dec
leave
popa
mov
sbb
mov
jmp
inc
mov
jle
das
pushf
je
mov
iret
or
and
pop
repnz
outsb
mov
xchg
rcrb
lea
and
push
xlat
and
out
or
lds
imul
leave
push
lcall
dec
push
jno
aas
ret
and
mov
or
in
adc
js
mov
jle
fnsave
cwtl
mov
test
inc
push
mov
jle
cmp
popa
dec
inc
xor
pusha
dec
mov
add
das
hlt
loop
test
sahf
sbb
outsb
add
jb
pop
mov
in
pop
or
cmpsb
jmp
pop
and
sbb
repnz
push
filds
sahf
jb
aas
into
aas
clc
mov
xor
mov
sbb
push
xchg
jg
fsts
lock
jns
or
addl
insl
out
leave
mov
in
cwtl
push
nop
outsl
dec
std
fstp
lods
mov
and
add
mov
add
jno
sahf
arpl
mov
mov
jle
aam
push
adc
mov
xor
sbb
dec
bound
sti
iret
out
or
shll
jmp
mov
cltd
pop
arpl
and
xlat
xor
cs
mov
and
inc
es
push
orl
pop
xchg
insb
adc
roll
cmc
push
popa
cld
pushf
stos
out
in
pop
mov
int
xchg
mov
cmp
lcall
push
push
fldenv
jno
xlat
mov
fs
cmp
loopne
xchg
vpunpckhdq
rcrb
popf
adc
and
add
repnz
fbstp
mov
imul
xchg
insl
mov
sarb
out
sbb
lock
and
xor
cltd
rcr
mov
mov
xchg
fstpl
hlt
outsl
sbb
cmp
lea
cmpsb
enter
jge
out
mov
mov
es
lods
and
js
lds
push
xchg
sub
addr16
andb
movsl
cmp
mov
rorb
nop
iret
in
mov
cmpsl
xor
ja
mov
jmp
pushf
aaa
adcl
mov
int
xchg
jl
scas
aad
insb
cmpsl
dec
cmp
notb
sarl
mov
lcall
or
rclb
mov
aas
std
jge
sub
cwtl
xor
add
lret
cmp
sarb
aam
jns
stc
inc
arpl
xor
cwtl
test
jno
fnop
cmp
pop
shll
and
mov
pushf
addr16
mov
mov
add
or
xor
and
cmpl
xchg
stos
mov
cmp
ret
popa
dec
push
inc
std
sbb
iret
cmpsb
aad
mov
cld
rcl
push
pushf
mov
in
sti
xlat
int3
fists
and
clc
scas
xlat
cs
aas
xor
mov
aaa
insl
mov
jno
cmpsl
fidivrs
mov
mov
cmp
pop
mov
daa
xchg
lock
jb
mov
shrb
pop
or
jge
or
sbb
xchg
inc
mov
pop
lret
or
mov
cmp
and
cmp
idiv
mov
push
add
or
frstor
lcall
movsl
jmp
push
sub
pop
cmp
inc
mov
adc
xor
jmp
pop
adc
lahf
or
inc
sbb
add
repz
dec
in
sub
fdivp
mov
adc
push
call
cli
xor
loopne
fdivr
xchg
sahf
mov
int
outsl
test
add
cwtl
mov
and
xchg
xchg
mov
adcl
jns
or
add
mov
mov
sti
jns
or
jge
cwtl
dec
pop
and
cli
mov
and
inc
test
ret
or
fdivr
mov
insl
mov
or
adc
enter
mov
push
mov
push
es
push
imul
xor
xor
scas
lret
into
ret
repnz
dec
iret
jae
adc
pop
adc
jl
clc
mov
jp
imul
mov
scas
push
adc
rcll
or
test
inc
rcrl
fsub
mov
cmc
int
mov
int
push
mov
dec
iret
xchg
or
pop
lea
and
testl
incb
xchg
leave
dec
outsb
clc
dec
push
push
movsb
pop
lock
mov
xchg
pop
or
cmc
add
dec
inc
leave
into
not
cmp
xchg
call
push
push
ljmp
fstl
xor
inc
jns
insb
addl
rcr
notb
or
insb
mov
repz
bswap
sub
rclb
pop
ja
cmc
pop
sbb
ss
xorl
mov
fistl
adc
daa
add
xchg
or
test
jns
add
stos
and
loope
jo
fnstenv
mov
sub
aas
and
lds
mov
addb
cmc
test
inc
dec
rep
es
ljmp
out
adc
inc
fs
movsl
add
xchg
int
mov
jle
js
dec
mov
stos
lds
jb
pop
movsl
in
pop
sarl
shl
mov
stos
nop
es
repz
cmp
or
leave
dec
stc
popa
jae
pop
orl
test
mov
and
aaa
popa
into
movsl
cli
je
sbbl
int3
ljmp
adc
jno
data16
dec
push
jmp
sarl
in
pop
lock
xchg
les
lret
test
mov
xchg
imul
fmulp
fildll
sub
inc
ss
mov
jmp
data16
cmpsl
push
jp
xor
fisubl
sbb
ds
int
dec
in
int3
cld
ja
push
insb
decb
aad
jbe
and
cld
push
cmp
cli
add
jmp
daa
dec
push
jnp
sbb
pop
in
ret
xchg
daa
repnz
pop
adc
cmc
nop
cmp
popf
sti
mov
mov
mov
push
push
and
addl
mov
ret
mov
data16
jne,pt
lret
ds
test
pop
pop
inc
cwtl
outsl
ljmp
dec
inc
xchg
pop
push
insl
mov
cmpsl
andl
push
outsb
sbb
cltd
xchg
xchg
pop
fwait
pushf
ja
mov
clc
push
out
mov
out
sub
dec
sub
lods
jmp
ljmp
xchg
xlat
dec
mov
into
sbb
push
sub
push
xor
sahf
mov
mov
clc
pop
sbb
ret
and
pop
das
mov
aaa
jno
and
dec
mov
push
mov
or
xor
icebp
enter
aas
sub
mov
jae
leave
bnd
jmp
sub
iret
ljmp
xchg
popa
loope
nop
dec
lahf
cmc
es
fs
cmpsl
sbb
pop
ja
sub
outsb
or
jecxz
loopne
push
or
or
mov
leave
pop
mov
mov
mov
data16
jp
fnstsw
shlb
xor
jle
add
sti
lods
icebp
inc
adc
pop
jns
aas
pop
jae
mov
jb
leave
inc
mov
pusha
mov
xor
dec
xchg
int3
xor
and
stos
dec
mov
adc
movsl
xchg
cmp
cwtl
sub
jmp
scas
sti
fisttpl
test
xor
cmp
subl
repnz
push
scas
and
in
movsb
stc
shlb
in
adc
sub
mov
lock
pop
cmp
repz
mov
test
inc
add
mov
inc
push
and
adcb
scas
lcall
sbb
lods
sbbl
scas
and
jg
mov
mov
pop
inc
xor
das
push
out
outsb
enter
pop
fimull
loope
fdivs
stos
pop
popa
and
es
repnz
jl
ja
test
lret
hlt
push
adc
xchg
insl
push
xorb
gs
cmovne
test
mov
popa
and
outsb
pop
inc
ljmp
dec
mov
out
add
jge
adc
or
lret
jb
push
and
xchg
imul
sub
loope
cmpsl
mov
add
popf
mov
pop
add
js
mov
or
sbb
inc
pusha
mov
jae
dec
sbb
add
pop
call
and
sbb
mov
clc
std
jns
mov
and
cld
xchg
inc
mov
pop
idivb
pop
sbb
or
jo
adcb
movsb
cmp
inc
or
mov
xor
sti
stos
push
jl
out
outsl
mov
inc
insl
sub
or
ds
jne
repz
mov
mov
pusha
fists
mov
js
ja
xor
jns
out
push
fldcw
push
push
push
arpl
inc
lds
mov
mov
test
add
fs
lret
push
insl
lds
and
cwtl
clc
out
dec
adcb
loope
xchg
roll
jp
sbb
stc
cmpsl
pushf
jno
dec
pop
fisttpl
mov
idiv
push
add
xchg
mov
das
jmp
sbb
pop
test
lret
xchg
call
push
fs
test
pop
rorl
sti
sbb
bound
arpl
xor
xchg
in
addl
pop
mov
xor
popa
lcall
pop
lods
pop
pop
jg
dec
je
mov
imull
add
dec
ret
test
sbb
xor
call
xchg
jmp
jecxz
jb
mov
movswl
test
add
cld
adc
bound
rep
or
pop
lret
push
xchg
push
adc
nop
mov
cmp
outsb
stos
filds
les
inc
mov
jo
mov
and
cmpsb
or
fadd
inc
iret
and
or
sbb
and
xor
test
inc
cmp
movb
ret
cmp
dec
cli
fmul
sub
adc
inc
inc
mov
mov
aas
mov
movsb
xor
fwait
jge
mov
dec
sbbl
lods
outsl
xor
inc
mov
mov
cmc
jo
and
push
stos
outsb
daa
cmc
mov
fwait
pop
push
mov
pop
dec
daa
pop
jmp
dec
movb
or
outsb
fidivrs
insb
mov
pusha
jmp
subl
call
out
jecxz
adc
pop
dec
ret
xor
pop
mov
cwtl
sub
cmpsb
jb
adc
lret
dec
jae
shl
xchg
loop
loopne
daa
xchg
jb
sub
hlt
sbb
jmp
les
sub
sub
xor
push
lock
insl
sbb
fucomip
push
mov
lea
push
rcl
jo
mov
insl
negl
add
push
outsl
jl
stos
popa
insb
pop
adc
or
mov
sbb
cmp
lcall
jmp
adc
mov
in
pushf
jecxz
stos
cmp
mov
sbbl
test
arpl
and
pop
and
xchg
push
push
mov
add
sub
mov
sbb
dec
xchg
sbb
xchg
lea
rcll
dec
add
incl
out
mov
idivl
sub
dec
dec
filds
into
push
add
or
in
lcall
movsb
cmc
xor
ja
fsubl
jne
imul
xchg
leave
mov
out
push
cwtl
cmp
sti
cmp
mov
insb
cmpsl
xchg
dec
mov
and
es
adc
movsl
jne
pop
mov
pushl
ljmp
push
icebp
push
add
add
xchg
out
or
nop
push
xor
xor
ret
shrl
mov
mov
add
js
or
add
cmc
xchg
fadds
cld
mov
inc
testb
popa
fildl
loope
mov
pop
cwtl
push
dec
xchg
xchg
lret
mov
push
fld
insb
xor
fstp
push
pop
mov
push
addr16
pop
dec
or
lock
sub
dec
jle
dec
mov
imul
fildll
fidivrs
stos
adc
mov
pop
lds
loop
xor
xor
jno
inc
in
cld
sbb
fmull
pop
fstps
mov
je
mov
adc
sub
lcall
and
or
icebp
pop
insl
iret
sbbb
dec
enter
inc
and
mov
lret
cwtl
cmp
xchg
arpl
popa
pop
nop
ret
jle
lret
cmp
sub
or
mov
sbbb
cmp
orb
lds
ja
fldenv
xor
push
or
xchg
out
adc
int3
sbb
sti
stos
mov
test
jg
stos
mov
xchg
ret
adc
aaa
inc
shl
and
and
mov
mov
fistpll
lahf
cmp
cld
pop
dec
lahf
push
and
xchg
add
jecxz
lea
adcl
add
ljmp
xchg
loop
inc
mov
mov
mov
mov
sub
xchg
jp
pop
in
xchg
int3
add
in
insl
add
lcall
aas
xchg
xchg
repz
mov
dec
inc
mov
fistpll
cmp
movsl
pusha
cmp
jmp
mov
xchg
sub
int3
inc
dec
xor
ja
clc
leave
adc
jo
and
jecxz
mov
pushf
mov
repz
jl
addr16
jnp
aad
mov
iret
das
mov
mov
mov
pop
jge
add
repnz
mov
push
in
sbb
dec
pop
pusha
push
es
aas
popf
mov
dec
pop
add
fwait
idivl
lcall
xchg
aaa
dec
dec
mov
push
adc
lahf
mov
enter
divb
push
inc
stos
stos
jnp
push
sbb
xor
lods
jp
adc
adc
rclb
inc
fnsave
sub
adc
xor
lahf
inc
int
xor
aaa
mov
mov
adc
jbe
insl
or
mov
dec
movl
mov
inc
pop
mov
fisubl
fimull
push
out
pushf
mov
cmpsl
xchg
jp
sbb
rcrb
jbe
xacquire
jno
scas
into
add
push
jmp
xchg
sets
rcrl
outsl
je
int3
cmp
mov
xor
je
cmpsb
pop
cli
and
cld
dec
test
daa
sbb
loopne
aam
lret
rorl
xchg
aam
pop
ss
adc
xor
xchg
enter
popf
mov
lds
xchg
fisttpll
test
and
incl
and
inc
lret
movsl
jge
adc
ljmp
mov
or
xchg
jl,pn
sbb
popf
mov
or
cmc
adc
iret
fidivl
out
out
jmp
push
aaa
in
out
jle
sub
int
sbb
insb
mov
mov
loop
mov
ljmp
icebp
pop
in
movsb
xchg
add
cmp
dec
sbb
out
lods
cmp
lock
dec
jae
and
fimull
scas
add
xchg
data16
call
sub
test
shr
pop
pop
dec
inc
cli
xor
add
push
inc
xor
daa
cmp
sbb
stos
sbb
pop
adc
mov
addr16
or
push
ds
mov
cmp
push
ds
addl
mov
jne
mov
xor
push
addb
fstpt
sbb
shr
gs
and
mov
sti
fsubrs
cmp
in
aaa
int
rclb
dec
fstpl
pop
rcll
inc
push
fidivl
neg
gs
pop
and
clc
insl
loopne
push
in
in
sub
iret
and
push
std
in
idivb
inc
adc
cmp
test
inc
add
negb
mov
sbb
cmpsl
repnz
mov
pop
loop
leave
test
stc
sbb
ljmp
xchg
xor
push
push
ljmp
arpl
fdivs
sub
sbb
rorl
or
add
arpl
das
cmc
int3
xchg
lods
enter
pop
popa
xchg
insb
sbb
push
das
xchg
iret
and
testb
sarb
adc
mov
cmp
cwtl
push
arpl
jp
fmul
aam
xor
es
out
mov
nop
sbb
into
or
sub
ja
pop
call
shrb
mov
jmp
mov
pop
fwait
dec
cmc
fisttpll
push
adc
cmpsb
mov
test
pop
adc
jge
dec
mov
fdiv
xor
jno
add
shlb
lea
in
xchg
inc
shll
push
fprem
fists
dec
inc
jg
data16
icebp
dec
adc
jmp
push
sbb
mov
jne
ror
mov
leave
cmc
push
aaa
and
popf
pop
fidivrl
push
outsb
nop
stos
test
int3
xchg
xchg
mov
jl
stc
mov
mov
or
push
loopne
sahf
xor
inc
js
fists
and
sub
mov
sahf
icebp
add
scas
shrb
xchg
sbb
xchg
imul
and
xor
xchg
and
pop
pop
inc
jmp
popa
sub
cwtl
cmc
bound
add
xchg
sbb
cmc
mov
and
aad
cmp
ret
daa
pop
shl
adc
ficompl
roll
lock
pop
aam
push
fsubrs
mov
stc
les
adc
orb
xchg
mov
xor
test
xlat
mov
jle
mov
fsubrl
rcll
jecxz
mulb
pop
pop
pop
xchg
sub
idivl
les
ret
cli
pop
popf
shlb
sbbb
mov
jmp
into
data16
aas
ss
sti
lea
mov
insl
sub
push
outsl
xor
ret
pop
xchg
sbb
cltd
test
pusha
in
mov
dec
mov
pusha
pusha
xchg
into
out
push
mov
jne
push
lahf
lret
in
and
stos
clc
mov
and
adc
sbb
outsb
invd
or
xor
std
sbb
addb
mov
jnp
ss
into
sbb
jb
cmp
jl
mov
jecxz
push
cmp
inc
pop
jle
jecxz
xor
mov
pop
test
mov
out
popa
push
scas
adc
or
pop
cltd
outsl
aam
aam
pop
sbb
call
inc
fnsave
and
test
sbb
pop
and
fisubs
xchg
repz
cmp
dec
jae
es
pop
or
or
in
rclb
inc
sub
push
mov
ja
dec
mov
test
push
jg
xchg
lret
and
insb
mov
sub
ficoml
int3
push
and
pop
push
rep
jnp
jae
xchg
in
push
sbb
cmp
mov
sahf
sub
xor
inc
xor
xor
fwait
aad
cwtl
xlat
lock
arpl
ret
scas
ljmp
test
das
adc
cmp
sub
test
dec
cmp
cmp
lock
pop
shrl
imul
sbb
push
mov
scas
add
sub
push
cmp
inc
push
pop
iret
outsl
movsl
mov
gs
push
add
push
xor
jge
imul
clc
cld
xor
xor
xchg
sbb
test
pop
sub
cs
and
sahf
xlat
sub
pop
aaa
movsl
dec
hlt
shll
repz
cs
add
lahf
in
loope
or
decl
push
xor
cmc
dec
stos
stos
out
dec
pop
aad
cmp
into
cltd
data16
in
adc
mov
push
cltd
mov
ja
pop
xor
insl
stc
pop
push
fstpl
lods
cwtl
inc
fadd
cmpsb
loope
iret
sub
aam
aas
cmp
mov
pop
jo
loop
enter
cmp
mov
lds
jo
xor
pop
adc
mov
jo
sti
push
lock
mov
popf
scas
push
cmpsb
rcr
pop
and
aas
pop
or
fs
scas
add
or
push
les
mov
adc
mov
outsl
and
mov
fdivl
jp
mov
scas
enter
stos
add
fwait
popf
mov
iret
jl
adc
push
mov
sub
int3
mov
mov
insb
scas
mov
or
sbb
icebp
data16
incl
imul
xorb
push
jp
stc
stc
scas
pop
mov
mov
adc
mov
aaa
xlat
add
xchg
sub
leave
xchg
outsl
add
das
pop
int
popf
orb
lcall
jl
sub
sub
insb
xchg
adc
icebp
ret
sbb
cmp
aaa
mov
sti
pop
mov
shll
sbb
ss
std
inc
std
pop
pushf
push
sahf
cmpsb
sub
fidivl
cmp
hlt
jge
add
xlat
imul
or
repz
pop
pop
mov
repz
xchg
test
mov
pop
cmp
mov
rcrb
mov
pop
xchg
inc
and
test
and
cs
loopne
sbb
pop
aam
rol
push
imul
test
hlt
addr16
jo
dec
mov
aam
enter
gs
cmp
movsb
icebp
pusha
dec
xchg
sbb
or
sbb
push
add
mov
mov
shlb
xor
xor
push
call
shrl
aad
fwait
out
fisubs
mov
sub
aad
addr16
int3
push
add
adc
and
incl
jb
stos
cli
in
imul
aaa
push
pop
push
mull
adc
sub
jmp
loopew
cwtl
or
sbb
or
pushf
xlat
cwtl
mov
cmpsb
ficoml
sar
xchg
xor
insb
jmp
scas
adc
sarl
ret
push
loope
xchg
and
sub
sbb
out
mov
pop
pushf
push
lcall
xor
ds
bound
pop
sub
adc
icebp
sbb
dec
imulb
js
ss
and
es
loopne
jae
and
sti
pusha
repnz
adc
in
and
loopne
mov
or
stos
jecxz
or
mov
pop
mov
and
sbb
lods
cmp
pushf
jecxz
sub
iret
lahf
dec
sub
sbb
enter
lahf
inc
les
iret
mov
xchg
xchg
fsubrl
pop
fdivs
imul
push
jb
mov
lret
mov
inc
test
cmp
push
add
pop
mov
sbb
out
movsl
inc
adcb
mov
adc
mov
and
adcl
insl
push
imul
dec
pop
xor
in
je
scas
jo
ja
pushfw
daa
xor
xchg
jl
pop
xchg
iret
int
arpl
insl
rcrl
and
push
mov
pop
stos
into
mov
mov
cmc
cmpsl
cmp
sub
fwait
cmp
xchg
sbb
pop
ljmp
jno
adc
cmp
push
sub
sarb
jb
sbb
fnclex
cmpsl
or
not
xor
test
pop
or
mov
jb
lret
lock
arpl
addr16
vpunpckhwd
lcall
movsb
fldenv
test
push
sub
and
ds
and
in
pop
divl
call
in
ja
mov
jg
nop
fs
jecxz
call
cwtl
push
add
repz
ret
or
inc
jmp
mov
int3
hlt
cvtdq2ps
addl
inc
arpl
pop
xor
pop
das
cmp
inc
inc
mov
cmc
sub
push
or
fcompl
out
pop
std
into
popl
ret
test
ljmp
jmp
pop
shlb
cmpsb
mov
subb
fdivl
incl
pop
iret
mov
fdivs
dec
cld
aad
and
js
mov
mov
pop
mov
cld
and
pop
dec
loopne
mov
stos
test
into
jl
dec
pop
inc
push
enter
clc
mov
or
jo
lea
test
mov
sub
xchg
test
adc
ljmp
xor
jecxz
mov
shrb
xchg
jbe
test
int3
cmpsb
loope
jl
out
pusha
jecxz
aam
bound
lods
jnp
mov
je
icebp
and
mov
bound
push
sub
out
fstpt
enter
and
dec
lret
int3
jg
les
lea
dec
pop
rolb
in
lds
xor
cmpxchg
je
xchg
pop
cmpsb
test
mov
aaa
mov
mov
fcomp
fiaddl
ret
and
jb
push
loope
pushf
inc
mov
sahf
cltd
je
xor
fistpl
sbb
lret
imul
leave
sub
in
sbb
in
push
mov
push
shr
mov
add
lds
inc
sub
push
ret
nop
outsb
or
jle
push
test
aaa
or
pushl
les
icebp
fsubs
push
ret
das
int
xchg
sahf
xor
mov
or
and
les
ret
fs
push
jne
clc
push
inc
mov
pushf
add
jns
leave
andb
fstpl
mov
push
cmp
and
mov
dec
aaa
leave
xor
sub
rcr
repz
cmc
ror
inc
mov
mov
ljmp
xor
fdiv
lods
std
or
lods
shll
pushf
fnsave
divl
fst
shll
xor
lods
loop
add
cmp
inc
test
daa
add
xchg
movsl
in
je
or
mov
repz
pop
mov
call
push
xchg
leave
aam
lds
sbb
into
das
pop
lods
fildl
xlat
test
inc
jb
sub
jmp
inc
movsb
adc
aam
mov
ljmp
sub
adc
aas
jp
xchg
imul
mov
xchg
xchg
nop
repnz
mov
jo
sub
mov
push
in
or
aaa
shlb
jno
ret
mov
imul
sub
lock
loopne
gs
and
lret
insl
in
dec
insl
mov
fsubp
cmp
fidivs
into
outsl
mov
fidivl
je
xchg
inc
jmp
repnz
loopne
mov
in
mov
or
pop
lcall
test
sub
fwait
mov
inc
mov
stos
lahf
xchg
mov
std
push
push
sub
inc
icebp
adc
or
insb
push
adc
test
sbb
xor
popf
and
dec
stc
or
or
mov
in
shll
sbb
dec
push
add
xchg
in
sub
push
cmpsb
mov
pop
dec
dec
jmp
push
jnp
mov
addr16
push
je
sbb
je,pt
adc
adc
mul
sahf
in
outsb
call
out
pop
fucomip
lret
cs
cltd
loop
scas
mov
outsb
out
adc
mov
jmp
fcomps
sub
jbe
jmp
in
jl
stos
enter
adc
add
out
inc
mov
pop
je
addr16
inc
aaa
out
jne
clc
or
jle
jo
outsb
jle
pop
mov
mov
push
xor
jne
out
lock
jo
outsb
xor
push
sbb
mov
inc
out
movsb
push
dec
jp
enter
ja
in
dec
dec
pop
sbb
pop
pop
stc
jp
jecxz
adcl
gs
aaa
data16
xchg
loope
cli
push
in
imul
mov
gs
sub
int3
xor
push
jnp
xchg
xor
leave
inc
xchg
or
xor
xor
mov
inc
xlat
sub
and
daa
lock
pushf
cmc
inc
mov
dec
push
inc
test
mov
imul
cwtl
andl
pop
arpl
ret
jp
hlt
mov
mov
sbbl
pop
decb
xlat
daa
jns
push
outsb
jns
cld
xchg
loope
imull
cmp
inc
cltd
movsb
outsl
cltd
fwait
mov
push
xor
xchg
enter
shll
mov
jmp
mov
out
cltd
add
and
gs
pop
xor
imul
cmp
stos
mov
mov
pop
out
outsb
jp
call
insl
jb
das
jecxz
xor
clc
add
cmp
jne
jne
adc
addl
cmc
divl
dec
sub
adc
int3
cmp
call
fsubrl
xchg
xchg
loope
sbb
mov
push
push
movsl
aaa
push
xor
in
dec
int
xchg
mov
fwait
int
xor
add
mov
sbb
push
cld
out
std
mov
xlat
mov
xor
mov
inc
outsl
cmp
and
orb
out
int
out
ret
cmp
xchg
test
jne
cvtps2pi
cli
pop
pop
dec
call
mov
sub
lret
cmpsl
cmp
jb
jp
inc
pop
scas
movl
inc
dec
mov
xchg
or
xchg
mov
inc
repnz
push
inc
icebp
jo
adc
cmc
decb
or
pop
jecxz,pt
mov
int
fbld
roll
fwait
imul
mov
inc
int
ds
mov
fldln2
rep
mov
int3
in
mov
jle
shl
aad
add
xchg
inc
push
jae
mov
pop
fcmovnb
xchg
mov
out
pop
loope
mov
stos
jmp
mov
adc
mov
jge
or
jnp
gs
ret
pop
cltd
mov
out
cmp
push
sbb
jns
or
stc
xchg
inc
mov
ficoml
inc
popa
out
test
add
pop
mov
mov
xlat
pop
addl
xchg
push
sar
ror
sub
and
lea
jns
sub
mov
mov
cld
jecxz
add
adc
sub
xchg
mov
popl
fistl
jo
push
sbb
lahf
mov
and
push
ja
out
or
pop
or
idiv
mov
dec
cltd
fcmovnu
adc
dec
shr
pop
and
push
push
jmp
lea
scas
popa
inc
sub
fucom
mov
lds
add
aad
mov
loop
add
fisubs
pop
push
shlb
or
jge
cmp
xchg
and
cmpsl
add
stos
inc
xor
lret
pop
push
push
dec
pop
xchg
xchg
lods
sbb
pop
scas
cmpsl
mov
repz
adc
lds
add
mov
add
push
imul
jle
arpl
pop
ds
rol
push
mov
or
xor
cmp
mov
xor
pop
pop
pop
fsubrs
loopne
mov
pop
cmp
sbb
fdivl
out
and
mov
mov
push
out
push
sbb
daa
stos
push
cltd
jg
rclb
call
movsb
add
and
mov
std
dec
dec
mov
test
jp
out
icebp
push
arpl
pop
fdivrl
push
xor
inc
push
hlt
mov
mov
mov
add
fistpl
mov
fwait
fwait
stos
jl
push
popf
push
inc
repnz
mov
xchg
mov
repnz
dec
xchg
sbb
cld
sub
scas
stc
cmp
popf
pop
jmp
pop
adc
mov
jae
in
decb
add
xchg
push
mov
mov
push
add
outsb
xchg
sub
inc
xchg
pop
test
pop
push
pop
jg
jg
or
ss
imul
imul
add
jge
mov
out
xor
push
out
jns
xor
add
push
test
aad
and
mov
push
cmp
in
lock
push
shll
stos
out
mov
test
cmp
aam
pop
jnp
dec
imul
mov
cmc
stos
pop
test
gs
add
jle
aad
xor
push
add
stos
fdivl
ret
xchg
ret
dec
pop
dec
or
jl
enter
imul
xchg
mov
out
jne
call
xor
mov
pop
jnp
test
daa
aas
repz
pushf
sub
pop
mov
xchg
out
jns
cmpsl
mov
std
cmp
out
cli
jo
sbb
out
jmp
adc
loop
xchg
repz
popf
cli
in
ret
pop
pop
in
xor
dec
repnz
or
scas
ja
push
pop
jns
subl
gs
test
mov
lahf
and
adc
pop
loope
inc
pop
movsb
outsb
xchg
inc
pop
inc
sbb
ss
sub
lret
and
push
mov
adc
xor
fwait
pop
loope
aad
jnp
lret
imul
mov
pushf
xlat
cmp
insl
outsb
push
sub
addb
das
lods
mov
push
out
outsb
popf
or
jns
inc
jbe
scas
and
sbb
xchg
inc
call
mov
out
and
jne
mov
xor
jmp
adc
dec
and
cmovbe
push
xor
sub
pusha
xlat
jns
out
pop
popf
and
leave
jbe
clc
inc
out
mov
pop
sarb
pop
cmp
into
outsb
push
gs
push
xchg
je
cltd
loope
ret
shrb
mov
xchg
adc
stos
cmp
inc
out
and
add
or
jp
add
jp
lods
ret
push
mov
dec
js
push
fstps
jno
sarl
jbe
cltd
fstpt
add
cs
ja
ds
lahf
sbbb
mov
or
cmpsb
jne
push
jae
movsl
and
xor
les
fdivrl
sahf
push
mov
mov
nop
fadd
pop
js
aad
fisttps
sub
arpl
shrl
inc
mov
xor
dec
and
cmp
sti
out
rcl
dec
jnp
inc
nop
cld
fdivl
dec
outsb
std
sub
lret
and
mov
jg
movsb
xchg
dec
inc
orb
and
jmp
or
lea
jge
fcmovnb
xor
jge
sbb
faddp
lds
addb
popa
pop
sub
cmp
fwait
roll
mov
pusha
test
aam
cmpsl
adc
push
fwait
loope
sub
scas
movsl
mov
xlat
pop
adc
test
jno
notl
dec
xor
or
das
xchg
fstpl
hlt
notl
stos
das
xchg
repz
xor
jmp
aad
inc
js
lret
lods
fld
mov
leave
or
sbbl
repz
pop
inc
dec
xlat
add
mov
call
xchg
out
cmp
dec
or
dec
sub
jge
mov
cmc
sbb
fistl
lret
mov
fsub
arpl
sarb
scas
and
jne
cmpsb
pop
icebp
icebp
push
mov
aad
mov
mov
cld
mov
in
cwtl
cmpsb
cltd
adc
mov
sub
mov
cmp
xchg
cmpsl
xor
mov
int3
jmp
push
cs
icebp
push
push
xchg
insl
xor
adc
outsl
aas
out
xor
int
adc
xchg
in
mov
adc
adc
out
mov
push
ja
into
lea
push
mov
popa
mov
xchg
add
xchg
shr
cmp
xorl
cwtl
sub
mov
out
jmp
push
pop
outsb
mov
in
mov
push
insl
out
popa
push
xchg
fdivr
push
loope
loop
bound
nop
arpl
push
insb
pusha
push
imul
xor
je
pusha
movsb
push
pushf
and
dec
mov
jecxz
fwait
jbe
or
test
or
sbb
repz
outsb
popa
iret
inc
outsb
sbb
sbb
ret
jp
pop
aaa
mov
daa
jb
pop
xchg
daa
xchg
xor
or
push
ja
mov
fstp
mov
xchg
push
aad
scas
in
xor
xchg
jmp
popf
pushf
mov
push
xchg
xchg
mov
push
imul
push
scas
adc
xor
mov
loop
mov
or
daa
sub
out
lea
lock
cmpl
fnstsw
mov
jb
js
jae
ljmp
push
push
xchg
sbb
mov
mov
stos
out
jae
or
in
jne
fimull
ret
decb
lahf
jb
in
dec
sbb
or
mov
mov
cmpsb
sti
gs
mov
xor
jb
sbb
or
and
xchg
loop
pop
aad
clc
mov
js
jl
test
fnstenv
mov
jbe
int
cwtl
es
xchg
dec
dec
stc
push
jne
stos
mov
adc
aam
xchg
nop
or
cmpsb
aas
in
push
lea
adc
movsl
in
dec
xor
stc
fistps
int
cmp
nop
call
dec
xchg
add
std
clc
sub
xchg
scas
movsb
dec
js
cmp
repnz
in
ret
repnz
sub
cmc
pop
pushf
adc
dec
xorl
or
sarb
inc
imulb
sub
stc
xor
jbe
fildl
in
jno
sub
mov
sarl
push
cmpsl
divl
sub
rorl
sub
xchg
inc
push
out
mov
pop
jmp
ss
adc
data16
test
fsubp
cmp
in
mov
mov
xchg
jbe
dec
push
ret
cmpsl
sbb
out
dec
cwtl
jbe
pushl
sub
subl
insb
lods
aam
jecxz
enter
loope
inc
pop
and
mov
jno
test
add
xor
jp
mov
arpl
xchg
mov
rcll
mov
adc
cmpsb
adc
dec
xchg
mov
cmpb
jo
out
or
stos
push
call
push
lahf
shlb
or
xchg
movsb
das
mov
stos
cltd
push
cmpsb
pushf
int
popa
setl
cmpsl
aaa
icebp
inc
outsb
imul
insb
das
jmp
notb
pop
in
ljmp
addr16
cmp
outsb
pusha
in
or
inc
and
push
adc
movsb
pop
cmpsb
movsb
mov
add
data16
dec
lret
movsl
inc
ds
jnp
inc
xchg
jp
pop
bswap
push
shl
push
jns
mov
and
inc
sti
inc
test
mov
or
inc
in
cmpl
sub
js
mov
jmp
sbbl
inc
sub
imul
ficompl
push
in
test
xchg
xchg
leave
popf
adc
out
int
je
scas
sbb
push
ds
aad
cs
adcb
or
mov
movsl
adc
repnz
call
mov
test
decl
jmp
ljmp
xchg
inc
push
push
add
je
mov
in
int
jns
loop
push
jbe
mov
pop
pusha
inc
addr16
jle
pusha
jge
mov
jbe
xchg
and
xrelease
leave
fcoml
aas
rolb
push
xor
pop
hlt
stos
push
jmp
inc
push
add
fisttps
add
jo
rclb
scas
cmp
add
pusha
mov
dec
xor
xchg
mov
clc
imul
clc
sub
inc
outsl
add
cltd
data16
sbb
mov
sbb
lods
xor
popf
inc
add
ja
pop
cmp
mov
cmpsb
xor
xchg
sub
xchg
ja
add
test
fsts
sub
sar
cli
lods
aas
mov
movsl
mov
hlt
xor
push
dec
fs
nop
xor
enter
cmpb
negb
or
mov
cmc
cmp
or
mov
ljmp
jo
dec
clc
jnp
imul
sti
lcall
cmp
inc
cmc
push
enter
test
mov
dec
fxch
dec
mov
mov
fwait
sahf
aam
mov
int3
test
rorb
xor
xor
aam
scas
jns
xchg
pop
add
xchg
insl
inc
out
fcomp
popf
scas
jge
inc
sbb
stc
popa
add
mov
xorl
mov
roll
insb
ret
int3
movsl
sbb
jns
add
movsl
cs
lods
insb
mov
jns
adc
mov
cs
jg
in
and
and
inc
fninit
add
sub
fbstp
sub
test
sbb
shll
lret
pop
jle,pn
inc
jge
jp
lcall
xchg
pop
int
fiadds
fadd
sahf
jge
ret
mov
mov
and
test
icebp
cmp
sahf
mov
adc
icebp
jns
jns
in
std
test
mov
push
jmp
es
or
loop
mov
dec
mov
sti
xchg
dec
adc
sti
or
loop
inc
mov
xor
std
mov
notb
push
mov
pop
movsb
adc
mov
cwtl
iret
lahf
mov
inc
dec
arpl
adc
sub
es
ss
inc
add
fcom
pop
jbe
rorb
sub
in
out
je
repz
and
loopne
js
mov
mov
cwtl
mov
pushf
jnp
xchg
add
call
and
jle
std
jns
xchg
mov
shrb
fildl
pop
out
add
imul
rcrl
pop
and
dec
mov
mov
sbb
rorb
icebp
test
aad
dec
dec
adc
mov
mov
fmull
in
pusha
mov
movsl
xchg
lret
sbb
movb
in
push
les
dec
xchg
incl
mov
call
cmpsb
ja
mov
mov
push
dec
inc
iret
mov
inc
inc
arpl
out
jo
orl
sub
jmp
push
mov
mov
sti
testb
stc
mov
push
in
popa
in
ja
scas
mov
mov
fmull
pop
stos
push
mov
pop
adc
jl
xor
mov
loopne
xchg
jbe
xlat
dec
jle
imul
lock
stos
fsubl
ja
xchg
data16
mov
cmp
popa
cld
jle
add
sbb
insl
fcomps
add
lret
lods
je
jecxz
sbb
mulb
jnp
dec
jmp
and
cld
sub
sbb
in
or
sbb
icebp
add
add
push
push
adc
shl
inc
ss
sub
xor
lret
jge
jge
mov
dec
lock
fistpl
insl
inc
aam
insl
aad
and
cmc
pop
lcall
cmpb
and
cmp
rcll
test
pop
inc
mov
xchg
mov
xchg
sahf
loopne
mov
pop
js
shlb
insl
mov
mov
std
in
jl
sarl
or
mov
in
jbe
aaa
les
lret
bound
pop
cmp
xchg
cmp
jg
test
jns
xchg
stos
ja
data16
dec
mov
jbe
aas
shlb
mov
and
jecxz
pop
cmp
adc
cwtl
pop
xchg
push
sti
push
stos
sub
fsubp
rolb
pop
pop
dec
out
or
lds
mov
mov
add
dec
push
icebp
push
or
add
rcpps
xchg
sbb
sub
je
sahf
div
test
insb
rolb
inc
cmp
sub
adc
dec
push
fdivr
xor
mov
add
mov
mov
fcomi
lods
sti
jae
cmp
adc
push
test
int
leave
addr16
and
or
xchg
out
adc
xchg
adc
mov
sbb
and
jns
push
insl
pop
out
push
xlat
loopne
aad
sub
mov
or
sti
leave
aas
cld
jmp
pusha
in
sbb
xchg
push
icebp
jl
inc
inc
movsl
cmp
lock
fdecstp
sar
inc
mov
pop
scas
inc
outsl
stc
lret
cmp
adc
insl
cmp
push
cmpsl
int3
xchg
adc
add
mov
inc
insb
and
lcall
test
frstor
push
testb
add
cltd
arpl
imul
lods
mov
jecxz
cmpb
xlat
inc
lret
aas
or
cmp
mov
mov
cmpsl
out
out
mov
adc
lds
cmp
add
jg
sbb
xchg
push
adc
sahf
ljmp
repz
jbe
xchg
ljmp
cmp
sbb
add
sub
jb
int
cwtl
ss
jno
mov
jns
or
mov
cmovo
addb
xor
shrb
sbb
xor
shr
add
xchg
aad
stos
ss
into
popa
inc
mov
dec
jnp
rorb
negb
popf
popf
mov
mov
stos
fbld
mov
rorl
outsl
jne
test
mov
lret
int3
sbb
add
xor
aam
fbstp
cli
mov
xor
push
ds
fdivs
addr16
out
lock
jne
sub
scas
or
cltd
or
xor
daa
xor
loop
cmp
push
jo
mov
bound
les
notl
sub
or
pop
jle
js
xlat
jnp
enter
jmp
cmp
sub
ss
lods
mov
cmp
cli
push
cmpsb
in
in
push
stos
fistps
gs
je
inc
dec
add
enter
pusha
sbb
dec
add
popa
jmp
int3
dec
mov
sbb
popa
pop
cmp
in
mov
or
and
mov
xchg
bnd
xor
jbe
ds
in
push
mov
popf
push
sbb
inc
icebp
cmpsl
fldenv
or
xchg
xor
outsl
bound
add
push
pop
sbb
aaa
pop
inc
add
das
inc
int3
adc
mov
notb
fisubl
call
and
mov
sbb
fidivrs
push
call
push
ja
out
inc
or
pop
das
ja
test
and
push
test
and
mov
jmp
adc
sbb
lods
ljmp
mov
pop
dec
mov
sub
sub
jne
and
cmp
ja
pop
jno
popa
sbb
dec
test
fstl
fbstp
bound
fdivp
cmp
inc
xchg
sub
movd
arpl
fucom
and
inc
enter
add
fstps
ja
jg
xchg
outsb
xchg
adcl
mov
jnp
jge
popa
jnp
mov
rolb
xchg
dec
mov
mov
mov
pop
add
aaa
cmp
stos
dec
pop
adc
mov
xlat
jmp
mov
movsl
out
mov
insl
sbb
jmp
and
test
dec
or
sub
andl
adc
je
adc
sub
pop
sbb
and
push
inc
int3
jae
inc
andl
scas
cli
stc
mov
int3
in
xchg
lret
rolb
sub
dec
pushf
les
shll
incl
aaa
cmp
mov
sub
sub
adc
ds
lret
adc
mov
outsl
cmpsb
and
mul
jmp
mov
xchg
ja
enter
inc
insb
xchg
rcrl
xor
test
clc
xlat
cmp
pop
pusha
mov
sbb
andl
xchg
sbb
les
mov
jmp
mov
jl
ds
nop
xchg
jg
mov
test
add
popf
int3
push
icebp
rcrl
mov
daa
sub
mov
mov
test
mov
mov
xchg
xchg
mov
sub
adc
pop
push
loope
fstpl
adc
in
je
xchg
loopne
imul
adc
movsb
adc
aam
adc
sub
sbb
sub
and
mov
cs
push
jmp
ss
adc
aas
sub
inc
test
flds
jne
lcall
cmp
lret
test
shrb
jmp
mov
out
dec
movsl
dec
ss
clc
push
cmc
test
push
jbe
sub
addr16
and
cmp
inc
push
outsb
mov
or
xor
dec
push
lods
cld
loopne
pop
ret
push
ret
outsb
pop
adc
cmp
jg
test
push
lds
ja
movsb
int
adc
int3
push
popa
dec
sub
mov
or
inc
addl
inc
sub
xchg
dec
mov
clc
incb
jg
int3
adc
sbb
pop
in
fldt
aaa
pop
subb
dec
icebp
xor
sahf
fistps
cmp
adc
stos
pop
jmp
clc
pop
aaa
jmp
icebp
mov
ljmp
sbb
loop
fst
test
sub
cmpb
testb
gs
scas
sti
jns
ss
enter
inc
inc
cmpsl
stc
adc
roll
popf
cmp
pop
pop
pop
popa
mov
fldl
mov
jb
cmpsb
xor
push
mov
xor
pop
push
or
xchg
jnp
ljmp
rcrb
das
es
inc
loope
xor
sub
out
mov
mov
scas
inc
lock
sbb
ss
cltd
loope
stos
sub
ret
xlat
shl
sahf
popa
out
jge
adc
imul
imulb
add
xor
dec
jmp
jle
mov
jne
lret
push
cmpl
scas
jecxz
std
jo
out
insb
repnz
mov
mov
enter
cmp
jo
scas
out
jmp
pop
pusha
popa
aas
adc
cs
bound
repnz
jmp
cltd
loop
push
xor
data16
sub
cs
push
jg
mov
xor
push
gs
mov
adc
mov
idivl
xchg
push
fldenv
inc
or
push
rclb
add
pop
inc
mov
or
mov
mov
adc
pop
xchg
std
push
sbb
cmp
fistps
mov
dec
adc
push
popa
lret
mov
xor
jg
mov
jno
ficoml
out
repz
or
dec
rcrl
dec
and
leave
sar
jp
repnz
jmp
jae
fs
sub
or
int
hlt
mov
and
popf
adc
mov
jns
pop
lock
xorl
les
sbbl
orl
push
jns
jl
mov
aaa
fcomip
mov
inc
xor
stc
les
insl
or
lods
ret
sub
adc
mov
jg
mov
test
lds
or
inc
dec
lock
aaa
sbb
fldl
pop
sub
sub
xor
adc
movsb
push
dec
inc
negl
dec
cmpsb
ljmp
andl
sti
aaa
add
fwait
lea
outsb
jecxz
jbe
push
les
int3
pop
fwait
ss
sub
dec
dec
arpl
sub
jne
leave
loop
mov
in
pushf
cld
mov
jg
insb
ja
or
and
fisttpll
push
aad
call
std
outsb
jp
inc
inc
jns
and
int3
dec
or
fcomps
jge
iret
nop
movsl
lret
je
xchg
cmpsb
lock
add
lcall
enter
test
push
ja
js
dec
sbb
push
pop
xor
sbb
gs
sbb
out
stc
dec
jge
or
mov
cmp
in
jecxz
xlat
adc
mov
divb
push
enter
mov
pushf
pop
cmp
lea
dec
sub
out
mov
scas
fmuls
xor
les
add
fstpt
jno
fld
adc
repnz
dec
or
test
cmp
aad
xchg
sub
inc
jb
gs
loope
ret
fldl2e
mov
jl
loop
push
inc
call
add
lldt
xor
or
pop
sbb
enter
adc
shrl
stc
push
stos
push
cmp
outsb
jecxz
mov
sbb
imul
loopne
jp
pop
and
pop
ss
insb
inc
sub
cwtl
popf
subl
jae
rclb
inc
push
and
sbb
inc
cmp
cltd
lahf
jne
daa
aam
stc
rol
jp
lret
adc
sar
sbb
cmp
mov
jmp
and
or
gs
add
daa
xchg
push
clc
pop
sub
xchg
lcall
pop
or
dec
insl
xor
bound
arpl
test
out
out
out
or
lock
sbb
dec
push
cli
sbb
je
dec
fwait
push
push
jl
pop
mov
movsl
scas
std
enter
fisubrs
sarl
xor
adc
bswap
mov
sbb
icebp
mov
sub
xor
and
leave
es
incb
aam
imul
cmp
mov
mov
and
mov
jbe
notl
jb
lret
nop
dec
packssdw
movsb
outsl
icebp
pop
sbb
repnz
cmpsb
aad
cmpsl
dec
sub
sbb
sub
or
insl
xchg
mov
inc
loop
sbb
outsb
into
push
or
xor
lods
inc
jno
or
xchg
mov
stos
stos
mov
outsb
or
xchg
stos
das
lahf
xlat
cmp
fldl
sub
or
mov
mov
or
dec
pop
or
sbb
inc
je
jge
test
fisubl
xor
inc
or
mov
cmp
xchg
repz
loopne
rclb
push
clc
pop
dec
mov
fucomip
aam
js
xor
sbb
lods
inc
jecxz
rorl
push
xor
sub
inc
lds
into
mov
mov
xchg
add
mov
mov
mov
cmp
subb
dec
loopne
cld
push
jp
sbb
stos
leave
subl
sub
fmuls
jae
mov
push
jle
mov
jg
xor
xor
movsl
fisubl
out
dec
cmp
aam
adcl
fstp
into
lcall
xor
jo
mov
mov
loopne
icebp
jae
mov
aad
cmpsl
ss
mov
fbld
in
addr16
mov
es
nop
out
add
nop
test
in
pop
sub
insb
cmp
xchg
sbb
mov
mov
lcall
xchg
push
xchg
add
or
fisubrs
addr16
mov
or
inc
sbb
adc
adc
std
shrl
out
add
mov
push
es
lret
test
scas
mov
add
ds
mov
in
daa
jge
mov
mov
lods
push
shlb
imul
lds
arpl
rcrb
fwait
sbb
jecxz
int3
ret
lods
shl
iret
and
scas
mov
cwtl
je
lcall
sbb
push
mov
jb
xchg
scas
imul
inc
ja
and
xor
add
icebp
xchg
dec
cltd
adc
int3
mov
addr16
loop
out
cmpsb
stos
push
fst
and
movsb
es
jmp
mov
in
into
mov
test
enter
movsb
push
test
data16
cwtl
mov
jae
imul
sub
js
add
jo
je
sbb
data16
jge,pt
push
add
fs
jl
and
pop
in
dec
mov
scas
fs
pop
sub
sub
loope
mov
popf
scas
lahf
fwait
ret
jg
xchg
imul
rcrb
mov
test
mov
pushf
inc
out
rclb
inc
scas
bswap
gs
test
hlt
js
pop
arpl
cmpl
mov
sbb
scas
xchg
or
push
outsb
adc
mov
xchg
mov
jno
in
fwait
push
inc
pop
fsubs
iret
fsts
ret
jle
jmp
mov
inc
mov
add
sahf
sub
in
push
popa
pop
dec
mov
call
xchg
ja
fdivrs
mov
add
test
gs
xchg
ljmp
add
push
jmp
sbb
loopne
mov
test
push
das
mov
fsubs
push
xor
lret
xchg
sarl
mov
sbb
adc
lock
ljmp
aaa
fsubs
adc
clc
pop
jmp
mov
push
push
les
adc
mov
in
outsb
mov
mov
dec
fcom
fsubrp
stc
arpl
mov
gs
test
shll
mov
cmp
popa
and
and
xchg
decl
std
nop
data16
out
repz
dec
adc
jns
mov
data16
sti
aam
jmp
mov
mov
lret
inc
mov
mov
cwtl
add
mov
sub
push
mov
aas
nop
movsl
js
cmpsl
in
xor
adc
in
xor
or
cmp
fisubs
popa
shl
enter
mov
and
cmc
mov
mov
sub
xchg
testb
or
xchg
mov
stos
ja
jecxz
aas
pop
cmp
mov
movb
mov
pop
test
int
push
movsb
xor
push
dec
out
loopne
adc
jbe
leave
jbe
ja
push
or
mov
dec
ljmp
mov
out
xchg
mov
outsl
daa
rcll
xchg
xlat
jb
int
fidivrl
lret
je
cmp
and
aas
push
mov
jg
test
cs
in
sub
aas
loop
sbb
xor
cmpsb
call
filds
testb
mov
mov
cmp
pop
enter
xchg
jb
out
fsubr
lds
xchg
xchg
adc
xchg
sbb
dec
sbb
jns
push
xor
in
testb
cmpsb
les
inc
imul
xchg
sub
pop
test
cwtl
sahf
pop
ljmp
xchg
ljmp
fwait
mov
xchg
in
jl
dec
jle
push
clc
dec
data16
xlat
icebp
aad
fnstsw
aam
xor
push
fcmove
cwtl
inc
fwait
pushf
push
aam
sbb
frstor
bound
insb
aam
popf
sbb
adc
frstor
cmp
imul
lods
add
das
popf
lods
fsubrl
dec
mov
cmc
test
not
popf
ds
fdivr
test
add
lods
cmp
sbb
mov
fsubr
mov
in
add
xor
bound
and
xor
movsl
addr16
jge
jecxz
jmp
pop
incb
mov
clc
popf
and
pop
lea
inc
lods
lods
push
bound
xchg
int3
sub
xorl
lock
js
xor
daa
mulb
movsl
sub
jnp
in
cmpb
sarb
and
ficoml
mov
jle
out
mov
loopne
mov
into
pop
cmp
filds
jmp
jmp
dec
movsl
fsubs
andl
lcall
fidivrl
add
cld
sbb
pop
jb
xchg
mov
outsl
adc
or
push
outsb
bound
add
jl
clc
jge
enter
out
test
lahf
lret
sbb
pushf
lahf
xchg
outsb
ja
ret
out
add
fildl
mov
inc
pop
jecxz
sar
in
call
movsb
inc
sub
sbb
fwait
sub
xor
lds
jge
out
fistpl
cltd
adc
lds
gs
push
pop
dec
es
mov
push
mov
dec
outsl
frstor
sub
cs
stc
sbb
mov
xor
jo
lahf
jge
cmp
adc
je
arpl
jne
fs
mov
lahf
adc
or
cmc
push
xor
sbb
imul
popf
adc
loope
or
xor
push
xchg
in
lea
in
sbb
inc
fwait
sti
leave
adcb
in
and
sahf
or
mov
rclb
psrad
fstps
das
aas
add
xchg
in
jmp
adc
jg
rclb
mov
inc
dec
add
cmpb
adc
enter
out
sbbl
sti
adc
scas
mov
mov
mov
das
nop
inc
pusha
loop
fsin
push
mov
dec
sub
push
jmp
sub
popa
fsub
pop
jle
movl
inc
stc
or
dec
shll
orb
inc
shrl
lods
push
sti
inc
cmp
pushf
es
clc
imul
add
xor
and
testb
pop
rcll
jge
adc
xchg
icebp
xchg
add
jmp
cmp
jmp
out
sub
mov
or
push
jecxz
push
pop
lcall
sbb
in
imulb
sub
imulb
outsl
cmp
xchg
je
aad
scas
sub
or
ror
shrb
cli
push
icebp
sahf
mov
jge
es
mov
out
into
ret
int3
stc
jae
xchg
xchg
mov
lahf
rcrb
dec
leave
pop
imul
jbe
shrl
xor
loope
push
stos
jle
jns
daa
lods
adc
add
ds
aam
fisubs
dec
rcr
push
pop
test
mov
sub
sub
push
fs
push
jns
mov
mov
xor
aas
cmp
pop
std
fucomip
jb
sahf
xor
shll
orl
push
mov
shll
scas
lds
lods
jb
lods
fildll
ret
outsb
mov
xor
negl
outsb
data16
and
pop
outsb
cmp
stc
mov
xchg
insl
mov
mov
insl
repz
fimuls
cmp
stc
pop
mov
test
std
mov
pushf
and
cmp
xchg
fsub
jle
jne
inc
sub
arpl
xor
div
lret
call
jo
mov
push
push
mov
scas
lods
sahf
pop
xchg
aas
sub
repz
out
dec
enter
test
and
lcall
nop
and
jge
sbb
out
jo
mov
pushl
call
pop
std
xchg
orl
lret
dec
inc
insl
add
push
adc
out
cltd
mov
add
orb
outsb
imul
out
and
dec
cmpsl
mov
insl
in
rorb
xchg
dec
int
lods
push
lods
jo
stos
jmp
adc
dec
pop
push
sub
sti
cmp
xor
cmpsb
aam
xlat
stc
pop
insl
aad
fmull
mov
push
sub
cmc
outsb
dec
cld
xor
mov
bound
mov
icebp
cmpsl
stc
mov
add
jo
lret
mov
ret
sub
inc
outsb
sbb
je
fwait
ljmp
sub
test
inc
fcom
negl
mov
mov
adc
jge
int3
js
movsb
lss
subl
xor
push
cli
xlat
cmp
mov
jb
rcrb
test
jo
xchg
pushf
cmpsb
jo
rcll
cmc
lret
jp
inc
fs
fucomp
lock
test
inc
jne
xchg
add
cli
into
inc
clc
mov
inc
sbb
sti
sub
pop
adc
and
mov
mov
sub
pop
lods
sub
mov
or
aad
mov
insb
mov
je
std
pop
sub
or
int3
das
into
push
fwait
adc
push
dec
jbe
lock
xor
clc
outsb
out
aas
jecxz
mov
cmp
mov
jno
iret
lahf
mov
mov
std
dec
push
or
les
aad
icebp
ret
dec
mov
pusha
push
add
scas
popf
sub
aaa
and
add
lea
ror
pop
cmpb
leave
dec
lods
arpl
adc
or
adcl
out
fidivrs
scas
sub
push
mov
pop
jg
inc
dec
push
imul
mov
pop
adc
addr16
cmc
cli
mov
mov
push
lcall
ja
or
cwtl
jl
dec
ljmp
jl
xor
aam
push
out
iret
ja
push
pop
mov
popf
out
dec
push
jbe
inc
lods
inc
xor
inc
jae
ret
popf
divl
in
and
or
scas
jb
ja
pop
stos
cmp
cmp
xor
push
inc
jbe
xchg
ljmp
ss
cmp
xchg
add
add
stos
jae
xchg
into
mov
jbe
mov
addr16
pop
xor
mov
pop
xchg
sub
add
lods
adc
push
arpl
fistpl
push
cli
aam
xor
les
cmpsl
mov
or
fiaddl
xor
jns
mov
shlb
xchg
call
or
mov
pusha
insl
out
cmp
pop
sbb
fildl
fdivrs
or
lcall
cwtl
or
out
insl
shr
int3
xchg
inc
popf
ljmp
icebp
insl
imul
mov
mov
pop
pop
push
jmp
mov
jecxz
xor
add
repz
push
mov
nop
push
stos
jle
xor
loopne
and
loope
mov
addr16
or
dec
mov
dec
add
mov
adc
pop
call
mov
aam
xor
mov
fistpl
into
jnp
insl
lods
jp
sub
pop
sub
sub
iret
iret
rorl
sub
stc
dec
mov
push
pop
movsb
mov
ja
repz
cmpsb
fdivrl
or
cwtl
sbb
push
mov
addb
sbb
mov
xlat
jno
mov
arpl
jne
xchg
fistpl
adc
or
push
out
push
in
fnstcw
rep
fwait
pusha
pushf
push
sub
pop
das
xchg
lahf
pop
sbb
sbb
pop
adc
push
sub
or
mov
mov
push
fs
jnp
enter
sub
flds
js
mov
in
fisubs
scas
push
out
push
mov
sbb
xor
and
cmpl
add
outsb
enter
test
clc
inc
pop
mov
sub
sub
bound
popa
imulb
push
pop
mov
xor
ret
imul
and
gs
or
xchg
cmp
inc
lea
shll
icebp
cmp
nop
js
nop
aaa
push
iret
test
insb
aas
inc
cltd
inc
das
mov
bound
jl
mov
idivl
js
icebp
xor
cmp
into
mov
xchg
mov
push
clc
xor
adc
lret
repz
shlb
xor
push
pop
or
sub
push
xchg
cmp
fsubs
test
xchg
enter
rorl
inc
cli
das
js
add
shl
mov
cmpsl
sbb
lods
enter
dec
inc
add
and
ret
mov
mov
repnz
jne
jle
push
jno
xchg
jg
cmp
out
test
push
rcrb
scas
or
lahf
cltd
jge
in
lret
jge
xchg
jge
and
adc
pop
divl
adc
jo
leave
jno
pushf
rol
into
out
fildl
mov
icebp
jp
jbe
sarb
add
push
clc
test
and
jbe
out
mov
jo
sbb
repnz
cld
fisttps
lret
imul
mov
add
test
fisubs
sbb
addr16
int
pop
sbb
ljmp
mov
inc
xor
mov
adc
mov
jg
push
inc
sahf
fs
push
fildll
inc
fisubl
inc
push
push
shll
movb
je
das
movsb
lcall
jp
ret
roll
loopne
mov
cmpsl
or
push
push
test
das
es
xor
sub
xchg
int
scas
pushf
mov
mov
or
push
jp
dec
jbe
xchg
cs
mov
sarl
jge
add
ror
pop
or
or
rcrl
or
push
inc
into
dec
lock
lahf
and
adc
sbb
and
rorl
dec
xlat
loop
mull
or
xchg
rcrb
insl
mov
push
mov
adc
stos
push
les
mov
and
test
jns
sbb
jo
ret
jns
cmpsb
in
xlat
xchg
fisubrl
movsl
dec
cmpsb
adc
sbb
cmp
imul
or
jle
sub
jno
dec
movsb
nop
cmp
ds
filds
dec
fdivs
jge
clc
dec
imul
push
ficompl
jecxz
mov
xor
leave
mov
xor
insb
sarl
lahf
loop
sbb
adc
rcrl
cmp
stos
insl
leave
pushl
jl
xchg
aaa
xchg
sbb
stos
gs
jae
mov
movb
and
mov
mov
mov
and
insb
xchg
inc
inc
mov
stc
outsb
bound
adc
enter
mov
fldcw
andb
push
pop
mov
push
std
and
out
pop
call
cld
or
scas
push
dec
inc
daa
dec
mov
test
sti
jnp
fsubr
out
mov
test
mov
aas
int3
call
add
xor
xchg
adc
stos
insb
adc
int3
mov
mov
mov
neg
xchg
cmp
and
mov
gs
add
mov
int3
or
mov
lds
mov
rcll
out
je,pn
pop
xor
stos
lock
jp
xor
ficoml
lret
fsts
loopne
mov
jne
nop
pop
pop
sub
jb
mov
leave
dec
sti
mul
negl
jg
dec
notl
ret
out
data16
jne
add
jle
rcrb
pop
mov
push
into
fists
sbb
xchg
icebp
push
add
xchg
aad
cs
clc
xor
adc
xor
sti
sub
imul
test
mov
lods
mov
dec
sub
xlat
jnp
lcall
push
out
cwtl
outsl
sub
mov
mov
sub
mov
push
pop
movsl
std
shlb
int3
lods
fwait
je
popf
cmp
mov
loopne
pop
jne
add
into
and
enter
scas
loope
inc
test
lods
fdivrs
addb
rclb
cmp
sub
or
pop
fdivrs
cmpsb
xchg
sbb
jp
std
ret
dec
sub
inc
mov
sub
fsub
mov
mov
comiss
popf
xchg
cmpsl
test
aaa
das
add
sbb
scas
arpl
jae,pt
gs
ret
cld
xor
fldt
add
adc
dec
dec
pop
aas
cmp
dec
and
clc
pop
rolb
fstl
mov
jno
push
movsb
adc
fistpll
jne
mov
gs
cmp
ja
xchg
imul
pusha
xor
aad
imul
cmp
cmpl
sub
mov
sub
lea
xor
mov
xchg
loope
aas
add
mov
pop
jmp
nop
cmc
popa
aam
insb
aam
orl
inc
cwtl
xchg
sbb
xchg
inc
cltd
faddp
pop
lcall
and
fdiv
sub
mov
mov
or
outsb
xlat
dec
jmp
fs
xchg
xchg
stos
into
scas
stc
xor
ficoml
pusha
mov
pop
add
daa
or
mov
ss
adc
outsl
inc
jg
pop
mov
pop
dec
ss
inc
add
rcrb
pop
stc
js
mov
pop
xchg
xchg
sbb
repz
lret
sbb
aas
and
scas
jp
ds
xchg
jge
add
fcomp
mov
sahf
pop
mov
jmp
jg
sub
add
stc
mov
lods
inc
add
repz
sti
rep
adc
mov
pop
je
lds
sbb
xor
or
cwtl
cwtl
jg
in
aaa
leave
fsubrl
mov
jmp
fwait
adc
cmp
pop
or
mov
dec
dec
lods
shlb
dec
jl
into
jle
sbb
or
dec
inc
sarl
cli
shlb
add
sbb
sbb
adc
nop
and
subl
loop
lahf
jg
mov
rorl
mov
mov
jecxz
cwtl
xlat
mov
ja
mov
add
or
or
sbb
dec
cmc
push
lock
pusha
push
xor
negl
aaa
cmpsb
mov
inc
lcall
scas
add
xor
mov
arpl
push
jnp
sbb
inc
push
mov
add
mov
sbb
call
outsb
pop
repnz
adc
and
xchg
cmpsb
insl
xor
aas
jbe
aad
test
shll
push
jbe
jg
jg
push
cltd
add
inc
daa
stos
les
sbb
mov
test
fldl
or
inc
fstl
jg
sbbb
and
nop
ljmp
or
daa
ja
push
arpl
ficompl
add
jmp
push
out
jne
cs
movsl
das
fucomi
dec
sub
xchg
mov
mov
ret
xchg
jmp
mov
mov
loop
lods
lods
sub
cld
js
ffree
sbb
sbb
mov
les
lahf
mov
lock
adc
mov
ret
repz
mov
subl
add
and
pop
lock
push
ds
pop
fisttps
in
iret
jnp
icebp
mov
add
mov
mov
movl
iret
inc
sub
mov
cmp
out
mov
fisubs
ds
ret
jmp
sub
xchg
push
insl
xor
mov
inc
lods
cmpsb
ret
cmpl
pop
or
clc
cmpsb
movsl
outsb
sti
adc
cmp
jnp
adc
inc
ret
fnstcw
xchg
gs
and
int
lret
jbe
cmp
scas
sub
repz
adc
sar
subb
orl
loope
loopne
dec
or
movl
cmpsb
pop
aas
negl
jae
push
inc
mov
sbb
cmp
jae
movsb
xchg
jae
ljmp
lds
mov
push
fadds
inc
popf
xor
shl
ret
fcom
sbb
push
pop
arpl
sbb
and
mov
mov
ret
xchg
jg
cmp
data16
push
roll
mov
mov
les
movd
femms
mov
push
sub
inc
pop
jo
mov
repz
sub
out
std
mov
xor
sti
adc
mov
lret
out
lret
or
and
les
inc
fwait
push
pop
stos
dec
lcall
mov
lods
aaa
fucomi
cs
popf
lret
sar
sarb
movsl
jp
mov
push
xchg
clc
push
lods
sbb
xchg
mov
enter
out
nop
mov
sbb
xor
filds
xchg
mov
add
dec
pop
jmp
inc
clc
stc
stc
in
xchg
and
das
jns
jmp
in
mov
inc
aas
and
rcrb
cmp
fildll
aad
daa
cmp
xchg
popf
push
lods
stos
popa
inc
sub
and
mov
std
adc
out
outsb
jmp
or
inc
movsl
xlat
xor
imul
mov
or
ljmp
xchg
sbb
inc
aas
mov
jns
jge
cmp
rorb
into
lea
popf
xchg
testb
sbb
orb
xchg
lods
sub
stos
or
out
and
imul
or
andl
popa
xchg
sbb
lds
and
fmulp
movsl
leave
or
dec
and
xor
fstpl
or
mov
imul
xchg
ficoml
cmpsb
int3
movsb
dec
sbb
notl
mov
or
mov
stos
stc
fidivrl
rcr
push
fcomps
xor
das
cmp
cmp
cmpsb
push
adc
push
push
loope
psraw
mov
inc
push
mov
pop
jl
ss
xor
into
stos
mov
scas
sbb
xchg
lahf
inc
inc
jge
mov
xor
dec
fnstsw
inc
xchg
idivb
mov
jl
jp
leave
sub
insl
mov
dec
mov
pop
add
rorl
lds
mov
jo
sub
cmp
sub
and
inc
test
ror
stos
int
push
xor
xchg
in
add
mov
and
loope
enter
sbb
xchg
lahf
xchg
imul
mov
mov
xor
mov
aad
dec
call
mov
inc
pushf
std
cld
mov
mov
iret
test
sub
push
loope
push
ss
stc
loope
js
add
sti
fcoml
sbb
sti
dec
push
mov
fsubrl
inc
hlt
adc
xchg
cmp
repnz
adc
xor
movsb
scas
push
mov
cmp
lret
fisttpl
xor
push
and
add
stos
add
pop
stos
add
mov
subl
pop
outsb
subb
jp
movsl
push
mov
push
mov
sub
cmp
inc
sbb
dec
push
pushf
dec
rolb
xor
mov
mov
xchg
sbb
and
arpl
push
mov
xchg
jge
dec
movsb
leave
mov
aaa
mov
clc
in
pop
ror
ficomps
adc
cmp
xchg
jbe
jo
push
xchg
pop
add
test
ds
and
pusha
roll
stos
inc
mov
jne
cmpsb
adc
and
jg
inc
pop
push
std
adc
jp
mov
inc
jb
or
dec
xor
or
sub
fsubr
xchg
fs
loop
fldcw
gs
sub
test
call
add
fs
sub
xor
dec
adc
and
sbb
sub
cmp
test
sahf
lds
ficoml
pop
test
data16
jge
lret
jecxz
fstps
push
and
shlb
cmpl
lds
outsb
aas
push
mov
xchg
add
fcompl
iret
xchg
cmc
inc
push
mov
test
mov
adc
inc
xor
mov
pop
push
scas
popf
insl
adc
add
orl
add
sbb
push
fdiv
ds
loop
int
hlt
pop
sbb
movsb
cmp
sub
add
fcmovnb
pop
out
sub
dec
data16
dec
iret
stc
dec
sbb
cmp
and
dec
testl
dec
lock
push
cmc
mov
mov
inc
or
xor
adc
add
cmp
enter
mov
xor
mov
jno
mov
gs
cmpsl
cmp
imul
ja
xor
xchg
repnz
leave
jo
xchg
bsr
adc
push
xor
pop
fnstsw
jne
xor
les
pop
mov
sbb
sbb
and
xlat
sbb
loope
imul
js
jo
pop
adc
inc
arpl
enter
fsubr
scas
cmp
bound
fcmovu
jg
imul
enter
icebp
gs
call
mov
sub
test
adc
sub
ja
pop
jmp
fstpt
cmp
cmp
mov
ja
ret
mov
cltd
fnstenv
jle
jns
dec
mov
mov
aam
jmp
jne
jl
inc
sub
data16
jns
push
lock
cmpsl
mov
les
movups
in
je
or
push
loope
ja
pop
cmp
jecxz
aam
clc
adc
movsb
rcrl
aad
mov
sub
jno
or
or
push
jl
por
js
out
out
leave
mov
mov
ljmp
ljmp
xchg
mov
mov
fsubrs
lds
or
cld
or
sbb
shlb
cmc
mov
xorb
mov
and
jns
sub
ds
push
push
aaa
xchg
xchg
cmp
sbb
and
push
mov
xchg
pop
or
jno
push
push
pushf
dec
out
fimull
sub
mov
mov
lds
orl
stos
push
and
sub
add
dec
pop
test
cmp
sub
dec
scas
push
cmp
iret
pop
push
nop
mov
iret
leave
push
xlat
jl
aad
pop
imul
sub
xor
mov
xor
cmpsb
push
adc
insl
and
cmp
push
xchg
rcll
mov
cmpsl
icebp
shll
fistl
cmp
aas
rorb
cmp
gs
jb
out
adc
push
dec
ds
fisubrl
test
aaa
sub
jb
pop
mov
mov
leave
ret
cli
dec
leave
xlat
popa
sbb
xchg
pop
inc
movsb
mov
xchg
loope
mov
mov
outsb
rcrb
pop
pop
jl
fdivrl
fisttpl
push
or
sbb
lcall
xor
mov
xchg
adc
xchg
outsl
pushf
adc
sub
sbb
jb
xchg
imul
mov
dec
jecxz
dec
xchg
mov
jmp
fwait
inc
inc
popf
sti
into
lret
popf
fsubrs
add
push
add
and
sbb
fs
in
xor
mov
push
push
mov
fsubrs
imul
pushf
ljmp
aaa
fwait
push
in
sub
cld
jp
test
sarl
sahf
cmpsl
shl
hlt
ja
popa
out
out
and
jmp
and
ret
jmp
dec
or
cmpl
inc
mov
pop
xchg
adcb
mov
xchg
insb
leave
adc
xchg
mov
enter
das
mov
push
scas
aad
and
or
test
aaa
jae
inc
aaa
and
lcall
dec
imul
movsb
xchg
cmp
adc
arpl
sub
je
mov
das
out
inc
lret
and
ss
mov
inc
fisubrs
je
es
xor
adc
out
out
jnp
mov
xchg
add
mov
jl
push
imul
in
out
mov
and
push
xor
out
sub
pop
cmpsl
pop
ja
ret
cmp
cmp
adc
dec
divl
add
fldcw
pop
or
fcomi
je
sbb
arpl
push
test
sub
and
xor
mov
cli
mov
test
movsb
scas
enter
xchg
rcll
insl
xchg
push
enter
iret
outsb
push
mov
daa
fwait
in
xor
pop
xchg
mov
je
jecxz
and
jae
stc
mov
mov
sub
adc
sbb
repnz
pop
sti
insb
mov
push
add
inc
inc
sub
mov
mov
jmp
inc
xchg
pop
popf
out
push
icebp
adc
or
std
test
mov
inc
add
cmp
cmc
or
lcall
add
test
in
add
repz
test
push
adc
in
pushf
lods
mov
xchg
out
xchg
push
outsb
jl
mov
adc
cld
inc
cmc
mov
or
add
pop
jl
sub
dec
frstor
ljmp
icebp
sub
sti
stc
push
js
mov
popf
insb
mov
movsb
sarb
mov
sbb
lods
mov
jo
data16
je
jl
and
sbb
jbe
dec
sbb
loop
sub
stos
scas
mov
cmp
sub
push
dec
dec
pushf
incb
sub
addr16
sbb
jmp
addr16
loopne
mov
ljmp
pop
mov
or
mov
sti
push
and
inc
pop
scas
lahf
in
or
fwait
cmp
push
popa
incb
insl
fs
lods
xor
lea
mov
leave
jbe
xchg
popl
lods
jecxz
pop
int3
pop
jmp
xlat
fs
lea
inc
xlat
loopne
into
addr16
dec
and
add
int
inc
shrl
xor
aad
enter
sbb
sbb
ret
dec
push
lods
lds
or
orb
sbb
sub
xchg
movsl
pusha
sti
jle
cwtl
pop
aad
sbb
lods
push
orl
mov
iret
arpl
adc
add
les
rolb
lods
lahf
cmp
cmc
in
loope
add
shrb
mov
push
sbb
push
jne
inc
add
fsubs
aaa
pop
sbb
vmovaps
mov
mov
mov
scas
or
and
out
xor
lea
icebp
and
or
les
cmpb
loope
aaa
cmp
jmp
test
dec
cmp
pop
mov
lods
jnp
rorl
inc
mov
jmp
loope
lahf
pop
sub
aam
bound
ret
pusha
mov
daa
cmp
rorl
cmp
shll
pop
push
mov
add
pop
or
out
std
fdivrl
xchg
into
out
dec
jecxz
pop
dec
jl
outsb
rcl
lea
pushf
psrlw
or
push
pop
out
icebp
mov
cmp
jnp
pop
inc
pop
push
aaa
and
lods
pop
mov
adc
test
add
add
mov
in
out
mull
pop
cld
enter
or
adc
push
mov
add
xor
and
inc
add
dec
addb
bound
adc
sub
lahf
jb
jno
test
int
push
mov
pop
push
cmp
push
mov
mov
cltd
or
jne
jb
or
pop
call
cmpsl
xor
sub
out
add
sub
sub
test
sbb
jle
sub
frstor
xchg
jno
cmpsb
sbb
test
outsl
adc
das
stos
cmp
imul
fsubs
outsl
xor
in
xchg
icebp
cmp
stc
cmp
or
pushl
fdivl
sahf
out
out
jnp
mov
mov
pop
mov
fimuls
outsl
out
jecxz
xor
dec
sub
push
inc
lock
repnz
ljmp
cmpsl
out
cwtl
add
mov
cmp
ja
call
pop
jbe
pop
jo
mov
pop
nop
bnd
jno
and
cmpsl
std
cmp
dec
xchg
data16
sbb
jb
pop
arpl
push
sub
lock
lahf
clc
add
loopne
mul
adc
dec
call
es
add
mov
mov
xchg
pop
cmp
in
jge
ljmp
leave
inc
ror
mov
hlt
sbb
filds
sub
and
dec
cmp
adc
pop
shufps
std
fwait
mov
lds
shrl
in
scas
stc
sub
rolb
sub
pop
inc
lahf
sbb
dec
cmp
lods
cs
add
ret
test
mov
ficompl
inc
hlt
sbb
cld
in
push
icebp
mov
lds
aas
inc
mov
je
nop
inc
push
fwait
ror
sahf
mov
lret
jp
icebp
dec
xlat
shlb
mov
push
inc
cltd
stos
fisubl
or
stos
jne
lret
popa
fwait
lods
cmp
loopne
cmp
aam
ja
jno
mov
mov
test
dec
xchg
add
mov
jmp
mov
enter
test
aam
jg
sub
mov
xor
inc
bnd
jae
push
inc
dec
icebp
push
ds
adc
sbb
aas
aaa
sub
dec
lcall
frstor
push
lods
imul
scas
fcoml
xchg
dec
xchg
inc
jle
sub
jl
or
dec
test
mov
rcll
pop
push
inc
cmpl
or
xor
sbb
stos
inc
outsb
and
idivl
and
jp
pop
push
cltd
lret
inc
dec
sbb
lods
fmulp
cmp
movsl
inc
sbb
mov
cli
test
sbb
data16
rorl
jb
dec
subb
popa
inc
sub
mov
cs
out
inc
mov
and
loop
mov
jae
rclb
inc
mov
repz
jbe
nop
ds
ds
gs
andl
mov
xor
xchg
in
sahf
in
mov
and
std
loopne
es
adc
cmpsb
xlat
cmp
mov
ret
imul
icebp
or
shll
out
out
insb
jae
addr16
lcall
lea
cmp
push
jae
int3
test
add
xorl
les
fwait
in
rorl
push
jmp
and
jae
stc
pop
ss
cmp
loopne
dec
jne
ja
push
movsl
sbb
icebp
adc
test
imul
or
sbbb
clc
hlt
data16
add
std
and
cmp
call
std
ja
dec
aam
xorl
outsb
jl
dec
sbb
inc
push
sub
in
mov
push
ficomps
cmpb
mov
test
imul
pushf
cltd
inc
add
sbb
or
jne
rcl
pushf
xorb
sarb
and
dec
xchg
or
jns
sbb
inc
jle
shlb
pop
push
and
nop
add
xlat
movsb
or
mov
movsl
mov
fcoms
push
xor
cli
cmpsl
cmp
lds
push
xor
test
adc
ds
mov
inc
sub
aad
sub
inc
mov
add
and
mov
aad
push
add
xchg
xchg
adc
cmp
cmpl
mov
push
imul
mov
dec
pcmpgtw
add
mov
out
add
mov
lret
data16
jbe
jp
subb
movsl
jne
jg
jnp
es
pop
dec
cmpl
test
aad
lcall
adc
call
sub
cwtl
or
movsb
cmpsl
ds
pop
mov
repz
es
stc
aas
cld
fcoml
fsubl
or
or
mov
xor
pusha
xor
jo
mov
pop
and
mov
lods
lock
mov
std
aam
mov
loop
cmp
mov
imul
daa
ror
jns
or
nop
sub
in
dec
mov
sub
enter
leave
aaa
mov
cs
mov
inc
int
and
fsts
popf
adc
or
xor
xor
adc
data16
jo
or
aam
sub
inc
mov
cmp
std
jae
fimuls
rclb
test
xor
and
adc
repz
sti
lds
and
iret
push
jno
negb
jbe,pt
and
mov
ficompl
sub
lahf
fs
repz
and
jne
fmuls
ss
hlt
int
mov
popf
cmpsb
testb
jbe
sub
add
inc
push
imul
insl
mov
mov
test
inc
fistl
icebp
cmc
xchg
xor
sbb
jl
outsl
mov
and
mov
je
or
aam
rcrb
add
aam
test
push
mov
mov
xlat
mov
in
mov
frstor
sbb
insl
mov
mov
outsb
iret
mov
es
jl
dec
fs
push
cmpsl
push
cmp
push
dec
add
es
call
lret
cltd
dec
out
or
sub
iret
stos
jb
les
fistpl
xchg
lods
in
out
cmp
jp
sub
and
or
flds
shl
push
inc
sub
enter
es
pop
xorb
mov
aam
pop
pop
mov
jmp
adc
roll
stos
mov
mov
icebp
xchg
mov
loop
cltd
stos
ljmp
push
xchg
inc
mov
sub
in
sbbb
into
rorb
mov
out
mov
jp
push
fwait
into
or
sbb
jmp
adc
push
adc
and
jp
seta
jle
jp
leave
inc
test
push
jmp
push
enter
sub
inc
mov
imul
scas
hlt
push
adc
ret
hlt
mov
jo
sbb
push
xchg
int
jmp
dec
cmp
pop
cmpsl
nop
enter
mov
xchg
jmp
xchg
xchg
xlat
dec
jge
sbbl
dec
dec
xor
sub
mov
inc
pop
push
bound
popf
or
shlb
movsb
mov
sub
cmovg
in
push
inc
daa
adcb
inc
outsb
inc
fwait
out
xor
cmpsb
lods
push
mov
adc
cmc
std
xchg
leave
mov
cmp
stc
mov
add
mov
psubb
test
and
mov
rcr
jmp
hlt
xor
pushf
nop
scas
mov
ds
test
sub
cld
push
sbb
ljmp
shr
fldcw
mov
xchg
xor
data16
add
adc
je
pop
xchg
push
ret
or
sub
pusha
xchg
cmpb
lods
lret
inc
sbb
pushf
push
adc
jg
pop
ror
dec
push
inc
push
int3
add
pop
leave
fmuls
or
sub
or
cltd
or
xchg
movsb
sub
insl
jge
xchg
add
cmp
cmp
into
jae
xchg
or
ljmp
sub
fisubs
sbb
sub
in
push
push
xor
aad
ficomps
es
out
frstor
mov
cmp
ret
xlat
movsb
push
fsubrp
data16
add
push
mov
push
pop
and
mov
imul
inc
clc
jno
mov
xor
arpl
jl
add
and
and
fbld
xchg
fstl
daa
in
jno
push
push
mov
imull
adc
or
ljmp
cmp
sub
and
repnz
nop
mov
dec
je
imul
jne
sbb
aaa
xchg
loopne
mov
cmp
xor
push
stc
sbb
dec
mov
imul
sub
xchg
sub
xchg
mov
shl
or
inc
cmpsl
loop
in
mov
dec
xor
call
cmc
cmpl
clc
shr
addr16
dec
movsb
add
and
and
push
adc
jg
jle
popa
orl
pop
addl
bound
sbb
jecxz
mov
mov
adc
iret
dec
sub
cmp
pop
xor
lock
dec
pop
cmp
test
shl
pop
push
dec
xchg
dec
push
inc
arpl
daa
imul
fstl
stos
jle
into
mov
daa
sti
push
lds
push
insl
xorb
lock
add
mov
mov
xchg
xchg
sbb
bound
mov
mov
and
call
lret
enter
mov
cli
out
and
data16
mov
xchg
mov
lahf
test
dec
sahf
sub
hlt
mov
mov
sub
dec
mulb
dec
sbb
add
into
and
mov
jmp
repz
lret
jns
cmpsb
gs
in
repz
mov
cmp
and
pop
in
addr16
out
cli
call
mov
jb
incl
lret
jle
ljmp
push
imul
outsl
rcrb
lahf
cmp
jp
fldcw
aas
test
fistl
les
push
jno
sbb
je
jl
int3
in
scas
lret
movsb
mov
push
adc
das
push
jns
mov
dec
dec
jge
sbb
xchg
mull
aam
or
or
data16
dec
outsl
js
sarb
or
insl
mov
lret
cwtl
ss
insl
cmc
pusha
mov
sarl
lahf
mov
das
div
inc
lret
xor
leave
jmp
test
jmp
push
and
and
clc
mov
clc
pop
outsb
out
leave
mov
test
adc
in
rorl
mov
cmp
into
or
and
mov
loopne
xchg
pop
adc
dec
sarb
xor
popa
and
mov
and
pop
xchg
push
sub
pusha
cmp
pusha
aam
aam
cmpb
fdivr
mov
int3
xchg
inc
nop
mov
or
add
pop
pop
inc
jae
ret
mov
xor
arpl
mov
inc
mov
ss
arpl
mov
icebp
sar
test
rclb
cli
mov
int3
test
inc
ret
nop
incl
cwtl
jno
adc
pop
add
mov
fs
sub
loop
adc
xchg
mov
sbb
cmp
mov
adc
pushw
ret
gs
xchg
scas
repnz
shl
xchg
aam
daa
fsubrp
loopne
in
jbe
stos
pop
inc
inc
adc
inc
cmpsl
js
ss
cmp
mov
pop
sub
push
jb
arpl
xchg
loope
push
aad
loop
xchg
mov
je
and
leave
in
enter
rcrb
shrb
cwtl
jl
aaa
popa
out
add
mov
jmp
ja
rcr
loop
cmp
sbb
out
cmpsl
scas
sub
shll
pop
and
mov
pop
testb
aad
xor
in
test
es
fs
pop
ficomps
dec
inc
das
pop
pop
cmpsb
or
iret
inc
sbb
das
ret
and
adc
xor
scas
mov
jns
aam
cli
push
test
stos
xor
cmp
push
cmp
mov
mov
pop
push
or
or
mov
scas
push
loope
sub
mov
mov
sub
mov
std
and
icebp
mov
or
xchg
pop
mov
dec
sti
sbb
adc
mov
test
jo
push
dec
ljmp
insl
dec
subl
cmp
adc
fs
jns
and
clc
inc
jns
adc
pop
mov
mov
rorb
cmp
inc
push
add
test
iret
jbe
xchg
fiaddl
sub
mov
pusha
sahf
adc
jge
inc
push
call
sbb
xor
pop
sti
lods
push
add
pushf
repnz
das
push
adc
arpl
cltd
inc
push
push
rorw
insl
ds
je
push
jmp
or
repz
es
aas
outsb
jns
xor
jecxz
cmpsb
bswap
nop
dec
mov
or
pop
pop
outsb
adc
int3
loop
cltd
cltd
sbb
and
inc
test
xchg
leave
js,pt
xchg
ljmp
cmp
push
inc
add
xor
in
xchg
jl
cs
movsb
loopne
xchg
add
push
or
mov
dec
dec
nop
xchg
pusha
idivl
aaa
dec
movsl
xchg
outsb
mov
fiadds
rclb
xor
mov
je
in
loop
sbb
idivl
and
out
xchg
adc
daa
cmp
icebp
pop
int3
les
pusha
fsub
inc
aad
cmc
leave
pop
jae
add
pop
cmp
enter
movsl
push
ret
cli
and
jo
sahf
dec
ret
adc
int3
jle
dec
cmovno
movsl
pop
sbbb
mov
loope
cld
in
ss
sbb
cmp
mov
xor
movsl
jmp
inc
adc
pop
mov
add
inc
push
or
imull
push
rep
out
sub
ljmp
adc
ficomps
cmpsl
cs
loopne
daa
xor
movsl
int
iret
inc
add
sbb
jecxz
test
int3
xchg
fisttps
in
loop
ret
mov
adcl
idiv
inc
mov
scas
popf
add
scas
push
dec
xor
mov
outsb
rcr
call
mov
rorb
dec
xchg
movl
scas
mov
cwtl
adc
ret
push
push
pop
mov
dec
aaa
movsb
xchg
scas
xchg
inc
ljmp
adc
xor
or
mov
dec
push
test
cld
sub
add
out
shlb
out
xchg
inc
sahf
push
mov
call
xchg
sbb
xor
fdiv
pop
cmp
xor
in
mov
enter
test
xchg
adc
cmp
add
jns
cmp
or
mov
aaa
popf
or
in
cltd
cmpsb
jnp
fs
adc
jne
nop
and
cld
shll
xlat
jecxz
scas
push
ja
jle
fistpll
test
loope
inc
adc
pop
mov
pop
sbb
pop
sub
cwtl
push
mov
inc
mov
mov
popa
pop
loope
das
test
iret
xchg
out
cmp
or
pop
fadds
jp
xor
xchg
or
inc
orl
lret
pop
cli
xchg
pop
jbe
push
and
jl
insb
push
push
gs
and
or
shll
pop
jmp
mov
out
cwtl
mov
xor
mov
lock
pop
ret
xlat
adc
mov
outsl
push
adc
sub
cmp
lods
call
jne
inc
jge
sbb
ds
test
arpl
mov
xchg
push
cmp
mov
cwtl
insl
test
xor
push
daa
movsb
daa
pop
or
jl
lahf
out
mov
jns
push
in
push
test
dec
inc
dec
add
and
loop
mov
lret
hlt
rorb
dec
adc
ja
xor
jge
int3
mov
adc
bound
xchg
sub
dec
ret
and
jecxz
add
out
jns
push
push
mov
sbb
inc
inc
dec
insl
or
push
or
fisttpll
int3
add
xlat
mov
dec
mov
test
or
and
cltd
loop
sbb
test
xor
jns
aaa
mov
sbb
add
cmp
addr16
lods
outsb
cmp
cmp
or
dec
jns
sub
push
mov
mov
dec
push
sahf
mov
scas
sti
and
stc
lret
jle
xchg
adc
adc
mov
mov
in
out
pop
inc
lret
jecxz
adcl
pop
dec
es
and
cmp
jo
jb
dec
mov
xchg
pop
test
add
cmpsl
mov
fwait
loopne
mov
sti
xor
nop
test
lock
pop
inc
stos
cmp
mov
lods
fsubl
push
in
jle
push
xchg
sbb
or
sub
cmpsl
xchg
sub
mov
jne
arpl
and
out
sti
in
adc
jno
std
sti
es
push
lock
movsl
das
dec
pushf
jmp
out
cwtl
fcomi
rorb
jo
stos
jg
insl
mov
push
push
xor
or
xchg
in
roll
pop
cld
aad
int
or
scas
sbb
xor
push
add
pop
xor
dec
cmp
push
lods
mov
jmp
out
xchg
hlt
xor
adc
mov
aaa
dec
lock
push
loop
cmpl
adc
in
cmpsb
xor
rep
xchg
rcl
dec
adc
fmul
into
mov
adc
push
test
mov
or
stc
js
mov
ja
push
or
in
xor
iret
ljmp
pop
dec
pop
lea
mov
fs
cmp
mov
pop
or
stos
or
test
and
int3
mov
dec
mov
fwait
dec
jbe
sub
or
popa
dec
int
and
xor
xor
test
sahf
test
dec
inc
or
out
add
xchg
mov
call
stos
cltd
pop
sub
jae
outsb
les
cmp
jns
fldl
cmc
int3
popf
sahf
push
insb
or
push
pop
cld
inc
test
in
gs
fnstsw
pusha
js
lds
cmp
arpl
inc
sahf
jb
sub
fcompl
inc
add
iret
jmp
popa
aam
cmpsb
sti
dec
cmp
in
cmp
mov
fsubrl
ficomps
lea
lret
push
outsl
mov
int
in
sbbl
or
push
dec
push
add
and
ror
repz
outsl
push
xor
insl
mov
jmp
pop
outsb
push
sub
xchg
pop
mov
movsb
mov
cwtl
xchg
icebp
push
jb
popa
fldenv
leave
dec
push
mov
mov
jle
adc
std
test
mov
xor
cld
adc
dec
insl
daa
insl
iret
hlt
and
jecxz
cs
or
push
das
mov
mov
xlat
pusha
jb
sub
lock
pushl
stos
not
lock
scas
pop
mov
mov
push
mull
ja
je
mov
pop
leave
add
aam
fstps
popa
push
jge
fidivs
push
inc
cwtl
sbb
insb
mov
push
inc
aam
adc
adc
jne
or
repz
jbe
pop
xor
xchg
lock
pop
daa
in
daa
mov
dec
rorb
fisttpl
xchg
or
outsl
mov
adcb
xor
popa
imul
out
sbb
mov
jmp
or
pop
cmp
aad
push
push
cmp
cwtl
sbb
cmp
jge
pop
js
aas
cmp
push
add
repnz
mov
add
and
push
jb
fcoml
push
jne
mov
ljmp
in
pop
sub
lcall
adc
movsb
mov
ud0
outsl
test
xorl
xchg
push
aad
mov
xchg
inc
jbe
je
in
lods
push
mov
xchg
inc
das
scas
cwtl
mov
lds
repnz
fidivrs
inc
sub
pop
std
clc
adc
cli
pop
cmp
subl
fstl
xchg
int3
das
jge
xchg
jnp
out
mov
mov
and
and
inc
shrb
and
stos
fcmovu
and
cwtl
mov
lea
push
jnp
push
adc
mov
push
shl
pushw
push
call
jle
std
sub
dec
jp
xchg
mov
or
mov
std
std
lock
mov
push
outsb
mov
daa
xchg
ljmp
jg
push
inc
into
sbb
mov
ret
cs
fcmovb
xchg
mov
mov
scas
int
sbb
xor
inc
push
jb
add
imul
repz
sbb
daa
mov
or
fstps
and
leave
dec
lods
leave
mov
add
mov
dec
dec
mov
cmp
lods
jecxz
nop
mov
or
and
pop
mov
cmp
cmp
sub
xor
cld
push
push
cmpsb
out
test
lahf
mov
dec
daa
adc
pop
add
jb
int3
lds
sahf
adc
sbb
cmp
adc
mov
cmp
mov
jnp
testl
stos
mov
jo
arpl
popf
and
mov
add
xchg
fstp
in
popa
push
push
mov
mov
in
cld
leave
repz
sbb
popf
push
push
loop
jne
sahf
and
jge
mov
jp
sti
push
outsb
cmp
dec
fs
sub
jecxz
aad
xchg
cwtl
xor
repz
mov
jbe
add
add
push
mov
pop
test
int3
mov
inc
xor
jecxz
cld
das
adc
dec
movb
stos
sub
mov
or
cmp
pusha
xor
es
pop
lret
fst
mov
out
jns
push
adc
mov
gs
push
cli
sub
fimull
dec
mov
pop
arpl
in
mov
mov
mov
js
test
cmp
dec
inc
jb
add
clc
nop
pop
int3
cmp
or
arpl
dec
into
pop
jo
pop
fs
ss
lahf
push
inc
dec
dec
add
xlat
push
subb
jge
lods
rcrl
inc
mov
inc
and
stc
or
push
lock
cmp
les
xchg
jae
stos
mul
mov
loopne
movsl
push
fnstcw
pop
fildll
jle
shl
out
pop
xchg
or
lahf
clc
scas
add
sbb
or
andl
stos
push
mov
lret
les
xchg
dec
sub
inc
dec
imul
enter
add
jp
pop
lods
lods
test
fwait
xor
xchg
shrb
filds
dec
and
iret
ret
gs
mov
xor
lret
sub
mov
dec
mov
and
sti
dec
mov
pop
out
and
xlat
mov
mov
mov
in
mov
xchg
and
arpl
pop
dec
out
pop
jg
sub
test
movsl
mov
adc
test
sbb
sub
mov
ret
add
jge
pop
jp
scas
dec
addb
dec
push
cld
test
cmp
pop
shlb
mov
dec
jge
add
inc
loopne
mov
in
ss
out
ja
and
pop
sub
je
lahf
shlb
inc
sub
adcl
scas
jo
mov
cmp
icebp
mov
xchg
mul
pop
xchg
popa
icebp
sub
insb
aas
xchg
mov
sub
mov
cmpsl
cmc
fwait
pop
cmc
sub
int3
in
adc
neg
inc
mov
push
or
and
xchg
and
outsb
stc
fbstp
mov
outsb
xchg
lcall
jge
dec
xchg
dec
es
xchg
loop
sti
int
sarb
push
mov
inc
inc
or
inc
lock
sub
outsl
cmp
jo
in
mov
jp
icebp
mov
aaa
fwait
pop
xchg
mov
int3
cmp
scas
popa
xor
dec
xor
add
mov
fs
lds
xchg
jge
inc
mov
mov
xchg
nop
mov
sbb
outsl
push
xor
push
ret
popa
xchg
ljmp
mov
loop
out
adc
push
or
std
jge
push
pushf
cmp
jnp
cmp
cmp
add
jns
pop
mov
inc
orl
ret
inc
jno
dec
movsb
push
or
mov
lock
adc
lods
pusha
outsl
fxch
xchg
in
dec
or
outsl
adc
push
sbb
mov
sahf
into
xchg
cmp
int3
pop
cmpsb
ljmp
arpl
sub
xor
push
mov
push
sub
pusha
aas
mov
xor
push
push
push
das
cmpsl
cmc
jae
es
aam
inc
mov
cmpsl
mov
ds
push
ficoms
push
test
arpl
fwait
push
adc
jmp
lret
enter
iret
mov
ljmp
scas
loopne
inc
outsl
jmp
out
int
leave
cmp
mov
icebp
movsl
test
sbb
fwait
sbb
jo
insb
int3
addr16
shll
cmp
jp
mov
mov
test
inc
lahf
mov
int3
clc
xchg
aad
mov
push
mov
jge
aas
out
fildl
loopne
jno
and
arpl
mov
imul
push
mov
into
cmp
cmp
mov
fadds
or
pop
push
push
or
mov
push
mov
and
cmp
in
pop
test
adc
out
mov
dec
fisttpll
xchg
cmpsb
inc
arpl
sbb
sahf
xor
cmp
xchg
xchg
cmp
frstor
cmc
stos
mov
or
or
icebp
xchg
and
xor
xor
cld
inc
and
sub
loope
mov
jae
pop
sub
adc
inc
and
scas
hlt
nop
adc
xchg
loope
es
fwait
and
pusha
xchg
sub
cli
sub
mov
xor
popa
fiadds
xchg
clc
and
das
jp
mov
div
testb
mov
fisubl
js
add
add
ss
xchg
mov
mov
pop
movsb
cmpb
nop
testb
mov
jge
shlb
cs
cmpsb
test
push
sbb
xor
cmp
pop
xchg
xchg
jp
popf
mov
mov
sbb
xor
les
cld
push
sbbl
add
cmp
pop
rorl
loopne
adc
sbb
into
sahf
test
imul
inc
and
push
in
lds
sbb
aad
test
mov
cmpsl
cmpsb
mov
add
push
jne
aas
imul
fwait
push
mov
sub
jle,pt
xor
cld
adc
jmp
scas
and
out
nop
mov
popl
fwait
pop
mov
in
pop
cmc
or
loop
lret
lcall
sub
fsub
popf
outsl
push
sbb
jmp
stc
adc
fldcw
cmp
mov
sahf
mull
adc
pushf
stos
xchg
sbb
pop
iret
ljmp
or
sbb
lret
out
out
sub
lret
push
mov
out
xchg
pop
dec
bound
mov
push
push
fldt
pop
add
ljmp
loopne
or
mov
test
lret
jecxz
movsb
mov
insb
aad
pop
test
stc
sar
xchg
sbb
jnp
aam
or
mov
lea
sub
push
test
fdivl
sbb
pop
iret
xor
pop
cmpsb
cmp
popa
mov
mov
in
test
into
pop
cmpsb
push
pop
iret
mov
jae
mov
adc
mov
frstor
xor
and
cmp
mov
sbb
jo
inc
dec
mov
stos
inc
mov
jns
fstpl
cwtl
inc
leave
mov
push
xchg
int
cltd
ficompl
push
push
mov
insl
sbb
outsl
andl
stos
dec
pop
dec
jge
mov
xchg
ret
sbb
inc
dec
into
inc
jmp
push
mov
jl
jne
mov
rclb
mov
push
mov
push
pop
je
pop
sub
loop
mov
lret
add
jne
xlat
aas
aam
cwtl
mov
movsl
int
sub
scas
cmc
xchg
xchg
sbbl
mov
test
mov
test
pop
call
push
sahf
adc
xchg
clc
enter
scas
dec
pusha
mov
xchg
mov
aad
xor
nop
lea
mov
jno
xchg
sub
dec
or
jge
imul
mov
pusha
inc
loope
mov
stos
inc
lods
gs
inc
push
pop
mov
push
mov
movsl
jnp
mov
int3
sub
push
dec
xor
pop
pop
add
shlb
test
sbb
sub
mov
dec
jp
btc
jecxz
test
out
mov
mov
mov
xor
add
and
nop
repz
adc
add
xchg
into
mov
mov
xchg
pop
sub
test
mov
inc
aaa
ljmp
inc
cmp
mov
pop
xchg
cmp
dec
adc
aam
mov
jae
test
psrlq
xor
inc
pop
mov
adc
sarl
sbb
inc
repnz
outsl
into
xor
inc
out
fstpt
pop
sbb
mov
call
push
sbbl
lcall
mov
mov
bound
xchg
mov
push
jp
insl
popf
add
dec
je
adc
mov
push
dec
scas
mov
xchg
jmp
mov
pop
je
xor
out
sti
mov
mov
mov
inc
jge
out
shrl
sub
mov
add
xchg
push
jb
inc
dec
push
cli
sbb
or
clc
fcoml
jae
adc
data16
les
xor
push
sbb
lret
push
mov
std
fdivrl
test
dec
and
into
je
lods
mov
clc
cmp
into
js
mov
or
idiv
je
sub
jbe
add
je
fwait
and
ljmp
xchg
stos
divl
lahf
ds
ds
cmp
sub
inc
jle
roll
movl
aad
push
push
push
and
sarl
enter
out
adc
mov
stc
cmp
mov
outsb
in
cld
shrb
in
xchg
cs
xor
sub
xchg
enter
sub
bound
pop
repz
cmp
push
dec
adc
mov
push
jne
jecxz
addr16
shl
sbb
jnp
arpl
divl
pop
mov
inc
fsubs
pop
fildl
pop
inc
sub
inc
xor
bound
dec
mov
stos
fbstp
jae
addr16
jnp
mov
or
xchg
insl
pusha
xlat
pop
mov
sbb
bound
xorb
out
add
mov
gs
idivb
mov
and
pop
xchg
loop
jmp
scas
pop
cltd
mov
imul
mov
in
ror
mov
sub
and
or
sar
inc
hlt
ss
pop
popf
int3
lahf
and
or
mov
mov
mov
or
sbb
push
imul
clc
mov
stos
pop
test
fisubrl
fisubrl
xchg
mov
push
in
rol
outsb
push
stos
or
stos
loop
loopne
push
inc
lea
inc
xor
mov
sbb
and
jecxz
or
or
pop
mov
sub
mov
and
and
adc
jne
push
test
iret
cltd
out
leave
aam
mov
or
imul
xchg
test
adc
xchg
hlt
and
hlt
xchg
mov
pop
fists
add
fs
cmpsl
mov
mov
pop
lods
jmp
inc
cmp
jle
pop
lods
sub
xor
add
mov
push
jge
dec
mov
and
mov
pop
sub
clc
insl
pop
popa
dec
xchg
test
das
adc
sbb
daa
jmp
pop
sbb
inc
test
test
in
xchg
pop
mov
cmpsl
jbe
data16
jae
daa
dec
aaa
sbb
imul
xor
jns
sub
gs
sbb
pop
or
jne
cmp
dec
cmp
ljmp
inc
xchg
das
loope
or
dec
roll
sub
movsl
pmaxsw
test
or
sub
dec
stc
test
movsb
int3
pop
inc
lret
addl
es
fnstenv
cmc
shrb
repz
inc
jae
and
xchg
mov
lods
les
sbb
and
push
jge
mov
or
jmp
ret
cwtl
mov
je
ficoml
mov
pop
sysenter
je
pop
ds
xor
test
dec
push
cld
cmp
jp
lea
out
dec
loopne
rclb
and
adc
mov
mov
in
aad
lods
test
dec
jne
sub
adc
pop
xor
out
add
fs
jbe
sti
lret
call
jmp
xchg
aaa
mov
sbb
leave
sub
int3
ja
aad
dec
call
push
out
aas
push
xorb
fs
xor
scas
scas
or
adc
add
mov
sub
xchg
jmp
mov
pushf
pop
pop
xchg
test
imul
pop
mov
or
sub
jae
push
xchg
dec
mov
inc
das
hlt
lahf
lods
fs
add
icebp
cmc
inc
cld
mov
in
adc
stos
sbb
xor
fwait
or
aad
repz
mov
mov
push
sbb
inc
sub
xchg
cltd
inc
call
scas
jo
dec
mov
cmp
push
testb
mov
fidivrs
adc
bound
test
jp
push
ja
and
xor
outsb
fiadds
test
mulb
xchg
lods
icebp
sbb
mov
and
cmp
repnz
or
push
bound
enter
std
pop
fwait
out
sbb
mov
int
ret
mov
pop
cmp
sti
stos
aam
scas
jo
push
lret
test
and
les
adc
cmp
subl
cmp
xor
repnz
xchg
jns
imulb
push
adc
ja
test
cltd
jge
nop
fstpl
pusha
out
imul
int
dec
xchg
mov
mov
pop
sub
dec
xor
cmp
je
push
xor
or
int
mov
popa
adc
or
fnsave
dec
aam
leave
mov
fdivrl
movsl
dec
adc
mov
mov
das
stos
adc
cmpsl
push
and
pop
bound
cmp
push
sbb
gs
clc
jno
dec
fwait
push
rcrb
mov
in
xor
pop
into
mov
jne
push
arpl
iret
cmpsb
fisubs
in
sbb
xchg
or
repz
fcmove
sub
mov
mov
aaa
inc
or
mov
xor
pop
mov
out
mov
jp
mov
cli
mov
fwait
fwait
mov
inc
dec
stos
xor
mov
in
xor
mov
hlt
or
loop
mov
call
movsl
push
jns
push
adc
pop
push
or
sub
push
stos
ret
mov
aaa
ja
sbb
cmpb
xchg
std
jmp
adc
iret
push
scas
lret
push
mov
fcoml
pop
jb
push
xor
mov
repz
pop
icebp
add
sbb
mov
loope
mov
xchg
ret
sub
jbe
xchg
sub
sub
mov
in
shll
daa
push
xchg
add
adc
dec
push
sbb
aad
test
repnz
xchg
fiaddl
push
icebp
shrl
pusha
jle
mov
enter
lcall
or
sti
sub
pop
icebp
stos
shl
push
pop
xor
sarb
mov
jo
imul
pop
push
mov
or
test
notl
inc
pop
popf
out
movsl
jl
dec
lods
cli
fidivrl
mov
mov
xchg
loopne
int3
inc
mov
in
and
shll
push
jecxz
or
pop
aaa
imul
sbb
aad
push
outsl
push
push
mov
lahf
xchg
xor
mov
in
int3
xchg
pop
bound
sbb
push
test
lret
filds
push
insb
jecxz
mov
sbb
push
add
mov
and
aaa
cli
xchg
repnz
outsb
in
push
cmp
rcrl
xchg
shll
test
mov
and
adc
in
out
call
imul
sbb
inc
cs
cwtl
dec
aas
sbb
sub
insl
repz
dec
arpl
mov
repnz
dec
cld
in
daa
xchg
push
and
in
sbb
lcall
add
ss
cmc
imul
jle
inc
iret
int3
mov
cmp
pop
ret
mov
mov
mov
jge
or
shl
sub
inc
insb
push
mov
xor
adc
icebp
xchg
loop
adc
ret
shrl
sti
sti
andl
jge
jbe
xchg
orl
jb
push
call
cmpsb
loope
mov
xor
inc
add
test
shrb
lcall
or
mov
lcall
push
ret
lret
jbe
sub
xor
lods
outsl
int3
xlat
mov
cld
push
nop
outsl
and
scas
xor
adc
sbb
jne
lods
add
dec
adc
test
popa
js
fucomp
lcall
push
pop
jns
xchg
jne
outsl
pusha
in
ja
imul
test
sbb
mov
ret
inc
sbb
dec
iret
sbb
sahf
xor
mov
imull
and
push
jge
push
out
pop
loope
and
push
jns
outsl
mov
push
pop
xor
rorb
pop
cmp
std
xor
faddl
movsb
jmp
stos
cld
jae
sbb
pop
mov
xor
jecxz
fwait
ror
mov
jo
xchg
sbb
fimuls
or
in
test
sbb
lcall
lock
and
pop
cltd
jo
xorb
jo
nop
xchg
push
loopne
xchg
leave
inc
aad
sub
ss
outsb
push
jg
int3
sbb
xor
enter
enter
ljmp
loop
std
movb
sbb
xlat
mov
aad
data16
fwait
clc
mov
movsl
outsl
std
mov
push
cmp
dec
ss
icebp
es
mov
push
popa
push
div
or
nop
xor
mov
add
inc
addr16
popa
mov
pop
pop
pop
mov
lods
fadds
add
sub
cmpsl
xlat
shll
orb
std
jmp
cmp
jmp
sbb
adc
cmpb
in
cwtl
pop
test
cmp
cmpsl
mov
aad
mov
stos
outsl
dec
stos
and
fsts
mov
lret
cmp
push
outsb
fldt
mov
mov
bound
xchg
hlt
out
add
enter
out
and
jge
cmp
loopne
scas
js
sub
jge
sub
out
mov
test
dec
shl
mov
cmp
sbb
jmp
jg
enter
sub
sbb
adc
sub
addr16
pop
inc
lcall
push
and
sub
sahf
subl
inc
mov
aad
ret
add
inc
xchg
out
bound
pop
je
add
sub
dec
sbb
ljmp
out
dec
dec
pushf
sub
add
dec
adc
cmpb
mov
mov
lret
xor
in
mov
lds
or
out
xchg
mov
popa
shll
mov
arpl
addr16
out
xchg
out
leave
or
scas
mov
inc
loopne
inc
fcomp
and
pop
popa
or
pusha
dec
mov
dec
add
ret
scas
cmp
add
jne
icebp
mov
ret
cmpsl
mov
daa
push
test
fmuls
clc
mov
fstpt
add
aad
int3
iret
sub
cmp
xchg
sbb
je
pushf
mov
mov
dec
cld
icebp
clc
bound
lods
jnp
insl
arpl
push
xor
adc
mov
into
mov
insb
out
lret
popf
jnp
repz
add
dec
and
jno
or
push
dec
mov
xchg
mov
in
int3
pushf
fidivrs
sbb
fists
setae
push
fiadds
xor
add
popf
or
sbbl
xchg
fimull
shlb
arpl
icebp
push
cmp
dec
and
jl
dec
or
lret
iret
xor
loope
ss
call
pop
jmp
push
and
decl
pop
lods
or
bnd
into
and
push
mov
or
pop
ret
mov
test
adc
cmp
jle
inc
adc
fstps
mov
ds
dec
cmp
outsl
dec
push
cmp
lret
dec
inc
out
mov
sbb
les
xchg
frstor
je
loopne
lret
sbb
pop
sbb
stos
inc
es
mov
in
lret
sub
hlt
movsl
stos
incb
rclb
or
fcoms
repnz
insl
daa
fadd
aaa
pushf
pushf
ret
cmp
sbb
insl
push
mov
xchg
movb
in
mov
xchg
cmp
inc
mov
mov
add
jg
stos
push
fiadds
sub
cld
into
loope
sbb
test
push
mov
xchg
add
iret
imul
push
or
fldcw
movsl
loopne
pop
mov
test
adc
mov
outsb
inc
stos
xor
stos
test
or
add
inc
cltd
sti
jle
xchg
fimuls
stos
leave
popa
xor
and
dec
lods
fmuls
mov
and
dec
mov
push
stos
std
push
daa
pop
cmp
inc
pop
sar
jnp
pop
adc
sub
and
ret
xor
rcl
pop
pop
or
test
and
leave
imul
cwtl
mov
mov
and
jp
inc
aaa
stos
and
loopne
cmp
pop
sbb
gs
xchg
mov
int3
and
adc
daa
adc
cmp
pop
sbb
sbbl
mov
sbb
in
jecxz
fiadds
in
jns
inc
imul
outsl
leave
dec
movl
or
cmp
das
divl
loopne
nop
mov
xor
in
add
in
mov
jbe
mov
xchg
mov
or
jne
movsl
pop
cmp
les
popf
xor
pop
jl
mov
push
xorl
in
mov
xor
in
sub
or
xchg
xor
mov
sub
arpl
icebp
xchg
or
xchg
jge
out
sbb
mov
mov
adc
dec
sahf
jbe
or
cmp
pop
je
mov
push
imul
dec
xor
gs
rclb
pop
shr
sub
arpl
testl
add
xchg
and
xor
jp
inc
clc
push
notl
shlb
dec
js
inc
into
mov
mov
dec
idiv
xchg
andl
in
xor
pop
mov
and
loopne
add
fidivrl
hlt
xor
call
add
push
push
sub
mov
lock
mov
mov
mov
add
roll
or
int3
xor
stos
mov
sub
scas
stos
aas
popf
xorb
push
xchg
push
test
jmp
adcl
lret
dec
xchg
addr16
mov
sub
movsb
push
aas
cmc
mov
out
ficoml
jne
imulb
adc
mov
sub
cmp
pop
jg
aas
add
cmp
lret
jne
lret
xchg
fldt
icebp
pop
and
sti
cmp
lea
mov
jle
fstpl
incl
inc
scas
shll
insb
insb
mov
nop
xor
cmp
in
pop
mov
mov
mov
outsb
gs
outsb
loope
sub
stos
sub
adc
cmpsb
inc
faddl
std
inc
mov
js
inc
mov
rcrl
push
leave
fistpll
je
jmp
out
jecxz
clc
lcall
movsb
jp
in
dec
mov
adc
mov
sbb
loope
aam
ljmp
stos
pop
lods
mov
inc
jle
pop
push
enter
fadds
xor
jle
xor
pop
xchg
jne
pop
mov
ds
sbb
jne
pop
or
outsb
aad
int
sbb
les
scas
mov
popa
mov
aad
call
aas
aad
cmp
roll
xchg
push
xchg
ljmp
push
rolb
xchg
jg
cmp
dec
lods
test
xor
xorb
push
in
xchg
dec
lea
pop
lods
push
push
mov
jns
xor
pop
push
lahf
lock
enter
jge
dec
inc
stos
gs
and
insl
add
in
mov
iret
out
ret
xchg
aam
mov
sbb
pop
call
add
rcrb
cli
add
sbb
push
lds
popa
sti
cmp
fimull
sub
dec
cmp
testl
jmp
jbe
pusha
bound
and
ret
mov
movsb
add
hlt
ljmp
lods
cmc
or
nop
in
sbb
adc
pop
aad
jg
sbb
add
out
and
jl
outsb
xchg
movsb
lcall
mov
jle
cli
insb
int3
mov
sbbb
and
adc
std
mov
fs
jmp
inc
sbb
je
xchg
fnsetpm(287
sbb
push
cmpsl
dec
mov
push
shr
ret
inc
ss
push
and
push
jle
add
aaa
push
mov
pop
arpl
xor
dec
xor
and
sahf
dec
mov
stos
and
mov
and
sub
adc
add
push
and
dec
push
xchg
in
adc
jns
into
fdivrs
aad
es
in
lods
xor
inc
out
push
lods
sub
ljmp
sub
push
xchg
cmpsb
frstor
addr16
mov
lret
fs
decl
repnz
insl
je
push
test
mov
es
inc
xlat
sarl
push
push
lret
mov
lds
xchg
gs
imull
mov
jle
inc
mov
fistpll
les
mov
iret
cs
xchg
mov
or
dec
mov
pop
mov
sbb
test
aad
scas
push
and
jecxz
out
sbb
cltd
out
xchg
enter
mov
dec
push
lcall
stc
push
mov
fisttpl
out
mov
roll
outsb
enter
sbb
mov
inc
xchg
sub
pop
mov
shrl
mov
je
rcrl
int3
sbb
push
mov
push
mov
add
xchg
loope
mov
aad
daa
loop
sarb
ret
int3
jnp
xchg
cmp
sbb
cmp
push
je
mov
push
out
cltd
jecxz
push
inc
fidivs
or
call
loopne
jo
mov
roll
sbb
jp
aad
mov
push
fisttpll
mov
add
or
scas
test
dec
or
push
loop
fisubl
sub
sbb
in
inc
sub
cwtl
test
pop
push
xchg
shr
out
cmp
xlat
lea
mov
xchg
mov
inc
xor
fdivp
fdivr
jae
mov
or
fcmovu
push
mov
mov
ljmp
jmp
scas
daa
inc
inc
sbb
repnz
dec
pop
and
in
push
sub
aaa
lds
adc
movsb
stc
cmpsl
sbb
pushf
pop
nop
out
pop
lret
mov
test
jbe
mov
mov
aas
jge
sbb
or
dec
es
push
pop
or
int3
rorl
movsb
inc
and
js
inc
aad
sbb
xor
mov
dec
bound
inc
push
xchg
jp
push
cmp
dec
call
dec
xchg
adc
out
xor
mov
xor
lahf
das
inc
xchg
pop
std
imul
cs
pop
fdivr
xchg
push
jl
test
fistl
roll
push
mov
pusha
push
cltd
ja
pop
xor
addb
jae
mov
mov
sbb
cltd
arpl
push
or
lret
faddl
lret
push
mov
aas
popf
mov
cli
into
mov
call
loop
cld
enter
push
sub
scas
or
cs
faddl
and
in
je
jle
divl
pop
mov
pop
lcall
jge
push
scas
imul
and
xchg
or
cmp
adc
mov
or
repz
pop
scas
pop
pop
jecxz
push
push
mov
pop
scas
pusha
push
jb
xlat
movsl
sub
pop
stos
cmp
mov
jmp
jl
inc
xchg
xor
cmp
cmp
clc
pop
jbe
test
lods
jo
in
mov
mov
jmp
std
stc
sbb
out
out
mov
cmp
clc
pop
test
js
in
xor
mov
push
inc
inc
psubusw
daa
dec
movsl
leave
cmp
xchg
movb
ds
mov
mov
js
fmull
imul
jmp
clc
repz
jbe
in
sbb
pop
fs
into
ds
mov
sub
mov
mov
enter
sahf
sbb
pop
nop
pusha
xor
fwait
mov
mov
fldcw
lcall
cmp
pop
pop
test
ficoml
fstl
addr16
ja
and
sbb
cmp
ss
mov
adc
mov
sub
ret
xlat
sbb
lret
mov
fs
xor
addr16
out
jge
jne
lahf
or
mov
int3
sti
fdiv
jg
movsb
adc
cmpsb
sbb
lds
repz
xorb
cltd
add
mov
lock
ljmp
xchg
inc
sbb
push
sub
adc
jne
ret
cmc
pop
push
mov
shll
or
inc
add
mov
dec
lods
jmp
daa
adc
orb
fnstcw
scas
or
les
xor
jnp
push
cltd
mov
mov
cmc
xchg
push
push
or
and
lods
sbb
add
push
jae
leave
icebp
mov
mov
lret
cmpsl
ret
adcl
adc
push
push
movsb
pop
or
hlt
inc
out
lea
scas
hlt
iret
insb
mov
pop
popa
mov
test
and
movsb
xchg
aas
das
adc
mov
ret
pushf
sub
xchg
cwtl
inc
add
push
adc
and
das
or
negb
push
dec
pop
inc
sbb
int
dec
push
push
mov
insb
mov
sub
jg
sub
jbe
and
test
pop
jle
aam
rcrl
adc
pop
ljmp
cltd
dec
pop
xchg
roll
sbb
shlb
adc
out
fisubs
rol
mov
lock
push
bound
jmp
and
dec
mov
mov
adc
mov
iret
or
jnp
push
fwait
mov
inc
cmc
xchg
adc
cmpsl
add
add
mov
push
loop
push
pop
xor
pop
test
jae
fiaddl
or
inc
imul
pop
cmpsl
fstp
inc
lds
gs
push
sbb
xchg
stos
dec
push
mov
iret
sbb
frndint
inc
adc
pushf
or
xchg
inc
stc
mov
pusha
inc
rcrl
cmp
xchg
mov
ds
fiaddl
jbe
jl
mov
loop
cmp
xor
push
jae
test
outsl
mov
push
add
jecxz
jno
movsb
pop
xchg
mov
mov
pop
xor
pop
movsb
sub
jbe
out
mov
and
imull
lock
lds
add
jmp
test
test
hlt
sahf
pop
mov
add
sub
xchg
cwtl
mov
push
js
cmp
mov
pop
sbb
mov
push
dec
xchg
xor
inc
cmp
push
add
push
mov
or
jnp
inc
sbb
lds
jnp
dec
sbb
lods
test
inc
sub
movswl
push
cmp
sub
adc
shll
int3
mov
int
or
jg
int3
mov
sbb
mov
fdivl
std
and
xor
dec
cmp
jmp
ds
dec
loopne
jl
lds
xchg
inc
shr
mov
lahf
inc
or
loop
stos
cmp
dec
movsl
jae
lods
mov
sub
mov
int3
mov
push
into
je
cmp
pop
jle
sbb
popa
xor
push
imull
pop
sbb
test
lock
mov
add
pushf
movsb
xchg
cltd
sub
clc
mov
insb
xlat
push
pusha
push
add
dec
shlb
cwtl
dec
aad
cmpsl
and
xchg
gs
in
add
repnz
xor
ds
insb
out
ja
aas
xchg
sub
std
jb
cmc
aas
stos
ds
inc
pop
mov
add
jae
int3
jne
push
inc
mov
xchg
popf
sbb
fs
mov
mov
xchg
xchg
popf
test
sub
pop
sub
mov
xchg
ficomps
pusha
push
or
fldl
pusha
jge
pop
popf
fimuls
stos
cmp
mov
and
push
push
in
mov
repz
adc
movsl
frstor
adc
push
es
xchg
xchg
loop
pushf
imul
test
adc
aaa
fcompl
jmp
in
insb
sbb
or
imul
dec
xor
xor
xor
lret
sbb
lods
cmpsb
dec
xchg
je
sbb
sub
test
dec
pop
or
sbb
test
mov
sub
jb
lods
idivl
xchg
das
dec
push
pusha
out
pop
bound
inc
iret
movsw
addr16
call
xchg
int
sub
cmp
sub
mov
xchg
mov
adc
fisubs
js
inc
lcall
outsb
sub
mov
mov
push
mov
pop
push
imul
leave
or
mov
and
cltd
xchg
lock
lds
mov
jmp
sbb
and
fs
and
jb
movsb
xor
cmp
mov
adc
decl
and
push
pop
lahf
mov
test
add
push
es
sbb
shll
lock
push
and
sbb
sti
mov
es
dec
fsubrs
insb
sub
dec
jnp
insl
lea
sbb
shl
inc
lock
scas
fisubs
pop
or
adc
add
mov
sub
add
adc
adc
inc
inc
push
addb
cmp
scas
test
daa
aam
jl
mov
lret
push
into
or
inc
outsb
jb
mov
mov
cld
icebp
mov
xchg
arpl
pop
rolb
push
arpl
and
lods
jae
jg
cmp
adc
addl
rcrb
xor
mov
adcb
into
pop
addr16
mov
xor
lds
sbb
dec
movsl
cwtl
rcl
movsl
sahf
pop
mov
jl
lret
fstpl
mov
shrl
imul
xchg
jg
and
mov
cmp
jp
popf
mov
inc
or
adc
in
push
cmp
cli
shlb
lods
mov
ds
repnz
fwait
dec
sbb
scas
sbb
jle
fninit
and
popa
cwtl
xlat
sti
aaa
loopne
stc
scas
xchg
in
push
ljmp
push
test
fs
xchg
lcall
sub
pusha
mov
add
jmp
call
daa
sbb
and
inc
and
lret
pop
sbb
icebp
mov
es
xchg
sub
pop
outsl
nop
mov
call
push
dec
shll
imulb
test
dec
in
pop
inc
mov
addl
jp
ss
int
outsl
loope
gs
jle
test
pop
jnp
lock
cs
mov
cmp
and
fsubs
pushf
sub
sub
cmp
xchg
mov
xor
jmp
lds
mov
or
das
xchg
and
dec
cmp
mov
sub
dec
adc
dec
aas
xlat
mov
imul
add
lea
jno
outsl
and
daa
dec
push
std
mov
push
fcoms
pushf
push
mov
rolb
pop
sub
cmpsl
cmp
xchg
add
out
mov
mov
std
sti
lret
lret
push
icebp
pop
not
ss
mov
xlat
dec
push
rcrl
pop
fimuls
jb
cmp
insb
addr16
push
push
sub
adc
fnstsw
cmpsl
add
xchg
xchg
nop
mov
stc
pushf
push
outsb
sub
pop
add
daa
flds
cmpsl
xchg
add
cmp
sbb
ret
outsb
add
inc
call
pop
in
pop
push
and
xor
fnstsw
rcl
xchg
add
neg
pushf
adc
subl
jb
pop
outsb
mov
cmpsl
jno
lahf
sbb
leave
and
jae
cs
push
adc
xor
push
xchg
ds
cld
jmp
int3
add
push
add
mov
std
ja
mov
inc
divb
nop
jle
idivl
add
es
fsubrl
das
bound
insl
lds
sbb
mov
xor
sub
in
and
fwait
popa
shll
xor
call
test
add
mov
sbb
test
and
push
pop
cmp
scas
out
ss
pop
mov
inc
fs
aas
cmpsl
mov
call
lcall
jb
adc
cmpb
mov
js
test
push
xor
pop
mov
clc
mov
jl
sub
jb
push
dec
loopne
cmp
or
jne
sarl
push
in
pop
out
or
mov
pop
xchg
jno
xlat
mov
scas
test
inc
mov
or
jp
js
mov
dec
lock
inc
hlt
and
mov
sub
or
nop
lret
sbb
or
add
lods
mov
orl
test
pmaddwd
sbb
adc
movsl
dec
sbb
cmp
loop
add
aad
add
inc
sub
or
push
or
jno
pop
arpl
mov
jne
popa
xchg
lods
jbe
out
popf
pop
divb
fildl
out
jb,pn
jg
lods
gs
lods
fdivrl
push
aad
hlt
xabort
hlt
test
push
cmp
jl
imul
cmpsl
sub
push
repnz
add
pushf
jmp
out
das
sub
mov
fcmovb
sub
xchg
pop
lret
mov
movsl
ds
outsb
adc
adc
add
mov
lods
rol
nop
xchg
jl
adc
or
and
popa
sahf
mov
or
scas
into
xchg
je
jb
gs
fists
divb
cmp
rcr
and
sbb
push
push
lock
sub
or
xchg
test
jnp
rorb
inc
fstpt
dec
sbb
mov
movsl
push
dec
imul
sub
adc
xor
mov
mov
sbb
push
jae
inc
jg
imulb
cmpsl
push
pop
out
or
icebp
mov
adc
mov
fdivr
testl
jnp
pop
clc
ljmp
test
ds
xchg
lea
sub
ret
xchg
ret
adc
ja
add
sub
pop
dec
mov
aaa
lcall
pop
fwait
xchg
stos
scas
adc
pusha
call
adc
test
xchg
lcall
jns
loope
addr16
fists
ss
pusha
outsl
fwait
push
mov
les
sbb
jne
mov
int3
mov
cmpsb
mov
dec
pop
outsb
mov
cltd
incb
repnz
aam
jno
mov
loope
mov
cmc
inc
xor
enter
test
or
clc
push
jge
repnz
push
lahf
in
sub
movsl
sti
push
packuswb
or
lea
stos
fs
data16
pop
lret
out
jl
push
adc
pop
push
aaa
pop
lret
cmp
mov
adc
add
pushf
push
data16
push
movsl
int3
ficoms
cmc
pop
cmpl
jl
popa
loop
fwait
andl
push
stc
in
addr16
das
mov
out
call
xor
lods
cmpsb
mov
test
outsb
sbb
out
scas
les
xor
repz
leave
test
jo
in
and
lcall
dec
enter
lret
fdiv
adc
arpl
movl
sub
ss
adc
sub
mov
pop
fisttps
fcmovb
sub
jne
rorl
rcl
push
pushf
xchg
stc
sub
hlt
inc
mov
les
insb
stos
mov
add
and
mov
loop
popf
andb
insl
loopne
adc
lock
test
sbb
enter
ja
outsl
mov
pop
cld
mov
jge
stos
shll
aam
mov
fisubrl
mov
stc
sti
sub
ljmp
push
adcb
mov
or
rdpmc
sbb
cmp
imul
xor
inc
ja
xchg
xchg
dec
jge
xchg
fwait
je
cld
rcpps
pushf
cld
into
cwtl
mov
hlt
jmp
lods
mov
push
dec
sub
mov
and
fbld
pop
adc
adc
dec
pop
out
pusha
push
iret
outsb
xor
rclb
mov
mov
pop
cmc
add
nop
ljmp
sub
insb
fidivrl
call
mov
mov
cs
scas
lea
and
mov
stos
jmp
push
in
or
aam
repnz
add
sbb
cmp
sub
cmp
ror
sbb
add
cmp
sbb
push
cld
sub
cld
xchg
dec
in
jl
adc
or
mov
dec
aam
inc
mov
mov
xstore-rng
cmpsl
sbbl
ret
shll
fidivl
movsl
addr16
mov
dec
fldenv
popf
add
xor
imull
aaa
mov
lahf
movsb
nop
insl
jg
or
or
bound
cwtl
call
imul
bound
outsb
cmpsb
in
pop
leave
repz
ror
ficoms
test
loopne
shrb
lea
mov
and
xchg
lahf
les
add
xlat
rorl
push
roll
dec
add
push
rclb
and
sbb
mov
pop
sbb
mov
push
repnz
mov
mov
rcrl
std
dec
push
dec
mov
lcall
ret
xchg
rorb
stos
pop
fidivl
lret
cmp
jle
sbb
mov
daa
iret
cmp
dec
popf
jae
inc
or
mov
cmc
sub
push
outsb
inc
addr16
sbb
adc
mov
test
adc
jg
test
icebp
dec
mov
insb
inc
or
daa
out
int
mov
in
nop
pushf
mov
outsl
int3
cld
ds
aam
outsl
pop
ja
in
mov
mov
mov
push
scas
mov
cli
xor
das
cltd
push
fnsave
sub
mov
jle
je
aaa
or
mov
sub
scas
xchg
mov
jbe
leave
and
stos
enter
call
aas
and
push
push
cltd
push
loope
pushf
pop
into
adc
and
mov
add
jb
xlat
mov
cs
hlt
test
mov
clc
add
mov
jo
dec
sub
aaa
cs
cmp
imul
test
sbb
test
sub
lock
sbb
push
int3
mov
daa
sub
and
daa
cltd
adc
mov
fcomi
push
iret
test
setg
dec
or
lods
sarl
outsb
inc
sbb
in
js
mov
adc
jle
iret
lds
sbb
jmp
mov
repnz
sbb
jg
mov
mov
mov
es
lcall
xor
clc
mov
hlt
push
adc
jb
mov
mov
or
testb
loopne
pop
sbb
and
js
and
cwtl
cmp
cs
push
lahf
nop
cs
fs
xor
psubsb
xlat
mov
xchg
pop
aaa
jne
aam
scas
mov
dec
stc
mov
dec
cld
int3
lds
inc
inc
jmp
push
xchg
test
jecxz
aam
xchg
xchg
add
inc
fidivl
fcmovu
and
ret
pop
mov
xchg
xchg
test
pop
in
sbb
mov
ret
pop
rolb
fs
mov
lock
add
mov
mov
orb
adc
movsl
shlb
daa
dec
inc
mov
les
mov
inc
lods
dec
cmp
inc
sub
push
sub
or
hlt
popa
std
inc
cwtl
and
and
mov
jge
in
jle
xchg
push
das
repz
mov
or
loope
enter
inc
push
aaa
test
cmpsl
mov
mov
call
pop
cli
dec
adc
xchg
repnz
dec
jmp
xchg
repnz
int3
xor
jmp
inc
out
or
mov
and
jecxz
or
add
sbb
js
adcb
mov
add
and
push
adc
add
outsl
pushf
js
sub
add
ja
xchg
scas
xorl
mov
xor
cmpsb
mov
adc
cli
dec
mov
mov
test
xor
mov
cltd
push
out
ljmp
push
and
shrb
mov
sub
movsb
xchg
and
mov
push
mov
sub
loop
aad
dec
sub
jo
add
or
push
push
push
addl
and
cmp
in
dec
sbb
outsb
push
jae
sbb
cwtl
ljmp
test
into
pop
daa
jo
xchg
notl
mov
mov
popf
sub
gs
sti
add
fwait
std
adc
loop
jo
orb
jne
out
lock
rep
fstpl
lock
push
subb
and
ret
mov
pop
js
movsl
data16
or
and
loop
into
cmp
add
loopne
mov
rorl
mov
pop
mov
sbb
or
pusha
leave
inc
jl
and
jg
jno
pop
cmp
push
mov
cld
bound
pop
repz
les
mov
dec
out
xor
leave
scas
and
test
ljmp
inc
jb
sub
lods
cltd
mov
xor
push
cs
lret
inc
add
push
lea
mov
int
data16
jns
pusha
or
jecxz
push
adc
popa
sub
or
arpl
adc
popa
int
in
in
xor
add
movsb
sub
pop
xor
ja
leave
dec
lret
add
pop
or
rorl
loope
sbbl
xchg
rclb
nop
add
sbb
jp
mov
mov
sbb
push
mov
leave
inc
add
enter
pop
jae
jl
sub
jae
push
mov
xor
out
fiadds
sbb
mov
popa
test
push
fsubs
stos
out
je
push
push
fwait
xchg
jns
pop
mov
nop
fidivl
sub
btr
addr16
push
and
sbb
enter
movsb
lods
icebp
mov
pop
push
add
mov
mov
test
iret
in
push
adc
fwait
gs
add
daa
cli
clc
insl
imul
movsl
inc
test
cmp
mov
jo
cwtl
jno
push
mov
sub
cmp
into
insb
insl
nop
or
cmp
imul
mov
jle
mov
cmp
adc
call
test
aad
stos
in
or
cmpsb
stos
or
ss
xor
adc
cmpsl
and
fsubs
bound
lcall
push
mov
mov
call
mov
push
mov
push
sti
add
ljmp
stos
cmc
pop
xchg
loop
mov
mov
xor
adc
or
enter
inc
mov
jbe
cli
sub
test
shrb
jo
into
cli
xchg
xchg
sub
ret
jecxz
in
push
sub
pop
and
hlt
sub
pusha
jns
out
repnz
icebp
cmp
lock
xchg
scas
aad
fildll
movsl
push
xchg
push
mov
imul
jae
mov
sub
mov
call
mov
lahf
add
sbb
aad
insl
loope
and
shrd
aad
adc
add
loopne
js
cmpsl
les
jecxz
inc
push
or
pop
cmpl
and
pop
filds
pop
dec
mov
rol
orl
stc
aaa
stos
mov
lods
adc
shlb
test
xor
or
push
cs
inc
call
bound
test
xchg
aaa
pop
push
loop
ss
sar
lock
pop
loopne
xchg
adc
cmpsl
ror
inc
xor
icebp
cs
repnz
mov
cli
push
mov
icebp
test
sub
jo
ret
icebp
loopne
add
jns
clc
sahf
aad
mov
test
mov
stos
loop
stos
movsb
xchg
sub
andb
gs
loopne
aaa
xor
std
call
inc
out
jbe
add
and
out
mov
aaa
lods
adc
daa
cmpsl
xor
sarl
push
mov
add
jno
mov
mov
mov
dec
aas
mov
mov
jb
dec
mov
fcmovbe
push
nop
jp
loope
daa
ret
jle
sti
jne
pop
lds
fimull
test
test
xchg
mov
and
dec
loopne
gs
and
mov
xchg
addr16
scas
jbe
fsubl
add
fidivrl
mov
sub
mov
jge
dec
enter
sbb
push
dec
or
rorl
lret
mov
push
mov
je
cli
jecxz
push
inc
rol
mov
sbb
push
and
and
lods
test
andl
ret
in
xor
dec
aaa
sbb
imul
iret
pop
push
icebp
scas
in
mov
outsl
fnstcw
stc
jne
mov
jp
mov
rcrb
xchg
int
xor
sahf
shr
xchg
jmp
add
shlb
rcrb
lret
push
xor
aad
pop
in
out
loopne
mov
jmp
inc
ja
jge
mov
jmp
ljmp
adc
aad
lret
adc
dec
inc
and
cmp
and
arpl
inc
ds
push
test
xchg
push
adc
sbb
jge
adc
mov
or
jnp
push
inc
push
sbb
test
sbb
xchg
lea
and
shlb
xor
pop
pop
rcll
push
adc
jae
xchg
stos
push
sub
lds
push
test
std
sub
popa
out
mov
jge
pop
push
fmuls
pop
in
or
mov
fbstp
cmp
mov
xor
xchg
push
out
add
rcrl
push
imul
xor
test
stos
fnstenv
fdivrl
stos
dec
jns
mov
adc
push
pop
rclb
mov
stos
sbb
mov
mov
dec
out
div
jb
cld
jg
push
stc
xchg
bnd
inc
sbb
xlat
sbb
add
and
xlat
xlat
cmp
fcompl
sub
in
jo
mov
adc
xchg
mov
addr16
iret
cld
or
shrb
data16
cmp
adc
test
lods
push
add
dec
outsb
clc
xchg
sub
lea
cltd
pop
cld
inc
in
push
testb
mov
pushf
sbbl
testl
pop
push
ljmp
es
xor
xor
mov
ja
pop
sbbl
popa
and
xchg
leave
out
mov
xorl
cmpsb
push
ss
in
subl
cli
sub
js
out
jne
mov
pop
negb
outsl
out
leave
negl
dec
inc
fwait
enter
fwait
cmp
or
std
lods
adc
aas
inc
sbb
sub
icebp
sub
je
in
cltd
pop
mov
ds
xor
imul
xchg
les
fisttpl
or
or
into
sub
pop
xlat
cmp
xlat
mov
mov
pop
push
addr16
inc
lahf
aad
push
cli
jbe
mov
pusha
mov
add
or
ss
pop
jge
sbb
xor
int
arpl
xor
stos
nop
pop
mov
call
adc
shll
je
push
popf
jge
push
xlat
lahf
jbe
push
shrd
and
pop
add
sbb
xor
out
add
scas
rcll
lods
mov
pop
mov
cmpsb
mov
fmuls
insb
sub
xchg
stos
xchg
adc
int3
jp
cltd
dec
xchg
hlt
mov
jno
popa
mov
pop
in
mov
jns
mov
xchg
mov
pushf
repnz
pop
jmp
jno
push
push
stos
sub
data16
dec
in
sub
gs
mov
into
arpl
dec
jbe
ds
jle
mov
cmpsl
repnz
in
and
xor
lea
mov
sarb
jp
bound
inc
loope
filds
repnz
mov
call
aam
xor
xlat
cmc
outsb
test
cmp
neg
div
push
jp
pop
mov
cld
out
mov
dec
pop
fwait
add
push
mov
add
imul
mov
cmc
cli
xlat
lret
pop
jne
scas
lea
dec
mov
mov
sbb
mov
sub
repz
cs
dec
or
leave
fistps
mov
adc
jecxz
mov
outsb
imul
cmp
shlb
mov
daa
outsb
test
mov
inc
lret
mov
mov
cmpsl
lcall
push
mov
mov
jno
sub
iret
fsubrl
loopne
orl
movsl
fdivrl
ror
cld
sbb
dec
push
ss
dec
add
sti
sti
stc
repz
sarb
jp
dec
mov
fwait
cs
hlt
jl
inc
bound
pop
xor
fwait
mov
iret
loopne
cs
push
in
or
pop
out
sub
sbb
adc
jmp
xor
adc
xor
push
jne
pop
addr16
jle
xchg
cwtl
cmp
outsl
insb
fiaddl
cmp
jnp
pusha
xor
push
fsubs
int
daa
cmp
xor
cld
mov
or
mov
scas
test
mov
ds
adc
push
out
movsl
inc
push
movsl
jle
inc
movsl
loopne
mov
addb
adcb
pusha
sub
jae
mov
jo
mov
mov
outsl
out
packssdw
push
push
jecxz
push
pushf
cltd
inc
cmpsl
jo
sti
pop
or
jne
rol
sub
inc
aad
enter
rcll
shr
mov
dec
dec
dec
mov
fsubrs
ret
xor
jmp
xor
mov
adc
dec
cmp
jge
mov
loop
xchg
nop
shl
jle
test
xor
into
ss
mov
sub
add
fisubs
xor
push
xchg
pop
add
pushf
insb
pusha
lret
stos
lods
rorb
hlt
lahf
leave
shl
mov
fidivs
sub
arpl
cs
sti
jecxz
aam
cwtl
sqrtps
pop
rcl
add
or
push
add
sub
add
aas
dec
rolb
inc
lea
or
and
cmp
or
fdivs
fildll
ljmp
fisubrs
pop
jne
dec
imul
mov
add
outsb
xchg
xorb
adcl
dec
test
sub
and
pop
cmc
mov
jb
mov
sarl
fcompl
add
lods
rclb
xchg
shlb
pushf
rclb
pop
out
movsb
sbb
cmp
mov
xor
loopne
fsts
pop
in
push
popl
mov
scas
inc
lock
fbld
in
mov
sbb
lock
cs
or
les
dec
fldl
in
lret
scas
mov
sbb
mov
mov
push
dec
cld
lds
push
mov
cmpsb
outsl
test
loop
cmp
cmp
xor
sbb
and
inc
mov
sbb
pop
filds
ja
stos
outsl
arpl
and
test
and
xor
push
loope
pop
test
test
jb
inc
mov
movb
cs
xchg
popa
aam
incl
rclb
scas
sub
js
sbb
dec
mov
aas
and
lret
adc
out
mov
mov
movsl
orb
imul
loop
scas
out
jnp
fildll
ja
mov
mov
push
sbb
ss
xlat
dec
adc
inc
int3
xor
fldt
pop
cli
jns
loop
pop
xlat
pusha
xchg
jne
in
out
fnstsw
and
adc
shl
nop
incl
mov
leave
stos
andl
aaa
test
in
pushf
jns
cmc
mov
ja
jecxz
pop
or
inc
mov
dec
inc
stos
fadd
xchg
or
push
dec
out
push
sbb
dec
mov
lock
call
lods
cwtl
imul
dec
sar
mov
push
ljmp
negl
mov
mov
xchg
rcll
in
mov
test
repnz
xchg
and
test
adc
mov
jle
mov
sub
dec
jns
sbb
sbbl
fidivl
jne
jb
xor
repz
push
xchg
jno
adc
add
sarb
popa
leave
popf
bound
adc
pop
cli
inc
mov
sbbl
jecxz
movsb
inc
pop
sti
loop
inc
enter
cmp
sub
mov
sub
ds
loop
xor
leave
movsl
sub
jp
or
cmp
mov
fdivl
movsl
adc
test
and
fimuls
test
mov
dec
or
popa
sbbl
rcl
ret
shll
sub
add
aas
test
pop
stc
push
xor
subb
sub
cli
add
das
push
and
lods
cwtl
inc
pop
in
jns
sub
sarb
or
ljmp
pop
xchg
fisubrl
or
cltd
lds
sahf
mov
or
dec
and
test
out
subb
push
stc
call
nop
add
xor
adc
mov
xchg
dec
or
push
idiv
pop
push
xchg
sarl
xor
sbb
jle
mov
or
ret
or
dec
jl
mov
cmp
nop
inc
imul
in
test
loop
test
test
xchg
sbb
mov
jb
push
add
cwtl
sub
dec
dec
cmpsb
dec
into
decb
repz
inc
arpl
fwait
mov
lcall
pop
lea
pop
lds
mov
nop
movsb
iret
test
adc
test
cs
pusha
popf
mov
sbb
xchg
pushf
push
int3
pop
mov
mov
scas
in
xor
add
test
aad
cmp
xchg
out
jl
loop
cmpsl
inc
popf
push
add
add
into
mov
loop
js
xchg
clc
sbb
rolb
outsb
adc
add
hlt
mov
cli
loopne
sbb
in
test
sbb
fimuls
or
movsl
push
fcos
lods
inc
fwait
sub
add
pop
xchg
lret
jge
adcb
push
jns
in
mov
mov
cli
or
mov
dec
push
push
cmpsl
inc
repz
push
mov
jmp
pop
add
jnp
xchg
nop
cmc
push
sub
icebp
dec
ret
test
sub
lahf
push
or
pslld
sub
pop
in
mov
stos
jl
aaa
outsb
inc
jbe
out
xchg
add
adc
sahf
dec
jne
and
sub
pop
les
cmp
and
daa
push
mov
sbb
int3
dec
enter
int
dec
xchg
xlat
mov
movsl
iret
iret
push
test
gs
and
adc
es
scas
insb
sbb
testl
mov
jnp
pusha
in
mov
je
loop
cmp
test
pop
dec
xchg
aam
dec
mov
sahf
test
mov
inc
nop
push
popa
js
fstl
xchg
and
ds
out
icebp
scas
movsl
out
or
into
and
movsl
loope
inc
mov
mov
mov
inc
xor
ucomiss
fcomip
adc
push
sbb
ds
ja
mov
movsl
in
pop
push
idivb
pop
adc
mov
cmp
push
pop
dec
push
push
lods
lcall
ja
xor
ret
or
mov
mov
test
mov
outsb
fcoms
je
sbb
movb
scas
aam
add
mov
pusha
lea
iret
bound
or
or
ds
in
mov
mov
xchg
addb
in
adc
xchg
enter
xlat
loop
pop
xchg
sbb
movsb
and
in
xchg
outsl
aaa
inc
mov
and
aas
lahf
shr
dec
sbb
mov
dec
fidivs
repnz
fs
mov
inc
ficoms
pop
sbb
mov
movsb
fildll
jl
mov
inc
insl
or
fcom
mov
mov
icebp
dec
fisubrs
mov
cmp
inc
add
xor
jo
in
lret
xchg
pop
and
sbb
in
or
scas
fnstenv
pop
push
dec
rorb
bound
jl
sub
pop
push
sti
in
xchg
fistpll
mov
insb
or
add
sbb
lcall
and
xchg
dec
mov
aas
xor
dec
xor
test
inc
pop
fdivrl
out
cltd
fadds
in
and
mov
cmpsb
ds
and
cmp
out
pop
pop
mov
sbb
push
inc
sbb
out
in
xchg
pop
mov
push
hlt
out
xor
popa
and
mov
pop
orb
pop
inc
cmp
adc
jns
addl
das
push
test
inc
leave
arpl
mov
cltd
adc
jne
inc
cld
adc
xorl
lock
dec
les
lcall
das
in
or
gs
shll
xchg
es
mov
xchg
orb
push
shl
sbb
xchg
cmovg
in
xor
mov
xchg
test
in
mov
aas
mov
pop
es
dec
mov
jae
pop
icebp
or
aam
insl
loop
in
loop
sub
mov
jge
adc
js
pop
cmp
inc
mov
sbb
negl
xchg
pushf
fcmovb
add
mov
loop
sahf
dec
jbe
clc
xor
lret
into
scas
iret
out
inc
and
ja
outsl
pop
sahf
inc
addl
inc
mov
cld
je
icebp
push
out
jmp
out
iret
inc
mov
addr16
xchg
stc
sub
fsub
inc
ljmp
enter
add
push
adc
add
xor
aam
mov
or
ja
fwait
loop
hlt
mov
shlb
cmpsl
and
sub
mov
rep
sbb
imul
pop
insl
xchg
mov
xor
jmp
add
and
mov
push
mov
mov
sbb
aam
jbe
test
sbb
dec
mov
icebp
jmp
mov
sbb
jecxz
out
pop
mov
sti
mov
mov
pop
call
ds
pushf
testb
jl
mov
notl
das
aad
repz
xor
insl
push
fwait
adcb
mov
pop
fisubrl
lock
dec
pop
addr16
sarl
int3
xchg
inc
xor
mov
or
or
movsb
and
mov
daa
push
dec
mov
cmpsb
jmp
lcall
dec
mov
push
gs
into
ret
jmp
test
sbbl
and
ljmp
popf
add
xchg
fdivs
mov
ret
mov
add
add
orb
mov
inc
repnz
xchg
inc
cmp
xor
popf
lock
ficoms
sub
xchg
jmp
shrb
outsl
lods
je
popf
sbb
leave
fisubrs
xchg
cli
in
sbb
mov
cmp
gs
xor
push
dec
fidivrl
sub
fistl
jo
jg
aaa
cmp
aad
push
cwtl
cmpsb
ja
popl
in
test
aad
stos
aam
xchg
loop
test
push
insl
xor
shlb
jo
jne
mov
mov
or
lods
push
stos
inc
test
sub
and
repz
mov
movsbl
dec
adc
mov
inc
je
insb
sub
faddl
iret
sbb
je
sbbb
paddsb
pop
jp
pop
les
and
adc
cld
jl
sbb
or
push
nop
je
pushf
rcl
xchg
and
lret
pop
das
jmp
and
jp
test
inc
leave
dec
mov
hlt
clc
pop
imul
pop
cmp
mov
push
adc
add
xor
push
js
adc
clc
cmp
adc
mov
pop
sub
pop
push
sti
fisubl
leave
arpl
in
imul
mov
stc
orb
mov
inc
fistl
leave
cmp
das
or
jmp
ds
push
or
mov
and
push
xchg
adc
or
xor
int3
mov
mov
cld
mov
arpl
add
xchg
sub
jg
sub
pushf
loopne
imul
dec
stc
push
arpl
sub
jge
sbb
leave
pop
sub
in
pop
test
adc
data16
xor
pop
push
sbb
lahf
inc
out
lahf
andl
inc
aam
xor
cmpsb
add
jp
cmp
inc
aaa
dec
sahf
mov
push
adc
mov
in
lcall
pop
or
std
scas
fisubs
shrl
repnz
push
das
call
repnz
mov
popf
loope
adc
or
fisttps
daa
arpl
sahf
jnp
insl
xchg
pop
pop
and
clc
fisubs
rorb
jp
cli
mov
push
std
stc
sbb
in
or
or
lds
inc
xor
adc
push
push
and
stc
and
dec
pop
jl
xor
sbb
ds
and
dec
xor
aad
icebp
jo
loope
push
jo
scas
cmp
sbb
pop
lret
pop
inc
in
ror
loopne
pop
outsl
push
std
xchg
xlat
xchg
cmp
mov
sahf
cld
mov
int3
pop
xchg
movsb
out
divl
bound
daa
add
stos
pop
dec
pusha
mov
sub
jge
cs
ret
jp
jnp
lock
repz
ret
mov
xchg
sub
test
jmp
jno
dec
aaa
and
mov
imul
sti
je
fs
mov
popa
pop
sub
and
sbb
push
out
call
mov
repnz
hlt
jb
lret
push
or
fsubs
dec
pop
stos
jl
testb
pusha
fcmovnb
lret
sbb
xchg
mov
arpl
sti
inc
ret
pop
testb
xor
pop
push
mov
cltd
xor
dec
cwtl
je
cmp
ss
fnsave
adc
jmp
mov
pop
int
xchg
dec
gs
jl
mov
test
icebp
push
cmp
inc
and
arpl
test
or
dec
cmpsb
int3
push
bound
repz
push
pop
rorb
ds
rclb
repnz
loope
shrb
hlt
out
xor
aam
cmc
or
xchg
sbb
xlat
arpl
or
lea
repz
adc
sub
xor
stos
ret
xor
add
pop
repnz
xchg
xchg
xchg
test
pop
fnsave
fwait
adc
or
inc
jb
inc
in
lret
in
adc
dec
adc
and
pushf
add
push
cwtl
push
inc
test
xchg
inc
xchg
sub
loop
mov
mov
test
ret
aaa
mov
sbb
dec
mov
lret
scas
pop
sub
xchg
test
xor
push
cmp
inc
pop
pop
stos
mov
xchg
fsubrs
push
test
inc
aas
test
cmp
outsl
int
test
mov
leave
dec
jne
jno
mov
and
mov
sub
add
jge
mov
inc
ret
sahf
sub
push
mov
testl
movsb
je
or
adc
sub
or
lock
lahf
repnz
add
pop
dec
js
add
cmp
dec
imul
add
subb
add
xor
out
icebp
sbb
hlt
lcall
mov
out
sbb
stos
pusha
cs
imul
jno
bound
cmpsl
sub
sbb
out
dec
sbb
pushf
cmpsl
ss
ljmp
or
fcomps
gs
nop
shl
fs
mov
push
out
call
pop
test
sbb
es
and
inc
daa
cmp
scas
out
gs
lods
pop
jp
jg
add
jae
cmc
fldl
shlb
loopne
leave
test
maskmovq
idivl
mov
iret
das
mov
xor
popl
fwait
mov
mov
mov
lahf
cli
inc
push
stos
hlt
pop
cmp
and
or
int
pop
mov
mov
test
inc
xchg
testl
sbb
mov
mov
daa
sahf
mov
xor
sbb
dec
or
mov
loopne
clc
nop
jae
inc
lahf
jle
mov
mov
stc
add
popa
ret
jno
add
test
aad
push
aad
xchg
mov
clc
jp
je
xchg
cltd
mov
cmpsb
ret
xchg
pop
inc
data16
jecxz,pt
mov
jb
mov
or
cmp
inc
mov
setp
sahf
adc
sub
and
adc
mov
sbb
pop
cltd
and
mov
scas
jo
int
inc
pop
sti
fbstp
pop
int
movsl
test
adc
movsb
dec
cmp
sub
bound
lods
call
std
adcb
sub
sbb
int
push
jb
jne
cmp
pop
mull
test
xchg
fadds
and
icebp
sub
rcrl
fnstenv
addr16
sbb
test
hlt
push
jmp
mov
mov
sbb
out
fisubrs
cmp
sbb
inc
jne
or
and
imul
test
movsb
jb
sti
mov
mov
jns
fisubl
scas
into
or
push
shrl
inc
adc
cmp
mov
js
xchg
in
pop
and
les
mull
mov
hlt
fs
icebp
andl
push
loop
rorb
push
cmp
test
sub
pop
push
jo
mov
enter
adc
sbb
inc
xchg
mov
mov
lds
xadd
jle
xchg
and
add
sbb
das
test
add
scas
ss
repnz
lcall
xor
push
inc
add
insb
call
in
ja
cmp
mov
cmpb
imul
addr16
mov
test
push
ret
mov
sbb
inc
std
inc
fsubl
loop
cld
jmp
and
jmp
or
mov
mov
sub
sub
adc
xchg
clc
popa
inc
enter
push
lcall
push
in
nop
lods
inc
daa
mov
xor
push
mov
xor
push
stos
add
int
jbe
xchg
bound
jg
jb
cmp
inc
inc
les
mov
mov
cmp
dec
xchg
mov
insb
outsl
xchg
pop
push
jecxz
jbe
cmpl
into
adc
ds
sub
stos
jb
fldcw
clc
cmp
jmp
iret
cmp
push
addr16
inc
sub
pop
sbb
mov
xorb
cld
fidivs
dec
stos
fdivrs
andl
cmp
insb
adc
mov
mov
mov
orb
jle
comiss
inc
rcl
test
pop
xchg
push
lods
add
out
add
fisubs
add
popa
xchg
or
xchg
iret
mov
ret
jae
mov
mov
and
xor
cs
or
mov
fsubrl
les
push
jno
push
popl
cmp
inc
mov
xchg
and
jecxz
cld
push
aad
mov
mov
or
xor
movsl
fldcw
outsl
mov
jne
mov
fcmovnbe
xorb
inc
aad
nop
out
add
xchg
test
sahf
loope
inc
adc
push
cld
ret
inc
adc
mov
fiadds
inc
cmpsb
loope
mov
lods
push
imul
in
cwtl
sub
inc
jae
ja
xchg
push
xchg
dec
das
or
inc
movb
mov
bound
lea
in
sbb
dec
xchg
cmp
ljmp
xchg
pop
cmp
fsubr
inc
movsl
jmp
aam
rcr
push
push
dec
sbb
push
sahf
cwtl
es
sub
enter
xchg
roll
mov
ds
int3
inc
fwait
mov
push
xor
stos
addl
scas
sbb
in
sbb
das
test
mov
push
push
out
stc
out
test
aad
mov
sahf
lds
xchg
mov
in
lea
dec
std
adc
push
inc
jno
mov
sbbl
push
loopne
jmp
cmp
divb
inc
xor
cltd
sbb
fsubl
inc
scas
imul
pop
mov
mov
mov
pause
pop
push
add
mov
je
imul
hlt
fldt
cmp
mov
pop
movsl
or
push
jecxz
cmp
data16
lret
fst
push
in
test
movhps
jge
push
pushf
mov
outsl
push
pop
adc
push
lahf
ljmp
loop
mov
popl
out
cmp
fmull
iret
sbb
and
out
xchg
mov
dec
sub
or
inc
pushf
add
leave
fisttps
fwait
lea
fldt
stos
adc
mov
popa
sbb
bound
xchg
mov
push
incl
test
insl
repnz
out
push
adc
pop
jne
ficomps
cmp
jno
out
add
out
lcall
mov
pop
mov
add
pop
push
mov
insl
cmp
lods
je
repnz
es
or
jl
push
inc
ret
jbe
sbb
daa
dec
adc
jg
fidivs
cmp
jne
sub
subl
cld
push
lea
cmp
cld
sbb
out
add
enter
inc
dec
stc
and
in
andb
push
pop
loopne
pop
cmpsb
loop
lret
iret
imul
sbb
dec
mov
ss
test
ret
iret
insb
lea
and
and
repz
inc
cmp
inc
les
fimull
das
jecxz
jne
sbb
sbb
out
push
mov
fsubl
sub
mov
dec
jmp
push
jecxz
or
movnti
shl
fwait
cmc
or
xor
lcall
dec
or
adc
outsl
loopne
fdivr
mov
ds
dec
mov
int
bound
and
mov
add
xchg
call
fstpl
xor
arpl
das
jl
mov
lds
cmp
cmp
cmp
das
sbb
jae
movsb
add
push
push
inc
leave
ret
add
dec
mov
dec
dec
xchg
xchg
pop
out
popa
fildl
arpl
add
cld
mov
daa
sbb
and
jge
mov
in
ja
jo
inc
rolb
mov
push
rsqrtps
xlat
and
xorps
cmc
jb
mov
jnp
lds
mov
pusha
stos
orl
ret
xchg
stc
out
pop
cmpsl
sbb
pop
xchg
and
imul
gs
or
inc
stc
clc
mov
ficoml
loopne
scas
sub
mov
cmp
divb
gs
jne
aaa
mov
in
cmp
mov
mov
dec
push
iret
push
cmp
leave
fstl
sbb
je
and
add
or
popf
xor
lock
mov
dec
mull
daa
sbb
inc
stc
adc
loop
adc
out
adc
andb
stc
mov
or
sub
xchg
adc
sub
lock
sub
or
stc
push
cmp
dec
push
jl
add
pop
push
loope
subl
fnstsw
mov
cmp
xchg
outsl
shrb
insb
lods
lods
test
xchg
mov
mov
mov
dec
inc
movsb
sub
sub
sbb
test
mov
xchg
inc
mov
lock
jle
add
mov
cltd
xchg
sub
push
out
sti
adc
leave
xchg
pop
jmp
bound
shrl
daa
ja
or
adc
call
xor
mov
cmp
mov
sarb
inc
add
imul
and
pop
ret
dec
jecxz
push
and
jne
addr16
mov
movsb
and
and
inc
aaa
mov
xorb
jl
jns
xchg
andl
xchg
mov
mov
or
cmp
nop
push
insl
sub
ss
rorl
pop
jb
or
cmpsb
jo
and
push
bound
fildl
ljmp
imul
inc
imul
test
mov
in
mov
sub
add
sbb
adc
lret
idivb
xchg
push
mov
sbb
jp
sub
dec
lea
xor
fcompl
in
jno
jb
test
aam
cltd
stos
inc
aad
insb
add
cmp
mov
push
jae
mov
adc
jbe
cwtl
xchg
cmpsb
cmp
cmp
jno
add
mov
cmp
mov
pop
jg
sbb
mov
fcmovnb
out
cwtl
enter
sub
push
push
test
test
mov
mov
mov
stc
sahf
mov
sbb
inc
lds
or
and
clc
jb
dec
sub
lahf
mov
aam
fdivrs
cmc
add
or
xchg
repz
mov
cli
or
mov
popf
push
cmc
shlb
call
sti
popf
or
iret
icebp
cmpsl
aas
adc
lea
push
movb
jmp
push
dec
pop
je
jb
fs
xchg
push
bnd
icebp
loop
mov
xchg
xchg
test
xchg
add
dec
jno
and
cmp
cld
mov
js
aaa
push
daa
call
sbb
sbb
icebp
jg
inc
outsb
addb
test
mov
mov
sahf
fsubs
mov
sbb
jo
sti
lods
sbb
lahf
push
and
dec
enter
jne
jge
and
mov
or
in
repz
lcall
movsl
pop
jmp
mov
cli
jne
out
shrb
pop
ret
xor
jmp
mov
nop
or
push
lahf
test
jp
push
das
xor
mov
mov
inc
cmpsl
mov
xchg
inc
sbb
xchg
cmp
mov
out
cwtl
add
sbb
popf
data16
jo
icebp
jecxz
mov
adc
icebp
mov
je
push
pop
sbbb
adc
jnp
fisubrs
sub
lods
push
sub
mov
add
and
mov
xor
lds
mov
movsl
adc
dec
lods
clc
sub
sub
and
repz
jge
int3
cli
insb
js
shll
sub
arpl
paddq
lahf
mov
xchg
rclb
add
ss
push
xlat
les
aaa
cwtl
or
push
xor
xor
js
repnz
xchg
push
mov
pushf
mov
jmp
mov
outsb
mov
pop
cltd
adc
add
xchg
imul
xor
sbb
adc
push
lret
aam
push
js
xlat
or
lock
pushf
mov
orb
daa
daa
psubsb
stos
add
inc
mov
rcll
movsb
lods
mov
dec
fdivl
loop
stos
arpl
lods
jae
loop
data16
push
test
sub
fidivrl
rorb
xchg
lock
jbe
push
iret
and
and
jg
in
test
pop
out
push
sbb
in
clc
int3
test
cli
sarl
lret
pop
pop
ret
cmpsb
jle
stc
and
clc
cmp
mov
jns
imul
xchg
xchg
aad
sahf
mov
rol
pop
std
les
mov
cltd
jecxz
pushf
cmp
cmpsb
mov
push
push
repnz
add
and
prefetch
or
fists
mov
hlt
add
bound
mov
xor
pop
mov
xchg
jae
jle
insb
into
mov
xor
dec
sbb
or
lahf
cmp
xchg
and
mov
cmp
mov
fbld
movsb
xor
fsts
mov
sahf
adc
adc
pusha
hlt
mov
mov
mov
mov
push
lcall
shr
scas
adc
shlb
clc
push
pop
sbbb
fisubrl
mov
mov
ret
and
imul
shrl
aas
movsb
adc
push
icebp
rol
imul
xchg
or
xchg
xor
xor
sub
xchg
mov
adc
ficoms
das
stos
fs
sar
inc
xor
aam
loope
mov
ret
mov
lods
adc
adc
aam
cwtl
jnp
stos
cmpsb
cmp
inc
mov
clc
adc
inc
dec
int3
inc
lcall
xor
or
test
pop
dec
pusha
cmp
ds
ret
outsb
mov
pop
push
push
cld
lea
cmp
test
orl
movsl
inc
int3
mov
or
adc
cwtl
and
call
push
inc
jno
mov
lahf
sbb
xchg
mov
fstl
adc
mov
fcmovb
pop
aaa
sub
push
push
popa
push
mov
pusha
and
add
adc
adc
aam
loopne
mov
mov
data16
add
mov
pop
cmpsb
sub
dec
jmp
notl
leave
into
dec
dec
pop
insl
outsb
lds
cmpsb
or
mov
lcall
push
incl
imul
stc
pushf
aas
call
clc
sub
stos
fisubl
pop
sbb
rolb
repnz
add
into
dec
mov
in
out
repnz
loopne
repz
mov
aas
jne
sub
imul
sbb
icebp
lret
daa
call
fstpl
inc
add
inc
into
sbb
pop
andl
sbb
lods
or
outsb
bound
or
jge
or
ficomps
outsl
mov
inc
cli
xchg
add
sbb
inc
addr16
push
jl
ret
stc
push
push
scas
mov
je
add
pop
xchg
sbb
enter
movsb
push
adc
pop
pop
imul
out
adc
fs
push
pop
std
dec
mov
aaa
mov
jno
inc
test
sbb
rclb
adc
push
sbbl
jnp
sbb
faddp
mov
mov
mov
push
push
inc
aam
out
xchg
mov
cltd
pop
repnz
icebp
pop
sbb
lock
mov
popf
mov
aaa
inc
pop
stos
push
jg
inc
movsb
inc
inc
dec
fucomip
xchg
mov
sbb
out
push
jo
aas
movsl
scas
xchg
mov
mov
push
mov
dec
mov
int3
cli
or
pop
cmp
xchg
xchg
ds
bound
out
mov
rcr
das
mov
sub
xor
cmpsb
hlt
fadds
rclb
enter
sahf
aad
fldcw
sub
mov
mov
mov
sahf
shrl
inc
outsl
in
in
inc
arpl
out
hlt
jno
and
stc
lea
mov
shrb
mov
nop
ljmp
cmp
jmp
and
dec
mov
je
push
scas
mov
cmp
scas
cwtl
sub
jae
enter
lea
icebp
and
stc
movsb
ret
incb
mov
loope
push
in
sbb
xor
push
out
inc
add
dec
or
repz
sahf
sahf
in
stos
les
mov
adc
xchg
repz
sub
jmp
add
dec
jge
mov
sbb
jmp
xchg
aad
fadds
insb
cmpsb
sub
icebp
push
adc
daa
xor
jbe
xchg
repnz
mov
pop
xor
xchg
dec
add
jb
mov
jmp
aaa
or
push
jae
in
imul
mov
pusha
jbe
xchg
imul
shll
push
add
pushf
ret
cmp
and
fdivl
mov
mov
lods
std
dec
push
mov
addb
sub
rorl
mov
pop
insl
mov
mov
ret
xchg
mov
cmp
lret
push
ja
out
sub
pop
sti
xchg
sub
icebp
lods
test
or
push
daa
lcall
lcall
pusha
out
scas
fistpll
sbbb
mov
repnz
rcl
pop
xor
sub
push
pop
push
shl
cli
jp
adc
and
movsl
out
test
jle
and
popf
imul
pushf
gs
mov
mov
adc
and
mov
int3
std
je
into
nop
mov
xor
test
das
fdivrl
cli
adc
loop
dec
repz
xchg
loopne
scas
cld
cltd
stos
lea
hlt
cmp
adcl
fwait
aad
andl
std
xorl
imul
xchg
dec
add
cltd
adc
out
mov
jle
cmp
and
scas
mov
sar
sub
arpl
cwtl
inc
pop
xlat
nop
mov
mov
lret
fidivs
dec
pop
xor
stos
fisttpl
fwait
sub
lret
cld
sets
arpl
das
jmp
test
jbe
adc
loope
fsubs
dec
or
add
push
adc
xchg
push
stc
dec
pop
cmp
cmp
xchg
or
mov
mov
xchg
pop
xor
pushf
dec
cmp
and
out
lods
push
cld
jo
xor
imul
mov
test
mov
add
push
push
inc
in
fisubs
push
mov
cltd
cwtl
test
adc
imul
adc
xchg
loope
push
insb
jmp
and
fwait
cmp
or
aad
rorl
or
xchg
sub
mov
jae
and
mov
mov
push
mov
jp
mov
cli
subb
push
aas
push
xchg
xor
mov
mov
sbb
nop
push
stc
mov
xchg
adc
add
mov
adc
jns
pop
sub
pop
test
pushf
push
pop
insb
ja
dec
cmp
jno
jbe
jl
lods
dec
shrl
movsb
sbb
test
jmp
lods
xchg
add
mov
lods
sub
es
mov
ret
jp
or
nop
mov
add
jae
pop
ss
imull
popf
aam
rol
push
or
ficoms
jno
adc
lods
cmpsb
and
add
stos
jle
xchg
imul
popa
dec
stc
xchg
addb
adcb
mov
xor
and
xchg
and
push
popf
pop
adc
dec
xchg
pop
sub
or
add
cmpsb
push
sahf
pusha
push
in
push
dec
pusha
stos
sub
adc
ljmp
idivb
fxch
fs
dec
cmp
push
xchg
adcb
cmpb
push
adc
in
push
jno
mov
add
mov
scas
rcrb
and
push
aas
cmpsl
or
dec
out
xor
sbb
xor
cmp
mov
pop
lret
push
or
pop
pop
fsts
out
nop
or
lret
and
pop
mov
mov
xchg
mov
hlt
out
lock
sarb
packuswb
cld
sbb
fldl
pop
cmp
subb
adc
pop
incl
ds
or
mov
lea
icebp
out
mov
mov
or
hlt
aad
xor
cmc
arpl
push
mov
pop
mov
mov
test
or
xor
repz
jecxz
enter
mov
int3
icebp
xchg
aaa
push
inc
pop
xor
mov
ret
cmp
mov
mov
lret
jno
xor
movsb
xchg
mov
xor
mov
cmp
dec
shrl
jbe
sub
aaa
rcll
lea
mov
inc
or
dec
mov
stos
int
or
push
adc
adc
das
pop
mov
sub
and
xchg
push
cmp
push
ds
nop
xor
lea
and
ficomps
pop
shll
add
mov
xor
int3
ja
dec
sub
push
and
add
fmull
dec
bnd
or
into
pop
sub
loop
xchg
and
jg
push
dec
pop
insl
xorb
shrl
pushf
cmp
jns
xchg
xor
xchg
mov
xchg
sahf
test
jmp
enter
xlat
addr16
jnp
test
shlb
lahf
aas
popa
lods
jo
mov
pop
icebp
xchg
pop
mov
and
jb
and
ret
fisubrl
inc
mov
push
adc
cmpsl
imul
xor
ljmp
cmp
push
add
xchg
dec
mov
repnz
jecxz
adc
sub
lods
es
sarb
push
dec
xor
cmpsl
push
daa
pop
cmp
mov
mov
es
inc
jge
dec
adcb
xor
maxps
je
in
mov
lods
jle
loopne
repnz
adc
and
push
or
inc
push
pop
mov
xor
shll
popa
scas
mov
mov
dec
in
jns
push
popl
push
scas
sti
mov
xchg
test
aad
push
cmpsl
adc
push
aad
or
lock
xchg
test
ja
lahf
lret
movsl
jmp
pop
lea
dec
mov
cwtl
inc
test
fistps
shrl
adc
mov
cltd
inc
xor
sub
loopne
mov
sbb
jb
test
pop
div
shll
repnz
hlt
repnz
decb
flds
inc
cs
jae
fsubl
enter
scas
xchg
or
dec
xchg
cmpsb
sete
adc
adcl
pop
es
mov
test
cmc
push
cltd
add
and
pop
mov
inc
sbb
adc
xor
pop
in
pop
lret
pop
cmp
sbb
mov
stos
testl
adc
rolb
call
lds
dec
cmc
scas
xor
xor
inc
dec
and
push
popl
cmp
test
and
xchg
arpl
addr16
jne
out
dec
push
dec
pop
and
sbb
out
mov
imul
or
lods
xorl
inc
inc
mov
inc
mov
jl
ret
adcl
sub
jnp
and
pop
push
inc
cli
mov
inc
icebp
xchg
daa
adc
inc
les
mov
scas
in
pusha
dec
sub
xchg
mov
add
outsl
xlat
addr16
pusha
jmp
sarl
leave
popa
add
aas
cmpsl
ret
xor
call
lea
xlat
cmp
push
dec
sub
mov
sbb
mov
lret
pop
mov
mov
and
xlat
in
insb
push
xlat
les
int
lods
cmp
mov
inc
fsts
cmpsl
mov
sti
dec
jbe
push
pop
push
fwait
add
sbb
mov
hlt
dec
dec
mov
arpl
and
aaa
cmovs
and
pop
gs
emms
imul
subb
int
movsl
sub
lock
xor
movsl
adc
cmp
pop
jecxz
sbb
push
and
nop
ljmp
mov
pop
lret
xchg
dec
inc
dec
nop
push
int3
push
pop
dec
sub
insb
push
stos
je
jl
push
lods
test
mov
scas
fnstsw
inc
push
fcmovnb
mov
inc
or
dec
pop
add
pop
mov
mov
jmp
dec
testl
daa
ret
or
mov
mov
or
and
inc
dec
sbb
repz
clc
mov
subb
stos
test
aam
push
fisttpl
jo
xchg
stos
ds
fcompl
aaa
cli
loope
jnp
mov
fiaddl
sbb
or
adc
fistl
int
aad
insl
fsubl
sti
cmpsl
add
jmp
dec
aaa
outsb
enter
lahf
jmp
ja
push
mov
mov
xchg
mov
push
pop
lcall
lret
aam
es
jae
pop
rorl
insb
in
ret
js
jg
jecxz
sbb
iret
ds
js
ds
mov
xchg
xor
mov
and
aam
rol
lcall
xor
repz
xchg
fwait
dec
mov
jp
inc
es
xor
xchg
mov
xchg
mov
inc
or
xchg
arpl
les
imul
arpl
iret
pop
or
mov
pop
test
test
negl
push
adc
cmp
ret
xor
push
lods
cmp
lret
pop
or
or
mov
es
pop
pop
inc
inc
push
fistpll
xchg
movsl
lahf
hlt
dec
cmp
imul
les
out
addb
adc
mov
mov
cltd
pop
sub
jae
push
cld
iret
push
dec
sbb
jmp
dec
insl
fs
push
imulb
xchg
ss
xor
int3
cld
push
jne
xchg
stc
mov
dec
and
jo
adc
leave
popf
sbb
mov
mov
stos
lods
fstl
gs
or
ja
mov
mov
lahf
mov
dec
dec
dec
rolb
test
pushf
pop
dec
iret
mov
lcall
cwtl
sbb
aad
pop
mov
and
dec
mov
mov
and
cmpsl
and
add
into
push
mov
fwait
pop
popa
mov
iret
pop
mov
sub
and
or
stos
mov
xor
jp
sahf
mov
pop
inc
cmpsl
inc
push
cmp
and
outsl
lock
fsubrs
nop
or
outsb
iret
add
and
xor
in
cmp
mov
out
add
mov
pop
jbe
push
jno
loope
fimull
lret
sbb
sbb
jae
test
aas
lods
es
mov
sub
xchg
cmp
sub
xchg
add
imul
push
jbe
sbb
add
ljmp
and
daa
mov
cmc
sub
mov
sbb
lods
push
xchg
cmp
movsb
rorl
dec
add
nop
mov
sub
mov
sbb
sbb
xchg
mov
add
mov
jne
cmp
xchg
movsb
or
inc
push
add
jb
xchg
and
daa
mov
ret
repnz
sub
js
mov
jno
repnz
stos
mov
inc
dec
inc
loop
popf
sti
testl
xchg
mov
cmpsb
pop
mov
int
xor
dec
inc
in
push
stc
loop
sub
adc
xchg
jl
inc
lea
mov
add
dec
cld
xor
cmp
fmul
jp
in
push
inc
enter
and
lcall
xchg
dec
and
xchg
jecxz
int
jp
xchg
push
jne
pop
sahf
lock
iret
push
cmpsl
in
testb
js
mov
stc
popa
enter
lods
xor
ffreep
push
es
and
cmpsl
mov
movsl
cld
loope
rolb
jno
pushf
cli
out
mov
clc
lret
sahf
and
adc
fimuls
lods
ret
dec
std
aas
sbb
cmc
in
fidivl
sahf
sub
mov
ja
jle
mov
sti
vandps
push
xor
xor
pop
dec
xchg
scas
mov
sti
rep
push
or
test
testb
out
cli
xchg
sub
movsl
mov
jne
xor
and
sub
dec
aaa
pop
mov
fidivrl
leave
jecxz
arpl
sbb
push
adc
testb
jle
fistpll
rcrl
leave
mov
fs
sahf
test
inc
jecxz
push
ja
js
sbb
mov
imul
pop
adc
arpl
mov
in
mov
cld
es
dec
fstpl
hlt
les
loop
push
outsl
in
popa
fimuls
mov
stos
sbb
and
enter
adc
push
ss
push
pushf
stos
or
popa
sub
ss
insb
mov
mov
inc
dec
sbb
das
add
lock
sub
imul
inc
fsubl
add
xchg
roll
add
repnz
and
xor
sub
lea
mov
pushf
cmp
sarl
out
jp
adc
dec
fucom
jo
add
pop
push
cmp
push
mov
mov
sub
sarl
ds
cmp
mov
stos
pop
adc
mov
and
inc
sub
lcall
mov
and
push
jl
imul
mov
stc
ss
jne
push
les
call
push
inc
mov
dec
bound
lea
loope
cli
or
jg
cmp
aam
mov
lock
jno
sbb
push
add
pop
stos
jle
xchg
aad
pop
and
rol
mov
lds
sbb
fiaddl
testl
mov
adc
gs
divl
inc
mov
pusha
push
mulb
mov
in
sbb
adc
es
pop
mov
nop
ja
pusha
xlat
es
xor
es
xor
loope
inc
cli
mov
xchg
sub
nop
cld
adc
outsl
add
adc
fimull
inc
jp
sub
gs
sbb
mov
sbb
sbb
add
adc
in
mov
sarb
mov
sahf
fimull
insb
fiadds
mov
dec
jbe
add
xchg
add
shll
cmp
shl
mov
inc
or
and
mov
mov
hlt
xor
or
mov
sbb
jmp
cmpsb
mov
inc
gs
push
mul
pop
adc
ja
fs
divb
inc
dec
jecxz
mov
jb
sti
add
xor
rcrl
push
movsb
sub
and
or
repnz
jo
mov
loop
push
int3
shll
fwait
arpl
repz
jne
aas
into
ljmp
test
andl
lahf
scas
inc
rcrl
js
scas
test
sbb
sbb
lret
mov
push
aas
daa
xchg
adc
sti
mov
add
sbb
sbb
and
enter
sti
sub
or
data16
enter
inc
jmp
xchg
ret
pop
jo
mov
xchg
jge
jns
shl
mov
lods
sub
xor
or
and
pop
outsb
xor
sub
stc
pop
cmpsb
inc
mov
repz
inc
cmpsl
push
jbe
scas
aad
mov
ds
scas
cmpsb
or
xchg
insl
fs
lods
cmpl
stc
mov
movsb
aaa
and
out
xor
sti
mov
das
push
mov
sahf
push
aad
mov
push
call
jae
fildl
scas
sbbb
inc
out
xchg
leave
cli
jmp
cmp
idivb
imul
sbb
adc
mov
les
fistps
mov
sub
in
adc
aad
pop
sar
add
sub
cs
xchg
outsl
xor
xor
push
call
leave
dec
cmpsl
loop
pop
je
mov
sub
dec
inc
jmp
adc
ljmp
subb
xor
int
movsb
add
lret
sbb
inc
mov
aad
aad
xchg
push
data16
push
enter
lea
int3
int3
jne
mov
call
xchg
dec
pop
pop
jl
dec
js
pop
dec
or
pushf
rcll
cmp
sub
pusha
or
lret
adc
adc
push
cld
fsubrs
out
mov
dec
sub
les
jb
xchg
repnz
mov
cltd
fldl
aaa
push
sub
add
adc
sub
fsubrl
mov
loope
imul
test
or
outsb
les
test
mov
stc
stos
adc
test
jp
inc
jecxz
bound
jnp
xchg
sbb
rcrl
sbb
mov
lret
jnp
cwtl
push
and
mov
aad
mov
lahf
adc
sub
pop
outsl
idivb
jecxz
dec
movsl
jbe
sub
pushf
xchg
xchg
negb
in
mov
in
mov
pusha
push
cwtl
adc
andb
jge
mov
push
pop
pop
movsl
es
jnp
pusha
negl
jge
mov
pushf
xor
daa
push
jns
cmpsl
movsb
in
addl
mov
and
stc
or
cmp
push
aas
pop
lods
push
pop
and
pop
in
dec
push
gs
aad
movsb
incl
jae
loopne
lcall
pop
insb
pop
aad
xchg
mov
pop
clc
mov
sub
sub
pushf
sub
inc
test
xchg
popa
inc
pop
jle
and
cmp
add
sbb
dec
movsb
ljmp
adc
in
lcall
inc
dec
jmp
adc
hlt
shrl
adc
cltd
xchg
cmpsl
xchg
aaa
push
push
or
and
mov
sub
cwtl
dec
ficomps
xchg
sub
std
sub
mov
enter
clc
jnp
in
push
cmp
add
lods
ficoml
std
push
leave
test
adc
push
enter
in
pop
mov
mov
scas
ds
jne
xlat
test
inc
dec
lret
mov
add
jmp
pop
lds
mov
in
ljmp
cmc
lods
cs
push
pop
gs
out
mov
sub
mov
cmp
shll
cmovno
andb
adc
lods
cli
pop
sbb
stos
in
xlat
jmp
loopne
inc
cmp
cwtl
insb
jnp
ss
rorb
dec
sahf
mov
push
xchg
enterw
rolb
inc
xor
dec
sbb
cmpb
mov
adc
cltd
xor
fistpl
pop
lock
mov
cld
cli
cmpl
fxch
jecxz
iret
lret
dec
scas
adc
cld
push
imul
loope
adc
and
aam
cmpsl
or
test
add
sub
dec
add
aam
into
inc
pop
fst
dec
mov
aam
or
pop
cmpsl
in
lret
out
shlb
cmpl
dec
divl
push
add
push
sub
cmovs
mov
inc
adcl
xchg
ja
test
mov
add
push
cmp
js
cli
cltd
in
inc
xchg
push
insb
clc
loopne
hlt
loop
sub
andl
lcall
jmp
mov
mov
into
lods
lahf
inc
cmp
seta
aaa
clc
jecxz
inc
pop
sbb
jl
pop
gs
add
inc
stc
or
pop
push
lret
in
push
insl
add
les
mov
sub
pop
cmc
repz
mov
roll
adcl
or
aaa
rcrb
ss
movsl
pop
pop
mulb
inc
aam
ja
mov
push
fadds
add
mov
jg
dec
mov
lret
test
mov
push
sbb
xor
enter
fistps
dec
lods
or
mov
mov
in
sbbl
xor
bswap
sub
sbb
dec
ljmp
ljmp
dec
sahf
cmpsb
xlat
mov
xchg
mov
pop
dec
pop
pop
fmuls
sahf
jg
aaa
jae
aam
into
mov
in
jmp
stos
pop
adc
repnz
pop
js
ds
adc
xchg
lret
sub
fstenv
bound
jecxz
dec
fistpl
test
sub
push
or
mov
cmp
jecxz
mov
xchg
insl
stos
ret
lods
mov
roll
popa
or
imul
sti
dec
pop
xchg
pop
movl
jno
mov
sti
aas
jge
sbb
and
arpl
hlt
mov
add
xchg
lret
sbb
mov
daa
insb
push
fbld
test
les
cmpsb
push
mov
xchg
cltd
mov
xor
sub
int
icebp
sti
sub
addr16
dec
stos
dec
lret
mov
mov
adc
cs
addr16
mov
lods
imul
inc
mov
adc
add
sbb
cmp
dec
push
pusha
jge
xor
rol
outsl
test
das
pop
mov
pop
es
pop
js
push
ret
inc
mov
or
enter
repnz
imul
jge
rolb
fwait
inc
jns
dec
sbb
pushf
mov
test
pop
push
sub
mov
addr16
repnz
bound
mov
cmpsb
add
mov
sbb
ljmp
xchg
imul
or
and
cmpsb
dec
outsl
adc
or
mov
mov
imul
inc
popa
adc
add
or
fidivl
push
ret
inc
cwtl
movb
sub
mov
test
mov
xor
push
add
and
ljmp
popf
test
push
lods
cld
popa
xlat
sarb
cmpsb
fcmove
cmp
mov
mov
dec
or
xor
mov
sbb
adc
lea
jbe
test
lods
push
push
mov
jno
mov
jnp
cmp
movsl
int3
leave
mov
sub
addb
or
outsb
inc
movb
sbb
out
stos
or
xor
inc
jmp
rcr
arpl
dec
inc
ljmp
mov
scas
dec
cwtl
insl
pop
and
mov
inc
stos
mov
dec
lock
gs
iret
cmp
jmp
lret
mov
mov
repnz
push
cltd
test
and
dec
lret
pushw
mov
fs
cmp
push
dec
sub
mov
xchg
mov
mov
pop
mov
fsubl
jnp
and
cmp
jae
sbb
lea
cmpsl
push
pop
lods
fs
adc
scas
pop
mov
jnp
js
xchg
fwait
out
cmp
xchg
adc
xchg
cmp
pop
mov
pop
movsb
popf
ja
js
inc
scas
fistpll
test
push
js
mov
xchg
mov
sbb
je
lret
adcb
stc
lret
fstpt
jb
pop
pop
sbb
sub
dec
test
add
jl
lcall
xchg
movsb
sbb
adc
sub
aam
addb
sub
push
mov
push
jp
cld
xchg
movsl
stc
int3
mov
insb
test
outsb
dec
lea
das
sbb
or
dec
mov
and
and
cmpsl
cli
push
icebp
inc
mov
xor
cmpsl
loope
mov
sub
outsb
sub
dec
in
pop
sbb
mov
xchg
aas
aaa
push
stos
add
bound
adc
sub
jae
aam
daa
sbb
lret
sub
in
jno
test
pop
movsl
xor
icebp
cli
mov
push
sbb
xchg
xchg
inc
push
fwait
shrb
xchg
ds
sub
mov
dec
fidivl
cmpb
insl
int
sub
push
stos
stos
int3
mov
mov
bound
stos
sbb
jmp
nop
or
and
push
outsl
fiaddl
jge
imul
pop
inc
cmp
js
loopne
adc
dec
mov
mov
fs
sbb
push
inc
or
inc
sbb
sbb
jp
xchg
ljmp
xor
cmp
and
pop
out
adc
pop
stc
fistps
dec
aas
rorb
jb
and
mov
test
dec
ja
sbb
fidivs
jns
mov
jg
lret
mov
mov
mov
xor
repz
lret
mov
adc
mov
nop
jg
in
out
lds
mov
fcmovne
sub
ss
dec
sbb
sarb
stos
inc
into
mov
loope
or
movsb
pop
sub
jno
and
mov
pop
adc
in
xlat
adc
mov
jmp
and
out
jo
fcoms
sbb
ret
leave
add
add
roll
out
xchg
xor
rclb
lret
in
pop
jmp
lret
popf
sbb
lahf
sbb
mov
pop
dec
and
fs
fstl
sub
popf
xor
push
insb
inc
and
das
in
call
or
ljmp
lods
push
in
dec
in
cmp
out
cmpl
cwtl
cmp
pop
mov
mov
pushf
ret
mov
adc
adc
xchg
dec
jl
bnd
mov
add
mov
arpl
lcall
inc
or
add
cmp
push
xlat
push
rcrl
cmpl
loop
adc
es
sub
push
inc
pop
sbb
cmpsb
pop
and
lods
add
daa
rolb
pop
inc
inc
pop
imul
push
hlt
ss
or
inc
fs
dec
repnz
test
std
push
xchg
inc
and
mov
dec
test
add
gs
jp
fucomip
and
dec
es
add
ret
adcl
ret
lock
mov
mov
mov
and
test
and
subl
mov
or
stos
test
dec
mov
outsl
test
mov
mov
adc
shll
aas
adc
ljmp
dec
mov
rcrb
push
mov
dec
push
arpl
add
add
loope
mov
inc
je
in
dec
aam
fstps
repz
lods
mov
xchg
fsubrs
sbb
dec
mov
int
test
fwait
test
stc
lahf
mov
cltd
sbbb
fxch
add
mov
sbb
mov
fnstsw
xchg
dec
cmp
jae
bound
push
xchg
adc
or
pop
movsl
push
fmulp
jbe
sub
push
fildll
inc
xchg
mov
mov
out
pop
adc
xor
sarb
pop
stos
stos
ja
jbe
cmpsb
scas
nopl
outsl
mov
push
mov
lds
push
xchg
mov
insl
daa
cmpsb
xchg
xchg
or
lcall
lret
imul
clc
loope
xchg
or
fdivrs
jnp
enter
leave
or
test
icebp
push
mov
repz
inc
cmp
testb
les
aad
inc
sub
cmpsb
cmp
dec
xor
scas
popa
and
sub
sarl
push
jnp
or
mov
cmp
jl
pusha
inc
sbb
fs
add
out
movsl
xorb
mov
cmpsl
orb
hlt
push
into
das
sarb
cmp
push
xchg
and
ds
jl
arpl
push
jge
add
arpl
cmpsb
jnp
aam
js
cwtl
fstps
push
xorl
addr16
jnp
fs
incb
shlb
mov
outsb
mov
sub
xor
fdiv
adc
and
dec
or
int
cltd
jns
dec
pop
pop
sbb
int3
adc
push
fistpl
ficompl
out
jnp
mov
mov
inc
push
cmp
pop
mov
mov
add
roll
out
addl
inc
push
call
jmp
aad
sbb
ret
je
cmpsl
fnstcw
lahf
outsl
cli
inc
fisttpll
clc
hlt
jge
test
jecxz
push
add
inc
jns
clc
sbb
sub
and
pop
insb
push
sub
add
lods
lea
shrl
cmp
push
mov
pushf
jno
je
stos
es
mov
mov
mov
test
cs
xor
xor
fcompl
fcomps
mov
sub
jae
mov
cmp
jle
and
xchg
mov
lods
jb
fildll
xchg
or
pop
sarb
sbb
pop
push
stos
dec
jo
xchg
mov
ljmp
shrl
ret
jne
mov
ud2
dec
adc
mov
pop
jle
mov
dec
sub
iret
jo
xchg
sbb
fisttpll
in
push
mov
cmpsb
add
jb
das
in
mov
push
fidivrs
sub
fstps
fwait
pop
add
rcl
loop
ret
or
jp
cmp
push
loop
cmpsb
flds
pop
push
jns
iret
enter
jns
inc
int
dec
cmpsb
sbb
pop
lret
xchg
lds
mov
pop
xor
push
inc
inc
pop
fsubrs
push
dec
add
insb
mov
add
ja
sti
or
jnp
lret
ss
ficoms
js
add
insb
je
jnp
and
jne
push
cld
pusha
xor
jp
cmpsl
xorb
std
adc
roll
arpl
jecxz
test
sbb
xchg
inc
mov
arpl
push
leave
pop
inc
adc
add
fwait
aas
mov
cmp
and
std
ret
lret
bound
or
jle
pop
dec
adc
int
dec
arpl
out
jle
xor
and
dec
les
les
fcomi
das
dec
mov
pop
loope
rolb
jg
cltd
cltd
fcomps
insb
arpl
push
fidivl
les
sub
xchg
lea
jmp
and
adc
and
add
mov
cmp
push
lea
in
lods
pop
fs
and
je
sarb
sub
push
test
mov
sbb
jae
lock
divl
mov
fcoms
inc
xchg
lods
xchg
jb
push
cmp
jbe
out
sahf
shlb
sti
cmp
jnp
pop
dec
sti
stc
lods
mov
add
insb
in
dec
pop
push
ja
hlt
sbb
jb
mov
or
sbb
inc
lods
data16
adc
mov
jbe
aad
xchg
jmp
inc
in
pop
add
scas
jo
lcall
rol
add
push
pop
push
mov
cwtl
add
sbb
cmp
mov
ss
loopne
stc
add
sti
inc
xor
dec
dec
push
cmpsl
or
cld
icebp
aad
pop
aad
filds
call
pop
mov
icebp
outsl
jno
in
xchg
and
test
and
cmp
fsubrs
pop
sti
xchg
fistpl
inc
cmove
dec
out
push
mov
aaa
add
bound
mov
mov
repz
lcall
into
ret
test
cmp
lds
mov
cmp
mov
add
inc
or
sub
mov
test
xchg
sbbl
dec
add
sahf
push
sahf
push
sub
aam
jg
xchg
aam
loopne
cmp
lcall
dec
sub
sub
lahf
push
push
xchg
jmp
sbb
lock
pop
xchg
sub
lock
lock
hlt
push
adc
jle
xchg
bound
pusha
sbb
aad
xchg
fnsave
scas
jge
cmpsb
cmp
pop
bound
xor
test
iret
stos
adc
cmc
sub
add
pop
fcompl
pop
mov
jno
pop
stos
or
mov
jg
mov
add
sbb
cmp
add
adc
xor
movsb
or
ds
mov
mov
push
imul
iret
add
dec
out
xchg
fwait
pop
sub
xchg
push
repz
fidivrl
dec
push
mov
fadds
sbb
je
das
inc
and
imul
outsl
mov
pusha
jl
jb
jg
fidivrs
jmp
mov
aad
mov
and
mov
cs
or
jg
sub
sar
push
enter
mov
bound
call
fcoms
inc
arpl
xor
push
gs
mov
out
in
insl
jle
mov
add
pop
outsb
push
inc
jns
fs
xor
in
insb
push
fwait
jg
mov
pop
ucomiss
insb
out
push
xchg
mov
movsl
addr16
add
push
test
arpl
fsubp
lods
xlat
xchg
lods
jge
cmc
cld
pop
push
pop
aad
sbb
aaa
aas
inc
pop
lods
scas
mov
ficomps
cmp
hlt
stc
mul
push
mov
and
movsl
shlb
mov
outsl
popa
loope
icebp
push
xchg
xchg
repnz
movl
and
out
loop
sbb
dec
pop
pop
imul
in
xchg
sahf
add
or
stos
incl
xor
sub
rorl
cmpsb
push
cli
or
adc
stos
int
inc
ret
int3
cmp
pop
iret
dec
push
insl
ficoms
ficomps
jns
dec
jmp
xchg
mov
mov
cmp
int
push
ljmp
push
mov
mov
test
mov
test
std
push
cmpsb
lcall
imul
in
and
cltd
push
and
adc
push
jne
into
int
or
dec
push
fstpl
movsb
push
xchg
ds
scas
jbe
mulb
aam
icebp
add
jno
inc
adc
adc
sbb
lret
cwtl
cmp
or
pop
push
pop
add
aaa
and
push
cmp
or
ss
mov
pusha
cmp
leave
test
push
mov
movsb
add
es
sbbb
loopne
cmpsl
or
call
jle
push
sbb
lret
das
mov
out
repnz
mov
inc
std
cmc
pop
xchg
sti
mov
and
fldt
mov
xor
test
cltd
mov
shlb
cs
daa
loopne
mov
sbb
js
and
xchg
push
das
shrb
mov
rorl
icebp
xchg
movq
fdivrs
cmp
lea
lds
fisttpll
inc
dec
daa
dec
out
lods
ret
negl
dec
cmpsb
jp
cmp
cld
mov
xchg
repz
int3
and
sbb
in
or
lods
call
jb
sbb
fbld
pop
sub
and
enter
mov
out
ja
push
rorl
popf
daa
xlat
lahf
jle
or
pop
xor
xlat
std
mov
pop
pop
loope
xor
pop
rol
xchg
sti
jp
or
sar
ret
ret
cmp
mov
outsb
lods
jecxz
mov
cs
aaa
mov
xor
stos
aas
and
in
das
and
daa
roll
decb
loope
jle
xchg
add
bound
sub
loope
fildl
add
xor
mov
lret
add
cmc
mov
xor
jnp
jno
lret
sub
out
stos
push
inc
cmc
ret
push
imul
out
jle
call
sbb
dec
js
nop
mov
lcall
mov
into
insl
inc
repz
icebp
cmpsb
push
xchg
xor
dec
add
popf
rcl
jb
movnti
pop
and
push
jl
xor
adc
xor
jbe
in
add
clc
jmp
dec
sysenter
pop
ss
setp
jno
mov
rcl
pop
lods
push
pop
cwtl
stos
scas
fdivp
cmpsb
fdivs
sbb
popa
jge
push
mov
mov
mov
jl
dec
call
cmp
movl
xchg
bound
out
fadds
jge
xor
xor
or
divl
sbb
xchg
push
xchg
pop
icebp
jp
push
adc
sub
dec
xor
jbe
and
or
dec
pop
fs
mov
inc
mov
stc
movsb
xchg
push
ds
into
test
dec
dec
lock
nop
shlb
adc
cmp
out
sub
and
ljmp
dec
xrelease
out
cmp
pop
insl
or
in
sub
movsb
or
fwait
lret
xor
mov
lahf
xor
mov
ss
and
cmp
sarl
pop
dec
lahf
and
lods
jne
test
shr
ss
fadd
loope
es
pop
mov
in
sbbb
inc
mov
mov
cltd
dec
call
fimuls
fwait
xor
cmc
in
pop
and
push
mov
xchg
xchg
xchg
mov
ljmp
dec
lock
lds
sbb
mov
adc
addr16
push
xchg
outsl
out
sub
ja
and
out
adc
ret
mov
and
enter
and
sahf
rolb
adc
mov
push
test
loope
loope
inc
sbbl
push
push
dec
shrb
daa
das
gs
xor
out
ljmp
and
test
adc
push
push
lret
mov
mov
fstps
cltd
adc
lods
push
adc
dec
or
push
push
sbb
enter
jg
xchg
push
je
adc
mov
cli
ss
in
adc
adcb
pop
es
enter
dec
popa
pop
lds
inc
je
into
jae
dec
pop
or
shlb
xchg
call
and
sub
cltd
fwait
test
icebp
test
imul
je
test
push
sub
movsl
or
and
lahf
lds
xchg
add
mov
inc
push
fistps
lahf
stos
dec
jae
xor
jo
xlat
pop
scas
gs
inc
pushf
dec
add
xchg
cs
in
stos
fcoml
xchg
shrb
mov
mov
mov
and
xchg
adc
outsb
push
or
push
xor
cmpsl
fistps
clc
inc
or
sahf
cmovg
inc
popf
cltd
xor
cmc
pop
pop
push
pop
mov
pop
ja
mov
jmp
pop
pop
in
mov
xor
mov
inc
out
jmp
mov
lock
pop
clc
bound
aam
xor
ret
jae
pop
jb
inc
push
aas
jbe
inc
adc
lcall
lahf
ss
scas
pop
sub
dec
cmp
outsl
pop
repnz
aaa
sbb
fistpl
nop
mov
mov
dec
fldl
cmp
push
pop
push
cli
int3
push
push
push
sbb
pop
movsl
roll
adcl
pushf
icebp
rorb
and
clc
aad
mov
jmp
inc
jp
xchg
bound
lock
fwait
popf
imul
nop
adc
pushf
inc
push
movsl
jp
cli
sti
fadds
ss
push
enter
mov
mov
sbb
sub
mov
mov
mov
mov
pop
mov
sbb
pop
mov
sbb
or
push
out
insb
jo
cltd
insb
aas
pop
jmp
fwait
pop
sbb
jb
adc
ljmp
insl
push
iret
adc
dec
cli
fsts
bound
paddusb
push
inc
push
ja
xchg
jecxz
lahf
xchg
jecxz
xor
lods
scas
mov
jmp
sub
mov
cwtl
insb
cmp
add
xchg
push
adc
mov
cmp
push
mov
scas
call
fcompl
jo
jno
rol
jb
mov
pop
pop
mov
repz
jl
inc
mov
push
xor
or
xchg
cmp
or
cltd
xchg
dec
fdivrl
add
dec
inc
mov
pop
adc
or
sbb
repz
cmp
jmp
push
add
mov
in
sahf
cmpsl
mov
int3
out
cmpsl
inc
mov
and
cmp
xchg
rorb
cltd
lods
cmpsb
sarb
in
imul
cmp
pop
push
pop
mov
loope
and
jno
shr
push
and
xchg
inc
sub
pusha
pop
je
cmp
jo
pop
add
aas
mov
loop
add
addr16
xor
inc
leave
add
dec
sub
mov
mov
inc
sub
ja
xchg
jns
ss
push
je
popf
outsl
shll
jne
pushf
or
fnsave
push
cmp
add
fistl
cmp
rorl
jne
sbb
imul
addr16
cmp
bound
aaa
adc
mov
loop
sub
out
aam
sarb
pop
ss
movsl
gs
out
pushf
sbb
jo
mov
adc
mov
dec
aam
mov
lock
mov
lret
mov
jbe
je
cmpsb
adc
andl
outsb
stos
in
inc
jge
sub
jl
fsubr
mov
xchg
fstpl
int3
fwait
pop
push
pop
cs
andb
mov
rcll
and
sub
lds
pop
push
es
push
or
adc
mov
or
jmp
cli
enter
or
fcmovnu
mov
push
loopne
out
mov
cltd
decl
fnsave
fmulp
inc
mov
scas
sub
lock
cltd
enter
bound
push
adc
sti
push
sbb
mov
jns
pop
inc
jne
jns
ret
call
xchg
cmpsl
scas
dec
mov
pop
shl
jmp
cmpsb
xchg
and
jge
sbb
add
aaa
clc
xchg
fs
adc
add
jle
xchg
sahf
ret
cmpsl
xchg
push
enter
sbb
xchg
popl
push
cmpsb
xchg
dec
lret
sbb
je
xor
stc
fwait
incb
mov
icebp
stos
cmpsl
mov
inc
cltd
inc
xorl
inc
jb
popf
lods
leave
cli
or
pop
xchg
aaa
loop
les
xchg
jg
xchg
adc
ss
or
pop
or
mov
or
jno
xor
js
jbe
repnz
push
aam
mov
xor
xor
nop
dec
testb
mov
inc
or
loopne
jle
and
mov
std
add
stos
sub
pushf
iret
repz
or
in
sub
sbb
push
fwait
xor
iret
daa
ds
in
mov
ja
orl
adc
pop
mov
dec
call
repnz
cmpsl
inc
xchg
push
arpl
lret
push
dec
pop
dec
or
addr16
mov
scas
sarb
repz
jb
iret
ds
jae
add
pushf
add
cltd
stc
cpuid
jmp
orb
sub
notb
push
and
xor
das
dec
pop
pop
jnp
push
jbe
cmp
out
gs
and
xchg
or
xor
rcrb
lock
or
iret
arpl
rcrb
enter
jl
xchg
jg
sbb
dec
test
adc
xchg
stos
fwait
and
cmp
pop
mov
jg
jbe
bnd
mov
testb
jno
lret
fldt
paddsw
mov
cmc
cmpsb
push
ret
mov
dec
push
adc
popl
cmc
stos
jo
xor
mov
negb
andb
jp
push
je
adc
fimull
std
adc
jp
inc
pop
jne
lods
mov
lahf
push
das
mov
sahf
or
adc
test
add
fsubrl
fdiv
xlat
in
or
jecxz
clc
pop
es
aad
in
pop
fnsave
rcrb
pop
popf
aad
das
icebp
orl
jno
pop
fisttps
lcall
dec
xor
addr16
ljmp
sbbl
iret
lcall
cmp
and
pop
jne
nop
mov
js
iret
cmpsb
std
sbb
je
xor
push
or
jmp
in
fisttpl
test
and
test
pop
add
sbb
dec
lahf
cld
stc
idiv
add
cmp
inc
add
xor
mov
and
cmpsl
sbb
inc
sarl
mov
popf
nop
sub
dec
mov
stc
pop
outsl
or
lods
stos
dec
xor
xlat
imul
fwait
jne
lret
sbb
cltd
push
and
ffree
movl
js
mov
pop
adc
xorb
inc
inc
pushf
cmovo
pop
adc
stos
loopne
cmpsb
dec
daa
es
xlat
cld
inc
aad
cmp
mov
and
mov
jecxz
add
sub
scas
push
ja
or
xor
inc
and
push
jno
es
out
shlb
ret
xor
cmp
out
cmp
sub
lcall
fs
insl
ds
adc
jb,pn
fisubl
dec
dec
push
sub
das
xchg
push
lea
scas
and
int
jmp
cltd
and
pop
cmp
or
mov
jo
ja
mov
inc
out
mov
shrl
xor
in
inc
cmp
mov
loope
pop
xchg
movsb
inc
dec
and
in
cmc
xchg
rorl
js
adc
ja
fisubrs
fcmovnb
adc
movsb
test
lahf
mov
loope
fbstp
out
cli
or
xor
cli
push
xchg
cmp
ret
jo
lods
mov
ds
bound
jl
mov
adc
push
or
jo
adc
js
addr16
bound
inc
fs
stos
mov
aaa
add
cmp
jno
out
push
mov
std
push
into
xchg
ds
sub
in
add
pop
jge
rcrb
inc
data16
push
cwtl
test
cmc
aas
cmp
or
cmp
and
mov
sbb
subl
push
jnp
and
push
mov
notb
and
insl
push
mov
push
aam
je
es
dec
and
inc
jg
adc
daa
inc
mov
cmp
mov
pop
outsl
std
jge
mov
call
aam
mov
hlt
leave
lods
and
lret
leave
aam
dec
push
adc
mov
lock
dec
ljmp
pop
cli
cltd
mov
mov
jnp
clc
leave
and
nop
out
das
add
pop
or
lock
jbe
xor
test
into
pop
jg
add
sbb
sti
adcl
pusha
xchg
mov
push
loop
mov
das
inc
push
sub
xchg
mov
adc
mov
xchg
outsb
fdivrl
pushf
jno
xor
pop
dec
lret
fucom
clc
clc
cmpsb
das
test
jo
push
call
insl
jmp
jp
imul
pop
arpl
cwtl
es
xor
aad
pop
das
popa
mov
jge
cmp
push
fscale
test
jecxz
fsubs
aam
inc
fs
lea
push
fcomi
adc
testl
shl
sbb
enter
daa
push
dec
mov
je
jbe
lret
cmp
fs
les
call
dec
fldcw
in
sub
pusha
xchg
mov
sub
jnp
mov
mov
mov
lods
cmpsb
cli
in
ds
mov
pusha
inc
fcmove
sbb
mov
inc
mov
push
pop
dec
push
mov
sub
addb
nop
mov
mov
fimull
or
add
push
mov
fists
stos
rcrl
adc
and
daa
sbb
sub
mov
jns
icebp
adc
ds
push
mov
repnz
data16
mov
push
sbb
rcpps
inc
and
jb
incl
sbb
jge
xchg
pop
aam
js
inc
jecxz
psllw
movsb
inc
xchg
in
pusha
jp
int3
jge
enter
mov
mov
cmp
mov
xor
xor
or
dec
pop
xor
imul
pop
imul
push
mov
add
mov
xor
ss
mov
inc
fnstcw
in
outsl
push
adc
imul
sub
je
push
loope
push
adc
je
and
fnstcw
sbb
imul
jp
push
add
add
add
xor
fcompl
xchg
pop
mov
dec
inc
lahf
and
cmp
inc
sbb
and
loopne
pop
sub
insb
add
lahf
mov
out
mov
int
xor
mov
or
mov
out
mov
lret
ret
mov
mov
sub
sbb
dec
mov
popf
xchg
daa
dec
lcall
aad
mov
in
jo
fnsave
pop
sub
xchg
mov
mov
inc
jns
cmp
add
dec
push
movsb
pop
std
push
mov
adc
mov
mov
cltd
jno
out
arpl
loopne
es
mov
or
out
fstpt
push
loope
sub
or
cmp
mov
dec
xor
and
insb
bound
pop
cmp
test
sti
adcb
jge
push
ljmp
pop
std
mov
int
mov
pop
mov
in
lods
testb
fmuls
and
add
sbb
iret
xlat
sub
or
inc
cltd
xorb
fs
cmp
imul
jp
dec
xchg
xor
rcrl
dec
stc
push
lret
inc
das
test
ja
dec
fadd
stos
jge
push
ja
pop
into
mov
shrl
std
inc
lret
inc
adc
adc
in
call
xlat
push
jp
pop
clc
out
fwait
xchg
cmp
or
or
push
cwtl
cmp
fsubrp
imul
sbb
cwtl
and
sbb
push
inc
ffreep
and
je
mov
outsb
add
dec
into
cmpl
mov
pop
xor
gs
jne
std
enter
sub
push
pushf
adc
add
mov
int3
outsl
mov
sti
arpl
les
add
push
addb
add
pop
xchg
adc
push
mov
xchg
jbe
rcrl
adc
rcr
stos
add
test
push
mov
cmpl
dec
mov
mov
sbb
mov
sub
mov
mov
push
ret
fs
xchg
lcall
aad
sbb
or
add
mov
addb
lods
cmp
arpl
in
xchg
mov
stos
dec
push
jmp
pushf
add
xor
out
or
aam
testl
insl
or
fsubs
cltd
sub
cmpsb
jns
sbb
cmp
leave
outsb
add
xchg
nop
add
xchg
icebp
sarb
mov
inc
xlat
and
divl
xor
test
push
mov
xchg
mov
adc
movsb
shll
nop
sub
jne
in
push
adc
jae
insl
inc
mov
mov
addr16
test
popa
sub
sbb
jge
adc
mov
jae
neg
rcrl
xchg
hlt
cmpsl
test
push
shll
pop
lods
push
fmull
add
jp
add
push
mov
mov
or
mov
mov
shl
je
jp
mov
orb
xchg
pop
jbe
mov
sbb
mov
lods
sbb
out
cmp
mov
mov
in
pop
loopne
popf
mov
and
sarl
and
cmpsl
xor
cmp
out
pop
js
in
xor
mov
xor
add
mov
ja
fsubl
lea
mov
lds
cmp
mov
js
rolb
sbb
sub
adc
ljmp
add
dec
dec
loopne
fs
cs
sub
jnp
adc
cli
les
in
fistpll
jae
adc
fcoms
imul
mov
imul
cmpsl
and
push
test
xchg
mov
mov
adc
cltd
les
std
jae
inc
jg
fldenv
int
adc
mov
pop
inc
retw
in
leave
lahf
or
popf
mov
mov
cmp
inc
dec
out
cmp
xlat
adc
cmp
fidivl
and
jl
ror
mov
ljmp
in
into
aad
rclb
gs
das
iret
lcall
and
negl
cmpsl
jns
push
leave
dec
lret
jle
push
outsb
inc
sti
es
push
add
cmp
mov
test
xchg
or
lock
push
pop
loope
inc
push
js
cwtl
xlat
adc
mov
xor
nop
add
lds
jae
push
push
testb
sub
sbb
cs
xor
roll
xchg
xor
andb
stc
sbb
test
into
or
insl
lret
pushf
fwait
shll
lret
pop
mov
sti
cld
jb
mov
lock
insl
cmp
pop
je
pop
mov
mov
adc
cmp
inc
call
ret
add
cmp
pusha
jae
push
repnz
scas
leave
lods
sbb
dec
fisubl
enter
push
subl
fmull
mov
loope
loope
insl
cmpsl
inc
in
jg
cmp
cld
dec
push
mov
scas
pusha
and
dec
sbb
mov
out
loope
fs
mov
xchg
out
nop
out
dec
jmp
xchg
add
mov
popf
insl
inc
jge
or
inc
dec
inc
push
jmp
xor
push
pop
or
fldl
mov
imul
leave
mov
in
dec
fwait
les
xchg
mov
lock
call
mov
repnz
adc
in
cmpsb
fnstcw
sbb
xor
sti
jnp
popf
aam
sub
pop
test
outsb
push
enter
test
notb
test
stos
rcrl
push
xor
lea
push
testl
pop
adc
push
lea
sub
or
add
das
addr16
loope
dec
leave
sub
jb
cs
enter
fnstsw
mov
mov
lods
pop
repz
adc
lock
movsb
jo
cwtl
dec
push
dec
pop
xlat
aaa
test
cli
outsl
out
sbb
xchg
inc
imul
mov
sbb
ret
pop
sub
and
and
push
jmp
test
cmp
jae
sbb
sbb
jl
inc
js
cwtl
sti
or
push
cmc
popa
inc
add
inc
cmpsl
dec
hlt
andb
fwait
mov
and
rcrl
dec
fidivrs
pop
mov
int
mov
jnp
cltd
and
lret
sti
leave
into
clc
xchg
ss
fnstsw
ficompl
sbb
adc
das
std
xchg
sbb
xchg
sbb
in
in
and
pop
push
dec
cmp
sbb
and
imul
inc
inc
out
xchg
push
jo
xchg
cmp
idivb
sti
inc
out
add
rcrl
lds
mov
xchg
xchg
cmp
lret
dec
or
int
int3
inc
xor
jg
mov
enter
mov
inc
pusha
js
cs
mov
adc
movsb
shlb
nop
in
xor
iret
aad
sbb
arpl
cmp
sub
or
loope
xor
pop
dec
leave
jge
bound
jg
lea
sbb
dec
push
xchg
dec
fs
cs
imulb
mov
add
or
mov
jnp
imul
mov
scas
rol
hlt
ja
cli
mov
sbb
adc
mov
jo
ja,pn
cmp
enter
add
inc
pop
sbb
pop
shll
xchg
sbb
mov
movsl
sti
subb
sar
out
sub
cs
loope
push
in
xor
leave
xor
and
call
clc
sti
mov
or
sbb
inc
arpl
pop
stos
jle
and
push
push
sbb
pop
fimuls
int
loopne
push
ficoms
push
lods
cld
dec
lds
cs
mov
clc
or
aas
mov
jo
inc
jo
test
popa
xor
lret
push
pop
jge
and
inc
add
xor
sub
outsb
daa
pusha
ljmp
fwait
mov
loopne
cmp
cmp
push
mov
dec
jnp
ret
loopne
dec
adc
ljmp
xor
movsb
fsubrs
aad
and
clc
stos
dec
mov
jne
dec
shr
stos
in
pop
adc
rcl
std
lret
add
das
add
or
dec
adc
outsb
imul
push
push
sbb
xchg
add
and
mov
into
icebp
arpl
push
push
jno
pop
scas
cld
mov
or
icebp
push
dec
int
xor
ret
cltd
test
dec
inc
clc
andl
cmpsb
xor
cli
mov
ljmp
ss
out
sbb
xchg
xchg
lock
out
ljmp
push
cs
cwtl
dec
sub
test
mov
fadd
stos
loop
shrb
xor
push
ret
pop
std
stos
outsl
and
pushf
lcallw
xor
mov
pop
sub
pusha
sti
pusha
pop
push
pop
lea
push
faddl
cmpsb
adc
mov
loopne
insb
fstps
pop
fisubrl
mov
push
add
aad
in
add
add
cmpl
mov
add
mov
sbb
mov
sti
cld
fimull
jg
dec
push
pop
jle
enter
dec
and
lds
inc
jge
aas
iret
or
push
add
leave
repnz
lret
ror
and
mov
loope
push
add
sub
sbb
sbb
leave
daa
jl
std
pop
leave
mov
stc
dec
fdivl
cmpsb
dec
mov
sbb
fstpl
lcall
xchg
aas
xorl
dec
adc
test
adc
pushl
xchg
cmp
ds
jle
mov
scas
fs
cld
mov
js
pop
test
ret
push
mov
ss
mov
mov
and
lea
sub
pushf
rcr
shll
imul
rcl
fisttpll
push
fisttpll
mov
sub
notl
dec
into
movsb
sahf
jecxz
in
shrb
mov
sbb
aad
repnz
add
push
cli
ja
fs
pop
sbb
cld
subb
mov
cmp
inc
neg
lahf
jmp
out
imul
sbb
movsb
cmp
adc
out
fisubrl
pop
or
dec
out
or
mov
jnp
sarb
es
cmp
enter
xchg
sub
xchg
mov
dec
mov
std
stos
sbb
dec
or
dec
out
mov
or
or
lods
call
popa
sub
int3
pop
adc
inc
das
add
fs
inc
addl
jnp
out
inc
mov
or
inc
mov
mov
sub
mov
aad
andl
filds
gs
in
cmp
pop
dec
cmpsb
push
mov
rorb
mov
aad
hlt
jnp
pushf
and
jg
fwait
aad
cwtl
jmp
jns
sbb
inc
mov
mov
dec
movsl
nop
push
insl
mov
fwait
push
imul
xor
mov
fcompl
subb
mov
cld
and
sbb
xchg
jle
mov
jecxz
pop
lea
jecxz
les
inc
popa
add
adc
subb
jno
scas
push
inc
enter
xlat
mov
mov
and
int
sub
nop
push
aam
pop
xchg
fstps
ret
fdivrl
inc
cmp
pushf
sub
insb
mov
mov
inc
mov
out
dec
inc
pop
and
mov
lcall
rolb
jae
push
sti
int3
in
test
adc
js
rcl
sti
xchg
cli
add
ds
outsl
ljmp
cmpsb
mov
and
xor
xor
repz
shlb
cs
icebp
jmp
imul
in
rcrb
xor
pop
loop
js
sub
and
popf
loopne
les
mov
add
dec
sub
mov
aaa
or
lret
jns
xchg
pop
stos
js
ljmp
jmp
outsl
inc
mov
mov
scas
dec
loop
inc
out
cmp
pop
mov
icebp
insl
sub
and
xchg
cwtl
mov
inc
xchg
sti
adc
mov
rcrb
dec
je
dec
movsb
pop
sbb
xchg
outsb
fisubl
fistpl
pop
add
mov
xchg
das
mov
inc
loope
incl
stos
cmp
movl
or
fmull
dec
push
push
pop
daa
adc
adc
orb
sbb
xchg
dec
fwait
popa
add
xor
shll
push
in
push
mov
lods
inc
ss
mov
shlb
lock
ret
mov
or
rorl
lods
xchg
aas
ljmp
inc
or
push
scas
fcomip
adc
rcr
dec
in
cmpsl
icebp
sbb
jge
lahf
nop
push
sub
incl
inc
mov
rcrb
sbb
or
popf
sub
cmp
jbe
js
mov
adcl
rcl
lcall
sbb
daa
aaa
pusha
leave
lock
stc
jle
imul
add
lock
in
int
xor
loope
or
or
jnp
mov
lods
jns
xchg
lods
stos
sahf
aad
stc
inc
xorb
mov
push
stos
nop
mov
sarb
sti
push
inc
jmp
fistps
stos
stos
xor
test
outsb
pop
push
enter
js
lcall
adc
mov
es
mov
popf
pop
test
dec
jp
fcoml
js
xchg
sub
sbb
stos
xlat
call
lds
or
xor
mov
mov
mov
jns
dec
sub
or
ss
data16
push
fadd
or
out
in
aaa
outsb
xor
xchg
addr16
imul
jno
call
or
fincstp
pop
insb
or
dec
je
inc
jecxz
enter
push
pop
fs
push
or
mov
sub
pop
pushf
das
mov
pop
xor
icebp
dec
mov
jno
addb
xlat
lret
sarl
or
dec
sbb
out
dec
rcrb
sbb
adc
das
mov
lods
push
sub
mov
push
loope
aaa
push
xor
adc
out
cli
hlt
jbe
xorb
ds
inc
mov
mov
sub
mov
xchg
nop
xor
xlat
and
mov
inc
add
ror
test
fs
jae
lds
lods
rcrl
pop
push
imul
mov
sbb
mul
lcall
loopne
repz
repnz
push
add
dec
int
fisubs
xchg
push
out
dec
in
mov
shlb
push
pop
ljmp
fmuls
nop
mov
mov
or
xor
test
mov
add
out
push
aam
es
mov
mov
cwtl
movsb
adc
idiv
into
lret
fwait
mov
sub
and
outsb
fstpt
jnp
lea
addr16
xchg
and
jmp
in
dec
js
mov
add
cltd
cmp
and
jae
cli
and
movsb
mov
sub
popa
inc
lock
cmp
adc
fisubrl
rolb
call
fisttpll
xor
daa
cmp
cwtl
xlat
or
cmp
mov
testb
jb
dec
js
jecxz
push
idiv
ja
sti
decb
xor
repz
out
ss
fisubrl
shll
out
xchg
and
dec
popf
enter
imul
into
vmwrite
je
and
dec
ja
roll
fbld
cmp
push
sarb
cmp
push
mov
push
fwait
loopne
or
jge
adcl
dec
rorl
xchg
adc
movsl
addr16
xor
xor
xchg
aad
and
aad
cmp
out
stos
pop
ds
push
in
jb
mov
nop
stos
hlt
adc
sbb
mov
jecxz
les
mov
out
imull
aam
jne
lods
sbb
sbb
push
sub
or
int
mov
fnsave
sub
pusha
inc
cld
test
fsubrl
hlt
adc
xchg
popl
cmp
inc
push
sbb
cmp
icebp
push
jecxz,pn
loop
xlat
fs
ret
mov
test
fldpi
jno
sub
mov
ljmp
cmp
fcmovnb
sub
icebp
scas
mov
inc
cmp
adc
mov
in
pop
mov
xor
aaa
gs
sub
add
mov
xchg
mov
and
push
cmp
sbb
les
xchg
pop
sti
push
pop
adc
jecxz
adc
push
lea
push
and
fdivl
test
cmpsl
int
outsl
daa
mov
sahf
cmc
sbbb
sub
dec
mov
mov
add
xor
mov
adc
hlt
pop
jne
xor
lds
inc
fsubp
jp
mov
xor
loop
sub
adc
dec
xlat
std
add
xchg
cmp
add
lret
add
lock
cmp
inc
test
loope
aad
ret
xchg
into
jb
push
movb
pop
into
outsl
ljmp
cld
loopne
jne
stos
loopne
inc
scas
cld
jmp
aad
ds
push
cmpl
push
xor
or
sbb
push
gs
cmp
cmp
stos
movsl
sub
cmp
mov
pop
push
aad
mov
mov
jp
pop
sbb
in
and
out
fidivs
xor
lods
sbb
xchg
cmpsl
cs
pop
adc
ljmp
insl
sbb
jle
gs
loop
lcall
test
fs
int3
sahf
dec
in
dec
push
push
push
fdivs
ljmp
xor
jo
or
fistpll
dec
mov
loope
test
jae
icebp
jp
dec
push
or
scas
je
aaa
and
test
aaa
fnstsw
pop
andl
xlat
push
xchg
cmp
popa
xor
mov
fidivs
add
out
xchg
cld
repz
sbb
cli
xchg
jg
adc
inc
cmpsb
sbb
jecxz
adc
scas
imul
add
cmc
repnz
popa
sub
incb
mov
in
and
push
loope
sar
mov
jl
std
push
rorb
jnp
cmp
mov
mov
add
mov
fnstsw
sahf
sbb
shll
mov
clc
lods
iret
add
mov
mov
mov
cmp
adc
and
addr16
jnp
ds
pop
or
push
pushf
push
iret
and
add
clc
adc
and
leave
sbb
loope
aaa
xor
mov
or
sbb
lcall
jnp
fistpl
push
mov
sbb
or
orl
ficoms
scas
aaa
aaa
int
adc
mov
sbb
lret
adc
push
insl
xchg
sbb
je
jge
push
lods
cli
das
cltd
sub
in
lds
rcll
jle
out
imul
add
stc
std
pop
ret
stos
mov
sbb
lret
fwait
inc
test
sbb
sub
aam
ret
xchg
ja
jb
mov
out
scas
outsb
int3
lret
clc
pop
and
dec
jno
out
das
xor
cwtl
push
stos
cwtl
insl
inc
sbb
out
ja,pn
mov
icebp
sbb
mov
in
int
ljmp
fs
xchg
jb
in
mov
nop
lret
setle
mov
addr16
filds
sbb
sahf
xor
xchg
add
xchg
lret
rolb
subl
popa
shll
movd
xor
dec
inc
or
pop
popa
aad
nop
lock
aas
adc
gs
mov
jecxz
inc
stos
sub
fdivp
lcall
in
das
fcompl
xchg
outsl
cmp
cltd
jno
cmp
js
mov
jns
aad
xor
jno
sbb
xchg
and
test
jp
jb
clc
push
js
dec
mov
cwtl
bound
popa
add
inc
inc
aas
aad
add
ds
or
mov
lret
pop
and
mov
xor
repz
je
aaa
mov
cli
outsb
jno
jl
jbe
cmp
cmpsl
jmp
add
shlb
push
imul
and
divb
and
lahf
jne
loopne
mov
mov
cmp
pop
stos
cmpb
out
aas
fldcw
in
mov
mov
jmp
adc
mov
js
sub
scas
mov
ljmp
jge
pop
fwait
jecxz
inc
out
dec
push
xchg
rorl
xchg
test
stos
and
fxam
or
mov
add
fcomps
adc
pusha
addl
mov
or
mov
cmovne
arpl
mov
pop
call
das
andb
in
hlt
inc
fstps
hlt
fnstsw
bound
add
xor
sub
pop
pop
adc
jecxz
out
and
push
int
stos
mov
into
icebp
dec
push
test
lea
hlt
aam
out
iret
lock
adc
insl
jge
xchg
insl
inc
fldcw
sbb
loopne
xlat
stos
aaa
and
push
in
inc
mov
sbb
jo
clc
sbb
xchg
out
aad
sar
pop
xor
int3
je
mov
aad
out
jl
into
inc
dec
xor
sbb
jecxz
stos
add
arpl
jnp
mov
icebp
inc
or
in
std
push
addb
dec
jg
aad
sub
out
or
inc
cmp
xor
sbb
fs
sbb
and
or
ja
repz
sub
enter
loop
sbb
sbb
das
jmp
xor
mov
in
rorb
loopne
xchg
inc
adc
idivb
jb
mov
xchg
mov
mov
sub
inc
ficompl
adc
xlat
push
sbb
test
jne
add
call
cld
test
loop
iret
pop
cmp
imul
cmpsl
and
mov
sub
xchg
jl
or
jae
rorl
pop
adc
outsb
lea
sbb
jecxz
stos
lock
dec
adc
fcoml
xor
fisubl
aad
adc
mov
xor
rcrl
dec
lds
test
ljmp
pop
pusha
pop
mov
lahf
shl
jge
scas
or
xchg
sti
push
jnp
insl
sub
cltd
push
and
loop
aam
inc
jge
in
rcrl
test
popf
lret
movsl
jbe
jl
xor
fdiv
pop
mov
int3
popf
daa
fwait
sbb
jns
shrl
xchg
aam
jge
shl
inc
cmp
and
out
cmpsb
jge
push
pop
and
inc
mov
jmp
dec
mov
rcrl
cs
lock
fisubl
repnz
fistpll
test
loope
jg
test
cs
mov
add
jo
sub
add
dec
ror
test
repz
inc
cmp
cmpsl
pushf
mov
ja
aam
mov
jl
mov
jo
call
clc
es
push
push
mov
ja
sahf
xlat
notl
jae
lds
push
faddp
push
cs
imul
call
sbb
dec
jl
adc
loope
xchg
lds
idiv
or
cs
pop
ja
movsl
fwait
pop
or
xor
push
mov
subb
mov
mov
stc
mov
sbb
test
stc
xchg
out
and
rcr
pop
ds
sbb
addr16
sub
add
push
mov
lcall
lret
int
pusha
bound
bound
leave
enter
mov
mov
jno
mov
add
mov
add
mov
adc
xchg
push
xchg
inc
pop
ss
repz
lahf
shlb
pop
lds
sbb
jb
jp
jl
leave
cmp
std
mov
inc
mov
pop
jp
inc
xchg
stos
repz
push
in
and
fimuls
popa
push
push
arpl
mov
pop
cmp
xchg
add
or
rcrl
push
mov
push
sub
hlt
movsb
stc
aas
ja
mov
rcll
pop
addr16
xchg
iret
imul
inc
push
shll
addb
cmp
add
insl
mov
subb
push
sti
loope
cmp
cmpsl
ds
or
loopne
sbb
pop
xor
addb
xchg
and
jo
movsb
test
cmp
mov
pop
dec
push
adcb
sti
or
mov
mov
xor
cmpsb
xchg
cmpsb
cmpsb
adc
inc
adc
mov
stos
mov
push
out
call
mov
cmp
lret
testb
call
pop
sub
sbb
xchg
xchg
hlt
add
pop
mov
add
fs
or
mov
and
lock
pop
or
vmulsd
stc
and
dec
outsl
fstpl
leave
cltd
inc
mov
nop
mov
test
lods
add
lahf
rol
pop
call
jmp
mov
leave
in
bound
shl
or
loop
andl
in
xchg
inc
inc
or
outsb
xchg
fmuls
jge
jl
mov
jbe
sbb
inc
pop
xor
push
jp
pusha
pop
inc
mov
dec
xorl
hlt
jnp
movsb
aaa
mov
icebp
out
mov
pop
and
ds
popf
leave
cmc
stc
loop
mov
divl
repz
and
mov
cwtl
inc
pop
scas
movsb
jno
and
mov
xchg
iret
push
mov
mov
xchg
sub
cltd
or
ja
pop
loope
test
icebp
lods
lock
mov
push
lahf
repnz
movsl
mov
leave
push
faddl
mov
cmp
sti
push
jnp
add
cmp
mov
das
aad
adc
popf
insb
or
add
mov
jmp
iret
mov
pop
enter
lret
lock
sub
cmp
shll
into
out
dec
imul
sub
loop
adc
pushf
jb
pusha
push
popa
xchg
pop
ret
repnz
xor
rclb
adcb
pop
adc
rol
fiadds
test
dec
jp
cli
aas
pop
xorl
sbb
or
and
mov
mov
sub
jb
leave
cltd
gs
lds
das
pop
jns
mov
dec
faddl
add
mov
in
pop
mov
hlt
pop
and
dec
das
test
fcomip
pop
int
mov
jns
xor
xor
inc
or
enter
mov
pop
cmp
subb
sarl
or
pop
outsl
cmpsl
pop
push
push
xchg
cs
mul
cmp
xor
repnz
add
xchg
cli
mov
adc
loop
adc
movsb
inc
dec
iret
add
ffree
inc
push
add
xchg
lret
movsl
aaa
sbb
sbbl
cmp
jnp
inc
xchg
popf
das
iret
push
test
pop
xchg
mov
adc
xlat
add
test
mov
les
sub
lcall
push
andb
aas
loopne
or
sbb
into
popf
pop
mov
pop
cli
mov
ret
jbe
dec
push
cmp
and
push
dec
fidivrs
mov
nop
mov
jmp
sbb
jns
sahf
jmp
lret
cmc
lea
mov
add
stos
repz
mov
pop
pop
fistpl
clc
mov
outsl
jmp
or
mov
push
outsb
inc
xor
loop
mov
into
fisttps
es
cmc
std
dec
or
popa
jnp
int3
sbb
add
jecxz
and
sbb
fsubl
lock
dec
mov
fnstenv
cwtl
js
mov
pop
mov
pop
mov
test
leave
pop
cli
movsb
iret
or
repnz
lea
mov
push
lahf
js
pop
and
fcoml
dec
mov
sbb
cmp
outsl
scas
xchg
mov
pop
jnp
cmpsl
sub
nop
pop
cmp
sub
lock
mov
iret
nop
pop
repz
adc
push
sub
lahf
mov
test
in
mov
cld
loopne
adc
xchg
mov
out
mov
sti
adc
pop
mov
push
imul
mov
mov
dec
sbb
pop
jbe
lret
pushf
push
loopne
fdivs
mov
mov
fs
fcomi
fs
push
and
ljmp
adc
xor
push
js
fnstcw
adc
ficompl
and
int
jnp
sti
sub
sub
out
pop
pop
shr
mov
mov
repnz
cli
pushf
test
js
add
push
jae
mov
out
and
pop
fnstcw
loopne
pop
icebp
push
call
or
pop
idivb
rcrl
push
shrb
loop
mov
mov
cmc
movsb
push
add
pusha
mov
decl
icebp
testl
mov
cltd
inc
jg
cli
dec
pop
arpl
lods
inc
jb
in
movsb
xchg
je
mov
rol
cs
flds
pop
inc
lcall
adc
ret
and
xor
jne
fists
xchg
call
jge
clc
loopne
shlb
mov
adc
fdivrs
in
pushf
add
pop
test
mov
aam
ja
mul
dec
add
sub
cmp
cmp
je
insb
xor
fnstenv
mov
fiadds
mov
in
movsl
jne
cmp
es
out
xlat
sub
push
add
add
add
pop
jecxz
lcall
addl
pop
xchg
add
jnp
mov
pop
fs
daa
inc
push
ljmp
jo
jp
pop
fwait
sbb
imul
jl
ljmp
movsl
nop
jb
and
and
das
rclb
adc
test
push
sbb
xorb
nop
ror
mov
cmp
ret
add
jne
dec
repnz
xchg
pop
jb
and
daa
xchg
out
sub
xor
adc
fisubl
ret
dec
add
mov
sub
or
aad
loop
pushf
jnp
sub
xor
fists
lret
or
push
push
inc
addb
ss
js
popf
cwtl
mov
jecxz
inc
lock
xchg
jb
dec
cmp
jo
sbb
dec
incb
mov
sub
stos
adc
int3
fists
pop
int
lahf
mov
ja
fs
jmp
mov
pop
hlt
inc
in
in
jmp
xchg
jl
xlat
clc
pop
xor
adc
pop
addl
adc
push
pushf
sbb
mov
sbb
js
xchg
pop
xor
cmc
xchg
lea
fstps
or
push
stos
jecxz
into
dec
pop
push
jmp
push
dec
and
in
mov
loop
push
movsb
cmp
mov
stos
iret
icebp
push
rorl
xor
cmpsb
cs
sub
pushf
addr16
mov
xor
fdivrl
fcomps
fisubrl
pop
mov
mov
stc
and
adc
xchg
aam
aas
outsl
xchg
scas
inc
in
ss
stc
mov
dec
sahf
shl
mov
rcrl
in
mov
in
fs
xor
and
adc
or
fistpl
arpl
dec
jmp
in
popf
cmpsl
inc
dec
outsl
mov
or
push
push
jl
fsubl
pop
mov
fdivrp
xor
jae
or
add
mov
jle
mov
pusha
or
ret
loopne
xor
stc
popa
mov
adc
inc
int
mov
add
inc
mov
jl
inc
pop
sahf
in
outsl
jae
aas
mov
push
sbb
test
jle
push
lea
lcall
outsb
pop
pop
loopne
mov
inc
mov
andb
push
andl
ljmp
rorl
cld
es
cmp
jns
adcb
mov
push
xor
mov
mov
cmpsl
or
sarb
pop
xchg
mov
push
xor
pushf
and
es
pop
les
jb
and
sbb
hlt
fdivs
push
sub
aaa
out
fisubrs
dec
test
inc
jg
push
in
insl
lret
insb
adc
xor
dec
cltd
mov
add
imull
andb
pop
icebp
idivb
sub
pop
ja
decb
cs
add
test
ficoml
or
adc
sbb
fwait
push
xchg
enter
adc
dec
pop
and
jbe
or
jmp
pop
enter
dec
lea
adc
daa
xor
insb
pop
out
pop
jae
sbbb
into
pop
jmp
xchg
dec
push
or
push
mov
xchg
ret
ret
icebp
sub
movlps
scas
cmp
push
and
pop
push
pop
adc
and
inc
inc
aaa
shr
clc
xchg
mov
cmp
int3
adc
pop
lret
aad
vmwrite
enter
into
xchg
mov
out
aas
lret
iret
aad
jle
orl
loop
lods
pop
jnp
push
loope
dec
mov
insl
daa
ss
test
insb
rcrb
fldt
scas
inc
and
mov
frstor
dec
sahf
jle
push
es
push
lea
push
mov
cmpsb
stos
jl
push
sbb
mulb
pop
inc
push
sub
mov
jae
inc
push
test
push
jae
dec
mov
mov
pop
fistps
xor
jne
xchg
mov
pop
cmp
inc
sub
jno
mov
inc
pusha
jle
rclb
mov
sbb
push
data16
sti
push
je
cwtl
or
roll
sti
popf
cmc
and
push
jno
jge
cs
cmc
and
or
ljmp
mov
mov
lcall
aam
push
aaa
test
shlb
mov
inc
shrl
in
mov
xor
andb
dec
lret
jns
lds
and
dec
cltd
testb
push
lret
stc
testl
arpl
push
ss
fbld
inc
add
fiadds
mov
decb
adc
subl
jnp
or
out
adc
adc
jmp
imul
add
mov
cwtl
xor
js
into
mov
outsl
sub
push
and
mov
fsubrl
insl
adc
mov
mov
in
mov
ret
cmpsb
std
mov
subb
or
and
leavew
out
xchg
mov
cmp
adc
into
out
cli
push
inc
test
dec
xchg
xchg
xlat
and
imul
cli
sub
data16
mov
jp
aad
cld
mov
xchg
adc
les
and
sbb
inc
pop
jp
jmp
cmc
jmp
fwait
imulb
test
insb
sub
cmp
jbe
or
mov
inc
pop
in
inc
pop
and
jns
call
dec
sub
cwtl
mov
push
mov
rorb
dec
mov
frstor
pop
movsb
cmpsb
imul
mov
scas
cmp
jmp
mov
test
data16
out
mov
add
sbb
cld
add
cmpsl
or
or
loop
cld
inc
and
pusha
arpl
iret
cltd
xor
gs
push
shr
fiadds
test
outsb
xor
repnz
pop
inc
addr16
inc
sbb
addr16
jp
pop
in
xor
push
lret
lods
xor
sbb
sarl
loope
mov
iret
mov
and
dec
sti
xchg
adc
jne
stc
dec
inc
lds
push
subl
jbe
lcall
xlat
mov
push
jle
bound
jnp,pn
jmp
jmp
or
xchg
cwtl
pop
test
cs
sub
jb
mov
inc
adc
xor
loop
mov
adc
cmp
ret
adc
std
call
and
sahf
cli
dec
dec
pushl
pop
pop
adc
sbb
jb
add
rcrb
mov
aam
sti
sahf
push
and
pusha
add
bound
test
mov
movsl
negl
mov
icebp
push
mov
jmp
loop
popa
and
repnz
mov
xchg
rcr
xor
dec
sbb
pop
sub
push
xchg
xchg
fidivs
inc
dec
enter
cwtl
loope
lods
out
loop
sbb
inc
pop
add
cmp
out
pushw
xchg
fcom
aam
mov
xchg
jbe
mov
imul
push
scas
icebp
cltd
adc
inc
insl
push
hlt
pop
jge
dec
push
adc
jns
push
mov
jae
pop
mov
stc
lahf
push
xchg
pop
adc
out
pop
dec
inc
inc
fsubr
mov
js
ret
xchg
cmp
push
add
mov
pop
sbb
int3
jns
loop
lahf
mov
cmp
fmull
push
arpl
ja
push
cmp
loop
jb
pop
lods
push
repz
add
xchg
outsb
or
xor
lods
ds
or
push
pusha
and
adc
mov
xor
dec
push
cmp
aam
test
aam
test
loop
mov
lcall
cmpsl
call
mov
xlat
rorb
std
jo
sbb
jg
jne
rcrb
add
mov
add
mov
rorl
dec
jb
push
aad
xlat
sti
rcll
add
sub
loopne
hlt
pop
cwtl
mov
pop
mov
dec
mov
xchg
lahf
call
adc
xor
cmpb
ljmp
aam
pop
shlb
jmp
es
cltd
push
idivl
mov
sub
fidivs
mov
enter
imul
or
mov
pusha
shlb
sarb
push
movsl
mov
pop
daa
dec
stos
push
push
jns
push
int3
and
clc
ror
mov
jecxz
mov
loop
adc
sbb
cli
pop
lea
push
jmp
js
aaa
push
aad
stos
adc
sbb
fmul
out
iret
mov
cs
mov
inc
jle
pushf
fmulp
iret
bound
and
out
js
movsb
scas
xor
push
add
jns
repnz
pop
outsl
or
jmp
cmc
mov
out
ds
xchg
jae
pop
sub
out
test
stos
jno
fildll
or
cmp
rorl
sbb
sbb
and
mov
or
ja
jle
repnz
rolw
movsl
js
scas
dec
inc
add
pushf
mov
sti
sub
popa
stos
lock
jecxz
cmp
in
dec
rorb
or
clc
int
pop
iret
adc
push
rolb
add
ljmp
in
xchg
sbb
sbb
inc
je
xor
add
push
jl
mov
or
mov
adc
lods
mov
jns
imul
lret
mov
mov
cmp
push
jg
cs
popa
xchg
movsl
das
imul
loop
push
fs
mov
sub
mov
lock
add
rcrl
pushf
notl
sub
test
adc
sahf
lcall
outsl
loop
add
hlt
jae
daa
dec
call
subl
sti
xor
mov
outsb
leave
cmpsl
and
mov
aaa
movsl
cmpl
sub
dec
inc
push
jb
push
push
cmp
jle
sbb
and
into
xchg
sbb
xor
sbb
jae
jno
sub
fisttpll
mov
adc
adc
inc
pop
test
or
jg
repnz
mov
sbb
sahf
push
xor
fimull
in
xorb
jns
jb
fadds
pop
mov
outsb
das
mov
mov
pop
imul
mov
arpl
push
int
shlb
jb
mov
adc
adc
jo
test
std
arpl
push
inc
ss
xor
aaa
insb
fldl
mov
mov
sbbl
or
je
lods
inc
xchg
add
dec
mov
enter
aam
les
mov
mov
int
cld
pushf
loop
loopne
add
pop
clc
jecxz
sbb
sub
subl
clc
orb
lds
pop
fstps
fs
test
sbb
push
out
mov
inc
nop
xor
xor
jl
or
icebp
xor
mov
push
dec
ret
xchg
dec
div
add
cwtl
loop
mov
lcall
adc
sub
push
repnz
sub
xchg
fmul
or
ds
test
out
xlat
inc
in
test
pop
push
mov
mov
lret
aad
sbb
fistps
je
and
fstpt
ja
and
jne
jo
iret
or
movsl
test
hlt
sub
pop
loopne
fstpt
inc
icebp
push
lret
imul
repnz
sti
xor
mov
mov
sub
js
add
and
orb
lret
or
fisubrl
push
inc
dec
jg
nop
scas
test
out
sbb
test
dec
sub
test
lgs
sbb
pop
jbe
mov
inc
js
mov
xchg
and
pop
mov
xorb
sbb
xchg
fsubl
mov
push
mov
and
or
or
jmp
into
cmp
mov
jmp
out
mov
lds
pop
push
insb
inc
mov
add
not
jge
mov
daa
cwtl
mov
adc
xchg
rclb
push
cli
loopne
popf
repz
mov
jecxz
cmp
pop
push
pop
jns
es
and
pushf
mov
sub
cmpb
sub
mov
cwtl
inc
in
sub
bound
repz
mov
cmpsl
in
mov
dec
insl
fildl
negl
push
sub
in
pop
in
test
sub
mov
jnp
stc
out
sti
stos
mov
sub
dec
cmp
xor
and
outsb
sub
jecxz
cmp
popa
lcall
xlat
test
pop
ljmp
fs
add
or
fildll
clc
fisttpl
xchg
inc
xor
inc
jb
cmp
cli
mov
jmp
daa
adc
inc
and
sub
cmc
inc
repz
fisubl
pushf
setbe
fdivl
sbb
lahf
cld
scas
cmp
pop
fs
push
sbbb
js
std
push
mov
jbe
add
push
mov
enter
push
sub
and
fidivrs
jne,pt
in
jb
andl
insb
cmp
repnz
fwait
aam
mov
mov
inc
pop
xor
lret
test
pop
jae
fisubs
pop
fadds
dec
sub
inc
pop
arpl
add
iret
repz
test
lret
inc
aaa
mov
pop
inc
into
pop
scas
pop
rclb
iret
popf
or
adc
lcall
xchg
outsl
xchg
xorb
mov
jae
sub
divb
jbe
add
xor
inc
mov
or
stos
jecxz
and
divb
lahf
jp
fs
mov
inc
cwtl
pop
or
and
jge
pop
mov
add
insb
andb
inc
xor
js
out
xor
imul
pop
mov
dec
pop
in
jp
icebp
js
pop
cmp
xchg
xor
sub
xor
shlb
jmp
jl
pop
imul
das
icebp
rorl
scas
jl
das
mov
cli
add
fidivrl
jecxz
cmp
xchg
push
push
das
adc
scas
mov
out
push
sahf
adc
divb
fwait
sbb
adc
sub
jb
insl
stc
or
or
add
or
repnz
push
orl
out
jmp
xor
jge
adc
pusha
jae
cmp
jle
idivb
xor
jno
jle
shl
mov
xchg
hlt
lret
xor
push
ja
pop
adc
mov
cld
setb
xchg
popa
into
jae
jmp
icebp
push
fcmovbe
addl
pop
and
data16
mov
push
jb
add
dec
mov
inc
sti
xchg
cs
movsl
cmp
xchg
ror
pop
test
mov
jg
fmull
push
lea
mov
sub
dec
sub
inc
das
xchg
xor
sti
jecxz
lods
les
inc
mov
mov
incb
jo
pop
sub
jnp
jl
adc
push
ret
adc
popa
xor
inc
add
out
push
lds
mov
xor
out
push
fisttpll
idiv
arpl
sub
mov
adc
mov
ficompl
and
jo
maxps
adc
int3
add
sub
test
cmp
mov
add
pop
fdivr
shlb
inc
ss
xchg
fstpl
mov
mov
lods
test
daa
mov
das
mov
icebp
int
mov
cmp
jge
adc
mov
pminub
mov
out
cmpsb
sub
lock
jle
loop
mov
es
divb
mov
loop
mov
xor
daa
movsl
or
inc
add
xchg
push
add
and
add
dec
call
pop
dec
clc
push
jbe
pop
sub
daa
data16
jp
cmp
cmp
mov
fsubrs
sbb
sub
ret
jmp
inc
xor
dec
fwait
mov
sub
adc
sub
add
cs
popf
or
cmp
push
in
sub
dec
push
mov
sbb
cld
sbb
ds
je
sub
mov
loop
pop
adc
xchg
cmp
inc
jb
in
lods
xchg
ja
adc
ds
or
divl
out
push
flds
xchg
jo
loop
mov
add
and
imul
aam
sbb
lock
fstpt
mov
xchg
popf
cmp
leave
jle
xor
repz
adc
pop
pop
mov
inc
into
stos
roll
or
push
mov
out
add
push
out
pop
jge
shrb
call
pop
and
cwtl
pop
push
push
pop
sub
mov
movsl
mov
jmp
add
xchg
and
mov
push
lods
das
xchg
in
adcb
cli
add
or
pushf
mov
stos
and
adc
in
jbe
dec
pop
lods
dec
adc
cmp
dec
bound
xchg
xchg
daa
sbb
cmp
xchg
cmp
lods
or
jge
iret
add
outsb
push
aam
rcll
test
sbb
dec
loopne
push
je
dec
dec
jge
jl
cwtl
push
adc
stos
jl
cmp
sub
xchg
xorb
and
stc
push
repnz
push
or
hlt
or
xor
xchg
mov
clc
or
cmpsl
and
xor
pop
jge
pop
or
gs
xchg
push
in
into
fucomi
xchg
int3
sbb
stos
mov
adcl
pop
loope
push
dec
out
xchg
jmp
out
xchg
xchg
addr16
add
cld
or
adc
or
mov
xchg
nop
out
push
and
dec
stos
call
jecxz
sti
and
push
or
lods
add
sti
int
movsl
scas
pop
pusha
dec
test
les
psadbw
xor
or
mov
cwtl
jecxz
push
sti
ss
pushf
test
push
push
in
and
pshufw
inc
out
mov
cmp
and
in
xchg
push
in
punpckhdq
fs
jnp
cmpsl
jge
pusha
lret
rcrb
lcall
out
cmp
pop
inc
or
mov
arpl
jno
sub
int
mov
xchg
inc
jae
clc
adc
add
or
enter
aas
ja
xchg
test
cmp
adc
imul
and
or
add
mov
cmp
and
repnz
sbb
les
sbb
mov
mov
sub
push
jne
cmpsl
movsb
jge
adc
fists
mov
cmpsb
xor
addr16
inc
jl
add
dec
jo
jae
scas
pushf
xchg
mov
hlt
cmp
inc
push
xchg
or
aas
cmp
jmp
les
jo
cmp
adc
daa
scas
mov
cmpsl
aad
stos
in
adc
aad
imul
sub
pop
pop
fcompl
mov
incb
push
pop
inc
jnp
lock
mov
pusha
lcall
add
icebp
jb
xchg
je
stc
aas
xor
mov
icebp
sub
inc
daa
fidivrs
je
adc
int
mov
dec
cmpsb
dec
jl
sti
jbe
pop
jp
adc
mov
xor
jp
and
pop
pop
clc
pop
pop
in
mov
mov
pop
lcall
scas
jo
sti
sub
sub
xchg
xchg
arpl
push
or
adc
or
out
popa
popa
sub
cli
sbb
inc
mov
stos
pop
std
pop
xor
pop
in
pop
jmp
jle
pop
in
bound
std
push
dec
mov
dec
or
enter
lock
rorl
notl
fistl
lret
push
inc
sub
dec
in
sub
and
cmp
shrb
xor
mov
sub
adc
jp
mov
xor
xchg
sahf
dec
js
cmp
pop
inc
movl
imul
xor
div
or
xor
stos
ljmp
cwtl
data16
and
mov
es
aaa
jb
push
addr16
cli
and
pop
enter
add
loop
shr
jo
and
fwait
cmp
xchg
jno
pop
stc
add
dec
sbb
cmp
lahf
movsl
out
push
test
dec
sub
cmp
aam
add
sub
sldt
insl
cld
pop
fisttps
fisttpll
ret
cmp
inc
jmp
stos
ror
shrl
bound
mov
outsl
and
std
aad
stos
pushf
iret
insl
pushf
xor
mov
mov
dec
test
mov
test
dec
roll
mov
or
mov
sbb
aam
hlt
inc
fs
and
hlt
test
sbb
shll
insb
and
aas
cmp
lcall
insl
mov
bound
insb
dec
pop
in
push
pop
hlt
lods
nop
test
in
push
loopne
fwait
mov
pop
adc
data16
adc
hlt
push
inc
sub
mov
loop
hlt
lahf
xchg
adc
pop
sub
movb
rclb
test
leave
xchg
imulb
cltd
sub
pop
sub
mov
push
push
sub
lcall
scas
outsl
stos
push
ljmp
or
out
lahf
out
cmp
fidivrs
inc
lcall
or
ss
aad
adc
jbe
sti
xor
lcall
jp
imul
jp
push
in
add
or
sbb
insl
mov
add
pusha
inc
jl
lea
push
pop
fs
xor
in
mov
dec
mov
shl
cmp
fs
data16
mov
or
fbstp
ljmp
mov
mov
call
cs
add
nop
test
inc
mov
fdivl
lea
addr16
xor
arpl
cmpl
sub
push
mov
adc
stc
adc
mov
sub
dec
mov
add
cmp
mov
and
mov
pop
loope
push
sbb
mov
inc
pop
out
in
jbe
jmp
repnz
js
ss
call
int
je
inc
call
pop
add
cld
inc
in
cmpb
fstpt
and
scas
xlat
xchg
sbb
cmp
or
jo
cmp
leave
mov
dec
xchg
lcall
jmp
dec
lods
enter
or
fcoms
scas
in
jmp
ret
adc
pop
sbb
out
daa
push
inc
push
pop
mov
mov
pop
xchg
cmc
movsl
cmp
xchg
sub
icebp
out
std
jne
sbb
ljmp
xchg
cmp
and
cltd
pop
sub
xchg
dec
xor
push
add
add
cmc
xchg
sahf
cmc
sbb
sub
sbb
adcl
leave
sbb
inc
cld
and
mov
and
push
ret
adc
adc
jmp
ds
add
sbb
push
stos
mov
add
xchg
inc
ljmp
out
cmp
test
jnp
cmpl
jl
lea
pop
gs
pushl
dec
es
bound
loop
mov
mov
and
pop
in
xchg
fsts
sbb
adc
imul
inc
aad
sarl
dec
dec
push
jp
xor
jne
add
sbb
jmp
divl
sub
movsl
divb
lret
les
sti
sub
pop
sbb
iret
pop
in
mov
cmp
imul
xor
xchg
add
hlt
enter
aam
sbb
mov
faddl
sbbb
xorl
push
push
or
cmp
pop
inc
and
mov
xchg
xor
vaddss
add
mov
outsl
ds
movsb
aam
adcb
dec
xchg
sbb
push
dec
ret
or
mov
xchg
clc
jo
int3
lahf
fadds
in
mov
lcall
pushf
arpl
les
out
xor
rcrl
out
mov
xchg
jp
loop
jno
rcrb
cmp
pop
inc
iret
and
adc
pop
scas
jg
das
lods
jo
inc
sbb
pop
push
jnp
xchg
push
sub
sbb
push
loope
add
mov
mov
lret
insb
test
test
arpl
pusha
mov
mov
outsl
inc
hlt
aas
mov
cmpsl
fstps
jg
pop
push
shr
out
pop
sbb
sbb
and
jl
inc
test
xor
mov
xor
inc
inc
jne
pop
fs
xchg
cld
in
aaa
push
sbb
cmovb
push
aad
sbb
scas
or
sbb
repnz
jle
jb
pop
icebp
ljmp
ljmp
mov
repz
fcmove
cmp
std
cmpsb
mov
jp
pop
sbb
rcl
adc
xor
jno
shlb
fsubs
shll
xorl
outsb
mov
inc
arpl
mov
sahf
mov
repz
int
xchg
sub
or
dec
mov
cmpsl
inc
jns
pop
dec
aaa
arpl
sub
inc
jnp
lock
fstps
xor
inc
inc
es
mov
sbb
inc
lods
lret
push
jmp
cmp
adc
sub
pop
mov
dec
jns
pop
pushf
sbb
xor
xor
mov
sbb
aaa
push
lret
sbb
add
jnp
jo
dec
out
dec
push
jne
aam
jbe
cmp
dec
andb
stos
arpl
jbe
mov
pop
enter
or
arpl
cmp
int
pop
cwtl
ds
jl
dec
jbe,pt
mov
stos
add
mov
fwait
or
mov
xchg
pop
cmpsb
addr16
jmp
pop
ficompl
mov
into
aaa
sbbb
pop
adc
bound
lods
aaa
add
dec
ret
sahf
push
mov
std
cmpsl
pop
sub
nopl
das
mov
mov
sbb
ss
xor
adc
cmpsb
lods
lret
xor
add
sbb
and
popa
adcl
jle
mov
adc
movsb
jns
data16
aaa
jmp
stos
int3
xchg
xor
xchg
test
push
sbb
int
test
orl
xor
mov
and
int
outsb
arpl
insl
cli
lods
dec
mov
dec
movsb
or
into
sbb
fcoml
ja
les
dec
iret
dec
jns
mov
stos
cmp
leave
sub
lods
and
fisubl
int3
or
cmp
pop
dec
sbb
mov
sbb
xor
clc
in
test
mov
mov
int
scas
adc
xchg
int3
sub
out
sbb
clc
aaa
lods
cltd
fsubp
adcl
fwait
xor
sub
sbb
sarb
cmp
inc
cmp
cltd
sub
xchg
aaa
xor
xchg
ja
push
dec
mov
inc
xor
aaa
sbb
or
ret
fldl
testb
adcl
outsl
scas
jmp
mov
cmp
push
pop
syscall
pop
insl
push
xchg
mov
add
dec
ret
cmp
sahf
cmpsb
sahf
pop
jg
sbb
mov
xchg
fistl
out
add
sarb
scas
push
jno
arpl
dec
jae
sbb
negl
cmp
out
cltd
inc
cmp
mov
add
out
mov
in
mov
ss
mov
mov
mov
int
ret
xor
fdivs
xor
mov
inc
jns
mov
enter
lock
stc
scas
or
cld
xchg
cvttps2pi
call
adc
mov
mov
outsl
pop
and
sbb
xchg
or
sbb
fidivrl
cltd
inc
inc
leave
pop
dec
and
adc
in
pop
mov
addl
and
notl
pop
sbb
aaa
pushf
sbb
subb
sub
nop
inc
popa
andl
sub
dec
sahf
scas
lods
sbb
lods
out
dec
adc
push
mov
push
sub
mov
cld
mov
jge
mov
sub
aaa
ret
into
push
addl
hlt
mov
pop
out
mov
push
mov
xchg
pop
das
push
cmp
sub
xor
mov
lahf
mov
and
ljmp
cmpsb
lods
push
inc
adc
cmpl
xor
jmp
dec
pop
mov
add
pop
pop
test
in
and
in
loopne
xlat
dec
btc
mov
inc
addl
mov
jmp
jo
dec
fwait
sub
cs
inc
sbb
rcr
mov
aad
and
xchg
lock
pop
je
sbb
lret
incl
sbb
dec
les
shrb
jb
out
inc
pop
xorb
mov
cmpsl
inc
test
ret
dec
or
xor
icebp
enter
test
nop
dec
mov
jns
xchg
mov
and
popf
int
lcall
cmc
es
lods
jmp
mov
mov
ret
insb
or
shlb
mov
rclb
xchg
ret
mov
scas
out
das
sub
lret
fisubs
xchg
jae
sbb
div
xlat
test
outsb
stc
pop
fs
cli
in
cmc
fidivrs
pop
mov
lcall
mov
repnz
or
lret
pop
les
lock
mov
iret
pop
cmp
cmp
and
add
lock
loopne
xor
jno
enter
pop
sub
cmpsl
outsb
and
pop
mov
flds
mov
mov
lods
mov
adc
or
in
push
jmp
out
push
gs
push
scas
dec
je
mov
and
hlt
sbb
jg
in
mov
popf
sub
pop
fidivl
notl
mov
push
pusha
nop
mov
sub
adc
lea
sbb
push
jne
gs
pop
std
inc
inc
adc
mov
push
fst
or
or
sbb
adc
pop
fbstp
imul
mov
decl
and
xor
addr16
adc
mov
cli
push
pop
fsubl
das
add
or
out
push
mov
fdivrs
inc
repnz
rol
aaa
inc
addr16
mov
icebp
cmpsl
adc
mov
add
fstpt
das
mov
cltd
pop
test
jle
add
cmp
pusha
jge
popf
adc
outsl
cld
dec
cmp
or
sahf
push
inc
or
jns
and
cmp
andb
iret
cwtl
leave
xchg
es
mov
push
cmp
jg
stos
mov
daa
lods
cs
mov
dec
rcll
lret
and
push
jns
sub
cmp
sub
movsl
adc
hlt
sahf
xchg
push
sub
mov
lods
out
bound
xor
lods
mov
sbb
dec
pop
insb
or
xlat
mov
xchg
ss
cs
mov
mov
icebp
mov
sub
or
and
pop
hlt
je
rorb
jge
sub
mov
fdivrl
lds
jnp
push
loopne
push
adc
inc
lods
lcall
sarl
dec
cmp
push
or
or
push
jmp
sbb
stos
dec
adc
imul
jbe
dec
sahf
and
sbb
in
fs
xor
push
xchg
cmpsl
dec
jno
test
cmpsl
and
jg
sbb
testl
xchg
mov
or
jmp
mov
fwait
add
jmp
pop
mov
aas
je
pop
loopne
lock
ds
xchg
leave
in
imul
fildll
ljmp
das
xchg
xor
mov
icebp
sbb
mov
int
lcall
dec
adcb
dec
pop
mov
mov
adc
sub
push
jle
xor
sti
adc
ror
mov
cmp
sub
mov
jae
push
xchg
pop
add
incl
add
xchg
in
xlat
dec
pusha
aam
xchg
int3
addb
cltd
shrl
xchg
sub
pop
shlb
dec
bound
shlb
sarl
mov
mov
jno
pop
leave
push
std
out
or
add
adcl
mov
mov
loope
lret
sbb
and
mov
add
data16
xor
mov
outsl
je
push
or
iret
push
jno
testb
fcomp
xorb
pushf
jp
add
add
fdivs
sbb
xchg
jns
test
inc
ja
adc
out
add
imul
div
cmp
ja
cld
or
scas
and
not
mov
addr16
push
mov
adc
xchg
mov
inc
icebp
pop
jbe
clc
pop
in
pop
stos
fldl
pop
and
negl
cmp
test
mov
xchg
and
pop
pop
xchg
loop
aas
lods
xchg
rcr
cld
clc
mull
ret
enter
aad
rclb
imul
test
stos
push
iret
loop
bsr
call
xchg
ret
push
fucom
xlat
in
in
fildl
and
sub
dec
pop
mov
lea
pushl
rep
pop
fsts
jp
jmp
pop
adcl
inc
fs
in
xor
push
xchg
dec
orb
push
mov
add
fisubrl
enter
dec
cs
cmp
jg
inc
sub
arpl
inc
sti
push
fmulp
mov
adcb
iret
les
jecxz
cld
mov
jne
ss
dec
mov
fs
pop
push
testl
adcb
mov
mov
pop
xchg
xchg
mov
push
or
jp
jnp
cmc
jae
lret
sbb
inc
out
pop
mov
cltd
mov
sub
sbb
push
or
push
cli
push
in
mov
test
in
int3
fsubrs
cmp
ljmp
test
xchg
in
inc
mov
sub
fdivp
dec
ja
rcl
mov
stos
lods
cmpsl
push
cmp
adc
sbb
cmp
scas
fnstsw
add
add
roll
out
outsb
mov
sub
sbb
adc
iret
aad
ja
and
pop
je
cli
jb
mov
push
int
sub
int
push
jno
lahf
pop
mov
test
inc
jne
sbb
inc
or
sbb
les
jnp
scas
ret
cld
dec
mov
cmp
pop
and
jecxz
gs
jmp
mov
nop
jp
test
jbe
pop
xchg
fbstp
add
out
dec
popw
xchg
cmp
sarl
mov
nop
cli
push
dec
dec
icebp
cmp
sarb
mov
pop
mov
into
shll
lahf
xchg
imul
movsb
icebp
imul
jo
push
adcl
repz
mov
mov
in
jmp
fwait
je
dec
add
or
lock
adc
inc
inc
lods
pop
xlat
xchg
and
imul
jmp
jbe
push
mov
icebp
sub
xchg
xchg
mov
dec
shll
adc
das
xorl
dec
mov
mov
lock
xchg
add
or
push
out
push
ror
mov
jle
cwtl
jl
mov
andnps
pushf
adc
adc
int
jae
in
cli
jp
in
jmp
dec
test
cs
scas
or
dec
push
orl
test
jns
push
xchg
pusha
pop
xor
jle
adc
inc
adc
dec
jmp
hlt
int3
stc
mov
loopne
ret
gs
je
nop
das
and
add
stos
and
xchg
jo
pop
les
inc
fs
jg
aaa
lahf
cwtl
push
ss
insb
stos
sub
push
adc
sub
test
inc
jle
stos
testb
push
push
jp
inc
sbb
enter
das
lret
imul
push
and
push
out
pop
cwtl
loope
stos
jae
test
and
pop
cmpsl
stos
sub
mov
push
push
test
sbb
daa
stos
cwtl
lock
mov
dec
stc
lret
cli
or
jbe
movsl
push
inc
fwait
mov
ja
loopne
or
pusha
lcall
clc
aam
loop
xor
push
dec
and
adc
frstor
adc
iret
dec
xor
hlt
xorl
pop
adc
mov
dec
jne
aad
jnp
push
and
xchg
hlt
aad
xor
pop
call
outsl
cmc
xlat
outsl
mov
push
bound
inc
fwait
xchg
ljmp
cmp
xorb
mov
sbb
cmp
aaa
mov
and
mov
fbld
bound
xor
cs
push
and
jbe
xor
sahf
push
xor
inc
movb
mov
lds
out
ret
or
xor
pop
outsl
sub
notl
cmp
or
into
iret
or
inc
divl
popa
aad
sahf
iret
and
cmp
or
rolb
sbb
dec
cmp
mov
nop
arpl
pop
push
xor
in
stc
or
pop
or
pop
out
outsb
fcmovu
push
push
or
or
dec
pushf
xchg
lods
pusha
sbb
cli
sbb
pop
arpl
in
rcrl
in
rcll
jne
mov
sbb
push
scas
mov
test
xor
and
stos
xchg
lahf
mov
outsl
sbb
and
xor
xor
sbb
jp
xchg
xor
aam
out
arpl
in
dec
cmc
decb
out
int3
jae
push
mov
pop
mov
dec
icebp
and
stos
sub
arpl
jns
sahf
imul
and
icebp
xor
lods
cmp
mov
test
mov
pop
ja
xor
dec
dec
pop
pop
inc
add
nop
subl
mov
shlb
shrb
mov
adc
jg
cli
scas
inc
adc
cmp
push
shll
andl
jbe
int3
pushf
cmpb
pushf
andb
inc
aaa
into
add
inc
jo
nop
daa
lods
sbb
and
xor
push
mov
or
push
xchg
pmulhrw
push
jmp
pusha
int3
jp
dec
fdivr
jns
ds
fs
push
fimuls
test
pop
cld
sti
xor
xor
mov
out
mov
and
jns
data16
gs
mov
ljmp
cmpsl
and
pop
push
js
pop
das
sub
fistl
andl
or
jns
cmp
add
inc
jg
fsub
pushf
nop
orl
repz
push
jge
mov
inc
leave
push
test
cs
pop
pop
adcl
pop
pushf
sub
xchg
jp
ja
and
push
cmc
and
aas
and
lret
movl
int3
dec
int3
pop
push
mulb
jae
cmp
pop
dec
mov
lahf
cs
int3
popa
and
mov
xor
insb
shlb
ret
fimull
xchg
cld
cmp
bound
pop
push
pusha
cmp
cwtl
inc
xchg
push
popaw
das
mov
and
sub
cmpsb
push
bound
xchg
mov
or
pusha
faddl
mov
pop
xor
xchg
lea
pop
xlat
dec
ljmp
mov
mov
and
or
mov
mov
and
mov
mov
lds
and
xchg
iret
or
cwtl
cli
fyl2xp1
add
mov
adc
sahf
mov
int
pop
iret
xor
lret
dec
ss
mov
dec
inc
je
les
in
leave
dec
push
insl
add
jbe
mov
pop
ja
adc
inc
lock
int3
gs
mov
dec
sbb
icebp
imul
pop
fistpll
ret
jmp
iret
add
enter
sub
ljmp
sbb
cs
arpl
xchg
sbb
or
nop
xor
dec
add
scas
mov
push
pop
fcom
es
push
and
sub
cmpsl
add
sahf
call
loop
roll
lds
jmp
icebp
sub
hlt
lret
xor
and
movsl
dec
cmpsb
pop
pusha
test
xchg
or
or
pop
outsb
fsubs
popf
outsb
dec
movsl
ja
mov
fs
fsubs
jae
psllq
fs
std
add
sub
inc
notb
xchg
xchg
mov
es
in
add
sti
or
pop
insb
push
hlt
inc
jmp
enter
in
and
popa
mov
push
mov
xor
lods
addr16
cmp
mov
xchg
mov
xchg
and
and
add
cmp
sub
scas
mov
test
int
mov
push
inc
dec
mov
adc
push
cld
sbb
pop
jmp
mov
push
js
cmp
sbb
int3
rcrb
ljmp
popl
xchg
cmp
popf
mov
xor
rorl
ficoml
pop
stos
cmp
divb
insb
dec
shlb
or
adc
addr16
and
cmp
test
sbb
test
jnp
push
push
insl
stc
cmpsl
popf
cmc
inc
movb
repnz
push
pop
xchg
stos
sub
adc
bound
jl
sarl
ficomps
sub
iret
iret
sbb
xchg
or
mov
mov
fcomps
mov
repnz
adc
movsl
cmp
push
add
fstps
imul
xchg
lcall
repz
pop
test
stos
and
lea
inc
jbe
adc
mov
dec
push
shll
add
insl
xchg
adc
out
sub
adc
sti
jne
rep
test
mov
lcall
hlt
jae
add
mov
aad
mov
insl
push
cwtl
push
cmp
sub
fmuls
mov
sbb
mov
shrl
aad
xchg
repnz
jp
xchg
imulb
sarb
adc
pusha
sbb
dec
bound
and
xchg
jo
pusha
adc
mov
bound
and
inc
xorb
nop
sahf
jmp
mov
fidivrs
adc
push
sub
or
out
out
dec
fcom
sbb
inc
movb
dec
sti
add
fisttpll
sub
pop
fsubrp
int
inc
mov
in
mov
or
outsl
fiaddl
aad
cmp
gs
shl
scas
mov
dec
cmpsl
pop
cld
jg
ret
sub
or
lcall
add
adc
and
sbb
mov
xorl
adc
test
fdivs
aad
inc
stos
popa
lahf
lcall
jns
repnz
out
stc
cmp
and
sbb
ja
mov
imul
je
mov
lods
rcrl
sub
sarb
mov
sbb
in
jl
in
sbb
cli
jp
xchg
push
sbb
adc
sbb
outsb
lcall
cmp
inc
mov
dec
inc
repz
pop
dec
inc
sti
pop
push
mov
and
xchg
in
arpl
and
loopne
data16
mov
jb
out
mov
mov
push
jbe
in
push
cmp
mov
jp
in
out
cmp
std
mov
mov
imul
cmpsl
hlt
cmp
adc
enter
mov
push
scas
sbb
jmp
sbb
bnd
xor
add
ret
xchg
and
fnstenv
jecxz
js
cmpsl
adc
dec
sahf
stos
mov
mov
stos
add
or
dec
pop
movsl
fidivl
test
mov
push
fdivrs
fcomp
aad
addr16
inc
sub
insl
jae
fsubs
xchg
cmc
xchg
and
dec
push
push
sbb
pop
ljmp
cs
sbb
or
loopne
js
outsb
fninit
mul
mov
mov
test
mov
imul
push
add
fdivr
jle
push
jge
js
retw
fs
mov
jnp
mov
add
mov
pop
jnp
and
dec
push
jne
loope
call
movb
rcll
call
les
ret
lea
cmc
mov
lds
int3
dec
fadds
pop
pop
fwait
adc
pop
lods
dec
cmp
cmp
frstor
push
mov
and
aad
pop
dec
sbb
jecxz
insb
cs
push
shrb
in
or
inc
inc
lods
scas
inc
inc
rorl
push
sub
pop
cwtl
into
arpl
popl
inc
rcr
js
pop
fisubrs
outsb
jle
or
mov
outsb
int3
scas
iret
fs
jo
sub
in
ret
mov
incl
in
xchg
fldenv
adc
push
sbbl
ret
jo
fldcw
cli
jecxz
sbbb
xchg
pop
xchg
and
lea
fcomip
jno
mov
cmpxchg
cmp
ret
sbb
in
add
repnz
lahf
and
adc
cmpsw
stos
add
jp
jne
push
push
mov
fimuls
popf
fildl
ljmp
fwait
scas
data16
pop
or
pop
or
push
dec
movsb
mov
std
push
xchg
inc
pop
adc
xor
sti
repz
xchg
jae
mov
inc
nop
ret
sub
pop
cmpb
pop
outsb
pop
out
jne
cltd
popf
sbb
cmp
adc
pop
or
jge
push
out
sbb
rcll
and
push
idivb
cmpsl
jo
adc
sbb
mov
cld
je
lods
fcoms
ja
jb
inc
outsl
nop
ss
pop
dec
xor
xor
movsl
scas
jnp
mov
in
pop
cmpsl
mov
dec
repz
and
lods
fsubrl
mov
jge
mov
and
lds
aad
arpl
cmp
inc
les
mov
shl
jg
add
out
dec
fwait
outsl
or
or
ficompl
dec
cltd
das
pop
push
stc
pop
out
fisubs
sub
pop
leave
rorb
ss
xchg
mov
jo
and
push
mov
jo
mov
in
data16
or
sub
in
xchg
pop
pop
mov
push
or
dec
aad
sub
cmp
dec
arpl
cmpsl
mov
loopne
pop
mov
dec
call
sub
fcoml
loopne
cmp
adc
pop
fstp
inc
pop
mov
mov
cmc
mov
aaa
sub
xor
pop
pop
lods
xor
lret
movsb
push
mov
daa
verr
pop
adc
pop
std
or
jo
dec
push
cmc
addb
rorb
rclb
add
mov
adc
dec
inc
imul
cld
push
inc
in
popf
cld
nop
cmpb
int
cmpsl
xchg
jne
adc
xchg
pop
fstpt
pop
gs
jmp
add
imul
pop
cmpsb
gs
stos
inc
jl
mov
sahf
aam
adc
mov
movsl
mov
inc
cltd
rorl
push
jbe
clc
cmpsl
mov
iret
fld
cmc
and
scas
push
nop
lret
shll
loopne
sbb
sbb
pop
dec
and
or
sbb
pop
aad
xchg
or
sub
xlat
dec
jecxz
inc
pop
js
mov
ja
jns
ret
movsb
push
cli
aaa
mov
cwtl
fimull
xor
out
cwtl
repz
push
dec
inc
cmp
data16
sub
test
mov
or
fs
and
sahf
xorb
or
sar
mov
jmp
add
cld
into
aaa
mov
divl
out
out
std
shlb
fisubrl
pop
fwait
or
jmp
popa
in
arpl
mov
adc
cmpl
es
call
sbbl
leave
popf
mov
rorb
mov
out
lea
push
add
xchg
and
xchg
test
add
add
xchg
mov
add
push
jbe
mov
jl
push
lods
adcl
add
outsl
out
sbb
addl
cmpsb
mov
and
adc
pop
pop
and
ret
inc
and
xor
jp
or
mov
adcb
in
ds
imulb
push
cli
dec
push
scas
mov
xor
lcall
lret
jle
xor
andl
mov
cmp
inc
mov
sahf
pop
test
mov
aad
and
mov
lods
and
lcall
jae
iret
xchg
dec
iret
sahf
adc
lret
jl
and
xchg
popa
enter
insb
dec
stos
mov
push
xor
and
mov
and
das
out
push
mov
cmpsb
dec
mov
inc
mov
push
testb
sahf
hlt
mov
pushf
adc
xchg
into
cld
add
enter
lea
inc
inc
and
sbb
loop
cmp
xchg
mov
add
jnp
shlb
and
aad
in
cli
lret
inc
xlat
dec
mov
jp
repz
inc
psrlq
insl
cmp
mov
adc
test
lahf
loope
int
lret
orb
push
test
rol
pop
popf
push
pop
mov
adc
and
bound
test
pop
imulb
sbb
test
lock
sub
jbe
cmpsl
or
enter
and
pop
hlt
xchg
and
cmp
inc
leave
ret
stos
sti
repnz
push
in
dec
inc
mov
cwtl
pop
push
test
fcomp
pop
stc
jns
mov
bound
push
setns
push
and
sbb
clc
dec
dec
pop
in
out
fidivs
popf
test
inc
jb
jno
out
sbb
int3
dec
or
xchg
and
mov
icebp
sub
sub
mov
fcompl
out
jb
movsl
int3
pushf
sbb
sub
and
rcr
or
mov
mov
loop
xchg
push
mov
add
cmp
add
sbb
xor
mov
imul
lock
xlat
add
outsl
cmp
rcl
decb
and
inc
decl
pop
or
xchg
in
push
fs
jp
and
jge
inc
sbb
mov
mov
xchg
popa
jno
xchg
ljmp
in
in
fidivl
jb
add
or
dec
xor
sub
xchg
loopne
adc
jecxz
js
cs
jp
out
mov
ljmp
stc
xchg
inc
inc
loopne
sbb
imul
and
xor
icebp
adc
or
fdivrs
lcall
jbe
sbb
arpl
push
or
and
insl
test
andl
adc
push
mov
popa
das
adc
imul
scas
cmp
fwait
rcrl
rcr
scas
xchg
mov
mov
clc
sbb
mov
xchg
leave
cs
mov
add
cmc
sti
add
popa
rcrl
les
leave
cmp
pop
lret
sub
jp
cli
into
sub
ss
cmpsl
cmpsb
fisubs
inc
mov
inc
cmp
lret
jg
repnz
ds
pusha
repz
adc
push
xor
ja
lret
andl
int
cmpsl
sbb
adc
or
dec
sub
mov
mov
mov
movsl
dec
loopne
push
cmp
jae
jecxz
out
lock
fwait
add
push
outsl
and
test
sbb
lahf
ret
femms
push
pop
scas
fisubrs
movsb
cli
ret
jle
mov
jecxz
stos
dec
insl
adc
scas
mov
pop
xor
mov
sbb
out
cmp
fcmovnbe
es
stos
pusha
fbld
fwait
inc
ljmp
mov
cmp
or
aas
jne
jg
mov
push
sub
lcall
pop
outsl
dec
jge
cmp
int
cmpsl
rcll
sub
addr16
fisubrl
jle
mov
stos
pop
xchg
push
cmc
xchg
dec
mov
sub
mov
jle
in
xor
sbb
test
mov
arpl
add
dec
mov
sti
lret
jae
sub
mov
xchg
jle
jge
or
pop
cli
xor
dec
pop
into
movsb
negb
aam
jne
sbb
sbb
xchg
push
fisubrl
aam
inc
test
test
push
mov
sbb
jns
test
popa
int
jb
outsl
mov
pop
cwtl
shll
fistps
mov
xchg
mov
pop
dec
mov
xor
in
in
mov
movsl
in
cmp
mov
addb
jo
pop
in
shrl
inc
iret
sbb
jb
cltd
lds
ret
jge
out
shlb
inc
nop
cwtl
ret
mov
cmc
inc
fstps
aas
mov
lcall
in
lds
leave
lds
cmp
test
daa
mov
push
orl
lods
fs
repz
add
mov
push
test
adc
jle
mov
xchg
jmp
push
pushf
and
setbe
lds
jle
cmp
shll
push
aas
mov
mov
inc
and
popf
add
out
cwtl
xor
push
mov
insl
mov
inc
jg
mov
subl
addr16
jo
decl
cmpsb
test
jmp
mov
jo
push
das
sar
hlt
cmp
push
push
es
pop
mov
dec
neg
aas
in
sbb
mulb
outsl
xor
outsb
sarl
mov
es
sbb
rorl
sbb
mov
jmp
xchg
xchg
push
dec
adc
imul
cmp
jbe
push
sub
inc
push
jp
dec
imul
xor
dec
decb
jle
adc
jge,pt
mov
stos
cmp
mov
aam
je
scas
cmp
loopne
cmp
testl
imul
dec
cs
push
pop
and
pop
lods
jg
mov
and
cli
nop
pop
mov
lret
ret
pushf
pop
movsl
cmpsl
in
jl
and
test
repz
out
sbb
aaa
jmp
stos
sub
mov
mov
aam
and
in
sub
aaa
xor
fs
inc
lret
fildll
mov
ljmp
out
divl
inc
insb
mov
mov
xchg
add
push
cmp
out
in
fiaddl
in
in
pusha
ja
dec
stos
cwtl
mov
movsb
sti
or
add
sub
popf
pop
sub
enter
repnz
xor
jae
inc
test
xor
mov
stc
push
ljmp
mov
xor
add
add
ret
jmp
inc
push
cmc
clc
mov
jp
pop
mov
or
or
inc
dec
sar
push
pop
out
xchg
or
ja
sbb
shll
mov
stc
xor
xchg
dec
mov
mov
sub
int
stc
and
int3
xor
les
popa
mov
lds
ret
in
mov
fidivl
mov
xor
je
es
jo
add
out
push
add
add
repz
xor
insb
mov
jno
cmc
fucom
adc
jmp
cld
adc
sub
xor
xor
fldl
jge
adc
cmc
ficoml
jo
enter
lea
lods
popf
fldcw
lods
loopne
dec
adc
lret
call
leave
cli
push
lds
pop
cmp
sahf
flds
xchg
fcmovnu
lods
dec
mulb
or
jns
cli
shll
jp
xchg
imul
sub
sub
orl
sbb
mov
dec
jmp
fwait
loope
bound
pop
push
sub
push
in
js
test
jo
pop
mov
call
loope
cmp
jge
sbb
jae
mov
mov
das
repnz
push
xchg
dec
cmc
sbb
imul
mov
fwait
call
xchg
xor
xor
out
pop
sub
xor
mov
mov
loopne
xor
cmp
and
pop
hlt
lea
daa
test
push
jl
arpl
jle
repz
pop
push
mov
nop
sub
sub
sub
sbb
xchg
inc
pop
jb
imul
adc
mov
jne
mov
xchg
js
les
ret
add
out
dec
cld
xor
jne
fcmovbe
inc
shlb
aaa
pop
jecxz
pop
sti
pop
cmp
enter
js
cmpsb
mov
inc
pop
pop
mov
cmp
roll
popf
sbb
or
add
xchg
pop
lds
xchg
pop
movsl
loop
out
scas
frstor
xor
in
jmp
mov
fstl
pop
lret
sbb
jae
insl
sti
xlat
pushf
pop
in
inc
xchg
mov
rcrb
lock
out
cmpsl
mov
into
pushf
leave
out
insb
pop
rorb
rorl
sbbb
xor
sahf
inc
xchg
test
dec
cwtl
scas
subb
pop
pop
stos
or
popl
or
leave
shll
push
pusha
pop
fcompl
jge
popa
or
out
mov
add
sub
mov
cltd
push
inc
or
mov
sbb
in
popa
std
or
cmp
imul
jl
pop
repz
cmpsb
fisubrl
and
fildl
or
xchg
pop
scas
testb
lahf
ljmp
inc
inc
gs
fcoms
pusha
sbb
sti
mov
sbb
bound
rcll
test
push
xor
and
and
mov
lds
and
inc
pop
into
insl
ja
xchg
sbb
cmpsb
lds
loop
xor
cmpsl
fadds
not
mov
sarl
out
inc
notl
shlb
into
mov
mov
add
sbb
and
jp
imul
dec
pop
add
cmp
adc
mov
xor
mov
loop
xchg
arpl
es
adc
testl
clc
stc
jns
push
mov
push
xchg
fs
jg
or
cwtl
pop
sub
scas
mov
jmp
mov
scas
or
push
addr16
cmp
jecxz
mov
out
lret
push
and
mov
sti
clc
lods
sbb
mov
sub
lcall
and
clc
es
jl
fldenv
stos
scas
sbb
cmc
jmp
inc
std
and
and
sub
dec
jmp
cli
out
or
pop
dec
mov
in
xchg
add
movsl
rorb
mov
dec
dec
xchg
adc
stos
mov
push
dec
push
mov
adc
jae
pop
gs
or
je
cmp
or
cmp
and
and
daa
sbb
add
cld
and
scas
sarl
insb
repnz
jmp
push
repz
xor
mov
cli
in
and
cli
xor
adc
jecxz
or
mov
hlt
frstor
out
adc
fwait
push
sub
mov
push
pop
push
daa
mov
outsl
or
sub
lods
push
push
or
imul
jnp
mov
pop
js
push
mov
adc
stos
xor
inc
arpl
jno
lds
cmp
mov
push
or
mov
out
pop
outsb
aad
adc
jae
inc
xchg
lock
jnp
cli
sub
sbb
mov
cli
cmc
in
imul
xchg
lcall
out
les
mov
decl
and
push
pop
icebp
pusha
test
cwtl
mov
dec
out
js
jne
mov
push
push
sbb
pop
rcrb
loopne
sbb
cmp
je
incb
mov
in
arpl
mov
scas
pop
mov
cmp
lock
adc
ja
xor
push
aas
insb
lods
mov
mov
cwtl
pop
and
mov
sbb
fwait
pop
repz
fwait
jp
inc
or
xchg
add
mov
inc
enter
or
mov
push
loop
mov
xchg
jecxz
dec
scas
mov
imul
sbb
jmp
in
psubd
pusha
les
ret
lods
pop
sub
dec
movsl
pop
pop
icebp
mov
jmp
shll
fldcw
rcll
hlt
push
pop
dec
addr16
ljmp
cs
xchg
push
pop
cmpsl
dec
sbb
cmp
clc
ficoml
and
movsl
cmp
fbstp
adc
add
sub
or
mov
sbb
and
fdivrp
cmp
into
push
sbb
fs
ss
push
ljmp
xor
and
leave
pop
addr16
mov
add
testl
in
push
das
sbb
sti
xchg
push
mov
das
out
repnz
sbb
fsubs
mov
ror
inc
bound
scas
lret
mov
add
loop
insl
cmp
and
push
pop
or
test
testl
jge
ds
xlat
push
mov
notb
cmp
jnp
sbb
aam
fldcw
mov
sbb
push
pop
ret
dec
or
add
std
xor
push
sbbb
pop
stos
aaa
and
sahf
dec
add
jnp
cmpsb
sbb
mulb
andb
jp
push
cld
add
cmpb
inc
and
popa
lret
insb
mov
mov
fisttpll
xor
cmp
add
hlt
mov
push
and
jns
xlat
sbb
push
pop
mov
or
arpl
lret
cs
and
xchg
mov
mov
sub
aaa
adc
adcb
dec
lret
sbb
out
or
and
pop
mov
daa
sbbb
mov
jae
mov
lds
mov
pop
int3
aam
inc
arpl
lods
aaa
shlb
pop
pop
shlb
xor
and
add
leave
and
jns
xchg
sub
adc
fimuls
out
dec
cmpb
pusha
push
pop
and
pop
loope
mov
ja
cmp
jns
sbb
shl
lret
jno
cmpb
clc
pop
movsl
fldcw
mov
dec
bound
inc
pop
dec
push
mov
pop
rolb
mov
sub
lcall
mov
pop
addr16
repnz
insl
es
add
or
add
mov
sub
es
push
push
pushf
call
pop
push
nop
lods
mov
xorb
sub
cmpsb
cld
scas
outsb
lds
jecxz
push
jp
repz
sbb
mov
insb
cmpsl
fs
dec
push
cmp
andl
outsb
mov
in
lds
addr16
sbb
pushf
jle
push
mov
imul
fs
xchg
test
cmp
icebp
ror
xchg
xor
xor
insl
std
outsb
in
ret
push
sub
stc
fwait
cmp
add
cmpsl
adc
push
out
pop
jnp
out
test
jmp
dec
cwtl
test
out
push
cmpsb
arpl
pop
and
dec
push
or
jno
xor
inc
mov
jge
dec
call
mov
movsb
dec
mov
dec
push
push
add
test
sub
push
cmp
add
imul
xor
jg
shrb
cmp
mov
and
add
or
xchg
fnop
or
fsubp
or
jl
sub
shl
cld
add
sti
das
aas
inc
xchg
test
loopne
arpl
aad
dec
and
mov
into
mov
cmp
inc
mov
fninit
jle
mov
dec
sahf
inc
mov
sub
in
sahf
icebp
ljmp
ret
lahf
lods
jecxz
fisttpl
add
push
cmp
sub
movsl
adc
push
shl
in
mov
insl
sbb
or
dec
jns
es
bound
stos
mov
in
dec
shl
mov
repnz
pop
scas
pop
dec
inc
dec
mov
mov
std
pop
pop
imul
lahf
jle
ljmp
sbb
leave
es
addl
gs
call
sub
jge
dec
nop
mov
cmc
fldl2e
xchg
pop
loope
jle
icebp
not
pop
mov
or
enter
mov
cmp
negl
mov
sbbb
jbe
cmp
ljmp
fldl
push
ficoml
clc
fisubs
pop
push
mov
pop
imul
jae
pop
mov
int3
sahf
xchg
xor
mov
cmp
cmp
push
repz
daa
sub
jns
dec
leave
sbb
pop
in
xor
mov
mov
inc
lahf
dec
scas
dec
mov
push
mov
xchg
dec
loope
cmp
leave
xchg
arpl
aam
mov
jne
nop
lods
in
sti
orb
movsb
and
push
push
addr16
jge
xor
aam
xor
sar
int3
int
sbb
inc
icebp
inc
or
out
test
cld
cs
mov
clc
pop
xchg
fsubrs
jmp
xchg
push
in
pop
pushf
scas
adc
imul
adc
sbb
lret
ja
mov
and
ret
sub
push
lahf
xchg
xchg
daa
jo
adc
mov
xchg
insl
adc
int
mov
jno
push
in
das
insb
in
dec
and
mov
std
roll
insb
sarl
adc
sub
fsubl
inc
fucom
xchg
data16
mov
mov
add
cltd
scas
cmpsl
outsl
dec
pop
pop
das
fucomip
in
jo
ja
cld
xchg
dec
inc
test
ja
nop
push
dec
sbb
scas
mov
push
jecxz
mov
jns
insl
mulb
popa
mov
fstpt
mov
out
iret
or
incl
cmp
mov
stos
cmp
sbb
addr16
mov
loope,pt
cmp
xorl
inc
in
mov
pop
nop
xchg
xchg
pushf
mov
insb
sbb
mov
daa
jge
inc
clc
or
push
jl
fwait
or
sbb
dec
ret
fcmovu
or
dec
bound
push
out
loop
adc
jb
or
imul
adc
pop
inc
mov
inc
xchg
lret
add
lds
mov
push
adcl
push
xchg
sahf
inc
mov
xor
xor
pop
outsl
sbb
push
lcall
sub
push
mov
mov
fs
jo
jg
push
xchg
out
pop
movl
dec
cmp
mov
subb
xor
cwtl
loope
mov
push
inc
xchg
sbb
outsb
push
mov
mov
sbb
push
test
in
mov
scas
popa
or
lock
aad
cmc
jl
xchg
aas
cmpl
mov
fcmovb
daa
stos
or
push
jge
xchg
ss
xchg
pop
lock
mov
lock
mov
dec
and
xchg
sbb
mov
in
subb
std
mov
adc
dec
js
lock
push
fimuls
sbb
ds
mov
fdiv
sbbb
mov
dec
xlat
dec
movsl
fxtract
mov
adc
or
in
cmpsl
push
xrelease
enter
cli
push
arpl
outsl
sub
scas
lcall
nop
std
sbb
fwait
mov
lret
mov
in
inc
xor
push
or
test
mov
mov
loopne
push
and
ss
cs
fildll
filds
pop
push
mov
mov
sbb
mulb
and
or
insl
std
xor
dec
cmpsl
cltd
ss
sub
movsl
jle
mov
inc
repz
dec
sbb
ss
ljmp
sahf
dec
int3
mov
js
xchg
mov
das
or
js
push
dec
bswap
nop
lock
test
push
repnz
inc
add
xlat
or
mov
mov
and
ret
adc
dec
dec
mov
pop
pushf
cld
imul
pmaxsw
jne
xor
mov
iret
lods
bnd
ljmp
jp
xchg
lret
nop
arpl
cs
clc
movsl
cmp
lret
xor
nop
sbb
clc
adcl
fidivl
out
insl
cltd
in
adc
pop
cs
mov
iret
leave
mov
scas
or
scas
push
out
fidivrs
fs
test
lret
imul
mov
int
aaa
sbb
jge
mov
mov
icebp
sbb
or
xor
dec
push
daa
pop
dec
mov
dec
xchg
das
push
xor
int
xorl
push
lods
pop
cmp
stos
ljmp
inc
dec
pop
addl
test
movsb
sub
subl
mov
arpl
mov
cmp
adc
mov
pop
mov
push
mov
add
mov
xchg
pop
data16
iret
les
dec
sbb
stos
xor
xchg
adc
xchg
outsb
outsl
fwait
repz
repnz
or
mov
sub
out
addr16
xor
call
mov
sbb
ja
push
test
mov
loopne
pop
sbb
outsb
xchg
test
fadd
mov
mov
repnz
adc
mov
pop
mov
cltd
adc
scas
sub
and
and
or
xchg
xchg
push
mov
and
andb
ret
aad
nop
sub
add
hlt
shrl
lcall
stos
or
mov
push
pusha
enter
dec
repnz
imul
inc
add
ja
icebp
cmp
lods
shlb
negb
aad
out
pusha
imul
xlat
rcrb
arpl
mov
push
jno
icebp
mov
hlt
push
iret
pop
gs
aam
adc
sbb
fldl
jb
aas
jbe
adc
cmp
jmp
rolb
imul
cld
aaa
outsb
cs
ret
or
mov
jge
fildll
in
cmp
ficoms
or
fwait
std
pop
out
out
mov
sbb
mov
add
cwtl
cltd
mov
jb
pop
addl
ss
jmp
xchg
cmp
idivb
pushl
fwait
jns
cmc
xor
mov
ds
fldt
enter
inc
cld
lret
test
xchg
addb
lods
testl
jle
iret
inc
dec
jno
in
sub
sahf
cmp
int
es
inc
mov
nop
lretw
fidivl
pop
subl
les
mov
mov
loop
stos
mov
inc
js
or
fadds
xlat
inc
popf
nop
les
ja
repnz
stos
dec
loope
aad
jl
ss
mov
inc
add
push
aaa
mov
jge
int
adc
pop
jecxz
rolb
mov
lret
loopne
adc
cld
movsl
add
stos
inc
test
std
adc
jne
mov
fldcw
jb
out
aaa
jno
inc
cmp
push
mov
sbb
push
inc
lds
out
loope
pop
out
lcall
and
xchg
stos
imul
je
push
sbb
jb
cmp
outsb
dec
aas
add
cwtl
int
add
cmp
pusha
jmp
repnz
lret
shrb
rcrb
lret
ds
dec
fcoms
sbb
xchg
xchg
and
addr16
out
push
cmp
cmc
popa
mov
pop
sti
sbb
mov
jmp
push
test
or
popf
addr16
cli
fnsave
arpl
pushf
jo
dec
test
stos
pop
pop
orl
loopne
jne
sahf
mov
rcrl
mov
fcompl
push
test
inc
das
lea
and
mov
aaa
enter
pop
jp
inc
jne
int
inc
push
adc
add
adc
dec
mov
lret
mov
daa
jne
adc
out
negb
mov
dec
mov
aam
into
out
xchg
pop
adc
add
push
lahf
scas
das
mov
pop
xchg
shll
ja
and
xlat
dec
cwtl
mov
sub
stos
popa
ret
mov
paddsb
out
cmp
mov
dec
dec
arpl
sub
mov
stos
push
loopne
sahf
lcall
adcl
scas
dec
inc
fiaddl
mov
jb
or
mov
aam
sbb
subl
push
ret
jecxz
icebp
pop
ret
push
add
mov
xchg
sbb
jno
cld
inc
inc
inc
negb
loope
or
sbb
ret
xchg
and
push
int3
pusha
xor
imul
add
pop
js
pusha
and
xchg
jno
xchg
sub
and
dec
push
inc
mov
mov
pop
test
cld
out
and
lds
aam
scas
xor
push
cmp
xor
mov
mov
popa
inc
xchg
jl
mov
ffreep
mov
push
int
add
movsl
in
mov
bound
dec
pop
jne
inc
inc
push
lds
xor
mov
cltd
cmpsb
push
jmp
shlb
stos
sbb
mov
shrl
insl
mov
mov
xlat
bound
bound
pop
out
xchg
push
mov
mov
sbb
insb
scas
sbb
xchg
sbb
loopne
icebp
sbb
ret
mov
sti
dec
xor
vmptrld
aam
call
cmp
add
in
mov
mov
roll
adc
sbb
aam
icebp
test
lds
pop
ja
lds
leave
stc
pop
pop
mov
xchg
adc
cli
xchg
out
test
fldcw
cmp
scas
ss
add
dec
fstps
sbb
sbb
or
ljmp
xor
sti
xor
and
xor
jb
pop
add
icebp
or
movsb
cmp
xchg
in
bound
and
and
and
sbb
clc
inc
sahf
cmpsb
aam
jnp
stc
sahf
xchg
lahf
fisubs
fistpll
mov
push
inc
andl
sbb
add
call
stos
pop
pusha
push
mov
sar
add
repnz
jno
sti
mov
ljmp
push
int
or
push
mov
adc
mov
push
ret
mov
xchg
dec
mov
aad
sahf
sbb
and
cmp
and
nop
cmp
out
add
dec
inc
xchg
lcall
aas
dec
das
rcrb
rcl
fisttpll
mov
sbbl
xor
cmp
movsb
insl
flds
inc
cmp
jl
shll
cmp
sti
jb
xchg
loop
aam
push
sub
insl
sbb
leave
test
jae
xor
inc
movsl
cltd
cmp
add
ret
cmp
in
xchg
icebp
pusha
mov
adc
mov
lods
or
push
push
push
dec
dec
loope
pop
lcall
and
jecxz
jecxz
je
leave
push
daa
popf
addr16
lret
test
mov
mov
ds
ret
push
dec
fcompl
cmc
cs
outsb
sub
mov
roll
es
sbb
std
rorl
and
push
adc
dec
sbb
je
sti
scas
jne
xor
sbb
lods
pop
dec
aad
xchg
in
lods
cmp
sub
imul
dec
test
jle
popa
je
in
popa
cmpsl
mov
out
lea
xchg
int3
pop
inc
outsb
add
inc
sbb
idiv
notl
xchg
xor
or
jno
xor
in
adc
stc
sarl
or
or
and
cmp
mov
dec
in
enter
mov
mov
adc
shrb
jns
hlt
into
mov
and
cmp
mov
mov
lock
fsts
fcmovu
pop
and
lahf
test
test
xchg
inc
mov
lahf
mov
nop
push
mov
dec
fdivr
sbb
jo
out
lcall
inc
bound
lods
jo
in
lret
das
mov
jg
push
popf
and
mov
jp
fwait
dec
sub
rolb
pop
add
inc
aas
jo
add
lret
adc
xor
lahf
adc
outsb
inc
int3
aam
mov
pop
rorb
arpl
aaa
mov
ficoms
test
inc
or
andb
loopne
aad
mov
mov
lods
cmp
das
push
xor
push
notl
sbb
inc
dec
data16
loope
notb
mov
jns
stos
je
sbb
or
fstpt
push
mov
push
call
out
push
lret
sbb
and
mov
in
jo
scas
xchg
jg
xchg
ds
lret
lahf
bound
insb
push
mov
es
out
cmp
aam
jo
mov
jp
shll
xchg
lods
cmp
mov
or
cmp
mov
inc
sbb
cli
cmp
adc
jb
in
mov
cmp
xchg
xchg
fucom
mov
sti
test
lahf
aas
call
lock
out
mov
sub
inc
push
cld
adc
push
pop
out
pusha
inc
lds
fstps
lods
into
xchg
imul
popf
fmul
inc
bound
dec
lods
jns
sbb
jl
mov
movsl
sahf
dec
addr16
xor
out
sbb
mov
or
cs
fisubrs
mov
xchg
into
or
dec
loop
aas
dec
nop
inc
pop
in
stc
dec
xchg
mov
cmp
test
and
mov
pop
sbb
cltd
jmp
mov
cli
jno
adc
ret
mov
dec
fimuls
push
ds
lock
push
repnz
lods
lahf
cwtl
add
hlt
xchg
mov
cmp
je
or
iret
fistpl
sub
jl
mov
lret
adc
xchg
mov
inc
adc
mov
notl
test
sbb
mov
xchg
xchg
jo
fidivs
inc
in
push
jmp
popf
cld
das
nop
adc
popa
icebp
fcompl
ljmp
cmpsl
mov
out
push
insl
and
jp
fdivrp
jmp
aam
add
pop
fcom
mov
push
loope
dec
test
shrb
xchg
jle
mov
pop
jge
mov
and
notl
cmpl
cs
mov
ficoms
mov
dec
pusha
lret
xchg
cld
push
loopne
pop
jecxz
addr16
sti
jecxz
fs
dec
es
push
inc
push
mov
mov
push
ljmp
mov
xlat
insl
jmp
cmp
mov
int3
push
cmpl
cld
bound
fisttpll
scas
push
sub
and
movsl
and
mov
inc
xchg
push
es
pusha
into
pop
cwtl
mov
dec
xchg
ret
fldl
sbb
mov
aas
jmp
repz
pop
mov
push
aas
xor
arpl
outsl
addb
lods
lahf
mov
test
fcompl
pushf
cwtl
mov
lods
in
inc
xor
or
adc
outsb
mov
fbld
mov
hlt
and
inc
inc
inc
mov
nop
mov
out
push
out
dec
jge
or
out
nop
sahf
fldenv
mov
pop
add
into
xchg
xchg
outsb
adc
jno
pop
fs
jp
inc
and
cmpsl
pop
dec
std
repz
aam
mov
or
and
repnz
mov
mov
je
xor
ds
fcoms
and
mov
mov
dec
sub
je
icebp
adcl
xor
push
jo
lock
xchg
adc
push
push
jle
push
mov
in
or
stos
dec
pusha
std
es
adc
inc
lock
push
mov
inc
pop
cwtl
mov
out
jg
or
std
clc
aas
jo
aad
cmc
sti
pop
jno
fwait
sbb
push
dec
xor
call
pop
lret
xor
repz
cmc
inc
and
push
add
les
nop
dec
out
add
mov
xorl
xchg
out
lods
mov
daa
andl
jecxz
dec
and
enter
sbb
jmp
sti
xchg
dec
in
push
pop
dec
or
rcrb
movsb
xchg
out
in
mov
in
cmp
ret
out
mov
mov
push
ficompl
cmpsb
cmp
jg
xchg
sub
lahf
adc
fildl
sub
sti
roll
pop
hlt
movsb
mov
push
aaa
push
jge
imul
dec
loop
mov
and
outsb
cwtl
dec
movsl
call
xor
ja
fmuls
mov
jp
push
leave
jae
stc
xlat
scas
mov
dec
inc
push
xor
repnz
push
out
lods
stc
xchg
addr16
and
aaa
or
shll
and
sbb
cld
push
xor
repz
fsts
pop
xor
test
jg
imul
push
repz
stos
jmp
insb
ds
clc
jno
insl
jo
in
adc
xor
mov
xchg
push
dec
jne
jns
add
sub
int
lods
pop
push
cmp
outsb
in
and
fstpl
add
testb
les
ja
sar
jae
ret
xchg
fbstp
mov
je
stos
add
arpl
into
test
pop
pop
xor
or
enter
dec
sbb
pop
movsb
jo
movsl
ror
pop
faddl
ja
scas
inc
ds
inc
pop
popf
es
jne
bound
loop
push
dec
lea
lret
gs
mov
arpl
outsl
inc
cmp
stos
neg
xor
aaa
and
mov
std
outsl
dec
minps
cmp
jnp
test
sbb
nop
pop
sti
out
lds
out
add
jl
mov
leave
test
call
aam
sbb
sub
in
ret
jne
js
inc
icebp
mov
xor
xlat
nop
or
adc
sub
rorl
test
pop
das
outsl
cmpsl
add
adc
xchg
inc
mov
fisubs
aaa
roll
int
mov
lods
mov
stc
mov
dec
sbb
fistps
jnp
sub
or
xlat
pop
jbe
adc
xchg
aam
sbb
jo
xor
cmpsb
or
add
push
loope
add
mov
xor
es
jo
outsl
xchg
sbb
clc
orb
or
shlb
cmp
adc
mov
push
out
cmp
fstl
rcll
inc
mov
sub
add
mov
or
xor
js
sbb
mov
test
flds
cmp
xor
push
inc
pop
mov
sbb
in
repz
and
dec
cmc
jp
int
lea
rcl
leave
popf
mov
mov
iret
daa
fptan
je
jae
sub
enter
jae
in
or
pushf
in
js
fistl
jo
xor
insl
repnz
insb
or
lock
pop
int3
or
mov
ljmp
cmp
lahf
imul
or
sub
aaa
push
mov
lea
outsl
push
std
xchg
stos
xchg
incb
inc
fisubs
pop
je
mov
add
imul
cmp
test
imul
test
add
loope
cmpsl
call
mov
mov
mov
in
insb
adc
inc
insb
in
jge
fstps
stc
mov
xchg
pop
or
and
js
dec
ja
dec
popf
lahf
mov
pop
push
stos
and
lods
inc
lock
add
mov
or
dec
iret
movsb
fdivs
mov
sbb
cmp
aaa
cmp
push
repnz
sbb
movsl
out
mov
push
xlat
popa
movsb
arpl
jo
cmpsb
ja
dec
and
out
pop
popf
std
xchg
jmp
scas
sbb
inc
or
shlb
stos
mov
aam
sub
lret
pop
mov
lods
cmp
push
aad
jp
cli
in
xchg
out
push
add
clc
pop
add
ret
iret
pop
mov
jnp
mov
enter
nop
outsl
shlb
sti
inc
mov
push
xchg
mov
mov
roll
mov
or
jno
pop
lock
xor
or
in
rcl
insb
imul
popa
inc
dec
test
mov
jg
push
adc
call
dec
and
sub
push
cli
pop
out
sub
jl
or
pop
addb
xor
and
push
cli
jg
adc
insb
mov
sub
mov
leave
or
int
repnz
and
or
inc
sbb
inc
out
movsl
fdivr
rcrl
repnz
sti
mov
xor
sbb
sbb
xlat
mov
or
and
in
in
sbb
xchg
repnz
pop
test
mov
fsts
or
loopne
jno
sbb
xchg
dec
pop
pop
mov
std
xchg
cmp
sbb
imul
dec
sbb
pushf
inc
dec
nop
iret
push
jae
xor
xchg
jecxz
clc
cmp
jns
leave
ds
pop
shlb
rcl
xchg
jns
xchg
push
or
pop
xlat
ret
in
inc
and
bound
push
jne
or
add
or
addr16
or
stos
int
iret
mov
mov
dec
jae
adc
pop
cmp
bound
lods
ds
iret
testb
incl
leave
jns
mov
mov
push
mov
push
mov
inc
mov
inc
xor
enter
sbb
push
cmp
jle
or
std
repz
shlb
jl
mov
push
jl
xor
jecxz
mov
repnz
loopne
mov
cltd
les
pop
adc
cmp
addl
inc
jmp
pushf
sub
in
pusha
dec
es
dec
add
dec
inc
aaa
sbb
dec
sbb
cmp
sbb
xor
icebp
cmpsb
lcall
icebp
xchg
mov
xlat
pop
pop
dec
pop
cld
adc
push
aad
cmc
stos
jmp
je
push
jp
nop
je
leave
mov
xorl
and
loopne
sub
and
add
aas
jnp
into
icebp
cmovne
pop
nop
pop
out
xor
push
test
sub
call
aaa
data16
fsqrt
lcall
ret
push
jmp
add
jl,pn
nop
shr
test
out
mov
lcall
pop
ljmp
xchg
cmc
addb
sbb
cmp
ja
ja
jl
test
lret
decl
leave
mov
xchg
adc
adc
scas
mov
or
inc
lret
mov
jg
sub
rolb
inc
jno
daa
xchg
ja
leave
push
movsl
add
je,pt
out
and
push
push
stos
mov
mov
out
sub
adc
or
subb
ffree
loopne
and
rcll
shrb
push
dec
js
and
pushf
fsubrp
push
addb
loop
add
mov
lret
fnstsw
xor
cmc
repnz
jg
cli
popf
inc
xchg
ds
mov
cmp
subb
mov
xlat
in
cmp
xchg
icebp
mov
pop
xor
cmp
mov
rcr
xchg
daa
int3
mov
inc
enter
inc
outsb
dec
loope
cmp
stos
fidivrl
movsl
adc
pop
push
pop
push
mov
mov
enter
pop
mov
xchg
inc
or
pop
sbb
shlb
popa
jnp
fisubs
xchg
inc
js
mov
push
fstpt
push
sub
jge
sbb
mov
mov
cmp
xor
mov
jo
popa
and
je
in
sbb
jg
mov
pop
pop
mov
xchg
daa
test
imul
xchg
scas
dec
jo
call
arpl
mov
sub
mov
push
ret
and
and
das
jl
add
ss
es
iret
xchg
sahf
test
pop
scas
cmp
mov
cmpsl
push
addr16
jns
lret
das
jns
fwait
push
das
xor
cli
fdiv
add
out
jecxz
negl
xor
lods
pusha
cld
sbb
lcall
pop
adcl
mov
adc
test
mov
add
add
adc
pop
xor
fwait
mov
sbb
pop
xchg
popa
add
cmc
mov
xchg
inc
mov
mov
subb
rep
xchg
sbb
mov
mov
mov
mov
xchg
fsubrl
and
and
sbb
pop
mov
inc
aad
pop
into
sub
jmp
push
xchg
and
test
jae
jmp
shl
xor
cmp
inc
xchg
stc
xor
add
arpl
in
cli
or
stos
sbb
sub
je
push
push
imul
xchg
fmull
xchg
daa
mov
mov
test
jmp
pusha
jg
cmp
shll
imul
sub
shll
out
pushf
lds
int
mov
mov
sbb
fwait
jmp
push
addr16
loopne
scas
and
mov
in
call
lret
pop
jecxz
push
and
sub
mov
mov
cwtl
stc
pop
cmpsb
cmc
pop
stc
mull
and
inc
or
add
icebp
cwtl
mov
mov
loopne,pn
addr16
jbe
rcl
pop
rcll
xchg
je
imul
ja
jbe
adc
pop
loope
insb
out
test
rolb
idivb
sbb
fstl
clc
orl
fmulp
inc
into
pushf
nop
fidivs
aam
popf
out
loope
insl
test
arpl
pop
xchg
mov
cmp
sub
fstpl
cmp
jecxz
add
cli
adc
int3
test
in
sbb
push
nop
xchg
sub
mov
loope
add
outsl
mov
xchg
sub
sub
pop
lret
mov
loope
mov
out
ffree
jge
sub
cmp
loop
bound
out
mov
mov
loopne
adc
lret
outsb
arpl
ret
fs
test
sbb
mov
push
sub
pop
out
push
mov
cmp
insl
lods
lods
aaa
adc
es
mov
mov
or
mov
and
roll
loopne
pop
mov
je
jmp
pop
ja
rcrb
lock
fs
add
and
and
test
outsl
sub
js
mov
adc
cmp
shl
cmpsb
cli
pop
push
dec
cli
ja
je
mov
in
aam
lahf
mov
mov
jge
xor
pop
iret
in
sarl
outsl
pop
xor
int3
xor
and
test
push
push
scas
shlb
pop
cmp
test
mov
and
das
pop
mov
ljmp
test
dec
mov
or
and
push
ds
jecxz
cs
fists
cmpsl
popf
inc
rorl
fstpl
orl
push
in
pusha
ja
shr
js
mov
mov
rcrb
outsb
sarl
cwtl
movsb
adc
lods
insl
rcll
pop
mov
dec
and
sbbb
pushf
dec
cmpsb
loope
mov
inc
lret
pop
mov
sbb
aas
adc
jp
push
adc
or
bound
pusha
cmc
int3
inc
shlb
loopne
inc
stc
scas
insl
scas
cmp
sbbb
int3
mov
pop
dec
clc
jmp
popa
push
ja
jmp
push
mov
push
mov
xchg
pushl
movsb
pop
les
mov
mov
loope
pop
pop
sub
xchg
icebp
jne
fcmovbe
mov
lcall
out
adc
repz
imul
es
pop
fdivrl
into
into
scas
sahf
push
jne
push
mov
xchg
mov
gs
xor
insb
fsts
dec
xchg
lock
dec
or
das
and
lcall
sahf
and
pop
sahf
fst
cltd
xchg
xchg
pop
or
add
fsubs
xchg
push
jecxz
or
jge
mov
je
sub
cld
cs
cmpsb
std
jmp
call
adc
arpl
jo
dec
and
pop
std
rcll
repz
das
pop
jge
and
ret
mov
push
or
ljmp
add
aas
and
sub
lahf
call
xchg
and
add
cmp
push
push
mov
mov
cmp
pop
popa
push
sbb
mov
sbb
add
repz
jg
jecxz
mov
or
pushf
dec
mov
outsb
lcall
mov
inc
and
ss
rcrl
iret
and
jo
or
jbe
idivb
fldenv
and
dec
inc
pop
popf
mov
or
adc
sub
sbb
lds
dec
jecxz
js
mov
mov
mov
sahf
mov
mov
ret
fstps
cmp
addb
push
orb
inc
mov
xor
clc
mov
outsl
shll
out
pop
lds
xor
sahf
or
mov
xor
sbb
int
sbb
out
cmc
push
bound
jge
repnz
jne
jns
lods
cmpsb
mov
pop
subb
cs
ss
enter
xor
or
clc
dec
push
or
pushf
sbb
dec
pop
inc
ds
mov
insb
movb
sbb
mov
mov
loop
push
ret
push
jno
arpl
push
and
cwtl
rol
jo
repz
insb
inc
std
lret
pop
xor
sbb
arpl
movsl
inc
in
add
adc
xchg
mov
adc
nop
jecxz
mov
test
icebp
cmp
push
push
int
fdivs
ret
sbb
jle
xor
sub
test
jmp
mov
sahf
push
lret
mov
cmp
xchg
rol
outsb
pop
lods
popf
loop
dec
stos
popl
icebp
or
test
and
cmpsb
cmpb
mov
insl
outsl
jno
mov
cwtl
jne
icebp
push
dec
insb
sbb
mov
call
cmp
mov
dec
adc
push
push
stos
pusha
cltd
xchg
or
hlt
or
add
arpl
pop
jae
fnstcw
dec
aaa
test
inc
lock
push
mov
ds
sbb
mov
insl
add
stos
jbe
xchg
rcl
mov
jg
ficoml
mov
pop
xchg
jns
stos
sub
add
ljmp
push
aam
shll
pop
imul
sub
push
jg
pop
fwait
loop
adc
push
jp
jle
roll
mov
das
or
sub
mov
aam
daa
cs
idiv
dec
negb
stos
inc
add
outsb
dec
shlb
jbe
ja
xorl
push
mov
jp
ss
inc
mov
pop
xor
stos
inc
jne
dec
sbb
sub
cmpsl
jecxz
and
push
push
inc
and
js
scas
mov
out
call
add
inc
loope
sub
out
sub
and
movsb
add
pop
ss
sbb
inc
mov
pop
jg
mov
sti
add
and
shrl
loopne
not
neg
out
mov
sub
loopne
cmovno
mov
loop
lods
je
jne
mov
push
xor
repz
lea
scas
inc
pop
jle
mov
mov
es
popf
insb
jbe
popf
mov
pop
sahf
in
sbb
add
jg
sahf
in
fwait
loop
sub
lahf
jl
xor
add
sarb
sbb
fiaddl
clc
cmovl
sub
mov
dec
stc
ljmp
push
out
xor
pop
rolb
mov
insb
inc
ffree
sub
jo
rcl
push
mov
add
rolb
dec
mov
xchg
or
sub
jge
mov
ret
outsb
lods
sbb
fwait
test
sub
test
jb
inc
jp
call
data16
mov
xchg
or
add
fwait
hlt
mov
ret
push
dec
mov
push
adc
pop
dec
clc
movsb
lods
cmp
push
iret
pop
adc
mov
add
mov
mov
and
leave
das
xor
bound
test
push
pop
imul
inc
adc
sub
inc
mov
out
lea
or
mov
add
stos
and
mov
repnz
pop
fstpt
data16
jl
jnp
fstl
sub
hlt
outsl
cmp
and
sub
popa
jae
shr
ficomps
mov
pusha
aam
and
xor
dec
aad
pop
out
mov
mov
inc
sub
or
mov
aaa
lret
pusha
pushf
mov
or
dec
fcomi
xor
xor
pop
xchg
fwait
mov
mov
mov
xor
jl
pop
mov
test
push
shlb
inc
push
lock
lds
shrb
into
add
mov
jle
dec
pushf
sbb
pusha
cmpsl
push
ds
lods
or
add
xor
repz
jb
cmovbe
clc
dec
push
sahf
sbb
inc
xor
addr16
das
sub
fnstsw
xor
mov
cmp
outsl
out
xchg
sub
rcl
adc
mov
stos
push
mov
push
pop
jge
adc
lods
and
faddl
dec
push
mov
sbb
lea
fs
popf
sbb
loopne
repnz
xchg
cli
sbb
repz
mov
and
xchg
mov
pop
cmp
xor
stos
mov
out
in
enter
adc
cmpsl
push
je
and
mov
cmpsl
fdivs
adc
and
xor
or
add
push
scas
ret
test
pushf
cli
imul
sbb
loop
iret
and
incl
imul
sbb
add
jmp
in
sahf
subl
sti
xor
aas
or
xlat
dec
and
data16
add
sub
imul
mov
clc
add
push
int3
clc
bound
xor
outsb
xchg
push
xor
sbb
addl
iret
pop
mov
pop
test
dec
inc
in
ret
inc
sahf
cmp
gs
add
or
xchg
in
cwtl
inc
sahf
jne
jne
inc
push
and
insb
sbb
xchg
enter
fs
lcall
inc
int
cmp
stos
mov
negl
add
xchg
sahf
mov
loop
pop
dec
pop
leave
mov
xor
stos
mov
lret
push
repnz
mov
in
add
aaa
insl
add
mov
in
sar
loopne
hlt
jge
std
mov
daa
push
jmp
sub
arpl
dec
movsb
hlt
sub
push
leave
cmp
mov
je
xor
jns
sub
jae
jp
sub
pushf
push
jecxz
sbb
out
pop
sub
repnz
push
jnp
adc
pop
mov
int3
sub
sub
xchg
add
dec
jo
push
xor
repnz
adc
adc
in
sbb
adc
jmp
add
repnz
iret
je
sbb
adcb
xchg
jp
sub
rol
ficoms
in
js
sbb
adc
adc
cmpsl
mov
push
test
inc
mov
fsubrl
cmp
or
out
rolb
test
imul
sbb
stos
imul
add
dec
scas
cmp
jne
sbb
add
ljmp
cltd
or
pusha
inc
inc
adc
sub
ret
inc
or
fsubrl
repz
lahf
fstl
outsb
and
aad
sbb
xchg
inc
xor
dec
stc
ret
cltd
mov
cmp
ja
dec
add
ja
cmpsl
cmp
bound
scas
cmp
push
or
jbe
or
mov
movsl
xor
add
cmp
cmp
sub
in
mov
mov
loopne
adc
insb
xchg
rcr
jle
sub
add
arpl
sahf
cltd
aad
add
mov
inc
push
fiadds
orl
push
outsl
mov
shrb
pop
or
fbld
pop
pop
dec
outsb
push
loopne
out
pavgb
add
aad
lret
and
aam
in
sbb
sub
mov
int3
cmp
and
jns
fcmovne
jns
movsb
das
subb
xor
outsl
pop
inc
jno
inc
loop
insb
fstl
test
lahf
pop
in
sbb
hlt
add
add
fadd
sub
pop
and
sbb
mov
loope
ja
int
pusha
pop
cmp
fsubl
mov
into
scas
call
popf
cmpsl
orl
in
das
dec
mov
or
in
or
and
fldcw
and
cld
mov
sbb
mov
pushf
cmpb
pop
lock
add
leave
ja
add
sub
es
pop
loop
outsb
push
sahf
dec
pop
out
cmp
and
dec
popf
xchg
mov
in
inc
addr16
pop
inc
or
sti
push
xor
xor
cmp
pushf
addr16
mov
or
mov
add
jecxz
jge
mov
dec
sbb
es
movsb
fpatan
add
adc
inc
mov
insl
xchg
pop
cmc
sar
jbe
add
imul
imul
xchg
mov
jns
pop
xchg
aad
dec
adc
divl
fcom
dec
in
adc
push
jae
xchg
lcall
mov
test
mov
jnp
sbb
adc
xor
aaa
lret
mov
je
arpl
cltd
inc
mov
scas
xchg
insl
xchg
adc
mov
cmp
lock
fcomip
sub
pop
xchg
mov
pop
dec
pop
xlat
jno
imul
lea
jl
push
ljmp
mov
stc
lock
add
sbb
and
test
pusha
add
push
cmp
movsb
cmp
jp
inc
inc
sub
or
mov
outsb
or
rep
mov
jno
gs
push
out
push
out
das
dec
lahf
mov
outsl
lret
sub
hlt
lret
fdiv
jbe
add
ljmp
nop
cmp
stos
lea
add
in
sub
add
sbb
mov
out
ret
and
shll
adc
lea
jmp
out
mov
jbe
jge
incb
fbstp
add
or
jne
push
inc
in
fdivs
stc
call
push
aam
pushf
cmpsl
adc
cli
pop
xor
adc
xchg
arpl
jp
ja
xchg
imul
sub
mov
jnp
cmpsb
jmp
jns
notb
imul
arpl
lods
sbb
cltd
cmp
xor
es
outsl
cmp
enter
das
mul
dec
and
sahf
sbbl
filds
addr16
insb
sbb
xor
mov
ret
cs
jbe
sub
insb
insb
fldcw
fsubrs
lods
das
daa
push
andl
cmp
jo
xorl
jo
jo
mov
rcrl
flds
addr16
xor
sti
test
sub
test
inc
sub
xchg
out
sarb
das
cltd
ds
xchg
imul
loope
lock
sub
mov
mov
test
jno,pn
in
rcll
sarb
jne
xor
pop
mov
add
add
push
data16
lods
mov
or
pop
xlat
and
xor
sub
mov
xchg
cltd
and
pop
mov
js
sbb
jns
xchg
gs
cmp
xor
jo
mov
sbb
cmp
mov
call
loopne
or
and
imulb
adc
ja
push
ds
sub
mov
mov
out
jl
sbb
push
push
movsl
stc
les
mov
je
mov
stos
mov
ljmp
inc
lret
iret
pop
int3
enter
dec
aas
adc
sub
idivb
jg
pop
jmp
push
jmp
test
lods
xchg
loop
movb
out
pop
lods
inc
pop
push
and
fninit
add
jns
cmp
imul
pop
mov
jecxz
cmc
lods
ja
xor
add
push
dec
mov
mov
daa
stc
cld
movzwl
push
pop
pushf
dec
repz
jbe
xor
cld
mov
xchg
addr16
cld
jle
repz
mov
mov
mov
into
or
flds
xor
push
push
push
ljmp
cli
push
push
out
pop
xor
pop
adc
mov
cmpsb
xchg
pushf
fsubr
sbb
test
popa
cmp
pop
js
in
rorb
out
lcall
mov
in
out
or
les
adc
mov
sbb
cltd
out
popa
add
outsb
nop
and
mov
push
jb
xchg
inc
adc
fs
sahf
aas
ss
loope
into
adc
lods
or
adc
xlat
push
mov
imul
addl
xchg
mov
jne
add
mov
or
into
lds
add
mov
xchg
sub
fwait
aad
fsubrl
cmpsb
pop
imul
xchg
jns
inc
push
jb
shll
jl
subl
mov
pop
sbb
xchg
jns
addr16
lods
pushf
jecxz
jp
sbb
push
ljmp
push
dec
das
testl
dec
cmp
adc
ret
xchg
cmp
xor
add
xchg
sbb
lods
mov
cmp
repnz
andb
jmp
sbb
addr16
or
scas
iret
jmp
icebp
fnstenv
dec
fsubrs
cmp
pop
dec
in
ljmp
add
cmp
xchg
or
xchg
movsl
outsb
pop
andb
int
movb
lret
pop
xchg
xor
xor
pop
jecxz
xchg
inc
push
or
lea
cltd
and
daa
xor
scas
dec
add
xlat
ret
inc
adc
scas
dec
rcll
cmp
loop
and
jp
cmpsl
add
mov
aaa
xchg
fdivrl
or
push
sub
into
and
out
out
xchg
std
sbb
test
pop
jle
jbe
loope
in
popf
rcr
push
xchg
jns
inc
aam
rorb
in
add
ljmp
mov
test
sti
jge
adc
xor
add
xchg
sti
scas
xchg
fcmovbe
sbbb
lds
leave
add
pushf
add
mov
push
andb
xor
in
xor
mov
push
je
inc
cld
cmp
inc
xor
lret
xchg
jo
je
push
into
popa
inc
inc
stc
stc
xchg
dec
adc
cli
dec
mov
inc
xchg
cmpsl
xor
popa
dec
jg
xchg
jbe
adc
inc
xor
lahf
idiv
sbb
fwait
xchg
cmpl
dec
iret
mov
sbb
push
pop
sar
dec
loop
inc
ja
xorl
push
sbb
int3
daa
cmp
out
loop
fcmovu
and
sarl
mov
sbb
xchg
sbb
or
ret
popa
xor
jp
pushf
and
mov
sbbl
leave
adc
mov
lcall
fstpl
push
xchg
int
movsl
aad
jbe
mov
popa
xchg
lea
out
sub
aaa
addb
out
pop
xchg
out
cmp
jne
dec
in
push
dec
dec
daa
jno
push
daa
sub
mov
aam
jae
jo
fisubl
push
shlb
cmp
movsb
dec
mov
fdivs
fcoml
dec
mov
lods
mov
cli
cmp
sbb
test
das
xor
xchg
stos
aas
icebp
or
flds
sbb
loopne
push
stos
ljmp
scas
fstpt
in
cld
mov
or
dec
pop
movsb
mov
add
push
push
rcrl
adc
xchg
lahf
les
dec
scas
mov
popl
push
cmp
pop
out
cmp
cmp
test
in
push
cmp
cmc
sahf
prefetcht0
popf
mov
movsb
fisubrs
subb
jl
push
into
dec
scas
or
outsl
or
mov
imul
jae
or
icebp
or
aam
dec
and
push
sbb
sbb
loopne
xchg
push
lsl
loop
mov
sub
xchg
xlat
jbe
lea
jae
mov
push
das
inc
xchg
xchg
cmc
aas
nop
xchg
test
std
ljmp
add
mov
cs
aas
mov
rorb
dec
ljmp
sbb
je
pop
and
out
jle
mov
add
mov
insb
xchg
add
mov
add
pop
int3
js
ds
je
daa
fdivp
cmc
add
cmpsl
lods
jbe
gs
loopne
bound
cmp
xor
adc
mov
mov
push
dec
rorl
shrb
js
mov
lock
jecxz
addl
mov
inc
xchg
loopne
and
negb
jne
sub
add
orl
sbb
lock
jmp
rcll
shlb
mov
mov
in
jge
mov
aas
pop
push
push
fs
leave
loopne
sbb
xchg
icebp
test
enter
movsl
mov
push
int3
sbb
rorl
cli
xchg
cltd
jp
push
repnz
addr16
push
jmp
inc
imul
xor
mov
or
bound
dec
add
mov
sub
adc
sbb
inc
add
jmp
add
jns
xchg
push
xchg
scas
pop
das
jbe
jnp
and
inc
or
jbe
jp
jno
test
xchg
addr16
dec
fsubrs
xchg
iret
fcoms
fs
push
push
push
leave
or
lea
ljmp
lahf
fcomip
mov
pusha
push
rclb
jno
sahf
inc
xor
aam
ja
push
mov
mov
sahf
or
outsl
ret
iret
adc
inc
xor
aaa
shl
jge
arpl
xor
cmc
fsubrp
sahf
jge,pn
jb
adc
call
frstor
dec
decl
and
icebp
add
cli
xor
gs
rolb
cltd
jl
dec
add
xor
pop
mov
out
out
adc
mov
mov
and
mov
ja
cmp
aaa
jb
cld
stc
or
insl
or
inc
scas
rorb
and
or
cmp
sub
push
jge
xchg
pop
jg
jns
xor
sub
pop
aas
lea
xchg
sub
adc
mov
movsb
and
cwtl
xchg
shll
icebp
push
cmp
inc
cmp
negl
dec
pop
or
inc
loope
pop
jb
rclb
shll
notb
scas
flds
lret
and
imul
outsl
inc
test
inc
stc
fwait
pop
lcall
cmp
xchg
push
mov
pop
stc
test
xor
cmpl
nop
jge
mov
mov
xchg
cmp
jg,pt
insl
stc
cmp
lock
push
aam
dec
aaa
scas
sar
pop
adc
cmp
in
arpl
int
mov
nop
jecxz
jp
pop
loopne
add
mov
imul
daa
adc
mov
stos
add
ljmp
in
push
das
or
test
insb
push
bound
sub
xchg
mov
and
out
jecxz
xor
xor
xor
jmp
outsb
pop
shlb
adc
pop
jae
jo
jmp
hlt
adc
sub
mov
mov
xchg
xchg
andl
add
ror
jge
push
sbb
push
or
mov
or
inc
jmp
in
and
test
inc
pop
push
lock
push
pop
insl
lods
xor
cltd
decb
subb
stos
pop
xchg
fisttpll
or
pop
nop
mov
aaa
cli
add
movsl
repz
and
or
subb
lret
bound
pop
scas
cmp
adc
cli
lds
imul
and
cmp
repnz
test
fcmovu
cs
fsubrs
pop
lret
andl
inc
std
xor
mov
int
incl
cld
std
mov
lods
pop
pop
sbb
sbb
fildll
rorb
sbb
xor
shll
aaa
in
mov
mov
int
jp
push
aad
es
shrb
push
pop
mov
inc
pop
xchg
xchg
inc
xor
sbb
es
push
sbb
or
xor
ds
test
mov
mov
mov
or
mov
subb
sub
jmp
sbb
push
data16
sub
push
inc
rcrb
sub
rcr
mov
movsl
mov
or
jnp
mov
push
js
cmp
sbb
rclb
mov
mov
call
sti
fistpll
or
xchg
fisttpll
aas
sbb
out
xor
mov
inc
cld
dec
sahf
test
iret
cli
data16
xor
bound
xchg
push
mov
adc
fisttps
cmp
cwtl
lret
out
mov
ljmp
jb
pop
testl
scas
xchg
dec
flds
iret
xor
pop
ds
inc
mov
lahf
jmp
hlt
inc
pop
bound
push
testb
mov
mov
jl
in
mov
cmp
xchg
test
sbb
adc
xchg
aad
fadds
xchg
inc
out
add
jle
xchg
movsb
fldcw
dec
sub
add
cltd
jb
jecxz
lcall
or
jb
adc
push
ss
ljmp
test
sub
mov
xlat
or
ja
xorb
jno
or
xchg
xchg
lahf
mov
xchg
popa
movsb
rcrl
pop
rcll
or
loope
and
jns
repz
adc
cmpsb
fs
cltd
in
push
jae
add
xchg
push
sub
pushf
xchg
mov
cmp
xor
sbb
adc
jns
insb
cmp
pop
les
out
inc
mov
mov
inc
jae
push
mov
jmp
push
adc
into
add
inc
add
pop
pushf
test
fildll
sbb
out
jl
int
adc
jl
iret
or
movsl
jo
idivb
popa
enter
fisubs
jns
rorb
fwait
icebp
aad
dec
jo
sub
push
mov
mov
pop
push
fistps
test
jne
movsb
jno
inc
and
data16
repnz
hlt
fstpt
mov
fidivs
bound
jl
les
pop
mov
inc
icebp
test
pop
in
lahf
cltd
gs
outsl
imul
xchg
mov
lock
jl
andl
adc
xor
daa
mov
leave
test
lods
in
pop
clc
sub
and
mov
pusha
gs
add
cmpsb
leave
lods
sbbl
lods
aas
iret
fdivrl
test
mov
or
incb
lret
test
test
xchg
mov
into
or
outsl
mov
mov
loop
and
cmp
fisubl
and
and
mov
adc
inc
aad
leave
mov
inc
cmpsb
imul
nop
fistps
pusha
mov
pop
insl
cmp
dec
xor
cwtl
stc
fstl
cmp
inc
cmp
pop
jns
inc
sub
inc
push
fists
and
divb
xor
subb
leave
rdtsc
xlat
adc
mov
push
dec
jo
stos
pop
in
mov
cs
jnp
shrl
insb
mov
and
fldcw
out
xchg
pop
ss
sti
dec
mov
into
imul
adc
cmpsl
sub
orl
cmp
mov
xor
cltd
and
outsl
mov
push
in
bnd
or
in
add
idiv
jg
and
adc
popa
fnstsw
cli
push
xchg
mov
cmp
das
and
and
push
dec
sbb
xchg
and
xchg
cld
pop
aam
add
sbb
loopne
sbb
les
pop
dec
dec
push
outsb
test
mov
mov
push
rcrb
add
jne
ss
push
cmpsl
jp
fcmove
scas
es
cmpl
mov
dec
add
fs
cmp
sar
arpl
pop
test
adc
add
nop
dec
inc
adc
and
int
leave
xor
test
jae
jmp
xor
imul
arpl
mov
les
stos
inc
mov
sahf
and
lret
mov
loope
sub
mov
pop
lret
addb
push
mov
in
jmp
push
adc
test
or
test
orl
mov
movsl
test
es
aam
mov
adc
into
xorl
xlat
xchg
fisubrs
cmp
mov
lods
sbb
lock
dec
mov
adc
and
cmp
or
popa
jne
iret
push
aas
pop
mov
dec
inc
gs
movsb
lahf
in
sub
mov
shll
call
insl
leave
xchg
stos
sbb
add
mov
xor
out
xor
xor
sbb
pop
aad
das
dec
add
loopne
or
pop
bound
sub
xor
jns
shrl
xor
mov
shrb
pop
push
push
fimull
lods
jmp
pop
and
ficomps
cli
rcrl
cli
push
fisttpll
dec
loopne
and
pusha
in
cli
add
int
rclb
cmc
sub
loope
incb
imul
insb
push
xchg
xchg
movsb
jg
daa
xchg
xor
orb
and
ret
ret
lret
xchg
cmp
cmp
adc
stc
shr
sub
adc
dec
lock
pop
insl
mov
jmp
cmp
add
cmp
out
loope
xchg
dec
fs
pop
in
xor
addr16
out
mov
push
sub
and
cmpl
outsl
sarb
outsb
inc
xlat
int
sarb
mov
inc
pushf
fwait
mov
cwtl
movsl
loopne
pop
lods
mov
or
jns
pop
jo
out
ja
clc
das
das
and
jns
fnstcw
jl
test
sub
and
push
mov
inc
vpacksswb
das
and
filds
test
fs
xchg
fadds
mov
xchg
int3
fs
ljmp
enter
js
popa
push
mov
pushf
out
add
cmp
sub
jno
daa
jae
pop
iret
mov
and
mov
and
sub
mov
scas
jns
das
mov
jb
fldl
jnp
mov
lods
inc
jmp
subb
imul
xchg
lcall
mov
xorb
mov
fbld
in
repz
clc
stos
mov
jbe
pop
jns
int
add
out
lcall
jl
xchg
xlat
jge
movsl
shl
xchg
inc
sarl
mov
adcb
cmp
je
and
out
pop
icebp
je
icebp
out
in
nop
xlat
cltd
mov
aam
in
fistl
in
jecxz
mov
push
pop
lock
dec
dec
xor
adc
lret
push
inc
lods
mov
out
adc
faddl
and
mov
cmp
mov
push
xor
lahf
fwait
rcll
xor
cltd
pop
pop
push
jp
xor
push
mov
mov
bound
scas
lds
push
cli
mov
cwtl
adc
mov
addr16
mov
divl
movsl
adc
sbb
pop
or
xor
into
ret
loop
adc
sbb
sbbb
rcrl
or
cwtl
mov
and
out
inc
mov
push
mov
cmp
jnp
jns
sbb
loope
fists
xorb
jl
aaa
cmp
inc
rorl
popf
pusha
mov
sbb
adc
jmp
insl
testl
inc
pop
leave
push
inc
repz
outsb
adc
push
or
or
cmp
adc
popl
lods
mov
inc
or
addr16
in
sbb
gs
mov
or
leave
adc
mov
add
out
lock
dec
xorb
ss
pop
and
jne
jae
clc
mov
nop
sarl
outsb
loopne
js
push
ret
mov
cmp
inc
ret
call
or
nop
jmp
fs
sub
cwtl
in
es
clc
std
popf
adc
mov
inc
movsb
pop
and
test
mov
aad
enter
xor
xchg
lods
imul
push
mov
add
dec
outsl
mov
mov
ret
xor
das
rcr
ljmp
nop
xchg
xlat
je
insb
push
je
pop
std
aam
es
xchg
aaa
push
push
aaa
popf
xchg
cli
xchg
adc
adc
xor
push
cmp
and
mov
scas
dec
std
and
add
xchg
repz
jnp
jo
mov
jmp
lock
and
cmc
inc
rorb
out
xor
push
inc
mov
inc
push
pusha
loop
add
aaa
ljmp
jge
adcb
add
inc
mov
mov
je
movsb
push
push
and
xchg
jmp
in
push
lcall
mov
pop
insb
xchg
jle
rolb
push
xor
lahf
idivb
dec
cs
cwtl
sub
sub
ds
add
ss
adc
adc
sbb
add
arpl
in
jp
sbb
xlat
and
das
rorb
xchg
loopne
idivl
jmp
push
jg
adc
add
bound
aam
inc
sbb
push
mov
cs
lods
lds
xchg
fwait
dec
push
xchg
arpl
rorl
mov
sub
test
push
sbb
loopne
rclb
and
fs
mov
fucomip
add
mov
sbbb
jge
push
and
decb
sub
pop
mov
loope
int
push
or
and
negl
jno
clc
mov
push
test
cli
xor
jo
jno
insl
sub
pop
mov
push
imul
mov
outsb
enter
lods
sbb
sahf
or
nop
stos
aam
fwait
adc
les
or
loop
insb
push
or
mov
std
mov
add
xor
nop
out
dec
and
and
mov
jbe
add
sub
pop
inc
inc
add
xor
xor
inc
xlat
filds
cld
lods
fwait
sub
xchg
xchg
cmp
cmp
sub
mov
adc
int3
adc
pop
cwtl
pop
lret
daa
das
jmp
pop
dec
outsb
push
dec
mov
mov
jno
mov
std
sub
jp
mov
mov
pusha
mov
cmc
sub
in
stos
mov
out
push
xlat
lods
out
push
adc
out
cltd
pop
inc
out
or
fnsave
add
fisubrs
xorl
xchg
dec
sub
js
loopne
ss
xchg
je
xchg
push
mov
xchg
mov
push
pusha
roll
insl
fimull
push
sub
loope
leave
lahf
dec
jge
inc
testl
fldt
mov
out
les
repz
into
mov
sub
movsl
and
push
mov
xchg
mov
or
mov
ja
sbb
push
mov
cmp
push
and
mov
add
shrl
mov
movsl
pop
jns
add
dec
cmp
cld
call
rcll
jg
adc
push
hlt
js
addr16
pushf
xor
push
stos
movsb
adc
dec
cmpsl
aas
sub
mov
mov
push
xchg
fidivrs
and
pop
fcmove
push
test
inc
push
mov
sub
xor
mov
push
push
or
push
jne
orl
pushf
xchg
mov
dec
in
int
cmpb
jo
js
jl
mov
mov
sub
cli
stos
leave
xchg
aaa
pop
imulb
stc
pop
loope
mov
imul
in
fdivrp
loope
sub
mov
aas
pop
jge
stos
and
daa
rep
jo
mov
push
jmp
pushf
pop
sub
pop
ret
jbe
fdivrs
cmpsb
jno
fsubp
or
push
push
adc
push
fisubrl
notb
ficoms
inc
sub
les
pop
cmpsb
cmp
and
in
test
mov
lea
mov
aas
jno
aas
mov
add
dec
cmpsb
fs
pop
loop
jg
or
pop
cmpsl
sub
mov
test
push
jle
push
ljmp
ds
xor
in
push
mov
mov
mov
xchg
xchg
popf
mov
subb
jbe
cmp
scas
das
lock
test
imul
dec
push
or
cmpb
fsubrl
lret
and
out
mov
gs
and
enter
adc
inc
loop
repz
repnz
js
push
dec
mov
cmpsl
mov
jbe
cmp
or
aaa
push
jbe
lret
mov
sub
add
shrl
push
test
dec
push
insl
dec
inc
or
enter
aam
pop
jecxz
jp
xbegin
xor
das
mov
xor
movsb
shl
push
fmul
add
jle
pushf
push
ret
scas
fildll
cltd
leave
fwait
sub
sub
rep
xchg
push
or
xchg
sub
adc
inc
mov
mov
pop
aaa
adc
andl
xor
pusha
mov
inc
cmp
push
adc
fistpl
arpl
aaa
lods
xlat
out
jmp
loop
pop
iret
ds
call
add
jb
ffreep
mov
push
sbb
xchg
mov
scas
std
aam
inc
xchg
stos
daa
mov
mov
dec
push
or
outsb
cs
mov
jecxz
rorl
sbb
dec
sbb
add
insb
cltd
imul
jge
daa
testl
sub
mov
nop
xor
psllw
adc
mov
sbbl
in
sti
movsl
push
mov
pop
mov
cwtl
inc
dec
je
insl
clc
mov
jb
push
jmp
popa
sub
xor
push
dec
sub
push
jge
out
adc
push
lods
out
cli
enter
jmp
imul
push
fwait
and
dec
inc
mov
mov
mov
icebp
testl
push
adc
and
jne
cmp
xchg
mov
cli
ret
sub
push
into
xor
lods
mov
xchg
fwait
nop
jp
call
cmpsl
fs
or
adc
jbe
and
mov
fwait
repz
stos
push
insl
addr16
cmp
xchg
stos
push
test
iret
dec
mov
cmpsb
sbb
xorl
scas
and
aam
das
leave
jp
push
sbb
push
getsec
jge
jb
insl
dec
rcrb
sbb
xor
push
inc
shrb
dec
mov
and
inc
mov
push
cmpsb
je
test
mov
aas
shrb
shlb
pop
pop
xor
movsl
push
fwait
mov
cmp
add
xchg
dec
push
loopne
insb
xlat
pop
lahf
es
cmpsb
lret
and
adc
xchg
fidivrl
sbb
adc
popaw
movsl
shld
je
clc
call
xchg
push
lcall
fwait
stc
or
je
inc
jnp
sbb
sbb
xor
dec
add
xchg
imul
pop
sub
mov
jmp
outsb
dec
hlt
mov
sbb
jl
inc
dec
inc
leave
stos
dec
adc
push
iret
mov
sub
mov
and
mov
mov
sbb
pop
and
mov
mov
mov
xchg
mov
dec
sub
nopw
cmp
dec
and
add
add
or
roll
pusha
aaa
dec
or
sub
es
inc
fwait
xor
loop
mov
repnz
mov
cltd
sub
push
rcr
xchg
cmp
push
loopne
rolb
jne
mov
fistps
adcl
dec
dec
lret
lea
sbb
adc
mov
pop
mov
jae
dec
in
mov
dec
mov
nop
pop
push
push
les
sti
and
das
ret
mov
lods
jns
sbb
xchg
test
dec
lret
fs
jp
shlb
jno
mov
notb
mov
movd
xor
ret
cmp
sahf
cmpsb
jecxz
pushf
sub
fwait
pop
mov
ljmp
adc
push
divps
add
stc
aaa
mov
popf
leave
out
mov
mov
xor
sbb
outsb
fisubrl
insl
cltd
outsb
or
mov
aad
xchg
jnp
roll
mov
sub
aaa
adc
sarb
addr16
cwtl
cmpl
test
pop
adc
nop
inc
ret
jns
outsb
mov
std
mov
scas
mov
nop
cmp
pop
push
xorl
jge
pop
jmp
sahf
xchg
loopne
mov
in
dec
adc
cli
dec
and
test
rcrb
jp
add
or
int
fs
out
int3
mov
pop
sbbb
test
add
lock
jae
lea
in
in
pop
imul
aaa
test
cld
sbb
pusha
stc
and
addb
mov
pop
mov
push
ss
xor
mov
out
stc
call
clc
pop
sub
fwait
movsb
inc
push
push
inc
in
xchg
stos
out
std
lods
cmp
divb
icebp
pop
pusha
in
and
ljmp
fwait
adc
or
test
or
push
mov
lds
cmpsl
adc
sbb
jb
movb
rorl
inc
daa
sub
sti
dec
mov
out
and
enter
xchg
sub
outsl
adcl
and
int
int
mov
leave
cld
rolb
mov
enter
inc
gs
repnz
and
cmp
out
xchg
cltd
adc
ss
mov
xchg
pop
test
push
fstl
lods
or
sti
or
cli
mov
addr16
jbe
cmpsb
push
ret
ljmp
and
or
into
call
or
cmc
cmpsb
lahf
sub
jp
push
cmc
ja
push
sbb
add
or
ret
dec
add
sub
aad
jge
jg
into
sbb
leave
dec
xchg
push
test
mov
sub
push
mul
sub
fldl2t
jnp
sbb
add
hlt
mov
loop
jbe
sub
pushl
sbb
xchg
pop
aam
out
mov
sbb
pop
out
repz
lret
jecxz
push
lods
pusha
in
fisubrl
sub
std
xchg
mov
sub
je
fcoml
pop
mov
inc
lods
and
jg
pop
sbb
loope
cmp
fnstcw
loope
inc
testl
std
repz
insb
int
int3
pop
ret
ret
repz
sbb
cmc
cmp
sbb
pop
inc
sbb
xor
aam
mov
push
sub
xchg
jp
sbb
mov
xor
fs
sahf
mov
or
add
lret
js
xor
add
lret
gs
insb
psubd
pop
and
fcmovnbe
lcall
and
mov
out
cmp
xlat
mov
or
adc
negb
or
popf
adc
sarb
ja
sbb
xchg
push
outsl
in
lds
jb
add
mov
jnp
test
mov
dec
xchg
or
aad
pushf
lret
xor
dec
pop
fidivs
cltd
loop
xchg
jge
xor
jge
cmpsb
push
hlt
lret
std
sti
gs
sbb
cs
dec
adc
mov
inc
pop
es
stc
sbb
imul
repnz
xor
inc
and
sub
mov
jp
sbb
cltd
jo
sbb
push
mov
or
fwait
or
ds
jnp
cmp
or
pop
push
push
sub
lock
xor
mov
sub
xchg
aad
dec
and
std
xchg
mov
mov
add
sbb
cmpsb
clc
test
shl
inc
push
jns
loope
add
dec
movsb
jne
pop
adc
out
dec
aam
push
mov
rcll
cmp
pop
pusha
add
cltd
movsb
nop
mov
pop
and
xor
mov
fdivs
repz
outsl
jge
cld
das
or
adc
push
xor
and
add
cs
xchg
std
icebp
cld
sbb
insl
test
lret
add
fisttps
subl
lret
repnz
mov
in
das
cld
aaa
push
cld
iret
inc
sbb
mov
xchg
dec
hlt
jns
fiaddl
dec
mov
jbe
and
pop
pop
in
dec
mov
sub
xchg
div
je
cmp
cmp
stos
xchg
dec
das
add
stc
mov
push
loop
xchg
in
into
mov
jnp
push
inc
jno
sahf
pop
sub
push
inc
xor
test
or
cld
dec
clc
jmp
jp
clc
xor
les
inc
dec
mov
pop
nop
rcll
pop
jg
xchg
push
pop
inc
lods
cli
and
pop
les
or
adc
std
push
jno
push
xorb
push
in
lret
sbb
ret
xor
movd
inc
and
pop
add
dec
sahf
out
loope
fmuls
stos
pop
outsl
xor
sub
scas
push
inc
sbbl
push
or
pop
xchg
jle
popf
inc
add
jbe
inc
inc
lret
repnz
daa
xor
fwait
clc
and
outsb
mov
and
or
outsl
fisttpll
fistps
add
push
cmp
orb
add
xor
xchg
dec
pushf
lds
cltd
inc
fdivrs
mov
leave
lret
data16
loopne
lret
insl
cmp
fninit
int
inc
jl
inc
cli
stc
mov
gs
xchg
pop
sub
jecxz
mov
popf
mov
push
xchg
jo
inc
iret
stos
push
push
add
mov
jns
dec
cmpsl
fsub
mov
test
outsl
mov
loope
mov
lcall
pop
ja
test
scas
aam
sub
cmp
jno
loope
gs
xchg
pop
mov
insb
dec
lret
int3
in
repz
shlb
inc
mov
test
cli
test
cmp
sub
cwtl
jo
call
adc
pop
jb
add
mov
sub
inc
push
mov
mov
call
inc
add
testb
fsub
arpl
out
fimuls
lret
int3
sahf
fsubp
cmp
sbb
orl
in
shlb
ds
mov
jp
mov
push
mov
clc
call
ret
xor
jge
or
adc
je
xlat
push
iret
jecxz
js
mov
insb
sbb
in
push
mov
jg
push
pop
loopne
add
and
mov
cltd
or
mov
jbe
mov
ret
pop
cltd
jmp
mov
cmpsb
cmp
push
icebp
aam
xchg
repnz
xor
scas
in
fwait
pop
fcmovb
xor
xlat
dec
fcomps
mov
and
mov
push
sbb
rcll
fldcw
mov
out
sbb
push
push
lret
pop
jmp
lods
xlat
popa
and
dec
pop
aaa
push
mov
lods
ljmp
mov
psadbw
inc
data16
and
testl
jne
cld
cltd
fsubl
mov
popa
inc
jne
pop
hlt
cmp
mov
repnz
jne
sub
fnstsw
stos
mov
js
int3
inc
push
pushf
pop
leave
fidivl
adc
mov
pop
and
cmp
push
adc
movsl
sti
imul
adc
jecxz
in
in
inc
jl
and
sarl
stos
faddp
jecxz
sbb
fcompl
adc
mov
mov
cmp
jns
out
in
pop
shll
mov
aaa
scas
add
inc
jecxz
dec
pop
sbb
mov
xor
add
mov
mov
xlat
aam
mov
mov
xor
sbb
test
fistpll
push
sub
mov
or
in
enter
sbb
pop
lahf
ss
or
sub
cld
xchg
fimull
jae
rcll
mov
aad
mov
rcr
in
movsl
add
adc
into
cltd
addr16
xor
aaa
sub
jnp
jmp
mov
add
or
cwtl
inc
lret
pop
testb
xor
or
mov
mov
sub
sbb
push
adc
movsl
out
cld
popa
mov
xchg
cmp
xchg
pop
int3
mov
sub
int
jmp
cwtl
leave
push
sub
sbb
rcrl
loope
pusha
and
cmp
jg
sub
push
mov
mov
mov
inc
out
aad
fisttps
aas
loopne
or
push
cli
sub
dec
mov
scas
frstor
push
rcl
stos
aad
and
and
sbb
ds
gs
pop
adc
mov
pop
fidivl
inc
dec
dec
out
xor
adc
test
lods
dec
repz
push
inc
in
bound
repnz
mov
cli
and
push
iret
lea
inc
cwtl
inc
sarb
fwait
xchg
fisttps
sarl
scas
lods
xchg
cmp
add
inc
pop
mov
push
xchg
add
mov
outsb
mov
rclb
daa
add
and
inc
iret
mov
add
and
inc
cwtl
dec
cmp
repz
fisubs
push
lcall
imul
adc
jmp
imul
push
adc
aam
insb
and
sbb
jl
add
adc
sub
repz
fs
dec
adc
arpl
leave
enter
sub
lahf
mov
int3
lret
jbe
jl
mov
jecxz
sbb
jno
mov
sbb
pop
xor
loopne
ret
jns
jmp
fbstp
add
inc
testl
jl
test
daa
lahf
les
sub
shll
insl
daa
push
out
frstor
cld
mov
stos
iret
shrb
popf
sarl
push
jns
mov
or
and
cmp
je
arpl
add
mov
mov
jg
fmull
roll
mov
mov
mulb
cld
pop
cli
pop
mov
xor
pop
add
jbe
xor
loope
pop
push
sti
in
nop
gs
repnz
fsub
xchg
mov
stos
jns
add
cmp
inc
or
imul
mov
adc
jge
loope,pn
dec
and
cmpsl
dec
movsl
decl
lcall
movsb
or
ret
test
mov
scas
inc
jae
fisubrl
mov
adc
shrl
into
outsl
cmp
addr16
shrb
pusha
jno
and
sub
nop
scas
imul
fistps
mov
or
add
mov
dec
mov
xor
xchg
push
and
adc
fdivl
notl
mov
cmp
mov
pop
or
int
mov
add
pop
std
lahf
fisttpll
xor
pop
mov
dec
cmpsl
adc
cltd
jbe
shlb
out
mov
jno
pop
popa
leave
out
cld
ret
jg
add
push
divb
outsb
data16
mov
mov
dec
cmp
bswap
jbe
rcr
jnp
mov
jp
or
add
out
xor
fnstcw
cmp
sbb
pop
into
xor
ljmp
filds
pop
gs
rorb
lods
mov
mov
pop
lahf
mov
or
cmp
sub
cmp
adc
gs
adc
sti
imull
pushl
dec
je
adc
aaa
sbb
mov
push
sub
in
jmp
aaa
adc
shll
add
mov
fs
cmp
jecxz
leave
jns
scas
push
dec
pop
pop
mov
imul
pop
fwait
test
cld
jg
or
sub
jl
xlat
bound
jp
and
sub
test
and
xor
imul
add
int3
cmp
out
aam
mov
lds
jnp
repz
stos
fcmovnbe
adc
js
push
cli
std
aad
sub
jnp
inc
nop
ror
lahf
push
mov
mov
and
xchg
xchg
ja
lods
repz
in
jge
mov
popf
pop
ja
xchg
inc
aas
out
dec
add
adc
stos
sbbb
or
jp
xorl
lcall
jmp
cmp
dec
xor
pushf
sbb
xor
jmp
cmp
int
jno
addr16
pop
sub
lds
loop
flds
sti
stos
mov
scas
jge
imul
repnz
loop
repnz
jecxz
arpl
push
fdivrs
xor
xor
dec
mov
mov
pop
xchg
xchg
aam
jnp
out
sub
inc
sarb
inc
js
mov
mov
fnsave
arpl
pop
pop
push
ret
pushf
jg
sarl
push
or
insb
sub
sub
mov
popa
jns
pop
rcrb
pop
jae
or
mov
inc
pushf
fwait
rolb
cmc
xchg
add
xchg
mov
fnstsw
and
jae
pop
sbb
movsl
cs
mov
out
int
adc
iret
adc
push
add
dec
push
jb
out
scas
pop
xor
loop
jp
mov
loope
sbb
mov
jae
sub
loopne
shrl
push
cmp
sub
mov
push
fnstcw
mov
add
mov
lret
push
push
sbb
or
push
push
mov
adc
push
jno
mov
push
mov
xchg
pop
outsb
xor
and
mov
ret
jnp
imul
int3
jp
out
lods
inc
cmp
pop
mov
add
mov
add
and
imul
jb
imul
fucomi
adc
test
sub
jne
sahf
adc
jb
outsb
mov
scas
dec
push
push
cmp
popf
fimuls
daa
inc
les
cmp
push
decl
ss
mov
xchg
test
jle
out
sbb
addr16
xchg
or
das
out
pop
lcallw
lcall
cmp
jae
pop
mov
add
loopne
std
jo
jbe
or
in
push
fcoms
mov
cmp
adc
xchg
cmp
push
mov
les
shr
cltd
aad
pop
jg
xchg
divb
or
add
jne
cwtl
dec
lret
fucomip
popl
sbb
xchg
inc
inc
andl
inc
fimull
lret
cltd
mov
iret
add
sbbl
pop
or
dec
dec
lret
fsubl
mov
out
jg
mov
adc
pavgw
inc
popf
aad
and
xorb
rclb
adc
test
mov
aam
adc
lea
sub
xchg
std
filds
ljmp
xchg
adc
mov
adc
cmp
push
or
jns
jno
ret
push
lcall
xor
shl
sub
test
orl
and
lahf
push
sbb
pop
repnz
fstl
lcall
dec
jb
cltd
xchg
dec
sub
adc
cld
cli
xor
jge
adc
iret
nop
and
pop
sti
xorb
or
push
fisubrs
lcall
in
arpl
fmull
call
sti
mov
scas
sbb
out
inc
sahf
mov
pop
push
push
dec
je
daa
sbb
mov
nop
dec
scas
pop
xchg
mov
ds
mov
xor
sbb
lds
cmp
sub
inc
dec
enter
inc
push
or
sbb
mov
xchg
call
mov
pop
jne
stos
xor
lea
cwtl
adcl
sub
leave
mov
mov
gs
push
sahf
mov
into
or
scas
xchg
mov
sbb
add
std
and
add
or
inc
fwait
push
insl
adc
push
fstps
je
inc
sbb
jecxz
movsl
bound
xchg
xchg
inc
mov
xor
faddp
mov
popf
test
push
std
push
lock
cli
inc
mov
mov
pusha
jns
sub
data16
addl
imul
int
pop
pop
cmp
inc
int3
dec
adc
hlt
jo
mov
or
xchg
push
sbb
mov
aad
outsb
sub
sbb
pop
cmp
lcall
mov
adc
sub
inc
sar
sub
lods
mov
or
and
data16
loopne
neg
inc
fimuls
jns
les
stc
sbb
sbbb
xchg
and
std
movsb
ds
push
pop
pop
out
dec
sarl
cmp
pop
mov
ret
jae
int3
cld
cmpb
mov
lea
adc
cld
or
dec
mov
mov
mov
dec
scas
aas
pop
and
es
mov
int
gs
shr
js
mov
or
subb
inc
rolb
pushf
sub
jecxz
jp
jmp
mov
loopne
cld
test
sbb
xchg
scas
out
or
jle
in
xor
add
push
push
cwtl
out
pop
pusha
aad
imulb
add
xchg
enter
dec
data16
push
stos
adc
mov
inc
jae
fmull
imul
adc
aaa
nopl
mov
mov
fnsave
dec
xchg
adc
fnstcw
xchg
popa
movsb
push
jb
out
push
xchg
xchg
push
cmp
pop
add
mov
xor
adc
jmp
xlat
or
in
and
xchg
sti
mov
or
push
fists
inc
and
add
out
shlb
fsts
das
jle
mov
fsubl
adc
shl
stc
sub
ds
ds
and
lret
gs
adc
push
jo
scas
inc
loope
cltd
mov
cmp
mov
fs
mov
enter
insl
jne
cld
subl
inc
sbb
lret
js
cmpsb
ja
jg
fcmovnb
inc
sub
loopne
and
fsubs
fildll
mov
shll
test
or
stos
and
call
daa
sbb
psrlw
mov
lret
insb
cmpsb
fidivl
je
pop
mov
xor
jb
jmp
aam
je
push
in
mov
test
dec
xchg
enter
arpl
imul
aam
fidivs
xchg
fidivs
adcl
mov
inc
dec
in
mov
adc
out
cmp
setp
adc
sti
scas
out
outsl
ret
cld
into
dec
dec
mov
movsl
add
insb
fildl
mov
mov
jb
insb
mov
in
or
adc
and
out
cltd
and
test
mov
sar
movsb
test
add
sub
add
imul
adc
pop
xor
pushl
mov
shrb
iret
jae
cmp
adc
xchg
xchg
jno
adc
lods
push
push
mov
inc
es
insb
dec
out
in
mov
sub
inc
rorb
inc
inc
cmc
lret
add
xchg
lret
pop
or
ret
fisttpll
push
shl
adc
add
and
int3
jbe
inc
pop
loopne
inc
pop
jmp
pop
pmulhuw
xchg
mov
jbe
je
xor
xchg
sub
ret
mov
adc
mov
push
push
repz
loop
fs
mov
sbb
sti
cltd
shld
sub
js
jnp
movsb
adc
jns
mov
je
inc
cmp
cld
outsb
loopne
adc
or
mulb
clc
imul
adc
xor
dec
decl
mov
dec
cmp
popf
pop
sbb
int3
sbb
sub
and
adc
sbb
popa
movb
mov
sbb
lods
stos
mov
mov
xor
jl
or
int3
fs
and
mov
push
call
popa
js
jo
bound
and
pop
inc
push
in
mov
xchg
fcoms
cmp
lds
jl
int3
sub
jmp
sbb
fstpt
leave
mov
outsl
inc
shll
adc
or
imul
push
leave
xlat
adc
sbb
mov
test
cmpsl
sub
or
scas
dec
xor
mov
rorb
hlt
adcl
adc
xchg
xor
jmp
nop
add
cmp
sbbl
add
lret
mov
aas
jbe
xchg
mov
mov
nop
xor
or
fstpl
and
fidivrl
mov
xrelease
sub
aaa
pop
je
xchg
xor
xor
mov
adc
mov
or
notl
pop
arpl
jmp
ret
fwait
sarb
scas
fbld
xor
ds
popf
outsl
popa
insb
and
xlat
or
in
jnp
xchg
mov
loope
mov
and
xorb
js
lret
cwtl
dec
cli
or
pusha
mov
xor
imul
push
insl
in
aad
in
je
cmp
mov
jb
add
int
adc
sbb
mov
aaa
adc
lea
sub
lret
inc
lds
and
mov
or
imul
sbb
add
or
divb
push
out
push
and
adc
pop
or
aad
test
jmp
push
jne
fstpt
scas
popf
fucomip
mov
cmp
push
idivl
push
cmp
pop
pop
xor
and
lock
xor
int3
mov
sub
adc
pop
pop
cmp
loop
cmp
add
push
imul
mov
jno
adc
push
sbb
ljmp
mov
add
mov
and
aad
test
imul
idivb
out
lock
adc
loope
mov
stc
inc
push
xlat
aad
sbb
mov
je
in
push
mov
dec
and
loopne
dec
dec
int3
sbb
and
les
test
or
push
push
sub
test
int3
mov
jne
stos
nop
add
rcr
out
cltd
mov
sub
xor
cmp
addb
mov
decl
adc
push
rol
das
inc
orb
or
imull
or
daa
sbb
mov
add
jg
cmp
scas
jno
out
cmp
into
dec
and
and
sub
xor
jecxz
int3
pop
cmp
cld
mov
cmpl
xor
and
sbb
ss
cltd
dec
addb
mov
pop
repz
cltd
mov
in
push
cwtl
push
mov
sbb
pushf
clc
add
mov
sar
rorb
mov
jmp
test
jg
xor
test
mov
adc
or
push
fisubrs
repnz
mov
ret
push
sti
ror
stos
dec
les
jmp
push
daa
sbb
lea
sbb
xor
and
loope
aad
mov
addr16
jl
push
push
rol
xor
inc
shlb
xorl
hlt
and
xchg
dec
jns
mov
ss
and
mov
and
iret
mov
subb
inc
bnd
mov
adc
pusha
mov
xchg
add
xchg
jge
in
orl
testb
and
cld
adc
mov
shl
ja
ss
cmpb
xor
das
in
sub
dec
das
and
cmc
sub
adc
loop
shll
outsb
dec
adc
mov
pusha
call
outsl
rclb
pop
fwait
xlat
pop
icebp
dec
outsl
mov
js
jns
je
movsl
lock
push
xor
dec
xchg
cmp
mov
pop
ja
jmp
add
fnstcw
jnp
fistpl
notb
std
mov
arpl
cmp
xchg
cmp
adc
mov
shll
ja
das
dec
jl
sub
cld
mov
or
inc
jo
test
inc
leave
movsb
mov
incb
test
xchg
pop
jb
aas
mov
mov
hlt
sahf
mov
std
lret
lock
aam
pop
repnz
dec
push
or
arpl
in
jp
stc
mov
jns
in
dec
mov
sub
jecxz
inc
or
jno
js
out
xchg
lock
inc
dec
aad
fisubrs
mov
push
cs
pop
in
mov
xor
sub
test
test
xor
out
push
xchg
clc
xor
cld
dec
cmc
mov
inc
dec
mov
add
cmp
sbb
inc
push
xchg
dec
fcoms
and
add
ret
push
cmpl
outsl
push
fcomps
dec
sbb
imul
inc
mov
bnd
inc
insb
out
add
or
fcoms
inc
fnstcw
inc
mov
das
sbb
jno
test
call
les
call
xchg
mov
xchg
cltd
ja
push
inc
cs
inc
ret
ret
imul
sub
add
adc
test
xchg
mov
pusha
repz
in
outsl
or
xor
or
push
es
dec
dec
jecxz
xchg
dec
sub
xchg
cmp
sti
clc
inc
lret
stc
lods
and
xchg
pop
clc
xor
sbb
insl
iret
hlt
popf
out
push
iret
xchg
pop
mov
rcl
sbb
pop
pop
inc
outsb
mov
addr16
popa
xchg
iret
adc
repz
push
mov
sbb
mov
push
rcl
mov
pusha
neg
outsb
sub
xchg
out
sbb
ja
fstpl
add
jp
jp
popa
jnp
fidivl
cltd
pop
jp
pop
dec
pop
push
inc
cmp
addr16
xlat
pushf
out
out
ficoms
shrb
loop
and
dec
loopne
dec
add
sub
ss
loop
mov
xor
dec
pop
scas
sub
test
mov
jbe,pt
in
loop
push
fistpll
jp
mov
mov
cmp
loop
xchg
and
nop
addr16
pop
comiss
inc
inc
int
loope,pn
pusha
mov
fists
gs
das
idivb
mov
or
jmp
inc
int
mov
or
push
and
leave
in
loope
xchg
insl
gs
cmp
bound
ljmp
mov
ficompl
leave
jl
push
clc
shlb
mov
sbb
sbb
repz
lcall
rorl
stos
mov
xor
add
pop
sbb
int
sahf
add
push
hlt
fwait
arpl
addr16
sahf
mov
iret
lock
push
je,pn
je
lret
and
lea
inc
outsb
ret
push
icebp
test
aam
repz
mov
sahf
adc
inc
dec
dec
xchg
add
scas
push
addr16
xchg
js
and
js
push
mov
pop
sarl
aaa
sbb
push
pop
inc
sub
and
xor
cmp
xor
scas
sahf
lds
xchg
fldz
fst
dec
sbb
sub
mov
push
fistl
push
xchg
push
in
sahf
adc
ss
dec
jmp
xchg
add
push
loopne
int3
sbb
repz
sbbb
ljmp
cltd
mov
inc
jb
pushf
out
pop
lahf
sbb
icebp
icebp
imul
inc
fists
cmc
incb
cmp
mov
or
loope
mov
dec
jmp
jg
das
jge
lret
sarb
xchg
sub
mov
push
in
mov
add
push
push
xlat
into
jge
mov
les
insb
ss
int3
inc
xlat
mov
jb
fs
mov
repz
outsw
cmpsl
or
mov
sub
xor
lret
mov
js
mov
dec
add
pop
mov
xchg
ljmp
mov
cmp
adc
jl
sbb
lds
push
or
or
and
mov
gs
xchg
into
out
fucomip
jno
or
xchg
pop
arpl
daa
repz
lret
jnp
and
sub
sarb
cwtl
into
mov
pop
push
or
je
dec
mov
cmp
push
mov
in
add
adc
imulb
pop
jmp
test
sarb
inc
cltd
add
lret
push
imul
fcoms
fsubrp
dec
pusha
pop
fstpt
out
stc
pop
fistps
cltd
xchg
xchg
lea
lock
repz
push
pop
mov
pop
lret
repz
jmp
sub
hlt
inc
fistps
dec
test
imul
into
das
adc
movsl
js
int
dec
jecxz
mov
xor
das
pop
and
and
sbb
and
cmpsl
dec
pop
mov
mov
shlb
das
rorl
clc
or
mov
pop
mov
imul
fidivl
adc
dec
movsb
add
lret
inc
lods
add
jno
mov
adc
imul
fisubrs
or
jle
push
xchg
decb
sbb
ret
jecxz
sub
pop
dec
jecxz
push
inc
fwait
sbb
int
pop
sti
push
bound
cld
mull
int3
stc
lds
in
mov
insl
ja
inc
test
arpl
xchg
fiaddl
test
xchg
dec
cmpsl
sbb
lock
popa
dec
push
into
mov
dec
std
ljmp
imul
adc
fistpl
cmp
pop
nop
mov
add
mov
mov
shlb
and
aaa
mov
out
xor
mov
ja
mov
cmpsb
mov
imul
mov
cmp
test
faddp
std
adc
aas
icebp
add
adc
out
into
fldt
xchg
lds
jb
es
das
addr16
cmp
fyl2x
lods
and
push
lds
mov
sub
cs
mov
cmp
jo
fs
mov
and
xlat
cltd
pop
enter
push
imul
dec
mov
cli
cmp
jae
pushf
add
cmpsl
sbbl
shll
pop
mov
or
push
mov
fsubl
lret
cli
mov
push
mov
xchg
or
push
addb
push
clc
sub
adc
repz
out
fcompl
dec
xchg
pusha
aam
imul
rclb
push
repz
arpl
inc
xor
xchg
pusha
mov
dec
test
popf
and
mov
adc
outsl
add
outsl
nop
and
dec
push
sti
shll
dec
push
xchg
dec
mov
test
inc
jecxz
dec
jle
int3
mov
mov
mov
adc
pushf
ficoms
out
push
dec
push
cwtl
insb
cmp
add
stos
lods
push
sub
sti
push
negb
repz
shl
mov
jb
gs
dec
cld
cmp
xlat
lds
cltd
add
cmp
mov
mov
outsb
add
loope
shl
sbb
sti
imul
inc
sbb
pop
shrl
and
mov
sti
push
xchg
repz
xchg
call
cmp
mov
and
clc
or
lret
adc
ret
out
mov
scas
ljmp
repnz
repnz
adc
roll
inc
inc
int3
sbb
push
js
clc
int
xchg
lods
test
ljmp
jns
lcall
mov
loopne
je,pt
iret
jne
pop
dec
inc
subb
mov
inc
mov
pop
and
test
sbb
clc
fsubrl
xchg
addr16
ret
or
or
std
push
push
or
pop
or
pop
sbbl
xchg
cld
inc
subl
inc
xchg
cwtl
push
sbb
aaa
lock
test
sub
call
loop
call
in
orl
std
outsl
mov
and
and
xchg
or
loop
es
add
jb
in
push
inc
aaa
rcrb
aas
mov
xor
subb
ss
mov
inc
mov
addr16
push
cltd
arpl
jmp
cmpsl
pop
xor
pop
mov
in
pop
cmc
dec
sub
cmp
inc
push
or
mov
lods
push
push
lods
iret
xchg
xor
cmp
cmpsb
in
in
icebp
addr16
push
jl
and
and
xchg
pop
fdivp
and
in
out
or
cmc
adc
fs
push
and
sysenter
xchg
lret
ret
mov
mulb
jns
sbb
or
mov
adc
or
lds
test
jmp
cld
les
sub
push
lea
lcall
lods
mov
fistps
and
xchg
sarb
rolb
popa
xchg
inc
in
sbb
add
jmp
sahf
xchg
dec
int
sarb
and
push
mov
shlb
add
mov
push
jg
pop
pop
lods
cmp
arpl
ret
notb
and
cmp
dec
and
push
sub
nop
push
xor
test
lea
int3
jbe
repz
jae
lcall
enter
dec
xchg
in
clc
insb
aam
leave
jmp
fldenv
sbb
loope
fists
jbe
loope
inc
mov
cltd
jae
dec
mov
xlat
push
mov
cmp
cmp
jno
fwait
rclb
pop
into
xor
faddl
cmp
les
push
cmp
hlt
das
mov
sti
mov
iret
rcll
sub
in
enter
js
cmp
filds
xchg
cmp
push
push
mov
lcall
popf
and
jp
dec
add
jmp
dec
out
divb
push
in
mov
rorb
lds
lcall
xor
ret
mov
stc
fistpl
xorb
daa
loope
in
mov
sbb
push
xchg
xor
testb
je
jbe
fildll
dec
xlat
mov
mov
push
nop
fs
fisttpll
stos
dec
mov
cmpsl
outsl
and
dec
pop
call
std
loop
sub
mov
jae
in
mov
mov
cmp
dec
push
cmp
cld
fwait
push
sti
inc
cltd
lret
movl
sbb
and
mov
dec
xchg
aas
push
scas
cmpsb
sahf
fnstenv
inc
negb
or
lods
popf
out
into
cld
popa
dec
stos
and
add
test
inc
inc
idivl
inc
and
sub
push
movlhps
jecxz
xchg
dec
leave
pop
test
fsubrs
lahf
xor
sub
pop
cmpsl
sbb
inc
fsubrs
sbb
push
pop
pop
or
stos
cmp
and
adc
dec
call
xchg
add
shrl
in
jl
decb
cmp
sbb
adc
sbb
andb
rol
pop
in
sbb
push
xor
stos
xchg
repnz
dec
and
fsubs
aas
inc
xor
mov
cli
scas
adc
mov
test
inc
mov
mov
scas
daa
mov
test
xchg
shlb
pop
shr
pop
enter
lret
repnz
adc
jne
lcall
lahf
in
and
cwtl
mov
stc
out
dec
cmp
test
andb
cld
call
xchg
das
cs
repz
sbb
popf
cmc
xchg
inc
in
mov
sti
movsb
pop
sbb
cmc
push
jns
leave
ja
push
shll
pusha
inc
sbb
jge
fsubs
add
mov
cltd
idiv
xchg
dec
sbb
or
fmull
scas
adc
adc
jbe
xchg
sti
and
loope
dec
cli
or
xor
in
mov
cmp
movsb
inc
je
out
test
movsl
lret
inc
cmp
jmp
loope
xor
fisubl
jmp
das
cmc
pop
sbb
xchg
fnsave
push
mov
inc
mov
inc
bswap
notb
insb
jle
pop
cmp
out
lcall
outsb
inc
cmp
push
test
out
adc
ror
sahf
test
int3
loop
jmp
inc
jnp
jp
push
jb
rcll
js
idiv
test
ss
dec
enter
sbb
jb
aam
orl
test
jecxz
js
sub
dec
popa
popf
arpl
je
or
cmp
mov
mov
sbb
mov
cmpsl
loopne
push
es
repz
repz
dec
mov
mov
cmpsb
std
in
cmpsb
es
mov
ror
xor
fnstenv
ficompl
lahf
xchg
cmp
sbb
cmc
xchg
out
mov
stc
xor
jle
jmp
out
dec
movsb
lds
jne
fildll
fmuls
insb
or
mov
mov
inc
inc
arpl
sti
jo
jle
or
hlt
rclb
jnp
pop
add
add
add
dec
push
cltd
push
loope
insl
loopne
adc
xor
testb
stos
pop
sbb
mov
test
and
cs
sbb
iret
add
push
pop
xchg
mov
decb
ljmp
mov
jno
pop
and
insb
mov
test
iret
sbb
ja
in
fwait
mov
dec
rcrb
sbb
xchg
add
stos
jo
add
sbb
xor
out
pop
call
dec
or
or
push
xchg
lods
mov
cwtl
xchg
cltd
out
xlat
or
ficomps
js
mov
cltd
push
andb
jo
sub
dec
les
xor
fadds
xchg
int3
mov
mov
shll
push
pop
ret
cld
rcll
adc
inc
jmp
sbb
mov
inc
pop
or
inc
sbb
adc
enter
stos
test
daa
push
cmp
out
sbb
xor
mov
lret
mov
xchg
fwait
loopne
inc
fsubr
call
popl
xchg
xchg
push
jmp
lods
cmp
lahf
mov
mov
outsl
and
xchg
dec
iret
jmp
sub
sub
add
dec
cmp
adc
or
xor
pop
aaa
xor
inc
movsb
push
pop
sbb
repnz
cmpsb
cli
jo
xchg
imul
and
push
jmp
pop
ret
mov
mov
adc
mov
sarl
in
out
clc
push
mov
and
add
sarb
ljmp
movsb
mov
repz
dec
bound
cld
lods
mov
jmp
mov
mov
xchg
lods
push
sub
push
lds
fwait
xor
cli
vmread
std
cli
jecxz
sbbb
test
int3
pusha
sti
js
aad
js
les
pushf
and
shrb
imul
xor
mov
push
cmp
dec
cli
adc
jmp
aad
push
outsl
cmp
cmp
mov
ret
test
cltd
sbbb
sbb
iret
test
outsb
sub
pop
ret
sub
pop
jns
hlt
fidivrs
fnstenv
xlat
mov
mov
jno
or
je
mov
cli
out
ret
test
dec
sub
cltd
mov
movsl
test
aaa
mov
dec
fimull
push
lahf
in
xor
cmp
fidivl
jle
push
mov
lock
add
pop
aam
mov
ljmp
dec
adc
jns
mov
cmc
inc
jbe
lea
dec
je
jnp
jl
lea
cmp
or
sub
cmp
loop
push
clc
loopne
cmpb
mov
jmp
mov
stos
insb
cmp
in
pop
std
sub
mov
aas
adc
sbb
cmc
push
lods
xchg
mov
mov
rclb
lods
dec
or
inc
mov
xchg
fisubrl
push
test
xchg
or
sub
lds
imul
scas
decl
xchg
rcrb
test
iret
pop
repnz
dec
and
shll
mov
int
mov
add
sub
ds
jb
into
inc
inc
inc
add
add
cwtl
sbb
push
popa
mov
push
insb
mov
int3
push
call
ret
jo
repnz
push
test
sbb
xchg
mov
out
stc
or
inc
xor
dec
xor
js
mov
pop
dec
adc
and
repz
push
adc
mov
outsl
adc
jns
sarb
aas
push
xchg
sub
fwait
push
inc
sub
push
shlb
pop
mov
mov
dec
push
movsb
jle
orl
xor
bound
cmp
and
fcompl
imulb
loope
cmp
cltd
shlb
sub
mov
sub
outsb
mov
sti
ror
ret
mov
frstor
loop
mov
mov
fcmovnb
rcrl
out
ljmp
xor
lods
loope
add
int
jne
xor
hlt
aaa
std
mov
dec
ret
and
repnz
fistps
fsubl
xchg
mov
mov
or
filds
inc
pop
push
or
push
insl
jg
lds
fistpll
cmpsb
mov
movsl
xlat
lock
std
push
das
xchg
sbb
mov
sti
push
push
pop
ret
jne
mov
outsb
push
ret
xchg
lds
test
jno
adc
jb
push
cld
mov
imul
clc
inc
or
push
out
lods
fnstsw
pushf
jp
dec
pushf
imul
lea
or
xchg
fadds
leave
out
stos
mov
daa
xchg
sub
lret
out
add
pusha
stos
int
inc
and
adc
aam
push
psraw
mov
pop
aad
xchg
rcrl
jmp
es
lods
xchg
adc
pop
loope
mov
inc
sub
aad
xchg
jmp
mov
inc
shll
adc
test
test
lods
adc
data16
add
dec
sub
push
and
sbb
jle
int3
jl
lods
cmpsb
inc
dec
out
inc
lret
pop
inc
or
cmp
mov
test
push
push
mov
sub
lret
push
inc
aad
jmp
cmp
insl
dec
sub
cmp
imul
mov
mov
icebp
inc
lcall
dec
outsb
adc
cwtl
push
pop
int
inc
sbb
scas
xchg
aas
daa
pop
loop
outsl
add
data16
int3
arpl
mov
gs
std
imul
dec
inc
add
fs
stc
push
inc
lret
cmpsl
pop
stos
ret
hlt
pop
jg
adc
loop
inc
in
int
hlt
ret
pop
rolb
js
jns
into
in
addr16
rorl
add
sub
and
loopne
imul
pop
xchg
leave
mov
mov
cmp
je
sub
int
outsl
and
sti
add
mov
testb
aaa
xor
cmp
sbb
add
dec
mov
mov
cwtl
adc
lea
xor
pop
lods
jne
push
inc
cmpl
dec
xor
xchg
push
sbb
das
movsl
dec
add
sbb
cmpsl
pop
sahf
push
dec
out
dec
xor
ljmp
test
outsl
xchg
inc
cmp
stos
jns
xor
cmp
mov
popf
mov
insl
dec
pop
xchg
ljmp
call
dec
mov
dec
fsubrl
mov
cmpsl
jnp
pop
or
sbb
xor
or
das
sbb
and
xor
adc
mov
fnstsw
in
jecxz
mov
and
shl
and
jbe
mov
adc
jecxz
mov
pop
movsb
mov
push
lds
pop
aaa
jns
push
popa
sarb
sti
dec
cld
jns
adc
inc
and
imul
insb
fwait
scas
popf
dec
jb
jp
int3
rcrb
popf
sahf
insb
negb
or
or
push
cs
fisttps
aad
jle
jno
cli
pop
xchg
cmpl
std
lea
fsubrs
mov
frstor
rolb
push
loop
mov
popa
test
sbb
jns
add
jns
call
or
mov
jne
idivl
lock
adc
mov
into
fildll
cmc
cld
mov
flds
cld
push
mov
popa
pop
cltd
pusha
push
adc
push
add
cmp
aad
inc
dec
popa
fistpll
add
call
leave
lea
mov
bnd
push
jl
cmp
jb
push
test
mov
les
insl
fcmovnb
repnz
das
loopne
sbb
sub
arpl
das
xlat
cld
sub
imul
add
xchg
fidivrl
jbe
dec
int
cwtl
pop
stos
rorb
pop
adc
testl
and
dec
mov
movl
lret
int3
push
ds
cmc
aaa
push
imul
mov
mov
push
xchg
shll
ret
dec
lcall
push
lds
adc
fidivl
inc
sbb
loop
test
jae
out
in
repnz
insl
xor
push
add
out
jg
jo
jp
xchg
loopne
clc
push
cwtl
push
push
rclb
xchg
xor
jne
sub
adcl
lea
xchg
mov
cmc
je
mov
jo
out
aad
fmull
test
or
adc
cmc
fdivrl
jg
add
enter
bound
std
mull
pop
cltd
std
out
jb
jno
into
jg
inc
jbe
icebp
repnz
pusha
push
aas
xchg
xchg
inc
push
int
inc
or
mov
push
les
imul
pop
add
lods
aam
lret
push
mov
shll
pop
mov
push
xchg
fdivrl
jb
lahf
jnp
fmuls
aad
fisttpll
gs
push
mov
mov
std
sbb
out
xlat
mov
dec
dec
outsb
rcll
mov
test
dec
cmp
mov
xchg
mov
jbe
sub
faddl
push
shlb
push
sahf
mov
jg
xchg
insl
sub
loopne
iret
jle
push
mov
xchg
lods
mov
push
hlt
out
lret
jb
lods
arpl
push
adc
es
jg
adc
std
pushf
scas
jl
inc
push
repnz
lods
sbb
daa
jne
aad
and
icebp
mov
or
loope
sbb
jp
jnp
mov
push
stos
daa
ret
sub
push
push
adc
sub
sub
mov
mov
jle
aaa
push
fldcw
pop
popa
int
call
xor
jbe
push
in
add
mov
adc
les
ret
jmp
xchg
jb
mov
mov
sub
and
dec
dec
inc
insl
sub
jecxz
sub
mov
adc
fucomp
iret
xor
and
or
pop
test
mulb
push
adc
rcr
mov
xor
mov
rorl
mov
sbb
loop
inc
out
dec
and
lahf
sub
sti
lahf
push
lcall
ret
divb
das
repnz
push
lret
out
dec
mov
cld
lret
pop
aam
ffree
push
sub
pop
cmp
dec
rcrb
outsb
pop
xor
sub
shlb
jb
test
lret
add
aaa
mov
loop
sbb
in
xor
add
cmp
test
xchg
mov
popf
jg
hlt
lret
iret
loope
sbb
xchg
xchg
push
add
inc
adc
in
cmp
dec
mov
roll
jno
xor
mov
lods
pop
mov
mov
pop
jecxz
cli
jl
mov
ss
sub
or
leave
jecxz
mov
jbe
pop
cmc
jge
cmp
xchg
sarb
sbb
jae
inc
or
es
lret
inc
mov
insl
sbb
adc
xor
or
jl
adc
mov
pushf
push
imul
xchg
dec
push
aaa
outsl
repnz
mov
ss
cmc
into
sub
imul
push
scas
icebp
mov
mov
std
orl
and
add
inc
daa
call
enter
or
leave
inc
and
and
cwtl
fs
xor
movsl
jecxz
outsb
mov
aas
add
out
mov
adc
rcrl
test
rolb
rcrb
lds
dec
dec
fldz
pop
or
jmp
aam
push
push
cmp
adc
stos
lcall
scas
adc
mov
shll
movsb
loopne
iret
int
es
pop
repz
mov
lods
sbb
stos
push
push
in
push
adc
inc
enter
sarl
push
xchg
dec
or
xchg
mov
hlt
fldcw
loopne
shrb
push
out
xor
das
sub
lret
jl
jl
xor
in
mov
aam
clc
es
cmp
or
fnstcw
ret
sbb
jp
ds
xor
mov
out
xchg
and
xchg
jg
pop
out
pushf
sub
sub
imul
dec
lock
xchg
and
xor
or
testl
shll
or
test
mov
loope
inc
inc
dec
movsb
pop
outsl
dec
cmp
xchg
out
cs
in
out
or
loope
or
pop
pop
enter
jns
int3
ja
xor
movb
out
sbb
daa
xchg
lods
inc
jmp
mov
adc
lods
mov
js,pt
addr16
jecxz
repz
inc
cmpsb
clc
pop
xor
idivl
ja
sbb
je
sub
and
or
lea
loop
ret
insb
jnp
lcall
push
loope
mov
mov
jo
lahf
cmpsl
cli
xlat
add
sbb
adc
cli
stos
xchg
fildl
bound
mov
pusha
xchg
inc
mov
push
or
movb
cmpsb
mov
cld
mov
shl
mov
mov
incl
aad
int3
in
and
stc
dec
lret
push
pop
jae
add
adc
push
and
jecxz
cmp
jmp
mov
out
xor
mov
fcompp
mov
inc
orl
jns
movsb
stos
mov
int
push
mov
xor
sub
dec
pmaxub
imull
xchg
mov
mov
dec
insl
or
aaa
lods
fadds
cmpsb
add
outsl
insl
push
jnp
mov
divb
xor
ljmp
aam
jg
sub
cli
dec
add
shrb
mov
subl
imul
out
pop
push
inc
jmp
leave
nop
in
leave
cmp
imull
mov
push
dec
xchg
in
and
shlb
cltd
insb
pushf
daa
mov
pop
dec
push
cmp
jmp
xor
insb
negb
pop
sahf
push
cwtl
xchg
xchg
dec
rcrl
enter
mov
ss
xor
cld
subl
mov
sub
mov
sub
shrb
adc
mov
mov
sbb
imul
imul
jge
fwait
mov
xor
pop
pop
inc
cmp
sub
xor
cltd
out
leave
xchg
pop
int3
mov
mov
pop
daa
loope
pop
ficomps
jae
push
aam
ret
subb
fdivrs
sub
mov
pop
add
jbe
xchg
or
mov
fadds
inc
xor
and
push
adc
sahf
ja
ds
addr16
add
jne
addr16
or
xchg
dec
fwait
jo
xchg
aam
sti
test
cmpsb
movsl
mov
es
cmc
xchg
leave
ret
xchg
iret
push
icebp
test
setb
jno
fisttpl
nop
and
movsb
ljmp
fldl
mov
xor
xchg
mov
mov
mov
mov
xchg
pop
xchg
rorl
sahf
les
hlt
adc
cmpsl
sbb
scas
into
sahf
xor
movsl
in
add
ret
add
push
cmp
cmp
lcall
and
cmc
inc
aas
ja
xor
cmp
push
loope
push
inc
and
mov
stos
mov
jg
add
outsb
in
out
cmp
jmp
aam
rcll
ss
sbb
mov
mov
sbb
fsubrl
push
notb
push
and
mov
repz
pusha
push
dec
clc
xor
outsb
xchg
mov
addb
cmp
lret
pop
jb
sub
pop
out
lds
mov
repz
emms
insb
xchg
fstps
mov
pusha
aam
jp
lret
imul
sbb
iret
repz
les
push
push
pop
cmpsb
xchg
or
push
push
imul
popf
scas
icebp
shll
dec
dec
push
xorb
mov
cmpsl
sub
out
ret
cmpb
mov
bound
lods
or
in
ja
jl
fidivrs
cli
ja
cmp
sbb
sti
imull
jge
clc
loopne
pop
stos
inc
imul
sbb
pop
stos
jle
clc
mov
pop
leave
cltd
mov
xchg
push
fldl2t
fdivl
add
mov
sub
cmp
mov
dec
add
out
sbb
mov
test
sub
mov
dec
sub
je
stos
pop
push
dec
cmp
inc
jne
popf
andl
push
xchg
into
and
jmp
lds
mov
test
clc
or
fimuls
mov
lret
gs
repz
inc
in
xor
enter
xchg
popa
dec
sbb
dec
pop
lock
ret
mov
pop
test
xchg
push
iret
and
push
ss
push
inc
dec
xchg
mov
ret
jo
in
loope
jle
sub
push
xchg
push
adc
repz
mov
dec
into
sti
repnz
cli
mov
stos
out
mov
dec
lcall
sub
or
gs
out
sbb
mov
xchg
outsl
out
jge
inc
insb
loope
insb
sbb
test
add
inc
lahf
ja
or
adc
shll
jae
inc
ljmp
fimuls
fwait
dec
iret
lods
nop
mov
cmpsl
xchg
dec
mov
shrb
jecxz
cmovs
gs
adc
inc
mov
xlat
inc
fsubs
push
daa
and
pop
push
push
bound
xchg
xchg
stc
pop
push
lea
fwait
test
lret
cmp
pop
push
out
ss
jns
stc
mov
ds
out
cld
cs
fs
jl
xor
rol
test
lock
fisttpll
movsl
ss
iret
std
cltd
dec
out
adcl
negb
sbb
pop
in
stos
mov
es
or
mov
dec
mull
cmp
shl
pop
in
push
add
cmc
dec
out
push
push
jnp
iret
cmp
pop
cmp
adc
jmp
and
dec
or
addr16
out
or
ret
mov
scas
xchg
ljmp
pop
lock
jmp
fs
iret
mov
mov
pop
enter
jns
cmc
pop
xlat
sti
shll
add
addr16
inc
jmp
push
movsb
fwait
xchg
sbb
xor
imul
pop
loopne
mov
dec
nop
imul
lret
loope
inc
popa
sub
xchg
adc
cmp
das
test
shlb
and
mov
fisubs
fwait
add
xor
push
stos
jp
test
sub
xor
jl
adc
out
pop
xchg
dec
mov
push
test
lods
popa
fisttps
outsl
add
nop
ds
int
adc
dec
mov
jp
add
mov
lret
mov
enter
sbb
sbb
sti
mov
mov
lock
mov
mov
fimull
popa
movsb
jbe
pop
rclb
push
aas
add
mov
push
jnp
xchg
loop
sbb
mov
add
xchg
lock
xchg
xchg
call
out
cmp
xchg
cmp
cmpsb
arpl
mov
pop
das
or
cli
dec
loop
pop
sub
fmuls
xchg
xor
jp
sbb
out
test
lret
cmp
hlt
repnz
xchg
dec
and
jg
cmp
cmp
dec
icebp
sbb
sbb
lock
sub
xchg
xchg
mov
xor
mov
push
outsl
mov
pop
mov
and
loope
mov
ror
lods
ret
and
cltd
jg
cmp
repz
stc
add
and
adc
stos
xchg
test
push
lcall
dec
adc
cmc
clc
pop
sbb
int
fwait
mov
adc
daa
jl
leave
test
ljmp
mov
xor
jb
mov
cmc
sahf
xchg
pop
pop
shll
adc
daa
sbb
add
xor
push
xor
mov
gs
ja
ret
mov
dec
out
xor
inc
fst
shll
sbb
xchg
iret
mov
enter
xor
call
cld
inc
sarl
ja
sbbl
imul
in
imul
mov
jp
sahf
push
in
push
push
inc
andl
dec
imul
pop
aas
inc
jno
push
into
pop
cmp
fidivrl
movsb
lret
and
fnstenv
pop
pop
push
xchg
sub
int3
mov
dec
data16
ss
fdiv
imul
pop
push
mov
cmp
stc
scas
mov
or
js
insb
sub
push
add
pop
sbb
xor
jmp
ljmp
push
icebp
mov
xchg
hlt
pop
mov
jge
pop
add
or
mov
lea
cmpsb
jl
sub
dec
out
fs
cld
and
mov
mov
rolb
adc
stos
call
ret
sub
xor
sub
sbb
push
sahf
lret
js
push
inc
mov
xor
xlat
sub
inc
ds
test
adc
and
cmp
fs
or
mov
shlb
push
notb
rcll
xchg
or
dec
sbb
cmp
pop
lret
pop
jle
bound
jge
mov
in
icebp
jl
ljmp
inc
addr16
push
sub
jg
imul
mov
push
mov
rorl
faddl
ficompl
idivb
negb
mov
aas
pop
call
inc
testb
gs
xlat
xchg
mov
push
pop
mov
or
sbb
sbb
add
bound
outsb
mov
pop
rolb
or
mov
sbb
xchg
mov
and
popf
mov
sahf
daa
cmpsl
inc
xchg
sahf
mov
pop
add
hlt
sahf
push
and
push
popf
sbb
add
dec
pushf
xchg
jmp
repz
push
sbb
mov
sub
cmp
or
xor
push
pop
or
imul
jns
and
adc
or
jl
aaa
je
bound
push
mov
xlat
or
scas
lods
imul
push
inc
mov
push
pop
sub
stos
adc
fimull
add
rcr
nop
pop
push
cwtl
sub
dec
ds
popf
mov
or
inc
push
mov
loopne
push
mov
xchg
dec
pop
cmp
arpl
test
ds
sti
jle
in
xor
pushf
dec
popf
aaa
aaa
ja
or
and
fsubr
adc
push
or
mov
scas
mov
rolb
xor
mov
mov
ss
hlt
in
pop
cs
mov
mov
mov
repz
mov
or
or
xchg
into
ja
cmpsl
jl
leave
push
call
jns
cld
stc
xor
rcrb
jno
adc
mov
sbb
lret
icebp
mov
call
lret
xlat
jp
insb
pushf
mov
jns
pusha
imul
shlb
std
enter
add
or
stc
mov
xchg
outsl
out
xor
adc
ret
or
sbbb
mov
xchg
jl
cwtl
shrb
cmpsl
push
pop
jo
lock
repnz
sub
cli
js
cmc
out
dec
mov
ret
or
cmpsl
pushf
shlb
ds
outsb
fs
jae
in
ffreep
enter
lret
nop
inc
jne
mov
sbb
nop
push
icebp
repz
aam
lods
ss
mov
or
dec
mov
in
pop
push
cmp
fneni(8087
or
mov
xor
hlt
fcompl
in
cmp
mov
adc
fstps
xchg
add
sbb
push
jl
xor
fwait
aam
stc
out
mov
pusha
sub
out
ds
ljmp
xchg
mov
out
push
std
xlat
xchg
jo
mov
lahf
add
arpl
lds
or
adc
fs
dec
in
inc
in
xchg
popa
jle
sarb
inc
cltd
jne
test
and
aam
adc
mov
mov
push
add
jl
arpl
stc
loopne
mov
dec
das
fstp
cmp
call
movsb
lcall
fsubl
push
xorl
inc
fdivs
lahf
mov
outsb
sarb
push
mov
mov
mov
out
in
stos
out
movsl
fs
in
jns
cmp
test
insl
test
cld
scas
mov
decb
addb
mov
rcll
leave
dec
xchg
imul
sbb
inc
mov
movsl
mov
push
inc
sub
mov
in
lcall
loop
cmp
adc
in
out
cs
lock
into
in
adc
je
and
punpckldq
es
sarl
jno
fs
imul
push
mov
and
das
jp
lock
lock
push
dec
ret
bound
push
stos
add
jne,pn
pop
shrb
inc
in
push
push
mov
lods
pop
jne
cmp
arpl
or
daa
cmp
into
mov
jbe
dec
mov
and
or
pop
mov
jbe
lret
sub
jae
mov
addr16
out
addb
mov
sub
pop
sub
add
test
cmp
outsl
rcrl
and
add
adc
es
dec
mov
mov
jmp
cmpsb
in
xlat
scas
andb
or
test
add
outsl
std
jbe
mov
adc
pop
mov
push
mov
mov
and
pop
xchg
pop
pop
and
rorl
test
and
push
mov
jp
or
adcb
adc
jbe
cmp
mov
sub
inc
iret
cltd
sbb
addr16
repnz
inc
shrl
rolb
or
pop
push
insl
pusha
xchg
jl
pop
mov
and
cmp
pop
mov
sti
bound
sub
cli
in
enter
mov
cld
movsb
dec
cwtl
jae
inc
mov
lock
int
hlt
sub
iret
shll
loop
or
jge
incl
mov
mov
ret
add
inc
mov
or
or
into
and
push
ja
cmp
test
aaa
pop
popa
les
jo
mov
fldl2e
sub
movb
inc
test
cmp
out
jae
pop
push
jge
les
push
inc
sbb
push
xchg
repz
add
xor
jae
xchg
enter
vpmacssdd
sub
fcompl
sbb
add
shll
add
in
pushf
push
mov
mov
or
jne
enter
scas
insb
xchg
xor
push
sub
aad
ret
sbb
cli
jnp
add
fisubrl
push
fcoms
loop
outsl
adc
in
repz
data16
enter
aaa
xor
pop
and
add
out
ljmp
mov
mov
mov
test
push
js
rcr
notb
out
xor
out
cld
jmp
in
cli
adc
push
lret
xchg
fwait
sbb
cmp
pop
sbb
push
pop
inc
pop
jmp
mov
jo
dec
sahf
fdivs
and
sub
aam
add
movsb
jle
insb
mov
cli
iret
outsb
sbb
dec
nop
xchg
lcall
pop
mov
inc
negl
push
sbb
adc
and
sbb
mov
xchg
jle
outsb
sub
push
cld
dec
push
lret
leave
mov
mov
pop
test
jnp
and
pusha
adc
jmp
and
pop
mov
sbb
test
jno
in
adcl
adc
xchg
xor
jb
xor
pop
imull
nop
mov
pop
push
push
rcrl
fadds
aad
shll
repz
pop
js
fsubrl
and
jge
sub
leave
popa
and
loopne
shrl
jns
loopne
stc
mov
sub
gs
pop
mov
jge
xor
into
pop
mov
cmp
in
pop
push
test
adc
lds
hlt
xchg
mov
add
adc
jmp
mov
mov
aad
adcl
push
lcall
or
enter
test
inc
dec
in
inc
push
fprem
pop
xor
aam
mov
xor
es
mov
js
stc
lock
lcall
cmpsl
fisttpll
movsb
adc
push
push
or
movsb
cwtl
cmp
mov
mov
adc
xlat
test
cmp
fisubrl
dec
pop
lea
adc
hlt
sahf
loopne
xchg
xlat
les
mov
in
mov
mov
mov
idivb
rcll
fnop
stc
jno
popa
loop
sbb
aad
jbe
ja
or
add
out
mov
mov
mov
push
in
popf
ret
cmpsb
dec
sbb
jmp
jg
sahf
mov
mov
icebp
lock
mov
outsb
jae
shr
jns
sub
mov
pop
dec
adc
or
sahf
lret
rcl
jno
fdiv
xor
pop
nop
into
push
mov
sub
cmp
lods
or
lret
jl
hlt
and
xchg
or
cltd
mov
stos
sbb
sub
push
and
nop
jmp
inc
cli
into
ficompl
shlb
adc
popf
test
mov
or
out
stos
sti
mov
icebp
stc
jb
rorb
jmp
cmc
cmp
imul
mov
sbb
in
in
out
jmp
insl
addr16
pop
jg
jp
enter
sbb
repnz
je
nop
jb
mov
or
mov
das
lret
sti
jo
pop
xor
sbb
enter
or
mov
cli
xor
daa
inc
int
ret
mov
mov
rorb
pop
movsb
and
lret
imul
rcrl
push
dec
popa
rorb
sahf
and
jbe
lods
cmp
imul
imul
mov
xchg
aad
pop
repz
insl
aaa
dec
ret
cmc
in
jle
fsubrs
push
mov
jns
sahf
push
roll
mov
mov
aad
loope
aas
adc
pop
and
pop
dec
push
aad
mov
sub
stos
push
or
mov
xor
movsb
xchg
inc
adc
jno
movsl
aaa
icebp
test
inc
push
mov
push
mov
mov
pop
neg
mov
lahf
das
xlat
add
and
sbb
lahf
xor
shrl
and
shl
pop
xchg
jmp
popa
lods
cltd
mov
lret
push
out
sbb
out
mov
add
mov
mov
in
jne
gs
push
jns
or
push
lock
pop
test
cltd
sub
add
in
ret
mov
jecxz
adc
cmp
aad
jbe
or
mov
bound
fcoml
jl
mov
xchg
mov
push
pop
mov
int
sbb
pop
mov
pushf
jl
jno
add
xchg
fmulp
cmpl
dec
outsl
mov
push
sub
mov
divl
rclb
lock
inc
iret
es
jns
mov
mov
in
cmp
pop
dec
sub
shrl
movsb
psraw
adc
shlb
lds
mov
sbb
imul
mov
test
jmp
sti
dec
dec
cmpsb
inc
loopne
lret
mov
lahf
dec
sub
jmp
jno
pushf
fwait
insb
sarl
lods
sbb
js
xchg
mov
xor
sub
inc
and
jnp
xchg
repnz
xor
fwait
clc
ljmp
push
jo,pt
sub
push
pop
add
rol
shr
xchg
lcall
xor
cwtl
add
xor
and
jle
sub
sti
push
inc
xchg
mov
inc
lock
arpl
rclb
sbb
ret
cli
sbb
scas
test
mov
and
divb
mov
or
pop
adc
inc
sub
mov
xor
mov
popf
inc
mov
lret
push
call
in
push
jnp
lcall
out
adc
imul
shrb
dec
cwtl
and
cli
lret
mov
adc
inc
adc
lock
xchg
inc
push
es
out
les
jge
popf
add
add
je
ror
stos
aaa
xchg
inc
cmp
xchg
movsb
pop
pop
inc
jp
fwait
aas
stc
add
mov
call
cmpsl
cmc
dec
add
cmpsl
gs
xchg
xchg
pop
or
or
inc
dec
pushl
fs
sbb
lret
in
dec
in
xor
xchg
lds
adc
test
sbb
fdivrs
jge
cmp
cwtl
jp
adc
arpl
jp
and
leave
push
mov
bound
popl
movsb
adc
js
add
pop
popf
negb
cs
out
sub
pop
in
movsl
orl
ja
mov
and
mov
in
pop
je
xlat
or
into
and
mov
mov
jb
into
shl
add
insb
stos
inc
inc
inc
imul
mov
adc
dec
in
xor
cmc
push
outsb
pop
sbb
insl
scas
jbe
mov
movsb
jns
pop
inc
jns
iret
sbb
add
push
mov
es
lock
andb
or
and
subl
mov
mov
into
lret
dec
xor
cld
and
jno
pusha
loopne
subl
loopne
je
push
pusha
pusha
test
stos
pusha
cmp
adc
rcrl
out
dec
repnz
fcomps
sub
inc
push
and
lret
pop
cld
ss
xchg
nop
mov
dec
sbb
js
sub
inc
xor
imul
out
aad
sbb
fwait
xor
push
sub
ds
jg
pop
sub
test
in
mov
inc
rclb
cltd
movsb
mov
jl
mov
jno
push
lret
xchg
pushf
negb
pop
jecxz
fidivrs
adc
sub
notb
push
test
push
insl
loopne
sub
push
sub
ja
jmp
or
mov
push
outsb
pop
inc
fisttps
xor
mov
jmp
jno
adc
popa
pusha
pop
sbb
adc
andb
daa
sbb
outsl
mov
inc
mov
mov
mov
insb
xchg
push
mov
push
push
outsl
je
and
cmovge
scas
xchg
ret
push
add
push
jg
pop
adc
jbe
popf
pop
outsl
adc
out
dec
int3
repz
out
add
cs
push
dec
cld
roll
jmp
pop
pop
loopne
xchg
xor
sbb
mulb
inc
fists
push
out
test
mov
subps
in
xchg
jecxz
ss
in
dec
loop
shr
or
lar
lea
mov
inc
stos
sbb
gs
xor
mov
dec
int3
inc
movsl
mov
aam
mov
inc
loop
and
jmp
mov
repz
in
cld
cmpsl
insl
lock
hlt
xor
sbb
ret
push
lea
outsb
pop
fistl
pop
ficomps
daa
rolb
lcall
inc
push
dec
jno
movsl
mov
std
add
add
clc
add
rorb
sub
stos
push
shrl
ficompl
test
mov
lret
sub
repz
mov
inc
arpl
dec
call
sbb
addr16
test
test
pusha
mov
rcrb
add
jno
gs
mov
scas
mov
jge
push
adc
aad
lcall
popa
mov
popl
mov
xchg
pop
mov
jbe
icebp
outsb
shl
movsb
outsl
inc
pop
fimuls
sub
fcompl
cmp
jl
hlt
dec
ficoms
sbb
add
shl
mov
scas
mov
inc
stos
xor
mov
cmp
aam
cmpsl
test
into
pop
adc
jg
and
clc
xor
push
mov
xor
mov
outsl
stos
xor
xchg
sbb
mov
pop
cmp
xchg
cmp
add
xchg
shlb
add
lock
sbb
lret
shll
hlt
dec
mov
push
mov
aas
and
jns
sub
xchg
pop
xor
jl
leave
lods
mov
cmp
arpl
inc
add
lahf
pop
out
pop
out
cmpsb
mov
divl
enter
leave
cmp
push
data16
mov
inc
mov
xchg
pop
lods
jge
add
cmp
mov
push
in
push
cmc
js
mov
xchg
xchg
inc
repnz
xor
inc
jp
aam
pop
negl
es
rorb
cmp
out
out
push
je
movsl
bnd
push
pop
inc
push
pusha
cmp
pop
sbb
pop
inc
or
dec
popa
cmp
add
xor
adc
idiv
inc
test
cmp
aaa
mov
repz
dec
sti
aaa
shll
adc
xor
dec
pop
mov
xor
addl
popa
js
outsb
add
cwtl
repz
cld
mov
int
or
stc
fwait
sub
xchg
and
fs
push
int3
ljmp
arpl
dec
nop
or
dec
ljmp
push
frstor
shll
mov
jg
lock
shl
aas
sahf
push
pop
popf
sti
ret
shll
cmp
mov
push
test
pop
sarl
inc
cmp
fidivrl
movsb
adc
ror
outsb
ljmp
ret
xchg
inc
bound
insl
rcrl
leave
imul
xchg
dec
adc
loope
sbb
xor
jb
movsl
mov
xor
icebp
jp
in
fistpll
jle
push
or
sub
aad
divl
imul
sub
loopne
popf
cmc
push
mov
mov
rep
xchg
addr16
in
xor
aas
fiaddl
ss
xchg
pop
dec
jb
adc
leave
aaa
mov
sub
outsb
and
xchg
xor
push
sbb
xchg
popa
orl
nop
repz
cmc
sbb
inc
mov
pop
movb
mov
pop
pop
jno
and
cmpsb
int3
les
out
and
cmp
sar
cmp
imulb
xor
je
sbb
dec
pop
cmpsl
mov
repnz
push
inc
ljmp
mov
inc
xor
mov
push
and
sbb
shrl
bnd
pusha
movsb
or
xchg
cwtl
test
sbb
in
jp
sbb
jnp
movsl
movsl
sub
ja
sti
jbe
add
push
adc
push
bound
mov
pop
popf
cmp
test
push
sbb
inc
push
loope
ret
orl
lcall
data16
negb
cmpsl
shll
aam
push
xor
ret
xchg
lret
push
push
pop
dec
pop
xor
lea
push
push
shrb
popa
out
fcoms
shlb
aad
filds
js
cwtl
in
mov
hlt
lahf
arpl
stc
inc
aad
and
scas
jae
push
cmp
mov
and
mov
arpl
mov
call
cltd
add
push
xchg
or
ret
scas
sbb
jns
add
mov
lds
divl
movsl
inc
out
popaw
pop
mov
lret
les
xchg
or
bound
scas
repz
jnp
mov
push
std
jno
in
sub
int3
cld
pop
ds
jp
push
icebp
xor
fs
fmull
les
fbstp
rorl
imul
mov
repnz
sahf
aas
lods
int3
enter
pop
inc
and
aad
pop
fcos
arpl
pushl
insb
cmpsl
js
add
adc
cli
xchg
orb
mov
cmpb
outsl
cld
cmp
jmp
inc
mov
push
inc
loop
or
sub
jb
push
jne
movsb
dec
add
clc
imulb
dec
call
sbb
rorl
mov
pop
xor
stc
dec
pusha
movsl
cli
xchg
das
std
out
nop
lods
cmp
fwait
popf
jp
sub
push
lahf
in
into
adc
push
inc
pusha
push
clc
mov
into
cmp
stos
jmp
leave
sbb
xchg
jl
xlat
jnp
lea
push
dec
lods
rcll
ret
dec
in
xchg
shr
lds
and
add
or
loopne
jo
and
push
hlt
push
pop
pop
js
addr16
outsb
adc
push
pop
test
fwait
xchg
or
outsb
jecxz
pop
sub
and
loop
push
dec
aad
dec
adc
fcoms
add
leave
in
iret
jns
add
mov
imul
adc
push
and
cmpsl
cmp
shr
loope
jle
push
add
lds
cmp
xor
jne
inc
movsl
push
sbb
add
jno
sbb
and
adc
leave
xchg
sub
sbb
sbb
push
lret
int
xchg
pop
adc
out
ja
mov
push
nop
stc
sbb
loop
jb
outsl
aas
pop
push
jnp
push
mov
inc
push
adc
xchg
cld
aad
ds
inc
sbb
ror
mov
push
shll
pop
cmp
xchg
lret
pop
xlat
in
add
into
xor
jmp
dec
pop
repz
sti
into
repnz
bnd
loop
out
subl
popa
wrmsr
sbb
imul
divl
push
sahf
flds
mov
insb
stos
roll
sub
cmp
mov
cmpb
sti
mov
jo
sbb
dec
arpl
adc
cmp
pop
pop
mov
lock
fstpt
and
repnz
test
cmc
mov
and
insl
dec
push
dec
lret
rorb
cmp
out
js
cmc
adc
stos
mov
nop
push
sub
add
shll
mov
mov
cmp
rep
pop
cmpsb
jno
pop
push
lret
adc
add
add
in
out
push
jo
out
adc
mov
rcll
sar
dec
or
fs
xorb
jg
jns
test
int3
fisttpl
adc
std
ftst
sub
outsl
mov
adc
rol
xlat
mov
and
or
mov
les
mov
or
jne
sbb
jp
dec
data16
gs
pop
mov
testl
addr16
outsb
mov
jmp
cmp
push
fildll
dec
clc
push
sub
adc
rcrl
in
popa
xor
add
movb
or
leave
loop
and
mov
ret
sbb
imul
lods
mov
push
out
iret
mov
sub
mov
xor
js
fstp
sub
jne
rolb
ja
mov
mov
dec
icebp
xor
sub
sbb
jp
cmp
lret
cmc
xorl
cmc
cmp
or
movsl
mov
cltd
popa
mov
cmp
pop
test
add
lods
add
cmpsb
jmp
movsb
int3
inc
add
push
cmc
mov
inc
aaa
inc
outsb
mov
dec
push
fdivp
cmp
js
mov
enter
xor
test
xor
aam
fdivr
insl
xor
scas
jb
sti
pushf
and
xchg
add
sbb
fcomps
xor
dec
sbb
dec
pushl
cmpb
cmp
test
and
in
add
xchg
pop
cmp
xchg
nop
pushf
fwait
xor
les
nop
push
inc
fldl
mov
lds
in
xchg
fcomi
orl
sub
pop
cwtl
aad
or
mov
fstps
popa
jg
adc
mov
jbe
pop
xchg
xchg
jbe
push
insl
sbb
ss
cli
gs
lret
loop
int3
js
bound
push
popa
push
adc
fcmovu
cmp
cmp
cmp
lahf
xchg
inc
mov
enter
inc
imul
mov
test
sub
out
inc
pop
mov
xor
out
jns
outsb
sbb
fbld
lods
mov
lcall
stos
xlat
addr16
dec
idivl
dec
jnp
sarb
loope
mov
sub
test
cmp
and
lret
lcall
jns
mov
lods
nop
ss
shrb
inc
push
mov
cmp
out
loop
fs
push
xor
inc
scas
aam
fdiv
inc
lds
lds
mov
xchg
shrl
test
push
push
fldcw
out
jnp
call
or
dec
xor
mov
dec
fstps
dec
inc
lock
sub
cmp
enter
cmp
hlt
addr16
cmpsl
or
jmp
sti
jmp
pushf
fcoml
scas
xchg
pop
mov
dec
ljmp
xlat
ds
addr16
jb
imul
push
sbb
movsb
jbe
inc
cmp
out
and
sbb
mov
xchg
mov
jl
pop
andb
xchg
push
and
jmp
faddl
sub
std
mov
push
cmp
jno
jl
pop
out
inc
push
or
loopne
jae
pop
xchg
fidivl
test
mov
les
xchg
cmp
in
xchg
ss
jnp
inc
jecxz
inc
lcall
ds
sub
popf
es
jae
and
jg
ja
pop
mov
stc
int3
pop
in
dec
pop
sbb
jmp
mov
pop
sub
mov
mov
test
mov
xor
sub
sahf
testb
mov
and
xchg
mov
in
dec
sbb
push
cmp
rol
mov
loop
cs
xor
cmp
xor
incb
dec
je
repnz
dec
pusha
loopne
adc
repz
outsb
jg
mov
mov
pop
pop
pop
ljmp
lret
mov
int
lds
stos
lock
insb
arpl
xorb
jbe
jo
push
into
sbbl
std
jge
inc
push
sub
es
pushl
ret
test
cmpsl
push
or
scas
add
jnp
add
in
jne
cmc
cmp
ja
add
jmp
mov
fidivrl
sub
dec
cmpsb
inc
xchg
stos
and
jnp
pop
xchg
pop
cmpsl
sub
aad
cli
lret
outsl
mov
push
pop
pop
mov
mov
inc
les
push
adc
nop
dec
jo
hlt
frstor
clc
push
push
jle
aas
test
test
jnp
clc
or
scas
testl
xor
or
push
and
jl
scas
clc
shlb
push
gs
cmp
jg
cmc
fcomps
std
jmp
pop
xchg
test
pop
dec
sub
or
mov
cmpsl
push
mov
jae
fbld
test
sbb
mov
mov
sub
push
jle
rorl
add
pop
jge
lea
push
scas
add
jns
and
testb
divl
lds
roll
mov
aam
mov
mov
pop
shl
lds
adc
in
push
arpl
cmc
xchg
sbb
jmp
aaa
dec
mov
jge
jbe
rcll
mov
cmp
xlat
pop
inc
idivl
daa
pusha
xlat
cmpsl
inc
clc
outsb
add
push
fisubrs
or
jle
sub
scas
outsl
std
mov
addr16
imul
clc
push
inc
xchg
movsb
sbb
call
sahf
mov
movsl
lret
push
out
mov
inc
repnz
pop
lods
push
pop
fwait
cmpsb
imul
and
pop
or
sbb
negb
sbb
mov
shll
mov
cmpsb
pop
add
jmp
cmp
sub
jecxz
or
fstpt
xor
pop
dec
jge
or
ss
adc
leave
inc
xchg
cmp
dec
and
pusha
mov
adc
jb
out
jae
pop
or
push
gs
repnz
repz
int3
jbe
add
xor
pusha
ja
shrb
sti
fs
fs
clc
mov
fdivrs
sbb
mov
sbb
mov
xchg
and
mov
rcl
popf
jge
cmp
xlat
sbb
mov
sbb
sub
in
sahf
mov
and
or
shll
push
insb
xchg
in
sbb
add
mov
lret
push
sahf
insl
push
and
js
es
and
call
ds
aad
popf
push
cmp
cmp
push
mov
scas
je
pop
jl
mov
mov
aaa
std
xor
dec
xchg
adc
cld
shrb
mov
sbb
es
rcrl
sbb
mov
ja
push
mov
and
lods
cmp
rolb
inc
cmpsl
sbb
jp
icebp
popa
cmpsb
mov
sarb
add
fdivrs
mov
movsb
lcall
test
sbb
jne
add
out
iret
push
add
sti
lcall
push
hlt
daa
and
dec
jg
in
in
xor
call
inc
xorb
imul
sbb
mov
inc
pop
and
mov
add
mov
push
jns
loope
fcmovu
fnstsw
jg
cli
test
xlat
add
cwtl
cs
push
or
dec
cmp
sbb
cld
mov
jg
call
xchg
xor
lds
fldcw
or
rorl
mov
dec
dec
and
mov
add
inc
in
sbb
test
inc
adc
cmp
or
outsb
fsubs
mov
cld
dec
cmp
sbb
fwait
sbb
cmpb
pop
push
xorl
mull
fdivrl
sub
jae
jno
out
addr16
jmp
lock
loop
xor
cmc
adc
adc
shll
xchg
cmc
ret
xor
in
popf
enter
sub
add
mov
stc
jmp
xor
jmp
sbb
adcb
fstpt
movsb
inc
mov
xor
fisubrl
add
push
stos
push
mov
sbb
repnz
aaa
fistl
jmp
shlb
cmc
xchg
cmp
and
xor
mov
enter
clc
and
loop
jns
or
cmp
outsl
sbb
gs
sbb
adc
hlt
js
push
stos
dec
pop
movsl
sub
jns
iret
popa
adc
push
decb
jg
xchg
sub
in
mov
das
dec
loope
push
and
inc
insl
in
jl
xchg
xchg
pop
test
jb
pop
or
add
imul
mov
mov
imul
pop
mov
push
mov
adc
push
mov
add
lret
hlt
xor
inc
cmpsb
sub
inc
push
rol
fadds
notb
or
jo
aaa
dec
movsl
stos
test
jb
jnp
hlt
pop
orl
fdivp
push
adc
pop
test
adc
nop
dec
in
test
mull
sbb
inc
lock
aaa
push
mov
inc
jl
push
ss
push
adc
mov
push
stos
es
dec
roll
lock
adc
sbb
sti
add
jge
dec
xor
xchg
stos
and
stc
push
sarl
das
popa
inc
push
gs
push
outsl
test
inc
and
out
jbe
js
xor
lds
inc
mov
push
sub
cmp
outsl
filds
leave
idivb
cmp
ret
jno
fisttpll
in
iret
pop
cltd
addb
sub
dec
cmp
notb
push
adcl
lret
shll
jnp
data16
pop
add
sub
sbb
fadds
mov
sahf
jmp
inc
repz
leave
std
pop
or
scas
int3
es
test
mov
lods
shlb
imul
shll
mov
mov
or
mov
into
sbb
pop
sar
jbe
add
cmp
sub
dec
add
and
aad
pop
jge
addr16
xor
movsl
mov
enter
jp
push
loop
mov
sub
lock
xchg
pop
sub
mov
repnz
lds
ja
mov
and
sahf
pusha
int
js
mov
test
pusha
in
popa
xchg
pop
lock
icebp
and
rclb
sarl
pop
mov
insl
or
xchg
xor
adc
push
jmp
pop
sub
jl
nop
push
add
out
xor
js,pt
dec
inc
jo
sbb
and
ret
or
sub
sbb
xor
push
ret
xchg
xchg
sub
sub
test
in
or
loopne
nop
in
std
or
js
enter
push
pop
clc
xlat
jmp
xor
leave
pop
push
sbb
fidivl
stos
mov
fcmovne
sahf
ja
loopne
add
push
mov
ret
push
push
icebp
sub
test
inc
cmp
xchg
add
inc
push
sub
popf
push
sti
mov
hlt
cmp
adc
pop
push
jmp
add
pop
or
sub
xor
lods
cmpsb
in
and
dec
xor
pop
xchg
pushf
lahf
call
arpl
insl
sub
xchg
or
imul
xchg
xchg
ljmp
adc
xchg
pop
mov
push
rcll
pushf
rep
xchg
xor
lcall
repnz
mov
or
inc
or
sbb
dec
inc
pop
scas
xor
ja
ret
xchg
sahf
cli
iret
out
mov
repz
data16
mov
adc
jno
cld
and
or
fisubrs
ljmp
mov
mov
shl
test
mov
cmpsl
rcll
daa
repnz
pushf
pushf
or
push
xchg
loop
mov
popf
mov
fwait
cmc
sets
pusha
push
fstp
xor
jbe
xlat
push
gs
pop
cmp
and
test
orb
cltd
call
cmp
test
mov
cmc
push
and
mov
mov
xor
and
test
adc
or
push
and
add
je
out
lahf
out
mov
jae
aam
push
inc
cmp
imul
inc
cmp
int
test
fcmove
loope
mov
sbb
dec
pusha
jb
sbb
pop
pop
sahf
and
xorb
xor
loop
cmp
repz
xchg
out
pop
notb
or
fnstcw
mov
jmp
vphaddwd
dec
or
in
pop
imul
loopne
sti
mov
or
mull
xchg
pop
loopne
or
test
jl
xchg
das
mov
pop
jg
out
pop
sub
push
sbb
aad
stos
leave
sub
dec
cmp
inc
loopew
jle
outsl
mov
out
xchg
xor
ret
and
sarl
iret
outsl
shlb
inc
out
adc
nop
outsb
fstl
inc
add
sbb
das
loopne
push
ljmp
add
adc
mov
push
dec
mov
mov
push
sub
push
push
inc
sarb
adc
lret
cmp
xor
jge
cmpsl
ljmp
fidivrs
xlat
in
fcompl
mov
aaa
std
sub
ret
sub
les
push
pop
dec
loopne
loop
or
es
stos
into
jmp
pop
push
push
lcall
push
pusha
loop
cmp
mov
mov
mov
or
jl
out
mov
out
sub
cmpsl
rorl
cwtl
adc
mov
out
leave
xchg
jne
lock
pop
push
inc
ret
ret
in
in
popa
mov
or
dec
lahf
push
fnstcw
es
cmp
lahf
mov
imul
dec
pop
push
enter
mov
popa
jb
into
xchg
nop
std
aad
jecxz
call
out
aad
sub
inc
pop
popl
xchg
ret
sbb
push
xchg
stos
jle
aaa
mov
popf
mov
inc
ret
adc
sub
xchg
adc
lods
data16
out
sbb
cmp
add
xchg
lock
jg
mov
lock
insb
ret
mov
push
xor
jmp
ljmp
or
dec
cli
push
dec
int3
ds
add
out
sbb
xchg
repnz
push
and
test
adc
and
leave
mov
cwtl
imul
push
inc
dec
mov
xchg
mov
fldcw
mov
jno
jne
mov
jae
jmp
lret
rorl
cmpsb
jbe
idiv
xor
pop
inc
add
loope
xchg
shlb
xchg
dec
stos
cmpb
outsl
dec
out
or
cwtl
daa
push
dec
push
shr
push
jp
push
sti
gs
mov
lret
sbb
dec
pop
pop
mov
scas
jo
mov
rcrl
rolb
sti
pop
xlat
xor
rorl
pop
or
pop
ds
mov
adc
fadds
sub
push
mov
mov
movsl
pusha
popa
adc
sub
in
leave
test
fadd
lods
out
js
mov
mov
jnp
fiaddl
movsl
cmpb
mov
in
push
out
sbb
std
cmpsl
mov
movntps
cmp
xlat
aad
jl
jbe
in
mov
push
sub
imul
ds
inc
jle
ret
lods
or
out
outsl
sbbl
pop
movsb
dec
push
pop
pop
ss
ja
mov
lcall
mov
imul
pop
mov
les
imul
dec
and
cmp
lret
push
call
stc
adc
scas
repnz
les
sahf
fwait
mov
cmp
cwtl
out
and
adc
pop
mov
pop
jle
loop
push
rcrb
jle
or
mov
jns
clc
mov
xor
ljmp
iret
mov
movsb
xchg
sti
rol
sti
pop
xchg
mov
test
xchg
fcmovbe
repz
dec
jae
dec
dec
inc
mov
xchg
lea
sub
ja
xor
frstor
add
push
xor
dec
and
loop
push
and
xor
aas
stos
pop
mov
out
push
mov
dec
std
jmp
cmpsb
xlat
pop
mov
cld
or
shrl
inc
int3
dec
fmull
jbe
mov
pop
sub
aas
pop
icebp
push
imul
lea
cmp
mov
out
les
or
push
xor
add
cmpsl
push
mov
sbb
into
sub
sbb
and
jae
dec
shrb
xor
and
cmpsb
or
dec
pop
shlb
or
pop
stc
pop
add
sahf
dec
mov
mov
cmc
scas
mov
xor
sub
and
jecxz
js
dec
and
fiadds
iret
xor
into
jbe
or
inc
and
pop
call
mov
and
imul
das
rorb
jle
fs
leave
xor
fs
lret
pop
push
dec
sub
sbb
aad
aaa
outsl
xchg
and
add
daa
cmpsb
push
outsb
mov
aam
les
in
ja
sbb
cli
loope
xor
ljmp
subps
shlb
sarb
rcrl
pop
pop
xchg
movsl
mov
push
sbb
mov
flds
test
pop
sbb
outsl
adc
sbb
mov
movsl
push
xorb
and
pop
jge
mov
jg
cmpsl
adc
int
mov
xchg
ret
std
imul
enter
shrb
pop
jnp
and
or
mov
or
nop
fscale
jg
test
jb
cwtl
sub
mov
pop
testb
fcmovnbe
faddl
mov
cmp
insb
stc
sbb
push
cmp
stos
push
fwait
lahf
cmp
icebp
mov
cmpsl
call
cmp
aad
fstpl
add
pop
mov
jecxz
lcall
and
mov
std
dec
repnz
or
fisubrl
pop
loop
push
movsb
cmpsb
arpl
pop
fsubl
add
mov
add
cmp
into
mov
push
or
and
sbb
cmpsb
xchg
rcrl
add
into
fisubl
fstpt
mov
daa
fcoms
and
in
sub
cwtl
sarb
sub
movsl
jo
outsb
lahf
push
popa
loopne
icebp
lds
pusha
popf
leave
adc
pop
bound
pop
jnp
sub
mov
hlt
xchg
cmpsb
or
arpl
xor
fucomip
ss
and
sbb
dec
xchg
jbe
inc
loop
fs
sub
mov
push
cli
in
bnd
popa
dec
adc
adc
sti
insb
push
fidivs
cli
and
mov
int
loope
and
jne
add
dec
or
ljmp
fadds
dec
gs
in
mov
cmp
xchg
push
sarb
aas
jne
das
popa
dec
xorb
ret
mov
iret
rorb
mov
adc
addr16
xlat
mov
imul
stc
imul
push
repnz
mov
inc
aam
mov
sub
lret
or
mov
sti
fldl
xchg
push
sbbb
sub
jle
iret
in
imul
ror
jae
xchg
push
mov
mov
icebp
jge
jnp
cmpl
push
jbe
cmp
or
fwait
cli
fldt
les
mov
jbe
shl
cs
popa
push
iret
insl
lods
dec
cs
add
pop
or
out
sahf
pop
pop
into
xor
test
pop
gs
pop
sub
repz
ret
push
inc
sub
or
cltd
push
pop
dec
popf
shll
mov
dec
adc
mov
pop
stos
icebp
sbb
and
std
add
pop
test
addr16
jb
imul
cs
xchg
jns
or
loope
xchg
pop
lds
scas
lds
das
mov
sahf
in
testl
imul
adc
pop
and
adc
test
dec
mov
bound
xor
ljmp
cmp
jge
xor
loope
ret
and
dec
mov
ret
push
dec
in
dec
inc
xchg
add
jo
sub
pop
or
jmp
jle
icebp
dec
add
or
in
out
and
lock
mov
adcb
push
ficoms
adc
push
xchg
mov
fnstcw
fwait
data16
rcll
cmp
mov
mov
push
mov
cmpl
pop
fldl
mov
pop
stos
fwait
adc
cmp
ret
pop
lret
les
mulb
sub
lret
leave
mov
xchg
test
mov
xchg
in
and
sahf
pop
xchg
popf
add
dec
fsts
out
aam
xchg
push
mov
jmp
pop
in
mov
sbb
bound
jl
cld
inc
sub
std
ffreep
out
loop
cmp
dec
jg
inc
data16
aas
jecxz
adc
push
mov
jnp
arpl
and
out
and
jp
test
pusha
sbb
es
mov
xlat
push
mov
into
icebp
push
dec
int3
inc
or
jno
test
lret
int
insl
xchg
ret
push
lret
outsl
sbb
mov
arpl
jge
sbb
divb
push
sbb
cmc
fiadds
xor
popf
fwait
scas
jae
jge
jle
pop
and
mov
mov
mov
out
xorl
ret
mov
cmp
cmp
ljmp
sub
jmp
ja
aas
push
shl
sbb
outsb
inc
jmp
mov
call
push
jnp
adc
frstor
ficoml
jmp
pusha
int3
pop
cmp
mov
stos
add
fs
pop
shrb
mov
adc
loop
mov
cmp
shll
mov
or
or
sbb
mov
js
fisubs
ret
loop
pop
xlat
fldl
push
mov
shll
jle
xlat
mov
repz
mov
push
les
les
sbb
push
je
fldcw
push
aaa
bswap
lret
popa
mov
pop
fidivrl
cmp
lahf
jbe
lret
cwtl
repnz
stos
lea
add
or
or
sbb
lods
mov
out
adc
test
dec
inc
out
or
aas
inc
ffreep
push
cmp
jnp
and
sbb
jbe
or
mov
pop
inc
icebp
fmuls
cmp
and
push
pop
mov
adc
mov
into
push
jecxz
outsb
nop
adc
inc
test
push
je
nop
add
popa
lock
and
adc
mov
stos
xchg
imul
or
sub
lret
in
popa
sub
popa
jge
jbe
ja
nop
rcll
clc
mov
xchg
lds
mov
aam
cmp
ror
addr16
ja
mov
ficoms
fiaddl
in
shll
dec
add
pop
mov
add
and
mov
pop
test
jge
cmp
mov
int3
imulb
shll
adc
pop
push
fmul
cmp
fnsave
lods
sub
add
rolb
aad
sub
push
and
add
lock
stc
inc
lods
fistl
lcall
sbb
aam
daa
adc
pushf
jle
jnp
lods
mov
xchg
loope
xor
dec
cli
cmpsb
sbb
call
jno
lahf
push
addr16
inc
and
xor
dec
into
adc
decl
lret
push
lahf
or
aas
in
mov
hlt
es
xor
push
sti
jle
ret
mov
clc
and
sub
mov
sub
hlt
inc
pop
sarl
and
xchg
pop
xor
out
ja
inc
dec
dec
hlt
pop
sub
xchg
mov
push
xchg
mov
mov
xchg
and
mov
add
jno
adc
xchg
sub
push
add
mov
loope
nop
and
pop
enter
cltd
popa
add
xchg
mov
daa
jp
cli
pop
enter
inc
or
push
lock
push
outsl
cmpsl
and
jb
aam
xchg
sbb
sbb
jl
clc
sbb
loope
rcrb
jp
inc
cmp
lods
mov
ja
sbb
xchg
lret
jb
mov
ja
sub
jnp
fnstcw
aad
mov
sub
ljmp
inc
xchg
mov
fs
xor
jbe
jle
loop
push
xchg
jp
lods
je
or
cmp
push
xchg
sub
xchg
sahf
outsl
cmc
enter
push
out
jmp
ss
mov
je
xchg
pop
std
mov
sub
add
out
mov
pop
das
aam
repnz
sub
arpl
mov
mov
mov
es
mov
mov
mov
gs
cli
pop
cs
mov
add
xor
stos
cld
cli
cmp
mov
cmp
sbb
pop
fdiv
mov
scas
adcb
in
adc
mov
es
iret
out
lcall
bound
sbb
leave
insl
xor
stos
cmpl
push
lret
push
inc
ljmp
std
ds
ret
loop
cmpsl
in
cmp
jb
pop
leave
mov
push
notl
ljmp
in
inc
inc
aad
cmpsl
inc
pop
scas
sbb
cmpsb
jne
mov
mov
fs
fwait
int
lret
dec
mov
dec
dec
insb
nop
out
andl
cmc
xor
imul
dec
ljmp
push
ret
dec
jge
pop
xchg
jne
inc
iret
xchg
pop
or
fstpl
cmp
pop
mov
or
xchg
push
aaa
xorb
outsb
sahf
arpl
rorl
add
cmc
pop
mov
and
fstpt
in
lret
flds
mov
jo
gs
cmp
dec
dec
or
mov
out
jbe
add
loop
sahf
int
fldenv
addr16
fsubr
adc
add
ficoml
ret
aam
inc
cmp
js
push
mov
dec
data16
and
cmp
push
dec
dec
out
ret
mov
rolb
mov
add
addr16
add
outsb
into
shrl
jnp
or
or
icebp
sti
jo
sbb
or
push
cmp
out
mov
ret
fwait
rcrb
xor
stc
out
and
fidivs
aam
pusha
jecxz
cmp
pop
bound
dec
popa
adc
jnp
rcrl
data16
adc
inc
inc
sarl
cmp
xor
xor
pop
rcrb
mov
sbb
push
and
sahf
xchg
mov
lret
test
loop
jnp
icebp
mov
mov
jle
xchg
push
adc
mov
hlt
js
push
clc
jle
and
and
adc
push
xchg
insl
psubsb
fstps
add
xchg
and
cli
sbb
out
adc
dec
push
inc
xor
pusha
in
jnp
pop
roll
xor
loopne
fwait
fs
adc
mov
mov
mov
cmp
fidivs
mov
push
in
pop
pop
aam
sub
fsts
dec
test
sbb
sbb
and
xchg
inc
mov
fwait
data16
or
sarl
shl
mov
adc
popf
mov
jecxz
xchg
inc
jecxz
test
inc
push
jl
shrl
mov
and
mov
cltd
adc
ret
leave
rolb
lea
mov
in
cmpsb
mov
cmp
add
insl
cmp
arpl
pop
xchg
jecxz
push
mov
fs
or
scas
and
or
nop
idivl
dec
mov
lret
sub
in
mov
and
inc
cmp
movsb
imul
adc
xor
cltd
addr16
repnz
xor
ret
mov
fimull
pop
lods
repz
inc
movsl
movsl
cmpsb
adc
fldl
je
mov
add
jne
lea
test
orb
lods
inc
fwait
aaa
mov
jle
pop
cmp
test
ror
cli
addb
std
xor
jmp
test
fwait
add
pop
imul
cmpsl
inc
loop
cmp
imul
jge
push
lret
arpl
xchg
stc
cltd
xchg
adc
test
xchg
notl
aaa
pop
call
pop
or
mov
ret
pop
in
js
nop
frstor
and
negl
bound
imul
blcic
cs
mov
ret
inc
sbb
or
xor
mov
sbb
arpl
orb
push
aam
jo
dec
cmpb
shlb
push
dec
loope
movsb
test
mov
or
lods
cmp
mov
xor
stc
mov
mov
es
jb
pop
mov
jp
mov
mov
xor
pop
mov
jp
sub
arpl
adc
dec
push
lds
insb
mov
sub
and
cmpsb
dec
test
int3
lods
mov
insb
pop
adc
popa
xchg
ret
jmp
mov
sub
push
mov
movl
mov
loop
adc
pop
mov
push
ds
lcall
addr16
repz
test
pop
jb
inc
push
cmp
add
outsb
mov
stos
xor
inc
shlb
movsl
and
jl
inc
adc
clc
mov
push
sbb
outsl
jle
nop
shrb
mov
je
xchg
push
push
cmc
dec
mov
rorb
mov
dec
jno
jae
loop
xlat
in
cmc
data16
pop
fwait
mov
ljmp
ret
std
pop
into
gs
scas
aad
or
sbb
mov
test
dec
inc
call
xchg
stos
iret
rcrl
add
jle
inc
inc
hlt
mov
test
dec
aad
fnstsw
add
mov
into
test
cli
addr16
and
fcompl
outsb
inc
arpl
rcll
sbbb
and
jae
pop
xor
ds
adc
ret
mov
or
filds
cmp
sub
jbe
mov
mov
clc
mov
mov
popw
adc
test
outsl
mov
test
dec
xchg
or
cwtl
inc
sbb
outsb
push
sbb
cs
sahf
mov
pop
and
inc
pop
cs
xor
pop
xchg
pop
mov
or
rorb
pop
ds
xor
xor
adc
or
out
jg
lahf
pop
ret
adc
movsl
lock
mov
xchg
pop
add
loop
push
rorl
pushf
fwait
ret
xor
mov
inc
dec
js
and
pusha
in
adc
and
or
leave
cmp
jg
rol
rolb
xorb
jne
out
popf
aaa
orb
stos
sub
mov
jnp
cmp
xor
push
mov
repnz
clc
aam
bound
dec
lahf
cld
mov
repz
add
and
xchg
sbb
mov
mov
shr
xchg
sub
pop
jae
inc
popf
jmp
lods
in
push
icebp
aaa
cmp
lock
and
mov
pop
lods
jmp
sbb
jmp
sbb
into
scas
push
clc
arpl
inc
sbb
add
mov
shr
out
jbe
mov
pop
test
testb
push
push
add
nop
aam
xchg
cmp
jbe
lcall
fidivrl
jg
mov
in
scas
jmp
in
pop
and
mov
or
lret
inc
insb
cli
dec
scas
pop
mov
pushf
xor
outsl
bound
movsb
dec
mov
adc
jmp
in
nop
mov
mov
xchg
cmp
int
test
mov
iret
or
jbe
pushf
clc
rorl
jmp
fwait
in
stos
mov
cmpsb
mov
fs
xchg
insl
data16
xor
test
jnp
sub
fimuls
xor
adc
aam
adc
xchg
fs
icebp
adc
cmp
jns
rorl
push
out
cmp
test
jp
out
push
sbb
test
loopne
pop
xchg
inc
pop
fcomps
leave
enter
inc
adcl
popa
xor
insl
ficoml
mov
call
out
in
cs
repnz
dec
mov
cmp
adc
pop
mov
stos
stos
and
fs
je
fldt
adc
out
mov
xchg
xchg
rcrl
pop
daa
mov
dec
pop
mov
cmp
shll
jg
shlb
lods
adc
lcall
hlt
adc
xchg
push
dec
int3
imull
loop
into
sbb
push
sbbb
push
andb
shll
dec
nopl
daa
lds
movsl
aaa
add
aad
jbe
adc
ret
or
adc
xor
push
ja
mov
sar
sub
cmpsb
sub
test
cld
xlat
cwtl
lods
shl
xor
add
pop
pop
and
outsb
mov
lock
arpl
scas
cli
es
mov
mov
mov
outsb
inc
sub
sbb
pop
ds
mov
or
mull
mov
fs
push
rolb
dec
sbb
int
mov
xor
incl
fnstsw
filds
out
sub
mov
arpl
ds
xchg
jl
xor
out
je
mov
loope
add
mov
adc
das
mov
clc
jle
inc
sub
sahf
jle
roll
faddl
fldenv
xchg
add
jno
mov
lock
stos
cmp
push
dec
dec
out
lock
cld
or
or
xchg
out
cwtl
pop
sub
shl
stos
dec
inc
or
push
jl
dec
push
mov
icebp
add
les
scas
dec
cmp
mov
mov
lds
shrb
mov
sar
div
pop
insb
pop
movsb
fistps
mov
fs
and
stos
sub
ret
aam
jno
dec
scas
xchg
outsb
pop
push
and
pop
ret
sub
mov
hlt
sbb
into
nop
jmp
cmp
jg
sbb
jmp
mov
xor
lcall
push
addr16
test
insb
repnz
inc
xchg
repz
adc
scas
data16
cmpsl
sbb
decb
ljmp
aam
lcall
mov
fmul
pop
xchg
faddl
xor
out
ret
cld
push
jmp
aam
loop
pop
loope
movsl
js
xchg
imul
cmp
nop
fildl
test
add
xchg
sbb
mov
lret
xor
pop
jnp
xchg
xchg
jae
lods
repz
and
or
negl
sahf
xchg
jmp
or
gs
js
imul
in
lahf
xchg
mov
inc
cs
push
and
das
jae
pop
dec
popf
lods
mov
jns
pop
xchg
mov
ret
adc
jne
shl
leave
add
aas
pop
dec
mov
imul
adc
jmp
inc
int3
dec
adc
call
shl
mov
mov
xchg
sbb
rorl
stc
je
xchg
pushw
dec
fdivrs
repz
adc
mov
inc
nop
sbb
pop
mov
or
jmp
add
push
xchg
dec
add
cmp
mov
inc
mov
adc
rorl
fidivrs
jno
pusha
cmpsb
inc
pop
sbb
jmp
sbb
sbb
xchg
jns
jge
jmp
shrb
insb
sub
std
jae
outsl
mov
mov
dec
out
mov
mov
jecxz
mov
sub
or
outsl
mov
pop
xor
into
or
std
mov
inc
push
lock
jno
int3
shl
dec
cltd
out
push
mov
mov
sbb
jne
test
adc
push
mov
lret
int
mov
cmp
inc
jo
es
mov
std
and
imul
mov
mov
out
xchg
xor
rdpmc
scas
inc
xchg
nop
leave
mov
imul
les
mov
push
inc
push
outsl
jmp
out
imul
jmp
dec
nop
mov
lcall
jl
push
and
xor
or
aad
push
sbb
mov
lcall
call
xchg
push
out
fwait
pop
or
mov
aaa
shlb
sbb
idivb
popf
loopne
dec
pop
or
push
repnz
movsbl
push
cmp
mov
faddl
xchg
and
movsl
push
cmp
dec
iret
cs
sub
mov
cs
cwtl
pop
pop
jmp
add
add
ljmp
add
shlb
lret
or
mov
sub
mov
xor
mov
mov
gs
sub
std
hlt
mov
mov
pop
data16
les
imul
xchg
cmp
xchg
inc
mov
or
cmpsl
sti
add
aam
mov
ljmp
lods
ljmp
pop
out
push
xchg
mov
sub
aas
call
into
cs
jecxz
into
andl
mov
cld
mov
rclb
adc
leave
testl
mull
jp
inc
adc
sub
cmp
ficompl
stc
pushf
xor
ret
xchg
lock
pop
mov
and
push
xchg
cmpl
lods
push
call
push
xor
insl
inc
mov
mov
or
imul
mov
lcall
or
xchg
ljmp
add
pop
int
adc
inc
pop
insl
ljmp
pop
or
es
out
cld
pop
ficoms
lahf
in
popa
das
jnp
in
js
push
outsl
inc
cmp
push
push
mov
push
les
test
dec
sub
cwtl
jle
xor
jbe
mov
pop
outsb
adc
test
ret
lret
daa
std
int3
outsb
daa
sbb
ljmp
scas
inc
mov
sub
fiaddl
dec
testb
in
add
loop
jg
pop
jns
nop
mov
xlat
add
push
std
insl
iret
mov
pop
and
jns
cmc
arpl
push
aas
and
add
movsl
push
mov
fsts
pop
sti
cmp
das
or
fld1
add
xchg
in
dec
incb
sub
sbb
dec
ja
cmp
inc
cli
das
add
popf
popf
clc
mov
outsl
add
shll
and
push
dec
mov
xor
cmp
fsts
xor
test
clc
pop
add
jl
gs
lods
inc
aas
pop
push
stos
outsb
pop
push
lods
out
mov
sbb
mov
pusha
pop
mov
loope
mov
jb
sub
mov
mov
movsl
lcall
es
and
lds
xchg
fsubrp
mov
bswap
ss
xor
pushf
lret
push
sahf
iret
cs
and
pop
xor
jle
cmpl
addr16
jne
lods
mov
pushf
lods
shr
mov
or
mov
inc
test
orb
or
inc
in
std
std
pop
dec
mov
fimuls
mov
gs
outsb
mov
xor
mov
cltd
pusha
enter
aam
fmull
and
and
pop
xchg
or
xor
js
sbb
out
pop
movsl
daa
xchg
push
jne
fsubrs
js
sub
dec
bound
jecxz
sub
bound
inc
add
cltd
or
and
cmc
mov
loop
pop
pop
push
sahf
or
fistpl
mov
and
push
adc
or
push
movl
mov
inc
aaa
inc
sub
mov
push
inc
cmp
dec
mov
mov
jg
cmpl
rorl
outsb
orb
pop
push
ror
rcll
mov
cmp
dec
add
scas
fldenv
rorl
mov
out
mov
sahf
roll
std
loop
dec
sti
sub
mov
lea
pop
jne
scas
lahf
inc
inc
out
adc
mov
sub
lret
jnp
pop
icebp
ret
frstor
std
push
inc
inc
mov
ja
je
test
inc
jne
mov
or
shlb
jmp
leave
std
mov
cmp
mov
lea
cwtl
mov
xchg
in
fwait
add
add
inc
sahf
shll
and
jb
lret
ljmp
lea
test
cmp
stos
lock
fimull
xchg
cmp
mov
out
sub
or
jo
cmp
sub
inc
cmp
mov
and
push
push
xor
adc
push
test
addl
xchg
cwtl
pushf
pop
lcall
cltd
imul
inc
out
pop
adc
movl
add
add
mov
scas
fiaddl
xor
push
mov
cld
jns
cmp
sarb
inc
mov
mov
jecxz
pop
stos
jl
mov
outsb
and
push
dec
mov
xorl
add
sub
insl
ret
dec
xchg
rorl
xor
imul
xchg
cmp
dec
icebp
sbb
mov
lock
xchg
push
fidivrl
cmpsl
jle
mov
mov
xlat
cmp
aad
test
out
frstor
dec
shll
sub
repz
je
sbb
repz
aas
ret
sbb
mov
mov
cltd
or
aaa
lods
xor
xchg
in
dec
pop
mov
mov
lea
sbb
cmp
loopne
or
or
mov
sbb
dec
cld
mov
lods
mov
stos
pop
outsb
hlt
cs
arpl
bound
ds
aad
pop
out
stos
inc
jns
xchg
inc
pop
into
scas
cmpl
leave
int3
pop
aad
je
or
stc
adc
pop
fisubrs
negl
test
fsubrl
inc
loop
dec
mov
adc
sub
shll
inc
enter
inc
data16
mov
and
jecxz
or
movsb
adc
js
and
cltd
pop
adc
imul
loopne
push
enter
mov
xor
sub
push
fnstenv
ljmp
aaa
movsb
rol
mov
stc
fcmovu
ret
js
jle
cwtl
add
loopne
ss
jmp
push
add
data16
mov
imul
mov
in
popa
cmp
ss
sarb
cmc
lahf
dec
and
pop
xor
mov
xor
into
pop
shlb
cmpsl
dec
mov
pusha
lret
data16
inc
or
add
data16
sub
cmp
xor
orb
inc
push
cmp
cmp
test
testl
cli
test
arpl
jecxz
xorb
jecxz
aam
push
mov
xchg
adc
push
push
sbb
xchg
add
enter
push
or
xor
outsb
pushf
scas
sub
jnp
mov
pusha
and
or
xor
pop
insl
pop
adc
imul
dec
add
cs
orb
dec
outsl
add
cltd
insl
sub
jle
and
ljmp
incb
repnz
xchg
xor
fwait
pop
notb
jns
pop
das
out
jl
aaa
outsb
mov
xchg
sbb
push
test
xchg
inc
out
popf
pop
outsb
out
aas
adc
cmp
aad
daa
out
test
or
xlat
addl
dec
inc
cltd
push
inc
mov
dec
adc
lds
and
mov
push
jnp
imul
xor
push
sbb
dec
fnsave
xchg
lret
jl
push
cmp
stos
mov
shrw
dec
xchg
lods
test
sbb
lea
jnp
test
andl
sub
add
mov
or
jl
add
data16
test
adc
in
in
gs
sbb
lahf
cmp
lock
sbb
fmull
jmp
movsl
add
adc
sbb
inc
out
sbb
inc
idivl
pusha
dec
pop
lods
mov
ja
mov
add
inc
or
dec
outsb
adc
in
jecxz
cltd
push
push
or
inc
or
adc
mov
stos
dec
lcall
sub
mov
inc
mov
ret
jle
mov
cwtl
fdivrs
sbb
push
fstpt
adc
mov
clc
cmpsl
inc
sub
lret
sbb
pusha
inc
inc
xchg
lret
xor
jne
sub
stos
dec
inc
imul
sbb
leave
outsb
or
xchg
inc
dec
roll
cmp
loopne
icebp
jb
inc
mov
mov
arpl
loopne
fsubp
das
movsb
ret
into
push
push
dec
pop
push
pop
notl
xlat
cli
fiaddl
sub
movb
mov
xchg
sub
jecxz
scas
and
ljmp
inc
adc
scas
arpl
adc
addr16
lds
fcmovnu
in
aas
scas
vsubss
inc
push
pop
andl
or
jge
push
adc
mov
adc
sbb
in
pop
loop
fisttpll
lret
adc
mov
adc
jle
jmp
lock
xor
inc
and
inc
xchg
sub
orl
mov
and
push
pop
sbb
stc
out
in
flds
fnstsw
js
jle
imul
pop
test
nop
xor
scas
push
push
arpl
xchg
mov
push
cld
cmp
rcrb
in
aas
mov
dec
arpl
fisttpl
and
mov
lret
pop
mov
jnp
xor
add
xorl
outsb
sub
lods
push
pop
cmp
loopne
out
in
insl
lods
and
cmc
mov
dec
lea
into
and
rol
lock
cwtl
push
xor
adc
fildl
push
pop
cmp
mov
xchg
cvtpi2ps
xor
mov
mulb
inc
std
aam
pand
cmp
popl
clc
movsb
and
pop
movsl
add
and
adcl
lret
cmpxchg
mov
das
jne
lahf
daa
rorb
int3
mov
mov
fiaddl
out
cs
out
hlt
or
mov
xor
inc
cs
push
nop
iret
adc
test
stos
or
ds
in
jp
mov
dec
scas
mov
in
lock
xchg
out
lcall
cmp
xchg
ljmp
push
nop
mov
add
xchg
lcall
xor
push
mov
daa
aaa
mov
mov
fisttpll
int3
add
repz
in
bound
inc
outsl
sbb
lahf
rorl
je
or
outsb
pop
cmpl
je
xchg
jno
jp
xor
dec
ja
gs
in
xor
jo
xchg
xor
jg
mov
inc
decb
xor
or
add
xchg
iret
subb
lods
das
cmc
adc
gs
xor
push
and
pop
out
mov
mov
inc
mov
jge
shll
jb
mov
stc
nop
mov
mov
mov
fstl
sti
mov
jo
xlat
or
jp
in
in
rcr
addb
mov
out
xor
in
dec
mov
into
jle
push
out
cld
sub
add
adc
mov
sbb
and
pop
adc
lcall
int3
fimull
and
data16
movups
in
sub
testl
jne
xchg
mov
into
push
push
sbb
and
gs
pusha
int3
and
mov
xchg
mov
cmpsl
out
fxtract
fidivrs
ss
xchg
mov
adc
addl
push
xor
mov
ficoml
movsb
lods
mov
or
pop
out
mov
cltd
lods
mov
dec
cmp
out
cli
sub
sbb
test
inc
xor
test
inc
mov
cmp
bound
lods
shrl
outsl
xchg
pop
mov
rcrl
jmp
jae
mov
rclb
lcall
scas
xor
outsb
loopne
into
fmuls
pop
aam
outsb
sub
sbb
iret
ljmp
data16
mov
fucomi
cmp
and
pop
insb
movsb
mov
mov
push
add
aad
and
out
hlt
xchg
sarl
fidivl
push
loopne
jp
and
mov
adc
dec
dec
and
xchg
test
std
adc
je
sub
jmp
jnp
lret
into
adc
addr16
divl
inc
pop
sub
pusha
into
js
addb
jae
sbb
pop
push
add
sbb
xchg
adc
mov
mov
xor
inc
adc
repz
mov
mov
or
add
ficomps
shrb
push
ss
push
sbbb
push
add
push
std
popa
iret
idivl
pop
sbb
mov
mov
mov
ss
sbb
iret
mov
inc
imul
inc
mov
push
aad
mov
sbb
pop
adc
inc
lods
adc
outsb
mov
imul
jle
std
popl
cmp
andb
movsl
pop
in
sahf
inc
repz
mov
xchg
test
jg
xor
aas
je
push
les
fstpt
adc
xor
pop
mov
xchg
stc
mov
jecxz
mov
jp
xor
inc
loopne
cltd
inc
lret
popf
out
lcall
test
or
shrl
and
dec
popf
clc
xchg
jb
pop
jecxz
xchg
packsswb
cmp
int3
in
xor
lea
push
push
xchg
lret
push
mov
pop
je
jl
jno
out
xchg
jmp
pop
mov
mov
mov
femms
repz
lea
push
icebp
xor
fldl
test
cld
insb
imul
jmp
and
sbb
sbb
pop
cltd
rcrl
lds
fstpl
lret
fsub
jbe
inc
fs
clc
add
fcomip
shrb
or
push
andb
push
sahf
out
xchg
ret
data16
dec
mov
ret
pop
sbb
and
dec
dec
test
sub
ljmp
sahf
fdivrl
mov
in
mov
add
int3
dec
loopne
push
jle
lret
decb
fsubl
push
cld
in
je
jbe
mov
inc
insb
ljmp
andl
jmp
jns
fsubrl
inc
out
adc
das
jbe
cwtl
xor
ja
mov
cmp
mov
jbe
hlt
dec
js
ds
das
add
ret
sarl
inc
mov
push
ret
push
negb
or
mov
push
jmp
nop
ss
cmpsl
mov
cmpsl
test
jle
pop
add
jb
sar
rclb
sub
jp
mov
addr16
movsl
lahf
push
aam
fsubs
pop
iret
push
inc
enter
les
mov
shrb
xchg
push
pop
jo
pop
hlt
rcrb
pop
sbb
sahf
movsl
sbb
fwait
or
cmp
mov
jnp
mov
push
push
ljmp
mov
outsl
mov
and
loopne
mov
cli
fbstp
int
hlt
ss
mov
sbb
pop
mov
adc
xor
xor
mov
add
mov
or
jns,pt
lret
pop
adc
dec
mov
adc
stc
sbb
and
clc
push
xchg
mov
pop
addl
aam
out
inc
and
cmp
repnz
loop
pop
and
sbb
aaa
cltd
cmp
cli
addb
lea
fdivp
fildl
stc
jnp
sub
sbb
and
pop
mov
xor
inc
cli
jmp
dec
mov
inc
mov
icebp
imul
xchg
and
sub
rorl
cwtl
rorb
pop
add
enter
lea
mov
cmpsl
jl
xchg
gs
fcmovne
sub
mov
lret
fmulp
fistl
xchg
jmp
mov
in
mov
lods
in
lods
mov
and
pusha
pop
mov
out
jo
mov
mov
mov
movsl
sbb
sbb
push
rolb
dec
lods
xchg
xchg
push
or
pop
fwait
cld
xor
dec
pop
cmp
jge
mov
cmpsl
or
mov
scas
stos
adcb
mov
jle
push
xor
lret
aad
fs
mov
loopne
cli
clc
cmpsb
push
adc
clc
test
movsl
inc
mov
out
dec
out
lret
jae
xchg
jb
mov
icebp
enter
sbb
mov
xor
mov
leave
add
xor
repz
test
pop
fcmovb
xchg
inc
sbb
dec
ret
into
movsb
xchg
cwtl
test
fidivrl
xor
mov
test
mov
dec
mov
js
pop
push
mov
inc
jae
cmpsl
push
xlat
sbb
mov
int
daa
mov
mov
mov
addb
adc
gs
mov
mov
scas
repz
and
xchg
outsb
or
out
cmp
add
cmp
mov
mov
inc
adc
stos
mov
iret
ror
inc
int3
mov
imul
je
mov
adc
jl
jle
mov
test
leave
inc
dec
push
mov
data16
test
fistps
subb
xor
fstpt
outsb
push
push
cmp
mov
and
xor
scas
push
sbb
outsl
cmp
fnsave
push
clc
insb
pop
es
fsubrl
test
mov
mov
cmp
lds
stos
adc
jnp
inc
cmp
aas
and
pop
adc
add
inc
scas
seto
je
jmp
leave
clc
movsl
xchg
jg
cli
int
dec
cmpsb
push
or
inc
in
dec
pop
mov
pop
popf
outsl
sbb
jge
outsb
negb
xchg
xlat
add
xchg
inc
xchg
lret
adc
call
and
shll
sub
sbb
mov
scas
jg
jne
push
and
pop
lahf
loope
inc
jge
negl
sub
lock
lret
mov
xor
loopne
into
scas
ds
dec
dec
ret
cmp
or
ja
or
fs
inc
cmpsl
mov
cmpsl
aam
cmp
cltd
xchg
ss
sbb
sbb
mov
dec
jle
xchg
lods
mov
test
push
sbb
lcall
mov
fucomip
inc
or
std
pusha
cmp
in
dec
sub
rol
mov
lahf
stos
ss
cmp
push
dec
divl
mov
int
jecxz
jge
stos
jl
lret
and
nop
and
pop
xor
insb
mov
jb
test
jmp
rcrb
jno
pusha
push
mov
gs
leave
jmp
data16
dec
fwait
cltd
insl
insb
jae
and
ss
jbe
or
sub
inc
adc
fdivrp
ja
push
jne
xchg
adc
pop
daa
cmp
xchg
mov
test
pop
xor
pop
std
jbe
loope
je
mov
jg
mov
inc
fs
cmp
mov
aad
ja
mov
lret
xchg
mov
pop
cmpsl
dec
sti
jns
mov
xor
inc
in
jmp
addb
fcomps
imul
mov
inc
mov
mov
sbb
adc
dec
pop
inc
and
xchg
mov
xchg
add
iret
jno
push
jecxz
cmp
xchg
mov
add
adcb
ret
stc
or
rclb
movsl
sbb
scas
call
jecxz
mov
push
shlb
cmp
enter
push
lea
sbb
jbe
shl
lret
jne
es
dec
jp
call
str
js
mov
hlt
adc
or
push
mov
push
cli
xchg
ret
loope
scas
sbb
out
cmp
js
je
pop
sub
cli
adc
icebp
xor
inc
mov
adc
sbb
mov
or
popf
or
add
mov
cli
gs
pop
mov
ret
or
or
or
adc
or
sahf
int3
xlat
sub
mov
fdiv
xchg
test
inc
fisubl
loop
test
cmp
sbb
mov
test
cmp
int
test
sbb
es
lods
iret
xor
pop
pop
jb
andb
xor
pop
arpl
add
xor
lret
sub
pop
in
pop
adc
in
jbe
test
cwtl
sti
adcl
push
jb
xchg
sub
mov
jmp
or
xchg
mov
sbb
mov
pop
adc
pop
stos
jmp
in
sub
call
lods
nop
setnp
xlat
das
mov
push
xor
lahf
lea
jae
dec
cmp
mov
mov
pop
push
popa
or
mov
rcr
mov
lds
imul
mov
cmpsl
enter
iret
sub
andb
jl
mov
pop
out
sub
pop
push
into
jno
hlt
inc
popa
push
lock
sti
repz
cltd
cwtl
or
inc
in
inc
mov
mov
sbb
mov
shl
out
fnstcw
jae
call
dec
push
cmp
loope
repnz
mov
push
scas
inc
add
pusha
dec
in
sbb
sti
jns
fcompl
mulb
loop
in
loopne
loop
outsl
fisubrl
loopne
mov
or
sub
rcrb
dec
addr16
mov
push
stc
push
jno
ret
add
xchg
jl
sub
and
fldl
and
arpl
rcrb
push
outsb
sbb
sbb
lea
icebp
je
out
mov
pushf
rolb
cmp
repnz
fidivrs
div
sbb
into
cmpsb
mov
test
push
mov
xchg
int
outsl
adc
and
sub
pusha
jae
mov
mov
test
and
xlat
data16
shll
pushf
int3
cmp
xor
cmp
mov
in
mov
cld
leave
fwait
dec
or
es
xchg
sub
adc
jge
xlat
sar
mov
out
call
into
inc
add
out
out
jmp
mov
push
rclb
scas
pop
xchg
xor
mov
jne
pushf
cmp
mov
xchg
insl
mov
sti
xchg
adc
inc
pop
lods
sahf
outsl
adc
jno
sub
add
jnp
mov
add
stc
sti
push
iret
cmp
sbb
or
jge
push
orl
add
add
cmp
dec
stc
push
jne
out
ja
mov
jl
jge
icebp
ljmp
lret
sub
mov
pusha
cmp
add
imul
jge
sahf
movsb
pop
jge
push
nop
imul
jo
ret
dec
enter
adc
iret
add
push
stos
dec
in
mov
add
aad
cli
cld
out
movsb
sbb
out
and
jmp
mov
bound
sbb
cld
fisttpl
enter
ret
or
testl
lahf
sub
outsb
popa
inc
adc
pop
shlb
test
mov
les
bound
mov
xchg
cmp
sbb
jns
sbbb
push
fildll
xchg
jp
and
sub
mov
and
xchg
in
clc
cli
jnp
pop
xor
invd
sbb
lahf
xchg
inc
push
lods
enter
dec
mov
ret
xchg
fisubl
mov
pop
sarl
add
sub
hlt
adc
incb
or
mov
mov
mov
mov
std
push
sahf
push
stc
aad
fwait
xchg
and
fcompl
vorps
push
add
xor
mov
push
add
inc
dec
je
jnp
adc
cmp
into
adc
dec
lcall
divl
sbb
lds
sbbl
dec
push
sub
test
std
dec
add
jg
sub
or
aam
cmp
cmp
add
mov
sti
jl
cmp
nopl
pushf
sub
dec
in
into
and
cwtl
and
mov
inc
arpl
or
sbb
movsl
xor
push
push
sub
add
pop
repnz
mov
xorb
inc
pop
sbb
cld
fs
xchg
loop
dec
xchg
ret
arpl
mov
and
push
icebp
or
subl
in
and
int
inc
addr16
lret
fs
push
ja
jle
push
stos
or
xor
test
lahf
inc
mov
mov
rclb
gs
fcomip
jmp
mov
and
stc
or
pop
ja
push
outsb
stc
shrb
lcall
ss
ljmp
les
jbe
pusha
shl
int
shrb
cmpsb
sub
cmp
scas
xchg
ror
in
push
inc
xchg
mov
cmp
out
sbb
imul
les
cld
inc
sarl
jmp
xor
outsl
daa
jl
std
xchg
fwait
inc
dec
lahf
sbb
ljmp
add
mov
call
ret
lods
cmc
pop
mull
cmc
xor
push
sub
inc
dec
pop
js
mov
or
mov
movsb
fadds
push
add
and
scas
xchg
push
shll
jge
js
in
ffree
sbb
mov
xchg
data16
scas
test
ja
popa
sub
fdivs
mov
dec
cmp
pop
fcompl
stos
push
fisubrl
insb
andb
xchg
adc
or
stos
mov
lock
adc
das
adc
outsb
cmp
rorl
mov
push
jae
sub
adc
pushl
xor
and
insb
out
dec
insl
mov
ljmp
inc
das
sub
inc
sub
adcl
icebp
aas
inc
sbb
sub
jns
jb
dec
sbb
xor
inc
decb
jmp
xchg
in
test
sbbl
dec
or
aam
jle
xchg
jmp
imul
repz
add
and
cmp
lret
mov
je
insb
jle
imul
sub
pop
jmp
outsb
loope
lea
mov
mov
les
lods
aad
dec
add
aas
insl
out
mov
popf
pop
pop
decl
aam
aas
not
mov
xor
mov
fs
xchg
jecxz
jl
repz
pop
jbe
adc
imul
xchg
out
jmp
inc
pop
mov
add
sbb
push
sbb
test
pop
jmp
xor
mov
mov
and
or
aad
mov
subl
dec
imul
ja
dec
inc
dec
xor
shll
shll
and
mov
xchg
test
jmp
dec
mov
mov
cmp
call
stos
mov
inc
sbb
cmp
rolb
test
xchg
mov
add
push
enter
popa
jno
nop
lea
cli
lods
sub
add
mov
nop
mov
cmpsl
ds
pop
cs
push
pop
insl
jmp
fld
pushf
pop
sbb
xchg
sub
or
cmc
lcall
mov
lret
mov
negl
and
jo
fs
pop
repnz
iret
loop
fisttps
clc
or
jne
dec
adc
mov
insl
mov
adc
es
fsubrl
xor
cmp
cmpsl
cld
in
sbb
ljmp
loopne
pop
jae
push
jp
les
and
dec
movsl
daa
jg
mov
sbb
push
rclb
and
out
hlt
or
jnp
sbb
sub
push
sbbl
xor
pop
popf
or
inc
inc
sub
dec
loopne
xor
cmp
jns
outsl
xlat
sarl
and
cltd
cmpsl
aaa
mov
xchg
dec
adc
mov
and
clc
sti
xchg
js
cmpsl
repnz
in
or
sbb
pushl
in
mov
sahf
clc
add
mov
negl
xchg
sbb
notl
pop
pop
ret
outsb
jo
push
jmp
gs
mov
shl
inc
xchg
cmp
paddb
pop
dec
sbb
push
push
push
xlat
cmp
push
and
call
stos
aam
mov
push
icebp
push
pusha
dec
in
dec
pop
call
fcompl
ret
sbb
popf
cs
lahf
adc
sbb
dec
imul
shr
xor
pop
jbe
inc
addr16
mov
pushf
out
loopne
pop
insl
push
out
push
cli
xlat
adc
push
leave
scas
push
xchg
jns
mov
xor
outsb
add
dec
fwait
xchg
mov
cmp
fstps
mov
lock
sbb
js
pop
dec
lds
inc
push
inc
clc
dec
pop
jno
outsb
ja
sbb
cs
or
jmp
cs
xchg
add
rcrl
pop
ss
sub
cmc
inc
test
test
jae
aad
mov
mov
sti
and
insl
mov
add
call
push
or
pop
scas
cmpsb
push
insb
lahf
mov
scas
bound
in
inc
cld
shrb
sub
jle
jmp
sub
mov
inc
sub
xor
jnp
arpl
push
scas
push
test
mov
aam
sti
fistpl
pop
push
mov
add
push
les
repnz
adc
and
mov
aaa
fcmovnbe
push
mov
pusha
xchg
sbb
and
mul
rolb
mov
sub
add
sarb
das
in
adc
pop
andl
mov
loop
std
cmp
jge
xchg
mov
roll
cmp
lcall
mov
and
lret
and
sahf
js
aaa
inc
inc
js
jns
push
push
stc
mov
aas
cmp
popf
inc
inc
rcrl
nop
pop
ficoml
inc
jo
pop
adc
fisttps
test
cmp
mov
adc
into
add
push
ror
iret
pop
jns
push
mov
out
mov
xchg
and
orl
scas
and
xor
sbb
stc
push
popa
icebp
in
les
dec
in
js
xchg
iret
add
out
sub
shrb
adc
or
and
jbe
sub
push
ss
push
cli
insl
cmpb
add
cmp
inc
fmuls
mov
dec
jnp
xor
inc
jb
inc
sbb
icebp
jecxz
movsl
mov
mov
add
dec
in
repz
cmp
jo
or
into
mov
decb
dec
xchg
add
sub
ljmp
fistps
xchg
fidivrl
out
ja
push
xor
push
jmp
out
cld
fisubl
mov
xor
mov
add
scas
in
cmc
pop
sub
mov
out
loopne
rol
jno
lcall
or
repnz
xchg
loope
xchg
mov
jae
cltd
out
daa
in
push
lods
jecxz
mov
fs
mov
shrl
cmp
mov
out
mov
mov
in
adc
inc
lcall
inc
adc
xchg
ljmp
jmp
adcl
int3
scas
mov
inc
test
pop
jno
mov
inc
jae
out
lods
sub
test
mov
dec
adc
cltd
outsl
sub
stc
fldln2
clc
mov
sub
cmp
push
mov
xchg
loop
xor
ss
ljmp
mov
popf
test
fists
push
cwtl
lods
sub
cli
lret
dec
cmp
push
jge
lret
icebp
mov
test
jae
add
ds
push
mov
dec
notb
cli
fists
adc
arpl
jl
inc
mov
dec
orb
insl
imul
lea
pop
out
sub
inc
adcb
daa
mov
scas
imul
daa
mov
mov
xchg
xor
mov
lea
pop
push
addr16
shll
push
loope
pop
jp
clc
xchg
push
imul
pop
jns
mov
fwait
popa
dec
jne
stos
in
in
mov
lods
cli
insb
mov
sub
push
stos
sarl
js
push
dec
xlat
movsb
fldenv
test
and
nop
or
and
cld
mov
add
pop
push
mov
mov
aam
js
mov
push
aas
mov
aad
sub
add
cltd
pop
stos
dec
mov
lods
into
push
scas
adc
mov
jecxz
shr
pop
jo
cld
rorb
xchg
clc
or
adc
loop
pop
ljmp
pop
outsb
jne
inc
lds
lret
iret
leave
and
movsb
jns
inc
push
ret
loopne
xlat
lret
dec
push
dec
addl
test
jp
mov
jno
pop
lcall
mov
shr
xor
jmp
mov
lock
sub
add
shll
addr16
scas
and
decb
adc
shll
jle
popf
fdivrs
cmp
xor
sub
and
xchg
mov
inc
add
shrb
mov
xchg
xchg
std
adc
or
inc
adc
pop
xlat
sbb
and
sbb
in
or
shlb
repz
pop
add
sarb
loop
insb
push
insl
testl
pop
scas
jg
imull
jns
insl
mov
mov
and
sarb
jmp
insl
insb
es
jl
or
xchg
insb
cmp
xorb
ret
jg
imul
sti
arpl
enter
rorb
mov
into
stos
js
loope
add
stos
add
shlb
mov
test
xchg
js
mov
movsl
int
cwtl
ret
xor
jecxz
sub
inc
mov
or
outsb
decb
pop
into
mov
jns
cli
imulb
ret
lahf
jge
inc
jo
call
adc
inc
dec
ss
in
adc
iret
or
lret
xchg
mov
sbb
pop
xchg
lret
dec
cld
mov
imull
cmpb
mov
in
pop
aad
sub
call
into
int
and
sub
add
imul
xor
jno
aaa
mov
jb
lret
adc
outsb
cld
lock
jg
jmp
jmp
xchg
jnp
sbbb
sub
jmp
lock
mov
loope
push
mov
add
mov
out
sbb
ljmp
mov
mov
fmuls
add
xchg
repz
rorl
pop
loop
pop
cmp
pop
fnstenv
add
insb
bound
sbb
pusha
imul
xchg
lret
mov
movsl
loopne
js
pop
adc
cmp
sbb
or
inc
nop
dec
adc
push
in
enter
pusha
push
icebp
pop
popa
hlt
subb
jae
sub
icebp
xchg
mov
mov
inc
and
jg
jbe
ljmp
cmpsl
sub
or
iret
pop
xor
add
pop
push
add
ret
cmc
leave
sahf
mov
mov
sbb
insl
sub
cmp
jmp
mov
xchg
push
dec
repz
arpl
adc
inc
mov
cltd
daa
xor
push
ret
xchg
dec
add
add
es
dec
or
pop
mov
ljmp
mov
ret
xchg
mov
gs
xchg
fucomip
insb
ficoms
call
fdivrl
dec
in
mov
or
sbb
dec
adc
arpl
mov
notb
jns
lea
dec
lods
xchg
xor
push
pop
and
aad
fisttpl
lret
xor
pop
leave
inc
ja
cmpsl
test
push
int3
or
push
je
mov
rol
movsl
stc
inc
scas
testb
mov
test
out
in
cmpb
dec
fstl
insl
adc
xor
test
fimuls
aad
adc
adc
mov
enter
push
jmp
data16
cmp
and
jmp
je
push
imul
xor
and
arpl
loopne
mov
push
dec
lea
adc
dec
mov
xchg
mov
lret
or
in
in
movsl
jecxz
jmp
rcrl
pop
inc
test
inc
das
lret
filds
or
lods
popf
cmp
jge
mov
ficompl
cmp
sbb
dec
jg
data16
cmp
push
jne
jb
jg
adc
lahf
push
mov
flds
mov
inc
or
fimuls
scas
xchg
sub
imul
jmp
cmpsl
aas
fidivrs
icebp
scas
lahf
daa
add
push
cld
scas
push
pop
fs
push
lods
sub
sbb
pop
pop
out
loop
jo
and
inc
adc
cmp
test
lods
dec
inc
int
jae
and
jmp
xchg
decl
loopw
jnp
pop
mov
sub
cmp
inc
test
xchg
jecxz
stos
jno
es
test
inc
xchg
push
inc
cmc
mov
xchg
push
lea
js
xchg
dec
stos
sub
push
imul
test
ror
push
lods
lea
sbb
sub
and
cmc
fs
jl
jae
dec
sti
dec
mov
mov
sub
and
lcall
push
jl
mov
jge
fists
add
inc
test
cli
lods
mov
sti
stc
pop
stos
fisttpl
jge
cmp
xchg
lret
mov
push
push
loop
sub
ja
push
ret
out
mov
lods
xlat
xor
stc
insb
scas
daa
adc
lret
dec
sub
add
daa
out
out
insb
sti
mov
je
mov
adc
std
bound
ljmp
fsubrl
inc
fisubrs
fisttps
ret
or
sbb
mov
adc
scas
adc
or
push
dec
xchg
aam
jno
sub
call
xor
and
and
popa
leave
andb
push
inc
mov
or
stc
cmpsb
dec
ror
loop
jo
fistpl
cmpsb
pop
inc
pop
sbb
mov
inc
shlb
popf
or
jl
in
jb
dec
movsb
mov
subb
dec
and
leave
mov
mov
lods
push
sbb
jns
jno
mov
pop
es
jle
inc
fiaddl
pop
and
outsl
jno
in
dec
ja
xor
repnz
mov
jnp
sbbb
outsl
rorb
jo
adc
xor
mov
ret
ja
clc
dec
lret
std
cmp
adc
push
push
jb
sub
in
cmpsb
fmuls
ret
mov
shr
shl
in
jle
xchg
add
push
mov
je
adc
pop
cmp
dec
mov
or
insl
xchg
loopne
or
jbe
mov
pop
shlb
test
adc
inc
es
xor
mulb
fwait
or
in
mov
test
push
daa
mov
and
mov
scas
and
ret
push
mov
inc
mov
xchg
fildl
rorl
and
popa
mov
jbe
sub
test
pop
loope
jle
aaa
pop
popf
loopne
mov
daa
lret
or
nop
mov
lcall
std
lcall
pop
pop
push
jmp
scas
cltd
aad
jo
lods
mov
loop
lret
xor
jnp
std
addr16
dec
cmp
cmp
rcr
repz
int3
pop
out
add
xchg
pop
das
mov
aam
jbe
jmp
loop
xchg
fldcw
jmp
add
dec
sbb
lods
leave
pop
dec
mov
ds
popf
sarb
xchg
inc
into
lahf
jo
sbb
add
imul
or
or
addr16
loopne
mov
lds
pop
xchg
movsb
push
sbb
and
adcb
pop
mov
popa
or
or
lea
cltd
jns,pn
mov
dec
mov
lahf
mov
jnp
sub
iret
xor
push
mov
jmp
aam
subl
rorl
fbld
fcomi
pushf
jb
xchg
sbb
cltd
push
xchg
mov
mov
mov
xchg
push
repz
add
aam
loope
sbbb
pusha
hlt
or
xlat
pop
aaa
add
sub
adc
jbe
sbb
dec
test
mov
rcl
into
aad
iret
mov
jecxz
inc
dec
xchg
dec
stos
ja
mov
cmpsl
lcall
add
shl
pop
inc
jmp
notl
arpl
movsb
hlt
imul
divb
cwtl
cli
sbb
jne
sbb
fcomps
or
sub
mov
fldl2e
notb
lahf
sbb
cmc
gs
test
push
inc
inc
mov
and
inc
repnz
cs
lock
xchg
fisubs
cmpb
cli
inc
cmp
mov
mov
jle
les
movsb
and
cmp
mov
and
push
dec
idivb
lds
shlb
or
stos
stos
add
addr16
pop
loop
mov
mov
aas
out
rorl
daa
in
inc
mov
ds
mov
mov
lock
into
xorb
inc
and
push
repnz
mov
cmpsl
jmp
aad
sti
stos
and
pop
ljmp
mov
xor
pop
es
jne
or
sbb
pop
loop
push
aad
aad
movsb
add
mov
gs
stos
xor
push
add
add
or
ficomps
jmp
mov
les
movsb
cmp
push
add
cmp
lods
cli
lret
movsb
or
decl
hlt
mov
push
adc
mov
les
and
movsb
jbe
fcoms
xchg
jp
mov
lahf
fsubp
das
frstor
out
imulb
inc
xchg
sti
enter
push
adc
sbb
testb
mov
icebp
jecxz
or
mov
push
sub
mov
jl
jbe
pop
cmpsl
test
xor
stos
int
sbb
mov
and
jo
je
pop
bound
mov
or
ret
cmpsb
mov
test
pushf
clc
out
daa
adc
insl
xchg
cltd
xorb
decl
mov
orl
cli
loop
ljmp
dec
mov
mov
loop
adcb
mov
and
cltd
cld
and
cld
push
dec
mov
push
mov
inc
ljmp
adc
cmp
push
rolb
shrb
adc
push
dec
and
fnsetpm(287
cs
mov
mov
lods
pop
push
sub
lea
sbb
es
mov
adc
lcall
jbe
fists
xor
mov
mov
subl
push
add
loop
cmpsb
push
fists
int3
out
movsl
or
mov
adc
ss
test
inc
add
insl
lods
cmc
jno
push
adc
inc
jnp
aam
data16
mov
insb
outsb
inc
add
ffreep
xlat
dec
insl
into
jge
scas
cmp
cmp
push
clc
xor
mov
inc
mov
testb
icebp
mov
pop
pop
mov
inc
inc
fs
push
mov
les
xor
jmp
lcall
dec
push
mov
inc
jge
cltd
sbb
push
scas
cmp
mov
add
leave
push
push
lock
cmpb
stc
imul
pushf
push
sbb
mov
dec
sub
mov
xchg
add
mov
loope
lret
rol
jne
jmp
mov
out
mov
mov
jmp
fsubrp
jns
stc
xchg
sbb
mov
out
loopne
add
shlb
push
test
add
dec
add
rcl
jge
insl
or
pop
push
add
fistps
mov
and
xchg
adc
js
iret
scas
repz
pop
cmp
aaa
cwtl
into
ljmp
dec
call
xchg
dec
or
test
lcall
lds
ficomps
mov
fmul
mull
push
mov
dec
dec
ss
cltd
sarb
adcl
int
test
or
movsb
daa
jge
add
mov
popf
mov
sbb
insl
mov
stc
int
in
jmp
add
cmp
and
push
jo
push
aaa
out
enter
mov
dec
pop
mov
fs
fwait
pop
lret
cmpsb
jg
mov
pop
bound
mov
mov
lcall
out
or
and
pushf
and
repz
fs
cmp
out
push
les
jg
or
test
xor
and
cmp
mov
test
lret
jo
pop
cmc
mov
out
jo
scas
not
ljmp
sbb
cmp
mov
xchg
sbb
add
dec
dec
ret
cmp
adc
rcr
in
fmul
pop
xchg
std
movsl
loopne
xor
loope
mov
aad
xor
into
xchg
sub
inc
repz
push
pop
mov
mov
cmp
les
sbb
jecxz
insb
scas
std
xlat
orb
das
je
repnz
cmpsb
loopne
in
push
inc
inc
jle
jne
cmp
xor
or
or
pop
mov
sub
lea
rorb
sub
fdivrs
xchg
sub
clc
mov
lcall
sub
inc
pop
std
je
test
int
add
inc
repz
jge
push
clts
loop
orb
insb
mov
shrb
or
imul
lret
xchg
sbb
out
cmp
jp
mov
jns
shlb
test
adc
pop
xlat
add
inc
cli
cmp
mov
loopne
inc
sub
shll
fmull
stos
int3
mov
js
dec
inc
mov
pop
add
addr16
sahf
andl
scas
add
das
je
mov
mov
mov
add
fadds
cld
sub
out
jne
das
testl
aam
jge
dec
add
cmp
push
aas
push
imul
push
and
repz
xchg
std
xor
mov
fisubrl
jne
lock
pop
lock
push
cmp
jecxz
fwait
sub
out
push
mov
dec
mov
push
cs
mov
lahf
loopne
rcr
jl
fstl
loopne
jmp
inc
mov
push
aam
xchg
out
adc
fidivrl
sbb
xchg
fidivl
push
in
imul
in
in
mov
inc
add
fs
lods
and
cmp
add
jb
xor
int3
sbb
fsubrs
jmp
or
mov
fmul
mov
dec
iret
xlat
loop
pop
lret
dec
es
push
ss
loop,pn
and
xor
fidivs
pop
js
lret
adc
and
push
rorl
dec
test
loope
push
mov
lock
scas
cltd
dec
test
les
add
push
ja
fs
test
jnp
sub
add
sub
in
cmc
cs
push
jmp
hlt
sub
cmp
add
lahf
in
popf
push
shlb
push
dec
test
pusha
add
imul
or
dec
dec
xchg
add
inc
xchg
aam
daa
xor
or
xor
lods
add
cli
dec
dec
xchg
into
mov
fwait
xchg
dec
rcrb
mov
jg
xchg
test
shll
jb
icebp
adc
loop
subb
sbb
mov
sub
and
cli
int3
jmp
inc
or
push
loope
push
test
aas
popf
rcrb
pop
add
insl
pop
cwtl
pop
mov
mov
mov
add
pop
fwait
pop
cmc
or
cmpsb
std
and
inc
outsl
test
fcompl
inc
xor
cld
adc
cmp
rcr
lea
gs
adc
ja
and
cmp
xor
fwait
sub
lds
out
pop
mov
rorl
jne
fcoml
repnz
or
mov
sbb
fadd
sub
std
out
xor
cmp
out
add
mov
push
xchg
mov
inc
and
adc
divl
insl
and
mov
rol
mov
jae
fcmovu
jo
pop
inc
and
repz
jno
adc
lock
xor
xor
sbb
xor
repnz
ds
push
cli
aaa
push
xor
idivb
adc
pop
stos
loop
sbb
addr16
int
ss
or
push
sbb
lcall
movsb
jnp
aad
xchg
xor
jle
cmp
mov
imulb
ret
stos
lret
inc
or
or
aam
arpl
and
mov
adc
iret
mov
mov
or
cmpb
xchg
pop
xor
xchg
mov
add
jnp
xchg
mov
push
push
mov
mov
dec
sbb
ja
test
pop
addb
adc
cmp
stos
int
stos
sub
xor
sbb
fstps
mov
out
inc
mov
lcall
mov
clc
sbb
dec
mov
ret
enter
xchg
push
mov
les
inc
icebp
stos
leave
cli
xchg
jnp
xchg
mov
sbb
pop
push
in
or
fildl
pusha
mov
out
enter
pop
mov
sbbl
jno
mov
fsubrs
subl
cmp
std
jmp
lock
ret
cmpsl
xlat
ss
xchg
insb
aam
mov
arpl
aad
pop
or
loope
stos
shrl
xor
adc
and
mov
insl
popf
orl
cmpsl
sub
push
outsb
int
adc
cmp
mov
fdivs
push
lret
sub
inc
fidivrs
jnp
xchg
nop
jns
mov
testb
std
insb
sub
and
dec
test
dec
and
push
aam
inc
pusha
je
or
cwtl
jg
xchg
inc
lret
outsb
adc
rcrb
int3
sub
mov
mov
pushf
cwtl
push
xorl
inc
xor
repnz
jg
notrack
ss
or
ficoml
test
or
inc
cli
sbb
add
xor
rorl
sub
cmp
outsl
xor
lea
jno
int
test
mov
cmpsl
jecxz
scas
cld
pop
ja
jo
and
and
mov
adc
outsl
daa
xor
arpl
xor
daa
mov
movsl
xor
mov
mov
inc
push
outsl
pop
and
insb
inc
jg
cmc
cmp
test
fdivs
pop
sbb
add
rcrl
add
gs
cmp
jl,pn
mov
roll
dec
sub
mov
gs
repnz
das
or
ret
mov
loope
xchg
pop
inc
push
mov
lods
ficomps
rcll
dec
jg
packsswb
enter
or
cmpsb
jg
add
adc
or
inc
mov
and
das
addr16
lock
insl
adc
inc
rorl
sbb
ss
and
sahf
into
add
cmpsl
in
sbb
cwtl
orl
pop
sub
shl
inc
cld
stos
stc
mov
js
daa
add
and
aam
clc
xor
mul
sbb
jmp
loop
mov
push
lret
scas
and
inc
ss
inc
pop
or
or
int
mov
cmp
aam
xchg
imul
dec
sub
add
adc
cmp
jmp
jp
idivb
add
add
sub
cs
cmp
ja
das
xor
leave
and
jbe
pop
cmpsl
out
sbb
fwait
lahf
rol
xchg
inc
pop
push
add
sub
dec
xchg
sbb
dec
enter
std
fiaddl
add
insl
aam
sbb
dec
sti
mov
leave
aaa
sbb
vorps
xchg
out
or
mov
add
bound
dec
and
push
mov
jge
xor
andb
xor
out
inc
mov
inc
mov
pusha
mov
cmpl
sub
sub
lods
inc
jns
jno
sub
mov
inc
mov
int3
in
pop
sub
gs
enter
repnz
xor
sbb
add
rcr
push
cmp
mov
lea
popa
mov
outsb
jp
xlat
cmp
mov
xchg
outsl
xchg
imul
lret
pop
enter
mov
and
cmc
inc
stos
pop
mov
push
push
jae
adc
sbb
jb
mov
mov
dec
jmp
pop
jns
in
iret
call
cmp
pop
inc
cmc
xor
call
pop
mov
les
pop
test
fdivrl
out
mov
imul
mov
jmp
or
dec
sbb
inc
les
lock
or
mov
cmp
dec
stc
jl
sbb
fs
xchg
mov
mov
nop
loopne
daa
test
sbbb
stc
sti
jno
loopne
mov
dec
cmp
out
adc
mov
pop
xlat
inc
cmp
mov
inc
jg
cmpsb
cmp
aas
movsl
adc
mov
mov
mov
cmp
or
ljmp
aas
stc
imul
loope
test
mov
inc
dec
into
repz
or
movsb
rcrl
ret
cli
leave
xor
push
outsl
sub
jl
daa
push
repz
aaa
popa
leave
xchg
leave
cmpsl
cs
push
sbbl
jae
or
inc
jl
mov
sbb
mov
fstp
pushf
into
adc
in
enter
out
mov
cmp
xor
enter
add
fsubr
cltd
scas
sub
jo
addr16
aad
test
mov
pop
ret
andl
dec
push
jmp
pop
hlt
xor
out
jle
adc
or
cmp
or
jmp
aad
sarb
icebp
out
or
inc
test
clc
in
mov
or
xchg
xchg
sub
test
mov
sbb
popf
or
nop
add
shrb
out
fdivl
pop
push
xchg
testl
into
icebp
and
mov
or
out
or
jl
rorl
imul
mov
outsb
sbb
xchg
sti
loop
cld
jne
aam
mov
adc
cmpb
loop
rcrl
fwait
stos
subl
fwait
mov
jge
iret
inc
in
jae
sbb
jge
add
sbb
pop
out
adc
mov
sbb
mov
imul
sarl
idivb
not
adc
pusha
dec
mov
xlat
aad
and
push
add
xor
mov
cld
hlt
or
pop
fs
into
pushf
sahf
add
iret
sbb
xchg
mov
sub
adc
ret
bnd
mov
mov
sahf
adc
xchg
jne
cmp
sahf
js
adc
shlb
jle
lcall
movsl
cmp
mov
cmp
inc
cmc
test
push
cmp
mov
add
rcl
ret
xchg
jecxz
daa
dec
dec
and
mov
into
and
cltd
pop
xchg
pop
imul
dec
aam
lahf
arpl
sbb
add
or
mov
fwait
push
adc
add
loope
test
add
pop
mov
scas
sbb
jnp
sub
inc
daa
cmp
push
mov
xchg
push
dec
and
pushf
jp
sbb
sbb
hlt
jne
mov
dec
and
es
xor
orl
dec
push
cmp
arpl
imul
andb
adc
int
in
fldcw
jge
push
pop
iret
jnp
lods
jge
lcall
icebp
enter
les
aas
mov
cmpl
and
shl
daa
lret
scas
jmp
inc
mov
jecxz
rolb
out
cwtl
loop
mov
arpl
add
cmpsb
arpl
sbb
jmp
ja
xchg
cmpsb
dec
dec
pop
cmp
xchg
cltd
cmp
mov
cmp
inc
iret
dec
xor
sbb
mov
sbb
andb
sub
outsl
cmp
das
flds
divw
push
sub
and
jbe
sub
rclb
mov
mov
xorl
syscall
or
sti
sub
in
lds
aaa
cmpsl
adc
xlat
jp
aam
mov
cs
ret
mov
sarb
lahf
int
das
lods
stos
inc
shrl
jge
sub
data16
inc
lahf
jge
lea
and
cmp
clc
fdivrp
dec
jb
ss
leave
les
imul
pop
dec
out
mov
imul
in
aad
clc
push
sub
lods
bound
jns
adc
mov
ret
data16
mov
cmp
lcall
pop
leave
lahf
adc
push
jp
inc
test
cli
sbb
stos
cli
sub
adcl
test
mulb
rclb
lcall
pop
mov
pop
enter
lods
cwtl
pop
sub
xchg
add
xchg
cs
or
js
fdivs
subl
xchg
xchg
dec
iret
in
imul
mov
int3
ja
cmp
daa
cmpsb
adc
adc
jno
leave
jnp
lahf
sbb
xchg
scas
push
mov
mov
fldcw
daa
xchg
adcb
xor
adc
rcrb
insl
cmp
out
nop
fdivrl
xor
push
sbb
das
ret
jne
movsl
fs
xor
jne
sti
push
cltd
popa
ljmp
xchg
sti
outsb
add
inc
ljmp
loop
jmp
add
mov
mov
les
cmp
cmp
push
mov
aas
roll
and
push
mov
jle
mov
sub
iret
scas
aam
jno
daa
lret
cmp
mov
js
roll
add
push
into
aas
shrb
jecxz
push
gs
in
mov
js
lock
mov
lret
jbe
cmp
mov
ljmp
adc
test
inc
inc
pop
ds
jmp
dec
inc
test
sbb
jns
lret
cmp
pop
add
dec
jns
adc
clc
pop
nop
rcrb
ret
mov
push
es
pushf
jnp
js
cmp
mov
ljmp
add
jecxz
adc
cld
pop
jno
push
mov
ret
imull
or
loope
push
rorb
mov
pop
insb
pop
icebp
arpl
ret
cltd
out
jbe
mov
inc
and
imul
dec
jo
pushf
aaa
stos
xor
mov
leave
sub
inc
xchg
push
pop
mov
pop
pop
sub
loopne
andl
mov
mov
inc
jnp
push
mov
mov
sahf
cmp
sub
icebp
enter
xlat
add
xchg
dec
and
and
xor
inc
ret
push
dec
jmp
loop
rcrb
push
pop
scas
mov
dec
scas
aas
pop
mov
jns
sub
mov
es
test
test
mov
movsl
xchg
adc
dec
pop
mov
sbb
mov
ret
rcll
loop
cltd
lcall
and
or
mov
aas
fcmovu
add
bound
lds
xchg
xor
xchg
and
dec
scas
push
inc
jbe
hlt
or
dec
shrb
sbb
xchg
mov
rcrb
pop
enter
stos
mov
mov
add
and
popl
xor
sbb
pop
call
jae
add
aaa
jno
fcmovne
adc
out
das
sarl
cli
adc
cmp
jae
shrb
inc
mov
ja
mov
aas
cmpsl
sbb
mov
mov
mov
mov
or
or
jecxz
arpl
outsb
xor
fcoms
inc
rolb
pop
pushf
ss
cmp
sub
imul
sub
adc
pop
pop
or
lahf
leave
mov
popf
sahf
outsb
fisttps
xor
xor
mov
icebp
test
addr16
stos
xchg
add
and
clc
sbb
aad
cmp
in
mov
mov
pop
lock
lahf
cmp
movsl
or
ds
lods
lahf
stos
cltd
push
mov
insl
adc
fimuls
popa
stc
cs
addr16
or
leave
cmpsl
mov
or
dec
dec
mov
movsl
cmc
imul
jne
push
leave
pushf
push
mov
add
lods
cmp
in
aas
jmp
push
push
fwait
testb
jmp
cmp
jg
aam
ds
push
cmp
lretw
mov
mov
jae
sbb
xchg
push
xor
jns
jmp
push
leave
inc
adc
cli
add
lock
pop
push
fisttps
pop
cmp
push
out
inc
add
fdivp
adc
mov
xor
xchg
movsl
ds
jle
jno
imul
enter
bound
pusha
sub
mov
lahf
mov
ret
inc
xor
xchg
xchg
cmp
pop
pop
pushf
dec
iret
xchg
in
inc
icebp
push
pop
addl
outsb
das
and
out
rcl
iret
inc
pop
fwait
pop
sub
mov
or
pop
mov
or
inc
mov
and
lcall
lock
loopne
repz
and
push
push
xchg
loopne
xor
mul
xor
jmp
push
mov
rorl
cmpsl
or
arpl
sbb
adc
ret
fwait
sbb
dec
xchg
fdivs
repnz
mov
mov
mov
outsl
repnz
or
je
mov
mulb
pop
inc
lods
subl
outsb
push
sbb
adc
mov
test
and
popl
dec
xlat
mov
jnp
sahf
mov
mov
lock
in
push
push
imul
pop
in
add
imul
ret
and
sbb
je
mov
mov
int
loope
mov
je
imul
and
ds
pop
add
jecxz
out
pop
or
mov
ret
lds
push
mov
or
xor
add
aam
sub
xlat
pusha
add
jno
out
int3
sbb
out
adc
cmp
loopne
lea
dec
scas
jp
in
xchg
dec
push
pop
push
mov
inc
leave
scas
adc
in
lahf
adc
test
cmovp
push
jmp
dec
mov
xor
rolb
xor
xchg
mov
loopne
xor
insl
mull
pop
mov
pushf
jl
push
sub
and
mov
mov
xchg
fsub
popa
and
jno
shl
lock
push
into
jae
clc
cli
xor
inc
xlat
and
jecxz
cmpsl
insb
or
loop
dec
jecxz
mov
movsl
sti
outsl
cmc
out
cli
fadds
daa
test
add
xor
cltd
inc
loopne
sub
into
xchg
les
sbb
inc
imul
mov
mov
xchg
call
cmp
cmp
cld
adc
cwtl
sub
add
mov
inc
outsl
cmp
and
mov
int3
mov
adc
loope
and
add
pop
cmp
insb
push
je
sbb
loop
mov
mov
jmp
jl
fcomi
cld
lret
push
jnp
in
aad
mov
adc
or
cwtl
push
int3
dec
out
sbb
and
int3
out
pop
scas
inc
inc
imul
sub
and
iret
dec
adc
xchg
jmp
push
lock
stos
int3
lret
repnz
fs
xor
jp
mov
push
aas
cmp
cli
and
bound
fwait
pop
mov
xchg
mov
stos
rorl
sbb
pop
sub
nop
xchg
adc
jecxz
xor
pop
sbb
jne
test
pop
pop
aas
or
sahf
stos
jnp
add
cmp
or
xchg
inc
fwait
mov
and
and
test
mov
mov
loopne
das
sub
sbb
mov
push
stc
popa
mov
push
or
iret
nop
ljmp
inc
daa
clc
cmp
cmpsl
leave
cmp
mov
lock
cmpsb
xchg
jo
aaa
test
mov
mov
pop
adc
insb
mov
lds
mov
push
loopne
fiaddl
addb
fs
jp
js
sti
insl
xchg
fcmovnbe
mov
outsl
cmp
ss
push
jecxz
cld
sbb
pop
mov
pop
stc
sub
cwtl
push
sti
push
cs
xor
add
lods
cmp
aas
popf
xchg
push
dec
push
xchg
xchg
pop
inc
shlb
shll
int3
jmp
roll
sub
sbb
pop
icebp
shl
out
and
mov
push
repz
adc
mov
push
out
loopne
les
outsb
lods
mov
jb
xor
imul
push
js
movsl
jbe
cltd
adc
je
push
lea
ja
iret
mov
mov
repz
lcall
mov
jp
test
inc
fnstcw
add
pop
ror
sahf
and
divl
or
leave
mov
test
ja
shlb
pop
and
jl
and
mov
sbb
cmp
fs
push
push
out
pop
add
orb
cmpsb
dec
dec
ja
pusha
mov
fcomps
outsl
lea
mov
push
lret
push
aaa
test
inc
cmp
enter
fdiv
call
sub
js
xor
adc
stos
or
dec
das
imul
addb
call
stos
in
cmp
leave
push
push
mov
dec
int3
lds
cmp
mov
or
aam
test
jnp
setae
fiadds
or
mov
hlt
fbstp
mov
add
test
adc
mov
insb
imul
jbe
cld
sbb
mov
mov
repnz
and
and
lret
xchg
les
ds
in
sbb
fidivl
inc
inc
fcompl
and
mov
push
sub
mov
out
out
int3
cmp
icebp
aaa
and
dec
xor
adc
out
mov
sbb
scas
mov
in
hlt
popa
in
pop
push
jge
mov
in
xchg
cltd
scas
sahf
ficoml
into
sbb
cld
sub
rcrb
dec
test
retw
pusha
scas
daa
ror
sahf
and
or
dec
jo
push
jns
ret
xor
mov
call
dec
jb
dec
outsl
addr16
jno
inc
or
icebp
int
pusha
sbb
das
arpl
gs
fidivs
in
lcall
xchg
pusha
push
inc
mov
and
pushf
xchg
enter
stos
mov
gs
shll
aad
mov
mov
inc
xchg
sub
sub
out
dec
insl
pop
rorl
inc
jg
clc
inc
lret
dec
push
inc
sub
add
test
arpl
pop
inc
pop
mov
or
jb
cmp
popl
incl
jo
mov
xlat
xor
push
push
mov
gs
jae
adcl
stos
cmpsl
pop
xchg
out
call
sbb
jne
cmp
lret
fdivrs
sub
loopne
arpl
xlat
cmp
sbbl
adc
jns
ud1
lret
subl
push
addr16
lods
and
xor
dec
sbb
pop
and
and
pop
lock
and
in
jle
dec
mov
js
inc
je
sbb
add
cltd
inc
pop
xor
and
lods
daa
bound
jns
jp
subb
cmpsb
jecxz
es
gs
adcb
in
jl
jno
and
les
out
pushf
mov
popa
mov
addr16
insb
fisttpll
jle
push
aam
les
std
cli
mov
mov
dec
jle
notl
jno
cmp
or
xchg
jbe
imul
pop
aas
sub
xchg
js
cmc
adc
mov
pop
aad
cmpsb
in
mov
idivl
sub
arpl
es
cli
addr16
mov
lock
pusha
jle
mov
jne
and
pop
add
es
lret
mov
dec
shl
insl
lds
and
push
xor
notb
mov
inc
add
lods
cltd
int3
lret
mov
mov
fs
push
sub
subb
xorl
sub
je
aaa
insb
insb
inc
jp
ficompl
popa
inc
xor
mov
ror
sub
rcrl
out
movsb
mov
mov
daa
adcl
mov
cs
jmp
lea
push
jmp
inc
mov
or
and
dec
push
mov
and
lds
scas
inc
pushf
in
inc
push
xchg
dec
mov
enter
or
cmc
lcall
jmp
jne
mov
repnz
cmp
cmpsb
sub
mov
rcl
dec
push
sub
xchg
push
repz
cmp
mov
bound
or
test
fdiv
insl
cmp
push
fwait
imul
lahf
and
cmp
inc
lds
jl
outsl
movsl
stos
xor
test
cmp
push
dec
mov
dec
dec
ret
and
jmp
fcoml
call
cmpsb
pop
xor
test
xchg
into
jmp
loop
int
push
lcall
dec
jl
xor
and
mov
cmp
jecxz
add
popa
in
add
mov
push
jl
adc
movb
jb
push
push
mov
sbb
and
xlat
ficoml
icebp
insb
cli
sahf
inc
jnp
sub
xor
push
and
fistpll
adc
ss
loopne
mov
es
arpl
adc
dec
push
lds
mov
mov
inc
add
inc
xor
pop
std
add
push
movsl
push
scas
out
jmp
fidivrs
or
push
cli
loop
jbe
mov
push
lock
cmc
xchg
push
cmp
jmp
pusha
cmc
dec
arpl
adcb
loopne
dec
enter
in
lods
push
lret
add
add
cmp
scas
and
cmc
dec
jb
test
xor
fstpl
std
or
dec
jg
mov
arpl
mov
popf
cltd
or
and
mov
movsb
jo
mov
add
add
aas
inc
lahf
scas
scas
pop
dec
sahf
or
hlt
stos
push
icebp
pmaxsw
popa
popf
cs
pop
cltd
rcr
xlat
sbb
lea
pop
les
and
pushf
lret
mov
dec
dec
dec
cmp
dec
push
fs
mov
dec
icebp
xchg
dec
popf
mov
ljmp
cld
inc
or
mov
jmp
mov
push
stos
inc
jne
ljmp
or
loope
jge
push
sahf
mov
jle
popa
into
xor
or
cwtl
push
cmc
cld
add
add
dec
xchg
repz
test
adc
sub
xchg
jae
jg
pop
jl
or
or
xchg
test
outsl
enter
push
add
clc
movl
out
add
xchg
or
out
js
stos
sub
mov
iret
ret
lret
sbbb
xor
jp
flds
mov
popa
push
and
jbe
xchg
fldt
cmpsl
test
int3
movsb
fcomip
lea
les
xor
or
cmp
lret
rclb
mov
lods
mov
sbb
fldt
icebp
fwait
dec
xlat
hlt
mov
in
test
push
mov
shrl
iret
jbe
loopne
les
mov
mov
fs
rcrl
xorl
lods
aad
dec
divb
mov
sub
scas
out
mov
bound
out
mul
push
or
lock
add
fyl2x
inc
push
enter
xchg
sbb
nop
outsb
js
lret
out
add
insb
sub
ja
lret
jl
pushf
fildl
mov
mov
xchg
mov
cmp
scas
daa
dec
add
adc
mov
std
shlb
mov
inc
push
pusha
push
jmp
jnp
dec
sbb
and
stos
rcll
jp
fists
push
outsl
mov
and
stos
jmp
xor
fstl
sub
out
jl
repnz
ljmp
jl
outsl
dec
fsubrl
mov
into
push
push
mov
lods
mov
pop
pop
dec
mov
adc
adc
fistl
and
testb
cmp
mov
pop
and
mov
lret
xor
dec
fs
pop
outsb
mov
push
stc
sti
stos
test
addr16
lea
xchg
adc
or
test
pop
inc
movsl
or
mov
fwait
xor
paddusw
fs
fwait
cmpsb
sub
lahf
jp
adc
push
sti
dec
jle
clc
test
mov
pushf
in
cmp
aas
insl
cmpsl
sub
dec
or
imul
inc
sub
into
rol
push
dec
inc
call
mov
fmul
add
xor
xchg
stos
ret
add
dec
orl
ret
out
pop
imul
loop
dec
dec
dec
jecxz
movsl
sub
push
xor
sbb
in
mov
int3
push
loop
out
cmpsb
int3
adc
xchg
fcmovnb
dec
adc
mov
ret
movsb
sub
sbb
push
adc
in
out
rolb
push
push
leave
mov
clc
imul
jbe
mov
adc
test
push
mov
dec
shrl
lods
xor
dec
lahf
adc
adc
inc
inc
dec
insb
adc
push
adc
popa
js
jnp
sub
cld
jge
sub
pop
gs
sub
imul
fs
mull
and
loope
inc
es
dec
iret
aaa
add
in
repz
icebp
outsb
fsts
int
jmp
loopne
int
mov
pop
sbb
jmp
data16
pop
xor
out
pop
pop
in
sbb
fbld
inc
out
lahf
adc
cmpsl
out
test
push
repz
in
mov
or
subb
cmp
cs
inc
xchg
jg
outsl
push
dec
shrb
outsb
or
xor
xor
aad
add
sarb
fdivrl
sti
out
out
insb
test
flds
adc
in
fnstenv
push
pop
insb
popf
aas
xor
add
fcmovne
sub
daa
xchg
or
jl
or
xchg
xchg
insl
movsb
mov
in
mov
pop
rorb
jl
fisubl
xor
cs
sbb
cmp
xor
mov
mov
loop
jecxz
sbb
iret
add
jge
rcl
adc
sub
sub
pop
mov
cs
lret
push
aaa
push
fisttpll
outsb
scas
insb
cs
sti
mov
rolb
xchg
xchg
mov
and
test
incb
push
aad
js
shl
xchg
or
xchg
fldl
push
sbbb
and
push
iret
or
aam
or
pop
dec
clc
cmpsl
lcall
sub
fsubl
or
hlt
xor
or
cmc
iret
negb
pop
aad
stos
xchg
pop
mov
sbb
lds
jae
nop
loope
jl
scas
mov
fiaddl
cmp
mov
cmc
out
scas
mov
pop
rorl
jmp
sub
divb
xor
movsb
sub
mov
inc
xor
push
popf
lods
sti
sarb
sub
loope
push
mov
aad
rclb
inc
int3
out
in
mov
xor
push
jl
xor
sbb
dec
dec
sbb
xchg
jl
repz
ds
fsts
xchg
sti
and
add
pushf
sub
pop
clc
adc
mov
dec
mov
insb
pop
arpl
hlt
fs
xchg
arpl
fsubrl
test
loop
xlat
pop
sbb
inc
push
jl
xchg
ja
xchg
push
jp
cmp
inc
int3
adc
sbb
inc
mov
xchg
imul
imul
dec
sbb
hlt
mov
cmp
mov
mov
gs
jae
pop
out
inc
or
out
lret
test
lret
aad
add
push
dec
add
push
mov
xchg
inc
andl
out
pop
rcrb
cld
sbbl
push
xchg
xchg
xor
mov
jnp
and
mov
inc
xchg
insl
les
setne
jno
mov
cwtl
rorl
mov
push
scas
flds
out
mov
dec
mov
testl
sbb
jae
and
or
or
mov
or
and
dec
in
jecxz
push
push
xor
jecxz
bnd
mov
aad
imul
pop
clc
adc
xchg
mov
push
sub
shlb
push
imulb
out
in
scas
xor
push
ljmp
push
mov
pushf
jecxz
shll
lret
sti
pop
shrl
ret
mov
dec
mov
ljmp
mulb
dec
jle
aam
iret
sahf
in
and
call
pop
lds
fnstcw
xor
jnp
movsl
lret
rcl
push
gs
ret
add
fadds
leave
sbb
mov
jecxz
test
xor
or
jp
or
imul
mov
mov
aas
fsubrs
gs
test
mov
push
insl
adcl
pop
push
hlt
cmc
shl
adc
sub
dec
mov
cli
lea
pop
inc
lahf
lcall
push
movsl
jp
aad
push
pop
enter
jge
pushf
cmp
sub
into
dec
mov
mov
jns
jnp
out
cmpl
stos
stos
into
nop
sbb
inc
pop
lods
inc
cmp
sub
xchg
addb
repnz
and
repz
push
fmull
push
sti
dec
pusha
loop
pop
cwtl
mov
enter
insl
arpl
adc
sub
pop
sub
add
aas
mov
mov
pop
inc
clc
loopne
mov
fdivs
ret
out
ja
das
int
pushf
jecxz
stos
in
pop
mov
sbbb
ljmp
inc
mov
vmwrite
ja
xor
mov
cmpsl
sub
gs
adc
jle
add
mov
mov
imul
fs
add
repz
inc
mov
fimull
inc
xchg
xchg
stos
clc
jmp
iret
sub
mov
and
sbb
xor
int
pop
cwtl
daa
mov
pop
mov
inc
inc
xchg
jge
imul
jbe
mov
inc
push
mov
jge
mov
pushl
adcl
pop
lock
pusha
int3
inc
sbb
sub
push
pop
aad
popa
mov
mov
push
xorl
dec
jmp
repnz
out
or
adc
lret
lcall
out
leave
push
push
push
pop
mov
fisubrs
fildl
imul
ljmp
lds
aas
dec
adc
adc
cld
in
add
in
or
sub
push
cmp
adc
xchg
mov
push
addr16
ljmp
or
mov
pop
dec
dec
rorl
dec
sahf
cs
repnz
pop
push
adc
mov
sbb
dec
movsl
pop
arpl
xchg
test
pop
pusha
jecxz
add
gs
jp
mov
and
dec
dec
ds
or
jne
add
xlat
lcall
loopnew
loope
push
les
add
push
mov
or
pop
cld
mov
mov
out
or
inc
mov
sub
dec
adc
push
cmp
outsb
sub
jmp
rcr
pop
and
jo
adc
lcall
and
inc
mov
jns
inc
jne
xor
fimuls
sahf
xchg
hlt
adc
neg
mov
rcrl
or
lods
mov
xchg
cltd
fcmovb
lods
push
std
sbb
xor
cmpsb
call
pop
adc
stc
int3
xchg
in
sub
sub
xor
fimuls
sub
pop
inc
mov
mov
xorb
mov
bswap
out
mov
jnp
push
aaa
xor
test
arpl
nop
out
jl
rcrl
cs
daa
push
fcompp
pop
repnz
push
mov
xor
push
arpl
pop
pop
cmp
jl
outsl
lds
sbb
and
mov
adcb
loope
jl
cld
mov
add
xchg
pusha
inc
mov
pushf
fwait
adc
mov
popa
fsubs
xchg
jle
sub
xchg
shlb
sbb
pop
and
incb
adc
sub
push
roll
pop
sub
ljmp
xchg
jnp
addr16
xchg
cmc
xchg
je
lcall
jg
ljmp
jp
frndint
cld
jb
out
jle
movsb
iret
cmpsl
mov
lds
les
pop
imul
dec
addr16
fsub
aas
sub
xchg
cmp
xchg
fldcw
sbb
mov
pop
dec
mov
fmuls
stos
fwait
pop
imul
dec
push
shl
jecxz
enter
or
aam
mov
mov
outsb
cli
mov
sub
jge
sub
inc
cmc
add
clc
fs
mov
and
xchg
cmp
and
test
stc
in
or
jmp
cld
mov
das
sub
movsl
fwait
pop
loop
add
sbb
xlat
repz
sub
dec
dec
cmp
mov
xchg
lds
and
sub
push
ljmp
push
loope
es
mov
add
aas
mov
adc
shlb
aam
inc
jle
inc
sbb
push
les
xor
iret
sbb
sub
push
sub
subl
lds
imull
xor
jnp
jle
sahf
sbb
mov
int
cld
imul
fsub
mov
xchg
rdmsr
sarb
jg
or
xchg
sti
cmpsb
loope
xor
sahf
loopne
mov
pop
adc
dec
cltd
mov
shlb
push
rorl
and
add
loope
mov
mov
adc
mov
inc
orl
jge
mov
inc
pushf
cmc
jns
add
shlb
jne
out
dec
mov
sbb
xchg
or
push
in
testl
xchg
pop
cltd
fidivl
aas
inc
shl
cmpsb
xchg
addr16
mov
lds
add
gs
adc
in
test
cmp
dec
xchg
cmp
or
jge
loope
cmc
xor
loopne
mov
ja
ljmp
nop
dec
popf
cmp
or
scas
movsl
push
jmp
or
dec
add
popa
out
fs
in
cmp
add
pop
xchg
andl
mov
pop
mov
pop
imull
mov
dec
xchg
in
out
insl
sub
mov
and
mov
add
js
sbb
and
sub
or
or
xor
sbb
pop
mov
sub
in
rcl
imul
das
sub
imul
pop
into
dec
inc
and
test
push
lahf
fwait
testb
or
insb
loop
sarl
scas
imul
jbe
adc
out
aas
cmp
xchg
mov
add
push
sbb
push
sar
jae
jg
add
sbb
loopne
mov
not
jl
xchg
inc
lds
sbb
je
sbb
sahf
inc
aas
fwait
es
inc
jo
or
sbb
mov
or
orb
inc
jae
stos
jns
pusha
mov
outsl
popa
inc
pop
lea
stc
stos
xchg
sbb
repz
cmp
dec
clc
adcb
jmp
inc
jo
and
jg
ret
loop
push
push
fldl
cs
mov
or
arpl
je
or
inc
dec
jp
pop
not
mov
xchg
adc
inc
lret
cmp
inc
outsl
sub
jg
mov
flds
pminsw
fwait
mov
ret
in
and
enter
shlb
adc
test
lret
fcoms
je
adc
repnz
xorb
mov
inc
lods
std
sub
mov
lret
lahf
inc
fs
mov
pop
pop
and
imul
pmaxub
movsl
icebp
jecxz
das
cld
sti
fisubs
cmc
xchg
add
mov
nop
stos
cmp
adc
test
les
pushf
movsb
call
cmp
je
in
jns
adc
cltd
jnp
cs
shlb
push
jb
loop
mov
mov
cmp
popa
hlt
and
cmp
sub
rcrl
mov
jne
lods
insb
adc
fsubs
popf
scas
mov
jl
stos
inc
lea
lahf
xor
push
add
and
ret
sahf
xchg
jnp
sti
sbb
pop
xor
cmp
inc
jecxz
js
fiaddl
xchg
pop
ret
pop
or
ret
imul
mov
add
pushl
movq
adc
pop
dec
jne
ds
pop
sub
sbb
cmc
jl
adc
ja
lock
mov
rcr
push
popf
outsb
xchg
daa
test
pop
js
xor
or
cli
sbb
mov
leavew
lock
sbb
pop
jmp
pop
jno
rcrb
mov
pop
jnp
pop
adc
stc
pop
inc
mov
movsl
lret
scas
lods
test
dec
inc
push
loopne
in
and
je
xchg
cmpsl
inc
sub
jne
jae
xor
dec
int3
aad
mov
mov
push
dec
sub
adc
inc
or
sbb
scas
xchg
cli
aam
cltd
insb
cmp
cwtl
in
xchg
sahf
das
xor
out
push
scas
push
sub
into
int
push
and
inc
mov
scas
popf
aaa
or
inc
inc
movsl
popf
jae
adc
xchg
jge
adc
sub
int
mov
orb
mov
mov
inc
inc
mov
sbb
aaa
xor
in
scas
or
dec
xor
push
xchg
lock
adc
mov
cli
xlat
inc
mov
mov
sub
ror
or
xchg
mov
repz
cli
pusha
mov
mov
ror
fdivrl
in
sub
xchg
ret
mov
daa
movsl
sbb
sub
shll
mov
cltd
lock
dec
adc
pop
push
jo
daa
std
mov
add
out
pop
sub
mov
lock
lea
jg
je
iret
and
mov
dec
stc
repnz
mov
or
das
ds
and
jno
jnp
add
jecxz
xchg
mov
outsl
outsb
in
cltd
pand
rolb
dec
fs
mov
dec
add
mulb
mov
lods
iret
push
outsb
lahf
mov
or
adc
in
jl
lahf
lds
call
rcrl
or
sbb
rcr
sub
jmp
test
fs
jbe
xor
cwtl
inc
enter
cmpsb
push
mov
movsl
sub
sbb
pop
pop
push
sbb
pushf
push
xchg
mov
loopne
shl
decl
mov
sub
in
mov
mov
mov
je
imul
je
jbe
xor
xchg
testb
push
lcall
in
pop
sbb
bound
test
lods
mov
or
and
cld
mov
xor
xchg
sti
push
jmp
pop
leave
mov
xor
addr16
xor
push
xchg
imul
leave
xchg
mov
pop
xor
push
adc
sub
stc
cmpsl
repnz
in
sub
jg
mov
jl
xor
sub
lock
mov
cwtl
es
leave
movsl
jle
dec
xchg
lret
jne
ss
push
in
mov
clc
nop
push
add
shlb
fistps
ret
jp
add
imul
popf
addr16
or
mov
cmp
imul
out
movsb
ljmp
nop
pop
pmaxub
mov
jns
add
fwait
xor
cmp
pop
scas
mov
dec
ret
pop
xchg
sbb
cs
aas
and
sub
add
mov
pop
xchg
sbb
sti
sbb
pop
mov
in
jns
das
gs
nop
sbb
jbe
aaa
aaa
icebp
xor
cmpsl
push
std
and
sbb
pop
push
into
or
int
mov
in
rorl
mov
dec
push
lds
adc
inc
mov
mov
fsts
lock
sahf
push
dec
mov
gs
cmp
jg
cwtl
adc
bound
sub
js
add
out
dec
ljmp
xchg
xchg
cltd
in
or
orb
leave
or
dec
sahf
jo
cli
sbb
clc
lods
hlt
mov
test
adc
lds
stos
les
push
fadd
jo
push
inc
xor
xor
movsb
fdivrp
movups
sub
push
scas
dec
outsl
cld
rcll
fnstenv
rcl
mov
f2xm1
or
cmp
jnp
xor
les
fbstp
and
jmp
rcrb
mov
mov
mov
daa
xchg
and
and
notb
test
out
add
popa
in
movsl
scas
mov
mov
mov
xlat
or
daa
fsts
aas
xor
aaa
sub
rclb
jns
aam
jne
jae
jns
pop
xchg
mov
mov
push
out
jmp
loopne
jne
sti
dec
push
arpl
mov
sbb
movsb
outsb
in
push
mov
test
je
inc
orb
pop
add
je
push
cmp
into
jle
xlat
add
aam
adc
fbstp
aaa
fbstp
lret
sub
data16
loop
repnz
xchg
mov
cmc
faddl
push
mov
call
push
cmp
outsb
and
arpl
in
out
mov
sbb
je
je
fwait
push
in
sub
arpl
or
dec
fdivrs
incl
pop
adc
sub
aam
xor
lods
jae
jecxz
mov
lock
cltd
push
fucomi
and
enter
pop
mov
imul
test
push
aaa
cmpsb
xchg
cltd
out
mov
fisubrs
mov
inc
in
mov
mov
lea
jo
fldl
xor
mov
xchg
push
jbe
push
push
sbbl
dec
ljmp
or
push
fstpl
fmuls
push
adc
cwtl
pop
jmp
dec
faddl
adcb
add
dec
pop
aam
or
lock
cmp
mov
popf
js
mov
xor
mov
ss
or
xor
or
mov
inc
cmpsb
cmc
cmc
ds
adc
outsl
test
inc
insl
mov
iret
add
clc
adc
ror
adc
pushf
xchg
mov
mov
shl
push
add
scas
dec
xor
dec
cmp
adc
and
mov
mov
adc
mov
sti
stos
loope
or
adc
mov
mov
cmp
mov
cmp
out
in
pop
jmp
xor
dec
jno
clc
lea
push
clc
and
jb
js
sbb
lret
ja
pop
sub
inc
fistps
inc
mov
add
mov
xchg
adc
in
fcoml
loope
mov
xor
into
mov
test
or
mov
loopne
lahf
xchg
cmp
pop
iret
addr16
shr
movsl
dec
xor
jne
adc
insb
popf
mov
push
iret
push
jae
pop
mov
fsub
adc
mov
jge
ljmp
test
dec
dec
or
testb
lods
mov
sbb
rep
negl
or
sbb
sbb
fsubrl
outsb
add
das
push
cli
cmc
add
sbb
adcb
fs
mov
mov
movsl
andb
imul
lcall
daa
lret
rcll
fcomps
cli
stc
xchg
xchg
loope
cmp
stos
jp
test
hlt
pop
adcb
lret
push
cli
xchg
out
in
in
xchg
jge
cmc
mov
jecxz
dec
loop
std
in
test
ljmp
add
in
xchg
sbb
or
mov
daa
jecxz
js
in
ja
adc
or
pushf
push
stc
insl
repz
sbb
xchg
shll
mov
adc
jp
xchg
push
cmp
and
mov
loope
push
lock
and
loope
in
fdivs
sbb
aaa
add
andb
out
aad
aas
jle
or
push
test
mov
push
inc
add
inc
push
mov
je
xor
std
mov
dec
shl
xchg
or
pop
cmpsb
outsb
or
ret
cmp
adc
xor
adc
jecxz
shl
in
cmp
dec
mov
fimull
das
int3
xor
icebp
pop
mov
xor
loop
std
pop
out
cld
imul
add
iret
ss
out
pop
enter
sbb
out
addr16
dec
mov
dec
dec
inc
adc
jno
jae
js,pt
mov
into
loope
imul
test
repnz
xchg
xchg
inc
xchg
aaa
pop
out
pop
test
push
loope
shrb
sub
insb
popf
xchg
adc
sbb
loope
mov
xor
xor
push
pushf
subl
js
gs
dec
hlt
movsl
push
jns
mov
rcll
add
fcoms
sti
mov
ficompl
out
or
jae
mov
int
adc
sahf
or
scas
push
inc
adc
movsl
sub
or
jbe
in
xchg
aam
fistpl
lahf
mov
mov
fwait
jnp
fnstcw
repz
mov
cld
pop
aad
pop
dec
rorl
arpl
inc
mov
mov
mov
movsl
fst
mov
std
je
mov
dec
jbe
jo
sub
shlb
out
popa
mov
mov
cli
sbb
aas
mov
cmp
rclb
push
lods
push
pop
cmp
lahf
dec
lret
je
inc
in
add
nop
jb
jne
sbb
addr16
push
jno
mov
in
sbb
in
test
add
add
inc
fwait
aaa
sbb
dec
test
xor
call
bnd
jbe
fwait
les
fdivrl
adc
mov
adc
mov
std
mov
or
test
xchg
aaa
inc
xchg
inc
jnp
bnd
jne
cmp
jnp
aaa
rorl
add
jg
inc
mov
clc
fldl
sub
ret
sub
jmp
pop
mov
shrl
mov
cmc
sbb
jae
push
adc
ljmp
inc
std
cmp
sahf
daa
pop
addr16
loopne
cmp
add
fdivl
add
pushf
jg
cmp
mov
stos
jne
cmc
jbe
movsl
pusha
jp
aaa
sbb
pop
inc
insl
pop
xor
xchg
adc
sub
imul
xchg
rcr
push
ss
or
xchg
xchg
mov
adcl
mov
push
add
in
pop
out
aam
cltd
std
fucomip
sub
and
cmpsl
mov
lds
test
mov
outsb
cmc
jnp
neg
jecxz
dec
ja
dec
or
outsl
pop
loop
xchg
ss
dec
dec
xchg
or
push
mov
fidivs
mov
mov
lock
into
sbb
inc
out
add
cmpsl
subl
mov
test
adc
push
sub
pop
push
mov
mov
cmpsl
mulb
mov
push
lock
sub
and
lock
add
adc
fnstsw
clc
add
adc
mov
pop
jno
or
jge
xor
or
mov
xor
daa
jnp
inc
aas
and
dec
push
adc
sahf
cmp
loopne
lret
shrl
les
cli
sbb
loope
pop
aas
push
xchg
std
lods
and
sarb
jge
fcoml
xchg
mov
dec
cmp
es
add
fwait
sub
adc
jp
in
sbb
sub
pusha
movsl
popf
je
std
rolb
jbe
fwait
mov
push
cmp
jle
rol
inc
xor
add
xchg
aad
jne
clc
hlt
jmp
xor
jbe
mov
pop
cli
push
cs
adc
push
and
insb
pusha
push
incb
cmpsl
mov
pop
adc
xchg
or
aam
jg
sahf
jp
lcall
mov
mov
mov
or
enter
rol
test
xor
and
into
clc
sbb
jle
icebp
mov
adc
ss
xor
jp
sub
adc
add
mov
adc
gs
insb
fwait
mov
loope
xchg
or
push
lret
pop
or
xchg
incl
sahf
gs
roll
sub
cmp
push
lcall
xchg
xor
add
imul
sarb
popf
into
pop
jge
popa
inc
arpl
sarl
mov
mov
icebp
xor
out
std
push
mov
inc
lahf
mov
pop
mov
shlb
push
jle
testb
mov
scas
mov
bound
jno
sbb
in
sti
shr
xchg
movsl
xor
lret
push
lea
inc
jg
fisttps
jge
punpckhwd
nop
xchg
jp
push
pop
in
xchg
scas
mov
scas
pop
add
jmp
fsubrs
mov
ret
popa
outsl
sub
mov
and
and
xorb
mov
mov
pop
sub
repz
in
sbb
jae
cmp
mov
in
ds
push
push
xor
pop
inc
fisttps
add
aas
add
jbe
out
mov
mov
sub
pop
inc
xchg
enter
repnz
lret
jl
ljmp
popa
imul
stos
and
and
aad
movsl
lret
xorl
jo
mov
aaa
jmp
mov
xchg
fneni(8087
jae
hlt
es
cwtl
stc
loope
das
cmc
xor
mov
lds
pop
pop
sbb
adc
ret
enter
inc
cmp
lahf
push
inc
dec
rcrb
loop
xchg
sub
ss
add
pop
sub
push
std
xchg
cmp
bound
cmp
xor
cmp
mov
dec
xchg
pminsw
sbb
add
sub
clc
jl
mov
jae
lret
sar
push
nop
lret
popa
xorl
inc
out
popa
ficomps
scas
adc
loopne
mov
adc
gs
fwait
les
fnstcw
lret
xor
and
ret
xchg
pushf
mov
push
cltd
in
and
jg
inc
out
inc
push
and
push
aad
enter
ljmp
in
mov
or
test
loopne
push
push
add
inc
mov
in
adcl
ja
cltd
movsb
daa
aaa
mov
inc
dec
pushf
out
dec
sahf
xor
xchg
mov
inc
mov
pop
sub
testl
sbb
mov
pop
jp
adc
mov
sbb
pop
mov
jno
out
outsb
repz
fndisi(8087
out
mov
push
rcll
mov
jo
pop
stos
into
les
push
sbb
in
or
mov
out
jb
mov
xchg
xchg
adc
rcrb
sub
sbb
push
sbb
mov
jl
inc
gs
pop
xchg
pop
ret
xor
negl
xlat
push
pop
inc
cmp
fisubl
dec
pop
dec
cmp
jo
xlat
lock
cmp
xchg
push
lret
or
cmp
add
imul
nop
mov
push
pusha
cwtl
push
mov
loopne
mov
jne
cmp
icebp
je
in
pop
adc
lcall
sub
fildll
xchg
or
push
lahf
mov
rcll
mov
sbb
repnz
fcomps
sbb
cmpsl
xchg
pop
pop
fs
sub
iret
sub
insl
mov
push
dec
iret
push
mov
push
mov
fcomps
mov
adc
mov
inc
es
ss
cmpsl
add
push
aad
cltd
xchg
push
adc
std
add
jg
inc
enter
sahf
mov
cli
cmpsb
movsb
test
xchg
test
xor
adc
and
test
jns
fdivs
xor
and
nop
lods
notl
or
jnp
sbb
andb
je
mov
test
inc
jmp
push
mov
mov
push
add
enter
subl
loopne
cmp
adc
xchg
sarl
sbb
imul
mov
sbb
cmp
cmp
xlat
je
out
push
in
add
mov
sub
xor
inc
roll
jecxz
jne
add
fwait
push
cmpsl
sub
jg
push
inc
jne
sub
mov
faddp
jmp
scas
outsb
cmp
lods
xor
mov
sahf
adc
cs
push
insl
or
adc
cmp
mov
adc
xchg
shll
scas
push
in
xor
dec
dec
mov
cmp
stos
xor
sbb
add
mov
cmp
ficomps
jae
subl
fs
push
mov
add
xchg
xchg
out
lods
fnstcw
and
add
call
cli
aas
dec
pop
ret
and
fadds
pop
mov
mov
leave
cmp
fs
cmp
popa
jnp
sub
dec
jbe
xor
dec
das
aam
mov
data16
mov
push
shl
jecxz
mov
test
popa
push
pop
push
mov
stos
repnz
cltd
mov
lret
pop
repnz
sub
or
mov
xor
shr
ds
add
aas
sub
mov
mov
je
add
xorl
and
stos
fldl
sub
dec
shlb
and
nop
mov
or
mov
and
out
sbb
pop
xor
imul
jno
adc
jmp
xor
cltd
pop
mov
adc
arpl
dec
jno
jae
jo
dec
sbb
pop
jp
call
sbb
jno
std
ja
sbb
shll
mov
loopne
popf
mov
popf
push
or
shrl
repnz
icebp
lock
jge
push
mov
es
gs
lret
stc
inc
xchg
pop
pop
jl
imul
sbb
mov
ret
mov
xchg
sbb
ss
mov
fbld
stos
or
cmp
in
mov
sbb
fcomp
dec
leave
inc
data16
cmp
dec
or
sbb
shl
lcall
pop
int
stos
and
test
adc
sahf
inc
cmp
adc
xor
xor
mov
cmp
pusha
adc
fwait
sub
jl
dec
lret
es
add
adc
outsl
rorl
fdivr
push
cmp
sarl
cmc
push
sbb
lea
in
push
and
mov
adc
scas
adc
push
pop
adc
movsl
inc
mov
int3
push
aam
outsb
imul
lret
cltd
add
mov
mov
lock
ds
lcall
sub
sbb
ss
adc
push
push
or
rclb
sbb
inc
and
mov
loopne
loopne
setae
andb
pop
add
sar
rorb
cmc
mov
lcall
cmp
inc
add
xor
loopne
ret
push
mov
inc
leave
mov
pop
xor
fnstcw
jp
jmp
fs
adc
or
add
mov
cmp
pop
in
push
fsubrl
sbb
in
addr16
inc
inc
jns
pop
mov
movsl
and
push
dec
xchg
sbb
int3
mov
jecxz
test
dec
inc
rcr
repnz
loopne
sahf
outsb
pop
and
inc
xchg
sbb
arpl
mov
addb
adc
fdivl
inc
xchg
adc
sbb
sahf
je
into
cmpsb
out
mov
jmp
js
sbb
loope
mov
inc
xchg
adc
mov
mov
inc
mov
addr16
rorb
adc
dec
nop
in
xor
adc
in
imul
js
or
sbb
gs
or
dec
mov
fwait
shr
sbb
imul
mov
adc
sbb
cmp
nop
sbb
xor
jg
dec
cmpl
ficomps
adc
stc
mov
mov
xchg
into
push
les
dec
sbb
fwait
xlat
jbe
sahf
xor
mov
fisttps
xor
cmp
cwtl
sbb
jl
divb
jle
mov
movsb
lods
xor
pop
push
add
nop
xchg
mov
xchg
faddl
xchg
or
ret
add
and
sahf
movsb
inc
sub
adc
outsb
sub
or
daa
cmc
jnp
rorl
icebp
mov
pop
mov
push
loopne
mov
shlb
xchg
sub
and
xchg
adcb
mov
and
xchg
xor
sub
mov
cmp
push
out
cld
dec
ljmp
inc
lods
mov
sbbb
insb
jge
mov
jg
je
icebp
dec
ljmp
add
in
push
jecxz
mov
jbe
pop
cwtl
mov
icebp
xchg
xchg
arpl
adc
insl
hlt
fnstenv
scas
pop
hlt
aam
xor
jbe
mov
dec
mov
ja
adc
mov
or
popf
xchg
adc
das
sub
push
sbb
mov
fnstsw
push
and
push
out
aaa
imul
cmpsl
rcrb
mov
lods
xchg
cmc
sbb
in
push
insb
push
xlat
mov
cli
in
fdiv
and
cmp
mov
jge
and
cmp
insl
mov
push
sti
mov
into
out
mov
xchg
fimull
lcall
mov
pop
rorl
and
jb
cmc
lahf
out
xchg
cli
sub
mov
push
test
sahf
repz
jecxz
test
scas
cmp
xlat
dec
and
jge
lcall
out
test
add
xor
xor
mov
pop
push
inc
sbb
sub
jl
js
nop
rorb
cld
xchg
or
imulb
xchg
aad
xor
sarb
pop
or
cmp
insl
cld
sub
icebp
jge
xor
mov
sbb
xchg
adc
inc
and
sbb
ret
jg
cmpsl
mov
pcmpeqd
pop
in
cli
inc
or
mov
xchg
fiaddl
out
pop
mov
push
test
scas
xor
and
inc
jecxz
mov
xlat
sbb
and
cmp
lret
lcall
inc
xor
int
imul
mov
or
nop
mov
inc
nop
popa
aaa
es
jb
push
xor
mov
andb
mov
fs
dec
jo
aas
mov
push
cli
je
repz
nop
pop
add
andb
and
mov
xlat
lret
xor
sbbb
dec
and
js
or
pop
cld
sub
imul
jo
jns
or
sbb
aas
dec
loope
sub
mov
adc
iret
pop
cmp
adc
lret
xor
in
mov
mov
mov
out
int3
pop
mov
or
loop
sbb
cmc
in
mov
inc
xor
arpl
mov
sbb
cmp
mov
add
cmp
rolb
mov
dec
mov
cmc
not
pop
push
rcl
ja
and
fstpl
and
call
xchg
adc
frstpm(287
jnp
sbbb
xchg
imul
insl
mov
fdiv
jo
and
fstpt
mov
xor
mov
insb
mov
and
sbb
dec
xchg
mov
xchg
jecxz
addr16
sub
push
divb
cmp
or
in
inc
flds
push
sarl
xchg
lahf
daa
jno
xcrypt-ofb
cmpsl
das
push
outsl
or
mov
jp
inc
lods
mov
push
mov
jg
or
mov
jmp
les
push
insl
lea
jns
jae
mov
incl
enter
es
test
adc
adc
xchg
fsts
cltd
fsubrl
mov
mov
testb
pop
leave
jmp
adc
mov
cmp
inc
mov
pop
or
js
xchg
das
inc
pop
pop
mov
add
insb
fwait
cmp
pop
fsubs
push
xchg
inc
mov
shrl
mov
rolb
mov
jo
jns
add
es
jnp
dec
sahf
jne
add
xlat
cmp
push
add
scas
movsb
aaa
adc
push
jns
mov
cmp
in
fsubrl
jae
mov
pop
xor
in
jg
nop
scas
movsb
pop
mov
or
rol
xor
mov
cmpsl
inc
fs
cmpsb
hlt
sub
push
lea
jnp
mov
pop
push
inc
addr16
sbb
lahf
dec
shrl
leave
dec
or
icebp
aad
adc
mov
sub
cmp
sahf
pop
add
inc
push
adc
mov
xchg
stc
incb
xchg
push
jo
mov
jge
out
daa
lods
out
pop
cmp
sbb
xchg
fisttpl
imul
lock
dec
add
iret
pop
es
dec
mov
aaa
pop
cmpb
les
mov
or
ds
cvtpi2ps
fcoml
sub
paddb
fwait
rcr
lcall
sar
push
jno
es
lea
es
ss
push
nop
sbbb
inc
outsl
push
inc
popf
or
jnp
fdivrl
in
mov
mov
push
add
inc
addl
mov
mov
mov
sbb
sbbb
cmpsb
mov
fcoml
jg
loop
jno
xor
into
insl
ftst
mov
pop
loop
int3
nop
or
lcall
sub
fidivl
icebp
xchg
sti
es
pusha
sub
push
hlt
in
dec
dec
xchg
add
lods
ret
mov
mov
add
mov
outsl
std
xor
mov
inc
enter
sbb
dec
sahf
scas
and
inc
imul
mov
lret
mov
inc
movsl
cs
inc
scas
mov
cli
cmpsb
mov
push
mov
pop
add
dec
idivl
fcoms
fcompl
push
test
cmp
adc
outsb
push
sbb
dec
fisubs
aam
das
fistl
cmp
in
cmp
dec
xchg
in
out
xor
push
xchg
int3
test
jecxz
push
push
or
add
cld
xchg
inc
aaa
pop
dec
xchg
fcomip
sub
jg
test
mov
sub
push
xchg
ficoms
test
imul
icebp
ret
jno
sub
and
dec
mov
cmp
rcll
jg
xlat
and
hlt
test
aad
mov
divb
jl
jg
inc
mov
jg
jle
scas
in
movsl
push
jne
inc
je
scas
push
pop
sbb
in
xor
pushl
push
popf
cmpps
jl
push
scas
ss
mov
enter
stc
cmpsl
adc
test
ja
sbb
sbbl
ss
push
shlb
jae
fisttps
mov
xchg
mov
and
xchg
loopne
jecxz
out
mov
sub
sub
mov
stc
push
xor
ud2
mov
inc
add
inc
mov
lods
das
push
sub
add
sbb
jl,pn
ljmp
mov
mov
insb
repz
mov
lock
adc
xor
mov
or
popf
out
mov
hlt
leave
xchg
add
stc
repz
arpl
aaa
in
subb
cmp
data16
push
rcr
aad
and
popf
xorb
lods
lods
std
xor
fcoms
pop
dec
enter
loope
pop
cmp
cmpsl
xor
and
aam
cmp
adc
jno
or
sub
rcrl
popa
mov
sub
repnz
push
push
add
fld
rcrl
ds
mov
mov
inc
inc
jae
clc
gs
add
mov
and
jnp
cmp
pop
pop
sbb
jle
out
pop
mov
mov
xor
jg
outsb
cmc
cmp
adc
setge
inc
xchg
nop
pop
sbb
dec
xchg
xchg
pushf
add
sbb
call
outsb
xor
inc
and
pop
cs
stc
sub
lea
subb
jnp
mov
rep
enter
xlat
cmpsb
sbb
dec
mov
fs
jns
cli
fldt
enter
mulb
mov
mov
sahf
cwtl
xor
jg
jge
fwait
lods
lock
and
stos
dec
push
scas
or
jns
mov
nop
movsb
ja
push
jmp
fidivrl
pop
sbb
mov
lods
add
scas
push
mov
push
loop
iret
out
out
test
jne
sub
jg
cs
push
movsl
ret
test
aad
data16
push
jle
fists
loop
mov
jo
ret
fs
sarb
lods
fimuls
fdivl
dec
les
mov
mov
jecxz
sub
push
int3
adc
jecxz
xor
in
jmp
jmp
jo
mov
sbb
xchg
inc
push
jbe
fmull
imul
clc
stos
fdivl
mov
or
shlb
outsl
iret
adc
fistpll
out
mov
cmpb
frstor
dec
jecxz
and
xchg
out
sub
ret
les
test
push
daa
pushl
fs
pusha
inc
jae
mov
test
cmp
shrb
lea
xchg
cld
call
stos
pop
cwtl
dec
iret
cmp
fidivl
sbb
add
jnp
pop
inc
sub
cmp
pop
aam
jo
inc
push
push
lea
lahf
sub
divl
cltd
cwtl
out
lods
rclb
aas
xor
lods
das
cltd
scas
push
or
mov
sbb
fwait
scas
int3
jp
dec
cmp
and
aad
in
in
push
sbb
mov
cli
imul
and
int
jge
fwait
adc
ja
sahf
sub
out
or
push
cs
push
test
roll
push
cmp
xchg
out
pop
push
xlat
shll
lods
sub
push
and
or
bound
jbe
loopne
inc
add
cmp
insl
dec
and
xchg
mov
sbb
adc
jecxz
repz
cwtl
or
push
xor
jp
push
jnp
aad
dec
cmp
dec
cmp
cld
sub
adc
and
xor
mov
lret
fsubs
xchg
ret
nop
lods
cmp
mov
stos
mov
mov
loopne
sub
in
push
xor
mov
fistpl
popa
in
mov
insb
icebp
js
jnp
insb
test
sbb
rcrb
xor
ss
inc
xchg
lods
imul
cmp
fldl
imul
xchg
add
rcrb
mov
mov
push
jb
jp
sbbl
jb
mov
mov
cwtl
mov
mov
std
test
add
lods
lret
sbb
and
icebp
ss
cmp
jmp
out
mov
lret
jl
xor
insb
add
jle
or
in
inc
jbe
sub
in
scas
int
gs
shrb
int3
mov
dec
inc
loop
ss
scas
stos
xchg
pop
das
mov
inc
xchg
sub
xor
cld
push
jge
mov
cmp
stos
and
and
inc
push
popa
pop
inc
push
repz
aad
xchg
mov
cs
push
out
addr16
xor
out
and
stos
push
out
sbb
xor
cltd
and
ds
js
push
push
sbb
and
cmpsl
dec
cs
push
arpl
jle
add
cwtl
loope
loop
movsb
sub
add
fmuls
mov
mov
jp
mov
aad
push
stos
push
ss
pop
mov
test
jae
cmpsb
movsb
add
xor
cltd
push
and
cwtl
scas
jns
bound
scas
mov
scas
sarb
xor
int3
cmp
stos
jno
and
mov
lcall
jmp
push
add
pop
xchg
push
or
dec
mov
test
and
call
jbe
lcall
cs
int
fcompl
push
movsb
sbb
inc
pop
je
int
lret
add
mov
ljmp
sbb
icebp
xchg
ljmp
sub
and
mov
or
jle
cli
and
gs
xor
sbb
movsb
sub
or
jns
pop
sub
es
pop
inc
sbb
inc
sbb
shrl
dec
insb
xchg
sbb
fidivrs
imul
pop
ljmp
rorb
lret
or
push
testl
push
xlat
mov
cs
add
icebp
xchg
pop
pop
inc
sahf
sub
mov
push
sbb
xlat
xor
test
ficomps
sub
mov
fidivs
dec
xchg
clc
pop
lret
adc
pushf
ficomps
outsl
test
xor
sbb
jp
push
aam
xchg
fwait
in
inc
cmp
jmp
out
jae
sub
imul
addr16
inc
inc
nop
pushf
test
add
call
adc
jo
xchg
lret
push
inc
sub
and
fisttpl
cmp
js
cmp
or
cmc
xor
dec
mov
and
or
cmpsb
cmp
cmp
scas
cwtl
sub
cs
inc
mov
cmp
inc
or
fbstp
addr16
push
inc
imul
sbb
aam
lahf
cmp
addl
testb
push
gs
or
je
scas
jns
sbb
and
inc
adc
jge
pop
push
pop
mov
xorb
ljmp
jg
push
cwtl
inc
mov
push
or
and
mov
sbb
stos
out
incl
int
in
xor
mov
xor
mov
push
cmp
add
inc
icebp
pop
dec
das
cmpsl
jae
in
add
aam
int3
mov
xor
shlb
mov
jl
rorb
adc
mov
mov
push
mov
popa
stos
call
mov
jmp
mov
push
icebp
add
pop
add
stos
leave
test
divb
nop
xor
out
dec
test
jecxz
sub
mov
lods
mov
js
gs
lods
and
adc
and
and
xor
or
xor
mov
xchg
ljmp
aaa
add
repz
xchg
jae
rorl
loop
cmp
mov
cwtl
add
jns
adc
sub
fwait
repnz
inc
fs
movsl
pop
das
cmp
sbb
xor
mov
fists
cmp
and
nop
lock
test
xor
xchg
sub
push
daa
jecxz
lret
sbb
sbb
daa
outsl
cli
decl
scas
in
xchg
sahf
mov
adc
loopne
adc
mov
fidivrl
cmpsl
and
movsb
and
aad
aaa
in
jmp
sub
sub
jmp
adc
into
mov
cwtl
xchg
xor
cmpl
push
fwait
popf
jmp
rorl
outsb
xchg
sbb
aaa
inc
push
ljmp
loopne
out
adc
fwait
call
lcall
fisubrs
push
or
xor
fnstenv
std
bnd
sbb
dec
push
mov
stos
pop
in
mov
repz
cmp
in
push
mov
filds
imul
push
icebp
pop
sub
xor
push
dec
fistps
ss
and
les
insl
fwait
jno
pop
in
ret
and
repz
js
roll
add
mov
dec
lss
repnz
std
scas
sbb
jecxz
cwtl
enter
es
out
rclb
sbb
test
mov
mov
jns
cmp
xor
sahf
shrl
orl
jns
cmp
xchg
movsl
mov
mov
cli
adc
dec
cs
jle
adc
notl
insl
sbb
fstpt
rcrb
inc
sbb
jecxz
mov
xchg
insl
xchg
jo
sbb
shll
in
int3
lds
pop
mov
add
cmpsb
xchg
mov
in
sub
pop
int3
addb
xorl
addr16
ficoml
stos
xor
fisttpll
mov
ds
or
dec
pop
je
lcall
and
arpl
push
cmpsb
xor
leave
pushf
ret
sbb
int3
data16
mov
xchg
inc
xor
mov
sub
sbb
sub
int3
jne
mov
fimull
fidivrl
sbb
pop
ss
int3
sub
int3
pop
xorb
pop
cmp
dec
scas
stos
sbb
icebp
cmp
repz
inc
fmull
sub
mov
in
ret
cs
int3
push
cmp
stc
cmp
test
adc
push
and
push
mov
scas
scas
mov
xor
mov
scas
xlat
fsubrs
push
ret
xor
loop
xchg
mov
jno
clc
sub
incb
andl
mov
jo
xchg
dec
jg
in
gs
mov
fldcw
pop
sbb
dec
lock
cmp
push
sbb
inc
pop
adc
cmp
adc
adc
imul
or
sub
stos
push
inc
inc
rcl
sbb
out
es
and
ljmp
xchg
jnp
xor
test
xchg
xor
pusha
mov
mov
pop
lods
loop
into
imul
mov
inc
aad
arpl
jge
les
inc
cmp
mov
decb
repnz
sub
movl
rcl
mov
xor
clc
int
pusha
push
add
shr
stc
xor
loopne
je
loop
dec
mov
fcmovb
pop
adc
outsb
shr
cld
pop
pop
mov
imul
test
push
in
int
in
out
repnz
in
movsb
insb
cmp
cltd
out
push
scas
mov
mov
xor
xchg
fstl
fsubl
imul
push
hlt
mov
push
sub
sbb
mov
dec
pop
adc
cmp
enter
xchg
jle
clc
jle
pop
jg
jno
cs
xor
add
xchg
jno
xchg
outsb
jmp
stos
cs
mov
les
jbe
and
dec
lea
jae
ret
mov
xlat
adc
push
add
jno
jecxz
bound
aas
test
out
fdivrs
xchg
mov
repz
inc
mov
enter
mov
or
xchg
mov
mov
cmpsl
xor
fs
out
je
pop
adc
xlat
jecxz
idiv
ja
xchg
mov
test
jmp
out
stos
hlt
and
cmp
mov
loop
int3
add
push
add
xchg
stos
addr16
clc
mov
fisttpl
pop
dec
pop
fwait
push
jb
pop
pop
push
adc
cmp
adc
inc
mov
sahf
or
push
or
adc
in
jno
add
rol
sbb
and
adc
or
jl
mov
or
xchg
fisttpll
call
mul
loope
movsl
inc
dec
leave
adc
or
inc
or
aaa
pushf
mov
popa
adc
xor
stos
fsubs
add
fprem1
cmp
jmp
cmc
jno
cmpsb
arpl
pop
js
fisttpll
int
add
test
rol
outsl
add
sbbb
sti
mov
pop
add
daa
mov
imull
lods
test
sarb
leave
or
sbb
mov
in
push
fists
dec
push
pop
add
inc
cmp
add
add
cmpsl
bswap
out
decb
mov
add
clc
adcl
mov
aam
loopne
mov
or
bound
in
xor
std
cmc
cli
push
ja
rorb
lds
or
sar
incl
mov
iret
add
mov
inc
ficoml
loop
pop
loop
mov
pop
sub
xor
jne
fidivs
xor
int3
dec
jle
xchg
lods
mov
jle
cmp
pop
xchg
adc
cmp
js
fdiv
scas
out
add
add
cs
xor
and
cmpsb
stc
out
ja
cld
adc
mov
dec
pop
cmc
xchg
adc
mov
sub
xchg
adc
jb
inc
outsb
movsb
popl
jbe
inc
imul
sub
fisttps
dec
pop
ret
sbb
push
pushf
cmp
push
cli
xchg
sub
pop
lods
lret
jb
push
mov
mov
bound
push
dec
add
outsl
dec
or
dec
pusha
ret
or
xchg
adc
xchg
cli
out
mov
xchg
dec
in
mov
jge
inc
add
fcmovb
pop
lret
sbb
jge
jmp
cld
mov
push
jg
pop
cmp
dec
add
dec
mov
clc
lds
push
fsubr
sarl
sub
xor
mov
loopne
push
xorl
mov
sbb
add
mov
add
dec
mov
xlat
lret
leave
nop
cmc
push
dec
out
mov
xchg
imul
sti
clc
sti
and
mov
popf
lods
fnsave
das
push
push
add
or
lods
push
cmpsb
fwait
js
sub
testl
mov
addl
ds
sbb
lret
dec
mov
xchg
or
pop
inc
ret
outsl
mov
mov
dec
scas
pushf
push
hlt
pop
cmp
and
subb
or
dec
and
lock
jae
in
dec
sahf
mov
jl
idivl
insb
cmp
into
test
movsl
dec
movsl
jecxz
leave
ljmp
lret
mov
add
xor
pop
mov
div
stos
inc
daa
adc
lcall
gs
xchg
jmp
jo
mov
xor
inc
adc
test
outsb
mov
imul
mov
es
push
int3
sets
pop
insb
rorl
sub
test
andl
and
mov
fldcw
stos
call
imul
gs
loop
lcall
jo
xchg
mov
xlat
push
push
adcb
mov
add
push
pop
std
cs
mov
daa
in
xor
cmp
or
jecxz
sub
push
test
pop
add
cltd
hlt
fs
fwait
repz
fisttps
dec
shrb
jne
lods
in
nop
push
daa
mov
fnsave
shl
insl
fninit
push
or
les
xchg
or
loope
fdivl
dec
ror
test
mov
cmp
frstor
sub
icebp
push
push
in
fcomps
push
mov
aas
ss
push
push
loope
push
jp
jle
xor
adcl
sub
cmpsl
gs
aas
sahf
jg
test
xchg
add
lock
inc
mov
sbb
mov
aaa
sub
sbb
adc
ljmp
inc
add
dec
push
in
fwait
lcall
popf
sub
cld
rorl
bound
inc
out
lret
sub
mov
ret
add
aam
lcall
xchg
cmp
add
sti
dec
hlt
sbb
xchg
mov
sub
jmp
filds
fstpt
adc
mov
cmp
sbb
iret
pop
inc
push
push
inc
jno
jecxz
fmull
notb
pop
in
push
push
push
icebp
pop
add
mov
mov
rcll
xor
aam
dec
cmpsl
jmp
lret
sub
dec
fdivrs
fwait
add
aad
int3
imul
scas
xchg
sub
in
mov
or
mov
aaa
jg
sub
xchg
mov
popa
int3
jno
xchg
jae
cli
jmp
gs
mov
pop
loop
fwait
dec
dec
std
leave
xchg
mov
shlb
in
add
test
les
cmp
daa
pop
lods
mov
mov
xor
popf
add
std
cmp
pop
inc
cmp
bound
jbe
push
data16
ds
cmp
mov
or
push
ror
fwait
pop
inc
dec
loop
xor
lret
fwait
ja
insb
movsb
jle
sarl
shlb
and
cmc
arpl
es
mov
jnp
dec
push
dec
shr
push
lods
dec
pop
add
inc
pop
pop
fidivs
lcall
push
call
int
inc
shrb
sti
jnp
pop
pop
sti
call
mov
cmp
cmpsl
fisubrl
mov
shlb
std
xchg
xor
dec
sti
repz
xlat
cmp
ret
or
jbe
sbb
push
je
mov
pushf
popa
arpl
pop
aad
ss
mov
testb
add
jae
jo
cmp
out
add
shll
lret
and
push
popl
mov
dec
pop
in
mov
or
sub
addl
jo
call
push
cmpsb
out
jg
gs
shll
sbb
mov
mov
or
dec
push
xlat
lea
xchg
sbb
in
loop
add
mov
cmpsb
les
jbe
or
or
jg
int3
jp
and
and
movl
arpl
lcall
mov
daa
xor
cmpl
aam
or
jle
push
and
push
lods
lahf
jp
out
call
pop
mov
jmp
pop
jbe
testl
jmp
push
and
inc
mov
cltd
fiadds
or
push
loopne
mov
test
add
mov
mov
nop
pop
push
icebp
mov
or
mov
jp
pushl
pop
and
mov
dec
push
lahf
mov
or
mov
pop
repz
repz
jae
adc
rcl
xchg
pop
fucomp
fcmovnu
aad
pop
mov
push
cmp
jecxz
loop
xchg
push
dec
xor
add
stos
ds
pop
insb
jmp
popa
cmp
in
xchg
aaa
cmp
ss
push
add
mov
xor
mov
cmp
mov
dec
adc
stos
loopne
cli
mov
into
dec
push
push
xor
mov
lret
xchg
ds
adc
and
push
js
inc
lock
add
daa
aaa
xor
stos
out
sbb
ja
clc
outsl
gs
stos
lret
aaa
dec
cmp
jge
push
xchg
dec
jp
paddq
push
sub
pop
or
pop
cld
adc
jle
pop
lock
fistpl
push
stos
test
lahf
xchg
lret
push
cmpsl
xchg
xor
ret
mov
movsl
repz
or
test
mov
dec
mov
jge
adc
push
adc
stc
jno
mov
es
or
jle
sub
lcall
in
sahf
pop
xor
pop
jmp
mov
out
mov
jns
shl
cmp
mov
int
movsl
scas
adc
add
rolb
notl
insl
sarl
push
xchg
and
popf
mov
fstps
push
mov
fisttpll
dec
packsswb
hlt
fdivrs
aaa
jmp
iret
mov
ss
nop
out
rorb
test
pop
mov
or
shlb
mov
adc
xchg
lcall
and
pop
pop
int3
ret
std
lock
pop
iret
cmp
xchg
sub
xor
xchg
test
mov
pusha
and
xor
sbb
sbb
pop
roll
das
sub
ret
mov
negb
sbb
popf
xlat
addr16
fdivr
pop
jmp
ds
cmp
cmc
mov
mov
mov
jns
js
mov
jnp
sub
add
cmp
insb
adc
xchg
mov
dec
jnp
data16
mov
cmp
xchg
mov
adc
cltd
jo
je
cmp
add
in
inc
dec
js
add
or
add
lods
insl
and
int
or
and
or
and
cmp
or
sub
in
cmpl
jle
or
movsl
lcall
pop
or
and
xorb
sub
scas
ja
enter
testb
jo
mov
jp
xchg
out
jns
push
int3
fsubrs
sbb
mov
or
push
mov
pushf
je
inc
jmp
mov
mov
adc
jecxz
cmpb
stos
mov
hlt
push
out
stc
pop
int
std
popf
pop
std
pop
add
cmp
shlb
popf
in
add
in
orb
imul
js
mov
sub
cmp
dec
rcl
mov
flds
pop
enter
dec
mov
mov
xlat
imul
dec
sarb
cmp
inc
in
sub
jmp
pop
les
cmpsl
mov
adc
mov
imul
test
shlb
ljmp
mov
ret
add
loope
mov
dec
xor
mov
fdivrl
decb
nop
es
lods
xchg
pop
call
pop
loop
fwait
ret
adc
dec
add
call
mov
icebp
jnp
dec
jg
push
jl
xlat
xchg
xchg
push
mov
pusha
inc
lret
sub
ja
lret
xlat
jo
enter
mov
cld
push
xor
mov
rcrl
mov
in
cmp
mov
jae
dec
sahf
dec
daa
pop
in
xchg
mov
je
loope
push
inc
fbld
lret
sub
sbb
sub
or
mov
std
stc
dec
lods
aas
xchg
test
mov
lret
lret
fsubrp
cmp
faddl
stc
inc
andb
je
vcvtsd2si
mov
lods
std
sub
xchg
cwtl
mov
sbb
adc
cli
pop
inc
test
pop
cmp
sub
pop
shlb
xchg
leave
pop
dec
sahf
pushf
adc
mov
sub
sbb
cmovge
mov
adc
jmp
and
loopne,pt
das
mov
push
rcrb
dec
insb
jo
mov
add
in
in
mov
ficomps
adc
jecxz
jp
hlt
mov
cli
inc
dec
js
stos
insb
cltd
testl
adc
jne
test
ds
and
icebp
stos
and
mov
add
out
push
pop
das
out
or
jl
sbb
fistpl
pop
test
xchg
ljmp
and
mov
add
or
cmp
mov
roll
push
mov
imull
pop
cmp
js
mov
div
cltd
mov
lock
loop
negl
jnp
outsl
jle
xor
out
aas
and
idivb
popa
pop
mov
jae
lcall
lock
inc
add
inc
mov
insl
xchg
add
adc
int3
mov
jbe
xor
cmpb
push
cmpl
pusha
mov
push
push
add
or
lds
mov
mov
cmp
push
cmp
dec
stc
adc
fsubs
hlt
mov
dec
call
pop
or
mov
push
clc
test
sub
add
movsb
cld
movsb
in
sbb
pop
mov
scas
mov
mov
xor
inc
inc
in
scas
mov
cld
mov
aas
mov
nop
push
aaa
lret
add
or
cmp
or
pop
sbb
pop
das
lcall
and
ljmp
dec
push
cmp
ds
inc
inc
mov
add
inc
sub
sub
mov
dec
outsb
inc
addr16
mov
mov
sub
jae
push
imul
shlb
jl
xor
jg
push
mov
dec
lds
jns
rorb
or
sbb
cld
dec
jnp
mov
dec
jmp
aas
cwtl
icebp
lods
jmp
push
fnstcw
push
adc
jns
cmp
mov
test
enter
out
aam
dec
add
test
inc
fmull
test
in
lcall
and
testb
das
imul
xor
dec
add
es
test
lahf
inc
idivb
pushf
imul
sti
test
cmpsl
sbb
sbb
mov
push
push
mov
loop
int
idivl
or
int
outsl
cwtl
jge
mov
mov
mov
movsb
outsb
cmc
aad
sahf
pop
loope
cmp
mov
cltd
xchg
sarb
int3
addr16
dec
fildll
rcl
imul
imul
push
or
lock
adc
sbb
into
inc
loope
cwtl
jp
mov
cld
loope
dec
mov
dec
push
insb
pop
mov
xor
outsl
push
cld
dec
inc
sub
cmp
aas
mov
inc
jp
mov
xchg
inc
sbb
mov
pop
loop
cmp
ret
cltd
lods
popf
int3
and
pop
nop
push
adc
test
aad
add
call
sub
subb
push
mov
inc
mov
and
push
jle
out
out
sbbb
push
mov
decl
loopne
pop
aam
mov
pop
inc
jmp
push
add
add
sub
push
xchg
in
xchg
mov
and
sub
sbb
adc
xchg
ret
fists
xchg
mov
xchg
inc
mov
enter
jp
mov
xchg
mov
xor
nop
adc
cmp
movsl
cmp
dec
sub
lds
fisubrl
outsl
mov
xlat
repnz
ljmp
push
adc
aam
lret
je
or
in
mov
les
add
das
mov
dec
cwtl
call
mov
subl
dec
sbb
add
fistl
inc
repz
adc
stos
push
and
add
lahf
mov
les
out
subb
sti
lret
lods
wrmsr
cmpsb
add
cmp
fdiv
jl
out
repz
mov
loop
mov
jnp
stc
and
xchg
and
sub
addr16
pop
jle
cmp
or
ljmp
stos
jno
push
ss
cmp
push
jns
scas
add
inc
out
stos
jg
std
int
xor
mov
or
lods
xor
push
outsl
sub
pushf
pushf
pop
inc
jno
inc
fmuls
cmp
dec
and
jge
in
xor
pop
inc
mov
adc
call
bound
aam
mov
jne
out
lock
and
ret
dec
popa
add
lret
movsl
cmp
insb
push
pop
inc
adc
bound
dec
mov
or
xchg
cs
dec
cld
lds
and
lahf
xor
aaa
push
ljmp
jnp
push
or
popa
mov
mov
or
sbbl
bound
jne
decb
cmp
ret
vpavgw
sbb
pop
lret
lds
sbb
xchg
int
xchg
iret
mov
mov
pop
push
xor
mov
out
xor
hlt
dec
push
sbb
and
nop
cld
sbb
pop
fs
push
jb
call
jae
imul
test
push
bound
push
sarb
mov
mov
and
add
scas
mov
push
and
test
adc
leave
cmp
es
addl
sbb
and
in
push
sbb
rcl
lea
lods
mov
push
std
pop
lret
loope
or
jecxz
cmp
and
std
cmp
and
pusha
jle
test
fistpll
sub
lea
pushf
or
stc
je
xchg
mov
movsl
imul
jo
and
cmp
mov
enter
sub
mov
xlat
sbb
sar
enter
cmc
xchg
push
arpl
popf
push
sbb
lods
add
sub
ret
lods
inc
push
pop
xchg
mov
imul
pushf
inc
and
mov
adc
mov
dec
adc
hlt
or
sahf
cmp
movsb
and
movsb
lods
mov
sbbb
push
and
push
xchg
bound
in
xlat
cmp
push
and
mov
xor
push
xorl
pop
flds
les
out
iret
fistps
js
lods
int
fmul
es
subl
jne
and
ror
pop
xor
arpl
and
les
aam
into
nop
gs
push
mov
add
pop
dec
pushl
fcompl
adc
int
rorb
test
fs
or
jl
mov
hlt
xor
aas
jne
lods
je
rorb
jo
hlt
imul
lret
add
fcomip
test
dec
cltd
test
mov
je
mov
scas
cmp
das
xchg
popf
adc
shll
call
jmp
cli
lea
mov
xlat
pop
adc
js
imul
dec
js
and
test
rcll
fldl
push
int
adc
rcr
leave
sbb
popa
gs
xor
je
sahf
rcll
or
test
cs
std
and
push
sbb
out
xchg
push
jle
std
jmp
pushf
cmp
jle
adc
or
stos
mov
xchg
mov
cmp
pop
cli
inc
stos
testb
aas
arpl
push
inc
cmp
mov
cmpsl
stos
push
shl
cmp
jmp
push
inc
pop
mov
xchg
mov
pop
je
pop
ss
dec
outsl
mov
dec
jne
mov
sub
pop
add
dec
cmp
xor
jo
dec
subb
pop
and
or
test
movsl
negb
adc
mov
repz
test
mov
clc
lock
dec
bound
leave
aas
adc
xor
xor
sbb
mov
adcb
mov
pop
sub
push
dec
out
inc
lock
mov
cmp
or
adc
xchg
loope
lret
popa
nop
push
sub
jne
jb
pop
clc
out
jne
stos
loope,pn
pop
jb
lret
scas
dec
lods
das
lret
xchg
and
push
jle
cmpsl
aas
ja
lret
dec
push
push
mov
ficoml
stos
pop
mov
popf
not
icebp
fcmovnb
nop
stos
push
mov
imul
aad
in
imul
clc
and
mov
addr16
repz
arpl
mov
and
lahf
icebp
seto
ss
add
adcl
adc
in
std
fildl
jno
pop
inc
xchg
sbb
or
rcrl
mov
das
sbb
test
adc
cmpsb
push
fidivrs
hlt
in
push
dec
cmp
cld
xor
mov
jp
fdivs
jmp
cs
cmp
add
inc
fldenv
insb
fucomi
repz
out
cmp
icebp
ja
sub
mov
xor
mov
sub
adc
jbe
xor
jo,pt
cmp
mov
cmp
or
in
adc
in
cli
cli
mov
lahf
xchg
rorb
push
xlat
mov
jge
xor
jns
and
mov
daa
outsb
aas
push
addr16
movsb
xchg
dec
test
pusha
subb
loope
icebp
mov
insb
shr
gs
pop
cmp
adc
jp
add
test
loopne
js
inc
and
addr16
mov
jecxz
ds
sbb
or
xchg
mov
daa
xchg
add
and
cmpsb
adc
push
dec
mov
sbb
dec
mov
in
and
mov
mov
out
jecxz
lock
or
nop
dec
fsub
push
std
testb
push
sub
pushf
jg
add
aad
jbe
ret
out
mov
in
dec
nop
pop
roll
push
cmc
fadd
cmp
push
push
sbb
out
cwtl
jne
push
mov
shrl
jg
cld
iret
mov
fcmovne
fcoms
xor
add
loopne
stos
movsb
cli
outsb
movsb
cmovnp
das
in
aam
mov
pop
jo
dec
insb
mov
cmpsl
mov
xchg
push
dec
and
pop
shl
mov
fimuls
xlat
mov
push
xchg
in
insb
out
fadds
js
and
stos
in
mov
and
enter
shll
shrb
lahf
inc
xlat
sub
fwait
insb
fildll
xchg
shlb
arpl
xchg
daa
movsl
push
clc
mov
ret
cmp
push
out
mov
pushf
fistpl
add
in
mov
dec
cmp
cld
jb
movsl
cmpsl
stos
push
cmpsb
popa
aad
into
xchg
mov
pushf
mov
xchg
mov
test
ret
push
adc
into
movsb
imul
mov
out
ljmp
ret
inc
scas
cs
jg
sub
mov
ret
daa
inc
lret
lock
cmp
shll
movsb
clc
push
add
sarb
jecxz
cwtl
sbb
js
adc
mov
sbb
gs
lret
mov
mov
test
add
aad
daa
mov
cs
mov
jmp
fidivl
xchg
dec
test
mov
or
sti
push
adc
test
test
inc
cmp
mov
lahf
mov
pop
imul
mov
lods
xor
cwtl
jbe
jp
aad
out
fldcw
pop
sti
leave
jp
popa
xor
mov
hlt
sub
jp
std
cmp
push
xchg
pop
inc
sub
cli
fidivrs
insl
sbb
lret
xchg
gs
stos
dec
xchg
push
adc
jge
fisttps
xchg
mov
out
jge
fisubrs
adc
jge
xchg
bound
lahf
rcrl
add
or
nop
insb
frstor
sub
pop
xchg
xchg
or
push
jo
bound
leave
les
jmp
mov
jmp
add
hlt
jo
into
outsl
popa
xor
sub
lret
icebp
sbb
or
js
inc
mov
movsl
in
dec
in
jno
scas
loopne
or
loope
dec
mov
in
sub
xlat
push
sbb
sbb
sub
lods
jmp
sbb
jb
or
mov
or
mov
sarb
daa
sbb
fimuls
scas
mov
popf
xor
stc
outsb
cmc
push
imull
lock
inc
lods
je
scas
fistpll
mov
xchg
movsb
add
dec
fldt
ret
test
cmpb
sahf
pop
jns
ja
cmc
adc
jne
dec
or
scas
cmp
stos
xor
fucom
and
imul
xor
pop
out
cmc
pop
negb
xchg
pushf
in
dec
fcmovbe
mov
or
test
pop
cmp
pop
or
fisttpl
popf
sub
dec
jecxz
outsb
call
mov
inc
sbb
lods
stos
fldenv
hlt
xchg
int
mov
inc
fcmovbe
mov
push
pop
rclb
jne
decl
xlat
mov
hlt
cmp
add
hlt
cmp
out
in
xor
lahf
sub
in
fadds
pop
jl
xchg
sub
mov
mov
push
or
subb
mov
in
loop
add
xor
shrb
testb
mov
enter
ds
xchg
adc
push
lahf
ja
fsubp
ret
adc
push
jmp
inc
gs
mov
pop
push
loopne
xchg
popf
mov
jle
cwtl
pop
sub
jg
add
lahf
cs
add
pop
fs
jbe
pusha
lea
sbb
call
and
sbbl
mov
sub
inc
cmpsb
jge
adc
push
jno
pop
jae
inc
xchg
mov
or
mov
pop
shlb
stc
adc
ja
sbb
push
sub
dec
jo
jbe
sbb
ret
cmp
push
lods
cmp
pop
xor
xchg
mov
popf
or
sbb
sti
and
pop
ljmp
pop
or
nop
daa
pop
sbb
call
push
sub
xor
fnstsw
pop
push
arpl
test
les
inc
push
mov
pop
xchg
pop
sub
in
xor
ss
mov
mov
jmp
ss
add
jg
adc
adc
cmpsl
xchg
pop
sub
xchg
add
std
pop
mov
lahf
inc
sbb
xchg
pusha
xchg
pop
fimuls
lcall
inc
or
push
dec
repnz
jp
sub
mov
jnp
mov
mov
loope
adc
dec
sarl
xor
fdiv
push
out
ss
pop
and
xchg
js
in
cwtl
add
mov
out
fdivrs
cmp
fstpl
push
push
mov
out
cmp
sbb
or
ja
insb
mov
sarl
jnp
and
hlt
or
mov
jmp
repnz
fs
icebp
xor
mov
push
sbb
jae
cwtl
push
sub
addr16
dec
xchg
sbb
pop
push
sbb
mov
je
and
sahf
pop
push
mov
push
lcall
cmpsb
mov
jne
push
call
jo
divl
sbb
stc
jo
lock
mov
adc
je
adcb
ret
pop
dec
out
push
popa
xchg
jo
jnp
push
lret
mov
das
or
cmpsb
pushf
aas
rorl
fwait
mov
daa
mov
mull
xchg
popa
in
and
es
aas
and
fmul
dec
dec
xor
and
pop
mov
clc
js
sbbl
jmp
cmpl
xlat
jmp
sbb
inc
incl
aam
fwait
sahf
or
nop
mov
jbe
mov
cli
adc
icebp
cmp
test
notl
mov
jns
inc
add
les
mov
inc
push
xchg
push
pop
movsb
mov
sti
pop
addr16
out
ffree
outsl
sar
or
aam
adc
adc
daa
data16
adc
mov
pop
cmp
rolb
jne
lea
clc
dec
je
pop
lret
insb
cli
insb
and
shlb
inc
repnz
and
xor
bound
ja
mov
cmp
loop
rcrl
lods
or
and
dec
aam
jecxz
fs
sub
pop
lock
mov
push
out
scas
mov
outsb
std
mov
push
out
in
mov
push
mov
jecxz
movsb
int
add
mov
cmc
out
xor
sahf
mov
pop
in
lds
jmp
inc
cmp
repnz
ljmp
rcrl
jg
loop
cmp
jl
cli
mov
fucom
icebp
add
test
and
int3
ror
cmpsb
or
leave
mov
lock
imul
dec
mov
mov
xchg
lcall
clc
dec
and
jmp
aam
dec
iret
mov
push
addr16
adc
dec
mov
cmp
xor
icebp
and
mov
jecxz
mov
or
dec
jg
sub
aam
rolb
mov
mov
sub
loop
popf
mov
inc
fwait
mov
call
in
push
xchg
sti
and
in
pushf
and
adc
jl
leave
cmp
jbe
cld
rorl
shr
xor
arpl
das
xor
nop
mov
testl
fdivp
xlat
or
scas
iret
fcmovb
rorb
jl
inc
cld
push
pop
push
loopne
movsb
aam
mov
pop
inc
xchg
push
mov
mov
xchg
imul
das
sbb
mov
push
sbb
jg
cmp
sub
in
es
mov
loop
xchg
jno
sbb
fiaddl
xor
pop
pop
pop
shl
test
pusha
or
or
out
outsl
mov
mov
repz
lahf
aam
aad
xlat
fistps
mov
outsb
adc
mov
sub
xchg
test
xor
add
stc
xor
pop
cmpsl
inc
jl
sbbb
sub
add
pop
or
mov
in
inc
mov
mov
sub
add
sti
movb
cmp
sbb
std
cmp
aad
sub
outsb
loop
pop
cmpsl
mov
sbb
sub
stos
push
aas
fsubl
push
pop
xchg
psubb
les
lea
call
into
sbb
pusha
push
in
adc
in
addl
sahf
cmp
jp
js
xchg
es
jg
out
fisttpl
lods
add
sbb
mov
lahf
test
out
notb
mov
jle
pop
xchg
and
std
xor
cmp
cmp
mov
sub
xchg
scas
int3
enter
push
aad
fcompl
mov
insb
push
neg
sub
int3
add
cli
shll
sub
mov
inc
aas
push
push
jno
push
sbb
dec
push
inc
into
loope
mov
lock
push
pop
stc
scas
repz
scas
xor
rcll
cmp
pop
cltd
scas
mov
fwait
lret
dec
jecxz
leave
stc
sarl
ret
jmp
add
into
xchg
sub
mov
addb
adc
adc
push
push
sahf
cmpsb
mov
mov
adc
ja
and
jl
push
pop
xchg
mov
mov
push
imul
push
sub
push
scas
clc
add
ror
cmpsb
mov
pushf
js
jnp
or
jbe
or
filds
add
call
out
pop
jecxz
mov
scas
push
sbb
lahf
jmp
rcrl
lock
jecxz
daa
aam
stc
jae
add
scas
and
hlt
jmp
sub
push
add
push
mov
out
leave
lock
cmp
js
pop
push
int3
fistps
pushf
imul
cmpsl
lret
or
movsb
fiaddl
orb
popf
pop
jo
pushf
imul
pop
sub
jbe
lret
push
lds
pop
inc
inc
ficoml
fs
push
push
or
movsb
cld
repz
imul
pushf
ss
pop
dec
dec
push
mov
adc
push
or
xor
ja
dec
xor
movsl
adc
sub
enter
movsl
rep
add
inc
pop
add
rorl
jmp
aaa
xchg
dec
sbb
stos
mov
sub
ja
adc
jmp
jo
xor
sbb
scas
in
xor
push
jno
in
bound
popf
adc
sub
pop
inc
xchg
aam
mov
ud1
std
aad
pop
js
jno
push
pop
fmull
punpckhbw
adc
mov
mov
ds
jmp
xor
and
and
mov
loopne
rcll
aad
cmpsb
mov
jo
sub
clc
xchg
dec
jg
mov
insb
fsin
lds
fmuls
xor
lret
stos
shrl
cmpsb
push
xchg
repnz
cmc
adc
fildl
into
lret
cmp
mov
adc
outsl
fisubrs
je
inc
ret
add
orl
aas
lahf
push
lods
pop
in
inc
rol
adc
and
mov
enter
mov
mov
ljmp
loop
jne
and
test
popa
outsl
mov
imul
lods
mov
std
movsb
fdivrp
test
cli
or
int
inc
ja
pop
pop
and
ret
aas
popf
es
push
mov
cmp
jnp
lret
int3
or
cmpsl
dec
jnp
insb
std
js
mov
jo,pn
jecxz
or
std
imul
or
sub
mov
insb
pop
in
sbb
mov
fldcw
or
lret
arpl
lock
loopne
sub
rorl
mov
push
push
push
hlt
jl
mov
xchg
hlt
test
xchg
add
or
sbbb
cli
add
jo
je
leave
mov
jmp
data16
cmp
movsl
std
leave
stos
adc
clc
in
stos
shrl
xor
and
cmpsl
or
and
outsb
push
ret
pop
push
sahf
cmpl
test
xor
sbb
xor
cmpsb
xchg
fcomi
test
test
js
mov
int3
or
cli
xor
jns
add
int
insb
jmp
xlat
lods
push
sbb
ret
dec
cmpb
in
dec
mov
mov
push
mov
sub
pcmpeqw
stc
adc
push
es
pop
xor
jb
mov
lds
andl
push
adc
test
mov
ret
cmp
xchg
loope
lret
mov
mov
xor
push
cmpsb
sbb
jmp
or
imul
vmovsd
inc
sub
pop
sti
and
loop
sahf
xchg
mov
test
xorl
repz
cltd
enter
cld
inc
ljmp
aam
shll
mov
dec
scas
jne
or
mov
scas
xchg
mov
lret
jne
cmp
ret
cmp
adc
and
mov
mov
mulb
pusha
jle
data16
vphaddubw
pop
addr16
pusha
sbb
or
jnp
jbe
mov
imul
jecxz
aam
jb
popa
xor
fbld
in
xchg
pop
xchg
jns
jne
ss
lds
jbe
sbb
xchg
pop
and
rol
sub
xor
fs
jb
hlt
stos
loopne
jp
bound
popf
adc
cld
or
cmp
pop
jno
daa
pop
mov
xor
aad
xor
repnz
rorb
aam
cmp
test
cs
jg
in
loopne
scas
cmpsb
inc
repz
call
cmp
addr16
dec
mov
pop
stos
pop
mov
push
pop
mov
jl
rorb
xor
mov
push
mov
es
icebp
adc
fwait
pop
xor
test
mov
mov
testb
lods
push
dec
fdivs
xor
std
cltd
xchg
insl
lret
cwtl
sbb
into
push
or
loope
das
pusha
push
xchg
shll
and
cmpsl
sbb
jns
pop
imul
lret
add
sbb
xor
sbb
mov
mov
sbb
fwait
sahf
insb
xchg
fsts
fsubr
sbb
iret
or
cmp
fadds
mov
adcl
adc
fwait
cltd
mov
xchg
mov
jl,pt
and
daa
sarl
push
fldt
pushf
stos
mov
mov
mov
push
int
jge
leave
push
add
cltd
data16
jb
jae
sub
push
pop
out
ss
lcall
pop
testb
or
lods
popa
push
add
mov
fimull
sarb
inc
stos
mov
test
mov
andb
repz
fistpl
mov
inc
and
sub
jbe
jae
xlat
xor
push
inc
int3
dec
outsb
mov
cwtl
pop
rcl
mov
push
insb
add
inc
mov
pop
lahf
iret
stc
pop
push
test
movsb
lcall
xchg
cmp
mov
pop
sub
lret
xor
pop
mov
and
push
pop
adc
divl
cmc
movsl
pop
xchg
dec
pop
inc
clc
imul
or
lret
movsb
mov
dec
push
in
dec
sub
and
lea
xor
cmc
or
sub
daa
jne
inc
icebp
loope
adc
push
mov
mov
dec
pop
push
and
add
stos
lret
sti
mov
pop
lahf
jae
adc
xor
pusha
push
sbb
inc
xor
and
pop
aad
add
bound
testb
mov
mov
sub
aam
outsb
lar
cmp
adc
subb
roll
call
ret
jmp
cmp
mov
jns
jle
imul
div
hlt
mov
sbb
aaa
test
add
lret
insb
jne
mov
inc
inc
xor
and
push
fistps
daa
ja
fisubrs
call
xor
and
mov
push
sub
test
stos
pop
stos
inc
cmp
jge
in
sub
xchg
pop
mov
inc
call
dec
dec
mov
push
leave
jecxz
imul
lret
mov
fucomp
xchg
ss
mov
and
mov
jecxz
iret
and
in
out
jge
mov
cmp
or
mov
out
jno
shlb
and
pop
sub
lret
jns
or
imul
aas
repnz
add
lret
xchg
jecxz
roll
cli
out
mov
mov
shrb
mov
cmpsl
inc
sub
or
ret
cld
push
mov
test
icebp
mov
in
out
ja
jne
into
push
mov
sbbb
aad
pusha
jp
mov
cmp
lcall
nop
jb
xchg
jo
daa
ret
int3
insl
decl
icebp
rcrl
in
jmp
fidivrl
out
repnz
push
sbb
std
out
rcrl
mov
addb
pop
push
cmpsl
push
mov
pop
das
test
out
jg
adc
jl
clc
int
push
push
imul
dec
push
inc
push
inc
sub
fmull
add
adc
incl
xchg
mull
je
push
sbb
jmp
daa
daa
xchg
mov
je
push
jg
movsb
xor
fistpll
push
sub
add
mov
dec
lock
fsubl
and
fadd
pminub
sbb
in
stc
and
or
fildll
xchg
inc
cltd
xchg
clc
inc
push
lret
cmp
pop
in
pop
add
adc
cmpsl
xchg
jb
push
pop
dec
imulb
jae
loope
dec
dec
and
cltd
inc
lret
pop
mov
jno
adc
xor
mov
xchg
push
inc
and
int3
add
lods
ja
dec
mov
inc
sub
leave
sbb
lods
ss
and
sub
jb
adc
pop
stos
les
ljmp
mov
dec
je
jno
fcompl
sub
xchg
or
and
and
test
dec
xlat
sbb
insl
sub
or
sbb
xor
sbb
cmpl
pop
xchg
roll
and
out
aad
fistl
es
and
in
cmp
dec
pop
imul
in
divb
jnp
fsubrl
es
imull
mov
pop
cs
sbb
mov
jl
jge
add
mov
rcrb
sbb
jl
xor
cmp
lahf
sbbl
pop
sub
pusha
cld
out
in
test
inc
sbb
rol
repnz
ss
call
movsb
inc
mov
cmpsb
push
sub
mov
cwtl
and
dec
add
mov
inc
not
mov
shrl
test
pushf
jnp
mov
jns
icebp
pop
leave
adc
pushf
xor
rcrl
mov
add
sbb
cli
les
hlt
xor
dec
cmc
sarb
and
lds
jno
pop
and
out
xchg
dec
jcxz
rorl
adc
std
mov
sub
insb
fs
xchg
and
mov
lret
pop
hlt
lahf
add
ja
rclb
mov
sarl
leave
jns
jp
fisubrs
cltd
repnz
cmpsb
ret
xchg
hlt
and
arpl
cwtl
ret
imul
mov
push
xor
fsts
scas
dec
lcall
cmpsb
arpl
push
call
xchg
mov
xor
jb
ss
out
mov
je
sbb
jns
add
sub
dec
jmp
cmp
pop
scas
mov
xchg
and
cmp
jmp
divl
mov
xor
adc
xor
mov
push
cs
bound
fdivrl
aad
stc
cmp
mov
jb
hlt
cmp
cli
imul
sbb
mov
push
mov
jno
mov
rcrl
dec
jno
notb
cmp
jae
dec
inc
xchg
adc
out
outsl
test
es
inc
mov
xchg
lds
add
mov
push
das
mov
pop
push
sub
mov
rorb
sub
cmp
out
sar
add
push
stos
mov
pop
aam
lcall
mov
pop
rorl
sub
popa
dec
mov
xor
add
sub
repz
jmp
loop
stos
jmp
cs
das
jle
fsub
inc
pop
xchg
mov
xchg
aam
mov
pop
lret
pop
cmp
lods
push
mov
push
mov
out
std
push
jl
or
push
leave
addr16
and
or
or
std
out
jle
and
call
ret
ret
push
or
add
sar
pop
dec
pop
std
call
movb
loop
imul
sbb
fcoms
add
aad
and
stc
inc
cld
int
mov
or
out
dec
popa
sub
dec
aad
inc
ds
repnz
mov
repnz
lock
mov
insb
inc
ljmp
daa
fcomps
jp
cmp
cltd
and
insl
shr
test
int3
es
inc
scas
fadds
mov
je,pt
mov
cmp
mov
int3
cmpsl
and
rcl
inc
loopne
jne
lahf
ja
lock
add
inc
loopne
pop
fcoml
xchg
push
or
xor
jne
into
lahf
ss
loopne
mov
or
push
push
ja
imul
fldl
into
adcl
sbb
xchg
push
push
bnd
rorb
xchg
jl
cmp
lret
push
popf
scas
fldt
pop
aaa
fs
cmc
mov
rorl
rclb
data16
aam
popa
mov
jne
scas
loope
lret
fwait
mul
test
or
cmp
xor
mov
das
lods
mov
sbb
mov
xor
les
sbb
push
call
sbb
inc
sub
int3
ja
gs
into
or
adc
xchg
sbb
adc
test
mov
jb
icebp
xchg
push
stc
jle
mov
cltd
call
or
pusha
jl
and
add
les
lcall
inc
je
fs
cmpsl
pop
pop
push
dec
jecxz
push
call
int
adc
and
inc
int3
stos
dec
xchg
jg
jnp
mov
sub
test
jne
inc
out
shl
cs
je
es
stc
jmp
cs
lds
xor
fidivl
pop
std
insl
mov
shl
mov
sahf
adc
mov
lods
lret
jne
popf
pop
jg
or
or
lods
mov
out
lea
pop
outsb
sbb
and
in
jo
in
pop
dec
jnp
push
mov
popa
sti
outsb
push
or
call
popf
loopne
scas
and
cmp
test
fisttpll
daa
push
sub
out
mov
push
insl
adc
daa
jo
xchg
jbe
je
sti
sub
or
imul
adc
inc
fs
xchg
int3
jb
jae
aam
and
dec
add
lea
frstor
or
jns
or
imul
jl
or
and
imul
std
movsb
pushf
xchg
add
inc
cmp
lods
push
add
push
mov
ja
mov
je
mov
xor
cli
push
push
outsb
aad
mov
push
or
xor
sub
and
cmp
sbb
xchg
out
xchg
pop
sbb
shrl
jno
push
jbe
inc
loop
cli
inc
lahf
leave
fcmovb
push
lret
movsl
dec
inc
fmull
mov
dec
mov
pop
push
dec
lds
out
mov
cmc
jg
adc
mov
adc
pop
cmp
sub
enter
push
outsb
xor
cmpsl
fnstsw
out
mov
cwtl
cld
call
dec
sub
sbb
je
push
movsl
inc
aas
xchg
xor
xor
xor
stos
cmpsb
xor
sub
add
daa
sub
rclb
jmp
and
and
nop
stos
imul
xchg
jmp
dec
or
xchg
jl
sub
or
push
adc
cmp
or
popf
pop
cmpb
cmpsb
jo
xchg
addr16
ret
cmp
push
mov
cmp
mov
mov
pop
lock
lret
adc
fistpl
and
icebp
mov
mov
stos
fstl
lea
out
xchg
pusha
mov
lea
add
lret
pop
and
sub
lods
inc
cmc
test
push
sub
aam
jnp
int
cltd
ljmp
loopne
xor
jbe
xchg
push
cltd
lods
nop
es
push
nopl
out
jp
mov
div
ljmp
inc
sub
mov
sub
roll
sub
shlb
cwtl
outsl
sub
sub
mov
imul
dec
rclb
xchg
stc
mov
pushf
fadds
inc
loope
dec
addl
es
pushl
mov
cmp
imul
add
push
lods
xchg
mov
cltd
pop
cmc
pop
ficomps
or
pop
ficoml
jb
inc
mov
into
aas
outsb
push
sbb
bsf
xchg
movsl
loope
pusha
cmp
stos
mov
in
adc
mov
fists
inc
jge
mov
sub
ja
inc
push
mov
cltd
in
xchg
sub
mov
pop
lds
jmp
adc
js,pn
sbb
xlat
ljmp
iret
movsb
xchg
popf
dec
sbb
mov
data16
je
lret
mov
xor
inc
pop
stos
and
test
aas
lret
mov
dec
push
xor
fld
push
icebp
in
jmp
adc
and
dec
xlat
js
roll
insl
jo
shll
aas
arpl
lret
sub
insl
push
jb
pop
stos
movb
imul
leave
push
mov
jecxz
ret
rep
dec
testb
fstpl
inc
sbb
movsl
cmp
jbe
mov
ljmp
adc
cmpsl
sbb
sub
andl
ljmp
out
sbb
sbb
add
into
jecxz
adc
cmpsb
mov
sbb
fnsave
pop
int
push
imull
mov
xor
and
pushf
sbb
inc
add
leave
stos
adc
js
popf
adc
cmp
mov
sti
xchg
mov
adcl
cmpsl
or
lret
int
inc
inc
fwait
sub
out
stos
adc
or
mov
rolb
fcoml
jno
mov
xchg
jecxz
mov
adc
xchg
scas
push
sbb
xor
adc
dec
lret
jle
mov
jg
xchg
fmul
add
loope
push
ficoms
push
xchg
push
inc
mov
test
add
pop
jle
imul
mov
jp
adc
ss
pop
cmp
ficomps
shrb
addr16
int
das
shrb
jbe
mov
js
mov
pop
fwait
movsl
adc
add
xchg
aaa
add
movsl
xor
inc
mov
faddp
sub
lods
js
adc
lret
adc
test
mov
decl
dec
stc
scas
outsb
pop
cmp
mov
adc
add
inc
mov
adc
data16
sti
and
flds
or
test
xor
jge
pop
cli
push
lcall
adc
add
stos
test
std
push
pop
pushf
dec
sahf
xchg
nop
out
ds
aam
add
cmp
add
pop
loopne
dec
test
movsl
out
sub
or
scas
dec
ljmp
cmp
push
inc
ljmp
mov
enter
mov
dec
sti
inc
imul
dec
loop
inc
cltd
test
cli
ficomps
int3
ja
jnp
mov
cmp
out
fsubs
mov
movsl
dec
mov
mov
dec
cmp
pop
xor
pop
and
fadd
icebp
cmpsb
shrl
imul
enter
dec
mov
mov
xor
xchg
adc
jns
scas
cmp
dec
push
pop
jg
iret
jmp
adc
or
push
subb
loop
sbbl
mov
cmpsl
or
mov
cmp
sahf
fldt
pop
mov
push
add
cmpsb
inc
data16
mov
test
add
fstpt
sub
sti
pushf
inc
sub
and
pop
dec
cmc
add
nop
cltd
je
jl
mov
dec
pusha
adc
cmp
pushl
inc
loop
and
sar
sub
push
dec
movsb
sbb
data16
lea
inc
sub
mov
cmpl
inc
scas
adc
sbb
fsubl
jo
es
pop
mov
lahf
lods
adc
xor
out
mov
mov
adc
iret
pushf
push
pop
inc
and
lret
je
fisttpl
cwtl
push
or
dec
dec
outsb
rcl
or
in
cld
bound
mov
les
jne
jp
add
arpl
data16
add
lods
push
jne
push
sbb
mov
stos
mov
inc
mov
inc
xchg
adc
jle
cli
mov
add
lock
push
sub
push
enter
push
inc
lock
outsl
push
test
aam
fimuls
sub
loop
popa
nop
cs
push
cmpsb
mov
clc
jg
cmp
loope
divb
into
push
out
in
jo
addb
adc
push
adc
scas
fildll
rcrl
scas
xor
or
mov
and
in
cltd
add
adcl
pop
sbb
inc
jbe
outsl
mov
scas
mov
adc
pop
xchg
and
adc
ljmp
ja
add
sub
stos
cmp
jle
into
repz
popf
rolb
xor
iret
mov
ss
lods
inc
xchg
out
mov
mov
sbb
sbb
rolb
mov
xchg
sahf
sbb
call
sub
pop
bound
sub
bound
loopne
pop
add
fnstcw
jg
popf
jge
cmpl
arpl
xchg
shrl
fs
or
dec
ret
mov
pop
mov
jo
inc
inc
xor
lret
cmp
loopne
push
js
mov
inc
jbe
leave
adc
or
jae
mov
scas
inc
imul
repnz
jl
test
mov
push
inc
xchg
ljmp
sub
shr
dec
aaa
test
aas
mov
push
lods
mov
icebp
mov
sub
into
push
lcall
jnp
inc
lret
das
dec
sub
mov
xchg
inc
leave
mov
shrl
mov
mov
scas
push
or
push
jge
add
mov
adcb
shll
mov
scas
add
mov
into
mov
outsl
lock
lds
aas
push
lea
mov
adc
std
jb
xchg
sub
inc
lods
loop
cltd
test
dec
dec
addr16
cmp
push
jge,pt
popa
and
inc
xchg
daa
rolb
dec
cmpsl
mov
mov
pop
les
cmp
add
out
xor
fisttps
xor
out
inc
cli
aas
arpl
aaa
sbb
xchg
inc
add
mov
push
push
mov
mov
sub
sbb
add
push
add
outsl
scas
rcrb
jo
xchg
xchg
jae
sub
sub
in
cli
out
push
pop
cmp
and
es
data16
jno
sahf
push
add
cmpsb
or
push
push
setns
jmp
dec
jae
add
cmp
and
xchg
inc
adcl
lods
xchg
dec
les
fsqrt
sub
dec
insb
bound
repz
popa
daa
pop
dec
out
pusha
xchg
cwtl
jae
dec
sbb
aam
mov
ds
xor
ret
mov
or
rorl
cmp
arpl
push
je
add
pop
mov
xor
cwtl
inc
dec
test
push
cmp
outsl
dec
jecxz
clts
pop
dec
mov
arpl
call
cmp
mov
dec
rcrb
dec
mov
dec
dec
dec
daa
cltd
dec
mov
pop
sar
out
movsl
adc
mov
cltd
mov
push
popf
stos
pop
jle
pusha
imul
ss
movsl
jbe
dec
pminub
mov
inc
fstl
xor
scas
in
xchg
shr
insl
push
sbb
enter
ret
cltd
in
xchg
xor
loopne
mov
mov
push
and
mov
inc
jecxz
lods
pop
cmp
mov
movsl
and
pusha
xchg
mov
rcl
test
mov
jne
push
sub
roll
ret
ss
imul
mov
popf
inc
lret
sub
dec
mov
std
push
dec
popa
or
or
outsb
mov
adc
sbb
mov
cld
aaa
xlat
into
mov
fdivp
mov
ss
lods
or
movsl
int3
and
xor
cmp
inc
mov
movsb
iret
sub
jo
rclb
and
sar
fldt
adc
cmp
daa
hlt
ljmp
and
ljmp
aas
out
int
rcr
int3
and
loope
lret
sarl
aam
push
xchg
sub
dec
cmp
sbb
sahf
cmp
cwtl
cmc
dec
into
cmp
jno
stc
mov
lds
movsl
mov
mov
int3
lret
mov
in
jne
icebp
in
daa
and
pop
xor
outsb
push
fildll
lcall
push
mov
inc
daa
popa
outsl
sub
loop
mull
loope
sbb
into
sbb
or
pop
fcoms
jecxz
clc
loope
push
pusha
xor
sbb
mov
and
push
das
stc
stos
sub
cmp
in
pop
jb
dec
jg
leave
and
fstpl
push
xchg
sub
xchg
test
testl
fidivrl
xor
stc
shll
pop
dec
popf
xor
leave
sub
sub
push
lock
adc
int
xchg
push
subb
iret
mov
test
pop
or
lea
jo
dec
lahf
or
ret
fwait
push
dec
stc
cli
fcomps
in
add
leave
stc
test
sbb
sub
stos
push
jns
mov
or
dec
mov
mov
and
mov
jge
pop
mov
cwtl
mov
imul
inc
scas
mov
pop
mov
fwait
add
cli
mov
add
fwait
dec
mov
sbb
insb
or
in
sbb
pop
arpl
fistpll
testl
push
sti
push
adc
mov
jge
sbb
pop
add
stc
sub
loope
jo
dec
xor
adc
pop
cmp
in
sbb
cmp
test
es
jne
sti
mov
jg
mov
sub
xor
pop
sbb
roll
lcall
mov
pushl
in
mov
jecxz
cmp
test
add
adc
pusha
je
les
cvtps2pi
lods
mov
ret
lret
scas
jns
ret
jp
sub
add
fsubl
xlat
xchg
pusha
inc
je
movsb
mov
jno
push
dec
pushl
jg
mov
xchg
stos
sub
fdivr
movsb
mov
or
fimuls
lods
lahf
add
shll
adc
dec
sub
inc
inc
call
jecxz
repz
hlt
xchg
mov
lret
and
daa
cld
adc
popf
push
cmpsl
add
cmpsb
sub
dec
or
insl
fbstp
loope
sbb
mov
pop
jl
popa
outsb
xchg
sbb
or
and
add
sbb
bound
negl
lods
out
cmpsb
repnz
push
inc
cltd
ljmp
ljmp
fisubs
lret
pop
mov
jb
outsb
fistpll
jecxz
xorb
test
imul
andl
push
ror
mov
xchg
in
and
xabort
sbb
scas
lret
lds
mov
int
and
stos
test
jbe
and
push
gs
in
add
inc
mov
iret
push
ss
mov
push
xchg
vmread
rcl
outsb
in
scas
mov
mov
stc
popf
sbb
lods
outsl
popf
ja
out
shll
fs
sbb
cmpsl
lods
fistpll
rcll
outsl
push
push
xor
lahf
pushf
aas
imul
pop
lea
fdiv
iret
adc
jmp
repz
daa
adc
pop
inc
inc
xchg
jmp
repnz
loop
inc
or
popf
and
add
scas
out
xchg
test
mov
or
dec
adc
sti
mov
dec
pop
scas
jl
adc
cmpsl
in
mov
and
cltd
jl
test
push
inc
test
mov
push
jmp
je
push
enter
in
sti
in
sbb
out
inc
mov
adc
js
xchg
cwtl
and
pop
imul
cmp
mov
fcoms
lock
xor
bound
jle
mov
sub
stos
sub
sbb
movsl
int
lock
add
loopne
fnstenv
lret
mov
scas
xchg
jg
dec
push
jnp
hlt
pop
push
out
mov
andl
sbb
add
stc
inc
push
jae
adc
pop
adc
ds
sub
loope
lret
fisubl
subl
push
push
mov
test
mov
jl
dec
jo
mov
lahf
push
cmp
push
mov
mov
aad
mov
movsb
out
ds
inc
xlat
sbb
adc
pop
icebp
xchg
movb
jb
jmp
push
or
arpl
xor
or
aam
mov
daa
xor
sub
mov
cmpsl
fstpl
xchg
xor
jmp
push
xor
test
into
sbb
movsb
in
and
dec
jmp
faddl
mov
or
out
scas
mov
jae
inc
inc
sub
jl
inc
call
push
ficompl
pop
mov
mov
ja
dec
push
adc
fcomip
pop
mov
adc
andl
xchg
adc
xor
enter
push
xchg
stos
imul
ret
jecxz
or
cmp
in
push
pop
movsl
and
pop
lock
movsl
pop
fcomps
notl
lods
movsl
xor
neg
sub
jne
mov
pop
jnp
hlt
jge
loopne
mov
push
xchg
outsb
faddl
push
cmp
daa
cwtl
add
and
aas
repnz
pop
jle
inc
in
aaa
push
lds
dec
cld
cltd
cli
inc
add
and
lock
stos
jns
mov
mov
add
cmp
sbb
lock
out
xor
cmc
rol
clc
xchg
dec
loopne
mov
je
pop
orl
aad
clc
push
mov
ret
movsb
js
stos
mov
ja
lods
and
cmp
cs
sbb
fsubr
jmp
lds
or
sahf
lods
mov
push
lret
sbb
mov
mov
pop
sub
sub
lret
mov
xchg
jmp
and
add
sub
mov
inc
mov
leave
lods
cmp
mov
outsl
push
inc
and
jb
mov
movsl
mov
inc
jg
dec
ror
mov
mov
add
out
aaa
aam
mov
cmp
int
call
jmp
mov
and
test
in
adcb
into
push
and
cmp
xchg
imul
xor
push
fs
cli
stos
xchg
lcall
pop
into
add
push
jb
mov
jmp
jbe
mov
cs
shlb
imul
push
cmp
add
adc
cmpsb
xor
push
add
jecxz
in
fmull
das
or
mov
add
xlat
or
xor
testb
xlat
push
mov
ss
fnstenv
push
sbb
adc
mov
mov
dec
pop
sub
lret
xor
add
add
inc
pop
mov
aas
loopne
pop
lods
adc
sbb
sbb
mov
xchg
sub
js
jmp
push
mov
fistpll
ja
xchg
pop
aad
or
rol
mov
inc
sub
push
mov
and
inc
in
jg
jp
pop
cltd
jns
inc
test
or
sti
mov
xchg
aad
dec
push
push
pop
lahf
or
in
pop
adc
mov
dec
push
arpl
add
mov
inc
lods
daa
gs
cld
mov
clc
shlb
sub
cmp
inc
mov
push
xor
shlb
fbld
push
mov
das
xor
adc
xchg
loop
insb
pop
mov
addr16
push
mov
mov
adc
cmpsl
rcrb
mov
sbb
movb
inc
inc
push
pop
jl
cltd
cs
jecxz
xchg
jnp
fsubs
stc
dec
fisttpl
lock
adc
cmp
ja
pop
xorb
or
ret
rorl
cmp
out
pop
pusha
lahf
out
sub
jne
mov
shr
sub
ficomps
push
dec
iret
movsl
sub
or
leave
xor
fcmovne
sub
and
and
mov
stc
outsb
mov
sub
or
jbe
movsl
add
mov
es
inc
jne
jb
pop
pop
sbb
imul
jg
outsl
adc
mov
or
jp
rclb
pop
or
dec
test
sub
sbb
sbbb
push
fistpl
cmp
sub
js
sbb
inc
jae
insb
mov
xor
pop
push
jecxz
jo
push
iret
nop
jp
lods
push
call
cwtl
aam
pushf
int
loope
lea
loope
out
test
cmp
in
jmp
jnp
enter
adc
cli
scas
push
andl
or
test
mov
and
mov
adc
out
arpl
repz
jg
sbb
cmp
inc
sarl
shrb
inc
ja
ljmp
test
addb
pop
fimull
adc
pushf
arpl
mov
lods
rolb
inc
or
push
add
pslld
pop
cmc
sti
mov
cmpsb
js
and
lahf
add
mov
dec
imulb
dec
inc
fstpt
push
mov
pop
inc
mov
push
insb
mov
mov
lods
mov
out
xchg
pop
in
loop
xor
and
pop
dec
sbb
and
push
js
sahf
mov
out
sub
hlt
outsb
jb
push
xchg
xabort
call
cmp
rcr
push
fwait
cs
pop
shr
xor
repz
cmp
ds
mov
jne
xchg
or
aas
push
test
sar
enter
fwait
pop
xchg
jp
mov
sti
push
test
popa
out
outsl
mov
in
mov
out
push
insl
dec
xchg
insb
rorb
outsb
ljmp
xchg
jge
mov
ja
test
pusha
jl
mov
insb
inc
inc
and
mov
insb
or
mov
pop
dec
and
cmp
enter
mov
dec
or
mov
xor
dec
mov
pop
lcall
pop
mov
testl
dec
cld
dec
sub
mov
shll
and
stc
inc
orl
mov
bound
cmc
out
and
mov
movsb
rcr
imul
pushf
push
imul
and
shlb
and
add
jo
aad
add
mov
insl
xchg
jge
sbb
insb
add
adc
mov
mov
data16
ljmp
stc
inc
cli
dec
out
loop
push
push
sbb
in
notb
jne
xor
ret
xchg
and
jo
adc
xor
cwtl
movsl
adc
or
in
stos
lcall
lods
jb
push
xchg
cmpsl
mov
jo
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
adc
mov
mov
lcall
insl
int3
dec
jl
aam
lods
arpl
mov
je
sub
cmc
fidivl
cmp
adc
sarl
movsb
xchg
sub
cmpsl
mov
push
data16
mov
mov
arpl
in
mov
aaa
lea
into
sbb
in
imulb
shll
int3
repz
in
in
addl
dec
call
xchg
iret
dec
cld
cmpsl
push
lret
xchg
xchg
hlt
adcb
cs
shrb
pop
fs
cld
fadd
sub
sbb
sub
inc
adc
nop
stos
jp
leave
or
ja
xor
pop
pop
fists
xor
dec
dec
xchg
pushl
push
mov
add
or
sub
mov
inc
cmpb
mov
inc
es
and
lret
js
jne
mov
movl
cwtl
fildl
mov
cmp
pusha
jne
xlat
jecxz
mov
lods
xchg
and
fldpi
add
add
mov
shll
dec
inc
push
ds
xchg
imul
xchg
outsl
or
push
hlt
push
rolb
mov
sub
shrb
sub
and
push
inc
jecxz
mov
jecxz
bound
sub
push
jbe
std
xchg
or
leave
loopne
lods
mov
sti
xorb
cmp
mov
out
and
or
jle
fists
inc
push
or
cltd
ss
adc
sbb
pop
fs
cmc
pop
xchg
aaa
xlat
push
inc
jbe
neg
test
and
or
jl
pusha
mov
shlb
fstl
inc
push
sarl
or
ja
lret
insl
outsl
clc
push
xlat
mov
je
iret
popf
sub
sub
ljmp
xor
add
push
andl
sbb
cmp
lret
fmull
xor
cltd
bound
and
ret
call
mov
in
cmc
shlb
pop
clc
and
cmp
iret
sbb
scas
mov
lahf
jne
pop
ficoms
sahf
stos
mov
popf
stos
inc
fs
jge
cmp
and
sti
cmp
jbe
cmp
jo
xor
mov
test
mov
cmpsl
dec
inc
iret
jno
ret
jb
cmp
cmpsb
fwait
rcrb
xor
rorb
inc
nop
adc
fwait
test
adc
sbb
adc
imul
scas
xor
das
jae
ret
pop
scas
dec
nop
jbe
push
push
cmp
mov
sbb
jns
out
rcrb
mov
mov
or
sub
outsl
dec
jl
bound
push
adc
xchg
adc
jns
push
mov
gs
nop
dec
clc
arpl
jbe
dec
push
mov
jae
push
icebp
test
cmc
sub
add
and
jecxz
rcr
pop
iret
lds
add
mov
and
movsl
inc
sbbb
dec
sbb
sub
pop
sbb
cmpl
pop
ja
lods
or
cmp
sub
lods
cmp
push
xor
in
popa
test
jne
add
sbb
data16
xor
jno
or
mov
ja
test
add
sahf
xor
adc
push
inc
push
lret
xchg
push
jnp
mov
leave
lods
insb
repz
sbb
add
sahf
roll
arpl
dec
movsb
jb
push
test
sti
in
ds
dec
cmp
fldt
push
imul
int3
push
ljmp
lock
in
dec
jmp
jle
xor
enter
add
cltd
mov
pop
fs
xchg
std
out
adc
jmp
xchg
repnz
mov
fiaddl
cltd
gs
stos
fwait
into
sbb
add
stos
insl
jnp
cmp
cwtl
lahf
or
mov
aam
sbb
repnz
lods
cmp
stos
repz
lea
mov
icebp
jo
cmp
mov
sti
inc
pop
daa
dec
lods
fnstenv
mov
out
or
lds
ret
out
stos
test
and
stos
xchg
test
js
out
ss
mov
pop
xchg
ljmp
sub
repz
mov
pop
jecxz
xor
aad
lods
pop
dec
pop
or
and
rcll
lock
les
fs
loopne
lret
inc
lcall
xchg
enter
add
shlb
lcall
dec
cs
stc
ret
out
and
test
mov
mov
sbb
aam
outsb
adc
jb
aad
out
inc
or
movsb
or
dec
adc
sub
mov
mov
inc
addl
mov
or
adc
repnz
push
sahf
mov
popf
xchg
int3
sub
and
cmpl
ret
lods
clc
xchg
adc
mov
es
pop
jecxz
dec
mov
push
and
fildl
xchg
sbb
push
mov
xchg
mov
jb
push
in
fcoml
mov
in
xchg
loop
mov
cmp
lds
es
jl
mov
pop
shl
cmc
jne
pop
icebp
arpl
sub
mov
lahf
mov
aad
outsb
mov
mov
dec
push
les
fs
push
lret
cmp
out
shll
gs
and
sub
mov
jne
inc
xor
cmp
sub
sbb
cs
adc
pushf
cmp
mov
outsb
cmp
sarb
xor
and
xchg
and
ret
jb
es
lock
inc
aaa
stc
repz
test
add
cwtl
aam
mov
mov
out
or
mov
and
add
xchg
dec
jp
dec
jl
jmp
inc
mov
lea
jne
push
and
iret
in
fs
mov
mov
or
lahf
jge
orl
cmpsb
call
sub
sti
mov
dec
push
lret
adc
movb
nopl
leave
or
xor
jmp
sub
or
xor
jg
push
xchg
push
int
cwtl
jno
xor
sub
rcrb
inc
test
out
xchg
adc
dec
cmp
ss
jl
ficoms
push
fsubrl
cmpb
pushf
jbe
lock
dec
nop
xchg
lea
cld
imul
jne
adc
js
ss
stc
xchg
icebp
in
inc
andl
jno
shl
sub
ret
in
sbb
push
jnp
inc
mov
lahf
stos
iret
adc
push
mov
jmp
pushf
jle
xlat
inc
enter
jg
add
cmp
adc
jle
movsb
mov
in
lea
xor
bound
in
cli
fisubrl
movsl
ljmp
and
mov
enter
mov
mov
or
mov
sbb
ret
int3
mov
into
cmp
jle
in
push
jbe
jbe
jg
lods
out
out
test
popf
loop
leave
push
pusha
jmp
xchg
pop
rcrl
push
iret
aas
scas
jg
push
cltd
inc
testl
js
hlt
sub
test
loopne
push
jg
js
xor
enter
dec
outsb
stos
aaa
xchg
add
dec
add
xor
sbb
pop
js
loope
popa
pop
mov
mov
xchg
jae
or
adcl
push
sbb
aad
mov
movsb
stc
sbb
or
mov
push
aad
sbbb
mov
dec
mov
mov
jb
lds
push
lods
std
incl
loopne
dec
sub
adc
loop
mov
aad
xor
lret
leave
cmp
sbb
rcr
push
mov
jmp
insb
cmp
sbb
jmp
cmp
and
fsubrs
sbb
loope
pop
jp
sub
sub
mov
adc
cmp
stos
or
fwait
aaa
jo
push
xor
mov
idivb
inc
adc
xchg
dec
xchg
add
sub
clc
imul
lods
arpl
xchg
sbb
fcompl
fiaddl
mov
popa
cli
jne
stos
xlat
pop
loopne
sub
es
fiadds
mov
int3
lret
clc
xchg
push
ret
inc
sub
mov
jl
dec
into
jb
fstpl
push
jno
adc
nop
push
sub
and
dec
mov
jno
xor
lds
push
inc
stos
jp
pop
dec
push
fwait
ljmp
mov
scas
and
popa
or
test
cmc
dec
orb
cmc
cwtl
ljmp
inc
lcall
loope
push
or
mov
push
sub
inc
mov
mov
inc
xor
add
sub
sti
sbb
int
out
mov
in
out
loop
mov
mov
cmpsl
or
adcl
shl
into
es
in
jbe,pn
fldenv
cwtl
orl
push
pop
cmpsl
cli
aam
mov
rcrl
sbb
loop
mov
fs
or
add
insb
fnstcw
lahf
sbb
xchg
sarb
out
xor
int3
pop
add
sub
in
inc
push
ljmp
jg
add
ljmp
pushf
pop
sub
sbb
insl
cmp
cmpl
imul
cltd
jg
outsl
and
popa
rclb
xchg
mov
popa
push
inc
pop
aam
bnd
icebp
call
pop
push
daa
and
arpl
xchg
sahf
push
and
mov
cmp
push
fs
cmc
loop
xor
pop
mov
daa
ss
jmp
imul
jl
mov
jp
stos
dec
mov
loopne
jbe
push
inc
hlt
lea
jmp
insb
cmp
es
xchg
daa
mov
fnstcw
ljmp
inc
sub
push
fsubl
pushf
dec
and
scas
jl
pushf
jae
jmp
aas
xor
or
les
or
push
fcmovnu
or
aaa
daa
mov
jae
test
loop
scas
lods
aad
ret
add
repz
add
push
lea
mov
adcl
fcoml
push
ret
dec
and
push
xor
orl
cmp
push
xchg
mov
inc
pushw
pop
jne
push
popa
jmp
sbb
dec
mov
data16
daa
xchg
inc
nop
xchg
adc
outsl
lock
test
lahf
loop
shl
aas
adc
xchg
out
cs
inc
mov
mov
mov
mov
into
pop
fwait
dec
or
mov
and
scas
mov
stos
data16
jb
or
sub
sub
mov
stos
stos
xlat
repz
imul
xor
xlat
ds
arpl
sbb
dec
mov
dec
adc
and
lret
sti
dec
push
adc
pop
mov
and
cmp
xlat
insb
mov
clc
sbb
jmp
inc
test
push
in
mov
push
pop
dec
and
lods
dec
insb
int
aas
xlat
ljmp
xor
in
repz
inc
dec
mov
sbb
loop
movsl
fcmovnbe
mov
test
cli
leave
out
pop
clc
test
adc
scas
outsl
ret
adc
div
adc
and
fdivl
insl
xchg
lods
jmp
jl
dec
ljmp
aad
daa
enter
inc
cmp
add
xlat
xchg
push
cltd
cmp
mov
jg
cmc
push
ds
insb
cs
jmp
push
lea
mov
fldenv
fcomi
pop
cmp
aas
clc
jle
dec
into
pop
mov
lds
addr16
iret
mov
movsl
insl
cmp
mov
push
xchg
adc
dec
push
aam
xor
sub
test
pop
into
in
lods
mov
pop
xchg
adc
testb
mov
addb
push
int
and
adc
cmc
data16
jb
lret
inc
pop
daa
pushf
dec
jmp
jbe
stos
stc
pop
scas
pop
sbb
mov
dec
ss
pusha
xchg
andb
sbb
lods
dec
adc
xlat
lcall
clc
dec
roll
inc
push
sbb
int3
into
aad
fs
cmp
lcall
dec
sti
adc
jo
das
and
sahf
loop
and
scas
std
dec
aam
in
cmp
pop
movsb
sub
add
scas
adcb
sbb
movsb
shlb
inc
fstenv
andl
inc
mov
or
lock
int
movsl
cmp
fwait
icebp
add
pushf
inc
mov
mov
cwtl
pop
out
cmc
sbb
xchg
test
js
std
jo
sbb
sarl
loopne
mov
cmp
cs
mov
rclb
dec
lcall
int
push
pop
pop
lods
rcr
test
xor
repz
je
cmpsl
cltd
mov
stos
sub
insb
xchg
xchg
mov
lret
xor
adc
or
xchg
sarb
inc
xlat
add
xor
in
xchg
xor
pop
sti
out
pop
or
sbb
fwait
testl
mov
roll
mov
bound
cmpsl
push
fistpl
jne
and
add
stos
dec
jmp
clc
mov
fnsave
cs
xor
movsl
int
xchg
jp
adc
mov
stos
xchg
jae
or
mov
out
imul
shll
push
mov
jne
aam
add
xor
int
mov
icebp
mov
sbb
lods
or
scas
mov
dec
or
int
mov
shrl
aad
test
lods
push
aaa
fists
mov
inc
js
fwait
add
inc
or
test
or
jp
repnz
mov
sbb
loopne
popw
mov
xchg
dec
inc
xor
and
xchg
pop
xchg
in
ja
adc
xchg
adc
mov
imul
jmp
jbe
cmp
push
cmp
int3
sarb
or
subb
push
xor
mov
mov
outsl
mov
ret
and
add
iret
and
sub
addr16
sub
jbe
out
push
iret
lds
inc
arpl
stc
mov
pop
es
adc
sti
xor
sbb
dec
mov
xchg
mov
into
cld
scas
jne
cmpb
xchg
fs
push
orl
push
cmpsb
xchg
or
or
outsb
js
mov
iret
adc
shr
jecxz
mov
sub
invd
pop
pop
adc
or
sub
add
cltd
mov
mov
rclb
xchg
mov
jg
dec
push
push
xor
andl
mov
push
add
ret
lahf
push
jmp
mov
repz
jne
test
sub
mov
cmpb
inc
mov
loop
sbbl
loopne
pop
xchg
xchg
gs
push
std
jmp
xchg
jnp
push
leave
sub
dec
in
outsl
or
push
iret
subl
dec
inc
repnz
fcompl
int
push
nop
xchg
mov
cli
mov
xor
int
mov
mov
sub
jl
test
js
xchg
test
sbb
insb
adc
push
adc
int
sbb
cmp
sub
arpl
fdivl
cli
stc
out
out
adc
add
pusha
inc
push
lret
or
xor
stos
outsb
inc
lods
lret
into
das
mov
loope
stos
fwait
cld
sbb
mov
lahf
aaa
or
jecxz
prefetchwt1
aaa
pushf
imul
pop
and
fscale
push
mov
or
pop
fidivs
inc
or
inc
adc
lahf
jns
call
xor
sub
movsb
mov
adc
inc
cmc
jp
mov
insb
mov
mov
ja
dec
sub
mov
cmc
cltd
aaa
sub
ljmp
add
bnd
xor
repz
dec
dec
jno
sub
add
andb
add
rolb
or
mov
test
push
sbb
or
or
out
addb
sti
sbb
sti
int3
add
iret
jecxz
mov
insl
dec
jns
inc
movsl
subl
int
in
addr16
jl
xor
push
iret
cwtl
rclb
pushf
in
ss
jne
jge
les
frstor
cs
jb
cmp
and
jl
xor
mov
jg
das
std
mov
loop
pop
movsl
cmp
test
idivb
sbb
mov
xchg
out
mov
sub
iret
adc
nop
subb
cld
addr16
cmp
xor
dec
mov
mov
mov
scas
jne
sbb
adc
in
inc
aad
xchg
sti
cmp
xor
sbb
dec
pop
fldenv
sbb
xchg
sub
dec
cmc
stos
push
dec
cmp
xor
pop
cmp
dec
xchg
loopne
push
fstl
or
push
lahf
fs
push
xor
call
jo
loope
push
inc
dec
push
mov
les
cwtl
fdivrl
out
jg
push
mov
loop
arpl
xor
lret
addr16
scas
dec
and
and
add
dec
into
pop
out
test
inc
cmp
lcall
jp
das
arpl
in
leave
roll
pop
cld
test
nop
jb
in
clc
movsl
out
in
add
mov
adc
mov
add
jo
ret
out
dec
sbb
out
sub
rcll
mov
push
cmp
iret
pop
out
movsl
or
out
mov
dec
cmp
xor
jmp
xchg
sub
dec
lea
jp
inc
insl
sub
testb
leave
popa
mulb
jae
fs
popa
and
sti
or
punpckhdq
jno
dec
loopne
ret
arpl
scas
xchg
cltd
ds
pop
lock
and
mov
pop
sub
mov
xchg
gs
loopne
add
jno
test
stc
cmpsl
inc
leave
xor
fdiv
dec
in
jmp
fmul
in
fisttpll
mov
inc
jp
gs
adc
cmp
adc
pop
mov
push
das
sbb
mov
mov
mov
jle
dec
xor
fimuls
jmp
mov
int
xchg
pop
push
xchg
jmp
bound
pusha
mov
fcmovnbe
mov
out
xor
xchg
mov
movsb
mov
inc
pop
je
lea
movsb
or
mov
orl
aas
pusha
add
mov
popf
lcall
push
ffree
pusha
fadds
pop
shll
fs
xchg
inc
js
jle
hlt
lret
jb
xor
sar
inc
mov
pop
cltd
sub
push
add
push
fs
sbb
out
xchg
and
sub
addb
int
adc
insb
jmp
xchg
push
outsl
shl
push
cmpsb
cli
push
lahf
mov
xor
inc
xchg
and
jnp
add
jp
push
jecxz
shl
xchg
cmp
dec
adc
outsb
mov
call
or
subl
xor
push
popa
cwtl
movsl
and
jl
jmp
mov
and
cmpsl
cmp
rcl
sbb
pop
mov
sub
cltd
loop
rcll
add
xor
mov
fsubl
adc
repnz
dec
nop
imul
push
dec
xchg
movsl
pop
sti
cld
imul
shlb
leave
or
pop
push
pop
movsl
mov
test
xchg
int
mov
mov
ds
dec
cmpl
lea
cmp
inc
repnz
movsl
aaa
nop
rolb
mov
push
xor
jmp
cmp
test
pop
jo
dec
jg
mov
inc
lahf
lods
mov
push
sbb
movsb
sbbb
push
fs
cmpsb
xchg
lods
sbbl
xchg
mov
scas
cmp
gs
push
and
mov
int
mov
sbb
xor
xchg
cmp
fmull
stos
cmp
mov
jae
shl
test
cld
scas
or
jne
sub
fimull
add
lret
sbb
loope
ds
xchg
push
inc
dec
out
xchg
jge
je
push
pop
sahf
and
sbb
dec
push
jg
dec
sbb
pusha
dec
aam
mov
scas
das
outsl
scas
dec
hlt
dec
in
adc
or
mov
into
iret
and
push
cld
pop
out
les
mov
add
js
xchg
or
pop
into
lret
enter
movsb
sarb
out
jmp
jnp
es
dec
shrb
fdivs
pop
pop
or
inc
scas
xchg
mov
or
adcl
mov
lea
add
xchg
cwtl
icebp
xor
leave
jmp
add
mov
add
sbb
dec
hlt
dec
pop
sar
js
jg
push
rclb
mov
mov
sti
push
fstpl
rcrl
pop
fdiv
lods
pop
icebp
lahf
and
adc
mov
out
sarl
adc
clc
clc
fnsave
out
cltd
and
mov
and
sub
bound
xchg
bnd
jo
sbb
push
popf
ljmp
in
pop
or
fsubl
jp
cmpb
sahf
mov
xor
sbb
push
mov
fdiv
es
xor
out
push
ljmp
faddp
aam
out
mov
push
int3
xchg
ja
leave
in
dec
pop
add
push
push
pop
fstpl
jg
inc
lcall
jnp
stc
or
repz
mov
inc
test
xchg
lret
jnp
and
insb
push
outsb
sub
adc
les
mov
and
sti
pop
mov
dec
lcall
xor
les
loopne
lods
push
jl
clc
pop
fldt
jle
mov
jns
pop
jae
sbbb
mov
out
lcall
mov
xchg
mov
or
xchg
ror
jmp
es
mov
or
mov
stc
xchg
mov
addr16
ja
loop
or
imul
push
out
cmc
out
mov
mov
cmc
cld
push
imul
rolb
add
jle
cmp
jmp
cmpsl
jecxz
mov
adc
aaa
popa
pusha
pusha
hlt
dec
sub
lock
push
addr16
cld
cmp
add
xchg
or
sbb
stc
movl
pop
dec
push
sti
sarb
fildl
add
ficoml
pop
mov
and
pop
xchg
or
jns
xor
xor
mov
xchg
and
jbe
push
out
insb
xlat
lcall
int3
sti
scas
inc
dec
jnp
imul
test
loop
icebp
out
adc
cmpl
mov
xor
lcall
push
jmp
cmp
mov
mov
in
mov
adc
add
loop
xchg
sbb
or
inc
cmp
out
pop
out
mov
inc
inc
or
sbb
or
fildll
hlt
arpl
fdiv
mov
and
xor
xorb
stc
les
jno
mov
push
fwait
mov
lds
bound
in
bound
shll
fisubl
scas
and
add
cmpsb
inc
push
aad
pop
sub
add
bound
daa
insb
shlb
lret
scas
imul
cwtl
jne
add
xor
inc
adc
das
fwait
mov
jl
or
testb
jb
cwtl
jbe
lea
inc
or
xor
scas
lods
insb
mov
aad
inc
adc
xchg
pushf
add
sti
jo
dec
push
jecxz
mov
nop
out
mov
and
sbb
cmpsl
mov
or
adc
jp
pop
sub
mov
fcmovnbe
enterw
push
pushf
dec
fdivrl
ret
sbb
sub
inc
out
push
test
mov
push
pop
outsl
xchg
fwait
push
insl
test
push
adc
cmp
cmp
das
push
ss
cltd
sti
loope
inc
mov
mov
cmpsb
dec
adc
enter
mov
fisttps
mov
sub
jnp
dec
mov
rorl
pop
push
mov
mov
jmp
pushf
loopne
pop
repnz
and
pusha
leave
jnp
mov
in
inc
and
lods
aaa
jae
lods
pop
add
xor
mov
std
sub
in
xor
jae
sbb
mov
rol
stos
push
js
xor
inc
inc
mov
add
sbb
jecxz
push
and
dec
add
xorl
push
mov
push
and
xchg
test
mov
and
push
push
fpatan
or
pop
adc
inc
mov
xchg
jae
xor
sbb
mov
adc
imul
aas
jbe
imul
xor
gs
push
pusha
int3
dec
fwait
cmp
jae
out
divb
mov
pop
dec
ss
icebp
sub
daa
and
in
push
cmp
adc
sarl
sub
sub
adc
aam
adc
sarl
mov
xchg
lret
leave
or
movsb
sbb
jg
lret
push
mov
pop
sbb
popa
iret
lock
push
xchg
lahf
jle
push
mov
add
add
add
add
inc
xchg
inc
rcll
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
or
jne
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
loopne
ja
sbb
ja
cwtl
ja
