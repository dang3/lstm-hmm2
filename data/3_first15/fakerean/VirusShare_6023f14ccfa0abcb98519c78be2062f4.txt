sbb
add
mov
sbb
lock
adc
dec
sbb
loop
dec
aad
insb
xlat
sub
incb
xor
in
subl
jge
xchg
es
jg
jae
int
mov
pop
bound
mov
ret
mov
push
push
push
jbe
out
and
loope
lods
nop
pusha
push
push
cmp
test
dec
test
xchg
mov
sahf
decl
out
dec
jle
lret
fwait
scas
out
push
mov
push
jecxz
xchg
xchg
jp
pop
fbstp
push
jmp
xor
add
hlt
xor
dec
add
aaa
repnz
push
mov
jne
scas
cmp
inc
dec
jno
mov
or
mov
aaa
xor
dec
xchg
insb
xor
jmp
dec
loope
xor
jl
cmp
dec
in
pop
fstl
jne
int
add
ds
out
aad
shll
aaa
popf
lds
push
mov
aas
jp
xor
and
and
push
cmp
movsl
mov
cmp
xchg
push
sub
add
aaa
icebp
and
cmpsb
xchg
and
mov
mov
push
push
ss
stos
add
xor
mov
xchg
lds
test
icebp
gs
mov
mov
add
imul
sti
mov
pushf
and
push
xchg
push
dec
sahf
in
add
mov
or
loop
into
jbe
ljmp
lds
hlt
pop
into
flds
loopne
insb
sarl
rclb
faddp
or
cmp
bnd
add
into
or
movsb
jl
or
or
cmp
fidivrl
rolb
leave
jmp
xchg
xchg
sub
aam
xchg
mov
js
lea
xor
and
mov
adc
mov
push
push
lahf
mov
loop
mov
or
lret
push
orb
fisttpll
cmc
imul
fisttps
jne
sub
test
push
test
data16
pop
cmp
push
or
and
or
jmp
test
or
lods
cmpl
push
push
lea
mov
dec
and
xchg
push
ljmp
lcall
push
or
mov
cmpsl
int3
rclb
adcl
pop
mov
dec
ljmp
push
pop
icebp
popa
mov
mov
out
or
js
les
add
mov
pcmpeqd
fs
loop
stos
push
inc
jbe
faddl
cmp
cmp
cmp
outsb
inc
sbb
cmc
xor
in
out
mov
int3
add
push
into
in
mov
lods
xchg
cwtl
lret
xchg
mov
stos
sub
pop
shll
test
mov
sub
cmp
mov
movsb
cmp
or
jmp
lea
or
inc
jle
dec
sub
into
jle
mov
xor
outsb
jmp
adc
mov
mov
fnstsw
inc
jmp
aaa
pusha
repnz
pop
mov
xchg
fistpll
mov
pop
push
pusha
shrl
cmpsl
sub
cwtl
cmc
cmp
je
jecxz
or
popf
mov
cmp
enter
int
mov
sub
scas
nop
jl
rol
jb
xchg
mov
jmp
dec
movsl
test
mov
xor
iret
cmova
and
test
leave
cmpsl
shlb
xchg
or
push
std
or
scas
je
lcall
xor
inc
sub
mov
jecxz
dec
insl
sbb
loope
or
into
mov
shll
sarb
xor
scas
lods
gs
fadds
aas
xor
add
xchg
dec
fs
adc
cmpsb
jne
inc
mov
cltd
enter
xor
ds
arpl
es
cmp
arpl
sbb
lods
mov
xor
add
data16
sahf
pop
add
lods
scas
mov
lcall
push
push
add
xor
iret
into
push
cwtl
push
push
decb
es
mov
cmp
pop
adc
sahf
repnz
dec
pop
mov
test
xchg
cmp
jns
lods
out
inc
imul
outsl
add
mov
lahf
xchg
cltd
dec
and
push
cmp
addr16
mov
jae
movsl
jl
cwtl
sub
mov
inc
mov
jp
or
popf
mov
fistpll
in
push
enter
loope
mov
xor
lcall
or
lock
test
xchg
inc
fwait
movsl
and
add
arpl
test
cld
mov
mov
xor
fisttps
imul
adc
popf
xchg
shlb
lret
sub
addr16
pop
daa
or
in
fsub
push
xchg
mov
xadd
inc
adc
and
arpl
dec
jno
das
jb
rcr
dec
cs
or
aam
stos
xor
and
in
fbld
aad
hlt
test
popf
dec
lods
rolb
int
and
dec
inc
push
mov
jno
cli
push
pushf
cmp
push
pop
and
xchg
xchg
sub
add
adc
leave
pop
pop
adc
push
xchg
inc
pop
or
les
inc
sub
xchg
fld
pop
jae
mov
jge
dec
cmp
pusha
addl
push
dec
cmp
mov
cmovae
lock
popa
shr
push
scas
or
push
xchg
inc
xchg
xor
mov
mov
sbbl
ret
mov
push
dec
push
push
aam
and
out
clc
cmc
mov
inc
dec
scas
lea
sub
outsl
dec
movsl
fisttps
or
cs
call
ud1
test
out
fisubl
loop
movsl
les
frstor
imul
test
xor
mov
cmp
fmulp
popa
xchg
scas
stos
push
cmpsb
mov
mov
int
pushf
mov
sub
sahf
negb
js
push
xchg
mov
aas
rcrb
jge
out
jmp
inc
push
iret
jp
inc
xor
mov
je
dec
sbb
test
jmp
mov
into
cmpsl
popf
stc
std
pop
fildll
push
loope
xchg
popa
mov
add
lahf
in
sub
push
push
rolb
lods
in
int
jl
stos
jge
clc
inc
adc
dec
mov
aas
jae,pn
push
ret
mov
repz
aad
and
je
push
dec
roll
bound
lcall
int
out
hlt
rol
jbe
push
in
out
pop
jnp
pop
or
leave
lds
mov
jae
lds
mov
jmp
ja
rcrb
lahf
cmp
mov
jl
xor
mov
int3
or
add
or
and
outsl
pop
xor
cmpsl
mov
addr16
cmp
in
imul
loope
xor
xor
arpl
or
fisubrl
out
mov
add
jb
mov
lods
pop
xor
sub
cltd
arpl
and
xor
dec
cmp
in
in
push
xor
roll
fisubrs
jo
ret
mov
mov
rclb
push
mov
shll
lds
cli
aad
cwtl
jp
jb
aas
clc
sbb
cs
leavew
mov
xchg
in
sahf
jnp
push
imul
sub
add
lock
inc
loop
push
mov
ja
jg
mov
push
adc
and
loop
in
testl
out
push
mov
add
jg
insl
add
cmp
in
fcmovbe
fwait
out
jmp
mov
ds
xchg
into
adc
xor
mov
jnp
loop
jmp
mov
popf
jg
and
mov
shl
pop
push
pop
jg
or
sub
andl
or
je
mov
cmp
mov
cmp
fsubrl
mov
add
jge
pushf
rolb
fisubrl
mov
cmc
xor
mov
aas
pop
bnd
push
pop
ror
mov
jae
cmpsl
std
add
std
int
jmp
outsb
xor
and
enter
push
leave
fsts
mov
jge
pop
cmc
push
xor
loopne
pop
push
addr16
aad
scas
stc
aas
leave
cwtl
xor
je
arpl
cmp
or
in
pusha
stos
cmpsl
addr16
lahf
adc
jne
pop
out
inc
xchg
lods
dec
sub
push
sbb
cld
in
loop
mov
sbb
aaa
fistl
int
pop
fidivs
data16
cltd
sub
pusha
mov
sub
jae
and
pop
int
imul
stos
xchg
imul
test
xchg
jae
or
jle
inc
inc
jle
dec
pushf
xchg
filds
adc
stc
xor
flds
andl
mov
push
inc
call
aas
jmp
xor
adc
es
sbbb
repnz
nopl
fcompl
daa
loopne
mov
inc
or
and
add
movsl
and
add
cmpsb
pop
pop
add
xchg
fisttps
xor
cwtl
loopne
adc
dec
xlat
shlb
mov
mov
push
jb
popf
fwait
out
sub
cmp
adc
push
or
pop
mov
mov
xor
clc
xor
and
jecxz
cmp
lock
lcall
cld
dec
or
rorl
xchg
dec
pop
xor
in
cltd
lock
cli
jnp
or
push
mov
dec
push
cwtl
push
lea
iret
jb
sub
sub
or
iret
sub
xchg
shlb
xor
mov
stos
cmp
es
push
sbb
xor
aad
stc
or
pop
jmp
or
lea
js
lods
sbb
adc
mov
adc
movsl
and
bound
sub
fldl2t
push
jg
push
jnp
sub
dec
xchg
push
addr16
push
lock
lret
inc
cwtl
test
mov
pminub
jnp
xor
movsb
sub
arpl
inc
add
ret
ja
hlt
jl
pop
scas
mov
sub
jbe
or
fidivs
inc
xor
sbb
xor
cli
lods
xlat
rcl
ss
jmp
pop
cmove
test
rcrl
inc
js
mov
repnz
inc
cld
inc
out
mov
sub
cmp
ljmp
dec
jecxz
mov
fsincos
ret
arpl
add
mov
shrl
and
adc
jno
push
out
add
jle
pop
jae
les
jbe
xchg
orb
sub
jb
lods
jbe
cmp
pop
jmp
mov
movsl
xchg
dec
inc
scas
fidivl
fwait
or
cmpsl
aad
loop
dec
xchg
mov
in
cmpsl
push
mov
jne
ss
aaa
mov
arpl
subb
jbe
jne
jno
cwtl
mov
pushf
inc
add
xchg
push
adc
nop
xor
jbe
jns
xchg
inc
fwait
jg
push
mov
inc
xchg
dec
jo
inc
bndldx
bound
aad
or
adc
adcb
out
fcmovnb
daa
sbb
inc
out
push
xchg
add
cmp
sbb
ljmp
push
jecxz
iret
pusha
pusha
dec
xor
call
mov
jl
sub
sbb
add
fiaddl
push
fsts
pop
jns
mov
sahf
xor
lcall
das
push
inc
jne
dec
or
dec
xor
or
cmp
pop
adc
icebp
push
mov
test
jb
jmp
fimuls
sub
fwait
cwtl
dec
dec
pushf
push
and
sub
xchg
ret
xlat
mov
cld
in
popf
cwtl
arpl
shl
test
dec
and
xor
rcr
in
mov
loope
push
pushf
xor
imull
adc
pop
dec
fwait
test
cmp
js
dec
or
sub
mov
pop
mov
hlt
outsb
lcall
sbb
xchg
test
add
repnz
jle,pn
jno
leave
inc
inc
lods
dec
inc
nop
mov
push
aam
xchg
fidivs
in
enter
xchg
xchg
xchg
sbb
jb
or
nop
inc
mov
das
pushf
xor
push
fcmovnb
jo
fwait
rcr
sarb
stc
int3
lret
test
out
jl
lods
cwtl
in
sub
jne
jb
bnd
add
xchg
jle
jg
adc
add
mov
rclb
das
pushf
dec
stc
push
jb
xor
push
jo
leave
imul
mov
subb
cmc
or
lock
or
pop
movsl
cli
xor
test
sub
add
inc
insl
test
popf
pushf
notb
xor
mov
hlt
mov
nop
add
arpl
subb
inc
sub
std
jecxz
add
test
aas
mov
lahf
clc
jns
jo
push
repz
lcall
and
sub
lcall
jnp
dec
jns
jb
and
and
inc
xor
stos
or
dec
cmp
popf
popa
flds
hlt
cmp
lret
lahf
or
mov
fimuls
aas
pop
xchg
pushf
fimull
or
cwtl
insb
pop
push
js
ret
lcall
dec
adc
mov
mov
push
cmp
popf
jne
arpl
mov
jl
jne
mov
nop
mov
dec
xorl
add
rorb
pop
xchg
pop
jnp
xchg
push
shlb
lods
and
or
movsl
jb
dec
push
sti
adc
shrb
and
inc
sbb
and
or
mov
notb
scas
repnz
sti
xor
adc
mov
cmpsl
inc
xor
loop
and
and
leave
pusha
addr16
mov
clc
sub
pop
fstp
inc
cmp
sbb
dec
out
pop
shr
push
ror
loop
imul
cld
roll
aaa
adc
add
push
fwait
sbb
jmp
mov
pop
nop
push
int3
repz
test
jno
jge
test
jae
out
mov
pop
sbb
xor
mov
ljmp
lods
stc
add
mov
aad
lret
xlat
add
cs
push
push
cld
jo
roll
mov
test
jo
xchg
add
jmp
loope
and
mov
in
stc
xor
add
cmpsb
cmp
add
stos
int3
inc
outsb
jb
mov
adc
adc
dec
push
mov
stos
mov
gs
gs
shrb
jbe
mov
jno
insl
loope
sbb
and
jnp
cmc
fprem1
cltd
dec
inc
movsl
repnz
cmp
mov
aam
mov
iret
push
shrb
xchg
and
cmp
int3
lods
sub
jae
jg
cwtl
or
dec
mov
add
cld
dec
xchg
pop
cmp
inc
out
idiv
lods
hlt
mov
or
mov
fcomps
sbb
xchg
dec
push
jbe
inc
or
mov
in
pop
mov
inc
xor
lods
push
xor
push
push
sub
mov
sahf
push
xlat
clc
pop
les
or
push
jne
mov
popa
pushf
jp
xor
incb
clc
pop
fimull
mov
push
fdivrp
ja
scas
int3
or
andl
sbb
cmpsb
lods
mov
sahf
push
cmp
fwait
lds
mov
stos
jnp
popa
fs
inc
or
scas
sbb
dec
into
lock
pop
into
or
xor
cmp
pushf
hlt
jno
in
ret
add
xchg
popl
mov
jle
dec
in
sub
inc
test
int3
xor
in
dec
into
inc
cli
pop
lret
jno
pop
jmp
add
xor
inc
mov
popl
xchg
imul
in
out
add
rolb
std
out
add
pop
xor
adc
mov
out
push
xor
jno
cmp
dec
or
ret
fists
ja
out
inc
enter
cmp
pop
inc
add
popf
or
out
sub
and
cmc
mov
xor
push
test
daa
js
inc
arpl
outsb
push
xor
scas
xor
hlt
xchg
mov
jb
add
fisubrs
dec
fstl
pop
imul
fimuls
pop
testb
imul
mov
inc
in
inc
inc
cmpsb
negl
sub
mov
or
cwtl
jge
xchg
mov
sub
popa
mov
data16
mov
out
xchg
jmp
pop
push
es
cmp
mov
lods
add
out
inc
out
testl
stos
lahf
nop
fldenv
out
sub
fucom
cmp
push
nop
inc
arpl
xor
cmp
or
addl
sahf
or
jbe
cmp
sahf
data16
xchg
and
inc
add
or
add
imul
cmp
mov
dec
insl
push
mov
xchg
fsubl
inc
push
fsub
mov
push
mov
into
cmp
push
clc
lcall
ficoml
js
inc
pop
addr16
cli
push
sub
inc
sub
lods
xchg
push
aam
test
cld
leave
sub
js
jmp
pop
mov
jae
cli
mov
push
push
push
test
ret
test
testb
dec
cmp
mov
or
sub
sti
shll
mov
sti
shlb
or
inc
sahf
jno
mov
push
add
mov
jl
pop
or
rcl
ud2
xor
enter
xchg
sbb
pop
or
std
jnp
push
push
inc
cmp
xchg
cli
repz
jp
test
int3
enter
or
inc
pop
add
jmp
push
imul
inc
sti
pop
push
inc
add
testl
mov
dec
cmp
xchg
mov
bswap
out
mov
cmpsb
xchg
enter
adc
jp
push
aaa
push
dec
dec
mov
pusha
inc
cmc
ret
fmulp
add
hlt
mov
or
mov
sbb
js
push
dec
scas
dec
lock
dec
pop
jecxz
dec
pop
cmp
cmp
roll
ret
and
stos
adc
mov
push
inc
and
mov
and
pop
cmp
shlb
push
pop
in
mov
movsb
cmp
outsl
cmp
stc
sub
femms
pop
enter
lret
out
or
stc
mov
dec
xchg
imul
inc
xor
mov
or
jnp
xchg
pop
add
add
jmp
mov
jno
xor
sbb
jb
mov
xchg
mov
cld
sub
shl
xchg
mov
xchg
inc
in
adc
les
jge
fs
iret
pusha
shrl
cmp
jb
popf
adc
inc
jne
add
into
mul
lods
mov
push
or
imul
imul
imul
cltd
jl
xchg
fidivs
push
jecxz
hlt
iret
xor
sbbb
xor
inc
jecxz
scas
cmp
test
js
sbb
adc
pop
in
std
mov
popa
test
sbb
js
mov
cmp
cmp
dec
out
pop
shr
mov
lcall
sbb
push
stos
in
dec
cltd
lods
std
outsb
orb
stc
and
fnsave
iret
mov
mov
lods
pop
dec
push
divl
pop
cmc
push
movsb
sub
addr16
mov
mov
mov
mov
cmpsl
cmp
or
std
clc
adc
icebp
cmp
sub
mov
adc
pop
lods
ds
mov
sbb
clc
or
in
ja
lea
dec
jl
fcomip
imul
stc
cltd
xchg
add
mov
push
cs
fistpl
jmp
adc
sbb
rsm
sbb
movsb
outsb
test
xchg
lock
and
test
aaa
sub
dec
mov
dec
ljmp
jne
popf
nop
and
add
mov
mov
movsl
mov
cmc
aad
lahf
sbb
sub
out
notb
inc
loopne
in
add
cmp
repz
lock
scas
idiv
sbb
fistl
mov
adc
push
mov
orb
mov
jle
in
adc
push
mov
ret
sbb
rcrl
roll
stos
or
pop
les
mov
adc
mov
notb
mov
pop
xchg
cmp
inc
mov
out
or
int
lcall
fnstsw
jp
pusha
or
adc
adc
pop
in
inc
pop
mov
xlat
lods
lret
and
test
adc
cmp
cmp
pop
push
xor
inc
into
push
test
mov
ljmp
lcall
loope
aad
cltd
mov
ret
xor
insl
inc
cmp
mov
pop
adc
sbb
ficoms
es
cmpsb
cwtl
dec
in
call
ljmp
loop
addr16
orl
jb
jno
insl
cmp
lods
jb
test
dec
sbb
fnclex
aad
pop
dec
inc
outsb
ljmp
xor
or
in
shl
ss
leave
loope
push
repnz
movsb
dec
andb
pop
jg
cmc
push
or
stc
jne
mov
in
outsl
xchg
stc
jle
std
lret
mov
movsl
arpl
test
lret
fnstcw
out
mov
test
xchg
stc
add
arpl
fwait
bound
sub
repz
fwait
dec
aad
enter
xlat
or
stos
repz
lcall
xchg
movsb
xchg
andl
fbld
rcl
sub
loope
push
push
lcall
mov
cmp
pop
jp
arpl
xchg
push
mov
add
inc
add
inc
notb
fildll
clc
loop
test
push
into
pop
push
out
jmp
cwtl
cmp
push
into
mov
push
test
or
adc
jns
push
popa
into
mov
aas
jae
imul
dec
mov
gs
scas
out
mov
xchg
push
sahf
cwtl
cmp
mov
pop
jno
cmp
cmpl
jl
cli
fwait
inc
in
push
jl
jnp
xor
mov
inc
mov
xchg
mov
icebp
push
rorl
lock
jbe
add
fadds
mov
inc
xchg
mov
cld
int
and
jl
insb
out
inc
fwait
inc
shll
sbb
push
inc
fcom
cmp
or
popf
cmp
dec
jmp
or
dec
fwait
dec
adc
dec
ss
fimuls
pop
lret
xor
and
aaa
scas
gs
imul
out
push
fnsave
imul
enter
mov
pusha
popa
test
jno
popf
in
repnz
mov
sti
cld
xor
cmp
pop
xor
in
jp
das
pop
fnstcw
mov
fisubl
loope
xchg
insl
xchg
insl
movsl
sti
xchg
lods
dec
ret
popf
out
out
iret
leave
andb
pop
dec
push
xchg
mov
jl
mov
popf
sub
push
cltd
stos
lods
cmc
mov
dec
dec
adc
inc
insl
movsb
inc
mov
sub
test
shlb
pusha
mov
test
dec
inc
out
imul
and
xchg
adc
or
ja
inc
scas
push
aaa
loopne
lock
fists
pop
mov
enter
loopne
movsb
pop
stos
into
jae
adc
std
call
jp
loop
js
or
mov
mov
cmp
mov
adc
mov
inc
cmp
xchg
aas
aam
or
cmp
push
pop
pop
lret
ds
and
int3
jbe
xor
mov
mov
ds
and
jo
mov
adc
popa
or
dec
push
mov
loopne
and
rorb
fwait
add
adcb
outsl
pop
mov
jb
sti
out
cs
inc
lahf
jno
adc
add
jae
mov
and
adc
sbb
aam
mov
orb
hlt
ja
sarl
lret
adc
dec
mov
fldenv
sbb
fldl
pusha
adc
xor
xor
sbb
packssdw
icebp
pop
add
xchg
push
xchg
push
loop
das
loop
or
and
xchg
fs
popf
lcall
cld
dec
pop
jnp
jl
fcomps
jmp
or
inc
fcos
scas
test
imul
cmc
pop
push
and
push
dec
popa
repnz
mov
cmp
adc
ror
test
repnz
sbb
push
fs
mov
cltd
mov
jp
push
mov
push
inc
push
pop
and
test
xchg
push
ret
pushw
mov
mull
mov
xor
sub
cmpsb
push
nop
inc
decl
je
repnz
dec
fiaddl
cltd
adc
sub
or
jecxz
lods
and
scas
jnp
and
push
addr16
imul
imul
fs
xorb
lret
xor
fsts
jmp
pop
mov
ja
test
inc
rolb
andb
fs
out
adc
bound
mov
add
shrb
mov
inc
sbb
lods
sarl
outsl
aam
push
lods
out
popf
lret
xchg
ds
cmp
cwtl
shlb
mov
ja
lahf
pop
scas
sti
mov
std
imul
jno
jo
lret
push
mov
xlat
leave
sti
cmp
outsb
or
mov
or
ss
pop
cmp
cltd
sahf
sbb
add
jmp
outsb
push
dec
lret
std
das
test
push
aam
mov
call
imul
bound
aaa
jle
das
cli
notb
and
jecxz
pop
pop
cwtl
mov
and
cmp
mov
jns
fisubrl
mov
pop
enter
daa
and
mov
inc
int3
xchg
pop
shlb
lret
into
cltd
into
fcompl
push
add
adc
inc
dec
xor
xor
push
push
inc
movsb
shlb
in
push
cmpl
xchg
pop
test
clc
and
sahf
test
sub
arpl
pop
call
fisubs
repz
adc
es
cs
mov
je
mov
popf
clc
sub
scas
xlat
inc
movsl
les
in
iret
inc
lret
mov
repnz
shll
cmp
jle
xor
pop
mov
das
xchg
mov
mov
mov
leave
loope
add
mov
xchg
std
outsl
jge
dec
xchg
hlt
pop
stos
jb
sbb
mov
lods
jecxz
mov
int
dec
mov
adc
fadd
and
lahf
add
shl
int
pop
pop
fnstsw
xchg
cmp
xchg
stc
or
xchg
stc
and
sbb
frstor
dec
pop
xor
test
fs
xor
or
sub
jle
fs
push
icebp
inc
stos
xchg
add
out
cmpsl
inc
addr16
and
pop
inc
cli
dec
lock
push
dec
mov
mov
cmp
rcrb
pushf
notb
ja
mov
movsl
fwait
adc
dec
push
mov
aaa
in
aam
push
jnp
mov
cld
dec
push
test
lcall
xchg
sbb
call
idivb
lsl
les
xchg
loope
jl
adc
out
mov
and
push
das
ss
dec
push
adc
inc
das
movsb
out
xor
mov
cmp
mov
pop
cmpsb
filds
inc
push
fiaddl
popa
ficoml
push
pop
add
ret
icebp
jb
xor
lahf
and
xchg
xor
pop
jp
lret
xchg
out
lret
inc
fs
push
jne
out
stos
dec
jns
pusha
movsb
mov
aaa
sti
pop
jge
push
mov
jb
fsubrl
test
lds
out
sub
mov
sbb
xchg
add
roll
andb
filds
inc
arpl
out
xor
fidivrs
xchg
and
dec
dec
stc
push
mov
je
xchg
mov
lret
addb
shl
inc
and
in
and
cs
mov
aaa
in
mov
jg
add
xor
xchg
movswl
mov
cmp
int3
or
rclb
dec
xchg
xor
mov
lret
sub
lret
imul
test
mov
dec
iret
je
sub
mov
push
and
sahf
mov
sub
push
dec
push
xchg
xor
mov
mov
push
jbe
repz
mov
xor
stos
mov
push
mov
push
xor
daa
mov
lea
outsb
loope
sbb
xlat
test
sahf
es
sbb
ds
xchg
fsubl
lret
mov
or
mov
fisubs
fistps
or
mov
or
lds
sub
popf
fsubs
cmc
mov
stos
pop
addb
xchg
ss
push
cs
or
in
test
inc
aas
shlb
inc
mov
xchg
mov
pop
adc
int3
cltd
divl
xchg
mov
adcl
cmpsb
lock
movsl
fcoms
aam
pop
add
lds
outsb
or
sub
hlt
and
stc
or
pop
and
pop
jle
outsl
sbb
xor
enter
sahf
sarl
mov
hlt
sbb
xor
ja
fildl
pushl
mov
les
xor
jns
lea
loope
adc
mov
insl
in
sti
mov
sarl
mov
lret
inc
jge
imul
mov
int3
aaa
sbb
cmpsl
add
xor
out
into
mov
push
pop
xchg
jmp
adc
lret
sbb
stc
andl
dec
mov
or
cmp
sbb
push
and
xor
adc
mov
mov
test
jmp
adc
data16
xchg
jl
cs
std
xchg
in
insl
cmc
sub
mov
int
je
pop
push
fnstsw
lcall
mov
insb
add
xchg
insl
fstp
cmpsb
mov
pop
mov
mov
movsl
xor
lahf
cmp
pop
mov
cltd
test
push
push
inc
and
cld
jge
subb
cwtl
aaa
je
xchg
int3
push
mov
xor
ja
int3
addb
push
scas
insb
inc
mov
in
mov
xchg
dec
cmpsl
divl
mov
int
jg
fsub
add
lcall
push
cmp
mov
mov
add
mov
sbb
xchg
inc
jno
inc
mov
shll
mov
mov
stos
out
sbb
lods
sub
mov
xlat
dec
mov
enter
mov
inc
xchg
mov
fisttpl
or
mov
xchg
or
rcrl
gs
dec
sbb
fcomi
inc
gs
jg
inc
dec
cltd
loope
stos
jno
addl
push
sbb
pop
in
in
jns
call
je
xchg
sahf
loope
dec
xor
jmp
sbb
andb
pop
fs
or
fcoml
mov
adc
jg
pop
in
fldlg2
xor
add
push
dec
test
xor
add
fdiv
out
outsb
add
lock
mov
mov
js
xlat
insb
mov
shufps
mov
call
mov
movsl
stc
int3
xchg
inc
xchg
fldl
popf
popf
push
shll
and
push
clc
les
jge
adc
in
or
aad
stos
xchg
fs
add
nop
add
xchg
pop
dec
data16
xchg
cli
push
shrb
jb
fwait
or
sbb
mov
push
repz
enter
dec
xchg
das
sub
aam
in
leave
ja
fnstenv
fisttpll
jmp
push
mov
mov
lahf
mov
and
arpl
dec
cmp
ret
test
call
mov
sahf
sub
movsl
cmp
int
jge
fwait
ja
mov
out
push
lcall
mov
xor
rcrb
es
mov
stc
mov
lret
es
or
add
jle
xor
or
ds
out
adc
sbb
push
sub
jno
xor
icebp
push
jg
repz
and
pusha
add
xor
pop
dec
scas
add
xchg
xchg
jge
cli
in
ja
iret
mov
cmp
jge
lcall
idiv
pop
pop
or
loop
ficomps
mov
sahf
or
or
push
out
decl
mov
or
mov
or
fsubl
hlt
in
mov
push
ret
jl
add
jg
scas
or
leave
push
push
mov
jge
add
ja
movsb
fwait
jns
int3
jmp
nop
lea
in
aas
shrl
data16
mov
test
and
mov
xchg
iret
and
mov
bnd
inc
lods
or
jb
cmc
pusha
mov
inc
push
push
scas
cli
cltd
iret
in
fidivs
bound
enter
jo
add
push
adc
out
or
or
int
cmp
sbb
and
test
mov
mov
inc
cmp
sbb
adc
movb
cmpsb
push
lods
rcrb
sbb
jo
jmp
dec
mov
shlb
arpl
out
mov
cld
cmp
mov
mov
jb
js
add
jnp
lods
dec
pushf
fidivrs
insw
xor
inc
sbb
mov
cmpsl
int
in
jle
xchg
inc
scas
mov
daa
add
test
mov
fimull
les
aaa
out
xchg
outsl
test
cld
xchg
sub
dec
shll
dec
je
push
sub
int3
xor
sub
outsb
std
and
sbb
mov
jmp
and
dec
xchg
in
mov
sti
fyl2xp1
cmp
pop
cmp
idivl
movsb
add
shlb
test
adc
and
add
xchg
inc
push
arpl
sbbb
in
lds
sahf
aad
lcall
or
idivb
or
stc
mov
dec
cmp
cli
push
push
scas
sti
push
add
fidivrl
push
ds
popf
test
mov
adc
jge
jge
pop
dec
loop
aas
push
out
mov
jmp
iret
lods
js
cmpsl
push
loopne
jle
push
push
call
dec
xor
nop
pop
mov
loopne
lock
jo
inc
out
stc
xchg
xchg
xchg
dec
xorl
fcmovnbe
popf
cmpb
ljmp
and
and
cmp
cli
add
jae
push
pop
cmp
or
insb
icebp
mov
cmp
push
cmp
roll
out
sub
int3
push
repnz
fdiv
mov
mov
xchg
ljmp
bound
mov
fsub
testb
jl
mov
lret
sub
xor
testl
mov
fisubs
mov
mov
movzbl
out
out
dec
pushf
mov
jmp
es
xlat
add
rcrb
test
adc
rol
lock
lret
sub
mov
and
repnz
adc
lea
in
inc
or
pop
pop
sbb
jle
mov
lahf
arpl
sbb
cmp
push
inc
out
pop
push
sub
push
cli
fcomps
jo
jl
adc
call
push
aaa
inc
cmpb
pop
scas
dec
sbb
dec
inc
pop
sub
stc
je
adc
push
jae
bound
std
cmc
mov
addb
test
aam
mov
stos
add
mov
lcall
xor
xchg
les
xor
and
pushf
sub
out
inc
pop
add
scas
gs
mov
push
pushf
int
insb
stos
dec
jge
mov
jp
pop
fwait
pop
iret
out
add
ret
push
adc
jno
adc
xchg
jp
sub
jno
pop
dec
pop
pop
cmp
je
out
pop
sub
dec
mov
push
cld
xor
xor
sbb
adc
mov
sub
mov
ljmp
push
add
sbb
mov
add
faddp
inc
pop
popf
loope
dec
pop
xor
das
mov
movsl
mov
insl
out
inc
cmp
pop
fwait
aam
inc
comiss
int3
mov
dec
mov
mov
cmc
scas
das
or
mov
aas
xor
xor
jp
leave
or
pop
das
mov
xchg
fdivrl
clc
push
mov
in
insl
out
add
aaa
mov
mov
adc
mov
jne
mov
mov
insl
ja
push
xor
inc
mov
mov
lods
scas
inc
imul
mov
and
jae
aam
loopne
pop
in
jb
and
mov
in
or
bound
std
dec
dec
pop
mov
lods
or
and
fstps
stc
loop
or
pop
or
insl
orb
sbb
aaa
in
movsl
fdivs
out
leave
sti
stos
lods
cmp
movsl
sub
cmp
test
add
jne
or
xchg
push
jp
ret
mov
repnz
and
mov
addl
inc
pop
jae
or
lea
push
pop
fs
fbld
cmp
lcall
add
cmp
mov
xor
clc
fbstp
jmp
fimull
repz
ja
in
out
push
rolb
push
lods
in
test
or
mov
in
xchg
rorl
arpl
popf
lcall
jae
pop
xlat
fsubrl
in
push
lock
push
aaa
sub
jnp
dec
pop
push
pop
mov
xor
adc
das
jmp
mov
dec
out
and
dec
rorb
mov
nop
std
into
pop
fdivrs
mov
and
xchg
rcr
fistpl
hlt
in
sbbb
inc
push
jbe
lds
out
std
popf
push
xchg
pop
frstor
stos
adc
pop
pusha
fadd
xor
cmc
movsl
imul
ret
inc
mov
pop
push
das
fs
fcomps
xlat
or
cmp
loopne
mov
ret
mov
jo
sbb
xchg
pushf
lock
or
adc
dec
cmp
das
xchg
inc
imul
lret
cli
mov
das
mov
frndint
cmc
testl
push
pop
test
rclb
mov
sahf
fucomip
push
add
cmpsl
mov
mov
orl
hlt
imul
mov
iret
dec
inc
inc
pop
xchg
sbb
dec
je
pop
and
dec
mov
pop
icebp
jnp
in
mov
in
xor
inc
cmp
fdivrl
fists
pop
das
mov
sub
mov
or
adc
xor
dec
in
int
sub
scas
add
xchg
dec
adc
stos
out
mov
xchg
push
mov
mov
xchg
jge
lds
cmp
lret
das
push
pop
jb
lret
mov
mov
xchg
int3
mov
xchg
mov
mov
dec
or
in
iret
push
and
pushf
fdivl
lods
jge
les
and
cld
ljmp
mov
cwtl
nop
arpl
not
sub
mov
ja
cmpsl
test
jne
push
lods
movsl
pop
sar
sbb
fdivrs
repnz
fbstp
sub
cmp
inc
and
clc
jg
xor
aam
sbbb
popa
les
aaa
leave
je
enter
jl
popf
xchg
cmp
ret
mov
add
aam
orl
movsl
jne
pop
ret
pop
out
mov
rcll
mov
and
cmp
sar
jbe
icebp
jl
xchg
insl
xchg
shll
mov
xor
xor
mov
call
sub
leave
push
into
popl
mov
lods
out
mov
mov
push
aas
cltd
or
shll
inc
jg
out
ljmp
stos
sbb
cmpsb
xchg
mov
or
add
imul
icebp
out
dec
cltd
xchg
dec
or
push
xlat
mov
nop
lods
and
dec
pop
insb
xlat
subb
xchg
jg
push
jae
mov
mov
lock
incb
push
cmpsb
jo
xchg
inc
movsl
sbb
sti
pop
stos
mov
jge
lret
out
inc
scas
fmuls
fnstcw
in
addl
mov
sub
mov
repz
out
fists
mov
sar
popf
sub
cld
jne
sti
xor
sub
or
jo
pop
adc
jb
ds
jecxz
dec
les
popl
or
mov
cmp
pop
daa
adc
mov
or
adc
jg
ljmp
mov
mov
xorb
cmpsl
inc
popa
lock
push
rorb
cmp
xor
fwait
sbb
sub
adc
jge
sti
lret
sahf
es
jecxz
jbe
rol
jnp
adc
jg
inc
lds
shlb
cltd
inc
rolb
inc
adc
notb
lret
mov
xor
xor
aad
mov
in
add
xchg
lret
in
mov
and
jnp
jns
inc
xor
mov
jle
iret
aaa
mov
jnp
das
fs
cwtl
fwait
sbb
lret
imul
mov
les
xor
jo
movsl
roll
and
jnp
jb
and
gs
fcoml
mov
pop
mov
mov
lcall
push
insb
aaa
rcll
add
icebp
inc
call
jl
and
dec
addl
dec
test
lret
loopne
icebp
lahf
or
push
lock
adc
ret
xor
sub
insb
sarb
cmp
test
in
inc
pusha
arpl
mov
decb
ret
jns
popf
out
shlb
dec
cwtl
xchg
daa
das
mov
movl
dec
popa
mov
out
int
mov
and
lret
add
aad
push
shll
mov
mov
adc
std
push
xlat
cmp
sbb
testl
lret
hlt
flds
pusha
stos
mov
add
ljmp
mov
xchg
ss
jnp
pushf
jle
push
push
push
mov
sbb
mov
ds
mov
lret
nop
or
adc
scas
daa
movsb
insb
inc
sbb
andb
mov
cmp
sarb
jae
jecxz
clc
cmp
lds
xlat
or
ret
mov
pop
sbb
addb
lea
cmp
pop
in
push
pop
mov
mov
mov
clc
inc
jb
xchg
xchg
cmp
or
cmpsl
outsl
dec
push
mov
aaa
jecxz
aas
out
fdivs
or
xchg
ret
shll
dec
sub
cmp
adc
xor
adc
bswap
int3
xor
sub
sti
cld
movups
sbb
dec
adcb
cmp
sub
dec
sti
jb
inc
shrb
mov
inc
xchg
aas
sub
out
jb
mov
shrb
cli
fs
jb
push
add
popa
pusha
pop
test
and
das
orl
dec
sbb
cmp
push
or
dec
xchg
mov
test
loopne
cltd
inc
push
dec
leave
dec
test
test
decl
repz
or
ljmp
mov
mov
sbb
rcrb
rcr
lods
inc
shll
enter
daa
pushf
inc
outsl
inc
popa
ljmp
mov
push
lods
stc
xor
mov
xor
clc
aad
and
inc
mov
cwtl
mov
adc
imul
adc
mov
push
or
mov
add
mov
in
cmp
or
xor
shl
push
push
enter
xor
jbe
in
or
adc
ljmp
jge
aas
pop
sti
add
adc
mov
mov
dec
xchg
xlat
int3
and
xlat
xor
dec
push
cmp
cltd
or
jno
mov
popf
adc
xchg
xor
call
jbe
pop
or
sahf
in
idivb
or
subl
repnz
push
push
iret
ret
fldenv
or
mov
cld
mov
cmp
movsb
dec
mov
fistpl
add
mov
aam
fwait
push
and
call
adc
mov
fwait
inc
xor
pop
repnz
or
adc
fadds
inc
sbb
and
and
out
sub
dec
push
push
push
loop
movsb
and
jns
push
cltd
mov
shlb
enter
es
sbb
mov
subl
jmp
aaa
xor
inc
inc
std
int3
out
test
mov
divl
sar
cmp
cli
mov
dec
data16
ret
rcrb
or
outsb
out
push
les
jns
es
test
mov
jecxz
and
ds
sahf
mov
das
adcl
cld
shll
popf
jnp
mov
mov
cltd
jns
js
int3
jmp
and
pop
ljmp
sub
leave
pop
pusha
fwait
pop
rolb
push
inc
fsubr
inc
xor
in
popf
clc
fistps
pusha
orl
pop
or
xor
insl
sub
lahf
jl
int3
mov
inc
cmp
popf
out
sub
fsub
rol
sub
mov
jecxz
xor
test
test
rorl
fildll
leave
xchg
fmul
leave
icebp
adc
xchg
imul
add
pop
jle
or
stc
pop
scas
jnp
pusha
xor
hlt
jl
decl
jp
sbb
inc
mov
or
jnp
mov
ret
ret
lock
fwait
inc
cmp
fistl
xchg
jl
mov
daa
rcrl
stos
xor
mov
cmp
sbb
inc
cmpsl
push
jns
icebp
loope
push
rclb
mov
mov
mov
mov
push
shrl
outsb
cmp
subl
mul
mov
sub
push
mov
jbe
add
fstpt
adc
jbe
sbb
cmp
jl
mov
loopne
xlat
cs
out
add
lods
mov
push
or
mov
aaa
fistpll
call
dec
dec
inc
in
add
or
pusha
and
and
and
lods
jg
cwtl
ljmp
repz
stos
lods
mov
leave
ds
cmp
aas
and
test
mov
add
sbb
fmull
shlb
cmp
cmp
push
inc
cmc
imul
add
mov
sahf
incb
pushf
lahf
and
cli
out
mov
push
mov
js
sarb
pop
rorl
incb
rolb
jns
mov
xlat
push
pusha
sbb
into
stos
inc
pop
test
xchg
xchg
repnz
lcall
das
shll
adc
cmp
pusha
out
das
lods
and
sbb
xchg
fwait
clc
push
sub
rcrb
movsl
lret
mov
jmp
xchg
es
imul
mov
outsl
gs
sahf
xchg
pushf
out
fsts
and
add
push
push
enter
mov
jl
ljmp
call
in
dec
add
adc
sahf
sahf
lcall
inc
dec
call
cmp
push
jb
and
xor
adc
mov
loope
fs
js
xchg
cmpsl
ljmp
pop
cltd
add
in
dec
xchg
adc
xchg
shrl
jnp
sub
pop
aam
stos
sub
rolb
into
xchg
lahf
mov
dec
outsl
out
ret
popf
test
pop
push
data16
and
cmp
imul
repz
jle
rcl
out
and
sar
and
rcr
xchg
add
or
adc
xchg
cmp
icebp
add
out
orb
pop
les
sub
gs
lcall
mov
cmp
xchg
push
inc
cltd
cmp
jp
mov
adc
inc
jg
add
cmp
xchg
pop
test
sbb
sbb
mov
sbb
lahf
fmuls
popa
mov
push
das
xor
push
mov
add
das
stc
add
jae
push
loopne
leave
sahf
push
jno
arpl
out
push
dec
mov
dec
and
in
es
shll
sbbl
ret
push
scas
loopew
imul
leave
nop
sub
xor
inc
pop
adc
jge
lea
lcall
jmp
or
push
dec
rcl
cmp
fldenv
std
in
repz
inc
shrb
inc
pop
push
jnp
mov
pop
sti
sub
call
sub
mov
sub
pop
in
loope
testb
nop
outsl
and
pop
cld
fldl
inc
and
loop
xor
out
hlt
lods
sub
xor
sub
mov
imul
cmp
dec
mov
cli
rcl
adc
fwait
aam
push
dec
pop
addr16
sarb
out
pop
pushf
mov
popa
xor
js
add
pop
or
mov
xchg
add
ja
pop
xor
fisttpll
and
mov
outsb
or
jb
push
adc
mov
or
add
mov
in
out
add
cs
push
xchg
stos
shr
jb
push
cld
lret
cltd
mov
add
xchg
call
stc
jns
mov
test
cmc
mov
fmuls
mov
pop
popf
add
xchg
inc
or
test
out
and
mov
sub
mov
dec
jle
out
xchg
xchg
or
or
lock
les
inc
dec
xchg
mov
int3
dec
adc
jg
xchg
lret
negl
xor
data16
xor
lcall
movsb
fisubl
cs
cmpsl
aaa
add
fisubs
pop
add
lods
jle
jb
or
es
mov
shl
jb
cs
mov
jb
fdivrl
scas
fsubl
in
bound
inc
int
xor
xor
es
leave
mov
aad
jo
mov
addr16
ret
stos
mov
xchg
adc
icebp
fcoms
jnp
mov
and
fistpll
hlt
andl
in
into
call
mov
pop
push
sti
cmc
into
ficomps
mov
sub
aas
cmp
jne
ljmp
mov
out
out
sbb
push
scas
stc
mov
pop
outsb
mov
outsb
cmovle
cmpl
adc
lea
ss
in
push
cmp
adc
sub
or
ljmp
pop
fmuls
sub
push
int
mov
mov
dec
repnz
in
pushf
pusha
and
push
mov
xchg
test
mov
lret
fidivrl
jp
fwait
stos
xchg
pushf
fs
inc
leave
mov
in
push
pop
rcll
loop
out
dec
and
nop
sub
lgs
ja
fstps
sti
push
cld
sub
iret
pop
mov
sub
push
repz
push
aas
sti
xlat
scas
loopne
mov
or
inc
jno
sbb
jo
int3
filds
push
insl
adc
in
pop
in
jbe
pcmpeqb
insl
hlt
ret
adc
dec
dec
insl
xchg
lods
jecxz
or
insl
and
cmpsb
aaa
insl
sbbl
out
mov
xorl
fnstcw
mov
lds
sub
mov
lods
mov
int
inc
scas
sub
cmp
sub
pop
out
aas
addb
and
or
jae
inc
xchg
sti
sub
push
push
cmp
int3
dec
pop
enter
sahf
mov
xlat
mov
mov
cwtl
xor
ficoml
push
push
js
jg
jne
test
xchg
push
repnz
insb
add
mov
xchg
ret
jle
cld
mov
int3
inc
add
fbstp
jge
mov
push
pop
out
inc
fwait
adc
idiv
mov
into
cmpsl
popa
mov
iret
cmp
mov
lar
mov
arpl
fisubrl
push
and
add
out
popa
loop
adc
push
push
sahf
in
xor
dec
cmp
sbb
notb
pop
xchg
leave
cmpsb
pop
sub
cs
movsb
push
andb
push
enter
jno
movsb
sbb
sarl
test
sub
jae
js
mov
mov
inc
ja
cmp
into
or
jb
jge
add
add
jnp
outsb
mov
push
dec
or
xchg
jl
movsb
ja
jo
mov
ret
pop
aam
mov
lds
xchg
inc
jne
lea
fildll
ret
mov
push
shll
jg
jmp
xchg
mov
inc
daa
es
lds
dec
ret
cmp
xchg
mov
imul
and
out
lods
add
hlt
push
jmp
out
mov
sbb
stc
jnp
add
scas
fmull
arpl
push
push
jmp
in
pop
cmp
adc
insl
outsb
xor
cmp
xchg
and
mov
int3
sbb
inc
cwtl
mov
ljmp
imul
test
xchg
cmp
jo
adc
in
fidivrs
pop
mov
xor
je
mov
jb
sbb
push
inc
sub
cmp
outsb
mov
mov
popa
outsb
dec
out
xchg
xchg
and
sbb
mov
fstp
sbb
js
mov
lods
cmpl
arpl
es
pop
mov
prefetcht0
hlt
aad
mov
or
pop
daa
dec
rclb
push
scas
mov
jmp
inc
xor
mov
sub
inc
int
push
stc
inc
sbb
div
adc
cmpsl
push
cwtl
mov
or
xchg
aas
shrb
popf
scas
lret
fs
mov
movsb
movsb
ja
mov
es
scas
repnz
enter
sub
nop
pusha
movsl
pop
daa
test
mov
sbb
add
sbb
mov
pop
sub
xor
es
mov
mov
std
shll
jnp
int3
inc
and
xchg
dec
mov
fsts
mov
and
js
loope
mov
mov
mov
pop
pop
shll
xlat
jmp
jne
and
sbb
rep
into
push
addr16
call
sbb
imul
ret
inc
jmp
gs
fs
or
sbb
mov
mov
cltd
adc
fldenv
fs
pop
push
ret
call
frstor
fsubs
inc
and
xor
test
or
cmp
in
cs
xchg
inc
push
mov
mov
test
insb
pushf
push
mov
pop
rcl
popf
je
sub
dec
popl
inc
pop
push
out
mov
jecxz
push
aad
mov
jge
mov
sub
mov
adc
std
icebp
in
pop
dec
mov
pop
push
fs
call
mov
inc
lods
push
arpl
repz
adc
test
pop
scas
jae
ficompl
push
jno
icebp
nop
mov
fstl
jo
add
jb
jne
dec
cmp
scas
jge
fistl
call
cmp
xor
mov
shlb
aas
push
stos
lret
das
stos
loope
mov
mov
jbe
aam
mov
lods
sti
js
imul
add
icebp
inc
in
inc
dec
scas
mov
push
xchg
cwtl
or
dec
les
sub
test
ds
mull
jne
push
adc
mov
pusha
jecxz
pop
mov
loopne
mov
xchg
pop
jg
xchg
ja
mov
in
xchg
ret
test
xor
xchg
jo
punpcklwd
fdecstp
or
repz
mov
and
ljmp
jns
cli
sub
jle
dec
adc
movsl
cmp
inc
jbe
pop
add
rorb
sub
mov
test
in
or
lods
and
nop
cmc
or
xchg
dec
lea
dec
inc
jbe
jo
mov
fbld
mov
push
pop
pop
pop
lret
xchg
fstl
jo
jl
lret
sub
and
cmp
jnp
mov
mov
aam
xchg
xor
pusha
es
pop
mov
add
and
cmp
sbb
cmpsl
push
jno,pt
fstp
dec
ret
xor
iret
xchg
mov
mov
cmpsl
lods
int
sbb
inc
adc
into
push
loopne
out
inc
jb
sub
test
aam
dec
mov
pop
push
dec
jb
roll
mov
mov
jno
je
loopne
xchg
fucomp
mov
mov
xor
dec
cld
push
in
or
xchg
iret
loopne
jae
ret
mulb
in
in
mov
fstpt
in
push
sub
sbb
leave
or
loop
mov
mov
xchg
imul
scas
enter
and
or
inc
outsb
loop
lods
pushf
fninit
or
ss
fadd
pop
xor
mov
mov
pop
daa
loopne
call
lcall
shlb
shr
sub
test
js
cld
inc
sub
insb
shr
xchg
or
cmp
into
ds
loop
clc
xchg
lods
insl
xchg
cmc
mov
test
cwtl
stos
dec
xor
dec
xor
xor
mov
jb
in
cmpsl
mov
add
jle
jb
sub
dec
inc
rol
sbb
jnp
enter
pushf
scas
push
sbb
inc
cli
sub
pop
and
outsb
xchg
in
arpl
cmp
xor
jmp
and
in
dec
xor
jns
sub
test
mov
ja
sub
dec
lock
xchg
adc
fnsave
pusha
incl
or
mov
mov
push
ds
xor
leave
adcl
addr16
mov
inc
test
mov
stos
jae
and
cmp
js
adc
push
data16
gs
in
lret
add
sbb
sbb
mov
sub
cmpsb
andl
and
ljmp
push
push
adc
cmp
in
and
sti
mov
or
dec
mov
adc
inc
in
int3
jl
jl
pushl
pop
test
push
enter
push
stos
or
repz
mov
mov
out
ret
mov
cld
and
xlat
nop
loopne
push
aaa
test
pop
stos
lea
adc
or
sub
fstpt
test
outsb
jecxz
aas
push
loop
sub
stos
pusha
sarb
fcomip
clc
push
jmp
xchg
xchg
std
ret
and
and
push
int
fsts
test
jbe
mov
mov
pop
and
or
mov
xchg
mov
imul
mov
xchg
pop
pusha
scas
lret
js
leave
add
cmc
pusha
xlat
aam
bound
lcall
clc
sbb
mov
aam
xchg
je
notl
call
dec
push
into
pop
outsb
jl
aas
int3
jge
ret
push
pusha
xchg
repz
nop
mov
mov
leave
and
int
mov
das
mov
or
fidivl
and
sahf
mov
aaa
fildll
lret
mov
mov
insb
iret
imul
sbbl
fdivs
mov
mov
xor
push
inc
jnp
jns
insb
cmpsl
pop
stos
jb
jnp
add
push
and
push
xchg
add
jnp
sbb
lea
gs
cwtl
fnstenv
jle
sub
jl
aaa
ljmp
cmp
mov
icebp
shlb
imul
int
scas
cmp
mov
push
inc
pop
clc
push
fldcw
adc
popf
sti
xchg
and
and
cmp
data16
inc
mov
dec
pop
cmp
adc
mov
add
iret
dec
xchg
or
pop
jg
add
sub
shl
incl
mov
addr16
mov
lock
sti
mov
lea
push
fadd
fimuls
icebp
in
orb
sub
popf
addr16
jg
dec
or
leave
sbb
jp
add
das
fildl
mov
mov
dec
imull
dec
sti
push
xor
mov
nop
inc
adc
cmc
jne
test
js
push
rcrl
les
and
shlb
mov
cmp
std
mov
mov
insb
int
cmp
pop
fidivl
jns
mov
xor
testb
xor
fcomps
in
hlt
imul
jne
icebp
ret
and
push
cmpsl
in
mov
cmp
adc
das
sub
icebp
jge
aam
xor
sbb
mov
sub
inc
aaa
jge
popf
test
in
mov
imull
scas
inc
jbe
sbb
ds
int3
lds
or
aaa
xchg
jb
cmp
dec
xchg
adc
movsb
loopne
adc
mov
icebp
lahf
push
or
mov
xchg
sbb
test
out
add
add
inc
js
call
push
mov
arpl
lcall
jmp
dec
xchg
cmp
ljmp
sahf
mov
inc
femms
out
mov
pop
movsl
adc
push
cld
dec
aam
popf
psllw
lahf
in
ror
sbb
mov
dec
push
mov
xor
insb
pop
mov
xor
xor
or
jae,pn
pop
movb
in
adc
sub
xlat
mov
pop
orl
mov
jbe
out
push
adc
int
mov
ret
jnp
ret
iret
scas
mov
dec
sub
inc
or
cld
xor
mov
mov
dec
xor
shl
das
sub
push
ret
jb
cmp
mov
jle
push
cli
xor
stos
add
pop
adc
fimuls
pushf
daa
test
mov
push
arpl
adc
mov
add
sar
das
pop
outsl
cwtl
push
arpl
sarl
fcomip
xchg
mov
sub
pop
inc
mov
loope
jbe
jle
out
cmpsb
pop
incb
andl
arpl
xchg
add
fnstenv
inc
xchg
in
mov
lock
push
sbb
iret
cmpsl
loope
mov
dec
mov
dec
sbb
dec
inc
lcall
jg
sti
sti
lret
les
lret
mov
or
repnz
adc
mov
add
test
in
int
pop
lret
mov
ja
repz
outsl
sub
inc
mov
jge
fbstp
mov
inc
mov
cmp
cmp
push
pop
sbb
dec
pop
test
cmp
out
pop
cmc
inc
sub
mov
scas
sbb
or
jecxz
dec
lret
inc
pop
shll
mov
mov
adc
mov
pop
xor
add
idivl
lea
adc
shrb
add
sub
loope
add
outsl
decl
mov
and
addr16
xor
pop
and
leave
movsl
xchg
fldt
jnp
mov
push
pusha
add
clc
movsb
pop
sbb
xchg
sbb
pop
xor
imul
loopne
and
sbb
mov
adc
jo
or
decl
mov
sub
lret
icebp
cmp
mov
inc
jle
xlat
aam
cmpsb
jns
mov
inc
setne
push
popa
repz
outsb
les
outsb
mov
jb
pop
test
ljmp
adc
mov
fnsave
xchg
xor
int
frstor
push
sbb
ds
into
lds
pop
repz
mov
lods
jns
push
and
adc
ret
subl
int
out
dec
sub
mov
aas
andb
or
xchg
push
cmp
or
andl
push
pop
stos
xor
jmp
imul
jo
inc
paddq
sbb
dec
or
sub
les
sti
xor
dec
inc
test
outsb
aad
push
mov
iret
push
imul
and
ffree
mov
inc
add
jns
pop
cli
daa
aas
jge
add
pop
cmc
add
fldl
cmp
inc
mov
fstps
xor
rorl
xlat
arpl
fdivrl
add
push
lods
or
push
or
rorl
sbb
pop
mov
outsl
nop
ja
movsl
inc
or
out
test
lock
jo
fmull
aam
hlt
adc
jno
jge
mov
fbld
xchg
xchg
inc
flds
aam
repnz
or
push
push
xchg
movsl
jmp
pop
repnz
int
sub
dec
dec
aam
int3
pop
xchg
cmp
push
xchg
aam
imul
or
mov
out
jne
inc
clc
clc
cli
out
mov
sbb
call
outsl
imul
mov
mov
pusha
cmpsl
or
inc
add
pop
cmpsl
jnp
mov
je
ss
jb
xor
xor
inc
scas
mov
loope
das
repz
dec
cmc
add
rcrb
enter
mov
add
decb
cmp
leave
hlt
cli
dec
shl
bound
and
ret
or
jb
mov
fsubrs
popf
cmp
scas
in
inc
sbb
in
add
adc
adc
mov
sbb
dec
lret
scas
mov
faddp
adc
dec
xchg
dec
scas
inc
scas
scas
pop
adc
inc
sub
push
pop
popf
repnz
mov
imull
daa
lcall
cmp
inc
cmp
movsl
fisttpl
mov
ret
insb
add
repnz
mov
jle
mov
fcomps
cli
jno
mov
pusha
leave
in
xchg
jno
sbb
pop
test
and
mov
and
pusha
jg
repz
clc
inc
aam
stos
lret
ljmp
jno
jb
adc
mov
and
dec
in
dec
push
cwtl
jmp
jle
mov
mov
dec
push
imul
pusha
jno
xchg
xchg
mov
gs
pop
xchg
xor
mov
dec
jo
jecxz
sarl
inc
ror
ror
cmpsb
jnp
mov
adc
lods
mov
adc
pop
cmp
lock
mov
push
das
in
or
mov
pop
into
cmpsb
jecxz
dec
imul
imul
gs
fistps
push
iret
cmp
rcrl
sbb
add
mov
in
bound
insl
dec
push
inc
push
hlt
pop
xor
mov
sarl
or
aaa
push
mov
out
enter
ss
mov
fiadds
ret
xor
and
xor
dec
jb
sub
or
scas
xor
xor
pop
cmp
add
pushf
roll
mov
add
jle
pop
fidivs
dec
sbb
out
popa
add
pusha
xchg
mov
cmc
jae
sahf
and
shr
sub
repz
testl
roll
lfs
pop
ret
fs
add
or
movsl
cmpsl
and
pop
mov
mov
adc
aad
ds
mov
xchg
add
movsb
xor
mov
mov
jno
repnz
dec
pop
mov
aaa
cmp
inc
mov
push
xchg
add
cmp
nop
add
add
add
loope
mov
push
adc
sbb
fsubrs
mov
xchg
pop
stos
fiadds
adc
je
out
cwtl
sbb
lcall
out
jbe
mov
dec
mov
jle
xchg
dec
imul
cmpsb
xor
jo
iret
test
push
dec
mov
inc
int3
pop
xor
mov
cmc
ja
out
packsswb
inc
push
not
xchg
inc
and
sbb
or
sub
push
dec
std
xchg
fldt
enter
sbb
pop
push
in
add
and
cmp
jmp
fldl
and
cmp
mov
and
inc
mov
jne
adc
push
or
pushf
mov
repnz
adc
out
repz
arpl
xchg
idivb
push
or
call
pop
cwtl
push
shlb
dec
sbb
scas
imul
adc
add
int3
fidivs
xchg
outsb
add
or
jne
lcall
push
push
lahf
fbstp
pushf
lahf
and
mov
idivl
outsb
fstps
enter
sub
ss
push
pop
sbb
mov
jns
hlt
xchg
cmp
or
std
xorb
sbb
cmpsb
nop
pop
cmp
cmp
pop
push
pop
mov
popl
pop
roll
mov
mov
push
mov
xor
insl
loop
adc
dec
outsb
jle
outsl
mov
sbb
stos
and
jnp
mov
cmc
add
lahf
leave
repnz
sub
cmc
fldenv
inc
shrb
dec
data16
icebp
xchg
mov
movsl
push
adc
mov
out
inc
mov
mov
sub
xchg
mov
std
cmp
sbb
or
mov
jb
adc
inc
adc
xor
and
mov
adcb
test
xor
or
jmp
inc
inc
ljmp
push
pushf
push
inc
popa
aas
loope
add
int
dec
push
imul
xchg
fcomi
dec
add
mov
mov
sbb
lret
pop
pop
sarb
rcr
pop
popa
push
pop
dec
loopne
sbb
add
cltd
cmp
sbb
loopne
cs
pop
push
or
adc
rorl
adc
add
or
frstor
pop
push
js
and
pop
xchg
les
mov
daa
cltd
dec
mov
pop
lods
hlt
insb
lahf
out
fldl
scas
in
mov
fisttpll
xor
dec
dec
mov
sbb
outsl
pop
and
cmp
out
mov
out
sbb
push
imull
mov
mov
lock
pop
and
pop
sub
mov
loope
xchg
jae
sub
xchg
xchg
fldcw
cs
jne
or
sub
movsb
xchg
push
cmpsl
push
ret
sbbl
push
bound
and
pusha
pop
xchg
dec
xchg
gs
int3
aaa
jle
shlb
mov
fdiv
in
inc
mov
sahf
adc
pop
inc
gs
push
push
mov
xor
je
pop
loop
adc
test
add
sbb
push
push
cmpl
dec
scas
les
jne
jno
xor
push
push
jne
push
into
cmp
mov
or
cmpsb
mov
sbb
aaa
mov
and
sub
call
mov
outsl
mov
xchg
imul
cltd
pop
sahf
in
testl
dec
jo
in
ret
loope
sbb
imul
adc
testl
inc
xchg
xchg
xchg
push
addr16
ret
push
pop
into
mov
lds
pop
out
out
int
scas
pop
xchg
xor
test
insb
imul
sub
push
cmp
xchg
gs
jmp
dec
xchg
dec
adc
xchg
aaa
es
in
xchg
mov
out
jno
xor
cmp
push
cmc
pop
mov
jb
orl
push
mov
nop
add
cmpsl
insb
add
fsubs
addl
in
scas
fldt
pop
out
fnstcw
fidivrl
push
add
pop
ljmp
and
and
mov
aaa
out
inc
cmp
pop
mov
leave
ja
aam
ds
das
push
es
insl
or
cmp
das
or
push
jne
fwait
sahf
fnsave
cmp
fsub
in
cwtl
das
cmpsl
pop
add
out
mov
push
push
cld
shrl
fmuls
xor
rolb
dec
dec
das
jo
mov
orb
xchg
jnp
jne
test
jns
sbb
dec
add
int
mov
in
and
ljmp
jnp
adc
int
test
enter
inc
idiv
cmovl
jmp
mov
in
sbb
add
movsl
sbb
into
push
cmc
or
aas
bound
enter
stos
out
cli
or
movsl
aad
test
popa
cmpsb
adc
leave
and
popf
scas
pop
push
xchg
jp
adc
push
push
mov
push
mov
mov
iret
shlb
xchg
subl
jle
jl
xor
fadds
xchg
sbb
out
jb
bound
pop
and
pop
jmp
int
dec
xor
sbb
mov
inc
mov
inc
push
cmpsl
pop
xchg
das
or
mov
or
mov
push
je
pop
sti
dec
xlat
dec
inc
pop
addr16
pushf
pop
in
pop
inc
mov
adc
cmp
pop
add
inc
loop
cli
jns
xchg
clc
jge
nop
mov
cmp
stc
lods
stos
mov
mov
js
pop
push
test
stos
cli
insl
mov
loopne
call
push
and
stc
xchg
mov
iret
push
js
repz
cwtl
stc
mov
mov
cltd
sti
stc
loopne
cld
add
scas
jg
mov
mov
xlat
lods
adc
scas
xchg
popf
mov
and
inc
and
push
mov
rol
mov
add
test
xchg
int3
mov
mov
mov
push
insl
cmp
lds
sbb
sbb
push
push
ret
push
lods
dec
xor
or
push
and
loope
push
cmp
loop
lock
xchg
ret
jne
and
dec
add
dec
fstpt
inc
rorb
repz
xlat
inc
lock
dec
pop
sbb
mov
insl
xchg
sub
cmp
or
and
movsl
les
ss
sbb
and
lock
inc
je
and
jno
cmpsb
or
in
sub
icebp
pop
loopne
loope
or
or
je
dec
filds
addr16
lret
nop
das
popf
adc
cmp
inc
pop
mov
js
ret
xchg
and
test
and
test
cmpsl
lcall
dec
adc
out
gs
popa
dec
mov
mov
rcrb
push
or
xchg
or
faddl
xor
mov
and
fildl
push
cmpsl
inc
or
cmp
divb
fcomps
dec
addb
rorb
ljmp
mov
lahf
addr16
mov
pop
push
mov
mulb
stos
scas
mov
icebp
push
push
jmp
cmpsl
sub
pop
aas
sbb
int
sub
lea
repz
adc
scas
mov
lcall
inc
mov
add
add
jg
adc
mov
jnp
inc
nop
bound
adc
fists
in
jl
jecxz
inc
pusha
dec
xchg
push
inc
mov
setp
push
mov
repz
test
xor
fidivrs
stc
sbbb
push
jne
adc
in
roll
adc
subb
jg,pt
sub
push
int3
xor
fwait
ret
lahf
mov
mov
pop
and
cs
sub
sbb
ds
loope
aad
xor
or
mov
lret
or
ret
jb
pop
dec
sbb
lock
out
jmp
pop
mov
xchg
cmc
mov
sbb
dec
addr16
cmp
inc
test
fmull
mov
lods
jb
pop
jmp
pop
je
pop
movb
sub
dec
rdtsc
popf
mov
sbb
and
jbe
orb
pop
and
pop
fadd
pop
sbbl
sbb
xchg
popa
in
fbstp
daa
or
sub
add
add
cmc
mov
jno
mov
xlat
dec
lock
das
dec
fwait
mov
xchg
loopne
mov
test
push
stos
pop
std
jg
xchg
mov
hlt
pop
imul
or
jecxz
rclb
lcall
pop
add
and
loopne
adc
popa
mulb
pop
in
in
cwtl
insb
fimuls
aad
in
xchg
inc
push
icebp
sub
pop
cs
jmp
out
lcall
scas
stc
pop
movsl
ss
insb
jle
xor
lcall
pop
lods
push
add
dec
les
int3
shll
inc
dec
insb
mov
imul
ret
lret
mov
inc
sbb
outsb
and
ret
adc
divl
xchg
cwtl
jno
jp
mov
paddb
and
loop
pushl
pop
jnp
xor
dec
ss
push
inc
dec
shr
add
pop
sahf
divb
movd
scas
inc
test
fdivr
daa
inc
push
mov
lret
pop
std
jle
divb
cmp
jp
or
fwait
xor
mov
ja
rclb
fmuls
ja,pt
xchg
and
daa
adc
mov
xchg
or
lret
add
jno
mov
push
push
and
or
nop
jp
insl
out
testb
repnz
mov
lret
and
aam
add
addb
mov
pushf
adc
repnz
in
jbe
loopne
dec
ss
rol
cwtl
mov
sti
sbb
push
pusha
pop
mov
mov
xor
mov
mov
mov
inc
idiv
push
int3
lds
je
call
imul
dec
pushf
mov
add
push
sbb
sub
roll
ljmp
mov
cwtl
loop
arpl
lcall
mov
adc
push
sub
int3
aam
fistl
dec
incl
pop
insb
add
add
sub
bound
sub
jmp
jns
mov
loope
fsts
cmp
aas
add
jns
and
ljmp
xchg
negb
lahf
push
frstor
ds
mov
sbb
mov
mov
add
inc
arpl
and
les
fldcw
pop
shl
add
xchg
ret
sbb
jns
push
or
xor
neg
or
divb
push
adc
icebp
neg
cli
add
cmp
sbb
cmc
les
mov
int
jnp
or
cs
or
andb
outsb
pop
daa
inc
xor
add
push
lods
adc
add
adc
lock
xor
and
mov
sbb
in
pop
mov
jne
inc
and
nop
rorb
add
cmp
add
shll
inc
and
push
mov
adc
roll
pop
sub
lcall
into
ficoms
mov
sub
cmpsl
div
pop
adc
add
outsb
aam
add
cmp
sub
ss
cmpsb
iret
jge
mov
rclb
mov
cld
out
jmp
cmc
inc
fldl
dec
mov
xchg
push
xchg
push
or
bound
push
or
mov
cmp
push
out
jne
popa
push
fsubr
aas
cmpb
dec
add
inc
test
push
mov
pop
adc
jne
adc
jl
sub
mov
jae
sub
imul
daa
adc
xchg
fsubp
sar
mov
ss
imul
push
mov
and
pushf
or
cmp
jbe
daa
adcb
jbe
int
int
out
and
fcomps
ret
or
push
jbe
dec
in
test
mov
push
aas
add
or
daa
add
xorl
leave
and
adc
cmp
lahf
and
fcmovbe
pushl
test
test
into
inc
mov
sti
gs
pop
leave
inc
adc
ss
inc
popa
iret
xor
inc
push
adc
pop
test
add
cmp
pop
ret
pop
add
out
shl
repnz
adc
insl
arpl
push
jmp
lds
js
popa
test
fisubrs
cmp
pop
loope
sub
jo
add
mov
cmp
pusha
xchg
int3
repz
icebp
enter
push
frndint
jo
mov
cli
dec
fisubl
add
sbbl
popf
push
fbstp
or
dec
inc
jo
dec
pop
or
xor
add
cmp
mov
addb
jg
or
sub
lret
sbb
aad
push
cmpsb
loopne
or
lods
push
mov
mov
pop
daa
scas
add
or
rcll
jnp
fidivrl
add
movsb
jne
mov
inc
jns
push
cmpsl
xor
pop
inc
mov
xlat
add
jle
xor
push
and
push
fstpl
repnz
xchg
mulb
stc
ljmp
jmp
enter
sub
sti
inc
adc
push
test
ss
movsl
mov
js
xchg
or
in
sbb
jl
or
les
mov
or
or
insl
sti
outsl
pusha
xor
push
loope
cmpsb
jo
sub
loop
fidivrl
fs
mov
lret
scas
std
hlt
lcall
fldt
add
mov
push
daa
stos
mov
sub
mov
add
or
fiadds
mov
fmull
cmp
xchg
xor
shll
lds
xchg
lret
rcl
imul
scas
inc
or
or
add
adc
sub
ficompl
xchg
push
mov
mov
push
dec
pop
arpl
enter
sub
fmulp
add
psubusb
xchg
popf
gs
pop
fwait
mull
cmpsl
pop
xlat
mov
push
call
cmp
jae
ss
scas
shlb
inc
rorl
pop
pop
lret
aas
mov
das
pop
mov
xchg
shll
push
outsl
outsb
cmc
bound
test
mov
ss
es
push
or
cltd
call
cmp
les
fcmovnu
test
pop
pop
rolb
adc
lods
mov
movsb
fisttpl
mov
std
or
adc
imul
gs
das
or
out
shrl
cmp
mov
jns
out
mov
or
mov
ficoms
mov
dec
and
movsb
adc
pushf
in
mov
jg
pop
and
dec
ret
xorb
pop
inc
jnp
lods
cwtl
ret
int
enter
jge
xchg
int
pop
imul
repnz
mov
push
mov
loop
push
jg
insb
inc
bswap
je
sub
or
mov
lret
js
adc
mov
femms
ds
adc
scas
shll
xchg
leave
pop
xor
and
sbb
cmp
mov
insb
sub
out
ret
mov
arpl
addb
mov
inc
fwait
ds
jbe
xchg
lret
dec
scas
leave
push
adc
cld
fwait
mov
mov
rcrb
cs
inc
aas
cmp
hlt
mov
out
add
add
xor
imul
stc
sarl
fnstsw
fisubs
cmp
mov
mov
rcl
mov
inc
or
push
mov
jl
inc
xchg
pop
add
mov
stos
push
jno
add
xchg
xor
sbb
push
mov
add
xor
outsl
mov
cmp
int
ja
add
or
addb
pop
pop
pop
xor
or
push
stc
inc
mov
and
call
test
sub
outsb
fdivrs
aad
adc
sbb
sbb
pop
addr16
out
push
dec
mov
mov
cmp
xchg
jbe
xor
sub
insb
jg
sub
inc
enter
push
inc
pop
negl
sahf
and
push
shrb
insl
xchg
dec
cmpsb
xchg
hlt
pop
xor
pcmpgtb
jle
jo
push
lods
push
shl
iret
imul
shl
and
rep
xor
sub
movsl
js
paddsb
jne
mov
jo
out
dec
xor
iret
or
cmc
pop
imul
aad
xor
popl
das
lods
call
dec
repz
ja
daa
inc
mov
mov
mov
je
rolb
cmp
sub
push
stos
stc
push
dec
or
test
sbb
fs
movsl
out
dec
aam
loop
pop
movsb
call
sub
adc
pop
push
lret
clc
mov
in
loopne
push
mov
mov
xchg
aas
fcmovu
out
mov
rclb
mov
or
in
jecxz
daa
movsbl
repz
in
sbb
stc
cmp
cmc
sbb
push
std
sbb
not
mov
repz
lret
rol
pop
pop
mov
movsb
fmuls
cmp
pop
fsts
outsl
or
rcll
fneni(8087
lods
jbe
out
mov
lret
cld
push
fnsave
stc
pop
xchg
xor
shll
sbb
out
push
mov
mov
sbb
bound
aad
loope
or
inc
aad
mov
shrl
mov
pop
xor
inc
or
pop
faddp
sar
sub
popa
jbe
fwait
cld
sub
cmp
cwtl
lcall
hlt
rcrb
ficomps
adc
jle
sub
xchg
mov
pop
push
push
push
push
cmc
lods
sti
daa
cmp
int
fidivs
ret
xor
ds
jle
xchg
rcr
shl
dec
jecxz
push
call
arpl
xchg
in
jecxz
mov
mov
add
fiaddl
mov
and
in
popa
out
lret
je
daa
repnz
dec
stos
std
fistps
sahf
pop
imul
dec
fwait
arpl
das
mov
stc
xchg
mov
cmpsl
enter
sub
scas
pop
mov
pushf
pop
in
insb
adc
pop
xor
insl
jl
movsl
mov
imul
and
mov
aas
pop
aad
dec
rorb
mov
cmp
ja
lcall
dec
insb
imul
adc
stos
ds
pop
mov
mov
xlat
data16
fstp
ds
fistps
jnp
xor
push
fwait
adc
or
dec
mov
nop
stos
stos
xchg
popa
aaa
dec
xchg
xor
sahf
xchg
es
dec
out
mov
mov
sub
sti
ret
jmp
push
dec
jg
cmp
and
jp
mov
cmp
xchg
fisttpll
test
push
mov
add
lahf
je
xchg
loop
roll
jnp
sub
sub
int
adc
cltd
xchg
shrb
aas
bound
xchg
je
outsb
in
mov
lock
mov
pushf
and
fdivp
movsb
xor
pushf
pop
lods
out
mov
adc
mov
into
mov
clc
jecxz
xor
mov
push
sub
lds
sahf
cmpsl
cs
shll
fs
jmp
sahf
mov
xor
mov
cmp
mov
xor
mov
movsl
gs
sub
int3
sub
fisttpll
xchg
mov
inc
push
clc
aaa
dec
adc
or
xchg
push
jle
xor
fsincos
lods
arpl
iret
loopne
jg
mov
jge
pop
push
fisubrl
dec
jbe
and
mov
adc
lret
and
clc
mov
mov
enter
pop
test
cmc
mov
out
push
ss
mov
jnp
pop
xchg
push
push
sub
inc
clc
push
mov
inc
push
push
add
xor
cmc
cmc
cmpsb
cmp
lds
mov
push
xor
sbb
js
jae
lahf
movsb
xor
inc
aam
pop
xchg
nop
adc
mov
lods
cmp
mov
mov
daa
data16
mov
out
cvttps2pi
hlt
popf
pop
mov
int3
outsl
push
mov
fdivrs
push
pop
mov
dec
jge
mov
dec
cli
inc
aaa
fcmovu
repnz
mov
xchg
test
mov
cmp
xchg
scas
movsb
imul
jne
rclb
jg
test
aad
fsubrs
cmp
mov
xchg
pushf
pop
scas
int
push
and
enter
mov
cltd
gs
push
inc
or
jns
orl
cmp
divl
dec
adc
out
push
imul
pushf
mov
inc
fmuls
pop
or
inc
out
pushf
sub
data16
inc
popf
lds
xchg
loope
jns
xchg
push
clc
jbe
xor
stc
cwtl
out
jg
imul
cwtl
clc
lret
or
sub
test
stos
mov
cmp
mov
rclb
and
pusha
rcrb
out
cli
scas
mov
xor
sub
aas
push
fstps
mov
jb
or
mul
dec
sbb
cmp
leave
mov
mov
mov
cmp
xorb
lret
scas
js
out
sbb
push
cmp
xor
jle
inc
push
fmuls
add
mov
inc
rcrb
add
and
pop
adc
sti
xor
mov
sti
push
pop
clc
sub
call
push
std
mov
pushf
repz
jne
sub
idivl
jmp
movl
es
imul
and
jmp
push
pop
xchg
and
cmp
icebp
test
mov
lock
mov
inc
arpl
hlt
pop
mov
pop
les
enter
add
aas
jae
pop
xchg
or
iret
aam
mov
mov
fsubl
test
mov
movsl
scas
int3
push
mov
lds
and
inc
fimuls
stc
pop
mov
or
orl
lcall
lret
mull
test
xchg
faddp
mov
adc
out
sti
pop
outsl
inc
fcoms
lock
or
mov
popa
iret
lock
repz
mov
cli
and
decb
rcll
fwait
push
mov
mov
dec
and
xchg
lea
jg
cmp
mov
andl
jmp
std
fisubs
scas
mov
jnp
jg
push
add
clc
mov
aad
xchg
fisubl
pop
fwait
mov
sbb
xchg
jb
loopne
mov
pop
dec
aad
mov
movsl
cltd
fcoms
jb
push
aad
xchg
loopne
ss
inc
call
dec
call
add
xchg
mov
xor
hlt
sbb
gs
push
and
add
jnp
mov
inc
inc
push
mov
out
add
test
push
jbe
inc
sti
lret
mov
ja
xchg
mov
and
add
and
out
xchg
jnp
cmp
dec
incb
cmp
xchg
sub
movsl
std
stc
sbb
sbb
cmpsb
sarb
jmp
aad
mov
xchg
dec
lret
insb
add
cmc
pop
stos
dec
jb
fstpt
stos
in
lock
add
mov
inc
and
shll
outsl
xor
mov
jae
pop
lret
in
dec
imulb
adcb
cmp
mulb
and
mov
repz
test
test
lods
mov
sub
jbe
pop
aam
outsb
mov
je
cmpsb
jb
insl
ret
lock
push
pop
jp
jne
fadds
add
lcall
popf
mov
mov
cmp
xchg
popa
sbb
movsl
fbld
xor
inc
pop
xchg
out
pop
int3
inc
sub
fidivs
xchg
xchg
popf
or
rcl
and
and
jns
jecxz
cmc
push
stos
ja
fs
stos
les
cmp
push
imul
dec
push
adc
lret
xor
fcmovnb
xchg
sub
mov
lret
shl
addb
and
xchg
cltd
lahf
inc
pop
and
adcb
xchg
out
mov
add
iret
ret
fsubrl
mov
adc
or
or
adc
in
rcrw
aaa
lret
js
jg
xor
push
mov
xchg
stos
pop
inc
xor
addr16
sbb
mov
flds
adc
xor
sub
pop
out
movsl
and
testl
stos
xchg
fcomps
add
sbb
cmc
xchg
pop
shrl
arpl
insl
cmc
cmpsb
jmp
cs
pop
andl
mov
sti
jg
pushf
mov
lret
dec
add
lcall
aad
mov
stc
imul
jp
or
mov
int3
mov
sbb
loop
mov
aam
mov
jle
mov
xchg
fstpt
bound
mov
mov
jae
sti
aam
or
subb
stos
inc
push
cmpsl
loop
dec
push
or
adc
jle
jo
fnstcw
int3
jl
cmp
cld
xchg
xchg
fdivrl
cltd
pop
and
and
lea
negb
mov
mov
add
fstpt
rol
xor
les
or
inc
push
shrb
andb
js
shl
pop
cmpsl
subl
lds
inc
adc
jae
dec
cmpsb
jno
sbb
dec
jb
lds
in
adc
mov
sbb
out
cmp
push
pushl
push
stos
mov
or
or
sbb
fisttpl
xchg
jno
pop
mov
sub
ds
or
xor
fxch
into
cs
decb
xchg
inc
mov
pop
mov
mov
sbb
xlat
mov
arpl
rcll
cli
jmp
ss
pop
mov
sti
mov
pushf
push
lahf
xchg
cmpsb
fmul
rorl
xor
es
ja
fucom
cmpsl
lea
int
loop
add
mov
pop
call
inc
les
rep
cmp
fnstsw
mov
fs
ficoml
inc
jb
enter
jno
arpl
sbb
mov
xchg
scas
stos
cltd
push
and
movsl
mov
stos
les
rcl
jno
lds
inc
sbb
sub
icebp
cmp
sti
das
scas
cmc
das
jg
fs
inc
pusha
dec
inc
ret
imul
enter
stc
rcr
out
inc
hlt
out
cmp
into
xor
cmp
mov
ljmp
and
mov
bound
pop
bound
xchg
push
das
pushf
daa
insb
sbb
mov
addr16
push
sbb
insb
jne
daa
cmp
mov
push
movsl
mov
negl
push
cltd
sbb
sarb
adc
rolb
xor
addb
and
adc
ds
pop
xchg
add
adcb
aad
sbb
or
mov
or
inc
jmp
out
clc
jg
in
sub
mov
into
sarb
fsts
cmp
pop
push
cmp
lret
cli
xor
cmp
movsl
js
jne
subl
andl
pop
or
sub
sub
imul
xchg
call
out
les
cld
mov
jle
add
and
lahf
fisttpl
into
shl
push
add
inc
fwait
dec
pop
enter
sub
iret
pusha
into
mov
hlt
insb
rcrb
int
cmovp
mov
and
and
mov
ret
sbb
repz
xchg
pop
push
mov
out
jl
lret
xchg
jmp
pop
xor
push
int
or
in
loope
pop
popa
mov
jge
cmc
dec
add
push
sbb
icebp
push
and
xor
aad
pop
aas
push
into
ljmp
shlb
sub
push
stos
movsb
sahf
aam
xchg
add
scas
dec
pop
pop
sub
xchg
dec
stc
popf
xchg
or
cltd
mov
decb
inc
test
sarb
stos
ss
push
inc
mov
cmpsl
mov
jae
jmp
or
bound
rclb
fldt
aad
imul
sbb
or
pushf
sub
pop
imul
xlat
mov
repz
push
enter
negb
test
xor
cmp
insb
loop
pushf
out
aad
inc
jl
test
fstpt
sbb
mov
jo
scas
jb
pop
jb
rcrl
mov
mov
xor
insl
stos
push
mov
xor
rorl
les
jecxz
jbe
dec
mov
mov
cld
stc
sub
pop
lahf
push
jae
lods
push
lods
inc
iret
jnp
adc
sbb
movsb
sub
add
popa
shl
arpl
inc
add
pop
xchg
push
dec
pop
ja
fwait
cmpsl
insl
scas
sbb
ds
push
mov
adc
fdivs
dec
decl
mov
push
mov
mov
test
inc
lock
imul
jle
add
pop
dec
push
sbb
cmp
mov
pop
imul
mov
xor
ficompl
icebp
and
jne
adc
fdivrl
insl
fs
pop
cmp
jns
xchg
cmp
pop
and
stos
inc
sbb
leave
xchg
jle
push
jbe
xor
mov
ret
mov
mov
rolb
xor
sbb
dec
cmp
clc
add
add
test
bnd
dec
jmp
aam
or
pop
lock
lcall
fidivrl
movsl
pop
pop
adc
inc
xchg
cltd
push
sbb
xchg
out
sbb
adc
hlt
pusha
out
and
notb
insl
pop
inc
add
dec
mov
sbbl
lock
dec
jbe
xchg
xor
loope
divb
out
outsb
cli
mov
popa
cmc
jbe
jo
mov
sbb
in
mov
lds
and
leave
jno
arpl
jmp
loop
inc
movsb
pop
fdivrs
ret
lds
jbe
push
jecxz
xor
sbb
rolb
es
fcoml
xchg
sub
roll
push
jne
or
lcall
std
in
in
fst
jmp
testl
jne
or
pop
dec
sub
dec
cld
mov
sbb
ljmp
sub
dec
xor
jmp
mov
push
xor
mov
ds
add
mov
sub
xlat
pop
cmp
push
clc
cmp
jb
jne
in
stc
daa
adc
jo
and
aam
mov
jns
divb
xchg
aad
push
sbb
jg
mov
mov
pop
call
jmp
adc
ja
jle
xor
xchg
fnstcw
dec
movsb
jns
and
out
mov
outsb
dec
notb
ss
mov
push
add
or
test
mov
sub
ficompl
sbb
inc
xchg
in
loope
cmp
faddl
lcall
test
mov
out
pop
mov
adc
sub
and
pop
adc
cmp
insl
rcrl
es
cwtl
mov
xlat
mov
lahf
mov
or
xchg
ljmp
cs
xchg
mov
mov
cwtl
popf
mov
nop
sub
ret
in
or
aam
dec
test
xor
jnp
mov
sti
push
mov
sbb
enter
clc
sub
xlat
mov
iret
fists
mov
mov
add
lods
fstps
rol
cltd
movsb
push
pop
sub
sbb
lret
adc
aas
addb
sbb
push
pop
dec
jecxz
push
inc
inc
adc
pop
pop
mov
bound
push
jp
ret
out
cmp
jb
fcomps
push
xchg
sbb
xchg
jae
adc
rolb
test
cmp
insb
mov
stc
add
stc
xchg
adcl
test
jle
cwtl
sbb
inc
mov
mov
cmp
xor
pop
lcall
and
insb
pusha
icebp
sbb
push
out
inc
outsb
pop
dec
add
xchg
stos
call
popa
fwait
in
cmc
daa
mov
add
inc
jge
int
mov
and
lret
sbb
out
xor
cld
int
lahf
and
xor
push
mov
sahf
rcrl
push
pushf
mov
rdmsr
jge
mov
ja
xlat
jg
test
jmp
mov
in
bound
cmp
shl
mov
fs
mov
int3
cltd
and
testb
jecxz
mov
lods
das
xlat
subb
nop
imul
jnp
jge
xchg
mov
out
sub
fisttps
cmp
rcr
sahf
sbb
cmp
jne
xchg
imul
xlat
inc
sti
arpl
test
lods
insl
repnz
jl
jne
or
xor
or
cmp
imul
call
ret
aas
adc
lods
ds
sti
mov
xor
idivb
inc
xchg
xchg
xchg
pop
icebp
push
out
popa
and
xchg
enter
sarl
cltd
movsb
pop
mov
rcll
jb
add
jb
push
loope
ds
or
ret
aaa
jae
pop
lods
push
mov
sub
push
push
push
mov
rcll
mov
xor
lahf
add
lock
test
dec
jle
lock
xchg
and
movsb
lret
mov
les
mov
int
or
int
in
cli
dec
inc
bnd
arpl
lret
outsb
rol
test
adc
dec
adc
pop
ds
loop
movsb
push
mov
sub
mov
mov
daa
lods
adc
pop
sub
inc
mov
iret
sub
dec
push
or
imul
add
push
fadd
push
lret
sub
xchg
andl
adc
xchg
daa
inc
ret
inc
sbb
mov
cltd
dec
xor
test
mov
jecxz
out
sub
mov
mov
out
scas
std
pop
or
pusha
xchg
in
sbb
int
lret
jbe
int
add
sbb
mov
inc
shl
jae
xchg
out
pop
adc
and
out
out
mov
dec
mov
pop
rcr
adc
stc
sub
insl
add
mov
mov
push
and
pusha
rcl
ficoml
add
add
daa
inc
ds
mov
lret
movsl
imull
loop
aam
lock
xchg
bound
enter
xchg
inc
fmull
push
popf
es
sbbb
imul
inc
std
aas
ficoml
fistpl
sbb
add
dec
mov
cmc
scas
into
fistps
pop
xlat
arpl
addb
cmp
movsb
sarb
insl
pop
mov
rclb
dec
mov
mov
mov
decb
xlat
jle
ret
adc
cld
adc
xor
insb
test
adc
sub
aad
fcmovne
jnp
sub
sub
cmp
imul
insl
nop
pop
movsl
and
inc
mov
lret
rcll
add
mov
aaa
mov
push
cmp
pop
or
rcrb
jb
or
xchg
lock
out
popa
and
xchg
adc
pop
xchg
push
sti
jp
loop
jbe
inc
jle
testb
xchg
roll
xlat
mov
mov
mov
xchg
cli
pop
pop
sbb
lods
sub
jecxz
jns
call
add
push
sub
mov
sbb
dec
in
mov
mov
and
mov
mov
jl
inc
mov
into
data16
gs
or
je
xchg
dec
dec
mov
shl
add
inc
mov
aaa
js
cmp
out
mov
push
jb
popf
mov
outsl
xor
sahf
fbstp
dec
hlt
es
pop
mov
sbbb
mov
in
std
push
adcl
push
jae
and
xchg
cmp
xchg
push
sub
popf
cmp
mov
filds
and
and
cmpsl
cmp
push
bound
lret
aas
leave
push
push
add
add
dec
mov
cmp
mov
int
sbb
xlat
stos
pop
xor
mov
leave
gs
cld
test
test
pop
inc
ret
aaa
or
sbb
cmp
xor
xchg
push
pop
lahf
push
xor
sub
mov
jb
push
test
dec
sub
lods
push
pop
inc
mov
mov
ja
dec
aaa
jp
dec
inc
aad
jge
push
popf
dec
pushf
hlt
xchg
test
movsb
inc
cmp
pop
sbb
or
mov
xor
and
xlat
jae
aas
xor
mov
cmp
and
movsb
loop
pop
mov
lea
jne
call
push
xchg
xlat
dec
sarl
and
lods
mov
cmp
imul
rol
mov
shrl
mov
mov
jecxz
in
add
leave
repz
pop
dec
imul
mov
fcmovbe
push
test
sbb
adc
pop
jbe
add
add
daa
sbb
sub
scas
xchg
or
xchg
hlt
jp
stos
push
pop
in
cmp
cmp
loope
aam
pop
mov
mov
lods
lret
mov
lret
and
into
pop
mov
std
inc
pop
test
inc
mov
lods
cli
pop
scas
mov
mov
and
cmp
leave
std
pop
out
ljmp
rcrl
pop
inc
sbb
inc
cld
push
cmpsb
xchg
jno
ds
mov
test
incl
mov
dec
test
mov
divb
and
movsb
adc
sub
pop
xor
xor
repnz
cmp
insb
mov
mov
mov
mov
sub
mov
test
push
adc
jge
adc
mov
cmp
mov
xor
push
pop
jns
insb
divl
addr16
adc
arpl
mov
xchg
icebp
xchg
mov
jae
repz
cmp
adc
jbe
mov
pop
dec
out
in
shrl
std
clc
mov
xor
cmp
mov
sub
and
and
aad
scas
mov
stc
pop
rcl
outsb
xchg
xchg
addr16
ja
dec
cmp
sub
aas
stos
lods
push
mov
push
andb
mov
mov
inc
jbe
repnz
dec
in
adc
ja
in
dec
cmp
sbb
cld
icebp
fcoml
jnp
stc
and
or
mov
jg
inc
ret
cld
or
out
sub
pop
push
mov
jne
push
cmp
jle
rorb
xchg
and
ljmp
push
js
insb
or
adc
or
icebp
inc
mov
mov
pop
add
cltd
int3
repnz
inc
gs
jno
xlat
inc
mov
bound
aaa
pop
bound
mov
push
test
addr16
ljmp
pop
ss
shll
lods
dec
push
mov
js
test
loopne
push
add
xchg
inc
je
sbb
sbb
and
xbegin
test
push
xchg
add
and
insb
push
pop
int3
data16
mov
repz
sbb
fisttpll
sahf
sbb
adc
push
lods
jg
mov
das
repz
or
sub
dec
mov
repnz
mov
pop
addr16
ret
movsl
push
leave
ljmp
push
mov
jge
hlt
insl
rcrb
fisttps
test
push
mov
movsl
lods
pop
ret
sar
xor
xor
or
mov
jbe
in
and
lcall
xor
aad
insl
dec
and
imul
xor
es
enter
dec
xor
sbb
cmp
push
div
sub
jl
inc
push
out
xchg
xchg
not
into
jmp
das
and
insl
or
or
xor
adc
dec
scas
add
inc
cli
jp
fmull
pop
inc
mov
and
lea
pop
fdiv
adc
insb
lret
clc
push
mov
mov
push
int3
xor
sub
mov
xor
imul
sub
mov
ret
inc
subl
data16
cmp
adc
arpl
pushf
push
push
xor
enter
jmp
jmp
pop
inc
movsl
cmpsb
cli
sub
mov
pop
in
push
int3
inc
push
mov
jnp
aaa
hlt
aam
mov
jb
enter
and
mov
stos
mov
into
jecxz
inc
pop
mov
jmp
mov
std
lods
add
inc
and
in
roll
mov
dec
or
js
adc
out
dec
addb
fsts
imulb
push
adc
jl
out
push
loope
cmp
mov
cwtl
dec
push
testl
adc
push
out
ret
or
or
inc
sub
jge
mov
xlat
push
das
aas
pop
jne
xchg
xor
mov
inc
sub
xchg
sbb
mov
mov
mov
jbe
sub
xor
push
mov
mov
xor
or
fmul
in
icebp
or
inc
pop
jecxz
shlb
js
ss
cwtl
xchg
rcll
inc
loop
push
inc
pop
jl
js
pop
and
push
lods
cmp
mov
and
fsub
sub
push
into
popf
or
ja
mov
jl
je
xor
aas
xchg
dec
mov
mov
pop
mov
push
aas
mov
dec
xchg
popa
inc
or
xchg
div
insb
fs
and
cld
dec
pop
cmc
sbb
xor
sbb
inc
xlat
in
push
add
jno
dec
xor
mov
cmp
bnd
aad
scas
cmp
mov
mov
and
pusha
or
xchg
clc
outsb
mov
mov
mov
xor
or
cs
lahf
in
mov
xchg
inc
mov
scas
fidivl
stos
ss
movsl
lods
add
roll
adc
outsl
jns
mov
call
cmp
pop
mov
dec
sbb
pushf
jne
dec
pop
add
ds
cli
into
aam
fldcw
repnz
sub
frstor
xor
nop
rcrl
or
pop
mov
subb
push
mov
inc
in
push
mov
mov
jne
mov
fdivrl
mov
ljmp
cmpsl
fldt
jmp
fbld
not
lret
sbb
leave
rorl
pop
gs
push
cld
add
xor
loop
push
sti
jo
adc
mov
or
adc
push
mov
xor
sti
inc
hlt
call
in
sar
pop
lret
and
sbb
loope
movsb
cmp
push
lcall
add
push
loop
in
lret
sub
jp
lods
insl
sub
stos
jge,pn
pop
inc
cmpsb
cmp
mov
add
push
push
insl
mov
push
pushf
jp
mov
test
call
cld
mov
cmp
clc
or
imul
popf
fwait
xchg
popa
lcall
lods
outsb
negb
pop
add
pop
pop
outsb
mov
pop
scas
pushf
hlt
sbb
popf
cmp
mov
popa
or
inc
imul
push
std
movsb
mov
cs
ficomps
je
push
mov
popf
mov
sti
push
sbb
push
xchg
dec
test
push
in
outsl
xchg
push
scas
loop
cmc
mov
out
inc
xor
dec
das
lds
mov
sub
ljmp
or
or
insl
in
dec
push
cwtl
sbb
enter
ljmp
dec
push
outsb
adc
repnz
pop
dec
js
cmpsl
test
aam
mov
addr16
sub
insl
jle
sbb
adc
pop
ss
int
int
stos
dec
xor
xlat
incb
addr16
add
push
pop
add
xor
data16
jbe
cmpsb
mov
adc
cmpsl
fisubl
sub
sbb
and
pop
add
and
mov
inc
adc
aad
mov
cmp
aaa
inc
in
shr
pop
lret
dec
ja
jecxz
mov
jle
out
shrl
in
mov
decb
sbb
or
pushf
bound
out
fsubrs
sub
lret
fldpi
notb
imul
dec
jne
and
adc
xchg
jecxz
and
aaa
push
test
sub
xor
adc
lcall
pusha
push
loopw,pt
stos
movsl
cmp
jg
mov
lret
mov
int3
aam
aam
imull
add
fidivs
pop
sbb
push
and
in
gs
mov
or
mov
sbb
data16
cmp
lock
cld
iret
lcall
sahf
push
dec
bound
out
or
and
mov
das
add
pop
jo
enter
adc
leave
fcompl
inc
mov
test
xchg
ds
sbb
pop
call
pop
inc
outsb
cltd
imul
lock
and
imul
mov
or
pusha
cmp
add
stos
out
rcl
push
cmc
fistpl
gs
in
ret
dec
push
cs
adc
pop
add
imul
mov
out
sub
sbb
pop
sbbb
leave
jge
icebp
clc
nop
iret
test
jns
adc
out
stos
dec
repz
cmp
sbb
lcall
mov
adc
push
push
sbb
dec
test
cmp
cmp
fsubrs
fcomip
gs
fisttpl
cmp
inc
ret
hlt
cmp
fs
dec
sbb
jg
fsubr
mov
sarb
loopne
dec
mov
negl
gs
or
fcomps
inc
stc
mov
out
push
cmp
in
cmp
shr
cmp
dec
inc
xchg
ficoml
inc
push
movsl
add
inc
and
nop
pushf
sub
outsl
cmc
dec
inc
bound
push
into
dec
testl
out
in
aam
into
jmp
mov
andl
ja
shrb
int3
aaa
sub
adc
stc
gs
add
cmpsb
and
push
rol
mov
mov
pop
mov
xlat
js
inc
jp
std
pop
stos
insl
loopne
and
cs
jbe
xor
popa
adc
and
in
iret
sbb
sbb
push
bound
int
mov
pop
movsb
lahf
or
loope
sbb
adc
movsl
xchg
mov
mov
aas
cmp
cli
xchg
inc
fcmovne
dec
adc
inc
cmp
mov
adc
lret
jno
mov
cmpsb
faddl
jnp
outsb
cmp
repnz
jp
jecxz
shl
lcall
push
sahf
es
xor
aaa
add
pop
cli
cs
sarl
xor
ret
or
ret
add
xchg
jmp
in
sbb
pop
testl
dec
cmp
wbinvd
sahf
xchg
push
int
or
es
mov
stos
inc
xchg
xchg
loopne
xchg
inc
loop
leave
sbb
push
dec
es
fcmovnu
jne
nop
push
out
lds
pop
rcl
dec
adc
add
cs
jmp
adc
rclb
rcrb
les
pop
and
sub
mov
movsb
cmpsl
cmpsb
sahf
lods
int3
adc
lret
fmuls
pusha
pop
add
or
es
rcll
xchg
add
enter
cmp
pop
adc
dec
cmpl
in
pop
jle
les
lret
mov
cmp
lahf
shrb
pop
sub
lds
cmp
dec
pop
xchg
lret
mov
push
ret
add
mov
dec
js
cmp
ret
dec
dec
call
data16
repz
arpl
insb
push
cwtl
adc
mov
push
pop
ret
in
aam
repnz
push
iret
xor
pop
dec
mov
cmp
sub
add
dec
lea
pop
std
mov
xor
js
xor
xor
jae
mov
adcl
int
push
in
xor
out
rolb
gs
orb
mov
push
pop
ljmp
or
push
cltd
lret
jmp
jecxz
and
sbb
jl
xor
pop
mov
mov
cmp
lret
pusha
test
mov
lods
setge
push
pop
int3
or
aaa
cmp
push
inc
repnz
add
cmpsl
dec
int
pop
in
mov
pushl
not
pop
out
imul
cmp
call
mov
imul
adc
cmpsl
jo
pop
pushf
lahf
outsl
nop
cmpsl
sbb
mov
xor
mov
pop
pop
xchg
jge
shrl
in
jne
mov
cli
scas
and
pop
shl
loopne
in
repz
mov
push
insl
call
out
xchg
shrl
les
out
pop
subb
mov
sahf
pop
nop
cmp
out
lret
stc
lods
insb
xor
jge
arpl
and
adc
aas
sub
mov
mov
idivl
out
mov
inc
xchg
and
leave
sahf
rcrl
mov
iret
mov
and
es
lods
jmp
xchg
mov
cmpsl
jo
outsb
sti
loop
cmpsb
jmp
les
jge
test
and
adc
xor
test
xor
fdivrl
jb
xlat
lock
mov
pop
mov
fsubs
mov
rcrb
xchg
lods
adc
lds
repz
sbb
rol
cwtl
mov
jle
aad
add
std
xor
vpsllw
rcrl
xchg
out
push
sbb
xchg
adcb
cmp
in
arpl
sub
lret
sub
ss
test
cmpsl
mov
lock
out
aaa
push
cld
adc
ja
leave
xchg
stos
xchg
or
mov
xchg
jg
xor
xor
fldt
mov
es
cmp
hlt
cld
push
xor
lret
std
frstor
ret
dec
push
dec
sti
repnz
outsl
dec
sub
mov
mov
mov
lea
int3
xchg
shll
push
mov
mov
mov
fcompl
test
xlat
in
test
cvtdq2ps
pop
outsl
or
inc
mov
fmul
xor
mov
lock
push
rcr
in
mov
nop
dec
mov
test
mov
push
or
negb
pop
xchg
cwtl
adc
jne
xchg
imul
lds
or
int3
scas
jo
cwtl
sahf
movsl
aas
inc
clc
pop
push
sub
push
inc
scas
xchg
push
inc
enter
cmpsb
xor
mov
and
add
ds
mov
jae
arpl
mov
inc
sub
mov
push
das
cmp
mov
mov
push
jle
cvtps2pd
je
lea
mov
adc
aas
xchg
dec
pop
loop
sbb
sbb
cmc
xchg
daa
shl
out
imul
jg
sub
loopne
sub
imul
jno
pop
add
movsl
cmp
push
mov
sbb
push
out
pop
ss
mov
sbb
or
es
dec
gs
mov
or
and
into
int3
cltd
mov
inc
dec
arpl
lds
test
les
or
gs
cmp
std
xorb
cmp
mov
or
out
enter
lods
fists
cmp
xchg
dec
mov
or
icebp
cmp
adc
and
xchg
and
adc
xchg
ret
shl
dec
or
dec
not
lods
cmc
imul
sub
clc
andb
cs
ljmp
push
or
aaa
sti
hlt
insb
idivl
das
shll
leave
shrb
mov
push
mov
negl
pusha
mov
mov
and
xchg
stos
clc
fisttpll
in
insb
pop
inc
xchg
aam
or
outsl
inc
loopne
popa
aam
pusha
xor
lods
jecxz
imul
shr
in
lahf
pop
stos
shrb
stc
call
lcall
das
rcl
jbe
test
insl
mov
pushf
mov
sbb
inc
and
popf
fwait
xchg
add
pop
imul
sbbb
sbb
inc
pushf
and
sbb
in
add
push
pop
scas
nop
jae
sarb
arpl
in
js
xor
jbe
pop
mov
cli
xor
call
xchg
adc
daa
adc
inc
push
nop
dec
inc
popa
ret
push
or
push
xchg
rorb
ljmp
push
adc
lret
insb
mov
sbb
out
jg
imull
in
lods
mov
fcmovbe
fdiv
flds
xchg
into
sbbl
mov
mov
add
lods
jns
adc
mov
ret
sbb
imul
pop
popf
mov
jmp
jns
fdivl
outsb
jecxz
push
xchg
mov
sbb
mov
cli
insb
mov
test
fcomps
push
pop
or
pop
lods
jno
inc
clc
mov
lret
loop
xchg
xor
xor
or
pop
in
cld
cs
inc
dec
sub
add
add
xchg
mull
xchg
add
adcl
adc
mov
push
jnp
fs
and
cmpsl
ja
dec
leave
jb
lea
ret
jle
and
jmp
mov
jns
fdivr
cmp
mov
xchg
sbb
adc
inc
imul
push
not
into
movsb
ss
orl
adc
sarl
cmp
push
push
mov
mov
cli
jg
xor
or
xor
jno
inc
fbld
push
xchg
pop
add
dec
and
push
ret
imul
jbe
adc
dec
test
fnstenv
xchg
iret
out
jge
mov
popf
adc
sub
mov
lret
mov
push
push
xchg
and
imul
bnd
xor
or
fs
dec
lcall
jecxz
ret
mov
fisubrl
mov
sbb
pop
leave
cmpsb
cmp
adc
sbb
hlt
pop
sbb
lods
push
xchg
mov
int3
inc
daa
bound
sub
xchg
push
ds
enter
je
lock
icebp
pusha
movsl
push
mov
rolb
jne
push
mov
mov
inc
fsubrp
imul
daa
adc
cmp
sti
mov
repnz
dec
xchg
nop
js
addr16
push
jg
in
and
pop
cltd
lock
push
xchg
mov
dec
out
pop
dec
and
fisubrl
adc
scas
aam
xchg
xchg
jb
pop
dec
sbb
adc
cwtl
lcall
xor
jmp
push
movsl
cld
fs
fwait
test
call
xchg
dec
repz
lret
jno
and
xchg
sub
ror
sub
mov
scas
cmp
adcl
jmp
sub
sub
lods
and
scas
rclw
imul
scas
pop
jnp
jecxz
enter
stos
repz
fcompp
stos
inc
pushl
or
jno
in
xor
cwtl
enter
aam
push
pop
push
jb
push
notb
loope
add
loopne
sbb
jmp
push
and
sub
xor
in
shll
jns
mov
cmpb
orb
sbb
imull
mov
test
in
jmp
xchg
pop
mov
test
lret
insb
lcall
jl
push
in
push
sbb
inc
xchg
rcrl
or
js
ja
xor
or
cltd
xlat
pop
ja
in
push
jbe
adc
loopne
ja
xchg
fdivs
clc
sub
pop
adc
add
stc
cmp
in
xor
mov
xchg
mov
add
adc
push
cmp
ret
lret
notl
sarl
das
cmp
test
xor
inc
scas
mov
aas
inc
lcall
por
test
pop
fimuls
cmpsl
js
test
jae
and
mov
mov
ret
xchg
xchg
mov
js
push
adc
add
outsb
lahf
sbb
addr16
push
sbb
pusha
mov
add
aas
insw
jo
adc
mov
mov
test
jne
popa
ds
push
adc
and
mov
jnp
push
lods
out
cmp
push
jno
into
xor
jb
jle
rorl
mov
add
pop
jae
data16
mov
push
rcl
mov
test
push
shlb
fcomps
test
push
incl
loope
repz
pop
inc
es
cltd
in
in
ljmp
inc
es
imul
push
repnz
addl
sbb
insb
insl
and
cld
cmpsb
and
daa
or
mov
cmp
std
sbb
add
orb
push
dec
ss
and
or
scas
dec
sbb
jbe
test
test
push
mov
rolb
lcall
add
mov
mov
jle
inc
xchg
jns
test
jge
push
push
outsl
iret
aaa
aad
mov
cmp
fwait
mov
arpl
dec
and
lds
xor
lock
cmp
in
and
cmp
insl
cltd
mov
jae
mov
je
mov
xchg
out
outsl
inc
dec
enter
outsl
dec
push
cld
pop
mov
test
mov
lods
jecxz
rolb
mov
sbb
stc
enter
outsl
test
jnp
or
mov
mov
pushf
cmpsl
jnp
xor
jne
push
test
push
out
xor
push
repz
dec
test
xchg
jo
add
cmp
adc
or
inc
aas
scas
lock
sbb
shl
mulb
pop
loopne
cmpsb
out
nop
inc
cmc
cli
aam
add
jno
repz
or
imul
js
and
sub
icebp
ds
mulb
mov
rcr
bound
push
xchg
xchg
lds
incb
std
fwait
sbb
jo
cli
jg
mov
sbb
mov
mov
dec
loopne
cmpsb
jnp
scas
and
aaa
jb
dec
out
adc
mov
iret
fsubs
hlt
xchg
and
sbb
repz
jge
xchg
fs
cs
icebp
push
or
addb
push
mov
lcall
mov
insl
cli
jp
pop
fisubrl
loopne
cmc
aaa
xor
daa
hlt
popa
insb
stos
in
sbb
lret
add
add
jl
cmp
scas
pop
push
inc
push
cmp
mov
adc
pop
test
test
add
repz
adc
ret
fstps
inc
mov
lods
adc
inc
or
lret
mov
lahf
xchg
or
int3
sbb
ret
xor
movsb
inc
push
cmpsb
or
repz
jae
adc
mov
movsb
addr16
mov
insb
in
and
mov
lea
inc
xor
test
xorl
cmpsb
inc
inc
adc
xchg
repz
mov
xor
add
ds
outsl
stc
inc
adc
pusha
add
sbb
fsubrl
adc
in
ja
add
dec
push
mov
push
cli
jne
cwtl
and
fisubl
hlt
cmc
push
lahf
sub
push
fdivrs
sbb
stos
mov
xor
sub
cmpsb
xchg
les
jle
xchg
iret
daa
sub
testb
mov
jbe
mov
test
ss
mov
cmpsb
adc
sbb
inc
xchg
and
cmpsl
out
pusha
push
fcoms
js
adc
mov
aad
sbb
or
cmp
pop
pushf
pop
out
test
std
js
rcl
in
xchg
inc
loop
mov
jne
inc
lret
xor
cmc
pop
dec
xor
into
lret
hlt
jmp
sub
cmc
ss
fstps
sbb
sub
cs
ret
pop
nop
aam
in
rcrb
mov
clc
mov
mov
cs
dec
icebp
sub
in
push
sahf
test
xor
adc
cmp
jg
xchg
adc
cmpsb
aas
mov
pop
divl
and
pop
xor
dec
dec
pop
xlat
mov
int
inc
call
lcall
fnstenv
cmp
sub
popa
outsl
or
push
movsl
loopne
pop
dec
cmp
mov
sti
jmp
iret
xor
adc
mov
in
cmp
aas
jno
sarb
std
mov
leave
pusha
push
leave
repz
scas
imul
sbb
lcall
adc
outsl
adc
mov
mov
shlb
pop
pusha
push
jo
pop
mov
ror
rclb
loop
repz
insb
fidivs
and
dec
xchg
mov
out
dec
xor
xchg
rcl
std
stos
mov
rcll
xor
in
fwait
pushf
rclb
in
push
aad
ljmp
inc
push
stc
bound
and
lods
ret
ja
test
xor
xchg
test
xchg
pop
or
push
out
pop
in
xchg
out
imul
lds
or
out
inc
shll
xor
lods
jno
add
orl
jmp
mov
ljmp
fwait
clc
mov
leave
inc
ljmp
xor
lds
pop
adc
push
jmp
mov
inc
add
sub
fdivp
dec
std
ljmp
lds
mov
push
rolb
lret
repz
or
sbb
sbb
mov
hlt
mov
sbb
cmp
cmpsl
shrb
or
sbb
cld
dec
add
sbb
sbb
aad
jns
sbb
inc
cmp
jbe
xor
pop
imul
adc
ljmp
lock
outsb
sub
ret
jo
jbe
repz
cmp
cmp
lret
cmp
ret
roll
sti
dec
mov
dec
xor
mov
bound
cmpsl
xor
iret
sti
pop
adc
jns
nop
mov
fsubrs
mov
ret
cld
aam
cmc
ret
mov
rcll
stos
mov
repz
clc
cmp
mov
test
push
or
jae
inc
mov
jg
call
jg
cmpsb
aad
loop
outsb
rcrl
mov
call
adc
in
mov
imul
sub
mov
xchg
roll
xchg
fisttpll
inc
mov
or
jg
lret
insl
xor
jne
or
jnp
or
xchg
cwtl
jp
arpl
gs
movsl
dec
and
mov
cmpsl
dec
rcl
nop
out
ss
fcoms
je
add
jnp
pop
sbb
inc
imul
push
daa
mov
cmp
gs
push
mov
int
fildl
sbb
or
or
inc
into
fistps
mov
out
adc
orb
pop
jg
int
mov
add
insl
add
adc
insb
and
jmp
mov
sub
pop
loop
notb
push
sahf
movsl
jp
jno
pop
imulb
xchg
pop
out
fcompl
repz
or
adc
fwait
inc
add
inc
pop
jae
xchg
and
sub
lea
leave
loop
lods
test
pushf
aas
adc
add
pop
add
inc
ret
pop
ret
add
push
aas
mov
in
mov
push
cld
jb
mov
add
ss
push
xchg
test
push
inc
jae
loopne
dec
int3
mov
icebp
in
push
xor
enter
movsl
mov
test
jb
repz
cmc
dec
lret
iret
dec
dec
add
mov
adc
mov
sbb
fistps
mov
mov
outsl
out
dec
shlb
mov
adc
mov
mov
out
filds
aad
sub
data16
pop
inc
xor
cld
adc
insb
inc
xor
roll
sub
ret
je
outsb
push
and
lahf
cmpl
inc
mov
test
adc
data16
les
jle
das
xor
les
sbbl
lods
or
adc
inc
inc
mov
pop
adc
pop
jne
iret
out
out
fsqrt
test
mov
mov
fsubr
mov
ds
mov
inc
inc
filds
aas
sbb
shrl
rol
data16
jecxz
js
fidivs
push
pop
in
cwtl
testb
ficomps
jecxz
cmp
stc
sahf
sub
pop
shll
mov
std
mov
xchg
jmp
pop
add
inc
mov
jmp
jo
mulb
mov
pusha
push
xchg
hlt
ds
mov
bound
sahf
or
xor
les
adc
clc
mov
inc
push
lret
jp
add
shl
push
and
cmpsl
aas
fcom
mov
insb
and
push
insl
das
repz
jnp
jnp
loop
or
inc
scas
jecxz
inc
aaa
cmc
test
stc
adc
in
data16
jmp
xor
mov
lds
pop
or
xor
shlb
push
es
scas
ja
lahf
cmp
nop
out
repz
xchg
xor
push
jnp
add
push
movsl
mov
jo
or
dec
pop
in
pop
lock
scas
cmp
vorps
mov
int
out
adc
loope
adc
into
adc
hlt
mov
push
fstpl
push
scas
push
mov
jle
add
in
jae
testl
mov
and
test
clc
dec
fsubl
arpl
mov
imul
push
jbe
mov
lods
dec
mov
cmp
push
or
test
xchg
xchg
sbb
xchg
push
and
test
outsb
scas
push
arpl
sub
inc
and
mov
cmp
outsl
xchg
sbbb
ljmp
dec
mov
xchg
into
pop
mov
data16
push
loope
mov
roll
fcmovne
push
dec
sub
ja
lds
lahf
ficompl
jne
cmp
std
popa
sub
scas
mov
sbb
sti
in
fcomi
push
and
stos
sbb
faddl
inc
fsubrs
popf
test
out
shld
outsl
jbe
lods
jne
lods
mov
sub
aas
xor
cli
pop
pushf
mov
sbb
mov
sub
movsl
lcall
mov
add
and
ds
jge
sarl
movsb
pushf
iret
add
movsl
cs
das
mov
pop
sbb
popa
je
int3
xchg
out
cmpl
lds
jl
cmp
hlt
mov
out
pushf
push
dec
into
jo
lret
or
mov
sub
sub
sub
in
mov
rclb
ss
cmpsb
xchg
stos
fstpl
sub
rcr
xchg
sub
test
out
sti
pop
xchg
fs
adc
add
dec
jmp
cmp
mov
inc
fs
jle
fsubs
xor
xor
test
pop
into
mov
pop
mov
sbb
add
outsl
mov
ljmp
in
scas
push
or
cs
enter
int
std
rol
shll
mov
stos
scas
hlt
cmp
mov
out
ljmp
lods
mov
inc
add
je
or
add
jb
mov
xor
call
jns
xchg
cmpl
ljmp
stc
xchg
cs
mov
xor
mov
mov
shr
or
pop
dec
inc
pushf
cld
test
cmp
xchg
mov
mov
jnp
lcall
insb
stos
pop
mov
and
mov
or
scas
movsl
insl
lock
sarb
lds
das
add
and
xor
xchg
sbb
loope
fucompp
mov
dec
out
fnstcw
sbb
inc
jo
push
imul
iret
inc
push
lods
and
ja
push
shr
mov
inc
mov
mov
adc
sahf
hlt
repz
dec
inc
cmc
fcoms
cmp
not
test
clc
out
xor
pushf
push
lea
or
pushf
mov
push
sub
lret
pop
jg
fidivrs
add
xor
mov
inc
adc
mov
imul
push
push
sbbl
pop
mov
inc
scas
mov
outsl
clc
sti
ds
cmpsb
jae
in
inc
pop
insl
cmpsl
fsubrp
jp
jae
mov
leave
jno
and
insb
pop
cmp
cmpsl
das
pop
push
xlat
jp
xchg
or
adc
inc
add
add
lret
fistl
dec
or
les
mov
xchg
in
fdiv
rorb
cld
mov
mov
sahf
pop
xchg
ret
inc
fcoms
enter
addr16
fwait
or
fdiv
or
sbb
pop
flds
daa
add
mov
jmp
lods
rcll
dec
rcll
jl
sbb
and
jbe
xchg
mov
cmp
sbb
clc
int3
or
rcll
fdiv
bound
popf
stos
int3
ljmp
cli
adc
push
push
out
leave
aas
fisttpl
jmp
mov
or
shrl
jge
pushf
push
andb
lahf
shrb
add
jecxz
outsb
push
je
testb
in
push
mov
fdivrl
mov
mov
ret
ret
xchg
sub
dec
aam
xor
push
pop
fstpt
fcomi
test
or
or
out
out
lret
push
rcl
test
jg
cmp
sarb
das
inc
or
push
mov
iret
adc
es
aam
inc
inc
fadd
lcall
iret
mov
push
cmp
icebp
lods
clc
es
std
and
shl
mov
xchg
push
lcall
cmp
loope
push
and
out
ss
push
xchg
rep
fdivs
adc
pop
add
cs
add
movsb
mov
clc
daa
cmp
xlat
add
test
mov
cmpsb
inc
jg
jno
mov
inc
inc
rclb
push
pushf
bound
and
lret
icebp
push
dec
call
loopne
fucom
push
in
test
pop
inc
inc
orl
orl
sbbl
push
pop
xchg
scas
lret
add
cmp
dec
test
sub
sbb
xchg
inc
shlb
dec
arpl
dec
hlt
inc
int
sub
or
mov
push
je
es
and
dec
cs
push
adc
jne
dec
pop
gs
out
and
movsb
add
sbb
fucomip
fcmovnu
sub
shlb
xor
sbb
sbb
xchg
jns
dec
out
sbb
mov
xchg
and
mov
cmpsb
jo
dec
cltd
lods
fistl
negl
jp
not
mov
imul
xor
dec
or
xlat
mov
jno
sub
lcall
jbe
dec
mov
jnp
testl
aas
push
inc
out
in
call
pusha
sub
stc
jmp
push
repnz
mov
mov
test
mov
push
dec
clc
ljmp
ljmp
jle
add
lds
mov
mull
cli
jae
push
fdivl
and
imul
aam
mov
adc
push
or
in
call
pop
iret
jns
leave
push
cltd
xchg
pop
fwait
imul
bound
inc
stos
cltd
nop
add
in
shlb
das
push
adc
pop
xor
add
shll
push
add
inc
mov
negl
decb
and
dec
add
int
inc
cwtl
jge
sbb
add
mov
cwtl
int
das
call
fsubrs
mull
lret
push
jp
cmpsl
je
mov
inc
fld1
sub
cmpsl
cmp
push
mov
loop
push
dec
add
in
adc
push
adc
jmp
dec
test
test
xchg
js
xor
fidivl
cwtl
pop
and
add
sahf
aas
mov
jb
ss
dec
mov
nop
mull
pop
lea
push
ds
rclb
nop
add
xchg
mov
insl
xor
test
test
inc
call
scas
pop
pushf
pop
pop
mov
ret
inc
fld
push
orb
push
push
ds
pushf
mov
pop
pop
loopne
or
cmp
adc
pop
idivb
int3
push
xchg
fisttpll
mov
popa
lahf
xchg
mov
and
stc
enter
mov
mov
shll
push
mov
mov
enter
mov
inc
out
addr16
mov
pop
mov
xor
movsb
out
aas
xor
out
xor
xchg
ret
ret
jo
sbb
cmp
dec
in
pop
dec
add
adc
shlb
arpl
jg
fstps
mov
inc
in
dec
fstpl
pop
stc
int3
cwtl
cmpsb
pop
flds
movl
push
rolb
ret
inc
mov
imul
lahf
loop
pushf
mov
out
addr16
ljmpw
test
cs
aaa
scas
and
out
jge
ljmp
je
xchg
mov
inc
dec
pop
sub
jno
jae
jmp
aas
mov
jl
jle
ret
adc
nop
push
aas
pop
rcrb
ret
inc
pop
and
xchg
xor
ret
js
sbb
xor
jno
jge
xor
sti
iret
xlat
xlat
aaa
sbb
pusha
inc
jo
into
cs
pusha
mov
xchg
out
dec
inc
in
movsb
xor
data16
inc
test
adc
or
repnz
sub
mov
aas
or
rclb
inc
lea
pusha
lock
jne
adc
inc
mov
push
mov
lcall
addr16
adc
in
fidivrl
push
out
pop
push
push
xor
inc
in
sub
mov
dec
int3
mov
jb
mov
lea
pop
lret
fmul
repnz
adc
in
rcr
nop
mov
sub
fcomps
roll
out
orl
xchg
movsl
ja
cltd
notb
rcrl
sub
and
dec
lret
push
xor
gs
ret
orb
push
js
cs
cmp
nop
mov
dec
pop
mov
inc
dec
int
jmp
add
dec
ss
or
jle
cmp
add
ret
fbstp
clc
sub
jmp
mov
js
cmpsb
pop
jae
sub
in
repz
pop
inc
je
pop
addr16
fists
mov
mov
int
loope
cmp
mov
aas
call
and
ja
jecxz
xor
push
cmpsl
out
push
cmpsb
inc
add
lret
inc
aad
jnp
mov
ficoms
mov
lret
or
cmp
or
dec
jae
xchg
push
cmc
and
push
lahf
mov
repz
xchg
cmp
sub
mov
sub
xchg
jne
push
mov
jmp
push
imul
or
or
sahf
sbb
push
lcall
movsl
or
mov
shr
ficomps
loope
jbe
jp
xchg
xorb
adc
dec
test
es
sti
iret
lds
data16
fisubrs
fisubl
loopne
push
loopne
es
popa
aam
inc
inc
jno
mov
aad
cmp
mov
or
push
mov
leave
insl
ret
jmp
push
mov
mov
pusha
push
sbb
mov
ss
push
dec
negb
mov
lock
and
popa
ror
pmaxsw
rcrl
sub
lock
lret
mov
into
sahf
div
sub
int
push
xchg
clc
mov
cmc
mov
mov
fwait
loop
flds
stos
lahf
sarl
aas
lock
ffree
ret
ds
int3
mov
cmp
cmp
jp
jo
push
mov
mov
cwtl
std
push
fidivrs
pop
cmpsb
mov
incl
inc
xchg
push
adc
pop
dec
and
xchg
push
xchg
jae
pushf
insl
and
push
cmp
pushf
adc
inc
adc
imul
loop
jg
add
or
into
add
pop
lret
jno
jnp
pop
mov
ja
dec
sub
cli
dec
lock
rcll
fwait
or
out
or
pop
sub
and
loopne
sbbl
mov
lds
and
call
divl
hlt
pusha
jg
pop
mov
popa
lds
out
es
or
mov
loope
mov
dec
cmpsl
gs
int
dec
popf
pop
ds
in
pop
es
test
ret
push
cmpsl
pop
mov
jecxz
testl
inc
dec
dec
pop
push
mov
daa
test
adc
cld
jnp
xor
mov
mov
jnp
push
push
jle
cmp
adc
xchg
xor
xchg
jecxz
xchg
add
gs
xor
leave
cltd
jecxz
push
pop
jno
lret
xlat
push
xchg
inc
pop
mov
outsb
stc
aas
cs
scas
mov
xor
pop
inc
flds
or
sub
lahf
ret
and
rcll
in
sti
xor
lcall
iret
mov
and
aad
mov
jg
or
divb
jne
insl
nop
push
inc
repnz
mov
jmp
inc
xorl
cwtl
loopne
jbe
xchg
cmp
push
fcom
pop
fadd
sbb
jbe
add
inc
int3
pop
xlat
xlat
movsl
jo
fdivrl
xchg
je
push
push
test
xchg
fadd
inc
in
inc
insl
idivb
ss
xchg
shll
add
push
or
lahf
shl
pop
mov
stos
aad
stos
std
push
inc
xchg
mov
stc
idivl
inc
aad
and
scas
push
mov
imul
mov
fs
enter
data16
in
and
std
and
ficoml
les
push
xor
enter
and
sti
dec
xor
and
adc
pop
mov
add
outsl
jae
and
lcall
adc
mov
cltd
jns
dec
jnp
loopne
or
movsb
push
dec
xor
pop
push
jge
add
jb
pop
out
out
push
sbb
pop
sub
inc
push
pop
sub
jb
int3
daa
cmp
out
ss
xchg
les
scas
mov
jbe
adcl
add
jo
fcoml
mov
stos
jno
jg
sarl
rorl
mov
lret
xlat
clc
add
fs
mov
movsl
mov
push
jnp
gs
jg
test
mov
xor
sub
mov
add
and
cli
addr16
and
test
xlat
dec
std
loopne
sbb
out
add
lods
rorb
subb
ror
or
add
pop
xorl
fwait
ret
xchg
arpl
push
xchg
int3
sub
mov
test
push
arpl
dec
dec
mov
and
sub
pop
mov
fmuls
dec
lods
mov
outsl
lock
jns
push
loop
cmc
js
mov
popa
and
pop
xchg
rclb
lcall
sub
or
mov
and
loop
jmp
add
push
jb
mov
lcall
sbbb
push
aaa
pushf
sbb
inc
inc
mov
push
cmpsb
xchg
mov
rcrb
push
adc
inc
mov
mov
movsl
xchg
mov
fucomp
jno
mov
mov
pop
push
test
xor
fcomps
aad
fdivrs
or
pop
ss
xor
sub
cmp
jmp
jle
xor
inc
dec
cmpsb
dec
sahf
decl
mov
pop
jns
mov
hlt
aaa
sub
iret
cwtl
xchg
pusha
or
bswap
or
mov
inc
inc
repnz
pop
ret
jp
sbb
in
js
out
jo
xchg
enter
push
push
or
outsb
adc
out
stos
jecxz
pop
insb
jle
sub
lods
stos
fwait
pop
aam
inc
pop
jl
jmp
subl
in
pop
pop
in
fdivrs
adc
push
mov
add
xchg
push
cmp
pop
or
subb
jns
popa
jle
loope
cmp
aaa
and
mov
dec
mov
sbb
jg
jmp
test
sbb
in
stos
or
adc
flds
or
jbe
push
shll
nop
stos
inc
pop
xor
out
and
lahf
add
jb
cli
aam
cli
out
fildl
cs
icebp
jmp
outsl
shlb
inc
test
dec
mov
loop
gs
mov
sahf
out
loopne
mov
outsl
lret
sbb
and
fadds
pop
jo
pop
in
mov
das
jle
inc
movsl
cmc
lcall
sar
push
mov
dec
inc
rcr
lds
mov
repnz
push
and
ja
sbb
sarl
lcall
data16
movl
inc
adc
insl
add
xor
xchg
arpl
mov
insb
mov
shl
ds
jmp
mov
adc
pop
cmp
arpl
arpl
sti
in
or
outsl
shl
in
adc
dec
cmp
ja
pop
insl
shrb
add
adc
xchg
fildl
cmp
mov
push
inc
dec
xchg
out
or
fldl
aas
fwait
in
cmp
ss
and
adc
out
ret
xchg
jg
es
mov
or
jmp
inc
sahf
pop
test
dec
cwtl
dec
lahf
and
sbb
sub
mov
mov
aas
dec
scas
cltd
jae
push
pop
dec
leave
jbe
js
stos
cs
mov
lds
gs
xchg
adc
iret
in
add
aam
xchg
push
mov
inc
sbb
cmc
or
and
or
inc
shr
mov
jmp
sbb
jecxz
mov
mov
stc
inc
sti
subb
js
call
shll
inc
push
cltd
xchg
into
sbb
negb
fcompl
inc
int3
loopne
lret
std
push
lret
mov
jl
sub
mov
pop
aas
or
or
std
mov
call
add
mov
test
loop
add
xchg
or
stos
stos
sti
ror
sbb
push
test
mov
jo
and
sub
cmp
xor
iret
leave
lret
stos
rcll
out
lods
mov
fld1
addr16
ret
imul
leave
std
imul
ficoml
test
cs
xchg
sbb
fcompl
movsl
popa
popf
and
and
int
outsl
out
ljmp
mov
jmp
gs
add
and
inc
cld
repz
repnz
adc
sub
cli
cmp
sub
pop
repnz
or
dec
push
jmp
jno
or
inc
sbb
pop
out
ret
cs
or
sub
pusha
mull
inc
inc
loope
xchg
sbb
cmp
js
fcmovnb
mov
insl
sbb
popa
lock
push
je
add
add
push
loopne
cmp
adc
ja
jne
fcomip
into
mov
sbb
push
jns
inc
jle
cli
inc
testl
pop
sub
dec
add
add
ficompl
inc
and
fdivrp
scas
xchg
mov
fisubl
xchg
mov
xor
xchg
xchg
ss
stc
ss
jp
xlat
and
push
adc
mov
repz
xchg
pushf
out
mov
mov
rcl
cmpsl
call
shlb
cmc
push
ret
mov
adc
push
push
mov
rorb
fdivp
inc
pop
pop
iret
shlb
mov
dec
mov
cmp
cmp
es
adc
fnstsw
cmp
sub
fucom
lcall
or
mov
adc
ret
mov
stos
outsb
push
mov
jo
cmc
xchg
jp
mov
repz
gs
mov
inc
mov
jle
cmovg
in
movsb
xor
add
test
xlat
inc
pop
adc
jmp
test
arpl
push
inc
inc
cmp
xor
repnz
es
sahf
cmp
rcr
lcall
cmp
and
jecxz
xor
pop
es
mov
dec
adc
rcll
dec
scas
int3
repnz
dec
aad
dec
int
out
cmp
andl
hlt
imul
addb
into
test
pop
sbb
jl
jbe
ss
lahf
je
add
xlat
adc
sbb
xor
cli
jg
jne
xor
ret
pop
dec
fdivrs
stc
push
xor
and
pop
scas
push
icebp
inc
sub
nop
outsb
imul
ret
test
push
cmp
mov
or
iret
sub
fwait
xor
test
sub
mov
mov
mov
rorl
jg
sub
jp
pop
rorb
outsl
xchg
lea
inc
jl
imul
mov
fnstcw
or
push
cltd
shll
movsb
cmp
adc
mov
push
or
adc
ja
xchg
xchg
fs
jecxz
stc
xor
cmp
je
pop
lret
add
pop
xchg
inc
cmc
aam
xor
xchg
inc
inc
subb
adc
shlb
pop
cmp
push
sti
mov
dec
roll
mov
js
stos
popf
adc
pop
stc
shll
xchg
cmp
cmp
sub
add
inc
fcomp
cli
xchg
aad
repnz
xchg
jns
fstl
jnp
movsb
adc
loop
rcl
fmull
mov
movsb
sub
insl
sbb
in
scas
scas
jnp
lret
fisttpl
ljmp
adc
ja
call
test
jmp
xlat
push
inc
icebp
sub
xchg
push
test
cwtl
gs
sub
or
movsb
scas
std
xchg
cmp
pop
stc
jl
in
fbld
nop
insl
rclb
mov
cwtl
rclb
das
js
loopne
data16
cmpsb
hlt
sbb
imul
lods
shlb
push
out
divl
dec
jl
jp
mov
dec
jns
repz
jl
aad
xor
fxch
roll
stos
fisttpl
inc
shlb
xchg
cmc
scas
lods
mov
xchg
push
cmp
add
test
xor
gs
sub
mov
sub
cmpsl
push
in
xchg
mov
cmpsb
jae
stos
insl
cmp
or
lret
and
and
lock
std
dec
or
pop
pusha
clc
dec
adc
int3
mov
call
std
inc
sbb
out
and
mov
mov
jo
push
je
jo
or
jnp
scas
fcomp
xchg
xchg
and
addr16
xorb
xchg
sbb
stos
xor
adc
mov
mov
in
cmp
pop
imul
add
xor
adc
faddl
xchg
int
jae
mov
into
aad
dec
stos
xorb
sub
cmp
mov
or
fsubrs
enter
sub
sbb
loop
lods
jae
jl
jecxz
mov
scas
out
daa
cltd
xor
dec
addr16
adc
mulb
lcall
insl
jecxz
cmovns
gs
add
addr16
ja
test
add
sub
outsb
cltd
push
push
and
pop
fdivl
mov
inc
data16
out
add
cmpsb
addr16
nop
lock
ja
ds
in
cmp
dec
pop
ja
leave
push
mov
sub
sbb
mov
jge
mov
mov
lock
es
in
scas
call
daa
into
jmp
push
push
dec
jo
push
xchg
pusha
dec
mov
push
call
jmp
mov
mov
mov
xchg
push
push
sbb
sbb
lahf
xchg
push
dec
mov
dec
popf
dec
push
imulb
cltd
mov
and
xor
pop
pop
dec
popf
decb
fisubl
sub
or
sarb
and
mov
fdivs
or
mov
or
arpl
jns
les
and
push
cltd
leave
inc
xchg
cs
inc
mov
adc
adc
pop
ja
sti
add
je
cmpsb
push
xchg
stos
cli
mov
mov
in
leave
pusha
or
stc
push
and
sub
andb
addr16
mov
out
ficomps
sbb
or
adc
fiadds
adc
lcall
fwait
shl
lock
or
inc
jp
and
mov
push
lods
cmc
mov
gs
pusha
inc
xor
mov
mov
cltd
lahf
enter
add
jno
xor
imul
hlt
xor
push
xlat
mull
outsb
cmp
xchg
cmovnp
test
xchg
xchg
ret
xchg
pop
sbb
add
jne
inc
pop
bound
jmp
push
push
push
into
iret
cmp
dec
imul
loope
mov
movsl
cli
out
mov
lret
jecxz
xor
xchg
xlat
xchg
shlb
mov
scas
popa
pop
dec
jo
push
sub
pop
sbb
sti
enter
stc
cmp
jg
negb
xor
out
mov
bound
lret
xor
iret
inc
test
adc
cmp
jne
outsl
sbb
pop
jl
int
clc
push
jp
sub
jb
stc
imul
mov
jge
jne
ja
outsl
mov
cmp
out
add
scas
scas
cmp
outsl
or
jbe
jp
call
inc
mov
pop
mov
dec
mov
mov
mov
or
dec
add
addb
stos
mov
icebp
in
xor
jbe
std
mov
xchg
sub
popa
movb
dec
pusha
mov
test
xlat
dec
xchg
stos
into
insb
fwait
sub
cmpb
rcll
pop
mov
and
cld
imul
mov
and
sub
push
and
or
mov
push
ds
clc
sub
sub
repz
mov
cmp
mov
in
icebp
daa
push
sub
mov
es
rol
cmpl
repnz
pop
mov
add
pop
jnp
mov
mov
je
jecxz
shlb
cmp
icebp
lods
pop
sbb
cmp
out
outsb
push
lock
add
sub
rcrl
push
stos
std
inc
fdivrl
push
push
shrb
inc
push
push
and
mov
iret
push
xchg
dec
ret
pop
xor
daa
and
jg
pop
or
lcall
pop
mov
aad
jb
nop
xor
jno
add
je
mov
and
pop
test
xchg
je
jne
xor
repz
sbb
pop
jp
push
test
push
mov
or
movups
les
mov
lock
mov
add
push
loopne
pop
lahf
adc
ficoml
jnp
insl
lahf
cmc
xchg
mov
lds
out
fcoms
test
fmull
das
frstor
aam
mov
fidivrs
inc
mov
pop
pop
push
fdiv
push
sub
push
cmpsb
sbb
xchg
mov
jae
test
xchg
push
int
mov
pop
in
std
xor
cmp
and
int
cmpsl
ss
mov
mov
out
sbbb
inc
dec
pop
xchg
stos
das
xor
loope
sbb
mov
rcll
repz
add
aad
mov
lds
jle
mov
fiadds
dec
mov
sbb
in
dec
out
out
adc
sar
mov
out
cli
iret
fadds
jo
cmpsb
out
or
std
dec
test
xchg
mov
mov
lahf
outsb
shrl
mov
pop
movl
push
mov
popf
mov
mov
pop
in
repnz
push
jle
push
rclb
jbe
push
pop
dec
int
mov
fs
adc
mov
insb
mov
cmp
and
xor
subl
or
sahf
stc
mov
jl
push
fisubrs
jb
loope
mov
aaa
jg
orb
stc
cmc
loopne
out
pop
int3
ss
jp
ss
add
and
fistpll
xchg
int3
dec
mov
pop
cmp
mov
insl
mov
pop
jne
ja
push
pop
xchg
int
fwait
ret
fdivrs
fistpl
xlat
ret
xor
inc
or
xchg
pop
push
cmp
xor
mull
popf
divl
jge
sti
iret
in
call
movsl
push
sub
fsubl
movsb
push
mov
adc
fisubl
cmpsb
xchg
xchg
les
stc
rcll
lcall
outsl
notl
xchg
int3
jns
sub
mov
inc
subb
je
push
stos
or
subb
and
inc
xchg
adc
out
push
daa
lds
xor
addl
hlt
mov
inc
popf
xchg
sbb
and
lret
push
cmc
mov
mov
xorl
sbb
inc
mov
push
dec
dec
jns
xchg
sub
push
push
in
and
mov
pusha
gs
inc
shll
sbb
enter
nop
inc
pushf
movlps
pop
jl
mov
sub
sbb
clc
or
mov
out
mov
mov
xchg
dec
cmp
xor
lods
lods
adc
pop
iret
mov
outsl
pusha
inc
cmp
adc
and
lcall
mov
mov
data16
lock
cwtl
mov
lcall
imul
movsl
mov
mov
lock
lods
fs
lret
dec
xor
dec
fwait
adcb
out
fisubrs
push
sbb
xlat
pop
test
jl
push
add
adc
or
and
adc
xor
jnp
lret
xlat
cmp
lds
in
insl
xor
icebp
int3
getsec
mov
shl
mov
stos
lds
dec
shrl
clc
fstpt
xchg
out
into
mov
iret
xor
cwtl
mov
pop
and
or
push
cmp
dec
or
movsl
ja
push
mov
outsl
mov
or
dec
lea
stos
hlt
das
insb
out
adc
and
inc
mov
xchg
sub
add
fs
shl
mov
iret
insl
mov
push
ss
add
insl
add
and
rorb
mov
jecxz
ficompl
gs
or
outsb
lret
cmpsl
lods
mov
mov
int
jae
dec
dec
call
fcomps
pop
out
pop
pusha
inc
int3
out
mov
loopne
movsb
movsl
mov
inc
or
jae
mov
rorl
rcll
sbb
aad
pop
push
cwtl
pop
bound
out
ds
daa
add
dec
jbe
mov
jbe
mov
inc
jmp
in
xor
xchg
dec
xor
jmp
mov
test
leave
sub
mov
int
outsb
stos
pop
les
movsl
add
jbe
xor
insb
sbb
sahf
xchg
popf
aas
inc
xchg
rcrb
das
jb
fisubrl
ss
push
mov
daa
lock
pop
ss
mov
push
push
cmp
test
push
es
in
popf
lahf
xor
pop
jb
add
pop
lcall
xor
ljmp
outsb
dec
jns
adc
pop
outsl
loop
sbb
or
lds
shrl
sub
sahf
stc
pop
xor
das
sub
cmp
mov
add
push
imul
and
scas
ret
pop
shlb
cmp
ret
pusha
aad
jb
les
iret
add
andnps
push
lods
jb
jns
test
pusha
arpl
push
loope
xor
fs
xchg
jae
cmp
pop
lock
add
cli
cmp
lret
fdivr
scas
mov
pop
test
mov
xchg
add
inc
adc
dec
test
cmc
xchg
sub
jl
mov
pop
repnz
push
ljmp
jb
xchg
or
sub
jmp
push
add
lahf
sahf
jmp
outsb
imul
jne
in
pushf
push
stos
or
mov
mov
aam
dec
imul
cwtl
pop
addr16
and
cs
jmp
xchg
das
in
or
lods
stc
jne
mov
sub
pop
imul
mov
adc
std
sahf
clc
aas
ja
or
movsl
cli
cwtl
pop
dec
popl
dec
and
stos
insb
cmp
outsb
shlb
int
pop
pop
cmp
outsb
loop
cmpsb
imul
aas
adc
aas
insl
xor
lretw
das
fwait
lods
hlt
out
mov
jmp
insl
lcall
into
mov
insb
jg
idivl
mov
and
std
xor
notb
xor
xor
popf
pop
cmpsb
xchg
push
xchg
push
into
push
sub
push
xchg
xchg
sub
sbb
cwtl
fldcw
mov
clc
mov
or
cli
call
lods
add
xchg
out
adc
and
cmc
pop
mov
sbb
pop
call
sti
jb
push
and
push
mov
dec
jp
mov
das
and
insl
or
scas
scas
add
out
iret
and
cli
add
lods
mov
pop
ss
mov
xchg
cld
insb
pop
sbb
inc
jp
xlat
cmp
inc
sub
xor
call
rol
mov
sub
mov
lods
push
mov
pushf
jb
lret
fucomp
inc
pushf
inc
lret
mov
scas
sbb
jae
out
movsb
mov
ljmp
or
roll
mov
test
leave
les
daa
pop
ljmp
cmp
outsl
xor
inc
clc
and
or
cmp
push
std
inc
push
mov
mov
xchg
pop
jns,pt
pop
inc
aad
and
mov
xchg
ljmp
cltd
out
out
jnp
fucomi
sahf
outsl
pop
mov
rcll
jno
pop
xlat
xor
adc
pop
addr16
and
jp
adc
push
je
or
push
cmp
ret
push
or
sbb
or
sbb
out
enter
daa
xlat
daa
push
leave
cli
cmp
mov
int3
mov
jnp
out
jb
mov
cs
mov
pop
cmpsl
popf
mov
pusha
mov
cmpsb
cmp
sub
rcl
ret
loopne
cmpsb
fbstp
adc
aam
inc
xorb
push
repz
out
mov
mov
cli
in
sarb
int3
xchg
repz
push
ss
pop
xor
das
outsb
inc
add
pop
das
loope
lahf
repnz
stc
inc
push
pushf
fisttps
inc
xor
xor
stos
mov
hlt
mov
pop
inc
jmp
ljmp
xor
js
mov
jmp
rcll
or
dec
sbb
xor
sub
sbb
cmp
out
xor
xor
or
sbb
xchg
bound
into
pop
mov
pop
inc
cmp
add
push
mov
inc
loope
pop
outsb
inc
inc
dec
push
and
xor
ljmp
jle
jb
sar
dec
push
pop
fnstsw
jle
stos
ror
mov
adc
and
mov
mov
loope
sti
or
xchg
es
lock
or
paddsw
push
xor
loopne
xor
dec
mov
cmc
ja
sahf
in
pop
push
pop
loope
std
adc
jno
push
cmpl
test
sub
and
mov
and
inc
cmp
ja
sub
popf
pop
mov
pusha
ffreep
inc
pop
lret
push
lods
and
or
idivl
xchg
pop
adc
push
xor
in
adc
test
mov
cmp
mov
js
insl
cli
cmpsl
jo
xchg
pop
test
push
add
push
jbe
add
xor
pop
sbb
insb
xchg
lret
xor
pusha
dec
cmp
lcall
cmpsb
sub
repz
mov
enter
rcll
mov
inc
push
xor
add
enter
aaa
jb
cmp
pop
cli
jb
adc
test
sahf
xchg
push
inc
call
mov
pop
xor
fmuls
sbb
jae
mov
out
mov
or
jo
inc
xor
sbb
andl
pop
cmpsl
stos
cmp
bound
rolb
jp
in
lcall
xor
xor
test
pop
enter
push
outsl
mov
xchg
sbb
pop
sbb
add
xor
pop
cmp
push
in
rcrl
out
repz
pop
aad
cltd
fisubl
ja
jp
out
mov
jg
mov
loop
fsts
pop
pop
out
xchg
fadds
inc
mov
adc
push
test
pop
movsb
es
mov
xchg
pop
inc
sar
mov
pop
and
adc
sub
insb
ficoml
mov
cld
cmc
je
mov
or
push
lea
rcrl
sub
test
lcall
mov
xor
mov
mov
mov
lds
or
js
mov
xchg
fs
adc
cmp
push
fidivrs
jae
add
cli
jecxz
test
mov
dec
xor
fdivl
pop
push
ljmp
cmc
adc
into
xchg
sub
cs
gs
negl
pop
cmpsl
loope
xchg
push
int3
dec
fwait
pop
inc
popa
stos
mov
bound
sub
mov
mov
test
add
in
fistl
insb
lret
arpl
mov
fidivs
popa
add
das
lock
scas
popa
ret
pop
mov
pop
push
inc
ljmp
in
aad
mov
or
mov
icebp
xor
push
les
nop
lcall
adc
and
adc
lock
dec
mov
jne
mov
sahf
xchg
sub
jl
dec
and
jnp
push
xchg
or
sub
pusha
lcall
out
js
fistpl
js
adc
loope
push
sub
dec
dec
cli
or
mov
rolb
xchg
int3
imul
mov
ja
lods
jne
movl
aam
in
call
mov
jle
xlat
inc
mov
sahf
sbb
dec
add
in
mov
mov
mov
cld
xchg
aam
rcr
gs
test
sbbl
outsl
out
adc
loopne
jecxz
notl
cmp
pusha
dec
inc
jb
mov
xor
popf
push
mov
push
pop
lcall
dec
scas
repz
bound
int3
cmc
sbb
lods
fsubrl
mov
fwait
repnz
xor
push
fwait
xor
sub
xchg
je
fdivl
push
dec
mov
repnz
add
imul
and
and
addr16
and
jl
jae
mov
or
ret
imull
jge
cmp
jns
int
popa
or
jg
mov
or
aad
aaa
stc
xchg
movsl
lahf
xchg
mov
das
or
pusha
idivl
pop
or
xor
cmp
xor
xchg
inc
pushl
jmp
das
mov
jl
popf
es
cmc
mov
xor
mov
sub
aas
cs
lahf
ds
cs
pop
lahf
mov
les
shll
cmp
pop
insl
daa
push
and
push
in
addr16
xchg
call
xor
and
xchg
subb
jle
add
xchg
test
pop
ja
dec
or
mov
inc
in
sbb
fimuls
icebp
insl
jp
push
mov
jne
sub
fidivrl
mov
inc
ss
or
mov
and
sbb
sbb
fmul
push
sub
aas
cmpsl
sub
jl
cmc
xchg
std
and
add
or
fisttpl
xchg
stc
into
cltd
mov
pop
pop
out
insb
out
pusha
mov
aas
xchg
mov
test
adc
sub
xchg
cmpsb
pusha
mov
insl
dec
scas
push
xchg
pop
adcl
jne
test
dec
ret
xor
repnz
les
cmp
jbe
outsb
cmp
mov
jnp
stc
sub
fisubl
adc
notb
push
rorl
dec
jns
dec
roll
mov
mov
pop
iret
and
xrelease
cli
addl
cmp
aaa
pop
xor
dec
sub
jns
inc
xchg
cli
std
js
aad
rorl
and
decb
cli
cmpsl
sub
push
test
mov
imul
in
sarb
mov
leave
add
imull
adc
addr16
adcb
mov
inc
sbb
leave
fidivs
dec
jp
sbb
out
xor
xlat
inc
fistpll
cmp
movsb
subl
pop
stc
es
lods
jbe
repnz
sbb
and
mov
cmp
jno
ss
mov
rclb
push
dec
repz
xor
adc
adc
jnp
cli
test
cmpsb
pop
xchg
push
and
in
int
cmp
in
dec
loopne
xchg
movsl
stc
dec
test
mov
repz
push
lods
push
jbe
push
mov
adc
dec
jp
repz
loopne
out
mov
mov
pop
es
andl
push
xchg
xor
jbe
lcall
inc
push
outsb
adc
aam
pop
and
add
push
xchg
jge
shrl
add
mov
repnz
add
and
jns
cld
push
sbb
jo
sbb
out
xor
rclb
push
into
xor
mov
mov
stos
mov
in
das
lcall
sbb
aam
mov
cltd
repz
xor
rclb
scas
sarb
sub
push
add
subl
ficoms
lds
loope
jl
into
cs
inc
or
es
aaa
pop
in
add
jle
mov
movsb
xor
or
insb
push
cmp
je
out
mulb
adc
and
inc
jns
std
mov
adc
push
inc
push
pop
push
negb
dec
mulb
lahf
dec
pop
sbb
mov
xlat
pushf
fwait
push
mov
aad
aam
jbe
fcmove
andl
cmp
sub
testb
xchg
cs
dec
and
rcll
ret
mov
test
xor
movsb
sarl
in
and
sbb
je
jno
hlt
push
insl
in
xchg
jno
jp
xchg
inc
cmp
fidivl
cmp
sub
jmp
popa
pop
sbb
cmp
mov
push
push
lcall
test
mov
fcompl
rorl
cmpsb
xchg
adc
ret
mov
out
push
dec
in
add
jg
ja
adc
into
jecxz
add
std
pop
outsb
cwtl
push
dec
jle
dec
lods
loope
mov
and
dec
lods
pop
std
push
test
and
cld
mov
pop
inc
mov
stos
bound
fildl
ret
push
aam
cmp
in
pop
cld
mov
xlat
outsl
rclb
ss
xchg
lods
call
sbb
push
loope
cwtl
xchg
out
dec
in
xor
and
jnp
in
and
adc
adc
fsubl
ret
mov
adc
xchg
into
imul
jp
cmp
sbb
lcall
or
inc
scas
mov
pushf
pop
mov
imul
mov
cmc
push
fucom
cmp
xchg
addb
push
inc
test
std
filds
addb
push
insl
je
popf
pop
mov
hlt
sub
xchg
leave
sub
mov
sub
adc
cmc
fists
lahf
fbld
mov
mov
push
cmp
call
lret
repz
pop
inc
add
add
inc
cmpsl
jmp
add
jmp
jp
repz
addl
inc
xor
icebp
mov
sti
das
dec
in
mov
dec
add
ljmp
pop
pushf
rcrb
pop
stos
mov
push
lret
mov
out
test
call
or
shlw
ret
sbb
lods
call
sub
bnd
jg
cmp
jnp
inc
push
jge
jmp
pop
jae
mov
xchg
mov
jo
jle
ss
fidivs
loop
jmp
in
sbb
stos
push
lock
outsl
cmp
ficoms
repz
xchg
popf
xchg
fcmovu
mov
xor
push
test
xor
iret
dec
sbb
dec
cmp
xor
fcmovnb
jmp
pop
fnstenv
add
push
cmpsb
jns
out
cs
icebp
cmp
push
outsl
push
dec
std
mull
inc
adcb
xchg
push
fistl
mov
or
push
fcmovbe
movsl
xchg
mov
mov
push
inc
shr
xor
outsb
test
stc
icebp
fs
es
ljmp
cmpl
inc
cli
ficompl
jle
in
mov
imul
cmpsb
adc
test
inc
stos
add
xor
sub
jno
in
dec
or
mov
jl
add
cmpsl
call
add
mov
inc
jl
inc
lahf
dec
adc
fisubs
sbb
dec
xchg
outsl
jne
add
push
rclb
jno
xchg
pusha
cmpsb
push
mov
pushf
or
mov
scas
jne
daa
pop
jmp
dec
jl
jmp
xor
bound
lea
ss
cmp
lods
and
lods
in
dec
stos
daa
mov
outsb
push
adc
in
in
push
out
imul
jg
push
jbe
inc
mov
hlt
sub
scas
mov
dec
xor
push
stc
mov
fisubrl
push
sub
push
mulb
ljmp
push
jmp
inc
mov
xchg
frstor
enter
sti
test
push
pop
jp
ret
imul
push
pop
xor
push
ljmp
lods
add
sub
push
lret
xor
add
mov
mov
in
out
into
mov
test
dec
sbb
lds
scas
divl
icebp
push
jmp
mov
add
arpl
adc
inc
mov
sbb
lods
jl
mov
call
adc
test
pop
orl
out
icebp
add
outsb
test
mov
jp
xor
inc
sbb
xor
sbb
pop
cmpl
ljmp
outsb
adc
mov
jns
cmpsb
ljmp
mov
scas
std
add
inc
dec
or
je
mov
dec
mulb
cmpsl
movsb
fstpt
scas
mov
mov
lods
push
scas
dec
lret
in
inc
or
notl
int
fsts
imul
xchg
xchg
pop
rcr
or
rclb
mov
pop
push
sub
icebp
dec
std
cmp
xor
mov
std
in
pop
mov
sti
shrb
insb
push
icebp
ret
xchg
xor
sub
adc
sbb
imul
push
incl
in
xchg
jne
daa
repnz
mov
xchg
mov
pop
insb
stc
push
jbe
pop
das
rclb
jo
xor
imul
mov
hlt
mov
mov
gs
sbb
and
pop
push
cmc
mov
sub
jmp
mov
pop
clc
js
dec
leave
or
pop
and
in
xchg
fxch
icebp
lea
lcall
sbb
loopne
push
lods
push
mov
int
lcall
cli
popf
cmc
loopne
xor
jl
andb
push
dec
push
insl
jp
and
popa
mov
jne
test
mov
jle
pop
push
iret
pop
mov
fadd
inc
clc
lcall
dec
cli
adc
gs
pop
push
xor
je
in
dec
cwtl
shll
in
ret
aam
xchg
jo
push
mov
cmp
shll
sbb
and
pop
xchg
adc
std
dec
in
dec
rcll
jbe
jge
dec
sbb
mov
aas
xor
ss
mov
lret
cmp
mov
sbb
xor
rcl
stc
cmpsl
test
imul
sub
test
addr16
add
pop
fcmovnu
cwtl
mov
test
lcall
arpl
lods
fcmovnu
popf
inc
sub
and
mov
dec
mov
lds
jo
xor
sbb
push
ret
daa
push
lcall
mov
js
test
and
pop
mov
jmp
mov
int
rclb
add
push
test
mov
mov
inc
sbb
jne
clc
sub
mov
cmpxchg
cld
movsb
cmp
add
fwait
cmc
movsb
shlb
mov
test
les
sbb
xor
mov
adc
incl
int3
daa
sub
mov
mov
inc
xlat
fs
in
inc
fdivp
rcrl
mov
pop
jo
push
je
adc
push
push
rclb
stos
sbb
roll
dec
sub
and
inc
mov
dec
push
add
pushf
cmc
fadd
dec
xchg
mov
xchg
nop
xor
mov
popf
push
movsb
push
pop
adc
add
pop
and
das
mov
xchg
movsb
mov
fcmovnbe
adc
repz
fdivs
pop
enter
fbstp
out
inc
mov
fisttpl
add
test
mov
lret
jge
movl
pop
std
cltd
ret
jmp
cmpsl
xchg
std
push
mov
mov
mov
mul
jae
push
scas
sub
jno
pop
sub
mov
or
and
jnp
xor
or
inc
ret
push
fstps
je
adc
enter
fcoml
daa
sub
aad
call
insl
jmp
xchg
ja
add
les
mov
lock
mov
aas
lods
or
rolb
jl
lods
int
cmp
cmp
inc
cmp
xchg
xlat
add
cmpb
fucomp
lods
and
adc
jne
mov
xchg
into
pop
je
iret
clc
add
mov
pop
xor
rcl
sbbl
jmp
insl
pop
stc
mov
bound
pop
negl
pusha
xor
sub
adc
xchg
jns
cmp
jb
ret
sub
xor
lods
pop
jl
repz
mov
pop
clc
push
stos
or
std
neg
cmp
sbb
cmp
xchg
icebp
daa
and
push
loopne
pop
test
jno
add
jns
notb
pop
std
cs
mov
cli
mov
jae
prefetchnta
or
movsl
mov
into
mov
sub
ds
int
mov
push
push
xchg
lock
std
sbb
jnp
loop
push
jp
push
call
call
xchg
stc
xchg
fwait
cmc
jle
std
fcompl
stc
xchg
or
xchg
adc
rcrl
iret
jnp
sub
lods
xor
stos
inc
shll
cmp
mov
xlat
js
aas
cs
xchg
add
add
daa
pop
insl
mov
jp
flds
sub
mov
push
xchg
outsl
dec
xor
popa
das
mov
or
loopne
mov
inc
pop
pop
xchg
mov
and
repz
jp
mov
dec
outsb
rcrb
push
out
push
mov
cmp
in
mov
mov
inc
int
mov
and
shl
repz
adc
ja
fsubs
imul
add
enter
arpl
sbb
mov
idivl
in
xor
dec
test
bt
inc
jecxz
cmpsb
dec
dec
faddp
into
mov
in
add
test
scas
test
popf
dec
inc
add
dec
dec
inc
xchg
mov
cmp
out
flds
and
in
dec
push
fistl
fmull
mov
jb
dec
testb
dec
dec
pushl
add
fs
jmp
adc
pop
addb
inc
enter
jle
iret
testl
daa
imul
lahf
aam
aas
xor
push
imul
shrl
mov
loopne
sub
sbb
jno
push
add
pop
cmpsb
pop
adc
cmp
or
shll
insb
out
mov
je
das
call
test
scas
sahf
cmc
or
inc
stos
iret
mov
cltd
cmp
or
out
sub
sub
and
clc
add
jmp
mov
mov
pop
scas
and
mov
in
dec
xchg
outsb
insl
fiaddl
sahf
push
outsb
sub
loopne
rol
mov
mov
cmp
sbb
rclb
stos
mov
ret
mov
popf
outsb
jl
test
jnp
cld
push
xchg
mov
dec
adc
sti
loop
mov
sqrtps
pop
fcmovbe
inc
jg
cwtl
jmp
in
lcall
mov
add
les
sbb
jge
sahf
stc
jno
inc
lds
subb
inc
pmullw
ficompl
jae
or
imul
and
and
push
mov
dec
mov
test
jae
and
inc
pop
jl
das
std
fwait
mov
dec
pop
jbe
fwait
addr16
pop
xchg
icebp
nop
pop
sub
push
mov
dec
push
inc
and
sub
xor
add
movsl
movsb
xchg
jg
cmp
push
aas
and
pop
pop
xor
mov
mov
lds
adc
or
cwtl
fwait
cld
es
stos
inc
lcall
sahf
repnz
repz
ret
xor
out
mov
popf
xor
mov
mov
push
ja
sbb
and
cmpl
sbb
outsb
cmp
dec
dec
and
mov
lods
fwait
pop
dec
inc
das
hlt
out
daa
xchg
loope,pt
adc
adc
mov
push
or
hlt
call
add
push
and
in
clc
push
mov
push
out
mov
jne
adc
sti
fisubrs
lahf
adc
adc
jne
aaa
stos
ret
addr16
sub
ss
ljmp
jp
daa
rcl
shrl
xor
out
push
add
sub
popf
jmp
push
jmp
movsb
call
ljmp
imul
pop
stos
mov
fs
add
testl
mov
jge
xor
movsb
leave
or
test
aad
add
push
cmpsb
in
pushf
daa
mov
in
and
or
adc
aad
arpl
cltd
js
cmc
and
ficoml
push
mov
sub
sbb
xchg
cld
jmp
push
lret
jno
shrl
add
rol
sub
ja
dec
out
scas
mov
adc
scas
dec
mov
or
out
mov
test
fsubl
adc
in
mov
lret
pop
xlat
popa
lret
mov
cli
mov
pop
ss
and
lods
fcoms
scas
add
cmp
pop
inc
fstpl
adc
int3
imull
imul
imul
mov
sahf
out
adc
add
lahf
std
pop
shll
dec
xor
jne
xchg
je
mov
outsb
aam
pop
pop
sbb
lea
jnp
in
jo
outsl
leave
mov
adc
cmp
mov
ja
add
aaa
lahf
mov
xchg
shlb
or
movsbl
pop
cmp
adc
cmp
jecxz
iret
loopne
add
pop
loop
add
fstp
push
jns
cmp
pop
dec
mov
ljmp
dec
sbb
imul
cmp
jno
mov
int3
ret
adc
add
sub
xor
xchg
scas
sub
popa
fmul
pop
mov
or
or
sti
or
xor
imul
pop
jp
ret
mov
scas
adc
cmp
xchg
je
aas
inc
daa
dec
out
mov
loop
stc
mov
push
push
cmp
rcll
xor
insb
and
std
cmp
sbb
push
jae
movsl
or
cmp
pop
and
sub
mov
inc
xor
test
sub
jnp
ret
inc
jp
hlt
add
scas
jae
add
out
jne
dec
nop
leave
stos
push
push
jecxz
sbb
push
popa
or
sub
pop
sti
pop
adc
mov
aad
aaa
fcom
rolb
out
jo
loope
cltd
ja
pusha
cltd
out
add
pushf
ret
jge
sbb
sbb
std
clc
adc
sub
pop
push
ds
mov
xchg
push
push
mov
mov
mov
xor
push
lods
push
jl
ret
adc
cli
xchg
dec
cmp
xor
mov
pop
or
add
movsl
add
pop
or
add
pusha
fwait
xlat
mov
pop
push
or
mov
xchg
adc
and
sahf
bound
sti
jle
pop
add
sbb
mov
leave
loopne
inc
jge
pop
lock
in
lods
hlt
mov
pop
lahf
cmp
push
je
xchg
pop
or
xchg
aad
sbb
jae
cmp
cltd
cmp
xchg
out
lods
mov
insl
test
bndstx
push
dec
xor
test
out
and
add
add
pop
or
cmp
test
cwtl
lock
ss
dec
arpl
jle
cmc
test
jno
push
add
stc
sarb
fdivl
ds
iret
out
loop
jae
sti
adc
mov
sub
mov
push
lret
add
lods
lret
dec
push
mov
iret
and
push
or
popa
pop
nop
inc
add
out
test
data16
int
lret
int3
mov
push
mov
loop
xor
xchg
mov
stos
and
in
xchg
in
jbe
scas
sub
mov
repz
int
push
clc
popf
dec
rcl
jnp
sub
mov
pop
cmpsl
in
xorl
mov
mov
push
lods
dec
sub
push
jg
ret
sbb
test
cmpb
cmp
into
mov
adc
lock
mov
sub
dec
jb
icebp
cmp
out
push
xor
cmp
push
shlb
cmp
mov
pusha
or
mov
decb
orl
jno
sbb
xchg
and
mov
into
enter
loop
pop
sub
out
aas
mov
add
sbb
pop
stos
mov
movsl
fwait
mov
xor
ret
mov
cmp
and
and
stos
sahf
mov
in
add
lods
pop
ja
push
pop
mov
out
out
and
roll
pop
int
scas
mov
or
aam
xchg
xchg
fucomi
adc
push
and
outsb
or
and
cmpsb
jne
xor
mov
fidivrs
mov
iret
or
mov
xor
mov
orl
or
pop
sbb
add
push
lahf
inc
outsl
jno
mov
and
xchg
out
mov
pop
int
cld
xchg
in
es
test
jmp
out
js
out
add
jecxz
or
xor
mov
enter
cmp
jne
fdivr
aad
and
pop
test
test
sbb
mov
mov
sbb
jg
mov
cltd
mov
adc
cwtl
push
dec
adc
scas
cld
pop
pop
cmpl
inc
pop
test
lea
mov
paddusw
pop
pop
shlb
jg
push
xor
js
je
arpl
flds
ljmp
in
dec
outsl
fs
mov
inc
jmp
ss
mov
insb
cld
push
cwtl
mov
ds
xor
xchg
mov
cmc
testl
xor
popa
add
andl
pop
ljmp
pop
mov
jle
in
jb
jae
bound
fldl
je
out
hlt
sub
lcall
push
je
mov
and
jb
lahf
mov
mov
and
sbb
xchg
dec
jns
jle
inc
adc
pop
ror
pop
adc
xor
scas
shrl
test
xor
in
adc
and
mov
dec
add
pop
cmp
push
push
decb
imul
cmpsl
adc
or
pop
into
dec
rcll
scas
addl
shrl
adc
xorb
orl
mov
push
ret
mov
ret
ret
pop
js
lret
push
mov
sbb
dec
mov
ja
aas
mov
andb
lock
add
add
jge
push
test
jnp
dec
tzcnt
jne
or
sahf
unpcklps
ds
add
sub
divl
and
out
dec
xchg
fs
int
out
mov
orb
mov
pusha
aam
fcoms
add
or
jl
nop
les
push
lea
pop
cmp
inc
xchg
add
dec
push
dec
test
shrl
or
jae
lcall
sbb
addr16
call
ret
mov
aad
stc
in
pop
sbb
jne
xchg
mov
and
lods
lret
iret
dec
push
cs
cmp
jae
xchg
xlat
loope
ds
sbb
jne
mov
mov
add
jne
inc
lods
cli
xor
and
pop
add
cwtl
push
mov
js
mov
pop
sbb
push
sbb
mov
test
xor
or
push
fcmovbe
adc
stos
inc
jg
xchg
and
ror
imul
mov
pop
aam
std
out
mov
add
jno
roll
push
das
pop
lock
and
sbb
dec
cld
jne
pop
shr
sarb
call
mov
sahf
push
bound
cmp
ficoml
inc
mov
sbb
inc
test
xor
add
xor
pop
push
nop
out
adc
mov
add
xor
mov
jle
mov
popa
mov
pop
int
sbb
jge
mov
ljmp
cli
mov
lock
aas
xor
leave
fsubrl
inc
dec
jge
xchg
cmc
insb
xor
pop
xchg
sbb
cld
or
dec
fmulp
scas
pop
scas
sbb
dec
mov
lods
lret
push
mov
inc
mov
repz
pop
das
movsb
sub
add
fisubl
push
out
mov
xor
inc
pop
xchg
xchg
or
inc
in
sbbl
adc
mov
fstl
cmp
xchg
shll
stos
mov
add
gs
jge
icebp
bound
fwait
in
call
adc
and
cmp
pop
push
int3
pusha
mov
unpcklps
sbb
mov
jae
jge
clc
adc
jo
jecxz
push
add
or
push
pop
jle
mov
mov
mov
lods
sti
inc
push
das
imul
insb
sbb
cmp
mov
and
in
adc
lahf
and
cld
mov
ljmp
fwait
adc
push
cli
cmp
les
xchg
ret
sub
fs
cmp
aad
add
scas
mov
fwait
and
fcoms
in
sbb
es
mov
addr16
ret
or
push
jle
sub
daa
or
insl
inc
popa
jmp
push
rcll
adc
ljmp
mov
outsl
movsb
or
or
pop
cmp
push
mov
xlat
sbb
sti
push
jno
insl
xchg
and
cltd
cli
ss
cli
pop
push
fnsave
mov
cmpl
add
mov
push
sbb
or
add
sbb
and
adc
cmc
or
or
je
mov
push
push
mull
add
cmp
push
xchg
rcrb
lahf
aaa
aad
fisttpl
fnstenv
mov
cmpsl
xchg
mov
stos
jg
les
mov
je
repz
pusha
jno
push
pusha
xchg
xor
out
mov
xchg
xchg
sti
push
test
sbb
sarl
aam
pop
jbe
jno
stos
mov
lahf
lret
lcall
jp
test
cmp
sbb
pmuludq
jmp
xor
sbb
inc
iret
jmp
gs
fstl
dec
jne
dec
gs
mov
fisubrs
ret
repz
les
mov
mov
cld
scas
jnp
jbe
sahf
ja
clc
push
andb
push
mov
sti
jb
cmp
outsb
mov
sub
test
ss
mov
icebp
jge
aas
mov
dec
scas
xchg
out
xor
nop
ror
dec
push
adc
and
and
and
jle
and
cmovae
jne
shll
cmc
imul
lahf
nop
jns
out
lock
sbb
xchg
mov
sbb
fxch
mov
jmp
mov
push
fcmovne
call
xor
xchg
and
pop
or
in
aaa
mov
leave
xchg
and
mov
jno
lcall
cmp
arpl
das
pop
mov
and
pop
push
and
or
in
mov
mov
test
xchg
rorb
sub
adc
pop
out
mov
mov
ret
add
or
leave
lods
xchg
ja
mov
hlt
jns
mov
add
xor
sbb
and
sarl
fdivrs
or
jmp
jb
cld
xchg
cmp
cmp
and
js
leave
add
sbb
jmp
ss
cltd
jl
pop
sahf
cmp
mov
lods
sub
out
cmp
test
pusha
sub
rorl
xlat
rcl
lds
fneni(8087
xchg
popf
inc
mov
outsb
ljmp
lret
cmp
insl
push
mov
fldl
adc
pop
stos
movsl
mov
hlt
lret
xor
je
daa
mov
insb
sbb
movsb
mov
add
seta
pop
mov
ret
mov
xchg
mov
xlat
push
mov
std
and
mov
add
sti
jp
sbb
pop
int
jmp
imul
lock
xor
or
add
push
or
das
in
cmpsl
ja
mov
shlb
dec
cmc
mov
out
into
jle
push
repnz
gs
xor
sbb
ja
sub
and
or
adc
ret
rclb
dec
lcall
cmp
pop
jno
mov
pop
call
outsb
cmp
lret
mov
adcb
mov
cs
and
lods
dec
notb
aaa
pop
fidivl
and
aaa
dec
stos
fdivl
pop
in
cmovne
loope
mov
sub
xchg
and
loop
out
inc
repnz
fucomi
adc
inc
int
jo
lcall
adc
mov
repnz
dec
mov
sbb
dec
mov
sub
and
push
inc
jb
ret
fstl
daa
cmpsl
jne
pop
cli
in
or
inc
push
das
push
sbb
leave
ljmp
xchg
push
pop
test
dec
in
int
out
lods
mov
adc
stos
sub
pop
loop
orb
xor
cmp
leave
pop
ret
mov
adc
mov
sub
adc
add
push
mov
data16
push
test
leave
or
bound
and
movsl
push
jo
stos
xchg
cmpsb
clc
xchg
in
add
mov
cld
arpl
add
aaa
mov
idivb
sub
mov
clc
or
cmp
sbb
into
sbb
xchg
cmpl
icebp
push
outsl
push
popa
inc
scas
sub
aas
mov
jno
jge
lret
sub
add
pop
push
jl
xor
hlt
or
popf
push
sti
mov
icebp
inc
adc
adc
cwtl
inc
repz
push
mov
pushf
test
jb
dec
or
mov
roll
subb
daa
and
rclb
pop
outsl
push
dec
push
ds
scas
jns
cli
sarb
adc
and
loope
xor
mov
in
xlat
dec
lock
xchg
testb
adc
sbb
adc
es
mov
out
pop
cmp
inc
adc
mov
add
sbb
push
xchg
xor
hlt
in
mov
cld
in
and
das
andnps
std
sbb
pushf
inc
dec
addb
or
sub
inc
stos
and
mov
fisttpl
mov
cmp
xchg
push
xor
mov
jg
cmc
into
sub
ret
push
popf
filds
adc
clc
into
jg
pop
aaa
in
push
add
cmp
ljmp
mov
mov
divb
dec
leave
jecxz
pop
mov
mov
push
and
ljmp
or
xor
jo
jnp
mov
sub
cmpsb
sbb
bound
jle
adc
sub
cmp
sbb
inc
pop
lahf
cld
mov
sub
xor
dec
pusha
and
test
dec
cmp
shll
jns
xor
add
dec
xor
push
inc
test
movsb
push
and
mov
cli
pop
or
mov
dec
test
lea
mov
sahf
mov
mov
pushf
fstl
sahf
lods
adc
mov
fdivrs
aam
daa
incb
or
pusha
sbb
mov
fs
push
or
test
hlt
outsb
push
fisubl
mov
ss
mov
lds
jne
ss
mov
mov
cli
inc
and
lea
outsb
lcall
push
xchg
js
pop
addr16
lret
push
jle
fsubl
cltd
push
mov
fidivrs
nop
xchg
mov
test
roll
mull
cli
pop
dec
lods
in
pusha
mov
xchg
cmp
pusha
dec
test
mov
mov
mov
adc
sbb
adc
cmpsb
xchg
fstpl
mov
pop
fldt
xor
inc
add
pop
push
mov
stos
enter
aam
mov
sub
xchg
add
add
and
xchg
mov
aas
push
ss
adc
out
dec
repnz
daa
dec
rcr
add
data16
popf
insl
jp
jle
fnstsw
xor
mov
mov
lods
stos
ret
pop
jne
xchg
out
jne
into
dec
inc
mov
mulps
notl
rol
sub
and
lea
adc
cmc
adc
dec
icebp
sarl
arpl
mov
and
adc
add
sbb
pop
cli
mov
add
aaa
call
into
jmp
test
stos
icebp
xchg
es
sub
and
clc
mov
mov
inc
mov
jmp
pusha
and
ja
adc
je
imul
push
mov
movsl
shrb
or
add
mov
inc
jg
xor
dec
inc
fsubrl
sub
jmp
inc
imul
ds
into
cltd
jmp
dec
adc
ss
popa
adc
cwtl
xor
dec
push
test
fiadds
push
jno
imul
enter
jo
pop
pop
je
aaa
add
les
std
cmc
sbb
stc
jle
test
pop
cmpl
flds
mov
adc
pop
pop
xchg
subb
ja
lea
jno
inc
xor
loopne
ret
bound
jbe
mov
pop
std
fstl
sbb
inc
enter
mov
jo
cmp
adc
ljmp
repnz
xor
cmp
xchg
pop
jnp
or
test
pop
orb
int3
add
cmp
sub
sub
xchg
stc
outsl
gs
shlb
jp
gs
jbe
fucomp
bound
push
jnp
push
or
jne
mov
cmp
mov
adc
mov
aaa
mov
jmp
lock
std
shr
mov
lcall
aaa
test
xor
push
push
sub
mov
inc
jl
xchg
push
ja
out
xchg
dec
sub
xor
lret
and
adc
pop
stos
jge
aas
lock
mov
mov
rcll
hlt
pusha
dec
test
addr16
adc
mov
enter
std
fs
sbb
inc
insb
xor
fwait
jmp
or
mov
dec
xor
sbb
push
pop
inc
je
inc
adc
mov
dec
mov
sub
dec
push
popa
icebp
xor
je
je
sbb
pop
pop
xchg
call
sti
sbb
push
push
jbe
rol
dec
xor
cmpsb
or
xor
test
movzbl
inc
andl
mov
out
int3
xor
inc
dec
das
dec
rorb
push
stos
xchg
int
mov
dec
aas
sbb
jp
clc
fidivl
sub
jae
xchg
std
add
push
ss
shl
dec
aad
mov
sti
jnp
fnstenv
sbb
lret
and
add
pop
adc
pop
jmp
decb
mov
lods
leave
ljmp
testb
fmulp
shl
fisttpl
cmp
pop
jo
adc
xchg
sbb
ljmp
mov
outsb
jb
pop
stos
push
loop
js
and
pop
lahf
jnp
jge
daa
jb
and
jg
jae
out
and
cltd
loop
out
test
jp
sbb
pop
xchg
lret
or
mov
pop
mov
push
mov
and
les
jge
mov
mov
xchg
scas
sbb
mov
cltd
lds
fs
push
xor
fsubl
das
scas
push
jge
mov
data16
stos
sbb
jle
mov
jmp
jbe
mov
adc
mov
out
jo
inc
xor
push
xchg
sub
insl
addr16
arpl
xchg
xor
inc
sbb
dec
jns
pop
xchg
fs
and
dec
out
cmp
mov
hlt
cltd
sbb
jb
jmp
adc
xchg
push
sbb
shlb
mov
jp
ljmp
xor
sarl
jge
jne
dec
lods
stos
mov
mov
inc
pop
sbb
xchg
iret
call
pop
lods
sub
mov
push
mov
lahf
test
call
in
sbb
xor
in
adc
cmpsl
mov
orl
pop
sub
sti
rorb
cmp
adc
and
and
js
nop
pop
or
icebp
cmpsb
mov
push
cli
ret
mov
and
dec
inc
and
jecxz
dec
in
inc
push
lahf
nop
sub
rorl
and
notb
inc
sbb
xor
ljmp
xor
fisttpl
js
mov
test
int
push
push
mov
push
int3
hlt
push
mov
xchg
pop
xchg
pushf
es
add
adc
les
ret
imul
bswap
call
rcll
jl
sbb
scas
push
dec
js
mov
nop
pop
or
repz
mov
mov
xchg
enter
cmp
ret
repnz
fst
enter
lock
les
icebp
enter
data16
sub
pop
in
sbb
frstor
testl
das
push
sub
and
fpatan
or
or
ja
xchg
xchg
or
mov
push
push
mov
inc
es
imul
push
icebp
ret
lods
shr
push
jne
arpl
repz
cmpsb
leave
test
xorb
cmc
mov
xor
lock
add
sub
mov
out
pop
fiadds
cli
imul
push
sbb
cmc
lock
mov
or
inc
call
xchg
shrb
pop
dec
out
aam
jns
fstpl
repnz
inc
cli
lret
nop
das
sbb
sub
inc
iret
imul
pop
push
iret
push
cli
fptan
and
push
repnz
cmpl
jo
sbb
jae
aam
sbb
or
lock
es
sbb
mov
add
stc
dec
fdivr
mov
call
fsts
jmp
mov
popf
fidivs
outsb
add
inc
clc
jl
mov
mov
mov
out
xchg
jbe
xor
mov
test
mov
rcl
pop
push
cs
cmp
cmpb
xlat
sbb
inc
pop
adc
in
scas
sub
cld
xlat
movsb
add
jecxz
test
sub
cltd
icebp
pop
jle
jb
jp
pop
pusha
cmp
xchg
lea
mov
cs
cmpsl
and
xchg
mov
sub
hlt
out
test
cmp
adc
push
push
add
mov
add
mov
imul
mov
pop
call
fisubl
rdpmc
cmp
inc
arpl
dec
fstpl
aas
aaa
cmp
push
orb
div
jno
mov
jno
cmc
jg
test
sbb
loop
sbbb
mov
js
data16
cmp
xchg
add
xchg
outsb
je
pop
loopne
loope
dec
cmpsb
or
rorb
push
adc
cli
aad
inc
shrl
into
add
xor
pop
dec
cmpsl
in
std
cmpb
xchg
xchg
inc
dec
xchg
shlb
add
push
jae
es
lret
pop
aaa
pop
sub
arpl
or
loopne
mov
stos
popf
xchg
into
mov
push
sbb
adc
add
xchg
loop
and
lret
pop
xorb
xor
stos
shlb
insb
or
xor
lods
sbb
jbe
push
movsb
pop
sbb
xchg
lret
call
mov
jp
std
fwait
jns
push
push
xchg
into
test
mov
xor
sub
xchg
mov
lock
outsb
imul
cwtl
xor
cltd
repnz
cmp
adc
sbb
inc
lcall
sbb
and
repz
mov
push
pop
mov
add
lods
lahf
inc
movsb
push
xchg
insb
lret
jb
add
mov
push
es
push
xlat
pop
out
repnz
lea
xchg
ss
lret
movsl
push
fidivrs
mov
lock
xchg
pusha
mov
data16
cmp
test
and
jns
xor
arpl
aaa
mov
push
mov
pop
sub
inc
lods
fldenv
push
or
dec
or
add
and
push
pop
sub
jo
iret
mov
or
nop
xchg
bound
jb
gs
adc
push
cmp
fstp
add
add
out
arpl
jbe
sbb
enter
xor
pop
leave
stos
mov
xor
pusha
jnp
shll
cwtl
out
lods
lea
add
clc
sbb
out
insl
add
inc
popf
cltd
inc
jae
jbe
push
cmpsl
jmp
sbb
mov
fdivs
mov
lahf
push
sbb
out
cmp
gs
je
flds
jg
in
sahf
push
cltd
add
sbb
lods
lcall
aas
or
pop
add
sti
leave
push
push
int
arpl
sub
test
popa
mov
das
aaa
mov
repnz
nop
test
outsb
xor
test
inc
fcomip
sbb
cmp
sub
adc
cld
push
add
jecxz
xor
insl
pop
shlb
lock
ja
leave
ss
xlat
cmp
sti
in
mov
lfs
xor
xor
add
xchg
xor
movsb
aaa
xchg
dec
jo,pn
into
movsb
xor
gs
cmc
mov
das
daa
in
mov
roll
pop
test
stos
pop
push
in
xor
ret
cwtl
push
push
ja
idivl
jae
push
jge
out
cmp
lds
sbb
cmp
repz
push
aam
int
and
outsl
int3
icebp
es
cmp
icebp
mov
dec
sub
fwait
sbb
clc
sub
mov
jb
inc
ljmp
cmc
jmp
ds
pop
popa
shrb
jbe
es
cs
pop
shll
cmpsb
mov
xlat
mov
lcall
mov
pop
nop
and
insl
add
sub
ljmp
pop
mov
inc
ret
pop
cmp
cmp
test
rcrl
pop
push
cmc
mov
leave
jge
mov
and
push
nop
lcall
rorb
xchg
adc
jne
xor
rolb
dec
outsb
sbb
hlt
jg
icebp
jmp
leave
mov
xchg
add
mov
mov
subl
sbb
sub
sbb
imul
loopne
jl
and
dec
addr16
pop
and
mov
jmp
xchg
jecxz
xor
jns
ficoml
add
xchg
push
and
and
dec
jb
pop
int3
loope
insl
test
jle
jecxz
add
xor
inc
push
je
scas
lcall
ljmp
xlat
and
pop
ljmp
pop
and
aad
leave
mov
sub
outsb
xchg
mov
add
call
sarb
mov
clc
mov
xor
push
mov
data16
xchg
cltd
xchg
push
test
or
fsub
inc
jae
std
sbb
cmp
clc
xor
mov
aad
xchg
mov
push
outsb
inc
or
fnsave
pushf
xchg
push
sub
insb
ja
jb
loope
je
add
cmp
jns
test
xchg
inc
lret
jl
add
in
pushf
lods
dec
lea
ret
fwait
int
sahf
imul
out
and
xchg
out
nop
inc
shlb
inc
jmp
jnp
adc
inc
pop
xor
xchg
arpl
popf
mov
aaa
or
xchg
jle
aad
cmpb
aaa
xor
fstpl
mov
push
mov
dec
push
rolb
mov
imul
popa
aam
mov
push
push
mov
dec
pop
cmpsb
xor
cmp
int3
orb
aam
add
dec
mov
jp
pop
xor
sarb
mov
jb
push
lret
enter
cmpsb
and
mov
or
and
xor
stos
leave
inc
or
mov
loopne
add
add
pop
sahf
dec
ljmp
sbb
das
movsl
or
loop
out
daa
xor
adcl
cmp
into
repz
jo
sarb
and
out
jp
pop
cld
das
and
sarl
mov
inc
mov
shrl
sahf
xchg
pop
jge
test
sbb
or
mov
pop
fisttpll
push
jp
scas
mov
in
ret
dec
jnp
imul
imul
mov
lret
sub
dec
cmp
insb
out
out
mov
out
test
ret
add
xchg
out
cmpsb
mov
or
push
std
adc
dec
mov
outsb
sysexit
andb
adc
bound
lcall
mov
les
ret
jbe
dec
xor
xor
das
cmpsl
sbb
jle
xor
mov
nop
out
jae
int3
sub
adc
push
daa
push
gs
movsl
out
movsb
data16
mov
in
dec
mov
shll
negb
fsubs
jae
mov
jmp
cmp
and
xor
cs
lahf
lods
mov
aaa
and
sbb
js
xchg
cmp
ficoms
dec
or
cmp
push
mov
cltd
jo
sar
mov
pusha
insb
jns
scas
fists
adc
loope
shl
aaa
xchg
adc
cmp
in
or
fimuls
scas
adc
xor
add
into
adc
int
or
es
inc
mov
cs
stos
xor
adcl
push
mov
sbb
aaa
je
loope
int3
add
lods
adc
sub
cmp
adc
push
call
and
pop
push
add
into
inc
and
xor
daa
sbb
lcall
xchg
jns
in
outsl
scas
ficoml
push
xchg
xchg
xchg
outsb
mov
xlat
fdivs
mov
dec
mov
loopne
pop
popa
inc
in
imul
mov
jp
ret
dec
sub
or
pop
fistl
push
mov
in
rcr
mov
and
and
push
push
adc
pop
jne
and
pop
adc
mov
dec
mov
push
adc
xor
adc
out
daa
jno
lcall
out
cmp
push
mov
stc
xchg
mov
lea
addb
ljmp
int3
das
sbb
push
cmpsl
mov
das
cltd
repnz
insb
mov
inc
int3
movsb
cmc
xchg
jmp
ret
mov
dec
arpl
jg
enter
adc
outsb
lds
arpl
in
lods
push
aam
ja
push
mov
xchg
cmp
mov
cmp
xlat
or
ret
cwtl
lret
into
inc
mov
sub
sbb
add
int
popf
dec
iret
out
movsl
adcl
jle
push
or
lret
sub
in
mov
jge
and
nop
das
push
outsl
and
jl
xor
mov
push
sub
data16
mov
lret
sbb
mov
fdivrl
xor
ljmp
call
push
xchg
in
xchg
das
cmp
imul
jno
psrld
mov
int
jle
aas
data16
fs
dec
cld
or
cmp
test
push
inc
rcrb
xor
mov
lahf
cmp
sub
cs
fsubrp
mov
jmp
jo
cmp
movsb
frstor
adc
mov
scas
sbb
into
das
loop
clc
cld
loop
lods
dec
addb
xchg
bound
mov
jno
lret
xor
cmc
adc
fimull
push
dec
cli
cmp
mov
pop
cmp
rorb
cmp
and
mov
aad
mov
in
adc
loope
popa
xor
cmpsb
out
std
in
jo
jb
aaa
inc
sbb
sub
aas
push
enter
into
shlb
out
mov
and
mov
add
adc
hlt
arpl
aaa
lcall
pop
cmpsb
or
es
push
fcompp
pop
rcr
push
xor
movsb
lahf
xor
in
psubsb
bound
fwait
pusha
adc
test
lahf
push
incb
iret
dec
sti
mov
push
scas
outsb
pop
cmp
int3
jmp
push
cli
fadd
sub
adc
sub
and
imul
xor
les
pop
mov
xchg
dec
mov
adc
sub
loope
test
ret
cld
pop
daa
cmc
pop
xor
dec
and
jbe
int3
jmp
sarb
fsts
push
ror
adc
mov
add
shr
gs
dec
sub
sub
adc
pop
rclb
out
cmp
jbe
push
cli
xchg
add
jmp
jno
cli
inc
outsl
in
arpl
mov
xchg
xor
xor
mov
xchg
jle
stos
inc
mov
int
cli
test
or
ja
add
stos
in
test
xorl
or
xchg
fstl
inc
jno
ret
xor
pushf
incl
aaa
jo
aam
fwait
je
pop
mov
adc
idivl
pop
aad
movsl
fistpl
jmp
mov
sub
subl
subb
jae
xor
jbe
mov
inc
add
pop
lock
dec
jne
push
fisttpl
out
leave
cld
sbb
inc
and
and
xchg
inc
mov
sahf
imul
xchg
push
adc
push
push
add
inc
ljmp
xor
movsl
ja
daa
cmp
out
scas
popl
inc
pop
dec
dec
sbb
xchg
xchg
nop
push
mov
fistpl
mov
scas
mov
lret
dec
xchg
pop
test
or
dec
fisubs
enter
popf
imul
mov
mov
out
test
out
cmp
imul
mov
or
pop
dec
ret
mov
add
mov
inc
addr16
adc
fs
inc
lea
push
ret
lock
out
ret
fidivrl
int3
pop
gs
push
jae
mov
in
inc
pusha
push
xchg
dec
pop
xchg
imul
sbb
lock
xor
fldcw
lret
fsubl
xchg
fstl
popa
jge
xlat
jp
xchg
scas
jle
fistps
mov
jne
inc
or
leave
cmp
cmp
pop
dec
cs
data16
jb
mov
sub
shll
inc
cwtl
dec
arpl
push
pop
cmp
imul
subl
sub
inc
push
outsl
push
xor
xchg
jle
xchg
pop
int
stc
loopne
repnz
test
adc
iret
pop
lcall
xchg
scas
add
sarb
lock
bt
or
lahf
leave
pop
mov
insb
test
scas
mov
gs
out
pop
mov
lahf
fwait
insb
jle
and
mov
push
jae
andb
mov
push
shrb
shlb
repnz
pop
adc
addr16
stc
stc
daa
add
roll
jge
mov
mov
aam
nop
push
jbe
repnz
or
leave
and
hlt
shl
fnstsw
jmp
fdivl
nop
jne
mov
inc
filds
frstor
mov
lock
mov
mov
insb
inc
fidivs
xlat
inc
outsl
inc
sub
push
push
cld
sub
cs
sbb
sub
subb
call
arpl
lods
or
mov
mov
add
xchg
gs
cmp
fbld
rcrl
mov
inc
inc
cmpsl
fwait
insb
mov
loop
jle
fs
aaa
pop
or
das
cwtl
cltd
repz
push
negb
xchg
aam
mov
mov
inc
jnp
mov
push
jl
xor
sbb
cmpb
rcl
sti
cmp
mov
pop
dec
mov
pushf
jmp
in
jbe
mov
in
pop
inc
jnp
mov
inc
pop
gs
push
repnz
stc
loopne
xchg
aam
pop
hlt
dec
push
popa
mov
lock
jp
cmp
or
mov
xor
add
mov
lock
mov
call
push
cmpsb
push
sahf
mov
int3
mov
xor
cmp
xor
lods
in
in
mov
fcomps
pop
jb
in
inc
rol
cmp
push
jmp
hlt
stc
ss
mov
xchg
add
dec
adc
mov
cmp
mov
xchg
add
jp
jo
push
test
jae
add
push
scas
xor
fimuls
pusha
jge
xchg
cmc
lahf
js
fmull
gs
dec
pop
mov
in
and
lods
bound
insb
mov
mov
adc
ret
sub
and
sub
faddp
dec
mov
or
je
push
sarl
sub
adc
outsl
insb
pop
and
mov
pop
outsl
xor
mov
mov
or
sahf
or
mov
pop
movsl
inc
lret
fists
cltd
out
push
pop
bound
negb
aam
subl
and
jle
dec
mov
mov
test
ljmp
arpl
xchg
push
popa
js
pop
adc
cli
out
das
mov
popa
in
push
ljmp
push
mov
mov
jp
bound
pop
loop
cmpsb
mull
push
sahf
inc
inc
or
cmpsl
add
push
xor
decb
test
inc
pop
aaa
inc
dec
inc
in
push
lods
cmp
mov
add
xor
mov
and
cmp
imul
cmc
xchg
sbb
mov
ret
in
lods
es
scas
hlt
stc
xchg
cmpsb
outsl
gs
sub
adc
push
sbb
sbb
adc
and
aad
jge
scas
sti
js
add
add
or
mov
in
jae
mov
notl
and
adc
lahf
clc
scas
subl
pop
mov
test
int
mov
xor
cmp
rclb
sub
cmp
mov
imul
pop
inc
rcrl
rcrl
jo
sbb
movsl
outsb
cs
jns
pop
sbb
dec
out
sti
stos
pop
mov
adc
xchg
lea
mov
and
sub
sbb
iret
sub
pop
into
test
int
movsl
loopne
ja
test
hlt
push
xor
pop
inc
xor
xchg
jnp
rolb
dec
jge
es
or
into
add
nop
lret
popf
dec
les
push
jge
or
outsl
out
popf
pusha
inc
movsb
pop
jne
shll
std
inc
enter
inc
out
push
movl
xor
mov
std
adc
jl
and
xchg
mov
into
mov
lods
adc
mov
mov
inc
or
jmp
add
insb
mov
jmp
aam
and
push
and
test
pop
mov
mov
xchg
push
push
lock
pusha
frstor
and
mov
test
sub
stc
bound
out
pop
adc
jne
dec
sbb
xchg
and
fldcw
pop
test
pop
push
mov
xchg
in
pop
int3
fstp
mov
push
push
fwait
jecxz
test
mov
faddl
fildll
ss
iret
jb
mov
push
out
cmpsb
ja
adc
addr16
js
push
clc
and
mov
jge
jbe
aaa
js
inc
jl
loop
bound
ret
fisttpl
jg
data16
cmp
xchg
gs
mov
xchg
pushf
mov
and
aaa
dec
xor
mov
mov
xchg
fidivl
dec
xchg
pop
pop
adcb
popf
lret
dec
sahf
jbe
sbb
outsb
mov
and
cmp
add
pusha
andl
enter
sub
loopne
arpl
cmp
fidivl
mov
out
pop
es
inc
andb
xchg
roll
testb
adc
bound
gs
mov
popa
cmp
enter
rorb
fldenv
mov
cltd
rol
cmp
cmp
push
enter
mov
ret
imul
jno
xchg
adc
jae
sub
nop
popf
in
dec
sbb
inc
and
movsb
js
sbb
insb
mov
sub
or
cli
sub
addb
or
and
xchg
ja
cmpsl
and
mov
jo
mov
arpl
lret
and
xor
outsl
mov
movsl
xchg
aad
mov
test
inc
hlt
cmp
add
add
std
push
jle
in
faddl
dec
in
jge
xor
lods
insl
mov
mov
lcall
and
lcall
cmp
sub
movsb
dec
fcoms
sti
int
rorl
adcl
or
dec
pop
mov
inc
loope
cld
je
lahf
aad
mov
outsb
into
int3
jmp
loop
cmp
lahf
movsb
das
pop
div
jmp
jns
arpl
les
loopne
mov
imul
daa
jl
andb
pop
int3
sti
aad
mov
jmp
sbb
mov
hlt
pushf
imul
mov
jle
sarl
cmpsb
jno
mov
jns
fists
xor
add
cwtl
mov
jbe
movsb
rorl
dec
mov
fists
shl
adc
or
test
ja
filds
pop
sbbl
roll
jg
xchg
xchg
jge
lods
ja
lea
repnz
xlat
dec
leave
dec
push
ja
scas
jle
xlat
inc
fadds
and
or
cmp
sbb
rclb
sbb
or
sbb
mov
shll
push
push
sub
cmc
outsb
in
cli
mov
aad
enter
pop
cltd
xchg
and
and
call
sbb
lahf
inc
test
xor
mov
data16
outsb
std
add
dec
sahf
fchs
js
dec
lcall
cmpsb
push
out
mov
push
pushf
pop
lahf
jge
push
push
rorb
stos
lcall
call
icebp
mov
fbstp
or
arpl
ljmp
aad
add
jmp
or
insb
and
repz
mov
cli
pop
adc
arpl
and
scas
xor
sti
pop
add
mov
add
push
pop
inc
out
mov
mov
in
fsts
test
arpl
mov
push
cmp
je
cwtl
int
subb
pop
sbb
pop
sub
cwtl
and
lahf
jp
dec
mov
push
out
xor
gs
sub
xor
imul
pop
test
push
adc
daa
rorl
shr
dec
push
mov
mov
mov
sub
test
xchg
int
xor
mov
push
sub
in
shrb
sbb
shrb
xchg
add
adc
push
push
jo
rcrb
pop
xchg
testl
mov
outsl
ret
adc
push
ret
fdivr
and
lret
add
in
push
iret
dec
pop
lret
jecxz
scas
and
movsb
adc
mov
pop
in
dec
mov
inc
test
and
in
rcll
popf
add
pusha
add
jmp
pop
add
jl
mov
mov
and
lret
jbe
pop
or
out
stos
pushw
in
out
add
fs
push
sub
add
jl
or
ds
negl
sahf
stos
add
xor
dec
fimuls
mov
ljmp
ret
lea
adc
insl
dec
and
loope
loopne
xlat
jecxz
cmpsb
movsb
jns
repz
cmp
cmp
fcoml
lcall
dec
mov
pop
stc
push
add
jb
ljmp
dec
pop
lods
and
cmp
sub
jo
inc
dec
push
push
lods
jmp
pusha
and
xorl
mov
out
in
in
popf
push
dec
jecxz
jbe
arpl
add
test
push
lea
pop
or
incl
jl
mov
sarl
dec
fdivp
aaa
push
mov
xchg
lcall
jmp
ljmp
pop
fsubl
stos
mov
mov
repz
pop
divb
dec
dec
in
leave
test
cmc
jno
fsubrl
inc
fdivrl
leave
mulb
sbb
je
mov
cltd
rcrb
lahf
mov
inc
mov
movsl
xor
clc
jge
out
in
or
loope
popa
inc
lret
inc
lcall
xor
pop
inc
inc
push
ficoml
sbb
jnp
fbstp
pop
jle
jle
push
fpatan
mov
cmpsl
sub
cmp
xchg
adc
ss
mov
pusha
sbb
lahf
pushf
testb
cltd
cmc
mov
and
mov
mov
and
arpl
xchg
sbb
ljmp
ljmp
xor
loop
jecxz
pop
add
pop
daa
cmp
mov
mov
sub
adc
push
adc
inc
cmpl
test
insl
xchg
add
cs
xor
xlat
cmp
push
in
std
push
bound
in
and
mov
enter
dec
inc
dec
mov
cmp
cwtl
testb
cmp
jmp
jmp
sahf
lret
leave
add
cmp
cmp
popa
fisubrs
push
ja
decb
inc
xor
pop
cs
xchg
sbb
mov
in
nop
mov
mov
jl
mov
mov
adc
add
bound
int
insb
je
push
inc
jle
rorl
aaa
int
sub
push
or
push
dec
aad
xchg
sbb
push
lret
or
notl
pop
pop
mov
js
inc
or
test
adc
sub
and
pop
icebp
mov
pop
stos
notb
push
dec
add
fidivs
insl
fidivl
jmp
in
adc
xor
stc
or
scas
xchg
dec
lcall
mov
mov
sbb
fdivl
fisubrs
push
push
mov
test
jle
mov
sub
sbb
sahf
xor
push
pop
mov
push
push
cli
test
jnp
push
mull
subl
push
inc
frstor
sub
and
push
leave
gs
hlt
ss
inc
out
xchg
fisubrs
in
fstpl
jbe
test
mov
or
cmp
js
test
fdivs
adc
push
es
or
pop
sub
aam
aaa
inc
mov
add
pop
stos
sbb
pushf
xor
nop
inc
push
cltd
cmpsb
fsubrl
push
fldcw
add
push
fdivr
and
mov
repnz
ret
aam
lcall
sub
sub
lret
mov
int
icebp
pushf
lea
les
ja
enter
jae
adc
pusha
push
jge
mov
addr16
mov
std
lds
mov
cmp
imul
dec
nop
nop
rorl
pop
mov
mov
dec
lods
iret
rcl
cmp
arpl
scas
addr16
push
adc
test
pushf
hlt
mov
cmp
ret
cmc
inc
outsl
xor
je
leave
jnp
cltd
cmc
push
jmp
in
into
loope
sti
pusha
int
fdivs
ja
and
scas
pushf
mov
push
gs
dec
xor
dec
sub
cmp
lds
sahf
pop
inc
sub
push
fldt
sarb
add
sarl
lea
add
or
sbb
jle
xchg
adc
sti
sub
mov
cmp
or
out
push
in
sbb
mov
mov
push
mov
popa
dec
push
scas
ja
adc
add
insb
fsubs
loopne
imul
sar
xchg
test
outsl
jecxz
mov
dec
push
push
adc
cmp
jecxz
fnsave
addr16
mov
fmulp
cmpsl
push
shll
cmp
inc
into
pop
xchg
and
sub
xor
fistpl
lods
loope
push
or
int
adc
mov
std
sbb
call
fsubrl
ss
mov
jns
dec
adc
mov
jge
imul
xchg
hlt
jp
nop
pop
sub
sbb
xchg
mov
fidivrl
leave
dec
push
ret
dec
lcall
xor
sbb
xlat
mull
mov
in
and
imul
sub
xor
xchg
rolb
hlt
jbe
cmp
sub
push
dec
dec
mov
pusha
jle
xchg
dec
out
out
loopne
and
sub
push
pop
sub
int3
xlat
push
inc
mov
mov
scas
bound
pop
mov
push
test
mov
ret
and
sbb
adc
or
roll
sub
xchg
dec
imul
cmp
mov
jge
sbb
mov
mov
push
or
loopne
gs
jl
clc
pop
in
loop
mov
ret
xor
mov
bnd
mov
mov
xchg
mov
cmp
rcl
push
call
and
cmp
sub
xchg
enter
mov
or
das
or
insb
rcl
or
jno
xor
add
mov
lcall
xchg
andl
mov
or
in
jle
in
push
pusha
inc
dec
mov
dec
adc
sbb
pop
pop
loop
imul
dec
subb
xor
cs
fisubrl
inc
imul
inc
mov
pop
fs
aad
in
pop
addr16
ss
idivb
daa
mov
loope
adc
cmp
mov
into
push
shr
xor
xchg
je
sete
cmpsb
mov
pusha
pop
in
cmp
or
dec
xor
imul
ljmp
clc
out
call
aas
fstps
int3
mov
sub
fadds
sbb
ds
inc
pop
aam
xchg
idivl
xchg
in
and
sbb
xor
ret
push
mov
xchg
push
sub
mov
imul
lds
mov
dec
xchg
cmp
sbb
in
jo
fimull
popa
imull
loope
and
xor
xchg
nop
inc
jle
icebp
cli
inc
pop
push
mov
xchg
push
ss
mov
shrd
push
lods
cmp
dec
or
xor
fistps
and
data16
inc
xor
push
popaw
loopne
outsl
push
jbe
movsl
enter
test
rcl
or
sahf
or
jno
lret
jge
es
push
inc
int3
or
cld
jl
adc
dec
pop
add
xor
mov
or
icebp
adc
pop
jb
lods
pop
ss
mov
or
dec
pop
or
jbe
notl
pop
push
xchg
push
lret
insl
ja
sub
lods
stos
pop
mov
or
jno
sbb
js
xor
es
lods
and
cmp
add
movsl
xchg
inc
push
clc
mov
nop
inc
xor
pop
addr16
cli
dec
pop
pop
or
outsl
xchg
mov
cmc
dec
in
mov
loop
pop
lods
lock
aam
inc
jbe
cmp
jp
xchg
push
clc
divl
lock
loopne
and
cs
pusha
lock
mov
imul
fidivrs
jle
pop
dec
jl
pavgw
movsb
lcall
push
aas
ret
cmp
lret
js
movsl
rclb
xchg
xchg
les
mov
stc
out
out
push
xchg
mov
push
js,pn
xor
push
push
imul
jns
pop
cmp
jbe
push
filds
cmp
mov
dec
stos
mov
imul
icebp
jle
push
mov
in
aaa
sbb
ficomps
sbb
mov
xchg
jmp
int3
stos
testl
dec
loop
mov
xchg
insb
stos
addr16
xchg
push
pop
cld
leave
mov
sub
xlat
repz
cmp
addb
sbb
pop
add
jl
push
fscale
pushf
xchg
int3
pusha
xchg
sbb
fimull
or
push
dec
jb
jne
movl
jnp
loope
push
sbb
add
adc
gs
and
rcr
out
cmp
aaa
mov
dec
mov
test
xor
int3
add
movsl
jb
ljmp
push
jbe
cmc
repz
outsl
lcall
ja
out
or
lahf
and
xchg
lds
dec
adc
sub
push
mov
shll
or
jge
push
add
shrb
sub
mov
mov
lret
lods
lea
ficoml
je
rorb
inc
xorb
adc
pop
call
in
cmc
shl
add
mov
mov
lock
or
stc
xor
xchg
xor
test
jbe
loop
pop
and
push
loop
sbb
in
enter
and
ljmp
cmp
jno
je
loope
daa
mov
xchg
jmp
sbb
test
xchg
push
leave
add
xchg
shll
pop
aam
dec
jns
sahf
jnp
sub
cmp
jecxz
cs
movsb
jns
dec
dec
movsb
bound
cs
pushf
inc
adc
cmp
rep
das
push
sbb
andb
mov
cmp
shlb
ja
pop
shrb
rorb
pop
xor
xchg
push
mov
mov
sbb
fldenv
shlb
push
aas
or
das
mov
insl
stos
pop
mov
xor
fsts
lcall
fadds
jecxz
lds
testb
mov
outsl
mov
lahf
lcall
push
loop
add
pop
push
mov
sbb
les
xor
bound
xor
mov
inc
mov
aam
mov
sahf
or
push
sbb
mov
lahf
pusha
xchg
dec
ds
insb
cmp
cmp
imul
pushf
and
sbb
subl
mov
pushf
pop
jle
imul
add
inc
cld
add
push
icebp
dec
movsb
or
lock
and
adc
test
shrb
sbb
imul
sub
push
movl
pop
loop
inc
js
popf
movsb
mov
add
or
movsb
xor
push
fsubrs
hlt
jp
adc
xlat
mov
mov
push
movsb
mov
mov
fstps
add
add
idiv
mov
fidivrs
pusha
movsb
gs
pop
mov
sub
int
cmp
push
pusha
mov
xor
jl
xchg
or
outsl
int
test
loop
jl
cs
push
imul
movsl
lret
jp
daa
inc
mov
sahf
into
outsl
cmp
cmc
popf
or
inc
or
adc
add
cli
int
je
inc
or
clc
ret
sub
push
dec
aam
cmpsb
arpl
jle
push
push
int3
out
and
push
mov
popa
iret
inc
outsb
pusha
adc
lret
leave
ficompl
ljmp
movsl
ret
xor
leave
xchg
dec
push
mov
lcall
push
sbb
call
jge
ss
test
outsl
sbb
jae
addb
dec
mov
std
fmull
pop
mov
sbb
ss
push
cmp
mov
and
insl
pop
jns
das
cmp
test
aam
or
shlb
leave
sub
pop
push
sbb
add
fwait
xchg
test
xchg
pop
jp
mov
cmc
mov
sub
mov
std
imul
push
in
scas
or
lds
out
fists
dec
mov
cmp
mov
out
cmp
jae
inc
cmp
jg
shl
es
adc
jnp
mov
bound
add
or
sbb
jnp
incl
inc
push
inc
addr16
cmpsb
mov
insl
adc
xorl
sbb
cmpsl
sub
das
stos
and
xorb
pushf
inc
or
lcall
sbb
repnz
insl
mov
rorb
out
int
fbld
cli
je
fldl
xor
sub
cli
aas
insl
aaa
lcall
jmp
sbb
in
pop
add
fisttpll
loope
push
push
mov
out
into
scas
daa
fwait
and
inc
dec
inc
push
sbb
and
mov
inc
lods
rcl
mov
and
dec
stc
push
mov
adc
or
pop
test
xchg
lret
mov
fsts
sahf
lds
ds
mov
out
mov
mov
adc
add
loope
imul
out
mov
jne
and
and
mov
jae
and
mov
or
jge
dec
pop
pusha
mov
out
dec
pop
sbb
push
outsb
add
jbe
lock
les
jbe
call
cmp
or
daa
jle
push
xor
ja
push
ljmp
cld
sbb
ficoms
mov
enter
aam
movsb
inc
jg
test
aaa
rorl
insb
je
and
in
stc
ja
rol
xchg
clc
mov
pop
xchg
pop
inc
pop
mov
out
xlat
decb
xchg
push
mov
mov
lahf
xor
lahf
call
dec
fisttpl
nop
or
das
and
and
mov
rclb
or
jmp
cltd
xor
ss
int3
adc
in
adc
mov
pop
hlt
push
xchg
jl
lds
aaa
pop
cltd
cli
jno
call
pop
cmp
mov
add
mov
mov
xchg
xchg
imul
fisttps
hlt
fisttps
and
xchg
je
jno
mov
addr16
sbb
xlat
fldenv
lds
mov
push
add
fbld
icebp
dec
sub
sub
xchg
and
jecxz
or
pushf
add
push
sahf
ss
jbe
movsl
mulb
cmc
sub
sbb
xchg
cmp
lods
aas
xchg
gs
xchg
cli
add
jne,pn
jg
cli
adc
loope
fdivrs
dec
test
mov
push
or
inc
xchg
jns
repnz
push
jmp
clc
dec
pop
test
mov
std
ljmp
pusha
outsl
push
fiaddl
pop
loop
int
lods
loopne
push
leave
mov
ror
adc
in
out
into
cld
push
cld
xor
fidivrl
sbb
cwtl
inc
inc
out
ret
out
push
rorb
mov
int
imul
mov
push
cmp
mov
or
pop
daa
cmp
mov
ret
sub
insb
push
push
push
stos
pop
lock
imul
push
dec
lahf
int
dec
das
xchg
in
xchg
and
pop
cmc
in
outsb
bound
sahf
orl
sti
sarl
insb
inc
mov
inc
jge
mov
cwtl
push
mov
subb
cli
cltd
or
jno
xchg
xor
out
and
fstpt
dec
cmp
movsl
dec
dec
aaa
pop
aad
mov
jns
repz
ljmp
movsb
ja
or
push
enter
ss
mov
adc
sbb
xlat
cmp
nop
faddl
dec
cli
pop
mov
sub
dec
mov
mov
sbb
test
roll
dec
bound
arpl
xchg
or
pop
lahf
ret
or
mov
sti
aaa
icebp
stc
push
pop
push
test
sbb
mov
dec
call
das
sub
cmp
mov
sbb
aaa
mov
test
call
out
push
ljmp
mov
repnz
pop
test
adc
jno
stc
pusha
sub
aam
or
or
xchg
add
jbe
pusha
mov
xchg
mov
push
add
fnstsw
ja
orb
repz
icebp
jo
repnz
enter
dec
lret
xor
dec
mov
lods
popa
adc
xchg
xchg
sub
xchg
inc
xor
inc
mov
adc
push
jns
mov
add
ret
int
add
push
jg
jb
sbb
mov
mov
inc
cs
jl
call
repz
mov
mov
int
lods
cmp
imul
dec
pop
push
cli
xor
push
fnstsw
fcmovnb
dec
push
sub
sbb
aaa
shlb
popf
mov
pusha
fimuls
gs
fwait
inc
adc
dec
cli
ja
pop
mov
jl
mov
xchg
xchg
inc
jmp
cmp
fiadds
sub
add
push
jmp
and
outsl
aam
pop
loop
add
push
mov
push
jbe
sbb
sbb
dec
jo
sti
inc
in
pop
in
or
sarb
sbb
pop
xchg
adc
sub
repz
pop
mov
sub
push
jo
jle
jg
mov
jmp
jg
jl
shll
mov
jae
sub
mov
addr16
dec
sbb
mov
into
test
lock
mov
mov
cltd
cld
clc
pop
shlb
filds
call
imul
jl
fmuls
add
mov
add
loopne
sub
lock
sub
out
mov
jge
push
fucomip
shll
int
sub
aad
arpl
mov
push
stos
xor
dec
daa
add
inc
mov
popa
mov
jge
shrb
add
flds
and
push
pop
repz
add
insl
lahf
iret
xchg
jmp
enter
pop
pop
push
jge
jecxz
out
fcompl
push
jo
pop
popf
lret
jmp
out
jg
rclb
mov
dec
fs
cmpsl
and
xor
mov
inc
lcall
add
lret
pop
std
mov
loope
jnp
xchg
mov
aam
xlat
ror
jne
sub
leave
fadds
dec
and
xor
jb
pop
mov
es
xor
dec
lds
push
addr16
mov
cmpsb
fisttpll
jno
adc
stos
cmp
pop
outsl
fstl
sti
repnz
call
xchg
sub
push
sbb
pop
clc
xchg
jno
mov
sub
fstpt
popa
or
aaa
cmp
bound
xor
push
cmc
pop
pusha
xlat
fcoml
adc
lret
xchg
loopne
push
jnp
mov
dec
mov
setnp
in
mov
test
sub
pop
jecxz
lcall
push
sbb
jl
add
push
cmp
sbb
rcrb
cmp
cwtl
jb
cmc
lock
jmp
icebp
outsb
mov
mov
rorl
push
xchg
mov
movb
xchg
fcom
cwtl
adc
push
aas
stos
mov
pop
or
sbb
pusha
cs
aas
cs
add
stos
push
xor
inc
jmp
fadds
jmp
mov
mov
adc
mov
add
repnz
pop
mov
nop
mov
jo
xchg
scas
inc
mov
xor
in
pop
movsb
stc
push
cmp
inc
int3
sbb
pop
rcl
jb
test
pop
lret
adc
jle
incb
loopne
test
jp
cmp
lock
xor
dec
dec
jae
xchg
es
xchg
sbb
jmp
lret
mov
jp
out
jns
cmc
ljmp
sub
int
jg
xchg
push
dec
sahf
mov
orb
mov
xchg
dec
sub
push
pop
xchg
xor
das
mov
lods
sbb
enter
xor
inc
jle
cld
subl
data16
mov
inc
ljmp
or
jne
or
test
stc
rorb
movsb
out
mov
shlb
mulb
or
outsb
jno
jg
filds
inc
cmp
dec
mov
mov
fmuls
out
cmp
movsl
jl
adc
fdivp
icebp
dec
jge
lods
inc
outsb
mov
xor
or
and
inc
enter
add
ret
aas
jo
scas
pop
mov
rcrl
adc
lods
cld
xor
outsb
mov
in
rcll
fwait
mov
pop
in
dec
lcall
pop
pushf
fs
sub
inc
test
sub
int3
pop
push
mov
je
mov
in
fistpll
pop
xor
fcoms
jo
cmp
pushf
or
and
mov
mov
fnsave
adc
fdivs
xchg
add
out
xchg
mov
out
lods
add
mov
fldcw
ljmp
mov
push
roll
gs
or
xor
push
dec
mov
or
cmc
add
ljmp
cmp
subb
adc
fsub
pop
jle
enter
fwait
cmp
into
pop
push
hlt
insb
sti
insb
insl
adc
jle
cltd
mov
dec
jecxz
inc
push
outsb
adc
bound
cwtl
xchg
push
inc
lds
push
fwait
inc
flds
add
addl
and
lods
mov
outsl
cmp
or
stos
and
ja
or
push
xchg
fiadds
dec
add
add
and
stos
idiv
fdivs
cmp
xor
and
into
xor
mov
adc
lahf
push
outsl
lods
js
lock
pushf
addl
in
dec
in
and
or
sti
popf
es
sub
in
inc
xorb
jb
push
mov
mov
inc
lods
xor
push
bound
mov
xchg
daa
jno
lock
pop
and
xor
ds
jge
insb
add
lods
test
ret
in
out
sub
scas
jb
scas
push
push
cmpsb
movsl
sbb
mov
xor
fs
mov
dec
mov
mov
sbb
sub
xchg
pop
fisttpl
repz
andl
iret
push
sbb
pop
test
aas
jnp
vzeroupper
xchg
lock
cld
cmp
es
cmp
incl
pop
sti
js
adc
negl
ljmp
mov
sbb
insl
mov
pop
mov
pop
mov
rcrl
lahf
mov
and
pop
fwait
fwait
jae
in
in
scas
cmp
cwtl
adc
inc
cltd
js
int3
xchg
xor
mov
pop
insb
push
and
jne
pop
shrb
insb
aaa
sti
push
add
les
fidivl
jle
dec
cld
outsl
stos
adc
cmc
int
insb
and
mov
mov
adcl
mov
popf
dec
mov
cmp
mov
or
std
ljmp
xor
orb
pop
mov
cmp
jp
lahf
dec
push
pusha
rorb
push
sub
cmp
sbb
jbe
jns
testb
lea
sbb
outsl
aam
mov
ljmp
jno
es
cmp
shlb
inc
mov
lock
xor
cmc
sub
test
jnp
xchg
ret
sbb
stos
push
into
pop
mov
es
jp
jnp
jb
mov
sbb
out
fwait
inc
call
repz
test
fildll
aam
jecxz
ja
daa
and
imul
jno
and
testb
xchg
push
cmpsl
sub
es
or
or
mov
or
aam
mov
push
loopne
lahf
adc
mov
adc
mov
ficomps
ss
in
add
pop
lods
mov
call
lcall
repnz
hlt
mov
xor
js
inc
cltd
stos
jne
inc
pushf
mov
fcoms
push
test
push
jp
push
lods
xchg
inc
loop
mov
lods
out
cmp
xorb
movsl
das
sub
lds
fwait
scas
stos
jb
subb
out
popf
adcl
inc
ds
shl
fdivrs
fwait
fs
dec
and
lcall
shrb
repz
xchg
push
aas
stos
imul
cmp
and
scas
es
pop
insl
mov
mov
fistpll
push
mov
mov
dec
fdiv
pop
push
loopne
adc
icebp
push
es
scas
adc
mov
rorl
out
xchg
jno
dec
mov
adc
insb
pop
add
mov
popa
sbb
lock
fs
mov
jae
xchg
xchg
mov
lea
or
js
test
lret
cmpsl
or
into
mov
sbb
inc
loopne
bound
lret
stos
fcoms
cmp
js
scas
jecxz
pop
cwtl
jns
out
cltd
jmp
mov
fmulp
popf
adc
cmpb
out
dec
or
push
mov
jg
sub
and
sbb
dec
pop
jmp
adc
imul
fistps
xor
push
add
fnstsw
loope
push
popf
imull
and
movsb
dec
mov
into
pop
lods
clc
and
add
cs
mov
xchg
imul
add
mov
mov
xchg
callw
xchg
roll
hlt
jae
insb
mov
push
and
adc
jb
cmp
sbb
inc
pop
call
and
int3
out
les
popf
sub
dec
aad
push
jp
gs
fdivl
push
lds
jb
sub
outsl
xlat
push
insl
pop
sarl
add
scas
arpl
push
jne
shlb
repz
push
arpl
push
xor
pop
mov
push
out
fmul
imulb
inc
sbb
repnz
pop
or
dec
mov
das
jle
and
sti
idivl
add
ja
pop
cmp
aad
iret
int3
xchg
mov
leave
mov
scas
scas
add
jne
push
pop
in
inc
outsb
loope
cmc
pop
pop
cwtl
arpl
add
mov
xchg
setae
into
add
jle
es
pop
aaa
lea
adcl
test
lcall
lahf
cmc
push
aaa
jne
dec
mov
ficoml
jmp
shll
and
push
icebp
or
pop
aam
mov
clc
jo
jns
pop
push
mov
pop
adc
mov
mov
gs
movsl
daa
out
in
les
popa
ret
test
fs
cs
adcl
sub
mov
push
jmp
arpl
in
frstor
das
cwtl
cltd
dec
xlat
icebp
mov
cltd
into
insl
mov
jl
iret
xor
lds
fdivr
bound
or
outsl
inc
adc
filds
inc
pusha
jae
cmpsb
sbb
in
ss
mov
sbb
add
in
pop
and
jg
push
ds
pop
mov
enter
outsl
outsb
insl
ror
popf
daa
or
sub
sbb
dec
xchg
jns
cmpsb
push
inc
sbb
jne
cmp
test
push
fcmovnu
add
push
es
pop
hlt
sub
mov
mov
xchg
fidivrs
mov
mov
in
and
inc
and
lock
call
xchg
in
xchg
jnp
cmp
loopne
pop
pop
mov
and
mov
movsb
outsb
nop
sbb
pop
rcll
mov
idivb
add
mov
pop
scas
inc
inc
lea
xchg
lods
idiv
into
jl
jp
push
fidivrs
or
pop
and
sti
jne
aaa
mov
loopne
mov
sbbl
mov
outsb
dec
push
push
add
sub
rclb
fiadds
cmpsb
fwait
jne
lea
sbb
pop
fimuls
and
cmpsb
dec
or
dec
or
pop
jnp
sub
rcrb
push
mov
adc
mov
out
cwtl
aam
rolb
push
rorb
cmp
mov
or
lret
sbb
xchg
pop
jae
pop
inc
pop
cmp
ja
adc
test
push
lea
push
jb
jns
or
pusha
and
pop
popa
push
mov
and
popa
sub
xchg
mov
dec
sub
adc
jg
out
and
std
xor
fs
std
xchg
aas
mov
lret
sub
cltd
loop
jmp
pop
inc
out
ret
push
sbb
imul
aas
rorb
out
xchg
pop
clc
pop
or
sbb
ss
cli
push
mov
mov
and
and
data16
pop
and
inc
jecxz
xchg
mov
ljmp
repnz
inc
or
ja
mov
sbb
dec
lahf
scas
jbe
icebp
pop
sub
mov
mov
push
sbb
sub
push
jns
sub
inc
cmp
or
push
in
mov
inc
icebp
push
xor
add
sti
pop
push
imul
fcomip
inc
fisttpl
jecxz
cmp
ret
fwait
cmc
sbb
inc
mov
in
dec
aam
scas
sti
xchg
cwtl
rclb
mov
push
cmp
cltd
and
inc
sub
test
inc
push
jne
jmp
pop
fdivrs
outsb
rcr
cld
in
insb
fdivr
xchg
cltd
xchg
lock
push
push
push
rclb
fistpll
sbb
jmp
scas
or
lds
lods
iret
jns
leave
js
push
sbbl
and
jb
iret
mov
ds
aaa
cmp
test
sub
jno
repnz
mov
cmp
dec
mov
and
dec
inc
xor
inc
jno
in
loope
repnz
insb
scas
addr16
mov
push
shlb
ljmp
out
stos
stos
lret
addl
mov
popa
lods
mov
cmc
sub
or
rcrb
mov
push
and
out
lds
adc
das
in
test
or
and
into
jbe
add
xchg
pop
in
xchg
mov
jle
fistpll
dec
ret
cmc
push
shl
pop
xchg
lahf
outsl
pop
lds
cmp
stos
or
out
lea
daa
xchg
mov
sub
sub
jmp
sub
fstl
add
gs
out
jnp
or
jle
push
cli
icebp
gs
mov
ret
cmp
adc
add
ja
sub
inc
ror
sub
test
push
mov
xor
inc
movsb
xlat
jno
gs
gs
adc
mov
adc
or
ret
pop
sbbb
pop
ljmp
hlt
data16
push
adc
dec
dec
mov
aad
sbb
cmp
xchg
loop
ret
gs
js
int
xor
sub
lods
scas
mov
pop
mov
sbb
rolb
ds
scas
jl
fs
add
fstps
xchg
stos
or
popf
outsb
rcl
push
mov
adc
orl
sub
cltd
cmpsb
cmp
sub
scas
pusha
xchg
mov
jl
inc
pop
xchg
sbb
fwait
fs
imul
jp
lds
loopne
jle
daa
icebp
shrb
out
cld
nop
cld
mov
mov
cmp
pushl
and
rorl
dec
scas
pop
xchg
imulb
cmp
in
mov
mov
lahf
mov
jno
out
popf
jp
mov
sub
fistpll
pop
clc
aam
and
cwtl
inc
adc
loopne
inc
sbb
in
cwtl
aam
out
xchg
and
dec
sub
mov
mov
fidivl
out
insb
adc
pusha
xor
mov
lcall
scas
fcompl
dec
sbb
into
call
insl
data16
sahf
cld
sub
cwtl
mov
mov
neg
in
mov
clc
ret
mov
jbe
cltd
or
lahf
xchg
jne
ret
shlb
push
pushw
adc
add
rorb
out
dec
lods
jno
stc
xchg
inc
xchg
jp
mov
lret
adcb
dec
jbe
sub
subl
mov
popl
dec
into
shll
mov
pop
dec
popf
add
xor
pop
mov
lock
call
sbb
mov
nop
dec
mov
push
fwait
jo
adc
add
pop
pop
push
mov
mov
rcl
mov
loop
mov
outsb
fdivp
ljmp
jge
ret
jnp
mov
sub
mov
mov
negl
inc
add
push
mov
xchg
sbb
imul
imul
fimull
lret
xchg
sub
mov
inc
fldcw
jo
int3
popa
jmp
sub
outsb
ljmp
xchg
mov
ret
pop
test
idivl
jg
lcall
mov
insb
inc
out
sub
lods
inc
popf
gs
cltd
aam
sti
std
push
add
fildl
pop
cmp
inc
out
add
jae
test
fcoms
les
shr
jbe
in
je
adc
jg
pop
inc
js
das
adc
ss
add
stos
loopne
jne
ss
icebp
daa
arpl
lods
adc
mov
std
fs
cld
or
push
int3
mul
or
add
out
mov
xor
jb
mov
lcall
test
or
inc
movsb
cmp
imul
mov
and
add
incb
pop
cmp
pop
inc
enter
or
mov
fisttpll
xchg
loop
xor
dec
xor
lret
push
or
mov
mov
frstor
xor
push
insb
and
loope
fsts
fwait
jnp
jbe
ljmp
sub
das
sbb
add
add
mov
scas
movsb
sbb
jne
cmp
mov
mov
test
sarl
mov
fdivr
rclb
sbb
jae
and
sbb
test
sub
shrl
cmovo
call
insl
iret
xchg
je
loope
push
push
mov
sub
fs
fwait
sub
mov
pop
mov
mov
in
xlat
jmp
jne
xchg
data16
sti
push
push
pop
jae
adcl
cmp
clc
xchg
jne
out
jecxz
lock
popa
adc
adc
sub
cmp
pusha
adc
cmp
fsub
jp
or
mov
loopne
repnz
fs
mov
ficompl
loop
fcoms
cmpsb
inc
movsl
in
mov
sub
ds
pop
daa
add
fwait
addl
mov
ja
rcrl
lods
std
push
cmp
stos
xor
inc
bswap
and
and
jnp
push
pop
pusha
jg
dec
mov
sub
mov
pop
and
jb
pop
cmpsb
test
adc
test
pop
mov
inc
mov
daa
aam
and
cltd
xor
add
jne,pt
xchg
shl
dec
adc
movl
pop
jecxz
fwait
mov
inc
push
rol
in
sbb
inc
arpl
int
xchg
pop
or
dec
xor
jo
imul
inc
inc
arpl
addr16
mov
and
je
in
arpl
add
fists
and
adc
xor
cld
xchg
and
add
mov
out
iret
inc
mov
mov
and
jecxz
xor
loopne
in
and
repz
push
lods
pop
dec
ret
sub
jge
push
jns
in
cs
movsl
fwait
into
sub
cmp
dec
ljmp
icebp
lods
fadd
and
inc
rol
lock
adc
in
stc
pop
jecxz
clc
inc
xchg
cld
lock
aas
daa
pusha
inc
or
arpl
mov
insl
jl
lock
dec
xchg
inc
jno
dec
pop
and
lods
dec
insb
mov
inc
stos
hlt
ljmp
xchg
and
cld
shrl
or
mov
cwtl
dec
push
scas
and
pop
xchg
insb
enter
pusha
mov
insb
sbb
sti
sub
pop
aas
leave
imul
inc
xchg
cld
mov
mov
jl
test
cmp
cs
nop
xchg
inc
les
inc
adc
cltd
lahf
rcll
mov
inc
enter
xor
xor
mov
mov
push
movsb
lret
add
jne
mov
out
rol
jae
push
mov
hlt
loopne
lods
adc
cmc
pusha
or
pop
xor
inc
dec
push
test
test
imul
iret
mov
out
or
ja
pop
xchg
jae
enter
arpl
cmp
xor
xchg
fiadds
inc
icebp
pop
xor
push
and
push
xor
xchg
movsl
adc
and
mov
mov
shlb
pop
jb
push
aaa
sub
fnstsw
cs
fstl
mov
ljmp
cmc
lea
test
mov
and
inc
sbbl
mov
fldcw
jmp
daa
mov
dec
js
icebp
sbb
mov
xchg
loopne
dec
xchg
subb
ja
cwtl
sti
push
lcall
fmuls
shrl
sub
push
pop
and
jge
inc
mov
cmc
lahf
and
inc
ja
push
ficoms
das
push
mov
movsl
gs
dec
jb
xor
mov
cmc
movsl
inc
and
xorl
lods
push
pushf
add
mov
aaa
or
push
clc
dec
cmp
hlt
and
jb
or
add
jnp
into
mov
cmp
fistl
lds
mov
mov
dec
js
and
scas
shr
xor
push
lret
inc
popf
in
out
fwait
mov
nop
mov
outsb
xor
ja
fwait
shll
dec
outsl
pop
jno
cmpsl
inc
sbb
lret
xchg
mov
mov
scas
pop
xor
xor
push
jns
mov
jo
push
adc
lock
subl
jno
inc
lea
xor
inc
gs
cwtl
aaa
out
and
aaa
add
in
popf
adc
notb
and
or
mov
push
bound
cmp
jl
lods
mov
in
std
xlat
mov
xchg
insl
mov
jmp
jmp
dec
fwait
mov
mov
xor
mov
insl
jae
rorb
cmp
inc
imul
push
out
cmp
dec
inc
pop
in
in
das
data16
dec
and
add
dec
aas
adc
dec
push
cmpb
fisubrs
inc
es
jbe
clc
xchg
lret
sbbl
lds
cmpb
dec
mov
push
fiaddl
jg
mov
xor
shrb
ss
mov
inc
push
jae
es
sti
rcrb
cwtl
in
popf
sub
enter
or
ficoms
divb
cmp
pop
repz
dec
out
dec
push
insb
enter
pop
pop
fimuls
dec
fs
mov
mov
roll
fiadds
test
ds
jmp
filds
test
mov
cmpb
aas
adc
pop
push
xchg
lret
mov
imul
inc
jnp
shr
outsb
push
shlb
scas
add
fiadds
jno
mov
pop
imul
sub
lahf
shrb
dec
ret
in
into
dec
scas
cs
popf
and
push
cmpsl
repz
iret
xchg
shr
cwtl
iret
jle
mov
pushf
adc
mov
xor
add
jns
lret
cmp
rorb
add
pop
loopne
jnp
idivb
subl
lock
and
mov
xchg
add
lods
push
sub
mov
lods
lret
mov
int
mulb
in
jl
rcll
inc
daa
or
mov
jb
scas
mov
loope
jo
imul
and
push
icebp
or
arpl
xor
and
idiv
cld
cmp
cmp
dec
or
xchg
loopne
inc
xor
or
pop
sub
and
push
cld
call
sbb
lret
adc
jg
inc
jb
cmpsl
outsb
cmp
jg
shr
ret
lret
imulb
push
adc
pop
repz
insb
into
mov
inc
mov
and
mov
or
movsb
jnp
jge
cwtl
xchg
mov
xchg
outsl
jle
pop
dec
out
or
bound
aaa
bound
jle
fwait
jmp
mov
jmp
dec
stc
jnp
dec
insb
sub
jecxz
ret
and
stos
mov
xchg
dec
js
iret
jmp
std
pop
jp
inc
xchg
sub
inc
iret
outsb
out
pop
cmpsl
dec
loop
xchg
call
mov
xchg
sbb
adc
mov
pop
pop
fsubs
std
and
mov
xchg
outsl
mov
test
outsl
xchg
mov
push
mov
lea
cmp
mov
mov
mov
add
inc
out
sub
pushf
ret
pop
sbb
jle
pop
ficoml
xor
fimull
mov
movsb
and
jo
inc
scas
and
scas
test
aad
cmp
out
out
mov
lds
mov
pop
popa
shl
mov
loop
push
test
jecxz
mov
leave
test
jl
les
mov
aaa
int3
and
icebp
jnp
rorb
sahf
test
add
mov
jno
pop
sbb
stos
int
mov
jno
mov
ss
or
mov
push
mov
xchg
xor
dec
lret
mov
adc
xchg
cmpsl
rcrl
mov
inc
loop
cmp
shl
mov
cmc
cld
pop
sub
sub
fidivrl
lret
push
adc
sti
push
es
sahf
sub
jnp
call
mov
push
aaa
mov
and
jge
int
ror
jmp
popf
inc
xchg
inc
call
scas
xor
sub
xchg
movsl
and
outsb
mov
rep
mov
sbb
das
aad
jl
mov
cmp
xchg
pop
sub
xor
xor
call
int3
fs
mov
addb
cmpb
out
aam
dec
or
and
push
xchg
cmpsl
sbb
lea
pop
mov
xor
pop
pop
fbstp
jg
jno
xchg
push
sub
cmp
sbb
or
mov
fsts
loopne
loop
lods
and
fisubrs
dec
loope
iret
mov
int3
fnstsw
cs
jne
pop
mov
imul
decb
adc
add
in
and
rorb
add
dec
in
in
inc
pushf
ds
adc
out
adc
pop
inc
shll
mov
lods
dec
dec
jp
jb
mov
push
sti
pop
cmp
pop
fwait
jp
orl
push
movsb
sub
aad
scas
push
ja
fnsave
jmp
adc
clc
fidivrl
out
pop
out
das
in
repz
mov
cmp
ss
pusha
ret
dec
xbegin
mov
out
hlt
repnz
lcall
or
xchg
xor
push
or
lods
in
or
dec
shlb
or
sahf
mov
sti
add
push
xchg
ljmp
inc
lret
outsb
pop
mov
sbb
pop
mov
adc
adc
rorl
fwait
sbb
clc
sbb
or
jae
mov
sbb
xor
inc
aas
fwait
xor
les
lret
lea
add
gs
in
shrl
adc
mov
jmp
ljmp
and
jge
insb
xchg
mov
das
mov
add
in
mov
pop
lds
sbb
test
mov
push
outsb
jo
pop
shll
dec
push
and
lea
mulb
dec
mull
in
push
push
add
and
outsl
and
and
loop
and
addr16
inc
rcrl
and
mov
pusha
ret
outsb
xchg
jo
adc
ds
xor
gs
pop
mov
rorb
cltd
pop
sub
data16
stos
andb
cmp
fisttpl
lods
push
pop
cmp
testb
xor
outsb
pop
and
sbb
mov
jae
push
fcom
jle
movsb
mov
fisubs
jge
mov
out
xchg
imul
mov
pop
lcall
jne
nop
add
out
xchg
call
pushf
fadds
pop
and
cpuid
dec
push
mov
jnp
and
lret
bound
int
shl
aaa
test
xchg
dec
gs
adc
out
aam
add
dec
aam
rcl
lret
bound
aas
test
sbb
sub
pop
adc
aaa
add
movsb
fcmovnbe
xchg
jmp
sub
ljmp
push
mov
movsl
mulb
mov
inc
lret
push
sub
cwtl
or
push
mov
enter
int3
jae
inc
mov
dec
xchg
jbe
or
shll
push
sbb
lds
pushf
leave
mov
js
pop
or
or
fwait
test
fimuls
add
dec
dec
cli
jbe
sbbb
mov
push
gs
adc
lods
add
cmpsb
fdivrp
hlt
outsl
jmp
rorl
adc
mov
push
repz
lea
scas
inc
jbe
push
push
mov
outsb
push
xchg
pop
ss
mov
pop
cmp
inc
call
cli
mov
stos
xor
dec
hlt
mov
adc
shll
outsl
insl
mov
xchg
or
xchg
sahf
cmp
pop
adc
dec
mov
repz
cmpsl
sub
out
aad
push
imul
mov
cmp
imul
cmp
mov
out
or
adc
lds
das
mov
ljmp
xor
cmp
inc
cs
dec
jle
sbb
orl
lcall
mov
orps
fistl
mov
lret
fiadds
push
pop
loop
mulb
xor
mov
add
data16
in
mov
pop
xchg
jbe
sbb
stc
cltd
ja
jno
jns
pop
sub
pop
fcoml
push
sbb
inc
mov
roll
fs
inc
fistps
or
xor
mov
out
scas
sub
mov
xchg
xchg
outsb
mov
stos
xchg
mov
sbb
inc
ret
in
jp
scas
repz
int
inc
mov
or
mov
pusha
inc
push
dec
fidivrs
dec
sub
dec
add
in
fbstp
repz
fidivl
addr16
pop
data16
or
add
jge
loope
dec
shlb
je
dec
es
insb
fildll
lret
cwtl
ret
nop
cmpsb
repz
sub
mov
scas
subl
push
lods
aam
mov
rcl
ret
das
fdivrl
xchg
and
pop
out
mov
fwait
stos
aaa
sub
movsb
inc
lods
jle
popa
cmp
out
lea
adcl
sti
add
lock
dec
fdivrl
or
jb
loope
cmp
roll
aaa
iret
int3
cwtl
test
sub
jecxz
dec
ljmp
in
add
int3
push
mov
jns
push
push
xor
xor
adc
fwait
mov
push
mov
je
inc
sbb
enter
xchg
loopne
lea
arpl
and
sub
in
hlt
fldl
and
out
lahf
or
push
mov
inc
mov
pop
stos
mov
cld
pop
into
lock
fwait
mov
sbb
scas
imul
enter
sub
popa
ds
cs
jns
ds
jb
jnp
aas
inc
sub
push
test
inc
imul
out
sbb
popf
shl
push
mov
jb
jp
std
arpl
jge
aad
lcall
cmp
pop
clc
stc
inc
cmp
cmp
or
aas
push
adc
aaa
inc
cmp
popf
adc
sbbl
or
lahf
ret
mov
sarb
dec
sbb
sbb
push
mov
sbb
mov
clc
or
hlt
push
jno
pop
or
dec
inc
sbb
push
leave
ds
popf
mov
and
adc
pushf
xchg
add
add
ja
lods
pop
cmp
jns
xchg
sbb
stos
mov
dec
adc
addr16
cmp
lahf
dec
push
mov
out
sbb
cld
bound
lahf
adc
add
lret
lock
fldl
dec
nop
outsl
sarb
sub
or
aas
cmp
cmc
dec
lock
mov
mov
mull
push
or
mov
adcl
mov
lcall
and
fwait
aas
pop
jecxz
daa
andl
mov
repz
fidivl
add
pop
and
ret
lret
loopne
loope
cs
mov
dec
pop
mov
dec
and
insb
jecxz
push
insl
int
push
hlt
xor
xchg
movsl
lds
xchg
lahf
call
shlb
dec
bound
adc
clc
test
lret
in
push
fst
mov
sub
leave
data16
cmp
pop
jbe
pop
shrb
or
jo
cld
sbb
push
sbb
popa
mov
sbb
mov
in
inc
add
ffree
cs
fistpll
mov
sub
outsl
xchg
sub
in
xchg
mov
cli
mov
pop
add
lahf
xor
jb
push
add
stos
movsb
lods
dec
stc
pusha
outsb
cld
cmp
popf
sbb
jb
inc
cmp
cmp
inc
cmp
cmpsb
pop
je
cwtl
outsl
imul
xor
rorl
mov
popa
pushf
loop
push
int
sub
inc
cmpsb
into
in
bound
fs
in
xor
mov
repnz
lds
adcb
movsl
cmp
dec
jge
jecxz
push
scas
lock
sbb
push
jns
sbb
jle
mov
cmp
int
and
xor
leave
sbb
movb
adc
adc
jbe
lahf
push
add
mov
inc
test
adc
stos
pop
out
push
xchg
xor
lret
lret
xchg
xchg
inc
js
xchg
sbb
pop
sbb
push
test
sbb
jbe
mov
pusha
push
cltd
sbb
dec
mov
adc
cmpsb
xlat
or
mov
xchg
movsb
stc
sti
and
andb
popf
sbb
ds
mov
xchg
jae
popf
imul
sbb
xchg
and
pop
sub
push
lea
test
fisubrs
jb
hlt
adc
xchg
push
xchg
mov
dec
mov
and
add
lock
xchg
jmp
xor
mov
and
ret
pop
sti
sarl
jg
jg
popa
movsl
mov
das
push
ljmp
mov
imulb
repz
mov
sbb
push
addb
add
mov
push
jg
arpl
mov
push
push
scas
out
lods
cmp
cmp
xor
js
cmp
in
mov
lds
xor
rorb
mul
inc
xchg
xor
pop
aaa
xchg
call
shrb
sbb
push
cmc
pushf
pusha
mov
jmp
xor
sub
sub
sbb
xlat
lods
scas
or
popf
inc
mov
jmp
mov
push
and
xchg
test
mov
jg
loope
or
testl
jne
xchg
movsl
cmpsb
into
frstor
call
imul
out
in
movsl
rol
test
addl
mov
add
out
cs
rcrb
adc
or
inc
mov
lods
cwtl
mov
sbb
jmp
jmp
or
filds
lahf
loopne
sbb
ret
mov
iret
nop
inc
inc
sub
subb
pop
ds
inc
enter
add
mov
xor
scas
gs
pop
jl
and
push
sbb
shrb
repz
sub
mov
add
leave
or
dec
gs
mov
inc
lret
mov
mov
fmul
das
mov
pop
hlt
dec
mov
jg
dec
pop
repnz
ret
call
out
jg
xor
lods
add
imul
jl
pop
negl
ret
cmp
jg
loop
jle
xor
pop
jbe
int
add
movl
mov
xchg
dec
lcall
jmp
push
or
jne
in
outsb
test
xchg
idivb
push
and
sbb
fsubl
jmp
inc
lret
mov
js
ja
or
ss
mov
push
repnz
xchg
arpl
jg
or
sbb
inc
and
in
pusha
dec
and
push
mov
test
pop
mov
sarb
dec
jb
mov
inc
dec
jmp
jae
mov
push
inc
in
rcrl
jp
mov
or
loopne
arpl
jp
or
mov
in
insb
ror
ror
lret
sub
jno
and
lret
in
lea
sub
arpl
mov
insl
jne
in
or
add
sub
add
jl
mov
cmc
jnp
fs
fbld
mov
push
jno
outsl
repnz
dec
daa
xor
cmp
mov
in
sub
sbb
adc
mov
inc
leave
sbb
pop
enter
push
ds
loopne
cld
adc
insl
mov
cmp
mov
std
repz
mov
pop
mov
pop
enter
or
mov
pop
fcoml
sarl
movsl
cli
lret
ret
mov
adc
adcl
lods
pop
lret
aaa
sub
fiaddl
mov
cmp
mov
loope
aas
cs
in
ds
cltd
in
movsb
and
sahf
xor
fdivl
icebp
jl
test
jb
mov
inc
mov
adc
pop
cwtl
adc
dec
ljmp
push
mov
mov
jecxz
fmuls
andb
dec
mov
sbb
mov
mov
orl
cmp
repnz
or
pop
aad
dec
loop
sbb
or
loopne
mov
out
cwtl
movb
pop
daa
pop
adc
lods
sub
xchg
mov
xchg
cmc
push
cmp
sbb
out
mov
add
jg
out
out
imul
pop
adc
cmp
out
xor
loop
stos
cmpsl
das
int3
cwtl
ret
negl
xchg
xchg
arpl
sbb
mov
mov
sbb
pop
aaa
scas
adc
add
mov
xchg
mov
into
add
aam
mov
dec
mov
sub
xor
je
ret
inc
subl
sub
push
mov
xlat
pop
stos
bound
xchg
and
pushf
mov
mul
and
xchg
cmp
inc
in
mov
dec
dec
sbb
gs
leave
jg
cmpsl
sub
push
mov
sub
mov
mov
push
add
sbbl
mov
mov
mov
std
test
jl
push
mov
pop
nop
xor
jae
xor
or
mov
aaa
fstps
pop
sbb
ud1
fisttpll
sbb
inc
cmp
xchg
pop
cmp
sub
movsl
sarl
shlb
xlat
stos
lock
daa
in
ficoms
mov
push
loope
cmc
cmc
jmp
ret
mov
dec
and
ret
arpl
jne
xchg
fwait
mov
mov
popf
call
push
cmp
add
divl
jo
pop
js
cmp
popa
call
or
out
sti
or
dec
pop
mov
mov
mov
adc
cli
dec
out
repnz
idivb
push
and
inc
and
arpl
jecxz
inc
cli
and
dec
xlat
fisubl
xchg
lods
dec
call
sub
adc
adc
pop
in
mov
fwait
imul
fs
das
mov
xor
outsl
xchg
out
xchg
dec
pop
inc
adc
ret
inc
dec
jo
loope
negb
sbb
test
and
test
out
cs
hlt
jmp
arpl
mov
cmp
das
pop
adc
push
fimull
je
mov
int
push
std
or
fucom
jg
xchg
gs
jmp
fisubrl
mov
outsl
mov
bound
sar
mov
fildl
cltd
xchg
lret
stc
sti
jne
mov
jb
push
adc
add
xor
cmp
mov
lahf
aad
add
cli
cmp
mov
cmpsl
xchg
adcl
fdivl
and
movsl
xchg
pusha
addr16
in
push
mov
cmp
popf
lret
call
insb
jb
sbb
sub
test
pop
and
mov
jl
lods
add
les
mov
repz
mov
add
sub
mov
lods
or
sbb
push
cld
sub
xchg
ret
std
stos
mov
xchg
lods
mov
mov
hlt
insb
pop
xor
pop
mov
push
fwait
pop
and
jno
xchg
jmp
jns
int
xchg
mov
stos
sbb
jns
into
and
insb
orb
aam
jl
in
mov
movsl
in
leave
ljmp
mov
sbb
popf
mov
sub
jne
nop
js
pop
cltd
rorb
fsub
cmp
push
pop
test
or
jmp
stos
push
xchg
xchg
push
pop
mov
or
js
data16
aam
int
cld
adc
pop
inc
mov
cmp
shr
dec
mov
ret
test
out
push
pop
sar
add
jmp
loope
xor
pop
push
push
pop
xchg
mov
sbb
inc
cmp
mov
fwait
jae
jmp
stc
push
mov
rcl
dec
test
dec
jl
sub
cwtl
cmp
xor
cwtl
mov
lea
movsl
xor
test
fdivs
sarb
ss
test
jnp
cli
mov
sarb
mov
repnz
subb
and
inc
adc
notb
add
pop
nop
or
push
fcmovnu
cli
in
pop
out
add
shr
sub
or
fucomp
inc
or
cmc
cwtl
je
shll
lea
je
push
aaa
inc
hlt
insl
mov
push
pop
xchg
xor
jmp
into
icebp
cmpsb
icebp
ja
fsubp
sub
scas
inc
clc
sub
jns
ss
sar
adc
outsb
inc
cmpsl
in
das
mov
and
aaa
cmp
mull
sahf
pop
cmp
sub
push
idivl
insl
jmp
sub
iret
cli
nop
mov
sbb
out
addr16
out
and
push
popa
xor
jmp
pop
rcrl
sahf
shlb
sub
and
push
ds
in
fstl
push
mov
jne
jp
jb
mov
movsl
push
pop
mov
inc
pop
jnp
jle
mov
lods
pop
mov
and
inc
xchg
dec
mov
push
push
mov
mov
jecxz
filds
test
hlt
std
or
push
lret
vpsubb
jle
nop
mov
gs
fstpt
jl
sub
and
jo
sub
mov
test
sbb
adc
imul
or
mov
sti
clc
jno
imul
in
add
lret
mov
inc
rcl
pop
push
mov
repnz
movsl
dec
and
sub
dec
mov
clc
out
pusha
jo
cltd
test
or
and
mov
adc
xor
insb
and
cmp
pop
js
xor
add
mov
push
dec
fbstp
into
repnz
frstor
ljmp
inc
data16
andb
xlat
cmp
adc
enter
jmp
fxam
call
push
add
jle
mov
mov
notb
in
scas
ret
jno
xor
push
mov
out
fisubrl
xchg
fnsave
sbb
std
scas
xor
subb
sti
jns
mov
inc
jl
outsl
jbe
jp
iret
mov
fldl
notb
fiadds
fs
xchg
pop
xchg
pop
addr16
xchg
inc
data16
dec
mov
shrb
test
xor
push
insb
mov
in
and
fisubs
imul
ss
xchg
cmp
and
out
cmp
mov
dec
daa
std
stos
cmpsl
into
phsubsw
jmp
ljmp
imul
fcmovnbe
and
test
popa
sbb
aaa
rorb
je
adc
in
gs
and
sbb
fwait
pop
or
pop
es
ss
stos
xchg
loope
pop
adc
push
fistpl
xchg
cmp
adc
jp
push
insl
add
adc
mov
push
dec
lods
add
lahf
lret
test
pop
out
push
test
or
fidivrs
in
aam
mov
hlt
mov
sahf
sub
mov
pushl
push
into
xchg
aaa
cmp
mov
nop
add
and
je
mov
mov
push
ss
xor
mov
ret
call
ficoml
decb
and
out
lret
in
hlt
dec
pop
jbe
lea
pop
or
ret
sahf
stc
push
dec
xchg
fldenv
push
push
mov
leave
das
add
dec
std
and
filds
sbb
cmp
inc
xchg
jp
shrl
ljmp
and
imul
xchg
add
pushf
pop
sti
cltd
jge
inc
xor
mov
fiaddl
hlt
push
cltd
lcall
jg
mov
and
jl
mov
fmuls
pop
and
in
pop
test
pop
push
jb
push
imul
inc
lods
lods
xchg
in
jp
les
xchg
mull
subb
pop
sbb
js
outsb
mov
dec
pop
add
jb
in
add
or
das
jge
or
push
jno
xchg
inc
sub
xchg
mov
addl
arpl
cltd
movsl
xorl
ror
mov
or
or
pop
xchg
inc
jmp
jg
jge
xor
jae
cmpsl
dec
add
icebp
mov
pop
cmp
push
mov
sahf
and
loope
inc
jb
mov
lock
sahf
xor
mov
ja
xlat
jp
adc
pop
mov
xor
push
ss
pop
out
daa
cwtl
mov
mov
aaa
xchg
sbbb
out
aaa
call
mov
mov
push
addl
repz
repz
cmp
loop
repz
push
mov
pop
xchg
mov
mov
cmp
and
xchg
stos
sbb
sarb
push
xchg
jno
push
loop
sub
iret
fcomps
sbb
in
xchg
push
or
into
int3
sti
mov
and
imulb
int3
or
and
add
fmuls
push
fstpt
je
out
inc
test
xor
mov
pop
add
das
mov
push
sbb
mov
adc
int
xchg
mov
lret
jg
mov
stos
std
decb
inc
add
flds
xchg
push
xor
jne
jp
adc
imulb
ret
div
fs
in
outsb
push
or
push
repnz
xlat
push
dec
lea
fstpl
dec
xchg
or
cli
mov
mov
inc
test
add
mov
in
mov
cmpsl
mov
daa
aaa
iret
cwtd
add
into
scas
fwait
mov
cmpsb
sbb
xchg
mov
iret
mov
lret
fs
pop
lock
shlb
jo
aad
loopne
pop
push
imul
stos
xor
dec
cmp
daa
push
or
mov
xchg
dec
dec
add
hlt
jge
mov
jge
std
jg
movsl
mov
and
andps
mov
adc
movsl
lods
lahf
cmpsb
call
les
in
movsb
jae
sub
popl
xor
rcll
jbe
test
ret
mov
js
inc
dec
inc
dec
pop
pop
xchg
xlat
icebp
add
cmp
push
push
jecxz
and
xlat
sbb
dec
sub
cmpsb
ffreep
add
popa
leave
daa
das
jecxz
inc
repz
rcrb
movsl
loop
xor
ror
rorb
call
and
fcoml
jae
pop
ljmp
jp
cli
clc
and
cltd
in
call
inc
lret
pop
push
lea
sarb
mov
cwtl
mov
dec
xor
ret
push
ret
jge
bound
sub
sbb
test
imul
jne
in
dec
mov
push
and
ret
mov
divb
pop
out
push
imull
ds
cmpsb
ret
or
dec
xor
into
push
test
add
or
cmpsb
ss
ret
or
xchg
push
cld
icebp
xchg
inc
mov
dec
outsb
clc
lret
shrb
mov
jne
addr16
enter
das
imul
mov
and
aad
push
popf
scas
or
nop
pop
fcoml
or
dec
mov
push
mov
mov
je
out
jo
lret
inc
mov
lret
sarb
je
es
movsl
shrb
mov
inc
test
div
jmp
push
stos
dec
fstpt
pop
push
xchg
std
pop
clc
or
daa
xor
xor
xchg
sub
inc
inc
mov
xchg
call
scas
rcll
push
mov
cwtl
jno
in
popa
xchg
fdivp
movsb
push
es
xchg
xchg
stos
aam
mov
les
hlt
xchg
xor
dec
ja
mov
xor
pop
sub
fisttpl
mov
cld
lods
mov
and
lahf
xor
rcrl
mov
cmc
pop
mov
cwtl
stos
cmp
fbstp
add
inc
jg
dec
fildll
mov
xchg
adc
cmp
mov
cld
inc
sub
clc
mov
mov
dec
int3
aas
inc
xor
pop
mov
dec
adc
add
cmpsb
add
stos
in
xchg
jae
sub
je
xor
mov
iret
movsb
inc
push
mov
sbb
test
pop
scas
dec
cmp
fdiv
pop
push
or
cmp
repz
xor
mov
inc
push
mov
adc
imul
pushl
cmp
xorb
adc
int
rolb
xchg
test
pop
dec
cmp
sub
mov
mov
outsl
sbb
or
push
lret
subl
fsubrp
or
pop
out
mov
dec
jmp
add
jne
sbb
pop
cmp
jmp
inc
es
ss
sar
mov
xor
jg
pop
or
jge
xchg
jne
dec
nop
jp
adc
aam
sub
or
fisubrl
xchg
cmpsb
cli
das
push
data16
add
in
xchg
mov
push
je
xchg
lods
ror
outsl
scas
mov
pop
push
pop
push
add
inc
inc
mov
loop
push
lods
ljmp
cmp
jb
push
out
jae
enter
mov
mov
js
test
mov
ds
rcll
icebp
inc
add
mull
les
jns
adc
push
jbe
xchg
mov
fstpl
shlb
mov
jnp
sub
gs
jg
out
push
aaa
sahf
cmpsb
out
shlb
imul
decl
inc
shll
jnp
cmpsb
add
loop
xor
push
pop
or
enter
sarl
enter
jmp
test
xor
dec
imulb
mov
scas
hlt
in
jge
dec
xlat
pop
cld
movb
cmp
mov
pusha
loopne
and
cltd
ret
pop
xor
ja
push
stc
in
in
leave
cli
dec
push
outsl
xchg
stos
mov
out
adc
js
xchg
fbstp
xchg
clc
je
mov
sarl
sbb
or
fistpll
add
mov
leave
jl
xor
pop
orl
adcl
dec
call
cmc
lods
stc
neg
push
ficoml
or
mov
pop
andl
lods
test
push
shll
jb
adc
mov
inc
mov
jno
add
out
mov
pop
xor
fstps
divb
jg
mov
adc
ja
aas
add
fs
add
mov
mov
xorl
adc
cmpb
adc
cmp
lock
cmp
bound
ror
shll
imul
out
or
divl
xor
inc
jle
or
mov
mov
mov
mov
popl
mov
clc
test
dec
fdivl
cmp
dec
sub
in
jo
cltd
mov
call
int3
mov
mov
sub
std
das
imul
in
or
out
push
imul
pop
pop
cmpsb
outsl
nop
mov
lahf
fwait
inc
mov
in
add
loope
push
lcall
cmpsb
mov
cld
lahf
cld
fsubrl
xchg
add
and
or
outsl
data16
rorl
add
sbb
mov
bound
insb
and
adc
addr16
shll
adc
cmp
loopne
aaa
xchg
stos
repnz
in
mov
dec
pop
call
testl
dec
mov
xor
xchg
add
test
bound
xchg
dec
mov
sahf
stos
lds
lods
fidivrs
repnz
rcl
jbe
push
cmp
cmpsb
dec
insl
mov
ret
or
xor
dec
subl
adc
cmp
movsb
or
js
adc
xchg
ja
jp
sbb
or
out
popf
mov
push
inc
jns
pop
stos
pop
push
sbb
das
mov
push
mov
dec
fnstsw
movsl
lret
dec
or
fistps
lea
jne
pop
insb
in
push
mov
mov
ljmp
pop
ljmp
cmp
icebp
pusha
cli
stc
in
orb
ljmp
cltd
push
pop
xchg
jnp
or
push
jle
lods
test
data16
repz
push
popf
aad
sub
test
roll
and
push
cs
push
mov
inc
nop
inc
mov
notb
movsb
or
imul
cmpsl
ret
push
sbb
xor
add
stos
ret
mov
or
adc
mov
push
add
or
mov
int
inc
lods
outsb
xchg
add
pushf
adc
rol
idivb
popl
mov
pop
cmpsl
sub
mov
cmpsb
mov
mov
test
dec
mov
jp
mov
mov
cmp
out
pop
fisttps
xchg
lods
mov
outsb
adc
test
loope
pushl
gs
clc
pusha
or
int3
in
aam
sub
push
ret
push
pop
and
psubq
daa
lret
ja
repz
dec
pop
out
dec
pop
sub
push
and
jl
out
repz
dec
jne
jp
xchg
mov
xor
inc
jecxz
sbbl
ret
loop
ss
inc
aaa
mov
popf
arpl
outsl
lods
adc
pop
sbb
ret
cs
cwtl
push
js
das
push
popa
or
std
xchg
mov
enter
je
data16
adc
jns
hlt
mov
add
jle
push
cmpsb
xor
mov
cmp
jecxz
jo
jns
jae
lea
sub
xchg
sub
fmull
lds
outsl
push
sub
jg
stos
gs
xor
mov
mov
out
mov
push
dec
jne
je
cmp
lret
test
sub
pop
cmc
mov
jle
loope
aam
mov
mov
aaa
add
cltd
dec
adc
mov
jmp
sbb
fwait
xchg
jo
rcll
dec
cmc
jno
adc
in
ficomps
daa
mov
fs
stos
outsb
mov
cmp
pop
cmp
aaa
add
xor
or
ficomps
lcall
mov
dec
fcmovb
pop
push
fcomip
pop
inc
nop
jmp
cmc
xor
push
subl
inc
jno
mov
enter
adc
pop
dec
sti
jmp
xchg
push
mov
mov
fstps
test
fidivrs
inc
add
jns
jbe
insl
pusha
cmpsb
cmpsb
ljmp
add
dec
ret
pop
push
dec
jg
dec
bound
outsb
sub
mov
clc
jge
out
shr
or
mov
mov
rcr
jle
jns
push
out
xlat
cmp
leave
jg
stos
and
dec
es
addl
dec
arpl
inc
pop
leave
sbb
pusha
in
fucomp
jno
mov
cwtl
dec
lcall
aad
ja
loopne
push
mov
jno
out
daa
sbb
inc
sbb
mov
and
xchg
lcall
imul
add
pushf
pop
xchg
nop
cmp
lcall
mov
pop
pop
pop
bnd
mov
imul
rcr
mov
xchg
bound
xchg
jge
mov
fmull
lods
and
push
jae
dec
test
mov
jp
cmp
or
push
or
cmpsl
dec
mov
xchg
dec
pop
repz
pop
xchg
mov
adc
pop
add
lret
ret
or
movsb
ficomps
iret
out
insl
and
in
xchg
mov
push
cld
aam
leave
and
pop
dec
scas
mov
sbb
cltd
gs
sbb
movsl
add
cmpsl
popa
or
mov
movsl
or
cmp
int
leave
and
jbe
mov
push
test
orl
jl
das
pop
mov
roll
add
leave
lcall
dec
cmpsb
out
lea
sbb
push
sbb
loope
mov
outsb
lods
jle
push
xor
outsb
xchg
pushf
mov
and
push
sarb
ljmp
push
xchg
adcb
push
sbb
insl
adc
xchg
das
std
aam
cmp
push
cmp
into
divl
mov
jne
xchg
ficoml
xchg
adc
xchg
xor
jne
adcl
pusha
mov
add
mov
mov
cltd
inc
sbb
lret
shr
leave
xchg
mov
punpckhwd
mov
lcall
push
xor
pushf
lods
or
xchg
imul
dec
pop
sub
inc
and
hlt
push
cmpsb
ja
mov
fimuls
ret
jne
aaa
lret
mov
pop
and
stc
rclb
nop
pop
in
in
js
clc
pop
dec
inc
repz
outsl
sub
cli
outsl
mov
mov
stos
fistpl
sbb
push
sub
push
adc
pushf
push
scas
pusha
into
cmp
int3
lea
push
inc
movsb
test
mov
js
mov
mov
shr
pushf
repz
cs
sub
adc
jmp
shl
insl
xchg
dec
fidivl
inc
lcall
es
push
xor
sub
and
mov
cwtl
loop
popf
in
cs
out
fistpl
aad
xchg
sti
jg
shll
test
daa
xchg
fs
in
cmp
jb
sub
fwait
imul
insb
jb
jo
cwtl
push
cmpsb
test
xor
out
cmp
sub
enter
sub
nop
lret
lock
or
inc
sti
mov
mov
aad
push
arpl
filds
shrb
notl
ja
jmp
xrelease
xchg
andb
cmp
movsb
sbb
shlb
pop
xor
insl
jecxz
bound
lahf
imul
mov
and
aad
out
scas
xor
rcll
lcall
cmp
inc
ss
fsubr
cwtl
pop
lret
jmp
dec
cltd
mov
arpl
fadd
ss
daa
sbb
int3
add
gs
add
cmpsb
lret
mov
xchg
cltd
cmpsl
les
or
je
mov
inc
jo
dec
jp
mov
shlb
neg
xor
test
cmpsb
loop
or
mov
xor
cmp
fistps
pop
sub
test
or
add
stc
out
xor
call
mov
push
sub
jbe
scas
cmp
add
mov
sbbb
pop
lret
inc
push
loopne
cmp
movsl
dec
mov
insl
aad
insb
and
xor
jb
ret
mov
negb
mov
popf
ja
andl
inc
push
and
cmpsb
daa
pop
jecxz
push
mov
lods
mov
sar
or
ret
add
arpl
shll
dec
sbb
jne
jmp
sbb
enter
pop
loop
shll
das
inc
push
gs
jg
int3
xchg
xchg
mov
mov
pop
cmp
int
jmp
or
out
inc
or
xchg
int
ja
mov
xor
shlb
dec
movsb
cmp
or
dec
mov
bound
inc
sarl
fidivs
in
stos
add
push
jne
mov
je
stos
push
and
lret
cmp
and
jo
inc
cwtl
dec
sbb
jne
mov
and
inc
ret
xchg
sbb
addr16
push
mov
push
push
outsb
aaa
cmpsb
es
mov
push
cmpsb
pushf
dec
bswap
daa
mov
sbb
mov
shll
sbb
add
xchg
shll
int3
adc
sbb
hlt
push
xor
and
mov
jae
mov
jne
aad
call
aas
bound
mov
mov
dec
fcmovnu
xchg
mov
pop
aam
inc
popf
or
xor
ds
pop
add
in
idivl
mov
pop
popf
andb
fadds
push
in
int3
cmp
add
cmc
les
or
lcall
mov
sysret
jbe
int3
sbb
stos
in
mov
call
int
int3
cmp
mov
insb
cmp
jo
xchg
mov
fisttps
mov
xchg
or
ret
mov
negl
loopne
dec
adc
cmpsb
add
dec
inc
or
lods
dec
js
outsl
pusha
add
js
test
xor
shrl
mov
fldcw
inc
xchg
sbbl
mov
fists
hlt
inc
inc
jno,pn
or
pop
rol
mul
xor
mull
mov
jge
add
xchg
test
andl
out
pushl
and
ja
add
sbb
sub
xor
push
test
mov
lods
xchg
sbb
cltd
roll
xor
std
insl
loope
adc
sub
mov
mov
sahf
lock
icebp
pushf
pop
push
loop
pop
inc
ss
inc
add
out
imull
push
add
callw
push
ret
fs
lret
mov
in
xchg
sti
arpl
push
aas
out
adc
mov
stos
ss
cmpsl
push
dec
lret
sbb
push
jg
mov
mov
add
scas
cld
and
xchg
pop
stos
scas
jae
push
gs
in
adc
cmc
inc
xlat
mov
mov
add
popa
pop
ljmp
mov
pop
inc
in
pop
push
cmp
xor
dec
outsb
mov
dec
shlb
fistl
mov
sbb
out
push
jae
cmp
stos
xchg
dec
push
cmp
fdivrp
push
mov
std
das
mov
dec
push
lahf
xor
cmc
mov
das
popf
xchg
mov
pushw
sahf
sub
dec
push
cli
leave
rcl
iret
cli
scas
rorl
call
movsl
les
sub
fsubrp
xlat
pop
addr16
loope
pop
mov
jecxz
push
inc
mov
insl
mov
xchg
mov
aas
jle,pn
addr16
lock
js
sbb
jle
inc
inc
inc
jecxz
aaa
movlps
jns
fldt
add
xchg
inc
inc
lds
outsl
add
mov
jp
dec
pop
mov
jge
subb
icebp
mov
pusha
cmp
nop
sbb
pop
sub
adc
fdivr
pop
aaa
pop
inc
fdivrl
pop
jmp
add
aas
int3
repnz
cmp
jp
cmpsw
test
sub
pop
movsl
or
mov
clc
jns
mov
out
std
mov
ret
lret
std
mov
cld
jp
fisubl
inc
mov
fists
mov
adc
lret
sbb
mov
or
insb
outsl
je
test
inc
inc
push
push
cwtl
int
ret
cwtl
into
sbb
out
cmp
jne
fsubr
cmp
push
inc
out
frstor
fidivl
mov
test
dec
outsb
jo
push
xchg
xor
scas
jmp
or
lret
mov
inc
test
movsl
add
xor
sbb
jo
adc
xchg
pop
jp
or
aad
jb
pop
roll
sub
imul
mov
lahf
xor
shrb
jo
das
or
jg
mov
sub
fdivrl
pop
xlat
lret
xor
lret
in
dec
inc
sub
jmp
fwait
jecxz
adc
mov
stc
jne
mov
mov
rorb
xorb
out
sti
int3
or
inc
mov
mov
push
and
jae
fidivs
xchg
mov
fcompl
push
sbb
jo
inc
mov
cmpb
out
out
dec
or
cmp
xor
xor
inc
and
loope
inc
mov
mov
xchg
dec
fs
into
enter
mov
add
jne
negb
fiadds
xor
push
shrl
adc
scas
mov
popf
jns
scas
out
bound
in
loope
fwait
jae
xchg
sub
jge
shrb
add
rol
adc
bound
sbb
jg
stos
inc
jae
mov
cli
mov
xor
mov
push
jmp
pop
enter
ljmp
push
lahf
mov
cli
xchg
pop
addr16
sbb
cmp
ror
push
adc
inc
dec
notl
in
in
mov
das
jbe
inc
mov
jo
inc
into
or
cmp
xor
mov
lcall
xor
ret
lods
incl
in
adc
xor
and
icebp
jnp
push
xor
cmp
mov
js
or
dec
stos
and
xor
xchg
jne
roll
xchg
xchg
daa
sub
sbb
outsb
xchg
pop
mov
lock
stc
js
jl
jae
mov
adc
hlt
pop
icebp
loop
inc
mov
adc
fnsave
lods
inc
punpcklbw
or
cli
adc
sbb
dec
sub
daa
jno
lods
sbb
dec
push
adc
addr16
ds
dec
push
aaa
push
out
lock
rolb
insb
push
jl
inc
dec
dec
ja
mov
bswap
dec
pop
sub
int
push
dec
mov
add
adc
cmp
fidivrl
cmp
dec
xchg
aad
rorb
jle
mov
mov
mov
flds
aad
out
gs
dec
mov
movsl
lds
mov
sbb
aam
rcrl
rolb
adc
jmp
adc
push
sahf
int
pop
dec
les
jo
jno
pop
push
xor
pop
lahf
scas
jae
jecxz
popf
loop
or
mov
out
xor
or
add
inc
sub
test
ja
pop
daa
or
sub
aas
and
js
jno
add
sbb
jmp
shll
test
xchg
and
or
sub
jno
add
in
jnp
add
sbb
xchg
cmp
int
jp
mov
sub
das
jne
iret
imul
jp
cmp
dec
dec
adc
adc
xchg
popa
jne
nop
xchg
dec
adc
pop
push
sub
lea
xchg
pusha
mov
adc
cmp
fidivl
cmp
stos
js
daa
sub
in
fs
insl
into
iret
jno
jecxz
lret
push
xor
jae
clc
in
sub
jbe
xchg
and
ds
movsl
std
push
fildl
jb
dec
mov
mov
stc
inc
xchg
aaa
int
movsl
cmc
cld
pop
ret
lret
xor
in
out
and
stc
push
mov
test
scas
adc
mov
adc
decl
mov
mov
rclb
insl
leave
rolb
call
inc
or
mov
mov
in
fwait
test
adc
pop
outsl
leave
jne,pt
adc
xor
test
je
mov
pop
std
pop
fstp
aaa
loop
and
xor
std
jo
pop
push
popf
pop
mov
push
jb
cwtl
clc
repnz
pop
add
cmp
lods
out
sti
out
sub
mov
rcll
cwtl
adc
pusha
aas
xor
into
and
push
adc
popf
dec
push
adc
in
adc
pop
ret
jns
int3
adc
mov
arpl
xor
sub
jp
int
lahf
inc
loope
out
pop
push
test
push
lret
push
sbb
jno
xchg
mov
jnp
ficoml
push
imul
in
sti
out
fs
scas
xchg
cmp
and
or
or
ret
ficompl
daa
stc
int
jne
mov
int3
inc
repnz
aaa
pop
xlat
stos
sbb
mov
xor
shll
pop
nop
xchg
shll
inc
pop
lret
das
mov
adc
pop
data16
stos
push
out
inc
fistpl
mov
jp
sbb
outsl
mov
imul
std
repz
xor
lods
fsubr
dec
mov
cli
add
dec
pushf
insb
fstl
jl
movl
mov
push
mov
lods
jmp
add
push
adc
lret
enter
cmp
lods
fidivrl
xchg
lahf
jo
xor
xor
inc
mov
pop
sahf
add
xchg
xrelease
dec
cmp
es
popa
dec
pop
ret
pop
dec
cs
mov
fcos
mov
jg
xor
pop
add
inc
mov
mov
cltd
inc
clc
repz
bound
jecxz
cmp
fsts
pushf
xchg
add
lea
mov
cli
and
testl
cli
sub
adc
adc
sbb
hlt
push
fidivl
xchg
stos
icebp
mov
mov
sub
pop
push
push
test
sub
pop
sbb
jmpw
push
and
lds
cmp
push
push
outsb
or
lods
mov
popa
lret
jb
xor
xchg
jp
bswap
sbb
cltd
cmpb
push
arpl
sbb
movsb
add
fdivs
pop
fsubrp
sbb
out
pop
shr
imul
movsl
es
nop
mov
push
outsb
int3
leave
cmp
sub
test
lcall
jg
push
sbb
fcmovb
rcll
dec
fnstcw
aam
mov
push
adc
les
fwait
xor
lods
arpl
shlb
sub
inc
out
jle
fiadds
popa
ror
or
sub
lret
nop
pusha
scas
inc
out
enter
test
push
enter
push
cmp
icebp
pop
bound
pop
pop
cmpsl
mov
faddl
dec
stos
jae,pn
es
imul
pop
mov
shlb
mov
pushf
dec
in
push
xchg
pop
mov
cmp
je
or
cld
mov
insb
and
movsb
inc
dec
inc
mov
push
mov
aam
xchg
inc
lahf
mov
lcall
ljmp
mov
mov
icebp
je
mov
out
mov
jl
xchg
in
push
adc
ret
xchg
fisubrs
rorl
jnp
mov
and
test
dec
idiv
sbb
fsubl
push
call
lcall
ss
fs
push
cli
lret
aad
orb
or
pop
cs
invd
test
mov
mov
add
push
sbb
sbb
inc
shrl
imul
pop
pop
ss
mov
repnz
loope
push
bound
push
adc
and
mov
movsl
and
ljmp
mov
loope
subb
fsubr
sbb
ds
clc
cltd
std
push
cmp
les
and
xchg
sti
das
addr16
hlt
mov
je
xchg
sub
add
cmpsb
es
addr16
jae
sarl
popf
sub
inc
and
leave
mov
inc
add
jle
je
cltd
cmpsl
orb
movsl
mov
inc
xchg
and
jnp
mov
je
inc
dec
mov
imul
push
das
and
mov
mov
roll
loopne
push
movsb
arpl
fbstp
orb
jle
jmp
test
stc
mov
mov
sbb
pop
mov
cld
mov
popf
jecxz
mov
sub
gs
fs
stos
lods
sbb
mov
fs
stos
xchg
pop
imul
loopne
inc
ret
outsl
in
push
leave
pusha
sbb
fdivl
inc
cmp
out
fisttps
dec
mov
jecxz
and
sbb
outsb
inc
dec
pop
jecxz
out
stos
call
imul
lret
adc
mov
cld
stc
add
inc
push
jp
out
pop
cmp
pusha
dec
cs
scas
mov
das
push
test
xchg
jns
dec
in
nop
int
cmp
mov
dec
scas
lea
dec
cltd
pop
push
and
loop
lods
sub
sahf
data16
jl
xchg
pop
mov
jnp
rolb
test
mov
inc
pushf
test
loope
inc
in
fistpl
and
adc
movsb
ss
aad
add
cmp
xchg
hlt
jecxz
out
inc
xor
mov
data16
je
bound
jno
inc
cmp
clc
ret
repnz
add
sti
pop
xchg
cltd
sbb
push
jno
movsb
mov
into
test
and
xchg
filds
mov
xchg
pop
outsl
and
jnp
les
and
call
mov
shlb
adc
or
inc
in
test
jmp
and
jecxz
pop
outsl
das
mov
inc
int3
gs
inc
pop
lret
mov
adc
push
fnstenv
sbb
inc
push
lret
and
sub
mov
pop
movsl
cmpsb
cmpsb
je
pop
repz
and
hlt
sahf
cmp
and
scas
fxch
sbbl
pop
and
int3
mul
les
daa
xor
clc
aaa
loopne
out
jmp
mov
jo
lret
std
sub
mov
mov
lods
incb
push
pop
stos
dec
cmc
adc
push
xor
cmp
xchg
sbb
pop
mov
sahf
test
push
aam
incb
repz
mov
mov
movzwl
lahf
xor
sub
xchg
sub
sub
movsl
push
pop
mov
mov
insb
add
fldcw
lcall
subl
push
push
mov
xchg
xchg
ror
je
mov
mov
out
adc
fcmovu
sbb
mov
nop
inc
xor
gs
add
xchg
mov
mov
ss
lods
xchg
adc
xlat
testb
mov
cmp
pusha
or
sbb
adc
popa
insb
xchg
aam
xor
xor
out
xor
popa
dec
loope
xor
stos
sub
add
sbb
outsl
push
mov
fimuls
xchg
sahf
test
jge
shlb
pop
pop
jecxz
mov
negb
sub
or
jno
pop
pushl
cltd
xor
outsb
scas
or
and
ficompl
jnp
adc
int3
imull
dec
in
test
mov
fdivs
out
lahf
push
ret
inc
call
add
sbb
out
and
sar
dec
sub
push
or
jge
pushf
sub
inc
lds
and
add
fstpl
jae
loopne
adc
mov
xchg
cmp
jp
or
jecxz
and
pushf
test
mov
xlat
sahf
adc
out
xor
add
mov
xchg
add
jnp
das
movsl
out
adc
pushf
mov
sub
lret
lds
jae
dec
add
scas
sbb
sti
test
push
jnp
xchg
subl
sbb
nop
inc
cmp
sbb
and
mov
bound
lods
and
mov
jbe
mov
popf
mov
aas
pop
ret
and
jnp
data16
jmp
stos
mov
bound
mov
or
mov
cs
dec
sbb
cmpsb
mov
jl
int
insb
fst
int3
jge
mov
out
jle
mov
and
push
mov
jl
enter
cmp
rorb
pop
or
data16
test
sub
int
push
mov
sbb
popa
xor
sub
sbb
adc
cld
ret
add
lods
pop
in
imul
pop
jmp
xchg
dec
repnz
stc
dec
dec
loope
ret
nop
sbb
mov
nop
mov
adc
fs
test
jle
insb
or
les
or
push
pop
cmp
or
popa
inc
decb
and
rorl
cwtl
pop
pop
pusha
push
cltd
imul
push
adc
sbbb
and
adc
insb
sub
mov
test
cli
cli
mov
jle
xor
mov
in
shlb
cmp
je
out
adc
mov
mov
xchg
cmpsl
dec
pushf
dec
mov
sti
pop
cmpsl
scas
pop
fldcw
insl
cmpsl
sub
pop
jp
dec
jp
jns
mov
cmc
incb
dec
stos
imul
nop
mov
call
sbb
cmpsl
out
adc
rorl
ljmp
sbb
mov
add
jmp
shrl
hlt
or
mov
sub
inc
ja
in
icebp
jb
sti
inc
mov
stos
aam
sbb
in
dec
shll
xchg
dec
inc
cld
fldenv
ja
push
and
sub
shrl
push
push
sahf
rorl
jp
inc
mov
mov
xchg
sarl
data16
nop
mov
push
sub
xchg
dec
sbb
jb
shll
push
movb
jns
lret
pop
cmpsb
xchg
sub
jnp
and
push
pop
and
clc
or
shll
and
cmp
pop
scas
sbb
sarb
adc
scas
jnp
pop
loope
popl
dec
xor
jnp
fwait
add
dec
lret
adc
adc
out
or
or
jb
mov
popf
jb
call
inc
inc
adc
push
xchg
mov
xorb
ljmp
mov
aam
cmp
aam
xor
cmp
lret
inc
in
dec
inc
adc
or
aaa
ret
mov
subl
das
ljmp
fwait
insb
mov
sbb
inc
insl
iret
popa
and
stc
les
jbe
dec
addsubpd
push
rclb
andb
stos
out
ljmp
lds
aas
or
insb
das
jo
fidivl
test
jo
xchg
xchg
nop
leave
fiadds
adc
shlb
sar
aad
xchg
mov
inc
nop
in
pop
out
pushf
outsl
sub
mov
mov
outsl
aad
sbbl
scas
mov
subl
scas
pop
insl
xchg
int
push
jno
ja
inc
jne
scas
je
xor
sbbb
fdivrs
inc
lods
sbb
imul
jne
pop
mov
shl
movsl
xchg
mov
or
dec
mov
jns
or
mov
loop
sub
mov
lds
ljmp
sahf
loope
xchg
xor
xchg
sbb
imul
xor
and
xchg
std
sub
pop
out
add
jmp
sarb
xchg
std
mov
and
ja
je
in
jle
mov
push
or
mov
stos
mov
stos
arpl
pusha
push
es
mov
adcl
add
inc
pop
adc
mov
jmp
jmp
push
push
stc
out
popa
fadds
and
outsb
cli
sub
add
sahf
or
out
inc
mov
add
add
dec
mov
mov
fsubs
int
test
cmp
fnsetpm(287
insb
lret
dec
add
xchg
xchg
sahf
mov
mov
dec
pop
js
and
out
cmpb
push
les
xchg
adc
scas
xchg
pop
jmp
imul
cmp
cmpsb
pusha
in
inc
dec
cmp
push
inc
mov
data16
mov
or
jbe
add
add
jecxz
mov
std
loopne
stc
scas
es
inc
lahf
test
aad
das
add
cmp
sbb
sbb
mov
or
pop
rclb
xchg
and
fimull
fs
cld
push
gs
xchg
popa
sbb
xor
popa
or
dec
imul
ds
jbe
xor
adc
and
or
test
rcr
out
xchg
arpl
xlat
iret
imul
jmp
bound
insb
push
inc
or
lods
je
ficomps
inc
adc
hlt
imull
call
add
pop
or
pop
xlat
or
sbb
sbb
in
les
pop
fwait
insl
push
shll
xchg
fisttpll
out
sub
shrl
mov
rcrb
rol
or
xchg
mov
jle
test
scas
imul
std
ret
call
sbb
jns
loope
cmp
std
dec
and
fcoms
cmp
push
or
mov
sbbb
loop
push
jb
adc
cmp
adc
jg
inc
adc
in
lret
xchg
xchg
cltd
or
sub
add
push
mov
es
xchg
int
shll
dec
or
or
insl
pusha
dec
mov
push
inc
pop
movsl
jmp
sahf
inc
mov
dec
push
inc
daa
add
dec
movsb
imul
cmp
and
int
insl
test
in
pop
push
xchg
cmp
stos
aaa
inc
ljmp
ret
sbb
jmp
xchg
ja
or
xor
ss
sbb
aad
js
or
xor
and
jl
adc
mov
inc
jmp
lods
sub
dec
in
jecxz
jae
mov
inc
outsb
sbb
push
stc
and
xor
cmpsb
outsl
nop
test
loope
mov
push
icebp
das
test
sbb
mov
pop
sbb
jne
sub
stc
pop
out
lds
and
inc
popl
mov
clc
sbb
call
sbb
push
or
aaa
fs
in
and
inc
add
and
repnz
mov
daa
dec
jno
popf
shlb
mov
rcl
fisubrs
sub
nop
hlt
std
mov
enter
add
mull
jbe
xor
pop
testb
popa
popf
add
xchg
add
pushf
add
adc
jge
push
and
inc
imul
fbstp
cmp
sbb
fcoms
clc
repz
test
roll
add
mov
and
clc
jb
mov
das
movsb
rcrl
fildl
out
push
std
xchg
movsb
adc
paddsw
cmpsb
add
data16
mov
cmpsl
mov
jnp
sub
pop
repnz
jge
xchg
add
clc
jg
fistpll
orl
stos
scas
inc
repnz
call
mov
cmpsb
inc
xchg
sub
mov
push
cmp
xor
int3
outsb
mulb
push
test
rorb
negl
scas
jle
loop
fcmove
mov
pop
pusha
aam
mov
cmc
std
add
out
pop
pop
orb
daa
pusha
and
and
mov
outsl
scas
sahf
mov
cmpsb
fs
inc
push
mov
test
push
movsl
push
push
jge
push
dec
es
sbb
xchg
mov
loope
shrl
cli
insl
dec
push
lock
lret
sbb
dec
shrl
das
mov
mov
int3
sub
inc
mov
lahf
je
std
aaa
mov
mov
xchg
fmull
xchg
xchg
mov
mov
mov
rclb
jle
mov
jne
mov
lds
jp
push
fs
adc
stos
dec
inc
mov
aam
stos
xchg
adc
push
or
xchg
out
jno
or
mov
in
and
outsl
xchg
std
and
cmp
mov
adc
rcr
xchg
add
rolb
insb
pusha
mov
mov
cvtps2pd
and
and
aad
clc
xchg
pushf
push
adcl
lock
add
or
xor
sbb
leave
mov
cld
cmp
int
push
adc
sub
push
pop
xor
daa
and
imul
push
xor
jp
or
je
mov
pushf
pop
push
add
inc
loopne
fcmovb
mov
fimuls
loope
mov
push
mov
js
int3
into
es
les
cltd
push
jl
es
mov
pop
mov
sub
es
mov
movl
insb
jle
pop
data16
das
sub
pop
mov
ja
pop
xchg
shrl
add
or
and
xor
repnz
sbb
push
mov
xchg
sbb
je
js
push
dec
adc
nop
lods
bound
loope
add
pop
jno
repnz
fistps
inc
xchg
jns
mov
dec
and
ljmp
sbb
hlt
mov
or
aas
fwait
sahf
inc
xor
lock
into
and
xor
adc
xor
hlt
mov
and
add
push
dec
insb
jle
hlt
inc
in
cmp
int3
std
mov
je
add
shll
mov
jo
push
in
mov
push
push
scas
movb
lret
fnstenv
adc
je
push
inc
sub
mov
mov
mov
nop
push
mov
cmc
loope
int
jmp
xor
popf
movsl
pop
add
xor
mov
mov
add
push
shlb
int
push
inc
jno
popa
jl
adc
imul
fsubl
lahf
js
pop
hlt
push
mov
jge
cmpsl
add
ret
arpl
fisubs
lods
push
sbb
clc
or
mov
adc
add
aad
add
iret
out
test
test
frstor
jno
jmp
fst
loop
sbbl
hlt
stos
mov
mov
lcall
int
push
bound
popa
sbb
fiaddl
xchg
enter
popl
andl
popa
push
and
adc
ljmp
pop
push
inc
bound
xchg
jbe
pusha
aam
ds
es
js
or
mov
xchg
cmp
fst
sbb
xor
push
sbb
and
ljmp
stos
mov
mov
dec
cmpb
daa
mov
push
adc
dec
mov
cmp
out
leave
and
pusha
or
sub
and
nopl
pop
rolb
pop
ja
enter
sub
lret
mov
dec
push
rcrb
dec
clc
pop
mov
dec
lret
loop
cmp
pop
cmp
mov
xchg
cmpl
arpl
loope
xor
jb
cmpsl
fldl2t
daa
inc
aas
hlt
push
aad
lahf
adc
rcrl
testb
xchg
imul
ds
in
push
stos
out
sbb
ss
mov
fistps
or
in
cmp
xchg
pop
addr16
out
mov
jno
addl
adc
xchg
lds
decl
shlb
aam
std
xchg
out
fisubs
dec
stos
and
xor
push
mov
je
or
lcall
cld
ret
dec
pusha
sahf
mov
jg
lret
xchg
fwait
pop
mov
push
addl
aas
inc
add
enter
inc
xchg
aaa
push
fiadds
repnz
aam
mov
sub
and
stos
bound
in
loop,pt
cmp
in
mov
ja
jo,pt
jl
icebp
push
fs
jo
adc
pushf
daa
divl
xchg
dec
sti
aaa
jp
fnsave
pop
movsl
ja
pop
add
and
fbstp
pusha
pop
mov
lea
pop
xlat
bt
mov
mov
movsb
jo
mov
inc
scas
cli
xor
adc
insl
sbb
adc
sub
rcl
xor
mov
jle
and
jg
jne
sbbl
push
mov
nop
jb
loopne
adc
es
outsl
xchg
lock
mov
mov
jae
pop
sbb
mov
std
add
jae
sbb
ud2
movsb
ret
pop
fdivrs
xor
jg
ljmp
mov
jecxz
xchg
mov
adc
movsl
and
mov
xchg
mov
cmp
mov
sub
notl
mov
or
inc
out
lcall
sti
xchg
das
aam
jo
sbb
lahf
mov
and
xor
xchg
test
or
pop
data16
push
mov
or
int3
adc
ss
xchg
push
pusha
mov
fldenv
movsb
mov
cmp
lea
add
pop
insl
jne
ror
pop
push
inc
xorb
jle
inc
dec
fs
aad
push
out
mov
std
and
sbb
inc
loop
jo
dec
into
dec
in
cmp
and
mov
add
test
mov
pop
sbb
xor
jns
aam
inc
mov
jns
add
scas
cmp
cli
lods
cmpsl
push
mov
aad
jne
int3
jns
mov
or
pop
jae
aas
push
iret
das
sub
sbb
out
popf
mov
xor
pushf
insl
mov
popa
add
add
test
lret
cmpb
mov
sbb
or
es
pop
repnz
fistl
xor
out
scas
jl
ljmp
idivl
call
xchg
sub
mov
scas
addr16
mov
jecxz
add
stos
mov
orl
push
sbb
sbb
mov
sbb
insl
test
mov
dec
mov
lock
in
adc
xor
aad
pop
xor
je
inc
imul
mov
add
cmp
bound
xchg
in
xchg
stos
lea
dec
jo
jb
outsb
arpl
scas
ret
inc
dec
adc
rcll
shll
xchg
cltd
data16
out
xor
or
mov
insb
daa
xchg
and
add
sbb
fimull
test
push
push
push
out
adcl
mov
pop
pop
add
push
aam
adc
aaa
and
call
jmp
xchg
jmp
add
das
insl
movsl
scas
out
test
jp
adc
xchg
mov
leave
add
xor
test
stos
mov
push
cli
rcll
std
xchg
int3
jecxz
or
fsts
stc
insb
mov
xchg
sbb
sbb
and
and
push
mov
push
jnp
scas
push
int3
data16
in
ja
into
ret
dec
cmp
out
cmp
xorl
aas
out
mov
shll
das
ffree
pop
mov
or
mov
loopne
xchg
mov
lods
insb
rcll
sarb
pop
cmpsb
cmp
mov
jbe
mov
push
sbb
adc
sub
dec
sub
lods
les
ret
lock
testb
cli
push
xchg
add
shlb
inc
xchg
cli
or
loopne
out
cmp
mov
push
outsl
lock
aam
push
cmpsb
mov
sub
clc
push
dec
pop
std
loopw
in
xchg
clc
xchg
sbb
mov
mov
lret
push
pop
add
lcall
or
mov
mov
mov
in
xchg
mov
xchg
cltd
fstp
leave
repnz
push
outsl
lods
daa
dec
push
jg
stos
add
je
cmp
popa
mov
clc
push
jbe
xchg
jb
data16
mov
inc
aam
ret
dec
mov
jp
push
xor
xchg
out
pop
ret
dec
push
mov
sbb
dec
movsl
loopne
sub
ja
cmp
adcb
xchg
rorl
les
xchg
insb
add
cli
lods
pop
inc
push
xlat
pop
stc
inc
mov
enter
mov
dec
lds
rcrl
dec
pop
sub
outsl
dec
inc
jmp
and
nop
jle
xor
ret
inc
xchg
jb
push
cmp
stc
push
in
jno
push
aam
push
in
xchg
iret
pop
push
add
mov
sub
xchg
pop
mov
fcomps
pop
and
sarb
xor
xchg
das
push
aaa
js
out
jge
pop
lds
mov
test
xor
dec
mull
call
adc
loope
push
scas
mov
adc
mov
mov
mov
xchg
dec
sbb
loop
adc
test
int
ljmp
dec
xchg
or
out
push
mov
jo
xor
loopne
std
mov
cmc
nop
loope
jno
xor
xchg
je
out
sarb
mov
xor
jecxz
mov
inc
mov
xchg
inc
xlat
pop
adc
cmpb
sbb
test
sub
and
imul
and
mov
loop
imul
ja
hlt
xor
or
cmp
xor
push
and
push
add
loope
mov
ror
lods
xchg
push
sti
xchg
sbb
xor
les
outsb
aas
notl
and
push
shll
adc
xchg
pop
shlb
dec
cwtl
adc
pop
sbb
ja
jmp
rcll
xor
mov
add
xchg
sbb
dec
mov
clc
inc
jecxz
cld
and
icebp
and
aam
xorb
nop
mov
mov
xchg
xor
js
inc
xchg
xor
loopne
add
inc
pop
ja
xor
and
xor
cld
pop
enter
ret
in
mov
add
int
mov
mov
dec
jb
dec
jg
fsubrl
or
or
xor
mov
rcr
pop
shl
mov
ljmp
lcall
out
push
cmp
fs
xor
push
dec
pop
xor
sub
push
repnz
hlt
inc
mov
sbb
fs
rolb
bound
fneni(8087
gs
sti
pop
loop
xor
iret
add
adc
nop
insl
xor
aam
dec
mov
xchg
lock
or
mov
cmp
stos
inc
xor
mov
fidivs
dec
jle
test
dec
push
add
ljmp
inc
out
lahf
mov
lds
out
cmpl
add
outsb
jecxz
cmpsl
cli
stos
rclb
iret
cmp
xor
das
ds
sbb
mov
das
add
shrl
and
mov
fcoms
pmullw
test
leave
dec
sahf
lea
mov
sbb
xchg
cmc
xchg
jge
je
iret
push
jbe
mov
sub
xor
cmpsb
loopne
lds
out
push
lods
iret
pop
fdivrs
and
xor
pop
cmpsb
sub
xor
repnz
jns
push
mov
mov
cmp
xchg
out
cmp
xor
pop
push
pop
pop
js
mov
xlat
faddp
fstpt
dec
dec
aad
push
mov
sbb
adc
sub
xor
xor
enter
push
jp
loope
dec
test
cwtl
in
ret
adc
test
inc
mov
js
and
mov
and
js
in
mov
cmp
xor
inc
outsb
xchg
aas
frstor
xchg
xchg
or
push
lahf
sbbl
or
adc
xlat
in
push
pop
imul
jp
sub
daa
mov
int
das
mov
roll
iret
adc
xchg
inc
cmp
cmp
xchg
xlat
enter
and
jbe
jns
ss
mov
fcomps
inc
repnz
add
idivb
inc
xor
add
insb
insl
cmp
das
push
outsb
daa
mov
push
mov
sahf
mov
sbb
mov
int
cmp
sub
cmp
out
sub
je
and
and
repnz
int3
je
add
cmpsb
bound
jecxz
imul
outsl
clc
jno
xchg
in
adc
ja
mov
or
inc
pop
mov
jecxz
dec
mov
imul
jnp
push
push
lcall
les
mov
aaa
xchg
in
mov
aam
add
push
bound
sarb
push
push
rcrb
inc
push
inc
push
bound
lock
cmpsl
leave
cmpsl
push
jno
psubsw
sti
push
mov
out
ja
mov
adc
mov
nop
xor
sub
mov
fimuls
ror
or
cmc
loope
or
mov
mov
xchg
les
andb
xchg
nop
adc
mov
bound
daa
cmp
repnz
inc
out
sti
dec
arpl
mov
es
xchg
sbb
pop
push
clc
mov
jg
in
aas
cltd
mov
xchg
out
or
mov
dec
or
movsb
pushf
ja
jl
mov
xor
adc
mov
adc
dec
fcoms
xchg
decb
mov
fadd
mov
mov
jne
push
jno
jg
outsb
ds
notb
add
cmp
mov
pop
ret
test
sahf
mov
std
cmc
xchg
std
inc
sbb
decb
subl
shrb
pop
aas
jbe
lcall
or
out
sub
sub
icebp
sub
ds
adc
pop
dec
add
pop
xchg
fadds
and
mov
inc
xor
aas
push
cs
fwait
mul
fucom
or
sbb
or
inc
loop
cmc
loopne
sub
mov
sub
mov
pop
jmp
push
xor
cmp
in
cltd
fmull
pusha
lods
pop
mov
je
add
mov
jmp
jb
icebp
jb
cmp
scas
sbb
xor
jecxz
xor
out
ret
incl
into
pop
push
lods
lret
mov
lret
pop
in
sahf
jl
aaa
jmp
lret
popa
ret
rcll
fs
mov
mov
mov
repz
in
inc
inc
jns
jecxz
das
adc
ficompl
jmp
inc
dec
dec
jno
jae
movsl
sbb
loopne
mov
int
and
leave
push
push
jne
movsl
adc
cmp
pop
sub
rclb
cli
cmp
out
mov
les
cmp
mov
mov
out
sbb
push
xor
cmp
loope
imul
out
stos
push
cli
jp
std
ret
fwait
arpl
xchg
mov
cmp
imul
dec
out
aas
jle
adc
inc
push
push
cmp
iret
addr16
insb
inc
sbb
sbb
clc
aam
mov
outsb
push
repnz
sbb
push
push
jns
mov
cs
loop
xchg
lea
mov
sbb
and
fmull
inc
out
loope
sub
jmp
enter
cmc
enter
sti
add
jp
inc
inc
fwait
jp
scas
mov
enter
or
mov
lods
xchg
mov
sarl
push
mov
mov
lea
cmp
stos
xor
scas
mov
outsl
andl
outsb
nop
insb
push
test
sub
cwtd
aam
js
and
or
add
adc
add
mov
clc
jl
mov
cmpsb
jmp
int3
sub
dec
or
das
mov
jl
push
pop
ds
or
xor
inc
push
xchg
push
adc
push
pop
test
pushf
cmp
mov
insb
inc
push
es
daa
push
jb
fwait
xchg
xor
jbe
aad
out
push
fsubrs
jg
cmpsb
dec
sbb
lods
daa
adc
orps
mov
shrb
loope
xor
xchg
mov
adc
pop
sub
lock
fdivrs
call
adc
int
xor
aam
sub
insb
sub
ret
xchg
jle
sbb
ret
aas
loop
sbb
adcb
ret
cwtl
sub
outsb
lea
add
inc
cmp
js
xchg
jo
in
insl
aam
test
fwait
push
stos
movaps
pop
sbb
mov
lods
adc
popa
ss
int3
mov
ss
lahf
add
scas
ficomps
cmp
sbb
mov
jnp
add
sub
pop
dec
lods
out
dec
xchg
xor
nop
lea
jle
pop
lea
ja
sub
in
push
xchg
sub
sub
insb
dec
cmc
pop
jnp
insb
arpl
mov
insb
adc
pop
fdivl
shl
adc
aam
pop
mov
or
cwtl
out
movsl
imul
sbb
cmpsl
add
enter
push
iret
test
cwtl
shlb
cmpsb
push
jno
js
dec
push
or
test
cmp
fcomps
bound
std
and
mov
fcompl
arpl
pop
jo
jg
cmpsb
push
jg
sbb
push
cmp
sub
lahf
pop
mov
mov
outsb
daa
mov
or
sub
pop
sti
or
push
cld
mov
mov
and
and
fcmovnb
out
mov
mov
pop
inc
daa
or
lret
and
adc
inc
jne
jno
fdivrs
jge
mov
xchg
loopne
lret
popa
andb
ja
sbb
push
or
int
scas
xor
and
add
imul
sbb
or
xchg
and
mov
pop
std
int
push
cmp
divl
mov
mov
imul
push
test
stos
imul
sub
sub
lods
xorb
or
cmp
sbb
jle
sahf
imul
cmp
scas
mov
sbb
sbb
push
push
push
aam
mov
mov
mov
pop
xchg
sbb
imul
rcrl
lea
ret
mov
mov
rcll
int
testb
inc
hlt
cmp
and
mov
mov
add
pop
xchg
data16
cld
jle
cmc
outsb
in
jnp
pop
ret
sub
lret
fisttpll
adc
fists
fmull
xor
xor
mov
push
cmp
sub
inc
mov
add
test
push
mov
aam
push
fildl
aaa
shll
cwtl
lock
add
mov
jae
out
stos
xchg
jbe
xchg
sbb
jle
xchg
sub
mov
pop
aas
mov
pop
jne
sbb
mov
shll
xor
cmp
or
insl
push
outsb
mov
test
push
enter
cmp
das
or
lcall
loopne
mov
repnz
cmp
xchg
mov
pop
mov
lods
and
inc
add
cmpsl
or
mov
inc
mov
ret
inc
lods
mov
shl
lret
fadd
daa
pop
cld
int3
xchg
adc
enter
std
cmp
mov
mov
mov
std
movsl
lods
jb
mov
cwtl
sti
ss
subl
out
pop
jmp
sbbl
loope
loopne
adc
xchg
mov
xor
out
xor
sub
dec
and
stos
je
cmp
inc
sti
push
retw
nop
jns
ja
push
add
popf
jmp
jne
fdivl
dec
or
stos
loopne
data16
push
mov
rcll
in
aas
or
mov
out
out
stc
shlb
movsb
fidivrl
inc
adc
mov
in
cmpsb
mov
mov
dec
mov
test
cmp
cmpsb
shlb
lds
sbb
mov
adc
enter
fiadds
cli
cs
insl
or
shld
lods
pop
sbb
fnsave
jle
in
imul
and
cmpsb
push
lret
pop
sbb
push
mov
cwtl
mov
ljmp
mov
or
rcr
cmp
aaa
iret
imul
push
mov
js
dec
mov
mov
jns
cmp
sahf
xlat
insl
out
cmp
movsl
mov
inc
cmp
lock
cmpsl
in
mov
adc
jmp
pop
sub
mov
movsl
call
xchg
fistps
jnp
in
icebp
lods
jne
xchg
mov
xor
xor
pop
push
dec
aaa
dec
pop
pop
sub
repnz
mov
xor
pop
movsb
adc
or
rorl
mov
pop
push
lret
adc
fidivl
pop
push
add
loopne
xor
push
test
mov
aam
and
mov
push
sbb
hlt
pop
lea
sbb
cmp
das
cmp
leave
shll
sti
push
mov
mov
imul
call
pop
fsubs
aas
mov
inc
aaa
sbb
and
inc
nop
fildl
jno
sbb
test
jae
sbb
arpl
and
cmp
inc
nop
xchg
sbb
fs
push
out
jbe
fbld
pop
jnp
mov
and
sbb
mov
adc
test
test
jmp
das
sbb
imul
and
inc
insl
fistps
xor
sbb
or
outsb
popf
jecxz
in
inc
add
mov
rclb
mov
pusha
add
push
bound
shlb
add
fbstp
jle
lahf
sub
mov
shlb
mov
pop
mov
repnz
xor
dec
adc
shlb
cwtl
leave
adc
sub
dec
fcom
sar
stc
mov
or
adc
mov
repnz
add
lods
pop
mov
sbb
pop
in
sub
loopne
push
leave
push
cmp
xchg
or
outsb
jg
pop
mov
stos
pop
cmc
loop
or
faddp
movsl
jo
ret
or
mov
add
fcmovnbe
pop
push
sbb
sbb
xchg
nop
push
incb
jl
cwtl
nop/reserved
or
xchg
jle
xchg
adc
jl
or
ficoms
dec
dec
mov
jp
push
push
popa
iret
scas
push
sti
pop
insb
lock
icebp
add
push
xchg
jo
test
pop
aad
mov
out
xor
inc
add
inc
dec
push
cltd
mov
negb
pop
iret
sahf
addr16
mov
jmp
sub
xchg
sbbb
or
int3
sti
pop
loop
lret
sub
decb
dec
push
adcl
inc
bound
stos
fsts
sti
rol
mov
jnp
mov
cmp
pop
sarl
cmpsl
pop
sbb
push
adc
jb
int3
out
or
jno
mov
daa
add
cmp
loopne
call
outsl
mov
add
addr16
test
cmp
or
add
jb
pop
inc
fsubl
enter
adc
pop
pop
repnz
jnp
lds
dec
arpl
cli
mov
cmpsl
cmp
mov
xchg
popf
pop
incb
testb
mov
cld
adc
data16
push
rorb
jmp
popf
pop
adc
and
movsb
xchg
js
mov
xchg
sbb
jl
test
vpmacswd
pop
test
in
push
in
loope
and
or
test
adc
je
mov
jg
fisubrs
ss
pop
dec
out
ja
aad
jae
and
rcll
nop
xlat
cmp
std
test
and
test
in
outsb
add
pop
adc
sub
sarb
ljmp
mov
push
cmp
pop
lcall
xchg
icebp
jnp
out
aam
imul
movsb
adc
into
cmpsl
add
xchg
and
mulb
int3
inc
mov
in
das
mov
std
jo
sbb
pop
mov
shrl
cld
das
dec
mov
sbb
add
sub
fwait
leave
mov
xor
adc
mov
adc
xlat
inc
xchg
fucomp
in
lea
cmpsb
sub
mov
jl
add
cwtl
mov
sub
add
ljmp
mov
xchg
aam
sub
in
lods
in
inc
mov
shl
lahf
dec
out
mov
xchg
mov
jnp
lods
adc
push
fiadds
outsl
adc
mov
xchg
iret
pushf
out
jb
subb
lcall
jns
es
fadds
test
or
lds
test
push
mov
jnp
mov
mov
ja
testb
mov
adc
adc
ret
add
iret
push
cmp
add
inc
cmp
push
mov
inc
in
rorl
jecxz
aaa
repz
int
imul
adcl
mov
add
sub
or
les
sbb
imul
push
and
leave
cmp
mov
push
sub
push
pushf
push
test
add
mov
jb
adc
subb
popf
jno
dec
adc
adcb
lret
and
adc
inc
test
mov
inc
ds
lods
loop
pop
imul
sbb
arpl
sahf
ljmp
and
dec
stos
aam
xchg
xchg
add
adc
or
mov
xor
and
fdivrl
mov
jg
cmp
jae
xlat
xchg
mov
gs
ret
imul
push
pop
movsb
xor
lods
shr
mov
mull
xlat
pushf
nop
mov
data16
xor
outsl
sbb
pop
test
sbb
ja
push
clc
in
movsb
pop
std
movsb
adc
xor
jb
mov
push
push
insl
fidivs
rcll
push
sbb
outsl
test
es
int
lock
movsb
mov
jle
ljmp
push
mov
sbb
dec
insl
outsb
xchg
loope
aad
lods
xor
ljmp
mov
inc
xchg
cwtl
push
push
lods
aam
xchg
jb
xchg
sub
xlat
adc
cs
push
repnz
adc
pop
daa
stos
imul
daa
add
mov
mov
sub
roll
mov
fimull
dec
push
movsb
std
xchg
testb
cld
ret
xchg
jmp
cmpl
testl
or
sbb
mov
mov
mov
nop
ret
sbb
mov
cltd
int3
aaa
in
pop
imul
lcall
mov
insb
push
jle
add
jecxz
fiadds
pusha
mov
ds
jb
mov
out
lcall
in
push
roll
inc
xchg
dec
pop
scas
push
inc
push
stos
pushf
dec
sub
not
cmp
daa
push
js
dec
pop
or
lock
fs
jg
mov
adc
es
and
mov
fistpll
dec
ljmp
push
jecxz
test
scas
adc
inc
repz
and
out
lret
std
imul
xor
out
repnz
jae
xor
add
movsl
mov
or
sbb
xchg
cli
inc
sub
imulb
movsl
inc
pop
scas
jns
insl
and
pop
fisubrl
movsb
xor
sub
inc
ficoms
fimull
inc
nop
repnz
test
dec
sub
sbb
add
inc
pop
ja
mov
mov
stos
mov
mov
jns,pn
jns
seta
add
es
push
adc
stos
xchg
in
lea
add
enter
mov
cmp
mov
inc
xlat
or
dec
dec
add
sbbb
jg
mov
ss
adc
mov
jmp
dec
push
add
cmp
pop
shr
lock
push
movsl
push
inc
adc
mov
ret
mov
fimuls
add
mov
test
push
movsl
mov
repz
dec
lock
adc
pop
movsb
adc
das
and
mov
jp
cmp
mov
or
loopne
sub
fmuls
cltd
mov
xor
lcall
loop
push
mov
mov
das
or
test
sub
cltd
fwait
sbb
jo
cwtl
aam
mov
inc
cmpsb
das
xor
mov
jmp
add
shl
popf
shlb
mov
movsb
inc
pushf
add
cmpb
inc
das
lret
mov
or
fistl
ja
test
iret
int3
mov
mov
or
jecxz
push
arpl
xchg
shlb
adcb
xchg
xchg
fmull
or
sbb
mov
outsl
xchg
xor
mov
movsl
orl
inc
mov
sub
dec
in
or
fildl
jne
sbb
ljmp
addr16
push
arpl
dec
dec
add
sahf
je
das
jno
aaa
jge
aad
arpl
xor
jb
in
in
push
fcoms
cmpb
outsl
lea
fsubr
xchg
int
loope
cmc
fidivrl
hlt
xor
lea
in
mov
push
bnd
mov
test
pop
lds
sbb
jbe
dec
ret
pushf
shrb
sbbb
add
pop
mov
repnz
mov
mov
mov
dec
dec
mov
lret
aaa
int3
inc
mov
xchg
jp
clc
ja
push
push
and
push
add
cmpsb
je
cli
les
mov
cmpsb
out
lea
mov
inc
stc
sub
inc
hlt
jg
adc
cmc
mov
sbb
sbb
clc
rcrl
adc
or
jne
cwtl
jl
mov
repz
mov
les
adc
cmp
jb
jbe
es
ficomps
out
rclb
mov
and
test
hlt
in
cmp
int
xchg
or
ficoms
jo
ja
lods
inc
and
aaa
push
and
jne
fidivrl
jge
incl
fs
mov
dec
out
adc
cmp
jbe
sbb
jl
push
rorb
push
jecxz
xchg
adc
dec
mov
mov
fdivrl
push
inc
adc
xor
mov
movl
mov
aaa
mov
lds
dec
rolb
cs
jg
fwait
bnd
mov
fsts
lock
fidivrs
xchg
jns
dec
ljmp
mov
in
pop
rcll
loope
sahf
xchg
jge
and
jae
lahf
sarb
popf
stos
xor
adc
into
dec
inc
cmp
cs
addr16
dec
icebp
mov
les
test
lea
fildll
pop
jg
arpl
add
xor
ret
cmpsl
jp
dec
in
fcoml
in
jb
dec
int
rcl
cmpsb
ret
std
jp
mov
mov
push
cmp
rclb
test
cltd
ss
cltd
xor
jbe
pop
pop
cmp
repnz
mov
pop
cs
mov
lods
push
sbb
aaa
or
mov
pop
cmp
jnp
movsl
popa
inc
fwait
sahf
mov
stc
push
in
xchg
ret
lret
mov
loopne
mov
in
sbbl
mov
frstor
inc
push
jg
fwait
test
cmp
lods
mov
push
dec
sub
data16
repnz
push
add
and
pop
cmp
adc
cld
aaa
scas
add
aad
jmp
add
sub
fdivl
sbb
mov
cmp
inc
dec
outsl
sahf
es
movsb
orb
daa
jp
push
mov
fisubs
jg
lods
ret
inc
test
test
roll
lock
fcmovnu
iret
pop
daa
mov
mov
pop
aaa
add
mov
addr16
push
or
ja
int
xorb
xchg
repz
jns
xchg
shl
lods
xchg
cwtl
dec
fbstp
ja
sbb
adc
in
sarb
lods
mov
fisttpll
pop
je
cmpsb
sbb
pop
insl
pushl
fnstsw
mov
test
and
in
mov
add
ljmp
paddd
call
sbb
lock
stos
loope
push
adc
les
pop
mov
movsb
mov
inc
jbe
stos
adc
cmp
fisttpl
xchg
xor
lock
ljmp
jnp
xlat
into
mov
cmpsb
adc
out
jae
inc
pop
xor
jmp
dec
cmp
fldlg2
mov
repz
dec
adc
pop
jbe
sbb
int3
les
xchg
add
push
test
scas
xor
xlat
scas
addr16
sub
mov
jmp
cmpsl
inc
shrl
dec
scas
push
xchg
adc
aam
add
daa
in
xor
hlt
sub
int
jae
sbb
push
jg
jo
rcll
adc
xlat
and
in
repnz
xchg
xchg
mov
inc
in
leave
lret
setp
cmp
and
and
xor
enter
adc
mov
fldt
mov
and
insb
std
mov
or
xlat
cmpsb
fists
out
hlt
and
sub
cmp
in
xchg
sbb
pop
sbb
jno
in
push
pop
push
ja
pop
cmpsl
xchg
jb
jne
xchg
jo
test
std
rol
cmp
jb
mov
das
fldt
sbb
mov
mov
pop
movsl
mov
loope
out
int3
fistps
cltd
xor
xor
jecxz
mov
and
cmc
mov
out
xor
or
jmp
sbb
pop
aas
jbe
gs
or
and
nop
sub
std
popf
push
test
rclb
imul
jge
inc
out
sti
stos
fcompl
jbe
pop
cmp
mov
je
pop
jbe
and
pop
sub
mov
enter
pop
hlt
mov
aaa
sbb
adc
xor
mov
in
stos
popa
and
sbb
movsb
jmp
cwtl
fmull
jae
jo
fisttpl
loop
repz
fistl
jbe
out
lcall
fwait
pop
xor
jle
cmp
out
xchg
decl
loopne
xchg
cmpsb
mov
gs
push
loope
jle
adc
sub
les
insb
stc
enter
shlb
mov
gs
cmc
sbb
loop
icebp
adc
sbb
gs
aad
sub
push
incl
pop
sub
ss
inc
push
fstpt
imul
pop
lock
push
jno
cmpsb
mov
lods
sub
push
movl
hlt
gs
cmp
push
mov
stos
sbb
cmpsl
xchg
inc
imul
or
push
xchg
mov
ficoms
test
data16
das
pop
add
mov
out
mov
hlt
inc
xor
sub
adc
xor
pop
wbinvd
addr16
xor
jecxz
repz
add
cmp
mov
popa
shrb
repnz
mulb
insb
adc
notl
loope
out
scas
pop
cmpsb
adc
pushf
cli
xlat
dec
mov
outsl
jle
repnz
lahf
mov
mov
mov
f2xm1
xor
int
xlat
adc
leave
push
in
sti
cmpl
sub
push
adc
fmull
push
fistpll
jo
inc
outsb
iretw
cmc
mov
sbb
cmp
and
add
sahf
lock
mov
ds
stc
rcll
mov
mov
xchg
subb
popw
movsb
popa
sarl
inc
sub
lds
test
xor
lcall
pop
mov
xor
mov
xchg
cmp
pusha
mov
bound
xor
adc
pop
je
push
insl
adc
in
dec
sbb
not
lahf
jp
packuswb
xor
jmp
hlt
and
and
inc
push
or
ss
in
sbb
cmpsb
lock
jbe
pop
cmp
pop
xor
and
or
incl
stos
arpl
pusha
mov
add
cmpsl
cmp
adc
pop
xchg
add
mov
or
in
shll
pop
push
lock
push
pushl
cld
test
pushf
cmpsb
pop
cmp
mov
xchg
aad
movsl
ffreep
fdivrs
popa
mov
push
bound
push
mov
nop
out
cltd
sub
testl
mov
pop
aad
pusha
pop
sbb
xchg
ss
sbbl
push
test
mov
popf
aaa
es
fcompp
cmpsb
jg
jns
outsl
or
aas
fidivs
test
in
shr
hlt
int3
in
into
daa
ja
add
divl
jmp
in
imul
lock
jmp
arpl
push
jno
repnz
inc
sub
and
and
lock
mov
shl
cmp
pushf
cmp
pop
lcall
xlat
int
ds
xor
push
insl
mov
jb
sub
mov
sub
enter
sbb
sbb
pop
sarl
mov
aas
jo
cmp
fcoms
inc
in
loope
xchg
mov
mov
mov
decl
out
mov
loopne
mov
jmp
inc
cmpsb
xchg
cmp
mov
pop
pushf
cld
pop
sti
fcomps
push
sti
arpl
lods
lret
xchg
push
xor
arpl
mov
fisubrl
sub
hlt
test
mov
push
mov
pop
sti
xlat
out
push
movsl
or
data16
mov
jno
data16
jg
stos
gs
sbb
mov
in
push
jmp
mov
jecxz
push
xlat
loope
xchg
cmpsb
or
jmp
nop
cmp
adcl
push
push
nop
fsubl
xchg
cmp
lock
mov
int
push
and
and
mov
jns
sarl
mov
add
xchg
shlw
xchg
cmpsb
jns
mov
enter
repz
and
gs
xchg
sahf
movsb
pop
movsb
mov
cmp
cmpsb
insl
popa
push
push
enter
pop
pop
add
xchg
mov
inc
adc
std
into
ljmp
test
iret
test
insl
push
inc
call
lods
or
notl
mov
shlb
cmp
stos
or
std
jmp
dec
xchg
push
cltd
push
idivl
inc
and
and
jae
push
mov
cwtl
push
std
les
pusha
ja
pop
and
jl
stos
jo
repnz
sbb
mov
cmp
push
jge
lods
daa
fstl
jg
cli
mov
enter
mov
xchg
rclb
push
xor
je
dec
or
movsb
adc
cmpb
or
call
hlt
test
ljmp
jo
add
stos
lcall
fs
and
bound
insl
or
jge
call
adc
cmpsb
test
and
add
pop
je
push
and
mov
or
cmp
dec
xor
out
pop
dec
sahf
push
lret
jbe
inc
mov
inc
jb
and
pop
mov
lahf
xor
pop
repz
sub
push
lea
mov
lea
popf
push
fs
sub
jg
lods
stc
pushf
push
jns
ljmp
jae
mov
mov
cmp
pop
push
arpl
adc
mov
adc
sub
xchg
push
aas
add
xor
call
jbe
aam
mov
ljmp
rcr
cmp
loope
popa
fimull
add
lret
out
and
push
pop
leave
shrb
push
es
inc
mov
xchg
mov
daa
xor
into
popf
rcll
dec
fisubs
sarb
mov
sub
gs
in
out
xchg
js
adc
xor
dec
sbb
push
out
push
ffreep
pop
adc
push
data16
xchg
lods
movntq
cld
aad
notb
fildll
ss
stos
pop
add
paddd
lahf
xchg
or
xor
pop
aam
cmp
movsl
aad
gs
mov
and
push
mov
ret
pop
pop
or
xchg
fs
and
je
pop
jge
aas
cld
rcrb
sti
popf
mull
addr16
add
and
dec
xlat
fiaddl
jno
add
imul
out
insl
dec
in
gs
fldt
or
inc
xor
push
inc
mov
enter
loop
sahf
jo
pop
jp
addr16
mov
mov
xlat
or
std
sub
inc
adc
std
pop
jmp
sub
mov
lods
xor
mov
mov
adc
dec
sub
sarb
and
xchg
xchg
loop
add
insl
mov
ret
inc
xor
dec
lcall
dec
loopne
sbb
packuswb
push
xchg
xchg
xchg
addr16
je
xchg
sahf
inc
cltd
and
and
dec
mov
cmpsl
dec
insb
test
je
cli
in
pop
hlt
mov
adc
dec
jg
pop
lods
and
imul
push
sub
shrb
popf
testb
imul
das
cld
ret
jge
jnp
inc
out
cmp
add
or
addr16
faddl
imul
cmp
dec
lcall
sbb
psrlq
ret
add
dec
lret
add
mov
ja
dec
sub
ss
rclb
cs
adc
popa
lock
add
jnp
xchg
xchg
xor
cmpl
notl
mov
loopne
subl
arpl
lods
push
stos
pushf
sub
idivl
das
repnz
push
mov
in
sub
xchg
pop
nop
out
inc
xor
jns,pn
lea
jae
sbb
push
cmp
test
shlb
addb
ja
inc
mov
aam
nop
lahf
dec
mov
into
test
push
dec
stos
mov
and
jne
or
adc
lea
mov
and
mov
jle
lcall
mov
scas
xchg
stos
addl
aas
outsl
jb
push
jno
gs
mov
fimuls
xchg
jge
fst
daa
mov
lret
dec
xor
add
fcmovb
loopew
test
cltd
cwtl
sbb
outsl
out
sub
cld
push
mov
push
popa
insl
shrd
loope
xor
rcll
test
mov
mov
popa
jns
cltd
fidivrl
gs
in
lods
ret
int3
test
xor
testl
dec
pop
lods
clc
pop
loope
sub
inc
popf
insb
mov
or
cmp
mov
xchg
pop
fs
mov
add
or
jbe
cld
or
icebp
and
fucom
push
jo
xchg
mov
nop
cltd
data16
sti
mov
cmpsl
mov
fcmovne
push
bound
fldcw
scas
popf
lret
mov
xor
jg
dec
test
and
mov
jnp
sbb
aaa
inc
insb
das
mov
leave
sub
jge
xchg
dec
out
fcomi
pop
xchg
dec
jp
xor
mov
hlt
daa
std
iret
int3
imul
mov
ret
enter
cmp
cmp
icebp
or
clc
fbstp
inc
pop
lea
push
in
out
cltd
cltd
in
ja
inc
jbe
add
adc
in
fs
inc
stos
inc
pshufw
mov
cmc
mov
testb
push
loop,pt
sbb
cmp
int3
jecxz
fstpl
adc
loopne
aam
inc
insb
pop
jg
out
xor
and
mov
or
frstor
dec
dec
mov
mov
add
sub
cmp
sub
movsl
test
jnp
mov
out
xor
nop
adc
add
mov
test
int3
gs
leave
iretw
xchg
rcrl
ljmp
xchg
call
in
and
mov
xorb
mov
pop
xlat
dec
test
mov
sahf
lods
dec
leave
inc
jno
cmp
mov
lods
and
xor
popa
in
aam
aam
and
into
jle
or
cmp
or
mov
cmp
xchg
add
adc
addl
add
jle
pop
pusha
ds
testl
xor
pop
pushf
xchg
movsl
out
pop
mov
add
andl
cmpsl
or
jae
mov
les
add
out
lahf
mov
jo
inc
lahf
and
addr16
jno
cmpsb
jae
dec
or
lods
les
mov
or
and
pop
add
mov
push
fadds
bound
mov
call
es
sub
gs
xor
repnz
cmpsl
xchg
rcrl
test
mov
mov
dec
sub
lods
cmp
or
popf
push
add
push
or
xor
shlb
xor
rdpmc
push
scas
xor
sbb
imul
mov
imul
add
cmpsb
aad
andb
ljmp
test
sub
dec
jl
fcoml
jno
sbbb
pushf
jl
arpl
loopne
mov
cmpsb
pusha
sub
push
and
pop
cld
ss
sahf
xchg
inc
xorl
push
pop
into
fisubrl
mov
mov
add
pop
push
or
es
pusha
cli
cmpb
popa
inc
pop
inc
mov
xchg
mov
and
adc
jl
ficoml
ss
addr16
sarl
cmpl
sbb
jg
lahf
loopne
add
sub
mov
addr16
cmp
aad
and
push
add
add
aad
dec
cmp
lods
sahf
dec
cmp
rclb
mov
pop
in
mov
adc
push
add
inc
push
out
loopne
ljmp
jl
sbb
xchg
xlat
adc
loopne
movsl
rorb
fisttpl
push
push
adc
rcrl
test
dec
jmp
cmp
mov
push
hlt
pop
add
adc
sub
sub
subb
or
ss
sbb
jnp
ficoms
gs
cld
cltd
jge
in
jg
inc
xlat
lcall
rcr
test
push
adc
add
push
enter
xchg
mov
sbb
sbb
lods
and
mov
jmp
popa
sahf
in
flds
inc
int3
cli
leave
orl
lret
pop
pop
xchg
adc
outsl
stos
out
cwtl
and
jmp
mov
aad
xor
sbb
pop
scas
and
jl
inc
into
jle
inc
pop
ffreep
sbb
fldlg2
ja
sub
xchg
sub
jecxz
mov
mov
push
into
mov
data16
lea
and
pop
ret
bound
sub
loopne
loope
loop
cmpsb
out
aaa
mov
sbb
pop
ret
aas
lock
pop
and
sub
jl
rolb
push
stos
fcompl
mov
sbb
scas
clc
shll
fisubrl
loope
out
lret
jns
sub
mov
and
adc
xor
mov
fldt
mov
or
lock
popf
nop
or
in
pop
test
sub
pusha
and
fmul
mov
mov
clc
std
xchg
push
mov
mov
in
lret
dec
push
test
jnp
jmp
cmpsl
cmp
lods
loopne
and
mov
mov
jl
cmpsb
aaa
pop
stos
ret
xchg
data16
inc
je
mov
cmc
push
jge
xor
pop
or
add
sarl
ficoml
inc
stc
mov
in
lds
jo
mov
push
test
popa
aaa
sbb
rcl
insl
je
pop
push
bound
lahf
pop
jl
ret
aad
ret
or
adc
call
cmp
arpl
lods
shll
into
enter
jecxz
loope
adc
mov
push
test
mov
inc
push
cmp
sbb
rcrb
iret
cmp
sub
sub
and
stos
or
pop
adcb
jle
fcompl
in
push
andb
fwait
and
popa
sbb
xchg
adc
xchg
fwait
push
mov
xor
dec
push
mov
popa
adcl
dec
sub
aaa
xchg
adc
cmp
outsl
sub
xchg
and
adc
ljmp
lcall
sub
into
mov
lahf
mov
enter
xor
xchg
fadds
in
push
and
mov
lcall
push
mov
mov
imull
jbe
push
jns
cmp
in
daa
or
or
mov
and
movsl
orl
inc
push
jns
mov
je
nop
lret
loopne
repnz
lock
imul
cld
mov
insl
iret
pop
invd
ljmp
ja
jb
cli
mov
aas
aam
loopne
jg
pop
mov
int
lahf
testb
or
stc
imul
iret
clc
xor
and
and
jbe
sbb
adc
add
ret
or
jbe
push
push
jbe
jns
fldl
mov
inc
inc
es
push
jo
pop
cmp
adc
je
jb
test
push
xor
and
pop
or
lods
or
lret
dec
push
add
dec
mov
inc
adc
pop
jp
stos
and
lods
mov
inc
in
jae
shr
push
jb
mov
or
xchg
call
inc
xlat
cmp
push
cmp
jp
test
popa
sub
loop
xor
ds
clc
xchg
push
lret
testb
pusha
dec
pop
pop
lds
xchg
outsb
jg
sub
xor
sub
movups
inc
aad
fistpll
add
or
cs
or
les
imul
sub
lcall
in
sub
xor
imul
or
cwtl
push
test
push
arpl
or
dec
cmp
data16
out
xor
or
or
xor
xor
pop
sbbb
pop
test
inc
push
stc
add
sub
sub
pop
jno
divl
ret
push
adc
gs
stc
mov
imul
shl
jnp
in
insb
dec
shll
movsb
sbb
xor
mov
ss
cmp
push
sub
xchg
loope
outsb
and
adc
in
std
daa
loopne
jns
inc
or
mov
mov
jbe
mov
jbe
aas
push
push
or
push
pop
shl
inc
mov
popf
add
pop
sub
mov
jb
dec
xor
dec
pop
ljmp
adc
retw
mov
pusha
aad
pop
sbb
sbb
arpl
into
xchg
imull
pop
dec
gs
push
sub
popf
aas
mov
in
call
xchg
push
out
jb
and
xorb
mov
mov
in
cld
or
pop
scas
stos
mov
adc
mov
addr16
push
xchg
shr
add
and
xor
imul
cltd
push
mov
cmp
in
xchg
cld
push
stc
jb
scas
lret
lds
fistpl
hlt
cmc
cmp
aaa
xor
jno
mov
xchg
frstor
pusha
imul
or
scas
mov
inc
loopne
hlt
push
mov
inc
push
and
pop
xchg
inc
ljmp
xchg
add
jge
jmp
inc
xchg
push
subl
leave
in
sbb
lahf
pop
outsb
mov
out
adc
insl
popa
scas
xorl
pop
and
or
ds
xchg
movsb
or
flds
mov
mov
or
ds
sbb
inc
push
add
or
sub
add
cmc
out
sbb
icebp
adc
push
mov
shlb
xorl
xchg
into
das
xor
push
stos
xchg
int3
test
mov
cmpb
mov
subb
xor
sbb
mov
push
fs
jl
xchg
lods
int3
cli
outsl
push
xchg
jbe
rcrl
dec
or
inc
xchg
lahf
pop
pcmpgtb
mov
inc
and
sbb
int
push
inc
insl
adc
inc
insl
pop
jecxz
xor
adc
leave
pop
dec
adc
sti
xchg
incl
loopne
cmp
pop
adc
push
daa
bound
xor
jle
movsb
jae
loop
jmp
mov
pop
cmp
inc
or
sti
push
addl
ja
dec
jne
mov
in
imul
popf
push
mov
outsl
mov
imul
and
arpl
ss
mul
inc
push
test
sub
adc
inc
mov
jbe
and
push
das
pop
xor
imul
sub
pop
inc
fs
repz
sbb
jo
jns
test
ja
cld
outsl
imul
mov
sbb
and
ljmp
adc
shlb
scas
mov
ljmp
jb
out
js
arpl
mov
add
sbb
lcall
push
mov
aas
rcr
push
repz
sti
cmpsl
gs
in
nop
jg
lcall
xchg
arpl
mov
jecxz
pop
shll
push
xor
call
jbe
addr16
and
pop
inc
dec
vcmpsd
inc
sbb
cld
shll
jge
gs
mov
push
loope
or
in
scas
aam
ret
scas
xor
fstps
sbbb
lret
inc
pop
bound
movsl
in
in
pop
sub
mov
lods
icebp
or
daa
jae
popa
or
popa
dec
add
xchg
sbb
and
sub
shll
cmp
xchg
mov
pushf
xchg
lahf
insl
or
sahf
imul
inc
ror
cs
cli
into
out
cltd
out
xor
xchg
jmp
xor
push
inc
jae
aad
cmp
and
mov
js
cmp
dec
inc
cwtl
xchg
add
push
and
sbb
nop
insl
mov
mov
inc
cmp
int
into
mov
xchg
fdivrl
and
rcrl
or
pop
pop
inc
aaa
sub
pop
dec
lods
cld
cld
inc
push
leave
fisubl
jecxz
push
outsl
sbb
lret
add
es
pop
lret
cltd
int
dec
dec
add
fst
and
pop
xlat
push
enter
dec
lods
scas
loop
inc
outsl
fcompl
movsl
cmp
ja
std
es
jb
ja
xor
in
gs
lret
dec
push
mov
push
xor
jo
cli
repz
stos
shr
ss
push
adcl
sub
pop
and
pop
call
jmp
and
lea
lods
sub
fstpt
xchg
lcall
xchg
inc
mov
jl
lahf
std
call
sti
inc
and
push
xchg
push
adc
loop
lods
mov
in
lock
add
lock
sbb
cmpsb
mov
ret
andl
jae
jne
pop
jo
and
xchg
scas
loopne
sbb
mov
mov
test
push
mov
adcb
clc
push
sarl
mov
push
jge
inc
dec
sbb
pop
xor
pop
xor
xor
cmpsl
push
inc
push
loop
pusha
adc
cli
push
outsb
push
cltd
pop
jmp
out
popf
fstpt
icebp
xor
sbb
mov
jbe
cltd
push
scas
mov
fwait
es
mov
and
cmp
pop
adc
enter
mov
xchg
sbb
test
push
nop
add
xchg
sbb
sbb
push
ja
icebp
icebp
shll
sbb
mov
xor
xor
call
xchg
inc
jne
test
inc
xor
push
addb
push
xor
pushw
cli
mov
lods
cwtl
inc
loope
in
jb
pusha
xor
mov
shrb
xlat
nop
mov
inc
add
inc
mov
imulb
lret
shlb
jae
rorl
fs
lds
jl
sbb
jb
cmp
scas
and
xchg
jbe
xchg
jae
jp
cmpsb
or
lret
imul
add
fdivrp
xlat
add
data16
fidivrs
ret
cmp
push
mov
jns
jns
pop
xor
push
sarl
sub
push
int3
mov
jl
inc
and
jge
ljmp
out
nop
scas
cmp
aam
adc
pop
mov
addr16
ret
mov
stc
push
leave
hlt
dec
push
push
add
sbb
cmpsl
imul
sbb
imul
push
or
stc
and
pop
ret
cmc
pop
jmp
je
and
dec
xlat
dec
fstps
pop
push
mov
lcall
leave
xorb
popa
xor
jle
fldt
fistpl
mov
sbb
cmpsl
aas
cmp
andl
shll
addb
imul
cmp
ja
fldl
push
sbb
mov
push
movsb
adc
dec
call
cmc
mov
andl
mov
clc
rcrb
mov
imul
mov
mov
fsubl
mov
std
jbe
sbb
adc
fidivrs
inc
mov
test
sub
and
jno
jnp
das
xchg
pusha
adc
aas
pusha
enter
inc
outsb
mov
mov
aam
xor
iret
sti
pushf
jns
pop
nop
leave
ljmp
inc
sub
pop
cmp
pop
js
push
imul
scas
call
adcb
lea
outsb
jne
lea
or
mov
inc
fdivl
sahf
hlt
loopne
dec
push
shlb
dec
mov
xor
aad
lods
cltd
jae
sarl
ret
cmc
sbb
cmp
repnz
push
jo
mov
and
push
mov
mov
fisubrs
jmp
repz
jnp
mov
sub
icebp
loop
mov
inc
enter
out
addr16
mov
sub
sub
in
xchg
cld
push
fdivrs
mov
and
out
fcomps
out
xchg
mov
in
and
shll
mov
and
mov
stc
cmp
pop
and
push
inc
inc
xchg
fdivl
and
jmp
sub
stos
and
inc
sub
fdiv
jmp
lret
inc
imul
fisubrs
or
rcrl
mov
cmc
inc
sbb
mov
mov
adc
addb
je
xor
mov
ds
orb
adc
push
outsb
dec
xor
or
and
ja
shlb
xchg
add
jmp
pop
mov
sti
in
inc
mov
sbb
xchg
repnz
and
xchg
cmp
shrb
mov
push
cltd
add
mov
push
cmp
push
jg
in
sbb
push
cmp
lahf
stc
je
mov
jne
das
xchg
and
rol
sbb
popf
add
fucomi
scas
push
jo
push
arpl
pop
xchg
scas
dec
mov
imul
les
cmp
push
sbb
call
test
xor
ret
jne
sarl
and
cmp
mov
nop
push
popf
pop
stc
mov
pusha
lds
and
cmpsb
mov
loope
sbb
add
push
repz
ja,pt
jmp
jl
cmp
push
pop
rolb
add
pop
mov
dec
inc
sub
adc
mov
mov
inc
cmp
loop
mov
mov
stos
xor
ficoms
inc
mov
movsb
pop
mov
cmp
or
xchg
fidivrs
sub
xor
std
leave
mov
push
ror
xchg
and
shrl
mov
jle
cwtl
mov
test
leave
add
xor
leave
es
push
mov
dec
stos
sbb
mov
xchg
jge
lds
fwait
push
lret
popf
jge
mov
cmpb
shrl
shll
and
pop
lock
mov
jg
sti
loopne
sub
jnp
add
mov
fldenv
fcoms
popa
pop
rclb
inc
dec
mul
push
popf
int3
jne
loopne
adc
push
in
ret
push
inc
and
mov
bound
dec
pushf
mov
lods
push
adc
xchg
jb
fdivs
int3
idivl
xor
fnstcw
clc
xor
lock
scas
push
fmul
cmc
add
ja
loop
push
aam
out
push
shrd
jmp
inc
int
call
mov
sbb
aam
push
test
push
shlb
ret
pop
aad
fbstp
fnstcw
adc
jge
dec
jb
cmp
out
mov
xchg
lret
fldcw
xchg
jl
out
mov
aad
xlat
mov
inc
leave
enter
adc
pop
sbb
mov
jmp
pop
cmpsl
adc
cmpsb
and
scas
stos
push
xor
es
mov
fildl
sbb
addr16
popf
mov
pop
fdivp
adc
xchg
jns
push
mov
adc
icebp
mov
ss
jno
loope
shlb
nop
into
sbb
sub
push
sbb
out
mov
xlat
fcoms
push
pusha
pop
xlat
insb
lea
mov
jp
movsl
push
jae
shrd
out
sti
test
cwtl
js
add
inc
mov
xor
call
mov
push
sub
mov
dec
pop
cmp
cmp
xor
pop
push
movsl
sub
mov
out
decb
mov
mov
jne
repz
arpl
push
pop
dec
or
sbb
xchg
or
sbbl
outsl
pushf
or
cmc
cmp
xor
cli
pop
cmp
xchg
ja
cmpsl
jo
inc
fdivrs
inc
xchg
lret
push
enter
mov
outsb
test
jp
sbb
jns
lds
clc
and
js
adc
pushf
fld
jp
jg
cmpl
in
in
xor
pop
imul
mov
dec
sbb
sbb
dec
or
mov
mov
scas
xchg
fisubs
std
mov
and
jle
fnstcw
sub
daa
daa
adc
jp
inc
sub
ljmp
int
sbb
mov
add
dec
cmp
mov
and
mov
mov
adc
clc
xor
or
cmp
or
fistl
jno
inc
adc
cmpb
mov
push
nop
and
push
test
pop
jo
int3
loop
xor
out
push
sbb
fmuls
leave
fcmovne
xlat
fwait
inc
sti
pop
repnz
jge
frstor
sarl
iret
std
loop
adc
jb
test
out
xor
cmc
mov
xchg
xor
sbb
add
icebp
orb
push
mov
pop
loopnew
ror
mov
pushf
add
xor
add
mov
shlb
or
clc
jmp
int
push
sbb
repz
push
enter
cmpsl
out
pop
push
pop
fcmovnbe
jnp
lcall
cmp
sarb
rol
popa
mov
jns
sub
or
push
sbb
in
int3
int
test
jle
jnp
fisubl
xchg
insl
scas
mov
pusha
xchg
jle
bound
arpl
ret
mov
sbb
push
mov
push
xlat
or
cs
movsb
call
add
mov
das
es
ret
xchg
clc
mov
mov
push
add
subb
addr16
xchg
rcr
aas
sahf
jb
call
outsb
enter
dec
add
daa
sbb
fisubl
stc
scas
lret
xchg
mov
xchg
rcll
jae
rorl
pop
push
scas
inc
cs
cmp
leave
je
dec
push
and
and
pop
les
ss
mov
xchg
cmp
dec
pop
jne
cmp
push
mov
mov
and
add
in
mov
push
popa
cmpsb
es
mull
jb
sbb
sub
rcll
gs
pop
mov
cwtl
mov
imulb
jns
mov
xchg
xor
nop
lea
xchg
icebp
xchg
loope
dec
jb
push
fidivs
scas
mov
out
inc
sbb
cpuid
cmp
pop
dec
add
sbb
cmpsl
pop
mov
nop
push
ljmp
mov
pop
aad
pop
clc
fbld
ror
pop
popf
sub
repnz
and
mov
xor
les
dec
add
xchg
inc
jle
addr16
mov
inc
xchg
sbb
or
cs
adc
mov
inc
cld
mov
or
in
idiv
pop
mov
in
ja
xchg
aam
dec
movsl
add
out
out
loope
sub
mov
repnz
sub
push
add
mov
outsb
testb
nop
pop
rorb
fwait
adc
test
xchg
sub
nop
push
xlat
adc
pop
xchg
aaa
pop
jne
int3
mov
data16
fidivs
xor
js
mov
sbb
aad
data16
sub
jp
jbe
jnp
ljmp
and
mov
jecxz
xchg
repnz
jl
cmp
push
dec
dec
push
cmpsb
cmp
out
lcall
mov
inc
inc
dec
adc
jb
mov
sbb
shrl
in
lret
movsl
cs
pusha
push
cmp
js
xchg
mov
cmc
sub
push
pushf
idiv
inc
fcoms
cmp
add
iret
pop
dec
ret
pop
sbb
sarb
xlat
jge
adc
xlat
imul
xchg
jbe
insl
sarl
jb
add
faddl
jecxz
add
jns
movl
mov
cwtl
xchg
pop
dec
popf
pop
movsb
xor
aam
neg
outsl
or
dec
rclb
fcoml
sub
sbb
ficomps
lahf
mov
push
sub
sbb
adc
or
pop
mov
lock
mov
sub
out
fstps
jno
fimull
sbb
aaa
cld
rol
dec
adc
jns
stos
mov
fiadds
add
stos
mov
jae
fs
adc
dec
pop
cld
movsl
outsb
and
out
xor
cmpsb
scas
xor
neg
mov
adc
pop
inc
adc
scas
ret
movsl
pop
fwait
and
pusha
or
mov
popf
jle
popa
pop
icebp
dec
in
cmpsb
cld
into
dec
sti
push
mov
pop
sbb
cld
imul
clc
inc
lock
and
mov
and
loopne
mov
mov
in
push
xor
dec
jns
and
mov
in
jecxz
mov
or
mov
xor
js
xor
push
jmp
jmp
rcrb
xor
insb
pop
lods
je
rcr
mov
hlt
dec
push
aad
xor
cmp
outsl
arpl
xlat
or
xchg
adc
lret
lods
aam
jmp
lret
int3
xlat
in
inc
and
gs
cmpsb
out
out
lods
inc
jne
movsb
sbb
arpl
loop
rcl
sbb
mov
jge
and
cmp
fildll
fidivs
and
popa
jno
mov
add
daa
mov
ljmp
push
push
bound
push
test
cmp
pushf
mov
scas
loopne
scas
sub
je
xchg
and
inc
cmp
lds
int3
push
into
mov
push
xchg
inc
ljmp
addl
mov
in
sbbl
hlt
bound
jno
cli
adc
mov
add
pop
dec
or
mov
jg
push
jne
mov
xor
roll
or
daa
lods
cmpsl
pop
sbb
hlt
gs
pop
or
mulb
add
in
mov
icebp
addr16
and
inc
mov
stc
int
aad
iret
inc
ljmp
incb
adc
data16
stos
cmc
and
dec
push
mov
lock
dec
das
push
mov
add
sarb
fisttpl
jbe
dec
loope
roll
or
mov
sub
loope
stc
and
pushf
cmp
pushf
cmp
pop
mov
int
in
jnp
mov
lods
ss
jno
xchg
and
push
movsb
popf
add
fsubrs
inc
mov
add
pop
les
pop
push
xchg
adc
out
xchg
scas
aaa
inc
imul
adc
mov
sub
pop
fucomi
inc
sbb
outsl
mov
sub
mov
push
es
dec
push
loope
test
cwtl
dec
cli
frstor
fdivrl
lock
jne
or
sbb
jnp
mov
clc
faddl
jecxz
es
aam
fsubl
xor
enter
imul
jns
sub
xor
mov
xor
shrb
sub
rcrl
loop
or
iret
lret
mov
push
or
stos
lret
cld
add
repz
adc
mov
out
out
mov
sub
pop
or
mov
aas
negb
mov
fcompl
insb
xlat
push
push
or
cmpl
jne
inc
xor
enter
mov
mov
scas
test
gs
add
hlt
les
push
add
jnp
mov
loope
dec
test
xchg
push
scas
ret
push
cmp
js
fnstsw
xor
dec
ja
jl
into
cmpl
outsb
jg
mov
add
xor
xor
dec
fistps
inc
call
out
push
and
mov
push
mov
mov
pop
dec
cmp
push
or
test
sbb
mov
mov
dec
int
fimull
iret
jo
lock
std
shrl
fidivs
or
inc
aaa
out
fisttpl
int
push
pop
mov
ljmp
cmp
inc
repz
fcomp
pop
push
add
and
imul
outsb
add
jns
mov
in
jmp
sub
sbb
pop
fstl
movb
push
icebp
sbb
xchg
xchg
imul
push
xchg
inc
movsl
ja
pop
int3
push
mov
or
pop
mov
pushf
pop
xchg
js
mov
test
idiv
jbe
lahf
mov
popf
aad
scas
xchg
xchg
push
mov
mov
pop
dec
pop
or
xchg
iret
and
pop
pop
popa
and
dec
pop
mov
sub
or
mov
loope
seto
stos
xchg
sbb
sbb
rcrl
and
outsl
push
or
out
popa
dec
pop
movsb
xchg
push
adc
cmp
jo
inc
mov
xlat
sti
fcompl
mov
cwtl
jl
adc
jecxz
sbbl
lcall
dec
xor
push
mov
push
int
js
into
dec
movl
dec
inc
inc
push
adc
mov
mov
iret
or
ficoml
test
mov
ljmp
add
dec
pop
or
out
aaa
jo
sbb
icebp
xlat
scas
sub
xor
popa
jecxz
mov
lret
lods
loope
int3
sbb
icebp
pop
ficoml
sbb
lret
xor
or
cmp
or
popa
pop
repz
sub
mov
int
pop
adc
loopne
clc
xor
call
aad
loop
jp
push
xchg
mov
and
dec
test
and
xchg
jno
mov
aas
sahf
ljmp
add
test
fimull
aas
lret
adc
je
jg
ret
and
jge
insl
cmp
mov
aaa
unpckhps
test
dec
cwtl
push
test
sarb
push
js
lahf
jp
push
inc
or
ret
jne
into
or
lock
add
sbb
cmp
sbb
int
jg
xor
lcall
xlat
fiaddl
push
fs
add
mov
xor
inc
xchg
add
add
rcrl
xor
add
hlt
lcall
pop
test
inc
adc
inc
ss
xchg
mov
in
repz
mov
out
xchg
daa
lret
aam
jle
xor
cmp
pop
inc
and
test
ljmp
jecxz
mov
outsl
xchg
out
xchg
and
subb
into
cmp
iret
jecxz
mov
sbbl
mov
push
iret
dec
and
gs
sbb
or
jle
test
sbb
mov
xor
sbb
mov
inc
push
scas
aas
and
inc
call
scas
imul
es
add
xchg
and
inc
sub
sub
xor
inc
xlat
rorb
mov
pop
mov
in
cmp
or
and
lods
fwait
xor
cmc
fistpl
jo
loope
pop
cmp
xor
rorb
inc
jo
fwait
scas
dec
out
jp
pop
xchg
pop
rcrl
in
xor
js
dec
pop
out
xchg
cmp
sub
push
pop
sarl
jle
dec
push
push
sahf
add
movsl
lods
jne
sarb
inc
adc
sti
xor
rcr
jmp
pop
xor
pop
dec
push
pusha
and
adc
in
aas
inc
out
rcrl
repz
outsl
pop
in
push
in
xchg
xor
into
add
mov
int
inc
jns
adc
jnp
jl
push
iret
std
das
pop
movsl
clc
fdivrs
mov
sti
cmp
xchg
movsb
dec
cld
iret
dec
or
inc
jecxz
dec
leave
dec
test
insl
mov
mov
adc
cmpsb
or
mov
lock
mov
mov
iret
and
push
dec
jo
push
push
inc
sahf
mov
and
sbbl
add
inc
or
pop
addr16
push
cmp
pop
icebp
cmpsb
shrl
sarl
loope
out
xlat
mov
enter
movsb
jge
rclb
gs
or
mov
push
imul
sbb
xchg
shl
push
or
xor
fistpl
pop
stos
sbb
fwait
push
mov
movsb
mov
jp
out
stos
cmp
cmc
or
out
je
xchg
and
and
dec
or
xor
movsl
mov
insb
jns
mov
hlt
fs
adc
lods
mov
push
cmp
jecxz
repnz
call
jg
mov
fcompl
int
test
int
jns
adc
cmp
xor
lds
psllq
mov
cmp
loopne
mov
sub
xchg
adc
stc
xorl
inc
adc
in
mov
jnp
mov
push
mov
sub
dec
fs
pop
fxch
adc
ret
inc
ret
mov
cld
inc
test
inc
push
push
mov
fxch
ret
inc
jno
arpl
cltd
call
aam
cli
mov
sbb
lods
xor
sbb
mov
push
sbb
lret
js
es
aas
and
mov
jmp
sub
test
xor
movsl
test
mov
stos
mov
sti
lock
or
mov
add
mov
rclb
add
sub
out
push
cmp
addr16
rclb
sbb
push
sarb
push
mov
pop
adc
or
xchg
test
jg
cmp
in
cmpsb
ss
cld
sub
enter
test
add
xchg
pop
in
daa
data16
xor
loopne
test
repz
mov
adc
sub
mov
cmp
lea
aam
sub
push
lods
jmp
or
clc
fadd
cld
fcomps
int3
add
ljmp
xor
icebp
pop
pop
adc
or
in
ret
mov
inc
inc
scas
or
iret
or
xchg
jecxz
xchg
fnstcw
mov
dec
cmpsl
sahf
xchg
pcmpgtw
nop
xor
stos
inc
sub
mov
jns
ret
lcall
mov
ficomps
mov
ds
jg
xor
mov
jne
out
pop
test
push
mov
or
inc
fdivrs
push
dec
insl
mov
mov
idivl
aas
dec
push
fldt
xchg
xchg
in
fwait
pop
jno
add
stos
pop
sarl
xchg
mov
and
xor
xchg
hlt
vpunpckhdq
pop
xchg
sub
jns
test
hlt
push
and
jmp
out
cmp
in
dec
mov
pop
add
mov
dec
xchg
dec
inc
pop
call
aad
or
mov
les
mov
mov
insb
lcall
xor
nop
mov
or
fwait
adc
jnp
scas
mov
aaa
loop
inc
call
fnstsw
mov
fcoms
pop
and
imul
ja
cmc
sahf
nop
decl
push
repnz
test
andl
jno
sub
jns
shr
ret
xor
cmpb
xor
dec
arpl
std
sbb
cltd
xchg
icebp
in
fs
aam
sbb
and
inc
mov
inc
or
test
push
jnp
or
iret
aaa
out
stos
mov
les
int
inc
jb
pop
dec
or
mov
in
daa
pop
pop
cmp
mov
dec
mov
loopne
fcoms
push
push
mov
jp
mov
fucom
dec
es
jecxz
adc
js
divb
call
xchg
mov
mov
and
insb
in
sub
jb
push
mov
je
in
es
fcomp
ljmp
push
in
popa
cli
sub
cmp
add
loopne
int3
cltd
cmc
jae
es
in
add
jecxz
out
add
jnp
scas
xchg
loopne
jmp
stos
bound
stos
pop
repz
cmp
mov
inc
and
sar
in
insl
arpl
lock
cmp
adc
xchg
push
mov
sahf
and
sub
cmp
in
or
aad
cmp
out
dec
aam
mov
inc
xor
lea
pop
pop
hlt
cmpsb
mov
or
std
sahf
mov
das
and
in
lret
cmp
jge
fists
pop
mov
popf
xor
inc
xlat
clc
or
jmp
sbb
add
lret
adc
js
sbb
mov
inc
scas
mov
lds
sets
or
jl
popf
adc
mov
lcall
mov
mov
push
mov
push
xchg
lret
or
sub
orl
mov
pop
cmp
push
ret
jle
mov
sbb
pusha
lods
out
icebp
outsl
inc
jmp
nop
scas
imul
sbb
jno
fstl
cmp
pop
jge
xchg
pop
ja
mov
cmpsb
sub
fwait
addr16
mov
ret
and
or
scas
mov
cmp
mov
scas
outsl
repnz
push
std
pop
push
push
jmp
pop
dec
sbb
jmp
xchg
imul
sbbl
and
lret
ret
test
xor
mov
imul
js
mov
add
ret
loope
insb
mov
in
adc
add
leave
xlat
enter
inc
dec
sbb
push
pop
sbb
loope
inc
mov
orb
jl
rcrb
int3
nop
popf
mov
stos
icebp
dec
pop
mov
xchg
pop
sbbl
lcall
mov
mov
cltd
add
mov
xchg
xchg
shlb
js
stos
push
xchg
fs
arpl
xchg
cmpsl
int3
int
movsl
add
pushf
ret
mov
jecxz
data16
ljmp
cmc
cmc
mov
or
sub
cwtl
inc
into
add
jae
mov
mov
lret
mov
pop
rcrl
dec
in
jge
xor
cld
cmp
push
jb
popf
rolb
sbb
sbb
pushw
jbe
rclb
out
test
and
mov
insl
mov
sub
inc
add
push
into
test
jecxz
aam
in
xchg
cld
fst
mov
cmp
sahf
fdiv
inc
push
pop
push
repnz
pop
adc
nop
loopne
xchg
push
mov
daa
mov
outsl
adc
aaa
mov
pop
jg
pusha
lret
test
adc
jbe
sub
ljmp
out
push
sbb
addr16
xchg
sahf
jne
pop
fnstcw
sarb
lods
dec
fldl
enter
xor
mov
mov
addb
cmp
xchg
sbb
cs
popa
xchg
ds
jnp
imul
shll
rcl
sub
mov
bt
mov
adc
dec
push
xchg
repnz
inc
xchg
mov
xor
in
fdivs
xchg
pushf
cltd
int3
imull
adc
and
test
and
out
sbb
xchg
enter
and
mov
das
cmp
sub
bound
cs
or
xchg
pushl
les
sbb
jg
insb
imul
js
ss
bound
xchg
or
aam
insb
ja
leave
sbb
pop
shll
or
add
cli
add
rorl
jmp
daa
xor
dec
addr16
jns
sub
adcb
rclb
outsb
fimull
pop
icebp
jne
int
pop
push
cs
call
sbb
and
adc
xchg
aas
lds
vmwrite
aam
dec
and
add
lds
push
sti
lahf
mov
in
sbb
movsb
mov
roll
xor
pop
lds
sub
jle
pushf
mov
push
mov
lds
pop
ret
neg
leave
push
pop
lds
lcall
or
cwtl
fwait
sbb
sbb
mov
loop
mov
inc
test
and
adc
rcr
lcall
push
stos
mov
xor
pop
js
jno
scas
loopne
ds
cmp
cmpsb
fcoms
and
mov
fnstcw
pop
jbe
sti
adc
sti
push
enter
mov
mov
dec
fistl
sub
roll
je
or
and
adcb
and
fdivrl
mul
mov
lea
jmp
les
pop
xor
xor
jae
rcll
xchg
sbb
fdivs
inc
cmp
jne
xor
jecxz
adc
and
out
pop
sbb
rclb
push
inc
rcl
and
mov
push
inc
mov
xor
outsl
lcall
add
sbb
xor
es
nop
xchg
and
pop
out
xor
push
mov
mov
es
push
mov
jmp
arpl
xlat
dec
loope
cmp
scas
add
lock
fs
xchg
sar
fsubrl
out
aam
incb
mov
mov
xor
rclb
inc
push
and
inc
dec
aas
pusha
mov
or
sbb
adc
orl
jle
mov
movsb
shll
imul
and
add
hlt
outsl
inc
jnp
mov
sub
sbbb
and
pushf
inc
push
jge
les
dec
sub
lea
push
and
pop
js
xchg
scas
cmp
fsubrl
mov
xor
mov
sub
incl
in
int3
sbbl
jne
lds
inc
adc
out
jo
loope
sbb
sub
hlt
push
daa
out
mov
bswap
ficomps
lock
inc
pop
outsb
pop
dec
int
in
ja
mov
repz
rcrl
mov
cld
jg
sub
xor
jge
or
push
outsl
pop
ret
cmp
pop
inc
xchg
lret
stos
fisubl
push
punpckhdq
add
iret
rorb
jmp
lret
xor
xor
or
and
inc
setae
scas
mov
insb
mov
jbe
mov
adc
push
xchg
filds
lea
xchg
icebp
jle
call
inc
or
dec
mov
dec
xchg
dec
mov
cmp
dec
adc
mov
push
push
jne
xor
lods
inc
lock
pop
jle
test
inc
push
imul
addr16
mov
lahf
pop
push
mov
lahf
clc
mov
lahf
js
roll
push
je
xchg
mov
loope,pt
sbb
sbb
pop
push
or
cmpsl
cmp
and
xor
mov
cmp
and
cmp
pushf
inc
mov
sbb
push
adc
lods
cmpsl
inc
sbb
mov
daa
xchg
aaa
iret
cmp
out
inc
mov
jae
sahf
pop
shrl
lret
int3
adc
jns
sub
sub
dec
inc
lcall
or
rcrb
test
add
int3
mov
je
xchg
sbb
std
dec
xchg
daa
cli
or
das
bound
sbb
sbb
fmull
inc
loop
cmpsl
sub
ja
jbe
xchg
in
push
je
cmp
ficomps
inc
jl
pushl
int3
pop
das
sub
jge
repnz
test
ret
std
adc
call
jns
or
sahf
mov
arpl
scas
cld
popf
out
jno
lret
test
cmp
ret
idiv
mov
repz
adc
or
pop
int3
ficoml
xchg
je
mov
negl
repz
sbb
cmp
lock
aas
cmpl
add
cmp
pop
jle
popf
push
outsb
cmp
aad
lret
out
adc
sbb
ret
int
push
inc
ret
xor
jb
lds
call
pop
fucom
test
xchg
cmc
aam
jb
jb
mov
mov
cmp
push
stc
sbb
mov
adc
xchg
ret
cmpsb
mov
xor
roll
or
dec
mov
xor
std
in
mov
dec
lods
cltd
pop
int3
and
out
mov
cmc
fisubrl
or
pop
mov
jecxz
add
std
cmp
popf
cmp
dec
push
cmp
add
sbb
imul
pop
enter
jae
in
or
nop
pop
loop
mov
dec
lret
test
push
push
cmp
jo
xchg
dec
fistl
mov
jnp
dec
das
or
jno
out
push
sbb
push
cld
inc
push
add
stc
inc
mov
shlb
jecxz
aaa
mov
subb
pop
inc
push
mov
ret
cmpsb
aas
imul
rorl
jg
xor
lods
or
js
add
mov
into
repnz
mov
sub
ss
or
lcall
lahf
mov
jns
or
notl
outsl
std
dec
mov
outsb
push
pop
out
xlat
into
cmpsl
adc
lret
dec
cmovge
lcall
sub
and
jge
int
mov
jge
sbb
jl
test
lods
push
xchg
xor
and
xor
mov
shl
loop
pushf
insl
loop
fmull
inc
sbb
mov
outsl
test
xchg
inc
rorl
ret
lahf
shl
test
rcl
sub
mov
in
test
inc
sub
cld
pop
scas
add
xchg
and
dec
repz
lods
movsl
arpl
mov
iret
into
lahf
fisttpll
jp
imul
inc
mov
rol
dec
push
xchg
mov
xchg
clc
loop
or
mov
dec
push
add
xchg
stos
sbb
test
rcrl
add
mov
xchg
orb
jg
push
pushf
and
dec
jl
rorl
pop
enter
hlt
and
cmp
sub
sahf
xchg
pop
dec
xlat
std
lahf
insb
sbb
loope
xchg
pmaddwd
lds
sub
push
xor
mov
xchg
fisttpl
jmp
push
adc
and
fistpll
int3
scas
mov
popa
sub
lcall
arpl
mov
icebp
movsl
cld
xchg
iret
xchg
int3
xchg
mov
int3
notl
push
mov
mov
aaa
sbb
lahf
adc
cmp
je
mulb
inc
cwtl
jno
call
adc
aaa
cmp
into
out
shl
jb
data16
pop
repz
out
out
push
mov
lcall
insw
or
xchg
push
xor
cmp
setae
hlt
arpl
cwtl
xor
cld
adc
divb
push
xchg
sbb
jo
sub
jo
mov
hlt
xchg
cs
outsb
in
push
into
cmp
setl
mov
dec
mov
xchg
int
jp
lock
cmp
and
repz
repz
test
fstl
jno
mov
mov
add
add
cli
pop
push
and
add
adc
test
fsts
inc
and
stos
push
mov
mov
sub
jmp
and
adc
mov
inc
xchg
cltd
je
fisttpl
push
sbb
lcall
xor
add
xchg
mov
dec
adc
test
add
add
xchg
mov
push
arpl
les
sub
push
sub
shlb
mov
pop
mov
inc
push
fldenv
pop
ja
push
mov
cmp
jne
mov
mov
sti
jp
or
adc
and
inc
jecxz
mov
dec
rorl
stos
repnz
test
call
sbb
push
cwtl
sbb
scas
mov
xchg
das
or
mov
mov
scas
xor
xor
jns
out
pop
sahf
loop
out
pusha
insl
popa
jge
dec
pop
jbe
jmp
adc
in
and
pop
mov
add
fistpl
and
adc
sub
insb
push
out
loop
je
mov
xor
push
loope
adc
ret
push
pop
fiaddl
rclb
imul
pop
cmpsb
xchg
push
inc
cltd
push
loopne
fildl
fists
push
xor
inc
pop
fldt
outsl
fmulp
and
cmp
sub
sub
loop
add
jmp
int3
add
lea
in
jmp
aas
add
add
or
adcl
sbb
ds
adc
mov
sti
dec
pop
movl
fwait
inc
xchg
jnp
dec
fs
jmp
add
pop
les
sarl
push
push
das
xor
insb
mov
out
jecxz
push
sahf
add
rorb
pop
stc
mov
sub
dec
lahf
das
outsl
pop
mov
out
and
mov
stos
push
and
xchg
inc
dec
jecxz
xchg
into
jp
mov
bound
adc
data16
mov
push
clc
mov
fnstenv
add
pop
or
push
imul
pop
xor
push
addr16
ljmp
ss
jle
xlat
icebp
movsb
xchg
sbb
stos
icebp
jne
ret
xchg
test
popa
lahf
mov
dec
js
jno
push
and
mov
add
lahf
out
imul
rolb
enter
int3
aaa
cmpsl
or
popa
fnsave
scas
dec
adc
sarb
dec
add
je
and
mov
loope
test
mov
rclb
in
push
jecxz
mov
fnstenv
sub
test
test
scas
imul
out
cs
mov
jb
fmull
mov
push
mov
sbbb
mov
push
jecxz
pop
bound
int3
push
es
addr16
in
push
add
testl
xorb
es
test
cld
test
lret
sbb
mov
mov
pop
pop
aam
mov
fwait
ret
sbb
enter
push
lods
push
inc
push
int3
shlb
shlb
mov
cwtl
mov
sarb
xor
xchg
cmp
aaa
mov
aas
mov
mov
nop
das
and
sbb
mov
addr16
push
cli
fsubl
imul
mov
mov
cmp
mov
nop
jne
mov
lock
mov
push
icebp
or
mov
lock
aaa
outsb
push
mov
aad
fisubl
and
mov
xor
cwtl
mov
cld
push
cld
jmp
movsl
mov
adc
scas
shll
repz
sti
rcrb
push
loop
add
addl
lret
mov
inc
scas
mov
jl
les
pop
sub
jno,pn
jne
push
std
lret
test
gs
inc
cmp
push
pop
push
daa
cmc
sbb
cli
test
add
xor
mov
jno
pop
sbb
repnz
mov
jo
jb
lret
leave
and
pop
inc
stos
inc
mov
hlt
fsubrs
dec
loop
xchg
mov
mov
aas
push
sub
adc
push
sbb
sbb
mov
std
out
test
lock
pop
in
in
cmp
sub
mov
arpl
test
rclb
jne
sbb
scas
in
jo
mov
in
dec
mov
pop
xchg
mov
push
fcmovne
jns
mov
iret
call
sbb
cs
xchg
add
jno
test
inc
jl
mov
jp
int
in
sahf
es
xlat
xchg
mov
in
mov
push
push
pop
and
cmpsb
cli
xchg
cld
cmp
lea
insl
mov
data16
xor
fisttps
in
mov
sbb
sub
xchg
sahf
sub
stos
xchg
and
sbb
push
fcompl
jmp
xchg
jno
movsl
mov
negl
and
cli
movq
sub
xor
xchg
cli
testb
inc
and
xlat
test
fwait
dec
push
mov
subl
sbbb
mov
mov
xchg
out
in
outsb
mov
pop
sbb
jns
loop
cmp
cmp
adc
in
fmull
push
inc
xchg
sub
aaa
repnz
cmp
outsl
fstl
mov
stos
int3
and
cmp
dec
dec
adc
lret
and
and
clc
xor
xchg
pop
roll
enter
xchg
mov
shlb
jne
sbb
xchg
jno
pop
sub
shll
sub
mov
shlb
lea
xchg
xor
inc
pop
inc
stos
insl
es
movsl
in
dec
jl
push
rcll
lods
and
fildl
add
das
push
xchg
jmp
hlt
or
aaa
jne
jle
imul
pop
aaa
jo
aad
fnstenv
jb
inc
sub
jae
cmpsb
mov
shll
mov
imul
mov
popf
popa
xlat
flds
jb
sub
shlb
xchg
jl
rorb
adc
xchg
orl
repz
sbb
pop
jg
stos
add
xorb
mov
scas
fcomps
lods
data16
lea
lock
shll
xchg
je
add
loope
xchg
hlt
imul
push
clc
and
popl
sub
dec
lahf
insb
sbb
push
cltd
mov
xor
or
sbb
sbb
pop
sbb
push
or
cld
outsb
repz
lret
pop
adc
push
notb
sub
pop
lret
movsbl
aam
pop
pop
mov
test
pop
ss
jno
xor
pusha
sub
lret
mov
xchg
jnp
sbb
mov
mov
dec
inc
imul
jge
lret
imul
cmp
fcoml
icebp
adc
pop
cld
test
mov
sar
push
out
jle
cmp
mov
mov
mov
repnz
pop
insl
or
xor
jge
mov
loope
push
xor
sbb
lea
xor
add
dec
inc
negl
adc
rorl
pop
sub
insl
aaa
cwtl
aaa
xchg
jbe
ficoml
rorb
add
adcl
or
push
lret
mov
enter
jae
push
cmp
pop
mov
mov
lods
pop
cs
xchg
add
cmpsl
jne
gs
push
lea
jbe
cmp
cwtl
dec
leave
push
loope
cmpsb
xlat
lods
cmp
in
out
out
dec
in
adc
dec
pop
test
bts
ds
lods
xchg
dec
push
icebp
inc
lds
imul
jp
mov
push
cmc
shll
hlt
pop
ja
gs
sub
mov
sub
xchg
data16
icebp
flds
adc
test
mov
push
jg
lods
sahf
xchg
xchg
mov
adc
cmp
bound
loopne
or
int
xchg
sbb
pusha
adcb
cli
into
gs
aam
sub
xor
sbb
mov
lea
lods
lcall
pop
adc
xor
cmc
add
icebp
fisttpl
dec
xor
mov
push
lret
mov
inc
fdivp
movsl
mov
out
xlat
mov
xchg
add
cld
jmp
test
xor
bound
int3
nop
lds
lret
inc
dec
xor
movsb
sbb
popf
addb
pop
fwait
add
aas
into
mov
js
pop
imul
nop
jle
pop
jno
mov
add
pop
xchg
pop
mov
lea
fwait
out
ss
push
fimuls
jl
dec
inc
ss
and
daa
aam
les
lret
clc
xor
scas
sbbb
insl
movsb
stc
sub
cmp
shl
loope
jo
jl
push
push
shll
mov
inc
and
out
or
gs
and
add
cli
pop
inc
sti
jecxz
aad
cli
pop
jbe
or
jo,pn
push
mov
pop
mov
scas
xlat
mov
xlat
mov
mov
setl
mov
dec
and
inc
clc
mov
push
mov
data16
es
jl
test
fcmovu
xchg
popa
in
das
xchg
ja
push
or
inc
cwtl
les
adc
mov
xchg
movsl
cmp
shrb
mov
and
shl
sti
data16
rorl
and
gs
mov
hlt
lds
js
dec
push
rcll
arpl
pop
pop
mov
sbb
adc
inc
shl
test
pop
add
lds
xor
popf
and
mov
adc
cwtl
cmpsl
xchg
jne
cmp
add
push
adc
adc
inc
or
or
mov
pop
push
and
dec
lods
jb
and
mov
jmp
or
xchg
sbb
pop
scas
jle
push
xor
add
cltd
jns
lea
push
mov
repnz
cmp
pop
fwait
or
sbbb
pop
inc
mov
sbb
outsb
mov
push
test
pop
bound
xor
sub
sahf
das
xchg
mov
adc
sbb
xor
or
test
mov
cmp
rcll
push
mov
outsb
and
enter
lcall
fisttpl
mov
movsb
ret
pop
std
and
jmp
aaa
out
mov
aam
je
and
cmc
nop
jle
inc
adc
jle
mov
add
xor
sbb
xor
mov
adc
mov
mov
jmp
mov
pushf
lods
adc
cli
adc
xchg
loope
mov
mov
rorl
adc
lret
popf
cs
push
lods
fsts
es
jns
mov
xchg
stc
push
add
jp
inc
sbbb
imul
hlt
push
or
dec
rcll
flds
addr16
jno
cs
cmp
dec
xchg
mov
das
jl
call
adc
aam
sub
xor
das
and
dec
xchg
jbe
popf
imul
adc
inc
fcmovnbe
mov
cvtdq2ps
std
arpl
fidivl
jmp
gs
popl
scas
inc
push
aas
and
ja
add
movsl
jl
cmp
inc
xor
jb
jo
xor
lods
das
jecxz
mov
pop
seto
dec
lcall
xchg
push
pop
inc
xor
leave
jle
loopw
pop
jmp
cmp
movsb
push
sbbl
cmp
xchg
scas
wbinvd
mov
out
push
aaa
add
flds
fs
fsubrl
mov
pop
sti
daa
daa
imulb
sbb
xchg
inc
or
lcall
in
mov
dec
pop
mov
xchg
js
mov
xor
add
mov
fcoml
test
fidivrl
popl
add
lcall
xor
pop
mov
imul
das
gs
xchg
cmpsl
pop
negl
mov
jle
mov
sahf
sub
pop
cmc
mov
loope
dec
xor
or
mov
fwait
inc
shrb
add
out
aad
mov
or
mov
outsb
mov
pusha
clc
fiaddl
fimuls
pop
mov
sub
sarl
idivb
stos
popa
mov
popf
jns
inc
fistps
fldt
adc
jecxz
lds
lcall
mov
pop
dec
gs
sub
and
sub
rolb
inc
xor
or
sbb
into
notl
cld
pop
xchg
and
push
mov
scas
mov
mov
cmpsb
or
jg
xor
mov
insb
hlt
jmp
scas
out
call
dec
lock
mov
cmp
xchg
int3
inc
xchg
inc
pop
sub
popa
add
mov
pop
push
sbb
enter
fadds
out
in
out
js
and
dec
dec
stos
cmpl
adcl
imul
or
popf
mov
testl
inc
scas
pop
jle
fwait
jl
orl
gs
cmp
mov
mov
xchg
movsb
sbb
ret
push
fimuls
aam
lea
outsb
add
and
faddl
js
xchg
jecxz
pusha
insb
xchg
lret
dec
push
xor
mov
sub
out
mov
sub
stos
mov
sub
push
adc
dec
jo
jle
inc
or
in
and
push
mov
test
test
push
lods
addl
push
iret
push
loop
ret
lea
add
movsb
push
test
pop
in
not
incb
cmp
test
xlat
mov
fnstenv
sbb
pop
loop
lret
lea
pop
or
fisubrl
mov
mov
mov
repz
insl
sub
enter
cmpl
vpcmpeqd
lret
xchg
add
xorl
mov
push
sbb
clc
pop
push
mov
rorb
sbb
mov
mov
test
ds
pop
mov
and
dec
or
sub
sub
xor
inc
mov
inc
hlt
xor
pop
mov
sbb
fst
add
and
cmp
push
pop
push
pop
aam
push
addr16
unpckhps
xchg
sub
hlt
pushf
mov
inc
cwtl
negb
sbb
xchg
sub
xlat
mov
pusha
in
mov
push
subb
sub
jmp
inc
hlt
jb
gs
xor
mov
repnz
aam
add
sbbl
mov
dec
jb
movb
push
repz
mov
and
subl
lret
outsb
pushf
lahf
mov
in
test
jg
cmp
inc
loope
push
ds
mov
or
xchg
lcall
cld
dec
sbb
gs
je
and
cmpsb
add
mov
inc
adc
sbb
movsb
sbb
lock
pop
std
or
setnp
or
test
sarb
adc
inc
mov
add
cltd
jo
loopne
push
mov
or
sbb
in
jp
sbb
push
in
pop
adc
xchg
jb
jno
mov
lods
mov
jge
movsb
negl
cmp
push
inc
mov
xor
lahf
cmp
add
mov
cwtl
fsubs
daa
and
pop
dec
rcl
cmp
sub
mov
orb
insl
mov
jmp
jmp
sahf
jae
push
pop
dec
pop
sti
fs
inc
sbb
test
xchg
fiaddl
push
inc
fsubr
insl
sub
dec
add
out
sub
add
test
into
out
lods
sbb
pop
out
inc
loope
roll
mov
fadd
mov
cld
add
sti
in
lock
xchg
adc
loop
jbe
adc
sti
insb
and
xchg
arpl
dec
cmp
push
test
inc
push
adc
loop
sbb
add
fimuls
fdivl
xchg
mov
push
xor
fdivrs
shl
int3
xor
ljmp
out
insb
cwtl
push
std
xchg
xorl
and
jmp
mov
daa
mov
mov
scas
push
jno
adcl
repz
xor
pop
test
jnp
in
imulb
es
mov
cmp
xor
repz
jge
in
adc
gs
jg
or
mov
pop
inc
ss
sub
inc
push
and
rclb
fcoml
insl
negl
ss
and
adc
popf
or
loop
mov
xchg
mov
loop
dec
iret
ret
fstps
orb
mov
pop
popa
jecxz
xchg
lcall
frstor
imul
xchg
adc
sub
add
fwait
adc
add
gs
adc
cmp
mov
or
xor
mov
stos
mov
cmp
shrb
xor
gs
mov
mov
push
decl
mov
adc
movsl
insl
mov
insl
fsubr
xchg
mov
mov
inc
pop
popa
or
and
mov
outsl
inc
scas
loopne
sbb
pushf
aaa
xchg
jecxz
adc
push
stos
xchg
test
dec
aas
or
insb
sbb
outsb
push
mov
shlb
daa
mov
pop
push
fs
scas
jp
mul
fistpl
arpl
push
imulb
outsl
rcll
filds
lock
pop
popf
xor
xlat
mov
fistpll
test
inc
cmp
jle
fwait
add
mov
adc
mov
outsl
adc
pop
fwait
mov
jb
sbb
into
push
enter
jmp
clc
xchg
jp
add
add
mov
or
scas
and
cmp
jle
push
mov
push
pop
arpl
mov
cmp
cs
dec
in
jle
jns
jg
jbe
jmp
cmc
pushf
and
repz
incb
jb
xchg
nop
xchg
sub
aad
cmp
xchg
test
or
and
inc
pop
scas
xchg
mov
movsl
scas
lret
inc
insb
xlat
push
add
scas
movsb
aam
sbb
mov
lods
adc
jne
jb
add
fldenv
daa
xor
xchg
rorb
inc
shlb
add
mov
rorb
cmp
mov
bound
and
jnp
imul
jle
into
jecxz
and
mov
push
and
fcompl
fs
test
scas
test
ss
mov
test
mov
out
xchg
popa
aaa
xor
aas
push
jp
aaa
rorb
and
nop
push
jbe
and
aad
xchg
adc
push
mov
sbb
or
sbb
add
push
cmova
sahf
push
rclb
movsl
sbb
mov
lret
hlt
xor
insl
jne
dec
xor
jae
lea
xchg
add
pop
repnz
inc
mov
clc
test
sub
in
and
cmpsl
aaa
call
mov
xchg
mov
shrb
fcmove
ret
fmuls
jmp
mov
cwtl
imul
xchg
add
inc
sbb
mov
mov
jbe
jo
je
mov
notl
loop
inc
sti
scas
aad
call
mov
push
out
bnd
pop
mov
nop
jmp
adc
inc
idivl
sub
negl
pop
popf
dec
adcb
dec
sub
add
mov
mov
mov
arpl
mov
rorb
lahf
dec
repnz
out
or
or
jne
icebp
xchg
pop
enter
negb
and
rcr
enter
push
popf
fstpl
xchg
test
lds
aas
jge
insl
imul
out
xor
adc
test
xchg
or
fdivr
test
ficomps
dec
jns
ret
ja
cld
or
cmp
cmp
loop
pop
sub
and
outsl
or
fwait
jmp
in
pop
scas
jl
and
mov
jle
jnp
or
mov
call
xor
mov
rcrl
jp,pn
add
pop
sbbl
test
je
test
mov
and
lods
cmc
mov
push
or
inc
mov
clc
mov
jmp
adc
js
aas
pop
incb
or
mov
nop
movsl
data16
inc
test
scas
xor
loop
push
jo
jae
jb
jnp
push
cmpsb
push
or
rep
std
xor
pop
dec
ss
lods
jmp
and
push
adc
and
adc
ljmp
pop
mov
push
sti
sahf
test
inc
sub
cmpsb
jge
insb
pop
lods
idiv
or
pop
pop
sbb
test
fidivs
mov
nop
addr16
bound
dec
fnstsw
sbb
sbb
dec
and
mov
mov
jg
sub
cmp
nop
cmp
mov
sub
xor
xor
lcall
lds
imul
dec
flds
and
movsb
xchg
mov
mov
sahf
xchg
mov
cmp
mov
mov
in
insb
sbb
cmp
mov
jl
cmp
test
icebp
hlt
inc
mov
stos
fbld
pop
adc
pop
xchg
mov
lea
sti
cmpsl
sahf
or
cmp
dec
loope
or
cmpsl
dec
mov
mov
shll
mov
push
out
es
js
pop
test
mov
cmc
lcall
push
fistpll
mov
pop
cmp
and
stos
repz
pop
das
sti
push
loop
xlat
sub
fistpl
pop
push
xchg
les
jecxz
mov
and
push
popa
lea
stc
and
aas
rorb
or
iret
mov
add
loopne
xchg
mov
push
out
in
js
sbb
xchg
mov
jp
mov
dec
jge
mov
mov
jmp
cltd
mov
dec
or
mov
rcl
sub
aam
out
jae
rclb
mov
xchg
jmp
jge
in
hlt
adc
int
mov
or
mov
xchg
inc
xor
push
xchg
nop
xorl
aam
cld
fistpl
sbb
arpl
dec
fidivs
sarb
push
pop
movsb
push
inc
in
hlt
sub
test
andb
xchg
xchg
and
and
add
pop
pushf
pop
or
lcall
inc
fs
mov
test
mov
dec
mov
pop
dec
negb
fnstcw
icebp
sub
sbb
push
add
rcr
dec
mov
or
add
xchg
adc
push
loope
repnz
arpl
in
dec
push
pop
xchg
xchg
pop
inc
repz
lea
arpl
cmp
add
xor
jbe
push
pop
lcall
mov
mov
xchg
shl
jae
daa
aas
into
ret
push
outsb
push
jmp
xlat
add
clc
push
addr16
adc
loope
pop
imul
scas
and
mov
xor
inc
inc
pop
std
fwait
rcrl
mov
mov
dec
sbb
add
ror
enter
std
xlat
movsl
mov
or
pop
pop
outsb
pop
pavgb
jnp
sub
addr16
pop
cmp
or
inc
lcall
and
mov
dec
mov
inc
ljmp
cwtl
ret
jl
add
mov
dec
rcrb
sti
inc
aam
fs
cmc
pop
icebp
scas
jo
aas
subl
into
mov
mov
xor
pop
into
pop
inc
inc
pextrw
pop
ret
or
jle
mov
jecxz
jl
aaa
ret
xor
test
mov
xchg
or
test
in
lahf
sub
sbb
xlat
testl
cld
xor
push
addr16
daa
mov
push
jecxz
xor
xchg
xorb
jb
push
flds
aad
sub
daa
xchg
ficompl
fst
lahf
repnz
sub
ret
jnp
insb
or
pop
sub
or
sahf
enter
add
jg
je
in
pop
fildl
aad
pop
mov
jle
aad
sbb
jmp
test
and
mov
lahf
notl
fdivrl
mov
hlt
ja
xchg
mov
mov
inc
or
or
call
xor
into
push
cli
jp
push
cmp
add
pop
leave
adc
push
stos
jmp
int3
jae
xchg
jne
mov
inc
sub
aaa
icebp
pushf
dec
and
dec
jmp
mov
mov
sub
adc
add
jnp
test
xor
sub
or
idivb
or
nop
jne
jbe
mov
sbb
push
or
pop
add
dec
mov
insl
dec
push
push
sub
xchg
jno
push
jl
clc
imul
push
mov
dec
sub
rorl
lcall
xchg
or
sarl
int
stos
test
push
dec
mov
pop
xor
movsl
lods
dec
in
mov
cmpsl
pop
cwtl
cwtl
or
and
jg
shll
mov
iret
xchg
ss
loop
xchg
sti
jae
mov
cltd
push
xchg
or
jo
inc
stos
clc
imul
dec
repnz
lods
lds
mov
ret
sub
and
xchg
pushf
xchg
xchg
mov
pop
jmp
pop
mov
xchg
insl
mov
add
cmp
repz
mov
or
mov
sbb
mov
addl
fwait
das
mov
and
fdivs
popf
xchg
in
sbb
shll
add
adcl
ss
aaa
pop
in
or
aad
jle
fwait
xchg
aaa
lock
mov
aas
jl
cld
xor
or
negb
test
inc
and
nop
lock
mov
lret
pushaw
scas
pop
or
jecxz
into
jns
vmread
xchg
pushf
dec
out
cmp
lahf
push
subb
jne
insb
add
adc
movsl
test
push
or
pop
xchg
decl
out
inc
cmp
push
icebp
sarb
out
frstor
xlat
fdivrs
subl
push
rcl
xchg
mov
fucomip
dec
stos
mov
xchg
push
lods
mov
std
adc
shrl
sub
push
cmc
or
lock
sahf
cld
and
sti
push
lret
jns
aas
cltd
mov
xchg
xchg
mov
mov
mov
jecxz
mov
jb
clc
imul
sub
decl
cmp
test
movsb
dec
pop
add
dec
in
leave
sti
xchg
xchg
jnp
cmp
push
add
mov
jle
inc
jnp
mov
and
pop
push
testl
mov
lods
push
dec
das
into
and
lret
jne
popf
mov
dec
js
mov
test
loopne
mov
xchg
mov
mov
jne
lock
push
dec
dec
loope
mov
cmp
push
cs
popa
daa
fs
mov
sbb
stc
iret
mov
gs
sar
pop
dec
int
xchg
pop
test
xchg
cmpsb
xchg
es
cmpsl
outsl
jg
cld
push
xchg
enter
nop
jmp
xor
in
sub
das
ljmp
push
arpl
dec
xchg
out
dec
inc
pop
pop
clc
xor
mov
xchg
icebp
in
dec
push
xchg
out
sub
sarb
mov
test
ljmp
stos
mov
pop
in
stc
jmp
inc
mov
fimuls
ds
rcr
mov
xlat
out
jmp
addr16
test
mov
sahf
jmp
mov
pusha
lret
js
add
repnz
xchg
loopne
jne
push
shl
gs
xor
jecxz
or
inc
or
mov
imul
mov
mov
xor
jl
add
mov
sbb
sbb
sbb
imul
dec
fs
jo
lahf
jne
in
ljmp
mov
mov
in
cld
sbb
cli
sar
xchg
jmp
rcrb
mov
xchg
xor
test
mov
xor
mov
cmc
jno
add
inc
mov
inc
add
rcl
repz
cmp
out
pop
mov
repz
shl
inc
mov
adc
xchg
scas
and
movsl
jnp
lock
rorb
inc
cmp
push
cld
xor
cmp
ss
inc
scas
call
inc
xor
adc
aad
jp
imul
add
push
sub
xor
pop
hlt
lock
inc
dec
xorl
inc
inc
fstl
lds
scas
stc
mov
xchg
rcr
pop
js
jmp
adcb
lds
pop
popa
cmp
in
fs
and
rcrl
xchg
test
sbb
cmpsb
repz
out
push
pop
pop
mov
aam
insb
xchg
sbb
jecxz
mov
scas
int3
pop
or
sahf
sub
mov
xor
lahf
icebp
push
sbb
leave
cwtl
insb
js
lret
ret
scas
dec
in
and
das
inc
sbb
push
pop
xor
add
dec
xchg
push
cwtl
mov
cmp
aas
dec
cmpsl
jne
jbe
sub
in
int3
loop
fisubrs
repz
ja
lods
mov
mov
pcmpgtw
xor
jae
daa
pushf
lods
hlt
or
mov
cli
scas
lock
pop
cmp
shl
cmp
jle
int3
mov
sti
std
xor
sub
mov
pop
loop
xlat
mov
xchg
cmp
iret
aad
pop
sub
sbb
dec
cld
xor
xchg
dec
clc
mov
iret
fs
clc
dec
iret
dec
ret
push
mov
xor
xchg
mov
js
cmp
mov
sbb
jge
xlat
roll
pop
stos
xchg
int3
lods
rcrl
js
es
push
mov
push
lahf
mov
xlat
push
cltd
cld
sbb
subb
push
inc
jno
or
pop
push
and
pushl
in
push
out
cmpsl
jae
xor
iret
jp
jnp
inc
or
int
and
addr16
outsl
loope
dec
mov
jecxz
mov
dec
fcompl
cmpsl
mov
xchg
sub
loope
insl
aas
sahf
outsl
jmp
add
push
xchg
jo
shlb
jmp
or
cmp
mov
mov
test
adc
mov
and
push
loope
inc
repnz
insb
mov
aas
rclb
xor
adc
jl
xor
movsb
inc
and
adc
lahf
arpl
push
lods
call
outsl
add
and
xchg
roll
or
mov
hlt
sub
mov
mov
xchg
pop
popa
jae
nop
mov
xchg
mov
mov
pop
sbb
shl
dec
xorl
xchg
adc
icebp
cmpsb
or
cmp
xorb
jge
cmp
fs
subl
je
adc
ja
xor
push
repnz
and
mov
stos
in
push
out
xlat
lods
fsubs
pop
xor
xchg
in
add
mov
insl
inc
lods
into
adc
and
lods
lea
xor
mov
fdivl
jnp
loop
mov
out
popa
xor
jp
and
lahf
loope
stc
lock
pushf
lock
sub
xor
scas
nop
fcomp
xchg
std
pop
cmc
mull
fidivs
ret
pushf
jnp
sbbl
lds
cmpsb
sub
je
insb
adc
xor
jo
jno
clc
movsb
sbb
xchg
inc
fistl
xorb
adc
nop
stos
jae
lods
test
test
enter
adc
daa
xchg
out
andb
repz
and
xchg
mov
pop
inc
dec
sub
subl
fwait
imul
dec
test
popf
sarb
mov
lods
xchg
xor
in
sbb
lds
sub
into
in
jl
xchg
jno
cmpsb
push
xchg
cmp
mov
mov
push
mov
xchg
dec
into
mov
dec
scas
dec
push
jg
call
and
ret
pop
ret
push
mov
mov
jne
inc
mov
inc
lea
cmp
lods
dec
lret
add
jb
mov
gs
jnp
jmp
insl
bound
test
mov
push
in
pop
leave
xchg
jl
bound
add
inc
repz
movsb
push
movsl
rclb
lds
push
cmpb
or
jmp
mov
add
divl
mov
mov
jb
sti
jae
mov
xchg
jecxz
sub
mov
sbb
orb
and
cmpsb
gs
in
push
xchg
push
fcomps
sbb
sarb
push
dec
mov
outsl
push
pop
xor
xor
jle
js
add
call
and
out
pop
sub
imul
mov
fiaddl
sub
dec
xchg
or
jno
cld
mov
jne
jmp
fstpt
fs
xlat
xchg
cmp
test
pop
scas
add
pusha
sub
es
dec
pop
adc
aaa
daa
jl
inc
jl
lea
ficoms
xlat
inc
jl
sub
or
rolb
out
mov
rcrl
push
xchg
gs
sbb
je
into
js
insl
xor
rcll
push
aad
cs
subb
iret
shrb
jbe
lcall
aas
js
jb
rcrb
je
adc
rcll
ret
popf
loop
out
mov
aaa
loop
push
jb
xchg
test
push
pop
and
or
cmp
jecxz
sbb
sbb
js
enter
testl
pop
xor
or
mov
or
hlt
aaa
pop
pop
stc
shl
jb
cmp
adc
cwtl
popf
cmp
xor
inc
arpl
sub
nop
addr16
in
jecxz
xchg
mov
push
lret
push
mov
push
inc
push
jo
pop
scas
sbbb
scas
out
mov
xor
push
sbb
into
push
dec
loopne
or
cmp
jb
mov
jmp
xor
cmp
inc
jb
mov
cwtl
lcall
mov
cmpb
sbb
mov
xchg
loope
pop
es
xor
hlt
mov
stos
stc
mov
xor
pop
loop
ds
sti
lcall
fucomp
xor
jmp
add
mov
dec
push
xor
push
and
jns
int3
pop
in
loope
jg
jb
pop
sbb
pop
jae
and
rcrl
jg
push
fwait
push
mov
cmp
mov
test
xorb
and
add
push
aaa
mov
mov
test
sahf
repnz
jns
sub
stos
mov
daa
ret
push
sub
mov
dec
push
sbb
lcall
jecxz
lods
daa
xchg
mov
mov
imul
fldl
sub
inc
add
cltd
adc
mov
push
sub
insb
inc
fcom
push
loope
enter
jg
xor
daa
mov
in
nop
mov
xor
sbb
dec
lods
dec
dec
loopne
xor
test
adc
wbinvd
ret
in
mov
inc
and
aam
adc
scas
pop
pop
es
fsubs
adc
sbb
pop
inc
aas
push
xchg
stos
inc
andl
ja
js
lds
sbbl
outsb
test
dec
popa
or
mov
pop
add
int
adc
xlat
xor
adc
add
mov
fisttps
ja
pusha
lret
sbb
mov
mov
es
sbb
pop
loopne
push
jmp
adc
aaa
cmp
pop
jmp
pop
arpl
push
inc
push
adc
movsbl
jb
pop
cld
imul
mov
int
icebp
mov
push
xchg
lea
mov
mov
rorb
stc
leave
scas
in
mov
call
clc
sbb
inc
or
outsl
pop
cwtl
stc
dec
insb
in
lcall
out
pusha
sbb
adc
ljmp
dec
scas
adc
mov
pop
out
xchg
addr16
jbe
inc
test
iret
add
lock
test
sarl
sub
jmp
daa
xchg
cmc
adc
push
roll
popf
add
inc
out
push
cmp
mov
adc
push
ret
push
pop
jge
pop
push
sti
and
xchg
imul
out
sahf
daa
notl
imul
nop
jg
repnz
loop
gs
test
sbb
and
movsl
jae
out
mov
inc
fbstp
flds
imul
clc
xchg
aam
decl
push
es
mov
fidivl
jnp
shll
fs
pop
arpl
adc
jecxz
jae
pop
push
inc
icebp
iret
in
cmp
xor
test
cmpsb
mov
cmc
test
and
add
dec
sbb
addl
mov
iret
movsb
int
cmp
fdivs
mov
add
daa
mov
mov
sub
shlb
mov
adc
repnz
push
cmp
mov
dec
loop
xlat
int3
pop
mov
mov
jb
and
repnz
add
dec
pop
stc
lcall
imul
xor
out
mov
xor
pop
lret
fs
pop
fwait
leave
lret
cmpsl
lds
cmc
sahf
jns
push
scas
xor
movl
push
loope
inc
dec
xor
jmp
lret
loopne
dec
mov
dec
dec
paddd
cmp
lret
jns
mov
sub
cmp
cld
decb
in
add
jge
out
sub
cld
mov
xor
push
pop
inc
test
mov
aad
xchg
xorb
ja
or
cmp
xchg
in
lahf
bound
roll
scas
neg
roll
push
xchg
mov
xor
inc
xchg
mov
jbe
es
loop
mov
vcvtsd2si
outsl
mov
dec
call
mov
adc
lahf
xor
shrb
dec
mov
cmp
loop
ja
fcomps
push
cli
in
mov
stos
mov
push
loopne
in
mov
lret
sub
and
orb
sub
jns
stc
test
mov
add
mov
lea
andb
push
int
out
mov
lcall
jnp
mov
repz
test
mov
push
lods
out
jle
mulb
adc
ljmp
movsl
cmp
fwait
sbb
imul
lea
adc
jp
rorl
mov
enter
sub
mov
fsubrl
or
add
arpl
and
inc
cmp
sub
jp
pop
pop
dec
test
out
aad
xor
mov
shll
pop
sbb
add
jle
mov
xchg
fstpl
stc
lods
and
iret
pop
dec
mov
jno
adc
cld
and
add
repz
in
add
lods
int
call
fiadds
mov
mov
cmp
xchg
cmc
adc
std
jns
mov
or
pop
mov
xchg
mov
fiadds
cltd
cltd
std
adc
add
call
sbb
ja
out
or
push
xchg
leave
imul
out
mov
std
jmp
jne
sti
test
xchg
movsl
rorb
inc
fstpt
add
mov
scas
imul
adc
inc
adc
pop
add
iret
ret
pop
push
cmovae
daa
cmc
mov
push
dec
enter
sbb
xchg
push
hlt
loope
ret
mov
in
or
mov
mov
pop
pop
lret
mov
mov
adc
xlat
shrb
mov
icebp
pop
in
rcrl
jbe
sub
xor
jg
leave
je
mov
lock
or
out
lret
das
imul
jne
sub
mov
xchg
sub
into
test
add
aas
stos
fwait
sti
or
sbb
pop
push
adc
mov
fdivrp
sbb
or
out
cmp
mov
mov
inc
mov
jl
jl
out
leave
iret
fstpt
sbb
inc
pop
cmp
dec
push
rcrl
enter
inc
jmp
jecxz
sti
and
sub
xchg
leave
adc
dec
lahf
outsb
push
jp
call
push
cmp
enter
xor
cmpl
loop
push
push
fistpl
pop
push
inc
inc
push
cmp
cmp
xlat
push
cmp
xchg
jo
adc
fdivrl
sub
cmpsb
je
fs
sbb
testb
push
push
inc
rcrl
pushl
jmp
sub
fwait
xor
lods
les
adcl
ss
mov
sub
fistl
and
add
pop
stos
das
out
into
divl
sub
pop
mov
test
push
mov
insb
cmp
stc
inc
movsl
adc
pop
ret
sub
sahf
out
in
fs
adc
and
adc
sbbb
cwtl
pop
movb
mov
and
jp
mov
sbb
push
test
xchg
pop
jle
into
in
push
rorl
mov
ret
popf
mov
mov
dec
aad
inc
movl
lock
pop
xor
mov
psadbw
sti
lret
sar
sbb
fisttpll
add
fidivs
dec
mov
das
pop
add
mov
pushl
punpckhbw
loopne
mov
push
add
inc
pop
push
scas
mov
test
jo
and
jmp
aad
inc
inc
dec
cs
mov
adc
add
nop
push
pop
mov
movsb
cmc
xor
sub
popa
jge
sbb
fcoml
jno
pop
sbb
shlb
xchg
mov
cmp
cli
adc
mull
mov
mov
jb
mov
lock
cmc
pushf
fadds
and
rcr
push
rorb
int
jae
repz
std
lods
pop
nop
dec
test
test
sbb
aas
fisubl
loope
adc
test
mov
lods
xchg
scas
jnp
mov
loop
xchg
cwtl
testb
fmull
lret
repnz
dec
xchg
fistl
xchg
mov
iret
inc
xlat
cmp
mov
jbe
lcall
mov
cld
aas
xchg
div
movb
adc
mov
and
aas
sub
clc
arpl
lahf
push
jmp
and
rolb
sbb
in
loopne
adc
add
cmc
mov
mov
das
adc
ljmp
and
fwait
hlt
repz
or
sti
inc
imul
decb
inc
xchg
pop
decl
cwtl
push
imul
idivb
inc
loopne
sub
cltd
loope
mov
std
jae
test
mov
cmp
or
pop
popf
mov
int
pop
mov
mov
add
and
mov
stc
push
cmp
testb
jne
jmp
stos
inc
scas
dec
mov
jmp
xor
mov
stos
out
xor
pop
in
loop
mov
adc
mov
stc
cmp
mov
scas
mov
cmc
and
xchg
add
fs
push
pop
lock
cltd
mov
movsl
dec
cmc
xor
fsubrl
imul
cmp
lret
push
xor
sub
cmp
add
pop
cmp
sahf
push
lahf
scas
xchg
pusha
stc
mov
xor
in
inc
mov
leave
dec
pop
cmp
out
in
lcall
insb
fimull
push
andl
mov
sub
shrl
mov
stos
jge
leave
cwtl
dec
testl
ja
jmp
mov
jecxz
dec
mov
adc
or
popf
or
out
dec
mov
dec
dec
lcall
bound
adc
or
lret
sahf
insl
loope
xorl
movsb
cmpsl
pop
pop
adc
sbb
mov
add
das
adc
or
loope
jae
jle
dec
cmc
out
inc
aaa
jae
jb
fmull
orb
cmp
fsubr
sub
imulb
inc
pop
testl
jnp
test
lahf
pop
jae
dec
dec
cmp
in
xlat
aas
mov
xchg
in
mov
cmp
dec
leave
lods
ficoms
bound
xlat
jecxz
jns
xchg
push
sub
inc
push
imul
or
fisttps
add
popa
add
in
sbb
arpl
jne
adc
xor
lret
jge
cmp
sub
dec
inc
cwtl
loop
shlb
addr16
out
icebp
push
dec
orb
jmp
lcall
push
scas
add
data16
pushf
mov
xor
pop
mov
test
and
mov
dec
push
imul
jl
mov
adc
and
fidivrs
lret
sbbl
xor
loope
push
xchg
fimuls
movsl
or
or
icebp
sbb
jb
dec
add
mov
js
add
jge
dec
stos
loop
mov
sub
dec
xor
mov
jmp
ret
jbe
jnp
outsl
inc
add
xchg
les
push
fnsave
call
loopne
subl
push
stos
inc
das
xchg
mov
stc
push
add
and
add
mov
push
adcb
pop
outsb
mov
icebp
push
mov
jecxz
mov
nop
pop
sbb
pop
pop
mov
cmpsb
mov
sbb
cmpb
xorl
cmc
sbb
sti
jp
es
cmp
jg
addr16
ss
sbb
dec
mov
int
iret
mov
xlat
mov
fidivrl
xor
stc
out
add
pop
lahf
or
in
enter
xchg
push
out
push
jmp
leave
push
repnz
xchg
xchg
push
xor
icebp
push
sbb
loopne
fwait
cmp
sub
xor
pop
jb
div
daa
add
test
sbb
fs
out
fsubs
xchg
dec
inc
sub
sub
cmpsb
push
fisttps
mov
mov
push
mov
test
push
xor
daa
das
inc
adc
into
scas
fisubl
push
fisubrl
pop
mov
add
imul
or
stos
shl
jmp
mov
and
jne
and
pop
adc
outsb
fistpl
pusha
jns
stos
xor
aad
and
mov
or
dec
jl
xchg
xchg
cs
add
fcmove
xchg
push
inc
xchg
push
inc
and
inc
pushf
faddl
decb
int
jne
adc
ret
fst
mov
lods
stos
scas
mov
sarl
mov
es
jp
mov
xchg
xchg
pushf
mov
mov
pushl
push
popa
loopne
outsb
popa
fwait
es
sbb
mov
jo
sub
xchg
lcall
inc
or
or
popf
popa
je
out
cmp
lock
fidivrl
clc
stc
cltd
rcl
jmp
lcall
das
xchg
cmp
push
iret
pop
and
push
out
dec
ret
mov
jno
in
cmp
xor
js
leave
jns
stos
call
bound
imul
push
xchg
push
push
icebp
jge
push
outsb
or
adc
jmp
sbb
subl
out
add
xor
jb
sbb
cmpsb
inc
imul
push
xchg
repnz
jg
icebp
dec
loope
ss
stos
push
mov
cmp
jl
xchg
jmp
add
cmpsb
out
push
jnp
push
pop
adc
ja
popa
mov
cmp
test
add
cmp
and
jnp
popf
popf
push
jne
filds
out
adc
xor
int3
icebp
mov
lds
sub
inc
enter
or
aaa
xor
stos
and
cmp
arpl
push
int
outsl
dec
cmp
jns
imull
xor
arpl
fs
jmp
xchg
stos
insl
imul
dec
xlat
pop
sti
shl
dec
mov
and
sti
push
xor
nopl
cltd
call
mov
xor
dec
xchg
dec
sub
dec
divl
sbb
fwait
cltd
arpl
dec
sub
xchg
cli
sbb
mov
aam
sbb
mov
inc
xchg
add
nop
je
cmpsb
sbb
mov
test
bound
mov
cld
cmp
ror
imul
out
xor
shll
jne
pop
add
movsl
imul
xor
clc
push
inc
push
in
loop
push
loope
pop
pop
lcall
and
cmp
fstl
sub
mov
mov
in
or
imul
dec
inc
mov
arpl
add
iret
sbb
sbb
ret
and
sbb
into
sub
jae
fidivl
popf
cmc
fisubrs
push
and
pop
shll
fisubrl
repz
repnz
xchg
mov
ds
xlat
pop
cld
fimuls
sbb
jne
pop
pop
add
lods
xchg
xor
jl
test
int3
add
faddl
mov
inc
xchg
mull
mov
or
fxch
mov
cmpsb
jle
jg
push
out
add
loop
pop
popa
mov
int
jmp
js
mov
jno
rcl
cmc
jno
call
add
inc
sub
ret
test
sbb
xchg
jnp
mov
lds
dec
inc
sub
sub
dec
addr16
jb
inc
xor
repnz
scas
testb
and
mov
cmpsl
xchg
lock
sub
pusha
inc
adc
es
push
push
push
jnp
notl
mov
insb
cmp
lret
mov
int3
shrb
sbb
xor
test
push
jo
mov
lahf
cmpsb
in
out
test
sti
jp
xchg
mov
cltd
test
mov
xor
lds
xor
inc
dec
mov
inc
sub
adc
mov
lock
ss
in
adc
mov
push
sub
sahf
and
lock
cmp
cmp
jg
dec
add
mov
fists
int3
inc
jecxz
pop
lret
jno
lcall
pop
and
pop
inc
or
std
ljmp
ret
xor
pop
mov
bound
hlt
lcall
call
aas
loop
mov
push
mov
aas
ljmp
mov
jmp
imul
sbb
xlat
sub
mov
jecxz
lods
ljmp
testb
push
push
fisttpll
int
addb
sub
sbb
addr16
jnp
fwait
and
sub
xor
push
popf
cmp
mov
jecxz
sub
call
pop
ljmp
mull
jecxz
dec
cld
out
sbb
loope
in
and
mov
dec
inc
sub
pop
and
cmp
popa
je
into
daa
sbb
js
cmpsl
dec
mov
push
cmp
jns
jmp
inc
lods
sbb
xor
sbb
cmp
lcallw
xchg
pop
arpl
jb
push
outsl
and
mov
mov
cwtl
or
add
stos
movsb
test
sar
push
mov
mov
adc
call
cltd
add
xchg
or
dec
std
insb
add
addb
addr16
cmpsl
stos
in
int3
jmp
mov
hlt
aam
mov
add
push
inc
and
enter
insb
lret
inc
sbb
xchg
rolb
xchg
shll
and
mov
jecxz
jns
sti
orb
mov
ret
bound
nop
andb
pop
mov
pop
out
sarb
arpl
lcall
mov
fucomp
sbb
mov
mov
xchg
rolb
adc
dec
js
fld
inc
lods
xor
ret
test
dec
pusha
negb
pop
in
mov
mov
push
jmp
outsl
int3
pop
or
das
fists
roll
pop
mov
shl
stc
add
and
lds
mov
adc
call
addr16
popl
aas
scas
hlt
andl
jmp
mov
add
push
test
add
sub
push
icebp
sub
add
add
mov
int
xor
pop
pusha
mov
ficompl
fmull
int
pop
outsl
insb
stos
xor
imul
inc
shlb
add
jns
jns
inc
and
scas
mov
bnd
out
or
dec
test
das
xchg
adc
fistpll
test
das
out
addl
notb
add
push
jecxz
jnp
push
or
push
jp
and
inc
popf
out
and
decb
int3
in
sbb
mov
jno
ret
push
xchg
loope
jns
sbb
sub
pushf
pushf
leave
pop
xchg
jae
in
je
sub
push
into
xor
cmpsl
ret
pop
add
or
movsb
jb
adc
leave
insl
adc
or
rclb
mov
xor
jge
cs
or
les
rorb
mov
cwtl
in
cmc
insl
imul
adc
es
in
les
mulb
incl
mov
mov
shr
mov
sbb
test
into
pop
xchg
or
dec
pop
shlb
cs
test
mov
repnz
dec
jmp
xchg
cmpsl
pop
or
push
mov
mov
mov
jno
pushf
ja
jge
jae
dec
jmp
test
or
pop
sub
xor
in
mov
jae
idiv
leave
sbb
shrb
imul
push
pop
sub
pop
adcl
insb
in
scas
xor
mov
push
mov
les
scas
dec
lods
push
pop
inc
insl
or
push
ds
xor
or
outsl
push
jnp
mov
cld
mov
xor
sub
ret
ja
jp
mov
cwtl
ficompl
cwtl
popf
aad
adc
push
and
ds
push
inc
je
mov
jo
and
xchg
push
lods
pop
sahf
movsb
inc
call
call
fists
push
push
fmull
or
ss
push
jbe
xchg
orb
sub
sub
in
xchg
sbb
insl
push
lahf
mov
pop
add
scas
xchg
fs
mov
fdivl
jno
adc
loop
ret
ficomps
clc
and
in
dec
ja
test
xchg
sbb
jmp
ja
mov
jbe
enter
sub
adc
cld
test
add
xor
orb
fdivs
push
jle
push
dec
outsb
pop
test
es
sbb
lret
mov
push
call
pop
insb
das
xor
dec
or
and
enter
repnz
fnstenv
repz
ret
or
stc
jecxz
insb
js
sar
xchg
leave
or
insb
bound
xlat
mov
cmp
insb
jb
add
fidivrl
sbb
mov
cmp
test
xor
dec
ds
or
adc
loop
call
test
and
mov
jo
xchg
testb
push
stos
and
or
dec
imul
adc
cli
sbb
jmp
mov
jne
repz
add
punpckhdq
scas
pop
lcall
rol
mov
rcl
mov
or
inc
xor
mov
mov
imul
xchg
sub
idivl
jp
or
imul
cmp
test
adc
rorl
movsl
arpl
xor
and
pop
jbe
pop
mov
je
pop
lret
icebp
popf
inc
pusha
pop
add
jmp
nop
sbb
xchg
inc
jns
sti
addl
cltd
sbb
cmpsb
popa
dec
sbb
loopne
dec
dec
pop
cmp
push
ja
pop
and
adc
repnz
ret
test
arpl
shrb
add
mov
arpl
clc
lods
hlt
out
mov
push
pop
xchg
mov
cmp
jge
clc
in
mov
mov
xlat
das
xorl
push
inc
cmp
mov
addr16
push
das
leave
les
sbb
xchg
pusha
mov
cltd
leave
push
arpl
test
inc
push
jns
out
inc
push
aad
in
mov
xchg
or
pop
scas
sbb
pop
or
push
lea
jnp
xor
xor
or
outsl
mov
imul
push
push
or
fmuls
jns
inc
fistps
inc
adc
inc
xchg
shll
adc
hlt
adc
push
nop
aam
movb
dec
cmpsl
incl
and
add
add
lods
sbb
or
cmp
insl
les
or
push
popf
jnp
lret
mov
decb
iret
push
xchg
push
mov
jae
pop
stos
in
mov
sub
icebp
mov
hlt
aam
adc
xor
sub
xor
imul
std
loope
add
loope
cmp
stos
dec
sbb
inc
imul
xor
xor
mov
lret
mov
pop
mov
mov
mov
andb
popa
rorb
les
jecxz
sub
popa
sub
sbb
insb
and
or
loopne
stos
addr16
fstps
push
push
lahf
insl
jl
xchg
jmp
jno
out
sub
aad
gs
and
mov
cltd
sbb
jmp
leave
gs
shll
insl
push
lret
ret
dec
popa
pop
js
js
xor
andl
pcmpgtb
gs
inc
fdivrl
std
loope
and
call
lds
inc
xchg
or
lret
ljmp
and
xchg
aaa
fsubs
add
xchg
scas
das
out
xchg
mov
jge
adc
xor
sbb
lock
in
mov
adc
xchg
les
test
mov
fistpll
out
test
lret
outsl
sbb
int
inc
icebp
lahf
in
jns
das
or
add
xchg
cmp
xor
or
dec
cs
adc
sub
ljmp
jg
lcall
out
sbb
iret
push
mov
add
pushf
shrb
shrl
icebp
and
mov
add
decb
and
xor
xor
and
push
rcll
jo
ret
and
dec
adc
jle
mov
mov
mov
add
adc
pushl
dec
ret
fsubs
sbb
pop
xor
xor
mov
mov
sub
fnsave
scas
push
dec
inc
clc
sti
sbb
mov
pop
enter
adc
xor
lahf
push
sub
pop
or
ret
dec
pop
lods
ljmp
sub
pusha
sub
fimuls
jmp
lret
rcr
movl
iret
mov
jns
add
fwait
mov
das
jp
cmp
cmp
mov
mov
add
das
sub
lahf
jg
outsb
into
cmpsb
test
push
aad
and
dec
repz
pop
stc
dec
aas
mov
inc
loopne
out
insl
inc
mov
cmp
sbb
mov
das
adc
mov
xor
fcomip
mov
fsubrl
inc
push
les
aaa
cmpsl
lret
test
mov
addr16
bound
mov
loopne
dec
pop
xchg
jmp
js
subl
pushf
imul
sbbl
adc
xchg
lock
pop
sbb
in
subl
popa
pop
adc
outsb
rcl
lods
dec
or
lods
push
mov
aad
lret
arpl
pop
sub
xchg
cmpsb
push
jmp
aam
add
mov
test
dec
ss
xchg
sti
or
sarl
into
jb
arpl
adc
insb
ds
xchg
push
cli
gs
int3
jmp
mov
pop
cmp
icebp
inc
mov
fists
adcl
es
sub
sub
adc
incb
xor
out
testl
push
das
inc
push
inc
jae
and
lock
xor
mov
ja
roll
imul
inc
das
and
adc
ljmp
xor
test
stos
pushf
and
mov
mov
mov
inc
mov
fcom
jecxz
jg
pushf
push
inc
xchg
fistl
ror
fidivl
aad
fwait
and
test
cwtl
int
ds
push
jp
lock
pop
sbb
jg
ja
adc
idivl
sbb
stos
pop
mov
dec
jae
mov
dec
xchg
mov
or
pop
aaa
mov
mov
jo
jbe
lret
mov
fstpl
mov
movsb
ljmp
in
mov
mov
ret
add
xlat
add
icebp
mov
pop
and
shr
jmp
loope
jo
in
hlt
outsl
out
das
sub
in
lret
push
sti
ja
dec
or
fsubs
mov
lret
lea
mov
xchg
ljmp
int
das
movsl
lods
xchg
notl
lcall
rcr
test
jle
cmp
jmp
pusha
ret
xchg
pop
ret
sub
shl
push
mov
xlat
dec
pop
sub
dec
popl
jecxz
pop
test
fistpl
sub
pop
push
mov
out
lahf
push
stos
test
add
xchg
into
ljmp
cmp
pop
sbb
fs
rcrb
shr
add
add
lahf
mov
add
adc
call
repz
adc
xor
hlt
subb
imul
call
pop
mov
sub
mov
sub
bnd
mov
xor
cmp
sub
push
push
bound
xor
neg
lret
xchg
insl
mov
bound
lods
mov
pop
and
nop
divb
push
roll
fstps
dec
dec
jg
mov
and
cmp
xchg
push
adcl
push
nop
scas
jnp
lods
aam
ret
nop
add
lret
mov
adc
in
popa
and
nop
roll
cmp
xchg
std
jge
daa
dec
lret
inc
rorb
out
lea
sti
mov
jnp
or
add
test
clc
int3
fnstcw
mov
mov
cs
and
mov
add
cwtl
or
mov
iret
scas
mov
outsb
mov
in
stos
into
adc
stos
arpl
leave
sbb
daa
test
rolb
inc
loope
cld
sbb
jmp
pop
rcrl
cmp
icebp
sbbl
fstps
xchg
dec
mov
adc
repnz
xchg
rcrb
aas
xchg
jno
and
popa
mov
dec
ljmp
mov
mov
imul
xor
imul
or
xor
les
dec
xchg
xchg
push
mov
cld
add
or
mov
int3
test
pop
stos
clc
aas
dec
inc
xor
out
mov
je
inc
addr16
adc
mov
out
inc
inc
lods
cmc
and
dec
rol
push
fwait
iret
and
loop
shll
push
mov
mov
mov
jl
fistl
gs
rorl
xchg
ret
lods
fidivs
dec
lock
dec
ss
xchg
int3
cli
inc
bound
jns
dec
lods
sub
test
lods
lcall
divl
push
aaa
scas
push
iret
cltd
cltd
fsubs
push
aad
fwait
sub
in
call
jnp
test
mov
clts
shll
arpl
popf
imulb
mov
lret
xor
ss
pusha
movsl
js
xchg
fpatan
push
cwtl
cwtl
pop
mov
mov
dec
lret
dec
jmp
xchg
xor
inc
jecxz
push
daa
iret
dec
push
mov
iret
sub
or
or
dec
cltd
and
cld
pop
dec
loope
inc
pop
jae
scas
nop
loop
cld
or
xor
mov
out
jmp
sub
adc
inc
cltd
add
or
fwait
add
jmp
pop
mov
repz
xchg
stos
add
lods
fdivrl
es
and
jmp
pop
shrb
xor
nop
stos
push
nop
test
xchg
add
sbb
ljmp
sbb
rorl
add
push
jno
rcl
loopne
jbe
fdiv
add
daa
xchg
pop
jge
lods
mov
dec
test
jge
push
outsb
cmp
fiaddl
dec
mov
pop
jmp
pushf
push
fldl
int3
jp
push
push
enter
pop
pop
idivb
shrb
hlt
fisubrl
push
cmpsb
popa
testl
add
add
or
dec
adc
arpl
inc
cmpsb
mov
fwait
jae
xchg
insl
dec
sub
aas
mov
gs
adc
mov
add
pop
jae
inc
push
cmc
pop
inc
cmp
add
pop
fistpl
and
fisttpl
divb
repz
mov
push
sub
push
out
xor
jmp
iret
or
jmp
scas
fcomps
cltd
in
add
or
or
xchg
pushf
inc
push
repnz
pop
xchg
pop
dec
divb
repz
iret
pop
jnp,pt
push
les
scas
divb
push
sub
test
mov
lock
xor
add
mov
scas
pop
cmpsb
test
out
iret
mov
mov
and
or
mov
ja
enter
scas
fildl
and
fcompl
mov
ds
xor
and
aad
mov
int3
inc
stos
stc
push
addr16
inc
pop
mov
push
jns
push
push
xchg
or
mov
adc
in
xor
xor
ficoms
fadds
in
xchg
pop
cmpsb
mov
xlat
cmp
and
push
lds
add
repnz
jge
sahf
dec
and
incl
mov
ds
xchg
push
leave
cmc
jne
jle
add
daa
insl
sbb
or
xor
jg
mov
outsb
in
cs
out
mov
stc
movsb
mov
xchg
movl
fisubs
fwait
sti
ljmp
imul
adc
add
mov
in
pop
mov
cmc
shrb
or
adc
sub
mov
out
jno
jg
push
decl
nop
dec
into
inc
shrb
mov
and
dec
mov
mov
sub
outsl
repnz
sub
test
out
rclb
dec
xchg
lock
sbb
push
push
sbb
adc
call
cmp
jmp
sbb
and
dec
mov
or
xchg
dec
or
repnz
pop
lods
sbb
fdivs
int
imul
sti
xor
mov
and
adc
test
mov
jp
movsl
rcrl
mov
lahf
and
call
cmpsb
enter
hlt
std
xchg
sbb
daa
dec
shl
stc
fsubrl
out
mov
fstpl
mov
mov
sub
xlat
pop
icebp
fildll
test
xor
test
xchg
xchg
add
mov
push
sbb
rcrb
lret
pop
ss
dec
jns
push
dec
repnz
lock
fsts
pushf
cmp
gs
jmp
clc
cld
out
cs
test
repnz
jno
repnz
ja
inc
enter
sub
loop
sbb
cli
add
jmp
jecxz
mov
icebp
pushf
jle
adc
jmp
leave
rorl
sbb
orl
sub
xchg
pop
adc
push
bound
out
sti
addr16
mov
jl
out
lods
adc
sbb
scas
fidivrl
rclb
mov
cmp
sbb
repnz
xor
push
fcoms
sub
icebp
aas
call
mov
pop
fcmovbe
addb
test
stos
pop
int
add
bound
pop
test
out
in
cmp
mov
add
call
or
cmpsl
inc
movl
sub
push
incl
xor
add
dec
in
hlt
push
in
sub
dec
ficoml
inc
dec
test
or
jmp
test
push
cmp
or
and
not
pop
cmp
cld
ds
cli
push
insl
xchg
push
dec
pop
lea
inc
neg
jns
inc
int3
arpl
xchg
jb
ds
fmull
scas
mov
mov
mov
mulps
sarl
mov
sub
xchg
jns
int
ds
xchg
mov
rol
push
bound
xlat
mov
mov
pop
int
mov
jbe
bound
cmpb
dec
sub
adc
divl
and
mov
int3
leave
out
ret
ret
fldcw
mov
add
xchg
in
inc
movsl
xor
sub
jae
fwait
cmp
mov
and
repnz
sti
popf
mov
jno
dec
xchg
xchg
xchg
inc
cmp
les
pop
daa
outsb
cs
aam
xchg
outsl
test
jmp
rolb
cld
scas
cld
stos
in
pop
pop
or
mov
dec
in
push
cld
lods
test
mov
or
lret
push
loopne
mov
leave
rcrb
ja
cmp
cmp
sub
pop
jns
jns
mov
sbb
sub
rorb
stc
adc
data16
loope
jp
sahf
cmp
rcr
lds
popa
cmpsl
loope
lret
scas
ss
add
xchg
out
or
inc
push
cmc
xchg
mov
pop
pushf
mov
loop
xchg
mov
loopne
jbe
pop
cmp
dec
repz
out
enter
out
out
pop
scas
adc
cmp
adc
and
loope
sbb
jo
xchg
clc
imul
xor
xor
es
cmpsb
jnp
push
xor
xchg
mov
fistps
fadds
fldcw
pop
nop
stos
push
pop
aaa
and
fdivl
add
sbb
xor
jae
test
mov
xchg
stc
add
in
push
ja
xchg
jb
add
sub
insb
inc
jbe
imul
push
popa
pmulhuw
mov
sub
push
xchg
dec
addr16
cs
jp
in
in
and
movsl
jle
mov
pusha
push
lahf
aas
sbb
popf
mov
mov
outsl
mov
jno
mov
dec
mov
jae
push
in
mov
sbb
mov
sahf
pop
push
leave
pusha
js
ret
das
je
dec
lret
xchg
xchg
mov
daa
inc
mov
pop
enter
aam
xchg
mov
dec
xlat
loopne
sbb
ds
cmp
arpl
icebp
mov
sahf
ss
pop
movsl
aad
mov
xor
cmp
icebp
sub
cmp
mov
lea
movl
nop
in
int
xchg
xor
push
sbb
rorb
xchg
inc
xlat
lahf
ret
test
call
adc
jns
das
loopne
insb
xor
push
dec
mov
cwtl
push
mov
push
sti
xchg
lea
fwait
scas
mov
call
mov
idivb
push
js
test
add
mov
cmpl
push
inc
mov
push
pop
jns
outsl
mov
dec
iret
aad
cmc
mov
ss
sub
add
xchg
push
and
push
dec
mov
pop
dec
jmp
cmp
cmp
and
int
lret
and
data16
xchg
ljmp
mov
sub
cmpsl
inc
movsl
cmp
push
sbb
push
mov
jecxz
sbb
or
sbb
bt
sbb
pop
insb
xchg
cmpl
push
popf
and
jno
out
cmp
les
outsb
ror
jmp
push
sbb
add
pusha
cld
pop
mov
lods
pop
je
sar
fildl
shlb
ja
push
int3
fiaddl
lret
cmpb
push
jbe
pusha
imul
daa
xchg
and
aad
push
pop
sbb
push
stos
and
mov
movsl
dec
pop
lea
sub
dec
dec
icebp
addb
jae
mov
or
push
cmp
jmp
leave
pop
lods
xor
pushf
xchg
pop
clc
das
iret
mul
arpl
movsb
mov
mov
sbb
inc
test
aad
and
cwtl
and
jecxz
vphaddbq
mov
pusha
rolb
mov
jl
add
push
test
fidivrs
aaa
fnstcw
push
in
ja
notl
iret
lds
stos
call
or
je
inc
push
outsl
or
in
xchg
popf
popa
sti
daa
aas
data16
loope
pop
add
pop
hlt
mov
scas
icebp
call
decb
cmp
pusha
ret
pop
je
inc
dec
mov
fsub
fs
xchg
pop
idiv
incb
fidivl
jbe
push
xchg
clc
xrelease
xchg
jp
push
pop
pop
pop
pop
jg
fsub
clc
sbb
jbe
mov
add
xchg
xchg
sbb
push
lahf
lds
fistpl
pop
sarl
divl
add
xchg
mov
jae
or
pushl
ret
mov
xor
add
sbb
pop
xchg
out
rcl
dec
ss
lret
or
inc
lods
fld1
push
nop
jmp
lods
xor
icebp
dec
insl
cltd
fsubl
dec
push
push
adc
mov
push
mov
inc
or
js
shrl
xor
cmpsl
repnz
jmp
popf
stc
mov
divb
icebp
inc
dec
adcb
pop
std
stos
add
aam
cwtl
repnz
pop
bound
outsb
pop
dec
rcrb
ljmp
dec
and
es
imul
add
mov
sbb
hlt
and
mov
add
sbb
adc
or
dec
pop
cli
iret
add
stos
faddl
cmp
or
mov
loope
xchg
pop
ss
insl
push
dec
idivl
andl
mov
mov
enter
and
stc
push
lea
inc
cltd
stos
mov
sbb
pop
adc
or
in
push
lock
push
rcr
mov
sbb
dec
das
mov
clc
xor
jmp
xchg
jge
or
xchg
stos
jb
fimuls
jbe
cmp
decl
repz
jmp
inc
jg,pn
out
sbb
je
lcall
dec
cwtl
and
mov
insl
repz
int
outsb
call
xchg
lcall
sar
pop
fldenv
mov
xchg
scas
test
mov
cmp
push
cmc
dec
sbbl
imul
rcr
and
stos
ret
fsubrl
push
xchg
outsb
adc
inc
dec
jle
ret
add
jmp
nop
shll
pop
and
lahf
xor
mov
aam
xor
cld
data16
sbb
mov
aam
fldenv
fldt
dec
add
int
call
pop
jnp
idiv
xchg
scas
push
lahf
bound
ret
dec
lds
nop
mov
xor
add
jge
jecxz
mov
pushf
jl
in
fisttps
scas
fwait
aam
rcll
movsb
fists
out
jecxz
test
xor
pop
xchg
cmp
mov
aam
das
adc
cmp
push
testl
mov
pop
mov
lahf
mov
mov
push
sbb
les
test
adc
fldcw
or
out
pop
stc
xchg
xchg
jg
stc
loop
jns
push
push
cmp
mov
call
jge
scas
pop
xchg
push
adc
popa
cmp
in
fistpl
jae
mov
mov
xchg
push
std
inc
outsb
sbb
rcr
stos
repz
lods
gs
sbbb
mov
mov
mov
mov
sub
inc
adc
flds
loopne
jbe
fdivl
movsb
pop
enter
ja
xchg
popl
jge
movsl
movsl
jp
or
inc
or
shr
int
aad
fs
fsubl
adc
and
jl
leave
pop
sarl
sub
mov
dec
inc
fldt
loope
lea
jg
test
in
shll
in
jle
pop
lea
sub
cmc
sti
push
insb
arpl
in
pushf
out
rorl
fnstcw
cmp
shlb
pusha
shll
leave
sbb
repnz
mov
imul
jmp
lret
in
mov
and
pop
mov
js
lds
test
xchg
or
stos
xorl
push
mov
insl
fmul
loope
call
pop
jmp
pusha
inc
enter
push
cmp
fildll
sub
scas
pop
popf
dec
jo
jbe
jmp
hlt
add
outsl
jnp
fadds
push
sub
lock
xchg
movsb
ds
xchg
push
xchg
add
aam
mov
ja
mov
and
inc
push
sbb
stc
into
subl
in
pop
ljmp
mov
sti
imul
cmp
xor
adc
push
push
ljmp
ror
or
sbb
cmp
mov
mov
mov
push
iret
xchg
push
and
or
inc
pop
add
icebp
dec
cmpsb
xchg
out
loope
jle
stos
cmc
xchg
nop
cli
jns
movsl
jns
sti
out
adc
addl
addr16
imul
in
mov
cmpb
inc
add
idiv
outsb
xlat
mov
push
xor
xchg
dec
rcrb
push
sub
mov
ja
das
into
addr16
sub
xchg
adc
ss
gs
test
mov
cmc
lods
push
out
lcall
mov
jmp
and
movsl
cwtl
shlb
repz
mov
std
stos
xchg
or
cmc
mov
je
addr16
pop
jne
lret
testb
ss
rcrl
jne
inc
pop
xchg
nop
pop
mov
xchg
imul
push
cmp
adc
ja
outsl
hlt
in
aaa
push
in
push
and
xchg
pop
and
sbb
mov
inc
adc
or
lret
jmp
sub
inc
lret
test
mov
adc
and
push
cmp
sbb
mov
or
sti
orl
push
and
into
out
xor
sub
mov
int3
dec
and
lcall
jae
in
fldl
enter
pop
mov
das
sahf
leave
loope
mov
add
jno
mov
call
lahf
inc
imul
cmc
es
adc
cli
shll
jecxz
xlat
sub
mov
cmc
fdivl
out
repnz
pop
clc
push
aad
cmp
rorl
stc
stc
jae
fwait
ret
leave
lahf
mov
add
pop
cli
negb
mov
outsb
or
pop
mov
jle
mov
push
test
mov
mov
adc
loop
pop
in
mov
jno
fistps
lahf
test
in
rorb
insb
and
loope
loop
xor
in
fwait
cmc
xchg
sarb
pop
jnp
inc
fsubrl
in
jmp
pop
push
test
ljmp
or
adc
cwtl
mov
shrl
outsl
leave
out
jecxz
jnp
or
fnsave
sahf
jmp
idiv
clc
jecxz
xor
imul
push
sub
lret
lods
out
push
pop
xor
jno
xchg
pop
mov
push
hlt
mov
sub
loop
int
popf
les
outsb
sub
mov
push
fsubrp
mov
sbb
scas
xchg
push
xchg
outsb
push
movb
pop
movsb
dec
sub
cmp
pop
ret
lock
xor
mov
sti
gs
dec
xchg
or
fstp
add
mov
cs
adc
cld
mov
scas
aam
cli
roll
cwtl
mov
in
and
sub
in
sbb
sbb
out
lods
js
lea
leave
dec
std
test
pop
lods
mov
inc
mov
shl
mov
rolb
mov
pop
das
add
bound
xchg
dec
push
loope
adc
cmpsl
loop
or
dec
lods
push
or
fimuls
dec
scas
pushf
sub
dec
xchg
lea
notb
rclb
push
mov
pop
int3
jg
push
loopne
inc
fisttpl
xchg
cli
lds
test
fisubrl
and
cmp
push
call
cmp
inc
filds
jmp
jmp
add
xchg
cltd
fists
pop
lret
inc
mov
outsl
and
sbb
int
inc
fs
pop
loopne
stc
mov
xchg
scas
std
outsb
dec
dec
daa
test
sbb
fdivs
pop
jo
inc
in
cmpsb
push
imul
test
sub
sete
cli
cmp
mov
xchg
push
sbb
push
push
push
adc
ja
lret
fisubl
xor
stc
add
add
push
dec
jge
mov
addr16
pop
fdivl
frstor
loop
mov
mov
sbb
fsts
adc
shl
xchg
pushl
scas
pop
enter
pop
lods
fcomi
shll
jmp
js
cmc
mov
movsb
lock
ret
cmp
or
lock
lahf
push
fldz
add
outsb
inc
push
int
xchg
mov
dec
lock
adc
add
scas
enter
cs
mov
lds
ljmp
mov
cli
iret
addl
push
mov
lahf
cmp
jnp,pn
int
stc
mov
xchg
push
pop
insb
cmp
shrb
arpl
lret
push
sbb
rcr
sub
out
inc
xchg
ljmp
out
mov
ret
arpl
add
xor
inc
dec
subb
sbb
aad
xlat
mov
mov
movsl
sub
push
test
ljmp
test
dec
lock
aas
outsb
xor
stos
pop
outsl
pop
test
jnp
mov
inc
insl
push
or
iret
ljmp
sub
aas
out
xchg
arpl
sbb
movl
rcrb
push
int
clc
scas
ficomps
pop
push
xchg
xchg
test
xchg
cmp
push
dec
push
mov
cmp
sahf
push
sub
add
cwtl
sahf
mov
int
int3
into
jae
pop
sbb
dec
andb
jmp
sbb
clc
imul
or
fwait
jl
daa
leave
ds
fwait
mov
aam
enter
repz
cld
xchg
inc
push
mov
sarl
fwait
test
xor
test
mov
dec
push
in
cmp
js
mov
adc
mov
push
xchg
insl
or
cli
pop
mov
sarb
cmp
xchg
inc
inc
xor
stc
testb
test
gs
outsl
xchg
pop
or
mov
push
sub
mov
push
jae
add
push
xchg
cmpsl
in
nop
xchg
jl
cmp
js
addr16
in
pop
sbbb
cmp
add
shrl
jmp
je
or
outsl
loop
jmp
jecxz
dec
shrb
dec
mov
pop
rcll
aas
xchg
enter
jmp
dec
xchg
stos
in
sahf
pusha
rclb
mov
cmp
push
xor
movsb
ds
stos
pop
sbb
sub
sbb
insb
mov
cmp
pushf
jne
insl
lret
adc
push
ffreep
mov
xchg
pop
sub
cs
test
jno
je
sub
push
push
xchg
mov
or
adc
mov
mov
shl
aam
xchg
test
cmp
lret
rcl
sbb
lret
repz
js
dec
adc
int
mov
inc
xorl
mov
cmpsb
add
push
mov
cmc
bound
push
or
or
dec
pop
sbb
shlb
dec
clc
popf
pop
adc
adcb
nop
adc
or
movsb
or
testl
enter
imul
pushf
in
sbb
and
add
mov
mov
and
ficoms
xchg
xor
xor
inc
pusha
mov
fprem1
mov
and
outsb
jl
cmp
leave
test
jns
fs
jle
pop
mov
add
pop
adcb
mov
fwait
mov
mov
pop
push
adc
or
cs
dec
adc
movsl
adc
sub
mov
push
nop
push
cmp
out
jp
xchg
insb
sbb
das
add
js
jg
pop
adc
xor
aad
popa
test
cmpsb
or
sbb
ret
insb
out
xor
push
pop
in
flds
xor
lcall
mov
repnz
dec
lret
xorb
loop
rol
mov
mov
in
clc
addl
or
aam
mov
loopne
xor
push
push
fadd
outsl
jb
aad
fmull
mov
push
dec
aad
xor
iret
aaa
inc
js
and
ja
xor
int
push
xchg
inc
jbe
sahf
xor
enter
jae
adc
mov
sub
dec
push
pop
add
imul
shll
cs
ret
inc
sub
sbb
imul
lret
pop
popf
sbb
into
sub
int3
fistpl
xchg
lods
test
data16
push
lods
cmp
cmp
adc
imul
bound
pop
jmp
push
cmp
sub
in
or
test
xor
lds
mov
sbb
mov
movsb
mov
push
das
adc
jl
pop
cmp
xchg
or
jmp
pop
pop
pop
push
js
jb
fsubrp
leave
and
mov
adc
arpl
jg
jmp
xchg
mov
clc
xor
pusha
sub
pop
insl
jno
ficompl
jmp
daa
jno
insb
mov
fdiv
std
dec
dec
fadds
movb
push
add
ror
test
stc
loopne
push
imul
push
pop
aam
or
mov
inc
test
pop
or
or
add
jno
movsl
popf
dec
es
lea
dec
fisubl
insb
outsl
aam
dec
mov
mov
cld
xor
push
ljmp
xor
andl
daa
sbb
jno
mov
jecxz
insb
mov
scas
mov
leave
pop
and
hlt
cmc
add
cmpsl
test
add
movsb
inc
inc
aaa
lcall
dec
push
insb
ja
pop
push
lods
and
push
mov
imul
mov
cmpsl
int3
cmp
jge
adc
lcall
insl
push
lock
mov
fldt
dec
test
dec
xchg
das
cwtl
push
dec
std
je
add
jge
icebp
mov
ret
mov
fs
test
decb
mulb
mov
je
pop
mov
xchg
push
addr16
movsl
fs
scas
addr16
push
aas
sbb
mov
push
pop
push
push
call
dec
pop
cmp
loopne
jle
adcb
jg
dec
mov
pop
push
jb
int
push
add
pop
test
sbb
pop
pusha
sub
xchg
scas
mov
icebp
mov
loop
pop
sub
pop
bound
stos
sarb
mov
add
cmc
fadd
jns
adc
in
mov
hlt
outsl
dec
nop
adc
enter
sti
mull
xlat
mov
adc
add
add
insb
inc
pop
sub
xchg
mov
dec
jp
arpl
scas
jge
mov
push
into
adc
shlb
insl
xor
je
cmp
out
add
mov
or
add
adc
loope
je
daa
popa
into
dec
dec
pop
cmp
xchg
add
xchg
gs
and
pop
ja
inc
cltd
jle
ret
and
xchg
and
push
mov
icebp
jge
ja
pop
gs
mov
insl
stc
dec
xchg
rclb
movsl
gs
aad
xchg
adc
fnstenv
incl
cmp
fistpll
sub
loop
xchg
enter
dec
push
sar
jnp
nop
int
ret
loop
mov
icebp
stos
mov
mov
mov
lods
fwait
inc
inc
adc
lahf
adc
jmp
insl
out
in
sbb
rcr
pop
test
xor
push
mov
push
add
mov
push
mov
adc
dec
fistpll
insb
fxch
into
mov
sub
jns
mov
dec
nop
in
je
sbb
into
mov
nop
mov
add
xchg
rcrb
addr16
push
fsubrs
mov
pop
insl
lcall
in
test
cs
add
outsl
adc
and
mov
cmp
mov
jmp
pusha
test
call
push
pusha
lods
jg
mov
or
mov
enter
fdivr
lcall
cmpsb
repz
inc
rcrl
adc
stos
cmp
jp
jecxz
imul
pop
loopne
lods
into
mov
inc
xor
test
dec
pop
mov
hlt
or
or
test
dec
addr16
mov
pop
xor
mov
mov
and
aam
pop
lds
sarl
pop
dec
xchg
jae
add
insb
xor
pop
inc
andl
lock
add
and
mov
sbb
mov
in
xor
pop
and
outsb
dec
cmp
out
js
adc
repz
cmc
jmp
xor
push
nop
cmp
mov
test
movsb
jecxz
or
cmp
aam
mov
aaa
xchg
push
xchg
scas
pop
cmp
add
pop
loope
push
dec
aas
aaa
ret
ret
jp
sub
fidivl
movsl
dec
xor
mov
push
addr16
pop
or
jno
sub
flds
adc
test
cld
lock
lods
mov
cmp
das
mov
pop
sahf
xor
test
add
xchg
mov
cld
out
lods
iret
cli
mov
pop
dec
sbb
xchg
decb
arpl
lods
popaw
cwtl
cmc
push
loopne
push
push
hlt
jg
leave
in
xorl
mov
pop
mov
scas
mov
cli
and
ror
dec
sub
xchg
sub
dec
enter
sti
scas
push
mov
pop
xor
pop
fdivrl
mov
xchg
jbe
fs
testl
andb
mov
xor
inc
adc
mov
ds
popf
push
or
out
scas
fcomi
aas
leave
cli
stos
xor
dec
xchg
sarl
inc
add
adc
repnz
outsl
fisttpl
and
mov
push
clc
cs
dec
mov
xor
repnz
pop
out
cmp
bound
cmp
sub
inc
push
mov
scas
stc
lcall
call
pop
and
adc
mov
push
push
jg
pop
stos
aam
mov
xor
or
inc
aad
loop
daa
repnz
les
notl
mov
out
hlt
repz
jae
sahf
hlt
mov
cmp
fwait
mov
popa
mov
cmc
jg
stos
repz
adc
and
dec
insb
adc
dec
jp
jne
aaa
xor
and
add
add
add
mov
ljmp
add
or
adc
mov
mov
pusha
sub
sti
movsb
cmp
arpl
cmp
iret
xchg
stos
cmc
fnstsw
imul
or
jmp
inc
mov
dec
adc
cmp
ret
sub
pop
shlb
push
sub
scas
jle
cld
push
imul
sbb
test
and
incl
test
xor
fldt
sub
adc
into
sbb
aas
xchg
push
push
jecxz
nop
sub
jp
push
push
fdivr
mov
out
jmp
jo
je
orb
in
pop
lods
outsl
jg
pushf
cmpsl
jnp
push
push
addr16
cmp
dec
jmp
ljmp
jmp
cltd
or
popf
mov
cmp
dec
pop
pop
dec
lods
rorl
sbb
repnz
out
pop
roll
fmul
lret
ret
shrb
sbb
or
adc
sub
fwait
sbb
shlb
arpl
mov
stos
push
xor
dec
push
add
push
enter
cwtl
pop
je
pusha
iret
add
hlt
mov
out
loop
scas
or
sbb
clc
int3
mov
add
sarl
lea
int3
mov
cmc
or
adcb
fs
push
add
jo
ds
and
jecxz
sbb
out
mov
mov
cwtl
mov
sbb
jge
jmp
dec
mov
ss
mov
adc
cmp
mov
test
push
int3
sbb
sbb
popf
mov
ljmp
xor
mov
mov
push
fidivrl
cmp
sub
js
out
jmp
mov
ljmp
imul
and
xor
mov
mov
pop
dec
lds
pop
sbbb
out
imul
add
stc
lds
repz
mov
inc
lret
bound
sbb
cmp
jbe
movsb
in
insb
filds
inc
movsl
pop
mov
shl
mov
mov
or
cmpsb
and
in
fimull
and
je
or
xchg
jl
inc
insl
insb
jp
mov
test
movsl
dec
sbb
cltd
js
in
imul
push
adc
fstl
add
mov
int
and
stc
out
xchg
mov
xchg
adc
das
sub
cmpsb
lods
cltd
cli
jg
inc
bound
xchg
jns
dec
xchg
add
pop
and
je
ret
push
push
mov
push
push
sbb
push
cmp
inc
into
xchg
push
nop
in
mov
addl
add
enter
or
jnp
cmp
sbb
fwait
push
mov
add
and
push
test
sahf
movsl
adc
daa
int3
enter
bswap
rcrl
sub
stos
inc
push
test
dec
mul
sahf
adc
cmpsb
jnp
cmp
push
xchg
xor
in
scas
ds
jbe
push
jno
hlt
daa
fldcw
rolb
and
aas
fwait
and
cwtl
fnstenv
pushf
xor
or
and
adc
les
add
stos
xor
test
xchg
scas
cmp
ds
andb
mov
test
or
cmp
loop
jmp
ror
aam
mov
sbb
pop
cli
jo
clc
push
and
dec
and
inc
imul
mov
mov
jnp
mov
add
mov
adc
mov
jne
jg
fcompl
cmp
testb
inc
jmp
jle
add
popf
leave
xchg
mov
jmp
ss
mov
mov
in
jne
mov
mov
or
repz
adc
ds
inc
push
sbb
push
lods
insb
fisttpll
clc
adc
push
aaa
adc
cmp
pushf
cltd
aam
test
and
gs
push
movl
lcall
pushf
push
push
test
jecxz
adc
or
mov
inc
jg,pt
out
notl
push
aam
inc
out
sti
lock
mov
inc
xor
and
pop
outsb
loopne
pop
xlat
sahf
add
cmc
rol
mov
mov
aad
xor
pop
loop
and
sbb
fwait
ds
lret
xor
xor
call
push
mov
rclb
inc
sbb
lock
aad
fildl
add
cmpsb
idivl
test
popf
sbb
sub
in
sub
push
hlt
andb
out
xchg
rolb
lret
xlat
cmp
mov
iret
add
fadds
lods
das
and
sub
mov
and
sbb
cmpsb
pop
in
iret
inc
mov
fcoms
into
inc
push
add
icebp
mov
or
push
xlat
mov
out
cmpsl
mov
dec
loope
cltd
adc
push
mov
insb
jge
xchg
sub
rcr
lods
call
adcl
aad
cmpsl
xchg
mov
dec
mov
pusha
rorb
hlt
lock
push
sbb
icebp
mov
mov
and
jae
call
xchg
jne
jnp
repz
pop
jp
test
mov
std
and
sub
imul
mov
and
mov
je
sbb
mov
jl
mov
sbb
and
fs
aad
xchg
mov
jl
and
push
inc
in
inc
out
mov
adc
mov
cltd
cmpsl
in
and
outsb
push
push
xlat
dec
icebp
jno
sub
push
mov
mov
lds
xchg
and
pop
into
add
push
push
pop
sar
dec
pushf
add
or
popa
jbe
inc
xor
mov
adc
pushf
cmp
dec
pop
xor
rcll
movsl
sbb
jb
mov
sbb
jo
aad
notb
loope
fmuls
lods
push
das
push
sbb
pusha
xchg
mov
fnsetpm(287
adc
sahf
rorb
add
sub
pop
add
jg
lea
push
ja
sahf
jnp
mov
dec
adc
sbb
xchg
cmpsl
out
push
push
cwtl
jae
inc
mov
fcomps
sti
inc
inc
shll
mov
cmc
inc
pop
xor
rcll
sbb
or
push
loop
pop
push
jae
cmp
cwtl
dec
loop
sub
sub
in
mov
adc
cli
ja
andb
loop
xchg
xor
mov
pop
rcll
and
into
test
cs
pushf
xor
push
xchg
jmp
testb
pop
ja
cs
aam
into
mov
xor
lods
mov
jns
outsl
data16
fstpl
mov
ds
stos
lret
cmp
dec
movsb
mov
xchg
adc
inc
jecxz
je
inc
popf
pop
xor
xchg
das
arpl
pop
leave
inc
mov
pop
jo
pop
mov
and
xchg
dec
adc
lock
add
mov
and
scas
dec
push
mov
nop
shrl
inc
popa
cltd
outsb
fadd
sub
leave
push
and
push
add
rcll
dec
xchg
xchg
xchg
pop
sbb
jl
outsl
jmp
add
cs
mov
push
fwait
call
push
inc
sahf
sbb
imul
inc
stos
mov
push
loopne
mov
pop
inc
mov
dec
xchg
dec
jp
xor
sub
arpl
xchg
cld
inc
adc
mov
mov
bound
push
adc
pop
lock
sbb
add
sub
xor
lahf
dec
mov
mov
push
loope
sarb
fcmovbe
jbe
mov
arpl
or
mov
cmpsb
shll
add
cltd
xor
cmp
inc
xor
jns
or
js
test
scas
mov
rorl
sbb
inc
ljmp
jge
or
sub
or
into
icebp
mov
sub
xchg
xchg
std
stos
mov
jns
jb
push
xor
insb
iret
push
cli
lea
sub
movsb
push
xor
pop
mov
adc
sub
or
mov
js
sbb
or
adc
hlt
stos
or
cmpsb
lahf
sbb
adc
push
inc
movsb
push
and
push
and
enter
xchg
push
pop
divl
lock
shlb
pop
xchg
sub
mov
mov
out
out
stc
leave
div
rorb
or
ljmp
xchg
int3
into
and
xchg
ret
shlb
loope
movsb
xchg
mov
cmpsb
pushf
jmp
int3
jmp
movsl
adc
xor
jnp
inc
popa
fcmovb
and
stc
inc
rorl
push
jecxz
movsb
fmull
push
xor
sub
xlat
popa
popa
or
pop
negl
lcall
sahf
xorl
test
or
push
pop
in
rcll
insb
mov
mov
nop
lods
js
and
mov
xor
movsb
out
xor
sub
aad
mov
std
cli
sbb
jmp
sbbl
mov
dec
inc
mov
sbb
cmp
dec
cmp
inc
nop
inc
sbb
adc
or
add
or
mov
and
sub
pop
inc
pop
test
mov
sti
std
push
mov
inc
jno
sub
cmp
imul
pushf
in
sub
add
sbb
or
cmpsb
add
push
lods
mov
cmp
leave
mov
xchg
loop
clc
xor
and
ss
lds
insl
imul
in
jbe
call
dec
out
mov
sbb
xor
mov
push
fwait
scas
fst
negl
mov
out
cmpsl
add
push
sar
sub
xor
xor
cmp
pop
pop
jae
rcrb
pop
cmpsb
lahf
mov
call
push
lahf
mov
or
movb
cmpsb
lahf
imul
fwait
cltd
mov
xchg
mov
jnp
cmpsb
rorb
push
mov
loope
mov
cvtps2pi
add
out
push
fcomp
js
xor
sub
gs
fisubrs
shlb
xchg
lds
dec
inc
pop
js
in
cmp
mov
dec
push
jb
cmp
adc
outsl
ljmp
or
jo
mov
xchg
mov
lods
sub
hlt
leave
jnp
mov
insb
dec
insb
and
jae
fs
pusha
jae
jo
ret
cmp
inc
outsl
sahf
es
ds
cmp
cmp
cmp
jl
dec
adc
dec
cmpsl
addr16
push
pop
add
xchg
int3
mov
sbb
inc
mov
mov
int3
aad
es
shr
lds
mov
fstpt
ret
aam
mov
popf
xchg
push
cltd
rclb
jae
stos
stc
push
dec
imul
inc
ljmp
bnd
jecxz
jl
xchg
insl
dec
push
jge
push
in
repnz
in
je
fcmovbe
loopne
pop
rep
xor
mov
stc
mov
push
in
mov
add
enter
push
pop
les
cwtl
mov
xor
mov
inc
ret
cwtl
push
enter
mov
dec
aam
mov
mov
push
pop
or
mov
xlat
jge
adc
dec
and
or
neg
adc
or
mov
or
lds
cmpsl
sbb
in
jbe
add
lds
inc
push
xlat
or
loopne
pop
mov
xor
sub
stos
pop
and
and
mov
lds
and
cmpsl
test
jne
mov
mov
pop
outsl
xchg
or
stc
and
test
mov
inc
sub
xor
addr16
and
sub
jecxz
enter
push
or
pop
mov
repz
mov
sahf
jecxz
jecxz
mov
and
mov
or
inc
fnstsw
mov
jbe
lea
inc
jmp
lock
push
out
arpl
push
sbb
mov
inc
ss
xor
inc
cmpsl
sahf
jno
loope
loope
push
pusha
mov
data16
cltd
push
pop
test
cmp
lret
jecxz
int3
iret
pop
ret
jg
jnp
loope
data16
clc
lods
imul
xchg
push
xchg
inc
mov
xor
enter
xchg
movb
out
or
scas
jbe
push
cli
pop
mov
test
daa
pop
adc
cmp
scas
sti
mov
xor
mov
sbb
iret
inc
insb
cmp
scas
pop
cmp
fdiv
push
daa
sub
cmpsb
cmp
insl
test
push
xlat
in
sbb
cmp
stos
adc
inc
push
ja
mov
test
sub
mov
js
call
inc
scas
push
and
mov
dec
sub
stc
imul
lea
mov
cmp
xorb
jae
mov
bound
or
jge
mov
or
and
add
decl
in
xchg
sub
adc
push
out
ljmp
mov
popa
jle,pt
ja
mov
pop
adc
xor
outsl
pop
fdivl
aaa
add
loop
or
add
cmp
ja
mov
loopne
sub
mov
or
fadds
dec
jnp
cmp
mov
pop
or
sub
stos
repnz
xlat
xchg
lea
stc
test
lahf
dec
sub
jge
outsb
mov
push
jmp
imul
add
xor
call
adc
xchg
cld
mov
sti
daa
xor
mov
jecxz
cli
push
in
pop
pop
dec
dec
repz
add
push
fwait
sbb
fbld
daa
loopne
lock
aad
pop
ret
xor
icebp
repz
lods
ret
jbe
lds
adc
xor
popf
xor
lods
scas
dec
or
push
mov
mov
lret
mov
cmp
jns
scas
aad
les
mov
popf
jmp
in
fisubrs
and
inc
sbb
ds
das
scas
lret
test
int
call
in
fwait
jnp
das
sbb
mov
ds
xchg
dec
cmp
into
out
or
inc
cmp
xor
mov
in
std
rolb
mov
mov
sub
outsl
sub
lea
out
in
cmp
stos
sub
add
or
jnp
push
mov
sub
popf
out
and
jge
push
xchg
mov
mov
call
mov
sti
jp
nop
imul
mov
fmull
sbb
or
inc
xchg
cltd
lods
and
and
mov
xor
lret
push
loop
dec
add
stos
mov
or
test
out
sub
clc
cmpsb
repnz
push
lahf
cmp
cli
fwait
rclb
rcrl
sbb
call
ljmp
fsubrs
push
test
mov
xor
fisubs
mov
mov
pop
mov
add
mov
idivb
push
in
add
in
incl
popf
in
fdivrl
mov
je
xchg
in
xor
fiadds
stc
inc
out
sbb
sub
mov
push
outsl
aaa
testb
inc
cmp
pop
pop
or
and
mov
cli
inc
mov
icebp
gs
xchg
xchg
sbb
add
push
mov
mov
cld
into
es
pop
mov
xor
mov
mov
mov
mov
push
sahf
sub
das
test
push
loop
jo
jmp
jecxz
dec
cmp
add
repnz
push
mov
sbb
mov
mov
cmpsb
push
mov
lahf
aam
inc
jns
xchg
arpl
data16
movsl
daa
sub
dec
lea
xchg
jecxz
sub
dec
xchg
negb
aad
mov
shrb
sbb
test
notl
sbb
pusha
dec
push
js
test
mov
pop
imull
jnp
xchg
jno
rolb
adc
inc
stos
loope
je
mov
add
jl
push
xchg
push
add
push
push
add
mov
pop
or
hlt
arpl
mov
cmc
daa
dec
mov
mov
fadds
into
jnp
test
push
and
push
arpl
outsb
mov
and
mov
xlat
pop
mov
jo
adc
cwtl
iret
sub
and
scas
jno
ret
push
adc
leave
fdivrl
int
jnp
xchg
imul
ljmp
sub
aam
push
add
mov
test
test
fmull
mov
jnp
in
je
sub
xor
dec
sub
out
or
sar
mov
rcr
mov
ljmp
jecxz
cld
mov
inc
jmp
push
mov
lea
pop
repz
dec
fldenv
jg
or
hlt
add
lahf
nop
divl
and
jbe
mov
xor
push
mov
cmp
pop
xchg
je
push
lods
cmp
dec
mov
fisubs
sbb
jnp
hlt
mov
pop
call
int
jne
dec
fsubs
sbb
sub
dec
jg
or
clc
jnp
ret
xchg
sub
mov
mov
ret
xchg
leave
jp
xor
and
mov
shlb
fwait
int3
into
daa
and
adc
add
xlat
jecxz
out
popa
popf
sbb
pop
out
call
fcoml
mov
cwtl
jb
sub
or
and
push
add
xchg
mov
js
xchg
push
cmp
and
or
lds
aaa
or
fadd
jg
mov
and
ret
adc
mov
inc
imul
sub
in
das
xor
les
shl
inc
mov
pop
xchg
jae
lods
arpl
xchg
push
repz
add
pop
aaa
lock
fisttps
inc
js
lds
sbb
movb
push
out
in
push
fs
pop
cmp
xchg
dec
clc
mov
repz
dec
aad
or
lods
mov
xchg
cmp
fcmovu
jb
popa
dec
iret
or
dec
mov
mov
mov
xor
xchg
inc
push
pusha
into
push
xor
pusha
push
inc
jecxz
inc
or
lret
xchg
pop
add
cwtl
ficoms
mov
lock
mov
xchg
fwait
push
and
jle
out
xor
test
cmp
jle
pop
and
outsb
mov
cmpsl
mov
cmpsb
sti
cltd
push
imul
movb
testb
sbb
fdivr
mov
inc
or
lret
bound
cmp
push
movb
pop
incl
dec
mov
ficoml
out
popf
fsubs
sarb
addl
xchg
out
sub
ret
sub
sub
aam
test
out
in
xor
fsubl
rolb
dec
loopne
adc
imul
cli
daa
fwait
test
push
rcrb
jne
jno
mov
add
xorl
and
lea
jmp
loopne
pop
mov
dec
xor
sahf
scas
movsl
inc
inc
pminsw
mov
ljmp
push
enter
gs
jae
shrb
mov
int
inc
arpl
mov
pop
repnz
cmp
int3
js
fisttpl
jp
mov
dec
sub
xor
cmp
mov
push
add
dec
push
mov
leave
xor
pop
sub
cmpb
mov
jmp
xchg
addl
ret
pop
adc
mov
and
gs
pop
fwait
inc
mov
fs
sarb
jp
test
out
fsubs
aaa
mov
dec
shr
test
mov
xchg
daa
in
add
lods
xchg
pop
cmpsl
mov
lcall
loop
push
clc
fstp
in
mov
jo
jo
repnz
hlt
es
or
push
orb
popf
scas
repnz
scas
inc
popa
hlt
pusha
sarl
cltd
cmp
mov
insb
xabort
mov
inc
mov
xchg
arpl
or
xchg
push
mov
mov
xor
xchg
sbbb
les
mov
or
sub
mov
or
addr16
push
pop
aaa
xchg
jmp
adc
dec
inc
mov
pop
cmp
mov
vcmpss
push
adc
pop
push
stos
ficoms
mov
and
lock
xchg
add
pop
mov
inc
sbb
lahf
loope
scas
push
dec
clc
fcoms
mov
lds
in
mov
shl
mov
pop
into
scas
test
insl
xchg
or
idivl
push
push
out
mov
imul
push
int
mov
pop
inc
ss
addb
iret
sarb
jb
loopne
shr
jl
ret
adc
or
or
lds
out
mov
clc
lret
outsb
lcall
mov
lahf
shlb
jecxz
mov
mov
and
pop
scas
xchg
mov
dec
sub
bound
mov
cmpsb
nop
sub
aad
pop
repz
jmp
movsb
fcmovbe
or
push
outsl
pop
and
out
mov
ljmp
int
pop
sbb
jge
xor
xchg
push
mov
pop
dec
jle
lret
or
sbb
lods
popa
lret
insb
imul
call
jns
jb
add
dec
ds
xchg
jmp
jbe
jae
dec
or
call
sti
mov
loope
vdivsd
jne
push
in
mov
inc
mov
std
lds
inc
fcoml
push
pop
adc
cmp
outsl
pop
jp
dec
pushf
xor
imul
push
fisubrl
stos
cmc
push
out
mov
xchg
lock
jmp
scas
pop
sbb
adc
jl
xor
clc
fisttpl
mov
mov
jl
adc
xchg
or
int
adc
ret
mov
bound
scas
das
mov
sub
mov
mov
aad
push
ret
add
scas
xchg
shl
in
inc
ret
mov
adc
cmp
pushf
ljmp
fbstp
push
lret
or
pop
dec
adc
or
lods
leave
leave
roll
loope
out
cmpb
xor
mov
sub
dec
fcom
or
mov
loope
xor
icebp
xchg
cmc
rcrb
enter
pop
inc
insl
mov
sub
add
mov
xlat
stc
imul
mov
cmc
xchg
jnp
xchg
sbb
std
dec
lret
out
lahf
jbe
addr16
je
lret
out
mov
jnp
jbe
mov
push
pop
fidivrl
cmp
or
jp
jp
outsb
out
lock
aam
stos
xchg
pop
out
inc
add
and
inc
ret
es
fidivs
jns
rorb
imul
jb
xchg
jnp
stos
repz
and
lcall
scas
and
mov
lret
in
pop
jae
sub
movsb
testb
ret
in
arpl
das
sarl
push
inc
in
mov
sub
test
jl
loopne
xchg
test
xor
aas
aaa
sub
pushw
jae
std
stos
shlb
int
ret
lret
sbb
and
cmp
xor
push
sub
or
jae
xor
shrb
mov
lcall
stc
push
sub
test
xchg
xor
iret
mov
xor
push
mov
lcall
cmp
adc
push
cmp
les
ds
cltd
fucomp
adc
mov
mov
out
push
xchg
push
inc
mov
cltd
pop
out
leave
mov
cmpsl
cwtl
mov
stos
sub
push
pop
into
lret
cmp
adc
inc
aad
pop
mov
cmp
sub
pop
add
cld
sahf
push
in
jmp
sbb
popf
sti
aaa
and
mov
pop
inc
dec
pop
popa
mov
jns
sbb
insl
xchg
jle
mov
gs
mov
sahf
cmp
gs
adc
pop
jge
es
dec
jnp
xchg
xor
popa
jl
popa
pop
stc
addb
or
adc
mov
push
inc
adc
pop
ror
lret
cli
cmp
sbb
mov
je
sub
adc
xor
imul
adcb
jmp
lds
std
cmpsl
pop
push
push
mov
pop
or
pop
mov
add
inc
stc
popf
or
push
jno
ds
xlat
sbb
mov
cmp
lahf
ss
jo
mov
xchg
stc
test
xor
inc
jg
insl
sbbb
adc
sti
mov
sub
or
test
std
inc
jns
jle
and
pop
out
and
pop
shll
jbe
cwtl
movsb
nop
mov
mov
xchg
xor
loop
mov
sub
add
sbb
daa
jle
loop
jb
pop
shrl
mov
pop
push
sbb
push
aam
mov
mov
mov
imul
adc
and
lock
leave
in
fidivrs
cmpsl
cmp
cmc
lds
push
inc
sbb
outsb
pushf
andb
clc
inc
push
mov
cmpsb
ljmp
cs
stos
add
stos
leave
cmp
xor
lret
fwait
ds
xchg
cmpsb
jnp
push
jno
sub
adc
inc
sbb
or
dec
mov
data16
sbb
mov
push
sbb
cmp
mov
mov
sbb
int
addl
sub
cmp
sbb
out
jns
ja
lret
imul
inc
test
mull
jge
ja
sub
icebp
in
xchg
out
add
and
inc
inc
daa
sbb
lret
fcoms
shll
pop
insl
or
jne
push
out
sarl
jmp
int3
adc
clc
mov
repz
ret
inc
jb
mov
loopne
pop
jae
or
dec
xchg
and
dec
mov
mov
pop
es
xlat
out
adc
subb
call
outsb
adc
stos
add
pop
leave
es
aad
ja
jae
iret
lahf
lea
loopne
mov
sub
dec
lret
movsl
jl
repz
je
je
inc
adc
stos
sti
sbb
je
sub
not
popa
mov
inc
stc
fsubrl
orl
sti
cmp
push
in
icebp
mov
cmpsl
push
pop
push
lret
out
mov
mov
ret
push
jae
xchg
aam
pop
sbb
add
pop
in
cmc
pop
test
in
inc
das
inc
lcall
xchg
xor
iret
xor
cli
adc
js
rcrl
lea
movsb
inc
or
movsl
fmulp
cmp
adc
stos
mov
mov
dec
dec
movsl
sahf
pop
es
pop
rcll
scas
push
lret
pop
insb
xor
imul
cmp
add
cmpsl
ret
movsb
or
jbe
faddl
mov
and
mov
adc
mov
sar
xchg
mov
mov
mov
jne
or
mov
pop
mov
or
call
add
sub
das
into
or
push
mov
ret
pop
dec
paddw
lds
rcrb
sbb
lcall
js
test
addb
xchg
sub
xor
into
xor
sub
sbb
shlb
loopne
cwtl
mov
fcompl
pop
xor
dec
mov
and
mov
cmp
or
dec
sbb
add
inc
in
call
xchg
stos
cmc
pop
sub
nop
sub
or
into
mov
jb
push
dec
pop
test
jbe
xchg
mov
adc
sub
fsubl
out
and
fcoml
fnstcw
and
je
cmp
repnz
ss
neg
xchg
inc
lret
movsl
inc
xchg
cmp
aaa
outsb
or
movsb
inc
in
clc
xchg
jp
and
and
fsubrs
push
lea
mov
cmp
mov
push
lret
aaa
pop
mov
jmp
mov
or
fwait
and
jecxz
ret
out
cmp
repz
movsl
nop
adc
scas
cs
jnp
aam
lods
adc
insl
jo
xchg
xchg
out
or
inc
aam
xchg
jbe
enter
push
xor
jne
cs
movsl
scas
call
mov
push
ret
add
or
xor
sbb
test
jge
sub
lret
movsb
mov
sub
sub
call
xchg
lods
dec
adc
pop
add
pop
jle
cmp
pushf
mov
mov
push
pop
mov
rorb
adc
lods
push
push
mov
daa
xchg
dec
and
popa
loop
or
add
sub
jge
or
ja
adc
dec
pop
leave
je
cmp
cmp
leave
jnp
inc
cltd
jne
sbb
sarb
repz
pop
cltd
dec
push
cmp
mov
cmp
fld
push
lods
sub
loopne
sub
mov
rclb
push
out
push
std
fwait
ja
shlb
xor
jo
std
inc
int
jle
push
dec
mov
js
ror
mov
test
cmpsb
pop
mov
jns
push
cmp
hlt
or
jge
inc
push
int3
inc
push
lods
out
pop
pop
arpl
loop
js
mov
jno
cwtl
push
dec
inc
inc
andb
add
pop
mov
sub
push
ret
in
pushl
xchg
cmp
or
adc
push
push
cmp
sub
sbb
push
lods
dec
out
add
cli
and
imul
and
ret
leave
aad
or
push
xchg
pop
dec
push
test
mov
lahf
fwait
mov
or
adc
sbb
jnp
xor
sbb
fs
insb
mov
push
mov
arpl
jns
rorl
sub
sbb
adc
iret
dec
add
mov
xchg
and
add
test
jnp
shrb
cmp
jl
pop
mov
pop
mov
movsl
xor
imul
or
dec
xchg
cwtl
hlt
or
inc
andl
aad
push
jecxz
out
movsb
aas
inc
je
dec
push
mov
inc
loopne
cmp
push
subb
lock
jo
push
loopne
lret
into
mov
dec
pop
rorb
in
dec
and
aad
iretw
cmp
fildl
popa
push
inc
push
add
mov
sarb
insb
ds
or
popf
loop
pushf
cmp
in
jp
mov
add
into
insb
xlat
out
push
and
in
mov
lret
pop
lea
lods
dec
cmp
add
add
in
mov
push
bound
mov
loope
punpcklwd
aas
or
xor
mov
push
cwtl
popa
jne
icebp
mov
idiv
stos
into
push
lds
lods
xor
ss
pop
adc
outsb
mov
test
sub
outsb
mov
bound
dec
adc
cs
and
xor
pop
or
aaa
push
sub
mul
lods
jne
push
sbb
mov
cmpsl
call
sub
aam
adc
pop
ror
cs
lret
pop
add
inc
ja
jge
insl
mov
push
fucomip
jo
inc
jae
sbb
cmc
out
cmpl
cltd
inc
popf
shll
ja
push
gs
dec
pop
dec
shll
sub
jne
lret
sbb
xchg
shlb
and
cmc
loope
insl
push
mov
fsubrs
xchg
inc
or
rep
mov
adc
lods
cs
ds
add
mov
fsubrl
iret
cmpsb
pop
sbb
cmc
lock
xchg
cmp
in
mov
mov
in
and
scas
pop
push
jbe
les
inc
xchg
aaa
sahf
sub
sahf
test
movsb
je
jb
xchg
int
call
push
nop
leave
cmpsb
or
stos
jp
call
scas
cmp
xor
mov
mov
insb
sub
dec
pusha
imul
cmp
adc
sbb
dec
inc
ffree
mov
push
bound
loope
inc
mov
jecxz
mov
xchg
lock
and
adc
arpl
add
push
pavgb
mov
andl
xchg
das
jmp
jecxz
jge
jnp
aas
dec
add
push
xorb
ficoms
xor
and
xchg
pushf
xor
xor
xor
push
subl
or
fsubr
daa
out
ja
mov
in
inc
scas
dec
test
jne
mov
push
ja
cwtl
andb
inc
daa
xor
enter
mov
adc
fdivl
pop
pop
test
xor
xor
add
jns
call
punpcklbw
push
out
cmp
imul
pop
mov
mov
pop
add
jns
mull
jae
sar
push
pushl
jno
dec
cli
add
rolb
dec
hlt
jg
pushf
popa
and
roll
mov
aaa
stos
xlat
lock
cmp
xor
or
mov
mov
loopne
mov
rorl
ret
cmpb
sbb
mov
add
xchg
mov
aas
xor
pop
lahf
cli
fsubrs
dec
mov
add
aas
cmp
int3
lods
xchg
pop
cmp
push
das
add
rclb
jl
lea
and
mov
jnp
or
clc
test
jne
add
cld
scas
mov
lret
loope
or
andb
data16
sbb
rol
jl
mov
xchg
mov
test
push
push
sub
mov
ljmp
das
jne
into
inc
sub
popf
cmp
cmp
cmpl
mov
cmpb
pop
mov
daa
xchg
pop
movsb
clc
xchg
popa
ds
inc
ret
cld
jg
dec
fsubs
cli
test
popf
lret
ret
imull
xadd
xor
cs
in
inc
jl
dec
push
stos
adc
icebp
test
sub
xchg
and
inc
shl
push
rcl
repnz
loop
jae
gs
push
imul
sahf
out
addr16
xchg
xchg
daa
ret
addr16
cltd
mov
xchg
cmp
insb
ds
shrl
push
pushf
dec
out
fidivs
pop
mov
lahf
test
or
add
pop
jl
shlb
in
pop
add
xchg
cwtl
clc
cmp
add
jno
popa
mov
insl
pushf
pop
in
scas
shrl
mov
pop
pop
mov
xlat
jno
ficoml
icebp
push
in
call
pop
dec
and
imul
cmp
inc
movsl
pop
imulb
sarb
into
mov
stos
ret
pop
mov
cmp
mov
cmc
mov
arpl
inc
movb
stos
sahf
nop
popa
jl
inc
lcall
nop
rcll
adc
ljmp
lcall
dec
add
out
out
adc
xchg
lods
adc
inc
fldt
mov
inc
mov
inc
jecxz
pop
fldenv
mov
or
int3
daa
imul
mov
adc
mov
or
push
out
dec
dec
jecxz
sbb
stc
push
aad
sub
pop
pop
inc
dec
xchg
pop
cmp
and
les
dec
arpl
xchg
das
xchg
adc
out
push
cmc
lea
cmp
insl
adc
push
ja
popf
scas
pusha
leave
inc
ss
subb
lock
pop
popf
add
lret
lods
cld
stos
mov
sbb
shlb
or
mov
and
xchg
lea
lock
js
jns
or
rcl
rcl
es
repz
sbb
test
test
out
xchg
xchg
fwait
xor
data16
pop
cmp
mov
or
loopne
mov
push
shlb
or
inc
inc
es
dec
mov
mov
add
and
test
inc
mov
loope
jp
pop
cmpsb
add
adc
out
mov
fistl
stc
cmpsl
shll
xor
das
cwtl
in
adc
lret
cwtl
mov
fs
gs
adc
cmp
out
add
imul
add
jno
jmp
or
dec
push
mov
mov
mov
inc
jl
dec
push
insl
jno
or
lcall
test
add
adc
dec
xorl
shlb
jmp
cwtl
lret
movsl
adc
mov
lcall
mov
and
aad
xor
mov
jno
in
test
cwtl
lea
idivl
addr16
push
stos
xchg
test
inc
leave
push
mov
mov
xor
lods
sbb
jecxz
sbb
stos
nop
in
loope
mov
push
mov
push
mov
mov
jge
jae
popl
shrb
popa
aas
adc
call
cmp
int
xchg
add
cmp
or
outsb
cmpsb
pusha
xchg
jbe
fs
xchg
mov
and
add
cmp
sbb
inc
pusha
or
and
push
shr
push
mov
psadbw
xchg
mov
xchg
inc
or
or
repz
push
js
lcall
repz
add
dec
sbb
pop
inc
iret
arpl
push
loopne
pop
or
clc
xor
jle
in
push
sbb
jmp
pusha
fstl
cmpsl
push
popf
or
cwtl
loop
icebp
outsb
inc
mov
jle
les
or
lret
mov
les
add
outsb
push
in
cmp
mov
mov
xchg
lods
xchg
ret
xchg
inc
sub
fxch
jne
add
push
pop
mov
or
movsb
in
xchg
mov
aas
pop
sahf
pop
jbe
pop
ds
mov
shr
call
adc
xchg
loop
out
add
iret
jbe
add
adc
adc
pop
add
jle
insb
sub
shll
aaa
dec
fimull
adc
sbb
sub
addb
jle
inc
cmpsl
xchg
jecxz
xor
test
push
enter
test
int3
andl
pop
sbb
bound
ficoms
nop
sar
fdivl
lret
rcrb
fildl
mov
hlt
or
push
jg
cltd
aaa
pop
ficomps
or
insl
mov
add
mov
fisttpl
cmp
xchg
xlat
add
xchg
je
xchg
das
pushf
push
ja
sti
jecxz
cwtl
ror
dec
dec
cmpsb
mov
mov
pop
adc
cmp
sahf
xchg
mov
push
cmp
dec
rolb
mov
mov
mov
jo
ret
jb
enter
mov
out
lea
xchg
jnp
mov
cwtl
repz
fstps
xchg
loope
ja
and
pushf
xor
ja
pop
xlat
push
cli
jmp
mov
jge
pop
stos
outsl
rcl
mov
sub
cmp
clc
sub
fdivrs
jge
xor
movsl
xchg
mov
fs
dec
and
cmp
dec
jmp
push
xchg
pop
sub
mov
imul
and
lcall
ss
push
sub
push
jl
icebp
mov
mov
push
movsb
int
int3
iret
popl
ret
mov
xor
xor
aam
call
enter
xor
shlb
xchg
flds
jle
scas
xor
loopne
fprem1
jle
adc
ljmp
add
sub
jmp
jbe
pop
fadds
xor
sub
in
fdivr
icebp
push
rcl
fisttpll
insb
or
aaa
sbb
cs
loop
es
enter
out
pop
fs
ret
push
push
loop
mov
add
out
add
icebp
cmpsb
scas
pop
mov
cmp
insl
shrl
ffreep
push
pop
dec
inc
mov
mov
ja
jmp
ss
mov
lock
xchg
dec
cltd
mov
cmp
pop
nop
cld
out
jno
leave
mov
cld
cmpsl
das
test
add
push
sbb
shrb
clc
jp
sub
stos
out
sbbb
add
push
mov
cmpl
orb
push
outsl
mov
repz
outsb
sub
fisubl
fs
inc
cmp
daa
cmp
push
gs
jbe
pop
mov
add
xchg
or
and
outsl
mov
fwait
mov
push
aas
dec
xchg
inc
push
adc
jmp
add
dec
mov
and
inc
arpl
sub
mov
ss
out
jg
mov
xor
inc
fiaddl
sbb
cmpsb
cmc
push
mov
out
ljmp
cwtl
insl
mov
add
mov
test
dec
lods
cmp
xor
lret
mov
ret
rcll
popa
lods
xchg
pushf
add
lea
lods
loop
imul
cltd
mov
add
mov
push
or
cmpsl
icebp
sub
dec
or
je
hlt
stos
sbb
daa
test
pop
in
push
push
lret
sbb
addb
aaa
les
addr16
mov
sub
mov
mov
mov
push
adc
sbb
jns
popa
arpl
xor
ljmp
stos
add
into
addl
out
adc
xchg
cmp
aad
jl
fmull
fcmove
fstpt
movsb
lods
inc
cmc
in
or
stos
insb
fstpt
adc
js
cmpsb
push
dec
add
sahf
rolb
inc
out
xlat
repz
lcall
inc
movsb
lds
pop
push
mov
jno
mov
movsl
or
mov
out
mov
insl
test
xor
pop
jp
pusha
pop
pop
subb
sbb
lcall
andl
xchg
push
mov
xchg
outsb
sub
pop
mov
dec
sub
dec
sti
mov
xchg
stos
sahf
lds
fdivp
outsb
sbb
and
cld
into
jo
movsb
cmpsl
lock
xchg
sti
mov
flds
and
cmp
repz
addr16
mov
cmpsl
mov
adc
ds
or
xor
xchg
stos
xor
mov
sub
mov
lret
imull
repnz
pusha
sbb
outsl
nop
iret
xor
cmpsl
mov
cmc
mov
ds
andl
test
xor
pop
or
in
inc
or
fnstenv
and
pop
notb
mull
or
roll
mov
movsl
dec
sub
pop
sub
jno
test
sbb
idivb
pop
sub
movsb
loop
mov
cli
data16
inc
sub
push
les
fmull
cld
mov
and
lods
ljmp
pop
bound
cmp
adc
js,pn
sub
pop
mov
and
out
add
jno
inc
std
nop
lods
leave
mov
lock
outsl
mov
scas
scas
dec
push
sti
jno
fcom
mov
popa
ret
mov
mov
xor
sti
sar
jp
pop
inc
cmp
fnstenv
dec
addr16
inc
or
push
adc
and
movsl
push
les
stos
push
cwtl
sbb
jmp
jno
lods
cmp
push
xchg
std
sbb
jb
addr16
popf
dec
mov
in
pop
or
mov
mov
jg
sbb
inc
andl
mov
int
or
jne
mov
loopne
add
mov
push
xchg
pop
dec
das
jcxz
pop
inc
int3
xor
and
lock
std
shlb
inc
inc
pop
dec
stos
ss
es
addb
jl
jle
ret
sarb
sub
cltd
sarl
js
lret
xchg
pop
xlat
sub
push
mov
mov
jb
cmp
dec
negb
push
dec
popf
push
mov
adc
call
inc
inc
push
xchg
add
or
mov
sbb
push
cmp
lahf
and
rol
mov
mov
inc
or
inc
ror
or
add
ss
or
fadd
in
dec
cmp
add
mov
jp
add
jno
lret
jne
mov
lcall
ds
sbb
mov
scas
sbb
xchg
stos
dec
xchg
js
lods
and
adc
jp
daa
scas
out
daa
ljmp
or
cltd
iret
mov
lods
push
pop
ficoms
sub
fiadds
adc
pusha
push
pop
jg
out
enter
stos
adc
push
in
scas
mov
out
fdivrs
xchg
insl
mov
mov
lcall
inc
mov
stos
dec
and
out
out
mov
sub
cmpsl
scas
sub
add
das
out
popa
in
dec
mov
bound
mov
xchg
outsl
cld
inc
jg
loop
mov
iret
sbb
and
add
mov
fisttps
mov
mov
push
out
jl
insl
xchg
jbe
mov
xor
cld
or
lods
rclb
adc
or
stc
fisubrs
das
dec
imul
sahf
inc
adc
mov
scas
gs
mov
ljmp
mov
rcl
mov
push
push
or
nop
stos
lahf
pop
dec
pop
sbbb
add
inc
cmp
or
subb
sarb
or
push
jmp
aaa
fdivs
mov
out
ret
mov
cmove
lret
in
sbb
xchg
sub
hlt
or
mov
mov
movsl
xlat
and
xchg
dec
ds
shll
lds
and
pusha
lcall
out
test
sbb
push
and
pop
dec
pusha
sub
insb
mov
out
stc
push
stos
or
out
pop
push
adc
test
xchg
cmp
subl
inc
aad
dec
sbb
out
sbb
popf
ja
and
frstor
repz
jmp
in
adc
and
push
push
dec
stos
jge
sbb
std
push
ret
addr16
jbe
jl
mov
mov
sbb
enter
dec
fidivs
outsb
or
push
andl
jle
xchg
cmpsl
andb
dec
ret
xlat
notl
inc
fstps
ds
lahf
cwtl
jmp
sahf
std
push
jno
bound
fsubs
push
iret
cmpsb
jl
or
push
push
in
add
or
testl
in
repnz
test
ret
pop
xchg
adc
dec
or
clc
and
push
fimull
addr16
test
icebp
hlt
push
mov
or
std
js
adcl
xacquire
mov
xor
aam
outsb
push
fidivs
xor
jp
xor
and
fisttpll
dec
loopne
dec
mov
mov
ja
push
aad
xor
imulb
mov
aas
mov
and
push
in
je
jmp
sub
in
adc
insb
sti
fldcw
in
jnp
jo
popf
ret
pop
js
push
and
sti
or
sahf
push
std
fiaddl
mov
mov
add
roll
sbb
pop
pop
lea
in
mov
pop
push
push
lcall
inc
sub
sbb
mov
aad
shll
cmp
sbb
or
mov
jmp
adc
inc
dec
inc
jb
nop
push
popf
mov
adc
scas
and
imul
mov
adc
fs
adc
mov
cmpl
scas
in
adc
dec
popf
outsl
dec
lock
daa
and
cmp
testb
lret
or
dec
pop
pop
roll
inc
stc
adc
mov
pop
shrb
inc
or
pop
pusha
push
imul
mov
push
scas
ljmp
mov
test
add
insl
dec
in
dec
push
push
fwait
adc
mov
push
lea
into
inc
cmp
into
jecxz
pop
mov
lahf
adc
fmull
pushf
push
dec
test
xchg
push
pop
test
repz
jge
add
leave
rolb
mov
roll
ret
jbe
cld
cs
mov
out
jae
sub
movsl
pop
push
test
push
cli
add
cld
cld
leave
xor
addl
je
xchg
inc
adc
fisttpll
test
shlb
lds
testl
xor
and
xchg
xchg
and
mov
ret
and
lea
pop
pop
imul
loopne
cmp
std
das
pop
cmp
cmp
lock
subb
xchg
mov
sbb
or
add
jle
jp
xchg
or
cmp
dec
pop
imul
lea
push
pop
addr16
sti
movsb
dec
bound
imul
lret
loop
filds
int
nop
out
fcmovnb
out
add
xlat
push
xlat
in
nop
push
pushl
into
cmp
imul
pop
jmp
mov
cmp
or
or
and
imul
mov
int
aaa
in
jecxz
mov
stc
bound
imul
dec
iret
xorl
add
pusha
pop
int3
sub
int3
jne
xchg
mov
repnz
mov
sbb
mov
xchg
imul
xchg
ficompl
jns
loopne
and
sbb
fisubl
pop
mov
addr16
js
aaa
and
lock
sub
mov
cmp
mov
and
fistl
jp
pop
and
adc
cmpsb
je
dec
xorb
sub
push
adcb
cmp
adc
leave
add
movsb
ljmp
mov
or
ds
sub
mov
and
and
adc
imul
push
lock
pop
mov
cmp
add
out
inc
pop
sub
lahf
mov
ds
stos
sti
dec
je
xchg
jnp
sti
cli
clc
fidivrs
sti
rep
adc
and
push
fdivrl
and
sub
int
je
dec
cmp
mov
mov
inc
aas
sahf
fmull
add
adc
dec
notl
dec
xchg
scas
fsubr
jecxz
cmpsl
push
cmp
mov
sbb
icebp
jnp
leave
cmp
push
xor
jl
add
out
push
pop
push
imul
cmpsl
sbb
std
dec
xchg
mov
and
push
jne
xchg
ret
shrb
repz
nop
xor
inc
jno
into
add
aam
aas
lods
stc
pop
and
imul
jb
xchg
js
fdivl
arpl
clc
jecxz
loopne
inc
mov
xchg
aad
pop
xchg
adc
cwtl
imul
inc
adc
or
cmpsl
nop
sbb
call
dec
xor
and
sbb
xor
push
sbb
ja
sub
jbe
or
add
iret
ja
adc
addr16
sahf
add
xorl
and
inc
imul
int
call
push
rol
scas
mov
int3
adc
sub
sahf
out
mov
sbb
call
aam
fiaddl
mov
adc
aas
jnp
and
cmp
mov
sub
dec
xchg
pop
xchg
dec
mov
adc
jmp
repnz
cs
mov
bound
mov
or
adc
jecxz
pop
xchg
fistpl
mov
jns
adc
sbb
or
pusha
loop
fs
out
call
adc
mull
dec
cwtl
push
or
push
decl
lahf
cwtl
dec
test
pop
add
addb
movsb
js
sub
std
pushf
mov
outsl
jl
shl
addr16
cmc
out
fidivl
cltd
sub
out
pop
mov
inc
xchg
push
ss
das
xorb
mov
aas
or
imul
and
inc
push
mov
dec
push
js
lea
je
push
scas
mov
mov
ss
adc
aas
mov
fistps
mov
mov
roll
ds
and
push
xchg
lcall
jp
or
jl
fisttpl
xchg
adc
push
and
mov
pop
imul
mov
mov
insb
jl
js
aam
lcall
cmp
mov
lock
or
adc
and
not
insl
ljmp
bound
cs
stos
aaa
neg
scas
sub
jle
xchg
movsl
imul
sub
out
mov
add
push
outsl
push
les
out
or
xchg
mov
push
into
push
lock
inc
xchg
int3
movsb
inc
std
fs
push
and
sbb
pop
cli
jecxz
mov
push
repz
adc
sbb
push
nop
pop
jecxz
adc
adc
mov
sub
adc
jne
dec
iret
and
sti
cmp
cmp
jnp
ja
std
adc
push
cmp
je
nop
sub
pop
dec
inc
pushf
sub
push
cwtl
add
stos
jo
push
js
mov
or
cmp
fucompp
jae
andl
cmp
test
ja
push
cmp
test
into
sbb
cmp
inc
pusha
push
outsl
aas
test
out
mov
xchg
rclb
xor
jg
ss
fucomp
cmp
leave
adc
xchg
add
sbb
cmp
loope
mov
push
add
and
addr16
stos
jmp
ret
js
not
xchg
pop
repz
push
aam
and
or
clc
xchg
cmc
in
mov
imull
push
fsubr
in
adc
es
dec
xor
insb
shrb
sti
sbbb
pop
push
stc
inc
dec
roll
data16
push
mov
push
iret
add
mov
cmc
pop
pushf
mov
mov
mov
mov
xchg
mov
je
fisubl
push
js
adc
cmp
add
dec
adc
test
push
xchg
daa
imul
sub
cld
jmpw
and
lods
mov
loopne
mov
inc
insb
sbb
push
mov
sub
jbe
add
mov
cli
mov
cmp
cmp
cwtl
add
adc
out
mov
aaa
xor
leave
js
sti
jae
lds
jnp
inc
pop
fiaddl
out
rcrl
jge
shll
push
dec
lea
roll
nop
fistps
mov
adc
jno
stc
ret
lret
jg
jno
enter
imul
rolb
movsb
push
mov
pop
push
cli
mov
push
dec
jmp
gs
aaa
or
sarb
jb
mov
sub
pusha
in
push
fisubl
push
bound
cmp
jnp
int3
mov
jb
push
pop
pop
test
xorl
inc
jmp
inc
or
dec
mov
jnp
aad
mov
inc
jnp
das
push
gs
dec
sbb
mov
sbb
xchg
and
ficoml
fbld
xchg
mov
leave
lcall
arpl
mov
cltd
incb
sbb
lcall
jle
jecxz
adc
fmuls
ja
test
fprem1
or
in
cld
lock
pop
inc
add
dec
xchg
adc
adc
jp
and
add
push
cli
push
xor
adc
fcmove
subl
pop
cli
mov
and
push
push
add
loope
cli
cmp
scas
mov
jmp
cli
loopne
aad
add
xchg
lock
sub
outsb
pop
insb
fnsave
cmp
dec
adc
pushf
pop
stc
xchg
mov
mov
sarl
push
push
pop
push
bound
stc
adc
push
and
pushf
xchg
or
dec
mov
repnz
and
jecxz
add
sbb
sbb
in
std
mov
mov
aaa
push
xlat
fmuls
daa
push
sbb
pop
stos
push
lret
mov
sbb
cmc
es
lret
sbb
or
fidivrs
jno
je
push
sahf
sti
adc
ljmp
mov
xor
or
fnstcw
ds
dec
push
out
sub
lock
test
scas
add
dec
cld
jle
push
adc
fcompl
and
stos
jbe
mov
push
mov
sbb
xchg
pop
inc
stc
outsb
jmp
inc
clc
mov
xor
aas
push
pop
mov
xor
jne
inc
xlat
es
push
ret
or
xchg
push
dec
movsl
xor
ds
add
sub
push
add
and
je
pop
inc
sub
test
sarb
inc
and
dec
fcmove
xchg
mov
pop
mov
loopne
cmp
icebp
jle
adc
push
sbb
out
in
sbb
dec
or
popf
cmc
sbb
push
adc
sub
lock
es
in
sub
sti
int
jecxz
dec
hlt
fcmovnb
fsubr
loope
lcall
xchg
fmull
xchg
loopne
clc
jae
lcall
jo
fistpll
jge
jno
xor
les
mov
push
es
dec
or
or
std
mov
cmp
test
dec
in
fdivrl
lock
push
iret
aad
mov
stc
lock
sub
inc
rclb
adc
mov
push
sub
xchg
shl
add
adc
aaa
dec
sub
cltd
push
sbbl
add
mov
cmp
xchg
cmp
add
in
jo
push
test
lahf
idivl
mov
pop
xchg
mov
aam
jno
inc
scas
cmp
loop
or
cmp
push
insl
cli
rorb
dec
test
insl
movl
pop
rolb
mov
sbb
sub
adc
push
adc
mov
dec
jo
cmpsb
ljmp
sti
adc
mov
cmp
push
pop
jb
xor
xchg
pop
cli
xchg
fmull
addl
pop
es
add
xchg
movsl
aas
test
xor
adc
ss
mov
mov
add
insb
xchg
fcomps
sub
call
ljmp
repnz
jp
mov
es
je
adc
jg
mov
decl
shl
das
stos
decl
push
add
subb
popa
stos
loop
jae
cld
in
je
sarl
addb
ret
jae
fists
mov
decl
pop
scas
sub
addl
in
push
sub
sbb
dec
pop
lds
cmp
in
inc
push
xchg
sub
xor
shll
inc
and
xchg
jae
xor
scas
aas
repnz
lret
mov
int
insb
cmp
and
jge
cs
dec
pop
mov
mov
mov
call
mov
cmp
pop
movsl
cmp
add
xor
or
adc
imul
ss
loop
fmull
pop
insl
data16
imul
test
mov
or
mov
pop
mov
xchg
adc
test
jne
add
push
mov
int
stc
jl
sub
or
push
aaa
pop
pop
jp
insb
pop
sub
mov
addr16
or
sub
xor
test
psubd
adc
orl
mov
push
add
outsl
pop
push
add
aas
outsl
les
and
stos
pushf
push
pop
fmull
adcb
or
aam
or
sbb
sbb
jge
add
xchg
cmp
addb
sbb
sbb
adc
adc
cmp
ds
movb
sub
xor
mov
jg
mov
cmpsb
sbb
movsl
fisubl
pop
and
bt
popf
pusha
xor
ret
xchg
pushf
adc
out
or
cmpsl
xor
pop
or
cmc
cmp
push
ds
aad
jns
mov
movsl
push
js
pop
fucomi
nop
push
jbe
imul
and
shrb
mov
dec
push
mov
push
icebp
push
out
das
aas
dec
mov
xor
mov
push
lahf
push
and
mov
inc
mov
rclb
data16
mov
movsl
mov
ss
das
lret
cmp
aad
in
test
or
in
push
rcr
add
mov
cwtl
stc
mov
jb
decl
pop
pop
ja
jns
lea
shll
ret
jns
mov
clc
cmp
push
jne
movsb
mov
jl
fs
push
push
jge
xor
lret
dec
mov
mov
je
jne
outsl
pop
lods
push
pusha
cmc
push
sti
movsl
pop
pop
cmpsb
bound
inc
cmp
es
cmpsl
stos
jnp
mov
or
inc
pushf
in
mov
ds
mov
dec
dec
les
mov
jle
or
cs
and
ljmp
mov
mov
sub
pop
shrl
push
adc
nop
cli
dec
movsl
mov
push
outsb
and
gs
dec
sbb
mov
insb
pop
orl
mov
xchg
jne
push
mov
lods
pusha
mov
cmc
xor
inc
push
aam
jmp
xchg
das
mov
mov
mov
push
sub
andb
jmp
push
roll
out
scas
lret
sbb
out
sub
cwtl
ja
and
inc
push
into
loope
inc
cmpsb
cld
jp
adc
aas
pop
mov
loope
dec
cld
into
cmp
dec
iret
call
or
push
or
adc
cmp
add
and
and
pop
int3
mov
dec
jbe
mov
mov
test
pop
pop
ret
jle
mov
cltd
test
mov
mov
pop
jle
lret
jmp
xchg
push
push
out
cmp
and
jne
jno
xor
insb
movsl
mov
stc
stos
cmp
imul
sar
sbb
test
lock
rclb
pop
push
rcrb
push
in
dec
fidivl
repnz
jl
popf
fiadds
inc
cmp
sbb
xlat
add
jns
inc
fistpl
sbb
faddl
mov
jnp
pop
and
idiv
cmc
lret
and
adc
daa
cs
test
les
jp
js
rol
fistpll
xchg
das
fdivrp
pushf
jle
and
xor
jno
roll
cwtl
aam
fs
dec
sti
adc
movsb
imul
inc
scas
add
clc
dec
inc
rcr
imul
push
adc
and
stos
lock
push
es
or
cltd
jl
mov
inc
push
popf
cmp
call
scas
mov
lods
or
ss
pop
pusha
jp
sti
cwtl
mov
repz
dec
fcompl
dec
add
pop
xor
lds
push
sub
cmp
ret
pop
push
or
xlat
rolb
inc
adc
push
ret
xchg
sbb
pop
ds
int3
aas
lcall
jo
push
iret
mov
ret
popf
jge
movsl
mov
sarb
push
stos
mov
cmpsb
xchg
pop
int
pusha
cmpsl
lcall
enter
test
pop
xchg
or
cs
test
andb
in
loopne
inc
xchg
loopne
push
icebp
orps
or
imul
in
add
mov
mov
outsb
insb
or
mov
push
jmp
test
inc
pusha
mov
add
neg
or
repz
jno
popa
jo
loope
xchg
xchg
imul
add
pusha
lea
fwait
shrl
aad
leave
shll
sbb
shll
das
loopne
xlat
test
lods
dec
adc
lds
pop
pushf
jb
movsl
frstor
fisttpl
adc
fcmovnu
inc
pop
mov
xor
dec
jecxz
pop
jae
mov
cltd
sarb
int
and
sahf
scas
xor
hlt
mov
arpl
ret
loop
in
sub
pop
jbe
push
dec
into
cmp
dec
xchg
xor
pusha
ret
dec
jmp
mov
movsl
std
xchg
fst
xchg
sub
daa
mov
xchg
cmc
mov
inc
pop
inc
loopne
cmpsl
push
xor
jbe
xor
sub
mov
mov
sub
push
jbe
out
sbb
sub
mov
aas
jns
and
aad
cmp
mov
push
rcll
mov
mov
push
les
push
in
mov
fstpt
push
push
repnz
pop
fistl
popa
sub
add
lods
inc
into
ja
add
leave
es
mov
push
push
cld
mov
insb
xchg
pop
pop
adc
or
jg
pushf
in
icebp
lea
fs
jo
pusha
mov
ret
enter
mov
stos
xor
mov
leave
sub
sahf
icebp
leave
mov
std
mov
mov
fldt
mov
push
add
adc
pop
push
inc
mov
ja
stos
or
sbb
mov
decb
mov
xor
adc
les
jmp
sub
xchg
bound
inc
stos
ret
inc
popf
mov
jmp
push
loope
cmc
or
mov
out
mov
movsb
std
ret
cs
or
push
jne
lahf
sub
ret
scas
mov
cs
es
gs
lcall
mov
or
imul
mov
call
cmp
das
mov
xchg
in
popa
sti
add
shr
mov
dec
out
jge
shlb
push
out
jne
sbbl
dec
fcmovu
mov
fisttpll
pop
fcompp
pop
mov
imul
loop
arpl
sbb
imul
fstp
dec
shr
or
pop
ljmp
mov
mov
sub
arpl
push
into
and
cmp
int3
and
pop
adc
insl
or
inc
lock
fcmovne
out
push
insl
fidivrs
jns
in
mov
lret
je
std
jmp
xchg
xor
inc
mov
xor
mov
sahf
call
and
pop
lahf
fs
pop
adc
cmpsl
das
das
ja
adc
test
push
inc
jle
lahf
loopne
sbb
leave
nop
add
mov
xchg
push
fidivs
repz
mov
outsb
cs
ljmp
pusha
mov
push
inc
imul
dec
mov
pushf
daa
aas
clc
cwtl
testl
inc
or
lods
lahf
nop
inc
int
pop
bound
sahf
lcall
xor
icebp
add
fcoml
popf
imul
mov
dec
and
cmp
jg
lcall
mov
jo
repnz
test
cmp
cltd
sbb
xchg
dec
scas
negl
icebp
or
gs
sbb
pop
jae
mov
repnz
jae
bound
adc
scas
ja
je
pop
dec
jb
xor
aaa
pop
xchg
ss
jle
and
pop
add
push
pop
stos
mov
insb
xchg
das
dec
ss
arpl
xor
test
in
in
and
rcrl
cmp
fidivl
cltd
popf
clc
nop
mov
push
lods
ja
pop
mov
mov
fidivs
lock
jns
mov
jl
scas
push
nop
inc
pop
fcmovbe
ret
push
adc
ja
push
and
fistpll
mov
lods
or
pushf
xor
hlt
pop
pop
add
ret
mov
repz
dec
push
push
lret
jmp
jno
mov
mov
mov
test
xor
dec
movsb
icebp
sub
inc
inc
and
or
inc
test
clc
xchg
das
adcl
lock
xorl
pop
xchg
testl
mov
enter
iret
je
es
cld
xor
js
lock
rcrl
fmull
int3
fistpll
scas
xchg
pushf
push
dec
stc
es
xchg
adc
pop
stc
dec
scas
hlt
out
ret
cs
shlb
and
and
cmp
imul
or
inc
dec
pop
sbb
clc
sbb
shl
je
ljmp
das
negb
in
sbb
mov
mov
popf
mov
xchg
call
fcmovu
je
jb
or
lds
movsb
mov
or
cltd
aam
test
mov
fsubl
mov
mov
xor
xor
insl
jae
repnz
inc
pop
mov
test
pop
in
sbb
pop
in
push
std
stc
in
jp
mov
cli
mov
xchg
das
and
jbe
dec
mov
and
nop
mov
cmp
jno
cmpsl
jns
dec
test
pop
push
push
mov
outsl
and
popa
addr16
jl
inc
addr16
sub
pop
inc
xchg
dec
cmp
push
pop
cs
insl
add
repnz
sbb
std
push
lret
xchg
loop
das
fwait
xchg
jae
mov
movsl
xor
out
cld
dec
stos
sbb
push
in
imul
insb
test
cltd
add
mov
adc
ret
push
out
and
aaa
add
int
insl
leave
stc
push
popf
sbbb
sub
dec
pusha
nop
and
push
pop
jbe
cmc
ss
shll
or
mov
out
bound
out
fcoms
inc
cmp
mov
test
hlt
es
adcl
push
adc
inc
inc
xor
and
adc
movsl
divl
ds
sub
idivl
outsb
sub
sub
pop
cltd
loop
or
jge
imul
or
cld
mov
inc
fadds
adc
sub
jno
or
negl
dec
sbb
xchg
iret
shrb
dec
add
inc
jnp
js
jno
ds
and
mov
insb
or
clc
into
into
inc
lcall
xor
sub
xor
sbb
gs
popl
add
into
sbb
shll
xor
arpl
testl
jne
add
jbe
push
mov
test
push
pop
nop
loop
mov
ret
jno
inc
xor
push
or
xchg
pop
push
hlt
in
pop
push
inc
lods
addr16
cmp
call
sbb
les
es
mov
add
jbe
fstps
inc
mov
lahf
add
aas
movsb
in
mov
lods
cmpl
sbb
sub
stos
mov
mov
push
dec
cld
jno
sub
hlt
stos
aad
shrl
icebp
sbb
push
das
insl
cmp
and
stc
movsl
xor
outsl
mov
push
push
dec
pop
sub
adc
ret
test
push
cmp
mov
cmpsb
aas
cltd
aad
fsubs
sbb
mov
enter
pop
ljmp
ds
inc
in
xor
sahf
or
xor
mov
in
fcom
jo
aam
and
adc
add
push
jno
dec
int3
icebp
dec
xor
add
sarb
cmpsb
cld
aaa
dec
mov
inc
mov
dec
pop
imul
outsb
jl
xor
inc
addr16
adc
xchg
clc
dec
aam
push
movsb
jae
or
loop
frstor
push
loope
lret
inc
js
and
in
mov
mov
pop
add
fnstsw
mov
mov
pop
outsb
push
outsl
or
adc
mov
aam
cmpsb
cld
jne
sahf
daa
push
sbb
iret
lret
adc
or
adc
iret
rorb
stos
jg
jp
pop
call
mov
lcall
push
or
cmp
or
xor
inc
xchg
das
pop
mov
cmp
cs
jne
dec
clc
inc
sarb
ret
aas
in
outsb
inc
add
jbe
ret
push
fcoms
cmp
lahf
jno,pn
scas
jnp
or
sahf
daa
jnp
popf
test
sub
shr
inc
add
mov
lea
jle
jns
or
jb
call
push
icebp
mov
rorl
int
fnstsw
movsl
jg
xacquire
in
push
inc
mov
mov
sti
and
jne
pop
mov
push
jp
push
push
xchg
jo
sbb
xor
movb
gs
pop
fiadds
pop
ret
mov
pop
js
out
jge
jle
mov
xor
test
scas
int
pop
insl
daa
fs
push
add
in
roll
adc
scas
pop
add
xchg
enter
popf
sub
push
stc
mov
mov
rolb
sbb
mov
mov
gs
push
sub
jge
loop
sbb
aaa
cltd
lret
and
pop
adc
ds
add
mov
mov
add
pushf
js
mov
out
ss
mov
out
cmpsl
mov
shl
mov
test
jo
and
push
and
andl
inc
cmp
icebp
pop
rcll
xor
adc
jo
and
jg
sarl
lea
pop
mov
sbb
divl
push
stos
dec
xor
add
push
negb
mov
dec
or
fdivrs
loop
cmp
add
push
pop
mov
mov
jmp
dec
outsb
shlb
lahf
psubb
jge
and
pop
cmp
xchg
and
sbb
inc
add
leave
mov
adc
or
xor
push
xchg
adc
int
mov
inc
mov
fisttpl
sbb
cmp
push
test
out
cmp
dec
int3
in
test
dec
mov
lods
sub
jae
xchg
push
mov
mov
push
xchg
and
mov
and
add
mov
cwtl
mov
push
mov
insl
dec
sub
ficoms
lret
adc
xchg
xor
pop
popf
fmul
jo
stos
xor
lds
cmpsl
lods
jp
inc
cld
and
or
push
xor
cmp
and
scas
cmp
jns
push
xchg
bound
dec
jl
mov
add
in
mov
adc
insb
dec
ss
shll
scas
lahf
cmpl
pop
mov
ret
xchg
lret
pop
bound
push
mov
mov
xchg
jmp
std
in
out
pushf
mov
faddp
xlat
lods
mov
cwtl
loope
loop
lahf
inc
clc
lahf
lods
cmc
movb
or
push
shufps
test
adcb
std
loop
sahf
bound
nop
sbb
iret
ror
nopl
out
les
lock
addb
in
movl
sub
jl
dec
cmp
inc
cmp
insb
push
sbb
adc
insl
aam
inc
call
jns
imul
jle
jle
cmc
cmpsl
and
dec
add
lock
sti
xor
mov
dec
loope
repnz
lods
sti
stc
xor
sub
mov
jmp
push
inc
stos
adc
lods
movsb
mov
pop
and
push
cmp
xor
jae
adc
arpl
mov
inc
sub
or
xor
or
mov
sub
adc
hlt
xor
fmul
push
push
push
jo
int
movsb
out
fisubs
jno
sti
mov
fsubs
test
pop
push
js
jo
xchg
or
fsubp
fidivrs
test
mov
filds
stc
xchg
fimull
hlt
mov
mov
cmp
fucomp
push
pushw
adc
mov
and
jo
or
mov
test
ud2
cmp
dec
dec
inc
imul
lock
cmc
loopne
push
sbb
andb
push
sbb
push
incl
imul
mov
adcl
mov
inc
push
jl
cmp
add
loop
cwtl
jmp
sbb
xorl
mov
lret
insl
xchg
cmp
xor
stos
stc
std
and
push
in
div
sbb
inc
ljmp
icebp
xlat
pop
pop
out
inc
sbb
clc
mov
mov
cmp
lahf
or
and
rol
cli
push
stc
repnz
lock
jns
lret
jge
aad
mov
jo
imul
std
lods
add
ds
dec
cwtl
fstps
sbb
xchg
push
jne
cmp
pushf
sub
rorb
add
xlat
lods
hlt
cmc
mov
ss
and
push
fwait
dec
movsb
push
xchg
imul
addr16
in
xchg
cmp
add
pusha
loope
mov
lds
sahf
xchg
mov
push
sbb
lret
dec
loop
test
or
mov
bt
mov
inc
push
inc
inc
sub
jg
xor
imull
and
popf
mov
push
mov
cmp
leave
mov
iret
pop
scas
jnp
add
dec
ljmp
pop
xor
push
rcrb
std
jns
dec
aaa
fs
or
popa
jp
hlt
sub
mov
addr16
fbstp
out
decb
out
push
pop
xchg
and
pop
xor
and
xchg
mov
xlat
cltd
push
testb
push
ljmp
xor
int3
sbbb
pop
add
add
in
hlt
sub
push
popa
mov
pusha
lock
fidivl
popa
xchg
fdivl
pop
cmc
or
cltd
xchg
and
notl
sahf
jne
mov
in
insb
dec
lods
out
test
push
push
cmc
in
int3
fnsave
cmp
push
pop
aaa
jmp
shl
inc
jb
xor
dec
dec
sub
dec
cs
sbb
fucomi
adc
mov
fmulp
mov
cmp
lds
xchg
fld
mov
mov
and
sarb
xor
test
dec
enter
pop
dec
jmp
int
rcl
ss
xchg
movsb
mov
ljmp
dec
lret
jns
push
scas
fcoml
cmp
fs
push
je
ficompl
pop
dec
dec
insb
sbb
inc
jnp
aaa
push
mov
test
jl
jmp
loop
cmc
sahf
sbb
dec
or
add
jb
lods
push
aam
clc
jg
test
fndisi(8087
aaa
jns
lahf
cmpsb
js
pop
addb
in
and
ss
mov
in
dec
pop
and
insl
jge
push
xchg
bound
sub
and
ja
push
inc
push
arpl
sbb
test
fistpl
push
sub
orl
test
ljmp
lret
xor
stos
addr16
hlt
aad
pusha
jne
cmpsl
loope
mov
pop
pop
push
ror
lods
push
in
inc
dec
movsl
adc
add
fwait
and
in
repnz
push
cmp
iretw
and
test
leave
test
test
jns
mov
daa
sbb
dec
adc
daa
cld
sub
xorl
pop
and
push
aad
fiaddl
addb
pop
mov
test
jb
mov
mov
adc
mov
pushf
xor
dec
adc
pop
lock
sti
pop
jno
jns
jp
mov
push
outsl
pop
out
cld
adc
adc
cmp
cli
int
sub
add
or
adc
leave
mov
xor
xchg
inc
mov
mov
xchg
jecxz
mov
mov
push
push
test
xor
push
hlt
cli
xor
mov
cli
xchg
inc
jmp
cmpsb
test
in
pop
push
mov
adc
dec
add
outsb
mov
lahf
imul
or
aas
push
clc
xor
scas
jp
stc
mov
call
mov
in
out
lds
add
and
mov
clc
mov
scas
test
sbb
ret
je
scas
test
stos
mov
in
aas
sub
daa
push
mov
mov
add
dec
xchg
push
or
xor
fcomps
dec
push
push
fdivrs
dec
and
lds
dec
adc
aam
adc
cmpsl
pop
ret
push
cmp
cmp
das
shr
rorl
xchg
lea
bound
icebp
lahf
inc
jb
jne
int3
cwtl
insb
scas
pop
pop
cmp
xchg
fistl
lret
xor
movsl
fwait
stc
out
stos
popa
nop
in
inc
hlt
rclb
push
cmp
jae
cmpsb
jbe
sbbl
adc
inc
rclb
call
push
jo
cmp
inc
out
adcb
xchg
xchg
test
fldl
into
adc
lods
pop
icebp
push
jecxz
inc
imul
rolb
add
mov
fcmove
or
adc
cwtl
adcb
orb
out
aad
jmp
adc
mov
jns
mov
lods
in
pushf
lea
push
xchg
mov
dec
jl
mov
sbb
cmp
lcall
jbe
mov
ret
jns
inc
sbbl
daa
addr16
pop
out
lock
and
hlt
jmp
imul
inc
sub
iret
pop
inc
mov
sub
ret
pop
sarl
popa
jnp
cmp
pop
cli
add
test
cmp
or
push
rcrl
into
imul
dec
movsb
in
rolb
call
clc
mov
ja
mov
mov
in
jno
aaa
adc
shl
mov
adc
lock
test
sahf
push
inc
xor
fsubrl
jb
das
shll
pusha
push
xor
mov
lahf
dec
test
sbbl
ss
dec
iret
sahf
aad
cmp
insb
shlb
sti
out
push
xchg
mov
sahf
push
gs
int
xor
fcmovnb
sahf
ret
lcall
test
xchg
sub
mov
leave
cwtl
xchg
dec
or
frstor
test
orb
shll
dec
and
xor
daa
or
neg
pop
xchg
mov
fidivrl
push
or
das
daa
push
clc
jp
mov
jge
clc
mov
push
clc
jecxz
fdivrl
add
stos
adc
sub
sub
fmuls
das
rorb
jae
and
test
mov
outsl
adc
decb
sbb
mov
xchg
loope
aas
test
insl
xor
stc
cmpsb
xor
mov
xlat
pop
test
mov
aaa
stc
adc
sub
xchg
stos
add
jnp
adc
sbb
lcall
push
ds
xchg
mov
cmc
scas
sbbb
push
xchg
fdivrl
scas
mov
lret
aaa
xlat
test
and
pop
stos
jbe
imul
icebp
inc
dec
push
mov
jbe
push
dec
test
sahf
or
js
dec
int3
inc
int3
and
std
test
mov
and
cld
addr16
push
nop
into
int3
subl
andb
pop
enter
ret
sub
pop
dec
cmpsb
jle
mov
inc
cmp
sbb
sub
stc
std
dec
pusha
mov
pop
or
andb
xor
dec
cmp
out
scas
push
popa
out
mov
dec
fistl
sub
rorb
test
and
sub
addb
and
nop
sbb
cmp
movsb
mov
ret
loope
lret
into
repz
adcl
lock
ret
loope
pusha
push
decb
adc
push
cmc
dec
push
xor
push
mov
or
ficompl
stos
mov
jnp
push
ljmp
cmp
add
sub
popa
xchg
das
test
sub
jle
xchg
jmp
dec
cs
testl
xchg
xchg
lods
xchg
mov
inc
pop
push
and
jl
mov
in
pop
test
push
cmp
pop
mov
jnp
mov
push
in
mov
decl
roll
and
lcall
adc
mov
loop
outsl
mov
aad
cmp
lock
jno
sub
fiadds
inc
push
pop
jg
lcall
repnz
icebp
adc
jns
pop
add
inc
mov
cs
dec
mov
bound
insb
test
fs
adc
ss
push
stos
ljmp
or
pop
xchg
inc
pop
out
scas
xchg
cli
cmpsb
jno
mov
pop
sahf
rcl
enter
cltd
mov
enter
sarb
rol
in
jmp
inc
es
sbb
xchg
cmp
pop
fstl
in
aam
or
jge
roll
das
mov
fnstsw
dec
nop
sbb
in
mov
loopne
mov
jmp
fnstsw
sbb
call
popw
push
pushf
xor
test
dec
sbb
xor
sahf
lock
mov
adc
add
or
loopne
shrb
xor
push
xchg
jno
mov
mov
mov
imul
adc
std
push
jnp
sti
mov
mov
in
adc
scas
jmp
push
fldl
sub
addr16
jp
call
sbb
sbb
xor
ret
mov
jne
cmp
cld
in
push
cld
dec
lods
movsl
imul
sbb
call
ret
sbb
push
and
push
insb
cmp
xor
fisubl
in
mov
scas
fwait
in
popf
jo
and
push
ficoml
and
lcall
sbb
dec
add
leave
xchg
test
push
jae
cmp
movsb
jmp
mov
std
scas
sub
xchg
int3
repnz
sbb
iret
lods
loopne
sbbl
fmull
push
int3
and
repz
jo
xor
cmp
push
out
pop
mov
jmp
ja
adc
in
push
jle
xor
cmp
divb
cmp
test
jmp
nop
lods
les
xchg
push
and
push
loope
aam
movsb
and
jbe
icebp
jecxz
bound
xorb
xor
xlat
in
push
dec
insl
jecxz
mov
jle
nop
jb
xchg
mulb
imul
dec
xorb
xchg
pusha
pop
cld
aam
inc
jno
push
inc
cld
mov
push
movsb
das
rol
sub
hlt
fwait
adc
inc
sub
add
add
inc
inc
dec
mov
je
mov
pop
loopne
cmp
mov
in
out
or
push
stos
test
fs
jb
push
fcomps
popa
lret
jbe
pop
and
addl
dec
sub
jno
push
out
ret
mov
mov
push
push
jnp
jge
pop
jg
std
sub
and
popf
fmull
xchg
cmp
lret
cmpsl
dec
fwait
xchg
jo
subb
lds
test
cmp
lret
mov
push
jnp
cmp
or
push
into
fwait
scas
arpl
cli
divl
adcb
lret
into
push
jnp
cmpsl
xchg
ss
cmp
pusha
aam
fiaddl
loope
inc
push
fisttps
adc
dec
aam
lea
cmpsb
scas
push
sub
aam
push
push
adc
cld
roll
out
mov
int
lods
sub
pop
inc
sarl
push
mov
andb
cmpsl
stos
cmova
idivb
add
lret
insb
push
inc
loopne,pt
in
fcompl
xor
adc
adc
add
pop
xorps
jmp
pop
inc
xor
stos
jne
adc
xchg
cmp
cltd
divl
mov
bnd
jne
imul
cltd
mov
and
sbb
popa
push
in
insb
or
pop
mov
jns
sarl
mov
cmpb
dec
hlt
pusha
divb
inc
and
mov
add
incl
and
push
lods
imul
loope
and
lods
movsl
lret
push
mov
std
lret
notb
xchg
popf
mov
out
fcmove
mov
sub
adc
es
clc
xchg
xor
dec
xchg
xor
pop
xor
jle
int
inc
mov
cmp
push
mov
jns
sub
sar
lcall
cmc
or
mov
xor
pop
push
shl
insb
lods
mov
fs
roll
and
in
insl
cmp
out
shlb
add
mov
loop
pop
loopne
pusha
test
lret
cmp
loopne
dec
push
mov
es
pop
shrl
push
push
add
pusha
adc
lds
les
or
dec
cmova
shll
gs
mov
sub
cs
aaa
or
xchg
cmpsl
sti
xor
inc
lret
cmp
jns
sbb
roll
sub
xchg
mov
pop
cld
push
mov
pop
fcoml
in
xor
dec
ss
popa
adc
rolb
inc
jnp
lcall
jb
and
and
dec
add
out
sbb
adc
enter
repz
xchg
ret
outsb
loop
sub
js
cmp
or
dec
ja
adc
xchg
test
test
fistpll
sub
std
mov
shl
call
les
iret
sub
adc
test
ret
xor
push
xchg
scas
adc
cmp
fstp
jnp
sbb
xor
or
shlb
lds
std
outsb
add
xor
fsts
jno
in
stos
fnstenv
or
mov
push
push
out
xorl
push
push
ljmp
dec
aam
fnstsw
jecxz
mov
push
and
or
push
xchg
adc
js
sbb
and
jnp
aaa
sub
jp
ret
lods
or
dec
mov
xchg
das
push
jae
cs
loop
das
push
fldcw
jp
arpl
leave
push
xchg
xchg
xchg
cltd
dec
subb
or
sub
in
xchg
mov
mov
add
mov
jp
aad
push
cli
push
loop,pn
aam
cmp
inc
outsb
lcall
addr16
lcall
out
enter
inc
xchg
pop
decl
add
stos
mov
loopne
cmp
lea
or
xchg
in
ds
imul
jp
jae
dec
push
out
mov
pop
adc
jne
sti
out
lcall
mov
xlat
es
imul
mov
mov
push
push
test
mov
loop
and
cmp
aas
adc
movsb
jo
mov
adc
ljmp
shrb
mov
in
inc
int3
push
add
dec
imull
sbb
cltd
push
bound
xor
cs
inc
adc
push
sub
push
mov
fdivrl
inc
leave
aas
sarb
mov
lahf
nop
pop
sbb
hlt
adc
cmp
push
je
mov
movsl
mov
jle
xchg
pop
jp
xchg
sarb
aas
add
je
dec
mov
dec
stos
dec
push
pop
adc
nop
test
push
mov
sbb
mov
clc
mov
inc
cmp
sub
repz
xchg
cmp
call
cmpsb
aas
insl
pusha
arpl
pop
lods
sub
jmp
xchg
xchg
cmp
movsl
fstpt
sub
mov
adc
movsl
pmulhw
jmp
push
or
pop
shr
jg
sub
xchg
pop
outsb
daa
bound
xchg
sub
aad
and
mov
outsb
insl
pop
jmp
test
mov
cs
dec
or
jbe
jbe
nop
mov
push
je
add
jnp
movsl
jae
fisubrl
daa
scas
test
add
cli
or
or
dec
jae
mov
pop
fmull
mov
xchg
push
mov
adc
lret
imul
jbe
mov
cli
mov
inc
scas
cmpsl
jg
xchg
adc
addr16
mov
sti
adc
lods
xchg
inc
fwait
xorl
xchg
pop
adc
movsb
ss
sub
test
lret
lods
and
int3
ret
dec
out
adc
jb
mov
iret
xchg
mov
adc
jg,pt
or
sbb
aas
push
or
inc
dec
xchg
push
xor
pop
push
mov
out
ds
pop
jp
pop
push
lods
inc
lret
movsl
or
add
sub
sbb
aaa
adc
ljmp
cld
fst
leave
cmpsl
sbb
mov
push
into
pop
sbb
xchg
scas
inc
pop
dec
xchg
push
scas
imul
or
testl
sbb
mov
adc
out
add
jmp
rclb
sbb
and
sub
sti
adc
lcall
sbb
xchg
aam
push
data16
lret
mov
add
sub
popf
pusha
jo
aam
insb
push
std
sbb
xchg
dec
arpl
xchg
dec
mov
jecxz
jge
mov
mov
in
in
fnstsw
sbb
pop
mov
jp
mov
notb
loop
test
push
jecxz
pop
daa
cmp
mov
add
push
lds
movb
xchg
jl
subb
cmpsl
adc
sbb
stos
or
add
daa
sbb
jmp
or
jl
mov
jmp
xor
subps
out
adc
imul
jo
mov
cmp
jbe
sub
out
test
test
push
shl
call
dec
pop
ret
adc
pop
add
push
test
push
cmp
adc
andb
dec
xor
fwait
pop
repz
in
push
aaa
sbb
subl
idivl
fs
dec
fsubr
and
and
jmp
xchg
cmp
sub
nop
or
movsb
call
dec
test
mov
lret
jno
lcall
mov
repz
repz
sbb
enter
cmc
in
icebp
stos
mov
or
gs
push
test
xchg
test
xor
dec
dec
sbb
and
xchg
jecxz
lcall
jae
mov
out
arpl
sub
mov
loope
popf
movsl
insl
clc
adc
stos
xor
mov
ret
je
test
daa
sub
nop
pop
fsubrl
mov
inc
push
adc
jnp
inc
xchg
scas
push
sbb
addl
mov
xchg
adc
dec
hlt
addl
or
jl
sub
syscall
add
mov
mov
sbb
cmp
push
cmc
xchg
mov
fstl
xchg
sbb
fs
mov
dec
or
sahf
pop
and
test
inc
mov
sbb
int
jbe
mov
fwait
or
lock
into
mov
out
add
int
scas
mov
adc
mov
xchg
jae
pusha
pop
and
xchg
cli
imul
sbb
ja
mov
cmp
mov
outsb
jecxz
sti
pop
arpl
jbe
outsl
das
xor
mov
stos
imulb
jo
lods
jno
loope
ljmp
in
add
ret
add
outsl
fcoms
sub
scas
into
and
mov
fidivrl
pop
dec
xchg
jno
gs
cmp
sti
sbb
imul
call
mov
jno
idivb
std
jl
xor
sbb
popa
in
aaa
movsl
or
sti
bound
insl
imul
lcall
sahf
popa
xchg
fsts
cwtl
dec
inc
push
add
and
add
and
fs
jns
sub
sbb
xor
mov
jno
or
les
add
push
jmp
or
mov
movsl
pop
sub
sub
jo
dec
xor
mov
push
pop
pop
cmpsb
imul
inc
pop
adc
xchg
xorl
iret
enter
dec
add
xor
dec
mov
xor
mov
scas
fstps
testb
dec
sub
enter
pop
jb
add
push
and
nop
int3
in
mov
es
lock
mov
push
pop
push
mov
leave
dec
and
nop
add
push
ss
mov
sub
imul
lds
jbe
push
mov
mov
jne
daa
mov
std
mov
pop
jecxz
inc
call
addr16
add
pusha
sbb
mov
out
mov
inc
push
pop
in
sbb
push
cwtl
mov
jecxz
pop
pop
lds
aas
lock
out
cmpsb
push
xor
sbb
ds
out
lds
stc
call
or
and
sbb
icebp
mov
sub
punpcklbw
fwait
push
inc
test
movsl
adc
pop
and
icebp
aam
fldl
sbb
xor
loop
fisttpl
imul
mov
test
mov
mov
or
daa
push
jbe
pop
enter
lods
xchg
popf
pop
sbb
adc
lds
or
clc
aas
adc
xchg
jle
int3
sti
ds
ljmp
mov
adc
dec
ret
xor
rorl
dec
xchg
into
sub
sbb
call
push
repnz
adc
sbbb
xor
in
cmpsb
enter
lds
or
mov
icebp
sub
test
mov
mov
jo
push
mov
cs
sub
scas
into
xchg
xchg
xchg
fldl
in
push
test
sub
call
pop
cmp
cmp
jmp
int3
pop
insb
or
pop
sbb
arpl
cwtl
jno
and
jno
cli
jae
test
pop
mov
enter
fdivrs
gs
hlt
mov
mov
mov
adc
test
addr16
ljmp
mov
nop
fcmovnbe
es
lea
stc
outsl
dec
icebp
das
sti
xor
xor
aam
pop
mov
inc
dec
xchg
scas
shll
jne
or
iret
xor
mov
push
loop
scas
js
jle
es
lret
xchg
inc
cmp
xor
testl
sti
loope
ffreep
enter
push
scas
loopne
repnz
mov
lret
lret
dec
sti
jge
mov
cmp
xchg
mov
mov
xor
dec
lds
dec
idivl
dec
and
jno
mov
jae
sub
movsb
cld
mov
rcrl
adc
jbe
sahf
cltd
in
out
fstps
andb
lahf
dec
and
insb
mov
js
adc
loope
cmc
cmpsb
push
sbb
popa
push
std
adc
data16
stos
flds
dec
out
inc
jge
push
jl
out
rep
test
cmp
jecxz
andl
cmpl
andl
cltd
mov
xor
sahf
dec
movsb
mov
loopne
push
jnp
stc
xor
ljmp
cmp
ficoms
mov
bound
std
lods
in
scas
mov
popf
out
sarl
push
outsb
cmpsb
push
stos
fiaddl
jne
in
and
push
or
enter
pusha
ret
stos
imul
add
jns
mov
ljmp
xlat
stc
nop
adc
dec
fs
cmp
sub
sub
pusha
out
enter
cmp
adc
mov
imul
mov
insb
jmp
in
pop
pushf
scas
pushl
test
loope
in
lea
sbb
xchg
out
jecxz
xor
lea
sub
cs
cmp
test
jns
sub
movsl
adc
les
pusha
imul
in
dec
sub
shrb
sbb
in
cmpsl
js
jns
ljmp
sub
popa
aam
cmc
les
cwtl
jo
xor
pop
push
mov
pop
dec
fiadds
test
jne
popa
test
sub
sub
mov
lods
fimuls
test
outsb
jg
dec
and
dec
mov
or
call
and
push
sbb
and
cmp
pop
or
push
stos
ffreep
cld
cltd
ja
pop
cmp
xchg
sbb
sub
jp
cmpsl
mov
enter
out
cmp
imul
in
jo
cwtl
xchg
out
dec
orb
push
sub
or
dec
or
iret
jbe
sbb
loopne
ja
pop
movsb
loop
adc
mov
dec
adc
loop
sbb
repnz
pop
cmp
movsb
popa
xchg
insb
in
adc
push
andb
add
outsl
scas
rolb
lods
lret
inc
pop
jae
xchg
push
ds
xchg
test
shrb
aam
outsb
scas
cmpsb
lods
pop
movsb
push
adc
inc
or
imul
xchg
nop
xchg
out
or
mov
xchg
lods
repz
xlat
adc
xor
pop
cmp
xchg
mov
cmpsl
je
adc
mov
ret
lcall
mov
adc
pop
and
cld
popf
xor
lea
pop
aam
jns
mov
sub
mov
shll
inc
fdivl
fsub
mov
sarb
stos
pop
xchg
cmpl
push
jae
cmpsb
loope
call
push
inc
lock
mov
adc
je
jmp
and
or
push
data16
lds
and
jp
cli
ss
add
fdecstp
imul
imull
or
fisubs
insl
push
lret
xchg
push
push
push
aaa
sbbl
mov
lea
inc
faddl
pop
popl
sub
jp
out
out
outsl
mov
sbb
mov
mov
imul
mov
es
pop
movsb
repnz
add
lret
dec
jae
and
ficomps
rorb
and
pushf
test
lock
jecxz
sub
pop
aad
pop
out
repz
or
mov
jl
in
adc
cs
xor
and
pop
mov
imul
out
in
lret
xor
xor
roll
sub
lret
xchg
jp
dec
mov
or
add
not
fmulp
mov
mov
push
lods
aad
popf
int3
pop
fldcw
icebp
fwait
jnp
and
in
aaa
or
mov
dec
test
lods
xor
xor
mov
mov
fldcw
insl
lods
aad
xchg
sti
lods
sub
fadds
sahf
xchg
out
mov
xchg
shlb
mov
xchg
push
adc
jmp
lea
mov
dec
mov
icebp
clc
xor
rcrl
adc
scas
xor
fs
clc
pop
lods
and
call
push
inc
aas
mov
mov
das
xor
sub
pop
xor
or
mov
sbb
push
pop
sbb
out
popa
dec
fs
pop
sbb
fmull
sbb
nop
movsl
aas
faddl
stc
daa
out
stos
aas
iret
data16
cli
das
shr
mov
fwait
add
mov
in
pop
push
xlat
sub
test
imul
mov
or
cwtl
movsb
xor
sahf
je
cmp
pushf
lcall
sti
inc
jl
pop
jle
dec
dec
test
idiv
dec
and
xchg
or
aaa
sub
cld
ja
mov
movsl
aas
xchg
fsts
sbb
pop
fidivl
ss
ror
pop
shll
cld
movsl
cmc
adc
lret
pop
sub
aad
or
mov
mov
sti
xchg
xchg
fisubrl
jae
in
mov
imul
pop
mov
xchg
rorl
mov
lret
xlat
inc
mov
jp
sahf
push
jle
test
shr
dec
nop
cmpsl
push
icebp
imul
sbb
add
in
pop
cmpsb
add
and
andl
adc
sarl
mov
push
data16
and
movl
adc
xchg
popa
dec
pop
fisttpl
adc
xor
mov
dec
pop
in
inc
cwtl
pusha
cld
sub
adc
xchg
outsl
rorb
fldl
push
mov
mov
xchg
push
dec
mov
loop
push
loopne
les
icebp
adc
push
jae
jae
insl
and
outsl
test
pop
mov
add
jl
or
in
fneni(8087
fistps
inc
cmp
stos
je
dec
pop
test
lea
leave
ffree
inc
mov
test
sub
rolb
sbb
mov
adc
cmpsb
pop
fmul
push
sbb
jnp
mov
iret
jecxz
xchg
and
push
and
dec
jle
push
push
ss
cmc
add
movsl
jmp
cwtl
mov
sti
pop
addr16
dec
repz
pop
mov
popf
and
test
ss
sarb
adc
ret
cmpsl
sbb
sub
push
inc
jmp
mov
adc
add
rcrb
mov
jnp
cld
lret
ds
mov
lret
out
mov
xor
in
sub
xchg
mov
pusha
jge
push
add
or
in
mov
outsb
test
bound
sbbb
ficoms
test
xchg
std
ljmp
fsubrs
cld
stc
sar
dec
push
std
or
add
pop
insl
adc
enter
mov
mov
mov
cmpsb
add
jmp
push
rorb
mov
mov
aad
fsubs
push
cli
je
jge
mov
dec
or
push
dec
popa
jns
dec
mov
je
lahf
out
int3
movsl
pop
xor
test
mov
loop
je
repnz
dec
xchg
mov
adcl
sub
in
dec
iret
dec
insb
xchg
xor
add
test
mov
stos
cltd
adc
int3
sbb
loop
sbb
mov
mov
sarb
test
push
ret
and
pop
jbe
insb
ja
ret
cmp
mov
fs
mov
or
in
mov
int
adc
ret
pop
mov
in
push
repnz
jmp
int
popf
aam
negl
js
nop
shlb
xchg
mov
dec
dec
addl
sbbl
pop
and
shrb
push
adc
mov
dec
roll
insb
push
sahf
repnz
mov
out
cmp
pushf
cld
out
cmp
cmp
gs
jb
inc
iret
jge
or
test
pusha
jbe
mov
add
in
test
jne
lea
icebp
lods
jne
mov
movl
sbb
outsb
mov
jl
mov
mov
inc
adc
fcoms
adc
pop
dec
pop
fcompl
mov
icebp
add
xchg
cmp
addl
inc
sahf
xchg
inc
ja
shl
adc
pop
add
cltd
and
mov
inc
mov
pop
int
mov
jecxz
pop
outsl
cmc
mov
orb
xor
xor
scas
lahf
mov
lret
lcall
and
mov
test
mov
sub
arpl
fsubr
mov
call
fcoms
cli
orb
pop
jns
xor
cmp
sub
bound
push
addb
push
and
test
sti
or
lret
sbb
push
mull
xchg
in
mov
cld
xchg
outsl
outsl
cli
dec
sub
aas
push
mov
hlt
push
pusha
cwtl
mov
mov
add
cltd
xchg
pop
aad
mulb
mov
roll
insl
clc
daa
sub
xor
jne
fldcw
inc
inc
bound
imul
xchg
jge
mov
out
ja
clc
testb
and
lret
fcoms
jo
push
xor
hlt
ret
test
pop
and
popa
negb
ss
cli
in
push
mov
mov
xchg
leave
pop
push
or
lock
inc
les
hlt
test
mov
xor
jnp
cmc
fldl2t
adc
and
cwtl
outsl
pop
call
push
mov
repnz
mov
jge
mov
in
pop
or
shrb
jl
mov
cmp
cmp
sarb
popa
js
cwtl
cs
loopne
xchg
in
call
push
mov
fimull
adc
xchg
in
push
fdivrl
es
outsb
ficoms
test
pop
into
insb
jmp
xlat
xlat
jbe
xchg
loope
cmpl
in
dec
pusha
xor
mov
adc
pop
xor
mov
pushf
jo
sahf
push
out
dec
mov
sub
into
pop
imul
jo
cmp
jmp
adc
xor
cmpsb
stos
jle
cs
mov
push
sti
add
adc
and
test
push
outsb
mov
push
xchg
test
and
sbb
mov
sti
mov
stos
fsubl
xchg
mov
jle
addr16
mov
inc
inc
pusha
push
mov
add
repz
movb
arpl
leave
in
cld
gs
pop
xchg
cmc
cmp
xor
jo
dec
int
in
jg
xchg
cs
ror
or
clc
loop
imulb
iret
mov
aam
xchg
sub
dec
shlb
jle
cltd
pop
dec
lret
loopne
jle
stc
insl
xchg
jle
out
lods
pop
in
mov
fadds
test
cmp
call
aas
sub
test
mov
test
ja
ret
add
or
jmp
pop
mov
cmovp
popf
mov
jne
rorb
imul
push
pop
and
jns
jmp
insl
das
les
cmpsb
popa
sub
out
stos
cmp
and
lds
jne
xor
push
and
sbb
ljmp
stc
adc
xchg
adc
fsubs
iret
jle
shlb
int3
jp
dec
scas
scas
lds
clc
adc
movsl
rcrl
push
cmc
in
dec
pop
mov
adc
cs
jnp
jg
jmp
sbb
aam
mov
lret
push
xchg
testb
sub
sbb
sbb
xor
sub
bound
and
bound
cmp
je
popa
jno
mov
js
or
pop
cld
jns
imul
lcall
loop
xor
jne
iret
push
dec
cwtl
inc
stc
test
icebp
cmp
mov
sbb
dec
repz
mov
out
icebp
stos
mov
add
aas
testb
and
mov
repnz
mov
pop
lock
jp
loop
pop
insb
pop
sarb
xchg
mov
ds
lods
or
sbb
push
cs
add
dec
in
push
fadds
sahf
cli
pop
mov
inc
pop
subb
lds
add
add
adc
cltd
mov
dec
sti
imul
lret
int
push
pushf
push
leave
movd
cmpsl
xadd
add
clc
sbb
lds
testb
iret
jnp
rclb
xchg
aas
inc
loopne
mov
adc
pop
iret
test
call
test
sti
inc
rcrb
push
mov
int3
sbb
sarl
jmp
xor
jnp
fcmovnbe
push
xlat
imul
in
mov
ljmp
nop
jo
std
ds
or
es
aas
cmp
js
jo
sub
pusha
xchg
std
fdivl
inc
pmulhw
mov
jecxz
fisttpl
mov
enter
pop
ljmp
inc
cld
lods
ljmp
in
repnz
mov
cmp
and
out
cvtps2pi
jae
add
sub
sahf
mov
xchg
jae
das
data16
cmp
jl
int
nop
xor
jbe
push
pop
cltd
xchg
adc
imul
daa
mov
repnz
ss
inc
addl
pop
movsl
sbb
psraw
fwait
jmp
mov
stos
dec
xor
inc
test
or
outsb
sbb
fs
fsubrs
adc
dec
xchg
sbb
jle
or
inc
mov
pusha
mov
adc
js
iret
xchg
leave
xchg
cmp
lahf
sahf
pop
scas
xchg
bound
push
inc
inc
das
rcll
pop
int3
imul
popf
mov
lods
rcrl
outsl
xor
lret
add
ret
jbe
push
pop
daa
mov
pop
ljmp
outsl
jb
stc
mov
xchg
dec
jo
insl
mov
movsb
mov
movsb
push
dec
aas
jl
fdivrl
pop
popa
push
dec
popa
out
push
js
sub
xor
and
xlat
cmp
sbb
or
xchg
stos
stc
cmc
pop
mov
or
inc
repnz
rcll
push
inc
mov
sub
lcall
popa
loop
push
jg
jbe,pt
or
dec
push
sub
les
in
popf
sbb
outsb
push
adc
dec
inc
inc
sbb
rorb
jns
jmp
xchg
sahf
sub
dec
dec
pop
shlb
xlat
lock
andl
push
xor
cmp
jge
and
add
dec
clc
mov
add
and
icebp
mov
pop
mov
leave
adc
inc
pop
lahf
lea
pop
mov
ret
mov
pop
inc
xchg
lea
and
and
and
jno
cmpb
inc
xor
outsl
testl
mov
lcall
mov
loope
out
pop
fldl
test
xchg
shrb
test
rolb
movsl
jmp
data16
stos
mov
mov
repz
je
xor
inc
ljmp
mov
cmp
nop
pusha
push
mov
cld
xor
das
dec
insb
das
movl
mov
mov
les
inc
stc
xchg
insl
stc
cmpsb
jp
and
xchg
dec
imull
jns
fcomps
jne
mov
aaa
dec
jmp
mov
inc
icebp
xchg
push
iret
pop
ljmp
adc
cld
inc
adcb
aaa
mov
cmp
shr
cwtl
jbe
xorb
repnz
cs
push
out
fiaddl
shll
test
xchg
sti
lcall
in
shlb
adcl
cmp
cmp
fisubl
stc
rorl
cmp
xor
mov
jbe
jg
nop
pop
rcrb
sbb
cltd
mov
std
sbb
cmp
dec
push
sbb
int3
clc
inc
inc
test
jge
push
adc
fnstenv
cmp
pop
cmpsb
loope
and
test
movsb
sub
cld
jbe
mov
or
addb
xchg
xchg
leave
inc
xchg
mov
ret
scas
xchg
out
sbb
mov
in
sub
push
lret
unpckhps
das
inc
xchg
mov
push
xchg
mov
stc
mov
add
cld
pop
ds
pop
or
pop
mov
push
mov
xor
xlat
push
dec
out
loopne
in
sarb
pop
xor
jae
fdivs
ret
cltd
aad
push
or
cmp
rcll
or
cld
adc
cmpsl
popf
movsl
nop
xchg
jle
add
cmpb
jns
enter
fs
icebp
sub
dec
js
and
ja
ss
flds
inc
call
rol
push
push
loop
push
push
or
das
sbb
icebp
jecxz
and
int3
imul
and
nop
lea
xor
iret
leave
outsl
mov
icebp
inc
jbe
dec
adcl
xor
repz
loopne
dec
inc
mov
pop
sbb
xchg
test
int3
and
xlat
inc
fcomps
xchg
cli
xchg
in
push
out
push
es
cmpsb
dec
push
fldcw
shll
xor
repz
mov
cmp
and
adc
addr16
leave
mov
sbb
addr16
jnp
into
xchg
out
scas
sbb
jge
jno
daa
mov
ljmp
enter
pop
push
pushf
lret
stos
or
inc
push
fcoml
aad
fisttps
mov
enter
cmp
xchg
sbb
xor
jle
stos
sbb
dec
and
pushf
cmpsl
adc
in
and
fimuls
cltd
xor
out
push
jne
sahf
mov
push
jns
mov
add
iret
sbb
add
sbb
and
int
jecxz
lret
mov
adc
dec
scas
clc
loopne
mov
insl
pushf
adc
cmp
negl
mov
in
arpl
add
xchg
fstl
dec
adc
jp
fisubrs
cmc
jp
xchg
fwait
inc
adc
xorb
fdivrl
xchg
rorb
mov
dec
mov
int3
inc
in
pop
movsb
enter
into
mov
jne
jge
stos
les
add
cmp
sti
sbb
mov
test
cmp
test
pop
scas
cmpsl
dec
out
jg
rclb
test
adc
lahf
out
push
mov
scas
dec
pop
in
mov
sbb
icebp
jae
pop
push
jmp
or
lods
in
push
jg
repz
sub
add
inc
stos
fsubl
stc
dec
xorl
inc
cmp
int3
test
incb
mov
sbb
adc
daa
mov
mov
popf
enter
stc
dec
jnp
pop
mov
xor
in
inc
nop
add
repnz
cmp
dec
mov
cmpsb
stos
stos
or
push
xor
push
stos
test
fisttps
push
daa
add
outsb
icebp
rcrb
ret
in
cs
xor
outsl
ljmp
sub
and
xor
int
into
clc
xor
cmpb
pusha
test
push
cmc
sti
pop
or
jae
xchg
je
pop
lods
repnz
dec
popf
xor
fisubrs
inc
adc
stos
pop
xchg
xchg
cmc
andl
rorb
test
ja
dec
fsub
inc
and
out
inc
jmp
imul
inc
lea
lret
sbb
andps
pop
mov
mov
pop
mov
xchg
notb
mov
imul
mov
lcall
push
push
movsb
mov
and
push
xor
rorb
test
arpl
dec
outsl
scas
mov
jp
jo
lret
scas
sbb
xor
jne
aad
adc
rcll
int3
lods
sbb
mov
lret
dec
cmp
mov
cmp
pop
xchg
lret
xor
xchg
enter
dec
cmp
mov
stc
add
mov
jp
andl
int
lock
push
cmpsl
add
fistpl
cld
xor
xchg
lock
xchg
and
pop
ds
cmp
lock
lea
fisubrl
sub
sub
xchg
insl
push
push
cld
sub
add
mov
shr
push
or
pop
sbb
imul
in
xlat
mov
cmc
das
jg
sbb
pop
cmp
sbb
inc
fildll
jmp
cmp
lods
cmpsl
lret
lea
fnstenv
push
push
xchg
mov
dec
xchg
gs
fsubrs
mov
imul
shll
push
add
shrb
mov
ja
mov
pop
int
sub
or
es
loopne
imul
jo
inc
xorb
jb
jmp
sub
xor
mov
test
xchg
mov
add
xchg
mov
aad
leave
inc
iret
repnz
lcall
xor
cmp
lcall
xor
icebp
lret
mov
and
dec
in
or
cmpsb
shl
in
rsm
adc
loopne
mov
mov
xchg
cmpsl
dec
cmpsl
lret
mov
jo
or
enter
pop
fcomps
jnp
push
xchg
es
bound
jbe
adc
out
call
cmp
js
pop
and
pop
scas
push
mov
and
cmp
in
lods
xchg
dec
dec
fbld
pop
jb
lret
ss
test
mov
aas
pop
popf
rclb
push
pop
push
mov
icebp
cmp
pop
orb
repnz
cmp
mov
push
cmpsb
push
int3
stc
ret
fadds
ret
push
add
or
mov
sub
jb
xchg
jns
insl
add
add
mov
pop
add
cmp
cmp
push
push
cmp
into
push
out
sub
push
repz
jae
insb
das
inc
add
js
mov
dec
jge
aad
rcl
jge
push
push
mov
push
daa
into
cmp
outsl
add
cs
dec
in
mov
rcl
sbb
xchg
clc
mov
lret
dec
mov
cmp
push
push
adc
xchg
insb
aam
in
inc
cmp
test
stos
lds
lds
push
outsl
aas
jo
sub
xor
mov
js
outsl
stos
xor
or
in
fdivl
push
pop
hlt
ret
push
jbe
xor
stos
jo
push
pusha
push
and
mov
pushf
out
push
sahf
mov
mov
push
rclb
mov
hlt
fwait
sub
push
push
cmpsb
adc
jne
ret
cwtl
cmp
int3
movsl
mov
lcall
xor
xchg
sub
pop
insb
adc
test
dec
lcall
xor
addb
pop
push
pushf
scas
pop
adc
movsb
push
dec
adc
repz
sbb
mov
lret
insb
mov
ret
enter
rorb
pusha
pop
fldlg2
shrb
jg
ret
sub
jno
ja
iret
scas
pop
scas
int3
dec
shr
ffreep
and
xchg
push
mov
subl
mov
mov
lret
fisttps
loopne
iret
frstor
ret
push
add
shrl
nop
in
int3
movsl
das
out
stc
push
jo
adc
popa
jbe
gs
or
je
mov
sub
in
and
mov
dec
outsl
scas
aad
xor
dec
mov
shl
popf
popa
jae
sbb
outsl
out
loope
or
cmpsb
cmp
add
and
sbb
xchg
out
stos
jae
cmp
outsb
jne
push
ljmp
pop
not
insb
fiaddl
out
inc
jo
subb
pop
rorl
dec
mov
movsl
xor
mov
or
sti
xlat
dec
fnstenv
mov
or
test
sbb
pop
mov
lret
js
cmp
mov
pop
cmpsb
jecxz
and
sbb
mov
imulb
sarb
test
adc
xor
jmp
inc
push
cmpsb
call
lcall
mov
iret
test
dec
fwait
adc
sub
rcrl
pop
mov
cwtl
cmp
and
xchg
adc
dec
jbe
data16
stos
dec
ljmp
push
outsl
rcrl
adc
dec
test
test
xor
jl
push
lock
fstp
int3
inc
test
xor
inc
xchg
ret
into
inc
movsb
bound
xchg
loopne
mov
cmp
ret
hlt
insl
shll
cmp
dec
xor
lods
push
popf
fisttps
mov
mov
or
popa
rolb
icebp
add
mov
mov
pop
push
xchg
mov
pushf
cmp
sbb
jnp
pop
ret
out
jmp
pusha
mov
int
jnp
loopne
add
mov
xor
xorb
aas
push
bound
xchg
shl
lret
movsl
push
popf
sbb
bnd
call
ret
mov
adc
mov
cmp
fisubrl
pop
mov
mov
xor
mov
dec
push
mov
shrb
test
mov
rcrb
icebp
popl
cmp
cli
dec
jg
lods
cwtl
daa
lods
inc
push
dec
mov
movl
push
stos
xchg
roll
sub
jg
sbb
loope
mov
jno
ds
xlat
jae
jge
movsl
arpl
cmp
pop
inc
popf
mov
iret
fisttpl
inc
pop
fwait
push
xchg
pop
lret
pop
clc
and
loope
out
xor
sub
inc
sub
pop
xor
inc
out
pusha
lods
aas
movsl
les
mov
adc
push
divl
lret
sub
cmp
dec
pop
roll
aam
xor
out
insb
ds
hlt
shlb
mov
xor
subb
cmp
pop
pop
rolb
or
mov
in
mov
sbb
adc
imul
fisubrl
rcrb
loope
jnp
mov
pop
add
enter
mov
mov
aas
enter
lret
dec
pop
mov
subb
push
jl
pop
add
inc
ljmp
in
push
mov
sub
xchg
sbb
cmp
mov
cwtl
ja
adc
pusha
flds
xchg
xchg
fsubrl
outsl
rcll
out
sub
sarb
jge
cltd
insl
push
ret
jae
shll
out
or
inc
push
jge
adc
mov
cmpsb
shl
loopne
ret
in
xchg
and
clc
pushf
sti
sbb
popf
pop
std
movsb
push
mov
fistpl
jb
inc
nop
cltd
int3
push
push
jle
push
loop
xor
sarb
int
scas
xchg
sub
sub
pop
xchg
mov
and
cs
stos
out
sub
clc
adc
xor
mov
mov
xlat
insl
divl
dec
cmc
pushf
mov
inc
leave
rcl
in
inc
fcmove
cwtl
inc
and
push
sbb
and
mov
aaa
outsl
jns
lods
decb
xchg
loopne
jns
adcl
mov
push
or
jnp
cltd
push
test
push
aad
mov
sbb
dec
ljmp
ret
mov
mov
dec
or
pop
mov
das
lds
cmp
insl
mov
sub
cltd
or
lea
scas
test
mov
lds
jae
repz
xor
jo
pop
movsb
inc
cli
hlt
lds
jl
dec
insb
jne
mov
jp
pop
and
xchg
and
and
jns
fisttpll
xchg
push
xor
dec
mov
pop
loopw
lret
dec
jb
xor
stc
xor
shl
jmp
mov
lock
mov
inc
xchg
adc
call
jmp
lea
movsb
ret
inc
adc
inc
lds
out
push
addr16
icebp
push
jg
sub
sbb
test
insb
push
mov
enter
rcrb
inc
dec
addr16
rcrl
repz
pop
or
add
inc
xor
and
lret
inc
idivl
daa
hlt
test
sbb
sti
enter
sbb
add
cwtl
lret
mov
arpl
aam
sbb
xor
test
inc
es
addr16
mov
jb
adc
cwtl
lds
lods
cmp
out
into
out
xor
inc
enter
pop
mov
inc
int3
mov
int3
xchg
mov
das
inc
dec
sub
pop
xchg
xor
mov
leave
mov
pop
je
add
and
push
xchg
mov
xchg
jo
in
mov
sbb
adc
adc
loopne
pop
push
fisubrs
or
cmpsb
sub
lods
ds
in
out
repz
imul
pop
rclb
lods
fsts
mov
dec
addb
jge
push
add
mov
test
jmp
adc
push
mov
pop
push
ljmp
idivb
mov
pop
inc
sbb
push
jecxz
jb
push
ja
pop
je
jb
inc
out
mov
imul
push
mov
repnz
cs
mov
imul
xor
inc
push
mov
mov
mov
sub
push
mov
hlt
mov
push
sar
call
sbb
mov
mov
mov
xchg
lea
pop
xlat
ds
rol
xor
pop
lcall
pushf
pop
mov
push
pop
loope
adc
add
mov
mov
shl
rorb
pop
stos
inc
adc
daa
mov
or
aam
cmp
jle
pop
xchg
dec
sub
jbe
xor
pop
fdivs
aam
mov
dec
dec
ja
jae
orl
ret
mov
add
repnz
xor
enter
fs
mov
ds
test
and
movsb
push
hlt
mov
daa
inc
pop
push
cmp
clc
pop
gs
int3
clc
fwait
cmp
mov
cmp
adc
cmp
mov
adc
movsl
test
xchg
xchg
scas
pop
add
xchg
leave
arpl
xor
fimuls
imul
jmp
std
mov
ss
fdivrl
aad
movsb
jecxz
lcall
movsb
or
fs
xlat
sub
les
jnp
iret
nop
xchg
iret
mov
sbb
dec
xchg
or
gs
stc
into
cmpsl
pop
xor
mov
mov
jp
and
inc
mov
sbb
nop
and
or
push
pop
xlat
mul
mov
fstps
jno
xor
jae
mov
xor
pop
jae
sbb
mov
inc
rcl
pop
jb
xchg
xchg
dec
push
addr16
ss
repz
pop
ljmp
inc
push
adc
pop
mov
sbb
dec
ret
push
xchg
dec
jno
mov
jmp
jg
cmp
xlat
adcl
data16
sub
call
mov
push
mov
bnd
pop
jbe
and
fimuls
push
mov
test
mov
or
pop
lock
xor
int3
dec
dec
mov
jmp
cmpsl
addr16
sub
int
xlat
jmp
or
bound
push
or
loopne
and
es
cld
jle
dec
mov
xchg
lds
xchg
adc
push
fistpll
mov
push
ja
lods
aas
imul
dec
cmp
xor
inc
xor
mov
xchg
ret
push
jmp
xor
inc
nop
repnz
inc
loope
arpl
sub
xor
test
scas
test
shll
sbb
call
out
in
adc
inc
es
popf
aas
pop
jmp
and
or
outsl
lods
xor
ret
dec
call
cmp
adc
call
into
notl
shrl
fisttps
and
sbb
adc
push
sub
adc
dec
mov
dec
mov
pop
xchg
repz
loop
hlt
or
mov
inc
push
pop
and
inc
or
mov
fwait
data16
insb
outsl
cli
dec
in
cmpsb
lret
jge
adc
dec
push
lods
scas
mov
ret
cmpsb
test
bound
push
mov
in
lds
repz
int
lock
ret
popf
or
nop
insb
lock
jecxz
aaa
in
inc
push
fs
ret
stos
gs
repnz
aam
movsb
sbb
in
pop
mov
jbe
mov
inc
adcl
sbb
mov
in
stc
lahf
dec
add
je
adc
scas
ja
ss
outsb
cmp
pop
inc
fcomps
das
notl
pop
pop
insb
pop
xor
dec
fchs
les
lea
cmp
cltd
mov
pop
nop
pop
mov
dec
or
negb
dec
sbb
add
cmp
out
fnstenv
add
xchg
lret
cmp
das
push
xor
xchg
in
popa
lds
push
mov
fimuls
sahf
dec
push
jns
enter
stos
pop
sbb
lods
pusha
insb
mov
out
inc
xor
push
aam
call
push
adc
inc
mov
out
jno
sbbb
push
aam
and
cmpsl
mov
or
fildl
mov
hlt
lret
xor
mov
aad
jb
shrl
dec
sub
scas
xchg
iret
decb
stos
pop
cmp
ss
pop
lock
xchg
bound
and
add
adc
sbb
add
lods
push
pop
add
cmp
mov
sub
cmpsl
bound
and
scas
hlt
xchg
mov
aas
sbb
stos
cmp
loop
jg
inc
dec
outsb
sahf
dec
loop
or
out
lret
xor
and
ja
jle
cmp
xlat
ret
xor
adcl
test
std
mov
cmp
push
mov
lods
xor
mov
pushf
inc
rclb
mov
in
out
fnclex
in
in
mov
xchg
xchg
pop
xchg
lods
xlat
xchg
sarl
and
inc
dec
sub
push
cmpsb
pop
rcll
xchg
jecxz
inc
inc
mov
xchg
pop
jge
icebp
popf
mov
int3
lahf
loop
cmp
sub
adc
sbb
sbb
divb
mov
mov
inc
jne
cwtl
xor
rorb
imul
mov
pushf
push
ret
xchg
inc
fsts
or
or
dec
dec
lods
cmp
gs
test
setbe
pop
xchg
jmp
in
fucompp
adc
xor
sbb
cwtl
or
sbb
mov
or
cltd
icebp
fiaddl
pop
in
out
rclb
add
ficoms
adc
dec
mov
loop
mov
daa
leave
xorb
int
push
or
jg
jae
mov
cltd
gs
in
es
lahf
fnsave
sbb
jle
inc
repz
shrb
cmpsb
inc
push
cli
add
out
adc
add
into
dec
push
pop
ljmp
pop
lock
push
push
mov
xor
push
imul
xchg
dec
mov
aad
add
add
iret
fidivrl
push
lods
ror
cmpsl
shrl
lcall
outsb
mov
arpl
cmp
jbe
push
cmpl
jne
ja
adc
test
push
cld
sub
push
dec
rorl
adc
mov
lods
mov
outsl
lret
repz
fldcw
or
nop
sub
out
iret
cwtl
rcrb
xor
xor
cmpsb
jg
les
pop
pop
adc
xchg
aaa
jge
fsubrp
outsl
aas
mov
ss
into
or
xor
xchg
aam
mov
sub
data16
xchg
push
je
and
popa
xchg
add
bound
mov
fdivrl
xor
cmpsb
xchg
in
mov
imul
mov
mov
insb
cmc
stc
aaa
out
jae
cltd
mov
jp
mov
push
out
cmp
outsl
pop
xlat
push
or
out
rolb
fs
std
xchg
test
mov
jo
inc
in
or
je
hlt
push
xchg
repnz
jle
jae
fnstsw
popf
fwait
sub
xchg
mov
dec
and
sub
stc
fistpll
das
mov
xlat
repnz
adc
sbbb
jbe
push
pop
sub
nop
mov
sub
notl
repz
or
inc
cld
pop
pop
aaa
cmpsb
adc
cmc
ja
push
aas
mov
mov
cmp
and
daa
fmul
enter
lret
icebp
arpl
push
inc
cmp
push
out
mov
adc
xor
mov
mov
push
xchg
inc
cwtl
insb
mov
sub
addb
adc
mov
out
andl
mov
jb
and
sbb
cmpl
nop
leave
push
or
xchg
cmp
or
and
cmp
mov
jle
xor
mov
jns
loope
stos
dec
xchg
loop
fisubrs
xor
clc
jg
adc
daa
test
adc
scas
ljmp
push
ljmp
adc
arpl
lods
in
lret
loope
add
dec
pop
pop
or
insb
xor
mov
push
sbb
sbb
push
sti
fldz
lea
lcall
mov
in
mov
mov
and
rcll
mov
in
mov
pop
jne
mov
movsl
pop
into
adc
or
mov
jg
xchg
ret
add
movsl
outsb
pop
lea
ror
shr
repnz
cmpsb
idiv
push
mov
jge
insb
xchg
pop
pop
inc
dec
loop
push
cmp
xchg
add
dec
ss
scas
je
mov
ljmp
ja
mov
icebp
mov
les
pop
bound
imul
in
pop
pop
call
sub
jge
or
dec
pop
fld
xchg
pop
push
pop
and
jnp
jmp
xor
push
or
fs
xchg
jo
fiadds
nop
stos
jbe
adc
out
inc
iret
sub
xor
fdivs
out
jle
roll
pop
sub
push
into
cmpsb
mov
mov
add
cltd
loope
jle
aas
pop
outsb
or
rcr
lcall
xchg
das
push
xchg
outsl
cmp
mov
int3
push
add
add
idivl
lock
shr
xchg
push
sbb
das
xchg
add
jae
lret
pop
rclb
xchg
shlb
sub
cmp
adc
and
movb
fcoml
pop
pop
xchg
test
les
sbb
add
dec
int
sub
xor
sbb
dec
es
sub
push
cmpsb
xchg
inc
adc
iret
movsl
lds
adc
pop
cmp
cmp
jl
aad
mov
xchg
js
add
pop
gs
pop
or
lcall
dec
out
push
in
push
and
enter
rorb
sti
loope
or
clc
pop
outsb
sbb
mov
mov
sbb
pop
repnz
out
mov
out
mov
aad
cmpsb
push
push
mov
fmuls
jmp
xor
inc
push
leave
pop
fwait
andl
cli
add
cli
or
sbb
in
mov
xchg
sub
push
in
jg
les
pop
cmp
adc
push
add
jno
sbb
push
sbb
rol
xor
in
lods
adc
fldl
or
pop
cmp
xchg
mov
dec
cld
hlt
sub
mov
jg
pop
jge
fsts
aaa
adc
cmpsb
test
mov
cltd
xchg
insb
mov
dec
mov
movsb
lock
dec
jns
in
nop
mov
pop
les
or
pop
mov
arpl
in
stc
aaa
inc
dec
pop
push
mov
sbb
push
adc
adc
mov
xchg
lea
mov
cmp
mov
fisubrs
mov
push
add
in
pop
sub
stos
outsl
in
or
add
imul
jo
sub
movsb
pop
adc
divl
cmp
rcrb
sbb
aas
and
pop
out
nop
fwait
sbb
mov
lret
xchg
int
mov
lods
sti
fs
es
pop
add
inc
pop
bound
lea
aad
cltd
sub
push
in
fwait
movsb
xorl
mov
sar
decl
xchg
jle
insb
fs
jnp
inc
popa
jno
and
in
add
fldcw
push
xor
dec
push
xchg
mov
daa
dec
mov
jl
je
jmp
addr16
imul
mov
mov
xor
xor
inc
adc
and
cli
push
dec
push
imul
fmull
mov
mov
enter
ljmp
mov
sub
daa
aas
dec
mov
loopne
bound
dec
dec
jg
aaa
cmpsl
sub
inc
movsb
fisubs
mov
fnstcw
fmull
push
sbb
mov
xchg
dec
je
and
sti
sbb
jg
jo
add
dec
xchg
cmp
fsts
out
out
xor
repz
lods
and
in
jmp
inc
lock
cmp
fsubrs
fisubrl
je
cmp
xchg
sbb
or
push
jno
ret
loop
mov
sbb
in
or
test
sti
adc
les
scas
arpl
mov
mov
xlat
mov
cmp
pop
mov
inc
adc
nop
dec
loopne
ja
pop
inc
dec
lret
mov
and
mov
add
dec
iret
cmc
push
push
cmpsb
pop
dec
out
adc
test
add
cmpsb
pop
gs
and
lcall
gs
mov
popa
add
clc
push
inc
and
jmp
xchg
fcoml
inc
int
dec
sbb
fwait
rol
jmp
jmp
sub
sub
mov
mov
fs
ja
mov
fldl
lods
xchg
test
imul
xchg
outsb
jge
cmc
scas
sbb
dec
mov
ret
xchg
std
or
in
mov
andl
mov
not
push
fprem1
dec
test
push
pop
sahf
dec
cmc
xchg
xchg
jmp
adc
xor
and
mov
roll
inc
adc
iret
fmul
pop
or
dec
and
sbb
xor
addb
and
dec
aam
adc
je
inc
xchg
xor
cmp
cmp
adc
mov
cmp
lcall
ds
inc
cmp
insl
sbb
aam
push
fnsave
xor
or
cld
es
adc
lahf
cmpl
daa
sbb
in
sub
push
inc
cmc
lods
adc
test
sub
cmp
add
nop
sbb
jb
cmc
repz
subl
or
sbb
lds
and
popa
int
push
sbb
and
and
adc
leave
xor
jp
in
loop
jnp
xchg
loope
adc
cmp
loop
adc
mov
fildl
outsl
ret
pop
jae
mov
pop
data16
int
jl
cs
icebp
aad
or
nop
call
xor
in
cmp
insb
scas
jecxz
inc
push
push
jle
cmp
pop
sbb
jno
dec
sti
popa
push
int3
or
mov
pop
cs
stc
sbb
mov
sbb
push
cmpsb
inc
repnz
inc
call
pushl
iret
inc
sub
or
movsb
cmp
fnstenv
in
subl
add
testl
lret
mov
jecxz
add
out
mov
jbe
jp
iret
sbb
pop
inc
fisttpll
mov
and
sahf
insl
mov
or
inc
sbb
push
lret
fs
nop
ret
and
ljmp
sbb
aas
inc
pop
xor
int
inc
push
xlat
push
insl
or
push
xchg
arpl
jns
cli
cmp
xor
cmp
mov
dec
push
adc
sti
push
mov
xchg
idivb
nop
mov
inc
fucomip
or
push
pop
jg
aas
pop
adc
shrl
mov
inc
jg
jg
push
stc
and
adc
out
das
addr16
leave
push
cmp
or
cld
ror
cmp
fdivl
dec
sbb
lcall
pushf
mov
xchg
int3
jmp
xor
pop
roll
xor
cs
adc
hlt
loop
lods
aaa
les
in
lcall
jne
aam
ja
icebp
pop
nop
sti
sub
inc
aam
xlat
dec
and
mov
sbb
pop
cmp
adc
movsl
fnstsw
and
call
sbb
xchg
push
mov
das
xlat
testl
loopne
jno
jo
imul
cltd
cmpl
mov
cwtl
push
lahf
in
inc
stos
clc
fistpll
loope
icebp
enter
lods
test
mov
mov
adc
les
leave
lret
push
arpl
rol
shrb
xor
mov
mov
adc
sub
dec
push
sti
dec
rcrb
mov
xor
loopne
test
mov
jge
inc
sbb
adc
mov
int
stos
scas
aad
or
mov
pop
in
ret
push
arpl
cltd
and
or
or
jle
ja
out
dec
insl
xor
gs
lods
mov
stos
dec
mov
popa
lds
xor
fmul
pop
iret
xor
ret
mov
mov
push
pop
das
daa
orl
dec
je
sub
push
jb
cli
cmpsl
mov
jle
enter
jecxz
mov
shlb
cmp
fidivrs
clc
push
mov
sti
test
test
sbb
popf
pop
shr
push
jp
lahf
repz
fistpl
or
fnstsw
dec
and
mov
scas
std
movsb
inc
adc
jp
push
pop
push
mov
add
mov
and
fs
lret
ror
or
lock
ficompl
mov
arpl
arpl
mov
xchg
cmp
mov
xor
mov
cmp
inc
add
fwait
pushl
adc
mov
lods
mov
leave
test
outsb
pop
mov
add
pushf
call
fimuls
inc
push
sarl
xchg
fdivs
push
and
inc
stc
sub
mov
pop
mov
mov
das
loopne
lods
pop
pop
les
andb
mov
adc
xchg
or
fisttps
xor
das
jge
adc
dec
xchg
in
sub
popa
repz
cmc
lahf
pop
insl
mov
cmp
movsl
mov
xchg
xchg
test
or
pop
int3
ja
sbb
out
cwtl
mov
dec
rcrl
xchg
jg
int3
int
xor
pop
jns
xor
jmp
mov
ret
dec
inc
out
or
shlb
jl
sbb
xchg
mov
sbb
sbb
mov
adc
mov
mov
js
leave
andl
repz
lock
dec
dec
push
pop
cmp
dec
push
outsb
sahf
mov
mov
or
lret
pop
xor
dec
ds
loope
adc
mov
or
int
imul
aam
ret
shrl
sub
movsl
cmp
or
ret
enter
notl
clc
or
push
call
imul
jmp
add
mov
mov
mov
sbb
push
sbb
and
jb
sub
cmp
sbb
mov
in
xchg
mov
cli
pop
dec
mov
dec
or
xlat
cwtl
mov
push
sarb
xor
scas
int
mov
outsl
push
sahf
inc
fnsave
mov
lea
jg
inc
lcall
out
push
pop
dec
ds
jecxz
sti
repnz
xchg
aas
fdivl
les
or
inc
pop
or
pushl
rolb
popf
hlt
ljmp
adc
insb
mov
cmp
or
and
outsb
xchg
xchg
push
sub
imul
mov
xchg
jl
xor
aas
cmpsb
push
inc
mov
ja
arpl
dec
frstor
add
imul
push
mov
push
scas
cltd
xor
cmp
inc
push
fsubrl
sub
jns
add
out
mov
ror
into
mov
fucomp
sub
sub
inc
cmp
mov
mov
int
inc
lahf
call
pop
enter
add
jg
xor
data16
and
xchg
jns
es
add
iret
mov
loop
and
sub
les
push
ss
imul
mov
mov
mov
jno
out
jp
repnz
shrb
lods
roll
fidivrl
stos
mov
cs
shlb
cmp
dec
xchg
add
adc
jecxz
add
fs
mov
inc
nop
sub
add
sbb
add
sub
or
fwait
inc
cli
arpl
mov
inc
and
rcl
mov
sub
add
cmp
ja
mov
int
adc
frstpm(287
cmp
cltd
and
or
pop
sub
call
lods
je
call
fs
cld
xchg
shrl
push
push
jl
adc
adc
add
cwtl
scas
orb
jnp
mov
mov
testb
js
cmp
pop
stos
xor
out
sub
in
xchg
je
jecxz
sti
xchg
stos
outsb
adc
imul
test
xchg
inc
push
push
fists
and
push
jno
xchg
pop
xor
cwtl
nop
icebp
ja
mov
xor
in
outsl
jle
xchg
imul
int3
cmc
sub
decl
xchg
outsl
jl
out
repnz
add
push
adc
jp
mov
lret
push
movsb
daa
cltd
jo
int3
dec
sub
pop
add
sbb
xchg
xor
pop
push
adc
fwait
addr16
out
je
inc
es
adc
xor
in
loop
sarl
ljmpw
cmp
dec
repz
xchg
leave
test
testb
adc
ss
jle
sbb
pop
pop
add
pop
inc
mov
leave
pop
mov
and
or
cli
ss
loope
xchg
addr16
adc
pop
xlat
pop
sub
aas
cmp
clc
and
outsb
mov
sbb
lods
jo
sbb
cli
clc
pop
and
clc
or
out
sbb
adc
imul
pushl
inc
jmp
and
into
dec
cmpsl
pop
ror
push
outsb
mov
push
push
pop
out
ss
push
add
adc
fsubl
push
dec
aad
loop
stos
insl
dec
shl
int3
in
mov
hlt
xchg
mov
jne
mov
pop
movsb
pop
sbb
mov
mov
mov
push
push
fisttpl
inc
enter
out
and
push
ss
mov
push
adc
leave
sbb
sbb
int3
or
inc
fwait
mov
sub
dec
xchg
insb
mov
cmp
pop
aaa
daa
pusha
outsl
mov
dec
sbb
leave
push
lods
mov
mov
mov
aad
dec
pusha
sub
jo
mov
sbb
movsb
adc
repz
mov
stos
push
push
int3
xchg
pop
aaa
popa
jnp
sbb
jae
push
push
push
aam
ja
push
clc
push
jnp
adc
jle
mov
fmuls
leave
inc
add
cs
lock
mov
or
sbb
sbb
gs
mul
leave
shl
insb
fstpt
add
add
sbb
repnz
in
xor
mov
jno
or
sti
loope
push
shl
out
pusha
fidivs
orl
iret
sub
pop
mov
call
jmp
loopne
sahf
aam
add
loope
les
pop
sub
inc
cld
jne
add
clc
jecxz
data16
dec
sbb
shr
repnz
push
imul
mov
in
test
add
add
sbb
mov
gs
sub
and
popa
clc
push
dec
insb
mov
arpl
dec
aaa
dec
int
out
out
sahf
cmp
fidivrl
mov
ljmp
lcall
cld
pop
pop
stos
shll
in
test
movsb
leave
nop
mov
xchg
imul
fs
leave
ret
sbb
lds
xor
mov
sar
cmp
xor
addr16
xchg
cli
mov
adc
lock
push
jl
int3
jo
pop
cmp
dec
andb
add
jecxz
cmpsl
dec
xor
fwait
mov
cmc
shll
orl
iret
and
xchg
push
lret
sub
pop
dec
aam
mov
lcall
mov
out
xchg
and
mov
xchg
pop
or
les
mov
sub
ss
xorb
ficompl
addr16
ret
je
repnz
mov
out
mov
in
daa
cmpxchg
mov
mov
sbb
and
in
mov
mov
adc
decl
adc
mov
pop
fs
sub
outsl
int
add
jg
adc
cmp
xorb
xlat
inc
or
cld
notb
mov
out
cmp
mov
cmp
sub
sub
jo
jl
cwtl
push
mov
popf
mov
cmpsl
lods
pop
or
jg
test
neg
out
xchg
sbb
data16
dec
jo
lods
ret
orl
loop
push
dec
ret
iret
jecxz
xorl
aad
dec
sbb
insl
push
xor
cmpsl
test
add
std
xor
in
shll
shlb
jl
push
jb
andl
inc
movsb
enter
shlb
adc
out
cmpb
push
push
pop
stos
xchg
sub
pop
shlb
addr16
es
cs
std
xor
add
mov
pinsrw
ret
sub
pop
fists
dec
cmpsb
leave
rolb
inc
lcall
in
push
or
mov
push
fstp
popf
xchg
fdivl
sub
aas
inc
cwtl
pop
fucomp
sbb
out
dec
jnp
nop
mov
bound
inc
push
stos
imul
push
mov
push
or
cmc
repnz
aas
jno
pop
fildl
jns
fwait
shrl
cmp
mov
es
scas
scas
xor
add
add
xor
popa
clc
mov
addr16
xchg
jg
adc
inc
std
dec
rcrb
lret
inc
add
out
sahf
cwtl
testl
movsb
push
cld
pop
mov
dec
and
sbb
mov
jbe
mov
push
push
xchg
cmp
nop
shlb
or
arpl
jbe
aad
idivl
sbb
cmc
sbb
adc
lock
adc
pop
xchg
xor
insb
sti
add
xchg
xor
out
lahf
pop
and
sbb
adc
pop
stc
les
out
aas
cmc
cmp
imul
push
or
cmpsl
and
dec
cmc
or
mov
imul
aad
or
sub
sti
mov
test
mov
es
mov
cmc
and
mov
movsl
mov
pop
in
ss
push
je
or
adc
lds
aas
pop
daa
scas
pop
adc
jg
pushf
test
imul
or
fwait
loope
dec
clc
in
pop
clc
cmp
jle
mov
aad
sbb
and
mov
pop
adc
mov
sbb
das
hlt
aam
push
call
sub
std
xchg
mov
inc
arpl
call
xor
das
jge
ret
cwtl
fldenv
pop
adc
push
and
sub
fimull
sbb
xor
fildll
xchg
jge
adc
fsts
das
rcrl
cmp
pop
dec
les
mov
pusha
inc
inc
lods
xlat
cmpsb
pushf
mov
rcr
fstpt
sbb
jae
mov
insb
sbbl
data16
outsb
or
push
ficompl
push
dec
lods
mov
daa
pop
js
mov
jmp
or
sbb
pop
or
call
cwtl
push
cld
mov
push
lods
outsb
lods
pop
je
js
das
insl
movsl
jg
aam
pop
ds
adc
lods
lock
sar
hlt
aad
adc
push
inc
cmp
jb
test
cmpsl
or
cli
jmp
lahf
sub
movsb
movsl
cltd
lea
xchg
dec
sbb
daa
xchg
and
add
sub
sahf
mov
addb
pop
xor
mov
fdivrp
mov
adc
push
push
in
jns
dec
je
inc
push
jl
test
mov
mov
mov
pop
pop
and
enter
push
aas
idivb
gs
outsl
ret
sub
mov
xchg
xchg
sti
xor
sub
dec
scas
inc
rdpmc
xor
hlt
into
jbe
inc
sub
push
push
pop
stc
rorb
addr16
iret
daa
mov
loope
test
xor
and
inc
mov
push
xchg
xchg
xchg
jl
out
aaa
cmp
js
sub
js
jb
mov
arpl
add
pop
inc
in
mov
xchg
lods
pop
xchg
bound
add
mov
push
ja
push
mov
enter
jle
adc
xor
in
testl
pop
mov
das
sbb
arpl
mov
adc
sbb
inc
sar
xchg
pop
sub
je
adc
sbb
cmpsl
mov
jbe
movsb
pop
xorb
inc
jp
and
fsts
test
lods
shr
ja
popa
stc
push
ror
or
add
inc
out
adc
jecxz
mov
xchg
xor
fdivr
lods
cmp
or
add
mov
scas
jecxz
and
mov
mov
mov
loope
or
add
mov
xchg
xchg
cmp
adc
sbb
mov
cmpl
mov
mov
mov
mov
cmp
fst
push
les
push
leave
dec
lcall
lock
sbb
xchg
jb
mov
pop
xor
inc
push
addl
aas
push
aas
pop
adc
loope
add
jo,pn
cmp
push
mov
mov
xchg
rcr
sbb
fildll
sub
aas
nop
jo
dec
scas
dec
mov
nop
add
and
cmpsb
ret
nop
mov
pop
loop
add
adc
jb
nop
dec
xor
subb
jp
cmc
out
xchg
outsl
xchg
push
sbb
pop
lea
stos
stos
pop
push
idiv
ficoms
test
outsl
jecxz
push
jg
mov
test
lds
cwtl
popfw
dec
call
push
xor
xor
lret
out
mov
cmp
rclb
mov
bound
rorb
shll
cltd
loope
scas
xlat
mov
inc
stc
push
nop
dec
out
jg
addr16
mov
and
je
push
pop
mov
or
pop
jmp
popa
insb
add
mov
xor
push
mov
add
cwtl
or
push
ljmp
loope
sti
push
outsl
sub
pusha
clc
or
sbb
movsl
jae
outsl
push
xchg
ret
pushf
mov
jnp
inc
popf
or
pop
mov
mov
push
jbe
pop
pushf
shl
pop
ret
xor
lea
loop
cmp
out
iret
and
dec
mov
rorb
jno
insb
adc
or
repnz
inc
ja
popa
and
pusha
mov
loope
cmpsl
mov
push
adc
dec
ljmp
and
pop
imul
fs
push
xchg
lock
sbb
fwait
cmp
fmuls
js
lahf
je
aam
and
push
add
mov
outsl
stos
bound
divl
ljmp
pop
scas
inc
ret
mov
aam
push
call
or
adc
ret
stos
mov
push
out
mov
in
push
scas
xchg
cmp
mov
test
in
push
pop
loopne
sub
pop
cwtl
out
push
imul
xchg
xor
mov
or
std
scas
push
mov
jb
aad
dec
or
jmp
sub
out
mov
dec
and
mov
or
leave
scas
movsl
loope
mov
lret
dec
push
adc
push
push
push
jle
xchg
hlt
leave
xchg
push
cltd
mov
js
mov
add
fnstenv
roll
aad
dec
scas
aam
mov
lret
jbe
pusha
mov
daa
dec
xchg
xor
les
scas
fmull
jge
inc
in
test
sub
stos
scas
jge
add
addr16
mov
add
xchg
push
out
xor
lock
aad
gs
cmp
cmpsb
ds
sbb
add
jle
mov
jecxz
mov
jae
out
imul
test
xchg
pushl
pushf
test
push
jg
in
inc
out
test
cmp
pop
fldcw
in
out
in
mov
pop
adc
jge
daa
sub
fsubrs
xchg
xor
popa
mov
les
pushf
mov
adc
jno
and
push
popf
in
push
movsb
lock
into
cmp
adc
jl
mov
lahf
inc
imul
insb
dec
leave
push
movsb
mov
add
xor
mov
xchg
xchg
scas
es
xor
xchg
jecxz
daa
add
sarl
jecxz
mov
sbb
fidivs
or
outsb
ds
add
add
aad
sub
xchg
ljmp
mov
dec
xor
mov
movsl
jae
adc
popa
jnp
mov
lea
adc
mov
test
in
and
mov
xor
mov
lret
insl
add
out
dec
cmpl
sub
adc
add
dec
inc
add
cli
inc
or
push
in
int
out
mov
xchg
sbb
ret
insl
add
xchg
lea
js
fwait
push
arpl
mov
nop
clc
jnp
cmc
mov
idivl
mov
mov
nop
int
add
in
jo
xor
js
lods
mov
repnz
repz
add
jns
mov
xchg
or
mov
mov
push
fcoms
pop
cltd
lret
inc
gs
mov
add
in
cmp
scas
test
and
dec
sub
mulb
bound
negb
fdiv
sarl
scas
les
enter
fstl
jae
xor
push
mov
lcall
clc
xchg
inc
push
cmp
lock
cmp
lock
xchg
mov
lret
mov
push
cmp
mov
mov
sahf
repnz
into
ljmp
mov
int
std
fstps
fmulp
orb
inc
sbb
scas
dec
addr16
xchg
pop
mov
push
rcrb
xchg
icebp
dec
outsl
mov
ljmp
sbb
iret
fs
shrl
loopne
movsl
sub
add
jmp
mov
in
sti
test
jp
fsubr
test
insl
adc
cld
or
mov
cmpsb
mov
into
in
pop
push
addr16
sarl
ret
inc
jb
into
jl
or
fwait
lahf
adc
push
cmp
and
pop
mov
inc
out
jecxz
xchg
push
push
in
test
inc
insl
mov
stos
popa
mov
fnstenv
xor
and
rcr
lods
mov
push
ret
cmp
jae
pop
xchg
loop
popf
push
adc
xchg
cmp
jg
inc
jne
inc
mov
add
mov
addl
push
and
mov
ds
rorl
enter
mov
jmp
shll
mov
xor
hlt
mov
mov
dec
enter
out
lahf
icebp
mov
jge,pt
jl
cmpsl
test
out
jmp
jl
pop
mov
rclb
mov
outsb
mov
xor
popf
cmp
adc
mov
cltd
stos
dec
scas
xchg
sub
push
jg
push
iret
mov
bound
arpl
or
cmp
in
push
jle
clc
jmp
xchg
out
mov
xchg
jle
push
popf
aam
fwait
pop
xor
hlt
cmp
dec
ficoms
mov
mov
mov
orb
mov
test
in
int3
addr16
push
into
lods
lods
jnp
jl
call
sbb
xchg
inc
aaa
iret
test
les
loopne
push
hlt
add
sti
popf
std
dec
add
push
push
addr16
scas
shlb
cmp
push
call
insb
lret
mov
inc
mov
or
mov
or
fs
repnz
cmpsb
sbb
mov
sub
mov
mov
into
inc
insb
mov
mov
mov
push
or
mov
mov
jmp
gs
mov
jecxz
rcrb
insl
adc
int3
insb
stos
sahf
cmp
cli
adc
clc
lods
xorl
sbb
subl
sbb
scas
out
xor
sbb
push
outsl
cld
and
jecxz
jecxz
mov
cmpb
mov
lret
push
je
js
xchg
sbb
xchg
dec
mov
xor
out
push
lret
cmp
in
sub
data16
movsb
pop
iret
dec
lcall
mov
dec
push
pusha
xlat
cmpsl
mov
pop
or
leave
mov
outsb
jbe
add
xchg
call
or
dec
inc
xchg
out
jmp
mov
clc
icebp
xchg
enter
pop
and
mov
shrb
lahf
cmpsl
lret
or
mov
mov
insb
icebp
pusha
jns
lds
jge
jg
jle
fstps
pop
pop
or
imul
std
aaa
sbb
jnp
test
std
test
icebp
lds
sub
rolb
popa
fadd
push
xor
sahf
xor
jecxz
add
rcll
adc
popa
movsl
jg
aas
shlb
ficomps
inc
and
mov
jg
insb
enter
rep
mov
dec
movsb
xchg
sub
mov
loop
icebp
cltd
es
ss
mov
jle
mov
inc
xor
popf
jne
lcall
pop
shl
fisttpl
pop
or
int
repz
push
bound
cmp
push
out
fcompl
dec
sub
jne
loopne
xor
nop
pop
xchg
repz
rcrb
push
adc
insb
imull
mov
and
sbb
out
cmp
lods
mov
mov
and
stos
jecxz
xor
sub
xor
aam
cmp
sbb
dec
pop
jl
test
lds
mov
push
icebp
lea
pop
popf
lock
add
or
pop
and
xor
jbe
add
pop
frstor
jg
jo
or
push
cmp
loop
dec
xchg
in
inc
cmp
adc
and
push
into
hlt
movsl
xchg
stc
fcmovb
fsubs
aam
inc
arpl
in
sub
stos
and
js
jp
cmp
and
lods
sbb
testb
test
outsb
inc
mov
fidivl
fcoms
sub
mov
daa
push
mov
mov
enter
loope
aaa
xchg
cmp
jle
sahf
pushf
rolb
xchg
mov
or
mov
add
pcmpgtw
scas
fsubl
xor
and
push
cs
scas
test
sub
cmc
adc
in
stos
je
push
xor
sub
ljmp
mov
fs
push
in
in
cmp
pop
mov
test
cmp
pop
mov
popa
repnz
pop
mov
dec
and
xor
dec
insb
push
mov
mov
inc
fistl
and
negb
xchg
sbb
cs
pop
or
jns
pop
mov
pop
rolb
inc
add
movsl
hlt
adc
sub
xchg
pusha
sub
jg
ret
push
lea
orl
mov
inc
sahf
adc
imul
shlb
ficompl
and
lahf
xor
movsb
dec
les
or
sbb
mov
incl
or
aad
clc
ss
enter
incl
jmp
cmc
popa
mov
jge
mov
inc
cld
in
pop
push
push
xor
mov
in
and
mov
lahf
sahf
nop
shl
cmp
scas
dec
mov
lods
aam
jnp
imul
or
test
addr16
xor
sbb
cli
jmp
mov
mov
fwait
xchg
popf
out
negb
sbb
mov
and
xchg
cmp
cmpsb
repnz
mov
adc
out
std
inc
jae
cmp
jbe
pop
std
lret
in
adc
inc
popf
push
xor
outsl
mov
out
pop
aam
add
into
scas
in
pop
std
mov
pushf
jg
push
push
into
push
pop
cs
adc
jle
jge
fstpt
xchg
cmp
fs
pop
and
dec
lcall
sbb
hlt
addl
adc
push
and
stos
loop
pushl
add
push
push
xchg
in
fisubrl
xchg
push
test
test
addr16
rcr
mov
adc
xor
mov
scas
jl
icebp
cltd
sub
movsl
lods
fcompl
xlat
fists
fwait
insl
inc
cli
pop
fs
rolb
mov
inc
repnz
add
push
nop
mov
dec
xor
shr
loop
cltd
dec
push
xor
dec
mov
mov
out
inc
adc
cli
popl
addr16
sti
fs
les
cmpl
aas
mov
lret
insb
mov
out
jne
push
or
imul
ja
sbb
mov
pop
cmp
push
cmpsl
dec
imul
cmc
cmc
lods
fimuls
add
adc
or
xchg
push
test
fldcw
out
sub
ficoms
xchg
xlat
mov
cmp
popf
rorl
jp
mov
stc
cs
mov
into
outsl
fnsave
xorb
adcb
shrl
sti
ret
mov
in
xchg
sbb
popf
test
pop
pandn
nop
stc
sub
pusha
add
xchg
xor
pop
clc
lret
add
mov
iret
dec
sti
mov
jb
adc
repz
shll
das
jbe
enter
sub
ficoms
mov
aas
push
rcrb
add
pop
cld
ss
loop
jle
lcall
cld
mov
lcall
addl
shrl
push
addr16
lods
mov
inc
push
xchg
movsb
pop
test
add
jmp
sub
or
loop
pop
and
xchg
jg
jae
mov
das
mov
and
insb
mov
dec
lret
test
nop
inc
pushf
scas
mov
jecxz
repnz
popl
das
inc
adc
enter
cld
xor
push
cs
cli
mov
ret
cmp
or
insb
lock
sbb
ss
jo
jne
cmp
mov
push
inc
sub
data16
hlt
cwtl
or
sti
pop
lcall
xchg
sti
add
push
jo
mov
push
in
jnp
mov
jno
inc
and
xchg
test
push
cld
sbb
outsl
pop
scas
imull
jns
out
inc
sarb
sbbb
add
decl
sahf
push
cmp
push
hlt
lret
push
aam
xor
int3
xchg
sub
stc
outsl
loop
je
ds
lock
or
fisttpl
jns
decw
mov
sbb
sti
dec
lea
pop
pop
lahf
cmpsb
sti
cmp
stc
in
pusha
shll
sahf
adc
pushf
aas
imul
mov
enter
aaa
rcll
mov
push
and
fisttps
rcrb
jecxz
mov
add
inc
flds
xchg
sub
add
jno
xlat
or
fidivl
sbb
pop
xor
cli
lret
and
loop
in
ds
das
cltd
jb
daa
out
aam
sub
mov
pop
shr
mov
cmpsb
inc
add
add
jge
repnz
subb
sub
mov
daa
test
scas
out
jnp
fstps
cmc
scas
or
or
lret
push
test
pop
sarb
arpl
cmp
fmuls
mov
jle
ljmp
and
mov
cmc
test
stos
sub
leave
shl
adc
loopne
dec
xor
mov
stos
sbb
pop
out
outsl
les
sub
adc
inc
out
fbstp
fwait
insb
cmp
pop
fistpll
xor
sbb
sahf
or
cli
xchg
clc
jnp
and
xor
test
push
mov
cmovns
jb
adc
and
stos
ret
in
mov
adc
cmp
sbb
stc
fistps
cmpsb
lahf
and
xor
cli
scas
loope
xchg
loopne
sub
xor
flds
ds
jle
cli
movsb
lea
aad
sub
inc
dec
mov
xor
je
push
sub
mov
and
es
addr16
daa
nop
mov
lret
popf
das
push
mov
pop
stc
jle
xchg
mul
daa
hlt
dec
lret
mov
mov
push
or
iret
stos
sti
stos
mov
xchg
lret
nop
fcompl
hlt
pop
in
mov
jo
mov
fs
pop
das
inc
mov
fs
daa
das
enter
inc
and
loopne
jge
out
mov
jb
sbb
and
mov
mov
insb
inc
mov
adcl
repnz
jae
sti
clc
ss
loop
movsb
jmp
xchg
and
insb
sub
dec
push
shll
dec
or
outsl
and
dec
pop
push
int
mov
xchg
xchg
jge
fiaddl
mov
pop
out
cmp
add
pop
dec
pop
and
lret
lea
mov
and
pop
lock
xchg
shll
jmp
jmp
mov
jge
push
repz
stc
add
mov
mov
push
outsb
push
push
insb
je
xor
dec
test
jp
sbbb
xor
jne
sar
add
xor
xchg
inc
pop
dec
repnz
inc
out
pop
or
cmp
xchg
mov
cmp
jl
stc
adc
xchg
insb
into
popf
pushf
mov
jo
jns
ljmp
cs
mov
icebp
aaa
test
jnp
iret
mov
sub
jmp
lret
mov
or
cld
jo
mov
add
loopne
add
repnz
xchg
jo
cld
fnclex
out
cmpsl
and
pusha
jmp
lds
je
lods
icebp
fmulp
xor
and
movsb
sub
mov
ret
ss
mov
and
leave
fists
lock
pushf
mov
sbb
lods
nop
sub
inc
fildll
xor
sarb
cmp
movl
add
and
add
mov
pop
adc
sbb
shll
xchg
scas
aad
adc
js
sub
call
cmp
mov
es
fchs
push
jo
inc
nop
pop
sub
dec
rorb
mov
adc
mov
in
testb
int
jle
mov
add
ss
hlt
mov
div
std
xchg
test
lret
scas
sbb
mov
adc
and
retw
dec
jge
mov
push
add
lods
ret
jnp
or
fs
inc
mov
cmp
insb
icebp
cmc
mov
test
sbb
rolb
pusha
mov
jo
stos
lods
mov
stos
inc
jmp
das
outsl
xchg
sar
movsb
adcl
mov
hlt
ja
and
push
inc
dec
aaa
movsl
fldenv
add
fnstenv
push
sbb
lcall
cltd
fsubr
xchg
jb
and
ficoml
rol
andb
fs
jmp
adc
data16
mov
fs
out
enter
inc
insb
push
iret
mov
dec
cmpsb
loope
dec
sub
add
mov
test
out
aaa
sbbb
add
mov
mov
push
inc
stos
sub
push
mov
dec
jp
xor
adc
dec
inc
add
sub
sub
and
xor
jg
aad
sub
cmp
xchg
stc
data16
sbb
mov
bound
sbb
ds
iret
xor
leave
out
into
and
fidivs
les
ljmp
add
inc
mov
sub
nop
xchg
mov
or
xor
inc
mov
ja
adc
inc
fs
fcmovnbe
pop
icebp
outsb
pop
enter
lock
scas
xorb
das
test
add
jne
jo
pop
fcomp
xchg
cld
adcl
dec
and
pop
into
cli
jp
pusha
cld
cli
or
dec
shl
push
out
dec
add
adc
jle
jne
xor
jno
sub
popf
add
mov
mov
mov
mov
fisubrs
cld
cmpb
adc
xor
mov
mov
jle
movsl
cmp
in
adcl
in
das
or
xrelease
aaa
lret
mov
dec
fs
jg
sub
cmp
mov
xor
jns
push
and
sarb
push
das
xor
dec
or
aaa
fldenv
pop
xchg
or
sti
push
push
inc
outsl
loope
xchg
add
mov
dec
inc
cmp
icebp
int3
sti
data16
movb
jl
bound
cwtl
rcrl
mov
xorb
dec
shl
pushf
nop
mov
cmp
push
fsubrs
mov
mov
sarb
mov
xchg
leave
sti
out
mov
cwtl
pop
js
in
sbb
lods
daa
add
mov
int3
push
jl
test
pop
pop
fisttps
in
adc
arpl
out
ja
xchg
sti
insl
pop
je
daa
std
popf
dec
in
insb
adc
jne
jbe
jno
iret
cmp
and
jmp
fwait
mov
mov
lret
sub
insl
pop
je
xor
aad
mov
xchg
xor
adc
cmp
je
mov
add
cmpsb
dec
mov
push
dec
mov
lret
movsb
sub
push
cmp
ficoms
mov
rcrl
cmp
add
out
dec
dec
mov
jns
stos
and
cmpsl
xor
bound
cmpsl
xchg
popa
mov
dec
test
arpl
sbb
into
loopne
add
jg
stos
mov
shlb
mov
push
jg
xchg
pusha
cmpb
cmc
shl
xor
and
inc
cs
jo
xchg
mov
imul
push
add
jl
sti
mov
xchg
pop
sub
adc
lahf
dec
mov
ss
stc
jo
mov
mov
push
mov
jle
stc
mov
test
faddl
mov
pop
fstl
imul
aad
xchg
mov
and
scas
sbb
mov
push
aam
xchg
ljmp
push
jl
jns
aam
cmp
push
mov
stos
cmp
adc
roll
cld
stc
and
in
test
push
pop
xor
xchg
or
mov
sbb
mov
add
mul
cmpl
bound
pop
insb
fmull
shlb
cmp
hlt
mov
fdivl
into
dec
jg
sti
mov
addr16
ror
cmp
cmpsl
sub
ja
sbb
ret
inc
mov
cmp
jae
loopne
xor
inc
jl
dec
push
sbb
iret
add
in
loopne
xor
inc
in
mov
adc
gs
inc
mov
and
lods
fwait
push
js
divb
xorl
xchg
mov
movsb
pop
pop
pop
lcall
scas
fldt
popa
into
shufps
xchg
add
jns
cmp
adc
mov
movsl
jo
push
xchg
movsl
lcall
fdivs
cmp
les
flds
mov
imul
inc
out
f2xm1
sahf
jge
cmp
ss
gs
inc
push
in
loope
rorb
mov
jl
mov
std
lahf
pop
pop
popf
jnp
scas
pop
add
or
dec
fmull
push
outsl
mov
xor
or
mov
push
xor
jb
rcr
xchg
xchg
add
das
mov
insl
movsb
cltd
sub
into
fiaddl
cli
aad
mov
sbb
aas
loopne
cmc
test
xor
mov
push
mov
mov
iret
ss
sub
inc
call
mov
out
insb
sub
and
fldl
fcomps
icebp
sbbb
notl
testb
sbb
ficompl
cmpsb
mov
pop
mov
inc
cltd
inc
xchg
or
iret
mov
or
sub
sahf
push
lcall
mov
aad
mov
outsb
lods
shrb
mov
push
dec
mov
mov
outsl
push
arpl
pop
mov
mov
sub
repnz
xor
adc
inc
bound
ss
sub
pushf
fistpll
ret
bound
pop
inc
inc
sub
icebp
cmp
dec
repnz
movsb
out
or
or
sbb
jne
das
lods
jg
add
cmp
fsubrs
push
push
dec
inc
iret
pop
dec
cmp
pop
in
sbb
out
fdivr
popa
mov
fisubrl
inc
loope
lock
mov
stos
ljmp
cmp
pop
scas
add
pushf
leave
mov
sub
or
rcr
add
dec
sbb
call
cmp
rep
and
test
mov
stos
adc
mov
push
fwait
das
cwtl
aad
sbb
sub
ret
mov
scas
fnstcw
inc
mov
fwait
xchg
ret
mov
ret
jo
push
or
rolb
cmp
sbb
or
inc
shr
push
push
push
jl
loop
push
ror
cmp
xchg
and
inc
push
xor
fwait
mov
inc
pop
push
into
xor
rol
add
loop
or
dec
mov
pop
cs
rcrl
fmull
push
sahf
ds
cmp
jo
sub
test
shlb
je
movsb
mul
push
ss
lods
and
mov
inc
sub
jb
ss
dec
mov
sbb
call
push
add
mov
sbb
inc
pop
dec
in
jecxz
inc
arpl
hlt
fdivrl
push
ss
nop
push
adc
lcall
sbb
dec
outsb
mov
xor
rcll
mov
loop
jg
xchg
push
xor
or
int3
jo
sbb
mov
add
add
jmp
push
lea
push
sub
sbb
cltd
aaa
xchg
add
mov
or
jmp
jnp
inc
jno
push
push
xchg
dec
xchg
adc
jb
jb
outsl
daa
ja
out
clc
xchg
jle
adc
xchg
loopne
jb
neg
cltd
stos
fisttps
xor
sbb
mov
jbe
xor
jo
shll
shll
out
int3
sub
out
mov
pushf
adcb
arpl
cmp
mov
test
popa
test
dec
adc
loope
jae
lock
pusha
sbb
mov
insb
and
jecxz
jbe
ljmp
mov
xchg
insb
and
nop
jle
bound
xor
lcall
jle
mov
push
fs
in
cmc
outsb
call
cltd
push
push
mov
sbb
sbb
sbb
negl
leave
sbb
ret
push
out
out
rcll
add
stos
mov
mov
outsl
cmp
mov
cmp
arpl
nop
cmc
xor
popf
push
imul
jo
scas
imul
std
fwait
mov
incb
xor
pushf
arpl
stc
ret
fisttps
dec
cmp
div
stos
dec
daa
xchg
es
mov
adc
cwtl
adc
inc
mov
dec
or
push
dec
orl
repnz
xor
mov
xchg
les
jg
mov
jne
stos
lods
roll
pusha
mov
hlt
and
push
repnz
test
xchg
sub
movsb
xlat
repz
inc
lret
push
pop
fwait
mov
and
popf
pop
pop
test
mov
sub
push
sbb
sahf
out
sbb
pushf
jno
hlt
and
ret
std
imul
xchg
inc
xchg
pop
xor
out
xchg
jmp
lret
out
aaa
xchg
sbb
pop
push
popf
fidivrs
push
mov
mov
jp
aad
icebp
pop
add
int
pop
push
lods
scas
xor
call
jb
sub
xchg
or
in
sbb
xor
aaa
pop
mov
dec
add
or
xchg
jp
loop
gs
jl
in
inc
cmp
daa
loopne
mov
fs
push
imul
sbb
fcoml
testl
js
inc
aam
mov
enter
mov
pop
lods
xchg
ret
imull
and
das
scas
mov
push
repz
adc
mov
push
adc
push
arpl
push
jae
push
xchg
mov
sti
mov
fistpll
xchg
inc
jmp
adc
jb
and
out
iret
std
inc
and
outsl
inc
lock
ja
lods
add
mov
stos
sbb
ss
fcomps
pop
xor
aad
add
mov
dec
mov
mov
jb
test
enter
xchg
dec
xor
push
sbb
jmp
mov
test
idivl
outsb
jge
sbb
sub
scas
popf
lret
outsb
cmpsl
mov
sbb
outsl
pop
lods
fstl
mov
into
add
in
xchg
enter
xlat
fsubl
fmull
dec
or
push
orl
xor
ret
icebp
dec
test
xchg
pop
inc
jne
push
or
adc
pop
mov
loope
ds
cmp
xchg
shr
mov
js
test
xor
subps
mov
sbb
mov
push
sub
enter
int
lods
jl
cs
int
bnd
push
push
iret
popw
outsb
jb
xlat
mov
test
xchg
gs
push
js
loop
sbb
jno
and
add
mov
pushf
push
push
add
fwait
pop
jo
sbbl
outsb
inc
xchg
inc
push
mov
sub
pop
icebp
les
in
mov
and
cs
cmp
and
mov
out
and
sbbl
sub
push
and
sub
scas
pop
push
cmp
fimuls
xchg
fmulp
add
ficoms
fisttps
or
mov
leave
gs
sub
jp
sbb
mov
fs
inc
dec
cli
lret
or
iret
je
push
stos
jae
adc
xorb
cmpsb
lods
xor
adc
lods
add
hlt
xchg
pusha
mov
and
mov
int3
int3
pop
cmp
popf
or
stos
test
sbb
loop
ljmp
jbe
xor
mov
dec
mov
test
inc
movsl
into
rcrb
out
xorb
adc
xlat
lock
inc
enter
pop
and
add
das
xor
scas
test
cmp
pop
loop
mov
cmpsl
aad
inc
push
jb
jmp
ljmp
cmp
je
xor
sub
jge
and
adc
int
mov
enter
imul
mov
scas
dec
mov
repz
ja
push
int
pop
lret
push
aad
xchg
push
push
insl
fwait
out
adcb
orl
jne
inc
mov
roll
mov
fwait
shll
jns
in
xchg
call
push
sub
cltd
fbstp
or
and
fmul
mov
scas
movlps
scas
imul
lahf
jg
sbb
or
pusha
stc
xchg
pusha
dec
mov
movsb
movsl
negb
sti
test
mov
fsts
mov
cmp
ret
sbb
imul
jle
sbb
mov
fnop
adc
jb
vdivps
add
negl
push
inc
cmp
jno
lods
jo
mov
and
cli
cmp
adc
sbbb
cli
mov
mov
push
mov
sahf
add
cmp
insb
cs
insl
stos
jp
ds
ds
dec
mov
inc
mov
mov
and
push
into
fcmovbe
cltd
clc
xlat
sti
mov
mov
push
in
xchg
out
sbb
push
js
cmp
fstp
push
mov
cs
push
leave
stos
jns
stos
hlt
lret
mov
mov
jg
pop
outsb
das
add
cmp
and
lret
add
xor
fsubrp
repz
mov
adc
dec
jbe
enter
jns
sbb
les
jle
into
repz
mov
bndldx
sub
rcr
adc
sahf
adc
stos
pop
fldl
pop
dec
daa
mov
xor
test
inc
gs
cli
int3
or
lret
push
mov
in
mov
add
shrl
hlt
js
pop
sub
cmp
mov
push
sub
cltd
mov
mov
dec
fnsave
test
sub
mov
cmp
outsl
test
out
jl
scas
push
lea
ret
xchg
lcall
insl
jle
sbb
xchg
sbb
movb
nopl
add
rorl
insl
leave
pop
dec
sysenter
mov
mov
aaa
maskmovq
mull
filds
sub
pusha
dec
sub
stos
cmp
jbe
jmp
xor
and
add
xor
add
xchg
push
and
jno
andl
and
fldl
push
inc
int3
cmpsl
test
cmp
mov
or
adc
stos
mov
push
cmpsl
inc
ljmp
rcl
adc
notb
cwtl
push
jmp
sub
std
fadd
aaa
adc
pop
mov
xchg
sahf
les
jae
add
fcmovne
mov
cmp
mov
xchg
adc
xchg
mov
mov
ret
lock
add
push
dec
fistps
xchg
jge
xchg
and
mov
lret
iret
popa
or
cwtl
lods
sub
je,pn
pop
fs
out
int3
scas
insl
pop
push
sarl
sbb
orl
loope
dec
je
rcll
sbb
pop
mov
jne
out
dec
jne
fisttpl
sub
bound
xchg
cmpsl
mov
fdivrl
mov
es
lcall
data16
clc
pop
aas
pop
xchg
loope
rorb
loope
fcoml
sub
outsl
aad
inc
mov
jns
iret
mov
mov
xor
jmp
imul
sarl
lahf
and
in
fisttps
add
mov
stos
xor
and
or
lea
push
mov
lds
add
leave
in
insl
cwtl
daa
and
inc
mov
mov
mov
jbe
mov
mov
out
cmpsb
xor
add
adc
cmp
fbstp
sbb
out
cmpsl
jo
jb
test
in
inc
add
jg
adc
js
jg
test
pop
mov
les
mov
xor
inc
lahf
and
push
mov
jmp
inc
sub
fistps
fcoms
pop
pop
mov
leave
cmpsl
les
xor
imull
xchg
ds
mov
push
lret
in
inc
pop
pop
mov
jl
and
imul
xchg
jae
jo
dec
mov
popa
cmp
fs
mov
sbb
pop
mov
sbb
loop
aad
clc
mov
push
add
movl
rolb
in
je
cmpsl
cli
call
xchg
xchg
int
mov
pop
push
mov
jl
adc
dec
or
dec
into
sub
je
push
rcrb
movsb
push
mov
popf
pop
pop
rolb
sbb
ret
mov
mov
lret
add
rcrb
push
cli
sbb
orl
pop
movsl
add
mov
fadds
or
mov
lds
mov
addr16
xor
xchg
iret
gs
sbb
xor
and
das
cmp
ss
aas
lret
cmp
fidivrs
lock
fwait
cmp
cmovno
popa
cmp
push
fcmovnu
pop
gs
fidivl
sub
cmp
call
add
mov
sbb
xor
add
test
shll
hlt
pop
ret
cwtl
ret
shll
pop
mov
ret
jmp
scas
mov
xor
cmpsb
div
test
loop
in
pop
xor
sarl
lods
mov
stc
inc
fstps
adc
stc
enter
sub
xchg
mov
adc
mov
add
push
loope
leave
js
jmp
aam
mov
mov
orl
pop
adc
sub
and
mov
push
jle
es
inc
lcall
out
imul
das
inc
mov
xchg
sub
fisubl
dec
xchg
pop
in
xchg
xchg
lds
aas
and
test
mov
sub
lret
testb
adcb
pop
and
shrl
mov
pop
sbb
sbb
aas
xchg
incl
int
mov
aaa
dec
cmc
mov
jae
sub
dec
out
shlb
add
inc
repz
sbb
pcmpgtd
xor
arpl
push
mov
mov
push
mov
inc
cmpsl
mov
push
or
cmc
mov
adcl
dec
es
pop
rol
cmp
daa
xor
inc
push
fisubl
in
xor
mov
or
ljmp
xlat
inc
test
sahf
aaa
mov
pop
cli
stc
jmp
loope
rorb
pop
mov
sbb
pushf
int3
or
push
fists
add
pusha
int
lods
xchg
scas
enter
imul
sbb
pop
fs
test
xor
xor
cmp
imul
flds
jecxz
and
cld
cmpsl
cmpsb
in
imull
xchg
stos
xchg
mov
addb
fdivrl
mov
and
insl
mulb
pop
cmp
in
xchg
sub
sub
out
pop
mov
in
mov
inc
inc
outsb
lock
adc
jl
push
and
lods
xor
cld
sub
test
outsl
xor
into
xlat
insl
adc
sarb
push
into
xchg
sahf
lahf
add
andb
mov
inc
dec
cmp
fistps
lea
mov
rcl
lds
and
enter
fstpl
dec
test
pop
xorl
sub
cwtl
pop
jmp
add
push
dec
push
mov
jne
or
pushf
fs
add
inc
xchg
shlb
je
push
lcall
jmp
mov
jb
add
xor
adc
jnp
stos
les
mov
push
jmp
inc
pop
arpl
pop
push
imul
sub
insl
outsb
xchg
sub
out
mov
ret
inc
xchg
clc
push
push
arpl
hlt
cld
test
and
fidivrl
stos
psubusw
pmaddwd
or
and
cmpl
incl
add
lahf
hlt
push
cmc
cmp
test
mov
jmp
push
add
enter
adc
cmpsb
jbe
mov
dec
or
sbb
cltd
mov
or
mov
aad
dec
xchg
das
out
loope
js
xchg
jg
les
test
mov
or
inc
push
call
mov
test
mov
subb
pop
or
ljmp
push
sub
push
sub
push
mov
cmp
add
jle
push
fmull
cmpsl
in
or
or
ret
rclb
sub
dec
push
xchg
cmp
xor
cmp
xlat
lahf
dec
push
xchg
pop
jecxz
adc
xchg
sub
mov
rcr
pop
sbb
fists
jmp
in
sub
roll
loop
dec
lods
out
sub
in
mov
xchg
stos
aaa
iret
cmp
pop
xchg
xor
pop
lret
dec
sbb
xor
sbb
int3
cmp
lahf
push
adc
test
jle
mov
and
test
into
pop
into
add
lds
es
fbld
out
xchg
in
fcomps
xchg
dec
sahf
loope
sub
fs
repz
lea
in
or
into
adc
call
xor
dec
fldenv
out
xchg
fs
lret
stos
push
push
pop
inc
adc
mov
cmpb
mov
sub
movsb
clc
adc
fnstsw
dec
adc
push
xor
es
mov
sbb
orb
leave
mov
cmp
mov
and
jo
dec
iret
and
loop
and
jne
or
mov
pop
add
repz
inc
jle
pop
loope
scas
mov
add
stos
adc
fidivrs
mov
shr
stc
mov
add
adc
cmc
jo
sbb
out
sbb
mov
pop
dec
cmp
fidivrl
test
scas
mov
fcompl
inc
test
out
and
push
dec
rclb
xchg
jmp
sub
jae
sub
pop
mov
ja
test
sbb
and
test
jns
mov
cs
pop
in
ljmp
inc
mov
mov
mov
push
testl
insl
and
and
adc
sub
inc
je
insb
lock
loope
cmp
dec
lret
push
cmp
lods
dec
fnsave
or
cmpsb
and
pushf
fbstp
pop
in
test
nop
ds
and
hlt
sbb
mov
mov
and
testb
mov
push
cmp
imul
push
push
cmp
js
xchg
add
add
les
mov
inc
jne
or
call
in
and
lods
jno
jae
mov
ljmp
and
mov
add
fmuls
in
shlb
inc
fmuls
inc
mov
aas
mov
mov
mov
cmp
jle
fcoms
push
mov
sub
cmp
pop
enter
jmp
insl
or
pop
jl
mov
rorl
push
xchg
dec
ja
es
push
mov
adc
mov
movsb
movups
xchg
xor
xchg
jge
push
mov
lret
mov
mov
mov
dec
cmpsl
pusha
fcoml
iret
mov
lret
lock
lods
jg
insb
jno
jge
mov
pop
or
xor
push
xlat
jmp
cltd
loope
inc
xchg
and
jbe
sub
les
push
int3
or
xlat
test
call
std
pop
sbb
sub
hlt
imul
xchg
les
in
test
in
shrb
stos
push
movsl
dec
subb
jnp
fidivrs
iret
jecxz
mov
cwtl
cmp
cli
ljmp
icebp
inc
xchg
out
or
outsb
sbb
mov
aaa
jl
dec
and
fisubrs
das
movsl
mov
mov
lret
nop
sub
loope
movsl
cmp
lret
push
enter
outsl
test
pop
pop
adc
dec
jmp
or
push
les
out
dec
push
test
fs
and
es
mov
jbe
aad
add
imul
data16
lds
pop
cmp
xor
xlat
loopne
inc
rcr
sbb
idivb
ret
cmc
and
mov
cmp
jecxz
addb
cmpsb
pusha
mov
daa
jne
jbe
or
cltd
cld
mov
repz
sub
dec
sbb
jle
xchg
lods
sub
jge
add
imul
imul
clc
pop
sbb
push
push
mov
loope
pop
add
pop
jno
push
sub
jle
in
fwait
lahf
mov
ss
shll
sub
cmp
movsb
mov
mov
xor
pop
xchg
ret
imul
sub
out
jg
andb
ficoms
dec
mov
stc
or
cld
lods
push
lea
xchg
jl
test
mov
sub
lods
sub
adc
cmp
in
cmp
in
enter
sahf
push
pop
pop
mov
pusha
ss
clc
cmp
repz
adc
mov
out
ret
popa
adc
cmp
testl
add
push
cli
jmp
jp
test
and
and
xor
adc
xchg
and
jbe
inc
xor
push
imul
dec
adc
pop
cltd
clc
sub
add
scas
lods
xchg
ljmp
sbb
or
test
and
not
jno
in
pop
pop
scas
inc
cmp
jae
inc
or
repnz
mov
repz
push
out
jns
cmp
add
stos
or
xchg
or
repz
cld
int
inc
adc
in
aas
mov
cmp
or
movsl
xor
sub
pop
out
or
xor
rolb
jbe
xor
mov
dec
sbb
sbbl
jno
rcrl
sub
push
iret
sbb
sub
inc
jle
push
pop
fstpt
mov
cmp
scas
mov
fidivl
repz
mov
ljmp
and
sbb
mov
enter
test
or
das
xlat
insl
in
out
xchg
out
aas
inc
out
fs
in
inc
pop
test
jnp
cmp
jle
ss
push
inc
mov
mov
movl
je,pn
imul
xor
stos
add
cltd
addl
xchg
mov
jge
popf
xchg
fmuls
mov
mov
mov
dec
pusha
sub
and
mov
repz
ja
sub
push
mov
or
test
popf
mov
adcb
mov
out
stos
shrl
out
pop
jp
mov
bound
mov
jne
in
pop
leave
imul
jbe
stos
aam
into
mov
and
cmp
sbb
jns
pop
cmc
je
div
loopne
shll
lahf
sub
test
inc
xlat
mov
outsb
ja
int3
scas
mov
outsb
adc
jg
test
xorl
mov
and
or
jp
xor
out
add
subb
out
bound
cld
ret
mov
sbb
test
mov
pop
cmp
ret
std
xor
push
pop
les
add
iret
xchg
or
std
dec
popf
sbb
cmp
aam
fistl
jo
icebp
adc
or
rcrw
mov
loopne
fisttpl
add
xor
ret
aam
bound
pop
mov
insl
adc
inc
jecxz
jno
mov
jb
loop
xor
adc
sarl
mov
adc
mov
push
cld
aad
popa
orb
xor
scas
es
xchg
imul
mov
and
cld
jb
fildl
sbb
push
jb
mov
inc
cmp
mov
mov
lods
fsubrs
rclb
cltd
xchg
cltd
mov
rorl
push
sbb
aaa
cld
cmp
stc
adcl
dec
dec
into
movb
xor
jno
or
inc
loope
cwtl
xchg
idivl
pusha
xchg
bound
inc
push
jl
and
pop
ja
mov
cmp
sub
pop
je
popa
cltd
nop
fdivr
push
lret
pop
mov
and
ret
mov
mov
outsb
mov
push
mov
xchg
rcll
adc
test
loopne
xor
fdivrs
lods
icebp
cmp
pushf
dec
and
xchg
loop
inc
lods
cmp
test
stos
sbb
xorb
pop
pop
sub
mov
mov
fcompl
xchg
xor
sti
sbb
fs
sbb
lret
leave
cltd
movsl
cmpsb
jge
shlb
xor
out
dec
lods
or
sbb
subb
mov
sbb
dec
cmc
cmp
sahf
pushf
jl
jnp
and
mov
push
or
push
jnp
adc
jns
xor
xchg
push
jp
addr16
jg
xchg
pop
js
pop
lcall
xchg
mov
push
iret
or
dec
push
jecxz
cmp
mov
pusha
aas
mov
sti
push
lea
fidivrs
test
fwait
test
int
mov
sarb
mov
mov
inc
jmp
js
inc
js
push
fisubs
pop
nop
xor
mov
push
and
mov
jmp
cmpsl
out
push
outsb
sbb
pop
jb
push
add
std
fnsave
sub
xchg
test
data16
fcmovnbe
xor
ror
rcll
outsb
jno
lcall
sub
stc
loop
jbe
pop
int3
flds
repnz
sub
or
cmp
rolb
cmp
push
inc
push
rcr
cmpb
fistps
mov
out
lret
mov
inc
or
gs
ljmp
xchg
cmp
cld
popf
cwtl
aam
cmp
add
lods
xchg
inc
int3
dec
xor
mov
outsl
or
push
sbb
std
stos
mov
fisttps
repnz
or
cwtl
xor
loope
push
mov
push
mov
mov
jle
adc
stos
pop
roll
xor
rcrb
imul
fstl
mov
imul
jae
sbb
jo
out
insl
or
imul
inc
or
es
xorb
lret
lea
xchg
loopne
xor
or
aam
add
inc
cmp
mov
ljmp
push
out
jmp
scas
jle
loop
gs
add
push
stc
addr16
es
pop
mov
jmp
adc
mov
repnz
call
in
mov
jecxz
insb
test
loop
push
pop
jg
xchg
mov
dec
sbb
fnstsw
cmp
dec
push
jb
jmp
clc
lret
and
cld
idiv
add
pop
mov
enter
jl
lret
xchg
inc
sbb
push
shrb
out
fsubl
xchg
repz
xchg
loope
or
dec
scas
fwait
cli
dec
aaa
mov
mov
push
in
in
adc
sti
and
int3
dec
je
out
fsubs
cmp
push
pop
mov
xchg
sub
mov
fcom
mov
cltd
jge
into
push
sti
xchg
adc
in
push
fistpl
cmpsb
mov
std
jge
dec
aad
inc
xchg
mov
out
jns
inc
hlt
outsb
mov
frstor
sbb
rcrb
inc
jne
and
mov
push
movsb
inc
xchg
push
mov
fwait
dec
scas
shrb
icebp
push
mov
sbb
adc
movsl
testl
dec
mov
jns
iret
inc
mov
push
pop
clc
fstp
repnz
sub
aas
cltd
jl
and
xchg
pop
sahf
adc
lds
mov
jns
gs
fs
xor
xor
stc
fstl
or
xchg
or
xor
mov
je
or
fistpl
push
nop
dec
inc
lds
inc
cmp
in
add
mov
push
or
push
mov
test
or
imul
push
ljmp
push
inc
mov
jo
inc
push
dec
call
cmp
pop
xchg
jmp
psllq
frstor
jbe
pop
add
lods
jg
inc
lods
pop
jns
das
sub
mov
pop
mov
addl
push
xchg
movsl
test
add
ja
shll
push
sbb
inc
call
mov
lahf
cmp
add
gs
push
cmpsl
lret
mov
popa
adc
sub
or
or
mov
adcb
insb
and
lret
stc
jp
jb
dec
inc
ds
out
testl
aad
sub
xor
fidivrl
rclb
iret
daa
int3
dec
xchg
fisubl
or
and
cmp
pop
push
punpcklwd
fstl
add
jbe
into
jbe
into
add
out
addr16
shlb
sub
jecxz
aas
jle
jp
dec
dec
arpl
lods
push
pushf
int3
fwait
adc
mov
adc
jns
jg
cmp
lret
mov
cmpsl
in
push
shlb
cmp
mov
inc
pop
and
mov
mov
aam
imul
arpl
int3
adc
jmp
mov
mov
testl
pop
aaa
mov
sbb
sbb
pop
push
cmp
std
notb
jns
cltd
sub
mov
add
jecxz
inc
xor
pop
xor
icebp
cli
xor
test
call
sub
jne
push
nop
and
or
scas
sahf
sub
int
aad
cmpsl
je
addb
fists
stos
ds
adcb
sbb
jae
loope
call
iret
jmp
in
rcrb
jo
stc
mov
mov
pop
gs
nop
jge
fisttps
cltd
inc
inc
lahf
js
int
icebp
add
int
push
int3
cli
sbb
lret
push
pusha
or
inc
mov
jl
lret
loopne
xchg
inc
pop
stos
push
mov
or
adc
cmp
jp
dec
mov
insb
sbb
mov
in
insb
test
das
add
in
js
mov
nop
mov
xor
jno
int3
nop
les
shlb
pushl
aad
fs
push
iret
mov
arpl
lret
inc
cmp
add
outsl
icebp
cmpb
movsl
sbb
data16
daa
fcom
push
es
add
test
mov
or
push
stos
and
mov
out
mov
xchg
cmp
mov
out
dec
sbb
cmpsl
pusha
pushf
push
jg
pop
insb
cmpsl
sub
lahf
pop
mov
nop
jb
pushf
mov
and
das
lret
sub
js
add
fdivp
mov
jge
mov
add
push
test
andb
lret
notb
jb
jl,pt
icebp
or
push
lret
add
xor
adc
fidivrl
sar
sahf
fstps
inc
test
xor
shlb
negl
xlat
imul
mov
mov
dec
mov
pop
ja
jae
sbb
or
xor
into
sbb
and
ret
push
and
mov
hlt
daa
dec
int3
pop
push
pop
mov
pop
mov
rcl
mov
inc
xchg
test
scas
addl
in
out
fidivrs
mov
cltd
out
mov
mov
adc
or
jbe
push
cli
test
sub
push
mov
lcall
xor
jae
mov
cmc
sub
push
lea
aaa
mov
in
push
push
aam
add
inc
loopne
dec
cmp
sti
test
push
xor
cmp
fildll
xlat
icebp
adc
or
fstl
cmp
xchg
cmp
cltd
test
xor
xchg
xor
pop
dec
push
mov
xor
rcl
cmp
outsl
pushf
jnp
or
call
repz
rolb
cli
xor
pop
adc
jmp
movsb
mov
mov
pop
aas
push
pop
jo
orb
fnstenv
pop
jg
in
sbb
push
mov
mov
test
lret
mov
dec
cwtl
out
push
sub
stos
mov
adc
or
fistpl
add
mov
jp
das
data16
popf
mov
ja
push
test
mov
cwtl
inc
mov
add
mov
insl
mov
stos
mov
out
fwait
es
mov
pop
outsl
mov
mov
mov
jbe
xor
repnz
ret
imul
cmp
mov
xchg
xor
shll
stc
push
dec
fsubl
cwtl
in
pop
vxorps
push
mov
lock
xchg
dec
int3
sub
stc
in
or
mov
add
clc
cmp
cmp
scas
or
inc
mov
ljmp
inc
cmp
roll
adc
or
lret
fsubrs
cmp
adc
out
push
test
repnz
xchg
cmpsl
enter
movl
lcall
insb
mov
sub
inc
push
lahf
or
inc
dec
sub
clc
cmc
lock
je
divb
mov
or
movsb
mov
fstps
mov
mov
cwtl
mov
lahf
push
xchg
lcall
insl
xor
les
hlt
cmpsl
sti
daa
jb
mov
push
pop
popf
mov
or
mov
dec
pop
mov
stos
jecxz
daa
imul
or
xlat
lods
xor
cmc
mov
cli
cmpsb
pop
lea
add
dec
inc
subb
inc
and
in
dec
dec
sub
jns
out
push
sub
dec
dec
out
movsb
and
daa
sbbl
int3
jne
into
and
inc
dec
sahf
out
shrb
mov
pushf
repz
xor
dec
mov
mov
mov
int3
sbb
bound
mov
adc
dec
jo
pop
fbstp
cmpsl
cmp
je
dec
jo
or
jo
sahf
insl
pop
les
sbb
in
scas
jns
cmc
leave
cld
ja
cmp
push
testl
insb
sbb
push
push
inc
ret
in
xchg
call
daa
adc
xlat
xchg
dec
mov
push
fdivs
lock
loop
stos
cmpsb
or
popf
jo
subb
popf
test
push
ret
data16
leave
jbe
add
leave
ficoml
fiadds
imulb
nop
mov
mov
mov
aam
push
fdivr
lock
mov
test
push
add
xchg
push
jp
jmp
jae
fcomip
inc
xchg
pop
lods
movsb
or
sti
bound
fsubrs
outsb
mov
and
dec
shll
xchg
lods
aaa
jns
fwait
int3
adc
add
push
test
lods
hlt
push
popf
pop
pop
pop
pusha
push
xchg
pop
adc
adc
mov
rol
out
fcmovne
mov
jae
push
insl
inc
jae
imul
adc
mov
add
test
mov
jmp
shll
cli
fidivrl
mov
inc
movsl
sub
jae
popa
call
nop
add
repz
rol
sub
ss
jo
jne
sti
sub
sti
mov
std
int3
iret
xlat
mov
dec
das
test
orb
js
imul
insl
aaa
idivb
stos
xchg
inc
jecxz
adc
mov
inc
das
shr
and
insb
fstps
dec
push
fadds
leave
push
push
out
mov
jg
xor
pusha
daa
cmpsb
mov
sub
pop
inc
das
mov
push
dec
xchg
pop
movsl
or
push
cmp
inc
repnz
movsl
mov
or
sub
dec
sbb
sti
dec
stos
dec
sub
out
cmp
jecxz
sub
sahf
sub
mov
nop
mov
std
jno
mov
lock
and
xor
jl
mov
fsincos
lret
jne
subb
or
mov
cld
inc
mov
fildll
sahf
cmp
jo
mov
pushf
int3
outsb
mov
adc
mov
push
push
sahf
inc
add
adc
popa
push
icebp
lock
nop
xchg
dec
push
shll
mov
aad
push
popa
stos
adc
ljmp
cmp
insb
cmp
pop
jbe
push
ss
loope,pt
cmp
mov
rolb
lret
push
pushf
outsl
mov
add
xor
dec
cltd
cmp
fcomps
cmp
decl
pop
addr16
mov
mov
insl
sbb
pop
jbe
xchg
in
and
mov
adc
test
idivb
mov
rclb
ss
ret
les
lds
add
jle
sub
adc
out
xor
and
popa
mov
insl
dec
add
imul
repz
push
cmp
out
push
sub
out
cmp
add
xchg
jg
jb
pop
lahf
fdivl
push
icebp
mov
jno
imul
jae
orb
xchg
dec
sub
or
fs
mov
lods
addr16
sbb
out
in
xchg
jecxz
xor
iret
mov
fistpl
add
dec
xchg
dec
adc
leave
xchg
repz
fildl
xchg
sub
xchg
xor
push
icebp
cmp
cmp
or
arpl
mov
dec
aam
mov
mov
dec
callw
push
sbb
cmc
leave
dec
sbb
in
xor
fs
or
xor
aad
sarb
mov
fnstsw
mov
es
adc
or
int
aad
xlat
mov
outsb
lahf
xchg
push
popa
mov
dec
adc
sbb
push
lahf
inc
ljmp
pop
sbb
fsubrl
fists
or
jmp
mov
lahf
and
xor
mov
out
rcr
or
lods
hlt
mov
loopne
xchg
lahf
mov
and
push
lcall
sahf
adc
adc
push
mov
incl
out
pop
pop
popa
pop
dec
aaa
fcomps
xchg
mov
dec
mov
movl
cmp
dec
outsb
or
jns
push
fldl
lret
ljmp
lds
adc
loope
jne
insl
notb
adc
xchg
lods
ffree
push
sbb
pop
dec
subl
inc
adc
std
jecxz
movsb
leave
dec
cmp
je
dec
jo
sub
loop
add
aad
xchg
lds
dec
pop
pop
mov
je
mov
out
push
in
fisubrs
mov
sub
adc
jb
shll
mov
daa
icebp
push
or
push
adc
in
je
sbb
mov
fmuls
pushf
xchg
bound
xchg
inc
shll
xor
dec
scas
jp
jae
ret
sarl
fldcw
cmc
xchg
jge
xchg
movsl
mov
aaa
or
push
out
xchg
or
pop
and
jg
inc
insb
inc
ds
fdivrs
xchg
adc
xor
xchg
fstpl
icebp
push
push
sbb
add
dec
sub
push
xchg
std
push
leave
jbe
inc
arpl
and
xorl
adc
ret
pop
in
pushf
stos
mov
push
pop
shr
xlat
sahf
loop
rcll
out
je
push
arpl
pop
xchg
lock
out
negl
and
jmp
jecxz
jae
pushf
add
addr16
push
fs
push
pop
lods
mov
inc
push
cmp
cmpsb
cmp
ret
repz
ret
push
mov
xor
mulb
mov
sbb
pop
xchg
bound
cli
mov
repnz
xchg
shlb
ds
pop
aaa
in
hlt
fldenv
xchg
mov
xchg
push
loop
daa
xchg
cmp
and
int3
or
ret
jle
or
in
iret
pop
repnz
dec
pop
lea
pop
loope
add
mov
mov
movsb
inc
insl
ds
enter
int
call
pushf
jbe
mov
in
cmp
lods
scas
rorl
bound
xor
repnz
lock
sub
insb
int
push
shl
add
adc
mov
dec
lahf
add
sbb
mov
lea
or
mov
sbb
stos
mov
mov
mov
pop
cs
int3
sti
inc
aam
xorl
adc
pop
pop
fucomip
pop
fcmovne
sub
rclb
ja
xor
sub
ss
mov
nop
enter
das
mov
push
std
mov
or
sahf
lods
push
push
int
cmp
test
call
or
out
lock
dec
pop
gs
inc
faddl
push
js
aad
pop
cmc
and
mov
in
mov
xor
lcall
mov
std
push
leave
xchg
jns
cltd
push
out
xchg
ljmp
jb
xlat
or
xlat
fsubl
jo
push
test
jg
sub
pusha
aas
cltd
lret
fsubrl
and
xor
adc
sbb
mov
arpl
mov
out
add
jae
rorl
rolb
cld
imul
and
arpl
push
sahf
icebp
push
lret
and
ret
repz
ss
mov
pop
pop
mov
jb
sub
fsub
out
enter
cmp
cmpb
xchg
lcall
jp
jle
push
and
xchg
and
or
shlb
xchg
cmp
sbb
mov
or
fwait
shlb
or
pop
jecxz
mull
jno
sub
into
jne
xor
push
cmp
push
test
gs
es
mov
cmp
jbe
lret
mov
mov
mov
jl
mov
mov
sub
ja
lods
sti
jno
pop
sti
mov
lods
test
shlb
stos
mov
fisttpl
xchg
imulb
imul
jbe
mov
sub
test
aas
or
pop
in
sbb
mov
out
nop
int3
add
rcrl
jle
rol
cltd
jo
add
ret
xchg
sub
sbb
lcall
into
push
lods
lret
in
add
loopne
dec
mov
jnp
mov
pop
ja
sub
cmp
push
and
ds
mov
dec
pop
loopne
mov
mov
in
das
loopne
ds
xorb
dec
outsl
mov
dec
insl
mov
icebp
pop
xor
mov
pop
iret
gs
jg
test
xchg
lret
cmp
mov
rcll
add
xchg
out
push
push
imulb
and
add
sub
pushf
pop
sarl
fistpll
dec
dec
adc
push
ret
ja
adc
in
stos
xchg
enter
pop
gs
aaa
lret
xor
xchg
scas
cli
js
pusha
mov
pop
push
mov
stos
in
lcall
ret
adc
jl
xor
es
pushfw
mov
insb
pop
shlb
mov
pushf
adc
rol
jae
popf
pushf
int
lock
fisubrl
data16
jno
mov
inc
test
xchg
scas
pop
in
aam
jns
xchg
call
adc
sub
ja
dec
mov
jae
xchg
cmpsl
mov
push
sbb
push
jno
sub
mov
jecxz
mov
jne
cmpsb
das
rol
roll
sbb
orb
subl
movsb
or
jecxz
push
adc
push
test
mov
xor
addr16
add
inc
stc
negl
popa
sbb
and
mov
aam
lock
jp
aaa
sub
xor
into
jns
add
jp
cmp
push
in
xor
adc
and
stc
sub
scas
test
divb
inc
push
ret
add
jns
lds
jo
icebp
xor
dec
mov
mov
hlt
push
cmp
mov
dec
out
adc
lock
in
fld
adc
mov
xchg
xchg
and
cli
scas
pop
xchg
mov
stos
cwtl
fidivs
or
or
stos
jnp
rolb
sbbl
add
cld
out
or
inc
sarb
cmp
push
pop
jp
pop
push
add
push
push
jl
or
lret
das
pop
mov
xchg
or
outsb
sub
sub
in
fbstp
aad
imul
mov
pop
arpl
jbe
sub
lds
movsl
cmc
movsb
and
pop
outsb
xor
popa
call
dec
adc
scas
jl
add
ljmp
fisubl
shrl
test
mov
data16
xchg
xchg
mov
sub
xor
mov
outsl
imul
out
dec
inc
push
int
fdiv
enter
mov
adc
mov
adc
repz
cmpsl
mov
sbb
int
ret
out
xor
outsb
hlt
sarb
xor
mov
cmp
ljmp
adc
xchg
int
loop
adc
dec
sub
jmp
mul
push
fs
push
lcall
fwait
adc
cld
movsl
ljmp
sbb
insb
scas
ja
gs
outsb
mov
enter
jb
sbb
adc
cmp
add
push
push
mov
xchg
jne
mov
movsl
or
mov
xor
xchg
test
cmpsb
jmp
test
mov
push
outsl
jno
cmpsb
imul
add
or
push
idivb
or
ficompl
mov
jp
call
mov
adc
xchg
insb
inc
xchg
cmpb
imul
hlt
mov
mov
fucompp
inc
out
or
mov
mov
pop
test
movsl
movsl
ret
jnp
dec
sti
shll
je
loop
sub
pop
std
clc
out
int
or
cmp
sti
xorb
sub
fcmovnu
mov
rolb
sti
jmp
xchg
enter
xchg
cmp
out
bound
arpl
fisubrl
aaa
popl
outsl
scas
mov
mov
pop
aam
cmp
insb
hlt
and
lret
leave
cwtl
pop
dec
cmp
inc
fs
sahf
icebp
push
hlt
fs
inc
sti
pop
das
ss
adc
shlb
adc
or
xlat
xchg
in
sbb
aad
push
dec
loopne
sub
leave
sbb
pop
bound
rcrl
xlat
xorb
xchg
jno
dec
test
lret
scas
sub
fwait
enter
in
jge
adc
roll
cmpsb
adc
mov
repz
sub
rcrb
push
cwtl
stos
sbb
insb
icebp
out
insb
dec
dec
sub
xchg
or
pop
pop
sub
and
xchg
movsb
test
push
jnp
das
push
ljmp
jo
sarb
notb
subb
stos
fisttps
stos
or
xor
jne
mov
jno
out
push
aam
and
cld
je
gs
mov
fdivl
push
call
inc
mov
idivb
add
cltd
sub
xchg
jo
int3
or
push
dec
mov
push
stos
iret
dec
cmpsb
pop
jg
call
pop
clc
ss
and
movsl
xor
cli
cmp
fisubl
outsl
into
data16
ljmp
jmp
sub
or
loopne
mov
fisubs
int3
push
mov
xorl
bound
push
pop
in
fcoml
or
popa
and
js
inc
sahf
and
sahf
jle
xlat
adc
sub
mov
sbb
sub
sti
add
push
cmp
inc
pop
xor
and
imul
mov
add
jnp
cwtl
jo
xor
icebp
sahf
movsb
cmpsl
mov
xchg
xor
mov
mov
insb
fidivs
notb
sub
or
pop
imul
je
cwtl
sub
xor
pop
fdivrl
bound
push
mov
sarl
jo
sti
cmp
je
ret
cmp
es
and
dec
mov
in
jl
addr16
mov
mov
adc
add
sbb
dec
xor
enter
or
test
hlt
jb
out
repnz
lret
jo
hlt
icebp
xor
or
cmpsl
jle
lcall
out
pop
pop
mov
mov
mov
lret
mov
sbb
sbb
ret
sbb
movsl
mov
daa
loope
pusha
pop
inc
outsl
call
ret
dec
cmpsl
sbb
clc
push
xor
push
xor
sarl
sub
mov
fstpl
mov
lods
jbe
jl
std
ds
test
imul
out
push
das
dec
xchg
lods
pop
add
lods
cmova
aaa
stos
mov
out
bound
or
fcompl
jns
pop
sbb
notl
fstl
mov
ja
sti
hlt
cmc
in
cmp
and
repnz
in
out
movsb
pusha
out
mov
nop
imul
push
mov
jbe
inc
call
inc
or
filds
stos
js
push
lods
sbb
ss
adc
or
pop
pop
cmp
mov
addb
test
jne
sbb
imul
sbb
adc
adc
aam
repz
xchg
add
nop
jecxz
test
mov
mov
out
jecxz
popa
test
hlt
xor
and
xchg
dec
pop
bound
add
ret
add
lret
js
sahf
inc
das
out
cs
inc
addr16
scas
push
leave
fstpt
mov
jl
and
fsubrs
dec
add
int3
insb
popa
push
fdivr
pushl
test
mul
adc
pusha
test
test
mov
gs
cmp
mov
mov
gs
xchg
push
pop
xlat
insl
sbb
and
cltd
sbbb
inc
xchg
jne
popf
mov
outsl
jle
iret
in
cmp
movsl
dec
dec
mov
push
hlt
out
out
cltd
pop
aas
aam
xor
jecxz
inc
jnp
jl
cs
or
dec
sti
mov
xchg
lods
cmp
inc
mov
push
adcl
inc
mov
jl
call
mov
arpl
adc
jne
and
sub
jg
xor
xor
fbstp
add
adc
lret
sub
xor
or
repz
nop
mov
in
pusha
loope
dec
xchg
or
aaa
jmp
scas
or
jl
das
loopne
and
arpl
mov
push
das
push
xor
iret
sbb
adc
imul
cmp
test
adc
fdivrl
shrb
adc
icebp
fwait
or
xlat
das
sahf
jge
btc
xchg
xor
mov
test
jecxz
mulb
xchg
adc
mov
push
loope
loope
or
call
iret
out
lods
imul
inc
imul
in
jecxz
mov
jmp
sahf
mov
mov
mov
mov
xchg
or
push
test
popa
cmp
cltd
ret
push
mov
daa
cltd
pop
cmpsb
xor
data16
sahf
movsb
mov
mov
mov
push
sub
sbb
pop
cltd
sub
adc
sbb
dec
mov
lcall
daa
xor
jno
hlt
adc
xor
or
dec
lods
movsl
shrl
cwtl
je
std
mov
xor
xchg
stos
les
adc
sub
mov
cmp
scas
mov
iret
mov
mov
pop
mov
repz
add
add
adc
in
addr16
push
mov
scas
scas
xor
ljmp
dec
and
outsb
shl
xor
lds
shll
aaa
test
dec
movups
insb
cmp
lret
fwait
mov
push
jo
jmp
mov
mov
sub
fiaddl
pop
or
hlt
push
inc
ljmp
cmpsl
dec
sub
add
es
notb
jnp
push
dec
dec
lret
mov
adc
mov
loop
sahf
push
hlt
xor
lods
sub
mov
sbb
fwait
test
mov
add
xchg
or
hlt
dec
mov
adc
push
sbb
xor
adc
xchg
ret
out
dec
clc
xor
out
pop
mov
pusha
or
inc
and
pushf
sub
mov
push
imul
push
pop
add
pop
aas
in
xorb
sub
mov
mov
push
push
sahf
adc
push
repnz
stos
push
mov
cmp
call
outsb
pop
fndisi(8087
mov
stos
and
sbb
cwtl
pop
scas
dec
sbb
decl
mov
cmp
jno
xor
repz
dec
lock
pop
fsub
jle
push
lea
arpl
add
sub
lods
dec
imull
jnp
jg
jae
roll
cmp
pop
dec
jne
inc
push
push
imul
in
dec
loope
je
lahf
scas
lods
sub
lock
cmpsb
cmc
movb
lds
mov
cmc
movsb
imul
add
or
mov
or
inc
xor
pop
mov
test
and
std
xchg
jge
shlb
bound
and
sub
push
pop
sbb
jnp
sbb
out
outsl
xchg
pusha
test
rcll
push
add
divl
pushf
pop
pop
mov
movsb
xor
cld
ljmp
test
pop
mov
mov
add
add
dec
ljmp
and
clc
mov
je
inc
jbe
pop
mov
dec
sbb
adc
pushf
movsb
jecxz
movsl
ss
mov
subl
sub
jmp
xchg
les
xchg
sub
pop
ds
or
xlat
test
std
mov
lods
popf
out
mov
xchg
add
pop
or
sbb
xor
daa
seto
movl
dec
xorb
leave
sar
sbb
mov
stc
nop
sbb
test
sbb
push
mov
push
jo
mov
test
pop
inc
or
push
adc
test
xor
inc
mov
push
stos
jle
mov
jmp
pusha
cmp
push
cmc
mov
lods
xchg
and
lret
fistpl
lock
jecxz,pn
pop
popf
adc
cld
fs
mov
sbb
push
stos
ss
mov
notl
test
inc
jnp
sub
outsb
or
push
sbb
add
arpl
daa
push
pusha
in
sub
lahf
subb
xor
cmp
fwait
add
sbb
leave
cmp
mov
pop
in
mov
or
and
cmp
aam
mov
xchg
aaa
push
icebp
mov
mov
adc
fildl
cmpb
push
stc
or
xor
cltd
clc
xchg
pop
outsl
jge
repnz
and
inc
rcrb
inc
arpl
stos
push
aad
imul
sarl
insl
mov
aas
mov
jae
add
mov
mov
mov
xorl
dec
adc
das
mov
cmp
call
dec
pop
mov
fists
pushl
in
mov
mov
push
xchg
flds
pop
xchg
xchg
rcrb
pop
adc
dec
movsl
and
xchg
mov
sahf
mov
pusha
jmp
adc
adc
ja
aas
xor
mov
iret
out
sbb
ss
inc
pop
and
xor
push
out
iret
inc
sub
jo
xor
inc
in
outsb
into
and
xchg
mov
mov
mov
mov
mov
xchg
subb
jne
add
pop
out
arpl
enter
mov
add
cmpsl
shl
pop
or
pushf
xor
adc
lock
jmp
add
mov
inc
dec
setp
adcl
dec
lods
fwait
cltd
popf
fldcw
xor
cmp
push
in
roll
enter
jmp
xchg
pop
mov
or
jl
enter
mov
cwtl
sarl
outsb
into
outsb
add
xchg
pop
and
mov
jnp
mov
js
test
mov
xor
jbe
fimuls
sbb
push
les
dec
jle
add
out
push
dec
shlb
testl
mov
push
cmp
mov
je
pop
sbb
xor
iret
clc
lea
lods
xchg
cmpl
mov
sbb
dec
fs
out
out
xor
mov
call
mov
jo
mov
fs
stc
jne
mov
jne
jno
test
in
lods
mov
jo
mov
sub
int
daa
pop
js
mov
divb
fs
fidivs
adc
ret
mov
pop
aas
cmp
inc
xlat
and
xchg
mov
cmp
push
js
mov
pop
jmp
push
or
mov
outsb
xor
outsb
lret
repnz
js
pop
push
dec
jl
das
das
push
jns
outsl
cltd
push
add
sarb
lret
aaa
repz
popa
xor
aad
sub
mov
mov
or
mov
push
out
clc
mov
aas
mov
pop
enter
sbb
insb
add
jae
insl
icebp
ret
jle
mov
into
fs
cwtl
jns
addr16
orl
fucomp
or
and
jl
fcmovnbe
fcom
loope
faddl
lret
push
addl
outsl
inc
iret
stos
mov
lds
lds
js
jb
popf
test
pop
nop
mov
inc
lods
cmp
push
mov
mov
lcall
stc
les
jle
pop
mov
out
call
inc
mov
hlt
or
mov
add
mov
pop
das
jno
psrlw
cmp
fs
inc
and
idiv
add
aam
adcl
pop
dec
movsl
out
xor
mov
or
imul
addl
test
adc
stos
cmpl
cmpsb
cmp
scas
adc
mov
jns
addr16
or
shlb
add
jg
lcall
in
cmp
mov
jnp
lods
cmc
movsb
mov
sbb
xchg
push
aas
push
stc
and
enter
lret
jbe
mov
sub
push
in
jbe
loope
pop
movsl
lods
add
scas
push
push
and
push
inc
ror
ja
adc
adc
mov
or
add
xchg
cli
test
test
aam
add
add
mov
je
test
jp
mov
std
test
sub
stc
sub
lea
xchg
in
adc
bswap
arpl
mov
mov
es
push
jmp
icebp
fidivs
xchg
mov
ljmp
aad
outsl
cmp
add
jp
adc
xlat
shlb
addr16
mov
jmp
out
test
cmp
aam
sbb
mov
push
out
imul
mov
mov
loop
mov
jmp
lret
push
push
cmpl
repnz
rolb
pop
test
inc
ds
out
xor
or
mov
adc
jnp
std
or
test
jecxz
movsb
mov
jg
test
sbb
loopne
sub
inc
insl
add
push
dec
fdivp
shll
arpl
mov
data16
stos
in
push
xchg
pushf
mov
addr16
loop
mov
xchg
popa
xchg
xchg
not
sti
aaa
js
xor
sbb
dec
scas
dec
mov
rol
xor
fwait
orl
orb
fmull
or
and
out
scas
mov
jb
add
jns
sub
lcall
lahf
movsl
and
pop
mov
pop
out
mov
pop
mov
xchg
rolb
ret
xchg
lret
xchg
and
loop
es
ds
ja
push
mov
cmp
es
outsb
test
mov
cmpsl
lret
test
push
jbe
adc
sbbl
push
stos
xor
xchg
pusha
or
mov
mov
int
and
mov
jmp
mov
push
scas
cmp
mov
mov
aaa
pop
repz
xor
out
add
ja
es
pop
movsl
dec
pop
hlt
out
inc
mov
test
imul
and
imul
dec
scas
out
mov
outsb
pop
into
xchg
stos
ss
fcomp
lods
sub
xchg
ret
xchg
daa
mov
add
in
add
jmp
out
clc
dec
push
fmuls
pop
mov
roll
jecxz
scas
push
push
xchg
sarl
xlat
enter
cld
das
jns
mov
in
pop
or
fnstcw
jo
xor
mov
lds
sub
sbb
cmp
xor
sbb
fisubrl
jg
push
out
push
les
fistl
inc
xor
test
jbe
inc
mov
sub
sub
mov
shll
cli
xor
fcmovnb
outsl
pop
inc
clc
xor
pop
and
test
jg
mov
cmpsb
imul
fiadds
mov
xchg
in
mov
repz
aas
ja
ljmp
mov
stos
cmp
add
mov
cmp
mov
add
dec
jge
dec
insl
push
in
lret
add
xchg
push
pop
int
or
and
push
pop
mov
cmpsb
jne
cmp
adc
mov
int
das
outsl
pop
insb
mov
dec
subl
aaa
xchg
and
scas
mov
sub
cltd
push
cmpsb
cmp
mov
push
jae
aas
mov
sbb
sub
in
lret
int3
dec
pop
lea
jge
cmp
jge
or
jecxz
add
mov
lods
movsb
inc
test
mov
cmp
xor
cmp
xchg
cs
lret
mov
jns
in
pop
and
dec
adcb
mov
insl
fists
roll
mov
jno
jns
aaa
dec
out
push
xchg
sub
rclb
sbb
dec
and
test
mov
sub
mov
int
pushf
out
or
jmp
stc
scas
sahf
ret
in
adc
xchg
nop
dec
and
mov
jecxz
lock
inc
fstl
loope
push
dec
fsubs
cmp
movsl
std
pop
mov
mov
into
push
out
or
roll
lods
call
push
mov
in
loopne
cmp
loope
cmp
ja
ret
jge
pusha
xchg
enter
add
mov
fsubrl
stos
adc
pop
cli
xchg
outsb
rcrb
jmp
mov
xor
shlb
adc
xchg
sbbl
push
test
into
mov
lock
in
movsl
jbe
icebp
hlt
inc
test
mov
mov
rcrb
sub
decb
test
xor
add
lret
xchg
mov
xchg
rolb
insb
rolb
mov
in
out
shll
cmc
sbb
js
lods
std
mov
mov
gs
loopne
out
lret
xchg
jb
jle
cld
push
adc
adc
test
and
sahf
std
cmp
adc
imul
sti
fldenv
icebp
dec
mov
lock
xchg
movsl
loope
adc
sar
sbb
push
jnp
mov
cmp
push
sub
push
push
cmpsb
and
xor
mov
push
ljmp
cmc
insl
je
movsl
cld
test
jno
aad
inc
mov
cwtl
mov
mov
jg
fcomi
and
sub
cmpsb
push
in
mov
aaa
lahf
xlat
movsb
sub
out
push
xor
jle
aad
inc
aad
fdivr
stos
lds
stos
mov
sahf
jg
fmul
add
das
bound
jb
xor
into
pop
adc
jb
lods
repnz
insl
movsb
aam
xchg
fs
lahf
les
mov
pop
sbb
sub
pop
xchg
and
loop
fsubrl
jbe
nop
test
or
ds
adc
mov
lret
pop
cmp
cmp
enter
pop
xchg
rcrb
cmp
shll
dec
and
xchg
cli
movsl
xor
mov
mov
mov
or
mov
ljmp
test
aam
out
lahf
xlat
leave
mov
lods
push
ljmp
mov
xor
loope
mov
sbb
adc
mov
sahf
into
shl
jbe
rorl
xchg
insb
jo
push
mov
lds
iret
pop
lcall
adc
cmpsl
cmpsl
rorl
ds
jg
or
aas
xchg
fwait
push
leave
ljmp
mov
push
rcrl
or
mov
cmpsb
imull
mov
shll
jmp
movsl
jmp
test
jle
fcoml
fistps
cmp
pop
gs
movsb
push
jno
jo
mov
and
clc
testl
push
cmp
mov
pop
ror
adc
pop
pop
mov
incb
add
dec
and
xchg
pop
inc
sub
daa
sbb
jne
fs
out
movsb
dec
int3
mov
push
ljmp
xchg
test
or
cli
pop
mov
stc
shll
xchg
mov
cmpsb
sub
rcrl
push
push
cmpsl
cmp
mov
mov
loop
push
jne
mov
xorl
or
clc
pop
jbe
das
rcrb
or
mov
das
cltd
adc
test
add
jns
xor
loope
sub
cmp
inc
je
push
loopne
pop
out
call
test
cmp
in
and
sbb
mov
pusha
sahf
mov
mov
pop
inc
pop
scas
adc
icebp
cmp
jne
inc
or
cmp
lret
xor
les
pop
jns
shlb
fcmovnb
push
aas
xor
pop
leave
popa
mov
or
xchg
mov
mulb
es
pop
shr
xor
push
negl
and
or
aam
stos
xchg
faddl
loopne
fs
sbbb
xchg
add
xor
js
cmpl
inc
and
cltd
lcall
or
and
test
dec
iret
mov
jmp
push
add
jmp
and
pop
xor
fwait
cmc
pop
cltd
nop
push
inc
gs
int
xchg
push
sub
push
or
or
dec
out
add
rol
jo
aas
fiadds
orb
shlb
incb
sub
mov
pop
xchg
add
mov
cmp
enter
addr16
data16
out
cmp
fs
lret
push
xor
inc
out
cmp
ret
xlat
outsl
adc
pop
fsubs
jb
mov
shrl
xor
pop
lahf
subb
jmp
inc
inc
xchg
int3
mov
lock
mov
test
in
xchg
fsub
daa
jo
hlt
rclb
or
and
mov
mov
test
pop
bnd
sub
sub
lea
aaa
sub
sub
mov
fwait
lds
stc
lods
lock
lret
fs
int3
push
sbb
loop
repz
mov
out
es
mov
int3
loop
jo
outsl
or
push
mov
mov
mov
cs
mov
pop
clc
mov
adc
ja
test
gs
icebp
xor
fnstcw
or
mov
dec
add
add
jno
pop
stos
imul
fwait
cld
add
mov
mov
cmpsb
filds
arpl
jp
iret
sti
loopne
add
mov
addr16
sbb
push
mov
inc
push
pop
inc
add
xor
xchg
out
mov
ja
pop
mov
push
sahf
subb
jbe
lods
jl
addr16
in
push
mov
stos
fimuls
notb
lds
cmc
xchg
inc
loop
jo
jg
dec
pop
std
lret
jb
inc
mov
ljmp
mov
std
imul
xchg
shr
lods
loopne
inc
out
dec
aam
add
adc
jae
mov
xchg
outsl
mov
mov
cmpsb
into
sti
fadd
push
mov
inc
jbe
fstps
data16
and
in
repnz
out
inc
xorb
inc
orl
movsl
fldcw
dec
pop
mov
jecxz
jbe
or
hlt
jecxz
xchg
pusha
das
jne
lods
dec
dec
dec
bound
imul
lods
sub
lds
xchg
fwait
mov
aaa
cmp
or
dec
in
xchg
ret
pop
call
fstpl
jno
insb
int
jg
push
jecxz
rcll
call
jne
subb
mov
int
pop
jo
mov
mull
cmp
adc
in
ss
push
cmp
ljmp
push
and
mov
jo
lea
adc
popa
xchg
dec
xor
xor
lock
ficomps
xlat
sub
das
in
push
out
xor
lahf
pop
cmp
fs
mov
cmp
xor
cmp
shll
aam
js
mov
cmp
mov
dec
je
in
push
in
and
sbb
lds
or
iret
push
aaa
dec
xlat
in
fsubs
xchg
lahf
pusha
push
imul
sub
cmp
and
push
xchg
xchg
dec
in
push
repnz
shrb
sub
daa
jecxz
or
rolb
shld
push
jno
push
jl
dec
push
cwtl
mov
inc
sbb
and
cmp
jbe
adc
inc
call
inc
insl
jge
xchg
xchg
scas
aad
xor
in
mov
dec
lret
popl
clc
xor
xchg
jmp
ret
out
xchg
fwait
jbe
push
das
movsb
add
or
pusha
jge
mov
xor
stos
or
adc
cld
or
push
out
or
pop
inc
sub
inc
sub
mov
and
test
sti
ret
xchg
enter
cmpl
addl
loop
dec
lods
jne
add
sub
mov
inc
jg
pop
in
shrb
in
jb
les
mov
negb
fwait
loop
mov
xchg
add
lahf
sub
sahf
bound
insw
enter
out
je
shrb
enter
cwtl
into
stc
pusha
call
call
sub
xchg
pop
push
mov
sti
test
mov
es
fimuls
nop
in
mov
sbb
pop
inc
sahf
pop
mov
sbb
mov
stc
jne
jae
adc
in
cmp
out
pop
std
leave
lcall
xorl
lret
adc
dec
dec
test
mov
ret
das
imul
stc
adc
add
inc
cmpsb
sti
pop
adc
dec
les
lods
inc
xor
in
jmp
inc
xchg
pop
jle
test
cmp
mov
jns
int
mov
mov
fisttpll
cmpsl
mov
mov
sahf
iret
push
in
mov
sbb
loop
and
shlb
imul
into
jp
mov
outsl
dec
ja
mov
sub
mov
aas
out
es
test
cld
std
imul
sti
imulb
lea
clc
sbb
cmp
jl
fstpl
lret
pcmpeqd
mov
shrb
xor
bswap
inc
jecxz
xchg
fs
add
add
andb
fnstsw
int3
data16
sub
jbe
leave
mov
inc
shl
cmp
pop
ljmp
shlb
call
imul
rcrb
xor
pop
dec
push
inc
or
mov
pop
adc
pop
sub
jae
dec
mov
dec
fcomi
adc
test
push
mov
inc
inc
inc
subb
sub
inc
sub
xor
xor
cmp
jb
push
pushf
lret
aad
leave
sarb
jnp
mov
sbb
mov
inc
or
sahf
adc
cmp
mov
stos
rorb
out
jp
and
rolb
inc
cmp
pop
bound
nop
clc
pop
xchg
push
in
repnz
xor
out
add
fmulp
mov
inc
pop
and
cmp
mov
add
sub
js
repnz
pop
fdivrs
test
push
xorb
inc
jno
sub
lret
rorb
xlat
lods
jb
xor
daa
pop
arpl
call
xor
test
pop
aam
dec
je
loop
loope
sub
mov
and
pop
out
outsl
mov
pop
fisttps
js
cmpsb
adc
cmp
or
sbb
adc
in
fimuls
pop
inc
out
out
xchg
sbb
mov
pop
cmp
add
in
sub
mov
insb
push
or
ja
movd
scas
xorl
inc
test
out
adc
cmp
mov
jl
jne
in
inc
inc
sbb
test
test
inc
rcrb
in
mov
push
sub
dec
outsb
jp
stos
mov
in
inc
jle
dec
mov
lret
xlat
loopne
call
mov
mov
or
pop
outsl
aaa
mov
lea
pushf
flds
aad
mov
test
scas
imul
cmpsb
xchg
hlt
xchg
adc
pop
sub
cmpl
sti
ret
jae
mov
jbe
jmp
test
sub
cmp
adc
jns
adc
gs
and
cmc
adc
jl
lret
loopne
mov
ja
ljmp
sbb
add
enter
jnp
sti
or
pushf
les
scas
inc
repnz
cmc
les
outsb
sbb
out
pop
sub
mov
xchg
icebp
int
cmp
mov
inc
jne
cmc
lcall
pusha
sub
fdivl
les
sbb
xor
push
sbb
fildl
pop
les
jno
mov
in
ficomps
popf
fwait
xchg
mov
add
xlat
lret
cmp
enter
or
add
aam
je
hlt
add
ret
mov
cmp
in
aad
inc
fldenv
lret
inc
adc
mov
call
adc
pushf
mov
mov
dec
lea
dec
mov
pop
cmp
jmp
cmpsl
lods
adc
pop
aam
pop
xchg
stos
mov
ja
push
les
sahf
imul
push
aaa
sub
cmpsl
push
inc
push
daa
loope
movl
lds
cmp
ja
and
pusha
out
js
jnp
subb
dec
cmpb
push
rorl
sbb
push
push
jmp
scas
imul
out
ja
dec
sbb
in
dec
or
sti
out
xchg
adc
fyl2x
fs
dec
push
or
por
or
int
cmp
pop
stos
imul
rclb
xchg
mov
xor
inc
std
out
add
lock
xchg
test
das
test
stos
and
adc
in
stos
scas
xlat
enter
inc
aaa
shl
scas
add
popa
cmc
fsubp
call
hlt
pop
popa
dec
ret
pop
sbb
pop
sbb
dec
rcr
push
push
ljmp
iret
test
call
mov
mov
jne
lea
sbb
jmp
cltd
pop
xor
negl
jecxz
hlt
and
xchg
jnp
call
fisubs
sahf
jmp
test
jge
fnstcw
das
push
iret
loop
ret
pop
lods
in
or
fwait
jo
and
jns
repnz
repnz
inc
outsl
or
inc
in
mov
aaa
and
out
rclb
inc
outsb
ret
mov
pusha
nop
adc
mov
outsl
rol
fwait
inc
fstps
push
lods
inc
sbb
shrb
jbe
add
or
shl
in
xchg
lods
pop
out
or
sub
jae
xchg
push
hlt
shll
sti
and
and
and
and
jmp
fistps
xchg
leave
push
and
insl
jp
or
sarb
mov
js
inc
mov
mov
push
imul
push
xlat
adc
sub
jb
jg
imul
lods
bound
pop
mov
cmp
ss
push
mov
insb
ret
adcl
mov
jecxz
push
mov
and
daa
xor
mov
inc
stc
add
inc
xor
hlt
flds
repnz
jge
jmp
inc
fistpll
outsl
add
lret
stos
loope
movsl
mov
out
lock
or
sets
sub
sub
lock
sub
stc
jmp
ja
inc
xlat
push
cld
popf
in
std
dec
mov
shlb
inc
rorb
stc
xor
mov
outsb
out
pop
lock
outsb
out
jle
xchg
and
imul
test
das
pop
imul
cmp
mov
mov
fwait
stc
out
test
loop
xlat
out
sub
in
rcrl
popf
icebp
mov
movlps
lret
or
xchg
xchg
movsl
into
pop
stos
pop
gs
imulb
lahf
iret
mov
sub
cmp
adc
push
fcmovu
shrb
outsl
mov
mov
ljmp
incl
fldt
push
cwtl
pop
sbb
push
xorl
cmp
cld
das
sub
mov
shrb
out
xchg
cltd
es
inc
push
dec
in
mov
aas
xchg
jmp
aas
lods
lea
xchg
sub
popa
das
adc
sub
nop
ljmp
or
jp
sbb
dec
mov
mov
je
inc
dec
add
xlat
inc
sahf
pushf
pushf
pop
mov
push
add
dec
cmpl
push
sbb
sbb
push
jg
out
mov
pop
sbb
jo
push
push
fs
movsb
pop
daa
insl
leave
xor
xchg
adc
inc
out
xchg
cmp
cmpsl
mov
mov
xor
out
lock
cmpsb
stos
shrb
scas
jge
pushf
lcall
int
or
das
adc
xor
imul
movsb
push
mov
movsb
xchg
stos
adc
inc
xchg
ret
cwtl
xchg
addb
dec
sub
mov
scas
jnp
jmp
xor
stos
pusha
add
arpl
xchg
into
cmp
loop
out
int3
insb
cmpsl
pop
cmp
mov
fsubs
cmpsl
ret
outsb
jns
add
cmp
mov
xchg
lahf
mov
xchg
push
mov
movsb
jbe
sub
mov
lcall
jl
mov
jle
xchg
fsubrl
dec
mov
cmpsl
xor
leave
push
movsb
stos
add
ret
loop
cvtdq2ps
test
jnp
sub
xchg
out
or
aas
mov
xchg
xor
mov
test
mov
sbb
fwait
stos
imul
push
nop
inc
cltd
mov
jecxz
je
pushf
cmp
push
mov
push
xchg
hlt
jg
or
aam
xchg
sbb
or
ljmp
movsb
jle
leave
rcrl
push
push
idivl
mov
pushf
dec
movl
aas
sbb
push
push
or
add
sbbb
call
popa
loop
mov
mov
cmpsb
out
inc
xor
jb
aaa
in
and
or
push
xchg
sbb
jno
scas
outsb
je
fisubrl
xor
push
mov
pop
pop
jle
icebp
mov
jno
std
xchg
cmp
or
loop
push
inc
sub
in
cmp
dec
xor
dec
lods
pop
lods
mov
into
cmp
push
ret
mov
ret
dec
mov
rolb
push
jg
xchg
js
pop
jmp
dec
cmpb
cltd
mov
pop
int
mov
pop
xchg
sub
js
add
outsb
movsb
in
mov
gs
add
jmp
scas
inc
jg
sbb
lret
xor
sub
inc
dec
push
inc
mov
xchg
je
mov
enter
adc
sbbb
fisttps
jecxz
adc
pushf
or
sub
lcall
push
scas
scas
sub
rorl
out
xchg
jmp
mov
imul
push
xchg
adc
mov
repz
out
test
sub
sti
or
testl
mov
int
data16
fsubrl
push
ss
pop
popf
jmp
pop
dec
xchg
sub
xorl
out
or
lret
mov
mov
js
mov
pop
inc
inc
pop
cmp
jno
testb
cmp
hlt
testb
push
push
xchg
lods
xchg
lret
cs
test
js
rolb
inc
lods
add
into
xchg
sti
andl
xlat
arpl
mov
mov
add
test
push
and
mov
sub
mov
and
mov
dec
sbb
int
mov
mov
daa
xchg
sahf
das
sub
jl
or
mov
mov
pop
int
add
pop
dec
cwtl
dec
sbb
dec
lcall
dec
mov
xlat
movsl
movsl
sub
jns
push
jmp
dec
out
cwtl
into
fmul
sbb
lods
ret
lods
mov
or
repnz
mov
js
out
sbb
aaa
xchg
xor
repnz
mov
adc
fstpt
clc
sbb
and
jno
dec
mov
push
jns
insb
int
xchg
popa
pop
add
cmpsb
scas
and
fistpll
lcall
xor
sti
mov
imul
jmp
cmpsl
gs
in
aaa
push
or
scas
aas
or
divb
in
test
cmp
or
aad
or
je
in
cmp
pusha
arpl
dec
mov
pop
inc
mov
xor
cmpsb
pop
mov
xor
pop
ficompl
dec
inc
mov
lods
jecxz
xlat
and
cmp
out
repz
xchg
insb
ja
pusha
fldenv
xchg
xchg
sti
mov
push
sub
fs
jno
sbb
mov
or
jo
or
nop
inc
clc
push
push
dec
cmp
push
mov
lcall
adc
xchg
xchg
sbb
cs
or
lock
lret
dec
sbbl
pop
fiadds
inc
sub
sbb
xor
push
push
pop
xchg
pop
sub
in
or
ret
sbb
sbb
xchg
jge
xor
out
iret
das
push
dec
loope
outsb
mov
push
mov
pushf
push
sbb
pop
sub
aad
fcmovnbe
shlb
jecxz
xchg
push
imul
js
stos
lret
imul
mov
adc
jnp
or
shll
in
mov
or
pop
cli
dec
or
test
es
shrl
fstpl
outsb
bnd
xchg
push
sbb
je
xchg
jne
push
idivl
mov
cmp
lea
xor
dec
mov
shr
stos
mov
xor
sub
rcll
out
add
mov
xor
mov
fwait
enter
enter
xchg
sarl
mov
mov
ds
push
lcall
jno
xor
lods
mov
mov
shlb
cmpsb
and
ret
push
sub
loopne
fidivl
outsl
sub
arpl
dec
in
jb
mov
jecxz
shl
push
into
hlt
jmp
or
rol
xor
ret
add
aas
jp
and
push
clc
shr
mov
mov
sub
in
incl
nop
mov
pop
rcrb
out
out
imul
iret
or
fistpl
mov
xor
mov
cmp
adc
mov
push
aas
cs
fcmovbe
leave
sbb
test
adc
ss
in
test
pop
lret
xchg
popf
mov
pop
push
jge
fs
lcall
stos
mov
sbb
jp
jle
and
pusha
jno
pop
or
fisttpl
in
pop
add
lcall
incl
mov
out
dec
stos
push
pop
lods
loopne
xchg
mov
bound
sbb
mov
xchg
rcll
stos
push
or
sbb
cmc
dec
xchg
ss
daa
std
and
mov
lahf
insl
mov
sbb
and
inc
ret
test
into
pop
sbb
andb
scas
xor
fst
add
xor
stos
popa
movsl
pop
rdmsr
push
or
ficompl
sahf
pushf
lret
sub
and
adc
xchg
nop
lea
push
repnz
cmpsl
adc
push
cmpsl
sub
js
daa
into
enter
fsubl
push
push
cmc
pushf
fildl
push
loopne
mov
ljmp
mov
test
sbb
outsb
imul
mov
or
push
aaa
sti
popl
jne
pop
daa
xor
fldcw
loopne
das
dec
push
sub
adc
push
loope
add
int
xchg
jge
push
and
and
cmp
ja
inc
shlb
in
xchg
movsl
sub
jb
and
lahf
loope
and
xlat
and
mov
mov
xlat
xor
mov
xchg
dec
ljmp
pop
mov
test
cmp
cltd
jae
mov
insb
shll
push
cmpsl
stos
repnz
sar
or
push
jns
push
call
lret
push
xlat
or
dec
push
mov
dec
ss
cltd
out
lods
pop
xor
cmp
insl
sub
dec
jecxz
ret
xchg
jne
cmp
xor
cld
push
mov
inc
push
mov
push
jnp
lret
cmp
sub
loop
cmpsb
jmp
cmpl
popa
cld
jge
lock
decb
mov
stos
fnstcw
cli
mov
out
mov
pushf
icebp
cwtl
dec
lret
pushf
je
xchg
repz
xchg
xchg
dec
stos
movsb
sub
movsl
xchg
nop
out
pop
in
gs
repz
sub
adc
adc
adc
leave
mov
addl
dec
scas
and
fidivl
in
pop
mov
cwtl
pop
sub
ss
int3
scas
dec
mov
pop
fs
mov
jns
clc
sbbb
fdivs
outsb
shlb
hlt
stc
loope
into
mov
pop
arpl
arpl
je
mov
mov
scas
jl
jns
inc
lds
stos
mov
push
push
mov
outsb
adc
jo
pop
sahf
pop
sub
stos
js
and
leave
mov
std
push
ja
inc
jge
inc
jae
lcall
xchg
mov
outsb
sbb
test
orb
inc
or
dec
jb
enter
aad
shl
dec
cli
pop
imul
pop
pop
div
add
jb
jnp
inc
cmp
test
idivl
cmp
pop
pop
rcrl
add
push
shrl
stos
or
loope
hlt
rcr
outsl
lock
mov
dec
jle
dec
dec
or
lods
stc
aam
filds
xchg
jecxz
or
inc
xor
jo
adc
int
xor
push
stos
jae
mov
mov
nop
imul
push
imul
hlt
cmp
xchg
and
dec
mov
xchg
fs
shll
icebp
cmc
mov
lcall
and
shrl
adc
inc
jbe
or
out
ds
cmpb
popl
cmp
pop
ss
mov
faddl
out
out
mov
pop
scas
mov
bound
decl
dec
sub
pop
fmul
add
cwtl
repz
scas
mov
mov
popf
imul
jl
data16
adc
dec
sub
cmp
bound
xchg
rclb
xchg
int
lds
mov
enter
aam
movsb
xchg
icebp
aas
and
xchg
mov
rorb
adc
mov
shll
sbb
jg
fstpt
vcvttsd2si
cmpsl
adc
popa
xor
in
out
xor
or
xchg
or
xor
adc
dec
out
gs
push
mov
xor
xchg
test
push
ret
jno
push
push
mov
outsb
xlat
mov
inc
mov
stos
gs
xchg
jge
movsb
pop
inc
shlb
add
sub
mov
cmp
jne
lret
scas
imul
ret
shl
in
popa
decb
inc
popf
fisubs
cli
rolb
add
jg
mov
cmpsb
push
push
xchg
dec
sar
addl
call
sub
push
fildl
sub
lds
pop
or
sub
pop
xlat
out
cmpsl
or
or
xchg
sub
iret
xlat
push
in
pop
roll
jge
out
or
pushf
dec
dec
je
mov
jmp
scas
int
xchg
or
xlat
mov
daa
cmp
inc
iret
cli
jo
das
fsubrl
pushf
jnp
aad
gs
push
inc
xchg
adc
mov
in
cmp
andl
rclb
daa
pop
xor
scas
jno
in
fistl
loopne
push
add
mov
xor
loopne
or
xchg
xchg
fcoms
pop
mov
fcmovbe
aad
pop
cld
movsb
push
cli
test
cwtl
in
mov
xor
dec
cmp
add
jno
adc
fsubrs
insb
test
sub
sti
xchg
push
xchg
inc
sub
insb
and
sbb
push
jbe
adc
fimuls
test
loope
mov
popa
mov
jp
jb
bound
rcll
jmp
popf
jp
loope
sarl
xor
mov
int3
and
push
or
test
inc
outsl
bound
add
xor
sub
fadd
shlb
fcompl
fnstcw
pop
lods
push
xchg
es
cwtl
leave
int
mov
orb
aas
daa
lcall
data16
cs
pop
mov
jne
es
push
cltd
jo
fidivs
push
lock
es
dec
sbb
lret
daa
pop
stc
sbb
rorb
push
sahf
mov
push
pop
jge
jle
xchg
shlb
cmpsb
ja
add
mov
ds
js
dec
mov
fsubrs
dec
stc
mov
cltd
xchg
pop
icebp
dec
inc
add
dec
out
aaa
vcvtsi2sdl
mov
xor
in
sbb
out
xlat
cmpsl
jge
insb
and
mov
cmpsb
sbb
push
fwait
bound
sbb
and
loopne
add
outsb
jbe
mov
mov
cmp
cmp
xor
add
cld
mov
in
cld
cmp
ss
loope
mov
add
sbb
push
mov
push
test
sub
and
out
cmpsl
sti
xchg
sub
insb
mov
or
out
xchg
jg
imul
call
std
sub
sub
xlat
in
lcall
mov
xchg
xchg
in
ret
fldl
jnp
call
adc
dec
mov
clc
cmc
cwtl
scas
sub
clc
icebp
cltd
cmpsb
push
push
lret
stos
inc
add
mov
pop
mov
icebp
lods
pop
push
pop
es
stos
push
jne
lea
jb
jae
aam
and
sti
ret
dec
or
sbb
pop
inc
adc
andl
pushf
imul
aad
add
dec
in
popa
push
hlt
imulb
jl
mov
adc
mov
ret
add
mov
aam
fcoms
lds
repz
sbb
or
sti
orb
mov
pushf
rcll
mov
addr16
icebp
fcoms
mov
out
ljmp
pop
fiaddl
xor
jns
decl
enter
sub
imul
jae
fwait
outsb
mov
pop
jne
fwait
add
in
pop
pop
pop
inc
mov
pop
movsb
test
adc
adc
dec
loop
cmc
pop
sbb
jl
add
xchg
mov
jns
fwait
mov
or
lret
je
push
lcall
inc
cmp
aas
dec
sbb
stos
test
xor
push
scas
cmpsb
movb
imul
aam
add
jg
popf
sub
mov
sti
in
movsw
fstps
pop
addb
js
lret
sbb
cmpsl
dec
mov
cltd
sahf
jbe
loopne
sbb
inc
and
and
adc
loop
cmp
and
arpl
lds
sahf
cli
dec
adc
enter
stos
xor
repz
jge
sarb
xchg
loop
push
test
nop
lret
fs
divl
push
cmp
mov
jecxz
fwait
push
je
insl
inc
pop
adc
in
inc
add
repz
cltd
adc
adc
or
xchg
sar
addr16
add
mov
neg
pop
andl
jb
test
push
ss
jl
dec
xor
jmp
add
dec
addr16
xchg
cmc
pop
mov
aaa
push
inc
pop
and
mov
add
sbb
fimull
mov
inc
js
arpl
cmp
out
cmp
pop
xorl
pop
push
stc
fisubs
mov
mov
pop
jno
sti
and
xchg
int3
fsubrl
push
jns
in
inc
pop
xor
stos
xchg
mov
sbb
cmpsl
push
js
sbb
cmp
xor
sarl
loopne
xchg
daa
ret
imul
aad
outsb
push
lods
xor
mov
popa
lret
pop
in
pop
sub
add
xor
add
int3
insb
iret
test
aas
sub
test
imul
andb
add
cltd
jae
lret
bts
lds
sub
mov
int
lea
fdivr
add
std
sub
fld
clc
cmp
in
loopne
out
sub
mov
add
scas
dec
pop
jmp
push
pop
pop
add
mov
mov
add
mov
scas
sub
lret
pop
rorb
push
sub
push
in
stc
push
mov
rorb
test
xchg
jnp
loope
xchg
ret
xchg
aad
shlb
xchg
repnz
pop
pop
xchg
inc
fnsave
test
test
ds
push
clc
jge
imull
jbe
cmc
xchg
fmull
add
push
push
mov
and
fstpt
shll
lock
pop
repnz
mov
add
gs
adc
cwtl
or
imul
dec
pop
jnp
leave
xor
push
pop
mov
or
das
or
aaa
sub
mov
mov
cltd
sahf
lods
es
imulb
sbb
push
sub
in
mov
mov
ja
in
jmp
sbb
dec
inc
xor
xchg
lcall
idivb
mov
inc
add
mov
mov
jle
lock
fimull
icebp
xchg
inc
movsb
sarl
imul
loop
dec
lods
scas
sub
daa
pop
mov
cli
iret
jnp
loop
jbe
bound
enter
andb
xchg
or
ja
mov
faddp
pop
push
pusha
fisttpl
in
push
sub
xchg
repnz
outsb
adc
jg
in
repnz
cmp
mov
xor
arpl
mov
mov
nop
and
xchg
cmpsl
add
sub
and
sti
jle
add
pop
movsl
add
jp
xchg
popf
rol
push
imul
loope
dec
out
dec
test
xor
loopne
adc
inc
jb
ret
leave
adc
and
cmp
mov
shr
or
fildll
or
mov
xchg
xchg
jb
jg
mov
loop
in
je
jb
clc
pushf
test
popl
xchg
or
mov
push
sbb
and
in
test
jae
pop
add
and
pop
mov
pop
popf
and
push
sub
sbb
movb
pop
add
xor
popa
icebp
inc
enter
adc
dec
inc
mov
cli
xor
aas
scas
loopne
repz
mov
or
xor
mov
lock
subl
sarb
xlat
outsl
iret
gs
fnstenv
push
stos
hlt
lret
cli
dec
sar
dec
adc
push
add
out
insl
xor
and
mov
add
mov
mov
pusha
iret
or
push
jb
mov
cmc
test
or
or
pushf
add
inc
xchg
cwtl
jo
mov
mov
pop
jmp
jne
dec
mov
pop
das
jecxz
xorb
in
test
xchg
and
repz
movsb
sbb
arpl
xchg
loop
icebp
jge
xchg
inc
sbb
xchg
dec
subb
jp
dec
arpl
aas
sti
out
imul
pusha
mov
add
aas
adcl
movsl
push
and
jns
push
push
mov
push
xlat
adc
rolb
pop
xchg
xchg
stos
sub
lret
push
inc
rclb
or
dec
or
jecxz
cwtl
inc
lret
bound
divl
test
adc
std
inc
fs
negl
es
mov
loopne
sub
leave
test
sub
js
les
call
push
pop
mov
sti
xchg
ljmp
aaa
in
xor
cwtl
adc
push
stc
mov
sbb
stos
xor
mov
jns
mov
dec
fisubrs
or
into
in
cmpsb
add
and
inc
mov
std
dec
inc
mov
sbb
cmp
dec
cmove
nop
movsl
sub
fbld
adc
sti
sbb
in
rcrl
mov
inc
in
inc
push
aas
popa
in
adc
jbe
daa
popf
xchg
rcll
sahf
test
es
movsb
leave
jae
pushf
es
sbb
fldl
mov
mov
xor
gs
adc
xchg
mov
fs
loopne
pushf
ret
dec
fidivrs
sbbl
inc
pop
pop
aaa
aas
stos
bound
in
daa
repnz
pushf
lret
dec
or
ds
enter
cmp
stos
shrl
mov
dec
je
outsl
ret
add
pop
sub
pop
leave
mov
and
addr16
pop
dec
das
add
addr16
faddl
sub
jecxz
xlat
ljmp
mov
jae
adc
mov
jnp
push
ficoms
loop
jecxz
call
cli
icebp
and
push
xor
xchg
xchg
pop
jle
stos
pop
stc
pushf
pop
xor
add
idiv
pop
in
pusha
adc
imul
cld
pop
xchg
cmpsb
out
das
loopne
push
fiaddl
xchg
sbb
testl
movsb
aas
push
cli
sbb
iret
lods
adc
loopne
es
bound
fnstcw
dec
dec
sbb
xchg
add
lret
sbb
add
xchg
fldt
add
mov
nop
push
jae
or
or
dec
cmp
insl
dec
jl
mov
out
fwait
ja
or
orl
cmpsb
xor
pop
sbb
movsb
ret
adc
adc
mov
sub
lahf
nop
adc
push
inc
enter
xchg
out
gs
mov
sti
sbb
les
adc
rcrl
sbb
add
in
mov
mov
add
inc
fnstcw
sahf
xor
mov
mov
fistpl
push
in
push
or
mov
mov
add
adc
inc
mov
fstl
cmp
outsl
pop
and
xor
call
xchg
sbb
xlat
in
arpl
xchg
pop
enter
jno
test
and
mov
sti
shrl
mov
add
stos
jle
fstps
dec
lods
mov
xchg
outsl
out
aad
xchg
and
cmp
or
cmp
cs
lea
and
out
stc
sysret
je
mov
jae
and
jmp
mov
cmp
orb
sub
cmp
mov
push
sub
mov
scas
cmpsb
lods
aam
sub
notl
popf
mov
mov
aaa
aam
imul
sbb
xor
addr16
sbb
ret
out
insl
push
jno
push
jge
repnz
fdivl
test
mov
in
xlat
fsts
pop
nop
shll
add
ficomps
stos
in
enter
insl
fildll
pop
mov
fcompl
mov
ss
lahf
leave
dec
mov
stos
subb
mov
or
sbb
popf
mov
mov
mov
mov
pop
test
in
aad
testb
add
push
frstor
cmpl
hlt
fwait
cmp
rcrb
mov
dec
mov
pop
dec
sub
icebp
mov
push
shll
int3
ror
lock
pop
xor
fisttps
jecxz
fisttpl
xchg
les
insl
dec
pop
in
or
popf
adc
inc
cltd
jne
mov
lret
sub
and
iret
aaa
roll
dec
stc
pop
mov
xchg
add
xchg
data16
add
sub
dec
sahf
mov
pop
mov
mov
icebp
adcl
mov
stos
xor
shl
int3
jmp
or
push
cmove
dec
shll
mov
scas
mov
fstpl
jecxz
insl
jge
mov
push
scas
sub
dec
pop
push
pop
mov
mov
pushw
adc
jmp
shrl
pop
sub
dec
sub
rorb
into
xchg
and
or
sub
jo
push
gs
pop
push
mov
daa
mov
ret
sbb
dec
sub
lret
xchg
das
mov
stos
mov
adc
sbb
ss
cmp
lret
sub
lea
in
push
pop
aas
pop
sub
cs
adc
in
in
ljmp
movsl
xchg
and
mov
mov
stos
xor
fstps
and
xchg
fstp
jo
sbb
rcll
lds
xor
mov
push
add
mov
mov
sahf
push
mov
jno
lret
xor
rcr
dec
pop
fisttpll
scas
adc
sub
pop
popf
lods
adc
xor
mov
mov
sbb
stc
stc
ljmp
xchg
mov
std
mov
fmuls
push
sub
into
pushf
xchg
test
jns
adc
ficoms
jb
sub
stos
inc
dec
daa
faddp
jg
jo
pop
xchg
les
xchg
inc
push
push
dec
xchg
add
call
jne
ret
sti
testl
leave
mov
or
and
mov
or
loope
push
hlt
push
fisubl
jg
fistpll
xchg
ja
mov
divl
and
dec
push
adc
ss
xor
repnz
or
lods
aas
shlb
inc
test
inc
int
or
addr16
mov
jge
insb
std
cli
add
and
and
xchg
jle
xor
daa
aad
pop
xchg
jmp
jno
cwtl
enter
dec
dec
in
xor
cltd
cmpsl
test
push
cs
add
cmp
jbe
cmpsl
fmull
cmp
fcmovb
cmp
sbb
adc
push
pop
adc
xor
sbb
mov
and
and
int3
push
loope
ds
xchg
jge
add
es
cli
inc
ljmp
lcall
dec
push
mov
inc
jg
lahf
incb
mov
xor
aas
movsb
push
cmp
inc
je
mov
and
stos
push
movups
test
faddp
mov
adc
xchg
jbe
inc
stos
mov
mov
mov
inc
nop
mov
mov
xor
and
sbb
cmp
arpl
out
push
lahf
js
add
sbb
arpl
fildll
lds
sub
imul
out
lods
xchg
sub
jo
ret
fcmovbe
scas
or
scas
cmpl
or
add
pop
mov
gs
fiadds
std
pop
cli
clc
ror
aas
popf
mov
in
pop
dec
sti
mov
jecxz
fwait
lods
cld
push
and
jle
and
push
sbb
nop
cmc
in
sahf
lret
loope
add
in
clc
push
in
xor
jmp
xchg
dec
lret
out
mov
add
lahf
aam
adc
std
stos
lods
jp
js
enter
cmp
enter
mov
inc
and
insl
lahf
dec
cwtl
mov
mov
loope
fidivrl
dec
jne
std
pop
pop
or
inc
into
or
jns
mov
jmp
push
popa
xchg
outsb
out
movsb
sarb
std
push
mov
mov
push
and
enter
cs
fbld
out
dec
mov
xchg
in
sarl
add
nop
das
aam
sbb
stos
xor
cltd
int
mov
ds
dec
mov
shrl
js
lret
mov
mov
mov
ret
cmp
adc
adc
in
aad
stos
stos
aas
repz
dec
xor
sbb
popf
pushf
inc
mov
jle
fcom
dec
sbb
rcrl
push
loopne
pop
imul
out
inc
ja
cmp
xlat
inc
stc
movsb
xchg
jb
sarb
sbb
lods
inc
sbb
cmp
in
dec
mov
into
imul
xor
jecxz
jge
push
add
mov
dec
jecxz
ss
mov
popf
xor
jp
lods
out
jbe
push
lods
dec
movsl
add
je
push
std
aad
dec
mov
sub
jl
push
cmpsl
sub
lret
xor
leave
sub
sbb
fldl
dec
jo
cmp
fs
jbe
cmp
sbb
jbe
insb
xor
inc
iret
adc
ret
nop
dec
jns
push
ds
jne
div
jle
es
lods
sahf
mov
lock
push
sarl
daa
mov
cmp
pop
jmp
mov
in
jns
les
pop
jo
xchg
das
jp
push
push
inc
cltd
dec
jmp
pushf
cwtl
or
mov
cld
jnp
inc
mov
ffreep
arpl
mov
mov
movsb
data16
cmc
sti
ret
sysret
cld
ljmp
mov
mov
dec
rcll
push
cmp
dec
cs
or
das
xchg
aas
or
imul
aaa
cmpsb
jp
rcrl
in
imul
lods
les
stos
insl
pop
adc
dec
fdivrs
ss
fimull
imul
inc
adc
adc
insl
sub
mov
ss
out
mov
mov
and
popf
fisubrs
mov
dec
movb
xchg
call
sbb
add
jne
jnp
xlat
inc
jle
cmpsb
lret
xchg
push
aas
ss
sbb
mov
cmp
inc
cli
fisttpl
insl
insl
ss
bound
mov
ficomps
js
mov
sub
popa
mov
xchg
and
fs
dec
insl
rolb
and
xor
ds
pop
ds
xorb
lea
jo
mov
je
xchg
adc
pop
daa
je
sarl
and
std
pop
push
lods
xorps
inc
dec
aam
cmp
or
dec
lcall
push
xchg
cmp
cmc
or
imul
jecxz
dec
data16
stos
or
jns
ret
xchg
push
fwait
popf
insb
cli
out
shlb
clc
test
addr16
outsl
mov
loope
stc
mov
and
push
jecxz
add
jbe
ficoms
mov
jo
int
cmp
test
jmp
decl
ds
lahf
jnp
and
inc
pop
sbb
pop
mov
jno
push
lods
jle
pop
jl
stos
int
ffreep
sbb
ja
cwtl
sbb
pop
cmc
jmp
dec
cld
push
adc
xchg
sub
outsb
mov
jne
mov
add
mov
imul
out
mov
push
mov
int
xchg
add
fs
or
inc
das
push
and
ret
les
mov
test
add
cwtl
rcl
or
sub
push
pusha
stos
xchg
push
cmp
cmp
sahf
in
push
outsb
std
test
test
jne
dec
sbb
popf
adc
ja
cmp
data16
cs
jmp
cmc
add
jns
sbb
leave
gs
dec
test
lret
dec
in
pop
out
jge
popa
push
xchg
mov
data16
ret
out
xchg
jb
pop
gs
subb
test
cmc
ss
pop
in
fistpl
push
mov
data16
imul
int
movsb
jp
mov
push
xor
shlb
push
cmp
fstpl
or
pop
test
cmp
cmp
add
ficoms
mov
inc
and
cwtl
inc
mov
test
and
cltd
pop
xlat
pop
inc
mov
rcll
test
pop
xor
cmp
incl
fidivrs
in
aaa
mov
mov
xchg
pop
sti
nop
leave
and
mov
sub
aad
cwtl
pop
cwtl
add
outsl
mov
insb
aam
mov
sbb
rclb
inc
sbb
and
adc
adc
mov
mov
cmp
mov
inc
inc
popa
mov
outsb
push
push
pop
mov
and
inc
cmp
mov
fidivl
mov
ficompl
leave
jbe
cmp
aaa
movsb
and
insl
dec
push
cmpsb
cmp
and
insl
push
and
inc
in
sbbb
andb
sub
rorb
push
ficompl
in
pop
ljmp
xor
push
bound
cmp
and
mov
repnz
adc
into
jle
adc
mov
pop
inc
fistl
subb
cmpsl
add
cld
fwait
imull
and
dec
adc
aad
into
subb
mov
ret
mov
xor
fcoms
push
mov
xchg
or
jne
push
rcl
outsl
adc
mov
xor
push
mov
mov
dec
imul
fisubrl
cmpsl
sbbl
gs
sarb
out
dec
dec
ret
int
inc
pop
test
xchg
repnz
mov
mov
scas
fsubrl
jne
adc
or
loop
jns
sbb
enter
rcr
outsl
cwtl
imulb
inc
mov
clc
cmovns
mov
das
repz
gs
test
adc
addr16
ret
pop
out
pop
add
and
xlat
xchg
xchg
inc
lods
cli
lods
xor
push
icebp
mov
push
aam
ret
sbb
or
rcr
pop
xor
push
pop
ds
fidivrs
sub
aad
movsb
mov
into
ret
enter
cli
xor
or
fdivr
out
fs
gs
xchg
xor
cmpsb
adc
or
sbbl
cwtl
outsb
shlw
stos
fs
jp
cs
dec
add
rol
mov
flds
add
jb
cmp
mov
lret
or
movsb
sbb
shlb
mov
xchg
xor
mov
into
jo
push
daa
jno
cmpsb
xchg
js
pop
sbb
bswap
mov
push
pop
and
or
xor
lods
cli
aam
lcall
out
rcpps
pop
lock
jle
push
lods
nop
cmp
jp
xor
stos
dec
outsb
mov
mov
outsb
sbb
pop
mov
push
xchg
push
inc
jle
dec
cmp
dec
mov
sub
clc
lock
xchg
xchg
cmp
cmc
mov
pop
mov
lods
js
pop
nop
pop
lea
mov
fs
pop
insb
les
rcl
xchg
dec
loopne
lea
cs
mov
mov
xchg
sub
push
jo
xchg
fisttpl
ret
and
xchg
adc
into
pushl
out
fs
lret
stos
loope
lahf
aam
popf
jp
mov
jmp
xchg
inc
jne
xchg
test
inc
push
mov
hlt
jle
sub
cmp
cmp
mov
mov
loopne
sub
in
daa
subl
xchg
dec
mull
inc
mov
mov
mov
adc
push
and
push
pop
jg
shll
gs
xchg
inc
addr16
mov
scas
int
in
add
imul
pop
inc
push
in
and
test
push
mov
mov
subl
mov
stc
push
mov
mov
cmp
push
pop
test
mov
xchg
sub
cmp
jp
outsl
aam
pop
fdivs
cmp
fst
lret
pop
rorb
aas
fwait
neg
jne
lahf
outsb
mov
stc
sub
inc
dec
loope
push
mov
stos
pushf
aad
mov
xchg
adc
movsl
jo
cmp
into
out
rcll
outsl
lea
jno
das
adc
pop
add
shr
scas
xor
mov
sub
jl
pusha
call
xchg
mov
in
dec
mov
mov
out
sbb
sub
orb
push
and
pop
push
andb
mov
fs
push
jne
daa
inc
xchg
mov
fwait
add
loop
mov
aas
or
jne
insb
mov
cwtl
jbe
xchg
lea
sbb
ja
inc
jo
lods
xor
push
dec
add
mov
jle
mov
ret
and
adc
jg
or
push
mov
scas
sub
mov
and
add
xchg
dec
mov
in
stos
fcoml
add
sub
mov
cmc
xchg
fldcw
fsub
xor
stos
call
int3
adc
mov
and
jbe
mov
xchg
jbe
dec
cmp
js
push
stos
pop
rcrl
test
push
or
int
cli
sti
insl
add
call
ret
mov
lods
cmp
imul
cs
pop
push
pop
sti
or
inc
xorb
pop
call
mov
xor
hlt
sub
jne
int3
imul
mov
jo
dec
xor
xchg
jp
pushf
std
sbb
mov
xchg
enter
mov
pop
cmp
and
rcrl
add
mov
jae
fisttpll
iret
into
or
ficoml
repz
xchg
in
out
mov
and
out
xchg
cmpsl
mov
enter
test
xchg
cmpsb
xchg
je
mov
xor
mov
xchg
pop
rorb
xlat
icebp
stc
fisubrs
sub
in
or
add
aas
push
hlt
test
xor
add
das
ret
addr16
iret
movsl
jb
dec
or
nop
push
sarb
loopne
mov
jbe
outsl
pop
nopl
imul
out
cmc
xor
dec
sub
or
push
das
pop
sbb
pop
fwait
cmp
cmpsl
push
std
ja
mov
je
and
data16
xchg
arpl
call
movsl
out
in
fsts
or
mov
pop
xchg
in
es
push
rorb
dec
jmp
daa
call
ret
adc
in
adc
inc
jge
cs
mov
or
in
mov
mov
xor
test
sub
push
jo
or
fcomps
mov
loopne
test
lock
jl
ljmp
push
push
dec
or
nop
sbb
movsb
test
xchg
jmp
adc
lret
stos
fdivl
add
push
in
jge
aad
out
adc
xchg
mov
sub
pop
stos
and
jns
outsb
sub
std
dec
in
sub
mov
test
jle
pop
pop
iret
fcoml
hlt
inc
mov
and
popa
shlb
ds
jg
mov
mov
mov
das
jo
push
lods
lret
sub
ljmp
movsl
or
or
out
sbbb
add
pop
les
jp
call
and
adc
rclb
push
xor
jle
loop
jno
ds
out
push
inc
pop
mov
mov
dec
loopne
dec
adc
cs
insl
je
ror
rcl
movsb
and
push
aaa
jo
int
push
lock
jno
bound
popl
mov
cli
dec
test
leave
dec
outsl
xchg
xchg
mov
and
inc
sbb
notl
call
fldl2e
and
cmp
add
mov
adc
mov
loopne
xchg
cli
pop
xchg
jne
jnp
icebp
ljmp
sbb
mov
xor
mov
jp
jno
fsts
and
mov
ja
adc
movsl
roll
push
fsubrs
mov
add
cmp
stc
inc
fdiv
push
mov
pop
rcrl
adc
pop
push
xchg
lcall
or
adc
pop
jecxz
sbbb
cmp
jae
and
adc
test
pop
mov
sarb
xchg
jle
dec
notb
mov
rolb
fdivp
lock
test
cmp
iret
ljmp
outsl
dec
pop
sub
in
in
hlt
push
mov
sub
inc
xlat
adc
sub
outsl
loopne
in
xor
cmpb
inc
pop
dec
fsubr
lods
outsb
mov
and
cmpsl
xor
je
jmp
jg
addr16
out
imul
movsl
jo
pop
inc
mov
movsl
lea
or
xor
adc
or
inc
inc
cmp
sbbl
xor
out
les
push
and
std
push
inc
sub
inc
sub
lret
out
aaa
or
mov
ljmp
adc
rcrl
or
out
inc
pop
cvtdq2ps
xchg
sbb
add
jmp
xor
jle
xchg
sbb
outsl
movsb
cmp
xchg
stc
mov
addr16
or
int
or
adcl
cld
xchg
xor
es
js
daa
scas
add
pop
pop
pop
je
repz
ret
cltd
lock
xorb
jl
mov
or
mov
push
dec
jae
sbbb
popf
fisubs
lahf
mov
or
insl
jo
dec
pop
and
adc
mov
mov
dec
dec
sbb
xchg
fsts
ja
ljmp
jp
daa
cmp
inc
jle
inc
shll
jp
and
shrb
sub
dec
dec
xlat
inc
js
push
lds
adc
lds
mov
stos
push
jbe
adc
add
cli
out
xlat
test
sahf
xor
shll
mov
loope
add
jae
cltd
pop
cmp
sub
or
stos
aaa
pop
mov
mov
mov
jle
mov
notb
push
pop
jae
or
cli
adc
aaa
jns
popf
and
idivb
pop
adc
xor
sti
pop
hlt
lock
sti
fwait
push
mov
push
sbb
repnz
jge
daa
mov
subb
sti
cmpsb
push
ds
cmc
data16
pop
inc
add
subb
fisttpll
add
movsl
mov
xchg
cmc
out
fcmovbe
sbb
dec
jno
fildll
call
shl
daa
cmp
js
loopne
cmp
fidivs
imul
and
add
into
xchg
data16
into
jle
cli
scas
adc
pop
adc
fwait
pop
and
cmp
xor
stos
cltd
xlat
push
or
sbb
mov
cmp
xchg
xlat
loop
and
push
lret
gs
and
jmp
call
or
enter
xchg
shll
cmpsl
jp
lahf
aam
sar
ds
mov
imul
les
or
lret
cmp
inc
jne
repnz
cs
xor
and
sbb
popa
mov
rclb
adc
fcoms
cmc
xchg
inc
xchg
xchg
mov
icebp
cmpsb
push
xchg
xor
mov
test
mov
pusha
xchg
adc
incb
adc
mov
je
adc
in
pop
pop
inc
push
ret
dec
mov
jecxz
enter
dec
xchg
stos
je
cmpsl
rcrl
pop
adc
pop
ds
inc
out
xchg
js
andb
adc
fcmovnbe
mov
pop
cwtl
mov
and
inc
div
cmp
shrl
pushl
loope
jno
push
mov
fs
scas
dec
or
lods
lret
sahf
inc
sub
negl
pop
orps
dec
mov
pop
loopne
jp
movsl
cs
pop
mov
scas
cltd
lods
add
test
fcoml
test
mov
mov
cmp
insb
fs
fsubrp
rolb
jecxz
jno
cwtl
mov
test
jns
testb
jb
fsts
adc
jp
dec
push
shlb
inc
jb
in
cmp
fdivl
pop
orb
jo
gs
mov
pusha
repz
ja
cmpsl
fcompl
repnz
icebp
cmp
mov
push
leave
fcmovbe
jb
push
imul
test
cmpsb
mov
jns
xlat
xchg
xchg
aam
mov
and
push
int3
sbb
pop
mov
hlt
add
xchg
push
sbb
cmp
js
mov
gs
imull
push
sahf
jl
sarb
cmp
test
int3
add
popa
inc
pop
sub
sub
shlb
pop
fidivl
xor
movsl
test
sub
push
mov
enter
fdivrs
mov
or
inc
mov
in
outsb
iret
mov
mov
jb
sbbl
cli
adc
popf
cmp
push
xchg
dec
pop
lahf
dec
lock
bound
push
or
fwait
add
and
mov
mov
fldpi
and
jg
outsl
xor
xor
xor
div
pop
mov
mov
sbb
and
and
rcll
mov
sub
mov
stos
mov
in
mov
jae
push
mov
cmp
popf
cmp
mov
sti
push
cmp
mov
adc
das
imul
push
cld
adc
sub
xchg
imul
mov
rclb
jp
stc
int3
je
icebp
shll
fs
ljmp
jno
arpl
sub
cmp
add
mov
xor
outsb
mov
inc
test
out
and
or
lods
push
aad
andb
fstps
popa
sbb
push
push
mov
jo
jbe
inc
ja
test
jp
push
adc
dec
sbb
mov
sub
mov
fisttps
add
out
dec
add
xor
aas
push
ljmp
sub
pop
fs
or
mov
clc
mov
and
fisubs
or
aad
dec
dec
xor
adc
int3
jbe
mov
insb
jl
jnp
js
push
scas
cmp
cmpl
sub
pop
out
pop
cmp
nop
push
outsb
das
or
dec
pop
hlt
cli
xlat
jp
mov
pmaxub
out
mov
nop
mov
jecxz
cmp
stos
dec
pop
ljmp
pop
jp
xchg
repnz
scas
jle
scas
iret
movsl
cs
mov
add
lock
dec
push
ds
lea
ret
push
lret
bound
cmpsl
dec
in
repz
adc
mov
mov
fwait
out
lret
movsb
adc
cmc
shlb
loopne
push
fistps
and
push
pop
xchg
ret
jb
imul
or
push
xor
jmp
dec
xchg
fstpl
or
mov
jmp
hlt
push
insb
push
aas
arpl
hlt
shll
mov
gs
push
dec
loope
inc
mov
fmull
sbb
cwtl
push
cmc
push
aad
push
pop
lods
repnz
mov
mov
sbb
sub
stc
lret
inc
add
mov
dec
in
call
mov
aad
cld
hlt
mov
push
xor
jae
imul
js
test
mov
xor
mov
adc
pop
push
popa
in
std
or
mov
mov
ret
push
stos
pop
jge
or
out
pop
cmp
sbb
ja
subl
ret
scas
pusha
ss
xchg
dec
dec
jge
pop
push
out
adc
inc
outsb
loope
imul
mov
in
cmp
inc
push
xchg
lds
sbb
cmp
fsubrl
inc
xor
cmpsl
sbb
inc
cmp
rolb
lahf
in
mov
mov
dec
fstl
loopne
ret
insb
jl
jne
shrl
xchg
sbbl
xchg
lret
cltd
rcrl
loop
xor
mov
ret
and
cmp
jae
inc
mov
scas
xor
fdivrs
and
ss
enter
in
fwait
pop
sbb
repnz
sahf
adc
pop
push
sbb
ret
ret
das
xor
pop
aad
dec
hlt
cld
es
cmpsb
mov
nop
sahf
mulb
push
or
adc
incl
loop
out
push
imul
addr16
pop
popf
pop
jg
cmp
mov
dec
xor
lret
push
pop
cli
daa
mov
lods
pop
lods
sar
subb
adc
orb
pop
iret
push
jne
loop
fwait
mov
stos
dec
je
sbb
sub
loop
add
mov
sub
dec
mov
push
daa
sti
jbe
lea
mov
dec
inc
mov
mov
sahf
xor
fld
int3
push
xchg
jae
int
stos
xor
adc
mov
mov
sub
mulb
popf
jne
and
mov
fldl
xchg
pop
jmp
inc
fisttps
mov
int3
lcall
in
push
cmp
sbb
fistpl
movsl
cmp
rolb
cmp
pop
push
sub
sbb
cmpsl
nop
rclb
sbb
in
stos
scas
pop
loop
cmp
pusha
xorl
mov
rcr
rolb
jne
or
adc
pop
inc
lock
jb
or
jo
arpl
out
xchg
leave
inc
lods
dec
into
sbb
sub
rcrl
daa
or
clc
stos
mov
ljmp
push
pop
mov
outsl
std
fst
mov
push
into
sub
or
sbb
add
fdivl
adc
xlat
les
test
and
adc
mov
jp
adc
insl
xchg
lea
sub
arpl
push
xor
or
ljmp
sar
push
shl
mov
mov
loop
and
pop
push
cld
iret
shlb
loopne
out
ja
cmp
sub
adc
sbb
test
push
ret
mov
jns
push
jo
mov
lds
jno
lods
sbb
es
out
outsl
popa
jae
test
xlat
mov
adc
dec
pop
mov
scas
and
push
cmp
out
inc
and
icebp
daa
lret
fisttpll
lods
fistpll
cmc
insl
icebp
cld
cmp
mov
mov
mov
jae
inc
repz
in
fwait
ja
push
dec
jle
mov
pop
mov
jecxz
and
push
lret
cmpsb
divb
xchg
shlb
aad
fs
aas
inc
mov
int
pop
pop
pop
out
push
lret
jo
les
mov
stos
adc
addr16
cs
popf
dec
xor
xchg
mov
mov
sub
dec
test
sbb
mov
jmp
mov
mov
adc
inc
adc
fld
jl
arpl
imul
mov
scas
std
mov
xchg
test
hlt
jle
xchg
data16
sbb
jle
imul
mov
jo
push
bnd
xchg
sbb
inc
adc
or
dec
push
aad
loopne
pop
dec
push
inc
fwait
xor
push
jge
and
push
push
fcompl
push
dec
stos
push
sbb
nop
mov
xchg
mov
or
popf
cmp
iret
iret
jge
dec
hlt
jno
das
sub
sbb
dec
mov
mov
fdivrs
mov
dec
lahf
sub
and
lahf
add
leave
mov
test
sbb
dec
push
add
push
push
cmp
adc
xlat
lea
cmc
push
lret
mov
pop
add
inc
xchg
insl
scas
dec
sub
or
push
in
add
mov
inc
push
sub
mov
shll
orb
shlb
xor
nop
inc
pop
enter
rorl
in
pop
inc
add
fisubs
scas
xchg
gs
pop
sub
mov
lds
enter
mov
push
testl
ljmp
daa
mov
jg
adc
xchg
cs
sub
daa
mov
lods
fildll
fsubs
icebp
call
push
xchg
repz
pop
lret
dec
push
mov
pop
imul
test
loope
dec
jb
sub
adc
pushf
jecxz
scas
out
test
xor
pop
sbb
and
aam
pop
insl
or
lds
xor
aad
sub
or
imul
pop
ds
mov
push
out
lods
sbb
icebp
jle
divb
sbb
push
repnz
repz
shll
imul
cli
dec
or
inc
cltd
or
stc
hlt
daa
jmp
inc
shlb
inc
mov
mov
cmp
inc
out
in
mov
pusha
inc
cs
xor
xchg
in
sub
mov
sub
insl
pop
mov
mov
jae
cli
jmp
int3
xor
popa
pop
and
cmp
xor
insb
push
mov
inc
jbe
add
scas
addr16
xchg
mov
repz
add
dec
outsb
pop
loop
push
xor
inc
into
push
adc
bound
int3
pushl
mov
jge
jge
data16
dec
xchg
lods
sarl
xchg
or
mov
mov
fldcw
daa
loopne
xchg
mov
push
mull
adc
inc
push
sub
mov
loop
add
nop
in
loopne
test
jbe
push
and
push
mov
flds
or
call
adc
sbb
mov
mov
test
outsl
js
loope
sub
and
cli
scas
cmp
inc
addb
xor
scas
mov
arpl
pop
mov
inc
sub
in
xchg
or
icebp
pusha
mov
push
mov
imul
xchg
push
or
rcll
mov
mov
push
imul
pop
stos
fbld
mov
cmp
enter
repnz
push
popf
and
das
js
icebp
pusha
jno
xchg
jecxz
test
sub
cli
lahf
andl
sbb
xchg
xchg
xchg
dec
jns
dec
shll
push
cmp
adc
pushf
arpl
xor
out
sub
jmp
pop
stos
lea
inc
mov
mov
or
out
lcall
xchg
adc
mov
jns
stc
cltd
and
out
pop
popf
cmp
aas
int3
dec
hlt
gs
inc
sbb
repz
pop
loopne
stos
lea
mov
xchg
sub
pushl
js
xor
adcl
divb
inc
lahf
dec
imul
and
iret
stos
lods
lret
mov
xor
popa
popa
call
lret
inc
leave
cmp
sub
pop
add
aam
mov
dec
add
or
insl
cmpsb
add
sbb
adc
arpl
push
push
lcall
outsl
pop
adc
repnz
imul
popa
add
push
imul
and
sub
aaa
lods
cmp
jl
jo
pop
xchg
ret
cmp
push
mov
aas
add
pop
sbbb
rcll
pushf
imul
outsl
xchg
pop
fidivrl
pushw
icebp
pop
lcall
cld
lods
jno
addl
popa
outsl
test
or
stc
std
cmp
mov
xorl
movsb
cmp
mov
jle
and
jbe
dec
scas
mov
aas
inc
out
mov
push
mov
sub
gs
jns
sti
in
pop
int3
js
and
insl
mov
shl
mov
sbb
fcmovb
arpl
scas
fcmovne
mov
movl
fisttpll
adc
jl
dec
pop
push
mov
shlb
sysret
pop
in
rorl
jg
test
insl
cmc
ss
lock
das
rclb
in
fsubrs
add
lods
pop
mov
pop
mov
imul
aad
sub
stos
mov
incl
and
xor
faddl
lea
mov
dec
xchg
outsl
pop
flds
outsl
inc
pop
ja
inc
ret
cmp
adc
mov
sbbl
dec
inc
dec
mov
xor
fldcw
rolb
cmp
xchg
mov
mov
sub
cmp
mov
jns
je
jne
out
jmp
aaa
imul
fisubs
sub
daa
lds
test
xor
mov
out
cmpsb
jecxz
cmp
mov
add
inc
pop
mov
in
pusha
cmpsl
les
push
pop
cli
into
mov
adc
rcl
cmovle
xor
push
out
xor
in
mov
pop
xchg
mov
sahf
ror
fldz
fistps
cmp
mov
push
xor
sub
gs
andl
out
or
mov
icebp
pop
inc
cs
xor
and
mov
pusha
leave
mov
int
mov
out
subb
outsb
pushfw
ds
xor
loopne
fucomi
mov
into
mulb
arpl
sub
cmpsl
cmp
out
ds
dec
mov
std
loopne
mov
stc
jne
mov
pop
mov
cmp
pop
loope
jecxz
sbb
test
mov
jle
notl
nop
fistl
lds
lcall
jne
push
rorb
mov
dec
test
inc
rolb
inc
pusha
pop
pop
inc
push
xchg
xchg
and
popa
or
jp
push
mov
lea
out
mov
xor
fists
inc
lret
cmp
test
aad
xchg
cwtl
rorb
dec
adc
inc
adc
cmpsl
arpl
xchg
dec
fldcw
imul
dec
pop
outsb
mov
dec
addr16
mov
fnstcw
lret
ret
clc
movsb
test
sbb
repz
mov
sub
mov
stos
and
inc
leave
ret
sub
hlt
pop
adc
sbbb
and
in
sbb
sbb
push
aad
sub
or
sub
cmp
loopne
sub
cmp
inc
mov
aad
out
mov
fs
hlt
cmp
mov
fwait
in
cld
aam
pop
lods
mov
popf
icebp
mov
add
mov
pop
push
fs
inc
es
out
dec
adc
pop
push
popf
popa
test
hlt
pop
dec
hlt
mov
push
fildl
bound
xchg
mov
pop
imul
pop
in
push
mov
popf
test
add
mov
pushf
mov
xor
lods
jmp
dec
xor
jo
push
loop
fsubl
subl
sub
add
test
in
sub
or
lock
add
repz
das
lods
outsb
or
sub
into
push
inc
push
xlat
dec
adc
cmp
push
fldenv
andl
inc
mov
test
lret
mov
arpl
xor
add
mov
mov
ja
mov
add
jo
in
imul
or
popf
add
sub
jbe
mov
into
and
fisubrl
sub
dec
adc
xorb
orl
arpl
sbb
cmpsl
jbe
hlt
or
lret
mov
push
sub
mov
sbb
hlt
inc
or
sbb
stos
adcb
int3
mov
dec
or
xor
fwait
mov
sbb
xor
inc
fistpl
int
dec
mov
aam
mov
xlat
mov
mov
notl
aad
mov
xchg
push
xchg
fisubs
ret
sbb
insb
into
jmp
cmc
rcr
mov
into
push
and
xor
rcrb
fimuls
sbb
je
xchg
sub
cltd
xchg
mov
mov
daa
or
dec
inc
into
xor
xor
add
sbb
xchg
dec
jb
sahf
push
stos
jno
nop
test
push
pop
dec
dec
dec
pushl
fwait
xchg
adc
push
mov
mov
jp
rorb
rol
ss
lret
and
jnp
dec
mov
inc
or
cli
rorb
hlt
into
iret
push
imul
fsub
inc
sub
and
movsb
jbe
fiadds
jmp
jns
test
scas
mov
adc
out
mov
addr16
addr16
insb
dec
xchg
xchg
mov
fs
xchg
and
fdivl
mov
aad
and
jbe
ret
mov
xor
add
idivl
mov
js
jle
add
mov
push
mov
jle
lods
jmp
pop
xor
rcl
out
stos
js
xor
test
std
sub
sub
fcmovnbe
jns
sub
loop
jg
in
subb
push
push
mov
rcrl
mov
sbb
js
leave
fistpll
das
sbb
insb
mov
inc
cmp
pop
insl
fldenv
cmpsb
inc
sarb
lds
cmc
vandps
add
and
pop
mov
or
and
mov
mov
cmpsb
jmp
sbb
jb
imul
cmp
insb
push
lea
mov
mov
push
je
out
dec
xchg
jmp
pushf
sbb
mov
dec
fstpl
sub
pop
lods
cmpsb
js
push
jp
push
pop
cs
stos
cltd
or
repz
and
sub
cmp
in
add
cmpsl
lods
xor
and
jl
or
pop
cmpsb
push
push
outsb
mov
stos
mov
mov
cld
adcl
loop
data16
mov
jb
sub
jl
adc
sbb
mov
je
ljmp
imul
pop
jne
push
test
test
pop
xchg
je
sub
notl
fs
std
jle
das
push
or
xchg
push
xchg
out
fwait
dec
mov
repz
leave
adc
out
fcmove
aam
add
test
lods
shlb
ja
inc
fs
pop
dec
jle
sub
jp
jo
lds
sbb
sbb
cmp
in
mov
xor
xchg
sbb
sub
lret
xor
out
adc
pop
xchg
cmp
test
xchg
jp
jecxz
dec
push
ss
ja
imull
inc
test
shll
xor
inc
mov
mov
add
jae
cmp
xor
dec
lea
mov
clc
inc
mov
xor
mov
pop
cltd
xchg
push
ret
in
xchg
sahf
or
popf
sub
dec
inc
and
lahf
addb
fsts
xchg
jo
adc
push
mov
inc
mov
lret
cmp
jo
add
lcall
mov
pop
and
push
mov
or
xchg
jne
mov
fistpl
mov
in
nop
hlt
add
jnp
dec
enter
or
cmp
xlat
dec
xlat
push
clc
sub
test
jbe
popf
xchg
gs
das
je
jnp
int3
cmp
jecxz
mov
mov
inc
push
out
mov
push
cmc
pop
cld
jbe
arpl
jo
fistpl
aam
jmp
xchg
test
jne
clc
test
pop
adc
mov
std
mov
popa
dec
iret
and
inc
mov
add
sbb
in
ja
orl
int3
dec
in
lock
mov
lods
loope
or
dec
into
sub
inc
daa
mov
inc
xchg
push
sbb
shll
loope
jecxz
and
es
push
mov
mov
mov
lret
cmpsb
pop
cmpl
insb
call
xorl
jnp
sarb
nop
jne
stos
ljmp
dec
stc
sbb
or
ret
out
cmp
add
mov
test
out
ljmp
or
dec
jmp
lret
shl
push
inc
rcl
push
sbb
xchg
outsb
nop
aas
or
xor
pop
imul
push
testl
outsb
repz
mov
mov
imul
inc
into
add
stos
and
dec
jl
add
sbb
sbb
pop
dec
popa
xchg
jns
movsb
xchg
xor
pop
push
jp
shrl
jecxz
test
ja
mov
mov
subl
adc
dec
inc
xor
pusha
sbbl
dec
and
pop
inc
repnz
mov
lea
fistps
insl
lds
fs
loop
and
xor
out
mov
fcompl
pop
out
nop
repz
mov
mov
rcrl
int3
stos
inc
pop
xlat
xchg
scas
ret
or
xchg
push
sub
hlt
mov
ret
rclb
gs
sti
dec
push
outsb
fdivl
lods
fcmovu
pop
sub
sbb
ljmp
push
inc
jnp
pop
inc
test
mov
push
movsl
sub
lret
mov
dec
andb
popa
inc
lcall
shll
xchg
jp
imul
jp
imul
gs
inc
inc
xor
lds
push
cmpsl
pushf
xchg
and
popa
call
xbegin
in
pop
into
roll
pop
xor
bound
stos
push
movsb
nop
xor
pop
push
stc
popf
dec
dec
fcoms
jecxz
push
imul
fwait
daa
lret
leave
dec
dec
add
jecxz
push
popf
ss
jmp
hlt
pop
mov
call
fimull
jb
cmp
andb
adc
sub
loope
xor
sbb
adc
or
insb
pmaxub
dec
mov
ss
frstor
and
push
mov
enter
pop
sbb
sub
pusha
adc
mov
rorb
lret
add
lcall
clc
scas
ret
xor
push
push
pusha
xchg
add
add
mov
roll
push
push
dec
into
sub
pop
and
pop
or
inc
outsb
pop
test
movsl
in
and
push
jmp
repnz
lret
jbe
adc
mov
add
add
clc
inc
xchg
cmpsb
push
fdivrl
add
xchg
mov
imul
inc
iret
in
fsubrl
out
repz
cwtl
push
std
push
push
lods
lods
xchg
rcl
xchg
movsl
lods
out
cld
imul
cmp
das
cmpb
fidivrs
mov
aaa
pop
cmp
fmull
pop
mov
mov
jnp
sub
adc
jo
dec
inc
inc
ss
adc
out
fidivl
call
mov
inc
sub
push
je
xor
ss
ficomps
in
into
or
mov
xchg
xchg
ds
mov
xchg
in
xchg
iret
xchg
mov
nop
ret
call
xor
repnz
mov
pop
arpl
sarl
test
fisubl
inc
in
jge
push
jae
push
leave
orl
stc
shl
cmp
adc
push
loope
pop
jmp
lods
dec
dec
shl
xchg
loop
loopne
inc
loop
gs
jbe
jne
sbb
push
lock
ror
xchg
add
sbb
lea
loopne
insb
loopne
inc
bound
or
out
and
lods
and
pop
push
ds
js
push
gs
mov
mov
movsl
mov
and
pop
and
mov
shrb
xchg
arpl
pop
arpl
mov
xchg
ja
dec
cmp
ss
mov
sahf
jecxz
test
out
movsb
dec
mov
sub
nop
push
fnsave
or
cltd
push
xchg
cmp
mov
add
mov
int
xchg
jl
outsl
gs
adc
ret
sbb
pop
in
stos
dec
int3
mov
adc
popf
inc
loop
stos
push
lcall
test
fwait
sbb
rcrb
sub
or
ljmp
ss
hlt
mov
lea
adc
out
adc
cmp
mov
cmp
push
aad
inc
je
xor
stos
and
pop
mov
fnstenv
jne
and
pop
inc
insb
or
div
popa
mov
push
movsl
loopne
jg
pop
mov
bound
xor
in
and
mov
cld
loop
mov
out
or
aas
cmpsb
sbb
push
inc
aas
jbe
movsb
jae
aaa
cs
cltd
push
mov
aam
jp
inc
pop
cld
cli
xor
push
out
out
pop
adc
ja
call
cmp
andl
cwtl
xchg
xchg
push
subl
test
dec
or
daa
addb
jmp
rcrb
pop
ret
mov
outsl
aaa
mov
mov
lret
ret
addr16
pusha
rcl
jb
dec
push
sbb
mov
cmpsl
fmuls
jb
jg
cmp
push
sahf
mov
add
es
jl
rcrb
repnz
xchg
push
mov
xorb
pop
sbb
cwtl
movsb
xor
sbb
pop
movsb
dec
inc
imul
xorl
sbb
fwait
dec
and
xchg
adc
lods
jnp
sbb
imul
add
cmp
pop
pop
cld
xchg
ret
ret
insb
xchg
jnp
xor
sub
jmp
iret
pop
sti
push
cmp
jnp
pop
mov
pop
in
out
cmp
cltd
call
pop
call
ret
xor
icebp
mov
cli
sub
jae
dec
lods
inc
dec
test
movsl
or
sub
pop
sub
xlat
add
enter
sbb
cmp
mov
pop
mov
mov
pop
jne
xchg
out
or
inc
xor
int
adc
mul
mov
out
jecxz
and
out
into
adc
filds
jb
sti
lcall
test
xor
das
sub
insl
jnp
dec
es
loope
pop
aaa
jo
push
add
and
xchg
lock
push
xor
sub
hlt
or
mov
lods
fnstcw
sub
pop
inc
fwait
cld
inc
les
fucomip
imul
sarb
loope
fisubrs
xchg
cmpsl
mov
or
pop
roll
adc
loope
mov
cmpsb
sub
ret
push
mov
sarb
out
jnp
push
aaa
in
nop
or
xchg
sti
xchg
pop
in
pop
addr16
push
add
fwait
pushf
mov
cmp
int
cwtl
jmp
and
and
xor
pop
xchg
jne
or
mov
fcoms
add
inc
cld
jmp
lods
xlat
sbb
lea
sbb
jnp
out
sub
or
mov
sbb
cmpsb
cmp
rcr
or
jo
inc
inc
add
scas
dec
inc
jecxz
call
arpl
or
dec
ret
xor
cmp
inc
fdivl
fists
push
incl
mov
adc
mov
in
mov
mov
scas
pop
mov
sarb
xchg
adc
push
hlt
insl
mov
loope
sbb
inc
adc
inc
mov
mov
mov
xor
scas
hlt
pop
mov
out
mov
xchg
or
or
fcompl
fwait
in
pushf
outsl
sbb
xor
mov
out
mov
aad
push
push
mov
sub
push
aad
adc
fisttpll
push
dec
cmp
mov
rorb
outsb
adc
mov
dec
leave
das
pop
dec
or
or
jbe
xchg
in
outsl
jo
or
testb
push
cmp
cld
rclb
pop
jae
dec
sbb
fwait
mov
pushf
stc
roll
repz
push
aaa
jns
dec
dec
mov
cmpsb
mov
icebp
mov
pop
cmp
mov
les
mov
jmp
add
sbb
cwtl
and
mov
testb
lea
lods
jbe
jae
sub
fcompl
pop
ss
scas
push
lahf
inc
bound
or
mov
outsl
pop
lea
in
cwtl
arpl
js
inc
jecxz
sub
xchg
out
aaa
xor
mov
pop
inc
mov
cmpsl
loop
push
cmp
xchg
pop
fstpt
xlat
jle
cmp
adc
lret
iret
jle
jle
fstl
mulb
push
das
jbe
test
aad
and
and
fsubl
notb
into
cwtl
shll
dec
stc
xor
mov
xor
dec
adc
add
mov
das
inc
dec
enter
sub
xchg
outsb
in
sub
decb
sub
inc
jg
mov
enter
insl
dec
ljmp
xchg
ret
and
mov
add
and
mov
sub
cmp
jne
pop
and
enter
in
sub
cmp
addb
fstpt
dec
and
ss
fisubrs
rcrl
jno
arpl
fistps
cld
sbb
sbb
cmp
cmpsb
cmp
sub
dec
fisubrs
shrl
lock
aas
mov
xor
hlt
clc
in
and
jg
inc
sbb
mov
xor
push
dec
inc
popf
stos
sub
arpl
je
pop
adcl
hlt
mov
imul
fs
out
out
imulb
and
mov
jb
xchg
dec
stos
jmp
adc
add
cmp
xchg
scas
mov
inc
js
pushf
mov
inc
movsb
out
fsubl
push
xchg
stc
cmpsb
sbb
mov
int
fdivs
fmuls
daa
or
and
insl
out
fisubs
jp
xor
daa
lret
out
sub
pop
out
inc
pop
push
daa
push
adc
loop
mov
pop
xchg
imul
rcl
sub
jp
sbb
xor
fnstcw
jg
imul
cmpb
std
out
cmp
mov
xor
dec
or
adc
or
sub
xchg
lahf
push
leave
notb
xchg
xor
and
insl
sub
icebp
pop
jl
leave
xor
dec
and
movsl
fs
adc
aam
emms
push
out
sub
icebp
dec
rorb
or
out
and
ss
movsl
pop
lahf
xchg
in
inc
sbb
popa
dec
stc
mov
repz
and
mov
clc
dec
je
jge
fs
cld
push
test
jnp
inc
movsb
popf
xchg
lock
xchg
mov
inc
xor
jns
orb
adc
mov
pop
pop
bound
mov
leave
inc
lret
pusha
xor
stos
addr16
mov
stc
inc
mov
out
adc
cs
xor
in
fbld
mov
lds
mov
std
sub
cmc
jae
sarl
cld
flds
push
fwait
imulb
jle
scas
and
pop
loop
push
nop
jno
jl
repnz
pop
mov
dec
in
mov
push
test
mov
mov
aam
dec
xor
push
test
pop
rcll
push
aaa
js
ja
outsb
test
lods
cltd
test
mov
cmp
cvtps2pi
fisubl
and
pop
testb
mov
sub
inc
jb
arpl
sub
shll
and
hlt
adc
iret
mov
mov
into
xchg
fadd
out
inc
mov
mov
sarl
aad
stc
adc
push
cwtl
sahf
cmp
push
repz
and
mov
rorb
arpl
pop
dec
ds
xor
or
cmp
test
mov
imul
push
es
orl
mov
sbb
jb
sub
int
leave
xlat
push
add
pusha
adc
cli
sbb
or
mov
das
inc
sub
cld
loope
fwait
das
mov
lret
cmp
orb
push
arpl
dec
jg
sbb
adc
in
adc
lahf
and
out
stos
icebp
mov
mulb
fidivs
and
popf
orl
lret
inc
pop
sbb
push
fadds
daa
pop
push
es
sar
or
dec
in
enter
fs
jp
fcoml
xlat
sbb
fildll
sub
add
adc
xor
lock
ffreep
mov
pop
mov
cld
push
fildl
jns
dec
mov
je
pop
cmpsl
sbb
jo
popf
adc
scas
sbb
loopne
imul
sbb
dec
adc
push
bound
popa
mov
scas
push
mov
xchg
outsb
adc
adc
push
lods
loop
push
insl
out
push
jbe
cmp
push
test
jmp
push
int3
ja
sti
pushf
out
cltd
lcall
mov
fs
add
pop
sbb
outsl
fucomip
cmp
jo
xorl
push
add
dec
in
test
lahf
cs
mov
xor
xor
jecxz
sbb
shll
mov
sbb
mov
imul
and
scas
adc
xchg
lcall
repz
ss
fmul
xchg
pop
movsb
lret
lahf
call
inc
sbb
repnz
cli
je
test
loop
mov
xchg
std
cwtl
shlb
jp
ss
add
mov
cmpsb
cld
sbb
imul
int3
mov
icebp
and
loopne
in
test
dec
mov
insl
inc
add
test
lods
add
xor
fsubl
jl
push
and
xor
fsubrl
sub
push
mov
pop
ss
cwtl
fbld
lret
pop
stos
lahf
add
shl
cmp
or
xor
out
fidivrl
adc
cld
sub
adc
adc
xor
xchg
cltd
shll
sbb
jle
fs
mov
xor
xchg
xor
test
pop
mov
pop
pop
jnp
lcall
push
dec
mov
cwtl
in
jge
test
mov
lock
jne
cmpl
pushl
mov
jecxz
outsb
adc
add
and
in
mov
aas
addb
mov
mov
clc
mov
ret
inc
in
mov
in
dec
adcl
movsb
test
push
mov
test
xor
add
cmpsl
cmp
adc
mov
jb
outsl
adc
jmp
inc
cmp
inc
push
and
mov
inc
push
mov
iret
sub
popa
and
jge
aas
mov
out
dec
and
mov
pop
hlt
mov
jo
insl
rcrb
jns
pop
call
cmc
push
jmp
test
pop
jecxz
test
and
sbb
arpl
jne
inc
in
xchg
ret
sub
jp
imul
rorl
mov
imull
outsl
daa
scas
je
in
test
cmp
leave
mov
out
in
sti
pop
dec
bnd
pop
mov
pop
dec
sarb
dec
xchg
dec
sub
mov
sbb
int3
pop
inc
and
pop
fdivrl
inc
lret
pop
xor
clc
divl
sbb
cs
ja
or
shlb
push
fsts
rcll
xchg
mov
mov
aad
cmc
mov
ret
inc
cs
stos
sbb
jl
pop
dec
adc
aam
sti
mov
lret
push
jecxz
out
xchg
add
mov
repnz
dec
imul
testl
out
cld
and
fidivl
cmpsb
insb
je
lods
mov
loopne,pt
xchg
hlt
inc
cmc
ja
fs
in
dec
or
mov
push
sbb
jns
aas
mov
lods
push
lret
adc
or
cltd
lcall
sbb
push
test
ret
or
rcll
cmp
push
adc
push
insb
mov
adc
xor
mov
loope
dec
add
mov
fistl
ret
jge
or
in
dec
xor
mov
push
nop
sub
lahf
dec
inc
cmpsb
jle
in
jmp
xor
sub
mov
xchg
out
pop
cmp
lods
pusha
ds
sarl
mov
sub
pop
movsb
push
loop,pn
inc
cmpsl
cmp
xchg
insl
mov
imul
rcll
cmp
imulb
xchg
int3
outsb
sub
jb
ss
popa
jle
xchg
push
dec
sahf
lds
adc
jp
stc
movsb
inc
movb
sbb
mov
fsubr
shr
xor
rorb
outsb
sub
push
rorb
lea
outsb
es
jns
xor
fidivrl
pushl
adc
mov
outsb
ljmp
cs
ja
sarl
inc
outsl
es
and
jle
inc
js
dec
xchg
or
jnp
movsl
xchg
shrl
mov
cmpsl
ficoml
jecxz
sbbl
sahf
mov
xchg
out
dec
xor
icebp
outsl
xchg
movsb
adc
jp
mov
pusha
sbb
adc
mov
stos
aas
push
imul
jno
lret
imul
sahf
in
inc
xor
pop
int
int
lret
add
mov
pushf
jge
mov
or
stc
aaa
out
lahf
jno
sub
sub
pop
cmp
test
sahf
fstps
adc
xchg
pop
rol
outsl
xchg
jo
lds
or
push
xchg
mov
lcall
repnz
mov
pusha
jo
push
cmp
jecxz
lret
dec
imul
test
sub
fucom
push
idivl
jnp
xchg
fdivp
shlb
std
int
imul
mov
inc
and
inc
sub
or
add
dec
js
pop
jae
loope
xor
adc
adc
push
jle
mov
jmp
dec
dec
xor
mov
in
aam
das
jle
loopne
stos
and
filds
aad
inc
sahf
jnp
into
js
mov
mov
arpl
push
nop
in
pop
inc
enter
dec
mov
push
dec
repz
mov
repz
out
imul
mov
popf
fs
mov
push
outsl
mov
addl
cmp
pop
xor
insl
addr16
movsl
sbb
and
out
rorl
lock
int
xor
push
dec
and
dec
outsb
aam
lea
repz
xor
inc
xchg
ret
and
fwait
mov
mov
imul
icebp
and
das
shll
mov
adc
scas
cmp
loope
jo
popa
inc
cmp
xor
lods
and
and
pop
sbb
test
mov
iret
xor
or
scas
inc
sbb
xor
imul
inc
stos
mov
ret
mov
jmp
movsl
push
lock
add
xor
bound
pushf
ret
insl
fcmove
pop
sub
ret
loope
xor
js
sbb
pop
movsb
pop
jnp
push
add
divl
or
ret
xor
and
fs
pop
imul
ss
mov
cmp
ja
adc
ljmp
int3
push
lds
dec
jns
int3
dec
push
orl
int
cltd
mov
xchg
shl
inc
jmp
inc
fists
mov
lock
repz
daa
stc
cmpsb
std
lea
mov
shlb
divb
jecxz
xlat
push
pusha
fnstcw
icebp
pop
orl
outsb
mov
or
pop
and
in
xor
popf
cmpsb
xor
sbb
scas
push
push
jp
dec
pop
loop
cmp
inc
push
aad
sub
je
aam
cwtl
add
cli
insb
pop
les
pop
jbe
add
lret
xlat
rcrl
push
cmp
imul
fs
ja
dec
sbb
inc
in
mov
sub
xchg
jnp
sbb
dec
stos
insl
and
mov
pop
and
fnsave
push
mov
mov
push
mov
push
inc
xor
jle
xlat
dec
sub
fwait
mov
das
pop
shrl
cmpl
loopne
out
push
clc
addl
popf
cltd
and
jg
adc
insb
sub
sub
or
mov
rclb
mov
int3
aam
sub
adc
mov
pop
aaa
jmp
cmp
mov
xchg
sub
and
jbe
ja
inc
inc
shlb
pop
mov
mov
mov
mov
pop
sub
daa
mov
shl
mov
adc
shll
pop
inc
std
popa
jl
jecxz
or
fisttpl
or
dec
xchg
sbb
pop
pop
idivb
jecxz
add
rclb
sti
popa
or
xor
jl
arpl
lods
push
mov
inc
call
dec
push
inc
pop
ja
adc
int
daa
adcb
pop
scas
cmpsl
addr16
lcall
xchg
loop
pop
xchg
xchg
pop
mov
mov
mov
pop
xchg
inc
imul
adc
xor
sbb
test
sub
and
sbb
bound
mov
pusha
ret
lahf
testb
push
and
cmp
pusha
pop
sub
pop
pop
cmpsl
cmp
cwtl
scas
mov
sbb
lock
adc
cs
sub
lret
cmp
mov
pop
dec
push
lahf
stos
lods
xor
imul
adc
fisubs
mov
pop
dec
cmp
mov
xor
dec
or
mov
adc
xchg
xchg
jno
and
mov
mov
outsl
lcall
or
loop
nop
loop
cmpsb
imul
and
mov
int3
push
lea
pusha
js
rclb
xor
mov
ror
into
fistpll
stc
sahf
jae
out
nop
repnz
push
add
and
cmc
test
fdivs
inc
jecxz
jo
fcomip
insb
ds
mov
sbb
pop
pop
or
push
jl
pop
sbb
jmp
faddl
sahf
xor
xor
cmc
add
movl
jecxz
dec
pusha
aam
out
xor
dec
dec
in
mov
inc
push
pop
stos
dec
dec
shlb
outsb
adc
cmp
xor
loopne
mov
or
pop
xor
fsts
cmp
inc
lret
cld
ret
mov
insl
xchg
shll
adc
adcl
cltd
push
or
cmp
adc
mov
lret
lods
ficomps
icebp
jns
adc
out
mov
or
fdivl
shll
test
repz
inc
daa
lock
into
scas
out
dec
push
enter
mov
inc
push
dec
inc
fildll
pop
push
sub
cmpsl
and
jbe
or
and
jecxz
push
test
mov
shll
loope
xchg
leave
sub
and
fxch
cld
loopne
adc
inc
or
pop
push
xlat
int
daa
mov
cmp
repnz
pop
leave
ffreep
jne
push
mov
stc
out
scas
fsub
and
pop
push
andb
mov
pop
dec
pop
hlt
imul
mov
imul
outsb
push
xlat
es
xchg
mov
repz
cmp
clc
push
mov
out
add
iret
mov
mov
jge
sbb
add
and
imul
repnz
iret
or
jmp
notb
ss
int
pusha
and
xchg
aas
pop
std
xchg
add
xor
push
adc
ljmp
shl
push
int
dec
mov
mov
mov
div
fwait
out
fnstcw
xor
mov
lea
jl
fcompl
scas
ss
addr16
mov
jbe
pop
add
fdivrs
adc
push
mov
xlat
cmp
scas
xchg
sub
cwtl
xchg
cmc
push
cmp
ds
insl
dec
jle
or
repz
mov
lea
cmpsb
lds
iret
sub
out
inc
clc
rcl
jp
scas
and
cmp
jnp
bound
push
jl
xor
outsb
jmp
int
fmull
aad
mov
sub
jbe
pop
dec
mov
xor
cmp
addl
sahf
jge
push
xchg
scas
jb
adc
ret
decb
shr
mov
adc
fsub
dec
pop
jo
shlb
sub
into
insl
sbbl
fadds
popf
pushf
stos
aam
xchg
ds
hlt
push
out
pop
out
mov
or
mov
in
sub
mov
ljmp
jo
imul
jbe
xchg
mov
jmp
xor
and
leave
rcll
lret
sahf
mov
and
popa
jl
int
movsb
jmp
stos
or
mov
add
cmp
jecxz
subl
mov
ljmp
imul
lods
jge
sbb
push
adc
and
pop
inc
mov
push
sub
stos
pushf
adc
xor
jo
repnz
mov
out
xor
into
push
inc
test
dec
mov
mov
jp
xor
or
mov
push
bound
sbb
fistl
push
loopne
mov
clc
shll
out
jge
cli
ret
daa
jg
push
ror
fistpl
pop
fisttps
fnstsw
ja
jo
and
and
leave
dec
push
pop
lahf
shrl
push
inc
imul
jns
ljmp
dec
inc
mov
pop
mov
fdiv
ret
gs
adc
dec
sbb
aam
lds
adc
cmp
fbstp
mov
push
xor
popw
xchg
mov
mov
repz
sbb
add
fwait
daa
dec
bound
inc
xchg
jecxz
lret
rorl
fs
cmpsb
loope
jge
movhps
cmp
mov
sbb
jmp
mov
iret
sti
out
addb
out
and
popa
and
imul
shlb
sub
mov
mov
scas
cli
adc
xor
pop
dec
add
lcall
out
ss
cld
repz
out
sbb
subb
dec
jl
push
mov
out
lret
cli
int3
xchg
mov
add
adc
push
int3
or
jle
imull
js
sbb
iret
adc
jo
movsb
cmp
out
pushf
or
das
xor
sbb
jo
sets
xchg
add
test
mov
jae
shll
push
and
sar
test
mov
pusha
sahf
and
lahf
cmpsb
xor
mov
mov
push
mov
push
mov
mov
mov
pop
aaa
fldenv
icebp
filds
sbb
lods
cli
xor
imul
xor
out
fdivl
xor
mov
cmp
andb
outsb
cmp
dec
ja
jnp
pop
and
repz
adc
mov
cli
in
pop
dec
dec
cmp
mov
cltd
xchg
incb
mov
jg
mov
adc
inc
pop
sbb
stc
je
xchg
mov
pushw
pop
inc
lods
aad
into
icebp
cmpb
mov
mov
and
sub
pop
ret
push
insb
mov
lock
orb
adc
fnsave
mov
mov
dec
mov
mov
in
aad
jb
push
gs
shrl
mov
sbb
arpl
mov
daa
xchg
cmp
fbstp
xor
jb
adc
and
in
mov
mov
mov
jae
mov
push
gs
fs
jg
lcall
jnp
cmp
mov
inc
addr16
jle
sbb
cmc
cmpsb
fmuls
fbstp
int3
mov
insl
fnstenv
sbb
out
enter
mov
mov
push
mov
xor
add
xlat
lods
clc
loop
popl
loopne
pop
and
ljmp
and
mov
mov
sub
mov
add
push
pushw
cmpsl
es
push
mov
rclb
cmp
aas
ds
in
push
sbb
pop
aaa
incb
les
xor
loopne
test
aas
jecxz
mov
and
ret
cmp
or
repnz
lea
mov
mov
inc
out
aas
das
into
mov
dec
or
repz
xchg
fisttps
xor
lcall
lock
in
dec
unpckhps
ljmp
xchg
or
test
sahf
call
cmc
mov
outsl
push
xor
push
sbb
jmp
adc
xchg
inc
sub
rclb
push
mov
cmpsb
cwtl
loop
lock
scas
or
xchg
sub
es
repz
loope
dec
inc
add
rcrl
bnd
sbb
iret
into
xchg
or
test
bound
or
dec
cltd
mov
nop
cmc
pushf
insb
aad
add
cmp
jg
cmp
aad
inc
xchg
cmc
test
lcall
addl
sbb
cmp
andb
xor
lea
mov
call
in
add
rcrl
nop
xor
bound
mov
fldcw
lret
mov
sbb
or
jb
mov
adc
pop
lcall
dec
mov
add
or
inc
push
mov
add
mov
dec
movb
jnp
xchg
andb
icebp
scas
cmpsl
cmp
sub
icebp
sub
repz
sbb
pushl
jno
sti
sbb
and
in
repnz
dec
fbld
imul
loopne
mov
scas
and
cmpsl
pop
dec
inc
push
xchg
gs
imul
repnz
rcrb
lods
mov
and
xchg
aaa
or
rclb
outsb
push
dec
nop
std
or
pop
pop
jno
sub
stos
xor
fcmovne
push
leave
fmull
sbb
stos
bound
in
and
jo
jle
clc
mov
lea
cmpsb
mov
mov
jmp
movsb
insb
mov
jle
pop
imul
mov
cwtl
insb
and
or
insl
sbb
pushf
mov
stos
in
jmp
aaa
mov
and
adc
stos
lods
popf
into
jle
pusha
shlb
outsl
xor
test
icebp
movsb
cmp
insl
jo
dec
adc
jp
in
stos
cli
xchg
insb
ss
bound
xor
add
mov
shll
push
dec
jae
and
dec
lods
in
dec
push
aam
outsl
jp
scas
pushf
or
es
xchg
ss
mov
dec
cmc
test
in
cmp
or
mov
push
pop
stc
push
mov
mov
stos
inc
add
mov
out
int3
push
xor
jo
push
pushf
cmpsb
lret
mov
pushf
mov
into
stos
push
cli
popa
cmp
or
in
sbb
shll
mov
fidivl
push
test
pusha
sub
fdivs
mov
pop
adc
mov
push
jne
add
out
xchg
inc
hlt
mov
mov
xorl
test
mov
cmpb
sub
jle
jo
js
popa
mov
xchg
and
cwtl
aad
sub
adc
sbb
divl
ljmp
mov
jle
aam
out
aad
push
mov
mov
jbe
inc
jae
mov
test
ret
ljmp
pop
pop
pop
rcll
roll
cmpsl
scas
nop
adc
xor
adc
push
lcall
enter
mov
nop
inc
adc
sbb
pop
and
in
stos
push
mov
sbb
push
sbb
in
pcmpeqb
aam
insb
cwtl
or
fistpll
shlb
inc
aam
popf
xor
xor
pop
bound
push
cwtl
mov
mov
loop
cmp
adc
mov
and
les
jne
outsl
or
cld
cmpsb
sbb
shrl
inc
jge
xchg
rolb
add
mov
lea
inc
je
push
pop
outsl
aaa
adc
mov
movsl
cmp
jp
pusha
xor
clc
data16
repnz
loopne
cmp
mov
pop
push
loop
pushf
push
xchg
outsl
notb
pop
inc
aam
ds
mov
fs
mov
mov
or
in
adc
sahf
daa
movsl
jae
repnz
test
add
or
int3
jb
push
pop
mov
aas
dec
movb
mov
mov
and
imul
sbb
xor
es
int
int3
mov
dec
cmpsb
or
int3
lcall
sub
ficoms
pop
mov
int3
mov
push
cwtl
sbb
jo
repnz
ret
pop
stc
sbb
adc
xchg
cmp
stc
fnstcw
lods
or
dec
mov
lds
sub
popf
push
inc
lret
sbb
js
mov
jbe
cmc
inc
mov
cmp
jb
ret
cmp
test
fcomps
cmp
pop
dec
insb
add
divl
cmp
mov
enter
dec
adc
call
and
or
stc
negl
enter
push
push
ret
push
xlat
xor
aad
add
inc
xor
rclb
mov
pop
popf
mov
sbb
pusha
xor
and
and
aad
insl
test
lret
daa
jmp
jb
mov
xor
pop
leave
rcll
xchg
and
in
jmp
incl
xor
addr16
mov
orl
jle
mov
sbb
loope
push
cwtl
and
cmp
xlat
test
je
dec
inc
loope
stc
mov
push
jne
jecxz
sbb
jle
lcall
repz
fildl
mov
xchg
xchg
std
lods
test
gs
and
leave
cli
pop
sub
or
push
ds
subl
xor
sbb
add
mov
call
sub
pop
adc
sub
xchg
cmp
test
addr16
sbb
and
xor
stc
inc
out
ss
call
lea
movsb
mul
sbb
lods
ljmp
stos
or
mov
pushf
jp
mov
cmp
push
shl
test
scas
repnz
cld
mov
in
std
jns
push
and
add
xor
fistl
pop
movsb
or
mov
xor
icebp
xor
sub
and
and
pusha
cmc
sub
subl
rcl
cli
inc
rclb
xchg
push
jnp
xchg
dec
jmp
outsb
fucomip
jo
sub
xchg
sti
jbe
inc
or
out
inc
rol
lcall
mov
dec
repnz
mov
addr16
lds
inc
adc
xor
mov
in
jae
ret
or
push
cmpsb
leave
ds
adc
sbb
insb
andb
adc
fs
cli
pop
icebp
movsb
adc
popa
cli
out
mov
sub
mov
mov
inc
fisttpl
xor
push
test
inc
xchg
ret
divb
in
aas
pop
adc
inc
aas
pop
sub
rcll
push
sub
cmc
pushf
cmp
push
xor
dec
rcrb
or
sbb
mov
leave
nop
push
inc
sbbl
jmp
inc
repnz
mov
cld
adc
cmpsb
dec
cmc
addr16
pop
fdivp
mul
ljmp
sti
push
or
inc
dec
arpl
jge
mov
jno
xor
loopne
add
sarb
mov
sbb
stos
sti
iret
dec
enter
fcompl
je
sbb
and
jecxz
cld
pushf
lods
xchg
das
push
bound
push
mov
mov
mov
test
push
icebp
hlt
rcll
lcall
outsb
fisttps
or
push
dec
jne
imulb
psadbw
wrmsr
test
sti
mov
xlat
cmpsb
and
lahf
pop
stos
xor
jecxz
mov
in
push
or
pop
loop
mov
rcrb
jmp
in
negb
dec
cmp
mov
cmp
cltd
sub
pop
mov
popa
adc
sbbb
loope
or
in
cwtl
adcl
leave
sub
lea
xlat
mov
push
movsl
mov
imul
jmp
int
int
cs
push
cli
adc
ret
fucomip
sbb
js
cmp
dec
dec
inc
rolb
jmp
ljmp
aam
dec
jmp
pop
adc
gs
mov
xlat
sbb
mov
xchg
sahf
inc
scas
pop
iret
and
cmc
ret
cmc
fstpl
mov
xor
pop
mov
cmp
add
js
nop
lock
nop
jns
inc
mov
loopne
dec
dec
adc
jo
xchg
cmc
test
test
xchg
lcall
int3
lret
sub
ja
stos
inc
mov
add
mov
in
xor
stc
pusha
cwtl
sbb
mov
jge
cld
mov
out
lock
and
xor
xor
scas
push
sbb
pop
or
mov
negb
push
sbb
je
pop
mov
mov
push
shr
repnz
xchg
ficoml
hlt
shlb
test
test
sahf
rcrl
ja
lods
pop
cltd
rcr
rcr
lea
repz
jp
sti
inc
fucomip
jl
inc
jmp
and
ficomps
push
aaa
push
cmp
lret
sbb
pop
inc
test
mov
mov
mov
jbe
repnz
push
xchg
xor
and
call
add
sub
xor
pop
jp
adc
or
sub
fcom
cmp
pop
std
cwtl
xchg
sahf
dec
sub
dec
xor
in
addb
cmpsl
pop
mov
cmp
lea
les
lods
jns
ss
xor
pop
add
adc
cmp
enter
fidivs
sbb
call
jo
cmp
jno
decl
xchg
ja
pop
xchg
sbb
cld
mov
ljmp
pop
jb
cmc
orl
inc
sti
leave
add
cmpsb
cmpsb
lahf
and
xchg
push
in
mov
xchg
aam
or
loope
daa
outsb
lock
bound
movl
data16
and
mov
hlt
mov
cmp
push
push
insl
inc
lds
adc
scas
lods
pop
repz
fwait
pop
sbb
jno
mov
cltd
xlat
xchg
outsb
mov
jbe
sbb
mov
push
faddl
rclb
data16
in
mov
xor
dec
shlb
stc
lds
cld
mov
cmp
push
cli
in
inc
cmp
lea
cmp
aam
in
or
addr16
and
sbb
mov
push
inc
iret
ss
lret
inc
aaa
jmp
loope
leave
sbb
cmp
push
mov
filds
ljmp
sbb
mov
mov
call
xchg
cmp
mov
push
shl
dec
aad
fsubrs
in
pop
push
fsubrs
shll
je
out
sub
lock
test
in
cmp
add
data16
xlat
cmpl
arpl
aad
call
mov
out
dec
in
jg
mov
mov
ja
in
sbb
and
xchg
mov
adc
popf
testl
movsb
mov
out
push
jl
ss
pop
sarb
mov
sbb
lock
mov
ja
sahf
jns
and
stc
dec
or
out
scas
xchg
stos
subb
imul
push
pop
mov
jne
or
cltd
mov
arpl
cmp
cmpsb
imul
je
not
jbe
int3
mov
pop
dec
adc
xchg
inc
lret
stos
sbb
sbb
jge
mov
outsl
mov
hlt
dec
fildll
mov
ss
and
xchg
cmpsb
inc
cmc
mov
nop
pusha
jns
inc
mov
lods
mov
mov
mov
jns
rol
jne
add
mov
rcll
sbb
dec
dec
jne
mov
ret
adc
jb
into
jb
jb
xchg
jns
lahf
out
push
dec
jo
test
fucom
in
add
cmp
sbb
dec
push
push
mov
dec
mov
push
xlat
push
pop
adc
lds
fstps
pop
jmp
xor
inc
out
das
xchg
js
push
jnp
std
jnp
jne
sarb
rcl
pop
jg
dec
add
push
repnz
ret
xlat
pushf
cmpsb
push
inc
dec
or
push
sahf
sub
ret
pusha
sub
shll
cwtl
xor
lods
pop
push
or
push
dec
pop
cli
inc
push
pop
aad
mov
rcr
out
int
fldenv
push
insl
mov
inc
mov
push
add
rcl
mov
adc
popa
sbb
mov
or
xchg
mov
mov
ss
in
push
xchg
dec
cld
xor
je
leave
push
mov
aam
pop
push
inc
movsl
pop
outsl
jae
test
jg
stc
dec
jecxz
sub
imul
pop
mov
test
pop
imul
jecxz
jecxz
cwtl
and
and
daa
jmp
sub
push
cmp
and
scas
sti
pushf
lds
mov
pop
inc
pop
adc
xor
lods
enter
sub
jb
jno
sub
cmp
ja
and
and
sub
dec
outsb
push
xor
xor
push
movsb
xchg
and
and
inc
lcall
mov
lahf
sbb
and
jmp
pop
or
push
jmp
or
jmp
icebp
test
stos
lods
mov
pop
jo
insl
es
xor
xor
dec
mov
ret
xchg
in
enter
sbb
cmp
pop
sbb
jbe
inc
cltd
sbb
xor
push
mov
es
push
xchg
xchg
out
imul
mov
mov
push
push
sti
push
je
cld
xor
popf
movsl
mov
movnti
push
lods
mov
adc
outsb
fnstenv
jb
faddl
int3
xor
test
xor
sbb
push
inc
jp
lahf
inc
fistpl
push
dec
jmp
mov
pop
dec
loopne
lret
push
mov
cmp
rorb
or
pop
rcrb
in
sbb
add
frstor
cmc
sub
cmp
sub
out
mov
or
xor
iret
sub
xor
pop
jo
cmp
idivb
sarb
sub
dec
jo
je
or
lea
lret
loope
sbb
int
mov
dec
cld
cmpl
or
add
dec
popf
xchg
pushf
sub
cmpsl
adc
pop
mov
jle
shr
std
lret
in
push
outsl
and
addb
ds
inc
cmp
pushf
out
xor
mov
dec
fcoml
ss
push
xchg
push
push
pusha
adc
and
dec
dec
dec
sbb
xchg
sbb
mov
jne
ret
push
pop
inc
mov
adc
pop
mov
push
adc
push
sarb
push
mov
pushl
jg
leave
xchg
scas
outsb
jno
cwtl
add
gs
repnz
mov
mov
pushw
mov
cmp
pop
fprem
dec
mov
fildll
mov
mov
push
and
movsb
dec
push
mov
jb
ja
cwtl
xor
flds
mov
out
in
in
mov
mov
pop
lods
subl
cmpsl
sbb
arpl
jge
or
shrb
dec
in
mov
cmp
je
mov
shl
bound
xchg
lock
repz
mov
and
or
test
mov
pop
sbb
mov
push
mov
jbe
mov
sub
or
mov
or
fs
inc
incb
add
sub
lcall
insl
pop
aam
and
pop
mov
jns
shlb
inc
push
stos
fwait
aad
fistpll
fstpt
mov
jb
jmp
fucomip
adc
xchg
lds
pop
call
push
psubsw
jae
push
das
adc
and
push
pop
xor
icebp
pop
data16
inc
imul
cmp
jae
or
xchg
fcomps
cmp
leave
push
push
sahf
inc
cmc
jmp
fdivrs
cmp
rclb
jecxz
push
ds
sbb
jae
mov
cltd
add
and
loopne
xlat
icebp
inc
xor
mov
jbe
out
mov
cs
cwtl
hlt
repz
push
mov
jbe
adc
mov
cld
out
cltd
fimull
lods
rcr
cld
icebp
xor
mov
cmp
adc
je
sub
jbe
dec
jmp
xor
mov
add
ja
fcoml
dec
shrb
sub
fsubr
testl
test
cmp
or
in
mov
and
cmpsb
jmp
fs
movsl
xchg
repnz
push
dec
sahf
sbbl
les
cmc
or
cmc
sub
lahf
pop
cwtl
cs
cmp
cld
and
dec
inc
inc
cmp
bound
push
dec
or
sbb
shrb
mov
in
mov
fsubp
out
cltd
or
mov
push
jno
mov
in
inc
lret
and
lea
push
dec
dec
iret
outsl
and
jecxz
pop
nop
cmpsb
jg
pop
add
xchg
aaa
popf
cltd
aaa
sub
insl
js
inc
out
sub
mov
test
or
mov
lcall
in
cwtl
push
xadd
pop
adc
imul
nop
sbb
jb,pn
pop
xor
cmp
jle
sarl
push
addr16
pop
adc
stos
mov
rcll
inc
clc
jnp
dec
repnz
adc
out
pop
and
push
xlat
das
jb
inc
test
mov
ret
push
ss
outsb
adc
adc
mov
out
imul
push
fstpl
imul
push
in
mov
imul
jge
mov
sbb
sti
inc
cwtl
sbb
inc
idivl
mov
adc
or
fnstenv
mov
jno
adc
pop
jmp
rorb
push
mul
in
out
loop
mov
cs
out
xor
int
subl
imul
push
iret
push
sbb
push
add
cmpsb
ljmp
inc
int3
jmp
add
inc
sub
push
mov
into
orb
mov
sbb
sub
scas
mov
jo
ljmp
cmpsb
push
sub
inc
arpl
ds
ljmp
std
add
or
stos
test
mov
aam
sarb
fwait
push
es
hlt
xor
lods
lds
mov
adcl
jecxz
incb
jbe
pushf
repz
mov
pushl
test
hlt
bound
pop
inc
adc
mov
inc
xlat
pushf
add
push
sub
mov
bound
mov
das
add
out
roll
fisttps
add
push
sub
push
pop
sub
or
xor
test
std
lods
sub
insl
sbb
sahf
inc
xchg
adc
cmp
jne
sub
push
int
xor
repnz
gs
mov
dec
mov
jb
push
sub
cmp
fistpl
mov
dec
xor
pop
insl
cmpsl
dec
cmp
frstor
adc
xchg
sbb
punpcklbw
pop
jbe
jmp
test
fnstcw
iret
clc
and
mov
dec
iret
shl
sbb
add
push
xor
xchg
out
test
add
jbe
call
adc
adc
ja
cmp
gs
mov
lret
adc
adc
mov
sbb
repnz
xlat
mov
push
inc
mov
es
adc
xorl
ja
cltd
lods
mov
mov
scas
sub
cmp
dec
cmp
pushf
mov
fwait
rcrb
test
cmpsb
xor
add
pop
or
or
lahf
pop
loopne,pt
popl
cmp
mov
push
frstor
je
mov
mov
in
cmc
test
cmp
mov
les
shrl
jge
push
stos
xorb
nop
or
les
fmulp
imul
cs
jno
adc
cmp
mov
adcb
adc
fsubrs
dec
sub
mov
stc
test
rorl
pushf
jne
pop
sub
push
mov
inc
enter
xor
rorl
add
lods
mov
and
nop
jmp
push
xchg
mov
enter
xor
loope
repz
push
pop
pop
pop
mov
push
scas
sbb
push
push
push
pop
jl
lods
sbb
cmp
out
ja
loopne
js
lret
lock
jge
pop
addr16
adc
fs
mov
sbb
imul
arpl
sbb
lcall
cli
xchg
stos
in
ret
scas
jae
and
push
or
test
sbbl
lock
sti
cmpsl
sub
int3
adc
jle
lock
mov
fdivs
push
call
sbb
scas
imul
mov
jmp
rol
in
mov
or
in
push
jo
dec
mov
sbb
out
xor
sbb
subl
jl
test
pop
dec
jne
out
outsl
dec
movsl
dec
mov
adcl
pop
adc
scas
push
mov
mov
cmpsb
adc
mov
popa
lods
jmp
xchg
mov
fmuls
ja
lds
sub
cli
mov
dec
popf
pop
mov
jge
rcll
les
push
sub
sub
test
lock
hlt
xor
scas
fbstp
sbb
xchg
push
lea
sbb
inc
test
or
mov
je
push
xor
sub
lcall
dec
fisubs
sti
mov
mov
jp
sbb
sbb
js
ljmp
fildl
pusha
dec
jp
lcall
dec
mov
ret
jo
and
hlt
mov
in
dec
sbb
loopne
inc
fisubs
sub
popf
movsb
sbb
and
xchg
negl
shlb
shrl
popa
negl
dec
loop
push
int3
cmpsl
loop
out
push
pusha
cld
xchg
out
mov
std
cmc
adcl
int3
loope
xorl
fs
cwtl
cmp
add
gs
mov
sar
fcmovb
les
imul
dec
hlt
jnp
inc
push
sbb
out
roll
jle
addr16
enter
ret
test
xchg
jle
in
sbbl
adc
sbb
lret
inc
dec
push
aam
xchg
adc
and
jle
loopne
daa
xor
mov
mov
imul
scas
fstps
test
and
stc
cltd
jnp
or
hlt
cwtl
clc
cmovbe
mov
test
push
xchg
cld
sub
push
les
jl
cmc
int3
jge
rorl
jae
lea
lods
mov
fsubr
shrb
orb
jp
movsb
mov
test
push
mov
ss
and
addr16
adc
movsl
cmp
lret
aam
pop
ja
mov
test
xlat
adc
or
je
push
fistpll
adc
push
ret
jbe
into
test
pusha
cmpsl
ja
jmp
jle
bound
or
in
push
lods
movsb
xchg
or
addr16
sahf
in
adc
pushf
sbb
jecxz
js
mov
lahf
outsb
mov
or
or
sbb
cmp
inc
jb
aad
rclb
cmp
idivb
das
inc
in
ljmp
push
pop
sub
jb
addr16
movsl
sahf
and
sbb
xor
ja
fistpll
mov
xchg
dec
ffree
dec
push
pop
fidivrs
leave
mov
mov
dec
outsb
or
cmp
mov
mov
xor
mov
stos
pop
xchg
shr
popa
sbb
int3
push
cwtl
lea
sbb
movsl
sub
inc
jnp
xchg
sub
mov
rorl
aam
adc
jne
jb
push
cmp
popa
aam
or
mov
cmp
xor
bound
movsl
adc
pop
pop
add
mov
sarl
in
mov
gs
mull
push
popl
xor
imul
pushf
cmp
add
mov
cmp
sbb
cmp
cmpb
mov
iret
add
repz
cltd
lret
addb
push
mov
repnz
fimuls
movsl
lds
stc
hlt
popa
xor
call
and
fimull
adc
lds
or
ret
mov
push
xor
popf
ss
inc
mov
jecxz
sbb
data16
addr16
adc
in
pop
insl
jbe
mov
pushf
pop
sbb
xor
sub
out
mov
adc
push
xchg
dec
lds
xor
xchg
mov
into
mov
sbb
pop
xor
orl
mov
jge
repz
pop
ror
pop
inc
fwait
stos
sub
push
lcall
pushf
sbbb
mov
jmp
scas
cmpsb
shll
call
fldenv
jg
sbb
or
xor
daa
and
roll
and
xlat
inc
outsb
cmovns
mov
lahf
lods
stos
lea
xchg
cmp
mov
clc
xor
mov
iret
sub
repnz
movsl
inc
push
sbb
aaa
sbb
int3
push
inc
push
adcb
dec
loope
insb
inc
pushf
sbb
or
jno
movsb
mov
adc
sbbl
pop
push
int3
xor
mov
jle
cmpsb
int3
repz
aaa
mov
loop
sti
push
fiadds
sub
lea
and
nop
xchg
xchg
pop
fs
in
sub
lret
push
ss
sbb
push
setg
aas
xchg
push
sarl
cmpl
ljmp
sbb
mov
add
push
movsl
mov
cmp
pop
into
pop
push
sub
mov
mov
push
sbb
push
push
xchg
pushf
sbb
ja
cmp
hlt
dec
sub
fdivs
push
xchg
clc
cmp
mov
cltd
jmp
outsb
movsb
inc
lods
inc
inc
rcrl
sbb
cwtl
inc
sbb
shr
js
iret
jae
iret
mov
push
cmpsb
leave
inc
stos
scas
aam
push
cltd
add
fisttpll
mov
and
mov
lahf
mov
lea
call
dec
mov
push
and
ja
sti
ja
sbb
rcl
fsub
pop
mov
mov
xchg
add
jecxz
ljmp
addr16
push
leave
sbb
iret
jno
ds
lds
int
sub
add
add
fyl2x
test
lret
pusha
hlt
pusha
pop
das
jmp
pop
sbb
enter
pop
or
dec
pop
jbe
fstpl
xor
xor
push
out
pop
andl
mov
jne
or
addl
pop
xchg
sub
xchg
jmp
aas
cld
push
sbb
mov
mov
mov
dec
fwait
insb
js
repz
std
cmpsb
mov
or
lcall
lcall
mov
mov
adc
out
mov
add
mov
cmp
mov
mov
aad
subl
movb
dec
cld
push
sbb
incb
and
in
cmpsb
addr16
lods
sbb
ret
sti
sub
jb
out
pop
xor
or
xorl
or
push
push
ds
loope
sti
clc
xchg
jbe,pn
mov
loope
xor
mov
flds
mov
xor
xchg
add
enter
adc
loop
adc
ror
int
xchg
insb
pop
iret
lret
sub
cmp
mov
in
nop
in
xchg
inc
in
je
sbb
mov
inc
pop
or
popa
fs
scas
dec
repz
lahf
and
cmp
xchg
jp
pop
pusha
jecxz
xchg
push
out
push
lods
cmpsl
jp
test
push
xchg
test
push
test
popf
lcall
test
sarl
push
dec
daa
insb
add
fwait
aaa
movsl
lods
dec
daa
mov
mov
jo
or
jle
add
fwait
dec
push
gs
sub
jmp
dec
out
xchg
out
xor
lret
cmc
insb
imul
xorb
shll
gs
js
cmpsl
into
pop
sbb
in
push
stos
mov
aaa
jge
jno
adc
mov
sahf
adc
or
je
push
adc
in
sbb
insl
adc
ljmp
jbe
pusha
cmc
fsub
xchg
fbstp
sti
rorl
cmp
sbb
add
shll
stc
lea
mov
test
inc
dec
int
gs
popa
sbb
jno
jp
pop
add
imul
pop
mulb
nop
outsb
imul
and
cmp
jl
hlt
repnz
iret
es
cmp
pusha
test
and
cmpsl
xchg
add
xchg
ja
cmpsb
jnp
test
adcl
enter
and
xchg
jno
cmp
fcmovnu
jle
sbb
sub
incb
stc
sahf
test
inc
scas
xor
push
mov
push
and
xchg
out
adc
mov
jl
push
dec
cmp
addl
out
fs
adc
or
mov
dec
mov
mov
sbb
push
outsb
add
cmpsl
sti
fdivs
adc
leave
pop
mov
mov
mov
in
cmpsl
das
inc
ljmp
and
pop
push
fidivl
push
pop
addl
pop
cmc
xchg
outsl
mov
add
mov
mov
mov
jg
or
dec
pusha
mov
loopne
sub
fadd
push
xor
pop
jmp
mov
adc
or
fs
pop
adc
pop
aad
pop
mov
lret
inc
sbb
out
mov
scas
and
adc
push
jae
rolb
sbb
es
add
subb
leave
xchg
dec
leave
outsb
mov
mov
xor
pop
mov
nop
loop
mov
add
jnp
lret
enter
cs
popa
add
jg
mov
loop
push
mov
push
sahf
std
rclb
cmp
adc
xchg
imull
inc
or
jge
sti
ja
stos
mov
mov
mov
xchg
ss
xchg
repz
and
shlb
cmp
call
sbb
push
mov
cmpsl
out
jno
adc
xchg
imul
fcmovu
or
insb
jae
orb
cmp
fcoms
mov
push
cmp
int
ret
arpl
mov
mov
jae
insb
popf
lret
imul
cs
int3
xor
imul
and
mov
jmp
negb
cli
cmp
mov
xchg
mov
dec
mov
arpl
push
ja
movsl
dec
cli
daa
cs
mov
popf
icebp
xor
aas
dec
cs
sbb
push
shrb
iret
popf
jp
das
inc
in
and
fdivrs
lock
dec
scas
or
mov
enter
lock
adc
jecxz,pn
mov
mov
cmp
jle
push
fldenv
ljmp
jmp
inc
xchg
mov
sub
popf
out
shrl
addl
add
insl
sub
push
movsb
dec
js
ret
jns
jl
add
insb
xor
mov
and
addr16
sbbl
mov
outsl
add
pop
pop
push
sbb
icebp
out
or
dec
add
and
push
and
ret
pusha
mov
movsb
fiaddl
xchg
jno
mov
adc
pop
sbb
fimull
push
inc
scas
aam
testl
lret
enter
mov
movsl
push
fimuls
lea
mov
or
and
mov
pop
jle
sub
in
data16
jne
sti
outsl
test
mov
movsb
jmp
pop
ja
int3
mov
add
inc
out
daa
ficoms
or
sub
lods
push
gs
lods
jp
jle
push
adc
add
sub
das
adc
out
mov
shlb
lret
dec
pop
rep
inc
outsl
hlt
int
push
insb
mov
and
std
lea
loope
xchg
in
xor
pushf
sahf
loop
mov
sub
mull
xchg
xchg
xchg
push
jno
dec
lods
scas
lcall
pop
sub
or
nop
sarl
lret
fucomi
xchg
into
std
sti
test
je
cmp
arpl
int
cmpsl
push
cli
leave
fdiv
divl
lock
xchg
nop
inc
sub
mov
mov
test
jb
jbe
xorb
cld
cmp
lret
add
ja
loopne
cmp
xchg
jnp
xchg
out
inc
mov
popf
xchg
push
add
call
adc
push
aas
leave
push
gs
clc
mov
cltd
insb
stos
popf
mov
mov
cmp
popf
movsb
sbb
es
ja
loop
jns
fldcw
xor
call
xchg
jbe
mov
repz
imul
test
push
dec
cmpsb
cmp
cmpsl
mov
add
rcr
pop
lods
push
ret
fisttps
lret
sub
ds
rclb
movsb
movsb
push
cwtl
ret
pop
dec
dec
jno
sbb
sbb
adc
mov
test
test
ds
fwait
repz
lods
cli
adc
push
add
cmc
rcll
mov
call
ret
je
es
adc
jge
test
mov
push
dec
sub
inc
das
push
lock
std
popa
leave
mov
out
xchg
fdecstp
out
sub
loope
lahf
lcall
imul
cmp
ljmp
sbb
push
mov
and
pop
int
sbb
jecxz
xchg
addb
lods
test
ja
sub
pop
fiadds
jo
clc
and
mov
fs
mov
sbb
mov
cmp
push
pop
and
cmp
jns
stos
adc
mov
push
sbb
mov
addr16
dec
es
pop
int
dec
shll
icebp
pusha
loope
inc
adcl
and
outsl
les
fbstp
pop
cmp
jp
sub
loopne
jp
dec
idivb
aaa
mov
jnp
pusha
dec
insb
push
das
es
loope
mov
sbb
jmp
js
mov
jnp
mov
imul
xchg
cmpsl
dec
cli
cmp
cmp
push
lahf
les
pop
xor
push
push
sti
mov
jae
ficomps
pop
jnp
ljmp
xor
jmp
mov
std
mov
pop
pop
xchg
push
js
cmpsb
sub
repnz
xor
jae
sbb
mov
ret
sub
das
mov
xchg
xchg
jmp
pop
jns
pushf
mov
loopne
test
icebp
loope
loop
push
mov
adc
mov
fsubr
mov
xor
cmpsb
or
or
pop
rcrb
push
in
loopne
mov
int3
sbb
shlb
push
hlt
mov
bound
and
bound
jge
ja
out
jl
mov
addr16
mov
mov
mov
popf
add
xor
outsb
pop
shl
adc
dec
mov
in
xchg
test
mov
ds
xchg
daa
mov
or
scas
aaa
orl
call
inc
dec
add
stos
mov
lods
int
add
push
adc
pop
shlb
fdivs
xor
push
movsb
push
adc
jo
nop
fwait
xchg
and
data16
cld
mov
outsl
xchg
xchg
xchg
or
cwtl
mov
nop
mov
nop
rcll
lds
push
xor
push
push
int
sti
adc
cmp
shll
cmc
mov
mov
mov
pop
daa
std
pop
insb
cmpsb
inc
or
pop
mov
dec
int3
popf
push
cmp
inc
in
push
out
xchg
push
jb
ret
mov
or
pop
xchg
push
push
dec
bound
mov
fsubs
dec
scas
xor
xchg
in
sbb
mov
cmp
push
popa
insb
jge
mov
sub
push
icebp
stos
push
mov
fisttpl
loope
enter
fists
daa
and
and
mov
stos
testl
sbb
repnz
ficoml
or
dec
loope
jge
scas
idivl
rol
gs
mov
and
xchg
aas
fcompl
sub
dec
sub
test
rcrb
sti
jae
sbb
lahf
jmp
push
xor
adc
incl
mov
mov
mov
pusha
jge
test
das
fsubl
lock
outsl
xor
sbb
ljmp
insb
mov
mov
cmpsb
xchg
xor
pop
pushf
fildll
mov
pop
cmp
rol
xchg
out
leave
mov
aad
bound
push
xchg
sti
shll
imul
sub
ret
icebp
mov
lea
aaa
inc
addr16
push
dec
fisttpll
xchg
fcoms
pushl
fsubrs
js
das
push
sub
insb
roll
out
aam
jae
adc
hlt
int3
es
fcoml
test
dec
xor
data16
add
xor
jecxz,pt
fistl
push
xlat
xchg
inc
popf
dec
std
test
mov
nop
inc
cwtl
mov
fbld
xchg
jae
pop
mov
fistpl
out
test
jle
div
adc
call
dec
stos
ret
add
test
pop
inc
cltd
js
mov
adc
sbb
xchg
scas
sbb
in
clc
mov
test
xchg
jmp
inc
jmp
sahf
dec
and
jp
les
mov
add
insl
jae
faddp
add
xchg
jno
lods
into
ret
xor
jbe
push
xchg
fcomps
lret
inc
andl
mov
stos
mov
add
pushf
mov
mov
fisubl
sbb
insl
and
push
inc
icebp
jl
add
sti
or
fadd
inc
addl
xchg
leave
je
adc
mov
xchg
shl
popa
fnstenv
ljmp
sub
xchg
js
xlat
in
mov
cmp
addr16
repz
or
inc
mov
pop
ljmpw
cld
lods
pop
int
dec
push
xchg
lret
es
mov
int3
fxam
mov
imul
sbb
xchg
stos
imul
test
push
shlb
cmc
mov
dec
shrb
std
and
gs
loop
out
fdivs
dec
jo
inc
adc
lods
mov
pop
pop
pop
push
push
ja
pop
rolb
cmp
sub
add
xchg
pop
pop
ja
pusha
pop
xchg
into
jbe
data16
sub
repz
call
das
mov
or
adc
pushf
lock
sub
cmp
inc
lcall
push
pop
shlb
sub
push
les
fwait
mov
outsb
dec
push
fsubrp
lods
dec
jno
mov
repz
mov
mov
insb
shrb
push
lret
jb
icebp
into
divb
fldt
in
adc
mov
dec
mov
and
pop
repnz
test
shlb
sbb
mov
sbb
mov
add
push
sbb
push
je
mov
sbb
jne
add
scas
test
aaa
je
push
std
aaa
movsb
fcmovnbe
repnz
pop
dec
sti
insb
push
out
inc
pop
adc
xchg
cmpsl
in
push
dec
insw
cmpsl
pop
test
fisubs
lea
fmul
push
cmp
outsb
fcmove
cmpsl
fxch
push
aam
mov
dec
cli
ss
mov
cli
dec
or
mov
pop
jg
add
and
cmp
mov
adcl
xor
into
lcall
test
aam
popf
or
incb
and
ss
push
cmp
mov
aas
in
add
dec
lcall
mov
imul
cmp
cmovnp
ret
cmp
mov
popf
push
mov
dec
mov
lret
in
test
sub
addr16
dec
call
sbb
test
loopne
jmp
in
shrl
jecxz
mov
cmp
jp
adc
inc
in
cmpsl
xchg
xchg
nop
int3
mov
mov
repnz
mov
int3
aaa
cld
xchg
aaa
inc
iret
mov
sbb
xor
mov
out
pop
fdivrl
inc
loope
inc
mov
cld
nop
push
mov
xor
cmp
ret
das
subb
or
pop
lret
mov
xchg
pop
sbb
add
cs
xor
mov
lods
add
xor
mov
ds
icebp
jb
das
xor
inc
negb
cld
xor
rclb
sbb
pop
add
imul
inc
das
rclb
or
aad
mov
dec
shll
adc
push
pop
fbld
sbb
adc
push
sti
mov
jmp
mov
mov
cmp
arpl
jg
cltd
ret
pop
inc
inc
adc
mov
xorl
test
or
std
mov
or
lods
sti
ret
xor
andb
xor
repnz
mov
outsl
xchg
rcll
mov
out
mov
int
les
push
out
imul
jnp
jmp
push
xor
or
mov
push
in
data16
shlb
fstpl
and
xchg
addb
ret
and
mov
icebp
incb
mov
inc
btr
jbe
arpl
mov
cmp
cmpsl
and
sti
orb
int
fstpt
add
das
mov
popa
pushf
test
cltd
add
insb
test
ljmp
ja
jle
loopne
push
mov
jb
repz
dec
cld
sbb
hlt
sbb
popa
sbbl
fsqrt
adc
test
mov
rcll
lds
mov
inc
mov
mov
orl
push
inc
lret
out
fwait
sub
mov
insl
sti
xchg
cmc
inc
jns
inc
push
jns
les
jecxz
jbe
icebp
jecxz
ret
rcll
or
xchg
das
out
push
lods
pop
lcall
movsl
xchg
cmpsb
test
push
pop
jp
or
out
imul
sbb
jge
mov
adc
dec
dec
or
mov
xor
mov
push
lahf
cmp
ja
dec
ss
adc
pop
adc
jo
cmp
mov
mov
push
cmp
fs
stos
inc
out
mov
push
shlb
jge
sbb
stos
jle
repnz
in
sbb
xor
out
in
repnz
jbe
xorl
imul
xchg
cld
fildl
mov
fsub
mov
push
dec
sbb
stos
mov
jno
add
mov
js
call
jp
jb
xchg
call
test
outsb
pop
call
lret
icebp
jge
insb
xlat
pop
cmc
rorb
mov
sub
int3
jp
je
rorl
outsl
cmp
push
adcb
out
outsl
stos
adc
push
fistl
inc
jge
pop
subb
popa
pop
sahf
jns
and
mov
out
ljmp
dec
xchg
mov
std
xchg
fwait
pop
stc
sbb
xchg
mov
inc
icebp
out
mov
add
add
pop
jecxz
pop
mov
sbb
mov
or
add
xor
cmc
pop
sbb
cli
xchg
out
std
inc
cmp
sbb
dec
shlb
fdivrs
or
mov
xor
es
pop
adc
ljmp
lret
push
add
in
in
insl
push
mov
jecxz
inc
adc
mov
pusha
out
xor
jl
jnp
inc
call
and
mov
pusha
jecxz
rol
in
loope
insl
ljmp
jge
xor
cmpsb
cmp
loop
std
jae
gs
sub
or
lahf
push
inc
shr
dec
outsb
dec
mov
mov
mov
cmc
cmp
and
fildl
xor
adc
jns
mov
hlt
std
cmpsl
aas
xor
adc
inc
out
es
adc
aas
pop
lods
inc
std
mov
inc
inc
xorl
sub
mov
sub
push
enter
xor
dec
imul
add
loopne
popf
lock
dec
or
xor
add
jne
jecxz
cmp
out
daa
mov
sarl
xor
test
dec
jge
add
jae
add
cmp
xchg
ror
lea
fbld
xchg
or
pop
scas
jl
outsb
fadds
xor
add
push
mov
jo
push
loopne
jp
mov
lock
decb
fs
inc
pop
arpl
les
sbb
aaa
add
sub
xor
mov
neg
inc
out
and
jno
sbb
xchg
imul
pop
mov
sub
shll
in
scas
mov
rol
dec
aam
imul
cld
sbb
sbb
in
add
sbb
test
scas
mov
sbb
out
test
xor
add
mov
lea
iret
testl
dec
xchg
icebp
movsl
and
sbb
and
dec
pop
mov
subb
mov
push
sbb
adc
fimuls
xlat
dec
loopne
popa
pop
test
fimull
xor
aaa
jl
or
pop
clc
out
mov
mov
and
in
add
outsl
negb
repnz
mov
push
inc
xor
inc
mov
pop
les
mov
lea
jp
das
pop
addr16
sub
mov
xor
enter
mov
aad
mov
sub
push
test
les
mov
ja
jnp
test
xchg
out
pop
sub
mov
insl
jp
push
jp
jo
lods
imul
add
imul
fucomi
pop
cmp
jbe
daa
rcl
sbb
jg
jmp
pop
lods
aaa
mov
popa
push
fisttps
cmpsb
push
mov
xchg
pop
nop
push
fimull
jp
adc
stc
test
je
out
lret
cmpsl
data16
arpl
and
cmp
xor
iret
insb
dec
xchg
jnp
sarb
fistpll
bound
fisubs
and
insl
pop
fisttpll
push
jnp
mov
jbe
and
jne
xor
mov
gs
je
addr16
push
and
cmp
test
push
mov
dec
fwait
cmp
mov
stos
jge
or
xchg
pop
aas
out
xchg
or
test
inc
and
push
fdivrs
test
cld
add
inc
xchg
arpl
pop
aas
adc
push
cmp
xor
mov
xlat
cmovns
test
mov
cmp
mov
addr16
ja
stos
popf
cmp
inc
or
insl
adc
xlat
lret
in
nop
pop
sub
pop
fisubl
sub
rorb
push
cli
and
addb
cmp
mov
dec
repnz
inc
lds
mov
loope
pop
inc
push
adc
xchg
add
cmp
cmp
pusha
rolb
aaa
xchg
mov
mov
movsb
enter
xlat
add
pop
orb
push
repz
jno
sub
ss
mov
outsl
popa
cs
fs
xor
mov
scas
xchg
or
mov
mov
pop
out
in
mov
icebp
test
inc
mov
and
notl
mov
cld
inc
repz
sub
stos
out
adc
negb
lds
and
mov
jns
xchg
add
xor
mov
mov
lcall
cmpb
leave
mov
and
adc
mov
xchg
push
push
mov
ficoml
fwait
adcb
or
clc
adc
pop
in
push
cmpsb
mov
mov
aas
adc
jnp
ljmp
in
clc
inc
popf
outsl
add
xor
lret
icebp
xchg
cltd
or
pop
cmc
xor
pop
inc
call
or
dec
add
mov
sbb
ja
mov
mov
cmp
call
call
mov
fbld
jecxz
stos
jo
ss
scas
pop
ss
jne
jne
daa
sbb
inc
push
outsb
loop
mov
mov
and
stc
in
pop
js
out
sti
jae
dec
jo
test
push
xchg
imull
mov
or
jo
push
mov
mov
jmp
lods
sti
jb
fmull
aas
sub
sub
or
daa
loopne
out
mov
addr16
push
mov
sub
or
pop
das
inc
inc
in
mov
sbb
jns
inc
in
cmpsb
ret
pop
dec
lcall
pop
sbb
call
add
jge
call
push
nop
outsl
stos
adc
js
mov
xchg
aaa
aam
into
insb
mov
dec
dec
cmp
shll
or
lret
js
lock
jns
mov
flds
shlb
cmp
inc
inc
cld
pop
loop
fidivl
unpckhps
mov
xchg
adc
pop
mov
repz
cli
out
cwtl
mov
mov
cmpsl
insl
mov
mov
sti
or
push
xchg
mov
adc
loopne
cmpl
cwtl
out
out
lret
push
lock
loope
push
cmc
adc
sbb
xor
xlat
mov
lods
hlt
mov
shll
push
rorb
ret
int3
adc
outsb
jg
rcrl
add
movsb
mov
into
lret
ret
pushf
sbb
xor
lea
aas
jnp
lods
xchg
je
lea
sbb
cmc
pusha
and
cmp
stos
in
and
pop
xorl
inc
loopne
sub
inc
sub
push
pop
cwtl
mov
jmp
sbb
push
mov
xor
or
sbb
popa
das
push
mov
roll
xor
xor
sbbb
mov
xchg
add
and
pop
outsl
inc
xchg
into
cs
push
add
sbb
mov
pop
mov
lea
and
test
dec
mov
in
ja
xor
lea
dec
jne
aas
add
or
push
pop
inc
add
jge
into
push
in
jno
cltd
sarl
lock
enter
mov
cmp
push
push
sub
int3
adc
fists
inc
sub
push
pop
xchg
cmpsl
add
dec
loopne
inc
xor
loopne
inc
aad
fcmovne
gs
and
mov
sbb
lods
js
jae
xchg
or
or
enter
sahf
cmpsb
mov
dec
sub
scas
js
rclb
andl
stos
adc
jecxz
inc
mov
cmpsb
outsb
sahf
and
dec
push
jo
push
xchg
add
pop
lods
out
mov
or
imul
dec
mov
inc
cmpb
or
sub
sti
repnz
inc
mov
pusha
push
mov
add
push
lods
pop
xchg
push
fisttpll
inc
scas
es
mov
dec
pop
fldenv
mov
loopne
pop
scas
mov
mov
jmp
push
nop
insl
jle
fisttpl
inc
add
stos
push
aaa
inc
std
pop
int
sub
pop
iret
push
jmp
ljmp
mov
sub
subl
push
dec
or
test
stos
or
sub
rorb
sub
jl
mov
xchg
fidivrs
sti
and
xchg
shlb
test
push
and
das
mov
push
lock
cltd
jns
fdivrl
pop
add
pop
xor
sbb
push
dec
xor
xor
xchg
insb
iret
or
mov
xchg
jl
or
jecxz
aam
adc
test
fisubl
jmp
xlat
loopne
mov
cmpsb
dec
fdivrp
stos
aam
std
gs
mov
dec
jo
jbe
jb
mov
pop
ret
das
and
in
pop
rolb
add
out
mov
loope
dec
cmp
and
in
sub
mov
adc
adcl
adc
cld
sub
ja
mov
jmp
pop
sub
jl
pushw
mov
adc
xor
xchg
push
push
cli
push
mov
xor
push
test
cmp
or
in
js
fwait
movsb
inc
pop
shll
add
negl
pop
test
aas
fnstenv
rol
outsl
mov
inc
xchg
pushf
daa
aad
pusha
mov
scas
mov
pop
push
fisubrs
push
data16
jo
adc
lock
inc
leave
pushf
rorb
ja
pop
fldcw
clc
sti
adc
jle
incl
cmp
scas
add
add
and
es
mov
adc
mov
and
pop
dec
pop
fbstp
cltd
leave
out
pop
inc
mov
bound
jl
cmpsb
test
pop
ret
dec
inc
jge
or
push
imulb
movl
clc
ljmp
loope
or
into
jg
rorl
in
stos
jno
mov
lea
fistpll
add
sahf
sbb
sub
ja
les
cld
jb
cli
pusha
aam
jmp
fwait
stos
dec
mov
nop
in
jp
out
add
xchg
call
mov
push
and
xchg
xchg
push
nop
out
lcall
pop
push
pusha
jecxz
imul
mov
pusha
rcrl
cmp
fldenv
pushf
adc
hlt
sbbb
incb
fnstcw
cmp
pop
fisubrl
pop
js
rcll
loopne
inc
mov
rorb
pushf
mov
inc
scas
shll
dec
cmp
icebp
cmpsb
mov
mov
push
sti
jb
lds
test
scas
lcall
pushf
pop
out
cli
inc
das
sarl
mov
lret
nop
ret
mov
jns
cmpl
mov
mov
int
loopne
hlt
inc
data16
into
adc
cmpsl
fcmove
incb
jbe
ss
mov
push
mov
int3
pop
pushf
rorl
imul
jle,pn
scas
dec
out
push
cmp
add
cltd
outsl
sahf
mov
add
enter
pusha
push
jge
jl
test
shrb
and
mov
inc
popa
pop
aas
jne
outsl
mov
mov
addl
es
call
imul
scas
fwait
cmp
movsl
mov
popa
mov
lcall
lods
push
popfw
push
mov
hlt
ss
int3
jns
xchg
sub
mov
mov
lret
pop
xchg
mov
fisubrl
sahf
fwait
pop
test
cwtl
mov
add
cmpsb
loope
or
shll
add
jns
dec
mov
inc
mov
bound
cld
xchg
shl
dec
gs
jg
negl
jmp
mov
aam
lods
mov
mov
pop
cli
jle
or
push
int
adc
pop
cmpsl
aad
int
loope
jne
or
mov
xchg
enter
pop
insl
out
lock
aaa
mov
push
xorb
mov
sub
push
xchg
rcr
or
mov
cli
mov
push
lock
push
lea
lcall
mov
inc
sbbb
inc
ja
f2xm1
adc
cmpsl
xchg
flds
sbb
dec
sub
fdivrl
vpmulhw
ds
xchg
xor
insb
inc
movhps
adc
push
outsb
push
dec
iret
sbb
int
es
dec
lret
adc
std
dec
shr
xchg
or
add
mov
addr16
test
into
adc
insl
pop
xchg
fidivrl
and
je
mov
imul
shlb
jmp
inc
push
sub
ds
roll
cmpsb
mov
cwtl
adc
mov
mov
add
xchg
adc
mov
mov
sbb
cwtl
sub
jg
sub
int
rcr
es
and
push
xchg
add
movsb
jb
imul
lods
xchg
jmp
push
cmp
loopne
inc
repnz
dec
lods
xchg
xlat
gs
shrl
adc
popf
cmp
pop
inc
cmp
jecxz
clc
push
mov
sub
adc
sub
mov
incl
add
mov
push
jb
inc
sub
gs
xor
mov
adc
mov
fstp
out
sub
pushf
mov
fisubl
repnz
jns
xchg
xorl
jle
mov
xchg
pop
into
ss
add
sbbb
or
xchg
mov
xor
xor
ficoml
cmpsb
test
push
dec
push
xor
mov
mov
dec
cmp
jne
fildll
dec
cld
mov
or
dec
pusha
fs
and
jne
loop
pop
imul
inc
inc
xchg
cmp
insb
in
call
lret
test
dec
inc
pop
mov
jno
pop
mov
and
cli
rolb
call
aam
pop
cld
jecxz
cmp
push
cmp
scas
mov
sbb
mov
test
pop
dec
pop
mov
jg
cmpb
add
ret
and
jbe
aaa
popa
fs
cmp
dec
imul
jecxz
and
xor
flds
mov
rorl
sbb
es
sub
nop
push
aaa
push
xor
xchg
pop
mov
dec
leave
sub
ret
jae
sbb
iret
and
and
and
sbb
fs
cmp
call
mov
dec
iret
inc
cmpsw
push
jp
test
and
pushf
pop
lahf
fwait
dec
pop
xchg
in
pusha
push
loopne
xchg
nop
test
push
xchg
xchg
out
push
adc
jno
leave
add
mov
and
lret
jle
pop
andb
and
jp
push
adc
ss
fcmovb
in
dec
sub
mov
negb
icebp
inc
mov
pop
sub
shl
xor
push
mov
push
inc
ja
dec
mov
loop
idivl
fnstsw
sub
insb
mov
sti
and
pop
insb
jecxz
xchg
pop
mov
adc
lahf
call
xchg
outsl
scas
loope
jo
cli
int3
maxps
pop
jmp
jp
add
aam
adc
push
push
push
out
inc
jp
and
icebp
ja
xor
mov
rcl
cmp
and
adcb
inc
insb
pop
notl
dec
sub
fcmovnbe
cli
jne
aas
push
jns
clc
mov
mov
dec
leave
and
jmp
pop
sbb
les
mov
in
cmp
es
stos
pop
aad
add
pop
and
repnz
das
in
jae
mov
jecxz
xchg
divps
pop
inc
pop
push
push
or
mov
js
adc
pusha
and
movsb
int
jl
out
pop
xchg
xorb
sub
sbb
std
xor
mov
insb
push
mov
dec
pop
movsb
cli
stc
push
jmp
cld
ss
ljmp
mov
push
or
fldl
inc
mov
xchg
fmull
pop
mov
sub
push
sub
outsb
xor
or
pop
stc
icebp
mov
pop
or
push
mov
dec
dec
loope
mov
mov
cs
cld
jg
cmpsb
loop
push
dec
addr16
push
push
adc
mov
or
push
or
aas
sbb
add
sbb
jmp
ror
pop
pop
push
push
rcrl
jns
and
shl
or
les
adc
in
scas
push
clc
or
dec
adc
imul
je
ret
test
pop
adc
push
cmp
pop
mov
dec
fsubrs
xchg
scas
xor
cwtl
iret
xchg
lock
lods
inc
sub
call
movsb
sbb
shl
aaa
and
insl
sub
lret
js
inc
adc
push
add
ret
xchg
pop
or
or
mov
test
rcrl
mov
mov
leave
stos
int
mov
mov
lods
in
lcall
push
xchg
hlt
ja
adc
fs
xor
adc
mov
add
add
or
xlat
fiaddl
xor
xor
and
ret
pop
inc
adc
pop
outsl
decl
mov
xor
fs
arpl
lret
repz
lock
xchg
mov
out
in
dec
sti
fbld
push
icebp
mov
xchg
jmp
push
xchg
push
or
outsl
push
jl
adc
xchg
mov
or
sub
test
jo
and
mov
mov
push
jnp
inc
arpl
or
mov
sahf
xor
jecxz
cli
rcrb
jo
insl
jmp
fs
mov
scas
xchg
jecxz
test
es
fs
inc
cli
bound
mov
sti
or
not
repz
push
push
or
aam
scas
in
repnz
inc
or
mov
ss
jg
inc
cmpsl
push
les
mov
push
popa
and
dec
or
js
and
mov
lcall
cmp
in
xor
movsb
jb
jg
and
xchg
sub
sub
cmc
ret
xor
mov
in
mov
aas
leave
je
shll
jns
inc
ja
cmpsb
jnp
insl
adcl
aad
cmp
fistpll
push
scas
mov
add
cmp
xor
imul
adc
xor
mov
jecxz
pop
jbe
andl
inc
dec
popf
fiadds
das
daa
pop
inc
xor
lahf
int3
in
sub
pop
movl
jae
imul
cmc
es
out
jmp
pop
pusha
test
leave
cmp
dec
mov
ljmp
icebp
cmpsb
xor
sbb
jo
xchg
add
sbb
push
mov
adc
inc
cmp
leave
sub
push
scas
sub
adc
and
and
jnp
int
rolb
or
sub
add
adc
inc
ja
gs
sub
mov
xchg
add
cs
jl
in
sti
sub
pop
push
and
sbb
je
add
lods
fmuls
push
je
push
or
push
and
mov
addr16
lock
xchg
shlb
aam
addr16
push
fldl
dec
repnz
inc
loope
dec
and
mov
int
cmpsb
pop
hlt
sbb
icebp
mov
and
lret
dec
add
dec
fwait
pop
sub
xor
jb
mov
imul
fcomp
frstor
lea
adc
mov
mov
pop
cs
pop
cmc
push
fldz
mov
add
push
sbb
mov
in
icebp
test
dec
sbb
mov
mov
push
lds
insl
into
inc
test
mov
dec
jo
adc
cmpl
in
adc
mov
jae
xor
jecxz
fwait
mov
push
push
xor
xchg
push
in
cli
gs
cmpsl
add
push
in
popf
or
adc
xor
cmp
push
divb
inc
xchg
inc
das
inc
dec
adc
mov
pop
inc
out
sbb
xchg
xchg
push
xor
lea
mov
lds
mov
call
xchg
mov
push
cli
and
sub
xchg
xor
and
push
cmpsl
test
ret
stos
aas
or
mov
outsb
xchg
cltd
dec
lahf
adc
inc
sbb
aaa
adc
inc
mov
movsl
add
xor
cld
push
shlb
cmp
jp
jl
xor
test
xchg
cmpsb
repz
add
inc
sbb
dec
sub
push
outsb
xor
adc
or
scas
sub
lds
ficoml
in
or
enter
push
push
pop
xchg
inc
jl
jge
insb
fnstcw
outsb
mov
dec
jnp
push
adc
mov
ror
lods
inc
std
pop
mov
insl
dec
or
scas
push
sbb
ds
xchg
call
inc
jae
ret
mov
xor
fwait
jg
mov
jge
rcrl
and
andl
out
pop
inc
std
fnclex
outsl
dec
sbbl
cwtl
movsb
cmp
xor
clc
fstl
out
popa
negb
xlat
das
test
inc
and
xchg
icebp
enter
lea
xor
repnz
jge
xor
dec
xchg
pusha
xor
out
out
stos
mov
inc
nop
push
insl
or
inc
add
and
or
jmp
xor
ljmp
lea
fldl
lods
cmp
movsb
mov
mov
int
sbb
call
or
fsubrl
punpckldq
jp,pn
stc
int
es
es
mov
xchg
cmp
mov
dec
nop
stc
shlb
sub
js
ror
jnp
pusha
lret
adc
stc
jb
and
inc
cltd
xchg
cmp
pop
out
insl
inc
mov
gs
push
call
dec
mov
test
arpl
add
in
pop
aaa
stc
sub
sahf
clc
in
inc
mov
call
int3
mov
das
push
pop
jb
mov
aas
stc
imul
shll
or
out
pop
ror
cmpl
mov
subl
cltd
cli
lods
jmp
mov
pusha
push
mov
mov
into
out
in
adc
divw
in
fistpl
in
fcmovb
xchg
into
dec
lods
sub
scas
lea
lock
pusha
fsts
scas
pop
pop
dec
adc
dec
imul
aam
shlb
sub
pop
leave
incl
mov
mov
add
jno
mov
je
cltd
js
mov
lods
cmp
movsl
sarl
xchg
idivl
orb
mov
out
shll
lds
ret
incb
mov
jae
adc
bnd
add
in
sahf
mov
pop
cltd
out
sbb
es
inc
int
mov
pop
inc
pop
pop
in
cmp
xchg
xchg
lcall
rolb
xchg
mov
mov
loop
movsl
adc
inc
add
mull
je
push
jne
jae
and
pop
aas
cmpsb
idivb
and
outsb
cs
and
cmp
mov
cld
test
ds
call
or
data16
mov
not
outsb
jge
mov
push
ljmp
cwtl
dec
test
xor
xor
push
enter
test
sbb
cs
cmpsl
lods
xlat
cmp
lcall
call
xchg
sbb
jmp
mov
xchg
jo
repz
mov
push
stos
sbbl
xor
push
fisubs
pusha
pop
jge
test
xchg
push
loope
adc
xchg
lea
rol
rolb
lea
mov
lahf
leave
gs
add
aam
pop
xchg
mov
lods
xchg
mov
and
addb
js
lods
ret
shll
mov
adc
dec
add
cwtl
push
mov
xlat
outsb
mov
negl
mov
movsl
stos
sbb
shlb
push
dec
inc
push
or
pop
add
pop
push
sub
dec
aas
jmp
fimull
call
int
mov
push
roll
fwait
and
fcmovne
sbb
aad
mov
xor
xor
int
push
and
inc
pop
inc
jmp
data16
push
push
pop
test
fisubl
jge
sbb
push
or
or
in
lret
mov
popf
cs
add
daa
inc
xchg
bnd
inc
adc
hlt
out
rcr
add
sbb
or
out
repnz
xor
push
adc
cmp
test
adc
sub
xchg
mov
mov
sbb
nop
popf
in
cmp
lahf
cmp
adc
or
cmpsb
dec
inc
outsb
push
fstp
push
cmpsb
ss
mov
mov
and
testb
lock
jne
shrl
mov
outsb
mov
adc
fsubr
push
xor
fidivs
test
cmp
lods
and
mov
inc
xor
adc
fnstenv
lret
shl
enter
mov
xor
jnp
push
fisubrs
mov
pop
xchg
sbb
test
sbb
add
js
xor
pop
lock
das
mov
dec
mov
inc
mov
mov
push
add
dec
scas
jnp
std
jge
xchg
in
fs
lret
sbb
sbb
mov
adc
repz
test
mov
sub
lock
jge
mov
fxch
mov
pop
cltd
aad
into
out
cmp
pop
sub
lret
test
in
aam
cmp
popf
adc
dec
fdiv
sbb
mov
dec
pop
rolb
jp
lds
outsb
cmc
test
dec
insl
imul
ja
pop
dec
mov
aas
daa
gs
pushl
shr
mov
mov
cmc
mov
jg
in
add
adc
shr
pop
cmpsl
rcrb
sbb
lods
jo
push
insb
pushf
xchg
icebp
add
fcmovne
movsb
fisubrl
pushf
test
loop
xchg
xchg
dec
outsl
sub
or
sub
es
ds
and
mov
adc
outsl
add
popf
cwtl
fwait
ds
mov
pop
loop
movsl
fs
pop
add
jg
into
mov
xor
dec
mov
pop
out
mov
sub
mov
in
xor
sub
cmpsl
in
sub
loopne
aaa
loope
enter
adc
aad
or
pop
push
mov
inc
sar
xchg
xchg
pop
fimuls
imul
dec
fistpl
out
es
rorl
mov
adc
out
loopne
stos
xchg
xor
fnstcw
scas
loopne
fs
mov
mov
repnz
push
push
mov
cmpsb
inc
push
push
mov
sub
or
inc
add
sub
bound
sub
out
mov
int
pop
leave
lret
xchg
jae
into
es
imul
jle
cli
fnsave
roll
push
into
xchg
mov
mov
lcall
xor
or
mov
repz
lds
xor
adc
cmpsb
xchg
and
cltd
lock
adc
push
adc
nop
imul
add
adc
and
mov
pop
testb
mov
fldcw
pop
stc
adc
mov
fdivrl
fcoml
pushf
icebp
mov
daa
stc
dec
ret
hlt
and
imul
mov
fistps
sar
out
mov
pusha
xchg
pop
or
into
rol
adc
mov
xchg
bound
mov
xchg
dec
mov
cmp
inc
std
dec
dec
sti
dec
adc
cmp
push
xchg
ret
add
sbb
pop
fisubs
adc
mov
push
add
ss
jo
or
rcll
lds
adc
das
lods
ja
mov
jmp
and
addb
inc
jle
scas
clc
or
jne
and
or
or
dec
xchg
test
arpl
sbb
pop
jb
push
popf
fsts
stos
sbb
or
out
jae
div
cwtl
cmp
jmp
add
mov
or
sti
inc
ja
push
iret
cmp
enter
adc
imul
test
mull
cmp
add
in
int
fcoml
xor
cmp
insb
cwtl
jne
xor
xor
mov
loope
les
or
clc
xchg
repnz
or
lds
jbe
fwait
xchg
xorl
mov
lahf
mov
out
xor
scas
sbb
push
call
decl
inc
scas
imul
ret
in
test
xor
std
inc
xchg
and
add
mov
ret
aas
lds
mov
leave
xor
arpl
cmc
ss
pushf
clc
scas
jle
sti
xchg
movsb
mov
mov
sti
mov
fisttpll
test
mov
cltd
jge
jns
shll
push
mov
pushf
lea
adc
ss
rcll
ret
or
ret
ret
sub
inc
mov
mov
stc
and
sub
sub
push
mov
addb
and
and
cltd
push
cmpsl
lahf
xlat
mov
gs
arpl
inc
jg
cmpsb
nop
xchg
push
pop
cmp
in
pop
xchg
mov
cmp
sub
pop
or
fcoms
adc
mov
cltd
leave
shrb
push
lea
test
pop
jns
scas
add
sbb
ljmp
lahf
out
mov
adc
jge
ret
ss
mov
hlt
inc
test
pop
nop
fucomp
or
cmp
fwait
pop
lods
mov
jg
test
in
cmp
mov
leave
lds
in
pop
and
nop
and
cwtl
lea
xor
sub
push
cmp
mov
clc
outsl
cltd
pop
mov
sub
add
cmc
cmpsb
jecxz
pop
test
push
xchg
rclb
loopne
movsl
xor
sbb
jg
mov
dec
loopne
loopne
xchg
loop
test
iret
cmpsb
sbb
out
xor
and
dec
pop
mov
dec
daa
aam
add
mov
insb
pop
adc
fadd
outsl
shrb
add
ss
insl
push
mov
in
pop
add
pop
data16
dec
xchg
es
dec
icebp
add
push
lods
sar
fbstp
mov
shlb
aas
mov
test
inc
and
stos
or
lods
pop
and
dec
and
sahf
out
cmpsl
leave
loopne
push
das
out
pop
jb
jmp
jae
scas
outsl
cmp
inc
movsb
push
mov
fisubrl
sbb
aaa
mov
xor
push
test
push
out
sbb
xchg
xchg
out
lret
xor
jno
pop
cmp
or
int
or
push
dec
adc
nop
fwait
xor
inc
leave
jle
dec
jmp
mov
xor
test
divl
ljmp
add
jmp
or
dec
xor
jl
pushf
inc
jbe
push
scas
int
dec
aaa
sbb
xor
scas
mov
jle
movsl
ret
addr16
or
mov
sub
test
mov
stos
pop
ljmp
call
fistpl
push
jp
aad
dec
mov
sbb
daa
cmc
jg
das
add
mov
mov
int
jne
xchg
movb
int3
mov
sub
ja
pop
mov
adc
lock
inc
and
jl
movsl
loop
test
xor
cwtl
mov
jecxz
or
sub
mov
pop
and
xor
fiaddl
loopne
add
ds
fstpl
daa
mov
xchg
lods
shrl
dec
cld
push
insb
push
adc
mov
xlat
jns
adc
pushw
ss
add
and
mov
lahf
fildll
or
int3
push
into
lock
out
shrb
int
pop
in
aad
dec
enter
cld
loope
add
iret
mov
mov
adc
xlat
xchg
mov
ss
mov
xor
pop
push
fldl
cwtl
rcrl
bound
inc
adc
rolb
or
cmc
movsb
lcall
lret
mov
xorb
ficoms
xor
inc
es
or
adc
cld
fbstp
testl
add
jbe
inc
test
push
lret
stos
xlat
adc
dec
fs
ds
in
mov
leave
addr16
gs
push
out
push
xchg
sub
xor
xor
cmp
or
xchg
jns
nop
add
push
std
jne
mov
fs
lahf
jp
adc
pushf
negb
imul
loope
or
int3
daa
out
lahf
add
mov
adc
les
xorl
enter
cmp
sub
xchg
cltd
sub
cmp
pop
jp
inc
dec
jecxz
aad
push
push
faddp
mulb
mov
xor
or
jbe
shr
xorb
out
lods
jne
mov
aam
fists
cmp
nop
or
cltd
push
jns
jno
fnstsw
mov
cmp
frstor
ss
push
adc
inc
xchg
jmp
lea
pusha
lahf
lcall
xor
mov
in
loop
lods
xor
push
or
push
das
adc
sbb
pusha
jg
adc
dec
sbb
into
adc
add
xor
lock
leave
cmc
sbb
movsb
shlb
xor
loop
rcl
mov
arpl
jo
jmp
adc
xchg
jg
je
stos
test
xor
jl
cmc
or
xchg
ljmp
xor
mov
jb
sub
hlt
lea
jle
stos
test
and
movsb
xlat
cmp
jle
mov
movb
outsb
ds
popa
movsl
lds
aam
inc
pop
add
push
lret
push
cmc
push
fbstp
cmc
mov
mov
adc
cmp
lahf
insl
xor
test
jecxz
adc
pop
sub
jne
lock
sbb
shrl
mov
mov
pop
imul
inc
lock
cmp
in
mov
in
lods
pop
sub
pop
lds
push
inc
or
push
ja
out
mov
xor
dec
mov
loopne
das
cmp
push
push
enter
js
xchg
nop
push
shll
cmc
inc
mov
test
mov
xchg
xlat
mov
into
push
inc
mov
push
mov
ljmp
xchg
in
and
int
mov
scas
scas
aam
outsb
stc
push
lods
outsb
push
mov
icebp
or
notl
mov
pop
and
fcoml
ljmp
and
adc
xchg
js
sbb
popw
add
iret
divl
mov
test
cmp
aas
cmp
nop
in
sbb
mov
lods
xor
xlat
xchg
insl
aas
in
cmp
testb
popa
lret
cmp
push
jb
lahf
inc
stos
ljmp
or
mov
dec
out
jle
dec
add
push
sbbb
fwait
xor
inc
nop
shll
dec
imulb
pop
inc
xchg
sub
adc
shl
xchg
jbe
imul
cmp
imul
roll
cmpsl
test
mov
insl
mov
mov
fisubs
pop
out
cmpsl
dec
bound
in
mov
sbb
int3
cmp
mov
jno
cltd
mov
push
icebp
inc
pushf
add
push
out
pop
aam
pusha
or
movsw
mov
rcl
jp
inc
mov
popa
xor
fs
imul
adc
jnp
jb
xor
jns
add
sbb
stos
dec
sub
int
mov
out
cmp
je
sub
pop
paddsw
xchg
jnp
mov
xchg
leave
int
ror
add
aaa
sarl
sar
and
mov
dec
inc
outsl
jb
mov
sbb
popa
inc
data16
sbb
inc
xchg
jecxz
mov
fidivrl
inc
fmul
stos
cmpsb
cwtl
sbb
pop
popa
cmc
arpl
push
loope
aad
sarb
outsl
addr16
dec
lods
addr16
in
xor
ds
inc
popa
xchg
mov
loope
push
xor
mov
jnp
in
pop
pop
sbb
sub
xlat
aam
ret
cmp
pushl
test
inc
aas
movsb
test
push
mov
pusha
pop
xor
xchg
in
pop
push
mov
cmp
insb
mov
xor
push
pop
lret
lea
inc
add
pusha
jne
lret
fdivl
icebp
bound
jbe
cld
hlt
add
int3
es
sub
cmpsl
dec
push
adc
dec
jg
cmpsl
mov
sub
mov
sbb
das
fiadds
push
push
movsl
cmc
shlb
mov
mov
pop
adc
stos
push
andl
mov
sub
stos
inc
pop
push
scas
enter
dec
inc
stos
fdivp
mov
rcrb
mov
pop
pusha
inc
xchg
jae
inc
xlat
xchg
inc
stos
aas
nop
xchg
or
ret
stos
dec
repnz
add
dec
shll
sbb
int3
addr16
fnsave
pop
mov
push
push
test
subb
cmp
push
sub
and
insb
shll
aad
scas
cmc
push
pop
adc
dec
mov
loopne
and
or
mov
xor
cs
out
pusha
daa
rcpps
scas
roll
mov
xchg
cmpsb
lods
pop
mov
insb
jmp
jge
cs
xor
fimull
inc
enter
mov
add
pop
push
lret
and
aad
fiadds
push
push
fldenv
mov
shlb
sbb
pop
inc
jns
adc
dec
insl
fwait
sub
xor
test
lea
dec
xor
xchg
mov
mov
sbb
xor
out
cmpsb
imul
addr16
insb
push
leave
inc
push
je
dec
xor
mov
movsl
push
inc
in
in
mov
sub
aam
mov
ljmp
outsb
mov
int3
test
push
xchg
cs
call
xor
std
cmc
jbe
xlat
push
and
jmp
sti
mov
icebp
jae
cmpsb
xlat
sub
and
data16
jmp
sub
jge
cmp
push
aad
jo
iret
cmp
xor
xchg
loop
push
insb
leave
xor
daa
or
pop
cli
mov
sbb
mov
fs
push
sbb
mov
or
clc
sub
xchg
arpl
insl
jo
mov
dec
pop
cmp
mov
shl
repz
mov
mov
fs
dec
out
lret
push
mov
lods
or
ret
insl
push
ffreep
nop
in
mov
mov
stos
sahf
lret
jne
jns
mov
ret
push
mov
clc
mov
mov
mov
ds
out
ret
arpl
add
orl
or
pushf
and
dec
jnp
xchg
sub
jns
fsubl
mov
add
mov
mov
xor
mov
jne
inc
orb
mov
popa
out
jp
int
push
jo
sbb
mov
sub
rcrb
pusha
int3
movsl
xchg
jno
add
js
or
fistl
push
aas
adc
rorl
addb
jmp
pop
daa
leave
aam
dec
rolb
int
jl
frstor
movsb
lret
negl
fidivrs
cld
jp
xlat
in
in
add
das
ja
sbb
das
pop
pop
xchg
pop
popf
loopne
ja
aas
cli
jl
jmp
add
lds
cmp
popf
and
pusha
or
call
and
in
xor
adc
sbb
adc
mov
mov
inc
je
out
ret
jge
cmpb
push
int
inc
icebp
mov
lret
dec
xchg
pushl
test
push
pop
mov
dec
sub
dec
xchg
xchg
push
xchg
jmp
sub
mov
stos
fs
sahf
das
mov
enter
push
sti
xor
dec
std
or
js
adc
adc
add
pop
push
ret
jns,pn
ud2
into
sub
iret
hlt
fisubrs
cmp
dec
inc
or
mov
aas
cmc
xor
stc
sbb
popf
jle
in
push
inc
idivb
mov
dec
push
add
or
pop
jg
outsb
mov
scas
sub
mov
cltd
pcmpgtb
cmp
and
pop
movsl
mov
hlt
ret
push
aaa
scas
sub
adc
pop
adc
scas
cli
int3
pusha
into
out
or
test
das
adc
fdivrl
mov
xlat
bound
cmp
dec
mov
inc
sbb
std
ret
aaa
fsubs
jge
mov
repz
sub
bound
pusha
adc
lds
loope
adc
pushf
sbb
les
cmp
jb
cltd
adc
aam
fisttpll
aas
icebp
sbb
pop
push
and
pushf
out
xchg
pop
mov
aam
jbe
pop
sbb
sarb
outsl
push
in
xchg
adcb
sub
in
jg
js
jmp
add
arpl
push
lods
in
inc
push
rclb
jno
jne
fwait
pop
add
lds
xor
call
pushf
negl
getsec
cmp
pop
cmp
fidivrs
lock
sub
lods
pop
aam
or
or
cmp
dec
clc
xor
sub
and
xchg
sub
xchg
mov
stc
adc
adc
scas
jg
mov
dec
mov
mov
fsts
cmp
ljmp
std
test
dec
pushf
adc
mov
fsubrl
add
pop
push
or
sbb
adc
push
add
and
inc
outsl
sub
mov
in
cld
xchg
xchg
stos
outsl
inc
mov
mov
jbe
or
inc
lret
push
nop
into
pop
push
roll
fucomip
jg
ljmp
or
insl
mov
rcrl
and
sub
or
push
movsb
push
inc
dec
repz
jg
dec
xor
mov
scas
pusha
loop
leave
inc
cmc
or
push
push
nop
fwait
xchg
mov
sub
inc
inc
cld
pop
cli
sbb
in
sarl
and
dec
jmp
mov
movsl
fldl2t
jno
loop
outsl
xchg
stos
dec
sbb
xchg
loope
xor
scas
mov
bound
cmc
pop
push
cwtl
xor
mov
push
mov
rol
mov
inc
lea
jne
and
testl
je
je
psrad
lea
fidivrs
mov
into
pop
insl
lds
popf
mov
pop
ret
imul
inc
rcll
pop
pop
or
movsl
push
push
aas
ja
xor
dec
in
sub
cmc
sub
xor
cmc
orps
fnstenv
jle
jl
and
cwtl
jp
jo
scas
mov
scas
jns
mov
repz
dec
std
int
mov
ljmp
or
imul
xchg
stos
xchg
sub
jp
mov
sub
add
int
sbb
sbb
scas
andb
sub
das
jae
jo
inc
in
call
inc
xor
cmpl
dec
je
dec
add
add
xchg
and
das
andb
movl
dec
les
sahf
fisttpll
call
test
pop
je
movsl
bound
leave
lds
adc
sub
lods
popa
push
aaa
xor
and
adc
xor
fcomi
push
push
mov
inc
dec
stos
shrl
stos
cmp
cmpb
out
pop
jmp
pop
pop
inc
push
gs
inc
mov
mov
sbb
movsl
push
sub
xor
or
xchg
outsb
cwtl
out
rclb
pop
lahf
lods
insb
and
fdivrl
lock
sub
hlt
call
push
shll
lds
pushf
mov
pusha
jne
jecxz
jae
add
in
mov
push
or
fiadds
and
mov
icebp
mov
std
jecxz
push
mov
gs
pop
xor
das
xchg
pop
sub
lahf
inc
adc
insl
cmp
sub
and
pop
xorl
xchg
sbb
push
mov
mov
rolb
pop
push
dec
push
ret
xchg
imul
and
jne
add
jb
pop
adc
sub
and
lcall
test
mov
lret
sub
add
sbb
ret
pop
lods
into
call
test
push
pop
jle
pop
mov
aad
and
hlt
cli
js
daa
pop
jns
aaa
xchg
jns
sarb
imul
jg
adc
stc
jmp
mov
sahf
jge
dec
inc
enter
les
sub
pop
xchg
inc
decl
mov
push
mov
cltd
movsb
mov
xor
je
test
fdivr
scas
in
sbb
adc
dec
loopne
popf
popf
sub
subl
inc
les
adc
push
mov
daa
aaa
outsb
jle
adc
inc
jns
mov
adc
mov
lret
jb
fsub
xor
lret
pop
pushf
xlat
xchg
mov
cmp
leave
inc
cmpsl
int3
push
inc
xor
pop
inc
adc
mov
test
dec
mov
push
mov
dec
sti
and
mov
cs
aas
loop
jl
jbe
cli
push
or
xchg
fistpl
ljmp
pop
push
xchg
bound
ret
sarb
xlat
in
jge
dec
mull
sti
aam
lcall
jno
fs
outsb
leave
int
pop
icebp
mov
movsb
pop
and
sub
stos
filds
xchg
adc
add
pop
jnp
jp
jecxz
xchg
push
int
es
enter
jl
lea
and
xchg
aad
adc
add
dec
push
add
and
inc
xchg
bound
popf
test
and
mov
mov
pushf
or
cmp
push
lea
ds
jne
jl
lea
js
or
sbb
jl
jbe
inc
mov
xlat
incl
mov
inc
pop
xor
xchg
in
lret
dec
or
mov
mov
xchg
mov
cmpsb
jg
push
or
iret
sub
pusha
clc
imul
mov
loope
lods
movl
mov
dec
enter
pop
cmp
lds
jns
icebp
cwtl
in
cmp
mov
adcl
pop
xor
aas
adc
push
mov
adc
cmp
jae
addr16
inc
inc
pop
add
and
cmp
sbb
xchg
enter
xor
cwtl
push
jecxz
mov
dec
into
jge
mov
inc
das
sbb
mov
adc
imul
and
mov
mov
aam
push
es
std
imul
ss
lock
fwait
aaa
data16
jbe
fists
push
lea
out
cmp
sarb
jns
roll
mov
push
outsb
dec
push
cmpsl
adc
loope
mov
shlb
push
aaa
fisubl
das
and
arpl
mov
cmp
or
scas
pop
lds
mov
mov
mov
or
lcall
inc
imul
popf
adc
sbb
and
popa
push
stos
stos
mov
and
sbb
movsb
pop
imul
out
dec
pop
mov
pop
jl
jle
and
cmp
jl
daa
or
add
imul
xor
aaa
jecxz
fldt
inc
add
sub
insl
insb
xchg
fimull
pusha
sub
call
add
ljmp
mov
int3
sahf
in
fsubs
sbb
icebp
wbinvd
pop
mov
inc
dec
scas
in
out
movsb
out
xor
lock
push
jno
pop
fists
jge
aaa
mov
jmp
scas
sub
pop
mov
mov
add
and
iret
cld
jnp
stos
cld
les
rcrb
pop
jne
stos
jge
movsb
dec
addb
daa
imul
lret
out
inc
lea
push
push
pusha
cmpsl
mov
int
rcl
xor
jb
outsb
xchg
xor
push
cmp
jne
ret
pushf
mov
mov
test
repnz
jo
dec
sahf
sub
test
add
js
xor
xchg
in
mov
adc
mov
outsb
aad
pop
xchg
out
add
mov
sbb
mov
dec
inc
repz
ja
lods
push
jle
xchg
push
les
cvtpd2ps
jno
test
add
mov
jge
into
dec
cmpsl
sub
push
hlt
pop
or
jg
xchg
xor
mov
push
xor
arpl
mov
into
out
insl
push
in
lods
adc
inc
andl
mov
inc
js
pop
dec
mov
lods
sbb
dec
lret
nop
adc
push
imul
subb
imul
push
dec
daa
scas
sbb
test
rorl
pop
push
jge
and
inc
inc
add
cwtl
insb
sbb
repz
mov
ret
testb
lock
fstpl
xchg
dec
xchg
cmp
dec
pusha
nop
in
push
jb
mov
loopne
mov
out
insl
push
push
in
xchg
mov
repnz
mov
xchg
mov
xchg
push
mov
mov
ret
xor
xor
sahf
push
jns
mov
in
mov
xchg
data16
push
cli
push
sub
std
pop
push
add
jns
adc
rolb
xchg
pop
fcoml
cmp
orb
push
dec
mov
sbb
fcmovbe
sbb
icebp
es
dec
xor
fcompl
lods
js
inc
sbb
loope
repnz
sbb
je
push
lds
xor
xor
xor
cmpsl
test
in
xor
push
int
cli
jno
in
nop
call
inc
jb
fisubrs
push
ret
sbb
lcall
jae
mov
in
pop
les
leave
add
enter
push
fwait
int
dec
stc
clc
addr16
push
fcmovb
stos
ficoml
pop
jl
inc
clc
and
loopne
lods
stos
icebp
test
outsb
cld
mov
aas
test
fwait
cwtl
xchg
and
sbb
mov
dec
adc
jmp
fiadds
dec
dec
mov
or
jb
mov
add
jno
cmc
adc
pop
xlat
inc
cltd
orl
lock
xchg
inc
mov
lea
xor
setl
insl
xor
xchg
cs
fsubrl
push
adc
adc
stos
mov
cmpsb
mov
cmc
movsb
push
jns
fildll
mov
sbb
in
jl
movsl
push
popa
cmp
jo
and
cmc
xchg
sbb
xchg
dec
pop
jp
hlt
loop
in
inc
cmpsb
fs
stos
pop
rorl
cmpsb
je
call
xlat
rcll
stos
insl
cwtl
cmp
mov
xlat
ss
std
or
mov
les
xorl
xchg
insb
inc
add
dec
iret
mull
fistpl
int
cmp
lods
add
mov
cmp
mov
push
lcall
je
flds
cmpsb
inc
push
shr
pushf
push
push
movl
daa
pop
sbb
inc
cmpsl
pop
xor
add
xchg
or
xor
xor
mov
sub
pop
dec
ss
xchg
imul
or
mov
and
mov
lock
pop
in
add
mov
test
xor
xchg
lock
insl
adc
add
or
push
cmp
adc
fs
dec
lea
movsb
je
jne
and
and
push
test
into
push
mov
aad
fwait
arpl
mov
sbbl
movsb
lahf
push
dec
push
mov
jl
sbb
push
push
dec
loopne
and
clc
mov
xor
inc
add
in
call
aad
test
cwtl
fisttpl
insb
outsl
lods
xor
rclb
pop
adc
sub
jbe
push
iret
sbb
or
roll
or
cmpsb
inc
mov
jmp
cltd
inc
lock
and
dec
bound
pop
or
addr16
sub
add
adc
mov
or
push
popa
or
aad
push
cmpsl
mov
adc
fcmove
sub
add
ljmp
lret
mov
and
sbbb
cmpb
adc
adc
fisubl
aad
pop
stos
sub
outsb
dec
jne
rcrb
iret
pushf
sub
inc
cmp
sub
push
xor
mov
xor
rolb
mov
xlat
stos
ds
jmp
lods
and
push
xchg
sbb
xor
xor
mov
xchg
insb
cmp
stos
testl
ret
add
mov
adc
stos
add
jp
jb
loop
js
nop
loope
pop
adc
push
sahf
loop
mov
js
fs
in
inc
ja
and
scas
sbb
mov
push
popf
mov
test
sbb
mov
xchg
mov
xchg
gs
sbb
fs
in
insl
rclb
cmp
or
xchg
xchg
xor
mov
fidivrl
cld
movsb
ljmp
mov
out
hlt
hlt
int3
or
and
cmp
mov
fucomi
sbb
movsb
lock
jl
xchg
leave
or
inc
int3
inc
aad
xor
mov
std
bound
jp
inc
pushf
mov
pushf
push
sub
movsb
mov
ds
xor
in
addr16
adc
pop
add
bound
mov
aam
je
popf
or
mov
mov
push
dec
xchg
into
push
and
add
gs
arpl
popf
xchg
in
xchg
cmp
scas
pop
pop
push
lods
imul
xchg
dec
mov
jle
cltd
mov
sbb
stos
adc
mov
dec
aam
popf
mov
lcall
bound
mov
or
fdiv
mov
outsb
jnp
div
sbb
sub
pop
sbb
sti
lds
pop
outsb
imul
pushf
loopne
imul
test
aas
pop
mov
or
and
push
daa
xor
flds
pop
test
shrb
icebp
add
push
fsubr
stos
dec
adc
hlt
jp
mov
cmpsl
jbe
add
cs
mov
pusha
lods
mov
testb
push
das
cmp
inc
xchg
bnd
outsl
or
int
mov
call
lds
ret
pop
frstor
aad
dec
push
pop
int3
adc
inc
rorb
cld
jns
bound
repz
cmp
xchg
xor
repz
cltd
push
xchg
mov
leave
les
xchg
test
cmpsl
movsb
and
fldt
js
mov
add
popf
shlb
cmc
mov
or
mov
jle
ret
pop
outsl
loopne
into
mov
sbb
repnz
jno
popf
or
cmp
sbb
and
inc
ljmp
sti
sti
and
mov
std
sbb
hlt
dec
push
fnsave
pop
sub
out
mov
inc
mov
ja
movsb
mov
inc
pop
mov
jb
out
mov
mov
test
test
jmp
outsl
movsl
add
fst
mov
test
inc
clc
outsl
lock
rcrl
cmp
and
xor
inc
repz
aad
les
xor
mov
fdivl
inc
jnp
shrl
je
cmp
mov
cmp
push
or
push
popa
lods
lea
xor
pop
ret
lds
push
xlat
popa
arpl
nop
aaa
push
cmp
les
jne
stos
addr16
fs
adc
jbe
ljmp
scas
inc
sbb
pop
lea
fimull
mov
dec
ficompl
mov
mov
jge
ds
ret
shl
jp
inc
add
lock
je
jg,pt
push
hlt
jle
loope
cs
xchg
xchg
dec
cmp
and
push
inc
and
das
xchg
mov
lret
xchg
jmp
mov
cmp
shr
aas
pop
sub
lcall
repnz
shl
int
xor
loopne
int
jge
scas
ret
popf
lahf
sbb
xchg
cmc
push
outsl
jmp
inc
mov
cltd
ljmp
and
push
dec
mov
cmp
mov
lcall
nop
data16
jnp
sbb
pop
mov
inc
cmp
push
pop
imul
cs
inc
mov
add
dec
mov
mov
cli
stc
pop
or
out
cwtl
cld
js
pop
sub
push
popf
pop
movl
mov
jnp
dec
outsb
mov
push
add
mov
cmpl
inc
das
jno
lcall
fildll
scas
mov
jl
lret
popf
in
dec
add
xchg
into
js
in
ja
inc
loope
mov
aam
addr16
xchg
jp
insb
jno
add
mov
fidivrl
stos
fcoml
stc
dec
arpl
sarb
sbb
adcl
sbb
or
jbe
lcall
enter
dec
inc
je
sahf
mov
insb
xor
lret
pop
or
int3
cmpsl
scas
negl
les
mov
jmp
fst
mov
pop
mov
gs
stc
xor
xlat
aad
cmc
jl
lret
pop
mov
xchg
xchg
sbb
subb
push
aaa
dec
je
jecxz
ds
sti
lcall
sub
enter
aas
xor
mov
les
outsl
cmpl
decl
cmp
pop
push
adc
lcall
xor
cmp
dec
enter
into
jns
pushl
hlt
call
mov
adc
xor
xchg
lds
dec
sub
mov
xor
jo
push
push
mov
or
stos
xchg
mov
or
mov
push
and
pop
ror
adc
dec
aam
daa
out
mov
dec
shr
inc
pop
push
mov
xchg
pop
mov
jno
outsl
add
fsubs
and
mov
stc
fcmovnb
mov
mov
adc
cmp
jg
out
or
inc
and
push
add
popa
addl
rcll
fs
nop
je
mov
push
popf
fdivl
inc
xor
push
jne
mov
mov
js
inc
fdivs
sti
or
dec
das
cs
aad
push
mov
in
lea
pop
cld
sbb
ret
jl
out
loop
lock
cmp
repnz
dec
sbb
mov
pop
popf
adc
sbb
jp
or
push
xlat
icebp
movsl
xchg
loopne
push
xor
es
sar
jp
daa
mov
dec
mov
mulb
mov
imul
pusha
mov
les
adc
das
fldl
ret
bound
jg
sbb
fbstp
cltd
xchg
loope
sbb
repz
cmp
lds
insb
push
outsl
mov
push
jno
pop
pop
pop
pop
xchg
push
repz
notb
lea
jge
mov
into
pusha
sbb
jns
leave
adc
lds
adcl
pop
scas
out
add
mov
sbbb
or
pop
or
mov
or
push
leave
decb
mov
and
cmpsl
rcrl
dec
mov
xorl
jmp
mov
xchg
inc
out
mov
ljmp
xchg
lods
xor
push
jecxz
movsb
out
mov
roll
inc
rclb
fcomip
or
pushf
mov
or
mov
and
scas
mov
insb
or
arpl
fwait
int3
dec
dec
or
cmp
push
pop
xor
lcall
push
mov
pushf
clc
push
nop
je
jecxz
or
loopne
xchg
push
sahf
jns
in
repnz
lcall
and
mov
sbb
sbb
movzwl
fs
xchg
ss
or
and
lret
rcrl
sbb
ret
sub
ret
jecxz
push
cmp
add
mov
call
add
mov
dec
push
loop
sarl
inc
sub
mov
cwtl
ret
data16
adc
dec
cmp
shl
sbb
cs
movsb
loope
lcall
adc
je
push
cmpb
jbe
jge
movsl
pushf
sbb
adc
faddl
mov
gs
sbb
dec
mov
cmp
fucomi
outsl
add
cmp
pop
insb
adc
idivl
push
outsl
adc
loopne
adc
pop
inc
mov
adc
jmp
sbb
into
mov
test
or
jb
daa
test
fs
fldcw
lret
xchg
cwtl
pop
add
mov
mov
sbb
sub
cmp
enter
cmpb
test
xor
stos
cld
out
xor
adc
or
push
xchg
xor
leave
rorb
push
mov
xor
shlb
dec
rcrl
mov
test
and
dec
call
movsl
mov
dec
add
sub
mov
mov
xchg
pop
repz
xchg
push
test
repz
imul
inc
neg
fsts
sbb
orb
or
rcr
sbb
push
push
jne
inc
test
mov
scas
mov
adc
pop
rclb
test
mov
add
jge
xor
aad
cmp
aas
jo
cltd
jl
mov
fisubl
cmpsl
fists
add
mov
int
jb
aas
mov
ret
and
push
xchg
xlat
faddl
fadds
ret
shll
mov
pop
std
out
dec
cmc
mov
mov
rcrb
or
popa
adc
cmp
call
pop
dec
cmpsl
mov
dec
and
stc
cwtl
out
add
out
xchg
mov
iret
in
test
cmp
popf
in
fwait
int3
and
loop
adcb
sbbb
jl
sbbl
mov
sub
pop
jo
pop
jne
ljmp
outsl
stc
les
push
enter
push
mov
and
aaa
aad
cli
jg
adc
jb
inc
mov
or
push
jle
mov
popf
cwtl
pusha
fnstsw
push
xchg
sbb
cmpsb
fsincos
imul
les
adc
fld
mov
mov
aam
pop
jo
scas
icebp
sbb
repnz
rorb
pop
pop
dec
stos
sbb
dec
push
stc
fisubl
pushf
out
or
sub
adc
pop
push
cwtl
sub
dec
and
jg
inc
or
adc
in
and
icebp
sbb
ja
dec
stc
dec
sbb
mov
inc
pop
fnclex
sub
ds
sbb
cli
mov
shlb
or
aaa
inc
aaa
lods
leave
and
divl
imul
in
fdivs
xorl
xchg
es
jno
xchg
shrb
fisubl
jae
js
sub
inc
push
mov
mov
pop
adc
aaa
fs
test
adc
in
xchg
nop
nop
dec
cli
pusha
in
imul
adcb
shlb
adc
cli
faddl
loope
test
test
and
bound
rcl
add
sbb
mull
jg
nop
xlat
or
adc
push
push
jne
call
sarb
and
rclb
mov
xlat
insl
add
xchg
stc
popa
xlat
inc
push
pop
push
jmp
cld
jle
xor
mov
sub
pop
ror
mov
fisubrs
out
xor
repnz
cmp
sbb
fdivl
dec
push
fimuls
lods
inc
lret
ljmp
test
pusha
push
cmpsl
gs
sub
lret
ljmp
mov
xor
shl
aaa
mov
sti
adc
in
or
jg
add
mov
fsubs
repnz
in
mov
mov
loop
push
fxch
notb
jne
dec
and
or
insb
mov
lret
mov
sub
adc
mov
add
mov
push
add
gs
mov
cmp
dec
xor
mov
push
jp
and
loopne
lea
pop
fs
adc
xchg
adc
das
in
jp
push
or
inc
jno
ds
xor
inc
repnz
push
arpl
lods
pop
lock
dec
or
fs
lahf
xor
pop
fdivs
push
xchg
sbb
mov
mov
sub
push
xchg
cli
dec
add
pop
je
or
test
popa
ds
fdivl
stc
and
mov
daa
movsb
fs
cmp
inc
cld
mov
push
or
mov
fstpl
xchg
xchg
test
iret
mov
outsb
mov
loope
add
addb
scas
inc
jg
push
jns
xchg
repnz
fbstp
cmp
bound
push
and
insb
out
push
test
nop
cmp
xor
dec
push
out
sub
mov
gs
sbb
repnz
out
sahf
sub
jg
clc
xchg
fstl
inc
cld
aas
cmp
mov
xor
nop
pop
jg
and
inc
movsl
shl
inc
cmp
das
pop
push
mov
cmc
mov
xchg
xchg
mov
mov
pop
stc
push
adc
mov
dec
jno
or
xor
mov
mov
out
add
push
icebp
mov
loop
sub
test
push
pop
sbb
push
add
call
inc
jno
scas
dec
push
cmpsb
fstpt
stos
popa
sbb
aaa
push
das
mov
cmp
sbb
in
or
mov
inc
mov
xor
adc
fcomps
jbe
cmp
xchg
cli
adc
popf
or
and
xor
icebp
fwait
pop
mov
insl
push
test
push
dec
fisubs
cmp
sahf
mov
pop
clc
add
sar
xchg
jmp
stos
and
call
dec
stc
cs
test
fdivrl
or
loopne
aam
sub
xor
faddl
mov
fbstp
addr16
outsb
push
out
aas
addr16
xor
cltd
pop
rclb
insl
lret
sbb
inc
pusha
fwait
lcall
add
jge
and
and
popf
pop
movsl
inc
add
repnz
lahf
ret
xchg
pop
in
cmc
dec
xlat
xchg
push
testb
fisubs
dec
fsubrl
dec
dec
rcrl
mov
adc
sbb
cltd
outsl
mov
push
xor
pop
mov
mov
sub
inc
adc
ret
scas
mov
mov
mov
insb
faddl
dec
push
lock
ja
int
add
cmp
fwait
lahf
pop
mov
push
rcrb
fisubl
aad
mov
adc
mov
pop
sub
xor
xchg
lret
shl
loope
cmpsl
fnsave
add
popf
fisttpll
sbb
mov
scas
pusha
add
test
xchg
mov
lcall
std
jg
in
fsubs
mov
jns
lret
test
loop
push
into
jmp
outsl
push
sbbb
push
mov
ja
addr16
gs
scas
jl
mov
xor
divl
jle
sbb
and
push
outsb
push
imul
jns
rclb
ja
aas
jae
add
or
test
lods
loope
add
or
push
inc
es
mov
out
jl
jg
dec
outsl
sub
sbb
or
xor
pop
adc
or
or
stos
mov
mov
jnp
js
pop
test
mov
and
push
mov
xlat
pop
sub
push
jp
stos
sub
int3
jnp
mov
mov
cwtl
mov
aad
xchg
daa
mov
adc
sbb
aaa
jge
sbb
das
pop
je
mov
mov
clc
pop
cmc
add
ljmp
cmp
push
lods
adc
xchg
pusha
jne
and
and
repz
mov
insb
sbb
push
xor
pop
and
xchg
push
cmpb
out
adc
mov
push
push
ret
pop
mov
xor
popa
mov
cwtl
js
sbb
mov
xchg
icebp
mov
push
mov
es
fdivrs
mov
fistps
ljmp
int
imul
lcall
mov
mov
cmp
mov
xor
je
das
mov
insl
dec
lods
lcall
shll
sahf
or
or
das
push
pop
ja
and
and
dec
popa
cmp
lods
sarl
add
sti
mov
mov
outsb
or
pop
sub
xchg
xchg
xlat
dec
inc
dec
shll
adc
mov
insl
add
ljmp
jle
cmp
pop
pusha
xor
mov
shll
add
push
inc
pop
dec
cmpsb
adc
sbb
sbb
pop
jl
shrb
or
fcmovu
icebp
loopne
shl
popa
fwait
imul
jle
lds
roll
js
cmp
jge,pt
rcll
std
mov
mov
pushf
inc
push
test
shl
out
sub
lods
push
aad
jnp
enter
out
mov
testl
adc
xchg
mov
loope
mov
icebp
jp
mov
sahf
repnz
xor
cld
or
in
or
sbb
sub
inc
cltd
test
andb
addr16
fldcw
sarl
iret
aas
ljmp
xor
sahf
push
lods
shl
dec
dec
imul
shlb
inc
cmp
add
mov
shlb
sub
rcl
mov
mov
fdivrp
sbb
pushf
cmp
or
test
stos
jg
mov
lahf
dec
xchg
dec
ficoml
dec
and
sub
aas
dec
mov
aaa
stc
pop
fsubp
jmp
push
sub
das
mov
arpl
repz
cmc
push
adc
insb
push
mov
inc
push
mov
imul
cmp
aaa
pop
jno
jno
pop
push
xchg
and
stos
insl
addr16
data16
cs
aam
pop
dec
pop
mov
push
es
sarl
mov
mov
and
add
mov
add
sub
add
lret
pause
xchg
mov
test
sbb
inc
fucomp
cmp
mov
mov
in
lds
adc
lahf
mov
sbb
fs
mov
xchg
jg
pushfw
lods
sbb
mov
inc
icebp
popf
jno
sub
fldenv
mov
movsb
js
jecxz
lds
fldenv
inc
pop
pop
mov
test
mov
aad
add
mov
ret
push
or
jl
hlt
cmpl
dec
jb
insl
inc
ftst
sbb
lods
add
fcomps
shrl
dec
cltd
test
imul
repnz
push
jmp
push
mov
fistps
stos
cmp
arpl
push
push
adcl
out
mov
xchg
or
xor
andb
lcall
or
xor
pop
push
sbb
test
adc
sub
lea
pop
jmp
jb
inc
push
cmp
jge
repnz
jge
jbe
inc
outsl
sub
push
icebp
int
dec
adc
pop
scas
mov
xlat
loope
js
movsl
mov
fisubs
imul
push
or
xor
and
pop
mov
pop
push
iret
lret
scas
idivl
mov
rcrb
fs
push
jle
adc
fwait
pop
pop
scas
stos
outsl
jecxz
mov
scas
ljmp
sub
jp
pop
jno
dec
jb
xchg
in
jl
jle
mov
popa
push
pop
insb
fisubrl
push
cmp
ss
sbb
es
xchg
mov
sbb
dec
adcl
xchg
jmp
mov
inc
roll
nop
mov
andb
pop
fs
inc
stc
jae
pushf
sub
push
jmp
out
or
or
cli
xor
mov
shrb
out
rcll
decl
js
cmpsl
fiaddl
push
pop
and
mov
popf
xor
inc
loopne
xor
outsb
pop
and
je
push
xchg
fwait
outsb
sar
test
ljmp
fidivl
dec
es
jl
inc
cmp
xchg
rolb
lcall
sub
movsl
fistpl
scas
mov
xor
das
retw
xor
xchg
pushf
mov
pop
adc
aaa
mov
jae
or
mov
mov
dec
fisubrl
adc
pushl
pop
movsb
insl
icebp
mov
cwtl
xchg
push
ret
mov
mov
ret
adc
cld
and
loope
mov
andl
inc
test
lds
cmpsb
aad
addr16
mov
sti
int3
mov
or
inc
inc
into
jbe
orb
mov
add
mov
or
adc
push
int
out
or
ljmp
test
pop
and
mov
and
sbb
pop
mov
jp
mov
rcrl
cli
fdivrl
push
sahf
mov
aam
in
test
test
jle
lods
shlb
cmp
or
jecxz
jge
mov
int
xchg
clc
xchg
jmp
ret
repz
sbbb
rorb
shlb
jmp
mov
shrd
xorb
pop
call
sbbl
cs
jecxz
out
mov
mov
ds
push
inc
shlb
or
dec
mov
enter
sbb
inc
outsl
ret
inc
cmp
mov
mov
out
adc
lret
bound
jae
ds
in
imul
repnz
mov
lret
cmpsb
fcompl
dec
jbe
adc
pusha
outsb
dec
xor
cmp
aaa
jae
loope
xchg
lret
loop
add
notl
into
imul
mulps
push
repz
sbb
sbb
pop
mov
mov
sbb
pop
loope
push
and
add
fs
or
test
ds
jnp
mov
loop
outsb
pushw
and
push
sub
mul
cmpsb
pushf
sub
mov
rcl
mov
add
push
fiadds
sbb
jnp
or
stos
icebp
mov
inc
mov
or
push
pop
sti
cmp
sub
mov
push
mov
push
out
loop
decb
xchg
rcr
frstor
scas
loope
and
sbb
or
push
xchg
jns
ret
fsts
jb
push
mov
adc
jo
popf
push
xchg
inc
xor
mov
iret
sbb
lds
cmp
mov
das
and
mov
pop
ret
test
inc
imul
sbb
stos
cmp
sti
das
pop
mov
dec
jbe
aaa
mov
imul
data16
gs
xchg
jae
and
out
dec
test
scas
jns
sub
fdivl
imul
jns
or
xchg
int3
jb
js
add
push
lahf
jmp
fistps
or
aaa
jl
push
inc
mov
xlat
or
fisubrs
push
sub
in
icebp
mov
xchg
mov
adc
adc
pop
sub
jp
mov
xchg
adc
shll
xchg
ret
pop
add
inc
insb
jne
in
jne
shlb
in
xor
nop
aaa
fbld
mov
adc
popf
imul
outsl
pop
xchg
adc
pusha
addl
push
inc
mov
sub
inc
into
dec
fldenv
push
into
jmp
sub
mov
lock
sahf
sub
sarb
mov
mov
ret
or
es
addr16
pop
mov
cmp
lea
andl
scas
mov
add
adc
add
std
adc
or
dec
lea
mov
popa
sub
push
mov
add
adc
inc
aad
iret
mov
out
pop
movsb
shrb
pop
insb
mov
or
inc
jnp
dec
fcomps
enter
jno
std
data16
out
or
pop
inc
arpl
fisttpll
add
ret
aas
daa
imul
mov
or
xchg
out
adc
jne
js
adc
and
pop
jmp
ss
add
mov
daa
fs
xchg
pop
or
jno
mov
jl
scas
xor
popf
ret
loope
js
sbb
jg
mov
in
mov
stos
sti
stc
mov
bound
enter
and
cmovl
aas
push
das
mov
push
in
inc
push
sbb
clc
out
add
dec
lret
fiadds
cmp
je
mov
add
popf
push
and
in
mov
or
dec
mov
loop
sbb
mov
fisubrl
insl
movsb
mov
nop
lret
pop
add
aam
aas
jnp
lret
aaa
pop
lock
sahf
out
fldt
lahf
inc
arpl
dec
mov
dec
in
lret
orps
ljmp
insl
sbb
jbe
jl
adc
xchg
test
add
repnz
jne
pop
roll
sub
ds
pop
popa
inc
stc
sub
pop
and
popa
gs
inc
andb
mov
loopne
inc
stos
inc
shrl
hlt
cmp
add
rcrb
adc
sbb
rclb
ss
push
orb
fildll
xor
pusha
fadd
dec
lret
aas
add
sbb
loope
pop
pusha
outsb
sahf
cmp
adcb
hlt
jns
push
loopne
notb
push
push
cmp
insl
ds
outsb
in
scas
sarl
int
sub
jo
repz
mov
cmp
sub
mov
clc
adc
lock
inc
ret
mov
fs
movsb
pusha
sbb
popa
adc
push
inc
pop
sahf
xchg
testl
lods
add
or
mov
sar
jp
pop
imul
xchg
sbb
imul
pusha
jbe
jo
jle
bound
or
lea
inc
sahf
push
and
cld
aam
lahf
repz
stc
or
or
dec
repz
xchg
mov
test
aam
sbb
pushf
outsl
add
lods
jecxz
dec
aad
sub
xchg
pusha
imul
repz
sub
push
enter
push
in
mov
push
sbb
stos
scas
and
cwtl
push
push
call
pop
pop
test
sbb
ljmp
jecxz
addr16
xor
popf
insb
in
loopne
loopne
mov
mov
bound
xorb
pushf
inc
mov
or
sbb
sub
sti
sub
test
xchg
and
hlt
xchg
mov
jbe
adc
cmp
mov
dec
and
std
mov
fcomps
push
lcall
mov
jp
mov
pop
sub
xor
mov
jg
jle
jno
or
fstl
sbb
mov
lea
ret
dec
lret
push
pop
cmpsb
hlt
subb
sub
push
adc
pop
mov
cwtl
lret
btc
dec
aas
cmp
cmp
in
ret
push
mov
pushf
fistps
inc
loopne
mov
rcpps
jecxz
jo
les
out
es
fs
mov
adc
mov
adc
jo
inc
testb
or
mov
jg
cltd
inc
ljmp
mov
and
mov
pop
mov
add
cltd
cld
aaa
jne
jmp
jg
ja
movsb
cld
dec
ss
dec
xchg
push
hlt
outsl
cmp
dec
hlt
inc
xchg
bswap
out
mov
pop
sub
jae
sbb
add
mov
cli
sbb
add
xchg
inc
lock
loopne
pusha
and
aad
mov
cli
adc
cmp
movsb
loop,pn
mov
mov
adc
pop
dec
loop
mov
xor
ljmp
sbb
cmp
cltd
cmpsb
cmc
pusha
addr16
push
inc
call
out
xchg
inc
xchg
lods
mov
loopne
stos
or
imul
fdivrl
loopne
mov
and
cld
dec
imul
dec
insl
jmp
int
add
push
xchg
dec
fldl
cmc
xor
repz
movsl
mov
shll
je
mov
adc
fsubrs
push
shr
cmc
in
mov
cmovs
xchg
xlat
psrad
clc
cmp
sahf
push
or
ds
and
jns
popf
xor
pop
decb
add
add
xchg
ficomps
pusha
add
cmp
jnp
loopne
loopne
in
aas
jl
and
sbb
imul
pop
bound
sahf
loope
fwait
subl
fdivrl
scas
fmuls
jecxz
pop
push
jae
xor
cli
mov
orl
dec
mov
xchg
lds
push
insb
pop
ret
idivb
rcr
pop
pop
add
insl
sahf
mov
shll
scas
or
push
sbbl
sbb
jmp
test
mov
fbstp
ds
mov
lahf
mov
fwait
stos
mov
sub
pop
stos
xor
icebp
arpl
rcl
rcll
popa
mov
push
test
repnz
add
mov
inc
rcrl
cld
lock
dec
out
rorb
push
cmp
mov
add
outsl
lcall
stos
xchg
xchg
mov
sbb
out
push
jne
fidivrs
and
rcll
inc
adc
ja
jge
dec
cltd
push
sub
lods
dec
dec
dec
mov
test
inc
push
mov
mov
inc
cmp
pop
je
dec
sub
add
dec
pop
push
pop
push
mov
push
jl
push
mov
mov
aas
add
sbb
fbstp
pop
lods
jnp
mov
jo
in
xchg
jne
xchg
xchg
mov
xor
pop
hlt
icebp
inc
scas
movsb
pop
outsl
ss
xor
push
aaa
jge
fstpt
jg
arpl
xchg
movsl
mov
and
test
sarb
mov
cmp
lea
mov
sti
xor
sbb
add
mov
push
int
adc
pop
test
in
inc
sbb
imul
jl
add
push
push
fs
and
in
movb
rcrb
stc
rol
push
jns
inc
jae
sub
add
pushf
and
jns
jno
ret
jbe
mov
push
add
xchg
pusha
lret
outsl
or
jle
mov
xchg
js
arpl
leave
ret
mov
dec
icebp
mov
inc
les
std
aad
in
sbb
data16
push
sub
push
shll
add
sti
push
out
add
mov
push
cwtl
inc
mov
push
call
xor
out
js
sub
out
xor
out
sub
aas
mov
pop
pop
and
add
shl
es
addr16
sub
add
mov
add
in
xor
pop
jmp
in
pop
arpl
jmp
into
aaa
cmc
movsl
push
add
mov
xchg
and
fcmovnb
mov
mov
fadds
jns
aas
popf
jae
jp
ror
sbb
addl
in
test
cmc
sbbb
inc
test
shlb
sub
call
iret
and
cmp
xchg
xchg
lds
enter
mov
dec
mov
sbb
cmpl
mull
xor
pause
add
ret
xor
insl
div
sub
xchg
bound
sbb
mov
test
ret
jg
cmp
xor
cs
mov
test
cmp
sbb
addr16
in
or
pop
sti
cmp
inc
arpl
imul
icebp
xchg
stos
inc
sti
sbb
frstor
jmp
mov
pop
je,pt
movsl
sub
fimull
sbb
sti
cmp
sti
data16
mov
xchg
sub
jae
dec
outsb
mov
test
pop
push
push
fcmovnu
mov
push
out
mov
popa
loopne
jg
mov
mov
pushf
mov
flds
cmp
outsb
imull
mov
push
jp
aad
push
js
inc
sbb
add
and
mov
in
adc
mov
outsl
out
xor
stc
cmpsl
or
daa
xor
mov
aas
int3
cltd
sub
adc
cmp
shl
or
loop
adc
filds
imul
repnz
daa
insb
cld
xorb
xchg
in
fneni(8087
test
test
inc
cmp
xchg
shlb
dec
test
sbb
adc
aas
jmp
jle
decl
sub
mov
cli
fidivl
mov
lods
or
dec
push
andl
fldenv
fsubs
and
in
ljmp
roll
fwait
outsb
and
outsb
push
and
push
pop
lcall
je
xor
xor
iret
xorl
icebp
ds
push
pop
sub
inc
idivb
pop
dec
test
pop
sbb
add
push
jns
sarb
pop
sbb
icebp
dec
jno
add
flds
cli
mov
xor
rolb
lods
mov
sub
jns
mov
jae
jp
adc
test
mov
ror
or
jmp
imul
call
push
dec
push
push
jecxz
sub
mov
or
les
mov
pop
lret
xor
mov
call
push
inc
add
dec
leave
pushl
pop
mov
repnz
ljmp
inc
repz
ret
sub
cli
test
mov
arpl
sub
sub
notl
fildll
ret
mov
cmp
push
mov
dec
mov
jae
outsb
outsb
icebp
movsb
ds
lods
jbe
movsl
pop
xchg
pop
ret
dec
adc
out
fadds
mov
sub
mov
es
in
adc
loopne
mov
xor
loop
fmul
pushf
arpl
or
jecxz
iret
dec
aaa
sub
in
ja
popa
and
enter
loope
cmc
in
sbb
mov
cmp
xchg
cmp
pop
test
mov
jnp
pop
ret
adc
hlt
outsl
mov
sbb
inc
in
jmp
lds
jmp
mov
sti
fiadds
xchg
mov
or
mov
add
push
mul
in
cmp
xchg
ds
aas
mov
inc
je
leave
mov
add
dec
xor
cmp
sub
andl
ret
xlat
dec
jbe
dec
pop
pushf
pop
add
push
inc
iret
in
mov
int3
or
into
dec
add
pop
jle
cld
inc
pop
jg
push
xchg
dec
push
jmp
test
jns
xor
loope
xchg
mov
jns
push
cmp
mov
mov
clc
pop
xchg
ja
sbb
mov
inc
xor
add
test
sbb
sub
xchg
sarl
mov
pop
xor
ja
les
xorl
mov
imul
aad
enter
xchg
lcall
out
test
inc
imul
mov
and
shl
sti
in
xchg
andl
adc
dec
in
inc
cmp
dec
push
push
adc
push
dec
jg
jp
clc
or
movsb
scas
call
ret
popa
push
pop
pop
out
cld
mov
dec
call
adc
call
sub
out
in
and
mov
mov
xchg
inc
push
stos
mov
in
fbld
in
rorb
fcmove
push
ds
pop
mov
sbb
lahf
mov
pop
pop
mov
iret
mov
mov
aad
aas
int
push
xchg
ret
loope
mov
jo
inc
xchg
call
lock
aam
ds
ret
inc
pop
je
cs
and
popf
in
mov
push
popa
insb
adc
test
mov
addr16
push
or
imul
mov
rolb
add
or
xchg
cli
nop
stos
lds
xor
fs
arpl
xchg
dec
hlt
adc
xlat
into
inc
push
test
dec
in
fcoms
add
push
add
mov
inc
xor
mov
jne
pop
mov
mov
aas
xchg
xchg
sbb
idivl
fdivs
out
test
mov
ljmp
movsl
adc
push
cs
adc
ret
gs
jp
adc
pop
ja
outsb
data16
imul
icebp
adc
lret
cmp
cmp
std
pop
jnp
testl
repz
xor
idivb
out
lcall
cmp
inc
enter
test
push
or
mov
dec
adc
jno
fwait
pop
loopne
in
ret
mov
or
pop
mov
xor
jge
mov
testb
mov
or
pop
ret
mov
sarb
push
in
fildl
mov
into
popa
or
outsl
je
xchg
lcall
mov
test
and
cmp
data16
mov
adc
rcl
jg
out
or
and
mov
jo
cmpxchg
mov
push
outsb
jbe
shll
inc
faddp
clc
scas
dec
es
fsubs
dec
lock
xor
and
stos
pop
push
lret
mov
lods
lock
add
stos
int
mov
sahf
lock
insl
icebp
add
gs
movsb
mov
or
push
pop
ret
stos
jae
lock
inc
cs
test
xorl
mov
out
inc
scas
jmp
mov
ficoms
dec
jecxz
shll
inc
sbb
test
subl
or
and
lret
mov
es
mov
daa
rorl
in
mov
aas
stos
das
sub
idiv
adcl
ja
inc
stos
adc
stc
es
addr16
jae
shlb
pop
pop
push
inc
fwait
insb
mov
xchg
sahf
sbb
push
pop
out
push
dec
push
stos
mov
sub
inc
pop
cmp
adc
adc
and
es
call
xor
push
jae
or
lcall
popf
cmp
mov
stos
mov
jnp
adcl
mov
cli
out
jg,pt
sub
jne
xchg
nop
pop
loop
jne
loop
inc
mov
or
int3
inc
bound
dec
out
jge
adc
loopne
repz
lahf
lock
sbb
lret
add
shlb
pop
jmp
dec
dec
jl
inc
jo
lcall
mov
or
jl
test
adcb
mov
push
jge
ja
add
testl
jno
jnp
cmc
pop
out
lods
out
lret
dec
jge
fidivs
and
lods
dec
test
xor
clc
daa
rorl
popa
cmpsl
mov
fldcw
cs
pop
xchg
sub
lds
sbb
dec
push
or
fwait
lea
nop
bound
stos
push
cs
lods
outsb
enter
jge
imul
es
mov
xchg
mov
xor
mov
pop
jbe
ss
imull
lds
pushf
mov
loopne
pop
imul
jp
loop
test
cs
mov
or
push
xor
push
les
loop
push
test
sahf
fs
mov
jbe
test
cmc
cltd
mov
js
xchg
in
push
push
test
and
sbb
or
add
aam
mov
jmp
mov
popa
das
or
xchg
orb
or
ret
pinsrw
pushf
xor
push
inc
inc
or
adc
nop
enter
xchg
jne
mov
in
inc
bound
cmp
insl
test
jbe
test
jmp
push
and
prefetchw
insl
xlat
lret
add
shlb
cld
jno
mov
pop
rcrb
test
adc
fsubl
icebp
test
cli
mov
sti
ret
or
sub
enter
mov
pop
dec
add
jb
push
add
repnz
push
je
or
push
or
pop
fldln2
push
adc
cli
imul
gs
addb
jp
loopne
bound
fdivl
and
adcl
ds
fwait
js
out
push
dec
fstpt
mov
inc
leave
sub
fs
lret
adc
dec
xchg
cmpsb
push
popf
lock
in
aam
dec
mov
scas
pop
inc
scas
add
mov
stos
inc
mov
xchg
repnz
push
xor
jb
fbstp
pushf
dec
outsl
push
loopne
or
mov
loope
pop
frstor
xor
push
shll
jno
dec
jl
popa
and
hlt
fs
out
inc
cli
xchg
bound
sti
insb
inc
enter
sbb
mulb
push
call
pop
lds
add
dec
lds
xlat
bound
mov
push
pop
dec
fildl
jmp
sbb
push
jnp
sbb
orb
rol
icebp
xchg
add
pop
arpl
mov
add
sti
fbstp
sub
adc
popa
mov
mov
sbb
xchg
das
xchg
sbb
adc
pusha
pop
sub
cwtl
push
jmp
insl
js
mov
int3
cmpsl
xchg
aaa
xorb
imul
dec
push
lahf
leave
idivb
pop
add
popa
mov
jl
jl
cmpsb
dec
cmp
pop
dec
inc
jle
mov
xlat
imul
push
dec
aad
mov
lock
push
jg
mov
test
in
pop
inc
mov
jmp
lahf
divl
insb
xorb
shl
cmc
jle
aaa
cmp
out
popa
push
cmpsl
repnz
push
es
jns
push
add
fsub
enter
lret
std
dec
rcl
push
cmp
repz
or
or
lock
fildll
add
clc
dec
rolb
fsubrl
in
cmp
adc
je
das
sub
test
adc
or
cltd
daa
out
adc
popa
sarb
div
popf
xchg
jns
fcomp
outsb
or
jbe
gs
sub
xor
inc
dec
lcall
pop
xchg
or
arpl
lock
out
stc
scas
push
xchg
inc
xchg
jb
leave
push
hlt
int
addr16
mov
push
inc
xchg
pop
fistpll
mov
es
jo
add
fimuls
xor
add
cmpsb
lahf
js
jne
iret
arpl
add
xchg
sbb
rcl
scas
stc
pop
jae
cli
mov
lahf
jmp
test
test
sbb
sbb
or
mov
xor
sbb
add
jge
adc
push
movsl
mov
xor
imull
mov
outsl
imul
popa
gs
in
or
inc
cmpsb
sbb
lahf
in
sahf
mul
hlt
cmp
repz
mov
cmp
mov
xchg
xor
jns
sbb
bound
sub
test
mov
add
insl
add
mov
sub
mov
mov
pop
jmp
lahf
mov
mov
ficomps
cmp
mov
stos
push
inc
clc
cmp
aaa
jp
jbe
add
mov
fsub
cmpsl
xchg
cmp
cmp
xchg
mov
lahf
dec
in
sbb
xchg
repnz
jbe
dec
or
insl
popf
jb
xchg
and
icebp
pusha
popa
sarb
dec
fidivl
pusha
add
ljmp
add
sub
dec
js
push
adc
pop
jmp
mov
popa
rorb
xchg
jno
aas
int
cld
jb
out
mov
adc
pop
stc
mov
adc
jb
icebp
cmp
mov
xchg
incl
and
call
jecxz
sub
dec
adc
hlt
adc
push
push
sbb
pop
and
and
ljmp
add
rcrb
inc
loopne
popa
jns
test
std
je
inc
xchg
out
push
ret
xchg
stc
mov
in
rol
cld
push
or
int
xor
cmp
test
fstl
xor
push
xlat
xor
dec
test
dec
subb
jo
pop
lahf
pop
push
xchg
sbb
iret
sbb
inc
mov
cs
mov
int3
pop
lea
pop
jbe
push
add
jnp
out
mov
jnp
fwait
push
adc
arpl
jo
xchg
repz
adc
jbe
insb
cld
sub
loopne
outsl
and
lret
movsl
pop
fldcw
inc
cmp
out
and
xchg
push
xchg
pop
push
push
add
popf
jle
lock
lds
mov
and
mov
mov
das
and
sbb
data16
div
jle
mov
mov
arpl
inc
out
adc
ret
xchg
inc
add
cmc
add
daa
movsb
adc
cltd
rclb
sub
mov
stos
mov
sbb
inc
lcall
mov
add
push
out
fwait
fwait
cwtl
adc
xchg
mov
into
les
in
das
lahf
mov
pop
shrb
sub
dec
xchg
adc
lret
frstor
clc
mov
dec
pop
in
sarb
dec
dec
rcll
inc
pop
add
adcb
mov
fcomip
out
push
push
mulb
dec
jmp
inc
dec
add
leave
js
lds
testl
ja
outsb
std
pop
inc
dec
mov
add
fmul
lahf
xchg
sub
jecxz
inc
mov
push
in
dec
mov
xchg
mov
jnp
adc
xor
and
inc
dec
or
jno
inc
jae
mov
mov
andb
test
jp
out
jbe
daa
call
cltd
loope
aam
push
sub
hlt
mov
push
sbb
and
mov
gs
popa
sbb
xlat
psubd
addl
inc
xchg
aas
cmpsl
sbbb
adc
sub
jl
mov
xchg
lock
cmpsl
scas
adc
orb
pop
cltd
xchg
mov
cmp
xor
inc
pop
mov
inc
scas
sub
xchg
adc
push
jns
stos
lahf
stos
jns
sbb
cmp
int
in
jo
inc
mov
or
adc
sub
leave
push
cmc
or
inc
out
lcall
xor
cmpsl
push
aam
lret
ds
push
sbb
jne
sub
ret
xor
mov
imul
adc
jg
jbe
das
fcompl
ss
stc
pop
cmpl
fistpll
gs
mov
pop
adc
loopne
shlb
push
or
mov
test
ljmp
pop
ljmp
jl
ljmp
aas
outsb
cs
leave
mov
rclb
mov
lds
mov
iret
ret
push
pop
out
adc
adc
icebp
pop
test
sbb
or
jnp
lret
push
popf
xlat
in
int
sbb
in
imul
mov
movsl
bound
arpl
sbb
dec
inc
shlb
jmp
insl
out
dec
mov
jo
sub
gs
jg
add
sub
imul
cmp
dec
jo
sub
aaa
mov
jl
insb
lods
dec
gs
scas
mov
push
mov
int3
adcl
xor
mov
stos
inc
xchg
sbb
xchg
xchg
mov
divb
lods
push
dec
shrb
push
pop
orl
daa
scas
pop
and
or
mov
adcl
xor
cltd
sbb
cs
addb
nop
mov
push
scas
jbe
dec
hlt
stos
mov
inc
mov
and
into
movsb
pop
inc
lret
fisttps
and
addr16
mov
mov
popa
out
nop
int
mov
xchg
push
mov
dec
pop
adc
push
xchg
adc
mov
out
ja
jo
or
stc
add
movsl
add
add
int3
das
xchg
add
pop
inc
push
pop
add
or
divb
xchg
mov
add
shrl
das
inc
aam
dec
fmul
mov
jns
fnstsw
sub
out
xchg
sub
sub
add
es
mov
cli
sub
mov
xchg
inc
or
or
incb
or
leave
in
push
data16
push
movsl
data16
cld
fldl
pop
ds
dec
rorl
sbb
int3
mov
fsubrl
lcall
call
das
xchg
cld
fistpll
push
pop
add
xchg
mov
and
sbb
iret
inc
addr16
inc
add
sub
dec
xchg
repnz
rcrl
pop
mov
pop
roll
shll
loop
in
aam
dec
mov
mov
mov
mov
and
scas
fwait
test
lahf
xchg
lcall
lret
out
hlt
outsl
sbb
jmp
or
push
push
mov
fmull
out
mov
mov
sahf
cmp
xchg
jne
outsb
push
xchg
sub
out
outsl
mov
pop
lea
test
pop
in
adc
mov
lahf
loop
fwait
mov
sbb
xchg
enter
mov
sbb
adc
push
fs
lcall
xor
inc
scas
mov
lcall
cmc
out
or
jno
jp
cmp
xor
adc
adc
xor
mov
cmpl
inc
orb
jecxz
pop
pop
scas
test
lods
mov
pop
pop
jne
and
inc
push
cmpsb
jnp
xor
das
pop
xchg
cmc
es
mov
add
push
xchg
ljmp
mov
movsb
push
pop
jmp
out
or
nop
xchg
inc
sbb
pushf
sub
mov
jmp
cld
popf
cmpsb
fimull
icebp
mov
shlb
or
adc
push
ret
jg
shrl
fsubrs
test
lea
lea
les
mov
jge
movsl
push
adc
or
fidivs
testb
jle
sbb
mov
xchg
out
in
xor
aam
pop
xchg
dec
into
jae
lods
xchg
faddl
adc
test
add
inc
icebp
outsb
out
das
sub
and
and
dec
mov
rcrb
lret
jno
subb
pop
popa
mov
dec
xor
sbb
inc
mov
inc
jp
jecxz
push
pop
int3
mov
das
push
pop
mov
mov
cmp
jmp
xor
and
pop
inc
sub
jecxz
nop
loopne
outsb
adc
fcmovu
mov
ficoms
adc
sub
jecxz
push
in
in
stos
mov
adc
xchg
xchg
mov
sub
sub
push
sbb
mov
push
jle
push
adc
sub
movsb
add
and
xchg
mov
nop
push
xchg
xchg
or
dec
fisubrs
loop
inc
and
xor
insl
std
in
cmp
lea
and
scas
testb
xor
inc
xchg
jge
sub
pop
movsb
rclb
fsubr
fcoml
cwtl
inc
pop
stos
push
test
fnstsw
test
pop
fwait
int
daa
stos
push
mov
icebp
pop
pusha
and
fsubrp
push
lahf
enter
fchs
sub
adc
insb
stos
pop
xchg
into
mov
addl
lret
xchg
or
in
sbb
ss
or
dec
adc
cltd
mov
push
push
cmpsb
mov
inc
or
mov
mov
insl
cmp
mov
mov
in
andl
inc
add
cmpb
add
repz
pop
and
lock
ficoms
movsl
into
push
rorl
test
pop
fadds
lahf
xor
push
sbb
insb
push
xchg
ja
sub
add
andl
test
repnz
pop
push
filds
or
pop
inc
repnz
repnz
mov
sbb
movsl
add
cmp
sub
int
js
pushf
hlt
add
in
sbb
sub
popa
mov
test
pmaxsw
push
cs
push
mov
shl
ret
or
sbb
sbb
fsubl
test
add
rcr
push
andb
gs
fidivrl
fisubrs
ja
jb
xlat
test
dec
mov
imul
cli
jb
call
ss
mov
loop
push
mov
mov
cmpsl
mov
lcall
sbb
jp
in
shl
scas
int3
inc
inc
jbe
mov
push
dec
mov
and
jbe
inc
and
sbb
or
ja
add
orb
inc
pop
and
cmp
inc
pop
dec
dec
mov
push
and
mov
cld
out
and
orb
cmp
rolb
sbb
je
jle
or
icebp
adc
stc
jp
push
lret
sub
xor
scas
adc
aas
roll
or
xchg
jns
sub
fdiv
pop
sub
insb
or
pop
and
sub
xorb
int3
push
pop
pop
sub
pop
push
int3
loop
mov
pop
mov
aaa
lahf
or
xlat
pop
lcall
mov
mov
cld
repnz
add
or
mov
cmp
xchg
inc
in
imul
imul
mov
pop
lock
ss
cmp
dec
xchg
xchg
popa
dec
dec
xor
incb
push
cmp
inc
fsubl
scas
mov
inc
cld
push
lret
mov
xchg
add
notb
hlt
sbb
jmp
cwtl
fwait
jmp
or
xchg
mov
sub
or
pop
les
in
bound
fs
pop
fisubl
or
jg
mov
fcmovne
jmp
ret
mov
sub
jo
jle
adc
daa
pop
fwait
scas
jb
jnp
adc
lahf
sbb
fildll
push
adc
adc
repz
jbe
imul
dec
or
cmp
push
stc
cmp
cmpsb
pop
add
dec
or
and
adc
or
inc
dec
testb
popa
fsubp
add
das
mov
aaa
xchg
mov
lret
sbb
fnstsw
out
outsb
ror
lds
pop
ljmp
ja
xchg
lahf
scas
outsb
cmpsl
jae
cmp
push
out
cmp
xor
xchg
cmpsb
sub
loopne
hlt
shlb
pop
mov
pop
inc
mov
add
repz
add
jmp
dec
cwtl
ja
pushf
sbb
pusha
sbb
mov
sbb
jno
cs
sti
fidivrs
or
arpl
jle
xchg
movsb
call
loopne,pt
bound
fiadds
dec
and
sbb
mov
or
leave
lock
mov
lcall
outsb
push
xor
stc
sub
ret
ss
pop
add
mov
sbbb
xchg
ja
push
cmpsb
fwait
in
mov
jns
int3
cmp
or
and
jl
mov
sti
movsb
inc
shll
rcll
iret
mov
xchg
or
mov
fldt
mov
jne
test
mov
jb
or
scas
pop
decl
mov
dec
ds
cmp
fisubrl
nop
mov
xor
pushf
fucomi
xchg
repnz
negl
inc
dec
and
or
inc
jl
iret
sti
lret
cs
in
cmpsl
cmp
xor
mov
aas
cli
lods
out
jge
mov
in
movsl
lea
push
or
or
cmpsl
jbe
ss
test
dec
sub
mov
adc
ja
dec
out
arpl
fnstcw
jbe
rcl
int
pushf
sub
into
rorl
add
push
xlat
insb
test
test
leave
and
inc
pushf
daa
adcl
mov
jbe
xchg
mov
notb
mov
push
les
xchg
jmp
loopne
das
fsubl
xlat
popa
adc
and
cmpsl
mov
xchg
and
inc
mov
dec
adc
test
outsb
sbbl
jno
push
leave
fisubl
jl
jge
add
push
pop
inc
xor
fidivrl
push
in
jge
ja
rclb
cmp
ds
and
fldcw
xlat
mov
lods
cmpsb
mov
ds
test
inc
xor
mov
push
imul
fistpl
into
mov
or
push
jae
imul
or
xor
mov
lods
in
test
cmpsb
mov
out
and
ja
inc
lea
loopne
imul
in
inc
mov
gs
daa
inc
pop
pushf
pusha
fs
in
stos
in
int
aaa
mov
jg
dec
out
aaa
push
fisubl
pop
adc
je
repnz
xchg
adc
inc
repnz
sbb
sub
pop
lock
mov
mov
mov
mov
mov
cli
lods
push
adc
loope
mov
mov
ljmp
fs
mov
les
sti
cld
aam
mov
mov
test
jnp
clc
cmpsl
mov
jge
aas
andl
add
fldenv
jle
xchg
sbbl
pop
jmp
jle
sub
incl
mov
loop
or
sub
sbb
mov
cmpsb
add
movsl
sub
cmpsb
insb
enter
sub
sbb
cmp
push
mov
fmull
mov
stc
lods
dec
addr16
rorl
inc
sub
sbb
xchg
cmpsb
sub
or
or
and
xlat
xchg
dec
pop
sub
sub
xor
push
pop
jle
sbb
mov
in
mov
rol
adc
cld
adc
fcompl
push
lret
and
out
dec
jo
clc
call
in
cmp
in
mov
sub
and
lahf
bound
icebp
mov
test
inc
inc
mov
ljmp
pop
adc
pop
add
loopne
vmovdqa
mov
sbb
daa
ret
hlt
lods
xor
inc
inc
mov
mov
mov
adc
negl
sub
inc
cs
sbb
cmc
icebp
cmp
add
lea
lcall
sub
push
push
jp
ljmp
ljmp
mov
mov
cmp
xor
rorl
inc
mov
orb
clc
ljmp
lahf
sbb
sub
pop
in
pop
sbb
aam
dec
es
mov
and
mov
enter
rclb
xor
xchg
mov
mov
xor
dec
jbe
mov
xor
inc
aaa
dec
jge
cmpsb
jmp
gs
scas
je
add
clc
push
icebp
data16
dec
mov
push
mov
add
adc
ret
mov
sub
andb
xor
and
ret
pusha
add
mov
mov
imul
mov
stos
jecxz
pop
mov
mov
test
push
mov
jns
out
stos
cmpsb
loope
and
dec
jnp
std
fstl
insb
jl
adc
adc
leave
pop
mov
sets
jae
movsb
sbb
xchg
push
hlt
aad
rcr
fs
pop
shrl
in
xor
mov
push
dec
push
xchg
icebp
xor
in
push
dec
inc
data16
out
scas
dec
lods
and
lcall
aad
inc
xchg
lcall
push
test
cmp
or
mov
cltd
popf
enter
jmp
sub
push
add
scas
pop
in
add
mov
xchg
xchg
test
inc
sahf
pusha
and
sub
push
jb
xchg
jnp
lret
cmp
mov
sub
cs
xchg
pop
jno
push
lods
xor
adc
shll
clc
lret
jle
test
dec
xchg
ljmp
ljmp
notl
sub
fs
data16
into
into
jns
rclb
lds
pop
xchg
xor
aas
add
js
jns
lret
ret
add
pop
xchg
push
ljmp
mov
adc
mov
and
sbb
ljmp
arpl
or
test
repz
dec
test
dec
daa
andl
lea
out
dec
iret
sbbb
pusha
adc
lcall
jecxz
hlt
out
out
and
sbb
divb
xor
sub
mov
aas
adc
jmp
sbb
lahf
mov
push
aas
mov
pop
pop
sub
lock
add
inc
adc
fcoml
jo
bound
ss
cmp
loop
adc
mov
pop
mov
outsl
lock
outsl
dec
std
cli
mov
imul
dec
sarl
divb
mov
scas
idiv
jg
and
xchg
sub
ss
andb
pop
mov
jmp
loope
jb
lock
fidivrs
sub
enter
fwait
loope
sbb
sub
jle
popf
enter
mov
sub
mov
outsl
std
outsl
and
dec
daa
sub
loope
jns
sub
sub
jecxz
pop
xor
add
out
out
cltd
dec
aas
js
icebp
insb
cs
pop
push
mov
mov
xchg
pop
jecxz
enter
arpl
mov
mov
jmp
jg
pop
mov
and
jp
or
fwait
lcall
mov
and
shld
movsl
push
loopne
inc
sti
arpl
imull
add
scas
int
add
cmp
cmpb
add
inc
vphaddwd
rcrb
sti
sub
push
test
testl
push
cmp
cmp
mov
movsb
mov
or
out
xchg
movsl
movsb
cmpsl
rcrb
add
lods
pop
pop
jle
mov
loopne
cld
inc
rcl
rcrb
cmp
je
pop
mov
jne
aam
and
inc
leave
sti
add
xor
push
fisttps
mov
mov
inc
inc
and
dec
push
push
mov
push
mov
inc
pop
cmpsb
mov
xchg
sar
aaa
push
pop
mov
and
xor
sub
push
mov
mov
adc
jecxz
push
jo,pn
push
jecxz
xor
jge
xchg
loop
mov
sbb
mov
sahf
adc
jb
lret
sub
add
add
and
scas
pop
lock
sahf
data16
mov
sub
mov
mov
fisttpl
pop
cmp
inc
adc
xor
fwait
add
fisubrl
add
cli
mov
mov
xlat
xchg
pusha
fsts
in
fs
xor
pop
imul
jmp
sbb
iret
xorb
mov
xlat
gs
lahf
xor
sub
and
ds
push
int3
mov
jg
pop
jbe
mov
add
fwait
hlt
fwait
xchg
ds
test
adc
popa
and
popf
testl
or
outsl
stos
lds
cwtl
mov
cmp
popa
test
mov
xor
test
or
jne
mov
sub
mov
and
je
jne
mov
imul
test
das
push
rorl
push
in
xchg
add
fmuls
movsl
imul
dec
dec
jne
lds
arpl
jp
sbb
lods
sti
ffree
adc
fildll
xchg
jbe
cmp
aam
mov
pushl
push
jns
cmp
adcb
mov
or
push
loop
push
lds
dec
mov
iret
dec
insl
imul
bound
jecxz
adc
pop
mov
inc
xchg
es
sti
jbe
push
sbb
xor
and
fsubrs
or
adc
rorl
je
jg
jge
loop
push
loope
lock
into
jno
push
or
inc
fsubrp
sbb
xchg
outsl
cmp
and
and
jl
hlt
adc
inc
jns
push
mov
lods
ror
es
imulb
push
cmpsl
xchg
cli
cs
jge
pop
into
aaa
imul
fs
or
fs
data16
xchg
out
sub
add
scas
xor
shlb
loope
push
pop
cmpsb
mov
and
pop
icebp
and
add
enter
sub
cmpsb
loop
sarl
std
mov
cltd
out
mov
push
repnz
adc
cmpsb
sub
sbb
mov
mov
sbbb
or
push
mov
push
loope
dec
xchg
gs
adcl
inc
ja
pop
fucom
inc
dec
push
fstpt
int3
adcl
out
sub
cmp
mov
imul
out
nop
sbb
cld
and
les
lahf
fildl
push
push
fcmovne
fyl2x
fisubl
push
popf
das
xchg
adc
bound
in
mov
and
into
mov
cmp
push
lods
adc
jp
add
or
ljmp
call
pop
xor
fs
pop
rcrb
arpl
mov
mov
inc
push
fiadds
imul
push
mov
jg
outsl
cmp
stc
xor
adc
fisttpll
pushf
addr16
mov
xor
sbb
push
iret
add
ss
std
or
mov
pop
sub
bound
add
fiadds
mov
pop
out
pop
xorl
mov
jo
inc
jmp
xchg
inc
cmc
je
dec
es
sti
rorl
sub
mov
sub
sbb
mov
and
adc
mov
aaa
add
jmp
mov
push
gs
sbb
jg
inc
scas
cmp
jmp
lods
leave
stos
mov
adc
jns
mov
in
jo
dec
push
mov
test
inc
fcmove
pop
std
arpl
add
mov
sub
mov
jg
xor
stc
cld
pop
sbb
xlat
cs
push
push
or
popa
clc
cltd
aam
daa
in
lret
push
pop
xchg
and
mov
xor
fsub
xchg
in
daa
xchg
push
enter
or
pop
jne
lods
adc
stc
insb
xor
lcall
mov
fstpl
popa
test
lds
testl
repz
push
in
push
ds
out
sahf
rclb
push
push
jle
repz
fisubs
jo
in
daa
push
ss
subl
xchg
jl
cld
inc
jns
hlt
pop
adc
cmp
xor
add
fsubl
lahf
sbb
loope
aam
and
sub
insl
rcr
jle
subl
jl
and
push
fmuls
mov
jecxz
dec
add
dec
int
lock
and
mov
mov
pusha
addl
jae
test
mov
cli
inc
push
inc
jno
mov
lahf
scas
jmp
cmp
dec
mov
ljmp
sbb
in
addr16
mov
lds
mov
fidivs
xorl
and
cwtl
pop
cltd
nop
jnp
xor
jl
andb
sub
mov
sbb
mov
icebp
xor
jno
cwtl
mov
mov
loopne
movsl
shl
push
mov
daa
addr16
push
xchg
or
xchg
es
mov
icebp
sbb
xor
add
ljmp
xlat
ret
or
inc
xor
mov
inc
fisttpl
dec
inc
mov
push
push
in
sti
icebp
mov
adc
sub
pop
add
xchg
imul
jnp
int3
scas
and
or
shrl
into
mov
cmp
jmp
mov
jp
add
movsl
mov
mov
pusha
cmp
gs
loope
gs
inc
push
cld
aam
jl
xchg
pusha
aaa
pop
mov
mov
and
xchg
test
loopne
dec
pop
aad
icebp
push
ss
and
fisttps
sbbb
jbe
out
mov
adc
mov
pop
xchg
ret
and
imul
mov
mov
mov
push
jmp
mov
flds
mov
pop
scas
fsts
jmp
or
clc
imul
xor
mov
loop
call
pushf
fbld
inc
ss
std
mov
sbb
hlt
lea
leave
dec
mov
aaa
repnz
in
xor
punpckhdq
jecxz
fcomp
cmp
add
push
dec
push
loopw
repnz
lds
hlt
dec
stc
push
mov
cwtl
repnz
sar
xor
pop
movsb
mov
mov
lds
sbbw
xchg
mov
xchg
jns
jl
imul
xorl
jle
xchg
das
adc
xchg
in
push
stc
mov
mov
rcrb
cmp
hlt
jb
adc
leave
daa
sub
xor
adcb
out
lcall
in
add
push
jmp
jns
stos
xchg
add
ret
sub
in
scas
roll
jl
pop
sbbb
lods
test
in
hlt
adc
lods
adc
hlt
push
inc
xlat
sbb
pop
pop
push
mov
pop
cmp
cmp
jb
popf
or
sub
cmp
or
lods
jae
outsb
fdivs
xchg
stos
jg
idiv
mov
fsubrl
or
add
les
nop
or
cmp
adc
and
adc
jl
js
xlat
gs
in
mov
test
sub
sbb
shl
in
stos
aas
cmp
xchg
inc
out
imul
push
rorb
and
pop
sti
or
jb
fldt
notb
fwait
jecxz
cli
out
adc
or
cs
call
dec
pop
inc
add
shlb
inc
or
pop
enter
hlt
mov
push
bnd
xchg
mov
fdivs
or
dec
movsl
push
mov
jge
pop
mov
lods
push
insb
sub
jb
repz
pop
xchg
mov
lret
jp
js
mov
test
imul
fsubp
adc
sbb
fs
bound
jp
sbb
popf
nop
push
shlb
dec
fldl
pop
outsb
lcall
repz
cmc
dec
pop
push
je
or
push
cmp
dec
or
mov
lret
les
hlt
in
dec
push
stos
sbb
jle
stos
dec
sbb
sar
movsb
sbb
dec
testl
pop
xor
test
jns
scas
repnz
stos
xchg
push
jmp
into
sahf
dec
fsubs
inc
xor
push
xchg
inc
arpl
pop
in
call
cltd
ret
icebp
popa
mov
pop
dec
sbb
iret
in
dec
sbb
pop
adc
lods
pushf
adc
push
mov
adc
pop
adc
loop
sbb
sarl
push
mov
in
das
jo
and
sub
addl
xor
jno
int
jp
adc
shrl
gs
outsl
jg
repnz
leave
lret
cmp
lahf
ret
inc
andl
sub
sti
das
je
fsubrs
sub
xorl
pusha
int3
imul
mov
fldt
cli
pop
out
jne
movsb
loop
mov
push
jecxz
mov
or
jmp
lods
test
nop
sti
push
ret
popf
stos
mov
jl
rcll
rolb
popf
lahf
mov
sub
std
cmc
mov
push
and
ljmp
inc
cmp
push
adc
add
inc
sub
movsb
mov
or
sbb
pcmpeqd
push
push
frstor
pop
xorl
pushf
filds
jge
jmp
bound
insl
mov
fsubs
sbb
inc
in
enter
mov
sahf
sbb
and
sub
pop
pop
inc
adc
add
addb
dec
fld
scas
bound
mov
popf
lret
cmc
popa
and
hlt
stos
cmp
jle
pop
sub
loop
and
lock
jp
jle
orl
cwtl
subl
xchg
jle
xor
daa
lcall
mov
call
addr16
in
in
fstpl
sti
and
add
sbb
loop
jo
test
mov
pop
mov
push
fwait
dec
dec
pusha
dec
mov
enter
jo
inc
enter
outsl
inc
lods
stos
cmpsl
push
sbb
mov
jle
add
ss
mov
movsl
mov
mov
pop
popa
or
packssdw
and
icebp
sub
xor
test
aad
sbb
into
lcall
mov
add
call
sbb
cmp
lahf
pop
test
inc
cs
repnz
cltd
or
inc
testl
inc
out
mov
insb
bound
sbb
and
into
jl
mov
cmp
and
fidivl
movsb
mov
daa
lods
pushf
xor
mov
subb
testl
pop
push
adc
mov
cmp
or
xchg
shlb
dec
jecxz
icebp
rolb
in
jcxz
js
mov
jle
mov
pop
movsb
lock
daa
pushf
xchg
mov
push
loope
loop
into
add
push
xor
aam
pop
mov
inc
out
fadd
test
pop
ds
inc
sub
stos
test
mov
xchg
call
aaa
xchg
lds
andb
into
leave
in
add
test
subl
int
jg
dec
cmp
stos
dec
enter
pusha
cmp
shll
cli
pop
lods
sbb
cvtps2pd
dec
cmp
mov
mov
outsl
out
or
sahf
daa
insb
fs
fbstp
push
cmpps
loop
pusha
sahf
sub
clc
jb
push
xchg
int3
jp
jb
pushf
ljmp
lret
inc
or
popf
sub
sub
in
fs
jae
jae
xchg
jo
addr16
push
push
js
fwait
sbb
fwait
xchg
add
mov
jb
lahf
cmpsl
adc
or
out
push
outsl
hlt
popf
call
dec
mov
jne
add
push
mov
push
ds
sbb
inc
xchg
push
out
mull
dec
lahf
and
and
inc
fneni(8087
mov
sbb
leave
mov
push
mov
sub
imul
sbb
ss
jmp
rcrl
xor
sbb
push
pusha
movsl
pusha
test
or
add
sarl
dec
add
sbb
pop
xchg
mov
leave
inc
popa
mov
mov
pusha
or
push
into
inc
fwait
and
sar
faddl
or
repnz
mov
stc
fimull
inc
out
hlt
insb
pop
fwait
mov
dec
jns
mov
mov
xchg
lcall
mov
xchg
jecxz
int
ljmp
mov
es
dec
xchg
push
std
in
stos
hlt
imul
sbb
test
xor
push
inc
push
cmp
mov
pop
cmp
pop
xchg
push
cmp
jae
mov
mov
inc
jmp
pop
pop
jnp
data16
leave
das
mov
out
mov
mov
pop
sbbl
insl
push
push
stos
and
and
push
and
adc
mov
sar
mov
push
sbb
stos
lahf
ret
dec
add
ds
cli
lret
ja
scas
scas
add
pop
jno
mov
out
cmp
xorb
lret
xlat
repnz
sbb
inc
mov
push
mov
xchg
test
movsl
add
daa
arpl
mov
xor
sbb
int
stos
ss
icebp
jb
test
push
cld
lods
lcall
add
push
cmpsl
add
fidivs
push
loope
add
push
jne
add
dec
and
enter
iret
dec
sub
mov
out
jge
int
jecxz
mov
dec
jns
mov
fiaddl
dec
push
das
jl
int
or
movsb
push
jb
in
sbb
adc
push
jle
or
cs
xor
or
scas
dec
insl
pusha
rclb
std
rol
jge
or
sbb
lahf
outsb
fistpll
mov
mov
outsb
addr16
jl
inc
add
mov
cmp
je
add
jecxz
xchg
pop
pop
out
xchg
gs
jp
adc
pop
jo
out
stc
push
es
xchg
paddsb
or
mov
movsl
pop
or
pop
jle
ja
pop
pop
scas
jmp
push
push
punpckldq
adc
mov
sub
sub
mov
clc
or
movsb
sti
sub
inc
and
pop
lret
sbb
mov
bound
aaa
push
hlt
in
and
out
lahf
add
loope
inc
sbb
repnz
sub
scas
mov
in
add
xor
arpl
test
gs
pop
nop
cmp
jb
ljmp
or
push
outsl
ret
add
dec
loopne
add
pop
loop
rcrb
and
stos
aas
les
mov
jbe
inc
arpl
fs
shlb
push
sarb
dec
jmp
aas
test
mov
add
cmp
add
gs
aam
js
add
stc
testb
dec
sub
jmp
in
push
enter
out
jle
pop
loopne
jne
aam
and
js
rcl
push
mov
iret
movsl
sbb
mov
call
adc
popf
xlat
and
leave
or
dec
push
sbb
int
out
mov
pop
mov
cli
add
mov
dec
call
push
mov
push
pop
mov
jns
shlb
xchg
push
inc
xor
mov
adc
scas
imul
push
arpl
xchg
out
loop
mov
dec
ret
xor
addr16
daa
and
outsb
enter
cmp
hlt
daa
dec
out
sub
incl
push
outsb
mov
sahf
jb
inc
fimull
jns
mov
fistpl
push
adc
lods
addr16
ficompl
nop
scas
sahf
jmp
pop
dec
mov
sbb
mov
jno
in
inc
sbb
movsb
or
xchg
add
arpl
pop
test
sar
stc
mov
lahf
loope
out
jg
xor
repz
cmp
imul
cltd
xchg
fisttps
fcmovbe
loope
fbld
push
rorb
popf
push
pushf
sbb
div
push
fcompl
push
repz
das
sub
xchg
cmp
js
stos
std
inc
insl
cmp
pusha
repz
mov
mov
jae
enter
xchg
cmp
lods
test
pop
hlt
testl
call
pop
mov
lretw
mov
xor
lods
push
inc
cmp
mov
inc
cmp
test
out
leave
mov
pop
lret
or
test
mov
cwtl
push
sbb
ja
aad
dec
mov
dec
fs
mov
ds
xchg
stos
icebp
popa
push
int3
test
popf
xor
shrl
sbb
xor
mov
jo
stos
aaa
loopne
xchg
fld
ja
cmpsb
cld
ret
jmp
subb
cmp
test
mov
pop
mov
push
cmp
xchg
ret
dec
popf
repnz
enter
fldcw
je
push
and
push
xchg
jno
loope
pop
in
inc
bound
mov
gs
mov
es
sbb
push
testl
mov
cmpsb
icebp
aam
cmp
jg
and
out
ret
aam
xor
shrl
add
pop
push
push
in
cmc
jmp
shr
push
ds
xchg
lea
mov
or
pop
es
int
out
cmpsb
enter
mov
pop
xor
push
add
pushf
shll
sbb
dec
push
daa
mov
add
int
dec
pop
cmc
xchg
mov
jle
mov
andb
out
inc
xchg
and
jmp
lods
sbb
inc
xor
jno
sbb
dec
jne
jmp
jb
mov
movsb
pop
bound
ud1
rcll
pop
sub
pop
jne
sahf
adc
cmp
aas
mov
fwait
xchg
xchg
pop
popf
push
or
ja
sub
xchg
add
lret
xlat
nop
stos
ss
lods
insb
in
sahf
sarb
jle
test
imul
cmp
lahf
mov
inc
imul
gs
popf
sbb
fildl
in
inc
mov
and
jmp
mov
or
jg
in
jle
mov
push
xor
mov
je
pushf
leave
clc
aam
int
xchg
mov
pusha
pop
push
xchg
cmp
icebp
or
std
test
ljmp
push
int3
lret
dec
mov
cmp
sbb
mov
mov
pop
mov
dec
add
fbstp
dec
jae
mov
push
jg
cmp
inc
addr16
adc
aaa
sti
in
jnp
xchg
sub
popl
xlat
jb
dec
negl
cli
jne
add
adc
addr16
pushf
pop
sahf
out
inc
cmp
mov
ficoms
xor
push
notl
rolb
insb
lods
fs
mov
dec
aaa
mov
dec
pushf
cmpl
nop
iret
inc
cwtl
cmp
dec
push
mov
test
int
xchg
gs
ficompl
jns
xor
cltd
fsubrs
push
cmp
rorb
adc
cmpsl
mov
jl
mov
adc
outsl
adc
pop
rorl
xor
shll
sub
push
add
bound
das
mov
push
cmc
xchg
or
loope
mov
jl
dec
ret
fwait
pop
mov
lahf
cwtl
je
mov
into
push
bound
xor
lea
loope
hlt
mov
sub
sbb
mov
fisubl
leave
mov
adc
bound
je
pusha
push
mov
sub
and
push
sbb
sbb
mov
or
lea
mov
imul
dec
sahf
data16
mov
xor
sbb
fistps
jnp
or
ret
adc
insl
cmp
loopne
stc
aad
push
push
mov
jbe
imull
mov
mov
xor
es
push
jecxz
and
out
rcl
push
fstl
cmpsb
in
rcl
loopne
loope
daa
xlat
sub
pop
enter
dec
aas
inc
xchg
aad
lahf
je
push
rol
fcoml
push
call
xchg
daa
add
and
or
loope
dec
testl
dec
or
les
aad
push
iret
add
mov
add
and
outsl
jge
and
push
add
adc
lret
popf
add
shl
lods
imul
adc
dec
pop
in
lds
mov
push
icebp
or
xor
pop
push
fwait
pop
and
push
nop
mov
and
sbb
xorb
shlb
repnz
cld
ljmp
cmc
enter
movsl
sub
in
notl
imul
shlb
in
push
stc
jo
scas
sbb
xchg
jno
pop
popf
repz
push
in
daa
cmp
mov
stos
xchg
int
movsl
sbb
imul
cmpsl
cmpsb
mov
add
xchg
or
xchg
addr16
fidivl
ret
inc
or
push
cltd
lret
mov
sub
ret
adc
inc
cwtl
stc
jb
and
ja
lret
xchg
hlt
adc
add
mov
mov
push
sbb
gs
stos
jecxz
xchg
in
xor
mov
outsl
test
andb
pop
sub
and
lahf
inc
push
adc
sbb
jo
pop
and
orb
imul
dec
mov
int
cmp
aad
filds
sub
adc
pop
inc
rolb
lock
scas
pop
cld
mov
insl
sub
mov
out
js
or
mov
fidivrl
lcall
cltd
out
mov
subb
push
cmc
jmp
xchg
mov
mov
into
push
aas
fsubr
pop
in
vmovsldup
xor
test
sbb
jne
in
cmp
in
adc
lret
or
data16
or
pop
adc
or
inc
pop
scas
int
pop
mov
dec
dec
lret
hlt
cmpsb
sub
std
add
in
dec
xor
xchg
das
xadd
xor
test
mov
stos
mov
in
push
dec
outsl
outsb
dec
mov
add
loope
fs
sub
je
adc
add
mov
push
push
bound
fistpl
push
jno
adc
or
sqrtps
lcall
xchg
sub
xchg
stos
mov
fisubl
arpl
cmp
loope
in
pop
xchg
lret
sahf
jbe
mov
ds
mov
ret
push
movsl
imul
es
adcl
jecxz
adc
push
jecxz
adc
mov
movl
mov
rolb
fsubl
mov
lods
dec
sahf
push
mov
testb
in
dec
cs
jns
stos
sarb
stos
fsts
nop
iret
xchg
mov
sub
lahf
lds
jl
out
inc
pop
sahf
outsl
jo
xchg
jecxz
pop
mov
call
sbb
mov
fistpl
shl
out
push
cmp
pop
xor
push
jb
push
repz
mov
mov
test
push
mov
cld
add
jne
xchg
insb
mov
push
adc
daa
ljmp
and
pop
loop
out
testl
push
mov
lahf
fdivl
rcr
mov
fldl
cmc
pop
lahf
fmuls
les
xchg
mov
pop
jmp
dec
xchg
xchg
dec
fxch
mull
jmp
in
mov
test
std
mov
loopne
bound
jle
xor
scas
push
mov
dec
ds
cmp
add
add
sub
mov
scas
movsb
dec
push
das
push
mov
aad
popa
mov
rclb
or
loope
inc
jo
push
inc
or
xlat
cmp
add
clc
les
cmpsl
adc
aam
insl
lcall
xor
mov
testb
and
stos
adc
aaa
inc
mov
mov
shll
lea
lods
in
je,pn
inc
sub
sub
cmp
push
adc
jmp
in
or
jns
das
push
dec
push
movsl
outsb
rcll
addr16
pop
lahf
aas
cmpsb
ja
jbe
cmpsb
push
pop
pop
sarb
adc
sbb
dec
outsl
test
loopne
mov
dec
test
popa
bound
pop
mov
imul
std
hlt
mov
push
nop
loop
inc
inc
loopne
mov
and
push
ljmp
je
ss
xchg
fistpl
fdivrl
imul
ss
jne
pop
ljmp
xor
and
mov
sti
jge
mov
addr16
insb
fwait
aam
lret
test
idivb
leave
sbb
adc
xor
or
into
dec
pop
jp
lret
jmp
sti
mov
inc
dec
pop
outsb
stc
cmp
inc
mov
adc
xor
and
sti
test
inc
cltd
mov
jb
or
sub
popf
pusha
xor
mov
sti
js
je
sbb
lods
push
adc
mul
std
push
lcall
icebp
aas
push
mov
xorl
or
or
int
mov
jne
and
shll
enter
adcb
mov
imul
scas
and
leave
ljmp
mov
outsl
jl
loop
xor
and
repnz
pop
shrl
rclb
pop
lods
daa
add
out
ds
popa
out
test
enter
das
cld
inc
subl
inc
cmpb
in
and
ds
jne
add
pop
test
out
vpshaq
ss
lahf
pop
sub
lahf
pusha
mov
dec
jecxz
bound
cs
push
or
xor
movsb
insl
pop
sbb
and
lahf
cmp
pop
xchg
imul
int3
shll
sarl
push
push
stos
push
stc
inc
adc
mov
mov
jecxz
aam
pop
lahf
rorb
pop
loope
ja
rolb
sbb
cs
jb
ja
jg
arpl
push
push
lds
xchg
ja
lods
cmp
push
cmpsl
pop
loopne
clc
inc
xor
hlt
and
xor
clc
ja
fbstp
and
out
mov
aam
pushl
movd
fstpl
sarl
sti
cmpsl
outsb
fsubp
aas
outsl
sbb
enter
and
inc
shr
fwait
addr16
cmp
push
pop
jmp
test
dec
fsubl
inc
mov
jbe
mov
aaa
cwtl
inc
scas
jnp
subl
ljmp
lret
sahf
call
and
xor
jecxz
mov
inc
mov
dec
inc
jmp
pop
xor
xchg
mov
jo
fsubl
jp
xchg
mov
mov
aam
sub
sahf
xchg
mov
addl
push
xchg
movsl
cmp
sub
xor
cmc
movntq
lahf
xchg
mov
mov
mov
shr
dec
dec
testb
arpl
icebp
aaa
mov
sub
mov
scas
nop
xor
int
cs
arpl
pop
in
fadd
scas
adc
add
lds
mov
mov
pushf
mov
or
fsubr
stos
fbld
push
test
xchg
adc
scas
not
std
icebp
int3
dec
adc
sbb
pop
test
jecxz
outsl
hlt
sbb
or
pop
mov
popf
fnstcw
jae
dec
test
rol
ret
xor
in
pop
jl
jb
sbb
pop
sub
data16
mov
lahf
sbb
dec
cmpsl
outsb
outsl
sti
mov
roll
repnz
add
sbb
push
inc
xor
mov
out
and
xor
jb
clc
and
imul
mov
xor
sbb
jns
jp
ret
daa
add
sbb
imul
outsb
mov
cwtl
in
outsb
int
mov
xchg
and
cmp
mov
stos
xor
xorb
pusha
stos
sub
aam
icebp
or
xchg
cmc
sti
adc
movsl
dec
addb
lret
out
add
ds
pop
cltd
pop
loope
jae
out
outsb
movsl
push
cmpsl
sub
jbe
or
rorb
loopne
shrb
push
mov
in
dec
and
stos
leave
rorl
push
cmp
gs
sbb
xor
arpl
jmp
add
rcr
imull
pop
cmpsl
mov
mov
cli
sub
xchg
sbb
test
xchg
add
or
pop
mov
jp
adc
sbb
pusha
pop
ljmp
lods
add
mov
pop
jae
push
add
or
fistpl
lahf
mov
or
popa
mov
mov
push
dec
loope
jg
xor
inc
sahf
mov
inc
lcall
mov
inc
and
pop
cmp
sahf
fwait
sarl
jno
shll
repnz
push
mov
push
push
inc
ret
add
jle
sub
leave
hlt
or
rcr
je
cmp
rcrb
jno
inc
addr16
sub
sarb
adc
add
shlb
or
ret
mov
mov
xchg
ja
adc
mov
or
mov
add
and
cld
mov
js
dec
insb
push
dec
push
imul
fcmove
inc
sub
lcall
mov
in
mov
jp
repz
add
out
jp
cmc
xor
daa
into
arpl
imull
sub
pop
mov
inc
iret
inc
dec
aaa
jl
dec
insb
lods
push
fisttpll
jmp
bound
jns
cmp
sub
dec
nop
mov
and
sbbl
aad
daa
dec
in
inc
test
mov
push
aaa
xchg
addr16
cltd
cmp
or
inc
inc
mov
pop
push
loope
xor
movsb
xor
ret
cmc
or
ficoml
cld
int3
sbb
stos
dec
push
insl
jg
push
add
imul
mov
mov
sbb
dec
or
lds
int3
shrb
setle
adc
mov
inc
pop
inc
pop
pop
rcll
sbb
std
shrl
ret
inc
and
andb
sub
pusha
xor
push
iret
dec
xchg
leave
push
lret
bound
add
inc
pop
mov
mov
cmp
adc
push
push
rcl
adc
fldcw
shrl
add
mov
adc
int3
or
lret
loopne
push
out
in
dec
lods
pop
cwtl
cmpsl
xor
lret
xor
inc
sbb
or
outsl
mov
sub
nop
rcr
call
sbb
or
fists
inc
push
pop
cmp
mov
mov
add
pop
inc
loopne
int
js
into
jnp
fistps
push
cmp
sbb
les
sbb
into
fldcw
mov
jnp
cs
jecxz
cmp
mov
dec
sbb
popa
mull
iret
pop
out
pop
cli
push
pop
inc
pop
mov
mov
call
xor
jg
xchg
imul
les
cli
xchg
loope
pop
in
fnsave
iret
push
adc
xlat
xchg
mov
daa
stc
jl
fcomps
sbb
repz
sbb
xchg
pop
push
sti
arpl
iretw
shr
out
imul
push
cmpl
outsl
mov
divb
lds
jmp
jbe
and
out
cmp
sarb
or
dec
add
sbb
rcr
or
aam
dec
in
pop
push
push
movsl
aaa
mov
cs
in
cmpsl
xchg
mov
jae
inc
sti
mov
inc
aaa
or
aad
test
iret
mov
push
ret
dec
cmp
ret
adc
scas
leave
in
jno
dec
pop
gs
mov
icebp
in
adc
cmc
add
iret
add
jmp
dec
and
dec
or
sub
stos
mov
sbb
pop
stos
sub
pop
mov
adc
or
in
mov
xor
jle
sub
inc
mov
sbb
sbb
xchg
or
xchg
shl
inc
adc
int
or
cld
sahf
aaa
mov
mov
dec
in
in
repnz
push
push
push
je
test
mov
subb
push
lret
and
cmp
mov
daa
ss
xor
pop
sbb
sbb
stos
sbb
sbb
sub
sti
div
js
outsl
lea
fcmovnb
pop
hlt
xor
scas
test
or
push
and
mov
jnp
jge
ret
dec
in
dec
leave
adc
dec
std
cmp
jge
sahf
std
mov
cwtl
inc
push
int3
cmp
popa
mov
testl
insb
pop
ss
jg
sbb
addb
xchg
inc
or
rolb
jbe
js
dec
aaa
arpl
cmp
aad
scas
sbb
xor
jp
lods
pop
inc
xor
mov
fisubs
push
fstl
test
outsl
sub
jmp
rcl
xchg
les
adc
jmp
pop
fnsave
jnp
pop
and
sahf
and
mov
gs
hlt
mov
adc
adc
scas
out
and
fnstcw
clc
push
sub
cmp
xor
popa
cmc
inc
scas
repnz
inc
test
mov
push
inc
jae
xor
shlb
jg
stc
lea
call
mov
aas
xor
test
and
lcall
imul
mov
xor
in
mov
mov
mov
leave
scas
out
lret
add
jnp
hlt
and
loope
push
bound
insb
jne
cmc
add
xor
xlat
outsl
adc
sub
jge
imul
xlat
add
lea
lods
or
stc
mov
jo
fldl
fldl
andb
pop
mov
aad
mov
inc
in
mov
push
imul
mov
cmpsb
sbb
sub
shll
pop
mov
shr
movsl
addl
loop
sbb
xchg
or
and
insl
rcll
fucomip
and
loop
fs
pop
jbe
push
dec
test
fistl
inc
lods
xor
push
and
fs
leave
pop
push
adc
stos
outsl
inc
mov
fstps
stc
fwait
or
mov
or
adc
sahf
mov
gs
xchg
inc
xchg
xchg
xchg
push
ja
push
cmpsl
fstpt
add
mov
fnsetpm(287
lret
push
lret
loope
fs
push
push
push
cmp
sub
sbb
fwait
xchg
sbb
aad
xchg
les
lods
int
js
dec
mov
into
inc
jb
add
mov
data16
pop
lods
sub
push
loopne
xor
add
push
aam
or
xor
decb
fsubrp
mov
psubd
sbb
inc
bound
push
ret
in
mov
add
jns
stos
lock
and
mov
push
cwtl
mov
aaa
sbb
xor
lods
pop
xchg
mov
mov
mov
lcall
inc
scas
mov
or
pop
fwait
icebp
sub
inc
aas
cmpsb
repz
xchg
xchg
inc
arpl
push
push
cmpsl
cmp
emms
int
xchg
insb
or
dec
jg
cld
xchg
mov
or
pop
shlb
das
adc
cmpsb
iret
ss
sub
enter
or
push
jg
mov
add
pop
pop
xor
decb
xchg
mov
mov
lcall
dec
test
outsb
mov
push
outsb
dec
mov
push
inc
insl
lds
xchg
std
iret
shll
lds
xchg
or
daa
inc
or
mov
in
scas
xchg
or
and
sbb
jns
jo
mov
lcall
lea
sahf
mov
xor
decl
adc
lea
adc
xor
xor
mov
jns
xor
cltd
push
and
inc
xchg
jns
int3
loopne
sub
mov
add
push
jl
sbb
xlat
mov
test
sahf
fst
sbb
push
iret
mov
ret
push
gs
ret
ficoml
mov
and
imul
ja
in
fcmovbe
lret
cltd
push
sub
push
jle
in
sub
sti
sub
cmp
inc
dec
test
dec
pop
dec
shrb
inc
sub
cli
pop
or
fistpl
repnz
lahf
es
dec
mov
add
add
and
call
pop
in
mov
icebp
mov
sahf
imul
cmp
sbb
cld
int
loope
push
push
insl
inc
sub
adc
dec
std
push
add
lods
stos
int3
pop
cmp
xchg
ffreep
fstpt
xchg
push
out
lock
rcl
jae
jno
lret
mov
fimull
add
xor
inc
dec
cmpsl
mov
cmp
rclb
out
xor
in
bound
loope
test
sub
cli
xchg
push
xchg
imul
push
adc
lcall
sub
idivl
mov
xchg
jge
lds
xchg
adc
xor
or
jae
lret
lds
mov
cmp
sarl
in
mov
pop
mov
shlb
test
xor
imul
adc
fsubrl
ss
dec
fnop
inc
test
outsl
repz
fidivrl
xor
std
mov
imul
jbe
mov
cmp
inc
mov
mov
and
popf
jno
mov
mov
pop
out
pusha
pop
inc
mov
adc
push
rorb
pushl
xor
dec
push
cmp
lods
shl
lret
mov
sub
xor
in
hlt
repnz
inc
lret
pop
ficomps
test
jecxz
aad
call
insb
mov
mov
lock
add
lret
lcall
popa
mov
scas
insb
cmp
cmp
arpl
jbe
push
call
sub
int3
jno
mov
loopne
dec
dec
sbb
ss
dec
in
pop
sbb
orb
clc
fadds
out
in
or
testb
popa
dec
inc
in
or
xor
and
cmp
xchg
jbe
and
add
nop
pushf
xchg
les
add
mov
cmp
add
pop
sti
jecxz
pop
pop
sarl
out
fwait
in
or
aas
cmpsb
jge
push
dec
fsubs
stc
dec
jl
push
pop
lahf
push
ficomps
roll
lods
ds
aam
in
jo
pop
je
fldenv
pop
push
les
ficoms
xchg
lcall
mov
add
dec
repnz
lods
ljmp
jb
idiv
push
inc
ljmp
mov
and
ds
sub
pop
insl
mov
xorb
push
mov
popa
pusha
imul
mov
subl
test
out
push
jl
test
sbb
enter
push
sub
sbb
cmp
sbb
or
xor
dec
in
in
repz
cmp
es
mov
dec
mov
inc
stos
mov
push
dec
dec
jge
or
and
insb
sbb
mov
fsubrp
iret
adcl
push
jl
out
push
cwtl
adc
push
push
or
push
push
iret
jns
mov
mov
rcl
icebp
lahf
subl
mov
loop
pop
add
mov
jge
mov
and
dec
jle
dec
sub
jle
push
adc
push
mov
pop
adc
cmp
mov
scas
imul
pop
push
cld
inc
dec
and
sahf
in
push
mov
mov
popf
idiv
stc
mov
scas
sub
inc
loop
xlat
daa
js
lds
push
mov
aam
or
dec
neg
nop
mov
shrl
in
in
jbe
out
pop
jmp
jge
sbb
mov
sbb
push
dec
inc
add
int
loopne
testb
aam
repz
adc
mov
inc
inc
mov
ret
test
and
cwtl
iret
mov
jge
jae
loope
pop
movsb
push
adc
mov
sbb
daa
outsb
push
mov
cli
mov
xchg
xor
cmp
mov
cmp
repz
test
push
imul
repz
xchg
mov
jb
stc
sub
in
lea
or
xchg
in
sbb
jg
fs
aas
xchg
das
in
fdiv
repz
cld
aaa
sbb
cmp
pop
pop
and
loop
loop
xacquire
xor
push
dec
pushf
cmp
shlb
mov
rcr
cmp
cltd
pop
and
inc
loope
outsl
hlt
pop
inc
dec
sub
dec
lea
sbb
out
sbb
cwtl
push
out
jmp
xchg
mov
addr16
hlt
lods
jle
clc
jp
and
adc
lods
lret
lret
mov
push
out
stos
push
push
ret
mov
outsb
xor
je
pushf
pop
aas
pop
fwait
bound
lret
sbb
in
ret
aaa
jno
es
fistl
pop
aaa
inc
dec
cmc
test
dec
cmp
dec
fmull
fmuls
xchg
std
testb
push
cmpsl
out
pop
push
or
or
xchg
add
dec
mov
paddd
int3
push
inc
imull
test
out
adc
test
and
notb
pop
ret
mov
fcomps
insl
jo
mov
ret
ss
add
mov
lahf
add
dec
mov
xchg
jnp
bnd
push
sub
cmpsb
fadd
pop
stos
mov
dec
or
jge
ds
dec
mov
ret
fwait
cmp
sahf
add
les
mov
dec
push
pusha
add
xor
jnp
js
dec
xor
jae
xchg
in
repnz
mov
and
pushf
shrb
mov
jbe
push
jno
fisttpll
std
setno
mov
push
in
test
int
pop
pop
mov
lock
ja
push
pop
lret
or
mov
sub
push
fldt
stc
xor
sti
pop
rcrb
or
dec
inc
mov
jo
push
lea
stos
int3
xchg
sbb
dec
stos
dec
mov
gs
cmpsb
add
xchg
shll
and
cli
lahf
mov
out
pop
movl
dec
xlat
jnp
mov
add
mov
daa
mov
lds
call
ja
mov
scas
bound
imul
xor
mov
lds
das
adc
loopne
or
aaa
add
mov
xchg
insb
das
out
pop
mov
testl
jl
adc
ret
mov
adc
push
call
push
rolb
inc
je
jns
fisttpll
lds
and
xchg
shrb
mov
ljmp
inc
jno
xchg
rcrl
lret
test
lcall
movsl
and
mov
or
and
movsl
rcrl
adc
fldenv
push
aam
xor
dec
es
fs
out
ja
lret
arpl
push
loop
mov
adc
and
cmc
xchg
rcrl
xor
inc
adc
arpl
cs
mov
adc
mov
pop
jp
les
int
fsubl
xor
cmp
test
inc
pop
lret
es
out
ficomps
and
enter
and
ret
jbe
clc
inc
jns
adc
and
fbstp
add
fisttpl
cmp
rcl
mov
inc
mov
cmpsb
xchg
inc
inc
sub
and
pop
outsb
mov
test
xor
xor
cmp
or
adc
xchg
das
clc
outsb
xchg
cwtl
fcoms
or
lret
stos
adc
cmp
pop
adcb
gs
aas
mov
sbb
inc
andb
xor
mov
out
in
lret
adcb
push
xor
flds
loop
shr
xchg
in
insl
rolb
and
bnd
out
icebp
inc
ljmp
jae
add
shll
scas
dec
cltd
inc
xor
je
mov
punpcklbw
int3
lods
cmp
pop
loop
js
mov
daa
movsl
test
repnz
and
sbb
fs
aam
dec
fwait
lret
aaa
push
and
or
sbb
mov
or
xchg
mov
ljmp
outsl
mov
imul
lods
xchg
push
stos
or
jo
xchg
test
xchg
jbe
pop
aam
jae
push
das
std
dec
inc
frstor
xchg
mov
insb
jo
leave
aam
dec
inc
jae
and
jb
push
xor
pop
mov
push
jge
xchg
arpl
pushf
xchg
push
or
rorb
out
pop
lods
in
cmp
jp
jmp
fiaddl
out
ss
inc
push
inc
or
insb
jecxz
xlat
les
jbe
xchg
xchg
call
lret
xchg
mov
cmpsl
pop
lods
cmp
test
insb
pop
sub
and
push
test
cmp
cmpsb
gs
movsl
jns
std
rolb
and
sbb
inc
orb
jecxz
push
lahf
aam
push
aas
xor
sub
int3
jb
cli
in
add
mov
adc
lods
cli
or
clc
push
push
xchg
adcl
mov
sbb
incb
lahf
bound
mov
outsb
cwtl
xchg
fisubl
popa
mov
xlat
movsb
lcall
xchg
mov
adc
cmpsb
mov
sbb
cmp
jp
sbb
sub
jmp
inc
icebp
ret
icebp
mov
shrl
iret
lahf
cmpsb
sbb
jnp
xchg
lock
cli
pop
fistl
outsl
fdivrl
sbb
mov
mov
icebp
add
pusha
imul
pop
and
cmp
adc
inc
jb
jle
pop
imul
popa
nop
mov
sbb
scas
xor
cltd
add
test
or
xchg
das
gs
lods
aas
in
dec
jns
sbb
adc
shr
add
jno
mov
outsb
lods
out
outsb
dec
jno
push
pushf
stc
leave
push
jg
cmp
pop
in
xchg
push
push
ljmp
mov
push
inc
and
mov
lds
fcoms
and
es
jg
xlat
inc
cmp
push
xchg
mov
sub
push
lret
or
or
or
shlb
dec
mov
ljmp
mov
aaa
sub
cmp
mov
fwait
cwtl
or
bound
out
xor
add
xchg
push
cmc
push
sbb
push
inc
xchg
lcall
mov
std
push
or
xchg
in
add
inc
sub
jno
dec
pop
jns
xchg
test
cwtl
mov
decl
xchg
addr16
lcall
int3
popa
mov
pop
mov
iret
pop
imul
enter
into
inc
out
cmp
cmp
cs
mov
aas
mov
xor
mov
cmp
mov
sbb
cltd
lret
in
dec
add
xchg
push
adc
mov
jmp
push
jno
sbb
dec
mov
fwait
and
mov
testb
add
in
mov
cltd
inc
mov
jmp
test
jne
dec
sbb
sahf
xchg
xor
pop
xchg
movsl
xchg
cwtl
cmpsl
test
adc
daa
xchg
xlat
push
or
mov
jnp
lret
popf
lahf
gs
mov
mov
mov
inc
imul
pop
and
push
jmp
mov
out
fs
cs
icebp
lds
sub
std
cmp
xchg
aad
dec
rclb
lret
push
fadds
fdivl
sbb
stos
fs
adc
dec
push
xchg
test
dec
cmp
lods
inc
insl
xchg
pop
data16
mov
cwtl
shll
pop
inc
mov
je
push
push
stos
int
imulb
insl
push
rcl
gs
mov
push
js
xchg
cmp
or
lret
cmpsl
add
cltd
push
ret
loop
adc
or
jns
lret
ds
xor
popf
lods
pop
fwait
in
jb
jbe
stos
or
addr16
ja
ljmp
fsts
xchg
test
xchg
movsb
jge
mov
push
sub
ljmp
js
cwtl
dec
lret
adc
adc
sub
ds
pusha
mov
imul
cmp
in
aad
js
mov
rsm
je
and
dec
dec
xor
xchg
cmc
pop
sahf
inc
dec
mov
dec
dec
cld
or
xor
pop
iret
cmp
pop
mov
or
fwait
enter
jnp
or
not
inc
fldenv
adcb
aaa
dec
dec
or
addr16
xor
jmp
xor
dec
pusha
in
mov
lcall
sarl
out
push
das
pop
add
repz
mov
cmp
adc
rclb
adc
push
loope
inc
jle
shrb
dec
std
inc
fisubrs
and
mov
jns
repz
cmp
push
in
notl
and
inc
push
and
pop
insl
jns
test
fwait
and
cmc
addr16
mov
push
fnsave
imul
aaa
lahf
stos
inc
insb
mov
lret
push
lea
inc
mov
into
aaa
adc
iret
subl
mov
adcl
jne
inc
icebp
lds
sbb
mov
je
test
mov
jo
aad
loopne
bnd
mov
jp
pop
hlt
imul
push
adc
mov
xchg
jnp
ret
sbb
pop
outsb
cmp
stc
pop
push
jp
mov
add
mov
xchg
pop
ljmp
ss
fwait
in
pop
pusha
or
nop
leave
insb
push
daa
adc
mov
data16
or
mov
or
add
std
and
aad
mov
mov
jnp
sti
dec
push
mov
stc
pop
imul
pusha
cmp
cmp
push
or
out
dec
add
and
adc
imul
jmp
int3
lds
adc
rclb
lods
lea
adc
jge
adc
in
jne
lds
inc
mov
imul
les
sbb
jno
psrlw
pop
ret
cli
xor
orl
sub
cmp
mov
out
lock
inc
mov
fiadds
lods
iret
and
or
jmp
pop
mov
add
sahf
stos
insb
mov
mov
sub
loopne
dec
aam
xchg
dec
mov
sub
or
adc
clc
dec
add
sub
pop
bound
jnp
out
es
sbb
icebp
popf
sbbl
neg
into
lock
data16
incb
lahf
mov
mov
add
ss
in
cmp
xchg
mov
inc
mov
in
mov
imul
mov
push
adc
loopne
xor
ret
imul
popf
mov
mov
xor
and
fs
das
lods
push
notl
loop
sbb
mov
sbb
dec
lahf
addr16
ret
or
mov
or
mov
mov
stc
jecxz
cs
mov
daa
aaa
or
jno
cmc
out
int
orl
push
jns
cmc
push
or
and
cltd
jl
cmc
in
mov
fidivrl
jmp
xchg
inc
mov
xor
faddl
pop
push
fisttpll
jmp
insb
xchg
adc
repz
repz
dec
or
std
repnz
xchg
cmp
add
bound
ds
into
xchg
jne
inc
aad
nop
fbld
and
add
sub
dec
cmp
dec
mov
or
xor
lret
jl
pop
clc
dec
jg
inc
xchg
fcomps
jo
insl
ds
scas
loope
in
subl
pop
add
jnp
fimuls
imul
je
adc
xchg
mov
int3
daa
xor
scas
aaa
mov
faddl
push
daa
insl
adc
jnp
mov
icebp
push
sbb
push
pop
cmp
cld
jg
add
and
cld
xor
jge
mov
test
sub
jge
andl
or
call
in
sub
mov
add
dec
pusha
adc
xlat
pop
push
arpl
mov
and
and
testb
cmpl
add
inc
jp
push
sbb
call
inc
pop
lds
arpl
mov
xchg
out
into
popf
push
mov
insl
adc
cmpb
aas
mov
sbb
lea
jge
jae
icebp
into
stos
jno
shl
test
pop
add
mov
cmp
push
ds
and
jnp
mov
inc
sbb
stos
adc
xor
or
ficomps
adc
xchg
fstps
adc
leave
mov
or
outsl
add
daa
mov
aad
cmp
mov
idivl
push
push
icebp
int3
lcall
fisttpll
adc
gs
pushf
mov
cmc
cmp
mov
inc
lea
mov
sbb
imul
and
fcoml
in
xor
lods
inc
test
ss
dec
mov
test
int
and
mov
jecxz
and
shl
aad
int
xchg
cmp
mov
jmp
jle
aad
mov
jne
stos
push
ficoml
or
cmp
mov
jnp
call
mov
mov
fwait
dec
sub
leave
xlat
scas
hlt
lret
cmpsb
sub
adc
fsubrs
aas
push
mov
xchg
and
pop
dec
push
adc
jo
lahf
lret
bound
in
movsb
movsb
push
sahf
inc
xchg
jns
xchg
and
xchg
test
cli
pop
movsb
pop
pop
push
dec
in
cmp
fidivs
push
dec
popa
lea
sbb
push
cmp
dec
dec
sub
cmpsb
add
push
mov
in
cmp
into
mov
xchg
fdivrs
xchg
mov
cmp
into
enter
call
push
es
test
out
les
imul
movsl
sub
loopne
cmpsb
sti
icebp
xlat
xor
mov
mov
inc
inc
and
push
inc
popa
push
mov
jg
mov
cmpsl
cld
mov
arpl
jns
pop
sarl
dec
subl
ret
lds
add
xor
out
addl
cmc
cltd
nop
dec
fcompl
push
jns
sar
xchg
lea
int3
std
sti
sub
mov
shrb
xchg
mov
addr16
pop
lea
xor
in
mov
xchg
xorb
pop
jp
cmp
popf
jmp
pop
push
pop
adc
xor
sub
sbb
imul
popa
push
mov
sub
mov
cmp
pop
lods
cmp
mov
pop
sarb
movsb
jecxz
jg
jmp
into
mov
leave
mov
rcr
into
pop
fnstcw
push
test
dec
mov
sbb
mov
jge
int
fmul
dec
lcall
mov
push
mov
cmp
scas
aad
pop
sti
bswap
add
scas
or
xor
dec
int
inc
test
das
mov
lods
add
fbstp
int
sub
stc
fists
sbb
int3
mov
in
pop
in
push
movsl
cmp
testb
out
bound
lods
pop
adc
and
jl
jno
dec
pusha
mov
aas
and
fists
adc
das
inc
inc
xor
mov
lods
call
push
ret
xor
inc
push
xchg
jl
clc
cld
jmp
dec
lods
lds
inc
or
mov
es
mov
jmp
dec
lods
lods
xor
push
xor
loopne
inc
lods
lds
xor
sbb
dec
adc
jge
mov
jp
js,pt
in
imul
add
in
mov
in
scas
push
jmp
dec
test
int3
xor
std
cmp
rcl
lcall
sbb
push
inc
imul
stos
add
addl
insb
xor
ja
test
lds
or
or
stos
xchg
js
push
aam
push
jae
jno
xor
lea
mov
pop
xchg
xchg
push
dec
mov
dec
lods
mov
cmp
insl
jmp
gs
dec
inc
imul
call
cmpsl
cmp
mov
sahf
adc
and
int3
inc
and
enter
loop
add
add
xchg
test
push
jg
mov
pop
cwtl
das
dec
lret
jp
ficoml
ret
mov
and
xor
fistpll
cmc
add
lcall
push
pop
loop
adc
shlb
pushf
shll
cmp
sbb
sub
push
mov
xor
sahf
subb
inc
scas
sbbl
inc
fnstcw
cmpsl
mov
xchg
scas
shr
xor
pop
mov
jp
jp
imul
pop
lods
test
das
add
dec
jne
fdivl
adc
and
inc
testl
imul
cmp
push
into
sub
inc
dec
testb
sub
lods
insb
stos
adc
ss
lods
notb
push
cmovns
lds
in
cmp
leave
dec
in
mov
leave
jl
xchg
lahf
pusha
pop
pushf
fdivr
mov
dec
push
lcall
loopne
cmpsb
and
mov
inc
les
mov
sbb
aad
cmpsb
leave
popf
xor
jae
push
jno
rolb
dec
mov
adc
mov
insb
fldl
fdecstp
pop
cld
jmp
mov
push
xchg
icebp
in
sbb
add
aad
aam
test
dec
pushf
and
in
mov
sbb
adc
sarl
pop
mov
cmpsl
mov
pop
and
outsb
scas
pop
mov
cmpsb
pop
add
add
xor
inc
xchg
aam
bswap
dec
mov
push
mov
xor
call
addr16
jmp
fucom
sub
push
ja
test
maxps
xchg
int
loop
mov
mov
or
dec
and
js
sub
push
hlt
push
fdivrl
fistl
pop
sbb
cmp
jo
popf
es
ds
xchg
mov
jns
pop
and
insl
loope
mov
add
mov
mov
hlt
lds
pop
pop
dec
jno
jmp
or
push
xor
mov
je
aad
jmp
pop
les
sub
mov
mov
addl
push
fsubrl
jns
ds
pushf
dec
arpl
loopne
push
push
addl
jmp
xchg
sub
adc
mov
pop
dec
pop
cltd
and
addr16
cwtl
jmp
push
aad
jo
sub
push
cmp
fsubs
arpl
sbb
adc
pop
push
and
sbb
jp
jns
mov
sti
daa
stos
sbb
and
and
lock
add
push
and
pop
pop
stos
mov
mov
xchg
or
movsb
ds
stc
movsl
sub
shll
xor
jae
test
adc
mov
or
cld
dec
movsb
fsts
pusha
push
faddp
push
js
mov
ret
fiadds
pop
cwtl
inc
pop
nop
sub
xlat
mov
push
xchg
jbe
xor
xchg
ja
fdivr
stc
aam
add
in
cmp
or
pop
ret
cmp
mov
jl
lods
push
icebp
sahf
loope
dec
sub
lcall
mov
rcr
lahf
jbe
push
scas
push
std
jno
or
mov
or
popa
add
inc
xor
xor
adc
and
sbb
jp
add
loop
clc
xor
or
mov
int3
add
insl
sub
mov
add
imul
or
ss
xor
cmc
jb
sub
daa
in
mov
or
jmp
bnd
cs
dec
pop
inc
mov
test
test
mov
gs
push
jne
mov
jle
ds
lods
imul
adc
lret
loope
xorl
hlt
jae
sbb
insl
pop
dec
sbb
add
inc
push
jg
mov
dec
or
leave
mov
icebp
clc
xchg
mov
jo
es
jae
lds
push
pop
pop
imul
pop
faddl
push
push
jmp
insl
sub
mov
insb
repnz
dec
and
loope
test
repnz
in
push
jb
clc
push
cmp
test
mov
in
inc
daa
xor
nop
leave
pop
mov
or
add
xchg
cmpsb
sbb
inc
add
pop
xor
xor
mov
and
xor
cmpsl
idivb
dec
data16
add
add
mov
cmp
inc
adc
cs
mov
out
xlat
mov
push
pop
pop
xor
and
jl
pop
mov
jo
cmp
call
inc
sarb
std
inc
add
dec
xchg
mov
dec
or
cmp
mov
pop
pusha
jo
sbbb
or
divl
jle
mull
xor
je
pop
push
pop
push
mov
lea
push
jo
push
cmp
mov
dec
or
iret
or
stc
jge
pop
mov
pop
cmp
subb
pop
add
lahf
jns
jno
cmp
int
fcomps
inc
mov
inc
inc
sub
testl
dec
mov
xchg
mov
clc
or
fidivl
inc
mov
xchg
xchg
scas
repz
je
jmp
mov
mov
fiaddl
movsb
and
mov
rolb
daa
repz
pop
dec
cwtl
negb
div
sbb
xchg
roll
test
xor
clc
add
pop
and
in
lahf
in
pop
inc
xchg
arpl
mov
xchg
mov
clc
lahf
xchg
pushf
pop
cmpsb
aas
jmp
cmpsb
sub
add
loope
or
mov
out
sub
or
pusha
cmpsb
cli
or
push
shll
inc
add
imul
add
jo
enter
popa
pop
rclb
xchg
lock
insl
bound
push
add
lds
jno
cmp
subb
stos
add
or
cmpsb
jle
in
iret
test
ret
push
inc
xor
push
jg
push
push
cwtl
data16
loopne
and
mov
subb
imul
inc
xor
xchg
push
mov
xchg
testb
fidivrs
lahf
lds
mov
jg
push
mov
std
dec
pop
int3
adc
pop
pop
fimull
pop
and
aaa
imul
cmp
cmp
pop
lods
sti
xor
pop
push
pop
xor
fwait
push
or
cs
xor
adc
stos
cmp
jp
mov
inc
lock
push
sbb
xchg
and
mov
add
leave
or
sub
cmc
sahf
fildl
fcomip
fdivrs
mov
cs
mov
jmp
in
ja
mov
inc
add
adc
cmp
lcall
aad
or
jbe
push
xchg
arpl
call
shl
addr16
adc
cwtl
jle
daa
xchg
and
mov
mov
enter
pop
popa
sahf
shlb
popf
js
pop
cs
xor
idivl
stos
ljmp
shrb
mov
enter
lea
neg
xchg
cmc
popl
inc
cmpb
lret
xor
in
mov
jg
pop
jp
int
ds
loope
and
ljmp
add
push
cmpsl
ljmp
divb
or
fisubs
xchg
js
xor
pop
dec
adc
cltd
mulb
scas
lret
enter
test
lcall
lds
fnstsw
mov
pxor
bound
movsb
mov
cmp
andb
inc
sub
and
xlat
push
and
ret
sub
xchg
mov
mov
repz
das
pusha
adc
push
jo
push
mov
clc
movsb
inc
dec
fisttpll
push
pushf
aam
xchg
xor
or
test
in
leave
pop
jb
fsubl
xor
adc
cmp
out
adc
repnz
fisttpll
dec
lea
sub
hlt
pop
sbb
stos
add
out
sbb
sbb
add
mov
lods
scas
dec
pop
mov
pop
sub
out
mov
mov
repz
xchg
movsb
adc
mov
mov
mov
inc
sub
sbb
cmpsb
xor
mov
mov
adc
inc
test
xchg
fcompl
loop
loopne
xchg
enter
lds
inc
sbbb
int
pop
mov
cmp
jle
bsf
xchg
in
enter
rcl
or
jb
xlat
and
jecxz
add
pop
xchg
pop
fbstp
fldcw
cmp
xchg
rol
dec
xchg
cmp
insl
lret
mov
dec
jmp
out
sub
mov
cs
mov
outsb
add
fs
fsubp
adc
inc
das
mov
cmp
movsl
call
sbbb
pop
mov
pop
cmpsb
rcrb
int3
push
and
or
cmp
loop
fs
dec
add
mov
push
leave
mov
pop
inc
fs
and
or
push
adc
xchg
inc
les
stos
jne
pop
stos
mov
pop
mov
jmp
pop
ljmp
out
ret
ret
ss
push
add
in
repz
popa
dec
pop
addl
rolb
jecxz
push
pop
subl
lret
mov
inc
sbbl
frstor
sub
popf
pop
sbb
and
adc
add
inc
jb
fwait
fs
jne
imul
mov
enter
mov
push
add
ja
mov
mov
jl
ljmp
in
fcoml
daa
insb
in
add
push
mov
cmp
xchg
stos
jb
daa
je
mov
and
faddl
push
jo
fcmove
fbstp
test
and
xlat
lods
shll
xor
sub
mov
out
jmp
xchg
roll
xor
xor
fsubs
xor
js
es
mov
cmpl
xchg
dec
or
jnp
repnz
mov
mov
mov
mov
or
lock
or
mov
adc
push
bnd
pusha
cmp
cmpsb
les
dec
inc
andl
addr16
xchg
inc
lret
cli
das
sbb
lea
dec
xchg
in
mov
lea
orl
ret
pushl
call
mov
andb
shll
and
fsubrl
jnp
hlt
fisubrs
fcmovb
repz
shrl
mov
mov
sbb
stos
mov
add
pusha
repz
mov
shl
adc
fisttpl
fbstp
ja
fists
xchg
xor
clc
add
enter
clc
adc
lret
mov
adc
pusha
jne
sub
int
xchg
fnstcw
pop
and
lods
jge
mov
loopne
mov
gs
push
pop
inc
or
or
fs
add
mov
cli
push
inc
in
sarl
cmp
jg
fs
sub
jno
adc
rorb
jnp
add
clc
cmp
fiadds
outsb
into
cmc
mov
inc
lock
jns
pop
jg
pop
enter
mov
mov
jp
inc
add
pop
lock
mov
cmp
int3
fisubs
cmp
bound
clc
testb
mov
xchg
xor
jae
xchg
and
ret
cltd
jae
pop
or
xchg
loop
adc
or
stc
scas
es
dec
enter
mov
sti
pop
gs
pop
shll
dec
sbb
stos
adc
ljmp
test
push
repnz
andb
inc
addr16
jle
fistl
push
ret
icebp
scas
xor
mov
pop
cmc
fldt
sahf
and
pop
mov
mov
fildll
in
and
mov
jb
out
mov
rcrb
sub
push
sbb
jbe
jmp
stos
negb
rcl
fldcw
js
xor
pop
xchg
sbb
mov
int
sahf
sbb
cmc
imul
test
xchg
std
sub
lret
mov
test
sub
rcl
mov
pop
lret
sub
fidivrs
pop
xor
movsl
lds
xchg
adc
mov
int3
mov
aad
rorb
orl
cmp
inc
fistps
rorl
xchg
scas
or
icebp
cmp
pop
jmp
jecxz
rolb
or
ljmp
jbe
jne
inc
add
adc
in
mov
shlb
inc
mov
mov
mov
add
add
mov
ret
stc
and
leave
adc
inc
add
and
pop
aas
dec
push
sbb
xchg
in
and
and
rorl
std
fcmovbe
xchg
nop
sub
sub
push
xchg
xor
jo
lock
mov
popf
xor
mov
ror
mov
dec
ret
pop
adc
jp
shlb
jmp
sbb
test
aas
xor
cltd
sub
cltd
sbb
and
sbb
or
jmp
stos
mov
xchg
in
mov
popf
cwtl
aam
xchg
scas
lds
cmp
je
cld
push
pop
pop
lock
push
icebp
stc
or
inc
dec
mov
decb
pop
jl
push
aaa
and
sub
fimull
xchg
ljmp
push
iret
xchg
lds
fcmovnu
jne
roll
jmp
loop
sahf
aaa
sub
fists
movsl
dec
push
adc
adc
push
xchg
in
in
sbb
cli
mov
das
int
xor
shr
pop
lcall
ds
orb
sti
mov
mov
xchg
xchg
ss
sub
fidivs
int3
sbb
cmpb
mov
lds
and
mov
scas
pop
mov
rcrb
fistl
dec
arpl
jns
mov
test
jle
jle
leave
cmp
into
fs
sarl
dec
mov
xchg
dec
and
xlat
sbb
adc
jo
dec
jne
cmp
sub
xor
add
and
lret
rcrb
inc
int3
in
pop
mov
dec
or
and
adc
pop
inc
aaa
cmc
loopne
ds
mov
in
fisttpl
into
xchg
out
mov
pop
std
insb
leave
mov
stc
or
ss
add
not
jp
imul
cmp
lds
stc
sahf
imul
add
mov
cmc
cmp
pop
or
xor
stos
pushf
push
sbb
scas
mov
xchg
subl
push
xchg
and
cmpsb
aad
sti
cmp
into
pop
std
popf
in
inc
push
jg
les
imul
scas
inc
push
loopne
adc
adc
or
push
enter
ljmp
push
jle
sti
lret
fistl
daa
mov
and
cs
test
test
cmp
popf
lea
mov
or
repnz
adc
lret
mov
pop
mov
xor
shlb
fisubrs
mov
je
add
mov
idivl
xchg
mov
add
mov
popf
fwait
mov
test
lret
or
aaa
lahf
and
or
pusha
push
mov
pusha
push
mov
call
clc
xchg
imul
ficompl
jecxz
push
fsubr
jb
call
fdivrs
inc
adc
dec
jbe
xor
enter
subb
xchg
aad
cli
sbb
jp
icebp
cmp
data16
lods
xchg
jnp
pop
outsb
rcrl
dec
test
nop
push
arpl
loopne
lods
rorl
dec
xor
mov
sti
xor
icebp
or
push
pusha
adc
outsb
jo
sbb
bnd
cmp
jne
inc
frstor
and
add
outsb
dec
pop
jbe
push
test
call
iret
push
mov
or
pop
or
mov
in
push
and
bound
cs
xchg
stos
and
bound
imul
lahf
call
fucomi
xor
aas
je
mov
pop
mov
scas
ds
cli
and
dec
ja
lods
aas
or
sub
mov
push
sti
pop
adc
cmc
loope
lea
adc
inc
jbe
out
scas
mov
arpl
int
lock
jl
int3
insb
fsubl
frstpm(287
test
stc
xor
sub
pop
pop
add
divl
mov
js
dec
and
lea
xchg
out
cmpsb
or
rcrb
jae
xor
push
mov
sbb
pop
addb
out
fsubr
repnz
adc
out
sbb
mov
fldt
jmp
sub
jecxz
ret
xchg
push
inc
cmpsb
push
lret
imul
push
add
push
ret
and
scas
arpl
hlt
int
mov
aas
push
push
adc
lcall
ja
shll
rorb
dec
cmpsl
sti
xchg
popa
jns
cmp
in
cmp
or
jbe
adc
jo
je
mov
push
push
shl
cmp
jecxz
adc
push
xchg
mov
jnp
cltd
loop
push
test
rcr
stc
add
in
jmp
sahf
sti
xchg
push
scas
jnp
sub
popa
ret
into
or
adc
dec
aam
popa
out
mov
sub
mov
mov
sahf
cwtl
adc
icebp
jg
push
xor
test
xchg
lcall
cmc
cmc
je
out
pop
pop
fcoml
cmp
cmpsl
pusha
lock
xor
pop
js
adc
jno
mov
ret
mov
mov
aaa
cltd
fcmovne
jns
pop
inc
push
ret
bound
pop
dec
push
and
imul
dec
dec
in
popf
mov
ljmp
stc
jp
sbb
cli
mov
mov
scas
or
or
or
insb
mov
cmpsl
por
ds
stc
cmp
into
lods
sarb
adc
cmpsl
insb
mov
xchg
mov
mov
in
push
cmp
push
ffreep
mov
sti
push
jae
push
sti
push
jnp
popa
jo
push
push
pop
mov
shlb
cmc
cmp
addr16
dec
mov
test
mov
jns
inc
cmp
lcall
fidivs
pop
cmp
ss
pop
pop
mov
out
mov
cmpsb
mov
insl
xchg
adc
mov
popf
leave
and
call
movsl
repz
pop
mov
leave
xlat
xchg
pop
out
add
jb
jg
shrb
cwtl
cltd
shr
xor
push
sub
insl
mov
repnz
cld
jle
popa
jb
inc
jnp
fwait
inc
cmp
fs
orl
jnp
xchg
outsb
and
shrl
jbe
stc
pop
xor
push
and
mov
adcl
push
push
xchg
into
mov
push
mov
push
sub
cmp
into
cltd
test
adc
mov
out
pushf
cmp
ds
imul
cmp
cld
or
xchg
cltd
and
mov
cmpsl
clc
repnz
popa
lahf
ret
mov
sub
mov
es
xchg
push
adc
mov
cmp
lahf
dec
inc
add
pop
mov
xlat
and
sbb
int
sahf
aad
jg
bound
into
mov
add
or
jno
mov
mov
lock
lret
sbb
pop
dec
dec
test
mov
jl
push
jmp
stos
cmp
adc
jne
push
popa
test
stos
outsb
cmpsb
sbb
sub
xlat
adc
lds
je
cmp
cwtl
js
movb
movd
outsb
mov
cmpsb
xor
push
cmp
or
dec
insl
ja
mov
pop
repz
jmp
call
jno
outsl
icebp
adc
mov
fs
push
lds
mov
cmp
inc
pop
adc
xorb
lret
pop
dec
enter
mov
pop
aaa
fwait
add
sub
sbb
cmpsl
call
aaa
sahf
clc
dec
mov
mov
fisttpl
adc
aam
ffree
insb
test
loope
pusha
xor
lahf
push
xor
mov
dec
jle
push
jae
cmp
mov
iret
jae
xor
out
test
or
sub
push
jp
notb
fildl
push
testb
pop
ret
fs
sbb
out
inc
pushf
push
idivb
ret
test
mov
imul
or
xchg
dec
fdivs
lock
lods
pop
mov
cmpsl
popf
in
shlb
test
pop
xchg
mov
add
stc
xor
or
lcall
loope
cvtpi2ps
and
push
loope
mov
out
mov
dec
lds
pop
inc
cs
int3
xbegin
mov
add
je
ds
insl
sbb
loop
push
dec
mov
jns
xchg
jecxz
aad
mov
ja
cmpsb
jle
add
xor
cmpsl
mov
ljmp
push
mov
push
cmp
in
jmp
out
push
or
lahf
sub
std
inc
jae
xchg
int
sub
stc
inc
jnp
sub
js
add
popa
jmp
adc
adc
or
xchg
mov
pop
xchg
mov
sub
pop
ror
fdivl
and
frstor
sub
cmp
fcom
pop
mov
push
push
pop
out
sbb
mov
push
test
pop
add
jge
test
push
call
nop
sub
adc
xchg
inc
loope
testl
cs
mov
sub
into
aaa
sub
arpl
aaa
pop
cltd
rcll
rol
add
es
lods
xor
xchg
xchg
push
repz
call
push
sar
test
test
addr16
imul
pop
les
lahf
push
mov
shrb
sbb
lods
push
mov
ss
in
addl
lret
cmpl
adc
movsl
mov
out
or
stos
mov
roll
push
push
imul
mov
mov
inc
xchg
lods
shrl
cmc
mov
and
lret
inc
pop
nop
in
dec
xchg
dec
cltd
inc
jecxz
push
push
mov
ror
mov
xchg
cmp
hlt
fcomp
pop
into
and
pushf
jmp
stc
incl
mov
xchg
sbb
hlt
push
negb
inc
xchg
adc
lret
cmp
fs
cwtl
or
mov
mov
in
aas
es
sets
mov
cltd
lahf
test
mov
add
test
rcrb
mov
and
daa
and
xor
adc
int
loope
sbb
popa
popa
xor
dec
add
cld
jmp
xlat
sarb
jns
sbb
dec
and
push
fistl
std
sbb
push
iret
sbb
inc
mov
jmp
adc
mov
mov
xchg
mov
ljmp
jnp
sahf
pop
arpl
pop
mov
loopne
cmp
cmp
dec
loopne
pop
divl
movsb
xor
scas
jno
add
jo
add
xchg
jno
je
cmp
cltd
data16
cmp
jno
xor
in
loop
jg
push
into
inc
or
push
sbb
fwait
mov
sbb
xor
push
dec
test
adc
nop
mov
pop
xchg
push
inc
cmp
test
and
test
add
sub
lcall
mov
repnz
std
test
nop
push
dec
js
pop
jo
sbb
mov
push
mov
fs
dec
adc
lret
or
push
aas
idiv
arpl
push
adc
xchg
inc
or
andl
int
in
adc
jae
pop
sub
les
ljmp
cwtl
pop
test
xchg
shr
inc
mov
sbb
lret
leave
mov
sub
mov
scas
pop
sahf
mov
fisttpl
imul
jb
add
inc
jge
test
sahf
das
sbb
sub
stos
aaa
fdivl
das
rolb
sbb
dec
cmp
or
or
rcl
add
add
mov
roll
inc
sbb
dec
repz
add
scas
push
jmp
xor
mov
aas
test
leave
jmp
ficoml
sub
inc
mov
mov
aad
les
xchg
iret
cld
test
and
adc
icebp
notb
iret
or
scas
cltd
int3
sub
push
into
cmpsl
pop
rcll
jno
pop
sbb
dec
fstpl
inc
repnz
sub
addr16
outsb
dec
add
ss
inc
sbb
and
fcoms
psraw
xor
lret
sti
jne
stos
movsb
int3
rcrl
leave
sbb
xor
insl
add
scas
mov
sbb
movsb
in
test
scas
cld
mov
pop
jge
push
cltd
imul
pop
jbe
incl
inc
push
movsl
mov
jae
divl
and
push
mov
daa
cmp
push
mov
push
in
movsb
js
incb
int3
mov
js
imul
lods
fstpt
cli
adc
sbb
jecxz
mul
out
sarb
push
mov
dec
xor
dec
imull
mov
sbb
jae
mov
add
fstpt
adc
sub
fdivrp
jo
test
fldl
mov
cs
dec
adc
les
lret
mov
sbb
data16
out
out
aaa
fidivl
pop
dec
subl
or
jge
out
mov
int
decb
in
xchg
and
add
xchg
jle
push
sub
insb
cs
repnz
cwtl
clc
mov
mov
sbb
cs
sarb
repz
cld
mov
cmpsl
xchg
mov
test
in
push
mov
pop
add
and
xchg
xchg
icebp
addr16
jno
in
fidivrl
sbb
addr16
insb
mov
outsl
sbb
cmp
mov
aas
cmpsb
mov
fldl
cmp
xor
push
test
out
inc
or
loop
es
inc
dec
push
loopne
or
mov
mov
insb
mov
repz
xor
mov
dec
mov
mov
or
fwait
inc
das
leave
lret
sbb
outsb
cmp
fsts
or
push
sti
jne
je
cmp
repz
rcrl
addb
scas
jmp
in
push
bound
push
into
mov
mov
or
mov
fdiv
or
and
ret
mov
es
inc
clc
testl
mov
pushf
iret
stos
sbb
jg
rorb
jge
mov
lods
arpl
hlt
fsubrp
arpl
and
dec
movsl
mov
daa
mov
addl
outsl
jae
sub
lods
mov
jae
ret
mov
jp
ss
cs
inc
aas
xchg
and
aam
sbb
dec
popa
inc
and
mov
iret
xchg
sub
test
stc
or
cwtl
or
cmp
cmp
cmp
lea
mov
popa
ret
cltd
mov
gs
push
in
mov
cwtl
xor
add
mov
test
sbb
xchg
mov
push
rcll
mov
leave
xchg
or
fld
jle
cmp
loopne
lret
das
loopne
pop
lock
xchg
xor
loopne
movsb
inc
ret
xchg
mov
add
pop
aad
xchg
pop
mov
gs
testb
mov
push
pushl
adc
pusha
dec
ret
jp
xchg
push
out
pop
ljmp
decb
ljmp
movsb
decl
push
sbb
cwtl
push
mov
sarb
das
int3
sub
xchg
movsb
fcmovbe
or
and
dec
pop
cmpsb
movsl
push
test
adc
mov
dec
popa
stc
ds
push
mov
xor
les
pushf
pop
pushf
movsb
dec
jnp
or
cmp
xor
jmp
sub
sbb
sub
dec
xchg
sub
mov
pop
mov
xor
hlt
es
and
inc
pop
lods
stos
js
jne
fidivrs
xchg
ja
pop
and
negl
sub
jno
dec
push
aas
js
push
imul
jmp
or
aam
iret
je
sub
scas
pop
xchg
mov
ret
lret
ficomps
inc
xchg
mov
pop
xlat
mov
jle
insl
sete
enter
jae
pop
lret
insb
push
xor
or
inc
cwtl
mov
imull
push
insb
sbb
inc
nop
lret
or
fidivrl
outsb
testb
das
fnstsw
insb
xor
sbb
mov
insl
loop
ljmp
and
jb
mov
sub
sub
out
xor
cwtl
pop
mov
hlt
lea
addr16
add
xchg
pushf
mov
mull
int3
and
pop
sbb
jp
movsb
mov
decl
int3
pop
xorb
mov
xchg
adc
aaa
or
out
sbb
sbb
dec
jo
mov
inc
push
jne
mov
in
in
pop
call
imul
mov
mov
adc
adc
mov
xorb
aas
mov
stc
cmp
jnp
test
or
xchg
add
ss
outsb
movsb
push
sbb
jp
sub
jb
insb
pop
dec
loop
movsb
in
imul
jo
jecxz
test
jb
jae
inc
mov
dec
pop
xchg
and
lahf
push
push
call
jmp
jb
pushf
cmp
jge
out
cmp
fidivrs
jl
stos
sbb
push
bound
sbb
mov
dec
mov
dec
popf
outsb
movsl
inc
adc
dec
cltd
xchg
das
or
wrmsr
add
jge
jae
push
cld
xor
ljmp
push
call
stc
test
gs
sbb
jg
xor
sbb
inc
mov
aad
add
pop
dec
loop
jns
mov
push
sti
jnp
iret
push
mov
enter
jl
xor
lods
and
sahf
jnp
stos
lds
clc
fisubrl
mov
mov
insl
mov
add
lds
jg
dec
cmp
or
add
fnsave
or
jecxz
and
inc
test
aam
stc
push
jg
jae
push
fstpt
scas
call
pusha
adc
das
fldenv
xchg
out
xor
lahf
jle
into
ret
pushf
aaa
sub
sub
and
loope
jp
movsb
fnstsw
adc
shll
and
sbb
dec
mov
mov
xor
cli
xchg
inc
xchg
lods
lock
pop
dec
mov
xchg
les
lcall
bound
jp
nop
fcoms
fmull
out
mov
and
das
cmpsb
mov
add
rcrl
xchg
xchg
shrb
call
and
andl
sahf
push
mov
push
inc
fldl
lea
idivl
xor
fcoml
pop
outsl
push
xchg
shrl
and
jnp
cmpsl
in
aaa
and
mov
pushf
adc
jmp
pop
fdivr
dec
mov
gs
aad
in
mov
add
cltd
or
lock
test
std
mov
ficompl
dec
or
test
mov
or
popf
sbb
sahf
mov
push
pop
jmp
pop
sbb
mov
mov
sbb
push
cmc
mov
adc
xchg
rcrl
xchg
xchg
sbb
cwtl
xorl
jg
push
cs
fcoms
scas
popf
mov
outsb
scas
jb
inc
je
adc
jl
xchg
divl
mov
jecxz
insl
insl
test
push
xchg
jo
cmp
add
jmp
faddl
addr16
cmp
add
sbb
jno
cmovnp
in
jno
mov
push
xchg
fcomps
push
addr16
into
inc
add
mov
cmp
loop
mov
push
leave
popf
cmp
adc
int
dec
shrb
xlat
fstl
xor
dec
aaa
rcll
pop
mov
cs
loope
xlat
loopne
sub
mov
in
in
hlt
scas
sub
lcall
pop
mov
sub
inc
dec
out
and
sub
push
sub
addr16
outsl
xor
outsl
or
sarb
pop
nop
insl
cmp
aam
loope
sbb
pop
cmp
test
jp
mov
xor
cmp
fnstsw
scas
adc
ja
add
add
loop
and
xor
mov
or
subl
adc
jge
push
xor
pop
idivl
adc
xchg
mov
iret
icebp
lds
adc
decb
mov
add
pushl
daa
jns
jl
mov
je
add
scas
lcall
loop
or
in
movsb
inc
orl
xchg
loope
clc
and
mov
sub
mov
push
je
xchg
imul
mov
pop
lret
and
and
nop
pop
std
push
adc
imul
arpl
imul
adc
push
bnd
rcll
mov
adc
fldenv
xchg
add
hlt
nop
movsl
xor
mov
xor
pop
inc
and
cmp
ss
cli
dec
push
repz
shrb
inc
call
mov
or
mov
jp
repz
mov
mov
icebp
mov
sbb
xchg
jbe
cmpsl
fsubs
inc
lods
aam
fldenv
iret
xor
adc
cltd
cmpsb
xchg
repnz
mov
dec
mov
add
insl
lds
leave
sub
cmp
or
jnp
dec
and
xchg
cmp
or
rcpps
add
dec
pop
int
cld
aam
xor
pop
jmp
mov
mov
cwtl
mov
jl
mov
je
add
push
mov
mov
xor
mov
cmp
pop
insb
xor
sub
data16
ret
inc
add
ret
sti
mov
or
cmpl
movsb
sub
mov
cmp
push
fidivrs
scas
xor
add
jge
inc
imul
ds
pop
or
out
mov
cmp
mov
outsb
jo
adc
xchg
or
fstl
into
pop
sti
push
fisubs
add
adc
xor
pop
icebp
jb
jp
aas
fstps
mov
add
dec
mov
fsubl
dec
add
lcall
adc
arpl
int3
xchg
test
add
inc
in
add
pop
mov
scas
or
les
adc
movb
mov
idiv
iret
inc
icebp
sub
pop
mov
das
sahf
pcmpgtd
adc
lret
sbb
lods
in
ret
iret
movsl
adc
and
and
fisttpll
ret
das
push
push
mov
testl
add
sahf
call
imul
lock
jmp
lock
int3
inc
mov
shll
lahf
add
sbb
lea
jecxz
decl
sbb
fs
cmp
js
iret
lahf
pop
fldl
cmpsl
enter
out
rcl
jo
pop
jnp
insl
inc
cmp
dec
fistl
mov
cmc
inc
sti
fcoml
mov
icebp
enter
mov
push
xor
jnp
adc
or
mov
insl
dec
sbb
and
lret
mov
add
out
fisubs
mov
test
jecxz
and
sbb
xor
jno
scas
in
dec
mov
sti
test
dec
cmpsb
mov
dec
jl
mov
fbld
jmp
sbb
sbb
loope
add
ret
rep
inc
out
out
test
rclb
repz
adc
insb
out
std
cmpsb
inc
inc
sub
and
sbb
fiadds
push
cli
jmp
jae
out
out
cmp
daa
push
push
cmp
mov
mov
sbb
adc
popa
stos
insb
lds
cmpb
pushf
mov
mov
pop
xor
inc
inc
jp
loop
incl
dec
jge
ret
outsb
mov
mov
or
test
test
data16
add
nop
sub
cs
dec
ficompl
cmpsl
mov
cmpb
sub
rol
pushf
inc
mov
cmp
sti
cmpsl
inc
jl
nop
push
outsb
adc
je
jp
dec
dec
ljmp
std
mov
inc
sbb
imul
iret
aam
cld
std
adc
dec
pushf
stc
lock
jmp
loope
pop
outsl
sti
xchg
xchg
fisttps
orl
leave
jp
es
lret
cmpsb
jg
add
ret
arpl
and
leave
cmp
inc
inc
or
pushf
xor
or
add
imul
mov
jmp
scas
rcr
minps
gs
out
out
into
cmp
mov
outsl
mov
aad
adc
xchg
lahf
pusha
inc
push
and
jmp
adc
mov
sub
les
fcomps
mov
test
mov
jp
cmc
inc
sub
mov
dec
stos
mov
stos
rorl
lds
arpl
stos
insb
push
sbb
inc
and
arpl
lods
cmpsl
push
xchg
dec
movsl
sbb
jge
pop
popf
jbe
sub
ss
imul
test
or
loopne
bound
mov
xor
je
cmp
cmpsb
pop
mov
fistl
xchg
jg
popa
adc
cmp
ds
cmp
shl
out
popf
add
push
icebp
mov
inc
dec
loop
imul
xor
enter
xchg
in
dec
imul
jge
push
mull
adc
dec
lret
xorb
push
jecxz
cmp
aaa
dec
adc
pop
popf
sbb
add
mov
push
jg
inc
jp
icebp
pop
ffreep
push
cmp
mov
jg
or
sbb
and
push
pop
rorb
mov
fdivrl
xchg
push
loopne
xor
xor
ret
pop
xor
mov
imul
pushf
loopne
sarb
xor
adc
mov
mov
and
jb
fmull
push
or
es
subb
or
cli
push
test
cs
lcall
dec
frstpm(287
xor
xchg
or
jb
inc
dec
xchg
or
fsubl
push
cltd
inc
mov
in
jo
push
jne
xchg
and
les
push
test
in
sub
lret
jg
fs
pop
mov
mov
jp
pop
daa
addr16
push
mov
jecxz
int
push
ficompl
lcall
dec
sub
or
repz
cwtl
and
sbb
sar
ror
fwait
jle
dec
push
das
mov
and
sub
fsubl
inc
xchg
push
imul
out
jnp
out
aam
mov
fsubl
movsl
dec
subb
int3
mov
punpcklbw
aam
jne
sarb
add
test
sbbb
mov
adc
lahf
sbb
sbb
jl
das
sahf
cmp
mov
cltd
clc
mov
aas
jle
dec
fwait
xchg
fsubs
mov
mov
pop
cmp
jecxz
insl
mov
dec
cs
imul
push
and
fdivl
data16
xor
imul
addr16
fimull
push
jno
repz
mov
lods
fnstsw
jl
clc
icebp
mov
xchg
outsb
movsl
aad
xchg
xor
bound
pushl
in
xchg
in
dec
pop
jmp
mov
lret
xchg
sbb
inc
jae
loopne
push
imul
cmp
movsb
jb
lcall
dec
fbstp
pop
or
es
mov
pushf
cs
push
inc
and
mov
jnp
fidivs
cmp
fst
aam
ljmp
movaps
add
or
add
in
andl
nop
negb
jbe
pop
and
xchg
inc
je
movsl
jns
xor
sub
out
pop
jl
orl
adc
lea
lock
jp
out
iret
loopne
out
ss
jg
into
xlat
jmp
stc
fiadds
inc
mov
jne
xor
mov
jle
pop
cld
cmp
mov
lret
loope
mov
jg
inc
sbb
lods
scas
cmpsb
in
push
mov
mov
sbb
repnz
xchg
adcb
adc
movb
jo
jo
push
adc
push
roll
mov
aas
je
and
or
jl
mov
sbb
sti
dec
pop
aam
sbb
orl
cli
imul
movsl
fildll
and
mov
pop
jno
je
stos
mov
jle
sub
jp
in
sbb
xor
cmp
idivb
mov
jg
jmp
jg
dec
and
and
cli
xor
fisttpll
and
jle
xchg
xor
adc
fcmovbe
inc
movsb
jbe
lds
in
popa
iret
das
sbb
inc
out
jg
pop
ss
jno
imul
fisttps
aas
stos
aad
mov
mov
jge
sbb
gs
cmp
sbb
or
movsb
lahf
adc
aaa
repnz
or
adc
dec
mov
or
xor
mov
or
into
push
sti
mov
outsl
inc
cwtl
pusha
inc
push
or
sbb
mov
sub
mov
in
leave
idivl
push
add
pop
jecxz
adc
fcompl
sub
repnz
jp
movsb
stos
mov
stos
push
sbb
orl
sarb
fstpl
loope
sub
jb
sub
cmc
mov
in
jl
pop
ja
stc
inc
cwtl
fsubs
pusha
pusha
clts
or
sub
jns
sbb
cmp
andl
loopne
cmp
mov
or
stos
mov
jo
sub
in
jle
xor
aas
xor
xor
aaa
out
popf
or
movsb
sbbl
dec
test
pop
push
test
movsb
out
scas
pop
sub
mov
fmull
stos
cmp
stc
add
int3
js
cltd
mov
roll
test
enter
mov
and
vcvtsd2si
dec
lahf
repz
push
pop
inc
orl
mov
jmp
jno
shrl
movsl
sti
cltd
add
cmp
aad
and
in
add
mov
cmpsb
cld
cmp
bound
push
pushf
loop
pusha
into
dec
loope
std
cmpl
and
lcall
mov
cltd
add
push
xchg
lcall
clc
iret
jb
rcll
loope
xchg
add
mov
fisubl
jge
les
add
jb
sub
in
xchg
xchg
cmpsl
cmp
aad
and
mov
and
mov
and
and
sbb
jno
or
jecxz
cli
out
dec
cli
inc
push
inc
or
cmc
pop
call
lea
loope
push
jmp
movsb
sahf
flds
sbb
imul
mov
push
sahf
pop
jo
sub
push
or
xchg
jne
arpl
jmp
sub
dec
inc
ljmp
mov
movsb
loop
enter
xchg
gs
rorb
lock
sub
in
mov
mov
mov
cld
add
inc
xor
adc
sub
arpl
roll
dec
dec
lods
lahf
es
push
pop
imul
xchg
int3
xchg
mov
jmp
divl
mov
xchg
adc
jno
or
pop
push
lret
fwait
lret
jp
dec
cmp
sub
jae
mov
les
cmp
loope
sub
orb
test
pushf
loop
in
push
push
and
pop
lret
mov
push
ljmp
mov
iret
fnstcw
cltd
movsl
adc
sbb
sub
insl
cld
dec
rcrb
xorl
mov
in
mov
es
out
mov
dec
mov
ficoms
insl
int3
mov
xchg
cld
pop
loop
mov
xchg
in
mov
rcrb
popa
pop
xchg
push
insb
cbtw
stos
xlat
add
daa
xchg
lods
mov
sbb
mov
das
pop
icebp
cmp
lret
inc
dec
arpl
mov
out
es
push
pop
xor
fistps
mov
xor
mov
cmc
xlat
cs
aad
and
push
jg
add
imul
inc
adc
cld
test
movsb
mov
sbb
mov
mov
jns
jl
lods
and
push
mov
loope
push
mov
incl
pop
aam
mov
lds
add
jge
adc
insb
and
cmp
bound
lret
push
dec
loopne
mov
dec
loopne
popa
cmpb
sbb
aas
shlb
inc
shrb
mov
es
xlat
inc
xchg
out
lods
jmp
xlat
jp
and
cmpsb
hlt
shl
dec
aaa
dec
movsb
jnp
xchg
ljmp
ret
inc
or
pop
dec
je
dec
mov
cmpsb
push
push
icebp
ret
sbb
mov
cwtl
and
sbb
jecxz
mov
repz
and
adc
fiaddl
pop
gs
cmp
and
mov
flds
in
lret
inc
repz
and
sbb
aam
mov
imul
daa
or
dec
sbb
stos
ja
fucom
xor
out
and
push
roll
push
outsb
aam
adc
adc
inc
pop
aaa
cld
push
or
adc
lahf
out
dec
clc
ffree
adc
jo
repz
xchg
movsl
jnp
cmp
lret
sub
fildll
incl
cmp
cmpsb
arpl
mov
lahf
fwait
and
dec
push
cmp
push
in
cmp
inc
cwtl
add
and
loop
pop
sbb
mov
pop
sbb
or
icebp
jl
leave
jnp
mov
cmp
add
push
nop
popa
pop
mov
aaa
decl
mov
dec
fnstcw
or
sbb
loopne
xlat
jo
or
add
mov
adc
push
push
jae
mov
and
dec
sbb
pop
adc
mov
mov
stos
xor
and
ljmp
cmp
cmp
inc
xchg
xchg
add
xchg
addb
mov
es
aas
push
lods
stc
lret
rol
cs
xor
dec
jge
xchg
jno
push
cmpsl
jno
int3
xchg
cmpsb
daa
inc
lea
xor
jg
cmp
cld
sub
pop
and
add
lods
and
mov
push
and
push
jle
rclb
int
xchg
dec
inc
xchg
jbe
in
bound
cmpsl
imul
aaa
ds
inc
inc
in
push
fildl
cmpsb
rorb
sbb
movsl
test
aad
bound
and
repnz
lahf
xlat
enter
inc
add
sbb
xor
sbb
imul
hlt
sbbl
sbbl
jbe
out
push
jp
sbb
mov
push
mov
xor
xchg
mov
movsl
in
and
jne
jecxz
std
xchg
xchg
mov
mov
dec
divl
fs
bound
sbb
pop
add
dec
out
inc
nop
cmpsl
mov
add
sbb
shrb
xchg
inc
fs
cmp
shl
call
cs
pop
lret
inc
nop
sub
cmpsb
jl
push
mov
push
incl
mov
imul
cwtl
ljmp
repnz
mov
and
cmp
ret
xor
shr
sbb
and
xchg
add
int
arpl
pop
popa
outsl
inc
imul
add
pushf
std
dec
dec
mov
repz
cmp
jecxz
inc
and
mov
mov
pop
fs
pushf
adc
out
xchg
ficoml
ljmp
jl
xchg
sbb
cltd
push
test
pop
push
mov
ret
loopne
push
lahf
dec
lret
add
cmp
xor
inc
mov
xor
pop
inc
lock
scas
lea
bnd
jmp
pop
jmp
cmp
aaa
out
and
out
xor
leave
inc
add
adc
in
stc
add
aam
jle
fbld
repnz
loopne
dec
jo
ficomps
xchg
xlat
repnz
int
sbbl
jecxz
and
push
out
mov
lret
adc
pop
pop
pop
pop
enter
and
stos
push
shlb
jae
jle
jne
mov
nop
out
out
aas
push
push
sahf
lods
jp
out
and
push
sub
mov
lahf
aam
aas
ss
test
pop
inc
adc
data16
inc
scas
icebp
daa
adc
or
jl
mov
and
xchg
or
xor
cmp
test
push
push
movsb
imul
fwait
push
popa
movsl
cmp
jnp
ret
data16
ret
push
nop
mov
imul
negb
lret
mov
rcrl
aas
stos
mov
mov
fildl
xor
sub
or
data16
push
loop
loope
lock
xchg
xchg
xor
rcrl
lret
cmc
repz
push
scas
pop
lea
inc
imul
faddl
inc
jnp
xchg
lret
or
jge
gs
fnsave
shrb
lds
loope
in
pop
out
push
mov
popa
out
mov
rcr
pushf
sub
sub
mov
arpl
lahf
out
jg
flds
push
inc
data16
add
addl
and
add
jle
sahf
test
ljmp
clc
sysexit
stos
int3
test
leave
push
jp
adc
cmp
adc
clc
inc
sbb
adc
sub
in
mov
arpl
sub
mov
inc
mov
outsb
xor
imul
mov
pop
cmp
dec
outsb
jb
jl
int3
cli
jg
mov
insb
mov
jge
in
push
cmp
cld
les
das
cmpsb
rorl
xchg
inc
mov
pop
mov
or
outsb
inc
dec
adc
cmp
das
xchg
popa
jo
lret
inc
addl
repz
xor
fstpt
mov
les
repz
popa
adcb
mov
push
mov
jge
jge
push
les
xchg
fimull
icebp
shrb
mov
mov
mov
lods
xor
push
ja
inc
add
lds
cld
add
mov
mov
repnz
stos
pop
insb
ret
xchg
pop
pop
cmpsl
mov
xor
dec
mov
mov
lds
xchg
inc
adc
ja
test
dec
sub
dec
xchg
xchg
mul
stos
sub
push
push
xor
xor
aad
push
jae
cmp
fldl
je
push
mov
cwtl
mov
lcall
sbb
push
jb
loopne
fdivrl
dec
in
jo
add
sahf
pop
pop
inc
lods
jae
cltd
clc
mov
pop
cmp
xor
xchg
jns
sbb
sub
mov
mov
aaa
xchg
adc
insb
inc
scas
xlat
push
cltd
xchg
cwtl
scas
cltd
inc
sbb
jbe
sub
loop
andl
data16
add
das
daa
cmp
xchg
lahf
xchg
pop
and
icebp
and
xchg
in
add
inc
mov
pop
mov
movsl
dec
ja
push
add
loopne
mov
scas
movsb
mov
mov
cmpsb
icebp
mov
out
sub
xchg
sub
jp
hlt
push
call
inc
js
pop
jbe
jl
je
aad
mov
pop
cmp
adc
add
add
shlb
test
es
push
xchg
mov
repnz
push
fstcw
dec
les
fistpll
jl
cmp
mov
pusha
lods
sti
fucomp
pusha
mov
sarl
test
arpl
mov
aam
jne
pop
dec
xlat
je
out
divb
jo
and
insb
sub
clc
and
in
push
ret
ds
mov
xchg
mov
lahf
test
shlb
popf
cmpsl
imul
or
inc
sub
xchg
lods
pop
out
pop
stos
subb
inc
lcall
jne
addr16
jmp
and
mov
add
in
pop
xchg
jg
xor
sub
xchg
addr16
enter
movsl
stos
or
cmpsl
inc
push
push
xlat
leave
sub
push
jl
mov
fidivrl
jmp
rclb
jo
mov
out
scas
out
iret
int3
sahf
leave
pop
inc
ret
iret
xchg
fcom
ja
mov
mov
xchg
fdivr
or
push
dec
movsb
cmc
push
xchg
jb
or
stc
adcl
sahf
in
scas
xchg
fsubrl
lods
pushf
pop
mov
xchg
cmpsl
iret
inc
js
inc
adc
addr16
xchg
int
jg
lea
ret
test
orl
cmpsb
data16
addl
or
sbb
push
js
dec
sub
or
or
pop
and
cmp
movsl
mov
cmp
fcoml
xchg
les
cmpsb
ds
cli
dec
outsb
dec
mov
push
cwtl
idiv
sbb
sub
xor
xor
es
sub
mov
imul
xchg
outsb
ds
pop
pop
mov
jmp
dec
test
jge
fbstp
inc
repnz
pop
mov
jg
in
mov
sarl
cli
les
ljmp
aad
cmpsb
add
fbld
test
jb
shlb
insb
add
sbb
mov
out
loopne
hlt
rclb
sbb
aad
dec
sbb
adc
xor
mov
cwtl
dec
lret
popa
scas
add
insl
adcl
test
fs
mov
dec
push
mov
push
mov
fnsave
jb
dec
inc
adc
sbb
repz
int3
in
or
rcrl
test
bound
push
jnp
add
mov
sbb
inc
icebp
inc
dec
insb
cmpb
mov
lea
idivl
mov
and
out
lods
fwait
mov
add
out
add
jnp
jnp
notb
aam
jbe
sahf
jnp
addr16
mov
mov
cmp
addr16
clc
icebp
jns
mov
repz
shll
sub
adc
push
es
test
mov
sbb
push
pop
imul
dec
call
fs
loopne
lods
stos
adc
loop
hlt
sub
jmp
fucom
dec
inc
pop
stc
pop
lods
testb
push
fsubr
addr16
xchg
aad
mov
nop
xlat
out
mov
js
scas
and
mov
or
xor
sahf
sub
mov
push
jl
fsts
jb
data16
add
xchg
sub
in
les
fbstp
cmc
inc
mov
aaa
push
jge
add
insb
mov
push
fstl
rolb
call
test
aas
adc
sub
xorl
cmpsl
in
scas
pop
xor
icebp
add
movsl
outsb
xchg
test
xchg
test
loope
mov
or
out
or
leave
std
out
sahf
add
lcall
mov
sub
jmp
push
mov
rcrl
mov
daa
mov
mov
or
icebp
push
or
dec
push
incl
js
rorb
pop
mov
inc
jnp
cmp
xor
loop
cld
mov
add
sti
mov
sub
mov
add
repnz
inc
pop
cmpb
movsb
sbb
xchg
scas
insl
fdivl
in
ficoms
inc
jp
in
jle
mov
imul
into
dec
mov
and
js
push
mov
ljmp
sub
lret
cmpsl
pop
fldcw
nop
dec
data16
addb
dec
or
cwtl
inc
jno
xchg
insb
mov
addr16
xlat
aaa
mov
movups
mov
xor
test
shlb
addb
push
or
sbb
mov
or
pop
movsb
pop
jmp
mov
adc
sbb
sti
mul
cmpsl
in
mov
mov
cmpl
push
lods
ss
cmp
scas
pushf
rcrb
or
xor
adc
fildll
subb
scas
imul
or
and
pop
in
jnp
es
sbb
xchg
dec
add
scas
nop
or
pusha
subb
mul
sbb
and
mov
test
push
aam
mov
add
fucomi
ret
jae
push
jns
cmpsl
mov
sbb
stc
add
jl
sti
mov
mov
rorb
mov
sub
mov
aad
add
sub
sbb
aad
add
mov
test
push
ljmp
push
loopne
sub
roll
arpl
shll
test
and
sbb
xchg
xchg
push
xchg
insb
out
lahf
sbb
cmp
fstpl
mov
sub
inc
mov
inc
mov
inc
aam
xchg
nop
mov
data16
outsb
call
out
gs
pop
mov
xchg
adc
fdivrs
ds
popf
xor
lods
lock
mov
lahf
ss
mov
lret
sbb
std
imul
sub
cwtl
jns
xchg
and
shlb
sub
and
cmp
sahf
pop
mov
jecxz
or
ja
popa
push
out
mov
or
js
mov
fidivs
out
jl
adc
cltd
test
xor
xchg
sbb
pop
inc
sub
lds
lahf
inc
cld
xor
insl
stos
fcmovb
and
lahf
jae
dec
fs
or
daa
cwtl
xchg
pop
movsl
pushf
movsl
test
push
fcomip
aaa
lods
pop
adc
dec
test
cmpsb
adc
dec
cmp
or
pusha
cmp
bound
movsb
imul
sbb
in
sub
inc
fcomp
sub
cmp
jbe
push
xchg
test
cwtl
sub
sti
stos
push
push
xor
inc
pop
mov
and
sarb
sbb
stos
xchg
xchg
int3
fisubs
xchg
dec
sar
or
enter
sub
inc
add
int
inc
rclb
aad
scas
dec
aam
jnp
cmpl
lods
push
mov
mov
push
sti
leave
push
xor
loopne
sti
and
sbb
pop
out
jg
int
jb
inc
inc
scas
add
xor
lea
ljmp
push
out
jecxz
les
adc
add
dec
fistl
ret
aam
pusha
push
addr16
xlat
cs
test
push
out
mov
test
aam
dec
or
push
dec
aas
jno
jne
xchg
xchg
push
gs
pop
icebp
int3
orl
mov
mov
cmpsl
js
or
fs
pop
xchg
mov
test
jno
fistpll
or
xchg
rcll
bound
out
xchg
stc
call
push
jbe
push
ljmp
sbb
mov
inc
or
cld
aad
insl
pushl
loope
mov
es
mov
scas
mov
inc
in
push
aad
pop
push
inc
stos
std
inc
pusha
sbbl
xor
mov
dec
dec
rclb
scas
nop
sub
enter
nop
xor
movsb
xchg
sbb
unpckhps
xchg
xlat
dec
pop
ss
test
outsl
fnstcw
lea
in
test
mov
jle
inc
pop
sbb
popf
int
adc
fmull
xchg
cmp
mov
in
adc
mov
mov
push
rol
out
stc
insb
dec
jno
jecxz
xchg
adc
pushl
ss
movsb
add
jne
loope
push
mov
repz
and
cmp
nop
pop
adc
push
or
fisubrl
cmp
cwtl
add
mov
cs
sbb
pop
push
mov
jle,pn
or
aad
call
loopne
jg
imul
add
inc
dec
sbb
adc
adc
cmp
shll
mov
push
inc
fsubs
pop
out
xorb
sub
inc
xchg
push
jb
mov
decl
and
fdiv
aad
or
jno
subl
js
movb
xchg
xchg
subl
xchg
xor
sub
outsb
mov
fidivl
add
push
or
mov
faddl
jb
xlat
sub
cmp
addl
pop
cli
rcrl
mull
dec
xchg
and
das
fs
xor
sbb
jecxz
xchg
out
inc
add
fwait
lahf
or
rclb
out
test
xchg
cmp
mov
sub
mov
and
mov
cmp
mov
outsb
cltd
xor
push
ret
pusha
sub
test
xchg
stc
fsubr
or
and
enter
test
adc
xor
mov
mov
mov
daa
pop
std
dec
arpl
das
bound
pop
rorb
aad
sub
xchg
cmp
push
mov
jmp
ljmp
in
pop
push
mov
dec
push
mov
mov
fld1
lahf
xchg
cmp
push
in
jmp
decl
mov
push
loop
adc
add
adc
cmp
std
or
mov
rcrl
fcoms
pop
push
std
sub
sub
sub
aad
js
sbb
lcall
jne
es
mov
loop
dec
daa
ss
mov
mov
mulb
push
fcmovb
int3
lods
mov
lods
and
movsl
sub
pusha
jg
pushl
mov
add
mov
push
sbb
daa
test
cmp
pop
mov
addr16
cmp
pop
push
push
outsl
push
lods
gs
addr16
das
in
das
sub
jg
in
nop
outsb
inc
pop
pop
pop
vmread
or
push
sub
in
je
jge
jno
push
jns,pn
sbb
mov
stc
and
lock
int3
dec
or
out
out
mov
jbe
in
lods
pop
cmp
push
lcall
insl
pusha
dec
and
scas
sub
adc
mov
ss
sbb
in
ret
adc
cli
mov
lahf
mov
arpl
push
mov
jl
mov
sbb
testl
and
dec
hlt
jl
stos
cs
icebp
push
in
lods
insl
mov
rcl
lret
sbb
pop
rcl
dec
in
mov
ja
js
mov
loopne
repnz
adc
out
rcrl
out
repz
adc
ficompl
sub
lret
xor
loopne
push
inc
into
adc
cmp
jae
xchg
sub
pop
push
push
rcll
jo
cmpsl
imul
sbb
lahf
pop
pop
lea
xor
test
push
jns
sub
adc
je
lea
cmp
cs
mov
mov
mov
fistpl
call
data16
push
ret
pop
scas
fstl
sbb
icebp
stc
mov
pop
mov
cli
mov
pop
fimull
inc
pop
push
xor
xchg
xchg
enter
cmp
adcl
dec
icebp
jmp
xchg
jmp
scas
cmp
lcall
sbb
fwait
and
cli
mov
xchg
testl
add
rcll
pop
loop
outsl
fisttpl
es
push
lret
test
push
pop
sub
aas
xor
je
add
ret
aas
clc
stos
inc
test
cmc
jae
fnstenv
or
ss
jb
mov
pop
dec
ror
xor
scas
pop
lds
pop
aam
sub
or
fucomp
nop
mov
aam
inc
and
push
xchg
mov
mov
shrl
xor
mov
add
and
loop
fildll
or
das
xchg
mov
jp
jp
and
pop
inc
xor
iret
and
lock
mov
ds
sbb
ja
cmp
lahf
cmpsl
inc
jge
in
add
xor
push
push
jp
or
in
xor
cmp
add
xor
mov
movsl
or
enter
sub
push
fcompl
dec
mov
js
pop
test
inc
mov
call
repz
pop
dec
jb
movlps
mov
fisubs
push
cmp
ret
dec
jno
xor
bound
outsl
cld
mov
mov
out
jmp
inc
in
pop
addb
fs
mov
test
mov
sbb
xor
cmp
popf
in
nop
cld
jbe
xor
jbe
sahf
jo
jge
aam
jg
add
sub
add
sub
addr16
xchg
mov
fcmovnb
add
xchg
lret
sub
mov
push
push
aaa
jmp
outsl
add
jbe
out
jmp
push
jne
adc
std
pop
inc
push
dec
inc
sub
sub
mov
insb
adc
push
mov
dec
cs
out
addr16
push
adc
pop
mov
outsl
add
pop
pop
mov
lret
or
xchg
movl
arpl
mov
insl
fsubrs
lods
in
mull
scas
jp
test
jne
out
je
add
mov
mov
mov
xchg
loopne
lret
dec
ret
mov
or
mov
push
xchg
subl
andb
add
push
std
pushf
into
popa
and
jle
out
dec
std
jmp
mov
mov
and
mov
mov
bound
mov
fstps
push
and
mov
sbb
std
jg
push
fsubl
popf
pop
fcoml
cmpsl
mov
fldpi
incl
out
lret
aaa
iret
shlb
repnz
sahf
rcr
fwait
aad
xor
fistl
push
arpl
test
mov
cmpb
shl
cld
pop
and
mov
outsl
mov
add
dec
xor
leave
adc
hlt
push
add
cmp
out
mov
sub
inc
idivl
add
cmp
popf
jmp
jnp
inc
xor
mov
xchg
xchg
jno
lea
mov
sahf
jo
ljmp
outsb
test
cmpsb
cmp
sbb
mov
jae
int
ss
fisubrs
pop
sbb
xchg
sub
mov
call
nop
pusha
inc
test
jns
shll
test
sub
dec
xchg
lods
mov
fistpl
push
mov
sbb
repz
fildll
lea
sub
and
pop
inc
sub
jp
dec
push
push
sub
inc
xchg
bound
out
jle
adc
mov
mov
fwait
mov
cltd
sarb
inc
test
mov
ja
jle
negl
jmp
jge
into
ljmp
xchg
leave
cli
mov
mov
pop
push
jge
subl
lods
and
push
jns
jns
test
push
lcall
mov
test
xor
mov
push
adc
je
nop
popa
test
add
fadds
and
fdivrs
jnp
mov
or
dec
repz
test
mov
and
clc
shrl
jecxz
ret
sub
add
fdiv
or
shll
mov
mov
out
andb
push
mov
ret
les
cli
jae
sahf
add
jnp
inc
std
and
stc
push
lock
and
in
dec
mov
and
push
cs
pop
mov
xlat
loopne
std
repnz
js
test
out
jno
ror
add
push
mov
xchg
cmc
cmp
push
dec
hlt
outsl
popa
lret
sbb
sbb
subl
xor
jne
stos
out
sahf
jo
push
xchg
cmp
and
ret
daa
or
xchg
and
sub
jbe
notl
jle
jmp
popa
or
inc
adc
mov
adc
aas
xor
ljmp
faddp
stos
pushf
movsl
mov
mov
dec
ja
dec
mov
add
add
pop
mov
xchg
and
out
mov
xor
in
cmp
aad
scas
sub
adc
cwtl
std
jns
push
jecxz
push
popf
inc
decb
repz
nop
cmp
jle
xor
ljmp
jmp
mov
or
inc
mov
pop
push
dec
rep
imulb
pop
mov
je,pt
adc
mov
pop
add
add
xchg
sub
sbb
addr16
inc
fsts
dec
mov
movsb
mov
sbb
decb
dec
inc
push
or
or
xchg
and
outsl
lahf
mov
or
push
cmp
lgs
xor
mov
mov
pop
ds
orl
sbb
pop
and
xor
movsb
jl
xchg
mov
cwtl
mov
add
xlat
outsb
notb
xchg
sbb
inc
faddl
andb
icebp
stos
or
mov
imul
mov
movl
shrl
lret
sbb
sahf
pusha
sub
pop
cmpsl
jecxz
add
orb
ljmp
dec
sarb
xor
in
mov
adc
sar
jo
sbb
mov
push
pop
daa
dec
cmp
dec
pop
xor
ljmp
xchg
pop
mov
push
and
pushf
mov
pop
mov
and
mov
inc
addr16
sub
test
cmp
cmp
filds
ljmp
or
int3
movsl
push
addr16
sbb
std
out
mov
jbe
popf
in
sbb
mov
xchg
cmp
add
pop
int
inc
add
fsubl
mov
insl
push
sti
gs
lea
lret
popf
lret
sub
and
sub
insb
jno
sar
aas
and
rcl
xsaves
add
add
dec
ret
pushf
lock
add
cmp
lcall
cmp
xchg
mov
mov
fsubrl
xchg
xor
inc
cmp
dec
xor
roll
int
popf
fidivrs
test
mov
popf
jmp
and
adc
push
ret
jge
and
xor
jp
clc
lock
loope
pop
add
push
sub
inc
jns
dec
shrl
xchg
fnstcw
out
sub
xor
or
pop
int3
fcompl
mov
cld
icebp
aaa
push
shll
adc
sub
outsl
test
sub
cmp
inc
dec
cmpl
xor
scas
mov
push
push
sbb
or
fstl
and
mov
lea
clc
adc
xor
js
mov
or
jb
sbb
xchg
aad
insb
leave
call
inc
outsb
mov
bound
shll
rorl
arpl
adc
adc
fdiv
cld
imull
aas
aas
outsb
push
ret
mov
popa
cmp
xchg
inc
iret
ds
add
jge
mov
fidivs
adc
pop
jmp
loop
mov
jae
pop
gs
mov
mov
push
lcall
ljmp
adc
addr16
sub
fistl
test
jo
decb
fcomi
mov
leave
repnz
inc
arpl
and
lock
neg
xchg
sub
sub
push
out
mov
sbb
ljmp
fcomi
das
ret
sbb
mov
popf
push
leave
aas
es
and
mov
cmp
dec
imul
inc
imul
sub
test
sub
mov
push
xchg
xor
fwait
int3
lock
jo
mov
lods
pop
adc
lret
subl
jp
pop
loopne
sbb
mov
sub
sarl
xor
popa
idivl
jge
dec
insl
sbb
std
mov
fwait
jle
iret
mov
dec
sub
mov
jl
pop
mov
add
sub
sbb
jmp
push
pushf
push
pop
sub
or
pop
in
in
mov
cmpsl
pop
push
sbb
fsts
mov
pop
cmpsl
cmp
roll
scas
shrb
test
mov
js
data16
dec
lods
jmp
xchg
sbb
scas
push
addr16
jl
fadd
cltd
pop
push
jmp
add
jecxz
sub
xchg
jne
pop
adcb
clc
mov
popa
mov
subb
clc
orb
add
lahf
push
and
dec
mov
ljmp
out
test
aas
push
add
mov
sbb
cltd
jmp
sub
xchg
and
lds
inc
out
and
in
add
or
lds
or
xchg
ja
repz
les
insl
fcom
inc
pushf
push
mov
xor
mov
mov
jge
jb
sub
push
xchg
pushf
std
xchg
and
or
movsb
or
jo
push
push
in
or
sbb
cmpsb
out
lahf
insl
cmp
lret
sub
aad
aad
mov
pop
or
int
rclb
in
lcall
out
fcoml
jge
jnp
outsl
in
mov
or
daa
mov
xor
fs
fs
jle
jo
jno
lret
das
insb
pop
stos
lods
aam
push
push
mov
push
sub
ss
int3
pop
jle
sbb
cmp
xor
push
out
pop
into
fcompl
or
mov
mov
pop
data16
push
jecxz
jmp
sti
sub
rclb
or
pushf
fdivs
aas
sbb
call
mov
cmpsb
shll
ret
sahf
jne
sbb
and
add
out
add
test
cld
ficoml
xor
mov
mov
jge
sahf
xchg
orl
xchg
les
or
clc
leave
push
pop
inc
cs
sbbb
scas
pop
adc
mov
test
cmc
inc
or
jne
test
mov
cli
das
pop
movsb
nop
fwait
mov
fwait
mov
sti
movsl
lret
ds
mov
jnp
mov
xor
fdivr
mov
aad
inc
or
push
leave
inc
gs
xchg
sbb
xor
xchg
push
adc
lahf
adcl
dec
je
call
popa
jle
shrl
out
fsubl
aas
lods
cmovo
lock
sarb
jmp
jbe
into
popf
lahf
rcrb
pop
ljmp
sub
inc
mov
stos
xlat
add
cltd
or
or
les
xchg
mov
in
movsl
out
sahf
jecxz
cmp
or
pushf
push
outsl
pop
movsl
stc
ja
inc
xchg
jge
and
lret
push
mov
jecxz
pop
xor
scas
pusha
pop
and
ss
sar
mov
stos
outsl
loope
pusha
cmp
pop
pop
or
ret
out
mov
push
xorb
fdivrl
cmp
data16
outsb
push
nop
xor
dec
and
jl
movsl
dec
xchg
and
mov
xlat
shlb
xchg
push
test
mov
pop
fldl
sub
iret
push
scas
icebp
imul
and
xchg
jno
mov
into
stc
rcll
mov
in
leave
bound
ljmp
or
loopne
hlt
push
fisttps
test
mov
lahf
push
or
sbb
pop
fstpl
inc
mov
shlb
xchg
xchg
sbb
sbb
sbb
mov
xor
mov
xlat
into
cmp
and
stos
loope
and
mov
mov
mov
out
push
add
lea
stos
cmc
xchg
cltd
in
inc
movsl
or
loope
outsl
cmp
daa
movsb
jmp
out
jl
fidivl
pop
and
xor
push
and
dec
cmp
in
fstpl
sub
jecxz
push
dec
into
stos
mov
xchg
cmovo
push
cmc
or
jno
xor
push
mov
dec
cmpl
xchg
jg
inc
xor
clc
jne
fs
mov
das
lret
sbb
xchg
nop
bound
jmp
mov
aas
mov
lret
lahf
or
loopne
dec
ficomps
rorl
fldt
repz
cmc
test
cmc
ss
mov
out
or
out
and
loope
add
push
clc
xor
movsb
lahf
stos
imul
push
lret
lock
mov
xchg
or
push
cld
lods
sub
je
ret
jmp
iret
sbb
inc
fnstenv
test
daa
int
clc
xorl
shlb
pop
mov
test
jns
push
xchg
xchg
mov
push
fsubs
loop
pop
push
add
push
lahf
mov
adc
jecxz
mov
xchg
push
add
dec
adc
lcall
push
xlat
arpl
int3
dec
push
outsl
sub
jecxz
sbb
shll
aas
loop
pop
sti
scas
adc
or
ror
loope
call
mov
test
dec
dec
xor
adc
mov
or
xor
out
pop
lock
cli
rcrl
ljmp
ficoml
mov
out
jae
lods
mov
or
test
sbb
fstl
jmp
fwait
or
adc
dec
or
cld
mov
xchg
aaa
popf
clc
cmp
xchg
or
aaa
and
shrb
xlat
xchg
js
mov
push
fnstcw
loopne
lock
leave
inc
add
in
jo
sbb
add
xorb
iret
inc
lods
mov
movsb
sub
push
cmp
in
test
fildl
in
sub
jns
fucomip
add
lods
roll
lds
in
loope
lds
lock
jo
mov
aaa
mov
jne
cmpb
lds
test
xchg
popf
or
jg
mov
push
dec
sbb
mov
pop
mov
add
xchg
jp,pt
lea
pop
outsl
lea
xor
sub
inc
mov
mov
fst
jb
pop
mov
andb
xor
and
in
mov
pop
aad
out
push
mov
mov
aas
dec
mov
jg
jae
xor
into
out
pusha
insb
sbb
std
outsb
dec
jns
cmp
xor
enter
movsb
mov
push
sub
sbb
xchg
ds
xchg
lcall
js
ret
xor
adc
cmpsb
inc
movsb
movl
in
xchg
fwait
sub
fst
xor
sub
mov
push
push
sbb
cmpsb
stos
sub
mov
das
mov
test
ret
pop
scas
adc
cs
xchg
insl
jecxz
cmc
ljmp
xchg
add
xchg
xor
mov
cs
jp
out
popa
test
aaa
mov
fcompl
cvtps2pi
mov
and
or
adc
mov
outsb
daa
test
imul
subb
repnz
fmull
pop
cli
and
pop
mov
lcall
insl
mov
xor
iret
adc
sub
push
and
imul
pop
fldt
mov
push
stc
mov
mov
jmp
mov
out
mov
imul
ja
sbb
jns
xor
lods
jo
cmpsl
mov
sbb
sahf
das
sub
xor
ljmp
ret
addb
lods
imul
enter
enter
in
mov
enter
fstpt
notb
or
cs
mov
pop
test
enter
outsl
xor
push
jp
mov
lret
cmp
sbb
or
dec
inc
jle
xchg
lcall
mov
popf
movsl
pop
xor
leave
les
adc
cmpl
cmpl
loope
sub
pushf
jmp
aad
mov
loop
jp
sub
adc
inc
ja
push
enter
shlb
push
or
insl
lock
dec
lcall
sub
cld
push
loopne,pn
push
xor
hlt
rclb
aad
enter
add
cmc
pop
jae
dec
dec
push
fwait
divb
imul
dec
inc
fdivrs
pop
aad
lcall
add
ljmp
add
sti
rclb
sbb
std
xor
xor
mov
inc
lds
inc
mov
dec
jno
pop
jg
push
or
mov
mov
mov
xor
mov
add
jno
fwait
xchg
sub
or
cmp
xor
dec
adc
fdivrl
insb
arpl
imul
cmp
add
leave
sub
inc
mov
ret
pop
ret
mov
lock
js
bound
lods
mov
xchg
dec
ja
add
jl
gs
lea
and
les
xor
movsl
and
sbb
xchg
push
bound
ljmp
adc
jbe
jo
inc
xchg
cmp
add
sub
cmp
lds
xor
ret
mov
jnp
jmp
stos
and
mov
add
push
fidivl
js
lea
mov
mov
out
ds
mov
arpl
or
ljmp
icebp
cmp
pop
jb
inc
push
dec
dec
sub
outsb
in
sub
lods
mov
ljmp
xchg
dec
sbbl
push
or
and
mov
ret
push
fdivrl
js
movsb
add
ljmp
lds
in
aaa
rol
inc
subb
push
cs
ficomps
jbe
mov
stc
cmp
push
loop
fs
adc
data16
addl
std
push
loope
mov
push
ds
sub
jge
jne
in
stc
aas
cmp
das
sbb
lcall
jnp
out
sti
test
mov
xchg
in
sti
lods
cmp
jle
loop
mov
jle
mov
xor
mov
popa
adc
inc
xchg
push
sarb
shll
sbb
sub
in
inc
push
in
jae
mov
inc
int
lods
addl
das
shrb
lods
pop
lret
iret
dec
jns
rcll
shlb
js
dec
jb
aam
pushf
jo
add
jae
xor
fcomp
add
scas
pusha
and
cmp
popa
data16
bound
jo
mov
lods
mov
jnp
ret
dec
adc
pop
aas
addr16
popa
popf
mov
rdtsc
adc
cltd
test
mov
or
loope
cmova
insb
ss
and
cld
add
cmpsl
shr
mov
cld
call
flds
pop
cmp
sbb
cmpsb
mov
in
pop
lret
jecxz
fwait
xchg
pop
ffreep
pop
or
add
fwait
pop
jmp
ljmp
scas
addr16
sar
aam
out
mov
ds
inc
mov
mov
pop
cmpsb
push
push
add
jmp
mov
mov
push
pause
scas
je
into
sub
gs
dec
xchg
push
sahf
push
sbb
mov
fs
iret
add
xor
daa
sbb
mov
sahf
fwait
movb
repz
fimull
dec
test
sub
repnz
mov
shll
mov
daa
push
push
adc
mov
stos
adc
or
cli
or
cmp
lock
out
faddp
add
scas
inc
daa
pop
lds
insb
adcb
pop
cli
out
orb
dec
inc
nop
cmp
fld
fisubs
lcall
hlt
sub
add
clc
dec
sub
xchg
mov
pop
sub
add
inc
adc
push
shll
pop
rorb
push
and
jg
aas
loopne
ret
lea
inc
xor
int3
aaa
jno
mov
and
and
jb
and
loop
xchg
xor
adc
aad
push
mov
inc
std
sub
insb
xor
xchg
push
cmp
dec
mov
mov
lcall
test
dec
lods
mov
xor
cld
cmp
jg
rol
les
cmp
aad
std
icebp
xchg
aad
adc
cmpsl
dec
xchg
jns
pop
fstpt
jmp
cwtl
sbb
xor
sahf
popf
lcall
mov
ss
ljmp
mov
faddp
stc
sahf
fistpl
or
stc
cmpsb
out
in
leave
sbb
dec
sbb
fs
push
xchg
pusha
into
add
jecxz
inc
mov
push
mov
scas
adc
shl
sub
mov
xor
ret
les
inc
xlat
sbb
jb
cmp
ret
push
sti
adc
xor
lods
test
sub
pop
call
out
cmp
cmc
lods
je
cmp
scas
pushf
cmp
mov
aaa
fsubrs
xlat
mov
cmp
add
repnz
in
add
cmp
jmp
insl
pop
das
xchg
lret
fwait
out
cmpsl
adc
and
cmpsb
fabs
insb
lods
leave
mov
sbb
sbb
pop
dec
push
adc
and
fistl
add
sbb
mov
push
ret
jno
mov
and
sub
stos
out
nop
push
push
int
call
ficoml
cwtl
jae
sti
sbb
pop
cmp
outsb
xchg
sub
ss
stos
scas
add
scas
push
je
stos
fs
inc
mov
or
xor
cld
add
mov
sub
xchg
stos
into
int
dec
dec
bound
aad
shr
aad
dec
mov
js
movsl
loope
xor
divb
call
dec
incb
stos
add
cmc
sbb
xchg
xchg
jecxz
add
shll
scas
dec
inc
mov
inc
aam
es
aas
stos
jne
xorb
or
inc
sub
cli
outsl
jle
movsl
ds
sbb
stc
and
push
mov
stos
xchg
adc
xchg
mov
fisubrl
adcb
mov
aas
inc
xchg
shll
or
jbe
arpl
ret
in
pop
or
shll
xchg
imul
stos
aad
std
sub
sub
pop
sub
pop
aas
repnz
push
popf
cmpl
mov
mov
jmp
js
cld
iret
mov
inc
jb
or
xchg
xor
mov
icebp
push
fadd
mov
addr16
push
and
dec
xor
sub
mov
xorl
cmc
jle
push
push
sti
xor
dec
or
fistl
inc
rcrb
and
js
rolb
dec
pop
hlt
mov
arpl
jne
push
lret
mov
xchg
add
xlat
jnp
iret
popa
jo
add
dec
ret
call
movsb
mov
sub
push
fimuls
xchg
and
sub
int
jo
mov
jb
xor
jg
pusha
aas
dec
xchg
jae
inc
arpl
xchg
dec
jmp
inc
jmp
cld
inc
dec
les
ret
adc
mov
clc
rcr
iret
orb
ja
add
aas
jp
cltd
push
cmp
xor
and
jg
test
inc
jae
lahf
dec
adc
and
fldenv
fildll
ds
adc
and
aam
int3
mov
sub
mov
repz
ret
mov
cmp
mov
movsl
movsl
test
test
lea
leave
sbb
mov
mov
sti
int
dec
pop
gs
jno
push
push
int3
or
addr16
lods
das
mov
xchg
or
shrb
dec
push
popa
outsb
cmc
jg
scas
cmp
adc
rep
aaa
stos
and
ds
cld
stos
xor
pop
daa
mov
in
pop
ret
ret
sub
ret
lret
rcrb
shl
pop
mov
adc
or
jb
movsb
leave
arpl
mov
pop
out
add
incb
jnp
mov
dec
dec
mov
iret
xor
ret
add
and
bound
inc
xchg
loop
or
icebp
mov
xchg
sbb
jne
pushf
scas
subl
cwtl
xor
mov
cmp
and
cmpsl
xchg
mov
mov
or
mov
stos
pop
xchg
mov
in
sbbb
and
shlb
or
fiaddl
aaa
out
in
cmp
xor
dec
pop
cmp
shll
jl
lahf
cli
test
push
imul
mov
adc
faddl
out
js
cmp
sbb
dec
pop
jb
mov
mov
pusha
jl
mov
imul
nop
jae
mov
repz
pop
push
pusha
popf
xor
cmc
mov
or
pop
dec
and
xchg
icebp
mov
add
gs
dec
lret
das
dec
outsb
cmpsl
sbb
push
or
or
aad
sub
repnz
sarb
call
mov
out
push
mov
jno
or
sub
imul
roll
sti
and
mov
mov
and
jecxz
les
scas
fwait
jbe
lea
pop
clc
sub
fsubp
rorb
pusha
movsl
loop
mov
sbb
insl
cs
and
or
aaa
pop
les
and
mov
add
lcall
pushf
xor
xorb
outsb
out
aad
jge
fidivs
andl
xor
loop
cmpsb
xor
push
push
int3
hlt
mov
xor
mov
xchg
test
or
dec
push
in
mov
pop
cmpsb
push
addr16
cld
inc
leave
ljmp
test
xor
mov
mov
inc
call
decb
ds
pop
rcrl
bound
jbe
jns
lock
std
add
push
sub
cmp
stc
or
pop
push
sub
mov
sub
stc
sbb
mov
jno
xchg
xchg
and
pop
mov
pop
sbb
clc
gs
mov
nop
or
negb
fistpl
inc
xor
in
pop
addr16
dec
repnz
in
pop
inc
xchg
pop
iret
dec
lods
mov
scas
add
pop
add
aaa
push
fsubs
cmp
xor
cmp
pop
adc
or
or
paddusw
sub
xchg
lea
mov
in
cmp
adc
push
mov
sub
js
add
orl
dec
ja
sbb
cs
or
cmp
shll
data16
push
mov
cmp
rcl
sbb
mov
dec
outsl
enter
add
jne
cmpsl
add
mov
or
add
pop
shlb
xor
cmp
or
popf
or
mov
shl
inc
aad
inc
loop
mov
pop
insb
imul
mov
mov
pop
std
push
and
or
add
push
xor
dec
lahf
pop
mov
add
test
shlb
mov
fisubs
add
into
in
cmpsl
jge
stos
add
cmpsl
or
mov
sbb
arpl
fisubs
dec
push
xor
cmp
shll
inc
jae
sub
mov
sub
int3
sahf
and
push
push
addb
push
lret
pop
loope
scas
mov
inc
je
push
mov
jno
neg
and
shll
jg
mov
xor
scas
jno
or
outsl
xchg
sbb
repz
push
addr16
aad
insl
xchg
mov
std
testb
fwait
add
push
cwtl
lahf
mov
and
xor
jne
sub
jbe
es
or
pop
ret
add
mov
push
movsl
pop
movntq
or
mov
cmpsb
push
icebp
adc
test
cmc
sbb
pop
int
push
inc
in
and
sub
outsb
cld
fnstsw
je
pop
mov
jnp
dec
test
iret
popa
fs
xchg
hlt
dec
sub
mov
push
xchg
xor
in
push
lahf
dec
jp
or
push
sarb
push
push
mov
sbb
mov
mov
insb
fisubl
inc
xchg
in
and
outsl
sub
mov
test
xchg
xchg
xchg
mov
cmp
jo
mov
fidivrl
in
outsb
mov
jge
jge
scas
xchg
aas
insb
mov
and
push
in
out
push
notb
mov
mov
jb
mov
daa
cmc
push
cltd
lds
in
sbb
sub
incb
xchg
das
mov
hlt
imul
mov
xchg
cld
cmpsb
imul
mov
std
in
repz
push
pop
cmp
mov
psrlq
push
mov
loope
mov
and
xor
pop
or
push
mov
mov
jmp
filds
jecxz
ja
cmp
mov
mov
fs
hlt
pop
cli
lods
leave
xchg
or
jbe
jns
les
stos
addl
adc
cmpsb
or
pop
ficoml
enter
popf
push
outsb
or
stos
push
cli
loopne
sbb
and
xlat
or
mov
jnp
push
pop
fdivl
out
out
je
xchg
sarl
es
neg
or
int3
push
adc
jo
add
mov
add
in
inc
scas
cltd
cmp
decb
jno
push
jmp
enter
pop
je
push
push
fdivrs
cmp
cmc
sub
push
repz
mov
inc
jl
pop
sbb
add
push
or
mov
insl
jb
in
jo
lock
rcr
test
pop
push
mov
cmp
test
enter
lods
repz
vcmpps
jae
cmc
clc
roll
mov
out
jne
mov
jle
sub
lret
insb
sbb
mov
mov
push
out
or
out
cs
jns
cmp
repnz
xlat
sub
cmpsb
pop
push
pusha
dec
enter
push
ficoms
xor
scas
mov
push
mov
fldenv
jo
addl
pop
fcomp
push
popa
cs
dec
inc
inc
add
xchg
push
lods
push
cmpsl
inc
mov
mov
lods
jmp
insb
jg
std
test
cwtl
lods
repz
stc
dec
adcl
shrb
xlat
xor
inc
fidivrl
xchg
and
jns
inc
add
aas
and
test
ret
mov
sbb
and
xchg
mov
ljmp
stos
divb
and
inc
mov
movsl
les
sub
arpl
roll
pop
mov
xchg
sub
jmp
jbe
xor
jb
xchg
iret
in
xchg
mov
cwtl
nop
clc
mov
dec
adc
pop
cmp
xorb
or
stc
mov
pop
or
jne
and
inc
in
scas
inc
dec
mov
cmp
rcrl
mov
jmp
popa
mov
loopne
adc
and
mov
fildl
idivb
rcl
fs
fldl2e
pop
int3
loop
add
mov
test
rclb
adc
jo
mov
out
fsts
movsl
or
push
jns
outsl
inc
std
sub
insl
push
xor
add
and
sahf
outsl
mov
xor
mov
xchg
mov
cmp
rcrb
ja
pop
mov
repz
sbb
sub
out
mov
sub
jp
iret
inc
mov
mov
jle
sbb
pop
fs
addr16
jmp
xor
inc
pop
cwtl
cmpsl
and
mov
inc
xor
mov
dec
insl
mov
cmp
jnp
les
roll
out
xchg
mov
sub
dec
and
stos
cmpsl
pop
int3
cmpb
pop
jo
movsl
fdiv
jge
inc
scas
cmp
push
mov
fldl
and
iret
mov
mov
dec
lahf
xchg
push
or
mov
int
popf
inc
push
sub
adc
lahf
jae
sub
pop
push
or
jecxz
js
inc
push
pop
and
fnsave
dec
push
inc
lock
mov
xchg
or
int
addl
call
into
xor
push
dec
sub
lods
stc
lret
jne
rcrb
mov
dec
mov
pop
mov
and
ss
xchg
sub
dec
inc
test
leave
pushf
repz
cwtl
pop
loopne
mov
lds
mov
out
hlt
test
in
pusha
movsb
mov
not
adc
sbb
orb
leave
push
pop
xchg
jge
frstor
sahf
and
cmp
mov
mov
cmp
mov
push
pop
sbb
xchg
rol
dec
ret
jno
push
in
cld
xchg
mov
push
adc
push
xchg
insl
notb
adc
aaa
jnp
es
inc
cltd
adc
lret
aaa
cmc
lahf
pop
sub
add
pop
dec
fimull
imul
mov
arpl
repz
popa
out
push
xor
jg
ror
adc
xor
cli
sti
stc
cmp
mov
xchg
xchg
mov
pop
pop
dec
addr16
pop
cmp
xor
jo
lret
mov
notb
push
add
loope
stos
and
movsw
aaa
addl
call
shrb
push
jmp
sbb
loope
mov
jl
insb
push
cli
push
adc
rcl
ret
imul
xchg
aaa
into
adc
pop
sbb
jl
iret
xlat
decl
sahf
xchg
imul
dec
sahf
cmp
cmc
and
jmp
outsb
cmpsl
test
inc
sbb
iret
mov
outsl
into
popf
xlat
jbe
xorb
cmpsb
jle
out
or
into
and
clc
pop
mov
movsl
sub
jbe
lds
mov
std
js
stos
xor
fnsave
mov
in
xchg
enter
mov
in
div
addb
adc
les
stos
mov
adc
imul
stc
cli
sbb
decb
int3
mov
push
cwtl
leave
out
mov
cmp
pop
int3
mov
adc
andl
daa
push
aad
sub
insl
into
fistps
add
fnstenv
lret
pop
jmp
in
sub
or
ret
or
fidivrl
lods
ljmp
mov
jae
dec
xchg
leave
sti
push
jmp
xor
ja
aad
ror
jecxz
into
or
push
xchg
cltd
pop
xchg
xchg
test
mov
test
mov
mov
imul
mov
jecxz
repnz
js
dec
fwait
ljmp
dec
sbb
shll
push
loopne
xor
iret
add
inc
fs
je
add
enter
cltd
repnz
xor
fwait
inc
dec
mov
cs
aad
or
fwait
ret
sub
lods
sbb
sub
ret
jge
stc
xchg
imulb
mov
fistps
push
movsl
test
inc
pop
lock
cmp
and
les
mov
lods
enter
nop
test
dec
por
jl
xchg
sub
mov
jl
stc
lcall
cmp
out
or
popf
mov
movsl
mov
jae
cmp
outsl
mov
imul
adc
in
add
adc
insb
pop
xor
insl
mov
mov
xor
lahf
aas
mov
xchg
mulb
xor
punpckhdq
mov
out
hlt
ja
andb
movsb
sbb
into
jno
sbb
psubusb
rorl
and
xchg
jns
mov
aaa
jl
fiaddl
sub
pop
fwait
push
mov
lret
insb
in
int
daa
mov
dec
movsb
cmp
cltd
daa
or
push
xchg
das
aam
sbb
or
popf
dec
xlat
in
jnp
jne
das
sarl
xchg
fidivrs
add
sbb
or
loope
loopne
push
pop
inc
push
add
dec
stc
dec
jnp
pop
mov
movsb
push
mov
push
jne
mov
ret
ret
jp
add
dec
lcall
mov
lods
ret
push
xor
push
push
icebp
fidivrs
loope
xchg
push
mov
stos
and
mov
cmpsb
jl
jno
sbb
clts
aam
orb
push
es
add
jp
lahf
stos
or
mov
cli
lods
rolb
frstor
mov
je
dec
and
add
or
sbb
int
cmp
and
sub
xor
fwait
outsb
repnz
push
scas
les
mov
dec
stc
loopne
pushf
adc
mov
add
mov
and
mov
pushf
lret
dec
dec
xchg
jno
bound
xchg
mov
pop
sbbl
jmp
imul
dec
push
data16
shr
push
out
cmp
fwait
gs
xlat
fisubl
cmp
pop
out
mov
js
jle
adc
add
xorb
dec
dec
daa
mov
jno
insl
stos
iret
lock
inc
and
or
jg
add
ret
lock
pop
push
cwtl
push
cmp
push
cs
test
push
dec
aad
xchg
adc
iret
sbb
lea
roll
mov
pop
addr16
insl
push
jge
cmp
xchg
adc
lock
mov
mov
outsl
imul
stos
adc
sub
arpl
sub
movsl
and
cmp
add
mov
sahf
push
adc
dec
inc
in
pusha
stc
or
xlat
int3
imul
jmp
jmp
cld
pop
repz
xor
je
stos
daa
cmp
loop
clc
mov
pop
aad
pop
imul
add
jg
jnp
mov
arpl
out
lret
test
xor
incb
subb
mov
pop
les
fstps
mov
cmp
std
pop
movsb
adc
lods
test
add
arpl
sub
ror
lods
das
or
inc
xor
stos
call
leave
fstl
sbb
and
frstor
jb
add
stos
call
sub
mov
into
fwait
cld
dec
or
xor
xor
mov
in
adc
add
pushf
mov
test
pop
pusha
dec
sbb
xchg
mov
repnz
shrb
push
out
jmp
cmpb
mov
pop
aam
mov
cwtl
sub
and
or
test
add
cmp
cmp
enter
adc
cmpsb
push
inc
push
jae
mov
dec
aas
mov
aam
push
lods
pop
jmp
lods
sbb
insl
dec
ss
cs
pop
aas
fidivs
push
cmp
mov
divb
jg
sub
cli
sahf
mov
lret
xchg
outsb
jne
inc
mov
int3
popf
psrlq
mov
xlat
lcall
push
insb
push
loope
adc
mov
outsl
push
fldenv
jo
cmpsl
xchg
mov
daa
mov
out
loop
pop
cmp
xor
js
jmp
push
movsb
inc
xchg
xorl
pop
leave
pop
lcall
mov
mov
sub
dec
inc
xlat
loopne
loop
insl
pusha
lods
push
cmc
cltd
push
das
imul
fbstp
pop
cmpsb
imul
mov
xor
inc
lea
std
or
xchg
adcb
dec
inc
gs
dec
xor
and
lret
movsl
rcll
push
dec
flds
icebp
out
push
inc
repz
stos
jo
lret
in
xlat
imul
cld
mov
sub
pop
push
loope
in
scas
mov
ret
jp
xchg
mov
xchg
sarl
sahf
addl
xchg
adc
dec
push
cmp
or
jne
add
or
dec
daa
inc
test
arpl
frstor
cli
and
xchg
push
ljmp
add
xlat
or
sub
sub
std
pop
rclb
xlat
mov
add
xchg
xchg
push
fisubrl
dec
inc
mov
push
shlb
outsb
loope
das
jne
sahf
fdivr
jns
push
test
add
outsl
pop
adc
js
mov
adc
cmp
out
in
movsl
mov
push
nop
push
sub
dec
lahf
add
je
cwtl
insl
inc
sub
je
mov
jne
dec
out
inc
out
mov
sbb
cs
dec
adc
add
jb
lcall
mov
mov
je
xor
in
aam
fnstsw
movsl
js
jge
rclb
shlb
xchg
cltd
cwtl
and
pop
pusha
stos
ljmp
and
mov
sbb
adc
stos
mov
sub
rol
loope
stos
pop
scas
mov
unpcklps
push
loop
jo
adc
mov
pop
inc
xchg
pusha
jne
jle
dec
sub
adc
ds
jmp
scas
xor
rolb
and
push
stos
sub
pop
jmp
jb
adc
pop
data16
pop
mov
fdivrl
leave
rcll
xchg
movsb
lcall
leave
aaa
pusha
mov
jle
lret
sbb
mov
mov
jl
hlt
lcall
int3
das
lea
stc
scas
or
pushf
jmp
mov
sbb
dec
or
and
jns
add
testb
fdivp
mov
lret
push
pop
popa
es
cmp
push
jle
lods
in
js
aas
shlb
mov
dec
dec
les
inc
rolb
xchg
outsb
pop
repz
push
jmp
jp
shrl
icebp
hlt
lods
js
or
loop
stos
pop
ja
cmpsb
mov
pop
and
fsub
jo
add
das
clc
movsl
inc
lods
in
ret
je
mov
jbe
jmp
incb
sarl
inc
in
lds
adc
inc
clc
clc
pop
mov
fwait
lcall
sbb
sbb
les
mov
data16
dec
cmp
pop
lret
lods
or
push
inc
movsl
jae
mov
or
int3
and
mov
sub
sub
mov
fistpll
dec
ss
inc
scas
cmp
mov
pusha
push
cwtl
mov
decb
inc
mov
addb
fwait
jg
repz
data16
loop
popa
add
dec
sub
add
xchg
inc
add
inc
loope
lds
push
mov
or
xor
pop
add
push
bound
mov
jmp
imul
push
mov
dec
into
sbb
ds
int
add
scas
loop
scas
stos
clc
push
clc
dec
lods
mov
hlt
xor
jne
and
fidivs
insl
shl
les
incl
add
js
sahf
addr16
mov
pusha
cmpsb
outsl
pop
jg
xor
sbb
pop
xor
mov
xchg
dec
mov
dec
xor
into
dec
mov
sbb
daa
adc
sahf
fucomi
cmp
xor
inc
push
push
ss
test
cmp
xor
aad
adc
dec
in
lea
fimuls
test
and
inc
loope
aaa
push
fbstp
cmovnp
cmpsl
adc
pop
sbb
stos
and
and
xor
mov
mov
fmul
lret
fwait
pop
jg
push
cmp
cmp
jno
adc
push
insl
cltd
into
cmp
dec
sub
xchg
adc
inc
dec
loope
mov
cmp
and
xchg
pusha
jp
in
sub
sarb
jle
mov
mov
nop
and
ret
cmp
imull
pop
inc
jle
lods
cmp
sub
cli
cmp
test
into
mov
cmp
jmp
xor
lea
das
fmull
mov
jb
xchg
lahf
adc
cmpsb
xor
outsb
sub
aad
mov
push
stc
imul
out
mov
or
xor
aad
out
cmpsb
mov
mov
sbb
push
cmpsl
inc
mov
jbe
cltd
push
push
movsb
mov
int
les
out
cmp
add
insb
push
add
jne
in
pop
stc
mov
push
test
imul
xor
adc
int3
mov
mov
aas
fildll
inc
test
inc
test
pop
les
xchg
cmc
outsl
loopne
in
fld1
xor
lahf
add
dec
inc
push
mov
xor
cli
pusha
lret
xchg
imul
push
adc
jmp
push
outsl
cmpsb
das
std
push
inc
cmp
rclb
dec
and
fwait
hlt
adc
fmull
mov
adc
xchg
dec
mov
adc
cmp
mov
inc
xchg
adc
sub
sub
arpl
add
push
fwait
inc
pop
mov
loop
bound
xchg
leave
mov
jnp
cmp
sbb
pop
pop
pop
int3
or
inc
imul
mov
jge
addb
jb
mov
sbb
adc
and
or
mov
pop
sbb
mov
repz
in
test
arpl
xchg
das
cmp
mov
out
mov
pusha
jecxz
cmp
xlat
cmp
inc
rorb
cmpsb
daa
mov
add
popa
arpl
mov
mov
sub
orb
dec
pusha
les
sbb
mov
jl
dec
mov
rclb
inc
jle
adc
imul
jns
or
adc
pop
pusha
rclb
dec
dec
push
nop
imul
dec
xchg
inc
inc
sub
push
pop
pusha
cs
in
cmpsl
loopne
fucomp
clc
lds
enter
imul
mov
gs
mov
movsl
add
addr16
sbb
bound
lret
or
jecxz
loope
cld
test
divl
loop
jecxz
and
jmp
jl,pn
sub
fst
imul
mov
loope
jle
xor
shll
bound
push
dec
cs
inc
push
rol
out
scas
xchg
xchg
sbb
jecxz
bswap
out
out
jecxz
sub
dec
sub
repz
mov
leave
add
cmp
mov
mov
adc
lcall
pop
imul
push
xchg
test
and
inc
cwtl
daa
lods
add
ror
dec
cltd
mov
cld
scas
jae
pop
daa
and
outsb
cmp
int3
push
mov
add
enter
scas
roll
rol
and
imul
je
sbbl
pusha
mov
subl
mov
xchg
std
xchg
and
addr16
inc
aaa
or
stos
std
xchg
mov
add
cmc
inc
outsl
sub
add
jo
jle
xor
adc
loope
outsb
xchg
lods
add
sub
push
mov
add
aad
cli
sub
jo
hlt
fmuls
mov
repnz
push
add
imul
sbb
mov
sbb
add
xchg
btc
mov
iret
out
xor
cmc
mov
adcl
shll
sbb
dec
int3
outsb
dec
fiaddl
cmpsl
outsb
lahf
sbb
push
add
inc
or
push
in
repz
mov
and
ret
add
push
mov
sub
stos
mov
mov
test
push
lods
ja
xor
and
cs
mov
and
movsb
mov
push
dec
pop
inc
test
pop
scas
pushf
xchg
xor
ljmp
jmp
fcoml
pop
decl
imul
cmp
les
popa
jle
rclb
int3
jno
jecxz
fcoml
xor
cwtl
jecxz
js
aas
adc
test
leave
xor
fadds
mov
mov
mov
lret
push
shll
inc
or
orb
xor
sub
mov
inc
cmp
repz
js
repz
mov
mov
pop
scas
gs
sub
into
aad
cltd
push
cmc
mov
insl
sbb
arpl
hlt
push
pop
inc
jecxz
cli
orb
dec
cmp
pushf
or
cmp
cltd
inc
pop
sbb
jl
gs
inc
mov
mov
daa
inc
jae
ret
push
pop
in
mov
xchg
jno
rcrb
and
in
xchg
push
or
aas
push
cwtl
popa
ret
movsb
js
mov
jno
pop
mov
sub
cld
shl
scas
cmp
rorb
repz
outsb
movsl
xchg
call
int
push
enter
mov
lret
cwtl
mov
call
movsl
aam
insb
jb
fistpll
push
adc
icebp
pop
jne
scas
movsb
push
sti
xchg
sbb
xchg
hlt
xchg
in
sbb
inc
inc
fcmove
lahf
dec
xchg
mov
jle
hlt
push
out
fiadds
test
and
and
jnp
inc
or
cmp
inc
in
lcall
fidivrl
mov
push
notb
sbb
xchg
xor
cltd
ja
mov
pusha
loopne
lret
into
sbb
xor
leave
mov
and
shll
lods
fsubs
testl
test
dec
movsl
dec
mov
cmpsl
jo
in
jae
outsl
add
jle
stos
test
cs
jle
js
mov
orb
filds
test
rep
and
mov
cld
jns
adc
push
inc
push
adc
add
adc
pop
mov
lods
jns
jae
pop
adc
dec
movsl
scas
aad
push
outsb
imul
push
sbb
or
adc
push
or
inc
push
sbb
cmpsb
xor
fwait
jmp
aam
dec
adc
adc
lcall
add
clc
ja
movsl
inc
jo
out
lcall
push
or
push
inc
in
stos
jo
jnp
leave
and
mov
cmp
mov
cmpsl
or
inc
inc
xor
frstor
insl
inc
jg
aad
pop
sub
clc
fmulp
and
and
jbe
mov
xchg
mov
xchg
test
pop
jl
dec
push
rorb
dec
fildll
pop
xchg
xlat
mov
mov
cmpsl
mov
push
cltd
popf
scas
sbb
sub
scas
adc
mov
push
adc
mov
jle
jg
cmp
xchg
imul
lock
inc
or
jge
push
pop
fidivs
bound
cmpsb
das
or
dec
xchg
inc
add
dec
bound
into
lds
mov
sbb
ret
push
cld
pop
imul
in
add
aam
clc
scas
ror
mov
fnstcw
mov
pop
addr16
cmp
shlb
pop
pandn
outsl
aaa
mov
lret
fmull
shrb
sbb
xchg
adc
inc
cmp
and
sbb
int3
and
mov
jbe
xor
sub
push
push
dec
and
pop
jb
arpl
test
jbe
adc
les
add
bound
adc
out
mov
push
or
push
xor
adc
xchg
pop
push
test
mov
push
jno
jmp
pop
int3
in
pop
mov
mov
popw
xchg
lods
push
fiadds
lcall
ret
mov
or
movsl
mull
cmp
sub
sub
cmp
pop
inc
mov
jmp
fnstcw
add
pop
mov
push
fadds
inc
fwait
pop
shll
out
cmpsb
inc
jmp
ja
add
mov
jno
fwait
mov
xchg
pop
sub
pop
mov
xlat
shrl
xor
fbstp
stc
push
imul
sbb
lea
shr
scas
insl
pop
xor
sahf
stos
out
cmp
push
add
mov
loopne
stos
adc
mov
fsts
outsb
sub
push
pushf
xchg
in
mov
cli
lods
inc
jmp
mov
adc
pushf
in
and
outsb
jae
incb
repz
out
pop
sub
jbe
jns
sti
mov
jbe
ret
jb
rolb
shrl
mov
enter
pop
sub
jne
cmp
xchg
aam
hlt
mov
int
mov
es
sarl
stc
push
pop
sbb
xor
xorl
je
pop
int
nop
data16
add
mov
in
stos
sbb
jmp
xor
jmp
add
add
pusha
add
push
lcall
popa
mov
xchg
and
fdivl
push
shrb
aam
data16
je
shrb
cmpsb
adc
gs
xchg
xor
and
cmp
jne
jbe
push
je,pn
insl
stc
mov
pop
notb
popf
or
dec
test
sarb
sbb
test
out
idivb
ljmp
cmp
data16
outsb
out
pop
inc
lea
push
cmp
push
or
mov
sbb
add
dec
xchg
pop
add
movsb
cld
fwait
fwait
jb
cmp
and
cmp
fwait
mov
or
inc
fs
outsb
and
add
fwait
leave
mov
dec
dec
xchg
or
sub
test
fstps
into
jge
push
pop
inc
mov
mov
sbb
pop
sbb
sub
pop
mov
mov
adc
xor
push
bound
push
adc
push
and
jp
dec
les
sub
aad
mov
fimull
adc
mov
mov
mov
push
xchg
mov
adc
sub
push
ret
xor
ss
fistl
and
jge
imul
jno
push
jnp
mov
adc
push
out
inc
test
sbb
scas
loopne
mov
sahf
push
dec
cli
jge
dec
or
lock
cld
ret
movsb
mov
mov
jmp
hlt
pop
jne
stos
mov
mov
cmp
mov
lahf
mov
dec
xchg
stos
sub
into
rorl
mov
push
cmpsl
popf
mov
into
jbe
shll
cmpl
sbb
bts
sbb
loopne
pop
repnz
repnz
lea
fwait
stc
ljmp
lods
test
clc
adc
dec
sub
imul
mov
mov
mov
lock
inc
fsubrl
pop
out
inc
xchg
je
push
add
lahf
xchg
scas
mov
imul
sub
adc
xor
icebp
jg
and
push
test
mov
inc
and
jnp
jmp
lret
cmp
lods
adc
out
adc
fsubrs
jge
dec
pop
add
mull
xchg
jge
fs
inc
xor
stos
adc
xchg
adc
mov
fwait
cwtl
test
sub
or
lock
cld
in
xlat
in
icebp
pusha
mov
rcll
sbb
push
std
inc
dec
or
insb
jecxz
sahf
inc
sarb
shlb
push
mov
pop
and
push
aad
int
mov
dec
cli
test
ds
xchg
or
jge
sarl
int3
add
push
pop
add
jb
int3
sub
stos
ss
mov
cmp
jl
xchg
mov
les
xor
rcrl
clc
pop
sahf
cmc
sub
push
insl
xor
pop
sub
inc
fs
out
jno
cmp
inc
mov
push
xchg
das
or
mov
loope
pop
xchg
dec
int
test
or
dec
cvtpi2ps
sub
stos
adc
adc
jp
adcl
fists
mov
sub
mov
pop
fcmove
sarl
sbb
in
pop
in
in
fdivl
fsubrl
mov
sub
push
cmp
sub
imul
aas
rorl
int3
jecxz
mov
jae
add
xchg
cmp
movsl
mov
or
pop
loope
dec
maskmovq
jg
int
adc
aad
inc
pop
stc
das
aas
popf
add
sbbl
mov
mov
cli
sbb
push
or
dec
sbb
push
lret
les
push
mov
mov
sub
push
push
or
jo
dec
int3
mov
fstl
xor
lahf
xchg
xchg
cmpsl
jecxz
or
or
push
and
pusha
mov
sub
leave
or
inc
divl
sbbb
js
aad
mov
cmp
fidivrs
ljmp
jnp
not
mov
dec
pop
cmc
fisubs
mov
fistl
aaa
mov
popf
movsl
dec
or
dec
jmp
mov
sub
jle
mov
ret
daa
xor
enter
aam
adc
fistpll
bswap
dec
dec
and
or
dec
sarb
jae
rcrl
cli
out
sbb
mov
mov
add
jl
mov
inc
xchg
jecxz
enter
out
insb
dec
mov
jmp
repz
sbb
lock
pop
xchg
insb
mov
xchg
cmp
jno
fmuls
xchg
adc
push
mov
mov
pop
and
mov
aaa
cmp
cld
or
das
push
mov
pusha
mov
sbb
call
push
xchg
or
pop
dec
pop
cmpb
dec
orl
inc
xor
fdivl
mov
aaa
dec
mov
push
sahf
cwtl
lods
mov
repnz
inc
cmpsl
outsb
repnz
mov
sub
sahf
sbb
xchg
stc
mov
popf
cwtl
out
je
push
fisubl
jbe
les
mov
gs
and
mov
aaa
adc
out
adc
xchg
mov
cltd
mov
out
mov
and
pop
test
aaa
mov
jb
fcmovu
cwtl
cmc
mov
ds
jecxz
cmpsb
xor
jae
stc
jl
out
dec
sub
shlb
or
gs
pop
cmp
mov
sbb
shrb
pushf
pop
out
inc
cld
rcr
inc
push
jge
mov
loope
push
nop
fucomip
fstps
push
jno
popa
add
xor
stos
popf
mov
in
dec
cmp
cs
jp
push
mov
adc
pop
out
jmp
cld
das
push
mov
sub
or
movsb
push
mov
push
int
xor
aaa
pop
add
in
jno
jecxz
push
jge
jne
adc
call
ljmp
les
xchg
fisttpll
xor
mov
jle
stc
and
fwait
shr
and
or
push
cli
rcrb
int
std
fldl
cmp
aad
adc
add
nop
mov
jae
arpl
jg
pop
xor
test
xchg
adc
pop
mov
mov
xor
fisubrl
daa
shll
mov
and
lea
scas
pop
pop
dec
ret
std
shr
loopne
pop
fnstcw
stos
inc
lahf
xor
inc
inc
gs
in
movsl
xchg
adc
push
std
cmp
inc
and
jns
sbb
mov
mov
xor
fdivs
cltd
dec
test
fcmovnu
out
mov
xchg
ss
outsb
aaa
pusha
scas
xchg
sbb
jo
pop
pop
mov
pop
xchg
push
or
sub
and
mov
jmp
mov
stos
js
push
mov
cmpsl
clc
xchg
xor
out
mov
addl
xchg
leave
std
or
incb
jl
mov
insl
scas
xchg
jae
adc
and
adc
adc
cmp
dec
lods
fidivrs
ljmp
push
xlat
out
push
xchg
add
dec
int
mov
test
mov
in
movsl
cltd
fidivrl
and
fcomps
dec
addr16
aad
inc
jne
out
xchg
pop
jg
stos
jg
and
fldl
movsl
and
aam
daa
into
sahf
nop
xchg
inc
loopne
inc
and
xor
and
js
out
out
loopne
gs
sub
sahf
ljmp
xchg
testb
icebp
fstpt
adc
out
xchg
push
mov
adc
jne,pn
push
dec
dec
jns
inc
mov
and
mov
shrb
xchg
hlt
insl
and
or
in
mov
xchg
js
jnp
lret
lcall
mov
test
inc
jmp
mov
dec
nop
fbld
mov
bound
sub
cltd
mov
leave
or
imul
inc
push
inc
sbb
or
lds
call
sbb
dec
ljmp
pop
push
ds
xor
xor
imull
dec
ljmp
push
mov
jne
sbb
xchg
xor
stos
movsb
int
mov
inc
lea
roll
adc
jbe
or
movsb
outsl
shl
repnz
cmp
push
repnz
clc
lahf
mov
adc
adc
leave
lods
andl
cmp
inc
sbbb
jp
push
icebp
sub
cld
mov
xor
push
cmp
fs
and
add
jbe
pop
mov
mov
xchg
inc
insb
shrl
xor
arpl
repz
pop
inc
testl
inc
icebp
dec
sahf
std
aas
mov
out
adc
add
mov
add
mov
in
ljmp
dec
sub
sti
cmp
js
shll
or
lahf
scas
push
ds
mul
test
not
jle
icebp
mov
pop
cs
jp
xchg
xor
bound
mov
ja
inc
stos
out
dec
into
scas
push
mov
leave
insb
pop
mov
cmpsl
inc
mov
or
pop
or
ds
scas
dec
sub
hlt
imul
adc
mov
pop
cmpsl
sub
sub
daa
dec
push
pop
lahf
sti
sbb
leave
scas
mov
mov
inc
data16
leave
sbb
fwait
push
xor
cwtl
jnp
aas
lds
mov
push
lods
mov
icebp
xchg
cmpsb
jns
sub
test
repz
sub
andb
inc
push
les
dec
jecxz
pusha
fcoml
pop
out
pop
xor
pop
iret
mov
mov
mov
mov
negl
jmp
cmp
clc
setbe
mov
ret
imul
inc
add
mov
lods
jmp
pop
sbb
sbb
inc
dec
cwtl
scas
fimull
inc
ljmp
psllw
shrb
aad
rol
ret
push
cmpsl
adc
xlat
sbb
rorl
mov
mov
inc
cmp
lea
push
or
lock
leave
pop
sub
xchg
mov
mov
outsl
mov
sbb
imul
aam
and
mov
mov
push
dec
cli
sbb
push
mov
nop
arpl
fcmovb
cmpsl
or
fucomi
push
fnstcw
mov
mov
mov
sub
push
ds
push
jne
or
inc
xlat
cmp
mov
or
push
rorl
pop
cmpsb
repz
jecxz
out
adc
mov
mov
outsl
fmull
sti
push
fs
shlb
inc
std
adc
leave
inc
and
add
icebp
ror
inc
cmp
inc
or
or
mov
add
mov
dec
mov
fs
ljmp
fsts
mov
pop
js
cmp
cmpsb
sbb
inc
mov
shll
sbbb
adc
and
jbe
lcall
pop
movsb
shll
scas
nop
cmp
jp
pop
jbe
adc
stos
push
xor
and
push
bnd
outsb
xchg
icebp
cmp
ret
popf
out
mov
or
or
push
push
and
xchg
test
push
call
dec
inc
ficoml
inc
jp
cmpsl
filds
add
ret
add
cmpb
ficoms
push
test
adc
int
inc
test
icebp
cmp
repz
xor
cmp
or
lea
daa
cld
jno
clc
iret
pop
mov
adc
jno
xlat
pop
xor
dec
mov
pop
jmp
sub
jne
mov
repnz
or
sub
out
sub
jo
and
in
xorb
ss
inc
adc
sub
loopne
cltd
sub
xchg
xlat
sub
pusha
movsb
cmp
mov
cmp
push
ret
xor
mov
or
bound
icebp
or
aaa
out
dec
out
stc
mulb
push
test
sub
sub
cmp
sub
movsb
clc
xor
sub
jmp
sub
data16
fbld
jle
sub
add
mov
xchg
call
stos
and
push
pop
in
into
ret
add
in
stc
mov
lea
inc
xlat
lock
dec
aaa
ss
xchg
and
dec
popf
add
jnp
sbb
mov
cmp
idivb
and
aas
scas
or
lods
and
loope
imul
pop
arpl
fs
cmp
imul
aas
mov
fidivrs
mov
sub
xchg
jp
ljmp
cs
divb
fldl
add
add
bound
sahf
aam
cmc
lcall
imul
mov
or
nop
push
loop
add
add
out
push
xlat
ljmp
repz
pop
popa
jne
imul
pop
mov
xchg
pop
and
and
outsb
xor
add
lock
jnp
xor
cmp
push
int3
mov
dec
test
mov
push
data16
push
popf
incb
pop
stc
pop
xchg
inc
inc
xor
mulb
jb
or
les
add
add
xlat
cmpsb
xlat
mov
js
push
mov
add
sub
popf
mov
loop
sbbb
dec
fimuls
mov
mov
cmpsb
cmp
lock
movsb
push
mov
mov
xchg
popf
icebp
lods
negb
sbb
cld
jecxz
test
or
jnp
mov
jnp
mov
and
dec
stos
pop
jl
js
and
mov
loopne
cs
sbb
inc
add
dec
jno
fadds
cltd
and
aas
xchg
cmp
or
pop
div
pop
mov
sahf
idivb
ret
mov
int3
ds
mov
scas
add
jnp
fwait
cmp
jl
pop
mov
mov
nop
add
adc
sbb
dec
loope
mov
roll
fsubr
mov
xor
dec
lock
cli
and
xchg
sbb
inc
stc
test
dec
scas
cmp
push
sbb
push
mov
rep
add
xchg
and
mov
aad
out
mov
push
and
mov
ja
out
and
aad
cmpsb
pop
fmul
popa
les
lds
pop
cmpsl
pop
sub
mov
in
loopne
adc
jo
outsb
mov
dec
dec
arpl
lock
adc
repnz
inc
mov
jp
and
cmpsl
cmc
mov
or
out
push
fisubs
lret
arpl
xor
xchg
into
into
test
daa
ret
add
xlat
jne
and
jg
xchg
lea
jg
lods
pusha
mov
mov
mov
push
xor
mov
ret
daa
dec
ret
mov
or
enter
mov
outsl
in
inc
xchg
sub
mov
enter
lcall
test
mov
lahf
in
inc
mov
mov
out
jno
mov
ljmp
adc
inc
pusha
jne
ret
dec
mov
xor
cmp
mov
mov
add
in
sub
add
addl
xchg
dec
push
adc
das
repz
and
lret
imul
mulb
mov
dec
ror
pushl
fiadds
fldenv
dec
cmpsb
mov
cmp
xor
test
shl
jbe
push
jl
dec
lahf
rcr
loope
sub
sub
jno
push
shlb
pop
idiv
and
xor
sub
mov
mov
and
jle
arpl
or
xor
int3
add
cmp
sbb
pushf
jbe
push
mov
add
int
mov
and
push
sbb
push
inc
imul
xorb
mov
int3
xchg
lret
mov
insb
ds
daa
jbe
rolb
cmp
jno
aas
sbb
rcll
mov
add
js
inc
or
xor
add
sub
inc
ljmp
cltd
jnp
add
mov
cli
jbe
push
pop
jns
fistpl
adc
push
std
mov
sbb
jle
mov
pusha
in
mov
fstl
push
iret
mov
mov
push
sbb
lea
mov
repnz
mov
jnp
mov
dec
incl
ja
xor
sbb
dec
inc
sahf
pop
pop
cmc
out
adc
pusha
adc
and
sbb
das
in
push
sbb
cltd
jg
shrb
int3
inc
sbb
std
fldenv
mov
jg
repz
jne
cmpl
fxtract
push
jae
ss
mov
sbb
dec
cmp
js
js
in
pop
adc
and
jbe
cmpsb
xchg
or
push
rcll
cmpsl
mov
lahf
in
andb
popa
add
popa
sbb
xor
fsub
mov
sub
dec
hlt
jg
cmp
inc
add
les
xor
in
cmp
call
cltd
sahf
mov
in
mov
fsubrs
gs
lcall
xchg
jmp
jp
mov
inc
clc
adc
add
je
subl
inc
out
adc
and
mov
scas
dec
xchg
xchg
xchg
mov
ja
sub
or
js
sub
inc
call
aaa
mov
icebp
outsb
repz
adc
fdivr
stos
je
insb
popa
in
pushl
pop
loopne
fsubrl
adc
cmpsb
dec
test
filds
and
and
cs
stc
xchg
xlat
push
sahf
push
sbb
leave
test
aad
data16
add
xchg
lea
jno
and
fldl
stos
cwtl
lods
ds
nop
aaa
leave
xchg
xchg
mov
mov
push
loopne
push
cmp
jmp
aas
and
mov
aad
mov
gs
xchg
aas
rcrl
or
loopne
push
adc
xchg
and
ds
jmp
add
into
out
into
xchg
mov
xor
icebp
mov
cmpsl
push
test
pop
or
inc
sbb
push
xchg
icebp
daa
das
mov
adc
sahf
sbb
popl
mov
std
mov
add
loopne
mov
inc
jbe
or
cmp
pop
mov
out
xchg
out
fnstsw
push
xchg
leave
push
pop
jo
sbb
into
mov
lahf
in
es
pop
popf
jne
rcrl
addr16
sbb
gs
dec
xlat
arpl
adc
je
nop
xchg
in
or
cmp
push
cmp
and
jle
pop
mov
pop
int3
dec
fwait
js
call
addr16
out
bsf
jo
xchg
sub
leave
push
adc
test
mov
movsl
fsubrs
jecxz
pop
xor
adc
cmpb
std
adc
nop
mov
je
add
adc
aas
inc
xchg
adc
rcr
jp
jp
push
sbb
xlat
or
xchg
shl
je
or
add
mov
je
int
mov
hlt
xchg
jo
or
stos
cmpsb
inc
ljmp
das
dec
fs
jecxz
add
mov
adc
int3
pop
xorb
xor
push
xlat
aaa
xor
and
popf
enter
cmp
jae
fdivrl
nop
inc
pop
daa
lea
push
dec
stc
repnz
mov
pushf
add
jae
xchg
pop
divl
outsl
in
mov
out
or
movsb
sub
sbb
out
xlat
int3
mov
idivb
out
rcr
insl
js
xchg
scas
fidivs
les
in
dec
push
dec
lret
out
in
int3
mov
pop
cmpsb
add
lahf
call
pop
pop
arpl
daa
mov
mov
rol
jmp
adc
stos
outsb
ficoml
imul
adc
sub
jge
mov
or
in
jo
fwait
insl
sbb
push
push
push
nop
sbb
cmp
dec
and
dec
sub
mov
pop
insl
outsl
and
stos
push
stos
cmp
clc
xlat
pop
lret
mov
jecxz
mov
stc
or
dec
or
jo
mov
call
scas
ret
pop
push
insl
ja
inc
xor
sti
cmp
imul
xchg
inc
push
mov
int
or
sbb
sbb
inc
mov
and
leave
inc
push
xchg
movl
pop
add
xchg
xchg
add
loop
cmp
mull
or
mov
pop
mov
add
cld
lahf
pop
jmp
sahf
jb
fmul
pop
inc
cmp
testl
test
iret
pop
aam
scas
and
in
les
test
jo
out
push
or
mul
mov
loopne
shrb
xor
dec
popf
inc
lcall
dec
gs
and
je
clc
test
dec
cmp
aaa
mov
movsl
pusha
test
pop
push
add
nop
ja
add
pop
and
ds
push
movsl
fstpt
dec
pop
add
sub
lods
or
bound
enter
cmp
add
jmp
cmp
not
out
cmp
rclb
add
out
inc
adc
mov
ud2
pop
gs
lods
arpl
leave
mov
lcall
arpl
ljmp
das
ret
sub
dec
sarl
lods
imul
sbb
cmp
cli
mov
mov
jmp
movsb
sub
lret
nop
call
mov
xor
insb
xor
repnz
mov
push
pop
xchg
or
pop
xor
aam
icebp
insl
lods
addl
adc
fs
push
jle
outsl
loope
aam
push
je
orps
fdivrp
add
je
mov
mulb
jp
dec
sub
sbb
test
and
or
mov
xchg
cld
or
push
jmp
and
sub
jp
std
scas
lahf
pop
cltd
fisttpl
jg
or
into
jns
arpl
push
call
cmp
sarb
lret
push
mov
js
test
mov
dec
jbe
jnp
int3
in
and
add
aam
es
fistpll
fistpll
ja
leave
gs
dec
aaa
sub
push
cli
inc
test
ja
arpl
aam
int
mov
ret
add
mov
pop
xor
dec
lret
jns
daa
pop
ficompl
cld
inc
sbb
push
push
xor
loop
or
sub
pop
imul
rorb
arpl
imul
inc
stos
insl
cmp
lret
xor
dec
into
int3
int
jge
test
popa
addr16
punpckhdq
lret
in
icebp
ret
loopne
inc
jge
or
call
mov
cld
cs
cmp
lods
rolb
add
mov
push
adc
push
rclb
sub
mov
into
or
cmp
jno
loopne
lods
jno
xchg
sbb
mov
jg
pop
or
or
cmp
es
sarb
add
mov
mov
rorl
popf
int3
frndint
sti
lea
pop
sbb
loope
xor
sub
loop
or
dec
addb
mov
jno
ds
gs
fimull
ret
mov
int3
push
push
dec
mov
into
push
pushf
outsl
in
or
and
jl
orb
shr
aaa
push
sub
and
flds
stc
push
les
mov
lea
sbb
jo
clc
mov
add
cmp
out
inc
jg
jae
jno
cmp
jo
jb
in
in
and
jecxz
lret
jge
out
subb
in
jge
mov
mov
ret
dec
or
leave
xor
addr16
cmc
lret
icebp
sbb
das
arpl
ljmp
pop
push
ret
lods
cmp
pusha
jmp
rorl
les
add
mov
cmp
pop
mov
lods
inc
dec
out
lcall
stos
fisubrs
data16
sub
out
int3
adc
pop
push
divb
push
daa
add
sti
cmp
or
jmp
cmp
mov
clc
shr
jbe
add
nop
testb
outsb
aam
inc
std
cli
inc
dec
and
jmp
push
lods
int
dec
ret
in
aam
mov
xor
sarb
mov
mov
aas
bound
or
push
stos
stc
fists
or
jno
clc
xchg
stos
test
lock
pop
fmuls
fcmove
in
pop
mov
inc
rolb
sahf
jb
call
daa
das
cld
sub
lret
pop
adc
xor
inc
lods
mov
xchg
sbb
mov
mov
data16
cmp
out
pop
shlb
shrl
sub
cmpsb
pop
call
jle
cmp
ds
mov
pop
in
fsincos
aam
jp
enter
lcall
ficomps
add
addb
mov
out
ss
call
imul
jle
ljmp
add
xor
pop
out
ret
mov
xor
inc
fidivrl
xchg
loope
pop
hlt
jecxz
dec
adc
mov
mov
xor
fs
push
mov
addr16
xor
mov
push
xor
push
cs
lret
pop
add
sbb
push
jmp
mov
xchg
lret
fdivl
das
xor
jbe
repnz
jg
and
arpl
clc
sub
mov
ret
dec
fcoml
cwtl
int3
popf
push
adc
lods
les
jge
cmp
adc
shrb
iret
int
adc
arpl
jae
outsl
xchg
pop
jp
sub
popa
xor
mov
and
shr
or
mov
rorb
inc
dec
lods
mov
sbb
rcrl
stc
andl
loope
inc
pop
add
stc
xchg
test
outsb
inc
and
lock
lods
xchg
lret
inc
std
inc
ljmp
pop
mov
xchg
lret
mov
call
arpl
std
mov
push
mov
sub
jmp
jp
lods
pop
mov
jne
mov
leave
mov
push
and
mov
outsl
dec
sub
adc
mov
pop
xor
int3
aad
test
and
xchg
in
and
cmpsb
inc
mov
jg
sub
dec
loope
imul
mov
mov
jae
mov
dec
fldcw
pop
dec
test
add
xchg
sbb
inc
jle
cmpl
jmp
sbbb
adc
pop
adc
xor
arpl
mov
mov
rorb
popa
mov
xchg
test
sub
aad
leave
sub
daa
rorl
outsl
fs
inc
test
js
movsl
mov
movups
dec
or
or
mov
aam
sbb
shrw
push
pop
xlat
ds
sub
test
movb
xorl
dec
inc
mov
inc
push
mov
fdivl
mov
cmc
addr16
bound
sub
shrb
aad
js
adc
mov
shlb
shl
addr16
lods
push
mov
jmp
or
scas
into
or
or
xor
sahf
mov
popf
ret
cli
push
jle
xor
mov
aam
shlb
outsb
arpl
inc
fstpl
dec
test
orl
test
pop
andb
sbb
push
and
orl
and
inc
push
fstps
das
repz
mov
scas
mov
clc
xchg
push
inc
lret
xchg
jno
jnp
enter
iret
and
or
repz
pop
lods
xchg
es
std
fldt
push
stos
insl
and
xlat
lock
fldl
and
inc
jle
pop
xchg
xchg
aad
aas
mov
lahf
xchg
iret
sub
or
mov
inc
mov
mov
sub
js
call
ja
jecxz
adc
push
pop
outsl
repnz
fcompl
jg
sub
or
outsb
cwtl
es
inc
sbb
mov
or
add
inc
divb
adc
cltd
fsubs
ds
imul
stos
dec
mov
dec
push
mov
pusha
push
jb
sub
mov
sub
in
pop
stc
xor
pop
inc
pop
js
jmp
mov
cmc
arpl
aad
mov
movsb
cmp
xchg
push
fdivrs
sbb
mov
mov
outsl
sbbl
test
outsl
aam
pop
add
pop
xchg
hlt
mov
ja
ja
pop
pop
es
pop
xchg
or
inc
ss
test
mov
mov
mov
roll
xor
call
mov
add
xchg
das
xor
mov
mov
mov
mov
cmp
mov
dec
test
push
sub
push
xor
xchg
jne
mov
mov
xor
mov
sahf
jle
sub
pop
jo
sbb
pushf
adc
cmp
add
sbb
insl
iret
out
mov
mov
es
into
push
dec
ss
push
sbb
cwtl
aas
cmp
mov
mov
fcmovnu
test
cmp
adc
ds
mov
pop
dec
inc
ss
pop
lahf
je
inc
in
jno
es
and
add
stos
out
lock
repnz
fcom
inc
mov
js
push
cli
push
mov
adc
push
int
jne
int
pop
xor
xorb
aam
mov
test
xor
adc
hlt
cmpsl
stos
icebp
gs
push
and
out
pop
scas
jl
xchg
jns
push
das
sar
add
cmp
sub
ret
ret
mov
adcl
lret
mov
fstps
loopne
cmp
ror
add
dec
xchg
cmp
adc
mov
sbb
xchg
hlt
jle
lods
sub
into
sahf
enter
jae
push
xor
push
mov
or
stos
push
ss
test
xor
mov
in
nop
cs
bnd
loope
mov
ret
xchg
aaa
inc
mov
inc
push
pop
inc
pop
mov
test
sub
jbe
cmpsl
testb
mov
adc
es
aam
test
scas
les
pop
dec
xchg
dec
jp
leave
mov
lcall
fwait
test
jmp
xchg
lea
jae
in
push
push
xor
mov
sbb
pop
push
xor
or
adc
loop
cmp
rcr
sub
pop
push
aam
sbb
lds
jne
dec
fimuls
sbb
and
sbb
sarb
pop
push
arpl
dec
test
in
in
xchg
ret
jp
pushf
adc
dec
xchg
push
mov
adc
out
jecxz
inc
test
lcall
ljmp
mov
andb
rorb
mov
cmp
cli
xchg
in
pushf
xchg
add
jno
or
iret
sbb
nop
push
cmpsl
out
dec
shll
leave
pop
popf
inc
and
arpl
sbbl
xchg
test
add
push
cmp
sti
es
sbb
mov
mov
or
mov
mov
cmp
and
aas
std
shll
dec
pop
call
mov
pop
fnstcw
inc
dec
mov
fs
inc
or
dec
fdivr
push
cmp
add
sub
mov
in
cltd
repz
jg
outsl
and
push
cmp
and
shll
xor
jle
pop
bound
and
xor
movsb
stos
inc
mov
xor
and
xlat
xor
into
xor
push
stos
in
xchg
mov
insb
mov
ret
fcoml
roll
out
das
mov
jbe
and
add
sub
push
lods
cmp
push
pusha
sub
or
pop
mov
test
jl
mov
cli
lcall
dec
mov
xor
sbbb
push
outsb
sub
sub
pop
outsb
push
xor
lea
jno
xchg
jmp
rcrb
mov
jno
mov
imul
rorb
outsb
cmc
pusha
mov
fidivrl
sub
mov
aam
repz
mov
popl
test
out
xor
rolb
push
sbb
das
cltd
lret
xchg
mov
loope
mov
push
xchg
lock
aad
out
xor
test
sbb
fmull
iret
lds
xchg
adc
in
mov
mov
flds
sub
mov
cmpsl
xchg
icebp
push
or
sub
mov
aaa
sbb
sbb
jne
cmp
or
jae
push
data16
pop
jle
mov
mov
xor
push
ret
sub
pop
mov
cmp
dec
sub
xlat
ja
push
sub
in
or
adc
jge
mov
push
hlt
std
adc
pop
sub
mov
repnz
fdivp
sub
movsb
stos
lret
pop
pop
cmp
mov
lret
ja
enter
jg
push
xor
or
in
xlat
movsb
cmp
loope
and
dec
aaa
dec
jbe
adc
xchg
cmpl
sbb
cltd
sahf
fndisi(8087
fbld
mov
dec
jne
xor
hlt
sbb
fistpll
sub
sti
push
dec
jge
and
jno
or
mov
cmpsl
in
mov
or
sti
push
mov
pop
cwtl
mov
cmp
or
fcoml
scas
adc
fcomps
mov
fadd
add
or
inc
xchg
push
fisubl
mov
inc
data16
divl
cltd
div
mov
jl
cmpsb
stos
ja
das
ss
mov
mov
push
push
sub
ljmp
jb
and
ljmp
push
sbb
jb
xor
or
dec
mov
out
xchg
adc
call
stc
fcomip
rcll
add
push
and
push
inc
outsl
repnz
push
add
and
and
mov
cmp
sbb
sbb
ret
test
in
or
imul
das
push
popf
outsb
fiaddl
jmp
and
inc
icebp
gs
sbb
jecxz
add
imul
mov
or
bt
iret
xchg
dec
cmpsl
incb
jmp
loop
jle
fidivl
cmp
in
sar
dec
clc
adc
add
push
add
jno
cmpb
or
adc
out
popa
push
andl
call
adc
addr16
js
imul
pop
pop
iret
sub
sbb
dec
jns
fidivrl
pop
push
mov
lods
out
rcrl
test
aas
loopne
fadds
out
out
xchg
rcll
inc
or
ljmp
iret
sbb
mov
les
bnd
dec
repnz
sub
xor
aam
mov
test
pop
cmp
rcrl
pop
xchg
cld
or
lods
mov
sub
int
add
adc
pop
mov
xor
outsb
imul
imul
cmp
jbe
je
adc
call
fstpt
sub
push
mov
pushf
iret
outsl
mov
inc
stc
pop
push
lods
add
mov
aad
ja
repnz
push
lret
mov
pop
dec
push
testl
fldt
insl
out
js
xlat
dec
jnp
daa
bts
inc
inc
std
inc
in
mov
dec
mov
sbb
sub
push
fcompl
push
xchg
sti
xor
dec
sub
fcmove
mov
adc
sub
fistpl
xchg
in
jnp
push
repz
sub
pop
std
mov
call
cmp
fwait
aam
pop
xchg
sbbb
jbe
xchg
mov
xor
xor
push
aaa
adc
pop
xorb
sub
mov
dec
inc
lret
addr16
and
ja
cs
dec
insl
lahf
xor
fabs
pop
push
push
prefetcht1
inc
inc
add
daa
add
loope
sub
xchg
cs
lock
mov
or
popa
pop
xor
add
jnp
mov
adc
cmp
mov
stc
mov
clc
and
lcall
mov
fsubrs
dec
xchg
lar
adc
fwait
sbb
and
bound
ljmp
dec
push
cli
dec
pusha
or
or
stos
fistps
pop
mov
dec
sbb
push
mov
imul
xchg
xchg
movsl
add
or
into
movsb
mov
mov
xor
repz
pop
push
stos
std
cmp
fnsave
fstpl
pop
aas
dec
pusha
lds
insb
dec
hlt
sub
push
mov
sbb
pop
push
je
in
pusha
mov
inc
pop
test
jne
jp
in
cbtw
push
and
push
dec
mov
mov
jg
insb
iret
xlat
dec
out
jg
xchg
cmc
mov
dec
outsl
cwtl
xchg
scas
out
test
call
inc
lea
lods
mov
mov
int3
push
out
xchg
lret
in
adc
mov
push
inc
jge,pt
ficompl
fisttps
in
push
or
mov
popa
adc
xor
xchg
or
rcrb
mov
mov
push
out
mov
and
outsl
sahf
loope
pop
aam
lds
fimuls
jge
repnz
push
push
cwtl
popf
jbe
int3
mov
fstpl
ds
inc
lds
mov
fldenv
movsl
jno
rcrl
inc
dec
bound
and
in
xchg
push
rcrl
daa
push
aam
je
daa
sub
adc
fwait
jns
pop
add
outsl
adc
adcl
inc
mov
dec
mov
fstpl
lcall
data16
movsb
inc
pusha
xchg
test
js
ja
pop
into
mov
repnz
outsl
sbb
test
pextrw
stc
inc
xchg
aaa
ss
mov
push
out
adc
xor
insl
push
sbb
stos
jge
mov
inc
xchg
lods
xchg
and
sbb
fsubl
mov
into
scas
fldt
cltd
sbb
dec
xchg
nop
cld
xchg
mov
fistpll
mov
lods
mov
insb
and
ja
call
mov
push
pop
das
popf
pop
out
pop
ret
data16
mov
jbe
out
mov
loopne
mov
cld
push
mov
pop
and
and
or
sub
and
mov
hlt
add
ds
and
push
sub
cmpsb
in
icebp
xchg
inc
mov
pop
push
ds
add
jg
sbb
lods
push
in
aad
add
push
fisttpl
mov
repnz
int
mov
add
repnz
mov
lock
dec
fstl
sbb
insb
sbb
push
andb
and
fisubs
int3
pop
jl
mov
ljmp
push
xchg
popa
inc
cmp
dec
ret
mov
or
jo
jg
ljmp
lcall
out
mov
xchg
insl
sbb
popa
int3
xchg
inc
mov
fidivrl
ficoml
mov
mov
das
mov
les
rcrb
sbb
jbe
fxch
outsb
dec
jb
insl
mov
xchg
out
jo
in
ret
aad
push
xchg
mov
sub
cmp
out
inc
xor
aas
sub
into
mov
adc
je
cli
mov
adc
stc
mov
testl
mov
cmp
pop
test
push
out
add
imul
sbb
es
daa
out
adc
lock
aad
rclb
iret
add
in
push
data16
push
sbb
push
fistpl
test
inc
sub
dec
adc
repnz
inc
aas
jae
jg
dec
cwtl
or
sti
test
mov
outsl
xor
into
mov
mov
btr
pop
mov
das
push
push
dec
rdpmc
xchg
dec
pop
clc
mov
insl
psubw
sub
mov
jo
into
push
mov
adc
push
inc
cwtl
mov
insl
xor
addr16
ficoml
ss
shr
lret
add
andb
cmp
subb
mov
pop
sub
aas
fcmove
decl
push
pop
sub
sub
addr16
xchg
scas
push
iret
pop
xchg
push
sbb
addr16
xor
mov
subb
mov
jg
push
xchg
push
xor
lods
out
mov
or
lea
pop
or
cmpsb
orb
movsl
stos
shrb
mov
dec
out
mov
mov
aas
dec
pushf
and
lcall
inc
in
nop
or
mov
les
mov
cvtdq2ps
adc
fmuls
cmp
jno
sbb
mov
pop
jnp
mov
addr16
jecxz
mov
je
in
pop
xor
mov
fisubrs
mov
pop
add
repz
and
mov
pusha
xchg
in
jnp
sbb
ss
idivl
outsb
push
push
aad
pop
into
shrb
jbe
scas
pushf
pop
mov
lods
push
jno
cmpsb
cmpsl
mov
adc
adc
and
sahf
jb
je
pop
and
adc
pop
int
ret
and
out
ret
fcom
dec
stos
jbe
nop
cmp
pop
push
push
faddl
bound
and
lcall
push
xor
jp
pop
sbb
or
adc
xor
xchg
cmp
pop
and
or
ds
jns
dec
xchg
lods
ret
jl
lahf
mov
mov
hlt
aam
outsl
in
imul
add
out
adc
dec
ljmp
aaa
les
xor
or
or
pusha
inc
jae
xchg
cld
je
mov
ret
mov
add
sub
orb
out
xchg
test
outsl
push
cmp
ret
mov
insb
mov
sahf
cli
aas
mov
lods
jb
mov
gs
xor
sbb
inc
aam
popf
pusha
xchg
sub
and
aam
dec
lock
dec
insb
pop
insb
adc
int3
cmpsb
and
cmp
push
lds
xor
idivl
xor
pop
insl
andl
mov
hlt
lcall
or
xchg
push
fcomip
dec
jmp
add
out
das
ret
mov
fs
clc
add
add
stc
jg
addl
and
jnp
cltd
jnp
mov
sbb
nop
int
popf
fsubr
and
push
sarl
and
jne
iret
mov
test
sbb
jne
and
or
movsl
xchg
or
ja
notl
push
stos
mov
out
std
cmpl
lret
sub
inc
mov
pushf
xchg
push
das
call
icebp
dec
fstl
sub
sub
outsl
xchg
mov
lock
mov
push
xor
repnz
push
jnp
adcb
jp
and
div
es
sub
cmp
or
hlt
xor
inc
add
jae
inc
mov
mov
jecxz
pop
ret
int3
inc
ret
ds
mov
jnp
mov
dec
mov
push
fwait
jmp
and
mov
fs
aam
int3
loop
lcall
jnp
fimull
ljmp
dec
je
mov
jb
or
dec
xchg
clc
sbb
pusha
xor
cwtl
dec
fmull
adc
push
aas
xchg
and
fwait
push
leave
in
jo
mov
push
jnp
push
sahf
push
fdiv
inc
dec
loop
imul
into
mov
int
sbb
mov
data16
dec
pop
daa
fcmovnbe
pop
mov
mov
stos
or
pop
les
or
pop
stc
inc
dec
nop
ret
push
or
rorb
data16
pusha
inc
inc
xchg
inc
btr
loopne
dec
fnstenv
imul
and
rcrl
dec
nop
add
cmc
ret
test
xchg
xor
shrb
stos
add
insb
mov
pop
mov
out
cld
jb
cli
out
pop
test
into
int
test
sarl
inc
popa
mov
mov
dec
push
jecxz
loopne
mov
adcb
mov
loop
insb
aam
loopne
jno
lds
arpl
fs
or
sbb
gs
lret
xor
enter
cld
mov
cmp
or
ja
add
sub
pusha
mov
enter
mul
mov
cmp
test
adcl
xor
mov
mov
cmc
testb
outsb
pop
cmp
adc
fdiv
xor
xor
sti
mov
fmuls
cli
sti
mov
jae
fwait
cltd
scas
sbb
jmp
int3
or
test
inc
sbbl
jle
mov
sub
ret
dec
push
dec
addr16
mov
and
push
pop
pop
lahf
loop
xlat
outsb
mov
test
or
mov
ljmp
test
xchg
inc
paddsw
mov
ret
sub
int
mov
mov
notb
pop
xchg
pushl
push
mov
mov
jnp
clc
cmpsl
dec
inc
dec
fucomi
add
in
mov
jp
ja
or
cmpsb
and
sarb
xor
movsb
fisubrl
sub
mov
jae
push
push
mov
daa
sbb
mov
test
movsb
scas
lock
hlt
xor
es
and
adc
push
scas
js
pop
jg
xchg
xor
std
daa
xchg
insl
push
jg
dec
out
dec
and
xorb
ficompl
fprem
mov
decb
mov
movsl
cmp
xchg
xor
mov
inc
test
and
pop
xchg
jno
push
jmp
test
mov
aad
setns
or
daa
test
fisubl
int
jl
in
int3
sub
cmc
add
mov
sarb
sti
scas
pop
sbb
jae
mov
and
push
enter
cmp
sbb
rcll
sub
adc
data16
jbe
dec
pop
mov
jno
cld
mov
imul
inc
xchg
add
dec
sbb
mov
sbb
mov
sub
dec
sub
leave
lahf
mov
or
shll
mov
add
out
faddl
aam
pop
filds
jns
mov
dec
movsb
loopne
pop
loopne
shlb
adc
clc
mov
out
adc
lcall
mov
and
pop
xlat
sub
and
fcoml
scas
sahf
sbb
nop
std
add
xchg
xor
mov
ret
sahf
sbb
cld
mov
ss
push
push
loope
mov
fwait
lcall
mov
push
cltd
jmp
ret
fildll
fdivrs
adc
aam
out
shll
and
xchg
push
fcmovne
adc
enter
cmp
in
leave
out
je
add
iret
int
out
jecxz
in
lds
int
out
mov
push
xor
xchg
pop
add
out
call
jb
cltd
mov
inc
xchg
xchg
jo,pn
sbb
ljmp
cmc
std
lds
pop
fnstcw
xchg
fildl
in
in
pusha
scas
inc
pop
sub
xor
inc
divl
lods
es
and
loop
add
fwait
inc
sbb
fldln2
cmp
add
rcll
cld
inc
jle
mov
loopne
adc
xchg
lea
shrl
inc
out
cltd
loopne
stc
daa
aad
fmuls
ror
test
push
xor
mov
mov
sarb
test
or
sbb
loopne
movsl
push
icebp
jnp
sar
xlat
inc
push
addr16
sbb
and
mov
adc
or
xor
lret
fcom
jns
pop
fcomip
lret
mov
mov
movsl
dec
ror
test
add
pop
jae
inc
add
and
add
pop
in
or
rcrb
aas
ds
psllq
or
movsb
insl
jmp
sbb
out
cmp
stc
mov
add
sbb
inc
adcb
in
stos
push
sbb
loopne
dec
enter
push
pop
test
es
sti
mov
les
ljmp
ret
stos
es
and
dec
arpl
test
rcll
add
dec
mov
int
push
or
mov
push
pop
mov
jle
aaa
lahf
or
sbb
mov
pushl
push
fdiv
movsl
adc
mov
call
dec
in
shll
inc
jnp
loopne
mov
rcrb
cmp
out
push
mov
and
int
lods
cmp
ljmp
in
sbb
sti
pop
out
scas
mov
or
scas
xchg
adc
movsl
sahf
iret
push
push
mov
jle
test
mov
std
mov
pop
add
daa
sti
push
scas
pop
filds
sub
loope
out
outsl
push
out
fistl
sbb
cmp
xchg
push
sub
sbb
movsl
scas
pop
cmp
add
scas
popf
mov
adc
xlat
or
loope
popf
lret
xor
data16
sbb
test
pop
mov
cld
dec
dec
xchg
xchg
cmp
xlat
out
mov
xor
sub
aaa
mov
add
pushf
add
cmp
mov
leave
fsubl
mov
mov
sti
loopne
fld
xor
repnz
cmp
cmpsl
test
sbb
xchg
adc
pop
int
fwait
inc
mov
es
imul
mov
pushl
push
cmpb
rclb
out
out
sti
pop
mov
scas
test
loop
jns
orl
jl
mov
inc
decb
les
pusha
pop
data16
push
cwtl
mov
mulb
loopne
pushw
lahf
popa
into
mov
xlat
rorb
scas
cmp
dec
sbb
dec
mov
fstpl
jg
jl
leave
and
cltd
mov
cmc
fcompl
loope
subl
and
dec
shrl
mov
lret
int
scas
xchg
in
push
addr16
dec
adc
sub
mov
cmpb
cmp
pop
jo
xchg
sbb
inc
leave
xchg
jae
popf
sub
sub
adc
fsub
std
lahf
sub
in
inc
fcom
ret
mov
pushf
jns
mov
pop
fmuls
and
mov
roll
lret
les
xchg
out
repnz
cli
jns
iret
out
test
adc
adcb
sub
rcl
add
stos
jns
add
and
pop
xchg
mov
les
test
mov
fucom
loop
inc
push
dec
test
loop
jae
adc
or
xor
or
sbb
mov
push
sbbl
hlt
and
rolb
inc
jge
jl
mov
jge
pop
dec
inc
sar
lret
ds
dec
push
jmp
pop
bound
cmc
add
mov
aam
pop
cs
add
dec
mov
inc
mov
mov
push
inc
negl
cmp
inc
addb
mov
pop
fidivs
and
es
cmp
xchg
iret
les
cli
test
sub
enter
pop
jb
and
sub
add
jecxz
sub
inc
ret
je
add
sub
scas
popa
jns
lods
dec
adc
mov
icebp
sbb
and
add
mov
mov
lods
popf
ret
jne
inc
rclb
dec
cmpb
xor
cmp
loopne
pop
fidivrs
mov
das
cmp
jle
mov
int3
not
sub
add
cli
sahf
adc
adc
pop
fldenv
add
pop
inc
inc
pusha
bound
outsl
aas
push
adc
fadds
cmpsb
jp
xchg
andl
mov
ret
out
add
nop
push
dec
push
int3
popa
inc
cmp
sbb
sbbb
orl
xor
aad
fwait
dec
mov
or
dec
imul
mov
imul
and
mov
mov
sub
mov
mov
or
sbb
dec
push
add
xchg
sub
add
pop
rcll
xchg
hlt
or
stc
sub
sub
xorb
inc
xlat
mov
test
lret
jp
sti
insb
pop
jo
cld
inc
lret
cli
xchg
mov
xor
jbe
mov
mov
paddw
lock
pop
flds
push
lcall
or
cli
ret
add
add
xlat
jno
fmuls
xchg
or
sbb
cmp
ds
cmp
cmp
out
xchg
out
sub
inc
xor
ss
frstor
jns
push
add
mov
jecxz
xchg
sbb
lret
mov
push
enter
out
sbb
adc
cmpsl
aaa
push
int3
shl
pop
pop
inc
mov
sbb
xlat
xchg
rolb
sbb
jp
push
stos
gs
scas
dec
inc
push
ljmp
loop
inc
pushf
jle
orl
cmp
jle
clc
ret
mov
push
push
pop
fcoml
push
xchg
pop
pop
adc
jae
dec
mov
in
imul
and
or
pop
cmp
lea
lret
lret
xchg
insb
cmp
push
outsl
popf
push
sub
lds
mov
sti
scas
cmp
inc
mov
push
movb
jne
les
lea
bound
push
repnz
lahf
cmp
int3
add
cmp
mov
int3
std
xor
cmp
scas
push
repz
mov
fisubrs
fdivrl
cmpsb
mov
xchg
push
cltd
lods
sub
xor
bound
jo
mov
mov
imul
mov
addr16
icebp
leave
or
loop
jb
xor
inc
xor
ret
cwtl
loope
popf
dec
push
xchg
imul
aam
movsb
pop
jmp
arpl
in
lock
addr16
jl
add
xlat
je
fildll
xchg
inc
sbb
leave
xor
stos
inc
subb
xor
cmp
dec
lods
mov
stos
cmp
push
cmc
xorl
xchg
xchg
push
insb
adc
inc
pop
mov
imul
in
push
ljmp
insb
loopne
lcall
mov
int3
rcrb
xchg
fcmovnb
icebp
mov
or
dec
test
xchg
pusha
bound
cltd
mov
mov
test
mov
and
pop
push
jns
dec
fcoml
dec
divl
sbb
movsb
gs
cmpsb
sub
fcoms
mov
pop
mov
dec
fs
popf
jl
xchg
int3
xchg
inc
popf
out
mov
xlat
or
dec
push
and
loope
jnp
mov
fisttpll
xchg
push
push
sub
popf
xor
lods
cmp
ds
lds
push
mov
lret
arpl
gs
jl
fdivrs
ret
xor
xchg
clc
lret
sub
jns
mov
hlt
cld
lods
xorl
inc
mov
into
pop
mov
xor
and
add
outsb
iret
inc
ljmp
aam
stc
in
push
mov
jne
ret
mov
ljmp
popf
push
sub
pop
icebp
fnstcw
fcoml
mov
and
mov
cwtl
xchg
test
pop
pop
sub
sahf
pop
sub
shrl
pop
cmpsb
add
test
mov
adc
or
mov
ss
mov
mov
stos
xchg
cmc
xlat
mov
dec
cmp
ret
mov
int
in
scas
push
cmpsl
push
add
xor
xchg
xacquire
hlt
data16
mov
imul
add
andb
pop
inc
push
mov
adc
jecxz
push
cld
loope
sar
out
cmp
mov
nop
cmp
mov
int3
sub
leave
shl
sbb
mov
fisubl
pop
jnp
lret
xchg
pushf
pop
movb
imul
popa
cmpsb
ja
mov
push
mov
lods
cmpsb
cld
xchg
jo
jns
pushf
or
mov
in
mov
mov
pop
pop
fwait
push
add
adc
insb
dec
cmp
push
subl
dec
cmp
js
jb
lods
xchg
pop
push
test
xor
ja
add
xchg
and
out
vmwrite
mov
mov
in
xchg
shlb
sbb
in
sbb
ss
add
lret
push
xchg
rorb
add
out
inc
rcrl
bound
pop
dec
xorb
cld
repz
mov
shll
loopne
mov
push
pop
xchg
dec
rorb
sub
fildl
jge
or
mov
data16
xor
mov
pop
pop
cltd
lock
popa
mov
movsb
in
xor
or
mov
or
pop
cli
fucomi
loopne
loope
push
xchg
gs
in
push
subb
scas
arpl
push
insl
jge
jb
movl
jae
inc
sub
stos
lods
nop
cmp
fstl
js
imul
inc
int
pop
scas
and
ja
jg
or
pop
in
frstor
cmp
sub
adcl
scas
test
push
xchg
add
xor
and
lret
cltd
imul
inc
pop
or
mov
sbb
mov
leave
push
in
fimull
insl
dec
subb
enter
shlb
cli
jne
add
dec
test
loope
sbb
rcr
andb
mov
mov
rorb
sbb
cmp
jecxz
push
pop
mov
ss
push
stos
sub
push
add
push
push
xchg
xor
ja
xor
stos
dec
push
pop
fwait
ret
dec
out
adc
jle
mov
test
pop
cmp
repnz
and
or
mov
and
sbb
out
xchg
ret
loop
pop
pop
mov
mov
mov
mov
call
stos
pushf
movsb
in
mov
add
xchg
pop
push
out
sbb
clc
xorl
sbb
pusha
ss
mov
cwtl
push
mov
out
push
sbb
mov
pushf
imul
in
aas
adc
adc
insb
jns
jne
dec
jge
cmc
pop
cmp
adc
sub
adc
scas
popf
xchg
cmpsl
loop
ficompl
iret
insb
inc
lcall
mov
inc
dec
mov
cmpsb
inc
popa
pop
lods
cmp
in
test
out
jae
xchg
xchg
sub
in
jp
pop
jecxz
jecxz
fucomp
pop
enter
ret
dec
daa
inc
sub
shl
dec
mov
and
adc
xor
xlat
pop
inc
insb
scas
arpl
jne
fdivrs
sbb
dec
in
add
jl
fstp
frstor
int3
test
in
pop
cmp
sarb
shr
pop
jmp
mov
sub
sbb
outsl
jmp
gs
fldt
or
sbb
sub
push
xchg
pop
les
mov
outsb
mov
add
mov
and
cwtl
pop
and
jle
daa
pop
inc
mov
dec
cmp
and
cmp
mov
mov
mov
pop
adc
xor
lret
clc
adc
fdivrl
xchg
orl
bound
lcall
mov
scas
sarb
fwait
and
and
test
daa
push
fsubrl
test
push
and
lods
add
je
lods
and
push
pop
pop
pop
daa
lret
cs
dec
mov
add
xchg
inc
rclb
sbb
jg
mov
je
movsb
mov
pop
mov
lcall
pop
sub
jae
aam
sti
sub
into
push
push
imul
and
cmp
int
dec
loope
push
jbe
psrld
xlat
int3
sbb
mov
sbb
or
push
not
or
add
push
mov
and
mov
pop
xor
jle
jnp
arpl
add
test
outsb
mov
or
and
or
lods
xor
shl
cmp
cs
std
push
icebp
ror
add
ret
sbb
push
and
xor
neg
mov
fists
jmp
push
inc
in
jmp
cmp
mov
jecxz
xchg
popf
xchg
pop
push
mov
mov
mov
sub
adc
cmpsb
inc
js
popl
mov
lret
cmp
or
loopne
iret
push
stos
test
xlat
pop
hlt
dec
sub
flds
movsb
adc
mov
inc
stos
or
loope
ljmp
mov
or
jg
lahf
add
xchg
sbb
rcl
or
test
mov
clc
mov
adc
sub
js
sahf
fcmovne
cmovae
rorl
mov
loope
push
hlt
shl
mov
push
jnp
and
imul
mov
sub
dec
das
xchg
loopne
cmp
pop
lahf
ret
xchg
inc
test
add
in
pushl
mov
nop
add
xchg
cmp
push
push
xor
xchg
insl
mov
rcrl
out
or
pop
inc
mov
dec
outsb
xlat
arpl
push
int3
push
push
stos
ja
andb
bound
mov
call
inc
pop
imul
das
adc
insb
ja
jno
or
into
push
lret
arpl
imul
jnp
jno
pop
pushf
ja
daa
call
popf
jle
jecxz
inc
int3
hlt
mov
adc
mov
and
fdivrs
xor
outsb
mov
xchg
jno
inc
aaa
mov
cld
push
stos
adc
rcr
cmp
les
xor
mov
fisubrl
negb
pop
sub
fldenv
xchg
movsb
ljmp
fisubrs
cwtl
repz
sti
hlt
pushf
mov
mov
loop
sarl
repnz
mov
cli
sub
pusha
mov
fisubs
imul
mov
pop
shl
gs
xchg
dec
in
push
out
cmp
cmp
dec
lret
push
insl
push
xchg
fdivrs
ret
dec
loop
mov
jl
arpl
or
sub
lods
shl
jp
inc
in
xor
inc
lock
int3
jmp
jl
push
jbe
inc
jg
sbb
mov
shrl
xchg
xchg
scas
dec
ss
jnp
jns
pop
movsb
fadds
popa
xor
dec
cmp
aaa
cmp
mov
shrl
movsb
into
pop
pop
dec
cmp
inc
cmp
shl
push
mov
push
mov
inc
and
inc
mov
mov
cmp
push
xor
movsl
jnp
repnz
push
mov
dec
sbb
xor
sbb
add
orb
stc
loope
cmc
sahf
in
lahf
and
scas
pop
sarl
push
and
repz
les
test
stos
mov
add
les
xchg
sub
icebp
stos
in
pop
ret
mov
jnp
adcl
aas
xor
and
rcrl
lods
add
dec
jae
inc
cltd
es
loopne
out
inc
lods
jne
cmp
pushf
push
push
fsubl
repnz
fdivs
jge
xor
inc
lods
outsb
and
xor
pop
adc
push
clc
jne
fimull
cmp
arpl
lods
cmp
int3
out
sub
fwait
and
loopne
cmpsb
scas
xor
out
movb
mov
cwtl
dec
mov
cltd
aas
xor
mov
movsb
mov
push
add
adc
xchg
movsb
sub
xchg
sahf
xchg
or
daa
shrl
imul
pop
fs
out
mov
movsb
data16
pop
loop
mov
add
xchg
insl
inc
bound
push
lret
jl
or
daa
mov
insb
and
xchg
ret
shll
lret
dec
adc
mov
ljmp
lahf
ljmp
adc
imul
rclb
pop
call
rcrb
mov
mov
cmpsl
xchg
insb
dec
jl
push
fdivr
js
or
add
sub
lret
adc
incb
repnz
sub
dec
insl
add
dec
dec
xchg
or
sub
rolb
lock
pop
cmc
pop
dec
sbb
roll
jle,pt
ljmp
mov
pop
cmpsb
cltd
sbb
outsb
out
mov
mov
jp
movsl
into
inc
adc
out
jb
pushf
xchg
xchg
clc
popa
mov
cmp
mov
mov
xchg
dec
mov
mov
pop
mov
pop
xorb
jno
daa
push
fstps
js
adc
jp
decl
lds
push
cs
cld
and
dec
jg
lret
xchg
cwtl
out
or
dec
mov
popa
jecxz
loop
jb
sbb
repnz
mov
lret
aaa
mov
aas
mov
pop
xor
in
test
jecxz
insb
lcall
pop
or
dec
sub
add
popf
dec
imul
insb
pop
inc
fisubrl
xchg
leave
adcb
push
popf
pusha
xor
stos
outsb
in
dec
fnsave
cmp
xor
adc
inc
addr16
in
fadds
loop
mov
ja
mov
sub
and
sub
jle
push
call
dec
test
jnp
scas
test
jae
xorb
push
insb
jmp
sbb
or
nopl
repnz
rolb
add
push
adc
sbb
movb
movsl
jns
data16
iret
popf
sbb
xor
push
popa
mov
lds
mov
xor
cli
cld
in
xchg
xor
pop
inc
push
das
push
sarb
push
imulb
sub
shr
push
xchg
pop
fdivrp
nop
mov
scas
inc
inc
mov
xchg
pop
jb
xor
loope
push
push
inc
push
ss
std
nop
jnp
ss
sarl
or
push
std
in
imul
inc
lods
jmp
gs
lds
xor
sub
jo
xchg
or
mov
fdivp
add
cltd
sub
cmp
mov
add
dec
and
or
fcompl
mov
or
mov
stos
bound
dec
cmp
scas
fadd
pop
mov
mov
xchg
les
lea
push
jae
bound
popa
adc
enter
push
js
dec
test
jge
xor
or
js
jp
rorb
cmpsl
adc
cmp
idiv
inc
fistpl
ds
jb
ljmp
mov
pop
fistps
cltd
insb
or
cmp
xchg
push
mov
out
xchg
test
aam
pop
aam
jle
stc
punpckhdq
sahf
cs
sbb
mov
jnp
repz
movsb
fmull
movb
and
push
and
cmp
mov
jp
xchg
stos
lahf
rolb
or
xor
mov
xchg
mov
add
or
lock
pop
incb
rclb
mov
ret
lods
add
mov
nop
xor
mov
enter
addr16
out
jle
insb
jl
movsb
dec
xor
out
lds
push
dec
outsb
pop
out
push
in
inc
mov
cltd
or
or
mov
sbbb
or
mov
leave
sbb
out
scas
repz
out
pop
ds
xor
clc
push
add
sub
add
testb
push
inc
push
adc
and
pushf
cli
and
mov
lret
daa
pop
add
push
imulb
fsts
shl
mov
aad
jmp
xor
popa
stc
and
xchg
aam
hlt
cli
js
and
pop
ret
sub
lock
hlt
cs
fiadds
inc
rcl
int3
sub
or
dec
clc
cltd
mov
je
xchg
jae
sub
add
pushf
adc
cs
or
rcll
leave
and
mov
cmpsl
pop
ss
inc
xor
xor
iret
or
cltd
jg
inc
shll
and
test
ds
mov
fcmovnu
mov
cld
add
out
lea
das
sub
imul
aam
pop
sbb
out
xor
rcll
inc
popf
pop
mov
rorb
jle
int3
leave
dec
rcrb
shlb
cmp
addl
jae
sbb
xchg
add
or
idivb
out
pop
mov
subb
in
fwait
push
sbb
and
and
adc
idivl
in
test
push
cwtl
mov
jl
xor
jmp
cwtl
jne
insb
fwait
clc
pop
clc
mov
clc
mov
out
pushf
sti
rorb
lods
out
jmp
fs
cmp
out
data16
or
cmc
sub
mov
xor
aas
lods
ret
cmp
lret
mov
shr
add
inc
mov
sbb
mov
sbb
sub
mov
dec
sbbl
jb
adc
or
mov
xchg
fidivl
mov
daa
lock
xchg
pmaxsw
mov
mov
repz
mov
in
cmc
mov
imul
push
xor
push
mov
mov
das
sahf
jle
mov
lods
mov
xor
scas
inc
mov
subl
hlt
and
push
ljmp
add
test
inc
lcall
in
data16
push
push
sub
xor
add
stc
inc
adc
outsb
jg
icebp
add
mov
jne
xchg
dec
sahf
call
fwait
rorl
xchg
xchg
into
mov
push
push
je
push
lock
sub
in
dec
adc
ret
js
dec
stc
or
sub
jnp
sarl
stos
mov
dec
xchg
mov
mov
test
jns
loope
loopne
aaa
add
divps
mov
lock
inc
sbb
inc
xlat
mov
ret
cltd
shll
jl
shrl
adc
push
ret
jae
das
sub
mov
cmp
sub
fisubrl
rclb
std
sub
ss
cmp
and
or
out
sub
negb
xchg
push
mov
loopne
jmp
out
push
inc
push
scas
adc
in
xchg
scas
stc
cwtl
ficoms
mov
mov
push
iret
add
sarb
push
push
sub
inc
or
cmpsb
mov
pop
lods
setns
pop
inc
pop
dec
repz
xchg
fildl
ret
ret
daa
into
mov
test
fistpl
ljmp
cmp
mov
hlt
adc
pop
mov
in
xchg
add
mov
in
int3
jmp
outsl
out
ljmp
mov
aaa
cmpsb
cmp
inc
jns
push
fnstenv
jmp
lods
ficompl
mov
mov
cmp
add
fiaddl
rcrl
repz
cli
mov
shlb
add
dec
scas
mov
cmc
cli
dec
aam
sbb
popf
scas
add
or
fucomp
xchg
mov
hlt
push
mov
mov
sub
imul
jo
add
inc
mov
cmp
aaa
mov
int
lds
imul
push
aad
test
mov
and
inc
test
dec
inc
mov
xchg
les
mov
push
iret
mov
data16
add
out
pop
stc
out
ljmp
popa
xorb
iret
xchg
je
mov
xchg
inc
dec
push
lret
notb
pop
cmp
push
loop
insl
push
dec
test
jo
andl
pop
add
pop
cmpsl
mov
mov
push
movl
sahf
pop
stc
sub
sbb
adc
sbb
xchg
xor
sub
add
pop
fsubl
mov
add
repz
into
mov
pop
adc
test
repnz
fists
mov
mov
fs
fistl
testl
dec
push
adc
mov
movsl
repnz
dec
add
push
les
jmp
push
scas
jnp
cmp
ljmp
xor
cmpsl
mov
and
and
inc
bound
lret
in
idiv
jmp
push
js
inc
aaa
in
imul
jl
cmpsb
push
rcr
popa
stos
mov
cltd
push
enter
jecxz
add
cltd
fistps
icebp
lahf
popa
outsl
jnp
in
roll
stos
addr16
adc
sbb
sub
mov
pop
jo
mov
fbld
iret
and
dec
and
mov
loopnew
mov
cwtl
cmpsl
ret
add
sub
xchg
mov
lds
mov
icebp
sub
xchg
and
lahf
imul
sub
mov
flds
xlat
dec
sarb
rclb
daa
je
or
movsl
mov
add
pop
dec
push
in
and
orb
cmpsb
dec
mov
es
dec
jo
mov
mov
add
cmpsb
dec
repz
adcb
dec
xor
pcmpeqw
push
xor
pop
or
stos
add
push
dec
jns
and
sbb
and
adc
push
lds
aam
and
pop
pop
scas
data16
adc
dec
sti
rorb
das
push
imul
shrl
mov
out
jno
int
addr16
xchg
push
dec
mov
adc
sti
jg
and
xchg
xor
adc
push
fwait
dec
loopne
pop
test
mov
arpl
movsl
push
mov
jo
lcall
pusha
dec
adc
mov
inc
xchg
in
push
lock
xchg
or
dec
push
inc
fwait
mov
cmc
mov
popf
scas
mov
aas
lahf
xor
outsl
pop
es
mov
sbb
cmp
sbb
js
int
or
jno
pop
push
out
xchg
jbe
fidivl
mov
jmp
inc
add
inc
orb
cmp
hlt
add
setb
insb
pop
push
push
mov
faddl
fwait
jge
lahf
les
xor
mov
pcmpeqd
and
jg
sahf
cmp
mov
shl
dec
cmpsl
dec
mov
stos
add
push
push
lds
fbld
int3
sub
out
mov
out
push
or
mov
xor
je
negl
into
pop
ds
inc
mov
inc
push
dec
scas
adc
repnz
pop
or
mov
push
add
and
push
ret
inc
nop
cltd
mov
xor
cwtl
loop
cmp
lea
repnz
cmc
bound
jae
mov
nop
mov
jg
aas
xor
mov
pop
filds
aas
mov
test
jg
jmp
lcall
fdivl
jp
add
insb
sub
mov
test
stos
inc
jle
ret
mov
loope
pop
loop
sub
pop
mov
and
jno
pop
jp
xchg
xor
stos
mov
ss
addr16
fstpt
daa
sbb
rcll
mov
lret
shll
aam
int
mov
mov
or
xchg
push
cmp
outsl
pop
addr16
sub
push
adc
xlat
dec
cmp
lods
jmp
call
daa
and
mov
mov
pop
fstpt
cmp
loop
jae
lahf
jp
mov
cmpsl
ret
fistpll
lock
test
cmp
rorl
and
push
js
mov
adc
cmp
sbb
mov
mov
sub
mov
data16
in
mov
gs
pop
and
les
xchg
inc
pop
pop
test
shrb
dec
and
out
jp
bound
adc
repnz
ret
bound
insb
adc
mov
arpl
mov
mov
inc
mov
fildll
shll
dec
orl
xchg
mov
lods
and
cmpsl
pop
popf
call
add
xor
rorb
dec
mov
mov
lods
andl
dec
inc
push
test
mov
andl
lods
andb
xchg
cmp
mov
mov
leave
push
aaa
in
cmp
xor
xchg
push
aaa
fwait
pop
pop
scas
push
icebp
sti
scas
js
sbb
pop
loop
xor
inc
xchg
mov
xchg
out
and
and
mov
cmpsb
mov
insl
xchg
cmpsb
repnz
mov
mov
pop
mov
sub
std
push
sti
adc
lods
sub
sub
adc
lods
cmpb
out
into
cmp
or
stos
xor
dec
sub
addr16
push
fsubp
sub
mov
cli
adc
cmpsb
mov
or
outsb
incb
cwtl
popf
ljmp
push
adc
scas
rorl
pusha
push
jg
cli
add
in
loopne
xchg
sub
inc
inc
mov
js
data16
mov
les
jmp
xchg
xor
lahf
sub
shrb
js
jno
or
or
sbb
mov
xchg
pushf
and
inc
sbb
aad
xchg
xor
dec
mov
push
xor
movl
xchg
orb
cli
adc
mov
dec
inc
loop
xchg
lods
sbb
or
push
icebp
push
add
sub
scas
sub
jmp
mov
aas
inc
or
adc
jns
push
xchg
rorl
dec
lods
movsb
daa
loopne
int3
mov
scas
out
pushf
leave
sub
adc
in
outsb
add
mov
or
dec
das
xchg
popl
push
lret
fimuls
es
xchg
dec
lahf
mov
adc
shl
and
cmpsb
mov
rcll
lods
sbb
movsl
scas
push
adc
add
gs
inc
int3
dec
and
cmp
inc
das
jp
cs
xchg
and
mov
mov
cmpl
lock
gs
pop
lods
pop
or
cltd
xchg
add
mov
fadd
or
jns
data16
inc
adc
shll
sbb
dec
insl
jne
sbb
push
loopne
sti
mov
pop
mov
lret
cmc
jecxz
sub
lahf
cmpsb
adc
dec
int
xchg
dec
outsb
mov
push
nop
sbb
ljmp
ljmpw
stc
inc
stc
pop
inc
movsl
xchg
add
call
lcall
mull
pop
dec
jnp
dec
nop
mov
and
adc
test
sbb
add
pushf
in
push
mov
addr16
jbe
push
add
popa
test
add
jge
repz
add
mov
mov
ret
and
outsb
xor
dec
add
shl
inc
ret
hlt
xor
sub
xor
add
cltd
mov
mov
test
shlb
std
imul
xor
jl
mov
gs
mov
or
xor
sbb
lods
mov
stos
push
popf
mov
pushf
sti
test
adc
cmpsw
jge
test
int3
fwait
in
cli
jg
inc
popa
jno
movsb
int3
adc
push
int
xchg
cs
scas
shrl
dec
push
lret
dec
push
sub
lcall
and
hlt
pop
mov
mov
iret
les
pushl
daa
and
popa
pushf
pop
div
adc
clc
xor
cmpb
mov
adc
cmpsb
inc
es
test
mov
and
lods
scas
mov
jbe
xchg
sub
push
mov
xchg
icebp
push
rol
dec
push
test
adc
xchg
arpl
sub
js
and
mov
dec
and
js
aad
mov
fnsave
mov
insl
data16
aad
rclb
mov
es
jmp
nop
stc
jecxz
stos
xor
fisttpll
cwtl
push
adcl
lahf
popa
xchg
popf
rcrl
dec
in
adc
add
jecxz
jns
sub
sub
rol
adc
cld
outsl
jge
pop
push
loopne
aas
dec
lds
cld
dec
xchg
mov
xor
cmp
inc
and
into
and
jge
sub
push
arpl
ret
fucom
mov
loopne
js
and
rorb
and
aad
sbb
out
or
ret
les
mov
cld
push
add
test
sub
lret
shlb
repnz
dec
or
mov
pop
and
mov
in
imul
mov
test
mov
mov
shlb
imul
jb
inc
sbb
fisttpl
popa
popa
movsl
xor
xchg
xor
mov
pop
stc
int
je
dec
out
fsubr
xchg
and
adc
jp
inc
sub
add
jmp
aaa
xchg
xlat
ret
pop
test
xchg
pop
or
dec
fcmovu
in
cli
push
lahf
jb
xor
popa
sarb
enter
sar
pusha
loop
cltd
jge
add
mov
inc
xchg
mov
push
scas
cli
sbb
mov
mov
jno
idivl
jbe
iret
mov
add
ja
dec
in
cltd
push
mov
or
adc
sbb
xor
push
mov
fildll
add
cld
jmp
std
add
pop
insl
or
addb
xor
adc
divl
or
xchg
pop
loop
xor
mov
cmp
dec
sub
mov
test
xor
test
pushf
outsb
into
jno
fadd
testb
jo
xchg
fsub
ret
cmc
sub
bound
call
decb
stos
scas
xchg
or
jae
clc
aaa
loopne
addr16
xorb
aam
pop
out
stos
lods
sub
adc
pop
dec
bnd
sub
jne
mov
xchg
xor
add
mov
imul
xlat
mov
sahf
test
call
inc
or
cmp
add
daa
cmpl
fiaddl
jge
xchg
lds
loope
push
icebp
scas
imul
iret
test
shrl
mov
add
mov
daa
icebp
sbb
inc
push
xlat
mov
aam
push
outsl
ret
je
sbb
shlb
ljmp
daa
ss
aaa
cmp
aam
lods
es
es
jno
rcr
stos
sbb
leave
pop
outsl
repnz
out
mov
out
ret
jl
mov
jmp
xchg
leave
mov
jnp
inc
lods
decb
mov
adc
lret
movsb
pushf
cwtl
popf
nop
jo
insl
pop
in
aas
rclb
sub
and
dec
ret
cmp
or
dec
add
jp
in
mov
lahf
ja
sbb
pop
scas
jle
pop
arpl
dec
test
scas
xchg
nop
cld
stos
das
stc
sbb
mov
dec
in
push
jo
mov
bound
adc
js
jns
lods
btc
subl
std
rcl
push
cmc
imul
pushf
push
and
cmpsl
sub
idivl
repnz
xor
cmp
xchg
fs
les
in
mov
insl
mov
std
add
inc
jne
add
loop
lds
arpl
imul
xor
dec
pop
sbb
les
xchg
inc
lods
movd
out
inc
adc
xchg
cld
mov
outsl
add
inc
mov
dec
popf
cmp
rorb
shrb
sbb
orl
sbb
cmp
inc
sub
add
pop
push
movsl
in
and
nop
jg
push
jbe,pt
fbld
movsl
jnp
jbe
cmpsl
mov
push
leave
cmp
aaa
into
movsb
pop
jg
mov
imul
push
adc
arpl
xor
popf
jmp
leave
xor
mov
stos
scas
loope
rorb
jl
lods
sbb
dec
mov
dec
mov
stos
sub
add
and
add
or
mov
dec
adc
mov
push
xor
mov
cs
xchg
jmp
sti
ficoms
adc
pop
imul
and
xchg
aas
add
adc
push
cmp
aas
mov
inc
pop
js
scas
shlb
add
pop
xor
leave
ljmp
sahf
xchg
mov
in
stc
in
scas
adc
dec
push
iret
dec
sub
xchg
dec
test
push
sbb
xchg
repz
or
sarb
int3
xchg
movsb
mov
and
sub
arpl
jo
push
jne
aam
daa
xor
mov
outsw
cs
pop
push
pop
and
mov
shll
cmp
call
and
push
mov
std
fstpl
es
fs
iret
mov
xor
cmp
lods
cs
xor
mov
enter
add
mov
jno
add
gs
jbe
mov
ret
mov
fistpll
rcrb
mov
inc
push
lret
jge
mov
or
adc
stc
or
jno
jno
gs
xor
daa
mov
dec
mov
push
filds
add
sbb
xor
pop
hlt
pusha
fidivrl
jl
loopne
int
pop
adc
rcrb
pop
fistpl
bnd
mov
in
dec
dec
mov
lods
lods
jbe
test
lds
hlt
fs
clc
mov
repz
movsl
mov
inc
push
out
ljmp
cltd
imul
mov
sub
das
pop
imul
xchg
mov
mov
mov
xchg
xor
nop
in
cmp
sbb
add
adc
sarb
pop
jno
add
lock
repz
out
lods
insl
jge
mov
mov
leave
ret
lret
pop
pop
push
fmul
lret
pop
sub
mov
cmpsb
rorl
jno
int
xchg
dec
js
test
int
stos
gs
mov
sbb
shrl
aaa
sbb
aas
stos
push
xchg
adc
js
imul
push
push
nop
cmp
les
push
cmc
inc
pop
dec
shrl
push
adc
lock
mov
mov
popf
xchg
and
fs
sbb
mov
in
ds
sub
arpl
scas
lret
cs
cmp
nop
mov
push
pop
jl
and
pop
repnz
push
adc
rol
loopne
jmp
or
xlat
test
add
cmc
cltd
call
jns
and
xlat
sub
jle
imul
dec
adc
cmpsb
inc
lods
xchg
adc
nop
les
add
movsl
add
dec
or
cmpsb
or
out
or
and
lret
push
pop
ss
jmp
fists
push
push
pop
gs
push
dec
outsl
push
mov
jnp
xor
fsub
mov
sub
sbb
inc
sbb
xor
inc
leave
add
imul
mov
mov
mov
jae
add
jbe
mov
lret
jns
add
in
roll
sbb
loopne
aas
aaa
jnp
ljmp
icebp
stos
cld
push
add
or
or
fistpl
shl
or
push
nop
jo
adc
or
add
aad
xchg
or
jmp
je
fcoml
outsl
sub
sub
outsl
ja
add
out
or
xor
shlb
imul
sbb
cwtl
cld
addr16
scas
add
clc
ret
shrl
push
add
push
xchg
mov
xor
rcrl
push
inc
test
roll
orl
inc
roll
mov
fimull
das
sub
mov
das
repnz
addr16
imul
jp
test
loope
sbb
push
fsub
jge
imul
ja
push
loop
shl
or
testb
gs
out
je
inc
pop
ret
mov
inc
mov
loope
xchg
idivb
cmc
aad
jne
fwait
ja
or
or
jne
lock
stc
fisubrs
fdivrs
sub
dec
popf
shll
roll
pop
push
dec
jno
mov
and
cmp
jns
jg
lahf
gs
outsb
pop
and
jmp
pop
xchg
push
mov
mov
clc
jle
into
mov
push
adc
cld
shrb
xorl
lret
mov
lods
lret
dec
dec
test
loop
add
inc
ds
pushf
jle
fwait
add
pop
dec
cltd
and
mov
sbb
jnp
adc
lods
out
icebp
jle
push
or
cmp
lret
out
fs
adc
pushf
or
xchg
push
xchg
or
pop
outsl
dec
dec
push
xlat
or
insl
xchg
dec
xor
sub
xor
outsl
insl
mov
icebp
cmc
xor
out
unpcklps
les
or
bound
jnp
cmp
shrl
in
or
bound
pop
jae,pt
mov
stos
cmp
lods
repz
data16
inc
stos
jne
std
and
jle
jle
sub
xchg
repz
adc
das
push
dec
push
js
mov
loopne
xchg
mov
lahf
jl
into
adc
xchg
nop
repz
add
fs
pop
cli
push
mov
add
xchg
stc
jo
xlat
clc
xchg
push
repnz
sub
xchg
mov
mov
fwait
push
mull
cmc
aas
hlt
jp
jne
pusha
in
hlt
push
jp
mov
lcall
sbb
ja
push
pop
jmp
add
cmp
lock
sbb
ret
mov
push
stos
mov
clc
xor
test
add
xchg
prefetchw
int3
mov
jns
in
das
sbb
or
add
testb
gs
add
cs
mov
inc
push
inc
mov
fistl
cltd
fwait
pop
imul
xchg
inc
push
test
adc
xchg
bound
je
fcmovnu
mov
lods
popl
jns
sbb
mov
out
inc
jae
dec
cli
scas
and
mov
loop
shlb
sub
stc
enter
mov
adc
cmpsl
dec
movsl
sbb
addr16
aas
xlat
dec
inc
int3
inc
movsb
mov
dec
mov
bound
rcll
iret
lahf
ja
mov
pop
aam
push
push
mov
xchg
mov
test
out
xchg
adc
lea
popa
test
loope
sbb
sub
bound
mov
xchg
and
lods
jecxz
add
mov
leave
andb
cmc
icebp
jge
pop
adc
mov
pop
jg
das
arpl
test
mov
lds
inc
add
or
dec
jmp
pop
sbbl
outsb
jo
add
mov
cmp
pusha
jmp
push
and
jg
aaa
sub
sub
xchg
popf
mov
sub
in
adc
mov
cmp
mov
int3
addl
add
push
pop
shlb
fs
shlb
scas
mov
push
jbe
or
out
fcompl
lea
repnz
adcl
sbb
xor
rolb
jne
pushf
inc
sbb
jmp
loopne
cmp
ret
cmp
or
rcrb
mov
lods
popa
fldenv
movsb
stc
push
mov
xchg
insl
shl
cmp
xchg
adc
inc
je
mov
fwait
int
fsub
imul
test
sbb
jno
fisttps
sub
loopew,pt
dec
jnp,pt
dec
scas
test
fs
jb
lret
cwtd
pusha
mov
dec
data16
pop
cwtl
aas
hlt
mov
ljmp
push
inc
mov
sbb
fdivr
addr16
sub
xor
repz
andl
push
out
xchg
jmp
push
mov
cmp
push
jb
lcall
in
jno
out
loope
cld
lahf
cltd
push
icebp
add
xor
inc
test
cmp
push
cld
push
pop
fsubr
out
int3
fbld
sub
popl
adc
repnz
shl
sub
cltd
cli
xor
icebp
cmp
jp
adc
loop
cmpsb
jmp
ret
mov
adc
xorb
pop
in
ret
mov
pop
cwtl
fildll
aas
fidivl
test
in
pop
pop
movsb
push
jp
or
sbb
mov
and
sti
xor
testl
xchg
pop
mov
jb
sub
addr16
or
xor
test
test
outsb
mov
dec
jnp
jge
add
mov
out
je
int3
clc
insl
adc
inc
sub
stos
and
xor
mov
lods
js
mov
or
jge
push
ljmp
loopne
mov
loope
lods
mov
lea
xchg
mov
or
lods
adc
xchg
popf
fisubrs
mov
test
pop
or
sarb
jne
ret
fwait
sbb
mov
or
xchg
lahf
xor
fwait
jne
dec
lcall
stos
data16
fmuls
ljmp
and
fcomps
jecxz
jle
dec
fiaddl
or
mov
mov
cwtl
adc
hlt
mov
sub
mov
pop
push
leave
int
lret
and
fsubrs
mov
insb
shrb
mov
jecxz
mov
mov
jmp
call
lods
mov
push
or
or
sbb
add
and
mov
lret
jbe
cltd
xchg
or
ds
jge
in
pop
add
mov
xor
push
decl
sbb
push
pop
out
dec
push
fs
jb
push
jae
sub
int3
popa
xchg
sub
clc
into
cli
jae
andl
cmova
les
ret
lea
inc
mov
gs
lahf
psubsb
mov
les
add
or
push
mov
gs
ljmp
or
movsb
dec
sti
cmpsb
sbb
shll
or
bnd
or
adc
sbb
cmp
pushf
jo
in
fisttpll
cs
cmp
jl
sub
out
xor
jmp
lds
and
imul
mov
push
xor
mov
iret
xlat
shrl
adc
in
dec
inc
cmpsb
dec
mov
loope
ret
xor
cmpl
inc
push
inc
scas
jo
pop
sbb
out
inc
xchg
jge
push
out
js
push
cmp
ret
sbb
pop
out
jg
std
lock
aad
pop
sub
cld
aas
fldt
inc
cmp
scas
or
jne
jae
out
or
xchg
adc
fnstcw
pop
push
mov
add
or
ds
or
int
or
sahf
inc
mov
xor
cltd
mov
and
shrl
dec
shl
stos
inc
cmp
or
das
jae
nop
sahf
mov
fisubs
xchg
mov
lcall
jp
sti
inc
mov
add
push
mov
jns
add
mov
out
inc
mov
dec
jle
inc
shrl
lahf
pop
push
adc
pop
dec
adc
addr16
call
or
mov
dec
test
call
sbb
push
bound
ds
or
add
int3
cmc
inc
lock
daa
pop
clc
mov
and
test
jne
sti
in
add
mov
mov
pop
jp
or
pop
leave
outsb
into
pop
mov
popa
mov
adc
sub
adc
in
lods
jbe
adc
mov
adc
outsl
lods
or
mov
xchg
pop
inc
cmp
xor
loop
les
xchg
xor
mov
and
ficoms
sub
sub
aad
sub
mov
xchg
dec
cmp
mov
jle
jbe
jbe
or
icebp
imul
loop
mov
fstps
pop
add
mov
sbb
mov
lret
push
lea
dec
sub
ficomps
inc
cmp
xor
push
fsubrl
or
push
and
mov
mov
enter
adc
les
scas
frstor
lahf
int
aam
pop
mov
aad
jbe
das
and
dec
adc
arpl
sahf
and
push
inc
mov
lods
outsl
mov
push
addr16
mov
call
in
ss
push
icebp
pusha
mov
mov
jb
sub
std
jbe
xor
out
hlt
or
push
xor
subl
es
insb
add
push
xchg
xor
mov
cmp
daa
mov
ljmp
stos
jp
push
mov
fistl
sub
jnp
popf
jno
mov
mov
add
lods
jecxz
fdivrs
in
jo
or
and
es
push
and
ffreep
sub
cs
dec
fisubrs
mov
jge
mov
movsb
dec
pop
adc
inc
jae
mov
add
ja
sbbl
mov
xchg
mov
mov
xchg
xchg
in
xchg
push
jne
outsl
cs
inc
pop
pop
cmpsb
imul
and
iret
bound
xor
add
jle
mov
clc
lret
nop
ja
subb
das
mov
shll
lahf
sub
sub
xchg
mov
and
shlb
fucomp
fcomp
imul
adc
stc
jg
jmp
jb
loope
adc
loop
mov
pop
movsl
xor
sti
push
movsb
inc
mov
pop
inc
rclb
dec
mov
arpl
mov
mov
fs
cwtl
and
dec
sarl
mov
gs
out
dec
sub
add
dec
insb
lret
xchg
fistl
fmul
jmp
jp
data16
jnp
mov
fisttpl
fadd
lahf
iret
mov
mov
insb
mov
subb
pop
xchg
jecxz
dec
jno
pushf
xchg
addb
sbb
insl
inc
mov
jmp
mov
lahf
cmp
pop
aaa
imull
icebp
xchg
out
sbb
andps
sbb
std
lds
mov
push
sbb
mov
adc
ss
xchg
cmp
mov
xchg
lcall
xchg
inc
xor
movsb
inc
jecxz
in
push
mov
dec
in
fs
jmp
mov
int
ljmp
pop
mov
nop
pop
loop
rcll
mov
cld
pop
stc
push
aad
out
sub
pop
adcl
jg
lret
xor
lea
dec
lods
sub
loopne
push
icebp
cld
jbe
neg
sub
adc
shlb
cli
int3
ss
mul
pop
jl
cmp
jmp
cwtl
stos
mov
test
and
imull
lods
mov
lea
xchg
jb
xchg
jb
orb
dec
icebp
scas
mov
jle
sub
test
pop
jo
sbb
xor
xor
xor
outsl
inc
mov
into
add
pusha
dec
dec
ds
stc
xchg
in
mov
dec
sub
xor
in
or
sub
das
mov
push
outsb
outsl
sub
dec
into
pop
and
cltd
mov
rol
xor
das
dec
popa
push
cmpsb
cld
push
jno
inc
mov
fsubrl
mov
fstpt
je
in
jecxz
lods
jg
out
and
ret
gs
sti
jg
xor
push
xor
loope
push
clc
or
xor
imul
std
loopne
xor
mov
inc
xor
add
ds
mov
add
and
mov
xchg
lods
mov
xchg
dec
loopne
cmp
add
sub
pop
loopne
cmp
xchg
adc
mov
cwtl
aad
lds
icebp
cmpsl
lods
pop
fildl
jbe
cld
mov
push
jae
shrb
fisttpl
sarl
insl
inc
and
gs
adc
rorl
push
stos
test
daa
mov
daa
mov
popf
push
and
ss
aas
loopne
outsl
sub
push
cltd
inc
test
and
xchg
jge
or
bound
mov
in
mov
aad
sub
ja
test
jg
xchg
mov
addr16
gs
pop
data16
icebp
mov
dec
adc
xchg
and
aam
lret
sti
cmp
les
pop
lods
test
cmp
ret
lods
das
lds
mov
aam
and
mov
lret
mov
mov
pop
out
movsl
jb
sarl
ljmp
es
outsb
lds
fneni(8087
push
aad
test
adc
xchg
pop
push
add
cwtl
test
lahf
cmp
insl
loopne
sahf
adc
pop
push
sahf
cmp
mov
dec
or
ss
mov
jbe
lds
and
and
mov
movsl
scas
test
es
cmp
sti
jo
lcall
stos
mov
dec
sbb
jne
dec
adc
rclb
fsubl
dec
and
adc
cltd
mov
loopne
mov
stos
cmpsb
xchg
xchg
and
jp
in
cs
in
or
push
and
pop
ret
mov
push
inc
mov
aam
mov
mov
jo
addr16
insb
and
ss
pushl
pop
or
mov
ss
inc
cli
movsl
lcall
mov
sbb
ret
add
add
cmpsb
in
sbb
cli
cld
push
arpl
cmp
cmp
inc
cmp
fisttpll
push
mov
movb
inc
xchg
push
pop
fmull
push
test
mov
mov
decb
test
fdivl
push
or
sub
jl
pop
and
imul
mov
das
sbb
dec
dec
inc
mov
movsb
fiadds
inc
std
sti
hlt
lds
fsubs
adc
or
scas
ljmp
xlat
and
int
gs
cli
jge
xor
js
xchg
mov
cmp
pop
mov
pop
idivl
mov
xor
mov
pop
scas
lds
mov
fisubs
inc
pop
sbb
and
sbb
loopne
mov
sub
pop
mov
scas
divl
bswap
inc
jmp
sbb
push
gs
push
test
xlat
jmp
daa
mov
popa
imul
cmp
push
fwait
mov
orb
and
xchg
jle
mov
lret
mov
imul
sti
je
xorl
addr16
lret
pop
sbb
or
cmp
dec
pushf
lea
or
push
fadds
mov
aaa
mov
insb
cld
pop
add
call
out
jne
repnz
rcl
popf
xlat
bound
inc
sub
inc
call
popf
pop
push
add
out
jno
adc
dec
add
and
add
out
lea
out
std
mov
rcrb
scas
fistps
mov
test
data16
mov
add
gs
inc
fisubrl
jbe
pop
pusha
mov
loopne
xchg
xor
mov
nop
rorl
jbe
imul
or
xor
xchg
xchg
pop
fwait
mov
loope
clc
add
xchg
xchg
packssdw
mov
sbb
idiv
cmpsl
push
adc
mov
push
mov
lock
or
iret
icebp
ret
push
xchg
test
xorb
xlat
mov
inc
mov
mov
push
jbe
outsb
andl
pop
fdivl
push
mov
out
dec
cs
push
mov
xor
sbb
imul
lds
jg
pop
add
push
movsl
pop
mov
or
push
out
inc
inc
push
push
lock
xor
jg
cmp
mov
push
push
cmpsb
icebp
mov
fwait
sahf
mov
or
rcrb
lock
pop
or
cmc
in
mov
es
xor
mull
out
daa
jp
test
dec
mov
fcmovne
xchg
fisubs
push
cmpsb
fwait
sahf
or
cs
pop
sti
loop
aas
jbe
and
and
inc
pop
sbb
or
pushf
leave
or
sbb
mov
fistps
scas
popa
es
je,pn
outsl
sbb
fsts
and
fistpl
sarb
xchg
loopne
and
and
dec
call
inc
fstps
test
jecxz
mov
aas
jmp
xchg
push
mov
push
mov
mov
das
sbb
sbb
test
adc
jge
dec
orb
cmc
jle
mov
out
push
ds
nop
sti
mov
xchg
lahf
pushf
xchg
and
xchg
and
pop
inc
mov
incb
dec
and
mov
lock
dec
cmp
je
sete
push
call
inc
push
mov
mov
push
loopne
adc
sub
stc
inc
mov
mull
or
lds
inc
scas
mov
jbe
icebp
sub
lods
ret
push
into
pop
enter
out
dec
cmp
js
js
xchg
xchg
lods
lock
outsb
xchg
popa
cld
push
sub
pushw
ljmp
aas
add
push
pusha
dec
adc
mov
mov
fcompl
xchg
ret
jo
js
sti
popa
dec
xchg
nop
sub
add
inc
cmp
icebp
dec
mov
test
in
jl
int3
xor
pop
xchg
movsb
test
int3
xchg
inc
cmc
imul
pop
xchg
pop
xor
popa
fidivs
sub
loopne
mov
out
and
pop
lret
ret
push
out
push
imul
in
fsubl
jns
push
or
arpl
cmp
jge
enter
rorb
add
push
cmp
inc
gs
hlt
cmc
lcall
lock
jl
mov
lods
lret
out
xchg
out
jle
mov
ja
xchg
ret
int
and
ret
and
stos
mov
ds
fistps
and
leave
push
and
cld
mov
lods
xchg
popa
and
cmc
mov
xchg
arpl
sub
push
mov
lret
sbbb
jg
xchg
add
in
push
jle
scas
sbbb
testb
out
jne
mov
pushf
or
mov
mov
xor
xor
out
mov
imul
data16
sub
js
pop
dec
dec
aaa
mov
notb
daa
pop
push
pop
in
pusha
outsl
push
int
sub
rcr
sub
mov
mov
andb
xchg
sbb
dec
gs
xor
or
lods
clc
cltd
push
jmp
aaa
mov
push
push
and
inc
jmp
pusha
jbe
jmp
out
push
pushl
jge
pop
cwtl
and
test
jb
fwait
cmpsl
cmpsb
scas
push
mov
pusha
add
xor
gs
mov
xchg
jno
popf
adc
sbb
xchg
push
stc
mov
sub
adc
daa
push
int3
or
leave
dec
stc
imul
sub
in
dec
fsub
xchg
sbb
jge
ret
dec
rcr
jno
mov
cmp
adc
xor
push
mov
xor
scas
mov
pop
in
and
jmp
std
xchg
pop
ds
enter
loop
add
push
sbbl
rcrb
scas
cmpsl
pop
dec
leave
adc
sahf
push
enter
inc
addl
adcb
adc
jge
popa
call
sbb
mov
cs
clc
mov
or
add
xchg
mov
loopne
xor
jbe
imul
popf
out
inc
ljmp
lods
cwtl
divb
divb
mov
mov
mov
mov
dec
add
mov
iret
movsl
inc
les
popf
add
pop
xchg
aam
dec
mov
inc
pop
imul
leave
mov
movsb
mov
pop
sbbl
repnz
js
je
sti
iret
and
int
int3
std
mov
xchg
dec
in
cmpl
mov
pop
sbb
and
ds
ret
xor
mov
cs
inc
mov
bound
ffree
inc
cmpsb
les
and
in
jne
subl
cmc
mov
mov
in
pop
and
out
mov
rclb
mov
cmp
aaa
or
xchg
mov
mov
mov
jmp
les
rcl
mov
dec
int
fwait
imul
sub
sub
jns
rclb
loop
aaa
or
in
cltd
or
sub
js
orl
ret
adc
jno
adc
and
xchg
subl
es
insl
les
ret
add
test
fdivrp
sub
std
std
repnz
mov
mov
mov
cmp
loope
mov
fsubr
sar
imul
xorb
pushf
cwtl
jnp
mov
jns
mov
ja
and
xchg
sbb
sahf
iret
imul
fcom
jmp
fsubl
mov
shl
les
cwtl
sub
mov
test
xchg
lret
adc
fmuls
cmpsb
xchg
clc
mov
cmp
fildl
lods
sbb
fistl
jne
mov
test
cmpsb
outsl
sti
and
das
dec
or
and
pop
pop
ds
or
inc
sbb
sbb
adc
icebp
mov
sbb
xchg
add
les
mov
movsl
push
inc
pop
cmp
out
mov
xor
stc
cmp
and
jp
xor
rorb
jae
insb
aas
jl
dec
ljmp
lret
shrl
test
xchg
mov
sub
sub
xchg
mov
fchs
sub
xchg
adc
sbb
test
push
imul
xchg
cwtl
sub
xor
and
outsl
add
add
inc
sub
into
shl
mov
mov
popa
push
sti
call
negl
jp
test
inc
pop
fcmovu
fsubrs
lds
xchg
fisttpl
popa
mov
mov
cmp
push
xchg
and
fsubs
inc
lods
aas
cmp
mov
xchg
les
push
xchg
enter
pop
xchg
push
fstl
mov
sbb
ljmp
cwtl
and
xor
mov
push
fndisi(8087
sub
les
jno
lret
add
movsb
adc
sub
xchg
data16
or
inc
lods
outsb
inc
add
mov
jbe
flds
adc
cs
call
adc
ficompl
mov
enter
sahf
jb
or
cmp
jecxz
insb
neg
push
insl
stos
sub
cmp
in
out
sub
cwtl
call
xchg
incb
imul
dec
bnd
outsb
and
cld
and
jns
fs
xor
ljmp
cmp
mov
rorl
cmpsl
dec
push
ss
push
into
dec
or
insb
aaa
or
flds
sbb
mov
or
or
mov
sbbl
cmp
jo
xchg
sub
xchg
push
cmpsb
jmp
adc
int
pop
jg
fs
and
loope,pn
outsb
or
xchg
cmpsb
jecxz
fs
test
jno
rcrl
sbb
pop
in
sahf
cmp
incb
or
pop
sub
xchg
push
jbe
gs
sub
decb
iret
mov
cld
pop
xchg
in
cli
insl
fcmovnu
stos
xchg
add
push
mov
mov
fcompp
mov
cmp
xor
rorl
dec
or
bound
or
fisttpl
lods
and
and
xor
sti
fcomps
pop
or
mov
ror
das
push
lods
pop
or
cmpl
insl
and
idivb
lods
sbb
mov
orl
pop
xor
push
ljmp
test
daa
pop
pop
notl
int3
clc
ja
pop
loope
mov
push
xchg
pop
clc
shlb
mov
push
mov
pop
pop
and
jnp
icebp
jno
int3
pop
mov
mov
fs
fidivs
inc
dec
dec
imul
xlat
adc
add
xchg
andl
scas
xorl
mov
movsl
xor
cmp
xor
xor
cli
mov
outsl
adc
stos
lods
jmp
jns
cmc
inc
pop
push
imul
or
cmp
loop
sbb
mov
aam
loope,pt
in
mov
mov
push
rclb
jbe
daa
cmp
pushf
push
lods
and
pop
nop
pushf
test
jl
push
stos
mov
movnti
rcr
adc
arpl
int
mov
repz
pop
pushf
test
data16
lret
int
sbb
push
fbstp
sbb
cmp
mov
imul
dec
out
xchg
pop
repz
out
mov
jle
bound
sub
out
adc
addl
jns
push
mov
or
dec
jbe
mov
push
dec
jne
aas
movsl
xchg
test
add
adc
sub
fisttpll
inc
sub
add
push
mov
pop
cltd
stc
cmp
addr16
push
gs
xchg
dec
mov
testl
ds
dec
lret
mov
push
stos
leave
jp
out
inc
pop
jle
jmp
inc
and
or
mov
movsb
fcom
ficoml
js
and
in
cmp
test
pop
pop
or
jns
adc
mov
out
cmp
jg
repnz
jp,pt
pop
leave
xor
jecxz
cmp
mov
mov
out
or
imul
repnz
sbb
scas
sbb
sbb
fisttpll
dec
add
filds
adc
push
push
addr16
xor
pop
imul
ljmp
sub
push
sub
test
sbb
adc
pop
ja
data16
cmp
sub
xchg
sbb
cld
jae
scas
dec
stc
imul
cli
dec
sbb
lds
xchg
add
imul
and
in
jecxz
daa
add
sbb
dec
cmp
fnsave
mov
add
pop
xor
and
mov
adc
pop
dec
jmp
sbb
jns
enter
dec
push
add
mov
push
repnz
pop
test
insb
jecxz
xchg
cmpb
jmp
cmpsb
pushf
sar
xchg
push
shlb
pop
pushf
stc
sbb
jnp
shll
add
stos
repz
je
adc
xchg
mov
jbe
mov
bound
dec
mov
cmp
ljmp
lods
test
sub
jae
and
dec
inc
xor
push
jge
mov
int
adcl
mov
ss
sbb
insb
int
repnz
ljmp
xchg
mulb
data16
push
add
jge
sub
decb
lock
fstps
sub
call
sbb
scas
cwtl
xor
jne
repnz
pop
stos
es
ljmp
into
imul
dec
xchg
movsl
nop
lods
add
data16
cmp
jg
cmc
call
push
jo
ss
gs
not
roll
aas
imul
rcrl
cwtl
mov
xor
lret
cltd
jp
leave
add
lods
mov
ret
jg
data16
or
divb
repz
xchg
jb
xor
pop
sbb
popa
shrb
push
iret
mov
arpl
popf
pop
jo
push
push
sbb
cli
out
fnstcw
mov
xchg
je
push
push
cld
scas
pop
aas
cmp
sub
iret
mov
orl
cld
fimull
mov
ljmp
dec
pop
mov
out
mov
inc
dec
dec
lret
adc
loopne
lret
ljmp
xchg
xchg
inc
push
jne
stc
pop
ja
mov
test
aam
push
les
pop
jge
jp
pop
sbb
jmp
jo
xchg
mov
stc
add
jl
mov
or
mov
xorb
insb
js
mov
or
jno
jecxz
cmp
aam
in
mov
or
pop
in
add
fldl
lcall
fwait
les
out
jns
pop
pop
xlat
jge
inc
lds
lahf
and
insl
andl
xchg
pop
add
lea
pop
cmp
sbbl
lcall
cmp
leave
mov
mov
icebp
adc
mov
jmp
xchg
and
dec
andl
ret
jle
stos
and
adc
addr16
sti
mov
jecxz
push
jge
cld
or
jp
mov
fistl
jo
imul
adc
adc
mov
ja
or
mov
bound
shrb
mov
into
ret
test
mov
sbb
shlb
popf
jge
pop
or
pop
fwait
iret
dec
and
xchg
mov
cltd
dec
mov
inc
sarl
ss
sub
xor
sahf
dec
adc
jo
push
inc
leave
dec
cmp
loopne
inc
lea
imul
mov
nop
inc
in
dec
mov
jno
fidivrl
das
call
sbb
les
push
inc
gs
mov
iret
cs
adc
cmp
mov
mov
lods
dec
adc
imul
mov
das
mov
or
pop
cld
adc
int
movsl
mov
imul
jecxz
jo
jbe
xchg
or
sbbl
pop
mov
mov
or
mov
mov
push
jge
mov
inc
add
sbb
jne
adc
bound
cmp
iret
subl
or
sub
mov
fimuls
vunpcklpd
xchg
add
lock
inc
aas
pop
aaa
dec
jmp
xor
fld
pop
mov
rolb
fimuls
sbb
int3
mov
inc
adc
inc
push
adc
inc
sbb
inc
fiadds
outsb
sbb
aaa
cmpsl
and
pop
cld
repnz
imul
vpmaxsw
faddl
mov
mov
aas
call
iret
adc
sub
sub
add
add
subl
push
or
jno
dec
sti
and
jge
daa
loope
and
fwait
in
mov
cmp
nop
pop
mov
dec
stc
lock
push
mov
leave
insb
ret
pop
cld
mov
sbb
adc
lcall
cwtl
sub
fcoml
int3
jmp
sti
sbb
test
sbb
inc
adc
movsb
mov
mov
mov
enter
sub
fcoms
or
in
mov
lods
cmp
loop
cmp
sub
and
pop
mull
imul
sbb
xor
stc
pusha
add
sub
sbb
aaa
ds
xchg
repnz
pop
fistpl
lods
pusha
fsubr
and
sti
cmp
fidivl
xor
leave
mov
or
movsl
aaa
bound
mov
mov
pop
xchg
call
mov
cs
or
mov
outsl
adc
xor
mov
add
clc
mov
inc
mov
negl
insl
mov
and
std
lods
je
or
push
leave
mov
cmp
repz
imulb
inc
loop
sbb
xor
addr16
xchg
divl
mov
shl
pop
das
outsl
arpl
push
inc
sub
outsb
inc
inc
movsl
cld
pop
adc
out
jno
sbb
xor
in
test
aas
jne
fbld
sahf
js
out
lock
mov
mov
clc
pop
mov
shrl
inc
out
sub
or
xchg
pop
icebp
xor
sbb
lods
sti
notl
cmp
leave
inc
idivl
inc
xlat
mov
push
lcall
add
imul
ret
mov
xor
inc
outsl
sbb
repz
ret
inc
jns
cli
xchg
adc
adc
mov
jne
addb
mov
inc
popf
sub
jg
sub
push
sub
scas
push
mov
addr16
leave
xchg
jnp
inc
push
lea
jge
xchg
aam
imul
cmp
in
mov
push
loopne
in
push
mov
fistpl
push
loopne
fsubs
ret
dec
xchg
add
in
inc
addb
and
cmp
ljmp
and
jne
fcompl
and
adc
push
push
xor
insb
testl
mov
push
sub
mov
and
inc
lahf
lods
or
ret
adc
mov
loopne
pop
mov
inc
add
add
adc
sbb
mov
jno
nop
aas
pop
cmp
cmc
and
sarl
push
das
sub
xchg
sub
jb
mov
mov
insb
mov
xchg
les
into
or
insb
mov
mov
mov
jns
cmp
es
and
sbb
test
lods
mov
mov
in
lods
out
jg
pusha
xchg
mov
xchg
sbb
pop
js
loop
push
fisubrs
cmp
mov
jbe
outsl
mov
jge
mov
sub
pop
xchg
inc
jl
cs
std
lea
mov
and
movsb
lret
pop
mov
add
sbb
icebp
sti
dec
dec
in
inc
xor
mov
or
out
jne
inc
dec
add
pop
es
dec
xor
cs
std
lods
stc
cmp
imul
pushf
or
ret
mov
xchg
sbb
and
or
jnp
mov
aaa
mov
jne
sar
ss
cmp
aas
push
adc
mov
jae
lahf
mov
mov
sub
nop
mov
sbb
test
int
adc
xor
lret
out
pop
stos
push
pop
inc
cltd
and
jo
xchg
movq
ret
mov
mov
push
out
mov
xchg
scas
aad
add
mov
xchg
xchg
mov
jo
mov
fdivs
adc
stc
jp
mov
dec
and
pop
cli
movsb
ss
outsl
orl
mov
jbe
pop
or
sub
inc
bound
into
movsb
mov
fisttps
and
es
data16
loop
mov
insl
push
mov
jmp
jb,pt
fwait
jmp
mov
ljmp
pop
lret
mov
movsb
push
push
addb
fdivr
jle
loop
sbb
dec
addr16
push
sub
mov
dec
mov
movsl
sahf
movsb
fstpt
pusha
jmp
fdiv
scas
sub
mov
jnp
xchg
mov
test
add
push
cmp
and
out
add
dec
xor
insb
adc
xchg
sub
cmp
inc
fnsave
jbe
add
mov
fists
mov
add
add
xchg
sbb
in
pop
or
mov
daa
aad
std
orl
push
out
lret
ljmp
imul
lds
ficoms
das
stos
or
loope
push
inc
ljmp
pop
rol
xor
inc
inc
dec
pusha
int
fdivs
xor
aam
je
pushf
cwtl
adc
cmp
lods
or
xchg
cmp
aad
cmp
pushf
scas
aaa
test
bound
movsl
mov
sbb
sub
sar
bound
pop
pop
inc
add
inc
mov
cmp
xlat
and
stc
pop
rcrb
into
xchg
mov
xor
dec
imul
or
int3
sti
sub
pushf
repz
pop
fnsave
push
mov
mov
repz
inc
xlat
mov
cmc
inc
pusha
dec
movsl
rorl
adc
divb
pushf
loopne
mov
repnz
add
out
cld
sahf
shlb
mov
cmp
mov
divb
leave
and
push
pop
xor
xchg
mov
lahf
jo
fidivrs
sub
addr16
push
xchg
fnsave
sub
cmp
mov
or
xchg
daa
mov
stos
xchg
mov
jmp
sbb
mov
jnp
xchg
xor
dec
pop
aad
or
fldenv
outsl
xchg
lahf
mov
mov
jnp
mov
outsl
push
xchg
adc
ret
stc
push
fadds
pop
cmp
loop
inc
mov
inc
shl
fsts
dec
mov
ret
out
imulb
test
sahf
cmp
add
cmp
cmc
xlat
mov
cmp
fsubs
sbb
cltd
inc
add
inc
and
icebp
sbb
cmp
adc
inc
out
insb
popf
cmpsb
insb
fwait
add
in
je
push
dec
adc
add
out
push
xchg
xchg
fcmovnb
cmpsl
xchg
push
mov
bound
sub
sbb
cwtl
imul
adc
xchg
lock
mov
imul
out
pop
jge
repnz
push
scas
mov
jbe
jmp
ret
sub
test
pop
roll
leave
and
push
imul
je
notb
add
loopne
in
sub
lahf
dec
dec
adc
pushf
sbb
rol
cmp
sub
inc
add
outsl
sub
xor
out
mov
pusha
out
adc
mov
test
xchg
out
int
loope
in
add
test
sarb
clc
mov
jmp
add
cmp
lcall
dec
xor
fcompp
fildl
sti
loop
xchg
fstl
ljmp
dec
dec
cmpsb
aaa
loop
jge
hlt
mov
es
push
inc
imul
gs
sub
scas
xor
insb
mov
daa
cmpsb
repnz
dec
js
scas
jne
mov
test
sbb
xchg
std
mov
lods
adc
jns
loopne
and
pop
cmp
adc
cmp
fwait
aaa
mov
xor
cmp
add
repnz
add
jns
push
xor
sbb
xor
out
push
adc
addr16
xor
daa
lea
in
fsub
lock
out
mov
fucomp
sbb
cmp
dec
sahf
lcall
xor
outsl
pop
pop
jg
push
idivb
scas
or
push
pop
sbbl
imul
mov
lods
mov
sub
daa
incb
mov
mov
jl
push
icebp
test
cwtl
jb
cs
into
adc
add
mov
add
push
mov
stos
dec
leave
stos
sub
int
jno
cld
icebp
add
push
pop
push
jns
out
adc
jge
aad
lcall
ljmp
xlat
sub
or
xchg
mov
pop
cltd
outsb
sti
push
pop
dec
ret
sbb
jg
outsl
lods
push
lret
fsubrl
fbstp
mov
or
or
aam
push
dec
outsb
inc
mov
cmpsb
push
mov
scas
xor
jae
mov
cmp
sub
push
mov
les
ja
xchg
mov
adc
adc
mov
pop
arpl
cmp
lahf
lods
sub
xor
inc
arpl
dec
mov
xor
push
jne
inc
adc
pop
xchg
leave
jle
dec
or
inc
xor
jne
int3
pushf
call
add
fmul
enter
pop
jb
add
out
push
mov
lahf
mov
mov
xor
pop
ljmp
cmpsl
inc
loop
arpl
test
ret
adc
and
fwait
shl
add
push
rcl
and
inc
xor
adc
imul
push
fnstcw
cli
cmp
daa
adc
daa
arpl
mov
pop
xor
cmc
xorl
rol
sti
mov
and
fcoms
and
aad
arpl
xor
inc
test
xor
sub
xor
cli
or
int
stos
and
jne
cmp
pop
mov
stos
push
fldt
insl
int3
out
and
fisubl
les
pop
in
jbe
lods
rorb
cltd
and
std
lods
inc
mov
push
sbb
pop
pusha
or
add
dec
loopne
dec
dec
cli
aam
stos
push
jg
cmp
cmpsb
in
cmp
pop
or
cmp
outsb
loop
pop
lods
cmp
sub
add
cmp
cwtl
pushf
push
inc
notl
mov
pextrw
jae
sbb
cmc
repz
imul
pushf
mov
mov
cs
ds
xor
or
and
sti
mov
dec
lock
or
adc
or
popl
jne
es
imul
dec
in
or
pop
mov
into
int
pop
adc
jge
imul
scas
jb
es
mov
rol
das
push
ret
fstpt
icebp
test
pop
clc
xchg
sbb
loopne
cwtl
cmp
mov
mov
mov
imul
pop
and
mov
lds
push
popf
xchg
call
aaa
call
cli
shr
add
add
add
adc
xlat
jo
lea
mov
addr16
clc
and
lds
adcb
or
sbb
clc
inc
popl
add
dec
cmpl
insb
sub
cld
movsb
add
inc
js
decb
xchg
mov
cmp
shll
arpl
cmp
and
pop
sub
out
sbb
adc
xchg
rcrl
lods
pop
daa
jmp
test
cmp
rclb
pop
lods
fnstenv
test
sarb
dec
pop
es
in
dec
movb
test
cli
pop
inc
lds
push
sarl
jne
stos
aas
inc
or
mov
sbb
sbb
and
mov
aaa
xchg
xor
popa
sub
jb
jbe
les
aaa
stos
or
mov
cli
mov
in
scas
mov
enter
fwait
xor
orb
xchg
add
jb
lahf
imul
or
sarb
xor
les
repz
call
arpl
pop
and
cmc
push
mov
mov
test
popa
add
inc
and
ret
mov
add
push
mov
inc
jns
sbb
mov
adcl
push
movsl
clc
icebp
push
shrl
sbb
decl
pop
icebp
dec
data16
push
add
pop
cmpsl
add
sbb
fstpl
sbb
push
lds
add
into
call
cmc
sbb
xchg
fisttpl
iret
loopne
sub
dec
ror
nop
cs
xchg
xlat
cmpl
jnp
mov
push
jbe
enter
adc
adc
imul
sbb
nop
pop
in
add
mov
testb
lea
repz
push
xor
popa
xchg
jmp
cmpsl
jmp
rclb
es
cmp
push
mov
jne
mov
cmp
mov
adc
mov
loopne
repz
mov
rorb
lahf
sub
rcl
or
rorb
and
les
xchg
xchg
cltd
out
ret
fwait
sbb
xchg
mov
mov
fldl2t
movsl
mov
sbb
lcall
or
mov
push
push
lahf
out
aaa
aas
adc
pop
insl
adc
in
sbbl
xchg
stos
cs
add
inc
sahf
fnsave
mov
out
push
out
js
mov
and
pop
inc
push
out
mov
mov
sub
pop
shll
clc
adc
push
lock
dec
jmp
adc
in
imul
xchg
ds
inc
out
dec
orb
cmp
jp
sbb
aam
loop
xchg
sar
and
push
xchg
out
dec
fwait
pop
mov
imul
cmp
and
add
aam
push
daa
push
insl
add
or
mov
jecxz
inc
jns
loopne
test
sbb
xor
cmp
or
dec
fisubrs
lods
das
push
xchg
and
mov
mov
test
xchg
cmp
jp
push
mov
jno
adc
jge
fldlg2
leave
sbb
insb
je
rorb
inc
xorl
inc
push
imul
jge
imul
or
scas
sub
sbb
push
sub
lret
loopw
fidivs
add
call
fsubrs
cltd
adc
cmpsb
lcall
push
aaa
jae
xor
outsl
inc
mov
pop
cmpsl
jp
inc
adc
call
cltd
xor
roll
loope
inc
test
or
fwait
pop
testl
dec
xor
sub
leave
xchg
loope
dec
std
fwait
cmp
mov
aaa
mov
mov
mov
lods
mov
xchg
loope
jecxz
jge
outsb
jle
push
leave
mov
mov
push
scas
ss
mov
cltd
xchg
mov
adc
inc
fnstenv
pop
mov
fists
mov
popf
push
mov
push
pop
pushf
mov
or
push
inc
ljmp
out
repnz
ja
xor
cltd
push
mov
rep
into
imul
dec
inc
pop
decb
push
pop
and
cmpsb
jmp
or
cmpsl
mov
dec
orl
aam
das
push
push
movsb
and
cmpb
shrb
xchg
in
ss
pop
mov
stos
push
sbb
lea
fmulp
das
mov
stc
jo
aaa
xor
stos
sbb
stos
sub
enter
bound
lods
adc
nop
push
es
mov
lods
or
xchg
popa
shll
loop
or
mov
ljmp
daa
or
sub
subb
movsb
jne
rorl
fnstsw
adc
jae
jecxz
cmp
test
out
xchg
aas
std
cmp
mov
jmp
js
push
loopne
faddp
fwait
std
fimull
pop
pop
adc
cs
sarl
enter
pop
jns
imul
jle
mov
add
movups
push
loop
stos
int3
lahf
out
or
inc
mov
inc
fimull
popa
push
rorb
and
pushf
sbb
mov
ja
pop
push
out
dec
push
pop
sbbl
push
sti
shr
and
test
cmp
in
push
lods
iret
mov
cmp
mov
ds
cmp
je
std
push
repnz
adc
cmc
jmp
push
cmp
hlt
sub
iret
rolb
add
lcall
pop
fbld
icebp
dec
iret
mov
adc
popf
ja
pop
sbb
aas
and
and
repnz
shll
lds
and
adc
imul
daa
mov
dec
data16
cmp
int3
and
mov
ljmp
push
ret
sbb
outsl
pop
push
inc
xchg
mov
mov
aam
icebp
mov
pusha
xchg
into
xor
cmp
enter
xchg
mov
lods
push
jbe
icebp
mov
stos
int
lods
cmp
cmp
not
sbb
iret
loopne
adc
pop
and
mov
cmpsl
inc
xor
cmp
mov
ds
icebp
adc
mov
mov
pop
jo
sub
push
movsb
movsb
add
jmp
aaa
in
cmp
test
aas
movsl
and
xchg
push
push
sti
sub
movsl
insb
cmp
incl
rclb
cwtl
std
xchg
fucomp
lds
mov
xor
cwtl
rorl
lret
lret
xchg
and
mov
fistpll
adc
jo
push
mov
push
jae,pn
dec
es
scas
push
mov
pop
out
cmp
imul
adc
or
mov
sbb
push
sub
idivl
push
pop
mov
inc
rcl
sub
cwtl
int3
frstor
repnz
jg
loope
jo
repz
sbb
scas
push
negl
cmp
mov
xor
les
cltd
jno
out
rorb
arpl
xor
lret
add
cmp
out
loope
pop
xor
cmp
je
push
sbb
loop
popf
hlt
add
hlt
cmp
or
lods
imul
mov
icebp
pop
imul
test
clc
cli
inc
cltd
mov
jae
xchg
popa
rolb
cwtl
arpl
pop
adc
pminub
add
add
test
icebp
mov
aas
repnz
cmc
inc
dec
xor
inc
mov
cwtl
ficoml
adc
mov
jno
push
repnz
adc
test
inc
inc
addr16
jnp
pop
in
xor
mov
movl
pop
push
cmp
mov
pop
add
or
insl
mov
and
mov
popa
rcrb
sbb
mov
sub
and
and
jmp
xchg
or
inc
mov
cli
subb
std
push
and
dec
movsb
mov
and
adc
int
mov
xchg
or
mov
ss
jne
pop
fildl
push
outsb
and
add
subb
lea
ror
rcrb
mov
jge
push
jae
mov
nop
add
inc
sub
mov
hlt
push
mov
push
jp
nop
cmc
shrl
cmpl
fucom
mov
lock
mov
mov
das
dec
xor
in
xchg
fnstcw
mov
push
jae
add
sahf
test
repnz
mov
es
cs
adc
pop
xor
imul
add
push
fldt
aaa
jle
inc
ss
enter
or
jo
repz
adc
aaa
movsb
push
mov
cwtl
xchg
and
adc
pop
arpl
mov
mov
lods
jb
ds
lcall
loop
inc
pop
stos
dec
lret
xchg
les
rcrl
rorb
xchg
pop
and
mov
sbb
fs
mov
test
sti
aam
out
mov
hlt
mov
or
sbb
mov
mov
dec
loopne
add
mov
pop
leave
movb
push
lret
repz
sbb
cmp
das
iret
das
pop
lahf
mov
jno
les
dec
lea
xchg
xlat
mov
dec
dec
xor
roll
push
icebp
mov
mov
jl
andb
aas
pop
ret
insb
or
mov
fisubrl
nop
xchg
add
dec
jbe
inc
loope
repz
outsl
cli
cli
mov
sub
pop
mov
xor
jnp
cmp
xchg
cmc
in
mov
or
enter
xchg
pop
sub
aam
in
iret
test
or
mov
popf
mov
cmp
popf
pop
xor
les
lods
dec
out
jae
idivl
std
imul
loop
push
fisubs
or
adc
cltd
addr16
push
mov
jno
daa
into
xchg
out
inc
cltd
les
adc
or
xor
rorl
stc
mov
ds
enter
mov
dec
xchg
jb
lahf
jo
adc
jmp
ss
pop
sub
mov
fimuls
shr
mov
add
pop
cmpb
inc
sub
cli
notl
adc
repz
cwtl
js
xor
lret
out
clc
xor
cmp
test
mov
sarb
fstpt
leave
lea
setne
mov
xor
sti
std
push
mov
and
dec
and
jecxz
or
fisttps
pusha
insb
decb
or
jg
xor
pop
call
out
dec
mov
jbe
mov
xor
fcompl
mov
adc
leave
addr16
mov
fdivs
lds
jmp
push
inc
pop
loop
push
push
jns
popf
test
push
pop
dec
stos
xchg
add
ss
addl
jle
xchg
mov
mov
ljmp
dec
mov
xor
adc
mov
ds
xor
add
jno
sub
pop
out
dec
push
movb
lods
sub
test
out
xchg
cld
sarb
mov
gs
orb
mov
scas
dec
int3
xchg
mov
mov
sub
pop
inc
rorl
fucomp
xchg
mov
addb
or
ss
push
das
leave
xor
mov
in
mov
xor
jecxz
test
movsb
adc
mov
and
adc
cmpsl
sbb
sub
mov
cmpb
insl
lea
pop
in
cwtl
test
pop
mov
pusha
mov
in
nop
xlat
fnsave
popa
ss
mov
scas
dec
jno
or
adcl
pop
jle
loop
adc
movsb
popf
push
lahf
push
imul
jo
clc
mov
loop
loop
push
pop
adcb
repz
pop
insl
sbb
arpl
xor
pop
test
jne
ja
add
dec
xor
jle
cmp
xchg
adc
lret
push
sti
mov
adc
cwtl
into
xchg
cmpsb
inc
jl
mov
int3
outsb
mov
lock
pop
cli
out
sub
xor
clc
add
movsb
outsl
dec
mov
push
movsl
div
flds
push
aaa
addr16
sarl
popa
in
sbb
mov
pop
shll
adc
mov
push
inc
xchg
adc
cmp
stos
adc
or
js
imul
dec
cmpsb
ds
movsb
in
push
in
fcmovb
xchg
loop
inc
adc
cs
aas
in
and
jnp
xchg
mov
xchg
sbb
leave
ss
jae
test
cld
pop
inc
out
mov
lods
addr16
enter
push
mov
sub
mov
mov
or
add
push
iret
aam
mov
fisubs
aas
divl
xor
or
jns
test
and
das
push
sub
out
mov
xchg
rcl
sbb
imul
mov
or
shr
and
orb
push
inc
mov
xorl
or
add
test
sbb
dec
pop
mov
test
and
cld
aam
imul
scas
jae
rcl
or
jle
aam
push
jge
out
je
daa
cmpb
xchg
xchg
mul
inc
pop
jg
jnp
push
gs
mov
xchg
in
std
inc
andl
push
lds
xor
adc
push
jns
adc
mov
loope
cs
pop
cli
and
mov
bound
cmp
mov
mov
xchg
mov
stos
scas
out
std
out
pop
mov
insl
xchg
dec
xchg
inc
mov
sbb
stos
mov
in
pushf
gs
ss
cmpsb
lahf
decl
mov
mov
fsub
bound
add
add
adc
dec
mov
mov
lret
pop
jno
xor
movsl
mov
and
mov
rcr
sub
adc
jb
add
sarl
inc
inc
jmp
in
scas
or
pop
cwtl
mov
sti
mov
jp
shr
sub
add
inc
mov
dec
cmpl
add
lea
mov
xor
sbb
and
arpl
jecxz
push
mov
dec
push
xchg
movsl
mov
mov
push
cmp
mov
jae
xor
jle,pt
cli
dec
xor
or
fiadds
push
outsl
je
push
cwtl
cli
cwtl
test
loopne
ret
jae
add
sbb
outsl
pushf
xor
lret
into
mov
xor
push
sbb
jbe
or
cld
jg
adc
mov
es
sahf
imul
rorb
lcall
mov
cmc
in
cmp
mov
mov
popf
pop
cmp
mov
rcl
sahf
out
xor
adc
or
adcb
out
inc
mov
pop
or
nop
pop
in
add
negl
xchg
adc
test
mov
out
mov
pusha
mulb
shrb
pcmpgtw
xchg
test
inc
xor
dec
iret
sahf
add
stc
les
fidivrs
pop
cmpsl
jp
outsl
mov
mov
adc
in
cmpsl
jns
sub
xor
mov
pop
inc
in
out
sbb
pop
shll
xor
roll
aaa
dec
jb
sub
dec
sub
aam
or
jno
adc
rolb
fisubrl
adc
sbb
pop
adc
sbb
mov
stc
aam
push
or
int
lods
out
sub
jne
fstpl
or
push
sub
sub
mov
out
mov
sub
in
cwtl
mov
cmp
iret
jmp
mov
xchg
xor
add
mov
call
in
sarb
jmp
arpl
jnp
aas
and
pop
push
inc
ror
lcall
pop
inc
adc
or
std
dec
mov
xchg
push
ljmp
orb
pop
insl
roll
out
int3
dec
jle
ja
loopne
cli
inc
lret
xchg
ljmp
jno
or
imul
mov
or
mov
std
sbb
adc
mov
cmp
push
jp
or
cmc
mov
cltd
rcrl
sbb
xchg
pusha
mov
mov
sbb
in
pop
loope
inc
test
lds
pop
jp
notb
movups
shlb
scas
push
aaa
repnz
lock
sub
xchg
jnp
sub
and
push
sti
or
fcomi
dec
inc
xchg
jnp
mov
cmp
pop
andl
mov
scas
mov
call
pushf
rol
mov
or
push
mov
shlb
lcall
mov
mov
pop
or
cmp
mov
jg
dec
les
pop
dec
lea
out
fdivr
push
test
pop
out
lods
pop
xchg
push
inc
pop
movsb
inc
inc
inc
mov
mov
mov
fwait
inc
add
outsl
push
xchg
fidivrs
inc
pop
addb
sbb
sub
and
ss
sub
inc
mov
add
dec
mov
xor
jb
inc
stc
cs
sti
aaa
jmp
pop
stos
jnp
jle
push
push
or
cmp
xchg
push
push
xor
lcall
int
push
push
popf
jp
mov
push
aad
pop
out
bound
addr16
ds
shll
test
and
adc
fcomp
mov
mov
into
shl
outsl
sub
std
ret
cmp
cs
stos
not
mov
fisttpll
imul
in
aaa
dec
ds
jl
cmpsl
sbb
into
xor
std
popa
mov
mov
mov
int
inc
int3
rorb
shr
ljmp
xchg
or
pushf
adc
aam
jecxz
imul
ljmp
lret
lock
pop
cmp
lahf
pushf
ret
scas
dec
dec
andb
js
mov
into
sbb
hlt
push
lods
mov
xchg
pop
out
out
sahf
js
loope
shrl
pop
and
out
xor
xchg
pusha
insl
dec
cs
and
mov
stc
mov
push
int
push
adc
sbb
or
shll
or
pop
mov
mov
loope
dec
and
jo
movsb
rcpps
test
pop
dec
sub
shrb
ret
dec
lods
mov
mov
xchg
in
sahf
rcrl
add
fildll
decl
cmp
aam
jb
add
mov
jnp
ficompl
jno
int3
inc
push
loopne
xor
iret
mov
sub
aad
leave
in
inc
pop
arpl
mov
loope
jg
adc
pop
fmull
mov
inc
mov
cltd
lahf
xor
data16
pop
add
movb
push
and
stos
add
sahf
sbb
pop
jmp
add
push
dec
int3
adc
push
ss
enter
mov
pop
mov
mov
lock
sbb
fcoml
pop
addr16
mov
add
mov
sub
mov
xchg
mov
movsl
clc
xchg
int3
sbb
mov
jecxz
xchg
ficomps
pop
adc
repnz
sbb
dec
mov
mov
rolb
fists
sub
fimull
or
adc
dec
lods
mov
lods
fstp
insl
xorl
stos
dec
outsl
movzwl
mov
aaa
stos
aam
pusha
cmp
movsl
sbb
fcoml
stos
dec
popf
stos
push
testb
leave
or
nop
notb
insb
mov
popf
stc
ret
cmpsb
push
mov
cwtl
leave
fildll
adc
test
daa
fwait
mov
leave
add
dec
or
fmuls
or
rclb
call
data16
push
push
inc
iret
dec
mov
inc
incl
cmp
rorb
and
in
inc
inc
sbb
test
jne
test
leave
xor
mov
test
enter
push
push
inc
ret
adc
pop
enter
test
sbb
dec
adc
or
roll
or
rcl
cltd
shll
cltd
fsubs
mov
cmp
jge
mov
fildll
cmpsl
dec
mov
orl
out
cmp
sbb
cmp
test
leave
subb
lret
test
loop
popf
sub
popa
mov
cmp
xor
sub
call
std
das
mov
pop
aas
fwait
sbb
push
fildl
dec
cmc
jb
out
int3
leave
push
hlt
pop
mov
xchg
add
lock
add
mov
das
lods
mov
jb
pop
imul
pop
repz
cs
repnz
mov
mov
dec
pop
pop
and
pop
xor
push
pusha
or
dec
and
loop
inc
adc
lret
cmpl
mov
ja
xorl
mov
cli
cmpsl
jl
mov
pop
std
sbb
clc
mov
shl
xor
xor
stos
ja
mov
clc
xchg
cmpsl
stos
enter
imulb
pop
aaa
jg
jle
jb
jbe
xchg
lcall
or
xlat
out
shll
cld
jmp
adc
clc
sub
mov
js
test
sub
sbb
sbb
mov
insb
popf
gs
lcall
pop
das
inc
dec
call
pop
xor
int
xor
mov
lcall
mov
test
gs
xor
aam
ds
leave
in
adc
lret
push
cs
aaa
out
rcrb
jl
imul
mov
shlb
int3
sub
in
xorl
cltd
stc
push
dec
mov
addr16
idivl
jl
aaa
mov
in
imul
pop
jbe
mov
bound
add
pop
notl
mov
sbb
push
push
sbb
jae
mov
js
push
push
rclb
lds
pop
xorl
dec
jmp
xchg
cmp
sti
mov
insb
es
icebp
mov
sahf
xchg
add
popa
testl
mov
subb
mov
mov
inc
in
fsubl
mov
jno
mov
push
xchg
scas
out
mov
adc
in
adc
dec
sbb
mov
jnp
sbbl
test
cmp
cltd
jnp
mov
imul
push
fs
out
add
or
add
leave
jle
fwait
mov
ret
cltd
adc
xchg
jmp
mov
sub
jne
dec
test
into
sbb
jle
mov
sbb
jbe
mov
or
mov
add
sbb
inc
xchg
in
xchg
fisttpl
pop
loope
push
das
cli
mov
sbb
sub
outsb
fnstenv
mov
pop
imul
cwtl
ja
out
xlat
roll
lret
dec
adc
mov
inc
adcl
ja
push
pop
or
or
in
xchg
and
mov
lods
cmp
sbb
push
fisubrs
arpl
or
incb
jge
cltd
xor
leave
ds
andl
in
xor
clc
fsubs
sbb
andl
mov
push
pop
dec
adc
test
fcoml
cmp
dec
leave
dec
pop
dec
dec
push
push
mov
and
sbb
push
scas
enter
imul
insl
jnp
pop
xor
xchg
arpl
out
dec
jle
popa
les
dec
lahf
stos
mov
jae
mov
mov
xor
das
xchg
xor
and
shll
mov
outsl
sub
mov
cs
and
stos
pop
mov
adc
lret
das
test
or
push
inc
inc
mov
dec
sbbl
mov
mov
add
xchg
fsubrl
jno
pop
mov
push
and
pusha
out
sub
mov
popa
jns
xchg
lret
mov
sbb
pop
lret
int
adc
movsl
loopne
xor
scas
lahf
test
pop
xchg
lods
dec
lods
inc
pop
clc
mov
or
pop
mov
push
out
push
lret
xchg
loop
sti
fs
icebp
add
mov
pop
jno
out
fidivrs
sbb
test
sub
dec
and
cmp
push
ret
daa
fdiv
clc
sub
mov
into
aad
add
movsl
pop
pushf
fisttpl
imul
dec
pop
mov
dec
rcll
sbb
movsl
sbb
mov
fimuls
sub
idivb
lds
sub
shl
mov
mov
aaa
scas
iret
iret
push
sbb
inc
push
sub
and
cmpsb
jmp
cmc
std
ja
call
add
push
sbb
sbb
cmpsb
or
mov
test
insl
lcall
outsl
cmp
gs
in
aas
loop
shlb
lock
data16
push
pop
inc
dec
or
rorl
xor
jnp
cmp
fsub
mov
outsl
mov
adc
js
xchg
iret
mov
leave
jle
loop
adc
cld
int
push
jno
sub
movsl
adc
jecxz
and
out
lcall
cld
shrb
shlb
pop
push
clc
dec
test
and
adc
ret
or
fcmovne
ret
iret
sar
or
fldl
popa
jne
cld
aad
pop
pop
cmp
jmp
fcom
mov
inc
or
movsb
enter
aas
out
mov
enter
push
imul
mov
xchg
cmp
sti
sub
call
pop
rolb
ja
jle
test
icebp
pop
mov
icebp
nop
sbb
repz
xchg
pop
jae
cwtl
pop
paddw
je
mov
idivl
xor
fdivl
or
push
add
adc
outsb
and
mov
xchg
mov
out
dec
pop
push
xor
sbb
mov
xor
push
aas
xchg
lds
pushf
test
xchg
or
mov
jbe
mov
xchg
fldcw
dec
xor
mov
or
cmpl
push
or
andl
insl
sbb
les
clc
push
mulb
movsb
stos
dec
dec
daa
adc
orl
xor
imul
fsubr
pushl
push
dec
scas
mov
addl
dec
out
push
sub
jo
sbb
leave
nop
aaa
rclb
stc
mov
cmp
fnstcw
xchg
popa
mov
sbb
add
int
dec
test
xlat
and
push
sub
std
or
adc
pop
fdivl
or
aas
repz
rep
testb
ret
push
nop
push
aam
xor
test
nop
lret
das
pop
pop
jo
stos
cs
fsub
shlb
pop
dec
and
and
stos
in
cmc
jmp
lea
mov
and
mov
shlb
sbbb
imul
adc
aad
pop
scas
and
push
in
adc
movsl
mov
dec
push
xor
in
scas
xchg
aas
jae
dec
lret
mov
inc
cmpsb
out
adc
sbb
or
xchg
jno
loopne
popa
fimuls
sbb
xor
mov
pop
mov
stos
lods
mov
dec
out
push
cmp
data16
lret
je
pop
test
hlt
sub
jb
xor
dec
in
lret
push
sub
negl
mov
rclb
and
dec
stos
sbb
dec
mov
stc
xchg
add
fst
jnp
add
or
in
sbb
xor
int3
push
mov
cmpsl
sub
and
xchg
cmp
fistpll
add
or
loopne
cmp
negl
push
out
das
test
pop
mov
mov
add
fisttpl
fwait
pop
fnstenv
stos
sbbb
inc
mov
lret
jmp
xor
cmp
adc
sub
add
sbb
test
ljmp
movsb
cld
push
imul
adc
inc
daa
pop
xchg
inc
scas
jbe
add
outsl
movsb
mov
cmp
fs
fwait
or
pop
cmp
mov
ds
push
or
xor
mov
enter
jno
sarl
push
xchg
pop
cmpsl
sub
or
lds
inc
movl
cld
add
scas
cmpsb
out
int
xchg
aaa
mov
add
test
sbb
mov
fists
dec
cltd
xchg
or
add
dec
gs
call
bndldx
pop
dec
sbb
xchg
sbb
jne
mov
out
int
pusha
fidivs
xor
aam
ret
ss
inc
frstor
mov
mov
xchg
inc
mov
push
and
push
xor
sub
cmc
mov
jae
mov
mov
enter
dec
enter
sub
pop
cmpsb
pop
cli
pop
push
xchg
push
movb
scas
bound
or
push
shrl
mov
daa
xor
adc
sbb
fstpt
jg
decl
popf
jne
mov
fcom
mov
stos
add
push
gs
adc
cltd
inc
cli
sub
xchg
mov
scas
les
notl
xor
arpl
push
divl
sarl
adc
xchg
xor
hlt
negl
inc
decl
mov
loopne
xor
cmp
ljmp
shlb
out
and
xchg
sarl
push
popa
imul
push
cmpsl
dec
xchg
fisttpl
out
fstp
add
jp
aaa
bound
push
mov
shll
dec
adc
push
loopne
decl
mov
push
into
and
addr16
xor
lock
dec
xchg
adc
mov
jl
inc
or
mov
adc
data16
hlt
or
lods
test
aaa
jns
push
repz
add
and
sub
sbb
call
dec
mov
jne
mov
inc
xor
cmp
shrb
jg
pop
fidivrl
out
adc
fstpt
pop
add
rcl
out
addl
add
out
mov
sbb
mov
icebp
ja
and
test
testl
xchg
push
idiv
or
push
repz
dec
nop
jno
fsubrs
push
lock
mov
je
sub
pop
jp
push
ss
xchg
cmp
jmp
shlb
sbb
adc
push
jbe
emms
mov
test
or
cmp
pop
aam
mov
daa
mov
and
mov
mov
filds
mov
pcmpeqw
xchg
cmp
jge
fsincos
push
dec
mov
leave
push
xchg
icebp
hlt
or
lret
aad
cmp
mov
stc
mov
mov
cmc
inc
movsb
cld
aad
xchg
push
ja
scas
mov
or
mov
lcall
aam
wbinvd
ja
out
inc
mov
push
sbbl
lret
mov
jo
imul
imul
inc
xchg
sar
imulb
int
fstpl
outsb
out
aam
popa
push
cltd
mov
inc
out
mov
xchg
jno
lret
jb
and
repz
mov
adc
sbb
loopne
sti
cli
cli
movsl
lock
pop
jp
fistpll
pop
dec
cmp
in
repz
popf
or
or
mov
sub
aas
out
cmp
jbe
out
pop
popa
push
push
xorb
jmp
dec
sub
jge,pn
cs
rclb
fsubr
mov
inc
sbb
jg
fs
inc
cmp
int3
loop
inc
inc
lcall
lret
sahf
leave
inc
out
fimuls
cmp
push
jle
sbb
push
stos
in
sbb
mov
bound
push
out
xchg
out
jle
outsb
movsl
sub
je
adc
sub
jmp
mov
add
adcl
ss
fwait
loopne
dec
mov
cmp
inc
outsl
fwait
aaa
bound
sub
push
int3
outsl
sbb
mov
fwait
xchg
ret
leave
pusha
mov
insb
hlt
adc
xchg
mov
push
sub
stos
sarb
xor
rolb
data16
cmpsl
cmp
mov
and
adc
mov
lahf
test
cmpsl
jbe
out
mov
popf
ret
mov
ficompl
inc
dec
push
mov
mov
dec
pop
mov
leave
iret
mov
mov
sti
and
dec
rcl
jbe
lret
les
aad
in
push
cld
call
or
bound
fstps
ficompl
mov
fwait
rcll
sub
data16
sub
cmp
push
ret
aad
jl
add
insl
out
and
push
loop
orl
xchg
and
adc
clc
push
jl
cmpb
sub
scas
add
movsb
pop
add
cmpsb
sahf
mov
cmp
sub
adc
in
sbb
movsb
jmp
shll
mov
xchg
mov
ds
inc
mov
adc
mov
xor
and
shrl
adc
cmpsl
jnp
scas
add
aaa
cmp
sub
sub
mov
repnz
cmpsl
and
inc
pushf
sub
das
push
jp
mov
dec
pop
dec
xchg
pop
std
imulb
xor
mov
aas
or
scas
mov
push
cld
sub
movsl
fdivrs
mov
sub
mov
xlat
out
leave
cmp
mov
je
popa
rorb
mov
jo
iret
out
push
jle
out
mov
mov
sbb
gs
hlt
xor
notl
inc
ret
add
shlb
lea
or
jbe
in
int
sub
test
fldl
push
mov
pop
mov
cmp
testb
push
ret
push
sbb
mov
lea
sub
cmp
xchg
mov
mov
cmp
into
je
dec
jns
fs
out
jne
movsb
outsb
add
mov
pop
and
aas
adc
mov
outsl
out
mulb
xchg
aaa
enter
push
ret
jmp
push
xlat
in
cwtl
fdivr
add
pop
pushl
idiv
xchg
jb
je
jecxz
jmp
dec
lods
sahf
int
icebp
lea
vcvttpd2dq
popa
loopne
xor
mov
push
mov
push
aas
adc
cmpsl
ljmp
aad
xchg
cmpsl
mov
adc
jl
repnz
cmp
fwait
pushf
sub
sbb
xchg
les
jne
fs
inc
in
fsubl
push
jecxz
insl
adc
push
mov
pop
adc
int
out
cmp
shll
mov
fimull
mov
sbb
cmp
mov
popf
repz
jbe
cmp
in
pop
gs
pop
cmp
jb
sub
mov
pop
xor
sub
sub
cmc
ret
fwait
mov
icebp
sbb
adc
pop
xchg
sbb
scas
jbe
enter
cld
testb
imul
daa
js
pop
jb
cli
stc
dec
fcoms
add
jnp
xchg
movsl
imul
adc
add
and
rcl
sub
jl
mov
add
cld
out
mov
imul
jmp
test
xorb
add
or
mov
mov
push
fnsave
inc
sarb
movb
xorl
adc
adcl
insb
fnstenv
fstpl
shl
and
push
pop
loope
pop
fstps
lahf
rcll
pop
xchg
movsl
popf
mov
xor
cli
push
hlt
cmp
inc
clc
adc
mov
cmp
rolb
push
inc
enter
sub
rolb
popa
push
test
mov
and
fcomi
lods
inc
shlb
mov
daa
pop
cltd
dec
js
sbb
das
and
jmp
fwait
ss
lods
in
pop
inc
mov
mov
in
add
ds
sub
mov
jl
fwait
and
pop
ds
shll
lcallw
mov
fsubr
hlt
mov
jg
lea
xor
mov
push
add
xchg
mov
pop
rorb
jbe
subb
insb
aas
cmp
data16
psrad
mov
fwait
inc
lock
push
lret
movsl
int
push
mov
test
push
or
outsb
adc
xchg
mov
push
xorps
leave
xchg
jns
les
sub
or
out
jbe
push
cmp
cmp
out
out
mov
inc
aam
imul
jbe
in
push
pusha
xorb
outsb
mov
jmp
je
xor
push
xchg
mov
filds
push
cmp
insl
sub
and
fwait
loopne
cmp
add
in
dec
cwtl
dec
in
or
adc
xchg
pop
lds
jmp
push
loopne
ljmp
xchg
add
subl
insl
jmp
cmp
pop
add
mov
cld
sub
jecxz
jle
xlat
pop
dec
xor
adc
ljmp
ror
cmp
add
stos
xchg
fldcw
insl
in
push
jecxz
cltd
inc
jns
sub
mov
lret
test
dec
jp
testl
xor
outsb
push
sub
loopne
mov
jl
pop
inc
ja
xchg
pop
cmpsl
jmp
inc
jno
cmp
mov
pop
xlat
dec
sbb
jle
in
sbb
lea
cli
xlat
push
jns
sub
sbb
stos
adc
adc
pop
adc
xlat
ror
lds
rcrb
mov
xor
fs
loopne
mov
cs
xor
pop
or
sub
test
pop
rorl
repnz
cs
or
push
into
int3
int3
pushf
cmc
mov
sbb
push
stos
add
scas
jecxz
ficoml
push
inc
out
call
pop
push
nop
adc
popa
add
push
sbb
xorb
mov
xchg
movsb
adc
pushf
sahf
outsl
sahf
loop
and
je
test
pop
scas
mov
pusha
ds
adc
push
add
jg
or
shlb
and
cwtl
stos
sub
aad
cs
push
mov
xor
outsl
jmp
imul
pop
xor
inc
pop
xchg
mov
and
add
lods
andb
icebp
jbe
or
xchg
pop
dec
push
adc
mov
lea
or
jb
pop
out
push
push
je
sbb
inc
adc
fnsave
mov
cli
icebp
or
lret
data16
jp
into
ja
mov
adc
mov
lods
daa
lods
add
xor
mov
pop
push
outsl
mov
nop
push
xor
xchg
shlb
mov
nop
shrl
out
and
jo
fstl
cmp
mov
xor
scas
pop
test
jecxz
enter
repnz
loope
cmp
out
shr
fcoms
xlat
mov
jb
bound
add
xor
cwtl
cwtl
addr16
and
ss
cmc
popa
or
outsb
leave
es
sub
adc
xchg
mov
test
lock
xor
fstl
add
rorb
pop
jge
insb
xchg
lea
xchg
xchg
ss
ljmp
fbld
dec
xor
sbb
sub
pushf
js
jge
push
popa
sub
inc
iret
push
fidivrl
punpckhdq
out
int3
lea
repz
xor
hlt
jge
daa
adc
dec
and
int
mov
js
inc
push
xchg
jnp
int
lahf
push
or
stos
push
adc
inc
sbb
nop
loopne
jnp
lods
scas
arpl
lds
xor
das
pushf
xchg
sbb
ret
testb
mov
shl
iret
rolb
addr16
test
mov
outsl
cmp
js
and
incb
mov
xchg
outsb
fwait
ss
mov
xor
mov
xchg
sbb
pusha
out
aaa
rcll
call
das
xchg
popa
xor
mov
cmp
sub
cwtl
mov
jp
es
dec
inc
mov
icebp
inc
dec
mov
iret
cmp
je
inc
add
and
xchg
shll
ss
lea
insl
lea
shrl
sbb
push
jecxz
stc
cld
sbb
add
sbb
mov
mov
mov
push
mov
or
mov
test
or
jle
mulb
in
ljmp
lahf
push
andb
ret
xchg
sub
loopne
sbb
pop
js
xchg
shll
unpcklps
sub
orb
add
lret
jecxz
mov
or
mov
inc
lret
cmp
iret
sahf
adc
mov
aad
xchg
les
mov
aam
or
nop
mov
bnd
xor
movsb
mov
jp
mov
adc
ret
hlt
pop
dec
push
adc
out
ljmp
shrb
adc
jle
jno,pt
incb
sub
pop
mov
rclb
lmsw
xchg
lcall
repnz
adc
mov
and
jnp
insl
ss
add
fwait
bound
fdivrl
sub
iretw
inc
sub
sbb
mov
mov
push
xlat
fisubs
sbb
add
sahf
out
and
mov
pop
js
dec
xchg
inc
lret
dec
jae
add
lcall
ljmp
sbb
cmpsl
ficomps
ss
xchg
and
fdivp
and
push
imul
lret
es
fbld
mov
movsl
fisubs
mov
scas
lods
aad
jmp
daa
mov
inc
out
cmovno
and
jns
out
mov
test
xchg
mov
xchg
pop
jecxz
stos
sub
add
and
push
push
cmp
movsb
jl
and
inc
pop
pop
pusha
add
xchg
cmp
icebp
dec
or
test
and
mov
or
mov
cmp
mov
sti
hlt
imul
jg
imul
inc
xchg
lret
inc
pop
dec
inc
jmp
lods
gs
popa
nop
popf
add
pop
ss
insl
dec
and
movsl
lock
ret
js
fidivrs
arpl
xchg
cmpsl
cmpsl
adcl
and
cmp
or
mov
lcall
mov
in
ret
in
fistps
into
outsb
mov
add
fsubl
push
xchg
repnz
sub
and
faddl
popf
imul
jae
lret
in
call
inc
std
mov
pusha
insb
ja
stos
add
test
push
test
insl
mov
aaa
leave
pop
fdivrs
fcoms
mov
mov
and
icebp
mov
and
into
inc
or
lahf
inc
imul
pushf
loope
jne
ja
out
push
mov
inc
jecxz
aas
lods
push
clc
mov
pop
or
pop
pop
mov
push
ds
ret
pop
cltd
push
or
cmp
push
das
mov
subl
into
sub
dec
pop
fnop
adc
scas
jge
gs
and
int
xor
mov
idivb
cld
out
insl
je
lahf
adc
pop
mov
outsl
xchg
cmpsb
jge
ja
xchg
addr16
cwtl
repz
add
pusha
xlat
loopne
pop
xorl
or
add
outsl
sub
cwtl
aas
pushf
mov
or
pop
rep
xchg
mov
push
in
mov
arpl
popf
xchg
push
aam
adc
je
inc
scas
std
mov
add
stos
movsl
xor
enter
rcrb
or
pop
cwtl
into
jno
hlt
sub
and
mov
add
lahf
pop
stos
loope
sbb
pop
out
xchg
cmp
test
aam
mov
cmovle
das
in
mov
in
out
movsb
push
cmp
and
inc
push
xlat
adc
jmp
les
xchg
jne
jp
adc
xchg
jnp
mov
iret
mov
data16
mov
xchg
push
nop
pop
and
call
sbb
xor
pop
cmc
or
pop
xchg
jecxz
xor
add
outsb
sbb
xchg
iret
hlt
push
xor
jne
int
fistpll
shrb
pop
pop
adc
roll
cmp
mov
mov
cmp
mov
jbe
rorb
ret
aam
jno
leave
jmp
int
inc
adc
mov
cmpl
pop
in
fcomip
lahf
or
addr16
adcl
adc
fsubl
mov
inc
insb
test
jnp
mov
inc
cmp
xchg
dec
and
or
xchg
addb
inc
bound
rol
dec
test
xor
cltd
xor
aaa
cmp
cmp
sbb
cld
int3
out
int3
out
fldl
stos
mov
push
push
inc
ret
push
or
jl
pop
sbb
ret
out
mov
pop
jbe
cmp
sub
int
push
mov
test
mov
adc
jb
jge
sti
mov
adc
cmp
fldenv
sbb
int3
shlb
cmp
test
jg
cmpsb
push
inc
test
hlt
sub
sbb
dec
test
sbb
es
jmp
mov
test
xor
and
lods
sub
adc
shll
ret
dec
inc
aad
xor
add
hlt
xchg
pop
fistpl
jns
or
insl
xchg
ret
call
lock
jne
cltd
mov
nop
cwtl
jp
cs
rolb
pop
jns
ret
mov
arpl
std
xlat
mov
shlb
xchg
jae
mov
cmpsb
push
sbb
add
cmpsl
inc
cmp
or
jl
pop
popf
adc
movsb
inc
out
push
sahf
ljmp
adc
jbe
add
ljmp
pop
inc
dec
xor
fdivrs
cmpl
fnstenv
xor
cmp
push
or
push
stos
pop
aam
lds
jmp
lea
int
cmp
pusha
adc
int
sbb
pop
iret
imul
in
popa
xor
fisubrs
xor
arpl
jbe
xor
xchg
pop
popf
xchg
sub
sti
jb
test
push
loop
lret
dec
mov
nop
pop
scas
pushf
das
mov
inc
insl
sbb
mov
jge
jns
or
icebp
jno
mov
xorl
push
inc
lahf
push
inc
adc
loope
or
push
test
add
xchg
or
ja
mov
add
fcoml
cmpsb
in
cmp
std
xchg
sub
pop
adc
jnp
and
icebp
jge
sub
arpl
aas
pop
addr16
sbb
repz
xlat
repz
pop
sbb
leave
or
cmpsb
iret
scas
mov
xchg
lock
push
xor
push
pop
mov
and
xorl
stc
cld
mov
xchg
dec
xor
leave
mov
adc
lret
into
pop
mov
add
inc
mov
sub
in
add
inc
shlb
sub
outsb
aas
into
mov
fstl
xchg
mov
push
insb
pop
xlat
jmp
push
sbb
pop
dec
jecxz
loop
xor
xor
stos
xor
scas
push
pusha
adc
inc
rorb
lret
mov
sub
ljmp
andl
pop
pop
mov
xchg
mov
repz
loop
adc
fists
xor
adcb
fwait
scas
mov
ja
dec
in
das
mov
outsl
mov
movsl
xor
and
jbe
rorl
scas
addb
stc
adc
xchg
sbb
fisubrs
shrb
stos
jne
mov
pop
shrb
loopne
fisubl
xor
dec
cmp
jae
sub
sahf
adc
mov
and
test
cmp
jecxz
cmp
test
mov
sbb
sti
sti
and
popa
mov
lock
xchg
xor
sbb
jg
test
ret
ss
push
jp
fiadds
ja
add
cmpsl
scas
int
in
repnz
mov
in
and
dec
dec
jecxz
cltd
rorl
jmp
push
sar
hlt
mov
pop
stos
sbb
or
push
jno
gs
lock
mov
push
cmp
add
push
je
dec
shr
rolb
enter
subl
arpl
mov
sub
lods
and
pop
adc
stos
adcb
std
or
mov
jnp
inc
pop
lds
jmp
mov
call
xor
ficompl
scas
sbb
jecxz
adc
jno
xor
inc
xchg
pop
call
and
push
jae
xchg
movq
inc
inc
push
adc
xlat
pop
jle
leave
dec
sahf
adc
data16
cmp
push
adc
xor
push
dec
insl
mov
sbb
sub
pop
gs
aas
test
shll
outsb
in
stos
idivb
lret
ja
xor
cltd
loopne
fwait
jns
jmp
xor
mov
mov
sbb
push
pop
dec
test
inc
fbstp
and
xchg
dec
mov
loope
cld
lock
mov
push
jne
cs
or
push
repnz
inc
or
and
movsb
inc
lods
shrb
and
in
jg
jp
dec
lret
aaa
xor
xor
sbb
push
std
sbb
xchg
cmp
sub
cmp
mov
in
xchg
jp
lods
pop
sub
gs
and
stos
cwtl
arpl
inc
mov
or
dec
mov
in
testb
xlat
xorl
aas
inc
vsubss
xchg
fs
pop
mov
lock
dec
or
push
or
jge
dec
iret
testl
outsl
mov
push
lock
inc
jnp
insb
jp
adc
jle
mov
mov
iret
aaa
pop
in
incb
add
ret
push
fidivs
mov
xchg
mov
mov
jecxz
into
out
sbb
data16
jne
inc
pop
aam
mov
pop
mov
sub
mov
leave
int
sub
cmp
cmp
lret
gs
das
xchg
mov
and
loope
ds
push
xlat
xor
stos
jl
dec
arpl
loop
dec
mov
mov
fadds
arpl
or
adc
jno
sbb
test
filds
pop
cmpb
sub
fisttpl
pushf
shl
outsb
cmp
das
or
leave
insl
xor
shr
in
jb
sbb
pop
ror
jno
mov
push
inc
xchg
decl
xor
faddl
repnz
add
enter
lods
in
lods
dec
aaa
lahf
stos
dec
pushf
pop
cmpw
xor
cli
popf
aas
and
adc
iret
lahf
aam
mov
cmp
inc
sbb
fmull
mov
sub
outsb
lock
fadd
jmp
loopne
xor
jl
ret
in
pop
pushf
adc
mov
das
mov
push
jnp
shl
pop
fdivl
aaa
das
cli
push
icebp
cmp
js
sbbb
out
dec
rcrb
jecxz
jo
dec
daa
push
push
aaa
dec
ds
mov
cli
loopne
dec
xchg
in
sub
sbb
lret
or
add
loop
clc
jbe
dec
adc
sub
mov
push
pop
mov
repz
mov
jge
jecxz
enter
inc
lods
sti
fisubs
or
ds
sbb
insb
imul
jle
dec
mov
xchg
cmp
stos
push
and
cmp
outsb
pop
inc
jp
sbb
xchg
inc
aas
idivb
mov
fwait
sahf
pop
dec
mov
cli
add
outsb
fs
call
loop
ret
decb
xchg
jne
cmp
mov
lret
repz
ret
mov
les
mov
push
or
js
dec
xor
arpl
adc
fucom
jmp
mov
lods
sahf
rcll
cld
add
lea
das
sub
or
nop
sti
push
push
inc
popf
pop
add
sbb
or
arpl
sbb
sub
lahf
add
fldenv
mov
pop
pop
xor
xor
int3
pusha
jb
bnd
paddsb
movsb
add
jo
xor
fld
gs
iret
add
nop
adc
push
or
mov
imul
sub
test
pushf
add
test
hlt
pop
push
rcll
test
add
ljmp
push
ret
and
ret
ret
or
cmp
cld
jl
mov
push
cmpsl
pop
mov
das
cmp
lret
aad
shr
cld
inc
jnp
push
xor
add
mov
das
test
test
push
lea
addr16
shrl
push
push
adc
lds
and
jge
ss
loopne
int
inc
jle
cmp
pop
push
and
imul
sub
xor
mov
gs
xchg
push
cmp
mov
std
pop
or
cmpsb
adc
adc
pop
fildll
xchg
sbb
aam
lods
rcll
push
mov
adc
daa
rcr
cmp
jmp
add
xor
jbe
add
adcl
mov
jp
or
insb
xchg
cmp
push
inc
and
jmp
mov
lock
je
xchg
xlat
out
jbe
cmc
cli
std
push
pushf
js
push
push
icebp
cmp
cmpl
dec
cmc
je
jb
test
imul
lahf
add
cmc
imul
add
sub
cwtl
das
dec
jns
dec
mov
push
outsl
push
add
adc
ret
lods
cs
mov
stc
jne
sbb
or
mov
cwtl
fcmovnbe
andl
hlt
adc
push
mov
mov
je
aad
fists
jmp
inc
and
jns
jae
pop
xchg
mov
mov
pop
fisubrl
sbb
gs
nop
jle
xor
call
add
cmp
mov
ja
cmp
call
dec
imul
and
or
std
pushl
daa
ficompl
sbb
jo
and
mov
sub
lret
mov
mov
mov
mov
or
in
outsl
daa
leave
xchg
insb
cmpb
loopne
popf
xchg
xlat
dec
std
daa
imul
insb
pop
out
jmp
in
push
sbb
mov
cmp
and
pop
mov
cmp
popa
in
mov
cwtl
in
in
into
mov
loope
sub
aaa
push
mov
jae
popa
sti
popf
lcallw
xchg
cwtl
add
icebp
out
cmp
inc
sub
adc
and
cmp
mov
ds
testl
lock
pop
fcomip
xor
sbb
out
je
mov
aaa
stos
imul
dec
pop
sbb
add
rolb
cmp
jecxz
call
pop
mov
add
scas
cmp
adc
andl
and
inc
dec
and
mov
mov
dec
xor
mov
dec
ret
and
das
inc
xchg
out
jb
les
fldt
add
mov
adc
jl
pushf
add
fistl
in
ljmp
mov
in
scas
mov
shrl
jmp
xlat
in
xchg
xor
ret
sbb
inc
add
or
les
stos
outsb
mov
mov
mov
clc
mov
stc
lods
add
int
jne
push
jno
scas
or
push
pop
rclb
fidivrs
int
mov
std
ss
dec
mov
loope
push
outsl
nop
mov
fdivrl
adc
outsb
iret
frstor
jae
mov
or
clc
mov
xor
jae
cmp
cld
andl
popf
test
pop
cmpsb
sbb
repnz
mov
aaa
sbb
out
xchg
sarb
sub
repnz
mov
in
imul
in
add
and
orb
xchg
mov
xchg
xchg
mov
and
test
pop
in
sbb
mov
jo
and
enter
jle
jle
movsl
pop
shlb
sub
loope
scas
outsl
out
fdivrs
or
pushf
inc
ds
add
ljmp
and
push
rcll
xor
lods
dec
jmp
mov
adcl
xor
mov
pop
daa
repnz
out
aam
add
loop
loop
mov
out
cmp
pop
rcll
mov
cmp
push
sbb
push
leave
sbb
popf
lcall
daa
sub
cli
lock
lret
mov
or
rclb
hlt
cmp
mov
imul
xchg
aas
and
sbb
adc
sbb
cmp
sub
push
shrb
addb
sti
cmp
mov
in
adc
or
cltd
xor
rorl
and
sub
mov
cltd
push
and
fstpl
fs
in
mov
mov
inc
mov
pop
or
lret
fistpll
data16
xchg
stos
xchg
mov
inc
lahf
adc
in
xchg
pop
cmpsb
ljmp
push
add
jp
scas
xchg
push
push
or
es
inc
mov
int3
and
std
bound
dec
into
xor
pusha
lds
pop
adc
fs
ss
mov
jb
subl
xchg
lds
adcl
call
mov
mov
jmp
jae
or
fbstp
fcmovu
jp
inc
pop
mov
adc
add
fstps
push
stc
imul
scas
test
mov
and
stc
mov
jmp
jge
fwait
subl
repnz
enter
sbb
mov
aam
add
data16
test
cmp
jae
lea
or
and
test
js
punpcklwd
xchg
and
into
and
add
add
sbb
cli
cmc
lods
sbb
les
xchg
sub
pop
outsb
daa
jae
sub
pop
pop
push
sarb
and
mov
mov
jnp
mov
adc
cmp
mov
lds
or
pop
or
out
and
fst
or
mov
mov
out
lods
sub
pop
out
shll
xchg
jnp
push
mov
xchg
push
mov
inc
mov
stos
add
mov
aaa
xor
xchg
fwait
xchg
call
xchg
es
into
jne
push
pusha
negl
loope
adc
mov
ds
fsubrp
into
sbb
shlb
rcrb
std
imul
inc
jg
cmpsl
jne
aas
xlat
xlat
xchg
jecxz
popw
inc
xchg
xchg
pushl
or
pop
xchg
popa
mov
push
mov
or
jbe
and
jo
repnz
shll
cld
push
repz
mov
shrl
cmc
in
mov
jge
inc
pop
das
js
ja
pop
jno
mov
xor
out
push
and
sbb
push
sub
popa
add
cmpsl
aad
into
cmp
and
clc
mov
imul
stc
mov
sub
lahf
adc
pop
or
in
scas
fistpl
es
inc
mov
lods
mov
add
push
add
imul
lahf
pushf
jecxz
jno
pop
sub
push
pop
sahf
nop
sub
inc
cmp
out
inc
popf
cmp
outsl
jnp
xor
cltd
pop
sbb
inc
in
ret
jg
stos
pop
jb
and
sub
xchg
inc
and
dec
pop
out
mov
and
loopne
lcall
pop
add
sub
fcomps
mov
arpl
adc
mov
dec
xor
loop
xchg
adc
inc
insb
xor
les
cmp
cs
xchg
push
adc
adc
or
or
jnp
andb
out
mov
inc
lock
mov
out
hlt
mov
sub
inc
push
mov
cmp
cld
repz
outsb
cltd
inc
dec
xor
ja
pop
mov
icebp
xor
mov
mov
mov
push
rol
stos
out
or
xor
test
adc
pop
pop
sub
insb
jmp
sub
addb
xor
pop
sbb
adc
jno
pop
test
push
push
scas
cwtl
out
push
sub
jbe
jmp
pop
in
enter
or
jge
mov
orl
call
push
repz
lods
cmp
jbe
inc
push
xor
jbe
mov
fisubrs
push
xor
inc
xchg
and
add
sbb
push
sub
push
stc
mov
pusha
daa
pusha
shll
xor
cmpsl
and
out
mov
jg
pop
clc
and
movsb
shrb
outsb
scas
stc
sti
adc
cmpsl
in
lahf
push
and
daa
pop
xchg
dec
and
scas
pop
or
into
out
adc
lahf
mov
aas
xchg
lds
jle
mov
or
loop
mov
cmpsl
inc
popf
adc
mov
into
mov
scas
cmp
scas
dec
fcomp
popf
sub
out
pop
popa
pop
push
and
pop
test
fidivs
xchg
push
ds
repz
jle
repz
mov
mov
stos
inc
xchg
inc
jecxz
mov
fdivrl
imul
xor
pop
out
int3
sti
cli
mov
das
xchg
inc
jp
or
sbb
dec
testl
mov
sti
inc
adc
out
jge
sub
xlat
xchg
in
push
js
enter
mov
and
xchg
roll
aam
mov
into
repnz
sub
movsl
xchg
sbbb
loope
out
stc
sti
js
mov
push
add
jmp
aaa
sbb
shrb
aas
dec
dec
fs
mov
outsl
les
stc
insb
sti
shlb
outsb
mov
shrb
cmpsb
mov
cltd
sub
mov
test
push
dec
fs
pop
inc
and
xchg
inc
pop
xor
push
jae
movsb
mov
xchg
jle
mov
into
adc
xor
mov
cmp
pop
adc
adc
mov
leave
cmp
je
iret
shlb
xlat
or
popf
popf
imul
hlt
xor
js
xchg
cmpsl
ljmp
push
call
sub
rorl
mov
stc
sub
pop
daa
push
testl
aas
jae
push
hlt
nop
les
fs
int3
and
mov
std
adc
inc
mov
aam
inc
xchg
xchg
jmp
cltd
adc
out
int3
loop
sub
jb
in
lods
in
fnstsw
pop
cmp
xchg
fnstsw
xor
dec
sahf
xchg
stc
aas
inc
cmp
movsl
pop
inc
je
jmp
sbb
xlat
and
insl
bound
pop
in
pop
or
mov
mov
sbb
test
mov
and
je
dec
and
mov
inc
adc
jp
pop
pop
push
out
into
pop
pop
lret
shll
inc
xchg
pop
sbb
call
bound
inc
lcall
out
stos
pop
pop
jne
jge
cmpsl
adc
push
sub
lods
add
test
repz
dec
cs
ljmp
out
nop
data16
xchg
das
repnz
push
decb
dec
xor
xchg
outsb
mov
testl
daa
cmpsb
out
fiadds
adc
mov
pusha
mov
mov
iret
jecxz
xlat
arpl
stc
and
pop
inc
add
inc
push
insl
pop
xchg
fisttpll
pop
sub
or
inc
loopne
jle
movsb
push
xlat
jb
inc
ror
push
dec
and
enter
lods
nop
cwtl
xor
loopne
xchg
pop
and
mov
daa
mov
jge
xor
out
daa
pop
push
adc
sbb
xchg
cmp
add
mov
cmp
shrb
cmp
pop
xor
pop
xor
inc
adc
sbb
cmp
iret
pop
int
mov
aad
mov
jmp
ret
mov
xchg
pop
mov
icebp
or
lds
xorb
sti
add
mov
or
push
pop
enter
inc
insl
or
jl
lret
dec
sahf
aam
mov
xor
in
mov
std
xchg
jg
cmc
test
mov
pop
std
adc
loopne
dec
loopne
push
cmovns
jp
or
adc
sub
test
mov
cmp
out
xchg
dec
and
dec
insb
and
insb
pop
mov
outsb
mov
lds
pop
cmp
sub
test
lret
push
out
mov
and
es
and
xchg
mov
test
outsb
cmp
testl
mov
adc
sub
inc
xchg
lock
cmpl
aaa
cmp
ss
rdmsr
push
fstpt
aas
push
lret
fcmovnbe
into
pushf
stos
orl
push
aad
xor
insb
js
sbb
in
jecxz
lret
jg
hlt
mov
jb,pt
pop
adc
js
add
xor
lret
cmp
sub
imul
shrb
inc
push
xchg
std
sbb
adc
pop
mov
fwait
inc
pop
mov
mov
push
mov
clc
add
push
pop
out
mov
cwtl
insl
cmp
cli
movsl
stos
daa
cld
mov
cwtl
shll
xchg
dec
mov
js
insb
mov
xchg
fs
and
xchg
jb
lods
xchg
popf
lds
or
sbb
and
jmp
jecxz
repz
inc
addr16
arpl
xchg
and
scas
adc
ljmp
cmovo
ret
sub
mov
aas
ja
mov
pop
and
fnstenv
jb
xchg
scas
shr
adc
sub
in
or
icebp
jmp
leave
mov
rol
push
push
mov
pop
cli
fisubl
outsl
shlb
dec
pop
mov
js
fstpl
and
jb
inc
mov
sbb
cmp
add
repz
in
and
dec
sahf
mov
add
sar
std
jecxz
jae
mov
push
lret
fwait
xchg
leave
mov
mov
xchg
jecxz
into
je
in
and
jmp
add
out
aaa
les
pop
bound
adc
inc
xchg
aad
in
jb
xor
lea
in
idivl
push
rol
mov
cmp
fwait
loop
pop
sub
add
or
jne
in
pop
shll
mov
ret
or
sti
jns
adc
jb
mov
scas
dec
or
in
test
mov
jo
lret
mov
insl
cmp
mov
adc
mov
mov
mov
inc
mov
pop
in
test
mov
push
out
aad
cwtl
push
psllq
xchg
xchg
fldl
outsl
cmc
enter
inc
dec
mov
sti
sbb
jb
xor
sbb
adc
sbb
dec
cmc
iret
ficoms
incl
les
shll
in
bound
scas
and
add
cmp
mov
push
gs
call
pusha
xchg
or
pop
fildll
js
xchg
mov
dec
js
dec
cmpsl
addr16
cmp
inc
push
push
notb
test
xor
add
cltd
test
aad
jp
mov
imul
inc
and
call
pop
cmp
iret
je,pn
inc
xchg
jne
push
pop
fisubrl
pop
loope
cmp
mov
xor
mov
pop
aaa
test
lahf
mov
push
dec
sub
mov
jmp
mov
mov
das
jp
sub
cli
push
mov
out
inc
fwait
dec
push
idivb
jbe
mov
cmpsb
mov
dec
sar
mov
repnz
addr16
adc
idivl
dec
xor
out
sub
push
in
mov
out
addr16
sbb
push
scas
out
add
push
fucomi
cmp
popf
and
xor
or
popf
mov
xorl
fdivrl
sub
cmp
add
push
addr16
fs
lahf
jmp
jp
fdivrs
cmpsl
in
mov
cwtl
lret
inc
xor
mov
ljmp
lret
into
fistpl
mov
push
mov
shlb
test
xchg
push
add
mov
scas
xor
push
int3
push
les
ficoml
push
xchg
je
or
add
loope
push
inc
sbb
mov
call
push
jmp
sbb
das
pushf
add
sti
roll
mov
adc
jns
mov
dec
xchg
xchg
adc
in
sub
jg
jl
lods
subb
xchg
shll
fimull
sbb
movsb
mov
mov
dec
dec
sub
inc
pusha
xchg
jb
jbe
xchg
mov
adc
cmp
aas
cmp
jge
dec
daa
add
jle
mov
cs
xchg
add
push
pop
adc
int
pop
call
pop
cmp
mov
mov
inc
add
aad
lea
scas
inc
mov
and
sub
mov
nop
xor
adc
pop
jge
lock
daa
insb
or
lea
jecxz
repnz
pop
orl
cmp
cmp
pop
js
clc
mov
push
mov
mov
mov
xchg
lods
mov
fistpll
push
dec
dec
xor
cs
mov
rol
xchg
mov
popa
dec
dec
in
popa
pop
cs
mov
out
out
mov
push
stos
int
lock
fbstp
adc
fimull
nop
inc
xchg
subb
out
gs
or
cmp
inc
mov
fnstsw
push
scas
and
mov
sub
mov
int
stc
jg
in
cld
dec
push
xchg
jecxz
aam
and
pusha
add
inc
adc
inc
mov
bound
shl
pop
mov
neg
xor
push
inc
imul
in
ret
mov
pop
jae
inc
push
and
fcompl
add
leave
xchg
hlt
xchg
test
int3
or
icebp
fdivs
sbb
xchg
jb
fadds
inc
pop
xchg
dec
lods
adc
jne
xlat
cld
inc
call
ja
imul
cmp
mov
xor
insl
jne
inc
fiaddl
decb
mov
in
jl
push
sub
mov
out
push
sbbl
jg
fdivr
and
add
movsl
shlb
add
mov
sbb
insl
fst
out
sti
out
out
push
fcompl
sub
ss
xchg
ds
mov
shlb
xlat
sahf
mov
lcall
pop
icebp
imul
add
push
add
scas
mov
fcomi
cmpsb
or
cld
aad
sbb
out
jnp
pop
adc
xchg
int
sub
adc
and
aaa
dec
arpl
fcoms
push
xor
sti
sti
scas
inc
lret
jae
or
aad
scas
fs
jne
cmp
andl
mov
daa
cmp
xchg
loopne
fwait
xchg
and
in
mov
sub
je
xor
bound
sti
sbb
pop
mov
lods
xchg
dec
and
popf
or
cltd
xchg
call
fbstp
dec
in
push
xchg
mov
fistps
pminub
mov
dec
add
sub
or
xchg
movsb
mov
imul
mov
push
add
decb
mov
sbb
push
aas
lea
adc
push
sbb
cmp
fwait
lcall
jnp
popf
mov
ret
cmp
mov
jl
inc
jp
inc
xlat
fxch
dec
xor
sub
fs
lods
jns
shrl
movsl
and
pop
mov
stc
bound
cmc
dec
shlb
dec
or
out
xchg
outsl
jmp
push
push
sahf
xchg
faddl
dec
loope
cld
jno
cmp
filds
dec
insb
xor
mov
fcomps
lret
mov
pushf
lods
shll
repnz
xor
pop
das
inc
mov
inc
or
lea
sbb
dec
cld
push
rolb
bound
aaa
idivb
es
in
lea
dec
mov
pop
or
mov
xchg
and
data16
or
in
sub
inc
test
sub
sub
add
movsb
add
inc
inc
cmp
mov
mov
in
xchg
lret
aaa
push
mov
pusha
outsb
pmulhuw
out
push
push
and
push
cmc
mov
mov
es
out
pop
mov
mov
or
cmp
dec
lcall
inc
xor
shrb
pusha
xor
mov
mov
jmp
xor
leave
nop
cmp
cli
or
adc
movsb
stc
lods
or
xor
pop
mov
pop
inc
rcrb
leave
ss
inc
inc
add
mov
push
jmp
mov
pusha
dec
out
jno
lods
jg
push
lret
mov
jecxz
insb
and
jle
push
jmp
mov
outsb
iret
sahf
scas
ja
mov
addr16
int
pop
mov
fldcw
jnp
imul
in
mov
out
lods
adc
aaa
aam
test
push
jmp
xchg
std
mov
adc
bound
jns
xorl
mull
inc
mov
mov
rorb
mov
je
jae
popa
adc
idivb
pop
into
mov
push
xchg
fisubrl
addb
rcll
mov
out
cld
mov
mov
nop
stos
pop
pop
ja
adc
cld
pop
jo
mov
adc
hlt
pop
stc
push
int
or
cmp
int3
jmp
add
ja
adc
stc
or
cmpsl
lret
pop
fs
dec
jns
jae
lret
add
enter
fmulp
jnp
adc
adc
pusha
sub
scas
xchg
cli
pop
sti
dec
push
pop
adc
xor
mov
cmpsb
sub
mov
lret
jo
cmpsl
add
xacquire
push
mov
loopne
dec
lcall
push
or
cmp
out
pushf
sbb
xor
inc
pop
arpl
in
cmp
dec
jmp
jo
xor
jns
dec
stos
imulb
gs
je
rclb
es
sub
cltd
and
and
mov
ret
push
sub
lahf
sbb
add
dec
and
dec
cmp
sbb
repz
fsubl
adc
fsubrs
sar
and
xchg
addl
push
cmp
lret
ljmp
xor
xor
leave
scas
xchg
sarb
mov
imul
call
add
inc
and
jb
dec
icebp
jo
xchg
out
inc
mov
xor
sub
or
loope
or
pop
gs
inc
xchg
xchg
dec
xchg
mulps
mov
pop
nop
pushf
outsb
filds
jnp
cld
xchg
mov
lock
and
inc
mov
lods
sahf
mov
dec
mov
jmp
adc
sub
sti
jmp
stos
cmp
mov
clc
mov
pusha
test
mov
dec
xor
pop
loop
mov
add
stos
data16
jecxz
mov
shrl
cwtl
push
jg
loopne
jnp
mov
mov
dec
pop
add
sub
add
enter
ds
mov
and
faddl
pusha
cmp
and
mov
push
jns
mov
or
push
inc
pop
adc
dec
fistl
nop
adc
push
cmpsl
into
int
aas
fdivl
jns
shll
rcrb
rcrb
sub
in
popa
lret
out
dec
jle
inc
aam
cmc
addr16
jb
sub
pop
adc
inc
call
repnz
xchg
pop
jns
sbb
xchg
pop
xchg
jge
out
add
mov
inc
or
and
xchg
or
aad
icebp
pop
jns
das
mov
std
std
xor
xchg
cmp
mov
pop
jmp
outsl
test
cmp
rcrb
sub
jns
adc
xor
push
mov
test
dec
cld
aam
inc
or
stc
sbbl
lretw
mov
adc
fcomp
and
jmp
jae
mov
inc
push
jae
mov
rcrl
ljmp
outsb
lret
cmpsl
cmc
clc
rcrl
xchg
mov
aaa
dec
or
add
cmp
shl
pop
push
adc
mov
or
jns
mov
lcall
lret
inc
insb
cmp
les
xchg
fisubs
sub
mov
mov
das
sbb
sub
dec
scas
scas
bound
push
xchg
shlb
mov
jp
shrl
sbb
mov
shll
cmp
dec
xor
cmp
mov
add
push
pop
rol
in
nop
mov
xchg
fmulp
pop
addr16
cmpsb
imul
add
ret
mov
out
repz
fcmovu
pop
loopne
icebp
sti
les
arpl
mov
sbb
sub
push
dec
mov
mov
and
cwtl
or
push
and
test
scas
add
xchg
pop
pop
xchg
and
dec
xlat
add
jae
dec
pop
lret
jl
icebp
pop
loope
and
aam
insb
xchg
jle
in
xor
and
fidivl
adc
ss
adc
cmc
arpl
daa
mov
or
or
cmp
movsl
lcall
dec
inc
frstor
push
inc
stos
fwait
mov
mov
out
aaa
push
sbb
jmp
arpl
nop
jl
pop
pushf
and
js
xor
jl
adc
test
mov
jmp
xchg
xchg
cld
fiaddl
pop
jne
adc
test
mov
fwait
and
ror
xor
call
mov
mov
push
in
nop
fnsave
das
mov
sbb
andl
add
lods
mov
std
sar
pop
cmp
xchg
and
sbb
fistps
xchg
fistl
daa
sub
int
shl
sbb
cmp
lea
jg
sub
loop
push
dec
sub
jl
fsubrl
icebp
add
push
leave
imul
mov
pop
cs
jmp
inc
pushf
cmpsb
fildll
inc
cmp
pop
mov
and
fldcw
xor
xchg
mov
loope
and
aam
mov
jle
pushf
push
mov
mov
mov
cmp
inc
and
xchg
push
andl
pop
cmpsb
add
sub
push
rorb
and
and
fwait
sub
test
add
fidivl
sub
es
es
jno
bound
cli
clc
adc
std
jge
mov
or
pop
leave
push
pop
ja
aas
cld
or
mov
mov
test
pop
jne
test
ds
fsubrp
imul
cmp
repnz
cmp
test
inc
mov
xor
and
movsl
sbb
sbb
sub
ss
inc
sub
es
sub
mov
sarl
mov
mov
xchg
iret
sbb
sub
popa
aam
loopne
sbb
ljmp
sahf
mov
mov
cmp
cmpsl
mov
mov
xlat
mov
xchg
iret
mov
std
pusha
shl
push
loop
leave
bound
fcomps
and
push
push
data16
fcmove
inc
fld
dec
stc
int
mov
pop
stos
mov
add
ds
pop
lahf
jne
out
lcall
ds
and
cmp
into
mov
pop
cmp
loop
test
sahf
popa
loope
fstl
add
cwtl
push
and
and
insb
and
sub
xchg
test
lea
call
inc
popf
cmc
stos
daa
test
popf
fidivl
push
fidivs
cmpsl
out
adc
pop
xchg
cltd
adc
sub
imul
mov
inc
and
jp
xchg
aas
mov
xor
dec
adc
inc
sub
test
dec
push
ljmp
jecxz
sbb
add
mov
pop
aad
cmc
cli
inc
jno
sub
loop
mov
mov
jb
ror
in
int
scas
mov
or
push
mov
mov
lds
cwtl
sbb
arpl
imull
sbb
scas
jle
pop
scas
mov
pushf
pushf
out
xor
and
jns
call
inc
outsl
shll
sti
mov
jnp
push
inc
jl
imul
ret
insl
int
cmpl
ds
out
xchg
dec
lcall
push
stos
sbb
xchg
adc
inc
jnp
and
mov
push
push
adc
je
adc
sbb
mov
inc
cld
movsl
lahf
and
test
imul
add
cmp
push
or
ds
ror
push
negl
scas
sahf
mov
jne
inc
xchg
inc
shlb
jge
push
lds
adc
in
inc
sbb
in
adc
sbbl
and
rcrl
lcall
ret
and
sub
xlat
lcall
push
repz
imul
lret
xlat
xchg
adc
push
push
repnz
inc
pop
jns
xchg
sti
shr
add
and
dec
mov
iret
popa
icebp
orl
xchg
mov
push
jg
jae
mov
out
mov
test
les
mov
mov
cli
test
jne
ja
dec
cs
imul
cmpsb
jne
xchg
mov
test
movsl
pop
test
push
sub
je
or
out
mov
push
sti
imul
jp
jne
pop
jbe
xchg
hlt
test
gs
clc
stos
ljmp
aad
mov
rorb
jno
mulb
call
push
xlat
lret
rclb
adc
add
aam
mov
inc
inc
push
sbb
xchg
repz
inc
out
in
and
xchg
mov
lds
enter
mov
pop
addr16
push
push
test
cs
pushf
push
sub
in
xchg
mov
mov
es
out
lea
push
xchg
sbb
sbb
fisubrs
insl
xchg
jmp
or
mov
mov
lds
fwait
out
fnsave
stos
into
jb
and
and
xchg
dec
mov
mov
iret
mov
in
add
or
in
fsubrp
mov
push
popf
and
and
xor
mov
dec
mov
inc
push
jl
rclb
adc
sbb
dec
int
mov
xor
bound
lods
or
or
int3
addb
and
push
inc
pop
in
rorb
ret
xchg
stc
pop
std
imul
xchg
sub
in
decb
mov
mov
inc
sbbl
pop
xchg
fstl
or
adc
btr
mov
push
push
xchg
add
aad
addb
mov
pop
jg
mov
mov
fstpl
dec
pop
and
or
idivb
pop
ret
sub
movsb
fdivrl
mov
cmpsb
mov
xorl
das
push
fdivrl
jns
sbb
mov
addr16
sub
js
inc
bound
sbb
je
xor
mov
or
stc
pop
inc
mov
inc
xchg
sub
out
insb
and
std
mov
push
add
or
sbb
add
or
fimull
pop
mov
nop
sarb
shl
xor
add
out
cmp
add
aad
lds
inc
mov
mov
rclb
lahf
mov
test
mov
sbb
jb
roll
mov
cld
jo
add
fists
push
icebp
test
xor
pop
jmp
ds
sub
mov
push
cmp
jg
xchg
jg
or
in
and
sbb
out
add
sub
and
call
lods
inc
fistps
subl
fistpll
mov
xor
mov
das
addr16
or
add
das
xor
or
loope
mov
nop
insb
jns
xor
sbb
arpl
gs
outsb
pop
dec
xor
inc
sub
mov
mov
jo
push
test
iret
icebp
jge
ret
mov
xlat
inc
xlat
ja
jle
cmp
les
add
sbb
push
mov
ljmp
rclb
mov
jmp
add
icebp
jae
loop
hlt
inc
sub
insl
test
xchg
push
sahf
movsl
nop
dec
loope
cmpsl
xor
jle
in
popf
xchg
inc
jb
jmp
rcll
shlb
dec
int
icebp
push
scas
xor
sti
xchg
and
jmp
fildll
mov
inc
mov
mov
add
push
add
adc
add
ret
shrb
inc
pop
xchg
fdivrs
mov
lods
mov
xchg
jno
pop
fyl2x
and
cmp
mov
cmpsl
pop
pop
xchg
mov
xchg
xor
cmc
in
inc
lock
rcrb
adc
fwait
pop
jne
and
cltd
fcoms
or
or
push
cld
dec
scas
mov
gs
mov
jecxz
adc
mov
gs
mov
push
inc
and
lods
mov
sbb
mov
xchg
and
mov
daa
iret
mov
xor
sub
inc
ret
std
mov
jns
imul
shlb
mov
call
dec
bt
jg
sub
push
popf
dec
mov
leave
adc
int3
sbb
dec
mov
push
hlt
imul
pusha
ja
pop
outsl
fisubrs
stos
cwtl
cmp
scas
add
js
inc
in
loop
jecxz
add
addr16
dec
mov
jecxz
shlb
and
rcll
sub
jge
cwtl
push
scas
call
and
xor
mov
mov
lock
xor
xchg
fbstp
aas
mov
lcall
adc
loope
gs
cmp
rcrb
xchg
pop
fmull
mov
aaa
frstor
repz
ljmp
fwait
pop
push
xchg
xor
or
scas
imul
adc
add
fwait
stos
sbb
test
mov
ret
jb
pop
notl
pop
xlat
cmc
leave
jbe
inc
cmp
xor
fstpt
lods
cmp
andb
cli
lea
aad
or
call
mov
fidivrs
imul
clc
rcrl
aam
jo
test
sub
lds
cmp
pop
loop
or
pop
ja
je
lahf
inc
mov
adc
lret
adc
xchg
xchg
inc
aam
adc
push
adc
sbb
cmp
bound
or
jb
cwtl
pop
aam
fcmovne
call
jle
cld
push
pusha
shll
xchg
xlat
push
sbb
push
aaa
outsl
lea
orl
stc
mov
dec
jb
icebp
imul
dec
adc
pop
inc
or
icebp
inc
pusha
orb
inc
xchg
sbb
mov
rolb
cmp
add
pop
imul
mov
and
jns
or
lods
pop
and
jo
add
mov
pop
adc
nop
insl
jmp
int3
test
subl
push
sub
mov
pop
cmc
push
ret
in
out
imul
mov
orl
data16
sbb
mov
inc
loope
imul
mov
mov
int
in
add
jmp
xchg
lret
cpuid
dec
adc
push
out
mov
test
mov
cmp
mul
call
jbe
sbb
inc
xchg
ret
push
mov
xor
and
jge
xchg
sbb
inc
enter
mov
sbb
adc
lods
out
aaa
push
pop
sbb
sbb
int
mov
push
jle
test
or
lret
fwait
dec
cmp
cmpsb
sub
imul
jle
add
jns
push
jo
pop
inc
pop
sub
scas
xchg
sub
out
cmp
add
mov
sbb
out
fstpl
push
push
push
dec
cld
dec
icebp
sbb
mov
or
movsl
xchg
mov
sbb
enter
mov
sbb
dec
ss
push
adc
adc
lea
dec
shll
xor
push
lcall
in
mov
jge
popl
xor
cmpsl
test
fs
mov
lods
pop
out
lea
pop
test
andl
repz
inc
jno
mov
lock
imul
and
leave
frstor
adc
fsubr
lods
outsl
jno
fs
or
test
push
fnstsw
aad
xlat
or
sbb
cmp
mov
pop
sbb
leave
mov
arpl
leave
ljmp
ret
in
sbb
xlat
imul
out
xchg
out
jg
lahf
orb
rcrl
stos
rcll
jnp
add
sbb
in
outsl
mov
xchg
sbb
jnp
shrb
sub
test
mov
enter
dec
mov
xchg
xchg
stos
mov
stc
jg
xchg
mov
jecxz
sbb
imul
sub
jns
cmpsl
add
dec
jecxz
test
aaa
test
xchg
xor
adc
pop
insb
mov
test
inc
mov
loop
cmp
xor
pop
outsb
mov
xchg
outsb
xchg
addr16
push
cmpl
mov
icebp
addr16
lds
mov
aaa
push
neg
xor
in
xor
pop
stc
call
std
and
cmp
inc
dec
dec
hlt
popf
adc
xchg
repnz
sub
in
cmpsb
xor
mov
das
push
dec
dec
outsl
leave
fldenv
int3
mov
inc
mov
ss
mov
add
idivl
sahf
bound
cmp
push
mov
mov
movsb
aas
cmp
push
aaa
or
out
cmpsl
incb
imul
push
cltd
stos
pop
and
insb
ret
inc
stos
popa
cmp
aaa
addr16
jle
pop
jecxz
ja
int
push
aam
loope
adc
xchg
jecxz
mov
push
outsl
mov
push
jp
sbb
jg
dec
push
cli
or
push
push
fldenv
dec
lea
push
cltd
int3
movsb
mov
jb
add
test
loopne
pop
dec
loope
stos
notl
adc
adc
dec
jecxz
xor
jle,pn
popa
mov
pop
cmp
cmp
adc
aaa
gs
iret
sub
add
jo,pt
repnz
mov
je
fwait
pop
xor
jp
andl
inc
shlb
cmpsl
inc
insl
in
rorb
pop
and
adc
jo
mov
daa
lret
pop
fstpl
mov
adc
xchg
add
mov
jge
mov
dec
fmul
lahf
nop
jecxz
jb
test
jge
in
and
repz
mov
cmpsb
or
and
enter
fnstenv
jns
mov
fimull
movsb
and
fwait
pop
das
into
in
jbe
stos
bound
xor
test
pop
lret
jno
jb
xchg
push
pop
mov
jp
xor
rol
mov
loop
cmp
inc
pop
out
and
std
negb
push
fs
mov
lea
xchg
mov
mov
test
addr16
inc
into
rcrb
lret
or
add
xchg
sbb
icebp
pop
lods
lods
inc
dec
push
arpl
push
cmp
and
imul
adc
xchg
addl
or
scas
ret
cmpsb
mov
mov
push
xorl
movsl
inc
adc
outsl
inc
in
push
call
mov
sahf
mov
pushw
or
shrl
pop
insl
sbb
jb
mov
jmp
aam
lret
movsb
jo
arpl
scas
scas
pop
add
out
jecxz
aaa
pop
mov
push
xchg
dec
jl
sbb
cmpsl
cwtl
pop
jne
ja
ds
cli
xor
aam
outsl
xorb
xchg
add
fistpl
fcmovbe
push
std
into
adc
jle
push
sub
call
pop
push
mov
mov
into
jmp
push
loope
test
or
cmc
mov
mov
int
add
lds
mov
dec
mov
mov
push
lods
jecxz
dec
ja
enter
popa
scas
mov
mov
iret
js
pop
mov
jb
test
jb
rol
je
mov
adcl
jb
push
scas
sbb
mull
fsubrs
sub
cmp
fdivr
mov
jns
icebp
and
and
fwait
jae
enter
mov
arpl
mov
inc
mov
roll
inc
cmp
jb
pop
cmp
dec
jmp
scas
scas
movsl
orb
and
int3
xchg
stos
arpl
lea
xchg
inc
add
jo
sbbl
mov
loope
popa
movb
fwait
xchg
jmp
shlb
inc
sbb
mov
sub
push
loopne
jno
nop
popa
sbb
cmp
es
xchg
cmp
cwtl
add
stos
cmp
lods
add
mov
mov
mulb
test
int3
mov
enter
mov
mov
xchg
js
out
je
xor
das
fdiv
or
jno
dec
fwait
arpl
mov
clc
cmp
push
adc
insl
and
xchg
xchg
inc
dec
lret
mov
adc
mov
fisttps
add
sbb
and
sbb
mov
fwait
sbb
fsubrp
mov
adc
lcall
xchg
xor
lds
or
sub
add
and
fisubl
ljmp
rcrl
xchg
cmp
out
cmp
lcall
lea
lods
xchg
xchg
test
sub
fwait
xchg
fnsave
adc
lods
in
popf
jae
sub
mov
mov
inc
mov
inc
into
cld
jb
pusha
push
mov
scas
push
daa
out
push
mov
pop
mov
adc
cmp
data16
dec
dec
stos
fwait
add
pop
inc
mov
cld
jecxz
testb
jmp
ret
mov
daa
imul
xchg
jge
pusha
or
ljmp
mov
test
out
fcoml
sub
mov
lock
sbb
ljmp
push
outsl
das
jne
xchg
add
xchg
rcll
stc
clc
mov
and
fwait
xor
push
insl
lock
mov
jb
or
ljmp
rcll
call
inc
testb
int3
adc
into
inc
or
and
jge
arpl
ror
xchg
imul
push
mov
jns
clc
xchg
pop
pop
scas
popa
js
or
jns
adc
into
inc
inc
push
popf
lods
cmp
cltd
add
sbb
and
mov
fwait
jge
push
mov
xchg
out
movsl
add
fsubr
xchg
jae
loope
lahf
mov
jl
cmp
pop
ret
inc
pop
outsl
mov
cmpl
mov
mov
ljmp
js
mov
test
test
mov
mov
jbe
sub
shll
loop
xor
pop
dec
pop
cmp
ret
push
jge
imul
ds
nop
push
shll
cs
fisttpll
sbb
mov
hlt
sub
sti
inc
fildl
fimuls
add
int
jg
dec
mov
nop
sbb
sub
or
loopne
scas
outsb
pop
mov
adc
pop
divl
shl
jnp
mov
cmpl
mov
mov
js,pn
xchg
orb
mov
pop
fistl
loope
cltd
out
bound
dec
sub
aas
mov
enter
dec
push
cmp
xlat
mov
sbb
pop
ja
xchg
dec
fwait
sbb
dec
cli
add
inc
gs
or
ja
imul
jno
scas
xor
es
and
leave
aas
fists
cmpsl
scas
je
mov
popf
add
in
sub
push
notb
sahf
test
sub
add
fwait
xchg
jnp
mov
adc
mov
outsl
push
push
call
lcall
lock
cmc
out
mov
push
enter
scas
or
popa
jecxz
int
les
xlat
and
push
xor
push
hlt
jg
mov
imul
scas
pop
ret
movsb
pop
and
sbb
jnp
notl
push
add
enter
mov
in
inc
add
mov
inc
adc
cmpsb
gs
xlat
sub
loopne
aad
xchg
lea
in
add
jne
movsl
dec
into
mov
divb
xor
adc
ror
movsb
cltd
test
or
mov
and
sbb
stc
and
push
push
stos
xor
idivb
mov
lds
mov
add
les
mov
cld
cltd
setg
imul
inc
lea
xor
jle
mov
cmp
clc
push
dec
repz
push
or
sbb
lods
aad
ret
prefetch
jecxz
lea
loopne
aam
jno
outsl
sti
lock
fcmovne
negl
inc
repz
jg
js
pop
push
int
andl
imull
scas
xchg
xor
sbb
int3
cmp
xchg
rolb
jne
sarl
cltd
popf
sahf
adc
or
pop
test
mov
sbb
xchg
pop
jns
push
popf
outsb
cmc
call
xchg
call
stos
and
ret
xor
add
scas
aaa
in
pop
fstpl
xor
push
pop
jbe
mov
or
jbe
mov
sarl
mov
movsl
lahf
inc
mov
imulb
or
push
jae
xchg
std
fistps
test
adc
cwtl
sub
test
negl
mov
jge
test
mov
dec
or
sub
cs
scas
jp
cld
inc
push
adc
scas
jns
mov
imul
jo
lock
pusha
mov
xor
inc
mov
shl
repnz
icebp
stos
pop
sbb
xor
test
or
hlt
sbb
inc
xabort
fs
or
mov
pop
and
and
mulb
push
ret
mov
xchg
stos
imul
pop
jbe
xchg
jg
push
fnstenv
cmove
dec
and
cmp
pop
mov
sbb
test
test
add
std
loopne
push
xchg
dec
jbe
andl
adcb
popa
loop
push
mov
mov
push
loopne
shll
popa
sbbl
es
jb
mov
insw
mov
xor
ret
test
aas
insl
clc
das
dec
lock
xor
fisttpll
xor
mov
sub
pop
jmp
sti
in
push
mov
negb
imul
pop
push
jge
mov
dec
mov
sbb
jno
mov
js
out
repz
xor
ljmp
int
jnp
in
jnp
jns
pop
imul
fldt
sbb
aas
rcrb
cwtl
dec
push
push
jno
test
inc
mov
test
cli
lret
imul
aas
out
mov
loop
jbe
xchg
jne
stos
dec
cmp
inc
lret
shll
xchg
js
loope
jb
jno
cmp
in
mov
sub
and
xchg
ret
xchg
adc
jle
imul
hlt
cld
dec
fisubrs
outsb
loopne
cmp
cmpsl
jge
dec
mov
mov
jbe
int
inc
leave
in
push
addr16
ss
loope
icebp
jmp
or
bound
cmp
out
imull
cmpsl
fsubrl
pop
and
inc
shlb
cmpsb
js
es
jecxz
mov
add
mov
add
push
stc
test
fisttps
shrb
fisubs
lock
mov
dec
repnz
mov
sub
jecxz
cmp
xor
in
in
push
push
ret
jne
mov
mov
lret
jo
cmp
or
inc
fdivl
or
cli
mov
jae
pop
test
mov
data16
xchg
nop
ljmpw
testb
lcall
ficomps
out
add
add
lcall
or
push
add
xor
data16
lea
std
loope
xchg
pop
and
sti
pop
pop
inc
lds
cmp
je
gs
adc
lea
stos
pop
mov
xor
in
in
push
mov
sbb
mov
fisubl
or
xor
ret
push
cmp
out
and
push
testl
sub
mov
sarb
adc
mov
pop
lea
jmp
rorl
pop
pop
into
shlb
pop
mov
dec
sbb
xchg
add
aas
cmpsl
sub
mov
sti
jns
lret
insb
cmp
jno
imul
sub
and
jo
sub
scas
or
sti
in
mov
insl
xchg
iret
je
mov
jmp
ss
add
fcoml
adcl
xchg
icebp
cmp
out
shlb
es
jns
cmp
shlb
repnz
lahf
cmc
mov
out
in
jnp
jl
dec
aas
cmp
jp
pop
mov
sti
aas
inc
jae
or
movsb
jle
test
xor
imul
out
push
cmc
sub
or
sbb
xchg
int3
insb
cmp
pop
mov
and
lahf
in
in
lret
xchg
inc
xlat
and
nop
dec
in
push
cmp
movsb
insl
sti
sbb
popf
sarb
das
mov
inc
shrl
js
out
pop
sarl
xor
jae,pn
sbb
stc
das
pop
jmp
in
adc
out
push
adc
outsl
xor
fistps
jge
push
push
cmp
and
fisubrl
jg
jne
mov
or
mov
add
mov
ret
imul
mov
ja
pop
arpl
or
xchg
cmpsb
dec
bound
in
das
xchg
call
fs
in
cwtl
inc
aaa
xorb
and
stos
out
pop
xchg
add
adc
or
rcrb
cltd
ret
lea
repnz
out
fnstcw
inc
jl
sbb
cs
cmc
cmpb
sbb
in
push
icebp
inc
adc
jle
cmp
stos
xchg
or
mov
lea
daa
dec
ja
dec
xchg
mov
add
aad
xchg
adc
sub
or
dec
and
lea
out
mov
sbb
push
jno
popa
ret
test
jno
mov
mov
call
ja
inc
insb
sbb
outsb
xor
sti
or
push
add
add
or
lods
cmc
lcall
cli
jmp
pop
sbb
mov
xchg
jno
mov
and
jmp
pop
movsb
mov
daa
push
lahf
bound
jb
mov
add
jmp
xchg
pusha
push
decl
xor
sahf
imul
test
sbb
add
push
addr16
outsb
addl
and
movsl
pop
dec
dec
pop
cmpsl
call
mov
sti
stos
roll
je
mov
or
aas
xchg
sbb
pop
or
aam
add
sub
jl
int3
sahf
cwtl
fcomps
daa
mov
scas
stos
mov
mov
mov
outsb
jp
aas
bound
ffreep
xor
sahf
and
fucomp
stos
push
in
lea
das
insl
aas
out
mov
xchg
mov
ljmp
push
mov
cltd
xchg
arpl
and
rcr
lss
push
stc
daa
jne
push
and
int3
lret
divb
sbb
lahf
xchg
mov
lods
outsb
js
outsl
sub
fs
push
inc
clc
mov
xlat
mov
call
test
rcll
jp
repnz
mov
dec
jo
push
cmc
cltd
cs
incl
cmp
xchg
sbb
fucomip
fisubl
lcall
push
call
pop
inc
pushf
add
and
jle
inc
rclb
jge
sbb
jne
adc
adc
pop
test
pop
scas
jp
cltd
lcall
add
aaa
test
mov
sti
in
sbb
adc
arpl
aas
lcall
sbb
push
pop
cmp
cs
aam
dec
jnp
jmp
test
mov
mov
sub
cltd
inc
data16
in
adc
sub
lods
pop
sti
dec
push
inc
adc
jnp
xchg
je
inc
cmp
daa
and
mov
loope
mov
xor
enter
aas
jns
jno
xchg
sahf
dec
mov
cmp
xchg
mov
inc
inc
xchg
test
das
insb
int
mov
push
jo
jecxz
iret
sub
sbb
mov
sub
mov
paddsb
xor
repz
mov
aad
jge
cli
lock
xor
mov
bound
jl
adc
clc
loopne
and
ret
fs
lds
jb
or
shlb
mov
aaa
xor
mov
xor
cli
lcall
enter
rorb
jg
or
in
jbe
fwait
jp
jb
push
in
cmp
mov
jmp
in
jb
mov
mov
jmp
push
mov
mov
popf
outsb
fcompl
add
gs
jge
test
stos
inc
out
push
mov
mov
add
push
sub
lret
mov
test
in
out
inc
incl
js
xor
mov
pop
in
or
rcrb
adc
lea
mov
jle
pop
rcl
mov
leave
pop
sub
sahf
call
jge
cmp
mov
inc
inc
jae
inc
js
in
hlt
sbb
pop
push
movsb
or
sub
pop
jbe
ljmp
add
push
dec
dec
adc
xchg
xor
sub
inc
inc
andl
int3
fbld
jnp
mov
cmpb
daa
sub
and
sbb
js
mov
outsl
xchg
mov
push
cmpsb
inc
popa
mov
jmp
in
or
enter
loope
lret
rorb
push
call
cmc
and
outsb
repnz
add
push
je
or
popf
test
jmp
and
pop
xor
test
push
sub
jge
fs
fists
in
xor
loop
loope
push
adc
cmp
sbb
movsb
rolb
mov
imul
hlt
mov
mov
mov
into
out
xchg
push
shrb
stos
pop
ss
lods
shl
adc
inc
push
sub
cmpsb
ret
inc
loopne
shl
pop
ja
rorl
jge
sub
mov
lea
outsb
xchg
pop
cltd
insb
mov
out
jg
mov
cwtl
insl
xchg
in
or
adc
test
jne
jg
xor
inc
push
jne
scas
jnp
jle
mov
xor
sub
scas
push
or
mov
andb
in
lods
in
jmp
iret
loopne
or
mov
pop
movsl
iretw
jno
decb
and
add
inc
and
xor
inc
clc
inc
mov
les
push
dec
pop
repnz
mov
mov
dec
jbe
nop
call
sti
jle
add
mov
sub
mov
out
fnstsw
decl
pop
jno
xchg
push
mov
cmp
mov
push
sub
push
int3
outsb
fcompl
and
xor
adc
pusha
test
mov
enter
push
int3
add
fistpl
orl
xchg
in
xchg
mov
les
mov
push
icebp
js
mov
inc
mov
and
not
jl
xchg
mov
mov
mov
push
rcl
pop
cwtl
mov
mov
push
loope
stc
adc
sti
stc
inc
push
xor
push
addr16
test
mov
ja
add
push
es
ss
dec
inc
xlat
pop
rclb
jne
jne
adc
add
lcall
je
inc
negl
leave
aam
fsubrl
sub
sub
shll
adc
lcall
int3
ss
pop
ljmp
mov
stos
xchg
aad
xor
xchg
cld
data16
cmpsl
xchg
sbb
adc
movsb
sub
adc
dec
adc
fwait
jne
cld
mov
int
push
mov
sub
sub
dec
dec
daa
sub
lcall
int3
lock
ret
sbb
aam
mov
cmp
jbe
icebp
jo
jecxz
push
xor
and
aam
mov
cmp
dec
aad
sbb
jecxz
xor
mov
nop
cmp
out
inc
dec
xchg
dec
push
cs
adc
mov
mov
imul
sub
outsl
and
test
cwtl
lret
mov
mov
aad
push
and
and
cmp
xor
movl
je
icebp
cmp
cli
clc
mov
xor
xor
sbb
cmp
pop
fldt
mov
push
jnp
mov
adc
sub
jns
or
sub
inc
cmp
mov
repnz
jge
push
rorb
aas
mov
movsb
test
jmp
mov
mov
dec
xchg
into
sbb
leave
sub
das
les
xor
test
mov
mov
fchs
inc
dec
xchg
ror
ja
dec
movsb
xor
mov
sub
push
test
inc
bound
iret
adc
popf
push
push
mov
hlt
in
cmc
cli
js
mov
ret
notl
pop
pop
lret
daa
call
pop
inc
cmp
in
movsb
ljmp
cli
aam
addr16
leave
jp
and
movsb
aaa
jmp
lds
mov
xor
dec
mov
call
ds
push
sti
popa
xchg
inc
out
jge
popl
push
fsubrs
jae
mov
addr16
dec
mov
jmp
js
pop
sub
rorb
or
pop
out
mov
movsl
insb
push
mov
push
pop
jle
arpl
out
cmp
xchg
mov
push
dec
cmc
dec
sti
push
call
mov
fcmovu
or
stc
add
and
mov
adc
daa
popf
int
cs
cmp
pop
cwtl
pop
push
push
mov
rep
daa
stc
mov
testl
sub
lods
ja
mov
adc
jns
mov
pusha
subb
in
inc
int3
test
popa
cmp
mov
sbb
std
adc
test
movsb
xchg
ret
xor
push
fs
rclb
mov
push
cmpsl
lret
ficoms
fs
pop
jne
cmp
in
push
rolb
fstps
and
sbb
mov
cmpsb
lods
sbb
adc
les
sbb
or
int
fisttps
sbb
or
mov
sub
add
fcoml
inc
fbstp
jb
imul
aaa
sbb
mov
mov
dec
mov
out
aas
inc
mov
sahf
or
xlat
dec
into
mov
cmp
imul
enter
test
jl
xchg
repnz
inc
dec
dec
inc
nop
dec
or
clc
push
nop
cli
lea
test
xchg
and
and
cld
fcoml
pop
mov
push
lods
dec
adc
mov
sbb
data16
push
mov
mov
sbb
add
rclb
das
mov
sub
push
insb
add
xchg
imul
insl
aaa
adc
pop
inc
gs
out
test
inc
insl
xchg
rcrl
jb
shrl
or
dec
dec
ljmp
inc
stos
cwtl
xor
lods
mov
shld
jg
sbb
movsl
sub
cmp
adc
xor
push
mov
pop
adc
pusha
mov
scas
outsl
stc
pop
lret
pop
imul
sbb
mov
nop
xchg
xor
cmp
xchg
pop
ja
dec
aas
push
dec
fisttps
insb
aam
mov
mov
pop
adc
or
mov
mov
cmp
inc
push
jns
pop
ds
jge
xchg
inc
xor
pop
dec
cmp
movsl
xchg
and
das
mov
fs
lods
hlt
test
add
xor
pop
ret
mov
orb
xchg
lods
mov
fsubs
xchg
mov
sbb
stos
mov
pop
aam
scas
sub
dec
sahf
adc
mov
jmp
iret
gs
or
sbb
sub
mov
push
arpl
xchg
loop
cli
cmp
clc
xchg
mov
dec
pop
sub
fcompl
and
int
subb
rep
add
popf
xchg
jmp
cmp
mov
dec
fidivs
icebp
iret
stc
push
test
lcall
loopne
int3
in
xchg
jle
testb
mov
fsubs
addl
push
iret
jbe
inc
mov
xchg
cmp
cmp
bound
xchg
lds
jnp
and
jno
adc
sahf
cmp
jno
xchg
and
imul
and
ja
adc
xchg
data16
inc
mov
add
outsb
push
out
js
push
stos
test
mov
fs
mov
pop
test
xor
cmpsb
and
adc
sbb
bound
fstps
mov
movsb
popa
adc
and
pop
repz
xchg
dec
fsubs
loopne
pusha
stc
fdivl
loop
cmovle
jae,pt
dec
lea
shl
subl
ja
pop
out
in
popa
enter
dec
xor
pcmpeqb
mov
and
pop
ljmp
cmp
push
mov
sbb
lret
rclb
adc
push
stos
nop
or
xchg
xchg
mov
sbb
mov
jno
ljmp
ja
sbbb
lea
xchg
stc
xor
imul
pop
pop
push
in
inc
or
xor
bound
xchg
call
lea
sbb
jle
mov
movb
adc
out
nop
mov
je
shrb
testb
push
mov
jo
dec
imul
adc
ja
daa
jo
push
mov
pop
jl
dec
shll
fildll
xchg
or
mov
scas
mov
jb,pn
cld
es
mov
lcall
rcrl
ret
stos
and
jno
scas
jecxz
mov
xor
into
cmp
xchg
push
jns
jno
jp
cmpsl
iret
adc
lahf
scas
dec
mov
mov
jae
test
andl
and
aam
repnz
out
rol
jae
icebp
in
pop
popf
push
sbb
testl
xchg
mov
dec
ret
bound
push
mov
insb
jg
test
xor
fsubs
stos
or
aad
sahf
nop
xor
ss
enter
and
push
out
nop
ficomps
lea
adc
test
jbe
es
xchg
and
pop
adc
movsb
aas
mov
xor
cs
sbb
sbbb
rolb
mulb
ret
pop
pop
cmp
jge
sub
popf
xchg
das
je
adc
inc
je
into
enter
leave
lods
and
scas
call
rcrb
rcrb
sbb
dec
stos
inc
push
push
mov
jp
push
bound
cwtl
sbb
ds
or
lds
icebp
cmpsl
adc
inc
je
rclb
cmp
mov
mov
mov
mov
adc
aas
jno
pop
jae
push
mov
pop
jbe
cwtl
mov
sbb
mov
cs
xor
stos
rcrb
jge
out
call
gs
out
sbb
mov
dec
adc
cmc
leave
xchg
aam
hlt
mov
jecxz
or
cmp
jle
in
push
cld
mov
in
push
outsb
fmuls
adc
jno
clc
rcl
lahf
dec
push
lahf
push
add
mov
ljmp
imul
into
cmp
aam
out
and
and
xchg
cmp
pop
cmp
into
js
jno
fnstenv
xlat
jno
sbb
fwait
loopne
in
aaa
outsb
mov
pop
push
cwtl
or
cmpsl
sahf
push
insl
sub
sub
adc
or
iret
ds
loope
cmc
mov
mov
xor
sahf
mov
jge
sarb
lock
dec
lock
int3
sub
mov
int
inc
mov
xor
cld
dec
mov
test
clc
fs
dec
je
pop
add
int
scas
add
sub
aaa
aaa
or
jecxz
inc
inc
imul
imul
xor
inc
jnp
and
imul
shrl
add
pushf
insb
fisubl
adcb
push
pop
ret
mov
mov
js
jb
adc
outsb
enter
ret
ret
das
mov
or
jne
mov
loope
mov
lahf
test
test
in
mov
mov
mov
dec
pop
mov
jg
adc
add
fldt
shr
rorl
pop
cmp
js
hlt
pop
and
lock
sbb
mov
add
insb
lea
xor
std
mov
jmp
adc
test
mov
xor
mov
jae
or
test
dec
cmp
add
int
inc
js
js
cmp
jp
iret
adc
mov
push
mov
mov
jp
shrb
gs
icebp
mov
sbb
sbb
push
pop
arpl
cwtl
mov
mov
in
jle
lods
add
adc
scas
jb
or
pop
jbe
lods
pushf
add
inc
shlb
xor
sahf
mov
or
test
bound
int3
addr16
sbb
jle
fwait
and
inc
xor
pop
insl
test
stc
xlat
xor
lret
cmp
push
sub
mov
dec
or
insl
movsb
cmp
faddp
push
sub
mov
inc
sbb
mov
jle
into
leave
xchg
sti
ja
add
test
pushf
shrl
stc
xlat
fnclex
xchg
xchg
mov
lds
push
inc
mov
shlb
movsb
dec
mov
insl
lds
dec
dec
pop
lea
iret
ja
mov
xor
icebp
mov
jg
jge
xchg
mov
push
clc
mov
dec
adc
and
mov
lret
sbb
lds
cmp
mov
fcoml
stos
imul
push
cmp
cmp
jl
add
scas
cmpsl
ljmp
movsl
daa
outsb
mov
mov
test
cltd
pusha
xor
js
and
scas
mov
add
pop
mov
mov
cmp
mov
dec
xor
cltd
jnp
mov
or
pop
sub
mov
sub
dec
pop
test
dec
or
addr16
xor
sbbb
stos
fildll
mov
iret
repz
mov
adc
mov
sub
imull
cmp
add
mov
test
and
push
int
xchg
inc
mov
push
dec
xchg
sbb
jbe
fstpt
fwait
xchg
lods
mov
iret
cmpxchg
data16
push
pop
repnz
repz
insb
xchg
fisubrs
adc
mov
sub
data16
mov
xchg
rcrb
addl
xlat
add
ror
aas
push
pop
out
push
mov
pushf
sub
test
or
pop
and
jno
lods
cmp
add
dec
scas
inc
cmc
mov
aas
mov
push
push
xchg
dec
add
fxch
dec
lds
ja
mov
mov
cmpsb
pop
xchg
rorb
ret
and
jp
add
dec
xor
mov
pop
mov
push
adc
mov
subl
push
xor
test
xor
in
movsl
xorl
test
loopne
fistpl
nop
aam
push
mov
push
aas
inc
ss
mov
sub
scas
arpl
das
ret
test
sarb
add
or
push
pusha
push
jnp
movsl
mov
jge
jp
daa
idivl
aaa
in
pop
arpl
lahf
sbb
mov
fwait
xchg
movb
repnz
xor
dec
loope
ja
pop
push
xor
push
fneni(8087
dec
push
jecxz
push
mov
mov
push
lods
sub
pop
push
or
movsl
mov
xor
mov
bound
inc
cmp
jmp
scas
addb
mov
pop
in
orl
mov
cmpsb
imul
xlat
movsl
push
xchg
aam
idivl
xchg
dec
clc
shrb
push
mull
dec
jno
pop
sub
mov
enter
inc
and
pop
jne
adc
aas
cmp
adc
and
insb
jne
push
mov
push
orb
xchg
cmpb
mov
jae
fiadds
push
ss
cmp
fisubrs
or
add
fldcw
mov
pop
test
jmp
fwait
mov
and
adc
shlb
fwait
arpl
cwtl
enter
xchg
pop
bound
lods
pop
movsl
fadds
pop
pop
in
test
lcall
test
dec
pop
or
sbb
inc
test
and
mov
outsb
jnp
aam
jae
add
test
aaa
pushf
xchg
je
or
mov
dec
imul
loopne
in
ss
xchg
pop
rcl
mov
out
or
es
movsl
lds
daa
adc
dec
out
mov
cmp
out
iret
idiv
movsb
aaa
pop
xchg
pop
push
pop
inc
and
cmp
mov
inc
cmp
loope
push
adc
into
dec
stc
aas
imul
xor
mov
in
in
cmpsl
push
pop
xchg
adc
ret
popa
ss
adc
mov
or
inc
iret
cmp
mov
push
das
xchg
dec
jae
outsl
mov
out
daa
pop
inc
ljmp
dec
sub
and
shll
ret
mov
adcl
outsl
shr
stc
ficompl
mov
and
shlb
fmuls
in
imul
adc
and
cmpsb
in
lret
cltd
jbe
arpl
ss
sbb
cld
in
push
push
push
iret
ret
xchg
pop
stos
cmpsl
cs
sti
ror
nop
mov
sbb
mov
ljmp
leave
sbb
add
test
aas
jnp
inc
cmp
inc
gs
adc
or
push
add
daa
inc
mov
jb
mov
ds
dec
xchg
or
lret
xor
in
mov
jno
mov
pop
xchg
xchg
pushf
pusha
inc
insl
data16
popa
inc
ja
mov
mov
insb
or
xor
mov
or
push
and
mov
loopne
inc
ret
sarl
push
stc
xchg
mov
mov
jl
repnz
and
mov
mov
push
insb
lret
sub
cmp
in
out
inc
push
cmp
cmp
push
insb
adc
loope
dec
push
push
push
jge
mov
lods
add
push
int
ss
out
cmp
jg
add
sub
aad
cltd
push
movsl
out
sub
sbb
push
lds
sub
jno
scas
hlt
notb
jecxz
je
pop
jae
jmp
call
push
in
xchg
inc
test
movsl
mov
fsts
pop
push
pop
fcoml
dec
mov
adc
jmp
dec
xor
jl
inc
mov
sbb
mov
inc
rorb
xchg
jmp
in
sbb
mov
push
xor
sti
lock
cltd
push
scas
js
xchg
sti
std
inc
movsl
dec
mov
shll
mov
xlat
out
addr16
je
shrl
or
adc
rorb
dec
jno
lods
aam
mov
lcall
mov
icebp
push
lret
push
loope
subb
push
dec
div
into
xor
jl
xchg
cmp
fiaddl
xchg
mov
and
sub
cmp
mov
xor
dec
dec
aad
and
xor
negb
inc
iret
lock
into
sub
xlat
cwtl
pop
daa
orb
mov
jno
lds
dec
add
inc
mov
test
push
test
hlt
xor
xchg
out
aad
adc
sti
call
or
or
call
cmpsb
xchg
call
jno
pop
aas
scas
mov
push
pop
stos
dec
dec
dec
popa
in
fistpl
aam
adcl
sub
orb
data16
stos
hlt
lcall
mov
lea
insb
in
xchg
ds
sti
mov
push
das
ret
lods
imull
test
lahf
or
ds
add
ss
je
pop
sbb
lock
or
and
inc
lret
and
push
mov
pusha
mov
and
lcall
pusha
mov
nop
mov
mov
fcompl
xchg
mov
ficompl
cld
jo
push
ja
mov
ss
inc
push
call
loopne
leave
fnstsw
dec
repnz
jo
sub
inc
add
xabort
rorb
jne
stc
mov
out
xchg
xchg
pop
repnz
push
mov
pop
sub
ja
jle
ss
sbb
pop
loopne
xor
data16
push
test
aaa
push
and
loop
in
pushf
pusha
jl
lahf
inc
mov
xlat
or
out
jp
jl
or
add
pop
sbb
loope
inc
adc
cmpl
lret
xchg
lea
test
mov
daa
push
movsb
push
push
mov
nop
rcll
inc
aam
cmp
shrb
shlb
xor
adc
mov
stos
push
dec
ss
mov
or
push
in
faddl
mov
shr
jmp
out
es
daa
notl
in
mov
mov
sub
adc
jg
and
stc
lods
repz
adc
sub
or
add
mov
int3
mov
pop
sbb
ss
xor
push
pop
mov
xchg
dec
jmp
xorb
cltd
and
adc
adc
mov
fdivs
dec
rcr
lcall
fsubrs
nop
and
test
mov
outsl
test
aaa
sbb
xor
sub
pop
mov
outsl
imul
sub
push
mov
das
inc
jb
push
mov
fistpll
inc
and
sub
jo
sbb
sub
fisubl
les
cli
imul
and
jecxz
or
sahf
adc
movsl
inc
into
es
cmp
rcr
xchg
leave
fisubs
fwait
ds
outsl
fstpt
vorps
jae
loope
bound
subb
or
jno
pushf
lods
outsb
jge
cmp
pop
mov
push
push
hlt
xor
out
out
xchg
mov
sbb
stos
int
cmp
mov
jle
xchg
lock
lds
fstps
push
jbe
fsts
mov
jecxz
out
fs
pop
mov
and
pop
push
outsb
pop
xor
stos
lret
and
stos
cld
in
cmp
data16
sbb
addb
sbb
aam
mov
test
lahf
push
aam
xor
lock
lcall
jo
xchg
xchg
cmp
mov
icebp
mov
call
push
divb
jns
or
divb
scas
pop
pusha
outsb
enter
sub
hlt
outsl
in
mov
pop
dec
jb
pusha
cmovg
test
mov
or
jb
push
imul
pop
pop
mov
add
mov
sub
adc
and
dec
lock
add
push
mov
imul
cmp
cmpsb
imul
push
push
movsl
adc
ds
push
test
incl
push
push
cmpsl
ret
adc
arpl
mov
repz
mov
in
leave
test
aas
adc
pop
ljmp
int3
les
lret
fisttpll
push
jle
adcb
jne
mov
push
cwtl
jle
lods
cmp
ds
or
push
xchg
mov
pop
xor
mov
dec
pop
push
bound
stc
outsb
clc
punpckhwd
push
movsl
es
insb
and
test
xchg
mov
out
xchg
or
jns
scas
dec
bound
dec
add
fildl
cli
adc
pop
inc
popa
and
call
test
adc
cmp
mov
adc
xchg
add
push
rcll
inc
incb
push
add
roll
stos
jle
mov
mov
push
mov
add
loopne
ja
cmp
aas
insl
cmp
je
js
mov
inc
ret
lret
test
lds
sbb
add
cli
fmull
pusha
and
into
in
xchg
testb
sbb
inc
cwtl
dec
mov
cmp
pop
xchg
hlt
jle
add
and
xlat
sbb
inc
cmpsl
sbb
imul
lods
push
pop
pushf
sub
lret
sub
mov
sbb
mov
pop
cmp
paddsw
pop
push
dec
ja
aas
xchg
cmpsb
sbb
clc
out
ja
mov
lea
je
mov
out
push
xor
lds
gs
out
cmp
jbe
gs
jl
pusha
ret
lcall
popw
rcrl
ljmp
inc
out
ss
lcall
dec
ds
push
xchg
or
popa
js
stos
dec
jno
push
cmp
test
lods
xchg
jo
imul
shll
push
mov
dec
ja
inc
adc
cmp
out
sti
mov
in
iret
out
mov
cmc
push
movsl
fisttpll
xchg
leave
and
hlt
insl
pop
decb
idivb
xor
mov
mov
push
jno
aaa
and
jbe
int
movsl
stos
push
leave
inc
push
pop
push
iret
inc
pop
call
ljmp
dec
sub
push
or
ret
aaa
fstpt
popf
xchg
cmp
fs
out
jl
inc
xchg
in
push
inc
jae
mov
mov
in
adc
mov
fwait
mov
mov
sbb
adc
cmp
out
pop
call
aam
out
jno
ja
popa
or
pusha
add
push
jbe
cmp
lret
or
clc
push
push
dec
arpl
lret
pop
lret
nop
mov
leave
xor
cli
xor
cmp
addr16
fwait
adc
inc
push
ret
push
or
je
pop
pop
or
rolb
shl
outsl
es
pop
or
cmp
fnstsw
iret
dec
sbb
lea
inc
mov
dec
mov
lock
test
jle
sahf
adc
jge
jo
scas
add
dec
sbb
fwait
ja
dec
jge
je
inc
sbb
shll
cwtl
xchg
sbb
insb
cmp
sub
push
rclb
xorl
lods
ljmp
or
mov
subl
add
js
and
cmpl
sbb
sub
fildll
lret
push
cmp
cltd
mov
outsb
rolb
shl
xchg
sbb
mov
popfw
insl
je
pop
and
mov
jecxz
andb
leave
sub
aas
insl
or
and
fildl
mov
retw
inc
xor
addr16
and
mov
call
jge
mov
mov
xchg
aaa
push
lret
test
or
addr16
dec
jae
sub
mov
adc
shl
sbb
idivl
je,pn
fldl
cmp
enter
mov
jno
or
and
inc
or
xor
leave
jmp
mov
das
out
stos
sbb
pusha
cmp
xchg
mull
mov
xchg
mov
mov
les
pop
add
fwait
jae
hlt
lcall
shrb
or
rorl
push
add
adc
roll
movsl
ret
sarb
sbb
rcr
call
push
cmpsl
repnz
inc
fiaddl
pop
mov
push
jo
inc
pop
push
test
xchg
mov
xchg
jmp
mov
add
out
pop
mov
imul
push
xchg
ja
aas
xor
sbb
ficompl
test
jns
mov
sub
icebp
ds
push
xor
cmpsl
clc
sub
insb
hlt
inc
rorb
aam
ret
xchg
or
out
xchg
adc
inc
adc
mov
sub
out
cmpsb
mov
and
loop
jmp
loope
dec
mov
fisubs
xor
or
mov
or
xchg
xor
sub
in
and
mov
aaa
mov
mov
pushf
or
cld
add
arpl
jo
jb
cwtl
push
push
clc
or
movl
lret
vpsubusb
faddp
adc
ljmp
adc
jl
or
xchg
outsb
lcall
dec
aam
and
jbe
test
jecxz
gs
ds
mov
mov
jp
in
stos
inc
dec
pop
sub
jmp
test
xor
xchg
jge
lcall
or
in
push
inc
repz
xchg
out
xlat
loopne
jbe
test
add
inc
rorl
stos
fdivs
pop
loopne
movsb
fs
add
inc
push
jl
sub
mov
mov
inc
xor
lret
dec
pop
add
shrl
and
das
std
shr
mov
jno
cmp
rcr
mov
inc
mov
dec
xchg
push
loop
addb
lock
push
add
in
cs
test
mov
adc
lock
adc
pop
or
cmpsl
lret
push
imul
jno
out
xchg
or
sub
loop
push
adc
jbe
mov
lds
test
lods
out
xchg
push
jne
test
mov
pusha
push
in
sbb
inc
loopne
cltd
jg
jecxz
es
inc
sbb
mov
in
and
ficompl
inc
dec
fmuls
rcrb
loop
add
xchg
xchg
pop
inc
pop
mov
cli
mov
pop
jo
je
rcrb
cmp
dec
sub
jmp
mov
pusha
data16
mov
pop
imul
ret
jns
cmp
pop
lds
bnd
or
xchg
dec
rcrb
push
lock
push
sbb
mov
push
cmc
int
in
mov
and
adc
dec
nop
or
clc
daa
sbbb
lods
scas
or
sahf
and
or
dec
cmp
inc
cwtl
out
or
push
adc
fdivrs
xchg
repz
repnz
popf
push
xor
mov
mov
sbb
xchg
lods
out
xor
adc
imul
cs
int
push
pop
cmp
inc
or
add
gs
fucom
sarb
jno
xchg
fisttpl
pop
sub
jnp
nop
mov
sub
add
mov
psubusw
movsb
enter
add
stos
push
fidivs
sub
mov
jno
push
cmp
popa
mov
into
enter
cmpsl
in
movsl
cli
jne
jg
sub
lret
sub
mov
mov
test
push
jnp
mov
add
imul
test
stos
mov
repz
push
mov
sti
lods
add
inc
out
and
mov
jg
jl
xchg
cmpsb
dec
mov
test
push
sar
sbb
sbb
into
jmp
enter
addb
push
out
mov
ss
bt
mov
push
lea
mov
adc
xchg
lcall
dec
sub
adc
push
cmp
shlb
testl
sub
bound
fldcw
and
sti
out
fwait
lea
arpl
mov
out
pop
inc
jle
dec
add
mov
sahf
and
dec
jo
mov
in
stos
and
add
inc
sub
loop
xchg
in
inc
pop
or
into
das
sbb
scas
cli
pushf
mov
in
ficomps
or
pop
xor
das
jae
clc
ret
out
rcll
and
push
push
inc
xchg
insb
xor
xchg
add
mov
lret
sub
daa
int3
dec
in
mov
cld
push
std
mov
enter
lods
pop
fs
lcall
jbe
sub
adc
inc
jp
fmull
inc
pop
ret
pop
cs
scas
push
test
or
sbb
sbb
out
mov
mov
or
xor
scas
push
inc
sub
mov
mov
add
sbb
in
mov
push
imul
out
je
xchg
movb
sub
pushf
sar
not
xor
mov
xchg
or
push
call
adc
add
adc
xchg
ljmp
test
mov
jp
inc
and
adc
movsb
or
lret
sbb
cmp
test
cwtl
mov
out
sbb
push
test
add
je
mov
adc
and
and
aas
cmc
mov
cmc
cmp
inc
pop
pusha
pushf
dec
ficomps
adc
and
inc
cwtl
ret
adc
xor
shlb
or
push
divl
xor
shlb
clc
leave
lods
incl
mov
mov
cmp
adc
xorb
sub
add
push
inc
and
mov
dec
mov
cmp
jbe
lea
pop
shlb
cmpsb
pop
add
mov
jno
in
cmp
pop
out
cmp
inc
lahf
pop
add
roll
aad
mov
rcrl
cmp
jmp
push
aas
dec
mov
cmc
mov
sub
cmp
sbb
xchg
loope
sarl
stc
rcrl
push
fsubs
fnstcw
mov
cs
mov
dec
arpl
mov
lahf
push
jae
into
mov
xor
pusha
enter
ljmp
es
cmc
test
mov
out
gs
push
dec
or
push
gs
xchg
es
push
imul
mov
lret
lahf
dec
or
sub
std
inc
sahf
lock
subb
out
add
cs
mov
aad
cmp
popa
dec
ds
add
jnp
sub
xorb
nop
mov
repz
sbb
stos
sub
je
outsb
movsb
adc
pop
clc
shll
pop
in
aad
or
mov
clc
test
sub
repnz
imul
cmp
and
xchg
adc
and
mov
mov
mov
and
sbb
gs
jg
enter
gs
clc
mov
jmp
inc
xchg
arpl
sub
fnstsw
sub
jae
movl
insl
icebp
stos
iret
adc
fsubrl
es
das
ss
mov
movsb
push
sub
fs
mov
dec
mov
or
and
es
pop
jp
adc
and
pop
dec
cmp
add
add
add
mov
adc
push
lret
xchg
pop
jb
out
or
arpl
push
mov
ljmp
loopne
dec
push
xchg
xchg
outsb
movsl
push
xchg
pop
inc
dec
xorb
test
out
dec
add
jmp
rcrb
push
pop
std
std
xchg
lea
sub
jb
shl
orl
leave
xchg
mov
inc
push
adc
sub
hlt
xor
cli
insb
dec
hlt
sbb
mov
enter
mov
jo
inc
pop
inc
sbb
testb
push
pop
lods
cmp
fistl
inc
js
xlat
js
jbe
jnp
cmp
movsb
jbe
in
arpl
adcb
test
aam
pop
xchg
ret
and
int
sbb
dec
into
jno
push
stos
jmp
mov
jae
and
movb
inc
cmp
sbb
xor
pop
mov
cmp
loopne
adc
push
add
sub
mov
mov
cld
or
inc
mov
cli
test
sti
add
pop
ret
fdivp
into
cmp
in
and
sahf
adc
rcll
rorb
push
out
and
cli
nop
or
nop
jne
icebp
sub
mul
jae
mov
inc
mov
mov
into
in
fadds
daa
ss
cli
cmova
xor
rclb
lods
dec
cmp
dec
sub
les
adc
xlat
cltd
out
ficoml
cmpl
jp
mov
or
jnp
xchg
jg
int3
psubusw
popa
jge
mov
pop
sub
addl
ret
xchg
std
or
pop
ljmp
mov
fidivrs
xchg
outsl
pop
andl
sub
push
out
mov
or
fimuls
xchg
mov
add
js
imul
addr16
test
sbb
in
mov
mov
into
adc
mov
lahf
mov
pop
jns
imul
mov
shr
fwait
mov
mov
cmp
lds
pop
xor
mov
fs
sub
push
cli
xchg
mov
and
cmp
test
lret
packssdw
mov
sub
sti
enter
not
nop
adc
pop
in
push
shrl
repz
test
adc
daa
test
int3
pop
inc
mov
pop
mov
clc
push
dec
and
mov
pop
movsb
int3
adc
loope
push
or
sbb
mov
imul
insb
clc
inc
jmp
fistl
in
push
sub
outsl
xchg
lea
mov
std
test
imul
mov
add
pop
notl
decb
notb
dec
cmp
jns
rolb
xor
rol
cs
mov
loopne
mov
adc
out
out
pop
stc
xor
insb
jmp
jl
int
push
mov
adc
data16
mov
stos
jmp
pop
notl
mov
add
mov
aam
jge
hlt
std
rcl
jecxz
inc
cmp
xor
aam
cmpsb
and
ret
lea
inc
add
js
mov
sbb
popf
sub
inc
mov
or
or
xchg
mov
les
mov
dec
gs
mov
shlb
adc
mov
xor
call
mov
shr
out
mov
xor
sub
push
xor
mov
cwtl
push
test
push
sbb
les
das
arpl
sub
add
mov
dec
mov
and
stos
repnz
fmuls
mov
fwait
adc
add
rorl
fcoml
fnstenv
xchg
mov
repz
dec
or
mov
mov
cld
mov
mov
cwtl
sahf
scas
test
fistps
push
rorb
push
cmpsl
pop
and
push
jg
mov
notb
adc
add
cmpl
xor
push
mov
rcrl
cmp
loope
jno
rolb
pop
pop
mov
daa
cli
mov
gs
xor
inc
aaa
push
or
daa
sbb
fidivrs
push
mov
and
or
ss
jmp
mov
inc
cli
adc
cmp
fmulp
scas
xor
loope
lock
xor
mov
and
pop
in
sub
imul
lahf
mov
pop
lret
mov
lcall
jnp
fwait
push
sub
mov
setle
jmp
xor
mov
mov
mov
add
jg
popf
mov
pop
jnp
fnsetpm(287
aaa
jbe
jns
cmpsl
mov
pop
out
cmp
das
into
mov
movsb
adc
cmp
lret
test
scas
shrb
int
repnz
lds
jne
jb
idivl
jbe
jb
cmp
inc
rcll
fsubrs
movl
mov
ljmp
xchg
insl
sbb
jmp
pop
mov
jge
aaa
pop
iret
insb
dec
add
add
jb
push
fucom
xor
test
inc
adc
rol
pop
cld
mov
xor
fcmovnu
std
repz
loopne
add
push
pop
sbb
dec
cmp
in
xchg
cli
sti
pop
lahf
mov
repnz
mov
jbe
cwtl
adc
fstl
ljmp
inc
imul
sub
hlt
dec
mov
xchg
fdivr
sbb
xchg
icebp
sti
mov
mov
outsb
lret
xchg
mov
sbb
es
lock
lods
fdivr
sti
cmp
out
scas
mov
jno
outsl
mov
js
pop
push
lds
sbb
add
mov
dec
and
lret
push
dec
inc
mov
xor
mov
and
in
mov
pop
adc
rol
dec
rcrl
and
cmpsb
cmpsb
and
popa
jbe
mov
add
dec
cmp
add
inc
cli
test
jae
std
repz
pop
test
sahf
push
mov
repz
aas
ja
scas
pop
push
lret
incb
jno
out
dec
pop
rcl
add
mov
cmp
into
lcall
push
or
cltd
nop
or
lret
push
je
cmp
cld
sar
push
sbb
mov
xchg
dec
mov
inc
sbb
push
sbb
into
or
dec
xor
add
mov
or
jbe
rorb
rcll
imul
repnz
in
int3
inc
xchg
xchg
pop
outsl
pop
lahf
lock
push
test
mov
jno
mov
sub
inc
adc
xor
pop
pop
sbb
push
mov
mov
daa
pop
add
pop
pushf
xlat
lds
and
cmp
xchg
cmp
inc
push
dec
pop
pop
xchg
mov
aas
lea
xor
sub
frstpm(287
fmuls
es
pop
jp
pop
cmp
sbb
adc
into
cltd
cmp
test
repz
stc
jp
lsl
popa
bound
cli
stos
cmpsb
cmp
push
push
mov
lods
mov
aad
jae
push
loopne
jne
or
dec
pop
pop
cmp
push
jns
lret
imul
push
cmpsl
stos
xorb
repz
mov
call
inc
xchg
cli
xor
mov
aad
dec
xor
inc
std
mov
cwtl
das
xchg
lods
shrl
lahf
bound
or
pop
int
adc
mov
push
les
test
push
loope
mov
or
jecxz
not
xor
jns
rcr
jno
ljmp
lret
cmp
mov
or
mov
add
mov
gs
dec
filds
ds
dec
outsb
fistl
inc
cld
cmpsl
xchg
leave
lahf
xor
push
jb
in
sbb
pop
push
movsb
cmpsl
sbb
addr16
mov
bound
add
xor
pushl
lret
aas
jnp
cmpsl
arpl
icebp
cli
popf
loop
les
pop
enter
clc
sti
gs
mov
imul
push
xor
pop
rcll
popf
das
mov
out
das
bound
sbb
jp
xor
cwtl
faddl
mov
in
mov
jbe
insb
lods
stos
icebp
mov
aas
pop
pop
mov
xchg
adc
mov
sbb
adc
cmp
pop
pop
out
xor
aaa
sub
push
ljmp
not
outsl
and
dec
mul
mov
sbb
mov
jle
iret
dec
push
mov
leave
inc
movb
imul
mov
mov
leave
mov
mov
les
insb
rorb
pushf
cltd
or
push
mov
jo
scas
pop
rcr
lds
stos
fwait
aas
pop
or
jecxz
cmp
shll
lods
test
mov
stc
xor
dec
mov
pop
jne
or
sub
out
jge,pt
add
mov
inc
ljmp
add
rolb
rcll
add
sbb
jmp
xor
leave
lea
adc
movsl
fs
and
push
cmp
dec
leave
add
mov
faddl
popf
cwtl
dec
push
mov
xor
add
outsb
jmp
iret
cltd
pop
fs
sbb
sahf
rclb
das
cltd
xchg
adc
xchg
std
in
sub
arpl
xlat
jo
jb
mov
push
test
stos
cld
adc
and
outsl
add
push
test
or
sbbl
sbb
fiaddl
xchg
mov
pushf
sub
push
pusha
pop
je
mov
fcmovnu
cmp
adc
inc
inc
cmp
xor
daa
popf
sub
aaa
xchg
hlt
cmp
jge
xchg
adc
cmp
mov
imul
fxch
daa
cmpsl
add
ds
sbb
xchg
gs
xor
push
cmp
mov
xchg
sbb
lds
xchg
fmull
insb
push
enter
inc
and
fdivr
lds
cli
stos
cli
movsb
in
xor
mov
call
cmp
and
push
sub
int3
push
sub
lea
adc
out
and
mov
lods
xlat
mov
mov
lods
mov
lcall
inc
fsubs
jge
out
fisttpl
loopne
sub
pop
cmpl
and
insb
mov
push
testb
cli
cltd
add
fisubl
pop
addr16
add
rolb
pop
xor
rorl
sub
in
lods
jl
mov
sub
and
movsl
push
xchg
lea
jle
xor
dec
shl
dec
mov
jbe
jle
mov
scas
push
ds
and
loop
mov
pop
ret
inc
jecxz
sbb
sub
adc
jno
jns
mov
xor
addr16
and
adc
mov
push
dec
cmpsl
jne
xor
out
in
out
aas
fucom
fidivrl
stos
mov
jno
shrb
scas
je
mov
out
sbb
xchg
sbb
cmp
jle
push
imul
jle
xlat
and
add
imul
fwait
lds
inc
dec
ret
mov
in
pop
xchg
adc
mov
sahf
adc
push
movsl
xchg
push
dec
inc
shr
ja
cwtl
stos
cmpsl
mov
mov
jnp
add
sub
inc
lds
xor
bound
pop
aad
adc
jne
cmc
mov
test
loopne
dec
lret
push
xor
mov
sub
shlb
pop
int
adc
push
jbe
mov
ds
cltd
call
sbb
lods
les
jmp
or
imul
mov
adcl
cmp
mov
xor
int3
and
leave
jb
ret
adc
pop
sub
lahf
jle
xchg
call
cmp
adc
xor
rol
shlb
mov
fwait
jns
ret
out
adc
in
lcall
mov
lret
in
test
sub
inc
xchg
add
mov
leave
repnz
mov
lret
add
shrl
adc
pop
test
sub
pop
and
testl
pop
insb
pop
pop
pop
jp
or
push
punpckldq
inc
into
jnp
ficompl
jg
loop
adc
pusha
subl
inc
mov
dec
dec
aam
in
mov
dec
or
or
push
daa
pop
adc
das
jne
call
sbb
mov
xor
xchg
push
mov
add
stos
loope
mov
sarl
arpl
dec
mov
mov
rcll
push
adc
out
shll
and
and
les
push
push
or
cs
jge
decb
ja
aaa
pop
push
pop
add
dec
or
stos
pop
dec
sub
lea
pop
lods
inc
adc
sub
push
adc
adcb
rolb
out
mov
ljmp
test
or
lock
mov
aas
ja
subps
adc
leave
lods
leave
jp
clc
sbb
jnp
mov
jp
sbb
mov
imul
leave
xor
pop
in
push
ds
movsb
mov
add
jb
jmp
push
or
jecxz
dec
insb
and
aad
into
lcall
test
jle
xchg
push
pop
fsub
mov
fldenv
dec
inc
mov
into
aaa
dec
sbb
lods
xchg
cmp
mov
rcrb
test
repz
or
leave
mov
jge
xchg
insb
lods
cmp
movsb
fdivrs
jl
sbb
dec
inc
lods
pop
inc
push
aam
cmp
pop
cmc
xlat
inc
xchg
nop
cmpl
loope
xchg
xchg
dec
nop
in
cmp
xor
stos
jmp
rcll
je
cwtl
or
and
mov
scas
adc
test
adc
cmp
sub
pop
sub
dec
flds
out
stc
adc
lods
pop
mov
xchg
or
sbb
mov
mov
or
xchg
iret
rol
jae
inc
adc
mov
jae
cmc
ja
pop
lds
fstpl
cmp
or
and
jmp
jecxz
mov
push
push
xor
test
sub
rcr
enter
es
call
enter
movsb
lahf
mov
or
scas
add
or
inc
daa
push
leave
mov
cwtl
loop
aad
ljmp
inc
lock
out
in
ss
mov
call
jnp
cmp
mov
sbb
jbe
lds
pushf
pop
mov
outsb
push
movsl
das
mov
and
or
inc
int3
idivb
repnz
pop
ss
loopne
shll
xor
rorl
cmp
lods
push
push
mov
hlt
daa
test
push
sti
pop
in
scas
pushf
jecxz
test
sbb
cld
mov
cli
add
dec
mov
adc
xor
loopne
lcall
inc
ja
sbb
push
fistps
pusha
and
mov
xchg
push
add
repz
jle
xchg
daa
repnz
pop
ficoms
fwait
xchg
jb
mov
aaa
mov
fadd
call
out
mov
adc
ret
cs
mov
mov
pop
ja
adc
call
subb
cmp
pop
sbb
inc
mov
and
jnp
jno
imul
subl
sbb
stos
mov
push
in
mul
ds
sbb
inc
lret
into
cli
mov
jmp
mov
ljmp
or
testb
mov
sbb
xchg
vzeroall
and
mov
lret
cmp
mov
cmc
sub
jmp
fbstp
test
inc
nop
cmp
jns
js
dec
or
pop
ds
aaa
inc
mov
dec
sub
push
push
mov
sbb
int3
ljmp
loopne
inc
adc
and
cmp
jo
fmuls
xchg
ljmp
xor
pop
adc
aas
pop
push
xchg
adc
mov
push
push
mov
cltd
cwtl
push
test
adc
psadbw
inc
int
lods
mov
cwtl
imul
xlat
ret
std
arpl
fildl
insl
js
int3
push
popf
out
scas
dec
nop
lods
and
dec
fcmovnb
pop
loopne
loope
or
xor
test
addr16
push
pop
jge
fsqrt
jg
negw
test
jns
outsl
imul
nop
dec
pop
sbb
pop
cmc
cwtl
mov
mov
daa
push
sbb
jo
cmp
in
push
pop
test
rcll
mov
arpl
mov
mov
lcall
mov
sub
sbb
push
cmp
negb
dec
stc
lret
test
xchg
sub
cmc
fsubr
pop
xor
fsubrl
hlt
shlb
mov
aad
adc
aaa
jp
mov
mov
xchg
xchg
fimull
dec
and
imul
jb
mov
pop
dec
daa
jae
scas
fwait
outsl
push
loope
cmp
mov
mov
inc
lods
push
stos
dec
adc
mov
ja
nop
adcl
and
jmp
push
icebp
adc
push
dec
push
imul
inc
mov
popf
add
lcall
and
pop
xchg
sbb
add
orb
mov
cmpsb
repnz
push
add
call
in
test
aam
pop
push
mov
xor
das
add
mov
hlt
lret
inc
mov
jb
movsb
icebp
inc
mov
loopne
es
inc
mov
mul
sahf
stc
add
mov
call
fstpt
pop
add
mov
mov
cmp
mov
sub
dec
sbbb
adc
mov
test
inc
dec
inc
sbb
and
data16
movsl
hlt
in
mov
dec
push
pusha
out
mov
pushf
jg
daa
enter
mov
jae
dec
hlt
cmp
in
mov
or
sbbb
xor
mulb
lret
mov
mov
enter
and
out
insl
adcl
or
adc
cld
les
aaa
cmp
stc
gs
cli
dec
sbb
sbb
dec
inc
xor
push
push
in
std
stos
xor
push
and
in
inc
cmpsb
push
aaa
cld
pop
mov
test
ds
jns
in
dec
mov
inc
pushf
in
adc
adc
test
cmp
std
jmp
adc
push
imul
push
lret
push
std
pop
movl
in
mov
js
stos
xor
or
jbe
xchg
xchg
repnz
cmpsl
dec
push
mov
dec
add
arpl
add
movsl
pop
jmp
mov
jae
es
cs
jnp
adc
jno
xchg
fldl
sbb
out
ret
sti
aad
in
fucomip
or
repnz
dec
cmp
lcall
pop
lock
sub
icebp
pop
push
lcall
push
mov
xor
out
sub
int
jae
and
cmp
dec
fwait
test
sar
mov
push
cmp
xchg
push
mov
call
push
push
aad
es
and
adc
cmpb
mov
add
mov
mov
inc
iret
dec
stos
mov
test
sbb
jge
ss
lods
idivl
mov
stc
es
pop
inc
push
jl
push
cwtl
les
out
add
imul
pop
sub
push
mov
pop
in
push
inc
mov
adc
pop
dec
xchg
dec
mov
out
ret
jb
xorl
fcomp
lret
es
push
rcrb
orb
jno
test
notb
jp
jns
aas
clc
cmp
fdivrs
pushf
dec
js
push
cmp
xchg
pop
sahf
xor
push
sub
jp
dec
sbb
into
dec
mov
or
and
pop
cmc
xchg
fbld
jp
adcb
pop
sub
jnp
lahf
cs
xchg
ljmp
test
adc
dec
xor
and
cmc
pusha
movsl
sub
pop
mov
jbe
icebp
sbb
mov
nop
in
ret
push
icebp
sbb
loop
dec
stos
mov
cli
xchg
mov
addl
icebp
xchg
fdivrp
adc
das
fists
pop
popa
lock
into
inc
add
cmp
add
fwait
insl
and
sbb
sbb
lea
or
aaa
add
adc
or
add
jp
aaa
das
bswap
mov
subb
mov
mov
sbbl
inc
es
push
inc
sbb
shlb
imul
cltd
ret
test
imul
mov
jns
fsts
adc
inc
jle
push
pop
cmc
stc
pop
mov
push
insb
mov
inc
pop
mov
cmc
in
sahf
fistl
dec
xor
insb
jbe
inc
or
nop
xchg
enter
fisttpl
adc
dec
cwtl
sahf
test
sbb
add
out
dec
fistps
aaa
jmp
fiaddl
shlb
pop
arpl
cmpsl
int
cltd
add
jecxz
sub
pop
inc
xchg
add
shlb
dec
fsubl
outsb
jb
loopne
lock
rep
pop
fcmovne
cmc
fwait
dec
push
inc
mov
jmp
ret
cmp
add
sbb
push
pop
mov
cmpsb
sbb
or
incb
mov
mov
push
sub
ljmp
add
aaa
shr
pop
add
push
xchg
cmp
cmp
gs
lods
flds
dec
adc
jnp
nop
rorb
pop
adc
cld
fwait
dec
pop
imul
mov
push
sar
and
pushf
int
fsubrp
lret
ret
lds
lock
dec
xor
dec
sub
sub
mov
jg
jo
sub
outsl
inc
cmpsb
adc
xchg
push
xchg
scas
addl
jo
inc
jg
sarb
adc
jp
sahf
inc
mov
nop
test
sub
inc
call
dec
sbb
cmpl
dec
xchg
dec
sub
das
or
test
jns
iret
sbb
xchg
add
mov
insb
popl
inc
sti
loope
rol
cwtl
xor
pop
inc
jmp
imul
in
mov
push
lcall
dec
and
jns
jae
rclb
lds
push
mov
inc
iret
xchg
cvttps2pi
xor
jp
adc
aam
and
or
in
mov
pop
sti
call
dec
fldl
cmc
mov
test
push
sbb
push
test
daa
mov
lret
sub
out
mov
rcrb
mov
psubb
jl
into
pop
add
fidivrs
jmp
aam
addr16
or
int3
div
pop
aaa
cltd
cli
jecxz
rcrb
xor
adc
dec
fs
insl
mov
fildl
stc
shll
jb
stos
and
or
inc
xchg
mov
xor
daa
arpl
icebp
jl
jle
or
cmpsb
inc
mov
test
in
sbb
cmp
inc
and
and
shr
push
sub
addr16
gs
jp
scas
push
aam
pop
inc
ja
add
testl
pop
mov
inc
mov
xlat
es
insl
inc
xchg
xor
pop
in
push
or
mov
imul
xchg
fimuls
enter
mov
lret
adcl
sbb
or
lods
repz
lahf
test
add
xchg
mov
add
adc
andl
fidivs
add
pop
and
outsl
scas
sahf
ja
ss
cwtl
sbb
mov
push
cmp
xorb
ljmp
pop
xor
int3
mov
dec
fcomps
iret
push
jo
shl
outsl
pop
sub
jg
pushl
scas
outsb
xor
jno
inc
sbb
xchg
ss
loope
push
xchg
out
pushf
fwait
push
into
sahf
push
sub
cmp
stos
cmp
mov
xor
sub
inc
loopne
imul
imul
dec
add
imul
pop
popf
and
test
sub
fwait
xlat
mov
popf
dec
or
orl
or
ljmp
or
les
test
fisubl
loop
inc
add
sbb
and
shrb
push
scas
ljmp
mov
pop
aam
pop
jo
jg
cmc
sbb
pop
scas
clc
cmp
sarl
and
out
cmp
mov
inc
xor
xor
jg
fadds
sub
psllw
and
xlat
pusha
inc
f2xm1
mov
call
dec
mov
ret
push
insb
aas
aad
dec
mull
adc
push
ja
inc
jle
mov
mov
mov
inc
jle
push
jns
adcb
push
pop
sub
xchg
scas
mov
pop
es
xor
insl
mov
or
xor
or
jmp
cmpsb
mov
pop
pop
cmp
sar
imul
clc
out
and
dec
or
sbb
subb
xchg
outsb
ret
arpl
sbb
mov
sub
push
ret
lret
sub
mov
push
add
xor
aad
jecxz
imul
and
adc
aas
sub
mov
or
cmp
or
and
aas
cmp
mov
jb
shrl
insb
lcall
inc
or
clc
outsb
cwtl
and
mov
sbb
insb
lret
add
cmp
scas
popa
dec
adc
hlt
ret
jnp
cmp
adc
sub
iret
inc
mov
into
mul
add
cmovp
cmc
and
sub
mov
mov
sub
imul
cmc
adc
pushf
sbb
loopne
sub
sbb
sbb
push
mov
add
dec
shll
test
and
or
daa
cmp
leave
mov
scas
loope
and
fwait
cli
pop
or
hlt
adc
jbe
or
mov
cmpsl
lret
ficoms
mov
adcl
or
push
mov
mov
xor
push
inc
push
imul
cmpsl
xchg
mov
inc
hlt
xlat
adc
mov
movsl
sti
pop
push
scas
outsl
mov
pushf
in
xchg
callw
push
sbb
xlat
lahf
or
xor
sbb
lea
out
punpcklbw
and
push
sbb
xor
lahf
ss
dec
mov
sahf
jmp
imul
jmp
cli
repnz
jne
push
mov
cld
lock
push
stc
dec
push
aam
into
push
sub
outsb
out
xchg
aaa
in
or
sub
call
test
iret
and
ret
add
push
repnz
fwait
push
jmp
jae
cltd
imul
sarl
cmp
out
mov
lcall
scas
das
jno
into
pop
mov
adc
test
push
pop
lcall
out
mov
divl
or
mov
xchg
xchg
lods
int
outsb
cmp
xchg
stos
lret
int3
xchg
call
movsl
push
out
xchg
mov
js
or
jg
cmp
incl
outsl
jbe
out
xor
mov
ljmp
lret
sarb
int3
sub
arpl
decl
movsl
xchg
or
jmp
mov
mov
das
lods
sar
sbb
inc
adc
pop
inc
push
lods
or
push
inc
mov
mov
lahf
cmp
lds
mov
jl
lods
mov
inc
sub
std
add
lret
mov
sub
ficompl
cmpsl
sub
push
popa
sahf
jle
flds
mov
inc
int3
sub
xor
in
mov
fwait
arpl
fstps
and
mov
stos
adc
stos
adc
sub
push
out
mov
pop
mov
out
add
int
rcll
cltd
jmp
add
mov
jbe
test
cltd
mov
fs
lods
fisubrs
push
hlt
out
rclb
pop
flds
jns
iret
popa
hlt
xchg
std
jns
bound
push
shll
and
sbb
je
adc
lahf
cmc
push
cs
sahf
add
loope
ret
adc
scas
mov
mov
sahf
test
lock
pop
mov
int
aas
mov
dec
cmp
xor
les
or
mov
inc
mov
mov
insl
add
in
out
movsb
sar
jecxz
ss
cmp
negb
popa
lds
fcmovbe
pusha
pop
xchg
ja
mov
call
sub
in
ljmp
in
mov
inc
cltd
orb
jl
out
test
mov
add
adc
pop
mov
xchg
push
dec
cmpsl
pop
sub
adcb
adc
popa
jae
mov
and
out
pop
mov
jmp
mov
cmpsb
movsl
mov
jno
push
fxch
shll
or
jno
ljmp
push
enter
stos
and
xor
mov
jns
xor
fucomp
repz
cltd
bnd
pop
push
or
dec
dec
imul
pop
or
mov
fcoml
leave
leave
and
cwtl
cmp
pop
lods
js
dec
cld
call
nop
ret
les
pop
fs
test
xchg
push
jle
jg
or
es
daa
cmpsb
inc
lds
ljmp
jae
insb
in
jb
pop
bound
cltd
sub
lods
les
popf
sbb
adc
pop
divl
sub
enter
xchg
ss
shll
cmc
lea
jecxz
or
or
add
mov
add
in
stos
sub
imull
inc
in
fsubrl
fists
loop
mov
sbb
dec
push
enter
jns
mov
aam
notb
mov
or
nop
inc
xchg
dec
push
dec
jecxz
mov
jge
cmpsl
adc
int3
push
xorl
test
outsl
mov
pop
sub
or
dec
jbe
cli
cmp
enter
fisttps
int3
add
sub
fldcw
xchg
int3
test
das
data16
xchg
pushf
jp
mov
jnp
addr16
adc
jp
cmp
cwtl
xchg
outsl
dec
jne
and
jne
gs
stc
psubsw
faddp
rcrb
mov
adc
out
xchg
inc
dec
xchg
jmp
mov
test
popf
lea
insl
xchg
sbbb
cli
pop
in
and
fnstcw
ret
loopne
xor
jl
pusha
fstp
test
orb
sbb
push
test
inc
roll
repz
and
jno
dec
test
xor
ds
or
icebp
inc
pop
test
mull
mov
scas
mov
hlt
fs
in
or
mov
jmp
shlb
fiaddl
jecxz
enter
mov
and
test
sub
movsl
push
or
adc
and
or
or
notl
pop
call
scas
jmp
jp
mov
out
sub
sarl
data16
sbb
sub
repnz
push
dec
mov
jmp
insl
xorb
negb
xchg
clc
mov
outsl
add
push
ret
lods
jns
call
jmp
add
outsl
outsl
jmp
sub
hlt
jg
and
mov
adc
rcrb
daa
and
xlat
inc
dec
addr16
push
mov
sub
dec
out
pop
sti
or
nop
xchg
mov
sub
inc
and
rcr
jb
cmp
pop
mov
mov
fdivrl
mov
fstpt
xor
aas
mov
add
cs
test
pop
lock
stos
push
jae
jecxz
push
cmpsb
xor
jo
xchg
lds
add
add
test
jns
cmp
and
ds
mov
mov
and
xchg
sbb
sbb
push
out
lcall
test
push
xchg
add
or
daa
cmc
sarl
jnp
jmp
mov
xchg
and
in
add
dec
sarb
lods
sub
sarb
fmulp
cmp
or
pop
das
jmp
jno
inc
mov
in
adc
push
fstl
cmp
fsubrs
lds
and
scas
dec
add
or
sbb
into
int
imul
mov
insb
test
xchg
mov
jp
iret
dec
inc
cmpsl
xchg
imul
test
jb
sbb
and
dec
sub
dec
cli
mov
fsubr
js
test
cmp
jns
pop
and
xor
into
popa
sub
jp
sbb
xlat
int
cmpsl
adc
sub
jo
add
lcall
jle
push
mov
and
subl
pop
repnz
or
andb
cli
cmp
push
inc
add
xchg
pop
xchg
push
mov
dec
and
xor
jns
jecxz
int3
pop
clc
adc
jl
inc
aaa
dec
cmp
mov
call
add
fstpl
repnz
cmp
push
movsl
dec
mov
movsb
adc
lcall
mov
cmpsb
adc
leave
aas
popa
xor
insb
fcom
fnstenv
cld
dec
mov
cs
inc
fildll
fwait
pop
and
inc
clc
jne
sbb
movsl
dec
jg
inc
or
inc
pop
push
cmp
stos
mulb
jl
pushf
inc
test
movsb
cmp
out
and
or
inc
push
sub
cmpsl
inc
test
lret
inc
fcmovnu
xchg
mov
in
data16
xor
icebp
adc
mov
pop
cli
push
xchg
aam
adc
ljmp
push
shl
jmp
out
fisttpl
hlt
pop
mov
inc
repnz
mov
cmpsb
repz
inc
inc
push
das
stc
outsb
mov
jnp
shlb
arpl
mov
ficomps
sub
jl
mov
jb
cmp
cltd
sbb
push
shr
movsb
jge
cmp
fists
testl
andb
cld
mov
adc
dec
loop
push
scas
fidivs
stc
inc
outsb
lock
adc
mov
pop
les
sbb
push
add
arpl
cmp
sbb
into
and
negb
pop
inc
jno
mov
adc
inc
mov
cmp
outsl
daa
adcb
sbb
aas
fs
xchg
xor
mov
out
sub
cmc
movsb
out
inc
sub
cmp
cmp
cld
pop
fwait
ljmp
sbb
and
outsb
mull
jo
sbb
sub
mov
out
jg
ss
jbe
xor
inc
jmp
mov
fwait
cmpsl
add
iret
sbb
push
cs
mov
addr16
mov
cmp
imul
jbe
filds
sahf
pop
inc
je
shrb
jnp
cmpsb
mov
bound
sbb
jno
rolb
adc
cmp
mov
stos
sahf
pusha
and
lods
push
jge
leave
push
xchg
xchg
add
or
js
aam
lock
jmp
mov
mov
cmpsb
lea
test
push
nop
push
push
push
in
pop
cmpb
inc
repnz
and
sub
cmp
mov
into
jecxz
mov
jg
outsb
xor
add
inc
lds
loope
add
ss
or
adc
cmpsb
inc
out
add
ror
cmp
adc
add
cmp
fiaddl
cmp
jbe
mov
jbe
xchg
sub
fstps
pop
cli
cmpsl
xchg
jmp
add
xchg
roll
mov
nop
xchg
pop
daa
ljmp
stc
add
aas
in
or
mov
sub
pop
sahf
jbe
mov
pop
jo
adc
xchg
jp
xchg
ja
dec
add
arpl
mov
mov
jle
mov
cmp
inc
add
sbb
not
repz
add
mov
outsl
lret
xchg
sbb
inc
cld
cmp
push
pop
pushf
xor
mov
mov
clc
xchg
pushf
pop
mov
dec
les
mov
mov
add
fwait
adc
int
rclb
dec
repnz
pop
out
out
lods
adc
fs
lods
repz
divl
jg
js
je
dec
loopne
fucomip
nop
sub
idivb
repnz
imul
pop
pop
dec
mov
mov
ljmp
sub
inc
inc
ja
push
add
inc
jae
and
test
mov
cmpl
and
sbb
das
imul
lahf
in
outsl
repnz
rcrl
mov
dec
mov
roll
push
xor
mov
std
outsb
mov
decb
addr16
adc
scas
nop
icebp
stc
icebp
imul
mov
fwait
jecxz
inc
mov
stos
adcl
dec
scas
inc
jp
add
sahf
cmp
loope
stos
popa
scas
out
in
shrb
mov
adc
addl
mov
push
scas
stc
dec
cltd
pop
mov
jo
les
jbe
adc
in
loope
push
fimull
mov
xchg
mov
mov
mov
into
sub
subl
push
jp
sbb
jbe
and
out
jge
push
sub
or
jb
and
cmp
mov
out
out
jl
idivb
xchg
and
xlat
push
mov
insb
cmpsl
jmp
insl
daa
mov
lods
xchg
out
lcall
pushf
jne
push
or
cld
xchg
push
xor
fldenv
and
mov
sub
insl
scas
sbb
shll
cmpsb
shll
inc
mov
jg
popf
les
inc
pop
push
neg
test
add
rclb
data16
das
addr16
xchg
push
fwait
sbb
in
into
scas
jae
and
out
jle
cmp
xchg
add
jle
and
pop
jecxz
inc
movb
mov
arpl
dec
out
scas
adc
jno
mov
pop
je
and
out
jnp
push
jno
aam
mov
lods
and
xor
xchg
jne
xchg
xor
or
push
or
stos
scas
mov
ss
imul
fucomi
ret
adcb
shlb
jge,pt
dec
pop
lcall
mov
cmc
push
stos
mov
aam
sbb
mov
cmp
mov
in
mov
mov
fmull
pop
xor
les
xor
mov
fstl
data16
xchg
out
sbb
sbb
aam
test
or
fidivs
sub
xchg
pusha
nop
cmp
push
xor
movaps
out
into
mov
ja
scas
xchg
dec
cmp
je
ror
adc
movl
xchg
dec
mov
or
stos
gs
cmp
fiadds
dec
imul
int3
test
mov
or
push
pop
mov
push
pop
push
movsb
pop
js
das
call
xor
inc
arpl
in
in
cld
cmpsb
cmp
mov
cli
sub
rol
and
push
dec
aad
test
outsb
mov
imul
jmp
fwait
inc
mov
xor
pop
ret
xor
cld
inc
mov
test
les
cmp
cwtl
fists
sbb
push
ret
aaa
mov
fcoms
sub
jb
dec
mov
mov
inc
fs
movsl
out
push
mov
out
xchg
lea
in
repnz
dec
cwtl
add
dec
jl
pop
sub
ja
sbb
in
popf
test
inc
daa
or
fwait
les
mov
mov
setbe
add
subb
arpl
push
push
dec
pop
lods
xor
in
inc
add
inc
adc
add
jbe
mov
push
fmuls
jg
xchg
das
inc
fsubs
cmpl
stc
mov
sti
cld
mov
in
mov
push
dec
test
dec
xor
mov
jecxz
imul
repz
xchg
cmp
xchg
scas
pop
mov
iret
pop
shll
cwtl
xchg
movsb
sub
add
enter
xlat
outsb
std
cli
pop
jne
sbb
and
push
inc
fmuls
loopne
jbe
mov
jnp
es
push
mov
and
adc
cld
mov
dec
push
xor
enter
push
ret
jae
or
lret
sbb
mov
loopne
movsl
adcb
popa
in
mov
jbe
adc
xchg
hlt
xor
fistps
jb
fstpt
stos
rorb
dec
cltd
jnp
xchg
lcall
mov
push
repz
dec
xchg
dec
stos
jnp
cmpsb
jo
xchg
push
bound
sar
adc
aam
loop
nop
or
dec
addl
stos
xor
inc
bound
jmp
shll
pop
fdiv
xor
shl
add
ds
pop
xchg
add
sbb
mov
iret
jo
push
xchg
adc
mov
inc
push
xlat
cmp
or
xchg
sahf
jle
xchg
adc
or
push
mov
idivl
mov
lcall
inc
pop
xchg
or
in
repz
ja
mov
sti
int
bound
mov
stc
cmp
int
shll
and
pop
pop
push
inc
cmp
cmp
mov
test
jmp
mov
dec
cmpsb
push
dec
push
in
xlat
and
fbstp
repnz
in
sbb
push
adc
call
pop
xlat
xor
mov
xor
fcoml
call
roll
shrl
dec
shrl
jo
rcll
icebp
scas
mov
xor
inc
jg
cmc
jo
pop
sub
sbb
inc
push
cld
xchg
xor
fists
mov
rclb
mov
xchg
sbb
imul
fiadds
inc
sbb
stos
sub
lods
leave
pop
in
scas
in
shrb
call
addb
sbb
fsubrs
hlt
outsl
fisubrs
xchg
testb
and
mov
cmp
test
push
cmc
push
and
push
xor
lds
mov
add
pop
fmuls
push
shlb
xor
inc
test
mov
sub
scas
sbb
mov
shlb
enter
or
xor
mov
lea
mov
or
push
test
clc
dec
inc
js
ret
aam
dec
test
into
add
ja
std
xchg
cmpsl
push
jb
das
push
jns
inc
adc
je
fimuls
adc
aam
dec
das
mov
stc
and
and
xor
es
push
add
movsb
or
push
lahf
into
add
fs
imul
or
in
cmp
mov
inc
inc
popa
repnz
jmp
out
mov
out
cs
lds
mov
lds
in
mov
out
adc
in
sbb
test
adc
inc
jns
push
pop
cmovo
pop
or
pop
mov
rcrl
and
repz
push
adc
ja
mov
sub
shrl
lahf
lock
and
imul
inc
and
or
mov
inc
dec
or
lock
cli
xor
xor
mov
iret
push
lret
jecxz
lret
mov
subl
divb
jl
inc
jecxz
in
fistpl
adc
mov
js
mov
stos
int3
rolb
jecxz
rcll
iret
sub
insb
adc
adc
and
push
mov
rolb
dec
cmpsb
sbb
mov
enter
lods
cmpsl
jg
adc
inc
sti
int
setle
ret
incb
dec
adcb
loopne
jnp
sub
jae
pop
arpl
pop
mov
add
pop
cmp
cmp
dec
shlb
inc
xchg
add
mov
in
cmc
or
add
mov
fwait
aad
rol
sub
mov
icebp
mov
popf
into
inc
mov
mov
imul
mov
xchg
ja
pop
inc
popf
push
jle
mov
fcom
pusha
add
mov
sbb
into
stos
insb
mov
push
and
mov
and
xchg
xor
outsb
fstpt
es
in
ljmp
gs
mov
test
mov
inc
jmp
stc
pop
dec
mov
mulb
mov
mov
stos
dec
jo
iret
xor
cmp
pop
insb
push
ja
call
push
clc
mov
mov
fwait
mov
lret
ret
push
in
mov
out
add
cmpsb
xor
dec
add
inc
and
jl
dec
ds
push
ret
jmp
adc
in
scas
add
pusha
and
rclb
mov
or
inc
mov
jg
fnsave
sti
orl
sbb
je
lds
popf
stos
imul
icebp
and
int
and
fildll
sub
xor
inc
jb
outsb
sti
in
sub
inc
inc
aam
push
jno
pop
popw
lret
fistpl
adc
imul
insl
nop
pop
inc
jecxz
jae
test
aas
pushl
pop
mov
xchg
jl
test
punpcklwd
mov
fcomps
inc
lea
outsl
stc
in
mov
mov
std
add
fs
dec
hlt
jp
xchg
sbb
push
add
pop
mov
imul
inc
mov
test
test
call
cmp
shr
sbb
stos
into
in
loop
pushf
pop
adc
sbb
in
pop
jmp
xchg
xchg
xchg
cmp
pop
inc
lea
inc
lahf
popf
imul
pop
mov
repnz
shlb
or
push
fsts
sbb
cld
jno
popa
into
dec
sti
lret
enter
xchg
fsubrp
dec
insb
inc
iret
adc
shl
ret
jne
fnstsw
rorl
and
pop
push
int3
rorl
sbb
jp
in
jne
popa
or
out
stc
addr16
in
test
pop
dec
sbb
mov
and
xor
ja
into
pop
mov
jmp
and
xor
jnp
lahf
jp
dec
jmp
aas
mov
ljmp
mov
stos
and
loop
mov
fsubrl
cmp
adc
leave
out
or
fisttps
jo
dec
xchg
icebp
sbb
xchg
imul
xchg
sub
jp
bnd
int3
sbbb
mov
lret
int3
lods
push
cmp
fcomps
into
push
jne
inc
cmp
cmpsl
arpl
mov
xchg
aad
add
pop
out
jge
xchg
jnp
or
push
or
out
testb
sti
mov
iret
cmc
int3
mov
insl
jmp
xor
in
fsub
ret
aam
sbb
inc
sbb
inc
fiaddl
inc
xor
lret
lahf
rep
xor
jo
push
or
push
es
mov
mov
inc
addl
sub
bswap
subb
popf
push
dec
gs
jmp
cmp
ds
mov
cltd
sub
add
dec
in
cmp
shll
jns
std
mov
pop
pop
xchg
push
push
movsl
sub
and
lock
xchg
pop
add
sub
sub
mov
out
mov
cmp
mov
adc
push
inc
cmp
or
outsb
jmp
dec
and
data16
sub
jo
mov
pop
pop
lret
push
push
xor
push
lcall
out
and
mov
mov
mov
push
cmp
inc
setae
fsubs
insb
mov
push
daa
jmp
in
leave
repz
ss
shl
movsb
cmp
adc
sbb
addr16
loopne
xor
pusha
inc
repz
cmpsb
out
jae
push
daa
and
stos
xor
mov
divl
push
add
mov
or
aas
push
lea
repz
push
sub
sub
mov
mov
popa
adc
popl
add
sbb
sub
lods
pop
lods
jnp
pop
imul
jbe
bound
sub
mov
aad
popa
mov
dec
cs
rorl
mov
mov
cltd
rcl
mov
cli
insl
sub
ljmp
loopnew
push
pop
dec
sbb
subb
sbb
xchg
cli
stos
push
jmp
rorb
mov
fcmove
mov
hlt
mov
inc
hlt
outsb
hlt
fildl
adc
cmp
push
jle
mov
aaa
cmp
ret
sbb
iret
dec
lcall
dec
pop
enter
and
daa
xor
mov
fdecstp
les
jae
in
inc
test
and
in
xchg
xchg
cmp
push
or
xchg
popa
sbb
aad
rcrl
insb
cmp
or
fucomp
testl
lds
fdivs
cld
xor
mov
ljmp
inc
jl
cmp
mov
movsl
xchg
dec
dec
call
pop
or
pop
mov
std
xchg
inc
xchg
addr16
xor
repz
call
outsl
js
jg
icebp
xor
fwait
lods
pop
jb
xor
mov
rcrl
ret
in
loopne
sub
loop
insl
aaa
jne
jne
and
or
lock
stos
bound
and
add
mov
iret
jb
pop
aas
sbb
mov
shl
adc
ds
leave
roll
xor
stos
repnz
lahf
js
xor
push
movsl
push
fisubrl
jge
pop
hlt
std
scas
divb
shlb
cmpsl
mov
iret
add
dec
outsl
pop
ljmp
shr
scas
push
inc
cmpsb
fsubrl
mov
cli
rolb
stos
mov
add
hlt
insb
xchg
mov
pop
mov
repz
sbb
jp
pop
mov
test
fildl
scas
and
leave
aad
add
xor
push
mov
pop
popa
pop
mov
aad
imul
jge
les
fnsave
imul
lcall
push
loope
inc
xchg
sahf
sub
mov
cwtl
cltd
dec
jmp
int3
push
xorl
push
adc
push
push
mov
out
and
and
hlt
leave
jmp
and
repnz
out
pop
fwait
cmp
ret
adc
fsub
jae
lods
in
mov
pop
inc
mov
add
and
in
xchg
negl
adc
mov
fldt
inc
sahf
pusha
sub
mov
rorb
mov
xchg
lcall
mov
js
pusha
ljmp
push
mov
pop
jmp
sub
out
or
cld
es
mov
popf
push
dec
sahf
aam
arpl
sbb
call
or
minps
mov
xchg
push
leave
in
mov
or
ret
int
mov
dec
xor
fldenv
jle
std
movsb
push
cmp
add
in
cmc
pop
cmp
lds
and
nop
xchg
addb
stos
pusha
mov
mov
pop
movsb
loope
movsb
lcall
and
scas
sbb
pushf
dec
lock
push
popf
fadds
imul
cltd
in
mov
adc
in
and
pop
lods
fimuls
push
stos
leave
cmp
js
test
xlat
sub
in
incl
sub
inc
push
lcall
cld
scas
test
sarl
mov
pop
arpl
jo
jge
mov
int3
mov
fdivp
mov
mov
cmpsl
inc
push
scas
xor
mov
sbb
push
xor
mov
or
mov
mov
pop
sar
or
stos
or
mov
rolb
rol
xor
fs
stos
ret
fucomip
scas
mov
in
movsl
test
outsb
xchg
inc
int
or
dec
xchg
jnp
mov
imul
loope
push
jns
mov
insb
rcrb
inc
sbb
push
xor
pop
inc
pop
add
jg
pop
lods
je
jge
dec
daa
out
aad
jecxz
inc
leave
pop
rolb
fisubs
rclb
jo
test
cmp
jbe
fimull
cltd
inc
pusha
mov
mov
and
push
rorl
inc
test
xor
fadds
mov
or
ljmp
xor
sub
adc
cmpsb
cmp
or
lods
test
mov
loop
sbbl
clc
popw
stc
in
cmc
popf
add
mov
add
inc
pop
inc
inc
pop
mov
in
cmp
movsl
xor
shlb
fcoml
mov
push
mov
loopne
jg
test
repz
addr16
xor
dec
jbe
shll
rep
daa
mov
mov
push
lret
pop
jle
xchg
mov
pop
adc
inc
cmp
gs
jp
data16
or
inc
std
insl
in
int
popf
xor
mov
fisubrl
xchg
or
cmpsb
mov
fmuls
and
mov
jl
call
shlb
sbb
xchg
and
int
xor
xchg
xlat
add
mov
cltd
and
fistps
data16
fst
out
and
fadd
les
test
mov
aaa
insl
xchg
add
imul
cmp
outsb
and
out
mov
xor
sub
adc
jns
inc
nop
adc
loopne
xchg
sbbb
jp
inc
sbb
sub
out
addr16
das
dec
cmp
cmpsb
testb
out
in
xor
insl
pop
into
xor
mov
pop
movsb
mov
mov
subb
jle
das
inc
xchg
jo
test
adc
jmp
add
adc
pop
push
jb
sbb
aad
dec
xor
jb
adc
adc
ds
pusha
faddl
adc
in
cmovno
fmuls
test
scas
jno
inc
jle
arpl
ljmp
cltd
mov
out
imul
lods
imul
sbb
int
inc
adc
mov
mov
jle
aaa
dec
jne
push
or
test
add
push
and
ds
jne
lahf
jmp
or
arpl
test
mov
adc
enter
add
subl
jl
loope
rorl
in
in
cmp
aas
ficompl
fisubs
enter
inc
cmc
sbb
lds
sub
dec
pusha
into
cmpsb
pop
inc
outsl
out
and
in
leave
scas
icebp
nop
and
jo
and
mov
sbb
in
cli
xchg
xor
xor
daa
fstpt
dec
outsb
test
lret
cwtl
dec
jb
jl
sbb
xor
addr16
dec
fstpl
fnsave
or
dec
dec
ret
icebp
dec
sub
or
xor
push
push
push
not
cli
jp
jbe
or
mov
push
out
push
call
pop
mov
hlt
inc
test
jge
insl
std
pop
test
fadds
mov
sbb
add
add
fs
shll
cmp
sbb
push
xchg
or
into
jnp
insb
sbb
dec
fwait
jae
in
cmp
jbe
or
sbb
push
pusha
or
cmp
lret
scas
lods
lahf
stos
xor
in
stos
adc
adc
inc
mov
lods
mov
fnsave
imul
cmp
mov
xchg
into
cmc
sub
dec
and
or
ficoml
ljmp
or
stc
test
aas
jecxz
fists
or
mov
xor
mov
scas
mov
inc
orl
add
mov
inc
ljmp
faddp
jl
xor
icebp
iret
ljmp
sub
mov
jmp
imul
mov
shrl
adc
gs
insl
fidivrl
je
add
shr
xchg
inc
sbb
cwtl
das
add
push
xlat
push
pop
push
into
xor
mov
jns
pop
push
lods
lret
jg
mov
test
lea
add
push
push
daa
leave
mov
jge
outsl
addr16
xchg
ds
xchg
jg
loopne
lret
xchg
add
movsl
push
add
testb
daa
jg
pop
adc
pop
cmp
in
add
jl
cmc
cli
sub
mov
ds
pop
cwtl
pop
out
adc
std
orl
loop
push
pop
pop
imul
fstps
cld
sub
mov
inc
shll
jp
mov
or
sbb
cmpsb
inc
inc
jl
and
out
negb
mov
cmp
aad
lret
sub
ljmp
rcr
icebp
push
jns
xchg
jl
imul
pop
lods
imul
out
les
mov
clc
xor
inc
inc
in
and
mov
dec
subb
adcl
push
in
pop
jo
inc
pop
insb
mov
cmpsb
js
rol
pop
xchg
inc
shll
xchg
cltd
gs
orl
lss
add
fdivrl
push
lcall
dec
pop
cltd
stos
xor
gs
pop
inc
lods
ljmp
and
sub
push
jecxz
movsl
add
ss
mov
mov
sbb
xchg
mov
outsl
cmp
mov
cli
pop
gs
popf
jae
hlt
pop
ret
jg
aam
jbe
loope
xor
sahf
stos
and
sbb
sbb
call
cmp
fldt
scas
sti
pop
jo
aad
mov
pushf
cs
dec
lea
arpl
pop
xor
mov
mov
addb
push
inc
or
out
inc
les
imul
ja
pop
into
fidivl
mov
inc
sub
popf
mov
push
jne
pop
mov
shlb
inc
sub
sbb
xorb
push
jne
shll
enter
sbb
mov
mov
inc
orl
popa
fs
jo
sbb
mov
adc
lods
jg
movsl
push
hlt
lock
mov
mov
mov
inc
add
shr
xor
mov
fdivr
jae
mov
pop
imul
or
add
sub
fnsave
ficoms
dec
faddl
cmc
sahf
test
mov
test
xor
dec
xchg
sti
xlat
sbb
cwtl
push
xchg
arpl
icebp
inc
mov
adc
jno
mov
mov
adcl
inc
jp
mov
cmp
loop
push
and
pop
jbe
stos
xor
das
in
mov
adc
sbb
cmp
lods
lret
stc
shrb
repnz
push
sahf
xchg
roll
sbbb
xor
cmp
cmp
push
cwtl
sub
push
dec
mov
ret
rcrl
int3
scas
jmp
cmp
int
lds
popa
adc
push
cltd
icebp
frndint
push
cmp
cmc
sbbb
mov
ret
scas
js
sub
pop
fcom
add
xchg
mov
mov
adcl
dec
mov
insl
sub
xchg
and
mov
aaa
xchg
xlat
in
cmc
xor
aad
inc
dec
orb
dec
in
pop
or
subl
scas
mov
outsl
iret
gs
fsubl
xorb
mov
cli
sbb
and
mov
push
sbb
mov
aam
sbb
or
sub
fistl
pushf
loopne
stos
xor
cwtl
dec
cmp
fcompl
ljmp
iret
std
mov
push
and
fistps
std
and
and
leave
inc
and
cmpsb
adc
mov
adc
arpl
inc
test
dec
cld
xorl
jge
jmp
aaa
popa
rcl
pop
subb
inc
inc
sbb
iret
fldcw
dec
sub
arpl
in
in
cmp
jmp
das
inc
pop
jmp
adc
pop
mov
addb
call
movsl
ja
jo
add
dec
pop
inc
loope
addr16
in
fldl
xchg
add
mov
loopne
clc
outsl
inc
jle
sub
mov
test
int
push
and
and
push
cld
in
and
ljmp
sbb
test
push
movsb
out
xlat
jmp
clc
clc
out
les
jne
ficompl
shrl
addr16
lahf
dec
insb
ds
mov
ds
pushf
xchg
cmp
jo
cltd
add
dec
mov
push
daa
mov
gs
adc
rolb
sub
rol
dec
mov
mov
lods
repnz
call
pusha
pop
fmull
imul
pop
jle
mov
xorb
enter
adc
sub
inc
aaa
jmp
cld
jbe
mov
sbb
jno,pt
scas
sub
movsl
push
lret
jns
and
loopne
shll
jle
aad
xchg
shlb
jge
mov
outsl
push
les
fisubrs
test
fldpi
jmp
iret
in
push
jl
jp
scas
aad
fldcw
xchg
in
pop
cli
inc
xor
push
or
in
xor
push
lahf
je
lret
daa
out
cli
mov
stc
xchg
jbe
fmull
adc
mov
xchg
xor
sbb
rcrb
addl
xlat
loopne
push
mov
jae
movsb
mov
xchg
and
dec
add
daa
fistl
pop
mov
lock
sbb
mov
lods
jge
outsb
ja
hlt
enter
pop
and
fildll
sub
enter
int3
dec
add
cli
test
dec
push
inc
repnz
jb
xchg
bound
imul
jecxz
xchg
mov
dec
jmp
test
sub
jl
xchg
add
test
pop
stc
cmp
adc
dec
shll
xchg
sti
and
sub
mov
xchg
mov
sbb
daa
nop
scas
loope
fstpl
stos
lods
jl
inc
dec
stc
mov
mov
push
add
hlt
fmull
push
add
ds
inc
fstpl
sub
cmp
sub
jg
addb
or
pop
or
mov
icebp
add
cmpsl
cwtl
addr16
test
xor
fiadds
dec
push
mov
ret
xor
lods
outsl
jns
ljmp
push
pop
loop
push
loop
sbb
cmp
out
ja
sub
mov
ret
rolb
adc
push
xchg
jmp
sub
or
xor
cmpb
lock
enter
inc
jnp
and
pushf
sbb
popf
loop
aad
outsl
dec
dec
and
jle
push
pop
movsl
aad
push
lods
pop
add
jne
lea
packsswb
mov
inc
push
std
push
mov
subb
test
xchg
clc
lea
outsb
jnp
stos
scas
cmp
jns
push
mov
je
out
sbb
xor
dec
lret
push
add
mov
fiaddl
pop
fstpt
mov
and
jl
fldln2
iret
jbe
xlat
cmpsl
jp
cmp
andb
stc
push
mov
pop
pop
lock
nop
pop
dec
movsb
xchg
fmulp
cmp
lret
lahf
subl
mov
scas
mov
ljmp
imul
in
xchg
add
xchg
ret
dec
out
and
shrb
dec
sbb
pop
inc
jb
sbb
adc
mov
fcompl
xor
imul
adc
push
pop
cmp
mov
sbb
in
pop
push
adc
and
enter
and
repz
or
jbe
test
inc
cmpsl
aaa
mov
out
pop
mov
xchg
mov
sti
repnz
lea
scas
inc
adc
xor
sbb
scas
adc
cmp
outsb
and
out
xchg
adc
incb
gs
jns
xchg
dec
clc
pushf
rcrb
pop
mov
cmpxchg
jecxz
test
and
push
dec
imul
pop
lret
push
std
jb
fisttps
dec
scas
clc
lods
shl
je
mov
mov
stc
leave
jge
sub
or
xchg
sbb
sub
sub
mov
movsb
dec
testb
push
cmp
push
stos
pop
mov
and
mov
xchg
adc
lds
loop
lods
loop
xor
inc
adc
movsl
pop
or
mov
in
sbb
pop
cmpsb
xor
mov
shll
add
test
into
mov
jl
insb
divb
fs
je
xchg
arpl
inc
lcall
sub
mov
pop
mov
addr16
test
cwtl
push
clc
les
outsl
jp
ja
repnz
aas
mov
movsl
fisubrs
mov
jmp
aam
inc
inc
push
mov
mov
inc
loopne
jne
incb
arpl
in
xchg
bound
cmp
fs
mov
cmp
sbb
and
push
xor
cmp
adc
outsl
sub
pop
js
out
rcrl
repz
xor
pop
int
cmp
andl
les
mov
cli
out
imul
mov
cmp
add
pop
sar
std
pop
xor
lds
adc
push
popa
rcrl
pop
push
lcall
out
insb
adc
insl
jns
adc
movsb
subb
data16
aas
push
mov
pushf
into
fcompl
push
fisttpll
push
xchg
add
sub
arpl
dec
shlb
cmp
xor
ja
and
mov
imul
jbe
int3
jns
and
out
imul
lret
dec
push
imul
push
mov
movsl
and
ja
or
jae
imul
je
adc
mov
pop
push
sub
sub
clc
bound
nop
mov
lock
lods
mov
adc
jb
ljmp
fidivrs
mov
xchg
mov
jl
dec
cmp
cmc
mov
fsubp
lea
xor
jl
stos
pop
into
les
xchg
ret
iret
aaa
mov
adc
lods
je
shlb
jnp
repnz
jno
xchg
cld
or
push
out
pop
mov
imul
dec
or
xchg
adc
sti
push
dec
cmp
add
sub
mov
test
xor
in
aas
jb
loope
les
decl
cwtl
push
push
lea
xchg
pop
adc
sarl
cli
insb
jae
and
mov
xchg
mov
test
cmp
xor
fbld
sub
into
gs
push
sbb
or
aaa
shl
outsl
outsl
loopne
scas
aad
cmp
mov
sub
mov
leave
int3
sbb
ret
push
mov
shll
ret
xchg
add
push
add
outsl
mov
enter
stos
adc
outsb
nop
outsb
test
xchg
push
cmp
and
lods
inc
sahf
int3
inc
xor
lea
sub
movsb
mov
fsubs
mov
push
out
push
femms
cmp
cmp
lds
mov
sub
push
mov
imul
sbb
ja
sbb
jge
imulb
and
test
ret
sti
mov
cmp
or
jb
xorb
jmp
sbb
adcl
jae
stc
mov
call
scas
jmp
sahf
cmc
movsl
add
push
dec
rcll
icebp
jno
mov
gs
lcall
stc
lea
movsl
xchg
xchg
sub
xchg
dec
sub
sbb
sbb
enter
out
rcrb
test
int3
and
pop
pop
scas
div
cmp
sbbb
aaa
mov
cmp
xor
fadds
jae
in
in
movsb
repz
lcall
sahf
test
cld
ss
push
or
and
mov
inc
repnz
push
jo
stc
mov
sbb
dec
data16
mov
xor
push
cmp
sub
mov
js
mov
or
js
insb
jne
mov
inc
in
nop
pusha
aas
ret
jbe
jo
dec
jmp
cmpsl
lahf
lods
xor
clc
fbld
pop
pop
fistl
leave
pop
js
jge
mov
in
rcrl
loopne
xchg
insb
mov
dec
fwait
jecxz
mov
jle
adc
and
cltd
dec
push
insb
and
ret
inc
fldt
xchg
or
ja
push
inc
insl
clc
ja
mov
add
or
popf
push
inc
xchg
mov
ja
loope
xor
dec
lods
mov
xchg
int3
lret
jmp
fucomi
sahf
in
fstps
out
fdiv
pop
test
adc
pop
in
scas
cwtl
jae
adc
adc
repz
imul
sub
cld
mov
pop
clc
daa
adc
xor
scas
out
mov
mov
xor
ror
adc
fstpl
lea
jl
sbb
xchg
mov
cmp
jne
add
imul
insb
ret
xor
pusha
pop
mov
pusha
loope
sub
out
xor
mov
jo
ljmp
sub
pop
ljmp
adc
dec
adc
outsb
add
fwait
mov
movsb
jl
push
and
ljmp
lahf
mov
es
scas
xlat
pop
mov
lds
scas
out
xchg
imull
sub
out
xchg
inc
mov
add
xchg
or
inc
adcl
dec
add
fidivl
cli
xchg
add
lcall
in
add
inc
sbb
add
fisttpl
push
rcll
orb
and
adc
jmp
cmpsb
lret
pop
sub
mov
pushf
cwtl
nop
bound
push
push
inc
xlat
jb
and
mov
mov
mov
fcomp
test
sbb
in
sbb
movsb
push
mov
ffree
push
lret
push
out
push
cwtl
inc
pop
dec
or
push
push
lods
in
sub
push
adc
movsb
inc
push
dec
ja
cmp
daa
repz
mov
pushf
pop
insl
pop
add
mov
pop
inc
and
dec
outsb
enter
ja
sub
imul
jmp
lcall
xchg
push
jge
jecxz
je
pop
lret
imul
cli
lret
lahf
iret
push
sub
fcompp
xchg
cmp
lods
sbb
cmp
in
mov
dec
out
pop
pusha
sub
add
mov
dec
ficompl
addr16
dec
inc
sbb
in
cmovnp
jecxz
inc
or
mov
adcl
daa
fstpt
insl
pop
idivb
jno
add
sbb
fidivrl
cld
fwait
pushf
hlt
fsts
bound
mov
rcl
dec
pusha
pushf
pop
aad
xor
adc
lahf
fildll
rol
jg
dec
cmc
mov
movsl
lret
out
outsb
push
orl
out
or
jge
in
sub
insl
rclb
push
mov
and
pop
arpl
mov
subb
sbb
data16
loope
pop
add
in
pop
jne
mov
inc
movsl
mov
pop
push
addb
lcall
das
jnp
aas
inc
dec
cmp
inc
movsl
push
fs
xlat
dec
mov
mov
addb
fwait
xorl
sahf
inc
repz
cmp
mov
and
xor
in
int3
xchg
shrb
popf
xlat
roll
pop
je
outsl
popa
inc
aam
cmp
mov
test
ret
packssdw
mov
fmull
pop
out
imul
xchg
jp
orb
xchg
test
lods
or
push
lahf
mov
fs
adc
fwait
add
push
mov
lret
push
hlt
clc
jnp
insl
popa
ss
repz
out
dec
mov
dec
bound
outsb
insw
push
mov
or
or
imul
lret
cltd
bound
pop
inc
jnp
and
jp
imul
pop
rolb
jle
mov
pop
cmpsb
xor
repz
sub
not
mov
dec
xor
mov
arpl
xchg
sahf
cmp
cmpsl
xchg
xchg
xor
in
arpl
sti
pop
cltd
decb
sbb
hlt
into
insb
jb
scas
mov
ja
mov
lods
fsts
inc
dec
xchg
dec
fdiv
inc
test
loop
gs
rcr
cmp
hlt
dec
mov
lret
lock
add
mov
adc
mov
cmpsb
push
mov
cmp
pop
mov
push
loope
stos
addr16
xor
mov
leave
test
cmpsb
cmpsl
pop
movsb
cltd
daa
adc
add
xlat
clc
fists
xchg
pop
and
mov
repz
mov
hlt
adc
xor
int3
xlat
add
cmpsl
adc
or
push
lret
cmp
mov
ficoms
push
test
mov
sti
cmpsb
push
lret
dec
sbbb
dec
dec
cmpsb
gs
cmp
mov
jae
hlt
ljmp
mov
pop
daa
jae
and
inc
out
lock
mov
imul
push
sti
push
pop
cmp
pop
repz
mov
pop
mov
and
jae
xchg
or
xchg
cld
jecxz
dec
push
mov
leave
lods
in
jno
cmpsb
jp
insl
pop
xor
or
pop
adc
mov
out
cs
outsb
dec
dec
loopne
shl
adc
jp
mov
stos
pop
sub
mov
bound
mov
jp
sub
dec
push
sbb
int3
dec
fcoml
movsl
outsl
cld
in
inc
subl
pop
jl
out
jle
mov
lret
loope
push
inc
out
inc
aas
test
sub
aaa
stc
mov
int3
inc
pop
mov
sub
orb
vmulss
pop
lcall
lea
pop
icebp
mov
push
push
xor
ss
cld
popf
js,pn
icebp
fcmovnu
jp
pop
add
xchg
inc
push
and
inc
or
sti
pop
cs
xor
call
inc
push
lret
pop
jnp
repnz
cwtl
jae
jbe
jmp
subb
shlb
jecxz
mov
mov
lock
stc
mov
and
xor
dec
inc
lret
jne
jo
pusha
in
sub
mov
pop
fwait
testl
cmp
movsb
test
stc
mov
test
test
xor
mov
jo
dec
in
or
loop
fsubrs
mov
xchg
xlat
mov
cmp
cmpsb
adc
cmpsl
push
jge
int
dec
movsl
lcall
mov
xor
mov
jmp
loop
rclb
ret
mov
adc
adcb
cli
enter
or
pop
aaa
dec
mov
aaa
xor
scas
mov
mov
cmp
xchg
cmc
xor
repz
xchg
sub
cmp
ljmp
pusha
adc
mov
fadds
mov
add
clc
lcall
aaa
test
jno
ds
out
sbb
adc
sub
push
dec
cmp
pop
pop
aas
rorl
dec
xor
in
sub
dec
ds
data16
bswap
mov
ljmp
movsb
cs
fstl
dec
sti
jl
movsl
negb
cltd
ds
adc
cs
loopne
shll
fldl
xor
pusha
mov
mov
cwtl
and
adc
cmp
jecxz
inc
xor
mov
ljmp
adc
pop
cmp
shrb
jl
repz
jnp
jbe
std
insb
in
std
adc
mov
add
imul
pop
orl
lret
add
push
in
push
fucomip
std
idivb
or
pop
popf
add
out
sub
sahf
sbb
cmp
fucomi
mov
gs
or
sbb
push
add
inc
loopne
push
scas
movsl
push
and
push
jno
xor
into
pop
pop
lcall
mov
jge
hlt
and
iret
movsl
or
inc
inc
or
out
xchg
not
cwtl
pop
fcoml
pushf
insl
or
dec
and
aaa
mov
inc
cmpsb
and
iret
test
mov
mov
push
and
adc
repnz
out
sub
aaa
dec
inc
cmpsl
sarb
cmpsb
push
or
iret
sahf
popf
in
push
mov
out
inc
dec
pop
mov
inc
repz
sub
loop
outsb
dec
jo
sarl
sub
sarb
mov
jno
mov
inc
inc
and
ljmp
mov
add
imul
jae
test
aaa
or
aas
xor
mov
stos
insb
pop
sub
xorb
push
xchg
je
les
leave
sub
ss
cmc
mov
test
fwait
sub
lock
ss
cmc
lret
test
jae
xchg
mov
es
mov
xor
or
xchg
and
fcomip
xchg
or
xchg
xchg
int3
or
dec
xchg
dec
pop
rcrl
pop
xor
sahf
mov
cwtl
cmp
push
loopne
insl
fnstcw
pop
out
or
mov
mov
rcll
xchg
add
dec
jb
mov
dec
xchg
dec
imul
mov
mov
shlb
sbb
fstpt
dec
lret
fsub
push
repnz
scas
dec
jle
add
mov
aas
xchg
xchg
jmp
xchg
lret
push
outsl
mulb
cli
inc
popf
pop
ficompl
adc
mull
iret
add
push
call
push
inc
arpl
mov
dec
cmp
sbb
adcb
mov
orl
in
add
push
mov
mov
out
cli
addr16
lock
and
and
add
add
and
dec
pop
xlat
jb
mov
das
lock
cmpsl
shll
lods
mov
mov
loopne
scas
out
mov
imul
idivb
fisubl
inc
data16
out
stos
repz
ret
sub
mov
dec
or
addr16
cmp
lret
mov
adc
mov
and
mov
pop
hlt
pop
jle
repz
push
pop
daa
stos
and
or
sub
lea
add
adcb
mov
xor
adc
setae
cld
xor
add
sub
shlb
sahf
mov
test
mov
std
xor
xlat
inc
popa
sbb
movb
jbe
xor
ret
pop
push
pop
dec
mov
hlt
out
inc
sbb
mov
cmpsb
xchg
push
lock
dec
in
ja
pusha
in
in
das
xchg
cmpsl
pop
faddl
outsl
inc
outsb
adc
sbb
leave
cmc
negl
sahf
mov
loop
pop
mov
fistps
pop
mov
faddl
fldt
lods
or
push
pop
jl
xor
in
dec
push
xor
jns
fwait
daa
rol
jb
or
xor
inc
sahf
inc
dec
push
pop
mov
dec
outsb
daa
jecxz
push
push
xchg
fs
push
xchg
mov
pop
pop
cli
push
stc
orb
fcmovnbe
in
aad
cmp
insb
sub
in
je
ds
add
inc
add
sub
cwtl
pop
in
inc
push
fnstsw
aam
or
mov
dec
sbb
inc
popaw
iret
jp
mov
sbb
mov
mov
int3
sti
lods
enter
repz
jae
dec
add
xor
repnz
jp
frstor
adcl
adc
insb
negb
mov
stc
xlat
pop
popf
sub
test
mov
jae
jg
das
jmp
pusha
mov
xchg
leave
insl
sbb
mov
push
sub
pop
sbb
ja
lods
mov
enter
pushf
push
sub
mov
call
lret
push
and
fnstsw
and
cmpl
cmp
cmpsl
sarl
cmp
ljmp
jne,pn
xor
enter
pushf
sbb
je
js
xor
das
sbb
jae
fxch
and
mov
mov
insl
inc
pop
xchg
pusha
xor
sub
icebp
fwait
subb
and
xor
inc
cs
ds
fucomp
and
fistl
or
xor
imul
jns
lods
ret
jp
cmp
mov
and
andl
in
mov
xchg
das
push
cmp
jmp
nop
rcl
stos
jnp
sahf
mov
jae
js
mov
pop
mov
pop
dec
push
addr16
enter
push
pop
ljmp
sbb
repz
cmpsb
bound
mov
cmp
mov
sub
adc
lret
jae
sbb
pop
xchg
call
or
push
sub
push
lea
push
or
cmpsl
ret
jo
fwait
pushf
js
and
dec
es
mov
jo
repnz
xchg
inc
mov
popf
jge
xor
inc
out
push
inc
xchg
fldl
lods
xor
sub
xor
jae
std
js
lea
mov
pusha
push
push
sbb
mov
or
mov
adc
adc
xor
sbb
or
cmp
arpl
leave
mov
adc
lods
add
test
inc
popf
mov
popa
dec
pop
cld
insl
sti
fdivrl
or
push
or
repnz
shll
lock
mov
std
movsl
ret
je
adc
lods
cmp
xlat
pmuludq
shlb
jp
or
mov
test
sarb
and
sub
and
stos
mov
fstpt
inc
mov
jae
out
push
mov
pusha
push
and
jmp
test
pop
mov
mov
push
insb
dec
push
mov
pop
adc
ss
sbb
rorl
subb
ret
mov
into
cmp
clc
lret
mov
cld
push
mov
pop
imul
push
xchg
pop
sub
aaa
in
pop
fsubrs
dec
repnz
popf
cmp
lds
roll
sti
dec
lds
in
js
mov
mov
lock
sub
sub
gs
pop
add
push
bound
xor
push
mov
xchg
fbstp
pop
in
pop
ret
scas
sub
push
dec
cmc
jo
fnsave
xchg
push
aaa
pop
adc
loopne
pop
xor
pop
jnp
xor
xchg
sti
xlat
pop
jns
shll
mulb
fcomip
dec
push
imul
bound
add
addr16
xchg
mov
popf
inc
lret
icebp
ret
lret
xchg
push
mov
data16
jo
mov
dec
popf
insb
and
lret
jb
scas
adc
lret
pop
fcomp
mov
sub
lds
dec
push
mov
cld
subl
mov
test
mov
push
add
scas
xor
or
pop
pop
insl
xchg
mov
clc
test
out
aam
jnp
lods
fldl
movsl
jmp
enter
mov
mov
mov
or
mov
mov
enter
push
mov
fs
imul
rcl
sub
pop
pop
add
or
pop
movsl
mov
inc
imul
testb
or
xchg
mov
xbegin
push
mov
scas
pop
fsubrl
clc
scas
aaa
cmp
and
lea
and
popf
daa
repz
mov
jnp
sub
mov
dec
xor
gs
scas
push
in
sbb
inc
in
mov
xchg
pop
cs
es
mov
daa
dec
adc
mov
lock
fwait
jecxz
lret
imul
jmp
mov
out
into
rol
mov
xor
jae
into
scas
shlb
lds
xor
jno
and
andb
sahf
and
or
inc
lods
cmc
gs
mov
lret
cmp
sahf
fwait
xor
std
std
in
lcall
pop
cwtl
dec
add
jge
sub
jp
call
adc
in
xor
jno
cmp
xlat
pop
scas
cmp
fisubs
mov
test
mov
ficoml
add
and
cltd
test
push
das
xor
dec
push
sub
xchg
xchg
mov
imul
je
rcl
test
dec
pop
add
push
or
imul
lret
outsb
push
cltd
adc
out
pop
test
mov
daa
in
xor
push
cmp
data16
add
push
adcl
cmp
imull
pop
or
ret
data16
stc
je,pt
cmp
inc
push
scas
add
mov
push
xchg
stos
pop
mov
lea
test
loope
cmpsl
outsl
push
pop
popf
in
ljmp
ret
inc
popa
shlb
cmp
insb
outsb
aas
pop
das
int3
out
loop
aaa
push
insl
imul
inc
lods
sbb
loopne
push
xchg
test
push
jnp
inc
cmpsb
cmp
cmc
stc
out
movsb
in
pop
out
or
jne
sahf
outsb
add
sub
mov
sub
in
push
sbb
or
outsb
jg
inc
inc
out
pop
jno
std
pop
sub
pushf
cmp
aad
popf
in
and
adc
cs
jo
jg
lret
hlt
and
cmc
test
xchg
stc
outsl
jg
jno
sub
dec
pop
arpl
mov
mov
push
test
scas
mov
xchg
pop
add
je
xlat
push
xchg
push
adc
add
imul
hlt
idivl
out
jg
pop
jno
mov
mov
cmp
scas
mov
in
sti
iret
mov
xor
jmp
inc
or
aaa
inc
xor
push
stos
push
jns
sub
in
shrl
js
mov
mov
jnp
adc
int
mov
inc
popa
cld
mov
imul
jg
cmp
ret
xor
or
roll
xchg
mov
pop
adc
mov
pop
in
push
jae
das
rclb
sbb
cli
jmp
jg
lret
dec
data16
lods
cmp
mov
enter
lret
sub
hlt
fwait
xor
mov
rcrl
mov
mov
jl
dec
or
dec
fstpl
push
loop
mov
jno
or
mov
jmp
sti
xor
push
pop
adc
daa
sub
fldenv
test
les
xchg
inc
ret
test
mov
xchg
int
imul
push
mov
jmp
fwait
lahf
dec
sbb
lods
inc
test
ja
punpckhdq
mov
fstl
or
mov
cmpsb
lods
pop
ja
aad
xchg
add
xchg
daa
push
lea
sbb
mov
and
test
test
mov
outsl
push
xlat
pop
xor
lock
push
sbb
lods
dec
or
mov
inc
int3
ret
cmp
mov
insb
sahf
mov
int
lret
mov
sbb
fimull
pop
jge
xchg
or
fnstenv
inc
xor
ss
adc
insl
mov
dec
sbb
pop
mov
gs
dec
xor
les
push
stos
nop
mov
jg
nop
jge
cs
or
clc
sahf
mov
jae
and
xor
movsb
enter
loopne
xchg
mov
leave
cmp
mov
bound
or
mov
jbe
dec
stos
push
xchg
inc
adc
clc
mov
mov
mov
imul
mov
sub
inc
xchg
cmp
scas
fisubrs
rcrl
aaa
fwait
xor
fldl
jnp
out
inc
sahf
pop
and
sbb
nop
mov
cmp
ret
sarl
in
ret
shlb
push
bound
dec
inc
ss
jg
sub
addl
xor
push
ficoms
ljmp
or
mov
test
addr16
adc
mov
fbstp
js
sbb
ja
fcmovnbe
insb
lea
fiadds
enter
xchg
or
sbb
shlb
push
sti
mov
cmp
outsb
dec
push
jp
adc
cmpsb
mov
push
addb
dec
out
negb
lods
add
push
scas
in
add
test
sbb
imul
jae
mov
sarb
mov
sbb
mov
adc
insb
sub
iret
mov
imul
xchg
pop
loope
aaa
push
push
cld
sbb
xor
stos
rcrb
shrl
xchg
inc
push
and
mov
insl
or
fists
mov
stos
or
sub
sbb
sub
enter
icebp
adc
cmp
mov
rcrl
cmpsl
pop
icebp
or
push
in
pop
iret
ret
push
clc
cmp
mov
and
lcall
pop
fistpll
cmp
adc
sbb
cmpsl
imul
mov
pop
xchg
stos
fwait
ss
xlat
xchg
loopne
pop
lods
jl
add
jbe
push
mov
sahf
pop
sub
int
cmp
lahf
cmp
mov
push
popf
lret
xor
out
mov
xchg
aam
mov
out
ret
call
aad
mov
movsl
add
cmp
test
sbb
mov
in
notb
popa
mov
fldt
test
xchg
repnz
lea
or
ret
mov
pop
test
push
loope
mov
daa
push
dec
and
cmp
jl
xchg
inc
pop
cmp
cmpsb
pop
mov
pop
fwait
adc
icebp
rclb
sti
mov
mov
dec
mov
cmpsb
or
pushf
jo
ds
mov
jb
call
xlat
das
push
xchg
pop
adc
push
ret
xor
and
paddb
or
gs
mov
pop
mov
addb
push
xchg
lock
call
jge
pop
mov
int3
sbb
mov
pop
imul
divl
mov
test
popf
jl
ds
mov
repz
cmp
dec
push
shll
mov
adc
addb
mov
xlat
mov
cwtl
jo
push
add
xlat
xchg
lret
add
xchg
dec
fmuls
xchg
hlt
stc
jecxz
sbb
repz
icebp
pusha
test
push
dec
mov
mov
and
rorb
mov
cld
xchg
sub
test
mov
out
je
rcrl
push
cmp
sahf
inc
arpl
insb
pop
enter
stos
adc
in
lahf
inc
shrl
test
mov
pop
inc
cmp
push
outsb
inc
mov
test
mov
ljmp
dec
daa
gs
mov
pop
xor
lahf
stos
mov
push
xchg
lcall
insl
push
test
sub
jl
jle
add
and
dec
js
movsb
mov
and
adc
aas
and
xor
sub
lods
dec
mov
mov
cs
lods
test
lret
mov
mov
push
gs
or
pop
ret
jno
out
mov
and
mov
imul
nop
test
cmp
jmp
or
fildll
push
push
outsl
clc
jns
lcall
incl
scas
dec
into
mov
push
bound
fidivl
test
sbbl
xor
mov
xchg
ficompl
cmpsl
cmp
sub
jb
mov
sbb
out
jecxz
pop
pop
popa
jb
scas
and
enter
lea
out
mov
das
mov
shlb
pop
mov
aam
into
leave
shl
xchg
xchg
iret
mov
adc
pop
in
xorl
jecxz
xchg
movsl
inc
outsb
stc
mov
jmp
pop
cmp
out
dec
andl
and
movsb
out
push
subl
cmp
stos
popa
lods
sbb
inc
push
dec
sub
xchg
push
mov
and
or
in
sti
in
imulb
pop
inc
cld
sti
jnp
aas
jle
das
jb
xor
adc
mov
cmpsb
in
pop
cmp
imul
iret
aad
add
mov
or
cmp
and
aam
test
push
xor
in
sbb
mov
mov
andl
movsl
and
jl
out
mov
xor
test
push
inc
adc
sbb
xor
xor
sub
test
cmp
or
xchg
js
pop
inc
les
or
clc
insl
dec
mov
es
and
push
movhps
mov
jnp
cmp
pop
aas
inc
cli
lcall
cmp
pop
and
dec
ret
push
add
mov
push
xor
mov
pusha
sbb
pop
ljmp
jbe
mov
mov
or
je
rclb
mov
je
dec
fwait
daa
sub
push
sub
xchg
repz
add
mov
sub
mov
xchg
fsubrl
inc
jno
loop
cli
and
leave
mov
mov
push
iret
sarb
jnp
xchg
repz
push
mov
fsubp
push
inc
push
cwtl
iret
push
adc
mov
inc
mov
add
dec
cltd
sti
mov
popf
nop
mov
jbe
in
xchg
jns
pop
xchg
mov
mov
aaa
jecxz
sahf
notb
mov
inc
inc
fsubl
inc
mov
xchg
ret
mov
push
ljmp
lcall
xlat
push
dec
add
sbb
rorl
fs
push
arpl
cmpsl
inc
jnp
movsb
xchg
mov
pop
cmc
jg
xchg
int3
inc
ss
dec
pop
data16
imul
idivl
adcl
xchg
je
or
pop
mov
push
mov
jg
jae
inc
sbb
dec
jecxz
push
sub
test
sbb
push
fisubrs
hlt
mov
mov
inc
ljmp
mov
mov
fwait
ja
mov
aaa
push
mov
jo
insl
ja
mov
out
cli
pushl
pop
vpaddsb
xchg
shrb
outsb
test
push
in
insl
xchg
mov
mov
push
nop
adc
dec
sbb
call
dec
mov
sbb
out
sub
cld
mov
scas
shl
and
or
jne
movsl
clc
in
lods
or
test
xchg
jbe
iret
mov
add
test
ds
push
xchg
mov
jge
mov
mov
dec
xor
xor
jo
sbb
or
mov
arpl
adc
pop
sbb
out
sbb
push
call
bound
dec
movsbl
scas
or
xchg
push
xor
xchg
es
push
icebp
loop
and
inc
mov
dec
fnstsw
popf
and
test
rcr
ficompl
cmpsb
hlt
mov
testl
test
inc
pop
insl
push
mov
mov
fidivs
xchg
rsqrtps
shl
or
mulb
fwait
mov
mov
cwtl
and
outsb
mov
fists
out
into
daa
add
dec
mov
not
jo
mov
pushf
gs
adc
mov
dec
dec
jl
push
or
mov
xor
push
scas
sti
inc
push
ljmp
stc
and
jno
inc
cmpsb
repz
xchg
in
js
fwait
outsl
ret
iret
mov
add
sbb
xor
repz
test
push
push
sub
jge
add
sbb
rorb
xchg
cmp
push
lods
out
mov
faddl
ljmp
push
inc
pop
daa
daa
dec
adc
sbb
xor
inc
aad
cmp
mov
andb
flds
cmp
jge
rorb
cmp
jp
jo
and
std
dec
scas
fsubs
lock
mov
sbb
and
mov
lods
mov
shll
push
jle
lods
addl
out
aam
sub
or
cs
pop
leave
imul
mov
mov
rcrb
and
xlat
pop
adc
sar
into
or
sub
idivb
mov
lea
dec
pop
ss
pop
adc
orb
icebp
push
data16
xchg
sub
inc
rol
lea
mov
gs
sub
call
lret
pop
jg,pt
pop
pop
mov
cmpsb
dec
pop
dec
pop
add
xor
insl
xor
and
insl
scas
insl
outsl
out
mov
push
mov
hlt
adc
lcall
xchg
cmpsl
in
imul
cmp
push
bound
push
xor
pop
gs
push
movsl
mov
sti
scas
mov
pop
and
or
imul
jae
mov
jb
mov
jne
dec
xlat
mov
cli
sub
adc
aaa
cwtl
adc
xchg
insb
xchg
sahf
or
mov
iret
popf
mov
push
push
pop
sbb
xor
les
inc
lds
prefetch
or
jecxz
stos
push
scas
popf
cmc
pop
in
lret
lods
out
inc
adc
jecxz
lea
fstpl
dec
orl
stc
popa
mov
lods
mov
sbb
cli
jmp
cmp
push
call
jl
repz
sbb
pop
mull
cmc
push
push
push
pushf
xlat
pop
cmpsl
in
cmc
xchg
push
fidivrs
neg
jp
inc
aas
shl
sub
pop
cmp
jmp
mov
lock
push
mov
pushf
jne
hlt
test
add
cmp
cmpsl
cltd
jg
testb
cmp
inc
cmp
xor
pop
or
cmp
jae
inc
mov
push
xchg
mov
push
jp
gs
xchg
dec
fistps
sub
test
mov
push
sub
in
xchg
mov
mov
testl
jle
xlat
out
cltd
pop
adc
ret
daa
adc
push
and
mov
push
xchg
outsb
movsb
jo
insl
sbb
mov
mov
sbb
test
or
push
pop
nop
adc
xor
fildll
and
mov
lahf
je
shrb
mov
insl
fs
mov
mov
shrb
cld
xlat
shl
out
jns
popa
in
mov
ret
repz
out
icebp
out
loop
cmc
sub
xchg
pop
lcall
add
xorl
outsb
push
pop
jae
test
int3
enter
mov
add
mov
fisubl
fs
xor
adc
jns
adc
mov
pop
stc
ficoml
sbb
pop
pop
std
or
pop
out
or
jle
add
into
xchg
lods
cmp
jnp
pop
jb
push
out
add
gs
mov
adc
push
cmpb
jbe
pop
into
fbld
lock
sub
shll
xlat
adc
jmp
fnstenv
sbb
lahf
movsl
imul
pop
and
sbb
dec
dec
repz
outsb
insb
pop
cmpsb
in
out
adc
jne
pop
into
in
xor
shlb
xchg
jmp
in
es
inc
push
xchg
jle
dec
sbb
aaa
push
test
mov
lret
sti
aad
pop
inc
mov
test
jno
addb
in
push
cmp
adc
and
or
or
fsub
xor
es
pop
sbb
adc
mov
lcall
out
out
sbbb
or
mov
jae
aad
out
mov
xchg
mov
add
arpl
mov
repz
sub
cmpl
dec
pop
xor
push
outsl
pop
pop
out
sbb
jns
leave
mov
xchg
mov
mov
push
xor
jbe
add
in
clc
jle
mov
sti
sub
mov
sbb
xor
pusha
or
cmpsl
xchg
clc
push
fsubrs
push
jo
ja
xlat
call
xchg
cmp
xor
ss
mov
into
or
outsl
jg
imull
or
dec
or
pop
outsl
into
imul
lret
das
mov
mov
push
push
xchg
mov
and
outsb
or
gs
push
sub
mov
pop
inc
clc
mov
mov
or
loop
add
scas
xchg
aaa
adc
scas
jo
lret
push
add
cmp
jecxz
fcmovu
add
adc
pop
fldl
adc
in
icebp
lods
and
std
into
fnstcw
cwtl
rorl
sbb
mov
mov
mov
push
sbb
dec
sbb
and
adc
jl
xor
out
aam
mov
add
fwait
stc
adcb
lret
sub
sub
loope
pop
mov
or
pop
xchg
cmp
dec
inc
sub
sarb
inc
xor
out
test
or
push
xor
fstpl
sub
jnp
cmc
std
and
aas
adc
or
mov
cmpsl
xor
inc
cmp
iret
xor
loop
call
lds
jl
mov
mov
popf
daa
mov
xchg
sub
sub
out
into
and
adc
bswap
jp
pop
and
fbstp
xlat
push
and
jns
sbb
inc
pop
fistps
scas
fisubrs
xchg
std
jb
lea
or
ret
outsb
jnp
adc
or
jg
and
negb
xor
int3
and
loope
jmp
ds
sub
push
mov
add
lods
cmp
inc
pop
sahf
adc
cmc
mov
pop
adc
mov
fdivl
in
jo
inc
out
lods
mov
pop
loop
dec
cmc
sbb
ds
sub
mov
add
iret
adc
and
push
in
ret
pop
arpl
paddusb
xchg
loope
pop
addr16
mov
and
lods
iret
mov
jb
inc
cmp
inc
xchg
cmpsb
pusha
xchg
pop
cs
inc
jg
pop
in
cmc
notb
cli
out
jg
mov
sbbb
sbb
imul
int3
sub
ror
sbb
int3
movsl
leave
inc
test
fidivl
mov
lret
faddl
mov
cs
mov
dec
sbb
imul
std
mov
lret
pushf
pop
sbbb
mov
fwait
pop
popa
int
loope
and
xchg
in
adc
and
cmp
fwait
insb
icebp
int3
and
xchg
push
jg
sub
rcrl
adc
inc
scas
jbe
push
push
mov
cli
das
cmp
mov
lret
rorl
imul
out
cmp
mov
xchg
fmul
cmc
rcr
mov
ss
mov
push
inc
xchg
cs
pushf
cmc
out
xlat
xor
int3
push
scas
fadds
rcl
pop
divl
xorl
cmp
fdivrl
sub
stc
sub
xor
ds
lcall
mov
ret
js
popf
test
sub
stos
adc
jmp
xor
push
add
add
inc
and
arpl
and
mov
lods
push
faddl
fstl
fsts
test
sbb
add
or
scas
cmp
int3
cs
mov
inc
pushf
cwtl
mov
in
cli
sbb
adc
mov
mov
popf
fldcw
sub
nop
inc
or
pusha
gs
int3
inc
fmull
mov
out
xchg
pop
jne
test
adc
sub
fcomps
jns
lahf
mov
popw
imul
popa
cltd
cwtl
sbb
xchg
mov
mov
jp
je
mov
in
push
push
or
cs
mov
jg
push
vmovq
xor
icebp
outsl
sub
jae
cmp
pop
cmpsb
ret
fisttps
int
aad
fimull
mov
jecxz
and
add
cwtl
adc
adc
cmc
xchg
leave
icebp
arpl
orl
loope
xchg
mov
out
xor
rep
jecxz
xchg
subl
ss
in
inc
fmuls
jg
adc
lock
outsb
adc
cmc
mov
lret
jbe
jl
add
add
push
or
stos
sahf
xchg
lock
lods
push
fldt
xlat
ficompl
adc
shlb
jne
mov
adc
xorb
pop
lahf
mov
and
into
lahf
push
jle
aas
inc
and
add
push
je
inc
xchg
mov
pop
dec
ret
aam
inc
mov
pop
and
mov
inc
mov
int3
xor
mov
icebp
push
xchg
sbb
push
push
clc
mov
or
or
jmp
fdivp
sub
setbe
stos
shrb
lcall
and
inc
jl
add
mov
daa
adc
jb
loope
sub
aaa
loope
mov
fldcw
mov
test
dec
pop
push
in
push
fcmovne
cmp
dec
dec
cmp
aas
lods
mov
and
stos
pop
jne
loop
adc
test
push
jne
movsb
bound
mulb
jno
xchg
or
ret
out
addr16
nop
lcall
or
lahf
dec
std
shlb
push
mov
adc
nop
inc
daa
sahf
jecxz
bound
enter
mov
xchg
das
push
mov
inc
iret
or
mov
mov
lret
xchg
adc
sub
and
or
jmp
mov
in
sub
jge
hlt
shlb
xor
and
pop
cmc
sub
mov
popa
into
xlat
cmp
inc
andl
scas
aas
insl
daa
push
test
aam
pusha
pop
sahf
pusha
ds
cmp
sti
sub
mov
enter
sbb
jmp
loop
cmpb
repz
sub
das
push
jecxz
pop
xchg
addr16
push
lahf
push
ja
add
sub
cmpsl
inc
jns
mov
push
test
ljmp
sub
push
rcrb
je
or
cs
adc
and
push
imul
into
sbb
xlat
data16
jo
lcall
push
push
cmp
sbbb
push
push
fs
mov
les
fs
sub
ret
aaa
xchg
lret
and
sahf
lods
inc
insl
ss
fldcw
dec
dec
fidivrl
les
adc
push
and
cltd
into
cmp
int
jne
aas
lea
mov
push
in
cmp
repz
cmp
testl
ds
jo
mov
xor
xchg
pop
cmp
mov
rorb
xchg
mov
cmp
and
cmp
pop
pop
iret
xlat
inc
popf
js
stos
inc
or
xor
nop
mov
ss
push
in
outsl
or
xchg
in
test
jnp
inc
fwait
clc
icebp
push
dec
cmp
je
xor
jge
daa
sub
adc
out
or
dec
sub
adc
dec
mov
cld
mov
push
insl
add
adc
cs
pusha
inc
xchg
mov
daa
ljmp
lock
negl
iret
clc
and
dec
pop
inc
inc
pop
sbb
adc
xor
xor
mov
repnz
bound
cmp
insb
test
inc
jbe
in
aam
std
iret
cmpsb
push
in
aam
pusha
inc
hlt
inc
push
imul
inc
pop
and
adc
push
jle
pop
push
subl
cs
pop
sbb
inc
leave
orb
lds
jnp
pusha
push
cmp
pop
ficomps
sbb
or
rcrl
xchg
sbb
gs
fucomp
out
jmp
lods
outsl
scas
imul
bnd
or
mov
clc
fstps
fidivrl
divb
push
jo
mov
arpl
mov
fldcw
scas
enter
inc
shlb
fsubr
xor
loopne
jno
jp
mov
and
rcr
push
movsb
mov
adc
std
std
jecxz
xchg
lea
outsl
mov
inc
dec
mov
lret
mov
jmp
mov
jne
mov
and
cwtl
popa
and
pushf
dec
mov
test
inc
jecxz
cmp
jo
imul
xor
test
mov
andb
fs
jnp
in
sbb
inc
imul
lahf
lcall
mov
out
popf
dec
push
fldt
mov
int3
sub
scas
es
dec
es
sbb
xlat
lock
ljmp
or
loopne
mov
xor
addr16
ja
jge,pt
popf
jcxz
int
adc
pop
arpl
mov
jmp
sub
xchg
dec
add
icebp
xor
jg
fistl
adc
imul
xor
dec
out
fisttpll
addr16
addr16
shll
mov
rolb
cmc
add
or
inc
dec
and
arpl
popf
adc
aas
fsubs
xor
cltd
jl
stos
ljmp
xlat
push
cmpsb
cmp
push
lods
push
aaa
aam
hlt
pop
adc
popa
mov
or
xor
rclb
push
xlat
xchg
cmp
sub
add
mov
mov
addr16
or
mov
lods
adc
and
xor
and
aam
in
stc
mov
jl
fisttpl
cwtl
dec
add
cmp
or
jle
mov
or
pusha
cs
lods
test
cltd
clc
mov
xor
cwtl
outsb
out
ficompl
push
sub
fsubrs
xchg
call
shrl
enter
icebp
inc
lahf
lods
and
rorl
mov
cld
out
inc
lahf
idivb
nop
xor
cmpsb
dec
shll
xor
shrb
xchg
cmpsb
test
sti
xchg
pextrw
cmp
sub
adc
dec
adc
aad
scas
subb
jbe
sti
inc
jle
pusha
pop
jbe
mov
addr16
add
and
aaa
repz
jl
dec
std
mov
jnp
xchg
mov
push
or
push
outsb
rorl
and
lods
sub
sub
test
aad
loopne
and
xchg
lock
sbb
aad
mov
xchg
xchg
and
xchg
cmp
je
mov
aas
pop
xor
push
mov
xor
xor
pop
imul
sarl
pop
and
jmp
mov
or
adc
aam
sbb
add
pop
es
cmpsl
push
stos
mov
data16
fwait
xor
cmpsl
stos
sahf
jo
and
or
mov
xorl
ss
es
mov
xchg
ss
cmp
cmp
or
movsb
scas
xor
mov
ret
aam
pop
cmp
outsb
mov
out
mov
sbb
or
lret
scas
imul
push
pop
mov
xor
mov
das
stos
pop
scas
jp
popa
clc
stos
push
push
sub
in
cwtl
sbb
pop
into
push
sbb
inc
push
push
orl
jnp
sub
jmp
dec
dec
and
popf
pop
pop
rclb
push
es
push
sub
inc
int
sbb
pusha
nop
mov
cmpsl
lock
add
sbb
popl
jo
hlt
jp
fcomip
inc
sub
push
jbe
and
adcl
mov
mov
mov
lods
popa
pop
push
scas
je
push
pushf
fdiv
mov
xchg
out
xor
sub
add
or
jno
in
mov
push
mov
mov
arpl
dec
dec
or
stc
imul
pop
jnp
jl
sub
mov
pop
fisubl
fcmovnu
jo
lds
add
xchg
adc
xor
jnp
stc
popf
and
cmp
push
test
sbbl
mov
cmp
ret
insl
lods
ljmp
cmc
cli
push
push
shrl
stos
dec
imul
rcl
mov
std
ljmp
mov
addr16
imul
adc
sahf
ss
shlb
sub
mov
ljmp
in
xlat
inc
mov
xor
add
and
xor
cmp
js
xchg
enter
or
out
fmull
and
andl
jecxz
cmpsl
xor
addr16
sbb
sbb
bound
mov
out
push
shll
inc
inc
or
lcall
repnz
icebp
loop
dec
push
jp
loope
daa
das
xor
outsb
rorb
aaa
loopne
push
shll
dec
call
or
and
xchg
fidivs
call
sbb
mov
xlat
sbb
xchg
movsl
cmp
inc
imul
inc
xchg
inc
cs
rcrb
add
mov
inc
xchg
push
add
inc
cmc
lahf
sarl
xor
addl
push
sahf
std
jno
scas
pop
ret
testb
test
jne
shll
scas
sub
push
mov
movsl
or
pop
add
cs
push
dec
or
sub
inc
orb
add
loope
out
call
pop
sbb
mov
rolb
lea
lea
xor
jmp
pop
and
fcoml
iret
cmp
mov
in
in
sarl
int
ss
icebp
or
lock
inc
add
or
sub
jecxz
inc
aad
mov
in
sub
scas
cli
test
mov
outsl
adc
addr16
jp
mov
cmc
add
lcall
adc
mov
sahf
mov
adc
mov
sbbb
mov
fwait
data16
in
mov
sbb
ss
lret
stos
setle
lahf
lret
scas
dec
lock
cld
mov
sbb
sub
inc
inc
push
adc
inc
outsb
out
xchg
pop
sbb
test
cltd
fs
adc
dec
imull
out
repz
pop
clc
mov
add
mov
fdivrs
popf
cmc
and
lret
dec
cld
mov
into
jns
push
lahf
lret
pop
rorl
outsb
mov
testl
addr16
out
jb
and
jg
push
stos
je
cmp
cli
imul
push
das
mov
xchg
pop
ss
int3
test
or
jg
out
out
and
fstp
popl
sahf
dec
lahf
or
lds
ret
pop
or
sbb
mov
add
cltd
roll
xchg
aad
and
lahf
xor
les
dec
in
add
hlt
insl
fdivrl
dec
sub
cwtl
mov
arpl
mov
mov
shll
into
jae
sub
lret
pop
sbbl
add
repz
or
cmp
arpl
repz
pusha
or
sbb
adc
pop
xchg
adc
mov
ds
xor
ja
push
push
ja
fcoms
ja
ss
push
push
push
call
jge
xor
jmp
nop
push
pop
insb
pop
mov
mov
or
xchg
dec
mov
sti
sbb
mov
and
iret
or
cmp
jecxz
sbb
push
mov
and
or
lret
insl
ljmp
mov
inc
adc
inc
and
je
jl
cmpsb
ljmp
mov
sahf
pop
jmp
fcmovu
jmp
jo
fucomi
xchg
ss
dec
scas
pop
idivl
mov
fwait
or
sub
stc
ds
xchg
mov
aaa
imul
jne
pop
dec
mov
or
ficomps
sbb
loopne
mov
mulb
cmp
xchg
scas
sub
push
test
mov
lock
sbb
mov
mov
push
adc
fbld
push
mov
mov
inc
js
adc
cmp
daa
xor
jno
aas
dec
mov
cld
mov
icebp
xlat
xchg
aas
mov
sub
inc
dec
pop
xchg
aad
movsl
xchg
push
dec
sbb
xor
mov
pop
sub
push
into
adc
mov
scas
lea
fscale
lret
push
and
lret
je
adc
adc
mov
setle
stos
gs
mov
mov
ja
bswap
mov
mov
icebp
fmuls
div
jmp
shld
jmp
cwtl
movb
add
rolb
pop
cmp
jns
out
jg
jne
dec
push
mov
loope
dec
mull
jo
int
les
loopne
lret
ljmp
cmpl
stc
pop
jl
sbb
imul
xchg
out
jno
pop
lods
cs
inc
xor
out
xchg
xorl
ljmp
pop
shl
jae
scas
shrb
xor
add
aas
fdivrs
aaa
or
out
mov
adc
mov
je
stc
or
jo
jns
sbb
lods
push
ja
jl
dec
add
bnd
repnz
into
lsl
fimuls
icebp
mov
insb
jns
outsb
cs
loop
pop
in
adc
enter
ljmp
pop
or
push
fcmovu
testl
add
cmp
mov
mov
xlat
push
pushf
jno
fxam
bound
or
insl
and
cmp
or
jl
sub
sub
stos
mov
jbe
fisubrl
or
cmp
data16
adc
gs
sub
filds
dec
out
mov
addl
mov
fcmovne
loope
pop
lods
movsl
push
jb
dec
or
in
mov
orb
cmpb
mov
sar
call
cmp
pop
in
adc
inc
cmp
mov
rcrb
xchg
inc
jp
std
cmc
js
gs
and
cld
adc
xor
mov
imul
inc
push
mov
loop
jl
test
les
or
imul
movl
imul
data16
rorb
jae
scas
nop
pop
mov
cmc
push
ret
dec
lahf
sub
jecxz
lods
mov
mov
out
mov
sub
insl
aad
cmp
dec
divb
push
lock
stc
addr16
mov
pop
ds
push
push
sbb
cmp
add
add
or
sub
jb
mov
cli
repnz
lds
pop
je
sbbl
xor
add
addb
jns
pop
xor
jecxz
pushf
fdivrl
shrb
fsubrl
adc
sub
into
pop
sub
xchg
adc
and
movsl
nop
and
cmpl
push
jns
out
xchg
daa
cli
dec
les
add
into
mov
repz
lret
cli
mov
mov
push
sbb
push
jae
mov
dec
or
sti
mov
mov
dec
or
in
sbb
jl
or
les
jns
mov
fisttpl
mov
scas
xor
pop
rcrl
out
inc
dec
dec
sub
outsl
outsl
shrl
dec
add
push
mov
enter
or
imul
int3
jbe
and
mov
fimull
and
lock
xor
xor
popf
pusha
pushf
mov
pop
scas
jb
sbb
add
jns
mov
cmp
cmc
imul
and
pop
mov
test
lahf
std
sub
or
xchg
and
icebp
mov
mov
jnp
jle
insb
mov
mov
clc
pop
fsubrl
movsb
pop
inc
in
fildl
cs
mov
fisubl
xor
in
arpl
or
inc
lahf
pop
and
push
lds
adc
stos
popa
nop
iret
mov
jno
ret
xlat
clc
pop
jmp
call
mov
adc
sbbl
pop
outsl
dec
xor
enter
jno
adc
push
aaa
add
imul
cmpsb
jl
ret
cmp
dec
movsl
pop
inc
and
scas
add
sbb
scas
in
lods
fdivl
pop
adc
xor
scas
xor
daa
cwtl
sub
xor
movsb
xchg
inc
out
call
aaa
out
pop
jo
add
dec
fucom
pop
pushf
ljmp
jl
dec
xlat
and
sbb
push
adc
mov
test
push
sbb
out
bound
fldl
call
or
loope
dec
cli
popf
sub
sbb
fistl
es
ret
adc
rorl
inc
cmp
jp
adc
xchg
jp
or
mov
dec
ljmp
stos
dec
out
xor
dec
mov
iret
cli
pop
cmp
inc
xchg
push
test
xchg
mov
sub
cld
and
mov
cmp
mov
or
push
fwait
mov
xor
lcall
jecxz
out
sbb
bound
sahf
push
out
cmp
add
xchg
in
sub
movups
sub
ljmp
faddl
and
jge
outsb
mov
fcoml
add
adc
in
ja
mov
mov
test
in
inc
out
fistl
dec
aas
cwtl
fwait
int3
outsb
popa
mov
ds
or
jle
ljmp
cmpl
ss
and
sbb
push
jp
and
cmp
add
cmp
imul
and
lret
mov
adc
inc
dec
lea
fadds
or
popa
mov
dec
mov
cwtl
test
jp
std
insb
adc
insb
push
hlt
lahf
pop
shrl
dec
add
cmp
adc
push
jge
ja
and
notl
faddl
lods
data16
in
and
sbb
push
mov
xchg
push
or
ror
jbe
sub
or
aaa
ds
xor
call
mov
pop
inc
mov
mov
dec
jecxz
clc
clc
out
dec
lret
and
dec
lret
xor
add
in
lcall
jl
aam
imul
xor
dec
sbb
out
mov
rep
sbb
mov
pushf
dec
scas
jno
jg
cmp
test
xchg
cwtl
mov
mov
xchg
push
push
push
pop
insl
test
push
cmpsb
shrb
in
xchg
push
or
lahf
fnsave
enter
jo
mov
pop
or
push
ret
ljmp
xchg
fwait
add
inc
inc
pop
out
sbb
or
sub
adc
pop
into
mov
push
xor
popa
int3
ret
mov
nop
jb
pop
push
inc
pop
insl
cltd
pop
data16
ljmp
jbe
test
test
jae
or
mov
dec
inc
sbb
xor
mov
out
pop
fcmovbe
pusha
push
xor
shrb
in
negb
cld
or
fs
bound
popa
mov
or
mov
test
sbb
aam
ret
mov
cmp
out
inc
fsubp
and
repz
push
xor
sar
decl
add
jbe
dec
jle
jae
jl
inc
adc
xchg
sbb
mov
daa
dec
mov
adc
rolb
jge
idivl
add
and
fcomp
loop
mov
push
mov
or
jge
mov
fwait
icebp
arpl
enter
sbb
shr
pop
aam
mov
xorps
mov
mov
mov
add
test
aad
testb
inc
in
mov
jge
fisubrl
out
push
xchg
shl
mov
or
loopne
cmp
xor
xor
jl
lods
xor
jl
adcl
mov
mov
es
filds
add
out
mov
repnz
pop
aas
or
in
pop
mov
mov
rolb
sbb
sub
bswap
jnp
inc
xchg
adc
dec
adc
sub
dec
fmull
pop
addr16
adc
xor
sbb
adc
dec
dec
push
cmp
enter
hlt
push
loopne
mov
push
push
sar
into
repnz
lods
and
ds
mov
shlb
and
mov
cmp
ja
mov
mov
stos
shrb
out
add
sbb
rcrb
push
xchg
jns
or
pusha
out
pop
pop
lret
cmp
pop
xor
in
andl
or
or
jp
sub
mov
mov
mov
aas
pusha
subl
push
in
sbb
pop
mov
sub
in
jl
or
or
push
pop
hlt
sub
inc
in
sahf
xchg
data16
clc
fstpt
pop
mov
in
mov
iret
rorb
outsl
jg
inc
mov
jae
pusha
fidivs
outsl
je
jle
mov
cld
dec
and
mov
push
arpl
cmc
xor
test
push
jle
aad
outsl
dec
dec
jb
shrb
mov
jnp
sub
icebp
mov
popf
cli
loope
push
xor
cmp
add
addb
cmp
aam
mov
push
push
xchg
and
pushf
fcoml
ja
mov
cmc
add
lods
sbb
pop
leave
and
ret
mov
push
es
pusha
loopne
sahf
sbb
pushf
mov
pop
mov
sub
xchg
inc
bound
addr16
pop
inc
imul
cmp
push
shrb
mov
xchg
inc
int3
lods
xchg
jnp
push
cmc
lea
pop
push
mov
add
popf
cs
mov
dec
and
and
mov
or
aas
push
or
or
sbbb
cmp
addr16
mov
imul
fcmovnbe
fwait
addl
decb
lahf
daa
inc
xchg
negb
imul
push
jp
inc
and
aaa
sub
outsb
je
je
xchg
mov
sub
mov
dec
mov
lret
jns
out
pop
call
pop
adc
rcr
jns
mov
pusha
mov
cmp
push
adc
lret
es
mov
ret
loopne
adc
fdivs
mov
mov
jbe
cs
dec
cld
xor
push
pop
sub
mov
fcmovnu
add
xlat
fwait
loope
xor
lods
fiadds
aad
outsb
xor
xor
or
inc
sahf
sub
push
scas
sbb
icebp
in
ljmp
mov
cmp
loopne
xchg
fadds
pop
jbe
mov
xor
cs
movsl
adc
fucom
mov
repnz
into
mov
xchg
and
xor
push
inc
pop
sbb
or
leave
xchg
jne
mov
data16
mov
loopne
ljmp
lds
test
jle
or
enter
sbb
cmp
dec
pop
enter
inc
mov
rcrl
repnz
fcmovne
sub
pop
clc
add
add
inc
das
scas
push
das
jnp
xchg
notb
aam
imul
in
jmp
push
movsl
lahf
jl
mov
inc
push
aaa
inc
adc
pop
pop
xchg
push
sbb
xor
ret
mov
jmp
pop
std
addl
loop
repnz
popa
add
loop
aam
fldcw
movsb
add
mov
mov
in
daa
sub
xchg
mov
mov
int
cli
in
push
jmp
xor
mov
pop
cwtl
add
rol
mov
mov
incl
pushf
xor
adc
int
jg
or
push
movsl
mov
leave
adc
stos
adc
adc
inc
in
and
jl
push
lret
inc
mov
dec
shll
cmp
dec
xchg
inc
imul
rcrb
movb
jno
push
mov
lret
outsb
inc
and
outsl
push
push
mov
repz
rol
adc
dec
cld
xchg
xchg
sbb
xchg
sbb
es
jne
xchg
cmp
adc
outsl
punpckhwd
xchg
add
jecxz
dec
adc
shlb
xor
cmpsb
cmp
dec
or
jl
out
fwait
fs
mov
ss
ret
lcall
jno
jg
loope
cmpsl
call
and
loopne
xlat
or
test
dec
jb
add
test
inc
test
mov
popf
les
jbe,pn
add
pop
aam
lods
call
xor
mov
lea
repz
dec
out
fdivs
repz
xchg
sbb
imul
xor
loop
adc
jae
xchg
into
mul
je
add
out
jb
mov
mov
push
or
and
test
add
enter
adc
push
or
pop
lret
and
dec
cltd
icebp
push
in
jmp
loope
lret
arpl
xor
mov
popa
movsl
adc
shl
pop
lods
dec
pushf
fwait
hlt
or
or
push
movsb
sbb
mov
adc
or
ja
popa
xor
loope
data16
outsl
xor
pop
clc
push
lea
aas
test
and
mov
mov
rcl
jns
mov
jnp
sahf
enter
jns
jo
cmp
dec
and
sbb
pop
xchg
mov
aam
mov
loopne
push
add
inc
dec
sub
shlb
add
data16
sub
push
std
das
fsubl
inc
push
add
pop
stc
cmpsl
xchg
inc
ret
push
stos
dec
push
imul
adc
xadd
jne
dec
add
leave
pop
rcr
loope
or
mov
sub
mov
xchg
adc
push
lret
jg
pop
call
cltd
pop
mov
adc
mov
stos
leave
or
jb
adc
sbb
add
call
std
repz
test
pop
inc
ffree
sbb
xchg
jno
int3
inc
mov
cld
mov
mov
mov
jo
push
adc
lret
mov
in
xchg
xor
stc
in
sub
mov
xchg
push
add
scas
arpl
ja
and
mov
outsb
xor
fiadds
pushf
out
pop
mov
syscall
in
sub
xchg
xor
mov
test
movsl
xor
adc
leave
cmp
imul
push
xchg
cmp
mov
fwait
dec
xchg
lock
ret
repz
inc
mov
mov
mov
mov
imul
aam
or
dec
fmul
push
mov
jl
mov
or
push
popa
mov
cwtl
into
daa
push
add
das
aad
loopne
mov
fwait
xor
lods
mov
xchg
xor
movntq
out
lea
mov
xchg
jo
sub
xor
mov
and
mov
lods
jmp
lds
xlat
push
imul
push
push
std
pushf
inc
stos
int
adc
enter
pop
cmp
gs
int3
and
into
leave
nop
test
sbb
loopne
mov
add
dec
lods
enter
repnz
add
lahf
mov
aaa
rcr
arpl
das
push
ja
xchg
leave
inc
sarl
add
or
lea
imul
push
enter
xchg
sub
ds
rclb
int
into
lds
or
mov
cmp
sub
pop
aas
in
ficomps
mov
loop
mov
jno
fs
es
out
insb
movsb
lds
out
insl
fldcw
mov
xchg
int3
outsl
stos
scas
mov
cli
sub
addl
mov
inc
push
mov
push
and
out
jl
je
mull
mov
xchg
in
pcmpgtd
mov
fisubrl
push
push
ds
out
insb
cmpsl
ret
decb
cmp
out
stos
mov
and
jl
inc
js
es
jb
pop
aad
add
and
in
std
mov
adc
sbb
sbb
mov
xorl
inc
test
daa
leave
setp
pop
insb
sub
jle
pop
fdivrs
rcrb
mov
fstpl
mov
in
push
cmpsb
xchg
push
and
test
sub
jns
xchg
rolb
inc
subb
test
jmp
push
in
lret
jae
mov
pop
push
movsl
sub
jb
fsubrs
iret
imul
ljmp
push
jns
sti
hlt
popa
pop
push
add
cli
inc
push
fbstp
int
dec
and
add
inc
xlat
xor
daa
pop
cmp
jae
or
jmp
int
push
fwait
adc
shl
fstl
aaa
push
icebp
adc
lods
and
repnz
cmp
push
out
shr
andb
test
fists
ja
pop
cs
jg
dec
mov
cmc
adc
pop
xchg
test
popf
add
mov
or
xadd
cmp
setae
mov
push
je
xorb
push
adcl
outsl
cmp
test
sub
out
pop
cld
out
cmp
loopne
adcl
push
xlat
add
jnp
dec
add
add
out
andb
mov
imul
sahf
cmp
sahf
hlt
ss
sbb
dec
popf
cmp
rcll
and
cmp
jne
lahf
testb
out
inc
mov
leave
cmp
xchg
and
popa
loopne
or
loope
adc
sbb
xchg
arpl
xchg
add
mov
leave
push
mov
pop
cmp
imul
es
daa
pop
pop
pop
xchg
mov
scas
rolb
inc
or
or
xor
ds
xchg
out
je
jle
cwtl
mov
popa
sbb
mov
pop
jle
in
jnp
leave
xchg
outsl
xor
ja
mov
sub
sub
jmp
loope
out
lock
int3
fwait
adc
and
sbb
cmp
inc
push
mov
push
jo
jmp
add
mov
sub
lahf
inc
dec
vmwrite
push
addr16
add
aas
cmp
out
lds
leave
sbb
popf
sbb
das
pushf
arpl
xor
lods
nop
dec
cld
in
push
jno
pop
fcmovnu
xchg
fwait
inc
jle
ss
mov
int
jl
pop
jo
cmp
dec
xchg
pop
movsb
mov
ja
shrb
andl
lods
push
or
inc
test
mov
mov
or
cli
subl
cmp
ss
add
push
iret
mov
test
xchg
ss
xor
test
cwtl
jl
or
fadds
mov
sbb
stos
jno
shlb
gs
je
pop
pop
and
out
call
shll
imul
mov
inc
xor
sub
sub
mov
aad
into
xor
inc
int3
or
int3
push
scas
jns
xor
fldt
cmp
mov
xor
aaa
dec
call
sbb
imul
sbb
inc
js
jecxz
add
movntq
pop
lods
mov
mov
jb
xchg
sysexit
js
adc
jno
out
fisubrl
sti
orb
sbb
push
mov
into
dec
div
or
push
xorb
mov
fcoml
dec
mul
rorl
mov
scas
shlb
repnz
loopne
add
cmc
ret
pop
push
loop,pn
mov
xchg
pop
lea
dec
mov
loope
sbb
inc
mov
fmull
insl
fcoml
add
pop
loop
xchg
pop
fldcw
dec
repz
shlb
popf
enter
nop
sub
sbb
mov
popa
pop
pop
sub
push
scas
imul
and
xor
push
aam
and
jns
je
mov
cmp
mov
hlt
pop
mov
in
xchg
push
outsl
in
aaa
insl
cmp
sahf
jmp
sbb
mov
pushf
or
ss
and
movsl
dec
rsqrtps
mov
jnp
int3
shrb
ret
push
sti
sti
lock
lret
popa
push
popf
les
out
add
mov
mov
dec
or
loop
mov
jle
jo
bound
pop
xor
lods
imul
mov
ret
and
jne
sub
lods
add
js
imul
sub
inc
push
jge
sbb
dec
add
lcall
xchg
mov
and
dec
sub
imul
sub
ds
cld
sub
dec
sbb
mov
mov
pusha
faddl
loop
aad
push
ja
sub
insl
add
mov
jecxz
xor
jg
mov
lods
mov
arpl
add
xchg
mov
std
inc
xor
je
mov
aam
in
cmpsl
int
shrb
sbb
inc
fidivrs
repnz
sbb
ss
cmp
inc
or
ds
and
mov
mov
addb
sahf
add
stc
lret
mov
add
or
xor
rcl
jb
and
sub
xchg
ss
stos
ret
cmp
lret
sbb
imul
movsl
push
cld
inc
push
inc
enter
pusha
fiaddl
movsl
test
push
imul
jnp
push
dec
jae
push
adc
lahf
sub
or
scas
mov
in
insb
insl
adc
and
cltd
mov
xor
mov
xchg
xlat
jl
in
hlt
push
out
orl
dec
mov
adc
dec
out
fcomps
pop
dec
loopne
xchg
push
ret
push
and
lods
cmp
pop
dec
xchg
dec
sbb
int
in
mov
mov
jnp
jg
sub
in
cld
movsl
pop
jo
ljmp
data16
testl
insb
adc
divl
cmp
mulb
mov
sbb
lret
aas
xchg
jae
cmp
mov
lret
mov
movsl
add
sbb
in
mov
jmp
cld
mov
mov
cld
cmp
and
ds
clc
or
dec
ror
stos
inc
pop
out
imul
or
cmp
jo
lods
sbb
or
pusha
in
sbb
cmp
inc
lock
movsl
xchg
jl
stc
or
scas
mov
lds
cmp
jb
cs
sbb
arpl
and
or
push
pushf
shll
push
js
rclb
pop
out
test
jbe
ret
cmp
filds
sub
scas
popa
out
fstpt
push
inc
fwait
nop
cmpb
ja
sbbl
add
fistl
xor
cmp
je
std
shl
dec
sub
cltd
add
mov
xor
xchg
mov
adc
fucomp
inc
pop
mov
push
dec
adc
call
sbb
fcomps
sub
outsl
arpl
xchg
or
jb
pop
rol
jmp
popa
cmp
test
jge,pt
into
push
bound
cmpsb
add
out
inc
dec
add
add
push
inc
pushw
aad
aaa
test
daa
cwtl
aas
mov
xchg
cltd
add
vcmpss
mov
inc
mov
das
es
cmpsb
loop
adc
add
repz
ss
xchg
cmp
cwtl
xor
incl
imulb
sub
fisubs
xchg
lahf
ret
movsl
mov
rcrb
and
incb
test
out
cmp
roll
jno
nop
cmp
xchg
mov
addr16
or
jecxz
jb
arpl
inc
mov
mov
fs
xor
lock
fisubs
gs
mov
mov
popa
cmp
pop
cmpsl
dec
test
sbb
xor
scas
fadd
xchg
bound
jno
out
das
mov
addr16
pop
inc
jl
int
adc
cwtl
in
push
neg
pusha
ss
cmovg
mov
popa
fisttpll
or
dec
mov
arpl
shll
stos
stos
xchg
js
out
data16
jg,pn
mov
inc
daa
sub
in
and
sahf
mov
mov
mov
lea
sub
es
in
xchg
cmp
add
adc
pop
es
lahf
push
inc
adc
mov
gs
sub
rcll
mov
clc
dec
stos
subb
xchg
mov
xor
stos
inc
cmp
fnstcw
cmp
push
adc
aaa
xchg
add
out
inc
pop
aad
pop
sub
iret
inc
scas
test
les
mov
lea
rcrl
out
lret
sahf
outsb
cmpsb
xor
into
sahf
add
push
or
arpl
sahf
xor
sub
movsl
sub
mov
test
push
mov
cltd
jecxz
or
lahf
repz
fs
leave
sahf
clc
mov
pusha
xor
into
arpl
pop
mov
scas
push
stos
jns
jecxz
aam
in
jno
mov
sub
ds
xorl
cmp
push
cmpsl
fsubrp
cmp
xlat
xchg
sbbl
inc
push
cmp
aaa
movsl
dec
insb
ljmp
ja
or
in
cmp
jecxz
test
pop
insb
rcr
data16
mov
and
sbb
push
inc
sbb
mov
adc
cmpb
push
and
lea
insl
jb
xchg
in
sbb
inc
and
nop
mov
jmp
lock
push
pusha
insl
jge
jg
or
pop
mov
mov
data16
adc
xchg
add
adc
add
jmp
xchg
push
stc
loopne
or
add
inc
stc
xor
mov
cmp
push
cmpb
cmp
jmp
stos
mov
stos
jns
cmp
fistps
daa
push
mov
xchg
jmp
push
mov
cmp
aas
lret
repz
repnz
push
pop
jge
cmp
ret
inc
push
xchg
pop
xor
mov
xor
push
es
fimuls
lds
mov
ljmp
add
xor
sbb
outsl
shrb
fstpt
imull
or
mov
das
xchg
jb
dec
sbb
inc
stos
or
sahf
xchg
inc
mov
cmp
jp
xor
sub
push
je
xchg
jle
adc
jmp
and
int
adc
sbb
mov
lret
adc
mov
mov
scas
vmread
mov
jl
mov
scas
xor
mov
mov
and
aaa
inc
cli
pop
rcr
inc
jg
dec
cmp
push
movsl
shrl
lret
jae
jbe,pt
adc
je
sbb
lret
xlat
lea
jg
imulb
icebp
dec
add
cmp
dec
lahf
adc
cmp
into
mov
or
pop
mov
insb
out
lret
insb
icebp
iret
scas
jne
sub
cwtl
jmp
cmpsl
or
cs
sub
nop
push
or
add
or
ss
xchg
out
loope
jne
pop
je
jno
shlb
xor
imul
dec
ds
mov
rolb
scas
call
cwtl
mov
popf
test
push
pushl
lcall
and
inc
dec
sub
leave
cld
scas
and
subl
pop
subl
mov
mov
lcall
push
pop
and
inc
push
mov
scas
mov
aam
fisubl
add
dec
pop
cs
aas
push
push
adc
and
rcll
loope
sbb
push
mov
mov
push
je
daa
cmpsl
pop
aas
inc
das
cmp
dec
in
and
loop
xor
outsb
pop
inc
jmp
out
xchg
lret
or
ret
stos
xchg
dec
mov
leave
mov
xchg
hlt
cmp
mov
loopne
js
ret
lock
adc
cmpl
lods
mov
dec
jp
pop
mov
or
push
cmpsb
rcrb
je
adc
adc
fistpll
mov
mov
inc
cltd
mov
xchg
push
les
push
lret
insl
sbb
insl
in
stos
fs
loope
pop
scas
mov
iret
repz
push
xor
and
scas
dec
add
add
das
icebp
sbb
aad
cmc
shlb
pop
aaa
xchg
aad
sahf
xchg
ret
adcl
cmp
leave
dec
mov
cmpsl
scas
cmp
sbb
and
popf
sti
add
jb
sub
repz
or
mov
iret
inc
scas
xor
xor
imul
fistps
js
xor
mov
iret
cmp
xor
sub
jne
aam
jae
jmp
cwtl
mov
or
and
push
out
inc
push
fistpll
fidivs
movsl
cwtl
xor
jge
mov
bound
es
addr16
call
cmp
xor
les
stc
test
inc
adc
pop
lea
ds
sti
add
jb
ljmp
stc
test
dec
inc
cmpsb
or
enter
dec
adcl
rorb
int
mov
xor
jne
imul
cmp
adc
icebp
lret
add
xlat
cmp
inc
scas
je
jge
add
xor
xchg
pop
sub
cmp
push
ret
mov
mov
cmp
movsb
loope
xor
fs
neg
jne
pop
rolb
push
jne
dec
sbb
add
dec
stc
dec
dec
xchg
xor
repnz
and
popf
cmc
jne
jmp
clc
dec
pop
rol
or
adc
and
jns
ficoms
pop
xchg
jg
adc
repz
imul
aas
ja
dec
arpl
popa
test
cmp
stos
leave
sub
daa
pop
lret
popa
mov
iret
push
xor
mov
clc
jle
repz
aas
test
pop
movsl
xchg
ljmp
sub
inc
addr16
imul
dec
xor
cmp
int
and
sbb
xchg
mov
fcomps
inc
push
loop
pop
cmpsb
jl
pop
in
xchg
sbb
jo
adc
scas
inc
inc
add
fistps
pop
push
sub
lret
cmp
mov
rcll
add
repz
xchg
sbb
and
inc
daa
and
mov
repz
imul
ret
not
test
mov
int
push
or
outsb
adc
or
dec
mov
sahf
sub
mov
xchg
pop
jns
test
xor
inc
sti
jl
pop
ss
mov
test
mov
xor
lods
stos
lods
sbbl
and
leave
pop
cwtl
mov
jno
sti
sbb
and
jnp
push
aam
nop
cld
pop
or
ljmp
mov
pop
rcl
ret
dec
mov
repz
icebp
gs
pop
in
out
cmc
push
mov
and
popf
stos
in
mov
adc
xor
bound
call
inc
cmp
mov
xchg
xchg
push
fmuls
mov
repnz
dec
mov
pop
cltd
pop
out
adc
add
mov
mov
inc
inc
push
iret
and
and
mov
xor
stos
push
cmpsb
adcb
sub
into
inc
jecxz
jbe
cli
stc
int3
movsl
repnz
lods
je
es
jecxz
fwait
push
jno
stos
cmp
push
sub
inc
adc
test
mov
fadds
mov
rcll
in
scas
lds
push
cli
sbb
dec
pop
loop
pop
sti
mov
xor
mov
stos
mov
and
cs
test
jmp
ret
punpckhbw
scas
xchg
mov
clc
mov
jl
adc
fists
jo
mov
fnsave
mov
lea
les
push
jmp
lea
fldt
adc
pop
or
xchg
jmp
nop
inc
popa
jnp
push
jae
add
and
jne
add
sbb
adc
ljmp
fs
js
stos
sbb
add
jae
notb
inc
jle
push
pcmpgtw
dec
dec
imul
mov
rolb
fiadds
lods
push
add
mov
inc
inc
call
scas
and
loopne
movb
inc
shll
dec
popf
jo
in
pop
sbb
mov
xor
xchg
add
lods
pop
outsl
rclb
jmp
xor
xlat
cmc
mov
ljmp
sub
jp
or
xor
out
out
aas
sub
adc
add
sbbl
fidivl
sbb
or
into
dec
aaa
and
test
into
inc
xchg
mov
or
ljmp
shr
shl
icebp
mov
sub
sub
mov
mov
out
jne
pop
insb
cmp
mov
fsubs
mov
decb
adc
push
pop
jns
mov
xor
mov
movsl
push
xchg
inc
push
mov
pop
hlt
insb
dec
outsl
ret
rcrb
icebp
jle
mov
inc
addr16
pusha
inc
repz
mov
jbe
aad
inc
jbe
jno
pop
fistps
or
clc
mov
inc
hlt
pop
subb
and
jne
aas
mov
adc
push
aaa
xor
out
ja
cmc
add
jnp
fadd
or
cmp
xlat
mov
jb
mov
sahf
jbe
lock
inc
push
fdivl
icebp
dec
push
mov
iret
enter
inc
adc
push
adc
ds
or
push
shl
cmp
lock
aas
repnz
es
in
stos
mov
mov
push
dec
lods
fsubp
in
lret
sar
stos
repz
stos
aas
jnp
scas
iret
div
xchg
iret
add
in
dec
xchg
jg
sbb
xchg
test
shl
jle
es
sub
pop
mov
and
sub
out
sub
dec
mov
nop
or
inc
sarb
dec
pusha
or
mov
aad
scas
decb
mov
sub
rclb
and
mov
into
shrb
sbb
add
jmp
mov
movsb
stos
clc
lret
or
push
add
test
adc
sahf
sahf
cmp
test
fucom
mov
loope
cs
fidivs
adc
mov
test
dec
imul
pop
sub
mov
cmp
dec
fwait
xchg
or
in
mulb
sti
cmp
cmp
andl
or
sub
lock
std
sbb
jo
insb
rclb
js
xchg
sbb
xchg
dec
lods
and
sahf
fists
mov
hlt
in
aas
shl
pop
and
rcl
mov
addb
add
jge
lret
push
seta
mov
lock
ljmp
in
mov
cmpsl
pop
ds
mov
sbb
push
loopne
vunpckhps
aad
imul
xor
mov
rclb
and
cmpsl
in
inc
out
adc
and
or
aam
mov
xchg
xchg
jmp
rclb
or
cs
mov
lret
mov
popa
lods
insl
lods
push
into
jecxz
fwait
jg
aas
ja
sub
mov
jnp
adc
jmp
aas
sahf
cwtl
sbb
inc
sti
mov
sbb
pop
clc
jb
mov
in
mov
mov
insb
and
pop
aaa
aad
jge
nop
mov
cld
loop
or
inc
std
push
dec
test
jae
icebp
dec
xor
and
fcompl
cmc
mov
shrb
stos
ss
adc
into
xor
test
lahf
cld
xor
fwait
in
mov
fwait
add
sarb
lahf
mov
adc
lea
je
sbb
shrb
dec
and
jbe
jmp
mov
dec
jae
xchg
xchg
aad
pop
fisttpl
xlat
loope
mov
mov
mov
out
xor
dec
jmp
loope
add
cmp
addr16
or
cmp
in
mov
enter
ds
or
push
add
es
adc
mov
and
mov
push
int
cs
repz
mov
lahf
out
dec
ljmp
xchg
ja
fs
repz
frstor
jp
loope
mov
pop
das
neg
mov
jnp
mov
cmp
adcl
cmp
jnp
mov
in
cmp
sarl
mov
popf
push
xchg
stos
jecxz
jnp
lahf
xchg
adc
mov
jmp
das
jp
push
popf
adc
add
popa
mov
cmp
insb
mov
add
lods
sbb
sahf
pop
xchg
leave
inc
adc
fidivrl
jns
aas
js
jmp
hlt
test
into
mov
mov
test
jge
test
in
js
and
and
das
bound
push
clc
jge
pusha
lcall
xchg
sahf
cmp
jge
add
jbe
inc
adc
or
sbb
popf
push
adc
mov
lahf
add
insl
jns
jecxz
or
pusha
lock
cmp
fs
hlt
enter
add
xor
imul
int
cs
clc
push
xchg
cmp
in
sahf
call
test
dec
jbe
inc
push
sub
or
imulb
bound
cmp
mov
jnp
out
gs
jecxz
mov
imul
mov
cmp
leave
xchg
push
ret
shlb
add
push
lret
mov
push
jae
lea
out
xchg
xchg
inc
xchg
or
jo
jle
sbb
or
sbb
lret
lods
sbb
xor
repnz
push
cmp
sub
push
shll
scas
daa
cwtl
in
push
cmp
push
adc
outsl
push
pop
mov
test
and
sub
xchg
popa
pop
xor
repnz
subl
pop
aad
dec
daa
ffree
and
pop
mov
mov
hlt
sub
dec
insl
insb
fistpll
out
mov
cld
xchg
jecxz
jbe
sbb
sbb
add
inc
ret
pop
aas
push
xor
xchg
jle
into
xor
movsl
sbb
pop
jns
xchg
in
mov
sbb
xchg
adc
int
xchg
sub
inc
arpl
cmp
adc
out
add
idivb
rolb
lgs
pushf
repz
test
fcmovnb
dec
mov
fiaddl
insl
dec
or
and
xor
in
add
jns
in
xchg
loopne
sbb
mov
sahf
outsb
dec
cmp
adc
in
dec
iret
sbb
xchg
dec
adc
dec
push
sbb
mull
inc
sub
sarb
push
mov
xor
jp
aam
mov
pop
shr
ret
dec
js
call
imul
fsubrs
repz
sbb
dec
insb
sarl
movsl
or
fstpl
jb
fdivl
add
fwait
or
mov
iret
inc
jo
repz
xchg
in
adc
xorl
and
sbbl
repz
rcl
fstpl
out
jge
adc
cmpsb
mov
mov
pushf
stos
fidivrs
jmp
cmp
dec
mov
push
pop
cmp
adc
mov
pop
dec
push
sub
fidivs
push
les
ret
adc
add
cltd
xor
mov
push
adc
inc
popf
and
in
mov
test
dec
repnz
inc
cs
repz
pop
mov
in
add
arpl
sbb
clc
mov
xor
xor
jecxz
mov
or
sbb
outsl
mov
ja
or
push
lds
adc
jns
mov
cmp
daa
outsl
in
lock
in
xor
adc
out
sub
test
out
and
jg
shr
mov
jnp
or
lret
scas
ljmp
repz
xchg
sub
in
das
dec
shll
imul
cli
scas
jge
xchg
mov
dec
jmp
push
xchg
mov
fs
out
imul
out
mov
mov
cli
lods
lret
sti
popa
sub
lcall
xchg
mov
cwtl
daa
jnp
mov
into
mov
cltd
cli
push
iret
stc
andb
sahf
mov
les
inc
adc
or
push
iret
push
jp
ret
adc
cmpsb
lods
lcall
xchg
in
in
sub
shlw
xchg
insb
scas
mov
add
add
subl
jbe
popl
clc
imul
sbb
mov
daa
fnstcw
mov
test
in
pop
std
dec
lods
and
push
and
sbb
fidivl
mov
popf
je
xor
xchg
sbb
jo
jnp
and
xor
add
push
lock
leave
pop
stos
aam
and
leave
inc
xchg
dec
xchg
mov
jnp
shlb
xor
jns
lock
jl
push
ds
fnsave
ror
lret
lods
pusha
loop
aaa
jmp
jecxz
movsl
dec
jg
or
and
iret
int3
xor
xor
and
lret
adc
or
xchg
sti
cmp
pop
sarl
cmp
imul
push
sub
mov
mov
inc
xchg
mov
iret
xchg
pop
imul
stc
xor
push
push
inc
stos
push
fisttpl
push
int3
insb
mov
dec
fwait
or
pop
cs
xchg
mov
sti
out
inc
cld
mov
pop
xchg
ret
rclb
es
push
add
mov
adc
dec
leave
int
xchg
adc
add
out
or
lret
mov
mov
inc
jae
mov
add
cmp
int
scas
adc
mov
lcall
rclb
dec
int
mov
ret
test
xor
push
sbb
sbb
lods
xor
dec
fidivs
push
clc
xchg
mov
cmpsl
mov
push
insl
enter
adc
js
addr16
ror
roll
and
inc
lods
jno
fcomp
fs
mov
pop
in
js
orl
ret
fstps
lahf
ljmp
or
inc
ss
call
sbb
mov
sarb
jbe
pop
icebp
scas
ret
dec
ljmp
add
adc
inc
bound
dec
or
loop
fs
inc
inc
or
pushf
cmc
add
leave
aad
jp
push
and
lcall
mov
enter
aam
push
mov
jo
inc
pop
imul
pop
ret
in
stc
cmpsl
clc
and
pop
mov
inc
add
xchg
mov
pop
leave
in
icebp
ja
mov
insb
fisubrs
repz
jns
cwtl
add
loopne
imul
mov
jle
pop
repnz
pop
and
inc
sbb
inc
js
xchg
shlb
push
dec
pop
test
outsl
outsb
push
push
pushf
fadd
in
mov
xchg
shll
mov
and
sub
adc
lret
mov
fidivs
lret
fnstsw
test
inc
fchs
jns
outsl
hlt
fldt
jmp
lcall
data16
xchg
add
nop
sbb
bound
shl
loope
pop
lods
xchg
push
cmpsl
dec
inc
push
sub
pop
repz
cmpsl
cmp
orl
sub
cwtl
imul
dec
mov
cs
rcrb
in
xchg
xor
add
xor
test
mov
aas
mov
jmp
out
js
insb
call
adc
or
xchg
lret
aam
push
xor
sti
scas
mov
inc
mov
bound
jge
xor
pop
call
fcomps
loope
fs
mov
mov
push
lock
adc
out
std
pop
mov
test
and
pop
inc
dec
sub
ja
mov
add
cmpsb
xchg
aaa
subl
push
and
out
cmpb
scas
je
sub
jp
jmp
push
nop
inc
jbe
dec
stc
into
jg
xlat
jne
je
mov
mov
mov
jp
pop
inc
pop
fisubrs
gs
cmp
xchg
ror
iret
cli
dec
cmpsl
popf
cmp
sbb
pop
popa
xchg
lea
sub
or
adc
icebp
inc
sbb
push
test
cld
or
aas
add
loop
cld
add
add
pop
inc
jb
ss
jo
dec
les
and
aad
out
in
popa
cmp
or
sub
roll
mov
cmp
mov
cmpl
into
mov
pop
out
stos
mov
pop
lods
xchg
data16
sti
jbe
ja
aad
out
test
pop
sub
or
pop
icebp
in
dec
xchg
inc
push
sahf
mov
call
cmpsl
cmpsb
adc
dec
xor
inc
test
lret
iret
bound
int3
ret
fimuls
lea
push
pop
out
loop
add
ljmp
loopne
in
cmp
and
cs
jbe
jb
jo
scas
add
mov
mov
cltd
dec
movsl
cmp
add
pop
xor
xchg
add
test
xchg
bndldx
es
mov
frstor
mov
adc
jnp
fwait
mov
fstl
rclb
and
ror
push
sti
dec
cmp
jecxz
mov
jnp
int3
pushf
lret
in
adc
pslld
aas
adc
shlb
inc
rcrl
pop
push
das
rorl
jns
jns
inc
ficompl
inc
jno
mov
inc
rorl
out
jo
mov
dec
cmp
aam
mov
int3
sub
outsl
jmp
lods
loopne
fs
or
data16
js
mov
or
ds
pop
xor
out
pop
xor
mov
jne
sbbl
xchg
ret
jne
or
shlb
mov
rolb
icebp
ret
push
sbbl
or
adc
mov
push
lds
rcrb
push
and
leave
fwait
push
fidivrs
sbb
out
aaa
loopne
xor
aas
aas
jmp
mov
mov
sub
fisubrs
insb
js
je
pop
jle
aad
cmpsl
push
jmp
xchg
jns
insb
fwait
cmp
lahf
mov
sahf
xchg
cmp
into
dec
xchg
fdivp
mov
in
xchg
xor
xlat
mov
rorl
sub
popa
add
add
xchg
jmp
inc
inc
scas
adc
das
mov
pop
mov
mov
cmp
mov
sub
jg
test
mov
addr16
fidivl
popf
aas
das
mov
lahf
leave
pop
pop
mov
mov
sbb
inc
pop
jl
mov
xlat
cmpsl
push
stos
pushf
push
test
ret
lahf
push
push
aam
icebp
jo
lods
clc
scas
stos
add
mov
pop
and
cmp
enter
les
jg
test
lods
jmp
inc
std
mov
adc
fwait
jl
mov
dec
sahf
sub
push
add
xchg
test
pop
ja
sub
testb
mov
popf
gs
mov
add
pop
ss
xchg
mov
cmp
loopne
popf
push
out
and
ss
jbe
dec
ds
cmp
les
xchg
add
mov
ja
push
test
aas
jne
stos
adc
adc
in
sbb
fimull
xchg
leave
push
and
dec
jb
ficoms
loope,pt
adc
jo
sahf
mov
std
loopne
ljmp
test
mov
pop
mov
andb
ds
add
and
or
repz
out
xlat
push
int3
xchg
xor
clc
test
mov
fnstsw
inc
mov
pushf
push
clc
pop
outsb
dec
push
sub
mov
xor
jg
dec
mov
sub
sub
jno
out
jo
jo
mov
push
stos
and
movsb
lock
jp
xor
add
jno
std
out
and
cmpsb
out
fnstsw
and
fists
adc
gs
stos
or
out
clc
outsl
or
xchg
mov
inc
inc
lret
push
lcall
aas
push
dec
add
repnz
xor
aaa
mov
cmp
mov
push
idivb
sarb
rcll
fidivs
cmp
xchg
dec
jle
jle
cmp
push
bound
inc
inc
ret
in
in
or
sbb
cld
jg
cmpsl
adc
pop
loopne
cmp
mov
pop
xchg
sbb
popa
add
subb
lods
into
sahf
cmp
push
adc
gs
push
cmp
or
fdivl
cmp
and
push
inc
outsb
dec
and
dec
mov
mov
xchg
push
repnz
mov
pop
adc
add
mov
std
mov
movsb
or
jns
adc
sbb
js
mov
xor
call
sbb
add
dec
fchs
push
iret
push
out
mov
jl
fs
push
dec
xor
aam
pop
fwait
aas
or
inc
dec
mov
mov
pop
enter
jecxz
arpl
sub
xor
cmp
outsb
daa
cmp
ds
pop
fidivl
inc
scas
outsl
insl
lea
call
andb
push
xor
or
repz
fwait
leave
loop
fdivrl
cld
pop
fiadds
stos
add
scas
pop
loopne
jmp
test
fldcw
mov
lock
jno
xchg
rcll
hlt
int3
dec
es
or
cmpsb
mov
or
dec
lahf
dec
nop
sbb
jne
stos
mov
das
fisttpll
jmp
mov
or
dec
ficoml
pop
cmp
mov
sub
jecxz
and
jecxz
nop
add
in
stc
nop
lret
sub
subb
lds
inc
pop
sbb
add
mov
jae
mov
pop
outsb
cmp
mov
lret
jne
dec
cli
outsl
stc
bswap
xor
sbb
out
stc
mov
pop
das
shr
pop
jle
or
stos
mov
add
cwtl
mov
lds
das
popa
sbb
lahf
sbb
add
jns
cmp
scas
push
mov
addl
dec
jne
stos
call
cli
jnp
mov
push
push
dec
leave
fdiv
adc
pushf
pop
mov
and
lret
ljmp
push
dec
mov
jge
subl
lods
inc
xor
xchg
insb
mov
lods
shr
in
out
xor
inc
cwtl
jmp
fisttpll
lock
popa
scas
repz
outsl
cmc
leave
movsb
inc
notb
cmpsl
push
iret
stos
in
lret
xor
stos
mov
sub
in
into
iret
add
enter
xor
mov
adc
xchg
mov
or
and
mov
out
mov
hlt
test
into
xchg
stos
push
gs
sbb
cwtl
aad
mov
lcall
sub
inc
test
mov
in
test
xor
ljmp
outsl
xchg
es
bswap
lcall
insb
xchg
adc
daa
jae
outsb
pop
bound
addb
xor
pop
dec
inc
pop
in
xor
jo
push
scas
xchg
js
push
mov
fwait
ljmp
loope
pop
sub
adc
bound
jb
pop
sub
test
lret
pop
cmpsl
mov
call
jl
sahf
jge
xchg
sbb
ret
cld
adc
subl
iret
mov
movsb
adc
es
inc
insb
loope
mov
cmpsl
xchg
xor
movsb
lcall
shlb
inc
les
cmp
fwait
imul
pop
mov
outsb
movsl
popf
dec
adc
insb
dec
lods
or
fsubrl
xor
out
lcall
enter
sub
cmpb
sarl
in
scas
mov
shr
jo
push
push
push
mov
fcmovnb
xor
fstl
mov
in
bound
jg
pop
cmpsb
dec
mov
adc
test
rclb
jnp
cld
in
push
insb
mov
dec
or
xbegin
mov
inc
call
lods
xor
pop
sbb
in
das
sbb
ficomps
std
mov
das
aad
jmp
dec
xor
sbb
call
xchg
lods
rclb
nop
ret
popa
inc
repnz
push
push
scas
xchg
in
sub
out
jno
jo
xor
jbe
sbb
jp
add
fs
in
jno
ss
stc
cmp
jb
loope
sbb
shlb
mov
pop
mov
cmp
add
stos
dec
clc
cltd
jnp
add
int3
std
or
sub
adc
mov
js
and
cmp
cmpsb
stos
dec
ds
cmpsl
leave
aaa
xor
shrl
lret
jg
fdiv
jl
ljmp
push
rcrb
cmp
jno
push
xor
ret
daa
xor
clc
mov
call
pop
mov
mov
in
mov
mov
jp
xor
mov
mov
jecxz
jl
lahf
jnp
xchg
xor
test
push
xor
movsb
push
icebp
inc
inc
pop
ret
loop
xor
pop
lods
cmp
mov
or
sbb
lcall
cmpsb
or
add
pop
sub
roll
mov
aam
mov
adcb
or
sahf
outsb
cs
mov
movsl
lcall
stos
xor
and
out
adc
sbb
cmpsl
or
mov
jl
in
inc
push
insb
inc
push
add
adc
lahf
out
inc
jmp
out
xor
shrw
jg
mov
xor
out
movb
lods
add
mov
cmpsb
xor
addl
sub
test
push
cwtl
leave
mov
in
fcompl
imul
lock
cs
jmp
push
dec
out
jo
sbb
loop
adc
rolb
les
lahf
push
std
jnp
lret
out
divb
inc
iret
xor
fwait
mov
push
cld
jecxz
sbb
in
mov
imul
add
or
jbe
rolb
mov
xchg
sbb
pop
jno
inc
lcall
sbb
int
clc
movl
xchg
mov
bound
mov
test
adc
xlat
imul
and
xor
arpl
in
dec
ds
jnp
fcmovb
nop
ret
movsl
mov
mov
mull
pop
cmp
add
pop
mov
sub
into
or
leave
adc
pop
fisubs
mov
pop
dec
xchg
fldt
das
push
lret
pop
push
test
mov
fmull
sahf
movsl
bound
jle
or
sbb
inc
fmuls
and
lcall
mov
or
sbb
iret
pop
add
jae
repz
gs
jne
jmp
xchg
sahf
icebp
pop
pop
jb
xor
ret
mov
ret
jmp
sbb
aad
xchg
xchg
loope
int
mov
xor
push
cmp
mov
icebp
push
filds
pop
inc
mov
xchg
pop
pushf
mov
std
jmp
xor
mov
inc
jno
inc
cld
lahf
into
sbb
xor
lcall
jo
js
pop
sbb
iret
mov
pushf
mov
sarb
ja
js
vmovsd
pop
ja
xchg
iret
inc
and
mov
pushf
lock
clc
int
bound
xor
jmp
int
and
adc
pop
rolb
std
leave
decl
rorl
jne
jne
xchg
or
cmp
cld
or
adc
cmp
gs
cmp
int
nop
dec
xchg
sub
inc
xor
lods
test
xor
pop
mov
andb
lahf
fimuls
adc
dec
cmp
stc
sub
cmpsb
mov
cld
xor
sbb
mov
idiv
add
outsl
cmp
lahf
mov
out
aam
scas
sbb
push
pop
mov
pop
jne
jne
xchg
cmpsb
and
into
pop
fs
ds
fiadds
xlat
sub
ds
cmp
cmp
and
aam
push
ret
or
mov
loopne
bound
in
and
push
fs
mov
loop
lods
pop
xor
mov
inc
and
das
ljmp
mov
adc
sub
shll
out
and
out
sub
push
adc
mov
sub
pusha
out
stos
xor
lock
insb
clc
mov
pop
shlb
cmpl
ret
std
adc
ficoml
push
es
es
mov
insb
je
arpl
mov
sub
adc
cmp
or
push
lds
sahf
scas
ret
sub
shrb
jne
dec
xchg
dec
adc
sbb
mov
push
mov
xchg
mov
lods
mov
pop
or
clc
lds
add
cmp
pop
and
mov
dec
fsubl
jnp
popa
repnz
mov
xor
mov
in
or
xchg
in
cmp
lahf
fcompl
sub
fisttps
rcrl
push
xor
outsb
mov
sahf
test
int
lcall
add
jno
xchg
mov
lds
maskmovq
divl
or
loop
mov
repnz
dec
mov
push
lods
sub
inc
insb
jp
ja
std
add
shl
dec
sub
ss
jo
push
out
stos
sub
push
call
out
pop
aad
xchg
in
addr16
out
mov
or
addr16
daa
rcrl
int3
add
push
rorb
pop
testl
aad
xor
imul
cmp
push
sbb
fisubs
xchg
out
or
aad
pop
popf
js
fnstsw
cmp
mov
inc
rolb
xchg
ja
icebp
rcl
mov
and
test
lods
and
pop
lock
faddl
sbb
lods
lods
push
push
pushf
inc
lea
inc
pop
out
jp
inc
xchg
mov
fscale
jmp
fnstsw
push
inc
ret
fldl
jle
lret
sub
pop
mov
mov
xor
xorl
incb
xchg
jecxz
jl
fwait
sub
mov
scas
jnp
mov
loopne
mov
cmp
lahf
aas
cmp
mov
mov
or
and
dec
inc
mov
sub
add
jmp
and
outsl
je
out
movsl
push
loopne
mov
jbe
outsl
ret
mov
loop
mov
imul
xchg
repnz
sub
movsb
mov
mov
pop
ljmp
inc
xchg
mov
pop
enter
popa
mov
add
in
inc
xchg
lret
imul
or
adc
sti
icebp
push
scas
sar
fs
dec
mov
mov
or
ss
sbb
das
in
dec
gs
jnp
add
out
cltd
or
xor
fs
mov
pop
into
hlt
cmp
jmp
inc
push
arpl
jo
aad
and
push
pop
sub
rolb
or
push
cmp
or
cmp
ja
jo
add
pop
in
jmp
js
scas
std
push
sub
jl
pop
stos
leave
addr16
cmpsl
xor
pusha
stos
push
into
mov
jecxz
cmp
rorb
inc
es
add
add
sbb
lods
out
test
cmp
xchg
cmp
fcompl
pushf
aaa
jge
sub
in
cmpl
lret
adc
jge
ljmp
xchg
mov
jno
psadbw
jae
das
ret
inc
jnp
mov
pop
iret
mov
mov
push
aas
mov
mov
sarb
xchg
mov
push
aaa
incb
jne
xor
js
add
or
stos
les
xchg
rcll
jle
mov
ljmp
int
cmp
mov
jb
cmp
es
cli
ret
xlat
adc
cmp
jb
inc
xchg
movsb
mov
cmpsb
push
push
repz
xor
inc
mov
or
das
jbe
sbb
jg
jbe
cltd
bound
add
lea
imul
int
repz
mov
fwait
inc
aad
sahf
sti
pushf
dec
fwait
lea
push
sub
cwtl
inc
pop
popa
popa
mov
inc
sbb
sahf
aas
pop
ja
xchg
test
test
test
push
jmp
or
adc
mov
in
icebp
jmp
loop
test
or
pop
pushf
push
push
in
sub
testl
mov
sbb
mov
push
sub
add
loopne
pop
repz
testl
mov
fs
divl
dec
cmp
sbb
ja
add
fxch
cmc
inc
insb
add
sbbl
stc
out
es
inc
subl
mov
lret
adc
cs
imul
std
cltd
cmp
stos
xchg
push
and
fsubs
pop
jae
std
mov
stc
cmpsl
add
jnp
outsb
loop
cmpsl
xchg
or
cwtl
sbb
nop
add
mov
sbbb
sti
and
inc
pop
stc
leave
mov
dec
jbe
sbb
push
mov
add
and
into
jnp
pop
stos
lret
and
cmp
lret
pop
inc
imul
loopne
pop
cmc
and
jbe
in
in
inc
in
push
in
push
push
stos
fnstcw
xchg
and
jmp
out
cwtl
rcrb
sbb
pop
or
sbb
adc
cmpsl
or
ret
sbb
mov
xchg
push
addr16
mov
add
lahf
mov
rolb
add
nop
inc
or
add
and
sbb
pop
jmp
cld
and
icebp
mov
cmp
idivl
mov
xchg
mov
sbb
dec
pop
fiadds
and
ret
sub
xchg
popf
loop
dec
inc
jmp
mov
sub
repz
mov
adc
push
lods
lock
jae
stos
mov
mov
jo
xor
dec
sbb
jg
cmp
xor
rcrb
push
inc
data16
stc
fnsave
jp
stc
jne
mov
mov
pushf
sbb
mov
stos
stos
test
stc
arpl
adc
loope
and
loop
and
gs
xchg
pop
test
adc
ss
movsl
sarb
push
jb
jbe
std
movsl
and
mov
inc
dec
shrl
mov
sub
sbb
cmpsb
cmc
pop
aad
push
or
gs
sbb
in
pop
push
pop
out
xor
jecxz
lds
mov
xchg
jp
xchg
enter
out
pop
mov
push
shl
je
adc
mov
cmc
inc
cmpsl
test
xchg
addl
fdiv
mov
adc
mov
pusha
sbb
cmp
mov
sub
pop
sbb
fninit
lods
popa
add
xor
idivl
test
pop
ficoms
aam
cmp
int3
mov
jno
push
movsb
inc
cli
mov
imul
or
lds
or
xchg
fnsave
jno
jmp
ljmp
rol
sub
in
xor
cwtl
mov
xor
adc
jb
push
lret
sbb
or
fcom
fisttpll
cltd
movsb
test
fs
adc
daa
push
aad
iret
xor
add
add
enter
mov
mov
push
insb
insb
pop
mov
stc
mov
movsb
jb
jae
push
mov
pop
push
dec
pusha
add
jmp
xchg
xor
data16
xlat
pop
sbb
sbb
xchg
xchg
pop
ja
sub
pop
push
push
lahf
lret
mov
dec
rorb
push
bound
div
mov
jge
outsb
movsl
adc
jno
jle
out
dec
inc
popa
mov
nop
dec
mov
dec
dec
and
mov
mov
sbb
hlt
cmp
mov
xchg
bound
sub
dec
fwait
pop
movups
push
push
sbb
or
loop
mov
add
subb
push
stos
cwtl
stos
adc
aaa
xchg
outsl
dec
iret
das
add
in
dec
and
jns
jecxz
xor
cmp
je
je
outsl
add
vpunpckhbw
das
stc
loopne
out
out
insb
fildll
sarb
pusha
into
xor
fwait
jns
or
dec
dec
adc
int
imul
push
sbb
lahf
adc
pop
sbb
cmp
sub
mov
fsubs
outsb
push
mov
inc
mov
test
subb
in
and
test
ret
pop
jp
push
mov
sbb
xchg
add
jbe
in
adc
lea
mov
xor
out
adc
iret
pop
push
mov
cmp
inc
xchg
xor
mov
mov
fwait
xor
xor
cmpsb
outsb
std
aam
push
aam
push
and
sbb
sub
movsb
stc
gs
push
nop
jp
mov
mov
and
add
ja
lock
adc
push
xor
adc
cmp
sahf
xlat
pop
dec
mov
stc
outsl
adc
out
ljmp
add
js
mov
mov
jl
mov
inc
mov
pop
inc
xchg
sbb
mov
mov
push
int3
inc
jle
or
imul
xchg
scas
sbb
sub
es
test
test
in
mov
cwtl
pop
mov
out
inc
jae
imul
add
or
js
outsb
fnsave
inc
addl
cwtl
sbb
xor
mov
ficoml
push
lods
pop
mov
cmpsl
fisubs
push
insb
adc
mov
adc
mov
xlat
sarb
mov
aas
jbe
cmc
enter
cmp
mov
std
roll
jbe
mov
ret
jmp
cld
dec
add
push
cmp
jmp
cs
scas
or
sub
mov
mov
push
icebp
and
jns
das
jmp
mov
xlat
cmpsl
push
cld
mov
in
mov
lcall
les
ljmp
adc
sar
sub
mov
add
mov
andl
adc
lock
inc
cmp
mov
jl
fsubrs
sahf
mov
repnz
xchg
loopne
sub
insb
jb
scas
sbb
gs
sbb
popf
xchg
push
xor
into
cmpsl
sbb
mov
decb
leave
stos
lea
cmp
scas
jo
sub
cmp
test
push
out
mov
daa
mov
sbb
sbb
sub
mov
mov
lds
cmc
leave
aaa
out
inc
cmp
daa
scas
jae
add
add
out
sbb
jg
es
sbb
adcl
or
ficoml
das
xor
mov
clc
test
mov
push
push
mov
popa
or
sahf
xchg
xchg
jno
mov
inc
pop
pop
add
jb
aaa
ds
sub
jl
cmpsb
adc
dec
cltd
inc
movsl
mov
sahf
jae
jmp
push
pop
ret
pop
inc
in
ljmp
addr16
pop
ja
insl
sarb
xor
pop
repz
push
mov
in
inc
jmp
xchg
mov
movl
xlat
lods
mov
lock
in
hlt
ss
add
fisubrl
cmp
push
daa
call
mov
sub
addr16
mov
push
push
mov
fdivl
xchg
and
and
xor
lret
scas
lahf
add
add
adc
jmp
mov
bound
mov
jne
outsb
or
dec
lret
inc
dec
push
mov
insl
mov
cld
dec
sbb
sbb
loopne
pop
into
fisubrs
loop
or
add
rcll
bound
fidivs
jle
rclb
jnp
pop
add
jne
mov
cwtl
ret
bound
dec
jl
scas
mov
sbb
lahf
xchg
add
mov
xchg
adc
rorl
xor
out
sub
dec
mov
mov
call
orb
xor
jbe
add
xor
movsl
shrl
lret
xchg
mov
inc
jae
push
push
jb
fwait
pop
adc
clc
cmp
fld
mov
pop
stos
sub
xchg
stos
mov
call
bound
repz
fwait
mov
pop
int
stc
inc
xchg
scas
jl
aad
pushf
imul
fs
jo
loop
mov
jp
pusha
sub
jl
aam
pop
pop
fldcw
mov
call
repnz
mov
pop
push
push
pop
in
lahf
jl
pop
and
fistpll
fucom
loop
jl
inc
cwtl
rclb
xchg
inc
cs
rol
popf
adc
hlt
sbb
add
ss
ja
adc
test
and
inc
mov
ljmp
ds
int
rcll
jbe
add
scas
fwait
jp
int3
leave
pop
call
mov
cmp
adc
loope
insl
loope
or
jne
xorl
ljmp
dec
sub
mov
out
and
sbb
ret
call
out
or
pop
icebp
orl
ret
test
add
repz
dec
cltd
adcb
sub
jno
cmp
es
fmuls
mov
outsb
mov
stos
ja
xchg
out
sarb
cs
aad
pop
adc
test
xor
cltd
insb
popf
data16
repnz
sbbl
cmp
dec
int3
cltd
pop
fists
mov
imull
insb
inc
ds
cmpsb
int3
pop
jmp
loope
sti
repz
movb
cmp
mov
xor
jo
fmull
xor
xor
or
shrl
sub
cmp
push
testb
dec
xchg
cld
inc
jmp
stos
xchg
dec
clc
fcomi
pop
sub
mov
xlat
aas
mov
icebp
lds
data16
add
int
stos
aas
and
and
fs
and
and
dec
iret
les
pusha
lock
es
loopne
push
mov
pop
add
rcll
push
es
or
lahf
and
lods
add
cli
out
and
stc
mov
mov
push
or
data16
test
test
and
push
mov
pop
addr16
jp
test
inc
adc
mov
xor
sbb
cli
sbb
addr16
mov
mov
xchg
lcall
mov
pushf
hlt
outsl
push
fnstenv
fs
cs
xchg
mov
inc
popa
fbld
loopne
sbb
add
sub
out
or
xchg
xor
roll
xchg
popf
adc
sarl
in
loopne
out
stc
jmp
lcall
roll
inc
add
scas
add
xor
addr16
fists
dec
add
push
push
pop
jnp
sbb
clc
aaa
imul
das
fstps
xor
and
loopne
int
inc
mov
cmp
push
mov
mov
ds
cwtl
lret
push
mov
clc
xchg
test
xor
gs
int
cs
xchg
sahf
sub
and
mov
jb
push
test
js
ret
mov
jg
les
add
jbe
aad
add
cmp
cld
gs
adc
push
sbb
outsl
adc
mov
mov
cmp
mov
cmp
fidivs
cmp
mov
mov
mov
mov
sar
adc
and
rorl
or
ret
daa
js
xchg
and
inc
mov
test
cld
jnp
cmc
outsb
fs
cmp
adc
or
xor
push
popf
add
xchg
push
icebp
or
pop
int
imul
rol
test
addb
test
les
xchg
pop
xlat
fnstsw
bnd
ret
mov
jno
movsl
inc
mov
out
push
sarb
in
or
insl
mov
jae
mov
shl
or
sbbb
pop
incl
xchg
test
xor
mov
fldcw
dec
sbb
mov
or
lret
or
xchg
ss
out
sbb
movsb
push
repz
xlat
push
pop
pop
jne
aam
arpl
pop
xchg
mov
ja
mov
push
add
jecxz
dec
xlat
jo
mov
js
das
push
aaa
out
and
loope
dec
outsb
push
mov
mov
js
pushf
in
push
aad
call
inc
xchg
inc
adc
adc
stos
jg
xlat
ret
mov
adc
shlb
fmull
jo
out
mov
data16
fsubl
outsb
xchg
mov
arpl
or
mov
and
adc
jg
cltd
rep
loop
pop
or
shl
sub
xor
xor
and
xor
sub
mov
cmp
sub
addb
ljmp
jnp
xchg
dec
bound
shll
test
sub
pop
and
rorb
dec
ficomps
jecxz
adc
pop
ljmp
sar
dec
xchg
fidivrs
arpl
mov
out
mov
push
push
push
ret
xchg
fistps
sub
or
mov
sbb
stos
imul
sahf
inc
inc
push
sub
cmpsl
push
fnstenv
jne
inc
sbb
mov
outsl
pop
sbb
das
push
dec
leave
imul
jp
dec
pop
mov
sub
shlb
mov
ljmp
or
mov
xor
push
dec
jae
ljmp
xor
inc
push
idivl
fs
fnstsw
mov
sbb
sbb
rorl
sahf
popa
lock
adc
cltd
or
push
icebp
mov
mov
aad
outsl
mov
icebp
je
in
dec
data16
mov
lods
sub
xchg
shl
pop
mov
sbb
and
jnp
push
ret
lods
xor
dec
rcrb
in
cmp
push
sti
ss
dec
loop
sbb
jge
addr16
sti
cmc
sbb
std
push
pop
in
icebp
push
jbe
cmpsb
mov
and
mov
add
adc
sub
push
sbb
mulb
out
js
xlat
cmpsl
int3
std
es
mov
cmp
add
loope
int
xor
dec
pop
scas
adc
and
dec
sbb
pushf
shrb
or
jae
jbe
jl
add
jno
jl
mov
in
mov
and
or
xchg
fcoml
outsb
lahf
repz
lret
test
mov
ljmp
pop
xor
aam
push
hlt
xor
ljmp
arpl
int3
xor
sub
movsb
in
dec
push
in
push
xlat
stc
scas
test
lret
mov
jp
adc
leave
or
push
mov
out
pop
shl
out
dec
and
pop
cmp
outsl
push
orl
cmpsl
imul
pusha
xor
sti
cmp
adc
subl
jno
jle
mov
out
cltd
mov
mov
jge
push
test
bound
xchg
repnz
dec
inc
test
inc
mov
mov
push
mov
shrd
scas
pop
or
or
mov
mov
pop
mov
lds
pop
mov
fs
fstpt
jge
inc
leave
jge
aas
outsb
or
rcrl
popf
aas
sub
xchg
test
push
mov
mov
or
das
mov
bnd
insb
shll
inc
pushf
lods
out
mov
leave
repz
xlat
sahf
popf
and
push
mov
int
fstl
out
aam
imul
lcall
fisttpl
out
pop
add
aas
push
loopne
imul
movl
jle
popf
jmp
mov
jnp
sbb
mov
inc
lcall
mov
mov
jbe
or
les
bnd
imulb
jle
out
fs
loopne
aad
pushf
in
dec
sub
setl
les
jp
cld
outsl
adc
mov
repz
rolb
ret
lret
lock
cmp
sbb
xlat
push
mov
inc
or
js
mov
clc
imul
mov
dec
mov
xchg
xchg
mov
std
int3
shll
xor
std
mov
mov
clc
cmpsb
dec
mov
pop
or
push
add
out
xlat
inc
push
sahf
daa
add
pop
andl
add
fwait
popf
lods
xchg
mov
sahf
mov
pushf
cmp
mov
lods
xlat
int3
mov
jb
xor
les
jle
in
movl
insb
or
add
dec
dec
push
ljmp
outsb
dec
icebp
or
xor
ja
xlat
test
sbb
fwait
je
xorl
cmp
mov
or
mov
jno
adc
pop
pop
pushf
clc
sub
hlt
clc
lds
xchg
sub
enter
outsl
mov
pop
xor
jp
fildll
mov
mov
cmp
into
lea
fadd
add
push
or
arpl
out
sbb
ret
dec
shr
pushf
aam
idivl
add
fnstsw
out
aam
jns
test
mov
in
popa
push
jbe
mov
lcall
jnp
push
adc
shlb
jae
stos
cmp
add
pop
nop
mov
fsts
mov
out
into
mov
or
lea
repnz
push
mov
dec
mov
pop
ja
inc
aaa
xchg
popa
ret
push
push
jb
aas
addl
lea
loopne
js
inc
pop
sahf
mov
xchg
cmp
insb
dec
and
add
nop
test
jmp
lret
inc
jge
or
pop
inc
or
call
dec
sub
adc
nop
out
inc
testl
lea
cmp
xchg
repz
fmull
jl
lea
paddb
push
aad
les
pop
pushf
adc
mov
push
cmp
test
mov
call
arpl
mov
push
outsl
lods
xchg
shll
pop
and
bound
fs
cmpsl
ja
sbb
xlat
fildl
pcmpgtw
sar
inc
icebp
sub
pop
jecxz
sbb
jnp
repz
hlt
jle
cmp
sarl
or
loop
stc
movsb
je
inc
pop
sti
pop
cltd
adc
sbb
mov
mov
dec
nop
push
lds
stos
cmp
ss
dec
aam
gs
lds
mov
add
ds
lods
cmp
mov
jb
mov
fs
dec
pop
test
aad
add
mov
das
orl
aas
lahf
sbb
mov
cltd
cmpb
add
push
inc
inc
test
mov
in
xchg
fisubrl
dec
std
mov
pop
mov
xor
outsb
mov
dec
mov
mov
in
sub
dec
mov
mov
jmp
and
adc
push
xchg
lea
jge
jg
cmpsb
dec
in
adc
lcall
ljmp
int
leave
stos
ss
mov
pop
hlt
test
xorl
lds
or
mov
mov
into
pop
sub
and
loope
das
hlt
xchg
stc
lea
mov
or
pop
mov
idivb
lock
and
push
mov
xchg
es
shll
imul
sbb
popa
pop
xchg
push
aaa
push
ss
inc
addr16
mov
lret
pushf
mov
fwait
lds
or
jecxz
pop
cwtl
aas
jne
adc
clc
inc
std
jnp
dec
gs
sub
imul
outsb
jno
add
out
lahf
or
adc
sub
out
movsw
add
xlat
xchg
test
sahf
inc
std
xor
jmp
lret
sub
adc
pop
sub
daa
inc
mov
stc
jmp
push
mov
cltd
subb
cmp
push
mov
mov
adc
xor
cmp
ljmp
je
test
das
insb
inc
dec
decb
ret
push
roll
cmpsb
mov
and
sub
push
push
and
pop
fwait
rorb
pop
and
mov
and
mov
hlt
lds
fists
test
fwait
in
out
push
aaa
push
lock
stc
les
jg
xor
test
or
or
jns
cs
dec
mov
sbb
push
add
mov
jg
filds
xlat
mov
cs
lret
data16
push
insb
xorl
push
into
scas
or
andl
fwait
push
or
inc
pop
daa
dec
repnz
repnz
je
adc
sahf
cs
fidivrl
test
pusha
popa
cli
adc
mov
lods
ret
call
mov
pop
pop
int3
rcrl
in
fs
jbe
pop
shlb
aas
mov
fdiv
sahf
or
ljmp
incb
lock
popf
repnz
mov
jp
inc
mov
add
clc
pop
mov
xchg
xchg
or
lcall
ret
arpl
clc
add
roll
test
or
jecxz
movsl
fisttps
cmp
lcall
mov
sarl
push
in
enter
cmp
sbb
out
pushf
mov
sub
rol
jb
mov
push
sub
test
cmpsb
pop
cmc
ficomps
adcb
inc
mov
dec
and
push
lods
inc
pop
cmp
cmp
test
inc
mov
popa
ficoml
and
sahf
pop
xchg
mov
roll
jg
stc
pop
or
sub
leave
xor
pop
aam
test
pop
xchg
lret
rcll
lods
call
adc
inc
xchg
repz
aam
or
pop
pusha
outsl
or
add
cmp
cmp
push
mov
mov
clc
shll
jmp
call
inc
inc
lcall
adc
jbe
jmp
lret
int3
xchg
test
pop
into
mov
lahf
aad
fists
andl
leave
ret
sbb
inc
stos
mov
jmp
aad
loopne
cmp
jo
mov
mov
cmp
imul
xchg
loopne
cs
loop
jne
push
xchg
lret
test
push
cmpsl
xor
fildl
test
lret
pop
mov
sub
scas
inc
adc
adc
push
decb
mov
mov
xchg
mov
adc
sbb
ds
dec
jne
movl
jnp
mov
lds
popa
xchg
push
dec
jle
mov
push
or
inc
jmp
adc
xor
inc
jne
mov
shl
shrb
stc
push
repz
out
and
mov
add
adc
repnz
call
xor
popa
mov
bound
fldenv
int
pop
or
or
loopne
sbb
mov
fwait
mov
jle
xorl
mov
fs
into
fldcw
fsubs
repnz
inc
xchg
or
cmpsb
xor
and
push
xor
ficoml
dec
inc
adcl
out
push
jp
push
and
cmp
inc
outsb
test
mov
clc
and
movsl
or
bound
inc
jmpw
int
push
mov
mov
sti
aas
sbb
push
or
out
add
rcrb
pop
xor
pop
mov
movsb
cmp
or
xchg
lcall
stos
pop
test
mov
ja
pop
punpckhbw
sbb
add
dec
xlat
pop
xchg
ret
cli
out
adc
sbb
enter
push
xlat
xchg
push
jbe
std
cmc
lock
dec
stc
mov
jne
dec
ja
push
xor
xchg
insb
xor
mov
mov
xchg
or
enter
ja
pop
into
or
pop
fadds
ret
aad
fdivrs
jne
add
out
les
rcr
fcmovnb
push
cmpsl
push
push
cmp
add
mov
notl
push
push
cli
insl
scas
aaa
jge
stos
nop
in
lods
cs
mov
std
inc
sbb
out
repnz
fnsave
outsb
add
in
mov
push
sbb
cmpb
cld
mov
sub
inc
clc
inc
cli
mov
xor
sbb
dec
aam
cmpsb
shr
jb
push
mov
leave
sub
adc
sbb
pusha
scas
push
xor
mov
out
mov
push
and
leave
xchg
lahf
push
dec
inc
push
nop
out
mov
adc
sub
in
adc
adc
pushf
sub
cmp
in
pop
cmpsb
xor
lods
leave
or
dec
add
pop
mov
sti
jo
test
jae
pop
sbbl
pop
cwtl
pop
rcll
outsb
mov
jle
fwait
sbb
flds
jl
push
mov
mov
xor
fildll
popf
pusha
shrb
adc
xchg
adcl
rorl
stc
std
and
testl
mov
pop
pop
and
subl
ljmp
push
mov
pop
mov
daa
je
dec
out
add
dec
cmp
lea
jo
jmp
pop
repz
sub
sbb
sub
mov
shlb
test
insl
aam
adc
cmp
or
push
cmp
inc
sti
invd
je
scas
fs
nop
jmp
jg
dec
jbe
cli
imul
cmp
pop
add
mov
add
int3
xchg
jmp
pop
lahf
or
pushf
add
lods
xor
cmp
mov
aaa
rolb
test
rcr
out
rcrl
scas
push
dec
inc
stos
adc
fdivr
add
lsl
sbb
xchg
mov
iretw
pop
inc
mov
jnp
movsw
std
out
rcrb
lods
je
sbb
jo
mov
out
test
test
ds
and
inc
das
jb
mov
xchg
repnz
mov
add
jl
jae
cmp
jmp
xchg
scas
test
movsl
das
loope
mov
cmp
repnz
sbb
dec
pop
outsb
jg
or
pop
dec
std
pop
jno
inc
es
subl
xlat
stos
fistps
das
xor
popf
push
stos
mov
aam
xor
add
outsb
pop
mov
sahf
mov
mov
jmp
divl
mov
cmp
add
push
mov
cmc
ss
mov
sti
outsl
add
xor
movhps
stos
xchg
ret
fsubl
outsl
stc
cli
addr16
xchg
jb
aas
aaa
mov
mov
and
inc
dec
cmpsl
roll
iret
sbb
std
insb
add
cmp
jp
xchg
pop
jb
cmp
push
dec
sub
adc
add
add
dec
jne
dec
fstps
mov
cmc
clc
sub
fs
push
dec
ret
shrb
orb
pop
pop
push
jl
push
mov
mov
mov
out
pop
adc
out
std
stos
sti
xor
mov
mov
out
in
cld
sub
loope
repz
mov
cmp
test
repnz
mov
mov
cmp
dec
inc
mov
inc
js
aad
push
xchg
ret
add
clc
imul
pop
mov
dec
daa
in
fdivs
add
outsl
jnp
add
push
and
les
sarl
jb
mov
dec
lret
and
les
sti
and
sub
in
push
mov
rcrb
push
push
cmp
loop
pop
and
sub
mov
jp
out
das
cmc
or
mov
and
in
lods
aaa
pop
mov
adc
cmp
xchg
push
fisttpl
loop
orl
mov
mov
in
aad
pusha
mov
subl
and
fs
sbb
scas
inc
add
sbb
mov
cmp
lea
adc
push
sbb
lds
and
xor
test
add
cmpsl
add
ds
subb
pop
add
shr
gs
mov
in
lods
xor
fcoml
int
movsl
fisubrs
and
xor
arpl
movsb
push
jae
jge
mov
mov
orb
out
mov
adc
or
aaa
rorb
enter
fsubrs
out
mov
pop
xor
fs
add
repnz
loope
ret
cmp
data16
test
test
and
lock
test
fwait
xor
out
jo
mov
fnsave
pusha
shlb
pop
ss
cwtl
nop
cmp
adc
lods
xchg
ja
mov
dec
cmp
insl
push
addps
pop
mov
addr16
sarb
mov
mov
sti
out
fildl
testb
fisttps
dec
add
fwait
sahf
push
cmp
fadds
pop
inc
pop
inc
repz
loope
enter
or
int3
xor
test
lcall
dec
pop
pop
jge
lods
mov
mov
nop
jae
xor
xchg
pop
sbb
stc
addr16
adcb
adc
dec
data16
out
rcr
dec
and
inc
jnp
xchg
cmp
jo
aad
fst
loop
dec
xchg
mov
pop
xor
inc
ret
fisubs
push
mov
jb
xchg
or
mov
adc
cmp
mov
xor
fiadds
mov
or
pop
ret
xchg
push
pushf
cmpsl
repz
hlt
xor
adc
lret
pushf
cmp
les
push
ds
xchg
cmp
sbb
jl
and
idivl
xor
pop
adc
int3
jnp
lret
out
xchg
pop
mov
repz
mov
mov
dec
aaa
pop
adc
pop
or
insb
sbb
cmpsb
mov
inc
xor
add
nop
cmp
data16
xchg
add
mov
mov
pop
cmp
insb
lret
jecxz
es
lods
cs
inc
add
add
or
std
mov
add
or
mov
shr
imul
add
inc
adc
loope
sub
repz
sub
cmpsb
push
std
addb
out
jg
mov
inc
leave
fadds
lsl
fldln2
shr
sub
insb
push
pusha
and
jbe
sub
out
mov
sbb
fnstcw
insl
stos
in
repnz
iret
or
mov
mov
push
cmc
ja
mov
popa
cmp
enter
xchg
inc
sbb
ss
imul
dec
adc
mov
std
mov
addr16
clc
fisubrl
xor
daa
xor
jns
pop
stos
dec
dec
inc
push
inc
sub
xchg
and
adc
sbb
dec
int3
adc
and
xor
loope
dec
cmp
lahf
mov
jmp
aaa
std
inc
xchg
cmp
pinsrw
insb
add
jno
dec
flds
push
mov
and
aam
scas
push
inc
addr16
call
dec
insb
movsl
cmc
cmp
icebp
popf
xlat
movsb
xchg
lods
lahf
dec
jmp
shl
aad
into
out
loop
int3
jne
js
ja
outsl
sbb
fildll
mov
aad
loop
divl
rolb
mov
xchg
fwait
icebp
jge
stos
popf
dec
sbb
rcr
and
fldl
mov
gs
mov
push
repnz
imul
mov
mov
in
fistps
leave
cmp
loop
ss
mov
sub
push
pop
sub
pushf
test
xchg
and
rcll
xchg
sub
in
fldt
stos
aaa
bound
add
xchg
cwtl
xor
fs
jmp
adc
movsl
jae
jo
pop
lahf
ret
push
sbb
pop
mov
shll
rol
adc
xorl
outsl
int3
jmp
inc
ret
mov
dec
test
lea
add
pop
or
sub
das
idivb
pop
cmp
pop
jno
test
dec
jo
rolb
mov
mov
daa
xor
leave
xlat
add
xchg
adc
imul
dec
loopne
sbb
push
cmpsl
push
dec
mov
sbb
xor
dec
push
lds
xchg
fsubrp
pusha
bound
rorb
cmp
xor
inc
insb
xor
shl
aaa
push
jbe
cmpsb
mov
fadd
xchg
xor
dec
cmp
inc
ss
push
inc
movsl
insb
xorl
cld
xchg
outsl
xchg
jle
push
pushf
rorl
popa
in
out
push
mov
loope
outsb
enter
nop
call
dec
push
aaa
enter
cmp
lahf
mov
mov
sbb
mov
mov
aas
flds
xchg
data16
dec
mov
test
xor
fmull
jae
push
test
sub
pop
ljmp
inc
sub
cltd
mov
ds
xchg
cld
cltd
adc
lds
cmp
xchg
mov
sti
push
test
fwait
in
and
iret
stos
sub
cs
mov
flds
mov
add
aas
xchg
cli
insb
aas
mov
aam
dec
xabort
pop
add
ficoms
mov
mov
fiadds
xchg
stc
out
sahf
push
adc
scas
lahf
cmp
push
enter
insb
insl
hlt
or
push
fs
xchg
pop
dec
divb
ss
dec
loope
fcmovnbe
data16
xor
bound
jb
add
mov
push
bound
enter
inc
lcall
call
sbb
pop
dec
mov
loope
fildl
shrb
jo
nop
xchg
inc
fistpl
aad
mov
inc
insl
sbb
dec
pop
mov
mov
rorl
sahf
lods
js
dec
cmp
sbb
fiaddl
ja
pushf
jo
dec
ljmp
arpl
add
xchg
loop
inc
cmp
pop
sbb
sahf
lahf
dec
mov
jno
sbb
pop
inc
mov
or
movl
mov
ficoml
push
or
mov
xor
std
cmp
mov
inc
adc
int3
inc
dec
addl
loope
movaps
in
enter
loopne
mov
jecxz
jmp
jo
push
pop
adc
cltd
fisttpl
sti
cmp
pusha
lods
cmp
and
loopne
push
cltd
inc
aad
fninit
pop
fs
mov
pusha
vpmacsww
cwtl
std
clc
lcall
add
mov
push
lds
call
mov
mov
jge
sub
sub
push
iret
ficoml
and
xor
insb
mov
fisubrs
lahf
mov
cmpsb
repz
test
int3
jnp
adc
movsl
out
or
loope
dec
fsubl
imul
into
push
adc
jo
push
xor
filds
out
mov
jns
xchg
xor
or
testb
pop
xchg
test
jecxz
out
mov
push
andl
stos
test
ret
clc
in
xchg
pop
adc
mov
add
daa
dec
shll
nop
out
sub
cmp
scas
iret
jno
push
cmpsb
aaa
pushf
cs
setl
cmp
loope
inc
ret
dec
xorb
stos
sbb
test
sub
ss
cmp
jo
jl
popa
dec
push
std
inc
inc
pop
into
and
pop
cmp
or
pop
sti
add
mov
pop
mov
sbb
stos
ss
mov
loop
push
shl
nop
sbb
sub
dec
leave
sub
push
mov
fwait
xor
out
xchg
mov
dec
outsb
hlt
mov
vmovaps
and
adc
repz
jnp
push
aaa
imul
stos
insb
mov
pop
lock
xchg
int
std
push
sub
mov
mov
jmp
jle
imul
aaa
jp
xchg
data16
cli
jbe
repz
ss
mov
inc
outsl
aaa
mov
cmpl
xchg
mov
dec
or
sub
or
ja
xchg
sub
push
or
in
leave
push
shll
inc
inc
cmp
mov
mov
jns
decl
cmp
adc
sbb
add
push
mov
or
fnstcw
xchg
fcomps
xor
xchg
cmp
enter
sbb
add
xlat
stc
mov
sahf
and
sub
jle
mov
lods
sub
mov
xor
imul
in
jecxz
daa
adcl
js
jno
sti
pop
mov
shl
adc
les
test
jne
cmp
pop
jno
adc
pop
cmpsb
js
les
sub
sbb
jo
je
sbb
mov
int
outsl
jo
xchg
icebp
add
and
lods
arpl
cs
movsl
mov
cmpsl
inc
jle
xor
push
into
cmp
push
ret
stc
je
int
sub
push
jns
mov
adcl
sub
jmp
add
popf
sbb
loop
fstps
lods
iret
subl
cwtl
es
and
lahf
mov
jno
push
dec
andb
xlat
inc
fwait
mov
adc
jle
jmp
fwait
lods
test
mov
pop
aaa
xor
adcb
pushf
repnz
jmp
aaa
stc
insl
std
push
imul
pop
mov
mov
adc
pop
mov
jg
test
jl,pt
scas
test
add
lds
xchg
dec
cs
dec
es
push
jle
les
test
out
cmp
cmp
adc
or
es
pop
mov
pusha
pusha
out
inc
sub
scas
push
adc
int
call
xlat
lods
pop
rol
aam
jge
mov
mov
fistps
adc
mov
jmp
pusha
insb
pop
lods
sti
in
pop
mov
idiv
es
ffreep
cltd
inc
inc
and
and
inc
adc
adc
divb
push
fnstsw
push
mov
mov
dec
hlt
mov
lret
cwtl
cmp
test
inc
jl
xchg
nop
xchg
push
lcall
adc
les
dec
xor
shr
decb
sbb
les
pop
adc
sahf
aaa
lret
jae
ds
xchg
jge
ret
iret
and
cmpsb
cmp
push
or
xor
int
das
cmc
xchg
pop
pop
leave
call
popf
dec
adc
es
push
xor
int3
sahf
enter
sub
in
sbb
push
popf
jmp
xchg
sub
pop
mov
mov
rcrl
xor
sbb
shr
in
arpl
and
push
pop
cmc
lahf
fdivrs
inc
jae
or
adc
leave
out
xchg
and
popa
pushf
push
cmp
adc
jo
out
aaa
scas
push
cltd
cmp
xor
sbb
ret
xlat
subl
cmp
fs
push
fiaddl
out
out
jne
jmp
adc
sub
nop
or
inc
mov
adc
xchg
pop
mov
adcl
fwait
push
xchg
push
mov
mov
mov
sbb
insl
sub
and
int3
cmp
leave
pusha
iret
cmp
loope
push
and
mov
add
stos
sbb
test
push
rcr
enter
rcr
sbb
ss
sub
push
das
cmpsb
xor
movsl
bound
fwait
inc
outsl
xor
mov
ss
cwtl
mov
in
inc
subl
loope
lret
andb
test
data16
add
push
push
lret
mov
hlt
out
inc
mov
mov
cmp
add
add
pop
pop
and
adc
pop
cmpsb
cmc
dec
cmp
pop
sar
orb
mov
pop
ds
rolb
mov
mov
sbb
dec
loop
mov
push
hlt
cmp
repz
mov
repnz
icebp
scas
cmp
push
inc
test
aad
cmp
adc
sub
jae
sbb
fnstsw
push
sbb
or
inc
aad
push
dec
xchg
data16
adc
add
mov
mov
cmp
cmpsl
clc
movsb
or
jecxz
hlt
mov
mov
push
pop
rolb
pop
sbb
mov
jp
xor
xchg
sub
push
cltd
cmp
or
std
ss
lcall
inc
ds
mov
es
mov
xor
les
mov
pop
fildl
sub
les
shlb
xchg
stos
mov
ja
inc
adc
mov
mov
in
aas
cmp
or
xchg
push
cli
pusha
insl
mov
ljmp
fildl
xchg
shll
insb
mov
mov
pop
add
imul
fs
lcall
jne
stos
xchg
mov
pusha
dec
rcll
inc
pop
les
fucomp
mov
outsl
and
mov
push
mov
push
jb
inc
sbb
ljmp
loopne
sub
dec
pushf
mov
xor
std
imul
addr16
shr
adc
cmp
dec
cli
inc
cmp
mov
fdivl
xor
cs
or
insl
jbe
inc
aad
icebp
imul
into
mov
push
test
cmp
sbb
sub
lock
ret
cmc
test
rcr
int3
mov
push
gs
pop
lea
and
sbb
js
loopne
sbb
or
sarl
xor
adc
dec
mov
add
in
adc
inc
movsb
adc
bt
adc
mov
lret
mov
mov
pop
fdivrl
add
sub
jb
and
and
inc
stos
push
out
mov
xchg
cmp
nop
daa
repz
push
mov
nop
lock
mov
faddp
call
add
push
enter
mov
mov
mov
mov
pop
sub
jmp
inc
lea
lods
insl
movsl
adc
mov
in
cmp
nop
xchg
in
shll
add
xchg
mov
xchg
xor
enter
jne
jge
pusha
std
cli
pop
jnp
or
inc
imul
pushf
xchg
sti
add
pop
mov
xor
and
mov
mov
mov
pop
pop
pop
popa
push
scas
sub
les
jo
rclb
mov
adc
shrl
cmp
call
jle
mov
in
sar
popf
test
adc
ret
pop
pop
mov
out
sbbl
xor
arpl
inc
loope
ja
stc
xchg
xchg
cmp
mov
loope
dec
and
and
add
sub
imul
dec
out
sub
ljmp
int3
scas
lcall
xchg
xchg
insl
loop
enter
ret
jns
fcmovnbe
out
cmp
stos
inc
and
inc
or
clc
inc
icebp
xchg
popf
mov
or
insb
cmp
mov
push
push
imul
sbb
xor
xchg
je
rorl
out
pop
push
or
rcrl
cmpsl
jae
test
clc
mov
arpl
add
jmp
pop
lret
inc
hlt
or
cmpl
jmp
xchg
inc
push
add
xor
or
jecxz
shrb
xor
popf
std
lahf
add
and
jne
loopne
hlt
pop
into
lahf
or
sub
jge
add
shl
jge
sti
mov
shll
xchg
in
js
xorl
repz
xchg
dec
jae
dec
ja
or
push
imul
mov
insb
cld
mov
add
jb
xor
aad
and
xchg
jmp
adc
sbb
push
xor
hlt
rcr
pop
pusha
mov
jbe
sbb
add
popf
paddb
pop
xchg
pop
pusha
test
jp
xchg
cmp
sub
sbb
nop
add
dec
jmp
into
sbbl
xor
stos
jp
int3
xchg
adc
outsb
push
jo,pt
lret
push
pop
test
cs
fcoms
insb
mov
iret
sahf
mulb
jae
inc
test
movsl
out
repnz
mov
mov
scas
decl
mov
cmp
cmp
xor
pop
je
dec
dec
or
in
fildll
jns
stc
push
pop
xchg
adc
xchg
aaa
sbb
in
cli
cwtl
xchg
sub
xchg
loop
inc
xchg
aam
mov
das
rcll
dec
and
pushf
mov
xor
push
pop
bound
lods
adc
out
sbb
cmp
in
clc
cs
decl
in
xor
mov
movsl
inc
addb
inc
push
push
insl
push
fwait
inc
dec
sti
cmc
mov
movsl
sub
xor
xor
negl
je
or
fimuls
sahf
mov
jae
pop
incb
adc
inc
pop
lods
dec
and
sbb
into
in
and
mov
sbb
imul
push
movsl
js
jnp
cs
cld
mov
mov
pop
sub
jbe
ds
push
xchg
dec
test
mov
pop
or
dec
imul
add
mov
mov
in
xlat
imul
and
insb
xchg
jle
jl
pop
sbb
inc
fistpll
scas
jbe
xchg
mov
xchg
xchg
mov
ja
jno
sbb
push
in
hlt
dec
cmp
arpl
push
lea
fistl
pop
xor
int3
xor
sti
in
jne
pop
jp
push
aas
enter
xor
add
mov
add
pop
popf
orl
js
inc
sub
pop
cwtl
mov
scas
and
ret
insl
inc
sbb
jecxz
inc
sarb
addb
add
xchg
and
xor
or
cmp
mov
pop
leave
lods
jge
nop
aaa
mov
in
add
inc
inc
and
js
inc
cltd
xchg
or
sbb
jge
and
int
call
loopne
js
cwtl
cmp
cmp
mov
and
cmpsl
mov
xchg
mov
lret
std
js
add
les
mov
sub
repz
ds
pop
xchg
or
mov
stc
test
push
mov
dec
dec
repz
mov
aas
cmp
shlb
dec
in
adc
cld
movsb
pop
sbb
fcmovbe
pop
sbb
int
and
out
daa
mov
jecxz
in
lcall
imul
cmpsl
int3
mov
mov
bound
cmp
xor
adc
out
push
faddl
bswap
dec
jae
dec
ftst
mov
mull
pop
mov
adc
sar
stos
adc
xlat
shll
mov
aam
ss
adc
fs
pop
xchg
and
push
mov
mov
scas
setb
test
mov
stc
or
dec
push
xchg
lahf
dec
imul
fcoms
data16
pop
das
xchg
push
or
repz
repz
popf
int
nop
fs
inc
fists
out
and
cmpsl
test
int3
jae
fisubs
ficoms
cs
push
xorl
sbb
push
add
gs
xor
jo
outsl
jp
lret
sub
xor
out
fs
inc
dec
mov
xchg
jbe
notb
mov
in
int
sbb
sbb
out
dec
lea
push
fbstp
lcall
or
adc
lcall
lock
ljmp
bound
insl
movsw
call
or
pop
push
clc
aas
xchg
arpl
test
stc
test
jg
call
lds
add
cmp
in
dec
repz
jmp
sbb
sbb
jmp
push
adc
jl
pop
lods
mov
xchg
cmp
xor
mov
lods
les
cmp
inc
sbb
lcall
add
push
xchg
sub
mov
xchg
lret
popf
add
jnp
enter
aam
subb
push
jle
lds
mov
add
jmp
mov
inc
mov
xchg
enter
xor
ss
dec
jne
mov
in
out
rol
mov
mov
fcmovnbe
lahf
and
add
loopne
dec
mov
lret
or
test
xchg
inc
stos
insb
sti
pop
rdmsr
xor
lahf
imulb
mov
dec
push
dec
in
fisubs
jno
aaa
ss
inc
push
or
and
cmp
dec
jg
mov
xor
loope
sbb
xor
ss
xchg
rorb
xchg
pop
xor
push
pop
and
cmp
fcmovb
jb
ror
xor
lahf
das
adc
cld
mov
or
add
mov
es
mov
cmp
adc
jns
testb
sahf
adc
out
fs
stc
jns
pop
sbb
loopne
push
fldl
rolb
clc
mov
pop
cmp
out
add
xlat
sub
and
mov
jg
cmp
jnp
int
push
sbb
jo
jmp
call
pop
sahf
mov
mov
js
shlb
mov
icebp
push
sbb
xchg
movsb
arpl
les
dec
inc
dec
mov
cmp
cli
pop
sbb
lea
mov
jmp
call
imul
imul
jae
adc
fmulp
sbb
imul
mov
sbb
aas
test
push
daa
insb
aad
cmpl
scas
fs
das
inc
into
or
movsl
mov
cmp
lea
leave
cli
arpl
mov
mov
adc
into
add
fldcw
jne
rol
test
push
add
mov
les
mov
call
repnz
xor
int
xchg
pop
pop
popa
shll
cli
jmp
stos
jo
out
pop
add
xchg
cmp
in
jp
repnz
cwtl
jnp
push
cmpsb
mov
mov
in
jge
mov
inc
xchg
push
movsb
ficomps
xlat
cmpl
push
notb
mov
push
lds
in
adc
into
test
ds
jl
cmpsl
mov
cli
dec
repz
in
iret
jnp
shll
adc
jg
movsl
cmp
sub
into
movsl
inc
cld
lret
call
push
idivb
mov
lcall
shll
mov
sub
and
mov
push
or
stos
pop
push
add
sub
ja
cmp
jne
fsubs
pusha
and
xor
shl
aam
lods
popf
in
inc
dec
out
aaa
dec
rcrb
ljmp
push
push
adc
into
xor
insl
mov
pop
pop
out
inc
pop
push
and
fisubl
push
adc
xor
lcall
leave
push
adc
xchg
imulb
inc
cltd
jb
mov
sbb
movsb
imul
test
cld
xor
jns
lret
inc
dec
mov
xchg
jno
movsb
and
ret
fbstp
std
inc
dec
add
dec
jge
jno
jne
lods
das
xchg
inc
jl
testl
jb
mov
call
push
popf
lcall
stos
leave
aas
sahf
mov
mov
call
loope
outsb
ljmp
and
ret
jae
push
add
loope
jns,pt
pop
fidivs
aad
cld
jne
hlt
imul
gs
dec
fildl
test
mov
or
popf
bound
stc
sub
out
inc
test
les
inc
ret
push
push
cmp
scas
push
hlt
add
inc
lcall
enter
call
xor
aad
mov
push
sbb
pop
add
adc
mov
or
ds
cwtl
mov
and
fiaddl
aam
ja
mov
push
jo
push
out
ss
push
inc
mov
jns
cmp
inc
sti
fsubl
pop
jg
sub
outsb
pushl
inc
xor
stos
out
mov
js
jne
mov
xor
adc
mov
xlat
cli
sub
int
pushf
jp
pop
in
xchg
imul
push
orb
sbbb
push
insb
jle
incl
jnp
pop
inc
cmp
popf
lahf
fdivs
sbb
data16
push
aam
scas
fildl
lcall
insb
shrl
dec
mov
fisubl
les
sub
sub
pop
out
dec
xchg
sub
dec
incl
nop
jp
call
push
adc
leave
adc
out
adc
addr16
sbb
inc
adc
bound
test
pusha
popf
std
scas
ss
or
fsubrs
add
sub
fwait
and
sbb
dec
lock
nop
mov
hlt
ret
mov
in
inc
popa
and
iret
aam
dec
pop
sub
das
enter
or
imul
or
js
inc
lret
mov
or
movsb
sbb
mov
inc
dec
movsb
out
and
in
and
loop
xchg
sub
push
add
jbe
adc
testb
pop
dec
frstor
mov
mov
out
dec
inc
push
rcr
daa
movsl
mov
cmpsl
enter
popf
jnp
pslld
xchg
pushl
pushf
cmp
jbe
xor
aam
out
push
sbb
int3
int
pop
lds
dec
aas
sub
xchg
lret
push
mov
test
add
addl
mov
out
in
pop
cmc
enter
in
jo
jmp
cltd
jg
sub
adc
and
ljmp
sbb
adc
jmp
arpl
mov
pop
mov
mov
addr16
popa
mov
pop
imul
jge
popf
outsl
movsb
stos
inc
push
call
imul
and
lock
frstor
enter
cmpsl
dec
insl
mov
repz
sub
inc
mov
fdivl
insl
outsb
pop
jnp
sub
fdivrs
sbb
repnz
xchg
add
dec
sbb
arpl
in
fdiv
jbe
out
fsubr
fisttpll
scas
pop
add
sub
jae,pn
movsl
dec
in
xor
xlat
mov
adc
mov
shrb
jmp
mulb
sbb
aad
movsb
inc
enter
mov
xchg
cmp
flds
add
cmp
aaa
add
das
fdivs
clc
cli
add
inc
test
ret
adc
iret
loopne
mov
mov
out
into
mov
lret
fcom
mov
inc
dec
sbb
push
ret
das
xor
or
or
mov
in
dec
mov
adc
mov
or
xchg
enter
mov
add
or
mov
mov
mov
sahf
push
mov
stc
hlt
add
mov
sbb
push
jl
inc
add
and
test
adc
les
adc
clc
push
ljmp
cmp
call
and
fmuls
xchg
mov
mov
roll
mov
repnz
jge
push
outsb
push
and
push
push
lods
std
xchg
add
in
popf
jne
cmpsl
in
loop
inc
scas
push
sbb
rcrl
mov
mov
xor
push
popl
jo
inc
xchg
aas
mov
imul
and
fmul
out
mov
lahf
adc
jge
mov
fidivl
jno
or
add
inc
shll
and
test
jp
pop
aaa
mov
or
mov
pop
sbb
js
adc
mov
cmp
movsl
pop
pop
arpl
stos
es
jns
push
dec
jbe
shll
mov
mov
in
jmp
sbb
cmp
dec
jno
jb
aam
lret
mov
stc
and
mov
and
in
jmp
xlat
lahf
cmpsl
lods
and
pop
add
ss
arpl
inc
inc
jl
jne
fbld
int
mov
clc
jne
adc
push
out
fimull
jb
push
jle
es
mov
sbb
je
lds
push
dec
and
jne
inc
call
inc
frstor
and
xor
mov
mov
fwait
rcr
push
pop
dec
inc
or
lock
pop
lods
or
jecxz
out
mov
roll
xlat
lret
and
and
sbb
sub
jb
jbe
pop
xchg
mov
popl
jmp
out
aam
pop
sbb
cltd
mov
in
lret
jns
ss
outsl
outsl
mov
loop
add
cmp
dec
inc
inc
roll
sub
add
xor
or
mov
push
es
pop
sbb
das
jbe
enter
scas
jg
test
int3
and
jp
sbb
loopne
jb
inc
pop
add
push
mov
loope
jp
hlt
pop
mov
inc
ja
add
outsb
fs
xlat
mov
imul
and
cmc
mov
sub
repnz
into
xchg
scas
popl
push
xorb
jmp
jg
daa
clc
mov
add
out
mov
adc
jbe
sti
in
push
ret
cwtl
xor
add
std
subl
push
lcall
dec
mov
or
loopne
popa
repz
push
int
push
mov
mov
neg
jle
jb
jmp
xor
addr16
pop
mov
dec
adc
in
cmp
sbbb
mov
sub
sub
imul
call
jno
mov
xchg
add
mov
xchg
sub
gs
lock
adc
sarl
sub
sbbb
inc
notl
cmp
clc
rcl
enter
lahf
or
and
mov
xchg
popf
loope
popa
fcomps
test
loope
adc
pop
rorb
sti
fsubrs
test
push
das
push
aad
and
inc
in
push
inc
add
cmp
fwait
xor
sub
outsl
inc
xor
je
out
jns
mov
xchg
inc
jnp
in
and
rcrb
xchg
pop
xor
loope
sub
xchg
push
stc
push
in
es
les
sub
push
imul
cld
mov
imul
add
sub
pushf
and
xchg
adc
out
adc
jecxz
xor
cwtl
pslld
adc
adc
js
mov
rcrl
aad
call
sub
mov
mov
dec
lahf
in
lret
loop
cmp
push
dec
pop
inc
out
rol
cmp
stc
arpl
aad
lock
jns
js
push
cmpsb
aad
inc
mov
and
dec
loope
lret
movsb
and
dec
rcll
inc
pop
les
xor
and
mov
mov
in
push
or
push
inc
jbe,pt
xor
and
jne
daa
xchg
lahf
xor
clc
push
jb
add
xchg
jne
adc
pop
dec
fwait
inc
inc
enter
cmp
sbb
mov
jp
negb
xchg
mov
mov
dec
negb
rorl
ljmp
clc
jnp
dec
std
jp
mov
fidivrl
cltd
ja
cmp
sub
dec
sbb
aad
xchg
push
cmpsb
stc
repz
mov
out
pop
xchg
and
enter
mov
sub
fs
jb
add
or
push
addb
outsl
iret
fisttpll
mov
mov
jp
xor
int
cwtl
pop
xchg
jp
add
scas
orb
adc
mov
fdivrl
xor
pushf
or
pop
mov
popa
ljmp
outsl
test
sbb
mov
aad
lahf
scas
hlt
pusha
and
lcall
scas
daa
sub
movsl
mov
add
mov
fisubs
ret
ret
mov
insb
jge
adc
push
cld
lret
sub
and
xor
xchg
xchg
cmp
stc
mov
pause
shlb
mov
aas
push
cmc
mov
inc
xchg
int3
scas
movsl
sub
jbe
aad
lea
test
mov
lock
lods
out
cmp
movsb
dec
xchg
pop
or
ret
jne
xchg
fucomip
lock
inc
sub
test
and
shlb
hlt
pop
sbb
je
and
andl
rorb
cmp
sbb
lret
gs
push
inc
mov
jbe
outsb
mov
xchg
sub
xlat
inc
imul
inc
nop
mov
lret
leave
push
loopne
popf
movsb
scas
scas
adcb
mov
adc
inc
mul
cld
cwtl
jb
add
and
cmp
je
out
mov
inc
cld
mov
outsl
cli
or
add
jno
adc
outsb
cmp
lret
fs
push
mov
or
test
mov
jo
jle
cmp
mov
cli
pop
shlb
loop
ficomps
out
adc
xchg
jecxz
rcr
sbb
sbb
jmp
into
fsubrl
inc
arpl
imul
or
int3
inc
rol
vpmulhw
inc
sbb
movsl
jae
or
inc
jnp
icebp
adcb
jg
es
shl
arpl
and
jl
cmpsl
lret
pusha
or
int
insb
data16
push
scas
add
inc
ret
mov
dec
or
out
mov
ja
lret
insb
outsl
into
iret
cli
xlat
jno
and
mov
or
das
cmp
jbe
sti
sub
fs
out
jo
push
mov
pop
inc
sbb
adc
mov
in
jle
shl
push
es
out
lahf
adc
shll
add
subl
shl
daa
push
push
fnstenv
arpl
add
hlt
jecxz
repz
jns
stc
gs
and
jae
push
and
cmp
jne
mov
cli
iret
dec
adc
xorl
mov
pusha
das
mov
outsb
jne
inc
and
mov
xor
push
xchg
push
cmp
jbe
mov
lea
inc
push
aam
push
xor
sbb
sub
lahf
cmpb
push
es
data16
ljmp
rcll
mov
cvtps2pd
sar
scas
cmp
lods
and
pusha
adc
mov
out
pusha
pop
mov
dec
div
adc
fcoms
out
sahf
shl
mov
push
sbb
addb
imul
mov
mov
pop
xchg
jno
mov
loope
mov
mov
je
repnz
fstpl
xor
inc
cmpb
push
pop
shl
xchg
push
popf
push
out
adc
mov
adc
cs
or
leave
pop
jg
cwtl
in
sarb
and
xor
xor
inc
pop
scas
repnz
mov
and
ljmp
inc
insb
dec
mov
lcall
jnp
fcomps
sbb
sub
inc
pop
dec
mov
adc
cmc
aad
cmp
ret
nop
iret
mov
sub
cli
sbbl
neg
mulb
add
out
cmp
int
fptan
aaa
cmp
popl
call
arpl
and
lds
shlb
xchg
mov
std
and
rorb
rcr
mov
mov
pop
xchg
andpd
add
adc
dec
bound
xor
movsb
mov
dec
cmp
or
xor
into
fimull
mov
ret
pop
xchg
dec
sub
addr16
lods
sub
shll
xchg
dec
insb
pop
jecxz
dec
mov
fwait
jl
and
ljmp
push
push
mov
cmp
adc
out
xchg
in
push
loopne
sbb
out
jge
jg
sti
dec
mov
lahf
xchg
nop
mov
clc
int3
fidivrl
pop
and
xchg
pop
pop
and
ret
jp
loopew
jbe
lds
stos
and
sub
cwtl
in
jns
fcom
xchg
lea
jmp
jo
andl
cwtl
out
xchg
sub
xor
cmp
leave
xchg
clc
push
rcr
cmp
add
and
inc
mov
jle
add
push
sub
jb
fsubr
cmc
scas
push
mov
and
dec
stc
adc
or
xchg
jmp
jp
cmp
pop
or
rcrl
int
xchg
movsl
movsb
mov
into
mov
or
pop
sarl
fisttps
arpl
jmp
adc
sub
sub
lea
sbb
inc
push
fwait
gs
popf
xchg
mov
mov
insl
test
xchg
pop
xchg
and
pop
xchg
lds
sbb
xchg
push
inc
loope
hlt
shrl
xor
cs
jge
les
xor
dec
scas
sbb
dec
inc
jge
cmp
sti
pop
test
push
iret
test
imul
loopne
in
cltd
mov
in
or
das
and
lea
cli
fcompl
mov
and
mov
mov
inc
arpl
inc
add
imul
jns
rsqrtps
xchg
push
inc
test
test
adc
mov
movsb
lret
xor
or
out
inc
ds
test
dec
push
jle
notb
filds
sub
bound
push
jbe
aam
xchg
jno
mov
inc
in
mov
movsb
lret
cmp
lret
sti
push
adcb
fisubrl
push
xchg
mov
pop
jb
and
sbb
or
dec
loope
enter
pop
pop
fwait
dec
cmpsl
es
jnp
push
jecxz
clc
push
out
push
data16
sub
push
in
out
mov
stos
into
xor
jmp
mov
add
push
dec
add
out
xor
bswap
mov
xor
push
test
jp
rcrl
mov
ss
or
js
shrb
andl
cmpsb
cmpsb
rolb
dec
xor
dec
inc
or
mov
out
icebp
sbb
cmp
mov
rclb
stos
test
movsb
lret
push
dec
daa
inc
sbb
mov
cmp
loope
push
mov
push
cs
int
jge
lret
jno
data16
cmp
pop
aaa
jnp
out
fldcw
jnp
shll
jne
jne
adc
ficoms
ret
pushf
mov
or
push
jmp
sub
jae
lods
xchg
nop
xor
clc
push
sbb
testb
shrl
lock
fwait
stos
in
xchg
push
pop
jp
loope
in
pop
ror
or
jnp
test
loope
adc
push
xchg
mov
mov
push
push
mov
sub
in
push
ljmp
inc
imul
inc
sti
repz
mov
sbb
adc
mov
adc
leave
das
xchg
popa
lods
mov
call
cs
dec
mov
repnz
jae
repnz
inc
pop
add
dec
outsb
mov
push
xor
mov
into
lret
test
jne
leave
xor
leave
jb
mov
mov
aam
mov
insl
fldl2t
cmp
mov
movsb
cwtl
mov
push
jecxz
cmp
cmp
int3
pop
sbbl
xchg
fmuls
jp
icebp
loopne
jno
push
xlat
push
mov
xchg
cld
jbe
pop
fsubs
sub
cmpb
dec
xor
jo
std
xlat
sub
addr16
fists
adc
in
mov
je
push
xchg
insl
xor
push
pop
nop
pandn
lock
add
mov
fildl
or
xor
pop
add
sbb
inc
mov
lret
mov
jb
dec
add
ret
sbb
jnp
mov
pop
ja
mov
gs
mov
test
xchg
push
inc
cltd
xchg
jg
scas
push
xlat
clc
fbstp
mov
mov
add
stc
lahf
cmpsl
push
mov
jb
frstor
mov
and
dec
in
icebp
sub
mov
push
pop
jmp
testb
jecxz
adc
ret
loope
ret
push
sbb
mov
cmpw
loope
dec
in
and
push
jl
lret
mov
jmp
lods
mov
lcall
mov
pop
movsl
sbb
dec
push
out
inc
scas
jge
cmp
mov
mov
je
sbb
iret
imul
das
aad
sub
sub
mov
inc
dec
and
cld
loopne
pop
test
scas
lcall
cld
aas
clc
mov
flds
loopne
cmp
xchg
inc
int3
pop
cmpsl
push
inc
cltd
fstp
into
fbld
outsb
pop
fdivrl
jmp
in
ret
mov
push
push
add
xchg
arpl
adc
and
or
dec
pop
rorl
and
fdiv
testl
ffreep
xchg
pusha
mov
in
adc
fs
xor
inc
jmp
loope
and
push
dec
loope
cmp
js
in
add
xchg
add
in
mov
sub
fisttpll
shrb
add
add
insb
push
js
sub
jp
mov
xor
js
adc
cld
sub
icebp
xchg
push
xor
imull
popf
sbb
jl
out
test
dec
add
leave
sti
fs
lret
adcb
call
jbe
bound
fprem
addr16
out
aaa
aam
mov
aam
or
and
mov
popa
outsl
scas
shll
pop
jge,pn
inc
fidivrs
movsl
enter
adc
push
jge
inc
subb
iret
int3
sub
lods
loop
fisubs
stc
mov
ds
popf
xchg
mov
xor
inc
fisttps
xchg
pop
movsl
lock
test
sbb
xchg
ret
sbb
lods
call
jns
jns
jmp
push
mov
enter
jns
push
insl
clc
sbb
sarl
push
sub
inc
pop
ret
mov
mov
imul
fidivrl
jge
insl
test
sbb
cmpsl
push
pop
cmp
sbbl
sti
out
jae
movsl
into
mov
adc
mov
out
clc
cltd
jnp
pop
ljmp
xchg
mov
mov
jge
sahf
in
shlb
outsl
pop
or
arpl
cld
sahf
mov
push
mov
in
decb
icebp
and
jns
xorl
sbb
es
out
or
add
addb
xor
or
mov
mov
in
and
jo
arpl
iret
mov
cli
cwtl
insb
mov
sub
int
in
scas
push
shlb
rol
mov
aam
push
or
out
or
or
and
mov
cmpsb
xchg
mov
pop
ljmp
sbb
mov
imul
pusha
push
mov
mov
sub
scas
lds
ret
decb
mov
into
xchg
push
fwait
mov
jno
adc
xor
mov
gs
xor
jno
jno
repnz
incl
jbe
and
cli
aad
and
enter
sub
fistl
and
push
or
std
inc
or
mov
cmp
or
in
shlb
int
pusha
dec
cmpb
fnstsw
rcr
test
and
dec
add
sub
sbb
push
aad
cmp
dec
xchg
sub
ja
cld
xchg
xchg
bound
mov
jb
jns
ja
movsl
icebp
mov
call
js
add
xchg
in
pop
xchg
icebp
pop
iret
aam
rorl
lods
aam
xchg
loopne
scas
lods
nop
jge
addr16
dec
jne
gs
aaa
fidivrl
lcallw
push
push
sub
mov
add
int3
adc
pusha
xor
ss
loope
sarl
sbb
cwtl
xchg
gs
shlb
xchg
mov
aad
push
dec
gs
or
jne
adc
push
adc
out
es
imul
sbb
leave
shrb
cs
jb
jmp
adc
int
mov
pop
arpl
stos
add
arpl
push
adc
push
xchg
and
andb
int3
rolb
mov
and
pop
scas
inc
adc
iret
popa
test
gs
sbb
push
or
cli
mov
leave
int
push
cld
dec
cwtl
cmp
xchg
push
inc
sti
lods
loope
aam
or
cmp
push
data16
fwait
mov
ljmp
rorl
sbbb
shrb
repnz
mov
aad
stc
push
clc
and
lds
in
pop
stc
push
inc
insb
shrl
ds
push
imul
adc
cmp
xchg
call
mov
adc
shrl
xor
cmp
and
ljmp
insb
shrl
jnp
xor
pop
mov
dec
lret
sub
pop
sub
dec
mov
mov
ret
out
sti
out
ret
rclb
ret
mov
or
xor
fistpll
pushf
dec
test
jae
out
ds
stc
sub
sub
xchg
sti
xor
mov
sbb
xor
mov
mov
enter
aad
fmulp
inc
js
pop
lret
mov
hlt
mov
push
adc
xor
cmp
flds
mov
leave
ss
pop
add
int
mov
sub
sub
push
or
imulb
stos
inc
addr16
push
sahf
cld
inc
cltd
mov
inc
dec
dec
push
lret
sbb
dec
outsl
aam
loopne
in
and
int
push
bound
adc
in
sub
lahf
movsb
sbb
fwait
inc
out
in
xor
std
std
notl
sub
sub
adc
sarb
xor
clc
out
adc
icebp
jb
inc
dec
sti
or
dec
mov
push
aam
add
lock
insb
out
stos
stos
cmp
pop
scas
sub
sub
dec
not
push
sub
push
fwait
bound
lcall
sarl
push
stc
mov
addr16
insl
mov
pop
fidivrl
mov
cmp
push
stc
lret
insl
test
jle
adc
push
insl
mov
insb
jnp
ret
add
add
xchg
sti
fwait
sbb
les
xchg
cmp
adc
push
ret
scas
aaa
sbb
and
cmpl
or
push
xor
leave
ret
imul
aad
shl
ret
pop
xor
pop
orl
subb
mov
push
mov
repz
push
out
aad
mov
push
ror
add
and
ds
pusha
jno
nop
out
push
mov
repnz
push
sub
dec
mov
mov
addr16
push
out
rcll
fisubl
xor
loope
sbb
sub
xor
xchg
xor
lahf
jp
or
shlb
aaa
sub
jae
decl
adc
lahf
ljmp
sub
movsb
adc
sub
cld
lret
or
shr
lods
mov
aad
sbb
adc
test
or
addl
aam
aas
les
mov
xchg
loopne
iret
sbb
push
pop
push
sub
sub
jnp
sbb
xchg
pop
fsubrp
fmull
nop
and
scas
imul
loopne
hlt
lea
lahf
jmp
sbb
icebp
dec
gs
add
out
jns
pop
sbb
test
pop
mov
lcall
dec
lret
orl
outsl
mov
loope
push
dec
mov
in
and
in
cld
jo
rcll
jne
jl
mov
loopne
aas
outsb
movsl
aas
sbb
std
aad
and
enter
les
jg
mov
pop
or
xchg
xchg
mov
shrb
mov
dec
or
mov
pusha
fmull
push
lea
mov
pop
or
inc
lahf
and
mov
ss
clc
push
lcall
dec
sub
popa
jp
mov
test
and
stc
daa
adc
aam
mov
dec
or
add
pop
arpl
fisttpll
and
mov
adc
push
int3
daa
scas
inc
sub
mov
or
lods
hlt
lret
mov
cli
mov
out
jg
sahf
cld
ror
scas
inc
repz
pop
sbb
scas
in
test
push
dec
push
stc
repnz
dec
jmp
xor
icebp
leave
and
mov
jl
popf
pop
inc
fsubrs
test
out
cmp
cmp
push
dec
pop
leave
movsl
sub
mov
inc
mov
iret
pop
shrl
in
sbb
mov
pop
cmp
ret
std
int3
jno
fwait
into
data16
pushl
adc
xorl
hlt
sti
inc
mulb
dec
dec
inc
leave
bound
push
mov
push
shrl
mov
es
loopne
pop
test
sbb
push
addr16
xchg
xorl
jge
mov
add
jl
imul
xchg
movsl
addr16
mov
pop
sub
sbb
fstps
daa
adc
loope
repnz
xchg
mov
xor
ja
cmpsb
mov
pop
xchg
sbb
je
mov
movsb
xor
xchg
aas
add
loope
mov
test
cmp
dec
fstpt
push
xor
jb
dec
out
mov
sub
mov
aas
lahf
sub
add
xorb
je
inc
loope
adc
xchg
push
sbb
pop
push
lret
mov
jns
inc
rolb
xor
sub
repnz
xchg
adc
pushf
cmp
rclb
popa
mov
pop
lahf
adcl
rclb
daa
mov
push
inc
push
cwtl
rolb
out
jg
inc
shrl
in
outsb
or
jmp
or
adc
jbe
ret
mov
xchg
ror
mov
cmp
xor
call
imul
addl
insb
push
pushf
rorl
and
cli
cli
sti
inc
fwait
push
dec
sahf
sbb
sub
js
cmp
fidivs
divl
cltd
jecxz
jle
data16
xor
xor
mov
icebp
xchg
push
popa
cld
mov
daa
mov
int3
sbb
std
mov
inc
lahf
mov
addr16
mov
ret
aam
and
js
or
sarb
sbb
icebp
aad
repnz
ds
insb
out
mov
inc
mov
ljmp
mov
outsb
fs
popf
lret
aaa
clc
lret
mov
add
daa
test
gs
outsl
rolb
popa
dec
mov
mov
fldenv
mov
sbb
or
dec
in
movsb
das
nop
je
shl
inc
inc
pusha
icebp
sti
hlt
ja
mov
inc
cs
mov
out
jmp
iret
xchg
cli
fstl
jns
sbb
mov
mov
sub
adc
push
aad
add
adc
xchg
xor
and
stc
aaa
push
xor
test
cli
popa
pop
and
lret
jg
mov
lea
sub
xchg
sbb
jno
out
repnz
cli
jle
pop
sub
dec
inc
xlat
lock
mov
lods
mov
cmp
xlat
cmpb
ljmp
jl
std
add
sti
fs
mov
mov
out
jb
mov
dec
fucom
xchg
xchg
icebp
mov
fdivl
push
push
pop
cmp
or
adc
mov
outsb
cmpsl
add
cmp
push
mov
mov
icebp
push
mov
enter
setbe
stos
jb
loope
aas
hlt
mov
fs
rcl
loopne
push
cmpl
test
cmpsl
sub
jecxz
jl
imul
in
sbb
inc
and
repnz
xchg
pop
sub
sub
rol
ss
iret
cmc
inc
nop
loopne
mov
cwtl
shll
out
and
data16
in
or
movsl
jb
and
in
jo
sti
hlt
push
dec
call
jbe
scas
fnstenv
es
in
mov
je
push
roll
cmp
aad
popa
and
sbb
mov
fyl2x
adc
sbb
lcall
cwtl
jb
daa
xor
test
mov
fidivl
out
sub
sbb
sbb
jb
xchg
fistpll
rorl
enter
push
clc
cmp
pushf
nop
push
sbb
rolb
push
xlat
adc
stc
pop
aam
lea
lds
jae
and
lahf
mov
inc
ficompl
loop
repnz
mov
outsl
leave
jge
pop
subl
fistpll
test
out
push
rcrl
mov
mov
sub
addr16
es
scas
movsb
mov
je
nop
jge
mov
jno
sbb
mov
dec
stc
dec
cmp
lcall
mov
dec
mov
mov
out
imul
push
sbb
jecxz
cmp
and
in
mov
mov
cmpsb
sbb
mov
outsb
xor
fdivl
push
frstor
cmc
cmp
ret
stos
jge
movsb
mov
fsubrl
and
jo
shrl
aam
mov
pushf
test
xchg
std
mov
aam
jecxz
xor
dec
xchg
mov
scas
xor
icebp
insl
and
xor
inc
pop
and
jb
or
push
mov
or
pop
jp
and
inc
mov
inc
jo
idiv
scas
dec
inc
jo
repz
in
dec
lahf
dec
int
in
mov
jne
mov
bound
fxch
rolb
imul
and
rcrb
mov
mov
mov
xchg
and
mov
jno
aaa
clc
jo
sub
jge
test
into
je
fidivrs
adc
adc
add
sbb
adc
sub
mov
js
icebp
out
cmp
add
jge
or
pusha
rcrl
mov
inc
popa
sbb
test
xchg
jl
pop
arpl
outsl
lret
sub
fmull
dec
out
and
pop
cld
adcl
mov
mov
cmp
or
mov
xor
push
imul
aad
dec
pop
das
mov
inc
scas
xchg
xchg
xchg
lret
adcb
out
icebp
je
fdiv
push
jg
ss
bound
sbb
xchg
dec
mov
xchg
shrl
fildl
lock
or
jl
pop
sbbb
mov
pop
and
xchg
and
sahf
test
fwait
rol
fnstsw
ja
push
cmp
xor
aad
jp,pt
sarb
xor
pop
stos
ds
aad
jl
jl
or
and
lock
ret
push
push
rorl
imul
daa
mov
outsb
mov
pop
arpl
sar
push
mov
mov
je
repz
mov
push
std
pop
push
cmp
mov
mov
mov
mov
decb
dec
add
shr
or
test
ja
and
aas
jns
jbe
mov
fdivrs
lds
inc
movsl
int
dec
shll
outsl
iret
xor
dec
outsb
mov
sti
sarb
sub
push
xchg
jno
cmp
out
adc
or
xorb
cmp
push
pop
mov
jle
and
dec
jmp
cmp
les
mov
popa
icebp
test
mov
outsl
cmpl
inc
sbb
sub
inc
stos
jl
into
call
repnz
jge
cmpsb
push
out
dec
lret
ss
movl
push
imul
pop
into
lds
pushl
and
testb
cmp
jae
jl
pop
mov
rcrl
dec
test
push
ret
repz
jne
pop
xchg
lods
inc
jno
fsubs
bound
fmuls
pop
outsb
jecxz
add
mov
xor
pusha
iret
mov
cltd
mov
pop
adc
sub
xor
xor
pop
push
enter
pop
push
hlt
pop
and
filds
nop
dec
in
push
daa
enter
movsl
out
pop
dec
sub
cs
jmp
fs
lds
jo
inc
filds
aas
jns
fiadds
push
mov
stc
or
sahf
rorl
shlb
jp
mov
sub
subl
or
enter
cmpsl
testb
push
push
lods
mov
imulb
int
and
aas
lret
das
jp
dec
mov
cmp
mov
xchg
xchg
xor
sbb
mov
mov
lahf
inc
scas
add
and
aam
or
xchg
and
and
jp
mov
mov
jecxz
mov
bound
dec
lcall
push
push
mov
cmp
xor
mov
adc
repnz
jbe
jge
xlat
imul
mov
adc
test
xor
shrl
mov
clc
lret
pop
test
lods
dec
mov
jp
iret
loope
ret
jo
scas
bound
or
ljmp
inc
push
inc
mov
jecxz
and
lods
fsts
mov
test
lods
add
cmpsl
or
out
pop
cltd
add
jno
std
popa
lcall
bound
insl
loopne
mov
cmp
aaa
out
in
push
ficomps
jle
aad
aam
popa
jmp
dec
add
xor
test
int3
cltd
hlt
sahf
cwtl
xor
cltd
lock
mov
lret
imul
test
xor
repnz
repnz
jmp
bnd
outsb
dec
ds
cmp
call
jl
jbe
push
repnz
push
lods
dec
push
inc
jns
movsb
and
pop
out
mov
inc
jne
scas
inc
add
jb
or
and
xor
in
adc
fildll
rol
push
outsb
divb
cmp
es
mov
mov
inc
or
fidivrl
adc
lods
rorb
or
push
scas
lahf
push
sti
mov
xchg
pusha
lcall
test
test
push
lock
pop
adc
test
mov
cmc
mov
xor
loop
mov
pop
adc
sub
push
lods
push
rcr
addl
test
add
mov
ds
stos
ljmp
aad
xor
push
xor
pop
leave
popa
lods
pop
lret
jne
sbb
sbb
jns
jnp
int
mov
call
pop
out
or
xor
xlat
mov
xchg
xor
lcall
js
push
add
sub
das
dec
xchg
push
mov
mov
es
je
lds
or
lods
out
xlat
sbb
test
mov
scas
dec
or
aas
lcall
xchg
cmpsb
in
mov
shr
out
enter
pop
pop
mov
arpl
add
sarb
inc
arpl
imul
xor
pop
pop
lcall
or
stc
pop
insl
mov
jno
xchg
insb
and
fistpll
std
cmp
or
xchg
test
jns
lret
movsb
popa
and
gs
xor
cmp
fimuls
and
inc
adc
shll
pop
subl
push
orl
addr16
ljmp
cmpsb
add
xor
data16
daa
loopne
push
fwait
xor
xor
add
xor
jecxz
jmp
xchg
js
aas
test
push
ja
cld
pop
inc
icebp
push
std
fisubl
mov
shrb
jmp
inc
xchg
adc
insl
mov
test
jo
adc
cmc
mov
cmp
dec
push
ds
sbb
aad
push
out
sarb
inc
dec
cltd
push
cmpsl
sbb
jmp
xchg
fmul
push
xor
xor
mov
mov
lcall
xor
jmp
stos
mov
inc
mov
pop
sbb
jno
in
pop
push
sbb
or
cmp
or
divb
and
ja
push
cmp
mov
cmp
inc
dec
adc
adc
push
mov
dec
adc
ja
push
inc
int3
mov
or
pushf
jno
cmpsb
mov
scas
pop
inc
cli
jp
popf
mov
testl
sub
jb
sti
sarb
mov
push
cmpsb
xchg
push
mov
in
sub
sahf
pandn
ds
mov
imul
js
inc
or
push
jmp
data16
pop
mov
xchg
cmc
orl
mov
sub
imul
fstp
mov
adc
xor
pop
rol
xchg
in
dec
cmp
and
fdivl
mov
into
inc
push
into
ja
addr16
das
pop
shrl
add
push
inc
and
ret
adc
bound
aad
ret
pop
lcall
in
subb
mov
mov
add
mov
pop
xor
outsl
rolb
sbb
push
dec
test
adc
sbb
mov
adc
adc
dec
sahf
pop
sahf
shrb
inc
nop
lahf
in
lods
push
and
leave
dec
jbe
and
das
adc
shll
dec
adc
scas
mov
cmc
fwait
lds
lods
lods
in
iret
fidivrl
jl
dec
fstpt
decb
pcmpeqb
fisttps
iret
outsl
test
add
xor
data16
test
enter
int
mov
push
in
pusha
decb
insl
rcrl
nop
aam
loope,pt
or
fstpl
jle
mov
mov
adc
mov
mov
js
sub
jmp
ljmp
jge
cmpb
push
int
mov
jmp
leave
xor
notl
jge
jmp
outsb
jecxz
data16
dec
add
mov
sub
ljmp
sub
pop
imul
cwtl
call
add
mov
aas
add
xchg
xchg
in
push
fwait
scas
shrl
iret
insb
ret
jb
adc
lods
adc
nop
xchg
add
sub
fs
das
mov
cli
lret
rorl
jo
and
inc
sub
loope
inc
add
xor
int3
sub
sbb
jmp
add
xchg
lods
push
jo
adc
xchg
leave
ret
daa
push
mov
and
xchg
cmp
outsb
test
inc
int
pop
mov
aam
arpl
addr16
and
pushf
push
add
xorl
fadds
or
or
imul
inc
sbb
and
lahf
aam
adc
mov
leave
lret
cmpsl
leave
mov
jne
xchg
mov
jnp
mov
sarb
lcall
iret
add
out
or
pop
arpl
inc
inc
xlat
mov
mov
sbb
add
insl
popa
cmp
pop
and
or
mov
iret
and
lods
mov
sbb
jmp
mov
sbb
mov
enter
in
fnstenv
dec
and
lea
leave
pop
xchg
jmp
jp
cli
lahf
xchg
std
bound
jle
cmp
jp
stc
cmpsl
mov
popa
insb
int
cli
inc
movsl
les
incb
mov
das
xorb
mov
out
subl
add
cmp
movsl
loope
aad
cs
in
in
gs
cmp
sbb
add
lcall
addb
mov
push
cmp
out
inc
and
cmpsb
andl
dec
mov
mov
testb
int
out
mov
and
and
imul
inc
inc
out
mov
ja
jns
push
mov
add
adcb
aam
xchg
sub
adc
into
xchg
push
push
inc
mov
insb
aam
bnd
adc
lods
add
lahf
dec
pop
rorl
lea
scas
stos
dec
xor
mov
and
xchg
sahf
mov
mov
sbb
and
jmp
mov
fwait
pop
jp
pop
test
pop
icebp
cmpsb
lods
stos
loop
lods
mov
jecxz
cmp
inc
fists
mov
adc
sbb
mov
pop
push
push
mov
or
loopne
movsb
mov
mov
jecxz
pop
popa
cwtl
shlb
push
or
jge
mov
xchg
test
xchg
push
push
je
jmp
mov
sub
test
xor
mov
in
mov
cli
out
adc
sarb
xchg
cmp
sahf
xchg
cld
push
test
icebp
loopne
dec
mov
jle
cmp
cwtl
xchg
dec
mov
xchg
movsb
xchg
pop
pop
jecxz
xchg
mov
out
or
cmp
xchg
js
inc
mov
fildll
mov
xorb
ret
scas
mov
imulb
dec
xchg
rcrb
cmp
lock
xor
stos
cld
cmc
rolb
test
sub
outsb
xor
addr16
inc
mov
sbb
cli
lcall
repnz
push
dec
aas
andb
cwtl
imul
scas
inc
cmc
mov
sbb
in
xlat
xor
je
lret
shrb
cmp
outsb
lret
or
jo
lods
insb
jle
orl
fldenv
or
nop
loope
dec
lds
mov
push
cmpsb
jo
or
ja
bound
and
repnz
mov
stos
mov
repnz
adcl
dec
pop
subl
fiadds
sub
sub
xchg
in
lret
mov
mov
mov
push
es
shrb
insl
fstl
pop
repnz
sarl
push
repnz
mov
in
xor
nop
inc
jno
or
adcl
and
inc
cmp
cwtl
lods
lea
xor
je
mov
lods
lret
call
and
out
loopne
mov
jno
push
jp
inc
imul
sub
fs
fsubl
cltd
xor
mov
shlb
jecxz
nop
pop
in
mov
cmp
dec
xchg
push
pop
mov
movsb
cs
mulb
inc
xor
mov
fs
leave
add
xor
ja
xchg
adc
sarb
movsl
cmp
je
and
clc
popf
lods
mov
dec
sti
push
sahf
fmul
add
repnz
iret
mov
cmpsl
stos
jp
in
loop
or
mov
add
js
xor
shl
iret
pop
into
pop
pop
out
sbb
mov
movsb
xchg
ret
sbb
or
lret
cmp
and
pop
cmp
and
clc
pop
jl
dec
jo
in
lods
inc
pop
xor
js
cmp
mov
scas
push
cs
in
jo
inc
lret
pop
addr16
arpl
movsb
mov
stos
shll
hlt
cli
dec
or
stos
cld
cmp
push
pop
inc
pop
fidivl
xor
sbb
cmp
rcrb
testl
push
add
mov
or
inc
jmp
ret
and
jecxz
jbe
ss
addr16
pushf
pop
lcall
mov
push
inc
leave
sarl
lret
sub
xor
xchg
cmp
aas
push
or
fwait
dec
push
push
gs
mov
into
sub
sub
andb
inc
pop
hlt
fldenv
ss
iret
adc
push
icebp
xchg
arpl
sbb
push
test
push
shrl
sbb
jno
pop
adc
mov
xor
push
out
sub
outsl
xchg
cmp
add
int3
xor
lods
sarl
adc
call
mov
js
lods
movsb
loope
cmp
enter
das
cmp
ja
das
lret
orb
push
es
fstps
jne
mov
aam
cs
cmp
loopne
cmpsb
lods
adc
jg
mov
xor
dec
addb
mov
cmpsl
cmp
scas
fnstcw
push
hlt
jle
dec
jae
push
out
sahf
mov
out
out
icebp
xchg
inc
sbb
movsb
shlb
pusha
cs
inc
sbb
mov
and
push
fists
insl
jne
mov
jae
push
xor
mul
and
orl
cwtl
pop
pop
std
jle
aam
testl
adc
and
das
rcr
and
repz
pop
pop
int3
or
ja
mov
xchg
mov
rcl
inc
mov
push
cmc
mov
cmc
out
adc
mov
add
sbb
add
adc
mov
inc
imul
cmc
stos
pop
loopne
filds
ds
daa
mov
xchg
adc
pusha
adc
mov
push
mov
mov
ret
inc
fistpl
add
jecxz
not
add
pop
fistps
mov
pop
loop
cmp
sbb
scas
mov
push
jo
int3
cs
test
ret
adc
mov
int3
xchg
dec
push
mov
fsubrp
scas
sbb
push
mov
stc
or
mov
fldenv
xchg
in
sarb
shlb
mov
or
icebp
xor
rolb
mov
adc
add
fwait
cs
outsb
push
ljmp
adc
add
leave
and
iret
aas
nop
in
dec
xor
leave
aam
insb
push
lcall
jne
push
clc
sub
cmpsb
jnp
mov
ss
fwait
adcl
or
leave
pop
and
leave
push
jo
pop
mov
push
bound
ljmp
mov
mov
cltd
jecxz
push
lahf
pop
cmovs
xor
add
imul
out
sub
sbb
daa
pop
movsl
insb
or
je
bound
or
jmp
cmpsl
push
sbb
test
pop
jmp
dec
push
add
xlat
pop
lret
add
fwait
mov
test
rol
push
insb
adc
bound
dec
jge
xchg
fistpl
clc
dec
jle
pop
mov
je
ja
lcall
jbe
leave
and
in
arpl
push
enter
repz
and
iret
mov
movsb
sbb
sub
xchg
pushf
lock
sub
add
je
xchg
fs
or
pop
cmp
mov
pop
cmp
sub
pop
jl
pop
cs
shlb
aas
lds
insl
test
mov
push
testb
arpl
inc
adc
je
or
cmp
lock
hlt
mov
stos
or
jae
lock
lcall
fsubr
fistpl
and
sbb
jmp
inc
jnp
test
shl
pushf
in
cld
adc
cmpl
out
stos
aam
lcall
jnp
ljmp
sahf
xchg
int3
bound
sub
cs
arpl
inc
sub
in
sub
adcl
insl
fwait
sahf
mov
and
and
test
sub
hlt
inc
mov
xor
loopne
fcoml
cmpl
test
cmp
cmp
das
xchg
jbe
xor
es
mov
aas
fiaddl
imul
addr16
imul
hlt
mov
idiv
fs
lret
leave
xchg
out
mov
lcall
loope
mov
movsb
aas
popf
pusha
jno
das
xor
mov
inc
in
loop
mov
push
ja
push
in
xchg
and
and
divb
repnz
mov
adc
mov
jecxz
jo
inc
fistpl
cmc
adc
les
xchg
push
movsl
or
cmpsl
fsubrp
push
xchg
sub
push
in
jl
test
mov
cmpsb
js
mov
fmull
je
push
mov
pop
push
cwtl
stos
mov
or
mov
popf
xor
sbb
and
mov
push
scas
mov
jmp
movnti
add
dec
rcrb
sub
xchg
scas
or
xor
mov
and
ret
sbb
in
mov
js
xor
pop
adc
or
xchg
cwtl
pop
cmpxchg
adc
addl
outsb
shll
xor
mov
or
pop
les
movsb
pop
push
add
jnp
and
out
sbb
sbb
and
test
je
cld
mov
and
sti
adc
lods
mov
add
test
xlat
adc
lds
pushf
add
ret
cmp
imul
outsl
in
fwait
push
or
push
mov
mov
cli
and
xor
aam
out
ss
push
inc
daa
cld
and
mov
mov
inc
inc
adcb
and
adc
or
test
push
rdtsc
add
jg
out
fwait
popa
stos
imul
out
push
rcrl
movsb
outsl
xchg
into
pop
pop
nop
cmp
ds
arpl
adc
jns
mov
lahf
loop
or
pop
jmp
daa
pop
or
inc
test
ret
or
sub
and
mov
push
xor
xchg
and
out
arpl
jae
pop
pushf
xor
pusha
lahf
inc
mov
or
repnz
push
or
or
inc
test
xor
mov
leave
push
mov
cld
jmp
ljmp
in
and
test
lea
out
inc
sub
xchg
daa
or
into
or
pop
inc
orb
mov
insl
mov
adc
test
inc
push
cmp
mov
fstpl
sub
xchg
inc
js
xlat
push
ret
xor
mov
mov
mov
mov
ror
hlt
sarl
adc
outsb
ljmp
sbb
lret
mov
lcall
cs
movsl
mov
mov
stc
outsb
dec
repnz
xchg
data16
and
int3
mov
hlt
lea
xchg
ficomps
mov
mov
xor
in
dec
popf
pop
mov
fildl
insb
leave
push
std
jo
loopne
jecxz
in
or
mov
std
mov
shll
xor
filds
stos
je
mov
pop
mov
xchg
add
pop
xchg
mov
mov
jmp
push
repnz
pop
jmp
inc
hlt
mov
add
cld
and
inc
pinsrw
xor
or
pop
in
in
push
test
push
sbb
jns
popl
sub
cs
mov
push
ss
adc
adc
push
loopne
js
and
sub
dec
cmp
push
insb
clc
shlb
ja
jbe
xchg
pop
bound
sub
sub
out
sbb
dec
popa
sarb
imul
dec
test
inc
mov
mov
dec
aad
not
push
test
mov
add
std
add
ljmp
dec
mov
outsb
sahf
jbe
adc
xsave
aaa
cmp
pop
xchg
xchg
outsb
ja
leave
pop
jl
in
jnp
in
gs
push
lret
inc
inc
add
push
out
adc
mov
adc
loope
mov
dec
dec
pop
lahf
stc
aaa
jle
push
jmp
inc
inc
and
in
fisubl
xlat
push
dec
jno
xchg
imul
les
and
xor
cli
sahf
mov
mov
push
jecxz
stc
xchg
cmp
rcrb
mov
lret
inc
ja
push
or
cmp
pop
das
mov
jge
sbb
mov
jne
sub
mov
sub
cmpsl
movsl
leave
adc
int3
imull
in
test
aad
sbb
or
cltd
sub
xchg
in
push
inc
jbe
data16
mov
hlt
fnstenv
sub
jg
jg
push
stos
dec
loopne
pushf
aaa
cld
aam
in
fs
mov
dec
xchg
and
mov
mov
movsl
insb
scas
push
fdivl
xchg
add
mov
dec
int
stc
inc
jecxz
in
xchg
adc
dec
mov
insb
jnp
in
and
xchg
outsb
in
bnd
mov
push
mov
loopne
testb
cltd
movsb
cmpl
sub
sbb
jge
add
inc
push
xchg
push
rcr
sub
inc
imul
inc
clc
mov
aad
mov
into
dec
pop
add
test
pop
cmp
or
in
gs
cs
or
jp
aam
cmpsl
mov
xchg
enter
cwtl
or
and
rolb
lcall
inc
mov
hlt
dec
xor
cltd
pop
js
jecxz
jle
dec
push
jno
mov
jg
pop
in
pop
dec
out
mov
test
push
leave
into
into
jno
ja
push
jne
push
lret
lea
dec
add
lahf
in
mov
repz
cmp
xlat
mov
aas
push
cmp
adc
pop
lss
sub
xlat
sbb
jbe
cltd
sub
push
paddusb
xchg
fnstsw
mov
bound
jp
fistps
sub
cld
mov
xchg
int3
push
ds
add
sbbl
loop
or
imul
jmp
imul
mov
cs
clts
mov
mov
divl
cmp
adc
cmpsl
jle
mov
outsb
sub
cmp
sub
flds
dec
sbb
mov
and
fcoms
ror
loopne
fnstenv
out
enter
push
nop
hlt
call
adc
fcmovnb
jecxz
fildl
cmp
push
or
ljmp
rcll
wrmsr
inc
inc
jle
jb
aad
jnp
push
movsl
mov
out
faddl
lods
cs
jle
in
cmp
xchg
test
dec
cmp
pop
adcb
lahf
jl
jae
pop
mov
movb
dec
aaa
sub
cltd
fcoms
sarb
push
lock
std
or
push
xor
xchg
rep
jmp
mov
aad
rorb
iret
cmpsb
sub
xor
xor
cltd
or
lods
mov
test
ret
std
mov
cmc
and
or
fs
js
addr16
sbb
adc
jo
push
inc
fcmovnu
sub
cwtl
fnstenv
xchg
lds
pop
aad
stc
in
sub
add
mov
sbb
pop
pop
or
cmpsb
test
mov
insb
xchg
add
popa
push
pop
push
add
mov
aam
inc
es
leave
adcb
fmul
dec
ss
inc
xor
dec
dec
cmp
push
nop
xchg
cmp
xor
clc
xor
data16
mov
ret
jae
jb
addr16
bound
aaa
mov
aam
jne
mov
cmp
outsl
mov
fdivrl
gs
sbb
inc
mov
loope
adc
insl
sbb
shlb
stos
add
jns
std
jl
mov
adc
shll
bound
push
add
mov
out
cmc
push
pop
pop
push
sub
lds
aad
dec
sbb
hlt
cmc
aas
cmpsb
stos
pop
xor
pop
cmpsl
pop
and
divb
clc
cmp
lea
sbb
mov
lods
inc
push
sbb
test
aaa
mov
sub
ror
push
stc
popa
mov
in
mov
xor
ds
and
cmp
pop
sbb
shl
enter
stos
jg
or
gs
push
xorl
mov
cmpsl
lea
rcrl
push
lea
rcrb
inc
sarb
jmp
sbb
je
jge
or
inc
lds
pop
int
add
fists
js
lds
mov
lret
vmptrst
clc
mov
aam
or
adc
inc
pop
xchg
fidivrs
pop
inc
out
cld
add
push
cmpb
adc
jl
aad
xchg
adc
pop
loope
xchg
fisubrl
push
xchg
mov
xchg
rorb
dec
cltd
sub
jmp
xchg
sub
int3
cmp
xor
iret
jl
and
lods
adc
mov
jge
pop
sub
and
das
dec
pop
js
cltd
cmp
arpl
aas
aas
into
xchg
or
inc
jecxz
lahf
cmp
les
xlat
push
outsl
data16
dec
cltd
in
mov
into
xchg
xchg
inc
dec
pop
mov
jmp
aam
adc
and
out
hlt
mov
je
and
ljmp
xchg
movsb
push
mov
pop
fstpt
popl
mov
jl
orl
shrb
sbb
adc
and
jmp
leave
es
xchg
xor
jp
mov
push
in
or
mov
cmp
ret
shl
xor
xlat
and
ss
add
fs
push
or
and
and
push
xchg
cmp
xchg
in
push
lret
pop
ss
add
jnp
sub
jmp
cmpsl
add
push
adc
dec
xchg
in
mov
jno
mov
push
pop
push
out
inc
push
hlt
add
jo
cld
gs
pushf
xchg
and
cs
jae
aad
and
mov
xchg
pop
arpl
lret
push
pop
inc
sti
or
mov
gs
mov
push
jg
inc
adc
shll
test
and
mov
sbb
sub
int
sbb
add
fnstenv
push
dec
cmpsb
push
test
push
xlat
adc
push
shrl
inc
push
shrl
ret
ds
sbb
mov
mov
out
mov
cmp
cmpsl
out
inc
lret
aas
rolb
push
sub
pop
and
push
sub
mov
scas
mov
mov
cltd
mov
cmpsb
mov
bound
jg
mov
and
pop
data16
add
test
dec
pop
andb
std
fcmovnbe
gs
xchg
push
xor
in
rorl
cmp
ret
mov
add
icebp
sahf
sbb
sbb
roll
out
mov
dec
stc
movaps
call
push
lret
js
std
shrl
mov
sub
add
out
insl
xor
je
dec
dec
mov
imull
cmp
shr
insb
lret
sahf
test
xchg
mov
adc
push
adc
rcrb
das
or
lods
in
pop
cli
out
cltd
test
inc
int3
lock
mov
sbb
inc
xchg
nop
fnstsw
repz
mov
xchg
jne
sub
dec
adc
push
xchg
mov
mov
dec
jb
adc
jmp
out
and
and
insb
andb
mov
nop
mov
clc
aam
pop
jns
and
mov
xlat
icebp
mov
les
leave
sbb
adc
int
and
repnz
test
mov
push
mov
sbb
lds
roll
sub
push
aas
notb
test
fisttpl
frstor
mov
outsl
xchg
cmpsb
test
fistpl
sub
pop
into
lahf
sahf
aam
add
jne
sub
test
push
mov
lock
cld
sub
mov
popa
pusha
test
stc
add
out
mov
rclb
loopne
add
cltd
cli
dec
mov
pop
sbb
das
push
fdivrs
jp
and
cld
in
test
lret
push
xor
xor
jmp
fistps
fwait
movb
and
mov
insb
leave
mov
aaa
icebp
sub
inc
xchg
adc
nop
dec
test
or
sbb
jmp
jne
sarb
and
xchg
mov
dec
mov
out
dec
js
jno
push
jns
ljmp
add
push
add
push
out
aad
mov
mov
into
mov
sbb
outsb
lret
aam
jp
or
fsubrs
mov
icebp
mov
cmp
mov
dec
fs
xchg
dec
clc
jg
idivb
test
and
repnz
dec
cmp
cmp
jle
popf
cltd
mov
xor
jmp
fnstenv
int3
shr
outsb
add
ucomiss
scas
hlt
movsl
push
popf
cwtl
jbe
data16
icebp
dec
shrb
in
ja
push
cwtl
pop
out
add
pop
out
push
clc
and
inc
addr16
js
out
sbb
popa
push
pop
jge
nop
lods
lods
movsb
mov
pop
lret
cmp
xchg
daa
aad
cmp
mov
sbbb
jo
adc
mov
pop
fcompl
or
adc
sub
or
addr16
sbb
iret
cwtl
sbb
xchg
add
ja
mov
pop
add
test
or
xor
in
ja
popf
mov
jns
fidivs
mov
inc
jno
lock
dec
cmp
ljmp
call
popf
sbb
daa
fisubrl
xchg
orb
dec
pusha
dec
inc
pop
outsl
sbb
lods
loopnew
fs
test
sub
popf
lcall
incl
aaa
shrl
mov
jo
sub
fsubs
mov
jae
mov
mov
dec
clc
dec
loop
cld
sbb
inc
push
out
mov
adc
shlb
add
xchg
int
shll
out
lds
mov
out
jno
in
and
push
js
mov
inc
ja
call
jmp
jbe
dec
pop
fiaddl
jmp
pop
shl
lds
push
pushf
sbb
out
and
add
daa
into
xchg
xlat
test
aad
cltd
ljmp
push
in
sub
mov
xchg
pop
rcr
out
test
test
pusha
je
rorl
out
shll
fwait
lods
cmp
adc
insl
pop
cs
add
adc
jg
in
mov
inc
in
mov
hlt
mov
mov
or
jmp
xor
pop
or
ret
xchg
mov
or
jns
xchg
loop
jmp
stos
fisubrl
xchg
addr16
push
stos
cmp
sbb
and
out
xor
mov
sbb
push
das
int3
or
test
dec
pop
pop
push
arpl
iret
push
xor
xchg
cmpsb
or
jnp
jge
fists
dec
sbb
call
mov
arpl
cmp
out
outsb
pusha
outsb
call
sub
cmpsb
scas
or
loop
clc
popl
cmp
nop
or
xchg
mov
jne
fmuls
inc
scas
cli
loop
out
xor
adc
and
call
aaa
js
mov
xlat
in
lret
push
add
xor
in
pop
movsb
jmp
mov
and
jne
shlb
pop
pop
adc
stos
xor
sub
sbb
cmpsl
ljmp
test
xchg
roll
cs
jno
call
testl
xor
jmp
rcl
in
and
xor
xor
xor
fcoms
mov
and
push
clc
cmp
loopne
xchg
movb
add
xchg
js
xchg
mov
and
stos
clc
mov
mov
dec
sub
std
es
jbe
sti
pop
aam
decb
int3
mov
cmp
mov
movsb
insb
mov
insl
cmpb
adc
ss
imul
jl
push
jno
movb
insl
icebp
jl
in
call
aaa
dec
xchg
pop
testl
mov
jp
pop
xorb
sub
fstps
jl
repnz
rorb
cli
add
pop
jbe
xchg
xchg
loopne
jg
xlat
mov
sbb
push
push
stos
ljmp
daa
out
sahf
sti
je
jae
xchg
mov
js
outsb
adc
lods
sbb
xor
jge
mov
into
dec
leave
stos
pushf
mov
fwait
add
movsl
test
int3
fwait
stos
icebp
dec
dec
mov
and
inc
test
push
aad
lahf
xor
idivb
xor
mov
enter
int3
mov
xchg
nop
imul
dec
push
or
fnstcw
jle
enter
popa
xor
and
popa
sub
or
xchg
stos
mov
push
push
cwtl
cmpsl
jl
pop
mov
inc
jecxz
pop
rcll
sub
sub
es
call
or
jl
push
iret
pushf
mov
or
mov
sub
jmp
add
xchg
in
mov
xchg
mov
mov
sub
jnp
loopne
in
cmc
addr16
lea
repnz
frstor
and
pop
mov
mov
data16
pop
mov
hlt
mov
orl
mov
jnp
cmp
fdivp
jbe
in
jno
testb
mov
insb
clc
and
pause
inc
flds
xchg
push
in
lret
xor
pop
in
or
ret
aad
fisubrl
and
mov
inc
rorl
hlt
jne
mov
lret
mov
leave
xchg
jmp
mov
repnz
push
sbb
lahf
jbe
leave
and
and
pop
stos
test
in
leave
xor
popa
xchg
inc
in
sbb
les
hlt
les
sbb
addb
adc
aam
xor
mov
stc
xor
or
and
insb
clc
nop
inc
rcll
cmp
pop
iret
clc
xor
pop
test
shll
pop
jmp
inc
sbb
std
stc
mov
mov
adc
cmp
mov
cwtl
or
jmp
sbb
xchg
aas
sub
and
pushf
cmpsl
gs
fisubrs
repnz
sti
call
mov
adc
push
loop
stos
test
push
ret
jmp
adc
xor
scas
popf
push
andl
mov
gs
addr16
xchg
xchg
pop
cmp
mov
xchg
xor
rorb
add
inc
inc
and
lea
hlt
mov
adc
fyl2xp1
test
cli
mov
xor
xlat
jmp
and
imul
mov
mov
or
sbb
add
je
xchg
scas
pusha
mov
adc
jmp
jne
lock
cmp
dec
cld
adc
pusha
fdivl
lret
fs
ret
push
vpmacswd
and
sub
mov
push
mov
mov
shrb
pushf
xor
mov
sub
mov
pop
push
mov
jb
shl
in
lea
in
mov
imul
ja
xor
mov
xchg
clc
jmp
gs
icebp
fmull
ja
mov
in
dec
dec
inc
or
vaddss
shrb
xor
mov
inc
xchg
cmp
cmpsl
pushf
adc
xchg
in
int
or
xchg
mov
pop
hlt
cmpsb
std
or
lret
sarb
pop
test
in
cwtl
scas
mov
inc
int
outsl
add
jne
aas
push
cmp
aaa
adc
loope
push
lret
dec
mov
dec
insb
imul
mov
stc
xchg
mov
inc
into
orl
aas
shll
mov
es
xchg
jg
test
lcall
data16
pop
pop
xchg
test
add
xchg
test
dec
sti
addr16
sbb
push
fs
orb
jle
adcl
jo
dec
popf
seta
push
push
inc
cmp
outsl
or
popa
outsl
dec
mov
xor
mov
sbb
scas
push
mov
sbb
repnz
push
cmp
mov
insb
aam
sbb
shlb
pop
mov
in
jne
or
sahf
fisttpl
and
mov
cltd
std
pop
fdivr
xchg
insl
pop
dec
sub
cmpsb
sub
jp
inc
daa
fcoms
aam
xor
aad
scas
push
xchg
mov
in
aad
push
popa
incl
ljmp
lcall
sti
dec
dec
repnz
jle
mov
push
or
mov
lret
cwtl
dec
xor
rorl
int
leave
popa
mov
cmp
pop
pop
aad
daa
inc
fsubrl
testb
inc
or
pop
daa
out
jne
xor
pop
stos
decl
enter
ret
loope
push
xchg
mov
sbb
xchg
jmp
push
push
test
test
movsb
fwait
bound
jb
sti
orb
pop
jge
gs
jg
fistl
popf
xchg
rol
mov
cltd
cmc
jp
stos
sti
jle
loope
mov
adc
fcoms
dec
popa
mov
shrl
int3
sub
shrb
adc
xchg
les
imul
insb
aam
cltd
pop
out
shrb
jmp
inc
test
pop
mov
sbb
jns
and
jb
sub
jo
xor
and
sub
inc
cld
mov
lret
sbb
insb
mov
push
loop
xor
and
scas
rolb
mov
stc
add
dec
pop
pop
cmp
cmp
add
je
and
popa
mov
push
mov
jb
cli
push
insl
das
das
fs
mov
add
pop
adc
xchg
fisubl
mov
pushf
cmp
adc
pop
je
pop
sbb
es
jecxz
dec
sub
shrb
sahf
mov
mov
push
bound
fwait
mov
stos
out
mov
pop
jmp
movsl
sbb
cmp
iret
loopne
push
into
push
mov
dec
jg
cmp
pop
fdivrs
lds
movb
outsl
ljmp
aaa
orl
dec
sbb
lea
lret
test
sbb
xchg
add
dec
add
push
in
rcrl
out
push
pop
daa
add
cld
mov
or
insl
add
sub
fwait
lock
sub
stos
inc
mov
fmulp
jb
mov
push
nop
push
cmp
fwait
jnp
dec
mov
cli
mov
ret
ficoms
add
loopne
imul
push
lods
aam
fdivp
mov
mov
ds
adc
mov
andb
into
or
fwait
push
movsl
dec
movsl
jne
fisttpl
mov
lret
xorb
sub
loop
fidivs
mov
push
dec
xchg
psubusw
sub
into
mov
pop
arpl
out
ret
adc
dec
js
dec
xchg
sub
mov
test
dec
andb
push
add
mov
push
mov
call
ljmp
cltd
mov
and
jnp
out
or
aad
jecxz
insl
lock
jae
addb
pushf
test
stos
shll
push
stos
insb
int
pop
xchg
sub
xor
sbb
mov
and
pop
mov
jg
dec
sbb
pop
xchg
iret
pop
mov
movsb
lock
or
inc
ja
dec
aad
jnp
jge
mov
ds
sub
mov
xor
cli
mov
mov
push
cmp
sbb
dec
out
mov
mov
lcall
pushl
push
mov
test
push
mov
rclb
mov
test
int
cs
dec
iret
adc
pusha
push
push
inc
dec
inc
outsl
or
int
pop
jp
mov
mov
add
ss
scas
xchg
mov
push
in
inc
icebp
sub
mov
into
inc
fisttpl
sub
cmpb
ds
hlt
jle
in
dec
and
jo
mov
add
and
xchg
sbb
sub
and
adc
mov
ret
fidivrs
int3
mov
in
lcall
dec
dec
cmp
ja
stos
cmp
std
outsb
mov
outsl
jmp
mov
das
pushf
xor
pop
jnp
adc
ret
inc
stos
and
sti
fsub
nop
push
mov
in
mov
and
gs
inc
bound
sbb
sub
or
aaa
lcall
pop
mov
ds
loope
mov
mov
out
xchg
mov
out
jle
and
pop
xor
call
rcrb
mov
fstpt
and
sbb
sub
jmp
jl
and
sahf
test
inc
sti
jmp
xlat
stos
or
loop
repz
mov
enter
sti
ljmp
mov
xchg
lea
push
test
mov
adc
pusha
pop
sub
dec
push
ja
inc
push
pop
cmp
inc
mov
inc
add
dec
and
aad
mov
and
incl
mov
mov
sub
rcr
mov
outsb
push
add
es
xor
fsubrs
int3
jnp
add
sbb
jp
dec
mov
push
shl
and
xchg
push
xor
notb
sub
test
hlt
icebp
out
iret
sarb
cmp
mov
nop
mov
addr16
imul
cmc
cmp
pop
fstl
pop
sti
outsl
pop
rol
sub
cli
aas
or
lods
pop
mov
mov
iret
mov
dec
sbb
add
cmpsb
mov
push
add
loop
and
mov
mov
mov
cmp
pop
sbb
mov
xchg
or
cli
repz
inc
inc
pusha
xchg
sbb
movsl
inc
xchg
sbb
lea
mov
mov
xor
call
dec
pop
pop
sub
lret
js
ljmp
je
xor
pavgw
ljmp
xchg
pop
push
clc
das
xor
fsubs
popf
scas
jno
int
xchg
mov
loope
add
fsubp
push
outsb
mov
mov
lret
in
mov
or
aaa
lods
sarl
rcll
stos
adc
lods
in
clc
cmp
insl
xlat
pushf
idivb
mov
dec
repz
xor
pop
adc
cld
xor
ret
rol
ss
add
add
daa
ljmp
push
cs
pusha
frstor
xchg
adc
paddw
dec
std
cmpl
loopne
or
subb
fmulp
and
lret
xchg
gs
shll
mov
xlat
not
and
push
mov
stos
test
jg
dec
inc
jb
je
add
popa
jne
xchg
push
mov
cmpsb
jnp
pop
fiaddl
in
mov
cli
aas
sub
jmp
ds
call
xor
xchg
out
or
bound
mov
dec
mov
and
mov
and
mov
and
sub
adc
daa
lahf
rorb
fdivr
das
or
sub
pop
int3
pop
add
pop
das
jge
subps
jno
jg
sti
mov
ss
mov
jge
aam
scas
imul
in
sub
sub
das
ljmp
push
mov
test
pop
pushf
cmp
popl
cld
jmp
fstpl
cs
inc
rclb
je
adcl
push
in
sub
adc
fdivl
lods
sbb
sub
mov
xor
cmp
fstpl
loop
xor
xchg
pusha
jecxz
outsl
or
push
aad
in
mov
out
lods
mov
fwait
mov
cmp
clc
mov
jnp
sbb
push
in
test
jo
idiv
movsl
cmp
hlt
dec
cmp
mov
mov
and
scas
or
clc
scas
sahf
xchg
fwait
mov
mov
xlat
cmc
loop
roll
in
push
mov
pop
les
lret
jnp
mov
xchg
xchg
inc
and
pop
lock
hlt
xchg
mov
fiaddl
add
sbb
jne
mov
clc
cmp
rcr
jns
push
jb
xor
es
popa
data16
cmc
jno
cmpsl
and
daa
push
push
jbe
dec
pop
and
mov
cmpsb
jecxz
pop
stc
neg
movsl
inc
call
sbb
pop
int3
cld
movb
mov
das
jg
add
movsl
fcompl
xchg
cmp
mov
inc
adc
lds
and
xchg
mov
dec
pop
dec
imul
aad
int3
je
push
loopne
insb
sub
or
xor
lods
cmpsb
add
fists
inc
idivb
mov
arpl
aas
cmp
cmpsb
cmp
pop
push
out
mov
xchg
pop
test
int
ret
jb
xchg
adc
imul
xor
inc
std
fisttpll
xor
push
es
dec
inc
sub
add
jbe
cmp
cmpsl
cmp
add
into
and
jae
xchg
sbb
pop
gs
iret
jae
push
jp
mov
sbb
sbb
mov
jl
lods
loopne
mov
loope
fwait
in
fistpl
inc
mov
pop
jmp
aaa
and
fs
addr16
inc
xchg
nop
add
cmp
pop
jbe
out
mov
scas
inc
inc
and
lods
je
adc
pop
addl
lahf
jbe
and
mov
lea
frstor
outsl
out
lea
push
mov
outsl
shll
dec
push
in
and
jno
adc
out
and
hlt
inc
mov
push
mul
cld
push
test
pushf
gs
lock
ljmp
cmp
std
fbld
mov
stos
cmc
and
pushf
cld
inc
fwait
or
sbb
and
loop
mov
add
jecxz
leave
out
pop
xor
into
shrl
mov
sub
cmp
test
xchg
mov
adc
outsl
ja
into
enter
icebp
mov
fwait
stc
jge
in
pusha
or
dec
adc
adc
test
sarb
cwtl
enter
fmul
ljmp
add
add
jle
loope
add
mov
jbe
imul
inc
pop
or
mov
scas
or
sub
pop
and
test
push
sub
cli
push
fs
frstor
xchg
xor
popl
add
clc
lret
sub
je
mov
push
or
xorb
call
add
xlat
inc
jge
sahf
dec
test
out
aaa
or
sub
xor
xor
jp
icebp
or
sbb
pop
inc
mov
dec
xor
cmpsl
dec
insb
bound
in
int
test
scas
add
out
repz
mov
sub
pop
sub
divb
sub
mov
mov
xor
popa
xchg
icebp
and
push
xchg
mov
and
jne
rol
repz
push
adc
cltd
out
pop
out
dec
jmp
inc
push
cmp
sbb
arpl
ja
push
pusha
and
add
in
dec
loope
movsb
rcll
clc
xchg
sbb
mov
inc
dec
xchg
cmpb
lret
stos
lret
enter
test
sbb
xchg
sub
iret
add
adc
test
sbb
sarb
pop
xor
xor
mov
test
xchg
jae
stos
popf
nop
int3
into
mov
push
test
cmc
jae
or
aas
xor
dec
out
push
in
xlat
xchg
in
push
jns
sub
and
xchg
sub
pmuludq
outsb
pop
lds
scas
sub
mov
dec
xor
push
test
and
dec
ds
push
mov
inc
inc
mov
jl
and
mov
mov
outsb
push
lods
insl
pop
cltd
pushf
mov
dec
lahf
mov
mov
mov
jp
clc
je
dec
out
dec
pop
mov
xchg
add
xchg
test
jo
add
xchg
xchg
mov
rclb
jp
cmp
movb
insb
mov
adc
scas
push
sub
das
insb
jl
movsl
jecxz
call
test
nop
cmp
addr16
jmp
mov
aaa
xor
adc
loope
mov
xor
mov
mov
mov
inc
lods
mov
pop
jo
push
in
cltd
jmp
fcmovnb
aad
das
mov
or
pop
inc
jno
ss
jg
in
test
into
addb
insb
jns
cwtl
and
sub
dec
pop
dec
xchg
stos
call
push
mov
sahf
dec
mov
pushf
dec
insb
enter
daa
xorb
flds
enter
and
or
jno
pop
loope
adc
insb
add
cmp
push
xchg
fbstp
ljmp
sahf
gs
mov
dec
test
and
push
mov
sub
aas
in
xchg
pushf
cld
lahf
into
out
sub
mov
or
outsl
lods
xlat
pop
sub
sti
xchg
and
test
add
xor
pop
pop
jo
ret
lods
xchg
jmp
jno
sbb
mov
sub
push
dec
stc
dec
and
les
lcall
shll
mov
lods
and
outsb
xor
inc
mov
jo
enter
jmp
inc
jl
imul
or
push
xor
mov
shll
emms
inc
adc
negl
cmpsl
and
xor
jbe
cwtl
mov
lcall
imull
out
lcall
int
jmp
pushf
fisubl
stos
stos
cmp
scas
or
jl
adc
insl
loop
popa
dec
add
pop
dec
inc
add
lcall
into
pop
xchg
call
pop
mov
aaa
cltd
fwait
push
dec
jmp
stc
test
inc
clc
xchg
xchg
and
sbb
popa
rorb
ja
or
repz
xor
adc
lock
movsb
and
push
imul
adc
mov
sti
aam
out
sub
shlb
rclb
lcall
mov
imul
sbb
ss
push
jmp
aad
cmpsb
lahf
cs
jns
sti
xchg
or
mov
cld
pop
popa
fmul
popa
or
sti
movsl
xchg
add
lcall
les
lret
mov
xchg
cltd
xchg
lock
jns
jp
in
or
or
popf
outsb
stos
addr16
xchg
int
and
sub
rcll
dec
int
jnp
jo
cltd
xorl
int
loope
insb
daa
idiv
push
pop
cmp
cmpsl
dec
std
hlt
push
iret
and
add
push
adc
mov
mov
fidivrl
push
jnp
push
xchg
fwait
fwait
pop
stc
push
cli
xchg
push
cmp
stos
jb
test
pxor
stc
cld
sahf
fisubl
loop
xor
inc
dec
push
or
js
out
addr16
push
insb
add
cmpsb
mov
xorb
cli
in
test
xchg
or
xor
out
mov
mov
xchg
lret
fldenv
pop
or
lock
mov
lock
sub
test
les
xor
insb
rolb
or
xchg
sbb
gs
cmp
mov
in
or
dec
pop
fsubs
adc
ja
mov
hlt
xor
fstl
cltd
dec
stos
aaa
insb
test
ror
loope
ljmp
push
addr16
jp
cltd
push
adc
jge
lock
cli
out
jp
add
adc
and
cld
sub
push
adc
addr16
xchg
loop
and
lods
stos
xor
arpl
lods
inc
test
adc
adc
xchg
clc
xlat
lcall
mov
or
push
jmp
push
mov
adc
ljmp
lcall
sbb
inc
xchg
daa
js
fstpt
inc
aad
mov
pop
mov
rorl
pop
jl
dec
pop
scas
movsl
icebp
fwait
sbb
mov
jg
sub
cld
scas
insl
xchg
adc
mov
dec
sahf
or
dec
imul
jmp
xor
xchg
inc
dec
lock
cltd
frstor
jmp
xor
loope
testl
sub
jne
adc
mov
cmp
hlt
adc
cmpsl
repnz
rcr
in
mov
repz
mov
rcrl
mov
push
adc
pop
in
cmp
stc
adc
jl
stos
rolb
jne
popf
mov
xchg
push
xchg
push
out
or
pusha
mov
pusha
lea
mov
mov
push
mov
gs
sbb
cmpsb
push
mov
xchg
lea
mov
sbb
sbbb
fldl
cmpps
das
dec
dec
test
inc
out
and
mov
andl
xchg
add
ret
mov
scas
pop
dec
addl
cmp
mov
jb
cli
jmp
xor
cli
in
mov
bound
inc
lahf
sbb
cltd
cmp
lock
mov
imul
cmp
mov
sbb
pop
push
fstpt
xor
in
fmul
outsb
hlt
adc
aas
rcr
dec
add
mov
or
fwait
cmp
adc
xor
ss
in
cmovb
dec
movntq
loop
imul
iret
cmp
repz
inc
fisubs
ret
xlat
movsl
out
pop
cwtl
pop
das
ljmp
hlt
movsl
fdivr
in
rcrl
sbb
pop
sub
jmp
dec
jmp
sbb
push
je
mov
adc
push
sub
imul
xchg
add
mov
in
test
lock
outsl
dec
xchg
push
xlat
pusha
pop
sub
call
mov
dec
or
push
xor
scas
mov
xchg
fprem1
jge
jne
insl
xchg
pushf
push
out
sbb
push
cld
bound
mov
jge
pop
js
lcall
sbb
push
imul
mov
xor
nop
mov
cmp
out
or
andl
je
cmpsl
imull
inc
sbb
mov
sbb
data16
pop
xor
push
xor
sub
scas
sub
mov
ret
jbe
xchg
pop
mov
enter
in
inc
xorb
stos
fwait
mov
cltd
inc
and
inc
adc
dec
out
sbb
mov
popa
or
fistpll
iret
push
dec
xor
test
lock
mov
pop
loop
inc
movsb
clc
orb
pop
dec
loope
jb
rol
mov
fbstp
mov
sub
pop
cs
dec
sarl
push
mov
dec
mov
jb
inc
cltd
mov
scas
inc
cmp
stc
call
aad
push
jno
adc
sub
rcll
arpl
xchg
lret
cmp
xchg
mov
mov
mov
lods
jb
and
mov
push
xchg
inc
sbb
xchg
scas
sub
prefetcht0
popa
scas
mov
iret
fistpl
das
mov
in
cmpsb
jp
lret
pop
lods
mov
jl
fbld
add
push
js
sbb
movsb
popa
jo
xchg
adc
fsincos
adc
loope
cmp
sbb
daa
movsl
sub
dec
xor
es
jo
push
or
add
in
les
stos
mov
mov
adc
movsb
xchg
leave
fsubl
push
dec
pop
mov
pushf
popa
mov
dec
les
enter
sarl
mov
mov
mov
sub
add
jmp
bound
fdivl
mov
aad
cltd
sbb
fbstp
jns
arpl
mov
pop
and
jg
in
dec
push
fistl
bound
mov
inc
fcom
mov
add
iret
mov
mov
rolb
imul
cld
int
pop
inc
inc
insl
fmulp
and
test
mov
or
dec
cmpsl
addr16
mov
cmpsl
jl,pt
enter
fdivr
xchg
push
int3
jge
dec
add
into
adc
or
sbb
call
lahf
dec
repnz
xor
cmp
mov
inc
sbb
jns
mov
outsl
gs
jmp
mov
pop
xchg
fwait
inc
test
inc
push
push
fiadds
lea
imulb
xor
pop
sub
shrd
hlt
test
jno
lock
jnp
jecxz
sub
imul
cmp
adc
push
or
jge
mov
jns
jb
mov
ljmp
mov
mov
xchg
int
and
sub
daa
add
pop
fmuls
lods
xor
xrelease
and
sbb
lock
inc
dec
adcb
gs
push
pop
xchg
loope
ja
cmp
or
loopne
mov
sbb
sbb
ret
sbb
or
cmpsl
lock
dec
pop
fs
outsb
fildll
rcrl
xorl
int
push
aam
xor
mov
test
scas
xor
inc
push
in
cmc
mov
stos
scas
mov
test
leave
ret
jb
add
int
mov
xor
push
jle
loopne
cltd
add
lods
stos
jge
sbbl
cmpsl
aas
dec
cs
ja
shrl
inc
fadd
cwtl
pop
scas
lret
cld
cwtl
xchg
lods
out
cmpsb
fwait
out
jg
repz
xchg
je
shrl
lds
pop
mov
shlb
mov
clc
xchg
jae
int3
inc
shlb
nop
jno
mov
lock
dec
lods
pop
xorl
movsl
sbb
gs
add
adc
loop
and
movsb
lea
insb
in
add
cld
jle
pop
cmp
sbb
scas
addl
repnz
adc
inc
adc
call
cmpsb
dec
sub
outsb
dec
fnstsw
adc
nop
dec
jle
ret
jg
lcall
js
fnstsw
sub
add
mov
rcll
dec
and
insb
adc
inc
mov
or
pop
adc
pop
xchg
bound
fildll
xlat
adc
pushf
mov
loopne
mov
push
pop
pop
mov
aaa
cld
imul
loop
lods
scas
add
xor
push
clc
repz
or
add
int3
movsb
xchg
lods
jg
adc
mov
pushf
sbb
pop
dec
mov
mov
stos
lret
pop
fiaddl
and
lock
cmp
jno
insb
inc
scas
cmc
lods
inc
inc
cmp
cmpsb
lahf
shr
jo
popa
push
dec
push
enter
inc
faddp
cwtl
jecxz
ds
pop
data16
rorl
jno
scas
push
out
xchg
outsb
es
hlt
sub
fistpl
pop
lea
dec
dec
sub
popl
and
jecxz
and
jne
pop
or
jno
scas
subb
dec
out
loopne
xor
mov
es
pop
xchg
adc
jae
and
lea
loope
addr16
scas
pop
jg
cli
mov
sti
imul
xlat
je
dec
mov
push
lcall
dec
out
cmpsb
aas
in
enter
jecxz
mov
mov
jne
hlt
sub
xchg
mov
pop
dec
jg
aas
outsl
mov
mov
jecxz
incl
in
jne
mov
pop
cmpsl
pushf
int3
in
stc
inc
cmp
imul
and
rcrb
rcrl
int
mov
ret
xchg
outsb
sub
out
cmp
test
in
loope
mov
out
adc
xchg
sbb
push
add
andb
sahf
inc
add
rcr
cwtl
inc
adcl
arpl
add
das
or
add
xchg
lods
push
popa
cmp
adc
add
push
frstor
xchg
fst
dec
dec
outsl
cmpsb
lock
das
and
lods
nop
cmc
outsb
int
sbb
xchg
push
push
push
inc
jle
std
push
mulb
test
lret
repz
sbb
sbb
inc
xchg
outsb
sbb
sub
mov
add
call
in
inc
fcomip
inc
sub
frstor
nop
rcll
cmp
cwtl
repnz
enter
sub
lods
pop
xor
inc
dec
loop
inc
pop
push
cltd
incb
nop
das
sub
addb
jnp
notb
add
sub
lods
dec
mov
sub
fmull
xchg
pop
xor
xchg
inc
pop
sbb
jne
add
scas
mov
sarl
lods
jmp
decb
inc
fwait
xlat
or
rcl
mov
mov
add
mov
xchg
sbb
inc
cmp
mov
xchg
mov
or
outsl
jbe
push
loop
repnz
cs
jne
outsl
xor
sbb
rcrb
lret
lock
and
inc
je
lods
loope
jo
call
or
divb
inc
ds
dec
adc
icebp
inc
mov
push
call
and
negb
rcrl
lock
mov
sub
fiaddl
pop
jb
or
test
xor
lods
or
xor
test
rolb
inc
dec
sti
andb
or
xchg
nop
ss
add
js
xchg
lcall
pop
inc
inc
sahf
cld
xor
sub
dec
mov
sub
mov
or
popa
or
rorl
test
subl
jae
jne
dec
sahf
loop
mull
sub
test
pop
sub
lds
adc
jno,pt
xor
ljmp
push
mov
clc
and
mov
or
popa
movsb
pop
neg
imul
fld
push
sub
push
inc
or
mov
xor
movsb
test
fiaddl
jp
fcomip
les
adc
jbe
xor
daa
std
mov
mov
into
mov
cmpl
adc
cmp
xchg
popa
adc
sub
jae
addr16
pop
pop
aad
inc
lds
aam
adc
inc
and
test
inc
sbb
fsts
bound
lahf
and
xor
cmpb
sbb
rcrl
push
mov
fsubrl
push
mov
cltd
insb
fxch
data16
or
or
xchg
ficompl
push
pop
or
pop
ds
gs
js
cld
mov
jb
sub
popa
cltd
repnz
sbb
jb
pop
in
adc
es
lret
into
cmp
aas
ret
movb
gs
in
movsl
mov
xchg
pop
lock
sub
out
pop
jns
mov
ret
enter
sbb
adc
sub
ja
andb
loopne
imul
adc
cmc
in
pop
fs
pop
test
push
imul
outsb
fcomps
push
rol
or
or
inc
jp
dec
sub
in
xor
cwtl
mov
push
nop
xchg
push
add
ss
shll
stc
ljmp
in
xor
sub
fisttps
xchg
push
sub
out
rorl
inc
jle
iret
add
fcoml
fidivrl
aad
dec
stc
adc
lea
into
out
out
mov
xchg
pop
adc
adc
cmc
lret
dec
cmp
call
mov
in
hlt
pop
sarb
insl
jmp
std
mov
mov
xchg
rcrl
dec
push
xchg
imul
out
ret
popf
mov
repnz
add
push
pop
mov
add
adc
cmpsb
inc
mov
mov
cs
cli
imul
imul
sbb
jno
popf
jbe
push
pop
addr16
push
ja
mov
xor
mov
push
sub
rcrb
cmp
cmpsb
test
pop
xrelease
sbb
mov
dec
sub
push
ret
xor
add
leave
pusha
mov
sub
aam
cltd
dec
out
stc
iret
jns
mov
lahf
sbb
pop
shl
push
dec
mov
mov
stos
js
imul
and
mov
cmpl
repz
mull
stos
leave
xchg
gs
mov
int
adc
push
aam
bound
mov
stos
inc
jle
jmp
test
shll
repz
xchg
pop
je
dec
cltd
repz
lea
ljmp
outsl
bound
daa
push
adc
mov
mov
out
xchg
xchg
inc
jnp
cmc
out
jno
add
jp
mov
add
mov
pop
push
or
std
push
or
pusha
xlat
mov
loop
jp
push
fiaddl
sti
stc
add
dec
rcll
or
aad
out
inc
sub
movsb
sub
mov
add
stos
cmpsl
mov
pop
and
lret
add
icebp
push
popa
xor
ja
jae
bound
xchg
and
or
fadds
mov
xchg
push
and
dec
insb
test
shll
cmpl
sbb
and
lock
xchg
mov
int
xchg
fwait
int
cmpsb
xor
outsb
mov
xchg
pop
or
jno
sub
mov
ret
or
xchg
mov
loopne
pop
cmpsb
lea
lret
in
addb
sbb
dec
lods
lods
rcrl
out
lret
push
mov
dec
inc
or
loope
pop
repnz
mov
shrl
mov
pop
cltd
push
jg
insb
in
pop
cltd
insb
addr16
cmpsb
adc
jns
pop
inc
fadds
push
mov
pop
add
data16
lcall
xorl
lods
mov
inc
aas
in
jae
xor
add
pusha
test
pop
out
mov
dec
sub
dec
ret
sahf
dec
decl
add
data16
push
aam
xchg
mov
jmp
mov
inc
out
pop
daa
mov
lret
mov
lds
fistps
pusha
adc
xchg
faddl
and
dec
pop
iret
push
imul
inc
or
lods
sbbb
and
mov
dec
sbb
sub
mov
in
out
adc
or
fwait
or
adc
xchg
pop
xor
mov
pop
dec
jae
lods
or
out
xorl
adc
jae
dec
and
das
jmp
testl
ja
push
mov
aas
daa
lds
loopne
adc
sbb
xor
int
mov
adc
lret
pop
xor
sbb
mov
outsl
ja
mov
stc
jmp
testb
lock
test
or
mov
mov
pop
jb
shl
mov
cwtl
sbb
jg
lret
cltd
hlt
aaa
int3
cwtl
daa
popf
ljmp
scas
sub
cmpsl
fsubp
aaa
add
call
cmpsl
push
adc
fcom
pop
aad
into
or
jne
loopne
lds
rcrl
insb
outsl
movsb
inc
out
mov
inc
lods
cmp
loopne
inc
push
arpl
js
cmp
scas
or
push
ljmp
xor
movsb
add
rclb
push
iret
fidivs
or
out
scas
pop
fdivs
or
dec
push
sub
add
cs
mov
jo
or
mul
addl
rcrb
dec
xor
popf
adc
sub
mov
push
inc
mov
push
pop
dec
stos
dec
xor
rcl
fimull
sbb
mov
adc
push
xchg
xchg
loopne
jne
ds
cmp
and
xor
mov
popa
and
mov
pop
call
popf
inc
jno
xor
mov
cmpl
cmp
sti
loope
rolb
cld
mull
push
dec
jl
xchg
jle
add
add
dec
cmc
scas
mov
pop
std
dec
cs
jge
lahf
xor
push
sub
dec
stc
jp
int
int
hlt
sbb
out
test
xchg
pop
shl
pusha
jp
pop
lcall
pop
cmp
push
xor
dec
jecxz
xchg
std
incl
pop
aam
clc
addl
in
mov
aaa
push
rclb
mov
adc
sti
es
test
mov
popf
pop
repnz
or
dec
sub
std
xchg
jno
push
pop
sbb
in
outsl
daa
sar
push
mov
fisubl
or
jae
inc
push
ficompl
mov
jecxz
aas
shlb
mov
pushf
test
mov
repz
imul
sub
std
mov
xchg
call
ret
lret
in
imul
cli
stc
dec
popf
and
scas
and
cmc
add
mov
lcall
dec
cmp
ficompl
jbe
fildll
inc
clc
call
jae
das
stc
mov
dec
mull
popa
les
lret
mov
jge
push
mov
xor
jge
aaa
adc
loopne
filds
lock
inc
popf
scas
mov
rolb
scas
and
xchg
hlt
in
push
mov
ds
fidivrs
or
mov
pushl
push
mov
mov
pop
mov
aaa
mov
jno
jno
cwtl
mov
mov
lcall
dec
rcrl
pusha
and
xchg
mov
cmp
push
and
lods
dec
mov
popa
sub
mov
inc
mov
pushf
adc
nop
int
out
cmc
loopne
fs
push
dec
cmp
mov
movsl
sbb
decl
push
xchg
jns
adc
dec
inc
das
popa
arpl
xchg
loop
adc
sbb
jnp
inc
add
cmp
add
hlt
push
mov
cmp
jno,pt
idiv
cmp
jnp
push
pop
mov
movsl
dec
push
jb
push
cli
mov
pusha
and
cmp
in
test
xchg
inc
push
cs
mov
xorl
cwtl
cmp
mov
xchg
jl
fcoml
fwait
pop
cli
int3
stos
push
hlt
icebp
clc
or
cmc
test
idivl
cmp
jno
inc
pop
ljmp
sbb
xchg
mov
out
fs
push
jmp
jmp
movsl
jp
jmp
fdivl
imul
frstor
cmp
pushf
ret
loop
dec
addl
cwtl
xchg
and
adc
xchg
test
inc
ret
dec
or
clc
add
push
sub
fldt
enter
and
sub
wbinvd
inc
xchg
cmpsb
cld
jb
nop
ret
ret
out
je
lock
js
jp
push
insl
adc
scas
mov
rorl
xchg
xlat
lea
inc
cmp
dec
pop
mov
mov
push
pushf
repnz
and
and
movsb
adc
mov
jge
mov
add
xor
xor
fdiv
cmp
dec
or
idiv
stc
pop
pop
mull
jo
sub
fidivrs
or
fisttps
in
je
jg
xorb
adc
insb
lods
push
cmp
roll
popl
inc
inc
pop
mov
push
insl
or
cwtl
cmp
jnp
and
and
mov
hlt
movb
mov
aam
and
test
lret
sahf
out
imul
out
pushf
jmp
mov
sbb
adc
push
push
mov
in
inc
mov
repz
mov
add
mov
and
xorl
icebp
xchg
xchg
lea
mov
sub
cmp
dec
in
mov
push
mov
ja
inc
xchg
dec
xchg
mov
sbb
aad
insb
test
add
fstpt
orl
xlat
rcrb
adc
dec
lret
inc
mov
loopne
jne
repz
pop
sub
adc
push
out
mov
sahf
pusha
inc
xchg
dec
push
repnz
sub
and
mov
pop
fwait
loop
daa
cmp
mov
pusha
push
jmp
dec
jmp
stc
sub
jmp
shlb
add
cwtl
push
jmp
sti
lcall
mov
push
imul
cmp
cld
outsl
jo
or
pop
inc
lods
sbb
and
std
dec
popa
das
aaa
xchg
movsb
insl
aam
les
inc
add
adc
lret
hlt
push
sbb
jne
inc
dec
cmpsl
cli
xor
mov
clc
mov
popf
fs
xlat
std
js
mov
pop
ds
inc
sbb
insl
jg
inc
daa
push
xor
fisubs
mov
mov
lds
out
jbe
mov
movsb
pop
fwait
mov
sti
clc
enter
cltd
inc
pop
pop
imul
jns
cld
cmp
and
sbb
repz
shlb
adc
sbb
sbb
daa
repz
jnp
cmp
or
test
mov
add
sti
shlb
mov
jo
jns
pop
sbb
popa
scas
dec
mov
int
std
sti
pop
addr16
adc
pop
push
lret
pop
lcall
cmp
jp
mov
in
mov
dec
pop
mov
andl
outsl
bnd
jg
mov
lods
mov
loopne
std
mov
push
test
push
or
push
in
sub
mov
inc
cs
testb
jbe
stos
dec
sbb
adc
mov
repnz
test
cmp
out
jmp
test
test
sbb
jmp
jecxz
std
or
push
es
in
dec
and
scas
pop
aas
loop
sahf
and
push
in
mov
imulb
push
test
pop
fwait
mov
fsts
sbb
cli
inc
daa
and
sub
add
xor
push
test
dec
shr
dec
xlat
xor
mov
ja
das
or
jo
push
mov
sbb
lahf
jl
add
mov
mov
ret
fsubs
lds
sarl
out
mov
xlat
cmp
cmp
fwait
insl
mov
fistpll
push
mov
cmp
xchg
ret
mov
fsubrl
or
mov
aam
stos
push
rcll
xchg
dec
ja
lret
mov
xor
inc
icebp
mov
dec
mov
xchg
xor
pop
in
dec
cmp
loopne
adc
pop
sbb
sub
sahf
dec
cmp
and
testl
mov
mov
sbb
dec
outsb
cmc
add
add
xlat
cmp
rcl
push
cmc
jne
jmp
pusha
mov
popa
inc
testl
ds
add
adc
insl
loopne
dec
mov
enter
jge
inc
dec
clc
rcrb
sbb
sbb
jecxz
cmpsl
in
lods
stos
and
test
push
int3
out
sub
divb
push
push
mov
sbbb
dec
xlat
out
nop
ret
lcall
fldl
jle
push
sarl
jno
outsl
xchg
andb
xor
cltd
sbb
inc
pop
xchg
mov
push
pop
test
repnz
loopne
clc
in
test
and
outsb
jo
aad
movsl
aam
or
shl
cmp
add
xchg
mov
lods
xchg
jns
popa
enter
scas
rorb
stc
dec
imull
loop
aaa
dec
xchg
and
jle
mov
sbb
scas
fwait
fwait
sub
out
jmp
out
cltd
xchg
sub
nop
insb
repnz
fistps
and
sti
pop
mov
mov
dec
out
xor
pop
xchg
in
mov
mov
test
push
mov
adc
bound
dec
fadds
pop
les
mov
inc
pushf
xchg
pop
push
add
adc
rolb
movsb
push
add
outsb
sbb
movsl
lcall
clc
imul
clc
mov
in
xor
xchg
bound
popf
das
xor
lcall
sub
push
sbb
add
adc
movsb
xchg
int3
rorl
out
jmp
dec
hlt
sti
add
mov
dec
mov
jb
xchg
addr16
dec
and
enter
into
fnstcw
pop
xchg
mov
push
mov
adc
dec
or
aaa
bound
test
cmc
mov
cli
xor
sub
xorb
sub
or
push
inc
pusha
outsb
cmp
loope
xlat
leave
es
pushf
inc
and
xor
mov
and
mov
clc
inc
bound
cmp
js
cmp
sbb
jns
xor
out
sub
dec
mov
nop
sub
into
repnz
sarb
insl
sub
xchg
inc
inc
xchg
mov
and
lods
mov
mov
in
or
cs
push
or
jo
iret
sub
jae
push
sahf
jp
jl
jmp
push
xlat
xchg
add
xor
insl
ret
hlt
imul
mov
push
in
sub
jno
ficomps
sbb
xchg
mov
xchg
push
cld
shlb
pop
sbb
pop
int
xchg
mov
aas
sbb
inc
mov
and
stc
sub
prefetch
or
int
dec
clc
jle
and
jae
call
mov
loope
out
mov
inc
pushf
rorl
stc
les
mov
dec
lods
dec
jo
mov
in
stc
pop
or
cwtl
sbb
clc
fisttps
fisubl
lods
outsb
add
and
lcall
ja
sub
cmp
mov
push
sti
mov
mov
xchg
ss
das
lods
in
cmc
aad
icebp
jge
push
repz
adc
push
jne
in
sub
out
mov
loope
and
dec
sbb
and
out
stos
notb
rclb
or
cmp
loopne
sbb
push
or
xlat
sbb
lcall
fnsave
jno
lds
push
dec
je
xor
stc
lods
mov
or
notb
leave
pop
or
and
je
cmc
pop
shrb
mov
dec
push
push
imul
lret
cmpsl
and
call
add
roll
test
jecxz
loope
aas
sbb
or
xor
mov
xor
rclb
cmp
mov
or
add
testb
mov
mov
fldcw
jl
sti
roll
stos
fistl
jnp
arpl
std
push
imul
sbb
xchg
ds
rorl
call
xchg
mov
jl
dec
repz
pminsw
jb
push
mov
fwait
dec
mov
adc
add
cmp
inc
xor
adc
jp
jge
or
ret
test
orl
ss
pop
in
push
and
test
cmpb
repnz
adc
movsb
ret
mov
dec
sub
adc
xchg
cmpsl
test
add
sti
test
jl
shrw
in
mov
add
and
xorb
or
mov
pop
inc
out
sub
push
or
mov
cmpsl
adc
imul
paddsb
jp
into
mov
aad
mov
sub
push
roll
xor
xlat
les
inc
std
mov
sbb
xchg
inc
mov
jae
test
pop
fldcw
jbe
cmpb
mov
in
xchg
loop
dec
sub
arpl
out
inc
push
mov
or
push
pop
frstor
int
dec
add
lahf
and
stc
aas
out
imul
adc
add
bound
mov
push
jge
pop
and
pop
push
fisttpll
andb
sti
fiadds
mov
stc
shr
daa
inc
imul
vprotw
out
jmp
and
xchg
push
jg
push
adcb
sbb
mov
adc
aaa
mov
xchg
add
sahf
inc
xchg
insb
mov
mov
loopne
scas
xchg
loop
push
add
mov
xlat
jno
ss
out
std
mov
mov
xlat
cmp
sub
inc
and
push
test
popf
jge
cmp
mov
and
idivb
jbe
sbb
movsb
rcrb
mov
cmp
inc
mov
dec
sub
out
jbe
enter
jmp
add
ljmp
adc
aaa
std
movsb
push
test
aaa
dec
inc
out
scas
push
pop
mov
mov
gs
sbb
incl
mov
jmp
push
jecxz
lods
mov
stos
lock
insl
jb
xchg
in
stos
and
add
push
imulb
inc
repz
sbb
scas
popf
xor
add
sbb
jns
mov
cmpsb
push
insb
pushf
scas
cmp
mov
lds
aad
fcomps
filds
add
imul
stc
in
testl
sub
mov
stos
dec
sbb
test
jecxz
dec
iret
xchg
out
imull
out
sbb
cmpsl
dec
aam
jmp
imul
pop
outsl
sub
cmpsb
xchg
rclb
xor
test
not
sub
test
aas
cmp
scas
outsl
mov
rorb
scas
lahf
push
sbb
and
mov
push
imul
jno
mov
inc
das
dec
jmp
sbb
negl
inc
sti
pop
and
imul
repnz
pop
push
ret
fsubrs
test
jecxz
test
insb
xchg
push
or
jg
mov
jns
in
sub
test
fwait
xchg
and
sbb
jae
pop
jp
pop
dec
lret
and
xchg
loopne
fcomi
mov
test
mov
rolb
es
std
cs
into
sti
mov
insb
jmp
mov
mov
bound
dec
sub
jae
fimull
push
test
pop
adc
jnp
or
mov
cmc
in
add
jb
sub
loope
stos
js
hlt
and
dec
mov
jl
cmp
or
cmp
test
ficoml
dec
jecxz
add
jl
pusha
arpl
andl
sti
lds
mov
xor
sarl
jmp
insl
push
mov
imul
xchg
mov
rorb
lods
cwtl
rol
outsl
rcll
add
insl
jbe
sarl
cmp
mov
inc
into
inc
dec
loopne
and
jnp
xorb
addr16
jl
add
xchg
icebp
xor
mov
aam
inc
and
xchg
mov
dec
xor
mov
pop
pop
lcall
scas
mov
mov
mov
aas
nop
pop
push
dec
hlt
dec
std
xor
fcomi
lret
insb
push
inc
xchg
dec
pop
sbb
mov
sahf
lahf
nop
mov
or
adc
pop
dec
fldl
lods
and
stos
cmp
pop
pop
das
icebp
adc
ljmp
sub
call
dec
ficomps
arpl
cmp
mov
sub
xchg
inc
mov
adc
mov
out
and
xor
pop
stos
mov
andb
inc
es
pop
mov
out
in
mov
ret
jo
or
dec
and
xor
int
cmpsl
ret
push
and
push
in
mov
mov
dec
imul
inc
hlt
repnz
loop
sbb
popf
shlb
addr16
int
scas
loop
or
add
faddl
movsl
loopne
test
aas
out
inc
push
mov
push
xchg
inc
icebp
fisttpll
int3
out
inc
dec
xor
jb
mov
fdivr
xchg
cwtl
fmuls
mov
rcrb
sbbb
xor
out
add
cmp
mov
in
pop
xlat
sti
ja
test
daa
adc
or
out
xor
adc
cltd
fdivp
cmp
lods
lcall
mov
fisubrs
xor
mov
push
mov
mov
ret
popf
pop
pushf
cmc
jmp
mov
adc
adc
out
inc
xor
sbb
insl
out
test
gs
clc
inc
xchg
je
adc
dec
insl
in
inc
movsb
test
xor
idivl
sub
cwtl
out
or
clc
fwait
repz
cs
clc
sub
cmpsb
xor
mov
fs
sub
pop
mov
loopne
dec
test
sbb
push
or
shll
hlt
in
rcl
push
and
inc
sub
sbb
lret
repnz
out
mov
push
mov
iret
add
dec
or
jmp
popf
dec
or
out
mov
push
pop
fwait
push
xor
out
ljmp
pop
push
lret
and
ja
push
or
mov
or
fsubp
mov
fwait
call
popf
in
add
out
das
xor
push
jno
fadds
lds
mov
ljmp
mov
lea
mov
adc
daa
shlb
inc
cmp
lea
test
jmp
cmc
gs
or
or
insl
addb
shlb
adc
call
and
imul
aaa
add
dec
icebp
test
xor
and
adcl
sti
xor
sbb
stos
lods
insl
shll
enter
and
mov
scas
outsb
and
pop
sbb
out
out
pop
fmuls
out
jp
jp
sbb
aam
pop
jg
xchg
cmp
sub
or
xchg
insl
fisttpl
xchg
out
jp
xchg
jg
mov
xchg
dec
add
xchg
int
xchg
push
jp
out
or
push
push
dec
sub
mov
jl
lcall
push
out
pushf
add
lds
cmp
movsb
lret
lds
xchg
pop
xchg
out
mov
cmpsl
cmc
in
xchg
ja
mov
loope
push
andb
mov
mov
pop
divl
stos
mov
les
mov
push
push
cmp
add
out
mov
test
loop
scas
or
cmpsb
jns
popa
sbb
mov
and
out
pusha
clc
jb
push
pop
fwait
stos
shll
jg
cli
psrlq
call
repz
test
pop
xlat
subl
xchg
outsb
lahf
ret
stc
xchg
loop
cli
sbb
test
les
imul
test
adc
scas
out
ret
jns
and
adc
inc
push
pop
and
and
les
call
subb
lret
es
js
mov
and
pop
das
enter
out
lock
outsb
fwait
mov
ret
stc
fcompl
xlat
test
inc
push
or
mov
push
sub
dec
pop
jno
and
dec
mov
shll
xchg
das
sub
sbbb
mov
jg
sub
pop
or
jl
and
sub
ljmp
gs
sub
loop
js
jmp
sbb
ror
cli
out
out
cs
cmp
cli
in
call
push
push
add
scas
addb
cmc
adcb
imul
push
das
arpl
mov
lods
subb
shll
int3
adcb
jle
int3
adc
push
lea
adc
or
cmpsl
pop
jmp
mull
repz
loope
das
fistps
sarl
cmp
add
out
loop
jp
in
sub
fwait
add
lds
repz
ja
sub
iret
aaa
outsb
sub
subl
shll
jle
or
sahf
loop
cli
cs
sub
mov
xchg
fidivl
mov
fwait
add
arpl
xchg
scas
lcall
stos
or
xchg
ret
pop
push
pop
arpl
imul
stc
cmc
pop
mov
xchg
dec
cmp
dec
xchg
lea
jmp
lds
adc
daa
das
fs
ret
sbb
pop
jnp
pop
stos
push
dec
dec
fs
je
add
orl
insl
xor
in
xor
rorl
repz
jae
stc
out
xchg
pop
inc
out
mov
adc
add
lods
xchg
sub
popf
pop
mov
jle
pop
lcall
cmp
out
push
js
std
sbb
in
cmpsl
sti
bound
daa
nop
mov
fcmovbe
outsl
fisttpl
mov
jb
subb
bound
shl
dec
ficomps
dec
xor
jae
dec
addr16
sub
mov
mov
ja
mov
sahf
xchg
es
mov
outsb
int
bound
hlt
mov
sbb
divb
addl
pop
lret
pop
dec
loope
leave
or
nop
lret
or
mov
cmp
mov
jb
mov
mov
mov
mov
xor
in
and
or
xor
aam
lods
sub
xor
loopne
push
cmp
push
imul
jge
mov
popf
clc
stos
outsl
in
pop
cmp
xlat
stos
in
sub
jle
mov
mov
sahf
dec
loope
xor
cmp
mov
mov
and
mov
pcmpgtw
fnstcw
int
je
push
pop
inc
pop
mov
add
sub
push
dec
std
ret
mov
fcmovnu
mov
push
push
sbb
out
into
push
mov
inc
clc
or
aas
test
lret
push
rcrb
iret
push
mov
inc
add
enter
inc
addr16
xor
jmp
jp
push
mov
xchg
in
cli
pop
fucomp
insb
daa
sub
ja
fst
mov
fsubr
fcoml
push
cmp
jne
std
cmpsl
imul
inc
push
xor
das
or
out
pop
cmp
push
xchg
xor
daa
sbb
inc
fcomi
ret
push
sbb
or
or
js
jo
inc
mov
sub
lods
push
lock
xor
jne
pop
stos
inc
sub
out
push
push
cmp
pusha
outsl
xchg
jno
add
rcr
ljmp
rcr
jecxz
lret
iret
shlb
jb
xchg
jns
int
les
popf
les
xor
sub
push
pop
insb
push
pop
and
pop
cltd
pop
in
jmp
adc
je
lods
bound
inc
xor
xor
mov
sbb
les
ret
mov
push
sbb
mov
or
xchg
adc
gs
dec
inc
icebp
add
inc
es
dec
lret
sub
rcr
inc
mov
fisubrs
shl
sbb
push
call
push
xchg
fcmove
mov
imul
dec
xor
test
mov
cmp
add
and
xor
aam
adc
cmp
clc
sbb
mov
push
mov
cmp
and
fsubrl
cmpsl
mov
dec
push
xchg
mov
cwtl
xchg
push
and
fisubs
sub
or
loop
aam
jp
dec
loope
fcoms
das
mov
ficoms
lret
mov
jg
insb
ret
pop
and
mov
out
xor
out
xchg
ficoms
dec
rolb
lret
or
pusha
adc
mov
aas
sbb
js
dec
dec
xchg
lods
cmpsb
adc
imul
movsl
mov
andps
fistl
popf
dec
jae
daa
adc
pop
and
cltd
icebp
sub
dec
sarb
enter
int
cmpsb
xor
and
mov
sub
adc
dec
fistpll
mov
jg
inc
jle
and
jecxz
in
mov
mov
repz
mov
outsl
pop
jb
sub
shrb
rorl
int
sub
fwait
push
add
xchg
mov
ficoml
inc
pop
mov
xchg
and
pop
ds
push
ss
out
xchg
push
pop
je
mov
jmp
std
in
push
mov
pushf
loop
fs
in
divb
jns
fcompl
push
test
into
and
ja
ds
incl
out
imul
aas
sbb
xchg
add
lods
fistpll
outsb
lea
ficompl
out
out
jecxz
mov
jp
xchg
jmp
lret
movsb
stos
sbb
ds
movsl
clc
sbb
mov
sub
xchg
jecxz
xor
mov
cmc
outsb
pop
cmpsb
mov
add
cmpsb
repz
mov
cltd
test
pop
push
addl
pop
ds
xor
lret
imul
lret
xor
incl
test
jg
mov
lahf
out
hlt
mov
push
mov
dec
test
mov
sub
stc
mov
pop
mov
jne
dec
test
xor
xchg
inc
sarl
lahf
xor
pop
fs
sub
add
push
push
ret
xor
push
pop
mov
inc
stos
movsl
pop
out
or
dec
lea
nop
mov
push
adc
test
icebp
sbb
and
dec
pop
jno
add
enter
sti
in
outsb
push
ja
dec
xchg
jns
mov
repz
mov
push
addl
xor
mov
cmp
adc
or
icebp
add
icebp
inc
add
iret
push
dec
int
nop
outsl
push
pusha
and
outsb
push
sub
leave
incb
mov
icebp
ds
xor
imul
popf
cs
sub
int3
push
lea
jno
insl
loop
mov
out
push
push
xchg
or
xchg
addl
cmc
imul
ret
lods
test
pop
mov
pop
push
sub
or
pushf
mov
mov
ss
ljmp
icebp
lods
cmc
xchg
adc
loop
sub
jp
lret
adc
in
int3
and
xchg
outsl
pop
stc
stc
pop
pop
cmp
dec
adc
loope
scas
sbb
arpl
or
mov
icebp
and
repnz
in
fstl
sbb
mov
test
push
lcall
and
and
in
mov
pop
inc
cmp
mov
pusha
scas
push
shrb
shlb
dec
xor
insb
les
push
lock
xchg
pushf
sahf
pop
adc
mov
fisttpl
adc
std
jnp
mov
loope
cmp
mov
lea
sub
data16
aaa
xchg
mov
lock
lret
loope
fs
jo
cmpsb
fnsave
repz
imul
jge
sbb
scas
aaa
xor
pop
cmp
pop
in
lock
int3
hlt
cmc
jae
cmp
fcmove
mov
outsl
imul
rclb
lret
cmp
test
push
jne
push
sub
fwait
aaa
idivb
repnz
out
pop
in
inc
cmp
mov
iret
mov
enter
pop
pop
jmp
add
out
out
mov
and
cmpsb
push
inc
or
mov
xor
repz
ficomps
pop
fwait
and
inc
mov
and
test
andb
shlb
jo
ds
mov
pop
sbb
sahf
in
mov
xchg
mov
pop
add
xor
mov
in
ficoms
inc
sbb
pop
test
xchg
icebp
dec
sbb
mov
cltd
jae
jno
movsb
in
push
leave
jnp
rcll
cmp
pop
cmp
stos
sbb
fwait
xchg
test
fstpl
jl
aaa
mov
shrb
repz
dec
lret
or
jno
out
popa
mov
xchg
movsb
out
nop
fidivl
pusha
mov
movsb
mov
hlt
mov
or
rep
fs
mov
push
or
out
into
dec
daa
mov
gs
pushf
cld
xor
pusha
dec
enter
cmc
dec
fldt
divl
test
lahf
inc
sub
add
sbb
mov
nop
lahf
callw
mov
xor
push
test
aaa
ror
add
jp
nop
cmp
mov
daa
inc
inc
mov
jge
ljmp
add
fisubs
jecxz
mov
mov
inc
sarb
shrb
outsl
cli
mov
fcmove
jl
pop
rcrl
add
and
icebp
inc
fimuls
test
je
bswap
cmp
jae
jnp
jg
ret
jb
out
aaa
jnp
lcall
ds
push
cltd
sbb
sbb
xorl
or
sbb
pop
jg
push
in
add
or
mov
pop
xlat
adc
scas
xchg
dec
add
add
dec
and
and
adcb
xchg
ret
lcall
push
call
fnstcw
lock
icebp
ljmp
xchg
scas
push
xor
sub
sub
dec
lods
daa
aad
lahf
stos
mov
ret
jecxz
into
jnp
into
shlb
and
addl
scas
and
sub
rcll
push
add
add
cmpsl
pop
jge
dec
leave
dec
mov
xor
stos
sahf
outsb
repnz
int
mov
xchg
ja
push
fstps
incl
cmp
cmp
dec
and
cmc
es
push
outsl
lret
push
dec
jbe
adc
nop
out
aam
fisttpll
aam
mov
mov
mov
inc
cltd
lret
scas
lods
mov
xchg
je
popa
and
jle
ljmp
cmp
adc
xor
loopne
sahf
dec
rorl
mov
sub
cwtl
mov
cmpb
stos
mov
push
sbb
xor
ljmp
aad
shlb
sti
and
addr16
mov
mov
xchg
imul
xchg
jg
sti
ret
lock
int3
xchg
inc
js
dec
rcr
test
hlt
cltd
mov
xchg
dec
dec
enter
adc
iret
jmp
jbe
cmpsl
clc
mov
negb
xchg
clc
shll
insb
jo
std
stos
mov
test
cmp
pop
test
cmpsl
aas
es
dec
jg
out
cmp
or
enter
scas
adc
icebp
ss
lock
imul
xor
sub
test
jge
add
movsl
daa
mov
les
inc
xor
inc
jge
cmp
out
add
gs
mov
data16
jbe
nop
dec
mov
push
pop
ljmp
stos
mov
loopne
pushf
icebp
pop
xor
test
mov
popf
or
sub
lods
sbb
call
sub
loope
pop
push
outsb
mov
mov
test
xchg
jp
lcall
mov
mov
stc
cmp
xorb
pop
inc
push
jnp
and
jge
xorb
push
sar
movsb
add
ret
mov
and
mov
pop
sub
loope
movb
popf
push
subl
fs
dec
jb
mov
addr16
mov
xchg
or
stos
insb
sub
lahf
push
outsl
inc
pop
mov
test
push
lods
cs
pop
mov
loopne
in
test
mov
sub
push
push
mulb
mov
xchg
ds
push
addr16
dec
pop
stos
inc
sub
sub
scas
mov
insl
and
cwtl
mov
fnstsw
inc
enter
test
adc
cmp
mov
in
shlb
loop
arpl
int
std
mov
xor
pop
xchg
sbb
add
lcall
sbb
mov
mov
negl
fnstenv
fnstenv
cmp
push
fldt
jge
icebp
mov
cltd
fstps
shlb
push
out
lahf
xchg
jg
mov
fbstp
test
sar
mov
fldcw
jnp
add
push
into
sbb
sbb
sub
test
test
imul
rcll
mov
sbb
mov
testb
mov
mov
mov
adc
or
stc
push
out
scas
sub
push
mov
push
sub
stos
stos
ret
fsubs
sbb
test
mov
dec
adc
jg
inc
imul
sbb
dec
mov
inc
repnz
ret
js
mov
xchg
pop
shrl
jmp
xor
aad
adc
mov
insb
sub
pop
icebp
lahf
sbb
repz
pushf
negl
cmpsb
mov
inc
iret
aad
xor
test
xor
test
aas
aam
inc
mov
dec
jno
xorl
xchg
sbb
or
gs
int3
orb
or
mov
cmp
in
std
adc
sub
inc
xor
rolb
sub
push
mov
imul
cmp
jo
scas
call
xor
je
and
fnsave
cwtl
les
sub
daa
pop
mov
test
ret
push
repnz
sbb
mov
or
sbb
ja
push
int
les
mov
gs
push
adc
mov
sbb
out
push
int
mov
dec
push
sti
sub
ljmp
test
and
mov
jns
cs
test
cmp
gs
iret
std
mov
rol
out
or
dec
mov
xor
jge
jne
outsl
subl
cli
negb
fs
pop
pop
jns
out
popf
push
lods
push
icebp
push
pushf
fnstenv
and
icebp
add
sbb
xor
and
fldl
sti
or
add
mov
shrl
mov
in
cmp
loopne
les
int
cmc
in
cli
es
adc
jmp
jg
push
pop
scas
jo
js
ss
subl
cmp
or
mov
std
and
pop
lods
add
jae
sub
cmpsb
cmp
xchg
lods
push
and
notl
and
ja
push
daa
sub
or
pop
int3
pop
sub
xor
xchg
sbb
jle
addl
push
pushf
clc
or
movsl
sbb
jnp
out
sbb
jle
mov
mov
inc
loope
mov
push
push
test
dec
mov
daa
dec
ffree
lret
loopne
push
cwtl
nop
lock
push
dec
rcrb
add
jp
loope
jno
cmp
mov
jno
inc
mov
inc
icebp
or
inc
cmp
xchg
mov
sub
repnz
imul
xorb
xchg
jne
pop
das
and
mov
data16
sub
mov
mov
add
sbb
add
fsubs
push
xchg
add
add
dec
or
lds
pop
jno
pop
int3
push
add
movsl
xchg
mov
nop
insl
mov
lods
int3
fisttpl
pop
das
fbld
xchg
jg
mov
lods
ret
outsb
adc
into
dec
sub
fisubrs
testb
aas
and
test
jbe
jl
loop
repz
pop
sbb
icebp
or
pop
fildl
sub
sbb
mov
xchg
out
adc
cld
sbb
xlat
icebp
push
stos
mov
leave
jbe
lock
add
fistl
mov
add
inc
or
pop
mov
add
dec
push
repz
push
adc
test
dec
mov
shl
xor
outsb
inc
repnz
addb
mov
rolb
sub
xchg
sahf
pop
addl
aam
aaa
mov
jge
dec
mov
fsts
sub
cmp
mov
fmuls
fldt
js
cltd
aas
aad
cmp
push
and
dec
and
mov
cmc
daa
mov
out
icebp
xchg
push
push
arpl
jo
call
and
lahf
es
push
add
xor
cltd
out
add
xor
fnsave
mov
test
lods
in
lods
mov
rorb
mov
push
icebp
cmp
std
cmp
insb
adc
mov
aaa
aaa
out
push
shl
aas
lret
clc
sbb
pop
jmp
jns
ret
hlt
lret
cmpsl
mov
ficoms
into
xorl
mov
mov
add
or
out
es
gs
jno
mov
cs
push
xor
iret
hlt
pusha
mov
shll
cmp
fwait
and
lock
pop
jo
jl
and
ds
sarb
dec
out
cld
xchg
sbb
out
je
cmp
std
stos
inc
popa
loope
fnsave
adc
pop
rolb
in
lock
insb
or
adc
adc
fadd
bound
or
adc
shrb
add
dec
movsb
sbb
mov
xor
call
hlt
jmp
dec
pop
dec
aaa
lods
js
cwtl
sti
out
jecxz
mov
mov
arpl
sbb
loope
out
test
mov
int
adc
int
daa
xchg
push
sbb
stos
rol
and
pop
jb
pop
adc
out
pop
pop
sub
xor
adc
int
push
mov
dec
pop
ds
stc
push
sub
enter
cwtl
test
xor
and
jne
push
test
lcall
int3
add
jb
sbb
push
push
les
dec
cmp
andl
xchg
sahf
out
negl
orb
jge
xchg
sbb
fs
jbe
call
jp
add
mov
nop
cmp
xchg
sti
mov
push
push
ficoms
fisubrs
ja
xchg
inc
lea
lret
sub
sub
rorb
adc
dec
add
mov
cmpsb
inc
xchg
cli
shll
inc
pop
and
cs
sbb
stos
adc
and
test
into
imul
stos
xor
jecxz
inc
mov
out
loopne
pop
cmp
out
int3
add
mov
cwtl
push
addb
lret
adc
hlt
pusha
jecxz
cmc
xchg
repz
xor
ret
test
jmp
sub
scas
jns
movsb
pop
pop
push
scas
enter
lret
stc
adc
aam
pop
lret
pop
jmp
pop
xchg
cmpsl
xor
push
scas
in
mov
imul
testb
jbe
inc
mov
mov
cld
rcl
cmp
insl
sub
loop
xchg
repz
cli
inc
sub
aad
jmp
sub
sbb
jl
leave
lds
test
icebp
ja
les
xchg
sub
xchg
outsb
push
add
cmpsb
mov
add
test
sub
jmp
push
lahf
and
insl
out
jg
fsts
inc
out
int3
outsl
daa
jns
out
lock
popf
test
adc
call
dec
je
gs
jecxz
pop
adc
test
pop
mov
imulb
call
ds
insb
hlt
xchg
clc
xchg
out
push
mov
mov
and
mov
dec
mov
loopne
sbb
sbb
mov
add
add
mov
ficomps
pop
and
mov
jl
or
scas
shlb
xor
sub
push
sti
stos
lcall
pop
fucomp
or
dec
mov
adc
in
mov
pop
push
jmp
xchg
and
jle
mov
cmp
outsl
pushf
mull
mov
or
inc
sbbl
stc
mov
leave
inc
into
adc
pop
cmp
and
test
out
mov
rcll
es
fs
arpl
loop
out
xchg
or
xchg
cli
add
inc
mov
inc
dec
into
jno
cmpsb
jl
icebp
xchg
lahf
repz
cld
dec
pop
test
jmp
icebp
scas
jecxz
sub
push
leave
and
stos
inc
std
add
sub
adc
imul
push
and
sbb
pop
xchg
push
pop
mov
imul
dec
movsb
cmp
jmp
aas
arpl
add
dec
mov
jg
inc
sub
add
pop
lcall
stos
xor
addr16
pusha
xchg
push
sbb
cmp
add
sub
loope
aas
lds
xor
and
cli
int
cltd
aaa
jmp
push
cwtl
gs
and
pop
fisubs
les
pop
mov
mov
mov
data16
sti
and
iret
push
sbbb
dec
xorl
xor
add
jmp
shll
bound
je
or
xchg
stos
push
jle
mov
lahf
movsb
popa
add
lods
shrl
movb
aam
mov
adc
shlb
pop
icebp
cmp
dec
out
into
and
out
insb
lahf
sbb
mov
lods
inc
ss
sbb
lcall
arpl
aam
mov
inc
xchg
xchg
cmpsb
xor
test
jo
inc
or
aaa
or
aam
call
out
push
jmp
fdivrl
cmp
fstpt
popf
adc
xlat
gs
pusha
push
mov
insb
mov
and
mov
and
sub
or
xchg
dec
mov
repnz
lretw
cwtl
xor
cmc
pusha
out
gs
xlat
insl
out
jge
pop
jmp
out
dec
in
popa
pop
mov
out
push
jl
js
cli
in
xchg
ljmp
and
cmpsl
sbb
fcompl
insb
bound
dec
pop
cmp
jge
push
testl
mov
mov
lahf
scas
pop
add
in
cmp
into
mov
inc
stc
out
jmp
lds
les
dec
ljmp
scas
imul
lods
aaa
sbb
ret
leave
and
es
jmp
inc
pop
imul
sbb
and
and
addr16
arpl
jae
jb
cli
dec
aas
sbb
outsb
out
sahf
pop
mov
repnz
mov
jns
dec
mov
mov
mov
xor
fwait
sub
test
jl
xchg
cli
lock
js
pop
das
cli
push
mov
add
arpl
push
sbb
jg
shrb
cmpsb
test
fstl
mov
lcall
xor
scas
mov
jno
dec
loop
rorb
ffree
jo
xchg
mov
xor
mov
inc
mov
sti
add
jb
lret
nop
stos
jne
add
cmpsl
ljmp
insl
mov
fldl
jno
jnp
lret
out
andb
stos
push
call
push
pop
jnp
xchg
mov
les
mov
int3
adc
das
pop
jno
pushf
addr16
jo
mov
mov
outsl
sub
js
inc
mov
loope
pop
mov
loope
mov
push
movsl
xor
lds
daa
push
aaa
dec
add
insw
and
pop
jb
nop
mov
cmpl
aas
dec
or
add
push
push
mov
lds
add
mov
ja
jno
add
pusha
fistl
nop
call
and
outsb
mov
lcall
jl
dec
sahf
mov
dec
mov
mov
xchg
adc
scas
push
sbb
test
xor
xor
sar
pop
imul
into
stos
dec
insb
loope
enter
adc
insb
dec
test
pop
nop
mov
jmp
mov
inc
and
lahf
inc
xor
push
push
cwtl
sub
jae
loope
js
push
cmc
jecxz
fldl
cmp
hlt
inc
mov
add
outsb
inc
mov
mov
and
xchg
test
push
aas
xchg
fstp
in
dec
int
mov
xchg
in
lods
add
lret
push
adcb
test
xchg
cs
inc
cmpsb
aam
xchg
sub
push
inc
jo
add
mov
sbb
xchg
jne
hlt
sub
jno
ss
push
mov
ja
enter
adc
nop
mov
push
jg
div
xorl
ljmp
inc
jae
addr16
jmp
adc
cmp
test
push
inc
pop
dec
insb
test
add
popf
pop
movswl
aam
cmp
lcall
pop
rcll
adc
sbb
aad
sbbl
push
shrl
dec
xor
and
fisttpll
push
inc
add
out
dec
gs
cwtl
push
dec
outsl
pop
loopne
lods
inc
data16
stc
lods
cmc
push
cs
pop
pop
loopne
adcb
bound
rcr
fs
add
sbb
cmp
leave
neg
test
ficompl
je
stc
fcoml
mov
ds
arpl
jnp
test
je
or
stos
mov
sub
mov
sub
leave
jge
inc
aad
enter
push
mov
dec
dec
inc
inc
pop
mov
pop
rcrb
dec
dec
and
out
mov
fistps
stos
test
mov
jp
xlat
insl
sub
xor
sbb
dec
adc
je
adc
or
pop
sahf
mov
insl
lret
sub
cwtl
out
gs
insl
cld
lret
push
add
fwait
mov
movsb
xor
mov
out
sub
sbb
fldcw
in
dec
dec
pop
cmpsl
imul
call
in
adc
jae
test
xor
dec
fdivl
push
pop
and
and
fistl
or
lds
pop
cli
sbb
aas
jge
sbb
mov
or
sbb
aam
sti
push
mov
sti
xchg
sbb
shlb
push
cltd
icebp
dec
sub
xchg
mov
lods
loop
mov
inc
cld
jmp
lods
sbb
js
fwait
mov
jne
jle
lret
xchg
test
adc
or
out
sbb
ljmp
mov
mov
cmp
divb
jo
dec
sub
dec
and
clc
add
mov
mov
and
popf
cmp
pop
jp
push
in
add
scas
fcomp
sbb
jge
or
jmp
out
repz
inc
test
jae
dec
addl
push
into
pop
mov
je
push
pop
xlat
sbbl
sar
jo
sub
jl
sahf
in
enter
into
mov
sub
or
test
fstpt
pop
cwtl
out
add
cmpsl
imul
add
sbb
test
sbb
pop
jne
adc
iret
scas
dec
fisubrs
clc
lods
mov
call
adc
mov
flds
xlat
nop
pop
push
sbb
std
sub
dec
sti
sbb
inc
repz
pushf
es
jge
fwait
sbb
cmp
jnp
pushf
ret
lcall
push
cmpb
lock
adcl
push
lds
sbb
lock
inc
lahf
leave
arpl
std
jo
inc
bswap
bound
cmp
fildll
jae
mov
test
rcrb
imul
mov
cmp
mov
lahf
jno
inc
jg
iret
out
pop
inc
mov
addr16
out
lods
push
dec
mov
cmpsb
mov
fimuls
jnp
mov
ljmp
cmpsb
enter
inc
ficoml
cld
fistl
xchg
clc
pop
movsb
pop
shll
pop
scas
pushf
mov
sbb
and
cmpsl
push
jb
xchg
pop
aas
mov
and
mov
in
xor
rolb
sub
jge
add
push
push
xchg
push
ja
lods
insl
daa
cmp
xchg
add
scas
int3
xor
fwait
mov
int3
mov
pop
cltd
stc
xor
insb
sub
aas
or
orb
or
add
pop
mov
loope
outsb
jne
push
adc
stos
sbb
bound
dec
inc
test
push
outsb
pop
mov
scas
in
pop
pop
and
ss
adc
fwait
mov
add
xchg
popf
loop
add
fidivs
icebp
mov
mov
jecxz
or
adc
and
inc
push
add
hlt
aas
shrl
jne
xchg
call
pop
mov
sbb
and
xor
push
loop
and
ja
add
gs
sti
pusha
jae
cmpsb
add
jg
data16
add
clc
inc
daa
mov
mov
mov
xchg
je
add
adc
mov
outsb
mov
add
movsb
arpl
push
dec
icebp
xchg
adc
aaa
les
inc
mov
add
je
loope
mov
mov
sbb
inc
lret
jno
pop
pop
mov
inc
xchg
xor
leave
mov
push
aam
sub
or
push
jle
push
decb
jge
mov
cmp
pop
xchg
ja
push
jp
std
and
dec
inc
inc
in
adc
adc
das
fdivs
inc
addr16
cli
shll
arpl
in
and
or
xor
or
lret
div
aas
rclb
xchg
lods
test
xchg
enter
shr
cmpsl
movsb
pop
xor
in
or
movsl
and
fwait
pop
lds
popf
dec
or
movsb
daa
fsubrs
roll
jecxz
mov
sbb
xor
bound
sbb
fwait
xor
pop
test
sub
lret
xchg
push
mulb
lock
test
addr16
and
les
scas
jne
in
dec
xchg
jns
and
jae
jnp
cld
adc
cwtl
push
cmp
sub
mov
sbb
leave
popa
lods
jl
icebp
int
pop
into
inc
les
adc
mov
xchg
push
imul
mov
cld
sahf
adc
jns
int
mov
popa
stos
mov
dec
or
xor
inc
scas
pop
repnz
in
mov
outsl
popa
xor
dec
add
mov
and
cs
shll
adc
je
call
mov
mov
mov
and
or
push
push
mov
cmp
push
ret
mov
push
movsb
pop
popa
add
faddl
jns
sbbb
mov
mov
push
fwait
and
pusha
or
imul
push
sub
hlt
fwait
addb
add
fwait
mov
int3
mov
jbe
jno
inc
xchg
sub
idivl
cmp
cmp
jmp
js
mov
jbe
push
inc
mov
cltd
jge
cli
adc
data16
jmp
stos
imul
imul
adc
push
lret
icebp
test
or
pop
icebp
and
xchg
imul
ret
xor
scas
xchg
imulb
fnstsw
mull
std
iret
repnz
jecxz
int3
ss
jne
roll
pop
lds
xchg
sahf
fwait
imul
pushaw
sti
outsb
ss
inc
add
outsl
xor
rcrb
mov
mov
xor
push
inc
xor
mov
xchg
inc
popf
int
mov
test
movsl
cmp
dec
repz
cld
insb
fcompl
xor
orl
std
xchg
push
push
js
push
dec
shrl
xchg
fcoms
and
push
data16
aad
cmc
add
fistpll
mov
repz
mov
push
xor
xchg
fadds
movsb
je
rcll
pop
sahf
test
cli
mov
mov
idivb
sub
mov
adc
lods
push
fst
mulb
cs
clc
incl
add
outsb
and
pop
jl
xchg
call
bound
add
les
or
shll
lahf
adc
jg
push
sub
lret
lods
inc
aam
neg
bound
test
loop
adc
mov
and
dec
lret
jae
in
adc
and
xchg
mov
test
and
les
subl
lcall
scas
mov
and
pop
pop
nop
stos
push
sbb
out
cmpsb
jb
push
repnz
ret
pop
inc
add
mov
inc
out
sbb
mov
jbe
scas
pop
in
shlb
mov
dec
out
rcrl
in
jp
xchg
call
stos
test
cmpsb
sbb
sbb
insl
lret
mov
xchg
inc
jge
sbb
push
shr
ret
insl
or
movsl
sub
add
sbb
xor
xlat
loopne
cmp
add
leave
into
js
sub
or
lahf
cltd
scas
lods
out
mov
aas
jmp
rol
outsl
xchg
xchg
loopne
push
arpl
mov
add
bswap
lahf
mov
dec
aaa
adc
mov
fs
pop
jl
pop
lahf
std
cmp
jmp
outsl
sub
paddw
jno
mov
jg
in
sub
bound
test
add
add
loopne
fdivrs
mov
pop
sbb
pop
js
adc
mov
dec
movsb
sti
ror
mov
mov
jmp
fnstenv
cmc
push
add
mov
in
push
push
ret
mov
inc
cmc
repnz
pop
fldcw
daa
test
ret
clc
hlt
inc
mov
loopne
popf
cmpsl
inc
call
pop
dec
cmc
push
out
mov
mov
add
xor
shr
rcrb
mov
loope
mov
neg
or
jnp
jo
rorl
cld
or
jmp
mov
outsb
repnz
cmc
push
or
lods
movsb
xchg
cmpsb
cltd
fnstcw
sub
sahf
pusha
inc
sub
push
ljmp
iret
push
inc
incl
sub
ja
lea
fbstp
inc
mov
mov
mov
std
insl
aas
xor
jns
jbe
pop
xchg
push
mov
leave
mov
aam
cmp
sbb
mov
clc
test
mov
push
fstpt
xor
or
pop
xchg
mov
outsb
cmpsl
or
fwait
xchg
outsb
cmp
pop
pop
mov
mov
or
test
stc
lahf
add
mov
dec
cmp
bound
loopne
or
in
add
das
int3
jne
cld
rclb
negb
inc
data16
in
jb
out
sub
push
data16
sahf
into
dec
int
idivb
dec
jns
add
inc
addr16
xchg
cmp
cmp
xor
lock
int3
xlat
jno
and
outsb
fistps
out
cwtl
aas
test
pop
rcll
xchg
stos
test
jg
xor
shrl
icebp
lds
and
test
scas
xor
repz
gs
xchg
adc
xor
dec
cltd
and
cmp
mov
in
dec
sub
xchg
or
pop
ror
xor
fcmovnbe
mov
int3
lods
mov
mov
jno
lret
leave
sahf
cmpsb
je
andl
stos
lea
cmp
addr16
jbe
xchg
gs
in
mov
mov
mov
sub
jl
mov
ss
jl
xor
jbe,pn
fidivrs
mov
shll
add
in
xor
mov
cmp
movb
push
icebp
and
or
or
sbb
push
lods
js
inc
in
add
inc
xchg
stc
or
xor
push
roll
bound
dec
adc
jle
fidivl
dec
cmc
cwtl
flds
fcoms
xor
ss
mov
lods
push
adc
repz
sti
add
jno
iret
decb
mov
adc
pop
dec
sahf
mov
popf
sbb
mov
xrelease
jb
dec
inc
int3
or
ds
add
cmpsl
mov
cli
sub
movsb
pop
push
mov
push
jbe
jbe
iret
or
xor
loop
cs
pop
add
jmp
cmp
sbb
dec
stos
test
xor
movsl
fimuls
push
and
js
hlt
mov
mov
imul
xor
add
fdivrl
cmp
and
push
test
outsb
xchg
xor
icebp
mov
cmpsl
cmp
loope
in
lahf
mov
ss
pop
inc
insl
scas
cmp
adc
jmp
xlat
divb
test
std
nop
xor
fsubrs
dec
push
mov
cmp
iret
fnsave
jmp
popf
push
mov
hlt
daa
add
dec
sub
inc
cwtl
int3
cmp
push
mov
into
sbb
loop
inc
pop
push
inc
and
and
data16
pop
cltd
pop
xor
xor
sbb
inc
sarl
adc
jg
and
xchg
fcmovnb
hlt
dec
fmuls
and
jp
imul
push
cmpsl
aad
scas
scas
das
xor
fildll
test
test
js
push
int
sbb
movsl
push
adc
and
ja
js
mov
jp
and
jne
mov
in
or
imul
imulb
addl
pop
pop
shll
cmp
mov
ljmp
add
inc
inc
push
inc
pop
or
sahf
pop
fstl
lcall
or
jb
add
loopne
addr16
mov
mov
add
dec
and
aam
mov
push
dec
stos
mov
inc
test
xor
xchg
push
test
add
fnstcw
or
push
or
dec
enter
fisubs
scas
push
cmpsl
sarb
cltd
pop
popf
mov
ss
mov
mov
cli
out
scas
xchg
pusha
cli
hlt
push
xchg
mov
enter
pushf
out
jg
les
addb
dec
repnz
and
push
jns
cmp
adc
xchg
dec
rcrl
lahf
and
jge
push
sub
add
cmp
out
or
push
add
jg
inc
stos
fdiv
adc
stc
ss
leave
add
cld
cmc
xchg
stos
sub
lahf
dec
and
lea
add
adc
add
dec
je
sub
inc
hlt
stos
out
sub
js
push
xchg
stos
adc
scas
mov
push
jno
test
in
ret
add
fsubs
dec
cld
xor
xlat
shrl
repz
icebp
popf
loopne
dec
ja
int3
xlat
adc
mov
call
xor
test
loop
jge
jmp
repz
call
push
les
jbe
jmp
mov
lock
or
aad
je
mov
es
sbb
sub
mov
testl
mov
push
aam
pop
xor
insl
xlat
jno
loop
sarl
pop
inc
xor
sbb
dec
adc
dec
mov
notl
xchg
mov
hlt
cli
jecxz
loopne
in
jne
jbe
out
enter
jmp
rorl
andl
jecxz
mov
jmp
sbb
xchg
cwtl
nop
and
push
fnstcw
mov
in
and
decl
jo
sbb
lods
inc
pop
fs
add
xor
arpl
int
fcomps
dec
push
push
pop
stos
stc
lods
inc
insl
dec
dec
add
repz
xchg
mov
insl
xor
push
test
sub
lods
fst
dec
imul
stos
cmp
jae
rorl
iret
inc
xlat
lret
hlt
dec
xor
sub
adc
xor
xor
push
push
iret
sbb
pop
int3
sti
jo
jae
insb
add
and
and
xchg
cmp
mov
outsl
or
popa
enter
pop
adc
mov
mov
int3
xchg
xor
out
into
cmp
jge
push
dec
test
and
xlat
xor
clc
aad
inc
mov
ljmp
test
xor
cmpsl
test
ds
mov
pop
cmp
lret
daa
stos
adc
aad
pop
xor
aad
ret
or
out
mov
js
das
xorb
test
sub
adc
sbb
sub
jecxz
mov
popa
roll
and
adc
sub
inc
ljmp
pusha
enter
dec
sbb
add
fwait
jo
fwait
cld
push
iret
fwait
cld
push
fsubr
jge
int3
cmpsl
in
add
lds
in
push
cwtl
stos
or
mov
das
mov
adc
cmpsb
ljmp
lea
testb
xor
dec
push
in
push
ds
sbb
daa
andb
jnp
scas
jb
or
xor
jo
loop
out
shl
push
icebp
aaa
std
mov
sahf
lahf
test
nop
jg
inc
jo
push
pop
out
test
std
and
cmp
or
andl
mov
in
sub
mov
xchg
iret
sub
adc
loope
mov
push
cmp
adc
dec
pop
outsl
sub
add
and
cmc
cmp
mov
in
loope
and
pop
and
jge
cmpsw
push
jno
jno
jb
push
loop
out
jbe
push
push
inc
push
lods
ficomps
add
jo
vpsubusb
cwtl
xor
stos
insl
jecxz
insl
mov
orl
loop
stc
in
xchg
xchg
xchg
in
cwtl
cvtpi2ps
push
and
pop
std
push
jb
fcompl
lds
data16
fsubs
imul
sbb
dec
dec
cs
jb
stos
and
loop
ljmp
js
lret
or
outsl
ret
mov
imul
les
adc
int
push
dec
je
test
fcoms
bound
add
cmp
movq
test
cmpsb
mov
pop
cltd
adc
mov
cmpsb
mov
jbe
adc
mov
cmpsl
mov
lods
je
xchg
sbb
mov
into
outsl
scas
cmp
lods
or
xchg
sbb
and
popa
enter
mov
repnz
adc
ds
mov
xor
pop
push
push
filds
adc
or
faddl
mulb
pusha
and
test
inc
jg
into
inc
push
cld
out
dec
jl
cmpsb
lret
cmp
jno
je
es
pop
clc
pop
push
sbb
addr16
mov
pop
xor
mov
and
pop
pop
iret
pop
out
rol
mov
dec
mov
repnz
mov
and
mov
cmp
and
jno
dec
inc
jecxz
test
movsl
mov
mov
jecxz
mov
cmp
xchg
and
repz
add
shl
std
inc
stos
iret
pop
cmp
xchg
jae
fstl
sbb
decb
dec
mov
nop
jg
fcomp
icebp
je
aam
scas
shll
popa
fs
cmp
mov
aad
loope
int
inc
push
adc
data16
dec
xor
jno
push
mov
shlb
addb
aas
cs
mov
add
adc
and
add
add
mov
pop
and
out
mov
cli
pop
rcrb
lea
movsl
mov
sbb
fiadds
sarb
jnp
or
stc
loop
xor
mov
lea
cmp
movsb
sbb
pop
rcl
inc
shrb
dec
aas
mov
cs
mov
stc
mov
pop
mov
dec
test
dec
test
pushf
loope
adc
loop
mov
and
add
add
js
inc
ret
push
fcoml
mov
mov
popa
jbe
pop
dec
lods
mov
cmp
repnz
lock
loopne
or
mov
ret
pop
add
xchg
stc
push
and
mov
mov
cli
cli
push
outsl
push
cmpsl
mov
pop
imul
shl
je
dec
movsl
out
loop
fcmovnu
in
dec
jb
dec
movsb
inc
cmp
xchg
shll
sub
ja
jb
xor
test
mov
pop
pop
imul
push
cs
cmp
pop
dec
scas
mov
js
dec
gs
movsl
mov
pushf
test
loope
ficoml
xchg
into
mov
es
add
data16
inc
sbb
add
pop
fwait
cmp
pop
jmp
xor
stos
adc
and
int
loopne
movsl
faddp
fnstcw
jg
stos
dec
imul
sbb
pop
pusha
mov
push
std
xchg
cli
ja
sbb
mov
incl
int
push
ss
push
push
out
fsubp
ds
stos
adc
jp
fists
ret
std
test
mov
inc
dec
cmp
pop
sbb
sbb
imulb
pop
divl
mov
jmp
xchg
nop
lcall
movsb
out
sub
dec
jg
jo
bound
adc
arpl
rorb
pop
push
add
popa
adc
sbb
add
or
and
enter
or
into
sub
fwait
es
leave
xor
pusha
mov
lret
neg
cmp
jo
pop
mov
imul
es
movsl
dec
loopne
test
push
inc
pop
andb
xchg
mov
cmp
cmp
fdivs
cmc
gs
dec
add
data16
fadd
test
lock
sbb
xorb
subb
int3
lcall
icebp
or
push
lods
pusha
jae
dec
push
or
insb
ffreep
insl
int
fcmovb
call
loope
ret
push
pop
lods
add
add
fnstenv
mov
and
pushf
es
inc
and
xor
gs
adc
pop
loopne
jbe
push
adc
into
jbe
mov
push
jle
push
sub
inc
cld
sub
lods
dec
xchg
in
dec
pop
dec
adc
sbb
sbb
fldl
into
outsb
mov
outsl
andl
dec
ja
rorb
out
jg
add
aad
cmp
mov
mov
mov
subl
pop
inc
push
mov
jg
arpl
inc
jns
push
xchg
int3
shrb
incb
push
dec
ljmp
fistpl
cmp
push
int3
insb
out
cltd
sti
daa
dec
mov
adc
jns
add
sahf
or
outsb
push
pop
mov
jae
lods
pop
inc
jp
loop
sbb
add
mov
in
mov
in
mov
cmp
push
push
daa
sub
sub
jp
sarb
pop
push
or
out
aaa
mov
stos
loop
sub
xlat
cmpsl
cmpb
push
test
add
mov
out
ficompl
loope
mov
mov
rcr
subb
sub
cltd
std
inc
or
adc
inc
pop
xor
rolb
popa
mov
jno
cld
add
inc
enter
arpl
mov
outsl
push
test
mov
popa
pop
jl
mov
outsl
push
arpl
inc
adcb
xchg
cmpsl
mov
push
test
js
inc
cmp
mov
out
ret
enter
inc
push
rolb
mov
repnz
mov
mov
in
sbb
mov
lret
outsb
xchg
adc
xchg
or
adc
push
pop
jmp
jg
ret
enter
sub
mov
js
lahf
hlt
lods
cld
test
icebp
inc
je
into
mov
mov
xchg
rcrb
repnz
fstps
nop
iret
xor
mov
rcrl
lcall
in
jle
fsub
into
les
ficoml
cmp
add
cmp
lret
push
lcall
out
adc
cs
dec
add
xor
data16
inc
sbb
mov
fs
push
mov
shl
div
push
add
add
cmp
sbb
cld
xchg
cmc
push
adc
jo
repnz
pop
or
outsb
mov
stos
mov
push
jnp
aas
push
in
or
popf
out
sub
jbe
test
out
sbb
lret
outsl
pop
lcall
icebp
aaa
jl
enter
hlt
fsubl
std
lods
sbb
jne
int3
mov
negb
dec
dec
stos
daa
icebp
jl
mov
mov
and
imul
call
adc
sub
ja
add
or
repz
pop
lock
mov
mov
push
jl
cld
adc
jo
add
data16
xchg
fsubp
jae
add
cli
gs
jl
dec
mov
jb
mov
xchg
and
in
push
adc
stos
sbb
and
rolb
cmp
out
shlb
and
xlat
and
sub
out
mov
push
lahf
sub
add
jmp
enter
sub
xor
push
xchg
mov
shl
xor
push
jbe
fbld
call
enter
arpl
cmpsb
jns
test
push
inc
push
jbe
lea
inc
outsb
test
inc
jmp
inc
sub
out
mov
andl
stos
mov
daa
dec
cmpsl
mov
fisubs
cmp
cmp
jle
mov
in
sbb
in
xor
jp
mov
outsl
movsb
adc
adc
and
lods
jle
adc
fildl
push
ja
adc
mov
and
test
push
push
mov
sti
pop
adc
cmpl
popf
outsb
daa
out
fucomip
dec
sub
push
inc
fwait
mov
mov
lods
mov
scas
sbb
or
push
dec
xchg
aas
mov
sub
scas
push
fcompl
pop
ret
imul
xchg
xor
xchg
rcr
dec
dec
sbb
sbb
sahf
stos
in
rcrl
mov
adc
add
inc
lcall
add
lret
inc
inc
hlt
sti
icebp
and
lret
dec
inc
ret
test
push
pop
jl
mov
inc
fdiv
pop
popf
add
mov
push
insl
loopne
mov
in
in
enter
addps
ds
mov
repz
inc
mov
adc
addps
repz
scas
movsb
sbb
pop
outsl
sub
or
pop
mov
pushf
sarb
dec
jne
lcall
sti
adc
and
xchg
jp
xor
cmp
cmpsl
push
movl
cltd
or
jle
subb
mov
adc
xor
popf
mov
dec
cmc
leave
sub
sub
incl
mov
test
mov
shrl
lea
jne
into
inc
push
mov
movmskps
and
fsub
aas
mov
push
sbbb
gs
addl
aam
adc
dec
dec
pop
imul
pop
jmp
ljmp
mov
sti
scas
sbb
or
jecxz
push
imul
or
stos
lret
in
cmp
sbb
mov
jg
lock
stc
or
fldt
loop
movsb
mov
popa
addl
pop
dec
fs
xor
cmpl
into
hlt
push
out
fs
xchg
int3
push
sub
jae
and
popf
inc
out
and
scas
xlat
inc
lds
clc
je
dec
popl
pop
push
outsl
push
inc
test
mov
lcall
cmp
or
gs
add
aaa
fildl
xchg
adc
jo
dec
int
test
js
xor
cld
fmul
fmuls
sub
xchg
fiadds
lahf
pusha
xchg
outsb
dec
jmp
adc
pop
pop
insl
repz
decl
add
cltd
xchg
pusha
xor
sub
adc
lds
cmpsb
js
testb
mov
pop
jle
mov
les
cltd
jecxz
dec
cmpsl
lds
sbb
repz
stos
div
mov
sbb
fwait
out
pushf
mov
jmp
mov
scas
ret
xor
or
scas
pushf
or
push
mov
xor
xor
jmp
aam
or
jl
dec
sub
jl
or
xchg
cmp
push
call
mov
lea
mov
pop
push
mov
out
ss
pop
mov
add
cmp
adc
adc
or
repz
add
cmp
ja
jns
jp
std
mov
popa
cld
add
sub
lds
fdivrs
loopne
aas
pop
adc
mov
pop
test
and
push
int
stc
in
or
mov
mov
mov
push
xor
mov
push
jb
sbb
bound
into
sub
xor
mov
fs
and
movsl
adc
pop
sub
dec
pushf
ror
repz
sub
rcrb
shrl
xlat
cwtl
scas
sub
test
inc
loopne
pop
fcoml
push
lcall
mov
in
subb
mov
movsb
test
or
sbb
xchg
stc
sub
mov
sarb
add
jmp
xor
sub
insl
fs
or
pop
jge
lds
sbb
xchg
push
fwait
mov
jmp
outsb
xchg
ret
dec
mov
mov
cmc
sub
das
out
add
push
add
pusha
fisttps
mov
subb
dec
pop
mov
jecxz
cld
lea
mov
fs
lds
imul
ror
push
mov
lea
jg
dec
jae
lea
lret
or
and
adc
movsb
and
jl
fsincos
repz
cs
fisttpl
std
mov
fsubrl
push
and
movsb
lret
test
cmp
jae
jo
mov
sbb
push
daa
jp
or
adc
push
sub
inc
cmc
cwtl
mov
cmp
mov
dec
lea
lods
ficomps
mov
mov
fmuls
sub
and
testl
loop
call
fnsave
popf
sti
cmp
sarb
ret
cld
cmpb
push
mov
adc
fst
pop
pop
xchg
add
cmp
cmp
popf
xor
mov
scas
negl
fldlg2
div
lods
or
xchg
xchg
arpl
int
mov
jnp
xchg
cmp
inc
jns
xchg
in
ret
ljmp
data16
popf
mov
dec
push
idivl
push
cmc
mov
loopne
icebp
popa
mov
and
lcall
adc
jnp
jle
out
cltd
sarb
mov
mov
inc
shll
scas
or
inc
sub
push
ret
mov
js
inc
adc
lods
push
jae
nop
push
pop
inc
aad
les
cwtl
cmpsl
mov
aaa
stos
mov
lret
push
icebp
or
adc
push
icebp
adc
in
shl
or
jne
dec
lret
mov
push
sbb
and
out
push
mov
mov
and
daa
inc
inc
rcll
xlat
xchg
mov
xchg
pop
imulb
fstpl
inc
popa
cmp
scas
jmp
in
adcb
repz
hlt
add
out
inc
movsl
das
or
xchg
jge
mov
add
pop
inc
push
sbb
add
clc
push
adc
cmpsb
jns
fidivrs
incb
lcall
push
pop
or
pushf
xchg
push
je
notl
mov
lods
inc
in
and
pop
dec
jb
inc
sbb
fldcw
orb
mov
fdivp
jne
fimuls
add
sub
xchg
call
or
scas
jge
jle
xchg
push
mov
mov
sbbb
nop
dec
fnstenv
sarl
cwtl
ljmp
enter
jp
jge
jmp
clc
inc
cs
out
inc
add
dec
inc
pop
mov
or
push
sub
aas
addl
int
aam
iret
push
inc
xor
data16
add
xchg
mov
shrl
add
and
sub
mov
clc
loope
jae
ss
xor
mov
les
pop
out
or
and
fld
cmc
jecxz
scas
sbb
popf
es
pop
test
ds
test
push
shlb
ror
jo
enter
push
or
lock
fisubl
fstp
adc
out
xlat
jne
enter
aam
sti
out
loop
and
xor
cmc
std
jae
sub
pop
cltd
push
add
mov
xchg
cmc
pop
sbb
xor
test
pop
pop
pop
jnp
xor
xchg
div
ret
push
fwait
pop
sbbl
mov
adc
xor
and
dec
daa
imul
sti
out
movsl
insl
mov
jg
cltd
insb
push
daa
andl
popa
sub
fdivr
movsl
subl
adc
jl
xchg
xor
jecxz
stos
icebp
dec
adc
or
addb
xchg
or
and
cli
sahf
loope,pn
movsl
dec
sub
adc
push
cmpsb
mov
cmp
loope
stc
pop
or
fisttpl
ret
and
sbb
pop
ds
jo
int
xor
es
mov
call
and
cmpsb
pusha
fld
jecxz
ljmp
mov
scas
jg
push
arpl
mov
jge
imul
mov
jl
ja
dec
and
in
es
adc
je
enter
stc
sub
int
out
jl
inc
loope
sub
mov
adc
loopne
xlat
mov
daa
daa
fisttps
ficomps
xor
test
xchg
sub
cmp
cmp
cmp
pop
int
xchg
aas
pop
or
sub
into
mov
inc
jbe
lds
addr16
out
daa
hlt
addr16
add
lds
popf
push
nop
sarb
sti
mov
aas
dec
adc
pusha
xchg
sbb
faddp
lret
repz
nop
adc
icebp
cmp
cmp
test
nop
cli
mov
add
push
jae
pop
mov
and
pop
mov
test
xor
xchg
leave
jecxz
mov
loope
add
aas
mov
js
test
cli
mov
pusha
add
or
push
jno
push
pusha
aaa
out
cs
jecxz
cltd
mov
mov
neg
ret
inc
xchg
sub
xor
xor
rcr
sti
sub
xor
mov
pop
jno
mov
jne
dec
ret
mov
xor
push
pop
sbb
xor
std
push
movsl
sbb
sub
les
out
ret
leave
fs
mov
fstpt
aam
int3
sub
sbb
mov
adc
ljmp
test
cmp
jmp
sbb
rcll
inc
adc
inc
lcall
in
pop
xor
jno
fdivrl
and
cmpsb
or
xchg
jge
xor
test
mov
jg
cmpxchg
fistps
fwait
scas
mov
out
cmpsb
subb
cmp
out
sbb
pushf
lret
push
loop
sub
cli
inc
xchg
stos
push
pop
or
mov
fcomps
hlt
ret
jo
iret
in
adc
pushf
data16
pusha
adc
or
fs
or
jg
subb
pop
arpl
add
jo
jo
inc
jecxz
and
sbb
adc
fnstsw
out
cwtl
call
scas
xor
cltd
mov
adc
popf
sub
out
cld
xor
mov
and
lods
outsb
push
pop
xor
scas
push
sub
and
mov
sbb
xchg
mov
add
gs
sbb
popa
adc
push
lds
inc
scas
inc
fsubs
pushf
hlt
xor
lods
jl
mov
sahf
pop
sbb
insl
or
jns
or
pop
mov
mov
fdiv
push
push
xor
fwait
js
js
xchg
or
lock
test
mov
aas
iret
loope
mov
pop
cwtl
das
mov
push
in
and
not
add
cmp
or
cmp
xor
cli
popf
mov
sti
insl
push
jno
push
pop
dec
mov
or
add
shlb
pop
je
les
mov
dec
pop
mov
sbb
adc
pop
xor
data16
aam
mov
cmp
mov
stos
sbb
jecxz
push
fsubp
pop
mov
stc
sub
xchg
pop
test
cmpsb
sbb
xchg
popa
inc
mov
cmp
stos
out
stos
shlb
out
aad
and
std
insb
inc
adc
xchg
data16
sub
jb
loop
aaa
and
mov
pop
pop
mov
mov
mov
add
dec
jae
and
add
popf
pop
lds
subl
cmc
push
orb
lret
in
push
test
sub
aaa
stos
fists
push
pop
js
mov
shll
in
inc
mov
enter
adc
cmp
jp
push
pop
icebp
shll
shl
push
jns
and
mov
push
clc
mov
xor
adc
fiaddl
jp
cmc
pusha
sub
insb
sbb
and
ss
aam
pop
repz
mov
das
push
shlb
stos
dec
inc
and
push
in
je
scas
js
lea
test
lcall
sub
js
or
mov
sub
shll
adc
loopne
jmp
inc
movsl
sbb
sub
push
idivl
out
repz
sbb
cmpsl
push
add
pushf
in
ret
add
scas
test
aam
push
ljmp
adc
xor
data16
test
sti
mov
fs
insl
test
mov
mov
repz
mov
mov
insl
std
ljmp
sub
mov
sbb
pusha
xchg
xor
mov
push
pusha
or
rorb
and
leave
cmp
sbb
arpl
jbe
sbb
pop
out
xor
and
push
cli
cs
push
mov
mov
cmp
lret
bound
dec
imull
add
xlat
dec
xchg
cmp
adc
rol
and
lock
add
pop
mov
mov
sbb
enter
push
into
popa
inc
cmp
movsl
pop
outsl
sbb
mov
shl
aam
cmp
pop
inc
xor
jb
mov
xor
and
ds
xor
testb
out
cmp
mov
mov
adc
pop
jge
sub
fnstenv
jge
jmp
or
movsb
and
movsb
jle
test
add
push
hlt
sub
outsb
rorl
fidivrs
inc
sub
rol
xor
cltd
jl
cli
repnz
inc
call
adc
pop
xchg
xchg
adc
dec
pop
ds
mov
in
pop
movsb
lods
jbe
pop
cmc
test
pop
daa
cmc
pop
xor
das
test
add
mov
bound
push
push
lcall
sub
data16
lds
jmp
into
cmp
sarb
mov
icebp
ja
fstpt
mov
arpl
xchg
add
jge
les
cmpsb
push
push
add
popa
add
add
arpl
cmp
or
mov
cmp
sbb
rcrb
rcr
fisubrs
test
mov
mov
out
inc
lds
rclb
out
xor
ds
cli
in
add
sbb
mov
dec
flds
je
sbb
mov
jne
lret
pop
sbbb
ss
mov
sub
pop
cmp
add
pusha
outsb
dec
std
icebp
pop
lahf
push
jle
sub
popa
and
add
jns
xor
aaa
stos
in
jp
push
adc
movhps
dec
fs
pop
cs
cmpl
and
lret
jne
lea
data16
lds
mov
mov
mov
adc
jae
lods
aaa
dec
jns
aam
jnp
sbb
xchg
test
mov
in
fxch
addr16
pop
scas
and
lahf
pop
jle
sahf
xor
frstor
fadd
jne
mov
hlt
lds
test
sub
push
into
sbb
divb
int3
pop
sbb
subb
addr16
push
xchg
mov
sbb
and
mov
add
push
loope
mov
pushf
dec
push
nop
push
insl
adc
pop
xor
jno
add
dec
mov
loopne
and
int
loop
mov
xchg
les
shrl
das
jp
into
cmp
xchg
or
pop
outsl
mov
adc
sub
push
push
xchg
adc
divb
int
sbb
call
push
xor
or
or
jno
sub
sbb
lahf
or
outsl
es
dec
out
xchg
icebp
lcall
or
sti
push
adc
sbb
sub
imul
add
lds
cltd
int3
insb
or
and
lods
mov
cwtl
enter
or
test
shl
dec
sub
mov
xchg
push
push
cli
or
mov
shlb
push
jns
or
cs
fistpll
push
xchg
fmull
aas
mov
sbb
fldt
xchg
ss
arpl
cltd
jne
popf
mov
add
sti
lcall
xor
xor
inc
pop
out
fidivrs
xchg
xor
mov
leave
and
lret
jmp
pop
dec
rcrb
jno
add
push
pop
orl
inc
in
pop
les
ret
pop
lock
popf
mov
cmpsb
lahf
inc
push
and
or
jmp
sub
fisttpl
xor
jns
aas
aam
filds
fadd
into
adc
stc
jae
jne
enter
dec
and
in
mov
insl
xchg
sbb
mov
cmp
cmc
adc
xchg
mov
imulb
xor
push
jo
sbb
loop
or
pop
xchg
rorl
add
cmc
sub
negl
in
cmc
outsl
dec
pop
jns
jae
lcall
imul
lock
jp
aas
int3
scas
bound
push
xor
stos
push
mul
push
mov
ljmp
jg
aad
rcll
or
jbe
ret
cltd
jle
or
cmpsl
test
or
scas
int
dec
pop
mov
lret
add
adc
ss
es
pusha
fldcw
push
or
push
jmp
bound
push
and
test
icebp
imul
aas
cmp
add
jmp
icebp
in
pop
sbb
mov
inc
in
sbb
pusha
scas
je
sub
and
leave
mov
testl
cltd
jo
movsl
push
in
rorb
pop
push
int
rcl
lds
add
sub
pop
jns
lcall
fcmovu
enter
lock
inc
xchg
pop
imul
xchg
aas
fs
std
jecxz
jno
test
and
imul
int3
mov
push
mov
popf
pop
fidivl
mov
pop
mov
mov
ds
rclb
dec
gs
mov
fcmovnu
mov
sub
sarl
jnp
sub
int3
fmull
sub
call
gs
loop
sbbl
push
in
mov
fdivl
test
xor
mov
jge
pop
sbb
xor
cltd
clc
mov
add
ljmp
inc
xor
mov
sbb
dec
in
movsl
push
inc
jne
cmp
mov
cmp
insl
mov
jbe
test
xor
inc
adc
popf
mov
testl
xor
cmpsl
sbb
ds
ret
fstps
adc
xor
inc
mov
mov
mov
fildll
aas
mov
xchg
test
mov
xchg
pop
push
inc
lret
pop
dec
pusha
fwait
testl
jg
or
mov
inc
fisttps
call
push
sbb
mov
jb
gs
cmp
and
and
icebp
jl
hlt
lods
mov
shll
adc
jae
push
ret
shrl
push
aaa
cmp
sahf
fsubrl
aad
cmp
pop
shlb
adc
idiv
fnstcw
test
inc
mov
call
push
fsubrs
cld
inc
push
cmc
mov
das
add
push
push
push
je
pop
and
inc
jo
aad
xor
mov
jo
pop
shrl
inc
test
iret
dec
pusha
cmp
sub
cmp
and
push
cmp
testl
imull
add
sub
je
xor
pop
jge
mov
stc
imul
lcall
fildll
ficompl
arpl
shlb
movb
push
stc
push
out
push
pop
int
mov
hlt
lret
sub
cmc
jp
orb
xchg
jmp
mov
xor
sub
ret
mov
xor
in
mov
std
jae
lcall
cmp
int
mov
mov
loop
lea
xlat
fnstenv
add
out
pop
jne
adc
push
pop
pextrw
push
es
inc
cmpl
fsubl
loope
add
mov
xor
shrb
sbb
aad
mov
repz
xor
push
ror
fst
pusha
fcoml
jmp
mov
cmp
data16
xor
pop
jmp
aas
pop
call
lea
push
xchg
les
mov
sub
lods
gs
ss
cmpsb
gs
sbb
mov
pop
mov
int3
cmpsb
std
dec
sub
mov
fs
xchg
adc
mov
scas
sbb
pop
mov
pop
addr16
loopne
lcall
or
daa
stc
sub
enter
cmp
inc
xor
stos
pusha
aad
addr16
negl
xlat
cmp
cmp
jge
pusha
push
addr16
bound
cmp
sahf
inc
inc
mov
sbb
mov
push
dec
sti
mov
inc
mov
mov
pop
cmpsb
rcrb
jp
pop
daa
in
das
pop
xor
testl
ss
outsb
xchg
dec
push
jmp
inc
aam
add
pusha
jo
mov
sbb
mov
stos
les
out
in
xchg
push
outsb
movsl
popa
sbb
jp
mov
lea
push
cmp
mov
mov
stc
xlat
push
in
ret
imul
xchg
push
inc
incl
sbb
je
repnz
cli
sub
push
insb
call
gs
rorl
add
cli
js
rcl
fwait
in
adc
das
std
inc
cmp
push
sbb
inc
inc
pushf
andl
in
or
in
xor
cmc
fdivrs
or
xor
mov
xchg
xor
xlat
xchg
cld
lds
fs
out
sub
mov
int3
mov
pop
dec
jge
sub
pop
cltd
inc
xchg
leave
xchg
mov
jle
ret
aas
mov
cwtl
ficoms
cld
push
mov
nop
fisttps
insl
cld
push
mov
inc
ja
adc
cld
mov
or
mov
leave
xor
in
ss
fdivrl
mov
in
sub
fidivrs
push
aas
xor
sub
in
cmp
dec
sub
popf
ss
or
add
iret
cld
jg
insb
sub
test
pusha
jecxz
add
mov
push
mov
enter
movsl
add
push
xchg
test
dec
outsl
mov
adc
aad
mov
sub
or
ret
mov
push
gs
push
cmp
sbb
push
lds
cmc
ret
xor
ljmp
push
subb
add
inc
push
push
mov
stos
testb
aas
push
imul
push
push
xchg
mov
mov
adc
mov
cmp
jbe
rorl
cmp
mov
dec
mov
imul
sbb
jo
call
and
sub
jecxz
rorb
nop
push
mov
hlt
mov
adc
mov
movsb
or
xchg
mov
inc
in
popf
jle
popa
fwait
fwait
pop
pusha
jg
dec
loopne
jl
cmp
gs
pop
and
mov
inc
xchg
cmp
shrb
mov
sbb
xor
stos
xchg
ss
and
shrb
mov
adc
lret
cld
cmp
cmc
inc
movsb
shlb
or
mov
push
outsl
jp
scas
test
test
popa
push
inc
mov
inc
push
sub
adc
or
push
fidivrl
mov
jp
pop
inc
mov
gs
xor
pop
enter
jo
pusha
test
sahf
insl
aas
push
xor
mov
bound
sbb
push
bound
lea
dec
pop
movsl
movsl
push
call
push
hlt
push
cmp
lahf
pop
enter
jo
adc
mov
mov
xor
mov
cmpsl
xorl
add
shll
sub
cmp
mov
cmp
push
adc
mov
ret
in
decb
enter
aaa
pop
pop
mov
or
xor
gs
cltd
int3
es
xchg
mov
jl
or
sub
les
loop
inc
push
popf
cwtl
or
aam
jo
sti
lods
add
addr16
loopne
lcall
mov
pusha
mov
in
jle
rorl
hlt
bswap
loope
mov
ret
push
xchg
dec
subl
loop
mov
mov
scas
mov
pop
lods
pusha
scas
call
mov
dec
xor
in
cmp
ja
push
ud2
movsl
mov
cwtl
dec
popa
push
rcl
inc
je
pop
in
icebp
jb
les
clc
in
loope
je
cmp
xchg
or
lahf
pop
je
pop
dec
lea
negl
lds
jg
test
int
sbb
adc
stos
fadd
xor
mov
jle
xor
add
arpl
mov
fsubrs
sbb
dec
rolb
mov
and
pop
push
movl
ljmp
pop
or
std
pushw
mov
fsubs
and
aad
xor
jmp
mov
les
cmp
adc
push
iret
pop
and
jecxz
mov
jbe
addl
dec
xor
in
adc
cmp
shll
mov
xchg
lods
lea
imul
xlat
pop
jo
mov
push
dec
pop
pop
inc
int3
repz
out
pusha
xchg
pop
aad
mov
mov
fnsetpm(287
and
or
ja
sbb
cmp
mov
push
jae
fnstcw
fidivl
and
movsl
lahf
lcall
stos
xchg
into
mov
into
xchg
pop
out
jb
je
xor
dec
push
lods
add
mov
rorl
dec
jmp
fildl
aam
xor
inc
add
adc
fcmovu
out
sub
add
in
sbb
test
adc
divb
loope
pushf
mov
daa
sbb
jae
push
cmp
mov
jno
sbb
stc
bound
xchg
sub
push
sub
into
out
mov
mov
aas
add
fsubr
je
outsb
push
mov
ds
mov
call
inc
lcall
gs
add
in
lds
cld
in
in
movsb
hlt
hlt
mov
sub
int3
sbb
in
sbb
arpl
insb
jno
sub
sbb
cltd
icebp
sub
notb
leave
mov
out
pop
rorl
das
fldl
mov
or
xchg
mov
jmp
xor
fwait
mov
sbb
ret
inc
mov
sub
jecxz
mov
add
pop
shl
inc
jge
in
jmp
repnz
push
loopne
subl
push
cmpsb
into
cmovs
inc
popl
lock
in
into
sub
push
mov
stos
jno
or
jb
or
xlat
subb
inc
cmp
daa
cmp
xorb
test
je
push
mov
inc
jae
xor
inc
fcomp
subb
shll
imul
out
shrl
ficoms
aas
ds
mov
lds
out
sbb
lods
int3
ljmp
fdivs
mov
flds
dec
sbb
mov
in
aaa
dec
push
fistps
sbb
adc
xor
pop
mov
das
pop
sbb
outsl
mov
mov
push
roll
mov
cmc
das
rcrl
es
mov
jne
jbe
add
inc
scas
loop
out
mov
jecxz
out
nop
adc
std
insl
imul
sub
pop
fmul
in
dec
ss
push
cwtl
or
add
ret
jp
sbb
sbb
xchg
mov
dec
imulb
add
das
mov
ret
scas
sbb
lret
mov
inc
sti
sub
loop
ja
js
xor
adc
pop
popf
lea
or
rclb
movsl
test
lahf
outsl
xor
sbb
cs
clc
into
dec
lods
pushl
bound
add
cmp
push
adc
inc
adcb
mov
bound
fildl
pop
dec
push
xlat
xchg
xor
dec
clc
enter
into
js
xor
jl
pop
xchg
dec
fisubs
dec
push
rcll
insl
clc
out
pop
fs
aam
out
cltd
inc
pop
pop
adc
loope
xchg
test
bound
insl
sub
xor
mov
mov
imul
push
cmp
lea
andl
push
je
push
mov
mov
cmpsb
leave
jge
ljmp
imull
xor
jmp
pushf
mov
or
push
jle
sbb
pop
cmc
or
dec
pop
or
scas
jno
sbb
sahf
mov
sub
xor
sbb
out
or
imul
outsb
nop
jl
push
jnp
in
movsl
lods
fimuls
mov
xchg
mov
loop
hlt
orb
sahf
fs
mov
movsb
cs
or
or
sub
imul
mov
loope
adc
ja
inc
pop
nop
pushf
xor
push
in
cmp
lea
push
jl
data16
mov
cmp
loope
rcrl
push
idivb
or
aaa
xlat
adc
out
add
xor
or
sbbb
pop
dec
lea
pop
xor
mov
sub
fsubrl
jg
arpl
fs
enter
push
jbe
ss
sbb
cltd
call
pop
push
jl
ficompl
jecxz
dec
pop
pop
jno
subb
pop
in
call
dec
mov
cli
rcrb
or
and
test
mov
mov
hlt
pop
or
sub
aam
dec
sub
adc
pop
and
mov
sbb
add
roll
leave
mov
mov
arpl
sub
inc
or
icebp
adc
cmp
mov
or
cmp
nop
dec
std
jb
test
adc
lods
push
jg
lahf
jnp
in
cmc
nop
call
arpl
insl
mov
outsl
adc
mov
xchg
dec
imul
jle
fbstp
pop
xor
mov
fisttpll
or
xor
jnp
arpl
or
lock
aaa
cld
pop
or
bound
dec
sbb
int3
test
fs
and
sub
sbb
ret
or
push
repz
fwait
mov
mov
mov
testl
leave
xor
jecxz
roll
loop
rcrb
pop
cmp
mov
push
bnd
inc
mov
aam
lret
repz
jecxz
mov
dec
mov
and
negl
fldenv
fcmovb
xor
shlb
movsl
dec
sub
testl
jle
ljmp
mov
cmp
and
ljmp
loope
sbb
xor
push
adc
push
dec
cmpsb
test
loopne
dec
sahf
lock
sbb
ror
adc
int3
xchg
jae
adc
dec
xchg
shrl
inc
mov
sahf
out
cmc
jne
adc
das
rclb
jne
lcall
fnstenv
cltd
push
mov
adc
or
std
push
pusha
out
cmc
dec
inc
mov
jge
lret
out
or
adc
mov
mov
cwtl
push
jb
ja
mov
pop
movsb
cli
faddl
stos
xor
jl
notl
jns
dec
aam
pop
push
xchg
inc
jo
sbb
push
adc
xchg
ret
lds
push
or
inc
mov
cmp
imul
out
daa
divl
inc
push
lahf
clc
inc
iret
fldl
lea
sub
fldenv
mov
popf
jnp
adcb
mov
jae
ffree
mov
dec
push
push
sbb
ret
inc
mov
bound
adc
stc
mov
pusha
xor
lret
andb
sub
or
inc
sbb
xlat
int3
adc
xchg
addr16
cld
pop
outsl
xchg
adc
add
and
xchg
jp
addr16
arpl
ret
out
inc
out
mov
fists
add
sub
sub
out
inc
mov
cs
add
inc
shlb
pop
push
inc
insb
adc
mov
loope
pushf
xor
cmc
mov
call
inc
xchg
push
aas
sub
add
rolb
pop
shll
or
sub
cmp
dec
lret
push
test
jbe
sti
fisttpl
cmc
clc
lods
and
lock
psrld
fidivrs
cmp
test
js
test
push
int
inc
push
daa
xor
pop
jge
add
mov
mov
pop
add
xchg
subl
test
lods
add
or
sarb
in
cld
xchg
push
mov
enter
insb
ffree
dec
inc
popf
lods
cmp
jne
leave
xchg
fidivs
dec
xchg
ja
push
into
rcll
loop
push
out
adc
cmc
aas
mov
mov
xchg
inc
sub
xor
cmpsb
popa
xchg
add
push
jb
movsl
jg
and
mov
mov
sbb
loopne
pop
out
xchg
ja
lret
mov
and
pushf
pop
add
push
test
mov
inc
push
sbb
test
pop
cmp
es
lods
jne
fwait
imul
pop
nop
adc
call
pushf
outsb
sbb
stc
outsb
movl
dec
push
in
inc
fxch
adc
daa
in
lods
in
daa
lret
add
mov
pop
repz
sub
mov
and
and
xchg
je
je
lods
mov
adc
cmpsl
cmp
insb
cmp
std
mov
popl
sahf
xchg
arpl
cmp
add
sub
leave
andnps
ljmp
ror
fsubrl
mov
fnstenv
xchg
lods
mov
mov
add
push
mov
nop
cwtl
out
mov
aaa
xchg
or
push
jo
into
in
inc
jecxz
test
mov
add
pop
mov
pop
dec
jge
inc
data16
and
mov
jl
xchg
push
js
ja
test
roll
subps
jle
fildll
aas
dec
xor
mov
dec
lock
gs
fildll
call
adc
jb
or
jb
fadds
pushf
lds
nop
mov
loopne
ret
dec
adc
inc
cmp
cmpl
in
dec
repnz
enter
mov
xchg
enter
mov
or
mov
inc
xchg
std
mov
or
pop
test
idivl
inc
pop
xor
call
popf
mov
daa
mov
lcall
cltd
cmp
mov
outsb
mov
mov
cmp
fldl
push
pop
sar
vpsraw
ficomps
xchg
xor
inc
mov
or
xor
movsl
cmp
jmp
xlat
popf
hlt
cld
add
aad
mov
push
pop
aas
std
iret
insb
xchg
sub
stc
in
push
xchg
in
mov
or
addb
xor
fnstsw
cmpsb
sbb
mov
test
and
xlat
mov
cmp
inc
and
ret
or
xor
pop
pop
fimull
mov
loopne
xor
sbb
lods
icebp
arpl
or
cld
add
rep
push
push
jg
ss
lret
inc
pusha
fnstenv
rcl
in
pushf
repnz
aas
jns
sub
pop
ss
repz
jae
cmp
cmp
xchg
shrb
xchg
fwait
mov
cmc
mov
xchg
subb
add
ficoml
in
sub
dec
js
scas
aam
icebp
test
xlat
xchg
jge
jmp
out
cltd
movsl
popf
jb
lock
mov
cmp
cmp
mov
adcl
test
push
push
rcrl
outsb
ret
jg
mov
or
mov
imulb
add
test
mov
or
paddusb
xchg
icebp
fdiv
mov
sub
adc
fcmovbe
pop
cwtl
push
fildl
dec
add
cmp
mov
jae
push
xchg
adc
mov
imul
sbb
ja
out
sbb
adc
mov
mov
clc
aas
fbld
stc
jl
roll
push
jl
in
cmp
pop
dec
test
movsb
lret
ljmp
or
cmc
jae
clc
test
das
inc
adc
add
out
push
or
or
hlt
push
sub
iret
and
inc
popf
mov
lea
ret
ret
adc
out
cwtl
arpl
mov
js
dec
sub
andl
pop
pop
sub
fildl
in
mov
inc
mov
or
test
sti
push
pop
push
jge
addr16
shrl
sbb
pop
in
mov
stos
out
inc
jmp
fidivrl
add
push
cltd
xchg
or
cltd
sarl
fisttps
adc
cmc
das
invd
sub
pop
add
dec
pop
jbe
push
cs
lock
out
adc
aaa
andb
lods
xchg
sbb
into
pop
mov
mov
cmp
cmp
mov
pop
dec
shrl
or
je
out
hlt
cwtl
adc
push
popf
inc
cmpsl
pop
or
cmp
jp
xchg
sbb
mov
ljmp
push
push
lret
mulb
lds
jl
jbe
xor
xor
icebp
dec
push
sub
lret
or
adc
clc
leave
dec
jae
insb
add
cmp
sahf
mov
into
iret
jo
dec
adc
das
stos
or
inc
pop
pop
dec
test
mov
js
sub
inc
ss
xor
nop
sbb
xorb
mov
mov
lods
mov
cmp
and
cli
js
int
add
xor
xorb
xchg
sbb
sub
adc
loope
sub
mov
push
in
iret
pop
fsubrs
and
repnz
into
out
cwtl
data16
pop
cltd
add
lock
pop
inc
fildll
xor
mov
das
push
jbe
fisubrl
arpl
jns
xchg
jle
fld
in
imul
mov
jmp
mov
push
or
idivl
sti
leave
adc
cmp
fs
mov
jmp
aas
mov
stos
insl
or
dec
xchg
pusha
leave
dec
mov
adc
lret
sarb
fstps
mov
leave
sti
xchg
mov
aaa
push
push
mov
call
push
int
ja
adc
cwtl
xchg
inc
je
add
add
jmp
jb
push
xchg
mov
scas
bnd
std
push
jae
sahf
pop
cmpsl
push
mov
movsl
mov
testb
sbb
mov
ret
repnz
stos
aad
cmpsl
jnp
or
stos
mov
mov
loopne
mul
sub
pop
fst
pop
jns
ret
iret
jns
insl
sbb
push
mov
sbb
jnp
push
add
jbe
adc
iret
pop
pop
or
inc
jmp
scas
lahf
and
dec
sub
jbe
mov
mov
std
push
insb
je
clc
out
sub
pop
add
loop
inc
in
xchg
add
gs
mov
notl
jbe
add
or
add
ret
addb
dec
mov
movsl
dec
pop
push
movsb
test
push
add
imul
ljmp
add
mov
lock
push
mov
pop
int
push
cli
push
pop
inc
sub
in
xor
inc
or
ds
ficompl
fdivr
mov
sbb
sbb
push
arpl
adc
dec
jo
fidivl
xchg
in
cmp
ja
or
addb
and
push
mov
xchg
call
das
fs
push
clc
inc
pushf
and
adc
xor
es
insl
inc
mov
loop
mov
sub
mov
lret
mov
inc
sbb
aas
mov
pop
dec
lret
xor
out
dec
pusha
cmc
mov
das
add
testb
fnstcw
mov
inc
cmp
sub
test
push
jb
lods
loope
add
mov
sbb
movsb
add
cmp
mov
psubb
lret
cltd
outsb
daa
ret
jmp
ljmp
outsl
stos
mov
nop
iret
inc
push
arpl
or
out
lock
loopne
add
mov
adc
ds
mov
pop
xchg
xlat
rcll
popf
dec
add
xchg
inc
xchg
lcall
mov
int
in
push
sbb
pop
les
in
out
insl
inc
testl
mov
ret
jge
das
push
sub
pushf
pop
push
fdivs
xor
or
jbe
or
sbb
repz
outsb
mov
ret
sub
stos
dec
sbb
mov
jae
cmp
fst
and
jecxz
push
mov
jle
call
cmp
cmpsb
ret
inc
stc
and
int
into
aas
lods
movsl
test
xchg
iret
mov
sbb
pop
jge
mov
mov
dec
lret
lcall
fcoms
or
imul
mov
dec
mov
in
add
inc
pop
jnp
xchg
mov
repnz
test
in
mov
in
mov
sbb
mov
mov
daa
inc
int
movsb
sub
mov
adc
shrl
dec
insb
loop
xchg
xor
filds
dec
xchg
mov
mov
lock
out
jge
popa
sti
sub
cmp
add
jne
mov
pusha
and
lahf
aas
pcmpgtb
pusha
xchg
iret
mov
jecxz
xor
sbb
aad
push
into
sub
into
sbb
fiaddl
jmp
add
push
in
sbb
pop
shl
push
push
mov
mov
pusha
jge
inc
push
xchg
out
ja
cmp
pop
jg
popf
lods
stos
mov
and
add
movsb
mulb
ret
scas
aaa
ret
fsubrp
mov
inc
push
mov
cmp
jge
xlat
hlt
lcall
mov
nop
lock
dec
rorb
ljmp
fcomps
inc
outsb
pop
insl
inc
mov
jne
mov
adc
and
jp
cmp
lea
clc
mov
push
xchg
and
je
mov
cltd
xchg
jmp
insl
and
add
jae
aad
jne
ficomps
xchg
mov
sub
imul
pusha
push
xchg
push
aad
pop
xor
mov
fcmovnu
xchg
les
inc
pop
inc
mov
stos
movsb
js
sub
mov
dec
adc
cltd
mov
ljmp
add
stos
mov
inc
into
int
pop
mov
mov
call
add
movsl
ljmp
lock
lahf
push
mov
pop
and
xchg
mov
jns
icebp
loope
addr16
shl
icebp
xor
pop
shlb
cmp
xlat
lret
xor
push
cmp
jg
repnz
cmp
xchg
out
rcrb
mov
iret
or
and
adc
xchg
lock
pop
mov
shr
popf
out
and
or
mov
mov
sub
ljmp
scas
xlat
inc
cltd
or
out
jne
adc
push
es
dec
and
xor
incb
ret
mov
shr
sub
pop
or
and
push
jmp
pop
mov
hlt
movb
sbb
jnp
adc
rcrl
mov
adc
inc
fldt
and
ja
scas
mov
shrl
mov
aad
sub
mov
int3
mov
inc
mov
or
pop
fidivrs
pop
mov
mov
fcmovnb
outsb
and
xchg
jne
andl
sbb
sbb
je
sub
pop
cmp
pusha
mov
dec
popa
xlat
add
push
call
mov
cmp
jo
add
add
aas
je
fildll
js
mov
mov
or
pop
mov
daa
lret
pop
jae
mov
and
lods
inc
pop
test
adc
aad
sub
xchg
sbbb
jbe
xor
add
lcall
add
push
push
inc
push
test
mov
addr16
mov
mov
mov
push
outsl
pop
push
fst
mov
sbb
pop
dec
in
jl
in
mov
arpl
lahf
and
mov
lcall
out
or
pusha
je
jle
push
push
adc
add
pop
mov
mov
rolb
pop
call
scas
jl
xor
pop
pop
cmp
in
push
idiv
push
xor
mov
stos
and
test
dec
add
in
cltd
or
sbb
scas
jbe
push
jl
xchg
idiv
jge
lahf
mov
xor
or
arpl
mov
or
cli
or
ror
xor
fcom
add
add
hlt
test
stos
xor
dec
imul
movb
xor
roll
mov
or
inc
in
and
adc
rcrb
mov
cltd
negl
jne
icebp
rorb
rcll
jecxz
add
hlt
sub
loope
cwtl
mov
int
sbb
lds
int
push
cli
int
xchg
test
aam
jmp
fdivs
ss
lods
jmp
xor
adc
cwtl
int
xchg
push
jmp
das
fnstenv
int
in
jno
mov
filds
mov
jg
or
jmp
xlat
idivl
mov
fcoms
loop
inc
xchg
dec
incb
jle
gs
shr
movsb
insb
into
add
ja
xlat
inc
adc
cli
mov
push
addb
pusha
inc
sbb
pop
daa
mov
hlt
shl
gs
xor
jle
pushf
shll
stos
movsb
adcb
dec
ret
cmp
arpl
lcall
xor
adc
sub
mov
or
fdivrs
inc
inc
pop
sbb
push
fstl
fimuls
outsl
xor
cli
adcb
jnp
push
cmc
or
sub
xlat
in
cmpsb
movsl
xchg
sbb
ljmp
xlat
xor
rcrl
bound
sahf
repz
dec
mov
dec
adc
mov
ss
pushf
mov
sub
mov
mov
cmpsl
mov
mov
jecxz
pop
daa
mov
mov
mov
pop
mov
lret
inc
jp
cmpsb
sbb
in
xor
lcall
xchg
inc
fs
fidivrl
jg
push
je
repz
ret
out
fildl
je
xor
pop
jns
xchg
sbb
dec
outsb
sub
jp
jmp
inc
scas
mov
lods
jno
aam
loope
xchg
cwtl
sub
dec
cli
lods
add
enter
out
clc
xor
xchg
insb
add
jne
movsl
pop
inc
imul
mov
fisubl
outsl
mov
and
sub
dec
mov
cld
icebp
sub
int3
addl
movsl
jne
xorl
call
xchg
xchg
cmp
push
insb
insb
and
popa
sub
adc
jle
test
push
jp
or
ret
scas
sub
sahf
sti
sub
mov
inc
std
fsincos
jno
mov
pop
dec
test
aad
sti
stc
pop
xor
loop
push
jl
cld
xchg
movb
cmp
lahf
xchg
out
fdiv
cmp
loop
inc
pop
mov
outsb
jecxz
outsb
jle
or
inc
orb
pop
arpl
xchg
add
icebp
xchg
add
sub
jnp
pop
push
inc
das
push
sub
sbb
cltd
jne
int3
fwait
aad
inc
test
out
adc
add
mov
popf
pop
xchg
cmp
and
insl
scas
aaa
aam
xchg
sub
adc
sbb
xor
xor
xchg
sbb
stc
cmp
das
lea
cli
push
push
fcomps
out
pushf
js
pop
sti
scas
fisttpll
bound
sbb
fldenv
loopne
imul
mov
cmp
cmp
or
mov
mov
out
xchg
or
sbb
and
sbb
scas
mov
mov
jbe
mov
xchg
imul
sahf
repz
pop
push
out
addr16
into
decb
fsub
std
push
lret
sbb
sti
push
pop
push
test
add
nop
sti
call
sbb
xchg
cmc
or
sbb
xlat
call
and
jle
stc
mov
jge
mov
cld
cmp
lea
cli
xor
or
mov
push
imul
jae
cmp
mov
cmp
push
sub
add
stc
inc
iret
mov
sub
push
nop
and
jns
xchg
push
xor
data16
adc
mov
movsl
mov
cwtl
xchg
aam
pop
pop
add
add
or
test
in
pop
mov
ja
hlt
rol
stos
bound
movb
test
xchg
jecxz
pop
sar
call
push
inc
out
outsb
xor
clc
bound
psubq
ljmp
orb
push
pop
or
mov
shlb
or
cmp
pop
pusha
pop
sbb
mov
test
dec
xchg
or
sbb
lahf
xor
stos
or
mov
fadds
add
sar
xor
movsl
dec
jmp
jg,pt
sti
cmovno
stc
insl
cltd
pop
lods
cs
loop
xorb
sub
push
loope
xor
xor
adc
pusha
cmp
inc
addl
add
ret
fdivr
pop
mov
iret
push
mov
jge
mov
pushf
sub
lea
call
mov
test
das
jecxz
scas
fsubs
add
push
push
daa
push
call
es
lea
out
ljmp
into
mov
pop
in
aas
or
xchg
xor
xchg
scas
lahf
mov
sarl
rcrl
jno
push
lds
scas
and
cmp
xlat
adc
push
add
cld
nop
loop
push
push
xchg
in
in
scas
sub
xor
xchg
mov
fisttpl
or
movsl
gs
mov
xchg
sbb
lahf
insl
or
cmp
shrl
mov
daa
movsl
sahf
test
or
test
jg
mov
pop
push
out
dec
xchg
scas
fimull
out
sbb
das
pop
mov
cwtl
clc
mov
or
les
lock
cli
test
in
cmpsb
hlt
push
mov
fiadds
or
shrb
data16
outsl
daa
lret
stos
xor
clc
addr16
iret
rol
cmpsl
and
cld
lods
das
push
sbbb
push
jge
xchg
jge
orb
lret
sbb
ljmp
jbe
xchg
mov
rolb
call
shll
repz
push
cmp
clc
push
mov
xor
sbb
push
and
jmp
pop
add
mov
shll
imul
mov
cwtl
and
ljmp
adc
push
fsubs
data16
xorb
pop
sbb
stos
mov
bound
lock
or
cmpsb
mov
push
scas
mov
add
cs
pop
enter
leave
and
in
and
ja
hlt
adc
xor
test
push
sub
ljmp
ss
cmp
leave
xor
test
ss
test
push
ret
or
hlt
pop
xor
adc
out
or
add
adc
in
mov
mov
cmpsb
xchg
pop
testl
das
out
pop
inc
jno
lret
push
insb
daa
pop
lret
sbb
mov
push
or
fstpl
jae
paddsw
int3
fldcw
inc
into
cltd
imul
cld
repnz
jle
aas
jle
mull
mov
leave
lcall
mov
xor
lret
mov
or
sub
out
mov
mov
sbb
sub
mov
add
int
cs
lock
ja
pop
mov
neg
inc
out
jge
sbb
sbb
addr16
jns
mov
mov
lods
inc
cli
or
clc
call
pop
ret
xor
push
leave
xchg
push
jno
arpl
xchg
lcall
clc
cmpsb
insb
mov
push
xchg
sbbl
gs
addr16
adc
es
movb
mov
nop
call
cmp
arpl
sbb
push
jbe
pop
mov
aad
sub
rolb
xchg
lock
dec
pop
mov
xlat
xchg
inc
and
lea
jge
xchg
enter
fistps
xor
jge
pop
add
repz
or
push
rorb
push
xor
inc
add
out
push
dec
jl
mov
adc
mov
aam
ret
jb
sahf
mov
js
enter
mov
pusha
je
pop
jb
and
or
add
and
insl
jmp
rolb
test
out
call
jbe
rorl
jle
cmpsb
mov
daa
test
addr16
push
push
sub
std
in
sub
sbb
push
cmpsb
fbstp
xor
enter
pop
and
push
mov
xor
movsb
leave
jmp
stos
xchg
sbb
xchg
cmp
mov
sbb
fidivrl
dec
pop
xor
out
cli
out
cmc
mov
pop
push
nop
pusha
cmp
adc
data16
mov
pop
lcall
mov
and
push
xchg
cmp
inc
repz
lods
inc
roll
mov
fisubrs
movsl
lods
xor
cmpb
mov
sbb
leave
fsubl
inc
scas
mov
cmp
xor
pop
jge
jb
aam
cmp
inc
cmp
jae
inc
add
pop
xchg
fs
pop
inc
mov
clc
push
lock
fnstsw
addl
push
sbb
push
xor
xor
dec
pop
leave
fnstsw
fs
sub
xchg
push
xchg
and
pusha
jbe
jne
mov
pop
jge
xor
mulb
aam
das
adc
or
mov
sbb
imul
in
movsb
sub
cltd
mov
push
xor
subl
loopne
xor
jno
jnp
or
ja
daa
jg
or
test
inc
out
jb
movsb
leave
inc
jne
xor
and
inc
ret
adc
cmp
scas
xor
sbb
add
sbb
lahf
add
adc
scas
shrl
xor
dec
xor
lea
movsb
lahf
popf
mov
mov
lcall
out
rorb
lcall
stc
push
mov
mov
pop
out
cmpsb
out
jmp
push
daa
jmp
iret
xchg
adc
outsl
and
mov
pop
adc
shrl
push
dec
arpl
jne
gs
mov
xor
fmulp
sti
pop
mov
mov
int
pop
sbb
mov
js
mov
inc
repnz
inc
and
mov
in
xor
mov
test
push
sbb
cmp
pop
and
les
loope
dec
in
sahf
push
sbb
xchg
imul
nop
fiadds
int
pop
outsl
pop
xor
add
push
jl
xlat
sti
mov
ja
jg
lds
int3
or
movsb
sbb
lret
icebp
adc
ja
loop
mov
std
cltd
cltd
lcall
je
stc
cmp
jnp
xchg
cmp
dec
inc
fsubl
loopne
int3
or
mov
mov
and
sbb
repz
push
cmp
xchg
mov
adc
jle
sub
fbld
jae
pushf
in
ret
in
jb
mov
mov
stos
rclb
inc
push
inc
and
mov
jno
push
xchg
insl
jnp
sub
daa
jmp
jmp
sub
mov
stos
mov
sub
mov
adc
stos
mov
and
cmp
push
jecxz
cmp
or
in
mov
fwait
lods
mov
mov
mov
and
push
sbb
sub
pop
sub
daa
scas
xor
lea
pop
gs
cmpsb
in
pop
ret
addr16
xor
cmp
pop
cltd
fwait
std
test
fistl
mov
insl
scas
in
inc
sbb
popa
loop
mov
test
test
xchg
xor
mov
push
pop
lds
dec
in
mov
and
imul
fs
xlat
into
cwtl
data16
add
int3
addl
add
imul
repz
adc
or
cmp
add
cmp
test
cmpsb
or
jge
xor
daa
nop
imul
pusha
ss
push
test
fcoml
sbb
push
jecxz
ror
add
jmp
mov
call
mov
fisubl
add
and
or
int
hlt
push
mov
pop
dec
adc
pop
jecxz
cmpsl
push
jb
mov
cmp
xchg
or
mov
je
jb
stc
icebp
ja
mov
cmp
aam
jmp
idivl
sub
push
mov
fistl
inc
rorb
push
in
fmulp
and
stos
cltd
mov
lods
lcall
jge
xlat
pop
loop
or
sti
pop
sbb
cli
push
les
push
xlat
dec
mov
add
gs
jecxz
notb
andl
cwtl
mov
dec
mov
dec
dec
xorb
movsb
ja
jbe
int3
sbb
xchg
or
push
pop
push
jne
or
ffreep
or
and
jl
data16
cld
fistps
mov
inc
jl
mov
test
xlat
push
xor
sub
mov
call
mov
add
adc
outsl
shll
ds
pop
add
push
outsl
mov
xor
test
mov
popf
shl
addl
faddl
shrl
dec
push
xor
jg
xlat
aas
repz
and
mov
adc
lods
outsl
adc
int
aas
cmp
adc
push
sub
adc
jp
addr16
in
pop
add
mov
rol
pmuludq
add
add
pop
es
inc
mov
flds
xor
push
adc
ror
mov
push
pop
cmp
and
lea
cmpsl
jle
sbb
orb
cld
lea
push
pop
jns
add
adc
scas
gs
xchg
xor
jecxz
xor
call
xor
gs
bound
scas
stos
mov
aas
xchg
jae
jbe
popa
mov
test
fdivs
and
inc
jp
insl
insb
in
mov
iret
stc
idivb
xlat
iret
pop
std
pop
mov
mov
jmp
js
cmpb
imul
lcall
push
cmp
cmc
xor
test
cmp
rcl
and
or
lds
jp
cmc
xor
aas
clc
jge
mov
inc
daa
mov
test
pop
daa
xchg
iret
jns
cmp
popf
mov
mov
mov
aam
mov
mov
dec
mov
xchg
jg
je
loop
inc
pop
and
push
stc
add
insl
xor
inc
leave
cmpsb
int3
adc
mov
aad
pop
dec
lret
dec
cmp
out
movsl
dec
popf
pop
rcrl
fldt
stc
mov
inc
dec
add
xor
mov
mov
ljmp
ljmp
inc
add
jns
cmpsb
das
cmp
lock
test
lcall
repz
idiv
mul
dec
cwtl
ja
shrl
mov
je
inc
scas
loop
mov
xchg
shll
adc
icebp
outsl
jae
bound
mov
fsubrs
mov
mov
fwait
cmp
pop
lock
inc
mov
lods
mov
sti
loope
fldcw
xchg
push
mov
stos
in
xor
lods
xchg
stos
sub
mov
sub
jle
add
jo
adc
addr16
movl
sub
cmp
stc
sbb
popw
sub
lret
in
test
into
dec
into
or
cmp
jge
mov
bound
mov
popf
fwait
stos
stc
loopne
lock
mov
loopne
clc
lcall
and
ljmp
add
mov
mov
ds
jmp
inc
and
xor
jno
adc
inc
push
lock
inc
cmp
pop
add
cli
sarb
in
rol
test
or
sbb
push
fs
xchg
add
jecxz
adc
push
iret
jge
push
mov
dec
hlt
arpl
mov
inc
cmp
or
inc
or
add
xchg
jl
pop
popf
cwtl
loop
mov
fwait
or
push
dec
xor
ficoms
outsl
cld
pop
ret
or
enter
lcall
xchg
sub
jnp
sub
popf
add
pop
outsb
and
outsb
jmp
mov
pop
inc
cltd
js
sub
ret
lret
adc
or
jp
dec
inc
cltd
or
or
jp
mov
fmulp
sbb
call
mov
dec
cmp
mov
xor
idivb
insb
popf
pop
add
xor
xorb
mov
adc
rcrl
push
cmp
stos
leave
pop
lcall
jno
daa
test
cs
nop
cmp
sbb
jns
xor
int3
cmp
jp
roll
jl
or
out
cmpsb
pop
dec
ret
cmp
das
jl
lea
and
sub
mov
std
cwtl
inc
into
scas
cmp
leave
xchg
pop
in
mov
divb
or
mov
lahf
jmp
call
inc
or
add
dec
dec
mov
icebp
movsb
xchg
or
pop
ss
aaa
fdivrl
pop
pusha
jl
mov
in
adc
mov
jb
sub
cmpsb
je
mov
insb
mov
test
subb
mov
pop
xchg
push
popa
femms
cmp
icebp
outsb
dec
repz
pcmpgtb
pop
sbb
stos
mov
push
cmp
dec
mov
ret
subb
filds
jnp
pop
pusha
cmp
pusha
adc
mov
sbb
xor
fimuls
xchg
in
in
sbb
popa
jmp
shrb
frstor
lock
out
and
sbb
inc
add
inc
sbb
mov
pop
out
sub
mov
or
dec
lcall
ss
push
push
mov
mov
or
mov
iret
pop
mov
stos
lock
iret
pop
jp
mov
aas
xor
push
pop
lcall
push
sbb
add
pop
mov
xor
cmp
sarl
test
mov
fidivrl
cmp
add
pusha
mov
stos
pop
xor
ret
xor
and
cmp
and
std
pop
inc
inc
mov
sbb
pop
lret
fdivs
push
or
inc
jl
loopne
pop
mov
out
js
mov
ret
xor
push
mov
xchg
add
xchg
mov
arpl
insl
xchg
leave
xchg
popf
pop
fwait
subl
add
popa
nop
test
cmp
repz
jl
rcrb
xchg
test
sbb
xlat
push
sbb
fs
leave
jno
aaa
xorb
popa
push
repz
enter
aad
inc
dec
popa
dec
xchg
mov
mov
xchg
repz
jne
xor
out
mov
and
ljmp
jns
gs
push
out
mov
pop
scas
push
std
pusha
mov
xchg
mov
jns
xchg
and
sbb
cmp
nop
add
push
daa
xorl
les
xchg
cwtl
adc
js
pop
inc
mov
jns
sbb
pop
cmpsl
dec
lods
das
and
jle
addb
inc
lcall
and
lahf
shll
fcmove
stc
mov
push
xchg
ljmp
insb
mov
sahf
dec
mov
mov
cltd
sub
mov
cs
jo
or
pop
push
ds
pop
sub
cmp
bound
or
jno
or
repz
ds
jo
std
arpl
push
les
xor
jecxz
dec
inc
call
insl
sub
vpcmov
fisubrs
loopne
push
mov
roll
in
dec
jo
inc
mov
mov
xor
shlb
sub
ss
push
add
lahf
cmp
lahf
sahf
test
mov
xchg
bound
xchg
in
int
sub
lods
lods
and
imul
jp
enter
mov
insb
movsb
icebp
cli
xchg
fdivp
cmp
cs
adc
lds
jmp
inc
ljmp
mov
push
cmp
inc
iret
add
aaa
arpl
lcall
sub
add
xor
sbb
xchg
jbe
lret
dec
push
push
repz
xorl
adcl
xor
push
push
lret
jbe
jle
fstpt
aas
fmull
ds
loope
jb
out
or
mov
dec
push
mov
ror
pop
push
sar
push
sub
xchg
ss
pop
inc
insb
mov
clc
cmpsl
mov
sbb
jno
sub
push
xchg
inc
adc
and
repz
xchg
gs
sub
xor
in
push
pushl
nop
fnstsw
mov
xor
lods
adc
scas
rorb
push
int
sbb
inc
mov
lahf
push
pop
cld
and
sub
add
arpl
push
jge
cmp
xor
fmulp
pop
xlat
stos
mov
add
mov
arpl
popf
or
mov
inc
jmp
stos
ret
push
or
jns
xorb
mov
add
in
test
mov
jns
loopne
and
cmp
lods
and
les
mov
add
adc
test
xchg
adcl
cmpsl
mov
add
xchg
xor
inc
orl
adc
lcall
adc
cmp
out
gs
push
cmp
shl
in
scas
or
push
mov
mov
loop
hlt
fdivrl
int
xor
add
jmp
jno
lret
mov
pushf
cld
je
pop
int
subps
lods
aaa
xchg
adcl
lcall
rcrb
jb
and
mov
addr16
popa
pop
push
jge
sarb
insb
cmp
cmpsb
mov
fistps
cltd
enter
cli
inc
dec
ret
sub
sarb
mov
popa
outsb
out
pushf
cmp
repnz
dec
pop
push
repz
cmp
lret
xchg
arpl
jbe
mov
fs
push
cmpl
enter
loopne
js
dec
mov
mov
mov
je
pop
das
pop
std
mov
pushf
mov
lock
pop
aaa
mov
sbb
xchg
adc
jmp
push
jp
fistpl
std
xchg
das
jns
xlat
orb
mov
into
mov
aaa
push
and
jmp
inc
and
stos
xor
sbb
and
dec
arpl
add
cmp
pop
imul
repz
add
xchg
insb
mov
and
sbbb
dec
pusha
and
call
pop
inc
push
mov
dec
add
jle
ss
mov
xorb
mov
pop
test
fdiv
in
jl
xchg
sub
ficoml
dec
push
rol
pop
pop
xchg
mov
mov
addr16
insb
mov
cmp
inc
inc
push
daa
and
sbb
clc
fistpl
push
std
int
leave
sub
loop
sub
sbb
imul
aad
movsb
xor
lret
lahf
push
xor
shll
loop
mov
mov
xor
mov
pusha
push
mov
mov
push
into
fucomi
or
jge
inc
les
sti
mov
in
fcoml
lcall
leave
cmp
cli
lahf
in
daa
outsb
jnp
and
xchg
inc
pop
ret
nop
xor
and
sub
fidivl
insb
jbe
fcmovne
inc
cltd
dec
mov
nop
repnz
subl
mov
mov
sti
and
ds
shll
stos
and
imul
dec
andb
pop
add
cmp
sub
sbb
subb
adc
cmp
sub
xchg
push
cmp
pop
cmp
and
xor
ret
fcmovnb
mov
inc
mov
ss
fsts
sub
in
hlt
jbe
sub
push
cmp
les
push
stos
scas
fistpl
jnp
jl
add
popa
sbb
pop
jne
aam
shl
adc
addr16
stc
ljmp
and
sbb
xchg
pop
sub
jnp
jne
imul
fistpll
loop
lret
in
sbb
loopne
jp
daa
xor
jmp
sbb
aam
xchg
jnp
aam
cmc
dec
fldcw
sar
notb
add
adc
mov
sub
in
cs
les
xor
mov
inc
pop
dec
lods
fimuls
ret
adcb
dec
mov
pop
outsb
movsb
or
mov
dec
movsl
lock
lret
xchg
fstl
sub
fldl
out
fdivrl
cmp
loop
test
fcompl
fiaddl
shr
mov
add
cmp
aaa
mov
jbe
icebp
xchg
in
or
lcall
fcmovne
jle
imul
mov
jb
xor
test
jbe
cmc
push
das
jp
andb
mov
xor
inc
es
pop
mov
rcrl
mov
lea
mov
orb
dec
xchg
and
jb
mov
stc
inc
into
es
sbb
jb
sub
sbb
pushl
add
push
stc
iret
adc
and
push
pop
dec
divb
and
mov
adc
rcr
movl
scas
pop
cmp
pop
mov
lods
ds
mov
subb
cmp
mov
lret
xchg
dec
xrelease
divb
icebp
push
insb
stos
mov
movsl
lods
ret
push
ja,pn
mov
stos
pop
jge
sbb
dec
ja
stc
adc
inc
fstpl
nop
and
das
mov
xor
push
mov
mov
sub
push
imul
in
lea
sbb
xchg
ds
xor
inc
ds
jne
rcl
fcoml
int3
fmull
test
jno
int3
pushf
gs
push
pop
add
sbb
sbb
cwtl
dec
addr16
and
lods
cmp
and
push
xchg
jge
push
div
push
push
inc
mov
ljmp
adc
sbb
iret
mov
adcb
jno
or
dec
push
adc
pop
sbb
and
push
pushf
and
inc
je
je
insb
push
or
cmp
fbld
mov
mov
xchg
sub
cld
cmp
adc
xchg
lods
shlb
cmp
jne
ja
mov
pop
jge
incl
outsl
aam
adc
sbbl
js
outsb
test
jg
shrl
int3
bound
test
pusha
push
pop
sub
pop
adc
int
ja
repnz
and
out
sbb
addl
cltd
in
jns
mov
pop
mov
cmc
pop
rcrb
push
test
mov
sbb
cmp
xor
mov
arpl
ss
and
flds
aad
imul
push
lods
push
or
mov
cmpsb
add
aas
subb
fdiv
movsb
or
jno
sbb
pop
cli
push
pop
sahf
pop
insl
inc
in
dec
jne
rcrl
movsb
fldt
add
in
adc
jbe
enter
sub
or
aad
mov
sar
fsubs
repnz
icebp
rorb
adc
and
inc
and
fiaddl
fdiv
test
stos
sti
ss
inc
dec
sub
into
imul
xchg
loop
sbb
stc
mov
mov
add
cmc
dec
mov
fsubs
rclb
sahf
dec
pop
ljmpw
push
jge
cmpsb
and
or
aad
push
aaa
and
out
inc
mov
push
stc
lcall
mov
adc
add
xchg
push
fistpll
cltd
les
pushf
mov
sub
rolb
adcl
sub
in
dec
imull
divl
push
arpl
push
mov
pop
pop
test
in
lcall
xchg
pop
xor
ret
icebp
test
adc
pop
subb
xchg
sbb
aam
mov
roll
outsb
mov
and
pop
outsl
jo
adc
insb
into
aas
leave
iret
call
sbb
jbe
aam
push
add
mov
inc
jmp
mov
cmpsl
pop
cld
cmc
call
or
movsb
mov
sub
bound
fstpt
sbb
add
jbe
stc
loope
mov
jo
pop
divb
sti
adc
adc
xchg
mov
cmpsl
push
add
cmpsl
dec
or
mov
xor
rcl
fucomi
cmc
ret
inc
mov
pop
pop
jo
es
insl
sarb
out
scas
fcoml
jmp
inc
icebp
cmpsb
vmulsd
cmp
mov
fidivrl
cmpsb
rcr
xchg
into
jle
xor
cld
xchg
xchg
loopne
fisttps
mov
pushf
test
inc
push
push
mov
add
push
jnp
dec
shl
xor
xchg
dec
mull
cmc
aas
dec
cltd
jno
mov
ret
jo
sbb
xchg
push
push
add
pushl
add
xchg
out
mov
xlat
aaa
test
sahf
mov
mov
testb
sbb
ds
sbb
sbb
xor
xchg
popf
sbb
sub
adc
ret
rolb
orl
cmp
cmp
sub
or
jmp
mov
shrl
mov
std
rolb
pop
std
sarl
shlb
jecxz
je
stos
mov
jp
lahf
std
ss
int3
and
test
mov
subl
mov
mov
sti
xchg
orb
into
outsl
adc
and
stos
sbb
movsb
xor
in
enter
xor
insb
dec
xchg
cli
popf
inc
sbb
sub
and
pushf
push
mov
aam
ja
push
test
ds
fs
fwait
sbb
dec
mov
loop
movsb
popf
xchg
inc
pop
adc
jle
pop
test
cmp
lcallw
aas
inc
or
mov
mov
push
push
lret
cli
fnstenv
aas
cltd
int3
int
js
cmp
xchg
pop
xorl
dec
popa
inc
out
xor
and
in
cmpsb
and
sub
sbb
loopne
dec
pop
fisubrl
hlt
fs
cld
andl
mov
fstpt
jo
sahf
popf
sbb
push
pop
push
cmpsl
pusha
push
sbbb
mov
out
lods
stos
aaa
xchg
cwtl
inc
xor
pop
push
test
xchg
mov
xchg
and
lsl
fcoml
enter
out
sub
into
cmc
pushf
divb
push
sub
stos
sub
mov
loope
bound
adc
popa
mov
cmp
inc
inc
add
fs
outsb
inc
inc
mov
sub
adc
testb
sbb
pop
pop
adc
pop
add
pop
cmp
cltd
sbb
ret
ja
fcmovbe
sarl
lret
sub
hlt
pusha
mov
sarb
orb
fldenv
jns
pop
cwtl
das
lcall
add
or
sbb
inc
jo
out
sub
int3
hlt
xlat
cli
sti
sbb
pushf
lods
lds
push
add
scas
in
test
push
jle
mov
jne
mov
fisttpl
add
into
cld
loope
and
and
and
call
in
push
cmp
enter
insl
jl
stos
inc
andl
cmp
push
sbb
sub
pop
in
popa
sub
aad
int
cmp
xor
add
jb
mov
or
stos
inc
les
push
aaa
loopne
or
cwtl
out
loope
outsl
mov
out
into
and
jbe
ja
shl
ljmp
mov
pop
popa
dec
enter
mov
xchg
push
adc
in
pop
jge
bound
mov
mov
xlat
xchg
mov
jmp
hlt
movsb
ror
pop
nop
push
add
mov
pop
mov
enter
adc
cmp
xchg
add
push
imul
out
add
je
das
lcall
push
mov
sub
test
movsl
bswap
cli
jne
sub
arpl
inc
stc
das
pop
mov
jl
push
and
lcall
out
jne
out
js
push
push
es
out
iret
mov
ret
xorl
push
sbb
mov
xchg
jge
ret
push
rorl
cmp
out
mov
push
cli
sti
or
jo
jns
fstl
xor
mov
aaa
or
dec
imul
cmc
lods
jnp
stos
js
cli
mov
ret
mov
fnop
clc
cmp
jns
mov
and
movsb
imul
pop
dec
push
fmuls
jnp
xchg
xor
fbld
dec
jb
add
dec
aaa
mov
scas
cmc
jmp
inc
or
pusha
roll
xchg
fcomps
jmp
arpl
cmp
inc
push
cltd
out
fwait
push
insl
adc
ja
mov
fs
sub
pop
cmpsl
pushf
fnsave
rcrl
sub
cld
fidivl
testb
cmp
movb
test
arpl
addr16
pop
ja
sbb
push
int3
je
test
ret
xor
sbb
fcomps
dec
xchg
add
clc
mov
cltd
sub
andl
daa
leave
add
mov
cmpsb
mov
sbb
inc
pop
test
mov
sub
lods
div
jecxz
rclb
shrb
test
push
mov
inc
dec
sbb
adc
mov
movsb
add
aaa
fisttps
inc
jmp
sbb
fsubrs
lret
mov
mov
fbstp
push
loope
out
je
sti
fisttps
mov
pop
repz
inc
mov
jb
popa
imul
out
test
inc
clc
dec
cmc
aad
sub
loopne
gs
je
out
pop
lds
add
mov
xchg
test
dec
mov
decl
add
push
jnp
scas
xor
fisubrl
testb
sbb
movsl
ds
shlb
shlb
jo
aam
aas
xchg
jp
mov
xor
bound
stos
adcl
mov
push
ja
adc
push
fidivl
push
sbb
bound
out
or
jnp
sbb
loop
subb
sbb
cmp
out
je
call
loop
cmp
dec
negb
add
ljmp
pop
std
cmp
lahf
out
dec
adc
xchg
xchg
cmp
jge
adcb
loope
dec
outsb
xchg
outsl
mov
je
mov
sbb
in
fnstcw
cmp
pop
push
adc
or
shlb
jmp
decl
daa
loopne
sbb
fs
fistps
test
idiv
sub
mov
test
mov
add
cmc
scas
je
sbb
insl
cmp
and
push
push
lods
mov
xchg
mov
pop
bsr
icebp
pop
shr
xor
loopne
je
fs
lcall
jl
lock
cmp
adc
addr16
test
lahf
inc
stos
test
loop
ret
xor
aaa
jnp
mov
popa
cmp
pusha
xchg
sbbl
pop
mov
jnp
xchg
insl
call
mov
dec
xlat
pop
xchg
or
mov
int
push
movsb
int
pop
paddq
mov
xor
mov
outsb
ljmp
mov
mov
jbe
ljmp
jp
push
adc
ja
rcr
sbb
lret
lret
lcall
scas
mov
inc
lea
sbbl
ss
and
out
xor
jmp
out
cmc
add
iret
cltd
scas
scas
pop
addb
push
adc
push
dec
loopne
scas
out
and
imul
add
and
jae
jge
sub
cmp
pop
mov
sbb
popa
inc
mov
gs
inc
out
inc
movsb
mov
vmovq
and
push
ds
sbb
icebp
sub
sub
les
ljmp
shll
ljmp
xor
ljmp
cmp
in
pop
xchg
mov
jo
pand
push
icebp
mov
jb
dec
outsb
jge
xor
pop
mov
sbbl
jg
sbb
inc
and
lcall
repnz
pop
mov
ja
mov
rol
in
jl
cmc
call
push
mov
cltd
mov
sbb
outsb
push
adc
addb
bound
nop
xchg
addr16
and
int
lods
movsl
pusha
xor
adc
cmp
push
xor
mov
and
in
adc
push
adc
jp
push
dec
adc
mov
fs
mov
pop
insl
jg
xchg
lcall
sti
xor
xor
rclb
js
int3
push
dec
cwtl
pop
sarl
mov
push
call
xchg
xchg
pop
inc
push
dec
jl
dec
sub
arpl
rorb
cli
insl
push
adc
fistl
hlt
ljmp
sub
lret
mov
fisttpll
adc
adc
nop
jnp
xchg
xchg
addl
cmp
xacquire
pop
ret
imul
cld
cmpsb
daa
or
cmp
shrl
cmp
es
or
je
cmp
xchg
sub
mov
and
sub
aaa
sbb
mov
mov
lret
xchg
shlb
push
pop
mov
stos
out
xchg
aad
clc
xchg
fbstp
adc
imul
shll
dec
pop
loope
sub
stos
xchg
ret
addl
icebp
lret
inc
push
cmpsb
hlt
or
sub
push
lods
lret
pop
imul
dec
push
rcr
xor
movsb
mov
rcrl
push
xor
or
imul
stos
adcb
mov
jle
rclb
cmc
rcr
loopne
sub
outsl
sti
or
push
daa
sbb
dec
jp
rep
imulb
xor
sub
pop
xchg
gs
mov
out
cmp
jae
test
mov
std
mov
loop
lea
adc
xchg
mov
dec
gs
call
or
in
jb
pop
jae
jnp
nop
outsb
or
mov
in
testb
push
into
xor
or
push
pop
add
xchg
or
lea
mov
sbb
sub
stos
fistps
xchg
mov
xor
push
push
cmc
mov
push
xlat
stos
xchg
sbb
or
fwait
jno
decb
add
pushf
adc
jne
pop
mov
xchg
lahf
and
movsl
rcr
pop
fnstenv
and
sub
shlb
xor
jmp
les
daa
sub
xchg
jo
daa
mov
out
stc
xor
jbe
xchg
dec
lea
add
dec
inc
dec
pop
enter
popa
pop
dec
jo
gs
rolb
inc
pop
inc
inc
iret
cmp
addr16
test
xlat
adc
dec
and
fwait
adc
pushf
lret
cwtl
jecxz
lret
adc
add
cmp
inc
fdivs
and
aad
mov
xor
push
push
inc
out
and
decl
push
mov
stos
inc
movsb
push
xchg
adc
push
push
mov
andb
sti
xor
jp
sbb
add
push
sub
mulps
ljmp
jae
sub
inc
ds
cld
dec
pop
inc
push
out
xchg
push
push
xor
jae
ret
cmp
mov
pop
sbb
mov
mov
jmp
mov
aam
cmp
xor
or
outsb
add
mov
or
and
add
sub
adc
jno
cmc
push
mov
ds
add
add
inc
sub
neg
nop
popa
push
dec
and
push
aaa
dec
mov
sbb
inc
mov
mov
xor
in
cmp
insb
andl
in
loope
mov
pop
mov
std
mov
push
mov
mov
das
cwtl
mov
mov
pop
clc
ljmp
sub
and
pop
ret
xchg
mov
pop
loop
les
inc
xchg
out
adc
push
icebp
outsb
aad
ljmp
inc
sarb
sahf
lret
loop
mov
ljmp
sub
loop
jle
imul
mov
mov
repz
inc
xchg
push
mov
add
dec
pushf
pushf
inc
and
arpl
daa
sti
jg
cltd
arpl
iret
psubb
mov
int
cld
jbe
imul
inc
push
incb
testb
push
push
loop
stc
fimuls
mov
dec
ret
mov
and
test
xlat
dec
jnp
dec
and
dec
and
leave
adc
mov
test
aaa
push
xchg
imul
sub
pusha
jb
mov
mov
in
movsb
int
mov
shlb
jmp
pop
and
pop
and
jne
dec
and
inc
daa
inc
mov
pop
xchg
test
ficoml
and
mov
sub
mov
and
add
mov
mov
lahf
xchg
dec
ljmp
mov
jle
clc
dec
mov
in
mov
push
fisubs
mov
or
test
addr16
or
and
dec
cmp
push
arpl
xor
aad
mov
jmp
in
push
cmp
outsl
clc
jecxz
sarb
xchg
add
fs
cmp
adc
add
and
dec
subb
jle
mov
stos
fbld
pop
cld
push
xchg
push
jae
jnp
mov
lock
cmp
es
dec
std
push
pusha
cmp
sar
mov
xchg
pop
sub
stos
loope
jno
stc
or
test
xor
sahf
jbe
test
push
lods
add
and
sbb
xor
add
leave
jb
jb
or
clc
jl
imul
xor
stc
mov
push
jbe
in
mov
push
mov
lods
aam
pop
cmpsb
data16
sub
testb
insl
movl
daa
or
add
push
sbb
test
mov
pop
shll
sbb
mov
movsl
push
cmpsb
sahf
dec
call
cmp
fmul
inc
sub
cmc
pop
or
mov
jns
in
loope
repz
mov
or
cmp
lock
cmp
das
dec
jb
mov
mov
jmp
mov
fsubs
addl
mov
dec
mov
or
xor
mov
xchg
push
insb
pop
fucomip
fdivp
pop
test
dec
stc
jmp
daa
js
insb
sti
das
inc
sub
aas
and
inc
xchg
mov
mov
jns
cmp
push
arpl
lret
sub
movsl
lret
push
mov
nop
lret
ret
mov
add
je
ds
sub
in
mov
clc
ds
jl
mov
jnp
fldcw
pop
add
test
sbb
xchg
gs
add
popf
arpl
addr16
jbe
insl
and
stos
aaa
leave
test
xchg
int
outsl
popf
mov
or
xchg
pop
add
or
aad
or
add
push
pop
jb
mov
cmc
xchg
fistl
ss
push
lret
jo
pop
ss
int
sub
lahf
or
fstl
adc
outsb
xor
ret
lods
rcll
pop
push
add
jnp
pop
shl
mov
aam
mov
dec
add
push
pop
gs
pushf
pop
pop
mov
sub
or
sub
push
mov
xchg
adc
movsb
add
leave
xchg
xchg
movsl
pop
fwait
dec
ret
popa
pop
inc
stos
push
ret
sbb
jmp
mov
fildl
outsb
xor
dec
ljmp
cmp
dec
push
int
arpl
scas
xor
cmp
or
mov
dec
test
xchg
mov
test
jp
adc
xchg
es
out
dec
mov
addr16
sbb
mov
std
sub
arpl
psllw
or
fnstcw
repz
sbb
jbe
add
lret
sti
adc
jl
mov
mov
mov
and
sub
mov
xchg
aam
adc
shl
stos
and
mov
xchg
movsb
mov
mov
mov
pop
inc
push
mov
loope
es
or
jbe
jge
in
sub
cmpsl
and
sub
aam
dec
sub
imul
adc
mov
es
sarb
int3
cmp
fistps
jmp
nop
scas
and
xchg
sub
sbb
stc
mov
and
pop
push
and
add
inc
pop
adc
jns
fdivp
xchg
insl
dec
lahf
mov
cmc
cmp
jp
push
les
sub
enter
mov
jecxz
loope
ja,pn
jp
add
les
adc
pop
jno
mov
mov
out
cli
ficoms
xchg
pop
cmp
adc
mov
adc
hlt
jbe
add
pop
repz
cmc
imul
call
mov
add
xchg
lret
xor
pop
fiadds
adc
and
dec
pop
mov
clc
hlt
out
mov
jns
sbb
movsb
inc
in
adc
mov
mov
jecxz
and
cmpsb
sbb
mov
or
stc
sub
sti
cld
cmpsb
pop
push
pop
loopne
jge
add
icebp
xor
cmpsb
mov
jl
push
call
add
sbb
jg
pop
cmp
sub
loope
arpl
xchg
aad
imul
dec
jb
imul
pop
sti
in
pop
ja
loope
pop
cltd
jg
or
mov
imul
setae
clc
cmp
mov
ficoms
int3
stos
ud0
cld
js
cmp
sbb
add
fisubrs
mov
and
jecxz
inc
xor
or
pop
push
inc
and
mov
shl
lock
insl
cs
sti
sahf
inc
int3
movsl
cmc
lahf
scas
mov
ret
outsb
mov
xchg
insb
jl
push
jecxz
push
mov
push
jp
rep
inc
ficoml
cmp
cmp
pop
sbb
dec
inc
push
stos
movsb
xor
mov
cmp
in
sbb
jecxz
jno
and
jbe
jecxz
clc
mov
pop
ja
in
sub
in
outsb
imul
fnstsw
out
fs
shrb
scas
fidivrs
out
ss
xor
stos
stc
sbb
sbb
mov
xor
mov
popf
out
dec
ret
xchg
mov
lods
adc
xchg
inc
or
les
packssdw
orb
xor
xor
push
jmp
cmp
pushf
pop
jecxz
jmp
das
loope
popf
mov
mov
push
mov
repnz
in
ss
lcall
sahf
inc
inc
mov
xor
fwait
pop
enter
clc
push
or
xor
gs
outsb
add
adc
xor
outsl
xchg
stc
loope
mov
jge
jp
inc
mov
xor
lcall
sub
sarb
push
xchg
divb
push
sbb
aaa
sub
pop
mov
push
shl
mov
cmp
outsl
arpl
sub
lods
jecxz
lcall
imulb
xchg
nop
push
aad
cmpsb
mov
push
pop
push
scas
push
cltd
aaa
into
xor
insl
xchg
or
out
push
rcrl
gs
adc
insl
mov
test
jb
test
pop
xchg
xor
mov
mov
lret
addr16
inc
dec
and
adc
js
mov
add
repnz
out
mov
jmp
jle
push
mov
scas
jle
popfw
les
mov
xchg
daa
test
mov
out
sbb
mov
mov
je
push
dec
push
dec
push
iret
xor
mov
push
sbb
or
mov
adc
sub
lds
dec
imul
push
push
cmp
fnstenv
pop
stc
jno
xchg
data16
jl
sbb
out
data16
sub
popf
mov
pop
xor
sbb
stc
subb
or
adc
rcll
xchg
enter
pop
cmp
mov
je
cld
in
aas
pop
cmp
mov
jbe
add
dec
cmp
ds
popf
inc
mov
mov
xor
or
sub
inc
xchg
dec
cmp
data16
xchg
jno
clc
mov
pop
out
into
es
in
and
push
lcall
sarb
xor
xchg
inc
inc
xchg
sub
xor
shll
fs
or
dec
into
addr16
mov
xchg
pop
add
mov
xor
cltd
mov
push
inc
cmp
pop
add
aaa
sbb
shll
jns
aad
or
jae
mov
pop
int3
popa
and
subb
aam
dec
jp
jp
stc
xchg
mov
shll
add
adc
rcl
push
imul
pop
popa
and
sub
dec
enter
inc
psraw
popf
out
cmp
jmp
push
fnstcw
jbe
jl
and
fldl
add
pop
lcall
rcll
aaa
fmull
cltd
xor
and
ja
sbbl
fstl
je
sahf
je
or
jmp
stos
mov
cmp
push
inc
stos
mov
faddl
mov
addr16
imul
sub
scas
jne
xor
cld
adc
inc
stos
int3
mov
jns
cmp
ljmp
scas
hlt
repz
mov
ljmp
int3
xor
test
sbb
mov
sub
add
and
jne
aaa
orb
jl
test
sub
std
inc
push
xor
jecxz
xor
daa
push
ss
cld
xchg
fwait
hlt
cmp
xchg
pushf
xchg
xchg
popf
cmc
int
stos
pop
in
inc
jns
ds
stos
push
cwtl
sbb
or
pop
xchg
add
sub
or
rcrl
push
mov
iret
lock
lcall
inc
hlt
ja
mov
pop
pushf
adcb
xlat
mov
fdivrs
std
mov
jnp
mov
lds
mov
jno
push
mov
jl
sub
std
inc
push
lods
cs
inc
ret
push
cmp
popa
stos
shll
int
xor
rcll
push
insb
jne
stos
adc
dec
add
sub
push
adc
stos
and
xor
stc
push
loop
sbb
inc
sbb
adc
inc
or
mov
icebp
or
xchg
icebp
nop
ja
mov
mov
outsb
mov
sarb
jbe
cmc
into
mov
scas
mov
cmp
pop
mov
mov
jecxz
sbb
cmpsl
jb
jl
loop
ds
arpl
aaa
dec
inc
xchg
mov
cwtl
jge
xchg
adc
lcall
test
repz
xchg
xchg
sti
scas
popf
push
shrl
sar
fidivs
cmpsl
cmpsb
or
push
xchg
scas
leave
add
inc
sbb
or
enter
xchg
stos
in
test
fsubrl
push
nop
dec
rclb
add
inc
icebp
and
cmp
jae
rcll
push
mov
push
dec
xchg
dec
and
jmp
mov
mov
pmuludq
shll
and
adc
test
aad
shrb
out
xor
pop
dec
cmp
loope
jecxz
cmpb
aad
and
shll
mov
test
mov
push
popf
aam
ret
sbb
add
sbb
lret
or
stc
popf
cmp
inc
shll
aas
mov
add
dec
xchg
stos
cmp
stos
or
repz
mov
push
mov
mov
sarb
mov
inc
xchg
jbe
and
dec
gs
pop
mov
sub
inc
mov
or
push
push
xor
xchg
xchg
push
add
jnp
add
scas
call
cs
sbb
pop
xor
out
xor
movsl
ret
inc
add
testl
and
out
xchg
lret
dec
loope
push
mov
or
popa
sub
ret
shr
sbb
mov
pop
ja
lret
cmpsl
inc
sti
mov
sarl
and
or
push
test
pop
or
into
shl
mov
sub
addb
gs
mov
pop
insb
in
jg
cmp
push
xchg
icebp
xor
xchg
xchg
adcb
jbe
loope
sub
insl
cmpl
pop
cld
pop
push
mov
jge
jl
mov
pop
fs
sub
rcl
jmp
leave
cmpsl
add
cmp
mov
cs
scas
pop
scas
jmp
add
or
xchg
scas
js
mov
scas
addb
push
inc
add
xor
addb
in
push
dec
test
xchg
lret
push
sarl
jnp
mov
dec
mov
divb
sti
pop
mov
dec
divl
int3
lret
imul
inc
sub
dec
insl
sub
cmp
push
mov
dec
outsb
leave
push
jo
pop
jg
lahf
mov
lcall
cmpsb
xor
add
xor
sbb
xchg
xchg
pop
jne
daa
mov
jl
cmpl
add
dec
callw
inc
sbb
sbb
pop
cmpsl
mov
test
xchg
jno
jmp
mov
stos
js
repnz
pop
adc
mov
lock
popf
sub
repnz
cmp
pop
aad
dec
rcr
hlt
pop
into
adc
jecxz
cmc
iret
sbb
cmpsb
or
gs
mov
js
stos
bound
mov
ja
xchg
aam
imul
xor
mov
and
jmp
mov
sbb
aad
push
pop
rcrb
mov
and
xlat
sbb
andl
inc
cmp
repz
lock
xchg
sbb
fists
or
lret
pop
and
negb
push
or
xor
stos
push
pop
pop
cs
loop
frstor
test
push
push
leave
cmp
fsubrs
orl
mov
dec
sbb
fisubrl
mov
xor
mov
inc
bound
xor
jne
mov
jbe
pop
pop
fucomi
scas
push
sbb
pusha
sahf
movsb
pop
push
ss
adc
mov
inc
xlat
mov
lret
loopne
cmp
leave
add
jae
pop
cmp
jmp
push
mov
shlb
inc
or
push
jb
push
fiaddl
fbld
js
sbb
dec
xor
inc
scas
repnz
insl
sbb
mov
ljmp
and
jnp
jae
hlt
orl
xchg
je
xchg
in
arpl
ss
sbb
lea
lock
pop
push
fsubl
inc
pop
les
fisubs
aam
mov
adc
aaa
movsl
cs
jae
cmp
insb
push
rol
jl
pop
xlat
imul
pop
jg
inc
int3
pop
daa
dec
mov
loopne
loopne
add
lret
dec
aaa
insb
aam
imul
dec
lea
mov
jp
xchg
cmp
lea
scas
and
push
mov
cs
cmp
xchg
pushf
push
lcall
test
jbe
push
jnp
negl
sub
dec
fucom
popa
and
sbb
inc
inc
xor
push
add
jb
decb
xchg
sub
mov
add
cmovb
test
into
inc
mov
mov
test
out
mov
stos
pushf
shl
pusha
mov
dec
and
rorb
and
cwtl
push
out
arpl
push
lea
test
out
addb
mov
fnsave
xlat
and
sub
mov
inc
fisttpll
inc
int3
mov
lods
or
pop
cmp
into
movsl
ret
jmp
loopne
dec
mov
imul
adc
pushf
out
xor
sbb
and
jnp
out
testb
mov
pop
and
cmpl
lods
push
test
cmp
aas
cmp
inc
add
xor
mov
xchg
jge
cmpsl
loope
mov
sub
push
jmp
jns
xor
outsl
xchg
mov
mov
stos
mov
movsl
mov
adc
stos
jg
mov
or
sti
mov
iret
pop
mov
repnz
mov
repz
cmp
nop
mov
jl
and
sbb
dec
pusha
pop
repz
test
adc
mov
sub
movsl
roll
sti
push
ja
ja
or
pushf
mov
add
sub
out
and
hlt
stc
call
xorb
pop
jecxz
popf
inc
addr16
bnd
pop
jno
inc
xchg
sub
push
std
adc
jle
pop
dec
jg
scas
sub
xlat
dec
test
cwtl
ficomps
pop
insl
sub
pop
jns
jp
es
mov
and
ror
lret
std
lods
neg
out
adc
ja
loopne
lods
aam
pop
mov
adc
ficoml
cmp
jb
arpl
jle
mov
lret
fwait
sub
ja
dec
inc
pop
fwait
add
popa
lock
xor
or
outsl
push
cmp
out
mov
out
inc
cwtl
sbb
jnp
sub
mov
int
aad
push
mov
add
movsb
push
dec
shlb
jns
aas
or
popa
loop
icebp
or
jb
lods
jno
dec
icebp
push
imul
xor
test
jmp
call
int
pop
rcl
xchg
sub
out
push
lds
mov
ret
xor
fadds
shrb
jecxz
or
add
push
dec
sub
jo
cli
pop
rcll
xor
out
pop
imul
lret
mov
xchg
stos
lret
add
jno
sbb
movsl
dec
adc
sbb
xor
xchg
cli
cld
or
cltd
jle
nop
adc
mov
xlat
lds
std
push
mov
or
jae
hlt
aad
iret
leave
xchg
stos
xorps
call
ror
cmc
fwait
fwait
addr16
jle
adc
push
push
pusha
xchg
sarb
jge
add
shrb
sub
add
fwait
fwait
jb
mov
push
pop
jnp
pop
inc
and
mov
adc
loopne
mov
insl
out
int3
test
decl
mov
xlat
les
aaa
fldlg2
push
scas
test
rclb
das
fimuls
or
jnp
in
push
cmp
imul
leave
mov
popa
pop
mov
pop
lret
push
inc
je
lcall
xor
add
aad
mov
mov
stos
iret
mov
inc
inc
arpl
inc
dec
mov
push
std
sbb
out
mov
jbe
mov
clc
fstl
cltd
jne
adc
aam
inc
out
in
mov
sbbl
dec
sub
xlat
or
mov
dec
aad
cmp
movsb
pop
push
jp
sub
out
cmp
cmp
repz
aad
pushf
sub
push
sub
mov
nop
mov
lahf
fs
push
stos
sbb
test
adc
inc
or
lea
cli
arpl
dec
jno
mov
adc
push
mov
iret
pop
inc
xchg
xchg
pusha
push
jle
and
push
sub
cmp
in
mov
mov
popf
lea
or
ficoms
sbb
lods
dec
shlb
sub
outsl
daa
jae
push
cmp
sti
int3
push
pop
mov
leave
loope
jecxz
inc
daa
out
jae
cmp
mov
notb
fildll
or
ja
cld
push
incb
les
jae
jg
pusha
jb
es
insb
ja
pop
stos
aam
cmp
inc
push
and
ds
outsl
int
push
pop
push
ljmp
jle
cmpsl
incb
shl
jg
outsb
inc
subl
mov
xchg
and
jge
cwtl
lock
stc
inc
adc
lds
mov
scas
push
inc
jo
adc
repz
outsl
orl
xchg
inc
xchg
mov
outsl
cmpsl
and
mov
stos
adc
outsb
or
mov
pop
stos
bound
jb
insb
push
xchg
mov
mov
movsb
cwtl
data16
adc
shrb
rclb
and
sub
cmp
and
lea
cmp
lret
shlb
popa
out
and
xchg
sbb
cltd
pop
sbb
roll
dec
adc
jmp
jne
insw
lcall
neg
mov
and
int3
rcrl
mov
xchg
sbb
sub
idiv
pop
loop
lds
adc
enter
xchg
push
rcl
lahf
jp
push
ret
scas
int3
pusha
and
xchg
out
mov
mov
cli
cs
mov
dec
jp
imul
in
pop
cli
out
out
xorb
sub
add
xor
daa
adc
in
mov
lcall
xor
add
lret
into
imul
mov
movsl
flds
sbb
pop
cmp
lods
inc
pop
cli
xchg
sbb
lcall
add
sbb
mov
iret
ret
add
xor
jp
addr16
ret
mov
test
or
icebp
adc
into
and
inc
mov
mov
xchg
insb
xlat
push
stc
andb
sbb
and
in
in
jns
push
mov
push
movsl
andl
orb
or
aaa
adc
add
push
mov
xchg
mov
or
and
fwait
movsl
inc
inc
pop
out
add
jo
loop
bound
xchg
addr16
mov
adc
pop
or
adc
jno
loopne
pusha
jno
or
xlat
mov
jge
pop
mov
arpl
movsb
ss
dec
mov
addl
cmp
jbe
xchg
push
inc
pusha
jl
lods
dec
add
jae
xor
test
cmpsl
notl
adc
popa
inc
push
mov
mov
pop
pop
pavgb
js
or
jae
jbe
and
bound
dec
add
mov
jno
fdivl
add
es
ss
mov
xchg
loop
mov
or
js
add
movsl
sti
pop
test
stos
ja
daa
push
push
xor
dec
insb
inc
or
mov
mov
inc
cmp
mov
cmp
das
sbbb
ja
push
mov
jmp
dec
cwtl
test
inc
sarb
push
dec
xchg
mov
repz
push
push
scas
test
sub
ljmp
adc
xchg
or
mov
out
fildll
pop
dec
and
dec
sbb
sarb
jecxz
xchg
xchg
lds
ret
sahf
pop
push
enter
dec
jmp
bound
xchg
test
sub
push
out
mov
sahf
xchg
movsb
cwtl
orl
jecxz
lcall
movsb
mov
xor
push
push
imul
test
sbb
mov
mov
cmp
fxch
add
je
enter
lods
lret
pop
xor
out
jl
cs
mov
sbb
repnz
adc
insb
jge
jp
mov
push
mov
jp
lret
mov
push
xor
or
mov
aas
and
lcall
fidivl
es
cmp
test
push
jmp
sbb
push
in
repnz
jne
mov
cmp
es
pop
xchg
gs
and
mov
nop
sahf
push
mov
cmp
jp
pop
in
cmp
pop
or
sbb
add
sub
mov
icebp
scas
sub
adc
dec
pushf
cmpsl
cmpl
imul
and
adcb
add
ljmp
dec
or
popa
sahf
push
pop
sub
fbld
pop
cmp
push
cmp
test
mov
sub
jns
out
lea
jbe
enter
add
icebp
in
xchg
mov
aad
mov
pop
pop
pop
pop
sahf
in
xor
push
insl
sahf
dec
xchg
test
push
sub
outsb
or
mov
les
out
outsb
dec
dec
fcmovnu
mov
or
fisttpll
loopne
jmp
outsl
fcoml
dec
mov
sbb
icebp
dec
sbb
loop
ret
jecxz
push
notl
insl
cli
sarl
mov
mov
sbb
dec
loope
inc
mov
or
cmp
cli
or
faddl
stos
mov
lds
mov
xlat
xchg
js
ficompl
sub
aaa
and
cmp
ret
adc
jle
lods
aam
cmp
mov
cltd
push
fldcw
xchg
lods
adc
lahf
mov
xchg
fadds
mov
aaa
rorl
add
inc
mov
test
test
jp
lahf
orl
fwait
sub
fldl
mov
mov
dec
das
mov
dec
mov
in
add
mov
push
or
push
rcrl
xor
pop
adc
inc
cmpsl
mov
repz
lcall
movsb
xchg
std
cmpsb
mov
xchg
xchg
int
pop
fmuls
dec
lret
jne
pushl
lcall
fs
add
mov
aas
cli
aaa
mov
cmp
in
lret
insb
std
xor
adc
addr16
mov
dec
pop
incl
xor
add
xchg
push
mov
push
sti
in
xorb
jmp
push
dec
mov
icebp
call
ja
repz
ja
xchg
iret
gs
mov
pop
sbb
addr16
les
jl
aam
push
xchg
test
mov
inc
jnp
xlat
mov
movsb
mov
adc
clc
popa
lods
shll
mov
ror
jns
das
adc
push
clc
outsl
or
test
sbb
cmc
into
cs
std
int
fcomp
jecxz
dec
sbb
addl
add
pop
loop
xchg
fisttps
faddp
add
ret
lods
shl
dec
out
jbe
test
pushf
pop
lret
in
in
mov
mov
push
pusha
ret
push
enter
ss
pop
fbld
jmp
dec
xchg
cmp
jbe
out
and
scas
mov
ret
icebp
adc
mov
push
frstor
sub
cmp
fistpl
mov
add
mul
mov
mov
inc
or
and
sub
mov
fs
popf
dec
cld
insb
movsl
popf
jg
push
cmp
shr
in
pop
sbb
dec
xchg
sbb
push
repnz
mov
jge
fwait
adc
cmp
add
fimuls
xchg
adc
daa
roll
or
cli
add
cli
dec
sbb
popf
or
icebp
out
in
sub
pop
outsl
or
xchg
xor
sub
cld
in
xlat
dec
arpl
repnz
ret
jl
xor
jo
loopne
and
gs
imul
adc
popf
scas
push
repnz
ljmp
adc
add
sub
dec
mov
test
push
add
cmp
dec
cmc
dec
movsl
frstor
rclb
cs
ret
cmp
xchg
cmc
je
movsw
mov
sbb
daa
cmpsb
adc
imul
test
push
fstps
add
gs
and
in
adcb
test
push
lahf
sbb
push
add
incl
add
into
pop
xchg
les
and
mov
call
popf
hlt
sub
mov
jae
add
cli
and
add
fnstenv
xchg
cmp
rcll
sbb
mov
pop
movsb
test
orb
mov
add
fstp
fcomi
sub
or
push
add
jmp
aad
jmp
add
sub
xor
in
cmpsl
xchg
xor
and
in
add
inc
aam
in
insb
push
pop
test
data16
sub
mov
outsl
inc
jecxz
pop
dec
aas
imul
jae
aaa
adc
cltd
dec
sub
xchg
push
hlt
outsb
jb
push
inc
jnp
xchg
jecxz
xor
insl
and
adc
test
or
faddl
dec
mov
pop
popa
es
xor
add
pop
sahf
xchg
mov
add
lret
mov
sub
fsub
mov
mov
lret
inc
stos
inc
jmp
out
insb
pop
push
loope
in
sti
pusha
testl
je
inc
jbe
arpl
pop
imul
inc
add
push
jmp
push
aas
testl
mov
ficoms
fiadds
jno
mov
inc
add
cmp
call
push
mov
or
fidivs
mov
outsl
push
or
inc
ds
aas
sbb
popf
xchg
xchg
jg
mov
add
fwait
jle
mov
cmp
mov
adc
push
push
push
cmp
fnstcw
jmp
test
mov
push
cmp
sarb
push
xchg
cmp
add
imul
pop
cmp
push
cmp
adc
outsb
call
int3
mov
inc
mov
fnstsw
not
loopne
in
or
cltd
adc
dec
xchg
sbb
dec
push
fs
and
in
dec
mov
and
fs
sub
dec
movsl
int
or
scas
ja
jae
sub
mov
dec
jg
mov
mov
fmuls
mov
fmull
arpl
scas
sub
icebp
jae
and
push
adc
fs
pushf
jns
jns
add
adc
js
roll
adc
sub
cmpl
push
mov
stos
pop
movb
repz
mov
lock
xchg
jae
lahf
pop
push
jne
cltd
in
nopl
mov
imul
xlat
dec
xor
cmp
sub
dec
js
insl
adc
mov
sahf
xchg
or
xchg
jecxz
popf
push
dec
ljmp
sbb
std
lahf
fsubp
pop
pushf
push
mov
enter
sti
lods
push
in
pop
sbbl
mov
push
in
add
jno
lods
es
dec
cmp
pop
mov
int3
adc
mov
icebp
lods
aaa
add
inc
add
inc
sbb
mov
mov
stos
imul
sub
and
sub
in
push
imul
sub
jl
movsb
gs
leave
cmpsb
add
addb
fcmovb
sbb
xor
push
stos
inc
xor
pushf
scas
cmp
ret
bound
sbb
mov
in
mov
lods
pop
push
aam
fistps
movsl
push
es
cmp
scas
aad
lods
cmp
xchg
or
daa
xchg
sar
popa
inc
jb
lret
aam
pop
cld
das
cmpsl
jo
adc
cmp
add
jl
popf
xchg
or
shrl
inc
push
mov
inc
push
nop
mov
clc
sarb
test
or
sbb
xchg
fs
pop
cmp
call
adc
mov
xor
pop
sbb
mov
int3
int3
fnstcw
stos
movsb
ret
push
jg
xchg
fisubrl
daa
pop
xchg
xchg
mov
jns
or
jns
or
enter
push
dec
test
in
mov
lahf
mov
test
sub
jge
mov
adc
jne
out
test
imul
in
push
std
rcl
mov
lea
enter
xchg
mov
aaa
mov
popa
andb
in
xchg
pop
sbb
repnz
xor
push
fsubrl
mov
std
iret
out
in
sub
sub
mov
push
dec
andl
mov
imul
jle
mov
pop
sub
xchg
popa
dec
mov
push
iret
loop
jns
repnz
xchg
shr
lea
xchg
pop
mov
inc
leave
ret
call
xchg
adc
daa
pop
xlat
dec
sbb
xor
push
or
adc
cs
pop
stos
mov
into
out
jle
insb
js
mov
pusha
jns
in
xchg
lods
js
cltd
data16
jmp
xor
push
inc
daa
or
sub
mov
dec
xchg
enter
loope
in
mov
sub
test
fsubl
adc
inc
mov
push
mov
pop
lahf
lds
mov
test
test
push
cmp
ret
clc
or
fstpt
decl
xor
aas
mov
mov
or
jp
jno
jge
xchg
xor
sahf
lods
daa
inc
mov
addr16
in
add
lds
and
mov
sub
scas
mov
mov
fimuls
jae
jne
inc
adc
sub
sub
sub
push
loope
and
in
sbb
inc
out
mov
aam
fwait
sub
sbb
pop
aad
ret
sbb
push
jb
sub
cmpsb
loop
dec
daa
push
pop
insl
mov
pop
fwait
jle
fs
push
pop
jae
push
test
dec
test
mov
cwtl
imul
jmp
dec
addr16
ja
in
inc
jl
xor
sub
dec
jns
cld
add
flds
or
out
add
jne
lcall
inc
stc
imul
add
push
dec
xchg
add
jnp
shll
into
cltd
push
mov
mov
imul
dec
push
stc
inc
adc
into
and
pop
mov
xchg
inc
xchg
or
mov
inc
push
addr16
mov
lret
fldcw
push
mov
popl
inc
fstpt
cmp
push
mov
push
xchg
lds
xchg
out
lret
xorl
sti
push
js
cmpsb
js
ja
xor
and
in
jle
fsubl
into
jnp
mov
rorl
insb
mov
dec
dec
mov
loop
lcall
sub
dec
sub
inc
mov
xor
pop
dec
or
jb
ds
mov
aas
adc
hlt
lret
std
hlt
xchg
pop
insl
lea
push
mov
pushf
nop
sarb
xorb
clc
leave
xchg
xor
scas
mov
in
fnstcw
stos
add
inc
cmpsl
mov
lahf
sysexit
mov
cmpsb
addr16
sub
aaa
and
icebp
rcll
push
call
movsl
push
cwtl
sbb
fstp
pop
ljmp
sub
orb
mov
cmpsl
shll
cmp
pop
popf
ficomps
add
jecxz
ja
dec
inc
aas
es
dec
and
cmp
mov
pop
cmp
cmp
imul
inc
clc
iret
ret
shll
int3
cmc
cmpsb
push
sbb
out
mov
jns
push
or
xchg
add
pop
mov
es
jp
insb
mov
jns
cmp
cmc
push
push
fs
push
mov
dec
nop
xchg
rorb
mov
sub
adc
sbb
adc
shl
push
nop
je
xor
int
lock
insb
pop
call
xchg
popf
iret
or
xor
add
mov
xor
pop
fbld
jmp
mov
pop
jb
pusha
mov
mov
jns
mov
inc
loopne
cmpsb
enter
push
inc
sub
jge
inc
andb
mov
mov
add
add
addr16
or
pushf
jne
ds
jnp
das
sarl
and
loopne
jmp
je
nop
aam
mov
in
insl
loop
gs
mov
xchg
lret
jmp
inc
pop
sub
adc
dec
or
xchg
cmc
or
repnz
sbbb
out
xchg
sub
popa
sbb
fildl
push
dec
mov
loope
jno
inc
cmp
mov
push
mov
cmp
std
xor
arpl
xchg
xchg
pop
mov
push
orl
cwtl
fistl
or
in
push
lods
in
frstor
test
mov
or
pop
lods
mul
mov
cmp
loop
addb
xor
jns
stos
push
push
sbb
jmp
jp
adc
call
push
cli
in
jne
push
and
push
inc
xchg
pusha
cmp
sub
sub
test
pop
into
xor
pop
int
mov
pop
xor
mov
sahf
into
call
outsl
fidivrl
js
jmp
rcll
jg
xchg
inc
sbb
lret
das
leave
mov
sbb
pop
lock
mov
cmp
fidivs
popa
insb
cmp
sub
sub
xchg
cld
subb
outsl
sub
arpl
lahf
xchg
xchg
aaa
movsb
adc
repnz
xor
xchg
mov
jmp
mov
xor
xchg
jae
mov
xchg
add
outsl
rorb
xor
xor
sub
mov
ret
push
jg
add
arpl
and
pop
xchg
push
mov
mov
or
fwait
cmc
push
sahf
mov
test
call
add
js
popf
adc
sbb
data16
push
sub
xchg
mov
in
shrb
pop
xchg
nop
mov
dec
cmp
dec
leave
adc
mov
aad
or
xor
xchg
add
pop
insl
testb
jl
outsb
dec
repz
cmp
ror
jbe
cmp
movsb
jbe
add
push
lret
xor
loope
sub
mov
push
scas
inc
inc
movsl
push
cmp
or
mov
neg
daa
nop
mov
xchg
push
sbb
in
sub
mov
inc
pop
faddl
outsl
enter
xchg
int
cli
mov
lcall
cmpl
outsb
jg
dec
lods
mov
sti
in
scas
adc
cli
ja
mov
nop
pop
mov
js
fimuls
cmp
subb
mov
or
popa
mov
push
filds
cmp
push
lods
jmp
aaa
aad
inc
out
or
mov
lret
pusha
je
or
push
or
cmp
inc
and
jl
mov
loope
popa
xorl
xchg
inc
jp
loopne
mov
les
adc
clc
stc
jp
in
and
ljmp
pushf
mov
js
pop
pop
mov
mov
add
sbb
call
jg
out
pop
nop
leave
subl
outsb
pop
xor
daa
xlat
inc
faddp
inc
mov
jle
push
mov
sbb
out
jbe
repz
dec
outsb
cmp
js
ljmp
mov
adc
xchg
xchg
and
int3
pop
fidivs
outsl
fisttpl
loope
fucomi
insb
test
pop
adc
or
jbe
sub
fs
mov
mov
fldt
nop
jb
out
popa
mov
mov
sarb
jne
ds
lea
ja
dec
mov
jge
div
add
xchg
mov
xor
cwtl
xor
out
dec
xor
sahf
fadd
add
pop
stos
lds
pop
sbb
sbb
daa
and
call
adc
mov
jge
xchg
xor
mov
jg
dec
adc
pop
and
mov
xlat
mov
es
pushf
and
cmp
and
adcb
test
cmpsb
jmp
ljmp
and
call
jecxz
jecxz
mov
adc
sub
mov
pop
mov
jb
ljmp
addr16
mov
fmuls
addr16
pop
scas
popf
push
jne
lcall
xor
in
push
fldenv
lcall
xchg
adc
fsubr
stos
dec
mov
lds
pop
fsts
add
flds
repnz
push
inc
dec
aaa
add
iret
hlt
xchg
mov
mov
sbb
outsl
cwtl
ret
cmc
test
in
std
in
sub
aam
jmp
mov
inc
jp
xlat
xor
fwait
in
gs
mov
mov
out
pushf
int3
js
shl
mov
push
push
adc
mov
pop
les
push
push
sbb
cmp
jl
mov
pushf
outsb
stos
int3
and
inc
mov
sbb
mov
test
add
or
sub
cmp
addl
movsl
xchg
popa
cwtl
mov
mov
jge
das
push
sahf
dec
pop
negb
jecxz
lods
mov
lods
mov
test
jno
push
add
out
pop
add
loope
bound
jns
cwtl
loop
xchg
subl
outsb
push
xchg
lea
lcall
xchg
nop
fiaddl
cmpb
add
xchg
mov
pop
ljmp
shrb
adc
mov
jecxz
sahf
mov
and
lea
add
sub
push
adc
pop
mov
add
jle
out
xchg
xchg
xchg
es
mov
jnp
nop
mull
cwtl
mov
push
pushf
sub
jge
jae
vpmaxsw
int
jbe
mov
push
sbb
test
movsb
dec
mov
roll
mov
lods
mov
repnz
push
jmp
inc
jp
push
js
push
mov
mov
stos
adc
cmp
rcrl
fistpl
dec
add
rclb
cmc
shr
pop
sbb
pop
pop
push
pop
adc
cwtl
jmp
sbb
mov
sub
jp
cmpsb
mov
push
and
inc
mov
pop
xchg
out
xor
adc
mov
cmp
sbb
pop
out
das
mov
mov
xor
ret
mov
and
push
cltd
icebp
sbb
cld
popa
mov
add
mov
push
lods
jecxz
pop
clc
jp
inc
pop
sbb
stos
push
movsb
mov
mov
ficoms
mov
sub
mov
sub
incb
dec
xor
je
push
jne
cwtl
inc
fucomip
inc
jl
aaa
int3
mov
jmp
pop
stos
insl
sarb
mov
psubd
xor
shlb
mov
or
sbb
xchg
ja
repz
in
ss
in
inc
or
jge
push
add
lcall
fnstsw
xchg
bound
lods
mov
movsl
mov
cmp
pop
jo
test
in
xchg
movsb
jecxz
imul
pop
popa
add
sub
into
adc
ficoms
sbb
pop
stos
clc
data16
outsl
xlat
sbb
push
pop
cmp
es
cmc
dec
lcall
cmp
fdivr
xchg
sub
int
shll
push
mov
jnp
jnp
insb
paddusb
adc
jge
test
sbb
jnp
enter
stc
sub
push
in
xor
or
je
scas
mov
ret
xlat
daa
cmc
or
cmp
scas
addb
mov
sub
ret
xor
cli
push
jp
jecxz
mov
dec
xchg
pusha
aam
mov
mov
nop
clc
adc
shrb
xchg
ljmp
imul
adc
dec
cmp
xor
mov
lods
xchg
jne
rorb
xchg
cli
mov
inc
xor
and
sub
and
pop
pop
ret
roll
xchg
adc
adc
or
adc
adc
sarl
sub
inc
mov
mov
aaa
and
data16
les
mov
in
aas
lcall
mov
jns
sbb
jecxz
int
jb
sti
dec
sub
lahf
sti
nop
push
roll
dec
test
pop
cmp
cmpsb
xchg
jo
addr16
mov
xlat
ret
pop
pop
push
sbbl
lds
test
adc
pushf
ror
dec
add
filds
aaa
stos
jmp
cmpb
jbe
dec
mov
lahf
fldcw
pop
lods
pop
icebp
and
and
fisttpll
push
cmp
and
mov
movb
pop
pop
gs
push
push
dec
adc
inc
push
jl
add
ds
imul
sbb
rorb
rorb
xor
lock
pop
les
dec
ja
pop
shll
testb
insl
js
mov
cmp
inc
adc
jns
in
insl
push
sub
out
dec
adc
ss
lds
cmp
lret
mov
mov
dec
aas
cmp
xchg
fstl
mov
jecxz
nop
add
divl
push
mov
lock
push
mov
mov
fldl
adc
inc
pop
jno
inc
ljmp
xor
scas
xchg
dec
inc
test
cmp
ljmp
popa
or
ret
dec
push
je
and
sub
repz
mov
test
rorl
cpuid
popa
fld
adc
sbb
mov
mov
push
shlb
adc
and
mov
movsb
repnz
sahf
stos
lock
in
pop
dec
pop
xchg
mov
dec
mov
mov
aam
jle
jp
aaa
imul
pop
sahf
sahf
enter
repnz
mov
cmpsl
mov
ljmp
xlat
out
and
push
or
test
icebp
sbb
xchg
clc
out
xchg
imul
sub
ds
push
jne
and
add
scas
int3
inc
enter
jp
xor
cltd
sub
js
dec
xchg
mov
or
dec
mov
add
in
jbe
sub
or
lcall
out
lods
push
xor
pop
lods
inc
jne
cmp
cmpsl
and
lods
es
adc
and
daa
cltd
lock
xor
jnp
js
imul
cmp
dec
jg
or
cmc
or
push
mov
mov
mov
or
rcll
lods
js
lds
cli
adc
fiadds
sar
mov
adc
mov
fs
imul
push
ds
int
push
and
sahf
add
xchg
cwtl
jmp
pop
dec
jnp
jae
pop
clc
cli
mov
jl
mov
mov
jl
mov
and
and
xchg
aaa
pusha
add
loopne
imul
nop
jp
cmp
out
xor
enter
xchg
out
iret
mov
cmp
xchg
push
pushf
jo
mov
fwait
loope
sbb
je
iret
inc
in
js
sbb
in
es
pop
and
lcall
and
jno
adc
gs
xlat
icebp
cli
loopne
je
push
pop
sbb
push
insl
call
ret
loopne
inc
push
aas
daa
add
cmpsb
jns
in
inc
push
call
push
inc
xchg
push
push
lcall
insb
xchg
loop
lock
xchg
aas
dec
cltd
adc
cli
lret
jo
or
nop
gs
fcompl
xor
ret
cmc
jge
or
xchg
addr16
sbbb
clc
std
xor
ds
out
sbb
or
cs
inc
jle
fstl
inc
xor
int
pop
jg
stc
sbb
test
lcall
pop
cs
dec
insl
imul
addb
sub
ficoms
xor
mov
movsl
cltd
xor
or
addr16
inc
mov
jnp
pop
mov
aas
mov
sbb
es
movsb
fdivl
fistl
inc
stos
xor
mov
adcb
shrl
stos
xchg
lock
addr16
rorl
dec
xchg
fiadds
push
loop
push
icebp
lods
stos
jmp
xchg
mov
inc
fs
rcrb
enter
movsb
filds
iret
test
in
nop
jl
and
add
add
aad
ror
in
in
cltd
lcall
push
dec
xchg
fcomip
sub
or
aad
push
mov
pop
add
in
push
inc
or
pop
nop
xor
pop
xor
push
mov
sbb
dec
sbb
pop
nop
or
mov
xchg
inc
inc
in
out
adcb
mov
divps
mov
out
gs
jecxz
sub
js
or
mov
pop
add
cltd
jb
adc
xlat
in
loopne
inc
pushf
mov
ficoms
loope
xor
jg
stos
andl
lods
cltd
loop
in
dec
sbb
push
add
mov
adc
pop
and
out
xchg
cmpsl
adc
jns
adc
inc
sahf
xor
out
lock
test
adc
sub
and
outsl
out
push
push
xchg
ds
pop
pop
out
cmp
rorl
or
jnp
push
push
or
das
cmp
dec
fsub
stos
aas
sbb
jnp
push
mov
push
testb
pop
mov
out
add
inc
mov
mov
mov
dec
js
nop
mov
dec
popf
jbe
sub
push
xor
jmp
cmc
mov
inc
pop
pushf
enter
fwait
test
mov
xchg
in
mov
pop
cs
mov
mov
scas
inc
mov
cld
ss
push
popf
dec
lahf
outsb
inc
sarl
and
je
rcll
in
mov
loope
mov
sub
mov
neg
ja
cmp
sti
std
leave
dec
int3
movsl
jge
in
fcomip
andb
cmp
sub
mov
pop
je
out
lahf
sub
scas
jns
repz
dec
fstpl
xchg
xchg
push
int
cld
mov
pop
and
push
dec
xchg
clc
push
ret
cmpsl
cld
jle
xor
dec
lcall
xor
jae
addr16
mov
jo
push
sbb
jno
fsubs
out
and
push
push
sahf
test
add
in
mov
es
jmp
mulb
xor
push
in
xchg
and
decb
add
xchg
mov
out
mov
jo
or
cmp
stos
dec
xor
jbe
pop
sahf
mov
test
cmpb
xor
mov
test
add
out
mov
mov
mov
push
dec
imul
sbb
xor
sbb
inc
cs
inc
cld
xchg
jae
clc
popa
push
fwait
push
xor
test
push
jo
cmp
pop
sbb
mov
push
mov
dec
aad
popf
repnz
daa
xor
fwait
lcall
ljmp
hlt
neg
outsl
xchg
out
outsl
sbb
mov
xchg
test
and
sbb
jmp
or
mov
mov
inc
pop
ljmp
cmpsl
arpl
stos
inc
pop
pop
mov
movsl
or
daa
inc
sub
and
popf
movsl
or
das
mov
daa
imul
mov
test
movsb
push
mov
fs
iret
add
or
mov
or
xor
dec
mov
pusha
xchg
fidivrl
adc
pop
out
aam
cmp
arpl
xor
pop
push
xchg
scas
push
mulb
adc
mov
rclb
cld
call
insl
xor
test
push
fiadds
shrl
dec
pop
ds
push
cmc
mov
fsubrs
popl
mov
push
insb
xchg
fidivrs
inc
insb
sbb
dec
lcall
add
lret
jne
adc
leave
popf
sahf
or
es
xchg
dec
inc
xchg
bound
mov
das
sbb
add
lahf
fidivrl
lods
mov
test
dec
mov
test
in
add
pop
nop
call
fsubr
cmp
insb
inc
fcomps
insl
in
js
cltd
out
jg
push
dec
pushf
rcrb
pop
je
repz
mov
adc
cwtl
or
cmc
sub
out
ljmp
mov
mov
or
jecxz
in
and
in
insb
lods
dec
daa
sub
popf
jl
out
adc
xchg
aas
repz
in
sub
incl
rcr
fcmovnu
cmc
pop
dec
out
or
cli
xchg
cmp
and
jecxz
mulb
stc
and
mov
outsl
sbb
xor
test
sbb
loopne
push
loop
shl
mov
inc
adc
pop
jne
out
jle
stos
int
or
pusha
mov
gs
stos
and
mov
push
sbb
aaa
frstor
push
mov
adcb
sti
pop
jmp
cmp
jb
test
push
push
jmp
xchg
lea
jp
sub
js
jl
cmp
add
adc
mov
pushf
mov
vmwrite
ljmp
sub
mov
sarb
iret
xor
pusha
test
mov
lock
mov
or
jge
jo
hlt
cmc
xor
stos
add
pop
xchg
adc
stc
mov
xchg
lea
and
sbb
jnp
out
xchg
inc
fwait
je
scas
scas
lods
stos
mov
push
adc
xor
test
into
dec
loope
push
inc
xchg
ds
rcrb
add
lods
movsl
out
std
xchg
sub
dec
jecxz
adc
xorl
out
sbb
xchg
push
xchg
sbb
sub
pop
inc
add
sub
jns
xchg
pushf
inc
jle
dec
jl
shrb
xchg
popa
lcall
mov
jne
repnz
pushfw
and
dec
loopne
jae
fsubrs
je
pop
ret
arpl
fldl
cwtl
xor
sti
out
inc
dec
lret
call
loopne
test
mov
inc
int3
adcl
fdivr
loopne
fcomps
or
cmp
fcmovu
aad
jp
shr
jmp
fstpl
pushf
pop
enter
testb
dec
rcrl
les
xlat
das
fnstcw
inc
mov
cmpsb
addr16
ds
cli
fwait
into
push
and
pop
pop
inc
pusha
mov
mov
hlt
dec
stc
icebp
push
lea
mov
mov
dec
add
inc
sub
test
push
add
std
sbb
pusha
iret
cwtl
dec
test
jae
sbb
aam
test
sbb
xchg
repz
dec
or
jns
addr16
loop
daa
out
cld
movsb
mov
inc
fcmovbe
inc
aad
loope
lcall
push
repnz
in
and
sub
arpl
push
push
test
iret
les
data16
pop
xor
dec
test
lods
lods
mov
or
cmp
aas
xor
push
pop
sub
push
mov
sbb
sbb
insl
lds
negb
pop
pop
test
call
mov
dec
lret
lds
shrb
sub
inc
inc
cs
les
pop
decb
iret
sub
int
pop
aam
jns
adc
div
cmp
cmp
dec
loopne
inc
loopne
lret
dec
jp
add
push
fiadds
in
mov
push
imul
inc
xor
inc
cmp
push
inc
cltd
sbb
push
dec
inc
pop
pop
mov
cld
pop
add
ret
lods
jle
adcb
xchg
frstor
cmc
rcl
rclb
imul
pop
js
aaa
loope
lcall
test
stos
lds
data16
dec
mov
jg
jl
xor
mov
test
aaa
mov
sub
jle
sahf
sub
cmp
loope
jmp
fisubs
ja
test
pop
mov
rcrb
mov
out
xlat
fsubr
fistpll
mov
lret
xchg
testb
mov
outsb
out
cmp
shll
jmp
jg
mov
loop
or
cmp
xchg
push
adc
das
bound
sahf
ret
or
jp
adc
xchg
inc
rcrl
call
jae
inc
mov
icebp
cmp
adc
jg
adc
mov
add
mov
loopne
mov
pop
mov
adc
int3
orb
out
int
cmc
jp
push
add
mov
sti
or
je
jno
mov
data16
nop
xchg
inc
mov
mov
inc
lret
loopne
mov
or
push
aam
and
sbb
jl
jecxz
or
std
lret
pop
testb
bound
add
inc
jp
fistpl
mov
mov
pop
jbe
mov
push
push
lock
sbb
hlt
pop
andb
push
and
fcoml
jge
jle
sub
nop
into
andb
push
pop
aaa
aam
jp
imul
je
jne
mov
adcl
sub
daa
std
jle
scas
gs
test
xchg
arpl
add
loope
push
fcoms
gs
xchg
pop
dec
add
sbb
je
js
add
push
or
mov
into
mov
cmpsb
cmp
sub
sbb
repz
scas
and
push
out
out
lret
movsb
ds
insb
jns
dec
in
inc
aam
lods
stc
pop
or
ss
fildl
mov
cltd
cli
rorl
leave
mov
and
test
lret
push
pop
in
ljmp
imul
cmp
rolb
lods
jl
insb
aam
push
cmpsl
mov
mov
icebp
sub
insb
xchg
out
loopne
test
xchg
adc
insb
subb
xchg
sub
push
test
mov
sarl
loope
dec
pop
dec
aad
pushf
lods
cli
mov
add
dec
pop
mov
sbb
cmpsb
cld
stc
or
mov
cli
jmp
sbb
xchg
insl
xchg
insl
add
pop
sti
mov
sti
rolb
jp
and
xchg
add
sub
imul
adcl
mov
dec
and
mov
mov
cmp
gs
fsubs
ror
shlb
iret
es
mov
lock
aad
insl
pop
push
sbb
sbb
jp
into
pop
arpl
insl
jae
mov
push
and
ja
xlat
inc
cld
shll
xchg
insl
outsb
pop
rcl
xor
xorb
cmpsl
in
lods
sub
fdivrs
xchg
inc
pop
lods
dec
dec
jg
mov
mov
mov
or
lcall
cmp
data16
in
mov
sbb
faddl
and
and
popf
push
mov
ret
adc
iret
cmpsl
mov
scas
xor
or
cmp
pop
ss
pop
or
xor
dec
xorl
shrb
shl
add
xor
shll
xlat
mov
pop
xchg
push
adc
fs
cmp
in
test
sub
es
dec
adc
mov
fcmovb
fs
dec
and
inc
inc
jge
lret
cwtl
pop
aad
fidivrs
lock
push
aaa
iret
in
insb
lods
das
cmpsb
jg
gs
aam
adcb
sysret
repnz
mov
push
lods
sbb
ss
int3
popf
pop
gs
mov
icebp
jbe
xlat
jno
enter
rorl
fwait
daa
dec
sub
inc
stos
ret
decl
lock
mov
dec
push
or
pop
or
inc
xchg
ss
sbb
fnsave
inc
leavew
sahf
sbb
push
in
mov
scas
add
and
cmp
mov
dec
or
push
inc
rcrb
pop
mov
test
jbe
dec
mov
mov
out
jp
iret
inc
add
mov
push
outsl
mov
out
sub
jno
sarl
repnz
push
int3
mov
js
stos
mov
push
aad
adc
dec
push
pop
les
movsl
lret
cmp
sub
int
push
ja
lds
shlb
jecxz
adc
xor
inc
js
push
cmpsl
adc
inc
jp
lods
sbb
test
je
mov
dec
hlt
pop
push
sbb
add
minps
pop
inc
lods
into
mov
lds
bound
xor
popa
push
adc
fs
addl
movsl
xchg
lock
sub
iret
xchg
adc
popf
inc
mov
pop
movsb
push
ret
adc
lock
sbb
cmp
cmpl
lret
js
xlat
in
scas
push
outsl
pop
adc
dec
xchg
out
imul
test
add
lock
push
push
dec
stc
mov
mov
fcmovnb
les
inc
cmp
fstpt
xchg
jnp
jno
stos
stos
fbld
ret
iret
call
js
mov
stos
mov
push
xchg
or
xlat
inc
lcall
pop
add
jl
ss
sub
pop
clc
mov
jae
icebp
scas
jmp
out
pop
inc
mov
sub
xchg
inc
aad
and
nop
out
cli
pop
xchg
imul
and
les
push
mov
lcall
mov
adc
mov
push
insl
pop
mov
mov
nop
into
adc
inc
add
mov
xchg
lds
push
mov
fimull
and
jno
insb
in
jns
push
mov
add
cld
bound
stos
lea
stc
ss
scas
movb
mov
lods
inc
fbstp
mov
dec
out
jbe
js
mov
notl
or
push
pusha
push
pop
or
rorb
sbb
jmp
adc
aad
push
enter
xor
jae
mov
loope
aas
sahf
add
fnop
movsb
jge
lret
dec
fisttpll
cltd
sbb
dec
daa
xor
icebp
cli
mov
out
pop
jmp
pushf
add
xor
inc
fdivr
testb
dec
mov
bound
mov
mov
push
sub
push
adc
inc
mov
test
fs
rolb
popa
in
je
cmp
scas
aam
mov
pop
or
leave
out
xlat
scas
in
pop
into
and
ss
xor
js
ret
rep
jb
cmp
and
mul
or
loope
mov
adc
jg
inc
pop
or
jbe
stc
ja
and
aam
dec
into
das
xchg
call
add
xchg
jno
xor
scas
pop
inc
inc
jns
in
divb
xor
loop
je
add
inc
fdivrs
xor
outsb
orl
ss
imul
mov
daa
and
addr16
jle
mov
mov
daa
push
pusha
mov
ret
mov
lock
lret
push
mov
xchg
adc
mov
mov
inc
fst
pop
es
das
cli
xchg
push
or
inc
dec
jmp
inc
and
lcall
sahf
insb
andl
outsl
and
and
cmc
inc
sub
repz
inc
jne
adc
mov
cmp
leave
ror
pop
mov
push
sbb
in
xchg
sub
push
add
push
xor
xchg
dec
cmp
dec
jnp
negl
sbb
mov
js
shrb
jge
scas
cmpsb
addr16
fisubrl
xchg
testl
pop
mov
mov
insb
or
dec
test
jnp
shl
xchg
add
mov
add
xor
loop
rolb
stc
add
shl
fs
cmp
pmaddwd
xchg
xor
mov
mov
push
jmp
rcr
clc
pusha
sti
xchg
cs
testb
sbb
into
aad
out
pop
int3
call
cmp
mov
mov
push
fistps
test
hlt
dec
adc
rolb
lcall
int
dec
lods
in
stc
test
pop
daa
dec
out
int3
cmp
pushl
sub
dec
addr16
bound
je
nop
xor
cmp
outsb
outsl
push
pop
cli
and
movsb
xchg
xchg
or
mov
mov
xor
jb
pop
pusha
jae
aam
cmc
dec
movsb
jno
jbe
popf
in
jmp
mov
pop
inc
decl
add
loopne
sbb
gs
xlat
ret
inc
sbb
pop
inc
rorb
mov
sbb
test
aad
mov
movsb
sbbb
call
pop
mov
inc
jns
push
in
mov
addb
mov
pop
inc
movsl
and
decb
in
pop
mov
test
cmp
andl
mov
movsb
lock
jno
mov
xlat
inc
hlt
xchg
inc
test
sbb
dec
sarl
or
dec
sahf
aam
inc
cs
adc
or
add
inc
imul
dec
lock
stos
and
fisubs
pop
pop
mov
into
bound
jmp
push
mov
mov
jae
xor
mov
xchg
sti
push
xchg
pop
stos
pusha
inc
push
adc
stos
aas
adc
insl
mov
pop
pop
xchg
pop
push
xchg
dec
icebp
gs
cld
loopne
movsb
jmp
int3
mov
sbb
xchg
lods
mov
inc
cltd
outsb
addb
mov
xor
push
sbb
or
das
arpl
repnz
test
repz
cltd
fnstcw
mov
inc
nop
add
pop
or
dec
out
js
test
jecxz
arpl
pop
or
mov
xchg
mov
push
mov
inc
push
cmp
sub
repnz
ret
aaa
sbb
test
addr16
cltd
mov
enter
add
lcall
outsl
push
int
dec
sti
test
call
mov
xchg
hlt
dec
dec
pop
push
push
cmp
mov
xor
movsb
cltd
ja
out
pop
dec
pop
cmp
adc
mov
test
xor
mov
xchg
movsb
nop
negb
sub
mov
loopne
mov
jbe
jge
imul
cltd
lcall
sub
into
xor
mov
into
jecxz
outsl
inc
xlat
in
pop
cwtl
lods
adc
shl
inc
data16
mov
xchg
xchg
push
xchg
cld
imul
ja
or
sar
sub
sub
push
lods
pop
sbb
or
mov
test
pop
mov
cs
inc
stos
fildl
adc
add
cld
inc
jb
cltd
rol
cmc
ja
aam
inc
jns
mov
ss
in
pop
fstpt
stos
adc
mov
je
xor
mov
imul
mov
mov
xchg
jp
lods
dec
mov
cmp
arpl
cmp
push
pop
aam
js
jmp
insb
mov
das
arpl
mov
ds
sahf
push
jnp
in
adc
pop
ficoms
ss
push
and
mov
test
xchg
mov
inc
sbb
xchg
push
divl
pop
push
leave
mov
dec
push
stos
lods
mov
movsb
aad
ljmp
sbb
add
push
adc
and
roll
mov
loop
lret
adc
es
jp
sti
mov
adcl
gs
outsb
ret
test
cmpsb
xchg
mov
dec
daa
jle
cmpl
scas
insb
daa
jecxz
enter
jge
mov
and
mov
push
rclb
jge
pusha
mov
aaa
push
nop
cld
inc
xchg
jg
sub
jmp
lods
mov
mov
insl
add
insb
clc
cmc
mov
pop
outsb
lahf
mov
xchg
popf
inc
pop
push
test
iret
mov
mov
xlat
icebp
into
sbb
dec
ljmp
stos
mov
and
dec
hlt
xchg
in
cmpsl
pop
inc
aam
sub
aas
out
fidivrl
adc
sbb
or
mov
mov
mov
mov
div
mov
add
scas
in
add
sub
out
nop
ja
fadds
incb
js
pop
into
int3
cmp
and
mov
fistpll
scas
lahf
mov
jns
jmp
scas
in
jae
mov
xchg
cwtl
in
loopne
push
sbb
jge
mov
or
sbb
popa
addb
mov
and
pop
cmp
fiaddl
cmp
jns
inc
jo
fwait
push
sub
jne
sbb
cmp
xor
in
adc
adc
int3
cmp
and
jnp
pop
dec
jbe
fstpt
popa
adc
jo
sub
or
ss
cmp
xchg
sbb
out
fs
inc
add
in
cmp
outsb
mov
mov
sub
cmpsl
xchg
call
nop
std
jle
fisubrl
mov
movsl
xor
push
inc
jbe
lret
cltd
inc
or
xor
dec
dec
in
test
movsb
pop
cmpsl
xor
cwtl
add
push
in
push
imul
mov
adc
fisubl
outsb
and
lcall
mov
or
xor
and
xchg
jae
sub
ficompl
and
xor
push
or
push
mov
push
push
and
inc
push
call
outsl
repnz
xor
int
mov
mov
cmp
mov
xchg
inc
xor
inc
push
pop
fnstenv
repz
mov
data16
arpl
not
popl
data16
push
les
xor
mov
shl
push
fdivs
xor
out
shr
pop
or
cmp
jnp
aas
hlt
and
sub
mov
add
negl
les
divl
out
fsubl
lahf
stos
fsubp
jl
cmpsb
adc
test
push
push
fdivp
xchg
pop
sub
xor
mov
mov
stos
add
xchg
push
pop
scas
or
pop
mov
sbb
test
daa
jb
inc
daa
sbb
xor
stc
loopne
repz
mov
and
jb
outsb
sbb
mov
mov
aas
rorb
xchg
push
mov
mov
sub
nop
and
xchg
sbb
into
test
mov
add
add
repnz
movsl
imul
pop
xchg
pop
mov
push
sbb
loope
and
dec
lds
lret
sbb
mov
inc
test
fwait
sbb
and
cmp
sbb
in
aam
mov
insl
stos
fwait
xchg
lret
fisubs
cmp
jmp
pop
lods
push
cmp
in
jp
push
lret
decl
ds
xor
dec
adc
repz
xchg
jle
xor
les
mov
inc
call
jb
inc
add
push
notb
add
xchg
in
test
xchg
xorb
ljmp
shl
mov
cmpsb
mov
sbb
inc
loop
cmc
jecxz
addr16
add
sub
sar
std
lcall
cmc
enter
test
adc
cli
xlat
jle
mov
test
add
cmp
loop
dec
test
sti
sti
test
addl
or
loop
adcl
mov
push
jg
cli
in
pop
cmc
cmc
cmp
daa
addl
js
out
xor
cmp
cmp
push
jb
mov
push
stc
subl
jmp
leave
and
ret
mov
imul
cmpsb
mov
fidivrl
xor
xchg
scas
icebp
pop
mov
addr16
xchg
cmp
inc
aam
stc
mov
lcall
addr16
fiadds
fwait
lds
cmp
push
xor
mov
enter
shlb
ret
sbb
jns
pusha
les
mov
sbb
or
lret
add
leave
sub
insb
sub
or
cmpb
lcall
push
bound
mov
dec
pushf
subl
aam
mov
xchg
pop
or
xchg
int3
ret
xchg
adc
xchg
dec
std
popa
lods
lret
outsl
ficomps
mov
lcall
xor
xchg
fsubs
pop
fbld
movsl
pop
and
pushf
add
jo
pop
adc
mov
pop
in
pop
pop
jbe
or
imul
stc
sub
or
adc
arpl
into
outsl
and
aad
add
ret
jle
xor
jnp
mov
inc
movsl
push
cmp
leave
jp
cmp
outsb
and
dec
sub
xchg
xchg
loopne
dec
in
sub
jl
xor
lcall
cmpsb
call
testl
adc
out
xchg
lods
fdivr
insb
push
xchg
mov
sbb
jnp
jg
lcall
mov
cmp
mov
sbb
push
inc
shr
dec
jbe
inc
cmp
push
xchg
cmp
lret
jnp
scas
pop
jae
or
outsb
adc
push
xchg
mov
mov
pop
mov
sub
cwtl
loopne
push
inc
sbb
mov
adc
push
cmp
lret
sbb
pavgb
hlt
fisttpll
notb
sub
mov
mov
adc
cli
aas
in
jno
cmp
sub
pop
rorb
lods
test
pop
jo
xor
inc
mov
aam
je
cmp
inc
sub
xor
dec
roll
add
and
jbe
adc
js
push
hlt
jle
pusha
fwait
cltd
test
std
movb
jno
fdivr
and
mov
dec
insb
cld
xor
jmp
cs
lretw
aas
cmp
fisttpl
jo
mov
xchg
push
into
mov
dec
loopne
in
int3
stc
xchg
adc
xor
pop
int
or
lods
aam
addr16
outsl
xchg
insb
sti
cmp
fld
and
lret
push
jmp
cmp
lcall
jbe
in
ret
ds
mov
adc
mov
mov
mov
ljmp
mov
jno
out
lods
pop
daa
movsb
daa
fdiv
pop
inc
sub
inc
mov
enter
push
insl
xchg
fidivrs
rcll
dec
stc
jbe
fisubl
mov
popf
imul
jl
into
mov
rorl
imul
mov
pop
dec
es
pop
jne
sar
insl
xchg
in
or
xchg
or
vpshlq
inc
gs
lods
lahf
sbb
test
shl
inc
std
push
xchg
push
and
fstps
out
jno
mov
and
popf
shll
popl
gs
mov
sbb
int3
das
and
sbb
sub
push
ja
cmp
jmp
lea
xor
lahf
imul
fcomp
sub
jno
faddl
push
fcoml
push
pop
mov
std
add
pop
in
nop
das
add
popa
arpl
ja
addb
and
push
dec
leave
pop
enter
dec
bound
pop
insb
fstl
dec
stos
push
cld
sbb
adc
int
pop
insb
push
stos
pop
mov
pop
outsb
push
arpl
outsb
fbld
inc
cmpsb
outsl
dec
xlat
jo
sbbl
cli
push
sahf
inc
dec
jp
dec
out
mov
sub
and
insl
nop
xchg
adc
and
int
imul
inc
mov
test
int
iret
xchg
flds
dec
movsb
out
les
movsb
push
ds
negb
mov
in
popa
sub
inc
mov
adc
lds
scas
test
arpl
mov
std
sahf
sbb
xor
in
push
mov
xchg
mov
mov
stos
cmp
mov
push
outsl
add
jbe
adc
cli
daa
cmp
dec
nop
push
push
sti
outsl
and
stc
and
repz
outsb
push
jno
mov
repnz
movsb
iret
mov
outsb
mov
cmp
lret
in
adc
mov
inc
dec
xor
clc
aad
lahf
add
pop
cmpsl
pop
scas
mov
lods
mov
enter
add
test
or
nop
and
negl
test
xchg
lcall
loope
fidivs
push
cs
jb
fs
push
into
push
cmp
mov
mov
stos
insl
call
in
mov
lret
lcall
mov
inc
mov
imul
adc
lret
xchg
sbb
loop
clc
jae
stc
fwait
lcall
sub
ror
leave
fists
pop
pop
stc
sub
inc
es
mov
fsubr
cmpsl
out
test
in
mov
pop
add
jg
and
xor
outsb
jae
jne
daa
sbb
lock
cmpsl
in
xchg
pop
ss
dec
push
pop
jge
jmp
push
mov
push
inc
xchg
std
imul
mov
mov
testl
inc
dec
stos
aad
add
fdivrp
in
push
pushl
xlat
mov
loope
pop
push
and
loop
or
sbb
loope
fiaddl
out
jae
jns
adcl
repz
ss
pop
ret
dec
adc
fwait
iret
outsb
stos
and
daa
ja
inc
cmp
pop
mov
fldt
xchg
mov
and
mov
jmp
out
mov
ret
pop
fcomp
push
cmp
push
js
movsl
sbb
cmp
scas
lds
xor
arpl
mov
sub
push
pop
inc
fistl
in
outsb
jnp
jp
xchg
fdivrp
xbegin
push
and
push
loope
xchg
les
std
jg
inc
lcall
aas
dec
pop
pop
jno
mov
inc
mov
and
xchg
rorb
mov
xchg
jp
je
or
pop
mov
or
sti
dec
cli
xchg
mov
and
push
subb
fmull
add
pop
test
push
movnti
dec
and
mov
into
testb
dec
fnstsw
add
call
add
shlb
das
ret
gs
mov
cltd
ret
xor
inc
stc
js
lahf
push
sbb
and
scas
test
mov
test
cmp
xor
cmp
ja
pop
insl
push
repnz
mov
xchg
sahf
lea
test
mov
fdivrs
leave
int3
sbb
out
sub
cmp
lds
pop
xchg
jmp
out
fsubl
ror
jmp
mov
add
fildl
push
out
jns
adc
daa
mov
mov
pop
bound
adc
aam
das
jg
add
les
push
ret
mov
emms
out
push
fistpll
xchg
mov
pop
push
lret
iret
dec
loope
imul
and
leave
fildll
cwtl
xor
pop
cmp
into
into
push
in
mov
fs
repnz
call
lahf
push
filds
loopne
push
mov
rcll
xchg
jns
lea
leave
outsb
cmp
or
ror
stc
or
dec
insl
and
sbb
cmpsb
repnz
cmp
aas
out
and
xor
loop
insl
fidivs
jne
cmp
insb
hlt
sbb
pop
fldcw
xchg
ds
cmp
je
popf
mov
mov
addb
sbb
jae
scas
cmp
shl
ds
push
push
xor
cmp
in
dec
inc
push
dec
xor
cwtl
or
or
fxam
cmpsb
jge
out
leave
cs
xor
mov
mov
cmp
ja
pushf
push
mov
in
jmp
sub
js
loop
xchg
test
add
mov
sbb
and
pop
inc
pop
lods
les
lods
lds
mov
ficomps
mov
imul
mov
mov
movsl
outsl
cmp
adc
out
arpl
insb
fwait
scas
and
push
fstp
dec
dec
scas
dec
pop
sbb
stos
xor
sbb
sbb
xchg
mov
jne
lods
leave
jo
sarl
dec
in
in
cwtl
cs
out
rcrb
pushf
and
std
lock
mov
add
fmull
ret
ds
sbb
std
pop
aaa
mov
mov
mov
or
mov
push
and
add
stos
xchg
push
cmc
cmp
imul
repz
jg
and
add
sbb
in
cmpsb
lcall
fisubs
sbb
ja
xor
ret
scas
data16
xor
jge
pop
leave
scas
dec
xchg
mov
adc
jle
pop
filds
imul
or
cltd
xchg
out
or
adc
or
or
pop
jno
push
push
mov
addr16
rolb
dec
mov
sti
fnstenv
mov
pop
aaa
pop
mov
stc
scas
test
mov
mov
inc
jns
add
cwtl
les
sar
shl
fwait
cli
notl
mov
and
or
sub
mov
and
daa
pop
notl
and
shrl
xchg
jecxz
xchg
push
mov
push
cwtl
jmp
and
sub
xor
fs
sbb
jne
sbb
iret
sub
push
add
add
jecxz
pop
mulb
dec
xor
imulb
dec
adc
cmc
out
jecxz
jnp
and
mov
inc
adcb
mov
and
js
aad
inc
iret
fiadds
jne
lret
fstl
cmp
jo
popf
mov
push
inc
mov
repnz
mov
adc
enter
add
sbb
imulb
rol
mov
out
ret
lods
xchg
xlat
in
adc
or
dec
sti
mov
ds
jmp
stos
or
lcall
sbb
lea
adc
gs
mov
add
fsubp
sti
jb
enter
xchg
dec
xchg
pop
imul
lods
std
push
inc
pop
xchg
loope
sbb
add
pushf
movb
xor
adc
push
xchg
sbb
push
mov
fists
xchg
fbstp
inc
ja
fistpl
outsl
lock
repnz
out
pop
loopne
xchg
mov
daa
xlat
addl
stos
sub
imul
addr16
sub
mov
dec
mov
mov
enter
lret
pop
pop
inc
jo
mov
xchg
aam
loopne
imul
sbb
jp
inc
and
rorl
notl
ss
dec
pop
fcmove
sbb
sbb
push
mov
fistpl
mov
mov
xor
add
rolb
outsb
push
imul
sbbl
loope
add
sbb
mov
ficompl
icebp
pop
rol
les
adc
dec
test
mov
subl
jne
cmpsl
in
push
jbe
or
xchg
cmp
mov
push
pop
jmp
xor
or
inc
pop
in
pop
bnd
call
orl
lret
or
jge
pop
imul
aam
push
test
lods
vmovsd
or
arpl
dec
cli
xor
popf
mov
sahf
cmpsb
xchg
add
fbld
pop
sbb
lock
mov
out
popa
test
cmp
dec
fisubrl
jmp
lods
out
mov
fildl
pop
jnp
lds
mov
adc
loope
and
lcall
mov
push
stos
shrl
out
jns
pusha
sbb
dec
adc
pop
arpl
xor
mov
sbb
ljmp
pop
stos
push
test
les
shlb
hlt
loope
xor
mov
inc
lahf
mov
jno
daa
das
xchg
nop
aad
sub
dec
adc
push
push
pop
fwait
ljmp
cltd
or
and
hlt
cmp
xlat
pop
xchg
dec
mov
je
clc
mov
out
ret
inc
jecxz
dec
cmpb
out
xorb
ficomps
cs
rolb
insb
lret
jo
push
aam
aas
jo
xlat
fnsetpm(287
in
sub
lret
mov
addr16
shrl
cmp
popf
ja
pop
ds
pop
or
fisttps
dec
enter
jle
divl
xorb
mov
insl
pop
cmp
fnsave
xor
sbb
loopne
js
imul
or
nop
or
out
jo
xchg
xchg
push
negb
fdivrl
je
cmp
xchg
mov
xor
pop
xchg
push
cmp
mov
jnp
stos
mov
lds
jg
or
out
sahf
icebp
incl
shll
mov
push
adcb
add
jecxz
mov
imul
push
mov
sbb
rcll
aas
pop
int
dec
push
push
ljmp
dec
cmp
mov
fisttps
call
adc
pop
loope
lods
cs
sub
in
or
or
mov
rorl
mov
aas
icebp
mov
aam
jle
mov
sbb
es
or
jp
jae
dec
je
aam
inc
je
in
sub
mov
adc
and
xchg
or
call
adc
fwait
mov
sub
push
push
neg
sti
push
shl
inc
cmp
jmp
lods
insb
add
pop
inc
add
aam
aaa
cmpsl
mov
lret
xor
xorl
dec
std
mov
cmp
xchg
ret
cmp
fnstsw
ljmp
mov
mov
xchg
mov
and
cltd
cmp
or
xchg
lcall
jae
mov
xchg
cwtl
mov
sti
jns
push
pushf
cwtl
xchg
mov
les
pop
das
lods
imul
mov
xchg
push
adc
adc
or
cmpsb
jo
adc
lahf
inc
jle
fwait
insb
mov
and
fnstsw
daa
and
clc
add
lods
mov
cmp
inc
lods
cmovp
pop
jmp
jmp
fnsave
mov
addb
pop
aaa
lea
not
mov
cmpl
jl
pop
jno
or
push
adc
mov
mov
or
hlt
cmp
dec
mov
ljmp
sbb
mov
cs
pop
sbb
push
jmp
aaa
jecxz
jmp
es
cmp
je
pop
aas
int3
rcr
fs
mov
or
cmp
jl
mov
mov
lock
adc
sub
movsb
cmp
cmp
addb
test
or
aad
lahf
int
pusha
jmp
push
jg
pop
and
cs
hlt
mov
adc
aam
adc
sarb
or
mov
and
out
div
add
inc
inc
inc
xchg
leave
orl
insl
xor
aam
push
add
push
out
hlt
sub
sub
rol
jae
push
std
cmpsb
adc
mull
jbe
jbe
out
mov
out
movsl
push
pop
pop
adc
sub
xchg
loope
lock
movsb
shrb
xor
and
pop
xchg
outsl
into
fimull
jno
sar
push
pop
aaa
lods
sti
sub
popf
and
std
lcall
xchg
sbb
inc
mov
adc
mov
cld
test
push
test
das
push
or
mov
out
test
push
shlb
jecxz
mov
loope
inc
icebp
daa
push
neg
arpl
sbb
in
mov
pop
fimull
or
outsl
cmpsl
lahf
adc
shr
xchg
inc
and
aas
loope
pop
bound
in
shlb
dec
pop
jmp
arpl
insb
pop
jl
enter
jne
mov
popa
rolb
dec
jae
jmp
imul
ds
sbb
xor
enter
imul
addl
mov
jle
sahf
pop
divl
fistpl
push
dec
data16
jb
sarb
das
test
pop
push
pop
shrb
pop
jb
dec
cwtl
mov
sub
pop
lret
jno
pushf
paddb
rclb
inc
clc
mov
push
sarb
cmp
pop
mov
popf
xchg
cmp
stc
sti
pop
adc
ret
movsl
add
and
xor
push
out
dec
xlat
xchg
bound
gs
mov
mov
xchg
out
das
shl
int3
xor
imul
cmpsb
xchg
std
mov
es
insl
imul
mov
sti
adc
inc
xchg
push
jg
push
or
sbb
data16
add
out
aam
ret
out
mov
jo
adc
cmc
popa
mov
add
out
mov
xchg
pop
insl
or
xor
outsl
xchg
clc
mov
xchg
jb
repz
xor
and
in
popa
sbb
xchg
test
mov
ss
ret
mov
lcall
pop
dec
lock
mov
dec
enter
popa
imul
int
jae
pop
ja
add
pop
shrl
loopne
adc
das
dec
mov
add
and
int
cmpsb
movl
mov
fisubrl
inc
xchg
or
sbb
push
inc
xchg
mov
cltd
jecxz
ja
pop
mov
adc
dec
cmp
enter
ja
loopne
push
jl
sub
sbb
push
pop
sbb
cmp
cs
sub
push
popf
pushf
or
pop
std
cli
divb
ds
cmc
std
les
arpl
adc
push
mov
nop
add
cmpsl
dec
ds
sbb
movsl
insb
pop
in
xchg
in
sub
pop
and
fadd
sarb
push
lock
jbe
imul
inc
rolb
div
bound
cli
dec
test
push
add
push
lods
dec
mov
fwait
jbe
divl
movsl
test
ret
notb
test
gs
or
add
sub
xor
icebp
dec
stos
call
jmp
mov
xchg
loop
and
cmp
pop
jo
es
std
pop
insb
aad
data16
inc
shlb
ja
lods
mov
cmp
in
jmp
cld
add
ret
xchg
adc
xor
and
adcb
iret
sub
push
sbb
push
inc
pop
sahf
jb
int3
test
sub
inc
int3
rcrl
mov
nop
mov
sti
arpl
sub
aas
push
push
loope
fadds
jl
pop
pop
sbb
ret
dec
push
jnp
xchg
cmp
jne
scas
cld
sub
test
dec
mov
scas
pop
pop
gs
or
test
mov
push
divl
mov
cltd
pop
push
mov
mov
movsb
inc
cmpsb
std
ret
sbb
pop
jge
pop
sti
jle
xchg
rolb
xor
clc
pop
test
push
adc
shrl
jne
jmp
push
sar
mov
rcrl
cmp
fstpl
push
pop
ljmp
fnstsw
add
fwait
cs
roll
fists
shll
aad
jge
xchg
test
jecxz
sti
mov
dec
jle
jge
and
inc
mov
mov
fistl
mov
adc
shlb
dec
mov
test
xchg
cltd
repz
inc
inc
loop
sbb
cmpb
ret
pop
or
fs
negb
test
mov
fwait
mov
stos
dec
push
je
pop
xchg
push
nop
mov
clc
add
sub
and
xlat
xchg
or
nop
add
imull
cwtl
add
loope
jge
and
and
mov
sub
inc
dec
mov
int
das
pop
loop,pt
popf
jp
and
pusha
mov
leave
cld
aam
and
mov
pop
push
pop
leave
push
mov
or
lret
loopne
repz
xor
andnps
mov
xor
lds
inc
dec
test
xchg
test
cs
sar
addr16
and
add
sbb
clc
mov
xor
dec
insl
adc
je
pop
mov
pop
jecxz
std
sbb
in
movsl
dec
mov
enter
dec
lret
jmp
cmp
je
xlat
push
scas
pop
cmp
push
and
movsb
fstpl
adc
jmp
in
dec
subl
scas
adc
pop
sub
stos
movhps
sbb
xchg
mov
pop
sbb
mov
inc
into
mov
adc
sti
dec
dec
in
push
cmp
das
lret
dec
scas
hlt
ds
out
xchg
mov
imul
cmp
out
mov
shlb
xor
inc
test
inc
or
rol
flds
inc
in
stos
mov
and
sti
aaa
xchg
sahf
inc
cmp
test
stos
pop
insl
push
or
mov
mov
das
test
xor
imul
aam
call
leave
mov
push
clc
fldenv
dec
sub
xor
fldt
popa
out
sti
sbb
mov
imul
mov
fdivrl
fimuls
or
xchg
repz
mov
pop
cld
xchg
push
jge
mov
mov
and
insl
and
xor
mov
gs
ret
pusha
sbb
shrl
push
ret
pushf
inc
movsb
jo
aaa
mov
xor
leave
mov
add
jae
cli
jecxz
xor
fisttpl
add
mov
jb
mov
cli
pop
inc
gs
out
hlt
pop
mov
sbb
cmp
js
aad
stc
dec
xchg
sti
or
jmp
pop
cwtl
add
adc
pop
cmp
push
sti
movl
ss
test
out
mov
shlb
cmpsl
sub
sbb
cmp
dec
jg
push
pushf
inc
mov
sub
inc
inc
mov
push
fimuls
repz
outsl
mov
clc
xorl
repz
and
pop
sub
sahf
mov
movsb
push
pop
pop
mov
jge
mov
loop
or
add
cli
dec
mov
das
fisubs
aad
aam
lahf
incl
xchg
stos
jo
ja
xor
or
inc
or
fwait
and
or
popf
loopne
xor
insl
mov
ja
push
mov
rep
cmpsb
push
popa
lahf
cmp
inc
int3
hlt
mov
sbb
pushf
xchg
out
testb
mov
adc
leave
sti
jge
gs
sub
call
cmp
jle
movsb
lea
pop
jnp
fistps
mov
sbb
dec
pop
jp
mov
push
shll
je
add
cmp
push
loopne
push
shlb
and
jne
xchg
stc
and
xor
xchg
imul
mov
xchg
int3
and
pushf
mov
fidivl
or
add
leave
cmp
pop
sti
stos
lahf
push
lods
outsb
in
xchg
lds
loope
cmp
into
enter
add
or
cmp
pushf
inc
sbb
leave
adc
cmpsl
inc
push
jbe
add
cmp
jo
push
pop
imul
dec
subb
cli
mov
mov
xchg
les
cmp
movsb
rcll
sub
xchg
mov
repz
sbb
insl
push
sbb
sub
fcomip
mov
cmpsb
push
mov
scas
sbb
aam
adc
cmp
aad
lods
loop
sub
add
add
popf
adc
ret
lahf
repnz
scas
mov
jle
xchg
xchg
mov
xor
scas
jp
lret
ss
add
jg
mov
addl
xchg
sub
pop
int3
gs
mov
call
adc
pusha
cmp
adcl
cmpsb
xlat
adc
scas
adc
mov
repz
xor
lret
mov
mov
inc
cld
ss
les
push
mov
mov
sub
and
xor
xor
shll
jle
bound
fsubl
scas
clc
je
test
jge
into
imul
jns
bswap
scas
pop
mov
pusha
mov
push
cld
iret
stos
push
push
mov
lods
dec
dec
xor
daa
cmp
mov
lret
scas
lahf
or
mov
mov
cmpsb
jo
shll
push
mov
fisubs
mov
jmp
mov
sbb
push
mov
mov
mov
adc
xchg
adc
lods
mov
in
mov
sub
repz
cmpsb
and
in
popa
jp
ss
pop
cmp
add
mov
xor
mov
cmp
lea
gs
inc
loop
insb
mov
mov
mov
or
lahf
jns
popa
cmp
xor
fmuls
dec
popa
loope
inc
or
sbb
cmc
popa
dec
mov
xchg
inc
gs
jl
js,pn
pop
dec
jnp
in
mov
sahf
jge
das
jnp
dec
mov
sarl
aas
or
pop
sbb
jno
roll
sarb
loope
js
push
mov
jmp
sub
pop
mov
lahf
pop
jbe
mov
cmc
sahf
mov
test
ret
and
inc
sub
loopne
cli
or
stc
mov
add
lock
add
and
mov
add
pop
mov
adc
jle
inc
or
or
jmp
test
cmp
push
jae
insl
adc
rcrl
mov
loopne
pop
fldcw
rcr
jo
sbb
inc
push
mov
test
mov
inc
cld
mov
pop
cli
add
push
jl
imul
orb
out
push
fwait
mov
call
pop
mov
out
pop
push
cltd
ss
add
xor
push
sbb
inc
dec
xchg
lret
ret
mov
cs
jge
fisttpl
arpl
sbb
mov
insl
mov
push
fs
sahf
gs
jg
jo
inc
stos
pushf
adc
dec
lock
outsb
imul
xor
arpl
fisttpll
sbb
xchg
je
das
xor
adc
aaa
sbb
mov
push
sbb
push
mov
mov
insl
rcl
cmp
add
fadd
inc
push
pushf
lods
jae
ror
sub
mov
cmp
js
fsubl
mov
sbb
ljmp
aas
mov
and
mov
out
mov
cmp
loopne
add
clc
sub
ret
mov
push
jns
push
lea
pop
mov
sbb
int3
das
test
mov
push
fcomps
jns
push
push
and
jmp
out
mov
imul
aad
mov
mov
pop
xchg
push
test
std
push
out
popf
push
leave
cmp
in
ljmp
sbb
popa
popf
iret
mov
cmp
adc
nop
lcall
js
and
cmpsb
iret
push
pop
je
mov
lret
pop
mov
inc
jne
cld
test
xchg
das
sub
add
andb
push
loope
sbb
mov
push
fbld
jo
test
pusha
mov
push
add
pop
pop
xchg
out
push
stos
lock
insl
fdivrs
fdivrl
outsl
inc
xchg
cltd
fdivrp
xchg
xchg
pop
aas
cmp
cmp
lcall
xor
sbb
bound
sbb
jmp
add
lds
mov
dec
cwtl
sysexit
or
inc
in
insb
add
xor
pusha
sbbl
xor
mov
cwtl
inc
jbe
mov
dec
pop
xor
xchg
adc
xor
sub
push
aas
dec
mov
jle
or
stc
outsl
jbe
fprem
lahf
sbb
dec
pushl
dec
jmp
push
shl
jb
outsb
jg
jg
jno
cmp
adc
insl
inc
stos
testl
mov
jno
test
cmc
mov
push
dec
cmp
pop
mov
cmp
loope
bound
dec
jge
pop
adc
or
sub
cmc
imul
cmp
add
repnz
cli
mov
xchg
xchg
sbb
ret
bound
outsb
and
push
pop
xor
and
icebp
cs
xor
cmc
inc
shll
call
pop
dec
push
ja
add
hlt
fsts
xor
jecxz
inc
iret
stc
scas
pusha
int3
push
adc
sbb
dec
lods
mov
mov
stc
jae
cmpsb
sub
jbe
jns
imul
inc
sbbb
push
out
push
sbb
or
pop
lret
rolb
lods
cmp
subl
mov
mov
xor
xor
insb
stc
insl
mulb
pop
jge
add
ficomps
push
es
jl
lods
mov
or
call
ret
mov
or
lods
xor
jle
mov
stos
sbb
orb
ljmp
outsl
fnstcw
loope
andnps
mov
lea
les
out
mov
enter
jbe
add
es
aam
xchg
popa
jno
inc
scas
ret
andl
add
cmp
inc
jecxz
push
and
fisubl
inc
sub
mov
sbb
push
jno
int
loope
aam
dec
mov
pop
push
xchg
or
ja
push
lret
pop
imul
loop
dec
push
add
ljmp
xor
stos
mov
test
frstpm(287
sbb
jne
mov
mov
lods
push
movsl
popf
pop
in
test
fs
mov
mov
push
cli
lds
fs
in
sbb
testl
out
adc
fmull
xchg
xchg
inc
mov
inc
dec
mov
imul
add
adc
data16
push
sysenter
es
inc
into
stc
cmp
cltd
fnstsw
mov
jle
dec
rcrb
inc
and
pop
cmp
popf
imul
jge
jge
xchg
push
xor
inc
les
mov
push
sbb
into
adc
bound
shlw
mov
outsb
in
insl
int3
lds
lret
cmpsb
repnz
add
stos
xlat
or
and
push
cmp
in
sbbl
icebp
movsb
mov
mov
gs
push
das
pop
xchg
pop
scas
push
add
std
inc
or
mov
xor
mov
repz
mov
or
push
cmp
cs
cmp
mov
fsubr
js
arpl
inc
aam
cmp
stos
jbe
cmpl
sub
inc
sarl
mov
loopne
mov
aad
jo
jo
in
cs
into
jbe
jl
dec
mov
dec
sbb
xchg
mov
arpl
scas
arpl
push
adcb
outsb
sub
int3
dec
or
cmp
insb
iret
frstor
arpl
add
mov
pop
add
push
cld
outsl
dec
pop
jae
mov
mov
repz
mov
iret
out
dec
out
mov
add
clc
arpl
sahf
pop
es
scas
cmp
hlt
jl
cmp
lahf
js
pusha
aam
jl
jle
cmp
cs
stos
adc
stos
daa
adc
mov
or
push
jecxz
add
xchg
xchg
xchg
mov
pusha
sti
cmp
mov
mov
and
cmpsb
mov
push
lret
stos
mov
fisttpll
iret
xlat
push
inc
jbe
outsb
jno
jo
aam
shrl
dec
cld
popa
into
push
lret
and
push
jns
aad
loopne
sbb
xlat
inc
push
dec
jge
pop
jns
rclb
test
ds
push
dec
addr16
inc
js
pop
frstor
out
add
cs
mov
fisttpll
push
cmp
xor
or
inc
cmp
push
gs
insb
pop
test
dec
jmp
sahf
mov
pusha
jns
and
xchg
dec
iret
pop
scas
cmpb
and
adc
aas
imul
push
push
rcll
testl
sbb
decl
sbb
xchg
mov
bound
sub
adc
lods
dec
jo
xchg
pop
mov
ss
fisubrl
mov
fiadds
xchg
mov
xchg
repz
mov
xchg
fwait
jns
incl
imul
or
push
mov
test
imul
test
cmp
shlb
sub
dec
cmpsb
out
jmp
in
mov
cmpsb
dec
push
dec
sbbl
addr16
out
int
sahf
xchg
icebp
fcmovnu
lret
loope
aaa
pop
push
dec
rolb
dec
pop
mov
cmp
addr16
std
pop
push
imul
inc
xchg
cmp
adc
and
imul
pushf
xchg
and
pop
sbb
mov
unpckhps
fildll
inc
or
loopne
cmc
xor
cmp
sbb
leave
popf
add
jb
sub
in
pop
lods
dec
dec
mov
dec
daa
aad
push
stc
inc
mov
cld
addl
sti
fstl
sysenter
imull
cltd
inc
rcrb
mov
inc
bound
iret
lds
popa
push
xor
in
dec
push
insb
mov
fwait
or
pop
jno
adc
fisubl
xor
dec
out
and
ja
mov
add
sub
jmp
sbb
push
cmp
mov
pop
inc
fadds
sbb
adc
xor
movsl
pusha
add
cmp
leave
or
jp
jae
popf
popf
pop
addb
cmc
insl
xlat
pop
mull
mov
jle
movsb
push
push
jp
mov
add
or
sbb
popf
dec
xchg
push
cwtl
outsl
bound
inc
xchg
mov
pop
and
mov
mov
mov
push
push
das
adc
xchg
and
in
iret
test
xor
loopne
test
and
stos
mov
fistl
dec
dec
jmp
out
cmp
jge
push
push
rolb
dec
pop
jae
dec
and
jl
mov
inc
sub
mov
xor
or
movsb
ret
andb
push
ret
stos
jbe
in
aam
roll
fimull
xor
and
fsubr
fs
stc
xor
pop
clc
jbe
pop
das
in
cltd
out
negl
add
js
or
sub
push
and
sub
push
daa
pop
adc
repz
mov
jle
shr
mov
hlt
push
inc
int
mov
pop
lods
push
or
in
cmp
mov
inc
shrl
fsubrs
gs
imul
and
inc
jnp
icebp
cmpsb
mov
push
cmp
xor
adcl
out
mov
sub
mov
lret
add
int3
int3
inc
outsl
rcrl
push
jbe
cmc
leave
mov
js
xchg
or
js
cmpsl
jmp
push
out
sbb
fistpl
js
enter
xor
push
xchg
adc
stc
stos
cmp
xchg
or
lret
mov
addr16
adc
add
adc
lods
call
dec
xor
dec
push
popf
out
and
fcomi
push
aam
jmp
jg
xor
je
test
pop
jg
dec
xchg
cmp
mov
pop
xor
repz
or
pop
mov
sub
call
jle
dec
les
mov
pop
fucomip
inc
mov
call
mov
rolb
or
xchg
mov
mov
mov
leave
insl
jnp
pop
dec
cmpsb
mov
dec
outsl
imul
or
movsb
cli
push
out
mov
imul
adc
lods
cmp
nop
mov
int
das
mov
pop
idivl
inc
into
out
dec
jb
daa
dec
add
inc
movsb
xchg
mov
adc
filds
mov
adc
fists
sbb
mov
pusha
inc
push
shrl
push
fdivl
cwtl
andb
int
pop
call
mov
dec
xor
inc
in
mov
loop
outsl
incb
sub
mov
cmp
adc
hlt
xchg
jbe
mov
outsb
push
in
mov
std
fucom
cltd
adc
jp
jmp
push
out
or
push
repnz
cltd
lods
in
inc
mov
js
scas
cmp
lahf
stos
add
sti
sub
sub
daa
push
xchg
pop
push
out
loope
adc
mov
push
push
sub
push
cs
mov
movsl
popa
andl
call
adc
mov
pushf
adc
loop
xchg
cltd
leave
mov
into
fwait
negl
cmp
iret
enter
pop
xchg
add
call
ficoml
xchg
pusha
add
add
imul
inc
mov
cs
mov
out
lock
pop
imul
cmc
mov
adcb
push
adc
imul
addb
dec
out
movsl
ret
movsl
and
jne
xor
push
aaa
sub
add
and
divb
loopne
imul
ljmp
or
adc
fwait
bnd
call
jb
lds
std
pop
mov
decl
fs
cmpsb
jae
mov
xchg
mov
xor
or
mov
iret
adc
sub
mov
mov
ret
sbb
cmpsl
pop
mov
es
out
bound
or
sbb
jle
add
jl
fistl
sti
imul
enter
outsl
lods
pop
jns
jbe
jmp
das
ret
mov
pop
add
jp
mov
mov
rcr
push
aam
jnp
cs
sbb
rcll
iret
mov
repnz
sub
xor
jbe
dec
jle
mov
jecxz
jge
xchg
push
mov
push
mov
cs
sbb
js
in
fs
insb
pop
dec
cmpsl
aaa
mov
stos
pop
rolb
std
fcomp
lds
loopne
imul
shlb
in
mov
pop
in
or
andb
sub
adc
pop
inc
sub
jl
andl
cmp
pop
dec
ljmp
cmc
mov
mov
insl
lret
arpl
idivl
inc
mov
inc
cmpsb
pushf
xchg
aas
popa
into
adc
fdivs
stc
pop
mov
lret
push
ljmp
inc
lds
pop
sbb
jo
or
mov
rcrl
xorl
clc
mov
xchg
mov
std
lds
jae
cltd
movsl
mov
xchg
push
nop
and
into
jecxz
int
xor
nop
jle
scas
pop
jp
pop
adc
outsl
jle
loopne
mov
jb
insb
cs
pop
enter
cwtl
fldt
addr16
inc
dec
cmpsb
xlat
mov
sahf
inc
aaa
in
ficoml
xor
jle
push
sub
into
idiv
jp
inc
xor
mul
jmp
lea
xchg
rcrb
call
push
inc
out
jmp
adc
lock
cmpsl
sarl
stc
repnz
scas
mov
sub
mov
dec
sbb
add
cmp
adc
in
ret
lret
sbb
lcall
insl
sbb
add
fstpt
push
mov
lret
jne
mov
testl
sarl
sar
int
scas
es
cmc
or
cmp
scas
xlat
push
test
pop
call
mov
push
or
add
inc
cmp
inc
mov
sti
mov
cli
ljmp
ss
sub
insl
pop
daa
mov
insb
lret
fs
mov
iret
inc
arpl
or
pop
jbe
push
lahf
xchg
mov
jmp
mov
mov
ret
rol
push
mov
aad
dec
stc
push
xor
jnp
std
cltd
fdivl
mov
inc
jns
out
mov
clc
int3
popf
adc
jb
add
push
jne
sbb
lcall
jne
das
adc
pop
or
inc
stos
pop
and
dec
inc
clc
pop
mov
mov
adc
mov
xor
add
or
push
pop
jecxz
ret
sbb
ret
jnp
cmp
or
test
sub
mov
dec
xchg
add
movsl
es
add
imul
jge
or
mov
or
adc
pop
arpl
orl
pushw
mov
push
dec
bound
mov
jo
sbb
std
fdivrp
dec
push
jge
bnd
arpl
orl
mov
sahf
mov
ss
in
int3
lea
fistpl
xor
and
into
int3
scas
cli
pop
push
rcrl
sbb
ficoms
or
add
mov
lret
pushf
push
nop
test
gs
dec
nop
aas
lahf
jbe
xor
lods
push
jne
clc
lods
dec
shrl
xchg
scas
sbb
adc
fisubrl
or
lods
lret
jbe
lds
sub
mov
sub
or
xchg
lea
rorl
lcall
and
jns
push
data16
dec
add
rcr
sbb
add
mov
cmpsb
lret
gs
test
add
or
enter
pop
mov
loopne
jnp
out
in
jmp
dec
lds
mov
rcrb
dec
push
fwait
in
imul
xchg
cs
dec
adc
push
or
ret
push
aaa
sub
gs
aas
js
les
popf
adc
pop
cltd
fcompl
mov
fidivrl
popa
std
aas
rcrb
ds
jnp
xor
cmp
push
adc
fists
int3
rol
jl
mov
nop
test
mov
xor
addr16
subb
xor
int
in
int
int3
jb
das
pop
dec
push
inc
aad
outsb
xlat
lock
cs
cmp
jg
int3
sahf
inc
mov
std
or
enter
stc
or
rolb
stc
mov
insb
dec
nop
mov
ror
pop
mov
das
in
mov
aas
icebp
mov
fsts
sarl
pop
cmp
sub
push
aas
lcall
jbe
mov
repnz
fs
dec
imulb
dec
stos
test
arpl
test
jge
cmc
stc
inc
jb
mov
hlt
adc
incl
jns
imul
inc
jns
dec
xchg
push
cmp
fbstp
xor
jmp
in
ds
xlat
call
add
cmp
add
fwait
insl
dec
or
lods
loop
cs
adc
stos
mov
pop
and
adc
gs
xchg
and
imul
mov
xor
inc
jg
xchg
ds
icebp
mov
ja
clc
jg
out
insb
pop
pop
inc
bnd
pop
mov
fcmovbe
std
rolb
std
ret
sbb
test
es
in
rorl
clc
mov
mov
sub
push
stos
adc
sub
inc
in
lock
inc
cmp
jno
bound
ret
jecxz
scas
add
lds
adc
dec
int3
dec
mov
je
push
jno
mov
js
mull
mov
fisubs
lret
das
enter
xlat
cmovae
add
pop
xor
mov
decb
cld
fs
mov
mov
js
test
jp
mov
jge
cmp
xor
pop
imul
adc
and
xchg
out
add
mov
imul
jle
jmp
ficompl
dec
push
pop
jle
repz
pop
push
mov
fcmovnu
mov
add
insb
adc
pusha
in
js
cmpsb
out
and
or
pop
xchg
xchg
fsubrs
add
into
shll
es
xor
sub
repz
fcoml
lea
leave
cmp
es
repnz
push
cmp
clc
pop
sahf
dec
movsb
xchg
jo
jmp
decl
hlt
xchg
pushf
pop
gs
ds
xchg
push
push
movsl
mov
add
and
pop
xor
pop
mov
shrl
xchg
inc
pop
jae
xchg
int
sub
lods
imul
je
addr16
insl
shll
out
mov
adcl
sub
pop
jb
mov
ret
xor
mov
pop
lret
push
adc
push
ljmp
and
jg
mov
movzbl
out
dec
mov
pop
pop
aad
aam
inc
fxch
mov
jo
or
lahf
pushf
dec
js
jp
lar
sub
xor
hlt
or
outsl
nop
fstps
into
or
xor
repz
mov
testb
or
xor
cli
cwtl
lods
xchg
mov
jno
xor
rol
fwait
addr16
shll
inc
lret
das
sahf
or
sti
or
push
mov
pop
mov
xchg
mov
and
mov
popf
rorb
fsubl
mov
filds
xor
enter
shrl
sbb
pusha
lds
mulb
dec
mov
imul
jnp
and
insl
pop
outsl
push
mov
jae
jle
mov
daa
jno
mov
push
xchg
mov
inc
dec
xchg
inc
mov
xor
xor
repz
cmp
inc
push
or
sbb
mov
pop
dec
adc
mov
lods
ret
cwtl
dec
out
enter
xchg
jmp
popa
sub
ficoml
mov
mov
pop
movsl
call
or
pushf
ret
fs
dec
cmp
cltd
adc
inc
jae
bound
mov
cmpsl
pop
in
xchg
mov
add
push
sbb
out
inc
xchg
dec
cmpsl
fnsave
ret
mov
sti
cmp
iret
push
mov
lret
fidivrl
or
jge
aas
lods
filds
add
mov
lret
xor
pop
aam
loope
sub
hlt
sbb
fs
loope
mov
add
rorb
ret
cmp
js
pop
aad
xchg
repnz
ds
outsb
jb
fcoml
cmp
mov
mov
push
fdivrs
adc
rcll
ja
sbb
inc
fldl
pop
cmp
cmpsb
fisubs
sub
aad
push
pop
mov
stc
dec
mov
or
mov
sub
mov
lea
jbe
arpl
sub
lahf
clc
outsb
scas
lea
inc
fistpll
stos
xchg
int
in
add
roll
movsb
push
xchg
lret
lret
loope
lock
movsl
push
ffreep
xchg
int3
subb
or
push
lahf
inc
aam
sub
scas
shlb
sub
adc
das
fyl2xp1
pop
jbe
push
push
mov
mov
mov
mov
sahf
add
rcrl
pusha
mov
jle
cli
add
stos
lahf
ljmp
pop
sbb
cltd
lock
dec
arpl
push
mov
les
das
mov
andb
std
clc
cmp
mov
mov
jae
js
idivl
add
inc
mov
inc
aad
mov
inc
cmp
insl
sub
mov
mov
adc
lea
jp
push
imul
rcl
imul
mov
adc
stos
bound
xchg
mov
iret
xchg
mov
jo
inc
mov
mov
gs
mov
andl
jno
shlb
popa
or
in
push
add
add
arpl
ret
mov
shr
mov
mov
clc
stc
sbb
daa
add
adc
movsl
lock
outsb
lods
inc
and
js
ds
invd
and
mov
push
push
jmp
pop
lret
loop
fistpll
aaa
and
push
push
pushf
fisubrl
jg
add
sbb
bsf
cmp
jnp
or
cmpsb
scas
cmp
ljmp
pop
mov
lcall
mov
bound
pop
and
pop
imul
into
jns
jg
mov
xchg
les
adc
pop
test
test
mov
jle
mov
pop
cmp
sbb
or
adc
into
fsubrl
cld
or
mov
addb
lock
cmp
pop
jno
mov
mov
test
xlat
pop
pop
shll
dec
xchg
xlat
mov
imul
sub
jecxz
sarb
fsubr
cmp
inc
idivb
xor
call
mov
sbb
scas
mov
repnz
pusha
xchg
out
mov
jnp
inc
pop
push
mov
aas
movsb
movsl
push
test
cmp
cltd
pop
addl
js
xchg
es
push
sbb
shrb
mov
aaa
add
int3
and
pop
sub
aas
or
sbb
adc
fildl
cmp
mov
in
ljmp
imul
aam
stos
sub
jg
arpl
or
mov
cmp
push
fwait
jns
xor
sbb
add
lcall
out
insl
lret
dec
in
xlat
sbb
cs
sbb
cmp
xchg
lock
dec
ds
pop
into
mov
dec
arpl
sbb
enter
fnop
mov
mov
mov
fcomps
adc
stos
push
or
mov
pop
call
and
mov
xchg
shl
pop
fcoms
pop
nop
lahf
out
adc
pop
gs
lret
scas
in
jno
push
xor
jmp
aas
mov
push
stos
and
stc
xchg
or
inc
or
jmp
inc
mov
sub
scas
pop
jbe
adc
or
mov
jb
divb
test
lret
pop
sbb
sbb
and
xor
dec
jne
inc
mov
adc
cs
pop
out
mov
inc
and
dec
les
adc
xchg
aaa
and
sub
stc
orl
jmp
push
push
aas
out
xor
mov
daa
stos
rcrb
cmpsb
or
pop
std
mov
pop
jnp
and
xchg
mov
adc
filds
pop
pop
addr16
cmp
add
push
fwait
mov
enter
xor
xchg
adc
sub
pusha
jae
push
int
add
iret
mov
jb
ret
mov
enter
insb
dec
jo
or
jp
cmpsl
and
adc
ffree
push
mov
test
mov
xor
xor
push
leave
scas
xchg
mov
dec
test
adcb
xor
pushf
aas
xchg
arpl
sar
adc
aas
push
and
negl
push
mov
mov
jae
adc
and
fisttpl
or
in
std
sti
mov
imulb
bswap
mov
enter
mov
das
dec
js
dec
ja
lahf
jle
cmpsb
shlb
push
dec
cmp
mov
cld
xor
in
jae
rol
xor
push
jne
mov
push
add
xchg
rcl
test
mov
pusha
push
dec
dec
fs
fadd
sub
cmc
stc
lcall
insl
and
xchg
movsb
test
nop
xor
push
lods
inc
mov
adc
jge,pn
cmp
test
pop
fcom
adc
enter
iret
into
mov
push
fisubrs
xchg
push
pop
xor
psubsb
xor
jbe
push
xchg
jne
fsubp
adc
orb
mov
ja
sub
cmpb
movsl
cmpsl
pop
inc
lods
int3
pop
into
into
xchg
out
or
pop
insb
int3
mov
js
lret
add
add
or
jne
out
add
mov
mov
cmc
jbe
out
aad
mov
jle
jnp
fwait
push
ljmp
fsubr
pushf
mov
in
imulb
bound
aam
scas
jl
sub
vmread
push
popf
cli
in
xchg
xchg
inc
andl
hlt
fdivr
xor
out
lods
mov
xlat
lods
shrb
xchg
cmpsb
jecxz
mov
add
jecxz
les
stc
or
mov
and
lahf
les
mov
push
inc
and
out
pusha
push
push
pop
cmp
cmc
mov
xchg
cmp
sub
nop
pop
cmp
stos
mov
dec
fildll
out
ret
outsb
out
cs
rcr
mov
fs
add
adc
push
adc
pop
leave
int3
hlt
pusha
shll
sarb
jno
ret
sbb
xchg
loop
inc
xchg
sbb
lahf
jne
dec
shrb
aaa
imul
pushf
mov
lret
in
push
popf
jae
push
mov
clc
jnp
mov
stos
int3
or
or
dec
mov
arpl
fidivrl
pop
jmp
push
insb
mov
and
repz
test
jmp
ja
pop
pop
lea
mov
idivl
call
inc
fcom
movsb
idivl
jge
pop
test
pop
andl
ret
inc
sub
in
sbb
or
and
lea
iret
xchg
notl
push
movsb
mov
into
outsl
dec
mov
and
dec
pop
lret
pop
or
imul
sbbb
mov
js
pop
ljmp
cmp
pop
xlat
and
cli
adc
xchg
data16
adc
sub
jb
jo
dec
lret
jge
out
xor
jb
add
pop
iret
cli
inc
cmc
scas
stc
pushf
int3
push
cmp
cwtl
popf
inc
aam
mov
dec
dec
sub
in
or
fsubl
outsl
push
adc
rclb
loope
push
lcall
xchg
repnz
orb
out
fcmovnb
imul
push
lahf
jnp
xor
push
mov
inc
mov
movsl
or
jnp
out
popf
xorl
inc
adc
or
dec
add
mov
ficompl
adc
sahf
bsr
mov
adc
add
mov
fisubrs
in
icebp
nop
fimull
movsb
push
adc
jb
xor
cmp
mov
pop
inc
test
lahf
jb
scas
mov
out
pop
sub
ficoml
xor
loopne
in
insl
jg
fcoms
mov
ljmp
stos
cltd
out
repz
aam
das
outsb
xchg
xorps
lods
aas
cmpsl
pusha
add
imul
mov
jno
shlb
and
add
cmp
leave
push
xchg
js
cmpsb
sti
stos
jg
mov
aad
add
nop
rorb
in
adc
pop
fs
js
fldz
pusha
sbb
leave
fstp
xor
dec
mov
pop
shll
adc
scas
cli
push
test
dec
push
hlt
fsin
faddp
add
sub
and
insl
iret
and
adc
ret
sbb
pop
sbb
daa
ljmp
mov
sti
inc
xchg
int
rcrl
cmovg
sahf
daa
movsl
insl
cmp
push
insl
xor
fcmovne
mull
addl
mov
mov
cwtl
pop
outsb
push
je
std
or
movb
cmpsb
or
mov
push
aam
fldt
sub
int
aam
or
lcall
pop
push
lcall
push
orb
dec
jnp
push
popa
pop
push
jge
dec
xor
pop
jge
rolb
fmuls
mov
popf
cmc
cwtl
xchg
ljmp
push
inc
xor
std
cltd
push
mov
mov
pop
pop
mov
int
inc
add
daa
mov
push
in
sbb
sbb
icebp
movsl
xor
mov
xchg
jnp
cmp
loope
outsb
int
push
out
sbb
jg
fs
dec
add
int
mov
jns
xchg
add
add
xchg
repnz
lahf
shll
mov
xor
or
mov
xor
fadds
add
adc
sahf
jle
push
int3
push
fsubp
roll
push
jne
int3
pop
jg
push
jge
sbb
cmp
lret
je
mov
or
test
not
push
loopne
cmp
mov
mov
mov
xchg
inc
cmc
pop
mov
and
ds
mov
daa
push
mov
call
cmp
dec
inc
mov
push
cmc
rcll
addr16
arpl
adc
mov
fs
adc
dec
pop
ja
mov
int3
pop
sbb
mov
sub
push
scas
add
pop
loopne
mov
insb
daa
iret
incb
rcrl
pusha
xorb
imul
xor
out
xchg
pusha
fwait
cmp
jmp
or
movb
stc
push
popa
rcll
jns
adc
pusha
data16
pop
mov
lahf
cmpsb
dec
sahf
mov
adcl
ficomps
arpl
cmp
scas
fcmovnbe
sub
push
clc
out
addr16
sub
sbbl
mov
cmp
jno
sub
mov
pop
jle
icebp
xor
push
ds
daa
outsl
push
cmp
fldenv
dec
or
dec
pop
push
shl
adc
popa
pop
add
push
or
jne
jb
mov
push
and
dec
lock
pop
and
and
decb
inc
push
mov
hlt
pop
and
mov
stos
gs
mov
pop
xchg
js
stos
fcmovnbe
dec
sbb
add
sub
or
push
adc
inc
or
icebp
jecxz
cmpl
and
sub
adc
mov
aam
add
cmp
sbb
sbb
sbb
or
lea
fs
call
dec
lcall
cld
cmp
outsl
mov
cmp
fistpl
ds
ret
aad
xchg
inc
adc
leave
adc
xchg
cmpsl
adc
subl
loope
or
xlat
repz
outsb
or
in
and
mov
inc
sbb
lcall
lods
mov
mull
insl
pop
inc
push
cmp
pop
mov
sub
in
in
pop
daa
pop
inc
insl
arpl
movsl
rcr
cli
sub
xchg
arpl
es
dec
nop
fsts
sbb
call
jecxz
outsl
lret
mov
jae
mov
mov
xchg
xor
pop
fs
add
push
xor
test
jnp
mov
ds
jb
fsubs
jl
sbb
mov
hlt
mov
xchg
test
iret
dec
cmp
cmp
adc
push
mov
std
js
mov
fwait
mov
mov
xchg
xchg
jbe
cltd
xchg
imul
scas
jge
nop
xchg
pop
lahf
fwait
adc
pop
pop
sub
mov
push
je
add
jl
xor
pop
lods
sti
xor
sbb
lock
outsl
lods
dec
mov
pop
mov
xor
jne
add
punpckhwd
sub
jmp
cmc
shlb
addr16
fldcw
ljmp
dec
sbb
adc
push
xchg
les
push
jle
scas
sbb
outsw
adc
and
mov
sub
mov
adc
nop
scas
call
pop
sti
jmp
sti
icebp
adc
mov
or
outsl
xchg
xchg
and
test
sbb
fadd
daa
rcrl
mov
sarb
lahf
adc
fdivrl
push
lret
lods
mov
rorb
pop
mov
xchg
in
imul
inc
mov
movsb
fmuls
popf
fs
jle
mov
pop
stos
inc
lret
pop
mov
stc
adc
dec
jecxz
mov
fwait
icebp
xor
sub
pop
mov
or
fs
or
adc
mov
lret
outsl
jae
add
lahf
add
lock
es
push
ret
in
jb
jge
cmp
mov
lods
popf
clc
ja
or
pop
cmp
out
sub
dec
mov
in
ja
adc
ret
sbb
xor
dec
push
and
mov
stc
aas
and
mov
fsubrs
int
fnstenv
jbe
pop
insb
ret
jl
imul
inc
repnz
cmc
add
nop
fmul
add
icebp
cltd
out
jle
call
in
aam
mov
cmpsl
xor
xor
shlb
sub
cmp
pop
decb
rcrb
xor
aaa
in
push
mov
mov
mov
pop
mov
clc
dec
movsb
adc
leave
sub
mov
ret
push
loope
outsb
push
test
mov
sar
std
mov
push
xor
pop
mov
inc
xchg
pop
or
popl
imul
adc
rol
jl
add
push
mov
cltd
ret
push
xchg
icebp
fstl
cmp
push
iret
in
cmp
jecxz
fdivr
pop
std
push
sbb
lret
cmc
add
hlt
jns
adc
mov
sbb
pop
mov
or
push
js
adc
adc
xchg
out
xor
shrl
dec
pop
lods
xchg
dec
jo
fidivrs
jp
pusha
xchg
ss
inc
pop
stos
xor
insl
xchg
dec
push
cld
test
xchg
or
enter
imul
arpl
dec
cmovp
movsl
insl
pop
push
aam
mov
dec
lcall
seta
out
mov
sub
pop
pop
add
inc
add
push
cmpsl
jb
arpl
or
and
jo
xor
fiadds
shll
mov
ds
cmpsl
add
das
loop
or
rolb
in
das
lock
cld
fsubl
arpl
test
push
adc
fdiv
addr16
imul
inc
lea
and
jl
movsl
mov
cmp
test
frndint
push
rcl
insb
das
loopne
test
fwait
rcll
flds
in
lds
dec
adc
int3
cmp
jecxz
sub
imul
pop
loope
xchg
ror
cmp
stos
in
loopne
and
mov
scas
sub
xor
enter
ret
push
push
pushf
in
adc
jno
xchg
int
mov
test
or
inc
or
test
push
jno
adc
aaa
xchg
popa
mov
jno
sbb
fwait
adc
pop
mov
das
rclb
add
jae
adc
xchg
in
mov
sahf
xchg
ss
enter
sti
mov
lods
gs
jecxz
stos
jmp
jnp
scas
mov
rorl
pop
es
repz
push
cmp
push
addr16
or
add
adc
add
xchg
in
fwait
lods
xchg
sbb
outsl
mov
outsb
inc
insl
into
push
add
das
loop
stos
popa
movsl
jb
inc
fistl
and
xchg
aam
aas
push
addr16
add
jmp
mov
inc
inc
stos
daa
xchg
push
jge
jbe
cmpl
ja
pop
ljmp
arpl
xor
dec
push
dec
stc
or
in
popa
imul
ret
lret
add
cs
cwtl
repnz
stos
or
mov
cmc
stc
inc
popa
outsl
in
lock
dec
into
subl
sbb
mov
popa
icebp
imulb
int
pop
or
adc
mov
mov
call
fidivl
sbb
pop
in
push
xlat
sbb
cmp
aaa
in
and
pop
sbb
fdivrs
orl
and
push
shrb
lcall
sbb
sahf
cmc
in
or
cmp
loope
cmp
mov
push
in
mov
adc
jle
aas
aas
jp
xor
out
mov
cmp
je
gs
xchg
jmp
dec
or
loopne
insb
ds
jecxz
dec
sub
xchg
inc
or
and
jl
je
js
pop
in
int
lock
xchg
adc
in
cld
jae
pop
std
dec
les
adc
push
add
cmp
decl
xchg
xchg
xchg
xor
xchg
fmuls
mov
lea
mov
lcall
ds
sub
sub
mov
mov
icebp
nop
sbb
addb
jne
shr
lock
pop
xchg
or
jp
add
out
and
pusha
int3
and
cmp
jnp
dec
lret
xchg
mov
lret
addb
fiaddl
mov
adc
push
aas
adcb
hlt
push
push
pop
and
push
sub
lds
in
insl
outsl
ss
sub
cmp
pop
cwtl
divl
push
mov
addl
dec
mov
cli
imul
push
jnp
aam
and
dec
pop
lods
xlat
inc
sub
mov
add
cmp
xchg
lods
fwait
push
sub
sar
scas
sbb
dec
push
ret
imul
lret
xchg
jecxz
xchg
sbb
jg
push
in
insb
insb
out
push
add
mov
ja
and
or
push
xchg
xor
mov
cmc
dec
ret
pop
inc
xor
add
mov
jge
lcall
rorl
mov
enter
push
lock
mov
sub
jg
xor
incl
test
fdivrs
nop
or
inc
inc
xchg
iret
nop
push
aas
and
pop
jnp
out
dec
decb
cmp
movsl
push
repnz
xor
mov
dec
imul
push
or
or
xchg
xor
loop
call
mov
pop
dec
shl
out
das
jl
test
lock
enter
andb
jae
mov
jmp
pop
clc
or
xlat
add
and
jne
pop
fadds
push
xor
stos
mov
xchg
push
jns
push
mov
daa
xorl
pop
rclb
in
lods
shll
mov
cs
lods
clc
xchg
dec
jmp
xchg
je
popf
add
sarl
jnp
cltd
cld
push
mov
ja
xchg
pusha
insl
jb
out
pop
pop
addr16
int
mov
or
les
cmc
addl
insb
fisubs
out
mov
ffree
add
mov
lds
add
adc
cld
in
and
and
xor
inc
dec
sub
push
xor
stos
jo
push
cltd
aad
cwtl
insl
nop
fucomp
jo
pop
add
dec
faddp
lret
sbb
jns
lcall
mov
pop
xor
std
pop
cmp
pop
add
clc
pop
dec
dec
cmp
push
jp
pusha
sahf
jge
gs
xchg
xor
adc
shrl
xchg
lcall
cltd
adcb
sbb
data16
in
add
jno,pn
pop
gs
movsl
dec
imul
add
shr
std
inc
stos
add
es
mov
loopne
shll
adc
inc
jge
shlb
dec
test
xlat
lret
sahf
repz
in
and
in
push
aas
mov
adc
add
jp
inc
scas
push
vaddsd
sbb
adc
repz
dec
xor
lret
cltd
cmp
jb
jo
sbb
xchg
jecxz
into
mov
cmp
pop
lcall
dec
scas
mov
jmp
and
movsl
inc
cmpsl
inc
push
ds
jmp
fs
xchg
sub
pop
or
dec
aad
mov
dec
inc
into
ja
aas
out
rcl
repz
fbld
dec
mov
scas
icebp
dec
mov
fs
jge
test
push
mov
ljmp
cmp
jg
rcr
imul
cmp
imul
enter
mov
push
repz
stc
bnd
cmpsb
sub
movsl
out
inc
mov
movsl
cmp
xor
dec
shlb
test
negl
pushf
pop
in
insb
jg
test
mov
mov
pop
mov
test
dec
jl
add
nop
jbe
clc
sub
mov
add
mov
insb
mov
mov
mov
cmp
das
or
mov
dec
dec
dec
loopne
adc
nopl
lret
adc
or
dec
xlat
shrb
add
bound
popa
xchg
mov
mov
scas
jb
jo
insl
nop
add
fwait
pop
xchg
inc
jns
push
mov
mov
icebp
xchg
jae
mov
or
and
pop
clc
mov
adcb
push
xor
mov
dec
cmc
inc
cmpsl
mov
rorw
daa
rolb
inc
mov
jb
cwtl
fidivrl
pop
adc
sbb
dec
sub
aam
xor
sub
fs
and
jecxz
das
call
jno
mov
testb
adc
loop
cmp
adc
mov
sub
cmc
in
xchg
out
mov
add
pop
nop
out
lods
outsl
cmp
mov
out
cmp
push
popf
jnp
call
mov
lea
jge
pusha
xchg
dec
and
or
mov
data16
add
mov
dec
loopne
dec
ljmp
jge
scas
enter
imul
mov
outsl
es
js
inc
push
and
test
in
out
xchg
loope
stos
xchg
xor
pop
aas
mov
lahf
push
or
push
repz
outsb
push
sub
lods
mov
div
jno
or
sti
shlb
sbb
pop
or
pop
das
lods
sub
rol
inc
in
pop
mov
or
scas
and
jge
daa
movsb
aam
fwait
out
sbb
mov
pop
dec
mov
cmp
test
mov
bound
cltd
jns
fucomip
arpl
xchg
fnsetpm(287
fcomps
and
fs
cmpsl
loop
and
cmc
in
pop
movsb
lods
neg
pop
imul
mov
jb
xor
aas
sti
xor
add
lret
xchg
sub
and
lock
dec
or
mov
outsb
test
cltd
fcompl
push
shrl
mov
popa
testl
xchg
and
sbb
imul
fidivs
das
add
or
push
pop
fstp
mov
xchg
outsl
pusha
cld
pop
sub
jle
jle
adc
xchg
jl
jbe
lret
pop
pop
in
aas
jbe
xor
cmp
aad
pop
jno
fstpt
lods
adc
xchg
aad
lods
pop
and
push
rclb
loopne
sub
jp
test
idivb
in
adc
mov
pop
push
stos
mov
cmp
fs
xor
ljmp
fdivrl
repz
sub
in
lret
mov
sarb
lods
sbb
pop
adc
pop
in
call
xchg
into
cmp
push
out
push
pushl
or
add
popl
push
repnz
jne
mov
imul
mov
popf
lea
dec
mov
mov
hlt
mov
imul
repnz
sub
mov
aam
mov
popf
fsubs
lcall
in
lods
push
push
insb
mov
fsubrs
jmp
out
shrl
test
mov
cs
mov
mov
iret
arpl
in
mov
and
adc
push
dec
fists
iret
push
out
sbb
out
lret
cwtl
rcrl
outsl
hlt
cmp
or
into
xchg
sub
cmpsb
and
adc
jae
cld
insb
jns
pop
inc
out
jne
js
push
jno
push
mov
insl
imul
je
dec
shrb
mov
icebp
jnp
pop
mov
add
in
pop
cwtl
dec
popf
pusha
pop
mov
jne
sahf
dec
add
out
xchg
mov
ret
jmp
sub
pop
lahf
loopne
sub
pinsrw
lea
call
push
mov
enter
sbb
push
sbb
push
cmpsb
movsb
dec
mov
hlt
je
inc
or
ret
xorb
xchg
shlb
lahf
dec
sub
sti
in
sbb
mov
mov
loopne
rcrl
or
push
push
iret
mov
jns
mov
mov
pop
add
insb
in
repnz
scas
sahf
and
pop
iret
test
bound
sub
jmp
cmp
cmpb
inc
mov
mov
pop
cmp
and
dec
push
test
jnp
loope
push
sub
sbb
xchg
neg
push
pusha
loop
ss
or
aas
punpcklbw
les
push
repnz
aad
ja
ja
adc
pop
repz
adc
shrl
push
mov
mov
dec
jl
xchg
decl
scas
popa
sub
mov
insl
int
xchg
pop
add
fsubs
xlat
lods
int
test
push
or
cli
test
ret
inc
lret
dec
mov
jmp
or
aam
push
dec
mov
dec
cmp
ret
cmpb
movsl
cli
push
mov
xor
jnp
repz
mov
jb
in
pop
jnp
inc
dec
out
fdivl
xchg
imulb
adc
push
push
lahf
jmp
test
xchg
ds
cmpsl
dec
insl
int
mov
lds
xor
cmpsl
sbb
push
mov
sysret
dec
mov
in
add
cmp
cmpsb
or
dec
push
dec
mov
fwait
in
js
xorl
cmp
cmp
aas
add
aaa
jae
std
push
add
jge
push
dec
lahf
jmp
push
xchg
mov
mov
sti
cmp
icebp
leave
and
aad
sbb
divl
popf
insl
sub
insb
adc
lcall
jle
and
sbb
push
fs
jp
xchg
pop
jg
out
call
icebp
jge
mov
add
aad
add
jae
pushf
jno
jnp
dec
xor
xor
pop
inc
add
lret
pusha
jo
mov
test
je
pop
in
rep
xor
jns
mov
das
mov
ret
pop
sbbl
int3
mov
sub
outsb
out
fwait
cltd
push
out
dec
pusha
mov
fsub
cwtl
and
pop
mov
push
repnz
std
sub
inc
fildll
mov
dec
push
test
pop
jmp
or
pop
push
inc
arpl
sbb
inc
or
pop
lcall
add
push
dec
ret
xor
cmp
xor
lods
test
clc
pop
add
push
or
adc
popa
pop
xchg
mov
ja
es
sbb
dec
aad
push
pop
rcll
scas
test
iret
fdivr
mov
push
jp
stc
xchg
int3
jl
in
dec
cltd
orl
sub
jo
xlat
sub
imul
jge
xchg
sbb
das
popf
loop
mov
xor
and
xor
jb
push
stc
mov
pop
sub
cmp
mov
gs
fs
add
pop
push
mov
fisubrs
xor
cmpsb
push
mov
cmp
xor
and
inc
fs
mov
mov
pcmpgtb
mov
stos
sbb
adc
cmpl
addr16
mov
loop
xchg
jle
enter
nop
popf
ficoms
pop
pop
clc
jl
scas
adcb
sahf
cmp
sarb
mov
lods
jo
enter
daa
adc
push
push
dec
int
lret
or
imul
ret
jno,pn
cltd
lods
std
scas
notl
jmp
fwait
cmp
or
ss
div
mov
gs
es
dec
push
out
das
mov
jbe
insl
add
dec
mov
loop
inc
sbb
nop
ret
cmp
mov
das
sub
dec
push
loope
je
adc
push
xchg
push
inc
cmp
fstp
sub
jp
sub
ja
adc
outsb
in
push
mov
lcall
push
shlb
pop
out
or
adc
lret
jo
nop
in
cmpsb
fidivl
fucom
jle
adc
mov
sub
repz
and
add
xor
cmp
xor
mov
shll
dec
ja
and
das
push
sub
lds
dec
cmp
jb
push
mov
lahf
pop
cmp
lcall
mov
stos
pop
inc
cmp
in
ja
mov
mov
loop
leave
lea
add
push
outsl
loope
jge
sub
mov
ja
enter
xchg
scas
mov
sar
inc
outsl
sbb
mov
std
daa
je
jbe
minps
xor
call
aad
dec
test
sub
mov
pop
repnz
lcall
mov
stc
xchg
push
loopne
and
add
mov
cmp
in
mov
movsb
sarb
inc
test
sub
cmp
xchg
adc
adc
fisubs
int3
sub
sbb
in
ret
cmp
mov
xor
loope
ret
inc
sbb
push
insb
rcrl
stos
xchg
pop
add
mov
add
fdivr
cmp
ficoml
lods
jg
mov
pop
jns
adc
jecxz
xor
push
sahf
and
push
std
or
xor
clc
icebp
cwtl
jge
push
add
mov
fs
xchg
bnd
in
mov
xchg
jg
sbb
lret
lret
movsb
scas
xchg
in
cs
sub
das
or
and
and
and
jae
loopne
pop
lret
sub
jle
push
rolb
dec
pop
inc
ljmp
xchg
xor
lods
and
mov
mov
dec
leave
push
stc
movsl
dec
imulb
stos
pop
jg
popa
shr
pop
sbb
adc
and
and
jne
sbb
mov
aam
pop
aaa
sbb
int3
test
and
push
ror
sbb
fsubp
sbb
cli
adc
jg
lds
push
scas
xchg
lea
xor
decl
pusha
adc
push
mov
jecxz
push
jg
dec
div
ficoml
inc
and
add
shl
jecxz,pt
fucomi
cli
pop
inc
loope
push
roll
jmp
aam
stos
xchg
loope
inc
or
call
orb
out
adc
xor
sub
enter
pop
nop
fsubl
mov
mov
jmp
test
cld
arpl
dec
fmull
cltd
mov
sahf
adc
pop
inc
call
les
outsl
pop
jp
and
out
sub
mov
lret
in
test
shlb
adc
lcall
pushf
stos
dec
mov
rolb
ret
shrl
dec
push
or
xchg
aad
fcomi
int
ret
xchg
fimull
xor
fistpll
add
xor
add
xchg
xchg
pop
scas
fs
add
hlt
mov
jns
push
cs
clc
test
xor
jle
movsb
mov
cmc
mov
jg
pop
insb
xchg
xchg
xchg
pushf
sbb
cld
or
clc
ficompl
or
mov
jmp
lods
das
inc
lods
sub
adc
mov
xor
nop
cmc
xchg
inc
data16
je
rcrb
mov
in
dec
fcompl
dec
inc
into
sub
outsl
jns
daa
lret
dec
aas
and
loop
sub
inc
pop
cmpsl
lret
pusha
fcom
pop
and
iret
and
fcoms
sub
shl
sbb
imul
scas
scas
mov
dec
xchg
push
cmpsl
daa
fwait
enter
mov
pop
xlat
lea
mov
inc
imul
pusha
filds
sub
cmp
adc
das
inc
les
xorl
mov
push
or
adc
or
test
je
rcrb
mov
in
js
bound
push
jg
lods
mov
fisubrs
mov
fldl
mov
iret
shlw
sahf
mov
dec
jns
sbb
push
iret
inc
icebp
enter
jle
loopne
xchg
or
fimuls
imul
mov
jb
xchg
aam
cltd
jo
adc
lret
adc
mov
jecxz
jmp
int3
pusha
stos
movsl
cmp
daa
js
sti
ljmp
rcll
jne
orl
fistps
jmp
shrb
sub
cli
fildll
in
xchg
xor
add
ss
jo
xor
push
lahf
repz
adc
fidivrl
mov
mov
inc
xor
in
adc
rorl
rol
and
mov
adc
xchg
jnp
mov
adc
add
bnd
insl
pop
xchg
sub
cmp
cltd
xchg
sbb
inc
into
mov
in
or
and
lret
inc
dec
mov
xorb
cmp
adc
and
nop
fiaddl
popf
push
ret
push
pop
jmp
mov
pop
cmp
or
mov
sysenter
lods
xchg
mov
dec
pop
fwait
dec
aad
adc
sub
iret
inc
mov
xchg
outsb
mov
adc
cmpsb
ja
mov
xlat
fcomps
lret
aam
sbb
outsb
jl
pop
dec
push
gs
xor
cmp
mull
das
loope
mov
and
rcrb
mov
inc
mov
xchg
jbe
jp
or
add
inc
mov
fnsave
daa
popa
pop
mov
mov
jmp
push
xchg
mov
cmpl
fwait
repnz
xchg
jb
fisttps
int3
xchg
xchg
xor
repnz
outsb
mov
pop
adc
stos
fmul
mov
stos
das
dec
clc
or
push
in
sub
mov
in
dec
loop
sub
imull
repnz
cld
insb
ret
dec
fistpll
test
test
lds
jnp
mov
into
mov
leave
jb
and
mov
fwait
mov
cmp
cmp
inc
iret
cmp
cmpsb
sti
cwtl
insb
rcrb
and
mov
xchg
es
mov
pop
mov
aad
adc
dec
sbb
push
out
pop
mov
fiadds
adc
fdivrl
push
lods
jnp
inc
adc
cmp
pusha
jge
jnp
sub
imul
and
sub
xchg
icebp
sub
cs
stc
incl
lods
adc
fs
jae
jns
sbb
iret
lret
ficoml
jno
js,pt
jl
cmp
fwait
jg
jns
pop
pop
lods
fidivl
mov
dec
int3
outsb
jle
int3
mov
pop
ret
mov
jae
cltd
add
xor
into
cwtl
or
enter
adc
xchg
inc
jmp
cmp
seta
lock
cmp
xchg
push
cmpl
pop
add
hlt
in
inc
mov
xchg
cli
push
hlt
pop
add
ja
or
dec
push
divb
test
mov
test
addr16
mov
mov
mov
xorb
dec
or
loop
lods
jp
adc
xor
xor
add
push
rcr
subl
sub
sbb
cltd
mov
fbld
das
xchg
inc
pusha
dec
outsl
popa
aad
mov
icebp
dec
cmp
sbb
movsb
mov
mov
push
mov
mov
in
ds
xchg
or
aad
fs
shrb
jge
mov
mov
ja
or
adc
roll
push
pop
mov
jo
cmp
out
adc
popa
fdivr
fwait
push
dec
lods
and
mov
jbe
add
test
sub
cmpsb
ss
aad
inc
es
inc
inc
xchg
mov
dec
ds
in
fnstenv
mov
add
fs
ss
rcrl
lods
and
push
push
dec
xchg
jne
data16
ffreep
std
pop
adc
lods
stc
adc
xchg
jecxz
stos
out
int
in
add
dec
js
push
xor
aas
out
pop
inc
jl
dec
gs
gs
sbb
push
pop
mov
mov
jmp
lret
insb
lds
scas
adc
push
dec
xor
pop
adc
mov
xchg
cmp
xchg
fisubrl
in
enter
decl
xchg
aas
lods
inc
jnp
fsubrs
xor
decl
mov
repnz
loope
adc
mov
push
jp
push
xchg
ja
adc
pushf
pushl
add
and
mulb
mov
or
cli
orl
movsb
inc
insl
cmpb
std
xchg
cmc
xor
lock
push
movsb
dec
sti
xor
sub
sahf
outsb
inc
dec
stos
incl
mov
push
pusha
and
subb
or
and
outsb
mov
mov
loope
add
sbb
pop
and
mov
dec
loope
scas
testl
popf
cmpsb
cwtl
inc
cmpsb
xchg
pop
sbb
int3
mov
data16
push
repnz
imul
fists
movsl
int3
in
test
adc
ret
ffreep
aam
sub
push
xor
cmpsb
or
fyl2xp1
shlb
xchg
sub
out
push
scas
xor
or
sbb
scas
fnstcw
iret
mov
lret
or
sbb
xchg
ljmp
ret
int3
adc
test
inc
pop
add
out
push
dec
out
pop
sub
repnz
inc
lock
or
lahf
pusha
ljmp
das
push
out
xchg
rolb
das
push
fistl
mov
pop
ljmp
sbb
inc
loop
adc
sub
clc
and
hlt
aas
jmp
cld
mov
xor
shll
adc
xor
xchg
clc
je
sbb
and
jb
es
filds
shlb
mov
mov
jl
xchg
adc
push
xor
xchg
add
lods
or
sahf
add
pop
iret
mov
repnz
les
xchg
stos
cmc
add
je
lods
dec
mov
pop
or
decl
std
xchg
mov
fnsave
mov
enter
fcompl
shlb
out
mov
pusha
lret
sbb
or
cmp
stos
fisttpl
sub
out
xchg
test
in
ss
dec
push
insl
subb
cmpsl
xchg
xor
pop
scas
xchg
xchg
repz
nop
mov
loope
fisttpll
loope
sub
arpl
pop
xor
sarb
pop
jge
rcrl
sub
push
push
data16
push
dec
mov
aam
xchg
adc
sbb
add
mov
ss
popf
aam
js
push
aam
dec
add
mov
or
fbstp
mov
scas
daa
lret
pop
fdivrs
shll
in
fcmovbe
ss
icebp
jo
in
add
inc
push
mov
adc
jne
jb
in
arpl
pop
fs
jmp
imul
xor
fidivrl
xchg
cwtl
adc
mov
sub
and
lret
mov
xor
xorl
adc
dec
fbstp
andl
call
in
leave
sub
int3
cmc
cmpsl
sub
ficompl
push
rorb
rcl
repnz
mov
lret
cmp
pop
push
or
cmp
xor
add
neg
rcrl
pop
mov
leave
mov
pop
movsb
xchg
addl
scas
or
or
das
xor
out
test
or
mov
sub
pop
jg
pop
mov
sbb
mov
cltd
pop
xor
cmp
fs
dec
ret
mov
push
sbb
mov
mov
cltd
fistps
das
pop
sub
xlat
sub
roll
outsl
adc
aaa
adc
push
xor
lea
pop
mov
xor
push
mov
stos
pusha
jmp
inc
xor
push
adc
call
out
movsl
movsb
mov
mov
mov
int
mov
pop
jne
pop
repnz
xor
pop
or
pop
popf
dec
push
sbb
pop
fidivs
dec
sarb
mov
dec
lds
mov
pop
fcoml
and
or
das
jmp
lret
inc
cmpsl
test
sbb
test
mov
shlb
ret
mov
dec
push
loopne
bound
mov
mov
jg
ret
ficoml
jns
jb
int
adc
mov
mov
jb
in
sbb
out
xor
mov
iret
xlat
push
xlat
sbb
or
roll
out
and
das
mov
into
and
xchg
ljmp
int3
add
xchg
cmpsl
into
lods
or
pop
mov
mov
adcl
jecxz
jne
inc
sub
xor
push
sahf
mov
sbb
test
pop
pop
inc
scas
adc
test
stos
jg
addl
bound
mov
and
push
lock
arpl
jae
cld
xlat
xor
xchg
cwtl
in
mov
insb
data16
in
les
jno
fmuls
fs
ret
sbb
sbb
test
aad
pop
test
add
inc
add
addr16
push
add
add
mov
imul
mov
and
pop
jmp
cli
mov
arpl
lock
loope
test
mov
aaa
addb
cmpsl
orl
fwait
enter
mov
mov
jle
xchg
lret
mov
ret
daa
mov
je
fcmovb
mov
or
inc
cmp
mov
mov
pushf
or
jg
sub
bound
mov
add
sub
mov
cmp
jmp
lahf
pop
mov
fistpll
sbb
or
push
enter
pop
mov
pop
sahf
adc
xor
adc
scas
sbb
mov
pop
lret
jecxz
xor
jns
shr
emms
ret
inc
in
popa
cltd
shll
pop
push
xchg
outsb
push
sti
in
nop
mov
sbb
test
dec
push
lods
mov
push
dec
pop
lret
jge
iret
jbe
repnz
jp
xchg
adc
xchg
push
jbe
sarb
js
xor
jbe
test
mov
stc
dec
and
je
jg
sbb
data16
mov
shll
dec
cmpb
pop
aad
xor
dec
inc
lea
jb
push
xchg
xchg
loop
xchg
cmp
test
jle
xor
inc
dec
movsl
pop
mov
pop
sub
je
pusha
icebp
mov
stos
shrl
repz
mov
inc
repz
arpl
ds
aaa
pop
lock
xor
aas
movsb
xchg
xchg
cmpsl
and
jns
pop
xchg
pushf
push
popa
pop
jb
aam
sub
sbb
fmull
jg
popa
mov
adc
pop
ret
dec
cwtl
cld
lret
push
aad
pop
inc
pop
add
add
push
lds
loopne
push
xchg
sbb
dec
and
sub
xlat
pop
mov
dec
scas
and
mov
test
pop
cmp
jmp
adc
lock
outsb
cmp
std
frstor
imul
in
pushf
out
sub
test
inc
mov
das
ret
jmp
fs
push
xchg
jno
orl
es
jecxz
adc
filds
sbb
mov
sbb
sub
cmpsb
mov
je
out
lock
or
mov
inc
mov
fists
clc
push
jbe
out
repz
pop
and
or
imul
frstor
sahf
xchg
aas
and
aam
mov
in
cs
xor
inc
test
mov
ds
ja
lock
les
data16
es
add
pop
push
pop
imull
mov
movsl
mov
mov
xchg
imul
dec
int
jne
jno
lods
jo
popf
in
popa
test
test
mov
sub
cmp
mov
iret
jne
add
push
mov
mov
lret
pusha
push
cmpsb
fcompl
insl
dec
and
jmp
leave
adc
in
mov
ret
out
adc
push
pop
clc
adc
mov
inc
dec
sbb
pop
mov
shr
dec
dec
or
pop
out
adc
fs
xchg
fsts
dec
xchg
or
adc
xchg
pop
xor
stos
shrb
pusha
popf
sar
adc
pop
push
insb
jae
subb
mov
and
sub
orl
jo
add
insl
int
iret
in
in
cmp
scas
ja
loope
xchg
fisttpll
add
add
sar
jb,pt
rcrl
shrl
aas
mov
sub
dec
fcoms
dec
test
sub
out
sarb
dec
js
loopne
in
sub
jnp
jecxz
loope
sub
into
addb
lret
pop
dec
and
jmp
loopne
dec
xor
lret
ret
adc
out
xchg
xchg
push
mov
lock
xchg
mov
iret
push
inc
adc
adc
push
andb
inc
sbb
or
mov
push
loope
aas
aas
sarl
xchg
mov
inc
outsb
mov
add
out
mov
or
scas
push
lret
mov
jmp
fmull
mov
out
pop
mov
pop
stos
es
sbb
adc
mov
int
adc
xor
insw
in
repnz
ja
inc
negl
enter
or
iret
and
cmpsb
jl
scas
shrl
or
sbb
ret
lods
popa
sub
aas
mov
xlat
mov
xchg
int
push
dec
cmp
loope
push
pop
mov
fwait
xchg
or
mov
rorl
dec
sbb
sbb
cmp
daa
ret
inc
incb
sbb
imul
sbb
cli
and
push
pop
addb
icebp
or
cmp
sbb
dec
dec
adc
call
fmul
jbe
rcrb
push
les
cli
lret
cmpsb
test
pop
loop
mov
pop
jmp
jp
mov
es
inc
add
ja
mov
mov
jb
sbb
sub
test
sub
outsb
pop
sbb
cmp
or
push
cmc
mov
fisttpll
int
mov
testl
mov
mov
cmp
dec
jl
fwait
pop
xchg
cmp
cltd
jle
test
xor
xlat
outsl
jle
xor
sub
mov
ja
lods
insb
aam
movsl
repnz
mov
sub
mov
out
ljmp
push
scas
inc
ljmp
inc
daa
xlat
imul
fists
sbb
dec
data16
inc
nop
aad
test
js
icebp
imul
mov
and
scas
fcoml
mov
popa
inc
mov
cmp
mov
mov
push
xchg
enter
fadds
jae
push
fwait
add
jno
aam
idiv
fs
sahf
ljmp
js
cmpsl
add
addl
out
mov
mov
in
fcmovbe
push
hlt
ljmp
add
xchg
pop
leave
pusha
push
pusha
jecxz
inc
pop
mov
insb
inc
dec
aam
push
jb
cltd
xchg
jl
sub
cmp
lods
pop
push
mov
into
jbe
lahf
cli
jne
repnz
arpl
es
movsb
add
push
aas
mov
lahf
pushf
add
out
jg
push
and
push
or
repnz
test
mov
mov
push
inc
in
add
jle
inc
mov
in
add
cmp
adc
sbb
lret
js
lret
cld
xlat
fadds
cmc
cmpsb
push
mov
push
or
sub
mov
out
es
sub
mov
or
subb
mov
dec
push
xorl
push
pop
leave
adc
push
jo
pop
lods
aam
sti
sbb
loope
or
gs
mov
cwtl
outsl
aaa
leave
dec
aam
leave
movsb
fbld
into
push
fs
pop
cmp
ret
lret
and
dec
sarb
and
inc
or
jl
jo
jmp
xor
lcall
cmpsl
mov
je
jmp
dec
mov
xchg
insl
icebp
push
inc
xchg
adc
clc
and
or
cmc
insb
add
jnp
inc
lahf
movsl
adc
int
mov
and
sbb
mov
fisttpl
movsb
sub
paddb
ret
sub
pcmpeqw
adc
fmuls
pop
sbb
xchg
aad
stc
dec
sbb
cld
cmpb
pop
cmp
mov
jae
addr16
roll
xor
cmp
jo
fiadds
jecxz
scas
jge
cmp
cmp
repnz
push
adc
jg
pop
pop
or
sbb
movsb
test
pop
lret
pusha
jo
pop
daa
iret
gs
xchg
mov
fiaddl
cmpsl
orl
cmp
cmp
in
bnd
pusha
testb
jnp
pop
cwtl
mov
stos
xor
mov
sbbl
sub
mov
sub
mov
cli
xchg
outsb
mov
jg
scas
xchg
repnz
mov
add
loop
nop
cwtl
je
adc
sbb
inc
cmc
cmpsl
push
popf
pop
or
dec
jno
out
sbb
jne
mul
pop
mov
test
enter
mov
aaa
scas
ffreep
out
mov
insb
xor
mov
cmp
aaa
enter
inc
xchg
outsl
orl
xor
pop
pop
mov
mov
ret
bound
in
popf
lret
push
cmp
je
add
lock
sub
cwtl
jecxz
in
test
fsubs
add
lock
lea
push
push
dec
sbb
repz
call
mov
pop
test
pop
bound
stc
cmp
jp
add
mov
mov
push
push
shrl
push
pusha
imul
xchg
scas
pop
push
hlt
repz
lds
test
cs
push
icebp
xchg
pop
lcall
adc
xor
popa
ficompl
inc
shlb
mul
and
add
or
pushf
pop
daa
xchg
xchg
xrelease
dec
leave
mov
xorl
fisubl
sahf
mov
ret
nop
lock
xor
jg
in
movsb
cmpl
or
scas
icebp
enter
insl
cmp
adc
rcl
and
mov
sahf
sahf
adc
push
sti
and
cmp
std
inc
cld
ljmp
aaa
nop
subb
push
pop
cld
sub
push
mov
xor
out
add
icebp
repnz
aad
fldcw
test
xorb
bound
in
and
mov
push
sbbl
repz
popa
lds
sbb
insb
scas
xchg
jmp
mov
pcmpeqw
adcl
sti
xchg
add
sub
or
pop
mov
in
mov
xor
out
mov
sbb
pop
jp
dec
lock
add
into
dec
sub
je
jle
mov
push
lret
add
ds
mov
mov
clc
out
jmp
mov
mov
arpl
pop
xchg
inc
jo
popf
es
pop
iret
arpl
add
test
hlt
out
fsubs
lods
push
jne
pop
std
cli
cmp
jnp
inc
jp
call
pop
cmpl
mov
sbb
aas
or
sub
ret
mov
addr16
stos
mov
aas
and
in
out
call
mov
fs
js
lock
and
cmp
inc
push
mov
inc
bound
mov
sbb
pop
aaa
pop
sbbb
mov
push
fcompl
popa
dec
aad
mov
add
push
adc
imul
add
jb
dec
sbb
mov
push
jnp
mov
adc
pusha
add
fistl
jmp
xor
adc
dec
xchg
insb
std
sti
loopne
fstpt
jge
xchg
into
in
fsubrl
jmp
sbb
addr16
jle
adc
rolb
les
xor
shlb
mov
xor
dec
adc
xchg
in
in
push
sub
lods
fiadds
fsubrl
push
pop
repnz
xor
ss
sbb
in
and
in
cmc
mov
jbe
sbb
lahf
mov
mov
xor
jne
pop
mov
cld
out
lea
cmp
cmpsl
enter
int
dec
jns
push
and
jns
loop
or
test
or
mov
lods
fcompl
mov
jnp
mov
ja
add
sbb
xlat
in
add
xor
repnz
xchg
adcl
adc
xchg
mov
mov
jae
in
mov
inc
jecxz
jne
inc
shll
pop
mov
fnstenv
call
or
xchg
add
pop
mov
dec
jmp
jns
out
fisttps
or
test
jg
sub
adc
pop
ss
test
or
leave
mov
mov
popf
enter
mov
shrd
jae
out
pop
sub
xlat
lock
roll
mov
or
mulb
push
fstpl
fidivs
dec
loop
jae
xchg
les
jmp
hlt
daa
mov
or
gs
aas
or
fiadds
mov
adc
scas
and
inc
sbbb
cmp
adc
push
fldenv
ret
daa
movsl
sbb
scas
testb
repnz
xor
out
stos
jne
or
ret
push
popa
jo
popf
lcall
setg
pop
not
pop
lods
cmpsb
das
sbb
mov
cmp
arpl
jg
dec
mov
lahf
inc
mov
jbe
filds
in
je
sarb
jno
into
clc
sbb
cmpsb
cwtl
mov
push
aad
cwtl
pop
mov
cltd
out
imul
cmc
mov
adc
cmp
imul
sbb
repnz
adc
sub
ja
lea
sbb
fldenv
lcall
mov
mov
rol
and
lret
inc
jmp
hlt
jno
ret
inc
loope
ret
les
push
adcb
aaa
cmc
lods
movsb
dec
sub
sarl
mov
jmp
adc
xor
add
sub
das
iret
xchg
sbb
jne
mov
cli
sub
lahf
mov
sub
push
aad
jo
mov
out
jmp
push
xor
mov
mov
xchg
push
mov
inc
out
daa
arpl
inc
test
push
ds
test
sahf
pop
push
cmp
loope
dec
xor
enter
jecxz
mov
ret
out
jecxz
scas
or
sbb
cli
xchg
aad
repnz
lods
dec
in
xchg
xchg
sub
scas
pop
dec
mov
movsb
insl
addl
int
popf
push
lods
cwtl
out
stc
pop
fnsave
cmpsl
sbb
xor
mov
push
notb
in
inc
daa
cld
pop
fidivrl
dec
push
mov
push
xor
imul
fcmovne
mov
ret
stos
roll
push
push
cmp
repnz
fistpl
js
cld
sub
xchg
fnstenv
jg
test
iret
jne
mov
jns
faddl
aad
out
leave
ds
lds
cwtl
cld
mov
in
mov
sbb
dec
adc
aam
push
insl
stc
mov
out
cmp
sub
sbb
sti
out
sbb
or
mulps
scas
leave
sbb
push
insb
fisubrl
xchg
sub
subl
stc
test
add
jge
mov
aas
dec
push
mov
adc
nop
mov
add
lods
ljmp
adc
lahf
clc
jecxz
jae
aad
mov
sub
fwait
dec
xchg
jl
arpl
inc
xchg
xor
jp
cld
adcb
push
rcl
inc
stc
inc
inc
pusha
mov
hlt
xor
xchg
out
mulb
fs
ljmp
jge
sti
icebp
dec
fisttps
mov
jne
mov
mov
adc
lods
sub
insb
mov
insb
and
aaa
xor
sub
xchg
out
iret
inc
pop
lret
cmp
pop
mov
aas
insl
das
test
dec
into
mov
mov
loope
sbb
mov
or
inc
xchg
les
pusha
jb,pn
sub
cmp
shll
stos
enter
mov
pop
pusha
outsb
mov
lods
aas
mov
arpl
sti
cmp
call
cwtl
dec
ret
adc
in
adc
and
pop
loope
pop
jne
out
js
insb
out
arpl
pop
in
adc
mov
sbbl
sub
mov
movsl
test
bound
ficoms
xchg
scas
push
push
adc
sahf
mov
test
sbb
fwait
lea
nop
or
imul
sub
add
bound
add
jb
and
xor
inc
decl
xor
push
ja
stos
xchg
and
popa
icebp
or
jo
stc
or
icebp
sub
outsl
sbb
jp
test
cmp
inc
dec
push
nop
jmp
mov
repnz
sub
popf
or
icebp
aas
xor
aaa
insb
xchg
xor
mov
mov
cltd
test
in
incb
or
cmp
ret
jmp
int
mov
das
lea
out
enter
mov
sbb
sub
pop
cwtl
stos
jp
fwait
call
adc
stos
nop
dec
cmpsb
loop
sbb
lcall
mov
mov
daa
xchg
lret
dec
loop
repz
jle
mov
mov
cltd
fisubs
or
inc
pop
and
sar
movsb
out
xor
popa
push
gs
mov
rorb
mov
in
ja
jnp
pop
push
sub
pop
jle
adc
mov
inc
stos
mov
pushf
mov
pop
lcall
dec
or
mov
cld
les
imul
jno
loop
push
out
arpl
in
loope
stos
push
jbe
mov
mov
mov
cmpb
or
stc
dec
mov
xor
lods
inc
mov
sbb
pop
push
ss
sbb
cmp
addr16
lret
fldenv
sub
adcl
inc
dec
or
and
popa
call
mov
mov
mov
icebp
pop
pusha
sub
jmp
sub
in
stc
xchg
mov
mov
add
outsl
lods
hlt
cltd
pop
movsl
add
sbb
dec
adc
ljmp
jnp
xchg
mov
stos
push
je
in
loopne
jecxz
mov
sub
shl
mov
cs
sbb
popa
mov
mov
cwtl
push
in
scas
adc
lock
arpl
and
jb
xor
in
sub
das
call
push
in
push
jne
outsl
insb
add
or
pop
jo
xor
pop
cltd
or
cs
push
lods
ds
or
out
das
sub
rcll
arpl
les
hlt
inc
add
js
inc
inc
sub
daa
push
jbe
ret
addr16
jo
sub
jp
gs
jnp
lods
jmp
jmp
xor
sbbl
cld
jecxz
pusha
xchg
and
lods
mov
add
and
je
sahf
add
loopne
push
jmp
andb
mov
pop
imul
daa
dec
mov
xchg
sbb
stc
les
jbe
xor
out
jbe
jl
adc
popf
xlat
mov
dec
mov
std
add
test
pop
movsl
iret
stos
ljmp
mov
adc
jp
inc
dec
loopne
loope
sub
arpl
jp
and
nop
cs
jmp
repz
add
mov
pop
xchg
jbe
xchg
and
pop
pop
mov
data16
jp
xor
inc
test
int3
cmp
mov
pop
jo
inc
and
mov
push
jns
or
icebp
in
sub
clc
and
testb
adc
btc
xchg
xchg
push
inc
lods
inc
rolb
push
cltd
and
popa
and
push
xchg
or
sbb
decb
jbe
loopne
fisubrs
and
mov
xchg
jg
fs
jo
shll
outsl
stc
lahf
mov
add
lock
bnd
lods
xor
jmp
shlb
add
push
fstl
sub
pop
dec
jmp
lods
les
cmp
cld
je
loopnew
in
adc
gs
popf
push
out
icebp
mov
stos
jbe
rclb
adc
or
mov
scas
subl
push
sbb
inc
inc
fs
outsb
xor
jmp
pop
fidivs
cmpsl
cld
cld
lds
push
leave
lock
xor
jb
popf
or
pop
xchg
xor
cmp
ljmp
xchg
icebp
pop
push
xlat
mov
push
cmp
sub
fdivr
repz
inc
pop
sub
cltd
imul
outsl
xchg
icebp
cmp
mov
loopne
pop
in
popf
sahf
mov
aas
pop
lods
jmp
sbb
jle
ss
repnz
pop
inc
or
ljmp
add
and
incl
fadd
aam
push
bound
inc
push
orb
rcrl
adc
in
fnstenv
cld
daa
insb
xchg
xlat
lods
xchg
mov
mov
pop
add
out
sub
jmp
pop
mov
sbb
out
mov
dec
ficoms
out
lahf
jb
in
inc
shll
xchg
fptan
pop
push
sbb
cmp
popf
fsubs
dec
addr16
imul
sbb
mov
out
bound
imul
pop
sbb
pop
cmpsb
mov
sub
mov
xchg
andb
mov
xchg
sbb
push
in
test
sub
pop
pop
shl
stc
mov
or
shr
cwtl
fdivp
mov
sbb
push
mov
cs
jae
jl
add
sub
sub
push
aaa
outsl
leave
fidivl
sbb
and
jl
fiadds
jl
mov
dec
jns
adc
xchg
mov
pushf
data16
dec
fistpll
jb
inc
mov
sarb
fbstp
mov
ljmp
icebp
js
sub
test
int3
das
call
mov
jecxz
popa
xor
aad
pop
adc
std
ss
jle
pop
pop
xor
sbb
cmc
adc
sbb
jbe
lea
gs
sbb
jge
sub
mov
or
inc
ss
mov
cmpsl
push
jno
bound
andb
mov
mov
ficompl
dec
idivl
popa
idivl
jmp
push
sub
lcall
das
ror
icebp
test
or
pop
cmp
mov
jecxz
jae
aas
mov
jge
mov
outsb
sub
lods
shlb
xchg
push
push
dec
push
das
gs
inc
insb
call
cmp
fldl
lea
jl
ds
mov
mov
decb
ss
fisubs
aam
mov
fwait
out
add
push
cmp
mov
lret
adc
loopne
mov
aam
jns
inc
cwtl
repnz
loope
dec
clc
xchg
lods
pop
rcrb
les
movsb
inc
adc
mov
xorl
push
dec
and
pop
test
rcrb
cmpsl
test
jne
gs
loop
cmp
mov
lcall
mov
test
gs
dec
push
xchg
jle
push
and
push
push
adc
lret
gs
jge
loope
adc
aad
jae
insb
inc
adc
out
mov
inc
roll
push
or
mov
roll
jno
dec
and
mov
jb
or
loope
cmp
lods
inc
cmp
or
push
loop
fidivrl
enter
jae
mov
mov
add
mov
aad
icebp
pop
fstps
int
cmpsb
popa
dec
cmc
cmp
mov
aam
bound
or
xor
mov
cmpl
lcall
test
mull
lcall
rorl
dec
ret
lods
cltd
dec
iret
jbe
ss
pop
push
xchg
das
sub
ds
xchg
add
stc
fsubrl
jns
jp
adc
xchg
cmp
mov
cmp
xor
pop
xor
scas
loop
dec
je
push
mov
je
cmp
pusha
lret
xor
aad
xchg
jb
pop
les
fidivs
fstl
push
int
xor
enter
xchg
data16
or
fsubrp
sbb
test
int3
pop
loop
ficompl
mov
mov
movsb
movsl
out
mov
jb
push
and
scas
push
push
pop
adc
and
lret
or
stc
sub
or
inc
lret
sbb
inc
pop
dec
cmp
jmp
pushf
repz
mov
mov
or
lock
dec
push
fadd
or
dec
fwait
lods
movsl
inc
push
aas
xor
fistpl
mov
popf
movsb
popa
enter
ret
fsubl
mov
lret
bound
mov
mov
pushf
mov
aaa
ljmp
je
mov
xchg
les
and
add
pop
mov
rcl
sub
fmul
xor
mov
adc
cltd
xchg
ret
jg
fisttpll
cld
push
dec
xor
roll
sbb
adc
stc
lret
xor
sub
fwait
pop
rcrb
sub
xchg
jg
jecxz
out
dec
push
cmp
adc
xchg
movsb
mov
or
test
out
fcomps
cltd
enter
dec
mov
adc
and
lea
xor
sbb
pop
mov
cmc
push
std
stos
cmovne
mov
and
movsb
xchg
or
fistpl
std
loope
push
pop
cmp
push
add
inc
pop
leave
out
in
ret
pop
dec
scas
negb
out
xchg
lret
sbb
sub
inc
pushf
fwait
xchg
jns
je
xchg
jge
push
mov
test
sbb
es
sub
inc
jo
subb
pop
adc
movsb
std
xlat
sub
jle
adc
inc
lcall
jp
mov
mov
mov
les
or
hlt
xchg
xchg
orl
lcall
mov
push
cmp
pop
jo
mov
daa
into
aam
fidivl
test
ds
in
js
scas
nop
bound
adc
fsubrs
pop
dec
sbb
sub
mov
movsb
jmp
jecxz
movsl
cmpb
inc
addb
push
scas
and
jp
add
inc
test
add
cmp
lret
mov
fstl
mov
enter
addr16
aad
inc
ret
in
hlt
repnz
enter
call
mov
mov
fs
add
insb
xorb
ja
outsb
rolb
dec
in
cmp
fisttpl
xchg
or
lcall
or
dec
pop
push
sub
or
into
jns
mov
out
lods
push
inc
adcl
idivl
in
or
stos
les
jno
out
sub
sbb
js
in
xchg
es
mov
stos
ss
cmp
stos
ja
dec
fldenv
mov
push
and
inc
dec
flds
icebp
lds
ret
fistpll
add
xchg
negb
ret
adcl
outsb
lock
mov
mov
pop
inc
insl
xor
outsl
rcpps
addb
sub
loop
xor
push
mov
mov
pop
punpckldq
cmc
sbb
sbbl
lds
andb
ffree
xchg
psubusb
sub
jmp
mov
push
adc
and
jmp
inc
sbb
pop
fstl
inc
test
mov
push
repz
negl
loope
fmuls
push
fmuls
push
cwtl
in
fsubp
jge
push
xchg
sbb
imul
sbb
or
mov
push
js
jge
jae
das
xchg
ljmp
push
leave
fs
mov
adc
or
scas
cmp
mov
dec
mov
fcoms
mov
jne
mov
loope
push
inc
mov
push
fldt
add
nop
cmp
fwait
and
shlb
pop
dec
pushf
out
cmc
out
stos
ds
mov
sbb
dec
jne
sbb
pop
repnz
scas
cmp
inc
jae
gs
push
mov
adc
inc
jecxz
shll
inc
in
dec
mov
xchg
sub
push
ret
das
add
cmp
leave
imul
js
or
add
add
repz
mov
sbb
xchg
stc
push
dec
aam
in
dec
push
dec
mov
sbb
pop
fisttps
xchg
hlt
xor
jno
pop
sub
adc
xchg
les
popa
mov
cmpsl
or
in
sub
ret
imul
fildll
cmp
sub
sub
xchg
insl
add
add
ja
pop
mov
pop
xor
add
je
mov
inc
mov
push
test
mov
add
cmp
pusha
xchg
out
adc
mov
push
adc
sub
mov
jns
add
ljmp
jmp
aad
ret
inc
mov
or
xchg
fsub
cs
loopne
ljmp
aad
cmp
aam
sbb
dec
into
sub
popa
sub
or
stc
pop
cmp
cmpsb
and
pop
mov
loope
adc
lea
jb
sub
and
iret
or
inc
fsubr
enter
imul
orb
jne
loop
cmpsl
jg
xor
mov
in
adcl
mov
in
inc
jns
pop
xchg
int3
jnp
or
mov
adc
stos
pop
push
mov
cld
xor
je
es
xchg
mov
adc
fcomps
cld
push
push
repz
mov
loop
pop
pop
inc
mov
cltd
popf
sub
rolb
cwtl
jmp
pop
fists
jle
loope
outsb
shll
leave
mov
sub
jae
adc
lahf
lods
cmpl
xor
mov
adc
add
les
daa
insl
push
scas
sub
xlat
clc
outsb
xchg
and
inc
add
cwtl
rolb
push
mov
inc
call
pushf
aas
xor
adc
movsl
in
add
ss
mov
mov
rolb
popf
dec
je
insl
xchg
mov
pop
mov
dec
movb
xchg
fcomps
aad
mov
iret
jmp
xchg
mov
sbb
mov
pushf
imulb
std
call
push
in
mov
inc
adc
mov
pop
or
fcom
das
or
add
iret
mov
cld
inc
mov
sbb
or
inc
mov
sub
incb
pop
psubsw
js
mov
dec
stos
ret
or
in
add
imul
fdiv
lret
ret
leave
or
das
inc
aaa
push
sub
xor
pop
inc
inc
jl
add
loop
js
lret
lods
mov
push
outsb
lods
and
gs
ljmp
test
sbbb
lea
fistps
cs
addb
mov
mov
push
add
mov
dec
pop
subb
or
add
jno
int
rolb
push
scas
mov
or
pop
bound
jbe
arpl
scas
xchg
repz
cld
inc
adc
mov
and
push
cmp
push
lahf
cmp
push
mov
add
loopne
xchg
and
mov
test
or
fidivrs
and
jle
lock
mov
jb
mov
dec
sbb
clc
push
and
std
dec
shrl
inc
xchg
xor
je
xor
lods
into
mov
aaa
cmp
xchg
xchg
mov
xor
mov
mov
insb
dec
test
xchg
hlt
and
insb
lcall
mov
mov
cld
pop
mov
ljmp
inc
loop
stos
ds
mov
in
pusha
lcall
and
mov
push
mov
imul
pop
jne
out
mov
mov
dec
adc
outsl
pop
or
mov
cs
add
incl
aaa
stos
ja
mov
aam
push
mov
cmpsl
std
ds
popf
nop
xor
test
and
cld
cmp
pusha
add
ja
cs
pop
rolb
pushf
cltd
mov
xchg
add
loope
xchg
arpl
or
and
dec
lea
push
fs
clc
pop
push
push
mov
icebp
int3
mov
and
cmp
das
test
stos
jg
jae
cmp
sbb
or
add
ret
cli
mov
sbb
insb
push
nop
and
push
daa
sub
into
fnsave
mov
out
in
fcmovnbe
repz
and
addr16
inc
sub
es
lds
inc
push
push
jl
outsb
or
add
pop
cld
sbb
adc
inc
mov
cli
aad
lcall
aaa
mov
shlb
aaa
stos
test
aam
pop
mov
push
push
dec
cmc
mov
dec
xor
cmp
data16
mov
xor
cmp
dec
and
fldcw
jno
in
mov
lret
out
jle
mov
clc
scas
aam
adc
inc
sub
mov
dec
dec
clc
xor
std
jp
inc
and
fisubrs
jae
pop
jne
cmc
sbb
shlb
jmp
loope
and
mov
mov
jno
and
loope
jae
cmp
out
mov
mov
mov
mov
clc
iret
push
and
aam
cmp
fildl
or
rorl
mov
in
ss
adc
stos
add
mov
out
sub
stc
inc
sbb
lret
dec
inc
leave
mov
jp
xchg
jmp
dec
sub
mov
cmp
in
lods
xchg
cmp
pop
orl
mov
xchg
mov
test
xor
fsubs
test
js
mov
repnz
repz
outsb
or
push
fildll
sbb
std
or
enter
lret
test
or
mov
nop
jae
sub
sbbb
imul
jecxz
mov
in
xchg
inc
das
mov
cmp
push
xlat
in
sub
out
pop
or
push
sbb
es
bound
cmc
notb
mul
cmp
test
or
push
es
mov
pop
pop
add
sub
outsl
sbb
test
sahf
outsb
jnp
pop
xlat
int3
and
adc
stc
sbb
nop
movl
fisttpl
repz
sahf
lea
cwtl
xor
jle
lret
jnp
lcall
xlat
cmp
hlt
adc
dec
fwait
dec
in
aad
mov
cmpsl
jb
daa
dec
aam
scas
test
xchg
cmpl
addb
test
add
ror
add
lock
mov
or
cmpsb
jns
mov
jns
lods
adc
sub
sub
mov
pushf
pusha
adc
mov
cmp
repnz
mov
xchg
pop
xor
ret
pop
pop
imul
scas
sub
push
fldcw
testb
call
int
push
es
lock
cli
and
cmpb
lea
rorl
lret
jo
dec
add
cmp
push
mov
pop
sbb
lret
jmp
add
sbb
xchg
mov
mov
cli
leave
sub
mov
shl
or
aas
stc
jns
add
cmp
add
enter
roll
inc
test
and
sbb
test
mov
in
sbb
imul
arpl
ret
jl
aam
ja
arpl
loope
iret
inc
jo
lret
sub
jmp
andl
dec
dec
inc
mov
or
ret
push
scas
xchg
cmp
dec
jb
shll
push
sub
pop
pop
test
jecxz
outsl
das
push
add
mov
push
pop
jbe
addb
or
xor
dec
test
in
cmp
aam
cmp
push
mov
sti
inc
push
in
shl
stc
push
sub
mov
xor
adc
iret
or
mov
aas
pop
mov
cmp
icebp
cs
xor
daa
pop
pop
mov
mov
fwait
or
push
or
addb
repnz
orb
repz
ss
aad
fincstp
xchg
shlb
in
out
loop
test
sarl
mov
je
aaa
int3
testl
pop
loope
xchg
sub
mov
insb
movsl
scas
arpl
jne
call
mov
hlt
add
out
nop
data16
jmp
fisttpll
pop
scas
inc
push
xchg
mov
inc
pop
add
loope
jo
dec
lahf
addl
adc
outsb
jnp
insl
test
je
sub
out
cs
cmpsb
sbb
dec
push
cmp
add
cmp
add
cli
add
pop
rorb
lods
jg
or
lret
notl
sbb
dec
test
and
lret
wbinvd
mov
and
xchg
lea
js
xor
jbe
gs
pop
in
out
rcrb
aam
jo
int3
repz
repz
pop
shl
in
arpl
push
jle
lret
cld
lds
jp
jle
sub
mov
push
push
hlt
add
inc
inc
inc
push
inc
add
test
out
xchg
mov
sub
sub
xchg
jb
subl
adc
scas
push
insl
sub
adc
fcom
pop
mov
jecxz
cmp
insl
pop
int3
daa
mov
cwtl
xor
mov
xlat
cld
jge,pt
decl
xchg
push
and
test
mov
cmp
popf
inc
jmp
loope
lcall
dec
push
enter
push
mov
push
xor
or
push
inc
adc
sbb
stos
sbb
or
fistpll
shlb
push
jbe
mov
push
pop
pop
in
mov
mov
xchg
ja
out
push
out
mov
es
inc
addr16
cmp
push
loope
push
xor
xchg
push
fistl
inc
sbb
push
lahf
ljmp
dec
push
cmp
loopne
repz
adc
dec
push
jae
xchg
out
popf
enter
je
push
or
xor
test
popa
lods
in
fsubl
stos
xchg
ret
dec
sub
push
sbb
leave
jne
daa
fists
sub
pusha
data16
cmpsb
adc
ja
inc
repnz
mov
outsb
adcb
lret
ljmp
leave
ljmp
sub
xorb
into
mov
cmp
adc
push
jmp
mov
fsubrp
std
add
cld
fiaddl
in
jle
bswap
push
add
jno
lock
xor
cmc
push
fnstcw
mov
fistpll
mov
xchg
fwait
dec
ffree
pop
addr16
add
push
adc
jmp
in
int3
outsl
jl
jl
roll
or
test
add
and
xor
adc
and
fmull
je
gs
sbb
dec
ror
xchg
jo
rcrl
adc
and
in
shrb
push
xor
and
call
mov
jbe
insb
or
call
pop
cltd
leave
pushl
loop
jo
xor
xchg
push
pop
jb
adc
and
popf
and
push
orb
inc
push
and
sbb
cmp
cwtl
xor
sahf
xchg
int
jno
popa
inc
lret
adc
dec
dec
test
ljmp
xchg
jno
xchg
hlt
push
andb
xchg
fbld
dec
int3
lea
push
test
mov
mov
loopne
mov
sbb
test
jnp
lods
cwtl
ds
sbb
mov
add
sti
in
cld
push
jbe
push
repnz
or
test
inc
push
in
in
add
or
pop
mov
notl
rorl
pop
sbb
inc
adc
mov
fnsave
push
dec
push
inc
add
mov
adc
fwait
push
pop
push
inc
add
pop
das
scas
or
in
cmp
mov
jne
call
imul
mov
lock
gs
mov
mov
pop
fisubrs
lret
sti
insb
and
add
dec
push
popa
sub
mov
out
sub
jle
sub
xchg
imul
cmp
mov
ret
mov
cmp
sub
dec
roll
scas
add
jb
test
cmc
outsl
movaps
popa
mov
or
fwait
pusha
and
cld
hlt
xchg
mov
and
pushf
loop
sub
cld
cltd
xchg
adc
xor
dec
sbb
scas
mov
mov
sbb
sbb
pop
lds
adc
inc
repz
arpl
fdivrs
rcrl
mov
int3
daa
mov
shlb
push
mov
jne
sbb
stos
mov
out
push
jns
outsl
xchg
xchg
cmp
mov
add
es
pop
aam
popf
xchg
lahf
mov
loope
rcr
mov
push
inc
dec
jle
std
shll
ret
and
lret
mov
icebp
rcrl
adc
mov
push
xor
push
fidivrs
cmpsb
mov
jbe
xlat
loope
jbe
out
jg
in
jp
mov
in
fisubs
iret
inc
push
into
sbb
push
cwtl
mov
pusha
aaa
mov
adc
inc
or
jecxz
xor
leave
sti
dec
repz
adc
inc
in
shrb
sahf
lods
jns
rcll
mov
hlt
outsl
mov
push
icebp
xchg
imul
cmp
ret
add
sub
mov
push
mov
gs
push
sbb
imul
mov
and
jbe
repnz
push
xor
lods
xchg
xchg
aam
cmc
cmp
push
inc
or
imul
mov
clc
mov
jns
in
adc
ljmp
ss
adc
sbb
jg
pop
jbe
arpl
cli
insl
inc
aad
in
mov
mov
mov
sbb
jge
testl
idivl
movsb
xchg
call
adcb
or
les
test
cli
adc
inc
fmul
xor
cmp
fldl
xchg
push
mov
jno
xlat
outsb
jo
loope
jae
outsl
fwait
xor
jl
mov
push
dec
sbb
aam
cmp
inc
je
lock
sahf
call
or
and
cli
jbe
adc
inc
cli
or
lret
jnp
pop
stc
xor
rclb
mov
push
sbb
jnp
push
or
call
mov
enter
into
fdivrl
pop
loopne
dec
adc
ret
in
out
inc
and
jne
xchg
adc
pop
and
frstor
ss
imul
pop
cld
adc
push
jns
dec
pop
dec
ret
imul
push
add
sub
lds
jecxz
inc
cld
leave
xchg
addb
sbb
mov
xor
mov
imul
mov
push
lods
shrb
rolb
loop
out
xor
mov
sub
mov
or
mov
adc
movsl
das
enter
test
int
jmp
xor
sbb
sub
into
insb
es
and
jae
lock
push
mov
les
lods
adc
push
inc
add
fwait
int3
jmp
jnp,pn
sub
pop
lods
adc
jnp
fmuls
cli
scas
clc
daa
or
cmpsl
mov
add
idiv
or
loope
shl
cmp
nop
push
pop
lods
lods
adcb
dec
rcll
in
cltd
adc
jl
push
stos
test
imul
push
jl
cld
andb
lahf
push
movsb
lods
pop
outsl
call
aaa
lods
mov
xchg
cmpsl
dec
dec
xchg
sbb
int3
lcall
popa
fsubs
repz
sbb
xor
mov
loop
inc
inc
push
push
test
add
cmp
adc
aam
insl
jl
push
sub
fidivl
test
stos
mov
enter
sub
adc
dec
dec
movsl
rcrb
lcall
shlb
inc
push
lahf
pushf
add
xchg
fsubl
pop
in
adc
sub
icebp
push
xor
xor
and
mov
cmpsb
dec
xor
dec
or
shl
mov
insb
jbe,pt
inc
hlt
add
adc
jo
mov
or
lcall
xchg
and
jecxz
incb
mov
xchg
movsb
sti
mov
add
pop
push
xchg
xchg
pop
add
addr16
inc
idivb
cmc
cmp
loope
out
leave
mov
pushf
fmulp
int3
dec
repz
cmp
jge
repz
dec
aad
mov
xchg
xchg
fldln2
call
je
push
repz
pop
sbbb
adc
sub
and
push
ss
test
rorb
mov
push
push
adc
mov
inc
aad
outsl
mov
repz
push
in
push
add
lahf
xchg
mov
cmp
sub
stos
int
stc
cmp
jno
addl
dec
shr
dec
sti
sub
cwtl
inc
xor
inc
fdivrs
lods
je
cmp
divl
cltd
add
pop
fnstenv
fistps
pop
xchg
sbb
push
pop
xchg
sub
jl
or
push
mov
lods
add
movsl
cmc
test
sub
in
stc
inc
xchg
add
pop
push
imulb
repnz
jb
stos
sub
ja
push
mov
xchg
arpl
pop
fbld
scas
fucom
jecxz
lahf
mov
dec
fyl2x
and
mov
and
movsb
adcl
jne
aam
fstps
push
mov
js
jl
lahf
inc
sub
pushf
push
ss
rcll
shr
push
push
lods
xchg
xchg
adc
cli
sub
jl
cmp
dec
loopne
adc
into
decl
push
leave
pusha
nop
xlat
adc
icebp
iret
popa
icebp
lret
mov
push
add
mov
sbb
aas
mov
aad
int
aam
pop
pop
add
mov
push
repnz
cltd
inc
rol
dec
sbb
sub
icebp
xor
inc
daa
icebp
pop
mov
ficompl
testl
call
dec
fwait
test
jae
jecxz
inc
adc
cmp
dec
scas
cmp
dec
mov
stc
fisubrs
mov
mov
jne
cmpsl
push
pop
mov
jne
data16
inc
imul
in
sub
mov
lds
fs
mov
mov
dec
mov
jg
mov
std
js
sti
mov
pop
imul
aas
mov
adc
jecxz
lahf
sub
add
sahf
cmp
gs
jno
out
out
dec
mov
cmp
adc
mov
leave
decb
leave
jne
mov
out
pop
mov
mov
in
adc
cmp
mov
decl
rcr
addl
mov
xchg
and
loop
mov
mov
cmp
adc
pop
stos
mov
xchg
sub
inc
xor
xchg
test
arpl
push
aam
ss
mov
and
jo
or
push
jmp
fbld
pop
lock
imul
rorl
xchg
xor
lcall
outsb
fwait
leave
dec
jae
ret
int3
out
xchg
iret
or
stos
in
cltd
andb
pop
divb
xor
pop
push
test
es
stos
cmp
cmpl
mov
push
popf
out
inc
push
aam
pusha
and
jg
xchg
sbb
js
pop
les
repnz
and
xor
xor
jl
int3
das
hlt
sub
insb
lods
add
repnz
push
pop
sbb
sbbb
sub
xchg
mov
xchg
loop
mov
jecxz
or
add
mov
dec
lret
scas
subb
dec
idivb
lcall
inc
sub
jb
sbb
ljmp
xor
add
rclb
sbb
push
mov
sbb
push
addr16
jb
jmp
xlat
dec
xchg
mov
movsb
vpcmpeqb
paddb
or
xor
imul
or
jns
outsb
flds
mov
rorb
sbbb
jns
adc
jo
addr16
mov
sbb
lret
and
lods
add
inc
gs
mov
xchg
lahf
mov
mov
xchg
or
xor
xchg
sub
xchg
xor
je
jmp
or
cmp
jne
mov
das
out
mov
mov
out
xchg
pop
movsb
icebp
data16
movsl
inc
jo
gs
push
pop
movsl
lds
xor
xchg
push
cmp
stos
inc
pop
jg
xchg
mov
jbe
dec
addr16
lods
test
xchg
mov
or
dec
cmpsb
aas
mov
fistpl
pop
stos
jnp
pop
lret
dec
sbb
pop
dec
inc
div
cli
test
stos
mov
mov
mov
xchg
adc
cmpsb
repnz
mov
xor
mov
lods
loopne
into
pushf
xchg
push
jp
stos
xchg
sti
adc
andl
push
nop
fs
jns
push
into
repz
aam
addl
pushf
testb
xlat
xor
dec
mov
jmp
pop
cmc
cmp
ss
mov
test
ficoml
ret
imul
fimull
dec
sub
push
mov
faddl
add
insb
cs
jp
call
test
lock
jns
push
xchg
lds
jno
es
cwtl
sbb
push
out
fmul
stos
push
ret
outsl
or
dec
xor
shll
pop
inc
mov
mov
loop
mov
pushf
sub
es
push
pop
and
mov
imul
jp
fstpt
leave
dec
ljmp
testl
out
mov
pop
sub
xor
pushf
add
mov
cmpsb
xor
sbb
sbb
addl
sub
push
inc
mov
inc
int
inc
aas
xor
mov
push
xchg
imul
mov
sbbl
or
jne
int
mov
test
xor
jl
cli
fisubs
xchg
fists
adc
xchg
and
andl
lods
adc
mov
out
add
pcmpgtd
xchg
mov
xchg
lahf
add
aad
sbb
sahf
insl
jnp,pn
out
popl
add
or
sub
lahf
mov
fwait
addl
lcall
dec
sti
jb
push
dec
pop
sub
dec
jmp
mov
dec
push
js
mov
bound
mov
out
mov
not
mov
mov
in
addr16
sub
push
or
lods
sbb
repz
out
jo
inc
xchg
mov
test
sub
fstl
push
pop
cmp
inc
or
cmp
fisubrl
xor
or
jge
repz
cmpsb
cmp
or
add
out
and
into
inc
xchg
inc
enter
jecxz
loope
fcmovnb
into
mov
sbb
push
addb
mov
xor
rcll
stc
pop
sti
lds
in
pushf
iret
fstpl
xchg
cmp
cmpsl
jo
pcmpgtd
mov
mov
cltd
test
test
cld
and
add
mov
lcall
mov
enter
pop
cmpsl
cwtl
jo
ds
fs
stos
xchg
cmp
ja
xlat
adc
jle
dec
mov
jge
loope
rclb
xor
mov
pop
push
mov
mov
sub
popf
mov
loope
jg
sbb
mov
sti
mov
xchg
jb
insb
push
sbb
jecxz
sbb
movsl
add
cmpb
mov
inc
lcall
js
outsl
in
loopne
imul
outsb
lahf
mov
idiv
mov
aas
cld
jno
pop
sbb
add
shl
cmpsl
negb
insb
das
pop
lahf
push
mov
mov
test
data16
in
mov
shlb
cli
inc
inc
push
jmp
bound
movsb
add
and
stc
fimull
fwait
xchg
xlat
sarb
sub
int
push
stc
jo
mov
adc
dec
fcompl
cmp
cmp
or
cmc
stc
arpl
xchg
hlt
orl
mov
or
sub
pushf
or
bound
xor
xlat
jb
push
and
jmp
hlt
jmp
push
mov
int3
ficoml
sbb
test
sub
mov
mov
inc
push
mov
out
outsl
aad
dec
outsl
push
inc
fcompl
adcb
fistpl
xor
imulb
jge
xor
push
jns
mov
fisubrs
cmp
ret
and
jl
jl
scas
jp
pop
inc
xor
sbb
fwait
pop
adcb
or
xchg
push
lds
pop
jo
add
ss
lds
pushf
lods
outsl
icebp
sub
pop
movb
pop
push
or
xlat
gs
ja
sbb
mov
sbb
shr
sub
rorl
add
leave
dec
sahf
icebp
and
fstpt
js
movsl
add
or
enter
stos
lret
movsb
push
insl
cwtl
push
std
sbb
inc
add
iret
adc
in
jns
fidivl
sub
icebp
adc
jmp
lret
cmc
mov
gs
int
mov
push
push
dec
adc
xor
iret
push
adc
pop
ja
pop
pop
test
int
insb
and
push
xchg
cmp
mov
imul
lods
jl
stos
pop
inc
push
pop
pop
jle
cmpsb
mov
mov
xor
into
in
lcall
into
xchg
fisubs
lods
fidivs
faddl
out
xchg
pop
outsl
push
int
mov
inc
test
mov
addl
or
inc
mov
jge
pushf
filds
mov
movsl
and
xchg
adc
mov
mov
notl
mov
lcall
addr16
mov
adc
hlt
xchg
xchg
push
jbe
pop
daa
xor
push
neg
sub
insb
sbb
cmp
scas
pop
sahf
mov
lret
loop
outsb
mov
inc
in
ficoms
loop
mov
sahf
stos
sbb
sub
xchg
insb
add
xor
incl
cwtl
jmp
test
iret
pop
inc
and
rdpmc
and
test
mov
mov
xchg
sbb
jnp
sbb
pushf
add
jg
mov
int3
dec
imul
loop
jae
cmc
add
sub
mov
jns
mov
int3
outsb
adc
mov
cltd
leave
rcrb
push
sbb
xor
dec
or
sti
pop
xor
dec
sub
sti
pop
push
stos
lret
into
adc
pop
dec
cmpsl
push
and
pop
test
adcl
ret
imul
dec
and
xor
aad
pop
xor
or
jecxz
imul
and
add
mov
mov
mov
jmp
rcr
inc
imul
xor
in
dec
mov
and
lahf
dec
bound
and
xor
inc
and
mov
dec
pop
cmp
sub
cltd
test
call
sbb
cmp
sub
sbb
inc
inc
loope
cmc
cmp
ja
lret
dec
lods
fidivrs
imul
and
jg
imul
xor
add
sbb
sahf
sar
lea
mov
dec
add
in
aaa
test
add
je
add
sbb
xor
stos
decl
push
fbld
sub
xchg
lcall
insl
fdivr
fiaddl
and
and
in
sbb
cltd
loopne
fisttps
je
test
daa
sbb
and
xchg
add
jge
pop
fisttpll
inc
push
sti
inc
xlat
or
cwtl
inc
push
and
mov
xchg
in
cwtl
or
or
pop
lock
or
dec
pop
or
cltd
orb
pop
std
xor
repz
push
jge
loop
xor
inc
jne
sbb
sbb
push
sub
lret
rcrl
nop
in
pop
and
or
sbb
out
pop
iret
or
mov
jecxz
jl
sbb
test
repnz
or
lods
adc
push
adc
popa
fisubl
add
lea
mov
sub
cmpsl
popf
mov
movsb
jecxz
mov
cmpsl
sbb
idivb
cltd
add
add
jne
clc
mov
shr
dec
lahf
add
outsl
repz
pop
or
pop
fsub
mov
mov
leave
sub
frstor
push
in
std
push
cmp
or
jb
pop
movsb
and
mov
incl
cmc
dec
and
pushf
jnp
leave
lcall
fildl
ret
addr16
loop
pop
daa
add
mov
mov
push
mov
lds
loop
jne
pop
aad
test
or
mov
in
dec
sar
pop
test
xor
fisubs
sub
dec
movsb
push
jns
sahf
jns
mov
jp
jecxz
sub
es
jne
test
xchg
imul
lds
lret
cld
cmpsb
push
lock
cs
mov
nop
xchg
mov
mov
movsl
hlt
leave
sbb
imul
fcoml
into
push
cmp
or
bound
mov
xor
or
jo
bound
add
fcmovu
icebp
mov
inc
cmp
xchg
and
sbb
aaa
pop
mov
xorb
pop
lret
or
pop
aas
cmp
rcll
mov
lret
push
mov
inc
mov
cmp
dec
mov
sar
dec
cli
addb
xor
and
mov
ss
and
movsl
out
cmpsb
dec
mov
mov
je
jecxz
std
xlat
test
jg
mov
xchg
bound
call
add
jbe
mov
xor
xchg
test
sahf
xor
gs
inc
imul
add
aaa
mov
inc
rclb
and
mov
scas
xor
inc
imul
ficoml
outsb
mov
push
push
idivb
mov
addr16
push
nop
in
arpl
into
popf
mov
xlat
xor
sub
fisttpl
mov
inc
popa
inc
vmovdqa
mov
scas
rcrb
test
or
les
xchg
loope
ret
in
aam
shl
outsl
sbb
or
ljmp
popa
int3
mov
push
fcoms
sub
cmpb
dec
push
mov
mov
and
fsubs
push
mov
xlat
cmp
pop
push
outsb
imul
and
ss
clc
stc
and
sub
ja
sahf
or
cmp
add
mov
jns
pusha
orl
or
add
inc
sub
ja
bswap
inc
inc
or
lods
dec
dec
lahf
xlat
and
leave
and
sub
imul
out
mov
or
pop
andl
dec
pop
in
daa
mov
or
push
pushf
fadd
jb
aas
clc
bound
movsl
in
out
popa
pop
and
mov
popa
jle
lods
sbb
or
jae
lods
mov
push
push
cmp
mov
mov
jbe
mov
jno
fidivrs
or
push
cli
dec
or
push
mov
jl
jmp
xor
int3
push
dec
mov
lahf
mov
ss
loop
pop
xor
ljmp
aaa
push
mov
jns
jp
test
push
cs
push
cmp
jmp
dec
jns
mov
mov
loopne
cmpsb
jmp
daa
cmc
mov
and
adc
idiv
leave
and
enter
lds
inc
mov
jge
cmp
arpl
pop
sub
ror
or
push
xor
lds
cmc
push
out
inc
or
push
fidivl
sub
and
mov
daa
inc
adc
sahf
xchg
lods
pusha
enter
mov
pop
adc
addr16
and
sbb
jne
fstl
pop
aad
or
mov
mov
and
xor
or
shld
lret
movsb
repz
inc
js
mov
and
ljmp
mov
icebp
inc
push
inc
pop
repnz
pop
dec
subl
hlt
pop
adc
out
ja
cltd
and
push
mov
inc
mov
xchg
daa
pop
jl
jl
push
jb
gs
push
js
iret
into
mov
lock
mov
mov
jno
jl
iret
test
es
fstpl
pop
and
iret
ficoml
std
push
mov
jo
outsb
adc
lea
movb
pusha
cmpsl
dec
push
adc
aas
call
add
mov
xchg
jne
inc
lcall
or
sbb
sub
dec
mov
int
les
repnz
stc
fnstsw
cmpl
insb
jno
or
inc
addl
push
sti
push
xchg
and
out
mov
loope
arpl
sbb
dec
xchg
scas
fidivs
pop
cs
adc
cld
pop
ja
iret
or
jp
inc
sub
sub
mov
std
inc
sub
out
inc
in
stos
js
sbb
clc
mov
sarl
mov
sbb
or
jne
fdivr
push
scas
jbe
pop
jnp
std
push
mov
pop
xchg
lcall
stos
in
pop
xorb
fwait
mov
jecxz
jl
mov
jle
mov
cld
push
movsl
fidivrs
testb
xchg
ljmp
sarb
push
add
dec
cmp
stos
adc
lods
and
inc
pop
lds
int
test
pop
std
jne
and
jne
ljmp
fidivrs
inc
dec
les
ret
outsb
pop
mov
scas
xchg
sbb
xchg
pop
push
arpl
cwtl
paddsb
mov
or
cmp
dec
test
jg
sub
insl
xchg
cmpsb
lcall
cmpsl
outsl
pusha
imul
jae
fstpl
pop
or
imul
daa
mov
xorl
bound
stos
iret
fisttpll
mov
lds
ret
lret
xchg
jbe
lds
shrb
jo
jo
ja
testl
mov
xchg
rclb
mov
aas
jb
adc
shll
push
cli
shrb
pop
jne
daa
xchg
loope
ret
or
mov
stos
fcmovu
hlt
sbb
or
cltd
out
dec
xorps
or
daa
subl
outsl
addr16
xor
mov
loop
sub
popf
pop
sub
add
jns
in
mov
fxch
loope
add
out
or
mov
xchg
xchg
xor
movsl
xchg
imul
pusha
cwtl
push
or
cmp
xchg
inc
adc
lcall
js
cmpsl
aam
insl
xor
inc
mov
jecxz
fidivrl
sub
adc
mov
pop
and
rclb
jno
ljmp
daa
stc
std
mov
addb
xchg
int3
or
inc
iret
or
repnz
jo
jle
sti
mov
sub
push
dec
push
dec
ret
push
daa
cmp
and
and
or
out
push
adc
jp
ret
cli
testb
adc
out
lahf
ss
adc
xchg
xchg
xor
jle
fnstenv
dec
adc
int
int
data16
mov
inc
push
pop
fildl
sub
mov
movsl
xor
lods
outsl
cmp
cmpsb
cmc
movsl
in
lret
mov
loop
jo
mov
mov
test
inc
and
outsb
push
mov
push
cmp
pop
fistl
repnz
mov
lods
lods
fisubl
push
push
cli
adc
in
and
inc
cmp
in
jns
or
sbb
inc
jg
fldenv
test
push
or
dec
sarb
sub
in
hlt
lret
inc
mov
add
subb
out
call
jb
addr16
xchg
jmp
xchg
sbb
scas
or
arpl
out
sub
data16
movsl
add
jne
ss
jge
add
dec
and
decb
pop
rcll
pop
fdivs
popf
sub
enter
lret
jo
pop
cltd
popa
outsl
imul
xor
aas
or
xchg
in
jne
iret
pop
mov
sbb
xor
negl
push
dec
inc
xor
or
clc
daa
mov
fbld
jle
mov
ljmp
jg
fwait
pop
mov
divl
fists
jne
inc
mov
stc
jnp
mov
shlb
notl
mov
or
dec
fs
sbb
in
repz
test
frstor
je
dec
nop
add
pop
bound
mov
lahf
ret
pop
cmpsb
dec
xchg
jnp
jl,pt
mov
push
outsl
mov
jmp
mov
aad
cmp
push
xchg
or
add
in
rorb
jns
ljmp
in
jl,pt
pop
ljmp
xor
decl
xchg
mov
pushf
icebp
jb
jae
ljmp
mov
lret
loope
int
outsl
cmpsb
inc
jp
mov
cltd
bound
sbbl
jne
iret
and
aas
mov
ja
addr16
jbe
jecxz
pop
and
or
pop
mov
lret
add
in
or
xchg
sti
push
adc
lahf
xor
ljmp
inc
push
aad
leave
pushl
andl
jle
repz
xor
fidivs
and
test
adc
push
and
xchg
in
sti
jmp
or
xor
in
and
sahf
shrl
dec
sbb
outsb
jge
sbb
mov
mov
andl
xchg
cmc
fistpll
or
mov
add
icebp
loope
popf
addr16
cmc
nop
ljmp
pop
ljmp
or
or
push
mov
bnd
clc
add
shrl
pop
and
popa
arpl
fstpt
fnstenv
je
jns
nop
or
ret
sbb
push
dec
scas
int3
cmpsl
inc
xorb
or
stc
add
aam
pop
cli
push
outsl
stc
mov
andl
outsl
mov
icebp
call
xchg
or
jmp
pop
mov
lock
test
mov
std
lods
or
push
dec
nop
push
leave
bnd
sbb
popa
testb
les
lods
pop
rolb
into
sub
sbb
aas
mov
outsl
test
xchg
mull
shll
icebp
scas
mov
bound
fst
inc
cld
ss
mov
daa
outsb
fs
pop
and
sub
adc
lods
ficomps
out
mov
insl
shrb
cmp
popa
inc
sub
rep
aad
add
mov
inc
jo
sub
sbb
enter
pop
lahf
push
inc
sbb
mov
subl
mov
and
jns
dec
mov
jae
mov
add
mov
enter
movsb
push
jmp
arpl
outsb
sbb
ret
in
fbld
jb
insb
xchg
clc
push
ss
nop
jp
dec
mov
push
bound
fdivr
lock
cmp
aad
aaa
xchg
xor
cmpsb
pop
inc
negl
rcrb
movsl
xlat
mov
mov
inc
xor
daa
imul
movsl
rcr
lock
clc
into
pop
pop
daa
ljmp
ja
rorl
data16
or
jle
pop
fwait
loop
loopne
pop
push
cs
es
movsl
sbb
xor
fisubs
push
fcomi
notl
movsl
sbb
pop
test
fwait
jno
push
inc
lret
aaa
stc
or
ret
xchg
add
cmp
out
lahf
dec
add
inc
rcr
out
jle
es
rorl
fists
scas
pop
dec
cmp
in
dec
fidivrs
lea
adc
add
js
jmp
rcrb
jbe
or
push
mov
lods
pop
movsl
mov
pop
nop
sub
push
popa
cmc
pop
mov
out
cwtl
fwait
scas
repz
sbb
push
ja
adc
fidivs
fsubp
rclb
push
dec
lret
push
ljmp
out
bound
or
or
in
out
adc
loope
jp
ss
test
jmp
in
inc
pop
pop
fwait
rcrl
inc
xor
mov
xor
ds
mov
dec
cmp
int3
xchg
out
sub
ret
mov
jb
mov
sbb
dec
and
movsb
cmpsb
and
in
adc
lds
lret
out
push
fdivl
dec
bound
jle
je
hlt
call
lret
push
jbe
inc
adc
mov
adc
sbb
mov
stos
cmp
mov
adc
jg
shlb
pop
xchg
rcl
mov
adc
call
in
jnp
jmp
mov
fs
lds
in
scas
and
out
or
xor
mov
and
adc
arpl
in
and
push
sub
dec
hlt
inc
incl
ds
jecxz
addr16
mov
push
xchg
inc
out
and
enter
and
cltd
mov
cmp
pushf
icebp
imul
movsb
adc
out
push
inc
lahf
push
cmp
and
in
fs
mov
xchg
inc
cmp
push
std
jle
mulps
or
mov
out
pop
hlt
xchg
and
pop
cli
jmp
repnz
xchg
jmp
mov
cmp
clc
mov
dec
mov
jl
jne
loopne
pop
cli
dec
sbb
inc
mov
out
into
pop
mov
rorb
test
push
test
in
inc
mov
movsl
stc
dec
paddq
decl
outsl
push
daa
push
imul
pop
push
jmp
push
pop
test
sub
and
not
adcl
xchg
sbb
ss
int3
and
repz
xor
mov
cmp
dec
jnp
cwtl
leave
int3
cwtl
add
mov
insb
push
xor
daa
rol
data16
or
sub
negb
push
js
inc
xchg
mov
xor
stos
enter
cli
int
mov
dec
les
push
mov
jle
sahf
sub
cld
mov
jmp
mov
jno
xchg
scas
xchg
lods
lcall
dec
mov
pusha
jl
fdivl
adc
jp
hlt
addl
xchg
push
push
clc
fdivrl
dec
sarb
divl
fistpll
icebp
das
jle
push
xor
das
add
sbb
lret
jmp
test
in
loop
push
sbb
nop
push
push
add
test
out
and
cmp
scas
int
out
push
popa
jo
adc
movsl
inc
adc
addr16
rorl
jbe
mov
xor
dec
imul
subb
inc
or
jae
out
push
lcall
icebp
mov
int
xchg
lahf
or
or
mov
cmpb
pop
dec
adc
les
pop
push
jnp
sbbl
loope
jo
inc
xor
bound
arpl
dec
mov
lahf
inc
inc
shlb
add
mov
clc
mov
lods
leave
sub
movsl
ds
mov
pop
xchg
aaa
stos
jl
dec
sub
imul
jo
and
into
mov
mov
imul
sub
icebp
sub
mov
add
imul
mov
mov
mov
out
jno
pop
pop
cwtl
arpl
out
dec
and
mov
xchg
outsb
xor
dec
sbb
sbb
popa
cmp
inc
jns
xor
mov
mov
rclb
and
jo
jle
int
xor
mov
dec
lahf
stos
pop
mov
scas
fidivrs
mov
sbb
pop
mov
call
or
add
aam
mov
jg
mov
jo
test
decb
and
add
ret
mov
sub
nop
aam
sbb
xlat
jns
xor
testl
jmp
jb
sub
sbb
dec
pop
mov
jl
outsb
mov
test
push
push
outsl
daa
sar
adc
sbb
in
inc
jmp
movsl
popl
ljmp
int3
int
test
imul
and
fcoms
iret
out
sbb
pushf
js
fisttps
insl
pop
mov
xchg
xchg
leave
clc
and
pop
dec
inc
hlt
inc
add
add
or
sbb
pop
pop
sub
dec
push
lods
adc
mov
jge
sub
and
cmpsb
fs
nop
sub
and
xor
sub
xchg
ret
test
loop
mov
lock
aaa
aaa
movsb
lods
roll
mov
jne
les
pop
push
hlt
jbe
je
out
push
jge
in
jb
adc
fwait
inc
vhsubpd
shl
out
bound
xchg
cli
jmp
lea
sbb
outsl
testl
or
sar
dec
inc
lret
mov
les
test
pop
sbb
sbb
pop
std
dec
pusha
mov
ret
push
fisttps
fdivr
jbe
aaa
das
mov
jp
sub
or
mov
push
xchg
js
xchg
ret
outsb
or
or
je
cltd
outsb
xorb
sub
jb
shrb
and
enter
and
fwait
mov
or
scas
xor
pop
stos
cli
out
loopne
sbb
xchg
sbb
sbb
jae
adc
lds
imul
testl
mov
ficoms
mov
pop
sbb
lock
lret
push
add
push
lahf
jbe
ljmp
xchg
lods
push
outsb
sbb
sub
mov
fs
movsl
jb
adc
xchg
cmp
ljmp
shll
hlt
fs
stos
pop
out
inc
xor
out
test
push
mov
mov
rcll
sub
iret
mov
imul
stc
sbb
cwtl
sti
xor
add
pop
dec
out
jmp
or
cmpsl
insb
jb
dec
das
faddl
mov
int3
pavgb
shll
lahf
adc
movsl
insl
pushf
lahf
les
mov
sti
cmpsb
fimull
or
daa
lret
xchg
rcr
mov
lock
xchg
pop
and
popa
rcrb
and
sub
imul
or
xchg
pop
and
xor
jae
arpl
xor
mov
pop
hlt
out
mov
xchg
or
xchg
mov
mov
pusha
push
and
cmp
xlat
mov
or
jns
cmp
mov
jnp
adc
lock
mov
movsb
cmp
mov
xchg
mov
jmp
xchg
bound
mov
inc
jmp
xchg
lret
push
push
fnstsw
lahf
fistps
shl
pop
push
inc
mov
mov
stc
icebp
popf
std
out
mov
loope
adc
and
fcoml
pop
push
cli
popa
outsb
icebp
nop
pushf
jle
mov
inc
pop
sub
adc
mov
fsubrl
sbb
sub
ss
jno
jle
pop
in
jns
lret
pop
gs
shrb
scas
xor
scas
inc
vmread
daa
mov
fcomi
add
and
mov
pop
rcr
sbb
push
and
sarb
leave
mov
int3
cs
arpl
inc
enter
xchg
pusha
stos
cmpsb
imul
dec
into
data16
outsl
pop
sti
into
adc
ljmp
inc
xor
and
push
push
data16
fsubrl
loope
and
xor
jnp
push
lret
xchg
aam
sub
pcmpeqb
mov
jnp
loope
push
ret
xor
lret
adc
xchg
mov
movsl
and
mov
jbe
ret
adc
mov
jg
inc
aas
cmpsb
or
cmp
or
cmp
mov
jge
jl
sti
jge
popf
ret
mov
sbb
jbe
fstpt
cmp
adc
xor
stc
xchg
dec
pop
int
cwtl
inc
jno
lret
mov
lahf
jp
jne
jbe
outsl
inc
sub
add
jae
xor
ss
jmp
popa
mov
push
mov
sbbl
negb
cmp
fdivl
push
out
jb
jmp
xchg
lahf
pop
mov
nop
dec
and
daa
mov
mov
repz
loop
mov
mov
add
int3
out
add
cmp
or
inc
mov
push
inc
aad
mov
mov
rclb
jae
xor
cmp
xlat
lret
es
sbb
pop
or
cmp
xchg
cmp
in
mov
or
mov
inc
and
mov
push
inc
xor
jl
enter
lods
ret
pop
mov
sub
in
push
push
icebp
aas
dec
push
addr16
fwait
xor
dec
loope
das
aas
or
pop
rolb
fnsave
clc
jae
fistpl
das
inc
rcrl
int3
mov
fdivr
ja
jp,pn
or
cwtl
mov
addr16
dec
push
mov
shl
mov
pop
xchg
pop
lea
jge
dec
aad
popf
div
sbb
fmull
inc
push
inc
xchg
or
sub
leave
or
pop
xchg
pop
add
rcll
testl
mov
jne
mov
mov
pop
sbb
sbb
and
adc
fwait
sahf
lds
rorl
pop
es
movsb
sbb
push
ret
pop
adc
gs
incl
mov
push
inc
push
mov
pop
out
out
lds
pushf
xor
les
lahf
or
and
es
jb
push
repnz
cmp
in
not
mov
outsb
mov
sbb
loopne
imull
push
repnz
aaa
jae
ret
aam
in
push
subl
xrelease
in
in
mov
repz
xor
enter
icebp
imul
mov
imul
mov
loopne
pop
mov
js
dec
jns
pop
add
mov
dec
test
rolb
in
fs
pop
or
das
inc
jmp
pop
pusha
pushf
out
jl
stc
and
mov
ja
mov
sarl
or
xchg
cld
loopne
fimuls
mov
inc
fwait
push
cmc
xchg
ss
xorl
scas
mov
pop
push
pop
popf
fidivl
or
or
orl
pop
ret
jne
or
dec
aad
xor
add
imul
insb
pop
lret
scas
adc
and
ja
adc
add
ljmp
int
push
adc
into
cmp
sbb
mov
test
aas
test
test
repz
xor
sub
pop
jmp
push
pop
sub
xchg
inc
mov
xchg
daa
mov
xchg
mov
test
sarl
aam
mov
stc
adc
sbb
sbb
jns
push
push
mov
pop
sbb
sub
mov
cmp
mov
outsl
or
ja
jo
adc
mov
mov
rcll
repnz
or
jg
pop
rcll
lcall
jmp
aas
adc
mov
fimull
push
sub
cltd
push
scas
jno
popf
addb
fs
jb
xchg
cwtl
mov
dec
out
fcompl
je
inc
pop
xchg
repz
sti
rcr
lcall
subl
lret
dec
xchg
dec
test
mov
mov
aaa
pop
cmp
faddl
in
jbe
pop
fcoml
push
push
jle
cmp
iret
and
pop
lods
in
stc
sub
xchg
add
jno
stos
mov
mov
pop
ret
loop
jg
xchg
inc
in
pop
adcb
repnz
gs
xchg
insl
filds
push
xor
movsb
pop
fcoml
mov
sarl
adc
aam
hlt
andl
add
pusha
fcoml
scas
test
pushf
or
jecxz
popa
jge
imul
dec
fimull
fxch
lea
pop
push
jbe
mov
sbb
adc
mov
lret
pop
das
fidivl
cmp
mov
rcl
sub
adc
loope
dec
bound
ret
pop
mov
ficompl
int
cmp
sub
xchg
inc
sbb
je
aad
pop
loop
jle
lret
out
mov
std
fwait
shll
dec
mov
test
sbb
repnz
jecxz
call
enter
mov
push
mov
sub
mov
sti
mov
bound
sub
push
int
cmc
dec
xchg
cmp
jo
jbe
loop
popf
es
scas
jle
shll
test
xchg
mov
jns
pusha
mov
cwtl
add
inc
leave
aaa
hlt
insb
hlt
add
push
mov
dec
mov
jne
fidivrs
insl
adc
mov
loope
sbb
jns
xor
cld
adc
jge
xchg
lods
jg
fs
mov
add
rolb
cmpsl
jg
pop
jle
push
fldt
outsl
mov
outsl
xchg
jmp
mov
cmp
pushf
inc
inc
enter
mov
lods
insb
jg
stos
inc
push
mov
pop
push
adc
out
shrb
mov
mov
mov
xor
imul
movsl
lods
cli
and
out
or
loop
test
cwtl
cmp
test
jmp
cmp
and
out
sbb
mov
and
sarl
cmp
mov
jl
cmc
xchg
push
inc
scas
mov
cmpsb
mov
sar
lret
xchg
inc
push
mov
into
aas
pusha
sub
rorl
mov
xchg
test
das
mov
pop
ret
mov
hlt
inc
or
push
ret
add
mov
and
xchg
and
pop
arpl
xchg
inc
cmp
xor
movsl
decb
jns
in
fsubp
subl
sbb
pop
loop
cwtl
cli
gs
ret
int
xchg
cld
pop
jne
fwait
xchg
adc
inc
mov
adc
dec
ljmp
shll
jle
pop
lds
loopne
add
sti
aas
cld
xor
das
mov
data16
lahf
ret
rol
arpl
out
add
loopne
lret
mov
xlat
lds
push
dec
cmp
mov
pop
sub
push
int
and
push
test
cmp
into
loope
adc
mov
mov
inc
popl
shll
mov
les
dec
imul
test
orb
sub
arpl
sub
dec
aaa
lds
pop
xor
add
jae
xchg
push
add
iret
dec
flds
inc
imul
jae
mov
push
imul
sbb
or
in
insl
pop
inc
or
xor
mov
xchg
imul
mov
mov
xor
movsb
pop
movsl
or
dec
fs
adc
mov
adc
call
sti
addl
addr16
repz
sub
into
scas
xchg
add
xor
scas
xor
aam
fwait
and
adc
negb
or
mov
mov
push
pop
inc
in
jo
sar
lds
add
lcall
push
enter
repz
push
mov
mov
stos
movsl
in
addl
mov
cwtl
into
xchg
pushf
ficoms
adc
out
enter
out
out
xchg
sbb
rorl
lds
sub
arpl
stc
cmp
pop
loope
idivl
or
stc
xchg
and
xor
xchg
jnp
xor
xchg
insl
push
pop
push
xchg
mov
or
fsub
jo
pop
icebp
cmpl
aaa
rorb
push
cmp
pusha
jecxz
jno
mov
cwtl
dec
enter
jp
in
xlat
rorl
rorb
pop
dec
xchg
mov
mov
xor
stc
loop
push
in
mov
mov
test
pop
adc
mov
mov
jae
repnz
scas
jns
js
sbb
xor
lods
inc
lea
ficoml
pusha
inc
xchg
xchg
mov
or
cmc
sub
pop
ja
cs
fcmovnu
sbb
loope
pushl
addr16
jmp
sti
mov
aad
bound
mov
inc
sub
add
negb
int3
std
sub
pop
out
push
pop
mov
cmpsl
adcl
out
int3
insb
lret
cltd
xchg
ja
ja
mov
rcr
mov
addl
ret
xor
mov
fdivl
add
mov
pushf
cmp
mov
push
out
inc
stos
shlb
clc
movsl
pop
sbb
clc
mov
into
addr16
push
cmpsl
add
aas
rcrb
lock
and
test
cmp
jo
push
inc
jecxz
fdivs
push
add
outsl
mov
rolb
cmp
inc
mov
cwtl
pop
adc
out
pusha
inc
add
jb
mov
adc
ret
icebp
in
jge
clc
arpl
fnsave
pop
mov
add
or
nop
test
mov
jecxz
and
imul
sti
rcl
jno
mov
add
xchg
rcrl
push
cmpsl
insb
bswap
rcrl
fdivl
pop
mov
ret
xchg
dec
inc
sahf
push
add
xchg
push
test
sub
es
xor
and
jns
jo
fistpll
or
fisubrs
je
movsl
push
jle
lods
mov
sarl
push
js
fimuls
mov
xor
fcompl
mov
popa
ds
inc
inc
inc
jnp
mov
mov
bound
idivl
pushf
xchg
cmc
nop
mov
cs
jge
xor
int
lret
xchg
jp
push
pop
clc
mov
or
add
sbb
rclb
repz
insb
jmp
adc
pop
arpl
lea
or
push
inc
and
push
mov
push
mov
adc
lret
lcall
adc
jecxz
addb
xchg
add
pop
pop
outsb
mov
jae
push
adc
aad
or
nop
add
cmp
test
das
and
shrb
movsb
mov
pop
shlb
xor
add
inc
cmp
add
ds
jmp
mov
xchg
arpl
je
sbb
fsubr
xchg
mov
lds
dec
cld
xor
lods
shrl
jnp
lods
xchg
cltd
loope
andl
leave
bound
aad
cmc
xor
into
sbb
push
mov
push
dec
and
rclb
pop
popa
pop
xorb
adc
ljmp
out
sbb
pop
inc
out
mov
mov
mov
sub
cmp
mov
loope
addr16
pop
cld
inc
pop
add
imul
or
cmpsl
pop
int
dec
std
lret
outsb
mov
xor
lret
movsl
push
stos
xor
test
cmpsl
jo
fwait
cmp
xor
adc
test
cmc
int3
or
dec
subb
out
lock
aaa
cmpsb
repz
repnz
sub
or
int3
aad
insb
mov
jb
cs
or
insl
jbe
add
mov
inc
jae
jae
push
ficompl
popf
mov
pushl
cmc
mov
leave
lea
cltd
mov
loopw
push
dec
mov
movsl
arpl
iret
pop
lret
mov
fucom
pop
int
shrb
inc
sub
jbe
repz
mov
pop
sub
mov
int3
and
orps
sbb
into
fmul
ljmp
cmp
pop
aas
mull
push
pop
sbb
iret
or
imul
jle
shlb
push
clc
push
data16
pop
in
push
aad
push
fs
mov
dec
ffreep
imul
scas
lret
mov
subb
leave
movsb
or
clc
pop
stos
addb
lods
cltd
sbb
jbe
daa
fdivrl
lods
addr16
adc
push
out
jge
mov
xchg
mov
mov
mov
das
stos
push
fiadds
fcompl
mov
fldcw
test
jp
inc
xchg
xchg
add
jecxz
rolb
add
cwtl
call
fdivr
lods
inc
lock
das
in
lods
pusha
xor
gs
mov
into
pop
stos
cmp
int
imul
int3
fwait
inc
mov
xchg
sbb
scas
xor
mov
nop
outsb
cmc
cmp
adc
or
adcl
cmp
test
xchg
mov
push
scas
dec
aam
jp
adc
cltd
push
rcl
lods
xchg
jae
sub
inc
dec
roll
sbb
int3
cmp
dec
sub
and
jl
addl
mov
sbb
test
jno
into
popa
or
push
add
enter
mov
lods
or
adc
push
and
das
xor
iret
scas
hlt
repz
dec
jge
mov
sahf
jmp
jl
mov
stos
or
js
xchg
inc
lret
mov
sbb
lods
lods
xchg
ljmp
arpl
mov
clc
push
fdivs
and
sub
mov
pop
fisubrl
fsubrl
adc
pop
xchg
mulb
jo
mov
mov
jp
or
adc
cmpsb
jbe
mov
mov
in
xor
sub
and
loopne
cmpsl
movsl
xchg
cwtl
outsb
xlat
out
int3
mov
daa
or
mov
xlat
loopne
sarb
push
jns
rorl
ljmp
mov
mov
stos
and
sbb
jbe
mov
adc
pop
pop
testb
mov
lret
xor
jbe
mov
lahf
sub
enter
jp
adc
mov
pusha
sub
sbb
lea
gs
adc
cltd
cmc
sub
sbb
into
and
pop
mov
sbb
inc
pop
mov
int
dec
sub
push
inc
orl
cmpsb
sbb
xor
mov
test
lret
dec
repz
add
mov
subb
test
out
sub
pop
jecxz
into
sub
jl
ss
aaa
pusha
xchg
loope
jno
std
push
add
or
mov
insb
test
scas
loope
push
adc
je
sbb
mov
in
push
sbb
hlt
lahf
sbb
popf
insl
repz
mov
pop
cs
or
jge
mov
mov
push
into
std
jo
and
outsl
dec
xchg
lret
arpl
clc
std
pushf
test
out
dec
inc
sahf
sti
mov
add
xchg
mov
gs
push
sbb
jg
adc
push
pop
stc
daa
xor
push
xor
fsubrl
cmp
or
out
idiv
hlt
dec
push
xor
jge
rolb
repnz
fadds
cwtl
inc
mov
jne
or
and
das
pop
out
pop
mov
mov
iret
fwait
dec
fstpt
imul
aam
or
ja
lcall
adc
jle
aaa
jbe
insb
imul
jge
cs
aam
or
and
and
mov
jo
andl
mov
std
rorb
in
push
add
into
xchg
pusha
push
xlat
sub
add
daa
push
adc
cld
inc
pop
cmc
test
xchg
fs
push
mov
orl
pop
nop
outsl
in
and
mov
loop
aam
clc
sub
fimuls
mov
xor
fcmovbe
leave
addl
shll
and
setne
push
shlb
xchg
call
sbb
lcall
frstor
mov
xor
ljmp
faddl
lds
pop
inc
stos
cmp
movsl
roll
scas
sub
arpl
stos
adc
addr16
mov
sub
ljmp
pop
mov
push
push
fstpl
lahf
rorl
test
adcb
sub
adc
iret
xchg
cmp
xchg
lcall
or
cmp
mov
sbb
sarl
dec
jmp
mov
pop
call
int
or
push
fiaddl
mov
adc
fsubrs
xor
outsl
daa
dec
mov
push
shlb
jmp
push
out
int3
das
lahf
add
mov
lds
fidivrl
sbb
pop
cmp
mov
mov
arpl
ret
mov
jbe
fistpll
nop
fldcw
pushf
push
sub
fsubrl
xor
cs
xchg
lahf
sub
dec
xchg
cmp
in
and
ret
jns
scas
mov
push
mov
jne
ljmp
inc
push
sbb
mov
sti
jne
push
in
in
push
sti
repz
loopne
push
mov
sbb
xor
mov
pop
cli
lcall
ljmp
push
adc
ret
test
pop
push
jecxz
jns
sub
jg
push
in
mov
xchg
icebp
ret
xor
xor
movaps
xchg
jmp
push
jge
scas
sbb
mov
cltd
mov
cwtl
iret
pop
idivl
sbb
push
sub
sar
lods
and
jg
enter
jno
dec
jecxz
fs
js
aas
inc
imul
add
adc
jg
jl
add
dec
add
fistps
sbb
stos
push
push
push
jbe
jb
pop
inc
dec
jecxz
dec
mov
push
adc
test
xor
pop
insb
jmp
dec
hlt
push
and
jmp
int3
xchg
ljmp
mov
xor
xchg
mov
inc
mov
or
cmc
xlat
outsl
mov
push
sbb
sub
insl
insb
adc
pop
cwtl
lds
jp
stos
push
cmc
mov
jo
cld
mov
inc
mov
jle
pop
sub
aaa
ss
push
dec
inc
push
gs
call
cmp
mov
or
jg
sbb
jg
cli
adc
mov
mov
imul
insl
lock
pop
sbb
xor
insb
jp
pop
repnz
push
adc
rclb
xor
or
mov
ds
fs
cmp
insb
int3
insl
jg
sub
cli
pop
subb
lds
dec
shl
xchg
jo
push
popa
inc
imul
and
mov
mov
mov
mov
mov
mov
mov
movsl
pushf
push
inc
sbbl
fildl
cli
push
dec
jb
test
test
jge
mov
xchg
jp
add
fsub
out
loope
nop
mov
hlt
jns
sbbb
mov
sub
jns
push
ja
and
mov
pop
data16
xchg
in
push
mov
jae
loope
repnz
and
call
mov
ja
adc
dec
aaa
or
ret
jbe
dec
aas
ja
sub
inc
push
scas
icebp
xchg
sub
inc
jecxz
pop
scas
leave
mov
pushf
out
aad
jg
mov
mov
jl
pop
fists
mov
in
xor
lret
cwtl
sbb
addr16
outsb
dec
mov
pop
cltd
or
lea
inc
sbb
in
in
and
iret
mov
sbbb
dec
popf
scas
in
xchg
and
jg
mov
fwait
fwait
lock
mov
sbbl
loop
sub
push
xor
adc
insl
inc
arpl
stc
jecxz
ja
push
push
sahf
sub
insl
mov
or
ret
xor
dec
dec
xor
imul
adc
inc
lea
cld
fmuls
int
inc
rorb
mov
sub
pop
xchg
repnz
in
xor
pushf
arpl
mov
insb
shl
add
pop
xchg
jne
mov
xor
adc
fisttpll
clc
pop
xchg
dec
jnp
or
mov
ds
mov
nop
jge
jp
jns
mov
hlt
push
pop
push
inc
jg
gs
mov
sub
cmp
xchg
test
popf
push
push
push
je
xchg
fwait
call
repnz
xchg
sbb
aam
fwait
mov
add
imul
jecxz
subl
outsb
shl
xor
es
lret
scas
aaa
sub
xor
imul
pop
sarb
dec
popf
dec
xor
sbb
and
data16
pop
ret
xchg
test
dec
mov
fadds
push
adc
dec
dec
or
divb
push
js
and
syscall
and
cmc
sahf
xchg
iret
popa
jae
ljmp
mov
enter
loop
lods
inc
cmp
outsb
adc
iret
and
insb
xchg
je
pop
mov
bound
fistps
cmp
mov
xor
test
pop
std
inc
jae
adc
jbe
idivb
loopne
mov
sbb
mov
mov
test
and
insb
mov
adc
mov
mov
bound
dec
outsb
xor
test
int3
clc
lods
sbb
jne
std
and
inc
ljmp
jno
mov
shlb
imull
stos
mov
push
mov
mov
fst
sbb
mov
pop
sahf
mov
shl
push
pop
cs
dec
dec
punpckldq
push
pop
ds
scas
es
fwait
pop
pop
clc
xchg
int3
jno
shll
jge
and
dec
mov
mov
out
mov
or
pop
jno
push
xor
push
repnz
mov
mov
test
mov
xchg
adc
movsb
les
lods
mov
loopne
xor
add
testb
push
cwtl
ret
ss
push
movsb
scas
cmp
and
daa
mov
and
mov
fcomps
out
mov
push
add
adc
movsl
push
add
in
stc
cltd
cli
std
fsts
and
sbb
mov
mov
mov
bound
dec
xor
mov
push
aad
movsl
add
push
test
ret
cwtl
adcb
inc
xchg
aam
daa
inc
in
in
cmc
addr16
iret
cmp
cmpsl
imul
test
test
mov
inc
mov
nop
loope
jge
adc
sub
cmc
popa
shrb
xchg
sahf
mov
js
jge
or
out
pushf
sti
push
gs
cmp
mov
loopne
outsb
mov
out
sarl
mov
leave
out
push
jns
mov
ret
sub
out
adc
lods
test
les
sub
jne
jg
sub
fstps
adc
roll
test
xchg
sti
or
imul
fcomp
sbb
add
loop
cmc
hlt
lret
cmpsb
fistpll
push
cmpl
js
stos
jg
and
pop
shrl
out
roll
int
push
push
data16
cmp
cmp
cli
lret
mov
pop
sahf
das
mov
add
jb
adc
popa
cmc
into
pusha
push
mov
mov
pop
xchg
push
xchg
mov
sub
sbb
cld
or
inc
adc
leave
xchg
clc
sub
add
loopne
daa
jle
imul
shll
push
out
pop
outsb
fisubrl
pop
mov
push
in
mov
hlt
mov
mov
movsb
cs
xor
arpl
cmpsb
inc
adc
incb
dec
fs
lods
and
cmp
bound
shll
movsl
and
pop
mov
sub
pop
scas
xchg
mov
and
mov
pop
push
in
cmpsl
adc
push
sbb
mov
aad
jbe
mov
test
int3
xor
xchg
iret
xor
imul
sub
mov
adc
js
xchg
sbb
scas
jmp
xchg
fwait
xor
mov
mov
sbb
adcl
cmp
push
cmpsl
inc
loope
lret
push
shl
inc
cmpl
lock
xchg
add
ljmp
inc
jae
in
jno
xor
scas
into
push
in
sub
jecxz
pop
shr
xor
or
pop
mov
repnz
out
cld
sub
add
adc
fisttpll
add
in
out
scas
inc
loope
test
outsl
in
mov
adc
push
aad
cltd
mov
adc
in
add
je
pop
push
ret
sahf
add
call
daa
adc
test
sub
cmp
pop
ss
inc
sub
xor
or
cmpl
add
fimuls
lods
and
mov
ss
cld
push
test
mov
pop
ds
jge
inc
mov
aam
push
sbb
sub
mov
aaa
adc
popf
icebp
pop
xlat
fimull
outsl
fadds
sbb
or
mov
xchg
push
pop
mov
fadds
dec
jno
call
xor
movsl
or
fnsave
dec
mov
clc
lret
mov
int
push
and
int
inc
sbb
mov
and
loop
mov
test
daa
inc
out
outsl
xlat
dec
aaa
jg
cmp
add
icebp
mov
lods
movsb
pop
out
or
sub
jns
outsl
loop
call
and
dec
arpl
fdivs
test
addr16
js
test
or
bts
pop
fwait
xchg
stc
xor
in
cmp
clc
sub
add
lods
loope
push
shlb
js
and
or
cmp
xor
sbb
outsb
lock
cwtl
or
call
dec
lea
es
gs
mov
push
lret
push
dec
sbbb
aas
push
popf
outsl
les
dec
xchg
sub
jmp
jo
adc
es
lcall
or
je
cmpsl
std
cmp
xchg
jne
pop
fidivl
or
or
imul
rcrb
es
pop
push
push
std
mov
inc
popa
or
movsb
lahf
aaa
jae
xchg
sbb
inc
fcoml
inc
imul
add
cmp
in
fdivr
aad
xorl
adc
aad
mov
xchg
jl
in
jecxz
je
subb
les
shrl
ret
lods
aaa
mov
or
pusha
cld
in
push
mov
xor
ret
aad
inc
adc
hlt
lea
lret
jl
mull
mov
pop
and
xchg
cmp
int
sub
aaa
or
cld
jne
outsb
dec
mov
jge
outsl
xor
gs
loop
mov
or
sbb
dec
mov
leave
cmpsl
loopne
xchg
sti
test
adc
push
mov
jge
xchg
adc
mov
push
nop
pop
inc
icebp
outsl
sahf
mov
jp
aas
xor
hlt
push
decb
push
jg
dec
cmp
sarb
or
sub
mov
out
loop
stos
sbb
dec
mulb
cmpsb
in
fisttps
out
push
mov
cli
jp
mov
jbe
sub
inc
ss
rolb
fwait
lods
and
xchg
jmp
fidivl
pop
aad
pop
aaa
mov
sub
xchg
mov
pushf
iret
fidivs
pop
addl
jecxz
shrl
adc
sbb
mov
scas
ss
inc
sarl
movb
pop
sti
xor
inc
insb
loope
dec
jbe
cli
popf
mov
inc
sbb
cmp
cltd
jmp
lods
addr16
and
mov
cli
jbe
or
push
arpl
nop
sub
xchg
mov
pop
push
add
repz
push
mov
fsubr
and
daa
ficompl
xchg
aam
mov
push
adc
sub
push
jmp
or
cwtl
repz
rcl
iret
test
in
rorb
cld
add
outsb
mov
loope
adc
stc
xor
aaa
sbb
bound
mov
rorb
cmp
mov
and
xor
cmpsb
mov
test
scas
imul
or
popf
xor
or
sub
pusha
scas
data16
and
addr16
adc
add
sbb
enter
cmp
dec
jns
stos
pop
jge
mov
enter
adc
xor
fcoms
negl
jge
push
dec
adc
fisubs
jno
cmpsl
ss
fs
pop
pusha
outsb
and
outsb
out
and
ja
fsts
pop
fs
aad
mov
lcall
add
adc
or
mov
xchg
jbe
pop
fcmovbe
xor
xchg
aam
xor
aam
xchg
mov
dec
out
push
pop
lock
or
sbb
mov
and
cmp
inc
sub
push
pop
mov
inc
push
jns
pushf
fisubs
or
jae
insl
inc
sub
push
dec
mov
or
dec
xchg
jns
jae
shrl
push
pop
es
adc
out
sub
lcall
imul
rclb
sbb
and
pop
lods
pop
outsl
arpl
sbb
lcall
in
dec
pop
gs
aad
add
xor
out
int3
loope
cmpsb
pop
pop
xor
lret
mov
xchg
nop
lret
or
sbb
lret
inc
pusha
lea
repz
mov
pop
mov
popl
xor
inc
jl
jl
adc
and
hlt
movsb
xor
cs
dec
imul
or
rcl
push
int3
fwait
movsl
jno
mov
or
clc
xor
or
bswap
pushl
jmp
and
out
pop
xorl
or
sahf
push
pushf
cmp
sbb
cmc
out
xchg
mov
xchg
mov
pushl
fwait
lcall
lods
xor
fwait
aaa
in
dec
fsts
fisubl
fxch
mov
stos
ja
sub
lock
cmpsb
adc
dec
sub
sub
data16
push
sbb
push
pop
sbb
icebp
push
push
jne
fsubl
enter
pop
push
stos
push
popf
cs
mov
add
call
mov
pop
imul
add
fildll
fsubrs
clc
inc
call
inc
or
adc
push
in
shl
mov
adc
jge
lea
popa
xchg
lcall
lahf
out
mov
andb
mov
mov
popa
into
stc
loop
and
repz
imul
dec
scas
push
test
mov
pusha
push
fildll
pop
sbb
jae
push
add
fnstcw
dec
cmp
rolb
adc
int3
pop
pop
inc
cmp
pop
mov
xchg
outsl
int
popf
or
pop
or
in
mov
gs
ljmp
xchg
mov
dec
sbb
or
fsubrl
test
sbb
rol
mov
push
je
xchg
pop
cli
pop
push
jecxz
push
imul
pop
pop
fstpt
cwtl
std
shlb
sbb
inc
lahf
repnz
stos
outsb
push
loop
ret
clc
inc
leave
xchg
faddl
shrl
in
cwtl
add
push
test
pop
mov
sarb
popa
push
scas
insb
mov
sbb
repz
cmp
cmc
es
in
xchg
cmp
sarb
insb
sti
and
and
or
pushf
or
pop
add
add
xor
add
pop
push
das
mov
aad
cmp
pop
push
dec
or
sbb
xchg
test
cli
pop
insl
sbb
mov
pop
addr16
lds
xchg
ljmp
call
addr16
xor
pop
loopne
stos
lret
daa
jno
mov
fwait
sbb
stc
mov
mov
shlb
subl
push
lahf
xor
in
mov
dec
mov
lcall
xor
fiadds
cmp
in
pop
adc
sti
cltd
call
stos
js
sbb
fsubs
cmp
pusha
pop
adc
sbb
mov
adc
test
add
rcrl
xor
sub
aam
jno
rcrl
and
stc
mov
sub
mov
pop
xor
xchg
cmp
popa
daa
mov
push
mov
dec
push
push
push
test
and
mov
outsb
dec
fsub
lods
mov
xchg
dec
fdivl
popl
push
std
push
pop
in
and
cs
ds
pop
sub
fcmovnu
pop
or
xchg
xchg
adc
and
xchg
jmp
aam
lea
int
jns
cmp
and
popf
jp
sub
push
rcr
sar
and
push
pushf
mov
stc
xchg
mov
cs
cli
or
sbb
arpl
mov
mov
sub
mov
popa
mov
sti
jg
jp
adc
fisubs
mov
imul
inc
xor
std
add
sub
loop
xor
incb
jl
lods
xor
hlt
ror
sub
pop
mov
bound
int3
out
out
cltd
shl
test
mov
fstpt
mov
mov
push
jo
sbb
add
call
inc
hlt
pop
icebp
xor
or
jge
add
mov
out
imul
cmp
mov
xchg
pop
pop
shlb
mov
int3
sub
mov
sbb
dec
push
dec
push
pop
push
xchg
push
add
push
jnp
push
out
inc
or
push
sbb
xor
sub
shrl
mov
mov
jno
inc
fs
adc
cli
sahf
push
xor
mov
jae
cli
sbb
sar
mov
loop
loope
lods
mov
and
adc
mov
pop
lea
fdivr
and
mov
lret
dec
and
stos
dec
mov
and
test
push
sahf
xchg
std
inc
inc
into
rorl
push
and
insb
jno
pop
mov
or
mov
ret
aas
shl
mov
push
cltd
lods
xchg
mov
loop
test
or
or
mov
cltd
cmp
movsl
cltd
sbb
scas
fnstcw
dec
fmul
mov
outsl
pop
loop
shlb
fistps
cmp
sti
lock
inc
lret
lret
jmp
ja
or
fs
orb
ja
ret
mov
mov
movsl
cltd
add
inc
inc
jno
cmp
test
test
aaa
sub
add
lahf
addr16
or
test
out
cmpsb
sub
dec
jnp
dec
sbb
mov
sbb
arpl
lea
or
mov
xorl
cmp
mov
addr16
loopne
dec
lcall
xlat
inc
shll
cli
sarl
or
jbe
or
cmp
jecxz
mov
push
outsl
cli
mov
mov
int
sbb
int
enter
mov
mov
stos
and
in
push
cmpsl
xor
incb
cmp
insb
inc
xchg
js
add
sarl
addr16
out
imul
mov
scas
into
mov
xchg
stc
pop
jno
mov
daa
or
ja
or
rclw
test
pop
out
pop
mov
sbb
jmp
pop
xor
mov
mov
stc
out
mov
mov
sbb
xor
cli
sahf
jno
lods
pop
pop
xchg
imul
psubb
into
push
mov
or
lret
push
sarb
imull
pop
adc
iret
mov
sub
in
jle
sbb
test
add
jg
shlb
xchg
xlat
and
aam
xchg
stos
orl
mov
mov
lods
xor
or
scas
cmp
sahf
jg
andb
inc
jae
mov
cmp
mov
testl
xor
and
sub
idivb
loop
or
rclb
pop
dec
scas
xor
in
add
faddl
dec
push
test
nop
sub
shll
push
mov
inc
scas
aam
jno
popa
stos
cmp
stos
mov
lods
iret
adc
mov
pushf
and
vlddqu
push
mov
cmpsl
negl
sub
outsl
xchg
xchg
les
sub
ljmp
xor
adc
add
jbe
lcall
dec
loop
mov
mov
pop
popa
sbbb
stc
and
pop
mov
jecxz
xchg
push
lods
scas
cmpsl
push
fld
xor
dec
std
fists
dec
into
sbb
and
cmp
jg
adc
into
sbb
daa
addr16
jle
adc
push
inc
mov
scas
mov
cmpsb
lods
mov
or
or
nop
dec
ret
fisttps
fwait
inc
sarb
loop
xor
clc
adc
clc
aaa
mov
fsubrs
jp
inc
lcall
and
mov
call
scas
push
xorb
mov
push
ds
inc
mov
xchg
out
cmp
stos
cmpsb
mov
mov
adc
rorl
mov
aam
add
and
pop
rcr
notl
test
stos
scas
fwait
and
mov
jno
shlb
dec
popa
repz
daa
and
mov
xchg
push
and
mov
hlt
mov
jnp
pop
xlat
shll
cld
daa
iret
push
mov
xor
cmp
daa
loope
fcmovnb
inc
cld
cmp
sub
add
stc
mov
ss
je
int3
dec
rolb
int
xlat
add
and
pop
adc
bound
mov
lds
jo
test
dec
pop
inc
adc
sbb
shlb
jecxz
inc
lea
sbb
sub
stos
mov
into
mov
jb
dec
mov
push
movsl
iret
cmp
add
cli
dec
imul
jge
out
lahf
add
dec
inc
insl
loopne
xor
push
dec
and
mov
jo
icebp
loope
imul
lock
in
adc
adc
pop
sbb
add
bound
dec
pop
sahf
shll
cli
jnp
xor
sub
inc
jmpw
sbbl
and
or
push
jo
adc
incb
scas
test
mov
pushf
jmp
lahf
jno
sub
dec
psubq
pop
pop
push
test
xchg
shlb
test
fs
xchg
jnp
xlat
push
push
clc
mov
jmp
test
enter
icebp
out
ja
filds
scas
das
mov
push
or
push
ds
lahf
dec
stos
lret
push
cmp
lret
add
pop
fwait
sub
jg
mov
pop
loopne
imul
and
ljmp
pop
insl
dec
xor
shl
lods
pop
cmp
jae
sub
scas
testl
out
fbstp
clc
mov
addr16
in
xchg
ljmp
leave
loopne
inc
in
arpl
and
in
stos
xor
cmp
inc
lock
fwait
dec
mov
inc
dec
call
pushf
cmp
movsl
arpl
test
imul
test
mov
push
pushf
iret
pop
ret
popa
push
adc
mov
inc
loope
jne
add
adc
imul
mov
idivl
push
popf
sarl
mov
out
es
inc
shll
jno
sub
out
ficoms
imul
push
pop
popf
xor
ret
mov
or
enter
and
sbb
int3
sbb
push
cmpsl
in
push
jecxz
out
sbb
mov
xchg
stc
and
insb
mov
pop
push
daa
or
outsl
daa
pop
sbb
fnstenv
push
repz
fimuls
xor
and
cmc
pop
insb
cli
clc
fs
pop
mov
jg
nop
leave
shlb
cltd
aaa
outsb
insl
stos
ljmp
scas
daa
bnd
mov
fldenv
push
test
push
or
stos
xorl
shll
cmpsl
in
ffreep
mov
jl
sbb
test
gs
mov
lock
loop
jmp
pop
js
or
repnz
mov
addb
pop
inc
hlt
orl
push
lcall
adc
adc
pop
mov
add
cmp
jmp
dec
push
into
inc
sbbb
mov
adc
xchg
or
mov
adc
pop
loop
pop
fmull
push
cmpsb
mov
sbb
inc
std
cmp
push
or
jns
jb
orb
pop
push
insl
aam
push
adc
nop
fisttps
sub
mov
into
mov
pop
add
pop
icebp
jl
int3
mov
add
pop
hlt
xchg
or
sub
adc
cmp
lds
fisubrl
mov
out
orb
test
push
movsb
jle
js
adc
fildl
ja
add
lcall
test
icebp
insb
ljmp
inc
ja
lcall
and
and
add
dec
sti
push
dec
ja
pop
loop
test
push
outsl
outsl
gs
stos
test
test
lods
or
adc
cmp
lods
push
rcrb
adc
or
add
pop
mov
mov
pop
test
sarl
mov
pushf
lcall
sbb
and
pop
or
mov
stc
icebp
add
loop
fistl
aas
pop
push
or
sbb
popf
pop
movsl
pop
out
cmp
hlt
push
nop
push
mov
icebp
adc
iret
movsb
mov
mov
icebp
lret
xlat
jecxz
clc
sbb
gs
jne
icebp
jno
dec
mov
cld
imul
ja
xlat
sbb
hlt
jg
dec
out
or
clc
sbb
dec
pop
fmulp
lods
jae
notl
fsts
pop
fcomi
push
or
and
lret
and
xor
mov
test
pop
sub
add
scas
aad
rclb
adc
cmpsb
sub
clc
push
jl
or
mov
lret
adc
jmp
mov
or
mov
jbe
sbb
mov
fldlg2
sbb
out
mov
movsb
std
negb
mov
clc
in
mov
testb
adc
adc
loop
imul
clc
mov
test
sub
ret
dec
sbb
xchg
mov
cmc
pop
nop
fcomi
aaa
call
sbbb
pop
aas
jge
and
fs
xchg
aaa
mov
or
ja
add
divb
mov
sub
popa
jg
jbe
scas
mov
in
inc
and
pop
hlt
jge
je
fcoms
cwtl
clc
inc
lcall
push
adc
jl
and
add
mov
mov
je
sbb
mov
daa
ficomps
gs
pop
lods
jne
and
mov
dec
cmp
adc
shrb
insb
rcrb
enter
sti
push
aam
xor
mov
outsl
loope
inc
out
add
push
addr16
jecxz
scas
push
inc
imul
test
stos
push
push
or
ljmp
imul
fdivrl
jecxz
lods
out
mov
cld
or
dec
xor
pop
mov
imull
inc
add
data16
cld
cs
dec
xor
aam
loopne
addr16
je
xchg
mov
mov
es
cmp
pop
mov
jecxz
test
orl
xor
xchg
cld
dec
pop
stos
inc
xor
push
shlb
mov
add
dec
into
fdiv
lock
mov
xchg
inc
mov
aam
mov
mov
loope
ds
jge
imul
push
sub
inc
mov
xchg
aam
mov
jo
jp
cmc
or
ljmp
mov
inc
xchg
pop
mov
or
mov
xor
data16
mov
cmp
xor
cmp
push
call
mov
dec
ja
scas
loop
jnp
pop
inc
inc
xchg
jle
push
fistpl
ret
xor
cmp
fwait
lods
jge
in
xchg
or
je
leave
aaa
scas
loop
sahf
in
push
and
sbb
pop
inc
xchg
addr16
adc
cmpsb
pop
ret
popf
mov
sti
setl
pop
cmc
cmp
mov
or
ljmp
ret
or
les
pop
mov
pusha
mov
push
ret
cs
inc
adc
pop
js
pop
xor
xorb
mov
movsl
ret
cwtl
dec
lcall
in
sbb
fxch
push
loop
test
mov
inc
and
cmp
push
mov
loop
xchg
mov
lcall
std
push
out
fcmovbe
mov
ss
aad
je
imul
rclb
sub
addr16
pusha
call
lret
adc
lea
sub
mov
shl
lcall
nop
out
xor
dec
push
es
call
ds
nop
mov
sbb
sub
in
push
pop
stos
cmp
jg
cmpsl
and
fimull
push
fidivs
stos
pop
notb
cwtl
subl
add
mov
pcmpgtw
push
mov
into
mov
lret
adc
imul
push
pop
inc
push
stos
repnz
jmp
and
jge
testl
fnstcw
pop
adc
mov
add
xchg
adc
xor
fldcw
or
out
ljmp
xchg
cltd
pop
aas
jmp
in
inc
sub
loope
adc
sub
test
pop
and
popf
leave
jg
fucompp
cwtl
popf
push
xor
push
pop
loopne
xor
fistpll
and
xor
dec
gs
sub
jb
pop
dec
out
andb
popf
ds
insb
mov
aas
cs
inc
inc
jle
push
push
push
out
inc
add
pop
call
xchg
push
movsl
inc
repz
xchg
or
fimull
scas
cmp
inc
sub
or
and
adcb
or
or
sarb
xor
imul
scas
enter
jmp
loopne
outsb
pop
ljmp
gs
ret
mov
out
insl
xchg
int
imul
testl
out
xchg
pushf
dec
enter
arpl
mov
dec
jp
mov
fistpl
repnz
pushf
fstpl
mov
je
pop
pop
mov
push
jmp
mov
out
stc
adc
movsb
subb
mov
push
cmpl
lods
fcmovnbe
push
outsl
ret
insl
fsubrl
ja
into
xchg
fcoml
and
adcb
sub
sbb
cmp
pushl
xchg
leave
pop
out
dec
and
call
pop
mov
ja
cmpsl
in
stc
push
inc
jnp
cld
or
sahf
or
jg
rcl
and
mov
inc
lock
dec
repnz
xchg
pop
adc
std
add
pop
or
mov
int
out
adc
mov
negl
imul
lea
pop
adc
dec
adc
or
and
cltd
sbb
mov
iret
fs
xchg
leave
popf
rcl
les
add
pop
dec
pushf
and
inc
jle
jmp
sub
mov
roll
loopne
loope
add
jne
jg
cwtl
iret
mov
in
in
cmp
mov
lea
push
and
xchg
adc
sub
lcall
inc
mov
jo
jbe
mov
xchg
out
out
fadds
cmc
push
ret
sahf
scas
gs
scas
lcall
mov
testl
fisttpl
lds
sub
xor
mov
pop
add
clc
xchg
arpl
aaa
nop
inc
fcomps
and
subb
out
fisttpl
fucomi
add
push
stos
lahf
repz
pop
mov
sbb
rorb
mov
pushf
out
imul
imul
push
jl
mov
sub
das
js
inc
sbb
out
mov
sarl
loope
sbb
sbb
lock
mov
pop
add
mov
mov
sbb
jecxz
stos
pop
adc
mov
inc
les
out
and
dec
jb
aas
jns
push
and
push
push
repz
push
shrb
sbb
aas
sbb
inc
and
sti
scas
call
rcrb
sar
call
pop
xor
xchg
cmpsb
inc
sbb
div
fldenv
pop
out
mov
adc
pop
xor
pop
lods
and
inc
mov
pusha
rorb
push
lock
and
jge
adc
or
orl
sbb
dec
cs
pushf
les
xor
aaa
sbb
and
mov
fmul
dec
pushf
ljmp
inc
out
mov
jp
arpl
stos
add
xchg
shl
push
repz
es
jnp
sbb
int3
dec
pop
push
or
stc
xlat
fistpll
hlt
or
push
aas
imul
shll
mov
cmp
jno
fnstcw
dec
and
xchg
lret
or
test
sub
pop
dec
in
cmp
leave
in
sbb
dec
leave
add
stos
arpl
outsl
push
insl
in
xchg
inc
cmpxchg8b
lahf
sbb
xchg
mov
mov
xchg
notl
jae
out
sub
push
mov
mov
fcoms
movsb
xchg
repz
pop
cli
cltd
adc
lcall
xchg
add
dec
ret
dec
pop
cld
leave
jge
add
cmpsb
pop
stos
xor
and
pop
mov
inc
aad
sub
testl
xor
insb
ljmp
sub
pop
sbb
add
jge
lods
popa
stos
add
or
add
es
hlt
orl
adc
xor
mov
into
add
jle
mov
xor
andb
mov
mov
push
mov
popa
lea
or
lcall
pop
mov
xchg
arpl
dec
pop
push
lret
add
shl
jns
ror
mov
hlt
push
cmc
popa
ds
jge
sahf
mov
or
sarb
ret
cs
cmpsl
adc
mov
test
negb
out
ret
in
jo
icebp
movsl
icebp
fld
add
xchg
push
or
xchg
sbbl
push
dec
ljmp
mov
data16
adc
xchg
dec
in
dec
out
stc
push
mov
ja
lahf
hlt
jo
push
pop
dec
aam
js
mov
js
cmc
in
pop
xor
push
int
lods
leave
jmp
cmpb
lret
repnz
popf
dec
clc
in
jno
cmpsl
jp
nop
add
cli
mov
jne
ljmp
cmp
cmpsl
mov
cmp
mov
and
lods
mov
adc
addr16
jo
sub
out
mov
adc
dec
je
jle
shr
cmp
sub
add
xchg
sub
ss
inc
aad
dec
in
cli
movsb
inc
mov
ljmp
or
int3
ja
inc
dec
sub
adc
rep
add
xor
cmpsl
in
addl
in
sub
mov
mov
cmp
mov
or
pop
js
ret
fstl
movb
pop
into
sub
sbb
push
cmpl
cmpsl
popa
inc
pop
mov
rcr
jbe
popf
pop
push
pop
mov
mov
inc
xor
inc
xor
add
lea
xor
fisubrs
sbb
dec
mov
imul
xchg
loop
lods
push
pop
cs
push
adc
cmp
mov
dec
pop
xchg
out
lahf
fdivrs
pusha
xchg
pop
mov
xchg
sbb
cmpsb
inc
xchg
cmp
inc
arpl
icebp
test
test
test
popa
pusha
jne
fnstenv
jg
or
test
cmp
or
loopne
sbb
mov
fisubrs
sub
mov
mov
nop
cli
xchg
mov
lock
sahf
test
cmp
ljmp
sub
push
scas
rdmsr
pop
test
jmp
lods
add
jecxz
stc
out
and
push
jbe
pop
jge
or
and
mov
stos
xor
js
add
ss
dec
mov
jo
stos
mov
mov
cmp
repnz
daa
fsubs
pop
add
fisubl
cmc
int
ja
mov
jg
jno
jbe
or
cmp
cmpsb
jo
lods
stc
shrb
push
outsl
dec
jne
movsb
nop
scas
inc
pop
jmp
iret
sbb
mov
sbb
push
jns
push
ret
leave
std
das
jg
push
push
ds
ror
mov
dec
adc
rcll
fwait
sbb
enter
mov
scas
push
xor
pop
fstpt
pop
add
lock
adc
adc
pushf
cltd
mov
mov
inc
repnz
or
cltd
add
mov
es
and
cmc
cs
lods
cwtl
ja
lds
or
fdivrs
testl
sti
pop
or
addr16
bound
adc
lods
xor
insl
xor
sti
adc
mov
ret
cmp
dec
out
push
fwait
data16
rep
rorb
out
ret
mov
test
xor
cmp
loop
mov
xor
repz
mov
loop
cmp
test
or
rcrb
dec
test
outsl
in
dec
push
or
sbb
aam
and
stc
or
xchg
adc
hlt
jbe
stc
or
jne
test
jns
push
dec
sub
inc
stos
daa
clc
scas
cmpsb
dec
addr16
xchg
sub
subb
pop
or
notb
es
sbb
dec
or
lcall
shlb
fs
ljmp
push
push
mov
add
pop
out
fdivrs
cmp
js
push
jge
test
fisubrl
cmp
jle,pn
mov
sbb
jnp
insb
popf
dec
repz
dec
ss
dec
sbb
jp
pop
inc
loopne
push
iret
or
lret
xchg
push
xchg
xchg
mov
in
inc
mov
adc
arpl
dec
inc
xchg
jp
std
xchg
inc
add
jl
hlt
out
lea
fdivrs
mov
sbb
cmpsb
mov
push
aas
aas
test
mov
lds
sar
iret
adc
xchg
xor
push
in
jl
iret
mov
shlb
push
test
lock
add
andb
mov
jbe
xchg
pop
xchg
aam
add
or
mov
jmp
js
xchg
adc
push
add
xor
orb
insl
or
mov
pusha
cmc
lods
cwtl
or
xchg
cmp
sarl
mov
insb
jb
cmpsl
inc
jnp
test
add
lds
xchg
xchg
bound
sbb
fisubs
out
jle
mov
ss
sub
mov
dec
add
enter
das
std
adc
xor
frstor
gs
mov
jb
gs
xor
movsb
out
inc
aas
inc
xchg
lcall
mov
adcb
and
stos
int3
int3
push
arpl
mull
fisttpll
sbb
or
fimull
dec
int
scas
fldenv
adc
mov
ja
int
xlat
push
das
or
jno
inc
add
cs
cmpsb
mov
lock
pop
jnp
push
jbe
mov
fwait
dec
mov
enter
cmc
xchg
mov
data16
lods
push
mov
adc
loope
popa
ret
xor
xor
pop
and
mov
fnstenv
shll
jnp
or
lahf
cmp
pop
lods
pop
jp
es
push
shrb
es
stos
cmp
mov
mov
xchg
mov
rcll
mov
pop
jns
push
ds
std
jle
inc
adcl
mov
imul
sar
loopne
mov
mov
jmp
scas
fdivrl
push
xchg
mul
mov
sbb
add
cld
add
cmp
inc
push
jbe
jnp
mov
mov
add
shll
xor
xor
out
jp
mov
sub
push
inc
pop
add
or
pop
inc
or
data16
call
dec
iret
add
cmp
aam
jg
in
sahf
cmp
mov
dec
fidivrs
btc
lock
inc
lea
cmp
xchg
sbb
pop
mov
xchg
adcb
aaa
jo
out
jns
stos
shlb
es
xor
mov
jb
les
arpl
sub
mov
int
dec
lods
inc
xchg
adc
xchg
outsl
xchg
subl
idivb
pop
push
jge
popa
mov
arpl
dec
cmpsb
mov
dec
mov
xchg
pusha
add
aam
in
out
decl
std
mov
sbb
sbb
imul
jp
and
sub
fidivrs
sbb
jne
cmpsl
inc
cmp
add
pop
lods
test
repz
dec
mov
and
cs
inc
loope
sbb
fwait
cmpsb
add
loopne
mov
xor
push
nop
rcr
dec
test
xor
or
js
fwait
ds
adc
mov
and
addr16
and
dec
rcrl
push
push
xchg
xor
mov
dec
jle
fdiv
pop
scas
pop
mov
sar
pop
pop
ret
aad
inc
fdivs
push
inc
fistps
xchg
adc
or
popf
loop
xor
cld
sbb
sbb
mov
push
mov
cmpsb
mov
les
test
mov
aad
xchg
dec
test
lret
pop
push
push
cli
or
or
mov
mull
leave
pop
mov
adc
adc
gs
fs
cmc
jmp
int
insl
dec
jmp
stos
scas
xorl
cmp
mov
addr16
adc
push
rcll
sbbb
into
and
or
lret
lahf
mov
sub
mov
test
sub
ficomps
fwait
adc
and
repz
sub
push
inc
hlt
lock
data16
clc
clc
and
sub
sbb
lods
dec
jge
popa
adc
push
fnstcw
or
lahf
jb
jne
lods
or
addr16
xchg
ret
in
out
xchg
and
cs
clc
ficoms
mov
lods
and
xlat
popa
xor
push
jnp
inc
add
cmp
fidivrs
xchg
xor
loopne
fidivrl
push
lea
cltd
jb
mov
pop
and
stos
shl
lock
cmc
jne
jnp
xlat
jnp
roll
out
add
cltd
or
mov
test
lahf
xchg
add
mov
test
lods
ds
push
ficompl
mov
pop
sbb
inc
fdiv
sub
aaa
cmp
mov
mov
fdivrp
inc
in
loope
mov
cmpl
test
negl
out
lret
mov
mov
dec
mov
inc
cmp
jmp
and
movsl
pop
jle
jg
rclb
mov
sti
int
push
jb
test
pop
lds
clc
popf
add
dec
sti
outsl
cmp
mov
cltd
pop
nop
add
pop
xchg
mov
mov
add
das
daa
add
jne
jl
les
cmp
movl
xchg
bound
mov
arpl
call
cs
popa
pop
mov
mov
xchg
xchg
ds
jle
mov
jo
pop
bound
cmpsb
pop
jg
mov
push
add
push
push
cmc
or
xchg
xor
fisttpll
imul
ds
xchg
scas
fadds
mov
incb
or
call
inc
lahf
fs
mov
imul
adc
mov
add
add
loope
out
pusha
scas
jg
jecxz
popf
aaa
mov
in
imul
mov
and
fwait
mov
mov
inc
pop
out
mov
outsl
cmp
push
push
or
and
cmp
fildl
daa
mov
push
test
mov
add
xor
je
loop
fiadds
lods
ja
add
xchg
jle
add
cli
dec
xchg
inc
in
and
or
addb
adc
outsb
xorl
or
out
sbbl
dec
outsb
mov
push
and
add
sub
xor
imul
sub
std
test
dec
mov
xchg
sbb
mov
insb
jl
jb
fldl
cmp
ljmp
fidivrl
mov
adc
insl
pop
sbb
pop
ficoml
shlb
in
adc
dec
js
pop
stos
pop
push
xchg
mov
into
pop
stc
jmp
sub
cmp
ljmp
push
iret
jmp
jno
dec
sub
into
fistpll
and
lods
aaa
cs
cmp
fwait
dec
mov
push
bound
jmp
mov
jno
into
mov
push
mov
stc
dec
mov
mov
cwtl
jmp
mov
ret
mov
in
mov
mov
add
dec
imul
xchg
in
and
imul
xor
mov
mov
shlb
add
out
xchg
mov
cwtl
out
dec
xor
sbb
call
negb
or
sub
rol
push
mov
ss
iret
adc
sti
mov
es
xchg
sbb
xor
cmp
cmp
cmp
mov
or
aad
clc
xor
int
rorl
lret
in
fbld
cmpb
jnp
daa
loopne
pop
popf
cmp
cmp
lret
cltd
and
js
sub
frndint
inc
cmp
push
stos
testl
mov
popf
stos
sub
ror
jnp
adc
inc
dec
outsl
clc
shlb
and
xor
xor
dec
pop
icebp
jge
loop
gs
inc
and
mov
adc
ffreep
loopne
pop
or
xor
jne
push
and
push
sti
in
fldcw
jl
or
adc
movsb
sbbb
mov
add
jg
hlt
push
sbb
push
xchg
xor
dec
in
movntq
out
cwtl
cli
test
je
out
jl
xor
fildl
xchg
sub
xchg
jo
insl
push
xor
ds
popf
sbb
jae
pop
scas
lcall
lret
call
or
cmp
scas
xor
cmpsb
and
sub
iret
and
stos
add
sub
lahf
das
dec
mov
lods
xchg
pop
sbb
pop
inc
ret
jg
mov
in
data16
add
pushf
push
es
test
push
test
push
ja
nop
outsb
aaa
dec
popa
stos
push
repnz
jo
lahf
mov
xchg
cmp
daa
insb
in
mov
xlat
pop
pop
xchg
je
sub
sahf
repnz
insl
sbb
fisubl
sbb
or
or
shlb
cs
and
jle
inc
cli
popl
mov
hlt
adc
push
and
adc
ret
mov
bound
add
loop
sbb
mov
addr16
loopne
sbb
fstp
fbstp
mov
test
sub
xor
inc
add
dec
sub
stc
inc
inc
out
xchg
testl
iret
push
sbbl
sbb
mov
dec
sti
lret
pop
or
push
add
mov
mov
cwtl
xchg
sbb
and
dec
mov
out
xor
mov
dec
cltd
push
pop
pop
inc
gs
outsb
cmp
or
and
aam
out
fstps
add
xchg
aaa
push
cmpsl
xchg
pusha
mov
add
cmpsb
ss
int
push
lods
stos
imul
in
fmuls
int
xor
jmp
push
inc
xchg
int3
mov
and
pop
dec
mov
out
mov
sub
xchg
scas
push
push
repz
push
xchg
jb
xor
xchg
xchg
ja
dec
movsb
jno
inc
rorl
xchg
xchg
fisttps
mov
test
aas
clc
push
movsb
or
xchg
mov
sbb
insb
inc
mov
sbb
jp
nop
inc
or
jmp
mov
movsl
cmp
xchg
pushf
fnsave
dec
stos
jno
in
jno
daa
rclb
stos
mov
dec
mov
push
cmp
in
dec
shrl
int3
mov
sub
shlb
mov
into
cmp
sub
rol
and
xor
ret
ss
cli
push
xor
fpatan
xor
lret
xchg
mov
push
xor
ret
xor
js
in
sarb
repnz
xchg
addr16
mov
xchg
stos
cmpl
sub
int3
cmp
jg
aas
dec
scas
jae
mov
iret
in
mov
push
mov
cltd
imul
iret
test
mov
insl
adc
shlb
push
pusha
in
mov
xchg
jmp
dec
xor
aas
and
movsb
lcall
out
clc
xor
subb
dec
inc
sub
sbb
mov
ljmp
rol
cmp
dec
shll
adc
mov
hlt
push
imul
mov
daa
xchg
mov
inc
sub
dec
jb
inc
repnz
cmp
mov
dec
add
xchg
ret
repnz
rorb
arpl
pushl
and
push
sub
cmp
adc
stos
sti
clc
ss
dec
or
dec
and
jge
jbe
mov
popf
jl
inc
xor
aaa
imul
iret
out
aad
jno
test
adc
js
outsb
xor
sub
push
mov
repz
xchg
clc
mov
data16
jl
in
jg
adc
and
push
adcb
stos
ficoms
push
les
jecxz
push
cmpsb
stos
fstpt
add
cmpsb
push
mov
je
mov
add
divl
pop
or
add
xchg
popa
pop
fnstcw
imul
movl
jno
repnz
add
outsl
dec
cmc
pop
inc
test
mov
in
jae
cmpsb
jnp
loop
rcll
cwtl
jge
xchg
cmp
add
repnz
ds
xorl
lcall
hlt
pop
or
xchg
inc
pushf
adc
and
shrl
adc
xchg
push
xchg
rcrb
test
dec
sahf
lret
aas
int
mov
fistpl
arpl
cmp
aas
es
inc
lea
push
lods
movsl
test
cmpsb
es
adc
in
mov
dec
into
pop
add
xchg
dec
loop
mov
mov
cmpsl
lock
icebp
sbb
xor
scas
adc
ja
movsl
xchg
icebp
sti
pop
adc
mov
out
adc
push
test
jge
push
xor
push
and
les
inc
stos
ljmp
xor
xchg
aad
imul
int3
mov
cmp
test
xor
enter
inc
in
fdivrp
in
inc
xchg
xor
mov
and
mov
sbb
ss
mov
int3
dec
mov
outsb
mov
loope
jo
push
inc
jb
mov
sub
test
pop
jae
rcr
jns
dec
xchg
sub
inc
sub
jmp
neg
or
pop
xchg
stos
add
fcmovbe
xchg
sub
arpl
stc
repz
lahf
xor
inc
mov
popf
pop
cld
stos
test
cmp
in
test
cmp
sahf
in
nop
test
cli
in
sub
sbb
repnz
aas
sbb
and
shl
push
or
push
inc
mov
xor
sahf
aam
and
notl
daa
cmc
pop
cwtl
dec
movsb
jnp
jle
mov
inc
xchg
inc
or
rorb
movsl
stc
dec
jmp
fimuls
and
fbld
adc
or
jne
ss
jecxz
test
and
sbb
loop
xchg
inc
sahf
pushf
ret
xchg
dec
pop
dec
jno
xor
pop
out
fists
fs
shlb
fwait
repnz
jnp
pop
pop
fucomp
dec
fldl
push
sbb
cwtl
push
fwait
mov
int3
daa
and
mov
jecxz,pt
imul
int3
cmc
jmp
adc
adc
sahf
adc
scas
leave
inc
jge
scas
aas
lcall
pop
cli
loopne
loope
jmp
test
mov
mov
inc
xor
adc
adc
cmpb
imul
arpl
scas
cwtl
xor
mov
mov
outsw
rcl
inc
jge
pop
cmp
and
cmp
dec
jl
inc
out
sarl
fidivrl
sbb
pop
mov
mov
and
jo
push
mov
mov
and
xchg
jno
test
icebp
mov
inc
int3
or
lcall
or
xor
and
pop
into
fwait
loope
hlt
stc
add
daa
dec
mov
cmpsb
out
mov
shlb
das
jne
cmpsl
test
std
ss
push
out
punpckldq
in
shll
das
pop
mov
or
cmpsb
dec
mov
mov
fs
mov
sbb
int3
je
push
cmp
and
or
cltd
sbb
dec
xchg
jb
in
insl
xchg
lret
pop
mov
xor
xor
repnz
mov
fsts
or
mov
cmovo
aad
pop
fsub
pop
cmpsl
dec
js
or
add
sti
vcvtsd2ss
pusha
inc
push
gs
lds
push
jecxz
push
cmpb
inc
mov
dec
decb
sbb
or
les
pop
sbb
popa
xchg
adc
add
mov
shrl
sub
dec
dec
pusha
inc
fs
stos
in
inc
or
test
fisubl
add
test
add
adcl
push
outsb
push
clc
sbb
mov
or
jb
add
inc
or
out
xchg
push
addl
adc
sarl
int3
shll
adc
mov
lds
ficomps
mov
pushf
jnp
popf
and
xchg
adc
jae
movsb
test
mov
push
dec
inc
lock
xor
xor
shll
mov
rorl
ja
aas
mov
dec
ret
mov
popf
push
lret
decl
push
js
sub
movsb
mov
ret
cmp
aaa
jo
and
or
movsb
cmp
mov
add
testl
mov
xchg
and
adc
test
mov
mov
outsb
xchg
jne
jmp
outsb
adc
outsl
ds
push
jmp
pop
movsl
rorl
clc
lds
lea
mov
pop
push
jmp
dec
jmp
iret
xchg
out
mov
lock
sub
push
shll
push
test
hlt
aam
mov
test
sbb
sub
mov
cmp
and
pop
fldcw
jnp
aaa
movsl
mov
pop
xchg
les
push
and
xchg
lea
mov
into
sub
loope
xlat
ljmp
jg
xchg
mov
pop
mov
flds
inc
dec
or
jno
mov
jl
pushf
dec
into
inc
icebp
enter
pusha
and
lcall
cmp
jge
fs
mov
xlat
ret
mov
outsl
add
inc
sub
mov
shlb
xor
sbb
adc
cltd
mov
and
add
mov
arpl
ja
std
mov
cmp
dec
rcrb
aam
xor
xchg
inc
mov
jne
and
adc
out
mov
cmpsb
pop
mov
hlt
pop
xor
pop
add
mov
insb
aad
mov
scas
je
jo
sbb
add
mov
scas
test
add
bound
push
int
mov
movsb
scas
push
inc
idiv
test
sbb
aaa
fimull
dec
dec
imul
add
lock
jne
push
repz
push
decl
data16
js
sbb
repnz
push
and
mov
mov
adc
scas
imulb
add
inc
push
loopne
adc
xor
sbb
push
cmp
roll
sub
clc
lret
pop
movsl
cmc
dec
fsubs
cmp
aaa
movsb
mov
cwtl
xlat
cmp
mov
nop
ret
outsl
and
shr
xor
shlb
out
out
jl
jp
add
or
enter
xor
push
icebp
test
push
popa
xchg
aad
xchg
push
mov
std
lods
es
mov
in
cli
iret
inc
xor
and
mov
inc
push
out
cmp
aad
add
adc
imul
jmp
fnstenv
mov
dec
dec
lret
cld
xor
push
xor
jno
scas
or
push
inc
push
dec
xchg
xchg
push
jle
leave
je
stc
mov
cmp
and
out
xor
jmp
adc
adc
add
push
sub
mov
out
js
ljmp
insl
inc
jns
xchg
mov
popa
adc
cmc
fcomps
fsts
cwtl
arpl
pop
xor
push
iret
lahf
sub
cmpsl
dec
rcll
cmpps
outsl
ss
sahf
mov
sub
push
daa
repnz
lods
and
xchg
mov
bound
mov
enter
in
pushf
add
sub
out
lds
lds
sbb
and
cmpsl
scas
rcrl
cmp
sbb
lahf
in
stos
mov
test
rorl
mov
xor
movsb
or
sahf
cs
jecxz
push
cmp
enter
ja
std
out
inc
or
xlat
insl
push
lahf
daa
inc
or
mov
or
mov
test
pusha
bound
fildl
pushf
inc
ja
sub
stos
cmpsl
addl
repz
fcmovnb
pop
cmc
repz
mov
mov
test
mov
xchg
gs
sbb
hlt
es
xchg
movsb
mov
xchg
mov
cs
or
sahf
sub
movsl
inc
inc
lcall
lahf
outsl
adc
adc
lds
repnz
pop
mov
scas
movsl
dec
shrl
xor
xchg
ljmp
mov
lds
ljmp
dec
iret
iret
fldenv
inc
ds
add
fdivs
lahf
xor
xor
ret
pop
add
dec
loopne
hlt
out
mov
and
aaa
push
sbb
dec
cs
pusha
push
adc
stos
lret
not
movsl
ss
or
in
cmpsb
stos
pop
test
mov
in
pop
or
adc
fsubr
sub
lret
pop
rcrb
outsb
cmp
push
das
mov
push
sbb
mov
cs
loope
xor
sub
xchg
andb
jp
pop
mov
mov
mov
jne
data16
fldl
mov
adc
mov
shrb
xor
fucomi
daa
push
and
lds
repz
imul
jnp
insb
loope
ds
inc
pop
adc
xchg
shl
cwtl
sbb
cwtl
or
cmp
inc
sahf
fptan
lods
dec
clc
mov
loopne
jbe
mov
push
sub
pop
lea
mov
cltd
test
adc
leave
jne
lods
xchg
shrl
lret
xchg
pop
out
mov
cmp
pop
cmp
xchg
repz
sub
int
xchg
lods
or
lcall
push
jle
xchg
adc
push
add
dec
nop
jns
lret
scas
jmp
push
test
jns
xor
mov
mov
push
rolb
inc
mov
xchg
or
lret
mov
mov
add
pop
sub
out
mov
mov
dec
mov
insb
push
inc
dec
loopne
fucom
jns
xchg
jecxz
out
push
add
lea
inc
data16
shll
leave
and
dec
ljmp
mov
fcompl
push
jno
outsl
jbe
test
fucomip
or
sub
xchg
and
es
arpl
xchg
mov
gs
into
inc
inc
mov
in
xor
stc
inc
jno
inc
fildll
mov
testl
inc
and
xor
push
push
jae
push
or
jbe
mov
xorb
shrl
lret
daa
icebp
lahf
lock
into
xor
scas
inc
aad
pop
jb
and
mov
mov
cmp
dec
icebp
gs
lcall
sahf
repnz
cltd
shll
mov
pop
push
adc
dec
lods
or
or
sbb
aas
int
jmp
enter
pop
incl
call
pop
sahf
imul
push
jmp
sub
jne
repnz
rcll
mov
lahf
and
inc
mov
mov
mov
and
test
xchg
cmovne
push
push
dec
out
xchg
lods
mov
or
les
adc
push
add
out
loop
scas
mov
bound
fldt
mov
mov
arpl
stc
jno
popf
pop
lcall
jle
push
push
xor
loope
xchg
jae
pop
mov
in
aam
xor
mov
pop
pop
aad
xchg
add
mov
mov
xor
mov
lret
std
sahf
mov
inc
dec
push
xchg
test
shl
add
sub
cmc
xor
cld
dec
jl
out
lahf
pop
rcrb
mov
mov
or
rcr
cmc
pop
lahf
mov
scas
loop
out
mov
pop
jp
movsb
scas
add
shlb
insb
lahf
shll
fdivl
stos
adc
repnz
and
jbe
fwait
leave
cld
sbb
push
xor
xchg
cwtl
mov
lret
mov
popa
fs
mov
push
push
pop
out
push
in
jge
loope
int
inc
or
cmp
adc
test
inc
or
mov
xchg
out
inc
mov
inc
test
mov
int3
mov
push
movsl
jl
imul
pop
adc
cwtd
flds
jge
sbb
add
push
test
pushf
stos
imul
sbb
mov
mov
and
leave
or
dec
jecxz
aas
push
inc
aas
js
xor
mov
mov
test
aaa
xchg
fwait
movsb
push
or
les
fwait
adc
loop
adc
cli
mov
loopne
mov
hlt
stos
lods
cmp
mov
cmp
cmp
loope
nop
xchg
ljmp
pop
push
sarb
sbb
adc
addl
call
push
add
je
dec
xor
jns
push
andb
pop
add
jg
stos
call
mov
mov
cmc
int
jnp
inc
ror
mov
arpl
xor
pop
or
mov
pop
mov
outsl
sub
jnp
jo
mov
shlb
xchg
test
pop
pop
inc
adc
xchg
add
lods
mov
lods
jecxz
cltd
pusha
pop
fistpll
ss
jne
inc
fisttpll
mov
and
xchg
movsl
test
cmp
cli
outsl
scas
adc
xor
scas
jp
pop
mov
mov
ret
outsb
out
lock
mov
popa
xor
and
dec
mov
push
loop
jne
in
enter
mov
fdivl
ficoms
push
lods
inc
and
sbb
or
pop
mov
sub
mov
lods
mov
push
pop
mov
xor
loopne
ret
or
outsl
daa
push
sbb
cmc
cmpsl
adc
xchg
aaa
adc
leave
sub
mov
insl
loop
fwait
enter
arpl
sahf
cwtl
std
lock
cmp
push
enter
mov
cmp
jae
stos
jo
shlb
sti
aaa
pop
bound
stos
xchg
andl
sbb
xchg
or
jl
dec
leave
hlt
xchg
imul
mov
shlb
and
ret
mov
adc
pop
adc
sbb
xchg
lds
mov
jmp
and
lcall
inc
in
or
add
not
rorb
inc
arpl
cmp
xchg
daa
jmp
xor
push
pop
enter
shl
test
add
or
out
add
or
adc
mov
addl
xchg
pop
mov
or
mov
enter
mov
js
bswap
inc
inc
clc
inc
into
addr16
ret
test
es
in
sub
ret
dec
sub
mov
stos
cs
inc
call
movsl
add
jo
cmc
jle
cmp
or
jo
mov
pop
jl
pop
jb
dec
sbb
sbb
cmp
outsl
out
daa
adc
inc
inc
adc
insb
or
je
xlat
mov
ret
scas
sti
sub
xchg
fisubs
adc
inc
repnz
mov
icebp
mov
mov
stc
push
add
ret
icebp
js
xor
sbb
push
xchg
adc
lahf
jns
outsb
add
testl
xchg
bound
lret
mov
add
in
jle
push
mov
push
xchg
hlt
sub
jp
pop
mov
jno
or
imul
inc
mov
adc
shlb
xlat
sub
ret
inc
fcompl
xchg
adc
mov
mov
cli
notl
or
xchg
jbe
out
inc
and
pop
sub
xchg
xor
pmuludq
jp
pop
jbe
xor
mov
cmpsb
loop
ljmp
rol
xor
shlb
nop
repz
or
rcll
sbb
or
xor
test
fisubs
jg
jp
mov
sti
cld
sbb
pop
mov
imul
fbld
out
cmp
push
fistpl
inc
sbb
mov
fbstp
fstps
imul
andb
leave
push
pusha
mov
fisubrl
repz
aaa
mov
push
cmp
ljmp
and
aaa
sbb
mov
jno
xchg
push
mov
fidivs
sbb
sbb
or
pushf
sbb
mov
jp
iret
mov
sbb
jp
dec
or
xor
int3
mov
push
orl
xor
jl
stc
mov
sub
add
enter
xor
arpl
mov
aas
mov
lret
ss
shl
fmuls
pop
pop
push
adc
addl
aas
pop
cwtl
add
push
into
cltd
into
fsts
mov
fimuls
je
mov
adc
fstl
dec
jg
dec
pusha
jb
addl
xchg
stos
mov
out
fstps
jns
push
push
cmp
or
jnp
lcall
stos
mov
mov
ds
sub
repnz
test
xor
mov
push
stos
jae
and
loopne
add
lret
subb
push
in
jp
cli
pusha
push
jne
lret
lret
add
add
xor
movsl
shrb
ss
sub
adc
insb
fldenv
pop
mov
sbb
mov
mov
jbe
fistpll
inc
mov
push
dec
loope
js
push
fs
jle
push
add
insb
je
adc
add
push
mov
dec
mov
scas
adc
jecxz
pop
lea
sbbl
cmpsl
mov
cs
xchg
lods
jbe
lds
jns
cmp
in
sahf
xchg
sub
shrb
daa
outsl
imul
ret
xchg
ljmp
inc
push
nop
sbb
mov
pop
repz
adc
das
popa
in
movb
and
mov
cltd
sub
movsl
pop
test
lock
lcall
aas
mov
out
ljmp
fldl
mov
scas
movsl
movsb
dec
into
stos
dec
cmp
ljmp
mov
popf
push
ret
dec
and
sbb
add
or
jg
push
xor
xchg
fbld
sbb
ret
stc
aam
push
mov
or
lcall
dec
push
in
sbb
negb
xchg
not
add
sub
jp
or
in
stos
cmc
not
fdiv
and
enter
adc
cmp
jb
sarl
test
cmp
lea
add
push
decl
xchg
or
cli
and
sbb
mov
jmp
lea
insb
push
xchg
push
jge
lods
or
push
scas
cmp
call
jg
ret
fcoms
stc
ret
mov
or
xchg
cmc
repz
popa
or
mov
cld
in
push
xchg
pop
test
or
sahf
xchg
jle
mov
stos
inc
hlt
addr16
mov
cltd
imul
es
sub
lea
test
test
push
cmp
pop
enter
inc
cltd
dec
cmc
scas
xchg
dec
iret
push
cmp
pop
fisubs
scas
mov
xchg
xchg
outsl
cld
in
and
adc
sbb
lcall
orl
test
enter
adc
popa
mov
mov
stos
push
mov
in
ja
dec
mov
sbb
mov
mov
lods
cmp
sbb
mov
xchg
xchg
mov
ds
aam
jns
jno
cmp
fsubrl
cmp
stos
out
adc
cmp
or
sbb
push
sbb
and
fcoms
xor
divl
scas
pop
sbb
sub
xor
js
jle
xchg
mov
scas
add
mov
or
aas
sub
xorb
push
subl
shlb
stc
jmp
push
sbb
mov
xchg
and
push
mov
adc
repz
pop
stos
aaa
les
mov
add
dec
mov
test
aad
add
cmpsb
fadds
pop
test
stos
enter
mov
sbb
mov
xchg
cmp
sbb
pop
std
push
cmp
in
std
jno
or
lret
fldcw
dec
je
cwtl
mov
jmp
pop
dec
push
rclb
push
lret
xchg
xlat
inc
fnstcw
mov
stc
adcl
add
dec
loopne
out
xor
notb
test
add
push
movswl
adc
and
mov
mov
adc
sahf
xor
pop
pop
mov
jns
pop
xchg
dec
inc
ja
lret
add
jbe
xchg
mov
addr16
out
jno
or
mov
call
dec
jl
push
jne
push
mov
out
into
mov
sbb
imul
ret
loope
or
aad
cltd
call
test
cmp
out
inc
mov
sub
sti
mov
sub
inc
punpckhdq
mov
out
scas
lock
js
ljmp
xchg
adc
xlat
inc
push
inc
push
mov
pop
mov
mov
test
jmp
pop
adc
push
jp
iret
xor
cmpl
popf
testl
xchg
cli
push
sahf
mov
mov
mov
jecxz
in
dec
rorl
cltd
cltd
jecxz
pop
out
mov
daa
lret
cli
bound
pop
lret
pop
dec
xchg
dec
out
and
lods
enter
adc
adc
and
push
icebp
mov
leave
test
adc
fcom
in
xor
mov
in
popa
xchg
push
inc
cmp
lcall
andl
mov
sbb
xchg
sub
pop
sub
sbb
in
sahf
inc
sbb
into
cmp
das
sbbb
cmc
shlb
push
mov
data16
inc
mov
xchg
pop
inc
int
lds
or
push
mov
aam
or
out
out
inc
push
stos
ret
jp
insl
inc
sbb
mov
mov
and
mov
xor
stos
movsl
or
aad
mov
mov
xchg
leave
and
sbbl
and
pop
add
mov
xchg
xchg
jl
pop
and
inc
int
ljmp
pop
cmp
push
rcrb
aam
ja
cltd
jmp
push
sbb
ficoms
orb
add
lret
cmp
add
lds
scas
cli
int
insl
clc
call
mov
dec
mov
mov
sahf
jb
inc
test
mov
cmpsb
cmp
xorb
arpl
sub
gs
cli
iret
mov
mov
rcrl
outsl
fldt
mov
or
push
loope
and
mov
push
adc
cld
mov
aam
stos
xor
lcall
xchg
out
lret
jecxz
ss
in
and
in
fstp
test
int
imul
addb
test
mov
inc
xchg
push
dec
push
ret
sbb
loope
add
rcrb
in
mov
jb
cld
cmpsb
subl
pop
ret
sahf
les
lods
sbb
xchg
imul
lret
addr16
movl
sahf
push
in
xchg
cmpsb
mov
jp
jbe
inc
pextrw
and
sub
inc
mov
aam
add
sbb
sbb
and
mov
ficoml
mov
mov
pop
movsb
test
jns
arpl
push
push
mov
lock
int3
cmpb
loope
adc
mov
pop
pop
imul
mov
dec
mov
mov
xchg
mov
std
aas
lret
mov
jbe
xchg
add
jle
pop
inc
jmp
ds
mov
push
scas
out
out
jmp
sub
jge
insl
mov
cmp
bound
je
insb
cmc
aad
sbb
sub
fxch
fsqrt
std
or
mov
mov
mov
pop
xchg
jge
jno
ljmp
mov
jge
call
sub
dec
inc
adc
scas
or
stc
inc
les
aam
loope
mov
in
aam
xchg
pop
test
lcall
int
mov
dec
inc
shrb
fsubp
imul
push
cmpsl
mov
inc
lahf
jecxz
mov
mov
dec
jp
sub
outsl
sti
sub
mov
push
fidivrl
test
sub
dec
ffreep
pop
daa
cmp
xchg
adc
cmp
ficoms
push
push
in
outsl
movsb
jecxz
iret
lea
imul
xor
out
dec
mov
leave
sbb
dec
adc
xor
inc
das
mov
fs
push
in
push
mov
lret
mov
pop
fst
aaa
push
inc
std
push
mov
pop
cmp
lock
data16
inc
adc
mov
mov
sarb
mov
mov
imul
gs
mov
int3
icebp
push
repz
int
pop
clc
test
pop
pop
jge
push
pop
mov
mov
mov
mov
aas
movsl
fs
push
popf
std
dec
cmp
ret
lods
xchg
pop
leave
imul
jg
pop
pop
mov
cmpsl
jmp
xor
rcrl
sbb
cmp
js
imul
das
andl
mov
or
lds
inc
les
add
arpl
aam
mov
addr16
aaa
stos
sub
mov
jp
cs
add
cmp
mov
roll
int3
cwtl
adc
std
gs
int3
push
mov
adc
sub
inc
push
jne
jno
shl
pop
fcmovnbe
push
pop
ljmp
mov
mov
nop
pop
jo
test
hlt
jb
call
xchg
add
pop
aaa
push
insl
popf
cmp
test
xor
int3
pop
enter
xor
push
pop
movl
and
jp
dec
stos
into
adc
dec
mov
xor
sbb
ja
call
push
bound
cmp
sub
inc
adc
jg
cmp
dec
mov
or
sub
add
in
sahf
rcrl
inc
pop
and
mov
pusha
add
xor
aam
sti
fildl
cld
lret
sbb
mov
sarl
shll
push
push
pop
sarl
js
pop
jmp
sbb
or
mov
adc
sub
mov
or
mov
ja
jb
mov
mov
adc
pop
out
jecxz
mov
or
stc
and
push
aas
in
push
repz
jne
shrl
mov
add
adc
pop
imul
lahf
mov
into
test
data16
test
ljmp
test
mov
inc
cmp
fmuls
pop
xor
cltd
xchg
xchg
jae
xor
cltd
stos
mov
push
or
scas
pop
movsb
movsb
dec
cmpsb
jb
ds
dec
push
dec
sub
movsb
repnz
int3
push
scas
roll
adc
pop
push
loopne
orb
lods
outsl
xor
inc
and
xor
jo
jns
mov
push
push
pop
pop
stos
leave
jmp
sbb
movsb
loope
inc
in
inc
cld
mov
das
xor
push
pop
and
pop
mov
in
mov
sub
jb
stos
loope,pt
xor
inc
fwait
pushf
pop
ret
ja
fnsave
cmp
pop
xor
pushf
mov
xchg
mov
mov
pusha
arpl
rcrl
mov
xor
enter
and
pop
outsb
idivl
scas
xor
push
xorb
ljmp
aas
cs
jo
push
outsl
cmc
repnz
xorb
jmp
int
pop
daa
js
mov
mov
int3
mov
arpl
push
and
pop
ss
loopne
cli
xchg
cld
aam
push
fists
popa
and
sbbb
fincstp
sarl
sub
rcll
in
adc
data16
popf
jge
imul
mov
cmpsb
stos
pushf
dec
mov
fidivl
jp
ss
fcoml
not
pop
or
sub
xor
lods
pushf
xor
dec
roll
dec
cmp
mov
aas
clc
lcall
xlat
lock
inc
and
push
popf
xchg
jge
mov
sbb
jle
mov
xor
pop
adc
out
add
movsl
sub
mov
out
xchg
in
cmp
mov
xlat
or
ds
cld
add
aad
mov
mov
in
add
jp
mov
push
sbb
xchg
mov
into
fimuls
mov
in
xlat
rcll
dec
ja
imul
cmpsb
mov
lods
inc
lock
aaa
movsl
xchg
xor
xor
lcall
add
pop
ds
daa
sahf
xchg
data16
push
in
std
daa
mov
lock
mov
loope
sub
or
aam
jp
das
mov
popa
mov
outsb
inc
adc
test
mov
inc
dec
and
lcall
in
mov
test
dec
push
test
stos
or
mov
cs
sub
ficoms
mov
test
mov
add
pop
mov
dec
shr
imul
or
or
shr
or
mov
outsl
cmp
subl
loop
dec
iret
leave
in
push
cwtl
in
pop
jb
jl
xor
and
mov
jmp
ljmp
or
or
ds
push
int
in
mov
fbstp
pushf
xor
mov
leave
cmpsb
icebp
sbb
mov
and
aad
xchg
sar
xchg
repz
inc
ja
pop
push
les
lock
out
int
push
jbe
mov
push
nop
pop
test
movsb
sub
nop
in
jl
mov
cmp
pop
cli
inc
dec
pusha
dec
pop
es
xchg
jl
lods
notl
imul
mov
nop
and
dec
cmp
out
mov
and
mov
lahf
enter
mov
mov
cmp
cmp
std
mov
sbb
jge
or
sbb
add
movsl
jecxz
pop
orl
mov
stos
adc
mov
mov
aam
out
js
push
push
imul
outsb
dec
ja
add
ret
insl
mov
sbb
fsubp
dec
inc
pusha
mov
pop
stos
or
cmpsl
jmp
sub
sarl
out
fdiv
fmulp
and
mov
dec
or
xlat
or
jl
mov
in
rcl
iret
inc
pop
daa
shrl
mov
sbb
mov
adc
dec
add
sarb
pop
ds
pop
sbb
out
sbb
jl
cltd
inc
jne
sub
imulb
cmp
jp
push
cwtl
push
add
inc
repz
bound
pop
leave
or
cmp
bound
addr16
call
stos
insl
lods
ds
cwtl
mov
daa
push
sbb
sarb
fs
xchg
fs
add
xor
mov
and
xchg
std
inc
ss
sub
pop
mov
cmp
mov
call
call
mov
jp
call
mov
test
imull
pop
pop
add
mov
push
aam
jp
mov
adc
mov
jle
dec
mov
mov
and
flds
xor
insb
jmp
pop
mov
repnz
repz
imul
jl
ret
hlt
jge
sar
stc
mov
fnstenv
mov
or
and
cmpb
fdivrs
sti
mov
sti
mov
mov
scas
out
stos
cwtl
test
pop
rolb
cwtl
pop
push
mov
jae
mov
rcrb
cs
xchg
icebp
cwtl
push
pop
mov
mov
push
leave
jns
mov
mov
stos
cmp
mov
sbb
cmpl
inc
adc
pop
ljmp
mov
and
out
addr16
push
dec
mov
mov
pop
dec
jo
mov
mov
dec
ja
sub
outsl
dec
jnp
fcoms
popa
mov
and
ds
xchg
adc
xor
sbb
pop
fmulp
xchg
cwtl
and
inc
pop
lea
adc
jg
popa
dec
xchg
into
pop
int3
ret
pop
cmp
js
adc
inc
cmpsl
pop
aam
arpl
inc
mov
sbb
add
addr16
out
ss
pop
lret
aas
sub
inc
and
dec
lcall
inc
ret
sub
ficoms
push
and
out
mov
mov
mov
arpl
xor
sahf
pop
dec
dec
xchg
mull
mov
mov
or
or
fs
lods
lahf
sahf
pop
inc
sbbb
lret
movsb
push
jnp
jp
mov
xchg
jbe
jmp
sbb
push
pusha
pop
push
push
arpl
inc
ret
mov
sbb
push
and
imul
pop
push
leave
sub
push
cmp
out
daa
ja
mov
dec
dec
std
jmp
or
sbbl
xor
mov
or
and
repz
jbe
pusha
pushl
xchg
testl
mov
out
dec
pop
enter
out
push
sub
aas
clc
adc
stos
lcall
mov
add
jmp
fimull
popf
inc
xor
mov
inc
inc
pop
xchg
mov
jg
jns
xchg
xchg
xchg
fs
sub
icebp
cwtl
jno
andb
outsl
mov
in
mov
inc
addr16
add
testb
pushf
aas
mov
dec
loop
jne
dec
xchg
filds
fcmovu
inc
mov
mov
pop
pusha
inc
xor
mov
cmp
xchg
addr16
repnz
mov
jl
cmp
cmp
shrl
push
imul
sub
xchg
mov
sahf
add
cs
push
aas
xlat
imul
loope
test
in
xor
popf
les
out
adcl
jmp
cltd
pop
dec
inc
or
and
push
and
push
cwtl
into
sub
je
jl
sub
xor
or
pushf
aad
xor
inc
cmpsb
stc
ljmp
xlat
ror
mov
xor
lods
sub
std
mov
repz
jnp
pop
xor
sub
dec
in
lret
dec
addb
call
lahf
xor
sub
xchg
adc
mov
orb
mov
insl
dec
imul
leave
xchg
cmp
je
ds
mov
adc
xchg
pop
rol
push
and
cmp
dec
das
adc
push
ds
out
data16
push
mov
push
inc
push
dec
loope
push
push
sub
insb
xor
xchg
xchg
and
pop
cs
add
nop
int3
sbb
jnp
inc
adc
sub
mov
push
and
cmpsb
notl
mov
scas
push
shlb
std
push
mov
push
ss
fstpt
into
adc
and
push
adc
je
aaa
ss
push
aam
sbb
lds
call
xor
push
mov
out
push
mov
nop
push
xor
jae
ljmp
add
push
shrb
popa
insl
divb
lock
ljmp
pop
or
call
int3
or
loopne
and
lahf
add
jo
cld
lds
es
shlb
sarb
popf
cmp
mov
rorb
mov
and
adc
movb
outsl
xor
cli
fstpl
ficoml
or
test
mov
inc
push
cli
mov
mov
iret
xlat
loopne
fadds
insl
mov
cmp
push
inc
inc
jle
lret
cmp
mov
fstpl
push
inc
mov
inc
test
or
out
dec
adc
jl
mov
cld
xor
aad
or
mov
ret
clc
dec
push
call
sbb
add
fbld
lea
add
ljmp
popa
imul
mov
jb
add
or
das
dec
setb
ljmp
add
into
ret
adc
adc
cmp
js
movups
leave
sub
lods
mov
mov
enter
jno
rcrb
lahf
sub
mov
loop
out
out
mov
loopne
ret
xor
adc
fmull
cs
or
lods
ljmp
cmp
pop
pop
and
sbb
cmp
adc
stos
push
sub
out
jno
mov
push
sbb
outsb
xchg
or
mov
xor
add
stc
shr
lcall
pop
rol
add
xchg
dec
mov
inc
iret
mov
mov
sti
and
int3
ret
pop
push
nop
push
fmull
cwtl
mov
mov
hlt
ret
mov
adc
mov
lods
pop
es
popf
and
das
hlt
loopne
out
outsb
jbe
xchg
mov
scas
jb
sub
pop
mov
lock
inc
add
out
sbbb
cmp
sub
fcos
jns
mov
out
xlat
lea
jecxz
jbe
jg
lds
les
pop
push
mov
xlat
and
adc
popa
subl
push
mov
push
jbe
rorb
rorl
sub
into
ja
xor
dec
push
js
xor
imul
jno
cmp
push
xchg
cmp
and
mov
repnz
lods
pop
cltd
ficoml
pusha
jl
jae
push
ja
call
jecxz
aaa
cmp
dec
lock
sbb
add
adcl
adc
je
adc
pop
and
sbb
jne
mov
mov
scas
pop
adc
sbb
push
pop
adc
sbb
cmp
inc
mov
inc
movsb
rcll
add
repz
or
push
std
outsl
or
push
xor
add
mov
mov
aad
add
lock
out
xor
add
jp
enter
add
orl
adc
cmp
scas
ficoml
lods
sub
mov
loopne
pop
mov
sbb
imul
cmp
push
dec
pop
aaa
xchg
adc
jle
ljmp
pop
mov
divb
dec
jl
arpl
pop
mov
cmp
imul
adc
mov
push
sahf
mov
push
jne
xchg
cld
pop
fisttpl
shrl
push
or
pop
jnp
push
adc
mov
cmp
dec
push
lds
fsub
sbb
push
out
dec
xchg
das
xchg
pop
and
jne
jns
aam
insl
test
xor
push
fs
int3
mov
adc
dec
rol
or
inc
aad
sub
movsb
pop
orl
mull
jne
stos
scas
lret
scas
xchg
pop
cmpsl
in
pop
mov
jns
mov
jb
pusha
mov
cmp
dec
sbbl
cwtl
sub
lods
add
mov
lods
mov
icebp
aam
pop
out
cs
cmp
cltd
sub
repz
ds
aam
mov
aad
out
xor
repz
dec
inc
push
aad
add
jo
rclb
cmp
outsl
fisubl
xor
push
cmpsl
pop
jne
popf
jle
shll
push
or
mov
sub
push
push
lahf
push
pop
mov
cld
dec
out
lret
add
shlb
repz
fistps
jo
dec
pop
sahf
sub
fsub
mov
rclb
hlt
sbbl
out
xchg
mov
test
aad
test
cmpsl
mov
les
inc
mov
fcomip
lods
mov
test
hlt
mov
jmp
fsubl
loopne
push
and
rcl
push
daa
cwtl
xchg
icebp
pop
outsl
add
in
xchg
and
rcrl
je
xchg
jecxz
js,pt
push
mov
into
and
push
push
mov
ret
or
js
pop
adc
in
mov
mov
sbb
scas
addl
xor
sti
dec
xchg
or
dec
fisubl
sub
shlb
dec
cmp
sbb
mov
sbb
sbb
xchg
add
pop
pusha
into
pop
inc
lock
cs
icebp
push
rcl
push
insb
add
jno
mov
scas
sub
pop
cmp
movsl
loop
push
inc
cmp
movsl
adc
push
sti
pop
iret
sbb
add
je
and
jl
ret
push
fnsave
repnz
pushf
and
sub
jl
jmp
add
push
adc
xchg
push
out
pop
mov
push
outsl
pusha
std
xor
adc
mov
dec
pop
mov
adc
jmp
dec
cmpl
fwait
mov
aad
jne
mov
test
out
xchg
dec
test
xchg
adc
test
mov
imul
xchg
add
pop
rcll
sub
gs
or
jne
ret
mov
sbb
test
sbb
push
mov
jecxz
dec
or
shrl
cmp
jle
fdivs
lock
movsl
jg
pop
sbb
jmp
shlb
xor
popa
mov
xor
cltd
jecxz
les
aad
je
scas
jbe
dec
int3
mov
or
pop
stos
mov
sbb
repnz
mov
mov
iret
cmp
push
shrl
mov
les
inc
pop
addr16
push
push
loop
pop
lods
divl
push
stos
add
scas
xchg
dec
jae
lret
cmp
sub
rcrb
arpl
jb
adc
adc
iret
add
push
dec
push
pusha
push
hlt
xlat
sub
test
add
stos
add
arpl
cmp
adc
or
inc
adc
pop
add
mov
fnop
aad
outsb
jmp
das
mov
addr16
popf
das
xchg
sub
push
sbb
pop
popl
or
je
rcrl
sbb
cli
cmpsl
and
jge
sub
pop
insl
insb
std
enter
mov
adc
inc
hlt
xor
cs
mov
push
ljmp
xor
pop
mov
xchg
push
jg
pop
pop
in
aaa
lret
aad
in
outsb
push
add
lods
sbb
sti
rcll
bswap
xchg
mov
cld
cltd
add
cwtl
lods
ss
mov
stc
pop
mov
inc
xchg
push
push
insl
cli
inc
push
sbb
rcr
out
and
fnstcw
aas
add
lahf
sub
into
add
lret
shlb
mov
add
aam
fs
jmp
mov
aam
cmpsl
bound
push
cmpsb
sbb
std
push
out
out
mov
pop
in
mov
mov
cwtl
test
gs
and
test
inc
and
int
dec
gs
ljmp
push
sbb
add
inc
cld
or
clc
dec
dec
std
cli
push
jl
mov
into
pop
adc
mov
push
mov
pop
xchg
or
dec
inc
dec
xor
daa
xchg
pop
dec
pop
fwait
sbbl
mov
xchg
jecxz
jns
jnp
xchg
push
popaw
aam
scas
loop
fwait
add
xor
decl
hlt
lock
ss
mov
ljmp
das
adc
and
loope
pop
inc
test
aam
rorl
inc
sub
stos
es
je
in
nop
aas
sbb
int
mov
in
xor
sbb
test
fnstsw
mul
push
rolb
popf
xlat
sbb
sub
adc
nop
pop
cmc
arpl
xor
mov
mov
sar
aas
cmc
or
leave
lock
in
fadd
xor
inc
movsl
mov
out
lcall
pop
sbb
xor
add
sub
call
inc
sbb
cld
add
lea
nop
xor
sbb
fnstcw
aaa
and
jae
pop
sub
adc
out
in
dec
jns
sub
sar
inc
rcl
or
mov
insb
mov
leave
stos
icebp
fs
xchg
mov
inc
pusha
and
jl
popa
cmc
test
or
ficompl
insl
and
pop
adc
or
insb
push
lret
push
sub
dec
xchg
insb
push
mov
pop
add
test
mov
sub
push
cmp
and
jl
mov
or
addr16
mov
mov
mov
mov
jl
movsl
dec
mov
rorb
jne
pusha
pop
cmp
test
pop
stos
movsl
loopne
sbb
pop
sbb
inc
jno
hlt
xor
sub
mov
jae
arpl
cwtl
icebp
les
or
lret
inc
fldenv
cmpsl
imul
sbb
das
lds
jmp
mov
hlt
loop
sbb
mov
adc
daa
xor
js
imul
insl
les
inc
mov
test
mov
cwtl
xchg
fcoml
call
sahf
add
in
xor
and
mov
test
dec
pop
ds
shll
jo
sbb
lock
mov
add
int3
jbe
popa
aad
push
mov
jae
pop
xchg
dec
sub
xlat
push
cmp
mov
out
jb
jb
inc
fbstp
add
fisttpll
dec
rorb
sbb
jp
push
add
adcl
repnz
mov
jae
ljmp
xor
jae
mov
push
or
mov
stc
std
cmp
ljmp
push
ror
dec
add
ja
adcl
inc
nop
jecxz
mov
inc
ljmp
ret
or
jnp
repnz
sahf
aaa
jge
dec
ja
jns
out
lods
pop
inc
mov
aas
and
mov
dec
cmp
fs
mov
cmpsb
ja
sbb
pop
cmp
ret
lds
fistpll
fistpl
int
push
leave
push
cltd
into
mov
xchg
movsb
push
icebp
inc
and
xor
sarb
xor
shl
test
jns
cltd
xchg
inc
test
fdivrs
cmpb
test
mov
and
outsb
call
in
jle
rorb
or
out
inc
mov
push
cmpl
adc
mov
sub
adc
out
sub
pop
pop
dec
pop
daa
cmp
cmp
ljmp
mov
sub
mov
mov
pop
ret
mov
push
pop
gs
push
sbbb
es
inc
xor
cmpsb
adc
sbb
mov
xchg
jl
xor
fs
jecxz
stos
daa
imul
dec
push
data16
mov
mov
repnz
daa
mov
cmp
pop
mov
dec
daa
or
in
repnz
and
jl
out
fdivr
das
les
out
lcall
adc
push
in
stos
push
jg
add
aam
mov
jb
std
ja
push
jnp
pushf
xor
insl
sbb
lock
mov
xor
mov
mov
mov
mov
cmp
les
pop
pop
mov
push
and
pop
jg
add
mov
inc
ret
repz
das
sub
negl
add
add
out
call
test
insb
dec
mov
je
imul
loop
pop
lret
xchg
mov
xor
imul
xor
pop
mov
ret
push
xchg
int3
jne
pop
sti
cmp
in
adc
lcall
sarl
test
mov
ret
jne
dec
test
daa
insb
cmp
xchg
aad
pop
and
stc
lods
jg
push
mov
mov
movsb
mov
mov
jnp
push
xchg
push
xorb
sbb
lock
cltd
imul
mov
jne
and
lcall
jge
sub
jnp
pop
fisubrs
add
shll
dec
cmp
popa
repz
adc
out
fwait
int
inc
and
jp,pn
and
mov
xchg
inc
dec
fldcw
dec
jbe
mov
push
fs
jo
int3
loop
mov
ja
push
les
mov
int3
or
in
aad
push
rcrl
popf
cmp
hlt
lahf
lea
stos
in
mov
mov
lds
out
mov
sbbb
inc
fildl
jg
in
std
pop
dec
jmp
stos
stos
jnp
mov
jle
int3
sarb
mov
pop
push
jmp
cld
int
xchg
mov
push
or
jne
js
push
into
out
pop
dec
rolb
push
imul
stos
test
inc
xor
push
aad
xor
arpl
outsb
loopne
pop
and
hlt
mov
mov
sbb
sti
out
jno
and
cwtl
and
fsubrs
jo
out
mov
pushf
cmp
pusha
icebp
aad
xchg
mov
mov
dec
mov
inc
mov
mov
cld
outsb
nop
sbb
adc
jbe
and
in
jb
in
mov
mov
xchg
inc
cmpsb
cwtl
push
mov
cmp
bound
push
loope
andl
repnz
cmpsb
pop
adc
stos
xchg
dec
rcr
pop
test
push
add
rorb
and
or
cmpsb
xor
in
cmp
mov
and
add
and
cmc
jecxz
jno
sbb
andb
lods
pop
pusha
pusha
imul
and
mov
fcom
jne
mov
lock
sbb
dec
ds
icebp
in
int
aas
and
mov
fstpl
testl
stc
and
gs
pusha
dec
pop
out
mov
and
aad
std
out
pop
jle
push
pop
xchg
xchg
mov
gs
pop
sbb
add
dec
pop
xchg
loope
mov
stos
and
popa
daa
ror
mov
stos
mov
xchg
in
adc
mov
xchg
mov
insl
dec
faddp
push
fnstsw
and
out
or
xor
dec
mov
add
xchg
mov
push
pop
loop
mov
xchg
test
shl
out
mov
push
lock
inc
cltd
jp
add
sbb
push
dec
mov
mov
jo
nop
sub
fsubp
idivl
jg
or
ds
mov
ret
jge
dec
call
mov
jmp
scas
sti
iret
ljmp
xchg
sbb
lahf
or
sub
lea
and
xchg
pop
loope
sbb
push
xor
jp
mov
les
scas
popa
aad
aam
stos
xor
sub
pusha
shll
jle
cs
pop
orb
sub
sub
add
sub
sub
lds
nop
dec
xor
inc
jno
adc
jns
and
sahf
jo
sub
sub
lahf
cmc
dec
adc
pop
popf
pop
in
das
lret
ljmp
dec
fwait
pop
xchg
xchg
in
roll
dec
sahf
xchg
cmpsb
mov
lret
add
adc
pop
xchg
lcall
mov
jl
xchg
lods
xchg
jns
test
sahf
xor
stos
leave
ja
inc
mov
pop
jp
cli
cwtl
inc
mov
and
int
sarb
loopne
sbb
fstl
fs
in
or
jbe
insl
pop
iret
rcrl
pop
bnd
adc
jae
lds
idivl
push
sti
ficompl
outsl
pop
in
jbe
push
or
pusha
mov
push
fdivrp
jb
mov
pop
outsb
cltd
test
or
mov
popf
cmp
mov
mov
pop
add
inc
imul
xchg
lcall
pop
xchg
in
rcr
xchg
out
sbb
icebp
mov
add
or
dec
pop
pop
xchg
gs
xchg
inc
leave
daa
popa
loopne
add
pushf
popf
inc
fistpll
aaa
lods
nop
pop
arpl
jp,pt
lods
cmp
std
iret
rcrb
mov
and
pushf
lods
imull
pop
pop
aas
stos
mov
pop
mov
or
adc
testl
sbb
mov
mov
lcall
push
jp
std
sbb
jae
and
lahf
shl
pop
and
mov
movsl
mov
inc
mov
xor
lods
xor
pop
hlt
imul
xor
xor
test
mov
sbb
xchg
xorb
aam
test
aas
push
cs
test
sub
dec
push
nop
mov
es
cmp
mov
dec
dec
lahf
lods
out
xchg
cwtl
push
repz
jns
out
pop
fidivrl
bound
shll
push
test
xchg
or
dec
mov
jg
cmc
outsb
cmp
movsl
scas
fldl
xchg
mov
rcrb
mov
out
push
repz
stc
stc
test
xchg
xchg
fs
cmp
out
lahf
lcall
dec
lcall
icebp
shrb
and
sahf
xchg
outsl
push
daa
cmc
stos
dec
inc
iret
fidivrl
les
jge
int
push
or
pop
and
ret
dec
mov
shll
mov
std
xchg
sbb
call
aad
pop
push
push
push
xor
push
jge
mov
cld
xchg
and
adc
add
cltd
nop
push
insb
mov
fidivrl
ja
and
cmp
mov
lock
jge
push
js
mov
adc
mov
out
call
and
sub
pushf
mov
ss
loopne
sub
inc
sub
push
xor
and
cmp
out
scas
dec
dec
mov
lcall
adc
call
or
jmp
mov
cmp
sahf
out
push
xor
adc
outsb
or
int
movsl
mov
pop
ficoms
lret
mov
cmp
mov
dec
fistl
sahf
loope
mov
or
mov
mov
and
push
pushf
int3
ljmp
mov
and
mov
lods
pop
adc
sbb
aad
pop
lcall
inc
and
xor
fsubl
dec
xchg
test
and
dec
jo
sbb
out
sub
push
sbb
xchg
mov
int3
adc
jge
add
jge
ret
push
bound
lea
jnp
iret
rcrl
pop
cltd
and
mov
daa
lret
imul
leave
shrl
jg
pop
add
shll
xor
addl
cmpsl
xchg
les
inc
push
mov
and
std
and
inc
inc
fidivrs
cmc
in
aaa
jl
pop
dec
add
xor
rolb
cwtl
sbb
stc
scas
push
inc
mov
scas
xor
stos
inc
sbb
mov
or
xchg
in
pop
adc
jbe
pop
setge
into
cmp
jp
mov
push
repnz
in
mov
pop
mov
push
cmpl
imul
adc
iret
xchg
cld
shrb
inc
jmp
add
add
int3
inc
in
sub
ffree
cs
std
ljmp
bound
ljmp
cmp
mov
jl
bound
imul
or
aam
cmp
fstps
cld
lcall
subb
add
xor
enter
callw
xchg
in
hlt
into
cmp
mov
adc
mov
push
rorl
mov
sbb
mov
sar
jge
mov
pop
dec
stos
in
leave
adc
xchg
test
cmp
shrl
adc
pop
jne
or
out
pop
mov
andl
fstps
ja
or
jo
adc
stos
inc
mov
mov
cli
mov
out
fidivrs
inc
sbb
fs
mov
sti
push
add
mov
sbb
std
mov
pop
mov
lret
int
ljmp
fnstenv
mov
cmp
aas
pop
dec
pop
mov
sbb
push
mov
fstpt
dec
mov
negl
jne
mov
dec
imul
lds
cmp
mov
push
mov
je
or
dec
inc
jns
jg
mov
nop
push
lods
xchg
mov
mov
inc
jne
sub
mov
cld
add
add
hlt
inc
aas
lahf
scas
xchg
jmp
into
mov
pop
mov
add
clc
mov
movsb
jle
xor
addb
sub
gs
inc
jb
mov
add
movsl
mov
lods
jnp
ror
aad
andl
xchg
xor
mov
addr16
aaa
adc
test
jge
and
loope
loopne
lods
xchg
pop
jecxz
imul
xor
fwait
xchg
lods
insb
mov
iret
bound
inc
mov
fldt
dec
xchg
pop
lret
shll
ret
add
out
push
jb
xor
aam
orl
scas
jp
fisubl
dec
inc
stc
adc
lods
hlt
loope
xor
aam
lcall
dec
pop
pop
mov
cmpsb
cltd
xor
movsb
cmpsb
push
mov
cmp
mov
inc
fs
mov
or
pop
inc
add
or
orb
and
dec
cmc
repz
inc
cmp
pushf
in
pop
fwait
add
jmp
fs
cmpsb
cmp
sbb
clc
lret
test
cmp
pushf
gs
data16
icebp
outsb
into
fists
repnz
lahf
scas
stos
add
mov
pop
daa
push
and
xchg
fstpl
or
add
loope
push
adc
int
cmp
cli
cmp
in
mov
push
adc
scas
ficoms
pop
lret
and
in
bound
xchg
push
ret
int3
cmp
jbe
movl
daa
and
sbb
xor
lock
cmpsl
sub
xlat
mov
adc
ficoml
pop
insb
jae
jmp
aad
adc
and
std
mov
divl
cmp
sub
xchg
add
add
stos
adc
daa
mov
lret
fsubrs
repnz
dec
pop
pop
jl
nop
and
dec
sbb
xor
add
lea
jnp
int
shrb
xchg
inc
or
stc
mov
and
adc
jae
sbb
js
aam
pop
outsb
lret
faddl
fmul
or
xchg
jb
and
adc
jmp
dec
xchg
mov
aas
mov
jge
or
or
lock
scas
add
hlt
jb
mov
adc
mov
push
fwait
add
pop
inc
cmp
mov
fidivrs
adc
dec
insl
lcall
jmp
lds
pop
popa
out
out
pop
addr16
aaa
loope
mov
dec
inc
out
dec
inc
add
adc
xor
cmp
lahf
pushf
mov
test
sbb
push
xlat
mov
stc
sub
or
push
and
ret
push
jl
rol
mov
ret
adc
xor
and
ret
sub
sbb
ss
adc
mov
pop
push
inc
call
mov
add
in
or
pop
cmp
jg
lret
jne
ss
hlt
fsts
and
push
xchg
xchg
inc
cmpl
mov
push
dec
test
cltd
inc
mov
mov
dec
fistpll
ret
inc
ret
sarb
xor
dec
adc
mov
jg
roll
pushf
mov
cwtl
lods
jno
fnstenv
sti
or
in
imul
jo
mov
pop
fisubrl
pop
lret
popa
push
mov
adc
push
cmp
cmpb
popa
mov
loopne
imulb
add
add
push
pop
pop
fcoml
push
or
das
dec
inc
add
xchg
fcoms
ret
xlat
arpl
dec
hlt
imul
jge
fsubrl
leave
pop
sti
push
enter
cmc
jbe
jl
in
cmp
nop
dec
sbb
ljmp
imul
out
testb
stc
sti
adcl
inc
ljmp
jle
pop
or
pop
jge,pt
push
in
outsb
or
aad
rorb
sti
xchg
add
cmp
sbb
out
scas
iret
jp
hlt
push
push
lds
add
std
xor
xor
push
mov
clc
daa
in
into
movsb
insl
ret
les
pushf
lods
mov
lods
pop
xor
xchg
jmp
stos
lods
mov
jl
pushf
arpl
dec
or
mov
pushf
ret
sub
and
test
and
xchg
fs
les
ret
addl
dec
sub
popa
sahf
out
xor
mov
stc
popl
cmp
xor
imul
es
push
xor
pop
mov
js
dec
pop
xchg
call
fdivrs
jle
jg
push
fs
jnp
aad
sbb
xor
iret
mov
xchg
xchg
pop
mov
bound
sub
adc
sbb
cmp
out
push
sbb
sub
adc
push
mov
bound
fwait
test
xlat
cld
pop
lods
out
pushf
and
fsubp
and
int
sbb
fldenv
shrb
sbb
mov
mov
dec
pop
ret
push
ds
push
int
or
aas
add
into
popa
ss
lret
mulb
jge
fadds
int3
sti
push
shll
int
pop
es
int3
or
dec
rcll
bound
lret
insl
sub
cli
int
filds
xchg
jle
cmpsb
mov
pop
jle
addl
addr16
lods
stc
mov
gs
aaa
lea
add
in
xchg
lret
out
fsubrs
mov
mov
jae
inc
iret
xor
mov
test
aaa
or
in
mov
xlat
mov
loope
xor
inc
test
fsubrs
loope
mov
cmp
aad
jns
imul
cltd
pop
in
adc
loope
mov
popf
decl
cmp
div
mul
inc
movsb
es
jmp
jecxz
psrld
xor
cmpsb
pop
cli
add
sub
fstpl
loopne
fimull
mov
test
cli
lret
add
cmp
push
aaa
and
and
sbb
pop
xchg
xchg
mov
imul
mov
fs
insb
adc
les
dec
push
lods
sbb
icebp
les
sub
mov
mov
je
or
stos
leave
xchg
cmp
loopne
sub
ljmp
scas
les
push
mov
popf
add
mov
or
stc
aad
pop
add
andb
jae
adc
mov
cmovnp
or
in
jns
or
and
push
xchg
jae
inc
mov
push
ret
jbe
pusha
shrl
sub
sub
dec
jge
das
lea
xor
ss
rcr
dec
loopne
pop
dec
xlat
push
test
iret
mov
inc
dec
add
clc
icebp
pushf
lea
fldcw
jge
adc
jmp
shll
repz
fadds
and
int3
clc
aad
ffreep
inc
mov
jb
xchg
dec
cmp
imul
lea
popf
push
mov
or
testl
inc
sbb
inc
and
test
jecxz
ja
outsl
loope
cltd
cmp
dec
decb
test
gs
jns
jbe
fcoml
test
push
movsb
ja
das
pop
iret
aad
cmp
xor
push
shrl
mov
and
in
mov
push
cmp
in
ss
ffree
int3
or
lcall
adc
push
pop
push
cwtl
jmp
add
out
cmp
sti
pop
adc
dec
aaa
repz
lcall
ja
sbb
cmp
xor
lock
aas
sarb
sub
psrlq
mov
xor
or
mov
in
dec
int
dec
jae
pop
test
mov
pop
test
pop
rolb
inc
fldt
or
in
xlat
or
adc
aad
out
push
mov
sbb
add
mov
xchg
call
xchg
xchg
mov
into
mov
cld
movb
imul
mov
pop
inc
jg
pop
fdivrl
scas
mov
add
out
test
push
or
into
or
fistpll
add
jmp
pop
adc
insl
inc
cltd
arpl
test
jne
clc
cs
aad
mov
sub
inc
out
jbe
cmpsl
es
jp
cli
mov
test
add
into
push
movsl
out
cld
add
mov
dec
pop
cli
add
and
rol
stos
js
fadds
or
sarl
hlt
sbb
mov
mov
test
jne
sub
xor
push
lods
ja
cwtl
out
cmp
insb
popf
lods
pop
inc
out
cmc
pop
loop
sti
inc
inc
out
fimull
mov
inc
daa
add
sahf
pushf
and
mov
jp
xchg
jno
bound
xchg
sub
scas
sbb
fs
mov
ret
leave
daa
sbb
ss
push
xchg
mov
sahf
xor
or
lret
repnz
in
dec
jns
inc
pop
ret
ret
ja
push
int
xchg
sbb
add
cmp
pop
xchg
jbe
cmpsl
push
jne
imul
mov
mov
shll
adc
sbb
xchg
sar
jg
add
pop
mov
mov
enter
lods
pusha
das
mov
push
rcll
inc
push
dec
stos
rcrb
push
jg
call
push
jbe
dec
fwait
loop
jmp
xchg
fcom
dec
cmp
movsb
adc
jge
int
imul
je
testl
scas
xchg
lret
out
pop
push
push
rolb
xchg
inc
sub
repz
repz
popa
and
dec
mov
movsl
out
jecxz
scas
out
xor
aas
xor
push
adc
in
rcll
cmp
xchg
dec
sub
sbb
rcr
sbb
adc
mov
pushf
mov
bound
mov
mov
stos
rcll
dec
in
fcomps
rcll
enter
cmpsw
mov
xor
call
iret
andb
das
mov
in
cld
cmpb
inc
out
hlt
out
ds
faddl
mov
dec
sub
sahf
inc
int3
pmaxub
cmpsb
iret
or
stos
fisttps
mov
push
test
movl
mov
jb
jbe
shll
mov
push
cmp
fnstenv
lret
jo
and
dec
stc
and
inc
push
imul
insb
push
gs
mov
mov
add
inc
xchg
sub
out
jp
movsb
xor
adc
shl
insl
dec
dec
xchg
int3
stc
push
shll
cltd
icebp
mov
jge
je
add
pop
dec
std
shlb
xor
fwait
dec
or
gs
pushf
bound
xlat
mov
sbb
fnsave
push
dec
mov
sub
fnstcw
popf
pop
xchg
lret
popa
xlat
shlb
nop
dec
in
push
dec
jl
jne
sub
js
test
iret
bound
mov
mov
sti
cmpsb
pop
sbb
test
icebp
jnp
jo
aad
rol
fstl
push
dec
test
mov
loope
dec
movsl
push
mov
push
into
xor
fadds
lahf
or
mov
push
xchg
push
loopne
mov
fwait
push
test
aaa
mov
inc
jecxz
xor
fldl
xadd
cld
pop
pop
loopne
out
adc
loop
rcl
js
mov
gs
shlb
movsb
jl
test
nop
mov
cmp
cmp
sbb
jb
or
adc
jbe
in
shrl
out
push
cltd
fidivrs
addl
adc
cmpsl
lret
mov
mov
dec
mov
pop
ret
aas
stos
xchg
icebp
cmpsb
das
adc
mov
and
pop
sahf
adc
mov
jns
movsb
repz
sti
in
mov
cmpsl
mov
int
ja
scas
imul
pop
ret
jg
add
xchg
mov
mov
jp
or
nop
repz
out
jnp
pusha
sbb
dec
mov
and
adc
out
sub
pop
jne
jb
cmpsl
imul
adc
pop
jbe
popa
test
test
push
inc
inc
loopne
shr
bound
aas
gs
mov
pop
je
adc
xor
inc
ret
cmp
cmp
mov
popf
lcall
sub
mov
or
out
mov
movsl
pop
loop
fisttps
mov
jle
icebp
inc
jle
sub
incl
in
test
jne
pop
ret
sub
and
adc
xchg
cmp
push
fistps
shrb
mov
jbe
cs
aam
sbb
or
push
add
rcll
adc
mov
fcomps
fimuls
jmp
arpl
fnstenv
mov
lahf
in
pushl
lcall
sub
and
rol
loop
fsubrs
cs
rcrb
push
inc
clc
aad
jle
mov
adc
subb
jbe
xchg
mov
pop
je
test
xor
in
sub
mov
push
xchg
push
push
arpl
push
call
lcall
movsl
pop
scas
cltd
sbb
jecxz
mov
out
lock
sahf
mov
mov
mov
push
jp
push
fwait
push
lods
dec
xchg
sbb
cmp
add
xchg
cmp
or
imul
inc
push
pushf
ja
lret
loop
sub
lret
mov
mov
push
xchg
icebp
sub
ret
fs
into
ror
popa
xchg
rorb
dec
pmaddwd
incl
loope
imul
fdivrl
aaa
xchg
cmp
inc
out
or
sub
mov
inc
xchg
xor
cmpsb
inc
ds
xchg
xlat
push
and
pop
das
pushf
ret
xorb
cwtl
mov
cmp
mov
push
jo
inc
mov
lds
in
mov
das
mov
xor
pop
rcrb
pop
add
js
push
out
pop
enter
dec
jbe
iret
in
mov
pop
in
jbe
mov
mov
and
cmp
scas
adc
stos
in
xor
push
adc
and
pop
mov
aad
leave
jae
out
push
test
adc
cmc
mov
lods
loop
xchg
repz
shll
bnd
mov
sar
lea
adc
mov
dec
ss
call
out
or
xor
mov
lods
gs
adc
lock
popf
xchg
xchg
pop
hlt
push
imul
lds
aad
or
cs
sti
mov
mov
add
je
bound
mov
daa
cmp
pop
mov
mov
dec
pop
xchg
cmc
and
lret
or
push
pop
and
out
loope
loope
arpl
sbb
xlat
or
aas
imul
inc
les
rorl
mov
repz
xlat
push
mov
pop
or
ds
jnp
push
es
fwait
es
jle
mov
ds
adc
push
xor
mov
shrl
cmpl
fimuls
out
dec
dec
pop
adc
cmpsl
aad
mov
jmp
cmp
test
adc
pop
cs
dec
xor
ja
jo
js
das
xlat
mov
mov
add
adc
fsubrs
es
sbb
mov
fmull
sub
xchg
aam
lret
rcll
cmp
and
fcmovbe
into
pop
push
jbe
jns
sub
add
jmp
loopne
fs
or
test
or
jno
sti
pushf
inc
xor
adc
inc
inc
les
add
pop
push
aad
fildll
sub
cltd
clc
add
cs
add
ds
in
in
or
push
add
and
pop
add
push
jno
rorb
xor
popf
push
jns
mov
int
pop
fxtract
iret
in
xor
push
xchg
orb
cld
pop
mov
js
ret
inc
cmpsb
bound
gs
ljmp
add
js
jno
or
dec
push
int
fcomi
aaa
subb
mov
sbb
push
je
mov
inc
sbb
dec
aam
loop
mov
fisubl
sbb
stos
psubusw
xchg
loop
add
inc
xchg
in
xchg
fwait
adc
icebp
notb
enter
pop
push
mov
nop
jg
or
aaa
xchg
inc
ret
inc
pop
pop
nop
jg
cmc
dec
xor
mov
mov
and
cld
push
jg
lcall
fisubl
int
sbb
es
data16
stos
roll
enter
add
mov
mov
xchg
mov
xchg
xchg
je
aam
and
cli
dec
xchg
xor
jg
adc
pop
lea
xor
jl
je
xchg
jne
inc
lahf
lods
stc
mov
mov
insl
mov
lock
sub
fcompl
mov
mov
int3
in
cmpb
test
test
push
or
inc
dec
bswap
dec
ret
stos
push
and
push
repnz
pop
lret
mov
sbbl
inc
sbb
sti
inc
lea
fwait
decl
add
jbe
cmpsb
mov
loope
sti
lahf
xchg
sub
data16
xchg
notl
imul
cmpsl
int3
or
or
jnp
mov
cmpsl
xor
push
je
int3
aaa
push
inc
cmp
jne
pop
mov
pop
mov
or
dec
mov
lods
in
inc
call
movsl
adc
ds
sbb
push
add
in
stos
test
mov
xchg
jl
mov
test
jb
or
cs
push
push
jae
sub
mov
mov
sarl
adc
test
bound
shll
push
jb
add
je
jp
mov
in
shlb
inc
inc
mov
cmpsb
mov
add
add
mov
pop
push
sbb
shl
pop
inc
imul
push
out
in
fmul
divl
add
add
scas
mov
test
cwtl
mov
pop
push
dec
pop
outsb
fiaddl
lret
push
jne
pop
shr
or
enter
mov
xor
mov
addb
dec
popa
lahf
adc
or
sti
sti
icebp
jle
insb
out
sub
sub
test
jp
outsb
out
jnp
add
sbb
adc
xchg
lods
mov
jle
adc
xor
mov
psrlq
std
mov
inc
fdivs
dec
push
sub
add
xorb
jo
insb
shrl
repz
jns
inc
es
movsl
dec
lahf
inc
sbb
jbe
into
out
mov
mov
inc
ret
pop
out
js
xor
xor
pop
xchg
sub
shll
xchg
inc
mov
pop
push
dec
mov
jge
div
test
cmp
rcrb
ja
fildl
loopne
fnstenv
out
scas
adc
jae
or
add
jae
imull
pop
push
popw
iret
aad
pop
sbb
lret
sub
icebp
data16
inc
sbb
push
xor
adc
out
notl
inc
imul
sub
arpl
or
add
xor
int
call
push
add
ja
stos
loope
or
xor
mov
inc
outsb
xchg
cld
cltd
mov
pavgb
mov
mov
push
scas
mov
out
jmp
movsl
pop
xor
sub
fs
cmp
xchg
add
mov
jle
jne
das
inc
mov
rcrb
mov
sub
inc
fiadds
pop
push
mov
icebp
pushf
dec
clts
push
push
cmp
add
jmp
push
ljmp
jl
sbb
inc
cmp
es
xchg
push
fnstenv
mov
data16
mov
les
or
decl
sbb
and
lahf
cmp
and
jno
mov
icebp
sub
mov
inc
cmpsl
popf
xor
sub
stc
xchg
jbe
cmpsb
ljmp
rorb
or
or
daa
mov
or
les
cmp
out
pop
mov
loope
xchg
mov
push
stos
cmpsb
mov
cmp
out
pop
cmp
cs
mov
push
cmp
push
add
jmp
gs
and
mov
push
or
std
aad
stos
mov
lahf
xchg
push
pusha
mov
push
repz
adc
jge
stos
jmp
js
xchg
sub
cmp
push
jo
mov
push
jge
mov
sarb
std
add
movsl
fwait
rorb
mov
fistl
test
adcb
xchg
ss
sub
push
sbb
mov
pusha
int3
fld
popf
pop
inc
in
push
xor
subb
jns
xor
xorl
aas
aaa
js
dec
and
mov
lcall
inc
sbb
hlt
sbb
push
addl
idivb
std
mov
push
es
arpl
and
mov
jp
aaa
or
imul
sbb
dec
outsl
jp
inc
or
adc
sarl
push
js
pop
test
popa
inc
mov
xchg
sub
cmpsb
jae
adc
mov
cwtl
and
xchg
sub
and
mov
mov
cmc
sbb
mov
addl
stc
ja
cmp
rclb
aam
ret
js
dec
adc
mov
ja
or
out
ret
push
testl
push
sbb
aam
sahf
jb
xchg
es
jo
imul
ret
out
mov
insb
fcmovbe
jns
inc
inc
pop
inc
ror
cmp
lods
stos
push
inc
fists
lods
jae
and
xor
int
out
mov
or
adcl
cwtl
mov
out
daa
shlb
pop
jne
sbb
push
sub
and
fsub
sahf
pop
push
dec
jl
xor
rorb
cmpsl
dec
ja
sbb
push
push
icebp
clc
int
dec
in
and
sub
icebp
xor
bnd
mov
or
mov
inc
jb
jle
pop
mov
cld
and
add
fs
adc
xchg
mov
cmp
xor
dec
mov
sbb
lea
adc
aad
call
sbb
shl
mov
fisttpll
jb
test
movsb
loopne
je
in
std
out
mov
sub
sti
sub
loopne
add
jae
data16
fisttpll
mov
xchg
dec
std
cld
sub
addb
cmpsb
mov
adc
fsubs
push
repnz
addl
cmp
out
inc
mov
imul
mov
decl
mov
pop
mov
aam
addr16
jle
lods
aad
dec
xor
notb
fwait
dec
int
mov
cmpsl
out
ficomps
cs
inc
scas
mov
mov
movsl
xor
outsl
xor
and
jle
mov
jl
sbb
pop
jle
xor
mov
sbb
adcl
insb
ret
aam
outsl
stos
fldt
outsb
cmpsl
insl
bound
pop
cmp
out
aaa
lods
mov
inc
fs
data16
cmp
test
push
xchg
mov
movsb
sbb
scas
xchg
and
pop
and
hlt
sub
and
popf
stos
mov
xor
sub
test
or
push
stos
outsb
lods
in
mov
xor
iret
icebp
xor
adc
insl
hlt
inc
roll
and
hlt
unpckhps
inc
mov
inc
add
mov
jge
fimuls
nop
mov
mov
int3
test
je
pop
mov
lcall
xor
fdivl
icebp
sbb
mov
jmp
mov
stos
mov
stc
add
push
xor
jecxz
dec
repz
jno
cmp
aam
arpl
inc
sahf
xor
ret
mov
vpaddusb
repnz
nopl
add
ljmp
por
clc
jge
xor
in
rorb
enter
adc
jecxz
inc
sbbb
outsb
dec
xor
mov
arpl
fsubrl
or
loope
mulb
aad
call
lcall
std
xorl
or
xlat
sti
cld
jne
rcr
push
fistps
xlat
cmc
xchg
xor
sub
sub
sbb
adc
mov
dec
sub
pop
jne
add
shrb
push
and
push
jo
lret
adcb
pushf
jmp
addl
fucomi
jbe
call
js
pusha
testl
xchg
xor
pop
sahf
js
cmp
int3
shll
push
rcrl
xchg
stc
cld
sbb
femms
lods
mov
nop
mov
in
and
dec
movsl
cwtl
xor
cmp
adc
sti
fs
cmp
frstor
mov
insl
fiadds
push
lea
adc
aaa
mov
add
or
lcall
cmp
jg
push
les
cld
pop
jl
loop
fistps
push
xor
sbb
test
repz
ret
xor
repz
push
mov
jae
pop
fwait
clc
and
xchg
cmp
cltd
jo
sub
std
mov
adc
shll
cmp
xchg
popf
mov
mov
outsb
fucomp
lods
mov
out
imul
repnz
jg
mov
xchg
jl
inc
or
imul
adc
ds
and
push
setbe
mov
jg
dec
aam
and
lahf
sbb
pop
sub
inc
lret
insl
negb
call
inc
push
push
sbb
ss
pop
adcb
ja
fwait
add
enter
or
add
push
mov
pop
xor
ret
imulb
xlat
les
loopne
fnstcw
fwait
pop
push
xor
pop
lcall
shl
mov
dec
adcw
adc
inc
adc
lock
cwtl
pop
dec
rep
pusha
cltd
push
mov
test
aas
call
jns
mov
mov
in
add
inc
xchg
xor
lods
mov
fbstp
pop
sbb
sbb
daa
loope
imul
push
inc
sbb
fwait
int3
xchg
or
xchg
bnd
clc
mov
ss
jae
xor
push
mov
and
inc
add
mov
ret
fwait
xchg
rolb
rcl
jo
scas
add
lcall
shl
rol
aad
repz
test
push
inc
out
je
lret
arpl
jmp
or
cli
push
jnp
scas
jecxz
rclb
lods
xorb
lea
fnstsw
inc
add
jo
fistpl
imul
cmp
das
mov
fwait
jecxz
stc
arpl
pop
scas
loop
dec
scas
sub
sbb
iret
mov
cmc
cmpsb
aam
enter
jmp
adc
jb
ret
add
fs
push
mov
sub
mov
pop
sbb
or
movlps
testb
cmp
outsb
mov
shlb
xor
mov
mov
ja
add
pop
lret
inc
inc
push
iret
mov
scas
xor
mov
adc
xchg
push
xchg
inc
cmp
mov
fmull
lcall
and
lods
dec
outsb
enter
xor
ds
pop
xor
xor
inc
outsl
adc
icebp
div
pop
gs
push
cltd
mov
lea
adc
cltd
popa
xor
pop
into
inc
mov
sarl
aad
outsl
lds
ljmp
mov
push
in
ret
ss
in
aam
xor
mov
cld
jecxz
inc
xchg
lods
xor
adc
jno
adc
xchg
push
cmpsb
test
insl
movsb
jp
out
scas
dec
nop
cmpl
callw
clc
jl
push
repnz
mov
sahf
ja
test
and
add
inc
xor
rcl
or
jb
lcall
inc
cs
mov
pop
push
sub
repz
mov
imul
jns,pt
mov
aas
and
adc
sbbl
cmc
dec
mov
in
cmc
jmp
fidivs
out
rol
loope
pop
mov
pop
sbb
jl
ja
xor
pop
push
adc
aad
notl
movl
popf
lret
sub
and
sub
test
pop
pop
mov
loopne
cmpsb
decb
aaa
mov
pop
out
sti
in
mov
sahf
pop
fwait
xor
ja
test
push
jb
lret
sbb
jg
out
fisubs
mov
ret
popf
test
dec
shl
shrl
pop
inc
call
aaa
mov
dec
outsl
out
outsb
sbb
xchg
jmp
cld
das
xchg
scas
jns
mov
sti
pop
lahf
mov
and
push
popf
popf
sti
sbb
and
and
mov
or
jmp
push
xchg
ljmp
pop
sar
push
cmpsb
out
aam
dec
clc
enter
mov
repz
jl
imul
mov
mov
rsqrtps
into
push
aad
enter
popa
cli
dec
push
mov
bound
test
jg
push
gs
adc
adc
cs
jmp
mov
outsb
cmp
xchg
push
test
and
sbb
in
dec
xor
adc
sub
and
hlt
push
cmp
xchg
sahf
scas
cmovns
cltd
mov
jne
dec
stos
ja
push
or
and
sbbl
mov
lret
mov
sarl
push
lret
ja
lcall
cmc
aad
into
mov
mov
pop
or
jbe
jp
es
mov
imulb
or
pop
enter
xor
dec
out
cwtl
popf
mov
jo
sub
mov
xchg
jecxz
test
popf
cmp
mov
and
ficomps
cwtl
inc
fscale
js
lret
sbb
xor
rcl
jl
jle
xor
mov
das
dec
pop
clc
xor
cmp
sub
jo
inc
fcomps
inc
out
loop
jne
int3
mull
lea
jl
add
jae
mov
nop
scas
sbb
stos
inc
push
mov
and
lods
scas
es
loope
mov
or
pusha
mov
paddsb
popf
mov
seto
jmp
jae
mov
jl
mov
push
cmc
jp
into
mov
scas
icebp
jnp
outsb
xchg
or
pop
lods
cwtl
mov
pcmpgtd
mov
and
fimuls
daa
faddl
out
inc
dec
xor
and
roll
pop
movsb
call
ds
mov
sbb
cmp
mov
xchg
stos
ljmp
cmp
addr16
fistpll
jno
sarb
adc
sub
adc
push
inc
aaa
xorb
add
fildll
jle
pop
sbb
aaa
add
test
stos
imul
repnz
xchg
ficompl
sbb
push
push
idiv
xlat
adc
jmp
lock
out
test
dec
add
arpl
dec
rolb
fsubrs
aad
cmpsl
imul
fmul
mov
xchg
sarl
sbb
or
bound
push
fcmovne
inc
sahf
mov
test
cs
leave
jecxz
pop
xchg
mov
lahf
movsb
sub
stos
test
sbb
out
xor
lock
and
mov
pop
pop
add
add
mov
sbb
mov
cmovge
push
mov
dec
pop
add
jbe,pn
mov
mov
add
pop
rol
stos
xor
ficompl
iret
ja
in
sarl
dec
dec
mov
sti
and
lods
outsl
push
mov
push
test
sub
inc
insb
mov
mov
in
scas
pop
cmp
insb
sbb
or
add
divb
call
inc
pop
lahf
fucom
cmpsl
inc
add
imul
movsl
loope
xchg
add
xor
shll
fldenv
and
add
jmp
mov
mov
push
in
pop
mov
and
add
vpcmpeqb
ret
iret
and
shrb
lret
arpl
filds
mov
inc
xchg
jmp
arpl
mov
in
push
loop
pop
or
popf
fnstenv
xchg
out
stc
mov
xor
inc
testb
das
pop
inc
push
sti
pop
xor
int3
inc
pop
adc
jl
and
aas
jg
push
test
out
jle
cwtl
sbb
int3
data16
mov
mov
xor
movsl
adc
mov
cltd
test
jl
sub
loop
gs
jb
loopne
lahf
or
xor
sub
mov
loope
mov
data16
mov
mov
arpl
inc
pop
mov
fsub
fadd
out
mov
in
jne
xor
pop
mov
flds
popa
sbb
out
sbb
loop
dec
inc
dec
push
jb
sub
popf
repnz
cmp
hlt
cltd
inc
or
add
add
in
add
xor
lcall
dec
fcomp
data16
jne
xchg
aas
mov
popa
stos
loop
scas
jno
inc
cmpsb
cltd
cmp
andb
insb
test
add
dec
and
movb
xchg
lods
insb
movsl
les
clc
push
push
pop
cmpsb
cmp
aam
ljmp
mov
cs
cmp
xchg
lahf
shr
fmull
adc
adc
out
cmp
inc
and
lcall
cmpsb
adc
sbb
negl
xor
push
mov
xchg
stos
jne
repnz
outsl
cmp
xor
repz
lahf
mov
jl
jl
sbb
dec
js
aam
push
bound
jbe
push
test
imul
scas
mov
mov
faddp
js
cwtl
out
outsl
sbb
stos
cmp
add
inc
push
pop
ret
fwait
pop
pop
fnsave
daa
rcrl
push
aas
mov
mov
cmp
popa
std
cli
aad
aam
cmp
pop
sbb
scas
push
push
xchg
pcmpgtd
fldenv
mov
aaa
sahf
lahf
imul
xor
outsb
jns
push
shr
fldl
leave
sub
push
out
add
xchg
faddl
xlat
add
xchg
xchg
movsb
mov
dec
xor
pop
lcall
in
inc
iret
inc
ja
sub
pop
xor
sub
aam
sbb
add
jns
mov
xor
mov
sbb
mov
or
data16
cmpsl
out
jecxz
jp
pop
scas
sub
aaa
ds
inc
pop
mov
mov
pause
stc
scas
mov
stos
arpl
fiadds
adc
and
lahf
insl
mov
iret
data16
test
test
pusha
sti
movsb
aad
ja
je
cltd
inc
mov
sbb
jbe
jo
lret
inc
cwtl
push
rcrb
jb
push
shll
xlat
jae
mov
cltd
fdivrs
je
fs
pop
sbb
insw
xor
jmp
clc
inc
push
mov
inc
jne
fildll
sub
dec
and
lret
mov
xchg
xor
inc
aaa
sub
xchg
fdivrs
mov
lret
cld
dec
xchg
mov
add
push
mull
pop
sbb
popa
xchg
jns
daa
mov
fwait
push
cmp
dec
push
js
push
mov
or
dec
sbb
pop
in
or
rcr
gs
iret
in
out
arpl
xorb
add
jp
adc
jle
in
fwait
lds
sbb
mov
xor
mov
pop
cmpsl
mov
pop
aas
test
lods
dec
inc
aad
je
pop
dec
fildl
lcall
into
push
jl
jle
mov
or
in
sub
into
cmp
pop
shrl
arpl
pop
or
xor
mov
mov
dec
je
push
adc
and
add
inc
movl
scas
xchg
lret
xor
xchg
call
outsb
sbb
into
cmp
add
adc
das
push
insb
and
cli
scas
inc
mov
scas
fiaddl
subb
insl
inc
pop
mov
in
mov
pop
jecxz
cmp
std
xchg
mov
sbb
adc
or
adc
jo
insl
aaa
inc
push
fisubl
pop
jnp
push
subl
fnsave
mov
cwtl
leave
rcr
pop
je
lods
mov
icebp
pop
pop
fcoms
sub
das
inc
mov
mov
push
adc
cmp
into
cmp
mov
push
cmpsl
mov
mov
inc
jo
stos
adc
scas
cli
pop
mov
lret
pushf
inc
pop
xchg
insb
inc
and
mov
inc
inc
adc
cli
shl
jecxz
xlat
outsl
cmc
inc
dec
mov
jnp
push
mov
outsb
mul
cld
jle
outsb
mov
pop
sub
push
outsl
jp
pop
ljmp
cmc
outsl
push
push
shlb
insb
stc
or
push
push
sbb
outsb
lods
aas
insb
jmp
add
dec
jno
add
mov
into
adc
sub
push
adc
dec
pop
sub
jmp
ljmp
out
outsb
ljmp
out
mov
dec
mov
sbb
jle
inc
xchg
cld
and
cwtl
mov
cs
leave
insb
bound
push
inc
sbb
pop
clc
push
sbb
pop
mov
inc
jnp
jne
add
push
xlat
jmp
das
mov
loopne
icebp
mov
out
inc
fistpl
and
xchg
jle
adc
in
jl
xor
in
daa
movsl
pop
enter
pop
pushf
or
jecxz
xor
pop
mov
aas
idivb
daa
mov
fwait
and
add
leave
pusha
imul
fwait
xchg
xchg
push
cmp
sti
repnz
sub
shlb
shl
sub
pusha
mov
sub
shl
add
adc
xor
fdivrl
sub
cmp
xchg
jno,pn
aas
gs
xor
loope
movsb
lret
js
xchg
or
sbb
xlat
enter
mov
mov
in
cltd
add
fdivrl
loope,pt
mov
sbb
push
imul
mov
in
cmp
fsts
add
imul
add
push
cli
fwait
mov
ds
xchg
mov
mov
or
std
push
sbb
dec
js
lds
mov
cltd
cmp
out
rep
push
add
pop
add
clc
mov
dec
fwait
jmp
sub
mov
sub
call
shll
mov
push
pop
jns
out
or
outsb
gs
outsb
mov
dec
cwtl
insb
add
cmp
push
mov
jne
xchg
sbb
and
jmp
mov
push
cwtl
sti
dec
xor
inc
fbstp
push
call
stos
push
push
mov
cmpsb
xor
or
mov
jb
jae
dec
mov
movsl
adc
xchg
mov
lret
shrb
in
xor
pop
mov
and
shlb
xchg
mov
sbb
mov
cmp
and
push
fxam
lahf
mov
dec
sub
std
test
push
out
jmp
adc
inc
adc
sbb
mov
and
sarb
ds
cmp
add
and
mov
mov
xchg
sbb
jbe
adc
inc
sub
mov
lods
sub
les
jae
vpsrad
mov
sub
jae
xor
movsb
lods
jae
lcall
push
jbe
cmpsl
fstpl
xchg
or
std
leave
inc
or
sub
icebp
cld
js
adc
or
out
dec
add
sbb
imul
insb
loopne
mov
repz
aad
sub
dec
mov
test
or
sub
inc
ljmp
dec
outsl
leave
bound
cmovae
std
lods
in
sub
enter
lcall
jle
js
pop
mov
add
ret
dec
ja
in
test
sub
loopne
and
fildll
xor
shlb
mov
mov
jl
pop
std
sahf
jle
dec
inc
mov
or
sahf
out
repnz
mov
lods
lcall
push
mov
xchg
adc
jno
out
clc
and
test
xchg
cmp
setnp
addl
xlat
pop
sub
stc
in
sbb
add
adc
mov
out
fldl
and
loop
sti
aad
mov
fwait
leave
mov
push
cmp
stos
mov
mov
or
adc
ret
pushf
and
lahf
inc
test
and
xchg
nop
pop
pop
pushf
in
adc
xor
cwtl
imul
sbbb
out
inc
daa
cmp
loopne
lahf
ret
jle
movsb
fs
insb
pop
sbb
cwtl
repnz
inc
dec
test
push
mov
pushf
jmp
leave
cs
mov
mov
clc
pop
cwtl
jle
lahf
ret
dec
arpl
ficompl
mov
jne
loope
and
test
sahf
push
es
xchg
inc
hlt
push
sub
pop
into
std
lcall
cmc
cmp
sbb
rclb
and
lods
je
sbb
imul
nop
test
rolb
aam
jle
xchg
pop
adc
sub
or
decl
popa
add
cmp
popf
imul
adc
sbb
stc
jmp
cwtl
ljmp
and
mov
sub
mov
dec
aas
div
stos
fs
push
add
push
push
lods
sub
shrl
xor
push
shlb
inc
mov
call
icebp
pop
lods
inc
adc
inc
scas
ret
jbe
mov
adc
adc
stc
jecxz
cmpl
inc
pop
mov
xchg
aad
push
push
scas
mov
enter
in
sub
in
dec
adc
push
rcr
sbb
and
test
add
xor
orb
in
out
orb
inc
ja
cmpsb
incb
mov
mov
mov
pop
jl
insl
mov
mov
add
xor
ja
sub
xchg
xor
jne
daa
int
out
std
sarb
out
in
dec
xchg
mov
gs
adc
and
repz
pusha
je
push
loop
mov
inc
jecxz
adc
cmp
mov
cltd
mov
movsb
jne
mov
inc
mov
sarb
lcall
inc
mov
or
sbb
mov
inc
cmp
stc
dec
repnz
push
imul
or
dec
cmp
js
aas
add
aam
or
and
mov
mov
add
mov
jbe
xchg
not
sbb
cmp
cltd
stc
rclb
mov
dec
mov
dec
add
pop
fdiv
mov
jp
leave
int3
fs
or
dec
cmpl
fld
sub
mov
push
sbb
les
and
pop
pop
or
int
dec
dec
nop/reserved
xchg
cmpsl
test
mov
add
pop
mov
jge
xchg
or
into
ret
cltd
pop
jg
dec
lcall
inc
dec
inc
cmp
enter
pop
loope
imul
and
dec
xorb
aas
leave
stos
popa
jg
and
lret
pop
push
mov
xchg
or
inc
shll
xchg
jmp
inc
je
cmpsl
aas
push
in
cli
pop
pop
out
adc
fwait
jg
int
cmp
rolb
fldl
in
ljmp
lea
dec
std
inc
xor
mov
sti
xor
loope
in
add
xorb
rorl
ljmp
mov
outsb
jno,pt
aaa
jge
xorb
and
push
sbb
jl
dec
adcb
adc
ds
sub
sar
movsb
insb
pminsw
or
or
pop
push
mov
xchg
sbb
mov
bound
or
push
out
jbe
aam
sbb
pop
jge
cmpsl
and
push
call
mov
cmp
aas
das
imul
mov
outsl
sbb
jmp
xchg
adc
or
call
inc
dec
loope
pop
cld
lcall
shll
jp
ret
adc
fbstp
sub
aaa
mov
mov
sbb
stc
xchg
dec
scas
cld
les
outsl
shrb
xor
outsl
xlat
imul
test
mov
mov
cmp
dec
addr16
into
xchg
data16
aas
in
pop
mov
pop
or
inc
push
pop
into
mov
cmp
xor
rorb
popa
jnp
adc
lcall
add
add
dec
push
ficoml
xor
fsubp
dec
enter
inc
bound
das
fdivs
notb
std
push
ret
adc
sub
cld
add
mov
mov
ret
mov
dec
dec
mov
jne
cmpsb
sub
decl
and
iret
lcall
subl
mov
push
test
fmull
sub
xchg
inc
enter
stc
jl
and
mov
push
inc
and
sub
adc
pop
fsubrl
bound
cmp
or
arpl
and
outsl
pop
lock
mov
mulb
addb
repz
xor
punpckldq
ljmp
test
pop
cmp
and
loope
addr16
in
fcomps
xor
loopne
adcb
ja
rcl
fldcw
scas
lods
divps
and
daa
outsl
aam
es
dec
dec
xor
mov
cli
mov
dec
mov
roll
nop
push
push
mov
lock
test
inc
sub
test
insl
push
cmc
lcall
stos
ret
loop
pop
mov
mov
iret
fsts
inc
rcrb
mov
cltd
cmpsl
sar
test
fdiv
inc
popf
lods
ja
inc
dec
leave
bound
inc
movsb
scas
fldcw
push
mov
adc
ret
cmp
inc
rol
and
adc
lea
loopne
loopne
sub
ss
outsl
rcrl
mov
addr16
sub
pop
das
or
add
jb
pop
xor
cmpsb
in
dec
cltd
jno
int3
in
sbb
aas
jnp
xor
mov
outsl
ljmp
sub
test
ja
pop
push
fs
pop
lods
cmpsl
aad
ret
enter
clc
imul
sbb
cmp
mov
lock
pop
lods
or
xchg
movsl
add
xchg
dec
xchg
jg
cld
mov
or
add
icebp
dec
jno
inc
rcl
rcll
jmp
out
xchg
cli
enter
xor
clc
pop
test
cmp
lock
inc
vpunpckldq
push
sub
mov
lahf
mov
test
lds
adc
cmp
daa
and
adc
testb
ss
xchg
pop
push
outsb
xchg
add
outsl
cmp
fisubrs
call
sbb
movsl
es
stc
jns
hlt
ret
lcall
aaa
xor
in
test
dec
jle
xchg
sub
dec
pop
adc
push
jb
or
les
call
scas
ret
pop
sub
psubw
mov
sub
mov
addb
mov
test
mov
call
lret
jne
sub
lcall
mov
into
sub
mov
fimuls
ljmp
test
cmp
cmc
pop
sbb
popf
xchg
aam
sbb
ficomps
in
mov
sbb
fs
add
jecxz
xor
xchg
mov
jg
in
mov
mov
sub
cmp
sub
inc
xchg
cli
in
jmp
or
add
add
xchg
xor
shrl
icebp
mov
and
xchg
inc
jmp
out
test
and
adc
pusha
sub
pop
pop
pop
and
mov
xchg
push
jp
aam
push
add
les
stos
mov
push
leave
push
outsl
out
mov
bound
ret
sbb
ja
stc
pop
cmp
jb
movsb
pop
ficoml
fwait
ljmp
movsb
fildll
jns
cmc
fsubrl
iret
clc
cmp
arpl
push
adc
repnz
pusha
xor
and
lahf
cs
add
ss
fisttpll
fdivr
arpl
push
sbb
pop
push
test
lods
ret
cmc
jno
jns
cmp
lahf
mov
and
cmc
lods
fwait
xor
push
test
loopne
and
idivl
into
xor
add
mulb
pop
push
popa
test
xorl
leave
and
xor
ljmp
pop
and
iret
xor
loope
dec
jge
mov
fistpll
enter
pop
sarb
adc
call
ficoml
mov
dec
cmp
aad
lahf
lret
add
push
pushf
scas
push
loopne
dec
and
mov
dec
cmp
call
cmp
repz
loop
std
mov
or
aas
insb
shr
cltd
mov
adc
fstpt
xchg
leave
push
push
pop
jg
and
imul
xor
lods
mov
mov
pop
call
or
sub
mov
pop
mov
imul
dec
lcall
mov
push
fimuls
scas
pop
out
int
aad
or
or
lret
add
mov
mov
jae
cli
scas
in
lcall
adc
stos
das
push
pushf
lods
roll
in
mov
xchg
push
jecxz
mov
sbb
test
pop
dec
cmpl
dec
orl
arpl
loopew
je
push
xor
mov
cs
add
mov
dec
dec
stos
jbe
je
jo
movsb
xchg
imul
pop
shl
pop
sti
test
pop
shll
add
jmp
pop
imul
adc
xorb
ret
jle
gs
sub
sbb
dec
outsl
std
or
in
jmp
imul
cltd
adc
subl
andl
mov
xor
shrb
mov
lahf
mov
daa
addr16
aad
ret
cwtl
stos
mov
mov
stos
dec
ret
js
dec
fistl
cmp
cmpsl
xchg
pop
push
pop
inc
mov
aam
inc
fwait
xor
or
jae
mov
roll
mov
testb
and
scas
aas
xchg
sbb
cmp
xorb
mov
cmp
pusha
push
xchg
adc
rcrb
cltd
sbb
lea
cmp
enter
stos
xlat
xor
jo
cmp
pop
in
xchg
ret
mov
aad
repz
mov
jp
or
mov
cmc
sbb
sbb
or
stc
outsb
sbb
fisubrl
mov
mov
roll
jbe
fdivrp
addr16
jl
in
pop
sub
jmp
pop
daa
inc
push
icebp
pop
aaa
add
and
or
xlat
pop
jg
outsl
dec
xor
loop
insl
sub
sub
mov
pop
rolb
inc
mov
in
mov
aas
and
loopne
fs
jae
ja
push
cmp
add
clc
enter
jnp
ficoml
mov
in
idiv
add
xlat
mov
dec
insb
mov
and
xor
push
test
test
stos
lcall
push
testl
cmp
cld
and
adc
lret
or
jbe
call
test
leave
and
push
movsb
pop
das
sub
fldt
dec
cli
dec
inc
lahf
xor
xchg
adc
into
gs
cmp
les
movsl
jle
jnp
and
sub
push
sti
inc
mov
dec
test
negl
add
ret
fbstp
jo
cwtl
scas
sti
popa
sub
push
mov
adc
add
stc
jo
mov
addb
xlat
in
or
xlat
ror
cs
idiv
xchg
rorl
adc
in
jne
std
sub
in
adc
pop
lcall
sub
xor
xor
xchg
dec
sbb
pop
jae
pop
out
mov
sub
push
inc
adc
les
bound
iret
dec
pop
add
adc
mov
mov
xlat
xchg
jns
add
jp
push
and
sbb
fstpt
fs
inc
or
or
push
jmp
imul
pop
in
add
jl
or
inc
lds
dec
or
mov
xchg
dec
repz
jnp
jmp
das
popa
std
movsl
pop
push
dec
add
jno
push
sarl
push
mov
fistpl
shrl
ss
xchg
jg
test
sub
adc
pushf
push
sbb
inc
test
pop
sub
sub
insb
loopne
pusha
mov
cmpb
les
pop
outsb
mov
mov
lahf
pop
cld
test
pop
test
rclb
shrb
xchg
cmp
lcall
mov
and
mov
lret
adc
cltd
out
cmp
mov
sbb
adc
sbb
andl
sub
and
add
sahf
xchg
into
inc
mov
mov
jae
add
into
dec
lds
sbb
adc
add
and
lds
cmpsl
inc
push
jne
arpl
jns
mov
testl
xchg
cmp
scas
out
sarl
xor
test
pop
pop
cltd
push
sti
sti
outsb
inc
bound
sub
jb
idivl
dec
shrb
inc
jb
xchg
dec
adc
pop
jg
pop
jns
inc
jb
dec
add
pop
add
cmp
push
dec
push
pop
movsl
cmp
pop
aas
mov
jns
addr16
mov
test
sub
add
inc
leave
and
sbb
adc
pop
jno
fldt
dec
push
and
and
push
sbb
mov
mov
mov
push
inc
stos
xor
inc
or
mov
add
cld
sbb
enter
fdivrl
mov
mov
mov
cwtl
or
int
jbe
fsubl
dec
xchg
pop
scas
cmp
xorb
sub
mov
icebp
subl
adc
ljmp
sub
jb
and
sbb
jb
push
mov
aad
cmp
push
add
dec
or
cmp
jo
xchg
mov
test
cmpsb
cmp
mov
add
sti
call
or
movsb
push
cmp
icebp
int
add
ss
mov
clc
test
and
imul
in
push
xor
cwtl
gs
sub
and
jnp
mov
sub
push
xor
ljmp
xchg
outsl
bound
push
pop
jle
sbb
cwtl
js
inc
push
xor
lds
dec
xor
clc
dec
stos
jg
sti
add
fcomi
mov
jno
imul
jecxz
lahf
in
and
dec
xor
dec
mov
pop
push
mov
sbb
ss
push
or
push
cmp
mov
fs
stos
cmp
call
out
in
cmp
mov
mov
jb
out
push
cmpl
sub
mov
insb
fwait
jne
loop
pop
jbe
stos
daa
int3
shl
adc
sbb
pusha
dec
adc
jne
xchg
pop
lock
add
mov
mov
dec
test
jb
add
jae
ljmp
aam
lods
insb
lock
ror
lds
add
cwtl
subl
cs
test
fimuls
int3
addr16
nop
push
cmp
cwtl
call
push
pushf
jb
pop
dec
iret
pop
jnp
test
xchg
ja
cmp
stc
sub
jae
and
xchg
fimuls
add
sbb
out
add
inc
in
pop
cs
push
dec
sbb
sbb
nop
clc
push
leave
mov
fsubl
repnz
mov
popf
add
xor
sahf
sti
sub
add
clc
add
popa
sbb
sahf
test
les
mov
stos
scas
shlb
movsb
dec
sbb
call
rcll
jnp
test
mov
loop
stos
sub
clc
subb
jbe
mov
jp
mov
xchg
pusha
jae
cwtl
cmp
loopne
notb
jg
push
out
add
add
xlat
mov
pop
sti
lods
jo
movsl
leave
es
mov
imul
pop
clts
jmp
cmpsb
pusha
dec
outsl
leave
mov
ds
fists
ja
push
js
xchg
xchg
out
movsl
stos
mov
inc
xor
mov
test
fistps
cltd
stos
cmp
rclb
das
sti
pop
xchg
xor
pop
sub
scas
mov
add
mov
push
imul
xchg
lds
popa
mov
xor
repz
xor
and
das
and
inc
dec
rcr
cmp
int
inc
fcomip
repz
and
xchg
sub
jge
jne
lahf
cmc
xor
dec
xchg
sbb
outsl
clc
and
stos
push
xchg
std
mov
lods
add
jge
ret
xchg
cmc
in
or
pop
jp
cli
stos
fwait
cmp
stos
imul
je
adc
push
mov
sub
std
pop
mov
dec
add
pop
dec
and
mov
push
cmpsl
data16
cmpsl
mov
cltd
ret
add
jbe
jl
dec
mov
pop
test
out
mov
movsb
xlat
mov
and
push
ds
ret
adc
out
push
xorb
mov
pop
adc
rcll
cmp
adc
sub
notl
mov
and
adc
and
cmpsb
cmp
lock
jae
aad
xchg
push
mov
mov
jb
popa
and
xlat
sarb
out
jg
dec
dec
push
out
mov
mov
lds
dec
mov
icebp
xchg
xchg
or
xor
mov
stos
jns
lret
add
int3
loopne
mov
and
cmpsl
xor
jbe
dec
dec
shrl
and
sbb
ret
pop
adc
aaa
push
enter
into
insb
pop
jmp
xor
add
call
into
popa
mov
repnz
or
dec
cmp
mov
inc
mov
out
lretw
out
xor
in
or
add
orb
loop
pop
fst
dec
inc
pop
push
out
add
pop
cmp
pop
insb
inc
sub
clc
call
outsb
jnp
mov
jle
movsl
add
rcr
mov
xor
ljmp
cmp
jne
in
xchg
pop
jecxz
push
sbb
cwtl
pushl
jecxz
das
mov
jne
xchg
xchg
and
clc
repz
loopne
daa
test
push
sub
daa
dec
add
outsl
scas
addl
fsubr
jo
jge
orb
leave
cmp
pushf
ja
lea
movsb
xchg
push
jl
fmull
lods
orl
push
outsb
je
sbbb
fxam
push
fsts
ja
xchg
cld
sarb
int3
fmuls
jg
jl
or
iret
inc
sbb
psubb
push
jmp
arpl
xchg
cmpsl
xor
dec
or
imul
sarb
mov
adc
orb
inc
lods
outsb
fstpt
lret
cmc
iret
jmp
pop
adc
mov
das
inc
jg
subl
push
jbe
pusha
repnz
movsb
enter
push
dec
inc
push
mov
js
sub
notl
inc
adc
cltd
dec
xor
adc
mov
sbb
idivl
jmp
shl
ljmp
loop
das
pushf
push
int3
mulb
xchg
dec
push
repz
mov
movsl
sbb
add
jns
dec
jae
cli
pusha
test
jg
loope
div
pop
push
sub
push
sub
in
das
xchg
adc
inc
push
push
sub
fildl
push
mov
sub
dec
pushf
movsl
xchg
out
mov
les
aad
push
sahf
add
and
xchg
mov
fnstsw
mov
das
negl
fwait
outsb
xor
jo
push
lret
xchg
add
add
push
pop
test
test
adc
jmp
mov
xor
pop
xor
int3
cld
lods
or
andb
sti
in
pop
lods
sub
aaa
aaa
push
sub
dec
dec
push
add
jo
arpl
iret
sti
cmpsb
repnz
cltd
hlt
pop
or
or
pop
and
lock
int
fsubrl
repnz
cmc
dec
subb
sbb
or
jecxz
sbb
mov
jae
cmp
lods
push
outsl
pop
add
add
out
pushf
lods
xor
or
stc
mov
cmpsb
dec
sub
rcrl
cmp
stos
pop
mov
jecxz
in
or
fwait
test
push
leave
jno
dec
xchg
or
mov
out
fstpt
fstl
mov
test
loop
mov
xchg
mov
mov
insl
lods
jno
out
ret
out
push
adc
xchg
or
jmp
aas
fsubs
cld
pop
shrd
out
dec
mov
lds
popf
add
ljmp
adc
add
es
subl
je
xchg
cmp
sub
push
sbb
jno
add
mov
movsl
xor
cmc
adc
jno
pop
push
aad
push
or
shrb
dec
dec
lea
in
arpl
sub
and
or
movsb
sbb
outsl
cmp
fcmovb
push
sbb
jnp
inc
add
scas
sub
loopne
scas
scas
jg
add
test
jmp
cmpsl
push
mov
ds
cmp
mov
lret
jecxz
rcrb
push
imul
outsl
adc
loop
loop
lret
and
inc
sub
jge
fsubrl
lret
push
mov
jl
mov
outsb
sub
sub
mov
pusha
enter
loopne
dec
sbb
push
mov
mov
inc
sub
push
andl
xchg
add
sahf
decb
jno
mov
or
cltd
xchg
mov
cli
testl
cmp
hlt
xlat
das
mov
pusha
pop
mov
addl
jae
mov
stos
sbb
faddp
fs
fnstcw
lods
jae
xchg
mov
mov
push
das
les
or
cmpsb
adc
pop
call
std
and
stc
ret
insb
cmpsl
mov
pop
loop
sbb
xchg
sub
sub
mov
in
lret
adcl
ljmp
popa
iret
pop
fistl
jns
cmpsl
xchg
push
sbb
hlt
subb
mov
cmc
in
adc
jmp
lret
sub
js
rolb
les
loopne
add
xchg
dec
sahf
in
imul
ss
xor
nop
mov
mov
arpl
lds
jg
push
popf
out
pop
insb
mov
inc
insb
aaa
aam
enter
das
std
sarb
fbstp
adc
and
inc
jnp
lret
add
test
sbb
lea
ja
ds
ret
sub
inc
das
push
jecxz
mov
push
ljmp
pop
sbb
and
repnz
push
mov
and
jmp
mov
adc
jle
ja
mov
outsl
call
push
adc
adc
dec
dec
xor
loop
mov
ret
jo
loope
int
imul
cmp
push
aaa
lret
into
negl
mov
es
orb
loope
subl
sbb
das
cmp
push
adc
adc
movsl
jg
sbb
xor
mov
test
test
enter
cwtl
pop
jge
inc
sub
xchg
xor
pop
push
mov
pop
jne
push
push
imul
pushf
imul
les
mov
pushf
loope
and
fdivl
stos
imull
addr16
add
inc
xchg
sub
out
cmp
and
andb
or
or
out
adc
or
sbb
inc
cli
les
icebp
adc
mov
insb
xor
add
mov
aaa
aad
fucompp
push
and
cmpsl
daa
mov
or
ljmp
sahf
arpl
pop
pop
pop
cmp
orl
xor
cmpsb
xor
pop
jg
add
jne
outsl
test
mov
push
rcrb
ret
mov
jne
jl
mov
lds
lcall
clc
sub
aas
cli
add
test
xchg
fld1
push
dec
ja
mov
jns
popl
push
out
add
js
les
outsl
cmpl
jg
adc
es
add
js,pt
jns
ds
add
mov
jne
mov
jo
cmp
adc
xchg
icebp
jmp
test
popf
xor
xchg
push
imul
dec
cmpsl
stos
cmp
nop
dec
jecxz
inc
rcl
add
decl
shll
inc
ss
shlb
mov
lock
push
cmp
testl
xchg
int
imul
cwtl
and
bound
in
rclb
cmpsl
mov
pusha
aam
xor
xor
jle
testl
mov
sbb
roll
jne
hlt
pop
pop
out
or
pop
aas
xor
pop
sub
pop
loopne
or
or
and
mov
push
out
xchg
xor
insl
movsb
idivl
inc
inc
jb
ja
and
push
xor
nopl
cwtl
sarl
xor
std
cmp
mov
sub
jns
fs
sar
and
bound
movsb
fwait
mov
push
icebp
push
repz
imul
pop
dec
adc
xor
in
or
or
push
fistps
jnp
jg
sbb
push
mov
ret
dec
mov
fdiv
jb
push
push
xrelease
orl
dec
stos
insl
idivb
sub
mov
je
jo
mov
cmp
cmp
pop
jp
sbb
lret
and
and
dec
mov
pop
sub
incl
loopne
xor
jl
sarl
movsb
fs
je
pop
or
clc
ret
mov
pushf
mov
fidivs
decb
pushf
enter
mov
out
jne
aam
int3
sub
xchg
inc
into
sti
cltd
movsb
xor
je
daa
push
or
or
jge
adc
dec
cs
out
shlb
js
mov
ljmp
push
and
xorl
hlt
cmp
insb
ljmp
adc
psrlq
push
jmp
pop
enter
jmp
mov
sbb
imul
and
cmp
or
cmp
jle
and
adc
cli
in
mov
dec
test
hlt
mov
arpl
fdivrs
dec
call
out
mov
int3
xor
cmc
ret
lods
aad
inc
push
dec
mov
roll
std
pcmpeqd
pushf
imul
jmp
movsb
arpl
in
in
push
sar
xchg
and
mov
clc
sarb
xchg
jae
cltd
clc
xorb
shl
sbb
push
mov
lods
lret
jl
mov
test
in
hlt
adc
mov
add
xchg
rorb
es
add
sub
ror
in
inc
arpl
pop
in
pop
inc
push
lock
adc
mov
stos
xchg
dec
out
pusha
push
cmpsb
xor
adc
rolb
jo
mov
mov
and
les
xlat
or
jg
mov
jl
xor
loope
xor
repz
in
leave
mov
js
inc
jl
outsl
or
dec
idivl
and
aas
xchg
das
ficoml
push
es
xchg
mov
loop
xor
outsb
hlt
add
ret
dec
or
imul
fdivrl
addr16
fcmovu
dec
arpl
mov
cs
sbb
aas
stos
push
dec
ret
mov
cwtl
cmc
fmulp
fs
jae
adc
cmpsb
xchg
lods
adc
pop
cs
fwait
sarb
and
cwtl
cmp
loopne
push
les
dec
pop
inc
pop
xorl
mov
arpl
enter
mov
push
and
lods
popa
pop
push
or
sti
cmpsb
push
pushf
out
inc
inc
and
jb
repz
ret
or
and
aam
inc
fisubrs
std
or
sti
mov
xlat
rcrl
mov
sarb
push
and
adc
ja
pop
sub
jnp
xchg
es
in
lahf
jle
lods
mov
sub
dec
loopne
sbb
mov
fsubr
jb
mov
outsb
sbb
jmp
inc
fwait
xlat
sbbb
dec
in
les
mov
stos
add
in
shlb
jo
cltd
push
mov
movsl
and
jecxz
movsb
mov
jo
push
jb
dec
push
add
in
int
dec
fcoms
aas
mov
out
push
sbb
push
aas
mov
incl
sbb
mov
mov
fldcw
adc
pop
xchg
mov
cmpsb
dec
aad
outsl
ret
gs
fcmovnu
fiaddl
js
shrb
adc
jmp
ljmp
push
mov
inc
das
fstps
or
loope
ljmp
cwtl
jne
sub
jl
mov
fsubs
dec
xor
cmp
and
cmpsb
movsl
out
inc
lock
outsl
in
nop
call
mov
inc
sub
mov
orl
push
test
or
testb
movsl
adc
rcrl
jge
pop
jae
mov
cld
iret
into
imul
push
jge
dec
adc
sub
into
jl
outsb
cmc
loopne
xchg
dec
inc
dec
int3
mov
jo
hlt
add
push
fimuls
imul
sub
scas
cli
push
mov
pop
jno
push
lcall
jno
divb
stos
aas
mov
jge
pop
movsl
jge
push
cmc
jg
push
sub
cmp
or
mov
push
clc
sub
pop
out
cmp
pop
je
xlat
mov
xor
add
push
std
addl
jge
aad
in
sub
inc
pusha
shr
xor
jg
mov
jno
inc
ret
adc
mov
dec
inc
jecxz
pop
ret
xor
data16
fdivrs
pop
and
mov
daa
outsl
pop
pop
add
push
cwtl
xor
divb
rclb
ss
ret
mov
mov
lods
lret
mov
lods
sub
sub
mov
out
scas
ror
inc
aas
mov
fistpll
mov
xor
ror
int
mov
loop
mul
inc
cmp
lea
scas
roll
ss
shrl
idivb
dec
lea
inc
stos
out
sub
mov
repz
xchg
ja
sbb
jno
mov
push
sahf
dec
pop
xchg
hlt
bound
jns
inc
dec
push
xor
insl
stos
push
adc
add
fwait
and
pop
mov
divl
out
add
sub
dec
mov
pop
leave
and
stos
mov
cmp
jmp
mov
inc
lahf
sub
xchg
sub
in
and
push
sarl
pop
or
ret
test
jne
cltd
lahf
or
xchg
scas
jge
aas
cwtl
mov
sbb
dec
stos
in
lds
test
mov
and
push
add
push
arpl
pop
sbb
mov
cmp
outsb
inc
mov
mov
mov
in
inc
push
jns
hlt
or
nop
insb
test
lahf
gs
mov
mov
xchg
jecxz
cld
lea
test
das
inc
jmp
mov
cmpsl
iret
jnp
lods
xchg
sahf
mov
xor
lret
push
stc
and
xchg
add
lcall
ja
and
jnp
sbb
mov
push
outsb
mov
aaa
out
and
iret
cwtl
cmp
sub
icebp
sub
cltd
jne
in
dec
insl
inc
popf
jl
dec
shll
and
mov
jbe
dec
orl
lahf
addr16
cmp
inc
or
in
sarl
ficoml
outsl
mov
cmpsb
scas
subb
push
sub
test
mov
faddl
push
dec
lock
iret
xchg
scas
cmp
subl
adc
mov
in
ds
jle
rcrl
jnp
stos
cmc
repnz
dec
mov
xor
scas
mov
insb
lods
ljmp
fs
mov
daa
pop
ss
or
sub
sahf
jno
rolb
faddl
inc
xor
mov
add
push
push
dec
cmp
dec
iret
ret
cmpsb
lods
imul
js
or
jge
sub
sbb
loopne
cmpsl
cmp
cmp
dec
mov
sub
xor
mov
mov
outsb
push
cmpsb
clc
mov
rcl
add
dec
insb
jmp
xor
stos
or
push
mov
pop
notb
xchg
xor
pop
into
ja
pushf
jg
into
popf
lds
mov
arpl
daa
adc
cmpsl
sub
or
aam
addr16
jb
and
push
mov
leave
insb
dec
push
pop
arpl
dec
gs
mov
mov
pop
xor
clc
arpl
jns
out
mov
mov
js
add
xchg
xchg
mov
and
movsb
addr16
mov
out
std
jnp
shrl
negl
stc
decb
aas
sub
cmp
dec
mov
push
cmp
cmp
rcll
sbb
jnp
jne
adc
in
sub
mov
push
adc
jmp
xor
icebp
mov
push
cmpsl
ret
sbb
mov
arpl
pop
or
add
movsl
pop
jmp
icebp
sub
outsb
jp
int3
sbb
jl
sub
fsubs
push
or
daa
addb
lods
xchg
push
imul
outsb
jmp
rol
mov
sub
xchg
add
fninit
mov
inc
xchg
loop
mov
into
or
xor
rcrb
sub
fistpll
lods
add
and
test
mov
mov
je
xchg
mov
shll
pop
push
adc
pop
dec
adcl
daa
inc
es
in
mov
push
in
cmpsl
pusha
test
in
pop
daa
push
cmp
pop
daa
sub
es
adc
and
dec
inc
sub
sbb
dec
and
imul
leave
pop
jge
xor
ljmp
jmp
je
rorl
xchg
into
jnp
or
push
jae
jp
mov
pop
and
ret
lret
mov
lret
fldlg2
sbb
inc
insl
je
ds
sub
xchg
pop
loop
adc
cmpsb
xor
push
mov
gs
and
push
jo
push
fs
in
fildll
adcl
pop
outsb
nop
cmc
or
mov
cmp
lahf
js
pop
ret
add
lret
stos
xor
rol
dec
fwait
lds
xor
cmp
enter
test
lret
cmpsb
pop
mov
rorl
es
jl
add
test
insb
mov
pop
and
nop
out
add
xchg
pop
xchg
cmc
gs
cltd
xlat
xchg
pop
and
push
insb
mov
mov
lcall
dec
cwtl
rorl
adc
jae
insb
sbb
data16
cwtl
or
inc
aam
xorl
aas
or
fnstsw
fsubrp
mov
xor
ja
add
jl
jge
sti
jecxz
mov
mov
push
pop
testl
mov
mov
adc
or
pop
clc
out
test
int3
je
mov
fcoms
add
ds
inc
clc
push
sub
idiv
fstl
je
adc
push
loop
cmp
dec
scas
inc
mov
js
xor
mov
popf
mov
push
push
sbb
adc
cmpsl
sbb
je
out
int
or
sub
lods
sarb
mov
pushf
adc
inc
mov
and
les
sub
movsb
ljmp
in
mov
xor
sub
mov
sti
inc
lret
lcall
add
test
or
iret
and
add
or
add
les
mov
scas
arpl
xor
push
cmp
adc
mov
nop
inc
mov
enter
dec
sbbb
cld
pop
jbe
lret
jno
inc
arpl
sbb
loopne
mov
pop
and
mov
fsubrl
in
and
pusha
and
sbb
xorb
xor
pop
in
repz
js
jbe
stos
cmp
xchg
nop
xchg
xor
jmp
aaa
test
stos
icebp
pop
imulb
and
xchg
push
enter
imul
cwtl
mov
loopne
xor
insl
push
mov
mov
jb
push
lea
pop
aad
fisttps
pop
jg
mov
fbstp
mov
cmp
jbe
aam
push
out
lds
imull
insb
pushw
sbbl
lods
jae
popa
jne
xor
ja
in
xor
push
xchg
adc
pushf
stos
in
shll
orl
in
jno
lods
jle
mov
sub
inc
push
addr16
push
loope
sbb
in
mov
push
push
dec
mov
out
and
jge
insb
sub
pop
movsl
adc
notb
jmp
jge
shlb
inc
sbb
mov
mov
mov
nop
push
push
stc
call
cmc
incb
shlb
flds
insl
push
fwait
or
shll
xor
pushf
lahf
add
mov
in
iret
xor
sub
test
add
incb
xchg
push
loopne
seto
out
sarl
ds
and
sbb
or
cmc
aas
xor
sub
int3
es
stc
cmp
rcr
out
sub
fidivrl
xor
sarb
popf
mov
push
shlb
inc
fsubl
addb
aaa
mov
dec
fcmove
sti
ret
rorl
test
pop
addr16
or
das
or
dec
xchg
add
aad
aad
mov
pushf
in
insb
and
arpl
stos
and
sar
cmp
push
inc
push
lods
push
out
fisubl
daa
shl
imul
out
stos
push
fs
stc
jnp
push
pop
jmp
rorl
adc
mov
add
orb
cmp
sahf
or
xchg
pop
rorl
mov
shlb
mov
lahf
sarb
add
xchg
add
mov
sbb
loope
push
jg
movsb
sbb
and
in
sbb
mov
pop
in
jmp
icebp
scas
dec
test
and
adc
into
iret
push
mov
pushf
pop
jno
cltd
sub
or
push
inc
and
jmp
push
adc
add
stos
adc
mov
insb
jnp
dec
or
push
cld
outsb
push
pop
xchg
push
daa
sarb
repz
lret
outsl
xchg
mov
aas
les
nop
lds
add
push
mov
or
scas
dec
aad
mov
mov
mov
push
imul
sbb
imul
cmp
adc
fisttpl
stc
jae
loopne
sbb
ss
xor
fistpll
mov
xchg
add
and
jg
cltd
and
loope
pop
sbb
daa
dec
dec
negl
mov
in
call
nop
cmp
fdivs
sub
mov
sar
push
push
fsubrp
scas
pushf
imul
das
mov
dec
jmp
pop
cmpb
inc
movsl
add
pop
les
outsb
dec
rol
and
leave
arpl
sti
or
mov
sbbl
mov
vpcmpeqb
js
fcmovnbe
lret
call
and
mov
pop
out
pop
cmp
fxch
ss
lret
add
push
cmpl
sub
imul
push
push
add
mov
bound
mov
lock
push
outsl
cmovl
sbb
stos
and
mov
xlat
dec
sbb
jge
jmp
cwtl
sub
int
das
inc
pop
dec
aas
lea
lret
test
es
inc
js
ret
fimull
cli
loope
and
xor
ss
or
xor
mov
ret
mov
daa
push
aad
jmp
filds
jmp
push
imul
cmp
dec
daa
lcall
pop
xlat
or
adc
js
nop
loope
notb
push
cmp
dec
mov
or
jg
mov
test
sahf
push
sub
in
or
test
adc
dec
add
mov
cmp
shrl
jl
lds
lret
scas
nop
pop
xor
ja
mov
int3
jbe
ficoml
mov
sbb
popa
cmp
test
mov
adc
or
sub
dec
push
xor
fsts
cmp
aam
std
sbbb
addr16
hlt
arpl
push
xor
loop
mov
bnd
jp
call
jl
data16
mov
es
jns
sbb
lcall
ss
sub
repnz
dec
call
cmp
out
push
sub
sbb
out
mov
sti
data16
jo
pop
dec
fstpt
mov
xor
pop
fmuls
lea
sbb
dec
or
ss
rdpmc
or
ljmp
pop
ret
int3
or
lea
jns
mov
jns
sub
cwtl
sbb
leave
or
push
rcrb
shlb
cmovg
xor
cmp
inc
mov
jmp
add
cs
mov
push
test
adc
push
lock
mov
push
cld
dec
div
fcomi
neg
int3
sbb
adcl
and
sbb
ds
dec
xchg
mov
inc
jne
or
adc
mov
dec
mov
xchg
or
cmp
mov
mov
mov
stc
jmp
stos
sub
lcall
cli
mov
and
jecxz
xor
test
or
imul
sbb
loop
psubb
rorb
loop
cmp
jp
in
push
inc
push
subb
es
mov
ljmp
and
adc
pop
nop
add
adc
dec
jmp
add
sub
fstl
or
adc
mov
sbb
dec
int
mov
pusha
cmp
cmp
hlt
cmp
add
sbb
scas
mov
push
adc
lahf
xchg
xchg
sub
ret
push
mov
fst
lods
and
sub
sbb
dec
into
inc
lret
mov
push
testb
jnp
adcb
xchg
xchg
adcl
mov
pop
movsb
cmp
call
scas
mov
mov
clc
ljmp
dec
push
and
inc
mov
out
cli
mov
das
xor
je
or
fs
dec
mov
lret
outsb
mov
dec
lds
insb
xchg
push
movl
jecxz
out
jbe
push
lods
dec
inc
popa
xlat
cmpsl
mov
je
sub
add
test
sbb
sarl
pushf
test
dec
mov
and
dec
sbb
push
sahf
pop
and
xchg
lock
in
and
sbb
or
push
xor
sbb
out
dec
or
ja
push
xor
mov
outsl
mov
mov
cmp
mov
add
or
or
insb
lods
and
xchg
cmp
lcallw
jns
mov
jmp
push
test
iret
inc
movsl
decb
sub
ret
out
insb
xchg
xor
xchg
mov
lea
rorl
pop
xchg
ljmp
popa
es
daa
mov
es
mov
iret
mov
xchg
or
lea
hlt
adc
dec
sbbl
pop
cmc
fstp
ret
push
or
dec
scas
inc
jmp
xchg
mov
jno
push
push
mov
cmp
ret
cmp
ss
xchg
xor
jle
cld
mov
pop
mov
loopne
shrl
scas
mov
int
mov
faddp
ret
sub
bound
sub
mov
adc
and
js
and
lds
add
sbb
xchg
inc
mov
outsb
iret
or
mov
imull
sub
inc
and
or
das
repnz
mov
mul
mov
mov
dec
cvtpi2ps
fcompl
sbb
dec
call
ss
mov
das
inc
ret
mov
adc
cmpsb
inc
test
es
mov
xchg
lods
xor
adc
sub
sti
out
pop
xchg
out
pop
pop
inc
inc
push
hlt
cmp
pushf
sbb
js
or
jnp
fsts
loope
test
pop
shrl
nop
fbstp
sub
pop
icebp
out
stos
pop
push
cmpsb
loopne
pop
xchg
insb
jae
xor
inc
cmc
and
leave
aam
loope
sbb
push
aas
and
in
dec
test
arpl
mov
push
and
aaa
sub
pop
outsb
jns
dec
inc
ljmp
cmp
or
stc
not
or
pop
stos
xchg
popf
scas
xor
push
jge
mov
test
jge
test
xor
pop
pop
lcall
add
mov
push
aad
sbb
jle
cmp
mov
shl
pop
cmp
lcall
xchg
jo
mov
mov
lcall
mov
scas
mov
inc
sti
jle
test
mov
xchg
jne
outsb
jae
push
imul
jno
jo
je
inc
push
sbbl
xchg
sbb
scas
lahf
xlat
out
mov
push
fsts
loope
cwtl
and
and
xor
in
shll
inc
shrb
ret
pop
roll
mov
xchg
mov
gs
and
nop
daa
das
sahf
push
dec
adc
rorl
adc
jne
and
jnp
inc
xor
mov
sub
decb
nopl
jge
out
pushf
mov
pop
or
or
mov
sarb
iret
mov
adc
dec
mov
jmp
rolb
icebp
sbb
add
insl
hlt
rolb
popf
jle
cmpsl
xchg
movsl
mov
push
das
cmpsl
aam
lret
adc
push
sahf
add
push
int
hlt
inc
xlat
je
cmpsl
cmp
rolb
jnp
fmull
je
hlt
cltd
leave
mov
mov
mov
mov
shll
sbbl
and
jno
cmp
bound
scas
fimuls
ds
loop
dec
cmpb
movsb
xchg
push
mov
jb
mov
cltd
sub
mov
repnz
pop
xchg
push
xorl
mov
push
shrb
subl
ljmp
sti
sub
mov
mov
sub
and
sub
out
inc
out
xor
xchg
fidivl
nop
cld
sbb
mov
mov
lret
pop
cmp
ss
shll
adc
test
push
lahf
sub
sbb
js
imul
push
jno
ss
aas
daa
lods
dec
inc
dec
sub
fdivs
mov
pop
fdivr
sub
imul
sahf
adc
loop
pop
xor
or
mov
xchg
pop
or
push
std
inc
adc
push
xchg
sub
xchg
pop
call
icebp
imul
add
mov
push
xor
arpl
jge
dec
rorb
in
sub
int3
add
sbbl
ret
rclb
pop
fildl
add
sub
push
mov
adc
pop
dec
xor
out
outsl
or
xor
mov
mov
lcall
addr16
dec
sub
xor
stc
pushf
movsl
test
es
clc
mov
push
xchg
iret
js
fimull
lods
cld
xlat
decl
or
loope
aad
orb
les
mov
leave
jo
mov
fimuls
push
sub
and
outsb
lret
pop
lahf
sbb
jno
mov
cmp
push
dec
lcall
lods
pop
and
imul
push
sbb
push
lcall
fnop
xchg
mov
jl
rcr
inc
or
add
jp
sub
adc
mov
mov
cmp
test
ljmp
add
jp
leave
push
xor
xchg
jno
lahf
sbb
sub
test
mov
push
push
mov
cs
jnp
daa
stos
insl
sahf
js
dec
aam
je
das
ret
cmpsl
and
cmpsb
scas
mov
and
dec
push
divb
jmp
cli
in
scas
je
push
jae
cmc
jp
arpl
or
and
cmp
loop
sbb
push
pop
mov
mov
stos
fsubs
cwtl
adc
cmp
xchg
pop
cvtps2pd
pusha
negl
aaa
lea
jbe
pop
loopne
sbb
xchg
and
into
out
xor
stc
pop
sbbb
jns
sarb
add
cmpsb
testb
push
repz
jl
pop
pop
fwait
popw
and
mov
xor
mov
mov
mov
dec
jbe
in
xor
cli
adc
in
jecxz
adc
sbb
push
dec
arpl
insl
mov
mov
sbb
test
movsb
mov
lods
mov
xlat
nop
inc
or
pop
shr
add
addr16
cmp
push
lods
ret
mov
mov
xchg
xorb
cli
jle
push
add
jmp
mov
lret
mov
bound
add
aad
sbb
test
inc
lock
jno
ljmp
jnp
jmp
cltd
xchg
cmp
loop
in
std
arpl
and
cmp
addr16
add
xor
pop
fs
cld
jnp
inc
hlt
xchg
imull
push
mov
jo
xorl
cmovb
sbb
pusha
inc
data16
insl
movsb
lcall
js
inc
out
xchg
sti
cmpsb
mov
jns
add
mov
rcrb
push
dec
pop
sbb
aaa
int3
dec
lock
cmp
pop
mov
xchg
nop
push
add
mov
add
mov
sbb
cmpsb
xor
aam
in
or
fsubr
and
rorb
mov
pop
sub
jb
xchg
int
in
test
xchg
dec
outsl
xchg
bound
sbb
das
cmpsb
in
fsubl
inc
dec
movsb
mov
sbb
jg
pop
mov
pop
pop
dec
push
sbb
mov
xor
push
leave
rolb
xchg
dec
jmp
sub
aas
xchg
or
sub
lcall
mov
xor
push
xlat
mov
pop
sub
xor
scas
test
subl
xchg
ljmp
mov
in
pop
add
dec
sarb
or
xchg
icebp
ret
pop
push
fwait
into
popa
add
mov
jmp
jle
pop
popa
jle
cmp
pop
xor
dec
sbb
sub
jmp
ret
xchg
in
stc
sub
mov
sbb
scas
sbb
lods
mov
lea
movsl
mov
sbb
push
ljmp
aam
loope
in
stc
push
clc
push
incb
cmc
rorl
xor
cmpb
pop
out
cmp
in
xchg
pop
loopne
lcall
inc
imulb
push
fimuls
mov
push
lret
sbb
pop
jo
mov
popf
sbb
sahf
push
xor
jmp
mov
sub
cmc
pop
iret
xchg
in
push
stos
mov
mov
ja
xchg
cs
cmpsb
rorl
std
mov
xchg
pushf
popa
dec
popa
call
out
push
mov
push
jmp
or
xchg
mov
and
push
addb
ret
jns
pop
je
rcll
add
mov
ficomps
scas
outsl
lods
xlat
gs
fistpll
jae
mov
stos
adc
dec
mov
mov
loop
add
ficoms
dec
xchg
cmp
rorl
cmpsb
push
cmp
pushf
cwtl
push
js
xor
and
nop
xchg
icebp
std
into
rclb
arpl
enter
mov
lcall
and
in
sbb
cmpsl
mov
ljmp
fists
jge
dec
mov
and
test
add
rcll
dec
push
lods
es
mov
scas
mov
xor
fisubl
addb
jo
xlat
xor
ficoms
imul
fwait
lea
jne
shl
jp
jge
mov
fwait
cmc
jmp
pop
testb
inc
imul
fsubrp
jb
add
pop
dec
push
jmp
andl
push
jo
mov
inc
cmp
ret
lds
jp
les
out
mov
inc
xor
stos
jle
roll
inc
fs
les
scas
lods
add
call
sbb
pop
sahf
mov
cmp
clc
rcr
dec
push
es
mov
dec
andb
imul
or
movb
subl
mov
jnp
adc
pop
mov
fldcw
dec
and
jmp
push
mov
es
test
repz
cmp
fisubrs
bnd
inc
nop
inc
sub
mov
mov
adc
jb
ret
cmpsl
mov
es
add
dec
ret
sbb
mov
adc
xchg
mov
pop
ljmp
into
cmp
jb
inc
orl
xor
push
pop
mov
js
pop
ret
push
cmp
mov
ret
ret
popf
or
jb
cmc
arpl
or
dec
pop
data16
mov
pop
mov
cli
jl
dec
or
mov
cwtl
add
or
mov
inc
je
cld
arpl
add
out
or
jnp
clc
cltd
xor
cmp
notb
fdivrp
je
daa
rorb
jb
idivb
fdivrs
inc
imul
addb
push
ss
jecxz
add
sbb
stos
jp
icebp
mov
xor
push
xorb
movsl
xor
dec
test
mov
adc
dec
xchg
das
jbe
jmp
out
test
cmc
mov
sub
dec
popa
insl
and
lahf
gs
pop
sub
lcall
cmc
push
mov
call
shl
insl
mov
mov
inc
jne
mov
aaa
mov
mov
ja
xlat
enter
sbb
push
sub
arpl
out
pop
adcl
push
mov
pop
das
push
mov
mov
dec
andl
xchg
or
pop
add
sti
divb
adc
lret
mov
sti
pop
mov
nop
imul
cli
mov
dec
nop
pop
jno
in
mulb
inc
ljmp
int3
push
adcb
mov
sub
sbb
popf
push
and
jg,pn
fistpll
add
push
lret
xchg
out
pop
sbb
lahf
or
ss
rolb
ret
and
jl
pop
cmp
pop
ljmp
push
adc
mov
test
cmpsl
pop
cmpsb
sub
push
sub
mov
hlt
ja
pop
lret
inc
les
xor
mov
push
jbe
lcall
xor
dec
insl
rcrl
jbe
out
dec
push
dec
in
xchg
aad
fwait
add
scas
out
dec
nop
inc
jns
mov
xor
leave
inc
and
icebp
pop
sub
sub
jmp
sarl
cltd
push
jns
fisttpll
mov
scas
mov
xchg
jecxz
mov
add
and
subb
dec
and
inc
rclb
fsubrp
es
and
std
cmc
jbe
out
pushf
inc
jo
jne
jecxz
push
fwait
mov
popl
out
mov
aas
sbb
mov
pop
int
xlat
stc
jp
in
rclb
adc
jecxz
jne
mov
ficoml
adc
push
and
movd
cmp
sbbb
jmp
ds
xchg
add
enter
mov
push
xor
les
idivl
cmp
rorb
aaa
cs
inc
mov
mov
push
xchg
or
out
mov
dec
sub
mov
xchg
cmp
jns
xor
mov
or
xor
xchg
ja
and
andl
arpl
clc
insb
sti
aad
fwait
jb
cmp
cmp
scas
jmp
call
hlt
sub
pop
inc
push
movsb
xchg
leave
sar
imul
cltd
lods
repnz
push
xor
bound
cmpsl
add
fstps
dec
sub
adc
imul
mov
cmp
jp
jne
shlb
adc
cmpl
fnstenv
dec
repz
scas
mov
dec
mov
lods
dec
test
pusha
subb
cli
mov
popf
pop
cmc
dec
dec
jae
push
aad
inc
mov
mov
inc
cmp
mov
pop
pop
data16
mov
pop
xor
sbb
out
ret
mov
bound
je
mov
pop
jne
cmpl
call
ret
xchg
jae
out
jl
mov
adc
shll
jl
mov
testl
xor
out
cli
adc
aaa
loop
cmpsl
inc
cmp
cmp
call
mov
jns
xor
xor
lcall
dec
jnp
loopne
test
iret
cmp
fisttps
out
dec
and
int3
push
repz
roll
xchg
pop
jo
xchg
pushf
popf
pusha
mov
xchg
out
sbb
mov
jnp
std
push
icebp
and
mov
cs
cs
xchg
xor
loope
push
bndstx
adc
pop
push
pop
stos
mov
mov
cmp
add
mov
pop
clc
enter
xlat
popa
in
push
lcall
call
jmp
sti
sbb
out
cmp
mov
and
test
daa
lret
fld1
mov
mov
and
mov
xor
xor
icebp
xlat
mov
sti
or
xor
jne
rcr
pop
testl
outsl
movsl
mov
mov
scas
and
pusha
stc
add
imul
shlb
cmp
or
inc
pushf
rorl
imul
out
ja
cmp
xchg
push
mov
mov
mov
dec
rol
js
xchg
add
mov
hlt
jg
jnp
mov
roll
xor
xchg
push
enter
and
in
out
ljmp
addr16
mov
es
mov
xchg
pop
sub
leave
xchg
jae
hlt
int
es
push
xchg
xor
inc
pop
mov
bound
roll
sahf
or
fstl
mov
dec
addb
xor
mov
imul
jno
xor
and
sahf
out
lds
adc
lret
pusha
inc
cmc
dec
lcall
and
cld
jle
inc
cli
inc
icebp
fisubs
fildll
adc
sub
cmp
cli
mov
xchg
hlt
jb
in
ljmp
out
cmp
jl
mov
xor
xor
xor
cli
and
jmp
jnp
xchg
mov
xchg
lock
xchg
pop
cmpsb
mov
lods
adc
stos
jmp
adc
mov
add
sbb
lret
sub
int3
push
push
fnsave
add
mov
inc
iret
dec
ss
subb
push
mov
mov
inc
addr16
jo
pop
cmp
loope
xor
jle
pop
fidivs
cltd
mov
or
shrb
mov
xchg
push
lds
xor
push
in
adcb
xor
leave
cmp
dec
cli
lea
push
jae
fdivs
jns
mov
push
icebp
into
dec
iret
scas
and
ljmpw
popf
dec
nop
leave
sbb
mov
xchg
test
sbb
push
cltd
imul
sbb
jns
mov
stos
aas
and
inc
fwait
pop
cmc
ret
movsl
jno
sbb
xor
adc
add
or
push
push
cmp
cwtl
mov
sbb
loope
repz
aas
bound
es
adc
dec
in
add
inc
or
xchg
push
aas
mov
push
lds
decl
pop
rclb
popa
jae
pop
ficompl
loopne
adc
xchg
push
push
pop
pop
push
stos
in
pusha
stos
inc
scas
pop
sbb
das
in
add
mov
cmp
imul
sahf
out
sahf
and
cmp
xor
dec
int
sub
jle
movsb
cmp
cmp
push
mov
lock
pop
pushw
pop
js
outsb
inc
stos
fnstsw
and
lahf
cs
arpl
out
pop
add
dec
mov
or
adcl
cwtl
shrb
outsb
push
mov
bound
shrl
faddp
adc
dec
pop
mov
test
mov
int3
jle
movsb
clc
add
push
aad
fisttps
pusha
rorl
repnz
cld
repnz
imul
and
push
mov
lea
cmp
push
fnsave
mov
fdivrs
pop
pop
out
sti
sbb
xchg
sub
or
ljmp
xorb
in
adc
and
jge
lret
repnz
mov
and
hlt
test
xchg
dec
outsl
jb
cmpsl
pop
xor
cld
insb
lds
insl
nop
xchg
push
pop
sbb
in
insb
scas
sbb
dec
rorl
jo
stos
sahf
xor
js
and
out
sahf
addr16
xchg
data16
mov
mov
lret
add
xchg
push
sub
jge
repnz
adcl
mov
pop
mov
jl
cmp
xchg
or
adc
fs
add
jecxz
in
movsb
xlat
shlb
sbb
out
icebp
adc
xchg
xorb
and
sbb
push
cmp
adc
std
ret
icebp
pop
nop
sbb
xor
call
rcrl
stos
test
rolb
xchg
sbb
adc
add
mov
xlat
outsl
mov
jecxz
push
aaa
insl
sbb
call
movsl
push
loop
rcl
mov
outsl
das
or
jnp
cs
das
inc
popf
mov
insb
cmpsb
xor
and
call
into
and
nop
ljmp
sahf
dec
and
fxch
sahf
ret
or
std
test
test
bound
mov
in
add
jg
push
sub
repnz
mov
gs
or
test
adc
add
jo
faddl
sub
gs
mov
cs
addr16
push
inc
pop
push
pusha
inc
inc
popf
test
lods
gs
mov
lcall
insb
mov
out
sub
mov
mov
pushf
ds
cmp
xchg
dec
popa
push
jns
sub
pop
data16
or
call
jns
adc
loopne
repnz
mov
mov
inc
clc
gs
or
popf
push
rol
adc
rol
cmp
repnz
cmp
mov
cmp
push
adc
loope
fistps
pop
ss
movsb
cmpl
push
cmp
test
int3
or
addr16
xchg
push
clc
shlb
add
push
das
xlat
mov
jbe
cli
sub
outsl
aas
inc
mov
fs
push
mov
scas
loopne
mov
cld
pop
ss
adc
andb
xor
inc
movsl
jle
jecxz
mov
xchg
ror
xchg
push
mov
add
loopne
pop
jp
jnp
dec
adc
push
fildll
fwait
mov
popa
call
call
jb
movsb
nop
xchg
dec
xchg
sub
fcomi
mov
movsl
and
mov
loop
xchg
cld
out
jg
mov
pop
jmp
insb
icebp
inc
adc
orb
mov
xor
notb
push
aas
lret
ja
sub
fcoml
lret
mov
arpl
xor
mov
arpl
cltd
dec
inc
push
sub
js
in
sub
pusha
push
sub
fcompl
push
jl
jb
dec
push
mov
cmpsb
cmp
or
ljmp
lods
dec
mov
dec
lret
cmpb
sub
ljmp
imul
mov
jb
call
xor
shll
xor
or
movsb
shlb
push
dec
in
sub
lods
or
cld
sbbb
or
inc
pop
stc
cmp
sbb
xor
push
bnd
add
sti
sub
and
pop
orl
add
fwait
inc
std
xchg
mov
and
fnstenv
daa
pop
int
test
or
mov
and
stos
fdivrs
jge
test
cmp
adc
lret
jge
stos
push
mov
dec
mov
mov
sbb
repnz
je
pop
aaa
hlt
iret
mov
and
and
stos
int3
jne
das
ljmp
int
dec
filds
and
jnp
int3
sbb
imul
aam
cltd
mov
fadds
push
push
lret
movsb
pop
ds
add
mov
pop
jne
or
adc
lcall
ljmp
sbb
jmp
sub
fsts
cli
mov
cld
insb
lods
pcmpgtd
push
mov
enter
mov
add
inc
mov
sub
sbb
test
cmp
call
xor
xchg
insl
cltd
test
mov
jae
test
mov
xlat
lea
push
push
sbb
enter
or
loop
ret
and
pusha
xor
xor
shr
push
xor
cmp
cltd
lea
sub
push
adc
data16
pop
push
hlt
cld
icebp
int3
fsubs
out
xor
mov
cli
jle
lods
or
xchg
aas
mov
or
push
imul
and
int
xor
fwait
sbb
push
ljmp
push
dec
pop
xchg
cmpsb
push
fwait
pop
and
test
testl
mov
testl
inc
and
xchg
push
dec
dec
and
aaa
pop
push
faddl
dec
and
je
stos
lahf
cmp
loopne
daa
xor
xlat
into
not
loop
push
pop
mov
js
xchg
cmp
sub
gs
and
sarb
cltd
in
mov
sarb
mov
mov
and
leave
ljmp
ret
cmp
stc
mov
sub
dec
xor
jecxz
fisttps
fldt
pop
jnp
xchg
mov
push
xchg
loop
insl
je
test
lcall
xchg
jo
mov
lcall
out
push
mov
xor
enter
xor
stos
xchg
dec
int
loop
lods
pusha
test
outsl
loope
inc
into
into
sub
rcrb
xchg
iret
shll
sbb
jp
mov
js
subl
gs
idivl
and
ss
adc
btc
mov
sahf
pop
cmp
dec
sti
xor
imul
xlat
add
lret
cmp
lods
mov
loop
testb
and
sbb
or
call
adc
imul
imul
pusha
inc
outsb
lret
lock
sarb
mov
inc
shrb
int
idivb
clc
repz
div
sbb
cmp
jae
les
imul
aas
out
aas
clc
jl
push
ficomps
fdivs
orb
popf
mov
fstp
jns
gs
sub
push
stos
imul
sub
popa
adc
inc
out
adc
in
sar
mov
xchg
sub
fsubr
sbb
adc
adcl
dec
push
rcrl
xchg
push
jge
xchg
shrb
push
cli
fldenv
sbb
adcb
push
fcmovne
hlt
sbb
push
sub
pop
sarl
rorl
jbe
xchg
out
xor
shlb
jns
addl
pop
pop
stos
cmp
jl
cltd
cmp
pop
sub
ret
cli
dec
ret
addr16
pop
loopne
add
mov
mov
aas
and
dec
fwait
into
sbb
call
inc
xchg
push
pop
xlat
insb
dec
lcall
lea
jecxz
inc
repz
xchg
ret
adc
shrl
mov
jecxz
mov
jno
out
cmp
or
lret
out
jg
mov
lcall
in
push
dec
aam
loop
scas
mov
pop
cmpb
sub
inc
in
in
lock
sub
movsl
sub
mov
jb
test
fsubl
rorb
daa
xor
loop
mov
jb
aaa
xor
aam
out
sbb
das
movsb
sub
jl
in
ret
add
push
fiadds
and
xchg
and
adc
in
mov
call
shlb
cmove
std
enter
jb
or
je
mov
pop
xor
imull
sub
shll
inc
cmp
push
push
aad
xchg
adcl
adc
jnp
loopne
and
mov
xchg
jge
jmp
adc
cmp
dec
pop
sbb
mov
inc
sub
fistl
orl
sarl
mov
pop
call
lods
inc
jg
stc
in
hlt
or
int3
mov
les
cmp
ds
jl
add
xchg
hlt
sbb
adc
jbe
je
testb
pushl
xor
fwait
mov
push
int3
gs
dec
movsl
ja
leave
out
pop
add
lock
lods
cmp
xchg
and
clc
mov
bound
in
outsb
rcrl
and
stc
lahf
or
ret
mov
dec
jmp
fwait
adc
adc
push
sub
sar
xor
es
into
cmpsb
add
in
addr16
pop
pop
mov
leave
xchg
jle
clc
jns
add
std
inc
inc
xchg
ret
cltd
cwtl
rorb
lret
pop
sti
in
inc
jmp
xor
jecxz
push
pusha
lret
mov
fiaddl
sti
jne
dec
jmp
dec
sbb
and
xor
push
mulb
mov
imul
lea
loope
add
pop
pop
fisubs
out
dec
ret
push
js
popf
dec
and
shl
fs
fs
sbb
lods
sarl
add
sub
push
in
daa
sti
cmp
sub
int
sbb
das
les
and
movsl
aam
xorb
nop
sbb
hlt
inc
hlt
sub
into
cld
stos
jne
fnsave
adc
cwtl
mov
jns
outsl
fwait
cmp
inc
loope
stos
pushf
or
jg
add
mov
jecxz
test
jnp
mov
jae
sub
out
scas
movsl
mov
push
fstp
test
shlb
lea
adc
pop
xor
aaa
mov
xor
pop
mov
add
leave
or
jp
pusha
flds
in
fldt
inc
xor
rcrb
in
xchg
lcall
std
fstl
lods
jle
dec
shlb
mov
xchg
xchg
out
test
cmpsb
add
test
lds
sahf
cmp
js
and
repnz
xlat
push
inc
mov
outsb
sbb
jnp
fidivs
lahf
mov
mov
sub
dec
push
mov
cmp
insl
cmp
mov
sbb
pop
cmp
inc
push
dec
and
rorl
lcall
pop
pop
sbbb
jae
inc
jp
in
adc
lods
jp
pop
sahf
pop
sbb
push
inc
aad
pusha
xchg
ds
cmp
int3
dec
sub
dec
lret
mov
iret
hlt
jae
gs
sub
jmp
sub
mov
hlt
loope
mov
test
pop
or
mov
sub
out
and
cs
loopne
mov
pop
rcrb
sbb
adc
dec
ja
call
xchg
mov
cwtl
adc
in
stos
cmp
mov
insb
mov
push
loope
fimuls
inc
fstpl
dec
out
pop
jle
leave
fnstsw
push
jge
shlb
or
mov
ficoms
icebp
sub
adc
rclb
xchg
loopne
ret
adc
cmc
xchg
jns
inc
mov
lahf
fdivrl
jo
inc
push
aad
sahf
lods
test
inc
vsqrtsd
sbb
ror
ficoml
sub
scas
ret
push
mov
xchg
ds
xor
xor
cmp
mov
mov
movsl
aad
rorl
imul
sbb
jp
lds
movsb
or
ficoms
roll
xorb
dec
dec
or
addl
pop
push
cmp
cwtl
ret
and
push
divl
shll
insl
xor
in
xchg
mov
js
call
fadds
imul
add
out
mov
pusha
and
and
les
les
cwtl
jno
jge
pcmpgtb
shlb
or
cltd
nop
or
rcll
sub
imul
push
scas
xchg
out
push
adc
stc
mov
daa
addr16
pop
pushf
fwait
mov
mov
mov
and
ds
test
lods
pop
xchg
testl
mov
add
mov
scas
xlat
jne
inc
xor
pop
inc
push
lahf
xchg
orb
movsb
mov
dec
das
mov
adc
popa
ret
add
movsb
lret
mov
insl
xor
dec
push
cs
leave
pop
fstl
sarb
imul
lods
call
jno
dec
mov
scas
push
pop
mov
fldt
mov
outsb
int3
fmulp
scas
cli
test
test
jae
insb
test
or
push
push
mov
jns
mov
add
lcall
dec
incl
addb
mov
addr16
xchg
jl
pusha
ret
inc
xchg
sub
sbb
mov
mov
add
sbbb
shl
hlt
gs
inc
and
je
je
leave
push
dec
cmp
jns
fwait
mov
mov
or
imul
daa
lock
sbb
add
cmpsl
pop
inc
pop
jl,pn
fwait
push
fwait
mov
out
mov
rorl
sub
das
adc
flds
clc
pop
popa
stc
shrb
incl
xor
call
cmp
leave
cmp
mov
cmc
mov
aam
insb
ljmp
in
sub
repz
insb
push
fnsave
push
pop
dec
mov
xchg
adc
push
dec
imul
inc
arpl
out
leave
pop
stc
outsl
pop
fistpl
pop
xor
inc
push
push
bound
sbb
push
test
notb
fcoml
pop
xor
rolb
std
jns
dec
cmp
insb
ret
inc
sti
inc
inc
shrl
mov
push
jns
sub
arpl
and
ljmp
cltd
rclb
into
pop
test
push
sti
mov
incb
arpl
hlt
lods
xadd
push
in
fs
sti
jmp
jno
jae
test
mov
loop
pusha
or
mov
sub
xchg
int
jecxz
mov
sub
daa
inc
mov
insb
lcall
inc
outsl
adc
leave
mov
nop
mov
in
sub
or
fdivrl
test
xor
inc
jae
test
lds
add
mov
insl
addr16
lcall
jno
test
js
xor
jp
pop
push
push
mov
nop
addr16
dec
scas
shl
mov
adc
xor
xor
push
dec
push
xchg
xor
dec
mov
jo
rolb
mov
data16
std
imul
add
push
push
pop
and
icebp
das
popa
fdiv
mov
int3
stos
es
jae
cmp
mov
fs
jno
ret
loope
xchg
insb
mov
inc
stos
fisubl
cmp
or
shlb
pop
lahf
clc
testb
popf
into
lahf
cld
sahf
out
pop
dec
and
cmp
dec
arpl
js
and
subb
in
jp
movsl
out
inc
mov
lods
stos
jl
lahf
inc
push
das
lea
xor
sub
fsubr
push
mov
cs
inc
xor
test
cmp
jmp
push
mulps
jo
shr
rclb
outsb
jnp
mov
and
inc
fnstsw
into
lahf
sbb
push
pushf
jmp
out
negl
jg
jmp
outsl
cmc
les
hlt
lds
movsb
jnp
cmpl
or
xlat
arpl
bound
scas
xor
mov
sbb
sar
sbb
imul
and
push
cmp
jns
inc
leave
push
cmp
xadd
lds
mov
test
lret
rclb
in
xchg
test
es
out
adcl
mov
imul
xchg
mov
jp
and
lock
adc
inc
xchg
stc
push
shll
std
sbb
ds
fidivs
jbe
sahf
loop
out
xchg
mov
and
lods
aam
aad
sub
or
arpl
and
inc
jae
add
cmovne
ja
dec
gs
ror
out
je
or
xchg
cmp
cmp
fldenv
shl
into
jb
add
imul
and
lock
and
stos
mov
das
jne
hlt
insl
sahf
rorl
cmp
and
xlat
xchg
aas
outsb
pushf
lock
loop
jbe
mov
imul
and
mov
shrb
and
mov
icebp
daa
mov
sbbl
add
cmp
cld
cmovb
daa
mov
sub
mov
test
test
inc
mov
add
pop
cli
fmul
lahf
test
fbld
mov
xchg
loop
into
xlat
scas
cli
js
mov
pusha
arpl
jno
mov
jne
dec
xchg
and
push
xchg
or
push
out
mov
daa
cmp
or
xchg
mov
mov
push
inc
xchg
shlb
aad
inc
or
mov
cmp
jl
flds
ja
mov
lods
cmp
push
imull
dec
mov
test
jp
mov
mov
cmp
rcll
cmp
lods
mov
leave
sub
or
lock
cmp
mov
pushf
fistpll
mov
fs
xor
add
add
jno
loope
rclb
jmp
cwtl
sub
jno
or
repnz
jl
and
pop
or
gs
cmc
mov
imul
sub
cmp
cmpsl
mov
out
cmp
ret
popf
jmp
mov
inc
add
rorb
fldl
push
aaa
stos
push
stos
sub
push
mov
xchg
jo
repnz
lea
or
push
sub
leave
roll
popf
iret
fnsave
pop
jp
sbb
fs
sbb
inc
inc
push
and
and
mov
bound
arpl
insl
jae
xor
jnp
xchg
xchg
enter
push
pop
mov
xchg
sahf
mov
mov
lds
push
pop
pusha
pop
aam
jno
divl
repz
mov
test
mov
ret
aad
add
cmc
xchg
xor
cmc
add
and
pushf
fbld
aam
fwait
xchg
mov
clc
nop
xchg
or
les
loope
scas
shrl
cmp
into
and
jno
leave
das
lea
jbe
roll
or
jo
negb
sbb
insl
mov
sub
inc
pop
mov
out
shll
pushf
add
mov
and
jne
mov
ret
icebp
mov
pop
sub
xlat
mov
je
mov
ror
mov
push
leave
sbb
pop
push
aam
push
idivb
mov
loope
pop
shr
leave
into
dec
popf
mov
and
aas
test
fidivl
stos
sub
pop
rorb
or
mov
fs
push
mov
xlat
mov
pop
jno
fdivrl
cli
push
inc
jl
movsl
loope
scas
cltd
dec
enter
pop
in
push
mov
and
pop
mov
cld
in
outsl
std
add
orl
adcl
jbe
clc
sbb
daa
lret
stos
arpl
clc
pop
inc
into
aad
dec
nop
sbb
popa
dec
ds
add
sbb
push
push
ss
sti
in
jp
out
in
outsl
movsb
add
lret
sbb
fdivrs
cmp
sub
cmp
lret
call
sbb
mov
pushf
scas
loopne
mov
sub
andl
dec
push
sbb
push
jb
lods
aas
cmpsb
dec
push
cmp
xchg
arpl
cmp
xchg
xchg
cmp
sub
mov
cli
mov
je
jp
add
repnz
cmp
pop
jbe
call
xor
cmp
cmc
or
or
xchg
push
fcomps
in
pop
inc
test
push
adc
ds
inc
test
xor
fisttpll
cmp
mov
cmpsl
jle
mov
inc
fcoms
in
jns
lock
inc
push
fwait
aam
clc
gs
adc
call
and
sub
cmp
shlb
call
sbb
arpl
idiv
fiadds
neg
std
sub
pop
pop
inc
ficoms
pop
lcall
and
outsb
dec
sahf
mov
add
pushf
out
lock
pop
jge
cmp
cmp
or
cwtl
sub
or
mov
lods
push
leave
xlat
and
ds
mov
mov
or
mov
push
adc
ret
xor
inc
outsl
or
inc
lods
sti
dec
sub
test
lds
dec
xchg
jmp
lock
cmpsb
or
rcr
add
or
mov
mov
ljmp
fwait
cwtl
sbb
adc
cmc
in
and
jl
or
mov
jmp
jb
loop
or
xor
addr16
xor
cmp
or
jb
sub
out
retw
dec
sbb
xchg
inc
andl
popf
pushl
cmp
arpl
inc
je
adc
ja
push
fwait
test
mov
inc
mov
pop
dec
arpl
and
repnz
xor
xchg
or
inc
enter
mov
or
jae
pop
jbe,pt
frstor
adc
lods
in
jnp
jl
xor
aas
fmuls
fcoml
repnz
push
imul
jp
mov
cmp
in
sbb
mov
nop
loop
mov
push
stos
ret
cwtl
and
je
pop
sbb
or
push
xchg
inc
fwait
or
xchg
xchg
enter
xchg
sub
adc
and
sbb
int3
ja
pop
ffree
pop
sbb
repz
inc
stos
jmp
inc
mov
dec
mov
or
stos
addr16
sbb
jmp
push
repz
dec
jno
or
div
fnstsw
push
add
mov
sbb
loop
adc
cwtl
cmp
pop
outsl
pushf
data16
adc
into
xor
popf
mov
push
mov
pop
sub
cli
pop
jo
in
imul
add
movsb
mov
mov
ret
or
jmp
xlat
ljmp
out
sub
into
xchg
sti
add
out
ljmp
int3
or
push
inc
or
in
pop
pop
fcoml
lcall
mov
add
mov
mov
aad
idivb
xchg
cmp
test
pop
stos
mov
xchg
and
aaa
sbb
imul
subb
das
sbb
lock
daa
xchg
fstl
nop
add
mov
cmp
repnz
jmp
sub
mov
ret
or
push
pop
hlt
orl
mov
push
pop
sti
es
enter
xor
pop
mov
test
leave
test
outsl
orb
es
and
jae
or
mov
xor
subb
out
jg
push
mov
gs
movsb
pop
adc
lret
sbb
xchg
or
pop
repz
push
loopne
xor
incl
scas
push
dec
push
jae
into
add
xchg
mov
pop
push
ja
in
sub
dec
stos
lret
jge
xor
push
push
ljmp
mov
out
cltd
cmp
rcll
sbb
push
fwait
jnp
dec
push
pop
inc
jnp
fidivl
push
repz
mulb
decl
jae
cltd
or
ljmp
dec
inc
jae
mov
roll
and
jno
dec
jbe
in
stos
dec
cmp
int3
inc
ds
xlat
mov
pop
mov
mov
sbbl
pop
lock
ja
mov
shr
xchg
es
cli
cmp
sar
inc
enter
insl
push
outsl
xchg
jl
mov
xchg
addr16
out
jo
xchg
movsb
in
gs
push
shl
mov
enter
jne
hlt
add
sbbl
sbb
ret
sbb
sbb
jmp
lret
sub
js
lret
dec
cmp
cmp
or
jno
and
test
popa
jg
xor
cli
xchg
mov
push
rclb
push
mov
inc
cmp
sbb
clc
sub
ja
out
adc
cli
addr16
pushf
jl
das
scas
data16
adc
outsl
cltd
adc
add
sbb
mov
cmp
ds
push
sbb
aas
inc
hlt
sahf
fdivrl
or
mov
xchg
cmp
add
or
cmp
pop
scas
movsl
push
adc
cmp
rorl
jns
out
sbb
jge
fmuls
pop
add
stos
xchg
push
imul
push
ficomps
fidivrl
and
add
imul
loopne
dec
xchg
sbb
and
xchg
mov
insl
std
or
mov
xchg
arpl
xchg
inc
mov
lret
insl
adc
test
cli
in
xchg
adc
lock
fs
call
and
xor
dec
out
mov
mov
or
xchg
cmp
data16
std
fists
cmp
adc
cmp
push
sbb
repz
jb
push
add
push
mov
dec
aas
xchg
pop
jo
sub
xlat
das
aad
loopne
sahf
inc
stos
loop
adc
data16
pop
jnp
pop
addr16
loopne
popf
jmp
jmp
call
pop
push
pop
inc
in
test
nop
clc
imul
js
xchg
insl
xchg
add
cmp
jg
xor
notb
inc
sbb
test
pop
rorb
cmp
jmp
sbb
and
mov
adc
sub
iret
rcll
mov
rclb
mov
and
inc
std
and
push
roll
inc
aaa
hlt
sbb
in
fabs
cmp
cmc
jnp
das
inc
std
into
in
cld
pop
lock
add
dec
movsl
mov
jno
pop
jge
inc
lcall
sbb
mov
popa
pop
ss
leave
insb
insb
xor
rcl
xor
jecxz
mov
loop
and
adc
mov
adc
cmp
mov
lret
sahf
mov
and
push
mov
jp
and
test
push
push
in
mov
inc
rorl
xlat
push
stos
pop
xor
gs
test
cmp
push
jns
cmp
or
xor
ja
jmp
push
adc
and
es
ss
das
and
adc
sti
xor
and
adc
stc
jmp
mov
jne
push
push
push
cli
dec
pop
aam
cltd
nop
ljmp
mov
lods
pop
and
adc
jg
push
inc
js
cltd
push
fincstp
gs
pop
aas
jne
dec
pop
int3
fidivrl
stos
add
test
inc
adc
int
cmp
push
scas
je
lret
push
cmc
ret
dec
aas
repnz
dec
jbe
xchg
inc
jnp
das
mov
movq
daa
pop
ljmp
xchg
loopne
pop
xor
imul
call
mov
cmp
scas
pop
push
inc
push
arpl
hlt
push
lret
dec
sub
mov
test
xchg
mov
in
nop
add
loop
insl
ljmp
in
inc
and
xchg
sar
loope
cmp
jae
mov
push
cltd
aaa
pop
stos
jl
pusha
stos
pusha
enter
out
pop
scas
xor
push
inc
or
dec
jb
negl
pusha
mov
cmp
inc
cmp
add
jecxz
add
push
ret
int
pop
rcrb
mov
pushf
lcall
in
xchg
xor
cmp
dec
sahf
call
cmp
dec
testl
jecxz
or
inc
pop
push
popaw
jno
cltd
xor
cmp
push
outsb
scas
jae
test
addr16
in
inc
imul
imul
add
xor
ljmp
sub
lds
lock
in
push
arpl
mov
mov
or
or
fxch
mov
add
sbb
loope
mov
mov
sub
adc
xor
jo
in
in
inc
test
jbe
cli
enter
add
xchg
dec
test
mov
sbb
pop
fcmovb
jl
or
stc
jmp
and
int3
lea
or
arpl
push
js
mov
das
push
push
iret
gs
cli
pop
push
inc
jmp
pop
pop
shrb
xchg
je
mov
add
add
ja
aam
in
xchg
mov
push
and
je
sti
ds
pushf
jge
and
lret
jo
inc
sub
jl
loope
or
mov
push
test
in
push
cwtl
aam
pop
fbld
jb
add
icebp
in
or
scas
mov
loope
cmove
push
mov
gs
mov
gs
stos
in
insl
and
ljmp
loop
mov
leave
lds
dec
xchg
pop
jp
mov
xchg
and
push
shr
cs
push
sbb
mov
dec
arpl
outsb
jb
or
out
test
add
jl
ds
lods
pop
xor
cmpl
push
mov
sahf
dec
cmp
pop
roll
add
push
loop
sub
repnz
or
shl
pop
sub
cltd
or
dec
xor
inc
sbb
into
and
lret
fcomps
or
pop
xchg
sub
mov
fdiv
cmp
scas
inc
mov
dec
out
movsl
push
jp
gs
mov
and
in
arpl
sbb
push
adc
fs
mov
data16
jns
movq
or
cmp
dec
jg
inc
jle
cmp
cmc
mov
sbb
dec
shrb
mov
es
push
pop
mov
shlb
or
sar
jge
nop
push
mov
dec
sub
rcll
xchg
cmp
sbb
and
sub
fsubrp
cmp
and
jbe
adcl
xchg
ljmp
ret
add
repnz
fs
jbe
iret
call
daa
ret
scas
shlb
scas
pusha
or
les
aam
or
sub
lods
add
inc
jae
in
mov
adc
add
mov
icebp
test
cmp
xchg
pushf
data16
negb
and
int
mov
ret
mov
dec
cmp
test
adc
jno
mov
dec
insl
and
add
sbb
sub
jb
sbb
inc
int3
cmpsb
in
mov
jns
imul
pop
or
pop
pop
jg
data16
jmp
nop
lcall
and
xchg
test
gs
xor
mov
xor
sbb
jne
add
cmp
adc
cmp
mov
adcb
push
ljmp
dec
outsb
jb
and
jmp
sub
jb
push
data16
pop
dec
mov
inc
sbb
push
mov
arpl
sbb
cmp
pop
int
iret
test
fsts
inc
xor
sbb
mov
notb
mov
xchg
aas
xlat
enter
cs
cmp
cs
fldt
cwtl
xchg
sbb
andl
xor
dec
fs
cwtl
mov
xchg
enter
mov
out
xorb
vpsubq
sbb
mov
push
or
mov
or
add
in
gs
mov
icebp
bsr
jl
fsts
mov
sub
cmpsl
les
jne
mov
repnz
js
xlat
adc
out
rcrl
add
les
xlat
adc
mov
mov
lock
repnz
sbb
inc
icebp
xchg
adc
jmp
jno
or
mov
cmpsl
mov
stos
cld
imul
mov
pop
fsubrp
sbb
lea
adc
lret
jae
imul
aas
jb
aas
insb
loope
pushf
jne
or
and
stos
jns
mov
lcall
mov
dec
add
int3
test
sbb
mov
out
int
fisttpll
lret
cld
jb
fcomip
push
mov
mov
pop
inc
lods
jg
inc
data16
scas
setp
stc
lods
and
dec
ljmp
xchg
inc
inc
jo
popa
jne
inc
pusha
xor
cwtl
bound
imul
xchg
push
pop
push
pushf
mov
pop
add
filds
not
lea
push
xchg
mov
repz
clc
sub
rorb
jl
rolb
lahf
sti
filds
fiaddl
test
gs
inc
filds
test
mov
add
mov
add
pop
dec
pop
aad
add
addr16
sub
fwait
sbb
mov
push
icebp
test
rcl
rcrl
mov
cmp
push
cmp
sub
out
jno
insb
add
jp
out
int
aam
mov
pop
add
push
pop
cmove
and
inc
mov
jp
mov
idivl
push
cwtl
or
sbb
bound
test
xor
or
les
popa
push
adc
jl
or
jae
mov
je
ds
mov
js
ja
mov
pop
add
cmpsb
adc
pop
cwtl
cmp
scas
lret
mov
fstpt
or
das
ficompl
stos
scas
repnz
fisttps
mov
out
clc
sbb
ret
add
dec
iret
jbe
sub
daa
fdivs
pop
xor
mov
fdivp
lock
sbb
pop
xchg
sbb
inc
xchg
mov
mov
and
int
pop
add
pop
outsl
or
lahf
add
ret
js
lds
cld
out
mov
orl
cmp
add
clc
xchg
sbb
ds
daa
sub
adc
pusha
test
mov
jo
cmp
cmp
notl
stos
cwtl
movsb
rol
pop
pop
or
rolb
es
inc
push
dec
dec
push
es
and
adc
stc
pop
inc
mov
sahf
shlb
enter
pop
inc
lock
fs
cmc
cs
pop
movl
arpl
movsl
or
mov
lahf
sub
pop
pop
add
ss
cmp
call
and
loope
shl
cmp
or
daa
scas
repz
lcall
mov
add
loope
rcl
pop
jge
pop
mov
pop
mov
mov
mov
xchg
sbb
sbb
mov
test
add
ja
in
xchg
ja
or
inc
adcb
cmp
mov
mov
outsl
add
mov
rcll
inc
movsb
inc
stos
or
adc
dec
xorl
xchg
sar
in
nop
arpl
mov
xor
mov
push
popa
lods
mov
mov
in
cmpsb
mov
sbb
and
mov
push
hlt
sbb
or
lahf
mov
lea
repnz
pop
add
rol
in
jmp
mov
push
mov
loop
pop
and
int
and
sahf
js
cmp
enter
sbb
into
pusha
jo
daa
lods
xor
jns
push
xor
aas
mov
cmpl
xchg
mov
sbb
jmp
out
sub
test
sbbb
pop
out
mov
pop
dec
jbe
ljmp
cmp
xchg
dec
and
aad
and
jno
adc
pop
add
cli
test
pop
shlb
mov
pop
jno
in
inc
sub
mov
lahf
dec
mov
add
sti
fisubs
movsl
mov
sbb
test
jns
and
dec
mov
pop
cmpsb
mov
pop
jl
mov
and
dec
add
test
out
cmpsl
pop
orb
mov
pop
sbb
imul
adc
lds
mov
aas
rcll
insl
enter
cmp
xor
rcrl
mov
enter
xchg
lods
cmc
repz
cbtw
push
adc
mov
andb
into
xchg
pop
imul
and
push
rolb
clc
sti
adc
repnz
lock
movsb
adc
and
add
fcmovnbe
out
aaa
std
mov
lret
test
and
cs
cmpsl
pop
xchg
dec
imul
shll
adc
xchg
arpl
sarl
in
and
cld
and
pop
fincstp
xchg
jne
cmp
fsubs
in
stos
pop
mov
pop
and
std
fwait
dec
outsb
push
in
shlb
mov
push
sbb
add
aad
sub
jbe
nop
jns
cs
xor
mov
negb
sub
jne
adc
stos
les
lret
push
push
cld
jb
leave
inc
lock
mov
xor
mov
inc
lcall
mov
in
imul
sub
dec
xchg
cmp
rclb
mov
pop
lds
mov
outsl
sub
sbb
jp
mov
xlat
rcll
mov
xchg
xchg
mov
clc
das
mov
ljmp
cmpsl
stos
ficomps
lret
jbe
fidivl
arpl
pavgw
add
sub
sbb
lret
imul
jns
mov
mov
aaa
clc
jne
or
mov
xlat
add
adc
add
and
into
fldcw
mov
int
sub
mov
fdivrl
push
xchg
and
inc
or
pushf
and
xchg
mov
call
clc
pop
sub
out
std
inc
pop
inc
xor
lods
scas
xchg
mov
inc
cmpsb
in
hlt
mov
rcll
insb
sti
lret
push
scas
ja
xchg
adc
xlat
mov
nop
dec
in
inc
sub
mov
pop
scas
inc
jo
loop
push
add
into
adc
jbe
int
pop
jne
lock
pop
shll
dec
push
fnstcw
or
sbb
mov
out
adc
outsl
pop
shl
mov
hlt
jl,pn
sbb
dec
and
mov
sub
repnz
pop
ds
push
scas
dec
push
cld
jl
mov
je
and
sbbb
or
push
and
or
aam
cli
insb
xchg
push
sti
movsb
fwait
sbb
or
mov
sub
xchg
add
push
aaa
int3
cmpsb
in
adc
jo
jne
xor
inc
or
jnp
xchg
aaa
xorb
sub
push
fdivl
xchg
out
push
or
fwait
and
mov
dec
pusha
sbb
pop
out
addb
cmc
mov
mov
jae
outsl
nop
fnstenv
mov
stos
sub
fs
out
mov
and
in
stos
jp
mov
lock
xchg
aad
pushf
bound
xchg
cmc
jg
xchg
pop
inc
movsl
fldl
mov
pop
iret
dec
pop
xchg
gs
sub
sub
mov
xor
jae
std
xchg
out
int
roll
jnp
xchg
xchg
mov
push
movsb
push
imul
stc
test
mov
daa
push
cmpsb
push
xchg
lock
test
test
scas
divl
cmp
mov
notw
repnz
out
enter
inc
mov
dec
aas
push
cli
sbb
into
add
and
or
fneni(8087
and
in
outsb
xchg
mov
sub
es
sahf
and
lods
div
cmp
dec
mov
repz
jae
pop
pusha
inc
xchg
sub
adc
mov
les
xchg
mov
xor
test
loope
jno
repz
leave
xchg
cmp
aad
mov
cltd
xor
lcall
rcrl
mov
test
loop
mov
test
pop
jnp
sbb
fs
je
or
xchg
mov
adc
movsl
les
dec
leave
daa
gs
push
dec
mov
or
mov
mov
out
push
cmp
lret
lods
mov
sub
clc
imul
pop
bound
shr
int3
dec
pop
negl
je
inc
es
lds
push
mov
adc
jp
xor
push
cmpsl
lock
cli
mov
sub
push
orl
scas
dec
pusha
and
jle
add
jge
xor
lods
pop
leave
mov
lea
lret
cmpsl
xchg
cwtl
push
dec
subl
imul
fldl
adc
pop
and
mov
adcl
loop
adc
push
jbe
add
or
movsb
sbb
iret
dec
mov
mov
insb
ljmp
and
push
stos
xor
sbb
loope
and
fldcw
imul
loopne
jbe
hlt
push
mov
inc
push
sub
data16
in
cmc
fidivrl
gs
in
jmp
aam
inc
jmp
aas
je
pop
add
add
ficoms
mov
pusha
stc
or
and
adc
stos
push
jg
dec
mov
mov
mov
sub
aaa
jns
mov
repz
xchg
adcb
add
out
test
outsl
test
popa
or
xchg
fwait
movsb
fsubrs
xchg
xor
cmp
sahf
push
mov
mov
inc
rolb
inc
push
pusha
add
push
jmp
and
iret
xorb
in
lahf
pusha
call
pop
xor
je
movsl
fsub
mov
out
mov
cmpsl
popf
sub
push
fstps
repnz
mov
ljmp
iret
inc
mov
sti
cltd
shrl
inc
in
push
loopne
sub
arpl
sub
iret
cltd
mov
adc
std
push
jle
sub
loopne
jnp
or
jle
je
mov
mov
enter
dec
test
test
jne
in
xor
movsb
inc
mov
xor
idivb
das
xchg
popf
xlat
cmp
std
jne
rorb
xchg
push
sub
push
aam
ret
loope
or
push
ds
adc
lods
add
and
incl
mov
fstps
push
mov
into
cmp
push
pop
lds
mov
dec
sbb
xchg
pop
inc
xor
js
addl
push
mov
dec
mov
mov
push
dec
jl
add
mov
cwtl
in
cmp
or
xor
sbb
rclb
fbld
mov
cltd
stc
pause
dec
sub
into
in
jmp
inc
jnp
ja
jmp
push
jmp
enter
jg
mov
dec
in
sub
add
mov
xchg
sahf
sub
lds
inc
sub
mov
push
lock
vpunpckldq
dec
leave
icebp
das
lea
pop
sbb
jmp
and
push
nop
shrb
mov
std
and
fbld
adc
jne
movsl
pop
mov
mov
xchg
in
setae
jae
imul
xor
sub
sub
in
fimuls
test
mov
imull
cmp
scas
jl
jle
pop
mov
dec
int
ja
fcompl
in
aas
jg
inc
push
ret
dec
jge
sub
cmc
xorb
cmpsl
std
sbb
sbb
es
inc
and
cs
jb
or
mov
mov
push
std
mov
ret
sti
daa
add
push
jne
pop
movsl
scas
push
jbe
cwtl
and
cli
mov
pop
ret
mov
add
cmpsl
push
or
and
mov
lock
shlb
or
pop
mov
adc
bound
xchg
xchg
pop
cmp
addr16
sub
pop
push
jl
or
hlt
dec
mov
lock
movsl
ret
insb
and
dec
jns
mov
mov
orb
inc
jnp
aaa
mov
lods
stos
cltd
loopne
mov
int3
add
ret
mov
dec
ss
mov
fistpl
test
fnsave
sub
sbb
mov
pop
movsl
push
loopne
jno
fcomps
xchg
xor
sub
cld
inc
mov
xchg
subl
dec
mov
mov
jge
cs
push
mov
xor
addl
cwtl
inc
cmp
xor
mov
scas
lcall
lret
data16
adc
jnp
mov
into
pop
and
addr16
icebp
sahf
hlt
and
sub
addl
sub
lods
outsb
sbb
xchg
and
xor
test
pop
subl
push
prefetcht1
push
clc
ret
imul
in
xor
sbb
cmp
dec
es
sbb
insb
pop
jnp
cltd
xor
sub
mov
mov
fcomps
sub
mov
cmpsb
sub
lret
in
mov
movsb
mov
and
mov
imul
adc
mov
cmp
outsb
repnz
or
xchg
sti
xchg
cmpsl
int
lret
mov
out
xchg
jmp
out
or
sbb
imul
fadds
mov
cmp
mov
add
mov
data16
gs
push
mov
sbb
jg
mov
push
lods
shrl
push
lods
xchg
hlt
rcl
push
and
ss
or
xchg
and
aad
leave
mov
jle
insb
cmpsb
stos
fimull
sar
xchg
adc
cmp
sub
cli
lea
arpl
xor
pushl
dec
mov
jecxz
xor
sbbl
fstpl
jb
pop
lock
jae
in
loopne
or
lea
lret
test
mulps
inc
jmp
xchg
mov
mov
push
dec
fs
iret
and
repz
sahf
push
shr
loopne
int
pop
repz
clc
icebp
dec
call
dec
sbb
xchg
cltd
inc
pusha
fistl
cld
mov
orl
and
dec
fnstenv
vmread
enter
pop
leave
jae
js
test
dec
xchg
mov
ja
sbb
xchg
dec
stos
subl
jg
inc
mov
inc
mov
cld
stc
cmpsl
movsb
add
scas
dec
mov
loope
sbb
je
sahf
loop
adc
cmp
test
xchg
adc
fsubs
xchg
filds
enter
ljmp
aad
pop
inc
ljmp
mov
or
aaa
xchg
cmp
cmp
cmp
bound
pop
nop
paddusb
cwtl
push
decb
jae
outsb
push
mov
mov
aas
int3
test
mov
icebp
das
es
jns
sub
imul
fistps
fcomps
mov
scas
cmp
jno
lret
cli
mov
std
in
add
add
or
sbb
jnp
mov
and
mov
daa
sbb
pop
and
std
or
fmuls
jbe
repz
ss
outsb
bound
insl
pop
fldl
mov
popa
add
sarl
and
mov
pop
mov
push
pushf
clc
mov
add
mov
sahf
mov
incl
cmp
sti
inc
cmp
iret
test
xchg
xchg
sbb
push
insl
dec
push
pop
lods
les
cs
pop
fwait
jbe
pop
ret
inc
rorl
mov
inc
mov
addr16
push
inc
lods
bound
out
and
pop
daa
jl
dec
aam
rcrl
and
dec
int3
repz
iret
cmpsl
std
cmpsl
push
in
sbb
pop
and
push
rolb
jg
test
aas
outsb
ret
lret
sub
iret
je
mov
and
stos
lahf
inc
cs
out
push
sbb
pop
cld
std
sub
insl
das
test
adc
xchg
lea
pop
and
push
in
inc
lcall
rorb
xor
addr16
push
and
fsubl
add
sub
jbe
imul
adcb
pop
mov
and
mov
adc
int
mov
pop
scas
jg
lret
jno
shld
pop
in
test
inc
in
in
rorb
mov
icebp
fimuls
fwait
test
dec
sbb
jl
mov
ja
imul
mov
xchg
xor
sbbl
push
in
divl
mov
pop
xor
mov
mov
jo
sbb
mov
stos
fidivs
shlb
sub
and
shrb
lahf
jae
bound
repz
sbb
add
xchg
pop
jns
fwait
pushf
xchg
cmp
in
sub
cmp
lahf
cmp
outsb
sti
xchg
xchg
adc
cs
sub
xor
inc
and
sub
sti
push
xchg
out
aaa
pop
ds
out
repnz
scas
fimuls
leave
jge
daa
ret
push
push
push
fnstcw
hlt
sbb
fdivs
lret
jle
rol
xlat
jns
mov
movsl
mov
and
les
rolb
in
arpl
add
pop
out
sbb
cs
ja
jge
pop
add
ret
or
jb
lcall
push
aad
mov
xor
movsb
mov
sarl
mov
adc
imul
jle
das
mov
mov
popa
rep
iret
add
jle
add
push
movsl
push
sub
adc
add
add
ret
sarl
push
andb
and
cmp
add
pusha
pop
and
stos
das
and
in
push
jns
in
sahf
arpl
cmpsl
mov
jbe
mov
mov
out
insl
push
ss
lods
mov
pusha
loop
shll
add
xor
mov
and
lock
rolb
loopne
test
jecxz
xorl
jle
pop
mov
mov
lahf
fistpl
fnsave
enter
mov
add
mov
sbb
adcl
mov
dec
inc
aad
or
push
pop
dec
jp
mov
test
cmp
loop
xchg
mov
push
aam
mov
inc
push
lods
jae
push
push
push
dec
inc
xchg
imul
aaa
jg
cmp
push
sub
add
mov
jno
sub
addr16
jne
or
xchg
leave
addr16
adc
dec
pusha
in
imul
mov
adc
xchg
jne
jle
mov
setns
jmp
nop
or
push
xchg
dec
stos
fnop
outsb
fsubp
dec
popf
fldt
repnz
stc
lds
nop
pop
push
sub
push
std
inc
add
jmp
dec
daa
mov
lahf
mov
xchg
adc
inc
pop
pop
andb
push
movsl
aas
rcrl
shrl
das
pop
mov
or
xchg
inc
mov
and
lods
loope
xchg
mov
dec
insl
adc
mov
stc
insb
test
enter
mov
lcall
xor
inc
push
dec
lahf
jg
xchg
ljmp
loope
nop
outsl
cmp
add
lds
xor
idivl
jbe
ja
in
cmpb
out
fistps
pop
lods
sahf
hlt
dec
mov
fwait
mov
mov
lret
cmp
add
jns
mov
push
insl
ret
pextrw
push
sahf
loopne
pop
dec
inc
jbe
jle
pop
scas
and
out
fadds
and
jns
es
into
jnp
inc
xchg
aaa
xchg
add
lods
roll
pop
fnstcw
popa
cmp
enter
or
rcr
inc
cmp
add
mov
subl
and
loope
sub
xor
jge
fisttpll
scas
mov
mov
int
insb
in
pop
adc
jle
jle
fisubrl
and
lds
push
jae
sub
addr16
call
fsubr
or
lods
xchg
ds
data16
sbb
sti
arpl
mov
fwait
push
mov
cmpsb
addb
jmp
int
cli
push
imul
popa
dec
addr16
repz
jns
pop
clc
sbb
push
dec
shlb
mov
fimuls
cmc
js
shll
and
notb
mov
stos
data16
inc
or
das
and
mov
mov
std
jae
jnp
jp
dec
inc
rorl
out
and
fildl
aaa
xchg
test
xchg
mov
pop
xchg
sub
in
arpl
std
sub
lds
lods
xchg
mov
cmp
cmpl
jmp
sti
aad
in
lods
push
pushf
in
aad
mov
jg
fucomip
mov
adc
insl
sarb
or
mov
out
or
jg
adc
repz
lea
outsb
sti
daa
inc
sub
push
add
iret
or
mov
lods
adc
jno
out
xor
test
cmp
callw
mov
add
callw
push
xchg
imul
push
sub
aas
cmpsl
fisttpl
fimuls
sub
sti
jp
sbb
or
push
jo
pop
xchg
add
shlb
std
jmp
sub
fnsetpm(287
dec
call
sbbb
ret
push
aam
addr16
fwait
aam
aam
jno
inc
xor
mov
xchg
jno
mov
fsubs
jge
sub
cmp
and
mov
mov
push
pop
dec
aaa
vpmacsww
std
xchg
pop
sbb
jle
push
inc
sti
and
xchg
lret
lods
push
mov
test
ret
pop
mov
subl
mov
mov
int3
in
roll
lods
dec
lods
ds
fidivs
add
inc
imul
fbld
out
hlt
mov
xchg
xor
lods
ret
jl
pusha
and
shl
xchg
push
sbb
dec
sub
add
or
jle
jbe
jns
jecxz
jns
scas
xlat
cmc
stos
add
xor
jge
js
data16
push
mov
shr
nop
subl
les
push
dec
and
pop
insb
mov
bnd
mov
cmp
xor
xor
stos
outsb
aaa
mov
cmp
imull
xlat
aam
mov
xor
mov
rclb
adc
jnp
cmp
cmp
aaa
loop
insb
sahf
pop
pop
jge
outsb
jns
jo
out
mov
dec
in
or
sbb
fnsave
in
add
push
cwtl
jo
cmp
sbb
in
call
out
mov
or
dec
stc
ret
mov
leave
adc
repz
jns
or
ret
sub
mov
sub
dec
and
push
popf
cmp
sbb
jne
stc
negl
fcmovnu
mov
xlat
pop
les
pop
mov
push
popf
pop
cmpsb
sub
sbb
jno
add
mov
ss
dec
mov
sbb
xor
pop
push
adc
and
jns
ret
dec
jge
cmp
cmpsb
and
xlat
imul
jecxz
inc
stos
jmp
xor
orb
dec
stos
lds
xorb
or
test
push
cs
push
out
test
sysenter
mov
sbb
call
rcrb
sbb
fsubrs
out
push
lret
ds
pop
mov
push
mov
jb
jmp
std
pop
mov
push
jne
or
or
push
xor
je
or
ja
lret
lret
repz
add
adc
mov
int3
mov
jno
jb
cltd
lret
pop
popa
lds
imul
mov
mov
leave
lods
jno
mov
outsl
movsl
sahf
sti
jmp
adc
xchg
mov
adc
lods
ds
xchg
loop
data16
xchg
sub
popf
loop
mov
loop
or
popa
out
jge
inc
int
pop
std
rorb
jg
test
dec
xor
fdivl
into
xor
div
add
loopne
xor
ficoms
dec
or
mov
cmp
ja
inc
icebp
das
inc
iret
pop
aam
mov
dec
mov
push
mov
dec
fsubl
dec
jae
enter
inc
nopl
arpl
fnstsw
jle
xor
dec
fs
sahf
cld
mov
ljmp
jle
popf
test
jbe
inc
xchg
fstpl
loopne
daa
popf
inc
sbb
dec
mov
adc
or
or
sahf
push
jo
pop
gs
dec
out
adc
mov
test
std
push
enter
rorb
in
lcall
je
js
lods
pop
pushf
xlat
pop
or
cld
cli
sub
cmp
xor
lret
out
push
psubusw
mov
es
je
das
inc
sub
mov
aad
xchg
jnp
stos
xor
pop
mov
fimull
outsl
sub
ret
lcall
loop
xchg
mov
mov
sub
xchg
popf
dec
inc
lods
imul
mov
xchg
dec
dec
adc
and
nop
int3
cmpsl
mov
mov
jo
das
lock
cmp
clc
iret
mov
lahf
mov
std
imul
lock
idivl
xorl
mov
inc
clc
icebp
xchg
je
loope,pt
fisubrl
or
adc
push
cmp
shl
and
addr16
xor
mov
cld
push
and
fsubp
gs
add
dec
idiv
in
push
jne
shll
mov
fldt
je
mov
nop
push
clc
cmc
pop
aam
xchg
std
sub
mov
popa
test
push
cmp
cmp
aaa
xchg
push
push
test
inc
pop
subl
and
shr
test
push
inc
lahf
jmp
or
xor
fwait
popl
iret
jno
xchg
test
and
pop
adc
aam
rclb
jmp
loopne
push
in
jl
dec
xchg
xor
nop
bound
pop
dec
addb
mov
mov
sub
push
enter
mov
movsl
inc
jno
mov
repz
mov
hlt
mov
inc
push
je
stos
sub
jmp
or
outsb
aam
mov
cld
mov
cmp
jecxz
mov
xchg
movsb
inc
fsubr
lcall
add
mov
pop
jl
enter
cmp
dec
adc
pop
data16
sub
xorl
aad
movsl
add
nop
xchg
xlat
es
pushf
inc
mov
lock
sub
ret
daa
add
and
lret
sbb
repnz
scas
lods
imul
add
jb
mov
and
out
repz
loopne
jno
xchg
or
lret
pop
cltd
mov
fwait
dec
fdivr
mov
and
mov
bnd
shlb
push
and
inc
or
stos
outsb
xor
xor
lds
iret
adc
mov
nop
inc
push
enter
pop
jno
sub
std
xor
or
or
stos
into
dec
in
add
sub
ret
pop
push
mov
jg
hlt
jb
push
idivl
in
push
and
dec
lcall
and
jmp
into
sbb
cltd
lock
faddp
stos
orl
pop
or
faddl
dec
xor
outsl
sub
shr
jnp
aam
sahf
mov
mov
adc
sbb
cmp
dec
mov
mov
jns
insl
in
mov
roll
sarl
or
test
pop
inc
add
es
xchg
push
inc
inc
jge
popa
ret
cmpsb
push
repnz
or
lods
jp
mov
push
lahf
repz
mov
mov
and
mov
dec
jae
mov
cmp
sub
outsl
xchg
inc
cmp
push
sahf
popa
pop
or
add
mov
xchg
xlat
push
mov
xor
pop
fidivl
push
lcall
sbb
aas
inc
adc
mov
or
cwtl
jb
outsl
mov
insl
dec
jmp
or
jl
subl
lret
cmp
or
add
call
ficoml
pop
rolb
fwait
aas
iret
bound
pop
shrl
roll
imul
xchg
mov
mov
inc
jae
pop
in
xlat
adc
mov
push
push
lds
neg
jge
xchg
push
stos
push
lret
sbb
dec
push
pusha
push
pushf
adc
aaa
not
jne
mov
cmp
sti
imull
orb
movsb
inc
lret
jl
shll
mov
idivl
push
push
mov
pop
outsb
sti
or
outsb
iret
stos
arpl
bswap
leave
jnp
ret
or
movsl
pop
jo
jb
mov
pushf
mov
movsl
aas
cmp
lds
int3
lods
cmp
aam
pop
and
js
jnp
clc
popa
roll
adc
jg
inc
mov
fbstp
in
divl
push
pusha
psllq
cmp
pusha
mov
mov
ljmp
sub
in
clc
inc
and
push
shll
inc
cwtl
push
add
movsl
add
sub
es
adc
xchg
test
ljmp
lret
mov
mov
sub
sahf
rol
call
imul
add
sbb
add
push
pop
leave
lret
popa
sub
sub
insl
jne
int
pusha
lahf
les
mov
fidivs
push
xchg
sbb
sub
jle
mov
xlat
pop
dec
dec
push
shlb
push
push
imul
shlb
pop
push
xor
xor
push
xor
inc
mov
js
push
into
jp,pn
call
push
dec
cmpsl
pop
outsb
das
dec
sti
jmp
outsb
push
dec
dec
and
dec
push
jge
iret
jnp
xchg
in
imull
orl
xchg
shr
sahf
and
lret
sbb
leave
pop
test
jp
sbb
xchg
lcall
add
push
stos
dec
push
lea
iret
cld
decl
xor
mov
lods
pop
xor
jle
or
pusha
scas
fstpl
and
inc
outsb
push
ljmp
rcll
sbb
int
jge
xchg
out
popa
jne
scas
mov
stc
cmp
mov
jae
stos
aad
dec
push
fwait
das
fdiv
jmp
xchg
sbb
and
shrb
pop
arpl
mov
lahf
dec
pop
pop
mov
daa
xchg
mov
es
rorb
and
xchg
xchg
pop
pusha
sbb
sbb
mov
aam
nop
das
cmc
ss
jno
mov
lret
mov
xlat
dec
pop
lcall
sahf
into
pop
lret
in
or
fistps
ret
and
cmp
dec
cli
pop
jno
jge
sub
xchg
dec
imul
xchg
pop
data16
and
rcr
jne
adc
test
push
cmc
adcl
filds
sahf
pop
push
lods
sbb
and
xchg
faddl
mov
add
xchg
call
mov
loope
fdivl
data16
jno
arpl
inc
clc
xchg
push
lock
call
int3
pushf
mov
lea
xchg
stos
imul
lahf
mov
out
sysexit
hlt
cs
fidivrl
or
rorb
cwtl
push
jns
and
mov
xor
enter
pop
in
sub
sti
aas
xchg
mov
jno
lods
mov
clc
sub
cmp
jbe
dec
mov
lahf
aas
and
fs
xchg
xchg
sti
pop
dec
push
pop
push
sub
es
push
or
cs
leave
repz
test
push
inc
cld
or
repz
notl
lds
cmp
sar
lea
pop
mov
test
sbb
fmul
sub
out
adc
sbb
pop
test
xchg
loop
scas
push
mov
out
fabs
mov
xchg
ja
mov
fwait
aad
ffree
adc
imul
lds
fwait
sti
ja
mov
shlb
ja
das
and
mov
mov
movsb
outsb
dec
pop
mov
push
loopne,pt
lods
out
pop
xor
scas
hlt
or
arpl
sbb
inc
mov
movsb
test
insl
fs
xchg
jo
loop
xor
loope
add
stos
jecxz
fwait
mov
hlt
pop
or
jg
mov
xchg
jo
hlt
dec
xor
and
aad
and
pushf
mov
adc
dec
hlt
mov
jae
xor
cmpsb
sub
xor
cmp
pop
dec
mov
xchg
lcall
mov
enter
xor
adc
dec
ret
xchg
mov
sbb
into
and
xchg
xor
int
leave
xchg
mov
ds
out
cmp
dec
aam
sarb
rcr
xor
cmpb
fsubrs
and
fisttpl
jns
mov
add
or
mov
mov
out
pop
vmovntps
test
in
pop
cmp
repnz
mov
jns
xlat
mov
or
sbb
aam
pushf
adc
repz
push
xchg
dec
xchg
sbb
pop
cmp
gs
mov
sub
mov
push
mov
mov
sbb
lahf
cmpl
inc
cwtl
fcomps
ret
inc
cs
out
add
add
mov
fmul
add
aas
popf
cld
jp
loop
push
popa
mulb
xor
xchg
outsb
out
lret
add
push
loop
repz
add
xlat
test
mov
cmp
adc
jp
fcomps
shl
jmp
and
je
jp
jle
sub
cmp
and
out
sti
add
push
loopne
xor
enter
push
add
jg
das
pop
imulb
rcll
push
xorb
cs
xor
and
lahf
in
mov
mov
push
aas
fimuls
sbb
jp
jno
xchg
jge
jge
mov
out
jmp
lcall
arpl
jno,pt
sbb
inc
aam
icebp
dec
sub
pusha
mov
aaa
add
lcall
inc
sbb
jp
push
inc
insb
adc
jge
lods
dec
lods
inc
adc
data16
in
out
inc
dec
subl
rcl
add
sub
mov
jno
sub
stos
mov
pop
out
mov
es
lock
adc
repnz
inc
or
test
mov
lcall
xchg
mov
out
into
lods
jno
movsl
cmc
inc
ja
xor
aam
mov
push
jmp
lahf
rcl
xor
stc
movsl
lods
mov
fnstsw
aas
mov
and
jne
jne,pt
xor
sub
xchg
mov
xchg
mov
ss
inc
dec
cmp
dec
jae
pop
cmp
js
shl
cmp
nop
mov
test
daa
movsb
xchg
mov
mov
push
sti
cs
mov
out
js
imul
pop
cmpsl
lret
and
rclb
sbb
ficoms
dec
mov
mov
add
stos
sbb
sbb
xchg
ds
in
sti
pop
xor
jecxz,pt
mulb
dec
dec
sahf
fidivrl
pop
incb
test
mov
pop
pusha
pop
lcall
cmc
mov
sbb
pushf
pusha
popa
repnz
je
jge
mov
repnz
sub
jbe
adc
imul
push
mov
cwtl
cmp
fldcw
hlt
sub
test
ss
mov
mov
adc
lret
sub
jb
enter
pop
xchg
movaps
xchg
repnz
stos
aaa
dec
and
cli
add
lds
xchg
mov
cltd
ficoml
lahf
inc
and
lods
cmpl
xchg
inc
ret
lahf
out
cmovae
hlt
push
pop
test
adc
add
lret
and
sbb
outsl
mov
aad
ds
mov
mov
sub
push
push
adc
dec
call
andl
dec
ret
dec
mov
outsb
test
rcrb
loop
jne
jnp
into
jnp
stc
or
sub
call
repz
dec
mov
mov
adc
jmp
sbb
cwtl
rorl
in
maskmovq
xlat
lds
loop
cmp
sbb
inc
push
pop
xor
jns
add
xchg
jne
push
aam
adc
add
test
sub
push
add
xchg
push
mov
scas
mov
sbb
daa
pop
sahf
cmp
or
pop
call
enter
jne
jp
sti
inc
arpl
jns
add
sub
insb
aas
fistpl
add
jnp
mov
xor
xchg
jnp
gs
sub
sti
stos
and
fidivs
and
pop
scas
cmp
popa
dec
iret
jmp
arpl
pop
jbe
and
fcmovnb
sbb
cmp
gs
sub
mov
in
test
inc
bound
jg
cli
fisubl
fcompl
lea
mov
pop
jo
imul
dec
and
or
fnstsw
xor
xor
in
clc
add
sbb
imul
adc
mov
xor
fidivs
das
mov
rcll
out
sub
test
pushf
mov
mov
push
jns
popa
pop
ror
dec
out
cmp
mov
mov
outsl
inc
cmpl
xchg
scas
sub
inc
pusha
scas
out
mov
pop
out
jmp
les
xchg
repz
call
int3
bound
loop
scas
insb
adc
cmpl
pop
fwait
lret
dec
in
sbb
cld
jne
imul
adc
mov
xchg
adc
push
daa
xor
mov
mov
sbbb
in
xchg
push
test
and
je
inc
fisubl
sti
scas
aaa
repnz
jecxz
bound
sub
rcrl
adc
inc
push
push
aaa
lea
jne
jle
sub
hlt
fwait
inc
sub
dec
mov
mov
sbb
and
in
mov
push
minps
jno
lds
outsb
and
mov
jge
scas
add
out
cmp
fnsave
or
dec
mov
das
jns
add
inc
xchg
std
add
jnp
mov
xchg
test
lods
aaa
fs
push
pop
lcall
dec
jae
cmpsb
dec
xor
inc
pop
mov
mov
stc
mov
add
xchg
hlt
mov
daa
jo
adc
jg
sbb
pop
test
lods
jbe
mov
mov
popf
mov
xor
xor
or
jecxz
inc
add
jo
idivl
add
std
cli
adc
sbb
scas
mov
xchg
mov
mov
inc
shrl
pmullw
fst
mull
inc
test
xchg
fwait
cmpsl
jecxz
sbb
loope
aas
into
cmp
lret
movsb
add
jo
ss
shll
enter
and
jne
out
data16
stc
loopne
js
pop
and
outsb
push
pop
jns
clc
dec
dec
sbb
dec
xor
cmp
jns
inc
cltd
sti
jbe
xor
xchg
mov
rol
inc
adc
gs
fstl
or
mov
shlb
bound
sbb
lcall
xchg
dec
pop
and
push
mov
pop
fdivrl
pop
das
cld
fisubs
cmp
sub
and
repnz
jo
and
lods
mov
add
xchg
push
pop
push
push
shll
arpl
lods
and
loope
movsl
fwait
and
lods
dec
mov
cmp
insl
or
out
popa
nop
and
push
ss
push
iret
mov
pushf
xchg
dec
pop
add
adc
push
mov
inc
jge
mov
ds
pop
xor
push
rorb
jns
adc
sbb
xor
js
inc
aas
jno
jle
pushf
jp
jge
or
sbb
pop
shrl
outsl
or
pop
mov
out
loope
jb
xor
push
stos
test
lock
inc
ss
incl
jae
push
sbb
push
shr
xor
mov
out
push
call
test
daa
out
push
lahf
fwait
push
mov
fistpl
jl
sbb
in
push
lret
rolb
mov
test
lea
dec
movsb
es
lds
pop
or
ret
daa
divl
sahf
mov
arpl
or
cmp
mov
xchg
sub
stos
fstps
mov
xchg
mov
addw
cmp
movswl
xchg
pop
cmp
lahf
stos
cld
stos
movsl
cli
sub
pop
push
ret
xor
test
mov
mov
or
mov
xor
lret
enter
mov
add
inc
sarl
push
sub
fisttps
pushf
movsl
ss
stc
in
pop
mov
iret
jmp
bound
mov
xchg
testl
inc
cs
jg
das
movsl
fwait
shl
in
stos
inc
jg
das
lret
mov
aaa
dec
ret
lret
addr16
pop
sub
aaa
mov
mov
movsl
cld
addr16
xor
or
popf
or
ljmp
jmp
xchg
pop
insl
pop
in
sub
and
mov
test
inc
dec
jbe
out
mov
mov
sti
push
das
jne
lds
fstps
push
rol
pop
mov
cmpl
push
insl
ljmp
cmp
adc
inc
and
add
push
notb
xor
mov
and
or
mov
and
fisubs
or
jne
cmpl
push
cmp
pop
jno
daa
inc
mov
xchg
shlb
scas
js
daa
push
insb
test
dec
adc
fists
test
lock
ret
call
mov
test
das
seta
cli
inc
or
repnz
loope
fs
je
dec
outsl
sub
push
dec
cmp
dec
adc
xchg
ss
xor
iret
in
int3
jmp
ja
sub
jl
out
sahf
cmpsl
out
in
adc
out
jb
shl
add
or
pop
cltd
mov
mov
adc
repnz
faddp
jle
shll
jne
shlb
ret
inc
les
push
lahf
mov
aaa
or
mov
hlt
cs
add
popa
sub
push
xor
inc
ljmp
add
xchg
into
movsl
fs
addr16
xchg
js
jg
adc
xchg
and
inc
pop
fsubr
loopne
inc
xchg
test
jge
dec
adc
inc
outsb
add
dec
lahf
dec
pop
arpl
lods
stos
aad
call
aam
xor
lock
mov
lahf
out
popa
addr16
xchg
leave
ds
pop
xor
pushf
repnz
movsb
xor
je
sub
leave
sbb
leave
jmp
ds
pop
dec
pop
imulb
cmp
xchg
aaa
in
shll
push
lods
jecxz
mov
jmp
cmpsb
fistl
pop
inc
lea
xchg
adc
scas
or
xor
mov
adc
inc
iret
xlat
mov
pop
scas
jmp
repnz
rcl
mov
mov
adc
movsb
jns
test
mov
add
les
nop
xchg
mov
lret
lret
and
mov
or
jns
jle
mov
cmp
mov
xor
sub
sti
jae
mov
and
shrb
push
and
pop
lock
cwtl
add
cli
stos
icebp
aaa
dec
mov
pop
and
inc
fwait
dec
jo
loop
mull
sti
pusha
decl
and
cmp
or
xlat
xchg
mov
bound
clc
fsubs
mov
mov
adc
pop
push
xchg
jecxz
push
dec
gs
add
mov
jg
xor
xor
mov
icebp
pop
fsubr
pop
inc
ficompl
inc
adc
and
out
in
mov
arpl
fcomi
arpl
mov
sbb
ss
scas
mov
rcrb
xorb
xchg
popf
pusha
and
stc
imull
add
mov
mov
lcall
mov
dec
sbb
aad
xchg
or
andb
arpl
enter
vmovd
adc
repz
shlb
push
hlt
pop
ror
cmp
fnstenv
xchg
loop
pop
test
push
jp
or
cmp
mov
adc
out
popl
xchg
testb
push
mov
lret
popa
jmp
xchg
cmp
popa
ret
pop
faddl
insl
ret
icebp
and
lahf
cmp
js
or
jbe
in
xchg
cmpxchg
call
mov
aas
inc
roll
out
or
xor
jae
add
test
call
popa
ds
mov
nop
push
popf
rcl
mov
mov
in
sub
pop
or
shrl
cmpl
lret
js
int
xlat
jbe
sbb
test
xlat
lret
jnp
daa
add
shll
add
mov
les
mov
jge
mov
xchg
rcrl
stos
shr
mov
mov
sbb
mov
inc
test
xor
fstps
lea
aam
std
inc
iret
inc
outsb
mov
push
mov
ficoml
lods
mov
fwait
subb
aas
sub
cmc
addr16
pop
sub
dec
sub
int3
push
sti
jecxz
jecxz,pn
pop
or
pop
dec
sub
dec
cmp
into
adc
leave
sbb
mov
outsb
nop
shll
xchg
aad
and
pop
xor
nop
test
sahf
stc
dec
xor
je
dec
cmp
psubb
xchg
push
jl
pusha
int
fst
cli
and
add
inc
push
int
cmpsl
xchg
in
mov
cmp
out
andb
scas
add
cmp
and
xchg
sub
pusha
adc
xor
rcrb
dec
out
lods
xchg
mov
aam
cmc
sub
pop
mov
decb
das
dec
stos
lods
dec
out
and
divl
mov
mov
mov
pusha
pusha
orl
cmp
outsb
add
sahf
in
pop
xchg
fisttpl
mov
lret
push
test
test
pusha
add
in
jae
xor
iret
push
sbb
test
push
jno
fildll
xor
orl
pop
or
imul
aaa
adc
loop
outsl
push
xchg
mov
mov
lret
fnstsw
xchg
sbb
test
mov
test
push
pop
dec
mov
fisubrl
push
or
mov
mov
lret
scas
dec
ror
js
push
arpl
bound
aaa
aad
add
sub
inc
scas
jge
je
adc
pushf
addr16
icebp
mov
cld
push
jmp
cwtl
test
scas
mull
mov
pop
bound
xchg
icebp
mov
cmpb
aad
cmpsb
jecxz
imul
fistpl
add
xchg
int
test
andb
mov
push
mov
notl
sub
lea
mov
rsqrtps
inc
inc
sub
sarb
fisubl
mov
adc
fcmovnu
imul
test
mov
jne
loop
mov
lods
loop
pop
cmp
mov
divl
mov
insb
cli
cmp
test
push
mov
jmp
or
leave
fsubrp
mov
jnp
push
mov
sarl
cmpsl
mov
pop
jae
jecxz,pn
or
dec
fcoms
mov
ret
mov
popa
mov
inc
out
jo
mov
adc
xlat
inc
rcr
adc
shll
pop
imull
jecxz
ja
repnz
sar
mov
mov
cmp
outsb
mov
push
in
add
pop
sahf
fidivrl
cmp
xlat
lock
stc
arpl
aaa
loopne
jae
or
push
xchg
gs
push
ss
and
mov
mov
mov
dec
fcomip
cmp
xchg
cmp
es
jge
mov
cwtl
test
sub
push
loope
cmp
mov
or
sbb
dec
xor
and
aas
idivb
dec
insb
lods
or
dec
loopne
cwtl
mov
mov
mov
or
add
push
das
movsb
push
cmp
std
aaa
or
xor
dec
cmpsb
stc
pop
sub
and
cwtl
ja
enter
sub
xor
arpl
stc
pop
mov
mov
adc
gs
fisubrl
outsl
pop
mov
inc
sub
or
pop
jge,pn
aas
out
daa
sahf
lds
lret
sub
add
insb
mov
out
mov
jbe
cmp
jbe
lahf
loop
enter
jmp
pop
inc
mov
fmul
mov
in
sub
lods
sub
xor
or
mov
inc
or
notb
jae
mov
or
aaa
pop
cltd
mov
dec
push
dec
adcl
in
in
mov
rcrl
xor
fdivl
mov
insl
push
lret
pop
mov
mov
gs
xchg
xor
in
mov
testb
mov
jp
comiss
lock
or
cmc
mov
mov
mov
int3
gs
mov
icebp
outsb
mov
movsl
hlt
cmpsl
mov
sahf
lcall
fsubrs
mov
push
das
enter
mov
dec
aas
xchg
dec
lret
jp
push
mov
das
addb
pop
jp
divl
lret
pop
or
mov
xchg
les
mov
push
in
cmpsl
hlt
int
mov
cs
pushf
lcall
cmpsb
sti
mov
lods
js
push
adc
inc
xor
inc
shl
add
sub
adc
pop
inc
adc
rclb
xlat
jae,pn
mov
pop
add
out
cld
ja
psubusb
push
in
push
jno
push
jno
jne
daa
cmp
sbb
xor
xchg
in
sbb
cli
faddp
sub
xchg
xchg
clc
xor
cli
cmp
loop
sub
xchg
pusha
in
pop
mov
pop
outsb
mov
xor
mov
xchg
xlat
mov
push
push
cmp
and
stc
push
mov
add
out
push
aad
mov
mov
xor
mov
pushf
pushf
sbb
mov
test
cmp
jl
lret
jnp
inc
sub
inc
lret
stos
inc
fs
addr16
add
pop
mov
mov
ds
sub
lds
pop
adc
out
push
sub
rcl
imul
and
jle
sub
lcall
or
ret
iret
jmp
js
mov
aaa
mov
jg,pt
or
mov
or
mov
push
dec
mov
mov
test
or
jmp
fcoms
inc
aaa
pop
mov
mov
mov
sbbb
shlb
inc
sub
push
aam
in
xlat
inc
or
pop
test
xchg
repnz
mov
push
sti
cs
or
adcb
enter
out
fistpll
dec
popa
mov
in
push
add
aad
repnz
in
sahf
xchg
pop
sarb
xchg
ret
and
jno
into
add
fisttpll
ret
lcall
leave
inc
or
outsb
jo
addr16
fiadds
fs
lock
xor
and
in
add
mov
bound
fidivrl
lds
jo
leave
and
loop
into
xor
push
adc
xchg
in
dec
pop
mov
xchg
add
daa
mov
jecxz
sub
mov
inc
int
bound
mov
and
ret
cld
aas
rorb
inc
push
xchg
xchg
cmp
pop
jmp
jmp
xor
and
push
lds
xchg
push
pop
adc
sub
scas
xchg
out
push
inc
iret
xchg
cmp
mov
xchg
jb
pop
push
pop
test
xchg
lret
ret
sbb
push
repz
into
out
mov
xchg
jecxz
imul
add
sub
add
dec
roll
jne
or
xchg
fxtract
push
jmp
lahf
negl
adc
mov
mov
add
repnz
dec
xor
cld
push
sbb
adc
pop
int3
mov
stc
in
movsb
in
pusha
leave
mov
adc
adc
loopne
mov
jle
jne
test
pop
imul
jno
xchg
pusha
mov
gs
sti
mov
popf
int3
pop
xor
pop
mov
gs
mov
mov
in
pop
xchg
add
xchg
dec
testb
push
cmp
test
jmp
push
pushf
add
xchg
jmp
push
xchg
xlat
and
std
mov
lods
cmp
or
cmp
ficoms
cmpsl
push
or
mov
pop
mov
pusha
sub
stos
xor
ret
cmp
flds
out
mov
jle
jg
push
in
jge
mov
mov
xchg
cltd
jecxz
cmp
rcll
xor
lahf
pop
xor
rcrl
lock
iret
lea
je
shrb
je
loopne
mov
mov
and
out
stos
mov
fadd
sub
dec
test
cmp
add
rcll
pop
adc
lea
jns
test
je
inc
xlat
fcomi
mov
sbbl
fs
lock
mov
pop
in
addr16
sbb
call
int3
xor
inc
cli
jmp
repnz
not
pushf
mov
daa
pop
inc
jmp
jp
ss
leave
or
sub
int
dec
add
scas
add
inc
subb
repz
xor
xchg
ret
popa
sbb
mov
mov
inc
rcrl
scas
jecxz
ss
imul
test
pop
mov
lret
jne
dec
scas
jae
push
inc
jmp
push
aam
fldenv
xor
rcr
int3
inc
inc
out
int3
mov
mull
hlt
add
faddl
and
or
ljmp
cs
shl
pusha
mov
negl
fmuls
cmp
leave
js
decl
push
cmpsb
je
cwtl
frndint
mov
mov
sbb
add
push
or
shrb
aam
push
pop
and
ret
sub
orb
lret
out
jbe
lds
push
es
lahf
mov
xor
mov
mov
mov
or
lock
inc
and
popa
rcrl
movsb
push
cmpl
je
inc
mov
lea
cmp
mov
mov
aam
adc
mov
orl
daa
xchg
add
rorl
lahf
push
or
scas
adc
cmp
mov
jo
inc
and
sub
xor
push
mov
xor
xor
mov
cmpsb
lea
xchg
enter
aas
outsb
push
mov
and
call
cmp
ret
xchg
or
mov
or
aad
mov
sahf
adc
and
in
sub
in
mov
xchg
jnp
xchg
movsb
pop
adc
call
xor
add
int3
mov
mov
cmp
insl
idivb
mov
add
in
outsl
push
inc
mov
sub
sbb
pop
std
dec
mov
push
test
and
jmp
daa
push
iret
push
mov
xor
mov
cmp
adc
cld
jno
stos
mov
in
and
fldt
cmp
mov
sbb
cs
cmp
dec
jns
and
lods
or
add
call
sub
push
cmp
leave
cmpsl
sub
shrl
cmp
mov
icebp
sub
cld
mov
cmc
std
inc
out
mov
xchg
push
adc
fstpt
inc
rcrl
mov
pop
dec
sub
arpl
and
mov
out
or
in
movsl
ss
xchg
sbb
jecxz
ret
das
jo
pop
data16
cltd
cmc
mov
xchg
call
popa
cwtl
addr16
data16
jbe
xchg
test
movb
jns
loope
mov
pop
inc
rorb
mov
popa
push
stc
jns
aam
dec
push
dec
mov
aam
pop
idiv
inc
cmp
fsubr
xchg
fcomip
add
pop
jbe
jb
push
mov
lret
adc
sbb
dec
cmp
sbb
jecxz
inc
add
mov
ja
scas
ret
or
push
xor
loopne
mov
insl
iret
dec
test
imul
stc
test
idivl
mov
inc
xchg
mov
movsl
in
push
add
outsb
push
fcmovnu
mov
jne
cli
lahf
pushf
aas
mov
pop
divl
adc
ret
dec
data16
repnz
aad
ja
mov
jp
stos
imul
pop
add
push
test
roll
jbe
mov
pop
xor
mov
ja
dec
cmp
push
dec
fsubrl
sahf
mov
scas
stc
sbb
inc
jge
shrl
pusha
stc
int
addl
add
and
mov
jecxz
aas
dec
mul
call
inc
divb
call
in
or
out
push
jmp
sahf
shll
mov
jnp
cmp
cmp
pop
or
lods
sub
xor
icebp
lcall
or
pushf
inc
push
sbb
leave
jnp
mov
insb
lods
and
mov
push
xor
mov
cltd
lods
out
or
inc
inc
mov
dec
jns
and
xchg
add
xchg
sbb
out
jge
inc
sub
cli
and
subb
mov
lret
inc
jmp
roll
shl
cmpsl
dec
icebp
lods
lret
stos
shr
adc
or
iret
sub
pusha
xchg
pop
adc
and
jbe
cmp
mov
dec
push
sbb
mov
std
adc
dec
or
flds
stos
jbe
test
cld
xchg
xor
arpl
xchg
in
add
add
sbb
mov
arpl
inc
push
xchg
jp
cli
cmp
push
ret
push
adc
jb
dec
pushf
cmp
pop
fisttps
pop
mov
aas
fdivl
insb
mov
call
mov
mov
insl
sbb
test
dec
das
ss
ret
fildl
loope
fcoms
jg
pop
scas
sub
add
adc
xor
icebp
test
mov
adc
pop
mov
pop
in
push
pop
cmp
movsb
dec
push
out
dec
push
push
lea
inc
jge
mov
sub
jecxz
repz
jmp
xchg
into
in
jno
sbb
xchg
aaa
movsl
lcall
sub
cmp
aas
mov
push
adc
outsb
xor
out
popa
and
cwtl
cmpl
inc
xor
mov
push
out
mov
xchg
jne
test
insl
inc
pop
mov
jbe
cmp
jne
call
push
int
cmp
and
in
lock
rep
xchg
sub
push
hlt
sbb
subb
xor
lcall
mov
cld
aad
dec
xchg
inc
lods
hlt
xchg
dec
xchg
in
mov
and
jns
adc
and
fsub
mov
mov
pop
xchg
mov
jo
frstor
xor
xor
xor
in
xor
out
out
out
imul
out
add
into
pop
aam
aas
pop
xchg
add
int3
sub
fcmovne
mov
and
mov
mov
mov
iret
sbb
fsubrp
or
call
cld
adc
xor
inc
cwtl
rclb
loop
cmp
gs
aas
popf
inc
jns
xor
ret
fstpl
add
adc
mov
push
jne
xchg
add
fstpt
std
and
xorb
mov
dec
mov
lcall
repnz
and
out
mul
jle
lods
cmp
dec
clc
ret
cmc
push
mov
out
adc
adc
jo
pop
xor
movsl
jno
or
mov
jle
nop
hlt
movsl
bound
ret
dec
lock
add
in
mov
das
movsb
pop
sub
push
pop
and
mov
cmpsl
or
push
xchg
out
imul
pop
mov
outsl
and
jmp
js
cmp
lea
rep
icebp
push
add
ja
mov
push
push
lret
pop
out
mulb
cmp
lds
add
jl
mov
cmp
hlt
add
mov
push
jns
jne
push
fwait
cli
fbld
xor
adc
cmpsl
leave
orb
fwait
lods
pop
cmp
mov
dec
push
jno
add
aaa
dec
popf
es
push
in
jns
test
mov
pop
hlt
rolb
push
xchg
sahf
or
mov
mov
push
adc
inc
inc
iret
cwtl
addr16
mov
rcrl
cltd
jbe
add
ljmp
fsubrl
je
sub
sbb
rolb
pop
xor
ja
cs
xchg
mov
pusha
das
fdivl
scas
in
and
daa
negb
push
add
pop
or
rcll
sbb
xchg
sub
es
cli
pop
in
xchg
insb
pop
addb
push
add
cmp
lds
sub
mov
cltd
xor
jp
mov
daa
mov
xor
inc
mov
adc
cmpsl
jmp
hlt
in
or
fistps
lcall
xor
sbb
shr
inc
xchg
or
mov
sub
sub
cwtl
lcall
push
or
pop
add
mov
inc
lcall
jb
jbe
push
mov
push
fs
jo
test
inc
popf
push
jmp
lds
inc
xor
orb
stos
das
xor
mov
sbb
cmpsb
add
jge
outsb
add
or
fsts
imul
cltd
xlat
add
sbb
scas
dec
aaa
adc
xor
pop
mov
pop
push
push
or
insl
cmp
xor
ljmp
fs
int
fdivs
outsb
hlt
call
fstps
mov
outsb
gs
mov
int
lods
mov
mov
mov
cmpsl
mov
std
ja
lea
push
xor
mov
rol
loope
ds
push
std
pop
outsb
push
mov
data16
movsb
ret
dec
or
mov
and
inc
jge
pop
jge
in
out
hlt
sti
mov
sbb
dec
sbb
lcall
dec
lods
popa
stc
hlt
pop
xchg
sub
jl
and
push
sti
xor
jb
ret
fs
xor
repz
jl
push
mov
sub
dec
cmpsb
add
and
sub
les
mov
lods
jp
push
out
bound
fst
and
inc
lcall
mul
xor
sbbb
jmp
out
inc
shrl
pop
adc
sub
xchg
nop
femms
addb
dec
nop
push
rcll
or
ficompl
mov
add
rclb
sub
jle
lock
aad
xchg
in
push
xchg
in
fstpt
pop
inc
mov
push
scas
mov
xlat
sub
push
aad
jl
fs
je
in
inc
fdivrl
mov
pusha
push
or
adc
xchg
jnp
iret
incb
movsl
dec
lahf
pop
gs
push
push
cmpsl
fs
sbb
iret
nop
insl
test
enter
in
arpl
out
jne
push
popf
xor
add
sbb
pop
ja
jmp
aaa
xchg
outsb
cmp
call
nop
das
and
pusha
mov
fadds
fs
mov
lahf
mov
mov
mov
cmpsb
jecxz
out
js
js
scas
pop
add
movsl
enter
mov
adc
and
daa
imul
test
test
movl
subb
ficomps
mov
push
arpl
clc
fstp
add
push
iret
ret
and
inc
insb
jecxz
jl
lret
aad
enter
loope
jne
fmul
outsl
cmp
add
adc
jmp
xchg
jnp
leave
sub
inc
js
jnp
dec
or
pusha
nop
xor
daa
jp
loop
stos
or
or
inc
dec
or
negb
xchg
mov
jp
jecxz
push
xchg
dec
stc
mov
mov
out
add
push
cwtl
test
sbb
insb
push
mov
mull
lds
xchg
mov
xor
pushf
movl
outsb
dec
jp
icebp
add
scas
or
imul
test
sbb
push
fsts
bnd
shrb
mov
cs
ss
aaa
mov
xor
pop
arpl
out
stos
outsl
add
mov
push
sahf
aam
pop
cmp
test
jno
cmp
mov
add
pop
push
xchg
les
rcl
sub
xchg
mov
add
or
mov
js
lea
push
jg
pop
mov
mov
out
sahf
add
mov
and
test
loop
pop
dec
pop
out
and
jge
jo
test
shl
jmp
or
cmpsl
into
fisubrs
js
mov
popf
mov
jl
fiaddl
ja
outsl
clc
jnp
xchg
in
pop
add
or
and
and
sbb
pop
dec
push
shl
popf
cmp
push
mov
push
test
mov
pop
es
jl
dec
cmc
in
mov
jae
push
jl
arpl
enter
lret
adc
insl
loope
add
addr16
call
inc
push
or
rcrl
shlb
lods
push
fsts
push
scas
pop
testl
test
mov
movsb
jbe
mov
mov
push
test
mov
arpl
outsb
call
std
mov
aas
and
xchg
cmp
mov
call
push
sahf
cld
and
add
push
leave
loopne
sub
jmp
push
lcall
mov
cmp
pop
and
iret
ds
xchg
mov
pushf
in
outsl
adc
and
pop
push
lea
into
mov
jge
test
sub
mov
rclb
pop
icebp
sbb
cmp
mov
pop
or
mov
pushf
movsl
repz
jp
cmpsl
sbb
aam
adc
dec
cltd
stos
push
mov
mov
xchg
gs
mov
inc
pusha
pop
popf
pop
mov
push
xchg
push
mov
stos
clc
or
shrl
xchg
pop
and
cli
mov
lods
dec
dec
push
mov
adc
push
fcmovb
sub
mov
repz
scas
push
out
mov
in
xchg
jnp
add
nop
mov
dec
push
insl
mov
es
add
sar
lock
nop
mov
add
fsubr
je
aaa
mov
stos
ljmp
lcall
stos
or
in
out
loop
data16
lcall
lock
xchg
mov
push
and
scas
sub
pop
pushf
mov
lods
mov
or
xor
lods
test
orb
cmpl
mov
insl
push
lods
jge,pn
push
mov
pop
xchg
roll
shll
jno
add
xchg
push
adc
push
in
fbld
outsl
mov
inc
dec
rcll
ds
enter
call
cmp
mov
test
fldenv
cmc
jb
inc
jle
dec
dec
fnstcw
or
cmp
ror
jns
adc
scas
xchg
in
xchg
cwtl
aad
push
gs
and
or
add
aaa
pop
ja
out
jecxz
mov
jge
outsb
cli
or
out
aaa
rcrb
arpl
mov
insb
push
inc
call
mov
sub
ds
sbb
fnsave
mov
mov
jg
and
jl
adc
pop
dec
push
stos
push
xor
adc
les
push
faddl
push
out
outsb
int3
daa
cmc
movsl
cmp
jge
push
mov
add
xchg
mov
movsl
movsl
and
mov
sti
xor
jne
repnz
and
rorl
mov
mov
insb
xor
jb
fsubl
les
or
jb
es
jae
push
and
in
push
xor
mov
iret
out
clc
xor
xor
pushl
leave
sub
ficoml
out
sub
xchg
add
repz
jg
pop
sub
imul
push
inc
push
xchg
add
dec
sub
fsts
add
popa
lret
imul
sub
jmp
popa
xor
xor
push
pop
jae
ss
inc
jnp
pop
pop
mov
ljmp
mov
or
push
xor
and
inc
popa
cmp
fstpl
mov
nop
lods
cmp
xchg
mov
fistpll
jl
push
push
sbb
and
nop
mov
inc
xor
lea
aam
data16
test
les
or
xor
int3
or
inc
xor
mov
xlat
or
fxch
inc
add
mov
dec
and
daa
inc
out
mov
mov
push
cmp
sbb
jp
cmpb
sahf
fs
repz
push
in
add
sub
mov
jle
push
sub
iret
ljmp
test
push
pop
dec
aam
jno
push
out
icebp
xchg
push
jmp
es
lea
adc
lahf
pushf
daa
or
lahf
mov
add
shl
jle
add
adc
add
ret
adc
in
push
call
sbb
sbb
inc
push
mov
mov
cmp
stos
push
xor
cmp
sbb
aaa
and
mov
sub
addr16
mov
hlt
push
adc
scas
xor
adc
adc
jle
dec
xchg
mov
test
adc
mov
xchg
hlt
pop
mov
fcoms
sbb
outsl
cltd
or
clc
cmp
xchg
or
xor
mov
xchg
mov
je
pop
popf
mov
add
push
dec
push
scas
xchg
lods
pop
xchg
xchg
stc
loope
lret
outsl
pop
or
leave
sbb
xor
add
xor
lods
sbb
push
push
mov
roll
aas
dec
adc
lret
data16
dec
stos
lods
jns
not
jbe
mov
and
cli
fnsetpm(287
arpl
rorb
lea
lret
out
iret
test
dec
sub
sbb
or
popa
mov
mov
nop
jne
insl
icebp
out
mov
iret
insb
das
inc
mov
push
in
adc
cltd
in
pop
sub
mov
add
xor
sti
arpl
shl
scas
sub
leave
push
cmp
cld
cld
sbb
cmp
cli
adc
ror
aam
out
icebp
shll
pop
insl
sbb
mov
mov
out
and
cltd
in
push
sub
xor
or
pop
sbb
mov
dec
xor
xor
xor
ja
pop
or
xor
insl
adc
xorl
xchg
mov
xchg
imul
adc
push
bnd
xchg
adc
js
fsubr
cmp
mov
imul
mov
ja
cmp
add
sbb
jmp
cmp
add
arpl
call
movsb
roll
fdivrl
mov
mov
mov
xchg
adc
mov
or
mov
lret
pop
xor
mov
ss
inc
repnz
nop
pop
sbb
iret
xchg
stc
adc
out
data16
pop
pushf
add
cli
jmp
push
adc
mov
aam
jbe
and
insl
adc
cmpsl
mov
je
xchg
xor
cli
loope
bound
enter
fidivs
cwtl
pop
add
xchg
inc
mov
andb
sub
pop
add
pop
push
into
outsb
inc
jb
jl
enter
int3
sub
ljmp
stc
sub
pop
repnz
sarl
sub
sarl
jbe
inc
loope
dec
out
jg
daa
xchg
sub
mov
stc
insl
and
shll
imul
jno
repnz
cmp
ret
push
test
popa
fadds
push
stc
xchg
sbb
scas
dec
mov
imul
xchg
nop
dec
sub
dec
inc
in
cmp
cmc
inc
add
in
jge
cmp
push
repnz
adc
call
inc
sub
sub
jmp
pop
aaa
xlat
fcoml
jle
jnp
out
add
sub
xchg
mov
arpl
push
aaa
dec
xlat
adc
push
xor
ss
repz
cmpsl
pop
fwait
sbb
and
in
inc
stos
sub
mov
in
adc
jp
mov
jbe
xlat
loop
push
repz
mov
sbb
enter
ljmp
ret
int
sti
gs
sub
cmp
pop
dec
xchg
repz
mov
leave
cld
sub
cmp
pop
push
mov
movsl
cmp
je
enter
subl
inc
fcmovnb
xchg
xchg
cwtl
popa
fcmovne
add
adc
and
xchg
lea
fldenv
repz
fsubs
and
das
enter
xchg
fwait
xchg
cmp
int3
mov
fbld
xlat
xchg
test
lods
enter
jmp
cmp
pop
sub
jnp
dec
sub
and
sbb
fwait
pop
aaa
pusha
mov
scas
cmp
out
nop
push
stos
inc
dec
pusha
xor
mov
scas
adc
out
sbb
mov
xor
fsubl
lahf
incl
pop
dec
outsl
xchg
push
rorl
dec
mov
orb
lods
fisubs
dec
xor
jp
and
imul
in
mov
adc
test
data16
and
lcall
insb
sbb
pop
xchg
mov
testb
xchg
outsl
outsb
leave
mov
stos
xchg
dec
in
push
fsubs
sub
jae
adc
ss
inc
aad
jne
pop
push
scas
adc
cwtl
not
mov
mov
outsl
mov
out
dec
sbb
jge
insl
push
mov
in
push
movsl
rep
in
sti
jle
cld
ljmp
sbb
sbb
shll
js
fisubrs
scas
loopne
cltd
jns
jno
xchg
and
call
jp
stos
movsb
cmp
fdivs
lea
les
mov
movsb
rclb
outsb
lret
jecxz
jo
icebp
fsubr
add
or
cs
mov
jmp
addr16
push
mov
jg
pop
clc
insb
imul
jg
cmp
shl
inc
sar
out
shrl
xchg
mov
in
or
cld
add
xlat
xor
ret
out
mov
inc
aas
add
pop
push
js
stos
outsb
out
inc
das
push
mov
bnd
add
aam
arpl
mov
dec
pop
stos
dec
or
mov
inc
inc
mov
stc
sbb
add
and
orb
mov
sub
test
imul
xchg
xor
daa
inc
push
cmpsb
xchg
leave
out
cltd
shl
mov
or
mov
jmp
jp
mov
jnp
out
daa
in
iret
xor
sahf
stos
repnz
test
jmp
jle
clc
push
lods
and
es
pop
jl
sub
pop
jae
mov
jmp
jp
push
addl
dec
inc
imul
outsb
stos
jle
sub
sbb
ss
xchg
xchg
pop
in
dec
xor
sub
test
enter
call
aad
jbe
dec
stc
scas
dec
sbb
xchg
cmp
fmull
clc
lock
icebp
mov
stos
lods
adc
dec
lods
sub
lock
lcall
ja
adc
push
push
jae
leave
sbb
push
inc
mov
sbb
mov
arpl
cli
inc
mov
jns
pop
repz
fmull
adc
pusha
in
rcll
int3
lahf
dec
lds
lds
mov
pop
jl
je
mov
push
lea
pop
jmp
sbb
sar
aad
leave
pop
lods
scas
adc
push
aad
sbb
mov
add
pop
out
loop
out
push
in
inc
ret
sti
outsb
dec
jne
mov
test
fnstsw
add
lret
mov
loope
lods
mov
iret
cmp
xchg
outsb
sti
cmc
into
xchg
jle
mov
pop
ljmp
add
popf
cmp
mov
fsubr
or
xorl
test
rorb
push
std
enter
push
inc
push
add
xor
sub
pop
push
repz
je
mov
cmp
gs
and
or
insb
scas
push
out
adc
cltd
or
scas
sbb
mov
aas
jecxz
lahf
or
pop
mov
mov
lea
stos
lret
pop
cmpsb
movsb
cltd
push
std
or
inc
cmp
pusha
mov
sub
fstpl
push
cmpsb
lea
ficoml
lahf
add
jmp
scas
and
or
xor
mov
or
test
xor
mov
jge
lock
mov
out
fs
push
pop
mov
xlat
negb
aaa
outsb
jno
sarl
aam
add
shlb
add
jno
add
mov
in
xchg
or
adc
cmp
add
gs
aad
inc
popa
inc
xor
insl
pop
filds
sti
daa
fimull
loope
pop
jmp
lea
testl
or
repz
xor
dec
bnd
cs
leave
rcrb
and
sbb
xor
fisubrl
jnp
call
shll
jl
insb
out
dec
dec
leave
jp
je
jg
mov
aaa
scas
cmp
sbb
or
ret
out
cmp
push
rcrb
jns
jnp
jbe
push
or
add
push
push
repnz
xchg
xchg
gs
pop
aad
push
sahf
int3
mov
outsb
test
outsl
enter
hlt
inc
cmpsb
xor
in
ret
test
lcall
lret
in
jecxz
push
orl
loop
popf
insb
stc
adc
add
sbb
dec
jge
xchg
fisubrs
repz
jnp
arpl
sub
sub
cltd
push
in
pop
dec
iret
adc
movsb
adc
sbbb
addb
mov
xor
push
jp
add
int
mov
ret
sub
mov
mov
sbb
je
sar
out
jmp
xchg
ret
or
mov
sbb
cli
jno
mov
xchg
es
cmp
sbb
stc
cmp
pop
jns
cmc
dec
cltd
dec
test
outsl
pop
shrd
inc
dec
pop
movsb
fldt
jp
pop
mov
sbb
xor
test
lds
repnz
sbbb
xor
sti
loopne
mov
leave
dec
jns
pusha
jmp
in
pushf
or
aaa
push
jns
and
das
sbb
rorb
aaa
sar
ret
enter
bound
xchg
mov
xor
loope
mov
and
push
shlb
inc
loope
out
addr16
inc
loopne
jp
pop
push
jl
cld
les
es
lret
dec
xchg
mov
xor
adc
add
pop
xchg
mov
push
sub
pop
sub
int3
mov
insl
dec
mov
adc
mov
mov
fadd
repnz
shrb
and
lret
sub
jno
jno
out
sub
scas
cs
rclb
dec
imul
hlt
jne
movl
jecxz
imul
xlat
dec
cmpsl
add
lods
xchg
adc
add
xchg
adc
cwtl
into
ds
and
mov
fwait
stos
add
dec
jno
xor
scas
loopne
out
add
fildll
popf
jne
test
int3
mov
jne
cmp
pop
mov
jl
inc
jo
or
bound
std
mov
mov
jb
ja
arpl
add
add
jp
out
dec
mov
insb
dec
sbb
or
iret
jmp
rcll
adc
jns
xchg
bound
in
ja
adc
dec
sub
xchg
cmc
push
jl
mov
add
pop
cmpsl
mov
fisttps
in
xor
pop
shl
inc
jmp
dec
lahf
pusha
mov
pop
int3
push
jle
adc
xor
or
cltd
scas
push
add
dec
inc
out
jge
add
xor
arpl
pop
push
jl
pop
adc
pop
mov
lods
cltd
insb
xchg
fs
mov
inc
push
add
sub
cltd
xchg
or
std
sub
test
sbb
xchg
out
cmp
mov
fiaddl
jge
sar
mov
or
xor
fidivl
leave
popa
in
jbe
pushf
stos
test
jbe
decl
dec
cli
xor
adc
mov
mov
lret
test
adc
xchg
lret
mov
or
imul
mov
and
sarl
sbb
je
inc
fwait
sub
add
adc
cmp
mov
sub
cmc
clc
add
inc
or
insl
jmp
movb
jae
repz
loop
fsubs
mov
jge
sbb
adc
adc
or
inc
out
or
out
fdivs
xchg
cmc
scas
icebp
lds
pop
jmp
addr16
push
xlat
push
jbe
ret
mov
or
pop
subb
pushf
ds
arpl
aam
pop
insl
inc
fnstcw
and
dec
inc
movsb
jle
or
push
loop
fimuls
jno
sarl
adc
mov
pusha
dec
sub
dec
pop
pop
negb
mov
jecxz
std
aas
jle
fwait
shl
inc
add
mov
jae
jnp
in
or
shrb
pop
adc
pop
push
or
daa
fisubl
popl
ret
xlat
add
clc
addr16
sbb
push
sbbl
and
sub
adc
push
inc
mov
ja
rcll
pop
xor
mov
pop
mov
lock
or
and
pop
ja
jg
cmp
pop
cmc
xor
ds
adc
mov
xchg
lcall
cmp
rorl
ret
push
movsl
leave
inc
mov
mov
js
sbb
add
cwtl
cmp
sub
int3
insl
dec
das
xchg
lods
inc
sub
adcb
push
dec
aas
mov
mov
xlat
mov
ljmp
adcl
and
dec
adc
jp
adcl
mov
call
cwtl
lods
pop
jecxz
test
sbb
push
lds
push
movsl
mov
ret
sub
add
ljmp
mov
lock
xor
adc
inc
mov
mov
xor
xchg
pusha
hlt
push
repnz
dec
xchg
sbbl
rcrl
lahf
push
xor
mov
in
in
aad
sub
aam
fidivrl
loope
push
dec
mov
pop
adc
mov
lahf
mov
mov
std
leave
cmp
pop
dec
push
fbstp
jbe
popf
or
mov
mov
std
xchg
jge
pop
fwait
adcb
arpl
in
adc
mov
adc
repnz
push
dec
test
popf
in
or
pop
clc
pop
jb
pop
inc
pop
sti
or
arpl
jg
lock
sub
es
dec
adc
aam
ds
mov
insb
call
push
sub
cmp
stc
xor
lret
xchg
xor
mov
jmp
rcll
pop
shlb
jno
jecxz
or
mov
lods
xor
mov
cli
dec
stc
repz
fildll
xchg
fistps
mov
outsl
and
cmp
lcallw
icebp
rorl
je
sub
scas
cmp
cli
inc
xchg
adc
mov
add
nop
add
stc
pop
jl
filds
scas
adc
call
cmp
cli
call
dec
pusha
and
mov
dec
mov
mov
xchg
push
fcompl
xor
mov
vmulsd
mov
jo
ljmp
dec
mov
in
lods
loop
out
mov
mov
pusha
jmp
jne
xor
cs
cmp
sub
imul
adc
rcrb
lret
push
aad
nop
pop
push
lods
fs
fistl
stc
mov
adc
sub
and
or
psubd
fidivrs
cmp
lds
aaa
int
jg
inc
lods
outsb
lret
xchg
mov
xchg
cltd
mov
jp
test
cmpsb
in
iret
add
pop
and
mov
enter
insl
jge
add
inc
push
dec
pop
sahf
mull
cmpsb
mov
movsl
gs
push
in
mov
idiv
adc
addl
pop
adc
mov
out
inc
imul
sub
mov
test
jno
sbb
adc
dec
repz
stos
cmpsb
fdivl
in
aad
mov
xor
jecxz
xchg
enter
pusha
dec
and
jmp
movsl
sahf
inc
fdivrl
mov
int
mov
sub
aas
jg
getsec
mov
insb
insb
jns
add
inc
jle
or
cmpsl
and
dec
jle
mov
cmp
push
adc
aad
sbb
movsl
addb
ljmp
lahf
insl
or
mov
idiv
inc
xchg
xchg
lret
mov
pop
mov
enter
push
sub
int
push
jb
dec
or
fisubl
or
enter
sub
sub
mov
push
test
data16
cmp
jmp
cltd
pop
stc
ss
mov
jle
iret
adc
lock
jmp
ret
xor
mov
cwtl
add
clc
dec
pop
hlt
pop
mov
aam
iret
shll
mov
cs
adc
mov
std
or
add
push
mov
arpl
out
ds
sbb
mov
xor
rclb
push
out
shrl
pop
xchg
hlt
mov
mov
xchg
lcall
out
dec
in
cmc
dec
and
loop
pop
jg
adc
clc
call
mov
lods
ret
mov
jo
xchg
aas
sbbl
sub
ds
pop
aas
les
cmova
icebp
int3
push
insl
push
cmc
and
and
subl
in
scas
adc
sbb
dec
lahf
test
ss
or
cmp
aas
imul
das
cmp
push
fwait
ljmp
test
pusha
notb
divb
not
or
pop
xor
jb
into
or
aad
mov
pop
orb
cmp
pop
popf
into
mov
pop
lods
sub
sbb
push
sub
pop
inc
and
mov
cmpsl
or
pop
mov
mov
ss
jae
push
fwait
adc
cmp
sbb
jbe
lret
outsl
movsb
pop
loop
dec
push
pop
mov
jne
fimull
mov
into
sti
mov
jno
pop
repz
arpl
rolb
setnp
cwtl
lds
or
mov
pop
add
shrb
mov
vfrczpd
add
push
pinsrw
pusha
repnz
adc
lds
xchg
loope
sbb
cmpsb
jmp
xor
insb
leave
jnp
cmc
int
subb
add
aaa
dec
rorb
inc
mov
lock
shlb
xchg
inc
jb
stos
sti
aas
cli
int3
dec
rcl
jbe
cmp
mov
cmp
push
clc
push
lret
ss
push
iret
sarl
cld
mov
mov
dec
ja
ret
jo
mov
outsl
push
xor
aad
lahf
lock
test
data16
nop
or
sub
outsl
icebp
sti
xor
mov
pop
adc
pop
pop
push
add
dec
sbb
cmpsb
sbb
push
fldenv
mov
cmp
rcr
dec
popa
les
jae
std
mov
shrl
das
mov
insb
inc
cltd
sbb
cs
iret
and
stos
sub
std
mov
icebp
adc
gs
pusha
jp
mov
jnp
mov
push
or
cmpsl
or
jmp
roll
stos
call
or
into
lock
sub
xchg
fwait
jbe
pop
or
dec
push
lret
push
outsb
mov
loope
push
dec
cld
xchg
mov
rolb
jp
in
and
adcl
les
push
shr
sti
inc
sub
into
stos
xor
loop
jmp
addr16
and
movsb
xchg
pop
test
popf
ret
es
das
es
cwtl
push
cmovs
iret
pop
or
xchg
inc
test
jbe
xchg
punpckldq
cmp
dec
jno
out
les
lret
movsl
add
cld
stc
loopne
lock
push
xor
insl
lahf
sti
loopne
mov
out
cmp
inc
or
jnp
cmpsl
test
in
sub
jge
jb
jmp
call
inc
sbbl
inc
sub
inc
cmp
and
ret
stos
ds
leave
sbb
jmp
adc
icebp
mov
xchg
fwait
movsb
dec
dec
ljmp
push
cltd
aas
in
mov
and
jns
jbe
imulb
insl
cmpsb
xchg
jmp
incl
mov
or
mov
aam
push
stos
gs
dec
xchg
testl
xchg
fmull
mov
sub
fdivl
xchg
sub
nop
aam
inc
daa
sbb
jae
js
add
cmp
mov
stos
inc
cmpsl
lds
add
xlat
cld
inc
in
xchg
mov
mov
push
aas
clc
dec
popa
or
jmp
push
inc
jl
ljmp
jno
inc
iret
or
gs
or
stc
ret
into
adc
cmp
imul
push
aaa
cmpsb
push
fiaddl
mov
mov
and
iret
repnz
insl
add
cwtl
xor
pop
loop
pop
in
fs
fistpl
lds
sbb
push
push
mov
cld
clc
cmpsl
ret
daa
hlt
inc
test
cmp
icebp
in
dec
jnp
jno
cmp
xchg
into
cmpsb
je
pop
enter
pusha
or
stos
icebp
adc
cltd
inc
addr16
pop
enter
adc
cmp
sbb
add
mov
adc
cmp
ds
xchg
jle
cs
in
adc
xor
sbb
test
add
sub
adc
js
ret
push
mov
gs
rcrb
lods
in
loopne
ja
leave
imul
adc
ljmpw
dec
adc
aaa
sbb
mov
cmpsb
dec
mov
mov
inc
imul
or
orps
adc
inc
js
mov
xor
sub
out
jo
fsts
push
outsb
mov
push
xchg
or
jp
rcrb
pop
dec
jns
xchg
jmp
test
cld
mov
int3
xchg
mov
les
inc
pop
loopne
in
test
ret
and
mov
daa
sarl
mov
add
mov
xchg
mov
sub
push
mov
fstpt
mov
dec
jmp
daa
arpl
inc
xchg
leave
push
mov
or
shl
dec
sar
in
push
xchg
mov
jb
popa
jne
rcr
testl
xchg
lock
jb
inc
push
jo
in
mov
and
xor
movsl
cmp
in
dec
push
xchg
cltd
add
inc
cltd
imul
stos
xchg
sub
fwait
sahf
and
fiaddl
and
pop
ljmp
subb
in
xchg
fcmovu
fwait
imul
pop
addl
dec
test
pusha
shrl
ja
mov
and
rcll
mov
push
jecxz
xchg
shlb
and
push
push
dec
cltd
mov
data16
cmp
sub
ret
sbb
std
pop
js
jne
fsubrs
lret
aad
cmc
movsb
sub
out
fistpl
ja
xor
loope
inc
iret
icebp
cmp
lds
popa
xor
mov
roll
push
inc
mov
jmp
sti
pop
push
cmpb
xlat
in
add
shll
ret
sub
jmp
test
lds
adc
adc
rcr
fs
test
sub
add
mov
mov
enter
push
call
loop
inc
std
jge
into
test
enter
cmp
mov
cwtl
aad
xor
inc
outsb
jno
push
out
and
adc
inc
into
jb,pt
push
mov
ret
fistl
pop
jle
jbe
push
xchg
or
aas
adcb
enter
xchg
xor
inc
dec
aad
push
push
inc
popf
xor
mov
cmp
push
addl
or
sub
sub
rcrl
sbb
sub
pop
mov
adc
in
push
mov
pop
push
pop
inc
push
mov
mov
inc
cmp
mov
sbb
mov
mov
aaa
xchg
push
icebp
add
jecxz
adc
test
scas
or
and
xchg
test
ret
ret
insl
pop
sub
stos
pop
sbb
insb
push
inc
in
pop
pop
fs
lret
fs
fdivrs
fmul
sub
insl
pop
adc
clc
hlt
outsb
mov
jecxz
movsl
stc
xchg
fdivl
adc
or
mov
or
lret
lock
mov
sbb
aad
orb
aam
js
jle
cmpsb
xchg
subl
aad
arpl
pop
shlb
xchg
cmp
mov
cli
lahf
mov
pop
xor
pop
pop
and
mov
addr16
popa
out
loop
pop
adc
int
sub
into
pop
inc
push
adc
xchg
imul
push
mov
jo
mov
pushf
xor
jnp
lods
mov
inc
xor
fcomps
cs
pop
ret
and
mov
fwait
jl
aad
mov
cmp
jge
cmp
add
xchg
push
push
jb
mov
push
jo
call
or
hlt
add
sub
lcall
lret
adcb
mov
stos
cmpsb
imul
xchg
enter
xor
je
push
test
fcompl
mov
lahf
mov
imul
insl
xchg
daa
and
cmpsl
adc
xchg
or
xor
mov
sbb
sbbl
test
dec
nop
bound
mov
jecxz
popf
mov
or
ja
hlt
fs
inc
cltd
scas
movsb
xor
dec
fsincos
clc
lds
mov
add
add
adc
xchg
mov
or
loope
xchg
and
pop
gs
ljmp
jbe
and
jns
inc
sbb
adc
int3
add
scas
sbb
ljmp
mov
jge
imul
add
mov
jne
push
in
aaa
ja
adc
and
fsts
inc
ja
push
sbb
addb
sahf
inc
inc
xor
pop
js
repnz
test
sbbb
jo
in
test
jp
and
outsl
pop
dec
aaa
xchg
repz
stc
lea
mov
ret
imul
and
or
in
in
ja
or
sub
adc
jb
pop
pop
pop
mov
adc
hlt
test
arpl
ljmp
xchg
je
xchg
mov
mov
js
mov
test
jecxz
cmp
mov
movsl
mov
inc
cmp
es
dec
mov
dec
stos
fstps
aaa
xchg
sub
pop
arpl
fsubs
sarb
and
push
scas
and
mov
xchg
out
push
sub
ljmp
les
add
xchg
jmp
mov
xor
clc
mov
stos
pop
adc
xlat
les
mov
jae
mov
or
adc
js
jg
test
xor
sbb
jmp
push
mov
cmpsl
or
dec
push
imul
cmp
mov
hlt
test
loopne
stc
jg
dec
popf
test
mov
and
mov
adc
cmp
out
sub
mov
cmp
shl
int
pop
xchg
add
movsl
ficoms
dec
gs
jmp
imul
outsb
xchg
mov
fsubl
adc
mov
adc
iret
or
or
fldl
test
xor
mov
mov
imul
daa
clc
sbb
jl
add
lea
sub
inc
stc
cs
adc
push
lcall
fwait
int
mov
out
repnz
adc
negl
in
syscall
dec
xor
adc
add
jmp
mov
push
or
fnstcw
push
sahf
sahf
stos
mov
mov
mov
ret
std
test
cltd
dec
pop
adc
sub
xchg
pop
mov
aaa
pop
mov
sarl
repz
xchg
or
fs
mov
pop
rorb
out
add
pusha
sti
divb
call
push
jle
mov
fldl
jge
movsb
fistl
inc
lret
repz
mov
dec
aam
or
movsb
outsl
stos
sub
leave
add
divb
sub
add
in
cli
xchg
cmp
or
mov
mov
pop
xchg
icebp
push
sub
pusha
and
iret
sub
sub
fsubr
lods
enter
addr16
adc
movsb
pusha
jmp
mov
movsb
insl
push
sbb
ja
xchg
dec
mov
fidivl
jne
mov
lcall
xor
mov
push
xor
arpl
das
mov
inc
mov
insb
lds
and
or
mov
mov
repz
inc
lods
or
stc
aad
xor
mov
ret
jnp
add
jne
pop
and
xor
cs
leave
or
rcl
xchg
inc
push
nop
cmpsl
add
repnz
mov
jo
push
inc
dec
in
add
movsl
inc
and
aaa
shll
icebp
mov
jg
xchg
pop
hlt
push
or
cmp
adc
pusha
adcl
dec
adc
push
dec
and
and
add
xor
pop
xchg
movsb
outsb
loope
adc
jp
jnp
notb
jecxz
push
je
jne
pop
or
and
cmpsl
pop
push
push
test
shll
add
xor
mov
pop
js
pop
cmc
sub
push
aam
loope
and
lds
sub
mov
jno
push
lahf
out
xor
mov
cmp
pushf
and
lds
mov
push
jnp
push
out
jle
fs
andb
mov
fdivrl
ljmp
ret
loop
dec
jae
rorb
lahf
sub
xor
lock
insb
shlb
ss
sub
cmp
cmpl
inc
pop
scas
inc
mov
enter
cwtl
fiaddl
fs
loope
adc
mov
mov
stos
mov
adc
push
decb
icebp
ret
xor
pop
dec
sbb
iret
mov
push
out
test
cmp
sub
daa
fdivrl
inc
jmp
pushf
push
jno
lock
pushl
pop
sub
fpatan
inc
sub
inc
xor
pop
mov
fsin
fcomps
xor
pop
xchg
in
mov
cmp
sbb
lret
jle
out
dec
out
icebp
hlt
je
dec
ss
sbb
in
mov
loop
dec
fcompl
xchg
popf
js
adc
cmc
mov
inc
das
repnz
iret
insb
test
xor
sti
jb
fdivr
pop
jbe
cmp
xor
rolb
mov
inc
jp
ds
sbbb
mov
or
jb
js
lcall
sub
xor
jno
or
xchg
aam
or
jnp
test
iret
jp
dec
mov
adc
cmp
in
or
dec
ficoms
xchg
pop
jg
ret
das
test
jl
jbe
and
in
cltd
cwtl
jne
fidivl
inc
mov
lods
cld
cltd
sbb
jns
xor
std
xlat
int3
rcr
ss
rolb
xor
insb
lret
xor
sub
xchg
mov
xchg
inc
xor
insb
push
dec
and
pop
mov
sub
cmpsb
pushl
shlb
sbbb
imul
jbe
push
push
sbbl
push
cmp
inc
mov
mov
adc
xor
ss
jle
testl
repnz
or
xchg
or
bsr
and
sub
ljmp
jle
inc
jne
fucomp
push
mov
nop
decb
sub
lcall
stc
repnz
jae
push
mov
loop
adc
add
mov
pop
xchg
in
enter
push
js
dec
cmp
sbb
cwtl
jnp
mov
in
insl
mov
sahf
add
mov
push
cmp
pcmpgtd
inc
mov
cmp
adc
outsb
leave
int3
mov
inc
cltd
lcall
leave
sbb
leave
aaa
mov
mov
cmc
test
jns
cs
out
xor
add
push
fpatan
lcall
popf
movsb
out
xchg
ret
or
lds
dec
scas
xchg
inc
das
loopne
xchg
and
es
adc
sbbb
and
push
mov
mov
dec
cmp
lds
lret
cmp
cwtl
add
cmpsl
mov
pop
lcall
lret
in
dec
xor
or
push
jl
loopne
xor
test
mov
jp
mov
jp
xor
jecxz
sbb
out
mov
cltd
cmpsl
xor
das
stos
aas
je
and
lcall
int3
adc
sbb
xchg
add
loop
rorl
insb
pushl
sbb
adc
mov
dec
inc
xchg
je
cltd
loopne
testl
rolb
test
xor
out
cmp
xchg
loop
lret
sbb
mov
shlb
xor
cmpl
roll
leave
push
and
push
add
sarb
cmc
imul
inc
push
or
pop
pop
ret
xchg
xor
sbb
aaa
push
rcrl
pop
xor
add
add
iret
ficoms
imul
loop
ljmp
stos
movsb
mov
idivl
insl
fstpt
mov
and
or
inc
sub
push
sahf
add
lea
scas
in
mov
xor
scas
mov
jno
cmc
out
xchg
hlt
mov
push
popa
adcb
ja
leave
repnz
sti
fsubrl
ljmpw
gs
out
rclb
adc
or
sbb
adc
shl
lods
xchg
or
adc
push
bound
cmp
dec
and
repz
sbb
or
sbb
mov
mov
jno
fisubrl
jg
pushf
mov
orl
nopl
aas
mov
push
mov
les
pop
or
and
aaa
jge
sti
lcall
negl
insl
test
mov
insb
inc
inc
leave
pop
adc
shrl
and
movsl
pop
stc
jbe
nop
popa
testl
mov
int
clc
xchg
mov
mov
addr16
add
sarb
int
jmp
aas
mov
scas
mov
ret
xchg
dec
cs
push
int3
fwait
aas
dec
les
insl
cmp
jae
push
out
insl
mov
push
dec
notb
dec
jnp
es
ljmp
je
outsl
stc
ficoml
ja
dec
pop
jg
data16
adc
in
addr16
addr16
aas
fisttpll
scas
or
pusha
mov
and
ret
int
add
ret
push
xor
push
in
cmp
enter
pop
add
add
mov
xor
inc
or
out
andb
pop
stos
mov
ss
inc
fwait
cmp
in
xchg
add
sbb
shlb
sbb
sub
jnp
lds
test
mov
cmp
or
sub
or
testl
sbb
or
stos
pop
insl
mov
aad
sub
lds
xor
xchg
sbbl
idiv
adc
rclb
lock
stc
loopne
mov
in
mov
add
push
pop
jno
sub
les
xchg
fidivrs
cmc
mov
ljmp
testl
dec
or
outsl
lcall
mov
adc
cmp
rcr
das
in
aas
lahf
cmp
mov
aas
dec
int
shll
in
shlb
addb
jmp
adc
mov
fisubl
pushf
decb
push
popf
test
add
fnsave
stc
xor
dec
lea
pop
xor
imul
dec
popf
stc
ljmp
clc
aas
mov
xor
mov
test
mov
mov
inc
repz
push
xchg
data16
adc
dec
clc
sub
mov
cmp
lret
mov
mov
mov
stos
push
lea
pushf
test
mov
dec
dec
loop
jnp
cmp
inc
cmpsb
mov
dec
xchg
aas
xchg
mov
mov
push
jae
add
adc
repnz
ret
push
fidivl
pusha
outsl
ret
fcomi
jnp
out
imul
pop
ds
lret
sub
cmc
push
jl
mov
repnz
sub
jl
inc
xchg
sti
shrb
dec
cmp
lret
subl
popa
pop
mov
xchg
pop
xor
jnp
test
xchg
and
and
mov
subb
imul
inc
or
mov
imull
jecxz
hlt
mov
jo
and
push
add
ds
mov
daa
aad
int3
scas
test
dec
lahf
push
jne
test
adc
pop
or
and
jecxz
aas
in
push
rorb
pop
xchg
mov
pop
mov
insb
adc
mov
sbb
mov
pop
imul
jno
sbb
xor
and
sub
inc
mov
out
mov
jae
cmc
loop
rcl
jns
and
enter
jb
mov
add
jmp
iret
inc
adc
sbb
xor
inc
mov
mov
test
gs
or
mov
into
push
pop
ds
fidivs
repz
inc
sahf
stos
inc
mov
outsl
lock
mov
imul
push
cwtl
mov
xchg
pop
clc
sub
test
lea
lds
pushf
jmp
aad
hlt
cmp
ds
add
jo
pop
int
outsl
jmp
xlat
add
fs
add
out
inc
fsts
cmpsb
mov
adc
or
jg
fldenv
cmpsl
lret
mov
pop
movsb
lret
mov
out
repz
adc
je
mov
xor
out
sarb
xor
push
sub
push
incl
sub
add
ret
mov
cwtl
push
jbe
or
or
test
insl
aas
push
jl
mov
in
push
dec
cmc
add
dec
rcrb
lss
in
dec
dec
xchg
into
aaa
sub
pop
jnp
inc
pushf
and
fstpt
shr
insb
out
cmp
jl
cmp
or
jnp
cli
jne
leave
out
mov
inc
ret
jecxz
add
lret
lret
lret
mov
enter
pushl
lret
aad
js
insl
jecxz
add
call
mov
xor
and
push
cmp
lods
inc
push
jne
lahf
out
cmp
cs
mov
inc
lock
test
mov
mov
and
insl
mov
xor
dec
dec
jno
and
push
mov
dec
mov
sbb
int
arpl
push
sub
mov
arpl
into
cli
imulb
hlt
cmpsb
sti
cmp
mulb
inc
loope
mov
fiaddl
mov
clc
mov
int
je
inc
in
adc
into
fwait
mov
stos
mov
cmp
fs
sahf
xchg
pop
aas
mov
ljmp
mov
fstpl
scas
arpl
push
out
out
push
mov
lods
push
in
adc
mov
repnz
leave
inc
outsl
outsb
adc
cmp
jecxz
mov
inc
add
mov
lods
push
mov
sbb
fs
gs
xchg
in
mov
push
cld
pop
mov
sbb
in
pop
push
repnz
add
push
out
or
pop
mov
aad
add
sbb
push
push
adc
push
or
in
stos
add
popf
add
fs
mov
js
jecxz
mov
lret
or
mov
test
sub
rcl
fwait
sub
adc
lods
daa
xor
test
sub
out
pop
mov
inc
ljmp
loope
and
xorl
movsl
clc
xchg
adc
add
mov
scas
lahf
sbb
test
sbb
mov
js
leave
loopne
jge
inc
mov
push
outsb
loope
pop
pop
pop
mov
cmpsb
dec
call
sbb
cli
nop
sbb
jne
push
orb
xlat
fsubrs
sahf
cmp
sbb
sarl
movsl
sahf
jge
pop
inc
mov
or
mov
cmp
adc
jp
cmc
mov
xchg
cld
gs
aad
xor
push
jno
in
lahf
mov
add
push
outsb
xchg
iret
imul
leave
cmpsb
push
mov
push
mov
dec
fsubr
data16
cmp
sub
fsts
push
xor
lods
jb
add
xor
out
scas
dec
add
rolb
pusha
xorb
cltd
adc
lahf
adc
pop
stc
movsb
fsubrs
es
arpl
fisubl
mov
ret
xchg
xchg
div
sub
daa
sub
inc
push
pop
imul
jns
jp
iret
xchg
xor
cmpsl
jbe
or
mov
loop
pop
cmp
pop
dec
pushf
xor
mov
pop
jo
push
ljmp
enter
xor
xchg
out
add
and
insl
mov
insb
add
ret
sub
fmul
mov
dec
call
cmpsl
rolb
pop
mov
cmpsb
adc
xor
mov
jb
sub
and
xchg
and
mov
jae
cltd
adc
inc
ret
jnp
imul
in
mov
mov
jnp
mov
daa
sub
cmpsb
in
xchg
xor
pop
and
adc
xchg
push
mov
mov
leave
out
cmp
aas
or
cmc
das
cmpsb
lahf
or
dec
stos
or
rcrl
inc
adc
ret
mov
xchg
jo
add
cmpsb
xchg
ret
pop
movsb
sbb
xchg
enter
roll
jns
ljmp
jns
gs
dec
into
cmpsb
mov
mov
enter
jge
adc
sub
add
jg
xorb
cmc
ljmp
cmp
and
sub
mov
xchg
sub
mov
jae
out
andb
pop
loopne
aas
lahf
outsl
fbld
pop
arpl
orb
out
arpl
jg
dec
dec
hlt
add
int3
lods
jb
repnz
int
sub
push
fstpl
bnd
push
push
incl
mov
into
aaa
hlt
adc
out
fcmovu
sub
add
cmp
push
fs
xorl
cmp
icebp
ss
test
cld
iret
adc
shlb
lcall
icebp
cmp
xorb
cmp
imul
jmp
aam
push
mov
jg
push
dec
jo
jns
roll
testb
cld
ret
stos
fiaddl
inc
and
or
filds
adcb
inc
mov
sbb
fcompl
stc
data16
shlb
jl
int
in
xchg
dec
xchg
sbb
push
sti
cld
stos
fistps
popf
cmpsl
push
and
push
jne
cli
das
fnstenv
mov
mov
mov
jl
and
xchg
add
xchg
dec
push
ljmp
scas
std
jns
int
ljmp
xchg
out
jg
mov
out
jp
jmp
mov
inc
jg
mov
cli
inc
icebp
pop
dec
cld
test
xchg
and
subb
or
inc
cmpsb
sbb
mov
add
xor
in
adc
shlb
xchg
adc
dec
test
mov
mov
xchg
sub
cmp
lods
mov
call
jp
scas
std
xchg
ss
in
or
xor
sbb
add
xchg
sub
mov
cs
loop
out
or
pop
sti
jp
cmp
js
cmp
dec
sahf
sub
and
pop
pop
inc
and
int3
xchg
mov
and
pop
jb
jb
push
cmp
mov
js
and
sahf
pop
stos
jge
adc
jecxz
ret
xlat
pop
xchg
repz
or
pusha
push
mov
mov
mov
cmpsl
je
dec
xchg
call
jg
jne
xchg
adc
jo
xchg
jb
pop
xor
inc
dec
in
outsb
xchg
mov
lahf
ds
push
insl
repz
icebp
inc
out
mov
push
test
add
ljmp
pusha
lods
cltd
inc
dec
outsl
inc
cmp
mov
fistps
insb
dec
inc
jbe
inc
ljmp
sbb
js
pusha
out
clc
cmp
in
leave
dec
in
in
pushf
xchg
pop
les
push
ret
xor
xor
xchg
aaa
sarl
xor
jp
lret
xchg
call
xor
fnstenv
push
cmp
cmp
xor
fsubrl
rol
mov
push
ss
and
xchg
jns
out
sbb
add
add
and
pop
imul
in
test
jl
and
mov
mov
xchg
aaa
lret
xchg
stos
push
stos
nop
bound
dec
adc
sbb
xchg
adcb
jns
fidivrs
stos
pop
and
fdivl
xchg
je
sbb
imul
pop
xchg
or
clc
add
mov
lock
repnz
out
mov
in
movsb
inc
lret
cmp
xchg
jecxz
adc
call
ret
xor
pop
aam
cmp
push
leave
imul
jns
push
jae
fiaddl
jns
shll
mov
ljmp
cltd
sub
dec
mov
cmp
das
movsb
daa
mov
jo
shll
fdivr
or
dec
xchg
negb
or
adc
xor
outsl
into
push
rolb
mov
enter
xchg
cmp
fsubrs
cwtl
bnd
adc
js
repnz
xchg
mov
push
lret
sbb
rcr
adc
stos
push
cmpsl
xor
cwtl
xor
shrb
jl
rorb
pushf
and
pop
je
adc
je
aas
add
dec
mov
inc
xchg
int3
call
sub
xchg
nop
push
sbb
je
int3
mov
mov
loop
pop
and
xchg
mov
xor
pop
jbe
mov
and
idivb
pop
push
and
push
cwtl
mov
jne
dec
lcall
daa
and
mov
pop
dec
cltd
lods
sub
xlat
xchg
dec
sarl
mov
sub
push
mov
aas
and
mov
shrl
cmpl
incl
inc
sub
mov
pop
stos
cmpsl
mov
movsb
cmpsl
dec
pop
clc
test
or
sarb
cmp
mov
sub
popa
rolb
push
sbb
and
aaa
jnp
test
dec
cmpsl
mulb
cmp
inc
rcl
jl
inc
pop
push
push
push
aam
lods
mov
and
inc
shll
test
into
sbb
icebp
fnstsw
dec
in
mov
xchg
out
data16
xchg
in
dec
fmulp
decl
dec
cmc
sbb
add
bound
into
inc
nop
es
andl
int
add
mov
pop
lea
push
push
or
or
nop
mov
dec
lahf
jmp
negw
or
movsl
add
ss
lods
popf
pop
sbb
push
daa
jno
push
push
call
jne
loopne
adc
push
mov
mov
fiaddl
jno
dec
mov
push
arpl
mov
aaa
jb
push
inc
outsb
sbb
dec
dec
roll
xor
xor
inc
pop
shll
fisubs
cmp
shr
in
lret
mov
fstps
mov
push
jle
lds
sbb
cmpsb
cld
scas
popa
ds
mov
lcall
push
cmp
mov
jmp
lcall
imul
mov
cmp
movsb
sub
dec
sbb
push
sahf
subl
mov
sti
std
and
arpl
dec
adc
mov
mov
jle
fimuls
pop
push
shrl
pushfw
xchg
sbb
adc
icebp
cli
add
fimull
in
ljmp
mov
cmp
jecxz
jmp
ret
jle
in
adc
popa
loope
movsl
rorl
outsl
outsb
test
mov
out
frstor
hlt
loope
scas
in
jg
in
jge
mov
mov
mov
push
mov
inc
cld
test
fs
xor
mov
push
aas
jne
into
xor
xchg
cwtl
xor
iret
fbstp
repz
or
aas
sbb
push
add
sub
test
push
xchg
jmp
pop
xchg
movsl
sub
out
and
std
jle
les
dec
orb
jg
fstpl
test
addr16
lods
sub
std
lcall
adcl
jl
cmpl
push
out
sahf
inc
adc
fldenv
jmp
in
adc
lahf
ficompl
xchg
mov
xchg
lahf
inc
pushf
xor
cmpsl
lods
out
insb
pop
ficomps
push
mov
xchg
mov
adc
das
push
sub
sub
cld
inc
in
inc
push
xchg
movsl
pop
test
add
ljmp
dec
mov
inc
xchg
daa
fstl
mov
mov
stos
mov
jb
pop
and
lds
mov
in
sub
mov
lods
aad
mov
inc
jge
adc
inc
arpl
xchg
popa
adc
cmpl
sahf
lcall
push
sub
dec
jne
xlat
dec
fbstp
in
mov
sub
cmpsl
lods
dec
jge
into
mov
sbb
mov
inc
push
hlt
lds
jae
dec
mov
sbb
pop
fcompl
fidivl
inc
pop
add
jo
xchg
lret
in
out
and
leave
push
jle
push
inc
xor
sbb
or
fcomip
mov
mov
repz
xor
xor
jb
in
dec
cmp
dec
mov
sbb
insl
sub
dec
pushf
push
repz
ret
push
or
popa
test
popf
sbb
jbe,pn
lret
lods
psraw
dec
bound
enter
sti
insl
xor
fsubl
adc
or
inc
jae
sub
or
jae
cmc
ret
jecxz
mov
es
adc
mov
push
push
jne
jo
and
sub
sbb
out
ja
inc
sub
fmul
scas
clc
pop
xor
cmp
push
add
jle
int
xchg
mov
mov
xor
adc
es
dec
or
cmpsb
movsl
pop
cmp
and
mov
int
cmpsw
sbb
movsb
movsb
pop
ss
jecxz
in
je
addb
test
loope
jge
aam
add
rorl
shlb
inc
adc
mov
xor
sbb
movsl
ljmp
fildl
inc
imul
lcall
dec
mov
cld
cmp
push
mulb
inc
dec
je
insl
loopne
fadds
test
cmpsb
mov
or
cmp
aas
inc
sub
and
lcall
mov
sbbb
test
mov
xchg
and
mov
icebp
sub
dec
outsl
mov
es
xor
out
add
lods
adc
das
incl
lock
pop
lahf
or
xchg
mov
cmc
xchg
or
xchg
dec
jecxz
je
jp
lea
test
add
xchg
mov
cs
mov
mov
push
ja
hlt
dec
ljmp
sbb
loope
ret
cmp
hlt
xchg
cmc
adc
pop
data16
ss
pusha
add
test
add
int3
jg
loope
adc
cmc
add
sub
in
mov
add
or
pop
xchg
call
mov
scas
fs
adc
int3
or
cwtl
mov
lock
lret
pop
mov
out
ror
pop
fidivl
sysenter
lcall
daa
lcall
pushf
movsl
and
sbb
cmp
dec
adc
out
out
push
and
mov
fstpl
ret
scas
pop
out
mov
jnp
push
imul
stos
insl
adc
push
stos
pop
mov
loop,pt
mov
add
cmp
inc
cltd
xor
arpl
popf
xor
xor
nop
push
sbb
jbe
insl
mov
rorl
dec
cmpsb
sahf
jb
cwtl
lret
scas
mov
xchg
not
cmp
cmp
add
cs
ficoms
mov
cmp
das
mov
out
inc
jmp
dec
sub
adc
jmp
push
sti
or
cmpb
sbb
cmc
movsb
mov
sub
cwtl
lahf
inc
ja
or
or
jno
dec
lock
dec
mov
gs
mov
or
pop
pop
adc
or
mov
int3
cli
outsl
rorl
cmp
cmc
xor
xchg
rcrb
je
cwtl
in
xchg
enter
push
mov
mov
mov
in
mov
shr
cmp
pop
dec
rol
add
cs
dec
stc
sti
and
rcrl
fsubl
inc
cmp
fiadds
xor
pop
jp
je
cmpsl
rdpmc
stc
jl
push
xchg
ret
stos
mov
inc
dec
xor
cli
jmp
mov
mov
shlb
adcb
and
inc
inc
xor
pushf
add
es
jle
xchg
add
aas
testb
cwtl
xor
repz
jg
mov
add
ret
push
ret
inc
push
cltd
stos
adc
push
adc
test
mov
aaa
dec
cmc
mov
push
aaa
dec
pop
mov
sti
aas
sub
cmpsb
faddl
pop
or
push
jl
nop
mov
dec
call
push
mov
ss
repz
cmp
test
ljmp
outsb
inc
or
and
jb
lds
xchg
movsb
scas
xchg
lcall
sbbl
dec
cmp
insb
fidivs
xchg
lds
mov
cmpsb
pop
mov
lcall
xor
lods
push
xchg
lods
mov
and
add
and
and
jno
pop
arpl
xor
rol
insb
out
pop
sbb
adc
add
mov
ret
out
adc
scas
rolb
ljmp
mov
insb
ljmp
adc
push
and
daa
xchg
dec
filds
imul
push
mull
pushf
xchg
dec
das
xor
push
repz
aas
xor
pop
sub
arpl
cld
jae
mov
jmp
adc
movsb
cli
inc
mov
mov
cld
mov
mov
sbb
lret
stc
aam
xor
cmp
jo
mov
sub
into
addr16
jg
cli
sub
xlat
push
mov
sub
mov
jmp
pop
pop
in
fwait
inc
dec
pop
jne
aas
ss
aad
imul
pushf
pop
test
jle
xor
movsb
push
mov
mov
sbb
pushf
push
jmp
or
jb
mov
push
jns
testb
hlt
fistpll
xorl
out
adc
mov
sbb
cmp
mov
test
mov
cmpsb
dec
xlat
out
inc
push
mov
xchg
fildl
call
add
dec
dec
stos
addr16
jecxz
and
xlat
int3
mov
fnstenv
mov
popa
into
jb
xchg
test
xchg
jmp
fildll
out
adc
push
pop
pop
sub
out
cwtl
inc
jl
sbb
rcll
cmp
push
pop
repnz
adc
dec
dec
out
insb
dec
dec
push
push
push
xor
sub
outsb
iret
hlt
pop
or
mov
and
xchg
sbb
lahf
popf
cs
ret
stos
fcmovbe
in
pop
xor
push
ss
fcomp
push
jl
mov
pop
dec
adc
int
mov
and
inc
sahf
outsl
jg
es
or
xor
pop
pushf
cld
fisttps
adc
dec
add
xchg
mov
inc
sub
outsl
sbb
ret
enter
ss
add
shlb
sbb
mov
cmpsl
shlb
dec
ss
jmp
jmp
leave
andl
xor
movsl
and
push
out
lock
cli
pop
ljmp
lock
and
fistpll
cltd
sbb
mov
scas
mov
cmp
mov
into
test
push
xor
pop
pop
ret
je
lahf
arpl
mov
test
stos
jle
mov
mov
cltd
ret
mov
pop
add
in
dec
sarl
adc
push
aam
shll
xchg
inc
sbb
mov
testb
lock
add
aaa
push
icebp
not
dec
push
sahf
pushf
xchg
sbb
dec
xor
data16
push
and
or
jl
sub
bound
lret
aas
sbb
flds
bound
mov
sarb
push
imull
sub
ret
xchg
sub
stos
xchg
jnp
movsb
bound
jns
mov
push
lret
fucomip
or
and
enter
jecxz
lahf
bound
ret
fs
jle
mov
adc
mov
sbb
inc
lcall
add
jo
push
sub
insl
jne
pusha
in
aaa
outsb
clc
sub
mov
jge
aad
mov
stos
mov
popa
lahf
inc
xchg
mov
sbb
ds
sti
pusha
cmpsb
mov
push
mov
movsb
inc
inc
fidivrl
std
cmp
cmp
jae
add
in
or
pop
lret
xchg
pusha
les
in
pop
and
or
inc
ss
and
mov
nop
and
dec
in
push
cmp
cmp
sahf
scas
fistpll
cmp
imul
pop
inc
push
push
cmp
in
jnp
pop
sub
in
cli
inc
fsubr
dec
mov
imul
ja
sub
movsl
inc
or
adc
test
cmp
pop
add
mov
shrl
stc
or
jmp
mov
movsl
adc
movsl
cmpsl
mov
lcall
inc
popa
ljmp
push
add
shrb
sbb
lock
dec
sbb
mov
jne
int3
add
cmp
rorb
adc
sub
into
test
in
sub
loop
xor
shll
xor
push
dec
jecxz
es
mov
xchg
outsb
push
xchg
adc
into
jns
out
xchg
mov
ficoml
jge
adc
inc
adc
and
jae
sbb
and
xchg
push
add
inc
adc
push
sti
int
xor
and
into
xor
add
pop
xchg
call
imul
adc
ljmp
jo
pop
test
sbb
and
iret
adcb
outsb
mov
adc
and
orl
push
insl
push
sbb
sub
sbb
xchg
fildl
xchg
mov
sbb
sbb
pop
cli
adc
or
mov
mov
jge
mov
push
xor
shrl
pop
push
call
shlb
pop
es
mov
dec
lret
popa
lret
xchg
lret
push
jl
mov
out
dec
lret
outsb
adc
movsb
push
mov
outsl
arpl
cli
adc
jae
mov
clc
testb
jno
data16
mov
dec
add
fdivr
pop
pushf
notl
ljmp
jmp
int
xchg
sub
push
xchg
psraw
adc
pop
and
jne
ss
fisttpll
ds
icebp
arpl
mov
in
push
mov
mov
icebp
ror
xchg
jbe
xlat
and
daa
test
cmp
add
push
mov
or
inc
cmp
dec
sbb
into
jg
or
fs
sub
push
call
mov
ficoms
adc
cmp
leave
imul
inc
stc
addb
or
stos
mov
mov
xchg
daa
push
mov
lret
mov
and
clc
in
inc
xchg
imul
mov
stc
mov
addr16
loop
mov
stc
arpl
push
lret
mov
xor
xchg
and
in
and
cmp
pop
or
lret
ja
ret
mov
and
shll
mov
xchg
movsb
jle
mov
imul
sarl
inc
stos
cmp
scas
pop
imul
jo
rcr
push
push
ds
lock
ret
outsl
push
lds
rorb
adc
mov
call
stc
nop
adc
add
aas
cli
sbb
subps
das
add
loope
pop
loop
lret
cli
mov
sub
and
xchg
or
call
xor
stc
jge
adc
and
pop
sub
and
xchg
dec
mov
xor
cmpsb
fisubrl
stos
adc
popa
inc
ljmp
cmp
push
push
leave
lret
jp
test
in
inc
sbb
adc
pop
outsb
int3
out
dec
fisubs
push
jle
outsl
sbb
rcl
jp
jg
arpl
repz
pop
fcompl
test
add
fwait
pop
mov
jl
push
adc
icebp
xchg
mov
rorb
push
inc
clc
inc
adc
jae
test
leave
fdivs
pushf
adc
mov
ja
in
sub
test
ljmp
mov
pop
or
xchg
enter
pop
icebp
xchg
xor
push
clc
push
jbe
out
add
fucompp
inc
mov
xlat
test
mov
fdivrl
cmp
push
jmp
bound
cmpsb
xor
das
js
dec
and
out
sub
add
cmpsb
sub
xchg
dec
dec
or
push
cmc
pop
test
out
sub
fdivl
lock
mov
push
std
fs
add
rol
and
push
and
xor
lret
mov
push
dec
insl
inc
aas
add
arpl
lea
add
add
fdivrl
in
out
notl
and
rcrb
mov
data16
inc
loopne
jmp
jp
push
sbb
aad
aad
jmp
adc
cltd
pop
aad
xor
mov
jecxz
repz
and
scas
scas
lods
rclb
sarb
fldcw
stos
sti
testl
test
mov
pop
pop
push
or
jle
xor
or
mov
sub
mov
pop
dec
push
cs
cltd
popa
cmp
js
jns
rcrl
xchg
and
xor
mov
out
and
inc
nop
dec
repnz
mov
and
jns
ljmp
ror
adc
stos
mov
jg
mov
fs
stos
fmul
fdivrl
xchg
outsl
icebp
sub
out
push
and
pop
pop
and
lcall
or
nop
loope
js
mov
int3
rclb
and
popf
inc
mov
dec
lods
cmp
out
test
cmc
rcl
dec
mov
dec
stos
movb
mov
loope
int3
jno
out
sbb
cmpsl
xchg
loope
sub
les
inc
mov
insb
adc
repz
pop
pop
aam
les
popa
cmp
sub
rorl
imul
out
sar
mov
xchg
clc
sarb
add
inc
adc
add
sbb
sub
sarl
call
pusha
test
or
sar
fmull
cli
cmp
mov
arpl
mov
loopne
fbld
xor
mov
int3
fwait
pushf
std
pop
or
push
adc
fstps
ljmp
imul
xor
cmc
loope
mov
push
mov
imul
ss
add
fimuls
jmp
mov
adc
lds
dec
push
bound
mov
mov
sbb
push
adc
or
aam
mov
test
lods
and
cmovbe
mov
subb
or
fs
cmc
pop
out
aas
sbb
add
mov
mov
dec
mov
and
lahf
es
sub
outsb
xchg
pop
mov
repz
or
stos
mov
push
cmpb
dec
push
out
cmp
jnp
repnz
mov
sub
in
mov
insb
sub
mov
inc
mov
pop
jecxz
push
pop
mov
jl
sub
jbe
xchg
fs
push
loop
shrb
mov
fistl
pop
mov
scas
int
cmpsl
push
push
push
icebp
or
jae
jnp
lret
sub
arpl
mov
repnz
inc
adc
xchg
jo
add
cli
xor
xchg
add
icebp
pushf
jle
loope
std
shlb
hlt
inc
popf
mov
loope
jnp
or
call
mov
js
stos
lds
pop
and
mov
sbb
and
cmp
loop
sub
push
icebp
ret
stc
or
addl
and
jl
cmp
and
movsb
push
add
pop
data16
jnp
cmpsb
in
je
lods
add
pop
jne
jp
cmpsl
es
inc
aad
insl
xorl
sub
shll
sahf
outsb
mov
jnp
enter
scas
xchg
call
pop
mov
push
lock
xor
sub
mov
and
sbb
sub
orl
lcall
push
jmp
mov
out
sub
xchg
xchg
add
adc
mov
movsb
sbb
les
sbb
daa
call
mov
iret
rorl
sbb
xor
xchg
jle
mov
shrl
mov
addr16
sbb
dec
mov
mov
inc
je
movsb
xchg
xchg
out
dec
out
xchg
mov
mov
les
or
mov
inc
lret
mov
jno
add
pop
pop
sub
data16
je
imul
mov
stos
mov
aas
fbstp
mov
in
aam
cli
enter
ds
xor
dec
scas
in
mov
sarl
push
repz
mov
fdivl
aad
in
enter
test
or
add
or
aas
leave
jecxz
mov
cmp
and
jae
int
or
stos
decb
das
jmp
inc
mov
push
xor
sti
aam
imul
test
test
js
jne
xchg
js
and
push
lods
push
sub
ficoml
sub
jb
mov
mov
sub
jbe
fs
add
mov
stos
pop
pop
mov
and
orl
inc
jae
dec
cmp
mov
rclb
lods
push
inc
imul
test
fstl
je
sbb
mov
in
mov
pop
ljmp
mov
pop
xchg
int
mov
aam
xchg
imul
mov
es
leave
xor
icebp
into
pushf
arpl
out
mov
jle
mov
sub
or
cwtl
push
movq
outsb
stos
push
movsb
lock
scas
inc
mov
scas
out
and
xchg
shr
add
loop
fisttpl
or
sub
rolb
jle
pop
pop
mov
push
fwait
or
scas
cli
imul
in
jns
xor
popa
addr16
lods
lea
data16
xchg
adc
das
divb
cltd
xchg
pop
push
and
adc
shll
adc
fst
cli
xor
mov
add
in
and
or
dec
pop
scas
cmc
mov
mov
jno
fdivs
push
loope
adc
cmp
movsb
cmp
ljmp
cwtl
in
fadds
and
sub
sub
lahf
xor
dec
sahf
fisubrl
jmp
mov
sbb
mov
xchg
cmpsl
sub
mov
shr
fimull
and
dec
out
cld
cmpl
outsb
in
out
push
jo
ds
mov
daa
inc
pop
in
inc
mov
call
xchg
ss
push
push
rcl
sub
popf
mov
pop
or
add
jge
and
mov
ud0
and
in
loop
stc
in
adc
lcall
clc
loope
fwait
lret
mov
loope
mov
push
push
sti
sub
scas
and
cmc
dec
out
sbb
add
jp
mov
xchg
pop
rcl
imul
aad
fdivr
std
add
popa
lods
add
push
sarl
lods
incb
rcll
cmp
jmp
mov
push
fdivrp
dec
adc
data16
jno
add
xchg
out
popf
out
mov
cwtl
icebp
aad
gs
and
sbb
lahf
sbb
push
js
sbb
sub
sbb
dec
push
sbb
insl
sub
iret
pop
cli
sbb
pop
call
fstps
xchg
inc
jg
out
dec
xchg
dec
mov
addr16
movsb
or
xlat
cmpsl
testl
mov
lahf
jmp
sarl
int
jbe
pop
out
mov
subb
mov
rol
addr16
mov
repz
filds
cmp
xchg
dec
push
adc
xchg
imul
cld
adc
stos
enter
push
xor
inc
loop
out
testl
and
pop
call
xchg
mov
in
js
std
lcall
pop
xchg
xchg
ret
leave
push
ljmp
js
jae
or
repz
adc
addb
insl
insl
in
call
rcll
das
mov
adc
xchg
xor
ds
add
stos
pop
loop
repnz
outsb
xchg
lret
add
inc
jmp
mov
pop
lds
jno
mov
pop
bound
mov
xchg
jno
add
dec
cmp
mov
mov
lods
dec
dec
repz
aas
pop
mov
or
xor
dec
inc
outsb
icebp
out
cmp
dec
push
mov
divb
inc
or
inc
push
ret
inc
push
js
inc
dec
shl
das
push
aaa
iret
xor
mov
sbb
and
jno
dec
loop
popa
adc
fcompl
rcrl
lds
mov
lea
mov
inc
in
hlt
loop
call
repz
cmc
mov
fcomps
je
pop
loopne
aaa
adc
xchg
xlat
stos
movsb
and
add
pop
dec
aas
movsb
jns
sub
sbb
daa
push
daa
mov
mov
inc
testb
ja
fidivs
sub
xchg
mov
stc
cmp
add
sbb
sbb
dec
aaa
sbb
mov
lahf
sahf
mov
jge
pop
mov
in
fsts
sahf
fs
inc
out
rcrb
lcall
int3
ret
in
sbb
and
mov
xchg
leave
lods
ss
ja
cli
enter
shll
enter
jbe
loope
xchg
sahf
mul
sub
fildl
ss
icebp
or
jbe
add
mov
mov
push
add
ret
outsb
jecxz
dec
push
das
shlb
mov
fsubs
gs
jnp
dec
pop
mov
jns
adc
jb
bound
dec
add
mov
push
in
fwait
rcrl
pop
sbb
xchg
aam
filds
xchg
mov
lahf
sarb
nop
addl
ret
sbb
inc
xor
mov
stos
adc
jg
lea
inc
bound
adc
mov
fs
lahf
jne
or
addr16
bound
imul
cmp
mov
loope
ficoml
add
lcall
pusha
or
lods
adc
rorb
out
les
jp
xchg
sbb
ljmp
dec
mov
aas
pop
jbe
idiv
jecxz
mov
cmc
test
clc
pop
stos
rorl
cmp
ljmp
mov
cmc
xchg
sbb
out
sbb
jecxz
lcall
test
add
push
leave
adc
dec
lock
pop
sub
or
cli
sbb
cmpsb
pop
add
push
movsl
in
sbb
es
jge
cmc
pop
push
int3
ficoml
lds
movsb
mov
insl
push
mov
fistpll
nop
mov
popa
cltd
ja
sbb
pop
xor
sub
push
dec
adc
lcall
add
rcrb
or
pop
inc
stos
test
mov
addl
xchg
xchg
push
lahf
lods
movsl
mov
imul
cmp
adc
adc
inc
adc
nop
mov
iret
jnp
movsb
jae
shl
mov
pop
jnp
data16
iret
ja
dec
es
je
inc
movsl
fwait
pop
rcrl
cwtl
sbb
shll
pusha
je
jae
out
push
into
mov
inc
adc
jae
leave
bound
lea
ja
inc
adc
xor
xchg
mov
test
mov
mov
outsl
fdivrl
and
adc
in
adc
sbb
loop
xchg
into
stos
testl
movsl
cmc
xchg
int3
sub
xor
cmp
lret
aas
lret
out
inc
mov
push
imul
icebp
sbbl
mov
inc
pusha
and
icebp
inc
cmp
xchg
rclb
stos
jb
gs
sbb
and
xlat
subl
mov
xor
cmp
mov
jmp
dec
sub
inc
adc
jmp
mov
data16
frstpm(287
aas
incb
in
dec
das
sub
inc
negl
imul
shl
xor
add
sbbb
insl
mov
scas
and
add
int
lods
pop
call
mov
adc
sub
adc
roll
test
lret
inc
bound
movsb
stos
and
mov
pop
adc
jle
imul
negl
mov
mov
xchg
jo
lods
cld
arpl
hlt
outsl
loop
aad
in
iret
aaa
das
xor
and
mov
cmp
xor
mov
and
fnstcw
dec
inc
push
loope
loop
or
pop
dec
add
ja
movsl
mov
push
dec
push
test
adc
int
mov
cmpb
pop
pop
test
inc
clc
stos
push
jns
lods
inc
push
aaa
mov
test
sbb
lcall
cmp
pop
adc
ret
jecxz
insl
test
nop
inc
cmpsb
lcall
mov
jns
fwait
cmpsl
mov
mov
ja
imul
sahf
lcall
sbb
inc
pop
movsl
pop
int3
pop
xchg
adc
adc
call
popa
or
push
pop
cmp
add
push
pop
adc
mov
mov
cmp
insb
cmp
adc
jle
mov
xchg
sbb
jne
xchg
repnz
imul
sub
add
inc
movsl
lret
popf
aam
inc
lahf
fldenv
cld
push
into
cmpsl
pop
ljmp
pop
mov
popa
ja
mov
inc
push
sbb
and
jp
sbb
and
inc
push
mov
add
int
jne
repz
popa
cli
xor
push
das
leave
cmpsl
adc
sarl
cmp
xchg
dec
bound
roll
mov
sub
orl
xchg
xor
loop
jae
iret
push
xor
in
xchg
les
ficompl
addr16
pushf
stos
inc
or
jne
fdiv
pop
in
lcall
sub
lcall
pop
lcall
or
lea
in
mov
push
add
or
dec
add
mov
jp
ficoml
aam
add
out
in
lock
xor
mov
push
jb
bound
js
mov
jle
test
les
aad
mov
or
push
popa
xor
aas
sub
cmpsl
mov
repnz
and
adc
sbb
lds
mov
ret
movsl
mov
jmp
stc
lods
cmp
push
pop
mov
cs
scas
arpl
adc
fucomp
or
push
sbb
lds
sub
push
dec
mov
add
in
sahf
mov
outsl
pop
in
mov
lods
cmp
nop
test
push
mov
inc
push
xlat
or
ljmp
add
pop
rol
insb
cmc
and
xor
lret
cwtl
mov
push
imul
sbbb
mov
iret
dec
adc
mov
addr16
jbe
les
mov
popf
and
cmp
mov
out
out
sub
push
sbb
xchg
add
dec
mov
jl
fisttpl
repz
inc
outsl
frstor
out
mov
add
psubd
mov
jge
dec
jp
movsl
cli
pop
pusha
jnp
subl
cmpb
sub
dec
pop
mov
fisttpll
adc
lods
hlt
jo
xor
xchg
mov
add
jl
jnp
pop
adc
testl
xor
iret
jmp
in
mov
je
mov
rcrl
pushf
jl
mov
push
dec
push
pop
dec
mov
in
sbbl
sub
xorb
movsb
mov
fs
xlat
gs
fisubrl
int3
leave
cmp
pop
push
or
hlt
movb
fs
push
movsb
fistps
sbb
stc
cmp
inc
cmp
sahf
mov
je
adc
lret
or
dec
sbb
jnp
inc
mov
inc
sbb
rcll
lds
insl
movsl
jmp
lea
add
hlt
sbb
lret
push
cld
mov
push
fst
in
or
sbb
xchg
fdivs
adcl
pop
aam
bound
and
push
mov
sub
fwait
cli
sti
push
sbb
movsl
stos
leave
fistl
push
std
pop
mov
mov
dec
in
jge
mov
fstl
xchg
jb
push
push
pop
pop
jns
imul
scas
pop
mov
push
jo
shrl
dec
jmp
addr16
inc
dec
and
sub
pushf
add
aad
jp
jbe
lock
push
ja
push
mov
dec
pop
lds
dec
test
andl
pop
popl
push
cs
adc
insb
shlb
jp
cmpb
popa
cmp
jo
orl
jae
test
cmc
out
stos
jo
add
movsl
mov
fcomps
xor
push
cmpsl
in
mov
xchg
es
imul
jl
mov
jp
int3
je
push
ret
jo
hlt
loop
pusha
stos
adc
pushf
pushf
hlt
sbb
pusha
jno
pop
inc
std
sbb
orl
test
mov
cmp
mov
push
xchg
insb
adc
push
icebp
out
xchg
iret
lock
test
jge
jno
dec
addr16
xchg
aam
fwait
jp
into
lea
mov
xor
ret
or
mov
mov
xor
push
mov
frstor
out
mov
dec
fnstcw
mov
ret
and
and
push
mov
push
mov
into
jg
or
mov
ds
lret
push
and
sub
or
imull
push
mov
push
jne
fstps
xlat
aad
or
loope
mov
push
dec
mov
push
cmp
adc
jb
hlt
dec
fcomps
jecxz
repnz
pop
jo
inc
xchg
aam
test
pop
xor
leave
cli
cmp
test
push
mov
pop
aas
std
jno
in
loope
dec
xor
pop
sub
rcrl
aaa
pop
and
cmovs
jp
cmp
mov
ss
int
ljmp
cs
pop
adcl
arpl
jecxz
mov
js
es
and
lea
arpl
ficomps
mov
popa
jle
push
adc
dec
test
pop
cltd
xchg
and
aaa
sub
lds
xchg
pusha
mov
pop
ror
push
inc
xor
mov
sbb
cs
xchg
sbb
pop
cmp
push
inc
mov
xchg
in
cmpsl
cmp
lret
dec
and
fnsave
ffree
jle
rorb
out
mov
test
popl
in
sbb
xor
movsb
xchg
xchg
aaa
fsubrl
pop
sbb
cmp
add
push
js
cmpsb
jg
fisttpl
outsb
pop
add
mov
jae
mov
adc
xchg
push
push
fidivs
dec
xor
in
mov
pop
inc
or
arpl
mov
outsb
push
inc
mov
sub
fsubl
daa
fs
xchg
movsl
dec
sub
inc
mov
les
jge
adc
jmp
sub
cmp
loopne
jnp
das
mov
jae
lods
mov
sbb
ja
pop
dec
push
in
xlat
loopne
or
or
inc
dec
xchg
xchg
push
lds
cmp
rorb
int
or
xchg
xchg
sbb
or
lahf
mov
dec
rcll
and
and
add
pop
popa
cltd
jl
mov
sbb
xor
mov
sbb
push
fcmovb
xchg
jmp
lods
iret
and
inc
push
out
iret
out
or
lods
jmp
cmc
jno
pop
mov
lcall
adcb
movsb
scas
aas
sbb
cmc
cli
lods
xchg
mov
add
ss
add
add
lds
pop
sub
fistpll
and
mov
icebp
jmp
ret
xorl
and
out
jge
xchg
loope
repnz
gs
mov
and
mov
int
and
outsb
xchg
mov
daa
push
cmp
and
inc
sub
inc
fidivrl
mov
pop
add
add
lea
lcall
push
mov
cmp
mov
sbb
xchg
repz
inc
xchg
jmp
bound
inc
pop
xor
pop
mov
aaa
leave
and
cmc
pop
mov
punpckhwd
js
dec
push
popf
cmpsb
shr
popf
pop
xor
fs
in
jle
je
popa
mov
pop
xor
sub
mov
lods
shll
cwtl
repz
mov
shr
out
les
jb
mov
jge
jge
jbe
add
mov
loopne
insl
pop
jge
aas
sbb
or
jg
and
or
pop
fcoms
dec
sbb
fwait
ds
mov
cmp
push
scas
shrb
add
mov
jb
nop
pop
mov
cltd
and
mov
imul
das
lea
int
lcall
fcmovnu
test
mov
fisubrl
push
push
addl
outsl
cmp
loope
mov
cmpsl
out
popa
cmp
and
inc
cmpsl
and
fwait
mov
fistpll
inc
scas
in
xchg
pushf
push
outsb
sub
push
mov
sub
fs
inc
aaa
xor
loopne
push
jecxz
out
or
test
lahf
mov
lret
ret
xor
cltd
cmpsb
or
mov
in
aad
sbb
xchg
scas
jb
roll
mov
add
out
xor
sub
sub
aaa
pop
stos
sbb
and
adc
fsts
leave
sub
mov
pop
jnp
imul
xor
mov
aas
xor
insl
xor
test
fistl
scas
xchg
cs
push
push
push
xchg
ffreep
in
ficomps
pop
pop
cltd
dec
add
lock
test
inc
mov
inc
mov
cmp
enter
mov
push
jecxz
push
or
or
mov
and
scas
mov
sahf
or
dec
mov
push
daa
xchg
les
int3
mov
repnz
sbb
ljmp
test
dec
int
lret
es
popf
lods
loopne
mov
shll
mov
mov
stc
mov
imul
les
inc
push
orb
mov
inc
iret
je
popa
push
int
test
add
jmp
mov
add
mov
leave
jb
xchg
push
pop
mov
imul
stc
scas
pusha
adc
movntps
movsb
xchg
push
jmp
lds
lods
dec
jno
je
or
imul
mov
xchg
pusha
push
push
popa
adc
ja
testl
in
mov
repz
push
xor
push
sti
inc
pushf
and
aas
into
sub
cld
mul
lahf
lods
jb
xchg
inc
fmuls
push
jle
mov
sub
scas
add
rcrb
testl
dec
js
and
outsb
leave
scas
mov
lock
data16
loope
adc
bound
or
pusha
push
fisubs
cwtl
lods
loope
loopne
roll
bound
scas
dec
push
js
fidivrs
js
xchg
sub
loop
push
pop
pop
sarb
xor
inc
mov
mov
loopne
aad
cmp
dec
pop
jmp
xor
out
mov
pop
adc
mov
sub
jp
jns
mov
mov
adc
mov
divl
je
add
fldcw
push
addr16
subb
lahf
cmp
jl
lcall
popa
xor
pop
rcll
push
cmp
stos
rol
in
ret
pop
shll
xchg
rclb
push
mov
xlat
pop
adc
jl
or
gs
cmp
scas
cmp
inc
ficoml
fistl
roll
add
inc
and
mov
jl
cld
jno
xor
mov
and
and
std
mov
or
aas
arpl
mov
inc
mov
xchg
pop
inc
into
push
xor
mov
sub
mov
fnstsw
stc
dec
ljmp
pushl
fwait
push
sbb
sub
push
sbb
pop
enter
dec
jp
push
roll
sub
and
adc
pop
call
std
dec
adc
sbb
xor
icebp
jp
shll
mov
xor
int
in
pushf
pushf
push
iret
into
mov
into
rcll
imul
sub
data16
and
out
ljmp
gs
popa
pavgw
dec
jecxz
ss
clc
mov
imul
es
int
outsb
orl
push
xchg
and
repz
adc
ret
fsubrs
insl
movsl
lea
or
jne
push
push
dec
xchg
adcl
jno
xor
or
sbb
in
ja
call
pop
inc
inc
repz
xor
rolb
push
lahf
aaa
fistl
add
sarb
pushl
push
aam
test
test
lahf
add
dec
cmpsb
and
mov
mov
and
dec
inc
inc
orl
sbb
pop
dec
in
and
inc
in
movsl
mov
cmp
xlat
aam
xlat
test
or
outsb
aaa
pushf
push
mov
and
inc
lods
stos
adc
or
dec
cld
out
shll
lcall
jo
add
jge
jecxz
xor
xor
cmp
add
shrb
lret
mov
or
inc
shll
push
js
add
andb
or
fdivr
ja
cmp
pop
xor
into
xchg
mov
rorl
fwait
in
mov
cwtl
test
and
imull
in
into
bts
push
mov
xchg
mov
push
mov
sub
sub
sub
arpl
mov
shrl
pop
cmp
dec
jno
mov
rcr
pop
cmp
cmpsl
call
imul
cmp
into
inc
sti
pop
lods
and
mov
cmp
insl
mov
ljmp
scas
es
out
inc
mov
jmp
xor
inc
add
scas
sub
out
inc
mov
pop
ret
mov
and
cmpsb
push
mov
lcall
adc
push
cs
fidivl
loopne
xor
divb
outsb
gs
outsl
mov
cmp
pop
insl
out
inc
jg
mov
les
bound
mov
jl
mov
xor
or
sbb
imul
jno
and
lods
and
dec
or
shlb
xlat
sub
test
adc
mov
xchg
dec
setb
lods
fcmovbe
xchg
pushf
addr16
out
mov
inc
pop
mov
imul
mov
and
mov
in
mov
or
cmc
mov
imul
div
push
push
outsb
fmuls
cld
push
cmc
xchg
int3
sarb
inc
pop
ret
or
push
jnp
icebp
cmp
popf
push
mov
inc
gs
xchg
xchg
dec
idivl
xchg
rorl
rcrb
mov
je
pop
sub
xchg
pop
popf
pop
push
pop
add
nop
imul
cmpsl
inc
jne
cmpsb
dec
xchg
sarb
aas
lea
into
jnp
cmp
fcmovb
repz
test
sub
jbe
aad
mov
sbb
mov
inc
imul
add
cmp
addr16
pop
jmp
or
mov
add
add
dec
lea
pop
lods
jne
cmpsl
cmc
mov
loop
arpl
in
dec
stc
dec
add
sub
lret
dec
inc
push
cmp
cmpsl
xor
fsub
xchg
or
icebp
xorl
pop
cmpsb
cmp
ja
push
and
shrl
in
inc
sbb
aas
xchg
mov
jecxz
arpl
or
stos
pop
movsb
pushf
loope
in
data16
jl
xorl
scas
scas
and
push
insl
mov
mov
xchg
ljmp
mov
popf
mov
dec
les
clc
jae
sub
pushf
xor
mov
pop
fs
cmp
add
pop
pop
iret
rorl
inc
outsb
jmp
push
imul
add
xchg
ds
inc
daa
cmp
and
xor
mov
jbe
mov
push
push
sub
or
add
imul
lret
imul
adc
ficoms
ret
push
xor
push
mov
mov
sub
outsb
inc
ret
movsb
popf
pop
or
mov
pop
inc
mov
fs
dec
push
push
xor
push
popf
je
loope
sbb
adc
add
sub
jno
mov
ror
sub
out
nop
jno
add
xorl
inc
cmp
adc
cld
or
xor
push
stos
cmp
vpshlb
jge
imul
push
dec
push
sub
and
adcl
adc
rcll
lods
add
outsl
jbe
adc
jb
cmp
ret
stos
or
cmp
out
stos
mov
pop
jecxz
enter
dec
mov
mov
ja
enter
mov
push
push
sub
les
in
loope
fs
pop
inc
dec
sub
imul
nop
mov
cmp
sub
xor
or
or
xchg
in
js
xchg
adc
mov
test
movsb
jl
js
leave
daa
cmp
shlb
mov
pop
pop
sbb
stos
push
xor
sub
push
lahf
nop
in
adc
push
adc
xchg
mov
mov
add
sahf
cmpsb
or
fxtract
sub
in
sbb
cltd
insb
in
in
leave
jae
add
imul
jmp
rclb
mov
stos
jg
xlat
or
pop
push
sub
inc
dec
dec
xchg
pop
xchg
icebp
sub
and
in
push
adc
iret
cmp
jo
out
add
neg
add
sub
mov
sub
xchg
pop
lods
shrd
xor
sub
jae
sar
fcom
xchg
test
inc
xchg
xor
and
sbb
stos
mov
adc
sub
xchg
or
lcall
dec
add
lods
cmc
iret
je
out
sbb
movsb
int
outsb
push
mov
out
imul
call
bndldx
cmpsb
lret
jmp
pop
xor
and
sub
pop
and
int
imul
or
lret
loopne
fsubrl
jb
mov
cmp
andb
adc
push
sbb
dec
adc
movsl
and
dec
push
in
icebp
push
sets
or
and
add
idivb
sub
cmp
lods
adc
mov
mov
shrl
sti
inc
out
sbb
or
push
test
dec
and
lods
sarl
fstl
fwait
orb
pop
xor
xor
std
mov
fnstcw
sbb
outsl
mov
pop
aad
xchg
push
rcrb
cmp
rclb
push
es
cmp
sbb
mov
fdivrs
cmp
mov
in
mov
imul
test
call
rcl
in
popf
sbb
inc
and
push
into
xor
jmp
dec
mov
inc
adc
in
sub
cmp
sbb
and
dec
fwait
scas
scas
es
xchg
xchg
hlt
pop
jo
xor
push
sarl
xor
lods
xchg
hlt
enter
pop
lcall
add
mov
das
repnz
push
arpl
pop
push
adc
hlt
push
push
xor
leave
xchg
mov
or
lods
ret
or
call
mov
gs
test
in
test
dec
jl
mov
lds
mov
jge
push
mov
add
add
orb
aas
mov
outsb
rcr
fcomip
pop
gs
mov
test
out
cld
outsb
adc
outsb
push
ret
jns
mov
psubsw
jnp
subl
sbb
mov
stos
push
not
pop
aam
in
movsb
sarb
push
cmp
es
or
dec
inc
jb
or
add
pop
rolb
shlb
and
imul
sub
cli
sbb
aam
xchg
lods
pusha
and
mov
jl
dec
repnz
idivl
jne
or
repz
aaa
cld
lods
test
pop
sub
xchg
sub
je
xchg
jmp
pop
or
xchg
push
mov
cmc
pop
mov
adc
scas
mov
je
sbb
pop
repnz
shll
lret
es
mov
test
adc
das
fxtract
in
xchg
scas
inc
rcr
movsb
sarb
sbb
mov
push
or
mov
leave
mov
mov
cld
mov
adc
sbb
enterw
cli
mov
shr
popa
stos
test
aam
xor
in
pop
rcl
xchg
xor
pop
and
jns
shll
imulb
mov
dec
or
push
bswap
aad
mov
and
sub
lods
adc
dec
dec
repz
lret
out
addl
sbb
cltd
insb
xchg
cmpsl
mov
xchg
and
cmc
sahf
daa
lahf
and
adc
sbb
lods
inc
test
mov
xchg
lds
push
and
mov
adc
and
push
mov
lods
rorb
std
in
mul
mov
ret
stos
out
mov
xchg
push
jp
cmc
and
xchg
xchg
inc
or
adc
or
cwtl
popf
addr16
ljmp
aas
push
dec
sbb
lds
xchg
adc
xor
adc
sbbb
icebp
xchg
jge
pop
push
fldt
lcall
and
outsb
jno
cli
xor
out
and
icebp
faddl
cmp
mov
cmc
insl
ds
cmp
scas
imul
sbb
scas
test
repz
aam
into
stc
fisttps
popa
mov
cmp
loop
hlt
data16
fnstsw
test
inc
xor
fsubs
xor
mov
xor
xchg
xchg
scas
in
sub
aas
lret
into
cmp
sub
cld
pusha
arpl
icebp
inc
into
xchg
sbb
sbb
ja
mov
pop
outsb
lods
ja
pop
test
loope
pop
sub
push
shrl
test
xlat
mov
lock
rcrb
xor
inc
mov
xor
insb
sti
jp
nop
je
sahf
sbb
mov
mov
sub
mov
push
xchg
popl
clc
shl
ficomps
cmp
mov
roll
cld
call
data16
mov
mov
jle
jns
mov
lods
pushf
push
cld
test
lret
or
out
adc
adc
jo
bound
sub
pop
aas
out
push
and
aam
into
stos
loop
pop
faddl
sub
mov
ret
push
pop
mov
test
js
aad
cmpsl
xchg
and
les
adc
adc
ror
subl
xor
inc
mov
mov
pop
mov
jo
test
sbbb
test
xchg
jb
push
mov
das
push
or
es
movsl
daa
lods
out
adc
or
rcll
sbb
mov
and
mov
js
std
aas
out
ljmp
xchg
or
cmp
test
sbb
mov
dec
lret
insl
data16
gs
rolb
ds
in
mov
addr16
dec
loopne
adc
adc
adc
sub
loope
jb
jno
push
mov
mov
pop
add
mov
es
repnz
cli
mov
mov
insl
jge
adc
pop
daa
in
push
call
roll
aam
call
pop
loopne
add
xabort
fsub
data16
scas
add
loopne
sub
sti
sub
and
call
xchg
clc
pop
fstpl
mov
lods
in
jnp
cltd
addr16
aam
std
mov
cs
jae
inc
xchg
iret
mov
cltd
and
xchg
ss
xchg
repnz
pushf
add
movsb
jmp
dec
inc
mov
pop
out
in
orb
cmp
xchg
out
popa
push
pop
adc
and
mov
jp
sbb
add
cld
pop
dec
imul
hlt
adc
dec
int
cmp
nop
xchg
popa
jecxz
in
cmp
iret
dec
mov
fld
cmc
pop
mov
xor
xchg
aaa
add
ds
xchg
fsubs
or
js
sub
enter
mov
and
or
pop
jno
inc
or
add
and
jne
mov
shrl
sar
pop
ficoml
xchg
mov
aaa
je
inc
jmp
bound
loope
or
mov
in
mov
imul
or
push
insb
jl
pop
out
jb
jecxz
fsubp
sbb
ja
mov
movsb
in
mov
aam
test
sbb
cmp
in
jo
data16
test
xchg
mov
sbb
dec
aam
mov
add
nop
out
imul
mov
movups
dec
pop
mov
or
push
filds
loop
into
cmp
movsb
in
inc
cmp
out
mov
fs
pop
stos
in
dec
add
and
or
pop
stos
bound
in
mov
int3
sub
xchg
xchg
mov
repz
lea
clc
cmp
sti
fbld
inc
dec
vmovaps
push
sti
fs
and
inc
push
or
mov
jp
push
jne
adc
xchg
inc
push
test
int
sub
cld
cmp
sbb
inc
sbb
stos
hlt
xor
push
jb
clc
les
fadd
mov
pusha
add
outsl
ret
dec
loopne
add
push
mov
stos
daa
jg
sub
pop
loope
xchg
push
fcompl
clc
pop
add
adc
dec
out
out
test
push
add
push
loope
mov
popa
orl
xchg
mov
push
and
sub
xchg
loop
test
or
leave
imul
repz
iret
arpl
mov
out
mov
fsubrs
sub
popf
stos
out
leave
or
ljmp
xor
out
cmp
lods
xor
cs
add
push
daa
shrb
out
jne
ss
subb
cs
pop
mov
mov
dec
cmpsl
cmp
inc
test
mov
sbb
dec
outsb
mov
and
jge
adc
xor
repnz
gs
and
pop
in
test
jne
fdivrl
mov
and
hlt
call
inc
inc
fwait
adc
and
out
sbbl
dec
xor
sub
ljmp
adc
adc
test
push
jmp
and
loopne
in
adc
pop
icebp
or
out
sub
mov
jae
pop
push
cmp
es
leave
mul
or
rcr
mov
test
mov
xchg
push
in
xlat
sar
imul
xor
inc
push
lock
add
cmp
pop
cmpsl
lcall
push
imul
pushf
lds
popa
hlt
xchg
call
cmp
das
adc
xchg
mov
cmc
test
out
stos
fmul
std
pop
cmp
sbb
sub
aaa
add
add
mov
dec
outsb
sbbb
lods
and
enter
sahf
inc
aad
fwait
pop
jg
push
push
fbstp
jecxz
fcomip
and
loopne
pop
jle
sbb
aaa
push
sbb
lods
aas
loop
xor
push
push
xchg
adc
ror
adc
add
cmp
xchg
mov
xor
cmp
data16
push
xlat
adc
in
cmp
xchg
xchg
xchg
push
ficoml
xchg
jge
add
fimuls
mov
cmp
sub
je
mov
sahf
icebp
in
mov
sahf
cwtl
jns
int3
xchg
int3
ret
lret
jl
jae
test
fstl
negl
sbb
sub
out
imul
sahf
push
and
je
push
call
rol
sti
out
dec
and
jl
fistps
sbbl
aam
fdivr
mov
aaa
cmp
aad
cmp
test
movsl
mov
sub
imul
stos
xchg
pusha
fcmove
mov
mov
fdivs
inc
daa
push
xor
add
loopne
mov
jae
xchg
or
orb
jp
sub
pop
icebp
xor
repnz
and
orb
or
cmpsb
mov
inc
xchg
lret
fcomps
cli
sarl
fcoms
cmp
mov
mov
scas
pusha
sbb
mov
fists
sub
enter
inc
inc
scas
repz
shl
aad
je
cmp
jge
inc
pop
daa
imul
jne
sub
sub
test
sbb
xchg
in
push
cmp
push
adc
fwait
sahf
insl
lret
test
mov
addl
imul
sbb
sbb
dec
shlb
fidivs
push
xor
push
out
test
adc
sub
add
in
pop
push
cmp
in
mov
xchg
movsl
out
pop
out
insl
loop
push
pop
adc
mov
jno
adc
ret
mov
or
and
outsb
or
jmp
pop
clc
orps
mov
pop
mov
fnsave
adc
loop
clc
pop
dec
push
lds
jns
imul
pusha
sbb
or
shll
mov
sbb
dec
lcall
repz
xchg
scas
cmp
icebp
lret
stc
sub
jb
mov
int3
or
adc
shlb
es
pop
mov
adc
out
inc
stos
test
mov
xor
stos
test
stos
mov
mov
popa
out
outsb
add
xor
data16
movsl
sbb
stc
xor
dec
adc
movsb
lods
aaa
sarl
popf
pop
out
add
sbb
mov
jo
mov
mov
leave
loopne
out
mov
fmul
lods
inc
clc
adc
out
mov
jo
inc
sbb
sbb
sbb
mov
jo
push
cmp
sbb
leave
scas
jg
lods
and
cmp
add
out
inc
xchg
xchg
flds
mov
nop
dec
gs
clc
cmpsl
xor
sub
scas
add
lret
push
mov
sbb
fsubr
mov
rcrb
mov
loop
mov
mov
cmpsl
lods
test
dec
xchg
rcll
sub
dec
mov
ja
imull
mov
stos
rorb
fwait
int3
cmp
rorb
div
dec
mov
or
cmp
imul
inc
xchg
mov
xchg
outsb
mull
aaa
add
fdivs
or
scas
pop
adc
sub
cmpsl
xchg
cmp
out
clc
cmp
jns
enter
enter
dec
mov
rcll
wrmsr
lahf
loop
adc
dec
xchg
add
in
int
xor
rclb
push
aaa
es
movsl
ret
fdivl
push
lahf
setno
and
mov
cli
jo
pushf
enter
dec
pop
lret
imul
hlt
pop
fwait
adc
mov
cs
dec
mov
lret
and
shlb
and
into
ss
jmp
push
aaa
xor
ja
mov
sarl
push
mov
xor
jp
xlat
dec
jg
clc
mov
cmp
pop
icebp
inc
jae
xchg
dec
scas
test
push
pop
js
in
mov
mov
pop
inc
aam
js
loope
sub
add
pushf
ja
cltd
int3
pop
xchg
rclb
insl
lods
jmp
jmp
mov
stos
dec
push
sbb
out
sbb
aam
cwtl
cs
test
pop
pop
orl
cmp
fisubrs
inc
cmp
mov
enter
xchg
sbb
cmp
nop
mov
push
in
ret
cmp
xchg
pop
lahf
icebp
sbb
hlt
ret
jecxz
mov
adc
fcmove
rcll
push
and
repz
lods
jne
xor
push
mov
jp
dec
vcvtps2dq
out
xchg
mov
cmp
data16
mov
xchg
lock
daa
lcall
ror
repnz
mov
dec
lahf
pop
out
mov
mov
icebp
les
cmp
scas
mov
sbb
adc
js
stos
dec
jo
pop
jle
into
or
jae
insb
addr16
inc
das
fdivl
out
in
xchg
dec
enter
fdivr
or
push
xchg
pop
fdivs
push
pop
sub
sti
mov
mov
add
pushf
ret
xor
inc
dec
mov
addr16
and
sbb
out
js
lods
das
xor
stos
pop
push
sbb
add
push
popl
fwait
push
xchg
fistpll
loopne
add
or
mov
push
mov
mov
mov
cli
fistpl
pop
adc
add
push
pop
mov
jl
mov
ret
fisubrl
rol
lcall
in
pop
repz
jbe
cmp
mov
inc
in
mov
test
jmp
mov
rclb
popa
and
sub
push
sub
adc
movsl
mov
adc
jl
push
pop
nop
mov
aam
add
mov
dec
popa
out
pop
adc
mov
mov
xor
mov
mov
cmpsb
out
shl
sbbl
int
rcrb
loope
out
mov
movsb
sub
stos
cmc
pop
arpl
xchg
sbb
sbb
fwait
outsl
mov
adc
lahf
stc
into
leave
add
mov
and
scas
cwtl
dec
jns
add
sub
dec
cmp
cmp
nop
adc
pushf
lods
xor
mov
outsb
mov
cmpsl
dec
mov
jg
xor
enter
and
int
jb
xchg
pop
xchg
testb
int
dec
mov
lfs
enter
pop
sub
imul
insl
ss
inc
add
push
call
shll
lds
movsb
cltd
pop
popf
pop
sti
ja
jmp
pop
subb
xchg
cmp
cmp
out
add
and
stos
aaa
pop
jae
je
sbb
xlat
push
mov
adc
adc
sar
lds
fs
cwtl
jmp
arpl
lds
test
cmpsb
mov
mov
cmp
dec
add
sbb
dec
sub
imul
xchg
fisubrs
fnstsw
mov
mov
fmull
push
or
add
lds
cltd
push
mov
add
sub
clc
in
and
jbe
out
loop
shl
fcoml
lret
pop
fs
into
sbb
imul
sbbl
sbb
inc
inc
and
in
mov
lret
outsb
adc
outsl
lds
negl
jns
sarb
into
fisttps
sqrtps
jb
push
clc
lods
test
mov
fldenv
or
imul
push
mov
lods
out
cmpl
fdivs
pop
xchg
pop
fisubrs
inc
insl
stc
mov
cld
mov
mov
xchg
loope
out
mov
mov
dec
and
adc
or
push
icebp
test
inc
push
pop
adc
cli
dec
test
cli
imul
popf
shl
or
jp
xor
mov
xchg
push
cmp
add
adc
pop
stos
sti
push
dec
pop
movsb
xchg
pcmpeqw
cltd
insb
and
scas
pop
mov
out
loope
cmpsl
mov
nop
repnz
dec
bound
pushf
xchg
aaa
mov
sub
mov
out
pop
clc
icebp
or
sbb
test
adc
decb
stc
dec
add
lock
imul
inc
lods
cmp
stos
mov
jl
daa
shr
jmp
mov
mov
enter
pusha
gs
ret
sahf
pop
jmp
or
cmpsl
sarl
jmp
neg
les
cmpsb
fwait
lret
lds
jbe
mov
lahf
adc
cli
ja
cmp
dec
je
and
xchg
jmp
sbb
pop
gs
cmp
test
sbb
and
popf
cltd
stos
shrb
xchg
int3
lods
jb
fucom
pop
lcall
ljmp
xor
das
iret
add
scas
and
pop
lock
das
movsb
int3
xor
cmp
xlat
test
in
gs
mov
iret
adc
stos
xor
loop
outsb
fs
bound
pop
call
mov
add
sahf
adc
pop
pop
or
fsubrl
xor
js
std
nop
mov
fbstp
and
push
pusha
xor
inc
sar
cmp
and
inc
add
mov
adc
pop
push
mov
xor
xchg
orl
mov
aaa
leave
push
sti
push
in
push
outsb
ret
jnp
cmp
out
sbbl
jo
out
pop
mov
outsl
lock
xchg
add
jne
cli
insl
insb
inc
add
cmp
ja
sbb
adc
jmp
add
fsubs
lods
inc
out
sti
cli
fstl
enter
lcall
pop
mov
sbb
add
mov
nopl
cmp
loope
xchg
dec
jne
ffreep
inc
pop
shl
loope
pop
enter
loop
cmp
inc
nop
or
xlat
fsubrs
pop
bound
and
xchg
ret
popa
mov
push
jae
cmp
test
scas
das
int
xchg
cmp
das
and
xchg
pushf
lahf
jmp
mov
adc
inc
mov
and
fwait
cmp
dec
or
cmp
dec
or
push
aaa
cmp
aaa
std
sub
ret
inc
jae
pop
shrb
jge
cld
and
xchg
loope
movsl
into
sarl
adc
adc
and
add
es
mov
pop
sbb
out
mov
mov
ret
xchg
pop
push
jbe
rclb
cmp
xchg
cmpsl
mov
or
and
js
mov
xlat
outsl
fstpt
push
sub
ss
add
addr16
int
pop
dec
sbb
inc
loop
adc
sbb
and
push
xor
mov
sbb
inc
test
inc
lods
mov
xor
test
aam
xor
lret
dec
or
push
test
cltd
js
xor
push
xchg
inc
clc
lods
lahf
push
xor
dec
nop
inc
cld
push
idivb
mov
and
push
cwtl
into
pushf
cli
add
inc
sub
das
mov
cwtl
loop
mov
jne
lods
repz
lcall
inc
lods
sub
cld
data16
mov
adc
out
jg
push
fidivs
jg
or
mov
push
std
push
insl
jl
sbb
xchg
sbb
sub
in
and
aam
jmp
cwtl
inc
xchg
mov
sub
jnp
jns
add
iret
sub
es
sub
sahf
rol
sahf
iret
lcall
jp
das
mov
push
sbb
lret
int3
es
cmp
xor
aad
sbb
mov
and
repnz
lods
or
negl
lahf
jns
addb
mov
jnp
xchg
mov
sub
scas
lahf
test
lods
jbe
sbb
dec
ret
jo
in
enter
int
xchg
test
push
mov
les
scas
adc
lret
xchg
mov
mov
outsb
in
incb
xchg
lds
pop
data16
or
jae
ret
jmp
out
dec
adc
ret
xor
mov
adc
xlat
mov
jns
mov
popf
and
dec
test
mov
loop
mov
iret
ds
call
jg
arpl
int3
scas
daa
jmp
ss
mov
mov
out
jo
lret
movsb
lock
fbstp
fwait
ds
push
mull
push
int3
imul
ss
je
pushf
fstl
mov
gs
pop
xor
pop
xchg
add
and
fidivl
dec
sub
push
push
dec
lahf
cmpsl
lock
sti
sbbl
sub
push
cmp
std
repnz
mov
cli
loop
sub
repnz
cmp
cmpb
fistps
adc
icebp
repnz
shl
push
mov
add
push
adc
lds
add
dec
and
lds
ret
je
in
and
jp
les
mov
pop
mov
jg
cmp
mov
inc
and
cld
lds
pop
cmp
fidivrl
push
js
xlat
push
lock
aam
mov
add
adc
push
daa
cli
mov
out
jo
add
lock
lods
ficomps
testb
jge
addr16
cld
ljmp
out
aas
inc
add
lea
dec
inc
sbb
movsl
xor
xor
fisubrl
or
push
int
ret
sbb
or
inc
push
jbe
mov
push
adc
test
addr16
pop
push
or
and
mov
cmp
cmp
and
bound
mov
filds
std
jo
in
int
out
mov
ret
sbb
push
je
sbbl
out
test
cmp
sub
sti
jne
movlps
mov
pop
insl
and
inc
stos
or
cmp
mov
imul
dec
mov
or
jmp
ficoms
mov
mov
decb
enter
sub
inc
xchg
lea
imul
pusha
lock
mov
cld
xor
scas
xchg
lea
jb
adc
pusha
cmp
andl
xor
xchg
in
int3
xchg
outsl
mov
mov
cmp
sub
push
mov
pop
cmpsb
test
jnp
addr16
outsl
bound
push
stos
pop
pop
jmp
push
icebp
icebp
mov
lcall
pop
sub
stos
leavew
lret
sbb
jp
push
push
fdivs
lcall
mov
inc
out
loop
mov
dec
mov
mov
lret
and
xchg
cmp
jnp
adc
test
adc
call
or
inc
jo
jp
sub
lods
test
imul
imul
rorb
fwait
les
stc
stos
inc
mov
adc
pop
call
dec
dec
dec
jg
adc
addl
and
mov
or
movsl
jae
jle
dec
popa
mov
lret
cmp
adc
jne
fstpt
inc
popa
mov
inc
pop
or
dec
bound
add
dec
cmp
push
dec
add
pop
scas
test
rcl
dec
xchg
jl
imul
xchg
xor
in
mov
mov
add
cmp
jg
jne
pop
inc
pop
pushf
lock
mov
xchg
bound
lahf
addr16
aas
dec
mov
xor
mov
mov
push
jne
add
push
loop
aaa
inc
xor
xor
xor
dec
enter
adc
or
in
dec
not
sbb
push
push
push
xchg
jmp
adc
inc
and
ds
cltd
mov
add
ljmp
imul
xchg
push
and
pusha
loopne
jg
ljmp
mov
punpcklwd
and
dec
push
pusha
into
mov
movsb
call
roll
imul
jg
dec
lea
les
jne
gs
or
sub
cltd
dec
lahf
and
xor
fcoms
lret
inc
or
sub
test
int
and
mov
inc
and
notb
sbb
mov
jo
jmp
pop
ds
pop
iret
and
jle
shlb
xchg
pop
push
xchg
add
out
test
cmp
and
jb
jg
push
xchg
in
gs
ret
inc
pop
icebp
pop
xor
mov
mov
cmp
mov
xchg
cmpsl
data16
scas
stc
xor
adc
dec
dec
inc
fwait
cs
es
das
test
in
fs
or
and
sub
jb
mov
sbb
push
jg
in
imul
lahf
pop
push
les
mov
push
mov
dec
xor
dec
loope
add
in
dec
inc
cld
pop
push
popa
pop
jecxz
sar
pop
push
cmp
loope
dec
inc
aam
inc
ljmp
jle
and
cltd
mov
or
dec
inc
xor
inc
pop
data16
leave
pop
stc
cmp
xchg
jns
pop
and
mov
jecxz
sti
dec
cmc
sub
mov
dec
mov
or
add
inc
shl
cmpsb
scas
mov
lret
jmp
cli
xchg
dec
xor
fwait
nop
test
sbb
out
mov
aam
cld
xchg
pop
mov
push
xchg
push
or
xchg
in
dec
jmp
or
inc
sub
and
pop
push
mov
cld
sarb
pop
sti
and
rcl
int3
push
ds
and
pusha
repnz
xlat
cmpsl
mov
test
int3
add
loopne
ret
and
repz
add
and
lock
repz
arpl
movl
pop
adc
pop
xor
aas
or
pusha
ret
sti
stos
inc
xchg
and
sub
adcb
lods
jge
xchg
ret
sub
and
sbb
jo
inc
and
pop
hlt
jne
mov
mov
imul
out
xchg
push
rcrb
outsl
jecxz
test
shll
lea
fidivrs
cmp
lods
push
push
rorb
xchg
ror
daa
lock
pop
mov
xor
cmp
lret
xchg
cmp
sbb
push
push
xlat
loope
lea
and
decb
sbb
xor
cltd
xchg
jbe
mov
mov
rcrb
xchg
push
scas
inc
adc
lahf
fsts
xchg
into
cmpl
je
push
mov
loopne
shlb
or
xchg
pop
push
dec
pop
lods
movb
mov
mov
in
cld
outsb
and
jns
aad
or
test
nop
gs
pop
sbb
mov
out
movsl
les
sub
shll
push
mov
ficoml
gs
ja
and
jnp
fisttpl
enterw
jp
test
pop
add
jne
cwtl
shlb
shlb
int3
mov
je
jge
loop
fsubs
int3
xor
sahf
das
pop
lea
mov
pop
xchg
cli
add
stos
and
out
jle
outsb
xchg
sub
jo
sub
jne
mov
sbb
lahf
cmp
push
in
xor
jle
sub
or
push
cmp
popa
or
sti
adc
jnp
push
add
decb
ret
pop
jo
in
mov
add
cmp
xchg
leave
and
and
sbb
aaa
popa
scas
add
addr16
xchg
mov
fnstcw
jmp
push
sbb
xchg
shlb
es
shll
cmp
nop
ja
mov
das
inc
add
nop
aam
lret
add
or
mov
push
clc
lret
jmp
inc
mov
movsb
mov
pop
and
mov
mov
out
inc
jmp
sub
cmpsl
mulb
inc
push
std
mov
sub
push
in
xchg
addb
or
xchg
into
mov
and
enter
mov
mov
mov
out
mov
daa
jbe
mov
enter
mov
mov
dec
jecxz
fidivl
xchg
xor
sub
dec
jl
adc
pop
ret
sbb
rorl
mov
fisttpl
sbb
push
enter
adc
pop
stos
in
gs
mov
scas
push
xor
inc
sbb
pushf
jae
lret
repz
cmp
pusha
cwtl
aam
xor
out
push
jge
fwait
sub
add
dec
push
push
es
pop
mov
into
dec
daa
in
je
roll
push
push
xchg
cli
push
pop
in
test
add
xchg
adc
or
out
adc
dec
sub
enter
test
mov
push
cli
test
andl
mulb
push
pop
loope
mov
imul
adc
test
ja
leave
sub
and
xor
pop
pop
insb
push
scas
jecxz
test
imul
jp
sbb
fimull
cld
cmc
mov
aad
jnp
idivb
test
dec
lahf
pusha
xchg
push
sbb
pop
hlt
xchg
lds
xor
pop
repz
pop
mov
in
adc
mov
inc
add
jnp
cmp
repnz
dec
lea
mov
mov
xor
jo
pop
mov
rolb
sub
or
lcall
sub
add
push
outsl
pushf
test
and
add
adc
pop
in
mov
xchg
in
and
scas
mov
stos
inc
das
fadds
adc
out
lret
fptan
std
sti
dec
std
popa
std
pop
sbb
scas
mov
dec
mov
enter
mov
mov
stc
push
adc
sbb
jns
out
sub
stos
mov
adc
loope
mov
sub
or
dec
pop
mov
jge
jb
outsb
and
test
pop
loop,pn
lea
pop
push
addl
cli
jmp
fst
xchg
push
sub
xchg
pop
bound
les
and
sti
pop
lods
push
and
sarl
push
cltd
sub
test
mov
int
rcll
mov
test
stos
push
cwtl
jg
cmp
js
mov
fstp
scas
xor
mov
stc
insb
cmp
aam
cltd
cmpsb
pop
mov
xchg
lea
and
aam
add
inc
xor
add
fists
pop
inc
cmp
fsubl
xor
or
jo
cmp
push
jno
fcomps
iret
push
dec
or
insl
fidivs
pop
out
and
mov
xchg
int3
popf
sbb
or
jns
xchg
mov
pushf
jnp
cmp
ds
ret
gs
imul
cmp
popa
faddl
orb
xchg
insb
jecxz
sbb
push
shrl
push
sbb
push
pop
pop
test
pusha
pop
lcall
sub
icebp
popl
mov
jo
mov
xchg
pop
xchg
mov
inc
icebp
mov
push
add
xchg
inc
fs
xor
jg
pop
lods
xchg
insb
loope
add
sarl
pop
imul
enter
negl
pushf
subb
push
jp
cmp
sbb
add
jge
cltd
and
jns
outsl
in
mov
push
add
add
call
and
xchg
or
outsb
stos
or
mov
aam
fs
adc
pop
sbb
xchg
or
ja
loope
data16
dec
add
mov
push
jg
es
iret
cmp
lock
stos
push
jno
sti
dec
imul
push
jmp
adc
je
das
mov
movsb
lods
xor
xchg
push
int
inc
cmp
mov
arpl
fistl
cmpsb
dec
int3
jge
jae
mov
insb
sbb
and
inc
mov
cmc
out
mov
aaa
in
data16
mov
adc
fisubrs
cmp
scas
cwtl
dec
xor
in
jle
push
jno
jp
sub
jo
js
xchg
fcomps
add
and
shlb
mov
add
testl
popa
mov
push
cmp
out
lods
sbb
test
fcom
mov
xchg
cmp
js
stos
pop
pop
or
mov
push
mov
sub
jp
ret
mov
lods
aad
arpl
sbb
inc
xor
lcall
ds
les
into
mov
clc
cmp
adc
and
popf
add
push
sub
mov
popa
pop
fidivrs
jl
ret
push
out
into
dec
fwait
dec
js
mov
and
dec
mov
int
and
jne
ljmp
out
lock
arpl
add
sub
adc
addr16
sbb
xchg
scas
add
or
stc
sahf
jno
icebp
je
push
mov
mov
mov
repz
movsl
mov
jp
aad
in
rorl
into
jnp
mov
add
xchg
outsb
push
aaa
pop
pop
fs
loopne
outsb
dec
in
imul
push
ja
fstpl
adc
imul
sbb
fwait
xor
in
divl
in
push
test
scas
fcoms
enter
movsl
jb
pop
add
fucomip
add
xchg
mov
mov
daa
xor
mov
pop
fdivl
pop
add
dec
rclb
rcrb
push
scas
adc
shlb
inc
dec
les
scas
xchg
sahf
pop
push
loope
xchg
movb
mov
cmpsb
movl
pop
push
fists
jg
or
mov
jnp
or
mov
mov
in
adc
pop
inc
cmp
xor
xlat
mov
iret
aam
leave
mov
jo
cmpsb
aaa
inc
cwtl
shll
adc
mov
xchg
and
pusha
push
xchg
mov
lret
stc
out
sub
divb
mov
mov
aam
mov
lcall
add
shrl
ss
scas
test
adc
push
pushf
into
fwait
int3
push
and
pop
repnz
lret
xor
dec
mov
cmpsb
scas
inc
pop
xor
aas
push
aas
fcom
adc
out
mov
or
sub
ds
mov
jbe
xchg
and
adc
or
ja,pn
mov
inc
pop
mov
ret
out
sub
sbb
data16
int3
push
testb
jp
pcmpeqb
mov
sbb
jp
push
inc
loope
stc
mov
jp
movsl
movsl
xor
popa
popa
push
xchg
cmp
dec
push
sub
jp
mov
js
in
cmp
mov
xchg
jb
lea
cmpb
repz
mov
test
pop
enter
cli
sub
in
daa
or
jno
popf
ss
pop
xchg
jl
mov
outsl
adc
and
mov
adc
out
imul
pusha
sub
lds
jb
sarl
mov
mov
iret
leave
or
dec
push
mov
cltd
aas
pop
mov
dec
js
aam
sbb
mov
mov
fldl
test
push
push
dec
mov
jne
xchg
dec
pop
out
hlt
dec
std
dec
add
dec
mov
adc
fmuls
jno
mov
je
jle
mov
mov
pop
jae
xchg
sub
cmp
imul
or
mov
pop
push
fstpt
xor
mov
dec
add
movsb
faddl
sbb
pop
mov
or
push
arpl
bound
or
push
fs
and
sub
push
insb
jmp
mov
repnz
in
xor
inc
dec
mov
jg
xchg
mov
jl
cmpsl
adc
in
shlb
aam
test
dec
inc
outsl
jmp
dec
pop
test
mov
mov
lds
aaa
rcrl
pushf
sahf
pop
divb
fcmovnb
icebp
and
mov
outsl
fldpi
jg
not
xchg
and
in
mov
aam
loopne
stos
mov
sbb
bound
sbb
xchg
push
fidivrs
cmp
mov
stos
adc
or
imul
adc
add
call
push
mov
mov
add
pop
xchg
aam
iret
adc
in
or
sub
shl
pop
mov
mov
dec
push
jmp
and
shll
adc
inc
xchg
sub
jno
xchg
mov
add
iret
bound
arpl
in
mov
stc
sub
test
notb
stos
sti
mov
and
cltd
inc
sub
fwait
cs
jmp
loopne
repz
mov
and
xchg
cli
sbb
add
xor
sub
scas
jp
cltd
out
cmc
lret
inc
sbb
push
xor
fwait
sub
jo
sub
outsb
cmpsb
icebp
push
push
fistps
fidivl
xchg
cmp
adc
push
testb
fcoms
inc
jbe,pn
sub
adc
xchg
cmp
sbb
sbb
sbb
out
jecxz
dec
mov
rolb
ret
pop
sbb
les
ret
hlt
enter
repnz
pusha
mov
push
push
les
xlat
ljmp
mov
arpl
push
mov
jo
xchg
lahf
push
and
mov
int3
ss
mov
sbb
sub
rolb
pop
andb
fiadds
scas
pop
add
push
pushf
subl
push
andb
mov
inc
add
xor
out
loope
les
push
adc
testl
shrb
xchg
push
hlt
mov
adc
outsl
outsl
ret
std
pop
jbe
lret
cmpsl
dec
jae
rorl
or
fcoms
ret
fdivrl
insl
mov
ret
dec
mov
jb
xor
test
js
insb
cmc
xchg
push
test
add
addr16
bound
cmp
or
iret
jns
rcr
scas
and
add
test
std
jne
xor
loopne
or
ja
jns
and
sbb
add
mov
inc
test
scas
sbb
and
push
repz
sbb
movsb
hlt
aad
push
xor
cmpl
mov
cmp
fldenv
xor
stos
push
aam
lods
cmp
push
inc
dec
fcoms
aad
add
iret
jns
jl
push
or
lock
stos
dec
in
push
pop
lcall
loope
mov
and
jnp
xor
cwtl
hlt
inc
movsb
jle
xor
mov
push
inc
js
sbb
cli
out
mov
lea
aad
push
or
ss
add
dec
push
or
arpl
mov
fcompl
jne
add
cld
dec
sbb
ficomps
sbb
fnstcw
int3
xor
lret
out
das
mov
jle
add
adc
pushf
lock
inc
int
inc
xchg
cmp
fs
and
mov
stc
pop
xor
pop
lahf
mov
stos
push
dec
push
nop
fcomip
jnp
push
push
sub
mov
xchg
xchg
inc
sbb
int3
inc
mov
push
or
lret
adc
cmp
dec
repz
je
pusha
imul
xchg
sub
add
das
or
popl
pop
mov
std
pop
jle
stos
mov
xchg
sub
clc
aaa
adcb
repnz
mov
and
cmp
cmpsb
outsb
stos
jp
std
pop
in
push
cmp
lods
ja
into
int3
repnz
xchg
icebp
ret
xlat
cltd
push
rcrb
cli
fmuls
dec
pop
shlb
mov
movsb
jge
iret
push
leave
dec
addr16
mov
mov
js
adc
icebp
fnstcw
jle
pop
xchg
sbb
dec
out
jae
cmp
out
dec
push
test
dec
pop
cli
xchg
xor
adc
adc
jne
jle
std
lcall
mov
fisubl
les
and
daa
sub
js
and
out
cmpl
lahf
shrb
fbld
cmp
inc
inc
fadds
and
imul
scas
jecxz
inc
cmp
mov
dec
dec
lcall
xor
xor
pushf
fstpt
incl
push
cmpb
out
icebp
mov
loop
push
xchg
xchg
inc
std
jo
daa
push
lock
add
cmc
stos
push
out
es
aam
jmp
sub
mov
dec
xchg
lcall
sub
add
dec
mov
mov
arpl
dec
sahf
jns
imul
push
mov
or
sbbb
fs
xchg
xor
mov
std
xlat
test
push
popf
mov
cmp
xor
dec
mov
xchg
test
jecxz
adc
rorl
dec
adcb
lea
jo
jmp
push
push
hlt
sti
pushf
cmp
jo
ret
cmp
in
adc
dec
mov
mov
cmp
cmc
cmpsl
sbbb
adc
inc
or
mov
push
iret
cmp
jne
sbb
adc
rcrb
add
stos
ss
dec
xchg
xchg
push
mov
sub
mov
and
test
push
leave
mov
jle
daa
jo
int3
xchg
dec
out
sbb
adc
or
pop
mov
mov
push
sbb
movsb
mov
je
sbb
mov
sub
int3
sbb
scas
xchg
xchg
sbb
sarb
das
dec
push
push
mov
call
jnp
lret
aaa
xchg
psubsw
gs
add
fistps
pop
incl
int3
fildl
mov
jle
mov
jo
jge
push
push
and
iret
icebp
lret
mov
adc
imul
jo
ljmp
cs
inc
sbb
cli
je
push
cmp
pop
mov
add
xor
arpl
fcomps
adc
fldcw
lds
out
and
dec
rcrl
jge
aaa
ja
je
xchg
aas
out
sbb
mov
shlb
mov
lahf
iret
mov
add
push
pop
ds
icebp
push
inc
out
mov
in
mov
dec
rcr
jecxz
sbb
and
iret
ret
jg
mov
pop
dec
enter
subb
je
pop
cmpsb
mov
dec
mov
fildll
std
adc
sbb
cmp
daa
fisubs
out
sub
jb
testl
cld
adc
xor
lods
stos
cli
xchg
mov
push
sub
add
lcall
fdivr
mov
sbb
or
cmp
push
inc
dec
test
push
cmpl
dec
imul
lcall
push
mov
inc
inc
gs
dec
sub
sbb
pop
arpl
mov
addb
jge
icebp
mov
into
es
cmp
out
push
aaa
mov
dec
frstor
jae
push
repnz
xchg
push
xchg
mov
and
cwtl
pop
mov
std
loope
sub
pop
loope
rcrl
lahf
jle
gs
fstpt
pop
repnz
inc
test
push
je
sub
dec
hlt
cmc
or
sub
push
sbb
cmpsb
not
imul
jo
xor
inc
and
test
add
xor
mov
dec
ljmp
and
and
fsts
cmp
jb
mov
add
push
arpl
cli
pop
out
aad
pusha
cmp
repnz
dec
pop
cmp
mov
outsb
sub
add
jmp
or
in
lea
jp
push
fld
inc
mov
dec
adc
addl
loop
sub
mov
sbb
push
into
loop
sbb
add
mov
out
sbb
lock
adc
and
pusha
dec
mov
sub
pop
sbb
xchg
mov
jmp
cmp
or
sahf
dec
into
xchg
outsl
add
push
mov
in
arpl
icebp
push
cmp
mov
lds
mov
ror
dec
je
dec
lea
rolb
addr16
test
loopne
test
add
pop
or
mov
inc
clc
jmp
dec
push
ret
fcoml
inc
or
xchg
loope
mov
pop
les
pop
jp
sub
out
repz
jnp
mov
mov
pop
sbb
fcomip
adcb
push
mov
pop
add
jl
inc
dec
sahf
fcmovnb
loop
push
fmuls
or
jne
repnz
xor
and
mov
push
outsb
xor
insl
imulb
jmp
std
fs
fmuls
jg
rorl
shll
shll
insl
in
testb
js
or
sbb
and
popf
mov
adc
outsb
pushl
stos
into
repnz
movsb
mov
shll
inc
imul
ljmp
mov
icebp
sbb
test
scas
mov
xor
sbb
out
dec
mov
fidivs
data16
in
decl
shll
jae
lea
adc
mov
test
pop
adc
movsb
daa
aad
and
cwtl
inc
mov
aam
add
cltd
andl
and
mov
xor
rcr
jg
mov
int3
ljmp
mov
aam
ja
out
inc
lahf
xor
adc
xchg
outsb
test
jecxz
dec
shl
pop
jns
std
stos
cmp
insb
mov
xchg
fidivrs
aad
jne
shll
cmpsb
cmp
in
add
inc
mov
fistpll
pop
lods
int3
cs
shl
inc
xchg
loope
lods
jo
push
dec
mov
test
cmp
ror
rorl
jp
add
push
mov
jae
push
sub
push
repz
hlt
push
jb
out
jb
fists
mov
int3
xorb
cmp
inc
xchg
adc
mov
je
push
pop
jbe
sub
jle
iret
enter
je
test
out
movsl
outsl
xor
pop
out
shll
pop
add
bound
testb
sbb
and
cmp
or
stc
jns
fwait
sbb
sub
add
in
outsl
cmpsl
and
push
call
sub
loop
rcrl
lahf
jl
int3
icebp
les
and
ret
pop
gs
adc
jp,pn
lret
pop
lcall
dec
ss
iret
ds
dec
xchg
dec
ja
sbb
pop
repz
inc
dec
fdivrs
out
aaa
mov
mov
aas
jmp
in
lahf
cmpsl
adc
xlat
push
cmp
into
jo
sti
jno
sub
add
lea
inc
xor
rorb
enter
test
push
dec
push
pop
mov
icebp
aaa
mov
dec
jp
push
nop
ja
test
cltd
test
dec
mov
push
out
popa
jbe
sub
add
inc
bound
repz
jno
hlt
mov
pop
call
pusha
cmc
inc
stos
call
ds
cmpl
cmc
cmp
push
notb
data16
xor
adc
inc
sahf
icebp
lret
jle
fimull
fisubs
jns
xchg
es
lahf
mov
pop
pop
and
fiadds
daa
mov
icebp
negl
dec
js
fdivr
in
xchg
or
jmp
jmp
fs
pop
mov
jp
cld
or
xchg
data16
loop
adc
mov
data16
lret
cmpsb
cmp
add
and
mov
lods
repnz
pop
and
mov
cmpsb
out
aaa
js
push
dec
mov
aam
outsl
cmpsl
gs
aas
fists
xchg
mov
jge
mov
mov
je
fidivl
movsl
ss
shrl
jle
inc
cmpsl
shll
mov
cmp
lret
pop
ret
js
mov
push
lock
xor
icebp
xor
jp
les
pusha
push
inc
pop
push
jmp
inc
dec
inc
in
xchg
push
jl
std
mov
loopne
push
pop
mov
pop
mov
push
popa
xor
cmpsl
mov
loope
xor
adc
cmp
jle
jnp
bnd
push
insb
or
mov
add
mov
jo
insb
out
pop
leave
out
mov
mov
dec
add
fsubl
and
movsl
inc
jmp
mov
dec
push
movsb
leave
add
xchg
xchg
out
or
nop
push
repnz
sahf
stc
add
popf
inc
out
stc
xchg
push
outsb
sbb
lret
inc
ja
pop
sub
and
xor
inc
inc
dec
mov
mov
out
dec
in
dec
aas
idiv
stc
sahf
adc
xor
or
lods
scas
pop
outsl
cmp
movsl
xor
or
jl
in
sub
fbld
jo
push
negl
and
fstpt
lcallw
adc
ljmp
ljmp
decb
add
pop
mov
mov
cltd
mov
ss
fisubrs
jle
rolb
ret
adc
idivl
jns
push
aas
xchg
pop
mov
jo
add
add
in
sbb
int3
xlat
aad
les
hlt
push
xor
imul
mov
dec
xchg
fisubs
jge
and
and
xor
aam
ret
jge
push
inc
movsb
xchg
lret
clc
mov
gs
rcr
popf
rcr
mov
outsb
pop
daa
inc
scas
sub
ret
cmp
call
jae
and
xlat
jns
xchg
mov
pop
sub
rolb
xchg
jp
lock
push
lds
cltd
das
adc
inc
xchg
adc
std
push
cmp
scas
pop
sbb
lret
mov
pushf
jl
dec
rcrl
btr
add
mov
pop
je
stos
mov
lea
inc
dec
in
add
inc
sbb
jmp
pushl
notb
mov
lret
pop
loopne
push
add
shll
fstpt
mov
nop
cmp
outsb
roll
orb
mov
mov
push
aas
mov
sub
adc
bound
xchg
aad
mov
or
fisttpll
cmp
loop
pushl
cmp
and
icebp
dec
imul
ja
lods
mov
lret
inc
and
mov
add
sub
xlat
jmp
int
pop
leave
out
xchg
sbb
jbe
cmp
mov
add
rorb
jns
push
mov
dec
pop
push
outsb
adcl
dec
mov
xor
xor
insl
rclb
xchg
sarb
ljmp
std
xchg
push
lret
fstpt
jle
jo
insl
sahf
addr16
outsl
dec
cmp
add
inc
xchg
xorps
mov
enter
mov
add
lret
shlb
and
and
push
mov
inc
xchg
pop
movsl
dec
repz
inc
sbb
daa
out
xor
inc
lock
clc
push
insb
pop
cmpsl
stos
xor
rolb
mov
mov
pop
sbb
sbb
inc
add
or
jno
notl
cld
cwtl
mov
pop
sbb
pop
dec
push
jmp
xchg
scas
sahf
ds
es
mov
mov
cmp
out
cmp
aad
out
inc
mov
int
jg
cmp
ds
popf
push
mov
int3
mov
popa
movsl
jle
mov
xchg
sub
pop
dec
xchg
or
aam
cmp
xor
insb
lods
dec
aam
cltd
int
add
mov
in
xor
xor
jle
or
jmp
lcall
movsb
and
pop
inc
pop
sub
xor
mov
stos
lret
push
fbld
fdivs
mov
mov
stos
popa
xchg
cltd
stos
pop
mov
dec
movsl
ret
and
test
sbb
fildl
mov
jnp
push
lret
nop
push
in
dec
test
jno
cld
add
iret
mulb
push
push
repnz
int3
out
pop
shl
push
dec
push
cmp
or
inc
pop
xchg
xchg
dec
data16
jns
in
inc
test
sarl
jge,pn
xchg
add
lds
sti
movsb
cmp
enter
mov
mul
inc
sbb
cld
mov
and
mov
mov
pop
pop
test
xor
stos
mov
daa
mov
add
js
aad
mov
fsubl
adc
fcompl
and
cli
iret
sbb
xor
test
int
enter
sub
xchg
sub
cmp
mov
sar
gs
fs
or
repnz
pop
and
out
xor
gs
and
xlat
jl
adc
jmp
insb
xor
mov
cmp
ficoms
addb
imul
ficoml
mov
jg
cmp
in
test
imul
test
pop
cmpsb
xor
mov
outsl
insl
daa
repz
jp
in
cmp
sbb
adc
sub
jmp
data16
mov
mov
fimull
pusha
lock
mov
sbb
add
and
pop
mov
fsubrl
or
or
dec
push
pop
dec
iret
and
dec
adc
push
mov
jle
fimuls
xchg
cmpsb
xlat
and
push
insb
orb
push
fsts
std
jno
pop
incb
xchg
adc
enter
pop
sbb
in
jbe
test
pop
outsl
mov
cmpsb
pop
jne
push
jle
adc
xchg
push
mov
sub
hlt
mov
aad
pop
xor
add
pop
iret
xchg
push
mov
popa
mov
scas
cmpsb
add
leave
subl
mov
or
shlb
adc
out
pop
out
cmc
mov
aam
cwtl
imul
add
add
or
dec
push
gs
lods
iret
fldl2e
lret
push
mov
cmp
xchg
outsl
mov
lret
rcrb
mov
xor
adc
fxch
fistpl
outsl
jbe
mov
insb
out
pusha
pcmpgtb
std
lret
in
cwtl
push
dec
sub
insb
out
test
pop
or
and
iret
adc
push
push
test
test
shl
sbb
xchg
es
dec
push
mov
sbb
testl
pop
pusha
jno
and
ljmp
shr
mov
pop
push
cmp
inc
sti
adc
push
sub
lret
cwtl
adc
cmp
cli
sbb
push
rcll
xor
xlat
pop
rclb
out
xor
adc
outsl
loope
mov
int
repnz
ret
mov
neg
in
imul
or
sahf
push
sarb
push
aam
clc
int
lcall
out
fstpl
cli
fmuls
ljmp
das
jbe
dec
dec
inc
js
das
push
xor
mov
shl
or
mov
testl
adc
and
jbe
and
aam
push
lock
int
xchg
repnz
dec
push
je
popf
mov
scas
scas
or
mov
inc
cmp
or
push
mov
lahf
and
mov
xchg
cmpsl
jno
cmp
mov
push
inc
or
lods
hlt
adc
and
js
mov
pop
mov
scas
out
aad
jg
sub
test
sub
inc
aam
inc
add
mov
lahf
mov
mov
inc
sti
mov
das
loopne
incb
mov
test
cmpsl
mov
sub
xor
sub
lods
int
mov
jo
es
sub
sub
jno
loop
lret
adc
pop
fcomp
fucomip
push
pop
jp
mov
push
or
mov
loope
dec
out
pop
divb
test
out
push
push
repnz
inc
scas
and
rcr
inc
push
xchg
movsb
push
jmp
in
int3
xor
outsb
shll
push
roll
pop
push
jge
into
or
mov
cmpsl
and
enter
jle
xchg
sub
sarl
pop
mov
xchg
shr
jecxz
mov
sahf
or
cwtl
mov
imul
nop
repz
cmpsb
dec
ss
xchg
outsb
test
pop
xchg
sub
out
adc
outsl
sub
and
or
dec
jne
popf
insl
xchg
sub
xchg
pop
pop
xchg
sti
push
mov
lahf
rolb
fwait
push
daa
xor
and
add
xchg
sbb
jge
imul
dec
ror
dec
lock
jno
fisttps
xor
test
bnd
gs
imul
sub
shlb
or
aaa
inc
cmc
jg
lock
ds
push
adc
into
loopne
xor
xor
mov
lods
scas
sub
add
jne
rcll
push
in
sub
outsl
inc
xchg
add
mov
rcr
loop
or
jnp
mov
pop
fcmovu
jo
jl
dec
push
xchg
imul
ja
and
fxch
lods
scas
pop
test
push
arpl
outsl
ja
jp
inc
mov
mov
mov
inc
add
call
popf
and
add
clc
xadd
dec
enter
divl
lea
mov
or
into
xor
cmp
arpl
movsl
lahf
mov
xorb
lret
fstp
arpl
sbb
adc
dec
pop
rclb
or
pop
in
add
adc
mov
xchg
sbb
inc
inc
pop
mov
jnp
movsl
and
or
lret
push
sbb
xchg
pop
push
iret
dec
sahf
ss
int
bound
and
out
in
mov
jle
and
jns
int
mov
cmp
mov
push
std
lock
push
sbb
testw
iret
arpl
xor
push
adc
es
jns
nop
leave
das
dec
xor
inc
dec
push
test
mov
mov
mov
jns
or
arpl
sub
xchg
out
aas
pop
lcall
dec
cltd
inc
fstl
push
mov
imul
hlt
push
mov
ds
arpl
mov
inc
push
fmull
cld
loopne
cmp
jae
sbb
or
fdivr
push
pop
sub
bound
jnp
loop
push
mov
call
xor
frstor
dec
ss
push
popf
cmp
add
arpl
sahf
xor
imull
sbb
lea
cmpsb
js
repz
sbb
xchg
and
fwait
pop
fists
fucomi
les
out
aaa
fnstsw
leave
test
push
add
xor
sub
xchg
xchg
mov
push
dec
icebp
or
xor
adc
mov
add
data16
iret
aaa
sbb
mov
divb
scas
fwait
dec
mov
imul
sbb
lods
mov
cmp
daa
cltd
sbb
xchg
das
roll
lods
roll
sbb
push
mov
jo
xorl
xor
xchg
push
mov
mov
mov
repz
lods
outsl
mov
sbb
add
jnp
test
push
nop
in
lret
jne
or
mov
push
push
mov
adc
push
cwtd
sub
push
push
iret
adc
pop
and
stos
ret
dec
sub
std
pop
add
std
scas
out
dec
repnz
pop
and
sbb
jne
sub
sub
sub
sub
xlat
stc
push
test
adc
and
dec
jnp
clts
cmp
mov
sbb
mov
je
aam
push
push
xor
jge
push
daa
sbb
in
or
sub
cmp
or
pop
fdiv
push
sub
sbb
inc
xor
add
dec
test
adc
jb
pop
js
dec
fwait
sbb
mov
jge
jne
adc
stos
call
icebp
cmp
les
push
pop
sahf
xchg
insl
push
imul
jb
pop
out
movsb
int3
pop
inc
pop
xchg
mov
pusha
mov
add
stos
jb
xchg
mov
rcl
add
mov
pop
mov
jmp
or
test
push
fists
push
jae
inc
add
and
fimull
hlt
fidivrs
xor
dec
mov
xor
fistpl
pushf
dec
mov
stc
sub
sbb
sub
adc
mov
fsubl
hlt
mov
sbb
jge
xchg
mov
dec
or
imul
pop
jg
popa
dec
stos
popa
push
cmp
jno
enter
jp
icebp
dec
fwait
sbb
addr16
cli
rolb
mov
rcl
mov
add
stc
dec
popf
mov
inc
test
test
cmp
rcll
xor
mov
or
jae
icebp
cmp
mov
push
pop
inc
cld
or
pop
xlat
int
imul
lods
sub
xor
negb
jecxz
stos
imul
and
sbbl
xor
inc
xchg
mov
ret
push
mov
add
jo
and
leave
and
xor
lret
pusha
insb
popf
mov
xchg
gs
push
movsl
sub
jp
lods
fs
dec
leave
shll
adc
push
pop
lret
inc
imul
fwait
push
js
push
mov
sarl
aad
aam
popa
jmp
pop
xor
push
dec
hlt
in
ficomps
mov
and
mov
int
add
cmc
push
aaa
jl
jg
shl
mov
nop
ss
cmp
adc
sub
or
ljmp
repz
push
jl
lcall
add
mov
icebp
fdivl
inc
popf
xlat
sbb
xlat
bound
dec
sbb
js
je
icebp
movsb
mov
mov
fcmovu
mov
popf
cmc
cmp
add
adc
scas
sahf
xor
movsb
sub
les
fists
mov
pop
jnp
dec
xor
mov
adc
cmpsb
ss
mov
inc
cld
movsl
lods
pop
fwait
push
subb
cmp
jbe
xlat
push
aas
fidivl
and
int
cli
mov
xchg
shrb
test
add
inc
into
mov
xchg
lret
cmp
mov
cld
pop
in
adc
inc
xchg
push
out
push
nop
jmp
mov
add
fistl
fldcw
ja
or
jno
dec
ret
aam
movsl
mov
dec
ffree
jb
dec
lcall
insl
sub
cmpsl
pop
cmp
mov
fs
add
loopne
scas
dec
fs
outsl
jb
icebp
shrb
xorb
test
jmp
mov
inc
loope
and
and
lds
lock
std
inc
mov
add
jecxz
pop
call
and
adc
js
outsl
xchg
mov
xchg
xchg
gs
fcmovbe
loop
xorl
stc
jl
rclb
and
shrb
mov
jg
shlb
sub
add
movsb
xchg
push
pop
je
fisubl
xchg
repz
sub
test
push
dec
push
aam
int
xor
jecxz
mov
outsl
int3
dec
aad
jae
lcall
hlt
mov
xor
clc
adc
or
lods
inc
xchg
es
out
cmp
push
mov
or
adc
aam
and
and
sbb
push
cmpsl
out
add
dec
push
push
lea
aas
pusha
mov
xor
pop
hlt
cmpsl
rclb
inc
or
cwtl
mov
aaa
push
aad
push
inc
jecxz
in
xchg
mov
pop
aas
push
lock
stos
or
sahf
inc
mov
pusha
jecxz
mov
push
dec
les
pop
into
push
inc
jbe
ja
jp
fnstenv
fs
pop
add
pop
push
jmp
mov
leave
test
call
daa
pop
sti
rcrl
mov
out
adc
xchg
push
mov
inc
out
fisttps
jmp
in
decl
ds
push
mov
mov
jbe
ja
ret
xchg
stc
jns
pushf
icebp
fnstsw
cs
pop
movsl
inc
mov
and
sbb
je
insl
je
cmp
outsb
pushf
out
mov
jmp
inc
or
inc
lods
movsl
shlb
ja
bound
test
xchg
movsb
and
sar
xor
or
cmpsl
adcb
adc
ss
pop
sub
cmp
mov
out
sahf
fnstsw
into
scas
lret
mov
cmc
mov
outsl
xor
insl
das
cld
cs
add
pop
jno
sarb
xlat
leave
jnp
in
mov
mov
loopne
scas
sbb
xorl
add
cmp
das
push
aam
pop
push
in
jp
fs
dec
test
test
xchg
subl
jg
lret
add
xchg
pop
inc
xor
cs
xchg
stc
rorb
add
mov
lahf
in
rcll
dec
sbb
or
dec
push
mov
mov
pop
add
pop
jno
xlat
jno
xor
dec
xchg
repz
es
iret
or
ficoml
aas
jl
mov
or
mov
pop
xchg
cwtl
mov
jno
cmp
jne
test
xchg
dec
addr16
in
ds
movsl
mov
jle
pop
shll
mov
pop
mov
dec
inc
enter
push
ljmp
pop
pushf
push
xchg
out
xor
cmp
inc
test
sbbl
loopne
mov
pushf
shl
loope
ret
sub
arpl
outsl
pop
dec
lahf
mov
shrl
cwtl
outsb
pop
lcall
ret
daa
out
mov
insl
xchg
and
pop
int
mov
sbb
and
ficompl
pushf
jbe
fwait
pop
clc
cmp
pop
cmp
lcall
imul
mov
std
bnd
in
fidivrs
adc
mov
ret
into
lods
data16
enter
pop
hlt
sbb
cmp
mov
sbb
cmpsb
bnd
inc
jae
lea
sub
repnz
mov
repnz
loopne
push
sbb
mov
jo
clc
dec
lret
pop
loope
adcl
ret
cld
sbb
sub
insb
cli
sub
mov
ret
jmp
xchg
mov
mov
in
push
jge
jnp
cmp
ds
cmp
test
adc
scas
pop
andb
sub
aaa
adc
les
pop
pushl
fbld
imul
sbb
insl
divb
add
in
test
repz
cmp
test
pop
mov
push
test
imul
inc
add
jle
rcll
xchg
dec
es
adc
fnstcw
call
mov
and
adc
push
inc
cs
divb
cmp
ret
dec
adc
insl
imulb
adcb
jmp
js
test
repz
or
rolb
pop
fsin
sahf
pop
les
rcll
cmpsl
outsl
jne
jp
push
stos
lret
mov
xchg
push
mov
stc
ret
cli
push
rcl
cmpsl
imul
outsb
cmp
arpl
mov
add
scas
adc
adc
jo
inc
cmpsb
xchg
adc
add
cmp
mov
dec
fidivrl
out
pop
jecxz
push
dec
lahf
aad
inc
in
sbb
shl
sub
pop
insb
cmc
mov
inc
not
nop
ficoms
push
sub
movsl
mov
ljmp
out
sahf
jg
cltd
adc
jnp
mov
std
mov
scas
popa
and
add
jmp
push
pop
movsl
ficomps
out
jmp
fisttpl
mov
xchg
cli
cmpsl
in
jl
sbb
loope
dec
sbb
adc
rorb
sahf
mov
js
addr16
lcall
mov
outsl
movsb
nop
sub
or
mov
fisubl
xor
xlat
or
out
push
mov
cmp
test
or
gs
hlt
jmp
ja
adc
adc
mov
cltd
fstpl
add
fildll
dec
bound
jbe
inc
lret
pop
pop
xorb
xor
das
dec
outsb
cld
xchg
lea
addr16
cmpsb
fdivl
shll
mov
out
pop
fwait
ja
testl
xor
inc
and
push
adc
in
aaa
int
push
xchg
nop
pusha
test
mul
push
add
js
mov
repnz
pcmpgtw
bound
xchg
sbb
adc
bound
push
test
push
adc
push
jnp
popf
jae
into
add
lcall
icebp
pop
fimuls
psubw
adc
orl
mov
fisubs
mov
and
add
sbbl
cmc
pushf
mov
sbb
fsubp
and
test
xchg
jno
push
cmpsl
cld
hlt
mov
fsubrl
sbb
jae
push
fwait
jb
sub
pop
in
mov
jp
mov
loop
jnp
mov
adc
sub
loop
enter
mov
scas
pop
mov
mov
mov
inc
cld
pushf
mov
jecxz
and
dec
rep
pusha
sbb
and
mov
mov
bound
adc
movsb
aad
iret
in
mov
mov
cmpsb
adc
cli
popa
frstor
cmc
test
clc
ja
mov
pop
xor
movsb
insl
sub
inc
push
cmpsl
in
out
mov
out
ds
mov
sbb
inc
push
mov
insl
adc
outsb
nop
mov
sub
test
out
cltd
xchg
outsl
cmp
iret
mov
call
sti
les
test
mov
pop
cwtl
or
or
aad
mov
imul
out
mov
xor
shlb
or
push
inc
into
lods
mov
xor
mov
jno
fsub
lcall
test
pop
stos
mov
sbb
insb
xchg
arpl
fsubs
cmp
xor
adc
cli
inc
push
xchg
pop
push
in
filds
mov
ss
mov
pop
jmp
jg
lcall
push
mov
data16
sub
insb
aad
pop
mov
mov
inc
mov
std
xchg
fs
test
sub
cmpsb
push
ret
push
push
jle
sarb
dec
lahf
inc
out
mov
mov
cmp
aas
leave
cltd
jae
ret
xor
push
stos
addb
push
scas
cmp
push
mov
stos
mov
loopne
outsl
xor
ret
jl
loop
or
aas
pushf
cmc
push
scas
in
ljmp
addl
mov
insl
test
mov
std
mov
inc
cld
add
or
movsb
divl
sbb
mov
cmp
mov
arpl
hlt
jle
sub
mov
iret
adc
ret
fdivr
lret
popa
fstpl
daa
inc
add
and
mov
fxch
ljmp
insl
ret
push
xor
jle
xchg
cmp
js
rolb
mov
mov
sub
ds
jno
inc
inc
dec
cmp
popa
int3
enter
xchg
cmp
mov
leave
push
mov
ds
sub
push
adc
stc
mov
jns
dec
jns
dec
mov
and
sbb
inc
push
mov
jnp
cmp
adc
clc
and
popf
dec
xchg
fcomi
xchg
mov
aas
movsl
outsb
push
lock
add
mov
imul
cmp
cli
stos
adc
and
pop
jg
movsb
xchg
fwait
daa
pop
mov
pop
xor
and
in
outsb
addr16
inc
cmp
mov
cmp
pop
mov
mov
pop
sti
sti
and
add
or
mov
xorl
ficoms
xchg
jl
jb
push
lods
jl
adc
repnz
fdivs
pusha
lock
push
test
mov
aas
fnstsw
shl
mov
ljmp
or
sub
push
pop
jne
pop
push
and
add
fildl
ss
inc
lods
ds
jg
xor
jae
sub
xor
test
jno
or
inc
aam
sub
jns
pop
and
aaa
outsl
leave
sbb
sub
pusha
mov
stos
dec
cmc
nop
lret
call
cmp
mov
in
and
sbb
or
push
sub
mov
sub
test
pop
mov
mov
sbb
inc
cmpl
dec
jle
ficoml
jmp
pop
icebp
or
mov
rolb
adc
icebp
sbb
sbb
or
pop
test
dec
call
push
dec
inc
test
inc
push
movb
sbb
sahf
popf
dec
fdivp
mov
jbe
lahf
int
push
mov
leave
pushf
enter
fsubs
fs
pop
mov
daa
xchg
cmpsl
mov
pusha
sub
sbb
cmp
nop
push
das
scas
inc
mov
dec
push
push
adc
cmp
test
jmp
xor
test
jno
push
icebp
rcr
jmp
aam
mov
inc
cmpsb
or
dec
sbb
mov
mov
xchg
test
push
rolb
dec
stc
stos
daa
dec
pop
adc
lret
int
mov
in
or
movsl
in
mov
cmpsb
inc
popa
add
xor
or
push
mov
and
xor
fcmovnb
int
xchg
sbb
andb
push
mov
push
lock
fsubrs
and
push
inc
pushf
aas
or
or
insb
daa
dec
xor
dec
cmc
loopne
add
mov
mov
jo
sbb
addr16
adc
ss
imul
jo
pop
xchg
and
or
push
fists
xor
lret
sub
ljmp
jmp
aam
push
inc
aaa
js
cld
and
jno
mov
loop
sub
xchg
icebp
pop
xchg
lret
cmp
lods
int
mov
outsb
fs
int3
inc
mov
xchg
pop
mov
sbb
jle
add
mov
imul
add
daa
popa
jg
loope
or
sub
push
sti
test
fisubrs
lock
inc
in
mov
cmp
aaa
ret
mov
add
jmp
scas
mov
and
pop
repnz
xchg
hlt
rolb
cmpsl
ss
cmp
in
cltd
sub
idivl
xchg
aaa
inc
mov
mov
cmp
mov
insb
rorl
jecxz
cmc
stos
mov
and
adc
aad
mov
scas
ret
mov
int
fs
or
mov
test
and
js
sub
xchg
adc
or
cmpb
cld
aam
xor
mov
sbb
or
ret
xchg
sti
ret
and
loope
cmpb
pushl
inc
jnp
xor
sub
lret
pop
push
pop
jne
call
les
enter
jmp
push
dec
inc
xchg
in
nop
call
xchg
push
jecxz
cmp
pop
test
sub
xor
mov
das
push
fstpt
sarb
pop
cli
stos
cmp
jge
ja
aad
push
fnstcw
insl
cmp
stc
mull
out
cmp
or
cmpsb
inc
adc
pop
or
adc
data16
dec
lds
lahf
jb
scas
fildll
fsubrs
mov
lea
fs
add
mov
jmp
out
and
pop
add
aas
int3
cmp
bound
iret
imul
cwtl
mov
in
data16
mov
mov
lret
fistl
xchg
cmpsl
sub
xchg
cmc
mov
cmc
into
adc
push
cwtl
jnp
nop
subb
and
push
push
inc
cmp
xor
sbb
movsl
fldcw
arpl
mov
adc
enter
aaa
lods
dec
xchg
jno
pop
pop
and
cmc
hlt
xchg
pushf
int
js
jno
push
mov
fwait
cmpl
iret
jp
into
aam
xchg
ja
dec
dec
inc
or
pushf
and
xchg
ss
out
fnstenv
mov
aad
push
out
andb
sbb
xor
lea
pop
inc
hlt
mov
push
rcrb
aaa
lods
mov
mov
in
or
mov
mov
push
cmpsb
jg
xchg
pop
repnz
dec
movsl
in
sbb
and
sub
cs
stc
cltd
scas
out
fdivs
adc
into
pop
xchg
fidivl
insb
gs
popf
rolb
test
in
in
sbb
mov
jg
lcall
push
sbb
mov
xor
in
sub
leave
mov
sarl
test
out
mov
sti
xor
in
cmp
pop
test
push
sbb
popf
mov
sub
fidivrs
repnz
pop
fadds
jo
or
xchg
push
jg
stos
xchg
arpl
imul
test
add
mov
enter
or
adc
add
iret
inc
repnz
add
push
push
aad
add
gs
fldz
xchg
adc
cmpsb
adc
jl
sti
or
scas
fs
scas
jbe
adc
jecxz
shlb
je
cld
pop
popa
dec
ret
or
inc
sbb
out
std
fs
lret
fwait
sub
dec
and
hlt
rcrl
icebp
clc
or
inc
mov
std
dec
dec
jb
scas
jbe
jbe
cmpsb
adc
subb
cmp
fwait
rclb
add
sub
jno
mov
cmpsl
in
daa
insl
outsl
push
dec
pushf
je
jge
or
and
nop
ljmp
movsb
cmp
sarl
pop
ds
jb
fcmovnu
aam
out
mov
and
clc
daa
out
add
cld
addb
stos
sbb
cmpsb
jp
scas
rorb
xlat
aaa
iret
cltd
test
test
shrb
or
push
and
xor
stos
jecxz
data16
ret
mov
cld
or
and
shlb
popa
aad
jmp
out
in
dec
pop
repz
mov
mov
xchg
or
inc
hlt
mov
push
cmpsb
pop
add
dec
out
adc
fdivrs
push
xchg
shll
and
imull
add
push
pop
or
add
dec
mov
repz
add
iret
push
outsb
es
iret
dec
jl
cmp
jb
jmp
cmp
insl
testl
stc
idivl
or
dec
jo
xchg
xchg
das
cmp
pop
stos
sub
pop
push
std
movsl
insb
push
movsb
cwtl
shrb
add
inc
test
movsl
or
add
popa
xor
les
inc
dec
adc
push
out
lock
or
push
int
mov
enter
pop
into
mov
dec
popf
fld
mov
sbb
jns
roll
push
arpl
push
inc
rorl
lahf
mov
xor
mov
mov
push
pop
pushf
scas
aas
jae
adc
add
xor
jp
test
out
out
add
popf
out
xchg
scas
add
adc
out
inc
xchg
pop
aaa
es
repz
clc
int3
sbb
inc
pop
imull
mov
push
push
dec
fldcw
jo
or
lcall
inc
xchg
xchg
cmc
aaa
sub
fistpll
jg
in
cwtl
inc
lahf
dec
lock
xor
add
sbb
shrl
cmp
aaa
xchg
bound
ret
add
dec
push
inc
loopne
mov
adc
fisttps
or
fsub
or
and
dec
sar
mov
out
mov
or
and
mov
jbe
add
clc
clc
insb
out
mov
lds
adcl
pop
jg
mov
fsubp
gs
xchg
xor
test
pop
jns
add
jnp
jns
fcomps
mov
cmpsb
mov
lahf
shll
stos
fcoms
sbb
xchg
sbb
inc
xchg
push
rol
fcompl
lcall
or
pop
mov
sbb
ret
mov
cmpsl
dec
mov
mov
insl
rolb
in
jmp
dec
jle
leave
repz
lcall
movsb
and
popa
fnsave
cmp
cltd
mov
add
cmc
and
cmp
sub
dec
add
lea
jmp
neg
push
inc
xchg
mov
cmp
push
fldl
mov
mov
loop
insl
add
nop
ljmp
outsb
js
hlt
out
pop
ret
xchg
push
push
movsl
add
ficompl
popf
jo
dec
pop
test
frstor
pushf
les
pop
rclb
andb
or
and
jmp
adc
pop
and
lret
mov
sub
sub
daa
popf
hlt
inc
mov
cli
sub
ja
mov
mov
mov
es
push
cmp
push
pop
gs
outsb
neg
bound
cmp
subb
pusha
jl
nop
adc
cltd
cmpsl
sbb
pop
dec
mov
jno
xchg
adc
subl
hlt
lret
mov
out
lret
xchg
sahf
push
adc
jb
cmp
lahf
aad
ljmp
leave
or
add
movsl
loope
xor
add
cmp
les
adc
or
lea
xchg
int
out
dec
cmp
outsb
popa
data16
and
xchg
leave
into
les
inc
push
mov
cmpb
push
cli
sbb
mov
xor
stc
mov
push
repz
xchg
fiaddl
mov
cmp
pop
out
pusha
ja
stos
lods
fidivrs
jae
mov
sub
mov
mull
sub
adc
cmc
sub
idivb
ja
arpl
in
xor
sub
cld
cmp
in
daa
lahf
das
test
mov
sub
cmp
dec
or
notb
jge
repnz
sub
int
dec
nop
and
rorl
add
test
gs
lret
paddd
fsubrs
stos
movsb
imul
inc
roll
inc
scas
xor
sub
lds
int3
mov
adc
cli
adc
sub
sbb
adc
xchg
mov
pop
maxps
fwait
test
mov
push
xchg
xchg
mov
scas
iret
adc
mov
fistl
out
push
mov
les
sbb
fwait
inc
lcall
sub
dec
jmp
xor
int
mov
out
lods
pop
rcr
pop
push
test
das
loop
int3
int
cmp
cmp
xchg
addl
je
cs
cmp
inc
test
out
mov
inc
xor
adc
test
mov
rcrl
dec
in
mov
push
or
das
scas
push
cmpsb
fimuls
fisttpl
test
cwtl
jo
fldt
sbb
jae
or
xchg
xchg
inc
mov
cltd
int3
inc
inc
push
pop
mov
adc
jo
subb
push
packssdw
inc
jecxz
mov
add
push
pop
ss
jb
negl
or
cmpb
pop
sub
and
fs
shr
out
data16
movsl
repz
cmp
mov
jecxz
popf
lds
jg
cltd
movsl
sti
aas
sbb
pusha
sub
push
cmp
xor
add
stc
icebp
aaa
sub
mov
add
xor
sub
xor
xor
push
in
mov
sbb
test
jp
or
xor
outsl
fsubrp
xchg
cmc
jnp
jle
sti
mov
mov
testl
test
repnz
mov
pop
hlt
fsubrs
xchg
popa
inc
sub
dec
out
sti
and
cli
sahf
cmpl
inc
adc
ljmp
mulb
mov
pop
inc
insb
xchg
dec
cld
daa
xchg
sbb
mov
cmp
dec
pop
lcall
shl
adc
mov
fiadds
mov
jg
stos
and
outsl
clc
mov
mov
jecxz
sub
adc
scas
rcll
cmpsw
rcrb
mov
xchg
icebp
call
mov
lret
inc
jae
mov
into
mov
xlat
sbb
in
pusha
mov
inc
jb
mov
pop
or
aaa
inc
jns
jmp
rcr
lahf
ret
pusha
loopne
hlt
popf
mov
ljmp
mov
mov
ret
xchg
int
lods
push
xchg
jecxz
out
lret
fldpi
adc
aam
lock
andl
icebp
adc
lahf
sbbl
aaa
inc
and
pusha
lods
pop
and
cmpsb
rolb
fisubs
stc
fsubp
sbb
lret
inc
in
outsb
mov
add
orl
cwtl
cmp
sub
sahf
cltd
xchg
push
rorl
aam
mov
xor
sbb
cmp
mov
xor
mov
xor
subb
aas
sbb
push
push
mov
mov
mov
aad
push
pmuludq
arpl
nop
xchg
mov
or
pop
sub
cmpsl
lods
cld
jge
push
loope
cltd
pushf
adc
inc
icebp
adc
cmpsb
xchg
mov
repz
xor
cmp
jns
sbb
adc
pop
xchg
sti
add
sbb
lar
push
out
cmp
pop
fcomp
dec
jne
roll
sbb
unpckhps
hlt
and
arpl
dec
or
jnp
insb
nop
cmpl
sbb
fs
add
pop
pop
shll
pop
dec
cmp
sub
std
les
fs
adc
xor
add
sbb
in
leave
mov
fcmovnu
enter
lock
mov
ds
dec
cmc
pop
rcr
xlat
int
nop
inc
iret
ret
mov
mov
ficoml
dec
lret
lahf
pop
pop
cmp
lea
xchg
xchg
pop
xchg
sub
movb
sahf
xchg
mov
cmp
pop
or
in
cmp
subb
adc
mov
cli
aad
xor
out
sub
lods
movl
mov
pop
jno
lods
popf
in
jle,pn
gs
call
xor
stos
test
test
inc
jne
cmpsl
xor
push
in
inc
int
cmp
jbe
sbb
add
xor
mov
cs
lds
or
push
jg
stos
notrack
adc
sbb
push
fisubl
loopne
mov
in
call
daa
xchg
jp
add
jno
xchg
js
cmp
mov
loop
fsubs
add
xchg
push
call
cmpsb
sbb
in
stos
inc
cli
outsb
push
sbb
mov
jp
out
popf
imul
mov
sub
adc
mov
inc
jl
movsl
push
ret
jg
out
jp
pushf
inc
testb
jl
or
test
fists
and
je
pusha
mov
cs
xchg
in
jp
jns
decb
push
idivb
lahf
xor
adc
inc
sub
dec
or
dec
mov
cmp
in
pop
push
fldt
mov
cmp
jcxz
sub
mov
faddl
dec
in
bound
add
out
jnp
decb
jp
and
or
pop
xchg
lcall
inc
cmpsl
fwait
je
fmuls
movsl
leave
xor
dec
pop
dec
mov
lcall
jl
sbb
sbb
mov
aam
mov
pop
jnp
fwait
add
ret
je
xor
inc
sub
insl
fcoml
or
mov
xor
jae
test
jb
add
or
in
mov
pushf
mov
into
jg
in
mov
lahf
pop
stos
fidivs
xchg
or
mov
pop
test
xor
cmp
stc
mov
imul
xchg
xor
sub
ljmp
and
or
test
push
xor
xchg
pop
mov
stc
xchg
rcr
jo
sub
ficompl
xlat
xor
and
insl
push
or
cmc
cs
cmpsl
xchg
out
sbb
sub
fwait
xchg
cmp
cld
xchg
mov
cmp
fcompp
test
mov
cmp
mov
lret
or
lds
xor
stos
sbb
inc
aam
mov
xor
or
cmp
push
iret
sub
hlt
imul
in
push
pop
and
lret
inc
xchg
out
pop
push
scas
xlat
inc
adc
pushf
adc
loop
insl
popa
int
push
cmp
out
inc
jl
push
xchg
mov
jl
outsb
lret
jmp
fwait
adc
mov
mov
dec
push
add
mov
jns
push
mov
and
pop
dec
aas
ja
testl
add
cmp
loopne
xchg
jg
fwait
mov
jne
adc
pop
push
les
movsb
inc
jp
mov
dec
xor
sbb
mov
push
mov
inc
adc
mov
push
sbb
cmpsl
jecxz
ds
into
stc
mov
pushf
mov
mov
push
mov
push
int3
outsb
ss
loope
in
xor
test
fwait
lea
sbb
sbb
mov
push
xor
shrl
inc
dec
adc
sub
out
add
mov
movsl
insb
push
aaa
push
cli
pop
lods
imul
lods
aad
mov
stos
push
cmc
outsb
stos
int3
push
loopne
pop
das
lcall
sbb
scas
rcl
push
and
call
cmp
push
orb
add
sub
jecxz
cld
imul
xor
mov
mov
movsl
cli
leave
xchg
lcall
movl
mov
outsb
pop
ret
das
movsl
jnp
sbb
cltd
mov
add
sbb
mov
int3
inc
or
inc
add
or
push
fisubl
out
push
int3
mov
mov
xchg
cmp
xchg
ror
mov
dec
shr
jecxz
fisttpl
sbb
mov
pop
dec
shl
stos
clc
dec
and
add
in
in
aam
sub
jg
mov
gs
test
cs
std
and
add
scas
in
push
push
dec
jg
in
sub
in
ss
or
and
cmovbe
orl
test
jp
mov
mov
and
icebp
jecxz
bound
pushf
lods
xchg
lcall
lods
int
call
mov
cmc
dec
pop
mov
cmc
sbb
mov
inc
rorb
cmp
and
sub
fldl
shl
imul
idivb
fldcw
int3
clc
push
movsl
and
xor
xor
pop
xor
cltd
rorb
shrb
mov
jae
xor
das
sbb
call
or
aad
ret
into
ljmp
std
hlt
add
adc
xchg
outsb
sahf
std
sbb
stos
stos
dec
lahf
out
mov
movb
fiaddl
mov
dec
dec
mov
xor
cmp
mov
push
enter
pop
xchg
adc
or
jecxz
in
xchg
lcall
pop
and
mov
xchg
cmc
call
imul
sub
inc
stos
push
inc
inc
test
xchg
int3
mov
xchg
inc
push
adc
inc
loop
mov
add
xor
incb
pop
ret
test
jae
out
pop
cmp
jae
sub
fildll
cmc
mov
subb
js
scas
in
pushf
sahf
test
push
and
cmp
mov
mov
or
xchg
push
fsubs
call
and
add
shl
cmpsb
in
mov
dec
adc
xlat
ficoms
jae
push
lcall
jae
lock
sbb
imul
inc
test
cltd
and
dec
add
jl
loope
mov
dec
xchg
rclb
sbb
add
xchg
pop
push
mov
arpl
sahf
xchg
mov
loope
inc
test
and
xor
push
dec
add
in
pop
sbb
in
mov
cmp
js
popa
jle
xor
lea
subl
aam
mov
push
mov
sbb
or
inc
outsl
imulb
out
leave
outsb
stos
scas
jmp
mov
and
or
js
shll
mov
stc
pop
adc
xor
pop
out
fdivrs
cltd
fyl2xp1
test
xchg
lds
add
inc
sub
in
imul
loop
pop
xor
lcall
and
jecxz
mov
clc
cmc
push
clc
clc
arpl
jnp
imul
inc
xchg
out
js
daa
pop
mov
mov
fdivr
insb
jne
test
insl
mov
test
mov
adc
pop
push
xor
push
into
pusha
and
sbb
xchg
push
dec
aam
xchg
in
jecxz
push
popa
push
and
sub
push
cmp
mov
test
sbb
stos
xorl
lret
mov
mov
and
sti
sbb
outsl
rorb
inc
enter
pushf
xchg
jle
pushf
jecxz
je
push
inc
sbb
mov
xchg
aaa
cmp
pop
xchg
pop
cmp
jmp
jae
jmp
std
loope
sub
mov
mov
dec
xlat
dec
bound
aam
filds
dec
in
push
fisttpl
lret
aad
mov
mov
lds
stc
pop
insl
call
ret
mov
lret
push
popa
int
dec
sbb
xor
and
mov
pop
sub
loop
sub
push
cltd
popa
mov
jno
sbb
inc
push
or
jno
adc
xor
and
add
mov
js
sbb
nop
aad
repz
out
imul
fdivrl
cmp
ljmp
addr16
mov
inc
and
and
loopne
sbb
sub
sub
mov
adc
cmp
out
mov
rorl
stc
pop
subb
inc
push
push
adc
xorb
mov
inc
ljmp
jmp
lods
xchg
add
cli
sbb
xchg
int3
shrl
mov
int
loopne
cmp
or
ja
sbb
cli
jae
mov
movsl
pop
add
outsb
adc
insl
sbb
mov
test
daa
enter
xchg
lcall
dec
push
rolb
cmp
out
aas
jp
notl
xor
movsb
mov
xchg
loopne
nop
inc
pop
mov
sbb
es
rolb
mov
push
sahf
sub
into
mov
nop
popa
push
insl
xorb
fsubrl
mov
add
jg
mov
jecxz
pusha
ret
dec
pop
iret
inc
inc
cmp
sub
scas
aad
jg
xchg
inc
lret
mov
adc
lea
fcomps
inc
push
mov
out
ss
scas
aad
and
cs
xchg
ljmp
out
sbb
add
and
js
imul
sub
mov
or
fstps
stos
xchg
add
ret
add
not
jne
mov
mov
je
gs
adc
cmpsb
pop
xlat
fldcw
pop
jnp
push
pop
and
icebp
dec
test
pusha
outsl
pop
xor
pop
pop
xchg
add
add
in
dec
sahf
testb
adc
inc
rol
sahf
repz
sbb
mov
xor
std
clc
scas
jo
loope
sub
std
ficoms
sahf
dec
ja
sbb
push
dec
jo
pushf
dec
push
fdivr
jbe
xchg
stos
inc
adc
mov
cmpsl
push
iret
jmp
sbb
push
xchg
pusha
dec
jo
xor
and
jnp
lods
in
stos
push
mov
ljmp
add
ss
addl
aad
lods
adc
sub
adc
aam
mov
fldcw
imul
dec
adc
int
negb
lcall
xlat
xor
daa
sbb
js
push
or
mov
adc
xor
int3
adc
test
xchg
mov
cmp
adc
cmp
andl
xchg
mov
adc
jae
or
daa
cltd
loopne
dec
ficoml
fcoml
int3
jle
push
insb
jne
mov
mov
push
cwtl
ret
cmp
mov
dec
testb
dec
cmpb
cli
push
pop
dec
xchg
mov
bound
mov
push
dec
cmp
leave
fnstcw
jmp
push
add
or
data16
sub
adcl
xchg
or
lods
shr
stc
mov
inc
cmp
mov
outsl
inc
stos
lcall
jmp
rcrl
push
data16
pop
and
les
dec
aam
mov
ret
cltd
add
aad
insb
cmp
cmp
cmpsl
mov
call
in
insb
add
psraw
cld
aam
jb
jmp
pop
sbbl
pop
daa
mov
pop
popa
daa
adc
enter
das
sub
js
xor
std
push
jle
pushf
das
stos
xor
add
jle
and
out
ror
mov
popa
gs
push
aam
rorl
shlb
pop
mov
imul
icebp
mov
pop
iret
jmp
xchg
insb
mov
gs
sar
adc
jnp
xor
iret
cmp
out
xchg
cmpsb
movsb
xor
test
sbb
jmp
rcl
xor
jae
dec
cmpsb
and
bound
cld
and
les
aam
pusha
push
stos
xor
add
xchg
inc
or
push
push
fdivl
push
or
movsl
sbb
cmp
mov
aas
lods
movsb
test
cmc
test
cmpsb
js
adc
lock
in
jno
mov
push
mov
dec
insl
sbb
aas
sub
in
jo
mov
and
or
push
inc
fcmovu
xchg
inc
int
rorb
mov
add
scas
shrb
imul
nop
jp
inc
cmpsb
idivl
or
mov
mov
mov
pushf
mov
mov
jbe
sti
xchg
popf
mov
add
test
push
pushf
scas
cmp
or
lods
out
add
icebp
stos
scas
lcall
jno
xchg
test
dec
popa
icebp
push
jp
mov
fmuls
pop
mov
outsb
add
into
xor
mov
daa
in
int3
cmpsl
adc
cmp
lea
cmpsb
dec
sub
lret
xor
loope
mov
into
cltd
cld
add
into
jns
jo
or
jae
lds
pop
not
jb
loop
sub
lods
push
jo
pop
add
lea
call
xchg
sub
or
mov
push
mov
popf
cmpsb
js
mov
pushf
out
je
push
jb
xchg
jne
addb
outsl
movsl
iret
dec
adc
lods
movsb
test
mov
push
in
push
push
in
das
xor
sbbl
test
nop
pop
ret
roll
call
popf
xor
stc
push
push
cmp
inc
xor
dec
enter
add
ds
push
jl
addl
addr16
js
mov
out
arpl
xor
pop
outsb
jno
cli
dec
mov
loope
jno
and
jo
inc
cmc
push
int3
mov
xchg
gs
xlat
popf
fdivrp
pop
fcmovnu
lret
mov
cli
mov
dec
and
adc
adc
or
push
mov
add
push
jbe
fldt
fdivrs
mov
or
add
adc
repnz
mov
lret
adc
iret
lea
icebp
xchg
sbb
negb
mov
fldl
loopne
and
adc
dec
xchg
mov
xor
and
mov
inc
lret
insl
mov
aas
push
pop
sub
rorb
and
or
jns
addr16
xchg
scas
insl
mov
cmp
shrl
clc
add
push
cmp
push
adc
push
xor
mov
mov
dec
shl
xchg
and
push
xor
push
pop
jg
push
xor
push
sbbb
fs
cmpsl
sub
mov
adcb
jnp
cmpsl
data16
or
xor
pop
mov
or
mov
inc
xchg
imulb
sub
cmpl
sti
xchg
mov
pushf
fdivl
outsb
fstpt
xchg
repnz
cmp
jbe
insb
call
mov
in
push
lahf
sub
fimuls
enter
jo
loop
sub
sub
jnp
lret
mov
pop
jle
push
mov
mov
jge
cmp
adc
mov
lahf
sarb
faddl
sub
xchg
or
lcall
dec
pop
fcomp
sete
mov
jmp
adc
push
jp
cs
js
sub
and
mov
je
nop
mov
lock
cmp
pusha
pop
or
outsb
sub
fbld
sub
jg
xchg
dec
mov
ljmp
pop
setno
sbb
mov
push
test
jae
xchg
cmc
or
in
inc
mov
in
jp
dec
subb
je
mov
mov
hlt
fsubrp
cwtl
je
stos
xor
movsl
js
imul
lock
das
and
push
into
and
mov
sbb
int3
cli
xchg
inc
mov
lods
jge
fs
mov
stc
orl
push
and
or
sub
cmp
cltd
push
sbb
popf
into
pusha
jo
xor
dec
daa
cmpsl
mov
lahf
add
adc
subb
ja
stos
pop
cmp
dec
lahf
cmp
xor
pop
mov
pop
outsl
mov
in
sti
inc
imul
into
mov
push
jle
sbb
ficomps
cwtl
loopne
pushf
xor
sbb
test
in
xchg
test
outsl
adc
sbb
push
fldcw
repz
xor
pop
xchg
in
cmp
mov
or
and
pop
sub
scas
push
in
push
aam
pusha
mov
cmpsl
nop
sub
adc
inc
int3
test
jno
jle
popl
pop
push
jmp
das
daa
in
ljmp
adc
imul
scas
adc
test
push
cwtl
int
pop
decl
jbe
add
or
adc
sub
mov
sbb
inc
xchg
cmp
std
sbb
js
add
pop
dec
sbb
mov
push
shlb
fsts
pop
lret
lds
pusha
negb
rolb
movsl
inc
mov
imul
xchg
mov
out
stos
fdivrs
sbb
dec
pop
inc
pop
shrl
fimuls
mov
push
xor
mov
mov
sub
xor
sub
imull
and
cmp
xor
push
fdivrl
mul
jno
std
pop
pop
hlt
das
push
ja
pop
dec
mov
pop
aas
pushf
nop
and
in
outsb
ret
xlat
nop
cmp
pop
dec
sbb
or
andb
dec
lock
sbb
adc
add
push
adc
or
fsubrs
stos
shl
stc
jmp
and
fidivl
loopne
scas
ja
add
jg
lock
imul
cwtl
mov
ja
cmp
mov
cmc
add
lret
mov
adc
mov
scas
mov
into
out
jmp
mov
mov
sbb
jo
pop
int
or
aam
sbb
out
mov
mov
test
pop
add
in
in
push
in
sbb
dec
adc
mov
inc
xchg
xchg
scas
rcll
clc
sub
cmpsl
mov
std
pop
mov
pop
mov
daa
call
sti
add
cmp
daa
ret
adc
cmp
xchg
pusha
dec
pop
jmp
and
mov
out
ss
adc
push
add
fimull
xor
lret
push
test
mov
fs
dec
pop
cmp
jnp
js
push
cltd
popf
cli
inc
sbb
out
cld
pop
scas
mov
mov
mov
test
mov
mov
and
ret
leave
std
iret
frstor
fidivrs
mov
stos
fiadds
jp
addr16
out
test
and
cwtl
or
aam
mov
imul
leave
sub
push
and
xchg
mov
ret
xlat
rcrb
insb
lea
or
in
into
xchg
lods
mov
je
mov
lods
rcrb
bnd
push
inc
lock
sahf
jne
push
jp
cmp
aas
mov
add
mov
popf
clc
adc
aas
cmp
lock
mov
dec
lcall
test
adc
movsl
push
lahf
in
xchg
pop
aas
push
mov
lock
add
das
or
rorl
cmp
fidivrl
test
in
jmp
jne
pop
and
mov
xchg
test
js
insb
sbb
stos
xor
dec
or
les
add
ror
fdivrs
cmpsl
je
jns
and
jne
stos
inc
insl
orb
lds
shll
test
mov
cwtl
fistl
or
dec
stos
rolb
rdtsc
les
push
dec
aad
jl
pop
add
xchg
fsts
mov
mov
sarl
xor
xchg
sbb
pop
adc
mov
movsb
loop
inc
pop
pop
out
sub
fcomp
add
cld
in
in
movsl
je
wbinvd
iret
cmpsl
stos
mov
test
insl
fs
mov
sub
pop
iret
and
or
mov
ljmp
arpl
add
xchg
inc
in
and
std
rolb
mov
lahf
loopne
insb
mov
jns
or
adc
fs
jae
mov
ds
ret
daa
and
and
dec
mov
mov
push
and
xchg
or
scas
jae
push
repnz
vmovsldup
xor
movsl
mov
inc
or
out
and
sbb
dec
mov
test
pop
mov
in
fisttps
popf
mov
sbb
sbb
insl
je
pop
xlat
pop
or
stc
jnp
subl
or
dec
clc
jnp
sub
sub
mov
push
cltd
pop
sbb
add
mov
in
sbb
add
xor
popa
ret
sub
je
mov
dec
xchg
dec
scas
ret
inc
sub
push
pusha
hlt
jp
insb
pop
jno
ljmp
mov
xor
inc
sub
sbb
jle
cmp
insl
in
mov
out
loop
sti
ficoml
mov
idivb
cmp
sub
add
push
or
js
ret
test
bound
sub
shl
cmp
jnp
xchg
jbe
lds
lret
mov
repnz
cs
scas
mov
jae
xchg
insb
cld
pop
fisubl
cwtl
xchg
out
mov
dec
mov
stos
in
fxch
jo
test
aam
test
jge
sbb
mov
inc
pop
sbb
adc
inc
push
fwait
pop
xor
xchg
les
roll
fmul
mov
ds
ret
test
movsl
xchg
xor
adcb
pop
mov
loop
fisttpll
mov
ss
push
fcoml
add
loopne
mov
mov
fsubrp
adc
int3
jbe
or
filds
jecxz
mov
adc
hlt
sbb
cli
cmpsb
pop
aam
and
pop
mov
fwait
lret
inc
sub
fisubrl
cmp
sbb
fnsave
xor
test
push
mov
cltd
xchg
test
mov
iret
scas
adcl
loope
bound
mov
mov
imul
cmpsl
fimuls
lods
cli
and
cmc
ficoms
cmp
jne
push
mov
pop
rcr
in
xchg
loopne
out
test
cltd
inc
fcmovbe
fdivl
or
add
mov
mov
cli
aam
mov
jne
dec
mov
movsb
sbb
push
js
jl
cli
cmp
ror
outsl
pop
xchg
subl
xchg
int
mov
sti
mov
roll
mov
popa
pop
inc
popf
push
lock
mov
pop
cmp
mov
aad
fsubs
popa
xor
jnp
jl
mov
aad
into
push
in
xor
ret
dec
ss
les
mov
cmp
test
dec
cmpsb
lret
xchg
push
outsb
or
xchg
dec
data16
xor
sbb
fists
mov
lods
mov
iret
repnz
xchg
pop
jg
aam
scas
cs
add
xor
test
mov
push
mov
in
stos
imull
jg
imul
hlt
or
bound
lock
stc
mov
loope
mov
cmc
cld
mov
stos
or
mov
jae
jo
mov
shlb
aaa
add
inc
or
push
add
sub
inc
xchg
xchg
outsb
or
jmp
rorb
adc
push
imull
or
mov
jb
xchg
mov
pop
mov
mov
jnp
mov
or
loopne
mov
sarb
fldenv
retw
popf
or
sti
sub
mov
jnp
lret
jno
movl
mov
arpl
ja
adc
popa
xor
inc
xor
data16
cmc
sub
into
ret
jmp
sub
adc
cs
incb
or
push
ljmp
popa
outsb
mov
push
mov
cltd
or
xchg
adc
cwtl
arpl
or
adc
inc
pop
test
push
pop
outsl
jl
sub
cmc
jne
xchg
dec
lcall
jg
inc
xchg
cmp
test
fistpll
mov
xor
divb
mov
and
frstpm(287
sahf
jne
into
lret
std
pusha
int
fimuls
stos
dec
inc
jge
scas
clc
push
sti
cwtl
loopne
mov
movsb
sar
aad
test
sub
in
xor
jnp
sub
icebp
ffree
cmc
nop
cli
movsb
push
test
imul
lret
cld
rol
xchg
mov
sti
movb
call
test
loope
sbb
into
cmc
adc
fs
xchg
enter
adc
mov
jno
ret
lds
fwait
pop
lds
or
out
imul
push
arpl
out
xchg
mov
dec
jb
xor
mov
add
mov
jno
and
jne
sbb
fwait
scas
aam
dec
jo
lcall
js
ret
xlat
pop
mov
mov
pop
xchg
ljmp
jb
push
in
imul
dec
bnd
das
addr16
dec
test
lds
mov
inc
xor
repnz
rcl
inc
xchg
addb
add
je
push
dec
dec
or
clc
call
enter
xor
test
loopne
out
mov
in
mov
test
lret
stc
xchg
xor
xor
mov
cmp
roll
cwtl
jp
add
icebp
add
ret
add
std
and
pop
xchg
pop
cmp
cwtl
xchg
ljmp
testb
lds
jp
xor
bound
push
inc
lret
mov
pop
pop
inc
insl
sbbb
or
js
push
pop
enter
pop
sub
lock
cltd
and
mov
test
stc
fmull
repnz
popf
cmp
mov
mov
or
cltd
lds
dec
addb
cmp
add
icebp
sub
mov
cmp
arpl
arpl
addr16
lods
aam
popf
sub
inc
fldl
cvtps2pd
fmuls
sub
push
mov
mov
jmp
adc
repz
add
test
inc
lock
mov
xchg
rorb
iret
mov
das
cmp
clc
push
jb
loopne
rorb
loop
sarl
pop
pop
cmp
sbb
dec
aam
dec
sub
xchg
rcrl
mov
notb
ds
or
xchg
adc
pop
push
mov
add
das
push
xchg
cmp
cmp
inc
jmp
mov
push
jl
and
rclb
hlt
lcall
mov
das
divl
roll
mov
stos
jne
fldt
pop
out
mov
push
ret
ror
test
aam
aaa
test
or
rcl
cmpsl
ret
daa
cmp
icebp
push
fucomip
push
ret
mov
out
in
and
push
test
es
aaa
jo
cmp
scas
push
pop
testl
enter
push
pop
mov
scas
push
sbb
aas
xor
in
fcomps
inc
mov
outsl
outsb
pop
xchg
jae
inc
or
jle
dec
pop
dec
and
adc
ja
dec
imul
and
mov
cmp
mov
and
xor
or
pop
imul
sub
out
andl
rorb
adc
sbb
jnp
mov
xchg
popf
push
std
jne
pop
mov
add
xor
loope
sub
loope
iret
popf
mov
or
pause
dec
jmp
jecxz
pop
jecxz
or
lods
int3
or
fiaddl
je
bound
pop
test
leave
sbb
cmp
test
push
xor
inc
lock
jecxz
jecxz
jno
mov
mov
xorb
sub
addr16
dec
sbb
push
push
xor
mov
inc
in
pushf
add
inc
inc
and
push
xorl
mov
xchg
out
je
jb
mov
fsubl
push
xchg
xchg
sbb
outsb
or
inc
test
clc
or
xchg
lret
rorl
fisttpl
mov
xchg
xchg
iret
jbe
bound
and
mov
cmc
or
cmc
ret
adc
pop
and
cli
sahf
and
mov
mov
and
aad
dec
in
ja
testl
enter
dec
loope
out
out
cld
hlt
mov
cmp
jne
test
add
add
shrl
jmp
jbe
inc
pop
repnz
pop
out
xor
fcmovnb
mov
push
loope
cmp
addl
mov
cmpsb
cld
lahf
fldlg2
pop
iret
test
arpl
rolb
loopne
pop
imul
iret
cwtl
or
repz
fcmovne
fistpll
outsb
push
and
sti
bound
jg
mov
stos
clc
fsubs
push
es
and
mov
out
cmp
loopne
sbb
adc
je
xchg
or
cli
ljmp
mov
jnp
addr16
loopne
jge
fs
jp
push
jb
out
out
xchg
enter
in
fimull
outsb
mov
mov
call
add
sub
popf
in
out
dec
pop
mov
xor
dec
in
inc
jle
mov
adcl
out
fsub
test
rcl
sbb
sti
popa
add
add
cmp
jge
int3
sbb
jp
out
ret
or
xor
jmp
mov
in
scas
fadds
stos
add
clc
inc
add
les
fadds
pop
lea
outsb
in
jb
xchg
mov
dec
xor
fnsetpm(287
xor
fmul
mov
out
mov
lock
cmp
inc
outsl
addr16
cmp
add
bound
ljmp
and
pop
das
jno
iret
jb
jl
inc
pop
pop
xchg
mov
or
sbb
dec
mov
or
push
jo
adcb
add
imul
faddl
or
xchg
fwait
lret
fwait
and
aad
stos
add
add
mov
sbb
aad
dec
imul
out
test
popl
add
mov
mov
dec
std
loop
inc
xchg
sub
cld
ljmp
repz
inc
fnstcw
mov
lahf
inc
cmp
in
push
adcl
xor
fidivs
hlt
dec
stos
pop
sbb
jns
fcomps
hlt
jno
or
push
mov
dec
jecxz
adc
leave
ficompl
call
shll
cli
push
cmp
inc
cltd
pop
iret
shl
insl
test
xchg
xor
ja
mov
adc
jg
adc
adc
jo
or
outsb
lods
xchg
push
jge
and
dec
mov
push
lret
fstpt
dec
mov
or
loope
adc
xchg
sbb
mov
cmp
xchg
ljmp
fldlg2
inc
imul
lret
push
add
inc
in
or
lahf
aad
xchg
hlt
inc
aam
add
daa
enter
lcall
dec
int3
sbb
call
jo
loope
negl
loope
negb
pop
vpmacssdd
and
outsb
sub
shll
and
push
xchg
sub
sub
rcr
mov
lret
lahf
add
jbe
adc
in
in
stos
xor
and
xor
pop
sub
dec
mov
jp
popf
adc
push
shl
push
push
add
cmp
xchg
leave
ja
test
out
orl
and
nop
repnz
clc
sahf
shl
add
inc
into
jo
adc
fdivp
adc
cmp
adc
pop
pop
or
mov
push
arpl
out
mov
sbbl
sbb
or
subb
shl
or
and
fdivs
out
daa
cmp
or
dec
cmp
or
insl
gs
inc
movsl
out
pop
outsb
or
mov
std
popf
in
sbb
mov
test
xor
outsb
jnp
or
cmpl
ret
enter
iret
push
mov
sahf
cmp
fcom
das
push
call
xor
iret
enter
adc
stos
orb
mov
inc
enter
pop
ja
enter
xchg
jl
mov
lahf
hlt
jg
cmpsb
mov
stos
jg
sbb
lds
cmp
or
and
sub
cltd
push
and
mov
and
dec
lret
outsl
mov
push
xchg
sbb
arpl
cltd
mov
stos
push
out
outsl
xchg
pushf
jle
or
out
add
adc
nop
test
shl
ja
loopne
xor
fwait
or
and
cwtl
push
repnz
decb
and
lods
pop
mov
das
jecxz
push
arpl
addr16
nop
cmp
mov
lods
mov
icebp
in
mov
pop
ds
ret
int3
pop
and
cmp
setge
clc
adc
jle
pushf
cltd
push
add
std
push
in
leave
ror
push
sahf
leave
or
jae
add
int3
mov
push
mov
xchg
push
sub
loope
aas
dec
pop
test
xor
mov
and
xlat
xchg
test
hlt
rcl
dec
popa
jp
push
jg
push
enter
cmc
pop
mov
repnz
out
jecxz
xchg
fcomi
sub
mov
ss
out
popa
inc
bound
jle
pop
sbb
hlt
rol
mov
pop
xlat
into
and
and
jns
test
jp
arpl
adc
fisttpll
dec
mov
push
xchg
sbb
fs
and
mov
cli
lock
cltd
cmp
push
enter
push
lret
rcll
jp
xchg
dec
cmp
mov
jne
das
sbb
mov
mov
lods
mov
leave
add
xchg
mov
fistpll
xlat
jb
add
loop
and
jno
test
adc
fbstp
xchg
scas
jmp
aas
cmp
daa
add
and
fsts
jle
rep
or
xor
cmc
pushf
push
popa
fcompl
out
fs
xchg
adc
pop
sub
loope
bound
xchg
sbb
inc
pusha
adc
mov
inc
sbb
pop
fisttpll
lret
or
idivb
push
in
cmpsb
je
lret
xlat
sub
aad
xlat
test
dec
add
dec
leave
dec
dec
mov
xchg
stc
into
mov
cltd
cltd
hlt
mov
push
and
rcll
shll
cli
pop
scas
arpl
inc
jp
repz
mov
inc
ret
popa
pop
push
int3
in
jle
xchg
arpl
hlt
je,pn
xchg
sub
jnp,pt
jae
adc
xchg
mov
sbb
mov
and
mov
mov
mov
mov
inc
mov
movsb
subb
jae
sbb
sarb
and
mov
arpl
shlb
cmp
and
mov
nop
fstps
dec
xor
xor
test
jo
xchg
imul
lahf
addr16
cmp
lods
xchg
pop
arpl
in
sbb
ljmp
push
pop
push
divb
inc
inc
push
ret
es
mov
scas
fwait
dec
es
or
mov
cmp
ja
pop
push
adc
test
addl
jo
push
mov
cmp
aaa
roll
xor
push
ret
jmp
adc
adc
and
shld
out
adc
inc
into
jge
into
pop
inc
ret
dec
pop
je
icebp
pop
push
mov
pop
mov
mov
inc
push
test
rolb
cmp
or
xchg
stc
dec
scas
xor
ffree
ror
cltd
outsb
js
ja
sub
int
clc
xchg
adc
dec
dec
scas
cmp
fstps
mov
outsb
aaa
push
sub
int3
add
add
into
add
jnp
sahf
dec
fcmovb
out
dec
enter
cmp
mov
fwait
sbb
xchg
adc
lcall
scas
and
or
sub
rorl
pop
test
stc
xchg
sbb
enter
adc
push
add
xchg
stos
sbb
jge
xchg
lcall
mov
mov
mov
push
rolb
mov
pusha
imul
loope
push
dec
xor
or
push
adc
int
in
push
add
xor
mov
inc
cmp
xor
rclb
cltd
popa
mov
ds
sbb
mov
xchg
std
sbb
or
mov
xor
mov
sbbb
out
sub
or
xor
xchg
ficoms
cmp
cmp
daa
pop
in
xor
xor
nop
dec
std
pop
xor
out
sub
lret
jb
sahf
push
push
or
popa
adc
adc
fsubrl
out
test
pushf
fists
rol
mov
pop
fnsave
pop
lret
cmp
test
add
movsb
addr16
and
loop
sbb
dec
xchg
cmp
dec
xchg
mov
jp
in
sub
pop
movsl
pusha
and
cwtl
scas
sbb
or
hlt
xchg
fwait
in
jne
ss
push
lock
cmc
outsb
insl
or
jmp
fnsave
xor
xchg
ficoml
aaa
adc
int
out
and
push
sbb
pusha
jge
mov
sub
fbstp
or
jg
outsl
dec
jmp
mov
sub
xchg
xor
xor
xchg
fdivl
and
mov
dec
mov
out
test
xchg
hlt
inc
imul
mov
lret
sbb
xchg
or
xchg
xor
clc
dec
adc
lea
loopne
pop
dec
das
outsl
nop
ljmp
or
xchg
sti
dec
popf
fiaddl
fst
in
imulb
add
iret
or
xor
mov
sub
push
xchg
dec
fidivrs
outsb
sub
and
aam
fcmovnb
sbb
shlb
movsl
inc
push
rcrb
lahf
repnz
push
xor
insl
rcl
cli
and
add
cli
xor
xchg
pop
std
lahf
mov
sbb
mov
imul
jno
call
push
mov
xchg
imul
fisubrl
and
imul
sbb
mov
loopne
jg
arpl
sahf
imul
inc
std
aaa
dec
mov
std
cmpsl
or
movsl
mov
cmp
rorb
mov
sbb
xor
push
push
xchg
xchg
lds
jmp
inc
mov
dec
xchg
loopne
scas
dec
fistl
out
stos
fldenv
add
mov
jnp
and
or
sub
fisttpl
sub
sbb
pushf
pop
mov
and
mov
or
test
xchg
xchg
sbb
sub
or
sub
or
mov
in
pop
or
cmp
sub
aaa
mov
fadds
mov
icebp
fsubrl
repz
jmp
xor
shll
jb
mov
scas
icebp
add
or
sahf
mov
jg
pop
je
or
dec
iret
pop
jb
in
outsb
mov
fistl
pop
inc
push
fsub
popa
sub
stos
notb
incb
popa
dec
adc
int3
add
outsl
jle
and
xchg
pop
lock
lcall
sahf
mov
movsl
jmp
xchg
adc
sbb
xlat
pushf
and
mov
pop
sbb
lret
mov
sbb
xlat
push
aas
lock
mov
lods
ljmp
pusha
aam
in
dec
inc
jmp
add
je
inc
inc
in
pop
lods
dec
and
cld
fsubrs
fildl
loopne
into
lret
lret
icebp
pop
enter
lret
and
push
sub
jle
xor
jl
add
cmpsl
pop
and
mov
iret
add
stc
mov
push
hlt
mov
out
sbb
ss
add
sub
xor
mov
enter
out
shll
xchg
mov
pusha
mov
pop
fildl
cmp
jae
mov
cltd
cmp
test
out
dec
xchg
inc
sub
stos
jmp
insb
aam
add
jns
xchg
pusha
dec
adc
or
lock
cld
jg
ja
push
xor
xor
inc
cs
pop
or
sub
jnp
faddl
dec
inc
xor
movsb
pop
test
dec
push
sbb
insl
or
and
mov
movsl
clc
jne
pop
cs
ja
mov
xor
sbb
int
adc
add
sub
pusha
pop
loopne
pop
lret
lods
or
imul
ds
fdivrp
fwait
push
xchg
add
outsl
pusha
sub
fprem
fdiv
test
loop
pop
popa
scas
sub
aam
add
inc
outsl
jp
outsl
imul
aad
add
cmp
popa
call
mov
test
or
add
adc
add
fsub
and
rcr
pop
aas
or
xchg
push
push
cmp
mov
mov
lret
mov
and
mov
adc
mov
test
pop
jno
xchg
rcrb
sbb
rclb
inc
xor
mov
lods
lods
sbb
adc
int3
data16
mov
ret
mov
xchg
mov
int3
cwtl
sub
ret
outsl
shll
sbb
sti
test
dec
dec
mov
stos
lea
xchg
mov
fisubrl
adc
push
mov
inc
adc
icebp
iret
lahf
aaa
shl
dec
xor
pop
cmpsl
mov
add
sub
sub
dec
jb
mov
ss
sub
pop
lods
mov
nop
mov
enter
shlb
aas
xchg
test
lods
shr
dec
notb
jp
push
add
stos
js
jb
dec
mov
dec
jg
cltd
imul
xchg
loope
in
aad
or
jne
data16
pop
in
push
xchg
aas
mov
cmp
or
or
repnz
popf
imul
ret
xchg
jmp
sti
xchg
ds
mov
or
loope
mov
rorb
test
lcall
rcr
imul
jne
push
xor
and
fidivrs
add
insb
mov
out
out
insl
call
sti
pusha
mov
lret
popl
fimull
xchg
dec
popf
add
out
or
push
ljmp
fistpll
jno
mov
inc
cmp
mov
pop
pop
test
and
test
pop
lea
xchg
int
loope
lods
mov
pop
adc
cs
ja
pop
jb
xor
cmp
push
push
jns
scas
nop
xchg
xchg
mov
push
andl
or
fdivrs
xor
pop
pop
pushl
clc
pop
cltd
shlb
xor
jle
cli
pushf
in
movsb
shlb
sbb
or
call
test
push
adc
jge
insl
xlat
pop
ret
sbb
sbb
push
popa
into
iret
push
push
les
xor
test
mov
loopne
push
mov
add
adc
adc
lcall
aaa
jle
inc
lahf
adc
fdivrp
in
dec
jle
ret
popa
xor
cmp
test
stc
arpl
push
rolb
cld
pop
cmp
or
and
lcall
cmp
cmp
cmp
sbb
mulb
sbb
mov
dec
dec
ret
dec
shll
inc
dec
jae
or
int3
dec
pop
xor
cmp
or
inc
or
js
jb
imul
add
loop
jg
ds
mov
jne
inc
lret
fistl
enter
cmp
fistps
iret
sub
lret
pop
jp
addr16
sbbl
js
pop
xor
int
test
sub
lahf
or
movsl
arpl
push
subl
fwait
jge
adc
xchg
cmp
push
pushf
adc
xchg
pop
lahf
loope
mov
push
les
rcl
adc
mov
cmp
imul
dec
mov
push
mov
jl
mov
push
pop
add
adc
fcmovb
andl
or
js
xchg
mov
and
lds
jp
dec
test
inc
fnsave
mul
and
out
cmpsb
test
sbbb
cmpsl
int3
insb
subl
push
test
push
mov
adcb
jge
and
jge
add
inc
and
push
call
lea
mov
in
push
clc
pushf
push
fnstsw
idivl
pop
dec
xchg
int
mov
shrb
int
ret
push
xor
popf
mov
push
imul
jnp
pop
add
int3
pushl
scas
inc
das
add
nop
dec
adc
xchg
test
inc
gs
insl
push
lea
fisttpl
in
adc
pop
pop
mov
cmpsb
stc
sysenter
add
icebp
pop
push
out
in
push
ljmp
push
pop
inc
jae
mov
dec
mov
dec
or
js
sbb
mov
fs
push
adc
filds
dec
test
xchg
sti
dec
mov
pop
mov
and
mov
rorl
cwtl
pop
pop
sub
jle
mov
xchg
inc
shll
jecxz
xchg
dec
or
lods
inc
shlb
cmp
adc
and
into
repz
or
popa
and
fistpl
cs
pop
cwtl
fimull
mov
stos
lds
gs
mov
data16
movsb
jmp
and
jecxz
adc
xchg
imul
dec
loope
lea
mov
xchg
and
dec
mov
notl
jo
in
mov
push
adc
adc
shll
xchg
xor
fsubr
and
pop
dec
cs
sahf
lcall
fistpl
inc
xchg
in
pusha
clflush
inc
lock
cltd
cltd
hlt
sahf
mov
mov
sub
mov
sub
arpl
out
dec
lret
daa
cmp
inc
es
pop
iret
xor
cmpsb
ljmp
mov
in
ret
xor
push
sbb
in
int
sub
pushf
pmaddwd
jo
mov
push
push
xor
icebp
mov
fists
push
leave
imul
std
ljmp
ds
dec
add
xor
fnsave
adc
aaa
mov
movsb
shrl
repnz
sbb
push
sub
inc
aaa
adc
popl
and
push
dec
mov
cmp
sti
popf
stos
imul
int3
cmp
and
dec
push
lods
sahf
push
dec
and
movsb
lods
repz
js
push
decb
test
int3
mov
call
jns
push
adc
push
imulb
imul
sbb
test
pop
out
rorb
push
lret
fists
int3
lret
insb
in
and
mov
xchg
xchg
push
sbb
mov
mov
and
test
lds
test
mov
mov
or
movsb
xor
ja
gs
or
push
incl
fsubl
rcr
and
jno
cmp
repnz
mov
lretw
enter
mov
cmp
idivb
fidivs
fldenv
mov
int3
dec
cmp
mov
push
aaa
jmp
or
cwtl
sub
lcall
dec
int
jge
fidivrs
jp
xchg
repnz
mov
xchg
fcompl
cmp
data16
push
mov
jg
movsb
loopne
mull
sub
sub
inc
inc
dec
das
mov
sbbb
cmpl
in
mov
subb
dec
jecxz
pusha
inc
pop
push
xchg
sub
fstp
xchg
fildll
shll
add
jecxz
popf
movsb
inc
mov
daa
shrb
jp
fwait
shl
and
add
mov
or
sub
out
sbb
lret
pop
shrl
adc
sarl
inc
or
cmp
call
scas
and
lock
daa
stos
sahf
mov
add
mov
jnp
mov
into
xchg
cmp
incb
lds
cli
lock
mov
sub
push
and
jg
cmp
sub
jns
pop
nop
xchg
cmpsl
rclb
test
test
ljmp
leave
adc
adc
les
fs
inc
jmp
jge
or
cmp
mov
stos
push
insb
mov
std
push
push
sarb
push
loope
pop
push
inc
sub
cmpl
pop
out
add
pop
adc
popf
arpl
orb
cmc
sahf
push
mov
sahf
ss
out
push
add
mov
sbb
adc
push
jno
mov
enter
push
mov
ds
sti
pop
mull
pop
ret
movsl
or
repnz
inc
outsl
xor
mov
or
scas
fs
shlb
cmp
and
sbb
lcall
sub
or
xchg
nop
dec
cltd
sub
and
and
mov
adc
ljmp
add
addr16
mov
xchg
stc
mov
insb
push
push
jmp
movsl
add
cld
or
std
sahf
sbb
xor
xorl
adc
jecxz
idivb
rcrb
invd
flds
push
stos
inc
testb
les
ds
mov
lock
xchg
adc
jp
or
cs
iret
cs
popa
aad
sub
movsl
js
pop
pop
adc
xor
in
xchg
imul
mov
adc
gs
adc
mov
les
push
test
dec
repnz
sarb
mov
test
jl
mov
cmp
jecxz
or
std
fcmovnbe
xchg
movsl
add
push
mov
aam
imul
jmp
inc
lock
testb
xchg
push
pop
cwtl
mov
cltd
mov
xchg
and
out
iret
jmp
ret
or
sub
cmp
add
out
push
pop
jl
loope
push
jmp
sti
ud2
hlt
aaa
mov
cld
call
hlt
pop
sub
sub
int3
add
testb
outsb
in
xor
mov
xor
xchg
jbe
rorl
leave
cld
xchg
lret
mov
jge
fsts
pop
mov
mov
movsb
push
neg
inc
push
nop
or
mov
jns
scas
test
sub
mov
cmp
cmc
mov
inc
shll
mov
es
mov
nop
aad
shlb
shrl
push
or
jmp
test
das
mov
imul
loope
mov
lret
pop
jb
xor
xchg
out
add
mov
sbb
or
jl
scas
or
sbb
cwtl
pusha
out
int
cmc
jns
mov
outsl
js
xor
lcall
fcomps
mov
fisttps
sub
imul
dec
mov
push
jne
adc
xchg
push
in
loopne
add
inc
pop
push
test
ljmp
xchg
or
out
jecxz
xchg
add
inc
scas
bound
mov
cs
data16
jp
push
test
mov
lcall
inc
stos
loope
pusha
call
xchg
ss
adc
pusha
adc
std
imul
jne
mov
out
insl
insl
pop
push
mov
or
mov
lahf
ret
lahf
sbb
mov
add
sub
xor
cmp
or
inc
mov
add
mov
movsl
fdivrl
mov
dec
pop
call
es
dec
mov
jne
sub
sub
mov
daa
jae
xor
fcmovne
ds
xor
rcrl
stos
cmpsb
xor
pop
lea
sti
inc
mov
pop
lret
pushf
mov
inc
bnd
inc
addr16
cltd
out
xchg
repz
dec
jno
mov
xor
mov
jmp
add
daa
test
test
test
add
cs
cmovle
inc
sbb
cltd
std
pop
jae
fwait
dec
cmp
ret
stos
lea
cwtd
push
sub
sbb
cmp
dec
sub
xchg
and
pop
enter
mov
imul
mov
dec
xor
adc
adc
scas
xor
mov
and
lds
lds
in
jns
mulb
js
mov
mov
ss
scas
pop
jb
jecxz
clc
cmpsl
lock
mov
or
mov
pop
outsb
std
mov
or
mov
es
xlat
mov
es
mov
xor
add
adc
test
rol
mov
jno
pop
add
pushf
cmp
aad
push
call
xchg
out
pop
pop
sbb
cmp
push
push
mov
mov
int
lods
jl
loope
out
subl
dec
pop
ds
je
push
pop
std
aaa
cmp
js
jg
ret
mov
mov
or
fdivl
out
pop
pop
lret
dec
jmp
mov
gs
ret
lds
shl
jp
aas
dec
mov
dec
mov
pop
aaa
or
dec
sbb
inc
ss
ljmp
mov
adc
sub
xchg
test
mov
inc
push
jae
call
shlb
fldt
sbb
pop
dec
mov
int3
repnz
mov
arpl
mov
test
mov
scas
xor
dec
lock
add
mov
aaa
call
int3
ljmp
in
pop
std
ljmp
dec
jno,pt
sbb
cltd
ss
test
sbb
add
sahf
add
jns
ss
mov
mov
mov
and
into
xor
jecxz
jbe
xor
dec
mov
cmpsl
pop
adc
dec
add
js
mov
mov
sbb
xor
dec
aas
cwtl
hlt
or
jmp
leave
dec
cwtl
fsubrs
popa
cmpsb
mov
jp
or
sub
loopew
pop
push
pop
add
cmc
int
outsb
shrb
out
aas
arpl
ficomps
sbb
add
dec
jo
out
mov
rclb
pop
xor
cmp
mov
stos
and
adc
pop
xchg
ds
pusha
mov
mov
subb
in
shlb
sbb
push
outsl
push
pop
push
out
scas
and
sbb
add
xorl
pushf
jle
inc
jge
fmul
xor
insb
sub
fcoms
test
mov
fcoms
out
push
stos
pop
dec
or
arpl
scas
ret
lret
push
mov
and
sahf
daa
gs
xor
test
and
out
mov
in
cmp
fdivrl
cmpb
and
add
nop
push
mov
or
adc
sbb
aaa
mov
mov
pop
stos
mov
lahf
fisubl
ret
xchg
jns
xchg
lret
jno
and
out
shlb
cs
adc
movsl
fucomi
insl
jmp
lret
jne
lods
leave
lea
data16
imul
xor
nop
sub
loope
mov
mov
sbb
jbe
xor
sbb
jmp
ss
lcall
nop
cmpsl
or
inc
dec
fsubr
or
mov
mov
and
rorl
rcr
pop
dec
in
jo
aaa
shrl
push
out
addr16
js
cs
lcall
nop
sub
aas
test
mov
jmp
xchg
cmc
mov
fidivrl
test
test
add
addb
lock
adc
into
sbb
sahf
out
jecxz
push
lret
adc
cltd
negl
or
lds
xchg
and
sar
mov
daa
push
out
aam
in
and
loop
mov
cs
mov
sub
adc
iret
stos
push
xchg
dec
dec
call
movsl
data16
mov
add
pop
or
xchg
fldl
outsb
jmp
xor
push
jl
loop
daa
int3
push
fsubrs
mov
mov
dec
je
dec
sti
in
aad
cmp
jae
sub
inc
lods
out
push
sbb
not
adc
mov
lcall
jmp
out
cs
insb
cmpsl
mov
pop
jmp
into
outsb
fiadds
mov
mov
ljmp
lods
push
cmc
imul
push
and
leave
les
xor
mov
mov
aad
mov
pop
push
and
xor
sarl
or
js
lock
lea
hlt
and
lcall
aaa
arpl
pusha
adc
ret
push
in
pop
pop
push
adc
cmp
jae
lock
push
mov
push
aas
push
add
cmp
mov
jb
ljmp
popa
or
cs
inc
jmp
out
xor
sarb
push
and
pop
or
js
xor
cli
xchg
add
cmp
lret
mov
mov
mov
icebp
mov
dec
mov
mov
leave
xchg
mov
add
sub
shll
pop
stc
or
mov
std
mov
mov
rcr
xor
xchg
das
mov
sub
sahf
inc
ficoml
outsb
pop
sbb
dec
push
cs
sbb
xor
pop
inc
xor
dec
loopne
mov
cld
and
jp
mov
jge
hlt
push
mov
mov
repnz
dec
jnp
stos
pop
imul
push
dec
pop
push
repz
test
sti
dec
stos
lods
adc
das
pop
mov
inc
pushf
loopne
push
cmc
jo
push
btr
fisubrs
push
xor
movsl
movsl
shrl
ja
aad
mov
insb
roll
scas
or
loope
adc
stos
adc
add
mov
in
pop
test
inc
mov
adc
pop
int3
cmp
push
out
jl
cmpb
push
and
cmp
jle
jmp
loope
or
mov
sbb
fcomip
test
xchg
xchg
mov
andb
lea
cmc
mull
cmp
xorb
enter
add
jo
and
scas
out
xchg
mov
inc
xchg
xchg
ret
adc
repnz
jmp
inc
jo
cmp
cmp
repz
add
xor
test
xchg
insl
pop
dec
sti
mov
aaa
pushf
mov
sti
inc
lret
or
mov
add
push
out
out
jecxz
mov
mov
mov
cmp
jecxz
scas
adc
adc
stos
xchg
in
aaa
push
dec
sarl
mov
movlps
out
inc
jmp
and
jle
mov
mov
mov
mov
iret
jmp
adc
inc
pushf
cld
mov
push
cli
push
jle
testb
fsubp
ficomps
xchg
filds
dec
push
lds
dec
xchg
push
xor
jns
push
rolb
sub
cld
into
dec
xor
and
lea
cwtl
push
push
int
scas
movsl
mov
sub
jae
pushf
mov
jl
pop
mov
insb
inc
ror
inc
inc
test
jmp
arpl
jns
outsb
push
fwait
dec
pop
jnp
rclb
mulb
sbb
popl
ror
les
mov
js
push
lock
out
xor
jl
xor
mov
les
sub
cmpsl
pop
daa
cld
add
fs
shufps
pop
pop
shrl
push
jne
jecxz
fcomps
subb
push
test
xchg
xor
jg
pop
xchg
push
repz
stc
mov
mov
loopne
mov
sbb
jae
inc
mov
mov
push
add
jo
dec
je
movsb
inc
iret
mov
insl
xor
push
sub
cld
push
dec
mov
pop
xor
xor
ss
mov
add
jb
hlt
pop
loopne
adc
adc
mov
push
dec
rclb
es
pop
imul
pop
shll
cmp
fadd
xor
outsl
inc
mov
xor
out
icebp
xchg
mov
inc
lock
repnz
fwait
insl
push
lods
loope
aam
fisubl
loope
sbb
mov
into
cmpsl
cmp
sbb
rcll
inc
xor
or
orb
xor
mov
popf
jle
mov
sub
fwait
bound
mov
jge
incb
xor
ret
loopne
out
xchg
push
mov
bound
fstpt
repnz
aad
sub
mov
dec
sbb
jb
mov
test
xchg
outsb
inc
enter
and
addb
stc
push
xlat
gs
mov
data16
cmpsb
jge
push
or
pop
imul
scas
clc
cmp
pusha
jae
les
rcll
xchg
es
in
icebp
ljmp
sbb
in
div
cmp
xchg
adc
rclb
bound
xor
sbbb
stos
mov
mov
fcmovb
and
jnp
les
xchg
pop
aam
rcll
push
cmpsb
push
out
jmp
add
mov
push
cmp
jae
mov
subb
push
cld
sub
add
jb
icebp
and
sbb
filds
outsb
movsb
movsl
andb
push
cmpsb
cmp
mov
adc
mov
fstps
ja
fisubl
add
std
lahf
or
rolb
das
pop
push
pushf
pusha
inc
dec
xor
push
inc
stos
mov
jnp
dec
mov
inc
lretw
aaa
test
and
loopne
lods
out
out
inc
mov
jp
ja
jae
leave
hlt
add
nop
repz
mov
xlat
notl
sbb
js
dec
mov
xchg
dec
ja
call
in
xchg
loopne
dec
test
js
aad
pusha
fistl
loop
inc
pop
xchg
sub
fistpl
or
xor
ret
icebp
enter
aas
or
mov
pop
ret
icebp
decb
xchg
bound
mov
push
andb
xor
cwtl
enter
addr16
rcr
shlb
cmp
cmp
out
mov
ficompl
jmp
scas
inc
mov
pop
arpl
add
popa
mov
ds
int
mov
pmulhw
add
cs
inc
push
dec
mov
ds
cmc
movsl
push
lock
inc
aam
loope
add
cmovns
cmp
jmp
lahf
stos
hlt
data16
mov
lock
push
arpl
mov
dec
cmp
fs
inc
jo
loop
or
pop
sbb
out
mov
xor
lea
jnp,pn
add
aaa
sbb
dec
pop
pop
jae
out
xlat
add
loopne
aad
ja
icebp
pop
mov
add
pop
mov
hlt
push
jae
sub
subb
idivb
std
and
pop
movsb
jl
rcll
sbb
inc
pop
inc
and
mov
sbb
cmc
call
call
mov
mov
iret
in
xchg
daa
sbb
or
ja
or
mov
test
imul
xchg
jg
aad
push
arpl
mov
sub
aaa
pop
sub
add
fidivs
sbb
test
cmpsl
pop
add
movsb
jb
mov
mov
ljmp
mov
push
mov
adc
ljmp
cmc
mov
test
xlat
test
adc
clc
inc
shll
xor
cltd
or
ljmp
div
sahf
and
xchg
popf
jnp
repnz
push
pop
mov
mov
fistps
insb
outsl
or
cmp
adc
mov
insb
mov
aaa
loopne
jle
mov
xor
xor
jbe
leave
sbb
add
jg
cmc
push
or
jno
cmc
cmpsb
jge
repnz
imul
adc
aad
enter
mov
xor
sbb
push
dec
push
repnz
movsb
and
cmp
mov
dec
out
fisubl
lret
test
dec
inc
add
fldln2
push
adc
jecxz
arpl
inc
subl
sub
and
xchg
aaa
mov
jg
dec
ret
cmp
outsl
pop
push
lods
sub
fs
lret
mov
add
push
add
mov
sbb
mov
andl
iret
dec
pop
js
jbe
jl
push
xchg
addl
loop
test
jl
loope
xorb
insl
roll
lcall
adc
adcl
call
rclb
fistps
xchg
insb
and
ljmp
adc
push
in
bnd
aas
out
and
mov
push
push
out
mov
sub
into
ret
pop
push
adc
call
das
scas
sbb
mov
data16
daa
inc
push
je
xchg
je
push
inc
xor
mov
xor
inc
xorb
xchg
cwtl
jno
int
pop
adc
sbb
rol
mov
pop
sub
stos
mov
mov
ret
outsb
dec
push
rcr
inc
stos
cmp
imul
cli
data16
dec
loope
jmp
sub
sub
push
sub
jle
das
shl
call
adc
out
mov
add
pop
sbb
cmp
and
jl
je
ljmp
xchg
sbb
push
add
popa
pop
and
push
sbb
mov
lock
add
je
nop
lds
out
push
or
and
adc
aas
leave
jbe
pop
mov
add
or
sbb
idivl
sbb
data16
int
xor
dec
jbe
mov
das
orb
mov
sbb
into
fstps
inc
dec
js
imul
out
and
sub
xor
repz
and
ret
mov
mov
jmp
push
or
ret
pusha
jl
sahf
daa
mov
xor
into
and
mov
add
imul
mov
in
mov
mov
xlat
xchg
lea
mov
scas
in
ret
jo
sahf
and
icebp
sbb
cmpsb
jae
inc
jl
dec
jmp
inc
jp
and
bound
rclb
daa
notb
xchg
mov
push
or
repnz
jg
push
add
inc
sbb
inc
push
pop
or
xchg
stos
sahf
stos
lcall
nop
aam
out
lahf
or
leave
pop
mov
btr
mov
sub
bound
sti
jmp
push
sbb
scas
fstpt
stos
push
ja
pop
lcall
mov
iret
popl
adc
mov
jb
jnp
sbb
adc
enter
pushf
inc
inc
sbb
stos
sub
dec
add
jle
lahf
repnz
mov
jae
ljmp
xchg
cli
jp
call
jp
clc
or
mov
aam
pop
jb
cli
icebp
fwait
sub
mull
cmc
lods
inc
jecxz
adc
daa
cltd
enter
lea
ss
adc
sarl
fdivrl
es
stc
pusha
dec
scas
xchg
cltd
add
mov
js
cwtl
jns
push
fsts
inc
pop
jl
and
rorb
mov
popf
jne
jg
adcl
jnp
mov
inc
cld
sub
je
in
and
int3
and
add
and
bnd
push
or
or
xor
pop
xor
lock
adc
ret
add
leave
cmp
push
mov
in
pop
cmp
pop
popf
xchg
mov
adc
fiaddl
and
mov
pop
cltd
xchg
mov
xchg
cmp
sbb
mov
mov
add
mov
xchg
data16
dec
add
fbstp
dec
mov
enter
jge
and
mov
das
pop
xchg
adc
leave
stos
loopne
rclb
nop
repnz
fsts
xor
int
and
mov
xchg
fstl
mov
xor
int3
sub
mov
mov
xor
adc
pmaddwd
insb
cli
xchg
scas
jl
fldt
adc
sbb
mov
jne
mov
movsl
rclb
lock
xchg
jecxz
sarb
int
inc
xchg
subb
mov
mov
nop
scas
push
outsl
fwait
cmp
and
pop
loop
not
stos
lds
stos
mov
int3
inc
imul
sbb
fidivs
ss
pop
adc
jo
jo
stc
loopne
push
out
inc
and
cld
je
test
and
rolb
jae
mov
loopne
lea
dec
mov
jo
fnstsw
push
ret
mov
shll
sub
nop
movsb
icebp
adc
lods
dec
fdivrl
cs
dec
cld
std
pop
cld
jns
adc
cs
dec
sbb
jae
xchg
mov
mov
inc
sarb
sbb
fwait
loop
cmp
mov
pop
mov
push
arpl
add
and
mov
addps
dec
push
in
add
std
enter
cwtl
jo
fstps
out
or
es
mov
pop
aas
push
mov
dec
cmp
insl
jae
sarl
xor
jb
mov
jecxz
je
add
es
mov
cli
repz
cmp
and
push
dec
inc
sar
je
dec
in
xor
insb
and
cmp
loope
popf
bound
mov
inc
add
mov
add
xlat
push
dec
dec
aad
mov
orl
push
xor
push
sbb
push
jge
bound
out
adc
negl
out
inc
cmpsb
pushf
into
mov
aam
xchg
loope
enter
mov
iret
clc
imul
dec
cmpsl
fucom
jle
and
cmp
fsubl
xchg
and
outsl
xchg
or
cmc
les
push
cmp
xchg
mov
jns
or
rcrl
dec
mov
sub
mov
sbb
mov
and
loop
repz
mov
xchg
out
mov
inc
addr16
popf
mov
cmp
lods
push
int3
pop
loopne
adc
mov
xor
test
mov
dec
push
jp
mov
cmp
fwait
cmp
sub
adc
or
dec
lock
pop
xor
mov
lods
es
sub
gs
in
enter
xchg
jnp
pop
fdivl
jae
sub
lcall
mov
int3
mov
pop
sahf
push
bound
xchg
jg
cmp
jnp
je
push
in
pop
bound
sbb
jno
call
mov
movd
out
mov
xchg
fdivl
dec
mov
push
jle
es
repz
add
int
gs
jne
stc
lcall
push
stos
cmp
out
sub
xor
adc
mov
mov
jb
inc
outsl
mov
fsubrp
enter
scas
mov
push
cmp
push
test
bts
adc
push
jno
xor
ss
pop
ret
and
mov
sarb
out
sbb
push
xor
push
cmp
xor
in
aaa
inc
push
add
push
dec
mov
xor
arpl
and
push
jbe
xchg
call
dec
add
sbb
dec
lea
jo
add
dec
inc
lea
sbb
outsl
adc
mov
into
rorb
xlat
mov
loop
jnp
pop
push
cmp
shlb
pop
mov
int
mov
pop
inc
imul
fldcw
push
push
cwtl
in
daa
int3
xor
inc
fptan
out
add
ret
or
rcl
cmp
mov
mov
xchg
rol
lret
arpl
sub
mov
push
sbb
sub
daa
mov
fdivs
sbb
lock
dec
xchg
mov
outsb
popl
pop
pop
into
sahf
mov
cli
adc
jo
mov
xor
jg
in
jle
mov
repz
int3
and
inc
mov
inc
dec
jb
jb
ror
add
dec
orl
cltd
loopne
mov
insl
dec
and
sub
popf
scas
pushf
arpl
lds
lods
push
pop
xchg
or
sbb
lahf
pop
push
mov
mov
arpl
mov
xchg
pop
jecxz
xor
pop
roll
gs
sub
dec
add
mov
jne
mov
mov
sub
push
adc
push
mov
fsubp
jns
inc
jo
and
adc
dec
push
or
fists
xchg
inc
leave
arpl
sbb
cmp
pavgw
mov
pop
in
xchg
cmp
and
cmc
sti
aad
mov
mov
insl
or
loopne
push
add
dec
into
lret
inc
fisttpll
sbb
pop
xlat
test
sbb
fsubp
add
xchg
roll
dec
pop
ffreep
sub
dec
leave
into
or
push
inc
xchg
and
push
push
jns
adc
popa
dec
incb
push
enter
xchg
xchg
xchg
or
inc
mov
scas
sub
out
or
shll
cmp
gs
xor
jle
aaa
loop
adc
sub
inc
xor
pop
mov
ret
pop
out
les
add
ret
sbb
or
add
mov
push
mov
push
or
gs
ret
arpl
sub
dec
pop
sbb
into
lret
inc
gs
into
mov
and
jne
mov
sub
jp
pusha
dec
xchg
imulb
das
test
mov
aaa
add
repnz
pop
cli
mov
in
adcl
pop
mov
push
cmp
pushf
mov
outsb
and
aam
cld
in
jae
add
jmp
fdivs
mov
jno
cli
jp
mov
xchg
cmpsl
daa
shll
and
pop
xor
pusha
icebp
shrb
push
scas
pushw
push
jno
test
daa
cmp
lock
xchg
nop
jecxz
les
jns
or
xor
ds
pusha
faddp
adc
je
into
pop
insb
push
les
mov
mov
or
fnstsw
in
mov
adc
mov
nop
lods
lock
pusha
push
push
dec
ret
jl
jg
or
repz
and
lret
push
outsl
leave
push
mov
insl
mov
stc
repz
stc
rcrb
inc
or
cmp
mov
mov
es
fcmovnb
jnp
xchg
hlt
cwtl
icebp
hlt
nop
icebp
jg
aam
pop
xor
xchg
cli
in
insb
fcmovbe
loopne
cmp
repnz
int
mov
inc
mov
cltd
cmp
cmp
mov
jne
xor
movsl
iret
sub
rorl
pop
xor
xchg
xor
out
ficoms
in
es
mov
call
loop
mov
fstl
jnp
test
aad
sbb
ds
jns
mov
and
xchg
mov
lret
lret
cmp
cmp
add
ret
or
sbb
int
and
fstps
sbb
test
cmp
movsb
data16
or
sbb
and
sub
fnstcw
sbb
aad
daa
mov
cmp
mov
ss
and
pusha
sub
movsl
inc
push
fs
cmp
adc
je
jle
push
pushf
jo
rolb
xor
hlt
adc
xor
in
lret
cmp
in
pusha
lahf
xor
jo
pop
rcrl
push
or
or
inc
add
ljmp
jg
cmp
inc
cwtl
dec
shr
les
cltd
test
out
lods
jmp
jp
pop
mov
gs
mov
mov
cmc
push
nop
mov
inc
jp
inc
dec
mov
popa
aas
sub
jp
dec
scas
jo
or
iret
notl
and
push
mov
repnz
mov
sub
push
popa
cmp
repnz
mov
cmpsb
jmp
stos
sbb
sbb
sbb
sub
jnp
mov
test
cs
inc
push
or
repnz
mov
loopne
test
nop
jmp
jge
pop
in
mov
sub
or
add
xor
das
lods
xchg
ljmp
push
mov
jp
pop
sub
mov
daa
inc
pop
push
lods
rcl
cmc
jge
cmp
test
jnp
loopne
and
sub
sbb
out
out
es
adc
cmc
or
sub
mov
ret
mov
in
fldcw
xor
cmp
test
push
addb
adc
sbb
aad
dec
or
sub
mov
mov
adc
dec
cmpsb
sbb
cmpsl
mov
imul
sahf
pop
mov
jge
daa
dec
arpl
mov
rolb
sub
mov
clc
jle
stos
movsl
add
cltd
mov
lock
lods
popf
mov
mov
popf
push
ja
int3
xchg
lea
fsubrl
push
pop
or
js
hlt
or
clc
fndisi(8087
jl
pop
in
jbe
push
lods
dec
clc
pop
adc
dec
movsb
and
leave
inc
dec
xchg
xchg
pop
js
into
cmpb
test
dec
add
stos
pop
in
add
out
inc
and
jg
mov
std
cmp
pop
dec
sbb
xchg
xor
outsb
ljmp
shrl
jnp
dec
xor
xchg
xchg
dec
or
xchg
xchg
jne
sarb
dec
stc
ja
jae
js
dec
lret
sbb
sbb
es
rol
add
je
xlat
or
sub
out
jle
bound
or
movsl
clc
xchg
jecxz
imul
dec
test
add
lret
push
test
jp
or
add
js
lock
popa
cmpsb
jl
lods
sbb
test
int
add
popf
bt
pop
pop
add
pop
cld
test
scas
mov
mov
arpl
imul
cmc
lock
imul
jmp
mov
xlat
aas
xchg
outsl
pop
and
fcomi
popf
xchg
push
xchg
push
mov
and
jecxz
inc
cmp
adc
sbb
mov
divl
aam
or
sbb
loopne
fwait
lds
dec
dec
xchg
and
ljmp
inc
fcmovb
test
pop
mov
pop
mov
mov
stos
xor
stc
sahf
mov
jnp
pop
jno
ret
mov
adc
xchg
std
xor
pop
pop
das
cli
scas
cs
insb
cmc
xor
mov
sbb
jo
fstl
mov
cld
es
cwtl
test
out
xor
cmp
jne
cmp
sti
into
testb
mov
shlb
int
leave
aaa
cmp
lods
je
jne
push
pop
and
pop
and
push
nop
int
push
jl
or
shlb
inc
add
das
daa
xor
mov
adc
pop
and
rolb
jg
loope
shl
or
insl
adc
push
inc
out
mov
ja
lock
addr16
stos
sub
sti
xchg
negb
sub
rorb
xchg
sbb
ret
sbb
rcrb
push
xor
mov
and
sti
mov
xor
xorb
in
insb
repz
cld
cmpsl
insb
ret
sbb
cltd
push
jecxz
fisubrs
ds
dec
aam
add
dec
pushf
sbb
aas
mov
aam
or
test
add
sub
jl
ljmp
aaa
or
aad
inc
mov
mov
mov
jo
daa
rorl
or
push
adc
fs
shrb
mov
mov
cld
aas
sub
jle,pn
pop
jmp
cmpsl
in
aaa
ret
xor
push
fistpll
imul
cmp
neg
cmc
push
jmp
jae
loopne
add
xchg
inc
adc
pop
loopne
in
repz
clc
cmp
sbb
adc
es
add
push
mov
cmp
les
je
es
and
or
lahf
sbb
or
push
insb
enter
lods
cld
int
fucomp
push
daa
cmpsb
aas
test
cs
sbbl
xchg
sub
inc
cmc
push
in
jge
pop
inc
mov
lret
xor
adc
fnsave
cs
cmp
and
jge
cmp
jo
and
xlat
cld
repnz
push
loope
fs
dec
ljmp
add
pop
imul
movl
and
fcoms
outsb
test
outsb
in
adc
gs
jl
stos
loop
mov
cli
xchg
lea
sti
pushf
jl
jg
les
xchg
loop
subl
cwtl
cmp
cmpsl
push
mov
jmp
mov
ret
in
outsb
cmp
adc
xchg
cmp
adc
xor
daa
loop
sti
add
test
fwait
sub
jmp
fnstenv
cwtl
dec
mov
aas
inc
or
loope
mov
ds
mov
and
mov
cld
shr
push
pop
leave
push
or
cmpsl
xchg
lea
stos
mov
xchg
imul
sub
sub
jnp
adc
adc
hlt
adc
popa
adc
pusha
fistpl
jp
cmp
mov
cmp
lock
cwtl
lret
add
je
movsb
lds
mov
jle
inc
push
leave
dec
jg
dec
jmp
sub
pop
lea
dec
and
int
insl
mov
gs
mov
cmp
mov
cmp
sub
and
clc
or
or
daa
jbe
mov
adcb
push
jecxz
xlat
cltd
daa
loopne
int
push
xor
push
push
repnz
mov
jl
lods
decl
stos
cmpsb
and
bnd
lods
outsl
pop
or
xor
out
jb
enter
jle
or
shrl
push
pop
sahf
loopne
mov
ror
dec
sbb
aas
mov
jg
jne
aaa
and
fisubrs
mov
inc
nop
jecxz
addb
sub
jle
inc
mov
or
adc
push
shl
mov
out
sti
inc
faddl
outsb
mov
hlt
hlt
scas
dec
inc
jl
shll
mov
or
push
sbb
repnz
sub
inc
nop
int3
adc
lcall
nop
call
cli
dec
fmulp
xchg
add
pop
loopne
mov
or
adc
mov
cmpsl
lea
sub
add
mov
mov
mov
sbbb
mov
jecxz
idivb
jmp
pop
xor
in
pushf
jae
push
or
mov
xchg
pop
inc
mov
mov
mov
ret
stos
cmp
mov
and
pop
add
imul
test
cmp
xlat
test
stos
and
cmp
arpl
cmpsl
stos
add
cld
nop
call
decb
mov
ret
add
inc
popa
adc
xchg
mov
sbb
pop
cmpsb
adc
push
mov
xchg
mov
lret
inc
jns
or
fsub
je
pushf
ljmp
mov
inc
adc
adc
arpl
add
ficomps
pop
mov
cltd
push
inc
jmp
cs
outsb
push
inc
sti
std
les
mov
sahf
repnz
jne
sub
stos
repz
dec
arpl
sahf
insb
or
out
inc
fcomps
cwtl
fs
out
lea
jmp
xor
lea
aam
xchg
out
push
xchg
mov
xor
movsb
push
push
fdivs
xchg
fnstcw
icebp
or
dec
scas
out
and
pushf
add
lret
aas
fcompl
lods
push
js
xor
call
lds
dec
push
ljmp
idiv
xchg
ja
inc
mov
mov
hlt
lds
test
ss
dec
jns
cmp
cs
cmpsl
or
mov
mov
pop
rcrb
icebp
cmp
lret
cwtl
pop
out
or
repz
xchg
adc
or
jnp
or
push
jno
aad
dec
mov
fistps
cmpsb
dec
and
mov
aad
mov
mov
cmpsl
movsl
jbe
je
xor
cmp
jp
pop
fwait
in
cmp
mov
orl
jmp
mov
dec
int3
or
out
sbb
pushf
rcr
int
loope
insb
outsb
test
xchg
movsl
pop
sbbl
mov
stos
cmp
std
rcrb
push
incl
fstps
ret
insl
data16
mov
jnp
cmp
imul
fnstsw
mov
lods
cmpsb
imul
outsl
add
cltd
mov
cmpl
fisubs
pop
and
outsb
inc
jle
adcb
sbb
jecxz
lods
xor
out
test
icebp
je
das
or
loopne
inc
push
sti
mov
outsb
outsl
lock
lea
adc
mov
cltd
out
adc
fxch
or
out
xor
sbb
jmp
lods
adc
add
pop
sbb
and
sub
in
mov
dec
pop
or
xor
out
push
loope
imul
sbb
mov
mov
ret
push
in
hlt
xchg
nop
fisubl
cmpsl
frstor
mov
pushf
and
ficompl
push
mov
xchg
pop
push
xor
pop
and
xchg
insb
sbb
cmp
or
jbe
sbb
js
out
imul
xchg
fisubl
pusha
sub
adc
int3
roll
movsl
push
xor
notb
lret
cmp
pop
lret
fidivl
pusha
outsl
jae
push
push
in
test
dec
stos
xor
ret
loope
arpl
pop
add
arpl
add
inc
ret
ja
dec
mov
xchg
adc
adc
imul
push
push
xorl
cmp
stos
loope
mov
popf
call
fisubs
sbb
pop
sbb
bound
and
mov
mov
orl
add
adc
imul
cmp
and
pop
cld
cwtl
push
ror
enter
lret
nop
fwait
out
cmpsl
lds
jns
mov
mov
imul
fists
test
sbb
jle
push
mov
subb
mov
and
or
and
push
mov
pop
jle
cmc
dec
scas
adc
cli
adc
mov
xchg
pushl
adc
repnz
xchg
inc
or
test
sub
cmp
psubusw
or
jl
pusha
pop
enter
inc
aas
push
out
mov
pop
aad
sub
xchg
jo
or
xchg
mov
call
inc
mov
std
cli
dec
add
add
adc
and
test
arpl
sub
or
mov
lds
jmp
push
jmp
cmpsb
rclb
pop
into
loopne
mov
inc
test
mov
jmp
push
lret
jmp
sar
add
popa
jmp
mov
popl
jns
sti
jmp
xchg
ss
test
jmp
outsl
repz
aam
pusha
dec
cltd
daa
jo
xchg
int3
xchg
pop
pop
sub
sahf
xchg
xor
lcall
xor
jge
outsl
jle
test
das
inc
dec
and
inc
jle
sti
adcl
inc
in
push
dec
fmulp
fidivrs
dec
sub
insl
daa
jne
pop
movsl
sub
xchg
test
or
fimull
dec
test
jmp
pop
lahf
and
add
mov
jecxz
pop
test
dec
stos
bound
jp
push
xor
sahf
js
lea
pop
loop
cmp
jae
jmp
std
lea
dec
call
sub
scas
pop
mov
push
fldt
adc
or
mov
call
and
sbb
test
mov
mov
inc
jno
stos
push
cmpl
mov
cmp
and
xchg
xor
jle
aas
push
mov
xor
add
push
pop
test
sarl
sub
insl
addr16
aaa
push
aaa
inc
add
outsl
dec
sbb
call
decb
sub
xor
xlat
in
lahf
xor
cmc
jge
movsb
out
hlt
mov
aad
jae
std
xor
and
out
push
push
mov
lds
xchg
and
inc
inc
dec
movsb
ret
cltd
push
hlt
loop
pop
xor
outsb
out
jmp
push
xchg
xor
push
repnz
jmp
mov
add
mov
pop
test
in
xchg
icebp
stos
lahf
into
dec
or
test
dec
ljmp
and
bound
add
popf
or
cmp
in
mov
mov
and
lahf
es
jno
pop
fidivs
jno
sub
shlb
or
movsb
dec
dec
arpl
sbb
mov
ret
xorl
adc
push
mov
add
and
sub
add
pop
add
adc
imul
hlt
popa
jb
icebp
ljmp
addl
and
and
nop
jle
pop
pushf
push
inc
mov
data16
xchg
daa
sbb
loope
scas
mov
popf
fdivr
out
scas
and
or
and
inc
icebp
or
rolb
sub
mov
and
cmc
mov
sub
xor
aam
andl
dec
insb
push
push
in
nop
pop
out
loope
xor
jle
loope
jp
and
xchg
loop
cs
data16
cld
ja
das
sub
push
dec
push
xchg
ja
insl
inc
and
push
xor
mov
push
or
ret
sub
add
cmpl
bound
mov
popf
orl
andl
mov
inc
jns
add
pop
push
pushf
dec
pop
jbe
adc
pop
clc
outsl
lea
movl
xchg
enter
and
jnp
push
adc
mov
jbe
adc
out
stos
in
push
sub
mov
lock
jo
push
xchg
xchg
mov
mov
or
stc
rclb
add
divl
repnz
dec
add
pop
and
adc
mov
jne
mov
pushf
push
jg
out
pop
shl
pop
sbb
dec
cli
ljmp
adc
jg
pop
mov
inc
add
dec
cmpsb
inc
ja
incb
xlat
insb
mov
or
xchg
jl
jbe
mov
xchg
rcll
mov
xchg
int3
inc
dec
fildll
add
inc
clc
mov
inc
lea
or
seta
popa
lods
fcomps
or
cld
or
das
stos
jmp
movsb
movsl
sbb
int3
subl
adc
movsl
lahf
pop
pop
cmp
test
aaa
pop
cmpsb
aaa
inc
adc
in
lcall
int
ret
jb
fbstp
fwait
repnz
mov
ret
and
xor
mov
in
stos
mov
pop
dec
data16
into
bound
imul
inc
les
xor
cli
lret
dec
aam
fwait
and
cli
int
out
or
xchg
adc
dec
and
xchg
dec
push
and
dec
mov
stos
jecxz
mov
popf
jbe
xchg
mov
out
movsl
stos
shrl
and
out
or
mov
popa
inc
xor
ljmp
and
mov
push
rorl
mov
jp
aad
loopne
push
or
lcall
vmovshdup
xchg
scas
xchg
and
and
xlat
repnz
dec
aad
nop
xchg
cmp
and
push
sub
push
cmp
cld
scas
mov
ret
shll
shlb
lret
sbb
ljmp
or
iret
jecxz
in
mov
sub
loope
push
xchg
shll
inc
mov
dec
outsb
nop
mov
push
cmp
aaa
jnp
jno
fwait
fwait
mov
out
test
fisubs
shl
rcl
sub
movsb
adc
in
xorb
mov
inc
mov
faddp
jle
inc
nop
stos
or
and
stos
push
gs
pop
xchg
adc
inc
cmp
pusha
in
push
cmp
mov
inc
inc
iret
xor
aad
xor
sbb
mov
dec
push
fs
mov
fnstsw
or
inc
xchg
inc
mov
and
or
div
iret
or
and
sub
add
fcompl
sbb
out
sub
xchg
push
sub
and
loopne
xchg
dec
movsl
gs
int
pop
into
lcall
mov
int
adc
xor
int
mov
out
pop
in
stc
pop
out
call
icebp
dec
mov
push
outsb
cmp
call
leave
sarb
aas
test
or
test
xchg
xchg
call
test
or
lret
popa
or
adc
xor
outsb
mov
adc
or
sbb
test
mov
inc
movsb
lret
xor
addr16
aam
pusha
mov
dec
ljmp
aas
xchg
arpl
les
or
xor
lahf
xor
pop
lods
in
aam
test
bound
out
mov
mov
cmp
ret
dec
mov
icebp
scas
cmp
mov
cmp
pop
fldt
stos
xchg
jge
enter
dec
scas
push
push
and
ffreep
pop
decl
gs
mov
cmpsb
xchg
dec
fdivp
push
shll
popa
lahf
sti
or
mov
xchg
xchg
mov
cmpsb
xchg
pop
push
sbb
insb
inc
add
int
faddl
inc
leave
out
cwtl
mov
jg
mov
push
loope
test
std
or
in
test
lods
pop
mov
fistpl
out
push
add
push
mov
sbb
add
pop
ret
out
movsl
jne
jnp
clc
dec
outsl
pop
cltd
shrb
inc
jne
add
lods
divl
adc
ss
and
test
push
xchg
inc
push
ja
push
push
roll
pop
xor
movsb
xor
adc
rorb
push
jbe
or
push
mov
xchg
or
pop
mov
int
or
in
and
fsubp
mov
sub
iret
mov
dec
push
mov
and
push
fidivl
fisubrs
jbe
shl
xor
mov
inc
les
fsts
pop
ror
stos
cmp
lock
mov
cwtl
inc
imul
dec
daa
mov
or
xchg
inc
scas
or
mov
data16
scas
hlt
scas
lcall
fisttpll
or
sub
mov
shlb
pop
mov
gs
xor
enter
out
mov
sub
pop
jecxz
int3
test
jmp
sub
das
rcr
andb
movl
scas
jne
inc
lret
in
push
mov
adc
ror
mov
hlt
test
nop
or
sub
clc
rolb
cmc
pop
aaa
fisttpl
ljmp
dec
in
repz
mov
sbb
les
mov
pop
scas
sarb
xchg
rclb
pop
test
adc
ja
or
dec
insb
repz
lahf
mov
pop
sahf
mov
mov
jno
adc
int3
ljmp
loope
dec
cld
mov
mov
rorl
cs
cwtl
mov
in
int3
scas
inc
adc
inc
mov
fimull
lahf
push
stc
test
cmp
push
sub
mov
mov
mov
pop
cmpsb
mov
add
lret
fildll
jae
mov
shlw
arpl
mov
or
fcoml
cli
fldcw
stc
lret
sub
inc
jl
add
mov
into
xor
faddl
jl
clc
mov
and
mov
sbb
ss
in
and
jle
test
or
xchg
repz
push
xor
jmp
cmp
out
fnstcw
or
data16
repnz
in
and
and
stc
push
nop
fisubrs
jne
xor
sub
int3
jno
and
jbe
fbstp
or
stos
jo
fucom
test
inc
add
mov
call
adc
dec
lcall
sti
shlb
jge
test
mov
push
dec
and
in
cmc
or
and
test
pusha
adc
cmpsl
das
rorl
insl
pop
or
pop
xor
adc
js
aam
and
insb
pop
imul
cmp
lods
test
popf
clc
mov
mov
sbb
or
push
imul
shrb
es
fdivr
bound
push
jge
push
insl
cmpsb
push
test
or
rcrl
or
jns
mov
dec
aaa
out
mov
cld
lods
inc
or
mov
mov
xchg
pop
test
lcall
jo
testl
lods
jns
bound
add
adc
push
cmp
adc
sub
push
jns
add
ret
xor
jle
ja
test
addl
cs
mov
aad
jl
jge
cmp
add
aam
push
mov
sti
push
sbb
lds
cld
aas
add
ret
scas
dec
xchg
imul
cmp
add
jns
insb
adc
test
sbb
popa
sbb
and
dec
sub
push
fsub
mov
sbb
or
push
fnstsw
idivb
sbb
pop
insl
inc
jge
pop
mov
incl
loopne
xor
inc
jae
pop
int
cmp
loopne
leave
lahf
pop
notl
and
int3
xchg
jmp
stos
std
pop
lret
stos
lahf
pop
mul
jecxz
vmovntpd
mov
mov
into
ljmp
fs
mov
imul
push
repnz
cli
shl
sbb
shll
cld
je
mov
jo
gs
mov
outsl
in
in
pop
adc
sbb
add
arpl
fsubrl
jo
int3
add
adc
mov
cli
in
xchg
das
pushf
cmp
out
jns
adc
divb
cmp
mov
mov
icebp
shlb
push
repnz
pop
pop
mov
cmc
enter
aas
fsubrp
dec
out
fwait
je
pop
xor
out
loopne
call
cmp
inc
lods
fisubrl
cmp
mov
aaa
dec
add
shl
rorb
bound
push
fwait
push
push
int
mov
cmp
sub
repnz
adc
pushf
outsb
dec
add
gs
dec
sbb
cld
mov
dec
add
adc
andb
sub
xchg
lcall
outsl
sub
rcr
ds
and
iret
dec
xor
aaa
outsb
inc
addr16
jge
test
cs
daa
dec
xchg
add
gs
sbb
es
or
std
popa
pop
fadds
out
in
cwtl
sti
lods
in
add
in
int3
lea
pop
push
or
cli
jmp
fidivs
mov
adc
outsl
std
loope
dec
mov
pop
and
xor
push
mov
xor
inc
shl
add
mov
push
jnp
fwait
mov
sbb
xlat
in
jle
xlat
jo
aas
mov
and
fs
dec
mov
lret
outsl
inc
or
insl
out
xchg
xor
push
pop
rdpmc
sbb
dec
nop
mov
push
enter
sub
xchg
out
pusha
inc
negb
scas
jns
fisttps
int
std
xor
mov
lods
ret
repz
cmc
mov
test
xchg
das
arpl
sub
fdivl
addr16
mov
dec
outsb
cmp
popf
cmp
dec
xchg
int3
xchg
sbb
scas
popf
out
clc
jmp
push
add
and
push
int3
mov
xchg
dec
and
pop
shl
fisttpl
scas
mov
pop
mov
sub
testl
or
mov
push
or
enter
and
mov
mov
jg
add
cmp
push
mov
push
and
push
andps
cmc
cmp
ficomps
popa
adc
leave
out
xchg
dec
pop
cmpsl
dec
jl
sbb
fbstp
jecxz
ror
mov
pop
loope
lret
mov
mov
mov
push
mov
popa
hlt
scas
xor
mov
cmp
stos
jae
shlb
fcmovbe
stos
jnp
sti
xchg
mov
cmp
aad
out
xchg
mov
cmp
es
push
mov
xorl
hlt
fwait
dec
cmpl
cs
pop
nop
cmp
int3
fstpl
push
fs
stos
jge
jge
adcb
cltd
into
repz
lret
popf
rolb
stos
inc
adc
mov
imul
fcomip
xor
in
xor
lea
lcall
add
test
sub
addl
push
jne
pop
sbb
adc
ret
xlat
pop
out
fwait
push
adc
pop
bound
loopne
inc
dec
hlt
xchg
inc
push
shl
adc
push
lock
mov
add
test
cmp
pop
mov
and
xor
adc
xor
push
mov
gs
stc
push
push
fs
xchg
pop
les
mov
xor
lods
scas
insl
adc
jnp
out
sub
arpl
daa
popa
mov
xchg
das
cmp
dec
lret
lods
inc
add
arpl
aad
loop
adc
jle
xlat
ret
mov
push
sub
pop
dec
xor
mov
mov
cmp
ds
pop
push
outsb
ja
fldt
lock
pusha
pop
or
shrb
scas
dec
jns
and
and
outsl
sub
in
scas
fiadds
inc
mov
and
dec
jecxz
inc
popf
dec
cltd
sbb
hlt
jnp
shl
jns
test
mov
lret
ret
mov
outsl
mov
inc
push
xorb
aas
clc
adc
and
xchg
or
and
stc
mov
fldenv
fsubp
mov
scas
mov
fwait
enter
sub
arpl
xchg
shrl
adcl
cltd
dec
adc
sbb
outsl
data16
or
xchg
sbb
fwait
push
adc
cwtl
adc
cli
or
dec
or
xor
xlat
or
stc
cmpsl
mov
mov
popf
nop
les
sub
mov
push
mov
cltd
cmp
dec
jmp
mov
aas
xchg
sub
mov
add
push
dec
cmp
in
dec
in
lahf
and
test
inc
in
mov
cs
fsubp
imul
mov
pushl
lahf
and
std
popf
mov
ss
xchg
fcomps
mov
cli
or
insb
dec
addb
add
inc
test
sub
xor
in
jle,pn
xor
js
sti
ja
jb
and
ja
lock
neg
std
sahf
fs
sbb
mov
addr16
aam
inc
xchg
or
xchg
fisubl
fcoms
test
fistpl
adc
mov
fdivr
sbb
jbe
add
adc
pusha
int3
pusha
mov
div
mov
xchg
stos
pop
mov
dec
dec
popf
inc
and
fldcw
aam
gs
arpl
insl
and
jnp
stos
dec
adc
push
add
push
rol
inc
push
inc
xor
lods
jle
lods
pop
cli
loop
inc
sbb
sbb
or
outsb
test
sub
mov
inc
dec
cld
repz
push
sbb
dec
int3
rclb
pusha
sbb
xor
testb
loop,pt
leave
aaa
mov
stc
aas
or
mov
mov
mov
mov
jmpw
loopne
into
cmpl
adcl
icebp
test
insb
jo
xor
andb
push
xor
dec
inc
add
movsb
std
cwtl
xchg
cmc
dec
mov
lds
scas
xchg
fstl
pop
ret
out
leave
add
add
sti
jno
lods
lahf
lock
sbb
push
in
sub
fisubrs
cmc
scas
test
outsl
dec
push
daa
stos
cld
sbb
mov
aam
into
in
enter
das
cmp
cmp
sub
dec
sub
mov
scas
push
pushaw
sahf
mov
mov
imul
int
mov
les
mov
ret
xor
jno
cmp
fwait
xchg
loope
mov
jo
inc
mov
out
repnz
lcall
fnstenv
pop
dec
cmp
sahf
shlb
pop
xor
inc
and
mov
sti
mov
leave
sbb
push
pop
sub
fwait
and
js
fldl
jo
shll
sti
dec
pop
stos
sub
cmp
psrld
fsubrp
inc
xor
xchg
clc
cmpsb
xor
test
cwtl
ljmp
and
sbb
ljmp
adc
inc
pop
sbb
cli
into
mov
pcmpgtb
orl
out
dec
mov
sbb
jb
jp
jl
add
xor
mov
fcoms
cmp
mov
jne
ds
xorl
pop
lock
and
push
ss
jne
ja
out
add
jecxz
cld
aaa
pusha
xchg
or
jne
test
sub
test
or
xchg
jbe
push
pop
and
adc
aam
xchg
sahf
pop
xchg
mov
xorb
std
fmuls
xorb
sub
loop
adc
dec
xchg
das
and
fs
sub
mov
in
push
xor
arpl
jmp
adc
xchg
dec
aaa
scas
inc
or
insw
jecxz
sbb
mov
test
dec
test
add
aaa
or
stc
mov
js
inc
call
and
iret
in
pop
xchg
arpl
cmp
pop
jno
sbb
loop
stc
push
xor
lea
pop
insl
clc
popa
push
cmpsl
aaa
cmp
xchg
enter
movl
pop
mov
cmpsl
roll
xor
cmp
int3
vphadddq
les
mov
jl
std
mov
and
je
push
inc
repz
loope
xor
popl
popf
xor
es
adc
cmpsb
pop
pop
out
inc
ret
int
cmp
and
daa
dec
xor
ljmp
nop
jae
fmuls
sbb
inc
jmp
dec
pop
jns
xor
push
add
daa
leave
sub
lock
mov
addr16
lods
add
adc
enter
mov
ss
test
notl
popa
insl
jge
xchg
nop
adc
aad
test
dec
int3
aad
call
and
mov
repnz
test
stos
xchg
adc
incl
adc
lods
xor
scas
sbb
push
xchg
ret
xor
cmc
leave
orb
outsl
ret
inc
jnp
inc
or
push
sbb
xchg
ljmp
loop
test
or
jnp
test
mov
mov
js
mov
in
fsubr
loopne
jb
jae
sbb
sti
mov
push
lahf
lret
xor
dec
xor
aas
in
lods
insb
test
mov
mov
or
mov
mov
lahf
test
stos
lock
dec
inc
into
mov
in
adc
sbbl
xchg
out
mov
mov
into
fs
dec
rcrl
bound
fstps
insl
ds
inc
bound
dec
push
aas
and
inc
cmp
iret
push
xchg
fld
add
pop
or
xchg
xchg
dec
js
mov
lock
leave
add
mov
mov
fidivrl
fimuls
dec
add
adc
jo
mov
ljmp
aas
scas
and
movsb
mov
and
fadds
addb
inc
inc
ret
dec
mov
jns
leave
outsl
push
cmp
dec
cmp
cli
pushf
shlb
mov
inc
inc
jo
adc
scas
xor
push
jl
mov
push
fs
inc
pushf
outsl
push
xor
jle
fsubrs
mov
sti
outsb
fdiv
pop
iret
ret
stos
sub
xorb
xlat
imul
pop
sub
movsl
je
fdivl
cmp
int
loopne
ret
pop
mov
mov
cmp
sub
mov
dec
add
mov
cmp
es
pop
mov
inc
in
and
sarl
mov
mov
ret
les
imul
rorl
icebp
repnz
loope
mov
cmc
inc
repnz
cwtl
fsubrp
xor
idivl
adc
in
cmp
mov
sub
or
sub
cli
fwait
ret
stos
pop
ljmp
lods
inc
rorb
or
rol
xchg
push
sbb
cmp
mov
dec
mov
arpl
and
jmp
mov
cld
dec
inc
xlat
push
xchg
pop
jnp
adc
pop
mov
cwtl
jo
inc
sub
int
shl
scas
jmp
out
sarl
pop
jle
call
repz
mov
dec
pop
movsb
arpl
xchg
xor
xor
inc
xor
mov
dec
nop
loope
sub
das
fmul
xor
or
into
jmp
movsb
jecxz
lock
lds
out
pop
mov
adc
mov
add
ret
insb
mov
outsb
movsl
mov
cmp
jae
jnp
rcrl
pop
pop
mov
test
push
cltd
inc
add
mov
mov
sahf
mov
push
sar
or
pop
push
shlb
out
repnz
das
lods
inc
js
sbb
and
mov
pop
mov
jg
xor
xor
movsb
scas
fcmovbe
mov
pushf
aaa
test
je
mov
mov
bnd
in
dec
xchg
dec
data16
bound
push
fwait
imul
push
imul
push
mov
mov
test
hlt
adc
pop
insb
sti
xor
jg
jg
roll
lret
add
sub
daa
cmp
or
fistl
mov
adc
sbb
lods
les
xchg
cld
inc
imul
sub
xor
fwait
lret
aaa
mov
inc
lods
icebp
lcall
push
push
out
or
outsb
or
and
sbb
fsub
gs
decl
push
adc
or
mov
outsl
ja
insl
jno
out
sbb
loopne
jne
fwait
or
scas
scas
push
and
sub
cwtd
mov
aas
cmp
pop
pop
mov
jo
pop
add
adcb
out
inc
fadds
pop
outsl
jge
iret
and
or
mov
out
lea
addr16
movsl
test
in
outsb
inc
mov
insl
jnp
aas
or
mov
mov
ja
cld
enter
sbb
aaa
pop
clc
mov
outsb
push
cmp
cmpsl
sub
adc
lahf
pop
push
sub
cmp
fwait
dec
lods
mov
and
test
test
js
ficompl
jecxz
xchg
test
mov
cs
mulb
lock
pusha
je
lret
adc
testl
pop
sarl
or
outsl
lds
sub
ja
pop
repz
ja
or
inc
push
into
xchg
insl
fbld
jp
adc
xchg
or
jae
lock
outsb
lret
cmp
mov
sub
mov
add
jns
stos
push
aam
cltd
add
cwtl
fldenv
mov
int
pop
jmp
mov
mov
push
ss
leave
lahf
sbb
sbb
jmp
out
jae
push
add
addr16
int
jns
fdivrl
test
lret
loop
mov
dec
add
xlat
or
cld
xor
dec
mov
cmp
mov
xchg
pop
pop
mov
les
xchg
dec
rcrb
stos
scas
into
xor
or
cmp
aam
in
out
insl
and
pop
inc
sub
mov
out
inc
cld
js
fnstcw
and
jmp
popf
adc
es
insb
pop
std
push
sbb
loopne
jecxz
cmpl
arpl
insl
pop
dec
push
ds
xchg
xor
push
addr16
insb
stos
les
inc
jb
inc
lock
push
cs
insb
xchg
cli
jae
lcall
popa
mov
mov
adc
daa
imul
movb
add
es
push
jne
cmc
roll
jbe
jl
std
and
iret
mov
or
pop
fimuls
stos
jge
pop
sub
xchg
scas
faddp
push
aad
idivl
fnstsw
cmp
cli
out
xor
inc
clc
bound
or
lret
mov
lock
mov
fimuls
mov
sbb
ficompl
pop
xor
in
sub
into
fistl
stc
fiadds
lea
cwtl
lds
cli
mov
stos
aad
adc
and
push
dec
pop
add
push
popa
loope
stos
add
notb
repz
movsl
aaa
cmp
add
push
flds
idivl
in
in
test
idivb
sbb
xorb
lret
jnp
mov
out
mov
frstor
and
mov
movsb
sbb
rdmsr
or
mov
jnp
xchg
sub
adc
shll
xchg
dec
movsl
mov
repz
xchg
sbb
and
ljmp
or
sbb
mov
lods
sbb
pop
lcall
daa
icebp
add
aad
call
xor
cs
out
mov
fsts
out
rcl
fadds
out
test
scas
or
jns
mov
shll
adc
mov
lret
pop
aam
inc
push
sub
and
jmp
aad
cmp
mov
je
mov
divb
std
mov
popl
xchg
inc
insl
inc
inc
roll
mov
fistpll
dec
xchg
gs
sahf
adc
clc
gs
inc
mov
pop
aaa
movsl
imul
dec
sbb
lret
shr
add
cmp
push
stc
andl
push
arpl
inc
insb
push
rorl
loope
ja
jmp
jmp
or
test
sahf
xor
sub
push
pop
hlt
or
sbb
cmp
int3
les
test
out
mov
sahf
xor
or
jl
stos
cwtl
push
inc
ljmp
nop
mov
movsl
call
pop
shlb
inc
or
insb
adc
sub
adcl
fs
rcr
inc
call
xchg
mov
pushf
lret
pop
add
mov
and
cmc
pushl
loop
xchg
enter
enter
notb
push
ljmp
das
loop
jg
dec
inc
lcall
sub
js
or
cwtl
xor
ds
cmpl
mov
mov
int
test
fsubs
mov
jl
push
inc
adc
pop
outsl
out
mov
inc
or
jns
fdiv
dec
sbb
sub
pop
fadd
or
fsubs
rol
xchg
and
jp
jb
pop
and
xchg
cld
and
inc
pusha
daa
incl
xchg
shlb
mov
test
pop
cmpsl
sbb
sti
cmp
inc
ret
adc
stos
shrb
sbb
xchg
sahf
jmp
iret
stos
inc
in
test
push
jmp
push
jnp
inc
pop
ljmp
and
push
lret
movsl
repnz
jnp
jle
or
mov
or
and
mov
cmpsb
lds
mov
dec
icebp
addl
mov
das
xchg
sbbb
shlb
scas
addb
pop
mov
cld
lds
sub
mov
hlt
cmp
jns
insb
filds
int
fdivl
add
dec
div
rcrl
int3
pop
ja
jge
fsts
mov
jle
and
xor
imul
cmp
fucomip
lods
cli
jmp
loop
inc
sahf
lahf
and
addl
push
sbb
pop
inc
out
inc
push
jae
xchg
xor
pop
dec
ljmp
scas
rol
fbstp
cmp
inc
loope
test
mov
sub
add
ficomps
mov
mov
mov
mov
add
sub
imul
int
je
icebp
dec
add
lods
lods
pop
or
movl
inc
mov
xor
sbb
in
mov
cwtl
stos
shlb
add
jbe
lret
int3
dec
dec
inc
pop
or
xlat
mov
dec
inc
aad
cs
out
add
jecxz
inc
mov
cwtl
sub
in
jmp
ret
inc
in
mov
sbb
mov
mov
mov
lret
pushf
pop
pop
dec
push
and
and
xchg
outsb
xchg
jo
xor
pop
outsb
mov
mov
push
gs
shr
fimuls
jmp
cltd
stc
sahf
or
jns
xchg
sti
cmp
jb
add
mov
insl
xchg
rorb
xor
arpl
xor
mov
pop
arpl
inc
int
inc
and
pop
lret
mov
test
ss
jae
ret
call
sbb
lret
insl
jle
inc
mov
push
lds
inc
mov
cmp
pop
sub
lcall
lea
sbb
dec
xor
scas
fbld
in
xchg
jl
add
mov
sub
jae
lahf
xchg
arpl
ficompl
jno
pop
xchg
out
pop
dec
das
jns
insl
mov
sahf
icebp
in
adc
or
mov
mov
mov
pop
lock
jmp
xchg
bound
sbb
cmp
stc
mov
add
and
mov
inc
stos
pop
test
inc
or
xchg
repz
shlb
pop
mov
pop
daa
sahf
dec
jge
jecxz,pt
jecxz
sbb
jl
sub
mov
or
cmpsb
dec
push
test
jne
rcl
mov
jecxz
mov
ror
test
mov
add
jmp
sbb
dec
fst
mov
mov
cltd
scas
push
aam
arpl
lret
mov
and
imul
sbb
mov
push
sahf
pop
pop
lret
movsb
mov
inc
sahf
cwtl
stc
repz
rcll
or
jle
push
daa
test
add
dec
add
and
mov
pusha
pop
inc
cmp
mov
fstpt
or
scas
imul
xchg
cli
sub
es
out
add
mov
test
insl
jg
movsb
sbb
lahf
push
add
pop
pusha
jge
push
arpl
cmpsl
adc
pop
pusha
xor
add
or
adc
push
lds
jo
mov
arpl
mov
pop
je
cmp
dec
imul
push
sahf
stc
mov
or
fcmovne
xchg
fucomi
adcl
pusha
mov
mov
push
imul
outsb
cli
mov
xorb
cltd
lods
or
jecxz
movsl
lods
insl
add
insl
push
les
cmpb
cmp
repnz
aaa
ret
aaa
rcrl
mov
out
pop
out
or
lret
ss
mov
lcall
cwtl
pop
mov
call
mov
sahf
jl
pusha
mov
scas
or
sti
xorl
or
pop
mov
add
or
mov
adc
lcall
jno
mov
cmp
push
orl
jb
sbb
daa
xchg
xchg
cltd
push
std
push
sbb
sbb
jg
inc
loope
int3
mov
cld
enter
test
mov
push
lcall
lods
push
cltd
and
mov
mov
jmp
and
enter
andl
xor
pop
or
mov
sub
xchg
sti
mov
mov
xor
div
sub
pop
jnp
cld
arpl
xor
inc
cli
or
add
inc
rorl
mov
adc
lods
xor
pop
sbb
inc
dec
xchg
imul
filds
jae
jmp
mov
dec
shl
sti
repnz
mov
cmp
mov
sbb
rcll
xor
jae
add
fists
dec
jecxz
xchg
lcall
mov
lret
sbb
shlb
adc
jnp
or
jo
leave
mov
xlat
shrd
shrb
or
ja
dec
jl
jnp
insl
cmp
ss
cld
jge
imul
sub
divb
adc
pop
rclb
cwtl
mov
fdivr
mov
lret
test
insb
mov
or
dec
and
sub
jns
xchg
mov
push
mov
add
leave
leave
mov
mov
lods
and
sbb
jns
movsb
cmp
stos
pop
test
jecxz
mov
insl
pushf
jmp
jb
ds
jo
aas
cmpb
pop
push
xor
repnz
pop
pop
mov
mov
push
lahf
sbb
cmp
call
sbb
scas
and
lods
leave
ret
rcr
and
push
pop
loope
push
loop
std
adc
int
lock
scas
rcll
inc
in
mov
inc
cltd
xchg
imul
outsb
xchg
in
jle
aaa
push
stc
shrl
or
fstps
subb
cmp
mov
cmp
or
js
popf
mov
bound
pop
icebp
cwtl
fildl
sbb
pop
push
dec
fnstsw
pop
fcmovu
mov
and
rolb
mov
push
iret
jecxz
rolb
inc
pop
aaa
ret
add
in
insb
cmpsb
sbb
xchg
jecxz
pop
jbe
adc
lods
sub
sbb
and
stos
and
mov
ss
mov
mov
movsb
pop
xchg
rorl
dec
cmp
mov
enter
jnp
push
sbb
out
fxch
xor
cmp
in
mov
stc
int
pop
pop
mov
push
test
push
dec
jae
sbb
sahf
sub
lods
leave
ja
divl
xchg
ja
shrl
mov
insl
pop
sub
pop
sbbb
icebp
xchg
cmp
stc
aas
dec
mov
notb
out
add
daa
mov
sub
mov
adc
adc
mov
inc
pop
and
push
sbb
into
or
into
push
mov
test
scas
mov
fiadds
dec
jns
in
and
cmp
and
xor
pop
lgs
loop
leave
mov
fcomp
adc
or
mov
arpl
mov
mov
andl
cmp
pop
jmp
ret
cmp
sub
ret
outsl
xor
inc
in
or
das
xchg
stos
scas
cmp
inc
xorb
mov
sbb
mov
ficoml
xlat
pop
insl
pop
xchg
test
movsb
jb
inc
repnz
inc
xor
in
leave
sti
sbb
and
filds
pushf
sub
fistpl
or
stos
pop
lods
outsb
faddl
enter
imul
and
mov
daa
cmp
jno
dec
push
fnstenv
idiv
out
inc
cmp
insb
shrb
cmp
in
push
roll
dec
mov
loop
jge
xchg
pop
scas
push
mov
pop
xchg
jle
inc
lret
jp
dec
push
push
cmp
imul
icebp
and
cmp
cmpsb
fisubl
out
icebp
movsl
inc
cmpsl
sarb
les
stc
push
push
xchg
mov
mov
out
insb
pop
pop
dec
xor
push
pop
lds
std
aas
xchg
gs
mov
movsb
mov
in
lret
icebp
outsb
inc
cmp
icebp
jg
cmp
sub
add
fldenv
in
dec
data16
cmp
out
testl
in
insb
pop
imul
lahf
mov
or
xchg
pop
sub
adc
scas
in
std
stos
fildl
inc
cmp
cmp
xchg
cli
and
gs
into
jmp
lods
loopne
jno
cmp
pop
test
mov
add
or
pop
xchg
mov
ss
addr16
mov
outsb
aam
aad
pop
pop
out
ret
movsl
pop
adc
outsb
mov
and
outsb
jg
rcr
fidivrl
cmc
dec
push
cpuid
pop
add
in
inc
pop
negl
add
xchg
call
aad
xchg
fistl
repnz
fwait
lods
addr16
pushf
mov
xor
or
sti
sub
cmp
xor
jg
pop
mov
sub
xor
cli
fisttpll
inc
inc
or
data16
idivb
sbb
push
int3
push
popf
pop
add
insb
clc
sar
lret
stos
jl
cwtl
jbe
out
rclb
mov
sub
test
xchg
mov
enter
cmp
and
jge
jp
jmp
ss
pop
mov
popa
rorb
and
sbb
int
inc
inc
jnp
lret
mul
outsb
push
mov
pushf
xchg
mov
flds
shll
aas
int
mov
aaa
mov
mov
andl
and
es
cli
daa
pop
dec
popf
inc
fcmovb
push
sbb
adc
adc
call
push
jp
mov
fcmove
push
pusha
outsb
sub
sub
mov
or
fs
lcall
je
mov
js
movsl
sub
mov
push
fsubr
je
adc
call
mov
jmp
jnp
jmp
adc
pop
cld
pop
add
xchg
add
dec
out
or
lahf
dec
int3
mov
push
fidivl
sahf
inc
lcall
repz
jne
iret
pop
mov
hlt
cmp
enter
jp
pushf
dec
mov
push
lods
int3
cmp
mov
jmp
call
stos
and
popf
jb
xor
aaa
add
inc
orl
mov
add
fistps
pusha
mov
push
xchg
or
pop
sub
pusha
pop
call
adc
pop
sub
sub
and
adc
add
lret
cmp
cltd
cmpsb
popa
ret
pop
inc
shrl
test
mov
jae
or
dec
cmc
enter
or
cs
into
ljmp
adc
lret
mov
cs
and
out
pop
daa
les
add
xor
and
out
sbb
mov
ret
aam
pusha
stos
cs
jle
imul
lcall
es
test
movsl
sbb
add
pop
mov
fwait
mov
jge
jnp
mov
xchg
xlat
cwtl
and
inc
mov
push
pop
ljmp
mov
mov
aaa
mov
xor
iret
loop
cs
out
mov
xchg
lods
jp
xchg
sbb
sbb
jecxz
lret
ss
pop
mov
jne
enter
sti
sti
xorb
nop
lcall
sub
cltd
into
xchg
pop
cli
mov
jge
sbb
fistpl
push
ljmp
testl
ljmp
std
dec
roll
cmpsb
add
leave
mov
enter
jg
sbb
cmp
js
push
test
jg
inc
sub
xor
dec
or
jnp
and
push
aas
loope
pop
jp
in
or
mov
cwtl
mov
lcall
popf
xchg
je
leave
cwtl
mov
push
dec
push
in
arpl
gs
cmp
sbb
leave
push
loopne
xchg
mov
jge
cmp
jle
inc
mov
cltd
xchg
and
lret
lds
mov
jg
dec
mov
push
mov
inc
mov
xchg
sbbl
stc
das
jmp
arpl
stos
sbb
sti
and
ret
loopne
push
sbb
mov
pop
in
or
jl
and
xlat
sub
lods
ret
data16
inc
repnz
and
sbb
xchg
ret
orl
jecxz
sbb
aam
mov
xor
lods
outsb
or
and
cld
int
out
lret
push
push
test
xorb
clc
mov
sub
push
jg
pop
sbb
mov
daa
jo
lock
mov
outsl
inc
mov
mov
out
stos
and
push
xchg
stos
cmc
jnp
in
mov
out
pusha
aam
movsl
dec
aad
lcall
data16
icebp
xor
xor
rcrl
push
mov
mov
loopne
and
cli
subl
inc
cmpsb
add
gs
movsl
push
cmovg
decb
pop
mov
lea
push
jg
hlt
push
sbb
shll
clc
mov
adc
insb
ret
xchg
gs
xor
push
push
mov
jne
je
or
sub
mov
dec
pop
xchg
add
lds
sti
adcb
xchg
cltd
mov
jne
push
clc
test
jo
push
fcmovne
inc
pop
push
movsw
hlt
in
loopne
vphadddq
movsb
dec
out
push
mov
pushl
fcomps
dec
xchg
push
and
push
insb
fists
or
mov
lods
pop
into
jg
out
insl
orl
push
enter
ss
mov
sbb
mov
test
ss
xchg
adc
pop
mov
in
mov
jo
cmp
xchg
mov
rcrl
push
push
mov
push
mov
das
cmp
addr16
les
jmp
nop
adc
aaa
push
jcxz
jmp
fdiv
push
add
sbb
cmpsl
insb
mov
pop
xchg
je
xchg
pop
addr16
cmpsb
push
inc
push
fld
mov
in
cmp
add
jmp
es
adc
arpl
ror
cmpsb
ja
shl
stos
shll
aad
loop
lock
and
push
jmp
ret
jne
add
imull
push
adc
sbb
int3
cmp
push
push
mov
js
and
sahf
insl
mov
mov
sub
push
lock
mov
ret
xor
pushw
pop
inc
imul
xor
add
sahf
out
cmc
or
lds
mov
test
out
gs
imul
adc
lods
xchg
int
dec
out
jno
sub
jo
loop
adc
ja
fmuls
je
adc
subb
dec
loope
int3
adcl
sbb
add
test
inc
enter
mov
adc
fistpl
jns
jnp
cmp
sbb
js
je
xchg
icebp
push
add
imul
fwait
cmp
mov
inc
in
stos
andl
mov
mov
das
out
enter
movb
aas
and
stos
jno
pop
jmp
fidivl
orb
stos
pop
movsl
je
rcrb
pop
stc
dec
nop
pop
std
or
pushf
xchg
fmull
dec
pop
sarl
push
xchg
sbb
popa
ret
pop
dec
pop
loopne
pop
cli
jo
push
xlat
das
mov
outsb
and
and
pushf
lret
shr
mov
and
dec
xchg
mov
jmp
loop
jae
jae
jp
mov
stos
jns
out
pusha
push
and
push
push
dec
or
cmp
mov
insl
or
xchg
push
pop
jge
dec
lea
sbb
pop
xchg
test
mov
pop
mov
or
gs
sub
and
int
dec
and
rcrl
idivb
xor
mov
in
ds
mov
add
and
pop
sub
shl
ret
test
inc
test
or
cmp
int
das
push
sub
sub
pop
movb
int
stc
aad
jge
in
adc
or
xlat
inc
insl
add
iret
fidivrs
ret
cmp
insb
lea
loope
xchg
mov
mov
test
arpl
lods
add
push
and
pop
mov
rcrl
ffree
xchg
sbb
insb
add
outsl
js
jno
and
ss
jl
lock
and
data16
lods
js
bound
insb
and
jl
cs
ret
adc
in
rorl
test
sub
xchg
lods
nop
pop
pop
push
push
push
sbb
or
mov
leave
test
xchg
or
fs
ror
adc
jmp
cs
fldt
xchg
push
fwait
add
mov
inc
mov
and
fs
fnstenv
cmpsb
iret
mov
push
sub
sbb
leave
lret
inc
inc
ds
or
je
mov
mov
inc
mov
dec
mov
sbb
jecxz
cmp
adc
pop
jns
inc
in
jbe
cltd
adc
inc
sbb
int3
lahf
inc
ss
or
push
xlat
rcll
push
shrl
lret
mov
mov
cwtl
fscale
insl
sbb
dec
out
adc
or
stos
call
sbb
jb
and
scas
jecxz
pop
push
lock
pushl
mov
enter
inc
cmp
mov
mov
je
stc
es
out
ljmp
xchg
xchg
push
aas
call
add
movsl
dec
je
ja
cmc
sub
inc
or
rcrb
sbb
insb
and
mov
subb
inc
sub
ret
ljmp
scas
mov
pop
adcl
rcrb
jecxz
dec
rcrl
lcall
imul
pushf
es
or
sbb
cmpsb
pop
push
pop
divb
pop
sub
cmp
jmp
adc
mov
repz
notb
jmp
call
leave
dec
mov
das
lock
jae
or
sarl
adc
mov
xchg
and
fwait
xor
cmp
stc
lret
test
repz
inc
xchg
in
jne,pn
sub
inc
lret
push
cmp
pop
xor
fsts
add
shl
fwait
cmpsl
push
popf
scas
mov
pop
sar
push
imul
mov
add
mov
adc
nop
mov
fldl
ljmp
mov
sub
and
out
pop
jmp
fcomps
ret
mov
and
lea
xor
roll
push
add
pop
mov
xchg
paddq
lret
push
sahf
pop
pop
js
mov
push
ljmp
inc
mov
insb
je
shll
loope
xor
movsl
and
frstor
dec
aas
out
das
loopne
loopne
xor
mov
mov
nop
rol
test
stos
int3
flds
mov
and
mov
rcrb
insl
in
sub
push
dec
mov
sub
jns
push
jnp
mov
dec
cli
pushf
pop
shll
insl
les
in
dec
jp
sbb
test
mov
mov
pop
out
mov
and
fnsave
push
pop
push
hlt
mov
inc
add
arpl
cmp
imul
xor
mov
inc
inc
push
popa
push
sub
out
or
hlt
lahf
mov
repnz
cli
sbb
into
push
sbb
divb
rol
xchg
pop
mov
ret
roll
mov
jl
fcomp
cmpsb
mov
add
pop
imull
jae
leave
xchg
test
inc
jnp
or
dec
xchg
or
xor
and
xchg
decb
shrb
mov
pop
add
stos
jmp
dec
sbb
stc
ljmp
sti
or
pushf
add
scas
movsb
cmp
xchg
loop
fdivp
imul
ficomps
incb
leave
push
jp
pop
enter
mov
mov
cli
int3
in
shl
in
movsb
dec
pop
and
mov
fwait
leave
xor
mov
xor
pusha
leave
je
mov
loop
jnp
pop
xor
xchg
adc
ror
je
cmpsb
push
fdivrs
jg
xor
xchg
and
out
and
ret
fisubl
push
add
int
push
aad
push
sub
sahf
loope
jbe
xchg
fstpt
mov
jbe
je
aad
scas
xchg
mov
mov
hlt
icebp
jbe
out
pop
mov
adc
popa
cli
mov
push
sub
pop
in
or
sti
insl
cli
loop
jb
outsl
mov
leave
xor
adc
popf
sub
xor
cmp
sti
lds
insl
mov
mov
outsl
mov
and
aad
in
mov
fidivs
push
in
xor
test
call
cmp
incl
inc
jge
iret
mov
movsb
loope
out
inc
das
and
in
gs
sub
sub
xor
mov
stc
insl
and
inc
scas
ss
sarl
pmuludq
mov
pop
mov
push
pop
test
mov
ret
add
xor
mov
jb
jns
mov
mov
mov
ljmp
inc
ret
pop
ss
jmp
cmp
dec
inc
iret
stos
xchg
mov
pop
aam
xchg
and
orb
push
roll
lods
jl
push
cli
push
ficompl
jle
pop
ret
loopne
sub
movsl
jmp
imul
loopne
test
or
aas
movsl
mov
push
and
lret
es
shll
inc
fstpt
mov
popf
or
jg
xchg
or
inc
mov
lret
dec
cltd
pop
shrb
or
mov
scas
sub
cmp
mov
pop
call
in
pop
mov
lret
dec
xchg
sbb
fidivl
cld
inc
lea
loopne
repz
xor
inc
xlat
imul
out
stos
test
inc
xor
testl
hlt
adc
fiaddl
lcall
movsb
fbstp
cmp
sbb
pop
sarb
cltd
enter
pop
mov
outsl
ficoms
sub
pop
xchg
mov
hlt
scas
repz
fldt
mov
loope
xchg
cmc
loope
dec
mov
lret
add
sbb
popa
insl
pop
push
aam
bound
fldcw
cmp
sub
xchg
pop
and
xchg
das
or
dec
mov
mov
push
and
sbb
mov
nop
aaa
adc
or
xor
pop
sub
pop
xchg
push
cmp
push
loope
movsb
xorb
pop
add
stos
cmp
loop
xchg
ret
push
nop
imul
add
sub
jge
cli
dec
out
mov
sub
cmc
jle
add
shl
bound
jmp
pop
sub
sbb
push
or
sub
inc
push
das
inc
pop
mov
push
inc
or
cs
int3
and
mov
adc
jp
mov
mov
sti
or
aaa
mov
popf
pop
mov
inc
lret
sbb
je
pop
imul
cmp
mov
cmp
prefetch
or
mov
sbb
js
scas
push
out
and
xor
sub
cmpsl
pop
cmc
xor
loope
js
xchg
cmc
clc
xor
in
aam
repnz
outsb
adc
sub
sbb
push
andl
add
sub
js
loop
rorl
icebp
cld
icebp
push
adc
test
adc
add
les
dec
stc
call
xchg
sahf
or
dec
dec
rcrb
mov
repz
sub
imul
xchg
inc
mov
lods
jne
stc
xor
pusha
stos
and
pop
gs
mov
lea
push
bound
in
lds
mov
mov
icebp
aam
mov
and
mov
xchg
ljmp
mov
inc
inc
stos
add
fiaddl
imul
imul
repnz
sbb
push
mov
xor
icebp
test
xor
sub
fadd
scas
int
xor
pop
call
xchg
rcrb
in
jb
add
mov
xchg
xchg
mov
pop
push
sub
mov
sub
mov
into
sub
cltd
jnp
repz
fsts
cmp
jge
cwtl
xor
push
pop
push
stos
scas
sbb
adc
or
bound
lcall
xchg
das
push
and
gs
or
mov
int3
cmp
mov
mov
dec
cmc
adc
and
gs
dec
ret
pop
or
ja
data16
sub
hlt
dec
aad
or
fidivl
ds
leave
test
lret
xchg
sub
mov
mov
pusha
lea
scas
sbb
call
insl
cli
jle
inc
cmp
lret
pusha
lcall
clc
pop
mov
dec
insb
jg
jge
in
neg
les
add
test
inc
xchg
es
xchg
aam
fdivrl
xchg
jns
cltd
into
cli
push
push
fidivrs
or
and
push
idivl
fdivl
movsl
add
sbb
in
out
movsl
mov
ret
mov
add
inc
test
lods
push
hlt
divb
loopne
icebp
fs
js
pop
xchg
xlat
test
mov
leave
insl
push
add
pop
into
inc
and
into
mov
cmp
les
mov
int
jg
dec
add
sbb
push
jb
mov
imul
pop
dec
movsl
push
sub
mov
mov
and
jne
das
in
scas
push
or
ret
gs
jle
mov
add
add
daa
cs
lock
das
lahf
add
cmc
mov
lods
es
xor
push
aam
pushl
in
insl
cli
jno
int
cld
test
cmpsl
or
sbb
mov
or
in
cmpsb
jne,pn
out
push
inc
js,pn
dec
std
popf
pushf
mov
sub
ljmp
cmp
xchg
mov
mov
push
call
lods
pop
test
or
dec
xchg
jne
dec
xchg
rcl
jns
sub
pop
pusha
lahf
mov
bound
insl
dec
fcmove
enter
xchg
xchg
pop
js
sbb
hlt
test
iret
out
adc
add
addr16
cmp
xchg
mov
mov
pop
mov
mov
or
lahf
push
push
aaa
ljmp
add
push
stos
inc
icebp
jne
dec
icebp
stc
jecxz
std
repz
into
or
int3
shrl
test
xchg
mov
decl
in
aaa
or
imul
adc
sbb
push
jb
mov
pop
pop
or
dec
fs
dec
into
movsl
cmovae
jno
and
mov
lods
push
arpl
sahf
sub
pop
xor
inc
xlat
inc
and
dec
in
push
test
inc
sbb
cmpsb
inc
dec
stc
and
test
pop
test
mov
ficoms
xor
addr16
cld
inc
pushf
gs
mov
mov
push
jg
pop
pop
movsl
add
out
sbb
icebp
dec
aas
push
jp
pop
adc
popl
pushf
jnp
mov
int
imul
out
fsubrs
das
test
mov
or
add
cli
scas
test
xchg
test
loope
push
dec
es
sarl
adc
in
jbe
mov
push
out
pusha
fsubs
jbe
popa
stos
sub
call
inc
sub
inc
nop
es
mov
inc
loopne
pop
xlat
cwtl
lret
popa
insb
int3
repnz
fwait
out
and
sbb
out
aad
daa
pop
mov
add
mov
and
in
add
aad
lcall
fnstsw
fwait
adc
repz
adc
add
ds
mov
sahf
shll
aad
jg
subl
arpl
movsl
ror
test
or
and
dec
pushf
adc
dec
into
rol
push
in
cmpsl
sbb
ljmp
pop
sub
testb
sbb
test
mov
outsb
push
and
lods
pop
inc
xchg
lahf
inc
push
pop
jg
mov
bound
stos
insb
push
adc
mov
outsb
cmpb
add
fimuls
icebp
cmpsl
fadd
cmpsl
xchg
and
test
dec
cs
scas
push
mov
sub
pusha
xor
movsb
lret
lcall
ljmp
jne
mov
test
xchg
cwtl
add
in
mov
fstpl
mov
mov
add
mov
sub
outsb
dec
push
aas
and
push
pop
push
into
push
sti
mov
xor
ja
aaa
test
dec
hlt
sti
mov
rolb
aaa
dec
bound
leave
je
mov
daa
adc
stos
dec
ret
lcall
js
adc
xor
sbb
inc
ret
mov
xor
xor
int
push
fidivrs
xchg
hlt
shlb
xchg
lahf
sub
xchg
mov
sub
imul
sbb
add
sbbl
sub
mov
sub
cltd
cltd
lret
xlat
xchg
push
or
not
pushf
add
lods
mov
jbe
in
mov
pop
cmp
lods
cs
shll
repnz
jge
mov
sub
shrb
xor
in
jb
mov
repz
push
pop
sbb
xchg
or
xor
aam
int3
xchg
repz
sarl
inc
scas
pop
xchg
jp
push
cmp
mov
adc
xchg
jmp
in
dec
xor
pushf
push
popf
cmp
out
scas
icebp
jno
clc
cmp
push
fcoms
push
mov
jbe
and
in
popa
xchg
adc
loop
mov
mov
mov
or
and
xchg
add
xchg
icebp
xor
dec
jmp
cmp
inc
mov
push
jmp
shrb
das
lock
and
pop
sub
push
jl
add
lea
sbb
and
gs
or
jbe
fdivs
fisubl
cli
stc
daa
out
mov
arpl
cmc
mov
sbb
nop
adc
mov
shl
mov
and
sub
movsl
out
inc
cmp
pop
mov
les
negb
pop
mov
mov
icebp
adc
push
mov
cmpsl
jge
int3
outsl
xor
lahf
insl
jo
fstpl
jno
sub
loope
add
push
loope
in
hlt
shll
push
or
fadds
std
mov
pop
ss
out
sbb
sbb
imul
mov
adc
sub
or
adc
jg
adc
push
jmp
aam
dec
lock
pop
jne
jb
sub
inc
sbb
mov
aas
sti
aaa
insb
mov
inc
int
fs
out
xchg
add
enter
add
fwait
add
gs
mov
dec
xchg
add
fiadds
push
or
pop
ret
aaa
sbb
cltd
inc
mov
addl
fwait
adc
fdivl
cltd
lahf
test
dec
imul
or
sbb
adc
sub
ret
test
lret
ds
sub
ja
jbe
data16
popa
jle
cmc
pop
outsl
inc
sub
in
lret
xor
lds
ljmp
sbb
nop
scas
fs
aaa
hlt
push
sti
ss
dec
cmp
pop
sbb
adc
aaa
addl
push
movsb
sahf
aad
push
out
test
popf
fmul
pop
mov
gs
dec
icebp
shlb
xchg
insb
out
inc
mov
pop
xchg
pop
ds
jae
shl
xchg
ljmp
pop
js
fwait
jg
enter
inc
dec
out
out
std
shlb
push
pushf
add
fucomip
frstor
push
xchg
and
pushf
inc
mov
and
test
fs
mov
xchg
and
sbb
adc
movsb
jae
pusha
shrl
sub
lahf
mov
sub
push
or
sbb
cmp
scas
inc
out
sbb
scas
cld
lods
fwait
test
mov
or
jg
or
aas
dec
loopne
xor
cmpsl
sub
ret
lcall
xor
data16
mov
das
jecxz
enter
mov
sahf
jnp
and
shrb
shlb
rcl
pop
xor
out
les
ja
incb
cmpsl
ss
lahf
jl
insb
inc
pop
sub
sti
jmp
je
sahf
punpcklbw
out
popf
and
and
add
lods
stc
sbb
fisubrl
dec
pop
inc
adc
inc
jb
pop
and
jge
ljmp
iret
in
insb
xchg
adc
sub
or
inc
cld
scas
pop
dec
cwtl
adc
mov
mov
bound
aaa
cmp
fcmovu
mov
fstpt
mov
aaa
and
push
mov
and
repnz
push
lret
jge
int
push
mov
mov
std
movsl
movsl
pop
aaa
cmp
cs
or
cmpsl
inc
repnz
aaa
pop
inc
sbb
leave
xchg
dec
pop
adc
loopne
pusha
test
sbb
int3
arpl
arpl
outsl
adc
outsl
pop
int3
lea
cli
inc
dec
xchg
sahf
or
and
rcrb
xchg
cmp
dec
jg
out
mov
fdivl
subl
imul
jl
cmp
loope
loop
fmulp
inc
jecxz
and
jnp
lock
pop
mov
push
jae
test
jns
cmp
leave
mov
cltd
in
dec
jno
xchg
shrb
arpl
hlt
pop
mov
pop
cli
sbb
jl
xchg
adc
imul
cmp
cmp
add
xor
add
xor
push
pusha
scas
adc
pop
ja
stos
mov
stos
test
mov
int
push
dec
adc
test
sahf
mov
sahf
rorb
sarb
ja
mov
jne
dec
or
push
inc
popf
inc
fisubrl
adc
sahf
ret
xor
scas
xchg
aas
xchg
in
adc
int3
cmp
inc
jne
pop
sub
in
push
cmc
clc
scas
lahf
les
add
push
pop
fcomp
push
mov
add
xor
jbe
cmc
dec
fdivs
jnp
jo
lahf
sbb
inc
jnp
jle
inc
loop
dec
int
dec
push
sub
scas
lds
and
enter
mov
popfw
or
cmpsl
cmp
out
mov
mov
ds
inc
push
and
out
cmp
sub
mov
test
test
and
in
sbb
sbb
test
lret
data16
or
in
mov
dec
mov
push
fsts
cmp
jg
std
nop
in
ljmp
rcr
inc
inc
cld
addr16
pop
or
jge
and
add
cmp
jne
mov
xchg
clc
lret
xor
dec
or
mov
lods
imul
mov
mov
aaa
jo
cmp
aaa
lock
cmp
dec
or
call
ret
mov
sbb
out
cmpsb
rcr
enter
cltd
sahf
inc
jge
push
inc
adc
xchg
nop
xor
loopne
xchg
aad
int3
loopne
pop
fiaddl
dec
mov
mov
lret
jecxz
fcmovu
outsb
or
pop
pop
dec
cs
popa
push
aas
outsb
stc
scas
ror
mov
out
mov
clc
fwait
xor
jne
jmp
das
lret
push
insl
ret
loope
rcr
ret
sub
inc
mov
push
fwait
xchg
sub
nop
je
push
push
pop
lds
pop
lds
jb
pushf
fdivrl
stos
aam
rcr
pop
pop
inc
adc
aas
or
int
mov
cmp
adc
jle
ja
jnp
rcrb
jp
fucomi
mov
adcb
cmp
xor
cmp
sbb
jmp
mov
dec
mov
sarl
xchg
xor
stos
mov
add
jecxz
loop
mov
xor
out
push
cmp
in
rcrb
gs
adc
add
inc
loop
movsb
add
add
mov
ffree
inc
and
cli
push
adc
aas
imul
push
or
pop
push
fdivrl
movsl
clc
fimuls
rcpps
nop
fistl
stos
adc
cmc
cmp
shll
ss
ficoml
xchg
lcall
sub
pop
fdivs
cmp
inc
xor
xor
sbbl
inc
stc
cli
cmpsb
mov
in
mov
adc
dec
rorl
and
repnz
xor
cltd
pop
and
mov
jmp
dec
je
test
imul
fwait
lods
mov
pop
xor
or
roll
jp
outsb
roll
leave
sub
dec
out
adc
das
jnp
cmp
out
in
adc
pop
fildl
test
and
dec
outsl
pop
cwtl
mov
pop
stc
sbb
push
out
imul
xor
sbb
xor
lcall
or
inc
push
mov
cmpsl
jle
pop
sbb
inc
mov
jge
push
rclb
mov
pop
outsl
sar
repnz
push
pop
mov
jb
dec
adc
pop
mov
stos
fisubrl
and
ja
stos
popa
jge
arpl
push
arpl
push
xor
je
addr16
sbb
mov
xchg
dec
pop
sub
int3
push
xchg
hlt
sub
mov
call
adc
je
mov
sub
loope
repz
arpl
mov
add
pusha
cmp
add
push
sub
mov
lock
xor
mov
xchg
mov
mov
int3
scas
insl
dec
sub
loopne
pop
es
roll
fmulp
inc
jnp
ss
mov
inc
ss
xchg
sbb
add
cmc
popf
hlt
push
int3
pop
xchg
stos
dec
sub
jnp
insb
jge
dec
leave
dec
jg
add
dec
dec
aaa
pop
lret
mov
test
jmp
push
movsl
outsl
dec
in
das
imul
jg
sub
aad
sbb
mov
xchg
inc
call
jne
xchg
mov
fcompl
cmp
xchg
sub
xlat
int3
neg
scas
cmpsb
inc
mov
jg
ljmp
test
jne
ret
mov
mov
lds
pop
or
enter
or
inc
mov
mov
xchg
rolb
and
xchg
popf
mov
into
out
push
cmp
add
lret
jo
adc
push
cld
lock
cmp
call
fcompl
ret
add
loop
adc
jo
sti
inc
enter
push
pop
sarl
mov
loop
xchg
aas
lahf
lods
or
jp
in
addr16
mov
sub
add
jo
sti
and
ss
gs
in
fmuls
roll
xchg
aam
nop
and
mov
mov
and
mov
mov
pop
pop
jnp
jbe
sub
push
sahf
cmp
cmp
movl
cmp
mov
cmp
push
and
or
movsb
push
mov
bound
arpl
enter
ret
cld
stos
mov
sbb
cmp
popf
jl
cmp
insl
je
out
hlt
mov
jecxz
pusha
mov
inc
xor
sbbb
push
out
int
dec
cs
lret
mov
addr16
mov
xor
mov
test
cli
jecxz
xchg
inc
in
gs
sub
sub
mov
or
sub
leave
push
adcb
lods
js
add
popf
bound
adc
xor
xlat
lock
fcoml
test
test
iret
bswap
add
ffree
repz
xlat
int3
cmpsb
mov
cli
xchg
stos
fstpt
sub
inc
sti
inc
xor
pop
es
repz
add
xor
jbe
test
jae
enter
cmp
dec
pop
out
sbb
pusha
ss
cld
repz
inc
mov
or
inc
stos
xchg
xchg
pushf
ds
aam
inc
push
rclb
xchg
jl
mov
idivl
dec
push
cmp
add
adc
dec
insl
or
xchg
sbb
xor
pop
xor
jae
shr
iret
and
sbb
lods
pop
fpatan
jnp
pop
jecxz
repnz
fcmovnb
xor
orb
sub
mov
push
ret
xor
xchg
in
xor
test
mov
movsb
movsl
add
mov
rcr
push
outsl
adc
add
or
fiadds
mov
std
mov
negb
cmpsb
int3
add
fsubrl
inc
leave
mov
mov
xor
sahf
mov
push
roll
xchg
fsts
sub
add
out
lcall
sbb
jbe
fs
jns
jmp
je
push
xchg
dec
jae
adcb
push
mov
mov
jmp
push
daa
std
jle
dec
xchg
fbstp
and
outsb
dec
or
mov
and
in
aaa
cmp
popf
dec
stc
xchg
in
mov
cmpsb
vxorpd
in
test
push
outsl
in
aaa
xchg
push
stos
add
sub
cmpl
xor
mov
xchg
xlat
int
bound
daa
sbb
xorb
xchg
in
fldl
mov
insl
mov
push
mov
cs
cmp
insb
jb
dec
xchg
lret
shrl
sbb
pop
push
addr16
mov
sbb
mov
push
cmpsl
lahf
jmp
fwait
in
jo
xor
es
hlt
push
in
and
je
mov
adc
fsin
adc
cmpsb
clc
mov
pavgb
mov
xchg
cli
push
xchg
sti
cmp
inc
faddl
cmpsb
in
add
lret
std
nop
dec
rcl
sub
and
xchg
shrl
fistpl
std
mov
mov
imulb
jmp
xor
into
ficompl
pop
cmpsl
mov
xor
call
imul
dec
or
fs
popa
inc
cmc
adc
and
test
mov
loope
test
sub
mov
dec
push
add
dec
mov
dec
mov
xor
mov
mov
in
push
aas
add
cmpsb
addb
sbb
cmp
nop
aad
loope
mov
mov
push
jbe
fidivrs
jae
xchg
fdivrl
lock
inc
sub
push
fcomps
push
push
adcb
sbb
out
jns
call
ljmp
jle
dec
or
add
pop
jne
mov
mov
xchg
stos
daa
rol
lock
cmp
iret
repnz
test
std
or
stos
dec
mov
push
push
xchg
cld
stos
inc
pop
and
mov
mov
imul
in
jecxz
xchg
mov
and
push
add
jne
movsb
jl
icebp
lods
lcall
and
sub
xchg
loope
ss
ficoml
push
popf
loopne
shlb
lods
jae
jbe
mov
clc
std
mov
push
subb
test
dec
cwtl
mov
fildll
lcall
imul
adc
jae
jge
cltd
fcoml
inc
sti
shlb
fbld
adc
jle
imul
push
in
mov
sahf
rcrl
mov
push
int3
mov
jnp
aaa
dec
xchg
and
cmp
rorb
mov
icebp
aaa
mov
cld
push
sbbl
fistps
pop
inc
mov
sub
aas
pushf
imul
jg
addr16
in
sub
das
jmp
xor
data16
cmp
cld
sti
mov
or
sbb
mov
stc
and
in
movsl
popa
int
xchg
les
loopne
sub
or
popa
sbb
dec
xor
loop
rcrb
xchg
out
dec
loopne
xchg
test
jb
insb
cmp
gs
sub
insl
idivb
push
jl
mov
das
add
clc
push
jne
inc
pop
or
pop
cli
jl
jo
pop
sub
inc
fidivl
jge
jb
dec
dec
push
add
jg
popf
sub
ja
ja
mov
insl
inc
dec
jno
lahf
pop
jp
out
incb
stos
aad
je
test
or
in
lods
in
xchg
ficoml
sbb
xor
dec
jl
fwait
and
cltd
and
out
adc
icebp
pop
rorl
les
das
xchg
jnp
or
push
test
sub
mov
fidivrl
je
mov
icebp
cmp
lods
pop
lds
insb
ja
pop
js
popf
shrl
and
out
push
add
pop
fstp
shlb
pop
leave
insl
push
xor
and
test
pop
sbb
xorb
out
out
popl
stos
and
sbb
inc
stos
xchg
mov
pop
mov
rorb
das
mov
nop
jno
push
ja
and
inc
cmp
sub
aad
xchg
push
sbb
mov
loop
mov
jmpw
ss
mov
stc
outsb
mov
inc
fmuls
je
mov
stc
fldl
or
push
mov
xchg
roll
jns
and
push
inc
dec
ret
dec
leave
in
mov
and
mov
loop
or
mov
push
cmpsl
jo
inc
data16
shll
pusha
push
daa
cmp
in
ja
mov
das
dec
pop
loop
inc
popf
aaa
lock
push
lahf
popa
ljmp
xchg
test
lods
cli
mov
lcall
or
push
adc
sbb
das
fldln2
dec
mov
inc
or
sahf
mov
addb
dec
push
subl
sbb
scas
ljmp
loopne
fwait
mov
add
icebp
xor
xor
insb
fistpl
dec
cltd
mov
add
or
aaa
ret
sub
sub
jne
repz
in
mov
xor
push
add
dec
test
add
fwait
mov
loop
xchg
push
in
xchg
ror
mov
adcb
push
cmpsl
or
pop
addr16
jle
xor
push
shr
or
adc
dec
mov
pop
jns
popa
xchg
xlat
in
add
pop
xlat
add
out
adc
mov
sahf
pop
into
sbb
fstps
popa
mov
mov
imul
push
setge
xor
movsb
je
shll
xchg
pop
xor
pop
test
mov
loopne
dec
shll
scas
xor
push
mov
add
lahf
xlat
add
add
in
pop
bound
loop
dec
cmp
or
jl
mov
dec
lcall
add
lea
add
dec
testl
push
add
mov
push
in
ljmp
xchg
inc
inc
sub
and
fsubp
imul
popl
mov
xchg
pop
sub
mov
xchg
cmp
jno
decb
xchg
fdivl
ljmp
xlat
mov
mov
sub
dec
adcb
mov
add
xchg
pushf
loopne
ret
adc
std
fistps
cmpl
mov
mov
pusha
nop
sti
inc
mov
je
insl
sub
mov
mov
fcmovb
enter
fldpi
adc
xorb
jl
ret
ret
enter
mov
stc
hlt
in
mov
xor
lea
jmp
sub
cwtl
popa
add
pop
pop
fwait
aaa
int3
ficompl
push
jle
cli
cmp
and
jne
in
xor
lock
mov
fwait
rcrl
test
pop
shr
fnstcw
in
mov
mov
xchg
sub
in
in
xor
cmpl
xor
enter
cwtl
mov
xchg
scas
jbe
stos
aas
mov
cmpl
iret
xchg
call
mov
clc
and
in
xchg
lret
jnp
jg
fwait
and
or
fwait
cmpsb
and
mov
push
lods
dec
add
lods
adc
outsb
adc
ljmp
mov
pushl
xor
arpl
add
inc
repz
pop
cmp
sbb
pop
fcoml
sbb
mov
ljmp
loope
xchg
inc
adc
call
fsubrs
in
push
mov
loopne
pop
inc
push
incb
out
jns
push
ds
rclb
out
fcom
shlb
pop
or
cld
hlt
cli
mov
cmp
cmc
test
faddl
pop
scas
test
mov
and
or
mov
nop
insb
pop
or
mov
xor
div
push
inc
jb
clc
xchg
sub
add
push
cwtl
mov
mov
mov
imul
scas
sub
dec
jecxz
xor
jne
dec
cmp
xchg
mov
cltd
push
ret
xor
mov
shl
hlt
stc
outsb
cmp
sbb
adc
sub
mov
aaa
inc
xor
insl
pop
shrb
lock
jb
sub
mov
jmp
cmp
xchg
scas
inc
test
dec
add
push
and
movsb
fldcw
mov
mov
xor
dec
cmpsl
cmp
insl
and
mov
cmp
insb
ja
inc
mov
cmp
das
mov
cmp
popa
xchg
in
mov
aam
rcl
cmpsb
daa
into
cmp
fistl
mov
mov
sbb
nop
imul
push
xchg
cmp
rcl
insb
enter
insl
push
add
daa
push
xor
push
loop
mov
mov
dec
shrd
mov
inc
mov
call
cmp
repnz
cmovo
mov
hlt
pop
int
test
dec
lret
jno
jg
dec
cmp
or
lret
xchg
pop
rol
imul
popa
xor
xchg
pop
sub
mov
pop
and
js
push
imul
xchg
shl
lods
sub
add
pop
das
inc
scas
cmc
cwtl
push
test
dec
mov
cwtl
mov
inc
inc
arpl
fldt
xchg
add
imul
jg
aas
xor
jo
jae
add
stos
enter
inc
ljmp
xchg
ret
cmp
test
iret
sub
outsb
testb
stos
xchg
movsl
and
cmpsl
mov
insl
jne
mov
jge
cmp
sar
lods
mov
jl
mov
fisttpll
mov
jbe
xchg
xor
or
cmpsl
mov
icebp
cmp
rclb
jns
fadds
sub
fisubrl
and
inc
adc
fildll
or
imul
movsb
lahf
inc
pop
outsl
lods
lret
inc
mov
pop
test
xor
and
movsb
lcall
xor
iret
shll
lock
mov
push
pop
pop
lds
push
lods
hlt
xchg
arpl
jge
cli
in
xor
loop
cmp
mov
loopne
push
ljmp
nop
sub
das
rorb
bound
xchg
jecxz
iret
add
push
sub
pop
pop
mov
lods
roll
iret
js
dec
push
sbb
xor
stos
sbb
or
jmp
jns
push
xor
pop
fs
popa
adcb
loop
mov
inc
mov
and
mov
dec
das
inc
test
lea
fs
adc
and
hlt
cwtl
aad
pop
movsb
jns
mov
sahf
mov
je
mov
adc
clc
adc
lds
cmp
cmp
daa
cmp
stos
adc
cmp
jmp
fwait
dec
ficoml
adc
cmpsl
je
dec
js
pop
stos
insl
dec
rorl
pop
cmp
mov
out
xor
fmuls
jp
lods
push
pop
xor
rolb
xchg
push
cli
push
pop
popf
loope
xor
call
and
inc
add
mov
ja
jb
or
out
mov
sub
sub
in
add
pop
nop
sbb
daa
cmc
cmp
sub
mov
test
sub
addl
mov
sbb
fdivl
sbb
pop
aaa
sub
int
fmull
mov
repnz
repz
int3
pop
or
sbb
movsb
das
call
sbb
push
xchg
xchg
xor
sub
lods
test
sbb
cmp
inc
lret
add
xchg
cwtl
xlat
aas
hlt
das
or
clc
jnp
or
inc
in
add
imul
loop
push
pop
in
mov
jb
js
cwtl
push
or
cli
int
xor
xor
ljmp
xchg
xchg
clc
mov
adc
scas
cli
mov
shll
daa
jo
sub
insl
and
ljmp
push
push
xchg
cli
xchg
roll
add
fdivp
clc
lods
sbb
ror
sahf
push
xchg
mov
jecxz
stos
mov
cmp
pop
sbb
adc
mov
jle
mov
ret
pop
in
adc
leave
cmp
sbb
int
mov
arpl
pushf
or
je
das
in
pop
mov
jle
pop
xchg
aas
or
les
xor
je
std
or
mov
cmp
lea
gs
mov
scas
adc
rorb
mov
jno
shll
in
mov
lret
in
loopne
bound
jns
insl
xor
subl
jne
xor
adc
outsl
lods
pop
lock
xor
pop
cmp
ret
subl
insb
pushw
mov
pushf
je
testb
iret
test
ror
inc
cmpsb
mov
xor
dec
mov
mov
mov
jns
xchg
add
iret
pushf
leave
adc
lods
mov
push
fldcw
sbb
xor
xchg
pop
rcll
ds
in
std
jbe
push
je
ss
jmp
mov
cmpsl
jg
push
push
pop
sbb
jbe
mov
add
lret
ja
sbb
enter
lock
sbb
mov
and
mov
cmp
shrl
mov
mov
sahf
jge
pop
je
test
arpl
mov
scas
fisubrs
inc
fst
dec
int3
test
lock
shrl
gs
in
jbe
div
mov
push
fnstsw
jecxz
xor
pop
push
sti
lods
pop
repnz
xchg
xchg
cmc
jno
sarl
push
jne
mov
xor
or
leave
mov
int3
mov
and
and
add
adc
lea
aam
popa
in
clc
jge
pop
push
ds
test
or
inc
and
push
or
sbb
sti
out
inc
pop
xchg
lods
jbe
pop
pop
daa
out
insl
inc
fistps
clts
andl
je
call
xor
and
lods
int3
push
call
add
js
or
les
sbb
lods
shlb
xchg
adc
add
fwait
roll
push
dec
mov
adcl
aaa
js,pn
test
mov
mov
fwait
int3
mov
inc
imul
inc
popw
adc
cmpsb
int
mov
aaa
pop
jo
mov
lret
test
jb
mov
pop
rcrl
stos
add
mov
iret
repnz
outsb
fcoms
push
jb
lret
orl
es
xchg
fisttpl
mov
pop
leave
bound
aas
js
pop
aad
fsubl
xor
lret
push
sub
sub
aam
pop
add
cld
jecxz
sbb
std
mov
mov
push
sahf
js
or
xchg
lock
js
hlt
pop
xchg
mov
mov
fnstsw
dec
dec
jmp
mov
and
pop
pop
dec
scas
push
mov
add
mov
into
addr16
or
xchg
inc
pop
ds
jns
mov
mov
movsb
jo
cli
mov
je
sub
fstps
mov
jp
pop
mov
pop
inc
hlt
mov
bound
fldcw
jo
pop
mov
idivl
mov
jge
lock
fstl
jno
jno
nop
push
mov
xchg
add
clc
std
das
adcl
cs
fidivs
in
push
pop
sub
sbb
xchg
lds
in
add
mov
inc
push
mov
mov
mov
orl
jne
cmp
cmc
fwait
aam
cld
pushf
xlat
and
inc
and
repnz
or
bound
inc
cld
sarb
add
fbld
mov
into
pop
sbb
adc
add
add
adc
pop
xchg
inc
in
fisubrs
mov
vmread
push
push
daa
out
dec
cmpsl
fcmove
mov
xchg
mov
and
dec
or
in
jbe
xchg
ds
test
or
lods
lods
mov
daa
sbb
pop
gs
es
int
imul
push
arpl
rorb
cmc
fcmovnbe
fwait
iret
fwait
mov
stos
dec
dec
lods
pop
xchg
add
mov
aaa
out
les
enter
pop
sahf
push
pushf
jae
bound
mov
add
aas
mov
pop
mov
imul
jle
adc
out
jecxz
shll
lods
mov
fdivs
sub
inc
sub
shll
cli
loopne
push
push
ljmp
aaa
shlb
repnz
loop
cli
xchg
lock
mov
pop
test
scas
int
or
push
add
jmp
and
cld
lahf
insb
sbb
jne
adc
or
mov
in
daa
in
add
lock
out
icebp
mov
iret
adc
cmp
movsb
inc
sub
repz
xor
rclb
pushl
bound
out
push
jb
pushf
cmpsb
test
adc
xchg
out
lea
std
insl
clc
repnz
mov
mov
jne
push
jmp
inc
fcompl
xchg
pop
addb
cmpsl
sbb
push
add
std
sti
lock
jnp
push
adc
push
rorb
pop
mov
bound
sub
sbb
mov
mov
mov
push
stc
lea
popa
adc
jo
xchg
aad
data16
repnz
int3
test
in
xchg
dec
js
jge
sub
stc
aad
jg
mov
les
dec
imul
sub
hlt
xchg
and
adc
xor
or
imull
xchg
pop
cli
ret
or
pop
int3
push
fldcw
jg
or
stc
es
adc
push
push
mov
lcall
int3
xchg
jns
out
pushf
dec
repnz
mov
adcb
lds
cli
adc
les
sbb
inc
aam
lods
mov
popa
cmc
popf
ja
loop
shll
mov
inc
sub
subb
xor
cmpsb
mov
sub
sahf
je
mov
or
ljmp
adc
je
scas
mov
push
push
lret
lret
xlat
push
nop
jno
inc
shl
push
mov
adc
dec
adc
shl
push
push
push
adcl
mov
push
out
stos
pop
inc
xchg
outsb
push
sbb
jnp
cmp
xchg
push
xchg
mov
out
mov
xor
arpl
cli
leave
add
jge
ret
int3
push
mov
cmp
pop
adc
push
or
mov
vaddsubpd
cmp
xchg
cmp
insb
out
adc
pop
fdivl
test
jno
stc
dec
jle
cmp
cli
inc
cmp
popa
fldt
rcr
add
orl
push
outsb
xchg
pop
xchg
and
push
jae
dec
or
jmp
dec
out
add
dec
stc
push
jnp
xor
mov
pop
mov
shrl
roll
jp
imul
imul
cmp
movb
movd
std
loop
sub
lods
fsubs
addl
aaa
aaa
ja
pop
sbb
sub
xchg
filds
loope
jo
out
hlt
das
push
add
add
das
sti
ret
adc
addr16
dec
mov
adc
les
mov
stc
mov
cs
cld
scas
test
jo
stos
lods
jo
loope
mov
push
out
mov
xor
cmp
test
dec
push
mov
imul
mov
xchg
xchg
aad
out
scas
ret
push
sub
rclb
aaa
fwait
mov
mov
icebp
mov
cmp
pop
sub
nop
xor
mov
inc
cltd
sub
sbb
daa
data16
aam
inc
repz
daa
mov
lcall
mov
xor
xor
mov
inc
loop
lods
loopne
sbb
clc
dec
or
mov
and
shlb
lret
in
inc
aad
cmp
dec
sti
in
inc
sarl
filds
pop
cld
pop
pop
push
sub
dec
ljmp
mov
out
iret
cmpsl
mov
jae
das
out
pop
outsb
sbb
fidivs
sar
repz
xchg
filds
lods
push
inc
scas
pop
call
lock
sahf
lcall
das
pop
adc
subb
pop
je
cmp
xlat
movsl
int3
mov
sub
push
mov
imul
and
cmp
scas
andb
dec
sub
mov
loopne
orb
xchg
loopne
int3
adc
fsts
sbb
adc
sbb
mov
and
nop
aaa
or
xchg
mov
sub
xchg
ljmp
ss
adc
mov
stc
adc
cld
int3
mov
adcl
push
icebp
sbb
or
lcall
mov
rcrl
shll
mov
out
aas
xchg
pop
sub
mov
mov
int3
mov
jns
sti
gs
xchg
inc
adc
pop
cmp
int
mov
imulb
push
js
bound
out
hlt
sub
push
dec
inc
push
imul
out
leave
lret
mov
cmpb
and
and
push
popf
push
cltd
xor
mov
add
aam
addr16
mov
loop
fwait
add
movsl
add
sub
movsl
test
inc
mov
lcall
dec
jp
insb
jle
xchg
out
sbb
or
cld
xchg
fsubrl
js
jb
sarb
jb
adc
push
and
lods
std
rcll
lcall
dec
cmp
iret
ljmp
leave
mov
out
xchg
mov
insl
fiadds
mov
scas
adcl
inc
sahf
or
test
mov
inc
test
jg
arpl
xchg
pop
aas
scas
xchg
call
ds
lcall
xchg
or
sti
enter
and
push
inc
dec
mov
cmpsl
push
push
mov
aaa
and
push
lds
sub
and
stc
divb
fwait
cmpsb
push
sbb
les
push
in
ret
mov
pop
dec
popa
adc
jge
sbb
fldcw
cmpsl
push
pushf
mov
stos
shl
mov
push
pushf
imul
std
jno
rorl
bound
das
pushf
stos
imul
gs
jl
mov
cmp
jb
int
add
jmp
push
cs
leave
cmp
sub
xor
mov
data16
cwtl
mov
insl
inc
nop
inc
pop
mov
les
push
jge
jg
es
xchg
mov
jno
fsin
cmpsb
sbb
add
rcr
dec
sbb
jnp
and
inc
mov
pop
inc
sub
mov
or
or
xchg
fildl
ja
cmp
xor
clc
sbb
dec
pop
push
or
sub
movsb
mov
or
sbb
add
mov
jo
lcall
cmpsl
nop
scas
std
lods
fs
imul
add
cmp
sarb
xchg
inc
jg
pop
clc
push
push
iret
jp
add
shlb
mov
jmp
imul
mov
add
dec
sbb
dec
dec
dec
ss
or
shrl
push
or
ljmp
mov
push
scas
mov
pop
and
push
int3
sbb
add
inc
push
int3
mov
xchg
cmp
fbstp
ljmp
mov
jp
sub
xor
cmp
mov
inc
shrl
lock
call
out
daa
jp
les
call
dec
xchg
dec
cmp
or
pushf
ljmp
push
cmc
or
pop
dec
mov
gs
dec
or
sti
test
mov
in
inc
mov
aad
push
mov
add
cmpsl
xor
cwtl
mov
mov
sub
jb
out
pushf
testl
pop
pop
sarl
subl
mov
ss
in
push
popa
dec
daa
in
lret
sub
loop
adc
push
das
clc
xchg
xor
jg
leave
lock
push
sub
mov
das
sbb
es
int
mov
ret
lods
repz
mov
sbb
xor
mov
mov
jg
mov
sub
pushf
mov
and
sub
scas
adc
push
in
sahf
out
and
cmp
and
adc
mov
mov
shl
mov
insb
bound
add
jnp
decl
or
out
nop
or
test
xor
outsb
int3
xchg
and
aaa
xchg
mov
push
sbb
testl
stc
lret
cmp
outsl
std
mov
lahf
push
fimuls
push
mov
pop
sahf
int3
icebp
jnp
jns
jb
scas
sub
cld
xor
mov
jnp
pop
mov
sub
clc
arpl
in
push
and
lcall
sbb
jmp
hlt
inc
or
pop
dec
xchg
jp
popa
jno
jb
popf
cmc
fldcw
xor
imul
mov
scas
lock
lods
xlat
cli
aaa
mov
aas
inc
xor
jnp
xchg
test
push
cmp
aam
sub
jo
xor
js
adcl
inc
cmpsl
push
push
in
cmp
ficomps
mov
test
dec
bound
mov
pop
pop
repnz
divl
rclb
xchg
fstpt
xlat
dec
jnp
std
jle
mov
pop
dec
rcr
enter
mov
mov
mov
adc
adc
cmp
pop
sub
push
in
jne
sub
jge
xor
cld
loop
mov
aaa
sub
cmp
imul
jo
push
inc
arpl
ljmp
xchg
sbb
aaa
ds
mov
sub
fsts
mov
imul
add
in
fucomp
movsl
in
test
fidivrs
sub
inc
fisubs
pop
insb
cmova
push
inc
jbe
xlat
dec
or
lahf
test
dec
addl
jb
jae
jge
out
add
push
xchg
pusha
punpckldq
xlat
jl
lea
pop
mov
xlat
adcb
sbb
dec
fwait
rcr
loop
push
sub
push
or
and
add
bound
cmc
jae
outsl
fmuls
fs
popf
dec
mov
or
rcrl
aam
add
inc
sub
jae
jmp
shrb
addb
push
lods
xchg
jmp
notl
sbb
nop
js
es
fnsaves
add
lock
mov
push
xchg
push
push
je
outsb
test
push
fucomip
push
stos
pop
pop
mov
xor
or
inc
out
push
and
lret
scas
mov
ds
cmpsl
imul
jge
adc
rorb
jmp
int3
mov
push
std
frstor
jbe
inc
inc
out
mov
xchg
das
dec
pop
xor
movsb
adc
cmpsb
out
out
int
or
imul
jb
xlat
jmp
lods
xlat
les
fistl
lods
cld
or
pop
pop
sar
mov
adc
jno
divb
or
jg
gs
fdivr
mov
aaa
add
sbb
cmp
xchg
xor
div
jnp
push
scas
lret
popa
stc
orb
leave
xchg
sbb
lahf
xorl
data16
dec
add
xchg
sbb
push
jge
call
fisttpll
mov
int
sub
cs
push
pop
pop
dec
pop
stc
mov
jmp
mov
mov
ficoms
fwait
xchg
add
jnp
mov
loope
fs
mov
xchg
mov
stos
insl
pop
stos
arpl
popa
bound
addr16
jbe
inc
gs
test
xchg
bnd
mov
jecxz
lcall
mov
xchg
aam
bound
xlat
add
and
test
xchg
lods
je
add
aad
dec
cmc
sbb
test
mov
jge
xchg
sbb
dec
inc
cmpsl
les
jbe
jle
mov
pop
clc
push
push
insl
sub
add
xor
movups
shll
jbe
into
mov
mov
repz
pop
sub
data16
iret
adc
mov
loopne
ret
add
ret
dec
iret
fs
roll
jno
jmp
jno
sub
push
inc
roll
jg
cmp
rcl
sub
test
adc
imul
push
jne
add
cmp
ficomps
pusha
and
fnsave
push
test
jecxz
clc
xorb
iret
ret
rorl
cmp
jecxz
filds
and
adc
std
or
mov
call
sub
mov
loope
mov
lea
push
and
cmp
xor
dec
inc
filds
jnp
pop
test
add
jge
fcomps
test
xchg
and
push
pop
rorl
data16
mov
leave
insl
fldenv
mov
xchg
push
jae
xchg
ficomps
lods
enter
fcoms
int
push
inc
push
iret
sub
je
sbb
cltd
mov
out
dec
fldl
jno
xor
inc
enter
add
and
aam
call
enter
cmp
jno
stc
mov
jns
xor
and
iret
pop
dec
not
cmp
loope
insl
mov
add
push
jne
adc
mov
xchg
insl
inc
pop
addr16
outsb
cs
out
pusha
sbb
sti
loopne
jb
popf
jp
fisubs
insb
insl
mov
das
into
and
dec
outsl
sbbb
sbb
jb
mov
cltd
xchg
jl
stos
sbb
ja
xchg
repz
mov
jecxz
xchg
ss
out
gs
imull
mov
cltd
insl
jnp,pt
into
xor
test
adcl
stos
rorl
mov
sub
movsb
shll
popf
xchg
jb
cmp
pop
neg
ljmp
into
mov
pop
enter
dec
inc
or
lcall
pop
mov
cmp
sbb
add
iret
ret
pop
stos
out
repnz
aam
jbe
stos
and
pop
movsl
adc
pop
cli
insb
test
inc
or
push
jo
addr16
xchg
xchg
insl
xlat
movsl
popa
xor
sub
add
stos
dec
lret
mov
pop
imul
cld
jae
push
xchg
pop
lcall
cmpsl
sbbb
jle
xchg
cwtl
mov
lcall
cmpsl
adc
arpl
push
xchg
pop
cmp
lahf
adc
jae
pop
cmc
popl
sbb
or
cli
mov
xchg
ret
sub
sti
sbb
inc
adc
cld
mov
sbb
rcr
mov
popf
xor
ds
adc
dec
add
mov
test
mov
rorb
arpl
push
mov
jbe
int
repnz
mov
or
mov
mov
pop
sub
xlat
dec
inc
mov
push
add
sub
aaa
stos
bound
shlb
inc
mov
fisttps
iretw
inc
fwait
cli
mov
jo
jmp
add
mull
lret
sub
and
adc
inc
adc
shlb
sub
inc
dec
lret
faddl
mov
insb
pop
xchg
add
push
pusha
call
addl
jle
lahf
sahf
sti
xchg
xchg
lahf
mov
and
fs
push
test
mov
push
lret
out
push
subl
mov
push
lahf
xor
test
xchg
sub
outsl
out
rolb
dec
xchg
push
dec
mov
or
aaa
enter
dec
out
fwait
adc
popf
inc
aam
jno
andl
outsl
repnz
mov
outsl
dec
adc
push
loope
test
addl
bound
cmp
adc
hlt
sub
inc
adc
mov
pop
es
push
push
adc
dec
rcrb
std
lods
jecxz
enter
lret
lods
je
push
or
cmpsb
push
push
sub
jnp
xor
icebp
jmp
stos
cmp
out
jmp
jbe
iret
addr16
sti
lcall
std
pusha
imul
dec
in
sub
movsl
and
or
repnz
int3
sub
and
pop
loopne
mov
jnp
in
xchg
rcr
rolb
mov
lods
scas
cmc
cmp
jmp
adc
and
mov
andl
les
cmp
hlt
in
hlt
xor
fmuls
repz
cmp
inc
add
and
stos
pop
pop
imull
out
shlb
data16
cmp
mov
pop
sub
cmpsl
out
cmpsb
test
pushf
inc
jns
add
inc
cltd
test
sub
xor
inc
test
ja
out
mov
xchg
push
movsl
add
inc
bound
add
dec
add
cs
xchg
inc
aaa
and
and
nop
pop
or
jp
add
pop
call
lahf
out
sbb
mov
dec
push
push
pop
fnstenv
jnp
cli
leave
outsb
or
insl
jg
std
repnz
mov
dec
ljmp
popf
add
ret
or
xchg
les
in
addb
xor
sti
out
aaa
mov
mov
or
mov
jo
mov
jge
stos
push
inc
into
das
fistpl
aad
ljmp
sub
or
push
je
imul
mov
stos
fmull
push
and
aad
adc
or
push
sub
inc
xlat
pop
jo
lock
rorb
add
in
lcall
je
frstor
popf
jmp
cmp
mov
cltd
inc
lea
dec
mov
pop
rcll
pop
dec
dec
movsl
xchg
mov
pop
stos
into
adc
pop
ljmp
vmread
cmp
add
inc
xchg
imul
jmp
leave
push
lret
adc
sar
bound
fidivrs
call
pop
push
or
mull
dec
push
shlb
jl
cmova
out
stos
fisttpl
sub
fxch
inc
ret
jns
imul
out
ret
push
cmpsl
xchg
hlt
in
jne
pusha
pop
cwtl
inc
imull
xchg
adc
adc
pusha
mov
pop
lock
clc
enter
mov
enter
sbb
jecxz
lret
push
push
fstps
lahf
sarl
mov
outsl
sbb
pop
mov
out
xchg
inc
scas
xchg
mov
cwtl
and
xor
cmpsb
outsb
lea
arpl
sbb
or
jae
imul
adc
outsb
mov
pop
jmp
mov
inc
out
add
sarb
scas
lret
inc
mov
aaa
lret
in
push
sub
call
insb
cltd
jl
jge
and
iret
in
out
push
pop
jge
cmp
movb
sarl
lds
mov
xor
xchg
xchg
push
pop
inc
ficoms
jge
adc
shrl
rcrb
cmp
sub
imul
sub
loope
test
jp
shll
cmp
icebp
test
enter
lock
dec
xchg
pop
jmp
push
test
dec
sub
cwtl
jecxz
mov
into
or
es
or
ret
adc
aam
mov
inc
sti
jo
dec
test
test
inc
xor
mov
or
movsb
mov
mov
mov
pop
loope
mov
ret
push
inc
mov
pop
andb
jnp
aam
and
mov
leave
fcmove
std
cmp
and
repz
in
and
mov
jle
and
xchg
sub
pop
add
mov
outsl
pop
xor
lods
cmp
adc
push
inc
fnstenv
idivb
xchg
leave
loop
or
mov
cli
push
mov
pop
adc
orb
or
inc
mov
inc
inc
dec
stos
add
loope
dec
inc
cltd
idivl
leave
dec
push
jnp
lods
adc
jmp
gs
idivb
cmp
sub
aas
dec
clc
dec
jns
stos
int
lods
idivl
mov
adc
out
sbb
push
test
xchg
push
andl
fcom
pop
hlt
rdtsc
xchg
xor
push
fbld
in
ret
xabort
andl
or
lea
jl
out
xchg
lds
push
mov
inc
imul
pop
pop
int3
clc
add
repnz
lret
mov
xor
fdivl
test
push
enter
enter
pop
cmp
ja
pop
fnstenv
iret
sbb
fcmovnu
stos
xor
cmpb
loopne
mov
ds
push
sub
sbbb
stos
inc
xor
scas
repz
sbb
popf
fildll
popf
and
mov
jp
sbb
mov
pop
and
call
ljmp
add
cmp
leave
mov
inc
pop
div
sub
int3
popf
mov
mov
jns
outsb
test
jl
sbb
pop
xor
ja
mov
push
inc
mov
mov
pop
scas
jmp
filds
or
xlat
es
inc
jnp
pop
adc
and
js
mov
sahf
cmpb
dec
mov
and
add
into
mov
inc
or
mov
stos
ror
loop
jp
xchg
jmp
cmp
cwtl
cmp
sbb
dec
add
out
fcoml
fmull
mov
inc
pop
jp
or
icebp
mov
out
jp
scas
fcmovne
stc
movsb
loopne
idiv
incl
outsl
jb
push
cmc
pop
shll
mov
jo
imul
lock
nop
mov
test
addr16
vmwrite
out
xchg
pop
xchg
ficoms
divb
adcl
mov
xor
adc
pop
adc
jg
jmp
outsl
jae
push
clc
add
cmp
cmc
inc
cwtl
xor
and
and
ljmp
dec
or
lods
jl
dec
adc
fsub
pop
pusha
mov
push
fldt
xor
in
pop
test
dec
inc
fildll
pop
mov
in
sub
lahf
vmovshdup
push
mov
in
out
mov
outsb
mov
push
xor
int3
jo
out
and
jmp
sbb
pusha
daa
push
inc
aas
adc
outsb
cltd
addr16
out
std
jl
out
add
xchg
push
popa
rorl
pop
inc
mov
pop
jno
jle
push
call
in
mov
clc
sub
loope
ret
xchg
xor
jbe
inc
push
xchg
out
fdivl
sbb
lret
xor
rolb
or
mov
fwait
cmp
jecxz
adc
je
movsl
aas
xor
sarl
add
popf
das
mov
ss
dec
pop
dec
cmp
and
aam
pop
rcll
sbb
xor
rolb
sti
in
xor
xchg
int3
dec
repnz
mov
fstpl
lods
cmpsb
clc
sbb
push
mov
testl
xchg
daa
ja
lcall
loop
test
out
rolb
enter
in
mov
jp
pavgb
mov
rorb
dec
sbb
subb
add
fcoml
lret
jge
pop
fidivrl
pop
sub
xchg
adc
mov
ja
xchg
and
out
mov
sub
in
lea
add
stos
mov
sub
int
mov
push
push
jge
jl
jl
pop
jecxz
sti
cmp
mov
imul
and
adc
loop
cltd
jae
mov
mov
call
ljmp
mov
and
xchg
push
mov
pop
aad
clc
jbe
out
mov
leave
or
ja
or
aad
inc
push
sbb
loop
es
out
jle
fadds
mov
jne
iret
jg
inc
dec
mov
mov
fwait
and
scas
mov
adc
das
and
stc
mov
fistps
fsubr
and
jmp
fisttpl
scas
sub
cmp
lahf
sbb
ss
push
and
lret
jmp
pushf
jp
sbb
es
daa
imul
mov
dec
sub
xor
fcom
mov
jg
andb
stos
mov
std
outsb
out
mov
outsb
out
shlb
push
lcall
mov
enter
add
outsb
push
out
mov
or
push
popf
rcrl
mov
and
and
jno
mov
or
mov
sub
fbld
adc
cmp
cmp
test
adc
or
xor
xor
jbe
add
add
push
cmp
insl
or
fisttpl
out
jle
pop
je
outsl
js
insb
mov
mov
mov
je
les
arpl
mov
inc
add
aam
rolb
mov
outsb
test
pop
push
sub
jns
icebp
imul
addr16
inc
and
xor
adc
cmp
std
bound
and
inc
mov
dec
ja
inc
sbb
add
lods
insb
loop
rorl
ret
in
xlat
lods
add
xchg
fcoml
and
add
iret
jge
in
loope
sub
adc
mov
rcrl
movsb
cmp
gs
lret
pop
ret
push
mov
notb
mov
shrl
xlat
out
out
mov
inc
mov
stc
pop
loopne
mov
xor
in
hlt
jge
std
cmp
int3
dec
or
adc
dec
loope
jno
cmpl
mov
insb
shll
add
mov
jmp
lahf
or
jmp
adc
mov
xor
push
arpl
call
fdivrs
pop
mov
fwait
pop
jg
push
imul
jnp
cmpsb
pop
test
jbe
insb
imul
in
jle,pn
ljmp
jb
push
lock
adc
cld
imul
clc
scas
test
ss
push
fs
cmp
lahf
lea
inc
push
sub
rclb
pop
scas
sbb
subb
lods
std
lods
fwait
mov
dec
push
sbb
dec
mov
cmc
mov
mov
cltd
out
adc
pop
out
in
mov
xlat
jb
cmc
add
imul
xchg
xchg
pop
adc
outsb
adc
sub
roll
sbb
pop
xchg
push
iret
lret
pop
mov
mov
jo
push
adc
scas
and
add
xor
adc
into
mov
add
ja
sarl
dec
sbb
jbe
or
mov
out
sub
mov
stos
jno
andl
adc
mov
std
jl
out
adc
lahf
loop
push
jne
xor
mov
pop
imul
dec
add
sbb
lahf
mov
shrl
data16
dec
repnz
inc
shlb
ss
pop
pop
xchg
mov
pop
mov
pushf
shrl
push
scas
sub
hlt
cmp
mov
dec
popf
fldcw
inc
movsl
xchg
scas
sbb
sub
leave
pusha
cwtl
movsl
sub
fisubrl
aam
inc
test
in
sarl
and
and
xor
es
push
adc
call
push
dec
xchg
ja
mov
cli
adc
fnsave
jmp
cmpsl
repz
cmp
je
ret
add
jae
andb
repnz
cmp
cwtl
in
mov
out
rcl
cmpsl
xchg
jbe
inc
jg
jae
es
ds
cmp
mov
mov
leave
jne
pop
jl
imul
movsb
xchg
mov
push
std
jns
fiaddl
xor
push
out
xor
in
stos
and
lds
sub
push
in
mov
repz
cmp
push
xor
test
sbb
mov
jne
scas
in
mov
fnstsw
out
ret
pop
stos
xchg
jbe
sub
sbb
stos
insb
xlat
sub
xchg
js
out
dec
mov
sub
adc
movsb
popa
sub
or
push
imul
iret
lds
mov
aam
jae
xchg
jmp
fadd
out
cld
movsb
and
add
push
push
cmp
mov
xor
xchg
jb
das
pushl
xor
sbb
repnz
pop
jae
mov
adc
add
sub
xchg
jb
out
sbb
inc
mov
xchg
push
xchg
dec
push
mov
adc
js
inc
mov
inc
dec
adc
mov
clc
outsl
cwtl
daa
and
mov
xchg
pop
dec
add
cmpsb
loopne
roll
and
dec
cwtl
les
adc
cmp
push
dec
les
loop,pn
mov
mov
ret
test
adc
mov
xor
sbb
aad
lods
ljmp
jecxz
in
inc
pcmpgtd
clc
out
int
pop
popa
leave
lea
cmpsl
jg
stos
imul
cwtl
adcb
ss
flds
dec
cs
dec
gs
inc
fisubrl
cmc
push
repz
sub
mov
out
dec
icebp
mov
pushf
iret
iret
sub
cmp
add
rorb
add
cmpsl
sub
push
sbb
ljmp
mov
popf
dec
dec
adcl
xchg
xchg
leave
adc
es
jg
fs
sbbl
pusha
js
jb
pop
cmp
lods
shl
in
inc
fwait
mov
icebp
rolb
sbb
sub
mull
dec
inc
shl
jmp
out
aad
pusha
dec
dec
enter
sub
movlhps
movsb
cmp
dec
aam
xchg
dec
xchg
pop
out
cmp
out
adcl
sbbb
adc
dec
mov
jmp
dec
mov
push
dec
xor
mov
testb
arpl
sub
into
push
add
xchg
nop
aas
movsl
jecxz
outsb
mov
push
jne
add
add
add
xchg
fisubs
out
push
xor
jge
xor
in
out
data16
mov
notl
mov
sbb
xchg
andl
adc
and
mov
testb
imul
sbb
sbb
cmp
hlt
sub
shll
leave
arpl
test
push
add
adc
cs
sbb
imul
sub
jp
data16
movsl
mov
inc
mov
adc
adc
movb
push
sub
push
mov
outsb
add
cmp
lahf
fwait
sbb
mov
inc
pushf
mov
das
pop
bnd
push
push
in
sub
jbe
mov
sub
cmp
sub
jmp
loope
jmp
xchg
sub
pop
push
pop
data16
lods
xor
in
xlat
ret
iret
push
xchg
orb
sbb
or
data16
jns
xchg
loopne
xor
sbb
imul
mov
add
out
push
mov
aam
imull
shll
sbb
xor
aam
imul
xor
push
mov
imull
in
inc
jp
std
ret
divb
rol
rcrl
xchg
mov
cli
push
andl
fidivrl
inc
mov
out
ss
sbb
int3
je
inc
xor
push
sbb
cmp
shlb
data16
mov
lock
push
inc
inc
inc
fnsave
bound
loop
sbb
enter
sub
cmc
movl
xchg
push
loopne,pn
pusha
stos
xchg
xchg
cmpb
mov
cmp
mov
mov
int
adc
mov
rcl
cmc
addr16
lock
repnz
jecxz
daa
add
jbe
mov
pushf
mov
pop
push
mov
test
and
mov
and
lcall
jmp
cmpsb
push
out
push
lea
inc
xchg
mov
mov
and
lds
xlat
xorb
and
fwait
xchg
jbe
xlat
loope
adc
mov
pop
sub
cmp
mov
orb
and
jb
mov
xor
jmp
add
jmp
cmc
add
lock
cmp
gs
das
mov
std
aad
jnp
outsl
jb
pop
cmc
mov
mov
idivb
iret
cmp
jmp
loop
outsl
enter
out
leave
cmpsl
add
das
pop
insl
jp
or
stos
jae
jg
add
insb
xor
psubb
xchg
jmp
push
and
cmp
xor
mov
push
test
in
jno
mov
cld
push
mov
push
push
pop
mov
inc
daa
popf
movsl
xchg
gs
cmpsl
or
or
test
add
leave
mov
sbb
adc
pop
dec
call
cmpsl
ss
mov
jl
pop
bound
rorb
adc
pop
push
inc
sub
push
call
loop
xlat
insl
bnd
mov
xchg
xchg
fwait
adc
add
pop
ss
or
dec
jl
dec
out
andb
adc
bswap
adcl
pop
outsb
out
cmp
cmp
push
cmp
ljmp
mov
sub
inc
jp
dec
neg
mov
or
ljmp
fidivs
mov
mov
xor
push
fdivl
or
inc
jns
stos
popf
in
pop
lods
cmp
mov
cmp
dec
mov
ficoml
std
cmp
sbb
inc
adc
imul
push
xchg
pop
jbe
cli
xchg
or
push
outsl
mov
pop
mov
cld
test
cli
mov
cld
mov
jmp
add
push
jp
pusha
adc
clc
sbb
adc
dec
and
jg
pop
mov
xchg
loope
or
mov
sub
ficompl
rcll
pop
xor
xchg
in
pop
mov
jl
inc
insl
pop
push
push
insb
loope
xchg
or
xor
sbb
loopne
shll
out
je
pop
fisubs
cmp
aam
outsl
in
mov
outsb
and
pushf
fldenv
and
cmp
or
sub
test
fidivrl
push
and
adc
mov
sub
mov
orb
fildl
arpl
fld
sub
xchg
arpl
aam
adc
push
jno
cs
jmp
inc
ret
test
hlt
adc
xchg
xchg
inc
aad
imulb
ja
jo
push
imul
cmp
out
aaa
andb
or
sub
lret
mov
rclb
gs
shlb
test
fistl
or
lea
fucompp
or
lock
das
xor
pusha
cld
inc
add
pop
std
jb
push
xor
and
std
xchg
push
notl
mov
loopne
addl
xchg
xbegin
xlat
lahf
dec
icebp
andl
mov
xchg
push
mov
fnstenv
xchg
fistl
and
mov
xlat
sub
inc
sub
cmp
test
inc
ss
jno
cmp
pop
inc
int3
icebp
sub
testl
ffreep
pushf
gs
lock
mov
lods
jge
je
shl
mov
fnsave
xor
jnp
popf
sahf
nop
cmp
inc
pop
imul
out
fdivrl
xchg
in
enter
push
out
fwait
ja
jnp
jns
loop
insl
lods
sarb
mov
cmpl
jbe
xor
imul
stos
dec
push
scas
mov
loop
pop
mov
mov
xor
stos
test
jo
jno
pop
imul
sub
dec
inc
dec
sqrtps
or
nop
xchg
xor
mov
xchg
fwait
or
mov
in
mov
clc
xlat
xor
mov
xchg
pop
pop
or
push
sbbl
out
js
dec
scas
movsb
cli
push
mov
les
cmp
add
out
cltd
out
sub
jmp
mov
stc
dec
mov
push
clc
jno
ret
xchg
sti
add
cli
xchg
cld
xor
push
xor
outsl
dec
leave
cmp
rcrb
cwtl
pop
fstps
addb
cmp
clc
aaa
popf
push
jb
shr
dec
xor
mov
sub
mov
ror
dec
rorb
push
inc
stos
addr16
adc
inc
ja
mov
mov
imul
popf
mov
jns
cmp
orl
inc
or
mov
pushf
xchg
test
fpatan
stc
mov
movsb
push
ljmp
inc
call
sti
setnp
push
mov
jae
xchg
into
jo
sub
xchg
add
js
test
sar
insl
sub
mov
pop
outsl
push
mov
jo
mov
xor
lahf
outsb
mov
push
lods
jbe
std
xorl
cmp
cmp
adc
int3
push
adc
pushf
notb
icebp
dec
lds
cs
imul
mov
sbbl
fwait
dec
loop
fmuls
aad
sbb
out
cli
fdivl
pop
xchg
pop
and
jae
mov
ss
sub
xor
sbb
icebp
mov
xor
cltd
adc
mov
xor
sbb
divl
sub
cmp
repnz
cmp
ret
mov
xor
add
push
adc
movsl
fwait
shrl
dec
add
lahf
jnp
fs
aam
or
and
mov
scas
add
in
or
xor
inc
add
data16
aas
imul
jl
sbb
mov
sub
outsl
and
mov
jp
add
popf
test
mov
js
xchg
lods
daa
clc
xor
ret
lret
stc
mov
hlt
dec
inc
sub
lcall
sub
test
push
mov
dec
or
icebp
push
inc
insb
insl
dec
movsb
adc
xchg
and
mov
inc
int
mov
jo
sbb
sbb
cli
sub
mov
cmp
fcomps
outsl
movsl
test
push
dec
sbb
adc
pop
sub
loopne
jmp
cli
fnstcw
aas
mov
enter
jg
sub
dec
push
enter
mov
dec
aas
push
pop
ret
roll
jecxz
jmp
fimuls
add
popf
cmpsl
mov
inc
cwtl
test
jae
lods
lds
imul
divl
mov
push
mov
sarb
sbb
call
add
sub
cmp
imul
div
jno
push
push
repnz
cwtl
or
mov
push
lods
pop
or
out
daa
push
push
cmp
jno
add
int
sti
test
cld
jno,pn
jmp
cmpsl
pop
hlt
dec
push
sbb
fldcw
in
stos
and
jg
xor
icebp
sbb
sbb
push
mov
leave
cli
ret
jg
std
adc
pop
fdivl
and
sub
outsl
sub
mov
out
iret
cli
push
inc
dec
inc
add
pop
pop
jo
add
loop
shrl
repnz
push
into
bound
xchg
call
mov
cmpsb
push
pop
jg
sub
xchg
lea
push
xchg
test
in
js
sti
pop
lock
iret
push
and
std
cwtl
outsb
mov
mov
stos
pop
es
and
pop
outsl
sahf
das
jp
in
mov
insb
fistl
add
iret
and
ficompl
pop
push
push
jecxz
shlb
add
pop
lds
jbe
mov
push
add
push
xchg
xlat
or
mov
add
call
imul
pop
imul
push
in
jns
sbb
sarl
jge
lcall
jmp
fdivr
aad
gs
mov
cvtpi2ps
pop
ret
aaa
testl
xor
enter
inc
jb
lcall
cmp
xorl
cmp
pushf
fistps
ret
inc
inc
int
mov
inc
lret
cmp
scas
xchg
clc
xchg
push
ss
push
or
cmpsb
cmp
mov
and
std
jae
xlat
scas
jb
aas
nop
lea
clc
and
das
popf
mov
pop
gs
fsubrl
xchg
jnp
imul
mov
xor
test
jb
stc
loopne
xor
jecxz
add
sub
cltd
dec
rdtsc
cmpsl
and
aaa
and
and
lods
lcall
ja
cltd
cmpsl
and
inc
sub
out
in
mov
push
add
mov
stc
xchg
adc
jbe
enter
or
bound
mov
ficompl
cmp
sbb
pushf
mov
xchg
or
jl
fiaddl
movsl
out
dec
sub
clc
push
popl
mov
cmpsl
push
add
std
roll
je
sub
rcll
jo
or
mov
clc
je
lods
adc
dec
pop
test
or
add
and
push
lock
loop
inc
and
enter
sub
jb
and
mov
xor
jb
fcom
pop
loop
out
or
jge
out
pop
das
fldt
aas
inc
cmp
rclb
push
and
rolb
test
xor
lods
and
xor
xchg
add
rorb
hlt
cmp
add
pop
stos
jb
aas
sbb
push
lahf
popa
rcl
test
pop
inc
test
jne
sbb
stc
ljmp
jecxz
aaa
dec
mov
xchg
insl
test
dec
mov
mov
imul
iret
loope
mov
mov
scas
ucomiss
sar
dec
fstpt
ljmp
adc
data16
mov
jp
daa
out
adc
dec
and
sti
js
stc
adc
xchg
push
mov
lret
scas
dec
xchg
out
xor
in
je
outsl
pop
dec
inc
imul
popa
mov
dec
repz
cmp
and
push
iret
mov
sbb
push
xchg
jp
fldt
sti
xchg
cmp
inc
test
sbb
loope
push
fs
push
xchg
push
adc
cmpsl
popf
cmpb
push
mov
shll
ljmp
lret
repnz
dec
xchg
in
or
jb
das
gs
cmpsl
push
and
pop
push
add
mov
outsb
mov
xlat
out
dec
push
lret
test
lret
jns
sbb
mov
ss
and
repnz
mov
or
push
loopne
mov
push
xchg
repz
andb
rcl
xchg
pmulhuw
inc
aam
dec
sbbb
xchg
testl
xchg
imul
pop
mov
fstps
mov
loop
and
sub
mov
add
mov
in
xchg
and
jmp
and
dec
sarb
bound
in
nop
mov
or
mov
sbb
data16
cmpsb
call
imul
outsl
out
popa
lcall
out
xor
idiv
fs
mov
inc
mov
jne
mov
push
sub
inc
mov
repnz
aas
out
mov
repz
addr16
gs
and
lock
adcb
mov
test
sub
adc
mov
loop
xor
int3
int
mov
cwtl
push
sub
jae
pusha
mov
nop
cmp
divl
push
cs
inc
rorb
shll
jo
rcll
sbb
jae
xor
inc
xchg
add
inc
cltd
inc
inc
int
in
andb
push
mov
imul
xchg
test
dec
sub
add
mov
and
popf
pushf
xchg
arpl
xchg
test
xor
cmp
stc
pop
inc
mov
mov
pop
lcall
fistps
xchg
test
jmp
adc
or
insb
xchg
or
jb
fstl
int3
clc
mov
jne
shr
repnz
mov
pop
pop
sbb
mov
sbb
sahf
and
push
hlt
add
dec
repnz
cmp
mov
or
jg
mov
shrl
data16
inc
mov
jbe
inc
jecxz,pn
popf
mov
or
mov
xor
decb
lea
sbb
into
mov
ljmp
ror
aas
xchg
repnz
sbb
dec
addr16
xchg
mov
xchg
or
cmp
in
es
in
ret
or
jmp
scas
adc
movsb
les
pop
push
rcll
test
jge
pushf
js
push
inc
mov
scas
jb
xchg
inc
dec
clc
or
outsb
push
int
cmp
push
cmpsl
rcrl
out
mov
orl
mov
orb
cmp
sub
mov
in
jle
lods
mov
pushf
out
inc
scas
jg,pt
inc
and
aam
xchg
ret
add
nop
out
fisubrl
pop
adc
mov
mov
sarb
cli
outsb
sbb
push
xchg
push
cmc
jno
lds
test
sbb
rol
jle
or
sahf
xor
adcl
fisubrl
inc
test
repnz
push
sub
push
orl
rcll
sub
and
inc
and
sarb
scas
push
sbb
and
call
das
dec
les
in
sbb
inc
mov
jno
mov
cmp
sbb
mov
orl
cmpb
nop
test
fistpl
sbb
mov
adc
add
mov
ja
mov
adc
iret
lret
push
add
dec
mov
sub
test
mov
aad
call
mov
popa
or
sub
dec
shrl
inc
sbb
mov
cmc
imul
dec
leave
or
sub
addr16
and
xlat
sar
stc
fbstp
cmp
push
lods
add
pop
cmpsl
lods
mov
dec
mov
and
pop
mov
ja
ret
lahf
add
into
mov
mov
and
pop
test
nop
insb
jp
imul
pop
dec
dec
outsl
push
xchg
cmpsl
adc
jge
popf
ljmp
iret
cmpl
xor
lods
in
pop
faddl
push
adc
movsl
ret
xor
xchg
insb
in
and
sub
dec
xchg
push
imul
xor
lds
scas
in
mov
stc
push
shrl
cwtl
mov
dec
shlb
ljmp
xchg
int3
sub
sbb
jecxz
mov
out
fistpll
out
not
or
push
push
push
outsb
aaa
into
test
sbbb
sbb
out
je
stos
sbb
and
fisubl
dec
andb
loopne
incl
xchg
movsl
and
sbb
sahf
insl
lds
sub
rcrb
inc
jmp
dec
mov
jle
mov
pop
or
imul
lcall
aaa
movsb
push
icebp
xchg
insb
enter
inc
icebp
or
xchg
movsl
xor
mov
inc
lahf
or
je
sbb
cmp
pop
push
das
popa
ja
xor
mov
cmc
mov
jmp
inc
rcrl
clc
jb
mov
cs
fisubrs
xchg
scas
repz
fcompl
iret
int
call
mov
mov
adcb
mov
pusha
inc
xchg
jle
xchg
dec
mov
jmp
jge
shll
add
movsb
lods
je
mov
cli
xor
in
in
mov
mov
mov
inc
or
out
dec
pop
je
js
jle
out
dec
adc
out
mov
mov
insl
xchg
in
insl
inc
pop
test
xor
arpl
loopne
mov
xor
and
sbb
pop
test
mov
arpl
cmp
jl
fistpl
add
popf
or
cmp
shl
ret
lahf
lea
lea
adc
mov
lods
outsl
xor
adc
arpl
cmpsb
pop
lods
lahf
push
inc
sub
ja
repz
mov
bound
fnstsw
rcll
stos
imul
nop
popa
mov
rclb
inc
push
mov
mov
repz
xor
mov
mov
lcall
lea
jle
out
cwtl
bound
ficompl
jge
in
push
mov
pop
aaa
mov
loope
dec
les
in
dec
xchg
mov
sbb
pop
mov
mov
sub
inc
gs
mov
std
jle
mov
add
addr16
jb
sbbl
push
out
sub
shll
xor
int
loop
icebp
mov
mov
bound
mov
pop
xorb
sarb
xor
cmp
movaps
lahf
dec
daa
mov
mov
and
adc
fdiv
dec
sub
ret
jecxz
in
in
aad
icebp
mov
sub
adc
cmpsb
iret
xchg
mov
fcmovu
xor
sti
pusha
sub
fs
xchg
lock
stc
stos
jmp
mov
testl
mov
int3
std
js
sti
hlt
mov
pop
ficoml
hlt
test
or
ss
cltd
pop
or
mov
lret
je
jle
scas
jns
shrl
pop
mov
add
sahf
sbb
mov
hlt
pushf
lcall
sub
mov
xor
add
cmp
scas
sbb
jne
loop
lea
cli
cmpsl
or
pushf
mov
cltd
stos
fisubs
repz
mov
fs
cwtl
idivl
loopne
xchg
dec
ds
or
cmc
mov
lods
loop
fisubrs
int
fistpll
fsubrp
inc
jae
sub
mov
or
xchg
mov
mov
movsb
mov
sbb
repz
push
repnz
jbe
adc
outsb
xchg
xchg
fcmovb
pop
shrb
call
push
call
mov
sbb
jmp
call
sbb
dec
add
add
pop
sbb
pop
mov
in
in
int
outsb
mov
mov
push
sub
push
push
jmp
mov
mov
popw
adc
mov
lock
cmp
fsubrs
mov
mov
cltd
cmp
fistps
scas
aas
scas
cmp
xchg
pop
in
inc
jecxz
or
mov
jl
mov
adc
mov
jp
ficomps
mov
loopne
adc
sbb
and
fnstcw
xchg
xor
repnz
js
lods
push
xchg
imul
pop
dec
aas
imulb
gs
in
pushw
sbbb
or
mov
xchg
insb
cld
pop
loop
push
jg
mov
pop
ret
cwtl
and
and
arpl
push
xor
jle
iret
lahf
int
sub
push
orl
fistps
stos
mov
jg
pop
fcom
or
les
pop
std
lods
into
sbb
mov
add
jmp
push
mov
mov
pop
xor
repz
add
xchg
dec
wrmsr
test
mov
sahf
adc
ficompl
mov
aam
popa
pop
jnp
lret
push
jo
mov
inc
push
ret
aam
jno
and
add
seto
lret
push
cwtl
push
loop
lret
lret
ja
inc
jb
mov
fldl
and
int
or
div
orl
jmp
mov
loope
jp
push
imul
xor
aas
out
mov
shr
mov
and
adc
push
lds
mov
rcl
mov
sub
add
pop
push
pop
out
scas
enter
js
dec
push
rolb
mov
xchg
push
sbb
adc
push
push
test
pop
imul
out
push
mov
dec
insb
pop
mov
outsb
jg
std
fsubs
adc
mov
sbb
das
mov
fisttpll
push
es
or
dec
fstpt
dec
pop
jno
subl
and
cmpsl
push
push
add
and
bound
cmp
inc
adc
dec
sub
add
not
push
int3
ljmp
mov
lret
mov
gs
mov
mov
xor
xchg
sbb
push
adc
ficoml
push
jb
test
inc
lret
sub
xor
adc
mov
fsubs
inc
xchg
push
std
fstl
adc
imul
sbb
or
int3
les
push
jnp
jnp
jle
mov
mov
outsl
cltd
sar
xor
mov
repnz
insb
xor
push
xchg
mov
cmpl
mov
pop
inc
mov
and
add
gs
push
dec
mov
xchg
imul
push
mov
lods
mov
sarb
mov
cmp
pop
js
pop
ja
mov
dec
js
pop
loopne
mov
aaa
add
adc
inc
enter
sarl
fildl
ret
push
jle
cs
pop
addl
jp
push
pusha
clc
or
inc
inc
pop
mov
jmp
jnp
ror
pusha
mov
shr
pop
xchg
push
xchg
shrl
dec
fstl
int
and
pop
mov
or
sbb
inc
adc
mov
movsb
xchg
jbe
mov
cmpsl
adc
int3
leave
das
adcl
xor
mov
fisttpl
pushf
ja
cmc
mov
sub
sub
mov
pop
test
push
mov
lahf
inc
sub
dec
mov
in
jae
imul
lea
xchg
pop
cld
fistpll
adc
pop
dec
push
cwtl
xchg
dec
addb
aad
fstpl
jg
sub
nop
xchg
test
mov
mov
shr
js
popf
lods
adc
pop
pop
sbbb
insl
call
std
and
icebp
std
inc
mov
incl
mov
cmp
test
mov
stos
mov
or
popa
loop
jge
ret
into
scas
mov
ficoms
ss
sarb
enter
mov
int3
test
add
xchg
mul
divl
std
fadds
inc
pop
pop
push
addl
popf
pop
stc
fnsave
push
ss
add
add
enter
jl
sbb
cmpxchg
mov
lea
mov
and
std
decl
push
call
jle
sub
mov
les
xor
mov
xor
mov
insb
mov
adc
and
ret
lret
mov
fs
sub
mov
mov
scas
pusha
push
sub
push
xor
adc
in
fsts
cmp
rcrb
int
and
in
test
repnz
inc
push
dec
fnstsw
movsl
stos
loop
in
mov
scas
lods
mov
jnp
imul
fs
adc
sbb
bound
add
das
ficomps
cmp
sub
fnstenv
int
cwtl
insb
das
or
or
je
xor
cwtl
add
inc
adc
push
negl
xchg
cmp
push
ss
test
push
or
mov
es
insb
scas
bound
or
int
mov
aam
mov
jge
xor
or
jnp
push
sbb
add
cmp
sti
xchg
push
repnz
cld
adc
fcomi
pop
inc
push
jb
mov
inc
mov
lahf
fisubs
adc
push
enter
cmpsb
lds
into
notb
lock
mov
jns
js
mov
mov
jl
test
add
ret
sbb
jns
stos
mov
gs
in
lea
sahf
sub
push
das
sbb
cmc
jns
adcb
or
push
outsb
negl
or
nop
mov
fildl
cli
add
dec
or
movsb
popl
sbbb
in
mov
rcll
in
out
xchg
jmp
sbb
pop
ljmp
mov
rclb
fnsave
inc
loope
fstl
and
ficomps
cmc
mov
push
mov
push
popf
inc
and
push
xor
loop
push
or
outsb
addr16
push
or
inc
test
dec
add
mov
mov
mov
aas
sub
ljmp
cmp
push
popf
repnz
jmp
mov
daa
mov
sahf
mov
jns
insb
inc
out
add
or
pop
addl
or
daa
pop
cwtl
and
adcl
nop
mov
movsb
jnp
ja
test
insb
aam
mov
ja
or
add
fcoms
loopne
loope
pop
inc
jp
jne
popf
sub
jae
push
bound
pop
add
gs
or
jmp
mov
stos
adc
outsb
inc
jmp
xchg
inc
outsl
sub
ja
es
or
call
sbb
int
add
dec
nop
mov
scas
movsb
ret
xchg
out
cmpsl
negb
sub
xor
push
cs
pop
sub
push
sbb
test
ds
lcall
pop
cs
pop
or
scas
push
pop
and
mov
cmp
sbb
lds
pop
cmc
mov
es
cmp
repnz
out
hlt
xchg
in
popa
mov
inc
sbb
pop
shl
xor
imul
loopne
add
ds
jg
mov
push
stc
gs
mov
clc
dec
mov
sbb
gs
enter
adc
xor
push
inc
pop
inc
pop
ljmp
sbb
cltd
sub
dec
pusha
fs
mov
push
cli
or
mov
adc
scas
mov
jl
aad
sub
push
jle
cs
jo
cmpsl
pusha
pop
inc
lcall
stc
pop
ja
gs
xchg
mov
and
xchg
arpl
es
pop
int3
xor
xchg
adc
or
add
push
mov
jl
movsb
push
jmp
push
shl
xchg
or
cmp
mov
loope
lds
fstpl
clc
rcl
xlat
ret
dec
fcoms
adc
stos
cmp
xchg
xchg
xor
addr16
and
cmp
inc
jnp
rolb
cmp
cli
xor
or
xchg
dec
and
inc
jae
arpl
push
aas
sbb
imul
sub
cld
sub
push
inc
mov
loop
fistl
pop
xor
push
test
xchg
test
out
clc
outsb
cmp
fldl
jo
sub
xchg
and
mov
cmpsl
and
test
xor
out
addr16
inc
xchg
ficompl
sub
push
pop
and
dec
dec
adc
inc
in
test
rcll
stc
testb
bound
push
stos
add
loope
cltd
aaa
sub
xor
add
add
in
or
adc
inc
mov
ret
fnstcw
jle
add
add
std
push
push
shrl
add
mov
sub
mov
mov
adc
out
rorb
ss
cvtpi2ps
push
hlt
aam
dec
adc
fcoms
mov
cmpsb
push
xor
test
sbb
xor
mov
dec
jle,pn
cltd
push
jo
incl
stos
jl
paddq
addb
fisttpl
and
adc
rcrb
fsubrl
je
sbb
mov
test
stos
cmc
int
into
adcl
push
pusha
and
lret
lahf
jecxz
movsb
in
mov
outsb
xchg
cmpsb
pop
push
and
jnp
outsb
or
lret
adc
lods
mov
aaa
iret
push
repnz
pushl
mov
jg
jbe
push
push
sti
pop
out
outsb
stos
cmp
cmp
cli
js
out
aam
and
cwtl
shl
sbb
and
cmpsl
imulb
add
or
mov
and
and
xor
or
ds
les
cwtl
xorl
mov
inc
ja
xchg
and
lds
xor
adc
rcll
xchg
or
jmp
mov
or
dec
gs
push
adc
cmp
inc
pop
xchg
push
inc
faddl
insl
pop
inc
mov
mov
push
rcll
pop
pop
and
test
sub
int3
test
jbe
dec
rorb
jl
cmp
loopne
rolb
shll
aas
and
mov
mov
mov
and
sarl
out
cmp
out
inc
icebp
movsl
call
jge
mov
jg
push
mov
adc
cmp
ret
or
or
out
inc
jecxz
jo
or
test
inc
das
mov
shll
sti
sbb
lods
lret
cmp
popf
imul
inc
int3
idivb
or
js
lds
pop
gs
lds
push
or
test
xor
sbb
push
addr16
xchg
mov
or
or
cmp
mov
inc
inc
mov
in
popf
sbb
jp
push
movsb
inc
ja,pt
cmp
cmpsb
and
scas
je
sub
lods
pop
xchg
push
imul
mov
push
stos
lret
mov
js
cmp
dec
dec
inc
das
imulb
aas
mov
aad
lea
cmpsl
mov
jl
div
mov
out
cld
jp
setne
mov
insb
jnp
fnsave
dec
stos
adc
mov
pop
push
mov
test
jb
cli
cld
popf
shlb
push
and
ss
mov
push
test
movsl
xor
inc
push
shrl
xchg
test
mov
lods
cltd
call
mov
push
mov
sti
icebp
es
jmp
or
scas
aas
scas
imul
add
out
inc
or
ret
das
push
arpl
mov
adc
popf
pusha
sbb
adc
daa
sbb
sbb
inc
in
shll
loope
cmc
enter
xor
fsubrl
fnstcw
jnp
xor
cmp
jae,pt
jo
sbb
cmpsb
cmp
jb
rorl
jge
mov
repz
in
sbb
adc
add
mov
mov
jg
in
lock
push
sub
sub
pop
fxch
mov
sub
rcrb
mov
sarl
mov
mov
push
adc
mov
sbb
push
push
dec
test
push
mov
xor
std
lods
popa
or
and
clc
and
ljmp
push
push
add
test
cltd
inc
test
add
ds
ljmp
icebp
jp
ja
fs
fs
pop
pop
int3
cmp
notb
or
fwait
test
insb
dec
int
fisttpl
dec
cmp
cmp
dec
cmp
stc
or
add
adc
jbe
lahf
data16
ret
cwtl
jp
mov
stos
call
xor
add
mov
insl
lret
jl
jo
data16
jae
fdivs
pop
fcomps
push
mov
xor
loopne
mov
negb
pop
mov
lret
in
bound
loopne
pusha
and
lods
or
pusha
shll
jns
cli
push
movsl
push
pop
imul
rorb
mov
push
in
call
pop
xchg
push
push
shlb
stos
sub
adc
inc
cmpsb
repnz
arpl
int3
lods
decb
inc
aam
mov
add
ss
mov
es
jne
inc
pop
mov
push
lret
insl
stos
out
js
mov
in
int
push
push
push
les
or
inc
out
popf
mov
shrb
into
push
sbb
push
insb
cmp
mov
jecxz
mov
cmpsl
xor
push
fcmovne
popa
and
jle
ret
jg
inc
adc
xchg
les
in
mov
insb
adc
mov
sbb
mov
jecxz
sub
cmp
inc
cltd
mov
xchg
add
jmp
lods
cltd
sub
pop
pushf
xor
pop
movl
dec
sub
sar
xchg
in
lock
push
fdivrs
xchg
ds
or
into
sbbl
push
cmp
inc
mov
mov
push
out
sahf
dec
xchg
inc
cwtl
mov
fcomi
mov
outsl
cmpsb
pushf
stc
pop
push
in
scas
jle
sbb
xchg
int
icebp
mov
xchg
lock
jo
adc
out
push
ret
push
xor
or
fsub
out
inc
sub
lods
je
cmp
fcoms
sbbl
sbb
and
out
lods
ret
icebp
sahf
andl
xor
dec
xor
sbb
sub
loop
or
xor
sub
mov
test
mov
orb
pusha
das
shlb
adc
ja
lret
inc
push
std
shlb
push
jg
lcall
cmp
pusha
rcrb
cmp
adc
adc
andl
sbb
lcall
outsl
imul
or
fs
pop
mov
cmp
mov
dec
mov
or
pushl
jo
push
subl
mov
sub
jns
bound
cwtl
jae
xor
mov
stc
fstpt
popf
rclb
mov
in
or
inc
mov
stc
mov
js
sub
jg
clc
cmp
aas
dec
je
test
jg
mov
and
lret
jns
xor
leave
ret
adc
in
mov
adc
fists
dec
imul
xor
pop
std
adc
out
nop
mov
outsb
cmp
mov
sbb
in
sbb
fisubs
mov
loopne
fucomi
js
loope
shlb
jno
mov
adc
adc
xchg
dec
insl
test
ds
xor
shr
jmp
push
mov
add
adc
xor
aam
mov
push
nopl
out
jbe
fmull
je
cmpsb
imul
fcomps
mull
sbb
xorl
jnp
adcb
pop
in
add
out
cs
call
xchg
pop
lods
inc
sub
imul
xor
in
lret
out
shll
call
mov
sub
in
sbb
int3
sub
and
aas
or
dec
push
test
sub
mov
mov
and
sti
mov
scas
shlb
mov
add
xor
arpl
mov
cld
js
into
ret
pop
loopne
push
inc
jecxz
inc
cmpsb
mov
mov
sahf
mov
dec
cmpsl
movsb
and
inc
cli
push
dec
fildl
or
adc
cmp
shrb
xchg
loope
rorl
mov
sbb
cmp
mov
pop
popf
imul
div
xor
pop
push
movsw
das
add
add
sbb
dec
int
or
outsb
xor
bound
add
in
jne
in
and
mov
fists
mov
xor
sbbb
push
lahf
in
cmp
sbb
push
daa
test
pop
fdivs
jmp
jbe
mov
rcr
add
lea
in
xlat
push
std
cmpsl
inc
or
cld
inc
loop
imul
iret
push
mov
or
or
inc
and
in
jae
andb
cmp
and
nop
repnz
push
fiadds
cmc
xchg
lret
xchg
arpl
push
fwait
add
je
and
mov
mov
cmp
mov
push
into
mov
rol
js
mov
cwtl
fwait
lahf
addr16
cmp
ss
fisubrl
and
add
push
fisttps
or
sbb
mov
shrl
dec
add
inc
mov
inc
dec
sahf
mov
pop
paddq
xchg
lcall
adc
jnp
push
inc
xchg
subb
cwtl
mov
mov
mov
push
inc
pop
aam
mov
mov
push
xchg
and
push
and
pop
xchg
fldt
mov
pop
popf
mulb
cli
rcrb
mov
mov
or
mov
test
icebp
add
stos
inc
shlb
mov
pop
xor
sbb
cs
jge
shll
dec
leave
sti
cwtl
sbb
int
adc
jmp
lret
inc
hlt
xchg
daa
shll
mov
add
ret
sub
test
ss
rol
shr
jnp
pushf
pop
orl
push
movsb
mov
cmc
out
xchg
mov
iret
in
idiv
add
movsb
cmp
cltd
lods
scas
pop
in
sbb
das
or
in
xchg
xlat
or
or
add
shl
out
nop
aaa
cmc
and
sbb
cmpsl
jo
sub
andl
imul
cs
sub
jae
movsb
cmp
daa
in
push
cmpsl
int
mov
out
dec
mov
fimuls
fsts
pop
and
pusha
loope
movsb
iretw
or
cmp
mov
push
push
xorl
adc
dec
lods
rclb
xchg
push
je
enter
pop
mov
stos
sbb
insb
insl
arpl
js
sub
pusha
insl
add
sub
add
lret
xlat
pop
sub
add
lods
arpl
pop
insl
or
int3
cli
nop
mov
pusha
cs
call
rorl
int
into
add
dec
insl
loopne
bound
aaa
insb
addr16
nop
mov
mov
pop
std
cld
arpl
lahf
imul
mov
mov
add
fistps
mov
sub
adcb
xchg
sub
out
push
mov
test
out
mov
out
mov
jecxz
cmpsb
fs
cmp
adc
dec
sbb
mov
std
sbb
pop
popa
xchg
test
sbb
jmp
shrl
sbbl
iret
cli
popa
clc
nop
insb
repz
insl
lds
xchg
xor
int3
shlb
aad
xor
sbb
ss
jmp
andb
push
jecxz
cwtl
dec
inc
idivl
jg
loope
or
push
add
adc
pop
push
andb
or
mov
mov
sbb
loope
lock
arpl
sbb
xchg
jno
and
sbb
fsubs
xorb
jle
scas
cmpsl
adc
sbb
inc
push
xor
sub
jbe
ljmp
mov
pushf
xor
mov
mov
jae
dec
aaa
sub
or
pop
pop
push
dec
mov
outsl
hlt
jo
cmp
jmp
ljmp
lock
out
scas
jmp
addr16
je
ljmp
jge
loopne
movsb
cld
out
es
jg
test
mov
cmp
lods
in
fcom
pushf
xchg
test
or
or
in
icebp
fistl
pop
gs
push
jno
jmp
cmc
adc
sahf
jns
les
dec
shr
mov
and
cmpsl
mov
push
sbb
pusha
negb
jecxz,pt
stos
mov
push
mov
mov
xchg
loop
jns
sub
inc
inc
movl
adc
insl
xlat
sub
loope
sahf
mov
pop
rorb
fwait
mov
push
inc
leave
mov
inc
or
push
mov
outsl
xchg
or
pop
pusha
push
lea
scas
shl
jle
xchg
sti
fisubs
nop
imul
jnp
out
fcoms
out
jns
daa
and
cli
jmp
pop
aam
mov
mov
mov
cmc
cwtl
fcmovnbe
mov
jge
popf
mov
lret
push
jge
push
cmp
addr16
out
jno
stc
inc
in
pushf
sbb
push
add
mov
dec
push
add
daa
sbb
sbb
pop
adc
push
push
les
push
mov
or
jmp
jp
sti
push
add
outsb
movsb
mov
not
pop
or
repnz
dec
movsb
xchg
aas
sub
xchg
pop
sahf
popf
mov
std
mov
cmpsb
jno
in
in
sahf
or
and
call
iret
push
aaa
mov
stc
pop
sarb
ja
mov
imul
pushf
jne
sub
mov
fstpt
pop
xchg
jl
sub
sbb
push
sub
sub
xchg
lea
xor
repnz
mov
ret
pop
mov
lahf
add
movsl
mov
loope
lods
test
dec
sub
mov
and
cs
sub
icebp
shl
call
mov
mov
push
pop
dec
pushf
pop
pusha
cmp
mov
sbb
in
lods
lods
cmp
int3
push
mov
adc
mov
shlb
add
mov
subb
cmpsb
repnz
stos
popf
aas
add
mov
dec
mov
adc
sub
ljmp
fdivrl
mov
outsb
xchg
js
in
in
and
ljmpw
add
pop
dec
std
test
xchg
fisubs
shl
mov
das
in
stos
sbb
das
ss
scas
out
js
dec
inc
loope
subl
ret
sbb
sbb
repz
or
inc
push
shrl
add
push
xor
jecxz
xchg
push
jle
out
lret
mov
push
mov
sub
lock
sub
daa
inc
sub
adc
pop
in
mov
xchg
pop
mov
fistpll
mov
mov
aaa
adc
inc
dec
and
cmpsl
mov
ret
in
in
hlt
mov
lods
cmp
sub
pop
inc
popa
stos
neg
push
aad
jg
dec
push
stc
imul
mov
push
addl
pop
pop
cmc
push
push
fwait
jo
fwait
inc
mov
sarb
cmp
cmp
mov
adc
gs
pushf
sub
aas
std
mov
xor
add
fmuls
ret
mov
test
arpl
lahf
cmp
outsl
mov
sbb
gs
sub
test
dec
stos
mov
filds
add
add
sbb
xor
sub
scas
jno
popf
clc
movb
sub
adc
ds
lret
pop
das
insb
mov
add
inc
or
mov
xor
inc
jle
nop
sbb
xor
sub
sti
ret
or
outsb
in
inc
jl
jne
lock
in
sahf
push
sbbl
xorl
cs
sti
imul
mov
jge
push
lock
repz
scas
or
fidivs
es
hlt
iret
xchg
pop
scas
movsb
fwait
ret
xor
push
xlat
fidivrl
aad
xorl
adc
add
cmp
iret
pop
or
imul
jg
xchg
mov
adc
push
push
in
add
dec
test
inc
xchg
jmp
inc
jb
cs
mov
rolb
cmp
out
out
mov
jecxz
shl
cmp
sbb
fwait
loopne
sub
jmp
add
inc
mov
sbb
sbbl
fbld
xchg
int3
inc
fs
outsl
pushl
mov
pusha
xor
mov
es
dec
jecxz
mov
xor
mov
pop
xor
fildll
testb
cmp
pop
stos
push
ret
push
or
call
xchg
mov
into
in
inc
daa
sbb
or
mov
adc
clc
fwait
ret
loope
mov
sbb
pop
pop
pop
ds
insb
out
nop
cltd
out
dec
push
add
add
lahf
mov
andb
andb
xlat
in
mov
xchg
dec
in
jae
daa
and
xchg
add
push
test
sbb
push
mov
scas
xchg
jb
mov
or
dec
in
or
addb
lcall
sub
out
out
outsb
add
push
rorb
sbb
add
and
out
ret
fcompl
sbb
ljmp
fwait
mov
loopne
xchg
pop
enter
outsb
fsubrp
push
cmp
loope
js
sti
inc
add
ds
push
xor
lret
xchg
je
push
in
insb
jo
stos
cli
imul
or
dec
iret
in
pop
clc
inc
movsb
sbb
out
sbb
pop
movsb
or
loope
outsb
push
into
loop
pop
mov
sbb
xchg
inc
popf
xor
xor
loopne
push
scas
push
sahf
fstpl
into
sub
push
inc
fldenv
jns
dec
mov
or
cmc
dec
pop
leave
sub
outsl
cmpl
pop
arpl
rcll
push
jecxz
in
sti
adc
push
jbe
mov
pop
xchg
rcl
or
mov
sub
or
das
loope
stos
xchg
xor
cmp
xchg
pop
pop
stos
mov
outsl
lods
push
xchg
jb
jo
scas
imul
test
push
cmp
pop
pop
test
mov
ret
pop
test
xchg
pushf
pop
xor
andl
mov
xchg
add
and
clc
jo
mov
mov
add
mov
cmp
idiv
sub
mov
js
loop
fcoms
dec
pop
push
int
or
jb
inc
inc
in
movsl
sbb
pusha
mov
mov
out
test
xchg
or
fs
adc
jmp
aam
inc
lcall
cld
test
arpl
arpl
pop
sarb
and
jmp
imulb
pop
ljmp
ficoms
pop
jle
lea
mov
repnz
sbb
ljmp
jle
lods
mov
xchg
jmp
mov
push
sbb
sub
jg
or
fucom
jo
out
push
into
jle
add
hlt
mov
pushf
sub
js
mov
mov
jae
dec
jmp
lods
mov
add
or
enter
jecxz
sub
das
test
loop
dec
mov
pop
jecxz
dec
mov
and
sbb
ja
aad
xor
jmp
mov
arpl
mov
push
xchg
xor
add
pop
push
and
jmp
xchg
inc
mov
dec
out
jns
cmpsb
fs
mov
popa
or
sub
mov
idivl
icebp
mov
fldl
push
jae
push
nop
shrb
adcl
mov
adc
pop
dec
iret
out
mov
mov
std
je
lods
stos
pop
mov
and
xchg
stos
xlat
movsb
repz
test
xlat
rcrl
ljmp
in
lahf
mull
lods
dec
loopne
jle
ffreep
js
inc
pop
cmp
sbb
inc
cmp
dec
jnp
push
pusha
pop
xor
cmp
push
lods
xchg
aas
icebp
and
xchg
mov
sub
lods
sub
dec
xchg
cmp
rclb
stc
pusha
sti
loop
mov
insb
or
repnz
mov
pop
ljmp
jmp
jne
pop
xor
and
in
ret
cmp
dec
in
push
ret
jmp
jle
sub
push
sbb
arpl
xchg
jbe
inc
gs
jnp
in
rcll
shl
pushf
rol
pusha
out
enter
add
mov
sbb
pop
pop
and
push
fsubrp
inc
jecxz
xchg
ss
jge
sbb
sub
aas
in
mov
mov
mov
cmp
repnz
jne
jns
imul
int
pop
cmp
fsubrs
add
push
ret
push
push
aaa
pop
jbe
mov
stc
fsub
aas
shrb
mov
addr16
divb
mov
mov
inc
mov
popf
jno
xchg
nop
sbb
bound
adc
imul
test
pop
dec
fcompl
cmpsl
test
rep
dec
xchg
outsb
into
inc
push
lods
test
or
mov
lods
push
in
sbb
inc
je
idivb
and
mov
insb
in
inc
jno
sub
fnstcw
test
ret
pop
sub
push
rcrb
ret
faddp
hlt
or
mov
pop
xchg
add
insb
sbb
mov
mov
addr16
push
push
push
lahf
jmp
inc
lret
mov
into
ja
xchg
mov
jp
rcll
mov
pusha
push
scas
cmp
shll
add
bound
jns
decl
ss
or
and
aaa
stos
lock
sbb
sbb
push
outsb
loopne
and
pop
shrl
mov
mov
das
xchg
ror
adc
out
popf
sbb
push
cmp
mov
jb
int
xchg
or
cltd
sti
js
lods
aad
jbe
xchg
jo
repz
outsl
test
cmp
xor
sub
or
pusha
jle
sub
leave
imul
sub
sbb
test
jne,pn
cwtl
xchg
cmp
push
cmpsl
rcll
add
pop
jae
cmc
xlat
iret
mov
cltd
dec
pushf
inc
dec
adc
push
mov
push
gs
sub
sub
enter
subb
jne
mov
fsubp
lods
dec
mov
cmp
cmpsl
xlat
es
adc
pop
xchg
cmp
sarl
in
pusha
cmp
and
xchg
pushf
mov
jl
sbb
push
and
push
sbb
ret
push
xchg
dec
repnz
push
xor
shlb
cwtl
jnp
test
push
test
scas
push
pusha
lret
jo
add
imul
fwait
mov
xor
add
fwait
stos
sbb
adc
cmpb
mov
xor
or
test
dec
sti
inc
or
std
sbb
cmp
dec
push
into
outsb
pusha
or
sbb
incb
test
mov
mov
jmp
lock
sahf
lods
push
dec
mov
mov
dec
inc
sbb
jnp
in
test
add
in
divb
jnp
andb
pop
pop
rol
and
loop
lret
lcall
pushf
imul
sub
das
mov
xchg
pop
xchg
in
popf
xchg
push
fwait
movsb
sbb
push
and
inc
or
stc
je
xor
mov
xor
fdivs
movsl
mov
pop
push
or
sbb
loop
jecxz
push
xchg
dec
mov
jne
push
pop
mov
sbb
pop
arpl
or
lahf
mov
popf
sahf
sbb
pop
into
xlat
or
fisubs
int
lret
dec
cltd
scas
push
xor
push
int
jmp
mov
into
push
cmpsl
rolb
cmp
in
jle
pop
rol
push
pop
cli
sbb
test
pop
add
nop
sub
fcompp
mov
popl
mov
mov
outsl
addr16
lock
mov
sahf
cmpb
bsf
aam
outsb
orb
inc
cld
data16
jbe
scas
sub
push
lds
push
movsl
jb
nop
push
sbb
in
pop
pop
sub
shl
xchg
lret
scas
pushl
call
jns
adc
adc
popa
jp
ret
repz
and
mov
cs
fidivs
aas
lock
inc
je
sub
xlat
in
cmp
fwait
rolb
outsl
cmp
xchg
mov
stos
sub
out
test
push
lahf
push
inc
xchg
push
les
adc
mov
in
outsl
push
pop
mov
sbb
inc
and
add
mov
inc
fcomps
mov
mov
jle
xchg
lcall
outsb
mov
inc
je
rorl
insb
cli
data16
popf
dec
add
into
push
stos
movsl
sahf
sti
ja
and
cmpsl
xlat
sbb
xlat
fisubl
popl
adc
inc
jo
adc
dec
std
lea
pop
orb
cmc
lret
inc
mov
imul
imul
sbb
enter
inc
or
ja
mov
mov
out
xchg
movsb
dec
sbb
add
test
cmp
popf
dec
jecxz
aaa
cld
bound
jl
icebp
dec
jecxz
cmpsl
mov
es
roll
sbb
mov
add
xchg
bound
mov
or
scas
mov
add
dec
flds
xchg
mov
xlat
jbe
push
or
xor
inc
bound
rolb
xchg
xchg
sub
push
cmp
cmp
lret
scas
fucom
js
inc
lods
pop
std
fs
pop
sub
mov
push
aas
lahf
inc
shll
test
sti
fidivrs
ljmp
pushf
call
stos
inc
jne,pn
data16
xchg
pop
dec
lahf
mov
arpl
cmp
or
movntq
sti
mov
and
test
pop
in
divl
adc
in
pop
xor
jmp
lods
fwait
and
aas
sbb
sbb
into
jbe
out
sub
aad
xorb
jnp
mov
xor
test
sbb
cmpl
jae
sbb
hlt
xchg
insb
ja
cld
shl
lock
jle
sub
and
sbb
mov
jecxz
dec
popa
imul
das
lea
scas
data16
shr
push
adc
cmc
pop
ror
sarb
shlb
gs
scas
dec
lret
add
and
icebp
sbb
cmp
aaa
cmp
pop
cs
push
xchg
lods
adc
sti
mov
push
aad
mov
push
addl
or
mov
stc
mov
push
cmc
js
pop
jecxz
jge
add
fists
shr
in
repz
lock
jno
or
fidivl
or
out
dec
gs
sahf
je
cmpl
dec
and
xchg
adc
xchg
ljmp
mov
insb
bswap
sbb
push
ljmp
cmpsl
pop
sarb
push
push
dec
in
cmp
cltd
fistpl
les
jl
flds
std
mov
ret
mov
pusha
or
mov
sub
stc
push
jp
push
jp
sub
xor
xchg
iret
inc
movsl
sbb
push
xchg
jbe
adc
lret
add
and
cmpsl
mov
fdivr
push
lds
ljmp
and
mov
imul
xor
cmp
mov
test
mov
sub
dec
xchg
sub
in
and
mov
lahf
les
and
mov
jmp
cmpsl
inc
jl
jmp
fistpl
sub
mov
or
cmc
add
mov
push
test
mov
ljmp
cmp
mov
aas
or
pop
mov
aam
jecxz
and
inc
pushf
inc
movsb
sub
push
xchg
popa
mov
or
cli
popa
jbe
in
shrb
movsl
jnp
movsl
inc
ffree
xchg
subl
shl
jle
movsb
test
push
xchg
sti
sahf
sbb
jle
test
cwtl
xor
pop
fisubl
int
push
fisubs
mov
mov
pop
aam
xchg
sahf
xchg
sbb
xor
lahf
pop
add
enter
sub
outsb
xor
mov
imul
std
ficompl
jb
mov
leave
push
mov
push
add
movsb
test
popa
int3
out
jno
ja
nop
jmp
enter
mov
xchg
jne
jb
inc
data16
mov
push
push
imul
popf
xchg
das
test
sub
out
pop
cmp
jle
js
dec
push
sub
push
cmp
imul
sbb
mov
jecxz
cmpsb
dec
or
leave
pop
xor
in
pushf
mov
leave
loopne
dec
sbb
adc
lods
test
bound
inc
sub
mov
scas
xchg
mov
es
push
push
mov
xor
test
xchg
cmpsl
and
mov
jno
mov
orb
iret
cli
mov
sbb
xchg
aaa
les
icebp
mov
jae
mov
jb
and
stos
dec
add
lock
das
sbb
lds
jae
dec
push
xlat
jp
mov
fcmovb
mov
mov
insb
cmpsb
sub
fcomp
fsubrs
dec
scas
adc
lcall
cmpsb
mov
enter
sarb
jmp
icebp
js
cmp
adc
lock
or
and
cmp
stos
push
pop
imul
lret
sbb
mov
and
aad
mov
mov
jmp
jl
sbb
lret
pop
std
mov
pusha
js
or
ljmp
insb
jge
mov
mov
add
ret
fidivrl
push
in
push
sub
cli
je
push
xchg
out
push
imul
loope
jae
pop
fimull
fistps
mov
arpl
clc
xorl
inc
pop
inc
stc
dec
adc
jae
mov
cmp
push
xor
mov
ljmp
add
stos
mov
enter
test
mov
rorb
push
cmpsl
or
mov
mov
das
in
icebp
scas
mov
mov
jl
rcrb
adc
push
cmp
loopne
ljmp
test
stos
cltd
jecxz
fdivs
add
leave
int3
stos
pop
int3
mov
cld
aas
add
scas
enter
cmpsl
es
jns
cmp
addr16
jnp
mov
bound
pop
pop
push
insb
sbb
popf
call
enter
fidivrl
sbb
fnsave
and
adc
inc
jecxz
rorl
ret
push
orb
mov
test
fiadds
pop
adc
adc
push
cmp
jo
shll
adc
jae
lahf
aas
fmuls
imul
push
sbb
jg
xchg
hlt
mov
lret
mov
cmc
scas
pop
ljmp
inc
cmpsb
add
bnd
xlat
push
sub
icebp
xchg
out
iret
jecxz
pop
inc
daa
inc
xchg
inc
push
lea
cmpsl
hlt
ret
dec
insb
cs
or
sahf
push
xor
lcall
shrb
jl
ja
inc
push
repz
in
gs
pop
xor
mov
mov
lret
mov
sbb
test
mov
add
out
nop
adc
stos
sbb
gs
lahf
aam
jno
jb
jle
pop
dec
sbb
jb
sbb
jnp
xchg
imul
mov
or
pushf
pushf
cmp
mov
xor
imull
fistpl
loop
shl
jo
loop
sti
inc
cmc
testl
arpl
negb
insb
push
mov
int
push
stos
dec
int3
add
sbb
jae
xor
pushf
pusha
mov
push
mov
or
test
mov
scas
and
dec
clc
stos
out
into
dec
fstps
lcall
mov
xchg
sbb
arpl
fcmovne
xor
mov
outsl
push
sub
outsb
mov
cld
idivb
dec
or
jno
fcomip
clc
ds
cmpsl
in
mov
xor
call
shll
in
jmp
lcall
or
loop
add
or
loope
aas
je
pushf
sub
dec
decl
arpl
mov
adc
xor
pushf
cwtl
adc
mov
jl
mov
push
xchg
jnp
loop
gs
fisubs
mov
inc
outsl
out
sbb
adc
out
push
lcall
xchg
cs
je
rcrl
mov
fdivl
pushf
cmp
aam
xchg
jne
mov
roll
das
sbb
jg
pop
cmpsl
in
lcall
adc
cltd
sti
movsl
sub
mov
cmp
arpl
or
cli
fisttpll
sub
or
fisubrs
dec
gs
iret
push
pop
test
jne
and
popa
outsl
sub
lods
data16
daa
jle
sub
scas
sbb
dec
inc
inc
inc
pop
dec
call
push
mov
xchg
outsb
les
js
les
loop
sarb
sbbb
mov
jb
lret
sbb
mov
fmul
and
mov
lds
push
in
bound
xchg
push
inc
or
test
scas
pop
outsl
mov
test
ja
mov
popa
xchg
or
push
loopne
jno
jge
xor
rorl
xor
mov
jno
mov
and
add
xchg
xchg
and
in
adc
and
jge
add
jae
test
sbb
add
push
cmp
loop
je
mov
and
lret
insl
fsubrp
mov
subl
or
add
mov
gs
sbb
int
pop
push
push
fisubrl
mov
popl
shll
mov
repz
push
iret
nop
orb
les
inc
jb
sbbl
sub
in
pop
ficomps
adc
jg
mov
xor
lcall
data16
sbb
pop
gs
mov
mov
push
add
or
xor
sahf
push
shl
pop
jb
mov
fiadds
fldl
jle
cld
xlat
out
cmp
add
ret
push
test
roll
mov
mov
add
lds
adc
adc
pop
imulb
in
test
inc
sbb
frstor
enter
mov
xchg
in
fbstp
mov
js
cmc
adc
ss
cmp
inc
mov
fnstcw
cli
fsubl
xchg
mov
jmp
push
xor
pop
icebp
jno
ljmp
ficomps
addr16
movsl
or
xchg
ret
in
dec
xchg
cmp
jl
ret
xchg
xorl
or
sbb
sub
mov
leave
adc
jge
and
add
inc
push
lea
push
jbe
jl
inc
jno
jnp
push
sbb
pop
pop
fidivrs
mov
lock
sbb
pop
cmp
xlat
movsb
push
mov
mov
repz
adcb
mov
pop
daa
sbb
mov
imul
in
sbb
mov
fisubl
xchg
scas
xchg
repnz
mov
lock
cmpsb
orb
jl
jne
mov
inc
out
jae
jnp
push
push
inc
cli
add
fcmovne
pop
dec
nop
push
xchg
xchg
sub
mov
ljmp
add
cmp
or
dec
mov
sahf
sbb
daa
in
xor
adc
jp
and
push
dec
mov
sub
ret
loopne
mov
mov
add
lret
cmp
push
mov
cmpl
cmp
lret
in
or
ret
lock
inc
fwait
push
dec
and
aaa
xchg
in
pop
shll
xorb
add
hlt
push
xor
mov
stos
sub
xor
ficoms
pusha
pop
sub
test
aad
inc
xchg
pop
add
incl
ss
xor
xchg
inc
fimull
mov
sti
sbb
add
xchg
push
jmp
inc
jb
popf
add
mov
xchg
lods
jbe
es
mov
or
dec
jle
js
pop
rcll
out
push
aas
rorb
in
push
xor
add
push
cld
mov
add
pop
pop
insl
jg
mov
mov
leave
aam
mov
xchg
sbb
sub
pop
rcrl
cli
sbb
pop
and
inc
push
int
push
aaa
fldt
xchg
addb
xor
cmp
into
rcll
aad
js
jle
aam
ja
or
jg
imul
out
add
fistps
adc
cmp
mov
sbb
dec
mov
push
pop
pop
fdivrl
push
int
shll
ret
pop
mov
mov
cltd
mov
xchg
loope
inc
and
negb
fwait
cmp
add
scas
xchg
jge
xlat
loope
mov
lret
dec
in
jo
aas
add
outsb
push
add
mov
das
aaa
pop
dec
sarl
and
sub
jge
daa
xor
xchg
fisubrs
adc
lea
or
pop
pop
jno
jecxz
adc
and
addb
pop
fnstcw
aaa
dec
xor
sarb
add
xor
mov
mov
mov
pop
cmp
or
cmp
imul
movsb
add
sbb
xchg
dec
adc
lock
test
data16
outsl
sub
jb
ret
or
or
jne
mov
addr16
mov
push
sub
clc
mov
shl
mov
in
mov
ja
aad
aam
int3
cwtl
sub
sub
mov
fildll
push
xor
cs
test
rcrb
pop
dec
mov
xor
push
push
or
jb
into
enter
test
or
outsb
mov
in
jmp
je
sarl
mov
mov
push
mov
fimull
decb
and
les
lret
dec
lods
dec
mov
repz
inc
sbb
fs
cmp
xor
test
mov
pop
xlat
push
je
divb
cli
cltd
sub
loope
bound
dec
push
xor
movsb
cli
xor
into
jb
add
jp
mov
fsubs
xchg
dec
add
into
sbb
cltd
dec
push
cmp
cmpsl
loope
dec
cwtl
inc
rol
adc
inc
lods
dec
mov
mov
shl
jg
roll
pop
push
xchg
jns
sbb
push
test
adcl
test
loop
push
jecxz
stos
movsl
bound
cwtl
imul
fwait
mov
sub
mov
iret
push
scas
mov
jns
or
jl
inc
scas
insl
push
xchg
xchg
and
or
cmc
push
jle
out
sbb
mov
je
dec
fcmove
push
and
adc
aaa
and
pushf
stos
xor
jne
arpl
push
mov
fisttpll
sub
dec
xchg
dec
fidivrl
push
mov
or
insl
test
loope
lock
fimuls
js
inc
jnp
mov
mov
out
movsl
inc
es
push
mov
sahf
sbb
in
xor
mov
stos
mov
fcomip
jl
addr16
iret
and
xor
dec
aam
push
negb
stos
andb
xchg
scas
lret
cmpsl
fldl
cmp
fstpt
xlat
pop
popa
or
mov
mov
add
inc
mov
mov
sarb
push
xchg
xorl
jmp
stos
xor
lret
ss
out
push
xor
cmc
ds
push
xchg
sbb
idivl
lock
inc
pop
stos
mov
sub
loopne
sbb
dec
xchg
ja
mov
sbb
lret
jmp
cmpsl
lods
push
sahf
js
pop
int3
lea
sarb
xchg
cmp
lcall
mov
gs
jge
inc
inc
dec
and
stc
mov
ret
xchg
pop
push
mov
movsl
ss
mov
jge
ret
mov
dec
mov
dec
test
and
es
jg
push
xchg
and
mov
insb
aam
adc
jbe
ffreep
push
xchg
test
xlat
jno
adc
testb
stos
ret
jae
lods
outsb
add
push
rcrl
repnz
push
pop
gs
mov
or
fnstcw
rcrl
outsb
test
jecxz
negl
xchg
fbstp
mov
cmpsb
pop
sahf
fildll
pcmpgtw
ss
data16
scas
sbb
jp
notb
scas
adc
sahf
add
xchg
sbbl
mov
mov
fadds
mov
sub
cs
fstps
mov
test
js
xchg
xchg
cmpsb
sbb
fldcw
pop
out
mov
jbe
mov
add
cmpsb
or
repnz
mov
dec
pop
incb
xor
pusha
pop
test
dec
dec
mov
inc
adcl
cmp
inc
mov
push
adc
push
lea
pushf
pop
xchg
mov
out
ficomps
insb
mov
mov
mov
dec
sub
push
packuswb
jbe
push
pushf
inc
adc
lds
pop
into
or
mov
stc
jne
movsl
aam
repnz
mov
jne
nop
es
pop
cmp
add
shrl
int
mov
fs
and
lods
mov
mov
mov
sbb
dec
or
pop
mov
mov
cmp
and
push
sbb
ljmp
inc
and
pop
push
outsl
out
xor
stos
jne
jnp
iret
xchg
enter
rolb
and
mov
bound
adc
push
dec
push
xlat
dec
mov
lods
sub
inc
and
ds
sbb
adc
push
aas
fsubr
stos
out
push
xchg
sub
mov
std
iret
xor
pop
mov
inc
stos
mov
lret
jmp
push
int3
pop
cltd
add
andl
dec
adc
mov
mov
jmp
rorb
jl
add
add
aaa
fcompl
adc
enter
and
out
mov
int3
xor
out
or
addr16
ret
xor
nop
jne
xor
test
movsl
xchg
fsubrs
mov
xlat
jg
xlat
and
shrb
imul
out
lds
or
fdivrl
sbb
add
mov
jb
jg
xchg
adc
cld
mov
adc
daa
mov
sahf
cmp
xchg
movsl
sbb
push
ja
mov
add
roll
push
lret
scas
cmp
add
xlat
loopne
jmp
push
push
push
nop
cmpl
add
call
sbb
mov
pusha
sub
dec
xchg
int
arpl
mov
xchg
sub
mov
push
loop
adcl
cld
and
dec
dec
ljmp
jne
pop
popa
xor
mov
into
cmp
mov
sbb
jno
fwait
cmpsb
inc
adc
pusha
shll
jnp
je
pop
inc
xchg
mov
sub
push
mov
lods
js
xor
mov
imul
rol
mov
in
sbb
pop
mov
pushf
xchg
lods
sub
popa
mov
mov
dec
enter
push
shl
add
insb
lds
push
cmp
sbb
fs
popa
sbb
test
push
push
xor
cmp
mov
nop
sbb
testl
cltd
push
inc
insl
dec
or
int
testb
cmp
aas
pop
stos
incb
push
and
repz
rep
push
jle
hlt
or
fs
jmp
pop
push
dec
out
mov
push
pop
jle
sbbl
insl
add
jmp
cmc
sbb
shrb
in
cmpsb
mov
cwtl
push
sub
mov
clc
daa
lods
loop
dec
inc
mov
addr16
lea
rcrl
jle
mov
add
inc
pushf
out
imul
jecxz
pop
xchg
enter
push
mov
mov
out
cld
push
xchg
xor
pop
dec
outsb
mov
loopne
roll
inc
adc
xchg
pop
pop
jno
stos
dec
test
dec
mov
mov
cmp
sbb
pop
les
and
aas
mov
lcall
pop
push
in
jnp
idivb
or
cmp
shrb
scas
push
test
repnz
or
andb
xchg
addr16
adc
and
sbb
rol
sub
mov
pop
xor
setg
pop
push
ja
fs
lods
mov
jbe
insb
xor
scas
mov
and
or
lcall
mov
jge
subl
ljmp
or
or
cwtl
imul
inc
in
cld
pop
rol
cwtl
aad
ljmp
inc
cmp
leave
mov
repz
push
iret
fdivl
push
sub
std
adc
dec
pop
inc
sbb
adc
mov
mov
in
out
sbb
ret
sahf
inc
lds
out
outsl
in
jb
or
mov
clc
das
push
add
roll
or
jmp
xchg
or
xchg
shlb
into
enter
lahf
ret
f2xm1
cmc
mov
xchg
lock
data16
dec
add
ljmp
or
fistpl
lahf
addr16
call
loop
lahf
dec
pop
sti
into
addr16
cmpb
out
sbb
aaa
push
xor
ds
inc
repnz
and
movsl
or
jbe
xor
mov
fwait
mov
mov
add
adc
push
cmpsl
dec
mov
icebp
aas
arpl
std
push
jle
flds
stc
fwait
test
inc
mov
fcoml
dec
and
mov
je
sbb
dec
push
ror
pop
repnz
xchg
sbb
sub
es
add
scas
aad
orl
jmp
cld
gs
mov
mov
gs
lods
mov
inc
jmp
jp
mov
push
push
gs
test
sub
jnp
hlt
cmp
push
mov
xchg
dec
sbb
ss
dec
imul
iret
cmc
and
pop
mov
and
jb
jmp
mov
cld
ss
mov
je
sub
dec
mov
push
xchg
pop
dec
dec
in
fsubl
lret
xchg
jecxz
fisttpll
jp
fisubrl
pop
ja
push
mov
xchg
ficoms
insl
mov
pusha
in
loop
fwait
out
and
aad
push
mov
out
rorl
push
xor
jl
mull
pop
mov
or
sbb
sub
sbb
sbb
or
xchg
push
mov
dec
js
clc
add
dec
sub
cmp
jb
sbb
jne
fsubrl
xor
lcall
test
sbb
jb
add
and
out
jns
rorb
sub
pop
out
and
mov
jp
pop
insb
fdivr
cmp
movsb
mov
jg
movsb
gs
mov
scas
mov
mov
insb
mov
sbb
in
pop
mov
mov
mov
lock
push
mov
roll
add
or
pop
lods
sbb
inc
mov
pop
mov
in
jbe
or
jl
test
mov
mov
fistpl
jne
push
cmc
mov
mov
push
je
xchg
popf
cmp
cmp
xor
mov
jg
jg
out
pop
inc
and
rolb
shlb
jns
and
mov
and
push
fwait
in
call
push
xlat
xor
fists
sbb
repnz
xor
aas
cmpsl
popa
mov
jg
mov
push
fnstsw
pop
adc
popa
cmp
mov
mov
cmp
xchg
mov
jmp
pop
xor
mov
jb
jbe
imul
cmpsl
lea
or
repnz
and
pusha
mov
xchg
out
mov
es
mov
pushf
jp
test
dec
jbe
out
xchg
andb
lret
mov
or
xor
mov
cwtl
aaa
test
adc
push
test
jmp
sbb
mov
push
sub
mov
mov
mov
sar
ljmp
cmp
mov
imul
mov
add
pop
in
scas
jbe
xchg
dec
sbb
sbb
push
ret
or
aas
popa
mov
cmp
jnp
pop
lret
orl
dec
not
pop
mov
loop
mov
cs
in
add
aam
dec
cs
mov
sub
jne
push
add
xchg
icebp
outsl
roll
lret
arpl
fnsave
add
jp
mov
xor
movsb
push
test
mulb
and
ret
lea
test
jnp
aaa
pop
add
mov
stc
pop
repz
dec
fidivrl
loope
dec
js
xor
adc
lret
movsb
sbbb
push
push
inc
pusha
inc
std
fnstenv
jl
sub
pop
btrl
or
mov
xor
in
outsl
ror
aad
in
cmpsl
lcall
pop
aas
jne
leave
inc
lcall
pop
enter
imul
popf
inc
in
jno
push
sub
xor
mov
mov
dec
fsub
pop
inc
cmp
mov
add
push
popf
imul
popf
sub
lea
inc
int3
cltd
inc
hlt
dec
push
mov
insb
andb
xchg
inc
or
mov
int3
mov
push
dec
cltd
jae
mov
js
mov
movsl
cmp
push
jbe
mov
lods
inc
and
cmpsl
sub
scas
js
mov
sbb
leave
aaa
loop
std
clc
fwait
scas
std
test
test
icebp
add
cmpsl
into
adc
out
xchg
and
jl
push
ret
inc
lret
lock
cmp
jl
and
lods
fdivl
jecxz
ret
shrb
xor
in
clc
repnz
mov
and
xchg
lret
in
mov
insl
adc
mov
fimull
inc
mov
inc
cmpsb
sahf
adc
dec
paddw
and
mov
inc
sbbb
cwtl
dec
stos
mov
push
mov
icebp
xor
adc
insb
cmp
orb
loop
sub
in
ror
dec
stos
dec
movsl
jge
xchg
popa
loop
and
sahf
jecxz
pop
iret
fldcw
insb
jle
mov
imul
cld
divb
dec
sahf
mov
into
sbb
into
jecxz
shlb
shl
pushf
lret
aaa
mov
aaa
and
pop
dec
jge
xor
add
insb
cwtl
mov
call
fsubs
and
fbld
psubsw
fwait
fwait
pop
cltd
aam
adc
aaa
push
adc
inc
mov
movsl
mov
out
pusha
int
fs
push
cmc
loop
out
fidivl
mov
ret
int3
insl
movsl
sub
cmovge
test
in
jb
inc
leave
aam
pop
xlat
leave
fdivrs
cmp
pop
mov
loop
push
bound
fcmovnu
scas
pop
test
pop
pop
clc
sbb
int3
cwtl
xchg
fcom
movsb
into
xor
sbb
daa
outsl
fwait
jo
stos
mov
push
xchg
loopne
aam
mov
fs
mov
and
mov
insb
ljmp
xlat
bound
shll
repz
lcall
xchg
mov
mov
xchg
lea
adc
push
xchg
mov
sbb
jbe
adc
dec
iret
adc
sub
in
fmull
stos
or
lcall
dec
add
int
ds
and
movsl
cmc
cmp
std
jecxz
cmpsb
shl
xchg
loopne
mov
jl
jp
out
xor
sub
mov
push
pop
inc
mov
add
and
das
cmpb
push
jmp
jecxz
fwait
adc
fwait
mov
clc
mov
jge
sbb
pop
mov
sarb
test
cld
pop
mov
stc
mov
mov
xchg
mov
sbb
test
xchg
sbb
into
sbb
andb
adc
add
enter
call
jbe
divb
enter
es
outsb
bound
sub
push
xchg
cmp
xor
cmp
scas
push
cmp
pushf
les
jecxz
js
mov
xchg
idiv
lret
testl
mov
and
aaa
icebp
or
push
jns
and
mov
xor
addr16
add
mov
insb
lcall
jecxz
test
sbb
popa
sbb
int3
dec
sahf
cld
sti
inc
xor
mov
xor
inc
inc
mov
mov
lea
lods
insb
repnz
and
insb
iret
adc
loopne
int
fistpl
test
popa
testl
dec
push
scas
pop
inc
push
push
dec
inc
ret
loope
or
pusha
xor
rcl
jmp
ficoms
loopne
stos
mov
bound
ficomps
pop
std
addr16
mov
clc
mov
xchg
fwait
pop
adc
inc
mov
stos
daa
pop
dec
inc
insl
sbb
lods
inc
mov
mov
mov
xchg
dec
add
icebp
cmp
pop
in
lcall
loopne
sarl
test
jmp
push
jg
pop
in
enter
incb
es
inc
pop
inc
push
mov
sti
ja
fimuls
aam
xchg
lds
pop
sub
mov
test
into
jecxz
ja
adc
jne
push
addr16
add
adc
cmp
mov
add
shll
xor
lock
and
int
leave
shl
adc
stos
movsb
cltd
in
xor
fisttpl
popf
fmull
add
ja
mov
cmp
dec
fldcw
testl
icebp
mov
sbb
leave
mov
aaa
adc
lahf
mov
or
ss
in
and
sub
pop
fdivr
dec
imul
nop
dec
dec
xor
adc
push
or
dec
gs
jl
adc
mov
mov
inc
or
ja
outsl
iret
in
jmp
add
add
enter
or
inc
aas
adc
scas
jb
xor
sbb
jnp
int
out
daa
jmp
pusha
mov
mov
cmp
push
test
scas
jl
jns
in
pop
sub
inc
push
pop
ds
idiv
arpl
mov
shll
ficompl
mov
nop
mov
cs
pushf
aam
push
pop
inc
and
and
jmp
outsl
jnp
inc
cmp
inc
mov
jmp
mov
shrb
filds
stos
jnp
iret
clc
inc
rolb
sub
sbb
in
outsl
push
fwait
add
lock
push
daa
jbe
sarb
aaa
xchg
fstl
fistpll
push
mov
mov
lods
xor
cmc
pop
inc
fcomip
adcb
test
aad
mov
xchg
lcall
testl
std
push
in
mov
lret
and
push
sarl
popa
aam
dec
sub
push
jne
mov
push
push
mov
mov
stc
into
push
or
dec
lock
int3
mov
and
adc
pop
mov
jb
jp
pop
push
cmpsl
leave
push
sbb
push
dec
popa
inc
jp
mov
cwtl
dec
push
pop
aas
shrb
popf
sub
cmp
mov
push
or
pop
add
or
xlat
push
push
lret
sub
cmp
femms
jge
mov
add
sub
lock
outsb
or
shrl
cmp
jno
je
cwtl
test
mov
push
inc
mov
sub
adc
scas
jmp
stc
aad
dec
test
outsb
ds
int3
pop
xchg
mov
adc
xor
push
mov
outsb
push
push
es
sti
mov
dec
fadds
cmp
jo
dec
adc
movsb
push
sub
or
nop
and
rclb
js
enter
xor
cmc
sub
leave
xchg
cld
cltd
jbe
cmp
or
xchg
arpl
inc
icebp
out
pushf
cmp
cmp
pop
das
push
call
mov
mov
adc
sbb
dec
ljmp
stc
and
imul
add
aam
dec
popa
dec
pop
imul
lret
mov
or
mov
test
dec
push
aad
sbb
in
aad
mov
ss
mov
mov
sbb
rolb
faddl
ret
hlt
xchg
dec
jnp
or
int3
pop
mov
data16
sub
dec
call
insb
std
ret
orl
or
mov
mov
jecxz
hlt
in
bound
into
shll
mov
shr
push
fstl
lret
flds
and
mov
notl
mov
xchg
nop
fdivl
inc
fs
ret
fs
aaa
enter
pushw
sahf
fs
int3
int3
cmp
ljmp
loop
in
xor
ja
and
stc
or
cmpsl
call
push
or
jmp
cld
mov
xlat
les
pop
mov
jle
xor
adc
push
shrl
loope
fsubs
sub
aas
aaa
cld
mov
add
gs
inc
sub
sbb
add
arpl
cmp
mov
add
mov
int3
xchg
hlt
add
mov
mov
lock
orl
mov
push
add
pop
stos
sub
sub
add
jmp
mov
xor
dec
push
ja
xchg
cmp
cmp
and
pop
push
pop
jmp
xor
push
push
decb
add
sbb
int3
mov
jge
lods
in
into
jle
aaa
arpl
icebp
cmp
out
pusha
pop
pop
push
pushf
mov
lea
push
push
pop
insl
xor
sbb
mov
push
rcl
inc
shr
bound
mov
push
mov
cmp
cmpsb
dec
lcall
outsb
mov
push
jbe
std
dec
push
pop
mov
iret
inc
mov
inc
fs
inc
xor
and
jl
sbb
or
mov
or
and
fistps
xor
ss
ja
popa
jmp
push
outsb
addr16
aam
cmc
xor
fsubrp
fst
xchg
mov
mov
pushf
stos
lea
jo
pop
push
rolb
lahf
mov
fcmovne
adcb
dec
sub
cli
sti
rcrb
mov
push
stos
out
push
cmp
pop
call
pop
sar
or
lods
gs
outsb
shlb
jle
mov
push
jns
adc
movsl
cvtpi2ps
jnp
out
subl
fcmovbe
shlb
lock
or
ds
dec
jge
jle
cmp
push
out
mov
push
mov
adc
pop
in
mov
ljmp
mov
or
cmc
jo
xor
insl
mov
cld
mov
mov
xchg
jl
es
xchg
sbbb
push
add
dec
outsb
inc
xchg
iret
xchg
xor
pop
scas
in
jns
mov
xorps
push
mov
mov
mov
xchg
sarb
push
test
xor
xor
ss
sub
rorb
jnp
js
mov
dec
xor
or
test
pop
and
adc
xor
jl
enter
adc
adc
jnp
push
sar
mov
fimull
jl
pop
jl
mov
in
cmp
mov
sbb
out
pop
mov
insb
or
pop
mov
mov
arpl
jl
mul
stos
outsl
rcll
push
int
mov
cs
fs
out
call
push
incl
in
je
cwtl
pushl
or
movsl
or
jmp
cwtl
stos
mov
lds
jbe
aam
push
fwait
int3
in
jmp
hlt
popa
xchg
adc
jg
icebp
dec
out
idiv
cmp
mov
stos
push
popa
sub
pop
push
jle
aam
repz
pop
xor
pop
cmpsl
loopne
adc
fisttps
call
roll
iret
in
cmpsb
dec
ds
adc
je
fisubs
out
pop
xchg
leave
and
adc
ret
mov
push
add
aam
pop
testb
jmp
sub
adcl
sbb
ds
into
mov
inc
add
mov
mov
js
call
cmp
xor
pop
mov
xchg
and
xor
xor
jne
jno
out
add
jno,pn
adc
leave
in
sub
push
mov
and
or
xor
mov
or
inc
dec
outsl
sti
aas
and
sahf
lea
jp
daa
out
jl
and
and
and
sub
inc
lods
adc
cmp
subb
lods
loopne
movl
aaa
lds
icebp
stc
inc
xchg
mov
lock
icebp
cltd
repz
cmpb
and
xchg
sbb
xlat
aad
in
enter
les
jnp
enter
cmpsb
out
add
in
std
das
xchg
jp
adc
dec
jno
or
repnz
jmp
jnp
add
leave
std
push
or
pop
mov
int3
push
cltd
repnz
test
test
movsl
sbb
ja
and
add
dec
lds
pop
push
call
mov
out
push
jl
orl
sub
test
daa
adc
push
testl
ljmp
cmc
push
shlb
xchg
popa
iret
sub
insb
mov
ss
xchg
dec
mov
push
pop
shll
mov
push
shlb
push
pusha
mull
dec
ja
lahf
dec
scas
int
adc
mov
xchg
cmp
cmpsl
aam
lret
push
nop
inc
inc
testb
cmpb
pop
add
add
push
das
lds
mov
and
adc
imul
repz
subl
or
mov
aam
inc
iret
call
xchg
test
and
popa
stc
in
lret
add
lds
negb
mov
jns
pusha
xor
ret
xor
movsb
lahf
divb
sbb
orl
daa
mov
aad
mov
sbb
aaa
pop
adcb
stc
shr
or
sar
testb
inc
jle
inc
and
push
popf
pop
push
movsl
lahf
cmp
push
push
pop
push
dec
mov
mov
pop
int3
iret
scas
inc
pop
js
sbb
adc
xchg
sbb
scas
sub
jp
or
cwtl
ljmp
push
fldcw
mov
xchg
mov
subl
push
popa
mov
insb
popa
inc
xchg
xchg
faddl
mov
jb
out
in
lock
jmp
adc
cld
out
rcl
dec
and
pushf
stos
movsl
popa
mov
ljmp
dec
addr16
jnp
inc
das
push
mov
arpl
inc
shll
xor
adc
or
push
aam
xlat
pop
lods
sti
xor
imul
lret
lahf
mov
dec
pop
pop
pop
add
insl
xor
ljmp
repnz
push
jp
imul
inc
xchg
adc
clc
mov
add
xchg
push
popa
push
clc
cwtl
sbb
or
inc
incl
jno
cmp
mov
aaa
pushf
push
push
sub
dec
jecxz
pop
aam
sbb
fstpt
das
cmp
pop
movsb
ret
jne
adcl
xchg
clc
push
fsubs
ja
xor
push
fidivrl
pop
sarl
ja
sbb
and
in
inc
ret
in
inc
lret
cmp
aad
enter
jp
xor
pop
jb
das
push
iret
adc
adc
ret
std
nop
div
cltd
fsubs
xchg
inc
cmpsb
xor
in
sbb
loop
push
lods
sub
in
stos
and
sub
add
xchg
ret
xchg
data16
xchg
lret
out
fists
mov
mov
sbb
lret
cwtl
jne
dec
addb
pushf
inc
adcb
xchg
dec
and
add
jp
out
add
loop
fidivrs
pop
ficoms
int
out
call
lock
and
fwait
inc
sbb
movsb
inc
xlat
sub
lret
mov
jbe
movsl
sbb
add
inc
sbb
int
lret
sarb
jp
rcrl
cmc
repz
mov
lds
aas
jbe
push
arpl
sarb
std
cmp
popa
and
lret
repnz
leave
mov
iret
mov
jns
hlt
lods
mov
in
in
gs
jl
sub
aaa
fcompl
push
cmovae
leave
cmp
xor
cmp
inc
subl
dec
cmc
sbb
pop
adc
into
ret
mov
lock
jl
dec
add
xor
sbb
jecxz
rclw
mov
cli
inc
push
mov
jge
fdivrs
icebp
sub
xlat
adc
xlat
xchg
clc
and
mov
popa
pop
movsb
and
mov
mov
scas
enter
push
push
dec
jns
or
loop
jge
jae
mov
xchg
repz
pop
lret
mov
dec
outsb
fisttpll
jle
sub
outsl
adc
mov
and
les
mov
pop
loope
push
aaa
add
add
inc
popf
lods
jl
push
mov
ret
lea
test
inc
add
sub
ficoms
popf
cmp
cmp
and
push
pop
ret
ret
sub
cmp
fdivl
adc
andl
mov
pop
or
negl
inc
lcall
ja
dec
aam
stc
ljmp
push
mov
dec
mov
stc
in
rol
mov
insl
roll
in
mov
sub
out
sar
ret
inc
fisubrs
pop
pop
add
jo
dec
imulb
pop
sti
mov
mov
mov
push
or
test
xchg
xchg
mov
ficompl
insb
ss
mov
sbb
lcall
movsl
outsb
aas
inc
xchg
sub
push
sub
rcpps
inc
dec
pusha
orl
cli
sbb
addr16
push
stos
aad
mov
clc
aas
pop
lcall
dec
jno
push
inc
clc
stc
imul
ds
fdivp
pop
sub
xor
sub
cmc
hlt
and
lock
movsb
mov
outsb
push
sbb
dec
mov
ljmp
cmp
lret
insb
fsubr
out
outsl
loope
in
inc
addr16
xchg
pop
mov
jbe
pop
mov
sahf
repnz
ja
fists
pop
cmp
inc
roll
popf
aam
repz
ljmp
loope
sbb
cld
mov
add
push
les
adc
mov
cld
cmpsb
lods
or
test
dec
dec
addr16
push
sbb
cmpsl
xor
fsts
or
mov
leave
enter
sbb
dec
xor
pop
out
mov
inc
movsb
sub
add
mov
or
daa
lock
imul
outsb
jg
enter
mov
cmpsl
mov
push
scas
mov
cmpsl
inc
cmp
mov
fstl
dec
cli
cmp
jmp
mov
jne
test
pop
mov
cs
push
pop
sbb
movsl
xchg
das
xchg
pop
push
dec
mov
out
jb
and
mov
push
push
cmp
pop
or
lods
push
jae
or
and
add
xchg
mov
cmpb
nop
shll
arpl
dec
mov
les
xchg
add
dec
xchg
pushf
sub
mov
cmpsb
mov
mov
mov
cmpsb
pop
jne
lock
insl
mov
push
cwtl
push
dec
aas
xor
pop
mov
add
cmp
mov
add
sbb
pop
jne
outsw
dec
mov
iret
sub
mov
pop
mov
sti
jae
dec
test
or
in
mov
decb
lock
sub
aam
push
mov
cmp
mov
lret
add
push
cltd
pop
andb
in
mov
stc
popa
test
lahf
cmpsl
js
or
mov
int
pop
pop
xchg
or
bnd
stos
mov
xor
push
or
jp
ret
je
and
filds
out
and
imul
ficoms
inc
int3
inc
loopne
xlat
sbb
pop
repz
out
dec
iret
stos
jno
push
mov
add
dec
hlt
add
inc
cmp
test
out
loopne
xor
pop
mov
jecxz
andl
in
insl
dec
gs
aam
adc
pushf
add
pop
lea
mov
xor
leave
push
mov
repnz
fstl
adc
loope
mov
cmpsb
js
repnz
jbe
lahf
dec
sub
dec
lea
clc
sub
sahf
fldl
filds
aam
scas
cld
xor
and
sub
pop
mov
add
daa
pop
push
dec
adc
imul
sbb
pusha
lods
daa
adc
pop
cmpsb
in
push
xchg
jbe
inc
out
mov
xchg
std
dec
sub
out
cmpsb
xchg
fmul
dec
fistl
or
or
adc
sti
adc
mov
pusha
dec
out
xchg
dec
lea
push
xor
pop
lds
movsl
xchg
in
addl
dec
pop
push
imul
repnz
cmpl
lods
into
adc
jno
aad
and
add
jno
decl
aam
sti
in
jmp
lods
push
mov
cwtl
arpl
dec
lahf
xchg
mov
mov
adc
and
jae
pop
inc
mov
lcall
cltd
and
mov
fs
je
sbb
cmc
test
ss
pop
mov
pop
fwait
jle
or
lods
jno
sub
sbb
movsl
push
mov
dec
pusha
sub
ret
jecxz
xor
js
mov
into
pop
aaa
insb
sbb
aaa
ret
std
mov
pushf
ret
addr16
pop
add
pop
and
sbb
mov
pop
xlat
fsts
xchg
or
pop
mov
xchg
repnz
cld
add
aam
popf
repz
and
mov
rorl
and
cwtl
push
data16
and
adc
add
pop
sbb
sbb
mov
lea
push
push
mov
mov
push
xchg
and
jo
lret
lret
sbb
lret
xor
push
shl
add
and
imul
pop
adc
mov
mov
sarb
ret
sub
mov
inc
movsl
cmpsl
mov
jmp
jg
xchg
xorl
jbe
push
sub
mov
shlb
xor
push
sti
adc
mov
mov
cli
lds
mov
aam
mov
inc
leave
pop
sti
es
and
inc
lea
xchg
ss
stc
dec
cmpsl
sahf
shll
imul
jp
sbb
dec
pop
popf
sub
das
add
inc
cli
dec
or
movsl
dec
inc
inc
jnp
int
jns
push
lods
mov
rcll
aam
pop
int
into
pop
mov
push
mov
jo
sub
cmp
add
addr16
cmp
adc
push
mov
loopne
pop
mov
pop
aaa
xorb
add
or
in
push
loop
lods
dec
sbb
xchg
cwtl
xor
aas
sarb
or
arpl
sbb
dec
pinsrw
loop
add
cmc
hlt
xchg
aam
jecxz
leave
or
push
cmp
dec
jl
out
out
dec
inc
sahf
js
icebp
mov
mov
pop
or
xor
andl
jne
sub
cmpl
ret
pop
or
or
adc
inc
addl
dec
or
push
add
decl
sub
dec
insb
test
jmp
lds
cmp
arpl
clc
cld
loope
fdivl
lods
lock
sahf
ret
jne
lcall
sbb
cmpsl
jo
adc
dec
lds
lds
jecxz
xor
pop
jns
orl
jg
loop,pt
xchg
andl
or
aam
test
frstor
xlat
nop
enter
imul
repnz
cmpsl
lods
fsts
sarb
pusha
mov
cltd
ja
outsb
lret
repz
lds
cmp
pop
adc
leave
sub
popa
inc
jbe
arpl
and
pop
or
ss
or
mov
mov
loop
lock
ffree
out
add
popf
lods
dec
lds
call
cltd
popf
mov
xchg
test
xor
roll
or
dec
out
movswl
mov
icebp
enter
push
test
mov
dec
dec
daa
hlt
push
xor
clc
sub
push
stos
pop
outsb
jne
inc
or
outsb
push
fdivr
movsb
fidivs
cmp
outsb
scas
add
dec
dec
and
lcall
dec
and
and
jmp
jmp
mov
fs
in
rcll
test
adc
cli
decl
cmp
fwait
cli
jmp
and
stos
jg
mov
cmc
mov
ss
test
mov
imul
pop
sbb
mov
push
jge
hlt
adc
jno
mov
push
sar
inc
clc
lcall
push
and
movsb
ljmp
add
pop
dec
sub
cli
push
inc
out
mov
mov
insl
adc
add
imul
mov
sahf
popa
ja
jp
es
jb
push
xor
pop
lea
imulb
inc
jmp
pop
cli
outsb
addr16
sub
arpl
push
jecxz
aad
testb
es
inc
jbe
mov
and
jmp
cmp
pop
xchg
adc
cmp
es
notl
xchg
out
outsb
or
out
dec
jl
shrl
pop
add
jle
adc
push
scas
adc
aam
pop
inc
xorb
pop
cwtl
mov
lea
adc
lods
lock
push
int
fimull
enter
xlat
adc
pop
repz
or
jge
test
cmp
bound
ds
mov
jl
pop
leave
mov
sti
call
scas
jne
inc
jg
push
addb
sub
jge
lahf
faddl
pop
or
inc
push
ficoms
jg
test
adc
enter
mov
in
sar
fstl
adc
push
fsubs
stc
loopne
dec
gs
cmp
lea
xor
mov
out
xchg
test
push
mov
addr16
rclb
xor
pop
je
sub
in
and
mov
dec
sub
ds
jne
jp
test
clc
repnz
ret
loope
xchg
cmpsb
jl
pop
fcomp
cltd
inc
incl
lea
das
cmp
jnp
cs
pop
pusha
jle
push
and
jg
xor
pop
fsubl
dec
mov
xchg
jbe
mov
lods
push
adc
mov
xchg
xchg
inc
push
and
dec
sub
or
test
call
bound
popa
ffreep
mov
fstpl
mov
jno
into
std
jl
insb
sub
mov
jg
leave
repnz
jle
aam
xor
insl
sbb
mov
dec
jo
ja
loope
out
cld
xor
cli
test
pop
mov
mov
add
movsb
out
inc
cltd
cmc
sbb
lea
mov
add
rcpps
not
fwait
jb
push
mov
adc
pop
aas
scas
in
mov
xchg
pusha
mov
repnz
mov
sub
mov
cmp
mov
pop
push
mov
add
ljmp
add
movsl
daa
in
cmp
inc
mov
mov
test
jnp
add
mov
push
sub
inc
or
ds
outsl
pusha
dec
adc
mov
jns
lods
cmpsl
scas
fidivrs
push
sub
imul
xor
xlat
ficomps
xchg
push
fmull
fstpt
or
dec
xchg
xchg
and
lret
call
test
or
fisttps
js
test
mov
sub
inc
xor
jge
inc
and
pop
adcb
push
lcall
imul
sar
ds
jnp
pop
clc
push
mov
rorb
mov
rorl
jbe
pop
mov
push
push
mov
test
aam
cs
sub
mov
enter
cld
loop
dec
cmpsl
fists
hlt
fstpt
push
lret
jae
add
inc
outsl
pop
daa
jmp
add
sbb
clc
pop
repz
pop
mov
push
sbb
jp
outsb
leave
push
inc
mov
inc
adc
xchg
adc
sbb
pop
pop
mov
in
lret
jge
cld
aaa
mov
inc
lds
movb
push
jle
sub
jp
in
adc
mov
test
int
and
inc
xchg
decl
test
es
dec
in
cmp
jae
mov
int
sub
push
push
inc
cld
fcompl
fistpll
repz
cmp
arpl
jns
lahf
push
pop
aam
jns
adc
daa
or
daa
cld
jns
sbb
and
mov
mov
mov
xchg
daa
xlat
pop
jge
add
cli
roll
fwait
movsl
pop
cmc
inc
or
loopne
or
and
int
or
lret
and
push
jo
mov
gs
inc
bound
mull
xor
fsts
stos
inc
jbe
inc
xor
sbb
dec
push
lret
lret
xor
mov
sub
dec
inc
fdivrl
les
subl
fwait
push
es
pop
xor
in
mov
mov
fwait
dec
popf
fnstcw
fwait
dec
cwtl
aaa
mov
iret
cmpsl
pop
insw
in
jnp
sub
sahf
xchg
jecxz
mov
push
adc
ds
dec
fs
mov
cld
popa
ss
test
ds
in
inc
sarb
adc
das
movl
lret
iret
in
sbbl
inc
adc
daa
or
hlt
sbb
test
and
arpl
xchg
sub
sbb
es
mov
mov
push
lcall
repnz
sarl
inc
imul
mov
and
sbb
daa
mov
mov
add
test
ret
popf
cmp
lahf
lcall
jmp
inc
in
xchg
scas
rol
add
mov
or
addl
faddl
insb
out
inc
orl
test
push
addr16
xchg
mov
test
cmpsl
cmp
lret
loop
jne
aad
pop
pushf
xchg
ds
iret
inc
mov
or
stos
pop
mov
sub
loop
mov
mov
sbb
insb
cmc
cmp
std
mov
inc
mov
jo
js
adc
cmpsb
jmp
mov
add
xlat
inc
dec
in
jne
mov
cmc
inc
rcll
pop
jmp
fiaddl
lods
test
hlt
faddl
and
scas
pop
dec
mov
lret
stos
push
push
mov
xor
inc
cmp
xor
pop
scas
movsb
mov
xchg
xor
fcmovnb
jns
mov
adc
push
cmc
lds
pop
jp
insb
and
popa
mov
jne
dec
xor
sbb
lock
pop
mov
and
cwtl
out
mov
adc
mov
xor
and
arpl
sub
push
test
ret
mov
jle
push
and
stos
xorb
loop
cmpsb
mov
loop
sbb
or
int3
in
xor
cs
ljmp
test
xor
scas
sub
push
sbbl
out
push
pop
movsl
scas
jle
out
sbb
xchg
mov
mov
dec
pop
pop
dec
jno,pn
and
sbb
mov
push
cmp
jno
push
loope
adc
in
sub
int3
ss
js
imul
cmpsb
jg
insb
rclb
nop
stc
movsl
jb
fcmovu
or
adc
mov
sbb
iret
cmc
outsl
insb
pop
xchg
sub
mov
mov
mov
xchg
aad
insl
dec
addr16
jnp
mov
gs
in
imul
adc
stos
xchg
cltd
or
cmpsl
scas
iret
lods
pcmpgtd
xchg
xchg
out
loopne
out
gs
je
ljmp
pop
xchg
push
mov
or
inc
push
mov
push
hlt
bound
cbtw
in
sub
xchg
pop
xchg
std
sub
or
inc
lahf
neg
dec
or
pop
push
xchg
popa
mov
fimull
pop
push
in
cmc
mov
add
loope
fistpll
sarb
mov
shlb
jmp
sbb
loopne
sub
or
push
push
sub
insl
cwtl
dec
push
pop
cld
lret
xor
setl
xlat
xchg
testl
cmp
cmc
insb
adc
fs
pop
adc
add
mov
xchg
sarb
push
std
ja
out
sbb
cmc
sbb
jge
push
dec
test
or
push
xchg
mov
stos
das
mov
cmp
fsubrl
inc
mov
and
inc
in
inc
push
xchg
cmpsl
aad
or
dec
pop
and
sbb
repz
pminub
mov
mov
cmp
test
inc
pop
pop
push
lret
fisttpll
push
mov
mov
dec
fstpt
xor
pop
pop
call
popf
stc
mov
sub
dec
mov
enter
sbb
mov
lahf
sbbl
sub
jne
xchg
mov
dec
adc
jo
ljmp
adc
test
mov
sti
push
adc
xor
push
stc
out
sbb
jno
out
pop
push
pop
shlw
pushf
xlat
xchg
xchg
mov
xor
clc
cmp
dec
sub
push
add
loop
xchg
lcall
or
jg
jmp
add
sub
imul
leave
lds
push
jecxz
int
insl
inc
sub
dec
pop
inc
mov
cltd
jnp
or
lret
rorb
mov
mov
scas
sbb
push
out
sti
sbb
fsubs
inc
mov
xor
mov
sub
add
cld
inc
cmp
iret
jg
cs
nop
push
call
add
jbe
push
hlt
push
cmp
bound
outsb
mov
or
mov
cmp
jmp
leave
jb
scas
sbb
dec
test
sub
xchg
fisttpll
mov
mov
or
sub
mov
test
dec
xor
jo
iret
loop
mov
jb
jbe
mov
into
movsw
in
gs
aas
push
aaa
cli
sbbl
sahf
mov
add
clc
andb
add
mov
imul
cwtl
mov
pand
jmp
repz
cmp
add
repnz
pushf
mov
and
outsl
inc
pop
or
cld
mov
mov
dec
sti
fcoml
xor
pop
add
inc
jp
sub
add
pop
adc
rorl
xchg
divb
push
mov
loop
enter
aas
sahf
and
mov
pop
xchg
popf
sub
fwait
and
movsl
jae
sahf
sbb
mov
pop
push
xlat
push
insb
xor
cli
sahf
dec
out
pop
cmc
test
popf
nop
shll
inc
push
add
addr16
xor
sahf
cmp
xchg
or
add
dec
fwait
stos
pop
jns
in
and
mov
ror
push
je
ljmp
push
rclb
jns
push
pop
jle
mov
rclb
insb
mov
dec
dec
lods
mov
leave
out
nop
loop
cmpsl
stc
hlt
ja
jns
arpl
xchg
add
test
out
fwait
jns
fcomps
pop
cmp
or
jno
out
pop
outsl
xor
ljmp
adc
cld
fdivr
or
adc
mov
in
fistps
push
sub
push
mov
popa
push
or
sbb
insl
push
add
rolb
out
roll
jo
popa
mov
icebp
rclb
stos
icebp
enter
or
in
in
jge
jne
mov
lds
adcb
adc
pop
gs
cmp
aam
imul
imul
pushf
mov
sub
mov
sar
repnz
movsb
jae
sarb
cmpsl
and
xor
sbb
pushl
and
xor
adc
test
and
mov
mov
movsl
dec
aaa
sbb
jg
fmuls
mov
stc
jg
pusha
fwait
popa
xor
mov
jmp
sbb
push
sbb
mov
xchg
jp
xchg
mov
ss
fs
add
stos
jnp
gs
push
aaa
or
das
inc
ret
rcrb
xor
jb
mov
scas
sahf
jo
addr16
mov
xor
ret
jl
push
cmp
add
in
sahf
call
sbb
je
jo
arpl
sbb
sub
inc
mov
movsb
sarl
ja
pop
mov
lods
add
fstl
fcoms
lahf
ds
pop
jmp
shr
push
jge
pop
cmpsl
fidivrl
mov
cmp
sbb
in
xor
addr16
movb
or
fdiv
pop
movsb
dec
sub
test
test
fwait
out
outsb
push
push
xlat
jg
pop
lock
pop
mov
cmp
dec
enter
dec
stc
rcll
push
cld
xchg
outsb
and
mov
sub
ja
jecxz
inc
sub
sbb
fsubp
pop
cltd
outsb
adc
loopne
pop
aad
cmp
fstp
andl
and
mov
xor
cmp
xchg
call
loop
fnstcw
daa
aam
adc
out
xor
xchg
loop
hlt
shlb
mov
repz
xlat
jbe
repnz
pop
pop
pop
xchg
sbb
xchg
inc
adc
leave
movsl
xlat
popa
push
mov
xor
pop
lret
stos
xlat
sbb
das
cmp
or
and
sbb
cld
int3
mov
fbstp
mov
scas
jno
mov
popa
pop
rolb
mov
mov
fs
xchg
or
gs
push
fsubrs
pushf
and
or
mov
jl
fs
sub
pushf
mov
pop
jnp
cltd
adc
ret
mov
test
jp
xchg
push
stos
cmc
test
dec
jb
push
cmpl
xchg
mov
adc
in
push
test
xchg
jg
popf
pop
xor
sbb
xchg
out
stc
sub
sar
push
or
add
fdivl
xor
push
cmp
jg
push
adc
je
pop
gs
cmp
cmc
sub
movsb
pop
push
movsl
in
mov
int
and
lods
pop
shlb
out
sbb
sub
test
popa
pop
das
cmc
scas
jno
inc
add
lret
out
mov
mov
fs
dec
shlb
push
jmp
or
jmp
scas
jmp
outsl
std
gs
sbb
enter
rcll
pop
add
lods
loope
popf
in
xchg
mov
sub
mov
jb
cmp
ds
and
fldcw
push
sar
jbe
push
cwtl
fisubrl
test
pop
add
ljmp
push
fisubs
cltd
push
push
pop
insb
in
loope
in
mov
mov
mov
jecxz
add
cvttps2pi
ja
jecxz
in
sbb
jb
cmpsl
jecxz
std
cs
and
roll
cmp
and
mov
fldcw
test
daa
int3
les
sahf
cs
jo,pn
ficompl
sub
add
test
pushf
sarl
stos
or
repz
lret
mov
into
sbb
pop
pop
mov
push
cmp
inc
mov
cmp
into
mov
cmp
and
divb
dec
mov
aad
cli
stos
jp
clc
popf
cwtl
pushl
leave
test
inc
jb
xchg
cmpsl
mov
dec
out
pushf
lods
imul
dec
pop
adc
xchg
fldl
xchg
pushf
push
in
cmp
xlat
movsb
mov
inc
std
or
inc
pop
dec
je
not
imul
sbb
fildll
dec
pop
rcll
scas
fisttps
aam
pop
mov
push
xchg
into
fimuls
adc
fucom
pop
aas
hlt
dec
adc
mov
xchg
lods
into
adc
dec
dec
add
cmp
add
sub
scas
out
jb
add
or
fcmovnbe
xchg
inc
sbb
mov
repnz
pop
das
lcall
dec
inc
lret
in
shl
push
mov
nop
notb
es
das
test
cmp
outsl
loopne
cmpsb
aad
push
mov
sti
mov
jp
xchg
out
lea
xor
cli
comiss
xorb
mov
xchg
call
icebp
lods
sub
loop
popf
lea
push
adc
dec
iret
lahf
sbbb
adc
inc
dec
sbb
sti
push
inc
dec
and
xchg
sub
rcll
pop
mov
push
and
lock
in
ret
fisubs
jnp
lock
fisubl
dec
jno
adc
jno
mov
jnp
std
and
mov
jo
push
lret
movsb
testl
addr16
test
pushf
xchg
ss
push
ret
push
clc
jle
and
sub
cmc
fmulp
and
out
and
pop
mov
jle
bound
lock
mov
fistl
sbb
arpl
repnz
inc
lods
and
xor
sub
dec
xor
sbb
and
shrl
fidivrl
sub
fninit
or
mov
xor
push
jge
pop
dec
mov
or
mov
inc
pop
jns
xchg
lea
push
push
sub
mov
clc
lahf
sbbb
mov
push
lock
pop
sar
int
jmp
clc
xchg
or
and
and
push
adc
sbb
add
cmp
mov
push
into
fwait
fwait
repz
imul
push
fmuls
jae
fs
add
push
mov
dec
dec
fcmovnbe
sbb
cmp
sbb
imul
push
cld
cmp
mov
je
jl
or
repz
and
add
test
and
cmp
mov
sbb
jbe
enter
sahf
jl
xchg
andl
es
popf
andl
sbb
movsb
cmp
adc
jae
push
push
dec
stos
out
rcrb
shlb
fwait
inc
out
and
push
lock
shll
outsl
imul
out
icebp
nop
pop
adcb
or
mov
stos
repnz
int3
inc
jnp
mov
and
data16
jne
sub
rorb
xor
aaa
push
jne
jne
cld
mov
ret
and
data16
jmp
mov
fdivl
sbb
sbb
xchg
dec
call
cmp
sti
js
and
fnsave
adcb
aaa
data16
lds
and
subl
mov
xchg
addr16
mov
popa
orl
loop
movsl
and
jo
lds
dec
hlt
xlat
and
nop
ja
pusha
fmuls
call
xchg
push
cld
push
mov
jnp
lret
addr16
jne
pusha
stos
push
arpl
cmc
adcb
push
xchg
hlt
add
ljmp
repz
xchg
lods
sti
xlat
cmpsl
sahf
arpl
fbstp
in
lcall
das
mov
jo
loope
and
mov
jb
iret
sbb
xchg
ret
std
es
xchg
movq
clc
cmpsw
scas
gs
sub
lea
cmp
jne
sub
jp
lea
movsl
inc
clc
adc
mov
mov
call
jae
in
push
jp
add
mov
xchg
loop
jl
xchg
inc
push
es
and
addr16
test
enter
dec
sub
jmp
add
cwtl
push
and
popa
fisubrs
or
xchg
insb
xor
pop
das
aas
xor
add
pop
mov
sti
jl
mov
out
add
addb
sbb
int
stos
sti
push
fidivrl
push
pop
jge
push
js
sub
sbb
jo
sbb
xor
dec
orl
jb
adc
inc
sbb
aaa
ljmp
into
xchg
or
jle
stos
xor
inc
int
jne
cmp
inc
cld
pop
cmpsb
enter
roll
lcall
scas
sub
imul
dec
mov
aaa
cltd
cwtl
in
inc
pusha
jo
faddp
int3
or
lock
dec
mov
inc
lea
in
or
xchg
mov
adc
negb
lods
ds
outsb
cmp
dec
push
pop
cmp
jg
out
imul
js
mov
sbb
test
leave
mov
fistl
mov
and
pop
shll
repz
mov
xor
or
inc
xchg
movsb
mov
cmp
scas
in
in
xor
test
mov
ja
mov
bound
test
sub
mov
fs
fprem1
cmp
xor
fnsave
inc
inc
add
dec
xor
aad
adc
pop
lods
push
insl
stos
mov
jb
cmc
adc
addr16
xchg
fisubrl
pop
call
push
or
add
mov
gs
or
jge
jno
insl
jle
inc
out
cmp
mov
push
dec
jno
jbe
dec
mov
daa
jnp
mov
sbb
sbb
clc
jno
mov
add
filds
sbb
lahf
fbld
sub
mov
movsl
movl
and
adc
mov
jl
adc
xchg
xor
jae
movsl
xor
cmp
fdivl
testl
incb
out
into
pop
test
enter
push
jle
out
aaa
lret
push
or
cmp
ret
aas
adc
mov
fstl
into
fldt
mov
pop
mov
imul
inc
insb
sub
mov
inc
mov
and
cmp
out
dec
adc
jp
or
xchg
sub
or
sub
fdivl
jbe
xchg
or
out
cmp
repz
mov
imul
jne
inc
pop
ss
jg
clc
sti
ret
add
mov
pop
fistl
sub
xor
nop
push
lds
mov
filds
jp
jl
mov
ret
or
mov
mov
jbe
push
cmp
jecxz
paddusb
in
lcall
xor
push
xor
pusha
cwtl
push
dec
cmp
lcall
inc
pop
jp
cmp
push
and
mov
add
rcr
icebp
sub
popa
adc
ja
pop
adc
cld
adc
cmc
and
push
pusha
mov
xor
jp
test
or
stc
sbb
test
xrelease
dec
mov
cmpsl
mov
popf
das
pop
in
adc
movsb
enter
ja
dec
add
ljmp
lahf
psllq
je
cmp
cmpsb
and
sahf
sbb
xchg
rclb
xor
enter
xchg
adc
push
push
out
fs
inc
mov
test
into
rcr
fdiv
test
repnz
ret
rorb
adc
add
inc
mov
and
xchg
es
sub
call
xor
adc
sbb
mov
fsubl
test
out
test
into
pop
mov
into
sub
xor
ja
fsubp
int
mov
lock
jp
test
outsl
cwtl
push
mov
mov
loop,pn
mov
push
jbe
stos
xchg
jecxz
call
mov
popf
xchg
sbb
movsb
push
dec
add
sbb
mov
jnp
sub
stos
cmp
fs
gs
insb
sbb
sti
push
enter
jl
imul
insb
cld
add
push
in
call
int3
xchg
dec
enter
addr16
xchg
imul
xor
inc
stc
das
add
enter
push
xchg
insl
mov
stos
jae
xor
insl
ror
cmpsb
cmp
xchg
mov
inc
jecxz
or
add
andl
loope
or
jns
or
mov
repz
jns
jnp
or
daa
or
ret
sub
sbb
cmc
enter
fs
arpl
or
mov
mov
jmp
sbb
test
stc
lcall
aas
out
xlat
dec
inc
dec
push
addr16
push
std
repz
and
cmp
shlb
sbbl
nop
cmp
scas
mov
xor
dec
fnstenv
mov
sahf
xchg
bnd
jo
mov
xchg
sub
setle
insb
inc
gs
jae
mov
adc
das
clc
test
movsl
pop
push
add
lret
jp
xor
xchg
das
pop
sbb
lea
rcrb
sub
sub
sbb
inc
xchg
fwait
and
inc
out
js
adc
add
ret
scas
imull
xor
jbe
pop
js
dec
sub
pop
inc
fsubrs
or
or
jmp
cmpb
mov
mov
dec
das
ret
rolb
mov
cmpsl
adc
cmpsl
cmpsb
push
sbb
fcompl
out
pushfw
imul
fnstsw
mov
popa
scas
in
mov
pop
xchg
aad
stos
jb
push
je
jl
inc
test
leave
lahf
roll
mov
xchg
fists
icebp
sarb
cmp
inc
movsb
test
pop
cmp
ds
mov
mov
in
jg
xchg
pop
shll
test
add
cmp
pushf
inc
cs
jp
jae
push
scas
cmp
in
xchg
dec
loope
push
ret
not
movsl
aaa
adc
stos
fildll
xor
adc
adc
jae
cmp
xor
push
lcall
xchg
dec
test
imul
mov
cmp
inc
lods
xchg
fildl
xchg
push
popa
ds
pusha
iret
dec
dec
push
imul
jl
and
cmp
inc
popf
jb
jmp
js
lahf
cwtl
lahf
mov
cli
and
mov
call
mov
pop
mov
pop
or
mov
das
jno
mov
fstsw
mov
loopnew
jl
out
mov
dec
xchg
mov
imul
sub
adc
test
and
dec
out
push
nop
repnz
jbe
rorb
pusha
aam
inc
in
add
and
sub
test
cmp
into
fistpl
dec
add
sub
ret
aad
daa
fistpl
push
insl
pause
aas
dec
sar
jecxz
fucomp
mov
xor
pushf
scas
mov
ds
jo
adc
push
inc
add
sub
cmpsl
sbb
or
mov
insl
insl
ret
xchg
push
push
xchg
call
inc
mov
pushf
cmp
fisubrl
pop
sahf
lods
mov
mov
cmp
mov
jl
movsb
fst
mov
loop
iret
jns
inc
jge
xchg
xor
sti
cmc
in
fyl2x
shrb
rorl
out
mov
push
pop
adc
mov
filds
mov
out
push
shlb
push
stos
mov
add
adc
shlb
mov
loope
and
cmp
sub
xchg
and
in
mov
push
int3
inc
sbb
xchg
or
mov
pop
dec
repnz
xor
js
insl
test
hlt
lcall
ljmp
fsub
dec
loope
insb
mov
sbb
ret
mov
addr16
nop
mov
bound
mov
cwtl
sub
rcrb
lahf
das
mov
pop
pop
stc
mov
rcrb
imul
xor
fdivl
jns
stc
fadd
ds
pop
adc
mov
xlat
pop
cmp
or
add
and
xor
or
jo
xor
dec
aad
jp
mov
inc
test
xlat
push
aas
lret
jl
mov
testb
or
rolb
cmpsb
pop
adc
int3
cmpsb
fstps
subb
insl
mov
push
out
jb
je
mov
imul
mov
and
push
cmpsb
pop
cwtl
fs
and
data16
mov
mov
jbe
and
jp
call
in
adc
rcrl
jns
testl
or
xor
inc
sub
sbb
shl
out
mov
shl
mov
mov
cmpb
pop
imul
sub
xchg
cwtl
lret
mov
lods
xchg
dec
dec
pusha
addr16
adc
mov
imul
sub
inc
or
xchg
aam
or
flds
rcll
or
jecxz
xchg
mov
add
mov
dec
add
insb
mov
jmp
cmpsl
or
jg
push
mov
mov
jnp
in
or
jle
dec
xlat
sub
mov
repnz
ds
add
jns
mov
push
movsb
or
xor
loop
fnstsw
inc
jp
jmp
add
and
andl
sub
pop
cmp
pop
xchg
ja
rorb
call
mov
and
add
adc
cmpsl
fcmovu
out
pop
mov
jp
xchg
in
andl
xor
push
jae
pop
loop
pushl
aaa
aas
jle
cmc
or
inc
jne
dec
cli
gs
gs
pop
push
repz
imul
js
lods
mov
lret
repz
rolb
mov
mov
xchg
add
jge
xchg
inc
ficompl
or
xchg
imul
pop
bound
dec
xchg
mov
pop
push
and
movsb
lock
insb
imul
push
dec
cwtl
pop
push
xchg
lock
dec
test
ljmp
clc
arpl
popf
mov
mov
cmpsb
fsubrp
xchg
inc
pop
cmp
adc
rclb
fiaddl
mov
ja
out
xlat
enter
mov
pop
jnp
cmpsl
rorl
add
dec
daa
aam
cmp
inc
cli
mov
add
scas
lcall
sarb
add
and
inc
cmp
subl
cli
jae
pop
lea
movsb
pop
push
jmp
stc
adc
into
popa
xchg
popf
cli
shrb
cmp
dec
sbb
jecxz
scas
mov
lods
adc
aad
push
out
xor
pop
inc
rolb
and
add
test
inc
sbb
cs
jp
mov
sub
jnp
sub
pop
wbinvd
mov
push
cs
and
jmp
push
jns
mov
cld
nop
ret
sub
inc
popf
inc
and
ret
pop
mov
aas
xor
cmpsl
adc
sub
mov
mov
push
in
add
xchg
int3
sbb
xlat
sub
sub
and
xchg
fldcw
dec
call
mov
js
in
stos
cmp
push
xchg
repnz
outsb
cmc
loop
add
ret
movl
stos
gs
lods
jnp
pusha
or
cmp
sub
pop
scas
and
pop
sub
lahf
xchg
imul
ror
lds
aam
adc
lret
rcrl
push
orl
and
sbb
sub
enter
out
in
lds
pop
sarl
cmc
xor
and
pusha
out
ret
jmp
stc
jne
lods
aam
and
lahf
dec
sbb
iret
out
sarb
xlat
xchg
xlat
inc
cmpsl
cmp
mov
mov
mov
mov
pop
ret
in
jnp
sbb
push
clc
add
mov
aad
or
lahf
scas
movsb
cld
inc
ds
js
xchg
std
call
or
lds
or
jb
jo
outsl
shll
lret
cmpsl
cs
mov
add
mov
sti
dec
out
mov
xchg
xchg
lods
mov
popf
fldcw
in
cmpb
cld
xchg
push
outsb
imul
ss
iret
nop
into
cmpsb
in
icebp
add
xchg
inc
sub
sbbl
jns
inc
pop
push
mov
dec
adc
out
mov
and
push
in
jnp
sub
mov
imul
cmpsb
mov
jge
mov
enter
ss
ret
xchg
xor
fildll
dec
ds
add
aas
mov
push
out
aad
rcll
add
and
or
dec
mov
in
push
insb
and
push
bound
add
cltd
cmp
inc
and
fwait
adc
xchg
lods
mov
sub
int
sbb
scas
rolb
push
mov
dec
mov
sub
xor
cmp
jne
or
call
out
movsl
std
push
test
popf
jno
ljmp
imul
mov
mov
daa
jmp
in
lret
xor
xchg
xchg
daa
mulb
push
mov
popf
or
incl
jnp
jmp
adc
mov
scas
ds
sbb
add
mov
nop
dec
xchg
cmp
int3
cmp
inc
cmpsl
dec
pop
mov
lds
xor
xor
filds
inc
lea
imul
mov
push
jne
int
clc
repnz
cmpsb
testl
pop
mov
into
push
mov
mov
jp
pop
orl
sub
pop
jge
in
jp
dec
mov
mov
adc
mov
clc
mov
mov
jge
xchg
orl
pop
rcr
cmp
xchg
pop
cld
js
pop
iret
xchg
clc
cmp
push
xor
and
or
jecxz
or
or
mov
insb
movsb
in
call
push
les
or
xchg
cld
xchg
cmp
pop
arpl
jae
dec
cld
xlat
sbb
js
cmp
inc
or
push
jo
pop
jae
mov
ss
cmp
xchg
ljmp
pop
fidivs
inc
pop
jle
data16
fwait
lret
pop
mov
outsb
aad
dec
push
dec
nop
movsb
dec
jns
and
rcll
push
int
mov
push
lds
xchg
mov
pop
mov
gs
shlb
stos
roll
cmp
cmp
push
incb
imul
push
shlb
push
dec
enter
in
aaa
fwait
jns
in
inc
or
jle
aaa
cld
pop
fsubl
ret
lret
cmpsb
jmp
ret
push
pushl
int3
jnp
in
out
cmp
out
sub
mov
test
push
lods
pop
movsl
and
fs
stos
push
inc
ljmp
xor
call
push
cmp
mov
out
std
scas
push
xor
les
sbb
scas
adc
pop
mov
jg
test
pop
inc
cmpsl
mov
add
das
out
inc
ret
shrl
xor
xchg
push
pop
mov
push
and
xchg
mov
rclb
jnp
repz
adc
scas
dec
sub
test
stos
adc
je
cli
in
mov
pop
cmp
and
xchg
jp
outsl
lcall
orl
rcrl
int3
cmp
ret
dec
cmpsb
sti
clc
xor
push
pop
jg
test
pop
jno
jge
sub
addr16
pop
pop
mov
popa
adc
or
pop
mov
add
pop
mov
jnp
rorb
or
mov
dec
lahf
pop
jg
shrb
inc
lcall
sub
xchg
mov
cmc
xchg
out
cmpsb
jmp
cli
xor
pop
out
mov
in
add
aaa
push
add
xor
in
add
pop
lret
pushl
mov
lcall
ja
and
cld
add
xchg
inc
adc
out
cmp
fidivrl
loope
lea
cli
sub
mov
pop
sbb
lods
push
hlt
sbb
xor
mov
addb
push
xchg
sbbl
add
push
aad
loop
xor
in
mov
lea
push
jge
jge
int
mov
lcall
jns
shl
xor
mov
pop
pushf
inc
cmp
sbb
mov
xor
add
inc
push
leave
push
leave
outsb
pushf
in
or
push
pop
xor
cmp
in
mov
xchg
std
add
aas
sub
push
push
cmpsl
ficompl
xchg
movsb
and
lret
mov
push
jb
mov
dec
add
or
lea
in
in
push
jmp
xor
movsl
or
xor
insb
ror
andl
cmp
std
and
ss
lahf
push
pop
notl
mov
mov
fstps
imul
lea
xor
push
popf
xorl
push
dec
adc
cmp
daa
scas
or
int
hlt
inc
mov
aaa
aaa
lds
sti
cmp
hlt
lret
mov
xor
push
sbb
adc
shr
xor
das
outsb
xlat
push
jnp
out
xor
fisttps
movsl
loope
jecxz
sbb
jp
mov
push
dec
pushf
cs
cli
mov
dec
insl
push
cmp
add
dec
fdivrp
out
cli
retw
xchg
dec
aad
ss
jl
push
mov
xchg
shrb
inc
lds
xorb
js
jmp
mov
ret
icebp
xchg
cmpsl
stos
and
or
mov
push
mov
jmp
or
hlt
stc
mov
insb
dec
dec
cmp
hlt
xchg
mov
mov
mov
test
or
mov
loopne
rolb
sbb
dec
movsb
sub
sub
daa
fwait
jnp
mov
je
fmull
test
nop
aad
pop
imul
repz
sub
push
xchg
cmc
ss
push
adc
inc
stos
dec
aas
inc
lea
mov
ret
sub
out
imul
xor
mov
cmpsl
push
xchg
enter
stc
cmp
jns
repnz
cmp
call
sbb
jo
mov
pop
aam
repz
ss
dec
scas
enter
and
popa
int3
mov
sti
xchg
divb
std
loopne
shlb
mov
cmp
repnz
mov
lret
lds
aas
add
scas
sub
sbb
test
mov
lds
out
fisttps
data16
popa
sbb
movsl
mov
fsubrl
sbb
js
jg
add
mov
out
or
pop
fs
aad
aas
dec
out
xchg
pushl
xchg
inc
repnz
xchg
xchg
pop
fisubrl
sub
jo
adc
cld
out
fmuls
jnp
pushf
rorl
fwait
or
cmp
cld
jge
dec
lret
mov
insb
repz
push
add
lods
xor
lret
aas
daa
movsl
repz
loope
sbb
and
sub
push
xlat
xor
push
pop
loope
add
add
mov
ret
nop
cmc
outsl
lcall
popf
xor
jae
dec
xchg
mov
fcompl
mov
test
xorl
stc
ljmp
sub
lret
icebp
mov
cmp
xor
adc
inc
lock
aas
sub
addr16
pusha
fisttps
xchg
sbb
gs
pop
aam
cld
test
dec
loope
mov
test
xor
fwait
enter
pop
repz
arpl
aaa
pop
scas
scas
pop
sub
inc
sub
inc
jle
sub
sbb
xor
mov
inc
lods
jle
sub
push
xchg
arpl
jne
rolb
mov
add
pop
lds
mov
rcll
rcrb
xchg
fldt
cli
lods
xchg
stos
xor
out
leave
sub
icebp
pushf
dec
loope
mov
push
enter
scas
sbb
mov
gs
or
xchg
rcll
pop
sti
test
psubsw
jne
decb
insb
xor
xor
mov
mov
fsubl
test
loop
outsb
lods
sub
mov
in
in
jns
pop
xor
stc
rolb
mov
xchg
je
mov
push
arpl
int3
dec
xor
cmp
shr
repnz
or
mov
loop
imul
in
jl
arpl
pop
mov
xchg
add
mov
push
jmp
xchg
loope
cmp
adc
lds
mov
mov
sbb
add
fistpll
add
leave
or
scas
or
cmp
ds
inc
cmp
adcl
cld
daa
jge
loope
mov
adc
mov
jmp
push
inc
js
fsubs
adc
inc
mov
jne
dec
xor
jp
js
cltd
pop
repz
bound
xchg
push
jge
das
sbb
cmp
mov
bound
jb
jecxz
das
lods
jb
pop
push
mov
adc
cmp
xor
mull
aam
sbb
mov
int3
lea
lret
cli
inc
xor
into
mov
stc
mov
in
imul
fimull
inc
in
mov
inc
cmpsb
stos
jae
push
jge
jno
icebp
lock
xchg
jle
jnp
sub
mov
sbb
rcl
stc
pop
mov
into
and
sub
loop
outsb
or
jns
icebp
xor
andb
or
lret
add
mov
and
xor
cmpl
xor
push
jp
cmp
inc
mov
sbb
test
mov
fs
pusha
mov
enter
or
mov
push
mov
and
or
jmp
daa
cs
lds
mov
fstps
inc
add
dec
vmovupd
xor
aas
xchg
fs
xchg
sahf
inc
dec
jle
repz
or
jae
xor
jp
aad
xlat
pop
out
mov
adc
push
push
add
ret
adcb
popa
push
repnz
fsubr
mov
mov
iret
lcall
jns
nop
stc
pop
and
je
decb
fisubl
sbbb
test
pop
fstl
pop
pop
cld
bound
lea
sti
ds
xchg
inc
add
pushw
loop
ja
sub
stc
jns
push
jmp
ja
roll
call
cmc
das
xor
inc
cltd
ror
dec
sub
push
push
call
into
repz
out
filds
jbe
mov
add
inc
in
mov
dec
lcall
fwait
scas
mov
jns
mov
xor
sub
dec
ret
ret
jb
jb
add
mov
xchg
cwtl
mov
push
add
push
dec
stos
outsb
cmp
jns
add
movsb
push
push
pusha
jae
sahf
fbstp
sub
divb
mov
and
dec
ljmp
jo
mov
imul
pop
mov
jg
mov
sbb
mull
les
stos
out
testb
mov
inc
in
jle
add
enter
push
or
dec
add
dec
leave
xchg
or
jns
nop
daa
or
push
stos
cmp
sbb
sbb
lods
dec
aad
pop
pop
hlt
xchg
cmp
mov
push
sbb
les
test
xchg
jb
push
sti
cmc
incl
cmp
mov
mov
js
pop
add
cmp
add
jns
pop
ja
pop
xor
insb
pop
loopne
jg
add
enter
sti
aas
mov
and
adc
adc
out
inc
test
pop
lods
rorl
imul
cmp
outsl
xchg
xor
mov
adc
jae
fwait
and
pop
and
insl
jmp
sbb
mov
push
or
inc
fstpl
dec
mov
push
pop
jne
jne
mov
push
cmc
xor
jnp
push
lds
mov
cmp
pop
imul
pop
jge
repz
mov
orl
mov
out
jl
lea
rclb
and
test
insb
pop
enter
rorl
arpl
out
jns
and
sub
cld
loope
pop
loope
out
inc
pushf
xchg
push
xor
or
xor
sub
xchg
orb
xchg
or
cmp
cmp
insl
add
add
movsb
cmp
adc
xorl
or
mov
pop
dec
ds
mov
xor
adc
add
or
call
movsl
mov
add
sbbb
and
adc
imul
jae
push
mov
lahf
add
fcmovb
stos
xor
pop
ljmp
jecxz
hlt
push
sti
data16
dec
out
aaa
dec
cmp
jmp
inc
mov
jnp
sbb
pop
orl
inc
or
ja
adcb
sub
cmpsl
lahf
cli
in
aam
test
loopne
lret
lods
sbb
nop
inc
xchg
and
xchg
jae
ret
cmc
jb
mov
jge
iret
xorb
pushw
cmp
out
cmc
push
push
xchg
jnp
cwtl
inc
inc
aaa
pop
dec
rcrl
jno
out
outsb
ja
sub
and
out
jmp
out
pop
push
pop
lret
and
pop
ret
add
adc
mov
inc
les
jl
xchg
lock
cs
jnp
jg
and
rolb
dec
pop
std
stos
jmp
in
cs
test
jle
push
pop
add
sbb
add
imul
mov
scas
fwait
lock
pusha
xchg
movsl
out
jle
sbb
fiadds
rorb
jg
push
or
jb
gs
daa
outsb
imul
mov
jb
sub
pop
and
iret
jp
jl
xchg
cmpsl
cs
jecxz
inc
dec
push
in
stc
and
push
cmpl
mov
xor
or
pusha
fnstenv
idiv
mov
cs
mov
mov
adc
popf
sarb
fdivp
js
jl
jmp
iret
xchg
pop
addr16
and
lret
lock
cmp
out
out
push
sbb
imul
sub
shlb
nop
iret
adc
jl
mov
lods
clc
push
xor
lea
push
cmp
xor
imul
push
cmpsb
loop
pop
or
in
sti
jp
sahf
or
push
xorb
pop
pop
int
rcrb
pop
xchg
adc
mov
pushf
xchg
cmp
pop
aam
sbb
lods
cmp
pop
aam
or
lods
ja
xchg
jmp
or
std
icebp
cmpsb
mov
push
ja
pop
add
dec
jne
and
inc
arpl
or
push
sbb
mov
push
add
gs
push
lds
adc
mov
or
push
dec
lea
jge
adc
xchg
push
lcall
imul
and
and
xchg
in
dec
sbb
jo
mov
push
test
clc
adc
lock
sarb
cmp
andl
roll
in
mov
lods
inc
gs
arpl
inc
lods
push
lods
inc
mov
mov
movl
xchg
inc
stos
or
leave
and
sbb
jae
push
inc
fisubl
daa
aaa
inc
sub
into
repz
daa
push
mov
mov
in
pop
les
jl
mov
out
imul
rcl
fwait
push
rcrl
jb
cmp
dec
out
or
int3
cmpl
int
loop
repz
mov
cmp
clc
fisttps
outsl
jp
sub
pop
jns
pop
pop
int3
dec
rcrl
xchg
add
xor
aas
cmp
inc
sbb
in
popf
ret
xchg
jo
rorb
flds
popf
ljmp
cmp
push
pop
loopne
xor
and
pop
push
sub
or
xor
jle
xorl
das
push
rcr
jns
test
add
js
or
jno
cmp
fwait
sbb
shl
cmpsb
lret
bound
in
xchg
pop
outsl
scas
nop
ja
adc
xor
aam
fmuls
nop
xchg
outsb
out
fs
fcmovb
idivl
repnz
adc
test
in
push
or
add
push
mov
roll
sarl
push
pop
leave
mov
push
les
lds
clc
xor
test
ja
sub
dec
data16
aad
adc
cmp
test
iret
push
scas
aam
add
arpl
add
add
loopne
xchg
cmc
inc
and
dec
cmpl
test
xor
push
movsb
sti
mov
jle
in
outsb
pushl
pop
jnp
dec
jle
pop
push
nop
pop
imul
inc
jecxz
jg
push
adc
fs
lds
ja
movsb
call
fldcw
in
xchg
rcll
out
loope
aas
in
adc
popa
into
icebp
xor
orb
inc
pop
jo
repnz
ss
scas
fistl
xor
sub
xor
pop
jb
push
adc
rorl
jo
sbb
loopne
adcb
pusha
les
lock
mov
or
popf
pop
mov
lret
je
stos
lret
push
int
idiv
les
out
mov
lea
adc
sbb
imul
insb
call
mov
lock
cs
andl
cmp
test
nop
sub
sbb
mov
repz
movsl
dec
leave
loope
add
sbb
mov
and
sub
mov
xchg
xchg
cli
cli
out
jmp
or
outsl
shll
add
sub
add
pop
mov
nop
iret
je
xor
push
cmp
int3
test
cmp
xchg
pop
sub
xor
ja
sbb
incl
pushf
dec
sub
sti
push
cmpsb
mov
xchg
and
invlpg
or
pusha
push
jecxz
cmc
outsb
lcall
push
or
adc
xchg
or
add
loope
add
filds
in
in
repnz
mov
adc
insb
mov
into
jbe
dec
out
adc
mov
xor
outsl
divb
mov
rorl
ror
int
mov
jp
adcb
inc
and
ss
jo
stos
mov
mov
xor
dec
fbld
xchg
nop
gs
test
andb
inc
mov
ret
lods
add
push
xor
test
cwtl
jne
test
scas
aas
mov
out
dec
cld
addr16
push
push
dec
xchg
dec
or
jmp
mov
push
leave
mov
insl
mov
xchg
adc
mov
cmp
push
std
mov
das
sub
add
aaa
jg
shrb
cmp
inc
pop
mov
inc
fucom
call
dec
push
cmp
xor
sub
mov
mov
data16
dec
sbb
adc
or
push
in
andl
adc
rcrl
or
je
and
inc
jno
ss
mull
adcl
push
jb
push
lock
loop
jns
sbb
dec
xor
cwtl
mov
ss
inc
rorb
sub
icebp
es
pop
out
dec
inc
mov
cmp
mov
test
cmp
fsubrl
sub
stos
cmp
mov
pop
sti
stos
cmpsb
sahf
es
push
jne
mov
xor
insb
add
xchg
dec
cli
or
mov
jge
sarl
inc
dec
pop
or
int3
or
int
hlt
lcall
mov
sub
mov
lods
push
and
mov
imul
push
xor
dec
mov
or
insb
mov
xchg
js
push
insb
mov
dec
xchg
pop
clc
dec
dec
and
aam
inc
jl
lcall
std
mov
mov
pop
sub
mov
sbb
and
stos
shll
imul
and
sub
jnp
jmp
pop
jb
add
daa
orb
xchg
shlb
add
inc
cwtl
inc
add
stos
mov
xorb
lcall
es
cmp
les
dec
push
leave
rcll
push
rcl
shrl
repz
adc
or
mov
inc
cmp
clc
jge
pop
insl
or
jae
addl
dec
cmp
enterw
mov
popf
xor
add
mov
insb
jns
aaa
push
push
push
and
and
out
std
je
jmp
rorl
mov
popf
jno
rcrl
inc
addl
test
lods
outsl
scas
ret
mov
sahf
fs
adc
cld
mull
xor
das
pop
out
jns
push
cmc
mov
cmp
push
jnp
sub
cmp
fsubl
int3
lahf
add
mov
sub
out
push
push
jecxz
pop
cmp
outsb
sarb
mov
enter
sub
cld
pop
shl
xor
pop
lret
jne
fnsave
in
mov
cwtl
ljmp
xor
cmp
jo
lds
xor
or
lahf
jp
jp
mov
aaa
mov
scas
nop
jge
xor
bound
push
test
std
jns
clc
add
cmp
fldl
test
movsl
pop
mov
pushf
or
test
pop
sarb
lds
or
les
arpl
sbbl
sub
jno
dec
clc
push
bound
and
adc
mov
push
sub
xchg
sbb
and
xorl
inc
test
jnp
cmpsb
jnp
insb
sub
xchg
aam
jge
iret
ja
bound
cli
xor
les
adc
mov
push
xchg
inc
in
pusha
popf
mov
and
mov
xchg
addr16
mov
faddl
jno
loope,pt
push
mov
sahf
dec
sub
or
dec
xacquire
das
and
cmp
imul
mov
dec
xor
cmp
inc
inc
mov
xor
add
push
mov
add
mov
outsl
cs
gs
add
mov
jbe
jl
fmull
mov
test
or
ficoms
mov
sbb
int3
cld
push
jecxz
push
sub
dec
test
pop
mov
fldl
jle
scas
loop
cli
lods
mov
mov
mov
roll
rorl
icebp
add
sti
je
icebp
es
cmp
pop
adc
stos
fsub
jb
xor
movsl
outsb
add
mov
flds
adc
push
push
lock
loopne
daa
inc
add
aaa
jg
push
out
js
les
dec
adc
pop
xchg
push
xor
stc
xchg
adc
push
cld
mov
pop
inc
test
test
stc
ret
jns
or
outsl
inc
frstor
outsl
dec
xchg
in
pop
je
or
rol
and
pop
xlat
xchg
dec
loope
aam
scas
mov
jp
std
inc
movsl
testb
xchg
or
jle
ja
push
mov
outsb
cwtd
push
mov
mov
out
adc
xor
mov
enter
xor
jae
adc
pop
stos
xchg
mov
pusha
aas
xchg
inc
ss
dec
pop
les
aaa
mov
mov
je
mov
dec
sub
mov
add
int3
gs
adc
inc
stc
insl
mov
cli
cmpsb
outsb
mov
test
dec
add
push
rolb
dec
xchg
cmc
stos
int3
bound
cmp
imul
in
xchg
inc
popa
mov
mov
mov
adc
inc
jl
mov
sahf
cmp
imul
mov
adc
pop
mov
in
ss
std
insb
sbb
cli
sub
gs
or
lods
leave
xor
scas
xchg
inc
pop
repz
lds
sbb
pusha
fidivs
inc
rclb
out
lahf
leave
arpl
dec
xor
das
sub
xchg
fsts
jmp
mov
cmp
adc
xchg
shrl
push
repnz
or
cld
in
jmp
adc
inc
add
xor
cltd
sub
push
push
inc
jnp
mov
push
aad
xor
ja
cmp
mov
xor
sub
dec
scas
fidivl
loopne
mov
xchg
mov
push
stos
adc
cmc
test
daa
stos
fwait
mov
add
cmp
mov
dec
mov
out
jnp
mov
mov
add
mov
imul
icebp
mov
ja
sarl
cmpsl
lahf
adc
lock
fisubl
add
push
scas
mov
loope
sub
popa
addr16
mov
or
mov
or
in
lahf
lret
cmp
mov
in
xor
ret
jnp
rolb
xor
call
and
out
pop
test
leave
enter
cwtl
aaa
cltd
in
jae
test
out
andl
sarl
out
push
lods
xchg
test
jge
inc
dec
call
cli
shrb
lret
sub
mov
out
cli
ret
lret
dec
loop
stos
xchg
cmpsb
in
stc
bound
push
scas
push
loope
jmp
dec
sub
ret
pop
fisttpl
lea
jae
cli
fbld
cmp
xchg
stc
nop
inc
mov
jb
subl
out
jp
push
cmp
fmull
and
inc
mov
xlat
mov
xchg
clc
pop
jp
mov
sbb
add
pushf
aas
mov
push
and
jecxz
or
clc
xchg
mov
mov
pop
fidivs
loopne,pt
jle
js
pop
into
jle
fs
mov
sbb
out
rolb
mov
mov
cmpsl
or
ud0
jp
gs
movsb
jnp
cmpsl
and
push
mov
aad
cmp
cld
and
in
cs
call
test
repnz
push
jl,pn
mov
out
fstpt
sub
jl
jp
icebp
movsl
cmp
adc
jp
repz
bound
sub
sub
sbb
add
rol
pushfw
leave
jb
mov
adc
push
mov
ja
or
pop
xchg
push
cli
out
xor
or
arpl
stos
inc
inc
fsts
repz
jecxz
int3
ficoml
jle
push
into
xor
stos
sbb
iret
outsl
das
lret
inc
cmp
aaa
cwtl
es
notl
jae
je
cwtl
cmp
popa
sbb
fnstsw
ljmp
or
mov
and
jnp
aas
pop
stos
and
addl
inc
jae
add
lahf
sub
push
inc
sub
lds
cli
push
push
lods
iret
rol
nop
lahf
lcall
pop
add
test
sbb
out
movsb
sub
inc
add
rcll
mov
mov
fs
xchg
das
rolb
mov
imul
fmul
ljmp
lods
push
push
shll
enter
loopne
gs
ds
je
add
push
and
sbb
lea
mov
adc
xor
jne
xor
sarl
lods
push
test
mov
jecxz
jecxz
xor
jno
and
lods
pop
ljmp
cmp
mov
inc
repz
outsl
inc
sub
iret
cmp
mov
push
js
xor
ret
ss
ret
xchg
push
cli
loope
xchg
daa
fnstenv
mov
sbb
insl
ljmp
clc
into
bound
adc
mov
mov
lahf
repnz
adc
cs
push
popf
push
and
mov
cmp
loopne
lcall
test
inc
lods
push
iret
or
sti
cwtl
or
je
idivb
lahf
call
sbb
lea
loope
and
mov
ss
mov
int3
mov
lret
cli
sbb
lock
dec
aad
jns
jno
inc
and
lods
push
xor
jb
mov
mov
xor
test
ficompl
les
repnz
into
test
jbe
fldl
lcall
insb
cltd
mov
and
int3
adc
popf
sbb
mov
mov
xor
repnz
hlt
shl
or
fsubrl
sub
test
scas
pop
mov
cmpsb
test
pushf
cmp
call
lea
jno
sbb
or
jg
cmpsl
pop
inc
add
ret
add
or
stos
mov
jae
mov
fcomip
pop
adc
and
aaa
js
pop
je
lea
negl
mov
test
outsl
push
cmp
and
jno
nop
mov
filds
mov
aam
aad
dec
jl
cwtl
cmc
xlat
fisubs
lods
pop
mov
pop
cmp
mov
aaa
or
sbb
mov
fadds
aam
call
mov
inc
mov
iret
call
mov
repz
sahf
testb
imulb
movsb
and
add
les
add
add
cltd
test
insl
mulb
jns
pop
or
mov
into
into
outsb
xchg
sbb
shlb
push
cwtl
aam
rolb
jecxz
mov
rorl
idivl
push
push
imul
ds
jl
insl
cmpsl
sbb
sbb
scas
xor
aaa
dec
and
out
mov
add
movsb
dec
mov
mov
jne
fadds
fcompl
pop
adc
jmp
fucomi
jp
cmp
xchg
repnz
bound
xor
cwtl
data16
js
and
mov
leave
cmp
push
jno
mov
lods
pop
enter
fcomi
sbb
or
xlat
ret
xchg
mov
mov
push
int3
and
mov
cmc
pop
jl
out
into
sarl
pusha
mov
fs
mov
sub
loope
adc
gs
sbb
negl
sti
xor
pop
cltd
jl
icebp
dec
cmp
cmp
lea
push
or
mov
push
mov
ss
cmp
cmp
jl
test
scas
pop
pop
loopne
mov
push
test
test
pop
aam
out
test
das
pop
js
hlt
inc
rorl
out
inc
mov
pop
je
xor
in
jmp
jl
mov
xchg
inc
cmpsl
cli
in
sub
sub
mov
fimuls
test
cmp
shll
dec
mov
or
call
or
add
ds
add
div
or
add
icebp
lock
dec
pop
aad
pop
insl
sti
fsubs
imul
jo
adc
stc
outsl
lods
je
idivb
rorl
xor
mov
dec
jo
jecxz
leave
pop
and
xor
fnsave
or
xchg
add
jle
adc
fistl
jns
cs
inc
lahf
mov
ss
pop
mov
adc
sbb
scas
push
call
ret
mov
dec
fimuls
ljmp
and
pop
xor
xchg
sti
insl
pop
lret
sahf
mov
mov
rclb
or
arpl
pop
sub
out
pop
mov
mov
and
pop
add
in
stos
pop
mov
dec
les
mov
pop
adcb
out
fwait
push
xchg
cmp
icebp
mov
test
mov
in
pop
push
mov
rorb
mov
shll
bnd
fs
popf
jne
sbb
enter
xor
mov
movb
outsb
int3
and
mov
pop
adc
mov
cmp
jle
scas
adc
clc
push
repnz
jo
pop
and
and
push
sahf
outsl
js
pusha
pusha
dec
xor
add
jne
mov
push
mov
sub
mov
adc
inc
cmp
dec
add
fwait
rcr
mov
hlt
aam
sub
aas
sbb
mov
jmp
in
sti
add
push
sbb
ss
daa
mov
das
repnz
popf
adc
jbe
div
inc
aam
js
ja
cmp
enter
sbb
dec
lea
xchg
jl
pushf
xchg
dec
pop
repnz
mov
pop
push
push
std
and
push
out
shll
xor
outsl
ret
int
push
jnp
leave
push
push
sub
rcrl
pop
mov
xchg
push
lods
mov
fxch
xor
pop
nop
addr16
clc
mov
test
aam
inc
mov
daa
jecxz
jecxz
push
mov
loope
xchg
push
pop
push
mov
div
lret
ficoml
pop
daa
xchg
loop
mov
mov
lret
js
adc
aas
sti
enter
dec
stc
xor
cli
ds
jg
sub
sub
mov
into
test
mov
xchg
jo
mov
sub
xor
cmpsl
sbb
stc
bound
jb
mov
mov
sahf
lods
inc
dec
sbb
mov
sbb
fst
jp
pop
test
sbb
test
cli
add
jae
inc
mov
pop
sbb
pop
je
idivb
or
pushf
dec
xchg
dec
cld
clc
xchg
fcompl
and
fucom
ja
ljmp
and
mov
inc
add
or
fmuls
shrl
mov
adc
pop
jbe
mov
in
out
pop
call
hlt
in
orb
adc
rcr
sti
insl
leave
bound
loopne
mov
insb
add
sahf
and
sbb
add
lds
lods
mov
cwtl
xor
cmp
xchg
iret
mov
les
cmp
stos
push
push
cmp
test
cld
xchg
jns
sahf
mov
xchg
add
jo
or
pop
mov
out
inc
int
adc
out
dec
lret
cld
adc
lock
mov
jmp
add
inc
fists
mov
push
push
js
cli
cltd
and
push
enter
push
xor
inc
pop
and
dec
adc
ficoml
inc
addl
jecxz
cltd
and
jo
inc
test
cli
adc
pop
pop
stos
cmp
jg
mov
aas
sub
outsl
or
push
arpl
fistpl
xchg
jg
mov
push
dec
mov
or
jbe
out
mov
inc
iret
mov
or
cmp
push
mov
mov
sar
aam
stos
xchg
ds
sub
dec
popf
addl
xor
add
jmp
movsb
pushf
cmp
mov
loope
sti
dec
ja
inc
pop
inc
hlt
outsl
test
sub
xlat
push
enter
in
sbb
ljmp
xchg
pop
xorb
test
aas
lods
mov
push
insl
movaps
scas
daa
lock
call
lret
jl
sarb
stc
adc
mov
push
jbe
sub
and
fsubs
fs
frstor
outsl
mov
and
es
out
clc
in
jg
sbb
lret
outsb
lret
scas
add
push
sbb
pop
push
stos
adc
pop
mov
mov
jnp
xchg
inc
mov
pop
lea
cmp
xchg
int3
out
insl
outsb
cld
fisttpl
sub
aaa
jge
mov
out
outsl
dec
scas
push
push
cmpsl
jne
clc
fidivs
xchg
lahf
pushf
jp
xchg
hlt
push
outsl
push
jb
nop
in
mov
sbb
leave
push
fs
int3
xchg
and
imul
out
or
adc
insb
in
push
or
jge
jnp
mov
std
xchg
xor
push
mov
call
test
js
sbb
pusha
out
ja
test
cmp
xchg
popf
dec
inc
cmc
scas
push
mov
mov
nop
adc
mov
adc
mov
jl
dec
lahf
add
lahf
push
sahf
dec
dec
cmpsb
or
ja
add
xchg
incb
int
pop
aam
and
lods
fcomip
mov
into
or
scas
imul
out
cmp
fldl
inc
fs
lahf
mov
repnz
out
lock
shl
arpl
jmp
mov
outsb
dec
or
jp
xor
fs
xor
sbb
push
cmp
stos
push
insl
jl
adc
jecxz
dec
xchg
mov
dec
jecxz
push
inc
add
xchg
adc
hlt
movsb
or
popf
mov
sub
jns
cmp
popl
mov
stc
and
cmp
loope
mov
add
mull
add
test
sbb
xchg
or
js
sub
xchg
insb
and
mov
push
xor
mov
dec
sub
xor
jmp
repnz
inc
dec
outsb
inc
push
cwtl
jbe
mov
call
or
jge
aad
cwtl
mov
cmc
dec
pop
pop
and
pop
and
mov
cmpsb
inc
lcall
test
into
arpl
pop
sub
and
pop
or
xor
jp
jne
call
pop
cmc
push
call
leave
adc
mov
jbe
mov
cmc
jmp
jl
xor
push
fsubrl
les
adc
lds
repnz
clc
pushf
add
mov
idivl
jbe
imul
inc
dec
mov
cwtl
xchg
or
adc
adc
cmp
or
jne
mov
cmc
mov
lcall
out
jmp
or
xchg
jmp
xor
sti
push
mov
sarb
negb
stos
add
or
inc
in
jae
sub
add
iret
sbbb
adc
addl
movsl
idivl
mov
testb
mov
xchg
or
fidivl
dec
mov
aad
and
inc
jb
push
push
push
mov
fisttpl
and
cli
pop
cmp
subl
jle
xchg
pop
adc
sbb
mov
xor
out
negb
mov
aas
inc
inc
xchg
or
pushf
pop
lods
mov
add
inc
cmp
shlb
mov
xor
xchg
roll
cmpsw
inc
adc
sbb
stos
fcoml
add
adc
dec
les
mov
js
movl
inc
sub
or
movsl
pusha
iret
adc
fisubs
stos
pop
in
clc
xor
in
outsl
int
xchg
in
xor
lret
fwait
shlb
sub
lret
stos
mov
xchg
addl
or
cmp
fwait
addr16
fcomp
ljmp
out
jne
add
jmp
test
push
and
aad
and
and
lock
scas
mov
mov
push
add
sbb
pop
subl
aas
clc
repz
lcall
in
pop
sub
cmpsl
inc
mov
lea
or
mov
push
push
cmp
or
lret
aaa
or
loopne
jg
ret
or
adc
sub
aad
mov
push
test
loop
leave
lods
test
pop
inc
xchg
mov
dec
xor
leave
stos
lods
shll
push
icebp
pop
sbb
addr16
xchg
es
ret
mov
jb
sbb
mov
cmp
ret
add
pop
jg
fisubrl
das
adc
scas
loop
out
stos
and
mov
jg
xchg
test
mov
sub
push
in
dec
incl
sub
mov
pop
les
push
sub
lea
adc
xor
scas
push
sbb
push
xor
aaa
les
adc
int3
adc
sub
mov
push
pop
clc
push
mov
daa
dec
insl
mov
mov
call
pusha
sub
pop
dec
dec
add
int
ss
push
rolb
pushf
or
negl
fsubrs
nop
xchg
cmpb
lds
adc
mov
in
or
insl
adc
cmp
add
iret
repnz
lret
lea
push
addl
out
xlat
push
adc
in
pop
cmpsb
dec
adc
ret
adc
std
fs
jmp
mov
lahf
pop
sub
lods
ret
mov
pop
jbe
mov
cmp
mov
dec
repnz
dec
cs
push
xor
rcrl
inc
dec
bound
adc
shll
bound
daa
add
dec
and
outsb
nop
xor
popa
push
push
fnstenv
mov
shll
popf
mov
arpl
inc
pop
mov
inc
or
adc
cmp
imul
bound
and
pop
sub
jp
mov
loopne
push
loope
pushw
nop
mov
pusha
jno
sbb
test
cmp
jns
mov
stos
ret
cmp
fs
lds
mov
inc
mov
xor
dec
arpl
xchg
fsub
mov
mov
leave
sub
fimull
lahf
mov
and
dec
mov
pop
push
sti
lea
add
leave
js
scas
xor
jecxz
aas
call
push
mov
push
pop
sti
push
inc
or
push
into
dec
xor
jecxz
fisubs
add
inc
aad
mov
mov
cld
cmpb
shl
mov
inc
in
mov
fsts
negl
push
clc
out
ja
cmp
xchg
int3
dec
jb
into
imul
outsb
inc
mov
test
fldenv
out
cld
pop
ss
mov
adc
sti
movsb
mov
push
iret
jmp
loopew
or
sub
lret
xchg
or
lods
fdivrs
int
and
inc
in
sub
push
sub
mov
adc
mov
cmpsb
daa
clc
push
mov
out
cmp
div
es
shlb
mov
mov
lods
gs
sbb
pop
out
jge
mov
xchg
mov
orb
fmul
dec
call
jnp
cmp
sti
sub
imul
enter
stos
adc
mov
sbbl
push
and
xchg
ficoms
cs
out
jmp
loop
add
idiv
das
stos
in
push
jae
mov
in
out
mov
or
jle
scas
adc
xchg
hlt
and
sbb
sbb
out
enter
stos
push
cli
adc
pop
addr16
pop
stos
lret
ficoms
faddp
jl
sub
in
hlt
js
jno
mov
mull
pop
push
jmp
shl
jle
xor
pop
es
jnp
cmp
shlb
and
sbb
cs
jmp
adc
xchg
test
loop
out
mov
jp
mov
push
push
or
inc
outsb
mov
test
xor
test
daa
xor
jne
mov
inc
aad
pop
ret
dec
imul
ds
aas
incl
xchg
pop
stc
push
jl,pn
mov
int3
lock
cmp
inc
pop
cmp
fistl
in
aam
mov
pop
xchg
inc
xchg
shlb
movsl
insl
cli
push
or
cmpsl
inc
cwtl
add
sar
push
enter
dec
pop
setae
mov
jl
cmp
lret
dec
adc
mov
mov
dec
xor
movsb
aas
add
movsl
int
into
sub
lods
mov
lods
aad
jne
pop
subb
roll
mov
jae
push
add
repnz
movsl
pop
sub
iret
inc
fimuls
mov
mov
xor
or
pop
nop
js
mov
lock
lods
sahf
je
or
or
jle
cmpsl
daa
xchg
xchg
or
call
push
mov
mov
cmc
mov
je
cmp
push
jmp
in
or
cmp
cmp
inc
das
xor
push
mov
adc
dec
lods
aaa
cs
out
mov
jge,pt
in
sbb
xor
inc
or
fidivrs
inc
push
push
in
popf
push
fsubrp
push
inc
xchg
aam
xor
rorl
inc
and
fsubrp
loope
int3
stos
lahf
add
pop
add
sbb
xor
pop
or
fiaddl
adc
shr
cmp
psllq
xchg
test
ljmp
mov
les
jno,pt
add
mov
mov
mov
stos
or
jae
clc
sti
arpl
shll
ljmp
dec
mov
sbb
xchg
dec
scas
dec
cmp
js
out
cmp
pop
mov
gs
jnp
lds
xor
andl
sbb
inc
stos
xchg
scas
pop
jle
cmp
xchg
shr
dec
mov
pop
ja
lods
jmp
imul
adc
lods
fld
xchg
mov
cwtl
fsubrl
add
popl
dec
ja
lds
xchg
aas
mov
cmc
dec
sbb
aas
pop
dec
les
push
add
ret
xchg
dec
adc
push
cmp
and
jbe
dec
into
cmp
aas
repz
mov
outsl
jl
fdivrp
les
and
or
adcl
pop
mov
repz
arpl
lahf
repnz
adc
shll
out
test
mov
rcll
sub
inc
lret
and
push
pop
push
lods
iret
dec
xor
xor
scas
jp
mov
push
xchg
pop
stos
or
mov
dec
popa
xor
les
sbb
mov
or
mov
rorb
ss
aaa
fstpl
jbe
inc
add
pushf
shll
adc
and
aam
aad
sahf
call
insb
orb
cmp
lret
sub
push
mul
les
push
pushf
movsl
in
cli
je
xlat
mov
sbb
sub
es
rcrl
ret
xor
jle
je
lahf
add
scas
std
in
orb
leave
inc
mov
push
imul
std
in
divb
push
scas
imull
lea
or
cmp
lcall
push
add
test
das
shlb
mov
into
push
jp
aad
repnz
cmpsb
sub
or
inc
sti
mov
cmp
mov
inc
push
fsubrp
addr16
cmp
and
outsb
addl
jmp
push
xlat
cmc
dec
mov
mov
or
pop
out
sbb
out
or
outsl
mov
sbb
xchg
dec
addr16
xchg
test
or
popa
push
sbb
fwait
dec
mov
mov
mov
mov
filds
jne
inc
mov
pop
das
imul
adc
pop
popf
add
scas
insb
lahf
dec
xorb
jne
cmpsb
mov
js
ja,pn
cmp
lds
add
adc
roll
pop
xchg
xlat
jl
fidivs
fiadds
movsl
mov
cmp
enter
hlt
test
pop
lahf
testb
push
test
sub
sarl
and
add
iretw
lea
pop
push
push
fcoms
xlat
cmp
bnd
in
push
jnp
push
pop
add
std
inc
dec
pop
adc
pop
movsb
loopne
cmc
popf
adc
push
push
neg
mov
call
decb
push
dec
inc
mov
xchg
dec
jecxz
jl
test
dec
mov
lret
repz
out
jl
imul
jg
sub
daa
ljmp
xlat
sbb
jp
icebp
mov
cld
jp
pop
addb
pushf
pop
xor
push
mov
xor
popf
push
jb
icebp
jp
popf
out
xchg
pop
adc
scas
mov
mov
xchg
call
push
xchg
sti
push
lds
xchg
xchg
xchg
jl
int
jp
pop
addb
das
popf
mov
sub
cs
jns
sub
dec
aad
aas
iret
fnsave
in
jg
orl
shrb
in
cmp
cs
sbb
push
aam
inc
into
lcall
data16
xchg
mov
pop
xor
mov
add
pop
jmp
movsb
jo
fimull
sub
aam
nop
orl
xor
daa
je
jo
cmp
int3
pop
sub
push
imul
xor
repnz
jmp
and
and
xchg
pop
fdivl
add
fwait
cmpsb
andl
cld
lock
sbb
test
lret
xchg
add
pop
repz
int
test
mov
jg
push
iret
imul
and
std
sbb
or
xor
and
and
loop
or
in
clc
mov
fildll
out
stos
out
sti
inc
pop
lods
mov
std
fcom
or
or
testb
scas
rorb
mov
add
push
lods
xor
ss
clc
aad
xchg
inc
add
mov
insl
jne
cmp
mov
jne
cmp
out
jp
lret
sbb
mov
push
jno,pt
insl
lds
test
and
or
clc
js
adc
pop
in
mov
pop
xor
push
push
repnz
xor
dec
xchg
mov
sub
adc
test
loop
xor
sub
or
jae
stc
xor
add
cmp
xor
pop
outsl
xchg
mov
jbe
popa
pop
test
lds
mov
stc
fstpt
popf
mov
movsb
push
loop
inc
adc
ss
cmp
cmpsl
dec
repz
addr16
push
outsl
jbe
rcr
sbb
aam
adc
cli
sub
dec
enter
rolb
xchg
fs
into
dec
fnstsw
je
fnstsw
shll
ret
inc
inc
lds
out
das
idiv
stc
cmp
cld
loop
pusha
mov
daa
aaa
data16
leave
nop
push
lahf
ja
mov
lea
shll
sahf
xchg
in
lcall
insb
or
sbb
mov
and
adc
push
push
push
xor
ret
jnp
adc
push
xor
in
test
or
mov
aaa
das
in
test
push
repnz
leave
call
std
in
xchg
call
pop
decb
dec
ss
jmp
inc
xorl
das
cmpsb
push
mov
pop
cmp
xor
add
test
cmp
int
mov
testb
lcall
punpckhwd
jge
ffreep
jg
je
xor
rorb
aad
push
aaa
cwtl
shl
sbb
xchg
pop
mov
xor
mov
mov
add
dec
aaa
push
adc
push
scas
inc
push
or
gs
shlb
sub
iret
push
and
adc
adc
sbb
fidivrs
mov
inc
ja
jge
dec
sub
xchg
lcall
ljmp
cmp
sbb
enter
aad
or
and
or
and
mov
pushf
lea
lds
jl
imull
xor
loopne
mov
rcll
repnz
pop
mov
ja
mov
jp
lret
lret
pop
xchg
push
sar
icebp
mov
jo
inc
imul
and
xchg
ss
push
jg
and
inc
mov
add
ss
icebp
outsb
mov
and
mov
ret
pop
mov
fcoml
mov
xor
xor
in
sar
popa
or
dec
out
aam
pop
mov
popa
test
fsubs
aad
das
out
or
inc
inc
aam
mov
sbb
and
bound
mov
adc
mov
int
int
add
pushf
push
mov
subl
jo
xorl
lock
notb
inc
xlat
lcall
mov
and
push
lods
into
js
into
pop
in
cmp
stc
in
jg
fimuls
ja
mov
push
lret
test
ljmp
aam
mov
cmpsl
xchg
cmp
mov
jns
mov
lea
mov
pushf
mov
fcoms
loope
jnp
mov
mov
rclb
mov
xchg
das
ds
popf
mov
das
testl
inc
or
leave
filds
sub
push
fidivl
dec
in
mov
clc
test
mov
dec
dec
dec
clc
cwtl
mov
push
pop
xchg
loope
fadds
sbb
sbb
dec
lahf
ret
fimuls
xor
shlb
hlt
mov
js
adc
std
jae
mov
jmp
pop
testl
and
sbb
mov
pop
lea
fdivl
xor
cwtl
dec
fwait
shll
pop
dec
insl
andb
mov
lret
mov
mov
jl
data16
push
aas
daa
fsub
andl
xchg
xchg
mov
mov
ror
dec
into
mov
and
std
and
jbe
push
jge
mov
pop
inc
scas
dec
insl
add
mov
jg
xchg
dec
mov
push
popf
or
mov
push
aad
psubusw
xchg
inc
es
data16
jae
pop
lahf
mov
addr16
push
popf
insl
xor
add
add
pop
mov
jns
push
or
movsb
push
xchg
loop
fbstp
cmp
mov
arpl
xchg
nop
fs
push
mov
adc
or
into
or
sti
int
out
xchg
and
pushl
pop
fimull
test
sbb
xlat
hlt
adc
pop
pop
sahf
cmp
push
pop
inc
xchg
xor
dec
bound
js
hlt
cld
adc
lcall
jnp
orl
and
popa
mov
enter
stos
sbb
dec
or
push
cmc
jne
dec
inc
xchg
add
fmul
inc
add
mov
enter
fwait
stos
call
xlat
push
pushf
leave
pop
movsb
mov
pop
cwtl
and
sbb
mov
adc
loope
cmpsl
xlat
repz
fnsave
pop
shr
or
aas
shrb
xchg
insl
psubusw
in
sbb
dec
mov
push
std
bnd
sbb
movsb
or
sbb
mov
push
mov
bound
xchg
shrb
stos
outsb
iret
mov
jg
scas
inc
mov
and
icebp
out
in
sbb
cs
loope
test
mov
and
jecxz
test
dec
dec
or
call
add
sbb
push
jae
imul
faddp
and
scas
sahf
fistps
adc
jl
push
mov
inc
lahf
mov
dec
xchg
mov
dec
dec
fistpll
cmp
popf
xchg
iret
sahf
jg
lock
pushf
mov
mov
imul
lock
out
out
lock
mov
and
in
mov
xor
and
mov
mov
mov
pop
adc
mov
es
jns
xor
mov
or
cmp
dec
dec
in
mov
popa
scas
je
push
cmp
movsb
mov
or
jbe
mov
fadds
fdivrs
and
push
pop
jg
mov
rcll
xchg
jl
rolb
mov
ds
notb
push
sahf
andl
pop
repz
out
pop
xor
inc
xor
sarl
ret
jle
sbb
pusha
inc
xor
mov
loopne
ds
and
xchg
lret
sub
jnp
scas
jne
mov
mov
rorb
lea
roll
nop
jae
pop
and
mov
mov
lcall
or
pop
or
in
shll
push
fs
xchg
mov
stc
inc
in
push
fcmovne
ret
jno
adc
pop
xchg
dec
and
sub
or
std
loop
adc
sbbl
mov
in
ljmp
mov
insb
mov
out
lret
movsb
addr16
idivl
add
out
dec
shlb
cli
mov
mov
add
pop
addr16
out
mov
outsl
pushf
loopne
or
push
sub
cmc
ffreep
icebp
sbb
jo
cmpsl
inc
sti
sub
xchg
in
jg
mov
dec
xchg
inc
mov
divl
sub
cmp
sub
xchg
pop
stos
divb
xor
sti
jnp
lea
mov
and
mov
sti
sbb
lret
push
lret
lcall
daa
mov
adc
and
and
pushf
jno
push
mov
mov
fs
divb
jge
adc
or
sahf
sub
mov
ds
jae
and
add
cli
inc
in
js
mov
jb
lahf
sub
enter
arpl
int
adc
push
orl
loopne
prefetchwt1
cmpsb
rorl
xchg
sub
mov
je
sbb
ja
out
and
pop
roll
inc
push
testb
insl
out
in
inc
jne
add
push
mov
add
daa
xchg
icebp
push
aam
das
in
orl
enter
pop
pop
popf
movsb
dec
test
mov
or
rcll
jne
mov
xorl
jl
dec
mov
pop
sub
leave
hlt
pop
mov
inc
enter
stos
into
jb
fadds
xor
les
aad
and
pop
arpl
and
repnz
fimuls
daa
popa
iret
add
loop
loope
and
pushf
sbb
cmp
jb
fcomps
jbe
or
add
pop
ds
aas
xor
popf
adc
movsb
sub
jecxz
pop
push
ss
jbe
loope
mov
andl
lahf
xchg
fwait
out
cmp
mov
ss
shl
adc
pop
inc
es
and
cmpsb
push
cmp
cmp
jns
jle
scas
dec
push
stos
lods
inc
dec
mov
mov
inc
cmp
popf
push
pop
sub
sbb
rcrl
adc
jp
or
sarl
insl
add
outsl
pop
data16
mov
sbb
xchg
add
jnp
and
or
aad
add
in
xchg
push
mov
mov
jo
cmp
jns
or
and
dec
xchg
sub
push
pop
imul
cmp
pop
inc
xchg
inc
xor
and
stc
xlat
loope
cmp
in
xchg
test
mov
jbe
nop
shrl
adc
jp
xor
add
xchg
xchg
cwtl
mov
inc
mov
int
cmpsl
sti
addr16
pop
sub
out
call
mov
xor
add
mov
add
icebp
push
into
fstps
jb
sbbb
add
pop
not
xlat
in
xor
mov
stos
mov
xor
jno
ret
push
mov
dec
mov
cmpsb
imul
inc
in
in
mov
mov
and
ret
mov
xor
sbbb
lret
and
cs
mov
imul
xor
jmp
pop
xchg
inc
rorl
test
jle
pop
lahf
out
cld
cmpsl
cwtl
and
mov
mov
imul
fmull
out
shlb
das
test
mov
movsl
and
pop
cmpsb
ss
adc
sbb
repz
cmpsl
and
pause
aad
movsl
xor
gs
fisubrl
xchg
loope
xor
lock
push
add
insb
mov
repnz
inc
push
enter
sbb
push
scas
aam
dec
ds
test
mov
pop
jmp
fisubl
xlat
adc
sti
ss
sbb
lahf
adc
arpl
xchg
cli
push
test
test
lcall
pop
fmuls
in
clc
out
add
icebp
pop
push
mov
fsubp
enter
int
cmp
andl
inc
jmp
jno
scas
add
add
clc
pushf
pop
xlat
dec
mov
inc
xorl
js
jecxz
repz
pop
popa
xlat
stos
or
add
adc
scas
inc
mov
movl
inc
test
xchg
stos
mov
out
and
mov
jg
mov
aaa
jg
jl
ljmp
add
sub
ja
mov
jnp
or
flds
mov
xorb
lds
and
out
shr
test
repz
aaa
lret
add
dec
inc
sub
dec
mov
test
mov
dec
icebp
iret
jecxz
jecxz
pop
sbb
insl
cmpsl
ja
mov
cwtl
hlt
mov
test
adc
cltd
hlt
jno
mov
aaa
cld
int3
sbb
mov
aaa
in
rorb
xchg
xorb
mov
dec
mov
pusha
jmp
lods
pusha
mov
mov
add
xor
roll
mov
mov
scas
dec
clc
in
push
fldenv
dec
push
mov
dec
mov
push
sbb
xchg
add
dec
mov
push
call
mov
test
push
xchg
push
stos
xchg
nop
addb
inc
movsb
sub
aaa
push
cwtl
or
mov
cmp
mov
xchg
stc
enter
movl
and
sti
push
sub
lds
sbb
pop
fs
test
fldenv
rcl
into
dec
dec
das
cwtl
mov
add
stos
aaa
jle
pop
adc
add
dec
gs
out
lods
or
push
mov
cmpsb
call
lret
push
xchg
iret
mov
shr
jmp
fistps
sbb
pop
push
mov
loopne
pushf
push
sub
stos
int
sub
shrl
sub
jp
mov
data16
mov
mov
rolb
mov
repnz
mov
sbb
xchg
add
pop
push
iret
xorb
js
xchg
cmp
sbb
test
pop
inc
xlat
inc
pop
xchg
jbe
mov
dec
hlt
push
and
jle
cltd
adc
push
dec
push
std
test
or
or
repz
xchg
gs
inc
nop
pop
pushf
xchg
outsl
lret
and
mov
push
mov
xor
pusha
jle
iret
xor
in
or
call
stos
hlt
push
mov
jecxz
push
push
dec
jo
ret
mov
out
add
ficoms
push
ret
aas
int3
andb
add
xchg
outsb
dec
cmpsl
ret
ljmp
stos
mov
mov
jne
mov
pop
subl
mov
and
out
out
fnstcw
push
in
aad
add
out
lods
mov
das
inc
dec
and
dec
arpl
nop
out
dec
mov
jge
xchg
push
xlat
jbe
je
adc
std
xor
lods
sub
xchg
pop
adc
sbb
rcrl
mov
mov
cmc
dec
sub
jne
cmp
ret
mov
dec
stos
adc
push
dec
ret
sbb
push
aas
adc
outsl
jg
pop
rcl
std
xor
cmp
add
sub
cli
repz
test
rol
lods
lock
mov
mov
aaa
out
dec
mov
ss
imul
daa
scas
cwtl
or
jle
cld
and
test
pop
fs
sbb
movsb
dec
inc
mov
daa
std
xchg
push
frndint
jle
movsl
pop
push
popa
fiadds
adc
out
imul
sub
xor
hlt
jne
ret
push
sbb
fdivl
call
pushf
jns
adc
les
jo
sbb
push
stos
xchg
nop
mov
add
push
shlb
in
sahf
enter
jb
xor
out
and
mov
mov
loopne
insb
or
pop
mov
sahf
sti
add
mov
dec
sti
xchg
es
jle
scas
in
les
mov
push
pop
sbb
mov
popa
mov
push
xor
insb
xchg
cmp
rcll
jae
sbb
addr16
aad
sbb
lcall
in
mov
adc
bound
inc
adc
pop
dec
mov
xchg
add
leave
xor
movsl
mov
fadd
jns
fcomi
test
mov
add
fimuls
jb
shrl
loop
fidivrs
scas
out
add
movups
aad
cmp
int
adc
and
xor
mulb
sub
cld
imul
test
loope
test
lods
push
sub
push
fidivrs
xlat
inc
mov
add
ret
push
sub
cbtw
push
jno
and
cmp
popa
jbe
scas
xchg
dec
sub
sbb
mov
jb
add
lret
popl
xor
push
push
and
jne
hlt
sbbl
orl
sbb
xor
mov
sbb
mov
sbb
push
icebp
xchg
insl
mov
das
xchg
decb
fsubs
call
add
cmc
xor
loop
sahf
xor
insb
cmc
sub
popa
dec
mov
out
xor
and
cltd
out
fsubrs
out
jbe
outsl
insl
sub
ds
jmp
pusha
inc
int
cli
rcrb
mov
mov
xor
add
stos
adc
outsb
or
aas
adc
lods
das
sbb
push
stc
insl
cmpb
shrb
xchg
mov
push
loopne
outsl
jne
push
mov
movsb
jp
sbb
add
xlat
adc
cmp
jp
pop
popa
push
or
out
inc
shlb
clc
inc
jp
push
scas
das
inc
test
xchg
and
mov
sbb
lret
popa
jle
jge
stos
xchg
inc
sub
or
jne
repz
data16
sarl
mov
lret
pop
mov
sub
lcall
into
les
aad
xor
lret
pusha
es
int
dec
sbb
cmp
aam
pop
lret
imul
outsl
dec
or
inc
loopne
stos
mov
push
or
sbb
jnp
cmp
aad
mov
or
add
fs
mov
and
adc
es
aaa
dec
mov
repnz
aam
loop
int
lret
jbe
into
pop
mov
lcall
leave
inc
jns
scas
push
jbe
mov
ja
pop
mov
mov
sahf
push
movsb
rolb
mov
stc
cmp
fstl
ljmp
popa
and
stos
lds
mov
insb
mov
aam
adc
lods
in
push
inc
sbb
sbb
clc
lock
push
sti
jnp
aas
jge
xchg
in
scas
sahf
mov
call
xor
pusha
or
mov
jge
cmp
push
dec
xor
mov
xchg
out
pop
mov
scas
xchg
fisubl
add
or
roll
push
jp
in
mov
imul
dec
pop
xorl
pop
jecxz
sbb
xor
or
push
adc
std
mov
xchg
sub
insb
cltd
xchg
xchg
and
dec
or
mov
xchg
and
push
sub
test
ljmp
ds
dec
repz
insl
fisubrl
or
mov
xchg
adc
iret
paddusb
mov
add
push
xchg
adc
lods
jns
in
or
and
fsts
add
dec
je
xchg
gs
ret
out
insb
adc
int3
js
jmp
xor
outsl
mov
xchg
dec
test
lahf
xlat
fbstp
shll
or
sub
push
jo
inc
pop
lods
jo
push
jnp
test
push
rol
arpl
and
mov
lock
fcoml
xor
sub
pop
mov
adc
hlt
call
mov
aam
aas
ret
pop
cmp
fistpl
sub
mov
pop
std
jae,pn
sbb
outsb
out
loop
and
movsw
aaa
xor
insl
jle
btr
sahf
das
pop
dec
aaa
call
test
icebp
mov
jp
dec
loopne
push
sbb
stos
clc
out
sub
loop
loop
cmp
jg
xor
aad
mov
arpl
and
sti
push
or
fwait
push
data16
jecxz
pop
icebp
inc
mov
in
in
popa
fmull
icebp
in
xchg
lods
insb
pop
or
imul
cltd
adc
aad
out
into
sahf
mov
int3
jb
adcl
add
jnp
cmpsb
cmp
std
push
push
or
cmp
mov
int3
sbb
out
addr16
pop
mov
or
scas
shll
fistpll
cltd
push
ret
repz
out
mov
xlat
addr16
out
rorb
out
jecxz
add
into
xchg
movsl
fbstp
sbb
les
cmp
stos
outsb
call
cmc
mov
mov
bound
movsl
adc
test
pop
jo
inc
cmpsl
xchg
aaa
gs
rolb
sti
xor
les
enter
stos
ds
iret
mov
pop
cli
lret
icebp
popf
cmp
daa
dec
lds
aas
sbb
fisttpl
stc
loopne
fs
jg
dec
mov
add
sbbl
mov
fs
adc
aaa
test
mov
jp
push
iret
push
movsb
push
gs
lcall
mov
mov
adc
sbb
jmp
out
in
sbb
dec
jae
add
lds
in
jbe
js
mov
push
outsl
mov
jp
subl
cmp
xchg
mov
mov
lods
mov
xor
cltd
sti
orb
stos
or
add
mov
arpl
xor
test
mov
into
dec
mov
cmpsl
sub
pop
popl
fnstenv
mov
stc
jns
mov
dec
adc
mov
jae
pop
inc
dec
sbb
push
mov
xor
fwait
jo
lcall
ret
adc
fcmovb
mov
adc
xchg
xchg
and
sub
sti
push
jo
stos
fsubs
xchg
push
das
repz
sbb
ret
mov
pop
inc
ret
stos
and
jb
test
lret
and
outsb
xor
pop
je
push
sub
imulb
cmp
add
outsb
out
xchg
fcomps
movsl
fcompl
insl
jecxz
and
mov
sarb
dec
out
sbb
pop
lret
call
paddsw
pop
jmp
add
lret
daa
divb
xchg
ret
adc
xor
sub
add
mov
vcvtps2pd
xchg
outsb
movsl
ret
mov
or
push
or
js
lods
jns
mov
mov
insl
ret
int
mov
xchg
mov
sub
adc
out
rcr
xor
sub
inc
pop
push
sub
sub
push
imul
xchg
test
xor
push
pop
bound
push
mov
imul
or
cmp
out
mov
mov
stos
add
mov
in
or
adc
xchg
mov
dec
pop
sub
imul
or
sbb
mov
or
or
jbe
insl
jp
mov
insb
xchg
cmpsl
jno
xor
mov
scas
out
or
out
sbbb
enter
jg
aam
mov
hlt
aaa
shl
xor
in
push
jo
je
sbb
xchg
pop
orl
xor
mov
sbb
pop
out
int3
jns
dec
scas
and
mov
scas
stc
pop
and
repnz
cmovnp
call
mov
xchg
pop
jne
push
cmp
dec
jecxz
pop
jns
and
leave
lcall
int3
xchg
loopne
inc
or
lahf
or
add
cs
out
cwtl
nop
imul
xchg
add
xor
jo
icebp
dec
add
cmpb
stos
mov
push
mov
pop
stc
xchg
inc
enter
pop
sbb
jnp
stos
das
xchg
mov
jecxz
insl
daa
jne
fisubrs
push
sub
roll
jae
test
cmp
mov
and
jecxz
push
mov
sbb
mov
dec
push
out
xor
bound
mov
jne
jb
cltd
dec
lds
xchg
lds
pop
push
lea
repz
or
test
xorb
or
pop
or
loope
ja
lock
jno
out
add
push
stc
mov
vcvtdq2ps
fdivl
jbe
mov
push
aas
mov
testb
adc
sub
stos
lcall
cli
test
sbb
ja
lcall
push
pop
in
jbe
mov
les
cmp
and
aam
stos
mov
inc
xchg
mov
loopne
pop
sbb
pop
jg
adc
mov
in
sbb
cld
fs
inc
ror
mov
sbb
push
jmp
fwait
sbb
mov
cmp
push
cmp
and
and
push
inc
inc
adc
adc
and
fxch
ljmp
jno
mov
cmp
jnp
lods
inc
arpl
int
push
mov
ds
test
add
adc
push
or
ds
fidivl
hlt
mov
sbb
mov
push
repnz
mov
iret
movsb
in
ds
fistps
outsl
outsl
dec
and
pop
das
add
fs
ja
ja
push
ds
test
xor
pop
clc
je
or
sti
cmc
es
dec
and
mov
roll
ret
pop
mov
push
mov
out
pushl
das
sbbb
aaa
inc
xchg
sbb
pop
mov
lahf
std
test
mov
push
add
xchg
sbb
fldenv
cmpsb
loopne
mov
add
rcll
adc
call
pop
cli
mov
jge
adc
dec
jnp
pop
dec
adc
icebp
add
ljmp
sbb
xchg
adc
mov
ret
bswap
mov
sub
enter
out
xchg
xlat
andb
sub
or
mov
das
shlb
sahf
negl
or
stos
test
jno
jecxz
inc
jle
gs
mov
pop
pop
sbb
scas
push
mov
leave
jns
jge
stc
sbb
xor
cmc
jle
outsb
or
test
mov
ret
out
rcrl
push
lret
in
sub
xlat
xchg
jmp
std
outsb
xchg
push
xor
sub
push
inc
xorb
jno
jno
imul
into
or
or
mov
fs
sub
xadd
mov
pop
sbb
test
ret
or
sub
dec
xchg
push
aad
cwtl
add
inc
cmp
stc
cwtl
jmp
std
cld
subb
jne
mov
pop
pop
cli
aaa
mov
mov
daa
sub
cmp
mov
jno
fisttpll
jmp
push
insb
jg
hlt
ret
pop
sbb
mov
mov
cmp
sub
dec
jns
dec
inc
and
adc
sbb
arpl
das
iret
adc
addr16
sub
cmpl
push
orl
in
jo
testl
xor
mov
add
cmp
fwait
add
test
loop
imul
int
xlat
pop
jo
add
xor
push
dec
mov
push
into
gs
jbe
sbb
mov
mov
and
dec
aas
dec
aaa
xchg
mov
lods
inc
int
ljmp
pop
xchg
xor
dec
pusha
xchg
movsb
arpl
dec
fwait
inc
jo
lods
icebp
mov
cmc
sub
dec
ja
add
jp
mov
jb
pop
dec
jo
and
inc
cmpl
inc
and
lods
dec
scas
stos
sbb
inc
sbb
clc
jg
sub
mov
pop
xchg
cmp
fisubrl
pop
push
jne
mov
push
add
mov
and
sub
push
shr
lahf
mov
adc
out
cmp
xchg
test
dec
dec
addr16
adc
adc
jno
xchg
outsb
mov
dec
jnp
imul
fstps
int
int3
into
inc
cmp
andl
mov
jl
out
mov
mov
ss
mov
adc
cmp
sub
mov
mov
je
cmp
mov
insb
lahf
sbb
sub
sub
test
pop
fnsave
sbb
shlb
es
pop
and
loope
mov
adc
addr16
scas
adc
push
jge
and
dec
mov
sub
icebp
add
pop
lret
daa
xchg
jno
mov
push
imul
mov
ret
sti
sub
cmp
xchg
imul
clc
cmpsb
mov
fidivrs
inc
addl
xchg
pop
xchg
cmp
push
pop
outsb
pop
mov
rorl
cmp
xor
sbb
jne
lea
aas
push
cs
loopne
les
pushf
push
outsl
js
dec
call
xchg
subl
fwait
lcall
push
and
add
mov
frstor
pop
in
dec
dec
mov
lret
xchg
ja
inc
ljmp
in
clc
pop
mov
mov
mov
push
push
xchg
icebp
int3
call
and
push
jp
or
pop
int
xorl
lods
sbb
jl
aas
adc
out
dec
jb
adc
lods
sbb
cmc
scas
add
jmp
dec
stos
push
ljmp
idivl
popf
fcmovne
test
fists
cmp
je
cmp
inc
dec
jb
fisttpl
setp
cmp
pop
das
out
les
sbb
sub
cld
comiss
or
and
dec
jo
pop
dec
jo
xchg
jo
or
mov
sbb
mov
inc
aam
push
in
outsl
push
ret
sbb
add
add
into
cli
push
js
xchg
stos
fwait
add
push
mov
push
dec
inc
add
xchg
rcl
stc
mov
mov
lds
mov
push
dec
push
out
xor
mov
pop
out
cmpsl
mov
pop
adc
jno
hlt
add
jae
xchg
outsl
roll
lret
lea
push
cli
aam
or
jns
jbe
cld
add
push
add
sbb
dec
inc
les
jns
pop
scas
adc
icebp
or
pop
test
aad
leave
pop
int3
cmp
add
fisubrl
mov
shl
and
out
jecxz
inc
rcll
sub
leave
sbb
mov
inc
mov
sub
fcomip
jmp
scas
mov
xor
ret
outsb
mov
js
js
lahf
xchg
jnp
sti
int
xlat
pop
mov
lea
add
mov
mov
sub
jg
adc
lock
ss
outsb
jns
or
cmp
cmpsl
jmp
ret
imul
pushf
cmc
imul
test
jp
sbb
loopne
xchg
rorb
cmp
ret
dec
lods
cmpsb
repnz
add
inc
push
cmpsb
add
ds
add
mov
lret
xchg
test
jge
pop
jo
test
pop
jecxz
lock
and
xor
and
xchg
xchg
loope
jae
or
push
cmp
mov
repz
shl
fucomip
jnp
jg
roll
push
mov
xor
insb
out
xor
xchg
in
sbb
fxch
jecxz
leave
inc
aam
addr16
adc
jle
adc
imul
jecxz
and
fildl
push
xchg
shrl
pop
lret
scas
lcall
mov
jl
cmpsb
out
in
sbbl
outsl
mov
out
jae
sub
cmpb
sbb
sub
push
in
push
dec
cmp
repz
scas
push
popa
and
lods
aam
push
mov
in
lods
sub
je
pop
xorb
lock
mov
stos
lea
dec
popf
outsb
xchg
std
and
ss
xor
test
adc
and
and
lds
lea
xor
imul
movsb
arpl
push
lea
bound
push
mov
pop
into
clc
sbb
enter
xchg
push
add
xor
sub
js
dec
dec
cmc
cli
dec
clc
push
loope
pop
dec
arpl
xchg
mov
jmp
das
out
enter
mov
pushf
cmpsl
push
push
pop
roll
aaa
pusha
lahf
sbb
lret
cmp
add
movsl
popf
imul
gs
jb
das
cmp
push
fidivs
call
mov
je
jno
xor
mov
jno
iret
out
xchg
or
into
out
ljmp
notl
mov
in
loope
cmp
sub
cmp
fs
mov
cmp
dec
and
movsl
lods
out
jmp
jmp
inc
or
mov
xchg
sahf
mov
jecxz
push
pop
icebp
out
xor
out
enter
std
fs
ss
loop
pop
shl
xchg
or
unpcklps
jnp
push
mov
fists
sbb
mov
inc
dec
and
xor
mov
mov
mov
ljmp
fcomps
in
and
out
test
xlat
movsb
out
pop
fs
or
outsb
addb
insb
adc
outsl
inc
lret
cmp
sbb
push
pminub
xchg
imul
stos
int3
cmp
mov
push
sbb
dec
lcall
add
test
cmpsb
adc
gs
or
xor
inc
cmp
cmc
mov
outsl
or
and
pusha
popf
jae
jb
pop
and
mov
jae
push
and
mov
mov
sbb
pop
push
push
ds
into
sub
repz
cmp
mov
std
inc
nop
stc
loopne
push
xchg
xchg
adc
add
adc
in
or
dec
jno
lcall
js
ficoml
mov
xor
cmp
mov
or
imul
test
in
add
sti
push
ds
mov
lods
jne
jno
orl
jecxz
mov
je
jmp
lret
stos
hlt
jle
and
ret
mov
jnp
sub
stos
inc
les
enter
clc
inc
clc
or
pop
bound
pop
stos
dec
add
fisttpl
out
inc
mov
pop
sbb
flds
push
push
fsubrs
lods
ficompl
scas
mov
xor
es
les
sahf
mov
sbb
fisttps
dec
inc
psubusw
cmp
outsl
pusha
xchg
mov
add
in
xorl
jne
and
jle
mov
les
insb
hlt
mov
icebp
dec
jb
jp
test
call
mov
add
or
aas
std
dec
lock
clc
daa
cmovs
add
repz
loope
je
push
repz
stc
mov
push
xor
pop
test
pop
repnz
lcall
outsl
inc
rcl
divb
fmull
imul
call
lock
and
cwtl
lcall
aaa
in
push
lods
stc
jmp
and
cmp
jmp
in
les
jae
mov
jg
or
sub
inc
xchg
jbe,pn
mov
daa
mov
imul
fisttpll
xorb
fisubl
out
test
stc
mov
ja
mov
ffree
subl
or
cmc
call
sarl
nop
cwtl
xor
sbb
jno
or
push
cmpsl
jmp
or
and
pop
cwtl
insb
mov
lret
pop
jmp
mov
xchg
out
pop
jbe
or
and
adc
ds
ljmp
push
or
outsb
cmp
mov
jmp
sbbl
subl
fs
cmp
fmulp
mov
xor
cmpsb
add
mov
adc
imul
and
repz
push
lcall
repz
cltd
sbb
dec
movsl
mov
cli
mov
leave
repnz
ja
pop
dec
pop
iret
in
stos
sub
fwait
lret
jmp
aaa
xor
jge
fnstenv
lcall
sub
mov
aaa
lret
xor
enter
je
and
mov
xchg
addr16
loope
repnz
xchg
adc
movsb
pusha
and
and
insl
sbb
sbb
mov
xchg
or
push
inc
js
add
rcrl
jge
nop
pop
fisttps
push
out
out
orb
xchg
ds
je
and
ret
cmc
scas
or
push
sub
popl
push
mov
mov
sbb
xor
xor
add
xchg
jle
orl
pop
clc
jno
jae
cmpsl
inc
cmpsb
add
arpl
faddl
push
xor
outsb
jp
push
mov
mov
cmp
aaa
cmc
cmp
push
bound
nop
mov
pop
sub
mov
adc
rol
out
xchg
or
lcall
nop
je
add
jecxz
xchg
xor
loop
mov
aaa
sub
inc
ljmp
in
dec
inc
inc
sarb
add
test
jno
lea
fists
dec
jle
dec
lods
ret
mov
sbb
adc
xor
or
shl
out
dec
push
mov
test
xor
pushf
dec
and
ja
scas
xchg
mov
jge
push
arpl
dec
hlt
shrl
sub
inc
nop
cli
or
mov
xchg
cltd
jno
mov
in
adc
int3
adc
dec
call
or
lods
xlat
fsubrp
adc
lods
push
xchg
pop
ds
dec
sub
add
cwtl
jmp
imulb
mov
mov
ret
arpl
icebp
popa
cltd
lds
jg
push
sub
add
xchg
lea
rcrl
shll
in
mov
pop
pop
or
push
test
mov
ljmp
jb
or
mov
orl
pop
imul
aad
sarl
mov
push
xchg
ret
roll
pusha
cmp
or
pop
inc
dec
or
aad
pop
movsl
mov
push
fildl
insl
and
xchg
push
imul
lret
out
cld
and
jns
jb
jp
mov
sub
insw
cmc
jns
xchg
imul
pop
pop
popw
dec
imul
mov
popf
enter
add
hlt
je
rorb
jge
mov
loope
jno
cmp
sahf
pushf
push
sbb
xlat
pop
sbb
dec
ja
dec
test
imul
movsl
cmp
xor
call
pop
fwait
andl
mov
aad
mov
shrb
into
cmp
push
add
pop
ret
les
xchg
hlt
mov
pop
add
sarl
arpl
adc
movsl
xchg
lcall
adc
call
or
sar
cmp
shrd
xchg
jecxz
or
out
mov
js
ss
bound
pushf
xchg
insb
xor
mov
mov
jnp,pt
gs
imul
push
test
push
pop
mov
mov
push
pushf
pop
jae
or
xchg
nop
mov
out
cmp
pop
jae
jno
pop
mulb
sbb
cmpsl
lret
fwait
adc
mov
xchg
pushf
or
push
test
and
push
les
or
xor
das
add
insl
and
fimull
es
xchg
dec
jle
ja
lret
mov
xor
and
sbb
push
imul
lods
xchg
pop
int
pusha
sahf
mov
dec
in
fs
mov
insb
jecxz
pop
xchg
or
in
mov
divl
push
out
cwtl
arpl
adc
inc
sub
js
xchg
in
dec
xor
adc
sarl
data16
out
jmp
inc
xsavec
and
and
incb
popa
sti
outsl
and
jge
cld
gs
jns
insb
jmp
xchg
sbb
lods
popa
sub
xchg
push
int3
loopne
test
lds
cmp
clc
jno
and
adc
push
pop
xchg
or
out
add
outsb
jle
jl
jmp
ret
sub
insl
push
lea
mov
in
or
fildl
add
int
cmpsl
out
sbb
daa
subl
notl
push
sahf
inc
jecxz
mov
loopne
cltd
dec
outsb
jns
addr16
std
push
es
scas
mov
or
pop
lds
xor
jecxz
inc
pushf
in
add
in
stc
sbb
sbb
and
and
jp
subl
fdivl
add
push
test
pop
aaa
sub
push
jmp
xchg
in
inc
je
cmc
jo
add
insl
imul
pop
not
mov
and
sub
or
dec
repz
sbb
imul
ficoms
roll
add
movb
mov
jmp
sbb
jl
pop
in
arpl
nop
dec
inc
xlat
clc
sbbl
mov
jecxz
adc
mov
aam
sbb
dec
hlt
mov
push
xor
and
xor
adcb
xchg
incl
sbb
cwtl
sub
aam
add
xor
xchg
add
imul
into
push
lock
push
adc
enter
add
insb
jns
outsl
xor
dec
pop
jle
loop
pusha
movsl
shr
and
and
clc
scas
scas
testb
addr16
fs
and
aaa
pop
fxch
cwtl
push
xlat
gs
cmp
repz
push
xor
repz
mov
in
push
push
jns
aad
sub
inc
sbb
fdiv
inc
mov
xor
xor
fistl
dec
shlb
pop
sub
popf
xlat
or
out
add
add
shll
mov
in
xchg
xchg
fists
gs
js
std
inc
adc
xchg
fucom
mov
mov
dec
jno
sub
adc
out
movsb
sahf
sbb
cmpsb
dec
pop
sub
pop
rdtsc
jnp
sarb
movsb
outsb
sbb
jecxz
pop
xor
jle
mov
and
sbb
xor
loope
out
scas
jecxz
sbb
xchg
xchg
aas
mov
sbb
cmp
cmp
sar
jge
lds
mov
xchg
xor
xchg
or
xchg
js
push
mov
inc
pop
mov
adc
ljmp
sbb
sbb
add
arpl
or
dec
or
stos
stc
fidivs
scas
mov
outsl
popf
test
popf
pusha
test
mov
push
inc
adc
add
or
test
hlt
addr16
and
xor
pusha
add
adc
lods
test
pop
inc
jb
pop
loopne
mov
cwtl
aas
push
inc
add
sbb
fistpl
mov
addl
test
mov
imul
enter
or
cld
scas
loopne
enter
mov
ror
xchg
fs
mov
dec
xchg
inc
subl
jo
inc
push
lea
or
rcrb
mov
xchg
ret
daa
xchg
mov
dec
push
rclb
test
adc
fmulp
and
test
hlt
stos
int3
insb
jmp
jnp
ret
sbb
jl
sbb
or
rolb
out
fnstenv
mov
movsl
lcall
add
sub
lret
mov
sub
das
mov
xor
repnz
dec
arpl
inc
cmp
add
roll
sbb
jns
test
lods
stos
repnz
cld
mov
inc
cmp
add
mov
mov
mov
xchg
add
inc
je
mov
mov
xchg
test
sbb
scas
movsl
mov
push
call
ja
fisttps
sbb
inc
lea
pop
icebp
push
lcall
pop
clc
call
push
movsl
mov
xor
sbb
push
mov
push
push
test
xor
repnz
jno
xor
lock
orl
mov
mov
pop
jo
pusha
outsb
fistps
insb
cmc
movsb
dec
mov
loopne
lea
imul
test
std
add
push
lds
xor
js
pop
mov
imul
inc
pop
push
inc
jmp
xchg
shl
pop
out
sbb
bound
jmp
aaa
test
adc
jg
inc
in
stc
hlt
mov
pop
out
sti
dec
inc
shlb
mul
cli
aam
sub
das
xor
roll
ret
bound
xor
mov
addr16
mov
sbb
mov
pop
dec
adc
sub
pusha
lods
xor
aam
sbbl
jge
fs
clc
jg
enter
mov
dec
cmp
mov
push
xchg
mov
into
cmpl
cmpsb
mov
int
fs
fdiv
lds
aam
mov
movq
insb
mov
add
fs
sub
hlt
out
jns
call
in
adc
ret
ja
pusha
repnz
movsb
sub
and
adc
mov
icebp
out
int3
aad
lret
sub
lret
adc
lret
mov
add
inc
or
ret
in
xchg
cmp
add
outsb
adc
jo
mov
inc
cmpsb
jle
arpl
adc
sbb
jmp
and
iret
cmp
push
cld
dec
push
sbb
imul
pop
outsl
xchg
js
test
std
sbb
jge
aaa
push
jmp
sbb
xor
outsb
or
dec
mov
adc
call
cmp
mov
pop
xor
push
adc
shlb
or
push
movsl
cltd
jno
adc
jns
add
lahf
jne
leave
cmpsl
sub
or
add
sub
dec
xchg
xchg
fisubs
push
insl
int
and
clc
mov
xlat
and
inc
pop
xor
dec
insb
andl
jb
ret
out
les
jno
jno
mov
leave
inc
xchg
pusha
mov
orb
aaa
ljmp
loop
jb
pop
push
mov
add
int
negl
xor
es
out
push
test
scas
in
pusha
cmp
hlt
mov
or
testl
cmpsb
push
inc
fidivrl
jecxz
add
insb
pop
xchg
cmpsb
sti
lret
sarb
and
jecxz
xchg
inc
test
xchg
mov
adc
mov
stc
das
dec
adc
lahf
mov
orl
cld
push
or
addr16
xchg
mov
leave
orl
inc
into
pushf
jp
xor
mov
andb
pop
shlb
or
xor
push
test
xchg
data16
push
outsb
repz
pusha
fsubs
lds
sbb
imul
call
push
adc
outsl
xor
dec
xchg
js
loopne
shr
mov
stos
daa
mov
stos
ja
inc
mov
out
jo
cmp
add
sbb
ss
lahf
adc
jmp
or
outsb
cli
lret
xchg
in
pop
outsb
add
aam
testl
xor
gs
ja
hlt
repz
inc
addb
fprem1
add
aas
dec
std
mov
xor
scas
sbb
adc
jg
pop
jb
and
mov
lcall
mov
push
scas
add
aad
mov
sub
sub
inc
or
adc
mov
xor
sarb
inc
mov
nop
adc
dec
lds
cli
jae
adc
cltd
push
sub
add
mov
enter
and
cmp
in
lods
fisubrl
outsl
in
fildll
lods
push
test
mov
cmpsb
mov
sbb
popf
rolb
sbb
daa
shl
add
and
rcrl
dec
repz
xor
push
adc
mov
push
hlt
out
loope
jge
mov
mov
sub
daa
sub
mov
cmc
fwait
inc
int3
mov
movsl
sbb
out
bound
xor
pop
xchg
sbb
cli
scas
push
push
int
lock
repz
or
pop
aam
jl
or
es
push
adc
pop
test
insb
dec
lret
cmp
xor
int3
pop
sbb
lock
movsl
or
inc
hlt
ret
loop
or
scas
and
pusha
jno
adc
dec
addr16
or
mov
jno
adc
xchg
in
into
cmpsl
push
lods
cmp
arpl
lret
std
rcll
sub
add
xchg
mov
jp
mov
stos
xchg
stc
test
mov
inc
je
adc
add
mov
xlat
fiadds
xor
xor
dec
add
insl
out
mov
pop
adc
inc
mov
loopne
jmp
call
push
loope
sub
push
mov
cmp
fcmovnu
sarl
lods
movb
pop
mov
lock
pop
mov
std
cmp
fdivrs
inc
lods
in
or
fists
xchg
push
xchg
das
stos
mov
flds
in
aam
inc
mov
push
ja
jmp
call
mov
aam
cmpsb
mov
mov
andb
cmp
das
sub
pop
mov
sbb
push
test
push
jg
div
hlt
fcmovb
sbb
mov
pop
and
stos
inc
adc
stos
lds
xor
add
into
movsb
xchg
or
and
and
push
lock
push
pop
mov
test
sahf
mov
jbe
jmp
out
aaa
stc
in
mov
pop
mov
sarl
jns
sub
add
xor
inc
lock
sti
stos
xor
out
flds
lcall
lret
fucom
xor
cmc
or
add
adc
jl
sub
mov
mov
sbb
adc
xchg
jbe
dec
inc
dec
cmp
dec
loopne
pop
pop
add
in
movsl
decb
in
cmp
mov
sub
ljmp
xor
fistl
sbb
and
in
adc
mov
inc
div
and
leave
nop
shll
pushf
not
fisubl
movsl
cltd
xchg
fisttpl
fs
or
daa
lcall
pop
movsb
sub
dec
dec
inc
sub
xchg
mov
pop
aam
popf
jmp
iret
add
xlat
xchg
ror
fcoms
test
xor
imul
aam
jae
sti
jge
sbb
jae
inc
push
pop
xchg
ja
cmp
push
cmp
jne
lock
push
or
inc
in
scas
jns
adc
iret
sub
hlt
sbb
lret
mov
add
call
insl
push
stos
mov
xchg
sub
cmpsl
mov
dec
mov
enter
insl
xor
adc
jp
cli
and
jae
push
jg
push
inc
adc
pop
inc
call
das
cmp
and
xchg
sub
fnsave
dec
mov
jp
mov
arpl
shlb
add
adc
pop
cmp
pop
cmp
add
sbb
xchg
ficoml
and
cltd
inc
adc
stos
inc
sbb
imulb
sahf
inc
jae
in
pop
pop
cmp
mov
xchg
rclb
jno
std
xchg
hlt
mov
pop
rcrl
xor
xchg
mov
xchg
ds
inc
int3
ror
mov
xor
insb
pop
jae
lret
adc
das
outsl
jns
mov
loop
lahf
fdivs
jmp
pop
mov
xor
je
in
add
or
lcall
jmp
int3
jo
xchg
pop
clc
ds
push
sbb
leave
mov
fisttpll
jno
rolb
loope
pop
int
pop
movsb
movsl
inc
xor
dec
inc
mov
sahf
dec
push
xchg
mov
ss
inc
data16
mov
scas
sahf
xchg
mov
and
push
xor
sub
insl
loope
daa
jmp
pop
inc
xor
and
into
ret
jns
pop
sbb
mov
movsb
rol
and
dec
fnstenv
out
data16
arpl
fldl
xor
xchg
add
and
dec
or
repnz
stc
ljmp
add
arpl
aas
add
push
in
les
cs
jns
sti
xchg
mulb
adc
xor
push
std
pop
subb
fs
rcrl
jae
mov
out
jnp
pop
sbb
adc
xlat
pop
and
or
and
out
xor
stos
fs
cmpsl
inc
enter
fildl
imul
xor
imul
loop
cmp
aaa
jl
and
lea
mov
and
push
push
cmp
pop
push
xchg
imull
cmc
and
int3
hlt
jle
pop
aaa
std
cltd
push
int3
leave
mov
dec
xchg
jbe
jmp
test
stos
shll
and
pop
sbb
ficompl
inc
inc
cmp
jbe
inc
inc
and
mov
in
in
imul
lcall
xchg
jne
push
sar
adc
pop
mov
arpl
xlat
mov
jbe
lods
and
setb
in
mov
fists
mov
enter
clc
push
cli
jge
add
data16
aaa
sahf
jmp
jp
mov
mov
sub
dec
in
xchg
jno
mov
in
sbb
mov
lods
in
add
cmpsl
xor
push
mov
inc
aam
lret
stc
ret
cwtl
or
pop
sbb
in
push
and
imul
mov
inc
xor
hlt
jecxz
cmp
clc
and
jge
sub
push
sbb
gs
enter
jge
push
or
mov
sub
orl
push
mov
fisttpl
cltd
test
in
inc
sbb
dec
imul
int
xchg
inc
pop
add
mov
sti
pushf
clc
cmpsb
int
insb
sub
sub
or
movsl
mov
gs
shrb
add
test
mov
insl
cmc
clc
or
pop
les
mov
shl
fsubs
pop
inc
inc
or
xor
fldcw
mov
loope
bound
jecxz
daa
je
push
fisttps
mov
mov
repz
ja
aaa
mov
test
lcall
fisttps
inc
dec
mov
mov
inc
inc
sbb
pop
jmp
adc
icebp
les
ja
in
lds
sbb
add
lea
sub
enter
mov
fmull
add
xchg
test
dec
je
cmpb
jnp
xchg
nop
mov
sahf
xor
iret
or
aas
jne
clc
repz
rcrb
fistps
mov
fisubs
test
lds
std
xlat
pop
and
out
stos
and
mov
test
mov
dec
or
rolb
test
mov
xor
pop
and
adc
ja
pop
enter
mov
push
test
insb
xchg
rolb
sbb
fcom
push
cmp
add
push
xchg
xchg
add
push
dec
arpl
int
cmp
dec
in
mov
jle
dec
dec
sub
push
psubusw
adc
adc
mov
mov
xchg
dec
mov
lock
popa
xor
cmpsb
jmp
mov
jge
xchg
pop
lret
in
cmp
push
cmp
sti
xchg
mov
lds
leave
adc
hlt
xorl
mov
movsl
test
stc
mov
xchg
fs
das
sub
xchg
loopne
cmp
aad
and
xor
insb
in
cltd
pop
call
clc
stc
cmp
pop
ss
pop
addr16
cmp
cltd
iret
out
insl
push
or
lea
or
jnp
add
mov
cmp
cmp
ds
out
dec
sub
inc
insb
adc
dec
pop
icebp
xor
icebp
fs
aam
push
dec
shl
mov
mov
iret
pop
mov
es
fldenv
out
jge
pop
or
pop
pushl
cmc
mov
mov
mov
sbb
pop
lock
scas
out
jmp
or
push
cli
inc
xchg
insb
in
in
add
dec
loope
decl
mov
das
aas
cmp
lods
jb
out
nop
sub
bound
repz
mov
inc
mov
xor
mov
inc
popa
pop
adc
or
or
outsl
xor
xchg
mov
ficomps
dec
adc
add
pop
mov
jecxz
mov
repnz
dec
inc
ds
mulb
imul
sti
sub
movsb
cltd
cwtl
xlat
dec
mov
out
adc
orl
hlt
outsb
cmpsl
pop
les
sub
stos
clc
lods
xor
lcall
xchg
test
loope
inc
inc
lds
sub
test
mov
inc
jae
out
inc
outsl
add
sahf
mov
stos
pop
mov
mov
stos
jge
push
dec
xor
xor
dec
loopne
in
loopne
xchg
fisubrs
popf
pop
add
adc
lods
loop
mov
adc
mov
xlat
sahf
movsb
jp
xor
cli
mov
push
int
in
cmp
mov
das
sbb
and
jbe
shlb
inc
ss
jecxz
mov
pop
loope
xchg
fmull
mov
pop
cmc
test
ror
sbb
lret
outsb
dec
mov
dec
cli
push
pop
clc
popf
xor
rorb
lds
cmpsb
fs
mov
and
in
xlat
jmp
push
push
in
mov
mov
add
in
xchg
imul
sub
mov
inc
insl
jb,pn
jne
push
repz
push
or
sub
jg
test
dec
push
lods
mov
sbb
push
mov
mov
shll
sub
lahf
push
arpl
jno
cmp
je
lods
enter
mov
movsl
repnz
inc
gs
push
pop
jmp
repnz
pop
sub
adc
clc
push
jg
jo
in
add
mov
in
icebp
jle
cmpb
daa
clc
add
fwait
mov
inc
test
in
pusha
movsl
cmp
lea
jmp
push
cs
sbb
popl
enter
rclb
nop
out
mov
insb
cmp
into
pop
xor
jg
jl
loope
sbb
mov
ret
imul
lret
fistpl
in
adc
ss
mov
push
inc
pop
dec
jmp
jb
test
and
adc
inc
xlat
mov
icebp
xchg
sbb
xor
test
adc
jmp
pop
sbb
mov
adc
incb
shrb
jmp
mov
sahf
enter
je
lods
fs
pushf
jae
shll
insl
pop
cmp
xor
lret
arpl
fistpl
or
inc
cmpsb
jmp
loop
gs
rorl
aaa
das
mov
pop
mov
ret
mov
xor
cmp
pop
shlb
mov
bound
adc
iret
gs
xor
movsl
mov
dec
mov
sub
cmp
xchg
je
sbb
aad
mov
js
movsl
ret
les
outsl
out
pop
sub
ret
sbb
add
shlb
pop
in
jmp
dec
push
sub
imul
dec
in
orb
repnz
into
jmp
scas
adc
dec
sub
adc
test
add
push
shrb
push
lahf
addb
xor
xor
push
imul
cs
jmp
sub
mov
inc
and
outsl
mov
jo
xchg
push
std
scas
xchg
jl
fmull
mov
push
xchg
shr
mov
sti
cmp
dec
pop
ja
enter
mov
aas
clc
mov
cltd
dec
cmc
cmp
mov
lcall
sarb
ljmp
push
leave
clc
mov
push
jmp
sub
inc
vphaddwq
movsl
int3
scas
mov
xchg
ss
out
push
mov
out
cld
aam
add
fwait
iret
cmpsl
and
dec
mov
divb
addr16
fldcw
pop
jl
in
mov
out
inc
mov
jle
adc
add
sbb
jb
xchg
xchg
xchg
cmpsb
jp
repz
adc
jno
push
into
sbb
aas
jp
fldcw
push
pop
pusha
add
fs
scas
mov
das
add
rcll
aaa
cwtl
repnz
jne
pop
push
cli
shlb
mov
sub
call
ds
inc
adcl
aas
arpl
mov
dec
je
cmc
pop
cmp
in
pop
cmp
scas
lahf
insl
not
dec
mov
cli
xor
mov
pop
dec
sub
push
xor
das
inc
inc
pop
push
sbb
aad
lods
mov
lods
in
add
and
pop
jne
out
mov
mov
push
stc
add
jnp
divl
cmp
outsb
sbb
mov
lds
rcll
mov
add
jle
jge
js
mov
sub
mov
daa
shrl
in
mov
lcall
out
cmp
mov
add
lcall
mov
jbe
das
mov
cli
inc
mov
pop
int3
mov
mov
and
xor
pop
outsb
mov
loopne
cmp
adc
fidivl
pop
gs
es
cmp
jp
mov
push
ja
movsb
test
add
cmp
out
cmp
sub
adc
popa
test
shlb
pop
xor
sub
mov
std
cmp
sub
cmpsl
scas
sarl
out
lods
mov
and
test
inc
adc
mov
adc
inc
xchg
add
add
or
call
sub
ss
and
mov
jnp
cwtl
inc
out
stc
notl
lret
iret
scas
dec
aaa
inc
outsl
mov
mov
ss
xchg
mov
or
es
jmp
push
rcl
inc
incb
push
or
in
testb
adc
sub
sub
icebp
scas
fs
clc
xor
fnstcw
add
scas
sbb
lods
xchg
or
or
push
pop
outsb
aaa
divb
fcompl
jp
pop
jne
inc
mov
iret
dec
lea
subb
fcoms
xchg
loop
fists
sub
add
and
push
sti
jg
push
and
jp
mov
fs
mov
cmp
inc
popf
mov
call
sub
pushf
mov
pushf
je
movsl
lea
inc
xchg
pop
mov
cltd
cld
shll
fwait
mov
arpl
dec
mov
stc
dec
jle
add
mov
xchg
pop
jecxz
or
pop
cmp
push
das
adc
cmpsb
gs
jmp
cmp
shrl
out
test
dec
cmpsb
fisttps
add
mov
push
lock
ljmp
andl
pop
es
pusha
addb
lods
pop
push
inc
dec
add
js
adc
mov
popa
addr16
aas
icebp
mov
loop
or
int
xchg
inc
icebp
outsl
cmp
fs
sbb
rol
xlat
adc
bound
sarl
into
stos
push
or
arpl
push
sub
dec
xlat
inc
shlb
testb
sbb
inc
insb
mov
cltd
and
cmp
imul
je
jo
jae
leave
in
scas
nop
inc
test
mov
aad
adc
push
leave
out
sbb
push
mov
push
in
scas
mov
pop
cmpsb
lock
mov
aad
mov
cmp
dec
sbb
pop
mulb
mov
into
sarl
sbbb
outsb
test
jae
push
cmp
dec
sub
sub
lret
push
pop
std
sti
push
iret
out
pop
dec
jg
inc
popf
vpminub
lcall
pop
push
aam
pop
xlat
sub
shr
in
sub
xchg
xor
addl
in
mov
lods
adc
jp
xchg
xchg
dec
xchg
xor
addr16
jno
shl
and
lods
pop
mov
int3
ss
test
scas
sbbb
cmp
pop
js
mov
push
sbbb
orl
pop
push
jge
movsl
aas
inc
int
les
cmp
xchg
push
shr
mov
and
sbb
xchg
je
test
out
fnstenv
into
jns
in
rcll
mov
clc
es
pop
mov
je
mov
lret
push
sbb
push
les
je
xor
mov
or
push
in
stos
dec
in
ljmp
sar
ja
pusha
or
scas
pushl
adc
push
lods
jne
ja
jmp
je
add
push
sbbl
out
mov
fwait
leave
pop
push
faddl
fistl
dec
pop
mov
inc
or
ret
mov
xlat
mov
mov
cmp
mov
iret
jns
jge
sti
mov
push
out
push
in
pop
ror
add
mov
fstl
mov
rcll
cltd
mov
imul
outsl
adc
js
xchg
js
fimuls
testb
adc
icebp
outsb
test
daa
rcrb
pop
ror
sub
adc
jbe
add
fcom
sub
xchg
cmp
cmp
pushf
cmpsl
shlb
lea
dec
cmp
ljmp
xlat
aam
lock
mov
sbb
mov
in
fs
adc
cmp
sbb
loope
mov
loopne,pt
loopne
jns
sbbb
pop
into
inc
mov
fisubrl
mov
fadds
xchg
dec
add
popa
lahf
pop
ror
decl
scas
and
test
testb
fldt
andb
rolb
inc
ss
xor
jecxz
xchg
mov
adc
xchg
xchg
pushf
mov
insl
sbb
push
bound
sbb
mov
cmp
in
fbstp
dec
in
and
sbb
or
lods
pop
jecxz
pop
sbb
sub
lods
test
insb
cli
and
iret
jg
loopne
inc
mov
in
aaa
ja
test
loopne
flds
rorb
out
into
and
add
mov
scas
lahf
push
lock
outsl
jns
clc
fildll
xor
sub
jne
pop
cmc
add
pop
mov
dec
mov
sub
dec
inc
jge
adc
adcb
call
jp
loopne
or
inc
into
xchg
dec
insl
repz
mov
push
jns
inc
inc
test
outsb
push
sbb
outsb
inc
xchg
jo
pop
mov
push
push
or
mov
cld
ljmp
xor
shlb
in
mov
or
inc
aas
dec
jae
mov
daa
mov
scas
dec
stc
add
dec
outsl
jns
lds
pop
lock
push
insl
mov
aad
push
jmp
adc
sub
aas
push
mov
out
pop
icebp
in
sbb
xor
shlb
push
pop
jae
es
dec
repz
ss
fdecstp
lcall
insl
jge
aam
push
jnp
push
pop
ret
cmc
jle
mov
pop
push
inc
frstor
inc
inc
inc
xchg
arpl
mov
xchg
dec
inc
mov
inc
nop
test
scas
dec
iret
sbb
in
and
add
fcomps
xchg
lea
xor
movb
cmpsl
pop
mov
xchg
bound
test
ja
sub
push
cld
loop
mov
cmp
pop
test
and
mov
test
or
and
jbe
push
xchg
stos
int3
push
lret
jne
scas
push
mov
sbb
and
pop
or
popf
push
pusha
pop
stos
jo
aaa
adc
mov
push
in
push
loopne
push
jo
mov
dec
xor
dec
xor
rcrb
xorb
lods
jns
fcom
xor
sbb
xchg
xchg
xor
jmp
or
ja
imul
fistps
iret
sbb
and
or
sbb
push
aad
sbb
xor
gs
push
ja
sub
push
xchg
sbb
cs
out
or
in
hlt
ret
sbb
adc
lcall
jg
test
repz
and
in
js
int3
test
mov
and
or
xchg
adc
push
jmp
out
jl
inc
or
mov
lcall
jb
js
push
ss
fcomi
push
mov
dec
inc
shrb
push
push
neg
cmpsl
push
pop
insb
into
loopne
or
pushf
or
lds
jne
rorl
xchg
sbb
xchg
pop
jo
lcall
sbbb
imul
inc
or
dec
dec
push
adc
adc
cmp
jecxz
notl
aad
push
sub
mov
stos
cmp
push
add
inc
js,pn
push
mov
lcall
sbb
pop
xor
sbb
xchg
dec
jl
xor
inc
call
mov
or
aad
jle
cmp
xchg
iret
leave
in
push
fbstp
stc
jecxz
xchg
aad
push
inc
sbb
in
incb
sub
addr16
pop
xchg
dec
and
in
push
dec
pop
ljmp
push
mov
mov
jae
neg
push
mov
frstor
dec
xchg
addb
stos
dec
ljmp
sub
and
ror
pop
and
xor
xorl
popa
arpl
push
cmc
aad
dec
xchg
icebp
sub
lea
pusha
sahf
pop
mov
call
inc
test
dec
sbb
lret
sbb
dec
aaa
or
pop
push
ret
push
sahf
jge
xor
xchg
sbb
insl
loope
inc
fbstp
xchg
and
loope
mov
out
lahf
pop
pop
xchg
ja
jnp
mov
daa
loope
xchg
popf
pusha
jns
mov
nop
add
add
sub
in
pop
pop
add
in
adc
std
dec
incb
xor
stos
push
mov
sbb
sbb
daa
mov
cmp
push
arpl
ss
pusha
scas
mov
test
movsb
js
pushl
mov
rcl
cli
mov
cmpsb
adc
fistpl
rorb
test
add
sub
push
repnz
subl
push
push
pusha
xor
or
jle
push
pop
lods
or
decl
jecxz
daa
pop
or
out
loopw
sti
cld
dec
fcoml
fsubrs
subl
xchg
lods
int
imul
adc
cs
repz
sbb
mov
dec
mov
test
outsl
sub
jnp
push
das
or
or
out
sbb
adc
je
jns
out
ja
push
fsubp
pushf
mov
adc
cmp
jo
xlat
push
dec
js
mov
std
add
or
outsb
lcall
addr16
inc
or
pop
mov
jns
lods
in
orl
sti
xor
hlt
dec
sub
insb
int3
std
jbe
test
push
or
jno
add
mov
xor
add
call
insb
insb
add
imul
outsb
loopne
mov
lds
and
ja
shl
pushf
dec
dec
imul
lretw
divl
sub
ret
sub
push
fstpt
mov
dec
dec
add
in
mov
pinsrw
or
rcl
je
std
in
mov
mov
fimull
xor
nop
inc
push
sbb
cmp
add
xor
loope
shll
jecxz
rcrl
aad
and
rorl
jmp
dec
lahf
sub
mul
cmp
xchg
lret
out
add
ljmp
or
mov
cmp
cmp
cmpsl
leave
idivb
aaa
jp
div
push
popa
adc
es
jge
push
icebp
cmp
xchg
inc
adc
popa
and
xchg
call
sbb
int3
adc
ljmp
or
push
inc
pop
push
and
ljmp
aaa
jmp
ljmp
aam
xchg
test
enter
std
mov
iret
pop
lds
sub
and
neg
ljmp
jge
and
testb
out
jmp
mov
int3
add
loop
arpl
subl
fnsave
mov
testl
rcll
cwtl
movsl
call
jp
stc
xchg
push
mov
add
ss
pop
dec
inc
mov
test
push
push
push
je
clc
in
sub
dec
dec
js
mov
aaa
insb
mov
fbstp
adc
int3
pop
push
inc
xchg
sbb
dec
cmp
sbb
ret
cmpsl
iret
pop
inc
lods
std
jbe
movsl
xor
cmp
int3
or
test
adc
in
je
aaa
fcompl
mov
sbb
cmc
adc
mov
add
xchg
mov
ret
mov
pusha
and
cmp
pop
and
call
iret
mov
test
ret
aad
mov
pop
pop
icebp
dec
aas
cmp
mov
leave
mov
jne
cmp
inc
icebp
mov
out
aaa
clc
and
fidivrs
dec
loope
scas
mov
addr16
lahf
dec
outsb
cwtl
cmp
cltd
arpl
mov
pop
cmp
insl
daa
jg
and
lcall
repnz
in
lock
cmp
sub
out
out
mov
mov
push
dec
pop
arpl
sbb
and
loope
stc
xchg
add
push
ds
xor
testb
sbb
pop
mov
aas
or
jg
outsb
or
push
xchg
ficoms
movsl
fiadds
mov
lea
push
cld
pop
dec
pop
xlat
insl
ret
cli
or
aad
cltd
add
leave
fs
mov
adc
das
sti
in
sarl
or
jae
pusha
in
inc
pop
sti
cmp
cmp
cmp
testl
mov
add
outsl
pop
add
push
xchg
sbb
andl
movsl
xchg
stos
subl
mov
and
inc
mov
lea
cmp
call
outsl
fcmovu
add
imul
pop
adc
shll
sub
cs
or
pop
pop
sub
jns
gs
aam
les
mov
lods
sbb
add
aad
dec
mov
or
pop
xorb
ljmp
cmp
andl
inc
addb
imul
push
stc
push
imul
sub
mov
sub
xor
jns
decl
dec
and
lret
push
addb
rcr
ret
into
push
xor
mov
sbb
inc
mov
xchg
fstpt
pop
mov
les
pushf
lret
out
xlat
add
jo
fisubrs
and
fidivrs
negb
rolb
and
gs
push
pop
add
lods
sbb
jg
xchg
adc
pop
fmuls
fcoms
cmp
dec
push
sub
adc
stos
push
xor
adc
aad
pop
jl
test
xor
xlat
mov
loopne
rcl
mov
xor
stos
xchg
in
cs
iret
push
sbb
leave
mov
xlat
and
mov
push
xchg
loopne
int
mov
cli
rcll
mov
sti
aas
push
add
movsl
jl
cltd
add
sti
push
dec
js
fiaddl
sbb
add
lods
or
in
pop
sbb
inc
out
fs
ja
fs
stos
xchg
sbb
lahf
fwait
loopne
push
out
xchg
insl
rcl
cmp
lock
shlb
adc
imul
out
pop
test
daa
mov
repz
xor
cmp
cmp
mov
aaa
xchg
std
lds
aad
push
enter
sub
inc
add
inc
pop
adc
jae
mov
pop
cmpsb
push
sbb
inc
shl
js
xchg
mov
orb
pop
arpl
mov
inc
add
jnp
add
push
xor
mov
in
cli
mov
imul
aad
ds
nop
mov
add
push
jl
xor
scas
rol
dec
sub
lods
ret
jge
push
dec
lcall
cli
mov
and
xor
loop
xchg
sbb
cmc
dec
bound
or
pop
sti
pop
and
call
mov
roll
sbb
jmp
jnp
dec
xchg
stc
test
cld
mov
sub
cmpl
pop
pop
in
pop
ljmp
test
jecxz
mov
les
sub
cltd
fstl
insb
dec
in
into
shlb
and
int
push
sbb
lcall
enter
adc
pop
out
loope
nop
sub
and
adc
pushf
jne
fdivrl
mov
clc
push
mov
out
pop
call
cmp
dec
sar
mov
inc
push
push
adc
xor
int
push
scas
repnz
aad
push
dec
inc
rcrl
mov
push
fdivl
je
jb
hlt
pop
pop
repnz
sbb
pop
rcrb
jo
xor
adc
cs
lods
cmp
mov
fwait
dec
pop
mov
into
mov
push
mov
pop
dec
pop
push
rorb
add
xchg
in
xchg
pop
sbb
out
into
sub
movsl
jmp
cmp
sbb
push
push
jg
aaa
and
xor
out
cwtl
sub
pop
sahf
jnp
cmp
or
adc
or
cmp
lods
or
sbb
mov
stos
jl
push
or
outsb
ret
xor
dec
cmpsb
inc
and
test
adc
repnz
rorl
sub
mov
lcall
int
fmulp
movsl
aaa
dec
lret
pop
pop
push
add
pop
fldl
in
xorl
push
stos
aam
push
and
stc
inc
jae
or
dec
or
stos
scas
in
mov
scas
sar
pop
or
xor
sbb
fisubl
ret
mov
sti
insb
push
cld
mov
push
shll
insb
push
aad
jle,pt
ljmp
cs
sub
push
sbb
cmp
jae
ret
cmp
test
xlat
pop
sub
andl
in
xchg
pop
popf
repnz
cmp
pop
xor
sarl
xlat
push
and
jne
xor
lods
ret
test
ss
mov
hlt
aam
dec
add
jnp
mov
inc
js
fldl
jo
mov
and
fwait
xor
sub
and
hlt
dec
adc
jmp
loop
xchg
inc
inc
shlb
jecxz
xchg
pop
setnp
fnstsw
pop
jp
mov
inc
dec
and
mov
mov
mov
cli
inc
sub
sub
and
stc
and
push
imull
shll
insb
push
and
jns
or
sti
out
push
inc
xor
iret
aaa
or
or
ds
push
ret
gs
xchg
std
adc
lcall
mov
add
sahf
adc
gs
jl
lds
inc
mov
cmpsl
sbb
leave
test
sbb
out
mov
movb
inc
js
mov
dec
jge
pop
iret
xlat
dec
pushf
ret
stos
mov
ret
push
loope
mulb
cli
mov
ret
adc
out
push
push
imul
test
fsubr
divl
dec
cmp
cwtl
and
lock
cmpsb
movntps
dec
mov
sbb
xor
ja
fistl
fbstp
mov
mov
mov
push
or
test
push
frstor
xchg
fwait
push
push
stos
sub
out
test
or
push
cmp
shll
ret
aad
adc
ret
mov
mov
xchg
in
ficompl
dec
into
jp
xor
lods
lods
mov
rolb
push
sbb
mov
and
add
push
cwtl
test
mov
cltd
jmp
cvtps2pd
lods
jge
xor
mov
mov
mov
add
cwtl
push
push
fnstcw
pop
adc
mov
pop
push
xchg
sbb
gs
mov
lret
pop
mov
push
jnp
mov
imul
ss
xchg
js
cmovae
ljmp
in
jns
mov
jle
cld
xor
and
daa
sbb
repnz
daa
xor
popa
std
pop
mov
das
mov
cmp
mulb
push
mov
aas
cmpsb
ret
and
xchg
enter
pop
js
jbe
fimuls
loopne
popf
inc
loope
loopne
lds
imulb
mov
test
fcmovnb
or
xor
sub
push
gs
test
es
icebp
cmpsl
mov
sbb
insl
fistpl
or
dec
lods
out
add
mov
adc
mov
push
push
pop
mov
cmp
or
ret
push
xor
pop
es
rcl
dec
gs
outsb
dec
xorl
lods
call
jbe
xor
aas
sbb
adc
jmp
xor
addr16
mov
push
js
xchg
add
cli
js
pop
dec
mov
hlt
inc
push
hlt
call
jae
jb
repnz
mov
mov
push
bnd
cwtl
mov
dec
mov
rorl
push
das
sti
lcall
inc
jb
aad
mov
mov
or
int3
js
scas
cmc
loope
jb
in
inc
inc
pop
mov
or
xchg
mov
pop
call
jae
jns
lret
mov
sub
and
mov
sbb
dec
mov
pop
aad
je
movsl
lcall
addb
les
es
inc
jno
cli
push
int
in
xchg
roll
dec
ret
push
lahf
je
mov
xor
adc
inc
jmp
pop
stos
xchg
mov
xchg
call
sbb
cwtl
divl
mov
sub
scas
cmp
mov
movsl
and
sub
and
adc
fwait
movsl
cwtl
mov
or
insl
push
jecxz
insb
adc
sub
sbb
xchg
adc
into
jne
or
xor
cltd
sbb
adc
lret
inc
fcoml
jns
das
xchg
shrd
pop
iret
out
dec
mov
jnp
push
and
inc
xor
and
pop
negb
sub
in
cmp
aam
mov
jle
sbb
es
inc
out
add
sbb
test
into
out
lods
nop
push
xlat
ds
sub
sub
inc
shlb
test
dec
pop
adc
out
in
mov
ror
lcall
sbb
xor
pushf
sahf
lock
out
and
lcall
add
dec
jg
clc
daa
pop
cmp
mov
out
aas
loope
das
mov
out
jae
dec
incb
repz
test
shll
fildll
rorb
xchg
cmp
shll
sub
jecxz
sub
pop
xchg
pop
and
mov
xchg
push
or
xchg
fldcw
or
pop
sub
dec
push
pop
or
pop
cmp
stos
mov
icebp
xlat
sahf
adc
adc
cltd
push
sbb
or
imul
push
pop
fisubs
mov
pop
stc
cmp
adc
push
rclb
lea
lock
mov
cld
xchg
sub
or
adcl
dec
cmp
outsl
je
jnp
imul
lret
loope
and
dec
dec
mov
rcrb
push
or
push
sub
adc
out
jno
std
sub
in
hlt
sbbb
sub
sahf
mov
or
loopne
xchg
xlat
mov
int3
punpcklbw
repnz
inc
push
mov
dec
adc
lahf
push
mov
add
mov
cld
mov
daa
jg
xchg
test
mov
jno
ret
mov
movsb
mov
push
out
mov
jbe
aas
sub
jae
mov
push
rolb
xor
add
dec
daa
sub
lret
fwait
cmpsl
ss
loop
cmc
adcb
iret
pop
mov
daa
pop
dec
add
outsb
add
pusha
pop
mov
cmp
movb
inc
or
jmp
xchg
sub
test
lods
repnz
scas
div
fisubl
xchg
into
dec
enter
dec
insl
scas
stos
cli
lock
arpl
mov
fmuls
jns
std
dec
outsb
aaa
xor
pop
cmpsb
dec
push
cwtl
xor
mov
into
not
push
jo
pop
push
adc
in
lods
icebp
rcll
leave
add
stos
cmp
sbb
push
xchg
push
mov
stos
cli
adc
ret
js
push
push
pop
push
cmp
hlt
inc
xchg
pop
dec
imul
mov
in
movsl
cmpsb
int
and
adc
js
es
mov
pop
jmp
xchg
adc
enter
jecxz
insb
mov
adc
mov
fcmovbe
jne
jnp
inc
pop
std
fistl
push
and
enter
pop
sub
movsl
iret
xchg
jle
cld
scas
cmp
sub
jbe
or
bound
movsl
sbb
repnz
and
mov
mov
nop
fadds
or
push
inc
mov
add
cmp
hlt
cmovl
lods
sbb
stc
es
cltd
dec
push
lret
pop
out
popf
das
dec
and
mov
mov
xchg
adc
inc
adc
aam
pop
pop
lahf
adc
jp
push
mov
into
addl
jbe
stos
xchg
imul
cmp
mov
push
sbb
int
dec
call
cmc
cmpsl
add
hlt
add
mov
sbb
xchg
ret
lret
fsts
in
in
call
xchg
sub
push
sub
pushf
outsb
sub
sub
xor
daa
sbb
aad
test
std
push
mov
ret
sbb
sub
fwait
cmp
mov
xchg
push
lahf
mov
insl
or
sarl
inc
push
dec
ljmp
xchg
fisttpl
sub
mov
sbb
sub
rol
jnp
insb
push
sbb
add
push
push
stos
aas
push
xor
fs
push
and
push
aas
adc
or
lret
or
shll
sub
cli
icebp
ljmp
cmpb
mov
in
inc
dec
push
leave
mov
sti
mov
idiv
xor
in
pop
inc
loop
jl
push
jmp
inc
mov
jo
cltd
imul
divb
movsb
lods
and
nop
inc
sbb
inc
jge
aam
adc
cs
cmpsl
and
aas
in
jb
mov
xchg
popa
sbb
jne
and
xor
push
ds
dec
inc
movsl
scas
sahf
orb
lods
or
mov
push
and
ret
cmp
inc
jle
pop
popf
push
pop
pop
push
rorb
lahf
and
scas
test
push
fs
fildll
test
pop
sub
mov
test
outsl
roll
sub
pushf
or
lock
jge
insl
xchg
or
push
sahf
cmp
leave
jmp
dec
mov
jnp
scas
out
mov
sbb
mov
mov
flds
arpl
movsb
adc
xchg
loopne
inc
inc
es
aaa
test
in
bound
fxch
popa
lcall
mov
fimull
adc
fdivrs
rcll
adc
filds
jmp
mov
sub
and
fists
fcmove
or
xor
mov
add
lea
inc
aad
cmpsl
pushf
loope
out
popf
ljmp
push
shlb
cmpsb
aaa
mov
arpl
and
pop
aam
xor
fabs
xchg
jmp
std
jmp
jns
jno
jae
les
imul
je
sub
sahf
jp
sub
add
test
add
push
cmc
or
ds
inc
lret
faddl
addr16
shll
sub
dec
lds
pop
ss
imul
imul
call
inc
lret
xor
repnz
cmp
and
mov
fidivl
call
sbb
dec
test
aam
lahf
stos
enter
xchg
sub
jno
nop
mov
fdivrs
out
inc
repz
in
data16
cmpsb
insl
dec
inc
inc
sub
push
push
je
pop
mov
test
adc
mov
push
incb
adc
cs
ffree
push
loopne
fadd
ja
mov
fs
pushl
add
cmp
push
out
jle
testb
test
movsb
push
or
sahf
fdivrl
inc
xor
sbbl
repnz
xor
push
les
shlb
inc
data16
aaa
cld
dec
out
sub
mov
pushf
mov
dec
mov
idivb
cmp
cmp
data16
xchg
sbb
ljmp
imul
jp
fldt
jb
cld
push
push
dec
mov
dec
or
add
mov
sbb
in
scas
divl
subb
arpl
leave
arpl
insb
mov
mov
pop
test
and
popa
add
test
push
arpl
cld
icebp
lea
add
xor
lret
mov
cwtl
mov
push
jmp
push
lds
mov
mov
mov
inc
push
call
xor
mov
mov
pop
xlat
dec
xchg
jecxz
stos
insb
mov
and
popa
xor
or
repnz
stos
xchg
mov
aaa
add
lods
inc
adc
mov
rcr
lock
and
xor
xchg
cmc
into
inc
inc
notl
pushf
and
mov
fwait
inc
mov
dec
inc
or
jnp
add
aam
mov
sbb
mov
mov
jnp
das
cmc
or
pop
mov
loop
inc
sub
ret
cltd
sahf
sbb
mov
into
mov
or
mov
push
push
or
jnp
test
mov
inc
cltd
pop
data16
sub
mov
mov
xchg
test
and
scas
push
pop
out
jmp
test
fs
call
lahf
mov
mov
movsb
cmpsl
push
and
sbbb
sbb
loop
sbb
stos
gs
fstpt
shlb
add
and
out
and
inc
xor
fwait
mov
jmp
adcb
mov
adcl
addl
aad
in
out
cmpb
inc
std
or
xchg
mov
or
cmp
nop
insb
push
and
dec
add
out
and
lahf
scas
mov
mov
pushf
add
movl
cmp
jns
adc
dec
adc
mov
aad
test
jl
gs
mov
loopne
stos
cmp
aad
xchg
push
fstl
loopne
call
jbe
cmp
xchg
pcmpgtb
or
mov
movsb
mov
ljmp
pop
out
aaa
fisttpl
cmp
testl
inc
out
call
mov
mov
mov
fadds
clc
push
cli
or
xchg
jmp
push
and
pushf
jns
pop
fsubs
mov
xlat
ror
cmp
jne
xchg
test
xchg
sti
mov
push
lds
or
pop
fcomip
push
fimull
cmp
dec
lods
sbb
cmc
shr
xchg
jg
xchg
pop
repz
aas
cmpsl
jg
jb
or
in
jae
in
popf
shrb
aas
shll
out
xchg
mov
sbb
pop
inc
sub
jb
pop
pop
shl
shlb
cmp
aas
dec
dec
ss
push
inc
mov
or
xchg
js
je
in
fdiv
and
je
add
sbb
roll
sbb
ret
xchg
dec
imul
ret
jne
mov
je
pop
or
push
call
shrl
fmul
je
aam
pop
subb
push
xchg
push
xchg
jne
pop
stc
mov
outsb
mov
jge
mov
push
adc
insl
jle
stc
mov
jle
xchg
mov
jle
dec
data16
pop
push
pop
xchg
xor
mov
or
fsts
lods
or
dec
sbb
pop
pusha
xor
pop
mov
imul
pop
mov
mov
inc
push
shrb
mov
sbb
cmp
pop
loope
mov
inc
inc
scas
and
mov
into
mov
imul
mov
in
es
add
test
cmp
xchg
mov
cmp
sub
loope
iret
and
shlb
enter
jl
ret
jns
mov
test
add
out
bnd
hlt
subb
stos
adc
shl
xchg
add
or
xchg
add
pop
mov
dec
add
daa
mov
int
sbb
aas
xor
or
sbb
lahf
adc
mov
adc
out
js
sahf
imul
cmp
jo
sub
js
decl
adc
pop
xchg
lea
out
sbb
leave
mov
mov
ja
sbb
ss
mov
sub
out
sub
dec
jecxz
imul
push
mov
push
andb
aas
sbb
mov
out
mov
sahf
mov
jnp
sbb
cwtl
cld
xchg
mov
mov
sub
cli
mov
gs
cmp
mov
dec
pop
push
jmp
imul
insl
jle
dec
mov
std
fcompl
push
testb
in
lret
mov
repnz
xor
sbb
sarb
daa
pop
out
aas
enter
mov
ja
ficoms
mov
mov
mov
and
adc
stc
pop
push
repz
pop
lret
lods
cwtl
add
push
fnsave
sbb
jmp
xchg
pusha
inc
mov
sbbl
jmp
testb
out
adc
mov
orb
dec
rcr
test
or
mov
pop
dec
cmpsl
cmpsl
shlb
mov
std
lods
jnp
loop
icebp
lods
jbe
stos
mov
fs
ja
add
dec
mov
sbb
loope
sbb
lret
test
push
fwait
jno
or
loopne
pop
aaa
xor
int
push
or
arpl
call
dec
mov
inc
lds
stc
mov
dec
mov
test
lcall
out
or
fists
adc
stos
test
xor
xchg
mov
cld
pop
xor
insl
into
out
fxam
push
scas
pop
out
jp
mov
movsb
and
jle
fcom
loop
jle
add
in
and
xchg
repz
cmp
call
in
fs
dec
sbb
push
cwtl
mov
movsb
jbe
cmp
cwtl
leave
add
mov
push
or
fs
lock
jnp
push
loopne
negb
lret
daa
push
scas
xor
lahf
lods
dec
adc
pushf
mov
pop
adc
sbb
lret
jbe
call
add
jo
push
fisubrs
cmpsl
repz
cmp
fucomip
rorl
sub
sbb
pop
sbb
movsb
cmpsb
or
xor
cmpsb
mov
jmp
arpl
push
shl
fwait
pop
cld
inc
pop
cmp
fstpl
sbb
rorl
mov
dec
pop
and
aas
xor
adc
mov
stos
push
sbb
out
jno
lock
je
inc
call
movsb
cltd
rep
jnp
gs
aad
scas
aas
xor
and
iret
xor
clc
aam
rcll
rorl
mov
out
push
std
pop
out
rol
icebp
cwtl
test
repz
and
mov
scas
jp
fdivrl
hlt
mov
sub
rcrb
or
int3
cmc
data16
sbb
stc
scas
cmp
dec
adc
inc
push
imul
push
adc
inc
push
out
dec
jne
jb
in
enter
jle
pop
sub
out
std
lret
test
mov
jns
sbb
arpl
cmc
push
mov
fsubr
outsb
cmpsb
cmp
jg
jae
push
xor
xchg
rorb
mov
xchg
xchg
push
outsb
mov
pop
pop
shlb
xchg
adc
pop
in
cwtl
hlt
sub
insl
xchg
pop
into
pop
cmp
jns
and
movsl
lea
das
lcall
xchg
test
pop
call
test
jl
pusha
ret
push
insb
jecxz
inc
stos
xlat
jae
add
cmp
cmp
add
cmp
ss
lods
add
pop
jp
out
sub
xchg
mov
negl
scas
sub
jnp
leave
call
aam
outsl
xchg
mov
loope
in
mov
push
gs
into
jmp
dec
push
movsb
popa
lcall
jb
jbe
jecxz
cld
jmp
xchg
scas
nop
add
push
dec
push
xlat
movsl
xlat
movsb
sub
into
loope
xor
xor
cmp
cmp
loop
inc
das
cmpsb
ja
push
stos
push
in
scas
lods
iret
lods
and
sbb
push
into
pop
mov
cmp
cmp
insb
inc
mov
cmp
aad
or
mov
xchg
leave
sbb
push
std
xor
repnz
sbb
dec
push
mov
lcall
es
movsl
push
xchg
imulb
push
ret
aas
cmpsl
cltd
inc
and
pop
adc
sarl
xor
lahf
rorb
dec
xlat
test
inc
fmul
add
jo
jp
mov
dec
cld
shl
sub
icebp
adc
inc
mov
fdivs
loopne
fisubl
add
jecxz
and
loopne
and
xor
mov
lahf
mov
sbb
jle
xchg
sbb
fnstcw
mov
push
dec
sbb
mov
in
xchg
sbb
jns,pn
or
inc
into
cmp
push
js
iret
dec
or
sbb
mov
dec
ret
lret
xchg
sbb
test
insl
daa
rcrl
les
sub
and
pop
test
into
jmp
pop
lret
cmpsl
dec
int3
in
lea
jo
xchg
inc
call
adc
lds
sbb
xchg
or
cmp
cs
popa
mov
sub
cmp
inc
mov
mov
adc
lods
and
inc
push
or
push
add
iret
cmp
fistl
cmpsl
shll
pop
push
pop
loopne
add
sti
xchg
je
push
sti
or
adc
sbb
pop
cmp
and
mov
add
mov
ror
int
mov
maxps
loop
pop
cmpsb
mov
dec
frstor
xor
out
lock
mov
stc
jo
movsl
cmpsl
sarb
add
sbb
jbe
mull
and
mov
sbb
lcall
sti
cmp
leave
cmpsb
in
addl
add
subl
inc
xor
out
mov
push
dec
push
int
hlt
cmp
int
mov
jne
dec
jae
pop
pop
ja
test
dec
mov
or
outsb
sarb
ss
push
cmpsl
xor
mov
mov
int3
dec
mov
xchg
shrl
stos
cmpsb
cs
popf
pop
sbb
shl
repnz
sbb
push
add
mov
shlb
add
pop
ja
xor
xchg
sbbl
pusha
out
in
jg
cmc
dec
adc
add
insl
fsubrp
fistpll
inc
aas
in
jns
loop
inc
mov
adc
mov
aas
in
mov
xor
sti
or
stc
je
push
adc
adc
in
sahf
popf
cmp
cmp
sub
fcompl
xchg
outsl
mov
aas
clc
push
cmp
cltd
popa
movb
lcall
outsb
jl
jbe
data16
je
mov
cmp
add
notb
lcall
sub
add
les
or
dec
ret
imul
adc
dec
pop
fs
mov
mov
insl
aaa
mov
pop
gs
lcall
out
rcrb
push
incb
xchg
insl
out
inc
lock
imul
push
xchg
or
inc
outsb
dec
xor
je
addb
adc
and
dec
popf
adc
xchg
xrelease
or
xchg
push
xor
movsb
in
dec
push
shll
repnz
repnz
push
push
rorl
and
and
and
pop
test
mov
mov
unpcklps
mov
mov
xlat
gs
adc
add
and
mov
mov
mov
jge
dec
ret
sbb
std
inc
sbb
jb
and
movsl
mov
push
out
jae
mov
hlt
cmove
gs
or
fistps
je
int
lods
pop
adc
icebp
sbb
fstpl
mov
js
inc
xchg
mov
fst
sub
add
movhlps
mov
sbb
pop
mov
mov
jle
push
and
mov
pushf
or
xor
xchg
mov
sub
adc
jb
and
jl
icebp
adc
inc
shl
test
fcomps
add
loope
stc
push
dec
pop
pop
xchg
add
sbb
dec
mov
inc
add
xchg
out
mov
nop
js
cmp
ja
inc
scas
es
test
mov
jb
pop
pusha
cmpsl
push
sbb
push
sbb
daa
dec
push
xchg
cs
fisubrl
aaa
jno
inc
das
pop
mov
add
shrd
jp
cmp
add
aad
mov
push
scas
sarb
and
aas
idiv
int3
mov
mov
mov
dec
ds
mov
ja
call
test
imul
sbb
gs
lds
push
fdivrp
rclb
mov
cs
sbb
addb
out
fdivs
jb
add
imull
xchg
out
std
loop
jae
movsl
xor
and
dec
jb
push
ds
push
jmp
lods
adc
lock
mov
cmp
ret
sarl
mov
lahf
mov
or
adcb
incl
pop
adc
imul
jae
jle
jns
lds
stos
shrb
sahf
loop
fsubrp
sbb
adc
lea
jne
xchg
aaa
mov
rcll
out
addl
cwtl
cmpsl
adc
out
jb
scas
cs
pop
jg
inc
inc
add
mov
or
mov
loopne
mov
rcl
fs
inc
or
cmp
pop
mov
mov
arpl
pop
jmp
js
cwtl
in
mov
hlt
xor
and
aaa
rcll
scas
mov
repnz
sbbb
ret
inc
adc
or
loop
sub
add
fildll
jp
or
jmp
adc
outsl
ja
mul
aaa
test
cmpsl
pop
push
shlb
mov
pop
dec
and
sar
les
mov
iret
rcrb
fwait
pop
outsb
aas
jne
ja
rol
and
jb
ja
cmp
loopne
adc
ss
negb
cmp
cmp
cltd
xchg
sahf
in
rcrb
pop
jg
sahf
mov
fcomps
sbb
and
pop
ja
daa
mov
and
insl
jge
mov
jae
fs
les
adc
xor
jo
in
cmp
add
je
popf
jp
scas
pop
notl
mov
inc
mov
icebp
inc
in
shll
cmpsl
mov
mov
lret
pushf
push
xchg
es
mov
lahf
mov
xor
adc
dec
mov
test
testb
push
sahf
push
int
pop
dec
and
push
gs
int
jno
ja
and
aad
call
jo
fnstcw
dec
outsl
rclb
mov
fsub
push
gs
ljmp
fildll
sbb
dec
inc
mov
test
out
pop
or
pop
lods
call
dec
aam
mov
xchg
cmp
adc
fsubrs
pop
pop
mov
dec
lock
inc
test
pop
xor
cmp
cmp
repnz
pop
jp
lods
sub
mov
repz
and
addr16
pop
lock
cwtl
and
cltd
xor
mov
gs
jg
pop
ljmp
cmc
pop
rcll
pusha
inc
das
fistps
pop
lret
cmc
mov
mov
push
out
push
sub
cwtl
xor
movsb
fsubr
push
or
pop
aad
aas
xchg
je
lcall
popa
xchg
dec
stos
outsl
sbb
push
mov
xlat
aas
popa
das
pop
adc
nop
inc
jmp
and
fnstsw
cmpsb
clc
popl
js
imul
pop
rcrl
jbe
rcl
and
insl
repz
lock
fwait
sbb
xchg
xlat
fwait
xor
lcall
dec
std
lahf
testb
inc
sti
adc
outsl
fadds
inc
push
or
fldl
inc
mov
sub
xor
cld
or
cli
push
and
rcll
pusha
lcall
ljmp
loope
hlt
jae
add
sbb
adc
decl
push
sub
or
mov
decl
sub
insl
lahf
and
pop
mov
mov
sub
imul
lret
fstl
xor
inc
loopne
mov
incl
or
jl
or
push
in
lret
jb
xor
pop
push
imul
or
jp
insl
adc
mov
test
andb
pop
iret
mov
in
xchg
dec
sub
insl
sarb
xchg
pop
cmp
cmp
in
stos
add
or
pop
jmp
xor
xchg
mov
ja
cmc
sbb
loope
movsl
mov
xchg
testb
and
dec
imul
out
add
test
add
lret
or
sarb
mov
mov
add
packuswb
and
out
fbld
mov
jae
jge
sahf
or
push
sti
xor
jmp
cld
xchg
inc
add
int
sub
pop
add
sbbl
in
out
mov
jle
imul
mov
mov
clc
and
loope
or
lods
mov
lret
xchg
xchg
pop
push
jo
ja
add
addr16
lret
xor
or
xchg
jne
jo
hlt
push
adc
add
stc
sbb
lods
xor
jmp
mov
lods
ljmp
out
icebp
fs
push
push
or
add
ljmp
rorb
stos
xor
je
inc
cmp
xchg
pop
mov
sbb
int3
cmp
out
add
in
push
loope
pop
adcb
lret
insl
insl
std
sub
mov
cmpb
scas
xchg
cmp
xor
inc
sbb
xchg
ret
dec
je
and
add
dec
add
fldt
sbb
xchg
pop
push
jmp
stc
jns
xchg
xor
xor
pop
lds
adc
adc
push
xor
mov
xor
or
movsl
std
and
data16
xor
or
add
push
test
or
arpl
loope
test
lcall
or
cmp
adc
xchg
mov
adc
daa
imul
cmp
loop
popf
dec
in
rorb
mov
inc
inc
cmp
xchg
jmp
ljmp
fildl
std
or
dec
lret
inc
push
jae
inc
out
out
add
int3
sti
loopne
aad
ss
dec
aas
adc
cmp
outsl
js
inc
mov
fs
stos
mov
imul
lock
xor
dec
pop
and
bswap
sbb
ret
mov
andl
roll
xor
and
sbb
xchg
mov
pop
adcl
jge
enter
jno
popa
xchg
lret
cmp
sar
cmp
mul
add
loopne
arpl
gs
in
mov
int3
mov
lcall
pushl
jne
lret
fucomp
stos
sbb
aam
push
adc
mov
ja
dec
or
loope
mov
std
and
rol
mov
pop
lahf
test
xor
mov
popf
xchg
cmp
xorb
mov
and
loop
xchg
movsb
pop
xor
fildll
or
push
ds
imul
loope
sub
shrb
jnp
push
adc
jmp
jp
xchg
mov
cmc
push
jns
adc
pop
test
cld
xor
imul
imul
jp
loope
lret
inc
mov
imul
mov
divb
fldenv
out
jbe
push
cmc
fadds
jle
out
mov
lock
shl
or
xchg
js
mov
cmpsl
jnp
sbb
aas
jle
push
mov
shll
jge
pop
add
bound
fsubs
divb
mov
cmp
and
js
or
in
xchg
leave
cltd
aaa
inc
sub
neg
cmp
lods
inc
les
dec
xchg
shlb
mov
sbb
push
jbe
push
xchg
test
lods
popa
inc
ret
cmp
pop
xlat
jl
sub
leave
mov
je
dec
popa
mov
sbb
mov
lods
or
xchg
mov
dec
mov
mov
cmc
add
cmp
je
or
sub
in
adc
jno
popa
xor
fbstp
or
cltd
push
sub
aam
daa
cmpsb
xor
xor
in
sbb
mov
sbb
mov
popaw
cmp
xchg
pop
add
cld
popf
jle
mov
mov
fstpl
cld
nop
aas
mov
iret
xor
adc
rolb
lea
xor
subb
fldt
jne
mov
fnstenv
hlt
popa
mov
ficomps
xor
daa
movsl
push
jo
xor
jmp
or
mov
jle
repnz
add
and
sbb
sbb
mov
cmpl
sbb
movsl
sbb
add
stos
adc
xchg
mov
mov
mov
enter
out
cmc
push
sub
mov
jbe
testl
outsl
jbe
xor
ficompl
ja
dec
cmp
adc
inc
cld
mov
popa
loopne
movsb
out
lret
push
xchg
mov
repnz
inc
inc
add
lahf
mov
je
pop
mov
add
stos
jb
cmp
cmpsl
lock
push
cmp
pop
inc
jne
and
mov
mov
data16
lea
adc
mov
mov
cmc
data16
jl
add
fstpt
dec
dec
cltd
push
out
stc
sbb
nop
call
add
scas
dec
xchg
inc
adc
xchg
cmp
mov
cmc
inc
into
inc
shl
dec
call
sti
movsb
mov
in
in
shrb
pop
xchg
aas
aas
scas
ja
add
jge
xchg
das
popa
loop
sub
push
mov
and
sub
mov
das
mov
pop
mov
popa
add
aad
adcb
cmp
and
ficomps
daa
inc
iret
clc
adc
mov
sbb
das
in
adc
push
stc
mov
cmp
pop
push
imul
ret
jno
sub
daa
sbb
scas
movsb
scas
jnp
ret
jecxz
push
xchg
dec
pop
xchg
push
and
sbb
rolb
mov
aas
mov
xchg
and
xchg
and
daa
pop
push
and
mov
mov
jae
xchg
movsb
rcrl
in
stc
pushf
or
xlat
push
je
out
push
in
push
mov
xor
loop
xchg
sub
xchg
es
xchg
arpl
cmpsb
ds
or
es
push
jecxz
mov
out
adc
ficomps
jae
jecxz
jnp
inc
ljmp
aam
and
mov
imul
cmpsb
mov
imulb
push
mov
xor
fisttpll
repnz
les
test
jp
xchg
cli
cmp
push
inc
mov
dec
xor
jge
xchg
mov
pusha
and
push
ret
into
cli
xchg
or
mov
in
push
lock
icebp
xor
cmp
xor
jmp
shll
ljmp
push
lods
xchg
push
sbb
icebp
sub
push
inc
or
pop
outsb
jb
cmp
int
or
inc
dec
ds
movsb
popf
mov
adc
jp
aam
shll
jb
adc
daa
roll
js
cwtl
imul
pop
pop
jno
push
neg
imul
test
pop
and
adc
jne
xchg
pop
mov
sbbb
lock
mov
cwtl
push
xchg
sub
push
roll
out
xchg
mov
jmp
je
insl
roll
hlt
and
out
mov
mov
lock
mov
and
inc
dec
stos
fdivrs
test
or
mov
shll
stc
xchg
adc
push
push
cmp
and
fiadds
arpl
adc
dec
mov
rcr
clc
into
movsl
inc
or
fidivl
js
jbe
cmpsl
cmp
repz
jg
test
sbb
xchg
dec
bound
int3
push
inc
int
std
test
jmp
cmp
and
xchg
jmp
sahf
arpl
inc
rolb
popa
pop
mov
sahf
cmp
adc
lds
sbb
and
stos
cmp
gs
jle
andb
jl
icebp
int3
jecxz
dec
pop
mov
or
jbe
sbb
cmp
ss
xor
ja
loop
push
xor
imul
xlat
jb
dec
scas
sub
dec
xchg
cld
iret
in
cmp
aam
mov
call
adcl
jns
ja
bound
scas
testl
mov
lahf
ss
stos
out
add
inc
inc
push
loopne
aam
ljmp
or
push
pop
jae
pushf
dec
int
sbb
andl
cmp
and
lcall
bound
lods
es
sbb
jg
mov
dec
add
mov
das
push
jmp
imul
sub
iret
cmp
repnz
in
mov
add
test
repnz
fmul
adc
lret
mov
cmp
adc
aaa
rcll
inc
lahf
and
insb
repz
imul
ja
cmpsl
jb
mov
pop
pop
ret
nop
imul
into
mov
xor
dec
das
or
arpl
mov
mov
and
cmp
insb
popa
and
add
repz
out
xchg
les
mov
imul
adc
test
sbb
sbb
cmp
cmp
push
je
adc
pop
insb
jo
pop
jne
mov
adc
call
hlt
fs
mov
sbb
cmp
mov
negl
xchg
cmp
icebp
jmp
mov
adc
and
cs
sub
adc
mov
sub
fistl
cmp
push
mov
dec
cli
loop
xchg
iret
sbb
jg
fdivrl
mov
sti
mov
sbb
movsl
and
ficomps
dec
inc
hlt
in
sub
lret
lods
inc
xchg
pop
cmp
inc
mov
cmpsb
arpl
or
jg
in
out
or
pop
inc
dec
jae
jmp
nop
test
fisttps
jo
xlat
and
push
push
mov
dec
sbb
mov
mov
fwait
pop
cmp
or
push
jmp
mov
mov
xchg
cmpsb
mov
enter
xchg
xor
xchg
in
push
dec
pop
xlat
jo
fsts
icebp
bound
or
add
cs
push
pusha
add
out
mov
shl
pusha
sbb
and
pop
daa
mov
xchg
xchg
popa
andb
andl
inc
push
dec
jmp
lea
ss
jl
roll
aam
xchg
mov
imul
repz
xchg
movsl
mov
mov
jle
popa
das
mov
mov
shlb
mov
insl
stos
shrl
mov
xchg
cmp
mov
pop
addl
inc
les
fnsave
in
inc
pushl
jne
push
lock
sbb
push
jnp
push
into
inc
xchg
push
adc
rol
sub
ret
dec
and
xchg
ja
jge
testb
out
cld
push
arpl
pop
xchg
pop
std
cltd
mov
mov
jnp
mov
les
sub
scas
sub
sub
inc
jmp
or
mov
lret
clc
pusha
sbb
stos
das
nop
shl
mov
femms
xchg
inc
sbb
push
jecxz
imul
rorb
ljmp
jmp
mov
ljmp
mov
icebp
mov
repnz
xor
movsb
add
lods
and
rorl
sub
lock
mov
push
clc
xlat
aam
out
add
sbb
adc
pushw
int3
movsb
stos
sti
sub
int
call
insl
pop
jp
rcrb
cmpsl
gs
lret
fisttpll
sti
pop
mov
push
push
imul
outsb
cmp
out
inc
movsl
mov
ja
das
mov
dec
xor
mov
xor
jo
add
dec
add
shrl
repnz
xchg
adc
or
xchg
std
sti
cmp
mov
cmc
xchg
clc
cmp
pop
jnp
sub
mov
bound
inc
jbe
and
out
sbb
mov
insl
ja
push
cmp
add
faddl
push
std
cs
mov
jb
test
sub
xor
rcrl
icebp
cli
pop
jno
ja
fnstcw
adc
and
mov
inc
jge
inc
mov
je
stos
mov
data16
xorb
sbb
fwait
or
xor
loop
out
jmp
addr16
mov
sbb
xor
jns
pop
fistl
add
mov
inc
xor
test
gs
nop
add
mov
push
sub
mov
dec
jns
inc
or
hlt
sbb
clc
lret
push
jl,pn
arpl
jl
dec
mov
lahf
inc
jmp
mov
mov
int3
jo
push
cmp
jne
in
adc
push
test
inc
cld
mov
fldcw
dec
shlb
dec
loop
xchg
movsl
outsb
dec
sarb
outsl
push
xor
xor
push
aas
shr
insb
add
shufps
mov
push
mov
mov
or
jg
aas
into
rorb
xor
in
test
xor
in
shrb
or
daa
rclb
fsubr
sbb
adc
mov
les
add
push
std
pop
push
pop
pusha
mov
lds
adc
add
ds
mov
stc
jbe
push
adc
xchg
popa
push
ja
cmpsl
outsb
loop
sahf
mov
repnz
push
pop
pop
xor
cltd
jecxz
cmpl
sub
pop
xor
sbb
int
out
cmp
cmp
lods
ss
mov
adc
out
imul
aad
adc
cmp
mov
jne
fldenv
loopne
lock
shl
adc
jle
es
js
pop
cmpsb
push
dec
mov
insl
call
jg
outsl
mov
mov
xor
mov
and
mov
shl
jle
scas
add
lods
int
subl
xor
dec
das
int3
nop
jmp
movsl
jne
dec
xlat
scas
sbb
cmp
and
mov
adc
adc
fists
dec
inc
call
outsl
mov
aas
pop
lods
cmp
xchg
inc
jp
arpl
push
xchg
fdivrs
mov
popa
inc
vrcpss
test
aad
test
sub
jae
clc
out
xor
arpl
pop
jp
cwtl
push
mov
imul
dec
fadd
cmpl
call
adcl
loope
pop
clc
lock
adc
lcall
addb
in
inc
outsb
sbb
iret
in
hlt
leave
cli
imul
sub
jmp
xor
or
add
iret
fdecstp
test
push
das
mov
out
imul
dec
loop
sub
push
out
loopne
in
inc
imulb
inc
icebp
dec
mov
lret
ljmp
repz
aas
cvtps2pi
pop
or
ja
sub
adc
dec
mov
fcomi
push
das
dec
imul
sub
mov
and
aam
pop
fscale
loop
cmp
lcall
scas
daa
jnp
xor
dec
cwtl
mov
addr16
cwtl
and
and
push
lret
jmp
jbe
mov
jbe,pn
pop
or
adc
mov
rolb
test
cld
gs
jge
pushf
lret
shlb
lahf
jge
std
fisttps
jl
sbb
test
mov
lds
dec
dec
mov
xchg
dec
faddl
cli
add
mull
jbe
mov
stc
sub
daa
stos
fwait
sahf
adc
je
push
jmp
call
adc
ljmp
push
inc
sbb
loope
into
pop
sbbb
fbld
outsb
pop
test
fsubs
xchg
test
mov
jmp
add
out
inc
test
mov
xchg
push
aam
mov
into
int3
xchg
sbb
lods
cmpsb
or
mov
inc
push
pop
dec
sbb
xor
lea
push
xchg
xchg
cmpb
repnz
inc
add
rcr
xor
jnp
loopne
pop
popf
out
in
icebp
fmull
fisubrl
cmc
fsubs
dec
fidivl
mov
mov
add
xchg
sub
cmp
cwtl
aaa
in
push
jecxz
push
inc
push
add
loop
test
jge
fsubrs
stos
push
push
pop
push
sbb
cld
pop
clc
cmpsl
or
inc
in
mov
push
jge
sbb
mov
rclb
and
nop
test
roll
dec
cmp
in
ljmp
je
test
enter
adc
xchg
inc
stos
cmp
or
xchg
out
mov
fistps
in
xchg
sbb
je
dec
push
jne
hlt
rorl
test
movsl
mov
dec
sbb
and
out
dec
xchg
in
jecxz
or
mov
test
ljmp
add
popl
or
jecxz
and
or
pop
pop
cld
jl
pop
push
or
pop
adc
xchg
jno
and
sub
inc
sub
aad
dec
cmp
scas
mov
imul
xor
mov
in
mov
rol
cwtl
addr16
vprotb
or
push
dec
add
fcomps
sbb
test
mov
hlt
fsts
daa
jo
sarb
scas
insl
popf
fidivrl
je
outsb
movsl
lds
xor
popf
fs
mov
mov
xor
mov
hlt
jmp
jmp
out
push
or
orb
push
mov
xor
or
mov
and
rol
or
fadd
xor
sbb
cwtl
rcl
sub
ds
in
aam
popf
jae
inc
mov
out
lret
test
lock
mov
orl
repz
or
adc
dec
ficoms
jae
sbb
mov
xchg
dec
test
lcall
push
lcall
pop
mov
clc
push
negl
jl
std
dec
xlat
cld
or
cmp
stos
xchg
movsb
ja
test
push
jbe
jo
mov
lods
push
push
adc
push
shr
add
pop
lock
not
in
add
mulb
xor
in
lcall
add
std
lock
sbb
loope
lods
je
scas
nop
adc
xor
mov
sbb
sub
ret
mov
pop
shl
sub
lods
daa
loope
cmp
mov
pop
inc
xor
xor
xlat
stc
js
sbb
in
add
jl
in
mov
sub
pop
test
stos
push
ror
repz
mov
xor
and
into
mov
jnp
pushl
pop
fwait
push
lahf
and
xlat
sub
jle
nop
add
out
lea
aad
pop
nop
adc
dec
nop
sti
ljmp
test
je
adc
mov
mov
subl
mull
jns
arpl
mov
mov
push
inc
shll
outsb
pop
dec
xor
pop
notl
divl
dec
sbb
movb
rcl
sbb
sbb
bound
push
push
ret
fcoml
pop
loop
mov
jae
push
gs
push
repnz
stos
push
movsb
adc
aaa
cmp
mov
add
test
int3
adc
add
call
sub
xchg
das
jl
call
scas
das
add
fwait
push
shr
cmp
xor
push
loope
rolb
add
loopne
or
jb
mov
loop
int3
jecxz
pop
xor
mov
sub
xchg
pop
jne
mov
add
or
loopne
dec
xchg
std
sbb
jp
inc
movsl
in
mov
mov
fists
jno
fsubrs
out
pop
fmul
popa
pop
add
stc
pop
jb
ret
jns
fisubl
mov
mov
lock
icebp
out
push
pop
mov
add
mov
fsubrl
ljmp
mov
andb
cmp
cmc
xor
pop
fwait
aad
jno
and
cli
mov
mov
shl
inc
mov
or
loopne
imul
lea
xorb
test
add
lahf
test
scas
nop
inc
cmp
nop
pop
mov
ss
jmp
sahf
add
popf
lea
lds
addw
cmc
andl
mov
sub
cwtl
pop
push
fwait
es
or
cmc
xchg
jp
fldenv
das
push
out
je
out
les
clc
filds
dec
pop
out
ror
stc
adc
push
aam
pop
dec
cli
scas
lock
xor
cmp
xchg
cmpsb
pusha
add
stc
mov
out
mov
and
ds
aas
sbb
loop
std
pushf
push
add
std
cmc
cli
or
mov
sbb
ljmp
dec
lret
push
imulw
fldt
into
add
pop
leave
jmp
xchg
pop
jb
scas
pop
fst
or
mov
pop
mov
mov
aas
ljmp
xchg
mov
aaa
dec
mov
popf
jne
and
dec
in
sub
mov
push
scas
nop
adc
popl
xchg
mov
jmp
xchg
lret
sub
fsubp
js
ja
push
sbb
adc
push
cmp
and
push
adc
ds
mov
shlb
jecxz
mov
cmp
outsl
mov
dec
mov
bound
sub
sub
ljmp
cmp
or
hlt
les
adc
insb
mov
ds
add
fyl2xp1
cmp
shlb
xchg
roll
push
fidivl
xor
loopne
loope
in
mov
push
loopne
fmulp
sbb
scas
mov
or
cmpsl
push
addl
cmp
mov
shlb
pop
xlat
and
lods
dec
lahf
or
cmp
enter
ret
imul
push
lahf
jg
or
lods
dec
dec
mov
sub
rcrl
sub
int
test
addr16
test
mov
ficomps
imul
or
fwait
adc
fs
adc
inc
dec
mov
fnstcw
lahf
test
sub
cs
xchg
jbe
pop
jno
loop
pop
cli
insb
stc
xchg
data16
lock
movsl
jmp
pop
inc
repz
adc
push
aaa
jno
cli
js
xchg
dec
adc
adc
or
add
sub
gs
mov
mov
insl
dec
mov
aas
xchg
call
fcompl
pop
inc
mov
call
and
jecxz
jecxz
pop
sub
adc
inc
and
add
pushf
or
testb
mov
inc
lret
mov
or
mov
cmp
jl
xchg
mov
adc
xor
lret
stc
pop
or
out
cmp
xlat
add
push
and
xchg
mov
insl
lret
xchg
decl
or
adc
repnz
es
mov
jmp
push
xor
inc
loopne
add
push
jle
mov
push
adc
clc
and
jae
mov
pop
mov
leave
push
inc
in
mov
test
push
mov
mov
xlat
mov
andb
jno
mov
jge
addr16
jae
js
jnp
arpl
mov
outsl
scas
sub
aas
cmp
call
ficomps
fimull
mov
cmpsl
adc
mov
ret
lcall
jb
fisttpll
loope
cmp
mov
jp
cmp
popf
mov
imul
sbb
add
and
add
push
mov
cld
push
outsb
stos
push
cltd
inc
mov
jne
jnp
fucomi
fsqrt
and
in
push
divl
sar
inc
in
movsb
lcall
stos
gs
inc
and
or
inc
adc
rclb
mov
inc
or
pop
fs
ficoml
adc
mov
lea
std
jae
adc
xchg
ficoml
popf
iret
fwait
lds
repz
test
jmp
or
pop
cltd
mov
add
testl
in
push
and
push
push
adc
mov
ret
mov
outsl
insb
jge
inc
test
inc
jle
outsb
out
jmp
mov
sahf
stos
loopne
mov
jl
lods
daa
cmp
test
pop
mov
sbb
push
mov
push
es
jmp
out
and
test
xor
mov
std
or
jmp
insl
fisttpl
mov
pop
les
push
repnz
daa
and
xlat
loope
jle
fwait
adc
push
add
push
sarl
seto
sub
pushf
xlat
mov
xor
int3
add
repz
testl
pop
out
jle
mov
add
adc
add
dec
push
ret
mov
inc
sti
pop
mov
jne
sbb
pop
pop
data16
fiaddl
pop
cmp
jmp
push
jne
cmp
pop
sub
mov
dec
sahf
ret
mov
dec
in
lods
rorl
mov
push
cli
or
xchg
pop
push
inc
lock
lock
mov
mov
sub
jmp
or
push
rcll
imul
ljmp
inc
mov
movsl
in
jg
cmc
sbbl
inc
mov
pop
in
out
popf
xor
mov
mov
and
push
imul
shrb
cmpsl
icebp
mov
jl
scas
push
and
sub
xchg
call
shl
pop
mov
fdivs
pop
lahf
repz
int3
loop
cld
pop
fiadds
cs
out
mov
cli
push
cmp
int3
ret
mov
xchg
pop
push
mov
pop
mov
push
push
outsl
lret
lcall
jnp
daa
lahf
sahf
lea
mov
add
jle
fidivs
out
mov
jl
imul
into
int3
gs
mov
cmp
pop
rclb
ja
icebp
xlat
faddl
fidivs
clc
sbb
mov
mov
push
std
mov
rcl
ret
loope
ror
movsb
inc
push
popa
adc
cmpsb
popf
popf
cmp
jg
mov
les
dec
sub
leave
add
xchg
cmpsb
dec
fiaddl
mov
mov
mov
adc
push
inc
jb
fmull
das
adcb
dec
jns
push
jge
test
ret
jbe
ret
mov
push
enter
popa
into
push
mov
mov
loop
and
mov
repnz
push
adc
adc
jne
mov
fs
lods
outsl
fnstenv
cmc
push
or
imul
test
cmp
in
int3
pop
clc
and
sub
cld
adc
imul
mov
nop
xchg
enter
sahf
addr16
or
push
int3
add
mov
mov
clc
rorl
mov
in
push
movb
or
loope
mov
inc
fwait
stos
ds
insl
cwtl
adc
fwait
pop
add
sbb
pushf
mov
pop
sub
add
stos
push
test
pop
gs
lock
cmp
fisubrs
mov
push
inc
out
fs
xchg
ljmp
rorl
stc
jp
dec
lock
pop
je
jp
shll
lock
std
push
out
jb
shrb
rcl
push
into
push
mov
inc
mov
pop
pop
pop
call
jae
or
lock
cmp
xorb
in
in
scas
shlb
and
and
sub
scas
adc
pop
xor
outsb
cs
int3
mov
sbb
pop
hlt
lea
push
shlb
js
or
jnp
cmp
pushf
jmp
xor
cltd
fnstcw
xor
dec
mov
pop
inc
nop
movsb
xchg
insl
xchg
pop
gs
dec
cmpsb
test
ret
xchg
jmp
add
flds
xor
lret
pushf
leave
aad
add
pop
ljmp
loop
stc
ljmp
out
cmp
lock
sbb
jmp
repz
es
ds
or
outsl
pop
mov
movsl
adc
or
push
xchg
movsl
addr16
and
movsl
pop
sbb
push
leave
xor
or
push
push
fisubs
jmp
jnp
out
aam
icebp
stos
add
aam
aam
inc
push
ljmp
mov
movsl
pop
cmp
aas
jbe
push
ret
adc
clc
cmpsl
xchg
add
sbb
jmp
out
lcall
adc
lods
push
mov
test
fwait
pusha
in
inc
xor
dec
call
xchg
sbb
and
mov
fwait
push
adc
es
ret
push
push
xor
adc
jl
fbstp
iret
scas
xchg
rclb
jecxz
cmpsl
lret
scas
das
mov
inc
popf
sahf
jp
mov
test
dec
cmp
xor
lret
mov
jne
insl
push
fst
mov
xchg
inc
dec
and
insb
inc
pop
adc
addl
mov
imul
push
dec
shrl
enter
add
lods
aaa
popf
jp
adc
enter
pop
fidivrs
add
jb
faddp
dec
outsb
daa
aam
inc
enter
sbb
fldt
mov
pop
out
lods
push
adc
outsb
cwtl
jno
xor
mov
ficompl
or
sbb
int3
mov
pop
add
in
das
rcr
or
mov
add
mov
pop
push
cmp
add
xchg
scas
cmpsl
mov
mov
sahf
pusha
lahf
rclb
add
push
jb
mov
xchg
jmp
jno
push
bound
cmpsl
pop
pop
push
push
test
cmc
pop
pop
and
xchg
ret
sbb
fidivs
sti
pop
sub
push
inc
jae
cmp
scas
jl
pop
bound
pushf
jne
cltd
sub
int3
movsl
pop
add
fdivr
rclb
fs
cmpsl
pop
shrl
cmp
mov
inc
cmp
dec
outsb
xor
out
sbb
dec
dec
aaa
cwtl
test
xchg
mov
pop
fsts
fs
sbb
insl
pop
lahf
test
int
add
pop
or
stc
jne
push
inc
fisubl
sbb
ja
fiaddl
addl
ljmp
pusha
icebp
mov
push
push
fidivs
fcompl
add
pop
cld
js
cmp
or
lea
fs
and
xlat
loop
jb
dec
push
xchg
dec
faddl
mov
sbbl
call
add
out
pushf
jmp
pop
repz
das
cmp
dec
xchg
mov
frstor
int3
mov
push
push
xchg
pop
mov
adc
inc
not
pop
sarl
sbb
addr16
loop
insb
xlat
push
mov
ret
roll
test
inc
bound
adc
and
cli
pusha
shll
ljmp
testl
fdivrp
mov
in
add
xor
jl
add
push
ljmp
push
in
adc
mov
aas
lahf
and
xlat
jae
and
and
mov
ja,pn
aas
sub
lahf
lret
push
shll
aaa
adc
pop
cld
mov
out
decb
lods
adc
in
sbb
dec
push
jle
dec
fadd
add
adc
mov
fwait
dec
mov
fsts
push
xchg
int
into
push
leave
pusha
cli
lea
pop
cmp
xchg
ret
inc
stos
fsubrs
add
push
repz
add
mov
jo
jp
ds
inc
mov
dec
lods
test
pusha
xorl
aad
lcall
push
jle
shrb
lock
xor
xchg
dec
sub
ja
and
in
dec
fstps
aam
xlat
mov
hlt
sbb
jno
clc
pushl
jbe
aam
stos
cmp
pop
rorb
das
adc
adc
popf
dec
or
mov
into
mov
dec
inc
int3
insb
mov
fisttpll
jbe
or
lahf
out
cmp
pop
imul
rcll
sarl
add
mov
addr16
sub
push
inc
mov
pop
in
scas
ret
sahf
out
sbb
adc
stc
out
xchg
out
je
mov
add
fwait
mov
jp
jnp
int
js
aaa
add
fwait
out
and
cmp
mov
js
into
les
pop
daa
cmp
xchg
lahf
ds
mov
sbb
xchg
xor
out
jmp
arpl
mov
pop
mov
push
hlt
icebp
call
xchg
mov
cwtl
mov
push
sbb
add
inc
xor
repz
bound
mov
push
xor
fmull
outsl
rclb
in
clc
gs
pop
sub
insb
dec
jp
dec
int
cwtl
imul
lods
push
pop
sahf
inc
and
mov
stos
adc
xchg
cmp
fmull
push
gs
inc
pop
push
adc
outsb
fiadds
jp
loope
ficoml
adc
mov
lahf
inc
js
sbb
in
pop
push
mov
xchg
loope
adcb
iret
xor
sub
int
scas
jp
and
fmuls
out
mov
add
fldt
movsb
xchg
rcrb
mov
jb
jae
jl
lock
je
repz
fwait
daa
sbb
test
fwait
lahf
jp
pop
dec
ret
pop
jecxz
clc
rcl
push
sbb
mov
and
xchg
ret
mov
gs
sbb
adc
and
mov
out
adc
insb
insb
pop
aaa
xorb
mov
xor
into
pushf
jp
outsb
icebp
push
sbb
push
xchg
movsb
cmp
add
cmp
cmpsb
rorb
xlat
movsb
pop
inc
mov
stos
push
in
test
add
dec
sub
loope
adc
pop
inc
mov
dec
jmp
mov
xchg
fcomps
jae
call
stos
pop
pusha
inc
imul
test
punpckhbw
sub
inc
fisubrl
mov
mov
mov
cmp
inc
fucomip
sbb
mov
or
test
push
out
popf
xchg
fsubr
jb
adc
and
push
and
sahf
fcompl
movsl
aaa
and
fists
lds
mov
dec
leave
outsl
adc
mov
fcoml
and
mov
and
pop
out
cs
and
push
pop
dec
jno
jg
ja
cmpps
fincstp
in
push
cmp
daa
js
hlt
pop
rclb
mov
imul
adc
cmp
cs
subl
sahf
scas
mov
sti
aad
outsl
mov
stos
push
inc
rcl
push
dec
filds
pop
mov
cmp
mov
icebp
mov
pop
sbb
xchg
mov
sub
dec
push
ret
push
test
gs
xchg
jl
push
out
in
icebp
adc
sub
add
in
adc
inc
in
mov
int3
addr16
repz
cmp
cs
dec
dec
dec
rolb
jg
test
fdivrs
pop
pop
mov
inc
js
shrb
lcall
rcll
adc
jbe
cli
dec
xor
rcr
aas
jle
inc
test
stos
lret
pushf
jo
sub
cmp
nop
xchg
xchg
rcll
movsb
xchg
adc
dec
js
inc
dec
mov
adc
add
sub
js
sub
arpl
lods
aad
push
pusha
mov
sti
jbe
in
addr16
xchg
fcmovnbe
mov
fwait
xchg
andb
cmpsb
mov
adc
aaa
aad
adc
cmp
cmp
test
mov
daa
inc
push
ljmp
pusha
ja
hlt
push
adc
rcrb
and
mov
xor
sbb
push
lods
cmpsl
fisubrl
jae
insb
mov
aam
jo
shrl
xchg
jns
int3
jbe
test
cmp
data16
jl
push
or
ja
mov
or
or
jo
sahf
dec
div
pop
das
imul
cmpsb
cmp
xchg
push
mov
sub
movsl
lret
add
inc
sbbl
mov
and
lock
rol
push
pushf
inc
in
xchg
stc
ror
lret
rclb
shrl
cmpsb
fs
ljmp
cmp
adc
mov
inc
xchg
cltd
out
or
dec
adc
dec
xor
test
sub
xor
sbb
push
bound
std
lret
mov
sbb
xlat
int3
mov
outsb
fucomi
and
lods
out
jo
or
lret
add
xor
loope
bound
and
cmp
xor
hlt
mov
rorl
test
data16
jmp
hlt
dec
mov
push
in
or
xor
lea
and
xor
push
push
int
pop
ss
push
insb
aam
shll
andl
data16
loop
popa
mov
push
andb
and
jg
popl
xor
lret
push
in
inc
nop
jnp
aas
add
xor
je
in
mov
int3
mov
cmpsl
icebp
lock
add
shrl
or
notl
ror
push
ret
jg
ret
push
mov
jae
fdivp
ds
pop
lcall
adc
fisttpll
ret
stc
xor
sbb
and
inc
cmc
cmc
pushl
mov
lahf
fmull
lcall
icebp
mov
xchg
daa
pushf
imul
loopne
xor
inc
adc
dec
stc
test
add
add
jle
subl
clc
cmc
cs
cmp
inc
movsb
lcall
sub
lahf
aas
sub
cs
jmp
or
js
cmovp
xchg
loop
cmp
scas
cli
cmp
add
stos
jp
pop
sub
mov
leave
ret
xchg
jae
xchg
rcrb
in
scas
jae
loopne
in
mov
adc
pushf
sbb
push
cmp
add
loope
sti
insl
push
repnz
lcall
mov
ret
stos
imul
jne
sbb
sbb
sbb
push
fcoms
xor
adc
fadds
xchg
sub
pop
dec
nop
filds
jmp
out
loope
adc
cltd
je
cmp
inc
mov
cmp
gs
in
xor
js
or
ror
cmp
jb
out
movb
fldt
imul
sub
and
sub
fldlg2
gs
inc
mov
lea
lcall
push
dec
outsb
jmp
xchg
or
mov
cmp
test
pop
sub
sahf
adc
pop
mov
fwait
adc
out
and
lahf
and
fwait
cmp
inc
dec
ja
jno
aam
pop
lods
icebp
aam
imul
mov
shrb
jb
hlt
dec
roll
or
mov
xor
popa
inc
push
movsb
lret
insb
clc
fldcw
push
push
jmp
pop
dec
arpl
cmpsb
mov
fldenv
or
mov
mov
mov
outsl
leave
out
pusha
cltd
mov
rcrb
xchg
pop
inc
inc
xchg
xchg
fidivrl
inc
ja
xor
push
jnp
sbb
lret
mov
adc
dec
pop
mov
jecxz
jne
sti
sti
rcr
mov
insl
cmp
xchg
mov
mov
xor
inc
adc
js
dec
inc
frndint
xor
das
fs
ja
stos
mov
cld
iret
mov
outsl
mov
mov
mov
cld
shll
jmp
js,pn
sub
test
out
xor
outsl
leave
jp
jmp
mov
and
mov
cs
mov
and
daa
fidivs
xchg
jecxz
adc
popa
arpl
fdivrs
push
xor
dec
js
or
outsb
testl
inc
cmp
fnstenv
sub
cmp
add
xor
jns
xchg
cmpsb
test
push
test
adc
dec
xchg
adc
cwtl
jae
push
ds
and
and
in
and
push
jo
inc
jmp
xchg
push
into
sbb
fs
loop
ret
jb
xchg
push
call
mov
push
lahf
cld
xchg
mov
push
or
andb
shll
xchg
repnz
gs
subl
xor
out
jb
mov
pop
dec
loop
pop
dec
cwtl
dec
mov
push
aad
cltd
fcomip
or
dec
sbb
cmp
aaa
pop
fs
sbb
add
jno
das
ficoms
insl
adc
js
rcrb
inc
dec
inc
cmovle
aaa
cld
adc
in
xor
add
cmp
in
pusha
and
lret
mov
test
cmpsl
lcall
enterw
pop
mov
jns
sub
add
sbb
std
sub
jns
pop
cmp
mov
mov
push
inc
stos
in
lret
std
out
fstpt
sbb
xlat
daa
add
scas
sub
pop
out
ds
xlat
pop
mov
push
jns
pop
mov
adc
xchg
mov
adc
scas
xor
pusha
mov
sarl
jmp
mov
inc
and
mov
ljmp
psrad
dec
icebp
xor
les
lock
sti
test
sbb
or
dec
adcb
mov
mov
in
ljmp
jbe
mov
mov
outsl
lcall
or
mov
push
fldcw
adc
movsb
xchg
fdivrl
sub
dec
fsts
dec
mov
and
neg
adc
mov
daa
sar
pop
insl
out
pusha
repnz
adc
fidivs
or
cli
rorl
inc
and
push
jae
push
push
addr16
mov
out
adc
data16
push
lds
xor
rol
jo
sbb
or
ficompl
adc
loope
dec
mov
insb
xor
sub
sub
nop
out
xor
xorb
sub
loop
stc
int
es
xchg
jle
lock
sbb
push
xchg
cmpsl
std
in
mov
inc
mov
out
push
shlb
cli
cmp
hlt
mov
cld
cmp
fcomps
and
add
xchg
mov
daa
mov
movl
shrb
nop
sti
mov
inc
mov
or
movsb
imull
sbb
cmp
sub
xchg
push
stos
adc
jg
lds
mov
xor
adc
fwait
adc
mov
xlat
sbb
in
xchg
inc
ds
pop
nop
xor
jae
mov
pop
in
imul
jg
test
xchg
push
xchg
mov
lods
xor
ss
roll
mov
fimuls
lret
push
fsubr
xchg
push
jl
les
jge
cmc
dec
push
push
jo
or
xchg
push
dec
cmpsl
dec
leave
test
testb
into
pop
ret
into
mov
xor
dec
lds
inc
pop
data16
ss
scas
ljmp
ja
mov
and
jmp
cltd
adc
jbe
and
lcall
les
mov
and
inc
mov
int
dec
xor
stos
mov
adc
xor
fistps
pop
add
stos
test
push
data16
mov
enter
sub
das
mov
push
dec
mov
jbe
imul
out
and
jge
xor
pop
pop
fistpll
js
sbb
sbb
clc
mov
sub
lret
fmull
sbb
outsl
or
add
int
in
loopne
leave
or
xchg
insl
sti
fmull
in
outsb
mov
pop
push
sbb
subb
sbb
neg
aas
jl
inc
push
push
bound
test
mov
pop
inc
dec
sti
xchg
mov
xor
call
mov
fsubrl
rcrb
lods
cmp
xchg
std
mov
call
insl
pop
in
lcall
out
ja
mov
push
xchg
dec
inc
adc
call
imul
scas
xchg
push
xchg
pop
sbb
pop
test
cltd
mov
inc
decb
aad
movb
rolb
mov
out
sbb
mov
push
jg
fisubl
xchg
or
fwait
mov
cmc
pop
adc
das
ret
ret
scas
dec
nop
stos
xchg
loop
mov
cwtl
aaa
les
or
and
and
adc
paddusb
xor
imul
scas
test
fidivrl
fidivrl
xchg
dec
push
aam
dec
cmp
out
dec
call
dec
dec
ljmp
cmpl
into
jp
shl
xchg
adc
mov
mov
and
dec
das
ja
es
or
inc
pop
iret
test
cmp
add
push
rcrb
clc
or
push
and
sub
add
xchg
orl
push
mov
sti
lods
jbe
or
scas
xchg
pop
jge
push
xchg
xor
mov
decb
pop
bnd
cwtl
mov
xchg
sub
or
ficoml
ret
inc
div
inc
xchg
or
shlb
es
xor
adc
mov
jno
scas
xor
es
sub
stos
add
outsb
movsb
inc
scas
lods
jp
push
int
pop
xlat
mov
push
pop
dec
push
push
or
mov
loopne
cwtl
adc
les
inc
mov
xchg
sbb
movsb
test
push
shll
lea
cld
sbb
cmovnp
je
loopne
lret
push
fwait
and
jg
cli
bnd
cmp
cmp
sbb
insb
scas
popa
mov
mov
jge
xlat
into
in
in
xor
scas
cs
xchg
pop
or
xor
jae
stos
mov
adc
mov
lret
shlb
and
jg
cmp
and
xchg
cli
imul
mov
dec
or
outsb
stc
dec
es
cmpsb
dec
sbb
dec
mov
add
mov
fwait
shrl
jnp
jno
cmp
ja
xchg
out
pushf
aad
adc
mov
jno
mov
aas
push
imul
inc
mov
je
sarb
and
jg
or
add
jne
pop
xchg
mov
mov
je
lock
nop
sub
add
pop
adc
pop
cmp
push
mov
and
movsb
add
loope
sub
xor
xor
pop
or
push
adc
jns
fs
jbe
mov
test
sbb
xor
movsb
xchg
push
dec
int3
push
insl
xchg
cmp
xor
scas
fistpl
cmp
mov
or
and
cmc
sti
cltd
xor
jo
fisubs
push
dec
lcall
iret
cmp
or
in
dec
out
push
push
jo
les
popa
mov
jmp
pop
cli
xchg
cwtl
xchg
add
ja
enter
fildll
sub
rolb
or
mov
dec
test
dec
adc
adcl
or
cwtl
xchg
pop
repnz
sbb
call
pop
test
cmp
inc
push
shl
sub
mov
mov
or
pop
pop
test
fdivs
stc
sub
filds
dec
pop
add
add
inc
gs
leave
mov
push
testl
or
sbbl
or
and
dec
cmp
shrb
jmp
insb
enter
mov
jmp
les
cs
lahf
pusha
in
enter
push
arpl
mov
pop
sbb
or
dec
xor
nop
mov
lods
mov
sbb
xor
pop
leave
mov
cltd
mov
das
fnsave
mov
shl
mov
cmp
add
adc
test
iret
shrl
idivb
jp
adc
push
shl
js
jmp
xor
paddusb
add
mov
lcall
mov
pop
loop
adc
mov
fcoms
lods
adc
adc
add
movsb
push
cmc
and
and
cmp
inc
push
push
mov
mov
and
jg
push
shlb
sbb
pusha
cmp
and
stos
daa
fldt
lret
data16
and
sarb
or
adc
int3
jo
fs
add
outsl
push
jbe
xchg
in
ss
jns
fcompl
outsb
push
in
pop
dec
add
dec
jns
xchg
or
xor
loop
mov
xor
push
mov
insb
mov
imul
push
insl
jne
ss
adc
adc
jne
inc
pop
mov
fstps
push
cld
jae
push
sub
and
dec
mov
cmp
or
gs
jl
push
lods
sub
cmp
xlat
add
sahf
enter
pushf
pop
jl
lock
sub
iret
push
jge
push
xchg
push
nop
adc
cmp
aas
sbb
jbe
les
out
jg
xchg
sub
mov
stc
cmp
cmp
push
xchg
cltd
pusha
lock
pop
push
adc
cmp
pop
call
fs
ljmp
lea
loopne
int3
sbb
ret
test
subl
add
in
ds
ss
xchg
inc
in
jle
push
clc
fwait
sbb
imul
and
sub
rorl
pop
push
xchg
scas
pusha
cmp
mov
jl
popa
in
xor
mov
sti
fistl
dec
inc
lret
mov
test
sub
adcl
mov
adc
adc
add
inc
test
sti
push
and
pop
adc
fnsave
lds
ficoms
in
fxch
rorb
jl
mov
pop
iret
dec
scas
cli
cld
push
add
sarb
xchg
dec
adc
rep
cmpsl
xchg
push
fwait
and
dec
cld
cli
xchg
sbb
adc
int3
and
jle
adc
dec
jb
rcrl
aas
mov
mov
enter
xchg
xchg
mov
in
out
add
pushf
or
cmp
fbld
inc
icebp
lret
sbb
jp
pusha
add
sahf
in
jge
arpl
std
sub
mov
xor
push
sbb
decb
xor
or
ja
xchg
sbb
in
das
pop
xor
adcl
js
movsl
dec
sub
aad
adc
mov
or
mov
ss
test
push
ss
xor
push
pop
pop
xor
not
or
lods
mov
shr
mov
and
insl
mov
inc
inc
adc
push
mov
call
cltd
fnstsw
mov
lret
lret
test
std
inc
mov
push
dec
jnp
shrb
mov
loope
rorl
adc
ja
fcmovnu
lea
inc
dec
mov
sub
push
cmp
adc
ljmp
mov
adc
xor
mov
push
adc
dec
ss
sahf
xor
movsb
push
je
mov
enter
ret
stos
and
je
mov
cmpsl
sub
dec
mov
mov
pop
movsb
fcomp
sahf
inc
push
stos
aam
gs
mov
outsb
cs
adc
and
push
nop
rorb
das
push
xchg
adc
bound
scas
cltd
mov
cwtl
add
adc
ret
rclb
push
scas
xchg
xchg
fisubrs
and
jl
add
and
mov
adc
mov
in
rcrl
sbbb
stos
mov
inc
mov
sbb
push
push
xor
movsl
jo
dec
push
adc
push
dec
mov
xor
add
movsb
cmpsb
cld
cli
xor
out
stc
lret
adc
mov
ljmp
lods
xchg
jmp
fidivrs
cmp
jns
jne
mov
leave
pop
mov
les
out
pop
dec
stos
popa
add
inc
mov
aad
lock
movsl
loopne
cmpsb
sub
xor
mov
mov
sbb
imul
sbb
test
mov
adc
xor
into
jb
fsubs
or
shrb
call
out
popf
sub
or
stc
xor
xchg
gs
mov
add
pop
dec
dec
sub
shlb
inc
pop
sub
addr16
aad
mov
add
jle
test
cmp
inc
xor
std
ds
in
movd
rcll
and
jge
inc
add
cltd
adc
cmpsb
push
cmc
repnz
mov
dec
fsubrl
or
lret
fmuls
sub
xchg
mov
pop
jmp
call
stos
fidivrs
or
push
sti
lcall
or
push
inc
jne
mov
imul
sub
mov
inc
cli
popf
fs
add
clc
push
push
inc
dec
int3
ds
mov
lods
inc
mov
repnz
pop
loope
fdivl
enter
fisttpl
ja
std
dec
xchg
test
pop
push
shr
add
mov
mov
mov
in
push
or
add
jmp
ror
popa
pusha
sbb
in
out
loop
sbb
add
inc
ret
mov
lods
or
xchg
int3
cmp
imul
insb
and
inc
pop
mov
notl
sub
lods
sbb
int3
jno
cmp
pop
jo
fcoml
cmp
mov
dec
ds
rcrb
xor
mov
mov
inc
mov
sbb
int
xchg
mov
lods
lret
stc
xchg
cmp
and
xchg
sbb
mov
add
cmp
stos
sub
jns
cmp
or
mov
incb
mov
mov
int
xchg
jnp
mov
mov
add
pop
sub
push
rclb
sbb
test
ja
adc
mov
mov
in
repnz
jnp
push
rcll
lahf
push
pop
and
out
repz
popf
rorb
lret
movsl
or
cli
sub
cmp
mov
lcall
mov
daa
xor
test
push
mov
mov
filds
lea
sub
mov
sahf
jne
cmp
pop
mov
mov
cmp
cmp
imul
cli
xchg
adc
or
cli
lods
dec
arpl
insb
frstor
and
xchg
sar
jne
loop
popf
iret
iret
push
fsubr
mov
push
mov
ret
outsl
mov
add
or
jecxz
dec
xchg
in
jl
decb
jno
jl
lcall
pusha
adc
std
push
push
js
out
movsb
test
gs
sti
xchg
loope
mov
sarl
addr16
in
sbb
nop
loop
in
cmp
adc
mov
pop
sub
jno
xchg
cmpsl
xchg
or
mov
cmp
and
jbe
pop
mov
push
mov
fldln2
mul
in
out
icebp
outsb
pop
mov
bound
sahf
sub
adc
bswap
jne
js
in
cltd
cmp
addr16
cmp
call
xor
into
pop
mov
mov
adc
sbb
out
adc
iret
cmp
add
mov
stos
mov
mov
shrl
sbb
jg
pusha
in
mov
rorb
in
addb
xlat
ljmp
cmpsb
test
jecxz
mov
dec
xchg
mov
cltd
pop
cmc
lock
stc
pop
and
icebp
push
push
les
jbe
adc
xchg
aaa
mov
cmp
repz
test
fistps
ljmp
adc
mov
cmpsb
addb
shll
xchg
mov
jb,pt
imul
and
jns
arpl
test
call
cli
add
push
lret
iret
je
sbb
pop
jmp
add
jge
pop
mov
cs
rol
dec
adc
inc
xor
rorl
add
cltd
or
xchg
mov
int3
cmp
adc
mov
mov
dec
sub
popa
mov
dec
xchg
sbb
adc
inc
bound
movsb
fistpl
xor
scas
maskmovq
imull
dec
movsb
cld
sbb
xchg
pop
fwait
xchg
push
testb
sbbl
enter
push
loopne
add
jecxz
ucomiss
inc
mov
mov
fnstcw
shlb
scas
inc
sbbb
dec
test
xor
std
jl
or
sbb
jge
cmp
aas
in
daa
aad
or
subl
adc
lret
jp
lea
pop
xor
pop
lret
push
jle
xchg
les
popf
imul
pop
pop
incb
orl
lret
sbb
test
cmpsl
push
int
icebp
and
orl
ljmp
push
xchg
sbb
adc
cmp
bnd
out
push
out
mov
dec
bound
inc
js
sbb
sub
mov
xchg
or
xchg
mov
ljmp
out
cwtl
fwait
fwait
cmp
lcall
fwait
inc
lock
rol
test
jp
dec
push
fnsave
sub
hlt
fdivr
cmp
aas
jl
dec
xchg
dec
ljmp
loopne
mov
cmp
dec
repnz
mov
insb
int3
pop
xchg
lahf
repnz
inc
dec
jns
push
lds
int
mov
push
arpl
stos
pusha
pop
jl
mov
adc
inc
jl
aaa
lds
fcmovnbe
ja
pop
test
mov
testl
push
sbb
dec
loop
clc
test
and
fisubrl
fwait
adc
repnz
into
sbb
test
cli
in
scas
in
xor
shll
mov
mov
xchg
scas
push
sub
popa
pop
mov
fwait
jno
mov
dec
gs
ss
mov
cmp
dec
cld
adc
pop
in
aaa
push
inc
inc
cmpsb
nop
sbb
movsb
out
push
pop
sbb
adc
mov
lods
rcrb
and
cmp
rcrb
cmp
das
mov
jns
pop
jae
rorl
pop
mov
push
negl
repz
adc
in
cmp
and
mov
stos
sbb
mov
lods
xchg
sbb
cs
push
lds
ds
cld
fs
push
stc
ja
fwait
dec
push
jle
cmc
cmpb
mov
jmp
aad
mov
cmc
inc
jle
xchg
aam
test
fadd
mov
inc
pop
push
repnz
jle
xchg
cmp
fs
mov
aam
shlb
push
mov
xchg
xorb
jno
push
fadd
rcrl
sbb
push
aad
pop
aas
cltd
mov
fistpll
out
sub
push
sbb
out
outsb
jns
repnz
cs
mov
mov
jp
dec
lds
and
jmp
test
add
add
lahf
mov
insb
sbb
inc
mov
push
xchg
lahf
aas
data16
cmp
mov
xor
fwait
inc
add
ja
pmulhuw
xor
sbb
lds
push
in
mov
jbe
aas
cmp
scas
xchg
int3
cld
push
iret
push
xor
ja
in
push
mov
pushf
repz
lods
mov
mov
pushf
or
imul
adc
out
mov
cmc
notl
clc
lods
ret
sbb
clc
xorb
fs
imull
int
shlb
fwait
push
aam
mov
dec
jmp
outsl
into
cmpsb
addb
xor
js
inc
xchg
ret
hlt
and
jp
or
dec
aam
sbb
or
aad
xor
adc
imul
cld
cmp
push
sbbl
dec
mov
mov
fbstp
imul
out
mov
lods
pop
mov
enter
jb
mov
add
mov
test
sbb
pop
mov
mov
popf
nop
adc
jo
aas
or
mov
outsb
dec
dec
faddl
loopne
sbb
cmc
push
or
mov
sbbb
loop
jo
rorb
cs
in
fwait
cmp
repnz
mov
or
cltd
repnz
and
ja
test
cmp
jmp
test
insl
fsubl
jne
jno
pop
cmp
push
ds
int3
push
xchg
push
out
cs
pushf
add
jecxz
icebp
and
mov
jbe
pop
jo
lock
sub
dec
xchg
xchg
pop
push
fbld
loopne
not
add
sarb
ret
daa
shrb
pusha
cmp
ljmp
orb
in
push
or
ljmp
cs
jae
gs
jb
jno
inc
push
scas
mov
popl
popf
push
int3
mov
orb
push
mov
mov
out
inc
aad
call
lahf
subb
jno
push
add
add
lods
jne
mov
decl
lcall
movsl
or
lret
cwtl
xchg
cmc
mov
call
aaa
add
inc
ret
fdiv
sub
jae
mov
cmp
mov
mov
cmc
mov
stc
dec
insl
into
fwait
jle
pop
mov
dec
pop
jmp
adc
and
dec
adc
mov
push
jne
xchg
cmp
icebp
loope
jbe
shll
nop
pop
shl
out
sahf
aad
shll
xchg
pop
xchg
xor
pop
decl
mov
adcl
stos
sbb
xchg
xchg
xor
mov
cmp
xchg
shlb
add
into
testl
stos
cmc
repz
pop
fs
ljmp
push
pusha
lea
push
pop
add
arpl
rcrl
dec
pusha
jbe
push
adc
loope
or
shlb
mov
shlb
xchg
inc
sub
into
iret
and
lock
jo
push
call
jno
arpl
cli
dec
dec
sub
ljmp
mov
ljmp
adc
testb
push
cmp
xchg
insb
ret
hlt
call
flds
sti
jo
xchg
lods
mov
inc
arpl
fdiv
cmp
stos
pop
sbb
pop
in
js
sub
cmp
mov
adc
push
in
xchg
mov
jl
ret
lret
jae
cmp
and
mov
fs
push
lahf
adc
add
cwtl
mov
cltd
fstpt
aas
cmc
dec
lods
loopne
das
out
adcb
cmp
inc
das
xor
jo
adc
mov
loope
xor
add
dec
dec
clc
pop
inc
test
aaa
fisubl
insb
jp
add
inc
test
sbb
dec
loope
push
cmp
addb
inc
or
and
xor
outsl
out
cs
lods
out
ret
jge
loop
loop
jle
cmp
push
or
xchg
leave
add
push
fcom
mov
aaa
aas
mov
mov
std
push
cmp
hlt
gs
movsl
jl
sub
fs
push
test
jno
cmp
cmpsl
gs
subl
pop
ds
mov
or
imul
into
xor
mov
clc
fidivrl
pop
sub
dec
sbb
ret
inc
les
pop
cmpsl
push
out
mov
push
pop
and
mov
es
fcmovnbe
inc
cltd
cmp
jne
aad
fdiv
jne
cmp
adc
xor
xor
sub
mov
movsb
pop
icebp
into
roll
outsb
cmp
fnstenv
out
gs
mov
sti
or
push
int
out
and
in
les
in
jns
std
rcr
scas
nop
inc
mov
cs
imulb
cmp
or
or
gs
notb
mov
ljmp
sti
iret
imul
cli
lock
jns
or
enter
and
adc
dec
xchg
adc
mov
pop
rolb
cli
inc
lods
filds
sub
mov
cmp
stos
sahf
mov
push
xchg
and
aad
and
pusha
lea
push
jl
inc
into
dec
stos
shrb
sub
mov
ret
stos
inc
jge
xchg
test
xor
js
stos
bound
adc
mov
cmp
push
leave
lret
inc
and
jne
add
mov
jb
adc
fidivl
jne
addr16
push
inc
mov
xor
faddl
lods
enter
and
mov
enter
nop
fnstenv
repnz
mov
jge
lods
mov
movhps
sbb
add
jnp
mov
sub
adc
push
jb
call
fwait
aas
lahf
cmp
xchg
inc
sti
jae
out
or
mov
lahf
jno
in
push
jb
movsl
pop
cmp
iret
jb
jnp
xor
nop
stos
rol
mov
lods
int3
jle
xchg
gs
mov
js
insb
fwait
iret
dec
mov
out
inc
mov
xchg
jl
dec
jbe
adc
jmp
jae
mov
inc
mov
mov
test
push
dec
or
push
icebp
xor
lret
loopne
scas
test
fs
fstpl
xchg
popa
or
sub
cmp
inc
data16
test
jg
inc
ret
push
adc
ljmp
adc
fs
addl
push
pop
in
xor
fs
cmp
xchg
inc
movsb
xchg
cli
aaa
xor
icebp
jge
in
andb
int
pop
ljmp
push
test
call
in
jp
xlat
sub
mov
rcll
sbb
fwait
mov
pop
into
leave
in
xor
push
js
scas
xorl
jmp
mov
lret
sub
xor
les
movsb
arpl
mov
stos
out
loope
mov
fisttpl
jle
xchg
jns
stos
fnstsw
pop
movsb
sbb
dec
mov
sbb
fsubs
movsb
cli
sub
rcl
jne
cs
add
test
or
je
shrl
rcr
sub
sub
cmp
ljmp
gs
jno
out
frstor
insl
sti
cmp
mulb
pop
xchg
or
rorb
adc
test
icebp
pop
add
shlb
mov
mov
ss
or
xchg
dec
jmp
xchg
sbb
repz
pop
sbb
in
sbb
jnp
lds
stos
or
xlat
lods
adc
jno
in
mov
xchg
adc
fnstcw
mov
xor
pop
call
setb
test
jb
jl
push
adc
shll
arpl
mov
mov
out
ja
xchg
fnsave
and
sbb
mov
pushf
test
xor
mov
or
fsubs
cmpsb
and
cld
mov
xchg
or
lret
pop
in
mov
in
pop
mov
fsubr
int
lock
stos
sub
push
xor
addr16
in
test
stos
inc
mov
lret
into
inc
insb
mov
outsb
push
fcomip
inc
xor
scas
pushf
xchg
popa
je
fstpt
xchg
test
sub
lahf
add
jmp
pop
mov
leave
and
lea
xor
mov
and
and
xorl
xor
jp
loope
adc
jecxz
sbb
addr16
mov
out
jne
fmul
dec
clc
dec
sub
mov
mov
es
pop
pop
icebp
mov
jge
jae
mov
out
lods
lock
in
in
sbb
stc
or
xor
lods
mov
adc
mov
test
mov
fcmovb
xor
push
imul
mov
jle
and
ja
pop
xchg
scas
cmp
jno
mov
xor
xor
mov
and
enter
lret
dec
sbb
xchg
rcll
xlat
negb
inc
fstpl
sar
inc
aam
cmp
jge
das
lret
xchg
xor
cld
jmp
int
and
clc
jl
pop
filds
push
push
sub
div
iret
repnz
lret
outsl
sub
sub
and
fisttpl
insb
mov
sub
sub
test
mov
sti
loope
xchg
mov
xchg
jg
ret
insb
pop
inc
in
inc
bndstx
cli
or
push
xor
cmpsl
xchg
jnp
in
frstor
hlt
aam
xchg
and
cli
cmpb
xor
pop
lods
stos
cltd
xchg
push
mov
inc
sub
mov
outsl
mov
sub
jle
adc
inc
push
hlt
popf
insb
jle
clc
nop
test
jecxz
cld
xor
mov
xchg
add
add
fwait
add
ljmp
push
fimull
int3
cld
sub
sub
rcrl
sbb
fwait
mov
push
popf
mov
shll
adc
jo
inc
xor
sub
add
sub
xchg
mov
inc
mov
ret
sbb
daa
test
push
add
dec
push
test
mov
stc
jno
insl
push
jne
nop
stc
or
and
adc
mov
inc
jbe
pushf
outsl
push
xchg
inc
mov
repz
pusha
lods
out
xchg
imul
fnstsw
or
out
adc
loop
ficoms
out
ror
cltd
lods
call
leave
ss
lods
sahf
int3
mov
pushl
pop
xchg
daa
repz
aas
or
jp
stos
mov
in
xor
mov
pop
mov
push
fsubrl
out
test
sbb
xor
fdivrp
sub
lods
popa
outsb
dec
pop
dec
inc
mov
icebp
or
xchg
imul
fmull
xor
pop
lock
outsl
mov
xorb
stos
xchg
test
jp
lds
push
push
leave
sbb
out
scas
addr16
push
int3
fs
aas
add
sarw
scas
gs
subl
jbe
and
cmp
loop
fdivl
inc
sti
enter
ljmp
int
loopne
or
cltd
call
cmpsl
add
xchg
enter
dec
andl
es
pop
lods
inc
addr16
mov
push
mov
shlb
dec
lock
pop
pop
ljmp
dec
daa
or
roll
ljmp
in
sbb
daa
cmp
cld
jae
jle
in
sub
scas
pop
sub
push
adc
decb
dec
push
sahf
insb
je
mov
mov
pusha
mov
mov
sarl
push
jbe
out
into
out
in
jmp
test
mov
rcl
xchg
mov
fcompl
sarl
rorb
movsl
jns
fdivrs
lea
into
out
aaa
jnp
fistpll
js
push
jecxz
push
add
je
stos
ljmp
jnp
fstl
loop
or
pop
fisubl
cmpb
sbb
pop
loopne
mov
mov
lods
ja
addr16
fcoms
adc
shrl
mov
cltd
mov
fwait
testb
sbb
mov
shl
jmp
loop
lcall
jno
dec
jo
adc
add
mov
sbbl
cld
cmp
or
das
out
fwait
mov
add
les
in
push
mov
sbb
xor
jo
sub
pusha
mov
or
and
cmp
or
clc
cltd
jl
test
push
dec
shll
jnp
aas
and
std
hlt
pusha
aaa
adc
incl
push
test
lods
jo
stos
cmp
aad
out
imul
pop
bound
xchg
push
fisubl
jbe
jne
jl
enter
adc
jg
pause
push
popf
shlb
xor
mov
js
mov
mov
scas
fmul
fdivrl
jae
push
or
stos
lret
mov
jp
popf
fistps
mov
or
std
out
inc
fidivs
cmpsb
in
push
push
sbb
hlt
outsb
insb
rcll
inc
aaa
imul
xor
in
addr16
add
pop
cwtl
dec
addl
xchg
in
cmp
dec
xchg
cmc
cmp
out
aaa
out
loop
outsl
sar
mov
cmpsb
ss
lahf
sbb
mov
push
dec
dec
cli
push
nop
cmpsl
popf
mov
dec
into
mov
ror
sbb
push
rcrl
ret
push
sbb
push
int3
test
push
imul
jo
cli
jp
push
mov
into
cmp
cmp
test
mov
arpl
and
test
insb
pop
or
fwait
pop
push
shlb
sub
jbe
sub
jb
repnz
daa
lahf
popf
mov
mov
mov
inc
stos
rorb
mov
xor
mov
pop
addr16
out
into
js
sub
adc
push
sub
inc
iret
add
std
fadd
xor
mov
push
mov
loopne
sbb
movsb
fisttps
dec
mov
enter
dec
inc
mov
cmp
mov
jbe
mov
or
lds
outsb
and
clc
scas
clc
dec
jmp
mov
mov
or
fwait
push
shll
arpl
mov
sub
sub
push
inc
pop
stc
jge
gs
fldenv
fbstp
iret
stos
pop
dec
sub
jmp
in
mov
dec
dec
out
sbb
lds
dec
and
push
cmp
test
inc
paddsw
pop
nop
mov
das
je
cmpsl
fsts
cmpsl
fidivrl
std
loop
lock
sbb
mov
push
inc
in
mov
cmpsl
jmp
jp
jb
iret
out
fcoms
in
insb
pusha
fisubl
pushf
push
jb
negb
cmp
fimuls
cmc
in
lock
call
cmp
repnz
cmp
neg
push
popf
jmp
xorl
rorb
inc
cld
bound
cmp
in
and
bound
dec
mov
pop
lea
imul
dec
mov
sub
xchg
subl
pop
push
cmp
cmpsl
aaa
xchg
mov
lock
mov
in
adc
stos
mov
mov
inc
jbe
lret
pop
ds
jp
loopne
mov
pusha
test
xchg
jle
aam
xchg
rcrb
xchg
out
in
push
lock
lret
mov
pop
or
scas
lea
pop
or
es
sarl
xchg
mov
movb
and
add
and
ss
ret
popl
push
jl
js
adc
pop
ljmp
data16
sbb
mov
shll
fistps
push
push
jb
xlat
lea
mov
popf
cli
pop
mov
test
fisubs
pop
mov
mov
inc
dec
fcmovne
mov
fidivrs
cltd
xlat
imul
inc
inc
cmpsl
mov
imul
insl
cmpsl
xchg
mov
test
lret
arpl
cmp
test
sbb
jb
mov
cmp
dec
leave
mov
fwait
add
and
or
sarl
mov
dec
jne
mov
adc
dec
iret
adcl
cwtl
and
ret
mov
ret
mov
pop
mov
das
iret
aaa
out
fldl
in
jns
pop
popf
addr16
insb
mov
mov
jo
add
seta
in
sub
repnz
jle
push
dec
push
arpl
leave
les
lods
lock
fdivl
insl
cmpsl
push
in
clc
pop
ljmp
adc
mov
ret
or
sub
movsl
data16
rclb
loop
adc
jge
jg
es
pop
mov
and
or
or
or
stc
call
cs
inc
jmp
pop
lods
fisttpl
adc
lahf
idivb
push
mov
test
stos
sub
mov
pop
jne
lods
cmpsl
insb
nop
adcb
out
xchg
mov
xchg
je
dec
sub
jae
jmp
lock
cs
cli
mov
or
sahf
je
pop
push
je
imulb
sti
das
xchg
out
int3
cltd
loop
lcall
xchg
xchg
int3
jmp
mov
add
outsb
and
or
mov
jl
pop
push
pusha
out
ficoml
arpl
inc
xchg
xlat
loop
lds
aaa
dec
cmc
clc
mov
xchg
add
sub
push
mov
test
xchg
clc
jle
iret
stos
ljmp
pop
bound
lret
fsubs
popa
mov
cld
xchg
and
jbe
mov
loop
pusha
adc
jo
mov
in
mov
dec
push
jmp
pusha
shlb
jl
cmc
daa
push
xchg
or
sub
mov
mov
xor
mov
lcall
lods
jge
inc
jnp
out
jb
in
lahf
cmpsb
scas
ret
inc
jb
inc
add
jg
xchg
fmulp
inc
xorl
pop
adc
mov
mov
loope
mov
push
enter
cmp
mov
rcrl
int
mov
sahf
repnz
sub
int
iret
jns
mov
lods
or
popf
dec
xor
add
cmp
push
jo
adcl
stc
inc
fwait
adc
pop
or
rcr
cmc
jo
loopne
movsl
mov
cmp
sbb
loopne
lods
push
lar
lcall
lret
cmpl
push
adc
inc
rorb
lahf
icebp
inc
mov
mov
sbb
and
cld
out
out
xor
rorl
xlat
mov
pusha
stos
mov
fstl
dec
sbb
clc
std
arpl
add
mov
movsb
xchg
xor
pop
insl
and
cmc
xchg
push
mov
mov
jns
sub
inc
or
lds
xor
jle
mov
push
pushf
sbb
fcoms
es
sbb
xchg
pusha
jne
push
adc
out
fldenv
and
lods
into
int3
leave
fcompl
js
xchg
std
inc
int3
ds
mov
sbb
push
xor
jp
xor
dec
es
xor
push
cmp
mov
lcall
daa
scas
mov
insl
jg
mov
popa
cmp
test
adc
or
pop
gs
lods
lods
imul
adc
cmc
stc
cmp
mov
mov
daa
fisubl
mov
jbe
pop
inc
adc
xchg
incl
lcall
cmp
xor
push
loopne
xor
or
test
mov
iret
rclb
mov
jg
and
icebp
or
popa
and
mov
adc
mov
lods
subl
fldl
push
push
mov
adc
aas
testl
in
add
sub
mov
inc
mov
add
loopne
inc
fs
push
jns
cmpsl
add
fistps
push
xlat
ret
xor
jbe
mov
scas
cmp
xchg
lods
or
jae
pop
cmp
ret
fbld
mov
jb
pop
mov
add
pop
fcoms
testl
pop
stos
dec
ljmp
pop
jnp
mov
test
mov
ljmp
cli
sub
ret
lds
mov
call
jno
in
fstpl
and
add
popl
adc
sarl
jmp
xor
icebp
adc
fdecstp
add
cmpb
ds
jnp
mov
cmp
sub
lahf
mov
ret
cwtl
sarl
pusha
lds
add
pushf
xchg
sbb
mov
or
iret
mov
cld
mov
shrb
mov
inc
jge
dec
pop
das
daa
sbb
insb
cltd
mov
aaa
dec
arpl
fistpl
add
loopne
mov
pop
xor
inc
jne
addr16
jno
inc
repnz
mov
fwait
push
push
and
mov
sbb
inc
cwtl
test
push
faddl
je
in
jae
xchg
lock
scas
popf
imulb
lea
out
sub
aaa
lret
mov
jp
or
fcomi
jb
mov
jae
sbb
das
add
aam
mov
bound
jns
mov
ja
sahf
aas
mov
mov
pop
cmp
sbb
jle
out
fwait
cmc
xchg
jnp
mov
mov
fdivl
test
mov
incb
pop
cmc
fs
push
jg
mov
sbb
fisubrl
ja
jne
mov
add
jne
enter
into
or
and
mov
xchg
movb
mov
pop
imul
in
add
mov
imul
xchg
test
and
neg
xor
pop
dec
clc
add
add
push
inc
aad
ret
xchg
jmp
dec
add
jno
ds
das
dec
insl
sbb
sbb
mov
pop
outsb
push
adc
imul
dec
inc
push
adc
hlt
out
inc
cwtl
jge
hlt
movsl
mov
mov
mov
outsl
in
dec
pop
in
cli
bnd
stc
add
test
movl
scas
push
jo
dec
xor
and
scas
adc
in
in
and
mov
push
fs
sub
xchg
xorl
mov
mov
lods
orb
adc
call
ret
mov
push
repz
loopne
inc
jg
loope
and
dec
xchg
push
inc
iret
and
daa
mov
pop
sbb
dec
or
or
fcomps
inc
adc
ljmp
in
push
imul
adc
or
lcall
sub
andb
nop
mov
in
fnstsw
mov
mov
shr
icebp
insb
or
add
inc
jns
inc
mov
sbb
pop
and
xor
xchg
sub
mov
pushf
cmpsb
popl
add
int3
stos
xor
or
jne
xorl
or
mov
mov
and
popf
iret
dec
push
es
mov
movsb
xlat
loope
je
inc
imul
jmp
scas
stos
ret
decl
popa
or
cwtl
mov
lock
gs
mov
mov
dec
mov
xor
push
mov
push
and
xor
mov
xlat
in
dec
xchg
cmp
ss
xchg
cmp
mov
inc
lcall
stc
mov
sub
fsincos
xchg
lods
mov
insl
test
sbb
in
fwait
pop
fistpll
out
cmp
and
mov
pushf
pop
xor
mov
rclb
mov
xor
jo
int
divl
fs
das
xchg
mov
mov
jp
in
mov
ss
call
add
jae
mov
dec
cmp
fwait
in
nop
jle
push
adcb
movsl
rcrl
mov
cmpsb
jp
inc
repz
xchg
enter
sub
jns
push
sub
mov
std
call
add
and
sub
sub
jmp
pop
aam
cld
mov
xor
cld
dec
adc
inc
xor
xchg
je
jb
ljmp
pop
imul
mov
in
jl
jb
cmp
scas
lods
mov
cltd
pop
sbb
lahf
sbb
sbb
cwtl
jns
cltd
mov
sub
lcall
cltd
pusha
mull
add
push
stc
fcompl
pextrw
mov
cs
out
loope
aaa
pop
iret
xchg
punpckhbw
mov
dec
mov
xchg
pop
cmp
xchg
pop
pop
lret
push
aam
push
out
pushf
jns
icebp
pop
mov
sbb
call
ds
jne
ret
out
xchg
cwtl
fsubrp
xor
xchg
jnp
mov
shll
cld
mov
das
inc
ret
add
and
fstps
movsl
dec
je
aaa
fdivrl
in
fnstsw
aam
pop
je
test
cmp
shll
pushf
push
add
sbb
filds
lods
sti
pop
inc
adc
hlt
pop
jp
or
sbb
mov
movsb
cwtl
cmc
mov
xchg
add
test
pop
daa
push
adc
es
xorb
cmp
inc
into
sarb
cmp
arpl
inc
lahf
out
xor
cmp
sub
or
sub
inc
pop
and
scas
imul
sub
sti
test
cmp
push
aaa
into
xor
inc
insb
popf
rcll
sahf
fmul
sbb
lret
xor
mov
in
sbbl
mov
mov
mov
fcomps
sub
loopne
shlb
jp
loope
mov
shll
out
jno
repnz
xor
push
cmp
dec
aam
xchg
std
mov
cmc
vmwrite
roll
fldl
ret
jecxz
mov
sbb
adc
and
or
dec
stos
push
jl
sbb
sub
xchg
lret
mov
sbb
inc
jne
nop
out
ss
push
andb
bound
imul
or
lea
xchg
clc
fisubrl
es
push
insl
gs
sub
movsl
outsl
mov
push
notl
movsb
icebp
movsl
jbe
out
ljmp
pop
and
jg
mov
rolb
mov
popa
ret
les
cltd
lret
mov
mov
adc
test
xchg
inc
lret
pop
fsubr
leave
sbb
mov
cmp
fidivs
mov
cmp
mov
fsts
mov
in
xchg
xchg
call
push
inc
adc
and
mov
mov
jg
test
out
jbe
inc
mov
inc
pop
popa
xchg
loope
leave
jge
xchg
stos
cwtl
add
cs
sub
les
push
inc
sub
jo
vpmaddwd
pop
adc
int3
xchg
ss
push
pop
adc
in
and
movsb
and
mov
xor
daa
and
jnp
cmp
ja
mov
mov
xor
or
cmpsl
shl
lcall
mov
push
mov
mov
xchg
lret
ret
in
push
cmpsl
pusha
push
jno
pop
xor
pop
sbb
mov
cld
xchg
mov
movsl
test
dec
hlt
cmp
sub
sub
sar
jns
or
xchg
dec
and
fcomp
pop
add
jbe
mov
push
xor
cs
cmpsb
shrb
lods
dec
cwtl
xchg
adc
xchg
lret
jge
cmp
mov
movsl
lcall
inc
cli
rep
and
xor
sub
or
movsl
int3
or
fimuls
adc
lock
pop
mov
das
push
add
das
xchg
cld
push
xor
mov
repz
imul
mov
clc
dec
sub
or
mov
and
movsb
push
imul
add
in
xlat
out
pop
inc
jle
fs
lods
xor
pop
divb
add
push
js
fsub
inc
in
shlb
dec
lods
das
mov
mov
icebp
loope
adc
mov
xor
imul
clc
out
leave
add
filds
test
push
push
push
sbbl
dec
lds
outsl
out
sar
ret
in
and
cltd
mov
mov
bound
jecxz
push
jecxz
js
mov
lea
sahf
shrl
movsl
orl
sbb
dec
leave
jmp
pop
aaa
mov
enter
xchg
push
adc
mov
inc
addr16
jmp
push
mov
mov
mov
mov
mov
ss
fs
cmpsl
sbbb
and
cli
sbb
ds
push
inc
dec
dec
stos
adc
mov
sti
repnz
dec
scas
nop
add
inc
daa
jle
mull
and
inc
fcompl
mov
in
fsts
add
in
inc
sbb
mov
fldl
jo
and
mov
or
pop
enter
in
je
or
pop
add
test
and
in
dec
enter
outsl
rorl
sub
shlb
sahf
mov
xchg
jp
sbb
cmc
clc
imul
insb
out
jmp
and
lea
push
lds
push
repnz
imul
lcall
add
adc
mov
das
rorl
js
xchg
cltd
add
sbb
leave
dec
mov
mov
dec
or
xorl
lds
push
mov
and
sub
imul
push
jg
rorb
mov
fiaddl
dec
mov
lods
jnp
jmp
lret
scas
cmp
xchg
sub
xor
add
xor
jo
jmp
push
mov
xchg
stos
test
push
cmc
addr16
shl
jns
shll
jmp
jle
mov
and
out
gs
aas
out
shrl
adc
out
push
xchg
js
sub
and
aad
or
cld
pop
ljmp
pop
inc
outsl
or
sbb
inc
add
out
out
movsl
fbld
test
pushf
pop
mov
adc
pop
push
mov
stc
pop
lcall
cld
int
aaa
and
aad
mov
mov
push
lret
mov
mov
push
xchg
or
aad
jle
adcl
jb
rorb
icebp
add
imul
or
mov
mov
jl
jnp
pop
pop
push
pop
mov
mov
mov
cs
sahf
je
cmpsl
mov
add
or
add
sahf
mov
sub
dec
repz
cmp
cwtl
mov
sbb
lcall
into
jecxz
adc
ficoms
aad
xchg
mov
mov
jg
cmpsb
sub
or
aad
lret
scas
xchg
jge
push
mov
aam
cmp
mov
pop
lea
and
fisubrl
out
adc
clc
fldenv
fistl
lret
jmp
insb
push
mov
cmc
fadds
add
pushf
pusha
mov
rclb
movsb
clc
loopne
mov
and
xor
pop
rclb
pop
imul
test
popa
jl
cmpsl
test
dec
daa
popf
sbb
and
pop
out
popa
and
pop
cmpsb
cmp
jb
fistps
xor
sbb
subb
mov
and
stos
aam
mov
addb
sbb
cli
and
pusha
lods
aas
loope
mov
fldl
jo
call
std
jge
jge
mov
dec
mov
fst
fisubrl
mov
sbb
arpl
sti
jge,pn
dec
sub
int
lods
cld
repz
imul
subl
push
jmp
lea
or
xchg
test
jl
adc
mov
xor
xor
or
fdivl
push
cmp
cld
jnp
pop
and
sub
mov
aam
outsb
dec
subl
callw
insl
mov
in
jb
je
xchg
out
sub
jl
pop
sarb
jecxz
js
and
sbb
pop
cmp
mov
iret
fmuls
js
ficoml
imul
mov
jae
and
mov
push
pop
and
imul
sti
or
jmp
pusha
lret
xchg
sbb
fidivrs
cmp
sub
in
mov
push
imul
fdivrl
imul
mov
xlat
nop
cmpl
jb
adc
or
or
cmpl
mov
pop
jno
stos
shr
in
add
dec
out
lcall
push
pop
pop
lret
inc
mov
jl
shr
cmpsb
jl
shll
lds
cmp
adc
adc
ss
xchg
mov
xchg
mov
sub
mov
mov
mov
icebp
adc
ret
mov
mov
jne
lods
data16
test
pop
in
mov
popa
inc
dec
hlt
sbb
imul
sub
dec
outsl
push
or
cld
inc
dec
sub
pop
out
jl
sahf
lret
fwait
nop
cmpsb
clc
mov
loope
fistl
stc
aas
lods
mov
push
notl
and
pop
cs
sub
fsubp
xor
sbb
push
or
mov
sbb
je
xor
pop
push
icebp
jp
add
xorl
test
scas
mov
pusha
jno
sub
fwait
leave
or
lahf
cmp
arpl
mov
adc
xlat
fs
mov
mov
test
jns
fidivrs
mov
rolb
outsl
and
shr
ficomps
outsl
insb
cmp
sbb
je
aas
mov
mov
loope
div
cmp
xorb
or
xlat
dec
loop
pop
xor
mov
jmp
scas
push
ss
stc
sbb
push
lret
pop
int
sbb
femms
jge
jbe
lods
js
sub
mov
ficompl
pusha
push
ljmp
jecxz
int3
ret
adc
outsl
ficoml
push
repnz
jae
shll
ljmp
dec
adc
dec
and
outsb
aad
pop
leave
xor
int3
mov
push
test
pop
pop
pop
jge
jnp
in
mov
insl
pop
mov
notl
xor
mov
xchg
sbb
arpl
mov
xchg
enter
jmp
inc
pop
and
inc
ja
subb
cmp
cmpxchg
fdivl
mov
aas
adc
lret
insl
fiaddl
sahf
jle
mov
mov
cmp
xchg
jae
je
push
ret
push
and
or
idivl
vpsrlq
xor
mov
jg
xchg
xor
mov
in
cmp
inc
push
sub
ja
fnsave
lret
loopne
mov
adc
or
ss
inc
nop
test
frstor
jae
stos
mov
notl
mov
jle
jno
std
nop
xor
into
cs
mov
lea
jmp
inc
xchg
mov
push
jmp
mov
jnp
fidivl
mov
mov
test
inc
mov
ljmp
mov
mov
incl
addl
inc
out
sbb
stc
adc
jns
pop
mov
mov
adc
xor
add
aad
imul
cmp
xchg
loopne
leave
insb
test
popa
push
push
push
int
je
inc
loopne
xchg
xchg
xchg
popf
sub
pop
pushf
add
jno
loopne
imul
stos
scas
enter
push
pop
in
pop
add
jp
mov
cmpsl
aas
dec
mov
or
stos
push
jle
xchg
or
jno
clc
and
cmp
subl
mov
fs
pushf
mov
imul
insb
icebp
shll
push
or
cmp
or
push
into
push
pushl
icebp
push
pusha
inc
lods
cmp
cmp
in
push
cli
sarb
or
cld
dec
mov
push
lret
loope
xor
js
aad
jnp
popa
call
sti
js
dec
jnp
sbb
jl
add
lods
jnp
loope
jae
jmp
sub
mov
jo
dec
pushf
mov
in
stos
and
cmpsb
psraw
cld
fiaddl
lret
dec
out
ja
loopne
pextrw
xchg
sub
jae
cwtl
popa
stc
pop
xchg
sub
insl
dec
cwtl
sar
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
das
icebp
ds
insb
xchg
imul
int3
sub
hlt
ss
out
lods
or
lods
mov
push
mov
les
scas
test
or
loop
push
add
cmp
fstp
cwtl
jo
sub
repnz
pop
adc
or
push
pop
push
js
and
mov
mov
jae
setle
and
or
inc
cmp
mov
js
add
aam
jno
mov
pusha
dec
pop
mul
test
ret
mov
lret
cmp
gs
test
loop
rcll
xor
js
scas
mov
adc
xchg
sbb
push
pop
adc
cmp
pop
adc
jb
addr16
out
ffree
lds
jp
rcrb
jle
lods
rclb
sti
lea
and
ret
aad
lret
mov
mov
add
into
shlb
fistps
adc
sub
push
outsl
popa
std
xchg
jns
pop
cli
mov
inc
incl
mov
jl
mov
imul
popa
cld
mov
sbb
jnp
pop
or
ds
pop
jge
or
test
mov
mov
sbb
push
and
sbb
ficompl
insb
pop
push
outsl
adc
push
xchg
jnp
sbb
sub
sbb
push
outsb
fsubrl
inc
mov
pop
xchg
arpl
or
mov
movsl
sub
xchg
jge
int
repz
dec
inc
rolb
jl
cmc
fst
fcomip
rcrb
cmc
gs
hlt
shl
inc
inc
loopne
jge
movsl
ljmp
aad
mov
push
mov
jnp
dec
call
in
sub
das
hlt
pushf
lods
leave
inc
jbe
push
out
cmp
mov
ret
and
ljmp
lods
mov
add
push
cmp
mov
or
xorb
mov
mov
call
xchg
sbb
xor
fists
loop
mov
das
xlat
push
and
jle,pn
repnz
mov
out
cmp
push
enter
imul
jne
in
mov
pop
pop
and
fsubr
mov
cmp
and
mov
mov
and
and
mov
jmp
stc
pop
inc
add
lcall
mov
jo
lods
mov
jae
xor
fidivs
insb
imul
cmp
call
pop
fs
pop
jg
adcl
ljmp
sbb
test
aad
rcrl
dec
fwait
cs
sub
ljmp
cmp
push
dec
sub
cmc
or
push
aam
mov
mov
xchg
xchg
stos
xchg
jbe
cwtl
or
adc
mov
xchg
in
test
fmuls
icebp
test
test
lcall
cwtl
in
icebp
add
das
ficompl
or
jnp
xor
mov
dec
outsb
loope
sbb
pop
orb
shlb
sbb
and
xlat
inc
sarl
fld
inc
dec
ret
or
mov
mov
insb
dec
fmulp
lea
leave
fsubl
xor
jno
lds
fldz
push
repz
pop
insb
adc
in
push
and
mov
push
mov
lret
repz
rorl
lret
lahf
movsl
enter
xchg
punpckldq
and
ret
les
cmc
jae
pop
mov
int
add
ret
cld
push
outsb
xchg
lea
push
inc
pop
xor
cmp
lds
imul
lods
jg
mov
mov
add
pop
aam
jbe
xchg
pop
adc
inc
das
hlt
jmp
jb
pop
sbb
lea
aam
mov
aad
es
or
lret
xchg
and
cwtl
sub
pop
sahf
aas
xor
jne
adc
jae
cmp
jmp
sub
cmp
aaa
xchg
push
mov
jecxz
cwtl
xorl
test
pop
add
stc
imul
js
stos
or
jo
std
xor
enter
add
inc
sub
cs
int3
iret
jno
insb
push
mov
imul
rcrw
jle
in
repnz
dec
cmp
cmc
or
mov
cmp
dec
pop
dec
sub
or
nop
adc
idiv
adc
mov
mov
cmp
in
outsl
movsb
jmp
pop
stos
repz
mov
add
mov
xchg
stc
cs
pop
push
or
ret
cltd
scas
loopne
lcall
sbb
mov
cmc
inc
add
sub
sub
pop
cltd
pop
jge
mov
aad
jb
add
stos
mov
jb
lock
push
pop
sbbb
ret
rorl
test
push
sub
xor
xchg
notb
out
jb
dec
loope
pop
mov
cltd
ds
test
loopne
enter
ss
or
lcall
jg
dec
add
adc
add
xor
lock
ds
xor
cli
jns
stos
dec
rcrl
test
xor
pop
sub
mov
test
dec
jno
shll
bound
mov
sub
dec
stos
aad
xchg
stc
out
btc
push
push
xchg
mov
adc
shll
insb
and
xor
xchg
sbb
sahf
and
inc
or
stos
rcll
mov
add
xor
inc
loopne
mov
xchg
inc
mov
lock
bound
cwtl
ja
and
shlb
bound
or
inc
lahf
xor
hlt
jno
lea
aam
or
popa
mov
movsb
in
pop
shll
punpckhdq
mov
sbb
add
pop
arpl
jge
sub
or
aam
xor
mov
mov
scas
out
xchg
and
test
mov
int
scas
jmp
mov
push
test
cld
fcomps
notl
enter
jns
cld
repnz
fnsave
jne
sarb
rcll
lret
mov
sbb
cmc
dec
inc
nop
stos
push
or
mov
adc
xchg
shrb
push
and
sahf
aad
fisttps
sbb
push
es
rorl
aaa
stos
dec
jne
or
pop
pop
pop
sub
fwait
add
lret
mov
insl
mov
adc
xchg
mov
inc
xchg
stc
hlt
in
xchg
imul
sarl
bound
daa
popl
sbb
add
jnp
aad
inc
test
lea
ss
jno
outsl
sbb
jne
movsl
pusha
vunpcklps
out
pop
cmpsb
sbb
mov
es
aad
sti
sub
xor
repz
add
in
sbb
out
lahf
xor
std
in
lahf
fists
pop
test
xchg
daa
repz
movsl
sti
imul
daa
xchg
inc
mov
jl
cmpsb
inc
push
lods
xchg
lods
test
or
icebp
arpl
jg
xchg
push
js
out
in
jno
xchg
dec
add
cmp
in
test
xchg
clc
or
xchg
jo
inc
arpl
dec
testb
add
add
add
add
add
add
call
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
