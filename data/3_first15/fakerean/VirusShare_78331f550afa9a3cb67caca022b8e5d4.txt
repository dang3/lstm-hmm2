sbb
add
mov
sbb
insb
or
loope
adc
jb
add
pop
ret
and
or
push
mov
in
cs
iret
xchg
fisubs
repnz
mov
fists
xchg
jne
mov
dec
xor
xchg
sti
ss
mov
je
adc
iret
mov
out
push
sub
divl
sub
xlat
aas
sub
xor
pop
push
push
mov
inc
cs
or
loop
jbe
fsubr
clc
add
push
lret
orl
popf
adc
and
icebp
push
mov
aas
dec
test
or
and
out
subb
mov
test
popl
leave
add
ret
inc
aas
mov
xchg
push
mov
je
cs
sarl
and
cmpsb
add
rcr
adc
sbb
mov
and
addr16
add
leave
imul
lret
ds
pop
jg
sti
outsb
icebp
lahf
cli
push
ja
cli
leave
clc
mov
push
push
call
jecxz
mov
mov
or
add
xchg
pop
mov
fmull
xchg
mov
aas
mov
pop
shrb
push
cmp
add
mov
mov
sub
addr16
pop
push
and
pop
cmovbe
lahf
push
or
je
in
mov
insl
inc
les
sub
or
clc
xor
ret
pop
lret
gs
add
mov
les
ljmp
lret
mov
and
fstpt
xor
jo
mov
inc
shrb
adc
adc
lret
jp
scas
dec
inc
add
add
push
push
adc
cli
jbe
int3
lret
push
das
inc
mov
cmp
lret
stos
sub
xor
mov
stos
inc
xor
test
fistl
inc
lods
fsts
cmp
shlb
and
ret
sbb
sub
xchg
pop
in
xchg
xchg
hlt
xchg
fistl
jle
jmp
loope
aaa
loop
pop
dec
mov
xchg
test
mull
mov
xor
push
jno
shr
pop
jl
jae
mov
dec
or
inc
push
push
test
push
lahf
fwait
arpl
xchg
dec
mov
adc
inc
nop
fbld
push
xor
cmpb
sub
jnp
cmp
jmp
mov
lea
out
movsl
push
and
fildll
inc
stos
pop
pop
clc
repnz
neg
cmp
mov
inc
mov
adc
sahf
cmp
mov
cltd
or
add
mov
xor
mov
nop
int3
cmp
std
bound
pop
flds
jns
test
fdivs
in
pusha
or
hlt
dec
shrb
sbb
imul
pop
push
imul
cmc
in
mov
mov
shrl
lds
shll
aaa
mov
push
mov
inc
icebp
or
xchg
xor
dec
pop
cmp
jns
jp
xlat
xchg
mov
loop
fstp
cs
int3
xchg
repnz
xor
insl
mov
nop
or
pop
js
sbb
dec
pop
xorl
loopne
push
jbe
jl
inc
mov
imul
fdivp
lods
push
and
mov
lcall
insb
int3
fld
test
arpl
loope
lds
jo
out
mov
push
adc
push
xlat
hlt
sub
inc
sbb
mov
or
xor
andl
push
jmp
mov
push
or
mov
mov
dec
cltd
in
adc
cmp
jecxz
xchg
pop
dec
aaa
jmp
or
fs
test
mov
inc
leave
sub
sbb
in
lret
xchg
ret
loop
enter
adc
mov
in
aaa
pop
cltd
push
xchg
notb
aam
cld
jl
in
push
xchg
mov
cltd
inc
pop
push
xor
imul
test
arpl
cmp
leave
dec
out
or
int
jne
mov
rcrb
cmpsl
cmp
loopne
ficomps
pop
pop
cltd
cltd
or
sahf
inc
ret
lahf
pusha
pop
push
enter
push
xor
sahf
pop
test
call
fmuls
into
or
leave
pusha
or
push
mov
sbb
add
mov
sub
lock
mov
and
icebp
push
aas
xorb
lret
xchg
mov
negb
addr16
mov
andb
adc
push
or
bound
leave
pop
jnp
adc
jo
test
and
xor
cltd
adc
shrb
push
mov
fidivrs
lock
js
xchg
in
shll
std
or
ret
sub
xchg
push
cmp
jmp
jne
fidivrl
jecxz
add
jmp
jno
adc
and
outsb
mov
and
mov
lret
gs
mov
adc
outsl
add
repz
fnstcw
xor
add
mov
inc
xor
test
sub
fsub
mov
mov
jns
aam
push
dec
test
pop
stos
xor
xchg
or
outsl
cld
dec
push
orb
sub
sahf
sbb
in
stc
in
mov
mov
dec
stos
lds
jno
add
sbb
dec
mov
pushl
test
mov
gs
fsts
test
mov
mov
insl
mov
ds
pop
mov
push
repz
add
clc
add
and
sti
mov
mov
std
mov
pop
cmp
mov
mov
dec
sbb
xor
or
push
imul
icebp
repnz
out
sbb
cmp
mov
in
push
js
xlat
push
in
cmp
push
fidivl
lea
rcrb
js
mov
popf
xor
push
popa
add
aam
imul
xor
dec
pop
mov
inc
mov
mov
outsl
jg
cwtl
mov
dec
cmpsl
dec
lcall
in
xchg
cmp
fidivrs
jbe
dec
jne
pusha
jno
mov
pop
aas
cli
dec
mov
xchg
push
pop
xchg
push
test
sub
sbb
ficoml
arpl
xchg
xor
dec
mov
pop
data16
imul
roll
cli
scas
push
daa
rorb
pop
in
push
push
rolb
jl
leave
int
xor
popa
loopne
int3
inc
mov
mov
lret
mov
mov
mov
push
mov
mov
xchg
adc
jecxz
movsl
cmc
xor
out
clc
xchg
test
fidivs
in
int3
addr16
call
in
xchg
pop
int3
call
jmp
push
sbb
or
ficoms
loopne
adc
scas
xor
bound
jg
push
mov
jnp
and
mov
lret
mov
jmp
cmc
jge
fstl
ja
adc
mov
sub
arpl
jae
lret
test
push
adc
addr16
cs
inc
jmp
xor
inc
sti
imul
jmp
cs
jl
mov
insb
jae
xchg
sub
mov
sub
mov
push
jl
cltd
jne
loop
rcrl
and
dec
mov
add
hlt
scas
jbe
pop
shrb
hlt
ds
out
xchg
and
inc
jne
je
movsb
insl
push
les
stc
mov
sub
mov
jp
xchg
je
mov
add
shld
pushf
mov
dec
dec
daa
out
jl
test
jge
imul
enter
xor
xor
inc
fsubs
repnz
jns
jb
xor
inc
out
cmp
int
sub
in
pop
sbb
cwtl
mov
sti
insl
push
mov
push
pusha
cmpl
cmp
xor
mov
js
and
fsubrl
out
loop
fstps
sbb
leave
push
movb
mov
test
sub
scas
lock
cwtl
mov
pusha
xlat
jae
sbb
xchg
mov
call
lcall
push
repnz
push
outsl
push
in
scas
mov
mov
lret
cltd
cld
into
popa
jg
sar
dec
lods
std
inc
adc
jg
in
sbb
dec
ret
mov
dec
fs
xor
cmp
dec
sub
fsubl
mov
pop
fdivl
cmp
gs
adc
or
les
mov
xchg
mov
mov
mov
jbe
dec
sub
add
outsl
lock
sbb
loope
aad
xor
mov
sub
mov
and
pop
push
fistpll
xchg
test
cld
inc
pop
xchg
push
jb
fs
sbb
push
fs
push
cmp
std
jecxz
lea
xor
adc
fstps
mov
xorl
out
jno
or
xlat
ret
dec
xchg
mov
pop
sub
scas
daa
mov
add
and
push
xchg
jnp
push
sti
xor
pop
mov
add
cmpl
loop
jl
push
aas
fnstenv
ja
sbb
xchg
je
dec
push
ljmp
insl
repz
sldt
cli
pop
adc
sahf
pushf
jg
cwtl
in
sub
xchg
and
int3
out
mov
scas
ds
out
cmpsb
mov
enter
shlb
pop
fisubrs
cmp
imul
dec
cmpsb
je
hlt
mov
pop
in
mov
xchg
mov
mov
cmp
sub
lcall
bound
lret
mov
pop
xchg
sbb
fwait
and
aas
lods
sbb
jnp
mov
ss
sub
xor
pop
xchg
sahf
nop
insl
dec
cli
ljmp
lods
adc
jne
inc
mov
fucomip
xchg
push
xchg
into
nop
lcall
push
int3
enter
jb
hlt
loopne,pt
icebp
ljmp
data16
and
push
jbe
sub
mov
pop
mov
add
pop
add
test
inc
rolb
mov
jmp
jp
repnz
and
xchg
and
pop
xor
aaa
xchg
and
ret
jnp
cs
shll
inc
mov
push
xor
mov
in
jl
add
inc
loope
sub
mov
std
popf
loopne
dec
stos
mov
stc
inc
rcrb
add
sbb
pop
push
ret
rclb
fisttps
xchg
add
mov
jmp
mov
mov
imul
nop
sub
jl
and
arpl
mov
testl
adc
mov
pusha
imull
or
adc
mov
cs
iret
repnz
xor
jmp
stc
dec
jle
aad
push
xor
fiaddl
push
pop
cmpl
scas
ljmp
add
aad
fstpt
xchg
or
inc
in
xchg
aad
hlt
inc
cltd
mov
inc
jnp
mov
adc
mov
mul
loope
mov
or
xchg
push
fsubl
push
adc
fstps
dec
fs
rorl
sub
repz
les
cmc
mov
mov
sub
movsb
and
sub
or
insb
pop
inc
lahf
test
fdivrl
jle
clc
rorb
cmp
add
pop
mov
push
mov
jmp
jb
adc
test
cld
icebp
dec
fisubrs
mov
out
or
int3
dec
push
jo
daa
outsb
imul
outsb
leave
inc
aas
and
mov
add
mov
xchg
cmc
dec
lret
mov
int3
or
jns
pushf
mov
fstp
setle
jmp
loop
dec
call
jl
cmc
sbbb
movsl
fdivl
xor
out
fs
mov
and
iret
lods
jl,pt
dec
orl
loope
lcall
mov
mov
push
pop
push
mov
inc
xchg
frstor
scas
iret
ret
dec
inc
xor
pop
outsl
jnp
push
pop
and
jno
ffree
add
pop
aam
dec
ljmp
shl
and
dec
pop
mov
insb
cmc
fcmovne
mov
ret
fnstenv
aaa
push
sub
xchg
fisubrs
scas
adc
jbe
pop
or
ja
test
testl
mov
pop
aaa
xor
out
cmpsb
and
je
mov
adc
cld
lahf
pop
jg
jno
xchg
fwait
sbb
cltd
adc
sbb
cltd
and
sahf
fldl
testb
aaa
mov
mov
push
inc
push
dec
movsl
scas
imul
pop
sbb
mov
repz
xchg
or
sub
pop
cmp
loope
jmp
and
stos
mov
add
push
mov
cmp
ret
popf
sbb
fabs
outsb
test
cmp
repnz
scas
insb
test
in
gs
jnp
hlt
mov
add
jl
adc
mov
icebp
or
subl
jp
mov
sbb
fs
cmc
xorl
in
xchg
lea
or
sbb
clc
repnz
add
adc
test
cmp
pop
mov
ds
adc
fbstp
cld
fcoms
rcll
in
fdivs
jecxz
rcrl
movsb
mov
popf
addb
pushf
lcall
int
mov
movsl
and
xchg
lea
imul
sbb
out
cmpsb
dec
sbb
inc
or
and
add
sub
mov
out
mov
push
imul
adc
mov
ficompl
into
and
dec
js
in
aaa
mov
inc
xor
push
sbb
push
mov
mov
mov
xchg
movsl
mov
lret
aad
jns
add
popw
and
fidivrs
and
push
push
mov
int
mov
mov
movq
xchg
cli
dec
movsl
in
pop
push
jge
ss
insb
into
lret
adc
iret
js
nop
test
xor
and
xchg
mov
sub
lcall
xor
mov
push
xchg
adc
inc
mov
jge
xchg
mov
push
std
aam
cmp
cmp
mov
mov
xchg
sbb
pop
scas
xor
outsl
xchg
pop
pusha
ljmp
gs
out
imul
inc
jmp
jp
mov
addr16
in
xlat
sub
sbb
sbb
icebp
fs
bound
or
in
testb
shlb
add
sub
or
jmp
cli
jb
lret
xlat
inc
das
adc
or
rorb
ljmp
lret
cli
sub
outsb
out
std
mov
xor
enter
push
fbstp
cltd
cmp
push
add
jbe
dec
lods
or
push
popl
mov
jnp
pop
fdivp
pop
lea
lock
mov
ja
jg
cmp
repnz
add
jbe
push
ds
or
mov
xchg
test
inc
dec
jnp
in
lahf
and
pshufw
es
xchg
fisttpll
push
insl
pop
mov
in
mov
pop
int
out
jnp
pop
scas
fs
cltd
jnp
sahf
pop
pop
adc
lcall
out
mov
scas
push
xchg
adc
shll
inc
mov
or
insl
mov
jg
mov
jno
inc
dec
fldl
shrb
shll
cltd
rcrl
xchg
cmp
mov
mulb
sub
lret
sbb
lea
fldt
cmc
jl
imul
ret
push
dec
and
enter
fmulp
inc
pop
xchg
cmpsb
out
lret
iret
or
faddl
push
adc
ds
aad
add
xchg
stc
cmp
cmp
xchg
loopne
push
or
inc
adc
pop
in
aaa
fwait
mov
negb
add
push
aam
xchg
cmp
sbb
sub
cld
mov
xchg
frstpm(287
fwait
and
test
and
sar
gs
and
inc
adc
scas
dec
es
sub
mov
imul
outsb
mov
inc
aam
push
cltd
push
je
in
pop
je
stc
aas
pop
mov
lret
xchg
and
push
mov
fdivs
sub
sbb
pop
jle
nop
mov
jge
das
add
enter
adc
dec
repnz
mov
sti
pop
or
inc
loopne
xchg
cli
cmp
and
je
sbbl
add
pop
dec
insb
adc
mov
icebp
lods
out
sti
movntq
out
dec
xchg
mov
aas
test
nop
mov
xor
sub
mov
pop
mov
jnp
push
pop
outsb
fs
leave
push
imul
sub
add
push
and
mov
inc
in
inc
jle
mov
leave
divb
mov
fbld
fs
ja
sub
sub
cltd
sub
dec
inc
sbb
mov
and
shll
aad
ret
and
testb
mov
in
cli
pop
push
test
cltd
push
jno
data16
test
aam
dec
arpl
movsb
push
ss
inc
ds
cmp
cmp
hlt
imul
popa
mov
jge
loope
sub
jmp
or
insl
inc
xlat
xchg
jbe
mov
adc
fbstp
and
xchg
jo
out
push
gs
ljmp
push
lods
dec
mov
push
add
aad
inc
sbb
xchg
sub
outsb
jns
ja
inc
bound
fdiv
mov
cwtl
push
arpl
cmpsb
test
ret
inc
jmp
cltd
or
aaa
jle
outsb
cli
and
sbb
mov
add
xchg
xor
mov
lods
sti
pop
in
nop
xchg
cmp
lds
stos
push
cltd
dec
aaa
mov
in
movsb
out
es
cmp
jae
dec
loop
sbb
xor
lods
dec
push
inc
cmp
fsts
jle
rorb
rolb
sbb
jecxz
inc
jo
imul
pop
stos
into
jno
outsl
xchg
hlt
pop
push
inc
jo
mov
xchg
xor
mov
inc
stc
lret
xor
enter
jb
aaa
data16
movq
testb
sar
jne
cmp
inc
mov
jno
xchg
aad
sub
mov
cmp
push
sti
ljmp
or
int
mov
and
movsb
push
stos
mov
push
les
mov
cmpsl
clc
movsb
push
movsl
xchg
rcrl
pop
and
gs
mov
mov
adc
pop
mov
jo
out
mov
push
push
add
or
aad
mov
repnz
mov
mov
inc
pop
repnz
cwtl
ds
push
xorb
repnz
xchg
in
loopne
xchg
lods
sbb
xchg
fnstsw
jp
sar
js
sub
dec
sub
fildl
cmpsl
xlat
idivl
bound
clc
arpl
jecxz
ja
or
push
nop
or
sub
cmpsl
push
dec
in
cmpsl
dec
mov
inc
push
loopne
jge
lcall
mov
push
mov
in
loope
pusha
dec
pop
add
rcr
cwtl
push
movsb
mov
loopne
pop
adc
cmp
cmp
lahf
subb
jo
mov
sti
pop
dec
add
pop
xor
xor
push
sbb
inc
ss
dec
rorb
or
loop
push
or
mov
xchg
push
movsb
cmp
lds
or
push
jae
mov
ss
das
scas
and
jl
lods
mov
add
sub
cmp
push
scas
adc
dec
mov
stos
add
call
pusha
mov
xchg
lds
mov
outsl
mov
jnp
dec
dec
sbb
cmp
push
daa
sub
cs
out
sub
pop
xor
jne
rorl
and
dec
push
in
and
jo
stos
cmpsb
pop
nop
mov
sub
sub
mov
adc
incb
xor
fstl
xorl
int
and
jno
adc
push
sarb
pop
sbb
in
cmp
dec
mov
ds
pop
es
dec
popf
push
or
fadds
xchg
ret
repnz
push
and
jecxz
sub
adc
in
loope
movsl
xchg
popf
imul
scas
jo
es
pop
xchg
mov
sarl
or
inc
inc
mov
or
daa
mov
cmpsb
loopne
sub
stc
push
clc
add
inc
ficomps
imul
dec
cmpsb
xchg
sub
pop
inc
jmp
jnp
repnz
push
dec
and
fwait
cmpsb
adc
sub
or
fwait
lods
aad
sbb
test
stos
xchg
js
pop
enter
cli
insb
mov
stos
sub
shlb
popa
dec
and
jecxz
mov
fadd
push
cmp
push
nop
mov
jae
mov
jp
adc
outsb
and
sarl
int3
fwait
pusha
mov
cmp
rclw
popf
cmp
pop
int
sub
data16
and
jb
cmp
addr16
sub
addb
cltd
dec
and
add
push
stc
jbe
sub
mov
mov
xor
or
pusha
dec
xchg
xor
insb
mov
std
icebp
inc
cmp
in
int3
xor
inc
fwait
cwtl
mov
inc
int3
lret
cmp
add
fbld
addr16
lods
pop
jne
or
push
jmp
test
jg
inc
rol
mov
imul
push
and
int3
and
das
push
push
xchg
or
into
dec
push
xchg
or
jne
mov
or
mov
dec
adc
out
dec
pushf
std
xor
ja
movsl
les
movsb
daa
je
or
mov
cmp
pop
push
pusha
scas
cwtl
mov
inc
shll
daa
out
into
xchg
cwtl
popa
frstor
cwtl
dec
inc
test
pushf
xor
out
jge
fildll
imulb
shll
imul
jmp
mov
nop
cmpsb
test
jnp
mov
ss
mov
outsl
test
mov
or
xor
xchg
out
xchg
jne
pusha
inc
jge
dec
cmp
jne
fdivr
xchg
dec
lock
sbb
repz
push
jle
xchg
adc
loope
outsl
arpl
in
mov
sbb
insb
inc
clc
je
sub
inc
mov
xchg
and
mov
rcr
or
xchg
mov
adcb
fcomps
dec
imul
divl
test
leave
nop
js
push
xchg
jo
stos
mov
jbe
mov
mov
cmp
push
int3
push
sbb
ret
push
mov
add
out
mov
sar
add
fadds
push
loop
jae
loope
jmp
sub
fists
lods
pop
dec
hlt
pop
mov
mov
add
inc
lahf
push
ljmp
int3
ret
jnp
int3
inc
stos
xchg
stc
mov
jecxz
mov
jb
adc
sbb
pop
stos
or
cmp
jno
stos
mov
test
push
mov
jb
lahf
lahf
scas
cmpl
sub
lcall
test
cmp
js
mov
paddsb
push
cmpsb
lock
sti
xchg
mov
fimuls
into
mov
movsl
jae
pop
mov
popf
mov
fadds
stc
and
lret
add
pop
mov
repz
dec
clc
pop
aas
cli
cmp
lret
or
sub
jge
pop
call
mov
insl
xchg
xor
mov
xlat
inc
mov
icebp
cmp
adc
or
inc
outsl
adc
test
xchg
loop
cmpsb
imul
fsubs
cwtl
test
pusha
fbld
cmp
repz
cltd
iret
jg
decl
jge
and
pop
add
outsb
cmp
cs
xchg
xor
jno
xor
shrl
fidivrl
enter
mov
mov
or
push
aam
out
outsb
scas
push
aad
lods
pop
nop
pop
subl
test
dec
adc
cpuid
test
call
out
jg
scas
in
mov
mov
add
inc
ss
int3
scas
scas
das
outsl
call
jnp
pop
sub
addl
fiadds
insb
testb
fldpi
jg
mov
enter
inc
push
pop
pushf
inc
lods
shlb
xchg
nop
movsl
pop
add
mov
mov
clc
push
xchg
std
mov
mov
lcall
popl
pop
es
adc
pusha
int3
enter
cmp
ss
push
or
mov
push
iret
push
sbbb
je
mov
js
add
mov
jnp
cmp
loope
loope
sub
sbb
pop
test
fbstp
repnz
sub
out
mov
lahf
arpl
pop
ret
jns
and
cmpsl
mov
push
xlat
lock
movsl
dec
xor
or
mov
in
push
ret
lret
ja
mov
sub
adcb
insb
dec
dec
je
fdivrs
lods
stos
iret
cmp
xchg
mov
or
push
ret
push
les
inc
sub
cmp
push
fdiv
sbb
hlt
mov
imulb
xlat
or
xchg
mov
ret
push
xlat
inc
cmp
cmp
jg
dec
filds
xor
sbb
rol
faddp
mov
bswap
repnz
xor
mov
gs
add
pop
enterw
xlat
sub
push
mov
and
xor
pop
scas
pop
sbb
fwait
sbbb
xor
add
movsb
out
fimull
cmc
cwtl
sti
addr16
cmpsb
imul
adc
add
adc
mov
int
and
repnz
mov
and
push
fwait
out
mov
aad
push
movsb
sub
mov
sar
sbbb
int3
icebp
jp
sbb
clc
out
jns
mov
int3
mov
dec
and
xchg
lods
aad
outsb
add
mov
sar
push
and
ret
fucom
call
jnp
enter
xchg
sub
mov
ljmp
xchg
pushf
push
mov
mov
jb
xor
mov
das
faddl
xorb
cmp
inc
push
and
loop
jle
imul
xchg
pop
js
add
out
jg
push
ds
loopne
adc
sbb
mov
rcrl
sbb
int3
adc
dec
repnz
rorb
cs
rolb
mov
dec
popl
push
loope
rolb
cmpsb
mov
sub
es
sub
jb
rcrl
popf
fimuls
out
and
cmpsb
aad
int3
insl
mov
sti
je
jg
mov
xchg
pop
push
pop
test
cmp
jp
lea
push
push
mov
lds
shll
cli
fisttps
testl
insl
inc
jo
mov
mov
xor
push
xor
inc
test
enter
push
js
cmp
aaa
sub
fldenv
jo
sti
pop
mov
inc
pop
in
mov
nop
add
out
jo
push
mov
pop
mov
insl
or
dec
xchg
out
jnp
push
test
cli
lea
out
push
fldcw
repnz
mov
imul
imul
hlt
es
add
push
cmp
and
or
data16
cmp
push
ret
inc
inc
mov
mov
lods
popa
clc
xchg
test
inc
fsub
in
push
out
lods
mov
xchg
sbb
in
movsl
sbb
inc
mov
jle
cmp
add
add
push
push
cs
aad
shrb
idiv
push
inc
mov
adc
adc
cli
int3
jne
aam
jmp
je
adc
cmpb
insl
inc
addr16
call
dec
outsl
ret
cmp
and
insb
ds
mov
cmp
in
push
aas
shrl
sahf
jp
enter
pop
fdivrl
cmp
pop
ret
xor
cli
cmp
mov
dec
sahf
xchg
sbb
and
pop
sbb
or
lea
sub
sbb
dec
jle
mov
cmpsb
in
sbb
imul
cmp
aam
stos
dec
bound
mov
fisttpll
lea
push
sbb
loop
pop
outsb
inc
cwtl
mov
sub
ds
xchg
sub
hlt
stc
stos
test
adc
mov
addb
cmc
data16
pop
mov
shrb
xor
dec
and
pop
mov
enter
xchg
mov
and
cmpsl
mov
insb
gs
mov
fisttps
push
mov
pop
stc
sar
imul
ret
jne
dec
or
fcoms
inc
mov
xlat
add
movsb
clc
sub
std
push
push
sub
jp
shr
test
popf
adc
data16
or
push
mov
xchg
inc
int
jle
sti
nop
aaa
mov
inc
mov
pop
stos
sbb
aaa
and
jae
push
ficompl
out
daa
in
inc
mov
add
rorl
pop
shlb
xor
or
mov
inc
arpl
lods
dec
jge
mov
icebp
outsb
sbb
pop
scas
and
sti
sbb
xchg
inc
aad
in
addr16
mov
xchg
into
dec
ss
fistl
je
imul
cmp
imul
add
pusha
pop
xor
dec
jl
pop
stc
pop
xchg
add
xlat
mov
sahf
jnp
sub
and
movsl
mov
and
fisttpll
adc
call
mov
outsb
bound
pusha
sub
push
arpl
push
pop
insl
inc
daa
or
inc
jecxz
nop
movsb
adc
jl
sbb
pusha
loopne
rcll
notb
jno
pop
mov
sub
inc
sub
into
popf
lods
add
jo
insl
in
xchg
adc
cld
loop
mov
push
hlt
hlt
xchg
test
adcb
cmp
insl
sub
ss
cmp
sub
dec
push
jo
inc
out
rcr
mov
ret
ds
dec
inc
in
fnstsw
scas
mov
pop
cmpsb
push
mov
insb
rcrb
dec
dec
in
mov
push
push
aam
fdivrl
adc
cmc
aaa
push
add
pop
nop
out
mov
pop
fbstp
pop
adc
xchg
je
fimull
xlat
mov
pusha
add
xor
das
shll
sahf
fdivrs
pop
loope
dec
mov
xor
in
jb
push
ret
sbb
mov
cmc
fisttpl
lcall
xchg
push
fwait
mov
bound
mov
out
popl
mov
cmovne
jmp
movb
dec
mov
inc
stc
fwait
jb
dec
es
lds
shll
xor
sar
jbe
cmp
xor
aas
lods
dec
fildl
push
mov
and
clc
sub
jecxz
int3
imul
lock
imul
jo
pop
xchg
cli
aad
pop
iret
mov
sbb
xor
aas
or
ror
sbb
jge
sahf
cs
in
jo
xchg
in
mov
pop
int
push
in
mov
jg
in
sar
out
sbb
ret
or
inc
dec
stc
pusha
ja
pop
and
push
pop
mov
aam
pop
cmp
testl
lds
test
xor
cmp
inc
mov
cwtl
cwtl
mov
push
stos
mov
outsb
jnp
inc
push
add
adc
inc
pushf
test
fcoms
stc
lret
push
out
cmpsl
mov
push
jg
scas
movsl
pushf
mov
mov
clc
push
mov
jne
mov
jmp
lea
push
adc
shrb
pop
or
test
or
dec
push
lods
cmp
aaa
mov
es
shrb
lods
xor
je
popf
cld
in
cmp
cld
int3
cmp
ja
daa
nop
ficoml
add
shll
into
fs
mov
repnz
jge
sbb
push
imull
stos
leave
lret
mov
mov
bound
nop
ja
imul
mov
out
ret
xor
call
push
aas
into
int
jmp
dec
scas
pusha
in
push
push
sub
xchg
jl
cmpb
cmpsl
pop
push
mov
cwtl
or
rorb
out
ss
in
das
lea
into
mov
repnz
xchg
mov
mov
adc
int
push
scas
dec
movsb
iret
xor
jle
jp
stos
popf
adc
jo
leave
loope
lock
push
add
out
xchg
xchg
inc
stc
mov
inc
and
cmc
inc
cmpsb
cmp
repz
pop
sub
push
and
cld
mov
mov
pushf
mov
pop
add
rorb
jl
pop
mov
inc
push
inc
jle
jo
dec
mov
dec
idivb
adc
cld
push
test
mov
and
push
lods
mov
aaa
and
push
fwait
cli
shrb
vmovdqa
cltd
and
jecxz
adc
outsl
loop
dec
dec
adc
inc
push
add
or
les
push
rcl
pop
mov
sar
pop
stos
xchg
mov
add
sahf
xor
sub
jae
pop
sbb
pushf
incl
jnp
sub
cmp
movb
mov
xchg
test
or
mov
inc
pop
add
shrb
cmp
and
sbb
cwtl
mov
and
adc
sar
and
pop
bound
repz
fisubs
and
pop
jmp
repz
lods
mov
in
inc
pop
adc
pop
xchg
xor
popf
dec
sub
jmp
push
push
and
jb
mov
push
push
add
jge
or
xchg
cmp
add
mov
cmc
and
mov
xchg
push
pop
pop
stos
push
lcall
adc
fs
xchg
jl
pop
push
punpcklbw
jne
mov
aam
xchg
push
xchg
daa
jae
cmp
test
push
pop
xor
xchg
imul
add
inc
push
divl
aad
lods
ret
cmp
mov
lock
cmpb
cwtl
in
inc
pop
out
push
repnz
xchg
cmp
or
sti
lea
inc
mov
faddp
jle
cmp
jb
adc
xchg
je
in
mov
inc
mov
dec
iret
xchg
in
cmpsb
xchg
ds
test
mov
mov
xor
sbb
mov
into
lcall
pop
aad
xchg
mov
cmp
add
adc
push
int
icebp
jg
sub
dec
or
repz
add
icebp
xchg
icebp
jae
imul
sbb
lret
lds
mov
fidivl
ficompl
dec
pop
mov
push
cli
lret
xchg
sub
jl
cmp
lret
push
cmp
push
and
fstpt
outsb
fsub
push
push
xor
jnp
in
jb
push
das
xchg
adc
jne
mov
test
insl
rcrb
loopne
push
push
jmp
iret
je
lods
std
pop
or
and
adc
aad
cmpsb
dec
mov
and
aas
adc
ret
dec
sbb
pop
insl
sbb
stos
and
xor
cli
out
pop
imul
fcoms
add
sbb
and
mov
aam
popf
cwtl
add
xor
xor
sub
mov
mov
ret
clc
out
mov
call
nop
mov
aas
into
movsb
cmpb
sub
aam
push
sti
jo
mov
dec
icebp
push
jmp
shr
xchg
cltd
xchg
push
scas
leave
sub
sbb
stc
bswap
fwait
push
movaps
pop
shrb
vpminub
imull
mov
repz
sub
xchg
out
cmpsb
scas
bound
stc
sbb
pop
aas
cmp
cmp
mov
pushf
xchg
inc
cmp
pop
inc
cmp
popf
int3
jb
cld
ret
adc
andb
cmp
sub
iret
call
xor
cmc
sbb
pop
notb
orb
push
cmp
test
lea
inc
inc
jns
jnp
pop
fsubs
jle
adc
push
jmp
mov
sub
fbld
mov
int3
pop
movsb
sub
sub
out
scas
mov
stos
add
push
xor
lods
mov
jge
in
sub
fldcw
popa
pop
cmp
adc
dec
and
and
cmp
jbe
and
cmc
xchg
mov
lret
cmp
fbld
jecxz
jge
in
pushl
fldl
cmc
push
fwait
jle
cli
sub
lret
cltd
cmc
repz
cltd
adc
ds
dec
popf
sbb
xlat
jg
loop
sub
movsl
scas
cmp
cwtl
in
scas
insb
mov
shrl
adc
in
test
lcall
mov
test
or
das
out
adc
dec
mov
or
and
sub
xor
lea
adc
std
cli
mov
cmp
repnz
in
xor
imul
movl
cli
xlat
lock
push
inc
pop
gs
stos
xor
adc
mov
xor
or
hlt
nop
rcll
repz
mov
ret
repz
cmp
xchg
pop
lods
in
mov
add
pop
jle
cmp
and
lock
sub
add
pop
sbb
mov
pop
lahf
mov
test
xchg
scas
sbb
sbb
into
stos
mov
int
test
add
xor
adc
aam
adc
push
and
pop
jns
data16
pop
sahf
roll
popf
adc
dec
push
int
insl
or
out
push
enter
test
scas
add
jl
repz
ret
push
imul
jg
clc
cmp
rep
xor
pop
arpl
into
adc
pop
pop
dec
notl
loop
sbb
jae
rclb
daa
cld
aad
inc
addl
push
jb
int
cmc
ja
pop
pop
add
mov
mov
inc
loop
mov
cltd
mov
mov
jne
or
jnp
and
mov
lock
data16
scas
popa
addl
dec
sti
sbb
loopne
sbb
decl
mov
fldcw
mov
jne
clc
in
std
mov
movsb
ja
push
fst
xchg
mov
jnp
jne
mov
cmpsb
test
push
add
and
xchg
enter
cmc
adc
test
fdecstp
push
in
cmc
sahf
dec
xor
dec
pushf
add
xchg
loop
loope
scas
adc
jge
incb
sbb
add
or
fisttpll
mov
popa
pop
push
mov
push
les
pusha
xor
mov
sbb
add
add
popa
fimuls
xlat
and
scas
sbbb
dec
sub
ret
std
idiv
jnp
out
xchg
cli
adc
popf
scas
jo
insl
pop
call
pop
xchg
cmpsb
pop
lahf
aad
ja
cmp
imul
repz
cmp
es
sahf
adc
jae
or
add
repnz
adc
push
xchg
or
call
and
sbb
sbb
sub
mov
push
inc
pop
mov
push
andb
sbb
fwait
or
nop
outsb
mov
mov
adc
xor
andl
and
push
xchg
sti
adc
adcl
cmpl
repz
test
lcall
imul
test
fiadds
xor
leave
aas
push
rcr
push
push
stos
filds
pop
and
das
notb
loop
pop
dec
test
dec
in
sbbb
xor
stos
insl
xchg
add
into
arpl
mov
xor
scas
inc
les
push
pusha
ror
in
sti
notl
or
nop
shl
adc
jae
adc
mov
and
adc
lds
loope
mov
sahf
sbbb
sbb
push
stos
dec
loop
outsb
jp
sarl
loopne
sbb
ret
xchg
lods
jmp
mov
mov
dec
std
sub
sub
out
popf
fisttpl
test
repz
mov
add
imul
arpl
pop
repnz
dec
loop
ret
adc
jne
mov
je
subl
push
scas
add
aaa
adc
ja
xchg
pop
sub
xchg
adc
ss
xorb
add
xchg
scas
xchg
jo
jns
jb
mov
dec
or
int3
pushf
pop
lret
jo
hlt
mov
mov
out
mov
lcall
out
scas
ljmp
loopne
push
adc
cld
dec
mov
repz
push
out
cmp
mov
xchg
ret
pusha
ljmp
mov
and
inc
test
loope
mov
test
stos
pushf
dec
jp
cmp
dec
popl
mov
add
dec
xor
pop
stc
lods
xchg
inc
push
in
fstpt
cli
bound
adc
and
je
inc
mov
in
popa
and
mov
push
sub
in
xor
loope
xor
in
test
negb
pusha
mov
mov
xlat
jns
mov
ds
lods
adc
and
push
adc
cmp
fwait
notl
jb
jbe
mov
movsl
ficoml
and
dec
cmpsl
lods
inc
jge
dec
lods
int
arpl
icebp
and
dec
cmp
test
mov
xchg
cmc
sub
push
jp
call
pop
sahf
in
pusha
mov
push
sub
xchg
test
shrl
adc
das
dec
push
push
dec
pop
mov
gs
push
inc
xor
add
lret
cmp
roll
loop
iret
pop
mov
fcoml
sub
inc
pop
push
pop
xchg
insl
xlat
add
mov
bound
sub
outsb
jno
or
sbb
mov
mov
mov
xor
fsubp
sarb
mov
je
scas
insl
aam
fsubrs
out
in
rcl
mov
sti
push
call
xchg
test
mov
adc
loop
jne
out
sbb
and
movl
push
cmpsl
pop
shrl
adc
jae
aaa
mov
pusha
push
incl
xchg
jp
xchg
cwtl
cmp
inc
cmpsb
inc
aas
fidivs
popf
jle
call
gs
imul
mov
mov
xor
xchg
and
jl
call
scas
dec
call
int3
add
inc
aam
push
mov
subl
sub
cmp
stos
int
pop
xchg
pop
xchg
jg
les
mov
arpl
or
sahf
addr16
add
das
jecxz
cltd
xchg
sub
mov
js
xor
notb
popa
repnz
fcom
lea
pop
inc
dec
jb
mov
popa
add
and
adc
movsb
test
gs
inc
dec
pop
mov
loope
or
repnz
jne
in
scas
into
rcrb
jge
repz
notl
xor
add
jbe
add
push
negl
push
cld
jg
in
jl
pop
xlat
repz
inc
xorb
aad
gs
pop
pushf
jl
mov
adc
pop
xrelease
ljmp
pushf
cmp
or
sub
dec
dec
sbb
sbb
adcb
push
inc
adc
fadds
adc
or
inc
add
jp
pop
xchg
insb
pop
dec
pop
imul
inc
imul
lods
fisubrs
mov
jl
add
or
push
pop
jns
fidivrl
psllq
xor
mov
sub
mov
pop
fisubrl
mov
cwtl
scas
popa
xor
lahf
pop
sbb
dec
shrb
xchg
cmpb
lcall
jmp
xor
pop
mov
mov
add
cmp
add
repz
rolb
and
fisttpl
orb
fdivrs
push
loop
pop
fistps
dec
xchg
jo
mov
shr
dec
lahf
mov
imul
sahf
hlt
jae
lds
adc
cmpsb
push
je
pop
jle
into
inc
pop
cmovge
sub
adcb
fwait
add
lods
ret
fs
js
stc
int3
mov
jge
add
pop
cmp
cmp
push
ja
jl
mov
or
sbb
bound
sub
jge
sbb
popa
jno
mov
aas
push
or
jecxz,pt
repz
loope
dec
loopne
push
mov
mov
xor
push
scas
hlt
test
xor
in
mov
dec
les
and
cmpsb
cmp
mov
push
push
enter
pop
mov
push
lock
ret
sub
popa
lcall
push
mov
and
adc
mov
cmp
jnp
pop
mov
inc
push
jmp
icebp
adc
scas
mov
nop
out
repz
pop
jns
or
loope
enter
out
std
nop
jo
jl
push
movsl
add
sub
movsb
imulw
clc
mov
jle
lret
push
imul
push
es
leave
addr16
lea
scas
pusha
xchg
je
inc
dec
add
inc
testl
lret
inc
mov
pop
lds
cmp
pop
nop
cmpsl
and
das
sbb
dec
out
xchg
fwait
scas
push
clc
push
mov
in
fistpl
xor
daa
add
cmp
push
dec
rcrb
js
mov
xlat
pop
push
leave
shll
push
cs
xchg
mov
shr
addl
cmp
inc
je
inc
mov
cmp
sbb
xor
std
sbb
or
rorb
jmp
mov
lea
or
push
dec
dec
into
dec
mov
mov
stos
flds
in
mov
sbb
jb
stos
lahf
mov
cmp
add
add
xchg
test
dec
push
inc
orb
push
xchg
sahf
sub
out
outsl
mov
cmc
xor
pop
xchg
inc
inc
xchg
jg,pt
gs
popf
adc
lahf
js
out
sahf
fnsave
in
or
mov
test
cld
fmull
push
xchg
shl
mov
ret
xchg
negb
sbb
mov
into
scas
bound
jb
ds
loope
mov
mov
movsl
bound
mov
xchg
mov
jmp
nop
movsb
sbb
mov
inc
jmp
popf
sub
adc
leave
push
xchg
movsb
adc
sbb
pop
mov
insl
dec
nop
daa
sbb
pusha
inc
out
out
mov
inc
jecxz
jno,pt
pusha
xor
das
inc
aam
mov
inc
dec
rcr
mov
push
pop
adc
mov
fsubl
imul
cmp
aaa
in
addr16
in
or
test
add
pop
push
jnp
pop
out
fcomps
shrb
into
mov
aaa
lds
les
jns
lahf
lock
imull
cli
jmp
mov
scas
add
lea
push
and
pop
repz
jae
inc
shlb
pushf
std
das
push
shl
xlat
jg
xchg
push
xlat
rcrl
jle
sub
insb
xchg
or
mov
es
jne
sbb
add
cmpsb
push
adc
movsl
mov
cltd
pop
ss
pop
push
pop
adcl
imul
xchg
and
test
data16
push
pop
mov
xchg
lret
xorl
inc
cmpsb
mov
imul
imul
or
lea
rcrl
dec
int3
mov
fsubr
outsl
push
push
mov
dec
stos
mov
mov
sub
leave
pop
mov
lock
push
xchg
or
int3
outsb
jne
clc
mov
jle
cmpsb
rorl
jp
adc
mov
rcll
mov
leave
push
clc
fdivp
mov
mov
nop
sub
lds
push
divl
cmp
jmp
push
sub
pop
jge
mov
das
test
imull
pop
mov
dec
mov
push
stos
inc
cmc
push
es
js
xor
pop
cs
fidivrl
fwait
repz
jo
pop
rcrb
mov
or
push
sub
mov
xor
push
mov
xlat
mov
xchg
repz
mov
adc
jo
jecxz
ret
xor
pop
test
rsm
fdivrs
lods
test
test
in
gs
popa
pop
pop
rorb
sub
add
mov
or
sti
loop
out
sbb
faddp
pop
push
mov
imul
inc
movsb
adc
into
rcl
outsb
pop
int3
sub
loopne
dec
xlat
xor
sbb
jnp
dec
es
add
mov
ss
dec
xor
test
imul
pop
mull
ret
inc
jne
mov
mov
lret
mov
gs
faddl
push
and
cmp
arpl
inc
xchg
push
jle
mov
jno
mov
or
es
and
and
fdiv
xor
int3
jge
std
xlat
fsub
mov
sbb
lcall
add
push
sub
or
sub
inc
add
jno
stos
in
mov
sbb
or
inc
adc
add
push
xchg
or
jbe
add
dec
out
in
adc
leave
pop
movsb
push
mov
leave
notb
loop
loop
pop
cmp
dec
and
cmp
cmp
es
roll
or
push
daa
sbb
scas
dec
push
sbb
inc
insl
es
cmpsb
ret
mov
sahf
testb
out
push
icebp
push
imul
call
dec
jae
cld
cs
push
inc
mov
push
mov
fdivs
pop
sub
ss
adc
jp
or
pop
cmp
cwtl
stc
xchg
jno
dec
dec
loop
or
mov
fistpll
or
je
adc
jno
sbb
push
jmp
out
imul
dec
lret
lahf
and
sti
mov
pop
jg
repz
or
inc
rol
xor
jge
loop
call
mov
bound
stos
dec
mov
mov
es
mov
test
pop
sbb
out
sbb
push
nop
mov
sub
imul
adc
fists
xchg
cmp
xchg
cmpsl
xchg
mov
mov
rol
mov
clc
pushf
jb
pop
mov
popa
in
and
pop
sub
testl
arpl
out
addb
pop
out
xchg
xchg
scas
xchg
xor
cwtl
stos
push
scas
nop
pop
pushf
loopne
sub
pushf
pop
rorb
add
sub
jb
insl
mov
lds
lcall
stc
sbb
int
clc
jp
cmc
mov
imul
mov
ret
cmpl
je
inc
xor
sbb
or
daa
fdivs
jmp
loop
jmp
hlt
mov
ds
repnz
int3
pop
xlat
mov
push
lahf
in
mov
test
xor
inc
add
jl
inc
iret
nop
repz
inc
mov
mov
pop
loop
sbb
cmpsl
mov
and
pop
lret
pop
and
je
pushf
in
stos
stc
lret
sub
shl
push
cmpsb
jecxz
dec
jp
cmp
mov
call
mov
pop
push
push
shll
xor
xlat
repz
push
mov
sub
insl
js
push
push
pop
sahf
sahf
mov
xchg
sub
inc
jns
and
rclb
xchg
mov
pop
jp
inc
aaa
push
cld
packuswb
jno
cmp
jo
enter
in
cmp
add
jnp
adc
dec
les
fstp
sarl
vprotw
shl
sbb
pop
cwtl
pushf
dec
lahf
adc
sub
stos
inc
pop
cmp
push
pop
fucomp
xchg
and
ljmp
vmovd
and
fcompl
sbb
stc
pop
push
inc
mov
inc
movsb
in
dec
pop
lret
push
mov
mov
mov
xchg
data16
sbb
cs
insb
cli
xor
roll
aaa
stc
loopne
sbb
test
shlb
xor
mov
jl
and
xchg
sahf
cli
push
ret
nop
imul
mov
adc
mov
cmp
push
mov
mov
icebp
dec
cmc
aaa
xor
es
jbe
sbb
ss
inc
data16
jg
ja
lods
sub
sub
inc
dec
or
add
or
scas
loop
push
dec
pop
or
pop
cli
or
mov
xor
jle
jecxz
mov
sbb
push
cmpsl
movsl
mov
xchg
or
in
ret
testl
aas
cmp
jnp
mov
or
dec
or
pop
loopne
sti
jle
dec
add
add
dec
pop
xor
sub
stos
mov
adc
jle
xchg
rcrl
leave
lea
jno
xchg
stos
lds
into
in
xlat
bound
push
in
out
inc
sti
cld
add
cmp
std
fnstcw
fdivrl
repnz
aad
icebp
out
mov
xor
nop
fadds
and
in
out
push
sbb
pusha
lods
cmp
add
ljmp
mov
in
push
dec
lods
fstps
push
xchg
or
jmp
mov
mov
add
lcall
push
nop
loop
or
outsl
cmp
mov
ds
add
frstors
das
dec
xchg
fs
xchg
push
cmp
pop
mov
int3
xor
jge
push
jbe
lcall
insb
aaa
xchg
repnz
lods
inc
push
push
rorb
cs
sub
mov
lret
stos
xchg
shll
rclb
cmp
cmp
jle
jbe
pop
sub
repz
lods
jns
popw
std
mov
les
sti
repz
dec
loop
jmp
aam
mov
mov
pop
aas
or
insl
sbb
push
and
jns
aad
pop
push
jp
orb
jae
push
mov
stc
cmp
test
pop
sahf
adc
cmp
xchg
cmp
insl
push
fisubl
clc
xor
xchg
cltd
push
xlat
adc
adc
test
sbbb
mov
jnp
push
xor
popf
jmp
jp
push
es
adc
cmp
inc
push
sub
pop
xor
jb
movsb
sub
xchg
fwait
push
adc
add
add
jmp
and
xchg
int3
test
ljmp
mov
or
push
add
xor
inc
jmp
insl
ljmp
cli
stos
inc
int
sub
icebp
and
add
faddl
xchg
pop
pop
insl
outsb
mov
ret
pop
push
aam
sub
repz
xor
addr16
movsl
sti
movsb
outsl
or
fs
cmpsb
and
or
push
jne
out
jg
into
inc
cmp
imul
call
inc
push
cltd
dec
out
pop
pop
pop
sbb
mov
mov
in
enter
dec
sub
push
xor
xor
mov
or
addb
out
cld
int
jo
pop
mov
rcll
jns
fst
mov
sbb
or
mov
mov
and
pusha
sbb
into
popa
jg
pop
imul
addr16
dec
add
xchg
mov
jnp
jl
test
insb
lea
repz
sbb
push
scas
cmc
loopne
mov
dec
test
jecxz
dec
inc
popf
fildll
and
inc
sub
mov
ret
cmc
outsb
aad
sub
dec
aam
in
fcoms
pop
jecxz
push
lods
shrl
xchg
xchg
imul
test
pop
pusha
pop
mov
aam
or
pop
dec
loop
popa
fsubs
pop
adc
inc
xchg
pop
cmp
aaa
movsl
addr16
push
jg
stc
mov
les
adc
push
std
and
push
or
push
add
and
hlt
push
xchg
and
add
mov
add
cltd
jmp
adc
jnp
pop
add
sbb
les
pop
xchg
push
int
aaa
dec
cmp
repnz
sub
lahf
mov
out
pop
test
push
and
insb
fstps
sub
push
mov
mov
mov
popa
add
clc
mov
leave
push
xor
xor
and
mov
negl
inc
or
push
jmp
testb
cli
lods
jmp
add
pop
out
dec
xor
mov
push
pushf
aam
cltd
mov
xchg
xchg
sub
cmp
in
ret
push
shl
inc
push
push
test
or
fsubrp
scas
add
dec
push
mov
push
push
iret
dec
test
lea
pop
popf
test
cmpsb
divl
pop
push
inc
mov
jns
and
mov
and
push
cmp
aaa
mov
add
cmpsl
imul
pop
sbb
leave
push
in
sbb
loope
ror
clc
sub
inc
mov
add
fisttps
xchg
ja
fs
mov
das
std
xlat
ljmp
insl
cmc
test
adc
data16
test
sub
jmp
in
adc
jb
popa
or
or
mov
xchg
inc
icebp
aas
ljmp
cmp
aas
mov
pop
add
fistpll
cmpb
sub
cmp
ret
jecxz
xchg
adc
sahf
call
lds
lret
jmp
out
cmp
jge
iret
mov
sbb
dec
outsb
xor
pop
sbb
imul
sub
push
mov
mov
rcrb
xchg
cmp
sbb
or
and
xor
fsubrs
mov
jle
rolb
inc
cmp
cld
lret
iret
loop
jo
or
lods
in
pop
jb
adc
out
enter
rolb
mov
xchg
mov
xchg
loop
sub
pop
adc
sbb
imul
xchg
sbb
adc
sbb
roll
pop
sbb
loop
mov
pop
pop
xor
cmp
or
cwtl
ss
push
and
cli
mov
pop
ja
scas
push
rclb
lods
and
inc
mov
mov
jmp
and
into
adc
pop
in
jns
jo
xorl
xor
movsl
rcl
movsl
int3
cmpsb
dec
imul
cmpsl
push
mov
fbld
mov
add
inc
mov
fwait
push
sbb
pusha
push
add
fldl
cli
aas
mov
add
add
cwtl
and
and
dec
in
aas
xlat
add
and
mov
cmpsl
inc
mov
mov
fnsave
sarl
xor
mov
sbb
push
add
mov
stc
cltd
es
out
push
push
xchg
loopne
push
jecxz
mov
mulb
das
lcall
add
mov
je
leave
ja
adc
imul
adc
data16
push
fisubl
sbb
add
xorl
lahf
mov
dec
hlt
pop
xchg
or
mull
cmp
das
sub
lcall
sub
lods
or
jg
negl
jp
xor
mov
sub
in
scas
dec
std
jnp
jp
and
jmp
mov
pop
cs
loope
div
movsb
mov
out
jns
inc
mov
jae
mov
js
jo
test
aaa
mulb
outsb
ret
mov
movsl
call
lods
call
pop
mov
fs
xchg
dec
dec
testl
push
das
pop
int3
or
fs
aaa
push
jp
iret
pop
or
lods
push
shlb
insb
bound
mov
mov
adc
mov
ja
xchg
xorl
loopne
adcl
loopne
push
dec
mov
mov
pop
dec
push
mov
push
sub
or
repnz
jge
sahf
repz
ljmp
cmp
test
pmuludq
inc
mov
sahf
or
xchg
in
adc
hlt
push
mov
xchg
sub
mov
pop
push
int
imull
outsl
jo
mov
sub
pop
test
pop
repz
aaa
imul
insl
xlat
or
mov
xchg
in
mov
scas
dec
lods
out
pop
std
sbb
movl
mov
int3
ret
ljmp
test
xchg
mov
orl
mov
cld
xchg
das
enter
and
pop
int
movsb
push
mov
testb
call
movsb
sbb
data16
jbe
mov
mov
xchg
dec
pop
ja
jmp
xor
data16
jmp
inc
xchg
fdivrs
js
ss
nop
xor
mov
testl
jl
or
repnz
or
test
stc
adc
add
dec
push
jmp
movsl
xchg
insb
fisttps
mov
hlt
jns
cltd
xor
mov
sub
inc
sti
xchg
mov
add
popf
add
pop
mov
inc
aam
ret
and
mov
push
mov
lock
test
repnz
or
fstl
xchg
mov
mov
add
sub
lcall
add
cwtl
xchg
insb
aad
mov
mov
xchg
daa
arpl
jb
cmp
mov
pop
add
push
push
jnp
pusha
and
sbb
fildl
cmp
insl
and
sti
sarl
push
daa
and
int3
orl
rcl
aam
out
mov
mov
or
imul
in
int
adc
adc
popa
sub
movsb
add
insb
lock
fstpt
call
es
mov
in
mov
cmp
test
add
push
in
test
imul
das
pop
mov
enter
jl
outsl
ja
test
sub
mov
add
notb
xchg
mov
ret
adc
insl
arpl
icebp
inc
adc
out
lret
sbb
jns
js
lods
pop
sub
xor
jecxz
pop
inc
loopne
xor
test
stos
test
adc
sbb
ret
cmpsl
push
inc
stos
mov
sub
and
dec
test
push
cmp
sub
inc
dec
jno
nop
ds
and
jge
arpl
xor
xchg
pop
insb
dec
inc
ret
lds
mov
add
scas
loope
ficoml
cltd
in
std
sbb
mov
inc
pop
dec
sahf
sbb
es
ret
in
fcomps
test
mov
and
rclb
neg
int3
jmp
iret
lods
inc
xor
push
aas
cli
adc
xchg
cmc
imul
cmp
nop
push
push
mov
scas
cld
scas
and
xchg
ret
loop
mov
cmp
sub
pop
mov
popf
sbb
test
lret
jnp
xchg
mov
les
xor
push
add
xchg
outsb
sub
popa
lock
test
sbb
jno
leave
lods
addr16
imul
loopne
out
xor
int3
push
ds
retw
mov
or
mov
imul
lret
sub
hlt
cmp
insl
xchg
test
aam
sub
sbb
pushf
mov
test
cmp
in
popa
or
aas
iret
push
xchg
inc
dec
jp
sub
pop
cltd
jecxz
add
nop
test
dec
addr16
mov
idivb
fsubs
xchg
mov
cmp
adc
outsb
xchg
pushf
or
dec
in
popa
mov
mov
out
push
lcall
adc
mov
mov
shlb
add
subb
pusha
sahf
dec
fnstsw
push
notl
ja
push
dec
mov
mov
fdivs
cwtl
pop
hlt
xor
es
xchg
sub
jl
aaa
outsb
jecxz
dec
imul
push
xchg
fisttpll
jmp
mov
mov
push
cmp
out
xlat
mov
loopne
mov
ror
cltd
addb
dec
fsubl
xchg
sub
icebp
ljmp
adc
das
and
push
jns
repnz
dec
inc
dec
dec
jnp
ja
mov
xchg
xor
pop
aad
sbb
xor
fs
xchg
pop
fwait
sbbb
aaa
stc
cwtl
jl
push
mov
cli
and
cltd
or
cmpsb
and
inc
or
test
je
lock
mov
fld
cmc
xor
imul
ss
push
mov
ss
sbb
jmp
cs
and
sub
xchg
ja
ja
sbb
xchg
adc
out
dec
add
lret
cmp
pop
mov
in
inc
mov
push
scas
push
jbe
lock
imulb
cmc
ds
hlt
add
jno
scas
repnz
mov
cmp
fistpll
fbstp
movsl
sbb
push
dec
dec
adcb
loop
push
sbb
test
inc
cmpl
push
dec
jne
push
cmp
imul
roll
adc
inc
jp
cmc
in
dec
test
lret
subl
jl
cmpl
push
push
jp
pop
scas
xor
fisubs
frstor
xlat
enter
jg
orl
add
data16
pop
jae
cwtl
mov
ss
sar
dec
cs
adc
add
arpl
fmull
xchg
into
ljmp
test
js
addr16
mov
dec
or
push
jns
push
movsl
xor
or
fbld
mov
lret
xchg
std
or
in
sar
inc
adc
loop
leave
shll
aam
lods
int
dec
test
sbb
sbbb
dec
out
ds
loopne
push
andb
rcrb
push
push
lret
es
jp
sbb
mov
mov
mov
rcrl
nop
inc
enter
idivb
insb
mov
in
xor
aaa
push
outsl
aaa
ss
out
movsb
mov
fwait
mov
nop
and
in
in
adc
mov
jecxz
fucomip
or
or
cs
add
les
push
test
cwtl
cmp
push
leave
and
push
aas
clc
jb
imul
sbb
dec
lret
out
sbb
bound
mov
add
sti
pusha
inc
add
adc
ljmp
jmp
loope
sbb
sub
lock
lret
mov
or
mov
pop
cld
mov
in
test
add
divb
push
paddusb
je
mov
fcompl
mov
lds
js
or
pop
pop
clc
fldl
insl
mov
mov
sbb
call
stos
rclb
leave
jns
nop
adc
mov
inc
mov
int
ret
scas
push
test
nop
mov
sbb
push
fmulp
or
sbb
mov
add
aam
fsubrl
mov
push
jg
pop
add
push
mov
insb
xlat
lret
sub
xchg
repnz
ja
js
inc
mov
mov
jo
and
xor
xchg
sub
mov
and
frstor
dec
rorb
lds
and
sub
xlat
push
nop
cmp
pusha
fidivrl
not
fisttpl
pop
mov
gs
xchg
push
out
iret
mov
sub
add
das
cmp
add
aam
push
sub
jnp
pop
pop
aaa
cmp
mov
in
aad
jae
xlat
jge
sahf
push
and
nop
xchg
test
and
adc
add
inc
bound
mov
ljmp
and
lcall
cmc
dec
cmpsb
cmpsb
cmp
jp
aaa
jecxz
stos
mull
mov
imul
aas
rclb
stos
mov
gs
loop
imulb
stc
out
push
jb
cltd
jno
sbb
fndisi(8087
cmp
dec
push
or
loope
mov
iret
mov
daa
mov
arpl
js
loop
sbb
jge
scas
in
pop
sbb
cmp
out
xor
lods
sub
insl
dec
cmp
sub
loopne
idivl
jne
insb
imul
push
int3
je
andb
lcall
aaa
enter
dec
xchg
mov
jmp
xor
insb
leave
addr16
mov
mov
mov
push
or
test
aaa
test
imul
adc
dec
in
enter
in
aas
ret
mov
insb
test
les
xor
ja
sub
orb
daa
and
jmp
aas
mov
jb
call
ss
pop
nop
xchg
mov
push
fldt
push
cmp
test
inc
leave
cmp
mov
mov
popf
cli
ret
ss
inc
inc
pushf
cmc
push
movsb
cmpb
ljmp
fs
cs
and
fcmovne
lods
adc
and
fistpll
out
sbb
cmp
fadds
sbb
ljmp
add
dec
push
add
jle
jae
or
lcall
xor
push
inc
push
mov
fs
xor
mov
inc
std
inc
iret
std
sub
iret
mov
lahf
fisubrl
aas
stos
test
ficomps
jle
fsubrl
in
fs
cwtl
jg
stc
das
jg
sbb
fidivl
jne
sbb
notl
je
xchg
mov
and
pop
fisubl
js
fistl
divb
jbe
add
outsl
mov
mov
jno
jb
stos
fwait
jno
shlb
loope
mov
leave
push
test
inc
inc
adc
or
push
inc
xor
sbb
cmp
and
scas
add
and
enter
cmp
xor
jae
movsb
lods
cmp
loop
out
fldl
aad
sub
xchg
movsl
adcb
push
out
lds
imul
lock
jae
lret
sub
mov
ds
cmp
sub
rcrl
mov
mov
add
add
sbb
loop
gs
out
adc
loop
gs
loop
ja
jns
cmp
jb
dec
in
bound
xor
lret
subb
divl
mov
int
loope
js
xor
or
pop
bound
sahf
cmc
pop
fdivs
inc
jo
shll
out
jge
packsswb
mov
test
dec
sub
es
jb
gs
mov
xchg
loope
dec
lods
pusha
sbb
sbb
je
cmp
cmp
jge
imul
xchg
push
jb
and
xor
sarl
mov
inc
loope
jecxz
andb
or
lods
sbbl
mov
sbb
jl
ss
push
in
pop
push
cmp
test
clc
ljmp
dec
jg
mov
les
ret
inc
sub
mov
shlb
les
and
mov
sub
cwtl
xor
das
dec
and
add
cmp
mov
add
in
pop
push
ljmp
gs
leave
push
daa
int
test
pop
mov
inc
mov
mov
inc
stc
insl
popa
and
sub
mov
mov
aas
push
mov
ret
add
push
mov
orb
xchg
push
gs
lea
and
cmpsb
inc
add
xchg
cmp
inc
int
adc
fnstcw
push
add
lock
adc
add
dec
hlt
mov
push
mov
movsl
jl
push
sbb
addr16
inc
shlb
imul
scas
xor
dec
das
xor
pop
in
pop
or
imul
lock
lods
dec
shr
test
push
scas
insb
dec
pop
andb
repz
in
repnz
adc
dec
rcll
shl
je
imul
sub
imul
cltd
test
pushf
and
test
sbb
push
mov
lret
jge
fnstenv
in
add
std
mov
dec
sub
lcall
in
movsl
xor
insl
pop
cmp
scas
repz
bswap
add
bound
sub
dec
shrl
frndint
test
loopne
sub
mov
mov
fcmovbe
or
mov
cmp
mov
js
mov
mov
push
adc
or
bound
cmp
into
push
imul
aas
pop
pop
out
clc
push
cli
dec
enter
sbb
cs
xchg
mov
mov
push
out
xchg
add
jle
xchg
cld
int3
icebp
cmp
psubw
fsubs
andb
arpl
xchg
int3
sbb
cmp
dec
jl
pop
mov
cmp
push
fcoml
xlat
pop
xchg
push
cmp
int
xor
repz
fdiv
xchg
jno
adcb
fisttps
jle
pop
or
dec
xchg
ja
pop
dec
repnz
lods
testb
subb
xchg
js
jne
call
in
and
push
or
or
int3
xor
popa
mov
cmp
decb
hlt
or
ret
pop
lods
mov
mov
imul
out
adc
movsb
in
stos
fwait
movsl
or
mov
stos
adc
leave
scas
mov
mov
nop
sbb
imul
icebp
jp
mov
mov
xchg
or
je
pop
xor
gs
mov
lods
insb
mov
jno
sub
dec
in
or
sahf
adc
call
cmp
fwait
jge
xor
pop
push
sub
iret
lock
pop
cmc
ret
mov
ds
mov
das
testl
inc
pushl
or
mov
mov
add
jno
cwtl
idivl
test
loope
jmp
sbb
jns
or
jg
mov
sbb
jnp
pop
pop
xchg
adcl
push
or
aam
aam
adc
pop
or
jae
or
cs
push
mov
stc
mov
mov
lods
dec
jno
mov
inc
push
shrl
add
mov
outsb
lods
popa
hlt
fcom
xchg
sub
xor
xor
push
popa
mov
mov
mov
sub
sub
jge
xchg
xchg
fnstcw
sti
push
dec
fstps
add
jae
insl
icebp
movsb
xchg
gs
scas
out
mov
adc
inc
jno
jb
gs
xchg
insb
adc
and
push
pop
or
adc
aas
xor
mov
out
leave
loop
and
stc
push
fwait
sbb
in
inc
popf
jbe
add
xor
stos
xchg
outsl
dec
std
mov
mov
and
mov
xor
pop
shl
pop
pop
xchg
push
mov
and
push
and
dec
fnsave
inc
js
cmp
sti
data16
in
cmp
mov
movsl
xchg
xchg
and
push
outsb
add
jecxz
pop
test
fsubrl
or
push
adc
lret
insl
lods
mov
mov
bound
mov
pop
ret
daa
mov
sub
lret
std
outsl
push
enter
adc
xchg
sbb
ja
and
push
scas
or
aas
sbb
push
jbe
jg
dec
jo
xchg
sbb
test
or
adc
or
gs
jle
xchg
es
aam
jge
sbb
in
jg
movsb
dec
out
sub
lcall
or
lret
lahf
inc
jno
sbb
lods
pop
jle
sub
lret
enter
fldl
dec
lret
mulb
aam
fcomi
ljmp
adc
out
adcb
clc
popf
ss
mov
loop
insl
mov
addr16
lods
mov
aaa
or
mov
dec
add
add
or
out
cmp
cmp
mov
mov
sbb
add
and
cwtl
add
jne
inc
outsl
pop
mov
and
fnstcw
mov
jmp
jns
dec
lcall
mov
popa
adc
xor
das
dec
cmpsb
bound
sbb
add
lea
ss
mov
push
fnstenv
jl
mov
movb
push
jae
int3
cmp
cmp
ds
jbe
or
mov
or
or
dec
mov
pop
sti
xlat
xor
data16
push
cmpsb
adc
iret
push
mov
fisubl
mov
lahf
push
push
inc
adc
mov
push
push
mov
lahf
sub
xor
cmp
mov
js
xchg
or
sbb
push
jns
pop
xchg
add
sbb
inc
aas
push
nop
xchg
lds
das
mov
lock
clc
arpl
pop
lret
xchg
mov
mov
jb
sbb
arpl
jg
xor
push
sqrtps
adc
das
es
xlat
cmp
cmc
inc
mov
idiv
cmp
stos
shrb
cmp
int3
dec
in
es
cmpsb
cmp
std
arpl
dec
or
dec
ljmp
push
shrb
sbb
mov
fsubrl
push
gs
push
or
sbb
pop
pusha
xchg
adc
inc
xor
xchg
aas
jb
push
or
int3
cld
insl
out
loope
fidivrl
jno
mov
dec
fldt
jecxz
cmp
xor
sbb
add
adcb
aam
fwait
mov
pop
adc
mov
insb
xchg
add
addr16
xchg
orl
aaa
inc
mov
cmp
or
inc
int
sbb
push
in
ret
push
adc
xor
stos
ja
orl
and
push
call
in
dec
movsl
add
jmp
mov
pop
pushf
xchg
xor
xor
fisttpll
lock
jmp
dec
lock
mov
mov
sbb
psrad
lret
and
push
mov
decb
pop
rorb
jmp
xchg
push
mov
idivl
mov
adc
sbb
fcmovne
mov
gs
gs
ds
mov
enter
mov
mov
mov
dec
mov
xor
ret
mov
rclb
sbb
cwtl
xor
mov
adc
push
dec
cmp
lea
in
pop
dec
cmp
cld
cmpsl
and
dec
jns
pop
pop
roll
movsb
inc
or
ficompl
aaa
pop
popa
mov
shrl
test
jb
aaa
loop
jecxz
sub
or
xor
repz
into
push
sar
xorb
cwtl
inc
shll
lock
fisttps
arpl
mov
clc
mov
dec
xchg
imul
fdivr
inc
pop
popa
xor
cmpsl
mov
dec
jo
mov
jp
push
insb
add
test
dec
repz
adc
or
xlat
in
repnz
mov
adc
jle
add
adc
ret
sbb
fdivs
xchg
test
pop
xchg
jmp
push
fiaddl
xchg
mov
out
movsl
and
push
push
sbb
sarb
insb
ss
mov
or
insl
sti
xor
js
sysret
and
xor
fucomip
sub
dec
mov
mov
hlt
add
dec
hlt
pop
jo
adc
nop
mov
or
sbb
jne
sbb
jecxz
popl
dec
xor
push
cmp
sti
jecxz
loope
jns
mov
push
dec
jg
sbb
nop
dec
out
mov
rcrl
loopne
popf
mov
mov
fdivrl
das
push
test
addr16
and
mov
mov
fs
js
cltd
lea
icebp
lahf
out
aam
xchg
mov
add
dec
push
pop
mov
dec
adc
xor
movsb
ss
xchg
repz
ljmp
push
sbb
xchg
rcrb
shlb
dec
mov
and
cmp
es
and
cmp
xor
cmp
add
push
insb
xchg
adc
lea
push
sub
testb
inc
rcl
cmp
push
mov
imull
ret
lret
push
jmp
mov
adc
imul
add
pop
adc
jmp
cs
int3
fildll
pop
cmp
int
lods
repnz
xor
cmp
scas
imul
sub
push
mov
push
inc
sub
lock
das
lock
lret
test
mov
mov
cld
std
mov
decl
adc
and
cmpsb
ret
xchg
dec
jno
or
or
clc
out
dec
shlb
test
stos
into
and
std
xchg
outsb
mov
into
lock
test
test
jb
mov
sbb
jmp
mov
adc
adc
fstpl
mov
push
ja
int
push
xorb
add
and
fwait
push
inc
arpl
add
adc
pop
ret
adc
ja
mov
stc
lret
iret
adc
in
hlt
pop
cmpsb
les
and
jne
scas
stos
data16
popf
sbb
clc
dec
mov
mov
push
adc
idivb
fldl
mov
stos
lods
repz
mov
cmc
lcall
xchg
mov
adc
and
aam
mov
add
xor
lea
ds
mov
or
sbb
mov
jno
or
sahf
inc
stos
stc
adc
xchg
mov
pop
cmp
xadd
pop
sub
pop
rclb
ljmp
enter
nop
in
filds
jo
sub
inc
mov
mov
jl
mov
sub
cwtl
push
cli
cs
aad
pop
lahf
cmpsl
and
shll
clc
insl
fdivr
imull
aaa
mov
pop
movsl
ds
scas
test
stc
sub
sarl
aas
add
xor
lods
push
in
jne
push
jle
sub
inc
mov
mov
push
syscall
leave
arpl
sbb
xor
mov
mov
push
fwait
ret
or
cmp
andl
xor
add
push
stos
in
sbb
repz
int
dec
je
mov
and
or
les
mov
adc
leave
jo
inc
mov
sti
fidivl
inc
xchg
sbb
or
mov
pop
xor
add
pop
loop
stos
stos
inc
mov
or
jecxz
pop
xchg
adc
mov
xchg
push
out
clc
imul
push
push
addr16
out
je
out
sbb
mov
aaa
sbb
imul
nop
lods
mov
jns
test
je
inc
xchg
pop
dec
scas
and
stos
jb
loopne
jns
add
and
in
dec
jne
jg
and
jmp
inc
lods
push
mov
add
std
cmpl
dec
mov
andl
pop
jmp
lods
in
in
or
dec
ja
stos
cmp
sub
addr16
repnz
jno
inc
insl
sbb
mov
xchg
cltd
test
fcomps
addr16
jns
mov
inc
cvtps2pd
scas
inc
addr16
or
bound
cmpsb
into
aad
gs
clc
jp
rcll
mov
pop
dec
pop
loopne
addr16
les
adcl
sub
mov
sbb
mov
ficoms
test
inc
adcb
jle
out
lds
sahf
arpl
mov
pop
and
push
cmp
adc
mov
imul
xchg
fs
cltd
ret
sbb
inc
mov
imull
ja
lods
cmp
jb
movsb
cwtl
sbb
rorl
pop
shll
aaa
or
jle
jl
mov
mov
jo
call
outsl
je
cwtl
xor
jmp
sub
pop
addb
in
es
jae
or
popf
inc
pusha
mov
mov
xor
jl
add
test
pusha
mov
xlat
or
lret
jmp
in
and
adc
xchg
mov
jae
pop
shrb
and
sbb
ret
inc
out
insb
pushf
pop
adc
dec
int
push
ret
jns
mov
mov
or
loop
cli
push
sub
add
and
fcmovne
sbb
mov
cwtl
dec
in
push
dec
jl
imul
jb
push
in
shl
or
mov
cli
ret
gs
and
into
aas
or
push
and
or
inc
lods
inc
loop
dec
rorb
outsl
inc
inc
or
push
ss
lret
adc
mov
aaa
andl
loopne
andb
pop
mov
dec
ret
pop
cwtl
fidivrl
test
or
inc
mov
pop
ds
daa
pushl
mov
mov
ljmp
xchg
pop
xor
movsb
aam
loop
rcll
add
sub
mov
nop
jae
out
xor
xchg
lahf
ds
pusha
cmp
jge
fcmovb
xchg
or
lock
cmp
or
loopne
mov
jb
int3
pop
pop
adc
cltd
test
repnz
pop
call
push
inc
cmp
sbb
out
jecxz
push
pop
mov
mov
push
add
ror
add
xor
mov
pop
and
fisubs
cltd
aad
push
mov
sbb
jge
ss
cmp
jp
cmc
xchg
sub
xor
push
dec
adc
les
mov
jo
sbb
loope
movb
push
fnstsw
cmp
inc
sti
jbe
ficompl
cmp
and
cmpsb
sbb
in
and
cmp
out
sbb
push
ss
ret
or
stos
mov
stos
adc
push
into
xchg
jo
push
mov
push
cli
jnp
adc
pushf
stos
xor
cld
aaa
fs
roll
shl
hlt
adc
cwtl
cmp
add
pop
adc
iret
inc
adc
pop
xchg
sti
dec
enter
subb
fs
inc
addr16
ret
clc
adc
or
xor
loopne
mov
inc
mov
clc
sbb
push
adc
or
popf
xor
in
jge
int
jle
inc
jo
mov
sbb
or
jb
sbb
pop
push
add
and
rcrl
pop
ljmp
cld
out
and
jne
lcall
cltd
pop
test
pop
mov
dec
jecxz
dec
mov
fisubrs
xchg
xchg
pop
xchg
mov
push
xor
nop
call
push
sub
cmp
sbb
test
cmpl
loop
outsb
das
out
pusha
out
jl
sahf
xlat
xchg
popf
sbb
mov
aas
fldt
push
scas
cli
jns
inc
gs
icebp
adc
add
fwait
push
jmp
jae
and
in
jle
mov
push
lahf
call
xor
rclb
inc
mov
or
add
imul
lahf
shrl
and
xor
vmovdqu
out
xor
mov
fidivrs
mulb
sti
push
mov
xchg
mov
dec
xchg
inc
mov
cltd
adc
pop
and
sub
popf
bound
rolb
jo
sbb
inc
sarl
lods
mov
mov
cwtl
enter
mov
jle
in
mov
dec
ljmp
adc
sub
push
push
jbe
ret
mov
cmpsl
insb
mov
jge
rclb
lret
lods
cli
test
fbld
pusha
enter
cli
pop
or
data16
push
cmpsb
xchg
and
loope
pop
adc
sub
aad
and
dec
mov
sub
cmc
pop
xchg
enter
jle
fmulp
iret
stos
popa
adc
xchg
insb
cmpsl
cmp
inc
xorl
xchg
and
scas
lcall
push
test
mov
cmc
dec
or
test
xrelease
cwtl
pop
inc
ret
fs
movsl
out
xchg
adc
xor
push
and
mov
data16
mov
push
insl
jle
out
cmpsl
aam
jmp
or
ds
jmp
es
lods
fistpl
mov
pushl
jno
xor
pushf
fisttpll
aas
cltd
mov
jne
fs
push
daa
dec
fmul
sbb
push
or
xor
push
xchg
mov
adc
xor
dec
clts
sbb
aam
mov
adc
jp
ljmp
popa
fucomi
dec
jnp
add
orl
pop
cli
fbld
xchg
repz
jmp
pop
or
in
out
mov
fnstsw
dec
mov
call
sbb
pop
popf
add
leave
movsb
scas
sub
inc
xor
ret
pop
push
add
dec
lea
jecxz
xchg
push
ficoms
fnstcw
push
or
sbb
dec
fmuls
outsb
mov
or
xor
xchg
sub
hlt
xchg
pushf
cmp
test
inc
push
push
out
pusha
sub
push
lahf
pushf
pop
add
enter
call
sbb
sub
and
or
xchg
mov
ret
mov
xchg
mov
mov
add
pop
ljmp
xlat
push
jb
cwtl
out
loope
stos
or
dec
ja,pt
inc
xor
stos
lock
adc
pop
push
mov
sbb
addr16
jnp
pushf
bound
arpl
cmp
vunpcklps
lds
mov
faddl
pop
call
lock
fmul
jb
inc
inc
push
insb
xchg
add
cmc
ljmp
adc
mov
pushf
int3
outsl
popa
fucomip
adc
lret
add
fucom
ljmp
paddusb
or
outsl
dec
sub
mov
je
test
push
mov
jp
push
fimull
frndint
imul
add
dec
and
add
xchg
popf
js
add
jecxz
ret
mov
push
pop
mov
mov
and
cs
adc
jmp
mov
insb
mov
stos
popf
cmpsl
or
shll
inc
pushf
inc
inc
cwtl
leave
inc
bnd
dec
test
cwtl
leave
pop
xchg
mov
cmp
imul
addr16
or
push
hlt
inc
or
pop
jmp
std
sti
push
dec
sahf
outsb
mov
mov
cltd
icebp
das
movsl
mov
jge
cld
out
mov
or
cld
mov
jge
sub
mov
add
dec
lcall
add
sarl
inc
dec
adc
add
dec
mov
rcl
push
daa
or
mov
push
pop
pop
xchg
stos
imul
ja
jne
xor
rorl
bound
adc
sti
lret
pop
jno
xlat
jnp,pt
push
adc
inc
repnz
cmp
push
addr16
add
insl
test
mov
fisubs
xchg
loope
jne
repnz
inc
push
les
notb
rclb
jns
paddsw
inc
rorb
mov
push
lahf
hlt
adc
push
pop
mov
fsubs
cmp
pop
cmpsl
ss
lcall
ficompl
inc
push
xor
mov
ret
jbe
lcall
into
mov
in
sub
iret
repnz
mov
test
xchg
ds
sub
mov
mov
adc
js
ljmp
mov
mov
rclb
mov
outsl
inc
adc
addr16
dec
or
dec
cltd
call
xor
lahf
cmp
sahf
cmp
mov
push
inc
jb
mov
and
xor
iret
sti
xchg
pop
ret
dec
cmp
hlt
movsl
mov
test
leave
repz
ss
xor
lods
mov
out
xor
mov
push
lcall
aas
push
or
clc
cmp
cmp
dec
mov
mov
pop
and
cmp
jl
loop
lret
add
pop
lret
xor
dec
add
fstpt
inc
cld
jmp
cld
movsb
push
push
insb
mov
out
aad
xor
or
mov
dec
mov
js
std
fistps
add
fisubl
lcall
mov
xchg
in
in
sbb
pop
xor
andl
sbb
sbb
out
daa
lods
add
cmp
jmp
cmc
pop
ss
ror
fwait
in
mov
int3
sbbl
in
jmp
rclb
lock
sahf
xchg
fstpt
inc
icebp
mov
and
nop
fld
insb
aas
rolb
popa
inc
pop
add
setb
out
push
mov
nop
gs
hlt
arpl
nop
pop
dec
sbb
nop
insl
out
sti
push
xor
cli
or
pop
push
dec
insl
je
pop
sahf
jle
push
fsubrs
aam
pop
sub
ja
cmpb
lahf
push
stc
jecxz
cmpsl
enter
outsl
pop
sub
jg
in
aaa
dec
addr16
fistl
xchg
mul
xchg
stos
outsb
ret
es
aas
mov
es
xlat
inc
imull
aaa
push
xor
add
dec
pushf
xor
lea
lret
mov
jno
call
push
mov
mov
loope
test
scas
hlt
into
and
mov
nop
sub
sub
jns
pop
std
push
and
add
and
xor
rcrl
xchg
inc
adc
cs
push
push
pop
popa
sbb
cmc
or
pop
filds
out
dec
testl
sti
dec
or
stos
mov
popf
lods
inc
dec
ds
cmc
ret
dec
in
adc
xchg
call
jl
inc
inc
cmp
dec
push
push
ljmp
aaa
dec
mov
pop
jmp
or
lds
add
sub
imul
test
call
dec
xor
sub
les
scas
bnd
test
or
dec
add
inc
mov
aad
int
pushf
gs
cmp
sub
test
sbb
lahf
test
adc
and
push
fstl
test
imul
xchg
mov
mov
and
add
dec
pop
and
mov
dec
or
jb
mov
mov
paddq
addr16
mov
mov
mov
xchg
mov
mov
mov
nop
stos
stos
jle
aad
test
xor
mov
les
je
sbb
xor
push
in
mov
into
adc
fsubrs
imulb
data16
pop
scas
sub
lds
insb
fiadds
pop
xor
popf
xlat
push
mov
push
pop
or
push
movsb
push
lock
mov
inc
mov
mov
aad
push
iret
leave
cli
cmp
gs
xchg
mov
add
test
out
and
in
addr16
and
jl
jecxz
daa
cmpl
lods
je
repnz
cmp
pop
inc
mov
adc
clc
add
xor
andl
dec
inc
add
div
jno
stos
int3
mov
fisubs
out
movsl
pop
fs
imul
adc
lahf
dec
std
push
bound
and
ficoml
xchg
pop
iret
sti
mov
mov
out
push
clc
mov
ss
mov
mov
xchg
pop
call
mov
jmp
out
mov
and
lcall
iret
jns
imul
es
pop
pop
incb
or
insl
fcmovb
xchg
xchg
in
inc
sahf
enter
or
popf
cltd
dec
jnp
inc
sbb
push
fisubs
notl
jb
repnz
not
lods
xchg
ja
mov
out
rep
test
mov
mov
loopne
cmp
jb
fs
and
addr16
push
stos
ficoms
inc
adc
mov
sbb
or
mov
sub
daa
pop
jb
cs
cltd
add
xlat
jge
fdivrp
jns
addr16
adc
loop
incl
in
mov
aam
mov
es
cmpsb
fidivs
sub
cmc
stc
lds
lods
dec
inc
pop
lock
orb
pop
fadds
and
sub
jle
and
stos
adc
pushf
adc
aad
mov
es
or
mov
add
std
jns
ss
sbb
and
push
dec
les
test
ljmp
loop
pop
sub
jecxz
pop
idiv
scas
pop
es
dec
inc
or
inc
push
dec
popa
icebp
sbb
xchg
sub
loope
xchg
popf
stos
jp
sub
cmp
mov
and
pop
mov
aaa
gs
imul
daa
repz
popa
jg
nop
push
add
cli
jo
push
lods
add
mul
out
xorb
adc
mov
call
sbb
push
jmp
xchg
ret
jp
inc
mov
xor
sbb
xlat
cmp
and
and
test
cld
repz
pop
jbe
popa
rorb
mov
inc
push
cmpsb
add
fidivrs
push
jmp
xchg
aad
fildll
sbb
dec
hlt
mov
mov
cmpb
mov
cld
inc
les
pop
in
out
xchg
mov
scas
xor
add
daa
adc
xchg
stc
ret
jecxz
add
mov
adc
push
popa
shlb
pop
jg
or
jae
daa
cmpsl
mov
jmp
aaa
shrb
pushf
outsl
int
mov
sahf
adc
in
icebp
mov
lcall
pop
ds
fisttpll
jns
hlt
std
dec
jae
sub
addb
xor
js
ja
dec
push
out
in
insl
xchg
orl
std
lret
mov
dec
jae
popf
adc
add
pop
addb
iret
inc
xchg
fs
in
arpl
mov
sub
ficompl
xchg
ja
loope
sahf
xor
sub
xlat
adc
jnp
push
rcl
insl
xchg
sti
shll
or
or
xor
fisubrl
cli
out
fwait
andb
ja
xchg
mov
iret
int3
jl
or
mov
push
inc
cmp
and
lea
add
add
mov
or
in
or
pop
aaa
mov
xchg
jg
jmp
inc
sub
loopne
cmp
repnz
cmpsl
jg
test
mull
push
add
addr16
xor
mov
jnp
mov
jb
cmp
in
cmpsb
nop
or
jg
std
sub
push
rcl
icebp
stos
and
pop
dec
je
js
adc
sahf
or
mov
mov
lahf
pushf
icebp
xor
pop
loope
push
outsb
xor
adc
rcr
and
or
mov
adc
gs
xchg
mov
fwait
or
pop
bound
out
xor
push
cmp
mov
push
out
xchg
sbb
dec
push
jae
lret
popa
sub
mov
test
add
jno
push
cli
ja
mov
xor
xchg
in
adc
sub
or
push
xor
cmp
sbb
inc
imul
nop
xchg
aad
fldt
cs
and
jbe
xchg
xchg
sti
popl
pop
daa
icebp
incb
scas
vmwrite
jl
insl
jae
gs
ss
bound
and
pop
push
aas
cmp
rcll
divl
add
ret
mov
cli
dec
push
sub
sti
cs
and
xor
adc
out
mov
push
sahf
sub
insl
shll
pop
xchg
push
mov
in
add
pop
dec
shrb
sbb
inc
xlat
cmp
mov
xor
pop
mov
mov
subb
sbb
ljmp
js
in
sbb
rcr
add
addr16
repnz
icebp
jne
enter
imul
sbb
dec
scas
mov
mov
les
es
ljmp
ja
and
scas
into
mov
scas
and
mov
jmp
or
mov
lds
call
mov
pop
mov
xlat
pop
or
fistl
into
imul
pop
sub
sti
pop
movhps
rorl
mov
add
lods
pop
push
cmp
lcall
ds
pop
or
sub
jns
insl
add
lods
add
sub
inc
mov
jecxz
jl
adc
bound
inc
sub
or
xor
jle
xchg
cmp
test
shll
inc
idivb
inc
xlat
mov
add
in
lret
cmc
aas
mov
pushf
test
mov
xchg
je
pushf
decb
jle
movsb
imul
dec
xchg
lret
xor
stos
push
into
or
inc
lret
dec
push
shll
add
mov
and
push
and
loope
es
cltd
int
inc
xor
lahf
xchg
shll
repz
aam
or
dec
nop
dec
jne
pushf
mov
xor
xchg
push
xlat
mov
mov
mov
fsubs
out
sub
add
bound
sti
pop
adc
lea
aad
lahf
call
xlat
test
das
inc
push
out
insl
mov
dec
cwtl
sub
cld
sub
int
filds
sub
sub
in
cmp
popf
data16
ja
subb
call
mov
test
jp
pop
inc
adc
repz
dec
insl
ljmp
call
xor
int
adc
outsl
aas
loope
mov
addr16
jmp
enter
frstor
into
aad
dec
imul
push
inc
test
loop
fmull
rol
cs
xor
test
cmc
fcomps
and
gs
or
in
xor
clc
stos
dec
adc
mov
push
mov
enter
mov
pop
pop
lcall
fstl
xchg
dec
adc
push
sub
scas
push
clc
add
cwtl
mov
xor
mov
rolb
jne
test
xchg
and
loope
add
mov
inc
xor
or
sbb
loopne
or
and
in
andb
nop
jmp
gs
lret
pop
xlat
lea
movsb
int
or
aaa
mov
sub
fnsave
inc
test
adcb
push
mov
lds
in
sbbb
pusha
fmuls
idiv
xchg
adc
inc
xchg
hlt
sbb
mov
inc
mov
lret
frstor
xchg
in
mov
jge
fcoms
adc
aad
ret
pop
mov
and
movsb
outsb
inc
xchg
aas
cmp
into
pop
lret
pop
cmp
mov
push
xorb
gs
xor
fcompl
testl
scas
pop
rcl
jge
je
push
xchg
ds
in
arpl
test
mov
mov
sahf
in
dec
aam
add
and
out
sub
sub
push
gs
jge
stos
or
and
punpckhdq
jbe
xor
cli
faddl
adc
adc
insb
pop
stos
mov
addb
jns
mov
enter
stos
int3
add
dec
pop
cmp
or
imul
jbe
push
cmp
fsts
pop
mov
lods
xchg
stos
ret
adc
nop
ficoms
aam
cmp
pop
ja
mov
in
adc
out
push
sti
int3
cld
and
mov
repz
xchg
push
mov
dec
orb
fsubs
fdivr
cwtl
cmp
inc
mov
roll
ficoms
and
out
lods
fisttps
mov
je
mov
pop
cmc
adc
iret
add
xchg
adc
cmpb
sub
inc
pusha
insb
test
fcomp
clc
testb
dec
lock
xchg
shll
decb
or
pop
xchg
push
aam
insl
xor
icebp
test
sub
shrl
add
jae
popf
adc
mov
sub
push
mov
pop
mov
mov
adc
test
loop
inc
in
pop
push
daa
stc
lcall
lods
sarl
xchg
pop
mov
xchg
jp
dec
sbb
shll
fucom
jmp
sub
and
add
dec
cltd
cmp
leave
aam
jae
negl
jge
push
lret
sbb
test
xchg
cwtl
mov
test
mov
pop
lock
xor
adc
insl
pushl
ds
mov
lret
or
in
cli
pop
leave
jp
clc
call
adc
rep
stc
mov
testb
push
imul
xor
xchg
cmp
pop
xor
cmp
fdivl
push
dec
imul
adc
das
imul
test
aas
xor
out
push
popf
repz
test
sbb
cmp
out
pushf
out
nopl
lahf
test
in
sub
pop
je
or
push
pop
pop
sub
sub
sub
push
addr16
fwait
push
jg
cmp
sbb
stos
lock
aam
cltd
idivl
mov
mov
xchg
pop
bound
pop
ror
push
orps
insb
insb
or
pop
pop
push
mov
andb
ret
cmp
aaa
out
sti
inc
cs
or
fs
shrl
mov
sarb
or
mov
pop
mov
mov
push
sub
je
add
mov
cmpsl
cli
insb
add
jmp
lods
push
pop
addl
add
jo
cmc
inc
xor
mov
add
test
add
sti
pusha
or
mov
fwait
xchg
xchg
xchg
or
pop
xchg
inc
lods
and
pop
fidivrl
stos
es
das
movsl
arpl
je
xor
lcall
fisubrs
cli
sbb
or
add
xor
push
loopne
or
lret
and
or
test
mov
popf
loopne
or
add
bound
cmp
add
mov
cmp
cmc
shll
and
cmp
and
pop
dec
les
out
outsb
dec
push
std
dec
adc
js
je
out
mov
rorl
repnz
es
mov
test
int
or
cli
xchg
sbb
and
sub
addl
push
add
aaa
mov
int
mov
push
jmp
aas
or
subl
inc
cli
flds
sarl
add
shll
pop
and
arpl
xor
pop
or
mov
jne
adc
fucomip
in
push
in
loop
loop
and
inc
mov
ja
jg
lahf
imul
fs
push
mov
sub
arpl
jae
sbb
cmpsb
fsubrs
jae
xchg
les
cmp
popa
fidivrl
or
scas
push
sbb
mov
cmp
outsl
add
enter
cmpsl
pop
sub
fcomp
fimull
mov
push
sub
rclb
sub
push
or
mov
ret
dec
pop
shl
jo
adc
inc
push
sarb
sahf
xor
fmuls
pop
mov
inc
jae,pt
or
cmpsl
lock
push
sub
cmp
jp
add
fldl
cmp
dec
sub
dec
mov
out
in
xchg
mov
push
inc
pop
ja
inc
sub
decl
enter
mov
shrb
push
cmpsb
imul
pop
aam
mov
jg
rcll
pushf
dec
enter
outsl
shlb
arpl
rolb
cmp
hlt
out
divb
fimuls
lock
jge
repz
jecxz
pop
imul
sbb
clc
sub
inc
xor
pushf
jns
test
lods
ss
add
cmp
or
ret
jle,pt
sbb
xchg
in
inc
aaa
and
mov
fs
sbb
repz
cwtl
or
js
lds
jbe
or
sti
in
sbbl
pop
arpl
notb
rorb
int
mov
inc
sub
je
add
dec
lret
aad
stc
jbe
fildll
pop
mull
sbb
hlt
jle
mov
out
and
popa
std
outsb
std
test
jae
fidivrs
cltd
add
add
in
push
mov
test
out
mov
pop
mov
repz
inc
mov
pusha
mov
stos
lea
dec
sub
xor
int
jo
ds
int3
push
mov
jne
mov
sbb
cmp
cmp
xor
fwait
adc
push
mov
fs
sbb
in
lahf
mov
das
inc
and
call
inc
adc
xor
xchg
xor
adc
push
sar
mov
jae
in
push
aaa
cltd
lret
mov
jne
push
or
pushf
frstor
fs
mov
xor
xchg
lds
sub
test
sbb
push
adc
pop
xchg
mov
repnz
and
in
or
rcll
xor
fsubr
cmpl
shl
mov
out
mov
xchg
push
xchg
dec
mov
mov
mov
mov
lods
aaa
cmpsl
cmp
add
mov
lahf
lock
dec
rcll
fdivrs
out
and
jae
jle
imul
add
add
aaa
adc
push
rclb
jmp
into
out
cmp
popf
and
popf
cld
out
mov
sbb
call
dec
fld
test
inc
mov
dec
cmpsb
mov
rorl
pop
inc
ret
loop
mov
push
dec
sbb
fisttps
and
push
pop
mov
call
test
stos
adc
mov
mov
flds
push
push
mov
sti
sti
scas
scas
scas
mov
jo
jp
js
lcall
aas
mov
aaa
mov
mov
or
dec
xchg
adc
nop
mov
std
dec
pop
cmp
mov
movb
xchg
or
sbb
and
fcoml
addr16
pop
xor
jnp
in
inc
push
inc
add
out
xchg
sub
sahf
or
lea
test
dec
jno
jne
fcom
xchg
mov
sarl
cmp
pop
lock
pop
sbb
inc
leave
mov
add
sub
es
mov
icebp
icebp
sbb
mov
jle
in
ficoml
loope
xchg
jbe
add
lcall
int
addr16
pushf
xchg
mov
adc
mov
pop
aad
jnp
jge
add
fldcw
mov
test
fadds
xor
cwtl
ret
mull
sti
mov
adc
jae
sub
cmp
in
add
lret
mov
mov
data16
adcl
add
mov
and
push
dec
arpl
push
out
cs
cmp
cs
mov
arpl
xor
lds
scas
add
fisttps
adc
std
into
popf
cmp
sbb
fwait
shll
add
or
imulb
popa
cld
pop
iret
or
adc
cmp
jnp
rcl
mov
mov
dec
xchg
scas
lcall
lret
or
int3
mov
cltd
mov
mov
jecxz
das
sti
fwait
je
dec
inc
loop
fcompl
xor
sub
dec
stc
test
repnz
clc
jo
les
cmp
rcll
xchg
arpl
xchg
jns
push
xchg
dec
pushf
dec
jo
dec
jmp
xor
out
mov
loope
inc
mov
pusha
push
dec
sub
pop
test
in
dec
mov
enter
loopne
test
xor
xchg
mov
jg
mov
cmp
mov
lods
dec
and
ret
jo
mov
xchg
xlat
xchg
gs
jle
dec
pop
lods
push
push
outsl
add
andl
mov
stos
xor
stos
jb
loopne
pop
jo
mov
rol
aam
stc
insb
cltd
stc
jbe
aaa
inc
push
jne
test
std
ret
and
jno
dec
xor
scas
popa
jae
cmp
xlat
mov
hlt
scas
jnp
jae
xchg
in
push
inc
mov
jne
dec
imul
jecxz
mov
or
dec
push
test
sbb
int3
push
jo
or
cmp
push
pop
sti
mov
pop
cmp
mov
ljmp
and
sub
pop
enter
sbb
subl
pop
pop
cmp
mov
in
pusha
dec
adc
xchg
out
jbe
or
in
and
test
jnp
jnp
popf
jnp
push
jp
or
leave
cmp
mov
jae
icebp
add
js
cltd
jmp
out
push
and
mov
sub
mov
xchg
mov
inc
shrb
vmread
js
iret
ficomps
repz
pusha
mov
sti
dec
dec
pop
adc
sub
flds
dec
xchg
ret
mov
xor
imul
sub
test
imul
es
aam
cmp
pop
mov
pop
push
pop
push
adc
inc
pop
ror
loop
add
push
jmp
or
jno
lea
clc
sbb
imul
sub
das
xchg
add
mov
adc
aam
scas
mov
mov
xor
dec
pop
daa
push
out
pop
test
insl
xchg
inc
addr16
and
sub
mov
insb
jnp
popa
in
jg
mov
jb
stos
mov
sub
jmp
scas
dec
mov
iret
pause
aaa
insb
es
dec
lds
cmpsb
insb
cmpsl
adc
test
xor
test
ds
push
sbb
pushf
adc
pop
push
pop
out
lock
push
js
lahf
push
ljmp
ljmp
lcall
adcl
or
dec
add
add
bnd
pop
cmpsl
iret
or
insl
add
in
xor
es
insb
lods
ret
jl
adc
push
sub
movsl
je
jb
lcall
insb
xor
rcrb
out
mov
xor
ljmp
fdivrp
imul
shrb
pop
and
mov
xor
imul
and
jns
pop
jg
jne
sar
pop
mov
sti
lcall
dec
sub
icebp
sbb
mov
push
xchg
add
dec
out
in
bnd
pusha
les
aad
lock
test
int3
arpl
in
test
mov
ret
inc
dec
mov
mov
push
and
mov
repnz
mov
lods
pop
sbb
lahf
cmp
lret
cmp
into
incl
fwait
sub
mov
inc
out
cs
inc
or
mov
icebp
pop
outsl
cmp
aam
jae
cmp
popa
sbb
jecxz
mov
fwait
xchg
xor
xchg
mov
xor
jnp
sub
insb
and
movsb
mov
xchg
daa
stos
ret
push
dec
cmpsb
ss
out
fisubrs
dec
jns
add
int3
or
fsubrs
fsubr
sbb
sbb
add
aaa
push
popa
sbb
dec
inc
mov
mov
dec
mov
mov
pop
pop
mov
pop
push
sbb
addl
add
test
clc
push
jbe
mov
mov
ret
sub
xor
cmp
out
add
fwait
inc
rorb
or
inc
xchg
dec
lea
add
js
jmp
push
pop
adc
mov
and
ds
lods
and
je
lahf
mov
daa
ds
inc
jnp
mov
add
mov
xor
mov
mov
pushf
mov
or
stc
cltd
outsl
push
lods
out
js
pop
out
jb
pop
jns
and
xor
dec
aam
mov
mov
in
mov
mov
lret
inc
dec
cli
shll
shr
jb
ret
insl
xor
inc
mov
fs
mov
insl
push
std
mov
mov
jns
xorl
xor
fxch
adc
and
xor
dec
inc
fs
mov
cmp
outsb
clc
inc
mov
mov
sarb
xor
sbb
mov
test
sar
jae
push
jo
sbb
mov
daa
or
testb
das
sbb
outsl
test
inc
loop
cs
out
add
mov
call
lods
sahf
sbbl
mov
call
pop
jno
shl
cmpsl
jle
inc
scas
stos
mov
xchg
aad
int
cld
movsb
test
and
out
lods
in
and
jo
mov
fs
push
mov
je
pop
inc
fs
ja
pop
lret
lea
out
push
jo
pop
ss
push
call
and
addl
test
pop
mov
shl
xchg
mov
sbb
shrb
pop
sub
ficompl
pushf
and
dec
push
xor
sahf
sbb
dec
int
fldt
bnd
sub
out
adc
pop
jnp
adc
notl
leave
jl
outsb
mov
das
add
ret
or
jae
add
insl
nop
sahf
fidivrs
pushf
test
xor
insl
repnz
insb
dec
pop
ficomps
in
xchg
lea
mov
mov
push
mov
xchg
out
jmp
hlt
jo
mov
les
cmpsl
out
xchg
add
fidivl
fwait
or
pushf
loopne
or
jge
jae
mov
mov
lret
imul
or
xchg
add
push
add
xchg
sbb
pop
pop
movl
rclb
sbb
repz
mov
cmc
outsl
movsb
ja
mov
xlat
mov
ss
lods
mov
mov
test
xchg
xchg
imul
xchg
push
arpl
lret
repnz
int
cmp
mov
xlat
call
add
test
roll
pop
mov
mov
clc
ss
inc
sbbl
push
sti
insw
cmp
addr16
repnz
or
dec
push
aas
push
xchg
lods
jbe
or
jge
cmc
rcll
sub
inc
out
push
or
pop
std
pop
xor
xchg
leave
xchg
push
push
div
dec
scas
push
enter
rol
loope
dec
pop
shlb
sub
inc
daa
mov
pusha
cmp
jl
jne
pop
test
fldt
popl
lcall
cwtl
rorb
dec
dec
in
cli
sbb
and
cmp
and
popf
ljmp
jmp
push
add
imul
aam
repnz
jmp
sbb
add
das
and
cltd
outsb
loopne
mov
xlat
push
arpl
data16
fisttpll
mov
sahf
push
xchg
int
ljmp
or
add
stos
inc
xlat
enter
mov
mov
and
aam
jbe
cmpb
fucom
jmp
cmpsl
push
mov
inc
and
xchg
push
jecxz
jno
imul
mov
pop
xchg
add
mov
or
cmpsb
xor
inc
loop
xlat
test
pop
test
out
inc
jb
cmp
div
movsb
es
xor
pop
stos
test
sbb
mov
sbb
push
cmova
cmc
push
xchg
cltd
push
add
insl
cmp
out
cmpsb
popf
or
mov
push
popa
mull
xor
lods
mov
lods
loopne
jp
imul
pop
fnstenv
sbb
adc
mov
mov
test
push
mov
mov
clc
inc
mov
inc
lock
cmp
dec
jmp
call
subb
testb
js
shll
ret
aaa
push
pop
add
sub
pop
rolb
jbe
xchg
or
mov
pop
rcrl
pop
icebp
jbe
jns
mov
dec
push
xchg
push
push
imull
loop
test
movsb
adcb
repz
shll
push
popa
jnp
xchg
and
push
push
push
cmp
mov
dec
jmp
movsl
jns
fs
add
repz
pusha
icebp
js
pop
nop
cltd
xor
xchg
sti
repz
or
jo
cmpsl
data16
aam
xchg
out
lahf
les
and
divb
adc
test
in
cmp
cmp
xor
pushf
fsubr
ljmp
xchg
test
push
js
push
shlb
push
jle
scas
lods
cmpsb
adc
push
ss
outsl
sub
adc
dec
cs
xlat
jb
das
cltd
pop
jne
sbb
and
jb
jb
pop
push
jl
cmp
xchg
push
mov
sub
pop
xor
std
fadds
jle
lds
jmp
fstl
cs
mov
sarl
jp
push
lds
leave
fmuls
imul
test
insb
std
test
pusha
ss
jge
pop
or
fstpt
aas
shll
jb
js
jne
jmp
sub
lods
and
leave
je
mov
jmp
in
sbb
mov
sbb
int3
add
pop
jnp
call
int3
mov
rolb
xchg
test
mov
mov
insb
mov
es
aas
sub
jae
adc
nop
or
ds
xor
sub
xchg
sub
dec
dec
aaa
mov
and
sbb
lret
loope
add
fsub
ret
jno
push
and
cmp
test
jecxz
or
inc
mov
push
jecxz
nop
andl
movsb
cmp
das
sub
add
out
mov
bound
pop
or
dec
cmp
inc
mov
stos
hlt
bound
dec
sub
sub
aas
rcl
sarb
repz
cwtl
xor
sahf
inc
aas
psrlw
mov
out
cwtl
cmpsl
mov
mov
rorb
sarl
cltd
jno
xor
add
insb
mov
jno
cmp
out
movsb
mov
mov
mov
lods
add
sbb
in
dec
push
ud1
loopne
pop
cmp
jns
mov
inc
mov
test
cmpl
aam
push
inc
loopne
jg
jp
xor
mov
shll
fwait
lds
jns,pn
sub
or
outsb
out
push
pop
lock
sub
and
iret
fimuls
and
sbb
lods
xchg
popa
mov
stos
sub
push
add
mov
mov
cmp
les
pop
ret
ljmp
adc
cld
test
neg
mov
bound
jp
cmp
mov
daa
fcompl
in
mov
and
popf
push
xor
jmp
adc
cmp
repz
jns
inc
cltd
push
mov
xor
inc
rol
jmp
add
aas
aas
mov
jl
lret
mov
fs
xor
shll
cmc
imul
test
mov
outsb
mov
jne
sub
cmp
dec
mov
inc
divb
rclb
pushfw
push
add
sub
fst
inc
icebp
dec
inc
adcl
or
mov
or
mov
push
mov
pushf
dec
into
sbb
dec
jns
push
into
xchg
inc
imul
ja
jno
aad
loop
aaa
insl
push
jne
add
xchg
fdiv
dec
cwtl
sbb
jp
lods
mull
and
xor
inc
mov
stos
sub
jb
cmp
jne
rcrb
pop
stos
and
sbb
dec
stos
sub
push
lcall
xorb
add
lock
decb
sub
adc
movsl
jne
mov
jo
jb
mov
test
or
jbe
jo
in
ficompl
and
mov
out
lahf
cmp
push
dec
push
rcrb
sbb
out
loop
xchg
xchg
xchg
stos
outsb
xchg
push
js
lods
icebp
mov
inc
das
repz
mov
push
jno
in
push
fcmovbe
xlat
sahf
mov
jmp
loop
pop
aad
insl
mov
ja
das
ljmp
xor
xchg
js
roll
cmpsl
or
loopne
lods
hlt
mov
pop
push
xchg
xor
hlt
xor
rolb
jge
fiadds
inc
bound
push
sbb
sbb
lds
stos
fildl
cli
addr16
leave
subl
movsl
test
icebp
add
mov
mov
nop
pop
hlt
cltd
adc
xchg
cmp
mov
pop
mov
clc
xor
lret
into
sti
xor
push
lcall
shll
inc
xchg
das
in
mov
xchg
cld
dec
ja
or
ja
fisttpll
repz
jge
out
mov
out
in
test
movsb
sbb
shlb
cmp
or
inc
jge
pop
mov
ja
bound
test
rcrl
jle
jnp
es
out
xlat
test
popa
cli
outsl
iret
sbb
lret
and
inc
cmp
xor
cmp
or
fwait
jp
es
jp
rolb
jg
sbb
outsb
push
sar
fidivrl
pusha
pop
and
sbb
dec
mov
out
imul
push
or
daa
dec
cwtl
mov
lcall
testb
xor
ret
pop
adc
or
scas
mov
push
lods
ficompl
cmpl
imul
aad
xchg
push
adc
jnp
sbb
shrb
lods
sub
xor
cmp
pop
sub
loop
xor
dec
xchg
sbb
lods
push
mov
pop
test
mov
or
mov
push
xchg
in
mov
fildl
lods
jae
out
pop
cmp
popa
sub
adc
mov
imul
xchg
into
cmp
cmpsl
xchg
xchg
xchg
jg
dec
stos
push
mov
test
push
xor
cli
movsl
sub
jmp
bound
or
or
lahf
add
jae
fcompl
push
xor
dec
in
push
sbb
nopl
or
and
fdivp
int3
gs
and
cltd
inc
shr
push
fdivl
inc
inc
add
stc
xchg
test
cli
sbb
in
out
lret
ret
push
and
or
ja
dec
xchg
mov
xchg
test
mov
mov
mov
aam
mov
jl
imul
cmpsb
xlat
sahf
xchg
outsl
loop
cmp
mov
inc
cmp
stos
xor
jle
sahf
out
adc
pop
jg
dec
dec
pop
pop
mov
mov
icebp
dec
hlt
mov
mov
pop
push
xor
mov
jle
out
and
mov
fs
loopne
push
pusha
int
mov
dec
mov
pop
test
cld
stos
or
stos
xchg
lea
and
xchg
ljmp
mov
or
shrl
jb
addr16
mov
movsb
testl
jecxz
loop
stos
or
les
sahf
inc
loopne
mov
xchg
adc
jbe
fists
pusha
fs
ret
mov
inc
imul
shlb
add
icebp
clc
ss
outsl
xchg
sub
xor
lret
cmp
inc
sahf
cwtl
das
pop
add
dec
pop
xchg
insb
roll
repz
pop
dec
sub
sti
jge
ret
fisubl
push
outsl
aad
loope
pop
inc
stc
aas
lock
cli
add
scas
sbb
add
sub
insl
xchg
in
xchg
rorl
dec
dec
xor
fs
mov
stc
call
ss
mov
fldl
push
push
orl
test
cmpsb
inc
les
lods
call
sahf
push
jecxz
shlb
popf
repz
jp
fisttpl
in
inc
mov
xchg
mov
cwtl
sub
sbb
push
lahf
dec
mov
outsl
gs
fisubl
and
push
and
ret
in
lahf
adc
cld
or
cld
vpcmpeqd
or
jno
adc
stos
jae
lret
or
push
xchg
sbb
insl
notb
jle
sbb
rcll
notl
outsb
das
cmpb
mov
std
dec
cmp
push
cmpsl
rcl
insl
adc
and
js
in
in
jb
push
sbb
ret
dec
mov
int
or
into
ret
lret
sub
mov
jl
push
mov
adc
xchg
mov
mov
in
mov
repnz
fdivs
mov
movl
shlb
scas
sbb
inc
sub
scas
lods
jmp
outsb
sbb
mov
hlt
mov
adc
pop
sti
es
fidivrs
sbb
mov
daa
mov
dec
out
xchg
and
jne
ljmp
lahf
jecxz
dec
in
pop
shll
jno
inc
popa
inc
dec
lcall
cmpl
pop
pop
mov
mov
pop
push
or
cwtl
pop
xlat
xor
lahf
xchg
fwait
jae
enter
add
sarl
in
pop
xchg
push
jmp
sbb
sbb
dec
adc
xchg
cmp
ljmp
cli
pop
cli
xor
pop
xchg
js
xlat
mov
sbb
stos
lahf
into
and
push
into
stos
testb
stos
xchg
stos
push
dec
outsb
xchg
jne
leave
adc
inc
cmp
mov
loope
lret
lea
lock
push
push
mov
cmc
pop
out
and
shl
ret
fdiv
inc
mov
sbb
repnz
test
imul
rol
mov
or
and
dec
add
dec
mov
pop
cmc
add
pop
cmp
mov
add
xchg
mul
jg
pushl
sub
push
ret
and
das
push
sbb
outsl
push
pop
lds
add
mov
xlat
pop
sub
mov
push
fdivs
mov
sub
mov
and
or
adc
jbe
dec
ss
fidivrs
adc
or
mov
mov
dec
repz
movl
imul
or
dec
dec
push
sub
xor
adc
mov
push
popf
push
testl
outsb
enter
mov
shr
xchg
pop
push
lahf
loop
arpl
mov
mov
mov
mov
nop
jae
sub
call
dec
adc
fildl
sbb
xchg
loop
mov
sub
push
shrl
add
pusha
pop
adc
fimuls
cmp
std
lods
mov
xor
inc
cmp
pop
jge
aas
dec
adcl
add
or
lods
insl
adc
test
push
pop
sub
jns
cld
es
mov
aas
loopne
test
cmp
inc
addr16
shl
aad
xchg
in
out
and
inc
mov
inc
xchg
xor
pop
adc
adc
xor
test
push
mov
sbb
leave
xchg
loop
data16
jo
fadds
push
sub
gs
push
ljmp
xchg
movsl
jmp
xor
jl
cmpsb
lock
outsl
imul
jbe,pt
mov
inc
clc
mov
popf
out
popf
add
add
inc
pop
push
scas
lret
pop
ds
push
lret
add
inc
dec
scas
les
std
jmp
inc
dec
add
cmp
pop
cmp
ss
jae
bnd
mov
xlat
cmp
lds
pop
stos
ja
test
cmp
or
lds
jno
dec
inc
inc
xor
dec
cmpsb
sti
jo
lahf
jo
test
cmp
testl
or
and
mov
xchg
popf
adc
mov
jmp
movsl
xor
shlb
pop
in
mov
cmp
mov
imul
sarb
aam
sub
les
xrelease
jo
les
mov
mov
jp
lahf
mov
jnp
lods
rcll
jecxz
push
mov
fildll
xchg
shll
mov
mov
sti
push
stos
scas
jnp
insl
sbb
mov
testl
mov
cmp
push
icebp
mov
pop
stc
stos
xchg
pop
push
lret
pop
sub
cmp
dec
adc
adc
mov
ds
and
and
pop
mov
loop
adc
jno
imul
xor
dec
shr
and
cmpsb
test
lods
fdivrl
push
dec
mov
mov
sbb
fidivrs
or
inc
lock
jge
jmp
cmpsb
std
pop
and
xor
jo
aas
outsl
cli
sarb
sti
addl
in
add
pop
pop
mov
clc
jmp
jno
and
stos
pop
sub
push
jo
xchg
jo
sbb
mov
xor
jmp
inc
fwait
clc
nop
push
ds
test
insb
xchg
in
sarb
cmp
aam
sbb
or
adc
jno
outsl
mov
inc
jecxz
in
mov
lcall
movsl
mov
sub
or
ljmp
arpl
or
xor
fs
jne
mov
sti
xchg
ds
add
push
into
sarb
dec
rcrb
dec
popa
cld
in
negl
loope
imul
pusha
outsb
test
mov
aad
mov
fcomps
ja
mov
inc
test
gs
icebp
pusha
fildll
xor
pop
stos
mov
mov
nop
movsb
sub
loope
xchg
out
jo
mov
lods
inc
push
pusha
jnp
add
dec
sub
shr
mov
in
jmp
xor
or
divl
cmpsl
mov
cmp
push
ret
popa
hlt
mov
push
xchg
and
jno
jecxz
sbb
sub
clc
into
movsl
insl
mov
sub
xlat
popa
pop
push
sbb
ljmp
jno
int
sbbb
adc
pop
pop
insl
nop
outsl
testb
lahf
loopne
into
push
movsl
inc
mov
fs
mov
or
rcrb
mov
xor
ret
push
ds
notb
test
xlat
add
sub
fsubrl
and
xchg
mov
adc
ret
es
iret
mov
and
inc
test
sarb
push
mov
imul
inc
pop
aad
popf
imul
cmpb
mov
jae
add
lds
popa
stc
or
xchg
add
sub
je
aaa
and
push
std
xchg
sbb
dec
idiv
rorl
in
pop
sub
adc
cltd
or
xor
dec
std
into
insb
push
addl
push
mov
jbe
push
mov
icebp
jns
jl
adc
dec
or
pop
xchg
test
mov
inc
je
xchg
notl
pushl
gs
ret
test
rcl
shlb
jae
cwtl
inc
push
clc
or
lods
sbb
inc
mov
inc
pop
out
orl
jno
dec
and
jp
xlat
sub
pop
cmpl
sahf
je
pop
adc
loopne
xchg
cmp
cmc
sub
sti
dec
pop
stos
pop
je
jbe
shll
fldcw
fsubl
lock
sbb
out
add
sbb
dec
xchg
imul
push
outsl
call
jnp
xchg
ficomps
push
xor
dec
inc
add
int3
mov
fnstenv
inc
jae
push
scas
xor
cmc
nop
test
fs
imul
sbb
dec
and
pop
xor
mov
shlb
test
fcmovne
mov
cmp
mov
xor
xor
cmp
nop
lea
add
mov
andb
pop
fwait
stos
push
lock
cmp
add
cmp
and
inc
ficomps
push
add
push
shl
cli
jle
lods
in
add
jmp
fisubrl
data16
jbe
std
cmp
adc
into
pop
ret
mov
loop
sbb
add
mov
test
sbb
sbb
or
adc
rolb
jae
jae
in
insl
cmp
dec
or
int
xor
repz
sub
outsb
mov
mov
out
or
dec
mov
mov
mov
nop
adc
mov
or
add
jge
data16
sbb
imul
sbb
pusha
jo
mov
push
pop
mov
hlt
xor
rorb
insl
rorl
dec
int3
dec
ss
bound
repz
and
ds
scas
xor
cld
mov
jbe
fwait
sbb
jnp
adc
push
xor
adc
xor
repz
dec
popl
adc
loopne
xchg
cmp
lea
movsl
inc
jmp
fadds
jb
cmp
sub
or
sub
jne
jp
cmpsl
adc
iret
mov
pop
std
and
dec
cltd
pop
pop
es
push
pop
fnstsw
out
aas
sub
cmp
mov
jb
inc
pop
call
inc
js
adc
sbb
fcmove
ja
xchg
mov
jmp
xchg
xchg
push
adc
xor
inc
push
aad
jns
enter
or
and
mov
jns
ffreep
pop
mov
xor
sbb
jno
mov
push
and
mov
popf
xchg
jge
es
inc
pop
xchg
xchg
pmulhuw
sarb
idivb
adc
dec
mov
ja
repz
scas
dec
cmpsb
mov
int3
flds
lds
or
test
orb
pusha
xchg
dec
insb
fstp
xor
jge
cmp
mov
xor
cmp
aas
sahf
jns
mov
cmp
and
or
das
ja
pop
add
pop
jbe
sbb
decb
icebp
cmc
inc
mov
aaa
xchg
addr16
dec
ret
push
push
cmp
lods
ljmp
mov
ret
cmpsb
lret
insb
push
lock
pop
mov
ljmp
xchg
sbb
inc
bound
push
cmp
dec
xchg
popf
movsl
inc
sub
pop
mov
ret
cmpsl
into
mov
mov
inc
push
mov
bound
shll
and
aam
and
hlt
loopne
or
or
je
pop
add
jns
inc
aam
cmp
xchg
in
stos
xchg
sub
pop
pop
inc
sbb
pop
mov
loop
repz
out
scas
stos
jns
sub
or
iret
mov
jecxz
loopne
lea
push
add
sbb
ja
sbb
in
test
jb
mov
call
xchg
xchg
cmp
aas
inc
mov
stos
pop
sbb
inc
pop
push
push
jmp
and
mov
and
iret
sbbl
mov
cs
clc
hlt
push
daa
or
outsl
fwait
insl
mov
aaa
xchg
adcl
int
and
inc
inc
arpl
inc
xor
and
pop
sub
dec
aam
push
ret
adc
sbb
push
dec
adc
lock
jl
jnp
jle
add
ljmp
pusha
addr16
outsl
gs
or
movsl
ret
aam
sub
ss
push
imul
fwait
adc
clc
xchg
inc
pusha
repz
int
movsb
adc
ret
pushf
jo
mov
data16
adc
dec
movsl
repnz
stc
lock
out
stos
dec
loop
push
testl
jecxz
test
lret
cli
gs
jbe
jl
sub
fsubrs
or
pop
sbb
lcall
in
mov
mov
jmp
pusha
adc
or
or
in
sarb
jno
sbb
fldenv
pop
mov
call
cwtl
mul
jae
push
jo
or
jae
mov
outsl
test
mov
add
movsb
inc
cmp
pop
jo
insb
push
mov
test
sub
lods
into
aaa
push
mov
push
or
outsb
pop
aad
enter
cmpsb
mov
mov
push
arpl
xorw
adc
adc
ret
sub
jb
sti
sbb
cmc
lret
mov
jb
sbb
lahf
jg
pop
xchg
pusha
mov
std
xchg
popf
jb
or
pop
pop
test
lock
lock
jne
pop
lods
adc
xor
enter
mov
je
fidivrl
jbe
lock
inc
xor
test
mov
repnz
dec
dec
adc
jecxz
mov
fbld
pop
dec
adc
icebp
push
sbb
ds
push
xchg
xchg
ljmp
sti
mov
adc
and
popa
cli
dec
divl
push
aam
xor
jnp
filds
lea
test
dec
and
test
outsb
mov
test
jmp
in
pop
or
std
ja
add
push
scas
push
and
loopne
add
sbb
dec
jmp
lock
jle
arpl
scas
movsl
addr16
pop
xchg
cltd
aaa
adc
push
dec
cwtl
int3
mov
mov
mov
mov
sbb
cltd
iret
fdiv
cs
into
divb
sbb
adc
push
push
hlt
aaa
mov
cltd
cwtl
aaa
stos
mul
cmp
cmp
jne
insl
les
mov
aam
sub
and
push
xchg
cmp
sbb
imul
xor
stos
push
mov
push
dec
pop
lea
push
popa
cmc
je
je
out
mov
sbb
sbb
hlt
ss
or
jmp
xorb
jge
pop
mov
out
jl
decl
mov
lret
adc
int3
xor
jne
xchg
pop
out
mov
and
stc
pop
adc
sub
dec
sbb
jl
cwtl
cmc
xchg
lcall
xor
pop
mov
and
sahf
xchg
xor
in
inc
out
jge
ljmp
shrb
imul
into
gs
lds
call
mov
mov
or
aaa
cs
dec
mov
push
mov
push
outsl
xchg
out
adcl
push
mov
imul
dec
dec
pop
sbb
lea
or
jae
shlb
lds
outsl
cltd
test
icebp
sti
test
mov
mov
add
aam
and
inc
add
movsb
xor
clc
testl
sub
push
cwtl
pop
mov
bound
dec
jecxz
cmp
hlt
je
sbb
push
clc
in
cmpb
adc
mov
push
mov
mov
lret
scas
adc
sub
daa
shlb
mov
push
pop
sub
shll
add
in
std
sbb
push
pushf
pushf
mov
push
push
mov
pop
xchg
mov
js
jo
fstps
aaa
bound
ret
fmuls
mull
cmp
jg
cmpsb
cmp
pop
stos
je
mov
cs
add
dec
push
mov
hlt
cmp
ja
pop
lock
cwtl
insb
addr16
push
test
sub
cmp
jae
ret
jb
shll
gs
adc
dec
dec
movsb
subl
xchg
sbb
je
test
fidivrs
test
mov
sbb
adc
sub
aaa
loopne
mov
mov
pop
pusha
mov
push
lock
lods
xchg
fldenv
repz
xor
repnz
push
jl
out
movsl
sub
pop
xchg
mov
adc
xlat
outsb
call
ljmp
out
popf
mov
popf
dec
add
adc
int
push
mov
inc
loop
lret
ds
jle
daa
jns
fstps
inc
fcomi
int3
mov
fstps
aaa
notb
call
out
shlb
stc
pop
add
xor
std
imul
jl
or
xchg
addr16
mov
lds
sbb
sahf
or
inc
jl
shll
mov
cmp
pop
dec
filds
daa
pop
mov
push
sbb
ficoml
adc
push
adc
out
adc
add
jl
test
push
push
xor
xchg
mov
xchg
inc
inc
mov
sub
imul
or
stos
mov
enter
enter
leave
lock
mov
cmp
daa
jecxz
hlt
dec
test
sahf
int3
add
adc
inc
jb
xlat
fists
mov
jne
pop
hlt
shl
xchg
pop
jl
jae
incb
xchg
xchg
pop
fmul
push
lods
push
jbe
sarl
ljmp
pop
mov
scas
clc
jmp
fmull
cmc
fs
orb
jns
dec
loope
cld
add
cmp
in
push
rcrl
fisttpl
mov
int3
daa
and
outsb
cwtl
and
lods
jle
jmp
clc
repz
daa
in
cwtl
xor
call
repnz
sub
mov
add
or
repz
shlb
sti
pushl
cltd
dec
test
mov
cmp
lods
pusha
mov
rcrl
mov
mov
addr16
jns
add
lcall
inc
bound
fucomp
jp
jmp
aam
je
sbb
sbb
xor
dec
push
bound
leave
adc
push
mov
push
mov
jae
jbe
ret
ds
es
jbe
sbb
or
imulb
xor
fists
xchg
sti
mov
pushf
pushf
and
loope
addb
pusha
scas
cmc
gs
mov
stc
incl
ret
jne
mov
mov
jge
ja
outsb
adc
dec
adc
push
data16
pusha
arpl
stos
cmp
inc
xlat
mov
jecxz
inc
push
push
or
out
fwait
jb
aam
pop
stc
js
jg
xchg
mov
mov
test
xchg
aaa
mov
mov
rorl
ljmp
scas
lret
cmp
xchg
push
mov
les
adc
stos
lcall
and
pop
pop
ficompl
movl
or
test
int
pop
fdivrl
jo
shlb
mov
sahf
into
or
outsl
dec
xchg
pop
pop
or
xor
mov
lds
repz
push
je
movsb
mov
pop
xor
ss
jno
mov
scas
jmp
fists
inc
stc
decb
mov
jle
jns
dec
adc
jmp
add
cltd
and
cmpsl
xor
imul
sbb
roll
lcall
cmp
rclb
or
xchg
mov
lods
inc
xchg
sub
sub
outsl
pop
cli
and
bound
call
push
divb
cs
cmc
jno
addr16
ja
inc
or
push
inc
call
sarl
es
xchg
aad
jnp
mov
and
jno
push
mov
in
pop
rcrb
test
jg
in
add
inc
adc
sub
scas
pop
insl
sub
xor
sbb
and
jo
push
push
xor
mov
pushf
push
xchg
sub
pop
ja
mov
and
outsb
jp
andl
sub
test
xor
dec
jne
leave
cmc
int3
addr16
jne
enter
lods
leave
cmp
sub
pop
fs
jo
push
jg
pusha
jno
and
aas
movsl
inc
pop
pop
shr
mov
ljmp
mov
sub
xor
jmp
xchg
outsl
ss
and
inc
pop
jns
jecxz
mov
pop
lea
fs
popf
fsubrs
inc
cs
mov
mov
dec
push
test
fnsave
aad
sub
xlat
sub
fwait
pop
mov
dec
dec
lret
adc
jmp
jnp
dec
cmp
cmp
cmp
mov
or
or
lcall
pop
jmp
lahf
mov
icebp
shlb
fsubr
in
test
arpl
mov
jbe
push
jnp
arpl
cmp
andb
pop
nop
pop
mov
hlt
push
pop
mov
arpl
test
in
dec
adc
jecxz
dec
lods
mov
push
mov
pop
push
dec
sahf
mov
mov
lret
xchg
adc
push
test
pushf
add
jns
mov
fildll
mov
or
mov
xchg
push
push
bound
int3
push
cmpsb
xchg
mov
jb
jg
push
push
es
xchg
xchg
xchg
dec
test
add
xchg
adc
jae
pushf
pop
es
inc
mov
dec
sbb
pusha
mov
sahf
loopne
push
fnsave
lret
subl
xchg
pop
push
movsb
fnsave
push
jnp
out
sbb
daa
movsb
sub
mov
ss
das
mov
sahf
mov
not
test
imull
sbb
adc
or
outsb
xchg
repnz
out
in
add
xchg
sbb
mov
pop
loopne
dec
push
fstps
adc
push
aad
insb
inc
xor
push
cmp
or
mov
pusha
negl
xor
test
orb
jecxz
fnstenv
sub
cmp
sbb
inc
rcrb
ds
outsb
call
adcb
idiv
mov
test
in
jl
ficomps
cmp
mov
insl
repnz
mul
add
insl
aad
out
mov
xor
in
sbb
enter
xchg
mov
nop
inc
push
push
push
bound
enter
aad
cmovle
out
xchg
lret
scas
mov
mov
stos
aaa
icebp
icebp
jo
mov
adcb
aas
div
jmp
xor
cltd
lock
imul
imul
jge
cmp
sub
call
xor
and
lods
and
out
mov
pop
xlat
jns
out
push
pop
int3
sub
push
mov
cmc
insb
rcll
inc
push
mov
push
scas
aas
fidivrs
out
jae
fildll
jae
push
shlb
jno
sub
addr16
pop
xor
mov
aas
jle
repnz
rolb
in
jl
lock
out
mul
les
sub
repz
xchg
popf
xlat
scas
movsb
push
xorl
pop
dec
shlb
mov
add
mov
jg
add
ret
addr16
mov
inc
pop
inc
nop
mov
stos
mov
adc
int
bound
jmp
add
mov
ds
mov
push
jb
xor
arpl
inc
stos
movsb
xor
mov
add
and
adc
call
add
xlat
scas
inc
and
mov
and
loop
mov
jne
add
js
push
inc
adc
movsl
loop
mov
call
loope
pop
cwtl
mov
pop
dec
mov
lock
repnz
jle
addb
ret
inc
popf
cs
jmp
xchg
shrl
lods
sub
pop
je
popf
add
out
out
adc
pop
adc
xor
adc
int3
xchg
stc
fcoms
int3
aam
lods
mov
in
outsb
sub
sbb
loope
or
mov
imul
aaa
inc
into
mov
in
and
out
test
movsb
pop
jmp
addr16
xchg
fnstsw
int3
orl
lret
cmp
aas
cmpsb
out
xchg
inc
lods
ss
pushl
out
pop
cmp
or
sbb
add
out
mov
and
mov
jl
jae
test
outsl
outsl
push
int
addb
stos
pop
clc
ja
aad
mov
stc
sbb
rcll
pushf
xor
push
adc
mov
and
cmp
adc
add
mov
jge
lock
out
int3
call
or
xchg
add
pop
jbe
mov
mov
stos
mov
repz
cmp
xlat
dec
sbb
clc
inc
imul
mov
ds
test
imul
jecxz
lock
sub
jb
imul
jl
pop
mov
loope
pop
bnd
push
cwtl
cmpsl
xchg
push
arpl
mov
aas
imul
shl
inc
xchg
push
add
cmpsb
push
or
cwtl
out
add
fwait
sub
stc
inc
pop
pushf
cmp
addr16
add
xor
outsl
xor
mov
ss
inc
cmp
scas
clc
daa
nop
mov
stc
and
pop
jg
mov
mov
jle
or
loope
push
movsl
cmp
lahf
ss
imul
cli
cmpsl
jg
xorl
mov
aas
mov
sub
and
in
xchg
cmp
lcall
andl
add
xorb
ljmp
push
je
dec
dec
sbb
movb
fcomps
jne
add
clc
inc
les
in
jns
das
lcall
mov
pop
ret
rcrb
pop
jo
in
inc
or
and
not
pop
sbb
ljmp
cmp
jo
sub
jl
pop
push
pusha
das
or
popf
add
adc
mov
mov
insb
pop
mov
adc
pop
fs
divl
mov
jb
es
mov
pop
push
int3
shl
aam
repz
xchg
mov
add
pop
divb
addr16
dec
insl
pop
add
call
jo
xchg
ds
fldenv
sahf
movlps
xchg
lahf
dec
cmpsl
dec
andl
ds
movb
test
xor
inc
ss
inc
push
inc
cmpsb
rorl
dec
jle
and
rol
repnz
or
pusha
ret
cmp
mov
and
lods
insb
cmpsb
pop
sbb
int3
out
mov
data16
popa
sbb
sti
push
or
fldenv
add
adc
xor
and
mov
sub
jecxz,pt
insl
xor
mull
xor
sub
cli
lods
loop
mov
pop
jne
push
cmpsl
mov
call
je
pop
nop
sub
repz
mov
pop
div
sub
lea
pop
lock
sar
out
pushf
aad
ficoml
test
jmp
push
add
jecxz
stc
mov
test
out
rorl
jo
xor
loope
cmp
pop
enter
jle
lods
jb
sti
mov
mov
cmpsl
push
pop
and
fwait
das
scas
cmpsb
sub
scas
dec
fwait
pop
mov
ds
xchg
nop
fimuls
push
or
push
imul
adc
jno
test
in
pop
insb
mov
pop
and
lods
jge
fnstcw
sarl
or
arpl
adc
lret
or
push
dec
jmp
int
xor
gs
dec
imul
push
enter
insb
pop
jne
push
push
sub
in
sub
cmp
testl
shlb
pop
clc
mov
jo
inc
pop
dec
mov
dec
sbb
out
cmp
into
shrb
cmpsb
mov
cmp
sub
roll
jne
enter
xor
rorl
outsb
mov
xor
add
push
xchg
dec
in
test
xchg
int3
push
or
enter
test
sub
lcall
ss
push
jmp
xor
dec
call
sbb
xchg
pop
xlat
add
jmp
pusha
jg
dec
mov
js
push
inc
dec
sub
xchg
clc
mov
mov
jae
jno
pop
jne
cmp
enter
mov
jge
jae
add
repz
jbe
lods
ret
push
into
push
bnd
sub
test
dec
mov
divl
add
jo
ret
scas
cmpsb
push
push
faddl
ljmp
shl
daa
imul
push
sub
mov
sbb
roll
cmp
push
in
jne
push
xor
pop
leave
and
push
in
jge
stos
dec
das
mov
inc
out
notl
lret
mov
sub
in
add
fmuls
push
inc
adc
dec
pusha
pop
popf
out
addr16
aam
inc
cmp
or
xor
push
fstpt
lahf
dec
push
dec
xchg
clc
sarl
mov
cmp
rcrb
mov
inc
or
cmpsb
mov
test
std
xlat
xchg
jo
imul
shl
pushf
insb
pushf
repz
and
pop
push
pop
in
shll
inc
xor
xchg
pop
ret
jmp
std
jbe
xlat
movb
dec
clc
xor
inc
sti
adc
pop
push
leave
loope
jle
fwait
shrl
dec
cmpsb
xor
jmp
daa
push
aad
inc
repz
pop
movsb
push
cmp
dec
push
out
fdivl
xchg
lods
fistps
dec
enter
mov
xorb
mov
jnp
sub
push
inc
hlt
mov
lcall
aaa
sahf
popa
sbb
shlb
pop
xor
popf
lret
loop
inc
pop
xor
jle
test
adc
jo
mov
adc
mov
dec
daa
pop
mov
rcll
daa
mov
bswap
loope
stos
sub
divb
push
or
addr16
xchg
or
fcompl
shr
loopne
das
mov
push
rcrb
dec
cmp
ds
sub
mov
lea
lds
jecxz
imul
inc
add
pop
xchg
mov
xchg
js
xchg
test
mov
pop
fcmovnb
sbb
int3
xchg
sbb
jbe
inc
mov
pushf
sub
or
lahf
das
int3
out
dec
mov
mov
push
ret
addb
fimuls
push
xchg
sarl
aas
outsl
sub
cmp
xchg
push
push
stos
shlb
mov
mov
aas
dec
ret
xchg
in
cs
jns
cmp
adc
dec
and
pop
sub
inc
outsl
fs
pop
or
fidivrs
lret
mov
xchg
push
and
xchg
xchg
xor
mov
aad
pushf
ret
and
inc
jge
pop
call
notb
test
jmpw
sbb
stos
pop
dec
les
aad
sahf
cmpl
fsubs
popa
push
mov
rol
and
inc
cwtl
push
loop
sub
mov
adc
imul
and
scas
mov
or
pop
mov
scas
push
dec
shrl
fwait
icebp
inc
insb
jp
adc
aaa
cmpsb
enter
dec
mov
and
test
or
dec
sub
jns
mov
xlat
mov
sbb
xchg
inc
ljmp
es
cmp
sti
adc
jae
das
mov
pop
es
adc
in
adc
lret
lock
std
insl
repnz
inc
loope
movsl
pop
cli
add
adc
xchg
jbe
xor
rorl
lea
sbb
aad
into
sub
imull
and
cmp
test
cmp
mov
nop
pusha
push
mull
cltd
ficompl
ret
xor
iret
jae
loope
pop
jnp
add
cs
dec
mov
test
js
dec
sbb
mov
scas
cmp
or
mov
jmp
dec
stc
test
and
shl
jns
cmp
and
stos
jns
jmp
aad
stos
es
sbb
mov
stos
add
mov
push
xchg
xor
xor
into
adc
xchg
repz
pop
fldcw
inc
xchg
insb
inc
stc
fs
movsl
or
gs
xrelease
je
sub
rcr
insl
cmp
cmp
dec
in
cli
rcll
mov
clc
cltd
rclb
sahf
in
arpl
lcall
test
mov
dec
push
dec
mov
mov
ja
insb
dec
fmull
and
icebp
add
mov
dec
insl
xor
xlat
and
test
mov
xchg
repnz
jmp
xor
mov
dec
jg
pop
xchg
shlb
incb
fucomip
fistpll
adc
push
fbld
faddl
or
imul
mov
nop
jmp
jns
jp
cli
mov
jle
test
mov
sub
je
xchg
mov
mov
lock
in
xor
xchg
dec
lods
sub
sub
xchg
rclb
js
aas
cli
or
bnd
cltd
je
sub
daa
mov
mov
pop
push
pushf
push
mov
nop/reserved
jb
add
rcll
mov
mov
add
arpl
xchg
iret
ss
cmp
cmpsb
and
xor
xchg
and
int
pop
mov
clc
in
xor
xchg
lret
mov
jmp
lock
rorb
xchg
sbb
mov
push
push
bound
add
mov
movsl
inc
push
mov
cmpsl
push
imul
push
push
jge
psadbw
pusha
cmp
sbb
das
sub
sbb
mov
repz
and
xlat
pop
test
shlb
jle
dec
cmp
mov
jp
pop
cmp
mov
loopne
nop
imul
cltd
dec
push
loopne
cltd
mov
fists
push
sbb
shr
sahf
push
popf
fwait
in
sub
je
repnz
mov
jne
sub
and
and
popa
xchg
and
sbb
pop
roll
and
jle
mov
popa
adc
and
jo
int
sub
fmull
inc
and
sub
ret
out
cmc
push
sub
stc
push
cmp
out
or
or
fcompl
xor
xchg
fwait
cmp
xor
int3
sub
jo
leave
sbb
fnstcw
cld
int
daa
das
mov
add
fwait
mov
sub
inc
pop
push
lret
cmp
outsl
divb
fs
lcall
or
sub
or
mov
and
fcomps
fildl
rcll
inc
or
jl
and
cmp
insl
scas
out
jp
call
cld
insb
sahf
push
nop
push
cmpl
das
cltd
and
mov
mov
ret
mov
les
in
loope
add
int
jge
orb
adc
adc
push
and
inc
adc
loop
aad
lret
leave
imul
out
xchg
xchg
push
popf
jne
fcompl
add
push
daa
mov
clc
data16
add
jle
adc
mov
and
loope
addr16
cmpsl
pop
cmp
mov
cmp
xchg
and
out
aam
lret
dec
cld
mov
data16
fdivl
out
je
test
in
xor
mov
sbb
mov
clc
mov
push
inc
clc
dec
loope
out
and
out
pop
and
ds
add
ljmp
xchg
cmpsb
in
gs
lahf
in
int
insl
xchg
fiadds
scas
xchg
fs
dec
lods
mov
cmp
inc
cmp
dec
sbb
adc
push
pusha
or
jmp
leave
aas
sbb
push
adc
mov
add
popf
lods
xchg
out
adc
inc
decb
push
sbb
cmp
outsl
test
fbstp
mov
movsl
or
sub
aaa
rcrl
dec
jge
and
js
cwtl
out
or
lods
xor
cltd
test
sub
iret
or
inc
ljmp
iret
jmp
inc
outsl
cltd
push
hlt
jmp
add
pushf
inc
sub
cld
test
enter
cmp
loope,pn
pop
adc
jmp
or
outsl
aam
aam
leave
out
ret
imull
cltd
cmp
fmuls
aas
inc
xor
and
push
push
ljmp
mov
dec
daa
push
mov
dec
into
or
out
loope
mov
push
jp
dec
inc
jbe
lahf
addr16
xor
imul
lcall
daa
mov
js
ret
xor
xchg
mov
cmp
in
pop
push
inc
aas
sub
adc
xor
fwait
movsl
das
daa
pop
data16
ficompl
jne
push
dec
sarb
pop
push
sub
fimuls
mov
or
sbb
pop
or
adc
jecxz
ljmp
repnz
adc
cmp
ret
mov
pop
ja
lods
or
pop
pop
inc
in
adc
sahf
std
mov
and
jge
dec
jle
lret
int
pop
es
aad
push
in
xor
cmpsl
mov
mov
loope
mov
pop
jmp
and
xchg
add
stos
lret
fldpi
gs
jge
fimuls
adc
mov
mov
stos
divl
fdiv
pop
mov
xchg
jbe
cltd
sub
inc
jle
aad
aas
pop
dec
add
sub
xchg
mov
xor
outsb
inc
sbb
jmp
stc
orl
fdivrl
xlat
add
jbe
test
lock
cmp
jl
sahf
or
xor
ljmp
push
adc
nop
orl
cmp
in
inc
lcall
shl
add
in
stos
cs
mov
xor
hlt
inc
sub
jp
fcmovnu
pop
cli
mov
lahf
lods
mov
and
pop
pop
lret
out
mov
mov
mov
or
xchg
insl
sti
sbb
mov
fs
lcall
sub
movlps
xchg
enter
enter
lea
mov
pop
adcl
and
inc
jne
std
ds
mov
cmp
dec
mov
icebp
sub
pushf
pushl
clc
xchg
dec
adc
fs
pusha
sarb
sbb
pushl
mov
dec
push
push
dec
pop
lods
inc
icebp
mov
add
rcll
aas
in
xchg
sub
or
jns
dec
fs
dec
push
out
fstpl
pop
push
pop
es
lods
subl
push
iret
pushf
pop
in
xchg
stos
jmp
orb
add
pop
rcrb
fldenv
adc
out
cmp
add
jp
rcrb
cmp
cmpsl
hlt
lods
jnp
lret
in
out
xor
jno
jo
inc
mov
in
fs
fisubl
cmpsl
dec
xchg
test
mov
orb
lock
mov
sti
stos
pop
enter
cwtl
mov
inc
dec
mov
ficompl
ficoml
jnp
fsubrl
popf
and
js
pop
ret
mov
pop
inc
sbb
andl
mov
gs
movl
and
aaa
mov
xchg
aam
jns
inc
sbb
dec
xchg
xchg
out
ss
xlat
push
ret
hlt
stos
or
mov
js
aas
xchg
sarb
xor
cltd
subl
xlat
mov
loop
mov
loop
mov
div
add
pop
mov
or
mov
js
cmp
out
inc
test
test
leave
cs
add
mov
mov
daa
mov
sbb
cmpl
pop
mov
or
xlat
mov
inc
testb
adc
test
dec
add
inc
imul
es
fwait
leave
pusha
negb
mov
mov
or
jmp
scas
dec
xorl
fistps
push
enter
jl
leave
xor
movsb
lcall
xlat
lahf
mov
out
insl
rclb
fstpl
xchg
mov
xlat
xor
cwtl
push
fadd
lock
dec
pop
js
pop
cmpsb
shll
adc
cmpl
nop
cli
xchg
js
pop
int
test
pop
sbb
xor
lea
push
cli
orb
shll
testb
inc
in
repnz
pop
scas
jo
jns
insb
pop
bound
cs
sub
push
add
xchg
stc
dec
movsb
fistpll
repz
jp
repz
xchg
cmc
rolb
jo
insb
and
mov
jp
icebp
dec
fadds
out
ficompl
test
mov
jmp
je
gs
dec
inc
fstl
pusha
leave
dec
jge
mov
pop
or
mov
sub
push
sbb
mov
sbb
xor
aad
fistps
xchg
jecxz
or
bound
dec
cmpsl
push
andl
test
jg
xor
push
adc
sub
test
mov
add
dec
jo
add
clc
pop
pusha
sub
jae
mov
aad
jge
jle
push
lcall
push
sbb
les
aam
mov
in
pusha
pop
mov
loope
fstp
lea
dec
in
and
pushl
xor
pop
mov
mov
inc
cwtl
xor
cmp
dec
stc
roll
sub
xor
or
cmp
popa
mov
xor
les
cld
std
push
xchg
inc
jge
sbb
cs
int
cmp
sahf
mov
in
arpl
imul
adc
and
xor
ljmp
mov
push
xchg
mov
cltd
pop
sub
pop
lcall
test
jno
in
pop
orl
rolb
mov
mov
jecxz
and
or
or
xorl
addr16
or
sub
pop
scas
or
stc
insl
or
push
ja
outsl
add
mov
lret
sbb
ret
mov
cld
inc
in
jp
mov
push
jns
pop
lods
pop
cmpsb
inc
jns
sbb
sub
adc
mov
shll
inc
shr
sbb
dec
call
shl
xor
lds
or
iret
mov
int
jg
cmc
xor
inc
call
push
je
nop
outsl
ljmp
jo
cmp
loope
call
and
push
daa
mov
push
pop
repz
pop
inc
popa
cmp
hlt
add
add
adc
inc
cmpsb
clc
push
push
idivb
jmp
jl
jnp
lods
into
movsb
and
xor
cltd
mov
jge
mov
cs
or
inc
andl
inc
or
fdiv
insb
add
sub
lods
insl
xchg
lds
and
dec
jle
lods
xchg
call
adc
jle
je
stc
adc
sbb
int
sti
push
int3
mov
or
movsl
mov
sbb
loop
test
jg
stos
mov
lods
mov
mov
rcrb
cld
jno
xlat
mov
sub
idivl
dec
test
gs
dec
lret
inc
sbb
dec
sub
sub
das
cmp
cwtl
pop
push
popf
inc
aam
aam
jo
add
lret
cmpsl
pushf
or
xor
jae
pop
adc
cmpsl
sahf
and
jmp
xor
cwtl
inc
mov
jl
scas
inc
mov
mov
mov
xor
cmp
xchg
vmwrite
and
not
mov
mov
mov
push
sub
imulb
cmp
and
mulb
adcl
rsm
aam
jbe
inc
and
push
out
ror
pusha
dec
push
adc
push
loop
subb
lds
arpl
adc
pushf
jb
inc
dec
test
jb
pop
stos
push
sbb
bound
imul
pop
dec
jecxz
jnp
mov
push
mov
xor
ja
jae
xchg
lock
lea
movsb
jl
xchg
outsb
aas
pushl
stos
jg
outsb
int
pop
sbb
ljmp
mov
xlat
test
shll
leave
jle
xchg
mov
cs
scas
sub
hlt
and
xchg
insl
cmp
mov
dec
xor
add
xor
mov
stos
insb
push
sub
xchg
pusha
or
xchg
adc
outsb
leave
roll
testl
aam
sub
and
xchg
jno
inc
jp
sbb
fdivrs
sbb
ds
dec
xor
xor
cmpsb
xor
in
dec
inc
popa
and
jp
jo
inc
sbb
jno
cmp
or
jno
loope
scas
rorb
outsl
sti
int
pop
mov
clc
lock
in
cs
scas
jle
pushf
jmp
mov
push
mov
xlat
mov
movsb
int
add
mov
int3
or
jle
popf
fstpt
push
mov
xlat
stc
ret
pop
inc
cmp
out
jle
pop
sub
add
ret
pop
cmp
cmp
stos
jmp
adc
dec
cmpsl
or
push
js
pop
push
pop
xor
xor
js
insb
mov
not
lea
lret
enter
inc
mov
xchg
and
mov
add
sub
pavgb
xor
in
shlb
mov
pop
cli
pushf
daa
sbb
mov
insb
mov
xchg
loop
add
imul
cmpsb
lods
stos
jb
and
xor
or
sub
out
lock
add
fstps
dec
sbb
shrb
imul
out
adc
sahf
jmp
hlt
mov
clc
pop
cmp
jae
sub
sahf
adcb
out
rorl
fnsave
fdivs
sbb
in
test
xlat
loopne
xlat
icebp
pop
mov
dec
fcoml
push
mov
xorb
xor
push
ret
ret
lods
add
jmp
or
cmp
pop
adc
pop
jl
adc
push
test
lcall
jnp
sahf
aas
xor
outsb
repnz
push
lret
out
mov
mov
mov
jl
sbb
sub
out
jno
mov
shr
xchg
dec
mov
ret
jmp
in
cmp
lods
andl
jne
scas
dec
and
lea
adc
push
ficomps
mov
fs
jl
les
inc
jno
push
push
mov
mov
pop
rcrl
scas
arpl
adc
push
movsb
mov
lahf
aad
scas
int
push
bound
mov
pop
lods
push
push
mov
dec
das
mov
push
inc
scas
or
or
aad
repnz
pop
xchg
mov
inc
insl
lods
lahf
stos
xor
jge
jb
icebp
std
into
xor
xor
inc
jbe
xor
sti
adc
push
or
in
in
js
or
inc
xor
sahf
push
lret
add
icebp
cs
jno
sbb
out
int3
ret
mov
arpl
movsb
cmp
xchg
shr
inc
sahf
push
fadds
push
xchg
dec
push
sbb
rcl
mov
push
sahf
ja
jno
mov
push
dec
jmp
das
mull
icebp
mov
or
pop
jp
and
jp
cwtl
into
int
sbb
jmp
inc
fldenv
pushf
lock
imul
arpl
pusha
cltd
add
jbe
inc
adc
xchg
test
test
loope
imul
mov
jl
divb
add
cld
test
sub
out
out
sbb
es
sub
mov
js
in
xor
mov
jp
out
xchg
adcl
dec
xchg
pop
sbb
into
pop
add
cmovp
test
add
pop
clc
jg
inc
pop
out
pop
lock
sti
push
push
mov
lock
dec
dec
mov
dec
repnz
inc
ds
lock
and
loope
add
lahf
test
imul
jecxz
leave
sbb
pop
xor
std
push
mov
adc
cmpsl
xorl
cmp
out
jl
sub
push
out
imul
xchg
rclb
cmp
adc
mov
add
shll
and
xor
cmpsl
mov
pop
fnstsw
cmp
cmp
scas
sbb
inc
das
xor
adc
fcompl
push
loope
adc
inc
dec
lods
cmc
mov
mov
xor
mov
jae
pop
mov
into
hlt
adc
imul
dec
scas
xchg
inc
gs
adc
lret
or
dec
pop
jbe
shl
inc
pop
sub
cltd
pop
mov
loope
cmp
aas
bound
cld
xchg
mov
loop
pop
or
jbe
loop
xor
popa
js
loop
sbb
rclb
pop
pop
insb
mov
imul
pop
jg
leave
icebp
push
ret
mov
call
sbb
push
das
jb
push
out
push
mov
xchg
icebp
bound
cmp
dec
sub
mov
adc
mov
fbstp
out
adc
cmp
jnp
ss
ror
rorb
mov
sbb
inc
mov
hlt
sti
jg
inc
dec
cld
add
dec
sbb
xorb
popa
push
sarb
or
mov
mov
test
mov
mov
ss
clc
jne
enter
jns
mov
test
jno
or
sub
jns
dec
scas
js
aas
xchg
aas
mov
addr16
sbb
push
test
into
adc
sbb
movsb
mov
ja
fs
mov
movsb
lret
fldl2e
fcoml
and
iret
out
daa
mov
mov
xchg
xchg
fists
daa
mov
in
cmp
lret
js
stc
hlt
pop
fwait
jns
xchg
cmc
mov
out
in
or
divb
sti
popa
loope
pop
jae
adc
lods
jo
inc
push
cmp
or
cli
into
js
imul
jnp
add
shrl
mov
imul
fwait
adc
and
arpl
push
lcall
pop
es
sub
pop
into
adc
push
xchg
pop
fwait
mov
out
adc
mov
sbb
iret
shlb
mov
pusha
es
and
inc
mov
dec
dec
out
stos
loopne
push
shlb
outsl
decb
scas
fucom
sub
xchg
cmpsb
mov
fldenv
rcll
xlat
cmp
adc
sbb
iret
in
dec
sbb
iret
xor
test
fwait
jmp
fldt
or
jae
jo
push
shlb
fs
pop
flds
jle
mov
push
dec
jns
mov
xor
rorb
std
cmpb
sti
and
stc
add
pop
in
jns
xchg
cmovp
or
jo
in
loopne
ss
outsb
cmpsb
add
cmp
aaa
outsl
dec
jg
jbe
dec
pop
dec
pop
mov
mov
cmp
mov
pop
mov
pop
dec
add
xchg
repnz
push
pop
cmp
inc
jmp
rcl
xchg
xchg
fiaddl
sarl
in
mov
pop
push
jg
ss
shl
push
and
mov
fmull
int
and
jb
sbb
test
mov
outsl
loop
jno
subb
sahf
dec
jg
dec
xchg
add
testb
ret
jnp
pusha
test
cmp
dec
aad
test
push
cli
sahf
ss
xchg
mov
xlat
shlb
shll
adc
icebp
xchg
ljmp
mov
push
mov
in
test
cli
ss
dec
sbb
xor
outsl
push
fidivl
pop
and
pop
cwtl
aas
fwait
or
jne
or
aad
jns
sbb
es
sbb
jecxz
jp
dec
shrb
push
das
sti
fcmovb
xor
xor
inc
xchg
clc
repnz
mov
inc
int
xor
or
ret
int3
outsb
insl
xchg
int
and
clc
aas
fcmovu
popa
int
pusha
sub
jo
pop
pop
cmpsb
pop
dec
shll
pushf
data16
pop
lret
in
pop
cld
inc
xlat
test
add
sarl
adc
les
ficoml
pop
sub
pusha
cwtl
dec
xor
cltd
jne
pushf
aad
gs
mov
mov
das
cmc
das
sahf
nop
sub
xlat
imul
je
inc
cmc
fisubl
pop
jo
xor
adc
and
xchg
pop
pusha
xchg
mov
xchg
jmp
mov
in
pusha
cs
dec
add
aad
mov
cld
dec
clc
cmpsl
cmp
xcrypt-ctr
cmpsl
pop
lock
push
icebp
in
jge
clc
fistl
sub
es
test
shll
pop
cli
xor
fisubs
sub
sarl
je
xchg
add
loop
imul
in
test
jg
cmc
sbb
ret
fs
xorb
clc
cs
clc
xchg
mov
jae
add
mov
es
mov
sarb
les
idiv
adc
sub
xor
cwtl
stos
cmp
cs
cmpl
pushf
jmp
xor
pop
mov
stos
push
adc
xchg
mov
mov
fildl
pop
xchg
idivb
je
addr16
into
orb
lock
jmp
mov
pushf
mov
out
jl
mov
fmull
adc
fwait
test
push
rep
lock
mov
rol
fld1
add
cmp
addr16
std
out
into
pop
sub
rorb
mov
fucomi
push
cmpsl
mov
mov
arpl
fsubrl
adc
cmpl
sbb
stos
scas
dec
or
loope
js
jbe
aaa
test
bound
addr16
ds
sub
and
adc
insb
ds
mov
lea
adc
or
add
cmp
xor
push
xlat
pop
ror
push
out
push
push
mov
cli
imul
mov
ret
aaa
inc
incb
push
sbb
pop
mov
int3
ds
adc
outsb
ss
xchg
test
fisubs
mov
sub
xchg
faddl
pop
jns
and
jns
mov
cmp
cli
sbb
or
mov
das
mov
cmp
int
jle
fdivrs
ss
enter
mov
push
push
adcl
jo
inc
or
data16
xor
sub
sbb
int
adc
aad
test
sbb
cmp
lea
mov
add
jnp
mov
add
ret
rcr
xchg
icebp
adc
rcrb
fbld
ficompl
imul
aas
pop
clc
cmc
push
std
xchg
mov
cmpl
subb
cmp
or
mov
sub
arpl
je
xchg
std
loop
cld
adc
leave
xchg
mov
push
dec
faddp
pop
xchg
cmp
cwtl
inc
push
inc
ret
push
outsb
and
dec
iret
aam
shll
fwait
outsb
mov
jb
cmp
sub
outsl
push
mov
mov
sub
jge
lret
cmp
stos
jge
enter
mov
inc
add
pop
sub
or
cs
sbb
sub
mov
sub
sub
or
inc
push
popa
movsl
lock
pop
ror
sub
push
fidivrs
xchg
jne
icebp
add
fstl
sarl
mov
scas
pop
xor
inc
add
or
int3
std
fstl
das
call
in
adc
aam
cmp
mov
cmp
jmp
adc
jnp
jmp
lea
sub
and
jl
push
mov
dec
leave
aaa
or
lods
shr
andb
int
outsl
stos
lcall
cli
pop
adc
popl
pop
cmovnp
es
das
mov
adc
push
and
call
fwait
iret
data16
and
pop
out
popa
in
pushf
mov
xchg
jmp
js
rcll
enter
dec
mov
inc
mov
pop
mov
loope
call
sbb
xchg
mov
xor
addr16
test
out
xchg
insl
loope
add
rcrl
pusha
add
pop
mov
adc
ror
mov
je
xchg
add
jge
push
push
sub
shrb
push
outsl
lret
jo
sarl
and
jb
mov
xchg
and
andb
gs
or
in
ret
pop
add
push
int
mov
jecxz
mov
out
bound
mov
pop
mov
mov
pop
pop
aam
lea
mov
adc
adc
inc
out
push
stos
or
mov
and
mov
adc
clc
in
lock
pop
jle
adc
sbb
mov
js
pop
es
push
mov
loop
leave
or
mov
lret
jl
bound
push
pop
cmpb
cmpb
sti
rolb
loop
jp
mov
jns
pop
mov
pop
xor
and
stc
test
data16
shlb
addb
xor
pop
xchg
out
add
adc
cmp
cs
icebp
push
mov
sub
pop
test
mov
sahf
or
cmp
adc
fimull
decl
or
add
lods
or
fidivl
loope
sub
add
push
in
negb
js
out
push
dec
bound
mov
sub
mov
xchg
xchg
stos
aam
fdivrl
add
int
test
jl
jnp
lods
addr16
loopne
hlt
bsr
push
jne
lock
xchg
es
pop
sbb
gs
mov
call
mov
or
aad
test
mov
js
leave
inc
leave
into
sbbl
stc
sbb
fsubr
mov
pop
ficoms
enter
out
add
test
daa
lea
xor
push
daa
in
lods
fistpl
or
cmp
ret
stos
inc
sub
enter
sbbl
mov
push
mov
mov
or
rorb
jnp
in
jecxz
inc
mov
or
sti
pop
ds
inc
mov
mov
jne
push
imul
mov
lahf
ret
testl
mov
xchg
mov
dec
mov
fwait
loope
dec
je
or
adc
sbb
std
pop
inc
jmp
js
cmp
jge
jg
loope
test
adc
dec
xchg
enter
mov
mov
int
fcomps
mov
cwtl
dec
leave
ljmp
sbb
popa
add
jp
fiaddl
and
pusha
jmp
scas
fldcw
mov
inc
cs
ds
imul
es
test
push
xchg
inc
push
enter
cmp
pop
cmp
fistpl
jns
jmp
push
les
enter
mov
scas
les
out
or
mov
mov
ret
sub
fcmovnb
or
shrb
dec
mov
xchg
jmp
jbe
insb
enter
add
leave
xchg
add
in
inc
mov
or
lods
pop
cmp
sbb
arpl
out
pop
mov
test
inc
outsb
fcmovnb
dec
xor
push
addb
out
jne
rcll
sub
lods
mov
jb
call
xor
lret
push
xor
stos
pop
xchg
hlt
inc
movsb
mov
cmp
mov
in
shll
sub
nop
mov
loope
cmp
cld
pop
and
add
sub
lret
cmp
in
push
testb
push
ds
jl
xor
mov
std
cmpps
ficoml
xchg
mov
testl
xor
arpl
iret
mov
jnp
shr
push
mov
das
jmp
pop
adc
lcall
xlat
jg
xchg
aas
push
movsl
in
lcall
jp
mov
sahf
push
xchg
scas
daa
inc
inc
push
cmp
pushf
jns
cmp
dec
inc
test
lds
push
sub
mov
rorb
call
dec
shlb
xor
daa
test
je
inc
ret
push
add
dec
xor
dec
test
jno
fwait
xchg
jmp
popa
inc
jns
jle
xor
lock
mov
aas
mov
push
mov
rol
mov
pop
lock
dec
xchg
adc
mov
mov
pand
out
aaa
xchg
sti
jge
imul
cmp
test
mov
sbb
jmp
mov
int3
in
inc
xchg
xchg
or
test
mov
push
inc
pop
xor
lret
push
pop
pusha
sahf
out
into
cmp
cltd
rdpmc
xchg
stos
sub
jmp
repz
cli
adc
nop
sahf
push
mov
add
sub
and
loop
lahf
adc
mov
mov
mov
iret
test
nop
cmp
leave
mov
xor
ss
sbbb
nop
jmp
sti
loope
int3
dec
push
std
cltd
sub
jnp
faddl
pushf
leave
iret
popl
scas
inc
das
cmp
sub
mov
comiss
lods
cmp
js
push
sti
rolb
inc
inc
jns
divl
dec
and
jecxz
fsub
lret
xor
loopne
mov
xor
sbb
mov
sti
sbb
sbb
push
inc
mov
add
cmp
mov
push
xchg
rorb
mov
lds
push
or
ljmp
push
xor
in
stos
push
imul
repnz
dec
xchg
xor
outsb
add
sub
sbb
arpl
popa
mov
fwait
mov
je
pusha
stc
add
arpl
pop
pop
bnd
mov
lods
pusha
and
mov
or
les
adc
decl
or
lea
jo
cltd
jg
or
push
mov
js
inc
das
in
pusha
inc
fs
cmpsl
jmp
mov
dec
dec
in
pop
and
pop
cmp
inc
push
cmpsl
and
xchg
mov
add
rcrl
rcll
jo
cli
iret
movsl
movsb
jnp
adc
imul
mov
dec
adc
sbb
lret
mov
jg
pusha
test
fldcw
ficompl
in
inc
xchg
xlat
sahf
cmpsb
push
movsl
jns
les
sets
push
stos
mov
xchg
das
pop
dec
repz
jo
push
push
dec
jae
mov
lret
idiv
add
or
mov
add
mov
mov
inc
push
mov
mov
cmp
not
leave
lahf
sarb
adc
loop
mov
cltd
jmp
add
int3
addl
outsb
xlat
push
scas
sub
cmp
xchg
addb
icebp
lret
mov
popf
imul
jg
rolb
mov
mov
inc
jo
fdivr
testb
add
inc
les
mov
lcall
pushf
mov
inc
xlat
stos
fsubrl
add
mov
in
dec
test
jb
test
aam
xchg
xor
xor
jmp
pop
lret
movsb
mov
mov
insb
sub
js
xchg
inc
or
jnp
xchg
aam
add
dec
into
mov
add
in
jbe
pushf
rcrl
ret
andl
test
cmpsb
loope
mov
and
ss
repnz
jg
sub
pop
fsubrs
or
cwtl
xchg
out
jo
imull
pop
clc
imul
sti
cmp
movsb
mov
int3
dec
xor
gs
dec
sub
xor
in
iret
jg
cmp
push
jnp
add
add
mov
fwait
dec
mov
push
mov
repz
or
out
xor
jb
and
fimuls
enter
push
lcall
jmp
stos
cmpsl
mov
insb
shr
ret
loop
jne
mov
inc
fwait
gs
cs
hlt
insb
ficoml
mov
sbb
cmpsb
call
adc
not
push
mov
fisubl
push
loopne
mov
adc
aas
xchg
out
sbb
pusha
arpl
push
sub
icebp
cli
aam
dec
test
mov
add
ret
fcomps
mov
inc
xor
lds
popf
mov
movsl
popa
movsl
popf
les
mov
mov
movsl
push
mov
in
cmp
popf
sbbb
mov
cmpsb
ja
sbb
enter
mov
jp
cs
clc
mov
out
cmc
cmp
mov
mov
fdivl
and
xchg
cmp
dec
pop
mov
mov
iret
pcmpgtd
or
stc
ret
dec
cmp
rorl
cmpsb
xchg
imul
ja
jg
sub
pop
adc
and
out
das
add
fisubrs
ret
or
pop
xchg
sub
and
cmp
xchg
jg
jo
mov
and
sbb
pop
xchg
xchg
mov
int
push
call
add
mov
push
jl
push
dec
lods
fimuls
scas
jno
inc
xorb
cltd
gs
mov
lock
in
cltd
mov
jae
adc
je
dec
cli
mov
jmp
orb
cmp
add
test
fidivs
jns
sub
sub
sub
mov
and
adc
jns
mov
clc
mov
ja
inc
cmc
xor
mov
out
and
push
mov
stos
jne
sub
stos
mov
hlt
cmp
mov
mov
sahf
hlt
mov
loope
mov
xor
pop
mov
scas
ucomiss
xchg
jo
jb
push
pop
xor
mov
mov
into
les
mov
adc
add
loopne
mov
fldt
aas
or
mov
test
mov
pop
ret
ficompl
inc
out
ljmp
xchg
scas
mov
ret
insl
das
adcb
sbb
jb
jmp
sbb
mov
lea
adc
je
mov
xchg
jbe
pushl
inc
dec
popf
shr
sbb
jns
xchg
popa
jbe
push
sub
and
ja
mov
lea
test
add
test
or
into
repnz
cmp
pop
imul
cmp
jg
ret
cmp
mov
ficomps
aas
inc
int
mov
stc
cwtl
dec
cltd
js
stos
loope
in
pop
xchg
push
scas
test
mov
je
aas
cli
mov
or
call
nop
mov
push
sbb
push
and
mov
inc
mov
cmc
add
hlt
rcrl
test
pop
repz
or
xchg
xor
popa
pushf
scas
cmp
insb
loopne
add
add
fwait
pop
or
adc
sbb
dec
rcrb
or
lret
dec
dec
movsb
in
sbb
xor
and
pushl
pop
sti
test
sbb
andl
inc
out
push
sub
je
or
lret
imul
out
adc
pusha
or
mov
push
popa
inc
mov
in
mov
sti
notb
xchg
xchg
fmuls
lods
cld
fiaddl
pop
mov
pusha
inc
mov
pop
daa
int
faddl
test
or
xor
inc
dec
loope
jae
sbb
push
pop
lret
cmpb
repz
cmc
fwait
pop
mov
addr16
xor
ror
jle
mov
test
call
jecxz
cmp
mov
ljmp
inc
sbb
pop
fcom
iret
stos
test
xor
fbstp
out
sub
fisttpl
mov
loope
out
in
ljmp
push
shr
repz
out
int3
and
call
lcall
dec
sub
rcrb
mov
push
loopne
pushf
dec
std
mov
dec
je
jmp
out
cld
sub
xor
sarb
jnp
test
xchg
pop
inc
jp
and
lock
or
sub
pop
pop
lods
mov
dec
jmp
jge
js
mov
mov
cs
adc
leave
cmpsl
inc
jo
ja
cmpb
sti
push
into
aas
add
sbb
nop
insb
mov
bnd
push
mov
iret
pop
add
sub
sub
jb
dec
cwtl
pop
push
pop
lds
aas
in
dec
mov
dec
push
jno
aad
xchg
push
rorb
popa
pop
mov
mov
sbb
lret
movsl
mov
mov
adc
adc
mov
outsb
push
sbb
movsb
lea
or
cmp
scas
sub
push
data16
aaa
lret
cmpsl
arpl
loope
and
aad
inc
dec
fstl
in
sbb
jno
fcomp
xor
cmpsb
repz
pop
ret
ficoms
and
inc
das
push
mov
push
repz
or
cmp
jmp
loope
loop
gs
shr
aas
fdivs
or
scas
call
jmp
shlb
jle
xchg
adc
int
mov
cmp
out
sbb
outsl
cltd
xchg
sub
dec
and
inc
movb
mov
shll
out
shll
jmp
icebp
aad
test
fisttpl
cli
cs
pop
pop
stc
es
ljmp
aam
or
mov
rolb
xor
mov
xchg
jnp
mov
js
shlb
lret
xlat
mov
mov
mov
imul
cltd
xor
shl
je
xor
clc
sub
mov
jae
stc
add
xchg
sub
mov
push
loope
xchg
jmp
std
test
pop
pushf
insb
and
push
popa
loope
cli
cmp
arpl
push
push
shrb
xchg
aam
sar
shr
or
ljmp
push
add
ror
add
fcompp
jb
dec
push
scas
add
cmovnp
fld
pushf
inc
push
repz
insl
shrl
cld
into
outsl
cmp
xor
add
inc
popf
dec
mov
loop
mov
fldt
push
mov
leave
lock
arpl
aam
push
xor
test
addr16
pop
test
adc
push
sbb
jp
xchg
add
dec
and
jb
xchg
inc
push
mov
push
and
jne
negb
push
cmc
loop
out
xchg
stos
movsl
repz
inc
rorb
sub
inc
push
and
insl
mov
or
or
inc
jecxz
inc
sub
es
test
sub
daa
mov
lcall
iret
jge
adc
sbb
add
push
adc
test
dec
in
cmp
nop
ljmp
ret
psubusb
cmc
aaa
subl
xorb
mov
sub
mov
xor
add
aam
nop
testb
push
sub
pop
fsubrl
imul
outsb
dec
xor
fst
call
sbb
jo
je
xchg
shrb
pop
shr
xchg
cmpsb
hlt
imul
add
sbb
stos
sub
jb
pushf
push
cmpsb
in
jg
and
fisubrl
out
cmpsb
pop
fdivrl
and
sub
rorb
nop
ja
xor
fcmovnbe
movsl
outsl
outsl
and
mov
xor
mov
or
sahf
rorl
pop
sub
jbe
popf
mov
xchg
push
out
or
int
aad
pop
push
inc
fsubrl
and
sbb
fs
jl
mov
add
mov
xor
shll
sbb
sub
testl
lret
inc
dec
loopne
pushf
lcall
cmpsb
jl
std
jne
cmp
out
xor
xchg
mov
gs
dec
fwait
mov
lret
enter
mov
out
push
imul
stos
mov
rcl
xlat
sbb
cmp
and
mov
adc
xor
lret
ret
loopne
stc
sbb
adc
in
jg
pop
mov
gs
dec
pop
push
fldt
jno
add
xchg
mov
adc
push
mov
bound
pop
frstor
nop
jl
lahf
mov
add
daa
arpl
xchg
dec
dec
pop
std
mov
push
lret
inc
sub
in
imul
cwtl
js
sub
mov
sub
push
mov
xchg
mov
xor
xchg
add
sub
cmp
mov
mov
ja
push
xchg
icebp
jecxz
pop
pop
jns
push
lock
fs
loope
cmpb
dec
scas
mov
inc
out
lahf
push
xchg
mov
xchg
inc
mov
cmpsb
pop
mov
out
pop
push
mov
jecxz
stos
pop
and
fimull
pop
push
mov
insl
adc
and
pop
push
pop
addr16
xchg
jle
xchg
cmp
imul
in
adc
imul
pop
mov
jmp
inc
jge
pop
jns
mov
dec
xchg
shlb
repnz
adc
int
outsl
ret
aam
in
test
jbe
or
and
mov
and
adc
mov
scas
ret
inc
lock
push
and
xchg
jmp
stos
imul
or
mov
sub
cld
sbb
cmpl
adc
pop
adc
xchg
inc
cmpsb
insb
mov
xchg
repnz
jno
xor
dec
mov
sub
loope
mov
sbb
cmpb
lock
rorb
push
xor
jge
mov
jo
rcrb
jmp
fldenv
arpl
ret
mov
ss
mov
mov
xor
lret
jmp
and
mov
push
push
dec
mov
test
mov
push
ds
push
add
popa
fstps
jle
jae
imul
dec
test
pop
sub
lods
inc
pop
add
push
adc
or
mov
in
lahf
xchg
add
add
inc
xchg
and
mov
jmp
xchg
test
repnz
sti
mov
enter
outsb
sub
aas
notl
pop
fildl
mov
push
in
push
mov
mov
jno
xchg
movsl
cmpsl
inc
jmp
mov
aam
adc
mov
insl
xchg
imul
add
inc
dec
sub
cmp
pop
in
mov
push
imul
incb
xchg
pop
mov
out
sub
cmc
cli
fwait
or
sub
push
in
cmp
add
xor
mov
pop
aas
ret
xchg
pop
cmpsl
stos
mov
xchg
or
or
xchg
sub
imul
ds
or
dec
mov
xor
lds
ds
cmp
cmpsl
jg
push
inc
jno
cltd
outsb
addr16
xor
mov
scas
push
aam
jns
not
or
push
lock
sbb
adc
add
rolb
add
pop
inc
loopne
cmc
leave
ds
aam
mov
mov
mov
jmp
pop
jmp
data16
inc
mov
mov
dec
jmp
inc
jno
dec
push
scas
fdivr
decb
mov
fisttps
pop
mov
call
dec
out
rcrl
out
jb
ret
outsl
inc
ss
fwait
add
imul
dec
loop
jno
leave
ret
or
mov
push
bound
or
pop
sbb
pusha
notl
out
rclb
add
iret
aas
lods
xor
xor
cli
xchg
out
push
cmp
sub
stos
stc
xor
jo
add
out
push
cmp
dec
roll
lret
adc
aaa
out
scas
mov
mov
outsb
fsubl
inc
loope
fisubrl
adc
mov
pop
aam
in
sub
lods
sub
mov
out
cwtl
sbb
xchg
mov
cmpb
shld
or
cmpsb
lret
ljmp
jo
jmp
push
push
add
fisubrl
add
leave
push
mov
sbb
imul
pop
adcb
iret
add
xor
movsb
in
mov
jne
scas
adc
xchg
loope
xor
xchg
jnp
cmp
ss
xchg
dec
inc
fisttpl
outsl
rcr
mov
insl
jge
out
iret
cmp
mov
mov
in
lea
or
xorl
add
adc
jae
subl
lea
cmpsl
pushfw
sti
sbb
in
loop
testb
adc
xor
mov
jg
xor
jle
adcl
in
addr16
jbe
mov
dec
out
iret
fisubrs
fs
or
xor
mov
lret
mov
add
jp
adc
fists
push
cmc
xchg
or
xor
mov
mov
inc
push
dec
cmp
sub
mov
gs
insb
jno
sbbb
imul
xchg
mov
enter
sbb
out
or
fnstenv
mov
pop
and
addr16
pop
insb
lods
pop
or
mov
xor
dec
fldcw
stos
stos
mov
mov
faddl
in
inc
xor
pop
inc
dec
cmpsb
push
mov
xchg
out
adc
mov
cmp
mov
add
pop
push
test
pusha
lods
lea
orl
fmul
mov
dec
jge
pusha
dec
ret
fs
push
daa
arpl
aad
insb
inc
imul
mov
xchg
sub
lcall
mov
cmp
addr16
mov
inc
cmp
fcmovnu
test
test
or
xor
mov
out
divl
xchg
jecxz
adc
xchg
shll
mov
pop
adc
push
mull
nop
inc
sbb
shl
fimuls
xchg
push
jo
jno
lds
rcrl
or
push
rclb
sahf
xrelease
xlat
add
mov
and
movsb
inc
mov
xor
idivl
sarb
aas
addr16
add
arpl
hlt
inc
scas
push
xor
cli
adc
sub
jp
push
jl
mov
cmp
pop
mov
mov
out
frstor
jno
xor
cld
push
or
dec
int
jae
stos
mov
sti
repz
enter
cmpsb
jno
sbb
pop
adc
ret
fcoms
mov
dec
jg
js
add
mov
js
ljmp
fistl
inc
sbb
xor
mov
sahf
rcrl
xor
jno
xchg
bound
ficompl
mov
dec
je
mov
mov
adc
arpl
cld
dec
and
xchg
pop
lds
fwait
sahf
test
cmp
sub
roll
mov
fwait
es
fst
inc
dec
xchg
xor
divl
inc
xchg
test
lods
push
popf
out
cmp
cmp
aam
cmp
xchg
mov
outsl
les
mov
insb
pop
rol
cltd
xcrypt-cfb
cmpsl
arpl
sbb
out
xor
aaa
lret
or
xor
out
inc
inc
dec
or
mov
mov
mov
pop
fists
repz
push
outsl
jecxz
adc
ffree
or
or
sbbl
pop
fiadds
cmp
jecxz
ljmp
add
sub
add
daa
xchg
mov
loop
jns
outsl
fmuls
sbb
sbb
popf
call
jge
loopne
dec
mov
push
jp
pop
iret
aas
pop
fsubr
lea
dec
jne
cmc
cmpsb
sarb
dec
inc
jne
sub
mull
jle
adc
lret
hlt
mov
lahf
lret
call
push
imul
mov
xchg
push
dec
xchg
sarl
sbb
push
or
xorl
dec
fdivs
cld
dec
and
inc
cmp
jnp
sahf
je
andb
pop
add
pop
push
mov
sbb
cmp
sbb
mov
loop
fdiv
std
inc
mov
jne
xchg
call
push
out
inc
pop
push
add
in
popa
mov
stos
mov
sbb
pop
push
lods
fsubl
push
pop
test
enter
add
cmpsb
or
sub
xchg
lock
ds
popw
sub
mov
and
aad
outsb
movsl
out
in
jl
ss
pop
lea
or
mov
adc
pop
and
inc
lret
xor
mov
aas
and
sbb
cmp
in
sbb
cmp
out
cmpsb
js
insl
sub
imul
add
jge
mov
mov
mov
jne
mov
test
xchg
jae
push
jmp
add
adc
add
data16
nop
xor
mov
cmp
cmp
outsl
insl
stc
add
ljmp
xlat
xor
out
imul
test
cmp
mulb
ret
fwait
cmpsb
mov
xor
jae
push
mov
push
dec
xchg
out
push
mov
mov
or
mulb
inc
testl
lds
rcr
pop
es
sbb
adc
aad
push
shrl
mov
xor
aam
push
mov
sti
xlat
stos
and
mov
lea
ja
mov
push
pop
outsb
icebp
mov
sti
iret
xor
hlt
adc
out
push
fmul
sub
lret
les
and
aad
push
rep
pop
jno
ret
popa
push
fistps
fiadds
test
push
or
cwtl
and
rorb
cmp
jmp
cmpsl
out
mov
call
cmpsb
or
les
testb
ret
mov
rcll
dec
repnz
inc
movb
pop
mov
mov
adc
loop
sub
pop
arpl
jo
and
outsl
imul
sbb
add
into
cmp
sub
lahf
movsl
jecxz
or
pusha
sbb
popf
sub
cli
loopne
stc
push
mov
pop
daa
inc
jge
inc
lds
mov
sbb
inc
test
jl
arpl
fnstcw
xchg
js
das
test
out
sub
xchg
add
mov
xor
push
add
add
adc
jns
fucomi
mov
outsl
push
jp
loopne
mov
mov
insl
or
sub
loopne
cs
outsb
dec
jns
lock
jp
std
adc
mov
data16
cmp
mov
cs
test
lret
push
pop
ss
xor
in
pop
int
or
mov
stos
repz
jo
xchg
inc
push
cmp
jecxz
cmp
jl
dec
mov
mov
dec
cltd
jmp
sahf
dec
vmwrite
jmp
mov
scas
stc
fmuls
jg
xchg
cmc
mov
test
out
push
js
adc
sub
jbe
xor
les
push
test
sahf
xlat
call
push
iret
sub
xchg
mov
mov
or
adc
test
and
inc
and
xchg
leave
cltd
pop
sbb
adc
jge
jnp
enter
and
out
add
popf
fbld
push
test
test
fs
dec
push
mov
mov
sub
or
repz
cmp
sbb
inc
not
je
and
mov
xlat
outsb
int
lods
lods
xor
fsubs
stos
lahf
jl
aaa
cmp
push
sbb
fwait
ret
out
aad
out
fstl
in
and
clc
or
sub
adc
pop
adc
adcb
das
mov
inc
idiv
dec
cmc
insb
xchg
cli
ljmp
enter
cwtl
adc
xor
cmpl
pop
and
cli
outsl
jmp
das
cltd
jo
lea
jle
test
push
sub
mov
xchg
fadds
sbb
clc
push
dec
pushf
jb
gs
cltd
xchg
pop
testb
adc
testb
or
cwtd
in
mov
push
jb
call
push
sub
and
lods
rorb
mov
flds
pushf
add
adc
aaa
adc
inc
pop
sbb
shl
or
xor
cmpsb
out
xor
daa
sbb
insb
shrb
sub
pop
pop
push
test
mov
daa
aad
jg
cs
jns
fidivrs
mov
and
call
mov
int3
sub
cmp
inc
lret
pmovmskb
adc
mov
call
pusha
clc
aaa
shrb
or
and
pop
std
dec
repz
addl
xor
data16
lret
je
xor
scas
incb
bound
cld
ror
lods
mov
push
leave
jmp
and
jne
iret
mov
stc
pop
sub
in
test
call
push
xchg
cmc
mov
and
inc
daa
inc
sub
imul
mov
lods
lret
cmpsb
pop
mov
adc
mov
addr16
lret
mov
cmp
rcl
imul
lret
std
inc
call
lahf
fldt
mov
in
and
es
fdivl
cmp
cmpsl
sub
cmp
call
scas
lods
rcrl
mov
dec
inc
aas
and
mov
jecxz
rorl
std
adc
pusha
add
loopne
nop
mov
pop
insl
out
movsb
aas
icebp
jne
push
pop
in
mov
inc
jle
ljmp
cld
sbb
aas
cmp
daa
adc
gs
testb
mov
leave
test
adc
push
push
mov
repnz
fisttpll
cmp
cltd
stc
addl
xchg
xchg
enter
and
or
loopne
lcall
pop
add
stc
arpl
mov
jp
gs
mov
iret
daa
jb
mov
bound
ljmp
adc
pop
test
pop
mov
fidivrl
imul
aaa
or
jne
xorl
inc
filds
push
std
fwait
xchg
cs
mov
xchg
loop
rorl
divl
jno
jne
aas
adc
int
pop
adc
mov
inc
pusha
push
jae
dec
dec
or
mov
add
pop
jp
jg
das
addr16
xchg
out
popl
inc
pop
ja
cmpsl
popl
jo
cmp
push
pushf
lds
jb
add
sbb
xor
cmp
js
sbb
push
lcall
and
jg
movsl
ret
les
dec
cmp
aaa
jo
sbb
insl
push
out
outsl
ror
lret
addr16
adc
lea
mov
jg
jb
cmp
leave
repnz
jb
mov
jl
rcrb
rcrb
sbb
loop
mov
lret
push
dec
cmpsl
hlt
sbb
inc
fsubrs
movsb
xchg
sub
mov
jnp
mov
xchg
and
in
dec
das
pop
aad
cltd
jne
cli
dec
andb
lret
inc
lret
insl
lret
sub
rep
push
js
insl
push
sub
mov
dec
push
mov
push
xlat
push
lods
in
jle
mov
inc
in
xlat
xor
cmc
dec
mov
sbb
rorl
rolb
decl
or
int
push
iret
jle
mov
xor
pop
jle
sbb
and
mov
pop
xorl
or
pop
std
sub
xchg
out
or
int3
movsl
lcall
dec
and
cmp
or
subb
out
mov
inc
out
fildll
ret
mov
je
xor
push
lock
sub
std
or
insb
jb
out
push
push
gs
push
push
xchg
adc
push
mov
xchg
adc
jo
in
or
push
es
xchg
insl
adcl
pop
lcall
pop
push
outsl
jp
mov
or
xor
xchg
cs
xor
mov
aam
je
sarl
imull
pop
imul
fdivrl
xor
and
fsubr
pop
orb
mov
dec
pop
mov
mov
cmp
dec
aad
mov
aas
inc
and
movsl
cmp
lock
pop
sar
mov
inc
negl
xchg
bound
loope
cld
ljmp
xchg
ret
cmpsl
mov
fdivrp
mov
xchg
andl
push
push
repz
pop
inc
mov
arpl
xchg
lods
movzwl
mov
xor
pushf
scas
push
xlat
jmp
jbe
mov
dec
xchg
cmpsl
loop
pop
cwtl
jne
aas
sub
ret
loopne
or
xlat
lock
loopne
mov
mov
in
rdtsc
cmc
pop
add
xor
push
outsb
jne
mov
outsb
pushf
pushf
mov
push
stc
and
int
aas
loop
mov
sbb
xchg
pop
insl
out
xchg
mov
imul
sti
jl
cmp
mov
pop
ljmp
bound
push
push
jp
movsb
sub
pushf
dec
lods
fnstenv
pop
push
rcrb
push
mov
or
test
add
scas
aas
dec
jecxz
fildl
jge
sahf
mov
shr
sbb
xchg
pop
mov
ljmp
les
xor
leave
mov
test
xchg
cmp
lock
xlat
shl
pop
xlat
filds
mov
jp
inc
pop
xor
imul
inc
cmp
xchg
lods
dec
xorl
cmp
jge
sub
xchg
in
mov
lcall
mov
outsb
mov
lcall
adc
arpl
nop
sahf
fs
mov
imul
mov
dec
jae
pop
xchg
xor
arpl
sti
mov
or
addr16
nop
loopne
push
dec
sbb
adc
aad
mov
mov
inc
mov
mov
mov
testl
sub
test
and
in
pop
cmpsb
rcr
adc
cmp
mov
mov
fwait
and
add
sub
adc
addb
ffreep
push
sbb
aam
adc
mov
push
imul
pop
xchg
rcr
jle
pushl
xchg
addl
mov
or
and
int
mov
movsl
rcrb
adc
cmp
sbb
arpl
lods
mov
ljmp
inc
xor
or
loop
popa
in
pop
popa
and
fs
xchg
lahf
sbb
cmp
xlat
movsl
jle
sub
jl
adc
lock
outsb
jmp
sub
jo,pt
popfw
stos
mov
popf
in
cmp
push
xor
sti
mov
or
iret
out
call
sahf
ror
out
sub
mov
xchg
push
or
movb
xchg
popf
fwait
pop
mov
call
shrb
xlat
adc
addl
rcrl
pop
data16
loope
mov
dec
inc
add
loopne
sbb
pop
in
push
mov
arpl
outsb
and
rolb
and
and
xor
pop
aas
cmpl
dec
pop
dec
ror
mov
rcr
xchg
adc
sti
adc
sbb
roll
fmuls
mov
push
pop
fisubrl
stos
jecxz
push
in
jmp
jp
shld
fwait
or
sub
imul
xchg
pop
je
mov
cmc
cwtl
mov
add
roll
insb
xchg
scas
xchg
xor
xor
mov
inc
xchg
and
clc
mov
mov
outsb
mov
xchg
data16
cmp
push
mov
mov
cmpb
cltd
add
fmul
jmp
xchg
mov
pop
hlt
orl
insb
inc
sub
mov
xor
outsb
jmp
mov
jl
mov
nop
add
shll
pop
arpl
push
cmpsb
xor
sbb
jbe
jg
or
in
loopne
jnp
push
xchg
xor
mov
insl
jmp
lock
movsl
mov
add
sahf
cld
outsb
subl
rcrb
mov
roll
mov
pop
cmp
lods
pop
add
pushf
mov
out
mov
fsts
or
in
cltd
mov
inc
pushf
xchg
aas
ds
mov
mov
mov
mov
mov
loop
js
add
add
sbb
jae
xchg
mov
sbb
pop
lcall
xchg
adc
das
repnz
dec
xchg
sbb
inc
pop
pop
xor
and
dec
aad
cld
fsubrs
sbb
imul
pop
mov
pushf
sub
push
sub
sbb
popa
xor
add
adc
mov
jl
sbb
dec
add
stos
scas
das
in
cmpsl
jp
pop
jb
jo
or
std
push
ljmp
negb
and
fs
jb
jne
rcrb
int
jl
imul
jg
pusha
push
xor
sbb
mov
addr16
loop
sub
in
xchg
aad
jns
inc
mov
add
fdivs
dec
xlat
push
push
clc
push
mov
cmp
and
jno
push
xor
sub
jmp
push
je
mov
lock
and
cmpsl
or
jne
sbbb
dec
push
lock
loopne
in
mov
push
jl
pop
jnp
dec
flds
pop
pop
les
or
call
pop
daa
xchg
mov
jo
and
ss
fidivrl
inc
or
pop
push
shrb
ret
addr16
sub
test
jle
movsb
fldt
pushf
movsl
test
inc
jae
jno
in
add
in
adc
lds
mov
fwait
es
inc
es
je
fldl
mov
je
dec
arpl
dec
data16
lea
xchg
popa
push
cmp
sub
sahf
inc
cltd
repnz
int
cmpsb
mov
push
sub
xchg
jno
push
dec
es
insb
xor
pop
push
or
outsb
mov
imul
xchg
insl
xchg
add
cli
xchg
push
jle
ret
stc
je
push
dec
mov
xchg
mov
popf
or
jo
mov
sub
jmp
jne
adc
xchg
mov
ss
push
xor
inc
xchg
xor
adc
adc
subl
add
outsb
test
xor
inc
add
push
dec
adc
out
jne
fbld
jge
push
mov
xlat
cltd
es
jb
lods
fiaddl
aaa
in
test
cmc
popaw
inc
mov
lret
xchg
mov
dec
shrl
and
lcall
gs
sub
enter
push
vpcmpeqw
mov
sar
sub
cmp
bound
out
push
jmp
outsl
cli
jnp
daa
jae
aaa
add
insb
fsqrt
jb
jns
sbbl
imul
dec
in
inc
ljmp
cmp
xor
sti
iret
pop
mov
or
adcl
jecxz
in
iret
cmc
inc
mov
mov
push
ret
ja
mov
sbb
push
mov
jnp
and
stos
adc
out
push
lods
mov
mov
repz
and
lea
aas
icebp
sbb
push
sub
inc
adc
push
movsb
sub
dec
insl
loop
add
xor
mov
pop
sub
or
fsubs
xor
and
and
push
inc
mov
mov
mov
add
in
js
push
mov
pop
dec
mov
iret
pop
fsubl
pop
cltd
cmp
ja
das
out
imul
add
xchg
push
mov
std
in
push
sbb
fnstsw
add
xchg
sbb
pop
add
outsl
test
repnz
subl
mov
popa
fstpt
sbb
out
xchg
add
in
dec
shrb
scas
sahf
mov
jg
cmp
push
outsb
pop
and
xor
mov
lods
ds
lret
and
and
jmp
and
pop
add
popa
int3
mov
jmp
mov
cmc
dec
popa
jmp
imul
pop
scas
inc
xchg
xchg
aad
rcl
push
mov
cwtl
push
mov
dec
sti
adc
dec
jnp
insb
sub
sub
mov
jecxz
sub
lret
insl
xor
aaa
mov
lods
aad
repz
and
inc
xor
cld
or
jmp
adc
mov
pushf
mov
fsts
sub
mov
pop
sbbl
repz
ss
jp
out
adc
xabort
cmp
push
jno
and
cmpsb
sahf
movsl
or
xchg
cmp
das
cs
pop
mov
addr16
jp
and
pop
sbb
sub
mov
xchg
inc
lret
loopne
add
sub
ret
fcompl
pop
xor
repnz
cmp
push
int
pop
xlat
les
outsb
les
sub
es
mov
inc
add
fs
movb
fcoms
ljmp
jbe
mov
cmp
mov
push
iret
mov
adc
lcall
push
sub
pop
sbbl
leave
fildll
xchg
iret
jb
imul
xchg
not
or
outsl
adcl
jbe
add
jmp
clc
push
add
jp
inc
incb
push
out
ucomiss
lea
or
mov
mov
add
or
sub
clc
cmp
adc
mov
mov
cmc
jl
jbe
lea
mov
pop
dec
xchg
pop
pop
in
pop
lret
jp
inc
mov
iret
xor
cmp
mov
notl
lret
das
imul
sub
stos
leave
les
sbb
std
sbb
sbb
loope
shll
cmp
adc
add
dec
scas
sub
mov
enter
and
and
cmp
jmp
mov
mov
pop
pop
outsb
icebp
and
xor
mov
jl
xchg
jne
mov
xchg
pop
in
popa
xor
push
jmp
inc
out
fmull
adcl
test
mov
mov
mov
int3
pusha
pop
mov
mov
cld
sarl
fldenv
push
cwtl
iret
or
in
iret
lret
xchg
or
cmp
movsl
std
dec
cmpsl
push
sbbl
dec
jecxz
aas
xchg
cmp
mov
mov
std
mov
or
movsl
out
fisttps
lds
testl
xchg
lock
ds
pop
and
imulb
push
pushf
imul
pushf
icebp
iret
lret
pop
jle
xor
int3
lods
nop
stos
inc
clc
mov
mov
sbb
jns
lock
push
ds
lea
and
cmp
sbb
ret
fldt
and
jl
test
loopne
daa
je
lea
in
jae
test
push
test
or
in
adc
mov
inc
into
or
aam
mov
je
jmp
cld
mov
inc
xor
inc
adc
cli
shll
lea
bound
xchg
cmc
pop
leave
leave
test
xchg
test
inc
cmc
jns
or
sub
lcall
inc
addl
mov
clc
dec
aad
mov
nop
adc
arpl
pop
inc
sahf
inc
add
insl
jmp
fadd
and
mov
ja
inc
xor
or
enter
inc
mov
outsb
jbe
jb
insl
jl
jnp
cmc
in
pusha
push
mov
and
movsb
sbb
sub
test
dec
imul
add
pop
fcompl
push
xchg
jmp
or
jbe
mov
xchg
lds
push
dec
sub
test
movsl
and
add
cmp
dec
push
pop
es
lods
cmp
inc
push
and
sub
push
push
pop
mov
aas
jl
cmp
cmp
sbb
mov
cmp
jns
scas
sbb
cmpsl
xchg
fdivs
push
push
dec
repnz
and
scas
xchg
rolb
out
add
jne
add
rclb
cmpsb
cli
jns
xor
imul
push
pop
sti
jb
rclb
pop
cs
loop
cs
xchg
cmp
pop
mov
cmp
cmp
jg
adc
mov
ljmp
int
data16
dec
pop
movb
push
mov
adc
push
addl
stos
dec
or
aam
fstpl
loopne
pushf
add
loope
jo
xchg
roll
pop
mov
or
push
ret
xchg
imul
nop
pushf
pop
ds
out
popf
push
daa
scas
pop
pop
mov
xor
mov
dec
outsl
std
out
fwait
xchg
dec
xlat
inc
in
insl
xchg
cmpsb
inc
pushf
and
dec
add
out
ja
and
xlat
shl
test
pop
push
sbb
rorl
adc
fisttps
jg
scas
sbb
mov
adc
ja
test
inc
pop
lcall
aad
pop
fwait
mov
call
adc
mov
sub
add
mov
cmp
into
cmp
out
jno
xor
mov
mov
pop
icebp
mov
mov
inc
pop
xor
sahf
and
ss
cmp
out
push
jnp
outsb
addr16
pop
es
xor
lret
push
mov
adc
data16
cmp
scas
fdivs
lret
xchg
gs
and
aad
lock
ljmp
loope
das
movsl
jno
enter
ret
mov
test
pop
popa
jo
js
stos
push
dec
mov
cmpsb
cli
xor
lock
inc
ret
jbe
mov
enter
dec
mov
add
cmc
movsl
cli
ss
sti
mov
stos
and
orl
fcmovne
into
xchg
lods
out
xor
sbb
int
dec
stos
xchg
repnz
sbb
data16
in
into
mov
mov
push
mov
jnp
divb
jg
inc
mov
adc
stos
add
arpl
push
mov
imul
lock
mov
mov
test
popf
popf
pushl
cmp
xor
cld
inc
iret
mov
fsubrl
adc
sarl
inc
xor
xchg
pop
inc
jno
mov
xor
loopne
ret
dec
mov
xchg
imulb
inc
jge
jne
nop
fimull
lret
lcall
fldt
push
mov
sti
pop
scas
mov
ds
out
or
sbb
popf
int3
test
repnz
fistpll
fiadds
fcmovne
test
fidivs
jbe
push
dec
push
lods
dec
nop
and
pop
mov
sbb
sahf
mov
out
push
int3
stc
mov
cmp
addr16
cmp
es
push
add
rcrl
cltd
push
ja
jnp
out
inc
daa
test
mov
nop
cmp
pop
pusha
inc
ja
pop
lods
movsl
pusha
sub
mov
cli
lahf
jo,pt
pushf
idiv
fsubs
lods
fistpl
fnstcw
inc
mov
adc
sub
out
lods
andb
jb
call
mov
test
push
loope
push
mov
cmp
or
push
xchg
mov
ljmp
les
arpl
fistl
jl
push
xchg
mov
ss
les
inc
mov
cmp
push
pushf
test
jae
outsl
sar
and
test
mov
and
fdivp
push
jge
mov
pop
aad
stc
or
adcb
xchg
insl
cmc
es
jo
sub
out
push
xor
je
jmp
sbb
cltd
add
dec
fistps
add
lret
int3
mov
push
aam
cld
sub
adcl
inc
dec
int
les
mov
mov
out
xchg
test
lds
xor
leave
xchg
inc
sub
inc
fs
loop
push
cli
xchg
xor
push
sbb
add
inc
insl
sbb
or
cli
or
inc
cmp
sti
jb
loopne
adc
push
and
das
jae
dec
mov
leave
mov
pop
inc
test
lods
lods
or
xor
sub
iret
inc
mov
aad
in
out
mov
sub
movsb
adc
mov
mov
lret
xchg
mov
cld
mov
jp
inc
sub
add
mov
mov
int
adc
jo
loope
ret
sbb
jle
mov
lock
cmp
fs
outsb
jns
int
mov
rcll
cmpsb
nop
notb
fidivrl
ficomps
test
loope
lds
xchg
adc
pop
das
sub
jnp
pusha
fwait
adc
aad
cmp
inc
push
aad
inc
bound
push
adc
daa
cmc
cmp
cmp
mov
fs
loop
inc
pop
and
movsl
jge
add
adc
or
adc
sub
dec
mov
push
dec
rclb
mov
fadds
aam
and
cs
std
add
std
cmpl
orl
mov
adc
inc
jb
adcb
push
xor
dec
pop
aaa
jmp
cmp
shll
add
mov
shrl
in
push
ljmp
pop
ficoms
hlt
sub
dec
inc
mov
scas
jle
xchg
jae
mov
scas
mov
sub
or
in
push
insl
imul
jb
jecxz
jmp
arpl
pop
out
cmp
push
das
je
push
jbe
enter
dec
cmp
sub
push
mov
mov
pop
push
mov
xchg
mov
fiaddl
adc
aad
les
inc
mov
std
fs
ljmp
mov
xor
xchg
pop
mov
addr16
or
out
insb
clc
pop
inc
shrb
xchg
sbb
jne
jnp
jl
adc
jne
mov
xchg
xchg
addr16
outsl
mov
outsb
cld
add
add
dec
sub
out
jg,pt
and
mov
xor
and
dec
imul
pop
cmp
xchg
out
inc
insb
cmp
fidivrl
fcmovnb
and
inc
xor
bound
xor
xor
xchg
andl
cmpsl
fists
ret
adc
fdivs
push
jecxz
lahf
xchg
adc
push
enter
es
xor
pusha
rcl
fbld
push
daa
mov
inc
jnp
imul
lahf
gs
mov
pop
mov
loop
sub
push
pop
pusha
mov
xadd
arpl
jb
pop
mov
out
lods
mov
fadds
jge
adc
mov
arpl
jl
xchg
mov
mov
push
loop
mov
lret
cli
std
out
test
cmpsb
shll
js
dec
mov
movsl
push
fsts
sbb
jnp
jle
inc
dec
sub
outsl
ret
xchg
sbb
ror
and
in
jge
leave
ljmp
dec
enter
outsb
arpl
sbb
xchg
fs
jp
inc
leave
insb
ret
mov
mov
dec
popa
fwait
mov
mov
mov
push
cmpsl
outsl
shrb
leave
mov
rcll
dec
cltd
les
test
call
sbb
jne
dec
imul
inc
ficompl
mov
sub
fs
sbb
add
fs
popa
scas
dec
test
mov
rcr
shlb
fdivrs
sbb
xchg
xchg
sahf
jbe
jne
and
orb
jecxz
setbe
xorb
movsb
and
mov
test
push
inc
xlat
shll
ds
pop
pop
inc
cmpsb
in
mov
mov
test
roll
xchg
imul
fimuls
adc
fisubrl
xchg
or
inc
mov
sub
cmp
add
sub
scas
cmp
ljmp
std
cmc
bnd
gs
fistps
adcl
mov
cltd
mov
ds
fisttpll
pop
call
loop
in
mov
rorl
stos
sbb
test
mov
mov
popa
mov
lcall
cmp
pop
fmul
test
jl
out
mov
test
mov
dec
ds
into
ret
and
sbbb
inc
cmp
pop
dec
data16
add
sbb
clc
sahf
mov
xchg
inc
mulb
cmp
inc
inc
vhsubps
xor
imul
adc
jo
jne
push
adc
sti
mov
cltd
popa
cmp
repnz
scas
test
push
fldt
push
mov
cmp
push
push
icebp
scas
rcr
pushf
enter
or
sbb
mov
into
clc
mov
sub
jl
out
in
popf
or
popl
imul
imul
es
dec
inc
cmp
inc
mov
call
pop
mov
mov
jmp
stos
fimuls
dec
cmp
push
sub
xchg
dec
in
loop
imul
or
mov
test
scas
nop
into
shr
aam
sub
lods
xchg
mov
add
divb
insl
ja
dec
iret
fsubl
adc
xchg
or
ds
mov
jno
sub
and
nop
fistl
ret
cmp
jne
inc
mov
scas
stc
je
dec
dec
xor
fidivs
push
not
mov
stos
mov
out
int3
jo
call
mov
imul
mov
xchg
idivl
shlb
fildl
xchg
imul
sbb
cmc
jecxz
jl
xchg
popa
sub
in
subb
push
add
sbb
mov
dec
xor
lcall
je
dec
sub
ud1
lock
bound
inc
dec
inc
outsl
xor
mov
jmp
push
sti
imul
mov
mov
test
and
push
xchg
cltd
fs
sub
dec
cmc
imul
sbb
test
scas
xor
jnp
or
fisttpl
out
or
test
push
or
or
popa
lret
roll
mov
stos
xor
xchg
repnz
cli
push
mov
push
and
pop
test
sti
imul
mov
jg
ja
push
data16
xor
sbb
xchg
inc
call
mov
sub
stos
xchg
add
test
or
cmpb
jge
nop
loopne
sbb
add
jbe
mov
or
mov
mov
lods
nop
jbe
call
fldt
xorb
add
and
rolb
sbb
in
dec
inc
in
int
pushf
ret
rcrl
mov
sahf
mov
push
sub
outsb
xlat
imul
lea
mov
cmc
imul
in
dec
loop
cmpsb
fdivl
imul
sbb
fstpt
add
fwait
inc
xlat
rorl
lcall
subb
js
out
cmp
sub
add
push
ficoms
in
mov
dec
push
fsubl
cmp
and
mov
mov
pop
ja
enter
or
lcall
xor
inc
mov
ss
ret
popf
pop
pop
test
mov
inc
xchg
mov
mov
lock
mov
out
mov
push
inc
fcomps
inc
dec
sbb
lret
mov
inc
bound
and
dec
adc
jnp
and
inc
mov
ret
cmp
les
ret
enter
xchg
or
pop
xor
xchg
pop
mov
xchg
ret
dec
pop
dec
arpl
xchg
mov
inc
out
dec
stos
push
ss
fsubs
cmp
mov
out
stos
dec
add
outsb
pop
dec
div
incl
clc
int
and
mov
cwtl
jo
cmovae
rcl
xchg
lods
lcall
fsubl
les
or
mov
mov
mov
popa
jne
pop
and
add
mov
int
je
cld
mov
sbb
pop
daa
insl
pop
shr
clc
push
xor
add
arpl
enter
test
nop
cmpsb
xorl
inc
cmp
fsub
data16
xchg
fmuls
cltd
lcall
out
cmp
add
pop
aad
fidivrl
push
sub
and
pop
sub
subl
gs
inc
fisttpll
outsb
push
and
mov
cmp
mov
loopne
mov
xchg
push
int3
mov
imul
aam
aas
add
sub
test
cltd
inc
lods
and
jecxz
rolb
subb
inc
cmp
in
popf
fs
fisubrs
mov
pop
inc
dec
out
in
data16
inc
mov
jne
sbbl
adc
stos
nop
cmp
mov
sub
mov
pop
sbb
arpl
gs
inc
sbb
mov
mov
jl,pt
imul
xor
nop
icebp
or
and
mov
push
inc
enter
nop
xor
orb
loop
push
and
frstor
xchg
pop
mov
jl
insl
test
pop
adc
sbb
xchg
daa
dec
fsts
jecxz
call
inc
mov
xorb
sbb
add
lods
mov
jbe
fisttpl
adc
add
sarb
jb
jp
push
jb
add
mov
xchg
push
add
sub
add
repz
cltd
push
aaa
xor
dec
xchg
and
or
pusha
mov
dec
test
or
xor
ret
xchg
and
fisubl
fcoms
das
js
cld
lods
fsubrp
mov
sbb
or
xchg
ret
fisubl
in
jno
and
test
push
and
push
arpl
scas
jge
and
cli
stos
mov
movsl
jle
pusha
addb
fisttpl
jmp
mov
nop
inc
mov
push
scas
jg
mov
lahf
dec
xchg
xchg
mov
das
vpmacssdd
testl
mov
stos
ljmp
sub
sub
scas
mov
popf
call
inc
loop
sbb
fstl
adc
xor
cli
mov
jbe
addr16
mov
pop
sbb
into
mov
gs
push
stos
pop
repnz
add
add
push
pop
push
cli
mov
jmp
pop
and
ss
stos
jno
xchg
leave
lret
loop
xchg
test
jb
sarb
repnz
cmp
mov
nop
inc
scas
mov
fcmove
sub
in
xor
sbb
das
or
jnp
mov
mov
inc
loope
add
cld
lret
ss
mov
arpl
xchg
mov
jns
insl
pop
sarb
incb
cmpsl
aaa
jmp
adc
ds
mov
cmc
mov
enter
clc
and
jns
fnstenv
mov
mov
adcb
outsb
add
or
insb
cmp
pop
lret
cmp
popl
mov
mov
and
insb
adc
cmp
lods
mov
in
testb
into
std
incb
cmp
fwait
xor
test
gs
push
in
inc
inc
cmp
sahf
in
aad
add
popa
in
stos
mov
aam
dec
xor
nop
insb
mov
and
sbb
sub
inc
fwait
xchg
cmp
lcall
inc
or
xor
xor
or
jne
stos
add
sub
fs
jmp
arpl
rcrb
pushf
xor
pop
repz
lock
adc
sbb
pop
ds
arpl
popf
imul
out
mov
mov
xor
push
pushf
sbb
not
or
jnp
fildl
dec
imulb
popa
lcall
out
cmp
daa
add
add
fildll
outsb
dec
mov
lock
es
fildll
fnstsw
jg
pusha
cld
jp
loopew
outsb
mov
adc
insl
adc
shufps
repz
xchg
pop
jo
jae
repnz
add
jns
pop
cli
outsb
fadd
ja
mov
sbb
cmp
sahf
dec
arpl
inc
sti
mov
bound
rorl
jo
aad
ja
add
jp,pt
data16
daa
in
movsb
pop
sbb
mov
xor
fs
jg
push
jne
lahf
aad
idivl
in
fwait
imul
mov
push
fcoml
lock
out
test
je
xor
das
mov
dec
test
xchg
popf
pusha
push
fsubrp
in
cmpw
mov
movsl
lods
popf
and
xchg
xchg
jl
test
outsl
inc
inc
out
cmp
xor
inc
int
movsl
cmp
cmp
xchg
aaa
pop
fimull
lock
jo
pop
sbb
cmpxchg
loop
add
mov
movb
aad
nop
test
pop
movsb
idivl
enter
or
push
shl
sbb
push
fsubs
lahf
movsb
lret
fisubrl
out
cmpsb
pop
mulb
push
mov
loopne
lret
inc
push
stos
pop
jl
rclb
mov
pop
and
das
clc
pop
push
lret
mov
mov
clc
sti
sbb
fdivrl
or
sbb
lret
xchg
cli
xchg
iret
mov
and
cld
pop
sub
aad
les
addr16
les
out
js
movsb
test
lahf
sbb
aas
mov
idivb
sub
mov
adc
cmpsb
addr16
es
sub
mov
arpl
mov
push
lds
aaa
mov
sub
sti
cwtl
mov
inc
data16
lods
lds
inc
or
adc
dec
out
mov
push
addl
mov
push
mov
dec
andl
mov
add
xor
lret
xchg
mov
xor
lret
cmp
data16
xchg
mov
xchg
stos
sbb
jae
dec
and
dec
sub
pop
pop
add
outsl
inc
fldl
fildl
icebp
cmp
cs
shlb
imul
loop
dec
in
xchg
bound
xchg
testb
imul
rcl
and
jmp
xchg
mov
or
jno
and
mov
sbb
xchg
adc
lcall
jp
jge
or
pusha
imul
jb
mov
sbb
sub
mov
aad
jmp
int
or
repnz
xor
xor
in
mov
fcmovnu
lds
mov
xchg
jno
rcrl
mov
loope
mov
fists
cmc
sub
mov
mov
sbb
pop
mov
dec
sbb
loope
push
jnp
jp
cli
mov
lods
sar
jno
sub
jge
cmp
pop
pushf
repnz
xor
push
sbb
rcr
inc
sub
jb
out
shl
nop
and
xor
push
mov
test
test
leave
xchg
in
lret
rorb
add
popa
mov
int
aas
lods
scas
jbe
and
sti
lcall
xchg
daa
mov
xor
sub
rcll
sbb
loop
loope
push
lret
test
jmp
cld
movsb
daa
push
fstps
stos
mov
adc
lret
movsl
popf
pushf
idivb
fbld
insl
flds
mov
push
cmp
in
push
add
das
cmp
addl
test
pop
into
insb
mov
sbb
outsl
in
testb
movsb
popf
ret
lods
leave
jno
das
inc
ret
clc
subl
fwait
cmp
cwtl
loope
sub
daa
leave
push
mov
push
jb
scas
or
or
inc
adc
outsl
pusha
addb
fidivs
enter
in
decl
mov
jge
adc
das
lock
jge
and
jno
push
push
mov
lds
mov
sub
xchg
movsl
call
inc
jecxz
inc
jne
daa
movsl
popa
jo
scas
pop
jae
lods
sub
dec
pop
and
cmc
xchg
dec
jmp
fcompl
faddl
bound
int3
sar
lahf
mov
xor
pushf
cs
icebp
pop
adc
adc
xchg
rorb
popf
add
ret
push
repz
popf
mov
es
push
jl
inc
push
les
test
mov
imul
daa
or
ljmp
dec
nop
loopne
aaa
xchg
mov
sub
repnz
or
cmp
mov
jne
add
dec
repnz
stos
rcl
jb
mov
data16
mov
neg
popf
inc
cmp
mov
out
push
jmp
inc
in
nop
or
inc
mov
mov
fidivs
and
dec
pushf
mov
pushf
mov
mov
stos
bound
scas
adc
dec
outsl
fucom
inc
pop
imulb
rorl
test
outsb
scas
push
leave
mov
mov
add
daa
insl
fmulp
push
je
test
jg
sbb
stos
stos
cmp
or
clc
fwait
inc
sbb
mov
popf
dec
xchg
xor
movsl
jle
int3
loop
idiv
dec
push
call
cmp
jmp
stc
sbb
rcr
inc
jnp
inc
push
ds
push
push
push
inc
and
jno
leave
xor
xor
cmp
jno
ljmp
or
andl
mov
or
mov
fbld
loopne
cmp
mov
sbb
aam
mov
orb
loopne
subb
jnp
loope
or
out
sbb
rcrl
mov
jmp
imul
jnp
shrb
adc
leave
add
sbb
cltd
mov
int
jg
jbe
cmp
fimull
popa
mov
jecxz
sub
mov
sbb
cmp
addr16
xchg
cmp
cwtl
pop
xchg
pusha
cmpsb
shl
and
or
mov
data16
push
pop
mov
jns
aas
aas
mov
test
out
or
push
popa
stos
add
xchg
sbb
lea
ja
cli
sbb
add
mov
sub
mov
les
mov
inc
inc
enter
outsl
cmp
mov
add
cmp
xchg
loopne
push
aam
stc
xor
adc
jecxz
cmp
dec
lret
mov
pop
dec
in
sub
pop
jmp
ja
mov
add
mov
inc
push
and
rcll
mov
js
aam
jge
mov
sbb
push
xchg
mov
and
xchg
aas
jne
enter
push
out
dec
pop
jb
out
xchg
jmp
jecxz
xor
add
jno
jns
or
faddl
xchg
in
js
sbb
cmp
and
adc
sbb
movsl
lock
data16
jns
popa
adc
mov
mov
push
ss
cmp
and
jno
mov
and
rorl
or
mov
jge
xor
xchg
test
movsl
push
inc
inc
pop
inc
or
cmpsb
push
and
into
out
jl
sub
test
inc
xchg
and
in
jmp
push
fucomip
add
aaa
ret
jno
push
push
mov
movsb
roll
mov
push
or
repz
push
leave
shll
pop
cmp
cld
pop
scas
scas
inc
mov
push
mov
inc
pop
push
push
scas
lcall
mov
xchg
pop
cmp
mov
js
xor
scas
xor
aas
push
and
cmp
jo
mov
aam
inc
es
mov
jg
adc
stos
mov
add
aad
xor
nop
cmp
push
jmp
js
dec
add
out
xchg
out
rcll
sbb
push
jns
into
adc
std
out
or
inc
sbb
and
or
cmpsb
fadd
or
dec
mov
xlat
jb
sbb
nop
arpl
mov
pop
jb
cwtl
fldt
mov
cli
fwait
popf
das
mov
popf
cmp
push
je
xchg
out
xchg
sbb
jb
movsb
jge
in
dec
sbb
push
fnstsw
jnp
or
pop
pop
sarl
xorl
lahf
push
lcall
dec
and
jnp
iret
ss
insl
pop
push
pop
jl
cwtl
insl
test
aad
mov
cmp
daa
lret
sarl
ja
adc
repnz
jge
jno
in
ficoms
dec
or
add
lds
sub
fdivrs
inc
leave
and
and
popf
imul
scas
int
pop
xchg
mov
pusha
or
ja
push
stc
xchg
inc
roll
repnz
sbb
and
jmp
fs
in
inc
lahf
and
filds
mov
mov
lds
and
imul
pushf
ffreep
shl
ret
pushf
dec
xor
insb
lcall
sbb
repnz
or
jno
adc
jo
test
or
mov
mov
shrb
aam
fdiv
out
sar
int
pop
mov
test
ljmp
iret
imul
mov
mov
aas
add
inc
and
call
dec
mov
sbb
jae
inc
data16
lret
fdivs
loope
mov
int3
cmp
popa
jb
sbb
adc
sbb
fs
ljmp
insb
sbb
lds
sarb
add
sahf
push
push
sub
add
loopne
xchg
pop
pop
stos
fidivrl
dec
das
lret
or
cmp
mov
adc
call
or
fistpll
inc
cltd
js
and
pop
imul
add
xor
mov
mov
jo
adc
adc
sbb
aas
fcompl
mov
loope
lret
aas
push
sub
pop
pop
xchg
push
push
sbb
or
lods
cmp
push
adc
in
test
push
subb
push
pusha
adc
fisttpl
enter
pop
jge
repz
push
loop
inc
push
add
or
or
ud2
cmp
adcl
pop
or
jl
aam
sub
popa
popa
pop
adc
mov
pop
hlt
xchg
aaa
and
push
xor
pop
jae
icebp
iret
cs
aaa
xchg
test
dec
xchg
xchg
mov
fidivl
mov
outsb
faddp
popf
sbbb
mov
sub
dec
adc
jecxz
fnsave
sub
pushf
popf
cmpsb
clc
imul
fadds
xchg
int
data16
and
push
lock
stos
inc
sti
mov
and
scas
xchg
enter
outsl
jl
xchg
ret
in
jbe
stos
cmpsb
xchg
mov
mov
cmp
mov
jns
dec
add
cmp
add
into
insl
push
pop
mov
flds
pusha
fadds
les
inc
ja
inc
cmpsb
rcr
mov
xor
xor
pop
mov
jo
mov
les
mov
xchg
ds
insl
or
and
inc
in
dec
mov
xchg
cmp
in
adc
aaa
test
in
xor
cmpsb
mov
pop
jb
mov
shlb
adc
pop
out
fs
cs
gs
lods
pop
fdivl
lea
fiaddl
inc
adc
inc
xchg
aad
sbb
fldcw
dec
hlt
inc
and
outsb
ret
lods
pop
roll
mov
cmpsl
cmp
fisttpl
jmp
scas
jl
sbb
lea
dec
pop
xchg
outsb
stc
or
fstpt
inc
sbb
mov
mov
mov
pop
ret
scas
fimuls
cmp
or
pop
add
dec
push
mov
fcmovb
outsl
sti
push
and
fstps
aam
mov
fimuls
jbe
iret
sbb
ffree
sub
and
ret
mov
lea
xchg
mov
sub
fwait
lahf
and
imul
dec
mov
outsb
cmp
insb
and
pop
out
cmp
jmp
and
cmpsl
push
mov
jg
sbb
mov
rcl
adc
xor
adc
mov
icebp
push
rcl
addr16
push
addr16
popf
les
aas
call
dec
sub
loope
sarl
fisubrl
fs
fwait
mov
scas
mov
pop
les
dec
ret
cmp
in
cmpsb
inc
xor
sti
push
mov
sub
push
adc
out
pop
dec
test
add
in
ret
xchg
mov
rolb
test
ficoms
cwtl
cmp
cmp
push
jb
shrl
test
scas
pop
sub
add
rorl
xchg
enter
and
pop
mov
pop
add
sahf
movsl
xchg
pop
add
jno
lret
mov
or
xchg
sbb
or
pop
lock
inc
lcall
test
push
push
mov
xor
sbb
jnp
scas
sbb
inc
sbb
test
out
shrl
jge
sbb
push
pusha
xlat
and
out
inc
sub
leave
or
add
and
pop
cmp
sub
mov
mov
mov
call
out
subl
push
mov
xor
adc
mov
mov
push
jecxz
fs
jmp
jp
mov
mov
mov
outsb
jb
jns
insb
mov
pop
mov
cmpl
fstpl
adc
adc
out
inc
shrb
bound
add
jnp
mov
pusha
sbb
jle
mov
mov
jb
jbe
cmpsl
pop
repz
flds
and
push
popf
out
push
das
rcll
and
sbb
mov
cmp
ja
inc
mov
adc
cmp
ja
mov
arpl
pop
ja
push
test
sub
stos
xchg
push
add
aas
pop
inc
pop
cwtl
push
push
mov
xor
mov
aas
in
xchg
pop
cltd
mov
sub
pop
jo
arpl
mov
sub
xchg
jno
out
push
mov
daa
or
call
jb
mov
push
divl
fistpl
cmp
xchg
pushf
shlb
loopne
mov
int
jecxz
dec
addr16
mov
lods
or
rcl
mov
into
inc
add
ds
cmc
fisubl
sub
sbb
xchg
popa
xchg
in
adc
repz
lods
and
add
clc
jns
jg
sbb
cltd
mov
movsb
pop
sbb
jl
push
mov
dec
push
ds
loope
pop
imul
mov
xor
mov
outsb
mov
inc
lds
mov
push
cltd
mov
cmp
mov
jnp
jecxz
mov
sbb
mov
insb
es
mov
outsb
dec
ret
cmp
push
dec
test
es
shlb
scas
ja
jg
mov
mov
mov
push
mov
mov
pop
xchg
mov
sahf
sbb
out
lock
fmull
bound
inc
sub
or
adc
fs
push
dec
pop
imul
stc
sub
clc
aaa
and
and
stos
std
inc
xchg
mov
das
or
je
sub
pusha
stc
mov
aaa
sub
subb
aaa
xor
lods
movsl
xchg
or
dec
jmp
fstpl
jno
mov
inc
cld
mov
lahf
movl
fsts
dec
cli
cmp
aaa
sti
out
xor
sub
add
xlat
test
out
aam
jp
stc
jnp
pusha
adc
mov
shrb
push
js
mov
and
adc
test
aas
cwtl
sub
adc
push
out
xchg
test
imul
push
pop
and
testb
inc
jge
lds
lcall
adc
push
nop
les
dec
xchg
jecxz
outsb
andb
cmp
in
divb
lds
inc
push
lods
sub
sub
jnp
aad
and
or
in
test
outsb
jae
shr
sub
jge
sbb
enter
popf
mov
sbb
stos
int
enter
xorl
inc
sub
fistpl
test
push
xor
cli
jo
mov
into
int
mov
mov
ret
mov
rolb
sbb
or
pop
pop
mov
dec
push
ljmp
pop
in
pop
sbb
jmp
cmc
cs
loopne
mov
dec
lods
cmc
pushl
add
pop
cmpsl
roll
outsl
xor
push
jnp
lret
adc
lret
movsb
test
xchg
mov
or
or
out
aam
mov
pop
jns
insl
cmp
lret
inc
insl
in
xchg
fcmovb
inc
lret
insl
mov
add
adc
sbb
mov
test
int
cmp
cmpsb
scas
xor
xor
jg
pop
jns
or
mov
xchg
gs
test
pop
jnp
hlt
ss
int
xor
mov
in
enter
xchg
dec
popa
pop
jg
adc
lds
inc
out
or
stc
loopne
xorb
call
jnp
clc
out
push
xchg
or
mov
inc
ss
xlat
bound
fs
pop
and
jb
hlt
insb
jb
ficomps
neg
lock
addb
insl
xchg
int
dec
lods
leave
sbb
std
cltd
pushf
stos
stos
jnp
adc
xor
push
pop
popa
fmuls
iret
push
pop
loope
scas
std
popf
jp
cwtl
pop
mov
push
sarb
aaa
roll
jle
mov
cltd
or
mov
sahf
sub
in
or
adc
call
jmp
push
adc
jecxz
add
loope
and
scas
fs
lret
add
pushf
out
fstps
lods
out
mov
imul
lret
pop
jge
mov
mov
push
les
mov
popa
outsb
pop
jg
pop
mov
lret
popa
aas
stos
pop
jmp
cli
sti
fwait
les
jno
loop
jecxz
cs
fmull
stos
out
rcrl
sub
fisubs
repnz
push
or
cmp
push
push
push
mov
clc
xchg
adc
adc
ss
dec
fidivs
call
xchg
test
call
pusha
and
ja
fisubrl
jb
mov
mov
pop
add
push
out
arpl
rolb
push
test
lock
pop
dec
and
in
xchg
dec
adc
mov
inc
or
push
xchg
filds
inc
cmpsl
fwait
push
or
les
sbb
sbb
jmp
sahf
mov
xor
mov
mov
jbe
in
jb
enter
sti
stos
mov
mov
aaa
mov
cmpsb
mov
pop
mov
add
pop
shlb
lcall
int3
adc
mov
pop
lret
push
adc
repz
jl
pop
and
xor
sbb
lock
cmp
xchg
push
and
arpl
or
icebp
stos
sub
loopne
decb
outsb
lret
stos
pop
out
imul
sbb
jne
je
push
xchg
jmp
test
push
or
imul
mov
imul
inc
jge
shll
es
inc
pop
cli
dec
mov
out
in
test
push
xchg
cmpsl
lock
fstps
cmpsb
mov
xlat
mov
mov
sahf
add
enter
adcl
inc
loope
mov
insb
mov
movsb
cmpsb
ja
xor
rorl
pushf
test
lret
ficoml
mov
mov
std
das
push
jle
stc
xor
int3
pusha
shrl
ds
dec
inc
jnp
and
mov
mov
push
cmp
or
out
in
mov
mov
xchg
lods
pushf
jae
lahf
mov
ret
or
xchg
xlat
rorb
add
lods
lock
ret
add
mov
inc
das
jp
fnsave
push
test
jnp
mov
mov
imul
movsb
mov
test
repz
in
push
or
fs
aaa
sbb
jne
std
rorl
pop
test
dec
xor
lcall
jmp
cli
jo
idivb
jo
shl
add
cmp
inc
and
jb
fisubrs
nopl
mov
add
jne
sbb
arpl
xchg
insl
repz
push
and
pop
xchg
or
xor
sbb
sbb
lods
mov
add
jle
shl
mov
aad
ja
dec
pop
rclb
dec
push
dec
pop
pop
loopne
cmpsl
pusha
rcr
jle
xchg
cmc
jo
stc
out
call
in
and
hlt
hlt
or
xchg
pop
cmc
pop
pop
lahf
scas
sti
xchg
pop
jo
das
xor
ja
test
roll
mov
mov
push
dec
rcrb
movsl
jecxz
lret
ss
mov
in
mov
test
dec
mov
std
rcl
hlt
cmp
negl
and
adc
push
push
popf
jb
mov
movsb
dec
divl
push
xchg
das
xchg
int3
out
cmp
subl
push
ljmp
push
gs
pusha
push
mov
pop
inc
idivl
mov
mov
test
imul
cwtl
adc
cmp
and
roll
add
inc
push
sahf
add
dec
mov
xchg
je
mov
addr16
inc
inc
stc
mov
loope
push
daa
add
or
je
mov
scas
jne
call
stos
rcl
dec
jge
cli
sub
mov
inc
andl
jge
bound
lcall
jg
or
sbb
cmp
les
fidivs
jge
stos
mov
or
ret
lret
loopne
in
popf
jns
leave
scas
or
push
xor
nop
movsb
pop
pop
push
testl
cmpl
repnz
ror
ja
xchg
pusha
call
mov
lds
out
jl
ljmp
mov
movsb
cmp
mov
shlb
xor
data16
mov
test
gs
dec
lods
xchg
dec
xchg
sub
mov
cmp
cltd
stos
out
fsub
gs
call
xor
mov
xor
mov
mov
fs
mov
aad
mov
rclb
mov
inc
das
pushf
stc
hlt
stc
sbb
imul
xor
cwtl
xchg
testl
mov
aam
or
adc
lret
sub
pop
or
addr16
dec
xchg
mov
cmpsb
mov
inc
and
jae
rorl
fdivr
mov
fisubrs
mov
inc
lret
sbb
jne
mov
adc
icebp
xchg
mov
jg
loop
rcll
push
jge
int
loop
loopne
pushf
dec
lock
imul
jg
mulb
lods
and
mov
mov
jae
cmp
fldenv
jno
int
cmp
and
in
add
mov
dec
cmp
add
cltd
adc
aaa
push
xchg
popa
inc
lcall
add
mov
lret
shrb
fadds
cmc
cmpsl
in
mov
cmp
ret
xchg
pop
fldcw
jno
shll
pop
addr16
add
mov
jne
ja
mov
sub
rcrb
fs
jmp
mov
rolb
int
cmp
xchg
pop
ljmp
jmp
cmpsb
jo
or
into
mov
dec
jle
push
ss
pop
loop
aaa
mov
lcall
fmull
lcall
lea
or
mov
lock
sub
out
add
sahf
mov
add
in
sub
push
pop
push
inc
cmp
movsb
sub
loope
insb
adc
push
in
xor
cmpsb
dec
xor
cmp
enter
je
std
pop
push
mov
repnz
arpl
ja
lahf
es
nop
std
adcl
je
jbe
addps
testb
pop
pop
out
fdiv
mov
mov
testl
or
jl
sub
push
adc
imul
xchg
fcompl
push
stos
loopne
adcl
sub
imul
mov
cmpsb
cs
cli
adcl
enter
mov
rcrb
or
jo
imul
dec
and
pop
xor
dec
mov
fdivrs
cmp
push
mov
mov
sub
dec
and
mov
sti
lcall
and
and
push
mov
outsl
inc
cli
pop
push
loope
loope
inc
jnp
cmpsl
mov
mov
and
mov
pop
xor
inc
push
mov
popa
scas
fcompl
andb
push
xchg
push
xchg
sbb
stos
cmp
adc
inc
pop
dec
inc
jg
push
fucomip
addr16
loop
dec
or
pop
cmp
ja
cmpsb
adc
adc
sti
dec
test
jne
xchg
repz
push
mov
ss
jmp
mov
fsubs
adc
dec
cmpsl
out
loop
ret
jg
jge
in
xor
or
les
bound
push
cltd
vmovss
pop
into
sbb
inc
enter
sbb
in
scas
ja
lahf
mov
fistpl
adc
adc
dec
js
push
dec
push
ja
ljmp
cmp
mov
int
jb
add
arpl
js
stos
push
cmp
and
shrb
imulb
mov
arpl
outsl
lods
jbe
sub
pop
sub
sbb
inc
insl
mov
movsl
repz
push
mov
aaa
jnp
mov
mov
aas
das
cs
sbb
js
adc
leave
dec
fcmovne
mov
pushf
in
add
cmc
lret
lods
and
lret
addr16
sahf
pop
iret
dec
inc
lret
push
test
outsb
repnz
and
inc
sbb
stos
xor
add
in
mov
and
fwait
cmp
push
dec
mov
dec
leave
jge
ret
mov
xchg
sarb
jge
sahf
das
aas
and
fwait
call
sbb
adc
sub
xchg
pop
jp
mov
sbb
in
inc
jecxz
lret
cmp
clc
push
pushf
in
adc
fistl
inc
les
into
xlat
dec
xchg
jle
lea
mov
loope
push
push
mov
rorl
jnp
sub
lcall
and
xchg
pop
cmp
xor
mov
mov
and
inc
xchg
cwtl
pop
out
cmp
test
pop
pop
cld
xchg
inc
xlat
and
lret
push
mov
outsl
ds
or
les
mov
stos
add
xchg
jae
mov
imulb
imul
test
mov
cmpsl
scas
loopne
sbb
dec
or
add
mov
sbb
and
inc
test
sbb
xchg
add
out
jae
or
mov
lock
mov
aam
je
in
cmc
dec
mov
inc
sahf
push
lock
jo
cs
push
fs
dec
lods
call
sub
filds
hlt
in
pusha
addr16
shlb
ja
xchg
mov
orl
sub
mov
cmpsl
out
sbb
mov
push
xor
cmpsb
xchg
pop
xchg
dec
sub
add
fnstenv
icebp
cmp
psllw
sub
scas
shlb
shrb
dec
xchg
pop
mov
mov
jl
jg
jb
call
scas
pop
aad
jne
mov
fldcw
imul
enter
test
pop
in
push
sub
cltd
in
cltd
aam
mov
idiv
jmp
aas
jmp
mov
shlb
pop
inc
add
mov
cmpsb
dec
in
pop
sbb
cmp
inc
or
rorb
clc
cmp
es
xchg
or
out
mov
jp
xor
pop
adc
mov
subl
pop
mov
clc
addl
cs
dec
and
fwait
mov
adc
shrl
cmp
jbe
push
add
lock
add
push
test
xchg
in
inc
in
rclb
shll
jecxz
popf
aas
mov
xchg
cmpsl
lds
lea
dec
mov
mov
icebp
pop
sub
mov
fwait
leave
jbe,pn
fisubrl
imul
lret
sbb
fs
mov
in
push
stc
jmp
sbb
add
mov
lahf
mov
js
cltd
and
mov
push
loope
aad
xor
cmp
jmp
jl
xchg
test
sbbb
lods
lret
xchg
sub
dec
sahf
ds
lcall
movsl
cmp
clc
sti
sbb
jnp
int
cmp
enter
imul
push
push
mov
mov
adc
jg
les
fsubl
in
pop
ja
loopne
inc
jns
mov
subl
xor
pop
out
fistpl
mov
stos
arpl
xchg
in
cmp
push
out
jge
in
rcrl
xor
add
fistps
jne
in
xor
mov
add
mov
cmp
loope
push
xchg
or
push
stc
pop
cmp
pusha
and
push
jg
ret
xor
into
pop
in
ret
jle
test
jmp
inc
push
lret
popf
out
sub
imul
dec
xchg
push
outsl
pop
adc
clc
dec
outsb
lretw
push
cmp
xchg
faddl
push
jmp
mov
aaa
push
lock
jecxz
test
aad
js
pop
push
scas
or
negl
xchg
es
cmp
into
xchg
js
ja
mov
repz
das
test
loop
shl
or
ljmp
add
jle
push
add
lcall
pop
add
fcmovnb
cmp
rol
mov
ljmp
rcr
loopne
imul
cmp
add
jle
mov
mov
inc
sub
cmp
sub
lcall
scas
loop
push
insb
jnp
loope
jno
movsb
xchg
nop
or
sub
xor
adc
pushf
lds
mov
aad
in
mov
rcll
mov
push
or
scas
fwait
xchg
push
imul
mov
test
sub
sbb
faddp
dec
and
jb
dec
andl
sub
scas
outsl
enter
lcall
push
push
add
or
mov
xchg
iret
push
push
mov
fbstp
push
push
xor
push
sub
aaa
cmp
sbb
mov
dec
mov
movsl
lock
test
fistpl
in
xor
int3
outsl
mov
nop
popl
or
ljmp
and
add
fists
mov
lret
iret
xchg
je
stos
xchg
outsb
push
push
lock
jno
mov
cmp
adc
sub
test
repnz
and
loopne
aam
imul
push
mov
jle
pop
out
shrb
inc
jne
mov
fxch
repz
mov
jae
iret
movsb
adc
cmpsl
sbb
mov
and
loopne
es
xchg
or
pop
test
clc
sar
out
ljmp
loope
xor
push
in
out
in
push
and
cmpsl
decl
push
scas
mov
fdivs
jle
cmpsl
aaa
mov
jno
mov
cltd
or
repnz
xor
adc
test
in
cmp
popw
xor
out
cmp
sahf
adc
sub
and
andb
test
mov
out
out
jge
push
icebp
mov
sbb
pop
stos
ljmp
insb
push
fadd
jne
jmp
ficoms
adc
daa
sub
test
mov
push
imul
pop
mov
mov
or
ljmp
mov
adcb
dec
clc
int3
scas
fwait
cmp
loop
xchg
sbb
ret
ljmp
movsl
cmpsl
mov
adc
adc
ljmp
and
fiadds
icebp
rclb
in
repnz
xor
sbb
fwait
ja
mov
fistpl
cmpl
adc
ja
sub
push
mov
icebp
and
jo
sbb
dec
cmp
mov
pusha
test
mov
fwait
mov
jno
jg
cmpb
out
test
roll
test
mov
repz
fmull
inc
pusha
and
stos
adc
dec
inc
ror
dec
adc
fdivrs
push
test
jne
imul
in
mov
rcll
and
cmp
imul
fsts
popf
mov
cs
cmc
call
jnp
ds
pop
dec
push
cli
mov
push
cmp
add
stos
xchg
xchg
xor
adc
stc
jb
ror
sub
and
cltd
mov
pop
dec
sti
lock
mov
add
sub
cmp
ljmp
mov
pop
iret
push
repz
scas
xchg
in
push
dec
push
pop
bound
dec
push
dec
rcrb
mov
pop
in
dec
dec
fbld
mov
pop
test
scas
stc
push
or
push
mov
and
xchg
mov
cmp
outsb
mov
pushf
in
rcl
sahf
cmp
jns
mov
cmp
jo
outsl
inc
jns
fwait
loop
cmpsb
sub
stc
sbb
imul
xor
xchg
jle
sub
stos
or
popf
test
ficoms
test
mov
dec
ret
loope
adc
mov
add
jmp
push
adc
push
sbb
jns
std
xchg
mov
sbb
mov
test
ljmp
data16
sbb
push
mov
cmp
cltd
and
xor
rolb
mov
jl
loop
test
cmpsb
push
in
sbb
xor
or
sub
xor
mov
insl
xor
pop
push
jge
or
out
icebp
mov
sti
xchg
dec
fldt
aad
sbb
jne
or
test
ja
sub
pop
push
ja
mov
xchg
add
sub
dec
mov
jo
xor
sub
adc
leave
and
outsl
pop
mov
std
xor
or
outsb
dec
mov
loopne
rep
and
jb
ret
test
xchg
dec
cmp
leave
push
test
sub
dec
sub
xchg
cwtl
sti
xor
jle
push
stos
clc
lods
pop
mov
test
cmp
pop
cmpsb
sbb
or
das
or
cwtl
in
cmpsl
hlt
test
das
loope
inc
in
dec
pop
arpl
addr16
stos
mov
xchg
sbb
mov
push
mov
pop
dec
sub
sahf
shll
jmp
mov
and
lods
jns
mov
inc
lcall
addl
pop
mov
outsb
cmpsl
xchg
cmc
pop
pusha
jnp
jecxz
jecxz
jp
jns
decb
flds
jg
sahf
or
push
xor
stos
movl
inc
and
les
jge
cld
lods
out
push
cli
rol
icebp
inc
scas
add
test
cmp
andb
jno
fcomps
dec
outsl
jb
adc
pop
mov
mov
pop
ficoms
mov
jnp
stos
bound
outsl
test
dec
jg
into
push
sbb
je
dec
in
repnz
aad
mov
sub
inc
pop
outsl
xor
notl
aaa
cmp
scas
push
daa
adc
fs
sbb
pop
add
cmp
mov
sub
sub
jecxz
mov
jb
cmp
inc
lock
test
pop
int
mov
pushf
xchg
cwtl
jecxz
push
inc
cmc
or
mov
cld
jl
es
aas
cmc
out
mov
inc
lret
jo
cli
pop
scas
adc
movb
push
lock
lds
add
mov
loop
call
jge
pop
add
imul
aam
je
mov
out
cmc
mov
loop
xacquire
and
mov
xchg
cmp
fdivrp
adc
pusha
mov
xchg
lret
js
jge
pusha
iret
stos
pusha
sub
lds
xchg
jge
pop
repz
lret
cmp
lret
xor
lret
sbb
add
pushf
push
orb
stc
iret
int3
insb
cmp
push
and
push
into
leave
loop
fucompp
adc
jge
xorb
adc
cmpsb
push
jmp
lret
mov
mov
or
sbb
push
stc
sbbb
pop
arpl
xchg
xchg
test
add
add
test
clc
xchg
adcb
jg
push
popa
test
outsb
mov
cmp
or
icebp
adc
sbb
cmp
pop
sub
test
inc
jp
sbb
je
xchg
mov
or
orl
pop
es
push
mov
gs
lods
out
sbb
fcompl
test
push
aaa
inc
out
add
add
pop
xor
cmc
fnstsw
das
loop
sbb
and
popa
daa
imul
mov
scas
call
repnz
lcall
mov
inc
xor
mov
adcl
mov
mov
loopne
or
cmp
jae
dec
push
std
mov
push
les
orl
sub
or
outsl
cli
lret
jg
fisubs
or
add
fidivrl
jg
loopne
fcomps
scas
and
adc
mov
fstl
imul
push
aam
ljmp
dec
in
and
cs
jo
popf
fwait
adc
repnz
ss
and
add
mov
fs
outsl
stos
jl
cs
inc
lret
bound
cwtl
leave
push
popf
test
movsl
cmc
inc
shlb
jb
mov
int
xor
pusha
or
sahf
pop
adc
subb
jo
fmull
cmp
shll
mov
cmp
mov
lret
bound
in
clc
sub
pop
cmp
add
mov
sbb
mov
scas
shll
fwait
mov
mov
sbbl
lds
mov
sarb
cmpsl
test
enter
shll
js
pop
sub
stc
cmp
fs
cli
sbb
je
jecxz
and
iret
fists
stc
fs
jp
divps
xlat
sarb
inc
lret
inc
pop
stos
sub
mov
popf
mov
mov
repnz
fisttpll
push
test
stc
arpl
ja
jb
pop
lods
mov
fldt
sbbb
ja
mov
xchg
push
sahf
mov
cltd
and
loope
xchg
out
rcrl
xchg
push
mov
lock
cwtl
sbb
mov
jg
cwtl
dec
je
push
or
dec
addr16
lahf
cmp
movb
andl
dec
aam
jl
in
inc
add
addr16
mov
push
jmp
push
test
add
mov
fildl
pop
pushf
flds
js
xor
cmp
in
scas
test
insb
and
test
fidivrs
add
jmp
pop
mov
and
in
scas
repnz
mov
xchg
arpl
aad
push
cmpsl
push
call
lea
mov
inc
fs
rclb
loop
and
sub
sbbl
fucomi
movsl
pop
push
int
push
fwait
lcall
icebp
hlt
add
pop
shl
fsub
rcr
stos
mov
loop
in
cmp
xchg
push
mov
int
loop
imul
add
rorw
ret
sbb
pop
mov
cmp
or
jb
fistl
sub
loope
mov
stos
fsubl
cwtl
push
movsb
es
add
jnp
ret
sub
stc
js
dec
cmpsb
xchg
pushf
shll
push
out
repz
jnp
dec
adc
daa
pushf
pop
sbb
outsb
imul
shrl
fwait
and
xchg
ds
sub
in
inc
es
push
adc
jnp
sbb
scas
xchg
mov
jl
fisttpll
cmc
mov
push
xor
push
and
pop
ds
cld
push
xor
xor
sub
cmp
testb
sub
sahf
in
mov
in
adc
xor
pop
mov
movsl
add
cs
stc
mov
dec
xor
aaa
mov
stos
pusha
jns
lock
add
gs
ja
xchg
mov
bound
mov
add
out
icebp
inc
xchg
inc
popf
nop
lods
mov
push
lret
les
mov
push
inc
adc
cmpsb
sahf
mov
mov
fwait
cmp
xchg
std
enter
loope
out
popa
sub
dec
aad
lret
cwtl
sti
sub
jmp
inc
addl
inc
jne
sbb
push
andl
nop
clc
test
xlat
cmp
jne
es
into
sub
subl
mov
data16
and
lea
cmpsl
push
cmp
mov
inc
lcall
in
movsl
movsl
mov
pop
sub
out
jecxz
add
negl
loop
movsb
and
dec
call
fidivl
js
lret
pop
xor
sub
mov
push
ds
aam
in
std
cs
jbe
mov
xchg
xchg
dec
fdivl
mov
sbb
fadds
fiaddl
mov
adc
pop
mov
mov
mov
mov
xchg
pop
adc
push
mov
or
nop
dec
push
leave
sub
loopne
lsl
inc
std
xchg
and
and
xchg
inc
stos
push
int
dec
jae
gs
ret
popa
ffreep
adc
stos
xchg
jb
in
mov
xchg
jp
insl
ds
and
dec
pop
cli
push
cmp
jnp
arpl
and
fdivrs
mov
sub
and
add
test
scas
into
roll
ds
ficompl
rcl
daa
jns
xchg
fbld
movsl
movsb
cmp
stos
sbb
xchg
xchg
adcl
and
sub
lea
mov
adcl
loop
push
lret
ret
jb
into
std
andb
ret
mov
stos
outsl
jb
loop
pop
jmp
push
push
scas
mov
fdivrs
jl
aam
stos
cs
mov
jl
xlat
xor
dec
pop
mov
inc
ja
std
cltd
add
xor
addb
lock
xchg
cmp
pop
test
pop
je
or
xor
mov
jae
in
inc
dec
lcall
and
out
adc
mov
sti
xchg
repz
loop
data16
fsubl
mov
add
xchg
daa
mov
les
push
or
jbe
popa
adc
cs
jbe
ss
mov
lret
sbb
lds
es
pushf
push
pop
and
js
sti
fisubrl
ret
pushf
sar
mov
cmpsl
icebp
aam
push
sbb
jge
fbld
loopne
arpl
xchg
loopne
dec
mov
sahf
daa
dec
push
sbb
in
pop
cmp
lods
les
into
lahf
xchg
mov
aas
jl
data16
cmp
ljmp
inc
xor
mov
pusha
out
push
lods
shlb
xor
mov
sbb
mov
dec
xchg
pushf
pop
mov
dec
aam
dec
movsb
xor
dec
pop
scas
inc
adc
cmp
mov
icebp
add
out
push
xor
not
push
jae
cmpsb
addr16
jno
and
or
in
mov
mov
test
js
jbe
in
mov
lock
jae
gs
clc
sbbb
ficoms
icebp
jp
and
ja
inc
leave
mov
dec
push
sbb
ret
adc
stc
insl
jle
mov
lahf
int
sar
jge
jecxz
jecxz
and
mov
and
mov
in
jp
sbbl
fildl
xchg
jp
adc
xor
sub
jns
fs
lahf
mov
mov
cmp
les
dec
xchg
pushf
add
ss
scas
addl
pop
dec
dec
jne
cmp
inc
sbb
imulb
pushf
sbb
mov
jo
popw
pop
sub
scas
rcrl
xchg
fcmovbe
xchg
push
mov
push
daa
cmpsb
mov
into
lds
fmull
inc
push
adc
sbb
hlt
lret
mov
inc
ja
dec
xchg
xor
mov
loopne
add
test
pop
daa
xchg
mov
push
daa
adc
and
mov
out
mov
lret
imul
jne
mov
ret
add
sub
fdivs
loope
pop
cmp
cmp
inc
pushf
pop
popf
cmp
xadd
push
and
cmpsb
dec
enter
jb
scas
cmp
in
adc
mov
data16
and
sbb
fucomi
outsl
mov
mov
enter
mov
or
loopne
ret
mov
testb
xor
mov
or
push
adc
push
pop
jnp
adc
xchg
icebp
xchg
scas
adc
mov
pop
adc
fadds
cmp
in
fidivs
push
mov
add
iret
popl
sub
mov
lods
sbb
push
mov
mov
xlat
imul
dec
or
shrb
adc
push
mov
or
aaa
aas
movsb
pop
pop
fcompl
sahf
inc
xor
cmp
adcl
roll
mov
xor
and
popa
push
mov
enter
data16
fists
movsb
shlb
stos
clc
shrb
outsl
or
insb
or
imul
out
cmp
mov
push
imul
xchg
mov
incl
xchg
sub
fnsave
jo
cmp
dec
ss
lret
fucomp
stos
xlat
insb
int
mov
int
test
div
cld
xor
into
dec
into
or
jns
and
push
inc
mov
loop
xchg
xchg
das
xor
xchg
repz
mov
clc
mov
addr16
cmp
jno
xor
andb
adc
icebp
push
jmp
aam
idivl
pop
enter
sub
push
and
insl
inc
cmp
lods
mov
pop
and
lahf
jnp
cmp
movsb
cltd
pop
mov
fs
daa
add
push
insb
or
clc
daa
adc
popa
adc
lods
das
mov
fists
mov
push
insl
int
lahf
jbe
inc
in
inc
fsubs
mov
jnp
jle
insl
testb
add
in
jecxz
inc
dec
xchg
dec
inc
sub
fwait
dec
add
minps
dec
mov
mulb
daa
sbb
movsl
mov
push
xlat
stos
sarb
jp
mov
dec
cmp
imulb
notl
sbb
mov
ror
bnd
mov
dec
pop
lea
ret
daa
jg
ds
repnz
mov
ljmp
sub
jge,pt
loopne
bound
jnp
jle
mov
and
jp
pop
mov
xor
xchg
xor
mov
rorb
outsb
mov
jg
sub
inc
push
xor
xchg
into
div
mov
rorb
aad
pop
movsl
dec
insb
and
mov
movb
pop
lret
test
jno
xchg
add
dec
xor
shlb
push
xchg
inc
scas
jo
sub
xchg
stc
data16
sbbl
lcall
xor
lods
add
mov
xchg
jnp
xor
mov
lahf
out
out
lcall
js
dec
roll
test
push
inc
xchg
adc
enter
loop
mulb
fsts
jbe
mov
je
mov
fmuls
sahf
dec
das
int3
sbb
jge
imul
mov
push
mov
loop
lods
jne
vmovlps
mov
cmc
std
mov
mov
ljmp
int
mov
mov
mov
out
inc
ss
cld
push
xchg
mov
inc
adcb
mov
lds
sub
imul
aad
loope
cs
cmp
loop
dec
or
es
sti
in
clc
push
xchg
xchg
rcrb
mov
out
enter
fisttps
mov
iret
mov
outsl
js
inc
mov
push
les
fsubrl
scas
cld
or
adc
into
cmp
scas
sbb
lods
rorl
and
cli
sbb
push
js
adc
cmp
lock
jbe
inc
inc
in
xor
cmp
push
mov
mov
or
repz
add
xchg
fnstcw
inc
pop
repnz
stos
inc
jg
inc
out
out
add
aad
push
std
pop
pusha
js
or
sub
mov
loope
fwait
cltd
jb
add
mov
jbe
mov
loop
insb
dec
sbb
int3
pop
push
jp
push
jecxz
test
stos
shlb
jmp
push
jnp
cmp
int
cmpsl
iret
cmp
or
insl
mov
mov
sub
lea
mov
push
ss
xor
adc
mov
imul
mov
in
sahf
movsb
jno
lods
jnp
popa
add
xchg
xor
and
ja
sub
xchg
pushf
rorl
stos
lea
arpl
dec
fdivl
mov
cmc
pop
mov
adc
and
add
clc
mov
stos
aaa
leave
xchg
mov
pop
ss
pop
les
xchg
and
mov
xor
mov
je
dec
mov
xchg
aaa
jne
xlat
inc
lcall
imul
pushf
cmp
fstpl
ss
dec
sub
imul
fs
xchg
mov
xchg
jno
xchg
bound
inc
sub
hlt
mov
mov
push
jns
push
outsb
cs
fwait
mov
je
dec
add
and
mov
fbld
adc
lret
cli
or
sti
test
mov
push
lret
pop
mov
inc
xchg
mov
stc
push
inc
cmp
cmp
lock
lds
inc
loop
inc
mov
jnp
cmp
sub
scas
dec
dec
mov
shrl
lret
mov
icebp
sub
orb
out
jle
mov
ds
mov
cs
js
push
dec
scas
push
shrb
aad
out
pop
jbe
pop
ja
cli
insl
push
scas
mov
cmp
stos
out
lcall
jno
inc
jg
enter
not
divb
push
mov
loope
cwtl
push
hlt
cs
imul
mov
xchg
fidivs
cmpsb
cmp
cmc
xchg
cmp
addr16
inc
jg
mov
push
xchg
int3
mov
cltd
sbb
sarb
mov
inc
push
fs
adc
in
sarb
ds
mov
test
dec
lret
dec
mov
xchg
and
mov
fnstcw
stc
loop
loop
dec
and
lea
call
cmpsb
pop
repnz
cltd
cmp
inc
xor
add
fcoms
lea
arpl
push
pop
int3
xor
push
cmp
fcompl
int3
push
and
fimuls
sub
dec
and
mov
mov
adc
cmp
mov
add
adc
fsts
pop
jbe
test
es
push
jnp
jg
mov
jo
fdiv
leave
and
mov
xchg
cmpsb
sbb
sub
adc
loope
xor
jle
loopne
in
push
lret
pop
and
xchg
nop
out
in
daa
loop
imull
movsb
push
leave
mov
xchg
sahf
fwait
jle
pop
es
add
inc
ror
mov
popa
xor
mov
enter
es
xchg
inc
dec
inc
sub
push
in
jae
add
cmp
mov
decl
mov
jnp
or
sub
inc
scas
shrl
xchg
xchg
into
xchg
xor
or
das
es
push
add
fstps
rorl
sub
sub
in
cwtl
xchg
pop
cmpsl
cmp
xlat
rclb
leave
mov
fmull
xor
add
out
cs
idivl
or
dec
pop
and
fsubrs
dec
inc
push
lods
iret
rcrl
dec
dec
cmp
xor
fs
andl
pusha
stos
add
ds
mov
sahf
movsl
int
mov
sbb
sub
fisttps
push
das
scas
adc
movb
push
mov
xor
inc
out
or
mov
bound
js
pop
imulb
cmpsl
xchg
jle,pn
aas
ret
imul
dec
add
imul
cmpsb
outsb
lods
mov
adc
inc
movsl
ja
stc
sbb
sarb
xchg
pop
and
mov
jge
mov
inc
cmp
dec
mov
outsl
jg
inc
xchg
xchg
cmpsl
into
push
mov
pop
lds
dec
mov
fistpl
adc
fisttpll
inc
sub
xchg
movsb
sbb
push
enter
enter
adcl
rep
mov
xchg
jl
xor
dec
lds
les
in
cld
mov
scas
insl
leave
push
pusha
push
jge
or
add
out
pop
mov
test
arpl
mov
divl
sub
popl
mov
std
pusha
xchg
das
xor
jge
xchg
mov
push
stos
mov
mov
sbb
sbb
push
mov
add
mov
dec
outsb
mov
idiv
inc
push
xchg
jo
cld
in
popa
inc
mov
sarl
lret
mov
andb
jae
mov
push
mov
mov
jmp
cmpsl
pusha
lcall
cmpsl
icebp
outsl
idivl
enter
cmp
pushf
mov
pop
ds
cmp
sbb
nop
shlb
adc
call
mov
repnz
imul
lret
mov
ds
lods
or
sbb
inc
xchg
in
inc
sub
xchg
loopne
jge
pand
push
std
in
outsb
int3
mov
js
movsl
mov
bound
push
mov
adc
mov
out
pop
cmp
push
movsl
mov
mov
jmp
ret
cmp
jae
push
jo
dec
jns
add
inc
mov
ret
das
xchg
test
ds
mov
mov
divb
cmp
rcl
ja
repnz
dec
mov
scas
adc
out
mov
icebp
ljmp
cld
pop
fsubs
jl
stc
cltd
xor
imul
jp
jb
repz
idiv
jg
movsl
into
stos
mov
idiv
rorl
stc
mov
test
lret
mov
jb
sbb
shrl
mov
arpl
jge
add
jae
jne
inc
aam
pop
cwtl
sbb
fdiv
lret
lret
dec
jbe
xor
ljmp
lahf
push
ljmp
inc
add
jno
push
pushf
jno
hlt
jo
stos
and
ljmp
push
jle
rep
sahf
xor
popf
jmp
cmp
aas
imul
divl
mov
aad
pop
sub
or
xchg
cwtl
sbb
pop
pop
mov
and
jl
mov
rcrb
cs
cld
cmp
sti
out
in
pusha
sub
mov
sahf
mov
sbb
adc
in
leave
dec
sti
aad
push
inc
movsl
ss
cltd
mov
cmpsb
je
rcrb
cld
in
xor
adc
mov
or
jno
scas
mov
pop
lret
xchg
insl
pop
ja
xchg
psubq
sub
xchg
lahf
scas
dec
fiaddl
loope
xchg
xchg
push
aam
xor
push
loopne
pop
sub
mov
test
je
jp
pusha
nop
jnp
pop
jmp
pop
mov
aad
fcompl
mov
cs
stos
shr
add
ficomps
mov
dec
movsl
out
jno
pop
lds
jb
loopne
lds
mov
mov
cld
jns
movsb
popa
mov
mov
mov
insl
sub
addb
sbb
jmp
fisttpl
loope
push
gs
jb
aaa
cld
mov
lahf
inc
mov
push
repz
pushf
fisttpll
jg
es
inc
lea
cmp
xchg
out
adc
xor
mov
decl
hlt
jg
jne
mov
cmpsl
shll
out
pop
adc
xchg
mov
imul
mov
fcomp
out
stos
push
adc
loope
cwtl
mov
fwait
xor
jg
inc
push
ljmp
in
add
cmp
into
add
jno
ret
sub
sbb
fs
aas
das
aam
test
or
and
cmp
and
mov
sub
adc
movl
xchg
arpl
cmc
fadd
jnp
push
arpl
add
pop
add
lret
sbb
idiv
mov
test
mov
imul
insl
lds
daa
pushf
push
push
orb
mov
xchg
cltd
mov
leave
out
push
outsl
mov
push
dec
xchg
icebp
inc
sarl
rorb
sub
lock
add
push
xchg
imul
loop
mov
mov
push
cmc
flds
movsl
sub
xchg
mov
adc
sbb
lods
enter
dec
sub
and
adc
pushf
jns
movsl
and
scas
mov
pop
mov
jge
cld
inc
fisubs
adc
test
js
pop
pop
shr
das
inc
pop
cltd
jmp
mov
xor
insl
lds
aad
add
subl
cli
jmp
cmpsb
xor
repnz
aaa
adc
js
and
mov
stos
cmp
fstl
sub
call
fcoml
sbb
and
push
mov
cmp
mov
adc
xor
push
dec
pop
jge
in
dec
iret
and
push
lea
jbe
mov
adc
add
inc
lahf
mov
dec
movsb
bound
mov
or
aad
lock
jbe
loope
test
cmp
repnz
pop
into
pop
mov
pop
out
dec
stos
addr16
ficompl
or
push
mov
xchg
inc
pop
mov
stos
icebp
icebp
push
pop
xor
sbb
addr16
and
sbb
out
aas
lahf
push
lahf
inc
jl
cmp
mov
jp
lcall
mov
packssdw
test
adc
jb
ja
sub
mov
and
or
jmp
cmp
cmp
mov
xor
push
repz
into
jns
or
lds
mov
in
dec
jl
bound
adc
enter
jno
leave
xchg
iret
cmc
out
mov
nop
inc
jns
repz
push
mov
cmp
push
inc
mov
mov
stc
inc
cld
mov
into
dec
loope
popa
push
mov
cmpsl
xorl
adc
loop
daa
pop
rorb
stos
xlat
das
sbb
lret
leave
mov
pop
dec
jo
leave
mov
adc
mov
int
cwtl
lods
pop
jge
jp
xor
stc
roll
sarb
movsl
adc
sbb
imul
fcoml
pop
mov
mov
test
cmp
jp
je
stc
enter
in
idivl
cld
sub
ret
or
repz
cmp
daa
int
cmp
repnz
fisubrl
push
xchg
ja
mov
adc
cmp
ljmp
push
or
xchg
push
fcomip
mov
outsb
mov
adc
mov
je
int
popa
dec
fwait
jno
dec
dec
fisubs
push
packssdw
sbb
add
out
inc
pop
je
sahf
enter
pop
jl
sti
pop
dec
or
add
xchg
jo
pop
push
or
decl
mov
mov
rcrb
enter
negb
dec
sub
pop
jmp
xchg
les
aam
sbb
sbb
movsl
cmpsl
and
js
inc
mov
sahf
daa
stos
jns
pop
sub
ror
xchg
adc
shll
mov
mov
popf
pop
or
montmul
cmpsb
test
out
push
adc
sub
rolb
adc
cld
push
gs
mov
jns
out
add
jp
push
push
loope
test
pushf
outsb
add
pop
or
dec
pop
dec
into
out
movsbl
mov
inc
gs
lock
jg
fstpl
fiaddl
adc
add
cmpsb
in
sub
lahf
dec
arpl
and
sti
add
push
lea
scas
mov
enter
test
dec
mov
aad
sbb
ffree
dec
scas
and
inc
mov
mov
sub
adcl
sub
or
mov
cmpsb
sbb
into
push
test
or
loope
adc
pop
pop
std
out
imul
mov
mov
fcomps
mov
xchg
jge
mov
push
bound
mov
sub
repz
fists
xor
mov
ftst
in
inc
sub
and
mov
insl
xchg
in
js
adc
mov
cmp
inc
mov
rcr
cmp
pop
inc
sub
scas
lods
inc
mov
jbe
and
repz
lock
and
imul
ret
jae
push
ja
mov
std
int3
sbb
in
and
sub
cwtl
jecxz
mov
fwait
sahf
push
push
jns
fnsave
add
in
loopne
test
pop
add
adc
loope
jecxz
pusha
pusha
leave
iret
xchg
addr16
jnp
xor
adc
mov
movsl
and
je
cmp
dec
pop
mov
xchg
push
pop
lret
xor
and
movsl
jnp
fwait
stos
insb
push
xor
pop
push
leave
or
stc
sbb
mov
jmp
lret
sarb
mov
push
out
push
jmp
pushf
pop
inc
add
and
sub
push
mov
jbe
loopne
mov
jp
cmpsb
xor
clc
dec
flds
pop
cmpsb
mov
mov
in
in
sarb
pop
test
jecxz
mov
sbb
cmpsl
cld
adc
scas
push
push
jmp
dec
mov
dec
cmp
and
filds
push
sub
test
mov
in
stos
jmp
sahf
sbb
popa
js
imul
mov
sahf
cmp
rorl
adc
ret
cli
fsubrs
repz
xchg
repz
inc
jbe
mov
movsb
andl
mov
aad
pop
lea
adc
stos
mov
das
jno
mov
mov
or
ljmp
pop
inc
jno
mov
mov
fstpt
aaa
out
lock
cmp
das
jle
adc
imul
ret
inc
inc
push
mov
test
pop
push
insl
cmp
loope
sub
mov
cmc
rcrb
dec
sbb
out
jge
out
rcrb
ficoms
inc
in
in
decb
push
aas
sub
sub
push
cwtl
mov
lock
mov
imul
les
enter
fildl
xchg
loop
outsb
testb
lahf
push
jno
dec
pop
and
adcb
mov
adc
stos
sbb
iret
dec
test
rcl
sbb
nop/reserved
add
mov
add
xchg
hlt
lods
or
push
fcmovnbe
shrb
test
inc
call
stos
pushf
sub
orb
mov
loop
jo
xchg
mov
lods
push
dec
pop
mov
inc
nop
loop
dec
cmp
out
arpl
inc
xchg
mov
push
xchg
or
sub
leave
pop
scas
push
adc
sbb
inc
jg
in
mov
call
call
imul
xor
dec
pop
mov
mov
pop
xor
mov
lods
cmpsb
xlat
aam
mov
out
sbb
pusha
stos
xor
cmp
sub
stos
repnz
and
lret
sbb
call
repnz
gs
dec
sbb
sub
dec
inc
fidivs
and
jg
iret
std
test
enter
aam
mov
bound
lock
imul
pop
add
sub
iret
les
sbb
shlb
pop
fisttps
xlat
call
dec
popf
cltd
out
sub
and
pop
or
xchg
subl
jae
pushf
gs
sub
jb
mov
jmp
lea
cmp
or
dec
sti
sub
mov
sub
mov
adc
inc
sbb
pop
jbe
incb
cmp
mov
mov
and
lock
jecxz
repnz
push
xchg
sub
or
out
jae
adcb
int
in
cmpl
jne
push
sbb
jle
cmc
or
test
jnp
ffree
repz
pop
sahf
out
insl
add
cmp
cmp
cmp
mov
int3
mov
or
mov
stos
push
rcrl
aam
adc
adc
scas
mov
and
orb
ljmp
js
add
stos
cmp
sub
movsl
pusha
shll
push
sbb
mov
out
or
cmp
lahf
das
stos
sbbb
adc
mov
daa
sub
and
mov
mov
fdiv
aas
cmp
dec
aam
outsb
or
lret
push
mulb
xchg
repz
cmp
cltd
adc
stos
test
adc
push
loopne
repnz
xchg
into
mov
rcr
or
xlat
je
scas
dec
jmp
pop
push
jne
sbb
inc
jp
push
das
jl
testl
mov
loopne
push
hlt
cmp
inc
dec
arpl
in
adc
loope
out
mov
pop
clc
shrl
jecxz
mov
cs
or
sbb
loop
xchg
jmp
loop
xchg
mov
cmp
jo
inc
xor
pop
cmpl
jb
dec
sub
pop
mov
sub
cmp
push
movsl
cmp
dec
sub
pop
mov
mov
addb
sub
cmp
cmp
lret
popf
mov
stos
add
movsl
mul
xchg
xchg
inc
inc
adc
addb
icebp
mov
rorb
test
loopne
xlat
ret
push
repnz
adc
or
outsl
add
cmpl
jne
insb
cmp
movsl
dec
in
mov
xor
sub
push
jp
push
sbb
scas
daa
popf
adc
dec
jle
mov
or
push
leave
sahf
or
push
fmull
gs
sub
mov
loopne
loop
shl
jo
fiaddl
mov
dec
test
nop
iret
xchg
sarb
in
shlb
sbb
mov
add
imul
roll
mov
push
pop
lahf
mov
insl
pop
mov
rcrb
outsl
test
aas
push
xlat
cmp
jbe
call
adc
hlt
scas
pop
sbbl
out
js
mov
mov
jbe
ja
mov
cli
mov
add
xor
jnp
xor
out
aam
xchg
jle
ret
jp
push
inc
divl
adcl
daa
int
aam
adc
into
push
jns
insb
push
pop
inc
dec
sbb
icebp
sub
cmp
sub
xor
shll
inc
out
fs
je
call
data16
aas
outsl
test
aaa
call
shr
loopne
out
pushf
xchg
xchg
xchg
insb
out
and
mov
fistl
pusha
jecxz
dec
sub
cmp
mov
nop
jae
push
lods
pop
mov
cmp
xchg
leave
sahf
fcomi
std
xchg
sbb
clc
std
iret
mov
pop
and
lods
mov
cmpsb
dec
nop
lret
or
cltd
test
ret
pusha
dec
scas
cmc
adc
mov
daa
inc
pop
pop
mov
mov
sub
aaa
stc
js
inc
pop
shrb
je
push
shrl
hlt
mov
cmc
sbb
mov
out
inc
jecxz
call
pop
into
roll
push
in
jecxz
sbb
pop
bsf
mov
or
in
or
inc
fcoml
inc
outsb
faddl
mov
mov
daa
pop
inc
add
inc
jno
xor
adc
outsl
sub
or
leave
jno
mov
ljmp
push
stos
mov
sbb
add
ljmp
fnstcw
xor
lods
in
hlt
push
pop
xor
aaa
pop
js
mov
insb
das
popa
pushf
fldt
movsl
scas
lods
clc
jecxz
stos
leave
outsl
repnz
sbbb
popa
daa
push
jno
fwait
add
xor
aad
fists
lret
fiadds
inc
imul
pop
pop
cmp
das
adc
test
add
xor
test
mov
and
or
mov
xchg
xchg
andb
xchg
push
mov
cwtl
mov
js
test
sub
jo
arpl
or
outsl
add
aad
xor
mov
into
mov
scas
in
pushf
imul
mov
or
mov
aaa
lds
movsb
mov
sbb
incl
adc
fcmovnbe
inc
xchg
ljmp
dec
cwtl
mov
dec
push
inc
data16
add
push
mov
flds
mov
or
sub
scas
clc
leave
push
sub
push
pop
or
scas
lret
gs
jno
mov
push
push
leave
stos
es
sbb
adc
fsubrs
inc
insb
push
ret
sbb
mov
cmp
popa
filds
jnp
pop
lea
xchg
fimuls
inc
popa
aam
jns
dec
xchg
mov
test
add
arpl
add
rorb
test
aaa
loopne
dec
ss
dec
in
loop
movsl
int3
mov
xchg
lea
fimuls
mov
ffree
and
movsb
and
add
dec
into
pop
lock
loop
repnz
shl
sub
movsl
pop
xor
jl
mov
sahf
mov
fs
mov
popf
xor
pusha
push
push
in
xor
cs
call
sub
cmc
inc
repz
test
add
int
xchg
ds
int
mov
jecxz
movsb
les
mov
xchg
mov
ljmp
fists
pushf
push
out
dec
fmulp
ficomps
movsl
add
sub
xchg
lahf
fisttps
push
push
pop
pop
test
sbb
lcall
and
jle
mov
mov
jo
mov
cmp
int
incb
fldt
adc
sahf
in
imul
push
pop
ljmp
loop
sub
dec
sti
mov
pop
fsubs
push
xchg
aas
pop
jecxz
in
sar
jl
push
mov
nop
test
cltd
jmp
xchg
pop
jns
mov
push
cwtl
pop
push
fadds
inc
loope
push
xor
cli
and
stos
cmp
stos
fildl
or
icebp
out
mov
xchg
out
jecxz
cmp
jnp
mov
es
sbb
push
jnp
adc
pusha
mov
sahf
push
int3
testl
add
push
jnp
push
sti
fistpl
movsb
sbb
inc
mov
inc
and
lods
roll
pop
pop
push
xchg
pop
gs
lret
insl
into
xchg
inc
mov
jo
in
sahf
daa
lods
push
aad
push
mov
mov
ficomps
ljmp
test
lock
std
iret
cwtl
jl
outsl
push
xor
fimull
nop
rcr
cmpsl
jno
ss
nop
xchg
and
data16
or
lock
into
push
inc
shlb
int
cmp
leave
jecxz
sbb
add
mov
or
sbb
jle
dec
aaa
inc
lret
add
mov
push
clc
fsubp
fucomp
fstps
jns
mov
fwait
mov
pop
pop
jecxz
mov
shll
pop
mov
into
mov
lret
stos
call
cmp
mov
movsl
arpl
mov
xchg
lock
testl
jecxz
lahf
adc
xor
mov
xchg
dec
fwait
and
mov
lahf
rcrl
gs
fiadds
inc
roll
dec
data16
inc
inc
mov
shrl
mov
adc
fstps
add
mov
btr
lcall
mov
outsb
jle
add
outsl
jge
repz
pop
cmpsb
push
in
xchg
icebp
out
loopne
xor
inc
lcall
pop
insb
bnd
call
shll
lds
pop
ret
lcall
dec
add
movsb
cmc
cmpsl
jmp
mov
cwtl
push
loop
fstpt
push
lret
inc
ds
mov
adc
push
push
popa
jmp
lret
adc
std
out
mov
mov
test
sbb
or
mov
out
sbb
jp
add
shr
mov
fs
cmp
nop
cmpsl
loop
lds
pop
pop
ret
lock
inc
cltd
mov
loop
iret
and
out
arpl
sub
fisubrs
mov
pop
adc
inc
push
aam
add
push
dec
lcall
ja
xchg
or
stos
adc
in
push
xchg
cmc
adc
ret
cmp
arpl
sub
rolb
pop
jns
add
outsl
lret
jae
xor
jl
dec
push
mov
imul
mov
into
sbb
mov
push
cmp
sub
jo
cld
dec
out
fistl
sarb
push
add
test
jb
shlb
shl
pop
leave
xchg
addb
inc
xchg
loope
cmp
out
mov
inc
outsl
push
dec
xchg
pop
aam
inc
xor
cltd
and
loope
cmp
movsl
mov
jmp
cmp
lea
xor
cwtl
imul
int
add
xchg
push
loopne
or
frstor
mov
aas
add
mov
arpl
jmp
enter
cli
faddp
pop
jbe
xor
mov
pavgw
xor
lods
test
daa
lods
push
pusha
fwait
xchg
pop
xchg
lds
sub
mov
pop
pop
pop
xchg
cmp
repz
popl
movsb
sahf
or
or
sub
shrl
or
xchg
xor
dec
jns
add
mov
xorb
xor
dec
icebp
data16
test
test
dec
arpl
sbb
das
jge
mov
sarb
mov
xchg
sub
xor
or
cmp
xchg
jle
jne
xchg
pop
or
mov
orl
mov
jno
push
xchg
sbb
cmpsl
fld
fcmovnu
cmpsl
jo
adc
push
stc
stos
cmp
adc
or
pop
and
popa
sbbb
leave
inc
out
xor
ss
inc
sub
hlt
adc
cwtl
sub
sub
mov
fs
jo
dec
add
popa
xor
in
and
inc
sahf
lretw
es
loop
gs
xor
push
imul
dec
data16
dec
pusha
add
stos
in
mov
mov
iret
xor
clc
mov
push
repz
cmpb
pop
or
test
inc
push
sahf
sbb
in
push
mov
fistpll
out
and
sub
mov
cmp
and
mov
push
dec
xchg
pop
mov
cld
and
mov
inc
xchg
jecxz
xchg
inc
dec
sub
jp
dec
and
pop
or
shlb
jecxz
mov
xchg
imul
mov
lock
outsl
pop
cmp
or
and
out
orl
jae
gs
xor
movsl
pop
cmpl
xor
push
dec
jne
sbb
sysret
mov
mov
lock
repnz
subl
inc
je
sub
push
cld
ds
jle
fisubrl
add
and
dec
mov
cmp
pop
sbb
stos
mov
push
je
mov
in
push
movsb
loopne
push
ja
add
scas
cmp
lcall
xorb
sbb
fisttpl
daa
sbb
jo
xchg
and
push
or
cli
in
roll
xor
or
pop
mov
shrb
rolb
dec
stc
arpl
lods
cwtl
cltd
fsubrs
test
iret
in
inc
xchg
lahf
call
test
jns
push
cmpsl
scas
mov
lret
repz
mov
jp
mov
xor
mov
insb
push
into
xor
dec
sub
data16
mov
inc
and
jbe
loope
popf
loopne
scas
jae
idivb
and
out
out
push
dec
sbb
push
loope
imul
sub
cmp
jb
dec
lock
movsl
bnd
jbe
fbstp
ds
aam
cld
cmp
jno
rcrl
sbb
cmp
jp
scas
dec
mov
bound
fistps
in
mov
adc
and
mov
ljmp
stc
imul
mov
pop
popf
xchg
inc
sbb
jmp
pop
shl
ja
xor
andl
mov
and
lret
pop
dec
add
in
jl
bound
pop
pop
pop
dec
and
and
cli
ret
rclb
mov
mov
push
out
mov
dec
push
scas
xchg
aad
and
adc
divb
push
sub
inc
inc
imul
test
fldenv
mov
repnz
scas
nop
pop
pusha
lcall
jb
push
fidivl
and
stos
cwtl
and
xor
imul
adc
mull
pop
enter
push
pop
pop
mov
push
int
test
and
mov
js
mov
fisttpl
pusha
outsl
mov
arpl
adc
jo
test
mov
or
scas
dec
mov
imul
stc
daa
mov
mov
pop
sbb
sti
mov
sti
pop
mov
sub
pop
adc
mov
sarl
cmpsb
addr16
cmp
adc
push
sub
test
stc
and
inc
jle
mov
push
outsb
and
pop
mov
xlat
push
in
test
stos
pop
jp
push
scas
sbb
cmc
fidivrs
xchg
mov
clc
mov
push
outsb
pop
fwait
test
sti
in
cmpsb
pop
xchg
xchg
arpl
lahf
push
ljmp
hlt
leave
mov
loop,pt
or
fcmovnb
mov
sbb
in
fidivl
cwtl
pop
adc
mov
mov
adc
jbe
xchg
shll
jae
mov
inc
sbbl
and
fwait
pop
fs
mov
or
fstpt
icebp
cmp
mov
je
sti
cmp
fdivs
jecxz
cmp
add
fisubl
aad
pop
and
sbb
adc
push
loop
leave
mov
leave
jl
xor
popf
divl
cmp
es
inc
add
ret
jae
roll
mov
jns
jmp
sub
bnd
loop
xchg
dec
mov
leave
popa
out
subb
fmuls
xchg
push
call
fiaddl
pop
jecxz
lret
xor
mov
pop
or
cli
xchg
outsl
xchg
pop
xlat
test
dec
xor
stos
adc
cmp
into
repz
fwait
push
mov
out
or
sub
loope
aaa
daa
mov
fcmovbe
ja
sub
and
add
mov
fs
mov
or
arpl
xchg
call
push
mov
push
xchg
into
jns
pop
sbb
in
arpl
jg
stos
leave
mov
shll
add
sub
imul
jb
cmp
or
and
mov
jle
loopne
outsl
adc
enter
fcompl
outsb
and
mov
lahf
push
cs
mov
mov
loopne
sub
jg
mull
rclb
jbe
pop
dec
push
mov
outsl
or
rorb
sbbb
lods
sub
ljmp
aad
cli
in
mov
aad
adc
xchg
sbb
adc
mov
daa
andl
inc
adc
cmpsb
cmp
imul
jbe
xchg
mov
hlt
pop
mov
out
cmpsl
push
cld
sub
dec
ret
subb
lods
test
ljmp
lock
mov
mov
lods
in
mov
dec
icebp
sub
sbb
push
mov
loope
pop
inc
sarl
jle
pop
or
sbb
add
push
pop
dec
popf
sub
pop
sub
adcb
cmpsl
sti
cmp
pop
cli
jecxz
inc
jo
push
lret
push
movsl
and
pop
int3
mov
mov
js
sbb
test
add
mov
xchg
lods
jle
movsl
outsl
mov
dec
mov
daa
int
loopne
hlt
add
fs
aam
stos
testl
dec
push
mov
je
mov
rorl
shr
mov
add
dec
mov
dec
sub
dec
mov
mov
lds
adcb
sub
xchg
scas
lret
or
rclb
adc
dec
and
xor
andl
ss
and
cmp
push
mov
cmp
jl
repz
ret
dec
mov
xchg
cmc
sahf
inc
aad
adcl
pop
jle
xchg
nop
inc
add
mov
loope
mov
xchg
push
pop
icebp
xchg
push
adcl
out
xor
add
fs
orl
mov
sub
pop
repnz
or
inc
stc
sti
dec
push
lds
push
loope
or
repz
cld
es
push
data16
popa
cmp
mov
shr
lods
gs
mov
pusha
imulb
ljmp
jecxz
sar
push
dec
pop
or
mov
test
jecxz
xchg
lahf
inc
jnp
push
add
push
sbb
xlat
xchg
js
adc
pop
enter
rorb
out
sub
mov
mov
xorl
stos
add
aaa
jg
stos
les
cmp
and
mov
jecxz
mov
and
leave
pop
int
mov
jbe
pushf
and
jae
pusha
aas
mov
leave
or
test
outsb
jae
mov
mov
ret
cmp
mov
mov
push
and
sub
outsb
inc
fdiv
ds
ljmp
and
inc
xchg
dec
imul
pop
lret
pusha
mov
lock
sarl
out
sbb
not
xchg
dec
lcall
daa
out
pop
cmpsl
in
das
push
mov
jns
out
push
out
mov
mov
inc
test
dec
rcll
test
inc
arpl
rep
adc
mov
pop
and
stos
jle
daa
add
jnp
shlb
jne
hlt
mov
xchg
sub
bound
push
mov
icebp
inc
jge
enter
outsb
push
push
dec
and
and
cmp
fldt
mov
cmp
jnp
ret
adc
cmc
rcll
jp
sub
daa
sbb
pop
cwtl
cmp
ficompl
and
jmp
inc
enter
ljmp
fwait
jno
cltd
or
sbb
push
mov
out
imul
stos
sbb
xchg
pop
xchg
xor
das
repz
call
imul
fidivrs
lods
arpl
xchg
movsl
mov
fcomp
jecxz
lret
loop
and
push
out
orb
or
outsl
fwait
mov
cmpsb
loope
sub
mov
or
xor
sub
cmc
jae
test
ss
fnstsw
stos
sub
sbb
scas
pushf
xlat
cmc
push
sti
lods
sbb
aam
lock
fisttpll
mov
push
test
or
shrl
push
and
js
push
lods
or
or
out
repnz
rcl
jbe
fwait
call
jmp
mov
jmp
inc
ja
test
movl
out
mov
sub
push
mov
mov
xchg
xchg
sarb
and
es
popa
and
dec
sbb
push
popf
mov
repz
dec
roll
mov
decl
scas
into
mov
int3
popf
ret
cmp
nop
call
mov
add
aas
popf
shll
cmp
scas
mov
out
jns
leave
dec
pusha
jmp
lcall
lahf
pop
adc
jmp
xchg
push
or
inc
jne
out
sub
jmp
add
js
dec
enter
sub
jmp
jo
cld
mov
test
sahf
insb
je
dec
rorl
xchg
cmpsb
test
mov
mov
rcll
in
mov
mov
lea
in
subl
iret
xchg
sub
jmp
sbb
push
sbbb
xchg
sar
fstpl
cld
hlt
inc
adcb
mov
pop
jno
test
fadds
pushf
enter
xchg
loop
in
shr
mov
xchg
push
adc
dec
cwtl
sbb
iret
adc
call
or
mov
cmc
popl
jmp
xchg
ds
sub
idivl
imul
loope
es
add
mov
jo
xor
lea
mov
and
xor
daa
das
jo
cmp
fnsave
sub
xchg
out
sub
int
add
aaa
mov
out
cltd
dec
mov
mov
push
pop
fistpll
into
xor
sub
lods
sub
insl
fwait
adc
adc
mov
idivb
push
inc
xor
repz
inc
pop
mov
xlat
lods
dec
arpl
and
inc
mov
mov
dec
push
sbb
or
and
mov
pop
mov
in
int
je
adc
ret
cmpsl
xchg
in
mov
mov
push
aad
dec
out
loop
jmp
addb
push
dec
inc
adc
cmp
mov
movsl
inc
jge
adc
addl
xchg
fstp
or
xlat
mov
daa
pop
inc
lock
jmp
push
bound
mov
xor
cmp
test
push
in
push
movb
es
mov
sub
xor
arpl
repz
cmp
lds
imul
lock
lods
lret
or
jb
popf
jnp
jns
gs
lods
mov
cld
addr16
xor
mov
push
jb
popa
jp
lods
pop
fwait
into
icebp
std
bound
pusha
orb
outsb
mov
jge
xchg
lods
mov
pop
lods
and
sahf
push
push
mov
cs
clc
xchg
sbb
out
xchg
lcall
cwtl
mov
sub
sbb
push
in
leave
xor
mov
test
adc
dec
or
es
addb
aam
jle
pop
jo
dec
popl
xchg
js
lret
test
ja
rcrl
enter
aam
lock
add
push
popa
or
pop
je
jbe
ss
cmpsl
and
mov
scas
mov
in
in
outsb
or
pop
out
adc
pop
add
dec
in
cmove
scas
pop
rorb
push
push
dec
arpl
mov
push
cmp
inc
xchg
inc
test
and
rcl
cltd
stc
out
lret
lock
mov
adc
push
xlat
loope
mov
pop
call
outsl
mov
stc
xchg
ja
sbb
out
adc
scas
shlb
or
movsl
scas
rcr
hlt
pusha
out
pop
push
inc
je
sbb
fxch
outsb
mov
xor
bound
scas
and
and
and
pop
pop
sbb
int3
cltd
cmp
daa
shl
pop
fadd
mov
mov
sub
cmp
rcl
fidivrs
lods
mov
xorb
scas
and
sahf
adc
mov
loopne
xor
pop
adcl
pop
fsubrl
inc
inc
into
mov
movsl
add
nop
inc
pop
ror
rcll
xchg
pop
and
out
xor
cmpsb
addr16
lret
sti
leave
mov
adc
in
push
int
jbe
dec
xchg
mov
test
out
xor
mov
test
add
mov
hlt
clc
inc
fidivrl
lods
out
mov
mov
int
in
sub
jns
out
push
mov
stos
or
stos
lock
lcall
sub
mov
dec
and
mov
xor
out
pop
imul
xor
sbb
sbb
int3
mov
push
pop
popa
jnp
cmp
out
pop
pop
mov
push
mov
pop
jle
jo,pn
mov
lods
ret
lods
andl
fstpl
mov
popa
sahf
outsl
mov
jns
jnp
dec
movsl
adc
outsb
xchg
cwtl
outsb
sbb
adcb
push
sub
cmp
in
dec
mov
mov
sbb
cmp
xor
pop
out
sub
pop
jno
sbb
mov
lret
sbb
in
lahf
pop
loope
dec
or
xor
and
cmpsl
dec
jg
xor
fwait
int
je
sti
adc
pop
cmp
test
sahf
inc
out
fst
arpl
movsl
dec
adc
fbstp
mov
mov
mov
or
js
xor
xor
fists
lods
jg
mov
mov
ffreep
add
loop
mov
and
xor
rorb
add
mov
pop
ret
add
mov
jp
inc
pop
fadds
outsl
cmp
iret
xor
dec
mov
xor
xor
outsl
fdivrl
nop
pushf
push
sub
xor
sahf
repz
cmp
or
incb
mov
mov
out
mov
lock
fldenv
fldcw
test
mov
aam
bswap
js
popf
pop
jecxz
movsb
ret
add
aad
hlt
test
call
cli
adc
adc
adc
fiaddl
outsl
mul
ss
inc
in
lock
pop
jb
adc
outsb
adc
dec
xchg
movsb
and
data16
or
test
and
cld
out
lret
mov
xor
jl
das
pusha
in
lahf
jg
inc
push
xor
loope
das
jge
arpl
jge
ss
sbb
jmp
cmp
inc
pop
mov
sti
aas
pop
stos
xchg
cmpsl
clc
xor
xor
and
enter
mov
sti
add
lcall
inc
insl
xchg
adc
adc
jecxz
data16
sbb
loope
dec
je
inc
sarl
aad
mov
gs
inc
pop
dec
xchg
jne
lds
cmp
mov
jnp
xor
push
pop
dec
mov
mov
adc
cmp
mov
inc
scas
mov
cmpsb
sub
lds
adc
xchg
ficompl
in
cmpsl
into
dec
or
sub
mov
repnz
mov
popa
jl
rorl
add
leave
pop
into
fwait
dec
int3
sbb
mov
daa
test
in
loope,pt
add
in
xor
mov
cmp
xlat
mov
test
push
inc
mov
data16
orl
cmp
push
cmp
insl
push
and
sbb
fisttpll
sbb
jae
fnstenv
or
pushf
rcr
mov
sahf
dec
cmp
lahf
adc
repz
ljmp
fwait
pop
jns
sub
dec
jae
js
lahf
and
mov
int
orb
ljmp
push
aam
mov
fwait
movsl
xor
push
xchg
shll
mov
xchg
outsb
mov
shll
ret
test
mov
and
arpl
dec
rcr
add
cmp
call
adc
pop
or
out
addr16
or
and
loope
add
xchg
subl
addr16
cmp
ljmp
ljmp
sbb
push
stc
adc
out
pop
inc
mov
call
jp
jo
mov
xor
push
sub
ss
adc
lea
rolb
sahf
imul
xchg
loope
add
jp
rol
pop
and
xchg
aad
xchg
jns
ret
fwait
inc
fstpl
jne
aaa
adc
ja
sarl
mov
aam
xor
cld
xlat
in
sbb
scas
pop
test
mov
xor
mov
fisttpl
pop
pop
aad
mov
sbb
mov
push
sbb
clc
lret
jmp
mov
rorb
xlat
adc
adc
inc
or
aad
and
pop
push
xor
ret
mov
stc
test
mov
mov
inc
repz
in
nop
dec
push
int3
push
xor
jbe
inc
and
and
xchg
mov
inc
outsl
adc
ficoml
iret
cmp
and
xchg
xor
cmp
cmpsb
aas
dec
cwtl
cmp
fisubrl
stos
sbb
call
jl
jp
or
pop
fsub
imul
push
in
mov
xlat
test
adc
mov
push
rol
inc
xorl
fs
xchg
xor
dec
cmc
dec
mov
xchg
fisubs
inc
jg
stos
jnp
fists
inc
pop
inc
mov
popf
sbb
push
pop
push
sub
sub
mov
imul
nop
cmp
push
jo
std
push
nop
and
jle
movsb
pop
mov
insl
stos
mov
outsb
imul
ror
subb
push
nop
aam
fs
ja
jmp
js
push
nop
in
mov
add
popa
in
shlb
leave
mov
loopne
sub
jl
faddl
out
ret
ret
addr16
lret
mov
jecxz
test
lret
sbb
leave
nop
inc
push
push
ja
cmp
lahf
push
pop
cli
cmpsb
daa
mov
mov
out
dec
push
adc
js
cwtl
pop
test
mov
push
roll
rcrb
mov
or
aaa
addr16
mov
mov
mov
mov
push
xchg
std
or
cmp
les
pop
xchg
ror
mov
sub
js
push
loop
fistpll
mov
mov
dec
ret
mov
dec
mov
cmp
mov
cmp
jl
xchg
mov
cmovle
mov
dec
mov
mov
into
enter
xor
xchg
pop
jbe
sub
and
inc
sub
les
lods
push
repz
sbb
mov
in
js
movsl
stos
insl
mov
sub
dec
daa
mov
pop
cmpsb
jmp
fisttpl
dec
mov
testb
mov
leave
sub
pop
int3
cmp
loope
jae
mov
std
inc
push
ret
lcall
cmp
in
nop
xchg
movl
cmpsl
adcb
cwtl
sarl
add
arpl
popa
jl
xchg
mov
repnz
scas
jne
aad
pusha
mov
repz
mov
dec
dec
xor
push
xchg
xchg
filds
jge
mov
pop
sbb
or
int3
sub
xchg
inc
xor
inc
fiaddl
sbb
jl
mov
jnp
or
cmc
push
or
pushf
mov
push
stos
mov
fyl2x
or
lret
mov
jb
aam
das
sub
pop
cwtl
lods
data16
out
inc
scas
xor
push
mov
cmp
xchg
in
stos
pop
jg
jp
sub
arpl
xchg
sbb
mov
scas
and
push
shll
xchg
xchg
push
dec
rclb
in
inc
inc
test
addr16
mov
xchg
cmpsl
mov
mov
add
insl
out
sub
or
cld
pop
mov
data16
pop
inc
fld
aaa
jbe
in
cmp
test
push
adcl
mov
push
leave
xchg
stos
adc
outsb
jmp
adc
cli
js
in
cltd
iret
jmp
lret
mov
mov
lods
pop
mov
sub
shrl
fimuls
pop
mov
shll
push
sub
repnz
mov
cmpsb
repz
nop
or
push
jge
mov
in
jo
ret
push
xor
jnp
push
inc
loop
jne
xor
in
inc
jmp
or
icebp
mov
sub
xchg
into
dec
js
mov
mov
inc
arpl
dec
mov
jbe
mov
scas
outsl
lock
xor
shl
sbb
arpl
imul
loope
adc
fucom
xchg
test
fs
push
sbb
push
sub
negl
add
pop
arpl
fidivl
xchg
add
pusha
cmpb
pop
mov
pop
cmpsb
xchg
fstl
pop
mov
pop
sbb
andl
ficoms
xor
xchg
jecxz
das
daa
sub
cpuid
cmp
xlat
mov
or
inc
inc
mov
push
add
enter
jnp
out
inc
fucom
lods
mov
cmp
call
pop
hlt
push
mov
push
ss
imulb
nop
mov
inc
in
loope
lcall
sbb
popf
in
mov
xor
mov
test
sbb
mov
mov
mov
in
daa
dec
jno
jo
mov
xor
inc
dec
inc
testl
sbb
xlat
lret
mov
mov
jg
push
ljmp
push
aad
inc
notb
mov
add
jmp
into
movsb
mov
in
or
imul
fldcw
sub
cmp
adc
out
test
in
adcl
lds
sbb
ljmp
sbb
loopne
icebp
mov
pop
sub
or
vrsqrtss
and
sbb
jge
in
lcall
sbb
or
pop
je
ljmp
imul
lret
pop
xchg
cltd
mov
mov
add
inc
dec
dec
iret
inc
add
subl
cmp
and
test
es
mov
sbb
push
fadds
fsub
xor
dec
das
int
arpl
sbb
xor
shll
add
cmp
dec
mov
insb
es
testl
jmp
popf
outsl
cltd
shl
ror
mov
pushf
ffreep
cmpsb
aaa
ljmp
mov
mov
lfs
mov
cmp
mov
dec
cmp
pop
insb
jo
xor
add
and
jg
out
scas
fists
push
jb
loopne
adc
idivl
cld
mov
fbld
jnp
les
adc
xor
pushf
ret
cmp
xor
add
fildl
adc
clc
stos
cmp
cmp
dec
test
loopne
mov
sbb
dec
xor
js
fcoms
and
std
mov
cld
push
or
lret
push
push
mov
int
call
adc
imul
xor
lods
pop
dec
xchg
es
jb
stos
mov
test
sub
lret
in
cmpsb
loope
leave
xor
imul
pop
test
int3
push
out
mov
test
mov
add
pop
mov
setnp
sub
pop
subps
xorl
sahf
add
ljmp
and
jno
add
scas
fcmovne
adc
gs
nop
lods
xchg
imul
test
jnp
hlt
in
sbb
xchg
dec
push
ja
test
mov
xor
sub
ja
popf
or
push
mov
cmp
call
sub
loope
sbb
sbb
sbb
call
cmc
daa
jl
inc
pop
mov
ret
ss
cli
out
aaa
fildll
push
dec
subb
mov
and
arpl
aas
inc
out
inc
into
push
test
sbb
std
stos
fwait
cld
test
sbb
test
xchg
aas
enter
hlt
out
mov
scas
roll
iret
pop
xor
mov
jnp
sub
jp
jecxz
loop
cmp
outsl
pop
es
out
in
jecxz
jbe
cmc
add
push
notl
outsb
sub
aas
dec
rorb
mov
jne
mov
andb
dec
nop
out
lods
in
dec
jae,pt
ss
fstl
lods
mov
stos
sub
lea
stc
test
mov
push
clc
in
mov
xor
adc
ss
add
imul
imul
lret
mov
cli
mov
pop
cld
add
pop
test
lea
inc
xor
or
mov
mov
add
mov
pop
cmpsl
popfw
push
icebp
lahf
nop
mov
fdivl
bound
ljmp
ret
test
xor
cld
mov
inc
xlat
lret
sub
scas
sub
aad
adc
add
pusha
cmp
push
lock
adcb
je
inc
out
daa
iret
faddp
je
pop
int3
pop
and
xor
inc
add
xchg
mov
icebp
mov
jecxz
data16
scas
cmpsb
nop
jnp
aas
out
xchg
pop
jg
lahf
inc
dec
xor
inc
or
fstpt
sti
cmp
mov
mov
push
test
add
test
xor
or
xor
pop
xor
mov
aas
cmpsl
std
dec
lock
xor
or
add
cmp
arpl
dec
stos
pop
xchg
jp
insb
not
popa
out
icebp
lock
sbb
shll
enter
bound
popf
xor
nop
cmc
shlb
ds
sahf
or
xor
push
xchg
or
test
int3
lds
jge
call
add
rcl
jmp
fdiv
cmp
sti
enter
pop
fdivrs
cmp
lods
ficompl
jb
pusha
in
adc
adc
or
rcl
xor
ljmp
mov
cmp
mov
fsub
aad
icebp
sar
test
fsubrs
sbb
es
xor
cmpsl
mov
fmull
push
js
les
sti
sub
cld
inc
mov
xor
inc
ficompl
push
fistl
sbb
push
and
popa
rcl
xor
adc
xor
or
cmp
lods
sarl
add
int
scas
pop
fildl
mov
icebp
insb
mov
cmp
mov
add
insb
nop
mov
dec
daa
call
gs
fadds
idivb
outsb
mov
adc
pop
pop
movsb
or
sbb
loope
notl
movsl
push
xchg
lods
mov
sub
adc
sub
mov
and
sub
mov
adc
adcl
insb
cli
xchg
fmul
mov
jb
mov
test
jnp
hlt
cmp
push
fs
pop
push
fwait
sub
out
mov
das
insb
mov
sahf
sub
sub
sahf
lahf
rcr
push
js
fwait
cmp
push
mov
xchg
pop
inc
sbb
sub
sub
add
mov
pop
and
and
cmp
and
pop
call
insb
lods
ret
fs
scas
mov
xor
or
inc
push
movsb
cld
int
or
mov
das
insb
movsb
sbb
mov
add
xor
jmp
xchg
push
inc
push
jno
cmp
bound
iret
aam
scas
cltd
lods
pop
out
fsts
xor
add
push
mov
push
in
mov
nop
insl
push
sub
jns
or
sbb
push
adc
push
or
dec
mov
adc
pusha
adc
fadd
mov
and
bound
adc
xchg
movsl
aaa
clc
out
movsl
inc
outsb
push
ret
sbb
out
nop
jno
push
jl
ds
aaa
out
mov
jge
jnp
sub
sbbb
pop
adc
data16
sbb
mov
jmp
mov
and
fcom
in
jb
std
popf
adc
sahf
xor
jge
int3
aad
fstpt
inc
push
or
loopne
jle
icebp
hlt
dec
add
cmp
mov
sahf
sbb
jle
inc
seto
adc
aas
and
addr16
fs
and
icebp
sbb
push
int
loopne
lds
pop
xchg
sub
push
fsub
push
and
loope
lahf
in
es
es
cltd
and
jno
or
adc
mov
dec
jno
xor
popa
sbb
aad
inc
xchg
mov
cltd
insb
cmpsb
mov
or
xchg
adc
fnstenv
ret
pop
in
jge
call
jae
jge
or
shrl
or
leave
out
popa
mov
jns
mov
inc
dec
cmp
pop
adc
jno
jmp
mov
dec
mov
push
xchg
adc
lds
dec
sahf
xchg
mov
xchg
xchg
in
inc
sbb
test
out
jne
pop
and
pop
scas
sub
mov
push
jp
push
inc
loopne
int
and
mov
mov
out
adc
test
fmuls
fs
inc
push
sti
in
sub
pop
test
xchg
clc
push
jmp
fidivrl
cmp
inc
mov
int
lods
addr16
jo
cltd
adc
cmp
filds
scas
inc
das
repz
dec
shr
loop
pusha
sub
js
imul
or
mov
mov
negl
push
test
lock
pop
adc
aad
test
ja
and
ficompl
add
mov
mov
sbb
sub
mov
div
scas
xchg
js
lock
hlt
jne
lods
aaa
scas
xor
mov
pop
or
mov
push
push
call
xchg
xchg
push
or
shl
in
jmp
les
jecxz
mov
add
pop
push
mov
or
sub
adc
aam
ficompl
push
test
xorb
mov
std
jmp
dec
out
fwait
cmp
icebp
data16
pop
outsl
jle
shll
jbe
je
inc
dec
ds
push
jmp
notl
int
cmp
loope
pmulhuw
cmp
das
mov
clc
or
sti
fisttpll
jmp
lahf
mov
jnp
roll
mov
ds
pop
jl
in
adc
sub
xorb
adc
and
dec
cs
xlat
pop
imul
nop
sbb
dec
dec
nop
mov
and
inc
pushf
and
and
cmp
jnp
icebp
xchg
add
rcrb
push
xchg
or
push
cmc
pop
xor
and
dec
xchg
sub
addl
push
stos
jg
fsubrl
push
clc
sub
jg
jbe
sti
lods
pushf
fistps
fisubrl
cmp
mov
addr16
xor
xchg
mov
xlat
push
daa
xchg
lods
loopne
sub
fs
aas
inc
push
out
adc
add
loope
mov
stc
into
or
popa
cmp
mov
sub
jl
push
jmp
pop
mov
pusha
mov
ljmp
in
xchg
mov
jbe
fwait
push
lret
movsb
leave
bound
nop
ficompl
jns
push
mov
fwait
std
das
dec
call
dec
jns
jb
dec
xchg
leave
enter
sbb
fs
push
movsb
lock
or
add
xchg
ret
popf
outsb
add
bound
nop
adc
sub
mov
dec
jge
sahf
cmp
jecxz
test
pop
xor
mov
cmpsb
pop
xor
push
in
int3
cmp
in
imul
and
sub
adc
subl
ret
inc
popa
sbb
push
sbb
ss
push
movsb
scas
fdivp
push
test
sbb
dec
mov
clc
pop
pop
sbb
push
push
xchg
and
pushf
mov
push
add
add
push
cld
sbb
jbe
mov
cltd
mov
mov
ret
cmp
movsb
mov
clc
cltd
push
fwait
in
out
pop
stos
jbe
lahf
fisubl
inc
and
cltd
and
hlt
inc
sbb
in
ret
in
xchg
push
adc
cltd
adc
jmp
jo
push
mov
test
jne
icebp
aaa
rclb
add
mov
adc
test
xchg
add
xor
lret
jg
mov
test
pop
dec
pop
pop
and
jl
sub
or
jne
daa
push
rorl
enter
xlat
fsubrp
loope
cmp
and
aam
test
fs
cld
lret
pop
hlt
adc
push
sbb
inc
sbb
or
mov
inc
and
or
push
rclb
in
inc
addr16
adc
or
not
and
ds
lock
dec
cltd
scas
stos
imul
test
xor
sub
add
js
sarb
out
ljmp
rclb
es
push
mov
and
test
jnp
stos
xor
jl
mov
pop
cmp
cmp
xorb
gs
pop
xchg
xchg
sbbl
dec
lods
popf
mov
jne
sub
xor
out
mov
push
dec
subl
mov
enter
cwtd
dec
pop
pop
mov
ss
into
inc
dec
shlb
inc
inc
mov
cmp
push
add
lods
dec
pop
lcall
jge
mov
xchg
fwait
subb
mov
ljmp
pop
fcmovb
xchg
and
pop
cmp
rcll
outsl
out
cmc
pop
add
sbb
aas
pop
dec
mov
outsl
push
adc
stos
in
jns
fiadds
sahf
sbb
xchg
loop
mov
add
xor
sbb
addb
imul
mov
and
roll
hlt
cmpsl
pop
ret
mov
mov
into
or
inc
mov
xor
jnp
mov
dec
inc
pop
out
pop
adc
outsb
xchg
xlat
lods
push
popa
mov
jge
or
push
jbe
int3
jle
shrl
cmc
scas
jmp
pop
mov
cmp
pop
sbb
pop
sub
cmp
xchg
sti
mov
jmp
adcl
add
jmp
movsb
orb
in
and
pop
adc
pop
aaa
sub
in
mov
imul
outsl
push
dec
cmp
lret
icebp
aaa
scas
push
addr16
xchg
test
sub
xchg
cmpsl
push
icebp
add
inc
scas
or
adc
je
sub
imulb
pop
inc
cli
cmc
cmp
inc
mov
sub
clc
jge
and
adc
pusha
jno
cltd
or
mov
inc
lock
arpl
lret
sti
xor
mov
mov
shlb
ret
in
push
mov
push
cmpsl
sahf
push
std
lret
sbb
in
rcrb
mov
sub
mov
jle
cmp
cmp
push
js
mov
mov
inc
ljmp
jno
sub
jo
dec
jge
xor
mov
push
sbb
stc
sbbb
adc
addr16
push
mov
js
pop
or
jl
or
cmp
fisubs
mov
or
enter
sbb
push
or
jnp
jne
ja
xchg
cmc
lock
adc
mov
mov
add
or
inc
shlb
outsb
mov
adc
sbb
lcall
sub
rcll
loope
sub
jge
and
rclb
roll
inc
cmpsl
loope
pop
nop
inc
jne
cmpsb
rorl
xchg
pushf
daa
lahf
inc
xchg
loop
loop
cmp
ror
int3
sub
das
out
jbe
pop
mov
and
add
mov
hlt
sbb
jbe
sub
mov
enter
fistpll
jbe
dec
ds
mov
clc
cmp
mov
leave
pop
adc
leave
rcrl
xchg
je
daa
and
cmpsb
xor
in
cmp
inc
mov
std
mov
gs
aaa
adc
ret
cmp
fistps
inc
sub
mov
xchg
lahf
mov
push
or
loop
lcall
mov
pop
adc
jno
dec
ss
jmp
sti
sti
in
xor
sbb
loopnew
adc
push
add
mov
pushf
add
in
test
sub
xchg
dec
test
jo
cmp
mov
scas
popa
inc
lahf
push
pop
cmpsb
stos
ret
stc
in
outsl
inc
jge
inc
cmpsl
and
adc
xchg
lods
fdivrl
ja
out
dec
lahf
mov
pop
les
pop
mov
xlat
pop
adc
sub
dec
out
xor
stc
lods
inc
ds
mov
std
leave
lahf
outsl
imul
daa
push
push
xor
addr16
jne
repz
out
jmp
jne
dec
jp
or
xlat
or
adc
inc
adc
and
fistpl
mov
lea
adc
cwtl
mov
enter
mov
aas
loop
into
sbb
mov
in
inc
push
sahf
mov
sbb
aaa
fildl
jo
inc
idiv
xor
gs
sub
xlat
ror
cmp
mov
inc
xbegin
int
lahf
mov
scas
push
outsb
aam
aaa
lea
push
js
fwait
iret
xor
add
cwtl
xchg
mov
mov
nop
cmpsl
sub
inc
adc
dec
insl
decl
sbb
fcmovnbe
sbb
cmp
test
mov
pop
cmp
ljmp
ljmp
mov
push
jge
dec
hlt
in
adc
jns
addr16
mov
and
jg
adc
sub
jecxz
jo
xor
scas
roll
xchg
dec
std
pop
fnsave
mov
sarb
dec
cs
cmp
inc
shrl
pop
aam
in
clc
add
adc
and
push
dec
hlt
push
cmpsb
push
ss
add
jmp
mov
aam
subl
iret
test
adc
insl
xchg
test
adc
nop
adc
pushf
in
jl
jb
mull
sbb
shrb
scas
lea
bound
repz
xor
xor
repz
inc
lret
daa
mov
mov
prefetch
lea
sub
sub
mov
addr16
fnstsw
pop
daa
das
push
mov
fcomps
inc
push
loopne
push
sbb
out
sarl
in
push
adc
inc
sub
daa
and
pop
mov
add
es
mov
orb
jne
pop
mov
gs
jle
lcall
mov
int3
dec
push
scas
testb
sub
jno
cmp
outsb
ret
jecxz
gs
pop
push
cs
call
sbb
rcrl
push
xor
dec
xchg
stos
sbb
outsb
mov
lods
sbb
mov
scas
leave
dec
xchg
push
push
dec
cmp
jecxz
cmpsb
dec
rolb
scas
in
adc
inc
sti
inc
xor
mov
rcrl
and
fcmovbe
cld
insb
mov
ss
and
jb
mov
nop
popf
test
mov
popa
repnz
pop
mov
jb
push
pop
outsb
xor
cs
lea
xchg
jnp
gs
xchg
repnz
shll
inc
xor
pop
push
aaa
mov
ds
lret
aaa
and
mov
jg
or
addr16
scas
inc
dec
pop
jge
cltd
or
cs
cli
popa
mov
inc
pop
mov
jmp
in
fimull
pop
mov
cmpsl
mov
call
shrl
pop
and
adc
lret
movl
mov
fsubrs
jo
mov
cmc
cmp
xor
aas
dec
jo
dec
fcomp
arpl
xor
mov
in
cmpsb
add
in
adc
mov
mov
fwait
pop
ret
fcoml
inc
popf
lahf
stc
decb
inc
sub
fwait
and
loop
inc
add
pop
aam
xorb
filds
adc
or
cmpb
add
cmp
push
mov
inc
mov
sub
shlb
mov
adc
cmc
subb
out
xchg
xchg
je
cmc
cmc
addl
inc
ficomps
in
pop
and
std
mov
xor
in
out
push
mov
stos
fimull
and
arpl
sub
ficoms
fptan
lea
pushf
or
repz
adc
cmp
pusha
pop
mov
lahf
jnp
stos
push
aaa
test
cmp
inc
sbbl
ror
popf
jne
push
jnp
stos
in
idivl
sbb
xchg
mov
mov
lahf
lcall
xchg
adc
aas
xchg
movsb
sahf
mov
int3
std
jge
add
jbe
push
pop
insb
stos
dec
cmpsl
fwait
xor
loope
call
add
imul
add
xor
mov
pop
fists
addr16
add
sub
adc
or
jnp
mov
mov
fs
or
out
cwtl
sub
mov
push
addb
mov
stos
push
pop
inc
mov
bound
filds
inc
xchg
mov
sub
or
sbb
mov
pop
pop
ret
push
pop
jb
movsl
dec
fisttps
sub
add
cmp
mov
cltd
repnz
popf
bound
jo
aam
or
xchg
out
mov
pop
push
xchg
pop
mov
sbb
les
mov
dec
fidivl
push
out
or
test
mov
fadds
outsl
add
cmc
dec
cmpsl
ljmp
adc
jp
sbb
mov
je
mov
push
xchg
pushf
pusha
push
in
inc
push
add
gs
inc
pop
cmpsb
xchg
pop
cmp
mov
xchg
js
pop
fwait
mov
sub
ss
jle
dec
mov
jl
in
jecxz
sub
xchg
mov
sbb
bound
pop
insl
inc
and
jno
inc
frstor
sub
jmp
fiadds
jbe
mov
insl
sbbl
in
jmp
inc
loopne
fldenv
ret
clc
test
iret
test
scas
aad
cmp
xchg
in
mov
dec
loope
fsub
push
jl
mov
mov
sub
or
popa
push
mov
xor
lret
mov
cwtl
out
insb
xchg
andb
lods
dec
nop
movsb
div
or
insl
cltd
cmp
jge
test
aas
ja
les
lcall
push
dec
enter
movsl
iret
das
jnp
mov
mov
jae
std
lods
xchg
or
fisttpll
sbbl
dec
dec
mov
movb
movl
shrl
xchg
jl
js
popa
xchg
xchg
add
lcall
dec
in
imul
loopne
lret
ret
sbb
mov
jo
sub
xor
dec
or
movsl
subl
aas
divb
outsl
pop
mov
push
add
push
and
cmp
mov
mov
ljmp
daa
mov
ficoml
jge
xor
xor
cmc
repz
ror
add
lsl
cmp
xchg
or
adc
stos
fbstp
jle
in
fdivr
pop
mov
filds
into
sbb
sub
push
sbbl
push
mov
pop
sti
xor
inc
mov
repnz
shll
push
scas
rcrb
jl
roll
sub
fwait
imul
dec
lock
sbb
lret
icebp
in
and
addl
fs
and
lods
and
inc
sub
or
xchg
xor
cwtl
lret
xor
insl
sbbb
aaa
pop
sbb
inc
sti
cwtl
xor
gs
or
push
push
adc
and
test
nop
jbe
jb
dec
rcr
ret
pushf
movsl
test
int3
das
add
push
aad
pop
ljmp
cmp
or
in
push
or
mov
lds
jmp
jmp
in
push
mov
bnd
push
jmp
insb
pop
jae
adc
adc
mov
or
pop
int
popa
and
std
nop
sahf
ljmp
jbe
mov
dec
int
jns
outsb
clc
xor
dec
fcom
mov
xchg
insb
dec
mov
int3
movsl
ja
pop
js
pop
or
dec
roll
jp
je
sti
aam
int3
pop
shlb
cmpsb
repz
lahf
int
cmpsb
pop
rcl
pop
das
int3
add
push
ljmp
aas
iret
adc
sub
call
in
xchg
inc
push
sbbb
fsts
pop
xor
push
inc
mov
xchg
mov
cmc
sub
loope
mov
call
mov
pop
shl
hlt
aad
push
in
jge
out
icebp
fs
nop
jmp
mov
fwait
fwait
aas
sbb
adc
ficomps
std
inc
fs
scas
js
pop
mov
xchg
pop
mov
mov
shlb
or
jle
mov
mov
filds
jle
cld
or
or
xor
push
cs
aam
sbb
sti
stos
inc
dec
sbb
andb
cmc
dec
pop
ror
push
jl
xchg
dec
pop
mov
cli
mov
stos
or
shlb
and
leave
mov
mov
int
fstpl
jb
jbe
mov
mov
push
imul
sbb
xchg
push
in
mov
imul
sti
pop
xor
dec
addl
adc
in
mov
mov
cmp
mov
xor
sub
pmuludq
aam
pop
out
mov
call
lahf
or
fucomip
roll
jns
dec
mov
insb
xor
inc
mov
pop
adc
push
cmp
loopne
mov
mov
in
aam
adc
pop
enter
lods
pop
cmp
xlat
dec
movsl
stos
pop
jne
movl
popa
fidivl
push
das
add
filds
ljmp
lea
fwait
xchg
cmpsb
fsubr
jp
bound
icebp
pop
nop
lds
adc
fwait
shlb
out
jb
dec
xor
or
ja
test
mov
in
aad
addl
xchg
or
enter
mov
push
in
fidivrl
clc
in
je
mov
loope
jne
clc
push
cmp
imul
push
add
scas
adc
fidivs
sub
ss
icebp
cld
mov
addr16
pop
out
std
pop
ds
push
lahf
pop
dec
push
jmp
push
pop
xor
xlat
mov
or
repnz
or
xor
fldt
dec
das
adc
sbb
xor
mov
icebp
test
mov
daa
push
or
mov
mov
xchg
push
addb
and
dec
pop
adc
adc
or
bound
or
mov
cmpsb
push
jg
mov
fdivl
or
mov
inc
mov
mov
shlb
stos
push
xlat
jae
pop
inc
mov
lock
mov
lahf
das
sub
in
cld
bound
jae
pop
call
aad
mov
inc
pop
jle
imul
inc
sahf
sub
icebp
popa
push
mov
cmp
push
in
loopne
out
pop
pop
xchg
cmp
pop
out
aam
inc
nop
and
mov
stc
jg
mov
imul
mov
lea
pop
xor
aad
push
adc
adc
and
lret
loop
hlt
pop
cmpsl
push
mov
ds
lock
int3
cld
xor
mov
jle
movsb
aaa
jle
inc
dec
or
ret
call
mov
loope
mov
push
daa
pusha
xchg
icebp
mov
mov
push
mov
cmp
xor
mov
fmull
fidivrl
mov
test
dec
fcmovnb
in
ljmp
inc
sub
mov
mov
cmc
push
nop
jbe
in
xchg
jl
popf
pusha
adc
jmp
loopne,pn
ja
imul
push
sbb
fisubrl
xor
add
dec
mov
xchg
cli
pop
and
or
jnp
fisttpll
lds
mov
jg
mov
loop
mov
movsb
gs
popa
pop
lahf
rolb
outsb
push
insl
pusha
jne
add
or
notl
xchg
or
mov
scas
jno
xlat
jb
lret
push
jnp
jno
xchg
mov
and
imul
call
xor
cli
sub
jg
cmpps
pop
mov
insb
cmp
or
lods
inc
stos
loopne
mov
xor
arpl
aaa
xchg
pusha
loop
and
xchg
mov
add
adc
inc
pop
outsb
push
rorb
pop
xchg
mov
ret
xchg
mov
mov
inc
xor
aas
ss
bound
bound
aam
jl
in
andb
popf
aas
mov
jo
stos
cmpsl
aad
ror
test
inc
jb
dec
mov
mov
pop
pop
and
ja
fdivrl
push
jnp
loop
mov
jno
jmp
xor
or
mov
gs
sbb
mov
fldl
ret
mov
add
popf
xchg
mov
std
push
cmp
jecxz
add
or
gs
adc
sbbb
gs
sti
repnz
xchg
sti
mov
xchg
gs
mov
orl
scas
or
bound
push
andl
mov
popf
aas
in
into
xchg
lret
push
repnz
inc
addr16
sub
adc
repz
mov
jns
mov
fmuls
fbld
jg
pop
enter
mov
lods
inc
xor
and
stc
jb
sbb
stc
repz
out
pushf
jb
test
stc
dec
pop
mov
hlt
lahf
xor
loop
lret
pushf
xchg
std
outsb
in
pushf
xchg
je
push
sbb
enter
ret
mov
pop
pusha
and
pusha
push
int3
lea
xchg
adc
pushw
push
das
sbb
mov
and
jge
xchg
xchg
imul
mov
ja
and
test
enter
insl
leave
add
and
cld
mov
dec
fisttpl
imulb
cmp
cwtl
in
add
inc
imul
aad
jns
pop
jp
or
inc
sarl
loopne
cmp
xor
cmp
enter
pop
mov
push
repz
sbb
icebp
imul
xchg
xor
pop
mov
in
xorb
xor
mov
push
movsl
add
jns
js
add
in
xchg
xor
loop
add
jle
cwtl
leave
sbb
inc
mov
push
shlb
and
mov
inc
ss
inc
je
outsl
mov
cmpsl
sbb
mov
add
pushf
lret
in
mov
mov
ds
push
test
dec
mov
mov
or
pop
xor
mov
push
cltd
into
push
jae
lods
dec
lods
fdivrl
sbb
ret
popf
stos
sub
in
ja
fimuls
xchg
add
pop
add
daa
lds
in
sub
scas
mov
add
andb
loop
push
sti
loopne
add
jns
cmp
xchg
fdivs
sub
mov
adc
cmp
scas
jo
movsl
into
repz
into
and
sub
test
sbb
mov
jbe
jo
mov
cltd
add
xchg
test
in
sub
fwait
jae
loope
out
gs
insl
bound
adc
add
das
repz
bound
xor
int3
adc
push
sarl
cmp
and
mov
lods
pop
sbb
dec
stc
in
mov
in
negl
fdivp
adc
test
jo
add
adc
js
stc
rcrb
push
test
xchg
aad
jle,pn
fcomps
lcall
push
repnz
sbb
or
sub
dec
sbb
into
jle
pop
sub
mov
pop
das
js
sahf
stos
cmp
hlt
fdivrp
dec
add
pop
loop
mov
adc
xor
pop
popa
test
and
cmp
aas
ljmp
push
jl
sub
push
mov
adc
enter
cmp
ss
cmp
fstpt
fisubs
ror
into
xor
scas
in
out
adc
push
pop
sti
xor
pop
mov
or
dec
mov
sar
dec
adcl
push
sbb
imul
mov
rolb
enter
xchg
cmpsl
jbe
sub
lea
sbb
sti
mov
subb
aad
les
subb
inc
and
inc
pusha
push
outsl
shlb
arpl
daa
leave
jecxz
daa
call
enter
lret
setb
test
ret
cmp
adc
pop
xchg
aam
xor
gs
xchg
inc
popa
test
pop
rolb
jno
jl
fildl
or
sbb
lock
pop
inc
dec
es
add
ds
sbb
mov
xor
pop
rcrb
or
leave
repz
setp
adc
mov
loope
xchg
out
pop
sbb
sbb
mov
adc
inc
jle
popa
push
cs
pop
aad
sbbl
sub
sahf
rcrb
in
fwait
xor
lahf
pop
dec
aam
push
cltd
and
and
bound
fistps
and
mov
push
nop
mov
xor
push
add
xchg
inc
and
jg
lods
subb
mov
call
dec
cmp
lods
aam
inc
inc
ljmp
icebp
mov
jl
ljmp
les
mov
stos
push
movsl
imul
cltd
scas
arpl
cmpb
and
shll
movsl
xor
push
insl
jno
loope
pusha
cwtl
loopne
fs
jns
push
mov
scas
jge
cmpsb
inc
ret
cmp
inc
loop
adc
dec
sub
inc
js
icebp
inc
fdivp
add
fmuls
dec
sub
cmpb
in
fbld
ss
inc
pop
add
xchg
in
jmp
inc
add
lcall
outsb
cmc
sbb
push
cmpsl
test
stc
dec
mov
icebp
lea
adc
xor
xor
call
and
out
lods
sub
ljmp
xor
jge
xlat
aad
mov
movsb
sbb
jo
fimull
dec
push
testb
movsl
mov
adcb
dec
jg
mov
inc
mov
dec
add
jo
sbb
icebp
popf
dec
sbb
icebp
mov
repz
imul
sti
stos
pop
mov
mov
loope
pop
inc
ds
ljmp
push
jmp
push
jno
test
add
inc
sub
test
cli
int
xor
gs
push
jle
pop
xor
jmp
stos
icebp
xor
add
mov
sbb
insl
loopne
cli
lds
sahf
in
push
fs
popf
out
mov
test
and
addr16
stos
add
in
adc
and
inc
lea
lock
ret
loop
sbb
mov
stc
push
cs
adc
imul
add
jle
scas
clc
mov
ret
sbb
mov
xor
lar
mov
adc
iret
or
pop
add
sub
inc
daa
enter
popa
jge
ja
lods
test
add
or
test
mov
jecxz
sbb
mov
popa
movsb
sbb
popf
lods
or
or
or
and
dec
lock
cld
scas
push
int3
mov
sub
mov
movsb
add
stc
fidivs
xorb
insl
jecxz
mov
sbb
ja
lahf
faddl
add
imul
xchg
movsb
or
mov
and
fadd
cmp
loopne
inc
mov
adc
sahf
xchg
sahf
inc
fsub
enter
xchg
dec
andb
xchg
les
repnz
xor
scas
mov
in
xor
pop
stos
pushf
jo
dec
dec
gs
pop
stos
rcr
fs
pop
jg
mov
ss
cmp
adc
outsl
mov
or
les
imul
mov
or
mov
in
sbb
scas
lahf
pop
pop
mov
adc
repnz
dec
push
ds
ret
mov
and
enter
lods
sub
push
negb
xor
add
sub
loopne
fldl
int
sub
pop
push
call
jmp
pop
sub
rolb
push
insb
pop
mov
out
xor
sub
add
pusha
xor
outsb
into
adc
xchg
mov
test
les
sub
push
inc
jb
mov
mov
pop
mov
pop
pop
sbb
lds
mov
andb
cwtl
iret
fmul
pop
hlt
test
call
inc
in
pushf
test
insb
add
push
inc
lret
jmp
das
inc
cmp
jnp
lods
adc
test
movsl
or
pop
lret
cmc
push
test
push
push
or
sub
lcall
mov
mov
out
jmp
xlat
jl
std
ret
int
or
xchg
stos
push
and
push
dec
xchg
xchg
icebp
inc
cltd
bound
adc
in
out
push
ret
sub
sbb
xor
mov
xor
mov
fisubrs
bts
test
movsl
cmp
add
sbb
insb
cwtl
icebp
adc
sbb
ljmp
mov
sub
out
cmpsl
jbe
fstl
cs
lahf
jp
cli
and
xchg
les
add
stos
sbb
sbb
push
lods
insb
arpl
lahf
xor
fdivrp
inc
jne
popa
fisttps
sbb
rol
iret
jge
fldl2e
adc
add
mov
or
les
fcmovne
in
mov
flds
bound
sub
pop
daa
push
mov
xacquire
mull
outsb
xor
insb
es
xchg
sub
adc
pop
hlt
ret
dec
jmp
xor
stos
pusha
sahf
test
stos
dec
pop
mov
push
and
jp
daa
ljmp
pop
xor
push
jg
fnstsw
mov
cmp
inc
mov
out
xor
add
push
cmp
repz
mov
or
inc
shlb
ret
jb
leave
mov
fistps
push
data16
sbb
ret
add
imulb
loope
sbb
jns
xor
cwtl
fwait
popf
rclb
push
cmpb
xor
mov
in
jo
pop
xchg
jbe
aaa
mov
mov
pop
repz
xor
push
rorb
int
rcr
mov
adc
rorb
mov
push
lods
push
xchg
shl
out
jle
sbb
add
bound
sbb
loop
loope
mov
stos
push
and
fcomps
call
lea
xor
cmc
lcall
cli
insb
fwait
loop
movsl
cmp
push
mov
mov
adc
fidivrl
movsb
pop
jecxz
out
sahf
mov
xchg
or
or
xchg
movntps
ja
std
fs
push
xchg
sbb
gs
mov
mov
adc
adc
lods
rorb
mov
in
pusha
adc
fcomp
pop
ljmp
xrelease
cmp
lods
das
and
jae
lret
iret
xchg
test
mov
jecxz
cmp
mov
xor
and
rcl
lea
loop
cmp
ljmp
iret
sbb
leave
sar
repnz
mov
movsl
ret
leave
dec
xor
add
dec
das
push
ljmp
cmp
pop
and
sub
xchg
sarl
outsb
into
fists
outsb
jns
xchg
or
incl
sbb
xchg
pop
orl
in
cwtl
subl
lret
popa
cmp
sbb
mov
pop
popa
adcb
jg
addb
hlt
jne
mov
jmp
ja
xchg
mov
std
push
test
lds
in
add
rclb
leave
lahf
mov
lock
fbstp
mov
or
jmp
enter
mov
push
in
imul
cltd
dec
push
mov
adc
jae
inc
sbbl
push
cltd
adc
add
lcall
test
aaa
cli
ss
jmp
inc
mov
and
mov
sub
mov
mov
or
cltd
rorb
hlt
xor
loopne
xchg
pushf
xchg
mov
and
xor
inc
mov
push
fnstsw
addb
pop
incb
jg
insb
dec
into
adc
dec
adc
aaa
sbb
jge
cmp
rcr
mov
xlat
and
int3
xchg
jnp
xchg
sarb
ss
cmp
shr
inc
insl
push
pop
adcl
push
xlat
push
push
pop
mov
test
jo
mov
cwtl
jmp
xchg
idiv
out
adc
and
leave
adc
dec
cmp
je
lods
xor
pop
js
ss
scas
inc
mov
jbe
aad
xor
subl
jbe
sub
or
mov
push
jns
lahf
push
cwtl
xchg
mov
push
push
mov
sub
pop
inc
xchg
jbe
xor
pop
sbb
push
test
aas
or
aam
and
ljmp
dec
add
enter
jns
push
mov
and
jnp
js
xor
add
add
out
push
mov
mov
push
lea
test
pop
arpl
and
movhps
mov
pop
ffreep
roll
inc
mov
mov
push
jmp
and
lock
mov
adc
into
jmp
adc
xchg
sub
repz
insl
clc
jno
adcl
test
push
adc
test
dec
iret
je
inc
inc
xchg
jmp
push
xchg
jp
push
loope
pop
popa
fdivrl
scas
or
sbb
pop
and
adc
out
adc
xor
sbb
mov
lock
mov
insl
xor
sarl
and
es
ljmp
dec
outsb
and
mov
nop
and
fwait
mov
addb
lock
jbe
mov
mov
sub
int
ss
push
test
xor
xchg
data16
jno
lahf
repnz
or
test
ret
fistps
push
insb
push
fisubrs
nop
sbb
inc
fsts
adc
pop
mov
dec
sti
pop
cmpsl
daa
xchg
enter
aaa
dec
add
xor
cli
dec
dec
cld
in
les
lahf
add
xchg
mov
aaa
popa
mov
fdivrs
gs
mov
jmp
leave
cmp
xor
mov
jbe
scas
adc
fwait
pop
and
inc
aam
mov
testb
fidivrl
scas
push
xor
mov
sub
mov
repz
mov
and
xor
inc
fistl
xchg
enter
out
out
push
or
fucomip
mov
es
fs
enter
mov
push
dec
cltd
enter
dec
lods
push
xchg
lcall
popa
cmc
lods
pusha
fdiv
mov
dec
mov
mov
mov
leave
in
mov
inc
sub
sahf
arpl
xor
jle
and
cltd
aas
push
rclb
or
push
add
fcmove
cmp
int
out
pop
dec
ljmp
test
inc
cmc
cmpsl
sarl
xchg
stos
les
cmp
sbb
jb
js
sub
inc
push
fyl2xp1
adc
xchg
aas
iret
pop
sub
cs
test
pop
sub
js
shrb
jp
push
push
iret
mov
xchg
test
iret
ja
fcmovne
push
ficoms
mov
lods
dec
or
dec
adc
xchg
jne
leave
inc
or
pop
push
push
adc
xor
push
data16
insl
dec
adc
pop
jmp
or
call
push
mov
lret
jp
popa
jne
sub
inc
nop
and
ja
dec
ds
je
jbe
cmp
rcr
xchg
subl
and
je
fldln2
out
ffreep
adc
and
cmc
cli
inc
test
sbb
cmp
pop
lcall
mov
testb
sub
in
lret
clc
nop
into
push
or
fistps
push
outsb
push
fldlg2
out
lcall
mov
arpl
lcall
and
lahf
jb
inc
lods
dec
add
jns
rcl
jne
push
mov
shll
movsl
orb
std
lret
jp
lock
xor
aaa
or
jle
and
jns
add
mov
xchg
push
pop
add
push
cmp
inc
push
cmp
push
scas
push
jae
pop
mov
hlt
xor
ret
or
ret
fwait
lcall
mov
das
filds
cmpsl
adc
mov
jbe,pn
xor
inc
cli
cmp
fidivrl
scas
ret
mov
pusha
xchg
stos
pop
and
fcmove
adc
mov
ss
stc
xor
add
cmc
aad
imul
mov
xchg
pop
loop
mov
mov
adc
jns
aaa
mov
mov
pop
insb
push
add
call
jo
and
mov
outsl
int
add
mov
mov
shrb
mov
dec
movsb
sbb
and
popa
out
call
mov
xchg
fs
or
in
sti
pop
adc
dec
sti
es
ds
into
test
push
insb
pop
cli
faddp
subl
xchg
lea
jl
inc
mov
repnz
cmp
into
xlat
xchg
pop
jne
mov
mov
mov
das
push
mov
cli
jb
adc
lods
lahf
ficoms
stos
cmpl
sahf
lret
outsb
jl
fldcw
outsl
insl
out
movsl
inc
jno
add
fs
negb
push
inc
mov
jb
inc
push
pop
mov
adc
adc
andb
pop
mov
imul
jecxz
aam
xor
rcrb
xchg
pop
mov
dec
cmp
aad
push
pcmpgtw
subb
sub
fiaddl
inc
pop
sbb
dec
mov
test
adc
xor
xor
sbb
cmp
loopne
mov
xchg
rol
icebp
test
mov
pop
idivl
cmp
scas
in
out
jb
pop
rolb
lret
je
or
cmpsl
repnz
pop
jmp
jle
pop
cmp
mov
xor
je
addb
mov
loop
cmpsb
stc
push
and
sub
push
jp
lea
pop
out
stos
add
out
lock
inc
push
jmp
loop
movb
sub
fsubrl
push
call
test
sub
cmp
xor
movsl
hlt
test
pushf
in
push
arpl
popa
or
jne
mov
icebp
or
jl,pn
fidivrl
fstl
add
or
push
outsb
sub
mov
mov
jns
decl
imul
scas
lret
pop
mov
pusha
dec
fcoms
dec
nop
cmpsb
xchg
sbb
fimuls
fcoml
inc
pop
int3
in
lret
decl
pusha
or
out
cld
dec
ljmp
xchg
xor
add
adc
mov
xchg
and
das
hlt
jp
and
pop
sbb
adc
push
adc
call
adc
bound
addr16
into
js
lods
mov
cwtl
or
xor
cmp
mov
fsubrl
lds
testb
lods
in
data16
inc
fwait
jnp
in
repnz
add
aad
in
mov
xchg
cmp
adc
test
mov
stc
notb
test
dec
insl
sub
inc
ja
mov
inc
int3
pop
adc
push
clc
push
mov
fmul
sub
push
xor
sbb
idiv
jecxz
stos
das
sbb
sub
mov
into
dec
insl
lahf
push
fistps
daa
xlat
loop
xor
test
mov
stos
dec
imulb
xor
fsubrs
out
pop
xor
dec
or
int3
push
in
and
inc
pop
out
fistl
inc
sub
fwait
out
xor
mov
jb
ds
pop
xchg
out
pop
dec
fisttps
jo
sub
rcrl
hlt
sub
inc
andb
inc
ffree
ja
ljmp
ret
cmpsb
ja
xchg
dec
push
sarb
cmp
add
add
aad
jbe
jmp
dec
pop
or
inc
aam
outsl
push
xlat
xchg
push
js
pop
pop
dec
mov
mov
aad
xor
push
jg
loop
mov
add
mov
sahf
mov
cmp
mov
dec
test
xor
pop
add
xchg
mov
and
dec
push
adc
jge
sbb
mov
or
scas
mov
dec
xchg
push
insb
push
loope
dec
jno
mov
mov
into
mov
out
jns
pop
pop
push
pop
adc
pop
sub
sub
lea
cltd
sub
push
jo
sarb
jo
mov
cmc
icebp
mov
aad
pop
aas
sbb
mov
xchg
cmc
mov
ret
fdivl
add
sbb
mov
lret
sbb
in
lods
mov
dec
cmp
scas
aam
pop
insl
push
add
sbb
movsb
movsl
jbe
inc
or
push
rcl
iret
dec
pusha
addr16
sub
lods
rcll
cmp
cmp
mov
ret
cli
sub
sub
fists
out
clc
inc
inc
jge
inc
roll
xchg
xor
popf
bnd
daa
jnp
ds
inc
or
bound
fwait
insb
insb
xchg
add
push
adc
subb
jne
out
jmp
out
decl
or
decl
aad
lea
pop
xor
cli
xchg
inc
jnp
push
jmp
mov
and
fwait
pop
jnp
inc
jbe
sahf
xchg
sub
add
sbb
adc
in
aas
pop
sbb
stos
icebp
cmp
xchg
add
pop
and
jmp
sub
pop
inc
xchg
addr16
add
jns
xor
shll
mov
cmp
or
sub
lods
mov
inc
cld
pusha
shrb
xchg
xor
es
adc
cmc
test
fdivrs
or
inc
mov
add
mov
jmp
cmp
out
iret
xchg
dec
shrl
aas
lods
add
test
fsubl
test
movlps
jl
nop
dec
in
mov
ret
dec
daa
mov
inc
ljmp
ss
xor
in
shll
outsb
jge
jecxz
aad
aam
mov
andb
inc
movsb
dec
dec
jmp
lcall
jnp
sahf
shl
push
ljmp
sub
sbb
add
xor
inc
movsb
lret
lods
les
gs
jne
mov
in
inc
mov
int
aad
sub
test
imul
lods
jae
lods
sub
pop
xor
mov
shlb
xor
mov
movl
fyl2xp1
pop
outsl
pop
adc
xchg
sub
sub
jp
in
push
mov
cltd
out
popa
in
mov
ds
ret
push
fs
cltd
xlat
mov
sub
ficoml
out
cmp
je
xchg
aad
mov
mov
push
lret
test
rclb
pop
ds
mov
fisubs
jge
or
jge
mov
out
mov
and
jp
in
mov
and
leave
push
add
clc
rcrb
push
and
test
in
fldcw
xchg
js
dec
push
pop
out
mov
push
sahf
jae
push
movb
call
imul
in
push
sbb
aam
mov
aad
mov
nop
lock
out
lods
les
or
int
mov
lret
dec
and
pusha
fidivs
out
lret
cmp
jecxz
call
xchg
jecxz
dec
mov
jge
sbb
cmp
sub
scas
fisubl
addr16
ss
mov
ja
aam
push
cmp
jne
setge
inc
pop
insl
ljmp
dec
fdiv
testl
adcl
loope
in
push
ret
jle
addr16
jecxz
aas
stc
or
jns
xor
xchg
js
ljmp
mov
mull
andl
inc
pop
cld
mov
xor
getsec
in
popf
push
jl
fcmovne
gs
int3
cmp
les
insb
pop
cmp
add
inc
ret
int3
out
cs
test
repz
xchg
jmp
shll
sub
or
mov
rclb
xchg
xchg
daa
orb
xchg
fbstp
pop
inc
and
movsb
jmp
inc
inc
std
insb
pop
adc
jecxz
lds
pop
out
aad
and
stos
adc
cmp
sub
sub
std
cmp
mov
aaa
pop
sub
sbb
int
adc
pop
stos
jno
out
jge
clc
cmp
ljmp
sbb
mov
pop
sbb
mov
jb
cmc
imul
cli
and
rclb
push
mov
loope
push
add
dec
mov
subl
jle
or
mov
xchg
cltd
sbb
loope
mov
and
cmpsb
clc
sub
pop
jbe
push
insb
dec
jno
add
ja
adc
popa
fstps
arpl
jmp
sub
orb
pop
je
push
addr16
jnp
fnstcw
pop
int3
cs
lods
xchg
scas
lods
xor
xchg
bound
icebp
outsl
hlt
arpl
inc
adc
jns
pop
and
cmp
test
push
push
or
stos
ljmp
push
jo
sbb
repnz
push
shrl
xchg
or
rcrb
inc
lret
inc
push
daa
push
sbb
mov
push
ljmp
in
push
lcall
loope
pop
cmc
xor
push
inc
jp
adc
sbb
aam
jne
test
lods
fisubs
stc
add
loopne
cmp
cmp
in
in
mov
outsl
aaa
and
into
stc
push
dec
jg
fucomp
and
imulb
push
xchg
test
pop
shlb
lahf
bound
pop
xor
jmp
pop
hlt
js
aam
es
xchg
subl
aas
in
pop
pop
ss
imul
mov
xor
shl
adc
jne
fisttps
hlt
aas
jle
push
in
stos
add
nop
mov
ret
lret
iret
add
xor
stos
enter
test
push
mov
mov
adc
int
pushf
sbb
data16
les
cltd
sub
mov
mov
or
mov
pop
pop
jnp
fldl2e
xchg
cmpsb
cwtl
repnz
mov
sahf
out
mov
into
xchg
mov
lcall
mov
and
adc
faddp
loopne
sti
lea
mov
cmp
scas
aad
dec
in
xor
pop
cmp
mov
in
aaa
dec
rcrb
cmpl
add
jae
stc
loop
mov
cmp
repnz
fwait
push
pusha
cs
es
test
mov
ficoms
xchg
fnstsw
into
pop
shrb
fnstsw
cli
inc
jae
and
jnp
inc
mov
jg
push
mov
mov
push
jle
pop
insl
cmpb
add
dec
sub
inc
fbstp
push
dec
sar
inc
pushf
test
or
xchg
clc
cmp
jl
out
jnp
mov
inc
sub
push
mov
idivb
rclb
cli
subl
push
jbe
pop
gs
push
push
cmc
dec
es
cmpsb
dec
out
sub
ret
pop
les
sbb
rcrl
jecxz
pop
fcompl
push
rcr
les
je
add
rcr
adc
loop
shll
jnp
mov
imul
rorb
jp
push
aaa
mov
enter
mov
xor
test
lret
or
inc
cmp
out
mov
inc
mov
pop
fstpl
or
and
mov
add
jp
xchg
test
cmp
inc
pop
pop
cmp
mov
scas
fcoml
push
leave
addr16
rcrb
aas
mov
div
inc
mov
repz
dec
cld
and
push
cltd
xchg
cli
stc
loopne
pop
aas
stc
loope
push
cmc
cli
fstpt
hlt
pop
push
jo
mov
add
jge
or
xor
and
pop
pop
leave
sub
test
out
bound
mov
mov
arpl
lods
inc
inc
dec
push
dec
gs
fsubl
sbb
add
lahf
fcompl
xorl
add
pop
jp
dec
mov
addr16
mov
fucomi
outsb
dec
popl
andl
arpl
lea
inc
lock
inc
sub
cs
mov
mov
sub
cmp
adc
fnsave
sbb
imul
outsl
or
pusha
sub
xor
cmp
daa
dec
scas
mov
shlb
leave
in
sub
cmp
loopne
ds
into
ja
repnz
scas
xchg
mov
push
sub
sub
std
jns
sub
scas
out
mov
sub
add
pop
add
jns
mov
stos
pop
mov
or
mov
jb
push
xchg
pop
adc
jns
mov
fisubl
lea
rcrl
int
cmp
outsb
mov
das
dec
xor
movsb
fs
xor
xor
xchg
daa
cmp
sbbb
inc
leave
enter
sbb
mov
xor
and
jp
and
stos
shrl
cltd
rclb
std
cltd
lret
inc
int
cmp
and
ret
outsl
pop
mov
ds
xchg
aam
pop
aas
jmp
fsubrl
int3
xchg
scas
xchg
xor
rorb
movsb
cld
lods
lods
stos
xor
push
jno
jae
xor
hlt
shl
cli
cwtl
mov
imul
push
cmpsb
aad
xor
nop
push
dec
das
mov
lods
push
daa
dec
cs
and
push
pop
add
int
lods
xlat
adc
pushf
adc
xor
insl
mov
jecxz
pop
dec
cmp
sub
stc
xchg
in
iret
je
das
or
mov
add
pop
movsl
fstl
or
out
popa
jae
cli
pop
adc
lcall
adc
lock
sub
loop,pn
xor
cs
mov
insl
xchg
faddl
push
in
fstl
js
inc
leave
xchg
xor
int3
or
pop
cmp
xchg
or
mov
or
test
insb
out
sub
adc
jecxz
ret
out
jge
pop
cltd
mov
imul
sbb
push
xchg
popa
loopne
imul
in
mov
cmpsb
lea
sbb
adcb
repz
jnp
dec
xchg
dec
stos
xchg
mov
cli
aaa
add
xchg
adc
push
mov
flds
jb
push
add
movsl
xor
lods
jge
cmp
cmp
jle
cs
xchg
stos
mov
xor
dec
adc
rcrl
arpl
inc
ja
and
jmp
jmp
push
sub
movsb
imul
sub
push
push
call
daa
pop
cwtl
into
or
jne
push
sqrtps
arpl
popa
in
scas
push
stc
pop
bound
jp
imul
mov
add
dec
cmp
cli
popl
dec
popf
push
xlat
and
push
xchg
fwait
sarb
cmp
inc
or
cmp
lea
ja
int3
enter
leave
outsl
add
dec
addr16
or
insb
and
popf
and
cli
rcrl
int3
lea
lds
lcall
rol
pop
inc
test
es
mov
cld
lret
or
push
testl
pop
adc
dec
lds
dec
inc
je
mov
sar
repnz
mov
xchg
insl
ffreep
sub
jl
loop
mov
or
xor
jbe
push
les
push
mov
scas
xchg
outsl
push
jne
dec
or
xor
mov
xchg
rcll
ret
scas
xchg
and
xor
testb
mov
cmp
add
cmpsl
xchg
scas
scas
sub
cmp
scas
adc
inc
test
pop
xchg
pop
insl
mov
mov
xchg
repnz
sub
push
push
jl
cli
sbb
xchg
cmp
enter
jbe,pn
add
scas
or
js
cld
mov
push
mov
icebp
push
test
gs
jmp
push
jae
jb
jne
loopne
lret
daa
pop
popf
adcb
xor
xchg
jnp
jp
adc
cltd
push
sbb
je
mov
pop
stc
neg
lahf
jg
out
repnz
outsb
push
dec
bsf
xor
cmp
and
push
inc
cltd
insl
or
jb
mov
push
push
ljmp
ljmp
or
inc
ret
mov
push
or
mov
in
add
arpl
cmp
inc
call
out
aaa
lods
sub
dec
mov
add
mov
clc
mov
insb
inc
sbb
ret
ja
push
sbb
push
ja
push
mov
mov
cmp
aad
dec
push
das
sbb
sti
outsl
mov
mov
imul
lret
pop
add
sbb
sub
inc
push
outsl
mov
mov
dec
cltd
int3
push
shll
and
test
hlt
add
inc
cmp
rol
dec
push
cmpsl
inc
jmp
fcomip
loopne
mov
xor
sbb
jmp
dec
sbb
jo
mov
mov
jg
inc
iret
xchg
cmpsb
fcmovne
cltd
roll
inc
push
add
dec
sub
xor
jmp
or
sbb
jnp
push
pop
aam
dec
adc
imul
xchg
out
sti
mov
sub
mov
mov
shll
adc
pop
cld
push
push
and
pop
outsl
add
shll
mov
and
cmp
jo
cmp
imul
shrb
clc
shlb
push
sbb
iret
les
aas
xchg
ret
add
add
pop
mov
mov
inc
aaa
adc
sub
test
cli
stos
lcall
or
inc
xchg
jnp
inc
mov
sbb
sbb
push
popf
sarl
mov
xor
jo
mov
cmc
fldz
xchg
push
divl
gs
icebp
sub
pop
daa
and
aaa
mov
outsl
push
and
mov
xor
mov
mov
mov
mov
dec
and
adc
adcb
pop
mov
out
mov
icebp
mov
fidivl
jge
addb
arpl
add
xor
fwait
pop
mov
add
inc
outsl
popa
insb
dec
cmp
sahf
popa
or
adc
inc
push
push
xor
shrl
pop
xchg
dec
lret
sbb
cmp
sub
test
xchg
jp
jnp
insl
shrb
add
adc
or
cld
pop
into
or
xor
das
jne
stc
out
ljmp
sti
mov
mov
dec
fadd
adc
nop
repz
cli
pop
and
add
pop
and
mov
ja
and
mov
dec
dec
ret
das
pop
add
push
add
add
xor
ficoml
test
sub
inc
dec
mov
cmp
sub
test
push
jnp
icebp
or
lcall
outsl
call
mov
jb
xchg
testl
add
adc
add
rolb
out
stos
sub
in
vmovups
mov
fimuls
jl
jne
jo
push
stos
sarl
lret
adc
pusha
jnp
mov
mov
int3
pop
or
aad
popa
insb
cmp
add
dec
cmp
mov
sahf
inc
popf
dec
xchg
push
int
loope
adc
addl
pop
add
and
pushf
dec
push
gs
subl
sbbl
and
xor
jl
jb
lcall
fcmove
imul
sub
add
sub
xor
xor
ret
movsb
rcll
inc
xorb
cwtl
stos
pushl
das
cmp
mov
mov
imul
negb
mov
fistpl
jbe
pop
js
or
mov
pop
pop
ret
and
shlb
cmp
sbb
push
mov
sbb
xor
fimull
ljmp
and
pusha
push
and
ds
or
stos
mov
cmp
mov
mov
sub
jo
adc
push
das
in
icebp
aaa
xchg
inc
and
popf
dec
sub
call
xor
out
aas
jne
cwtl
pop
sbb
pusha
jg
push
adc
icebp
dec
adcb
arpl
popl
or
pop
stos
sbb
into
imul
das
fldl2t
mov
pop
pop
pop
fdivl
push
jg
pusha
jb
test
and
int
ret
leave
sbb
sub
out
push
int
mov
sub
int3
pusha
cli
ficoms
xor
addr16
aaa
xchg
lods
mov
push
fistpll
mov
in
or
shl
xchg
mov
xchg
rcl
mov
mov
arpl
jecxz
xchg
sub
sbb
imul
and
mov
sub
ficoms
mov
cwtl
rolb
jae
push
dec
cmp
insb
jnp
push
fbstp
pushf
iret
scas
test
sti
lret
push
imul
loop
out
mov
inc
push
dec
cmc
loopne
jb
lock
lret
cmp
mov
inc
fcompl
lods
adc
fisttps
xlat
dec
jne
mov
mov
mov
jo
js
mov
mov
in
in
pop
adc
pop
sahf
xchg
arpl
mov
out
inc
add
test
fnstcw
xchg
fdivr
jbe
loope
mov
lret
into
stc
mov
aas
out
sbb
jnp
or
bound
push
and
sub
mov
jge
rclb
mov
xchg
js
loope
popf
ss
aas
push
addr16
xchg
sbb
xchg
or
cmp
cmp
arpl
mov
or
je
add
xlat
xchg
inc
jns
stos
push
adc
mov
fcoml
insb
cmp
and
call
mov
mov
out
popa
push
xor
cmp
mov
call
jne
insl
incb
mov
dec
sub
mov
or
xor
mov
cmp
jne
lcall
pop
fldt
inc
outsb
mov
rol
popf
push
clc
xor
push
pop
cmp
xor
shll
imul
cmp
aad
inc
add
cmp
hlt
and
xchg
enter
or
pop
in
aam
js
mov
or
inc
test
cmp
jb
insl
arpl
jo
add
and
mov
adcl
icebp
out
icebp
out
push
sbb
mov
pop
mov
lret
ror
xor
pop
mov
xlat
dec
mov
or
xchg
add
popa
out
ret
jge
in
jecxz
cmp
out
inc
int3
cmpl
mov
or
push
repz
ffreep
xor
mull
or
into
es
lcall
xchg
das
add
xor
mov
jne
and
sbb
adc
bound
push
les
push
pop
ja
int
sarb
mov
shll
ds
shrb
fidivrl
int
xor
mov
mov
into
mov
ror
pop
cmp
rol
js
mov
xchg
xchg
es
out
fildll
cmp
popf
xchg
leave
fisubs
pop
xchg
push
out
out
sbb
cltd
xor
adc
inc
jb
cmp
adc
pop
out
hlt
pushf
or
fwait
lds
insl
out
arpl
fnstcw
dec
mov
les
and
sub
sub
mov
loope
das
inc
sbb
ret
cld
ljmp
icebp
mov
and
popf
daa
stos
xchg
inc
mov
lret
lret
cmp
fnstenv
test
or
mov
mov
sbb
mov
and
pop
mov
notl
imul
fidivrl
pop
xorb
movsb
inc
lret
xchg
fucom
xlat
sub
ret
xchg
ljmp
jmp
scas
xchg
ret
lds
jecxz
call
repnz
sbb
rorl
cmpsl
loop
sbb
lahf
dec
mov
rorb
and
rcrl
sahf
xor
cmp
sbb
lahf
fnstsw
jle
jo
cmp
mov
mov
out
xchg
xlat
push
imul
addl
xor
cmp
sbb
mov
inc
imul
out
mov
aam
push
test
dec
push
sbb
sbb
je
adc
adc
loope
add
test
sti
xlat
mov
test
mov
hlt
mov
stos
add
cmp
sbb
lea
dec
dec
lahf
xchg
inc
xor
cmc
jno
xchg
dec
ret
and
mov
inc
cmpsl
rclb
mov
andl
movsl
imul
sub
icebp
or
push
ljmp
jle
insl
cli
inc
mul
cltd
lahf
push
ja
int3
xchg
scas
fdivs
subb
lods
mov
sub
mov
adc
mov
bound
fistpl
addr16
push
jmp
lds
mov
cmp
outsb
mov
adc
jmp
jp
mov
cmpsl
ret
inc
xchg
or
push
pop
push
test
mov
scas
mov
pop
pop
div
into
rorb
lahf
fstl
jmp
int
imulb
or
mov
mov
ljmp
sub
xchg
push
clc
clc
sub
imul
out
sti
cli
repz
fwait
fwait
mov
mov
popa
sbb
sbb
leave
scas
fmul
jmp
scas
xor
or
gs
addr16
test
fdivrs
jp
pop
xchg
jecxz
mov
fidivrs
and
pop
or
lahf
ss
pop
lock
xor
cmp
dec
cmp
pushf
fistpll
inc
sbb
xor
adcb
shrb
test
push
movsb
subl
jge
rcr
in
jo
test
roll
xchg
add
popa
cmp
out
fwait
repnz
adc
shlb
mov
pop
mov
pop
mov
cltd
int
mov
cli
sbb
jmp
aad
repz
and
scas
outsl
ja
js
xchg
stc
in
int3
enter
xor
jl
lea
pusha
outsb
sub
pop
sub
shll
xor
cmp
cld
sbb
xchg
nop
leave
aas
insb
sbb
xor
jecxz
loope
test
pop
mov
out
lock
ljmp
push
xchg
imul
loope
mov
pop
pop
and
and
cld
adc
hlt
inc
xchg
inc
adc
cmp
inc
or
mov
xchg
or
rcrl
sbb
jo
mov
imul
jg
sub
popf
sub
das
test
mov
out
movsl
rclb
icebp
bound
adc
or
mov
orb
je
jbe
push
add
add
lret
lock
fucom
out
notb
popa
and
ja
js
cmp
rorb
sbb
jmp
loope
sub
cmp
sub
and
pushf
fsubrs
push
mov
and
icebp
rcrb
arpl
test
arpl
gs
mov
xlat
mov
dec
pop
cmp
sub
test
adc
jae
xlat
jo
mov
dec
mov
xchg
add
repz
adc
fbstp
mov
movsb
lcall
cmp
sbb
mov
cmp
mov
xchg
fnstsw
xchg
cmpsb
dec
push
hlt
ljmp
mov
adc
pop
cs
mov
jne
or
movsl
adc
aam
push
rorl
enter
stos
mov
inc
mov
and
inc
jns
xchg
imul
hlt
push
iret
add
dec
add
pop
les
xchg
out
sub
add
popa
test
mov
lods
cmpsb
mov
sbb
mov
fdivrl
sbbl
dec
enter
or
fldl
push
lock
lds
out
sysenter
pop
call
das
inc
sbb
std
inc
cld
mov
mov
cwtl
inc
loop
add
test
fs
cmp
jmp
imul
sub
das
out
imul
push
or
nop
testl
mov
scas
jmp
dec
xchg
sti
dec
push
adc
mov
fsubl
cmpsb
insl
dec
stc
adc
sub
xor
pop
mov
dec
dec
mov
cld
xchg
push
pushf
test
push
mov
fisubrl
jl
syscall
fstl
aad
andl
sub
lret
and
cmp
roll
dec
lds
sbb
pop
inc
mov
xchg
dec
or
loope,pt
repnz
shlb
std
sbb
jns
arpl
add
or
xchg
cmp
repnz
mov
jne
cmpl
mov
mov
xchg
bound
dec
cmpsl
repz
rclb
test
sbb
mov
push
xchg
add
call
imul
shrl
adc
xor
out
pop
or
popf
test
cmc
ss
add
mov
ficomps
fcmovnbe
sahf
into
mov
mov
aad
push
jecxz
push
outsl
orl
cmp
out
icebp
shll
sahf
lods
rcrb
scas
enter
das
icebp
aaa
xor
pop
add
inc
sbb
aaa
ds
cmc
sub
pop
jns
addb
pop
or
in
lcall
pop
andl
sub
and
sbb
dec
movsb
sahf
enter
mov
mov
or
mov
data16
mov
xor
sub
cmp
cmp
adc
setae
xor
adc
repz
std
xlat
inc
jae
dec
test
mov
push
lahf
xchg
xor
arpl
sar
dec
outsb
pushf
cmpsb
sbb
and
stc
mov
mov
mov
push
add
mov
dec
jns
std
cmp
jae
adc
aad
push
adc
dec
fwait
dec
ficompl
xchg
pop
and
inc
cmc
push
xchg
pusha
push
sbb
fsubr
sub
fnstenv
daa
push
sbb
cmpsl
mov
push
pop
cmp
sbb
jp
pop
jge
lcall
xchg
xchg
outsb
or
scas
or
cmpsl
ret
lcall
add
inc
cld
scas
dec
outsl
rolb
xchg
push
mov
mov
sub
cmpsb
adc
add
shlb
add
inc
test
add
mov
into
rol
dec
pop
ficoms
pop
inc
je
das
and
popa
sub
sbb
fidivrs
and
lods
mov
out
clc
lea
fs
popf
pop
ds
cmc
loope
inc
cmpsb
out
pop
lods
ja
push
push
add
scas
jle
gs
mov
and
orl
lods
jno
mov
adc
xchg
mov
orl
stos
aad
stos
mov
xchg
mov
mov
sub
mov
les
cld
bound
out
imul
or
inc
mov
mov
push
pop
lret
adc
xor
in
and
inc
mov
mov
das
in
sti
pop
jl
pop
test
sbb
mov
dec
enter
and
je
jp
ljmp
or
jecxz
lret
mov
sub
dec
test
imul
mov
out
jne
cmp
pop
mov
sbbl
ret
imul
or
pop
addr16
rcl
js
cwtl
mov
push
inc
xlat
ret
adc
pop
inc
jo
push
cmp
lock
pop
outsb
sub
lock
jecxz
mov
repnz
repnz
sbb
loopne
inc
sub
out
inc
popf
xchg
pop
sbbl
or
sub
mov
fwait
neg
std
lea
push
dec
sbb
ret
mov
fisttpl
push
repnz
jl
push
pop
outsb
and
mov
aad
sbb
dec
push
nop
mov
mov
jmp
mov
out
lcall
cmp
out
jmp
and
xlat
jmp
sbb
and
dec
mov
int3
mov
jg
fsubs
xchg
stos
sub
stos
call
or
xchg
jae
daa
daa
cmpsb
inc
clc
fcomip
cmp
mov
mov
adc
add
shrb
call
hlt
or
jo
cmc
push
idiv
shl
rcll
repz
mov
dec
pop
imul
and
cmp
mov
cltd
pop
lret
jae
push
sbb
inc
pushf
repz
in
mov
punpcklbw
clc
cmp
stos
mov
gs
adc
shlb
insl
pop
push
cmp
dec
mov
test
loope
mov
std
test
cmp
cmc
cmp
out
xor
aaa
cmp
ljmp
push
mov
cmpsb
jp
shlb
pop
lahf
dec
sub
xchg
mov
lcall
jno
ss
jg
int
mov
or
int
add
inc
mov
mov
inc
jnp
scas
and
cmp
imul
movsb
aaa
fdiv
pop
dec
xchg
out
mov
sub
imul
jb
sbb
idivl
lds
in
adc
popa
add
adc
dec
lcall
inc
pushf
add
or
jecxz
ret
scas
pop
rorb
dec
jg
add
xchg
sub
bound
addr16
jne
ret
ja
sub
push
cld
adc
sub
jb
loopew
test
je
rorb
in
mov
or
jle
mov
push
mov
sbb
cwtl
iret
sbb
xchg
or
jb
pop
enter
jb
mulb
xchg
ret
mov
lahf
xchg
mov
xlat
fwait
aas
insb
lea
lds
sbb
lcall
xchg
nop
fadds
es
jmp
sub
sarb
inc
push
pushf
and
push
fcoms
bound
cmpl
les
xchg
mov
push
iret
dec
mov
out
mov
mov
insl
inc
dec
ja
fsubp
sbb
hlt
mov
dec
and
addr16
add
sbb
push
xchg
add
out
addr16
dec
mov
cmp
stc
pop
push
sbb
push
adc
mov
pop
add
sbb
jb
adcb
pusha
outsl
or
inc
rcr
push
xor
mov
sub
ret
mov
out
cmc
pop
imul
imulb
ds
adc
mov
xor
insb
inc
add
jbe
sbb
sti
lahf
xchg
inc
out
pop
lea
mov
xor
mov
imul
paddb
jno
mov
mov
sub
sbb
cmp
xchg
jno
out
sub
xchg
js
pop
es
adc
mov
insl
ror
in
mov
rcrb
icebp
push
pop
sub
xchg
ret
mov
jnp
test
sub
hlt
fmul
bound
hlt
push
and
xor
jbe
scas
jae
mov
sbbl
les
sahf
fsts
cmp
push
adc
jb
inc
imul
aad
out
test
cmp
jge
add
lods
mov
insl
in
pop
jnp
dec
scas
and
hlt
adc
in
pop
mov
orb
pop
push
ss
cmp
inc
or
jecxz
add
jnp
xor
popa
cmpsl
sti
push
out
or
mov
mov
es
sub
pushf
scas
cmp
je
out
and
cmp
loopne
sbb
pop
pop
daa
inc
inc
mov
push
clc
pop
stos
sti
aad
inc
stc
add
mov
mov
call
call
ret
sbb
mov
xchg
inc
repz
ss
dec
adc
cmp
inc
jne
inc
call
mov
stos
stos
ljmp
xor
fs
sub
or
jne
into
pop
inc
ret
movsb
mov
push
or
or
gs
adc
adc
in
inc
or
inc
aad
adc
mov
in
push
int3
lods
dec
mov
add
mov
sarb
pop
pushl
cmp
jmp
sbb
adc
jo
arpl
out
gs
or
inc
adc
hlt
addl
bound
aas
sbb
arpl
rolb
fisttps
gs
data16
jno
mov
push
adc
push
adc
sub
cmp
daa
fsubrs
add
mov
pop
pmullw
lds
ja
push
out
aam
pop
mov
and
adc
jl
dec
xchg
dec
add
xchg
push
imul
into
dec
andl
jle
cmp
or
mov
xchg
insl
and
pop
lods
xchg
mov
ficoms
push
les
push
in
mov
test
and
mov
push
pop
js
pop
mov
jl
fs
es
jl
pop
stos
lret
jle
add
aaa
rclb
jge
dec
mov
jb
adc
xor
push
sub
sti
movsl
or
rorl
hlt
pusha
mov
jecxz
adc
cmp
sbb
or
push
mov
das
call
mov
jp
std
vmread
mov
mov
int3
mov
push
mov
outsb
lcall
fst
stos
xlat
jp
lret
imul
daa
mov
mov
je
popa
cmpsb
out
mov
lret
icebp
pop
jbe
xor
out
cmp
icebp
mov
pop
sub
jmp
sbb
xchg
mov
xor
aaa
or
xchg
adc
sti
movsl
icebp
push
mov
stos
addb
pushf
js
jae
aam
loope
dec
jmp
cmc
fdivs
bound
and
js
push
lcall
call
xchg
cmovae
push
jbe
mov
loop
jge
int
xor
cmp
stos
mov
mov
lds
lods
push
imul
scas
cld
add
loopne
jle
jge
xor
and
ret
mov
pop
fstpt
mov
dec
dec
mov
push
pusha
into
jne
dec
pop
jnp
cmp
pushf
xor
mov
dec
cmp
mov
sub
repz
adc
push
mov
in
add
in
lods
lcall
jnp
pop
and
aas
daa
repz
repz
inc
jns
and
mulb
mov
xlat
jbe
into
or
sub
add
cmp
in
jnp
push
js
sub
mov
and
cmc
sarl
pop
mov
lret
xor
and
jl
lret
jge
jmp
sbb
pushl
leave
lds
xorl
cmp
outsl
mov
shlb
pushf
push
cmp
cli
out
push
les
rclb
lahf
pop
cmp
mov
pop
aas
in
std
xchg
add
jmp
arpl
and
cld
pop
jnp
mov
loope
rorl
mov
insb
sbb
sub
mov
loope
lods
aaa
not
mov
addr16
cmp
in
test
xor
in
fsubrs
rcl
mov
add
pop
mov
or
dec
ss
jno
mov
push
or
dec
mov
and
mulb
add
jbe
push
xor
xchg
iret
pop
pushf
sbb
jbe
enter
pop
divl
xor
adc
in
test
sub
cltd
inc
dec
add
out
mov
sarb
fists
aas
dec
or
inc
nop
ds
jnp
pop
int3
mov
jo
jb
cmp
dec
cs
ljmp
xchg
idiv
daa
cmpsb
dec
shrb
aam
or
mov
xor
shl
pmullw
dec
cmp
mov
rolb
xchg
mov
inc
aad
push
ds
shrb
cwtl
inc
mov
subb
bound
xchg
enter
arpl
inc
cmp
or
xchg
adc
add
ret
jo
xchg
and
aam
xchg
ret
push
xorb
or
dec
xchg
cmp
mov
dec
push
jbe
fistl
into
cmp
and
pop
scas
add
in
fistps
fldenv
std
xchg
lea
sub
bound
shl
cmpsb
int3
jbe
in
call
mov
push
inc
xor
lahf
push
lea
inc
cmp
inc
call
clc
pop
sub
pushf
into
mov
xchg
cs
adc
ljmp
adc
add
shl
sti
xchg
mov
subl
mov
nop
popa
jle
and
psrlq
xor
enter
mov
xchg
push
mov
loop
enter
faddl
shll
dec
sub
add
mov
xor
xchg
dec
jns
pop
push
xchg
push
faddl
rol
popf
xor
shl
mov
mov
stc
aas
ljmp
adc
in
pop
mov
subb
cs
jne
add
mov
rolb
and
out
inc
roll
in
mov
sub
std
ss
outsb
rorl
loopnew
pop
mov
and
mov
orl
mov
fistl
int
xor
xlat
xlat
aad
sbb
test
sarl
aad
jno
jg
dec
cmpb
xchg
sbb
sbbl
int
pop
pop
sub
lret
push
lea
rorb
fcmovbe
lret
lahf
cmp
subb
pushf
aaa
scas
adc
fidivl
dec
out
stc
pop
pop
ljmp
cli
mov
push
cli
mov
into
mov
int3
cld
mov
sub
push
clc
rcl
out
jno
fucomp
inc
adc
sub
xchg
jns
mov
cmp
clc
xchg
shlb
dec
shrb
pop
loope
cmp
imul
mov
cmp
xchg
ss
rcrb
add
in
push
repz
and
sbb
push
js
xchg
mov
stos
int3
shlb
dec
fdivrp
loopne
shlb
repz
fstpl
outsl
int
xor
and
mov
xchg
das
or
inc
fistps
mov
jns
mov
cmp
mov
mov
and
mov
inc
push
in
insl
inc
bound
in
fiaddl
inc
xlat
fwait
stos
push
stos
pushf
dec
js
cmp
push
mov
push
aaa
xor
push
add
in
mov
lock
xchg
cmp
mov
mov
mov
cltd
stos
js
xchg
mov
inc
and
cmp
xlat
cmp
in
mov
cmc
add
sbb
aam
xor
dec
jp
mov
outsl
fwait
daa
shrl
cs
jne
mov
add
out
fwait
aam
or
mov
mov
add
inc
push
popa
outsb
cmp
or
xchg
mov
and
aas
push
pop
divb
ljmp
lds
xlat
mov
jae
in
int
jl
jb
out
pop
call
hlt
cmp
movsb
cwtl
int
shl
or
out
in
and
js
mov
int
mov
pop
pop
mov
aad
mov
cs
icebp
mov
adc
shll
xor
ss
lahf
cs
cmp
arpl
nop
add
push
pop
rorl
and
pusha
mov
add
cmp
add
inc
dec
shlb
adc
mov
mov
int
cmc
pop
das
int3
ja
call
pusha
mov
test
jnp
insl
lret
mov
dec
loop
add
jl
pop
cmp
jae
out
cmp
outsl
prefetch
sti
arpl
dec
aaa
jmp
clc
nop
in
pop
insl
cltd
outsb
negb
lods
push
xchg
pop
dec
or
push
push
sbb
push
push
js
addr16
pop
ss
pop
push
inc
out
add
arpl
pop
inc
cwtl
mov
lds
adc
mov
mov
xor
jl
insl
jnp
mov
pusha
jp
adc
cld
add
sbb
addr16
clc
pop
lea
insl
nop
pop
jp
call
lods
and
das
cli
push
add
pusha
mov
mov
lcall
push
adc
mov
xchg
imul
iret
mov
popf
dec
adc
sub
in
iret
mov
push
dec
xchg
xchg
in
scas
push
ss
push
inc
sub
add
inc
ret
add
movsl
push
test
xchg
adc
test
ss
gs
cltd
in
sub
jle
mov
push
aad
xor
pop
filds
lret
jns
jne
jmp
add
mov
fnstcw
and
fndisi(8087
inc
outsl
in
dec
cmp
pop
cmp
cmp
aad
adc
inc
stc
pop
push
enter
push
cmpsl
mov
jge
push
mov
das
ret
cli
mov
mov
test
rcrl
lcall
dec
push
or
push
xor
mov
popa
lcall
loopne
cs
pop
test
mov
enter
sbb
mov
dec
insb
push
mov
outsl
and
push
arpl
mov
fldt
xlat
xchg
outsb
dec
mov
sbb
shrl
dec
pop
test
or
push
xchg
nop
repz
xor
mov
in
push
daa
hlt
lret
adc
in
hlt
inc
cli
pop
pusha
xor
pop
push
inc
push
int3
add
xchg
shrl
ja
jo
push
pop
dec
xchg
mov
push
rcll
dec
xor
jle
fldenv
stc
cltd
add
xor
push
shll
push
cmpsl
pop
in
sbb
insb
mov
hlt
and
xorl
stos
lret
xchg
xor
and
in
lock
or
mov
pusha
jle
or
add
xor
dec
push
mov
in
dec
xchg
cmp
add
leave
fcmovnb
sub
mov
add
mov
sbb
jge
cltd
aas
and
add
adc
cmp
mov
fmulp
push
inc
push
push
jae
loope
xor
int3
adc
out
xor
sbb
in
mov
mov
outsl
imul
adc
lret
xchg
movsl
push
mov
fs
or
je
hlt
sub
push
insl
mov
jmp
out
mov
xor
push
and
mov
arpl
push
xchg
push
sarb
aas
stos
sti
popf
sub
xor
adc
iret
add
jecxz
ss
mov
sub
test
mov
out
fisubs
mov
pop
pop
loope
cmp
xchg
gs
or
aam
pop
test
push
sub
ret
push
and
adc
in
test
xchg
fstpt
cmp
add
cmpsl
pop
inc
and
roll
into
xor
loope
xor
cltd
xlat
xchg
and
addl
lcall
jno
or
int3
enter
xchg
adc
rcrb
add
decl
inc
cld
subb
mov
scas
mov
lea
cltd
push
idivb
int
insb
mov
inc
pop
adc
lds
xlat
pop
jmp
dec
cmp
or
ret
fistpll
mov
add
out
jp
shl
das
pop
mov
das
lods
add
xchg
fiadds
pop
or
adc
cld
dec
in
imul
dec
jae
sbb
push
movsl
rcrl
inc
jg
mov
inc
adc
aad
outsl
mov
mov
std
iret
in
push
xor
lret
cmc
loop
mov
push
std
mov
lahf
dec
ja
in
mov
das
sub
scas
repz
js
push
out
loop
pop
xor
fldcw
imul
test
repnz
or
cwtl
out
mulb
lcall
xchg
xor
cmp
cltd
jmp
pushf
mov
and
pop
xor
mov
pop
mov
xchg
jl
sbbb
mov
mov
xor
xchg
add
scas
mov
addl
sub
jns
sbb
sbb
jmp
clc
out
sbbl
dec
ret
inc
lahf
sbb
xchg
in
inc
arpl
sbb
or
sub
push
sbb
test
mov
repz
xchg
mov
enter
cli
lods
subb
jl
rolb
gs
push
fisubs
in
mov
cld
flds
jecxz
cmp
and
pop
leave
adc
mov
sub
fs
stc
sub
xor
cmp
int3
insb
loopne
adc
cld
repz
hlt
adc
and
popa
sbb
xchg
cld
fidivs
inc
sbb
cs
incb
or
pop
movsl
fiadds
je
xor
pop
mov
fadds
sahf
mov
aad
fdivl
test
jne,pn
inc
xor
dec
cmp
testl
mov
sbb
bound
sub
fucomi
hlt
jmp
fwait
cld
cmpsb
hlt
mov
xchg
sub
or
in
and
sbb
inc
mov
inc
lock
sbb
aas
mov
std
daa
mov
and
cltd
insb
addb
mov
xchg
mov
rcrl
pusha
sbb
popf
mov
or
repz
nop
scas
push
mov
push
sbb
jb
aas
aas
sbb
fstps
icebp
xlat
and
mov
aam
pop
inc
jl
add
sub
fs
ja
fs
adc
add
repz
mov
lret
out
inc
pop
fwait
sbb
mov
xchg
xchg
lcall
popf
ds
sub
mov
mov
jmp
lods
aaa
aaa
jnp
jecxz
pop
into
jne
ljmp
imul
and
and
fidivrs
mov
repz
mov
ss
fs
dec
jmp
mov
add
sub
cmpsb
movl
pop
xchg
movzwl
movsl
add
sub
and
cmp
push
daa
fs
mov
cmp
cmp
adc
mov
or
mov
push
fists
or
inc
popl
pop
sbb
fstps
or
addl
clc
dec
pop
into
mov
in
add
cmp
add
lods
pop
mov
sti
out
add
xlat
inc
pushf
mov
xchg
xchg
inc
out
push
xor
fwait
mov
mov
cmp
ja
dec
jl
addl
cmp
es
inc
xchg
sbb
push
aas
call
rorl
jns
adc
xchg
jmp
loop
xchg
les
dec
into
sbb
je
xchg
xchg
adc
pop
mov
test
movsb
push
mov
loop
xor
mov
xchg
add
jns
repnz
arpl
jp
inc
inc
lret
repz
cld
scas
fwait
xchg
lock
jp
lret
pop
push
aaa
enter
repz
test
pop
jb
sub
enter
je
ss
ljmp
adc
cmpsb
incb
les
cmp
inc
mov
cmp
decl
outsl
mov
stos
xor
dec
insb
dec
pushf
loop
sub
pop
xchg
pop
cwtl
inc
mov
arpl
daa
imul
pop
mov
in
leave
lcall
jge,pt
shr
sti
std
dec
sti
mov
pop
in
sub
leave
mov
xor
and
add
nop
inc
or
dec
jmp
xchg
mov
cmpsb
insl
inc
sub
ret
cs
mov
adc
and
stos
test
sti
push
xor
ds
adc
pop
nop
into
repz
fists
push
push
dec
rorb
sub
mov
sub
xchg
mov
jmp
or
ds
mov
mov
mov
mov
lods
adc
sub
fdivrs
fsin
sbb
sub
mov
xlat
xchg
test
push
mov
mov
arpl
pop
xor
fstpt
scas
inc
xor
sub
adc
mov
pop
sub
stos
dec
cmp
fcoms
aas
xor
arpl
sbb
fstpl
lea
fs
sbb
pop
push
scas
add
lock
push
jo
or
inc
fadds
aad
fwait
sub
push
lcall
lock
pop
jge
cld
pushf
dec
shrb
out
leave
into
sbb
mov
sub
mov
jle
mov
aam
andb
and
xchg
mov
insl
lahf
cmpsl
fbld
loope
loope
iret
push
and
lcall
push
cli
scas
push
add
mov
jne
jmp
dec
js
or
stos
aaa
mov
imul
inc
in
xor
mov
mov
dec
pop
outsb
dec
mov
pop
mov
adc
pop
push
cmp
inc
pop
ficoms
add
lods
pop
pop
push
and
out
mov
imul
mov
jmp
cmc
icebp
aaa
sub
jbe
stos
mov
ja
mov
daa
jmp
jbe
test
scas
fisttps
lods
lds
xchg
jne
xchg
je
data16
inc
jge
fldt
lock
pop
sub
push
lea
les
fsubs
loopne
jp
jnp
sbb
adc
imul
pop
data16
mov
push
popf
sbb
fstl
dec
dec
int
xor
mov
fcoms
xor
out
clc
shrb
xor
jbe
iret
inc
xchg
ds
aas
imul
inc
pop
xor
sbb
add
fs
lods
mov
jl
push
dec
loope
xchg
cli
flds
dec
icebp
insl
dec
mov
cwtl
mov
xorb
nop
mov
int3
xor
nop
mov
loope
xchg
sbb
mov
inc
or
xor
nop
jle
dec
mov
xchg
jnp
xlat
loop
aam
or
and
cmp
push
mov
dec
pushl
je
xchg
scas
mov
cmp
sbb
leave
loopne
stos
jne
pushf
pop
jae
andb
enter
ret
pop
mov
repz
xchg
xchg
cmpb
push
and
inc
fdivrl
jle
popf
push
xor
mov
adcl
lds
cld
xchg
jnp
aas
test
loopne
jle
mov
push
int
fwait
cmp
inc
cld
mov
sbb
imul
rcrl
sbb
sbb
sbb
loope
and
or
mov
cmpb
das
xchg
inc
xor
jbe
mov
jle
cmpsl
dec
adc
aas
std
rolb
sub
dec
push
sub
loop
inc
pminsw
cltd
pop
sub
pop
pop
and
add
pop
subl
push
sbb
jg
lahf
pop
mov
loopne
and
ja
jp
sbb
sub
inc
mov
movsl
fcmovnb
mov
scas
mov
push
bound
insl
das
divl
pushf
hlt
cltd
inc
aaa
sub
cmpsl
jno
or
jecxz
fists
in
adc
xchg
cmpsl
dec
aam
jb
hlt
jnp
sbb
subb
mov
mov
cwtl
push
push
pop
add
mov
push
fstl
jo
mov
push
aaa
dec
jl
lea
test
icebp
mov
sbb
sti
mov
lods
jo
test
aad
imul
imul
cmp
ds
sbb
add
and
mov
leave
mov
or
add
pop
aaa
jle
mov
sbb
mov
jae
inc
adc
cltd
pop
mov
sub
cmpsb
aas
jmp
xchg
sti
lea
xchg
movsb
mov
sbb
data16
lds
cld
fistps
mov
cmp
test
incl
hlt
pop
mov
les
imul
inc
adc
xchg
sbb
dec
mov
sahf
mov
gs
or
insl
mov
adc
repz
fmull
rcrl
stos
inc
outsl
enter
cmpsl
and
rol
sub
les
imul
lret
rcl
push
mov
adc
mov
jb
test
in
insb
in
push
pusha
lea
cmp
add
ret
and
clc
pusha
and
pushf
shlw
mov
sbb
sahf
aam
cmpsl
fwait
dec
jmp
pop
lret
inc
nop
aam
imul
sbb
cld
push
mov
jb
mov
push
xor
scas
xor
push
xor
cmp
into
add
pop
lret
sbb
inc
sub
dec
xor
mov
std
inc
lods
leave
inc
jmp
xchg
jns
xchg
ja
dec
insb
mov
call
ds
mov
cmp
dec
daa
enter
lods
inc
lods
jg
xor
jmp
movsb
rcrl
add
ds
or
mov
hlt
in
hlt
adc
inc
cmp
jecxz
add
and
jp
pop
xchg
jb
popl
pop
out
mov
in
lods
imul
aas
cli
cmp
cmpsl
pop
jno
pop
data16
out
leave
aam
dec
pop
insb
rcrb
sub
pop
test
aas
push
mov
idivb
out
push
xor
dec
popl
out
out
dec
sub
es
lahf
adc
mov
mov
mov
sub
leave
in
xchg
xor
mov
and
pop
push
push
pop
push
jo
jge
rcrl
adc
sub
movsb
rorl
outsl
pop
adc
sub
cmp
cmpsl
sbb
movsl
adc
movsb
dec
push
mov
sub
add
inc
pop
xor
lea
cli
divb
popf
icebp
mov
pushf
movsl
jge
jno
cwtl
push
push
movsl
ror
popf
xchg
sbb
subb
mov
aad
mov
jae
dec
and
out
stos
je
sahf
push
lahf
loope
test
testb
or
scas
loop
cmp
daa
push
pop
add
gs
lds
pop
out
into
mov
std
and
mov
pop
cwtl
icebp
fbstp
les
rorb
mov
test
jne
gs
cltd
xchg
nop
xchg
pop
test
aaa
inc
scas
mov
jecxz
neg
test
xor
rcrl
add
dec
push
push
es
std
and
leave
mov
clc
aam
pop
sbb
mov
push
lea
adc
dec
and
sbb
jns
out
cmp
mov
jle
adc
add
out
mov
cmp
decl
aas
inc
pop
aaa
xor
popa
fwait
mov
jnp
jno
mov
faddl
scas
test
sbb
ss
pop
pop
mov
nop
hlt
data16
push
sub
out
and
pop
mov
mov
loope
icebp
add
mov
enter
sbb
dec
fs
xor
sti
gs
add
xor
push
pop
mov
fstpt
push
add
push
mov
outsl
stos
or
mov
repz
cli
and
je
ss
dec
lret
jge
mov
icebp
xchg
jno
call
out
and
lods
adc
sti
leave
xchg
fcomps
cmp
or
in
cmpsl
cmpsb
cmpsl
nop
add
das
mov
jle
fstp
je
xchg
out
push
mov
das
mov
lcall
xor
daa
cld
rolb
stos
mov
adc
loope
sbb
xchg
lret
cmp
jbe
loop
lret
divl
repz
imul
or
fs
xor
cld
mov
xor
or
inc
mov
inc
xchg
dec
dec
push
pop
adc
pusha
jae
call
iret
pop
jne
gs
cmpsl
adc
fildl
daa
pop
popa
push
scas
out
loope
dec
xor
xchg
dec
mov
mov
xlat
fnstsw
cld
cltd
pop
repnz
sub
add
push
les
sub
dec
dec
ret
or
push
icebp
faddp
cmp
in
jle
leave
ret
loopne
in
in
aaa
cli
pop
loop
mov
mov
ret
les
jge
xchg
faddp
push
sbb
movsbl
sbb
pushf
cwtl
rorl
dec
int
mov
call
lret
test
ficomps
mov
mov
add
jnp
rcrb
loop
mov
adc
cmp
cmp
jno
xlat
loope
cmc
add
sub
pusha
mov
test
movsb
cmp
add
int3
dec
push
mov
mov
repz
loope
mov
ret
icebp
pop
xchg
aad
sti
inc
push
loop
xchg
adc
cmp
movsb
cmp
dec
lods
faddp
or
fildl
les
mov
add
mov
clc
std
sub
ljmp
iret
clc
notb
movsb
cmc
cmpsl
adc
xchg
bound
clc
push
or
sahf
sbb
aam
push
sub
dec
mov
push
addl
push
into
xchg
aam
mov
sti
adc
inc
movsb
mov
xor
jmp
jg
ja
xchg
icebp
xchg
inc
fcompl
jbe
mov
in
pop
xlat
or
arpl
rolb
xchg
add
inc
cmp
mov
push
jb
inc
test
xchg
jl
jg
lock
or
lods
push
mov
mov
sub
inc
gs
adc
popf
or
rorl
mov
lds
je
shll
cs
fcoml
mov
inc
fcoml
pushf
push
mov
pop
and
cli
rcl
lds
push
cmc
in
ret
aas
cwtl
sub
xchg
sbb
daa
imul
push
jp
mov
xchg
cltd
inc
sub
sub
cli
and
mov
mov
push
ret
adc
fiadds
clc
aad
add
clc
mov
push
and
rorl
inc
xor
jae
xchg
aad
and
adcb
faddl
add
jb
xchg
pushf
jle
ds
je
in
cmpsb
pop
sti
push
mov
dec
idivb
cmp
cmp
dec
xchg
cli
jo
inc
shll
pop
test
sbb
inc
inc
cmpsb
pop
push
add
pop
addr16
insb
lret
pop
lcall
xor
mull
clc
ds
fucomp
rclb
jecxz
arpl
or
out
mov
repnz
adc
test
mov
adc
add
mov
and
mov
mov
sub
add
adc
xorb
out
jle
addr16
xlat
sub
subb
scas
inc
repnz
xchg
cmp
lds
push
insl
shrl
movsl
mov
inc
repnz
fcomps
jns
aad
pop
frstor
and
testb
xchg
jnp
dec
jnp
mov
bnd
pop
add
nop
xchg
jbe
fdivs
xchg
cmpsb
xor
pop
xchg
in
or
pop
or
loopne
xchg
dec
hlt
sub
push
push
es
test
dec
fcomp
out
mov
in
inc
stc
mov
sbb
cmp
mov
out
inc
aam
lods
jns
xlat
inc
push
dec
inc
cmp
lods
fs
cld
ret
sub
fmuls
ja
cld
dec
fisubrl
xchg
jmp
xor
push
dec
pop
inc
movsb
mov
jl
inc
jp
dec
pop
stos
xchg
or
inc
inc
push
push
pop
cmpsb
pop
movsl
scas
lcall
das
insl
scas
pop
lods
test
aas
mov
andb
std
mov
push
aaa
shrl
test
dec
ucomiss
mov
imul
flds
push
xor
push
gs
dec
ret
repnz
mov
cmp
test
popf
nop
mov
in
sub
imul
jns
push
and
push
sahf
test
add
mov
fcmovb
outsb
mov
mov
mov
insb
mov
in
jl
aas
sbb
pop
jg
je
adc
mov
push
rcrl
jb
icebp
sahf
cwtl
fwait
push
loopne
adc
pop
cmp
popf
or
cmpsb
jo
ds
xorl
imul
add
jp
sbb
fldl
jle
fstpt
add
mov
lahf
mov
stos
xchg
pop
outsl
cmp
dec
fwait
lret
add
xchg
fnsave
sub
dec
mov
stos
int3
dec
in
cmc
ret
jb
ficompl
cmp
imul
pop
cli
repz
mov
stc
shlb
pop
adc
mov
shlb
xchg
xor
cs
iret
xchg
push
pop
pop
or
and
push
mov
mov
mov
sub
iret
adc
and
test
js
lret
push
xor
mov
nop
scas
insl
iret
idivl
and
decb
mov
cmpsl
jnp
jo
arpl
testl
roll
in
or
jmp
and
test
das
mov
push
sbb
sub
ljmp
adc
cs
mov
xlat
dec
and
out
ret
pop
leave
pop
add
lret
pop
sbb
dec
add
std
jno
mov
sbb
mov
sbb
jae
adc
sub
sti
pushf
out
in
and
xchg
cmpsl
shll
or
pop
into
ret
iret
test
fldenv
mov
mov
mulb
icebp
push
iret
test
jge
into
adc
dec
dec
fmull
jne
imul
or
loope
and
shrb
sub
movsb
pop
jb
pop
sbb
mov
lret
mov
sti
push
shll
ja
push
bound
adc
push
pop
sbb
rdmsr
or
xor
inc
pop
loopne
push
ljmp
insb
ja
push
std
pop
add
sub
xchg
shrl
mov
lock
mov
das
mov
dec
dec
fwait
iret
mov
sub
rolb
dec
jp
mov
dec
cmp
sbb
addr16
fcom
xor
es
inc
stc
sbb
insl
jno
mov
ficoml
cmpsb
in
xor
xor
and
mov
mov
cli
xchg
out
pop
fists
insb
arpl
fstpl
es
sub
pop
insb
sbb
fists
fistps
div
rclb
call
fisubrl
mov
leave
sbb
ljmp
mov
inc
imul
loopne
lea
ja
lock
mov
jecxz
ljmp
std
mov
in
sbb
call
add
xor
mov
filds
mov
jg
in
repnz
add
inc
cltd
push
push
mov
std
in
sub
inc
pop
pop
leave
out
pop
test
push
pushf
and
insl
mov
mov
ljmp
jne
mov
xchg
push
arpl
and
cmp
jl
lahf
pop
dec
xchg
jp
outsb
out
popf
push
cltd
pushf
add
out
mov
inc
mov
push
dec
mov
adc
iret
es
pop
sbb
ja
jmp
js
scas
mov
mov
mov
xlat
cmc
ret
iret
out
xor
push
xchg
sub
pop
xlat
movzwl
push
sbb
lds
loopne
adc
pop
andb
in
std
pusha
aaa
fcomi
mov
sub
insb
loopne
inc
add
pop
in
retw
xor
mov
mov
add
cwtl
pop
cmpsl
stos
bound
subb
jg
lods
mov
mov
sbb
adcl
mov
dec
ja
int
sbb
jnp
mov
nop
testb
jp
and
mov
out
inc
rcr
dec
iret
iret
mov
xchg
mov
lods
pop
call
push
pushf
les
mov
out
inc
arpl
adc
addr16
pop
mov
push
add
shll
insb
lods
push
mov
xchg
mov
sub
stos
sub
lea
sbb
std
xor
aaa
fisubrs
outsl
push
out
jbe
jne
lods
cmpsl
xchg
xor
push
sbb
andl
mov
out
cmp
mov
in
xor
icebp
push
rorl
pop
push
fidivrs
fcmove
aad
gs
call
adc
scas
repnz
hlt
shlb
xor
or
add
mov
add
adc
fdivs
lea
push
into
push
pushf
inc
rcl
lret
shrb
bound
or
fidivrs
int
repnz
ja
xchg
mov
mov
cli
ret
jg
mov
cwtl
cmp
ret
rclb
test
inc
mov
into
les
in
sahf
test
mov
xchg
lds
adc
xchg
sbb
ljmpw
leave
add
jo
xorl
mov
clc
add
mov
les
sbb
pop
aam
sbb
sub
clc
inc
pop
nop
push
sbb
sub
xchg
ja
cli
push
lcall
fsubrs
negl
jmp
fiadds
mov
mov
sub
push
gs
xchg
ljmp
fisttpll
cmp
sub
mov
das
mov
sbb
rcr
sti
lea
jge
push
icebp
jnp
adc
push
sbb
ds
scas
pop
xor
rorl
and
test
xsaves
lds
pop
fiadds
xor
btr
fidivl
das
cmp
pop
sub
adc
jg
test
addr16
adc
or
ret
test
call
dec
insb
sub
loop
jae
inc
dec
or
aaa
push
int3
shl
rep
bnd
jg
jno
xchg
mov
or
pop
jnp
push
pushf
lods
push
xchg
fistpl
sub
cmp
or
scas
aaa
andb
jbe
lret
aaa
pop
fldl2e
sub
adcb
jno
ds
mov
mov
or
fbstp
test
es
addr16
rcll
ficoms
push
loope
xor
sti
add
jno
adc
iret
mov
inc
out
adc
pop
lret
je
jl
lret
test
es
xchg
lret
sbb
adc
xchg
sub
lcall
test
aam
cwtl
or
inc
mov
lea
mov
adc
push
ss
sahf
dec
pop
loopne
rcll
xor
push
xchg
pop
pop
popf
pop
mov
imul
and
xchg
ja
push
pop
add
in
paddusb
adc
loop
loopne
sbb
repnz
add
adcl
aas
pusha
cmpsb
mov
nop
inc
xor
mov
add
pop
xchg
in
and
pop
cmp
rcrl
mov
repnz
ud0
fsubl
in
push
push
shll
or
cmc
lret
lcall
imul
test
adc
pop
lods
ficoms
mov
clc
jb
fisubl
bound
andl
fsts
fwait
dec
inc
int
or
xor
out
dec
insl
and
ljmp
es
and
gs
je
or
daa
outsl
cwtl
pop
xchg
mov
in
mov
and
icebp
lock
mov
adc
and
jbe
cwtl
rcrl
adc
into
in
cmpsb
gs
mov
mov
jnp
mov
fistps
mov
mov
sbb
cld
xchg
fiadds
push
cltd
pop
xor
and
sbb
dec
shl
jp
cld
int3
cmpsl
cmp
les
cmp
xor
pop
int
sbb
cmc
cmp
sbb
jb
fldl
enter
sbb
mov
hlt
popf
mov
sub
shll
and
mov
mov
fcmovb
shlb
mov
push
add
xchg
insb
dec
out
movsb
push
repz
jl
xlat
insl
mov
inc
daa
jl
push
jge
clc
stos
roll
and
jp
add
add
mov
daa
test
jne
rolb
out
nop
sub
in
mov
xchg
cmc
push
mov
lret
sti
jno
fsub
sti
imul
push
add
shrb
aad
xor
popf
xlat
push
div
sbb
ljmp
les
and
inc
jecxz
adc
js
dec
movsb
adc
dec
adc
cltd
pop
iret
add
cmp
dec
mull
cwtl
std
or
shl
mov
mov
clc
enter
cmpsl
stos
pop
mov
mov
dec
inc
fwait
imull
xor
inc
stos
cmp
nop
pop
push
adc
addr16
dec
test
dec
dec
push
int3
gs
jg
cmc
enter
std
xchg
jg
push
jbe
fwait
roll
cli
mov
jno
jge
cwtl
mov
xor
in
or
popf
lret
pushf
sbb
loope
xor
mov
sbb
dec
ret
inc
fldl
adc
scas
lock
sub
in
mov
or
outsb
mov
jl
cmpsb
out
push
mov
aaa
daa
outsb
ss
rcll
sub
cli
cli
loop
outsl
mov
mov
repnz
xor
das
dec
cs
mov
in
loop
lret
movsb
fimull
jne
bound
nop
xchg
inc
icebp
sbb
adc
mov
out
sub
push
repnz
inc
mov
aad
lcall
sub
jo
popa
daa
cmovb
cmp
imul
popf
js
or
mul
xor
sbbb
mov
in
cmp
inc
dec
mov
cld
mov
xor
sbb
stos
cmpsl
mov
loope
clc
mov
or
in
lods
xchg
pop
movd
mov
aam
sub
mov
mov
rclb
cmp
mov
inc
adc
mov
in
lods
lcall
lret
cmp
push
rcrb
je
adc
jns
sub
outsb
int
mov
rorb
test
loop
loop
push
jae
lret
imul
adc
les
xchg
aam
inc
aaa
in
out
or
movsb
in
fs
adc
pop
adc
rorb
fnstsw
lds
or
mov
adc
sbb
mov
cmp
fs
pop
pop
cmpsb
jp
mov
jne
popf
adc
sub
int
imul
mov
mov
ret
ret
sub
enter
push
sub
pop
aas
cmpb
xchg
jns
test
lret
in
jge
xor
loopne
test
fimull
xchg
mov
xchg
cmp
add
mov
jae
aas
xchg
cli
aas
in
outsl
aad
std
dec
sbb
lahf
jp
pop
shlb
mov
cwtl
jecxz
push
add
pop
pushf
sarb
pop
jmp
fistpll
cmc
pushf
or
out
enter
insl
loope
fidivs
sbb
repz
mov
outsl
lea
incl
out
pop
add
pop
ja
icebp
scas
movsb
mov
je
mov
negl
push
mull
or
cmpl
pop
test
loope
pop
pop
pop
cmp
pop
sti
lds
push
xchg
aam
daa
loope
jnp
addl
out
daa
jp
mov
sbb
jne
dec
add
mov
cmp
jmp
arpl
cmp
ficoml
pop
cmp
scas
lahf
movsb
mov
xor
jmp
xchg
jp
or
stos
sub
sub
jmp
jmp
out
push
jbe
inc
fisubrs
xchg
lret
out
pop
std
inc
lcall
dec
pop
add
sbb
ss
dec
cmpsl
pop
imul
and
pusha
lret
push
insl
cmp
jns
jmp
orb
inc
push
in
cwtl
sub
dec
sbb
data16
jno
jge
fstl
out
jg
jno
mov
rorl
mov
setge
pop
jbe
lret
xor
aam
in
insb
cmpsl
sub
and
push
movsb
cmc
and
mov
inc
add
xchg
cld
idiv
push
xor
test
mov
lret
mov
mov
lahf
add
daa
call
cmpsl
jo
pop
sub
scas
xchg
cmpsl
dec
int3
adc
enter
xchg
ficomps
inc
lods
mov
lock
lcall
mov
pop
arpl
sbb
incl
test
dec
mov
sarl
sub
lahf
cmp
and
jb
xor
aad
ds
xor
cmp
in
dec
adc
jnp
pop
lea
cmp
clc
rorl
push
lcall
sbbl
pop
inc
repz
lods
sub
dec
insl
mov
iret
push
lea
sahf
xor
xor
inc
lahf
mov
out
xor
or
popf
cmpsl
mov
jns
sub
clc
sub
fidivl
sahf
and
fists
push
xor
loopne
repnz
inc
jp
mov
cli
ss
pop
repnz
lods
or
fs
inc
sbb
cmp
pusha
jbe
pop
jmp
sahf
mov
xchg
fwait
je
mov
test
pushf
ljmp
fcompl
sbb
and
jne
dec
xor
jg
mov
jmp
jmp
sub
sbb
cmpsb
loop,pn
push
mov
ja
push
sbb
in
out
sub
inc
js
imul
nop
mov
mov
lcall
jns
add
sahf
lods
imul
adc
pushf
fildll
mov
ret
mov
daa
inc
pop
or
outsl
push
sub
dec
xchg
cmp
or
fcmovne
and
stos
jg
or
mov
popf
and
dec
fstpt
xchg
push
cmp
lods
inc
dec
repz
xchg
xchg
mov
xchg
push
sub
xchg
adc
outsl
lea
adc
push
fstl
out
push
xchg
jbe
dec
ret
inc
out
das
roll
fwait
mov
push
xchg
fcmovnu
adc
pop
daa
sub
mov
bswap
aas
lret
fs
mov
sub
aas
int
mov
imul
mov
push
inc
xchg
xor
mov
push
push
push
loope
jo
inc
notb
dec
xchg
push
iret
cltd
or
dec
push
sub
test
rcrb
in
jp
push
nop
push
movsb
cwtl
sbb
ret
repnz
outsl
inc
nop
enter
hlt
sbb
inc
pop
jg
shll
and
add
mov
xchg
ljmp
lods
lahf
aad
xchg
lahf
inc
fwait
pop
scas
lcall
aam
cwtl
and
pop
cmp
cmp
xchg
cmp
adc
mov
out
movsl
mov
pop
lahf
imul
popf
pop
cmpl
add
mov
xchg
out
mov
and
leave
dec
sub
mov
xchg
lret
imul
fstl
call
outsl
sub
jns
testb
jecxz
aad
out
adc
icebp
sbb
push
test
dec
dec
sbb
dec
divl
mov
dec
and
fiadds
fcmovnbe
jl
mov
das
shlb
sbb
cmp
mov
test
push
popf
cmp
xchg
or
into
stos
push
dec
fnstcw
or
xor
mov
ficomps
in
adcl
xorb
or
nop
jno
sahf
lds
das
add
sti
mov
negb
cmp
in
sahf
push
cwtl
sbb
ret
add
mov
dec
xlat
cmp
sub
in
jae
mov
dec
sbb
or
es
jg
ret
ljmp
mov
cmp
push
dec
and
insb
add
mov
pop
jns
dec
sbbl
mov
mov
loop
int3
xchg
sub
ja
fcomp
push
addr16
pop
mov
mov
outsb
int3
lahf
sbb
or
in
mov
movsb
ret
add
push
clc
scas
movsb
or
mov
arpl
and
std
outsb
adc
stos
mov
cmp
mov
adc
fmul
mov
xor
aas
cwtl
sbb
sti
movsb
jle
in
and
andb
fnstenv
inc
call
outsb
test
fs
add
sti
adc
jo
arpl
icebp
push
adc
imul
cmc
xchg
int3
je
scas
insl
push
mov
daa
cmp
nop
pop
sbbb
addl
sbb
scas
jnp
mov
or
inc
mov
mov
bound
sbb
out
in
enter
push
xchg
add
fadd
aaa
cmp
movsb
ja
dec
push
ss
cmp
pushf
xor
lock
and
leave
push
mov
mov
inc
jl
lahf
xchg
aam
push
int3
call
sub
jnp
lret
test
xchg
sbb
pop
test
aas
or
andb
idivb
cmp
rorl
mov
pop
and
sub
outsb
push
pop
sub
sub
add
fwait
or
or
mov
bound
cmp
icebp
xorl
inc
scas
jo
ficoms
add
mul
or
jns
adc
jge
lret
jmp
xchg
push
es
pusha
cmp
fadd
sub
cld
and
fwait
cmc
lods
loope
pop
add
les
imul
lods
sbbl
pop
or
mov
jl
add
les
cmp
es
and
lds
cmp
inc
idivb
push
mov
push
leave
jb
pop
cmp
jle
push
repz
xchg
mov
sbb
jle
shrb
icebp
xchg
adc
sbb
inc
cmp
push
dec
jno
xor
ficoml
movsl
loopne
lods
movsb
ret
lock
fdivrl
mov
ret
lret
shlb
sbb
inc
inc
sub
jmp
fcoms
lds
jae
movsl
hlt
iret
xchg
push
adc
andb
mov
mov
sbb
int3
xor
decb
pushl
push
pop
pop
cld
shrl
fcompl
lahf
jmp
sbb
sahf
or
add
insb
jge
sub
pop
jmp
rcrl
into
call
test
fdivl
push
hlt
lahf
sub
dec
arpl
es
mov
popf
and
jo
ja
in
jbe
sti
ja
cmc
mov
cs
and
pop
subl
popf
in
push
cmp
dec
lea
cmp
mov
hlt
mov
pop
push
sarb
test
and
xor
jne
mov
mov
mov
in
or
mov
inc
std
ss
imull
push
sub
adc
xor
scas
or
mov
and
xchg
movsl
mov
shl
add
mov
sbb
arpl
push
mov
insb
dec
jge
scas
ss
les
pop
es
inc
inc
push
xchg
scas
testb
imul
lods
mov
lret
cmpsb
es
fstl
xor
pop
push
xchg
das
cmpsl
mov
or
inc
jnp
lcall
fnstsw
negl
push
mov
arpl
ja
testl
xchg
icebp
sbb
jo
repnz
test
lods
mov
sub
mov
incl
xor
sbb
enter
clc
sub
sbb
xor
ja
xchg
mov
fsubrl
push
mov
jge
movsb
popf
test
in
xlat
xor
xor
dec
xor
mov
mov
lea
int
sbb
and
jmp
nop
jmp
xor
xchg
ret
xor
mov
mov
push
dec
fiadds
xchg
sahf
push
mov
jns
mov
mov
adc
cmp
push
jg
pop
test
adc
fldenv
mov
repz
xor
dec
lods
cmp
cmp
lods
and
mov
pop
mov
cmp
rcrb
clc
test
lahf
lcall
push
cmpsl
int3
outsl
or
sahf
xor
sbb
imul
jnp
dec
pop
push
xorb
adc
js
sbb
inc
fwait
mov
pushf
mov
pop
aaa
adc
jmp
out
int
mov
adc
decl
sub
push
xlat
cmpsl
mov
stc
fadd
inc
pop
cmc
or
mov
shrl
dec
xchg
inc
fmuls
mov
int3
mov
ret
mov
lea
mov
pop
fistpl
in
mov
jle
cli
fdivrl
lahf
adcl
push
stc
inc
fisubl
das
test
cmpsb
sub
or
outsl
inc
daa
je
mov
jecxz
loopne
in
mov
mov
leave
sbb
dec
push
in
mov
xchg
divb
push
sahf
movsl
xchg
fwait
jmp
stos
mov
add
xchg
faddl
push
xchg
mov
fistl
lret
outsl
dec
jnp
das
jg
jns
add
into
pusha
orl
cmp
gs
cmp
xchg
mov
xchg
sbb
aaa
inc
pop
nop
mov
cs
shlb
push
outsb
xchg
mov
iret
pop
add
ret
test
hlt
push
xchg
pop
xor
cmp
lret
mov
push
cmc
ret
stos
loopne
sbb
jbe
and
cmp
mov
xchg
pop
add
rol
sub
dec
cmc
xchg
movsl
je
adc
mov
lods
cmpsb
push
sub
jmp
adc
ret
aad
xchg
or
xorb
xor
adc
mov
in
ror
and
pop
in
xchg
mov
mov
xchg
mov
mov
or
popa
or
add
jg
adc
sub
and
cmp
movsl
test
ja
or
bnd
sbb
dec
xor
push
xor
xchg
flds
ljmp
lret
or
movsl
jg
sub
leave
cmp
lret
test
mov
push
sti
mov
sbb
sahf
aam
das
or
outsl
jo
inc
jb
and
and
mov
push
lea
pop
ljmp
push
and
or
jge
inc
mov
cltd
xchg
sbb
test
sahf
mov
lret
and
subl
shlb
ret
dec
jg
lret
cmp
addl
adc
das
mov
scas
xchg
mov
pop
imul
movsl
dec
adc
or
sbb
data16
dec
scas
xchg
pop
mov
pop
loop
andl
call
test
fmuls
incl
inc
fnstenv
cmp
pop
jnp
or
jae
or
movsb
xchg
lods
jl
xor
mov
cmpsl
sub
ret
std
jp
ja
push
out
insb
xor
fwait
and
insb
fs
inc
push
mov
lahf
movsl
mov
push
sub
lock
jecxz
jae
into
aad
fdivl
xor
pop
push
shll
mov
inc
mov
add
iret
cmpsl
lds
pop
push
int3
lods
movsb
adc
and
shlb
dec
xchg
xorb
dec
fistpll
addr16
pushl
mov
dec
andl
addb
push
dec
adc
mov
shlb
pop
and
lods
cmp
mov
cmp
push
xor
cmp
adc
sbb
in
inc
jge
xchg
gs
cmpsl
icebp
outsl
lret
inc
fldt
xor
inc
rol
ret
cmc
sub
xchg
push
mov
inc
stos
or
sahf
out
push
scas
ja
xchg
push
push
fstl
aad
fwait
sbb
or
xlat
xchg
stos
rcl
je
movsb
lcall
sbb
bound
xchg
mov
daa
cmp
mov
xor
sub
mov
mov
mov
push
enter
pop
or
leave
pop
add
test
fildl
sbb
mov
nop
sti
jb
cmp
in
andb
cmp
bound
pop
dec
xor
imul
jmp
add
arpl
pop
sahf
or
pusha
aaa
cmp
mov
je
les
shrb
shl
fs
cmp
cli
mov
fs
mov
mov
add
cs
in
adc
jle
pop
dec
fisubs
test
push
sahf
mov
cmp
and
stos
adc
cmp
mov
xchg
icebp
pop
lods
cmp
cld
lods
inc
mov
xchg
in
outsb
and
stos
rcl
hlt
xor
int3
mov
xchg
mov
aas
pop
pop
bound
fnsave
sti
cmpsl
mov
mov
pusha
push
negb
add
outsl
push
pop
dec
loope
test
pop
xlat
scas
fidivrl
andl
jns
adc
cmc
clc
leave
das
adcb
ja
aad
pop
test
pop
test
test
je
cltd
push
loope
ret
adc
fldl
dec
mov
jmp
adc
fisubrl
xor
or
fbld
push
mov
test
and
int
out
inc
sarl
xchg
xchg
mov
mov
ljmp
sti
call
mov
inc
out
insb
xor
aaa
popf
sub
je
mov
push
sarl
fnsave
je
inc
mov
inc
aam
lret
stos
out
sbb
js
aaa
inc
aad
mov
xor
mov
sbb
pop
push
int3
mov
sub
sbb
test
jne
imul
gs
jno
cmp
push
fdivrl
sbb
add
or
scas
mov
cmp
divl
dec
enter
dec
pop
jle
dec
mov
pop
xchg
and
pop
xor
rclb
push
jne,pt
inc
add
mov
sub
sbb
mov
outsb
cmpsl
xor
out
add
ret
jmp
push
daa
stc
aad
or
daa
push
vprotd
mov
adc
pop
or
xchg
stos
sbb
ds
mov
std
les
push
leave
mov
dec
mov
mov
daa
insb
lcall
or
sub
fldt
dec
das
adc
and
test
mov
in
push
stos
sahf
icebp
leave
jl
stos
mov
movsl
in
lods
fs
sarl
popa
jne
test
adc
in
rolb
inc
cmp
push
mov
or
ret
hlt
sub
in
pop
fisttpll
mov
ucomiss
and
insb
out
jp
inc
mov
mov
in
jle
fmuls
mov
stos
idivb
pop
mov
repz
lea
and
and
loop
mov
movsb
and
jae
sbb
outsb
jg
push
lods
adc
repz
daa
enter
std
push
pop
ror
aaa
jb
mov
jb
lods
fdivl
xor
mov
iret
xor
xchg
adc
mov
divb
and
lcall
push
mov
mov
sub
bound
sbb
mov
gs
mov
mov
shll
lret
jecxz
sbb
adc
pop
jne
jb
in
test
ja
cltd
xchg
insb
cltd
sar
jle
sbb
orb
push
push
sti
fistl
jb
stos
xchg
add
dec
mov
ss
sbb
jbe
xchg
xor
jecxz
xchg
add
imul
mov
insb
dec
rcll
pushf
es
jne
mov
jg
cld
test
call
fstl
pop
pop
in
jmp
mov
rcrb
mov
loop
sub
shlb
cmp
xor
mul
and
orl
pop
jmp
sarl
hlt
lret
jecxz
pop
add
cmp
hlt
cmp
mov
lods
aam
push
leave
hlt
fimull
sbb
and
insl
fnstsw
aad
and
aas
inc
js
push
xor
je
rcrl
mov
pop
add
pop
test
pop
pop
xor
out
push
pusha
pop
push
adc
pop
int
fwait
mov
fdivl
sar
add
inc
mov
cld
adc
inc
lret
aaa
mov
inc
cmp
adc
inc
mov
popf
sbb
add
cld
adc
popa
inc
lcall
dec
add
movsb
sbbl
lods
jne
sub
shlb
pusha
inc
rcr
lahf
cwtl
sub
test
inc
mov
lea
inc
cmpb
jecxz
dec
iret
push
insb
fs
and
sub
inc
fsubs
outsl
sbbl
test
jbe
mov
in
xlat
or
pop
sub
cld
jno
stc
inc
jae
push
cld
sub
inc
lcall
leave
cmp
push
js
mov
test
ret
popa
inc
fdivl
adcb
lcall
mov
push
jle
movsl
out
or
sub
and
popa
xor
ret
mov
js
mov
aaa
mov
inc
je
iret
dec
and
pop
test
sarb
insb
and
hlt
fmuls
mov
sbb
sbb
sbb
push
inc
or
xchg
jo
repz
push
mov
jecxz
lods
cmp
sub
mov
mov
loopne
out
rol
jne
and
and
ret
insl
loopne
sahf
lock
and
shrb
mov
xor
xor
xchg
and
add
rcrb
shr
sub
mov
or
out
jecxz
repnz
push
cmp
xchg
mov
fisubrl
arpl
inc
lds
sub
lds
mov
ds
inc
push
fnstcw
into
jg
cld
stos
dec
and
and
mov
ret
xchg
sahf
out
cmp
lcall
xchg
jae
jne
sub
arpl
iret
and
loop
xor
call
lea
inc
loopne
and
inc
xor
enter
mov
add
stos
insl
arpl
jmp
gs
pop
dec
cmc
shl
lahf
adc
add
out
pushf
cmp
pop
shlb
cmc
ret
cli
dec
iret
lock
inc
shlb
rcl
mov
push
pop
xchg
jno
and
mov
sbb
and
in
das
push
or
call
fildl
inc
mov
movsb
fwait
add
testb
add
mov
add
sub
push
jne
inc
scas
lods
les
or
cwtl
pop
xchg
or
add
imul
adc
mov
fisttpl
movsb
stos
shl
orl
mov
push
je
loop
cmc
mov
fstl
jnp
repnz
fstp
mov
pop
xchg
ljmp
push
imul
ds
leave
mov
ds
in
jb
aas
mov
ljmp
movsb
push
cli
scas
call
mov
pop
pop
lods
pop
insl
in
lods
addr16
cld
adc
lods
cld
mov
lods
cmpsb
cwtl
mov
and
mov
cmp
jmp
cmp
dec
adc
mov
sub
dec
cld
xchg
and
xchg
mov
loope
sbb
xchg
adc
mov
inc
inc
cmp
insl
out
mov
loopne
enter
out
sbb
jl
nop
out
test
inc
lds
adc
js
push
xchg
dec
fidivs
push
pop
mov
arpl
dec
mov
test
xchg
and
jno
fdivr
adc
pop
fs
xchg
push
ror
lcall
xchg
insl
les
in
xchg
sti
lods
rcr
cmpsl
mov
pop
mov
cmp
or
test
ss
out
mov
pop
mov
mov
pop
lret
dec
sti
inc
and
xchg
lcall
out
jge
mov
push
jle
push
push
sbb
movsl
pop
cmc
xchg
add
inc
ja
sbb
dec
sbbl
clc
lret
dec
scas
adc
and
out
test
lcall
test
add
out
cmp
loope
mov
xchg
dec
pop
mov
movsl
and
lock
das
std
sahf
inc
fs
test
sub
test
sbb
add
push
mulps
sub
push
pop
into
orb
stc
jo
mov
jmp
dec
leave
xor
imul
sti
rorb
mov
adc
mov
add
popf
outsb
scas
mov
mov
add
push
mov
mov
test
push
aam
cmp
fyl2xp1
cmovs
sti
pushf
mov
daa
mov
xor
cmc
adc
cwtl
pop
outsl
sub
loop
xchg
es
outsb
mov
pop
mov
mov
shrb
cmpsl
jmp
mov
les
jmp
push
cmp
out
or
xchg
and
popa
adc
jb
ss
popf
mov
mov
gs
cmpb
andl
cld
xor
cmpsl
cltd
xor
push
ret
pop
imull
lds
test
xchg
jge
mov
or
cmp
ljmp
out
les
shll
or
mov
lods
shrb
add
mov
repz
cmc
cmpsl
test
xchg
mov
js
popa
mov
shrb
and
xor
jae
sti
and
pop
in
mov
pusha
lcall
jmp
imul
mov
mov
mov
or
repz
mov
cmpsb
loopne
pop
pop
push
movsl
mov
jmp
gs
mov
add
popf
and
or
lahf
mov
cmpb
jge
and
lds
mov
add
clc
addr16
addr16
or
pushf
cld
xor
add
in
dec
pop
call
shrb
in
test
dec
and
cld
sub
push
push
xor
sbb
imul
push
fwait
nop
inc
mov
sbb
adc
push
cmc
mov
cmp
cmp
mov
push
rclb
xchg
adc
pop
mov
lea
lahf
pop
mov
aaa
jno
push
dec
pop
rorl
mov
jecxz
mov
and
pop
pop
mov
mov
mov
cmovnp
iret
sub
stc
aam
or
leave
insb
mov
test
mov
shll
add
or
mov
loope
pop
stc
pop
inc
roll
sti
lods
adc
jnp
out
or
in
aas
inc
sub
aam
mov
ja
xchg
push
or
mov
mov
lock
pop
xor
pop
les
dec
loope
test
es
divb
push
xlat
sbb
sbb
rcr
xor
cmc
and
aaa
les
rcrb
xor
push
cmc
lahf
loopne
adc
dec
and
call
sbb
test
xchg
je
sub
das
scas
lret
lret
or
jb
pop
cmp
mov
loopne
push
push
stc
mov
xchg
fcmovbe
mov
daa
jnp
out
daa
mov
adc
jbe
gs
loopne
aas
int3
push
mov
or
inc
je
cli
pop
inc
outsb
cli
roll
icebp
cmp
movsb
jge
mov
jbe
inc
or
mov
lret
add
dec
jnp
imul
add
repz
mov
mov
mull
pop
in
dec
sarl
test
popf
leave
xor
in
into
scas
movsb
or
mov
ds
mov
stos
add
jnp
shrl
jne
in
test
ds
jb
fwait
in
clc
pushf
loop
std
fcmove
xchg
popa
hlt
dec
push
jp
cmpsl
into
xchg
jle
divl
lea
lods
xor
cmp
fdivs
or
jae
mov
push
inc
inc
ret
pop
mov
mov
sahf
sub
mov
addl
and
dec
std
cmp
add
addl
and
fs
int
push
aas
leave
rol
out
in
sub
jmp
push
mov
test
scas
mov
outsb
xchg
sbb
shll
and
xchg
addb
in
and
xor
sub
mov
and
mov
insl
jnp
into
push
mov
ss
jae
sub
out
fstpl
mov
push
mov
outsl
daa
nop
cmp
sub
sub
add
mov
dec
xor
dec
mov
mov
pop
andl
mov
in
scas
lcall
fwait
push
movsb
xchg
pop
in
cmp
negl
sbb
decb
jmp
repz
int3
fcmovne
or
jp
jp
pop
mov
pop
sbbl
test
movsl
or
push
mov
fs
loopne
jnp
adc
call
adc
jae
jo
les
xchg
cltd
std
bound
mov
push
sub
sbb
xchg
dec
popa
popa
mov
mov
or
ss
dec
push
fst
mov
mov
inc
pop
fwait
loop
xchg
xchg
push
cmpsb
sub
add
pop
push
fcomi
insb
jmp
insb
ljmp
pop
lret
lahf
ss
mov
and
push
clc
jae
xor
and
sub
mov
pop
mov
sbb
test
clc
cmpsl
or
in
add
ljmp
nop
xchg
cmp
xchg
or
aaa
js
cld
ljmp
xchg
add
aam
dec
adcb
mov
mov
push
iret
push
fcmovnbe
ret
adc
push
test
dec
adc
pop
loope
rolb
punpcklwd
in
adc
mov
data16
xor
in
lods
stc
xor
lods
jbe
jne
test
mov
mov
mov
test
dec
sbb
xchg
xchg
es
xchg
adc
xor
xor
es
mov
lods
mov
test
imul
push
lcall
and
and
lods
dec
insl
jae
sahf
pop
frstor
xchg
push
popa
xchg
jl
hlt
arpl
cmc
addr16
sub
inc
lahf
test
loope
and
fwait
leave
dec
cld
cmpsb
ljmp
aad
je
pop
mov
ret
lcall
mov
cmp
icebp
aam
sti
loop
mov
mov
pop
adc
xor
mov
mov
push
fnstsw
adc
sbb
push
mov
dec
jg
mov
ja
cmp
or
jp
pop
in
cmpsb
addr16
dec
mov
xor
adc
mov
scas
sahf
pop
call
or
adc
out
imull
jle
insl
ljmp
mov
pop
enter
scas
fcomps
or
jnp
xchg
or
mov
rcl
inc
les
js
pop
dec
insb
dec
or
xchg
andl
mov
pop
jb
jge
xchg
fistpl
jg
inc
inc
adc
rol
jbe
pop
inc
dec
push
and
mov
inc
jp
xchg
fwait
insl
cmp
call
test
push
sbb
jecxz
aas
pop
iret
sbb
push
xchg
jb
inc
cmpsl
ds
and
sub
push
cmp
dec
pop
in
cmp
ja
leave
and
pop
stos
add
int
ss
adc
sub
stc
xor
shlb
push
ret
jle
cmc
pusha
jmp
call
out
xchg
push
push
clc
xchg
xchg
lock
jmp
sub
icebp
push
repz
stos
cmpsb
ret
cmpl
adc
push
pop
cmp
dec
push
push
and
fucomi
mov
adc
jge
int
cmp
push
popf
push
dec
aas
mov
fistl
xchg
std
cwtl
lods
imul
sub
repnz
aaa
stos
adc
add
imul
test
mov
pop
fldt
icebp
adc
inc
jnp
jbe
ficoms
sbb
mov
sbb
xlat
add
stc
loop,pn
sub
and
jno
mov
dec
outsl
int3
xchg
outsb
aaa
notb
sbb
push
cmpsl
lods
lock
ljmp
test
inc
in
adc
ljmp
and
ret
inc
jmp
push
ficoml
out
inc
call
push
mov
subl
mov
and
enter
or
pop
push
and
mov
jg
daa
pushf
sub
add
lahf
sbbl
jl
popf
outsl
negb
bound
sbb
aam
les
or
or
stos
xor
sbb
popf
lock
pop
pusha
roll
dec
add
xor
push
mov
inc
scas
cmpsl
fisubrs
jg
es
les
hlt
hlt
lahf
dec
xchg
xchg
push
inc
push
and
jno
mov
ret
mov
cmp
sbb
cmp
xor
jno
fwait
mov
sti
add
insl
lcall
xchg
or
addr16
xchg
pop
nop
lds
pop
or
pop
test
cmp
jecxz
sbb
jno
mov
sarl
mov
lods
xlat
adc
leave
or
andl
movsl
outsb
in
dec
popa
icebp
jmp
add
jg
push
adc
push
int
push
loop
into
fdivrl
push
and
inc
mov
push
testl
cs
addr16
in
enter
sub
into
fnstenv
cmpsb
lahf
sbbb
fwait
lods
mov
lret
mov
mov
mov
fidivs
adc
sti
lods
push
fistpl
push
aam
adc
js
or
sub
dec
mov
mov
jl
sbb
fmul
mov
out
jb
or
dec
fbld
stos
inc
gs
popf
pushf
inc
inc
dec
ret
outsb
jb
sub
adc
lret
pop
testb
repnz
aam
das
mov
dec
mov
orl
fstpt
andl
scas
fldt
inc
xchg
cmp
jge
xchg
outsb
jbe
cmp
or
dec
mov
stos
mov
dec
cmp
fxch
clc
iret
mov
xchg
test
xchg
dec
cmpsl
xor
jae
or
loopne
mov
xor
xor
inc
aam
mov
movsl
flds
je
push
or
push
lods
lret
cltd
mov
dec
jbe
ror
mov
cltd
sahf
cs
push
mov
mov
mov
ret
adc
push
dec
inc
dec
adc
mov
fists
dec
or
pop
adc
add
bound
out
loop
jae
int
mov
lods
aaa
out
int3
and
pop
xchg
and
xchg
arpl
and
bound
addr16
loope
push
lret
push
mov
inc
mov
lahf
xchg
mov
popf
das
push
inc
mov
les
sub
scas
push
test
in
xchg
loopne
mov
pop
mov
aam
xor
xor
pop
adcl
xor
cmp
jbe
orb
lret
sahf
int
ljmp
ljmp
lret
movsl
in
xchg
imull
sub
xchg
repnz
xorb
add
lods
ja
and
xor
xor
ret
and
fistps
pop
outsl
sbb
push
fbld
and
int3
icebp
xchg
xor
mov
into
cmpsl
sub
xor
std
adc
mov
insl
ds
repnz
mov
cmpsl
cmc
inc
pop
mov
adc
adc
cli
cmpsl
fsubrl
ret
in
in
xchg
cmp
int3
ret
xchg
subl
out
add
xchg
clc
filds
jbe
nop
popf
pushf
fdivr
mov
pop
mov
mov
in
jno
sub
test
mov
lods
pop
fwait
mov
add
lds
fwait
adc
jb
push
in
mov
js
mov
dec
popf
xor
ret
dec
aad
pop
popf
mov
aaa
mov
rolb
add
sbbl
ja
adc
std
imul
icebp
ja
xor
push
xlat
or
inc
jnp
pushf
adc
cmp
jp
xor
dec
xchg
or
xchg
adc
cmc
push
add
hlt
mov
cmp
or
arpl
ret
mov
orb
jb
lahf
popf
lds
xchg
cltd
xor
fmulp
mov
jmp
dec
pusha
push
movsb
pop
scas
or
ds
push
inc
cmp
jo
jae
rclb
mov
push
aad
and
push
cmp
clc
push
cwtl
lret
jne
lea
inc
loope
movsl
jecxz
and
mov
test
fs
jge
push
xchg
imul
mulb
jbe
add
dec
test
sub
je
mov
push
lret
xor
mov
push
cld
je
loop
pop
mov
jg
cs
ror
scas
cmpsb
popa
in
fimuls
in
scas
mov
mov
sub
ret
and
outsb
negb
addb
fbld
mov
fcmovnbe
int3
mov
jb
in
jp
lahf
mov
jmp
int3
cmp
orb
add
je
mov
movsl
push
cmp
adc
out
inc
add
aam
or
xor
outsl
mov
cltd
sbb
mov
sbb
lahf
jne
int3
pop
pop
and
or
js
stos
fdivl
lea
push
push
xchg
lcall
inc
mov
push
jle
shlb
mov
jmp
xchg
movsb
xchg
pop
movnti
aad
loope
push
jo
repnz
ja
cmp
cmp
jne
cmpsl
pusha
mov
jmp
mov
adc
iretw
aam
js
adc
fidivrs
call
fisubl
dec
push
mov
push
jne
repnz
outsb
ret
lret
fstps
insl
push
shll
or
xchg
sbb
mov
inc
jecxz
pop
mov
inc
push
mov
sub
cmp
xorb
dec
ja
pop
outsl
xchg
push
fs
into
xchg
mov
lods
insb
rolb
inc
pop
lods
enter
ds
mov
mov
lret
pop
test
out
xlat
push
mov
jg
icebp
pushf
pop
or
adc
sarl
mov
mov
and
mov
sahf
add
ret
test
imul
add
xchg
or
xchg
sbb
loop
es
test
sub
stos
push
inc
lock
pushl
in
adc
and
mov
and
mov
add
gs
inc
and
sub
leave
cmp
jmp
not
aad
cmp
sub
mov
hlt
sti
cmpsl
dec
mov
test
enter
mov
aam
xor
mov
cltd
or
push
ljmp
or
dec
jnp
xchg
paddsw
add
jno
push
or
movsl
es
pop
mov
mov
test
aam
outsl
sub
test
inc
data16
lahf
and
cmc
loopne
pop
aas
mov
fsts
pop
insl
cmovno
hlt
jno
fdivl
jl
imul
movsl
mov
xor
test
inc
mov
in
jns
das
jno
push
push
jnp
mov
push
mov
pop
mov
lretw
dec
gs
push
loope
xlat
test
or
sub
add
mov
push
xchg
pop
ja
rcll
pop
lds
outsl
imul
push
or
mov
add
mov
cmp
std
outsb
xchg
fs
int
inc
in
or
mov
xor
cltd
pop
or
pop
jno
push
aaa
lods
pop
movsl
xor
mov
mov
gs
xchg
cmp
jecxz
mov
lods
pushf
pop
mov
ljmp
repnz
dec
enter
cmp
xchg
cmp
jge
fcoml
mov
je
cmp
jl
push
sbb
call
sahf
sbbb
icebp
mov
lcall
lock
ja
inc
test
ret
mov
mov
movsb
lcall
mov
sbb
test
fisttps
sarb
neg
xchg
mov
xchg
repz
adc
dec
flds
mov
sub
in
xchg
call
cmc
es
xchg
sarl
test
add
ss
mov
xlat
pusha
pop
out
clc
iret
push
jg
pushf
cmp
inc
sbb
rolb
aad
loop
enter
or
push
dec
es
jecxz
cmpsb
sbb
mov
testb
outsl
jnp
or
outsl
and
test
mov
push
or
xchg
repz
or
xchg
cmp
adc
jl
cwtl
push
xchg
or
mov
and
sbb
or
rorb
mov
mov
push
mov
ret
inc
cmp
and
push
inc
xchg
push
inc
fs
aam
adc
fimuls
fucom
add
sbb
pop
xchg
jp
xor
loope
jp
jb
cmpsb
jno
scas
stc
dec
xchg
cmp
popa
sub
jnp
jmp
lahf
or
in
jno
pushf
pop
fs
out
push
repz
add
add
es
dec
cmp
xchg
lret
pop
and
push
mov
push
sbb
or
je
fs
sbb
andl
push
inc
jge
adc
andl
mov
subb
mov
adc
fs
xchg
adc
call
leave
push
cmc
aas
stos
shld
repnz
shrl
adc
pop
jl
push
mov
bound
inc
jnp
xchg
sbb
and
mov
mov
xchg
flds
lret
add
rorl
pop
je
pop
jne
push
sbb
adc
cmpsb
jmp
out
loopne
fsubs
addl
mov
js
mov
testl
mov
les
sbbb
push
push
jae
int3
inc
sbb
dec
test
insl
sti
mov
pusha
jle
cmp
sarb
das
ljmp
sti
lret
std
repnz
sarl
dec
lcall
rcrl
add
jb
lods
pusha
fs
sbb
add
in
aam
cmp
hlt
std
int
call
xchg
pop
fidivl
fiaddl
jmp
sub
mov
or
sbb
test
test
pop
leave
out
incl
clc
jmp
push
jmp
daa
lret
xlat
push
adc
jp
xchg
jg
fstps
pop
push
lock
sahf
ljmp
fsubs
jo
adc
and
mov
adc
ss
jge
pushf
in
inc
jecxz
inc
insl
xor
pop
cmpsl
adcl
aas
or
or
hlt
mov
or
insl
xchg
in
and
lods
test
cs
adc
sbb
shlb
fidivrl
scas
pop
jg
pop
or
cs
fcom
cmp
mov
sub
dec
cmp
dec
insl
cli
jb
mov
ficoml
jae
aam
add
test
sub
jl
inc
pop
and
or
js
out
xor
sub
dec
ss
sti
fisubrl
cmp
mov
lahf
jno
sbb
ret
inc
xchg
lds
hlt
and
roll
dec
outsl
inc
mov
adc
ja
das
fldcw
loope
lahf
data16
jecxz
or
mov
inc
cmp
xor
loop
loop
cltd
je
pop
mov
aas
add
arpl
cli
jg
ficompl
xor
mov
test
xor
repnz
cmp
stos
ret
push
xor
xor
xchg
or
sar
push
in
orl
xchg
pop
sub
push
clc
jbe
cmp
clc
mov
lods
dec
push
pop
fadds
test
jg
xchg
arpl
ljmp
stc
pop
mov
sbb
adc
mov
mov
sbb
repz
dec
mov
mov
lods
addr16
mov
xchg
movsb
inc
sahf
mov
push
addr16
out
sub
frstor
xchg
lcall
fsubrl
mov
pop
jmp
cmc
mov
sub
aam
jg
lret
lcall
repnz
push
inc
sub
mov
ret
cltd
jle
fisubl
dec
adc
pop
call
stc
pusha
and
imulb
into
mov
jbe
push
xchg
dec
pop
sub
repz
dec
in
mov
and
arpl
pop
mov
call
fmull
lret
mov
addr16
or
mov
sbb
daa
cmpb
push
aas
push
jmp
push
lahf
sub
jmp
adc
js
imul
inc
mov
cwtl
jb
imul
into
mov
call
aas
sahf
or
or
inc
aas
mov
mov
into
xor
add
pop
test
inc
mov
scas
pop
inc
jne
add
xchg
enter
sub
xor
mov
test
xchg
je
pop
cld
lods
sbb
pushw
and
mov
sub
inc
out
xchg
clc
jg
push
es
outsb
sub
les
xchg
mov
test
ret
test
repnz
mov
cs
test
bnd
movsb
shl
jno
add
shll
aas
cmp
cmp
mov
cmpsl
shrl
jmp
js
test
pop
dec
mov
cmp
jecxz
mov
aas
jno
pop
testl
mov
lock
xor
in
cmp
xor
jne
cwtl
add
push
imul
pop
cmp
mov
pop
shll
pop
lret
cwtl
sub
inc
test
dec
and
push
mov
add
sbb
in
rolb
ret
in
push
ftst
and
outsb
and
cs
pop
or
test
mov
sub
jg
mov
imul
xchg
fdivrl
inc
dec
mov
jl
add
push
xor
jb
test
out
sti
scas
shll
xchg
js
pop
cmp
cmp
xchg
std
scas
lods
xchg
aas
mov
cmp
pop
cmpsl
xor
in
pop
rcrb
cmp
cltd
scas
dec
push
push
mov
inc
ss
push
scas
mov
ljmp
into
and
aad
inc
sub
mov
dec
in
lock
orb
xor
pop
lret
pop
inc
push
nop
leave
add
sub
pop
mov
into
fcoml
cltd
test
cwtl
mov
mov
in
subl
in
in
aam
and
jns
add
adc
cmpl
out
js
jno
ds
mov
push
int3
pushf
scas
or
fisubrl
or
mov
out
cmp
ss
lcall
sbbb
arpl
adcl
mov
sbb
xor
push
push
and
and
cmp
outsl
adcb
mov
mov
xor
shlb
cwtl
xchg
mov
arpl
ror
adc
scas
xor
mull
adc
test
daa
mov
addr16
mov
rcr
stc
pusha
xchg
out
into
test
adc
push
lcall
and
imul
adc
mov
pushf
fidivl
push
jb
lcall
dec
adc
push
sahf
jg
mov
ret
stc
dec
fsts
or
adc
lea
fs
dec
js
or
lea
lea
inc
push
mov
xchg
push
out
lret
sub
out
test
mov
mov
cmp
xchg
mov
mov
mov
ss
inc
or
jne
test
addr16
add
xchg
sub
mov
jbe
xchg
mov
cmp
arpl
bound
aam
into
jae
ret
ror
jbe
inc
out
jbe
jb
mov
outsb
mov
lods
shll
dec
xchg
enter
out
adc
js
fcomp
and
movsl
cltd
popf
fists
cli
pop
in
jae
mov
xchg
mov
fisttpl
push
sub
or
mov
dec
dec
ljmp
cli
lahf
test
jecxz
mov
int
add
mov
mov
jno
ret
stc
arpl
xchg
popa
or
leave
and
loop
and
inc
or
int3
and
lods
cmpsl
lea
mov
cmp
dec
leave
xchg
dec
mov
mov
jb
adc
test
sub
outsb
outsl
orl
adc
jge
xlat
lahf
insb
rcrb
jle
jb
sahf
cmc
sahf
jne
jnp
rorl
aaa
cld
popf
cmp
mov
shr
cmp
jb
fstl
mov
sbb
dec
jae
adc
gs
lahf
mov
adc
sbb
leave
sub
pop
or
ret
adc
int3
pop
xchg
aaa
aam
mov
inc
mov
fs
imul
icebp
dec
iret
sub
popl
xchg
mov
push
or
pop
push
and
jl
push
fs
nop
push
push
roll
mov
repnz
movsl
fdivrl
jno
push
inc
pusha
arpl
cmp
xlat
sarl
inc
sbb
push
es
dec
loopne
mov
fldcw
mov
inc
and
sahf
and
pop
xor
lock
push
outsl
ficoml
jb
inc
scas
inc
jb
push
test
cwtl
bound
and
mov
jno
cmc
add
fwait
xchg
dec
mov
inc
aam
pop
popf
xor
mov
mov
rcl
lcall
insl
aam
xor
and
shlb
lahf
ds
or
or
fs
dec
inc
jnp
add
hlt
into
mov
sub
lods
cwtl
xor
fsts
mov
lea
ret
jge
cmpsl
push
int3
lret
xor
insl
mov
stc
les
mov
sbb
pop
shl
stc
xchg
cmp
out
mov
mov
cs
adc
cmpsl
pop
mov
mov
push
addr16
jl
pop
mov
fnstsw
cmp
push
shlb
push
mov
pop
int
imul
bound
mov
repz
daa
pushf
xchg
loope
xchg
repz
fnsave
insl
add
iret
mov
lods
loope
hlt
jo
xor
insl
adc
pop
aam
xor
or
lahf
dec
cwtl
movsb
or
imul
in
and
out
jo
fld
push
shlb
cmpsb
jg
nop
scas
lea
jmp
inc
mov
jge
jns
cmc
mov
pop
mov
in
popa
cmpb
add
enter
cmp
xchg
adc
mov
lods
in
jae
in
aam
stos
push
les
pop
cmp
xor
xchg
fidivrs
cld
aaa
outsl
rcr
add
mov
shrb
imul
xchg
dec
xor
xor
or
sub
rorl
and
pop
mov
fistps
push
mov
jecxz
pop
jg
iret
clc
jecxz
push
fisttps
shrl
nop
add
sarb
aas
xchg
into
ret
mov
jno
clc
and
add
imul
ret
pop
xor
mov
add
jp
inc
imul
pop
js
jae
sbb
pop
int3
push
pop
cmp
jae
cmp
inc
fdivp
outsb
jbe
cwtl
sbb
movsl
sbb
push
and
mov
aas
fs
sub
pop
cmp
and
into
xor
cmp
inc
les
and
jmp
cli
push
push
add
pusha
lods
jle
push
in
jnp
add
cmp
mov
fistpl
cld
jl
mov
scas
mov
shlb
jp
adc
sbb
int3
jmp
adc
pop
movsb
xchg
ret
iret
aam
mov
inc
cmp
adc
xchg
or
aas
jns
call
in
add
ret
mov
mov
inc
je
pop
or
pop
je
sbbb
xchg
cwtl
or
dec
pusha
jle
mov
call
in
jbe
ja
jne
aaa
jne
fldt
test
jne
dec
xchg
aad
les
jmp
sti
cmp
std
push
and
add
leave
xchg
int
insb
jmp
stc
stos
in
cltd
xor
movsl
lahf
add
fldenv
and
das
push
add
xlat
jo
pop
cld
cmpsl
xchg
nop
xor
push
jno
or
lods
dec
ds
iret
inc
addl
fistl
push
shrb
outsl
sbb
lds
push
fstpt
jp
leave
loope
insb
push
cwtl
into
jmp
sub
outsl
push
sbb
dec
out
roll
adc
sub
push
cs
and
mov
ret
xchg
mov
test
sbbb
lcall
add
jae
sbb
aaa
jnp
fbld
in
and
dec
notb
test
int
hlt
test
xchg
sub
push
loopne
aad
pop
jnp
mov
jg
into
mov
daa
pop
loop
ss
mov
adc
fidivs
popa
mov
cs
loopne
icebp
xchg
jecxz
sub
mov
mov
jle
or
xor
not
xchg
loope
adc
push
push
sub
cld
je
outsb
mov
out
or
addr16
mov
push
lds
movb
aaa
out
movsb
ret
sub
push
in
cmpsb
ds
je
aad
sbb
ret
adc
add
pop
ret
and
pushl
push
std
pop
sarb
loope
mov
cmp
aad
scas
push
ja
and
fwait
insb
xor
fstl
adc
int
sti
inc
in
in
jl
mov
lds
cmp
add
stos
fwait
scas
rclb
sub
add
mov
dec
jge
jnp
ja
mov
js
imul
pop
pop
rcr
jge
sub
push
inc
push
jns
sub
jne
xchg
inc
hlt
aaa
mov
push
jmp
push
test
adc
xchg
and
cwtl
insb
adc
jp
or
sbb
pop
jl
aas
or
shr
test
cmp
dec
xchg
mov
cmc
push
mov
fisttps
mov
inc
dec
shr
enter
ret
jb
into
imul
push
imul
cmpsl
dec
and
and
cmp
or
mulb
jno
mov
pop
gs
cmc
js
pop
push
and
lock
pop
inc
dec
icebp
push
sbb
push
jg
mov
sahf
test
ss
stc
loopne
in
xchg
push
pop
mov
pop
and
test
in
mov
and
add
xchg
xchg
xor
push
test
cmp
lret
pushf
rcrb
inc
imulb
in
xchg
daa
jnp
lock
xchg
pop
inc
ds
pop
out
shl
xor
and
arpl
cmc
call
ja
pop
insl
cltd
jb
mov
gs
nop
lds
fmuls
pop
push
lds
das
ja
and
ljmp
add
jecxz
push
pop
stos
jg
mov
mov
dec
push
lret
shr
cwtl
or
pop
pop
shll
cmp
loopne
or
sub
lret
jo,pt
clc
mov
dec
nop
scas
fwait
rol
cs
fcompl
or
mov
std
mov
pop
cld
js
sub
sub
pop
pop
dec
push
jmp
mov
loop
sbb
mul
into
imul
jae
aam
mov
inc
enter
inc
jae
sbb
rcrl
aaa
jecxz
add
iret
out
insl
sub
sbb
mov
inc
lods
jbe
fbld
aaa
out
pushf
sbb
push
mov
cmp
fs
lock
ljmp
cmp
ret
dec
popf
mov
pusha
xor
scas
aam
out
out
fwait
mov
or
mov
stos
jnp
rcrb
or
rorl
lea
imul
dec
repz
data16
xor
lds
cld
xor
mov
and
in
add
xor
lret
bound
jb
jne,pt
dec
sti
mov
jle
test
lds
mov
ret
int3
nop
jne
cmp
pop
adc
stos
sahf
les
inc
xor
jecxz
scas
mov
xchg
adc
sub
cli
mov
dec
mov
mov
jno
pop
pop
xor
mov
pop
imul
pop
jge
pop
mov
push
cmp
stc
cmp
loope
rorl
icebp
jae
add
cmp
mov
rcll
ds
lcall
in
push
or
imul
movsb
mov
addb
ret
ret
mov
mov
ss
adc
stos
mov
out
pop
mov
pop
cltd
push
jnp
std
jle
sub
dec
jbe
jle
gs
cmc
push
popf
push
les
cmp
xchg
xchg
es
shr
jo
push
rorl
aas
repnz
pop
xchg
js
cmp
cld
movsl
jg
lret
lahf
iret
mov
dec
and
inc
mov
mov
ficoml
hlt
and
clc
cld
shll
cmp
cmp
dec
mov
mov
mov
movsl
addr16
xchg
xchg
adc
sub
movsl
and
push
dec
push
mov
mov
rorl
lea
or
sub
test
fldenv
push
out
imul
xchg
sub
xchg
mov
jmp
push
decb
aas
sub
xchg
mov
lds
push
mov
frndint
outsl
xor
mov
outsl
jns
mov
outsb
dec
inc
test
jno
dec
loope
lcall
inc
loope
movsb
dec
xor
loopne
js
fimull
mov
push
mov
xchg
inc
shlb
frstor
aas
inc
push
shl
shlb
lahf
mov
push
in
jge
and
xor
sub
cmpb
xor
mov
xchg
xor
in
and
or
fwait
pop
ret
stos
push
gs
loope
lods
xor
pushf
mov
insl
xlat
ds
ret
add
out
xchg
pop
sub
sub
mov
jae,pt
loop
xor
leave
pop
dec
movsl
ret
inc
push
mov
adc
or
das
in
jecxz
icebp
ret
xor
mov
sbb
add
jbe
and
repz
sub
leave
dec
fistl
adc
or
movsl
repnz
fdivrs
pushaw
sbb
xchg
cwtl
fists
int
cmp
test
xchg
call
cs
fcompl
mov
stos
mov
jnp
aad
adc
aam
addr16
sub
ja
ret
or
stos
inc
shrl
lret
add
in
and
insb
shll
mov
repz
hlt
xchg
mov
leave
pushf
enter
lret
pop
adc
cmp
lods
adc
xor
adc
dec
mov
or
lcall
cmp
xor
jnp
mov
loope
dec
es
scas
outsl
repnz
sub
and
rcrb
push
fcmovnb
push
inc
dec
outsl
fwait
sbb
ret
lahf
nop
push
fisttpl
fldenv
pop
clc
incl
scas
dec
and
cmp
pushf
inc
or
out
fucomi
push
jno
insl
inc
dec
in
mov
out
test
js
pop
mov
mov
fwait
js
inc
nopl
dec
jp
xchg
cmp
cmp
lea
fsubrs
mov
push
mov
lock
cld
cmpsl
push
sbb
sub
fldcw
mov
mov
pop
aam
cltd
je
add
sti
jae
xchg
adc
cmp
mov
lock
or
xor
mov
int3
shll
sbb
fbld
push
xchg
dec
fdivl
cmp
repz
inc
pop
and
sub
push
sti
mov
fldenv
aas
outsl
addr16
cmp
vmread
adc
pop
inc
pop
jle
stos
or
add
pusha
sbb
dec
xor
ja
fstl
addr16
xor
mov
rorb
ss
pop
in
ja
pop
test
lcall
test
out
imul
push
push
adc
in
cmpsb
inc
in
fisttps
push
rcrb
pop
divb
call
adc
jg
adc
icebp
mov
pop
repnz
ficompl
mov
sub
jecxz
sbb
stc
sbb
fdivrl
jle
lahf
dec
test
ljmp
xchg
adc
outsb
mov
mov
xchg
jmp
xchg
orl
pop
add
fistpll
rep
fwait
test
xchg
insb
outsb
pop
repnz
add
inc
sbb
fprem
iret
pushl
into
ret
push
fsts
push
lods
lcall
xor
fisubrl
or
xor
imul
in
outsl
and
rcrl
lret
or
sbb
ret
ljmp
jl
jle
xchg
push
stos
rcrb
adc
cltd
lcall
lcall
lret
add
pop
jmp
aas
repnz
fs
or
imul
xchg
ret
jmp
jge
es
inc
lods
push
xlat
add
sub
repnz
inc
jns
sbb
inc
lods
outsb
jg
shll
push
pop
gs
add
lahf
mov
cltd
in
sarl
cmp
ljmp
cmp
stos
cmpb
jmp
mov
adc
dec
iret
add
sbb
adc
dec
cmp
scas
adcb
jno
jbe
xchg
sub
js
jg
rorb
xchg
mov
xchg
stos
sub
hlt
xor
add
pop
rcrl
dec
xchg
pop
sbb
mov
push
bnd
inc
and
jne
sub
data16
or
repnz
into
mov
das
inc
and
lahf
or
jp
aad
jg
icebp
fisubrs
and
push
outsb
jmp
nop
xchg
lds
in
push
call
dec
aas
xchg
adc
lcall
push
jae
dec
mov
out
in
lret
subb
xor
sti
sbb
pop
sub
jno
sbbl
int3
mov
lock
xor
in
mov
iret
ss
inc
mov
xchg
je
adc
ficoms
xchg
dec
push
ret
fnstenv
sbb
fidivs
or
ret
imul
jo
pop
mov
add
data16
fldenv
ja
aaa
dec
xchg
rclb
andb
dec
mov
push
das
fidivrl
jge
adc
in
adc
xchg
in
fsub
inc
sub
subl
repnz
arpl
imul
movb
jg
adc
xchg
sarb
xchg
movsb
cmc
into
scas
add
arpl
inc
xchg
add
mov
pop
mov
fcoml
push
cs
xor
fldl
idivb
dec
dec
out
dec
push
mov
inc
xchg
rcll
pop
rclb
cmpsb
imul
mov
inc
ffreep
mov
and
ja
ss
cmp
sub
sub
cwtl
push
cmpsb
inc
out
xchg
adc
test
jo
shr
fwait
loop
sub
adc
sbb
or
int3
out
hlt
enter
and
sbb
and
pop
and
bound
add
jecxz
push
jecxz
dec
test
subb
pop
cli
repz
mov
mov
jb
mov
fldenv
and
inc
push
sub
imul
pop
dec
mov
xchg
in
es
loope
pop
sbb
scas
cmp
fsubr
jp
inc
sub
pop
mov
notb
je
push
rclb
dec
cmc
jo
stos
dec
mov
roll
xchg
js
scas
data16
inc
popl
pop
hlt
repnz
push
outsl
lds
xor
push
xchg
mov
popa
das
pop
push
mov
test
mov
push
test
loop
repz
cmpsl
add
or
and
cld
out
pusha
cmp
xor
aam
mov
ficoml
push
insl
scas
cmpsb
scas
scas
popl
xchg
pushf
mov
push
dec
popf
int3
xchg
cli
push
stos
pop
push
ljmp
pop
mov
push
arpl
adc
xor
imul
rclb
mov
and
add
test
mov
jbe
cli
shl
xor
out
int3
sub
xor
xor
in
jno
ljmp
sub
enter
jp
sub
adc
mov
xlat
dec
sub
out
sti
stc
mov
cs
in
pop
cld
or
dec
pop
jbe
jmp
adc
cld
mov
ljmp
xchg
or
mov
iret
call
gs
xor
dec
add
test
xchg
xchg
rclb
fprem1
cltd
jno
mov
sahf
mov
xor
hlt
push
rcrl
push
sbb
lods
and
mov
push
mov
and
int
js
stos
lahf
cmp
mov
adc
mov
rorl
lcall
test
imul
cmp
adc
stos
fucomip
mov
imul
jb
or
daa
or
scas
mov
pusha
lods
stos
or
inc
push
mov
fs
and
mov
ljmp
push
inc
shll
in
arpl
imull
fnstsw
cmp
jmp
mov
sub
xchg
cwtl
dec
es
in
pop
or
lret
xor
call
std
int
fistpll
and
movl
int3
jp
aaa
ds
xchg
rorl
iret
rcll
in
leave
popf
push
repnz
cmp
lds
push
adc
lea
mov
cmp
test
xchg
in
std
cs
mov
pop
fnstenv
cmp
lcall
cmovo
mov
fmuls
add
pop
ds
gs
or
daa
xor
xor
in
aam
sub
xor
movsb
fildl
xor
add
sub
push
mov
fdivrs
add
leave
push
sbbb
mov
aad
pop
int3
add
leave
shll
jp
pop
and
out
inc
insb
shrl
and
inc
sbbl
or
mov
push
add
sti
in
cld
cltd
hlt
dec
jae
inc
xor
xchg
test
jg
add
mov
push
xor
sysenter
jp,pt
pop
pop
sbb
dec
lret
push
adc
lods
call
aam
scas
inc
inc
stos
mov
lea
pop
fldcw
or
pop
aam
int
hlt
popf
jge
sbb
inc
cmp
movsb
into
sbb
mov
dec
mov
in
into
popf
sub
fistps
lods
adc
mov
jbe
push
insl
cmc
xor
int3
test
or
imul
lods
lret
imul
sub
mov
test
sub
xor
mov
int
hlt
clc
mov
fldenv
mov
inc
add
mov
pop
push
sub
jle
xchg
xor
xor
jb
test
jp
cmp
mov
enter
loop
or
scas
aas
ds
adc
dec
jbe
cmp
stos
dec
test
push
xorl
test
aam
out
data16
clc
cmp
pop
or
cmpl
and
notl
insl
jo
inc
arpl
mov
mov
fdivl
sbb
or
adc
out
mov
sahf
mov
dec
jnp
or
stc
popa
into
loop
imul
mov
jle
mulb
mov
fsubrs
lret
rclb
pop
lods
ljmp
call
int3
push
fdivl
aad
and
mov
orl
shll
out
aam
inc
push
lret
push
dec
cmc
jmp
sahf
gs
nop
in
mov
dec
cmp
stos
mov
push
xchg
inc
adc
imul
in
mov
jbe
inc
cmp
xchg
jp
add
pop
jno
push
pop
jecxz
mov
bnd
mov
jno
cmc
dec
aam
fdivp
jo
in
and
sbb
mov
ret
ljmp
jbe
jp
mov
addr16
push
sbb
in
cltd
dec
enter
add
cmpb
xor
xor
daa
add
mov
pusha
mov
pop
adcl
call
rorb
sub
movsl
in
cltd
in
sub
mov
aam
and
aam
adc
int
push
test
out
push
xor
loopne
ficompl
mov
push
cmp
jno
mov
in
jg
movsl
or
test
jnp
int3
pop
pop
nop
push
add
lock
fwait
adc
dec
dec
cli
les
mov
or
jecxz
pop
pop
mov
pop
stc
fsubl
mov
loope
inc
cwtl
gs
or
push
xchg
ljmp
lods
dec
mov
mov
inc
in
scas
arpl
nop
push
or
cmp
dec
jnp
jbe
mov
lahf
push
cmpsl
loope
dec
xor
jle
cld
pop
jecxz
xor
ljmp
shrb
scas
xor
adc
jne
sbb
inc
test
dec
adc
add
fdivs
jae
addr16
icebp
jmp
mov
loop
pop
rcl
xchg
fstpt
repz
and
pop
frstor
ds
inc
iret
mov
cmp
popf
sub
pop
jp
pop
xor
or
lcall
fmuls
fiaddl
ss
inc
rcrb
cmpsl
jb
jbe
in
mov
dec
test
add
jp
rorb
scas
inc
icebp
lcall
mov
imul
les
ret
dec
cmp
outsl
js
or
xchg
mov
imul
outsb
jb
xchg
cmpsb
adc
jp
cwtl
or
dec
or
enter
daa
pop
cmpsl
loope
imul
sbb
popf
in
mov
enter
adc
ds
inc
inc
add
iret
vmaxss
dec
mov
pop
int
hlt
scas
or
dec
or
inc
test
int3
popa
sub
mov
dec
popf
insb
jno
push
jns
push
js
sbb
pop
jns
jg
iret
ss
push
mov
nop
imul
out
movsl
mov
stc
mov
jl
ja
cmp
lahf
cmp
shll
cmp
sub
lahf
inc
xchg
mov
xorl
outsl
push
std
fcmovne
jae
mov
mov
push
iret
pop
fisubrs
cmpsb
in
mov
ret
mov
out
or
fnclex
mov
fcompl
jg
mov
in
pop
frstor
pusha
imul
out
orb
frstor
adc
in
aad
mov
sub
sub
xor
stos
out
call
leave
xchg
jne
add
aad
mov
pop
sti
hlt
mov
or
jecxz
aad
lcall
sub
push
ja
jp
ret
shlb
fisttpl
andb
xor
xchg
mov
add
jecxz
xor
mov
in
pop
xor
in
lcall
icebp
clc
fadds
stos
scas
cmp
pop
cmpsb
aam
arpl
repz
fwait
imul
mov
dec
xor
fwait
push
mov
test
xchg
dec
push
dec
jmp
dec
and
jne
std
cmpsl
push
lods
hlt
mov
xor
insb
mov
mov
test
mov
stos
inc
pop
xchg
push
cld
push
in
mov
scas
jmp
sbb
mov
push
cltd
cmp
mov
outsl
in
mov
jg
test
imul
shrb
and
adc
cmp
imull
notb
xchg
mov
rcr
add
sbb
jo
dec
or
add
jge
stc
stos
mov
in
jns
adc
jbe
lret
and
mov
repnz
jmp
xor
adc
xchg
cld
clc
jl
xchg
pushf
inc
xchg
hlt
pop
pop
int
pop
out
shlb
mov
mov
lret
out
push
cmpsl
xor
inc
or
jnp
mov
psllq
adc
fisttpll
mov
mull
pop
adc
outsl
hlt
pop
pop
jne
jge
jge
mov
mov
in
pop
iret
ja
jmp
jmp
add
mov
and
xchg
call
out
and
rorb
ret
adc
test
push
mov
mov
dec
ljmp
leave
pushf
outsl
xor
and
push
fildll
in
cmp
add
add
movsl
pop
mov
fwait
inc
or
mov
loopne
stos
cmp
fwait
leave
dec
pop
mov
pop
sub
fdivrl
data16
mov
dec
outsb
mov
inc
and
push
cmp
dec
cltd
repnz
outsb
jl,pn
adc
jp
rcrl
fldt
mov
sub
xchg
xor
push
pushf
cmp
mov
jno,pt
xor
cmpsl
ljmp
imul
jns
sub
and
or
inc
push
dec
sub
fimuls
dec
sbbl
lret
sbb
daa
sti
inc
push
sti
mov
dec
and
add
stc
add
fidivrs
xchg
es
pop
into
xor
mov
std
mov
fwait
pop
mov
xor
icebp
repz
imul
test
xor
out
inc
sub
and
test
lret
paddusw
testb
xor
rorb
jae
mov
in
std
dec
push
shl
adc
mov
and
inc
or
add
sbb
frstor
add
and
lods
jnp
xchg
xor
xchg
fists
into
filds
mov
xchg
lods
hlt
les
mov
push
bound
pop
xchg
negl
pushf
cmp
adc
outsb
mov
fiaddl
push
cwtl
mov
movsl
sub
mov
iret
lahf
test
cmpsl
lods
and
jmp
xor
fildll
fdivs
and
xchg
ds
or
daa
adc
adc
mov
dec
scas
push
aad
testb
rcr
jb
scas
popa
and
mov
lret
repz
fildll
mov
mov
ljmp
inc
adc
in
xor
notl
jp
negb
mov
push
cmp
sub
add
ss
add
jg
dec
or
in
sbb
cmp
xor
lcall
mov
popa
fsubp
jmp
in
pop
bts
dec
pop
decb
jl
js
pop
mov
sbb
mov
sub
fisubrs
cmp
arpl
sub
fwait
xlat
mov
mov
ss
xor
shll
out
cmc
xchg
lcall
pop
push
xchg
mov
mov
sub
test
outsb
push
push
mov
pushf
pop
int
fdivl
jo
push
mov
in
cmp
and
push
push
xchg
subl
xor
andl
out
add
test
imul
sarb
loop
in
dec
mov
out
and
dec
clc
lods
nop
test
insb
jns
loop
xor
jl
push
rcrb
gs
cmp
lahf
add
sahf
xchg
clc
aas
movsl
test
pusha
test
addr16
cmp
or
cmpsl
mov
jne
mov
push
lcall
xor
outsl
pop
mov
inc
aaa
jmp
adc
fdiv
adc
je
imul
fdiv
and
add
jecxz
pop
mov
xlat
mov
xchg
jno
insb
es
inc
xlat
loopne
fdivrl
xor
out
adc
xor
sbb
push
jo
xor
enter
ds
gs
in
clc
sbb
mov
lahf
sbb
fistps
sbb
cwtl
dec
and
mov
out
test
jmp
mov
loop
mov
inc
cltd
mov
or
and
in
stos
in
mov
cld
outsb
or
sub
xchg
out
scas
les
hlt
or
out
inc
xchg
adc
repnz
jmp
mov
mov
push
daa
push
arpl
lcall
aam
fnstcw
lods
scas
pop
negl
jno
test
pop
xorb
test
insl
int3
es
mov
js
out
mov
repnz
aad
push
sahf
pop
add
dec
sahf
iret
loope
inc
imul
mov
out
rcl
lret
jg
sbb
lret
in
push
or
cmp
stos
mov
std
shrl
jmp
dec
dec
jmp
std
ret
mov
imul
inc
pop
mov
adc
cmpl
sbb
xor
push
push
psadbw
rcll
mov
dec
fdivl
mov
and
insb
xor
xchg
mov
mov
or
imul
in
add
cmp
fdiv
and
leave
mov
test
std
fisubrl
mov
insl
sbb
and
out
fbld
stc
stos
sub
jmp
adc
xor
bound
add
pop
hlt
sub
push
test
lahf
mov
adc
pop
mov
xor
inc
push
mov
jecxz
fsubs
add
call
scas
fwait
cli
jbe
lea
xorb
mov
or
cld
outsb
mov
gs
int3
mov
idiv
xlat
shl
sub
cmpb
mov
popl
push
xchg
call
sbb
movsl
cmp
xchg
lcall
xchg
cmpsl
fdiv
dec
ret
shll
or
and
shlb
mov
jp
fcmovbe
mov
dec
mov
rol
insb
in
adc
fists
into
ds
and
push
mov
jno
hlt
outsb
and
mov
lcall
and
sbb
inc
loopne
push
sub
test
or
jne
loope
jge
popa
lcall
mov
in
cmpsl
cmp
mov
js
mov
add
adc
mov
std
jge
xchg
mov
repz
push
xchg
fiadds
loopne
fdivr
data16
and
jbe
lret
test
jo
xchg
cmp
add
in
fcoml
incl
fidivl
sub
mov
push
inc
jno
cltd
cmp
push
movsb
iret
gs
add
dec
cmc
dec
fs
xor
add
sbb
dec
in
pop
adc
cmpsl
or
js
add
mov
pop
add
add
popa
mov
jg
scas
lea
dec
mov
jno
add
sbb
mov
stc
ja
inc
in
icebp
insl
sbb
orl
dec
incl
ja
xor
iret
pop
dec
daa
shrl
outsl
filds
pop
jg
dec
lret
push
stos
xor
rcrl
je
cmp
dec
jge
rorb
push
das
inc
cmpsb
push
dec
adc
mov
lds
repz
inc
hlt
push
push
out
in
push
mov
int3
lea
insl
push
xchg
repnz
ss
inc
dec
aam
arpl
pushl
and
test
mov
jmp
into
stos
scas
fsubrp
ret
or
mov
les
dec
stc
add
sub
mov
adc
aaa
xchg
mov
sub
sub
outsb
jns
pop
or
xor
mov
add
fadds
insl
adc
mov
or
push
push
xlat
sub
ljmp
adc
xorl
jge
mov
jg
mov
jmp
jp
mov
mov
movsb
jp
pop
lret
inc
insl
mov
jnp
loop
mov
sub
iret
loopne
lahf
pop
incl
in
lock
hlt
clc
popf
ds
das
lock
mov
xor
in
cmp
and
arpl
pop
cld
dec
pop
or
int3
fbld
jmp
xchg
jae
test
jge
lret
mov
jns
mov
lret
inc
popa
jno
cmp
out
add
in
sub
add
and
dec
pop
scas
mov
xchg
and
jbe
xchg
sub
scas
fcoml
mov
loope
js
or
mov
fdivrs
and
add
dec
loop
adc
jge
shrb
cmpsb
and
fisubrs
sub
iret
and
repz
mov
xchg
inc
xchg
addl
xchg
mov
adc
jle
frstor
dec
cmp
mov
lcall
sti
sub
adc
adc
repnz
repz
arpl
jp
lret
rcll
rclb
dec
jnp
mov
out
lea
cltd
jb
in
test
sub
xchg
lods
rclb
fbld
push
add
loop
iret
pop
or
scas
or
shl
fsubrs
xor
dec
sahf
das
jo
inc
dec
fmull
mov
xlat
or
cmp
mov
xor
pop
das
xor
mov
mov
push
add
out
mov
shrl
mov
jmp
push
fdivs
test
xchg
or
stos
bound
fnstcw
pop
and
sub
mov
testl
stos
mov
push
pop
cwtl
movsb
ss
or
inc
test
or
repz
sahf
pop
push
je
cmp
into
push
sbb
sbb
setl
push
arpl
pop
cli
or
leave
xlat
jmp
std
pop
out
xchg
fisttpll
xchg
sti
fildll
add
adc
js
sbb
fadds
ret
gs
mov
jle
mov
jne
rorb
sti
mov
lock
lock
and
mov
add
jbe
sub
sub
sarl
mov
cltd
mov
sahf
inc
jl
jg
fwait
int3
cmc
shlb
xlat
cmp
inc
jne
xchg
jge
dec
mov
ds
fsubrl
add
ds
in
push
lea
aas
jp
out
inc
pop
into
sahf
jne
in
je
fnstenv
xchg
bound
mov
add
stc
pop
call
xor
jle
adc
mov
iret
outsl
test
shl
lret
sbb
fs
les
push
push
push
mov
push
sbb
cmpb
arpl
dec
pop
mov
sub
fmuls
cmp
or
in
xchg
insl
mov
setns
loop
adc
icebp
inc
hlt
jb
fcomps
aam
xchg
pop
scas
lcall
inc
out
dec
inc
inc
das
out
jns
adc
jne
xchg
movsl
dec
arpl
lds
mov
movsl
dec
ficompl
insb
shr
adc
xlat
mov
adc
inc
sahf
pusha
inc
push
and
imulb
gs
lcall
insl
data16
cwtl
push
xor
sbbb
cmp
mov
jp
cltd
mov
loope
or
mov
jbe
inc
dec
sbb
in
fdivl
pusha
push
add
lods
clc
add
fxch
jmp
call
xchg
stos
mov
mov
shlb
or
mov
mov
xchg
sub
cmp
sub
mov
mov
mov
iret
fistl
push
jno
pop
enter
cltd
cli
cmp
cli
cmpsb
lret
push
aas
jg
shlb
pop
inc
inc
cmpsb
jge
inc
mov
notb
orb
andb
std
xor
outsb
mov
mov
test
test
sbb
sti
lods
mov
movsl
pop
hlt
mov
jge
dec
pushw
dec
lahf
outsb
cmp
push
shrb
dec
jo
fs
mov
push
mov
test
jb
stos
lods
stos
scas
cltd
test
add
movsl
dec
push
sahf
jb
int
and
test
pushl
dec
inc
loop
imul
lock
cmpsl
mov
add
xchg
or
pop
idivb
mov
in
sahf
ja
aad
xorb
mov
pop
cmpsb
iret
mov
dec
cwtl
mov
jnp
shll
push
xor
lret
fimull
pop
push
insb
rorb
int3
cmc
mov
out
jle
outsb
outsl
add
lcall
inc
sub
xorb
pop
push
lcall
out
dec
jo
aam
pushf
mov
add
dec
push
jmp
loope
test
nop
dec
pop
push
rcl
and
or
xchg
cmp
orb
xchg
xor
dec
movsl
arpl
les
jl
xchg
lock
push
push
mov
lcall
shlb
leave
xor
ret
inc
sub
pop
dec
push
mov
xchg
mov
test
fdivrs
mov
and
and
mov
mov
pop
jg
addr16
mov
in
pop
push
scas
sub
xor
shlb
stos
push
dec
pop
cmp
imul
data16
in
adc
sbb
fisubrl
sbb
test
jp
adc
dec
lahf
testl
pop
cmp
cmpsl
sti
inc
add
inc
cmpps
add
push
jle
or
mov
adc
xor
mov
dec
mov
or
add
jne
push
xchg
mov
sbb
inc
pop
xor
push
mov
lret
lret
lds
stos
lods
mov
movsl
aad
mov
mov
pop
mov
fcoml
mov
js
adc
cmp
mov
loope
mov
lret
add
lret
jl
add
cmpsb
xor
or
fistpll
jp
adcb
test
and
in
iret
outsl
into
jl
dec
mov
xor
mov
and
aad
cmp
and
pop
cmp
sub
lds
arpl
xlat
mov
clc
cmp
loopne
movsl
mov
pop
xchg
jmp
jns
mov
test
ficomps
mov
cli
movsb
ret
scas
dec
add
sbb
pop
cltd
aas
out
popf
ret
jne
ret
aad
clc
cld
adc
cmpsl
in
test
pop
sti
inc
leave
xorb
leave
scas
sbb
mov
aam
or
mov
push
pusha
xchg
lret
jge
jmp
call
pop
dec
mov
sbb
fcomps
lcall
and
cmp
xchg
in
mov
popf
test
cmp
fcmovnbe
dec
fwait
xlat
cwtl
xor
aas
iret
mov
push
stos
out
nop
dec
push
mov
jg
ficoml
stos
jmp
out
int3
sub
incb
and
dec
fwait
adc
mov
iret
push
js
add
sbb
or
fcmovne
or
adc
xor
dec
jo
xchg
pop
pop
sti
dec
adc
and
pop
ss
ret
push
stos
fdivrs
test
dec
dec
push
xchg
cld
pop
xlat
push
arpl
xlat
cmp
push
or
popa
push
sub
imul
dec
and
out
xchg
push
in
popa
adc
push
jmp
outsb
ss
fldl
xor
ljmp
std
adc
sbb
dec
jns
sbb
xor
decl
les
shlb
aaa
dec
mov
fcomps
sub
outsl
xchg
jecxz
mov
cmp
shlb
cli
insl
iret
leave
sar
enter
and
push
das
sub
out
fiaddl
repnz
mov
push
pop
rcrl
out
mov
mov
mov
pop
push
xchg
int
adc
ret
cmp
and
jns
lcall
imull
xchg
stos
inc
shll
sub
rcll
cs
ret
and
sub
push
sub
mov
pushf
lock
cmp
adc
pushf
enter
in
lret
sub
mov
pop
movsl
enter
shr
push
lret
mov
lcall
mov
push
call
cmpsl
test
ds
mov
or
xchg
mov
xor
test
lret
sub
ret
pop
mov
xchg
mov
pop
rclb
push
mov
sbb
xor
je
scas
cmp
mov
sahf
cmpsb
inc
jne
int3
xchg
mov
xchg
jecxz
cmp
insl
add
mov
lea
sub
xchg
adc
adc
iret
dec
pop
call
jg
mov
in
ljmp
ss
jno
sub
imul
push
insl
sti
and
sti
sub
mov
xchg
jmp
arpl
lret
mov
test
pop
shrl
rcrb
cmp
aad
mov
addr16
orb
adc
sbbb
push
xchg
mov
or
push
sbb
mov
mov
aad
loope
pop
adc
inc
movsl
int
inc
repnz
fmull
mov
ja
popf
dec
inc
adc
dec
enter
mov
sub
inc
mov
out
jns
movsb
pop
imul
cmp
cmp
and
dec
popa
mov
arpl
cld
sbb
pop
mov
or
mov
jne
xchg
repz
pop
pusha
mov
mov
subl
aaa
dec
insb
mov
jp
pop
inc
les
jno
pop
or
pop
lar
cmpsl
mov
aaa
cmp
iret
cmp
pusha
xchg
sbb
cmp
fdivrp
outsl
jae
mov
xor
xor
push
lret
ss
adc
adc
stos
nop
iret
inc
iret
xor
sbb
nop
out
pop
pop
lret
jp
pop
jns
xchg
inc
pushf
fnstenv
sbb
mov
mov
test
inc
insl
jae
out
sub
sub
jge
jecxz
leave
jmp
mov
cmp
clc
mov
xchg
dec
mov
fdivs
and
iret
fldt
or
movsl
dec
aam
xlat
test
or
pop
in
adcl
adc
lea
and
in
stos
repz
daa
pop
inc
ficompl
inc
lcall
jge
mov
add
sbb
and
push
sbb
fmul
cmpsl
dec
pop
jnp
jae
movsb
sbb
cli
adc
shlb
sbb
aam
xor
push
cs
mov
xchg
ret
mov
sub
ja
shlb
fbld
mov
pop
push
mov
inc
inc
dec
and
sti
cltd
iret
pusha
mov
xchg
mov
icebp
xchg
mov
fstps
aad
fwait
sub
push
adc
adc
dec
addr16
repnz
or
sub
lods
and
in
mov
pop
imul
push
add
fidivrs
jge
in
test
and
mov
cmp
arpl
test
xchg
dec
int
mov
or
push
incl
fimull
aaa
jae
insb
lods
scas
xor
sbbl
test
and
xor
frstor
fiadds
pop
in
in
loope
pop
mov
lret
sbbb
add
mov
mov
int
add
mov
shrb
jmp
dec
xor
jecxz
adc
add
mov
xor
add
jbe
pop
lock
divb
mov
aad
or
cli
ret
bound
push
rcpps
fwait
mov
ja
fwait
sahf
push
data16
pop
in
sub
dec
in
jno
arpl
imul
call
mov
iret
into
adc
mov
int
push
cmp
aas
add
test
cltd
pop
and
les
fs
mov
pop
ss
mov
shll
and
xchg
cli
leave
lods
mov
stc
mov
cmp
imul
insl
test
daa
je
in
pop
dec
sbb
ljmp
xbegin
add
shll
hlt
xchg
add
jne,pn
in
or
pushf
inc
cmc
xchg
imul
mov
rcrb
cld
scas
sbb
sbb
cmpsb
hlt
rclb
call
add
adc
je
rep
in
andb
icebp
mov
mov
or
mov
ds
push
sbb
adc
fucomp
adc
sbb
nop
xchg
pop
inc
inc
add
es
arpl
lret
dec
lock
mov
lahf
push
mov
push
cmp
cs
fs
pop
fisubs
fildl
cld
xchg
jbe
mov
xchg
pop
insb
xchg
int3
leave
ret
into
jp
jg
inc
xor
fs
shrl
fstpl
sbb
mov
push
mov
lahf
push
and
adc
int3
adc
mov
popf
das
sbb
pop
cmp
jecxz
loopne
test
roll
fldl
dec
mov
mov
pop
push
ljmp
push
int
clc
cmp
cwtl
andb
js
adc
jl
pop
sub
mov
sahf
cmpb
cwtl
mov
xor
mov
dec
dec
lret
loopne
mov
mov
mov
ret
addr16
xchg
arpl
and
aam
or
sub
inc
fbld
jg
mov
popf
xchg
int3
xor
ljmp
jne
aaa
jae
jo
mov
pop
inc
sbb
and
xchg
add
and
scas
jb
xchg
push
add
cs
insb
xor
push
jl
call
es
and
push
movsl
fsubrs
icebp
mov
mov
xor
stos
outsl
inc
or
xor
lods
loop
sbb
xchg
sub
clc
fdivs
mov
mov
mov
adc
cmp
div
pop
dec
mov
scas
mov
lcall
mov
lret
inc
jg
adc
jmp
adc
daa
push
add
xor
lods
mov
xor
mov
jns
xchg
cmpb
push
cmp
in
cmp
stos
fisubrs
jp
in
lahf
into
xor
mov
jl
lcall
sbb
rorl
bsf
jge
rorl
ss
sbb
pop
xorb
insb
lret
cmpps
push
pop
hlt
push
test
cmpsb
in
outsl
push
xlat
aaa
imul
jp
inc
xor
push
call
scas
fdiv
out
cmp
aad
push
cs
sbb
arpl
fidivl
jl
sub
and
aam
mov
rorb
sbb
pop
imul
mov
mov
sub
cmc
pusha
xchg
in
inc
rorl
pop
outsb
inc
data16
sub
xchg
jecxz
sub
xor
ret
jmp
mov
xchg
das
push
stos
sub
loopne
mov
cmp
dec
xchg
adc
or
mov
popf
outsb
inc
dec
iret
and
jbe
adc
pop
pop
lcall
jnp
cmpsl
inc
fwait
arpl
mov
sub
and
cs
nop
inc
add
jno
push
lret
push
enter
ss
mov
mov
lock
pop
lock
sahf
cli
mov
cli
mov
xchg
jnp
sub
fdivrl
push
pop
pop
cmp
mov
and
fiadds
in
jae
jbe
inc
inc
gs
dec
and
aaa
xor
pop
cmpl
std
outsb
fmuls
jo
or
ret
sbbl
ret
xchg
repnz
add
jl
outsb
in
cltd
mov
xchg
cli
ret
sub
push
mov
push
ret
scas
mov
pop
push
push
mov
sti
outsb
in
xchg
movsb
jns
dec
shrb
mov
shll
lret
rcl
orl
sbb
and
cwtl
pusha
mov
mov
dec
push
jmp
cli
pop
pop
in
push
sbb
jno
int3
add
sbb
je
jmp
xchg
inc
cli
mov
popa
scas
sub
jmp
xchg
lock
out
je
rolb
ret
orb
loopne
je
das
xor
test
shrb
movsl
mov
rcrl
mov
mov
je
inc
xchg
xor
repnz
and
push
testb
cmpsl
pop
mov
das
xor
xchg
sbb
xchg
and
js
sbb
pop
dec
outsb
sub
test
or
incl
mov
add
shlb
and
rcll
push
cli
fstps
sub
pusha
call
xchg
push
cli
ss
ja
mov
popa
dec
xchg
outsl
sbb
mov
xor
dec
daa
mov
pop
mov
dec
xor
ja
pop
js
and
insb
pop
fsubrl
out
push
iret
js
lods
jno
fwait
lods
pop
je
imul
xchg
clc
movsb
andl
lea
fistl
jno
add
lea
mov
mov
mov
sub
pop
cmp
push
push
fxam
adc
arpl
or
dec
sub
jbe
sti
mov
mov
or
out
sbb
cs
jp
popf
enter
push
sbb
std
sbb
jp
dec
cmp
add
jg
sub
dec
loope
mov
sub
sahf
dec
mov
subb
cwtl
mov
jle
xor
aas
add
lret
sbb
push
icebp
jo
pop
pop
push
jb
pop
mov
ds
jae
jmp
add
sbbb
outsb
fs
and
pop
inc
mov
mov
mov
shlb
sahf
test
inc
xchg
mov
dec
dec
clc
cs
aam
pop
inc
jns
inc
lret
and
mov
pop
adc
sti
jmp
mov
sbb
mov
xor
add
pop
mov
rorl
add
pop
test
sti
mov
clc
imul
popf
sbb
pushf
cmc
mov
test
jb
dec
adc
mov
cld
jo
sti
adc
enter
in
add
dec
xor
push
aad
rclb
add
cmp
icebp
pop
and
scas
xchg
xchg
mov
cmp
and
jnp
les
xchg
test
inc
push
pushf
jl
lcall
imul
std
repnz
adc
sbb
inc
jmp
mov
cwtl
dec
in
iret
inc
call
sub
loope,pt
imul
inc
outsb
lods
mov
sbb
gs
xor
jns
sbb
lret
pop
xchg
push
sbb
sbbl
or
in
mov
imulb
jno
lea
imul
jbe
xor
sbb
out
and
jp
mov
mov
jecxz
dec
sub
in
jns
in
sub
cmc
ja
lds
mov
ljmp
cmc
stos
jge
and
mov
sti
cli
stos
insb
cmc
aad
xchg
orl
cmp
push
fs
rclb
stos
sbb
stos
fwait
push
lea
ja
ret
mov
rorl
daa
ds
adc
mov
std
or
daa
cmp
fsubl
and
fisttpl
dec
mov
or
pop
outsb
mov
cmpsb
movsl
gs
lds
ss
sub
pop
dec
mov
idivb
dec
mov
jle
pop
das
bound
or
cmc
stos
cltd
jo
cltd
movsl
cwtl
jbe
hlt
and
push
jmp
cld
rclb
mov
stc
adc
sub
jb
jb
xchg
xor
push
pop
mov
mov
push
pop
test
ficompl
mov
lea
leave
push
mov
loope
adc
xchg
inc
mov
lods
sbb
mov
fistpl
dec
inc
sub
cs
sbb
popa
xor
push
arpl
mov
ficoms
inc
cs
adc
gs
sbb
fisubrl
push
jbe
jge
sub
repz
push
sbb
iret
das
xchg
xor
ljmp
add
xchg
dec
std
push
push
and
mov
jecxz
mov
adc
sub
enter
out
xchg
xchg
cmpsl
test
push
xor
sbb
adc
cwtl
push
popa
sub
xor
lahf
repnz
test
test
fstpl
lret
inc
ja
xor
mov
lds
aas
int3
sarb
jg
fcmovu
movsb
adc
xor
cli
pop
enter
jb
xor
adc
xor
scas
pop
cs
adc
jmp
fs
ss
pop
xlat
ljmp
mov
push
cmc
cmp
sub
add
mov
xchg
jne
sub
mov
push
xchg
mov
dec
ret
jmp
jle
xor
pushf
or
push
add
ja
rcl
xchg
mov
adc
cmp
movsb
and
arpl
lods
hlt
jns
daa
jnp
xor
or
mov
aad
stc
xor
nop
mov
fisttpl
sbb
cmpsb
dec
jecxz
jle
adc
xor
mov
test
mov
cmp
mov
mov
je
lcall
mov
and
ret
sub
stos
imul
push
fs
dec
movsbl
inc
lock
jns
ja
int3
lret
in
ror
stos
add
pop
clc
mov
inc
lods
cvtps2pi
or
mov
outsl
and
stc
stc
repz
jo
adc
inc
jle
stos
mov
arpl
arpl
das
imul
pop
mov
incb
mov
dec
shl
int3
lds
popf
pop
js
fs
add
enter
xchg
fistl
sahf
std
scas
sub
out
and
inc
sar
dec
jmp
xchg
ss
rcll
or
jnp
mov
add
push
in
idiv
sbb
or
xchg
je
popa
adc
ds
aad
les
in
or
xchg
nop
aam
aam
cmp
fwait
push
sarl
ljmp
sbb
dec
jp
sbb
stos
cld
aam
jo
jae
into
push
jl
and
les
xchg
mov
cmc
ffreep
aaa
cmpsl
dec
fdivr
data16
push
and
xlat
aas
cli
cmpl
arpl
fstps
xchg
decb
iret
jp
lds
js
push
mov
popa
mov
and
movsb
cltd
xchg
and
lcall
cmp
fwait
pop
js
out
or
flds
push
mov
mov
aad
daa
fwait
adc
xchg
pop
dec
lret
daa
iret
lret
dec
cmpsb
mov
push
les
mov
in
fxtract
ja
xchg
adc
ss
lods
sbbb
dec
adc
pop
fbstp
or
fldcw
sub
popf
push
jge
fnstenv
jg
mov
mov
mov
xchg
sbb
fistl
notl
lods
clc
ds
pop
movsl
cmp
addr16
adc
data16
outsb
mov
adc
lcall
xor
clc
das
mov
jb
fmulp
xor
or
mov
xor
add
cmp
ret
adcb
dec
mov
idivl
dec
sti
fbstp
sub
jle
arpl
adc
mov
mov
cmp
pop
jecxz
sbb
lods
dec
mov
inc
and
inc
nop
in
pusha
inc
mov
or
pop
mov
cmp
inc
jnp
sub
aam
push
pop
inc
sbb
sbb
jns
inc
sbb
in
pop
popa
jecxz
nop
xchg
mov
iret
fcomps
push
xor
daa
test
inc
clc
inc
sbb
es
cmc
lret
cmp
fnsave
pusha
mov
rolb
cmpsb
cmc
cmpsl
bound
enter
push
scas
andb
or
shl
pushf
cld
mov
xor
popf
adc
loop
add
xchg
clc
addb
push
mov
js
cwtl
repz
in
loopne
add
enter
loopne
iret
mov
test
push
cmp
ret
jb
jb
in
jne
mulb
xor
fwait
jns
loop
mov
out
mov
lods
scas
jne
and
in
out
dec
mov
pushf
add
inc
int3
pop
or
out
stos
jmp
push
or
sub
push
xor
leave
push
cmpsb
sbb
rcl
cli
cmp
daa
xchg
jae
push
sahf
leave
aam
mov
mov
pop
jne
push
mov
fsub
jp
push
jmp
js
xchg
into
jp
dec
shl
in
adc
mov
pop
pushf
sbb
lds
adc
add
insl
pusha
rorb
xchg
mov
scas
pop
sarb
or
test
push
into
dec
inc
mov
pushf
lea
mov
push
push
pusha
test
sub
sbbl
adcb
leave
dec
std
sbb
hlt
push
les
xchg
lcall
leave
addr16
adc
movsl
sub
push
rcll
xor
fst
and
sti
sbb
fs
jl
xor
jae
inc
fstpt
cmpsb
add
aaa
jge
mov
pop
push
adc
adc
addr16
push
int
xchg
out
cmc
push
push
in
inc
and
push
xor
xchg
int
or
shr
push
fsubr
jnp
int3
stos
mov
jmp
mov
bound
jno
incb
stos
ss
or
pop
xor
cmpsb
imul
dec
gs
imul
jnp
jb
in
pop
str
dec
cmp
shrb
fidivs
fcoms
xor
idiv
pop
dec
data16
fnstenv
in
pop
arpl
loopne
js
inc
xor
subb
popf
cmpsb
adc
stos
mov
and
aam
sbb
fs
jo
mov
cmp
xor
push
pop
out
jno
mull
jp
leave
mov
push
cmp
loop
out
jge
jecxz
inc
xchg
jle
mov
push
loope
leave
in
ja
jno
arpl
pop
inc
mov
addl
mov
leave
adc
cmp
or
push
stos
pop
das
mov
ror
mov
jg
movsl
inc
or
ss
or
sbb
push
xchg
sub
out
je
push
outsl
rclb
push
dec
stos
push
dec
dec
mov
dec
sahf
subl
sub
or
xchg
mov
push
test
cmc
add
pop
inc
add
rcl
in
movsb
lcall
out
xor
addr16
sub
out
jae
pop
rorb
js
loopne
add
mov
jg
cwtl
push
sbb
cmpsl
es
pushf
adc
mov
inc
daa
pop
pop
dec
int
ljmp
lcall
test
mov
ss
das
lock
orb
cmp
ds
lock
cmpsl
cmp
pop
lds
mov
lds
sub
push
pop
cmc
push
loopne
mov
xchg
arpl
push
gs
xor
jno
xor
lea
sbb
aaa
out
lahf
mov
daa
pop
mov
in
fidivrs
fwait
dec
push
test
pop
inc
cmp
dec
mov
ret
pop
in
out
std
xlat
fwait
stos
lahf
and
mov
and
scas
orl
xchg
stc
push
jle
inc
les
pop
lcall
sbb
into
mov
ds
stos
out
adc
popa
fmull
sub
in
sub
pop
orl
clc
push
stos
loop
not
pop
mov
jp
mov
ljmp
dec
xor
jle
mov
adc
xor
ja
pop
mov
stos
cmpsl
icebp
jl
pop
out
add
mov
orb
call
push
ja
inc
push
dec
xor
ret
int
popf
movsb
mov
cmp
xchg
nop
loopne
in
pushf
xchg
fsubrs
mov
inc
daa
sbb
mov
jbe
lcall
adc
mov
push
cltd
push
mov
loop
dec
and
divl
mov
dec
addb
arpl
cmc
xor
add
int3
cmp
jno
mov
mov
push
fadds
les
sbb
cmp
mov
xchg
in
ss
mov
and
in
pop
stos
inc
dec
hlt
mov
into
sub
cmp
aad
fisubs
xor
enter
mov
cmc
loopne
int
sbb
push
inc
scas
and
inc
pop
sbb
push
rclb
mov
add
loope
dec
mov
xor
xor
sub
movsl
mov
testb
pop
fcoml
add
mov
adc
test
sbb
adc
insb
test
int3
xor
push
pop
cmpsl
mov
fldl
testl
mov
xor
mov
popa
push
inc
dec
jbe
inc
mov
je
and
mov
rcrb
cmp
lret
push
xchg
mov
movsl
movsw
mov
insl
xchg
ja
rorb
sbb
push
call
xchg
in
dec
jae
aad
popf
jne
test
aam
test
add
and
pop
lods
xchg
in
mov
mov
xor
lea
push
push
andb
add
pop
movsl
shrl
shr
movsb
mov
movsl
mov
fmuls
add
outsb
int
leave
pusha
jg
aaa
in
mov
test
inc
xor
in
ds
dec
jp
sub
lds
sub
in
jl
enter
inc
mov
dec
test
mov
cs
lcall
insb
ss
or
ss
ds
xor
popa
mov
fiaddl
jmp
andb
jmp
das
xchg
mov
popf
loop
jnp
push
popl
cmpsl
jo
fstpl
jo
jns
push
lods
fmull
jge
and
in
xchg
sub
add
pop
jne
imul
loop
fmul
jge
das
mov
ja
mov
dec
jmp
lds
add
out
cmp
xchg
clc
cmpsl
mov
xlat
fucomip
xor
xchg
mov
jb
addr16
lret
shlb
mov
repz
ret
xchg
es
popa
push
nop
jnp
inc
sub
shll
lea
sbb
test
mov
xchg
dec
mov
outsl
pop
sbb
clc
mov
sub
stc
ret
mov
orb
dec
sbb
xchg
xchg
fidivl
je
adc
sub
cld
pop
call
imul
aaa
enter
push
and
xlat
push
enter
dec
or
pop
xor
lods
mov
rcrl
aam
pop
push
mov
inc
roll
xchg
rorl
mov
into
lock
add
lods
dec
xchg
bound
and
inc
mov
scas
adc
in
loop
insl
mov
jno
inc
and
ret
mov
call
sbb
clc
xor
neg
sub
pop
insl
hlt
lret
aaa
in
xchg
sub
inc
sub
xchg
repnz
push
int
jb
add
icebp
pushf
mov
aad
imul
arpl
pushl
push
nop
mov
mov
js
xchg
xor
out
pop
cltd
jns
lods
add
gs
stos
xchg
cmp
aaa
mov
xchg
negl
inc
pop
mov
stc
je
jmp
or
gs
inc
add
push
or
int3
inc
xor
aaa
in
pop
bound
insb
ja
or
jns,pt
push
inc
repz
push
shlb
adc
daa
mov
in
lcall
insl
sub
xchg
popf
mov
icebp
push
popa
addr16
outsb
adc
jmp
nop
pop
fwait
call
lret
mov
out
and
adc
pop
sahf
inc
xchg
btc
mov
popf
sub
xor
aam
fnsetpm(287
pushf
pusha
push
fsubp
into
aas
add
mov
test
sub
or
or
int
fldt
xor
mov
insb
out
fnstsw
fisubrs
pushl
loope
or
out
lret
movsb
cmpsb
mov
xchg
repz
cmp
test
das
and
stc
inc
ret
and
lods
mov
or
scas
and
jns
and
mov
ds
xchg
sub
inc
xchg
lret
mov
mov
xchg
pusha
adc
mov
clc
inc
mov
push
fadds
frstor
movsl
nop
in
jg
and
pop
sub
sub
mov
rcll
add
and
cwtl
fwait
scas
sub
dec
cmp
sub
jnp
sbb
insb
mov
cmp
ret
dec
in
inc
iret
fdivs
xchg
dec
out
iret
xor
aas
aas
push
call
xchg
or
imul
xlat
sub
push
inc
sbb
sbb
push
lock
faddl
das
test
sbb
movsl
jmp
sbb
mov
mov
xor
pop
fistl
lcall
adc
add
dec
scas
add
push
test
cltd
lcall
movb
std
add
and
cmp
lods
push
arpl
xor
in
inc
xchg
rol
jo
adc
or
xchg
jmp
imul
mov
push
test
dec
mov
fdivrl
leave
ror
cltd
lock
aam
in
sub
adc
and
and
inc
sbb
mov
push
arpl
call
subb
insl
and
clc
mov
jbe
fcoms
pop
fst
daa
add
ja
ljmp
mov
push
xor
loopne
pusha
mov
push
shll
add
xchg
leave
arpl
add
cld
pop
into
lahf
and
sub
and
movsl
enter
lcall
jmp
testl
mov
es
pop
outsb
sub
or
mov
bound
adc
and
inc
data16
mov
adc
xchg
dec
pop
mov
lret
and
pop
pop
fnstsw
inc
jmp
rcl
lds
cmp
ljmp
add
dec
cmpsb
icebp
sub
fcomp
iret
inc
push
fnstcw
popf
sarb
pop
enter
addb
imul
movsb
push
sub
call
jge
jno
sub
bound
cmpsb
fwait
mov
add
jl
int3
fdivs
insl
rcll
sbb
scas
inc
cmc
imul
loopne
sub
test
mov
pusha
int3
imul
and
sub
mov
js
lds
and
and
xor
or
fdivr
dec
push
rcl
dec
mov
mov
repz
aas
pop
jecxz
xorl
mov
scas
mov
inc
jmp
movsb
pop
ss
inc
sbbl
ss
jae
cmp
lods
sub
jns
mov
adcb
dec
outsl
sbb
add
lret
jp
sbb
mov
jnp
mov
cmp
dec
mov
fs
outsb
dec
stos
leave
test
hlt
popa
shlb
pushw
and
sub
pop
inc
xchg
leave
hlt
xchg
in
add
pop
stc
les
ret
xchg
insb
inc
or
mov
imul
nop
loopne
dec
fsubr
xchg
pop
test
inc
pop
jae
cwtl
xor
pop
or
lds
iret
bound
ds
iret
push
ss
push
js
jno
lret
and
push
sub
aam
or
cmc
sub
pop
xor
rcll
or
mov
mov
ret
insl
das
jmp
lods
push
mov
or
cmp
lds
daa
cmp
or
pop
inc
pop
mov
js
nop
and
call
xchg
in
inc
sub
lret
inc
mov
daa
stos
push
push
arpl
fbld
cmc
jmp
sub
fwait
stc
rol
xorl
sbb
loope
fisttpl
pushf
stos
addr16
mov
out
sbb
add
lods
outsb
shll
mov
rsqrtps
ficoml
add
xor
xor
adc
adc
mov
sub
ret
bound
mov
fdivr
jle
push
adc
xlat
sub
pop
inc
xor
sub
imul
adc
js
outsb
rorb
lahf
pop
in
or
pop
sbb
shrl
lcall
mov
and
clc
inc
mov
sub
sarl
xchg
in
inc
mov
push
fs
fsubl
xchg
testl
jl
arpl
scas
jno
jne
cld
cmp
push
fs
push
adc
lret
mov
mov
out
cmp
pop
push
dec
mov
dec
sarl
inc
and
xchg
add
aad
pusha
cmp
shll
leave
dec
in
ds
fiaddl
fs
lds
fchs
popa
aaa
xchg
adc
push
int3
icebp
sbb
mov
dec
nop
stos
icebp
mov
les
sbb
faddl
sbb
int
xchg
loope
fdivrl
xchg
in
loop
nop
adc
jns
fiaddl
xchg
xchg
bound
cmp
icebp
inc
pop
jne
mov
stos
xchg
leave
repz
ss
roll
bound
je
add
xchg
xchg
std
jle
add
inc
xchg
jo
icebp
xor
ljmp
sbb
mov
mov
sbbb
sbbb
js
ret
inc
clc
les
push
fs
jg
lods
lcall
jne
push
jo
icebp
ss
or
dec
cltd
or
lcall
sub
or
push
dec
fs
ja
xlat
push
push
adc
fisubs
mov
push
rcpps
dec
push
pop
inc
xchg
sbb
clc
sub
inc
dec
cld
xchg
mov
ljmp
mov
pop
pop
sbb
sbb
orps
and
xchg
jne
mov
pop
pop
adc
pop
iret
push
jne
sbb
push
sahf
adcb
lea
flds
sub
and
int
jmp
push
sti
rsqrtps
add
push
cmc
sub
sub
js
jno
adc
lahf
loop
gs
sbb
cmp
scas
popf
xchg
jp
addl
ljmp
je
aas
fimuls
sub
ja
and
fwait
in
sub
movsl
pop
orb
and
dec
sub
add
imul
aaa
mov
icebp
push
cmp
adc
xchg
fadds
stos
dec
mov
daa
jb
dec
sub
cmp
movsb
lds
sub
js
in
pop
or
xorb
inc
lods
stos
test
out
ss
js
shlb
and
mov
imul
movsb
pop
inc
jo
mov
iret
int
push
cmp
arpl
jl
pusha
mov
out
outsl
push
nop
adcb
adc
add
cmpsb
arpl
jecxz
dec
fsubp
jb
adc
sub
inc
xor
ljmp
jns
notl
rcl
rorb
insl
int3
fnstsw
fisubrs
dec
cltd
es
cmc
and
out
dec
fisubrs
movsl
pop
mov
push
push
sti
cmp
shrb
pop
cld
xor
popf
repnz
out
loopne
hlt
and
mov
lods
add
popa
sub
icebp
out
mov
loopew
jbe
and
push
xchg
cltd
scas
jno
test
shrb
stc
or
outsb
mov
rcrb
xor
es
or
cld
sti
lret
pop
lret
cmp
incl
repz
js
xchg
or
jle
push
jg
int
pushf
xchg
clc
lods
dec
dec
push
loope
repz
roll
mov
and
sarb
sub
inc
fs
call
jecxz
ss
push
add
aad
imulb
js
xor
push
jbe
into
push
mov
push
cmpsl
mov
sub
imul
stos
or
bnd
sub
das
cli
sub
popa
fwait
icebp
shl
sti
ror
inc
imul
mov
jmp
cmp
xchg
in
cltd
mov
gs
push
out
pop
dec
sbb
mov
jb
dec
unpcklps
inc
aaa
inc
or
mov
add
mov
jae
sbb
mov
push
les
out
clc
in
xlat
lods
or
fdivl
sbb
fldenv
daa
shrl
fistps
cmp
mov
shrl
iret
push
mov
scas
mov
imul
jns
mov
pop
push
cmp
fs
xchg
ss
out
inc
pop
add
xor
mull
jecxz
hlt
out
iret
fadds
mov
jecxz
adc
shr
xor
xchg
leave
jecxz
inc
fidivl
pop
sbb
cmp
dec
adc
movsl
sub
or
dec
cmp
jge
xor
orl
xchg
out
out
mov
mov
inc
mov
lods
leave
addr16
ds
call
or
xchg
mov
xor
xchg
sub
xchg
or
mov
enter
mov
inc
xlat
shrl
and
push
insb
in
jno
inc
adc
lret
mov
in
mov
add
jns
lret
and
sahf
lahf
adc
mov
dec
adc
enter
add
loopne
lcall
mov
pop
idivl
loope
mov
jne
cmp
add
fwait
push
pop
dec
jbe
js
stos
pop
xor
jb
repz
mov
cmp
das
scas
push
inc
cmp
outsb
cmpsb
loopne
bound
js
cmc
lea
inc
pop
mov
in
or
mov
mov
insl
daa
xor
sbb
sbb
and
rorl
mov
clc
leave
jns
dec
xor
addr16
icebp
ret
xchg
push
inc
neg
out
std
xor
jns,pt
enter
lret
out
or
xchg
js
popa
inc
jg
cmp
mov
pop
pop
jp
mov
std
and
add
nop
adcl
sbb
mov
dec
mov
shrl
jnp
iret
sbb
nop
jbe
lods
pushf
rcrl
les
ror
stos
test
mov
mov
stc
jp
push
sub
leave
xor
cmp
jae
push
jg
jno
ret
aaa
ficompl
jg
fcoml
inc
test
in
int
cmp
or
shl
push
scas
aad
sub
fstpl
jne
mov
fs
int3
push
xor
cld
mov
cli
outsl
leave
mov
ret
mov
test
sbb
sbb
test
movsb
lahf
cmp
fmuls
jns
ss
int
ds
out
adc
daa
mov
fisttps
mov
iret
jnp
insb
mov
inc
js
mov
cmpb
in
test
out
push
rcr
mov
mov
jno
fsubr
test
jge
sbb
pop
out
lods
ret
push
aaa
inc
scas
mov
add
push
dec
pop
jns
push
addr16
jg
jae
or
outsb
dec
es
scas
push
xchg
mov
push
nop
mov
in
inc
jne
imul
outsl
inc
inc
cmp
fcoml
push
clc
xchg
jg
sti
add
lods
xlat
imul
shll
movsl
push
jbe
test
scas
ret
jg
idivl
es
dec
movsl
mov
lret
movsl
in
adc
pop
ds
mov
test
xor
mov
popa
fldenv
test
jmp
xor
cmpsl
pop
xchg
sub
cmc
leavew
ret
push
xor
mov
jb
dec
push
xchg
inc
mov
sbb
mov
in
jge
push
std
js
out
hlt
push
mov
mov
mov
aam
jne
adc
rcrl
and
inc
jl
mov
xchg
and
test
push
push
or
sbb
adc
pop
xchg
dec
mov
gs
inc
mov
and
pop
cmpsl
rcrl
xor
pushf
sub
je
out
dec
loopne
and
mov
jl
popa
cmp
adc
lea
mov
imul
das
das
xchg
xor
js
or
addr16
jmp
shr
mov
cs
mov
inc
push
dec
fisttpll
outsl
sub
and
jnp
jne
test
and
mov
das
dec
push
inc
dec
fnstcw
int
xor
das
leave
addr16
cmp
lret
or
mov
test
or
imul
push
test
jecxz
fstpt
push
fcoml
stos
mov
and
dec
mov
or
push
ror
dec
xchg
mov
daa
pop
inc
push
push
sahf
jp
add
pop
pusha
or
stos
cs
mov
jb
lds
push
cmpsb
push
sub
aaa
cmp
sub
push
sbb
inc
rclb
sahf
jbe
icebp
js
adc
ret
fadds
mov
xor
movsl
aad
stc
push
lcall
or
inc
mov
adc
sbb
push
xchg
sub
iret
mov
add
daa
lret
dec
pop
sbb
insb
fmuls
adc
pushf
inc
xor
vpavgb
subl
test
into
lods
adc
push
mov
mulb
jne
imul
mov
data16
push
gs
inc
and
cmp
and
fucom
and
and
cmpsb
mov
mov
dec
fstpl
adc
cmp
scas
subl
xchg
lods
fmulp
arpl
out
push
std
or
push
out
push
nop
out
inc
sub
xor
xor
jae
insl
leave
loopne
sbb
mov
in
push
cmpsb
bound
pop
xor
lds
push
mov
lods
dec
pop
cmp
dec
popf
xor
adc
lds
xor
leave
push
or
mov
icebp
inc
mov
and
push
pushf
data16
add
dec
leave
xorb
fsubp
test
jno
xor
xchg
and
push
mov
mov
xchg
lods
jae
fcomi
add
xor
add
mov
add
scas
or
out
loop
or
fildl
mov
aam
shll
dec
mov
testb
ss
jg
lcall
loope
scas
xchg
outsb
inc
out
fucom
loopne
cltd
xchg
lahf
xlat
lcall
fnstsw
loope
xchg
lret
and
mov
in
jno
sbb
fs
addl
cli
jne
test
out
cmp
dec
push
adc
loopne
mov
jp
shll
and
in
jecxz
orb
dec
sub
pusha
pop
lods
xor
dec
or
outsl
or
push
test
es
ds
mov
xchg
scas
mov
dec
aad
call
push
jnp
add
insb
fsubrs
es
inc
sbb
cmp
scas
sahf
inc
enter
out
out
push
or
push
inc
push
lret
subl
push
mov
mov
aaa
repnz
out
add
cmp
add
jns
and
xchg
int3
pop
xor
adcb
xchg
push
aad
out
pop
insb
or
or
mov
js
sub
push
hlt
push
inc
scas
mov
lock
lea
stc
sti
xor
std
sbb
xlat
in
lgs
fidivrl
jl
pop
adc
mov
lcall
mov
push
jae
or
jae
insb
fs
fsubl
into
enter
stc
mov
xor
mov
dec
or
fistl
or
outsl
ds
daa
pop
pop
test
inc
mov
sbb
pop
lods
aaa
jns
push
repz
enter
in
mov
pop
rorl
mov
inc
inc
cmp
and
enter
out
loopne
mov
mov
loop
cmp
ljmp
hlt
cmpsl
push
mov
pop
mov
xchg
testl
xor
xor
leave
incb
cld
imul
idivb
lcall
aas
inc
inc
xchg
cli
scas
call
movsl
add
loop
pop
mov
or
call
cmpxchg8b
dec
push
into
push
test
aad
pop
push
pop
rorb
cmp
mov
ret
sbbb
fcmovnu
je
insl
fsts
std
inc
ret
jno
stos
mov
adc
xchg
gs
ss
mov
mov
outsl
and
scas
fdivp
fiadds
mov
push
sarl
sub
cmp
repz
mov
pop
xchg
adc
adc
loopne
mov
nop
in
in
dec
mov
test
mov
in
out
pop
xor
dec
repz
add
repz
lock
fcmove
popa
jl
fistpll
mov
ss
loopne
mov
in
popa
out
mov
sub
xchg
lcall
mov
rorl
iret
inc
shrl
lret
sub
xchg
cmp
lret
xor
push
sub
fldenv
push
bound
sbb
jle
add
je
arpl
ljmp
xchg
pop
jle
mov
into
inc
testl
fidivs
fcompl
dec
jge
jbe
jne
loopne
movntq
mov
push
pushf
inc
sub
mov
mov
adc
cmp
mov
ljmp
ret
rorb
pop
xchg
xor
lret
jl
inc
aas
flds
cmpsl
sbb
and
sbb
and
ror
push
dec
sti
mov
insl
sar
mov
aad
repnz
jmp
outsl
das
sub
test
in
inc
outsb
ja
iret
out
mov
call
imul
lea
mov
bnd
inc
clc
fcompl
movsl
dec
enter
or
mov
in
sub
je
inc
sub
test
lahf
hlt
xchg
add
cmp
mov
cltd
enter
push
arpl
hlt
inc
cmc
mov
sub
in
mov
test
dec
sub
jb
int
js
xor
xchg
lods
jp
out
inc
scas
push
xor
mov
add
mov
xchg
lahf
xor
popl
sbb
mov
aam
jle
sbb
in
adc
mov
call
sbb
insb
cmp
mov
sbb
jle
xchg
mov
repnz
cmp
and
jo
inc
mov
jcxz
leave
cmp
inc
and
je
and
add
loope
jmp
enter
dec
or
addl
mov
fadds
rolb
mov
leave
mov
sbb
mov
cmp
mov
jmp
pop
ret
fstpt
jmp
stos
stos
push
mov
pop
data16
sub
mov
xor
rcrl
fs
cmp
lret
shl
jle
mov
cmp
xchg
inc
jle
mov
adc
cmp
xchg
sub
pop
and
repnz
lret
aaa
sub
and
dec
mov
call
mov
push
push
aad
aas
mov
dec
fdivs
inc
jp
fdivrs
out
or
ljmp
cmp
call
and
mov
or
mov
stos
int
rcrb
or
fldcw
mov
xor
jp
dec
movsb
mulb
mov
aam
cmp
pop
inc
cs
into
inc
or
dec
add
test
pop
sub
push
adc
aaa
das
sbb
sbb
push
scas
pop
das
rolb
insb
xchg
xchg
mov
sbb
in
xchg
or
testl
in
xlat
ja
lret
das
jmp
xor
push
mov
test
leave
je
xchg
ror
dec
scas
ret
fisubl
test
xchg
sub
les
or
or
dec
xchg
lret
repz
push
les
outsl
inc
ficomps
imul
jbe
aam
sbb
addr16
aas
or
jmp
push
pop
pop
ljmp
pop
dec
push
pop
iret
sbb
in
inc
push
jp
in
mov
jo
mov
repz
push
andl
out
push
leave
mov
subb
dec
xchg
mov
hlt
test
jae
sub
adc
push
call
sub
outsb
lcall
sub
adc
inc
or
add
aas
jp
jnp
lea
pop
lods
fidivl
gs
push
sub
xchg
js
adc
scas
mov
jae
dec
dec
cld
movsl
add
int
cmp
mov
les
add
adc
xor
mov
dec
scas
fsubrl
jg
push
bound
cmc
outsl
and
and
adc
scas
das
ljmp
loope
and
and
jp
ror
arpl
cmp
mov
jmp
cmpsb
xor
jbe
pop
in
adc
pushf
push
cmpsb
mov
psubusw
and
mov
in
mov
outsl
bound
mov
movsl
jno
jns
in
mov
inc
call
mov
arpl
mov
push
jge
repnz
repz
cli
sub
movsl
stos
xor
lds
add
mov
fs
push
shr
xor
cs
or
push
sbb
cmp
xchg
push
mov
je
scas
in
and
pop
sahf
popa
add
gs
jno
gs
cltd
int3
pop
testl
adc
inc
push
cmp
mull
sar
lds
jle
pop
adc
push
cmc
pop
hlt
pop
in
push
pop
in
test
out
or
and
jg
shlb
fsubrs
xor
sbb
pop
pop
jp
push
sbb
roll
add
and
and
sub
add
out
out
pop
into
popf
sub
bound
sarb
stos
or
lock
jge
gs
outsl
test
and
mov
inc
pop
gs
loop
sub
push
sub
jecxz
pop
es
fisubrl
mov
add
push
inc
pop
loopne
adc
xor
mov
mov
jge
cmp
push
and
jecxz
dec
inc
mov
mov
les
xor
jae
and
pop
pop
ret
inc
and
cli
mov
and
mov
add
cmp
aaa
cmpb
or
fldl
enter
inc
mov
lahf
cmp
sbb
nop
fdivs
addr16
das
in
fists
mov
lret
fcmovnb
xchg
dec
gs
inc
pusha
ljmp
ret
adc
or
mov
mov
push
imul
mov
or
popa
mov
lock
mov
test
add
std
pop
fldl
mov
lods
mov
inc
fstpt
dec
fiadds
cmp
sbb
push
sub
xchg
stc
sub
push
pop
mov
mov
out
loope
mov
inc
mov
subl
add
and
sub
lret
ret
jl
push
fdivrp
scas
sbb
repz
mov
mov
sub
xchg
lods
adc
mov
aad
sbb
jecxz
adc
pop
xor
into
inc
sbb
out
xor
push
mov
mov
ss
or
mov
fnstenv
xchg
fstpl
cld
inc
lret
cli
int
xor
inc
scas
lcall
dec
sbb
xchg
xor
jmp
dec
shrb
arpl
pop
mov
mov
xor
xor
aaa
adc
pop
int
inc
mov
in
dec
mov
xor
cmp
add
in
mov
and
nop
gs
jo
pop
mov
xor
xor
inc
fwait
xchg
rcrl
mov
xchg
or
js
pusha
mov
or
cmpsb
mov
andb
in
jl
sbb
test
movsl
lods
mov
divl
mov
hlt
das
dec
push
mov
test
int3
mov
cs
test
inc
int3
dec
adc
dec
cli
out
movsb
cwtl
shl
lods
mov
dec
mov
pop
mov
fldcw
push
cmpsl
add
les
jo
xchg
aam
ret
inc
flds
sub
mov
or
mov
outsl
mov
cmp
pop
cs
xchg
movsb
mov
or
loop
shlb
mov
sbb
inc
scas
push
insl
sbb
and
cmpsb
jecxz
les
mov
fxtract
into
jmp
adc
xor
xchg
adc
stc
sub
arpl
xor
adc
adc
pushf
push
mov
adc
rcrb
mov
ret
jns
movsl
dec
mov
pop
push
inc
xchg
cmp
inc
add
das
add
xchg
sbb
jb
mov
inc
dec
pusha
cmp
xchg
sub
jl
arpl
movsl
dec
sub
loope
mov
aam
cmp
fcoms
sub
mov
lea
adcl
ds
lods
fs
test
movsl
pop
xor
mov
fsubrs
mov
cmp
inc
sub
or
dec
dec
xchg
sub
xchg
pop
jmp
loope
call
add
mov
shll
mov
add
arpl
andl
adc
pop
mov
test
pop
addr16
lods
mov
cmc
xlat
mov
xchg
mov
stos
and
popf
adc
cmpb
ljmp
pusha
aam
ret
push
add
jnp
inc
enter
test
push
pop
inc
mov
or
loope
push
sub
pop
fisttps
add
mov
inc
add
mov
outsl
inc
mov
jno
or
jge
inc
pop
mov
outsb
mov
add
mov
adc
bnd
fadds
cmpsb
iret
mov
lods
stc
repz
lret
dec
add
ja
fisubs
es
dec
fmulp
insl
popf
fldl
push
inc
sbb
aaa
dec
pop
sub
outsb
cmp
sbb
sbb
ss
cltd
popa
jnp
je
sahf
in
in
in
negb
adc
cmpl
sbb
jge
mov
incb
sar
insb
pushf
cmpb
daa
sub
push
repnz
popa
stos
mov
cmpsl
or
lret
cs
aad
mull
mov
iret
sub
out
addr16
xchg
xchg
push
stos
pop
jecxz
sub
inc
stos
je
movsl
fs
xchg
loope
cmpsb
jl
cmp
xchg
mov
add
stc
push
sub
dec
push
sbb
es
or
shrl
push
sahf
dec
loope
mov
icebp
push
lods
push
or
sbb
mov
dec
mov
pop
and
outsb
or
adc
dec
jge
xor
mov
push
pushfw
outsl
inc
adc
cmp
test
mov
xor
push
movsb
inc
mov
cmpsb
jo
push
fcompl
loop
ss
out
fwait
lahf
mov
out
jecxz
sub
cmp
aad
enter
insb
std
xorl
xor
pop
xchg
jb
jbe
out
ljmp
sti
sahf
mov
loop
dec
aad
js
mov
add
dec
xor
mov
mov
jmp
xchg
popf
cmp
push
cld
push
fldt
add
arpl
mov
mov
in
add
ljmp
cld
jo
enter
mov
enter
and
nop
mov
das
dec
rorb
aad
push
dec
gs
movsl
mov
fbstp
or
or
pushf
sbb
inc
mov
mov
daa
push
lahf
incb
aam
repz
fdivs
dec
insl
es
mov
dec
mov
push
cmp
adc
fcoms
xchg
cmpsb
sub
push
lcall
xor
push
cmp
dec
ljmp
mov
stos
test
xchg
mov
dec
or
push
mov
scas
adc
pusha
sub
lahf
insl
lcall
pusha
jg
mov
cmpsb
repz
sbb
fnstenv
das
xor
jg
and
cmp
pushf
sub
jns
loop
call
jns
cmp
iret
inc
cli
jmp
clc
std
sbb
mov
jbe
jl
mov
insb
cmpsl
arpl
test
pushf
jb
xor
aaa
insb
push
pushl
cwtl
ficomps
aad
and
int3
jb
daa
cmp
arpl
fwait
jne
mov
xlat
lods
je
cmp
mov
test
dec
fadds
push
add
fcmovnu
jae
sarl
xchg
xlat
xor
fnsave
xchg
dec
adc
add
pop
jns
pop
sarb
cmp
jnp
adc
mov
mov
inc
push
inc
mov
jecxz
inc
inc
ds
addb
bsf
ss
adc
or
out
ds
stos
inc
loope
jbe
mov
call
or
dec
inc
mov
push
xlat
movsl
test
stos
inc
imull
xchg
add
shr
or
xor
jbe
lahf
loope,pn
test
mov
push
xchg
jmp
and
xor
mov
adc
lahf
cmp
inc
cwtl
adc
cmp
mov
sub
loope
jns
fdivrs
lret
repz
in
push
inc
ljmp
mov
adc
lods
dec
clc
jae
push
jnp
xor
or
pop
mov
andl
dec
dec
add
jo
cwtl
fcoml
dec
imul
in
add
in
cmp
pop
or
dec
stos
mov
fadds
adc
sbbl
lds
mov
loop
cwtl
jo
mov
inc
jmp
inc
decl
sbb
push
shrl
pop
cli
push
adc
out
xor
ret
aas
adc
xchg
mov
xchg
adc
fbld
cmp
sub
sbb
jmp
sti
push
mov
mov
bound
stos
lret
aad
or
lods
dec
roll
xor
pushf
mov
adc
dec
int3
xorl
addw
sbb
xchg
enter
rcrb
jbe
fsubs
cwtl
and
rolb
mov
cmpb
sub
sbb
mov
push
jbe
arpl
push
pop
int
les
sbb
lock
aam
call
jecxz
or
jae
ja
cli
sti
cmc
in
jl
jae
pop
jge
and
mov
jmp
aam
sbb
cltd
xchg
add
cmp
in
stc
fwait
inc
mov
pop
inc
jns
sbb
scas
stc
fldt
or
es
jecxz
insl
adc
out
add
jno
mov
es
push
outsb
xchg
adc
push
in
jecxz
fst
ror
in
in
call
xchg
adc
xor
mov
int
test
pop
das
inc
int3
loopne
nop
or
nop
sub
addl
mov
addr16
das
ds
lds
mov
inc
push
xor
xchg
or
jl
mov
mov
icebp
mov
mov
leave
jns
flds
adc
es
xchg
xor
call
cmc
ret
sub
ljmp
fldt
xchg
in
mov
dec
xor
and
or
iret
jl
sub
mov
mov
divb
cmpl
data16
mov
mov
xor
jne
out
fdivs
push
sti
sub
sbb
sti
xor
fistps
enter
mov
jno
cli
mov
sub
sahf
push
into
xlat
out
scas
sbbl
scas
push
repz
gs
sub
jno
cmp
pop
addr16
bndstx
bound
mov
stos
fwait
push
iret
aas
mov
rcl
pushf
hlt
loop
scas
js
jmp
cld
test
and
arpl
add
cmp
out
sub
out
push
or
mov
scas
adc
bound
in
ja
sbb
fcoms
push
adc
stc
push
loop
pop
sub
mov
test
enter
js
enter
pop
cmp
push
push
cs
aam
cmp
mov
inc
pop
lods
pop
ret
das
std
loopne
xlat
addr16
xor
jno
sbb
xor
xor
cmpb
sub
test
jmp
hlt
lock
mov
cwtl
cmp
out
mov
fld
rcrl
mov
addr16
jne
adc
outsl
inc
pop
push
sub
sti
jne
movsb
rcrl
or
bound
mov
roll
xor
or
out
test
pop
inc
xor
jne
dec
jle
add
cwtl
cmpb
ljmp
xchg
or
adc
out
and
out
adc
pop
inc
mov
outsb
and
xor
xlat
mov
ret
inc
lahf
imul
ja
and
bound
out
shrb
rcrb
stos
repz
xchg
les
movsb
pop
push
arpl
stc
pop
jg
outsb
pusha
and
cltd
lock
movsb
loop
add
jl
subl
outsb
add
shr
repz
ret
outsl
mov
cmp
lock
mov
pop
lods
rsqrtps
bound
rorb
loopne
ret
js
mov
jnp
pop
bnd
fdivrl
lock
jle
lcall
or
cmp
inc
jb
out
cmp
fsubs
mov
mov
test
mov
push
jne
add
scas
addl
fidivs
cli
push
je
jnp
push
ja
and
push
sbb
movsl
das
clc
std
xor
lods
add
xor
sbb
or
vmread
mov
pusha
push
jno
mov
jmp
jmp
test
xor
jl
cmp
add
ljmp
and
jge
push
mov
hlt
shlb
inc
ret
cmp
mov
loope
push
adc
aad
jge
int
repnz
jae
lock
ljmp
mov
insl
in
mov
cmp
mov
icebp
div
xchg
xchg
adc
test
sbb
fildll
xchg
iret
scas
rorb
pop
aaa
dec
lods
inc
cmpsb
sbb
out
lret
fs
xlat
inc
add
and
inc
mov
stos
mov
or
or
xchg
and
lea
jmp
pusha
sbb
dec
dec
test
enter
movsb
jno
inc
dec
push
fs
std
lea
jno
pop
inc
push
cwtl
pop
int3
push
mov
shlb
mov
test
jp
lcall
js
in
shlb
jecxz
ljmp
test
dec
test
notb
dec
xor
xor
xor
xor
mov
outsl
idiv
xchg
rorl
mul
cmp
sbbl
jno
imul
jae
lea
adc
aam
hlt
je
movsl
sub
push
in
pusha
std
xchg
adc
mov
pop
mov
mov
adc
and
mov
cmp
fisubs
dec
pop
xchg
mov
xor
cli
jbe
ja
mov
mov
mov
pop
add
sbb
mov
mov
sub
pop
or
mov
or
test
inc
mov
stc
je
ja
je
jnp
push
mov
mov
mov
mov
dec
xchg
movsb
inc
push
dec
push
sbb
fnstcw
pushf
jg
ss
mov
mov
leave
xor
fwait
jecxz
mov
out
xor
mov
lock
iret
adc
gs
jns
mov
nop
int3
call
ljmp
mov
cmp
jno
mov
js
push
cmp
jmp
aam
mov
mov
push
mov
sarb
cwtl
imul
adcl
leave
ret
xchg
stc
sub
das
inc
sub
xchg
lcall
addr16
push
sub
in
mov
les
clc
cs
adc
cmpl
je
femms
dec
sbb
lock
into
outsb
stc
pop
loopne
fnstenv
pop
push
shlb
fcoms
cmpsb
es
stos
jo
pop
jge
sbb
iret
jb
jl
mov
pop
mov
cmp
cmpsl
push
inc
push
rol
or
test
int
jnp
inc
mov
into
mov
xchg
cli
jmp
sahf
imul
and
popa
xor
jl
iret
xor
dec
in
sbb
sahf
sbb
add
push
sbb
or
sub
test
xor
ficoms
xor
andb
sbb
and
lret
xor
adc
or
data16
mov
push
je
cmp
aad
adc
and
pop
pop
movsb
test
mov
mov
dec
es
push
pushf
push
lods
test
leave
cmc
int3
pop
jnp
mov
cli
xchg
pop
in
int
sbb
out
outsb
test
fstpl
jne
js
data16
imulb
jg
xchg
inc
xlat
sub
mov
out
add
les
cli
ret
sub
add
jmp
and
imul
cli
inc
in
sbb
or
repnz
test
outsb
fbstp
ja
fisubs
call
inc
arpl
xchg
mov
or
jb
xchg
push
loop
cmp
or
lahf
fidivl
xchg
outsb
in
push
dec
mov
mov
and
mov
xchg
mov
fdivrs
jnp
sbb
das
int
decw
ret
leave
clc
sbb
mov
xor
lds
xchg
shl
lahf
jl
enter
or
fisubs
data16
xchg
ds
ljmp
addl
call
repnz
int3
fisttpl
xlat
sti
cmpsb
les
sub
out
ss
jp
dec
test
call
xchg
js
jnp
pop
or
cld
mov
mov
in
testb
mov
fisttps
sbb
pop
jbe
push
mov
ja
fistpl
repnz
sbb
adc
in
mov
insl
outsl
pop
lock
and
and
out
pop
vpsrld
push
pop
sbb
xor
arpl
ljmp
outsb
cmp
push
out
inc
sbb
xor
or
mov
push
rcrb
pushf
insb
jb
stos
mov
in
push
cld
icebp
push
adc
std
sar
in
arpl
dec
movsl
cmpsb
add
jns
mov
adc
iret
cmp
mov
push
and
lret
lcall
fidivl
xchg
sbb
and
pop
sub
ret
mov
in
sbb
add
mov
xchg
inc
fnstenv
test
mov
xor
enter
push
js
mov
lods
sbb
sub
sti
fwait
js
jae
push
dec
mov
pop
cmc
cmp
sub
dec
mov
cmp
jge
or
sbb
aas
leave
mov
clc
sbb
xorb
imul
mov
push
mov
shrl
fidivs
fidivs
outsl
adc
in
add
gs
movsl
loope
sbb
leave
les
scas
outsb
lds
inc
mov
dec
jb
push
es
sbbl
js
mov
mov
mov
mov
lods
lods
push
inc
mov
push
mov
loopne
or
sub
adc
jae
decl
sbbb
cmp
xchg
fimull
shl
and
sbb
sub
pop
icebp
cmpb
dec
leave
in
and
mov
lret
dec
or
iret
mov
scas
mov
flds
xor
or
rcrb
sti
shrb
dec
ficompl
jl
cwtl
aam
dec
sti
and
add
out
jmp
sub
inc
add
xchg
adc
test
pop
push
inc
or
jmp
xor
fsubl
testl
push
pusha
and
mov
mov
into
push
mov
dec
scas
cs
out
fnstenv
mov
arpl
popf
out
pop
or
test
push
clc
inc
loope
sbb
push
and
adc
mov
repz
pop
jns
and
popa
cwtl
jmp
mov
push
xor
jg
fdivl
push
mov
xchg
xor
xor
mov
jbe
mov
js
or
and
lock
popa
push
hlt
mov
add
xchg
std
or
dec
sarb
es
sti
pop
jg
mov
cmp
negb
mov
mov
out
ljmp
inc
mov
xchg
gs
testl
fwait
cmpsl
add
adc
inc
bound
push
hlt
mov
push
repnz
mov
bound
sahf
lret
js
cmpxchg
dec
sub
dec
mov
sbb
mov
outsl
jmp
push
es
repz
adc
aaa
pop
jl
sub
cmp
adc
pop
ficoms
in
cmp
sti
sbb
adc
and
mov
decl
jbe
pop
jbe
in
test
je
lock
push
rcl
xchg
pop
sbb
jecxz
mov
lods
es
jecxz
in
insl
fildll
push
mov
fstps
mov
sbb
mov
in
lret
pusha
mov
mov
pop
pop
mov
cmp
dec
or
ret
icebp
imul
out
les
xchg
pop
fbstp
sbb
aaa
fisttps
test
fadds
imulb
cmp
test
je
pusha
in
rcrl
lea
test
imul
ret
outsl
mov
in
clc
inc
xor
xchg
xchg
test
aaa
hlt
std
mov
pusha
pushf
pop
add
insl
xor
pusha
insb
adc
int3
adc
dec
mov
mov
aas
paddusb
pop
les
fnstsw
stc
fxch
fcmovnbe
adc
sub
cld
push
pop
jmp
sub
pop
popf
xchg
jb
scas
leave
shlb
dec
daa
rcl
mov
inc
out
xchg
test
ds
cmp
nop
lret
mov
loope
ja
pop
pop
hlt
movsl
mov
pop
jae
or
in
and
fwait
mov
in
sub
outsl
std
jo
dec
cmpb
lcall
fs
vunpcklps
push
pop
or
cltd
sahf
and
xor
mov
add
inc
punpcklbw
cltd
pop
mov
pop
imul
inc
fs
mov
dec
cmp
xorb
jno
mov
jnp
inc
mov
mov
lcall
push
dec
out
mov
mov
std
std
es
or
jecxz
pusha
lods
lock
dec
mov
sbb
push
mov
arpl
sbb
push
clc
cmp
das
call
clc
xlat
nop
jns
dec
push
sbb
dec
int3
ja
clc
fldt
push
push
jge
inc
inc
je
aas
pop
das
leave
insl
outsb
sbb
imul
cltd
xchg
pop
jns
sbb
sbb
jl
aad
nop
mov
and
std
cpuid
mov
mov
push
mov
cmp
sarb
outsl
mov
cmp
xlat
cs
jp
lock
test
hlt
sbb
mov
test
cmpsb
push
out
or
jo
sub
cli
jl
ja
ret
daa
andl
push
cmp
div
push
shrl
popf
shl
jb
mov
fs
lods
pop
cli
shrb
call
lret
neg
mov
in
stc
mov
int
xchg
mov
jmp
ljmp
xchg
sub
sub
filds
es
shll
data16
out
sub
xchg
call
je
lcall
adc
enter
jle
dec
jns
cld
push
push
cltd
jns
push
jns
xor
and
adcl
mov
inc
mov
ljmp
xor
lret
jg
inc
pop
nop
push
inc
cmc
ss
icebp
popa
adcb
mov
orb
loop
cmp
sbb
hlt
insl
popa
and
test
xchg
cmp
jge
lret
push
bound
cmpsb
movsl
es
jl
inc
cmp
xor
pop
loope
push
or
ljmp
cmp
repz
cld
sbb
xchg
fisubrl
jecxz
inc
int3
mov
popa
push
ret
sbb
lds
mov
lahf
enter
cmp
test
movsl
mov
xchg
pop
adc
jl
push
jecxz
push
cmp
into
ja
outsb
xchg
insb
nop
mov
adc
call
mov
cmp
das
dec
mov
add
cmp
test
ror
mov
xchg
dec
xor
dec
mov
dec
mov
xchg
sbb
cwtl
notb
shl
ss
jle
inc
scas
push
cs
xor
sub
mov
mov
jo
xchg
nop
push
add
scas
sub
fcmovne
sub
or
mov
mov
mov
aaa
jo
mov
cmpsb
jle
hlt
mov
mov
ret
pusha
adc
dec
pop
pop
fwait
arpl
jg
ret
arpl
aaa
mov
mov
jmp
xchg
outsl
mov
cmc
rcrl
lahf
divl
sub
adcl
mov
jge
add
ret
pop
cltd
pop
into
cltd
out
or
or
inc
cmpsb
jb
push
pop
jbe
gs
jno
and
cwtl
push
inc
sbb
cltd
jb
lods
sbb
and
dec
scas
adc
fwait
mov
mov
nop
xor
mov
cmp
adc
loop
cmp
pop
add
std
xchg
outsl
cmp
and
pushf
popf
sub
lcall
and
add
mov
lods
aad
xchg
mov
rcll
mov
jecxz
xchg
cs
dec
lret
jg
cmp
sub
call
out
jns
mov
sbb
push
adc
leave
mov
cmovns
mul
cltd
jb
add
and
dec
clc
in
adc
dec
sbb
push
cmp
xchg
popa
test
aad
test
xor
add
mov
movsl
fistpll
addr16
push
cld
inc
mov
sub
fwait
and
or
xchg
mov
and
and
cmp
cli
lret
mov
out
pop
jg
sbb
and
sar
cld
ljmp
jbe
mov
push
inc
test
and
pop
push
push
mov
adc
mov
mov
xlat
das
ja
out
sahf
es
inc
pop
cmp
cmp
popa
sub
xor
sbb
lds
jg
mov
mov
inc
arpl
aas
mov
xchg
pushf
aas
adc
sbb
adc
xor
adc
call
push
aad
inc
pop
xchg
clc
insl
adc
icebp
mov
pop
int
rorl
adc
fidivs
cmp
xor
lret
call
hlt
cmpsl
lock
mov
enter
bound
sbb
jl
lods
xlat
jbe
pop
pop
call
cwtl
int3
jp
incl
movb
lcall
push
es
pop
into
xchg
inc
sbb
imul
mov
xor
in
fsubrs
out
inc
sbb
jge
fildll
adc
jge
pop
push
push
xor
lcall
pop
test
xchg
pushf
pusha
adc
xchg
jmp
fadds
lret
lahf
and
and
xor
outsl
push
dec
or
push
jp
mov
mov
gs
mov
push
and
out
bnd
out
jno
mov
push
xchg
int
adc
mov
sbb
xchg
imul
mov
out
mov
dec
mov
push
cltd
inc
cltd
je
xchg
sub
adc
cmp
enter
outsl
jp
fildl
sbb
out
arpl
sti
movsb
sub
push
mov
jno
es
enter
les
jbe
cmpsb
mov
sahf
lcall
push
andl
add
ljmp
mov
data16
inc
icebp
inc
sbb
add
stos
enter
cmp
pop
arpl
jp
addr16
aad
aaa
in
in
adc
inc
popa
cwtl
cmpsb
add
fldcw
xchg
lret
stos
loope
cmp
bound
cmp
in
ja
lahf
mov
push
stos
xorb
das
sbb
sbb
and
sbb
sbb
lds
dec
fidivs
inc
jmp
or
xor
lock
hlt
jg
mov
xchg
fcmove
inc
jle
adc
std
add
or
jmp
stos
scas
pop
dec
dec
notl
cltd
or
pop
add
lods
out
ljmp
xor
sbb
and
lcall
imul
outsb
sub
push
inc
cmc
add
xchg
mov
mov
leave
sbb
jle
aam
cmp
clc
pop
fwait
cmp
jno
pop
adc
adc
cmpsl
sub
cmpb
test
test
std
das
sbb
incl
adc
push
paddsw
test
sahf
sbb
adc
aas
fwait
sub
xchg
rcrl
subl
js
mov
outsl
jmp
out
dec
aas
shl
push
mov
xchg
insb
jo
jns
into
es
lahf
testl
pop
mov
or
adc
int3
das
std
mov
movsb
call
fwait
cltd
xchg
daa
fcmove
or
push
fsubl
jp
inc
gs
ret
into
lcall
mov
aaa
outsb
aam
enter
imul
lock
cld
cltd
bound
in
subl
daa
pop
cld
ds
dec
stos
mov
cmpl
int
mov
enter
repnz
push
push
ljmp
push
push
rorb
loope
jne
out
jmp
fidivrs
mov
test
adc
aaa
jg
push
or
call
cmpsl
pusha
jecxz
in
dec
xchg
lock
out
mov
cwtl
add
mov
insb
xor
lret
addr16
pop
enter
fisttpl
call
popf
aam
mov
add
aam
int
xchg
adc
scas
mov
mov
fbstp
push
hlt
mov
jecxz
and
filds
es
leave
movsb
test
cmp
push
mov
xor
jp
lahf
insb
xchg
cmpb
xchg
pop
rorb
jne
fnstsw
dec
inc
inc
adc
adc
stos
call
out
nop
in
push
cmc
add
dec
xchg
inc
nop
test
int
inc
mov
ljmp
mov
dec
dec
in
enter
shrb
lahf
mov
xor
int
in
in
iret
push
xchg
push
mull
xchg
pop
lods
adc
sbb
push
adc
xchg
pushf
dec
push
int
push
push
mov
test
mov
mov
rep
stc
and
pop
stc
jg
into
mov
or
mov
je
ret
add
sti
popa
out
pop
mov
das
or
movsl
repnz
adc
mov
jbe
pop
btc
pop
mov
add
xchg
mov
jnp
into
dec
pop
push
add
jae
push
les
repz
movsl
jnp
sub
iret
pop
aam
inc
adc
xor
mov
inc
inc
adc
jg
out
test
lods
test
and
icebp
mov
inc
mov
jl
loop
sub
popa
pop
int
inc
mov
js
sti
and
roll
push
sub
mov
xor
jo
sbb
int3
popa
imul
rorl
or
imul
cwtl
addl
xchg
pusha
sub
xor
out
mov
rcrl
mov
pusha
xchg
dec
into
sbb
add
les
adc
adc
out
push
mov
out
add
insb
push
les
pop
movsb
pop
and
dec
fisttpl
mov
lods
insb
mov
lods
bswap
inc
sbb
in
shlb
shrl
push
enter
mov
adc
push
mov
movsb
mov
jmp
int
and
shlb
sarb
mov
cmp
push
test
adc
pcmpgtd
lea
jo
cmc
mov
icebp
mov
dec
dec
jg
lcall
imul
xchg
imul
ljmp
mov
je
movsl
popa
out
mov
mov
cmp
xchg
adc
and
push
iret
sbb
jae
arpl
xchg
ds
inc
mov
xor
sbb
enter
sbbl
add
test
in
add
repz
xchg
jb
push
adc
clc
int
jg
sarb
test
adc
ja
inc
cmp
dec
sub
push
test
js
shlb
decl
dec
push
pop
mov
popf
rorl
adc
clc
jge
sub
cltd
int3
xchg
mov
xchg
fstl
lods
or
jl
out
dec
cmp
cli
add
addl
push
aas
and
rcll
dec
add
ss
sbb
pop
pusha
rorl
add
fisubrl
in
pop
inc
sub
addr16
stos
vmread
mov
or
in
push
in
mov
add
je
mov
add
or
xchg
adc
imul
cld
cmc
pusha
or
lds
clc
and
bound
sub
fwait
and
mov
push
or
push
hlt
dec
lock
xchg
leave
ret
jo
adc
cmp
mov
in
aaa
and
add
adc
cmpsb
sbb
sbb
lock
adc
pop
jno
pop
data16
adc
push
mov
cmpsl
and
pop
bound
sub
sbb
icebp
jmp
je
cmpsb
inc
imul
mov
pop
xchg
nopl
mov
mov
mov
scas
push
hlt
in
inc
xchg
stos
test
xchg
les
mov
out
xor
jge
xor
outsb
add
inc
push
add
pop
cmp
sub
out
pop
dec
cmp
and
fldcw
and
mov
jg
mov
scas
add
or
add
addl
test
mov
fs
nopl
subb
dec
xor
popf
iret
out
and
cmp
mov
jbe
mov
adc
orb
xchg
rcrl
insb
adc
out
sub
mul
std
jb
cmovle
fs
pop
mov
push
cli
lcall
pushf
sarl
xchg
stos
shr
mov
push
ja
dec
mov
bound
roll
sub
popf
out
xor
insl
push
decb
sbb
and
sbb
test
insl
imul
mov
cmc
add
pop
ljmp
fwait
or
mov
add
and
push
push
push
fxch
je
mov
jnp
mov
sub
lret
stc
arpl
jnp
pop
movsl
orl
shrb
or
rorb
dec
lcall
int3
jmp
in
test
out
fcmovnu
aaa
adc
shll
insb
cmp
xchg
subl
sbb
fucomi
mov
cmpsl
mov
test
mov
leave
xchg
cmp
mov
jno
jne
sbb
mov
jno
fisubrs
mov
in
cwtl
push
outsb
mov
loope
sub
cmp
xor
dec
ficompl
or
cmp
in
aam
repnz
and
mov
shll
or
mov
push
fiadds
addr16
cmpxchg
pop
dec
stos
jmp
mov
jmp
and
inc
or
jmp
insl
mov
lock
jno
pop
cmpl
cmp
adc
aas
icebp
pop
mov
mov
mov
adc
mov
fsubrs
fstpt
loope
outsl
fisttps
mov
sub
outsl
mov
ss
cmpsb
data16
jecxz
dec
test
xor
decl
cmp
jne
int3
repnz
int
imulb
jmp
decb
cmp
inc
mov
pop
leave
repz
jle
jecxz
push
push
ss
cld
dec
shl
rclb
dec
adc
inc
out
psubq
inc
sbb
pushf
lods
loop
or
sbb
sbb
leave
push
cmp
adc
mov
sti
add
roll
fcmovnu
repz
or
aad
repnz
ss
pop
or
sti
adc
xchg
nop
popf
aad
adc
in
lods
inc
inc
hlt
add
push
popf
cmpxchg
daa
test
in
push
test
lds
nop
push
adc
and
jmp
testb
pop
bound
test
enter
repnz
iret
push
test
mov
jg
inc
cmp
cmp
sub
jne
loope
pop
subl
pop
bnd
adc
push
cmp
stc
das
cwtl
xchg
popf
in
lock
lods
movsb
xor
pop
mov
repnz
add
xchg
jecxz
push
sarl
jne
push
idivb
ljmp
bound
setnp
jb
add
aad
pop
lods
mov
lds
lock
pushw
jnp
test
cmp
xchg
xor
iret
scas
inc
sub
xlat
es
sub
cwtl
add
inc
mov
sub
arpl
ret
inc
jno
mov
cmp
pop
scas
imulb
or
pop
cli
inc
pop
daa
cltd
pusha
mov
nop
add
fimuls
xlat
js
mov
jo
daa
sbb
and
push
or
pop
push
scas
outsb
adcb
test
jmp
sbb
push
cmp
cmp
mov
fadd
loopne
aaa
sarb
xor
mov
ret
xchg
xlat
add
movb
lcall
cmp
dec
std
push
jae
scas
inc
mov
les
outsl
in
mov
ds
mov
cmpsb
in
cmc
ja
pop
hlt
outsl
addr16
testb
sub
cmpsl
lcall
xchg
dec
cmp
fxch
push
int
repnz
push
xchg
mov
push
push
sbb
mov
sbb
sbb
movsb
lds
in
push
mov
sarb
ficompl
mov
add
add
insb
std
fnstcw
scas
jp
hlt
data16
lods
out
fisubs
and
sti
shll
lcall
aas
mov
xor
insl
stos
cmp
test
outsb
jb
sbb
push
sti
cmp
movsl
cwtl
cmp
sbb
std
inc
sub
aad
aam
adc
inc
fs
mov
outsb
add
push
mov
mov
ficomps
sar
push
lret
lcall
mov
imul
push
lock
xchg
sbb
daa
shll
jecxz
adc
or
mov
pusha
push
fcmovnu
push
shrb
or
mov
rorl
push
nop
aam
cmp
sbb
xor
push
xchg
jle
jle
or
cmp
mov
jle
jbe
mov
cli
out
adc
jno
xor
pop
inc
push
xor
dec
push
test
clc
dec
test
add
mov
inc
sti
push
sbb
rcrl
mov
ret
rcrl
push
sub
sbb
scas
ja
shrb
xor
mov
lea
enter
gs
xchg
aaa
mov
rcrl
inc
sub
ret
push
push
outsl
fsub
inc
push
out
mov
inc
inc
mov
lock
imul
mov
lock
cli
stc
add
subl
iret
test
pushl
mov
mov
aad
dec
pop
mov
cli
call
xchg
testb
pop
outsb
mov
dec
inc
popf
int
inc
lret
jne
rolb
pop
insl
repnz
add
jge
lds
popa
xor
jg
pop
movsb
adc
xor
xchg
xor
repnz
subb
in
ja
add
dec
lods
sbb
and
cs
dec
fxch
dec
shrb
fnstsw
jno
cmc
cmp
push
xor
adc
ljmp
jp
sahf
xlat
stos
jb
clc
mov
out
xor
addr16
jbe
pop
insl
cltd
loop
mov
and
sub
push
loop
arpl
cmp
js
iret
inc
and
scas
sbb
das
or
repnz
add
sarb
sub
scas
loop
jmp
out
jne
mov
out
ljmp
pop
sbb
hlt
adc
mov
ret
jb
cmpb
fisttpll
insl
xchg
mov
ljmp
daa
sub
bound
push
int3
lods
pop
sbb
popf
repz
rorb
iret
cmc
mov
arpl
fidivrl
fldcw
xchg
subl
mov
adc
pusha
mov
mov
in
add
cmp
or
jo
jns
mov
cmp
sbb
and
test
fdivrp
movl
mov
pop
dec
mov
idivb
mov
lcall
xchg
daa
cmpsb
xchg
jecxz
test
adc
mov
push
out
fadd
mov
imul
fidivrs
or
std
jb
mov
mov
inc
adc
mov
xlat
scas
xchg
dec
jecxz
ds
or
dec
sbb
or
test
pushf
sbb
add
cld
ja
adc
push
bound
inc
pop
jg
int
fldcw
cwtl
fidivrs
jnp
or
scas
and
fs
sub
mov
mov
dec
mov
filds
fstl
out
jnp
lret
jo
jbe
pusha
daa
and
pushf
mov
dec
aad
dec
dec
push
icebp
xchg
mov
das
enter
add
push
push
push
mov
mov
push
sub
jmp
cmp
enter
stos
adc
xlat
or
out
loop
fcmovu
sarl
shr
fs
fmul
sti
adcb
adc
xor
push
mov
pop
inc
cmp
xlat
push
test
add
rcl
pop
das
leave
mov
sub
aaa
fmull
cld
outsb
int3
icebp
mov
lods
push
sbb
aaa
push
jne
pusha
push
or
mov
push
jg
orb
xor
jmp
adc
jmp
movb
mov
je
and
pushf
xchg
push
fs
pusha
outsb
out
xlat
xchg
pop
lea
cvtps2pd
xchg
movsl
xlat
xorl
outsb
sub
aad
push
jno
fdivr
push
sub
inc
jg
and
add
mov
das
xchg
mov
ficomps
jg
and
mov
inc
push
xor
inc
adc
mov
mov
jg
mov
ja
xor
push
faddl
sbb
mov
mov
or
sbb
cmp
add
sub
sub
sbb
iret
jl
popa
mov
mov
mov
push
cmp
mov
and
insl
fcmovu
jae
push
mov
jmp
cmp
fidivrs
ja
ja
xchg
out
cmp
hlt
loop
out
inc
mov
loope
fildll
push
pop
insb
out
lcall
cmp
xor
mov
or
inc
pop
push
pusha
in
mov
int3
ja
add
mov
or
aas
push
int
mov
push
inc
subl
sahf
in
and
xlat
imul
pop
pusha
mov
xchg
out
inc
aam
jg
xchg
xchg
sti
mov
arpl
scas
xor
not
outsl
stos
insb
sub
cmp
jecxz
std
movsb
test
iret
xor
sbb
loope
jl
xchg
call
stos
cwtl
lds
pop
fs
xchg
or
mov
ficomps
bound
movsb
leave
arpl
sub
inc
sti
push
sbb
adc
stos
sbb
hlt
imul
fcmove
insl
mov
push
mov
pop
sub
push
adc
xor
test
push
jb
les
sub
adc
adc
adc
adc
or
lea
mov
jmp
pop
adc
dec
xchg
mov
popa
inc
and
push
pop
jge
rclb
daa
shll
jl
cmp
pop
add
push
mov
inc
push
xchg
shll
insb
repz
cwtl
jge
iret
scas
je
std
imul
cmp
inc
xor
push
icebp
xor
into
xchg
and
cltd
push
aam
out
test
push
pop
iret
fmuls
ds
pop
out
sbb
xlat
test
lock
jne
pop
sbb
xlat
jmp
dec
repz
pop
inc
out
xchg
pop
xchg
clc
push
subb
sbb
sub
push
lahf
pop
pop
jno
addr16
push
jecxz
and
mov
lret
lods
out
test
push
cmp
lock
add
or
jno
testl
push
mov
or
mov
jmp
aam
add
sbb
stc
jb
jmp
xlat
mov
jo
push
sar
gs
cld
fstps
xor
sbb
xchg
or
mov
mov
xor
je
jecxz
ret
stos
imul
pop
aas
testb
cltd
xchg
xchg
mov
pop
xchg
mov
das
inc
adc
push
mov
inc
jg
push
test
nop
je
out
hlt
loopne
push
mov
pop
arpl
test
dec
jg
leave
test
in
inc
sub
mov
cmp
inc
test
mov
nop
cmp
adc
inc
hlt
dec
inc
fcomps
push
pop
jecxz
stos
pop
or
push
pop
out
inc
sahf
xchg
lds
push
test
out
mov
sbb
arpl
int
ret
leave
call
jg
shrl
mov
loope
repz
mov
xchg
clc
inc
out
dec
cmp
je
inc
jp
jno
jne
sbb
pop
aam
ficomps
mov
dec
ret
cmp
fscale
sub
and
jns
xchg
push
xor
dec
test
out
ret
adc
mov
and
into
ja
test
scas
int3
leave
adc
push
fistpl
aad
cs
add
shll
dec
sbb
loopne
xlat
addr16
add
mov
and
lret
ja
inc
aad
push
push
add
xchg
mov
sti
adcb
int
in
and
inc
adc
mov
cmpsb
or
ds
inc
push
ret
and
xor
test
sbbl
out
and
sub
sbb
ret
inc
sbb
or
jae
sbb
ss
movsb
pop
sbbb
push
fnstenv
loope
mov
mov
sbb
pop
inc
dec
add
mov
xor
mov
mov
hlt
xchg
insl
push
fcmove
mov
cld
push
jmp
xchg
cmp
and
and
mov
xchg
or
das
lock
call
jns
fdivrl
pop
xor
or
jl
push
mov
dec
test
and
adc
mov
pop
fprem1
add
mov
mov
out
add
xchg
inc
not
add
mov
adc
cmp
adc
jb
gs
movsb
add
adc
or
jl
pop
test
rol
js
lods
lds
loope
mov
mov
stc
jmp
jmp
push
dec
and
xchg
lahf
cli
fistl
mulb
mov
gs
popa
push
lret
sub
out
mov
out
mov
xchg
pop
and
sub
push
xor
xchg
out
out
and
sahf
and
pop
into
icebp
push
and
test
xor
fcomip
cmc
inc
jg
mov
or
xor
lods
es
jae
call
mov
jge
or
inc
mov
lcall
in
movsb
repz
fnstcw
frstor
cltd
mov
or
mov
test
dec
ds
mov
cmp
jno
jp
je
roll
inc
fiaddl
pushf
push
mov
and
mov
out
mov
add
outsl
and
mov
pusha
push
jb
xchg
in
fadd
dec
popf
shlb
adc
jo
sub
xchg
sbb
out
or
sbb
gs
popa
fldl
sbb
dec
xchg
add
push
out
test
lods
mov
mov
add
outsb
inc
sub
std
idivb
hlt
rcrl
inc
cmp
sbb
mov
into
pop
sbb
dec
xchg
mov
cmpsb
cwtl
lcall
xor
sbb
sahf
test
mulb
jge
dec
sub
out
xchg
aad
ret
imul
hlt
mov
aas
lret
ss
gs
mov
mov
xchg
sub
cmpsb
cmp
aad
frstor
sbb
test
push
mov
sbb
nop
inc
outsb
inc
out
loop
pusha
inc
mov
orb
mov
popf
aaa
cmpsb
sub
push
test
mov
sbbl
mov
out
fadd
adc
notb
lret
stc
fistpl
xchg
pop
mov
dec
jmp
and
ret
imul
cltd
es
popa
test
sbb
loop
cmp
mov
stos
cwtd
jb
xchg
cmpsb
lea
fs
xchg
bound
xchg
push
pushf
sbb
clc
xchg
add
mov
xor
and
insb
out
or
pop
or
pop
aaa
cmpsl
test
mov
test
fcoms
adc
xchg
mov
xor
ja
imul
dec
test
add
das
negb
jp
and
pop
mov
jle
int
cmpl
pop
insb
adc
pop
mov
mov
pop
cltd
gs
lret
fcmovnb
xor
pop
aad
fwait
into
jge
push
cmp
shl
xchg
cmp
fsubl
adc
repz
daa
out
ds
cmp
ret
pop
push
arpl
adc
jns
scas
jo
jp
dec
dec
sub
iret
mov
insb
mov
mov
dec
rorl
daa
push
adc
mov
push
shll
divl
jmp
std
call
sub
aad
xchg
fbstp
or
jb
je
out
hlt
xor
dec
xchg
inc
out
stc
and
mov
xorl
xor
mov
pop
cmp
fcmovnu
arpl
mov
xor
or
fistpll
dec
aam
lods
into
sbb
jne
out
in
lock
pop
ficomps
popf
icebp
jle
sub
jns
insb
mov
mov
sbb
jl
cmp
es
int3
sahf
les
adc
cmpsb
pop
movsb
push
call
cmpsb
adc
add
adc
sbb
jle
enter
in
jecxz
mov
cmp
in
mov
dec
jp
aam
test
mov
cli
test
scas
and
shlb
leave
push
sub
aad
xor
push
mov
imulb
ficoml
cltd
xchg
push
addr16
pop
in
push
inc
or
jecxz
pop
mov
dec
sbb
scas
add
ds
mov
andl
ljmp
pop
xchg
out
leave
cmp
out
lret
and
dec
pop
outsb
mov
jle
adc
imul
push
jae
lock
aas
lock
sahf
inc
sbb
loopne
xor
insl
cli
inc
lods
push
mov
pusha
and
mov
sbb
lea
push
inc
pop
or
popf
js
mov
inc
or
nop
inc
xor
js
loop
jp
fwait
or
or
push
and
cmp
xor
pop
dec
loopne
loopne
mov
insl
int3
and
dec
inc
into
push
icebp
pop
aad
sbb
xchg
in
pushf
inc
sub
push
xchg
xchg
aad
lret
push
and
nop
sub
stos
cmp
movb
lock
push
mov
sbb
push
mov
xor
iret
lock
mov
inc
push
cmpsb
stos
lds
jns
pop
cmpsl
pusha
lea
testl
pop
in
lret
xor
sub
scas
out
addl
roll
or
xchg
inc
lahf
call
jg
negb
insl
push
add
sbb
dec
enter
ret
in
jecxz
insl
xchg
mov
mov
dec
cmc
sbb
hlt
and
add
jmp
out
je
xor
icebp
fstl
xor
adc
jmp
js
sub
testb
mov
inc
xor
int3
out
imul
push
dec
jmp
and
arpl
jl
adc
sbb
jl
add
scas
shrl
cmp
pushf
pop
rcll
test
jns
xor
out
or
movsl
std
mov
mov
data16
pop
leave
or
loope
ss
inc
cld
jae
ja
jo
push
nop
push
mov
and
pop
nop
push
or
int3
lea
push
shrl
pop
lods
es
mov
and
icebp
addl
or
cmp
pop
sub
imul
mull
mov
cmp
mov
mov
bound
push
popf
fs
adc
xchg
sub
repnz
mov
cli
and
in
js
mov
sbb
xlat
fdivrs
pop
mov
push
push
inc
outsb
and
insb
or
cmp
mov
loop
mov
push
push
jp
ljmp
push
out
add
ds
daa
cmpl
movsb
push
mov
cmpsl
xchg
cmp
xor
lcall
cmc
jl
and
mov
cltd
jecxz
xchg
push
xor
sbb
jp
jo
out
in
fisubrs
mov
lock
push
pop
daa
out
divb
test
lods
cli
lods
pop
inc
xor
cmc
push
xchg
pop
sbb
repnz
push
adc
rcll
sti
out
cmc
imul
mov
movsl
cli
movsb
aam
je
xchg
cmp
or
cmp
fcomip
and
imul
mov
and
cltd
adc
pop
mov
loopne
decb
lods
fcmovnb
and
sub
adc
mov
repz
data16
fisubs
lea
addr16
adc
xchg
mov
cmpsl
mov
pop
and
insb
jns
test
je
out
ja
pop
pushf
rol
mov
shl
aad
in
mov
and
scas
insl
cmp
mov
xchg
out
push
cmp
mov
dec
clc
and
fnstcw
and
xor
out
cmpsb
test
mov
mov
lcall
test
out
sbb
jmp
lret
jb
popf
xchg
xchg
jmp
pop
push
pop
xor
sub
xchg
xchg
dec
imul
or
inc
ljmp
inc
and
imul
mov
stos
insw
dec
cmpsl
or
cmp
mov
test
bound
stos
inc
call
mov
hlt
lcall
ljmp
adc
dec
cwtl
subb
inc
pop
mov
sub
and
pop
icebp
xchg
stc
and
test
lahf
cmp
dec
mov
orb
inc
cmp
lods
cs
xchg
es
push
inc
jae
jg
pop
cltd
gs
mov
rorl
and
lods
ja
sahf
cmp
jle
stc
jl
xor
cmp
sub
mov
notl
sahf
in
inc
mov
scas
pop
sub
cmp
jg
popf
roll
mov
or
lret
inc
lcall
pusha
add
sahf
pushf
or
rol
xor
daa
mov
ret
test
leave
pop
aaa
daa
int3
mov
je
pop
mov
pop
arpl
mov
lea
add
les
lahf
out
stos
pop
movsl
dec
imul
push
loop
test
mov
jne
in
jae
arpl
cmp
fistpll
cwtl
adc
push
test
mov
repz
xchg
mov
xor
mov
fwait
lret
movsl
mov
mov
adc
xor
mov
or
out
sub
cmp
sbb
pop
xchg
roll
rcr
popa
js
dec
mov
sbb
data16
inc
cs
xchg
out
dec
rcll
lea
dec
pop
out
jno
cmpsb
out
dec
fldl
sub
or
jne
aaa
adc
loopne
pop
and
lea
aam
mov
xor
push
in
loopne
fbld
or
cmp
out
pop
into
fistl
and
jmp
aas
mov
es
hlt
filds
add
xchg
mov
lea
push
add
shrb
rorl
adc
lds
adc
lahf
push
je
fcmovb
xor
lock
pushf
xchg
sbb
iret
dec
pop
push
xor
dec
jno
rcr
decb
imul
xor
popa
jne
cmp
fstpt
cli
jmp
out
pop
out
mov
test
push
xchg
scas
push
mov
rcr
and
inc
fs
add
lock
push
in
cmp
enter
push
mov
lods
into
or
cltd
pusha
push
push
movsb
xchg
xlat
or
adc
fwait
push
into
mov
xlat
bound
lret
imul
mov
das
inc
xchg
push
icebp
daa
sub
cmpsl
mov
push
sbb
dec
test
mov
cmp
icebp
or
and
aad
adc
lds
es
push
inc
int3
loopne
rcll
negl
clc
sbb
movsb
in
push
xor
sbb
lret
pop
enter
cmpsl
sub
pop
cmc
stc
inc
add
mov
aad
push
fldl
cmp
mov
lret
mov
and
cmp
mov
repz
outsb
stos
push
notb
fcompl
es
call
xchg
test
cld
xor
fldpi
mov
push
shll
popf
fucomi
inc
and
jle
aad
cmp
or
repz
add
mov
call
mov
js
test
jbe
les
mov
fs
xor
scas
lret
aaa
pop
hlt
dec
lds
dec
enter
scas
pop
adc
xchg
mov
inc
cmp
mov
pushf
sti
outsb
xor
nopl
movsb
add
fdivl
and
jnp
aas
lret
fisttpll
nop
cmp
es
cmp
sbb
sbb
jmp
das
js
and
decb
inc
es
mov
and
loope
enter
dec
mov
dec
outsl
xor
call
cwtl
mov
and
push
pop
push
out
mov
cmp
and
gs
mov
dec
push
test
bound
adc
in
jle
mov
in
je
notb
sti
or
loope
cmp
test
and
xchg
shl
jo
add
and
repnz
push
dec
imul
dec
movsb
lahf
adc
popa
fcmovnu
xchg
mov
js
sub
mov
fadds
mov
jle
je
lock
dec
bound
fdivrs
movsl
pop
inc
fisubl
mov
sahf
scas
cltd
movsl
inc
push
cmp
mov
xorb
xchg
lahf
push
rolb
int
mov
cli
push
push
scas
aam
mov
addl
loope
or
push
jge
ret
ja
popa
repz
xor
fcmove
and
lock
orl
addr16
mov
lea
loope
sub
clc
mov
add
fstps
insb
cmc
and
pop
out
int
and
repnz
nop
mov
sub
std
dec
sti
cmp
pop
and
insb
adc
cs
insl
dec
pop
enter
mov
add
stos
pop
insb
loopne
xor
xor
int
dec
push
lret
nop
movsl
sub
sub
rcll
mov
xlat
shr
div
fchs
imul
out
movsb
jl,pn
shlb
or
les
dec
pop
sub
lds
das
cmp
pop
call
pusha
daa
push
and
xor
inc
mov
mov
lea
out
dec
shl
mov
fs
inc
xchg
jns
and
xchg
out
stos
lds
and
std
jecxz
mov
fs
test
ret
out
ja
sbb
outsb
jle
mov
lock
loopne
movsb
add
pop
jmp
xchg
call
mov
xor
xchg
stos
and
push
mov
sub
dec
insl
pop
das
repnz
ja
iret
pushf
aad
pop
in
add
add
sahf
gs
mov
js
orl
aad
out
dec
jno
mov
pusha
aaa
mov
jecxz
stos
out
mov
adc
loope
mov
shrl
mov
insl
clc
lcall
mov
mov
sub
or
test
pop
or
pop
add
push
pop
fiadds
mov
dec
lret
movsbl
push
inc
push
pop
push
fsubr
mov
pop
gs
lcall
dec
mov
or
in
sar
mov
and
push
ret
xor
or
pop
leave
addb
insb
inc
lea
inc
jp
add
xor
arpl
push
insb
lret
and
or
outsl
mov
les
aaa
adc
inc
aad
aad
out
rcr
cmp
jp
add
filds
xlat
xor
outsb
lock
and
leave
aaa
add
mov
pop
xchg
xchg
push
ror
push
popa
adc
sub
add
adc
add
mov
clc
xor
mov
pop
and
rcr
ljmp
dec
inc
das
mov
insl
mov
mov
dec
inc
fs
push
repz
xchg
int3
push
lcall
adc
dec
mov
cmp
push
jp
fdivrl
xchg
jge
setbe
inc
int
in
push
enter
push
loopne
ljmp
dec
dec
fcoms
mov
adc
sahf
and
and
mov
jns
mov
push
xchg
add
sti
lret
fdivp
ljmp
cmp
js
wrmsr
xor
andps
rcll
xchg
mov
pop
dec
add
push
int
lods
xlat
add
xor
out
push
js
fcmovb
adc
sub
push
popa
sbbl
js
push
inc
jae
cmp
call
lret
add
fists
jbe
push
push
cld
inc
lret
into
testb
xchg
mov
ror
push
xor
lret
icebp
mov
shr
aas
ljmp
loopne
mov
lahf
jmp
adc
mov
sub
mov
dec
xorb
sub
dec
inc
xor
cmp
inc
outsl
js
in
sbb
push
aaa
repnz
aam
sbb
iret
dec
inc
push
dec
arpl
decl
and
add
popa
push
mov
inc
add
fldl
aas
cmp
cmp
cs
nop
dec
sub
or
xchg
test
jmp
jno
pop
mov
popf
xchg
adc
iret
sahf
pop
dec
popl
idivb
pop
adc
or
xchg
ficomps
mov
popa
fldt
inc
and
adc
pushf
mov
mov
imul
adc
js
iret
insb
scas
adcl
dec
push
pop
ljmp
sbb
fwait
lcall
ret
mov
and
jns
mov
cmp
imul
adc
push
cli
rorl
hlt
addb
insb
rclb
push
stos
push
insb
pop
mov
xchg
sub
push
movsl
xor
cmp
and
mov
jmp
mov
pop
lret
mov
xchg
jp
out
ret
add
shl
inc
push
mov
rcrb
pop
loope
bndldx
or
or
cmpsb
std
push
cmpsb
xchg
movsl
add
imul
cli
push
lods
sbb
mov
mov
lahf
mov
popa
jl
lock
aad
dec
aad
inc
sahf
jge
fsubr
incl
clc
cs
lret
mov
daa
rorl
sar
mov
dec
jb
jmp
or
shll
add
stos
movnti
jne
xchg
popa
mov
mov
out
outsl
and
mov
pop
aam
dec
cmp
loope
cmp
cld
mov
sbb
push
inc
sbbl
out
ds
push
pusha
push
or
loop
push
adcl
sub
push
divb
xor
cld
dec
and
inc
das
outsl
jmp
ret
add
push
dec
popf
xor
ss
cmp
into
flds
or
in
imul
ja
nop
in
std
mov
lret
mov
in
xchg
or
mov
add
push
sahf
pop
into
jae
dec
hlt
es
jb
js
adc
gs
sub
movsl
ret
fmull
and
hlt
inc
int
lods
or
sub
mov
push
xchg
sbb
and
loope
testl
je
lods
int
scas
dec
push
fistps
sahf
push
movsl
add
je
scas
mov
ljmp
adc
das
outsb
adc
fistpl
jae
inc
mov
pop
imul
or
xor
stc
dec
stos
dec
xchg
cli
lods
push
jp
lds
add
push
push
xlat
loopne
lret
aad
xadd
shl
pop
dec
stos
lds
sbb
ficomps
jne
cli
push
loope
in
sbb
jns
sarl
or
jo
jp
ds
int3
sub
movsb
lahf
hlt
or
dec
dec
lea
pop
outsb
das
and
cs
add
xor
test
add
mov
or
xor
sub
and
dec
mov
pop
in
lcall
lret
cmp
enter
mov
fisubl
lahf
inc
es
lcall
mov
xchg
es
aas
orl
jo
xor
xor
add
repz
lods
insb
mov
call
out
es
stos
push
arpl
jg
in
mov
js
pop
add
cmc
mov
adc
push
inc
jns
cltd
mov
fidivs
inc
fdivrl
lcall
int
or
pushf
and
inc
jne
imul
icebp
insb
sub
or
and
mov
cmp
push
fists
loopne
fcoms
js
lods
push
mov
pop
lock
and
sbb
hlt
push
xchg
stos
rorb
jae
cmpsb
mov
ret
aad
push
add
inc
jns
jmp
push
aaa
push
cmpsl
adc
mov
jp
cmpsb
rorb
outsb
xchg
and
daa
sar
cmp
ret
sbb
shlb
jno
xchg
jbe
xor
mov
add
out
xchg
lds
testb
cmpsb
push
pop
pop
and
fsubrs
lock
xor
lea
mov
pushl
repz
movsb
cmpsb
daa
add
add
jle
adc
xor
cmp
xor
jg
int3
out
addl
js
jle
dec
sarb
and
push
or
xchg
or
stos
xchg
add
mov
leave
fldcw
lcall
fisubl
pop
insb
std
scas
xchg
sub
stos
adc
rolb
xchg
add
cli
pop
jno
int
jmp
cmp
jle
arpl
inc
imul
cmp
cmp
fsubl
push
add
jp
push
adc
pop
cmp
aas
jle
xlat
loope
and
mov
adc
sbb
push
stc
inc
pop
repz
jecxz
xchg
xorl
xor
xor
popf
dec
pop
enter
and
in
popf
stc
jns
inc
or
shl
pop
mov
test
iret
and
jne
mov
and
ja
mov
xchg
sub
in
and
adc
push
dec
insb
shll
pop
cmp
mov
insl
mov
sbb
or
stc
pop
daa
jle
bound
cwtl
jecxz
pop
and
fildl
xlat
mov
push
mov
js
mov
push
insb
test
add
xchg
lock
add
rclb
call
jae
xor
ljmp
xor
xor
adc
bound
push
mov
mov
jecxz
lahf
jnp
ret
mov
sbb
push
jle
jns
test
data16
pop
mov
icebp
repz
xor
jmp
cmp
jp
mov
fstps
je
jo
test
ret
mov
xchg
xchg
test
adc
pop
pop
jbe
orb
dec
icebp
mov
mov
imul
xor
mov
push
jg
fidivs
inc
or
dec
sub
fbstp
fwait
mov
aam
jle
jmp
fs
jle
and
push
popl
or
daa
jmp
das
shll
les
cld
stos
xor
imul
mov
and
outsb
jno
lea
xchg
dec
xor
sbb
adc
adc
cmp
push
adcl
pop
cmp
mov
sub
sbb
jmp
out
push
mov
inc
daa
dec
pop
jecxz
rorb
dec
add
pop
pop
or
stc
fdivrl
sahf
inc
jnp
addr16
jp
test
push
std
xor
shr
popa
cli
push
lcall
pop
lcall
push
jg
inc
inc
cmpsl
addr16
fwait
inc
lret
mov
adc
mov
pop
mov
sbb
mov
xlat
push
in
and
xlat
fwait
and
mov
andb
or
fs
xchg
in
pusha
aaa
fldcw
push
aaa
mov
mov
mov
in
outsb
cltd
mov
inc
mov
push
and
inc
add
mov
adcl
stos
push
push
inc
imulb
fwait
cmp
add
mov
lods
lret
pop
fnstsw
dec
push
and
mov
push
mov
push
repz
inc
fadds
bound
into
xor
pop
sbb
das
ja
adc
call
leave
push
in
mov
sub
push
mov
push
xor
sbb
mov
cmpsl
fwait
jns
add
jno
int3
xor
inc
mov
or
push
mov
das
xchg
xchg
test
test
push
clc
seto
arpl
nop
call
fwait
sub
fwait
arpl
and
dec
mov
xor
sbb
imul
sbb
and
dec
sbb
mov
loopne
movsb
jmp
push
or
mov
push
test
xor
imul
lods
or
adc
pop
jne
cld
mov
sbb
cld
xor
cmpsl
pop
test
and
sbb
lahf
adc
mov
dec
sahf
loop
push
pop
test
sahf
sti
es
adc
jl
sbb
pop
mov
or
cmp
out
in
jge
xchg
xchg
ret
adc
ljmp
and
xchg
cmp
dec
ljmp
es
push
stc
shrb
cmp
aas
imul
movhps
rolb
call
int
out
iret
icebp
push
lret
test
push
in
and
insl
mov
inc
and
add
insb
enter
das
jno
sbb
repz
push
mov
lahf
clc
xchg
ror
sti
xor
or
or
inc
xchg
das
sahf
xor
cld
imul
aad
clc
repnz
dec
cmp
inc
mov
nop
lcall
dec
adc
sahf
fdivl
scas
push
call
add
mov
sub
add
test
pop
or
push
or
mov
or
pop
lcall
enter
adc
lods
rol
mov
mov
sbb
scas
sti
int
xchg
mov
xor
mov
adc
inc
jo
daa
cld
push
int
jge
cmp
leave
jg
and
adc
xchg
or
dec
adc
pop
aam
mov
mov
sarl
stos
and
in
cmp
fsts
bound
pusha
jns
aaa
xor
out
jp
sub
mov
int
in
mov
xor
and
push
jp
pusha
or
mov
fisttpl
insb
pop
dec
popf
inc
aam
into
push
addb
and
sbb
add
test
pop
into
sub
sub
aad
pop
imul
mov
mov
data16
fcoml
in
sahf
lret
xchg
das
test
lds
lods
pop
fisubrs
ffree
aad
ret
or
jo
cmpsl
shrb
scas
ficompl
outsl
push
pop
jnp
jle
lret
int3
jbe
outsb
cld
test
push
pushf
mov
cltd
mov
adc
adc
fwait
push
dec
inc
int
repz
xor
test
test
pop
fldt
enter
sti
mov
jno
outsb
xchg
mov
add
or
orb
cmc
cmpsl
and
mov
ds
add
cmp
xor
pop
add
cmp
or
stos
pop
and
sub
and
xchg
and
adc
lock
ret
dec
out
fisttpl
inc
cmp
inc
cmp
in
mov
popa
lcall
mov
cli
mov
sbb
aad
aaa
push
pop
cmp
and
sarb
mov
sbb
fs
and
testb
pop
fsubl
jb
pop
fwait
ret
int
jo
jge
mov
pop
cli
ret
lea
jmp
out
aaa
mov
lcall
filds
xor
fisubrl
sub
pop
cmp
xchg
ret
cmpsb
pop
dec
fildl
ret
rolb
sbb
dec
xlat
in
adc
lds
scas
negl
dec
daa
inc
jp
xchg
lret
loopne
mov
cwtl
xor
fisubs
xchg
push
loop
sti
sbb
aad
push
call
ret
outsl
pop
mov
xor
pop
jnp
nop
push
fdivs
or
dec
rcrl
lock
cltd
fisttps
mov
mov
sahf
inc
xchg
push
std
add
outsb
imul
pop
or
mov
iret
adc
push
push
or
xchg
inc
jmp
xor
mov
loop
in
mov
lock
pop
mov
and
mull
testl
mov
mov
jns
lods
xchg
adc
into
xor
sub
scas
dec
jnp
cmpsb
andl
daa
test
add
popf
inc
hlt
push
push
and
mov
xchg
cltd
sub
cmp
out
test
out
inc
insl
mov
or
jne
mov
pop
xor
cld
push
sub
jge
test
lock
cmp
mov
inc
push
sbb
mov
inc
inc
popa
cwtl
ficoml
fnstenv
fisubrl
sbb
cmp
cmp
mov
in
mov
sbb
and
lods
scas
ds
js
xchg
xchg
jb
dec
aam
out
sti
dec
add
inc
dec
add
push
mov
mov
popa
mov
pop
rorb
test
addr16
or
cmp
sbb
insb
sub
test
inc
xlat
paddusw
int3
in
rcll
xor
repz
loopne
fisttpll
subl
mov
popf
mov
pop
jmp
and
fs
fstpt
adc
cwtl
lds
push
fcomip
jge
popf
mov
subb
cwtl
or
jae
dec
jecxz
insb
cmc
xor
push
cmpsb
inc
mov
lret
shrb
clc
jno
push
sub
stc
arpl
mov
xor
push
mov
or
pushf
mov
pop
jae
js
test
jb
fwait
pop
in
mov
mov
push
sahf
jmp
push
bnd
loop
imul
iret
push
cs
in
and
shll
sbb
inc
insb
pop
sbb
cltd
jne
jbe
mov
sub
stos
bound
cli
adc
mov
fstpl
subl
mov
fwait
inc
insl
data16
test
xor
mov
jae
mov
into
add
imul
cltd
aaa
mov
push
stos
xlat
mov
add
daa
mov
lods
int
test
movsb
cld
sbb
cmpsb
pop
fsts
fwait
enter
test
sti
out
test
push
adc
mov
lcall
ret
fdiv
pop
adc
xor
sub
xor
arpl
pop
jp
hlt
or
divl
ficoml
movsb
jo
repz
sti
lock
and
push
add
je
and
and
notl
mov
mov
fsubrl
sbb
mov
out
std
pop
cwtl
xchg
mov
lods
push
or
pop
fsubp
aaa
in
fldcw
sbb
sub
mov
push
and
dec
setl
adc
or
push
lock
ret
fwait
or
and
xor
in
mov
into
mov
nop
insl
sub
push
fldcw
mov
cwtl
dec
mov
pop
pop
je
sti
les
jb
shll
fwait
mov
xchg
jp
push
enter
adc
rcl
ljmp
andb
and
call
iret
imul
pop
sub
inc
inc
mov
xor
mov
stos
es
jp
jb
and
cmp
shll
pushf
in
mov
sbb
sub
jg
push
push
xor
cmc
popa
movsb
xchg
and
pusha
xor
test
and
inc
and
push
push
fcomps
int
sbb
adc
cld
mov
je
shl
sub
shrl
shrb
push
jns
imul
jo
lds
cmpsb
push
inc
or
fdivl
rcrl
add
dec
mov
or
xor
sbb
jns
fwait
mov
adc
and
mov
mov
shlb
addl
pop
and
movb
pop
mov
xchg
sbb
lret
adc
push
ja
mov
mov
pop
mov
lahf
sarb
loop
xchg
fst
invd
inc
push
in
sbb
dec
adc
daa
push
cmp
aad
ljmp
add
mov
test
inc
out
push
imul
outsl
push
push
dec
add
roll
shrb
fisubrl
jmp
scas
stos
loop
shlb
and
mov
int
mov
xlat
int3
mov
mov
lret
cmp
adc
into
push
sahf
push
int3
push
mov
lahf
push
fcmovne
insb
lock
fadds
int3
cltd
mov
pop
cmp
mov
sbb
mov
lcall
mov
push
jno
dec
loop
scas
cmp
xlat
xor
jno
stos
xor
sbb
js
gs
aam
sub
sub
mov
dec
stc
fdivp
xchg
shrb
mov
loop
or
pop
cwtl
fscale
mov
shl
mov
fwait
sbb
inc
jnp
ret
loope
je
fistps
sbb
mov
xchg
cwtl
or
les
pop
sbb
out
ret
or
fbld
mov
lea
push
clc
sbbb
inc
or
shl
les
mov
pop
mov
inc
sti
jp
push
inc
in
fwait
sti
xchg
or
inc
sbb
out
inc
xchg
rcr
push
roll
mov
lret
daa
testl
test
fiaddl
cmp
pop
out
xchg
mov
push
lea
or
movsb
decb
fstps
fsub
inc
cltd
std
sub
mov
in
xchg
lea
push
mov
cmp
invd
lret
into
and
xchg
jne
je
sub
aas
push
outsl
into
jg
cmp
movsb
lahf
push
movsb
test
pop
mov
jb
xchg
inc
inc
push
sbb
shl
mov
js
inc
icebp
mov
pop
pop
ret
xchg
scas
icebp
cmp
pop
jns
inc
mov
add
jecxz
xchg
xchg
popf
mov
leave
cmpsl
jg
adc
adc
cmp
idivl
hlt
mov
rcrb
bound
call
push
jecxz
lret
cmp
test
adc
push
and
movsl
int3
push
jecxz
fs
sub
out
mov
cs
cmp
dec
mov
lds
or
pshufw
add
inc
bound
scas
imul
jo
jge
rcl
clc
jns
xor
push
sbb
je
jae
insl
adc
daa
rol
js
in
data16
jp
mov
jmp
sbb
cmp
orl
adc
pop
scas
or
out
cmc
data16
fnstenv
push
bound
sub
in
in
data16
mov
add
dec
out
and
scas
mov
mov
cmpb
test
add
jb
shl
dec
mov
mov
faddl
pop
lds
lret
lret
hlt
inc
push
pop
cli
fdivrs
faddp
push
aas
jle
jmp
push
or
xchg
xorb
or
or
xor
xchg
xchg
in
mov
add
loop
adc
aad
sub
mov
nop
mov
cmp
out
push
jg
imul
mov
test
pop
lret
iret
jp
aaa
popf
das
ljmp
out
lea
imul
in
cmp
test
xchg
mov
push
insl
iret
cmp
fildl
clc
cmc
xor
pop
mov
lret
cmp
into
aam
aaa
cmpl
iret
ljmp
in
push
jp
loop
shrb
arpl
je
jp
int
inc
push
push
mov
mov
shlb
adc
or
enter
cmp
adc
andl
pusha
push
aaa
adc
in
add
cmp
out
lds
repz
inc
add
sbb
fdivrs
xchg
insl
bound
jl
or
cmc
inc
jge
lcall
js
ss
aad
pop
mull
pop
out
enter
jle
jge
xor
cltd
lods
add
movsw
sub
and
xchg
bound
negl
lcall
xchg
test
mov
xchg
dec
clc
fmull
jne
pop
movsb
dec
adc
push
adc
sbb
and
insl
test
mov
out
pop
push
mov
add
rcll
inc
rorb
fldcw
mov
sub
loopne
sbb
dec
pop
fwait
jge
push
push
push
ret
mov
jmp
lret
pushf
cmp
jno
cmp
xor
xor
jns
cmpsl
cmp
dec
mov
cmp
add
test
mov
inc
push
shlb
and
enter
cmpsl
data16
pusha
and
test
enter
inc
and
sti
in
ret
call
sbb
call
sub
mov
fdiv
push
aas
push
pusha
dec
cmp
jle,pt
sbb
xchg
call
cwtl
mov
arpl
pop
xchg
cmp
dec
loopne
push
ficomps
adc
mov
mov
sub
mov
pop
adc
sub
ss
int3
push
gs
aad
push
movsb
lods
sbb
or
movsl
iret
loop
dec
pop
adc
jmp
das
pushf
jnp
loope
add
inc
aam
enter
cmp
fsubs
jg
inc
push
bound
and
ret
lcall
fwait
mov
xchg
rcrl
push
daa
mov
in
outsb
out
stc
popa
inc
mov
movsb
xorb
lock
fnstenv
sbb
ror
lret
mov
fwait
lret
dec
jle
pop
jbe
mov
jp
and
sbb
imul
addr16
adc
je
cmp
insl
aas
pushf
orl
push
sub
into
xlat
and
enter
cmc
xor
or
mov
stc
cmp
ror
mov
add
sub
mov
pop
clc
sub
stc
shll
ret
xchg
and
dec
movsl
repz
sbb
xlat
sub
fwait
dec
fdiv
and
mov
popf
jl
jl
int3
cmp
ret
pusha
fidivl
xchg
ja
int3
movaps
outsl
in
sub
inc
jb
xor
dec
in
inc
or
rcl
jl
lods
mov
pop
cmpsl
icebp
test
xchg
cld
scas
mov
add
jno
nop
adc
lret
out
xchg
clc
rorl
hlt
mov
int3
pop
ss
dec
lds
push
mov
das
inc
add
dec
clc
out
sbb
or
xchg
cmpsb
cmp
inc
adc
and
inc
andl
dec
sub
sbb
dec
ds
popf
enter
cld
jl
push
stc
es
iret
push
lds
xor
adc
jp
lret
mov
scas
insb
or
shlb
imul
rclb
je
push
test
fisttps
push
in
int3
jo
inc
sbbl
pop
cmpsb
mov
lret
dec
adc
push
xorb
sbb
jae
adc
mov
iret
fsts
cs
or
dec
sub
adc
sub
push
int3
jbe
loopne
inc
flds
cmc
cltd
lcall
leave
jbe
dec
insb
or
nop
or
adc
arpl
adc
jbe
pop
add
cmp
rorb
ja
gs
pop
lcall
add
rcr
dec
dec
add
lea
xchg
jne
movsb
lods
mov
ret
test
clc
in
jp
insl
mov
or
enter
jnp
sbb
lcall
push
test
inc
scas
test
dec
dec
cmc
pop
je
xlat
orb
pop
sti
sub
outsl
aad
jecxz
jne
out
bound
push
mov
test
lahf
imul
and
sbb
loope
aaa
jg
pop
dec
pop
cwtl
sub
movsb
fildll
xor
fsubrs
imulb
stos
jnp
cmpsb
cli
and
push
leave
xchg
ss
inc
mov
pushf
pop
mov
sub
test
or
ret
sahf
jae
cmp
cmpsb
mov
lds
mov
or
jmp
inc
push
jbe
mov
xchg
test
inc
inc
sti
aad
sub
mov
femms
in
ret
adcl
xor
testb
sbb
push
inc
inc
pop
ljmp
je
mov
lods
push
xor
sub
lahf
and
ja
out
js
mov
cmpsl
cltd
int
jmp
sbb
jge
roll
fisubrl
ss
ss
mov
outsl
xchg
test
insl
in
in
imul
dec
and
pop
add
adc
pop
mov
ud2
jl
sbb
push
jmp
ret
mov
jo
jo
sbb
mov
inc
cli
addr16
daa
xorl
jo
inc
fbld
lcall
sub
sti
xchg
movl
ja
psubusb
push
jns
cmp
movsb
outsb
mov
and
rolb
mov
sub
testb
insb
leave
out
int
aam
bound
and
xchg
add
add
leave
outsb
std
mov
sbb
xor
mov
movsb
fmuls
frstor
cmp
and
in
add
jo
pop
and
mov
pop
hlt
inc
sbb
cmp
rolb
call
mov
pop
fs
lret
testb
sub
out
stos
mov
fs
test
test
push
inc
movsl
outsl
ret
js
test
xchg
test
roll
inc
pop
ret
jbe
scas
mov
leave
xchg
add
iret
adc
fisubl
or
jno
orb
xor
jg
insb
jo
adc
jl
xchg
shlb
shr
jl
out
enter
cli
add
out
or
xor
lret
adc
addr16
fidivrs
mov
ss
lret
xchg
jl
icebp
nop
mov
cmpl
dec
ljmp
sbb
lock
clc
cld
inc
in
mov
jl
lahf
dec
jae
jmp
mov
sub
lret
clc
lea
push
pop
hlt
mov
mov
sti
pop
dec
jmp
in
or
push
outsb
je
pop
mov
cld
jecxz
and
mov
shr
hlt
mov
mov
rorb
sub
enter
jg
lret
add
jg
mov
insl
sub
jg
mov
stos
sbb
or
xchg
scas
mov
scas
mov
dec
mov
mov
and
in
push
es
and
and
lock
inc
sbb
fisttps
cltd
subl
fnstenv
sub
insl
stos
fwait
jnp
xchg
out
xchg
pop
xchg
sti
add
push
repnz
mov
pop
imul
fbld
in
adc
inc
xchg
test
daa
testb
fldcw
outsl
mov
inc
ljmp
lds
daa
push
dec
shll
push
jp
inc
adc
scas
mov
lahf
inc
xchg
popf
add
and
push
scas
mov
mov
inc
fisubl
dec
dec
inc
xchg
push
mov
push
add
addb
add
mov
sub
cmp
dec
and
inc
cltd
cltd
adc
xchg
pop
and
cli
dec
mov
inc
jbe
lock
cltd
insb
sbb
leave
jbe
repnz
inc
push
gs
and
jnp
xor
ja
add
pop
dec
mov
lcall
scas
dec
js
adc
fisubrl
mov
dec
dec
fst
cli
leave
mov
mov
popa
push
adc
lods
mov
fsubs
mov
stc
nop
mov
loope
lcall
add
cmpsl
mov
push
or
xchg
in
xlat
xchg
push
cwtl
imul
icebp
js
pusha
lock
jp
pop
testl
or
fdivrp
rclb
into
and
or
addl
mov
pushf
loope
and
orl
ja
fnstsw
and
jle
cmp
mov
adc
cmp
out
push
incl
jae
mov
shlb
ds
add
mov
jb
jne
pop
js
dec
mov
ljmp
fmul
add
insb
loope
adc
jecxz
inc
dec
int
ret
shr
sub
jg
mov
push
lods
imul
inc
and
sbb
fadds
and
test
jne
pop
sbb
lds
pmaxub
sbb
push
loope
pop
jmp
arpl
xchg
mov
stos
stos
push
mov
dec
jp
jbe
sub
dec
push
popl
cltd
dec
or
xchg
and
fimull
iret
jo
repz
pushf
in
xchg
mov
js
and
xchg
add
les
or
pusha
xor
out
inc
repz
lds
lds
xor
inc
or
jmp
push
mov
and
mov
mov
jb
fimuls
sbb
push
add
jbe
dec
es
fucomi
mov
pop
mov
jb
test
iret
dec
sbb
mov
std
adc
dec
imul
sbb
push
cltd
ror
add
leave
xchg
xor
adc
pop
xchg
xchg
inc
jp
mov
shl
in
lds
je
rcrl
cmp
lret
lods
imul
jae,pn
jge
pusha
mov
mov
aad
aad
mov
mov
or
sbb
mov
mov
bound
ja
divb
lock
std
sub
mov
shlb
shll
pusha
test
inc
ret
xchg
shl
daa
mov
mov
arpl
loop
pop
mov
mov
mov
out
xchg
imul
arpl
adc
mov
lods
out
stos
pop
incl
mov
jp
cmp
icebp
inc
dec
inc
mov
add
ss
mov
xor
aad
lret
jecxz
xchg
adc
push
mov
int
jmp
mov
or
rcll
pop
xlat
mov
sbb
push
cs
adc
jl
test
mov
lock
loop
lret
mov
cld
data16
or
icebp
cmp
lahf
or
lret
xchg
jbe
stos
add
pop
mov
sbb
cmp
lock
or
xor
inc
dec
xor
mov
dec
leave
leave
or
xor
sub
adcl
inc
add
subl
pop
sbb
cmp
out
mov
jg
dec
dec
and
xor
pop
into
sbb
push
iret
lret
fbstp
jo,pt
xor
cltd
push
shll
inc
pop
add
xor
cld
shll
cwtl
cmp
mov
jge
icebp
iret
mov
jno
cld
pop
jno
xchg
aam
sub
fmull
aad
jp
adc
mov
leave
mov
mov
inc
cmpsb
jno
sub
shl
xchg
push
shrb
cmp
mov
adc
decl
dec
xor
fiaddl
pusha
js
imul
push
xchg
es
pop
inc
ss
adc
push
cmp
ja
jo
lret
and
dec
stos
outsl
pop
std
sub
out
aad
arpl
sbb
push
pusha
mov
or
and
test
popa
dec
aam
jnp
push
mov
int3
cli
sbb
mov
push
fistpl
dec
push
imul
lds
cmp
pop
imul
popa
xor
xchg
mov
push
es
jae
mov
xor
int3
sbb
fs
bound
fwait
pop
dec
xor
mov
jno
aaa
or
mov
dec
cmp
arpl
rorl
adc
outsl
rorb
and
xlat
in
lahf
pushf
add
lea
lods
push
jge
call
dec
or
cmp
in
push
pop
and
pop
jmp
push
jp
loopnew
mov
daa
dec
cmp
and
pop
sbb
fisttps
popa
pop
lret
and
push
arpl
in
add
out
pop
mov
loope
pop
mov
mov
push
jg
xchg
inc
out
test
mov
dec
xchg
jbe
adc
or
sbbb
cmp
xchg
xor
jl
std
mov
pop
sbb
fldenv
movsb
fdivrs
push
popf
pusha
subb
scas
call
mov
inc
mov
test
ret
lock
or
andl
fsubrp
and
and
sahf
dec
xchg
adcl
inc
inc
mov
pop
or
pop
fidivrl
xchg
scas
sbb
roll
rcl
icebp
mov
adc
push
sbb
cmc
out
cmp
sub
adc
mov
je
xchg
nop
cmpsl
dec
lret
outsb
icebp
xor
test
pop
jae
xchg
mov
push
inc
cmpsl
stos
dec
out
pop
cmpl
dec
xchg
pusha
aam
dec
inc
sub
movsb
pop
sbbb
fucomi
cmpsl
incb
outsb
mov
inc
push
imul
rcll
test
cmp
push
fwait
jle
test
into
and
into
into
lock
cltd
dec
icebp
xor
aaa
aas
jp
jge
cmpb
sbb
pop
push
mov
xor
pop
and
mov
and
cmp
shrb
mov
push
push
adc
sbb
ss
add
mov
inc
mov
fnstsw
scas
repnz
push
pop
xchg
pop
cwtl
fcomp
mov
sub
cmp
js
aaa
insl
mov
and
xchg
incb
mov
les
mov
aas
cli
xor
push
or
mov
sbb
xchg
jp
sub
arpl
scas
mov
cmpsb
ss
xor
sub
jns
xchg
jecxz
push
sub
imul
insb
and
div
cli
test
faddp
mov
xchg
push
add
sub
add
mov
imul
lods
and
fsubs
xchg
mov
sub
inc
mov
xor
push
jae
xor
sbb
dec
in
fists
fnstcw
mov
mov
lods
scas
inc
scas
ret
and
push
fdivrs
mov
hlt
fbld
in
call
or
outsl
rorb
xor
les
push
mov
in
test
jnp
push
lret
dec
inc
push
cmp
xor
xchg
lcall
xor
or
popf
pop
push
test
and
pushf
xchg
xchg
and
push
icebp
push
mov
push
fistl
inc
lea
push
in
pop
xor
stos
push
xchg
sub
sub
and
xor
enter
xor
mov
ret
mov
arpl
ja
mov
cmp
push
cmpsb
push
cmp
in
popf
movsb
xchg
and
pusha
xor
xorl
or
pop
movsl
and
int
sbb
sti
in
rorb
pop
jnp
stos
pop
mov
out
jb
push
sbb
sub
add
hlt
cmp
jp
ret
fadds
adc
jno
ret
sub
xchg
shr
mov
mov
ret
cmp
aam
sbb
js
rolb
insb
shlb
out
sahf
ret
adc
push
adc
jns
or
inc
push
adc
mov
mov
outsb
mov
add
pop
addl
sub
popf
jno
xor
mov
and
movb
clc
addr16
loope
mov
xor
dec
dec
lods
jne
mov
xchg
sbb
sub
hlt
rclb
fs
mov
jbe
jbe
lods
fbld
fcoms
sbb
pop
cmpsb
jecxz
adc
lock
ret
push
cmp
push
pop
pop
aas
xchg
xchg
xor
in
adc
push
pop
data16
dec
pop
rolb
stc
in
pop
jge
sub
jo
imul
and
ret
or
xor
jmp
idivb
sbb
mov
mov
inc
es
je
imul
sbb
xchg
loopne
ja
add
pop
cmp
jg
xor
jecxz
sbb
inc
dec
dec
or
fdivs
dec
mov
jle
scas
sub
push
or
mov
or
jb
mov
adc
sti
inc
dec
jle
movsl
push
repnz
xor
ja
sub
sahf
stc
cmp
xor
out
and
xor
mov
test
sub
cmp
in
xchg
xchg
mov
inc
out
iret
pusha
out
pop
addb
push
ret
jo
fcom
pop
pop
mov
lahf
and
lret
lret
and
std
mov
xor
enter
jnp
push
hlt
aad
and
inc
int3
add
sbb
dec
adc
cmpb
mov
xchg
add
sbb
movb
fmuls
mov
or
cmp
in
jl
jecxz
decb
cmp
in
mov
or
cmp
pusha
call
in
xchg
jo
je
mov
and
cmp
or
xorb
in
cmp
aam
jno
call
mov
jecxz
aas
mov
or
inc
pop
xor
fs
xchg
pop
sub
jle
aas
xor
inc
lcall
sbb
rolb
test
mov
jae
inc
xchg
mov
adc
outsl
mov
repnz
in
pop
mov
adc
loope
mov
mov
jae
sbb
arpl
pop
pop
in
xchg
jl
insb
movsb
mov
and
mov
sbb
into
shlb
out
add
lret
iret
sub
inc
shr
add
push
aaa
mov
lcall
shrl
inc
adc
lods
jmp
lock
pop
or
mov
dec
pop
cmp
sbb
sbb
xchg
sbb
scas
xor
jecxz
cmp
push
leave
js
sbb
xchg
push
mov
int
fdivr
push
pop
aas
sub
mov
cmpsl
mov
lds
cmc
pop
cmp
cmpsb
jmp
and
cmpsb
daa
mov
sub
pop
repz
inc
aam
sbb
sub
jmp
hlt
fsubl
ret
rcrb
in
sti
lret
popa
aaa
arpl
jmp
rcl
out
int
imul
pusha
jg
push
add
ja
dec
xor
stc
testl
lahf
stos
je
aad
frstor
sbb
inc
pop
and
and
es
es
daa
jmp
and
add
bound
lcall
xchg
cli
mov
jecxz
adc
enter
pop
sbb
mov
push
cmpl
adc
stos
imul
fmul
push
into
cmp
pop
push
adc
sub
gs
sbbl
sub
and
sahf
fdivl
cs
in
cld
cli
adc
insl
adc
add
fnsave
imul
icebp
test
imul
outsl
lock
mov
std
pop
inc
cmp
addl
scas
and
push
shll
jle
cmpsb
mov
loopne
cltd
xchg
insl
push
add
mov
xchg
pusha
outsb
cwtl
xor
sub
cwtl
fwait
bound
push
rcrb
cmp
add
xor
adc
add
jmp
aas
cmp
shlb
cmp
jge
sti
xor
mov
mov
nop
loop
and
sbb
pop
out
add
pop
xor
lret
add
scas
bound
and
mov
cli
dec
inc
or
pop
pop
cmpsl
pop
inc
cmp
pop
lret
mov
cmpsb
cmp
shrl
push
in
ret
cmpb
test
out
mov
pop
in
or
mov
dec
add
inc
test
xchg
xor
cmp
cmc
inc
jle
pop
cs
repz
mov
dec
mov
inc
mov
frstor
cmpsb
fmuls
pop
gs
jecxz
xchg
cli
and
popa
inc
dec
ss
fnsave
ffree
cmp
bound
pop
outsl
jmp
dec
int3
out
inc
loope
jns
test
mov
jne
mov
adc
inc
ss
sub
sub
popf
sub
pushf
outsb
ficoms
in
pop
fildl
add
mov
stos
enter
mov
push
sub
push
bswap
test
mov
cmc
int
int3
shl
mov
dec
cmpsb
clc
test
mov
dec
subb
in
aad
cmp
sub
jle
xchg
mov
push
je
in
in
xchg
scas
jae
cmpsl
lret
jl
jl
mov
xlat
ljmp
inc
imul
leave
inc
daa
add
mov
mov
ljmp
movsb
movl
inc
fs
inc
adc
div
or
aaa
xor
test
jb
je
clc
xor
mov
dec
rclb
inc
rcl
sub
cli
leave
sub
mov
addr16
or
stos
xor
pop
push
xor
ljmp
daa
and
mov
push
push
test
gs
jns
sahf
iret
xchg
jno
pop
jmp
inc
mov
ret
subb
push
in
dec
xlat
stos
push
or
xchg
fistps
add
adc
ja
cmp
insl
lea
mov
adc
ficoms
stos
xchg
and
xchg
mov
mov
dec
cmp
cmp
and
repnz
fstpl
xor
sub
cli
jl
enter
push
mov
and
mov
xor
out
popa
iret
outsl
mov
adc
sbb
nop
rcll
adc
jae
mov
sub
adc
sbb
test
fdivrl
inc
lret
inc
sub
in
call
test
mov
lahf
xchg
ljmp
addr16
lock
mov
cmp
testl
add
imul
xchg
outsl
cwtl
insb
decb
jg
cmp
sub
mov
mov
xchg
lahf
cmc
cmp
adcb
cmp
jl
mov
jnp
dec
pop
lret
in
xor
or
mov
jnp
jbe
shr
rorb
pusha
mov
fst
mov
roll
loopne
test
inc
xchg
sbb
lods
or
dec
xchg
lods
data16
adc
shrb
loopne
dec
into
sub
std
test
in
mov
leave
mov
mov
xor
insl
xchg
into
adc
in
ret
lods
imul
popa
insl
xchg
sub
add
xchg
fwait
mov
loopne
mull
cmp
xchg
push
sub
rcrl
mov
push
stc
jae
jbe
push
xchg
push
jns
push
cmp
mov
loope
adc
push
pushf
lods
pop
dec
inc
jae
cmp
and
bound
or
pop
sbb
pop
aas
xchg
mov
ffree
enter
outsl
sbb
xor
xchg
inc
fwait
adc
ret
ds
adc
inc
mov
sub
clc
gs
call
dec
cmp
shlb
or
test
icebp
dec
jae
shrb
call
incl
cld
outsl
and
inc
rcrl
add
rol
call
xor
or
inc
notl
mov
mov
inc
std
les
lahf
lret
push
shrl
xchg
lret
mov
imul
insb
shll
and
add
mov
iret
iret
and
adc
xchg
add
or
fstps
sub
jle
mov
leave
popa
cmp
mov
jnp
xchg
in
cld
dec
bound
je
cmpsl
push
inc
mov
lods
aas
pop
and
xchg
lods
inc
bts
cs
and
fwait
mov
push
push
aas
in
popf
hlt
ja
call
sbb
and
sbb
fistl
pop
adc
mov
sub
test
repz
dec
out
or
dec
jle
out
inc
sub
cli
and
mov
inc
scas
mov
push
and
iret
pop
mov
pusha
xor
xorl
mov
pop
leave
push
jmp
mov
adc
cmp
or
mov
push
or
iret
xchg
pop
jmp
cmp
mulb
jmp
or
loopne
arpl
hlt
add
out
pop
pop
mov
ljmp
mov
enter
imul
mov
into
js
loope
ret
xchg
sub
cmp
cmpsb
xchg
mov
rcrb
or
and
mov
sbb
cld
and
or
fs
push
fdivl
push
mov
lahf
or
inc
xchg
stos
sub
aas
mov
fwait
into
aam
mov
movsl
xchg
ljmp
movsl
clc
hlt
sbb
mov
in
inc
idiv
mov
or
dec
cwtl
jne
cmp
enter
std
test
push
pop
cmpsb
mov
jge
mov
dec
mov
lcall
dec
clc
dec
xlat
adc
out
insb
sahf
aaa
push
and
movsl
adcb
dec
cmp
and
fdivp
push
dec
mov
cmc
out
cmp
jnp
lea
pop
out
mov
xchg
mov
fxch
cmp
mov
sbb
push
sbb
ja
mov
into
xor
jbe
std
sbb
icebp
ficomps
cmpl
inc
inc
dec
in
xor
je
je
jge
popf
sbb
cmp
mov
or
outsl
les
stc
push
xchg
xor
out
push
dec
xor
dec
pop
mov
fsubs
pop
cmpsb
gs
stos
movsl
xor
ret
lods
das
push
inc
loopne
cld
inc
sub
in
daa
jnp
pop
cmp
aaa
mov
aad
jmp
cmc
jno
call
add
and
jno
mov
mul
xor
orb
jo
out
and
and
mov
ret
sbb
add
jmp
ret
subb
enter
inc
mov
jle
add
jae
aam
mov
out
lods
cmpl
out
and
icebp
in
loopne
sahf
int
jne
data16
and
pop
adc
push
hlt
or
movsb
cmpsb
mov
jno
fidivrl
xchg
mov
adc
cs
clc
ficomps
push
sub
add
push
int3
outsb
fists
lea
dec
push
lea
mov
mov
adc
insb
and
loop
xchg
movsb
fidivrl
jp
dec
pop
fsubrs
mov
jns
stos
daa
xchg
pop
mov
jae
sub
cmpsl
mov
ficomps
out
insb
hlt
xlat
in
pushf
fs
gs
mov
pop
adc
in
adc
mov
es
xor
xchg
fldt
ljmp
cltd
adc
push
mov
nop
xchg
jns
stc
in
or
mov
push
movsb
out
cltd
mov
pushl
iret
xchg
dec
cmp
mov
add
out
sub
cmp
loopne
jnp
xor
cmp
inc
test
dec
ds
xchg
fiadds
add
push
into
js
pop
stos
dec
es
jnp
cli
sbb
icebp
mov
sti
cmpsb
xor
mov
adc
or
in
mov
jo
push
les
in
lcall
and
cmc
mov
cmp
pop
add
mov
mov
mov
aad
push
cmp
pop
dec
sub
adc
loope
xor
scas
push
xor
mov
sub
mov
add
or
xchg
xlat
or
pop
les
test
ljmp
jne
cmp
shlb
imul
jecxz
and
pop
xor
cmc
xchg
xchg
hlt
xlat
inc
fsubl
inc
or
push
and
loopne
out
xchg
loopne
xchg
mov
pop
cli
fsubp
sbb
testl
cltd
aas
xor
xchg
lret
jnp
push
pop
inc
imul
or
mov
inc
clc
sarl
sub
inc
pop
aad
mov
pop
clc
cmp
fistpl
out
or
push
and
mov
sub
mov
loop
je
dec
call
cld
aaa
cli
stos
jl
jbe
lea
cwtl
push
dec
aam
int
xchg
xchg
mov
mov
sbb
xor
adcl
push
dec
or
lds
cmpsb
jle
adc
pop
call
sbb
ret
push
into
xor
push
shrl
inc
mov
shrl
jp
adc
pop
call
stos
mov
mov
jnp
mov
addl
cs
in
cmp
lahf
push
adc
and
inc
insb
mov
out
not
jecxz
notb
add
adc
xchg
call
inc
and
cli
scas
cmp
popf
fcomps
adc
icebp
pop
mov
arpl
fidivs
testb
std
mov
xor
and
mov
inc
mov
sub
or
fistpl
movsl
cmp
xchg
or
push
dec
insl
push
fbld
cmp
and
in
push
adc
sub
and
mov
hlt
mov
pop
fisubrl
rorb
jbe
les
push
sbb
mov
fildll
sahf
mov
xchg
daa
cmp
les
in
inc
mov
inc
in
inc
pop
sti
sbb
in
call
xor
dec
lea
fmull
mov
and
decb
lret
xlat
push
rol
scas
mov
outsl
xor
mov
dec
jb
mov
movsl
stos
sti
xorl
push
fwait
pop
in
das
out
test
push
imul
movsl
jmp
out
jb
xor
cwtl
push
dec
sarb
js
inc
std
xor
add
in
data16
fisubs
xor
xor
cmp
cwtl
push
jle
test
jno
mov
mov
mov
int
shlb
addb
xchg
pop
or
sarb
mov
inc
cmp
insb
sbb
push
jae
dec
inc
dec
inc
xchg
sbb
outsb
inc
sub
je
pushf
xlat
inc
pop
addr16
dec
aas
pop
sub
xor
stos
cmp
ror
and
sar
loop
arpl
out
sar
xorb
in
mov
cli
xor
jge
mov
or
add
inc
arpl
out
inc
xchg
mov
jmp
pop
or
data16
inc
clc
mov
mov
push
mov
push
jno
mov
xchg
xchg
sahf
cld
int3
ja
mov
sbb
adc
js
fistpl
mov
bsr
std
aas
out
pop
pop
fcompl
fnstcw
in
mov
lcall
xchg
inc
hlt
nop
shrl
test
xor
out
inc
xchg
push
repnz
lahf
mov
lods
push
adcb
xchg
cmp
test
ja
leave
bound
inc
fadd
ret
mov
jo
pop
jbe
ljmp
and
mov
hlt
iret
push
pop
in
jl
subl
inc
aas
inc
mov
sub
repz
xor
lret
loopne
add
out
repz
negb
outsl
inc
sarl
xchg
push
fwait
xchg
dec
mov
mov
and
xchg
mov
out
push
push
mov
ror
cmp
pop
inc
icebp
add
sub
mov
cwtl
enter
imul
inc
int3
jne
cmp
je
or
pop
xchg
pushf
mov
int3
lds
xor
sub
aas
dec
mov
sub
jecxz
lods
dec
xchg
jae
xchg
mov
adcl
sbb
and
and
js
sti
xlat
xchg
ljmp
cmp
sbb
and
cwtd
or
shll
dec
daa
imul
mov
clc
mov
clc
fcoms
dec
add
cmc
pop
aam
pop
and
daa
std
rcr
adc
mov
fucom
dec
loope
mov
xchg
insl
nop
sarb
mov
xchg
xor
xor
in
popa
adc
mov
cmp
mov
aad
lods
scas
cmpsb
cmp
daa
jmp
cwtl
dec
aaa
iret
incb
je
js
pop
mov
sti
call
push
jecxz
cmpsl
jbe
add
pop
xchg
xor
inc
in
pop
dec
push
mov
out
in
fbld
inc
fnsave
jns
scas
in
nop
jle
xchg
shr
pushf
in
adc
pop
out
dec
ljmp
pop
sub
in
in
pop
push
sbb
andl
popf
and
mov
dec
notb
dec
jne
mov
jp
add
cmp
pop
out
push
mov
push
mov
mov
cmp
adc
je
mov
or
mov
scas
bound
jg
fs
and
and
aad
cli
or
pop
mov
nop
and
sbb
loopne
cmp
pop
shr
sbb
push
mov
jecxz
repz
ficomps
stc
test
cli
dec
js
lret
pop
dec
mov
aaa
sub
cld
cwtl
or
aad
or
xchg
sbb
lods
add
aad
xchg
sbb
repz
cmp
insl
mov
jmp
mov
cld
cs
cmp
mov
fmulp
mov
push
or
into
mov
adc
shll
hlt
popf
push
push
rcrb
rcll
test
xchg
addb
popf
rcl
push
lds
jg
xlat
fwait
xor
xchg
mov
stos
enter
insl
xchg
dec
mov
mov
popa
add
sbb
lahf
adc
cmp
int3
arpl
or
decl
push
lods
inc
xchg
xchg
xchg
xchg
ret
sbb
dec
or
movsl
shrl
mov
es
stc
lahf
aaa
mov
pop
ret
rdpmc
xor
jmp
stos
mov
test
lahf
mov
mov
add
jnp
and
dec
mov
repnz
xchg
mov
scas
fimull
xor
inc
lahf
push
and
sub
nop
int3
push
in
adc
mov
mov
mov
push
push
aad
out
sbb
repz
add
icebp
mov
lods
scas
sub
sub
loop
sub
dec
sarb
iret
dec
out
cmp
sbb
sbb
cmpsl
pop
popf
dec
push
ds
xor
mov
sarb
int3
push
lods
inc
mov
mov
pusha
inc
pusha
cmp
lahf
stc
xlat
mov
adc
rcll
aam
loop
adc
int
pop
cltd
out
add
add
lret
cld
push
mov
lret
cmpsl
out
jnp
pusha
push
stos
xor
dec
bnd
jnp
out
popf
lahf
or
mov
mov
push
repz
jmp
sbb
outsb
sbb
insb
je
andl
mov
dec
inc
sub
int3
or
fnstcw
dec
movsl
xor
pop
or
xchg
mov
test
test
and
pop
and
add
mov
movsl
data16
inc
inc
cmpsb
jno
fs
cmpsb
xchg
imul
insl
in
repz
pop
in
stc
dec
in
mov
pop
xor
fstpl
arpl
xchg
rorb
outsb
mov
into
fiadds
ss
dec
push
pop
cmc
repnz
stc
mov
insl
jle
mov
dec
fildll
pop
mov
cmp
or
lret
movsb
divb
movsb
sbb
aaa
cmp
push
subl
xchg
imul
inc
ret
arpl
cltd
sub
ret
add
cmpsl
out
mov
jno
js
inc
inc
lock
mov
fdivl
in
jg
pusha
push
jnp
out
add
or
arpl
adc
pop
or
imul
mov
sub
test
rol
mov
mov
add
push
int3
int
or
filds
push
aaa
push
mov
imul
mov
lods
jg
sub
enter
insb
outsl
dec
neg
dec
aas
dec
nop
lret
jne
add
and
aad
imul
push
push
and
ds
jne
add
jo
dec
jmp
out
cmc
xchg
addl
adc
lods
test
lea
add
test
ret
repnz
dec
adc
adc
es
cld
add
lods
ljmp
subl
mov
lcall
mov
repz
mov
or
test
jnp
dec
dec
jne
aas
mov
mov
enter
out
add
lea
ljmp
outsb
dec
bound
mov
mov
adc
jge
push
cli
xor
cmp
xor
lcall
add
shrl
shlb
hlt
stc
xlat
popa
call
cmc
lock
clc
jae
and
mov
jo
push
ds
pusha
pusha
or
sub
leave
push
jecxz
mov
in
gs
inc
mov
or
sub
jle
movsl
or
dec
in
shlb
cmp
or
notb
mov
push
xor
adc
les
or
and
cli
cmp
cmp
xlat
or
sahf
outsb
add
xchg
or
lods
mov
addl
out
mov
mov
ja
lcall
mov
sbb
mov
das
dec
movsl
sbb
inc
sub
shlb
push
pop
jge
add
inc
fs
push
call
sbb
xchg
rcll
cmp
push
cmp
cmc
fwait
inc
jnp
jnp
mov
in
xor
adc
fwait
push
xor
xchg
pop
mov
hlt
mov
testl
adc
and
movsb
rorb
xor
rolb
stos
cs
movsl
mov
imull
mov
in
daa
popf
xor
and
lea
inc
lret
sahf
in
daa
mov
mov
outsl
mov
arpl
mov
or
pop
mov
or
mov
mov
inc
mov
loopne
mov
cltd
mov
push
pop
and
sbb
xorb
sbb
cmp
hlt
mov
mov
dec
mov
sub
je
aas
push
mov
pop
add
cwtl
das
int3
push
js
add
adc
sarl
jns
jb
fsubs
jle
push
imul
and
call
gs
add
or
cmpsb
dec
jg
push
xchg
aas
mov
add
add
xlat
xor
sbb
sbb
push
stos
test
in
in
mov
jmp
jp
pop
add
or
imul
jmp
add
pop
cmc
fmuls
bound
sbb
push
aaa
jo
xor
lahf
push
mov
push
inc
cli
cwtl
or
stos
ja
orl
mov
rcrb
lret
pop
mov
arpl
sar
xchg
movsb
dec
sub
insb
scas
repz
sti
ds
add
xchg
fimuls
push
scas
mov
pushf
cmp
push
ret
adc
fists
int
pop
fcompl
ret
mov
xchg
mov
mov
fdiv
adc
lcall
adc
xor
test
cmp
cmpb
les
out
ss
jecxz
jecxz
ficoms
mov
mov
loopne
xchg
inc
sub
fsubl
orb
jg
jmp
cmpsl
movsb
pop
pop
lret
mov
or
inc
jo
scas
popf
adc
ret
sub
ljmp
adc
xor
pop
rorl
mov
subl
clc
sub
popa
ds
fs
out
dec
pop
inc
test
xchg
mov
pusha
push
popa
jmp
fs
push
push
and
add
xchg
add
js
cwtl
jecxz
and
fistpl
and
xlat
aad
rolb
loope
sub
dec
and
call
inc
inc
mov
mov
flds
cmp
mov
decl
enter
inc
aad
les
and
loopne
fwait
and
push
pop
push
cmp
lret
pop
dec
xchg
subl
add
xor
xor
ss
pop
dec
outsl
ljmp
jns
push
dec
push
jg
pop
xchg
jne
jl
mov
aad
aam
test
loop
imul
pop
mov
dec
movsb
outsb
mov
scas
push
lret
inc
cmpl
loop
leave
dec
jecxz
decb
push
insl
insl
mov
cmp
jns
dec
lret
stos
sti
sbb
sbb
sti
call
xchg
sbb
xor
ret
sarb
leave
dec
push
dec
ss
movnti
fsubr
mov
or
add
inc
fldenv
xchg
cmp
out
mov
sbb
sbb
mov
lcall
sub
lcall
xor
pushf
and
icebp
jge
les
loopne
testl
xchg
and
mov
add
push
pop
mov
ss
data16
and
or
inc
mov
popf
ja
jmp
or
cmp
iret
pop
inc
sub
cmpsl
mov
pop
cmpsl
mov
pop
orl
cli
pushf
xor
xchg
test
mov
push
mov
stos
lretw
and
icebp
nop
out
dec
jp
lods
test
jbe
lds
fdivr
and
xor
sbb
icebp
jmp
mov
repnz
call
cmpsb
mov
mov
cmpsl
fucomp
xor
xor
dec
sarb
aad
xor
ds
js
inc
mov
lea
cmpsl
ds
mov
pop
mov
pop
loopne
mov
add
jns
cmp
push
push
mov
rcrb
popa
daa
xchg
mov
hlt
das
movsb
lods
xchg
sbb
fs
cmpsl
sub
mov
cmp
stos
into
dec
shll
cs
sbb
add
xor
adc
sti
cmp
decl
mov
cltd
inc
push
mov
xlat
daa
pop
xlat
sbb
sub
cmpsl
inc
mov
addr16
mov
icebp
nop
sub
pop
cmp
and
xchg
sbb
fmulp
xlat
push
fmulp
mov
sahf
dec
cli
dec
xor
repz
inc
pushf
jae
in
jg
pop
mov
cwtl
mov
icebp
jbe
rcrb
cmpsb
aaa
je
addr16
mov
jnp
jns
push
adc
sub
inc
jne
inc
xchg
pop
jb
jno
mov
rcl
iret
xchg
popa
cwtl
cs
not
or
mov
xchg
and
mov
stos
lret
sti
fnstenv
push
cmpb
mov
xor
adc
dec
fs
or
xchg
pop
cmpsl
pop
pushl
or
sbb
push
pop
outsb
cltd
jb
dec
cmp
nop
or
in
cmp
xchg
adc
mov
bound
mov
mov
adc
repnz
and
test
cmp
daa
xlat
sti
lods
out
pusha
das
sar
out
jg
std
lahf
repnz
pop
push
sahf
or
inc
rclb
push
arpl
sbb
mov
popa
or
mov
jns
mov
rcll
fdivp
mov
mov
pop
add
bound
mov
cmpsl
notl
nopl
push
jne
pop
sbb
stos
ljmp
mov
sub
icebp
xchg
dec
ja
pop
pop
adc
jns
incb
orb
adc
sbb
and
push
inc
and
push
sbb
mov
icebp
sbb
addr16
fwait
sub
rorb
push
das
jl
stc
sbb
test
add
cmpb
ss
pop
in
pop
cmc
pusha
dec
push
inc
jle
js
jns
mov
sysexit
fwait
cmp
pop
stos
rcl
pop
ds
adc
jo
cmpb
in
pushf
or
cmp
inc
int3
adc
mov
pop
call
sub
outsl
out
adc
daa
dec
sub
push
rcr
push
sbb
inc
jne
adc
jns
out
xchg
lret
loop
popa
pop
xorl
call
add
pop
inc
mov
mov
mov
cmp
ds
mov
stos
cmpsb
into
cs
xor
stos
xchg
xchg
decb
pop
sbb
jmp
imul
loope
testl
out
testl
mov
xchg
in
stos
add
pop
sub
jo
cli
shrb
call
lea
push
xchg
aad
and
inc
dec
pop
pusha
mov
add
stc
stos
pop
ret
shrb
dec
clc
scas
insl
icebp
decb
lret
lcall
hlt
dec
cltd
push
iret
les
aam
insl
mov
push
popf
inc
test
sarb
or
xlat
jbe
in
js
jb
or
shrb
arpl
xor
jle
sub
mulb
ret
ja
sbb
push
jnp
lods
hlt
rolb
sub
mov
mov
adc
push
dec
jle
fwait
icebp
push
popa
jl
pop
sub
mov
popa
call
ret
pop
xchg
mov
inc
das
mov
push
test
adc
or
xor
call
cmp
repnz
popf
fldcw
cmp
jp
enter
rcll
pop
pop
jge
jp
cmpsb
pop
sbb
mov
outsb
shrl
inc
cmp
mov
out
icebp
mov
sarb
xchg
push
or
loop
std
xor
enter
movsl
scas
cmp
xchg
mov
js
ret
adc
out
stos
cmpsb
iret
ret
bound
imul
shlb
js
sbb
bound
lret
fucomi
sub
sub
pop
cltd
push
dec
in
mov
mov
dec
xor
out
rcrb
pop
sub
dec
call
mov
imulb
jg
pop
mov
adc
sub
stos
jae
or
lahf
inc
cmpsb
subb
xchg
sbbl
jnp
fldenv
dec
add
jbe
les
cmc
std
scas
mov
in
jbe
and
cltd
in
lahf
inc
push
dec
jmp
sbbl
cmp
lret
or
xchg
adc
repnz
imul
and
adcl
mov
jnp
shlb
xor
ret
fdivrl
fwait
ja
cmp
sbb
mov
jp
movsb
mov
xchg
ljmp
push
pop
mov
dec
inc
leave
das
arpl
scas
popf
and
lds
pop
movd
mov
pop
inc
jecxz
mov
mov
mov
mov
in
mov
outsb
hlt
lahf
pop
mov
daa
js
push
adc
push
in
dec
xchg
pop
jbe
xchg
outsl
add
andl
shrb
xor
adc
mull
and
ss
cmp
in
test
add
mov
loop
cmpsl
xchg
lcall
lret
jb
mov
dec
dec
cmpsb
pop
jl
pusha
mov
push
int3
sti
add
cmp
jmp
xchg
adc
gs
mov
xchg
mov
fistl
mov
mov
adc
rcrl
lcall
xchg
sub
lds
icebp
inc
pop
sbb
push
pop
fdivs
out
gs
mov
mov
lret
mov
js
arpl
add
clc
jae
mov
dec
dec
mov
aas
jl
adc
pusha
js
xor
inc
xor
loopne
jp
int3
inc
sbb
sarb
mov
add
mov
lret
mov
push
cmp
inc
pusha
test
lcall
and
sub
ret
xor
sub
cmp
sub
or
in
cld
sub
popf
scas
out
mov
test
xchg
ds
jle
mov
pop
pop
fisttps
cmp
xchg
sbb
jmp
das
xlat
sub
pop
jecxz
in
int3
cvttps2pi
pop
cltd
lods
or
adc
sub
xchg
push
push
adc
or
dec
shl
sbb
adc
ss
push
cmpb
rorl
mov
dec
jno
rorl
and
mov
fisttpll
inc
and
mov
xchg
clc
and
lret
cmp
and
xchg
adc
cmp
jg
pop
lods
cmpsb
adc
push
inc
or
lret
xchg
fs
mov
mov
stos
adcb
cli
xorl
push
mov
add
ljmp
int3
mov
adc
outsl
aam
bound
cltd
add
jmp
shr
loope
or
add
scas
scas
jl
mov
pop
popl
in
or
cmp
mov
addr16
inc
mov
rcrb
sbb
xchg
mov
ret
push
je
xchg
add
jmp
xor
fidivs
mov
lea
iret
add
mov
push
dec
lods
sub
push
movsb
adc
pusha
xchg
mov
popf
loop
insl
cld
mov
inc
push
pop
outsl
ljmp
cmp
sbb
gs
popf
push
adcb
cmp
xchg
dec
rcl
ret
fldenv
mov
inc
jae
mov
ret
add
xchg
imul
mov
pop
push
xchg
inc
out
mov
add
xchg
std
in
pop
or
cmp
sbb
sub
adc
pusha
sarb
xor
pinsrw
imul
hlt
or
test
leave
cmpsb
stc
lcall
mov
call
iret
pop
loopne
out
mov
out
xlat
iret
xor
mov
popf
mov
cmp
xchg
mov
add
xor
sub
pop
jle
imul
sti
jl
pop
rolb
pop
dec
js
inc
loop
aas
lods
divb
movsl
sub
inc
sti
adc
adc
leave
adc
add
pop
cld
dec
test
movswl
in
push
rolb
push
aad
out
std
fdivr
cmpxchg
xchg
pop
or
xlat
sbb
xchg
inc
mov
movsb
lods
xchg
data16
xlat
fwait
inc
pusha
pop
mov
push
xchg
aas
sahf
in
jmpw
mov
or
mov
ret
pusha
pop
leave
fistpl
dec
pop
mov
aas
aad
frstor
repnz
or
inc
add
sub
shll
out
and
fadds
xor
out
cltd
jno
cwtl
ds
sbb
fadd
push
push
sub
ret
js
rcl
sub
add
idivl
stos
loope
js
xor
mov
inc
ljmp
add
push
fs
pop
push
adc
lods
pop
xchg
popf
mov
sbb
cli
clc
pop
inc
scas
mov
add
rcrl
and
imul
cmp
xor
or
aad
sarb
movsl
xchg
test
shl
inc
sbb
shl
loopne
sarl
push
lahf
test
iret
dec
xchg
mov
repz
mov
dec
push
bound
je
dec
dec
mov
loop
aas
mov
and
push
loope
test
jnp
cmp
daa
sahf
into
push
stc
pop
ja
mov
es
xor
ds
loopne
loope
cmpsb
xchg
subb
pop
dec
push
aam
lea
insb
js
push
push
pop
in
mov
pusha
adc
mov
loope
xchg
dec
daa
push
lea
push
cmc
je
jg
push
mov
idiv
scas
mov
hlt
add
jecxz
and
stos
pushf
xor
and
lods
cmp
subl
addr16
lock
sbb
mov
cs
sbb
pop
sub
cmp
jbe
dec
xor
dec
je
data16
ret
push
mov
ret
out
and
adc
mov
xor
insl
repnz
fcoml
fs
push
inc
jmp
scas
xchg
sti
vxorps
scas
inc
jp
cmp
int3
push
dec
adc
dec
xchg
pop
cmp
scas
iret
mov
fs
fwait
mov
push
movsb
push
mov
gs
negb
icebp
and
adcl
and
mov
ds
inc
repz
add
cli
imul
nop
mov
out
xor
cmp
repnz
dec
inc
fdivrl
xchg
xchg
jo
adc
fcmove
add
jp
dec
and
pushl
out
and
dec
test
inc
out
xchg
cmpsl
lea
in
pop
sub
mov
ljmp
or
lods
pop
out
iret
inc
xchg
adc
mov
test
mov
pusha
cmp
gs
cltd
cmp
push
jbe
mov
enter
scas
inc
mov
out
cmp
push
pop
mov
jmp
out
test
cmc
jo
adc
leave
data16
xorb
or
mov
xchg
mov
aam
fsubrl
sahf
mov
xor
in
lock
cmpsb
add
and
out
push
jp
adc
jbe
fwait
mov
pop
lcall
jnp
ljmp
and
and
repnz
push
xor
adc
insb
ss
orl
push
xorb
sub
xchg
dec
lods
dec
shl
sahf
insl
and
ljmp
pop
push
outsb
imul
out
call
xorb
xchg
push
pop
adc
out
ja
push
cltd
dec
ss
mov
and
cs
popa
std
enter
xchg
fwait
mov
or
xchg
popa
inc
jbe
push
adc
push
mov
or
mov
in
jo
and
ja
mov
loop
mov
xchg
dec
sti
adc
shlb
aad
mov
adc
jne
xchg
sbb
mov
jp
cmp
mov
lret
sbb
mov
sub
push
fdivrs
xor
xor
push
mov
sub
inc
in
pop
rorl
mov
push
jnp
pop
pop
sbb
sbb
rol
push
test
jno
bndstx
mov
out
dec
fcoml
scas
cmpsl
sub
test
or
cmp
inc
mov
lods
jecxz
movl
cwtl
mov
inc
lahf
das
dec
pop
push
xchg
sahf
xor
cmp
lret
or
cwtl
jg
xchg
in
mov
sub
mov
out
loop
call
mov
mov
mov
daa
cmp
or
or
test
outsl
mov
push
mov
push
cmp
xor
or
or
sbb
dec
in
sub
lea
and
addb
sub
insl
loop
dec
mov
or
mov
mov
adc
les
popa
jle
pop
pop
cld
adc
push
cmove
loop
cli
outsb
rorb
dec
add
mov
jmp
imul
jb
enter
shr
cmp
adc
repnz
sbb
adc
push
cmp
or
jg
jae
inc
cmpsl
daa
cltd
jne
shlb
call
sbb
pop
mov
incl
jae
mov
pop
dec
xor
aaa
pop
mov
imul
sub
xor
subl
lods
repz
dec
push
es
push
add
and
xor
sbb
mov
push
sub
ljmp
in
jae
and
inc
sarl
fchs
rorl
insb
mov
test
cmc
xchg
cmp
fsubrs
cmp
mov
cli
xor
pop
inc
arpl
outsb
or
pop
and
jno
loop
fldenv
testl
push
and
ja
xchg
cmp
in
jge
shlb
cmp
fs
idivl
rorl
inc
stc
jnp
into
xchg
sbb
aad
adc
jae
and
jle
lods
rorb
test
mov
lea
cmp
cmp
cld
push
push
or
jno
mov
jbe
loopne
fiaddl
pop
outsl
or
clc
add
sti
or
jge
xor
jae
rcrl
gs
mov
push
sub
neg
add
imul
mov
aam
bound
sbb
je
push
cmpsb
or
test
pop
mov
pop
adc
jno
iret
outsl
aam
data16
mov
cmpsl
add
push
outsl
ficoml
sub
mov
mov
dec
loopne
popa
repz
mov
and
lahf
repnz
add
fildl
ljmp
cs
lock
insl
rorl
nop
add
cmp
into
adc
insl
popa
mov
jne
lods
ds
out
cmp
push
es
pop
imulb
push
cmp
cli
fistl
mov
es
inc
mov
lea
push
fwait
xor
imul
cld
into
mov
in
adc
in
test
mov
jbe
cmp
push
lea
lods
push
sbb
je
iret
fs
cmp
call
push
xchg
mov
cmpsb
jbe
xchg
in
movsl
lea
aad
xor
pushf
sbb
mull
xor
outsl
call
gs
sub
push
lret
mov
mov
fsubs
cmpl
mov
push
push
push
fdiv
stc
sbb
scas
adc
jle
or
add
mov
xchg
pop
pop
loop
enter
popa
adcl
lret
or
lret
icebp
daa
ret
pusha
push
push
inc
sub
or
clc
cmpb
in
pop
pop
stc
adc
lahf
stos
xlat
mov
daa
clc
cmp
mov
dec
xchg
pop
addb
movsl
ja
mov
js
aad
lahf
mov
fs
add
and
adc
addr16
push
ss
inc
call
xor
mov
fistps
adc
mov
push
cwtl
mov
xor
repz
pop
push
imul
cmp
hlt
pop
cmp
out
outsb
imul
add
out
testb
addb
sbb
into
popa
dec
sbb
in
sti
mov
movsb
arpl
adc
cwtl
xorb
scas
sub
outsl
daa
or
cli
data16
pushf
ficoml
ja
jp
daa
adcl
leave
lahf
les
jge
call
fcomps
mov
add
mov
scas
icebp
aas
mov
push
lds
hlt
xchg
jge
push
les
cmp
jae
mov
ja
test
jo
sbb
push
lods
xorl
scas
sbb
lahf
sbb
jge
push
push
cs
outsb
adc
xlat
and
push
inc
stc
icebp
xorb
push
and
les
pop
xchg
push
sub
pop
scas
pop
mov
xor
mov
xchg
jmp
push
jmp
mov
pop
fidivl
int
push
subl
imul
adc
or
repz
or
loopne
sub
xchg
add
daa
dec
pop
std
mov
jae
adc
es
arpl
mov
lods
dec
inc
lea
data16
cmp
in
aad
and
aas
fcomps
out
sub
aad
out
lods
mov
inc
mov
dec
cli
stos
out
subb
adc
punpckhwd
dec
xchg
out
xor
les
mov
xor
iret
pushf
je
and
mov
pop
aam
mov
negb
inc
pop
aad
xchg
and
out
xor
bound
fisubs
adc
test
mov
test
sti
jo
ret
sti
call
sub
cmpsb
push
ret
mov
inc
lcall
xor
lcall
jge
out
or
and
sbb
xchg
nop
insb
ret
subb
jp
imul
or
inc
sbb
jg
jge
sbb
mov
push
jno
test
outsb
add
and
ds
lcall
adc
xor
aad
xchg
dec
insb
add
out
cmp
pusha
mov
sub
inc
xabort
mov
nop
adc
adc
fcoml
jp
push
pop
adc
pop
jg
stos
cmp
lock
lahf
pop
shlb
cli
cmp
dec
fs
scas
cmp
idiv
dec
cli
or
lret
repz
add
pop
mov
aam
lcall
add
rclb
cmp
adc
pop
leave
cmp
int3
into
cld
xchg
sahf
xchg
in
mov
and
dec
sub
imulb
in
sub
jg
add
mov
in
outsb
out
pop
lods
inc
lcall
test
rcl
push
dec
sbb
mov
in
loopne
mov
popf
enter
data16
jns,pt
push
dec
test
cmpsl
bound
mov
repnz
fnstcw
fsubrp
sbb
sahf
dec
out
in
or
mov
test
dec
test
mov
sbb
adc
scas
push
icebp
push
cld
push
cs
add
xchg
inc
mov
xor
dec
popa
xor
movb
into
push
aas
arpl
outsb
dec
mov
lcall
jg
mov
xchg
jb
test
jb
pop
sub
addr16
fldcw
lahf
insl
subl
es
std
dec
jae
push
aam
adc
addr16
and
std
push
loop
jbe
xchg
fcomip
mov
scas
mov
cmp
popf
jge
lret
pop
mov
jae
pop
inc
or
inc
fbstp
pop
fadd
push
mov
dec
xor
sub
lods
adc
pop
lret
cmpsb
aad
xor
and
das
fs
dec
repnz
cmp
int
cmpb
jp
or
and
push
xchg
or
jb
sub
jg
cmp
sub
and
std
add
xor
pop
fsub
xor
pop
jne
push
fcmovu
cwtl
mov
push
out
pop
dec
mov
adc
xchg
push
out
test
sbb
xor
xor
cmp
sbb
cmp
and
dec
addl
dec
scas
cmc
sub
test
push
sub
inc
pop
in
out
fs
add
xor
pushl
fnstenv
lret
psubq
push
jo
fisubrl
pop
stos
out
ss
fsts
fsubr
loope
popa
sbb
repnz
negb
jecxz
repnz
in
in
xchg
fisubl
out
outsb
in
xor
addr16
mov
jnp
dec
fsubl
outsl
dec
rorb
sbb
insb
shrb
iret
mov
jg
dec
je
sub
and
test
sub
out
and
mov
mov
sub
and
mov
imul
jns
rclb
shlb
gs
sbb
add
je
push
movsb
inc
addl
roll
pop
or
pop
movsb
test
int3
dec
push
mov
ficomps
rcr
ss
sbb
enter
mov
in
xor
sbb
sub
mov
cmp
mov
lea
adc
jmp
inc
mov
cmpb
lea
shll
mov
dec
xchg
mov
pop
inc
fcompl
adc
pop
jmp
fisubrs
sub
daa
and
fcmovu
in
negb
jns
cltd
add
dec
mov
mov
fsubr
mov
ds
lret
mov
sarb
lds
dec
pusha
lock
out
adc
int3
add
dec
les
call
pop
popf
lods
mov
in
pop
xchg
ret
mov
aas
add
aas
fmul
xchg
loope
add
scas
fstl
adc
mov
add
inc
test
bound
fwait
mov
xchg
cltd
lds
fcmove
cmp
dec
mov
inc
adc
arpl
sbb
enter
sbb
movsb
imul
cmpsl
add
or
xor
mov
cmp
insl
lahf
leave
sbb
fs
aam
mov
adc
push
push
nop
loopne
lahf
cmp
pusha
repnz
and
pop
cmp
inc
jmp
fs
xchg
cmp
mov
or
je
sub
loope
scas
inc
shll
jle
mov
ds
adc
ds
add
andl
int3
stos
es
jp
xchg
movsb
aad
clc
xchg
in
mov
loope
sub
inc
gs
push
mov
mov
test
dec
jmp
stos
cmp
std
adc
mov
push
lock
or
xor
inc
stos
inc
mov
add
jge
inc
loop
leave
pop
insl
mov
call
les
out
sbb
cmpsl
mov
mov
sbb
mov
and
ret
jno
call
es
sar
sub
outsl
aad
arpl
xor
dec
push
adc
mov
push
cs
sub
movsl
pop
mov
imul
and
pop
sahf
js
xchg
sbb
mov
test
jne
ficomps
lahf
pop
addr16
stos
in
mov
pop
dec
jle
imul
push
shll
arpl
out
mov
cs
insb
fucomip
stos
enter
jno
inc
movsb
fistps
xchg
jl
mov
fnsave
cmpsl
jae
subl
dec
lcall
lea
js
or
push
pop
and
out
jns
push
jae
mov
xor
js
rclb
pop
leave
inc
dec
cli
fbld
inc
push
cs
sub
lods
ds
mov
je
sub
fcomps
out
daa
pop
push
dec
dec
jbe
sbb
lahf
jno
dec
push
jnp
orl
mov
fstpt
cmp
add
roll
ljmp
ret
mov
xchg
mov
mov
dec
daa
jg
pop
xchg
adc
pop
data16
in
in
lcall
rcll
inc
mov
xorl
push
cmp
adc
jg
cmp
add
mov
pop
mov
loopne
mov
jne
push
outsl
adc
lods
ljmp
xchg
cmc
out
mov
add
jbe
dec
fisubrs
push
test
dec
xchg
in
xor
add
call
or
sti
add
push
insl
push
lret
or
mov
out
fadds
lods
push
aam
clc
ja
add
push
fisubl
add
inc
fwait
mov
icebp
aas
cmpsl
push
inc
lcall
iret
aas
negl
cltd
sbb
xor
sub
mov
or
fnsave
sub
and
dec
jl
adc
je
dec
mov
mov
jae
pop
jmp
call
or
subl
loop
sti
cld
jb
mov
out
push
in
pusha
jb
adc
jmp
xchg
movsb
jp
loopne
xchg
jno
and
addb
jge
and
test
or
pop
imul
dec
inc
cmp
es
mov
jecxz
mov
sub
int
xor
cmp
xor
cmc
cmp
inc
rcrb
ja
and
scas
repz
out
dec
lret
jno
in
sub
test
cs
clc
inc
cmp
jle
lea
scas
jb
push
jae
fldenv
add
clc
pop
add
adc
sahf
push
insb
sub
movsl
sbb
pop
sbb
add
mov
pop
mov
mov
xchg
test
mov
idivl
fsubr
out
sbb
fwait
inc
sbb
pop
mov
std
or
pop
nop
clc
shll
add
insl
popa
adc
fiadds
sbb
inc
adc
test
xor
pop
sarl
pop
dec
lock
jnp
stos
ret
push
push
outsb
pop
arpl
aaa
inc
aam
mov
or
into
ret
jne
inc
icebp
mov
dec
fs
push
scas
adc
pop
enter
mov
lods
lret
and
inc
pop
movsb
ret
popl
stos
data16
mov
movsb
rorl
mov
js
or
and
gs
jg
fildll
push
repz
push
xlat
or
je
cmpsb
push
cmpsb
insl
cltd
adc
lea
mov
sub
sahf
int3
fiadds
js
mov
ret
add
inc
ret
rcr
pop
mov
pop
in
pop
aam
jl
sbb
cld
cmpsl
insl
push
fdivl
adc
xchg
shl
sub
mov
dec
adc
xor
je
aas
dec
push
inc
aaa
mull
push
lret
lock
test
pushf
push
mov
adc
loope
std
addl
adc
pop
fdivrs
push
int
in
fstl
stc
push
xlat
imul
adcl
test
es
mov
icebp
int
imulb
inc
imul
mov
xor
push
scas
jmp
cs
xchg
mov
mov
roll
test
push
or
jnp
shr
sub
sbb
andb
shl
mov
pop
andb
imull
loope
loopne
adc
or
inc
dec
add
fdivl
ficomps
dec
movsl
ret
push
cmp
enter
mov
cmp
mov
dec
data16
call
aaa
loopne
cmp
in
call
adc
roll
add
in
xor
and
mov
sub
jne
mov
adcl
push
xchg
xorl
push
push
and
pop
mov
js
rcrb
add
js
jae
cs
pop
mov
divb
cli
sahf
push
mov
cmpsb
ljmp
inc
mov
and
sbb
fnstsw
fildl
je
push
or
cmp
sub
inc
in
mov
add
sub
xor
pop
cwtl
imul
cmpsb
rcll
lods
jl
arpl
cmc
ror
inc
loopne
rdrand
sbb
inc
arpl
lcall
lcall
jle
adc
insl
add
xchg
dec
mov
inc
call
js
push
sub
adc
cmp
sbb
in
mov
dec
out
addb
and
xor
inc
aam
into
pusha
sub
addl
and
lods
insl
popa
loope
lret
lea
and
test
gs
pop
mov
test
mov
mov
addr16
mov
in
jne
and
cwtl
mov
sbb
inc
mov
loop
xrelease
lods
inc
jle
push
and
data16
inc
adc
xor
sahf
push
cs
stos
mov
dec
jo,pn
inc
xor
add
imul
adc
test
lock
fiadds
and
mov
lds
ljmp
stc
out
cmpsb
inc
jnp
xlat
hlt
sarl
jl
rcrl
dec
fs
and
std
mov
push
aaa
pop
dec
mov
push
aaa
loope
int3
xchg
pushf
add
shll
mov
xchg
jge
sbb
mov
sub
fs
mull
ja
mov
iret
outsl
jno
cmp
or
pusha
push
stos
repz
in
push
dec
int3
sub
mov
adc
mov
mov
push
mov
in
data16
lcall
notb
or
out
mov
mov
inc
sub
into
pop
std
fcomps
push
sub
pop
adc
fistpll
push
cmpsl
adc
out
lock
jmp
sti
lock
xchg
mov
cmpsl
xchg
fs
add
add
rcrl
jp
lds
repz
mov
sbb
mov
addr16
push
arpl
pop
test
mov
leave
ficoml
jg
dec
inc
sub
adc
jb
mov
pusha
push
jmp
pop
or
setae
gs
pop
mov
int
pop
lods
xor
sti
clc
cmpsl
xchg
out
sub
fs
mov
pop
es
insl
jecxz
mov
mov
fscale
in
jge
mov
xor
sbb
jle
roll
test
jmp
fcomip
and
pop
lret
mov
xor
insl
lret
in
mov
aas
xor
adc
push
testl
inc
cmc
test
das
mov
mov
loop
mov
ja
add
into
mov
scas
mov
xchg
popf
rolb
xor
cltd
jnp
cld
xchg
ss
ror
pop
pop
shrb
divb
in
mov
repz
dec
mov
inc
aad
repnz
dec
xchg
pop
call
dec
ret
adc
sbb
push
mov
int3
xor
inc
pushf
push
testl
dec
test
test
jle
cmpsb
jae
mov
jb
cmp
lea
push
xor
in
lret
adc
repz
pusha
pop
jo
inc
xor
call
into
jle
cltd
sub
ljmp
pop
dec
imul
data16
dec
adc
mov
dec
xor
mov
das
repz
xor
in
lods
bnd
jae
jmp
inc
test
repz
sbb
push
ss
mov
aaa
mov
push
aaa
cld
nop
scas
sub
test
in
push
push
push
cld
insl
js
aam
mov
or
xchg
fstpt
cmp
imul
insl
shll
hlt
lea
js
stc
inc
pop
sub
mov
jecxz
inc
xchg
in
jl
aad
dec
push
jne
add
aam
inc
in
rcrb
test
and
shrl
xchg
inc
add
imul
leave
gs
test
sub
sti
dec
adc
sub
mov
ret
cmp
adc
stc
fs
outsb
rolb
fs
dec
or
and
mov
lahf
mov
pusha
not
test
sub
jo
adc
push
cmpsl
lods
dec
adc
ret
sub
lock
mov
les
aam
and
testb
push
loope
pusha
jge
mov
insb
outsl
std
push
lret
aad
push
adc
xchg
lahf
push
inc
loopne
mov
dec
mov
and
inc
push
xor
jno
xlat
lret
call
test
pop
negl
xchg
call
into
test
ret
sbb
xchg
sub
stc
and
sbb
mov
xor
lea
jns
fildl
xchg
sub
stos
inc
outsw
sarl
sti
push
lret
or
pop
sahf
jl
cmp
aam
inc
in
jbe
and
lods
mov
jo
fld
imul
push
pop
dec
test
out
in
loop
arpl
mov
test
fnop
enter
paddb
push
pop
sbb
dec
fdivs
xchg
iret
sub
bound
inc
pop
cmc
xchg
xchg
cmp
push
cld
mov
cld
cld
in
fisttps
sbb
push
mov
loope
add
rcrl
test
xchg
adc
lcall
xor
ljmp
or
data16
int
jbe
ret
cmp
inc
jl
sub
in
mov
mov
sbb
mov
pop
data16
mov
mov
push
push
pop
mov
add
jno
imul
rclb
and
out
jno
add
test
mov
push
add
cld
sub
lods
mov
sub
mov
test
or
clc
lock
xor
xor
adc
adc
jne
in
mov
test
stos
ret
xor
inc
xchg
repz
jle
int3
lret
cmp
sbb
aaa
fisubrl
dec
pop
jmp
mov
popa
xadd
int3
adc
xlat
mov
inc
inc
xchg
daa
add
fs
mov
mov
push
dec
loope
xor
or
xor
clc
dec
adc
arpl
jle
idivb
cmpsb
ss
sub
inc
jnp
pop
mov
xchg
ja
xchg
dec
mov
or
push
jne
push
popa
lea
ljmp
dec
push
or
divb
and
jns
pusha
or
mov
test
dec
sti
mov
stos
pop
pop
xchg
lea
mov
aas
and
pop
xchg
push
in
aad
sub
push
aad
inc
fldcw
dec
lret
fs
outsb
clc
add
pop
xor
sub
gs
jne
std
enter
jne
mov
push
in
mov
sysret
xchg
or
push
sub
push
inc
fldcw
out
cltd
lods
cmp
or
jl
mov
xor
mov
add
movsb
xor
or
scas
loopne
jne
pushl
push
rcrb
rcl
xchg
mov
cmp
fimull
push
jle
cmc
div
pop
das
push
idiv
inc
data16
push
pop
cmc
push
dec
test
rcll
in
imul
add
shlb
lods
xor
rorl
sbb
xchg
jno
jns
pop
push
sbbl
or
fsubl
mov
jg
in
cmpsb
out
pop
testb
jb
std
cmp
movsl
xor
inc
les
mov
xchg
jnp
xchg
add
sahf
imul
jo
pop
mov
xor
mov
enter
push
push
xchg
cmc
jge
js
xchg
push
xchg
or
xrelease
pop
mov
inc
lcall
cmp
and
push
add
and
mov
push
je
cmp
rcrb
cmp
sbb
add
int3
mov
push
xchg
fwait
iret
sub
adc
add
lcall
xor
and
fildll
mov
arpl
and
hlt
push
jmp
xchg
xchg
bound
mov
push
push
scas
cmpsl
cmp
pop
mov
das
xor
push
out
hlt
insl
sub
fsubs
in
push
cld
push
xor
ret
lret
pop
push
pop
lea
pop
int3
hlt
mov
xchg
push
cmp
dec
in
cmp
pusha
daa
or
mov
push
xchg
xlat
loope
mov
pop
mov
push
ss
pop
inc
ret
mov
fs
ss
push
lea
lock
and
arpl
or
scas
jns
es
popf
jmp
mov
pop
cmp
scas
lock
xchg
lods
xor
in
sub
flds
mov
addr16
ret
xchg
inc
scas
fsubrs
leave
jne
std
mov
sub
push
dec
jmp
or
lods
jmp
clc
testb
mov
adc
out
jns
or
cmc
shlb
out
outsl
jae
sbb
and
lret
inc
push
cmp
push
insb
adc
ja
cmp
jnp
pop
jecxz
sbb
divb
lea
aad
int
mov
mov
or
add
int
sbb
xor
or
int
xor
push
fndisi(8087
mov
mov
or
imul
lahf
add
sub
aam
pop
push
pop
rolb
mov
inc
test
fsubrs
push
popf
lds
pusha
inc
inc
push
inc
xor
jno
sub
adc
pop
std
push
xchg
push
or
insb
int
cmp
pop
mov
inc
loopne
push
lods
or
lds
loopne
fisubrl
sbb
adcl
mov
xlat
xchg
in
adc
or
ficomps
cld
ja
sahf
mov
sub
pop
xor
into
inc
sti
jo
repz
fs
or
push
xchg
lahf
repnz
cmp
fucomi
jb
or
repnz
xchg
into
mov
push
leavew
add
out
jp
enter
xchg
rorb
ficompl
add
or
push
add
jae
sahf
jns
push
adc
insb
rorb
mov
mov
or
pop
sbb
and
insl
push
outsl
or
add
repnz
inc
mov
push
sbb
aaa
xor
pop
loop
jp
xchg
or
xchg
ret
cmp
enter
clc
popf
add
push
aad
mov
repz
add
and
sub
rorb
adc
ret
mov
ds
mov
push
and
dec
lahf
cmp
punpckhdq
jns
adc
adc
fimuls
shll
loopne
je
push
inc
pop
add
fimuls
push
push
mov
js
in
dec
sbb
fwait
cs
push
int
mov
push
mov
aas
cld
dec
xchg
add
adc
cwtl
insb
insl
in
cmp
in
jmp
mov
popf
das
push
sbb
mov
ret
push
push
add
pop
hlt
popf
ja
or
dec
iret
scas
add
je
sbb
cmp
push
ret
xchg
mov
jnp
inc
push
and
or
add
js
out
int3
mov
imull
jmp
scas
call
jnp
adc
add
aam
cmp
inc
movl
cmp
insb
inc
jo
adc
es
or
xor
push
call
test
push
xor
ret
ret
jno
notb
int3
pop
ss
xchg
mov
rcll
mov
outsb
std
jp
inc
fwait
cli
daa
and
pusha
icebp
shl
addl
enter
adc
xor
xchg
subl
dec
notb
cmovnp
aam
subl
xor
clc
jge
pop
sub
in
jp
adc
bound
add
outsb
hlt
xchg
nop
or
jnp
lods
loop
out
cld
or
mov
xor
or
jbe
insb
movsl
stos
imul
xor
inc
sti
lea
orl
out
push
sub
push
sub
mov
in
adcl
addb
jp
insb
lahf
jo
daa
xlat
sub
sub
push
sbb
inc
add
loop
mov
out
aam
adc
push
or
shll
sbb
fstpt
imul
and
xor
mov
clc
adc
gs
test
pop
or
outsl
in
and
sbb
xchg
int3
dec
jns
inc
or
scas
cmpsl
enter
das
fidivrs
sbb
jne
cmp
jnp
fstl
xchg
inc
inc
fmull
test
jecxz
inc
mov
aad
mov
test
movsb
add
dec
xor
ror
enter
das
push
mov
jne
cmp
xchg
push
int3
mov
orl
fbstp
movsl
test
stos
rcr
aaa
mov
loope
fs
pop
jl
out
push
js
es
lea
rcr
fldenv
mov
scas
addr16
in
loope
adc
loop
ljmp
adcb
int3
decb
sub
pop
sub
inc
pop
clc
scas
and
fisttps
cmc
into
and
mov
aaa
aaa
jb
fsubrl
cld
mov
cltd
outsl
sti
cld
fcom
push
cmp
sub
mov
lock
scas
adc
mov
push
enter
add
call
cwtl
sbb
mov
pushf
std
leave
xchg
shlb
jecxz
addl
push
sahf
ljmp
stos
jo
cmpsb
movsl
sbb
ljmp
dec
cli
inc
push
sbb
push
fsubrl
or
sti
sub
lcall
xorb
sub
std
and
mov
dec
dec
addb
dec
mov
loop
pop
sbb
inc
cmp
cmp
in
mov
jo
and
lret
sbb
repnz
adc
inc
cltd
sub
neg
xchg
xchg
rcll
mov
sti
int3
xchg
aad
lret
lahf
orb
xorb
fs
sbb
xchg
into
mov
lds
les
push
mov
dec
out
sbb
dec
jne
jne
int
jb
cmp
and
cltd
mov
sub
cmp
dec
dec
pop
hlt
adc
mov
pop
popf
inc
jge
xchg
jle
movl
pop
and
mov
icebp
and
fwait
cs
rcrl
imul
push
dec
jno
lcall
pop
mov
flds
inc
pop
iret
call
stos
xchg
cs
sub
mov
repz
pop
leave
pop
aas
cmp
das
pop
push
xchg
xorl
mov
mov
ficomps
sub
lea
lcall
jns
nop
add
lahf
dec
mov
dec
dec
push
mov
icebp
xorl
mov
push
pop
ret
cmpsl
jmp
les
pop
mov
daa
sbb
add
and
cmp
cmp
loopew
mov
test
ret
adc
cli
pop
fmull
aas
repnz
mov
jmp
imulb
pop
mov
orb
inc
jne
dec
ficompl
jp
mul
insl
xor
repz
xor
mov
faddl
xchg
cmp
fisubrs
add
mov
push
inc
rcll
std
adc
out
jbe
in
or
fiadds
sub
cltd
or
xor
and
adc
sti
movsb
lods
xchg
in
adc
and
ret
fbstp
insl
lret
jp
dec
sti
mov
jae
lods
or
adc
xchg
stos
aas
dec
inc
add
rdmsr
adc
sbb
mov
jae
daa
sub
xchg
xchg
jo
test
fistl
roll
push
sarl
icebp
in
enter
sbb
and
add
scas
test
jno
outsb
sub
add
incl
inc
cmc
fs
idiv
pop
data16
aam
adc
outsl
mov
fs
jb
stos
es
mov
btsl
mov
daa
sbb
mov
out
dec
movsb
xchg
jmp
cmp
cmp
pop
outsb
and
cmpsl
lahf
add
cld
jbe
xchg
rcl
xor
gs
xchg
scas
sbb
lods
xor
lea
mov
pop
mov
jle
mov
xchg
fsubp
in
outsb
push
aas
test
ljmp
test
pusha
bound
add
jge
mov
inc
and
mov
ss
out
sub
cmc
sahf
lahf
mov
dec
mov
popf
cmp
outsl
cmp
ret
xchg
push
shrl
popa
mov
push
std
jns
scas
data16
add
dec
mov
jbe
sub
pop
cmp
clc
cmpsb
xchg
fildl
mov
dec
mov
jl
cmp
fimull
sti
loope
aam
cmp
dec
sbb
cmp
xor
imul
je
pop
jno
push
mov
pop
cmp
sbb
and
clc
mov
jecxz
or
or
or
addb
xor
cmp
fsubrp
mov
repnz
pop
inc
in
cmp
das
scas
push
sub
lahf
fwait
mov
testb
pop
mov
add
sub
mov
fbstp
into
outsb
sub
aaa
testb
and
push
or
push
cmp
jge
adc
mov
or
rcl
sub
push
pop
pop
test
sub
in
or
gs
sbb
xchg
pushl
fs
out
and
push
adc
mov
xor
inc
rolb
mov
adc
xchg
ja
mov
fsts
out
push
nop
and
mov
xchg
push
jne
into
adc
sub
faddl
test
dec
sar
add
jno
xchg
xchg
cmp
adc
inc
pop
jecxz
mov
add
mov
pop
jae
mov
pop
mov
icebp
cwtl
mov
fwait
and
lds
cmp
pop
cmp
adc
aam
sbb
enter
leave
notb
inc
inc
daa
sub
push
mov
pop
inc
les
jne
movsb
mov
push
fs
xchg
push
push
mov
orl
push
inc
mov
inc
es
adc
adc
ret
cmc
ret
aaa
jp
mov
test
mov
arpl
ficoms
and
sbb
test
imul
sbb
movsb
push
mov
orl
ja
xlat
adc
in
fwait
push
add
cmp
xorw
xchg
loop
pop
add
add
xchg
iret
push
mov
and
mov
or
ret
and
add
addr16
inc
lods
lcall
pop
andb
cltd
or
xor
add
mov
sbb
fs
mov
into
mov
or
sbb
ds
push
push
jmp
jp
bnd
popa
push
jo
jge
add
in
loope
push
ljmp
jnp
push
sbb
or
mov
xlat
stc
and
mov
jo
mov
out
add
sahf
fwait
mov
inc
lret
test
sar
fcompl
add
mov
lods
in
les
in
pop
push
push
mov
xchg
mov
leave
push
ljmp
jl
xchg
cmp
push
clc
arpl
sub
pop
pop
mov
lock
lods
mov
bound
in
lods
push
stc
xor
sbb
cli
hlt
inc
loope
or
mov
sbb
gs
adc
push
dec
inc
push
xchg
inc
popf
and
dec
test
push
or
cmp
loop
cmpsl
pop
dec
mov
imul
pcmpgtw
jnp
ja
pop
int
movsb
bound
mov
rcll
add
xchg
pop
add
cmp
roll
push
lds
mov
fadds
pop
mov
scas
jge
nop
jnp
cltd
sub
insl
fisubrl
cld
popf
dec
loope
ret
dec
cmp
sub
mov
jge
fdivr
pushf
out
pop
xchg
jmp
and
xchg
pop
jae
mov
data16
fwait
sbb
sbb
movsl
or
aad
popf
pop
cltd
fcomi
mov
pop
mov
jle
xor
adc
and
jp
xor
inc
cmp
test
sub
subl
lret
out
mov
cmp
sbb
movsb
cwtl
pop
xchg
pop
sbb
xchg
mov
ja
popa
movsl
pop
in
cltd
inc
insb
push
fidivrs
fwait
loope
push
jno
cmc
or
cld
or
adc
lea
mov
fistps
sbb
jno
mov
jns
fcomi
mov
dec
sahf
or
or
in
js
and
mov
adc
jb
mov
sub
push
add
iret
inc
out
aaa
mov
in
stc
lods
or
add
pop
paddw
fwait
mov
lods
insl
js
push
cmpsb
mov
cld
mov
lret
in
ja
cwtl
inc
lret
shll
sub
bound
sub
repnz
mov
xchg
repnz
test
jne
inc
xchg
pop
aam
insl
jg
adc
movsb
jne
cltd
pop
jno
xchg
icebp
lods
sahf
or
in
add
mov
icebp
cmpsb
dec
fdivl
push
xchg
mov
xor
das
roll
es
adc
cmc
jb
fidivrs
xor
xor
ss
or
pushf
call
insl
in
sbb
xor
adc
jnp
adcl
mov
pusha
insl
and
shr
push
in
mov
push
sub
ja
in
mov
sti
test
aam
inc
nop
shrb
dec
mov
fildll
jb
outsl
sbb
cld
mov
js
xor
mov
sbb
dec
pop
flds
shl
aad
jmp
dec
arpl
addb
inc
lret
push
fadd
sti
cmp
pusha
lock
int3
shrb
xor
fdivrs
insl
daa
rol
ljmp
add
mov
mov
loop
pop
lret
ret
mov
fistpl
ret
sub
fisttpl
ss
mov
mov
iret
stos
pushf
aaa
dec
add
jge
xchg
mov
dec
test
dec
xchg
rorb
push
lcall
pushl
cmp
in
in
inc
push
mov
test
xchg
faddl
outsl
ds
cmpsl
inc
filds
adc
or
shll
jecxz
pop
cmp
pop
aam
fs
add
ljmp
stos
add
push
or
call
mov
adc
mov
mov
loop
dec
add
lcall
aad
pusha
jne
mov
push
ret
shlb
xor
std
out
and
push
jo
mov
mov
mov
mov
insl
sub
rcrb
mov
jbe
out
fsubp
mov
and
das
stos
imul
aad
jbe
xchg
xorb
push
push
out
subb
inc
fbstp
rolb
scas
fsts
dec
fs
pop
push
jnp
pop
fidivrl
stos
push
pop
imulb
add
ds
xlat
gs
ds
imul
aas
lcall
jno
sub
dec
pop
push
xor
pushf
inc
lods
xchg
cmp
xlat
adc
xor
mov
mov
jno
out
stos
bound
loope
push
jecxz
or
mov
pop
loop
std
or
bound
pusha
mov
addr16
rol
jle
and
fsubs
sub
icebp
jge
pop
xchg
sbb
add
xor
sti
fcomi
rcr
mov
mov
or
out
jge
cmp
and
mov
cmp
or
pop
push
mov
push
mov
pop
sub
pop
stc
shl
xchg
hlt
jne
nop
adc
mov
jbe
sub
mov
mov
mov
jb
cltd
imul
dec
cli
push
insl
mov
scas
std
dec
imul
cmp
mov
mov
inc
mov
enter
push
pop
pop
mov
or
adc
in
jb
or
pushl
jecxz
or
negb
cmp
push
std
jmp
push
xchg
dec
nop
and
push
mov
sbb
jns
jnp
xor
add
push
cltd
ret
mov
sbb
subl
pop
and
mov
mov
push
mov
xor
sbb
imul
pop
adc
push
lods
mov
xor
cwtl
mov
lods
push
xchg
adc
lret
ljmp
dec
sbb
add
outsl
dec
lret
int
call
push
xlat
loopne
rcl
filds
cmp
rorl
rclb
scas
iret
leave
pop
movsl
xchg
outsl
pop
pop
ret
mov
sub
jns
inc
mov
xchg
ret
xchg
jg
cmpsl
mov
clc
aad
sbb
add
xlat
ss
xor
gs
adc
sbb
jne
mov
aad
xchg
pop
mov
cli
jbe
sub
imul
stos
fistpl
gs
fcmovb
pop
or
dec
popf
pop
xor
cld
xchg
inc
inc
sub
jbe
mov
push
mov
test
mov
inc
add
sub
xor
rclb
sbb
movsb
inc
popa
sub
sti
loopne
ljmp
rcll
cmp
or
lods
ljmp
or
push
and
lcall
nop
push
or
xor
pop
popa
and
or
sub
fisubl
ja
xchg
xor
or
mov
adc
mov
hlt
push
xchg
js
xor
test
loope
push
push
icebp
sbb
je
jl
push
iret
adc
jb
add
or
xchg
or
xchg
stos
pop
mov
or
sub
hlt
cmpb
lahf
push
in
adc
sbb
imull
shll
loope
cli
sub
lea
mov
or
je
mov
mov
mov
sub
divl
mov
sbb
or
sub
sub
jp
or
pop
mov
icebp
push
fisubrs
aas
mov
mov
insb
push
jae
or
std
adc
cmp
ja
mov
mov
push
sub
leave
cmpsb
push
push
repz
lds
dec
sbb
es
adc
pop
fnstsw
outsb
and
xor
dec
mov
fs
cmp
dec
subl
fs
fmul
cs
sub
daa
sub
dec
push
inc
push
xlat
or
add
and
lds
jmp
xchg
mov
es
xchg
bound
leave
mov
dec
mov
dec
sbbb
cld
lock
mov
fs
jne
push
push
cmpsl
dec
adc
pop
insb
insl
mov
xor
cmpsl
lret
dec
and
out
rolb
adc
cmp
movsl
inc
inc
loop
sbb
jge
push
insb
dec
lret
call
dec
es
sub
and
popa
jle
mov
test
xchg
ja
pusha
out
inc
pop
fisubl
cmpsb
fadd
mov
cmp
inc
sbb
cmp
popl
push
cwtl
mov
inc
enter
testl
cmp
loopne
sub
cmc
aam
jecxz
idivl
inc
leave
jns
mov
pop
in
mov
jle
into
xorl
xchg
and
and
idivl
cmp
or
mov
dec
xchg
ret
cmpb
mov
xchg
mov
inc
xlat
stos
rcrb
test
lea
add
out
push
test
movsl
mov
sarb
cmpl
jno
xchg
pop
insb
mov
mov
addr16
push
cmc
xor
jmp
mov
fisttps
ja
dec
lea
cmc
and
lea
or
lea
enter
jb
mull
mov
outsb
fsubrl
subl
jnp
iret
sub
sti
out
cmp
test
loope
js
sbb
mov
mov
cmc
xchg
push
inc
xor
xchg
test
lds
xlat
cmp
xchg
inc
add
addb
nop
cltd
in
icebp
add
or
ret
push
mov
pop
and
jg
cmpsb
push
push
pusha
je
cwtl
xor
outsb
int3
sub
push
mov
outsl
imul
iret
mov
add
adc
insl
cld
lods
xchg
xorb
bound
scas
jns
adc
add
test
test
insb
je
mov
insl
sbb
sbb
mov
mov
push
faddl
mov
xor
nop
jae
pop
je
call
dec
or
fcoml
lds
gs
pop
lea
jne
ds
test
ja
inc
pop
outsb
pop
xchg
push
dec
jne
subl
and
sahf
fstpl
push
mov
xchg
and
out
stos
les
lcall
push
ds
xchg
cmp
in
sbb
push
cs
int3
outsl
outsb
bnd
xor
xor
sub
rol
inc
in
push
sub
mov
cld
cmp
fsubrl
sub
jge
int
les
xor
vorps
jle
push
in
xchg
push
mov
add
dec
addb
sub
inc
addr16
test
scas
aam
negb
jnp
mov
imul
mov
inc
out
movsl
in
gs
xchg
xchg
xchg
mov
xor
cmp
sbb
mov
mov
lock
jne
mov
mov
sbb
adc
vpandn
test
add
dec
arpl
arpl
fwait
call
sbbl
clc
cmp
ja
jo
icebp
fcom
mov
ret
aaa
fistl
and
xchg
xor
cmp
mov
lcall
loope
and
scas
pop
inc
sbb
xor
pop
imul
pop
mov
jne
fs
mov
sub
leave
stos
xor
sub
insb
xchg
stos
jno
clc
cmp
idiv
in
add
mov
loopne
push
nop
fmull
sbb
ret
mov
divl
imul
js
test
mov
push
stos
or
cmpsl
sbb
cld
stc
adc
pusha
cmp
cli
popf
push
and
cli
pop
jp
out
sbb
xchg
push
rcl
sub
sbbl
push
int
xchg
insb
mov
mov
mov
push
ficomps
daa
pop
mov
rorl
int
out
sbb
sbb
clc
shlb
scas
fst
arpl
js
add
dec
fiadds
and
inc
xor
decl
insb
lahf
loop
loopne
loopne
fs
shr
and
in
pop
push
outsl
cmp
xchg
xor
arpl
mov
pop
enter
fnsave
test
rolb
inc
idivl
int
push
test
jmp
stos
or
lahf
inc
leave
adc
sar
js
add
adc
fs
sahf
ret
sahf
push
not
shll
add
movsl
xchg
sub
pop
rolb
fs
and
sbb
popa
add
mulb
jle
js
hlt
cmpsl
push
mov
fucomi
mov
subb
sub
xchg
cmpsl
push
mov
lret
ljmp
sub
mov
push
jb
push
jmp
lahf
push
mov
adc
dec
cwtl
scas
jae
jns
and
stos
cmp
add
les
jbe
cmp
fstenv
mov
loopne
std
pop
push
lods
subb
mov
add
mov
dec
lcall
inc
and
popa
ret
aam
push
jmp
mov
xor
jge
cmp
inc
repz
or
mov
insl
cmp
add
pushf
jae
dec
inc
push
jnp
pop
mov
push
bound
stos
ret
or
dec
or
mov
mov
pop
pop
hlt
xchg
or
or
or
aad
jle
std
push
adc
lods
in
cmp
inc
pop
into
jmp
jo
movsb
inc
jno
subb
pop
cmp
lret
addr16
fidivl
enter
pop
or
dec
repz
ret
xor
sbb
dec
pop
test
sub
xor
ret
sarb
pop
mov
push
cmp
mov
mov
data16
dec
in
repz
mov
xchg
inc
je
add
dec
sub
ret
pop
lock
dec
insl
lret
fcmovnu
pop
dec
mov
aam
ja
sbb
push
push
mov
sub
dec
pop
xor
pushf
in
pop
lock
add
sub
out
adc
in
fldz
loop
nop
cwtl
jns
lds
mov
pop
inc
xor
pusha
sub
cmpsb
push
je
imul
roll
fiaddl
mov
scas
jl
lods
cmp
jl
aas
jge
test
pop
or
or
adc
pusha
outsl
sbb
lea
dec
int
in
xchg
shlb
xchg
ljmp
int3
cs
shll
cmc
cmp
aad
data16
add
shr
xchg
and
lret
cmp
cmpsl
lods
mov
ret
xchg
dec
lock
mov
adc
clc
ficomps
lock
gs
cmpsb
mov
aaa
loope
filds
shrb
movsb
cmp
mov
mov
mov
mov
mov
mov
add
fadds
sbb
lret
and
fidivrl
jle
pushl
fimull
test
inc
and
cli
mov
sub
fcmovnb
insl
scas
lcall
in
mov
sahf
ret
lock
push
cwtl
lods
and
insl
mov
ljmp
xor
dec
pop
test
in
jge
test
pop
jmp
mov
push
iret
mov
add
mov
fcmovnu
jg
xor
fdivrs
fdiv
fstpt
fstpt
jle
enter
cmp
xchg
adc
push
pop
dec
sbb
mov
js
data16
std
divl
xchg
movsb
xor
and
pop
mov
jl
push
xchg
mov
enter
push
mov
mov
xchg
add
xchg
adc
sahf
dec
jo
ds
insl
adc
hlt
shl
jp
xchg
mov
pop
icebp
dec
mov
loop
fmuls
aas
jae
addr16
ss
dec
stos
mov
mov
or
lret
imul
mov
cmpsb
push
jle
mov
cmp
inc
lods
xor
pop
iret
outsb
cmp
or
test
jp
mov
lret
in
mov
bound
sbb
dec
jne
mov
int
inc
jp
arpl
shll
aaa
in
xor
data16
add
push
movsb
jp
sbb
add
push
popa
inc
add
pop
push
daa
mov
jge
jae
addr16
push
andb
lahf
or
dec
and
out
imul
xchg
in
aaa
jg
lea
nop
xchg
and
stos
lret
xlat
test
pop
inc
stc
es
ja
adc
sub
fcompl
sti
ret
mov
sti
sub
repz
shrl
pushf
fstps
and
cmp
dec
adcl
and
decl
sbb
repz
leave
jbe
mov
or
inc
sbb
adc
adc
in
rolb
xchg
sahf
notb
jne
adc
xchg
jo
xlat
mov
pushf
and
fimuls
cmpsl
mov
clc
fistps
sbbl
mov
pusha
icebp
cs
fists
xor
loopne
ss
push
out
cmc
test
jno
std
ds
fsubs
cmp
ss
loopne
mov
rcrb
adc
push
xchg
or
pop
shlb
insl
xchg
lea
jae
repz
sub
jg
nop
rclb
mov
inc
push
js
mov
ret
into
cmp
pop
push
inc
mov
in
lea
jnp
cmpl
cmpl
and
cli
jg
das
xlat
movsb
fldt
pusha
lods
addl
aas
cmp
cmp
inc
add
sbb
sbb
ret
or
jae
jl
add
cltd
fisubs
cmp
mov
jo
test
xor
gs
pop
testb
dec
and
scas
mov
dec
xor
in
cmp
insb
and
ficoml
inc
stc
pop
movsb
inc
cmp
jecxz
jmp
push
leave
call
jae
outsl
pop
inc
and
lods
sub
and
inc
fildl
xor
push
ror
ja
jmp
push
and
cmp
jle
mov
mov
push
addb
jb
hlt
jo
out
push
adc
xchg
andb
jne
or
stos
in
push
pop
shlb
push
cmp
clc
pand
lds
test
push
std
inc
fnstenv
inc
push
pop
add
pop
cltd
xchg
data16
jle
out
mov
push
mov
stc
sbb
nop
pop
fwait
xor
clc
xor
and
fdivrs
in
je
sti
xchg
push
jo
test
out
pop
push
xor
nop
xchg
adc
rorb
xor
testb
imul
sbb
xchg
mov
test
inc
lods
xor
mov
or
lea
push
xchg
cmp
add
fwait
testl
dec
jns
or
xor
fisttpl
outsb
mov
sar
jbe
cmp
pop
dec
push
add
test
test
stc
push
cmp
jb
lret
fwait
inc
dec
dec
movsb
lods
pusha
ret
dec
sahf
mov
call
loope
mov
push
pop
ds
xor
mov
add
lods
fdivl
imul
push
repnz
js
ret
inc
adc
cmpsl
inc
lret
add
sbb
dec
dec
sub
fnstenv
mov
cld
imul
add
leave
jmp
loop
jge
adc
or
mov
xor
out
adc
xor
adc
push
push
push
jg
test
mov
dec
mov
pushf
xor
out
ljmp
and
pop
movsl
out
scas
cmp
cli
mov
lock
adc
mov
pusha
loope
in
inc
mov
mov
push
aaa
sub
pop
shlb
inc
xchg
sbb
int3
test
das
or
inc
push
dec
addr16
sbb
or
push
xchg
popa
or
jmp
push
sbb
push
fcomps
sti
lcall
add
xchg
std
and
sbb
mov
in
mov
xchg
cli
in
roll
or
and
cmp
push
jno
cmp
arpl
rorb
jnp
dec
daa
mov
cmc
cmpsl
and
cs
test
push
dec
jp
sub
sete
push
test
clc
mov
inc
pop
lret
out
mov
xchg
ds
or
push
push
int
dec
inc
or
push
jg
jg
ficompl
xor
xchg
subl
mov
cli
mov
push
push
mov
orl
cwtl
ds
ljmp
lods
shll
xchg
sbb
aad
and
dec
pop
fwait
int3
mov
cmp
mov
into
push
adc
jbe
leave
mov
popa
inc
xlat
pop
out
xor
je
mov
test
push
cld
xor
mov
mov
scas
jo
or
jge
mov
ret
aad
leave
mov
hlt
xchg
cmpsl
adc
mov
gs
out
mov
test
fimuls
imul
ljmp
cmp
clc
or
and
sub
outsb
push
cli
out
and
das
aas
cltd
clc
xchg
lods
daa
push
cmp
mov
push
inc
bound
xchg
loopne
push
ja
js
outsb
cltd
mov
jb
andl
leave
push
cltd
dec
lods
lret
mov
rolb
jnp
ficompl
add
adc
lcall
movsb
aas
jb
outsl
or
and
std
pop
cmpsl
in
out
jge
jne
jbe
fwait
sbb
or
mov
insl
mov
sahf
shlb
orl
sti
push
lcall
ds
js
inc
mov
push
stos
or
jl
ljmp
add
xlat
jo
xor
or
push
dec
call
push
xchg
dec
js
mov
inc
sub
sti
es
push
xchg
jmp
ja
ja
test
iret
mov
js
adcb
enter
scas
inc
jge
mov
rdpmc
fs
jl
push
mov
cmp
add
add
in
sub
push
test
sub
rcll
or
sbb
adc
xor
jle
incb
or
push
loopne
add
xor
pop
lret
or
cmp
xchg
push
sub
lahf
pop
ja
xchg
cmp
scas
mov
cmpsb
jae
xor
fisttps
lahf
rcrb
repnz
in
dec
add
dec
xchg
test
mov
je
push
fbstp
pop
fbstp
stc
push
fsqrt
outsl
adc
ret
pushf
fs
insl
pop
imul
sub
lea
imul
inc
inc
xchg
inc
jae
inc
test
lods
mov
mov
xchg
dec
scas
in
jecxz
mov
fucomip
rolb
add
lds
pop
sub
cmp
xchg
loopne
out
inc
sahf
push
fldcw
fstpl
mov
arpl
inc
push
push
lret
nop
imul
mov
push
xchg
mov
iret
mov
jns
xor
jmp
mov
dec
bound
out
dec
leave
lcall
insl
inc
mov
sbb
and
fldl
jle
push
shrb
sub
shlb
xchg
xchg
aas
fidivl
dec
popf
adc
or
add
rorl
js
test
inc
in
sub
xchg
mov
pop
sarl
int
popf
js
hlt
and
mov
dec
adc
dec
cmpsl
paddb
leave
dec
xor
iret
add
lea
mov
cmp
inc
repnz
fidivrl
mov
in
cmp
popf
ja
cltd
and
adc
and
clc
mov
in
xor
adc
idivb
jl
fisttps
mull
cli
data16
mov
mov
stc
ja
mov
cld
clc
mov
cmpsb
clc
sub
push
adc
lret
scas
je
pop
lds
xor
jno
sub
mov
imulb
enter
pushf
into
jge
mov
into
mov
xor
movsb
cmp
ja
or
fisttps
push
jb
mov
push
rorl
add
and
inc
add
cmp
sbb
add
inc
cli
mov
xchg
jae
imul
inc
ds
or
and
cmp
or
popa
test
pop
enter
mov
pop
lock
call
inc
pop
pop
inc
mov
int
fs
push
mov
jp
xchg
ss
rol
loope
in
xchg
add
imul
mov
pushw
mov
aaa
or
std
push
icebp
ja
ds
test
mov
hlt
mov
xchg
lahf
lcall
shrl
scas
mov
xlat
add
mov
add
cmpsw
dec
mov
xchg
and
cs
dec
popf
test
mov
jp
adc
test
shrl
pop
fidivs
push
sahf
xchg
mov
ja
jecxz
jp
add
jnp
int3
sbb
lahf
mov
idivb
sub
jmp
ss
mov
test
in
dec
js
or
or
jns
sub
push
pop
mov
mov
out
sahf
rolb
xchg
xchg
adc
cmc
pop
lret
dec
xor
in
jb
xchg
outsl
shrb
testb
test
aad
cmpsl
fwait
push
pop
or
sub
lods
bound
hlt
stos
and
xchg
outsl
push
fsubrs
sbb
cmp
mov
fmuls
adc
mov
jns
xor
inc
adc
ja
add
or
mov
add
into
ss
xor
fistl
push
or
push
stc
fisubrl
dec
sub
inc
loopne
rolb
dec
push
jae
out
or
fs
js
icebp
mov
mov
mov
and
push
xchg
xlat
outsb
sub
out
sub
ret
mov
imul
jge
pusha
push
sbb
mov
sub
aaa
pop
cltd
push
out
ljmp
mulb
adc
lret
push
pop
lea
cmpsb
lods
flds
bswap
cmp
aad
dec
scas
test
or
movsl
shlb
sub
or
pop
sbb
xchg
mov
cmp
lock
jge
fcomip
cli
dec
jmp
xchg
les
fildl
inc
scas
insl
cmp
popf
pop
pop
fisubrs
mov
movsb
xor
dec
inc
jbe
movsb
add
inc
mov
mov
aam
mov
mov
xor
icebp
xchg
movsl
and
mov
leave
std
mov
loop
test
adc
lods
pop
adc
push
mov
je
mov
insl
cwtl
mov
jae
xchg
cmp
sub
cs
leave
scas
repz
push
ret
inc
daa
xchg
push
cmc
aam
adc
pop
push
push
push
or
lock
adc
sub
insb
ss
mov
aaa
aam
xor
outsl
inc
rcl
fmul
push
std
loop
and
inc
jne
jle
mov
mov
daa
or
sbb
xor
dec
dec
inc
sbb
jns
aaa
movsb
mov
mov
rep
cwtl
outsb
xchg
rclb
adc
sbb
pop
outsb
mov
pop
js
inc
mov
xlat
insb
mov
mov
pop
daa
popf
mov
pop
rcll
jo
push
pop
or
test
in
push
pop
loopne
mov
ljmp
push
mov
mov
aaa
ljmp
ret
inc
sub
pop
jmp
imul
loope
xor
cwtl
es
les
fimuls
mov
loop
mov
xchg
insl
cmpsb
pushf
sti
pop
mov
mov
mov
aaa
pop
push
mov
mov
imul
cltd
sti
arpl
sub
inc
js
xchg
inc
imul
loop
mov
das
mov
push
pop
sub
sub
sbb
dec
cmpl
icebp
lret
pop
pusha
shrb
std
dec
fdivrs
cmc
and
xchg
jae
lea
fnstenv
jne
add
repnz
cmp
push
in
cli
push
jmp
call
and
jne
cmc
sti
add
pop
arpl
xchg
andl
or
in
popa
push
push
sub
dec
psrad
mov
fwait
cli
mov
mov
pop
jle
push
push
jmp
lret
insb
xor
sbbl
fldl
or
sti
xor
out
mov
xor
fcompl
inc
inc
daa
cld
xchg
or
aam
jl
dec
pop
outsl
in
mov
movsb
pop
and
inc
sub
and
outsb
movsl
in
dec
or
rol
loopne
or
mov
push
or
lods
cmc
mov
data16
int
adc
cmc
cmp
push
or
test
test
dec
insb
leave
int
mov
mov
scas
cwtl
in
cmpsl
inc
cmp
sti
mov
lds
aad
fsubr
xchg
pop
in
and
mov
pop
sbb
mov
push
rcl
push
xchg
gs
mov
shlb
adc
mov
or
add
xchg
cld
lret
xor
movsl
jns
pop
es
imul
sbb
adc
cli
or
enter
sub
lea
add
into
hlt
or
cwtl
push
ret
movsb
fisubrs
testl
stos
sbb
mov
pop
sub
cli
lcall
pusha
loope
inc
in
pop
fwait
and
insb
jg
adc
pop
or
jp
sbb
popa
xchg
pop
push
bound
adc
adc
gs
out
fisubl
mov
ret
inc
adc
repz
aam
xlat
pop
dec
xor
adc
mov
cmp
or
enter
xchg
and
adc
or
fs
mov
jno
in
dec
xor
adc
aas
mov
popf
lret
dec
jb
jne
cld
inc
cmp
iret
jge
lds
idivl
mov
lret
fimull
inc
mov
pop
adc
lock
ljmp
mov
mov
push
jno
xor
push
sub
loop
and
xor
dec
xchg
and
push
and
cmp
push
fxch
jg
dec
pop
mov
mov
mov
xlat
lea
mov
mov
outsb
cmpsb
jle
or
inc
inc
jle
not
xor
xor
adc
xchg
js
add
sbb
cli
les
pushf
mov
mov
inc
mov
stc
fdivp
push
out
xlat
popf
add
push
mov
push
in
nop
adcb
cmc
aam
add
cmp
fnstenv
loope
sbb
push
aam
mov
inc
ss
push
out
test
and
sbb
pop
push
lock
mov
movq
aam
out
test
inc
adc
mov
cmp
cmp
sub
sbb
dec
hlt
jo
sbbl
adc
into
mov
xor
stos
pop
xor
jns
xchg
movsl
ja
enter
xor
jne
xchg
xor
movsl
pop
xchg
mov
out
enter
fdivl
scas
fisubs
pop
cmp
fstpl
mov
fildll
cmp
pop
adc
jmp
mov
push
inc
mov
daa
mov
jno
mov
add
mov
cmp
adc
mov
inc
and
enter
int
popa
sbb
popa
cmp
in
in
sub
jnp
cmc
cli
enter
pop
mov
ja
mov
jnp
addr16
mov
and
jns
xor
jno
das
and
or
inc
pop
xchg
xor
mov
jbe
mov
or
dec
data16
xor
scas
sub
out
inc
ja
push
inc
xadd
in
jnp
stos
lcall
adc
ret
stc
and
mov
lds
inc
icebp
adc
imul
lock
or
imul
cmp
jns
or
pusha
and
ja
scas
test
rcll
adc
outsb
xlat
repz
pop
jmp
stos
insb
enter
std
rcrb
cmp
push
jecxz
pop
xchg
push
pop
push
data16
add
and
sub
xlat
shrb
stc
jle,pt
sbb
dec
pop
in
pushf
shl
icebp
push
dec
loope
cltd
and
ret
pop
xlat
out
cmp
xlat
xor
pop
fdiv
loopne
in
push
pop
imul
loope
addr16
fildll
repnz
mov
fstpt
pushf
pop
mov
push
lret
mov
pop
jge
pop
cmp
pop
call
mov
xor
sbb
mov
pop
sbbb
fwait
mov
push
imul
xchg
std
jp
xor
cli
bound
inc
cmp
fcomp
movntps
xor
adc
pushl
data16
test
push
fadds
xchg
adc
jb
call
aaa
xchg
inc
js
sahf
and
dec
jmp
les
loope
das
popf
test
rcl
jecxz
lcall
inc
sti
clc
das
add
pop
and
jbe
mov
inc
and
mov
and
jle
add
aas
mov
in
lock
xor
sbb
adc
sahf
fists
sbb
shlb
sbb
cmp
dec
jns
or
mov
int3
xlat
jbe
repnz
cld
mov
lret
add
loopne
mov
sarb
lock
popf
aas
cld
sub
ret
pushf
lahf
sarl
jno
or
fsubrs
mov
pop
add
push
mov
add
mov
daa
add
sbb
add
in
fsts
ret
insb
imul
lea
cmpb
xchg
sbb
test
addb
scas
lcall
mov
shll
ret
adc
clc
subb
xor
mov
stc
xorb
aas
pop
iret
mov
in
push
mov
xchg
pop
adc
mov
out
mov
fs
mov
mov
enter
inc
mov
arpl
imul
add
aad
sub
testb
leave
inc
pop
out
pop
cmpsl
xchg
test
movsb
pop
mov
pop
test
leave
mov
sti
mov
imul
iret
sbb
cmp
or
pop
outsl
iret
les
lahf
loopne
jne
cltd
lds
lret
xchg
bound
imull
add
adc
imul
xor
test
mov
outsb
sti
gs
push
and
idivl
mov
fwait
xor
bound
aam
push
or
test
les
push
or
cld
xchg
inc
xor
scas
test
arpl
lock
cld
jno
ja
cmpsb
aas
pop
fsubrl
leave
cmpsl
jle
dec
pusha
daa
jmp
or
jp
sahf
xchg
inc
mov
xchg
inc
lods
in
stos
lock
mov
stos
or
push
std
xchg
push
cmc
pop
subb
pusha
jns
mov
pop
push
push
xchg
pop
fstl
pusha
movsb
add
mov
mov
fmuls
loopw
inc
arpl
jnp
xchg
mov
out
mov
pop
sub
cwtl
scas
movsb
xchg
cmp
sti
popf
lock
mov
mov
dec
mov
mov
js
lahf
pop
or
cmp
fcomps
incl
mov
dec
test
fdivrl
push
or
call
stos
lret
repz
gs
pop
insb
test
loopne
repnz
jmp
inc
jae
and
cmp
rorl
jge
or
xor
jmp
aad
and
add
imul
ficomps
clc
xchg
dec
jae
shlb
cwtl
pop
jno
jge
push
inc
dec
lods
cmp
cmp
or
jecxz
cmp
rorb
mov
enter
iret
sub
jle
notl
or
xchg
addr16
in
cmp
cmpsb
sub
out
pop
sbb
add
mov
mov
mov
scas
pop
inc
add
sbb
lret
pop
and
jbe
sbb
and
dec
into
negb
bound
pusha
aaa
pop
cmpsb
mov
mov
orl
mov
js
je
mov
sub
adc
jl
aad
pop
ljmp
adc
push
lret
pop
xchg
jnp
iret
cld
lods
insl
xor
push
out
orb
mov
pop
mov
rcrl
cmp
xor
aas
mov
repnz
into
push
sbbl
sarb
and
pop
cmpb
dec
push
sub
pop
rorl
xchg
std
xlat
sub
popf
iret
test
inc
pushl
test
shrl
and
popl
subl
ja
sahf
roll
push
jge
aaa
push
push
cmp
xlat
arpl
cmp
cwtl
pop
pop
fildl
mov
jnp
rol
inc
push
dec
outsl
out
push
nop
xchg
push
sub
mov
jmp
test
and
cmpl
insl
or
xchg
inc
sbb
insl
enter
inc
cltd
jge
fdivrp
pop
or
mov
push
stos
pop
sbb
sbb
sbb
xchg
or
mov
push
movsb
movsl
nop
mov
jae
les
jnp
fsubp
loop
cs
push
shlb
inc
xor
rcl
in
and
lret
mov
pop
jae
cmp
mov
or
inc
mov
push
fists
pop
cli
int3
push
push
dec
cmpsl
fwait
or
sub
outsl
inc
aas
and
cmpsl
aaa
cwtl
test
fnstcw
mov
xchg
sub
fdivp
add
mov
jb
or
in
xor
popa
pop
std
daa
or
shll
je
int
clc
inc
jg
pop
sbb
xor
adc
xchg
jecxz
xchg
mov
cmp
lcall
mov
adc
icebp
xchg
jbe
call
cmpl
mov
andl
pop
insb
mov
dec
pop
sbb
mov
daa
inc
mov
xorb
xor
loopne
and
ljmp
mov
mov
xor
mov
cmpsl
lds
cmp
call
ret
subb
and
jns
sbb
or
push
jp
je
sub
inc
mov
add
in
and
imul
repnz
inc
outsb
sarb
addr16
push
lods
rorb
ss
inc
add
mov
movsb
xchg
mov
cmpsb
stos
mov
xor
std
in
out
xor
lds
adc
jb
lret
push
inc
xor
js
mov
inc
lock
inc
inc
or
push
mov
lea
in
pop
int3
add
jae
mov
mov
pop
mov
and
mov
jg
xchg
aas
pop
pop
fidivrl
mov
dec
out
jno
pop
outsl
cmp
add
in
enter
mov
out
inc
push
popf
mov
push
pop
outsl
jno
mov
idiv
or
aaa
popa
cmp
adc
cmp
cli
aas
jns
aam
jae
sbb
sbb
lcall
aam
and
mov
insb
test
inc
mov
dec
mov
jne
and
shll
mov
pop
mov
adc
test
mov
or
cli
shll
call
mov
shrb
mov
pop
push
mov
imul
push
jecxz
add
sub
ret
push
sbb
fwait
loop
adc
lods
mov
push
enter
movsb
subb
inc
push
cmp
or
jecxz
and
out
pop
inc
cmp
sub
mov
inc
sbb
lock
les
orl
xchg
sub
pop
idivb
pop
inc
add
gs
and
arpl
pushf
movb
gs
mov
dec
in
add
lahf
adcl
sti
idivb
xchg
out
out
lods
mov
ret
pop
push
jge
push
cmp
std
pop
xor
ds
sub
es
inc
movsl
loope
repz
lock
jp
pop
aaa
std
mov
outsb
mov
pop
lods
movl
sahf
cmc
add
daa
xchg
mov
hlt
fsubs
lahf
xchg
arpl
mov
push
lea
mov
xor
mov
lret
dec
cmc
stos
jecxz
mov
popa
add
clc
xlat
mov
leave
es
movsb
repz
and
xchg
fbld
pushf
test
add
repnz
add
pop
xor
jge
repz
push
mov
nop
mov
inc
ret
jae
stos
cmc
pop
push
push
mov
outsl
fld
mov
mov
cmpb
sub
xchg
std
lret
lcall
inc
sub
into
inc
testb
push
pop
fwait
rorb
adc
lret
sub
sub
out
insb
cli
nop
mull
xlat
sbb
mov
pop
fcmove
cmp
loope
mov
pop
jae
or
pushf
in
decl
pop
in
stc
xlat
sub
mov
cmc
push
cmp
rdtsc
pop
std
fists
fiaddl
push
test
mov
mov
push
loope
push
jp,pt
out
pop
orb
cmc
and
scas
mov
push
push
xchg
stos
or
adc
nopl
popf
jp
addr16
notb
jmp
add
adc
movsb
sahf
outsl
adc
rcr
scas
sahf
in
out
xor
sub
inc
mov
pushl
andl
jmp
fisttpl
xor
xlat
dec
mov
dec
in
jle
sub
xor
sbb
dec
lret
clc
in
mov
adc
sti
xor
mov
sub
sbb
mov
mov
xchg
imul
dec
sub
push
push
into
jb
push
jbe
cwtl
lods
sub
xor
push
xchg
daa
inc
cmc
stos
push
filds
inc
jmp
bound
push
pushf
sub
cmp
jge
pop
fisubl
loope
dec
int3
sub
lret
mov
xor
out
push
sbb
jnp
test
movsb
dec
iret
jmp
loop
fwait
xchg
fists
sar
jno
pop
fmull
stos
cmp
and
xchg
sub
and
iret
cmp
cmp
dec
lods
or
inc
out
repnz
sbb
mov
out
inc
jge
mov
mov
push
popf
sbb
mov
sti
mov
call
adc
cwtl
lret
loop
jle
mov
shrb
cmp
rorl
icebp
lods
mov
je
dec
lea
sti
jae
iret
push
sbb
ret
push
dec
pop
ljmp
scas
sbb
mov
sbb
sub
ss
or
mov
scas
cwtl
movsl
out
jecxz
repz
xchg
jl
or
or
out
movsb
cli
js
loope
hlt
insb
mov
faddl
cmc
inc
arpl
icebp
adc
fistpll
ljmp
adc
in
add
push
add
jbe
jno
inc
lock
fldt
or
inc
dec
mov
stos
insb
ljmp
mov
cmc
inc
pushw
fs
mov
hlt
and
arpl
cmc
add
dec
shl
repz
adc
out
mov
jns
dec
popf
adc
imul
mov
pop
push
les
loope
sbb
push
iret
push
out
and
xor
mov
stos
fidivl
push
and
dec
or
lret
aad
arpl
or
or
mov
mov
rorl
scas
push
outsl
mov
pop
std
sub
ja
inc
pop
ja
lret
sub
fwait
sbb
pop
pushf
xorl
cmpsl
outsl
or
lock
les
or
je
mov
scas
jmp
repz
sub
or
jns
jne
cwtl
cmpsl
and
loopne
and
sub
push
jecxz
or
sub
arpl
xchg
xchg
mov
es
imul
jo
mov
jo
or
mov
int3
std
pop
adc
call
mov
and
xchg
shlb
aam
out
inc
aad
gs
add
repnz
jmp
mov
sub
xchg
enter
push
in
aas
ret
jge
mov
cltd
andb
jle
xchg
pop
add
ret
add
pusha
sahf
push
pop
or
stos
jno
stos
xlat
and
daa
or
popf
jge
insl
mov
mov
ret
shrl
cltd
aam
and
in
push
push
rcll
sbb
mov
xchg
sarb
or
repz
ljmp
movsl
jecxz
out
push
inc
mov
icebp
push
stc
adc
dec
add
in
pop
cmp
inc
and
jp
sbb
loop,pt
decl
cmp
jbe
jo
icebp
sarb
or
test
and
stos
mov
mov
sub
xchg
sub
xor
mov
mov
sbb
mov
jns
test
mov
xchg
adc
retw
popa
add
xor
es
aam
aas
jbe
cmp
sahf
loopne
mov
nop
fwait
ljmp
into
cmp
iret
jmp
cmp
nop
mov
xchg
fisubrl
outsl
xlat
mov
mov
push
pop
and
pusha
mov
dec
add
mov
and
inc
out
xchg
enter
or
mov
or
mov
cmp
mov
adc
jo
scas
adc
pop
mov
adc
and
and
cltd
loop
loop
lock
aam
pop
outsl
call
fistps
pop
xchg
in
test
imul
mov
sub
cmp
imul
jnp
in
pop
dec
xchg
add
mov
out
cmp
dec
jmp
sub
mov
add
addr16
xchg
inc
out
jae
pop
xor
in
test
loopne
sub
push
divb
lods
fcompl
add
pushf
lods
or
cmp
icebp
fs
js
or
mov
pop
or
loop
push
sub
rcrl
dec
js
dec
and
xchg
and
or
mov
sahf
and
repz
pand
jmp
repnz
push
pop
and
and
xor
mov
lret
sbb
ljmp
and
adc
fisttps
int
xor
adc
pop
sbb
sbb
adc
sub
mov
push
test
add
push
stc
mov
jg
in
push
or
mov
call
jno
cmp
xchg
add
es
dec
lret
jo
or
outsb
mov
jl
pushf
cmp
sub
divb
add
out
jns
iret
js
push
lods
lea
cmp
cwtl
aam
lods
push
fdiv
cmp
push
cmp
fs
jle
jle
pop
in
cmp
mov
jns
flds
outsb
inc
xchg
adc
xor
adc
popf
and
push
adc
pop
sub
dec
and
lahf
pop
rclb
inc
test
cmc
pop
mov
cmp
add
push
xchg
cmp
or
mov
out
xchg
sub
xchg
stos
mov
cmp
jmp
add
in
push
or
xor
enter
in
xor
fsub
add
pop
mov
into
lea
insl
das
bound
cs
loop
sahf
or
pop
jg
in
xchg
lea
xlat
add
sbb
and
inc
jp
pop
imul
push
scas
mov
imul
loope
jg
dec
aad
pop
cmp
repnz
outsl
arpl
pop
test
push
ss
xchg
mov
bound
push
pop
or
loopne
mov
and
in
cmp
push
outsl
sbb
and
inc
lahf
in
xchg
mov
or
sub
xchg
and
leave
fwait
popf
xchg
sub
loop
jno
ja
sti
cmp
push
dec
mov
ret
mov
xor
sbb
scas
xchg
or
xchg
xor
xchg
lahf
push
movsl
stc
mov
sub
and
push
gs
cmp
stc
dec
add
xorb
addr16
mov
ret
xchg
repz
adc
movsb
cmp
sbb
es
shll
mov
hlt
sub
aad
out
rcrl
push
dec
sbb
cwtl
fmuls
adc
xchg
xchg
or
mov
ficoml
push
pushf
ret
mov
mov
inc
jg
jno
std
sahf
sub
call
add
outsb
cltd
cli
push
popl
mov
cmpl
lret
xorb
outsb
adc
fidivl
in
cmp
pop
inc
fwait
jns
aas
push
lahf
subl
pop
dec
inc
adc
out
in
popa
mov
dec
pusha
test
xchg
loope
fidivl
repnz
pop
iret
or
pop
dec
loopne
xchg
stc
loop
push
loop
xor
mov
push
vrsqrtss
push
mov
sbb
sbb
dec
scas
lods
pop
rcrb
rolb
popf
sbb
outsb
fwait
mov
sub
push
push
xor
cmc
push
cmp
aad
outsl
mov
nop
jg
aaa
mov
inc
cs
fwait
inc
push
cmp
addb
cld
sub
popf
cltd
int
jmp
jg
jae
adc
int
rclb
into
push
fucomp
pop
pop
sbb
jnp
jbe
adc
mov
mov
js
popa
mov
dec
aaa
or
pop
movsl
aas
push
push
test
and
incl
jnp
adc
mov
xchg
xchg
jbe
hlt
inc
mov
xor
enter
mov
mov
inc
sbb
call
test
movsb
and
mov
inc
insb
popa
les
sbb
xlat
pop
add
fwait
cmp
fnstcw
push
pop
sub
jmp
out
aas
shrb
jbe
sti
dec
mov
add
lods
out
sbb
mov
enter
hlt
rolb
pop
inc
movsl
mov
lods
aam
cmp
arpl
inc
cmp
push
iret
pop
dec
test
loop
or
shrl
sub
or
push
loopne
fnstsw
daa
in
fld
jne
sbb
mov
imul
cmp
in
nop
push
mov
pop
enter
pusha
out
scas
dec
mov
pop
mov
pusha
jnp
js
mov
mov
cmp
add
rclb
sub
lret
jb
jne
cwtl
push
cmp
mov
xchg
repnz
push
sub
inc
cmp
cmpb
addr16
jge
pop
shlb
aas
push
lahf
mov
loopne
lcall
ret
sub
mov
mov
xchg
adc
adc
mov
xchg
gs
out
hlt
mov
xor
jae
inc
or
lea
adc
xchg
leave
adc
es
jo
adc
xchg
sar
mov
adc
and
fisttpll
rorb
push
js
push
mov
inc
cmp
mov
je
sbb
out
ficoml
insl
mov
out
scas
jbe
sarb
aam
stos
and
sub
js
shr
psubsw
sbb
mov
inc
outsl
add
stc
cmp
cs
dec
loope
imul
sub
imull
mov
jae
or
loope,pt
jecxz
sbb
add
pop
sub
jno
mov
mov
ljmp
mov
loopne
pop
aaa
inc
ds
sbb
xor
add
cmp
stos
pop
mov
xor
adc
test
xor
dec
ss
imul
pop
push
movsb
dec
clc
popf
int
stos
dec
test
add
insb
mov
xorl
in
dec
cli
xchg
inc
mov
das
add
test
jge
dec
sub
sbb
xchg
cmp
lock
xor
cld
lret
xchg
and
cmp
push
dec
shl
andb
push
test
mov
jle
push
fistpll
popf
mov
enter
jno
dec
fwait
pop
cmc
nop
iret
bound
jns
ds
stos
inc
popa
jmp
ds
mov
fimull
cmc
jae
fstps
cwtl
test
repnz
out
lods
sbb
das
mov
fs
sbb
adc
sbb
sarb
jb
fdivrs
mov
repz
cmc
cmp
sub
fdivl
lret
mov
leave
in
mov
or
mov
adc
mov
inc
xchg
fisttpll
sub
add
out
pop
jae
ror
divb
pop
or
and
xchg
cltd
pop
pop
adc
jbe
inc
aas
adc
fstl
and
rcrl
popa
cmpsl
repz
das
xchg
rorl
adc
clc
adc
aaa
add
out
push
pushw
xchg
dec
jp
jbe
push
ret
shrb
add
sahf
cmp
popf
sub
mov
add
mov
nop
stos
push
pop
test
inc
dec
je
icebp
or
jmp
jecxz
inc
insb
jb
int
add
cwtd
and
dec
fisubrs
iret
xchg
and
jnp
fists
idivb
imul
hlt
adcl
loope
pop
jl
bnd
arpl
outsb
fidivl
push
mov
mov
sti
jge
ljmp
mov
rorb
outsb
in
push
jno
aas
int
xor
push
adc
cmpsl
int
fs
mov
add
jae
pusha
adc
iret
add
loopne
inc
mov
jb
aaa
and
cmp
cld
xchg
pop
test
dec
lock
xor
fwait
lret
cmpl
xorl
push
xor
in
inc
test
ja
in
shrb
xchg
xchg
cltd
les
mov
xchg
je
xor
sarl
jp
rcrl
lret
xchg
add
nop
fcom
pusha
push
cmpsl
sub
cmp
mov
push
dec
xchg
scas
dec
cmp
outsb
outsl
sub
dec
sti
and
pop
cld
xor
sub
push
push
inc
mov
jmp
loope
and
adc
mov
ds
or
jmp
aam
std
lods
mov
test
and
aaa
aad
pusha
stos
shll
cld
or
jmp
clc
popf
push
xchg
mov
jmp
stc
pop
xchg
pop
adc
fidivrs
pop
inc
fiadds
rorb
fwait
lds
into
adc
call
jge
and
xor
adc
adc
xchg
subl
xlat
mov
lcall
pusha
pop
call
enter
rcl
pop
cmp
xchg
iret
inc
dec
push
or
fisubl
push
leave
in
pop
int
xchg
dec
out
xor
push
push
outsb
loope
notl
sbbl
push
xchg
lods
adc
mov
loop
mov
xchg
int3
nop
add
mov
hlt
inc
lret
cld
ljmp
sub
dec
push
mov
fs
sub
mov
sub
xor
push
xchg
test
loop
fmull
mov
sub
inc
cmp
pop
mov
out
jg
pop
mov
aad
fisttpll
jnp
lret
xor
adc
outsl
cld
jnp
lret
je
pop
in
fldt
mov
mov
jp
jmp
mov
dec
jmp
xlat
stc
int
fnstsw
lods
popa
jmp
lcall
xchg
jmp
mov
xchg
add
sti
popf
enter
jl
push
movsl
mov
add
ljmp
and
repz
mov
movsb
addb
mov
xor
cmp
xchg
fsubp
adcl
mov
mov
sbb
mov
arpl
cmp
sbb
xchg
cmp
mov
lock
je
enter
mov
dec
pop
mov
imul
mov
xchg
out
gs
inc
mov
sub
addr16
adc
popa
ja
ret
jge
pop
in
xchg
scas
rcr
lds
mov
mov
lcall
inc
mov
adc
fsubrp
pop
jo
sub
push
stos
xchg
clc
fildl
inc
ficoms
mov
andl
pop
mov
cltd
xor
and
jns
mov
jns
pop
out
jmp
test
inc
inc
stc
je
xlat
pop
test
push
mov
push
jmp
lock
in
xchg
add
insl
movsb
mov
dec
ja
add
mov
outsb
jae
std
icebp
int
aas
and
push
test
aad
ficoms
mov
xchg
stc
aaa
xor
xor
and
sub
je
dec
xor
fs
inc
stos
jae
pop
gs
push
mov
cli
jbe
repz
cmp
jg
xor
mov
inc
pop
xchg
hlt
push
jns
mov
pop
aam
mov
outsl
stos
mov
jno
jge
cwtl
les
and
int3
lahf
rcrb
xchg
addl
xchg
ror
jne
punpcklwd
lds
fwait
sub
int
or
sub
sbb
fwait
mov
and
out
lcall
insb
es
xchg
lcall
lret
mov
mov
fsts
imul
mov
adc
out
add
icebp
mov
fldenv
mov
push
xchg
sbb
fwait
mov
fnstsw
push
sub
aas
jne
dec
jp
or
xchg
stos
lds
dec
sub
enter
jno
push
jmp
fcomps
pop
jl
fcomp
clc
push
test
sub
popa
test
es
iret
cltd
ss
orb
in
jne
stos
push
cmp
fisttpll
or
adc
sbb
mov
xor
mov
xchg
xchg
pop
push
inc
fistps
lcall
popf
cmp
out
enter
subl
xor
loop
lds
dec
xor
jle
add
cmpsb
dec
adcl
fnstsw
and
sbb
sahf
mov
subl
rolb
pushf
aam
xor
fwait
xor
les
mov
pop
pop
ss
in
mov
loopne
int3
mov
std
xchg
add
sbb
lods
or
mov
sahf
out
ffreep
push
sbb
sub
cmp
lea
aaa
outsl
cmp
mov
rclb
xchg
cmpsb
mov
icebp
jle
cmp
and
cmc
fimull
push
mov
inc
mov
aam
les
ret
movsl
push
loopne
stos
out
jb
pop
mov
push
mov
xchg
shlb
pop
pop
push
repnz
aaa
rol
scas
adc
lock
ds
push
mov
jnp
mov
stc
add
sbb
sub
aam
add
cmp
imul
jo
cmp
inc
bnd
bound
inc
push
in
mov
test
addr16
xchg
mov
nop
adc
push
call
idivl
jno
mov
jnp
dec
jl
jbe
orl
pop
dec
daa
jmp
addl
aam
divb
cmp
js
int
stc
push
xchg
out
add
mov
xor
push
int
jl
mov
stc
ljmp
xor
je
jno
jmp
pop
mov
mov
and
cmpsl
or
sbb
jge
sarl
xor
shrl
sbb
leave
push
pop
mov
mov
into
dec
lret
dec
jl
pop
mov
cmp
lret
aaa
popf
es
push
orl
mov
mov
mov
xor
xor
sub
out
add
icebp
xlat
inc
in
add
add
jbe
xchg
testl
sbb
xchg
cmp
sahf
dec
je
imul
cmp
xchg
jno
mov
hlt
jg
cmp
sbb
dec
negl
cmpsl
push
outsl
sahf
cmp
cmp
mov
jnp
gs
shll
cmpl
scas
cmp
stos
add
jecxz
cmpsl
mov
xchg
lea
mov
std
loop
nop
test
xor
pop
sbb
jl
nop
je
xlat
pusha
sahf
push
rclb
leave
loope
rorb
sbb
mov
pop
fisttpll
pusha
xor
incb
and
or
sahf
fdivl
and
outsl
imul
rorb
adc
popf
cmp
insb
into
jle
add
mov
add
fisubs
imul
mov
and
push
xchg
pop
incb
ljmp
push
lds
repnz
push
xor
fstps
sbb
add
adc
cmp
adc
pop
mov
xlat
jmp
push
mov
popa
xchg
push
in
divl
mov
sti
and
mov
jle
add
lods
dec
bound
and
shrl
sti
mov
les
inc
fiadds
sbb
daa
fsubrs
fwait
adc
mov
jp
scas
rcl
mov
push
fs
stos
call
in
push
cmp
pushf
mov
xorb
in
dec
test
fiadds
add
popf
cmp
xchg
rol
and
push
push
xor
ret
andb
adc
add
xor
popa
mov
or
lret
addl
and
enter
lea
adc
repnz
sbb
fs
daa
dec
cmp
mov
arpl
imul
mov
jmp
aad
sbb
lods
dec
vmovd
xchg
inc
sub
fs
mov
cmpsl
jb
data16
sti
pop
fsubrs
xchg
iret
rclb
cmp
into
mov
inc
inc
push
loope
insl
pop
jmp
hlt
pop
pushf
pop
mov
xchg
fstpt
jb
push
pop
push
mov
or
scas
and
jge
insb
jae
or
icebp
xor
push
adc
push
inc
out
xor
pop
push
ds
dec
xor
jne
sub
jp
jnp
cld
mov
cwtl
scas
push
jmp
sub
andl
fisttpl
shrl
repnz
inc
pop
mov
adc
subl
and
cmp
ds
in
subb
xchg
int
xor
fsub
les
adc
in
xchg
mov
dec
js
js
sbb
or
aad
xorb
sub
inc
inc
jae
xchg
iret
jle
into
cli
or
in
cmp
out
inc
fldt
imul
and
xor
inc
sbb
into
stos
cld
jmp
jmp
xchg
and
and
add
mov
push
and
add
sub
jo
clc
cmc
iret
movsl
mov
cmp
mov
shrb
inc
jnp
sub
pop
outsb
mov
dec
pop
pop
fs
inc
mov
test
pop
hlt
mov
or
mov
sahf
add
push
into
out
lods
dec
pushf
cmc
mov
xor
pop
arpl
xor
rol
adc
mov
daa
xor
cli
sahf
ficomps
mov
std
jns
pop
hlt
mov
sub
jno
arpl
lds
pushf
sub
cld
daa
and
mov
push
add
xor
jo
pop
js
sub
pop
push
pop
fwait
or
mov
rclb
adc
pop
inc
movsl
daa
out
lock
sbb
xor
sbb
sub
or
test
push
push
jno
test
fimuls
or
popa
or
int
dec
dec
jne
bswap
dec
hlt
rcll
xor
xor
andb
lea
fdivs
sbb
mov
fisubl
pop
push
add
insb
jbe
xchg
add
outsb
loop
lods
dec
push
pop
imul
ficompl
fldt
aaa
das
xchg
prefetch
xchg
aad
in
daa
mov
push
aas
add
mov
clc
outsb
and
jecxz
lahf
mov
mov
push
mov
clc
lock
sbb
mov
or
cmp
cwtl
xchg
mov
icebp
outsl
cmp
add
adc
imul
mov
loop
mov
adc
jne
mov
inc
and
mov
push
xchg
dec
or
lahf
fwait
in
test
ss
mov
and
sar
mov
dec
or
push
jp
push
cmp
pop
cmp
inc
test
sbb
popa
adc
aam
inc
loope
filds
bnd
xor
movsl
xor
mov
loope
or
add
pusha
mov
jo
ja
push
popf
lea
xchg
add
aam
mov
outsb
inc
ret
lret
iret
es
xor
std
jnp
shlb
movsl
cmp
es
push
scas
addr16
mov
std
jg
test
fisubs
cmp
aas
xchg
inc
jo
adc
clc
inc
xchg
ret
and
cmpsl
jnp
test
adc
rolb
push
int
fistpl
leave
cli
lods
enter
shll
mov
and
mov
cmp
jmp
pop
shll
jae
mov
outsl
stc
push
ror
insb
cmc
jle
icebp
pop
nop
pop
xchg
adc
sub
cmp
daa
xchg
and
in
and
xchg
clc
mov
ja
aas
je
ljmp
push
loop
xor
jmp
rolb
cs
and
aad
mov
mov
mov
jge
fildl
jne
pushf
jb
cmp
ss
jg
mov
jecxz
jns
bound
lcall
icebp
adc
mov
inc
call
mov
stos
mov
test
mov
ret
test
push
dec
jne
nop
fmul
dec
stc
arpl
xchg
add
lods
stos
insl
ds
jle
mov
mov
mov
mov
je
cmp
clc
mov
add
enter
xchg
enter
aaa
popfw
arpl
cmp
data16
mov
or
je
inc
sti
popf
fs
xor
adc
inc
mov
lcall
sbb
cmp
hlt
xor
inc
arpl
imull
mov
xchg
fidivs
xor
pop
jle
mov
pop
rcrb
enter
push
sbb
sahf
xor
and
push
push
loop
adc
out
and
mov
mov
lods
xchg
addb
jbe
insl
in
mov
or
icebp
fs
xor
push
pop
sub
in
bound
shl
inc
cmp
mov
jae
push
data16
mov
mov
push
es
sub
mov
lock
pop
and
push
cmc
out
and
push
fadds
sbb
fsubl
sahf
ja
push
out
ljmp
loopne
jno
in
data16
or
in
mov
inc
test
icebp
pop
mov
pop
shll
movsl
les
cwtl
in
lea
jecxz
sub
adc
jno
cli
sti
cmpsb
adc
mov
sbbb
sarl
cld
push
cmp
or
lods
or
adc
mov
nop
notb
out
movsb
loopne
sbbl
dec
inc
mov
jmp
push
or
call
inc
xor
lods
ljmp
js
xchg
and
mov
pusha
nop
push
sub
lods
rcrb
xchg
jo
subl
rcll
test
data16
push
mov
xor
stc
mov
pop
dec
popf
call
lea
or
push
cmp
mov
sub
jns
loope
jle
push
pop
xor
or
or
sbb
sbb
pop
outsb
aad
js
fisubrl
jne
cmp
lds
sahf
mov
xadd
lret
aas
mov
sbb
popa
or
out
sti
mov
add
test
mov
dec
mov
cmpsl
stos
mov
sbb
jns
adc
mov
shl
xchg
iret
addl
xchg
sti
adc
dec
ror
ret
loopne
testl
and
mov
ret
out
faddl
dec
dec
pop
scas
xor
cmp
jns
jle
in
pop
popa
rclb
xchg
stc
aas
mov
inc
pop
jp
lret
int
push
cld
sub
shlb
add
out
aad
fcompl
mov
daa
mov
mov
ljmp
sbb
ja
inc
shll
ds
xchg
adc
push
adc
mov
mov
mov
jecxz
in
dec
mov
fisubrs
mov
shlb
pop
mov
popf
sti
push
fnsave
xor
push
xor
cwtl
iret
popf
cld
push
shr
into
jle
jecxz
sub
cmp
outsl
pop
popf
loopne
inc
pop
adc
add
insb
aam
or
ds
icebp
dec
pop
mov
xchg
pop
pop
xchg
out
movsl
andb
pushf
stos
bound
push
cltd
movb
add
scas
cmc
dec
les
or
jno
cld
pop
jnp
sbb
ja
cli
dec
pusha
inc
and
inc
mov
sub
mov
pop
movsl
jb
mov
push
xor
xchg
cld
mov
jne
xchg
jl
mov
pop
xchg
jns
decb
dec
leave
test
call
pop
add
aaa
xchg
sti
shlb
or
inc
inc
xchg
dec
out
loope
adc
movsb
lods
sti
sbb
sbb
insl
xchg
push
mov
push
or
mov
cmpsb
dec
lods
jo
push
adc
loop
cmp
test
cs
into
aaa
std
mov
push
ja
lret
sbb
add
adc
jbe
outsb
mov
test
xchg
sub
add
sbb
out
leave
pop
mov
push
sbb
pop
sbb
jl
pop
add
cmp
mov
cmp
popf
jne
and
int
dec
hlt
xor
xchg
cmc
add
sub
pusha
jmp
xchg
outsl
jo
pusha
adc
ret
icebp
push
or
cmp
or
jle
arpl
stos
sbb
mov
loope
or
mov
pop
xchg
dec
or
ret
je
xlat
cmp
or
jmp
ret
push
dec
sub
or
pop
jb
outsl
roll
arpl
ljmp
jle
mov
or
sub
xchg
cwtl
mov
movl
gs
inc
adc
scas
mov
mov
aad
pop
cli
mov
es
in
test
dec
mov
iret
js
hlt
mov
inc
fidivrl
test
rorb
js
loopne
ffreep
lret
aaa
sbb
roll
into
test
icebp
push
sarb
inc
or
outsb
cwtl
lea
addr16
jnp
cld
pop
sub
mov
cmp
add
subl
and
pop
inc
and
movsb
mov
insb
sub
call
push
loope
in
and
mov
into
lcall
cmpl
cltd
sbb
jmp
pop
ds
sbb
inc
mov
pop
sub
test
push
push
aam
ficoms
or
insb
pop
jp
sahf
fsubr
push
and
push
repz
mov
fsincos
add
jmp
push
inc
subl
lds
xorb
push
imul
enter
dec
ljmp
jns
int
mov
jb
push
cmpsb
dec
cmc
inc
xchg
sbb
jno
push
and
mov
sbb
pusha
shll
adc
cli
and
sbb
dec
sbb
icebp
pushf
cmovnp
mov
inc
in
mov
in
push
mov
mov
arpl
negl
sbb
imul
or
sbb
jmp
mov
or
xchg
decb
jo
dec
lods
pusha
fstpt
pop
push
jb
stos
int
jp
mov
setle
sub
stos
imul
outsl
testb
stos
sub
mov
inc
movsl
mov
fstpt
mov
mov
jae
cmp
lret
jbe
aaa
push
add
and
adc
fnstsw
push
add
cmpsl
mov
mov
or
test
shll
mov
sbb
rol
xor
das
dec
push
jp
jl
pop
jnp
in
cmpb
flds
lcall
ss
adc
lcall
xchg
fiadds
or
cli
or
jae
lret
jb
sub
add
mov
sar
sti
push
out
xor
jg
sub
and
inc
loope
lret
jmp
push
ds
jg
insl
rorb
ror
adc
xchg
xchg
pusha
test
cmp
jmp
sbb
push
cmp
push
xchg
cmpsb
aas
jge
and
cli
movsl
lods
inc
lea
cmp
pop
push
pop
sub
add
xchg
xlat
xchg
dec
push
mov
out
sub
gs
xlat
in
cmp
fstpl
jl
mov
cs
mov
jmp
pop
jns
mov
fwait
or
mov
jp
jge
mov
fmuls
frstor
nop
out
into
mov
test
ret
movsl
mov
sub
cmp
rclb
movsb
in
ja
rorb
loope
cmp
cmovb
cmp
ret
nop
sbb
push
orl
insb
pushw
push
dec
jmp
daa
icebp
xor
sub
cmp
mov
loop
mov
or
cmp
pop
aas
lret
xor
les
sbb
aas
rolb
adc
sbbb
je
add
xor
pop
mov
outsb
push
test
jbe
cld
int
outsl
test
sub
jge
daa
aaa
sti
push
andb
mov
rorb
pop
pop
xor
add
enter
int
sarl
xchg
jbe
addr16
add
jmp
hlt
fs
aam
mov
stos
mov
jg
repz
shrb
call
pop
xchg
push
fs
mov
sbb
cmc
dec
jb
add
in
lock
cld
adcb
jge
inc
imul
stos
imul
fs
fmull
jae
mov
pop
in
mov
das
ja
pusha
inc
testb
adc
and
shll
adc
aaa
dec
addb
dec
xchg
out
fsubr
loopne
mov
enter
sti
mov
loope
int
xchg
xchg
push
into
dec
jmp
push
and
mov
enter
pop
push
and
mov
in
mov
sti
cmp
sub
jae
push
pop
cmp
std
popf
pop
dec
negl
push
stos
stc
adc
out
inc
insl
and
pusha
xor
popf
das
cmp
or
cwtl
add
daa
or
mov
int
testl
in
or
icebp
xchg
xor
push
fucompp
lret
lea
sub
dec
cmpsl
mov
jecxz
cli
and
sbb
mov
xor
popa
push
cmp
mov
fistl
mov
mov
jl
jl
xor
rorl
lret
in
dec
push
aam
ret
pop
ljmp
std
xor
ja
xchg
cwtl
pop
jmp
stos
dec
mov
hlt
pop
stos
out
imul
add
sub
loopne
es
cmp
and
stc
mov
test
cwtl
int
xchg
adc
jg
shll
out
jo
rcll
jl
cmp
cmpsl
or
jl
ss
out
mov
cmp
push
lds
insl
mov
sbb
pop
repz
cli
adc
lods
ret
push
xor
mov
mov
inc
mov
int
out
lret
mov
lods
into
scas
leave
xchg
lret
fisttps
lret
and
mov
xchg
mov
jae
das
jl
push
inc
bnd
xor
out
or
loope
lahf
or
push
pusha
mov
push
push
or
clc
cmp
inc
fwait
ds
xchg
pop
push
out
mov
jmp
xor
sbb
dec
adc
adc
mov
cmp
out
cwtl
mov
out
sbb
in
xchg
popf
mov
mov
push
add
out
insl
int
and
outsb
cmp
adc
jg
lret
jae
jne
jne
xchg
adc
outsb
xor
mov
fnsave
scas
cld
jb
nop
xor
orb
xchg
dec
jl
daa
lods
andl
cmpsl
lahf
gs
dec
or
lock
test
das
lods
cmc
movsb
addb
icebp
call
ret
ret
dec
xchg
les
je
mov
int3
ja
xchg
xor
pusha
fdivl
and
enter
test
jns
pop
mov
dec
shll
add
js
cs
jns
out
out
and
lahf
out
inc
dec
ss
cld
sub
push
ret
xchg
jg
jo
shll
repnz
inc
pop
xchg
aam
sub
push
shll
dec
push
cmp
xchg
cmp
cmpsb
out
mov
cltd
sub
lds
fstpt
xchg
lock
add
mov
rclb
out
pop
test
xor
pop
lret
pop
jmp
ret
xor
and
pop
lret
mov
cs
jl
jbe
int
jbe
push
lret
pop
push
jnp
lea
lock
mov
enter
push
out
mov
sub
dec
movsb
jbe
test
jo
lds
xchg
addb
cltd
mov
add
push
xchg
in
std
and
aad
mov
inc
movsb
sub
sbb
and
sbb
outsb
add
es
jge
jnp
or
xor
xchg
mov
frstor
and
dec
scas
psubq
mov
scas
out
dec
mov
in
pusha
and
nop
orb
popa
andl
adc
test
pop
mov
rolb
xor
jnp
sub
jne
adc
ss
decb
cmc
push
cmp
call
add
push
inc
xchg
out
pop
adc
sbb
mov
mov
pop
hlt
xchg
fucom
add
mov
adc
clc
push
lret
add
out
cmc
addl
sbb
cs
arpl
sub
int
pop
test
push
idiv
cmp
add
push
mov
shl
inc
xor
dec
cmp
sbb
xlat
jno
fnsave
xchg
je
inc
mov
push
push
adc
xchg
adc
stc
mov
push
fists
loope
adc
arpl
int
test
pop
push
rolb
rcll
insl
pop
stos
mov
push
pop
shl
mov
call
movsb
fwait
fistpl
cli
daa
addb
inc
popf
addb
xchg
lret
shrb
shr
cmpsb
jae
pop
test
ljmp
btr
in
mov
in
jmp
dec
mov
pop
cwtl
ss
cli
cmp
xchg
mov
jmp
add
mov
test
frstor
test
cltd
bound
add
das
lods
pop
pop
jns
mov
pop
mov
js
stos
xchg
es
loopne
lods
daa
pop
fdivrs
movsb
cmp
ds
test
jle
mov
or
push
movsb
ret
mov
faddp
and
mov
sub
jmp
je
xchg
pop
jbe
jns
mov
lock
add
pop
and
dec
mov
mov
rcr
daa
out
out
dec
in
or
data16
dec
cmp
addr16
pop
es
lods
pop
sbb
mov
cmpsb
shl
mov
xchg
out
jecxz
enter
xchg
lret
fistl
sub
test
mov
int3
rclb
out
pop
mov
lret
fmul
lods
dec
int
lcall
xlat
and
addr16
sub
add
test
into
pop
mov
sub
jae
loope
mov
gs
nop
lea
test
sub
mov
mov
outsb
cmpl
mov
stos
lcall
dec
sub
test
in
repnz
addr16
ds
fucom
mov
pusha
lock
sbb
push
leave
lret
dec
cmp
cmp
popf
shlb
loopne
iret
popf
mov
out
lods
fs
xlat
in
popf
inc
xchg
clc
jge
jmp
dec
dec
lret
and
out
ficoml
test
loopne
mov
aad
mov
xchg
cmp
loope
lea
inc
mov
mov
sahf
pop
push
gs
inc
cmp
or
inc
mov
sub
mov
fdivrs
mov
mov
rorl
add
cmpsb
jg
fnstenv
dec
stos
pop
mov
inc
xchg
enter
cmpsl
imul
inc
push
test
ret
dec
dec
andb
pop
cld
mov
sbb
rcrb
fcoms
xchg
ret
loopne
add
rclb
mov
hlt
cmp
mov
xchg
mov
dec
stos
or
testl
fidivrs
lods
add
mov
cmovbe
or
lcall
idiv
ja
test
or
ds
dec
imul
ret
sbb
cltd
xchg
mov
stc
sub
fnstcw
push
mov
dec
out
mov
cmpps
aaa
and
je
sahf
mov
xor
xchg
insl
loopne
arpl
test
cs
sti
mov
test
pop
cmpsl
and
in
lret
rcrb
xor
loope
clc
and
mov
add
cltd
pop
out
pusha
push
aad
push
mov
jl
mov
mov
add
nop
pop
aam
pushf
sub
push
insb
test
jge
dec
cwtl
xor
inc
jne
iret
sbb
into
jmp
pop
cmc
mov
imulb
inc
fwait
addr16
movsl
call
insl
and
xor
fwait
outsl
test
xchg
call
push
xor
fwait
xor
ret
ret
mov
test
inc
shll
inc
adc
mov
jl
cmc
sub
in
pushf
dec
sbb
cltd
imul
insb
hlt
fscale
into
sbb
popf
push
adcb
pushf
or
mov
xor
push
jmp
test
add
out
or
pusha
adc
lcall
pushf
cli
jl
lock
jecxz
test
cmp
aad
mov
std
sub
stc
leave
pop
sub
fistpl
stc
sub
jne
iret
or
sub
aad
xchg
add
pop
test
push
les
inc
xchg
loope
sbb
in
subl
push
xchg
jl
push
xor
add
jp
add
jo
int3
xorb
add
mov
lods
loop
mov
rcrl
out
lahf
jns
dec
ss
into
sbb
mov
dec
sarl
dec
mov
cmp
lods
jl
test
test
test
scas
iret
jmp
mov
and
cmc
xor
lods
mov
rcr
dec
mov
mov
cmp
movsl
lods
repnz
int
add
imul
inc
test
ret
popa
push
insl
or
xchg
or
out
negb
sarb
pop
das
pushf
jbe
test
clc
fildl
fmull
jg
xchg
andb
rorl
cmc
sbb
pushf
mov
lcall
mov
imul
pop
sar
stos
cmp
daa
lock
cs
adc
xlat
adc
mov
jb
rclb
dec
xor
in
fmuls
iret
stc
and
jp
in
or
jo
and
loopne
nopl
stos
js
and
jbe
data16
test
negl
push
gs
mov
insb
lcall
pop
jmp
lock
mov
loope
lea
mov
out
pushf
loopne
inc
loop
pusha
xchg
lret
leave
dec
lods
clc
hlt
push
pop
fldcw
xor
sub
push
insb
xchg
je
pop
int3
addb
sub
outsl
rorb
mov
sbb
addb
adc
mull
fbld
aas
adc
mov
cmp
dec
out
flds
mov
xor
ror
aas
daa
cmp
stos
daa
jne
xchg
push
adc
add
sbb
out
and
movl
inc
sub
jo
cmp
lret
mov
in
mov
cmc
jmp
mov
jae
popa
scas
adc
pop
js
jl
and
mov
popa
and
test
mov
outsb
xchg
mov
add
sbb
cmpsl
lret
shlb
mov
push
test
mov
mov
and
adc
mov
and
test
test
push
jne
mov
in
push
jae
pop
lahf
adc
adc
icebp
push
adc
into
cmpl
add
lahf
fidivrs
imul
jnp
test
cwtl
sub
fisttps
fisttpl
cmp
cmp
test
movsl
test
push
push
lds
add
jle
ss
outsb
dec
cltd
mov
enter
mov
sub
shl
push
jecxz
sub
in
movsb
jecxz
sbbl
xchg
dec
fprem
fldl
push
inc
add
jge
clc
std
mov
repnz
xchg
cmc
or
add
xchg
add
vmaxps
push
into
stos
xchg
stos
adc
lret
adc
mov
lds
inc
sarl
xchg
bound
sarb
sub
subl
cmp
lret
rcrb
cli
pop
mov
pop
cmp
cs
lcall
jb
mov
and
xchg
fisttpl
fst
out
mov
jle
dec
sbb
jmp
push
cmp
add
shrl
xchg
adc
ss
lock
xchg
xchg
les
out
shrl
mov
pushf
rolb
insb
cmp
pusha
mov
xor
mov
xlat
aam
out
xchg
jecxz,pt
cmpsb
leave
aaa
push
and
push
aaa
aas
cltd
pop
adc
jg
mov
lock
mov
loopne
scas
cmpsb
mov
insb
and
out
movsl
in
in
mov
or
and
jne
sub
mov
mov
in
push
rol
push
out
cwtl
mov
dec
sbb
push
ja
dec
out
in
bound
ja
repnz
inc
cmp
stc
sub
gs
pop
push
cwtl
out
and
mov
outsb
aaa
and
hlt
iret
cmpl
sbb
cld
and
mov
and
mov
lea
add
pop
and
bound
dec
xor
fdivrl
inc
xor
jge
js
cmpsb
cmpsl
dec
inc
push
jns
jl
addl
jnp
clc
jns
daa
pop
arpl
dec
loopne
jo
ljmp
mov
sub
aaa
test
faddl
pop
int
adc
mov
cmp
push
pop
adc
xor
push
outsl
loop
mov
gs
pop
pop
or
sbb
cmp
sbb
lahf
loop
out
mov
dec
mov
stc
jg
aaa
push
ds
lods
cmc
mov
es
mov
out
push
add
in
sub
dec
or
testb
imul
jg
punpcklbw
dec
lea
lock
cmp
mov
lcall
adc
xchg
xorb
pop
jg
cmp
mov
xor
jmp
cld
adc
pop
test
cli
lea
das
add
lock
andb
adc
cld
or
or
out
shll
hlt
dec
cmp
pop
call
push
xchg
jl
gs
loop
es
inc
add
mov
xor
inc
xchg
mov
add
xchg
dec
outsb
sbb
aam
out
lods
inc
add
cli
out
sbb
xchg
rcll
or
dec
cltd
pop
aad
mov
je
adc
imulb
mov
test
les
mov
popa
or
insb
or
ss
ret
mov
xchg
xchg
ja
loop
jnp
inc
xor
xchg
dec
add
or
and
repnz
cltd
iret
popa
addr16
sub
repnz
test
int3
dec
push
mov
in
aam
ja
jp
fidivl
dec
xor
cmpsl
stos
inc
out
sbb
mov
sarb
add
xor
jbe
jnp
xor
in
pop
xacquire
sbb
sti
and
sub
adc
dec
xor
in
test
mov
or
jne
mov
pop
mov
ficompl
jnp
inc
xchg
cmpsl
dec
pop
bound
fidivl
xchg
jmp
sub
inc
xchg
fistps
jae
mov
shl
mov
mov
or
aas
push
xlat
push
pop
ret
jne
and
dec
jbe
sub
daa
das
movsl
jno
lock
and
xchg
xchg
enter
dec
shl
addr16
xchg
xor
imul
mov
ljmp
nop
push
int3
dec
jg
cmp
out
push
mov
mull
call
hlt
add
imul
outsb
sub
xchg
mov
ss
and
sbb
inc
cmc
jle
daa
add
mov
inc
jmp
ucomiss
ret
mov
jg
and
jno
push
rclb
adc
mov
cs
lods
test
jo
sbb
push
sub
in
sarl
sti
int3
push
ds
fs
inc
nop
adc
popa
cmp
rcr
push
push
pop
shlb
ja
test
test
pushf
lcall
icebp
sbb
inc
and
mov
clc
inc
mov
mov
jo
popl
ret
insl
lds
sbb
lea
addr16
mov
outsb
mov
test
lret
clc
mov
cmp
dec
dec
push
jle
mov
ret
mov
cmpsb
mov
jae
daa
jno
orb
sub
inc
mov
insb
int
lea
fcompl
jle
mov
push
fists
lcall
rcl
xchg
bound
jo
mov
data16
fcompl
xor
lds
adc
add
adc
imul
mov
inc
xor
scas
hlt
mov
scas
xchg
dec
sbb
lahf
adc
cmp
jg
orb
cmpsb
out
xchg
enter
jb
sub
jbe
mov
sub
mov
mov
cmp
lds
push
mov
loope
and
mov
ret
mov
jnp
or
cltd
mov
dec
xchg
push
mov
into
xor
xor
jle
jae
add
pop
cmp
test
iret
adc
roll
xor
pop
sbb
pop
mov
clc
sub
loopne
mov
insb
push
xor
popa
gs
xor
xorl
xlat
cmc
or
inc
out
fsub
dec
jmp
cwtl
push
jle
out
lcall
stos
xchg
jmp
pop
stos
test
pop
out
pop
sbb
loope
movsl
pusha
mov
lahf
and
popf
sbb
sbb
aam
jmp
mov
mov
sarb
jb
pop
dec
cmp
push
pop
mov
outsb
addr16
stc
inc
and
jp
jae
mov
outsb
sub
rclb
pop
test
jno
cmpsl
loopew
cli
or
xchg
sbb
rcr
dec
ss
adcl
roll
adc
xchg
in
outsb
scas
dec
aaa
sbb
scas
cmpsl
dec
ss
xchg
push
mov
add
cmp
add
or
insb
enter
add
rorb
jge
test
outsb
jno
aaa
pushf
imul
les
jle
outsl
ret
fistpll
sti
cmp
jmp
or
ds
pop
xchg
and
add
dec
stos
into
int
xor
push
xchg
movsb
jbe
mov
add
fstp
mov
xor
in
clc
outsl
pop
xchg
mov
std
in
mov
pop
dec
loop
xchg
sahf
lods
adc
adc
ret
jae
adc
stc
insb
scas
lods
icebp
in
bound
jp
and
fmulp
jecxz
ja
cmc
out
sbb
mov
dec
fldln2
js
lret
mov
gs
lret
pushf
jg
daa
push
lahf
add
pop
mov
or
cmpsb
inc
stos
and
mov
jo
jmp
jne
mov
adc
sbb
push
repz
pusha
movsb
je
jnp
shll
add
fnstenv
add
addr16
dec
push
loopne
out
test
test
push
repnz
fistpll
or
push
jmp
push
orb
pop
addr16
or
xor
sub
jne
loope
mov
int
repnz
repz
push
push
lret
sub
aam
cltd
jge
ljmp
test
fisttpl
repnz
jmp
mov
dec
fidivs
stos
dec
ret
mov
jo
rolb
adc
jle
mov
mov
lret
lcall
push
mov
xchg
rclb
test
sub
cltd
sub
fsubp
xchg
aad
inc
addl
cmp
lods
fs
pop
cmp
xchg
dec
addl
push
scas
and
dec
outsl
xchg
cmp
jnp
sbb
push
jo
fldenv
jae
push
clc
pop
mov
sbb
imul
jae
idivl
repz
sbb
les
in
ret
pop
into
cmp
fisubrs
cld
dec
or
jb
adc
xchg
and
das
js
push
outsb
fbld
xchg
lcall
in
loope
fnstsw
sub
sbb
popf
dec
pop
pop
jl
mov
push
sahf
mov
add
mov
aas
push
jle
data16
rcrb
xor
mov
ds
cmpl
mov
int3
lret
jae
cli
outsb
inc
jl
loope
mov
test
inc
lds
scas
xchg
jno
lock
mov
jbe
add
mov
inc
popf
sbb
fld
sbb
adc
jmp
cmp
sub
outsl
rolb
mov
mov
test
adc
or
or
dec
pop
dec
jmp
inc
sti
sub
ss
ja
aam
mov
shrl
and
jno
dec
jle
in
sub
in
sub
mov
or
mov
enter
add
xor
mov
mov
in
orb
cltd
adc
sub
xchg
mov
push
in
xlat
adc
arpl
call
je
jl
xlat
sti
cltd
mov
clc
cmpsb
out
jnp
and
mov
dec
out
clc
or
jns
rcll
push
hlt
push
jnp
inc
xor
sarl
mov
xchg
sbb
int3
sbb
or
fimuls
sahf
scas
push
lahf
pop
fcomps
jp
mov
dec
push
fucomi
cmp
mov
push
push
inc
lods
out
idivl
sbb
or
call
inc
test
jbe
and
mov
icebp
push
xchg
push
lods
push
cld
in
cmp
or
adc
rorl
jne
rorb
pop
cmp
mov
sbb
mov
jl
jmp
test
adc
mov
and
push
pop
push
adc
lret
add
leave
jo
sahf
cmpsb
lret
inc
dec
addb
aaa
xchg
dec
mov
leave
mov
flds
or
inc
dec
movsl
imull
stos
push
cmp
shlb
sub
cld
inc
fsubrs
lods
push
hlt
push
or
test
dec
push
or
les
lcall
and
xorps
jns
leave
xchg
xor
inc
sti
pop
cmpsl
outsb
pop
add
jecxz
lahf
test
jns
xchg
cmpsl
adc
js
add
jle
mov
in
mov
mov
repz
jge
out
fcoms
pop
clc
fndisi(8087
pop
aaa
xor
or
movsl
ficomps
fisttpll
mov
or
adc
fwait
xor
and
pop
or
sbb
sar
out
add
pop
fnstenv
je
jns
in
data16
xor
sub
sbb
das
pusha
les
fs
sbb
mov
sub
and
lods
adc
insb
cmc
cmp
cld
ret
scas
movl
out
or
lret
dec
dec
call
or
mov
ja
out
pop
jl
test
or
lods
inc
xlat
clc
in
mov
mov
xchg
or
mov
mov
fbld
js
inc
xchg
into
cmpl
test
pop
push
xchg
pop
jb
inc
jecxz
mov
insl
xorb
mov
inc
loope
pop
push
fimull
or
push
add
fisttps
sahf
mov
and
xorb
sub
mov
in
push
jl
repnz
sbb
add
lret
mov
ja
sahf
aad
mov
sbb
xchg
repz
shll
ds
dec
jle
adc
inc
sti
add
mov
mov
stos
mov
cmp
inc
ljmp
sub
loope
mov
cmp
data16
loopne
lea
push
nop
mov
es
sub
ja
sbb
jb
push
arpl
stc
inc
jnp
jnp
pop
mov
mov
mov
jne
push
add
xor
fisttps
mov
ret
fpatan
mov
fbld
sbb
adc
push
dec
dec
mov
lock
inc
inc
mov
test
jo
adc
cmpsb
adc
frstor
xor
jl
mov
movsl
or
and
cmp
mov
into
jge
sub
xchg
imul
dec
push
add
ljmp
push
cltd
lahf
push
jno
and
add
das
mov
mov
pop
es
cmp
in
mov
push
and
subl
clc
mov
mov
frndint
je
mov
pop
mov
or
xor
test
in
or
enter
mov
repnz
out
jno
jae
js
pop
repnz
jmp
shll
dec
sbb
incb
or
sub
dec
push
cmc
pop
mov
in
shrb
inc
xlat
out
dec
xchg
inc
jl
cmp
inc
or
fwait
jmp
call
mov
std
and
cmp
dec
lret
push
lock
and
mov
mov
mov
cld
jno
pop
sbb
xchg
push
prefetchnta
out
mov
fdivr
test
dec
cld
jns
push
dec
les
bound
ja
xor
jnp
pop
aam
mov
mov
sub
es
jno
pop
push
jecxz
leave
inc
sub
sub
test
lods
test
mov
mov
insl
mov
cmp
movl
mov
int
popf
adc
fs
je
and
sub
je
sti
mov
or
out
jo
dec
test
adc
test
les
mov
xchg
jno
sti
xor
and
leave
pop
pop
jb
sub
loop
stos
int3
xor
loop
mov
dec
pushf
jno
and
push
adc
add
sbb
sub
aad
aas
xor
mov
aaa
or
push
inc
jb
push
xchg
push
dec
aad
mov
jge
outsb
pop
pop
lea
and
add
push
sbb
out
pop
push
dec
mov
add
pop
dec
inc
adc
add
sub
sbb
mov
mov
add
rcl
mov
scas
stc
mov
dec
outsb
je
scas
mov
push
jmp
pop
hlt
aam
aas
enter
pop
mov
sbb
mov
adc
sbb
daa
or
rcrb
clc
pop
cwtl
test
outsl
fisttpll
imul
imull
dec
or
mov
loop
cwtl
mov
daa
mov
jbe
loope
pop
pop
add
test
std
cmp
inc
mov
sbb
out
rcr
mov
imul
shld
mov
xor
mov
mov
std
xchg
outsl
fdivrl
push
rcr
lcall
stos
mov
lods
pop
test
mov
std
jecxz
rorb
mov
pushf
lret
push
movsb
jge
mov
dec
mov
adc
push
addr16
leave
dec
adc
arpl
inc
addr16
jnp
or
shlb
ja
jle
jle
stc
xor
mov
into
dec
xorl
imul
dec
inc
sub
mov
rclb
mov
insl
push
jp
repnz
jae
dec
addr16
lods
popa
loopne
test
in
out
mulb
roll
or
jns
adc
mov
shrb
sbb
lock
lods
repnz
ljmp
adc
inc
hlt
scas
jbe
mov
inc
repnz
sbb
xlat
and
pop
int
jae
inc
and
and
test
xor
adc
cmpsl
xor
ret
les
dec
xor
mov
mov
out
jne
jns
dec
add
sub
jp
sti
cmpsb
outsb
gs
inc
cwtl
mov
call
or
mov
dec
out
test
xchg
pop
arpl
sbb
into
push
enter
rclb
xchg
fadds
dec
adc
push
fwait
xchg
aaa
add
popf
hlt
fucomp
lret
into
sub
pop
stos
fs
shll
xlat
scas
pushf
cwtl
sub
scas
inc
and
stc
out
and
cmc
lock
inc
mov
lds
jns
daa
ja
xor
sub
jmp
lods
push
and
pop
fsts
incl
fnstenv
pop
jno
xchg
popf
inc
mov
xor
xor
out
inc
loope
dec
cmp
push
daa
push
test
dec
sti
push
or
in
mov
and
xchg
lods
pop
sub
loopne
lea
scas
and
negl
ja
loopne
test
sbb
rcll
ret
inc
push
cmp
push
or
inc
repz
test
les
ret
pop
sub
and
mov
sbb
mov
jge
imul
loopne
and
mov
jmp
insb
sub
inc
add
rcll
inc
jg
sub
out
sbb
push
aaa
cwtl
sub
pop
push
pop
push
mov
mov
js
or
leave
out
std
push
xlat
add
out
adc
rcrb
pop
std
lea
and
dec
push
adc
nop
test
mov
fs
into
test
push
ret
add
popf
enter
fiadds
arpl
mov
mov
ret
imul
add
jl
mov
enter
and
imul
testb
jb
add
lock
jecxz
push
hlt
aaa
out
dec
testb
or
cltd
stos
test
out
and
cmpsl
sub
out
mov
pop
imul
fildll
sbb
aaa
scas
sbb
fs
mov
pop
sbb
vcvtpd2dqy
cmp
inc
aad
inc
sub
mov
jl
and
mov
jns
mov
sbb
in
and
int
push
xchg
cmpsl
test
and
adc
lods
dec
pop
cld
sar
add
or
movsl
dec
add
shrl
pop
or
nop
cmp
orb
fucom
inc
lcall
sbb
pop
neg
cli
cwtl
lahf
mov
sub
push
fcomi
lods
xor
imul
mov
sti
xlat
or
mov
cmp
xchg
inc
xor
and
xchg
sbb
xchg
mov
sub
mov
mov
cmp
lahf
mov
dec
decl
add
fidivl
lods
fstps
lret
cwtl
frstor
inc
rorb
addr16
in
xor
mov
sti
xchg
fcompl
outsb
and
jnp
bound
in
outsb
dec
cmpsl
sub
xor
cmc
xchg
repnz
aad
icebp
cltd
int
ja
inc
jge
pop
leave
jg
push
add
stos
in
out
dec
cwtl
xor
test
mov
dec
arpl
adc
lcall
lret
pop
pushf
dec
push
outsb
insl
movsb
xchg
push
xchg
jb
xchg
add
cltd
ficompl
inc
fisttpl
jle
dec
pop
call
xchg
mov
xchg
cmp
lcall
push
jmp
mov
fimuls
insl
mov
mov
mov
mov
and
or
fsubr
mov
test
mov
cmpsb
mov
mov
test
adc
sbb
loope
xor
outsb
push
int3
repnz
xchg
arpl
in
movsb
insb
popf
inc
or
push
dec
dec
inc
imul
push
push
lret
jbe
xchg
sbb
aad
test
aaa
sub
xchg
std
je
sti
and
loope
and
mov
ret
loope
jbe
scas
sbb
inc
xchg
or
ret
ss
xor
adc
ss
mov
push
lret
gs
gs
outsb
icebp
jbe
mov
push
clc
pop
es
aas
pop
pop
pop
popa
dec
dec
jns
jnp
movsl
xchg
ljmp
jno
ds
and
dec
pop
scas
xor
adc
addr16
xor
movsb
int
pop
icebp
inc
daa
imul
xor
cmp
jmp
hlt
push
mull
pop
pop
popa
bound
mov
cmc
movb
cmc
out
jns
lahf
push
mov
aaa
pop
xor
stos
je
inc
fwait
dec
in
mov
dec
pop
cmp
mov
and
and
orb
and
dec
or
fsub
inc
jno
roll
pop
shlb
fdivrp
adc
xor
orb
sub
or
xor
notl
add
repz
mov
inc
imul
fsts
es
cld
dec
stos
inc
pop
in
aas
movsl
mov
or
negb
xchg
movzwl
sbb
push
and
xchg
xor
clc
aaa
shr
mov
outsb
call
and
cmp
je
fcmovnb
stos
pop
cmc
inc
stc
inc
movsl
enter
test
test
frndint
mov
sbb
lods
ret
jb
in
aas
cmp
js
lods
jne
push
sub
dec
mov
jmp
push
cmp
int3
sahf
mov
mov
pusha
xchg
mov
lcall
sbb
sub
mov
sbbb
mov
out
mov
out
xor
xchg
mov
xchg
scas
and
aad
inc
push
jne
rorb
xchg
push
bound
repz
push
js
les
repnz
and
add
or
lahf
or
sub
inc
loopne
and
xchg
ds
sar
mov
mov
lcall
ds
scas
call
pop
insl
out
es
mov
cmp
cmp
xchg
fsubrs
mov
aas
loopne
pop
inc
mov
ret
lret
jo
mov
and
sub
mov
mov
iret
sbbb
pop
sub
jo
arpl
bound
pop
adc
sub
cmp
lods
sbb
cmc
push
ffreep
in
loope
cld
sub
aam
sbb
mov
mov
scas
insb
ljmp
call
ds
mov
scas
sbb
ds
pushl
aaa
lock
scas
cmp
inc
jns
jo
xchg
test
xor
in
movb
add
in
in
xor
aad
push
inc
js
jecxz
faddl
sub
jbe
mov
cltd
loope
icebp
cltd
cmp
xor
popf
nop
sti
daa
bound
pusha
pop
sbb
jmp
xchg
sbb
inc
lret
or
add
decl
pop
mov
cmp
fcmovb
lret
push
push
sbbb
bound
adc
adc
loope
leave
lods
aam
xor
arpl
rclb
add
dec
jbe
mov
lret
ret
lock
lcall
mov
pushf
jl
jle
push
imul
out
lahf
movb
push
mov
out
and
addl
mov
adc
mov
cmp
inc
cld
hlt
jmp
rcr
jle
pop
and
mov
sub
test
jbe
mov
jno
roll
sub
mov
inc
pop
mov
stc
mov
dec
push
iret
mulb
je
cmp
ljmp
sar
iret
cmp
mov
in
xchg
adc
mov
push
mov
enter
pushf
fsubl
mov
into
lods
dec
inc
incl
cli
decl
cmp
fldt
jns
aaa
imul
inc
lcall
imul
sbb
clc
and
sbb
xor
daa
push
aam
push
insb
lahf
mov
lret
inc
lods
rcrb
mov
lods
jne
add
push
add
pusha
mov
sbb
mov
or
fs
adcl
mov
pop
adcb
sbb
mov
sub
or
std
std
xchg
jb
pop
arpl
stos
cmp
shr
sub
je
sbb
push
jp
pop
arpl
mov
mov
sbb
lock
clc
mov
pop
inc
inc
aaa
dec
gs
jo
cmp
out
scas
daa
cmp
cmp
or
lock
lret
int3
int
mov
xchg
push
adc
arpl
and
xor
mov
rclw
push
sbb
adc
int3
fistpl
dec
cwtl
add
stos
push
xchg
sub
cmp
icebp
push
push
sbb
mov
jne
mov
fs
fcmovu
pushf
daa
xchg
or
imul
push
dec
subb
jmp
imul
aad
jmp
xlat
dec
clc
cmp
and
mov
mov
dec
pop
mov
popf
adc
mov
push
sub
jp
push
xchg
dec
xchg
and
outsl
bnd
insb
push
stos
lods
push
and
lods
loopne
xchg
sub
push
adc
popa
push
insb
pushf
and
jg
mov
lahf
aad
push
push
movsl
int3
pop
xor
mov
xchg
xchg
xchg
xor
sub
movsb
loope
mov
or
mov
dec
out
jb
jns
int
mov
push
push
and
and
inc
pop
push
in
incl
push
mov
dec
push
push
ret
push
aad
mov
int3
xchg
outsl
sbb
sbb
jle
inc
ror
inc
xchg
outsl
jnp
add
xor
xor
aaa
push
out
in
out
or
lock
add
push
ja
cmp
adc
pop
push
add
dec
add
js
das
mov
inc
fbstp
push
rcrl
out
xchg
xor
repz
xor
jae
setae
lcall
mov
or
mov
jae
mov
sub
mov
movsl
add
mov
js
pop
dec
pusha
push
adc
and
loope
mov
dec
xchg
orl
orb
push
or
mov
es
mov
testb
cli
add
dec
pop
and
jl
mov
pusha
outsb
ds
dec
mov
jg
xchg
push
outsl
rcr
jno
loope
lock
push
cmp
inc
push
test
and
inc
rolb
imul
dec
mov
lret
popf
xchg
cmp
addr16
pop
push
mov
aad
popa
rcll
mov
in
clc
cwtl
push
call
dec
add
je
cmp
les
dec
daa
xor
push
xchg
sbb
stos
fbld
repz
inc
xchg
jmp
sbb
dec
ljmp
jb
push
mov
sbbl
push
dec
xor
add
add
inc
clc
jmp
ljmp
mov
or
jne
stc
push
dec
inc
inc
pop
jg
inc
sbb
test
in
mov
pushf
mov
sbb
loopne
outsb
pop
addr16
or
int3
notb
ret
or
and
and
push
xchg
xor
mov
pop
xchg
sarl
add
das
jmp
ds
inc
mov
cmp
jne
mov
push
xor
mov
push
je
jmp
movsl
push
imul
call
xchg
rcrb
repz
fmull
fadd
dec
and
lret
jnp
mov
mov
mov
daa
rolb
imul
xchg
push
xchg
and
in
jae
pop
mov
ja
mov
pop
andl
xor
pop
xor
fistpl
fldenv
in
test
pop
lret
jb
ret
fistpl
and
cmp
mov
outsb
aad
sti
arpl
cmp
add
outsb
outsl
fsubl
and
adc
movsl
sub
mov
mov
cmpb
xor
test
cmp
movsl
and
addr16
adc
inc
clc
stc
test
fdiv
outsl
aam
dec
cltd
pusha
insb
fs
int3
or
sub
inc
jge
mov
loopne
sbb
mov
dec
push
shl
push
pop
and
out
mov
shlb
cmpsl
xor
notl
lock
dec
sub
pop
cmp
fnstenv
jae
xor
outsb
mov
addb
or
adc
pop
pop
and
jl
scas
mov
cmpsl
push
sub
lds
mov
out
mov
inc
daa
gs
cs
pop
scas
dec
xchg
leave
shrb
imul
int3
adc
shll
insb
lret
mov
jne
je
in
fsts
dec
or
xchg
int3
es
dec
stc
popf
je
or
xor
mov
mov
fstpt
push
dec
mov
sbb
cmpsb
stc
xorl
ds
ljmp
pop
pop
jg
push
shlb
in
mov
repnz
pop
rcrb
sbb
mov
mov
xlat
sbb
ss
dec
pop
out
mov
into
cmpsl
cltd
dec
xor
cmp
mov
ss
ss
xorb
pop
sub
cmp
push
jns
pop
mov
mov
mov
rcr
call
jns
sub
js
xor
stos
mov
jo
pop
movsb
and
or
bnd
inc
sbb
lret
mov
pushf
jle
cmp
adc
fmull
stos
xlat
mov
adc
rcrb
dec
pop
dec
push
aam
or
cmp
cmp
jmp
fdivl
fstpl
jecxz
cmp
push
inc
repnz
mov
xchg
mov
push
idivl
xchg
sahf
xchg
je
xor
or
jg
out
rol
pop
fwait
and
fbstp
insb
shr
dec
mov
mov
xlat
xchg
cmp
or
cli
test
inc
mov
pop
or
imull
int3
fsubrl
jbe
sub
cmp
insb
and
insl
and
inc
push
jns
inc
rcrl
fisttpl
adc
arpl
insb
cmp
mov
jmp
jbe
rorb
lret
push
lock
int
ret
sbb
sub
adc
xchg
inc
dec
inc
and
cmp
insl
push
arpl
or
subl
add
rclb
cmp
dec
sbbb
clc
ljmp
xchg
jp
aad
in
mov
xchg
cltd
xchg
subl
inc
add
sbb
subl
cmpsl
ds
xchg
ret
push
sar
stos
pop
or
jne
pusha
xor
inc
inc
fdivs
push
loope
ficomps
sbbb
sbb
mov
out
push
repnz
test
les
adc
or
loopne
cmp
imul
and
sahf
in
ret
inc
ja
insl
popf
in
loope
pop
stc
mov
fsubr
cli
ds
adc
jg
lods
mov
adc
pop
add
push
jl
fisttps
test
cmp
stos
xchg
call
sub
fstpt
arpl
xorl
ss
inc
fcmovb
jmp
scas
out
cmc
xchg
pop
sbb
inc
rorl
stc
pop
inc
ds
sahf
out
ljmp
imul
into
adc
cmc
mov
mov
movsl
push
ja
push
inc
lret
in
or
enter
in
hlt
mov
fdivrs
mov
jg
in
xchg
cwtl
popa
jnp
sub
push
lcall
rcl
addl
jp
mov
rcpps
pop
ss
rol
inc
test
mov
or
xor
call
cli
test
test
ds
mov
inc
rcll
pop
jo
mov
lret
fisubrl
popa
mov
pop
in
cltd
lahf
adc
pop
and
out
js
mov
push
mov
xor
scas
mov
imul
stos
pushf
dec
xor
lock
xlat
popf
imull
stc
mov
hlt
cwtl
xor
xor
stos
push
popf
fsub
scas
pop
lds
pop
clc
pop
dec
jbe
pop
and
loop
jns
imulb
adc
mov
push
sbb
scas
ret
sbb
sub
push
repnz
pop
daa
lods
test
fstpl
jmp
jg
outsb
jbe
and
dec
insb
dec
aam
repnz
std
sub
hlt
cmpsl
sbb
pop
and
stos
cmp
dec
testl
cld
aas
je
aad
adc
mov
scas
fmul
mov
dec
test
push
test
pop
adc
lods
sub
mov
dec
and
mov
mov
dec
sbb
repz
std
scas
or
popf
cs
xchg
js
cmpsb
lret
and
pop
sub
sub
xchg
testb
repz
loope
and
xchg
sub
jae
icebp
add
rcrl
mov
imul
cmp
pop
inc
imul
mov
xchg
sti
and
mov
or
leave
mov
adc
mov
jp
xor
jmp
inc
sbb
add
daa
pop
lods
sahf
lcall
mov
jge
cmp
cwtl
out
lret
inc
sbb
movsl
data16
mov
hlt
in
fsubrs
ret
cmp
cmp
xor
aas
mov
popa
shrb
add
inc
xchg
bound
imul
xchg
dec
mov
dec
cmp
add
fsubs
jb
sahf
pop
out
loop
imul
aaa
push
cmp
les
jae
push
das
mov
jnp
adc
jbe
int
sbb
xchg
loopne
pop
jbe
cmovp
xor
aam
jne
pop
jp
iret
xchg
test
cwtl
mov
mov
mov
aaa
int
mov
fsts
adc
cmp
lods
push
pop
outsb
adc
dec
aam
mov
fsub
inc
mov
cwtl
pop
sbbb
sub
or
roll
jmp
cltd
xlat
sbb
dec
std
nop
jmp
daa
mov
insb
inc
adc
loopne
pop
insb
je
push
scas
fadd
adc
in
push
stc
mov
out
scas
jae
add
or
sbb
orb
adc
enter
out
shufps
scas
jecxz
cmc
xchg
xchg
aad
loopne
scas
xchg
adc
jne
xor
cmp
xor
cmc
aam
mov
xchg
pusha
imul
xchg
insb
push
mov
mov
out
pop
fsts
ljmp
int3
lret
fidivl
add
mov
or
sbb
adc
xchg
jecxz
jno
lcall
xchg
cmp
jge
fdivl
sbb
daa
mov
icebp
sti
rep
and
cmp
lock
push
push
xor
jnp
sbb
mov
pushf
xchg
sbb
sbbl
mov
xorl
adc
test
xor
les
dec
pusha
sbb
shll
push
xchg
inc
stc
inc
outsl
xchg
jmp
loop
and
push
or
inc
mov
push
jo
xlat
addr16
ss
xchg
jmp
imul
scas
out
test
clc
lds
daa
mov
mov
lcall
aas
sub
gs
daa
and
gs
inc
ja
daa
xorl
push
xchg
ror
rcrl
mov
fsubrs
scas
add
lcall
or
add
loopne
cmp
adc
push
es
jnp
insb
in
inc
xor
mov
test
push
std
dec
mov
ficomps
repz
lds
push
sub
push
clc
adc
xor
ret
push
sub
mov
dec
add
pop
aaa
dec
mov
or
push
mov
or
dec
aaa
leave
pop
lds
mov
push
dec
cmp
xchg
cmovno
or
loopne
mov
lret
xchg
repnz
fldenv
push
mov
aas
test
shlb
mov
call
pop
pop
mov
lea
jl
insl
outsb
das
lods
pop
lods
out
cmpb
jle
in
sbb
jp
jl
bound
js,pt
mov
ds
les
ror
dec
sbb
vpmulhw
dec
call
sub
add
xchg
add
mov
pushf
aaa
jne
cmc
cmpsb
adc
cwtl
imul
outsb
or
push
lcall
xchg
xchg
push
adcb
lea
stc
pop
add
loopne
in
scas
pop
cmpsb
in
push
dec
mov
and
sbb
xchg
pop
jle
mov
into
and
popf
jecxz
andb
lods
xor
mov
adc
dec
jg
sub
pusha
scas
cmpl
enter
into
mov
dec
int
in
cmp
inc
mov
mov
cmp
sub
mov
mov
out
jbe
ret
imul
push
xlat
inc
popa
ret
in
hlt
inc
insl
ret
arpl
push
push
outsl
push
mov
cmc
lea
add
jmp
ds
out
mov
xchg
cmp
jne
and
popa
leave
test
sbb
cmp
pop
mov
into
xor
mov
loope
sub
cmovp
push
outsb
pop
push
iret
inc
xchg
xchg
mov
data16
loopne
shl
loope
and
je
cmp
and
xor
stc
pop
pop
aad
mov
adc
jl
mov
out
mov
sbb
shlb
mov
and
pop
jge
mov
inc
xchg
dec
sbb
xchg
fistl
jae
clc
adc
pop
addr16
aad
jge
adc
sbb
adc
stos
mov
jmp
pop
rcrb
adc
pop
negb
test
and
scas
jge
sbb
sub
xor
cmp
stos
pop
sub
lods
movsl
inc
imul
inc
cmp
xchg
mov
and
jne
jbe
movsl
or
dec
fs
inc
mov
aas
mov
insl
outsb
into
sahf
faddl
cmpsb
cmp
lods
jle
or
aam
push
and
fsubp
mov
fs
or
pop
inc
daa
xor
out
hlt
mov
movsb
ljmp
push
sti
mov
jne
xchg
sbb
inc
in
ror
mov
fidivl
jb
insl
imul
daa
mov
sbb
loope
leave
shrl
into
xchg
add
mov
or
ds
dec
je
cmpb
ret
pop
cld
jb
sbb
addr16
push
jle
jle
leave
xorb
daa
pop
cmp
leave
cwtl
adc
adc
and
adc
lods
push
data16
push
jle
cs
mov
lods
inc
mov
or
jno
test
add
pop
dec
mov
xchg
cmp
dec
mov
mov
dec
push
inc
and
stc
add
jle,pt
inc
fs
or
jmp
sub
add
call
fcoms
sbb
ds
push
pop
bnd
ss
loopne
enter
sub
cmp
lea
add
test
jnp
dec
lcall
mov
xchg
in
jecxz
ret
or
or
or
scas
mov
inc
rcll
sub
jecxz
sarb
aad
pop
xchg
push
mov
inc
mov
or
in
add
std
scas
stc
clc
push
lea
mov
scas
pop
cmpsb
jmp
aam
sti
sub
outsb
loop
or
add
adc
lods
in
pop
cmp
add
outsl
add
ja
mov
leave
nop
cmp
jbe
inc
push
inc
push
repnz
add
push
jecxz
push
inc
mov
rcr
mov
outsb
cmc
and
push
test
out
add
sahf
sbb
inc
jo
loope
and
push
std
jae
mov
shrb
popf
sub
jg
mov
jae
xchg
cmp
pop
ja
sbb
and
inc
add
push
popf
arpl
movsl
adc
jg
dec
push
popf
mov
repnz
xchg
std
les
loopne
pop
sbb
mov
shll
fsubl
xchg
xchg
xor
add
or
xor
xor
dec
mov
pop
int
mov
pop
sbb
stos
sbb
pop
mov
pop
clc
loop
xor
jmp
rol
jl
jo
dec
mov
sbb
jns
lods
pop
and
test
fdivrs
aad
push
inc
inc
xchg
xchg
jb
ficoml
adc
and
mov
mov
loopne
dec
pop
and
out
adc
test
out
test
and
pop
test
push
int3
test
lret
or
jl
fwait
aam
add
pop
in
xchg
mov
sub
adc
into
inc
shr
push
push
and
xlat
stc
mov
dec
xor
fucomip
imul
xchg
mov
mov
shlb
add
mov
jbe
movsb
hlt
push
pop
inc
and
add
lds
in
mov
fnstsw
mov
cmp
adcb
jmp
or
notl
pop
dec
mov
push
ja
pop
push
cmp
fstpl
or
gs
scas
push
dec
and
or
pop
sub
xchg
fwait
aaa
lret
jae
push
fdivs
push
popf
rcrl
inc
ds
mov
cmpsb
insb
int3
mov
mov
sub
les
lea
sub
and
popf
adc
push
push
enter
bound
repz
xor
cmp
push
and
imul
mov
fldt
cli
xchg
sub
pop
nop
jns
or
pop
and
in
cmpsl
ret
cwtl
movsb
cmpsl
jo
xlat
fucomi
mov
stos
shr
mov
arpl
icebp
js
xor
clc
or
jnp
andl
clc
dec
dec
pop
pop
add
jnp
cmpsl
xor
pop
popa
jecxz
xchg
repnz
push
leave
fs
inc
mov
sub
add
mov
movsl
ret
fsubrs
cwtl
test
cmpb
jge
arpl
test
push
pop
ja
cs
cld
push
out
cmp
push
mov
leave
mov
stc
arpl
mov
inc
enter
jno
das
jmp
ljmp
pop
adc
pop
and
dec
or
push
jge
pop
xchg
mov
mov
pop
and
lahf
shll
pushf
or
stc
or
movsl
xor
bound
jno
inc
ss
cli
call
insb
xchg
scas
cmpsb
fnsave
and
cld
xor
pop
mov
or
ja
mov
ss
inc
mov
jo
pop
ljmp
movsb
xor
mov
sub
dec
ret
add
push
dec
inc
push
fchs
xchg
shrb
lret
xor
add
enter
cmp
and
imull
dec
decb
dec
cli
das
pop
mov
sti
xlat
mov
mov
cmp
inc
add
cmpsb
xchg
lret
mov
or
leave
inc
adc
std
push
mov
xor
cltd
cwtl
std
adc
lds
xchg
mov
bound
jg
mov
lods
pop
or
cwtl
popf
jmp
test
xchg
iret
stos
je
or
and
jecxz
add
addr16
push
sbb
int
sarb
cmp
idivl
jmp
pushf
dec
cmp
inc
out
data16
sbb
and
pop
pop
or
loop
mov
jle
stc
mov
mov
mov
xchg
fcoms
orb
stos
jecxz
das
orb
pop
mov
pop
sub
cmc
fidivs
clc
cmp
add
jo
mov
ds
je
mov
lahf
add
mov
add
dec
cmp
je
and
mov
pop
xchg
movl
int3
in
push
xlat
jno
lods
call
dec
mov
loope
nop
push
and
jnp
test
scas
or
fisubrs
xchg
mov
push
lahf
lahf
pop
cmpb
dec
aaa
push
xor
or
je
push
sbb
fdivrs
mov
jmp
icebp
inc
fsubr
add
pop
divl
addr16
imul
jae
mov
push
ss
das
xchg
jmp
aaa
sbb
mov
gs
les
add
inc
inc
add
mov
cmp
xchg
out
mov
cmp
cli
jno
or
cmp
rcrl
rcrl
scas
and
cmp
cwtl
mov
or
mov
es
jp
jl
add
lods
in
lcall
pop
packssdw
or
dec
in
mov
cmpb
add
scas
xchg
ss
lds
lahf
adc
dec
mov
dec
std
leave
rcll
fnstcw
mov
xchg
aas
dec
roll
sub
jbe
mov
inc
and
fisttps
xchg
jle
fisubs
ljmp
cs
loope
lock
sub
push
icebp
fidivrs
xor
mov
cmp
sarl
outsl
push
inc
adc
inc
outsl
imul
and
lds
scas
pop
xchg
shlb
jae
ds
adc
aam
test
ds
mov
sbb
or
xchg
mov
cmp
ret
mov
push
jb
out
es
in
ds
lret
lds
and
sbbb
stc
loopne
iret
dec
add
test
ficomps
and
push
fdivl
push
and
popa
aad
push
inc
cmpsb
and
lahf
mov
mov
in
outsl
mov
sahf
cmpsl
lret
call
test
lcall
sbb
sub
fst
and
aaa
pop
cmc
ds
adc
int3
xor
int3
data16
xchg
je
fcompl
pop
aad
das
ficompl
jge
add
pop
push
shl
push
pop
lods
inc
jmp
dec
mov
push
ljmp
fwait
std
pushf
cmp
pop
push
jne
mov
sbb
sub
and
jmp
push
adc
psllq
mov
mov
lods
or
outsb
mov
cmc
sti
push
fistl
mov
adc
xor
shl
jae
and
cs
jae
lea
pop
jnp
jbe
cmpsb
lret
aam
insl
mov
enter
jge
or
pop
das
mov
das
push
pop
pop
outsb
or
ss
dec
and
stos
fidivrl
or
popf
inc
sbb
lea
and
mov
jg
fnstcw
or
sahf
inc
pop
mov
mov
icebp
shll
int
or
stos
mov
xchg
fadds
jne
aam
or
inc
or
jl
jae
or
and
fwait
movsb
push
mov
int3
jmp
mov
cli
test
adcl
xchg
fldenv
push
mul
jge
push
imul
arpl
sahf
je
imul
in
mov
outsb
mov
into
pop
xchg
pop
dec
cmc
sahf
mov
add
clc
inc
in
sbb
pop
icebp
push
aaa
mov
mov
inc
into
pop
mov
xchg
iret
subb
add
nop
testl
shll
jle
push
cmpsb
push
cmp
adc
jge
add
mov
sub
cmp
push
or
ljmp
jno
fsubl
lods
mov
and
mov
aas
jb
mov
shlb
imul
mov
cmp
movsb
ljmp
leave
sub
mov
jge
leave
and
stos
cmp
push
mov
jnp
faddl
inc
cmpsl
pop
ret
ljmp
stc
and
push
pop
mov
flds
cld
outsl
push
pop
cmp
pop
mov
adc
jns
clc
outsb
push
push
xchg
lahf
mov
data16
and
xchg
mov
xor
popl
inc
jecxz
sub
dec
in
loop
loopne
cmc
add
or
xchg
pop
xlat
enter
push
test
fidivrl
fidivrl
sbb
in
arpl
stos
fwait
xchg
push
cltd
cmp
xor
test
and
mov
pop
jge
inc
hlt
push
mov
xchg
in
sbb
int
or
fldenv
mov
insb
and
or
lret
add
fwait
jo
cmpb
mov
inc
es
mov
cmpsb
rep
xor
shll
call
imul
lahf
lock
push
mov
jns
adc
xchg
and
pop
jp
and
in
push
cmp
loop
in
jg
mov
push
pop
xor
stos
test
add
xor
shr
dec
mov
mov
pop
mov
xchg
mov
test
xor
push
icebp
bound
out
and
xchg
arpl
lods
into
cmpb
or
pop
mov
lcall
out
or
cmpsb
inc
imul
test
and
movsl
lods
je
movsb
push
hlt
inc
mov
xor
sbb
cli
scas
sbb
mov
data16
ljmp
pop
les
aas
lcall
lahf
das
mov
pushf
sub
pop
jp
sti
std
loop
adc
push
xchg
cmp
imul
cld
jge
dec
mov
les
mov
push
sub
push
xor
fdivs
mull
aaa
mov
insl
loopne
xchg
inc
jge
mov
push
sub
jg
int
jnp
push
fwait
or
aam
je
lods
mov
mov
adc
loop
xchg
add
push
testl
xor
in
xorl
fistpl
out
jnp
mov
xor
lea
push
fdivrs
push
mov
rcrl
popf
jne
fwait
stos
xchg
sub
repnz
push
ja
adc
push
xchg
scas
or
out
inc
inc
cli
js
bnd
movb
sbb
xchg
daa
mov
ret
orb
out
xchg
sub
pop
or
lods
adc
mov
je
jmp
pusha
jno
inc
push
aaa
sar
stc
rcr
or
pop
or
inc
in
roll
jp
cmp
inc
sbb
xor
or
and
sub
stos
sub
fsubl
enter
lock
push
cmp
pop
daa
adc
mov
cs
ss
dec
lods
mov
push
scas
in
rcrl
loop
fsubrs
cli
adc
loopne
jns
mov
aad
bound
dec
data16
push
jmp
jmp
inc
enter
dec
jecxz
and
lea
mov
push
js
push
cltd
push
mov
mov
and
insb
nop
xor
lock
icebp
lock
shll
rcl
outsb
pushl
dec
jmp
call
repz
and
in
push
add
imul
out
xor
push
xor
stos
movsl
mov
fwait
je
fistpll
scas
mov
out
mov
xor
cmp
loope
xor
push
or
scas
scas
inc
sarb
fcmovne
iret
mov
jmp
je
or
testl
push
push
pushf
and
sub
ljmp
push
mov
imul
sbb
mov
sub
and
pushf
adc
jne
nop
push
pop
aad
jnp
push
or
add
xor
dec
pop
popa
shl
jnp
push
js
rcrb
shrl
in
out
lret
outsb
imul
movsb
cld
mov
push
sub
ss
push
dec
xchg
loopne
jbe
mov
pushf
fldcw
and
dec
mov
xor
lea
imul
std
and
inc
pop
jp
adc
jmp
sarb
pop
mov
push
xor
cltd
cmc
pushf
notl
andb
xlat
pop
movsb
fwait
mov
mov
add
repz
daa
pop
inc
mov
mov
cmp
int3
inc
lret
sub
jns
xchg
les
mov
xchg
fnstsw
sub
icebp
mov
and
outsb
sahf
jb
cmpl
mov
ret
dec
push
dec
dec
stc
movsl
in
fnstcw
pop
sahf
mov
jo
pop
and
aas
pop
adc
or
insb
push
pop
lcall
addb
hlt
addr16
cltd
rcrb
xor
pop
sti
outsl
sub
adc
inc
pop
addb
mov
movl
test
mov
inc
stos
or
sub
mov
sbb
ss
aas
cvtdq2ps
push
jno
jo
jmp
lret
in
cwtl
cwtl
add
jl
rclb
fistps
lret
and
cmp
mov
pushf
and
xchg
pushaw
repz
mov
push
mov
in
jg
rcll
in
or
cmpsl
inc
or
data16
cmpsl
adc
rcrb
cmp
and
fsincos
decb
sbb
push
jb
push
repnz
popl
sub
scas
pop
jg
add
ljmp
leave
rol
mov
les
push
sbb
roll
and
sub
sbb
aaa
mov
gs
leave
stos
mov
mov
xchg
lret
and
jno
push
inc
xchg
jbe
js
mov
into
fldt
mov
adc
cli
xor
mov
xorb
xchg
xchg
in
loope
test
or
sbb
fwait
or
sub
pop
rolb
mov
test
push
shll
loopne
xchg
push
test
loop
jnp
and
stos
lods
xchg
cmp
ss
jo
mov
or
xchg
adc
lahf
add
jle
mov
jecxz
push
inc
loop
push
popl
mov
cmc
push
and
lret
ljmp
sbb
fsts
or
xor
jbe
cmp
mov
pop
xchg
int
inc
call
cs
add
push
mov
xchg
jne
sbb
addb
ror
scas
ja
sbb
mov
pop
cmp
fidivrs
cmp
xchg
js
dec
leave
std
adc
inc
sbb
in
add
jle
cmp
repnz
mov
fiadds
insl
mov
pop
sub
nop
or
repz
jbe
gs
sbb
iret
inc
xor
xchg
xlat
add
in
fidivrs
cmp
adc
add
out
xor
dec
or
jbe
mov
lock
sub
push
pop
cmpsl
inc
and
lret
aaa
push
inc
sub
adc
jbe
shlb
and
mov
lahf
fsubl
fistps
xor
std
inc
xchg
das
push
mov
les
adc
adc
sub
aas
adc
push
mov
adc
call
divl
cmpsl
pop
mov
ss
shl
xor
cmp
mov
add
push
vmovdqa
inc
fists
dec
sbb
push
in
dec
mov
insl
loop
jecxz
pop
push
nop
jne
lea
push
push
call
mov
xor
enter
popa
sbb
outsl
and
orl
xor
pop
sub
sbb
xchg
mov
in
lock
mov
lods
repnz
out
dec
test
inc
sarb
mov
mov
dec
or
dec
mov
scas
aad
jecxz
addr16
mov
repnz
inc
lods
and
or
ljmp
fsts
cmpsl
rcll
fimull
adc
pusha
add
dec
and
push
inc
xchg
adc
pop
repnz
pop
icebp
ja,pn
dec
xchg
outsl
push
jo
push
adc
dec
mov
incb
mov
inc
sub
push
in
incb
sti
sub
inc
les
mov
and
jae
pop
and
enter
cltd
cmp
pop
lahf
pop
out
rorb
in
xor
fisubs
jp
fcomi
mov
pop
lods
push
mov
mov
sbb
imul
sub
movsb
out
stos
mov
mov
std
cmp
xchg
aaa
pop
adc
mov
cmp
xchg
push
mov
push
in
mov
int3
mov
outsl
icebp
out
dec
rcrb
adc
xor
jmp
cmc
leave
movsb
scas
in
stos
pop
xchg
cmc
pop
jle
lds
sbb
mov
jle
out
sub
xor
sahf
mov
testb
cmp
in
ret
mov
xchg
dec
mov
inc
jb
mov
or
sub
inc
ret
js
aad
mov
xchg
jmp
push
bound
mov
test
xchg
sub
clc
inc
arpl
les
data16
lods
xlat
call
mov
jle
add
lcall
lret
inc
mov
add
pop
sub
xor
push
jle
notl
mov
loop
mov
mov
nop
inc
mov
ss
push
out
test
jg
xor
fcomi
aad
lods
pop
daa
dec
in
ret
dec
outsl
cld
fcoms
sbbl
mov
inc
enter
fiaddl
dec
je
negl
ret
hlt
ss
xor
lods
sti
loop
sbb
dec
jo
fdivs
mov
adc
sub
subb
pop
fs
popf
loop
dec
jle
icebp
xchg
scas
add
mov
in
mov
lea
daa
and
bndldx
push
scas
push
movsl
jbe
push
mov
outsb
cmp
sub
add
dec
pop
add
roll
xor
idivl
jl
test
sbb
fs
sarl
das
or
push
rclb
lcall
pushf
int3
jb
aas
and
add
add
sub
repnz
test
adc
loope
jmp
cli
into
imul
test
sbb
test
cmpsl
pop
cmpb
shlb
in
mov
mov
push
lock
inc
xchg
cmp
add
aad
cli
jl
out
adc
repz
fldt
push
inc
mov
cmp
test
or
xchg
pop
jecxz
mov
sbb
pusha
cmp
lds
add
inc
mov
outsl
inc
cld
and
fcmovnbe
in
xchg
orl
xor
or
jb
mov
cmpb
movsl
pop
push
lret
or
arpl
icebp
inc
mov
sbb
sbb
xorl
es
clc
aas
jb
insl
pop
test
test
mov
fldenv
add
xor
icebp
mov
into
xor
lahf
xchg
repz
fisubl
sub
adc
xor
fldt
fisubrs
outsl
sbb
push
jmp
sub
jecxz
ss
jns
imul
cmc
idivl
dec
mov
test
push
cs
cmc
call
lea
cmp
adc
icebp
mov
les
ret
test
add
jmp
bound
lahf
mov
push
outsb
pop
addl
adc
inc
mov
add
imul
add
arpl
sarb
jo
and
cmp
jmp
int3
push
rolb
fcmovu
in
jecxz
ljmp
mov
std
test
xor
daa
sbb
and
inc
dec
inc
push
js
pop
xlat
aam
in
pushf
outsb
push
outsb
aad
enter
sarl
loope
enter
repz
call
jmp
stc
push
sahf
popf
lds
jb
ret
adc
aad
lods
pop
jne
dec
ss
nop
xchg
pop
insl
cmpsl
ss
fprem
inc
mov
test
aas
sbb
jp
mov
or
hlt
adc
fucomip
jmp
stc
mov
daa
aaa
jne
mov
rcll
sbbb
ror
mov
fs
std
iret
mov
dec
orl
xchg
jae
into
sub
aad
xlat
ss
arpl
mull
aas
dec
stos
iret
dec
and
add
fiadds
dec
lret
adc
lret
inc
add
lock
xchg
in
in
not
mov
addr16
jmp
add
adc
mov
cli
pop
pushf
pusha
pop
pushf
call
cli
ss
cmp
into
mov
popa
push
loope
adc
add
sub
jb
loop
sub
dec
sbb
jle
test
test
in
ss
push
and
push
or
cmp
and
ror
dec
jmp
mov
dec
aaa
and
pop
push
int3
shl
mov
les
or
sbb
sbb
sbb
sbb
xchg
ret
inc
les
jge
push
nop
std
pushf
nop
cmpb
dec
or
add
mov
loope
push
mov
add
sarb
pop
mov
inc
jle
adc
jne
repnz
cs
cltd
pop
mov
daa
test
icebp
out
aaa
aam
outsl
push
lret
push
push
pushf
pop
seta
fs
cwtl
sbb
shll
jmp
dec
pushf
dec
pop
dec
int
push
cmp
sub
lea
mov
mov
sar
ss
lods
jecxz
rcll
jno
mov
lods
test
addr16
jp
mov
dec
cwtl
mov
sub
cli
sbb
push
imul
call
inc
jg
aad
xor
mov
cmpsl
mov
add
popa
sub
out
rcr
jg
iret
iret
int
jp
pusha
xor
push
fisubrs
sub
jmp
addr16
in
sub
loop
lock
das
imul
icebp
psubb
pop
inc
jge
lahf
pop
jns
stos
ficomps
mov
cmpsb
jb
xor
mov
xor
sub
fdivr
lods
repz
cs
inc
adcb
jl
gs
add
jle
push
xchg
inc
movsb
nop
loope
stos
por
mov
neg
add
and
lret
xor
sub
push
gs
in
es
stc
jg
lahf
mov
mov
das
dec
icebp
stc
andb
push
mov
jg
mov
mov
idivl
pop
and
pop
add
loope
in
sub
fs
stos
push
sub
xor
jl
xor
push
das
sahf
js
pop
cmpsl
or
sbb
imul
inc
insl
andl
in
insb
push
sbb
cmc
dec
dec
lods
mov
xchg
lods
xchg
in
or
movsb
ret
jecxz
or
fwait
mov
push
int
or
sub
aaa
dec
adc
pop
inc
jle
out
test
inc
mov
sub
lret
mov
aas
testb
test
test
jno
mov
xor
out
or
sub
dec
sub
jecxz
dec
add
popf
es
jno
mov
loope
dec
dec
cld
dec
pop
test
pop
outsl
fcmovb
sub
adc
jne
outsb
dec
mov
lods
jmp
xchg
pop
lock
xchg
lahf
rcrl
and
push
pop
loopne
ljmp
xchg
insl
hlt
insl
or
push
push
add
push
mov
sbb
pop
and
push
adc
in
lods
fistpl
jbe
sbb
sub
int3
push
dec
xlat
adc
and
das
sub
int
cltd
mov
mov
sub
inc
mov
jecxz
xchg
mov
pop
ds
adc
lcall
add
bswap
push
lods
dec
sub
mov
mov
outsb
xlat
jmp
push
mov
movsb
sub
push
push
xor
loope
in
push
add
mov
fdivp
insl
push
xchg
addr16
lock
mov
xchg
bound
call
push
pop
es
pop
scas
sti
mov
enter
pop
pop
add
adc
in
sub
jb
ret
das
fsubrs
pop
pop
arpl
outsl
push
shll
xor
add
lahf
pop
jge
mov
cmovo
push
dec
xor
iret
repnz
pop
je
or
orl
jo
pop
cld
shrl
jae
mov
xchg
ret
ljmp
lcall
jp
movsb
push
push
mov
or
out
int
dec
cltd
pop
shrl
mov
mov
inc
sarl
and
imulb
into
push
mov
jmp
outsl
cmc
push
hlt
xor
xchg
orb
adc
lret
ret
sbb
out
add
test
xor
imul
pop
imul
add
jnp
push
subl
stos
hlt
ds
fidivrl
mov
xchg
loopne
dec
or
bound
push
sub
cmp
pop
mov
sbb
lret
shrb
cmp
lock
add
cmp
mov
push
adc
out
icebp
add
mov
fs
xchg
inc
fists
daa
jle
mov
lea
es
xorb
loop
es
push
scas
jae
sahf
push
iret
push
or
sbb
clc
repz
adc
or
or
movsl
cmp
and
cli
je
dec
xchg
cmc
xorb
call
xor
mov
cwtl
ljmp
mul
loope
dec
addr16
movsb
cli
aad
dec
adc
xlat
mov
in
jp
mov
ss
hlt
aas
cli
inc
adc
push
test
jb
push
xchg
mov
ret
push
cmp
int
add
fs
out
in
loope
iret
lds
es
imul
dec
dec
mov
push
aad
dec
pop
lock
jg
jecxz
and
mov
mov
lds
stos
std
push
pop
mov
inc
sub
and
fidivrl
data16
xor
jns
bt
sbbl
lret
out
loope
inc
shlb
js
aam
mov
in
dec
mov
xor
addr16
jl
cmp
adc
add
mov
mov
out
clc
or
enter
fisubrl
in
jmp
movl
xchg
mov
pusha
iret
imul
xor
sub
fsubl
into
add
pop
jns
cwtl
ficompl
sbb
data16
and
fcomps
xchg
sub
or
pop
dec
aaa
loopne
mov
xor
shrl
stos
push
push
cltd
and
lret
out
sub
iret
out
movsl
sti
inc
jns
and
les
cmp
clc
push
xor
rep
mov
mov
out
setne
dec
arpl
sbb
xchg
mov
jmp
jl
cmpsl
jno
pop
mov
out
pop
add
stc
dec
cwtl
lods
fnsave
rcrl
fdiv
inc
sub
nop
sarb
sub
jle
or
outsb
shl
lret
adcl
xchg
subl
loop
mov
fstpl
cmpsl
push
flds
ja
sub
mov
push
push
int3
out
fwait
jbe
cwtl
repnz
xor
jo
xchg
test
fstps
leave
hlt
call
out
das
xlat
mov
push
adc
stos
jmp
xor
push
mov
jne
scas
divb
fmulp
xchg
cmovns
xchg
cltd
and
sub
adc
mov
stos
or
push
push
xor
repz
iret
cltd
pop
aad
or
cmp
inc
sub
mov
loope
add
push
mov
scas
dec
push
rorb
data16
aam
or
and
cwtl
jbe
pop
pushf
daa
sbb
cmovns
mov
pop
cmp
add
or
lret
xchg
jne
xchg
jae
into
les
clc
mov
jecxz
cmp
sahf
pop
leave
cs
or
dec
stos
clc
or
test
sbb
jae
xor
xchg
inc
push
sub
pop
enter
outsb
dec
sub
das
or
xlat
not
lods
mov
popf
jmp
int
jb
dec
jno
push
scas
flds
shll
xor
xor
call
adc
out
inc
mov
mov
test
pop
lds
dec
ljmp
xchg
pinsrw
push
dec
les
and
mov
or
jge
inc
lret
std
ret
push
mov
inc
ljmp
shlb
push
out
sbb
pop
mov
push
xchg
and
lods
jae
dec
nop
dec
xchg
out
xorl
fnstenv
mov
cltd
push
add
xchg
push
lahf
cmp
dec
pop
xchg
jecxz
insb
enter
dec
inc
mov
imul
xchg
or
ss
mov
rorb
out
pop
or
push
sub
push
jnp
and
cmpsb
cmp
or
jecxz
fucom
faddl
jmp
imul
jns
mov
lcall
xchg
dec
xor
xor
fimuls
loop
popa
insl
fldenv
leave
cli
adc
sub
fidivl
push
xchg
loopne
inc
push
test
mov
out
test
int3
pop
push
adc
mov
cmp
shl
mov
inc
adc
and
cmp
aam
or
scas
mov
dec
cmp
rep
js
stos
jnp
xor
pop
pop
push
xor
mov
pop
lds
mov
dec
push
push
into
cmp
jnp
movsl
leave
push
ss
in
out
popa
xchg
hlt
fistpl
pop
out
mov
cltd
jns
jl
xchg
movsb
pop
jb
add
mov
enter
push
jl
xchg
data16
add
push
adc
fs
in
aam
call
pop
imul
mov
dec
mov
shlb
scas
push
ret
push
stc
ficompl
fstl
call
mov
das
inc
adc
xchg
rcll
leave
add
mov
xchg
xchg
test
jno
mov
daa
mov
push
mov
fwait
test
jl
je
sbb
pop
mov
lds
das
or
inc
outsl
cmp
pushf
add
jne
cld
xor
mov
inc
cwtl
fcoml
push
ljmp
pop
cmp
push
rcll
pusha
outsl
daa
testb
popa
add
adc
mov
aam
xchg
xchg
and
jns
adc
xchg
mov
xchg
insl
sbb
mov
ja
or
cmpsb
negl
lret
lea
loop,pn
cmp
jp
cmp
jl
fiaddl
inc
inc
das
nop
clc
xor
or
enter
pop
sbb
sbbl
punpcklbw
mov
adc
fnstsw
jae
hlt
mov
xor
cmp
pushf
pop
xchg
mov
idiv
ja
jns
add
scas
push
add
nop
or
jge
cwtl
sub
hlt
cmp
cmp
sub
pop
sbb
cmc
ljmp
and
outsb
mov
cmp
call
idivl
pop
addb
mov
andl
shll
sub
daa
jae
sbb
data16
das
aas
lret
add
testb
mov
pop
or
shrb
scas
gs
dec
popf
ja
pop
outsb
or
push
lcall
imul
jae
lds
pop
es
inc
aad
push
or
jl
inc
ss
enter
sbb
mov
pop
das
insl
cmp
jns
pop
insb
enter
jns
mul
hlt
inc
idiv
mov
xchg
stos
push
out
push
insb
sub
bound
stos
movb
dec
gs
inc
scas
loop
push
mov
scas
ja
mov
xlat
sti
dec
mov
in
jnp
xchg
add
sbb
aas
xchg
cmc
xchg
ljmp
ds
xor
das
pop
hlt
fwait
mov
arpl
repnz
adc
dec
mov
fsts
je
clc
jns
mov
pop
mov
inc
sub
jne
jecxz
xchg
arpl
enter
shlb
mov
add
inc
xor
ret
rcr
bound
popf
xchg
icebp
mov
mov
or
nop
out
scas
js
pusha
rcrl
popf
in
cmp
add
pop
loopne
mov
decb
push
adc
adc
fsts
jbe
cmp
xchg
inc
pusha
pop
mov
hlt
push
loopne
push
xchg
push
or
popf
mulb
jae
jecxz
pop
and
cmp
fiaddl
jle
stos
ja
fiadds
inc
movl
pop
fidivrl
mov
dec
pop
outsb
inc
cmp
inc
inc
inc
dec
cmpb
xlat
subb
stos
repz
pushf
ds
dec
push
pop
inc
mov
pop
xchg
ja
aad
push
test
jecxz
adc
fisttpl
sbb
pop
fbld
lret
xchg
and
xor
mov
jbe
cmp
mov
nop
mov
call
mov
or
xchg
js
push
push
sbb
push
mov
add
lret
shrl
pop
stc
scas
jecxz
aas
dec
pusha
leave
or
testl
lahf
mov
pop
dec
jnp
shrl
jmp
out
data16
push
rcll
leave
sbbb
cmpsb
xchg
shll
adc
sbb
inc
lret
pop
loope
or
aaa
or
xor
incl
or
add
dec
add
je
iret
pop
or
pushf
mov
mov
inc
jecxz
js
jmp
mov
and
outsb
cmc
jle
lods
daa
mov
xchg
test
pop
push
in
inc
dec
xchg
nop
pop
mov
aad
out
mov
sbb
mov
popf
mov
repnz
jg
xchg
in
inc
lods
cli
int
inc
cmp
jg
cmpsb
ret
sbb
stos
push
lods
sub
lahf
pop
call
ret
imul
xor
aad
popf
mov
jg
and
hlt
jbe
outsb
jg
mov
adc
pop
sbb
xchg
jle
push
xor
jno
fadds
rcrb
xor
and
dec
dec
ret
dec
xchg
cmp
push
shrl
mov
subb
arpl
and
in
push
mov
sbb
iret
ljmp
clc
les
jge
shll
mov
pusha
fwait
mov
movsl
mov
imul
test
aas
pop
sub
sti
loope
or
negb
jle
in
jne
aaa
pop
push
cld
xor
orb
sub
fcomi
sbb
mov
dec
inc
dec
dec
das
lahf
or
or
bound
int3
sub
mov
or
insl
repz
mov
popf
push
mov
loop
popa
jmp
movsl
mov
pop
movsl
xchg
pop
fxch
mov
jne
inc
dec
lret
fwait
mov
cmp
xchg
lret
lds
pusha
mov
jg
enter
and
and
pop
scas
push
test
push
sub
ficoms
out
aam
shlb
jb
divl
cmp
dec
mov
adc
cs
stos
loope
mov
fyl2xp1
inc
inc
xchg
rcr
cmc
mov
lock
push
out
dec
pusha
sarb
dec
jnp
lock
inc
aaa
jb
xchg
or
or
xlat
fnstenv
nop
and
scas
inc
push
push
xchg
mov
in
and
iret
jns
std
sbb
int
lock
sbb
inc
pop
in
icebp
and
loope
push
pop
fiaddl
pop
addl
js
iret
dec
int3
les
dec
sahf
sbb
push
in
pop
outsl
push
sub
pusha
vaddsd
push
outsl
or
xor
popf
mov
dec
inc
add
xor
ss
test
popf
repz
push
sbb
lods
mov
dec
repnz
adc
jo
pop
pop
je
cmp
stos
sub
ljmp
or
sub
pop
or
aam
jge
sub
cwtl
cvtdq2ps
movsb
sbb
xor
int3
stc
pop
cmp
mov
and
ljmp
mov
mov
out
popa
push
or
add
sahf
sbb
js
lods
fst
or
lea
sbb
xchg
les
or
mov
gs
cmp
sub
and
add
xchg
pop
cwtl
dec
aas
jp
insb
inc
jns
call
jns
mov
xchg
push
xor
mov
pop
arpl
pop
jnp
es
push
add
repnz
jle
pusha
xor
lcall
xchg
xchg
out
push
mov
inc
xor
cmpsl
addl
dec
xchg
loope
pop
jle
shl
idivb
push
mov
sbb
orl
sbb
xor
inc
neg
dec
push
imul
inc
sbb
inc
fldenv
cmp
or
cmp
out
cmp
rcrl
das
imul
and
je
movsb
ficomps
lahf
dec
lahf
ret
cmp
pop
xorb
mov
sub
xor
movsl
ja
xor
js
test
xlat
jb
repz
lds
iret
stos
lods
iret
sbb
adc
jnp
aas
add
add
lock
or
adc
sahf
loop
lds
sub
xor
jmp
das
xchg
dec
adc
lret
scas
cmpsb
pop
fcompl
xor
xchg
mov
insl
ret
pmaxsw
scas
inc
and
scas
mov
fistl
cmp
adc
lea
cmp
pusha
test
sarl
shlb
repz
popa
les
xorb
add
push
lahf
push
jns
imul
out
test
cmp
lret
and
fwait
xchg
jl
add
mov
sub
test
sbb
adc
jb
cmp
js
dec
repz
rorl
pop
sub
jge
popa
scas
adcl
xchg
sbb
mov
cld
jl
mov
ja
xchg
jle
jmp
leave
jle
inc
cli
paddusb
shlb
cltd
inc
je
cmpsb
stc
pop
js
pop
push
xchg
pushf
xlat
jl
xchg
out
sbb
xlat
push
leave
push
mov
in
cmp
add
jp
mov
cwtl
je
pop
push
pop
lcall
xor
movsb
jle
cli
sbb
jp
lret
sbb
mov
sbb
xchg
xchg
leave
iret
test
mov
cmpsl
push
es
loop
in
xor
add
and
add
insb
sbb
pusha
push
xor
sub
call
push
adc
cli
lret
sub
lahf
jp
fs
daa
adc
lahf
dec
call
cld
aaa
scas
cld
dec
stc
xchg
imulb
jmp
fistl
mov
mov
fisttpll
les
mov
push
icebp
xor
mov
sbb
push
add
shl
jg
mov
in
in
cmp
cmp
xor
ja
imul
cmp
pop
rorl
and
outsl
loopne
xlat
arpl
and
jp
aam
nop
mov
or
out
pop
movlps
cld
pusha
scas
push
xor
stos
stos
jmp
mov
mov
xchg
cmp
popl
arpl
out
sbb
test
mov
and
aaa
lcall
insb
orb
push
pop
ds
and
sub
outsl
jg
lds
sub
push
leave
xor
dec
jno
pusha
fwait
and
and
or
mov
scas
in
mov
out
cmpsl
mov
shll
sub
jne
jo
bound
or
xor
push
push
in
push
or
push
aas
mov
pusha
and
addr16
call
push
sub
inc
jnp
xor
shr
or
test
sbb
adc
popf
xchg
data16
icebp
addr16
mov
out
and
in
adc
xchg
pop
jbe
arpl
xchg
jo
jb
aas
jl
lret
lods
adc
test
push
push
add
mov
mov
add
push
adc
insl
mov
inc
mov
lret
iret
mov
xor
lcall
jg
cmp
pop
dec
mov
or
outsl
test
ss
fisubrl
movsl
in
rolb
xchg
fiaddl
xchg
movsl
lock
jns
movb
add
xor
push
pusha
scas
jmp
sti
and
or
xchg
sub
inc
sbb
push
fwait
leave
or
sbb
jne
lahf
mov
int
mov
push
pop
jl
imul
mov
add
fnstenv
mov
cltd
xor
mov
mov
gs
dec
cmc
push
mov
cs
add
xlat
enter
cmc
sub
out
inc
inc
aas
ror
cmc
aaa
push
mov
mov
cmp
cmp
xor
push
dec
pusha
xor
in
mov
cs
dec
xor
cmc
pop
push
inc
push
mov
and
sub
dec
jg
or
setno
cwtl
fdivl
dec
popa
out
mov
pop
cmp
orb
inc
inc
xor
sub
pop
adc
int
mov
dec
xor
cmp
mov
lretw
mov
in
cmp
xchg
inc
int3
xor
outsb
add
pop
xorl
adc
mov
jmp
or
xchg
jge
mov
cmpsl
jl
cwtl
jo
movsb
push
add
icebp
mov
sahf
jns
sub
xchg
fidivl
push
or
mov
sbb
and
adc
outsl
mov
hlt
loope
stc
arpl
dec
scas
das
popa
aas
daa
mov
cmc
rcrl
lods
cmpsl
std
mov
pusha
jo
xor
out
push
shrb
push
cmp
icebp
fcoml
inc
dec
adc
lods
mov
pop
ret
call
mov
sub
pop
mov
dec
ret
outsl
lret
and
mov
cmp
mov
xlat
out
jecxz
out
inc
sub
cmc
test
sbb
cmp
sbb
ds
push
add
inc
scas
add
mov
adc
fisubrl
bound
scas
test
push
imull
icebp
sub
jne
push
push
inc
mov
sub
fcmovb
stc
cmp
jne
xor
sarl
call
insb
xor
shl
xchg
mov
inc
bound
testl
cmp
je
pop
xchg
fbstp
fbstp
mov
xchg
int
dec
mov
mov
fwait
ljmp
ljmp
pop
dec
decb
xchg
incl
cmpsb
or
cmp
cmpsb
testb
aad
ret
imul
dec
testb
cwtl
fnstsw
pop
jae
mov
pusha
mov
push
xchg
xchg
sub
sub
insb
sub
das
int3
push
inc
push
mov
out
lods
imul
push
scas
je
jo
stc
push
es
gs
jns
fiadds
cmpsb
jo
or
add
sbb
xchg
les
flds
xor
jno
fdivrs
inc
mov
test
fistl
scas
shlb
outsb
lds
outsb
lds
mov
inc
sbb
and
loope
xchg
add
dec
in
ds
or
mov
call
push
testl
cmp
inc
inc
stc
loop
orl
push
sbb
cmpb
loope
mov
sub
loopne
sbb
mov
mov
scas
push
jl,pn
dec
mov
idivb
mov
jbe
andb
pop
fxch
add
int3
div
adc
sbb
lcall
adc
pop
lods
mov
movsb
ficomps
xor
sti
stos
mov
in
mov
inc
repz
sbb
jbe
pop
xchg
das
cmp
loopne
arpl
inc
jmp
rolb
xchg
mov
andl
mov
aad
add
add
xchg
imul
popf
out
xor
testl
in
inc
push
cmp
sub
mov
ret
movsl
ret
pop
push
jb
pop
arpl
cmp
sub
int3
insl
sarb
and
jne
shr
and
inc
push
stc
lea
xchg
stos
fmulp
cmpl
pushf
jno
mov
or
or
mov
inc
pushf
sahf
cli
inc
addr16
pop
mov
pop
push
pop
jno
into
fistps
divl
inc
out
mov
mov
popf
cmp
pop
movsb
outsb
push
sub
lcall
xchg
lods
std
mov
xchg
mov
sub
cwtl
pop
clc
mov
or
out
inc
dec
std
mov
sbb
pop
xchg
aad
add
inc
cmp
aas
out
dec
xlat
jp
pop
cwtl
add
idivl
jo
mov
hlt
testb
test
jbe
xchg
fsubr
sbb
xchg
in
in
inc
cmp
data16
adc
cmovb
pop
push
orb
mov
cmp
inc
push
jno
inc
lcall
fdivrl
or
loope
inc
adc
xchg
or
insb
sbb
or
jge
adc
pop
dec
mov
xchg
cmp
sbb
call
les
hlt
ficoms
mov
ss
or
add
sub
and
imul
jnp
fistpl
shlb
in
div
mov
js
fldt
insl
test
enter
ret
in
pop
outsb
aam
cld
add
inc
xor
mov
sti
shr
loopne
jnp
mov
mov
push
insb
and
cltd
cmc
pop
in
ret
mov
add
lea
xor
cmp
sbb
out
jg
or
mov
dec
xchg
mov
mov
or
scas
lret
scas
jb
shrl
jmp
pop
adc
sub
pop
ds
adc
sbb
mov
aaa
enter
pop
dec
push
ret
sub
out
mov
iret
sub
sub
dec
lret
dec
mov
dec
imulb
jle
dec
mov
addb
pop
xchg
dec
subl
push
jo
sbb
jae
jne
faddp
roll
inc
push
arpl
fcomps
enter
jecxz
and
xchg
push
mov
fnstsw
divb
dec
mov
xchg
outsl
push
dec
or
xor
add
mov
or
lock
pop
adc
ss
cmpsb
pusha
mov
out
inc
mov
and
out
pusha
or
mov
je
enter
mov
loopne
out
shlb
push
mov
mov
jns
sbb
je
mov
adc
into
add
or
dec
fistps
adc
mov
cld
sarl
mov
repnz
dec
xchg
add
stos
push
popa
pop
push
push
dec
inc
inc
mov
pop
sub
xchg
dec
jnp
loopne
dec
add
mov
out
mov
je
popa
std
ret
fwait
aad
fwait
mov
cld
sub
sub
lods
dec
hlt
xchg
imul
sbb
xchg
hlt
cmpb
shll
xchg
call
int3
std
aad
mov
pop
es
mov
out
and
mull
data16
addr16
je
sahf
je
adc
mov
out
xor
jl
fildl
add
xor
cmpl
sti
inc
push
push
cmpsl
mov
jno
out
mov
push
mov
movsb
push
dec
pop
fs
push
ret
pop
xlat
mov
mov
negl
adc
lret
inc
pop
xchg
in
gs
sbb
fsts
cwtl
je
jmp
mov
subb
mov
inc
sub
push
enter
push
mov
stos
or
movsb
dec
lcall
loope
nop
mov
ja
mov
mov
fs
push
in
ja
imul
push
adc
jmp
stos
popf
adc
push
pop
add
and
sti
adc
pop
xlat
lods
add
cld
mov
or
sub
cmc
push
adc
add
xor
mov
lahf
sbb
inc
cmpsl
sub
or
mov
test
add
ror
aam
test
out
addr16
xor
cwtl
mov
dec
scas
jg
cmp
pop
cmp
mov
push
into
adc
testb
add
jmp
negl
inc
repz
cmc
movl
pop
jb
stos
repz
fiadds
cmp
inc
xchg
imul
jecxz
fbstp
jmp
push
and
mov
fmull
xor
pop
cmpsl
xchg
fdivrl
stos
mov
sbb
fdivs
call
dec
push
sbb
insb
lods
int
cmp
mov
dec
adc
dec
addr16
or
orl
sbb
jp
loope
jecxz
aam
mov
push
inc
inc
shrb
mov
stos
fidivrs
xlat
iret
int3
or
mov
push
repz
js
adc
xlat
adc
lods
cmc
imul
inc
aaa
xchg
mov
lret
mov
outsl
rolb
fwait
enter
mov
push
xor
adc
jmp
and
sarl
jb
cld
mov
cmp
push
push
push
xchg
out
mov
movsb
pop
and
rorl
mov
xor
scas
sbb
jae
cli
daa
mul
pop
ljmp
and
push
popf
fbld
or
mov
outsb
aam
and
adc
out
mov
fdivs
jbe
cltd
jmp
xor
xchg
push
push
test
insb
insb
lods
xor
sub
cmp
mov
shrl
lea
inc
mov
rcl
mov
dec
push
loope
inc
mov
add
adc
and
ret
jno
push
mov
jb
push
ja
repz
push
ret
mov
cwtl
ret
jne
pop
inc
shrl
mov
nop
cltd
arpl
test
bound
lds
lret
mov
stos
jb
fmuls
cmp
cs
mov
cmpsw
addr16
push
push
inc
psubsb
pusha
jmp
mov
addr16
andl
int3
ficomps
push
cmp
ret
ret
pop
cmp
arpl
xlat
pop
dec
inc
lock
movsl
lea
add
inc
repz
lods
dec
push
or
fs
jo
sbb
inc
aas
xor
in
fmul
cmp
pop
andl
add
jmp
jmp
pop
lods
or
popf
out
jns
jo
clc
pop
xor
mov
fistpl
notb
xor
aam
xor
fdivs
daa
pop
rcr
shll
pop
or
out
imul
inc
iret
lret
jno
idivb
fwait
int3
out
inc
cmp
cmpsl
mov
pop
data16
inc
xchg
push
loope
scas
int3
fidivs
in
inc
xchg
inc
mov
mov
repnz
repnz
sub
push
jg
inc
xchg
jle
cmp
test
shll
xor
iret
dec
cs
xchg
add
mov
adc
jg
jmp
mov
adc
and
and
cmp
dec
cltd
in
bnd
jbe
inc
dec
hlt
mov
cltd
lods
xchg
ret
push
fs
jmp
mov
mov
fcompl
sub
mov
mov
and
dec
sub
into
inc
pop
push
es
push
dec
das
cmc
mov
mov
or
inc
out
mov
pop
fisubrs
dec
enter
insl
sub
loop
mov
and
dec
mov
scas
adc
or
adc
adc
dec
loope,pn
push
dec
xchg
cmpsl
mov
sbb
add
push
jl
fsubr
outsb
xor
pop
jnp
adc
sub
pcmpgtw
mov
fldl
sub
fs
push
fsts
inc
sbb
push
loope
sub
add
arpl
data16
lret
mov
xor
cmpsb
ret
cli
and
dec
stc
jmp
fildl
pop
addr16
sbb
out
inc
push
out
xchg
dec
mov
aas
mov
into
and
xchg
add
ljmp
dec
jae
stos
inc
pop
xor
xchg
sbbl
fstps
jb
inc
sarb
mov
rorl
fnstcw
cmp
xor
stos
jne
jbe
insb
mov
out
sti
inc
sti
pop
xor
sub
lcall
into
addb
mov
inc
fsubr
sbb
in
add
sahf
ret
out
negb
loopne
push
mov
inc
loop
xchg
pop
mov
adc
roll
jne
mov
and
rol
cmpsb
and
lea
xchg
mov
enter
push
fucomp
xchg
pop
rcr
push
sub
add
cmp
jb
or
mov
ds
push
fwait
dec
movsb
lods
or
push
and
mov
lcall
sub
cmp
push
movsl
roll
inc
inc
mov
pop
xchg
xchg
loope
pop
daa
or
dec
repnz
push
fwait
rolb
out
gs
cltd
sbb
scas
xchg
imul
int
movsb
sar
mov
jns
cmc
xor
push
jle
or
add
rcll
pop
rorb
or
repnz
jge
pushf
bound
or
sub
lock
cmpsl
adc
or
adc
add
or
jbe
shrl
jg
ret
pop
push
mov
daa
lcall
repnz
xchg
bound
aam
cmp
in
dec
sbb
xor
inc
aad
pop
cmp
adc
test
shr
stos
sarb
pop
sub
xchg
pop
sbbb
xchg
addr16
ds
push
leave
or
add
sbb
stos
inc
mov
cs
jg
add
lea
or
push
inc
sarb
aam
movsl
neg
xchg
sub
lahf
and
sbb
mov
test
sub
cwtl
icebp
daa
ja
cs
fwait
in
mov
fsubr
jbe
mov
stos
int
aas
pop
jmp
ljmp
fimull
add
outsl
cltd
fldcw
sub
aad
jge
cmc
fwait
sub
lret
sahf
pop
das
xchg
packsswb
mov
mov
and
xor
into
repz
pop
outsb
icebp
add
cmp
imul
sahf
jmp
dec
pop
xor
xlat
test
lods
pop
dec
pop
aaa
movsl
push
and
push
push
sub
inc
or
sub
pop
mov
or
fiadds
mov
xchg
sbb
rcrl
inc
jl
cmp
imulb
loope
inc
jnp
js
sarb
jge
sahf
fwait
mov
pusha
sub
xor
outsl
rorb
xor
addb
jae
push
push
add
test
mov
pop
add
lock
cli
cmpsl
pxor
in
incl
sbb
repnz
jno
inc
dec
add
orl
dec
mov
push
mov
lods
sahf
insb
mov
push
pop
push
sub
lret
cwtl
test
dec
or
inc
add
pop
pop
dec
les
pusha
or
movsl
xchg
pushf
add
aaa
push
movsb
mov
outsb
sar
mov
lods
or
popa
sbb
push
cwtl
cmp
fs
or
shlb
fstps
adc
push
sbb
jns
mov
or
loopne
in
pop
shlb
jge
loopne
xchg
xchg
dec
inc
cmp
bnd
adc
sbb
int
iret
xor
jl
mov
in
xchg
pop
jns
inc
mov
notb
mov
dec
xchg
push
imul
fldenv
cld
aad
std
dec
arpl
arpl
sbb
lahf
insb
dec
sbb
rcll
pop
cmpb
xchg
loop
jae
mov
cmpsb
cli
rcll
in
and
imul
insl
popa
jns
sub
outsb
sbb
fidivrs
loope
sbbl
stos
cmp
mov
or
ja
dec
push
iret
push
cmp
pop
dec
fisttps
in
cmp
shld
jbe
cltd
repnz
clc
aam
pop
xchg
jne
sbb
xor
movsl
ds
push
filds
xor
insl
jns
push
add
sub
cld
mov
jns
outsl
cmpsb
es
sbb
pushf
and
xchg
jmp
jne
mov
popa
cmp
addl
xchg
ds
aam
mov
or
std
ja
gs
xchg
dec
inc
add
ja
xor
mov
and
xchg
fmul
mov
add
fiadds
xlat
xor
cmpsl
mov
mov
mull
std
lcall
push
dec
movsb
mov
out
or
cmc
repz
dec
ja
aam
cmp
xor
cli
lock
cmp
or
cmp
movsb
mov
pop
das
and
add
cwtl
lret
push
push
or
sbb
mov
sbb
arpl
dec
mulb
ret
and
test
mov
sbb
mov
outsb
mov
cmpl
add
das
test
push
mov
sbb
jge
sub
inc
mov
insl
xchg
scas
scas
sbb
idivl
loop
xchg
aad
movsb
setp
mov
jbe
stc
cmpl
mov
sahf
ja
jmp
in
mov
js
mov
scas
jg
pop
push
lods
ljmp
inc
jno
rcll
stc
lea
push
leave
inc
cmp
dec
inc
jae
aam
xor
outsl
xor
sti
push
xchg
push
sbb
data16
fidivs
mov
in
mov
add
and
pop
mov
jg
mov
pop
jg
mov
je
or
je
cmp
pop
jmp
pop
pop
leave
dec
daa
int
int
int3
pop
ja
pop
stos
pop
in
or
dec
rorb
lods
arpl
push
dec
inc
mov
loop
fsubl
mov
leave
in
jnp
pop
out
push
imul
shlb
mov
adc
pop
test
out
iret
mov
pop
enter
hlt
negl
mov
xor
stos
pop
loop
add
aam
fimuls
cmp
add
push
xor
cmp
int
or
in
fsub
scas
and
test
sub
fdivrs
nop
xlat
out
ficompl
faddp
rcl
call
fsubrs
or
mov
dec
mov
ret
rorl
pop
xchg
jno
roll
and
push
sbb
mov
inc
in
xchg
xlat
mov
mov
jae
test
aam
pushf
xchg
orl
or
push
loope
fs
mov
stos
sub
and
dec
outsb
xor
mov
in
pop
jl
or
xchg
jl
push
push
test
mov
pop
test
imul
pop
xor
mov
inc
adc
dec
filds
xor
mov
decb
addr16
add
jno
xor
adc
fistpll
inc
jb
stos
aas
andl
stos
das
xchg
lahf
imul
lods
fdivl
xor
pop
repz
repz
dec
jno
shrl
xor
xchg
test
cmp
push
inc
mov
pop
adc
pop
jae
mov
push
pop
in
jmp
scas
add
and
pop
loopne
adc
mov
cmp
pop
or
and
mov
roll
sbb
xor
sbb
push
jmp
ret
dec
inc
fisttpl
lods
jl
fisubrl
ljmp
sub
inc
pusha
xchg
mov
fisttpl
sub
out
stc
insl
mov
loopne
stos
pop
lea
and
sbb
xor
addr16
jmp
jns
test
fwait
dec
xchg
xorb
stos
fwait
sub
cs
jge
fcmove
sbb
cmp
aaa
xchg
mov
xor
xor
push
jns
add
dec
sar
or
stc
mov
enter
add
pusha
push
ror
jb
hlt
sbb
dec
les
xchg
adc
outsb
pushf
or
jb
jno
aas
test
lods
cs
mov
nop
mov
pop
outsl
mov
push
mov
jg
std
jp
in
mov
jo,pn
testb
xor
xor
test
xor
mov
ljmp
or
xchg
cld
lock
adc
mov
sub
or
and
cmp
fisubrs
jl
divb
mov
loopne
xlat
call
scas
sbb
adc
xchg
jb
daa
mov
jne
out
cltd
mov
lods
sti
loope
mov
scas
int3
inc
ficoms
xchg
dec
subb
in
pop
in
ljmp
es
push
jmp
aam
xor
add
popf
test
in
push
inc
adc
add
mov
outsl
andb
push
or
dec
fiadds
ja
stos
jge
pusha
xchg
in
lea
mov
sar
lcall
xchg
add
or
popa
cs
jnp
mov
xlat
outsb
pop
addr16
push
out
cld
jge
mov
loop
call
xlat
mov
jmp
push
add
mov
jnp
fwait
ds
gs
pop
push
xor
fimuls
shlb
fneni(8087
es
and
icebp
fistpll
mov
push
lret
dec
cld
dec
sub
std
xor
xlat
jne
jne
cmp
and
rorl
lods
sub
push
cmpsb
push
lock
pushf
gs
lods
bnd
cld
sub
mov
or
jbe
jecxz
cmc
outsl
arpl
aad
or
call
mov
aad
sbb
inc
sub
sub
sbb
dec
ficompl
gs
and
inc
rcrl
push
jno
in
mov
mov
push
push
xor
add
sarb
scas
mov
adc
sarb
enter
ja
or
fsubs
daa
dec
cld
add
sbb
sub
mov
mov
stos
nop
inc
stos
cmpsb
push
test
ret
outsl
test
jp
push
and
add
iret
aas
inc
fisttps
mov
int
mov
sub
sarl
cmp
xor
lahf
mov
mov
fdivp
ljmp
xor
push
push
cli
jmp
add
jns
pop
outsb
sub
sbb
push
hlt
icebp
jne
mov
sub
std
icebp
jns
cmp
cmpsl
test
stc
xchg
xchg
les
inc
test
clc
sub
push
imul
fcmovbe
xchg
adc
fsubrs
push
jg
imul
cwtl
cmp
outsb
mov
inc
push
int3
fsts
out
dec
mov
pop
js
fists
rolb
xor
insb
xchg
lock
and
fcom
cmp
sbb
sbb
imul
pop
add
xor
popa
inc
fldt
ljmp
loop
movd
imull
out
push
fldcw
xor
jmp
mov
or
bound
push
inc
out
aad
sub
sbb
pop
out
enter
enter
adc
or
stc
inc
divl
lods
adcb
clc
mov
pop
dec
push
pushf
xchg
push
ret
jbe
push
adc
pop
div
sbb
push
add
mov
adc
ss
xlat
faddl
xchg
je
popf
push
cmp
jecxz
adc
xor
lret
push
fsubrl
js
jecxz
sub
mov
in
inc
sbb
or
inc
xor
pop
mov
test
hlt
std
push
mov
stos
stos
nop
aam
add
nop
push
sbb
andl
out
stc
mov
inc
adc
mov
pop
cmp
in
aam
out
cs
mov
movsb
cmpsb
stos
mov
or
pop
fwait
mov
mov
cmp
je
lds
fsubrl
jmp
push
call
cmp
or
sbb
stos
scas
roll
dec
fs
aam
movsl
ss
jns
and
imulb
inc
loopne
jns
jne
push
sub
dec
push
ss
outsb
icebp
ja
ja
ficompl
mov
fwait
xchg
xor
int
out
push
add
add
mov
pushf
mov
or
loop
movsl
sbb
push
ss
gs
dec
jo
stos
arpl
js
push
sbb
cltd
jmp
pop
jge
and
leave
inc
test
and
fs
or
ficompl
xchg
jmp
cwtl
or
rorb
or
cli
mov
int
sub
popa
aas
jg
mov
mov
dec
mov
movsl
xorl
cwtl
mov
mov
into
mov
or
iret
repnz
or
mov
push
push
dec
in
es
xor
push
and
ficoml
jo
mov
nop
push
iret
movb
cmp
in
testl
sarb
mov
pop
arpl
pop
cs
mov
scas
lea
inc
ja
aas
jnp
mov
xchg
in
xlat
ret
jge
push
cmp
cmpsb
xorl
in
adc
pusha
xchg
sti
rcrb
jg
insb
sbb
adc
mov
pusha
lock
loopne
cmp
cltd
xor
jge
mov
loopne
jae
and
adc
inc
jne
sbb
mov
or
mov
outsl
add
xchg
fistl
and
sarb
hlt
jb
clc
aad
fwait
lock
and
jbe
or
sahf
int3
sbb
mov
mov
xchg
push
sbb
dec
loop
mov
xlat
pop
popa
mov
icebp
ja
loop
mov
test
pop
push
or
cmp
and
adc
mov
xchg
popa
aad
cmpsb
out
push
mov
loopne
add
add
xchg
mov
fildl
sub
push
adc
push
cmp
jb
insl
pop
pop
fisubs
xor
cmp
jnp
sbb
les
mov
fcompl
jae
jmp
fiadds
push
xor
shrl
repz
stos
cmc
inc
mov
cld
fsubl
cwtl
out
pop
dec
xchg
sub
lcall
jmp
add
cli
dec
or
popf
cmpsb
aaa
xchg
mov
iret
and
mov
scas
ss
xor
fbld
sbb
cltd
push
std
mov
loope
cs
inc
or
jmp
jo
xchg
cmpsl
test
stos
jbe
lret
sbb
idiv
rolb
pop
push
jge
clc
lds
xchg
mov
and
dec
dec
xor
stos
sbb
and
pop
or
popf
dec
loopne
push
jns
outsb
cmp
fmuls
call
mov
xchg
xchg
mov
ja
flds
xor
push
lret
add
xor
jb
push
dec
imul
ja
mov
adc
xchg
sbb
aaa
ss
dec
sbbb
popa
xor
mov
movsl
test
mov
fucomi
repnz
cwtl
add
pop
aad
das
daa
sub
xchg
cltd
cltd
mov
push
iret
pop
fwait
cmp
ret
into
pop
xchg
xchg
pop
shll
lds
lds
or
pusha
jo
lahf
xor
cwtl
fisttps
xor
push
inc
imul
enter
mov
mov
icebp
jns
push
inc
push
inc
pop
push
jo
adc
mov
mov
movsl
call
pop
mov
mov
or
imul
mov
push
sarb
cltd
or
ljmp
xor
scas
aas
nop
adc
cli
imul
cld
bound
clc
packuswb
cmc
psrlw
jg
fwait
sub
test
jnp
xchg
mov
imul
or
dec
inc
popf
mov
xchg
or
sub
rcrl
negb
cmpsl
bound
jp
push
cmpl
loop
cmc
dec
cli
popf
pop
mov
cmc
adc
gs
ja
jge
ret
in
repnz
or
jle
jns
cmp
or
xor
mov
in
jge
jne
or
movsb
mov
jmp
mov
outsb
cmc
fists
fs
in
mov
mov
testb
xlat
outsl
insb
out
jecxz
sbb
hlt
dec
jae
insb
add
data16
daa
pop
mov
test
pop
clc
push
das
loopne
sbb
mov
pop
adc
xlat
or
loope
sub
add
aas
jns
push
and
ja
add
aad
inc
jp
xchg
inc
push
and
pop
mov
xchg
iret
das
loop
sti
repz
pop
clc
int
imul
inc
or
insl
loopne
rorb
loop
sub
sbb
fdivrl
jno
push
push
cmp
pop
jmp
enter
push
mov
cmp
jnp
adc
int
sbb
aaa
sbb
adc
dec
mov
bound
imull
cvtps2pd
ret
xor
push
or
rcrl
int3
inc
mov
pop
mov
mov
nop
icebp
shlb
imul
jo
in
insb
pop
mov
call
imul
dec
out
jge
loopne
cmp
clc
cwtl
add
push
outsb
push
iret
xor
mov
pop
or
pop
xor
imul
sbb
push
mov
cmc
js
mov
stos
scas
cmp
adc
push
in
ret
adc
or
sub
push
mov
mov
sahf
cs
cmc
and
or
sahf
insl
pop
out
scas
aaa
pushf
and
adc
xor
or
jae
or
xorl
mov
neg
pop
cwtl
vmwrite
pop
mov
jne
pop
in
dec
call
xchg
push
xrelease
fwait
nop
sbb
cld
or
inc
pop
gs
mov
shll
es
sbb
lcall
cld
pop
jb
pushl
sbb
dec
pop
js
jbe
push
inc
sbb
shll
push
mov
faddl
dec
add
inc
jge
mov
sarb
mov
cmpsb
repnz
sub
inc
add
rol
inc
sbb
sbb
scas
daa
dec
insl
aad
push
addr16
fxch
adc
shll
sub
out
inc
push
xor
jmp
mov
imul
or
fs
xor
fs
mov
out
inc
ljmp
js
inc
imul
es
dec
stc
scas
ds
sub
out
popa
enter
jmp
cmp
iret
inc
push
movlps
rolb
push
xchg
mov
rorl
in
pop
sub
jno
popf
flds
pop
cmpsb
jnp
lds
adc
or
sar
xchg
test
rorl
mov
out
mov
aad
lock
leave
fnstenv
dec
in
cmpsb
sbb
sbb
push
cmp
cmpsb
outsl
dec
and
jg
jo
pop
xchg
jp
icebp
xchg
loop
ret
adc
jle
push
fldcw
adc
fisubrs
ficoms
xor
jbe
out
popa
rcll
sub
and
push
adc
xorl
or
cmpsb
js
xchg
outsb
arpl
cwtl
ljmp
sbb
aas
shrb
push
inc
imul
ljmp
out
lock
jae
faddl
sub
mov
outsl
insb
ret
add
pop
sbb
xlat
stos
jnp
sbb
int
sbb
adc
xchg
out
rcrb
fdivrl
push
test
inc
cmp
xchg
mov
jle
js
jns
sahf
jbe
les
adc
stos
add
js
ds
xchg
pop
inc
popf
and
out
es
or
outsl
int3
popa
mov
xchg
xor
pop
xchg
cmp
out
fbstp
adc
movsb
lret
rcll
jle
jb,pn
mov
xchg
das
ret
orl
lahf
sti
mov
mov
xor
dec
add
or
sbb
les
std
cmpsb
mov
inc
mov
xor
imul
or
ja
popa
insl
insl
cld
out
lcall
cwtl
inc
mov
dec
inc
lock
xlat
pop
mov
int3
xchg
iret
nop
imull
xchg
fnstenv
sti
mov
xchg
dec
lods
flds
hlt
pop
scas
push
repz
or
in
xchg
pop
add
pop
inc
and
inc
int3
mov
pop
cmp
dec
xchg
sbb
stos
sub
mov
iret
cmp
cmc
pop
dec
sti
rcll
push
xor
cmp
xor
mov
test
jmp
sbb
aaa
sub
sbb
test
out
push
fisttpl
push
sub
inc
aaa
fdivrp
xlat
movsb
and
add
in
call
je
enter
jmp
sbb
in
loope
add
loope
and
mov
jle
xor
fstl
je
jne
ja
adc
sbb
push
cmova
ja
inc
popf
and
cmp
rclb
adc
subb
das
bswap
sbb
popa
xchg
idivl
inc
popa
arpl
mov
xchg
xor
xchg
daa
or
rorb
lret
jne
daa
stc
pop
cwtl
loopne
sub
mov
pop
mov
shll
iret
xchg
mov
dec
dec
dec
inc
ljmp
dec
push
xor
std
xor
push
jo
xor
lahf
adcb
and
and
inc
or
adc
cs
stos
scas
push
sub
pop
out
cltd
clc
mov
or
xchg
mov
dec
repz
sarb
xor
clc
stos
sub
inc
aam
fadds
loopne
addr16
fisttpl
push
lret
dec
or
push
mov
cmc
and
lcall
sub
mov
xchg
iret
lock
fiaddl
pop
loop
lcall
in
lock
inc
or
ljmp
or
cwtl
jg
mov
adc
icebp
mov
out
cmp
or
imul
dec
pop
div
dec
pushw
repz
or
mov
test
movsl
and
pushf
in
data16
jle
into
int3
dec
fcmovne
ss
and
cmp
popa
in
in
outsb
lds
and
inc
pop
stos
lock
bound
cwtl
aas
in
dec
mov
clc
push
push
dec
sub
cmc
cwtl
sbb
subb
imul
pop
in
or
inc
cmp
and
clc
loop
sbb
mov
adc
scas
xchg
inc
sahf
in
fsubl
xchg
push
mov
insb
adc
and
rorb
lock
jno
jbe
adc
xor
dec
jp
jnp
shlb
sbb
dec
mov
add
inc
js,pn
lock
leave
adc
arpl
imul
insl
int3
pop
pop
sbb
ljmp
mov
out
repz
jle
xchg
cld
mov
fcomps
aas
int
das
stos
dec
loopne
or
test
dec
int
hlt
or
push
insl
xor
cli
stos
fisubrl
ret
add
mov
cmp
sbb
arpl
cs
push
jp
fnsave
jge
scas
shlb
fmuls
pop
and
in
jmp
and
out
icebp
push
filds
sbb
adc
bound
inc
mov
repz
fs
push
pop
mov
fldl
push
dec
or
dec
out
mov
fsubrl
in
mov
mov
js
cmpsl
sbb
cli
clc
fwait
stos
imulb
lods
sub
dec
ret
jo
addl
nop
ss
nop
and
repnz
idivl
daa
mov
mov
jle
aam
loope
adc
lret
inc
mov
in
test
gs
fbstp
sbb
ja
push
loope
mov
aas
ret
test
inc
adc
or
call
jne
inc
adc
sahf
adc
adc
cmp
add
les
push
out
jno
ss
sbb
dec
or
imul
cmp
scas
out
test
ja
push
mov
dec
xor
push
cmp
mov
cs
pop
adc
mov
jb
sti
lock
sbb
sub
inc
sarl
mov
cmpsb
cmp
pop
xor
leave
lcall
cli
imul
lds
mov
call
push
movsl
ljmp
adc
sub
push
pop
in
iret
dec
mov
cmpl
dec
xor
mov
sbb
cmp
adc
jmp
mov
jb
mov
jge
add
and
add
sbb
mov
mov
rcr
mov
jecxz
leave
icebp
mov
mov
jl
aam
dec
inc
into
out
imul
mov
mov
loopne
cmp
daa
jo
mov
fcomps
xlat
lds
jne
in
lret
out
stc
adc
insb
rcrb
cmp
cmp
dec
push
dec
mov
mov
adc
test
call
adc
xchg
mov
test
call
pop
push
cmp
ljmp
push
pop
sbb
ja
adc
cs
in
lds
sub
lret
mov
inc
cmc
dec
fwait
mov
cmp
daa
arpl
sub
adc
add
cmp
inc
jp
jg
lds
pop
out
addr16
stos
mov
mov
jmp
sbb
sbb
mov
pop
test
repnz
in
mov
mov
mov
repz
lods
and
mov
xchg
mov
cmp
sbb
and
jl
loop
lret
and
cmp
jb
mov
in
pushf
mov
add
mov
inc
inc
in
xchg
pusha
or
shlb
push
test
sbb
mov
lock
push
dec
fwait
aas
orl
sbbl
mov
sbb
xchg
pop
mov
inc
mov
popf
cltd
sbb
dec
dec
cmc
cli
je
xor
xor
aas
mov
dec
push
adc
loopne
sbb
add
jmp
jge
leave
push
int3
add
inc
dec
cmp
adcb
xchg
push
sub
ret
push
imul
mov
adc
lods
or
aad
popf
cwtl
dec
cmpsl
add
sbb
cmp
dec
mov
push
xchg
mov
and
sub
test
and
test
xor
mov
jno
into
fs
and
sub
mov
mov
cmpsb
jmp
and
jge
test
popf
in
mov
add
xor
cltd
cmp
in
push
add
repz
out
pop
mov
jl
es
jne
cmp
lahf
out
fwait
and
sbb
cmc
jne
lahf
orl
ror
or
cmpsb
es
stos
in
mov
cmp
fists
and
loope
push
fdivs
popf
xchg
jmp
xchg
pop
xchg
ja
out
insl
adc
stos
jge
mov
pop
push
cli
xorl
iret
jnp
jmp
push
or
enter
movsb
pop
rorb
pop
sub
dec
cmp
dec
or
xchg
sbb
inc
pop
add
fistpl
xchg
xchg
jno
pusha
dec
dec
idiv
jmp
mov
jbe
sbb
mov
repz
sbb
push
ffreep
jne
mov
imul
vpsubsb
push
shr
enter
inc
loopne
fs
inc
jae
xor
ss
push
enter
pop
cmp
dec
xor
cld
or
les
mov
out
leave
add
fdivp
or
fs
jo
test
jmp
pop
pop
pop
mov
int3
or
subl
testb
test
mov
add
rcr
jb
clc
loope
daa
adc
dec
aad
rcr
jp
mov
add
clc
adc
jnp
aam
pop
out
out
cli
lret
outsl
insl
jae
mov
cltd
je
or
sbb
xchg
outsb
dec
xor
lea
push
lcall
mov
ds
mov
mov
pop
jl
add
lret
es
test
pop
and
xacquire
xor
cltd
orb
pop
cmp
rcrl
adc
adc
cmpsb
ss
aas
xor
push
fmull
les
loop
enter
into
dec
lcall
std
or
ja
or
add
cld
jge
xor
dec
enter
scas
xlat
cs
jmp
add
mov
stos
sub
xchg
js
out
imul
mov
xchg
sub
out
dec
jge
insb
sarl
push
test
call
test
roll
mov
sub
jp
arpl
sbb
sbb
jecxz
arpl
xchg
mov
cld
fwait
jle
push
add
stos
jnp
fstpl
xor
sbb
or
loope
or
mov
stos
push
int
inc
sub
push
inc
lcall
sbbb
shll
push
lret
xchg
test
cmp
fwait
aas
xchg
cs
dec
push
dec
pushl
add
cli
xchg
adc
sbb
adc
fstpt
out
mov
xor
and
add
and
push
negb
push
jne
xor
jo
pop
mov
lock
and
neg
mov
stc
in
lods
xor
push
aas
setnp
les
insl
lahf
fcompl
adc
pop
pop
adc
ja
push
addr16
test
in
imul
xchg
and
inc
test
imul
bound
loop
cld
test
jb
jne
cmp
dec
test
jg
in
pusha
xchg
leave
mov
aaa
sbb
lret
lods
xchg
dec
iret
lret
xor
std
mov
repz
ljmp
sti
lahf
pop
bound
jne
sub
or
sbb
hlt
ljmp
stos
fmul
adc
sub
aaa
push
jnp
sbb
pop
cmp
jmp
mov
test
push
mov
add
cmp
or
xor
jbe
mov
cs
jmp
jmp
aam
xchg
cmp
mov
jns
aam
or
jo
xchg
inc
or
xchg
xlat
cwtl
mov
aaa
mov
cltd
jge
xchg
dec
jnp
outsl
mov
lods
sbb
scas
ficoml
cs
dec
mov
or
enter
mull
inc
pop
jecxz
mov
or
mov
or
clc
fwait
shrl
ds
out
mov
jns
sub
cmp
daa
shll
cld
cmc
sti
aam
or
mov
mov
push
inc
je
sub
and
sbb
pop
ds
popf
lahf
fcmovnb
movsl
mov
sub
mov
add
dec
jb
scas
or
cli
jb
jecxz
scas
test
mov
test
or
pop
repz
push
sub
jge
pop
andb
cmp
add
add
addl
pushf
mov
rorl
push
test
and
daa
fistl
and
push
sbb
pop
enter
lahf
sbb
loop
pop
sub
inc
nop
repnz
push
js
mov
aam
cmpsl
sti
lods
mov
fistpl
mov
jb
add
and
rcr
push
in
testl
es
and
mov
cmpsb
adc
sbb
divb
lcall
jle
lret
or
pop
loopne
mov
and
pop
jnp
je
cmp
cmp
adc
mov
out
mov
call
gs
aas
mov
popa
insl
sub
jg
xchg
jecxz
mov
shrl
inc
xchg
iret
jmp
outsb
lock
mov
xor
mov
mov
aas
push
and
inc
rcl
lahf
inc
push
dec
dec
cmp
mov
in
scas
dec
cmp
inc
add
cmp
divb
outsl
push
dec
mov
cmp
int3
dec
add
xor
loope
or
jp
not
enter
add
or
mov
aaa
subb
xchg
mov
mov
aad
xchg
fidivrs
xor
lret
pcmpgtd
jnp
fwait
in
fldt
out
out
call
popf
movsl
cltd
jge
or
aas
mov
jae
jns
fnstcw
pop
jge
rclb
xchg
jecxz
negl
add
mov
or
outsb
sub
rclb
repnz
cmpsl
jle
and
pusha
sbb
mov
test
fisttps
sti
arpl
fwait
fwait
xchg
jnp
cmp
pop
fidivs
jge
cld
pop
push
mov
inc
call
or
stos
ret
mov
xchg
bound
icebp
clc
lahf
test
test
sbb
or
xchg
lods
call
cmc
mov
cmc
loopne
leave
fsubp
mov
rcll
xchg
jmp
push
add
inc
add
int3
lea
je
or
icebp
pop
sbb
adc
and
mov
repnz
mov
add
fcmovbe
sub
ljmpw
push
sub
lods
pop
sub
icebp
imul
stos
pop
jno
or
sti
push
push
xchg
ljmp
mov
dec
scas
jnp
jae
sti
add
mov
add
pop
and
insb
test
cmp
in
in
mov
nop
xchg
pushf
outsl
xchg
push
imul
cmpsb
scas
adc
imul
lods
jg
aas
test
mov
pop
rclb
popa
pop
add
mov
lea
xchg
movl
xchg
xor
scas
xchg
movb
aad
add
mov
cltd
push
lret
scas
push
add
fists
fstl
scas
das
loop
or
rclb
pop
mov
loopne
das
jae
jns
cmp
mov
es
lea
ja
pusha
xchg
stos
cli
mov
cmp
cmpsl
scas
leave
jno
or
lds
or
ljmp
sub
seta
sti
je
movsl
sub
iret
jmp
stos
add
aaa
scas
js
idiv
adc
imul
or
adc
inc
out
jle
cli
fsub
js
xchg
sti
scas
and
sbb
sbb
loop
mov
mov
inc
ret
and
shrl
leave
push
lret
cli
push
mov
sub
xchg
imul
lahf
jmp
adc
imul
add
aam
jne
jge
mov
push
jne
movsl
cmpsb
mov
stos
sub
dec
or
pusha
push
out
pop
sbb
push
test
xchg
in
cwtl
insb
js
dec
cmp
xchg
movl
lret
fisubs
loopne
push
imul
les
xchg
lods
and
aaa
push
out
mov
popf
jl
pop
xlat
jl
and
xor
adc
jns
aas
sub
pop
lds
mov
xor
push
lcall
movsl
mov
pop
stos
int
lahf
mov
pop
sbb
arpl
lret
mov
add
call
xlat
popf
and
repnz
and
ds
es
and
sub
jns
pop
outsl
jg
iret
push
decl
cmpsl
cmpsb
mov
jg
sbb
inc
mov
mov
inc
lds
gs
sbb
jle
mov
lret
in
icebp
jnp
adc
xor
lret
aaa
stos
movsl
sbb
pop
xchg
pop
rcl
sti
and
clc
adc
addl
xchg
iret
mov
roll
lcall
dec
in
or
leave
dec
leave
sub
jmp
cld
hlt
jbe
pop
mov
adcb
xchg
in
movsb
xor
dec
int3
fcmovnu
xchg
mov
outsl
imul
and
mov
imul
ret
or
shll
jne
mov
mov
cmpsb
inc
pop
fdivr
sahf
shrl
mov
ret
jmp
andb
dec
cmpsb
dec
adc
insl
sub
in
aas
enter
imul
sub
jb
in
sbb
in
xor
adc
xor
imul
enter
adcl
jae
js
fcomp
test
xchg
ficoml
jge
dec
mov
sahf
enter
inc
cmp
dec
sbb
dec
mov
add
inc
adc
ret
nop
sysret
sbb
adc
fimuls
push
clc
cmp
jb
pop
mov
push
fcoml
cmc
pop
call
ljmp
mov
cltd
cli
mov
and
or
out
stc
dec
test
mov
jns
push
cmp
and
adc
adc
add
xchg
mov
xchg
fbstp
pop
push
jmp
dec
xchg
xor
or
std
cmc
sub
push
jmp
pop
add
enter
fbstp
ror
xchg
lcall
cld
mov
or
js
mov
stc
pop
adc
xchg
mov
les
mov
cwtl
cwtl
dec
cmp
jae
mov
cmpsb
jno
pop
xchg
adc
das
daa
das
fldl
cmpsb
mov
xlat
push
and
pop
int3
mov
gs
out
xor
mov
mov
sbb
xchg
inc
shrb
dec
iret
sub
imul
dec
push
xchg
in
ret
subl
mov
sahf
leave
and
in
and
mov
mov
out
adc
aam
add
xor
pop
test
add
jle
jbe
xor
repz
and
scas
lret
sub
sar
mov
das
cld
stc
outsl
mov
fidivl
sbb
pop
arpl
pushf
ljmp
push
and
call
mov
mov
ret
mov
push
mov
push
jae
scas
or
lods
jb
lds
mov
or
adc
adc
pop
orb
scas
inc
cmc
inc
decb
sub
leave
inc
fisubs
stos
daa
popa
mov
ja
cs
add
fisttpll
mov
repnz
adc
jns
dec
push
fdivrp
out
mov
push
mov
dec
dec
cmc
dec
imul
int
mov
lds
jnp
mov
jno
pop
dec
and
push
jle
jns
mov
lret
pop
or
aaa
repnz
aad
aam
lcall
mov
test
cwtl
dec
sti
scas
jmp
xor
sub
aas
pop
jb
and
fsubrl
cmc
mull
es
cmpsb
jmp
dec
or
jg
movsb
ds
cmp
pop
sub
add
popf
push
mov
mov
rsm
or
clc
nop
bswap
mov
xor
mov
fld1
lahf
cmc
mov
fnstenv
mov
push
pop
push
sub
add
pop
push
xchg
lahf
inc
mov
push
mov
mov
mov
jmp
mov
adc
jecxz
sbb
xchg
dec
insb
cli
inc
fwait
out
pushf
dec
mov
es
in
loope
add
pushw
cmp
pop
xor
imul
mov
xor
nop
lahf
xchg
xchg
nop
xchg
bound
leave
xchg
xlat
cmp
lds
jmp
inc
jmp
rcrl
cmovb
das
mov
jb
jl
call
mov
mov
das
push
icebp
sub
popa
pop
test
cmpsl
addb
xchg
inc
jmp
subb
sub
push
jg
sahf
push
sub
insl
mov
xor
adc
aam
xchg
les
enter
push
popa
add
push
sbb
aaa
stos
xor
xorl
adc
pop
or
mov
adc
push
andb
mov
lds
inc
sbb
lock
mulb
push
cli
imul
test
es
rcrl
outsl
lahf
aad
mov
int
fistps
lret
jle
or
dec
xchg
push
push
push
add
mov
or
fsubs
sub
aaa
movsb
ljmp
rcr
out
loopne
mov
sbb
add
decb
lds
add
mov
jmp
or
pop
xor
cwtl
sub
pusha
pop
push
cld
xchg
and
rcr
imul
mov
mov
xchg
push
mov
push
xchg
add
pusha
movsb
and
in
and
stos
in
xor
add
xchg
dec
jp
xor
cli
scas
imul
shrl
push
les
gs
pop
fcmovnbe
mov
and
cld
bound
test
push
xor
popl
adc
popa
push
loop
jne
push
cmp
pop
jnp
pop
fnstsw
sbb
xor
mov
imul
cld
push
xchg
mov
xlat
orl
mov
ret
sub
ret
jne
sub
jg
mov
aaa
popf
sarb
inc
pop
aad
sub
aam
sub
in
pop
jmp
mov
and
xor
stos
and
sub
cmp
push
jae
push
sub
dec
lret
add
mov
idivb
and
sub
jnp
push
mov
loopne
dec
pop
ret
sbb
pop
iret
aaa
xchg
aas
stos
push
out
aad
imul
int
arpl
dec
jle
ja,pt
sub
cmpsl
mov
shlb
inc
jno
lret
mov
xchg
inc
mov
push
int
je
xor
gs
fimull
mov
daa
loope
hlt
pop
jno
test
jmp
dec
sub
inc
fidivs
or
cmp
and
sub
imul
sub
jb
test
push
scas
pop
sarb
xchg
imull
cmpsl
cmp
imul
scas
rcl
mov
jno
scas
addr16
inc
fcmove
scas
cli
sub
jg
pop
or
test
arpl
bound
mov
mov
pop
cmp
jns
sub
outsl
int3
fstpl
jp
iret
inc
xor
adc
lea
sbb
and
inc
call
xor
xor
shlb
fdivrl
push
insb
fsubl
adc
sbbb
je
cmp
sbb
push
test
sbb
push
lret
popa
mull
in
jmp
adc
fwait
inc
push
outsl
sub
sbb
lahf
pop
std
or
sbb
or
iret
daa
mov
sub
loopne
mov
jmp
lret
aaa
adc
xchg
inc
pop
mov
ret
fcmove
mov
outsl
shrb
ret
repnz
call
add
cli
and
push
push
jae
jmp
jl
pop
popa
into
inc
mov
xchg
inc
int
cmpsb
test
sbb
cmpsl
rol
clc
pushf
cmpl
and
daa
aad
inc
jo
into
rcr
push
aad
or
mov
std
inc
cmp
int3
test
sbbl
jno
xlat
ja
dec
inc
scas
xchg
and
mov
xchg
cli
das
sbb
mov
mov
xor
das
push
lds
int3
mov
int
dec
je
sbb
pop
or
push
cmc
adc
sbb
dec
cli
test
lea
andl
negl
es
cmp
adc
imul
lea
test
jecxz
aas
add
popa
and
scas
scas
movsl
cmp
push
outsb
xchg
mov
cmc
inc
adc
lret
xchg
popa
aas
xor
daa
cli
or
push
and
mov
in
popf
negb
cmc
test
and
cltd
xlat
cs
insl
leave
in
filds
les
loopne
mov
fdivrl
popf
test
push
pop
outsl
sub
enter
jmp
pop
test
add
enter
xchg
jmp
dec
adc
and
out
testb
sahf
psubsb
mov
cmpb
push
sbb
pop
adc
jo
mov
mov
xor
pop
sub
cltd
jg
leave
xchg
inc
inc
fcomps
and
enter
enter
xchg
loop
icebp
or
movsl
ljmp
push
xchg
out
loope
jge
std
pusha
cmp
testb
sar
jo
push
mov
int3
mov
sub
loope
mov
pop
push
xlat
pusha
loope
arpl
jno
sbb
leave
mov
xchg
out
rcll
mov
and
outsb
and
and
jle
cld
push
mov
bound
in
pop
aam
or
je
fsubs
xor
jo
jo
and
xchg
cmp
mov
add
adc
inc
add
dec
adc
shlb
mov
dec
dec
shll
jg
sub
mov
mov
mov
push
repz
data16
int
popf
inc
adc
xchg
je
stos
repnz
das
out
xor
aaa
add
lods
mov
shl
cmp
movsb
fidivl
aas
movsb
int3
inc
outsl
xor
adc
dec
repz
fwait
xor
mov
push
cmc
adc
pop
cwtl
push
adc
jecxz
and
cltd
sub
pop
fisubrs
ficoms
add
mov
movsb
enter
push
xor
pop
in
add
bound
jecxz
dec
imul
sbb
inc
pop
mov
in
ja
push
jbe
jnp
cli
mov
xchg
push
dec
std
mov
in
xchg
outsw
sub
cld
cmp
cmc
cltd
push
sbb
pop
lds
xchg
cmp
mov
xor
inc
sub
cltd
xor
mov
in
cmp
loopne
ret
push
mov
jbe
xor
fs
inc
or
pushf
adc
mov
jb
pop
push
lods
pusha
jp
sbb
ljmp
mov
out
call
xchg
scas
lret
jbe
sub
cmp
pusha
xchg
gs
cmp
movsb
lods
ja
xor
xchg
mov
fsubs
int
les
and
and
push
fimull
mov
pop
inc
or
insb
mov
xchg
adc
int3
repnz
arpl
and
dec
mov
cmp
inc
jmp
push
adcb
adc
push
scas
pop
sub
lahf
sbbl
cmp
icebp
cmp
and
ret
pop
push
movsb
mov
jecxz
and
xchg
cli
jecxz
out
cmp
pop
into
dec
jnp
daa
call
pop
mov
int3
pushf
stos
cmp
jb
inc
mov
xor
imull
xor
scas
pop
cmpsb
in
xor
xlat
in
stos
push
add
fwait
ja
inc
mov
mov
loop
push
ja
push
push
jecxz
add
rep
and
sbb
push
push
mov
out
push
sub
out
ret
sti
ret
fdivs
and
bound
clc
xchg
mov
cli
dec
mov
dec
push
xchg
test
negl
hlt
and
decl
out
jecxz
outsb
mov
xor
rcll
sbb
stos
inc
ds
adcb
cs
movsb
loop
xor
ss
pop
or
sbb
push
fwait
dec
adc
sbb
xor
jno
adc
hlt
das
mov
add
lret
lahf
aad
imul
add
mov
xchg
sub
mov
lret
jo
loope
mov
push
cmp
icebp
incb
lods
inc
sub
mov
cmpl
jp
push
std
es
push
xchg
es
push
cltd
add
jle
and
lods
adc
xor
fcomip
xchg
loop
pop
roll
mov
sub
cmp
xor
daa
cwtl
out
jecxz
into
sbbl
cmp
divl
or
testl
adcb
push
push
int3
xorb
jg
adc
adc
dec
adc
out
loop
mov
xchg
push
xchg
sbb
nop
sbb
xchg
inc
repz
add
jecxz
repnz
lret
jno
dec
imul
ret
ljmp
andl
cmp
hlt
mov
ret
inc
outsl
pop
mov
in
mov
mov
mov
hlt
cwtl
cmpsb
aas
push
mov
cld
hlt
dec
sbb
insb
jmp
sti
mov
push
mov
push
pop
cmp
out
pop
les
mov
pop
iret
push
popw
jmp
fwait
inc
scas
pop
xchg
in
sbb
mov
scas
movsb
scas
pop
mov
push
inc
mov
cmp
out
pop
jnp
into
ror
dec
aad
fsts
jp
test
push
pop
mov
lahf
popa
les
roll
push
sub
imul
xor
adc
aam
daa
and
test
and
xchg
dec
push
mov
ret
mov
call
push
daa
adc
jne
lahf
or
or
add
jbe
xorb
jae
mov
adc
fsubrs
das
jno
and
add
and
mov
in
or
lods
jns
adc
outsb
xor
int
jno
insl
jns
iret
in
jns
xor
rcl
jb
ds
inc
mov
sbb
push
fcomps
jno
fmull
lods
fmul
dec
int3
sub
dec
sub
push
push
sarb
mov
pop
xor
out
mov
mov
jp
mov
or
inc
jge
mov
or
fcomps
cli
or
fimull
push
dec
lret
out
test
loopne
icebp
lock
movsb
dec
inc
xor
add
cs
dec
mov
xchg
and
out
repnz
clc
add
xor
fldl
dec
cli
out
cmpsl
add
mov
cwtl
cli
leave
push
aad
rcll
test
stos
fisttpl
ja
rcr
sub
add
cltd
movsb
fdivs
aam
jge
arpl
mov
pop
scas
mov
xchg
test
push
or
hlt
xchg
inc
jmp
fcmovnb
mov
aas
mov
adcb
neg
add
es
pop
xchg
push
add
sub
mov
inc
test
adc
lds
int
aam
jae
xchg
fwait
clc
add
fistpll
ret
test
dec
lea
js
enter
insb
shll
pop
xor
jae
int3
inc
or
mov
push
out
stc
movsl
pop
cmc
pop
xor
mov
lea
pop
or
aam
test
sarl
push
imull
jmp
rcl
iret
in
aad
test
and
pop
mov
sarb
movsb
xchg
jo
jecxz
mov
pop
xchg
push
pop
xor
dec
lods
jmp
rol
icebp
mov
in
mov
pusha
sbb
or
add
cmp
nop
outsl
mov
mov
jmp
jge
xor
fwait
and
xchg
insl
dec
mov
shl
mov
pop
pop
mov
adc
sub
out
pop
cmp
mov
jae
popa
jg
xlat
sbb
lret
or
pop
add
sti
and
sarl
loop
je
dec
xchg
xchg
pop
add
mov
cmpsl
mov
add
jl
outsb
mov
lea
xchg
sbb
int
mov
lock
shll
shll
add
loopne
jb
scas
xchg
rolb
jmp
jae
cs
insb
clc
push
aad
push
cmp
cmp
inc
in
int
xchg
mov
stc
push
mov
daa
and
push
shrb
or
in
sub
imul
pop
pop
js
jg
xchg
or
aaa
xchg
fisubl
cmp
pop
adc
jno
adc
outsl
outsl
fimull
sarb
xor
jae
mov
push
sub
mov
popf
mov
jbe
mov
ret
jne
fs
daa
jae
lods
adc
stos
aam
jecxz
jno
nop
add
xor
and
xor
jae
dec
xor
iret
mov
jns
rol
enter
pop
je
xor
cs
dec
dec
jle
jne
xor
jnp
mov
sub
push
cmpsb
int
hlt
and
jbe
int3
in
inc
test
mov
ds
push
jg
lods
bound
repnz
push
mov
inc
inc
or
psubw
in
shlb
jno
loopne
xorl
adc
add
movsb
adc
repz
call
das
push
push
inc
enter
lahf
insb
pop
cmpsl
or
push
jg
lea
and
xchg
pop
cld
loopne
cmp
shrl
adc
sbb
aaa
jl
dec
movsl
pop
mov
in
mov
dec
ja
ret
sbb
pop
or
add
das
nop
orl
pop
push
push
rcl
cmc
fisttps
enter
cmc
daa
xchg
roll
dec
pop
dec
fstpt
push
jne
mulb
inc
sti
pusha
outsb
insl
sub
mov
test
icebp
nop
xchg
ljmp
jge
mov
cld
aaa
mov
div
add
das
sti
scas
dec
pop
ror
loope
adc
addb
mov
or
pop
adc
mov
and
les
in
das
mov
das
sarb
bnd
mov
cmpsb
sbb
fstpt
mov
sbb
aam
sbb
pop
and
and
pop
das
push
push
aas
pop
pop
test
and
scas
sub
std
nop
push
jmp
mov
out
cmp
or
cmp
inc
cs
or
outsb
jl
and
jmp
fsubs
xlat
jmp
pop
pop
fs
faddl
sbb
inc
xchg
adc
or
mov
enter
pop
mov
pop
call
cmp
add
imul
lods
cmpsl
fiadds
mov
mov
pop
sbb
adc
pop
cmp
push
divl
cmp
bound
sbb
jmp
mov
inc
cltd
sar
mov
mov
pop
das
xor
vpacksswb
sbb
ljmp
dec
movsb
or
add
lcall
push
mov
mov
mov
push
push
dec
sub
mov
js
pop
dec
adc
or
mov
add
xor
idivl
inc
jg
outsl
stos
push
gs
jbe
inc
mov
test
push
push
jmp
mov
push
inc
mov
out
sbb
sbb
cmp
repz
add
or
arpl
xor
hlt
xor
xorl
lock
subl
test
cltd
cmpsl
add
lods
sub
jnp
jge
push
shll
cmp
lret
icebp
mov
in
pop
and
mov
aad
outsl
push
loop
xchg
stos
mov
rorl
das
adc
les
insl
jp
clc
xchg
fsubs
dec
mov
ljmp
lret
inc
loope
lcall
cwtl
push
mov
cli
sub
jns
mov
and
mov
subb
popf
rcrl
into
mov
inc
jbe
movsl
stos
pop
lea
pop
sub
inc
mov
popf
ret
adc
push
outsb
xchg
lret
xor
movsl
or
cmp
dec
adc
out
shrb
out
cmpsb
mov
call
xchg
jae
fwait
push
mov
rcrb
or
xchg
mov
adc
rcl
cmp
scas
enter
xor
adc
out
push
adc
inc
xchg
mov
ficoms
cwtl
shll
jno
xor
sub
mov
je
inc
push
push
inc
loope
mov
cli
add
mov
dec
lds
mov
pop
sbb
aas
movb
aam
add
jo
jno
xchg
pop
add
inc
xchg
xor
lock
ficoml
mov
mov
push
cs
roll
adcb
push
xor
lock
pop
mov
add
adc
pop
jp
cmp
add
adc
and
mull
jns
mov
push
mov
or
movsb
xchg
fiaddl
sub
sbb
cld
out
sbb
arpl
mov
fwait
insb
mov
nop
cmpsb
jb
pusha
mov
iret
outsb
jnp
cmp
stos
loope
leave
cmpsb
aad
sbb
roll
aaa
fldcw
addr16
lea
xor
xchg
out
inc
pop
cmp
mov
mov
or
dec
je
and
xor
xorl
fisubrl
add
jecxz
jae
xchg
sub
fmul
push
dec
cmp
or
rolb
push
ss
testb
fcmovu
lahf
pop
out
dec
cs
ja
jl
into
sahf
btr
pop
insb
ljmp
push
adc
es
xchg
les
sub
mov
lret
mov
in
lods
out
jo
or
mov
lcall
fdivs
mov
stos
sti
sub
ficoml
dec
or
in
ljmp
mov
push
nop
popf
pop
sbb
std
loop
or
or
shrb
outsb
mov
inc
jl
sbb
sahf
stc
or
enter
test
sbb
push
pop
adc
sbb
mov
in
rcll
jae
xchg
insl
lret
xor
or
inc
out
std
int3
pop
add
mov
pop
mov
mov
or
das
jmp
mulb
or
in
aam
add
push
adc
mov
mov
add
mov
and
jp
decl
imul
call
call
jmp
mov
imul
aad
dec
filds
pop
negb
push
mov
inc
xor
outsl
sub
pop
mov
iret
jg
call
test
jle
jge
lods
stc
jae
in
in
push
adc
addr16
xchg
stos
movsb
pop
pop
jp
ljmp
gs
push
sub
fistps
inc
xorl
out
or
mov
adc
ja
lret
pop
inc
pushf
xlat
mov
push
pop
inc
jle
adc
xor
inc
cmp
inc
jle
fstps
dec
movsb
jbe
xchg
jmp
jb
ds
jb
out
pop
ret
out
pop
add
movl
fcoms
push
mov
or
dec
xor
sti
add
mov
test
sahf
cmp
ljmp
testb
push
xchg
sar
add
jbe
pop
filds
shrl
cs
inc
repnz
shrl
and
push
in
or
rcrb
andl
and
fstpt
arpl
or
nop
stos
inc
dec
sub
push
cmpsl
mov
dec
decb
loop
and
rclb
xchg
xor
daa
lods
dec
inc
mov
mov
push
outsl
jg
test
dec
in
fiadds
adc
xlat
ja
aam
push
dec
push
jb
or
pushl
push
hlt
idivl
dec
mov
addr16
fldcw
sahf
dec
mov
out
lods
push
add
pop
into
jno
jno
push
scas
sub
pop
mov
adc
pop
add
insl
addr16
xchg
cmpsb
xchg
addb
xlat
sbbb
push
test
jl
adc
cltd
fists
fcoms
cmp
mov
mov
adc
test
inc
shl
cmpsb
call
dec
pop
pushf
out
dec
jg
push
ficoms
push
stc
xorl
sub
fs
vshufpd
cmc
cld
sub
outsl
push
ficomps
fstps
addr16
xor
cmpsb
xchg
jb
push
pusha
imul
mov
mov
or
jae
mov
pushf
push
in
lret
cmp
and
push
je
imul
cmpsb
lahf
es
mov
or
inc
sub
push
mov
sub
mov
stos
fisttps
sbb
into
pop
adc
mul
cmp
and
sbb
arpl
pop
clc
xchg
dec
mov
clc
add
jne
push
subb
test
mov
mov
adc
rclb
dec
ds
popf
lea
nop
loope
lcall
xchg
shl
lcall
adcl
lods
in
xchg
clc
out
repz
test
jle
xchg
imul
adc
and
shll
mov
sahf
and
inc
push
push
loopne
sub
pop
into
and
test
insb
sbb
js
inc
repz
mov
movsb
fsubrs
push
fldcw
lea
add
jp
sub
in
jno
jecxz
aas
jl
mov
clc
fwait
pop
mov
adc
jg
push
call
je
nop
subb
xchg
pushf
inc
jne
cmpsb
push
xchg
sbb
das
popa
mov
lcall
and
jne
and
push
jnp
mov
lods
call
movsb
push
xchg
push
pop
xor
cli
and
xor
xorb
mov
mov
leave
push
pop
lock
pop
loopne
sbb
jp
push
stos
lods
scas
icebp
inc
cmpsb
push
sub
xor
jb
add
lcall
dec
mov
xor
lods
leave
ficoml
cmp
insl
sub
in
xchg
je
andl
push
jl
pusha
mov
jmp
test
add
or
add
fisubrl
arpl
js
adc
sub
aaa
pop
mov
sbbb
sub
sub
insl
lea
or
and
fcomi
lahf
movsl
pop
insb
inc
stos
sub
jle,pt
sahf
ret
dec
es
testl
mov
push
fisubl
out
pop
lret
and
lret
rorl
xchg
sub
insl
adc
xor
push
xchg
inc
adc
lds
sub
sub
mov
mov
ss
cld
mov
push
imul
xchg
in
ret
iret
test
add
pop
je
out
add
scas
add
xchg
or
cmp
sbb
loop
add
ret
fidivs
xchg
nop
out
jne
xchg
pop
mov
notb
pop
rorl
jne
push
push
add
cmc
dec
cmp
jbe
lea
dec
or
push
loope
pop
mov
mov
cmp
and
movsb
xchg
outsl
jb
movsb
xchg
pop
cmpsb
fidivrl
mov
sbbl
fsts
cmp
mov
sbb
push
add
xor
and
ret
xchg
in
dec
cltd
loope
out
dec
test
jb
mov
testl
cmp
pop
cmp
out
hlt
cmp
sbb
adc
mov
and
or
jl
xor
add
jno
mov
inc
push
add
jmp
cli
fisubrl
jg
xchg
fnstenv
mov
inc
cmp
test
jns
mov
pop
in
or
xor
js
push
xor
test
sar
xor
mov
fldt
push
testb
std
inc
jge
inc
jo
leave
aam
adcb
sbb
mov
popa
aaa
loopne
jg
movsb
adc
pushf
enter
aad
push
or
aaa
gs
jbe
mov
sbb
cwtl
insl
sub
cmp
pop
cmp
inc
sub
xchg
mov
inc
fiaddl
jne
jne
test
mov
sahf
jg
subl
jg
fsubrl
movsl
cmp
jl
rcr
iret
lods
scas
loop
mov
call
adc
sbb
sahf
add
sub
xor
and
mov
cmp
lcall
int3
pop
mov
inc
inc
mov
dec
and
and
fisubrs
mov
mov
jns
lret
add
mov
cs
xchg
jo
cmp
or
inc
push
mov
xor
pop
and
push
push
jmp
scas
push
stos
fcoms
cmpsb
mov
dec
popa
in
nop
testb
and
daa
sbb
popf
lock
in
jge
psubusw
gs
mov
gs
orl
sbb
mov
sub
pop
xlat
test
clc
mov
out
add
or
ret
and
sahf
dec
or
xchg
test
pop
lods
mov
ret
pushf
aaa
std
xor
imul
jae
push
insl
jge
lea
sahf
loop
lods
subl
xor
cs
in
popa
adc
jg
adc
ja
push
inc
es
push
xlat
daa
lock
jnp
jo
cmc
pop
je
inc
or
lock
add
sti
mov
sahf
stos
cmp
fcoml
xchg
jne
mov
cli
cwtl
ja
cwtl
adc
sbb
je
dec
into
aaa
xchg
pop
xchg
mov
xchg
or
pop
adc
int
jl
jecxz
nop
mov
mov
jp
pop
roll
arpl
jo
movsb
rorl
bound
sbb
in
fisubs
lahf
jl
and
scas
call
push
daa
mov
cmpsl
loope
xchg
jbe
addb
jnp
xchg
pop
adc
shlb
and
pop
out
ret
lods
outsb
fadds
add
push
or
xchg
lret
std
sub
test
icebp
arpl
mov
or
shrl
and
mov
popl
push
or
fwait
daa
sbb
cwtl
test
outsb
imull
rolb
or
xor
clc
sbb
movsl
or
imul
and
fsubrl
mov
lret
dec
arpl
pop
cmc
xchg
fwait
xchg
sbb
aaa
in
cmp
cmp
leave
movsb
push
fst
ror
stos
cmp
and
xchg
jae
pextrw
imul
push
jmp
adc
lea
sbb
cmp
int
inc
add
push
xchg
push
sub
test
pop
stos
push
fisubl
push
dec
loope
or
push
push
incb
out
lock
jo
andb
fcmovb
push
or
dec
xor
sahf
sub
pop
push
pop
icebp
das
lds
inc
data16
or
movsl
je
gs
jle
bound
mov
sbb
xchg
loopne
dec
push
add
inc
roll
mov
mov
add
das
leave
fcoml
cmpsl
push
or
aad
dec
clc
aaa
xor
rol
adc
push
push
scas
mov
jne
clc
fwait
loope
sub
test
cli
dec
pop
idivb
jnp
xchg
mov
sarb
sbb
in
cmp
outsb
push
das
jbe
gs
inc
cltd
cmp
xlat
cltd
mov
adc
push
cld
int3
pop
adc
xor
pop
out
sub
push
stos
push
pop
adc
sub
outsl
out
mov
imul
les
pop
xchg
icebp
push
mov
mov
inc
sbb
ds
xchg
jno
and
xor
xorl
lock
mov
loop
add
in
inc
dec
dec
fcomps
movsl
fcompl
loopne
js
rolb
sbb
sbb
dec
sbb
pop
shl
jecxz
cmp
xchg
imul
repnz
cmp
dec
lods
mov
ret
and
negl
cmp
pop
insl
add
jp
and
repnz
or
inc
sbb
inc
jns
orb
sub
xchg
dec
jnp
mov
insl
push
jle
int
clc
dec
jns
mov
cmpsl
ss
push
mov
xor
mov
and
jge
xor
pop
inc
jne
cmc
mov
inc
pop
outsb
inc
aam
in
out
dec
sbb
stc
and
das
out
adc
stc
pop
aad
adc
adc
sbb
sub
repz
sub
imul
aam
jl
jmp
ret
or
rclb
jp
adc
leave
xchg
in
les
std
dec
fcomi
pusha
adc
sub
fstpl
fistpll
fimuls
adc
and
mov
inc
inc
dec
out
out
mov
bound
roll
repz
mov
cwtl
popf
ds
push
mov
pop
push
cmc
mov
inc
push
syscall
push
negb
mov
stc
cs
push
mov
ficomps
xor
jp
rorb
mov
inc
add
push
inc
mov
clc
fisttpll
popf
mov
mov
fidivrl
inc
dec
inc
or
int
idivl
mov
aaa
mov
mov
lods
sbb
ss
jmp
loop
inc
sbb
in
pop
dec
sarb
sbb
aam
xor
pop
jbe
cmc
pop
clc
mov
push
cmp
inc
fmull
adc
movsb
call
cmp
mov
ja
inc
pop
inc
call
adc
mov
lret
pop
pop
into
scas
hlt
adc
jns
fcmovne
cmp
sub
or
cmpsl
push
movsl
bound
std
insl
lahf
repnz
sub
cmp
ret
stos
pop
idivb
inc
subl
in
or
pusha
xchg
xchg
ss
stos
sbb
push
sub
jo
mov
insl
inc
jecxz
xchg
cmp
dec
or
jle
mov
push
sub
sbb
fucomp
pop
dec
out
fsubrp
inc
xchg
push
mov
jg
mov
inc
test
fnstcw
call
dec
fimull
push
out
incb
sbb
outsb
cmp
and
jo
push
mov
addr16
fsubrs
lcall
imul
mov
out
add
nop
inc
xlat
movsl
and
scas
inc
imul
push
push
fwait
add
push
sbbb
mov
xchg
xlat
xchg
push
dec
or
add
leave
mov
push
outsb
imul
pop
xchg
push
shl
lcall
jmp
incb
das
shr
sahf
mov
sbb
mov
stos
pop
fsub
xor
dec
push
cmc
div
mov
sbb
mov
ss
fdivrl
inc
dec
jl
xor
je
fxch
cli
adc
jns
icebp
in
add
mov
fs
dec
lods
push
cmp
mov
push
mov
push
pushf
sbb
fdivl
mov
jbe
jecxz
cmp
mov
xor
fcmovne
jecxz
pop
fsubrs
nop
repnz
daa
cmp
mov
mov
push
jb
shlb
and
mov
out
pop
lods
sub
icebp
fmuls
lcall
int3
inc
into
push
insl
and
fldcw
pop
andb
mov
mov
int
xchg
inc
mov
push
andl
push
push
xor
mov
aas
add
imull
xchg
pop
mov
pop
into
aas
xor
imul
test
xchg
cwtl
inc
mov
and
or
repz
pop
shrb
and
nop
jo
add
jg
cli
aaa
push
cmc
xor
orb
iret
int3
mov
aaa
adc
lahf
sub
push
mov
inc
ljmp
lret
sbb
lds
stos
les
dec
sub
outsl
xchg
test
aad
xor
adc
add
test
push
push
pop
jmp
dec
xchg
mov
test
pop
in
jl
and
cli
jl
xor
push
rcrb
shr
ret
ss
mov
popa
inc
sub
insl
jmp
sub
imulb
ja
lret
cmc
xchg
in
hlt
into
hlt
jmp
sbb
inc
inc
outsl
aaa
shll
pop
cltd
ret
stos
scas
imul
pop
adcl
inc
rolb
int3
lock
xchg
hlt
or
mov
mov
das
xchg
add
fs
push
jns
pop
lahf
pop
ljmp
insl
add
push
xchg
push
sub
sbb
les
jno
cli
add
push
mov
ret
rol
mov
jnp
dec
fistps
and
lret
sub
jo
cmpsl
lret
int3
imul
arpl
scas
out
nop
ret
sbb
cmp
rclb
jmp
aas
sub
mov
pushf
jg
sub
add
pusha
pop
cmp
fbstp
xchg
popa
daa
xor
iret
pop
fwait
pop
test
mov
mov
ljmp
pop
jl
sbb
jg
jno
clc
clc
adc
scas
or
xor
push
mov
icebp
dec
sar
pop
jg
push
out
ss
adc
jmp
ret
cmp
sub
inc
cmpsl
sbbb
imull
pop
ficompl
xor
pop
gs
addr16
jne
sub
mov
inc
cmp
pop
adc
push
cmpsl
test
hlt
icebp
rcrl
push
inc
rolb
nop
int3
push
pop
ja
sub
jae
inc
mov
stos
dec
shl
adc
xchg
ror
dec
mov
dec
add
lcall
sub
adc
scas
rcll
fcmovb
cmpsl
rcrl
insl
sbb
repz
cmp
inc
fsub
out
add
cmp
dec
enter
mov
dec
stos
mov
stos
fdivr
mov
dec
xor
fnstcw
mov
movsl
stos
mov
fidivrl
xchg
lock
push
int3
imul
in
aam
mov
inc
sbb
leave
mov
mov
push
hlt
scas
or
stos
jo
rcr
mov
cltd
fsub
add
or
adc
jmp
cmp
mov
xchg
call
loop
out
cmp
pop
pop
sbb
mov
push
inc
test
pusha
nop
aam
out
xchg
jbe
lahf
out
mov
lahf
push
scas
data16
pushf
or
mov
sbb
loopne
jg
push
mov
mov
inc
jecxz
leave
jno
mov
xchg
hlt
add
mov
sub
stos
outsb
sbbb
divb
enter
out
add
test
int
or
pop
add
bound
rcll
mov
insb
mov
in
adc
dec
loopne
cld
and
bound
dec
sahf
sbb
scas
icebp
stc
lods
ret
cld
mov
adc
mov
pop
jle
mov
fs
adc
aas
ret
push
add
add
xor
inc
cvtpi2ps
stc
fs
mov
sbb
xchg
xor
cmp
mov
add
inc
shlb
jp
shll
xchg
xchg
pop
jg
dec
insl
mov
pushf
inc
test
scas
ret
xor
daa
dec
pushf
shlb
repnz
adc
ss
mov
dec
cmpsl
inc
or
sbb
mov
lods
push
or
sub
mov
lds
push
in
or
push
xchg
and
pop
sbb
pop
push
mov
mov
sub
mov
lock
push
loop
inc
popl
sbb
xchg
incb
push
fiaddl
fwait
nop
xchg
pop
jno
into
or
push
les
pop
add
and
cs
pop
xchg
push
adc
push
ret
scas
lock
and
divb
hlt
and
jecxz
shl
and
push
out
out
pop
dec
icebp
lahf
sti
sub
cwtl
sub
mov
adc
sbbb
aam
daa
sti
das
sbb
leave
push
mov
adc
and
movsl
roll
dec
sub
push
jg
and
sbb
push
cmp
sub
imul
data16
popf
jp
jno
or
in
push
push
cmp
jle
xor
ljmp
scas
lret
test
test
cmpb
cmp
lcall
test
repz
lods
jae
je
add
daa
std
add
cmp
pop
lods
scas
mov
adc
loopne
les
in
mov
out
mov
xchg
hlt
and
xchg
xor
mov
ja
fisttpll
xor
cli
sbb
push
aas
jno
adc
lret
fmull
ja
pushf
je
add
leave
rcl
pop
addb
pop
sbb
dec
dec
aas
mov
add
sub
loopne
js
push
fwait
pop
cmp
push
popf
xchg
lock
icebp
xor
xor
or
mov
daa
outsb
enter
jg
inc
pop
sbb
mov
decb
fisubrs
pop
sti
sbb
leave
push
dec
aad
adc
jae
lahf
iret
or
dec
and
cmp
ljmp
clc
xchg
lods
mov
xchg
clc
fists
push
test
jmp
cmpl
mov
dec
mov
stos
les
xor
add
out
jb,pt
bound
mov
fcmovb
and
daa
adc
daa
icebp
dec
andb
dec
les
shll
push
inc
xor
dec
adc
lds
mov
mov
pop
xchg
shlb
xchg
and
push
push
or
mov
or
movsw
in
dec
mov
push
cmp
push
jle
or
rcrb
xchg
or
and
pop
bound
mov
inc
fadd
xchg
outsb
fstps
jmp
sub
push
jle
add
cmp
loop
fcmovnb
dec
jl
sbb
shrl
dec
adc
mov
xor
icebp
jmp
repnz
je
rorb
jp
movsb
jecxz
jl
inc
push
lcall
pushf
mov
mov
mov
aad
jle
adc
jae
pop
mov
in
jp
in
xor
pop
fnstsw
hlt
push
xchg
adc
jbe
loopne
add
mov
and
mov
divl
adc
jne
dec
in
fidivrs
cli
sahf
or
mov
sbb
push
cmp
or
enter
mov
cmpsb
rclb
pop
cli
call
bound
jmp
icebp
pop
jo
incl
fdivs
sbb
adc
fdivs
clc
xlat
or
les
mov
dec
push
stos
dec
mov
pop
lahf
dec
mov
xchg
mov
sub
mov
push
jnp
mov
sub
cli
jo
lcall
data16
sub
or
jnp
leave
dec
cmpsb
loopne
insl
push
scas
popf
adc
subb
jbe
iret
sub
or
test
cmp
xchg
dec
jae
adc
lahf
nop
lea
out
jp
push
cmp
enter
loope
cmc
sub
push
cmp
add
clc
data16
sub
shrl
sbb
fisubrs
lret
mov
daa
mov
out
fwait
out
and
leave
lcall
lret
rclb
push
fmull
lea
jp
dec
jne
dec
fwait
push
in
imul
dec
lea
cld
loop
nop
enter
popa
push
pop
inc
aam
jp
mov
loope
insl
adc
and
add
add
jecxz
into
ja
cmpsb
or
repnz
andb
outsl
jne
jmp
pop
and
or
adc
inc
xchg
stc
and
outsb
push
jl
push
mov
mov
dec
sbb
push
mov
adc
sub
out
xlat
pop
in
push
ljmp
lret
sbb
lahf
dec
hlt
testb
out
scas
mov
imul
push
insl
test
xchg
adc
in
add
xchg
adc
pusha
xor
outsl
sbbb
ret
data16
out
fisttpl
test
push
movsb
in
dec
iret
xchg
mov
andb
jge
rol
stc
dec
push
jae
push
pop
ret
mov
repnz
test
adc
xor
fstp
xor
fsubs
and
add
xor
pushf
sub
adc
mov
pop
dec
les
negl
inc
imul
sub
pop
repz
mov
mov
arpl
xlat
out
xor
push
mov
fistpl
sub
hlt
mov
js
pop
cmpsl
stos
inc
pop
aas
idivl
jg
mov
pusha
lock
ds
mov
sbb
push
rcll
cli
aad
jl
mov
movsl
jns
push
outsb
and
ja
std
loope
or
mov
leave
insb
int
add
loope
rolb
out
fst
sub
push
lock
call
jge
push
ljmp
adc
mov
dec
lcall
sub
bswap
dec
sbb
add
int3
push
mov
inc
jl
xchg
sarb
loop
mov
sbb
es
xchg
shll
sbb
mov
lret
ljmp
flds
sub
shrb
bts
pop
sub
popl
push
pop
ret
out
out
sahf
xchg
fimull
in
add
movsl
enter
pop
add
sbb
pop
cmp
push
mov
or
cld
inc
hlt
pop
iret
maskmovq
divl
and
call
shr
sub
jge
or
pop
push
fisubl
data16
test
dec
loope
fdiv
frstor
jecxz,pt
xchg
fistpll
fcomps
jo
or
cmc
add
sub
loop
adc
xchg
jge
xchg
es
pop
repz
dec
aaa
clc
cmp
andl
sbbl
and
jecxz
dec
mov
cmc
js
loope
cmp
sbb
loopne
jns
jge
sbb
push
ds
cwtl
pop
cmp
jbe
stos
loopne
out
and
pop
xchg
xchg
mov
loop
rclb
jecxz
inc
fwait
scas
adc
es
and
fcomip
add
pop
movsl
xchg
sbb
xchg
push
or
fdivrp
jge
ret
push
mov
add
insb
jp
insb
ljmp
rcl
jae
adc
mov
pop
andl
mov
mov
cli
aad
or
sbb
shl
icebp
mov
mov
push
dec
gs
push
cmp
outsb
and
adc
imul
and
and
in
jge
mov
mov
cmp
pusha
in
rdtsc
mov
or
mov
dec
arpl
xchg
push
xchg
fdivrl
add
and
adc
popa
mov
in
xor
mov
jge
or
stos
je
je
fwait
ljmp
loop
je
lret
or
sub
clc
addr16
cmp
fnstcw
add
pop
aad
and
cwtl
dec
iret
imul
xchg
in
cmc
or
dec
icebp
and
ja
ret
shr
shlb
cmc
sbb
je
rclb
loope
jle
in
ds
iret
call
mov
pop
jmp
sub
mov
jb
in
cmp
rolb
scas
cmp
lcall
mov
in
daa
adc
jo
fmull
jg
and
cld
xor
fstl
loop
pushaw
xor
iret
test
xor
sbb
shl
xchg
dec
cmp
test
adc
pop
pop
pusha
sti
sbbl
mov
jnp
jbe
inc
sti
loopew
sahf
outsl
push
xor
cwtl
xchg
and
inc
popf
in
sub
or
jns
js
jmp
cmp
cmp
lcall
jae
adc
lea
cmpsl
mov
cmp
or
xor
inc
push
adc
lods
in
mov
pusha
cmp
fnsave
cmp
cmp
pushf
jp
loop
cltd
lret
hlt
and
rcll
aas
cmpsb
gs
mov
lcall
and
xchg
inc
and
lea
push
lods
push
push
ret
xchg
pop
test
jl,pn
test
je
stc
ljmp
scas
mov
inc
xchg
dec
pop
mov
pop
adc
add
cld
adc
inc
sbb
jle
ja
adc
imul
xor
lret
xor
ljmp
sub
mov
mov
clc
mov
lahf
pop
or
mov
ret
stc
and
jns
test
dec
rorl
inc
inc
inc
inc
std
cmpsl
loopne
repz
jnp
or
jg
outsb
loope
push
xor
loopne
dec
mov
data16
cltd
xchg
nop
ret
inc
mov
int
test
mov
mov
push
mov
jle
ffree
jno,pn
fwait
sbb
push
mov
jmp
shrl
mov
sbb
cmp
xor
xchg
pop
cs
outsb
push
mov
arpl
lret
adcl
jae
sub
and
pop
mov
sub
loopne
stc
sub
inc
xchg
ret
push
cvttps2pi
inc
call
stos
outsl
outsb
in
xchg
or
mov
xchg
push
out
test
sbb
out
or
jb
or
loop
arpl
inc
xchg
insl
xor
pop
rcll
testb
mov
add
or
xchg
mov
fstpl
xchg
sub
shr
dec
fldt
ja
hlt
pop
mov
out
dec
stos
lcall
inc
inc
cmp
jl
neg
hlt
jecxz
shrw
pop
xor
pop
add
dec
mov
mov
dec
bound
mov
jp
dec
push
fisubs
add
nop
sarl
xchg
and
pop
aas
and
lahf
dec
jbe,pn
out
adc
inc
xchg
mov
repnz
pop
in
jl
int3
mov
out
outsb
jb
fnsave
lret
enter
push
lret
jmp
push
les
mov
cli
sahf
cwtl
test
orb
fisubs
xor
cmpl
and
loopne
jl
mov
and
inc
xchg
dec
adc
push
divb
les
sbb
mov
movsl
leave
int
leave
iret
shll
add
fnsave
inc
xor
xchg
adc
lret
pop
push
aad
jmp
push
movsl
adcb
pushf
inc
pop
es
cld
adc
les
into
and
das
test
dec
push
sahf
adc
mov
lods
add
adc
or
jae
dec
aad
mov
jecxz
add
sahf
dec
pop
inc
push
jmp
lods
into
or
insl
iret
jne
pop
pop
ss
dec
jmp
inc
rcll
push
pop
test
scas
shrb
dec
test
dec
push
orb
sbb
sbb
rcr
jp
mov
or
das
pop
fcmovnb
push
test
or
andl
and
xchg
fcoms
orb
out
add
scas
dec
and
mov
mov
cmp
jne
nop
push
sbb
adc
outsb
mov
fisubs
repnz
adcb
xchg
mov
dec
test
and
mov
gs
cmp
mov
gs
jns
jge
dec
sbb
inc
addr16
mov
out
mov
add
sbb
popa
add
xor
and
sbb
out
sub
cmpsl
jb
push
cmp
shlb
dec
loop
add
iret
cmp
adc
js
pop
adc
lock
jns
push
pop
scas
push
dec
rcr
les
fdivr
sbb
push
das
cmp
enter
or
leave
adc
jl
test
hlt
add
frstpm(287
xchg
stos
fadd
mov
push
fnstsw
std
out
popf
mov
or
dec
dec
and
sub
mov
cmp
out
mov
lock
dec
ja
cmpsb
jmp
inc
pop
push
ret
jge
test
pop
inc
sub
fildll
add
lcall
sub
xchg
lea
lcall
mull
mov
cwtl
ja
arpl
pop
in
ljmp
pop
fsubrl
js
jmp
mov
fcmovne
jl
or
shl
sahf
roll
ds
mov
scas
xlat
leave
pop
ljmp
in
js
mov
and
mov
pop
add
cs
leave
stc
fucompp
inc
or
sub
push
vcmpps
adc
cmp
iret
adc
mov
rol
dec
sbb
jg
cli
dec
adc
arpl
mov
push
jmp
jmp
sbb
xchg
jbe
and
fwait
in
int
fldl
xor
mov
fcomip
movsb
int
xchg
and
in
cmp
movsb
push
in
enter
pop
jns
mov
cli
xchg
sbb
ss
add
xchg
or
pushw
aaa
jl
sub
je
jns
mov
shll
int3
into
mov
enter
addr16
or
push
sbb
test
lahf
push
xor
dec
add
lret
stos
push
mov
inc
enter
jnp
adc
add
ja
cmc
mov
psubusb
jbe
mov
movsb
fnstcw
push
push
ficompl
adc
and
push
push
jp
lds
pop
mov
sti
mov
scas
push
inc
mov
jae
and
mov
and
xlat
push
sbb
adc
ljmp
push
enter
fs
lret
mov
adc
sub
xor
lcall
fs
stos
js
mov
mov
push
push
cmp
popa
and
sbb
and
add
mov
imul
fldl
jae
or
lret
test
inc
push
fucom
cmp
jp
out
aaa
cld
leave
adc
cmp
jle
or
and
xchg
dec
xor
jmp
mov
call
pop
negl
imul
fistpl
push
mov
xchg
xchg
in
add
jne
aam
dec
outsb
pop
arpl
ss
fsubl
or
test
mov
loope
sti
arpl
sti
cmp
lea
sbbl
xchg
leave
sahf
xchg
cld
gs
int3
cmp
fstpl
or
lcall
mov
inc
addb
fstl
movsl
xor
add
and
mov
or
jns
ljmp
aam
test
jmp
pop
testb
je
pop
outsb
cmp
out
fistpl
pop
outsl
xor
or
cmove
mov
mov
jp
pop
mov
push
and
fadd
int3
cmpsl
bound
or
shll
lods
in
mov
mov
xlat
sbb
popf
dec
iret
imul
test
jbe
and
ret
pop
pop
and
hlt
lret
jge
jmp
imul
jp
mov
fs
jl
mov
xor
jne
jno
jge
fiaddl
es
pop
mov
mov
outsb
popa
pushf
and
imul
out
dec
jns
outsb
pop
and
pushf
insl
sbb
sar
push
stos
push
jo
xchg
sub
and
or
lea
inc
xchg
arpl
rorl
adcl
fs
fnstsw
add
in
bnd
insl
in
xchg
mov
xor
ds
or
pusha
lret
stc
fcoml
iret
xor
push
jno
mov
sbb
sub
sbb
daa
lods
jbe
dec
push
ret
or
jg
adc
mov
jbe
and
das
or
rol
xchg
es
lea
clc
sub
jb
dec
loop
inc
test
cmpsb
jle
sub
popa
cwtl
ret
imul
in
popf
negl
out
pop
enter
jg
mov
pop
xchg
adc
or
hlt
jnp
cmp
fcmovnu
adc
xchg
inc
adc
movsl
mov
and
sar
mov
cmp
push
mov
xchg
lods
cmp
leave
inc
mov
enter
sbb
fs
adc
lea
inc
lods
cmp
jle
push
mov
mov
adc
sti
pop
arpl
adc
fs
jbe
je
mov
jp
add
add
sbb
xor
push
std
xchg
lock
or
jg
pop
loopne
inc
lock
xor
aaa
fcompl
sbb
inc
jp
sub
mov
ds
mov
imul
ret
imulb
aas
push
popf
stc
mov
mov
fcmovne
popf
dec
mov
xor
aaa
jnp
lcall
mov
inc
lods
add
icebp
jmp
pop
insb
push
jecxz
sub
dec
pop
mov
mov
xor
adc
jbe
xor
ds
out
in
test
inc
dec
inc
mov
loope
lods
ror
cmp
push
and
add
sahf
sub
mov
mov
out
push
push
lret
in
cmp
stc
jb
movsb
adc
andl
aam
aam
dec
mov
jns
gs
fwait
mov
add
jge
jmp
dec
jnp
pop
repz
add
lahf
or
int
mov
ja
pop
fmulp
rol
out
mov
mov
cwtl
inc
xchg
jae
sub
xchg
mov
mov
arpl
lds
dec
loopne
arpl
aam
mov
jl
cmp
icebp
jg
cs
xchg
push
mov
mov
fucomi
adc
jno
pop
in
pop
mov
stos
fisubrl
fst
cmp
mov
ss
or
movsl
call
scas
outsl
xor
mov
fiaddl
addr16
mov
nop
leave
gs
xlat
pop
out
test
pop
inc
and
arpl
shlb
lret
rcrl
repnz
in
xor
outsb
jno
data16
adc
lods
iret
out
cltd
xor
cmp
and
xor
and
dec
iret
push
loop
cmc
push
pusha
adc
daa
sub
jle
jns
push
jle
and
out
mov
sbb
add
sub
icebp
jl
repz
test
xchg
outsb
data16
lods
mov
and
leave
std
lret
adc
cwtl
mov
outsb
mov
or
out
fstpl
sbb
ss
dec
dec
ljmp
or
insb
and
push
jb
les
mov
scas
leave
xor
push
adc
repnz
sbb
sar
xchg
nop
call
lret
movsb
leave
xchg
enter
mov
ret
jge
jl
jo
inc
pop
inc
lock
out
stc
pop
mov
pusha
inc
lods
pushf
xchg
test
hlt
sbbl
or
mov
shll
out
dec
xor
xor
mov
mov
push
or
loop
inc
out
out
popf
and
sub
call
xchg
js
fidivs
mov
je
iret
sbb
mov
sarl
xchg
shll
mov
adc
add
jo
add
pushf
test
push
jae
sub
adc
cld
in
adc
push
addr16
popa
push
fnsave
aad
and
mov
mov
mov
out
jo
sarl
push
push
out
adcl
pop
popa
pop
sahf
jl
ror
iret
out
pop
xchg
cmp
out
call
pop
repnz
aad
scas
outsb
inc
adc
mov
adc
sub
push
push
mov
out
mov
inc
cmp
shrl
mov
xorl
js
push
adc
adc
lods
pop
jle
mov
or
rolb
addl
pop
adc
in
lea
inc
pop
stos
insl
pop
ret
aaa
xchg
push
push
dec
pop
mov
mov
jg
sub
jo
flds
dec
ss
call
or
sbb
jb
jmp
bound
std
clc
dec
sub
mov
les
repz
lock
test
mov
dec
cmc
ret
cmp
add
lcall
sbb
push
lcall
jbe
cmp
std
and
sahf
xor
adc
out
cmp
test
jp
sti
inc
je
adc
rol
into
mov
push
jp
push
jl
fwait
stos
lahf
popl
test
cmp
push
dec
cmp
sbb
lret
pop
les
dec
inc
push
jg
scas
push
sahf
mov
adc
lret
mov
hlt
pop
inc
daa
mov
push
repnz
inc
mov
xchg
mov
ljmp
xchg
test
orb
out
insl
sarb
xchg
insl
test
pusha
dec
repz
push
or
int
inc
int
into
test
sahf
fstp
pop
dec
fcompl
dec
cmp
cld
jge
jnp
sbb
cmp
adc
call
and
loop
loop
mov
xchg
xchg
test
in
dec
das
sub
sbb
aad
mov
xchg
pop
mov
mov
sti
pop
test
xorl
xchg
in
inc
xor
decl
movsb
inc
test
gs
push
shlb
adc
pop
and
stos
add
sahf
xlat
or
jl
sbb
mov
dec
push
cmp
mov
inc
imul
xor
aad
cli
cwtl
jg
aad
fs
mov
bnd
mov
cld
repz
jge
inc
jno
insb
mov
inc
xor
iret
repz
sbb
mov
mov
imul
xor
aad
dec
xchg
mov
jno
add
or
pop
iret
iret
orl
rorl
dec
cmpl
lods
out
sub
pop
es
decl
push
xor
xchg
adc
lock
or
xchg
cltd
and
jae
pop
pop
xor
xor
pop
sub
mov
hlt
dec
arpl
test
out
call
sbb
lods
incb
add
jo
mulb
lods
cmp
les
push
insl
adc
cmc
stc
aaa
push
xor
std
fmul
push
icebp
imul
aam
dec
jp
dec
cmp
mov
cmp
ljmp
push
sbb
and
cmc
lods
sbb
aaa
xor
movsb
mov
sbb
daa
xchg
jae
mov
int3
imul
mov
scas
jnp
jbe
test
out
xor
out
std
mov
mov
mov
gs
adc
and
adc
nop
js
adc
sbb
push
das
rorl
xor
jo
stos
test
push
fcoms
push
stc
jns
enter
mov
shlb
sub
and
cmpsb
push
push
jno
ljmp
es
lds
shrb
jb
jo
ret
mov
ret
in
push
xchg
sub
jle
pop
scas
jecxz
pop
ljmp
out
inc
push
dec
imul
push
push
ljmp
inc
lds
insb
gs
es
sbb
and
imul
push
xchg
sbb
iret
lods
and
cli
les
mov
cld
pop
xchg
mov
ss
inc
xor
aas
shll
mov
sub
fcoms
shrb
mov
and
adcb
inc
test
stos
int3
cli
xchg
mov
mov
cld
lcall
mov
jbe
and
inc
push
stos
push
lock
movb
aaa
mov
in
mov
inc
lea
mov
pop
or
in
push
push
xor
xor
sar
or
movsb
dec
xchg
push
push
dec
loop
push
inc
test
pushl
xlat
mov
pop
cmp
mov
test
cli
dec
adc
hlt
mov
cmp
xor
mov
ljmp
lock
aad
xlat
sbb
push
add
jecxz
pop
or
repz
scas
js
cmp
xor
pop
mov
orl
xchg
push
inc
cli
stos
inc
pop
mov
popa
addr16
cltd
addl
mov
adc
or
test
loopne
mov
inc
in
incb
sarl
and
lods
lock
les
push
fcmovb
xor
jbe
sahf
xchg
je
das
cmp
pop
scas
xchg
sbb
rorl
roll
push
and
lea
sub
inc
sarl
or
dec
push
imul
adc
lds
cmpsb
dec
add
sbb
test
movsl
mov
dec
daa
jno
mov
fadd
inc
push
movsl
sbb
xlat
daa
mov
insl
dec
sub
and
mov
dec
push
adc
sub
xchg
bound
fwait
jmp
or
xchg
pop
or
cmp
sbb
dec
adc
sub
push
dec
push
hlt
and
cwtl
inc
or
lcall
sub
and
shll
ja
movsb
push
std
and
inc
ret
cltd
add
orb
mov
imul
gs
push
sahf
or
dec
loopne
outsl
cmp
out
inc
xor
fistl
mov
mov
pop
arpl
cltd
fidivrs
mov
inc
inc
mov
jmp
sbbl
or
inc
mov
push
xchg
stos
in
push
arpl
or
leave
ret
adc
xor
shl
pop
mov
repz
inc
mov
bound
adc
xchg
test
xor
shrb
xor
cmc
in
dec
filds
cmc
cmc
pusha
dec
repz
stos
clc
push
xor
dec
sub
rcl
ret
cmp
adc
push
jge
or
jbe
pop
bound
sub
cmc
xchg
xchg
movsl
sbbb
xor
cmpsb
fiadds
repz
jbe
add
jge
adc
sbb
arpl
push
loop
lds
lret
adc
fs
addr16
inc
popa
into
aam
mov
push
rcll
stos
and
xor
sbb
push
fidivs
jbe
xor
mov
push
mov
cmpsb
add
push
fiadds
push
add
xchg
jo
mov
push
imul
push
and
jecxz
and
dec
mov
sub
in
push
mov
andl
jb
or
aas
pushf
pushf
xchg
push
sub
xchg
xlat
repnz
sbbl
and
clc
jns
ljmp
jecxz
jecxz
and
push
jl
or
cmove
sti
adc
jo
pop
sub
lods
sub
les
push
notl
jl
xchg
add
jmp
xor
sbb
mov
popa
clc
sbb
xor
pusha
sbb
in
daa
fucomi
mov
and
inc
repnz
pop
xchg
xchg
pushf
iret
loopne
push
adc
cmp
lahf
int
xchg
add
xor
sub
testl
aas
rorl
movb
stos
fcomps
inc
jbe
test
push
push
xor
daa
jmp
jo
addr16
into
iret
test
and
cltd
das
insb
test
xchg
sbb
les
sub
dec
xchg
fnstenv
out
test
dec
cmc
cmp
imul
mov
xor
inc
xor
mov
push
push
rorb
cwtl
inc
cmp
ret
int
push
dec
adc
cmp
add
fs
mov
jnp
inc
jp
sarb
scas
jecxz
mov
pop
mov
jge
jge
sub
in
fildl
leave
mov
xchg
mov
cmp
mov
lret
mov
sub
leave
lret
mov
lods
adcl
add
sub
pop
out
sub
out
lock
lock
ja
in
psubsw
ret
push
out
sbb
dec
sbb
inc
stos
pop
cmp
andl
mov
repz
xchg
adc
adc
cmp
sub
bound
cmp
pop
ficoms
push
lret
cmp
push
xor
mov
pushf
dec
pop
gs
cmp
push
dec
cwtl
nop
cmpsb
jne
or
add
out
addb
cmp
pushf
push
loope
js
cli
fistl
clc
add
and
lret
jge
gs
push
mov
lret
sbb
ret
gs
cmp
clc
and
inc
int3
das
cmp
ficoms
testl
into
inc
dec
xchg
mov
fisttps
fistpl
jge
sti
add
int
inc
lods
xchg
sbb
xchg
sbb
push
stc
fistpl
shll
fcomps
inc
das
xor
or
xor
sub
ret
icebp
stc
or
xchg
push
mov
adc
inc
or
loopne
clc
outsl
sub
sub
outsb
or
out
mov
test
mov
in
dec
inc
jb
pop
and
je
adc
aas
adc
mov
arpl
xor
out
dec
inc
cs
push
push
out
push
sub
ret
pop
or
xchg
mov
scas
xor
inc
lea
and
stos
sub
roll
mov
icebp
dec
pop
pop
mov
faddl
fs
out
mov
mov
pop
mov
inc
mov
cmpl
call
leave
jp
sbb
adc
jle
arpl
call
jecxz
xchg
mov
bnd
cmpb
mov
outsb
mov
shr
hlt
sbb
fsubrs
adc
and
outsb
jmp
mov
and
std
cmc
roll
jecxz
das
lcall
stc
mov
xchg
lods
pop
inc
mov
sarb
stc
jg
cmp
xor
cmp
push
cmp
add
mov
daa
add
mov
pop
fidivs
sbb
ret
bound
jmp
repnz
lods
daa
mov
dec
inc
bound
dec
or
mov
das
xchg
das
dec
pop
push
lock
fcmovb
ljmp
iret
or
ds
faddl
repnz
cmpsl
loop
data16
mov
insl
xor
mov
xor
dec
sub
aam
icebp
mov
sub
mov
dec
add
xchg
xor
mov
inc
les
push
mov
data16
out
cmp
lcall
fists
xor
imul
mov
jecxz
pop
mov
mov
fldenv
jbe
ja
fdivr
mov
xchg
pop
lock
push
jnp
das
jns
sahf
xchg
in
mov
jb
inc
pushf
dec
add
aad
cli
sbb
fs
push
stc
nop
outsl
or
xchg
xchg
add
cmp
mov
lock
or
jecxz
sbb
mov
dec
add
mov
mov
pop
ret
mov
test
outsl
inc
push
dec
imul
add
fstl
test
adc
cmp
push
test
push
xchg
pushl
adc
cmp
push
dec
sbb
cmp
pcmpeqw
cmp
dec
loopne
push
mov
dec
mov
jge
pop
repz
pop
sub
or
ret
insb
insb
xchg
aam
add
cvtps2pd
repz
cmp
add
and
mov
loope
mov
xchg
pop
sbb
loopew
popf
sub
cmp
ja
dec
adc
jmp
xor
je
jp
dec
out
cmp
and
xchg
mov
lds
jg
cmp
jle
sub
in
or
ss
sbb
push
add
push
insl
repnz
fwait
loope
scas
aaa
push
iret
push
jno
adc
in
out
sbbb
cld
js
sti
xchg
dec
mov
adc
adc
mov
fs
dec
pop
add
inc
push
fwait
cmp
jno
dec
or
adc
mov
cli
xchg
sbb
nop
loop
adc
loope
cmp
jbe
enter
addr16
std
inc
imul
push
mov
movsb
mov
and
mov
add
sarb
std
push
mov
mov
iret
jl
stos
cmp
sbb
or
add
push
add
jge
pop
push
cmp
xor
cmc
mov
scas
jmp
jmp
cld
add
jae
xlat
sub
lcall
fldl
in
push
aam
mov
and
ljmp
cmp
xor
and
mov
jg
cmp
sub
xor
sub
mov
rolb
repz
pop
std
aas
dec
and
es
mov
mov
ficoml
in
cmp
or
fxch
jecxz
cld
lock
push
or
sub
push
or
and
pop
js
dec
jae
dec
les
ficoms
sub
jae
in
outsl
and
push
in
xor
bound
sbb
mov
arpl
je
and
cli
pop
into
out
mov
aad
fsubrl
and
dec
dec
fimull
and
in
jno
inc
mov
inc
stos
or
sbb
in
mov
lods
sub
addr16
push
cmp
cltd
mov
xchg
mov
mov
or
in
adc
mov
pop
int
pop
xor
icebp
cmp
call
pop
and
cltd
sub
enter
sbb
clc
nop
lahf
into
shl
stos
cs
mov
lds
bnd
sub
xchg
pop
out
xor
mov
dec
es
lock
xchg
and
into
or
pextrw
cmpsb
mov
dec
loope
dec
pop
add
mov
pop
and
mov
test
and
es
push
dec
mov
inc
adc
ret
out
xor
pop
dec
xorb
outsl
cmp
adc
negb
and
loop
pop
das
fstpt
repz
lds
pop
sub
dec
mov
popa
divl
aas
lea
andb
repz
addr16
and
fadds
gs
lcall
mov
cltd
jecxz
sbb
addps
adc
jno
and
sub
xchg
mov
xchg
and
popf
add
pusha
adc
mov
nop
pop
fisttps
cmp
test
cmp
in
mov
std
stc
insl
xchg
test
fs
pop
mov
adc
loope
pop
cmpsl
sbb
inc
inc
stc
fisubrs
test
mov
das
out
mov
movsb
pop
or
ret
psubusw
movsb
xor
rcr
dec
xchg
pushf
ret
add
add
pusha
mov
mov
fsubp
or
push
mov
popl
pop
mov
clc
jnp
je
sub
lock
inc
mov
loop
in
inc
es
mov
mov
loope
ret
jo
int3
in
lds
mov
inc
adc
lahf
inc
jge
jg
pop
jno
lock
jp
adc
fdivr
ja
xor
jg
test
pop
pushf
adc
cli
jmp
push
xor
es
sub
push
add
xlat
test
gs
inc
dec
sbb
lds
sbb
lock
aam
pop
aaa
push
cmp
testl
shr
fisubrl
movsl
fistpll
mov
or
lock
test
sti
roll
fwait
and
or
rcrb
int3
arpl
rorb
out
fisubs
lea
scas
or
inc
outsl
mov
add
into
pusha
ds
sbb
pop
sub
mov
cld
cmovge
cli
out
mov
add
in
subl
or
adc
mov
inc
jecxz
cmp
stc
add
adc
out
lret
sub
pop
jno
inc
loopne
sub
mov
adc
loop
imul
xchg
fists
out
xor
pop
inc
sti
jge
mov
sub
xchg
xchg
mov
insb
dec
jmp
push
push
pop
adc
pop
std
jbe
xor
cmp
aas
mov
enter
adc
mov
stos
inc
pushf
and
mov
test
mov
adc
je
dec
movsb
adc
outsl
sub
insb
mov
outsl
cwtl
movsl
movsl
mov
mov
jp
ljmp
es
outsl
mov
out
pop
movsl
jne
lret
mov
jb
outsl
pop
push
inc
fsubrs
jge
mov
or
sub
or
data16
clc
lret
jae
repnz
push
mov
sbb
dec
pop
jmp
push
jno
sbb
or
clc
fcompl
out
mov
and
js
test
hlt
sub
loope
push
inc
and
test
xor
inc
test
cmc
cmpsl
dec
call
in
cmc
sarl
dec
rorl
les
outsb
aaa
cmpsl
mov
imull
int
and
dec
shrb
pop
js
dec
pop
je
jp,pn
push
addb
cmp
bnd
fldt
int3
mov
add
shlb
cmc
insl
pushf
push
cmpsb
sarl
aam
lods
cmc
dec
aas
or
xor
dec
aas
or
jg
lock
jmp
lret
ljmp
ret
push
cld
pusha
rcr
clc
fst
ret
data16
int3
in
push
cmp
daa
btrl
and
xchg
sbb
bound
xorl
dec
or
xchg
inc
jp
repnz
sahf
test
xor
mov
outsb
js
addr16
scas
cmpl
push
mov
sar
dec
rol
pop
shrb
aaa
insl
mov
xchg
lea
out
js
mov
and
push
clc
lds
adc
lds
ss
cltd
outsb
fstpl
cmpsl
adc
dec
jecxz
jns
into
mov
mov
dec
inc
pop
sub
jne
cmp
xchg
pop
ss
xchg
mov
or
cld
sbb
enter
jbe
ljmp
mov
push
add
in
dec
inc
das
loop
xchg
lea
xchg
or
ficoml
stc
inc
mov
sbb
cmpsb
aaa
pop
pop
push
sub
fs
jbe
xchg
testb
js
xchg
cmp
dec
mov
mov
pop
xchg
sub
mov
daa
xchg
cwtl
jae
sbb
cmc
test
stos
pusha
mov
popf
popa
xchg
jo
push
xchg
mov
push
mov
sbbl
jns
mov
cltd
mov
jne
stos
or
sahf
xor
ljmp
cwtl
jns
add
cli
mov
dec
test
sbb
icebp
jl
cmp
and
and
push
imul
popa
adc
leave
mov
and
and
jecxz
in
and
insb
ljmp
or
nop
sahf
sar
leave
push
imul
ljmp
pop
or
sahf
xor
jp
and
movl
cwtl
jne
sbb
mov
cmp
add
lods
sti
mov
sub
or
xor
test
sti
lods
aad
cmpsl
imul
cmp
icebp
adc
sbb
lods
out
and
push
clc
sbb
aad
sarl
mov
xorb
or
mov
push
in
mov
lcall
pushl
les
outsl
push
iret
ret
and
lock
mov
add
enter
sbb
popa
mov
push
adc
mov
imul
jmp
adc
adc
popf
test
out
mov
test
imul
in
mov
shlb
mov
pop
push
push
dec
mov
sub
bound
out
aam
inc
dec
jge
scas
xor
push
shlb
xor
pop
or
push
adc
pop
cmp
subl
aaa
xor
mov
mov
xchg
cmpsb
jmp
xchg
xchg
loope
sbb
add
lret
push
jnp
sub
ret
cwtl
add
pop
jne
lahf
adc
dec
mov
dec
lock
jo
mov
mov
mov
inc
push
cmpsb
or
inc
xchg
mov
dec
out
outsb
pop
or
jae
mov
mov
pop
es
icebp
or
js
sti
cmp
inc
mov
push
ljmp
loopne
repz
incb
ror
adc
rol
sub
orb
adc
jge
jg
leave
push
and
jp
es
fcoms
mov
icebp
push
xchg
stos
rorb
test
and
js
jo
pop
dec
add
test
faddp
outsb
daa
pop
loopne
add
ret
xchg
clc
sbb
mov
and
insb
xor
add
outsb
or
jnp
insl
xchg
cmp
add
rcrb
adc
mov
loop
sub
lods
push
dec
fidivs
mov
lock
jmp
adc
int3
mov
hlt
add
mov
je
or
pop
xchg
cmp
std
test
dec
daa
sahf
adc
insb
xchg
es
call
iret
test
adc
pop
fcomi
xor
sub
imul
dec
data16
ficoms
test
fcmovu
pusha
andl
popf
cs
ds
dec
jle
push
out
xor
xor
out
push
cmc
or
sub
test
lods
xchg
sarl
repz
mov
jne
push
inc
and
dec
pushf
ljmp
sti
jb
jne
mul
pop
xor
div
in
nop
ret
test
enter
mov
sub
outsb
xchg
jno
mov
sahf
aam
add
mov
or
stos
aam
movsl
outsb
nop
pop
rcll
cmpsl
jae
pop
or
dec
mov
cltd
sub
jb
inc
int
jle
and
cmp
mull
sub
lods
loop
int
movsl
fisttps
sahf
in
rcl
int
outsl
xchg
into
daa
mov
and
pop
in
mov
cmp
daa
dec
pop
cmp
or
test
dec
dec
pop
add
jge
mov
push
arpl
stos
lcall
or
cs
out
ja
popa
popl
pop
inc
jo
mov
xor
dec
inc
out
jle
or
outsl
mov
push
mov
pushf
jg
and
orb
cmp
dec
insb
in
adc
dec
icebp
inc
adc
imul
or
jp
sahf
pushf
mov
xor
insb
jno
or
out
rorl
out
push
cli
or
mov
mov
rcrl
stos
je
std
rcr
mov
xchg
outsl
mov
sbb
iret
arpl
cmpsb
pop
push
xor
cmpsb
imulb
add
pop
out
in
pop
addr16
xor
shrb
stc
mov
pop
js
clc
or
and
test
push
iret
push
xor
xchg
cltd
jno
xlat
add
pop
mov
adc
cmp
rcrl
lret
cltd
sub
sub
rcrb
xor
rcll
push
aad
xor
xchg
das
mov
xor
xchg
call
xchg
add
xor
xchg
int
es
iret
add
setnp
inc
and
lcall
sub
xchg
mov
lahf
movsb
outsb
mov
and
das
lock
dec
decb
mov
dec
aas
xchg
sbb
ds
jle
xor
xchg
inc
pushf
scas
xchg
push
xchg
push
push
in
bound
cmp
add
je
rorl
test
pop
arpl
into
add
xchg
enter
ljmp
orb
dec
add
decl
std
push
movsl
stos
movsl
mov
cwtl
inc
adc
add
sub
mov
adc
xchg
shrb
or
negl
xchg
jb
add
test
pop
mov
jp
mov
jmp
push
cmpsb
lds
cld
xor
repnz
sub
repnz
dec
nop
aas
push
test
mov
andl
inc
lods
xchg
test
stos
add
mov
mov
daa
sahf
pop
cmpsb
add
stos
shr
test
pop
pop
dec
aas
ss
adc
mov
roll
mov
dec
fisttpl
dec
adc
insl
cli
mov
dec
jmp
jo
mov
data16
sub
or
cmp
cmp
xor
pop
sub
jo
hlt
popf
mov
cmpsb
fisubl
mul
adc
es
jle
in
stc
int
daa
daa
scas
stos
imul
loope
movsl
jo
sahf
cmp
sub
and
inc
mov
insb
jmp
insl
aad
push
mov
popa
mov
mov
icebp
sbb
cmp
and
jg
std
aas
mov
xor
jne
pop
int
pusha
pop
mov
or
dec
lahf
xchg
jg
int3
inc
adc
jecxz
jne
cmp
pop
test
test
sbb
sti
pop
inc
dec
pop
rorb
xchg
jg
mov
sub
cmc
jmp
int
je
jnp
adc
push
jo
mov
and
cmpsl
xor
cltd
pop
stos
adc
push
bound
mov
mov
jmp
lret
or
movsl
xlat
test
leave
fwait
test
adc
mov
aad
mov
pop
bound
fisubrl
loopne
and
fcomip
ror
icebp
xor
inc
mov
pop
dec
mov
movsb
adc
inc
mov
cmp
jns
add
mov
mov
inc
adc
xor
xor
and
xor
out
sub
in
mov
ljmp
adc
xchg
push
pop
push
cmpb
mov
mov
subb
scas
xorl
push
and
pusha
dec
ljmp
lea
push
and
sub
xchg
rol
repz
fidivrs
test
js
insb
push
js
decb
xor
mov
ror
stos
inc
ret
cwtl
cmpb
call
sbb
cmpsb
fs
xor
mov
pop
jne
sub
push
pushf
mov
pop
xor
fnstenv
pusha
out
or
sbbb
dec
stos
fisttpll
movb
and
ror
fistpl
adc
jg
imul
sahf
jne
lods
mov
pop
stos
push
cli
xor
mov
lcall
popf
je
mov
push
arpl
gs
movsl
call
xor
lret
add
dec
gs
sub
jle
inc
ja
xchg
bound
jmp
push
xchg
insb
rclb
in
fildll
sub
xchg
xchg
sub
iret
jl
xor
add
push
lods
or
cmp
mov
push
cwtl
sub
orl
les
es
sub
test
pop
gs
mov
arpl
into
sbbl
mov
push
fstps
xchg
popf
aad
test
test
xchg
nop
lret
out
adc
pop
or
incb
out
jp
xlat
xor
lret
push
xchg
mov
inc
sbb
add
lahf
out
shrb
xlat
mov
adc
popa
loop
insl
sbb
out
out
jo
mov
push
xchg
mov
inc
sbbb
cld
testb
dec
and
lcall
mov
mov
xchg
out
inc
mov
int3
inc
cmp
imul
mov
push
fwait
ja
pop
in
out
sub
je
xchg
push
pushf
inc
cmpl
push
in
mov
repnz
ds
cmpsb
outsb
mov
mov
add
jp
push
lds
inc
pop
push
shll
lods
and
imul
inc
or
icebp
and
mov
mov
jp
hlt
pop
aas
mov
or
sbb
or
inc
scas
negb
jo
and
in
pop
mov
push
mov
inc
cmpsb
add
sar
lods
lcall
dec
lret
cmc
xchg
mov
or
daa
repz
ljmp
push
mov
xchg
sub
sbb
adc
pop
cmp
mov
or
sbb
enter
add
add
jne
into
inc
fnstcw
push
in
stos
movsb
xchg
jno
fs
not
aam
dec
xchg
jno
add
mov
pusha
call
out
sub
xor
in
mov
addr16
movsb
fiaddl
ja
fs
fwait
or
in
popa
jns
mov
out
mov
mov
sub
fldl
sarb
sbbb
jbe
ds
lea
insl
dec
pushf
in
lret
mov
push
es
popa
inc
fcomip
pop
aam
pushf
cmpsl
push
popf
dec
je
iret
ficoms
adc
pop
jecxz
mov
mov
and
lahf
xor
sbb
push
sub
xchg
mov
ljmp
push
push
xchg
cmp
mov
fidivl
std
scas
cltd
ja
jae
xchg
push
hlt
je
aad
add
insb
push
sub
mov
int
or
iret
inc
cmp
push
pop
pushf
xor
gs
lcall
or
jne
jo
mov
jp
and
stos
addr16
mov
ljmp
xchg
inc
or
pop
cli
imul
add
push
sbbl
mov
test
outsb
imul
push
or
test
or
cs
push
xlat
fidivl
cli
faddl
gs
and
lods
fwait
sbb
int3
push
inc
rcrb
mov
fmull
mov
mov
xchg
movsb
pop
loopne
xchg
xor
addr16
and
xchg
xchg
insb
movsl
loop
js
jnp
mov
push
jge
or
xchg
mov
lea
xor
add
adc
push
adc
adc
out
mov
sahf
mov
push
scas
pop
pop
out
sub
loop
cmp
push
xlat
mov
xor
or
sbb
and
out
dec
mov
lods
inc
ds
aas
dec
inc
mov
push
lods
data16
xchg
aam
nop
addr16
push
xchg
loope
fmulp
call
shrl
filds
out
mov
sarl
and
ret
xchg
push
stos
dec
and
jae
repz
insb
jbe
xor
nop
and
dec
fnstenv
mov
sub
inc
stc
fistps
repz
in
xor
sbb
dec
inc
in
out
ljmp
icebp
sub
out
imul
addr16
push
mul
ret
paddb
xchg
aam
mov
and
fwait
sbb
jnp
outsl
pop
push
pop
enter
enter
or
xlat
xchg
jo
push
push
imul
sub
sub
sbb
xchg
jno
add
mov
out
cmc
je
mov
sub
push
aaa
xor
stc
mov
jecxz
xor
jb
jl
mov
mov
add
sbbl
out
shl
dec
jmp
aaa
xchg
jmp
sub
popa
movsl
int3
popf
sbb
jge
addr16
and
dec
adc
in
xor
outsb
jno
arpl
mov
xor
scas
mov
xchg
rol
in
xor
outsl
test
ds
repz
rolb
add
aam
out
jb
push
scas
shrb
mov
sahf
mov
cmp
inc
insl
mov
in
fiadds
bound
inc
sub
pop
cmc
and
lea
andb
jp
movsl
jne
push
jle
sub
rcrb
movsl
pop
call
jnp
ds
pop
sub
ficomps
dec
cmpsb
cmp
or
nop
and
lcall
lret
sbb
roll
arpl
aam
push
shl
ss
or
clc
sub
sbb
mov
mov
shlb
pop
aaa
mov
lods
arpl
out
and
xchg
les
dec
xchg
push
dec
pop
xlat
leave
xchg
sbb
mov
add
sub
pop
lods
mov
sbb
jmp
cmp
lds
enter
and
pop
das
adc
add
jnp
sub
push
dec
xor
enter
xchg
pop
lea
jae
jo
jmp
adc
xor
in
mov
rol
test
loope
mov
rol
repnz
mov
and
or
mov
icebp
inc
jb
adc
sub
cltd
pop
in
stos
mov
xchg
ret
cld
push
mov
cltd
cmp
ret
rcrb
sahf
je
mov
mov
add
mov
pop
sub
jge
pop
jecxz
mov
out
insb
sbb
mov
or
jb
cmp
addr16
mov
ja
push
jo
lods
add
clc
loope
push
mov
pushf
push
bound
ds
pop
pop
sub
pusha
push
xor
mov
dec
ficompl
mov
add
inc
lock
mov
inc
stos
aaa
mov
lcall
inc
mov
dec
xor
data16
scas
movsb
jnp
scas
ljmp
loope
es
scas
jmp
in
jns
xor
inc
lret
sub
call
das
cld
enter
inc
scas
xor
dec
test
stc
outsb
insb
pushf
mov
je
adc
push
pop
sub
push
pop
adc
cmp
out
fdiv
adc
push
idivl
cmp
add
arpl
dec
jns
pop
and
sbb
mov
mov
mov
add
adc
rcl
sub
push
stos
std
out
xor
mov
inc
xor
pop
jecxz
mov
xor
adc
dec
jno
mov
fisubrs
inc
enter
inc
mov
cmp
ljmp
ror
mov
imul
cmp
fsts
shll
cmp
dec
pop
jle
jecxz
pop
pop
push
test
mov
sub
adc
test
sbb
popa
push
inc
sbb
inc
lret
scas
sub
out
aas
mov
icebp
jb
push
push
and
xchg
dec
out
dec
sub
addb
inc
mov
arpl
sbbb
cmp
mov
adc
jmp
into
push
fisttps
xlat
mov
lahf
pop
data16
sbb
sbb
sahf
sbb
daa
adcl
sbb
mov
jne
std
outsl
arpl
idivb
test
xchg
jg
cwtl
jge
or
jp
pusha
sbb
pop
adc
addr16
sbb
mov
jnp
stos
dec
and
outsb
out
jecxz
icebp
pop
in
int3
inc
push
jne
sbb
dec
fstpt
sub
xchg
icebp
jne
mov
adc
adc
loopne
mov
je
jp
fbstp
mov
jb
imul
pop
dec
paddw
andb
ds
sub
or
shrl
and
inc
pushw
or
int
mov
xor
pop
ret
dec
icebp
push
out
jl
sub
insl
jns
inc
push
imul
jle
dec
addr16
scas
xchg
pop
xchg
lcall
jge
jnp
or
mov
or
test
inc
in
pop
sbbl
nop
pushw
cmpl
std
xchg
pop
xchg
popl
mov
inc
inc
mov
popa
lods
notb
mov
insl
jbe
xor
push
negb
push
xlat
scas
xor
xchg
pop
icebp
outsl
out
lret
test
cmpsb
and
push
repz
xlat
outsl
shlb
mov
pop
mov
sub
mov
jno
loop
repnz
mov
sbb
lahf
in
dec
push
adc
lds
scas
jg
aas
lea
sti
or
push
push
incb
fwait
out
xor
pop
in
pop
cld
aaa
mov
sbb
xchg
out
sti
dec
xor
sub
adc
nop
mov
jle
insb
sbbb
lock
int
mov
xor
stos
call
adc
sbbb
adc
inc
notb
leave
loop
sahf
stos
xchg
adc
js
sub
jno
in
mov
cmp
rcrb
outsb
dec
inc
or
add
jp
pop
clc
mov
mov
mov
cmp
dec
push
xor
outsl
cmpsl
fcmovbe
mov
ret
add
adc
dec
add
in
imul
cmpsb
dec
into
outsl
and
imul
cmp
cwtl
mov
dec
lret
mov
mov
ljmp
cmpsb
dec
xchg
xchg
roll
nop
and
xchg
shlb
lret
xchg
xchg
cmp
cld
cmc
bound
mov
mov
enter
ss
adc
adc
ja
sbb
sbb
cmp
mov
test
cmp
pop
and
pop
fcmovnu
pop
clc
xchg
outsl
adc
pop
in
or
cld
out
or
test
gs
loopne
clc
cmp
cmpsb
adc
jnp
mov
outsb
push
jnp
call
fstl
ds
inc
jno
int3
subl
xor
ljmp
xor
adc
jb
jne
inc
mov
adc
int3
adc
mov
fisubrs
mov
dec
popf
xchg
fst
stos
into
test
sbb
and
fildll
les
xchg
dec
and
mov
mov
inc
mov
or
xlat
xor
or
jp
xchg
dec
pop
pop
hlt
sub
jp
adc
repz
or
aas
sub
jmp
mov
loop
add
test
jae
lret
push
je
push
imul
dec
pop
cmp
or
ret
sti
mov
cmp
cli
adc
or
jno
or
out
shl
or
shll
sbb
sub
test
sbb
push
out
xchg
or
or
sbb
push
xor
push
xchg
lods
mov
mov
adc
cli
push
fdivl
mov
shr
lret
cmp
fisubrs
sbb
or
ja
lahf
shll
adc
ja
loop
push
pop
mov
outsb
cmc
sahf
popf
das
lret
cmp
cmp
fsubp
lahf
or
cld
shrl
inc
sbb
hlt
sbb
add
dec
notl
mov
adc
dec
pop
aad
jo
mov
and
sbb
and
test
das
mulb
jle
add
mov
sub
sub
and
lahf
fistpl
scas
jb
repnz
inc
add
mov
pop
or
xor
cmp
sub
xchg
ficompl
jl
hlt
push
mov
stos
xchg
push
inc
cmpsb
mov
dec
outsb
xchg
jmp
ror
fistl
jecxz
add
or
xchg
clc
jle
cmp
loope
cld
jmp
stos
mov
out
loopne
mov
jle
int
add
mov
inc
push
inc
mov
cwtl
in
jno
dec
xchg
outsl
and
ja
mov
fsts
movsb
and
sub
stc
xchg
jnp
adc
pop
push
and
mov
rcrl
pop
push
inc
xlat
mov
sub
push
mov
xor
mov
mov
popa
das
testb
in
arpl
or
mov
jo
cld
adc
jp
call
cmp
shrl
ss
call
loop
sub
xlat
xchg
push
and
fidivs
nop
and
jae
ds
or
inc
jno
cmc
scas
adc
mov
shl
enter
int3
test
cmp
jno
xchg
mov
je
sub
xchg
pop
or
adc
push
pop
stos
test
or
jnp
icebp
outsb
iret
cmpsl
sub
push
and
popa
fsubr
mov
enter
cmp
add
stc
loop
lods
cmpsb
sub
out
fcoml
and
sub
sbb
sub
or
adc
pop
addr16
stc
jne
cltd
repz
ret
push
lock
in
xchg
ja
mov
adcb
jbe
ss
int3
dec
xchg
adc
sbb
mov
enter
or
leave
rolb
dec
jecxz
pop
adc
outsb
ret
dec
es
inc
mov
shll
fwait
pop
xor
sub
mov
adc
je
fstps
data16
jns
add
pop
and
mov
subl
and
fldcw
fmulp
jb
xchg
scas
pop
fmull
sub
push
pop
addr16
imul
sbb
mov
add
insl
and
imul
sbb
sahf
das
loop
mov
pop
xor
call
sahf
ljmp
mov
pop
data16
mov
fsubp
sbb
aad
mov
mov
and
ljmp
inc
adc
inc
jne
movsb
or
mov
add
xchg
jmp
cmp
ret
in
lcall
mov
sub
adc
popf
sub
mov
popf
imul
xor
add
stos
xchg
in
movsl
gs
repz
jmp
or
fsubrp
jg
add
addr16
ds
cmp
ret
push
rol
sub
popf
mov
lock
call
stos
sbb
mov
iret
sub
pop
call
popa
ds
incb
dec
popf
mov
sub
mov
lods
mov
xchg
fstpt
ret
out
dec
into
mov
and
sti
popf
dec
push
icebp
dec
je
movsl
fdivl
inc
sbb
sbb
dec
add
sti
jge
testl
iret
pop
das
mov
daa
pop
icebp
or
out
popf
dec
in
jns
xor
int3
cmp
mov
adc
call
xchg
add
cmp
es
pop
lods
and
xor
jne
fiadds
call
movsb
decb
ljmp
mov
loopne
cmc
add
ljmp
js
dec
adc
fisttps
and
adc
pop
sub
push
jne
push
clc
mov
or
out
sub
cli
sti
push
xchg
lahf
nop
pop
push
sbb
xor
scas
movsl
aaa
xor
jg
call
sahf
outsl
out
jp
dec
enter
push
or
mov
cli
jne
or
das
mov
inc
pop
inc
mov
pop
movsb
jge
aaa
fcmovnbe
cli
push
xchg
jb
clc
xor
push
rol
mov
xor
sbb
adc
or
into
test
add
xchg
add
adc
test
movsl
in
sub
jno
inc
test
mov
sub
stc
or
test
or
dec
xchg
scas
adc
inc
lret
mov
sarl
cmp
ja
xor
xchg
int
mov
orl
out
int3
insl
rol
int3
out
fcmovnbe
pop
imul
pop
pop
lods
ja
int3
jmp
data16
mov
outsl
mov
cmp
jnp
pushf
cmp
dec
mov
mov
inc
arpl
movsb
rorl
and
xor
fisubrl
clc
jae
mov
inc
inc
pop
mov
jns
or
fstl
outsl
mov
daa
std
xchg
decb
cmpsl
out
into
xchg
stos
out
sbb
lods
imul
cmp
and
sbb
push
sub
enter
jns
rcrl
cmc
pop
mov
lret
inc
mov
jo
inc
xchg
andb
cld
pop
jno
out
aaa
jo
xor
inc
or
cmp
jle
pop
roll
daa
lahf
pusha
test
cmp
js
cmp
sub
or
test
dec
and
or
mov
jl
fwait
sti
out
lods
ret
mov
int3
or
test
addl
shlb
mov
jp
dec
or
or
cld
or
rorl
mov
push
lock
cmpsb
sar
cld
jae
mov
int3
xchg
adc
out
loopne
add
outsb
test
mov
test
in
jae
ljmp
mov
push
into
scas
imul
int3
xchg
mov
xor
sahf
aas
lret
or
xor
and
movsb
or
out
movsb
int3
dec
sti
xchg
xchg
arpl
adc
scas
dec
ss
ss
popf
loopne
jb
and
fdivrl
push
fldl
push
leave
add
dec
lds
mov
repnz
or
push
scas
or
aad
inc
sub
inc
lahf
mov
mov
xchg
xchg
or
out
js
sbb
loop
pop
xchg
ret
add
pop
add
xchg
add
jp
add
pop
push
rclb
xor
popf
jp
pushf
add
and
mov
orb
in
test
or
push
fsubp
rol
xchg
pop
ss
add
movsl
sub
lcall
std
push
movsl
xchg
sub
or
scas
dec
jno
xor
stc
mov
cli
lea
orb
movsb
push
mov
jnp
fcomps
mov
std
inc
jge
adc
stc
lret
dec
ss
sbb
inc
movsl
rolb
or
mov
pop
dec
add
test
test
sbb
inc
lea
inc
pop
mov
pop
insl
rcrl
fildll
cmpsb
sub
xchg
jge
call
adc
int
pop
pop
fisttpl
mov
push
cmp
xchg
iret
aas
icebp
and
jmp
jo
out
jns
ljmp
daa
mov
adc
in
or
xor
cltd
xchg
inc
push
push
adc
pop
xor
jmp
or
inc
in
pop
push
gs
lret
jmp
dec
xchg
loope
pop
loopne
add
dec
jg
xorl
pop
xchg
fbld
fwait
popa
xlat
mov
inc
insl
add
lods
enter
clc
jbe
cltd
jo
push
push
mov
jne
sub
jnp
insl
sahf
lock
mov
out
or
jge
mov
mov
gs
nop
bound
lahf
jecxz
mov
pop
inc
scas
or
dec
or
clc
mov
cmpsl
mov
movsl
cmp
outsl
rcll
shl
inc
in
fisttps
inc
popa
rolb
push
outsb
or
jo
jae
xlat
mov
add
sub
mov
push
cmp
gs
pop
shrb
stos
jbe
movsl
cwtl
adc
push
push
movsl
xlat
sbb
jb
dec
xor
stc
cltd
jae
cli
mov
cmp
or
fistpll
cmpsl
sub
jp
ds
xchg
shll
jns
mov
jg
or
jle
and
push
dec
aaa
jmp
out
xchg
and
push
dec
icebp
push
mov
jmp
and
pop
int3
sbb
push
or
aad
das
shl
jb
push
insb
fadd
scas
or
add
shrb
jecxz
pop
jne
pop
pop
rcll
fistpll
mov
ficomps
mov
dec
and
xchg
out
cmp
sbb
xchg
adc
loope
sbb
stos
movsb
mov
push
iret
mov
hlt
pop
out
sbb
push
sub
rcl
pop
popa
pushf
jno
sbb
sbb
fs
inc
dec
scas
insl
and
aas
icebp
xchg
lea
jns
mov
mov
fldenv
jmp
cmc
jno
aam
aaa
push
inc
mov
xor
push
fcompl
fidivs
daa
mov
jb
in
or
jnp,pt
push
pop
dec
add
cltd
and
loope
adc
mov
test
pop
mov
mov
mov
dec
and
or
mov
pop
cld
das
mov
stos
mov
mov
cmp
add
sub
push
push
leave
cmp
push
repz
xchg
jns
ds
test
push
cmp
mov
pop
xchg
mov
sbb
push
shrb
int
push
xor
and
fs
cs
jle
orb
jecxz
pop
orl
pop
jbe
loope
ficoms
outsb
and
inc
shrl
rcr
roll
lcall
fstl
mov
xchg
ds
sahf
fldenv
scas
lock
sbb
jo
xchg
outsb
ss
negb
and
pop
sti
xchg
aas
push
imul
pop
js
aaa
test
dec
adc
fidivrs
adc
and
cmp
and
dec
ja
lea
or
iret
mov
rcrl
in
xchg
in
dec
addr16
arpl
mov
test
jl
mov
dec
lock
mov
mov
out
rcl
fimull
aam
mov
test
mov
out
mov
fnstcw
imul
stos
cld
add
fsubp
cmpsb
fsubs
sub
inc
mov
in
je
pop
pusha
lea
cmp
cmp
fs
lcall
ljmp
les
addb
stos
cs
fmul
add
in
cmc
mov
adc
cmp
ret
jns
pop
mov
xchg
sbb
inc
mov
filds
dec
fisttpll
cltd
xor
lcall
out
das
fbstp
cmpsl
int3
pop
cmpb
or
add
push
sbb
pop
cmpsb
jle
aas
jns
ja
mov
xchg
addr16
shl
mov
pusha
insb
xchg
lret
in
add
cli
loop
into
rcl
pop
push
sahf
dec
pop
enter
pop
pop
add
sbb
mov
xchg
pop
dec
add
inc
jl
jp
test
jnp
jecxz
mov
dec
sti
cli
divb
jns
mov
mov
orb
pusha
pop
arpl
jg
dec
pop
fisttpl
ret
dec
jno
inc
test
jno
push
xchg
push
sbb
and
outsb
pop
cmp
dec
sbb
jbe
aad
dec
mov
xchg
shrl
or
mov
repnz
mov
cld
stos
fxch
idivl
lahf
rolb
aam
pop
out
sub
iret
pop
adc
pop
repz
push
movsl
sbb
insl
fwait
dec
cmc
mov
push
adc
and
mull
push
mov
outsl
mov
mov
jmp
sub
ljmp
sbb
sar
div
fs
ret
in
and
adc
push
stos
dec
and
cmpsl
out
or
push
in
jae
sbb
xchg
hlt
push
sub
inc
push
fildll
mov
sub
pop
pop
sub
pop
sbb
add
xor
mov
cmc
pop
xor
sar
mov
and
fdivrs
pop
clc
and
xchg
mov
fwait
xchg
and
test
sbb
mov
insl
mov
push
push
inc
cmpb
add
mov
jnp
jle
loope
loopne
push
cmpsb
sub
and
pop
cmp
inc
add
out
jp
xor
js
or
loope
xchg
xchg
xor
mov
or
repz
adc
in
call
xchg
repz
push
orb
and
and
pushf
lahf
fildl
xchg
mov
mov
dec
inc
push
pop
xchg
int
pop
sub
test
cwtl
hlt
jbe
test
jnp
ja
mov
loop
aad
pusha
fs
mov
pop
xchg
sarl
or
andb
xchg
movsb
or
call
mov
sysexit
leave
cmpb
in
notb
cltd
arpl
cmp
jecxz
shlb
faddl
and
outsl
xchg
xor
daa
out
sbb
push
pop
xchg
jl
pop
outsb
sub
int
es
and
ljmp
idivb
jbe
inc
sub
adc
inc
mulb
cmp
sbb
das
aas
sbb
mov
and
in
and
sub
pop
xor
mov
mov
pushf
fiadds
sbb
xchg
imul
mov
or
daa
mov
int3
jno
repz
imul
jnp
int
or
xor
mov
xchg
ret
sub
sub
jmp
adc
sbb
inc
mov
lea
mov
int3
mov
push
cmp
and
mov
push
push
fdivs
jmp
aaa
fldl
in
push
mov
jecxz
popa
cltd
sbb
jno
and
adc
cmpsb
push
sub
sbb
xor
jg
push
stc
jge
adc
mov
notb
aas
movsl
mov
fistpl
test
mov
stos
inc
inc
in
pop
out
mov
dec
mov
add
adc
fucomip
inc
mov
lds
mov
sti
ja
inc
jb
add
jp
add
pop
jns
sti
jae
insl
xor
cmpsb
pushf
rcrb
int
sub
sub
jge
mov
add
pop
cmp
fsubrl
inc
repz
add
adc
loop
dec
sbb
mov
loopne
cld
jmp
jmp
sahf
xchg
notb
pop
jb
adc
lods
pop
fcoml
push
sahf
push
fwait
imul
xchg
cli
mov
mov
ret
mov
shrl
push
scas
inc
fidivs
ja
movsb
xchg
out
sub
test
push
clc
aas
lock
dec
fisubrs
pop
enter
sub
xchg
mov
mov
push
stos
das
pop
jmp
dec
dec
jge
pop
pop
cmp
inc
sbb
imul
mov
aam
fsubrl
sub
lahf
ds
bound
and
and
das
cmpsb
push
les
inc
clc
loope
cld
call
sahf
test
xor
pushf
pop
mov
xchg
xor
mov
iret
jnp
xchg
cmp
cli
push
push
mov
or
mov
inc
cs
std
subl
dec
nop
jp
pop
mov
adc
pop
inc
int
fcmovne
repz
fs
popf
enter
add
cs
scas
cmp
jmp
insl
cmp
popf
ljmp
sahf
in
mov
dec
std
sbb
leave
out
sbb
and
pop
out
sub
sub
sahf
lahf
in
clc
daa
cmpsl
pop
popa
stc
mul
mov
rcrb
cmp
jns
and
aam
rcll
lods
repz
sahf
push
sbb
push
or
in
push
push
inc
aad
idivb
push
inc
xchg
xor
dec
xchg
push
push
fisttpl
mov
call
push
dec
push
call
inc
pusha
adc
pop
mov
imul
cmp
cwtl
mov
outsb
mov
rorb
xchg
imul
pop
push
dec
cli
pop
fwait
lods
mov
push
imul
mov
std
jnp
stc
add
in
sarl
mov
xor
sub
push
or
orb
xchg
xchg
push
leave
push
sti
testb
cmpsb
ja
add
jbe
jae
mov
inc
movsb
xchg
pop
or
add
mov
cmc
into
sub
jns
sbb
xchg
mov
inc
and
leave
xor
scas
outsb
xorb
mov
dec
out
fucom
incl
sarb
pop
fisubs
pop
aas
ss
addr16
push
aam
int
rolb
or
lods
sbb
lret
ror
movsl
xor
fcmovb
stc
insl
loop
imul
jbe
xor
das
cmpsb
pop
stc
lea
cld
and
sahf
sbb
ljmp
dec
jmp
shrl
push
sub
or
stos
icebp
data16
je
sbb
imul
enter
scas
add
sarl
pop
cltd
inc
add
pop
clc
jns
jp
mulb
jae
fsubs
xor
ja
sub
jbe
into
xchg
lds
mov
pop
call
outsb
adc
pop
mov
jb
push
mov
and
mov
dec
outsb
mov
call
mov
mov
loop
sub
sub
cmp
adc
xchg
fxam
pop
addr16
jae
mov
cs
dec
lods
inc
and
jno
sbb
push
test
sbb
mov
cmp
xchg
rorb
pop
sbb
fildl
sub
andnps
mov
dec
mov
loope
jb
push
dec
xor
push
mov
outsb
and
push
jo
adc
test
jnp
test
sbb
sbb
data16
inc
jb
mov
push
sbb
repnz
and
shrl
shrb
lret
movsl
jl
popf
cmp
hlt
mov
adc
shll
push
jg
jge
lret
push
jle
adc
int
in
mov
add
jnp
scas
out
ljmp
xorl
add
sbb
aaa
and
pop
push
inc
mov
xchg
clc
repz
int3
and
mov
mov
and
sarl
and
push
mov
popf
repz
push
popa
std
mov
xor
xor
mov
adc
sbb
cmp
call
dec
jb
mov
mov
sbb
xor
fwait
fbstp
add
jnp
scas
mov
call
pushf
fdivs
dec
or
xor
jp
xor
scas
sbbb
lgs
fsub
cs
xchg
pop
xlat
cli
sub
xorb
outsb
sarl
adc
in
js
aam
mov
cmp
shlb
ja
xchg
lret
pop
inc
loope
mov
insb
ljmp
sub
sahf
xor
cmpl
inc
inc
xchg
add
cld
xchg
xchg
pop
xlat
rcrl
lods
fmuls
shlb
cltd
clc
push
jno
clc
rol
pop
xchg
lret
pop
sub
fnsave
push
sub
addr16
sbb
push
mov
enter
mov
lret
dec
imul
xchg
fwait
roll
xor
stc
shrb
test
aam
and
xchg
mov
xor
jno
int3
or
xchg
lret
inc
cmc
cmp
add
mov
cmp
cltd
cmp
sub
xor
shlb
cmp
rcr
out
test
fistl
fidivrs
rol
adc
stos
in
bound
loope
iret
pop
adc
pop
xor
sub
sub
cmp
dec
pop
imul
and
inc
or
dec
xchg
and
stc
fistps
or
sub
pop
gs
aaa
jg
es
xchg
cmc
lcall
and
shl
add
fnstcw
jno
add
inc
popf
inc
jb
lock
jbe
or
nop
mov
or
fcmovnb
aaa
and
outsl
iret
in
aas
add
xchg
sbb
xor
jnp
or
int
cltd
stc
lds
sub
mov
add
movsb
push
dec
gs
push
int
xchg
mov
fdivrs
or
fmul
inc
sub
push
push
cmp
stos
int3
cmp
mov
stos
into
ret
cmp
push
and
cmp
adc
sub
push
lds
faddl
pop
adcl
mov
pop
push
popf
enter
jl
scas
dec
int3
mov
in
jl
mov
cmpsb
push
cmp
jno
jge
jne
lcall
test
insl
test
xchg
push
in
imul
adc
loopne
mov
xchg
cld
insb
mov
pop
inc
push
mov
int
push
pop
mov
sbb
push
xchg
icebp
add
fstpt
mov
mov
mov
pusha
jnp
test
mov
bound
test
or
test
add
scas
inc
mov
es
insb
repz
in
lahf
es
dec
rclb
push
test
jae
out
adc
ljmp
das
out
lea
jle
dec
adc
push
in
dec
aas
sbb
out
jmp
sbb
popa
js
xchg
addb
mov
ficompl
lods
cmp
into
xchg
stos
das
mov
dec
lret
jle
xor
pop
aad
push
shl
mov
ret
jmp
adc
lea
popa
xor
or
ds
lea
pop
popf
notb
xor
ds
jle
outsl
test
mov
xor
sub
dec
bound
mov
or
test
aam
sub
jge
xor
mov
sub
pop
adc
data16
bnd
or
std
cmp
sbb
aas
add
xchg
je
dec
sub
clc
jp
sub
stc
cmp
shlb
shlb
cli
icebp
push
xlat
sti
xchg
fs
inc
repnz
inc
pop
sbb
mov
mov
jbe
pop
clc
mov
stos
push
cli
add
testb
es
insl
sub
les
dec
arpl
jne
out
or
leave
loop
xor
adc
inc
pop
cmpsl
add
hlt
or
aad
cmp
jns
cmp
adc
gs
mov
sbb
sbb
push
mov
sbb
sub
shrb
xor
push
pop
jnp
or
mov
xor
sub
inc
jp
lds
pop
or
insl
inc
outsb
mov
xlat
or
xorl
cmpsb
rorl
and
lret
inc
lahf
adc
mov
fwait
mov
sbb
test
pop
xor
popf
shll
mov
xor
push
inc
addr16
dec
out
jp
ret
mov
ret
jle
dec
sbb
stc
cmp
sbb
push
xlat
into
or
movsb
orl
sarb
je
mov
jae
cmp
es
aad
or
inc
mov
das
and
sbb
inc
pop
cmp
cmp
dec
push
pushf
scas
add
lods
mov
test
mov
push
jae
lea
ficomps
add
ja
and
mov
lret
aas
out
adc
mov
ds
mov
loop
xchg
push
rorb
push
add
cltd
adc
and
add
je
shll
inc
dec
sahf
mov
lods
shr
jns
mov
pop
stos
ds
jo
xchg
insl
lret
shl
imul
std
cmp
or
adc
adc
enter
adc
cli
lea
jbe
lods
mov
push
and
jnp
ss
push
and
fldenv
addr16
cmp
push
mov
rcll
arpl
jbe
add
push
scas
inc
sbb
test
rcrl
sub
adc
aam
mov
jmp
cmc
out
mov
jp
movsl
cli
or
insb
faddl
movsb
das
aaa
pop
pop
mov
pop
mov
pop
pusha
sahf
mov
lret
call
mov
gs
or
mov
sub
mov
mov
fadd
or
lcall
push
sahf
ret
pop
pop
daa
out
pusha
ss
xor
xchg
dec
cmpsb
lods
decb
ss
cld
xchg
aad
das
jl
out
ds
or
pop
fsubrl
aas
ret
push
sbb
addr16
adc
xor
ret
loop
arpl
in
jne
pop
sbb
ficoms
xor
hlt
or
pop
inc
push
inc
in
cmp
inc
dec
ret
subl
xchg
dec
sbb
imul
daa
dec
mov
adc
dec
lcall
fwait
inc
sub
daa
roll
arpl
out
xor
mov
or
lcall
mov
std
mov
jb
push
fmull
dec
sub
mov
arpl
jle
xor
cmpb
lcall
inc
xchg
das
insb
mov
pop
xchg
push
popa
cmpsl
imul
stc
mov
test
rcrb
and
fs
faddl
xchg
std
sub
fcoms
adc
in
inc
jecxz
pop
call
std
gs
push
push
sbb
mov
mov
and
scas
mov
xchg
pop
or
movsl
scas
shlb
sti
icebp
sub
mov
mov
sbb
add
mov
xchg
or
adc
add
sbb
sub
pop
lcall
add
jp
xchg
fisttps
popa
mov
pop
stos
movsb
jge
adc
push
cld
or
test
scas
mov
clc
cmp
insb
cmpsl
in
mov
mov
jmp
daa
test
inc
cltd
jnp
mov
enter
in
xor
adc
lret
repz
jns
sbb
xorl
sub
add
cmpb
jne
pop
int3
rcr
popf
insb
lods
xchg
adc
in
push
out
fsubl
inc
push
clc
xorl
xchg
pop
xchg
sbb
pop
or
popa
test
lar
sti
in
jbe
pop
shrb
xchg
pop
test
fcomip
pop
fs
pushf
mov
cmp
or
mov
add
dec
push
test
bswap
mul
xor
inc
fmull
fisubrl
jbe
fs
es
test
adc
imul
insb
fwait
test
lret
icebp
sub
insw
sti
cmp
loopne
and
loop
repnz
dec
pop
pop
mov
jg
adc
dec
subb
xor
mov
pop
fildll
pop
mov
xchg
call
loop
and
mov
fcomps
test
mov
dec
pushf
call
sbbl
jae
inc
addl
jae
je
sarl
add
xor
testb
js
sbb
adcl
test
mov
jge
inc
add
mov
inc
inc
mov
push
nop
js
popl
repz
xchg
add
pop
sbb
and
mov
arpl
mov
cmc
pusha
int
pushf
sub
iret
adc
rolb
cmpl
sbbb
inc
scas
push
push
jmp
das
sub
subps
xchg
fcompl
mov
xlat
testl
fdivr
jnp
mov
test
in
push
inc
adc
call
lcall
and
inc
add
repnz
sti
out
in
mov
cltd
add
cli
js
sub
lds
ret
jno
push
inc
iret
int3
bound
mov
or
cld
lods
mov
pushf
test
xor
stos
test
xlat
xchg
lds
loopne
popf
mov
jae
outsl
adc
jo
push
push
mov
jg,pn
ss
xor
and
cmc
jl
xchg
es
sbb
lret
push
push
pop
dec
data16
cli
jnp
call
lret
cvttps2pi
push
add
push
and
movsl
or
cltd
hlt
mov
sbb
nop
bound
nop
sub
and
inc
adc
test
xchg
sahf
das
popf
movsb
jg
mov
push
outsb
ds
inc
cmp
push
stos
divl
frstor
xchg
inc
mov
pushf
pop
jge
jg
in
fs
dec
dec
dec
popf
xor
jmp
inc
stos
or
sub
and
cwtl
imul
mov
cmp
jbe
pop
imul
and
rol
fwait
xchg
jge
pop
inc
adc
push
pop
bound
add
inc
andl
mov
jae
inc
cltd
jne
jl
sub
fs
jmp
add
xchg
xchg
push
rcr
jmp
ret
push
pop
xor
push
inc
sbb
inc
dec
and
notl
inc
sub
inc
and
push
rcl
push
into
out
insl
or
ret
out
and
ficomps
xchg
dec
jbe
aas
in
subl
jl
push
pop
adc
mov
je
xchg
sahf
dec
lret
sub
lds
inc
adc
arpl
popf
popf
dec
push
mov
cmp
repnz
dec
pop
lret
push
addr16
xor
flds
das
lods
call
test
aam
lods
cmpsl
mov
in
adcl
sbb
push
out
stc
xchg
insl
js
mov
andl
popa
ds
sbb
dec
push
aam
inc
xchg
imulb
scas
stos
xchg
or
adc
jb
divb
std
test
xchg
sti
mov
or
dec
mov
or
ja
ficoms
jbe
mov
sub
ret
sbb
cld
push
and
mov
ret
mov
xchg
ss
enter
ret
sbb
jae
fildll
xchg
sbbl
lahf
mov
sti
cmc
movsl
mov
adcl
pop
in
xchg
cs
push
dec
pop
inc
into
daa
in
in
lcall
xchg
xor
inc
stos
aad
cmpsb
bound
lods
xorb
inc
mov
bound
rorl
popf
sub
sub
sub
jbe
pop
insl
xor
pop
cmp
and
mov
sub
repz
cwtl
scas
lods
es
es
hlt
insl
push
add
adc
int3
inc
mov
das
xchg
mov
arpl
push
xchg
xor
cwtl
cmc
pop
lret
jg
jo
xor
hlt
jnp
stos
stos
push
mov
add
add
xchg
nop
xchg
or
popa
arpl
cmpsl
shrl
gs
jge
xchg
test
loop
movsl
mov
inc
aad
mov
cmp
dec
add
jns
cmpsl
rcrb
nop
movsb
out
stos
test
mov
dec
arpl
es
out
js
inc
gs
in
xchg
shll
adc
ds
mov
lock
jns
ret
loopne
inc
push
adc
mov
addr16
movsb
dec
and
pop
pop
pop
jle
adcl
aas
daa
dec
push
push
lock
add
lds
jp
mov
repz
cltd
into
xor
rcrb
cltd
inc
mov
in
cmp
sub
xchg
faddp
and
pop
outsb
scas
inc
and
push
inc
int3
pop
hlt
loopne
in
mov
or
jecxz
and
lret
adc
movsb
stc
mov
rorb
xchg
das
sub
and
out
fldt
cld
pop
loope
insb
push
dec
adc
rcl
shll
out
fwait
gs
scas
lcall
cmc
mov
dec
inc
fimull
scas
jl
fsts
enter
mov
sbb
jne
pusha
out
sbb
mov
popa
mov
mov
cmp
int
std
es
add
pusha
mov
jbe
xchg
std
push
andl
test
fldt
inc
pop
mov
and
sti
pop
cmc
int3
inc
ret
cmc
leave
add
push
lock
push
mov
andb
in
pop
stc
lcall
jae
imul
cmp
add
dec
dec
stos
aas
dec
negb
movsb
xor
or
cmp
sub
repnz
mov
lds
jecxz
popa
dec
xchg
inc
jp
jnp
loop
ficompl
adc
adc
aad
shll
jl
scas
fidivs
sbb
adcb
lea
mov
xchg
aaa
and
loop
pop
sub
push
ds
pop
roll
stos
push
rorb
sbb
in
ljmp
pusha
fs
sub
loopne
cmc
clc
out
mov
out
ss
xor
adc
and
push
sub
out
repnz
xchg
jle
lret
mov
sti
cld
push
mov
mov
int3
stos
push
lret
mov
aad
dec
loopne
push
lret
pop
jo
fisttpll
lock
pop
inc
dec
popa
scas
and
mov
pop
aaa
push
jecxz
movsb
in
pop
lds
mov
add
aas
cmp
mov
mov
inc
add
add
movsb
inc
scas
mov
cmp
loope
dec
mov
ret
push
subl
push
jecxz
fs
sub
stos
int
adc
mov
adc
scas
lods
subl
das
jecxz
adc
or
adc
pop
out
push
inc
js
sbb
mov
sbb
imul
repnz
jno
xlat
dec
xor
movsb
int3
add
sub
cmp
pop
xchg
out
mov
sub
mov
jle
pop
int
adcl
pop
or
and
scas
repz
loop
mov
nop
imul
repnz
std
lods
popf
jle
xchg
dec
sub
das
and
popa
ret
in
popa
shlb
scas
jmp
xchg
dec
out
dec
addr16
test
inc
mov
and
outsb
lock
push
scas
scas
add
sbb
push
test
subb
popf
repnz
bound
jmp
rolb
xchg
out
enter
je
ja
in
int3
ds
cmpsl
shlb
test
gs
mov
sbb
push
xor
in
mov
shl
dec
mov
or
clc
xor
insl
xchg
sti
sahf
cmp
cmp
push
xchg
jb
dec
subb
cli
rorb
jae
popf
dec
insb
jg
jge
adc
mov
mov
mov
cmpsb
jne
inc
cmp
and
scas
mov
jle
inc
push
pop
adc
add
cmc
pop
sub
dec
in
adc
sysret
gs
test
cmpsl
dec
fidivs
mov
or
insb
movntps
inc
inc
imul
or
repnz
jp
mov
push
in
call
imul
add
scas
pop
xlat
int3
jbe
mov
pusha
mov
xor
xor
movsb
cmp
xor
das
cltd
clc
jl
sub
push
mov
jmp
mov
bound
pop
sbb
in
aad
adc
and
cld
add
pushf
mulb
jp
mov
inc
xchg
jmp
in
mov
cmp
xor
js
cltd
adc
aaa
ds
cmc
xchg
cli
cld
ficoml
popf
dec
push
add
jp
pop
cmp
ds
cltd
sbb
sbb
and
jnp
loop
adc
ss
add
mov
inc
loop
mov
seta
mov
orb
mov
ds
out
mov
call
pop
push
mov
mov
inc
hlt
sbb
add
sbb
leave
and
adc
jno
movsl
sub
xchg
lret
sbb
xchg
mov
xchg
out
ret
out
xlat
xor
jne
inc
push
sub
or
or
mov
mov
iret
cli
push
xchg
into
test
pop
xlat
push
cltd
mov
leave
mov
xchg
mov
insb
bnd
mov
shlb
in
and
lock
mov
inc
sub
fdivl
pop
arpl
sub
dec
and
sub
bound
out
dec
aam
leave
push
push
in
les
xchg
sub
outsb
icebp
jb
sbb
sar
add
mov
fmuls
psubb
adc
rcl
cmp
lods
mov
sub
lahf
pop
inc
arpl
push
jno
shlb
adc
pusha
mov
jge
lods
xchg
jno
pop
int
lods
fwait
loope
arpl
pushf
data16
shll
mov
xchg
add
xor
pop
cmp
or
and
adc
lods
sub
pop
insb
inc
popf
dec
xchg
outsl
rorb
fcompl
push
push
into
test
rolb
jae
ja
shlb
stos
push
xchg
stc
jp
xchg
ss
lods
cmp
scas
fucompp
in
enter
aad
add
insb
or
sahf
xlat
sarb
dec
mov
xchg
push
sbb
sbb
icebp
lods
popfw
jbe
ret
xchg
lahf
and
ljmp
imul
add
xchg
scas
js
into
sbb
push
pop
jmp
test
aas
mov
push
aad
push
add
addr16
mov
cs
push
xchg
jo
addl
rorb
mov
shrb
inc
sbb
or
imul
pop
adc
and
xchg
scas
jp
add
lods
shl
lahf
jnp
mov
pushf
or
xchg
jb
inc
mov
jnp
mov
cltd
xchg
jb
mov
xchg
jo
sub
fisttps
or
aad
pop
and
iret
dec
fimull
dec
rol
adc
xchg
outsl
sub
rcrl
call
aas
mov
out
jbe
iret
cmp
xor
stc
xor
repnz
shrl
and
out
aas
cltd
imul
bound
jbe
mov
loope
bound
jnp
ficompl
iret
pushf
xchg
stc
cs
jp
stos
adc
sub
mov
stos
mov
adc
outsb
sub
inc
ja
subb
mov
push
repnz
push
lock
jne
daa
cltd
stc
lds
and
fstps
js
sarl
or
cmpsl
xchg
test
mov
pushf
sti
push
jns
loopne,pt
mov
push
in
repnz
in
iret
mov
inc
push
cmc
mov
sub
repnz
pop
cld
jbe
outsl
jne
sarl
faddl
mov
loope
andb
add
and
dec
xchg
or
cld
bswap
add
andb
mov
loopne
mov
sbb
test
mov
ja
mov
xchg
aad
bound
and
es
ljmp
xchg
jo
les
pop
dec
or
adc
cmpsb
push
push
mov
dec
call
mov
dec
inc
mov
aas
ret
mov
cmpsb
shrb
cli
adc
xchg
iret
in
xor
out
popa
js
jmp
pop
pop
fsubrl
insl
xchg
test
inc
pop
jb
lcall
add
push
and
icebp
xchg
cmp
mov
push
push
inc
outsb
nop
sahf
cmp
xchg
push
jecxz
ret
sbb
lret
mov
popl
or
lret
mov
iret
lods
jl
push
sbb
xchg
nop
push
test
mov
sub
push
dec
sbb
add
inc
js
fbstp
push
cmpl
sti
in
call
sub
cmp
stos
shlb
loop
sub
xorl
mov
int3
xor
pop
jp
sub
shl
or
xchg
sahf
bound
sti
mov
sahf
pushf
mov
pop
sbb
mov
jp
rcrb
jnp
sarb
std
js
xchg
outsl
inc
dec
roll
fidivrl
cmpb
aas
outsb
xor
and
bnd
ds
mov
cmp
and
aad
add
loop
sub
imul
inc
jo
sbb
inc
adc
push
mov
or
sub
and
sub
push
pop
movsb
or
orb
lcall
movsb
rolb
imulb
inc
repnz
enter
lods
jb
cmp
sub
jnp
cwtl
enter
daa
push
cmpsb
xchg
mov
andl
cltd
loope
jmp
fldt
fldenv
cmp
push
fistpll
push
stos
push
xor
xchg
inc
inc
mov
inc
clc
out
inc
shll
push
shl
insb
and
dec
pop
push
ror
xor
cs
cmpsb
arpl
lahf
repnz
lcall
sub
and
inc
ljmp
pop
lods
xchg
ficompl
xor
orb
adc
add
cmp
pop
outsl
or
cmp
sti
jle
bnd
fisubs
and
dec
dec
popl
mov
jns
cmp
xor
add
dec
push
data16
ss
pop
cltd
mov
in
jmp
mov
fistl
xor
jns
les
xchg
mov
xchg
mov
xor
jecxz
rorb
xor
jnp
dec
orb
inc
mov
adc
and
push
test
repz
dec
insl
movsb
repz
mov
fisttpl
cmc
jmp
cmp
cs
add
inc
repz
inc
aaa
fcomi
dec
xchg
jp
add
shlb
clc
filds
xor
and
ret
test
je
popf
pop
negl
test
icebp
xchg
mov
xchg
jmp
repz
sub
es
imull
gs
insb
gs
pop
iret
ret
cmp
jmp
mov
leave
lods
rcrb
subb
dec
aad
inc
push
movsb
lock
cmp
pop
aam
les
daa
iret
out
push
repz
movsl
xor
dec
pop
mov
inc
or
mov
and
test
mov
loop
mov
jmp
ljmp
add
mov
sbb
cmpsl
pop
fiaddl
stos
xchg
jg
mov
adc
xchg
mov
hlt
fidivrl
push
aam
je
mov
scas
jge
mov
out
data16
mov
repz
push
into
andl
je
fdivs
out
mov
cmpl
xorl
jb
cmpsl
ja
inc
loope
mov
cmp
mov
idivb
inc
jae
adc
adc
in
rcrl
adc
dec
jecxz
test
push
rorl
pop
icebp
stc
xchg
cmp
adc
pop
push
jg
lds
out
fildl
aas
inc
jl
sbb
xchg
jno
xor
rcr
pushf
jne
std
and
pusha
push
jl
out
cmp
popa
pushf
adc
push
jbe
ja
mov
stos
ss
pushf
test
mov
xchg
aas
xor
xor
leave
jnp
push
adc
cmp
push
pop
sbb
xlat
add
pop
xor
enter
xlat
gs
sbb
int3
test
lret
mov
fwait
int3
or
fidivrs
loope
dec
or
sbb
xchg
jae
movsb
cwtl
pusha
scas
mov
inc
jmp
mov
xor
rcl
cmpsb
sti
cmp
xor
imul
inc
pop
cld
decl
mov
jo
cmp
push
pop
test
sbb
cs
imul
mov
pop
adc
clc
cmpsl
loopne
add
xchg
inc
inc
cmp
mov
add
pop
data16
mov
sub
push
mov
popaw
sbb
lahf
lea
lock
inc
lods
mov
shlb
rcrb
mov
push
mov
aas
int3
fnsave
add
lds
or
dec
jmp
add
mov
jmp
stos
pop
cmpsb
test
daa
addr16
inc
lcall
or
aam
jecxz
cmp
mov
xchg
adc
ljmp
push
ret
push
out
ret
clc
lcall
negl
popa
test
push
loope
js
ret
dec
rorb
mov
nop
stos
sbb
test
mov
lret
inc
adc
push
popa
jns
scas
mov
mov
mov
popa
xchg
fldcw
test
fwait
test
arpl
js
cmp
inc
nopl
and
add
lds
movsb
ret
ficomps
mov
test
lds
jl
xor
pop
in
movsl
sahf
decl
mov
lds
scas
xchg
jle
push
push
push
lret
bound
popa
clc
ret
jmp
sub
fmuls
dec
and
mov
scas
icebp
and
loope
cmp
mov
lds
jae
gs
rclb
inc
repz
mov
and
push
hlt
es
ficoml
aad
add
fdivr
dec
ja
xchg
xchg
mov
out
mov
dec
stc
sbb
cmp
popa
aaa
mov
sub
mov
jmp
mov
push
jne
std
xchg
pop
ljmp
add
or
or
fidivs
inc
sub
insl
push
in
jle
out
sub
and
clc
out
outsb
inc
aas
inc
jecxz
pop
and
out
sub
push
fisubl
jge
loope
jmp
ljmp
jle
mov
xor
shll
inc
or
jecxz
and
cwtl
aas
enter
es
mov
pop
adc
push
insl
lahf
lret
lahf
inc
inc
push
lahf
push
test
dec
shl
push
sub
ljmp
aad
in
push
ret
jl
pop
pusha
in
sbb
push
fwait
adc
and
fstpl
push
jmp
lret
sbb
mov
xor
in
das
sbb
and
out
and
add
stos
outsb
rcl
inc
fwait
sub
sbb
cmp
stos
jo
xchg
mov
push
jecxz
fidivs
push
lahf
and
mov
jne
xor
ds
pop
push
mov
mov
jb
les
mov
push
sbb
jecxz
lret
sub
faddp
and
ds
mov
add
shrl
insl
fwait
pop
adc
mov
add
add
out
add
scas
xor
cli
push
mov
decb
sub
stos
outsl
jbe
fstl
scas
push
mov
dec
pop
test
inc
out
cmp
jmp
lahf
fistpl
shlb
push
jno
adc
push
cli
fstpl
orl
addr16
sub
jp
push
jns
sbb
dec
dec
ss
scas
xchg
cmpsb
nop
cmpsl
aam
insb
fnstenv
mov
adc
pop
add
cltd
ja
adc
pop
xchg
inc
mov
fisubs
ja
negb
inc
pop
sub
cmp
xor
jl
mov
addr16
mov
dec
sti
pop
xchg
or
cmp
notl
xchg
fs
pcmpeqb
jmp
xchg
mov
popa
jmp
andl
scas
cmp
sbbb
add
scas
andb
aaa
insl
mov
sub
or
test
adc
lods
mov
mov
cmp
mov
aad
jecxz
into
add
dec
scas
inc
xchg
adcb
or
mov
outsl
imul
mov
push
aad
fists
pop
es
jbe
insl
lods
cld
decb
outsl
in
mov
pushf
mov
cmp
inc
mov
sbb
mov
cwtl
jno
fimull
cmpsb
nop
mov
std
fstpt
leave
cmp
shlb
cmp
cmpl
xchg
push
addl
mov
out
jmp
xchg
shlb
leave
xchg
test
and
pushf
enter
out
les
pop
push
int3
jnp
xchg
test
jg
inc
ss
maskmovq
dec
imul
mov
stos
pop
mov
shl
sbb
add
sub
nop
jg
and
add
mov
xlat
dec
sbb
push
sbb
push
ds
mov
lods
inc
cmp
push
add
push
xor
inc
mov
aad
xor
push
arpl
xchg
in
scas
jbe
out
mov
jecxz
mov
int3
mov
mov
fdivl
movsl
inc
std
mov
jno
fdivs
aad
cld
inc
inc
push
push
sub
mov
into
nop
inc
je
ja
rcl
mov
leave
in
pop
ret
test
in
xlat
call
repnz
ja
sbb
jns
out
loopne
xor
pop
xor
pop
enter
mov
push
test
push
enter
adc
cmp
or
pop
adcb
shlb
and
leave
cltd
lods
and
iret
jne
lcall
lcall
sbb
xlat
shr
jno
mov
sbb
cli
pop
sub
in
and
adc
xchg
test
fwait
aam
dec
dec
add
leave
push
pop
or
ss
ss
movsl
add
outsb
xchg
xor
in
push
sbb
fwait
or
push
sub
icebp
push
mov
dec
iret
push
sbbl
mov
loopne
sbb
mov
js
aaa
int3
scas
jg
inc
fdivrs
mov
inc
push
xchg
lods
mov
test
cmp
add
push
inc
sub
js
mov
xchg
mov
test
cmp
fldcw
sti
lcall
mov
mov
out
mov
adc
pushf
push
lock
or
adc
inc
lock
jo
adc
imul
sbb
mov
fst
aad
leave
stos
popf
cmp
mov
shll
push
outsb
ja
cmp
fwait
mov
mov
mov
ss
sbb
mov
lock
mov
movsb
pop
adc
es
dec
xor
cld
lds
int3
loopne
pop
jecxz
lret
add
mov
pop
jo
mov
popa
ss
repnz
out
in
cmp
inc
bsf
fs
pop
in
mov
sbb
out
imul
bound
mov
mov
and
test
cld
cmpsb
mov
inc
push
mov
scas
mov
mov
sub
cltd
lods
push
shrb
pop
pop
int3
lea
addr16
or
xchg
xor
lock
push
fisttpl
call
in
add
push
adc
mov
imul
vandnps
loope
into
push
xor
xlat
hlt
or
xor
xlat
out
xor
je
mov
xor
and
cli
add
pushf
lahf
sub
sti
pushf
xchg
xor
or
scas
sti
push
cmp
bound
push
fs
push
das
adc
pop
lcall
dec
jns
ret
sub
rcrb
sbbb
mov
inc
xchg
sti
std
test
out
mov
sbb
push
fcomi
pop
adc
fsubl
cmp
ds
xor
pushf
cwtl
inc
inc
out
sti
inc
aad
filds
push
push
in
mov
or
in
sub
sub
and
mov
sbb
cld
adc
xchg
aad
in
push
outsb
pop
jmp
xchg
cli
ficoml
cmp
fnstsw
or
jae
or
or
sub
sub
mov
cli
lcall
dec
sbb
cmpsb
loopne
mov
stc
outsb
arpl
test
jns
pop
mov
int
nop
shll
xor
mov
xor
jmp
dec
push
and
ja
mov
call
inc
shll
int3
mov
jb
out
repz
cmc
imul
je
adc
sbb
int3
mov
sti
mov
lcall
sub
jl
add
dec
lcall
and
and
push
cmp
cmp
mov
xchg
in
inc
sbb
pop
mov
mov
add
pop
and
mov
adc
in
sti
nop
ss
dec
pop
sbb
sub
xchg
add
add
arpl
in
mov
pop
mov
cmpsb
fimull
out
lock
and
stos
test
out
scas
or
rcrl
xchg
lods
lret
pop
int
aaa
push
add
cli
popf
shll
pop
lcall
or
nop
fdiv
loop
lret
xor
data16
push
pop
test
xchg
mov
sbb
pop
push
adc
or
lret
scas
adc
filds
out
or
imul
clc
push
int
mov
fs
insl
cmp
fmuls
test
mov
fsubr
pop
xor
sub
push
or
shl
dec
cmpsb
cmc
jo
int3
pop
lods
lret
xor
push
xchg
clc
lds
sub
sub
push
inc
pop
adc
testl
mov
dec
adc
sbbb
fsubs
cmpsb
dec
xor
and
sbb
jmp
scas
or
addr16
mov
push
lods
into
jle
add
xor
outsb
xor
mov
adc
adc
xor
xor
fidivl
lds
and
or
cmp
outsb
ret
xor
divl
out
jecxz
ret
inc
push
loop
test
xchg
push
stc
lods
mov
outsb
inc
dec
mov
in
fcmovne
jb
or
push
sub
rorl
imul
out
adc
jno
inc
es
arpl
dec
inc
icebp
stos
xchg
imull
js
pop
outsb
xor
call
xchg
adc
lds
push
in
push
dec
fbld
jo
enter
xchg
add
mov
hlt
xor
sbb
sti
stc
cmpsb
lock
dec
mov
jl
je
jle
mov
add
xchg
xor
ret
xchg
cmp
into
scas
stos
xor
jg
sbb
push
es
dec
ret
insl
or
sbb
or
pusha
mov
jl
lea
std
mov
psubsb
stos
cmc
and
adc
loope
xchg
rolb
cld
inc
mov
lcall
adc
aad
jmp
dec
jns
sub
pop
cwtl
scas
enter
dec
notl
add
movsl
or
ret
xchg
jmp
js
pop
add
add
cs
sub
test
int3
clc
ret
push
dec
lods
sahf
mov
popa
addr16
push
popa
jl
dec
call
push
inc
cmc
sbb
faddp
xor
xor
and
mov
pop
daa
inc
idiv
cld
test
mov
mov
mov
or
inc
ss
icebp
mov
in
and
scas
clc
dec
out
lock
jp
fstps
lcall
push
test
sahf
mov
jb
sbbb
or
out
xchg
push
cs
dec
sti
inc
insl
inc
leave
shlb
jne
imul
inc
or
xchg
inc
or
add
push
or
pushf
jmp
jg
nop
mov
lea
adc
stos
mov
enter
jb
xchg
lock
rorl
push
push
lds
out
inc
sbb
mov
xor
jmp
bound
jle
mov
jmp
add
cmp
xorb
cmp
in
jne
mov
notl
rcrl
dec
adc
pop
xor
ror
rcrb
push
mov
lds
sbb
movsb
stc
iret
cmp
loopne
jl
inc
cs
mov
jno
les
sbb
test
rclb
test
and
lods
lret
cmp
mov
pop
jne
mov
adc
hlt
faddp
movsb
mov
adc
push
jmp
xchg
in
fldt
jg
or
fcompl
je
sub
mov
jp
jmp
xchg
mov
mov
out
xor
lock
fistpll
fwait
mov
mov
adc
jmp
inc
jp
sbb
movsl
int3
call
dec
pop
inc
mov
dec
dec
les
sbb
inc
cmp
add
std
hlt
mov
add
xchg
dec
fwait
inc
sbb
popa
mov
and
int
call
pop
and
lahf
nop
out
test
clc
imulb
sbb
ss
jo
dec
int3
mov
pop
jne
inc
sbb
sbbl
mov
scas
pop
ja
xor
stos
mov
push
movsb
jge
movsb
out
sub
sbb
push
inc
jle
inc
ds
ret
sbb
dec
jge
aad
dec
dec
xchg
test
inc
sub
mov
sbb
lods
popa
in
hlt
dec
outsl
fistps
fdivrl
pop
mov
mov
jno
xchg
inc
sub
imul
je
add
inc
data16
cld
loope
outsb
mov
ret
adc
test
clc
js
mov
push
xor
pop
add
xchg
addr16
in
insb
adc
fiadds
mov
mov
xor
psrlw
ret
inc
lea
and
and
mov
xchg
stc
into
clc
sub
inc
add
cs
inc
push
mov
shl
incb
sbb
movsb
jmp
arpl
js
xchg
gs
and
shll
into
das
sbb
testb
add
pop
jle
mov
lret
into
push
insl
outsl
inc
push
pushf
jo
mov
add
and
mov
xchg
mov
std
das
into
xchg
cmp
lcall
and
mov
add
mov
cli
mov
jno
fst
push
fisubs
test
call
test
add
mov
xchg
in
hlt
shl
ja
aad
int3
in
ja
adc
lahf
inc
bound
mov
push
and
xchg
arpl
xchg
jnp
popf
fimull
stc
rorb
xchg
jmp
add
cmp
push
inc
mov
aam
cmp
ljmp
iret
pop
testl
in
add
es
push
insb
jbe
outsb
inc
cwtl
add
fists
sub
scas
cmc
ds
pop
stc
popa
sbb
pop
rorb
push
addl
adc
clc
ss
jns
mov
jecxz
lods
lods
rcrb
jbe
stos
ret
inc
jns
sbb
cld
inc
inc
jne
movsb
insl
pop
adc
pop
mov
int
mov
push
stos
pop
insl
dec
mov
std
cmpl
and
mov
pop
and
sub
pop
movl
dec
out
call
je
and
in
and
loope
pushf
xorb
addb
jne
sahf
sub
cmp
pop
adc
movsb
adc
imul
and
jmp
adc
push
mov
fcom
scas
push
sbb
leave
ret
scas
xchg
cmp
cmpsw
pop
inc
xchg
pushl
mov
ficomps
jb
xchg
leave
jbe
clc
pop
jno
mov
mov
cmp
out
pop
pop
mov
dec
repz
les
test
cmpsb
lahf
adc
dec
cmpsl
daa
cmpb
daa
jnp
dec
ljmp
add
pop
or
in
adc
mov
mov
sti
jmp
divl
fwait
jb
nop
aad
addb
adc
adc
in
mov
lock
cmp
cltd
sbb
inc
jns
negb
cmp
xchg
fadds
cld
daa
cmp
test
lock
adc
icebp
in
pusha
filds
mov
sub
loop
add
js
out
xorl
xor
dec
xor
mov
or
test
adc
out
push
xchg
stos
jne
jo
mov
test
ja
mov
dec
in
dec
jmp
sahf
mov
mov
hlt
subb
jl
xchg
mov
fiadds
ja
add
and
mov
es
loope
jb
pop
push
inc
adc
or
push
daa
lock
subb
scas
scas
fmuls
push
sbb
mov
mov
in
cmp
cmp
add
rcll
add
cld
popf
inc
pusha
rorl
ja
hlt
and
cmp
pop
pop
xchg
adc
lahf
cmc
ret
adc
xchg
add
mov
inc
pusha
test
outsb
cwtl
and
jmp
insl
dec
mov
ret
sbb
adc
inc
mov
jns
lods
std
jo
scas
sarl
fcoms
into
pop
daa
xchg
fcoms
pusha
mov
lock
push
or
mov
adc
pop
aas
push
xor
lret
or
pushl
and
mov
aam
mov
mov
ret
cmpsb
push
pusha
add
adc
xchg
pop
jae
aad
outsl
adc
adc
mov
insl
addl
sub
fsub
aas
fwait
outsl
adc
leave
or
mov
jbe
sub
adc
int
push
int3
repz
jmp
add
lcall
outsl
mov
push
pop
sbb
xlat
lcall
fisubl
mov
mov
lock
mov
dec
roll
dec
test
jnp
stos
adc
ds
add
clc
in
scas
lret
mov
mov
enter
push
subb
cmc
sbb
mov
int3
fistl
and
fcom
inc
call
jmp
ret
stos
inc
jl
xchg
or
lods
adc
mov
xchg
and
iret
das
cmpsl
xchg
jns
cmp
scas
push
push
and
sahf
aad
push
cmp
notb
mov
pop
in
outsl
xlat
dec
mov
add
push
stos
outsl
xor
outsl
loopne
ja
das
cwtl
adc
pusha
out
int3
mov
das
jle
push
pop
push
fst
nop
test
fidivl
sbb
sahf
add
mov
scas
sbb
xchg
sbb
jbe
stos
add
rcrb
lahf
inc
jg
movsl
es
push
mov
dec
sbb
mov
mov
xchg
icebp
dec
sub
popf
inc
popa
lds
cmp
and
insb
mov
icebp
cmp
push
enter
rcrb
movsl
or
cmpsl
sub
les
adc
xchg
fisttps
stos
xchg
jmp
push
mov
xorb
addl
inc
cmp
lcall
adc
mov
ret
mov
fidivl
jno
jmp
jns
mov
lock
out
jl
pop
in
scas
scas
pop
jo
loop
lret
repnz
mov
inc
sub
cmpsl
cmp
and
adc
dec
hlt
es
das
mov
and
fstpl
ja
pop
mov
lahf
into
fldcw
mov
in
fucomip
adc
ds
inc
xor
inc
in
pop
and
clc
mov
xchg
jg
movhps
push
pop
scas
push
pop
js
fidivs
incl
mov
xor
sub
leave
inc
pop
mov
int
enter
dec
outsl
and
out
mov
aam
or
cltd
addb
pop
icebp
and
les
pop
cli
movsb
adcb
call
call
xchg
pusha
jp
fidivrl
or
mov
into
sub
sbb
jmp
inc
je
ja
testl
enter
mov
pop
repnz
nop
shlb
mov
xchg
mov
or
inc
addr16
push
pop
adc
add
pop
jns
add
in
outsb
sbb
push
lods
mov
cld
cwtl
sbb
push
scas
xchg
ret
clc
ret
ss
scas
push
scas
imul
jp
icebp
cmp
aam
xor
mov
fisubrl
push
mov
popa
xchg
mov
push
push
push
jle
pop
xchg
push
fisttpll
repz
stos
dec
in
je
aaa
mov
test
push
jg
movsl
pop
pop
push
xor
sbb
mov
jp
les
jbe
jo
sub
sbb
push
ffree
sbb
mov
lods
aam
sarb
inc
cli
push
jmp
lock
mov
mov
addr16
out
mov
cmp
mov
nop
lea
mov
fwait
gs
testb
pop
addr16
xor
mov
and
pop
std
rorl
out
in
dec
xchg
sub
mov
loopne
test
jb
push
lcall
mov
movsb
cmp
sub
aas
and
xchg
outsl
cli
daa
adc
imul
and
gs
sub
cmp
scas
cmp
adc
icebp
fmul
cmp
stos
jns
shrl
fsubl
pop
dec
test
jge
cmp
push
stos
and
lcall
pop
xchg
outsl
xchg
rorb
fists
adc
out
rorl
fwait
jecxz
ljmp
into
dec
dec
push
add
and
test
lret
imul
cmp
xor
aas
pop
dec
pop
mov
xchg
scas
lret
movb
sub
jp
outsb
lods
popf
and
sbb
rcl
sbb
push
or
shrl
adc
vpmacssdql
or
cwtl
cmc
add
movsl
sti
or
jmp
xchg
xchg
push
movsl
sbbb
into
dec
mov
shrb
scas
fdivrp
rorb
rorb
sbb
stos
ljmp
fildl
mov
sbb
shl
pop
sahf
cwtl
sbb
add
insb
idivb
xchg
repnz
mov
xchg
adcb
inc
or
sub
je
movb
arpl
or
inc
xor
and
pop
mov
jmp
cmp
dec
sbb
mov
stc
ret
adc
jg
xchg
adc
push
jb
pop
inc
mov
test
push
cmp
xor
cmc
mov
ret
mov
adc
bound
iret
test
push
dec
pusha
mov
insb
movsb
adc
lahf
mov
sbb
add
push
jns
xchg
and
mov
pop
lcall
cmp
pop
stos
aad
cwtl
xor
psllw
xor
jns
jno
push
mov
lahf
jae
add
push
rcrl
sbb
xor
or
aas
push
dec
push
jmp
hlt
or
jnp
pushf
lahf
xchg
nop
jge
jo
icebp
xor
lcall
insl
adc
xor
test
pop
nop
jge
jmp
inc
cmpl
xor
jl
cmc
test
mov
mov
das
push
sti
jno,pt
bound
xor
and
sub
js
or
cmpsl
cmovp
mov
push
or
clc
sub
rorb
mov
xchg
lock
mov
xor
and
add
testb
in
add
pop
mov
and
add
xlat
dec
mov
les
loop
and
pop
clc
insl
jmp
mov
jne
test
enter
and
inc
xchg
getsec
mov
pushf
ja
push
std
jmp
dec
mov
dec
aam
rcrl
or
or
xchg
push
ds
jmp
sub
xchg
in
mov
pop
loopne
ficomps
and
es
sub
mov
scas
std
ret
pop
ret
pop
xor
adc
stos
ss
hlt
jo
and
enter
loop
xor
cwtl
sarl
into
push
rcl
sbb
xchg
addr16
loope
bound
hlt
jp
pusha
mov
enter
ds
jne
ret
ds
or
adc
mov
das
and
dec
pop
mov
mov
lea
push
sbbl
push
mov
jle
mov
stos
push
in
roll
imul
aas
dec
mov
inc
push
cwtl
scas
sbbb
pop
or
pop
xchg
pop
mov
xchg
outsb
hlt
in
scas
rorl
sub
popf
cmpsl
inc
lret
mov
xchg
out
popf
stc
pop
insb
adc
jp
pop
ja
mov
jnp
pop
push
scas
test
mov
xor
ret
pop
and
mov
inc
xor
shlb
mov
rcll
fmul
sti
push
mov
adc
mov
push
fnstenv
lcall
sbb
lea
movsb
cltd
stc
stc
je
adc
mov
jne
cmpsb
add
push
add
popa
xchg
inc
jns
sub
cmpsb
sub
xchg
popa
dec
xchg
cmp
pop
cmp
ja
sub
into
inc
int
int
aas
dec
and
jg
in
dec
cwtl
shlb
or
inc
inc
add
in
imul
fstps
into
or
pushf
xor
clc
cmp
dec
pushf
aad
sahf
ja
or
sub
out
jmp
xchg
or
cwtl
cmc
lret
cltd
js
sub
push
pushf
lahf
jae
movsb
jl
mov
add
daa
mov
fwait
adcb
int3
dec
imul
sub
clc
sbb
cs
mov
mov
pusha
sahf
cmc
add
sarl
xchg
add
mov
movsl
xchg
mov
adc
ja
fists
movsl
notl
adc
mov
jb
shll
dec
sti
push
movsl
repnz
xchg
bound
mov
xchg
clc
sub
xor
jmp
aam
xchg
push
ficoms
or
gs
pop
js
int3
jg
aad
dec
inc
stc
loopne
stos
pop
sub
dec
xor
imul
or
xor
das
jno
mov
iret
outsl
sub
and
fmull
xor
mov
inc
push
xor
pop
jnp
pop
adc
in
xchg
pop
pop
push
aad
leave
hlt
lahf
mov
cmpsl
and
lock
lret
cli
mov
ds
pop
sbb
xchg
xchg
rolb
jge
lret
push
mov
lds
test
jge
popf
push
or
add
cmp
ret
push
jmp
cmp
pushf
dec
es
lock
jne
mov
and
xchg
and
in
jo
fs
cltd
aad
test
jge
les
addb
inc
lret
cmpsl
mov
orb
imull
shld
sbb
cmp
int3
sahf
sub
adc
rcr
inc
pop
fsts
xchg
dec
pop
xor
xor
inc
cwtl
pop
sub
mov
ljmp
mov
xor
cmp
aaa
cmc
xchg
cmp
sub
xor
mov
mov
mov
add
mov
bound
mov
xor
pop
push
mov
loop
rolb
ret
fwait
and
and
mov
lock
cmpxchg
ljmp
lcall
mov
push
sub
inc
jbe
cmp
das
push
xchg
mov
daa
dec
dec
cmp
ljmp
mov
sbb
jae
add
inc
inc
movsb
pop
jne
lcall
xchg
mov
jnp
jo
push
and
negl
pop
or
add
aam
inc
in
hlt
xchg
lods
out
xorl
xchg
rcrl
or
fmul
imul
pop
or
and
sub
imul
dec
and
test
daa
xor
fsubr
adc
hlt
mov
stc
pusha
mov
push
insb
popf
xlat
adc
mov
sbb
add
sub
dec
mov
sub
cltd
xlat
fdivrl
cmp
xor
pop
shlb
es
in
jae
push
mov
push
loopne
shrl
push
pop
daa
push
cmp
les
cmpsl
stos
xchg
scas
sbb
inc
clc
scas
seto
inc
mov
sub
lahf
xchg
mov
mov
or
dec
mov
lods
adc
sbb
stos
jae
push
add
das
pop
mov
jns
out
cmpsb
decl
mov
inc
dec
xlat
xchg
push
add
outsl
ficomps
cmp
insb
mov
push
lcall
into
and
inc
mov
fwait
add
mov
jg
out
mov
sbb
and
out
sub
or
jg
jbe
lahf
xchg
xchg
insb
jmp
xchg
dec
push
cs
hlt
iret
sub
sbb
ljmp
imul
sbb
test
adc
mov
in
popf
fcom
cwtl
into
cmp
mov
outsb
and
xlat
and
int
adc
mov
add
test
dec
mov
std
and
mov
push
pop
push
or
jp
xchg
mov
out
sub
shl
ret
or
inc
xor
int
inc
xchg
adc
ret
and
rcrl
mov
adc
es
push
das
dec
cmpsb
int3
cli
mov
addr16
icebp
mov
stos
das
sbb
das
mov
pop
mov
sub
jmp
pop
push
mov
scas
and
repz
inc
cltd
lcall
and
push
lods
cs
mov
push
pop
jo
in
sahf
ret
popa
inc
and
popf
add
ss
and
std
leave
stos
or
popa
popf
es
dec
inc
lcall
dec
lcall
sub
xor
xlat
aad
ror
jo
adc
lret
lds
std
cltd
dec
daa
cwtl
jne
dec
or
mov
jnp
jmp
mov
mov
lahf
ljmp
and
xor
sbb
aam
in
mov
shll
loopne
int
or
pop
mov
mov
fbld
jp
push
in
loopne
cmp
fistpll
ret
addb
js
testb
arpl
vxorpd
stc
lods
add
test
sub
hlt
aam
std
fcomps
sbb
inc
sub
inc
jge
xchg
jns
mov
xchg
scas
and
add
push
mov
cld
stos
sti
jnp
sahf
mov
inc
cmpsl
sbb
adc
push
add
mov
fs
and
xchg
inc
insl
sti
loopne
and
cmp
mov
push
imul
mov
iret
sub
push
je
mov
pop
sub
add
jecxz
enter
or
xchg
jp
inc
sar
xchg
pop
mov
add
add
ljmp
add
and
lcall
jle
push
sub
or
repz
enter
adc
popa
fldenv
cmp
pop
jecxz
gs
sbb
iret
ljmp
pushf
je
mov
xchg
cltd
fwait
pop
push
adc
mov
and
or
ret
es
test
xchg
dec
jle
scas
data16
push
mov
lret
pop
fsubs
rorl
pop
dec
stc
xor
fcoml
stc
fisubrl
mov
cmp
add
lea
pushf
cltd
xchg
aas
pop
jmp
pop
xlat
shll
das
and
addl
fs
push
cmp
pop
xor
mov
cli
mov
jo
push
push
bound
jp
pop
or
iret
cmp
enter
xor
adcb
add
lret
rorb
popf
cmpsb
push
in
adc
mov
and
sbb
jp
in
xor
lods
shl
lds
dec
mov
xor
sub
sbb
push
add
dec
into
mov
sub
stos
sbb
sbb
aas
xchg
loopne
cwtl
jmp
xchg
cmp
mov
pop
dec
jp
jo
mov
push
test
add
xchg
mov
das
stc
loop
and
dec
mov
icebp
test
mov
dec
shl
inc
lds
xor
scas
out
jp
lods
rol
movsl
sub
mov
movsl
leave
cmp
cmp
fcmovb
ret
out
scas
or
int
les
insb
clc
fsubs
fs
loope
cmp
and
cmpsl
add
leave
repnz
inc
cltd
bound
sbb
lret
test
adc
add
add
jl
insl
cltd
sahf
cmc
imul
jge
popa
bnd
and
push
fisubrl
or
sbb
sbb
cmp
dec
stc
int3
cmp
inc
sti
xchg
mov
push
add
enter
fstl
cmp
imul
sbb
push
add
pop
test
rolb
push
stos
mov
pop
movsl
ss
rol
xchg
test
imul
xchg
and
jecxz
in
jb
xlat
js
movsb
mov
jbe
add
jae
mov
adc
rorb
cltd
test
fnstenv
or
mov
decl
setb
repnz
ds
xchg
add
ror
mov
dec
nop
jp
mov
repz
cmp
pushf
pop
sti
pop
je
mov
xchg
inc
xchg
cmp
mov
and
mov
shrl
inc
pop
test
cwtl
insl
or
syscall
outsl
insb
js
sbb
movsb
int
push
test
sbb
jnp,pn
dec
sub
mov
dec
adc
mov
xorl
scas
sub
mov
ss
inc
testl
dec
iret
test
cmp
test
jl
sub
xchg
mov
addr16
cmp
scas
out
in
xor
stos
in
mov
mov
xor
mov
cli
inc
in
mov
jo
leave
in
push
shll
push
inc
mov
mov
lcall
jne
nop
out
xchg
cmc
cmc
or
xor
sbb
inc
sbb
ficomps
jl
bound
xchg
dec
fistpll
daa
in
sub
cli
lock
lcall
inc
repz
sbb
adc
andb
inc
enter
iret
rcll
push
jge
filds
jg
fisttpll
movsb
and
in
xchg
cs
sub
shlb
aas
fnstcw
and
xchg
pop
sar
or
fldcw
mov
fadds
mov
inc
cmp
pop
push
jp
push
add
lds
cs
enter
inc
push
xchg
ret
or
arpl
mov
mov
mov
jecxz
iret
sub
cmp
test
and
test
repz
into
in
or
daa
jno
fisubs
inc
dec
inc
cli
mov
test
ds
lea
add
pop
ud1
jo
ja
sub
xor
pop
stc
adc
pop
lods
shlb
mov
inc
cmp
adc
dec
adc
ret
xlat
lea
jg
dec
jnp
mov
mov
aad
mov
inc
and
outsl
lret
dec
dec
scas
in
lcall
in
dec
jl,pn
mov
pop
mov
push
lret
mov
jecxz
enter
gs
nop
addl
loope
pop
fbld
shrl
or
xchg
sub
mov
ret
jns
call
or
pop
in
cmp
push
sti
jbe
jbe
xchg
mov
pop
in
push
test
dec
xlat
icebp
push
out
sub
test
jns
jo
xchg
sbb
iret
test
xchg
mov
mov
xchg
and
shlb
push
shl
jno
es
inc
pusha
cmp
fcom
bound
push
data16
fistpl
repnz
fldt
gs
stc
adc
mov
mov
das
push
mov
fdivs
jns
xchg
ss
jnp
out
sarl
out
jbe
adc
notl
add
fdivr
xor
or
loop
push
push
push
push
out
and
add
movsl
xchg
int3
leave
lods
in
xor
in
mov
pushf
pusha
hlt
cmp
add
addl
mov
xchg
xor
fs
xchg
enter
push
lods
mov
or
push
mov
dec
push
ret
out
mov
mov
mov
and
sbb
imulb
push
xchg
jae
rorl
fwait
mov
or
test
xor
add
nop
push
popa
and
mov
icebp
and
cmp
xchg
cmp
and
sbb
popf
cs
jne
xchg
adc
lret
lods
pushf
pop
jmp
clc
mov
or
add
cld
int
ret
data16
pop
cli
xchg
inc
rclb
mov
fwait
jle
das
push
xor
out
pop
and
test
scas
ja
repnz
ja
mov
scas
divb
and
adc
pop
maxps
xchg
inc
mov
xchg
or
mov
mov
in
sub
add
dec
gs
mov
adc
cmp
sub
outsl
test
movsl
mov
clc
jno
das
adc
jns
push
rclb
mov
jle
sarb
inc
xor
jo
lods
xchg
test
jg
cmpsl
xor
mov
in
aad
rolb
dec
dec
add
fimull
popf
popa
loope
dec
paddq
or
add
or
enter
jbe
pop
sbb
sbb
or
ss
dec
add
ss
mulb
je
xchg
je
adc
mov
imul
push
in
addr16
xchg
sbb
fistl
fdivrs
add
pop
les
mov
xchg
loop
dec
sahf
add
pushf
xor
lds
xchg
push
jo
loopne
hlt
rorb
lock
jnp
sub
outsl
fcoml
jecxz
cld
arpl
scas
pop
dec
das
gs
shr
aad
rcll
add
fwait
dec
test
sbb
sbb
jge
mov
inc
arpl
cs
mov
inc
fistpll
in
xor
mov
ss
add
fisttps
xchg
imul
jbe
mov
loop
repnz
mov
iret
jecxz
movsb
addr16
ss
negl
mov
xchg
push
cmpsl
inc
cmp
mov
fstpl
setge
xchg
mov
xlat
mov
mov
dec
jb
and
jg
sbb
insb
pop
rcr
popa
pop
ljmp
daa
movb
push
sbb
sbbb
mov
sub
xchg
pop
xchg
and
pop
push
pop
xor
cmc
lahf
mov
loopne
pop
inc
adc
lcall
mov
sbb
push
pop
mov
lods
test
push
stos
xlat
fwait
sbb
jno
and
sbb
shrl
out
adc
fwait
xchg
nop
xchg
int
adc
push
push
in
push
int3
ficomps
mov
pop
mov
test
xchg
int3
sbb
sbb
cltd
fsubrs
scas
sti
xor
mov
dec
iret
add
ret
xor
xor
xchg
addr16
and
sbb
mov
fadds
fnstsw
add
pop
xor
pusha
cwtl
jmp
pushl
adc
addr16
and
sbb
mov
in
mov
in
pop
pop
cmpsb
xchg
xchg
or
dec
pop
das
aas
add
and
pop
movb
test
dec
and
rolb
push
pusha
in
test
lret
xlat
mov
xor
mov
add
mov
enter
cmp
mov
ret
pop
xchg
jns
xor
icebp
daa
adc
push
fs
push
sti
outsl
mov
mov
xor
cltd
lret
popl
push
mov
mov
lods
inc
sarb
faddl
out
cwtl
sbb
cli
jno
rcr
movl
cld
dec
or
mov
add
adc
jp
add
imul
sub
mov
and
or
js
or
js
nop
cltd
cmp
popa
shrl
mov
dec
insl
leave
sbb
js
ja
dec
push
mov
cmp
mov
sbb
lock
and
cwtl
fsubs
sahf
pushf
mov
fstps
mov
insb
inc
in
in
add
cli
call
pop
inc
pop
cmp
inc
push
test
sbb
orl
adcb
cmp
cmc
cmpsl
sbb
insl
leave
cs
jge
push
lods
daa
test
mov
in
xchg
cltd
inc
les
push
jg
push
js
inc
es
inc
addr16
outsb
or
clc
imul
les
pop
sbb
scas
jge
mov
aaa
leave
pop
pop
xchg
mov
cli
sbb
cmc
pop
ffree
nop
sub
adc
in
dec
jae
dec
cltd
push
jl
cmp
pusha
jl
mov
repz
rol
imul
mov
dec
ja
and
xor
fisttps
clc
xchg
sub
sub
in
test
xlat
add
das
jae
push
out
ja
inc
loope
shll
xor
sub
xchg
jo
scas
push
dec
scas
fcmovnu
mov
push
stos
xchg
jp
mov
inc
imul
fbld
into
jge
pop
jae
pop
push
insl
mov
ret
rcrb
loop
inc
push
or
out
stc
enter
mov
mov
fcmovb
fucomip
mov
mov
mov
mov
ror
or
loop
lods
ja
dec
pop
insl
dec
mov
sti
mov
dec
popf
je
mov
cmp
sub
ud1
or
adc
mov
add
pop
test
add
mulps
and
adc
cmc
pop
add
jno
mov
stos
push
and
xchg
sub
mov
fdiv
mov
lret
test
loope
add
lds
jno
rolb
in
scas
mov
cmp
inc
div
xchg
icebp
test
scas
add
xor
cmp
aas
scas
out
and
pushf
add
and
mov
icebp
pop
lods
dec
stos
mov
andb
int
xorb
sub
jns
xor
mov
cmc
cmpsb
cli
aaa
inc
cltd
cltd
in
in
mov
fs
sar
jl
fnsave
out
mov
daa
sub
in
in
push
decl
lods
cmp
or
xor
mov
aaa
pop
popf
or
pop
adc
data16
out
popf
test
inc
jle
in
push
outsb
or
jp
movsl
dec
push
mov
rorl
push
add
or
pop
inc
inc
xor
cmp
rclb
int
cmp
xor
mov
lret
xor
int3
pop
sarl
push
outsl
sbb
pop
sbb
out
lea
jge
mov
jp
lret
jg
rol
fs
std
xor
inc
mov
push
mov
mov
and
sub
ds
stc
and
aaa
pop
and
dec
xor
mov
pop
mov
pop
sahf
out
jno
cmp
mov
negb
xor
jno
sbb
push
add
dec
popa
mov
ljmp
repnz
mov
and
stc
outsb
insb
mov
and
push
sbb
push
mov
push
out
jo
leave
les
mov
jns
mov
pop
test
lcall
scas
xor
xchg
and
popf
aaa
push
and
pop
push
rcl
xor
push
xorl
jl
mov
stos
pop
jl
les
mov
pushf
push
jl
jne
jbe
pop
inc
sub
mov
jb
inc
insb
arpl
inc
push
test
insb
mov
sti
adc
mov
sub
xchg
mov
cld
mov
cltd
pop
mov
in
xchg
mov
xor
scas
ljmp
cld
mov
icebp
dec
clc
shl
mov
sub
out
xchg
addr16
mov
and
xchg
add
cltd
cwtl
mov
pop
xchg
nop
test
fimull
adc
mov
adc
outsl
out
incl
sti
and
add
inc
jle
scas
fmull
ss
or
dec
les
xor
pop
xchg
push
cmp
inc
stos
push
inc
dec
and
and
aad
sub
cmp
xchg
into
inc
inc
cwtl
adc
xlat
sbb
push
sbb
sbb
das
mov
push
popf
xchg
ja
push
ss
adc
shlb
mov
cmpsl
into
pop
inc
pop
shr
out
inc
jge
jno
gs
inc
icebp
popf
test
jecxz
dec
aam
out
xchg
hlt
xor
push
pmaddwd
inc
inc
sbb
shl
fld
imul
cmp
jo
xchg
or
ljmp
aam
sbb
lods
add
or
dec
push
in
into
fadds
or
sbb
dec
lods
out
and
stc
adc
andb
in
mov
mov
or
addb
cmp
lcall
mov
jae
add
gs
daa
in
lcall
sbb
out
dec
and
jle
cmp
xchg
lds
adc
sub
insl
cmpb
push
jmp
divl
sahf
add
inc
push
cs
pushf
cmp
jmp
popf
jle
xor
iret
mov
fcompl
sub
fwait
in
push
ss
mov
adc
shl
sbb
sub
adc
mov
push
xchg
cld
jne
outsb
sbb
jmp
mov
mov
xlat
pop
das
lods
stc
jne
ljmp
mov
xchg
adc
or
hlt
xchg
es
mov
jmp
or
addr16
bound
repz
sub
xor
mov
divl
fstpl
inc
movsb
dec
xchg
call
int3
aam
mov
jle
and
insl
std
mov
jns
mov
pop
rolb
fcoml
push
mov
vmovmskps
testl
pushf
cmpsb
lods
les
fwait
dec
mov
fdiv
xchg
xor
std
sbb
fisttpll
xchg
add
push
int
clc
mov
test
push
fidivl
push
xor
pop
mul
inc
pop
mov
pop
fisubrs
out
dec
jne
cmc
cmc
mov
adc
nop
push
cmp
or
or
lea
sub
mov
pop
sbb
push
jnp
xor
adc
scas
in
cmp
das
rolb
dec
unpckhps
lret
rcl
rclb
ret
mov
mov
das
fldcw
sub
clc
dec
int
mov
stc
loopne
jbe
push
cli
das
int3
js
lret
in
loop
lcall
scas
out
fcomps
xchg
jo
ja
mov
pop
xchg
in
mov
xor
cmp
repz
xchg
cmp
jae
call
test
cwtl
sub
cmp
filds
lret
idivb
out
gs
or
inc
inc
jne
mov
adc
jl
cs
cltd
arpl
xchg
es
or
cld
and
pop
add
popa
sbb
xchg
lods
push
dec
inc
sahf
fs
enter
popa
sbb
rcpps
add
arpl
icebp
mov
out
push
lret
shl
jb,pn
push
add
add
xor
shrl
out
gs
cmpsb
push
add
xchg
icebp
pusha
jle
adc
mov
cmp
adc
loope
stos
mov
mov
cmp
sub
sub
dec
addl
lret
inc
cmpsl
or
mov
xchg
and
in
jbe
shll
das
stos
mov
movsl
lahf
jb
idivl
xor
leave
clc
jle
movsb
in
push
stos
push
push
jecxz
js
dec
cs
jo
xchg
pminsw
addr16
nop
pusha
mov
sbb
mov
sahf
shr
in
fdivrs
xchg
or
xor
dec
ja
inc
cmp
lods
inc
pushf
loope
pop
push
adc
insb
xor
arpl
jne
fwait
aaa
movsb
adc
jg
nop
mov
inc
jno,pn
testl
les
inc
add
mov
scas
clc
lods
pop
mov
cmp
jmp
jmp
jg
popa
fisubl
fnstenv
fwait
ret
xorl
mov
outsl
inc
shll
jb
fnstcw
jae
shr
loop
or
or
in
cmp
ljmp
pop
inc
and
adc
fcoms
or
inc
push
mov
lock
xor
outsb
jae
sti
pop
mov
and
rcl
dec
adc
arpl
int3
out
xorl
outsl
sub
xor
fsubl
adcb
es
test
mov
mov
cmp
pop
xchg
mov
fidivrs
in
dec
movsl
dec
sbb
pause
nop
xchg
cltd
lods
xor
adc
arpl
in
adc
xchg
clc
loop
mov
hlt
xchg
mov
push
lods
or
sarl
xchg
mov
not
sbb
je
mov
and
or
push
jae
sti
movl
arpl
cmp
das
insb
fldcw
mov
fsubr
inc
cmp
adc
out
mull
pop
pusha
hlt
fstps
mov
out
and
loopne
adc
mov
sbb
imul
imul
xor
xchg
xchg
aad
gs
addl
scas
mov
inc
orl
jno
inc
mov
test
push
ret
dec
jno
hlt
dec
and
mov
dec
pop
adc
aaa
xor
and
popa
enter
xchg
add
lock
and
pop
dec
js
scas
insb
xchg
popf
sbb
arpl
sub
mov
add
shll
xor
mov
fs
loope
fucompp
inc
jbe
insb
sub
mov
dec
sar
inc
shrl
mov
popa
inc
mov
ret
fwait
sbb
movsb
addr16
mov
sbb
cli
and
rorb
pop
sbb
scas
testb
ss
int
jmp
stos
push
jge
mov
pop
cld
aam
outsb
or
dec
adc
hlt
idivb
inc
pushf
out
mov
dec
mov
mov
out
fdivl
xor
jb
in
pusha
aam
mov
jp
sub
mov
add
adcl
add
loop
rolb
pop
pop
inc
jo
inc
adc
ljmp
emms
xchg
clc
movsl
in
pop
pop
inc
jecxz
cmp
jae
adc
xchg
rclb
inc
or
xchg
jge
and
push
or
or
pusha
pop
push
nop
stc
adc
loope
out
jge
push
std
push
cmp
lods
int
imul
mov
iret
ja
inc
les
lret
lds
data16
or
out
in
int3
fs
int3
popa
xchg
cmc
xorl
and
pop
shrb
cmpsb
es
decb
sbb
mov
decb
pop
pop
in
test
adcl
pop
mov
and
sbb
mov
jge
dec
xchg
mov
pushf
fs
mov
and
data16
jb
pop
orb
cmpsl
lcall
adc
sahf
push
pusha
fldenv
sub
insb
ffree
adc
outsl
ja
popl
adc
cmp
mov
xorb
xchg
cld
or
sahf
loopne
inc
mov
outsl
inc
je
decl
out
cmpsb
sub
inc
fisttpll
inc
loope
gs
fimuls
into
divb
in
lea
insb
or
gs
mov
xor
and
dec
mov
dec
and
fld
aam
xchg
push
jl
mov
jo
lahf
hlt
ss
sub
mov
mov
sub
pop
dec
dec
and
pop
pusha
jbe
cld
adc
adcl
xchg
mov
push
cs
ror
pop
int3
iret
add
mov
dec
aam
inc
shll
iret
lods
xor
call
jb,pt
mov
jmp
jecxz
into
gs
push
repz
mov
jbe
jecxz
or
rcr
dec
ret
pop
sbb
loope
ds
jb
push
negb
sub
fwait
out
mov
cmp
cmp
lret
mov
jl
sbb
js
in
std
and
lock
call
in
cmp
popa
ljmp
out
xorl
sbb
cmp
or
cmpsb
mov
jne
aaa
xchg
pop
stos
push
mov
jmp
add
icebp
xor
or
cmp
inc
push
dec
pop
in
loopne
les
sbb
cmp
cmp
outsl
pop
sub
je
mov
adc
dec
add
sbb
leave
fwait
mov
iret
inc
push
test
push
je
jb
lock
adc
push
cld
idivb
dec
push
in
or
hlt
scas
aam
mov
in
les
cmp
jb
repz
pop
mov
lret
fstl
push
xor
and
cltd
movsb
out
stos
adc
and
mov
xor
test
clc
shlb
pop
or
jecxz
jp
out
aad
mov
xlat
js
in
xchg
xchg
ja
gs
xor
fildl
fnstcw
sbb
jmp
popf
and
sub
xchg
or
ljmp
xchg
fcmovbe
jnp
bound
stos
mov
xor
mov
pop
pop
fsubp
fisttpl
xlat
daa
aam
push
mov
and
rcrl
add
stos
or
outsl
push
mov
push
pop
scas
push
fdiv
jne
sti
out
mov
les
adcl
test
mov
in
sbbl
mov
aam
fstpt
mov
or
sbb
pop
jg
scas
inc
jle
mov
jmp
imul
cmc
repz
imul
push
inc
int
pop
push
stos
mov
sbb
push
mov
mov
ret
aad
outsb
outsl
xchg
jno
sub
cld
arpl
inc
xor
ja
pop
lods
pop
dec
cmp
sahf
repnz
sarb
mov
mov
mull
rcrb
xor
inc
jae
mov
jecxz
jmp
fsubrl
mov
dec
scas
sbb
pop
sbb
sbb
adc
lahf
jne
sub
into
and
cwtl
stos
pop
mov
xchg
cwtl
mov
ds
sti
addb
adc
aas
or
push
sub
mov
jge
mov
mov
cmp
mov
mov
loope
jmp
scas
mov
dec
int3
outsb
push
outsl
xchg
jne
xchg
cs
outsl
jmp
jge
rcr
movsb
cmpsl
xchg
call
xor
cmp
lret
hlt
sahf
xchg
dec
push
aaa
mov
push
mov
push
in
test
mov
lods
and
and
not
mov
std
ljmp
in
int
cmpsb
jmp
pop
into
loope
sub
call
xor
sti
out
popf
lret
cld
pop
test
jae
and
cli
xor
and
insl
testb
addr16
xchg
les
sub
and
loop
ja
sub
in
cld
xchg
rcrb
shlb
inc
rcr
popa
popf
pop
in
dec
xchg
xor
cmpb
clc
pop
out
jp
cwtl
xor
jmp
mov
push
ficoms
sub
xchg
and
mov
push
fisubrl
dec
repz
xor
cwtl
sub
nop
fmull
fwait
xchg
fists
dec
dec
shll
cmp
es
cmp
loopne
pop
inc
int
xchg
fistpll
sbb
dec
xchg
or
cmp
rcrb
notl
jbe
popf
jecxz
xor
cmp
mov
xlat
cli
push
or
jmp
and
adc
cmpb
jbe
call
jecxz
jns
dec
add
ja
cmp
adc
push
in
iret
call
and
std
cmp
rorb
lds
ljmp
pusha
orb
xlat
pop
test
imul
cmp
repnz
pop
mov
sub
stos
ds
xchg
repz
xchg
add
in
cmp
pop
out
rorb
dec
jne
fidivrs
mov
imul
inc
shlb
sbb
lahf
sti
call
sahf
lcall
test
adc
shrl
popa
sub
dec
sub
icebp
adc
cld
dec
jb
push
xchg
cltd
in
imul
stc
mov
add
jns
fcomip
stos
jg
ljmp
push
inc
scas
pop
iret
outsb
push
lret
sub
in
lcall
pop
fadds
xchg
dec
roll
outsl
and
in
faddl
std
mov
push
pushf
pop
sti
fwait
and
mov
add
mov
inc
jge
dec
mov
adc
jge
pop
mov
pop
jo
mov
leave
lock
push
out
hlt
cmpsl
push
sub
int3
or
cmp
jmp
xchg
push
or
pop
cmpb
xor
enter
or
out
daa
outsl
xorb
js
sbb
data16
sub
push
and
div
in
jae
add
mov
test
mov
pop
adc
xlat
and
rcll
sti
xor
vpmacsdql
push
popf
mov
cmp
sub
and
inc
cmp
and
jns
mov
std
push
add
sbb
jg
push
cwtl
cmp
xchg
xchg
mov
push
outsl
push
enter
inc
leave
mov
adc
push
mov
push
xchg
dec
fmull
shrb
ljmp
lret
adc
das
cmp
xchg
xchg
lret
into
addl
pop
adc
adc
jo
xchg
in
enter
push
ret
notl
fs
or
dec
jnp
adcl
xlat
in
mov
and
mov
lock
xor
sbb
ljmp
roll
cld
cmp
mov
push
cli
ljmp
mov
popf
shlb
popf
inc
adc
std
stos
pop
cmpxchg
adc
jnp
xchg
and
outsl
fsubl
popa
inc
out
push
mov
jno
and
movsb
ja
xchg
inc
mov
mov
fnstenv
popf
aas
pop
and
addr16
cmp
inc
dec
and
lret
bound
enter
out
cmp
imul
xchg
xor
and
out
loop
pop
inc
repz
inc
inc
xor
dec
cmp
pop
lret
and
pop
xchg
or
fwait
rol
dec
lods
fcoms
jmp
pop
inc
ret
jne
ja
xor
insl
xchg
dec
fisubl
sbb
shrl
push
aam
mov
push
sub
sbb
mov
jne
or
mov
lods
add
dec
mov
xor
dec
ja
roll
add
push
fdivrs
xor
pop
ja
hlt
push
ds
daa
stos
mov
add
pop
fidivrl
fs
pop
and
ljmp
sbbb
and
repz
inc
cmp
movsl
xor
mov
push
jo
repz
adc
das
ja
mov
aas
sbb
dec
mov
push
sbb
push
mov
sbb
push
lods
lods
fcmovbe
div
sub
mov
ficompl
movsb
aad
sahf
adc
push
pop
push
lds
cmp
dec
xor
rcll
in
daa
xchg
push
aaa
lahf
pop
aas
pop
int3
xchg
out
repnz
add
lcall
movb
sub
adc
sti
movsb
lock
mov
jle
arpl
dec
jmp
test
mov
pop
mov
pop
inc
add
adc
mov
popa
lods
rolb
cmovle
pop
test
repz
ret
fcmovb
pop
and
nop
add
outsb
cs
add
pop
popf
mull
inc
insb
out
lahf
bound
fs
mov
jl
into
int
pop
fucomi
mov
jne
add
mov
data16
das
das
pop
fcoms
mov
xchg
in
clc
jb
imul
dec
add
mov
mov
jp
loop
stc
fadds
stos
cs
inc
cmc
daa
pop
adc
pushf
clc
jp
add
mov
lods
jmp
loop
popf
sbb
cwtl
sbb
sub
pop
out
push
mov
sbb
sbb
ret
xor
enter
cmp
call
inc
fs
sarl
ret
mull
popf
cmpsb
addr16
adc
mov
pop
jmp
add
int3
cli
sub
cmpsl
ret
lret
cmp
rcll
xchg
insl
adc
add
mov
sbb
insl
pushf
mov
mov
ds
sbb
cwtl
and
cltd
mov
adc
leave
inc
aas
xlat
push
sarl
add
aad
or
in
pop
adc
add
in
js
loop
inc
mov
mov
and
lds
test
mov
std
mov
cmp
repnz
mov
adc
xor
add
mov
pop
mov
pop
fsubp
scas
jp
xor
fldt
and
xor
sbb
outsl
sarb
movsb
clc
fmuls
icebp
in
aam
cmpsl
add
mov
dec
mov
in
mov
or
fsubl
rorl
aaa
scas
push
out
pop
xchg
lret
mov
push
cmp
cmp
addr16
das
and
push
inc
or
mov
imul
cmp
roll
mov
jae
mov
xchg
sarb
or
inc
push
stc
push
std
xchg
mov
ror
push
sub
fsubrl
cli
pop
ret
ret
pusha
mov
cmp
inc
push
push
mov
inc
adc
lock
shlb
sbb
lret
dec
xchg
inc
rorl
stc
clc
cmc
xor
push
push
clc
scas
gs
jl
xchg
insb
movsb
xchg
and
add
hlt
in
xor
sub
test
jo
dec
adc
pop
sti
xchg
mov
addb
cmpsl
shlb
sub
sub
xor
sti
test
sub
mov
jg
xchg
shlb
loopne
scas
in
or
xor
sub
jo
gs
ret
mov
aaa
test
stc
int
outsb
push
daa
push
stos
mov
lods
fmull
jne
dec
icebp
sbb
cmp
sub
add
push
fnsave
fmull
mov
sbb
pop
mov
mov
jg
cmp
dec
out
rcrb
pop
movsl
out
out
pop
xor
nop
push
out
jecxz
int
mov
test
adc
aad
xchg
stos
cld
cs
or
out
mov
data16
push
mov
je
rcrl
pop
xor
je
test
fwait
dec
ja
push
ret
and
popf
and
das
or
in
and
out
sbb
xlat
rol
in
xchg
ja
jns
push
fmull
add
imul
xor
mov
negl
push
mov
adc
cmp
add
idivb
pushf
imul
dec
enter
sbb
dec
add
or
cmovno
cli
shll
adc
mov
dec
lods
dec
fistps
adc
mov
and
mov
popa
aaa
int3
pusha
xor
icebp
outsl
roll
scas
movsl
fnstcw
adc
scas
cmp
push
shl
push
jmp
in
sub
mov
dec
pop
cmp
xchg
mov
inc
mov
jns
loope
inc
jns
add
lods
cmp
int3
aam
addr16
push
leave
pop
dec
or
mov
xlat
jo
mov
jno
mov
mov
mov
mov
xchg
jae
imul
call
dec
sub
int3
xchg
xor
imul
fnstcw
and
and
dec
push
mov
lret
fisubrs
iret
or
cmp
pop
xchg
scas
std
aam
stos
mov
mov
or
dec
andl
iret
sbb
nop
pop
insl
add
cmpsl
lds
scas
je
adc
stos
lock
adc
cmp
xchg
in
sbb
test
sub
mov
ljmp
xchg
jecxz
add
rorb
movsb
jle
xor
dec
cmp
jecxz
jge
jl
cld
push
jbe
cwtl
test
out
mov
mov
and
imul
pop
mov
pop
jg
jmp
frstor
sahf
out
or
inc
mov
cmc
in
xlat
push
out
cmp
xor
jp
jle
movsl
jo
cmp
jmp
movsb
xchg
js
vphaddubd
sbbl
lds
jge
jne
lahf
hlt
sub
pop
sub
mov
inc
frstor
xchg
cmc
cmpsb
adc
push
test
es
scas
loopne
push
cmp
popa
dec
arpl
shll
stos
mov
aaa
dec
lret
dec
stos
xchg
lret
leave
add
jle
daa
cmp
sub
call
mov
fcompl
cmc
cmpl
add
lcall
dec
push
sbb
cs
rcll
adc
inc
je
inc
dec
setns
sub
test
jbe
mov
jle
jge
fcmovu
fildl
aad
sar
popf
into
popl
and
or
je
out
test
dec
xchg
jge
es
cmc
cwtl
mov
sub
and
and
jle
inc
dec
ds
xor
inc
call
sbb
mov
mov
repz
xchg
aam
dec
popa
out
pop
mov
mov
mov
sub
sub
dec
xchg
leave
ds
add
xchg
mov
sub
xor
dec
push
or
mov
notl
fiaddl
push
jb
push
std
lods
in
fistpll
lock
jge
imul
add
push
or
sbb
xor
iret
or
fidivl
pop
rcrl
add
mov
movsb
lods
js
stc
ljmp
pop
nop
insb
outsl
or
js
pop
cli
sub
scas
hlt
stc
mov
cmp
int
outsl
test
jp
xor
ja
negb
sub
add
cmp
cwtl
ja
iret
and
sbb
pushf
push
loop
repz
mov
push
sub
fsub
int3
insb
scas
insl
mov
lods
mov
fdivrs
lret
sbb
sbb
fs
test
stos
cwtl
pusha
repz
fcmovnu
fisubl
pop
outsb
loope
xor
repnz
lcall
push
mov
stos
lds
xor
ret
inc
scas
pop
jne
pop
shrb
mov
inc
mov
jne
int3
jo
pop
jmp
inc
mov
in
sub
int
add
mov
xlat
and
movsb
xchg
inc
ljmp
pop
inc
in
stos
ror
mov
sub
xchg
push
dec
jp
test
push
sub
and
dec
bound
xchg
aaa
sub
imul
or
in
and
ret
pop
ficoml
sub
inc
xorb
sub
es
imul
xchg
xor
sub
mov
out
test
mov
xchg
or
adc
stos
ret
xor
dec
pushl
outsb
mov
das
add
jb
loop
mov
adc
icebp
stos
xchg
loopne
cmp
aad
sbb
xor
hlt
mov
cli
adc
jle
lret
pop
pop
in
popf
push
bound
mov
lea
sbb
mov
outsb
test
jecxz
pop
vpand
fistpl
jo
sub
dec
nop
push
ja
loope
jp
add
sub
ret
orl
ljmp
subl
mov
cmpsb
push
jbe
repz
outsl
std
adc
inc
inc
imull
cmp
stos
pop
mov
sub
xchg
insl
sub
dec
outsl
dec
lret
shlb
mov
lcall
jecxz
test
outsb
mov
fwait
push
shll
cltd
add
cwtl
add
adc
inc
pushf
add
imul
add
orl
ret
add
aad
pop
jno
cmp
sbb
pop
push
movsb
jle
sbb
dec
pusha
test
jae
scas
add
jne
and
dec
popf
push
xchg
mov
sub
cmc
mov
push
and
push
mov
jbe
mov
arpl
fs
pop
lods
mov
inc
jae
sbb
icebp
jecxz
das
shl
lods
dec
adc
imul
imul
jnp
insl
inc
dec
punpckhwd
iret
lret
sbb
ret
pop
sub
das
push
mov
jecxz
loopne
jbe
les
mov
js
data16
out
std
xor
lret
mov
or
sarl
sbb
cli
push
lahf
cmp
imul
fisubl
loop
mov
roll
es
ficomps
pop
or
xor
loopne
xchg
fidivs
mov
out
fdiv
push
mov
outsl
imull
mov
mov
in
sub
adc
je
rclb
mov
inc
test
sbb
or
sbbl
mov
and
divl
or
insb
std
cmp
ror
out
xor
xorb
movsb
and
pop
dec
mov
xor
adc
xlat
iret
lds
mov
out
outsb
pop
divl
cmp
insl
jg
adcl
xor
cmp
fsubl
sub
jge
shlb
xchg
ljmp
lcall
rolb
cvttps2pi
dec
repz
fsub
and
mov
rcll
stos
vcvtdq2ps
adc
cmp
sbb
cmp
push
sub
out
jl
call
mov
lcall
push
push
xchg
adc
sbb
sbb
jns
dec
jp
aam
push
pop
jmp
icebp
mov
push
xchg
inc
dec
test
xchg
inc
test
or
jb
rcrl
scas
xchg
push
test
inc
lcall
dec
fisttpll
dec
insb
icebp
lods
scas
cmp
and
cmp
or
inc
jmp
pop
add
mov
outsb
pop
mov
popa
jg
mov
fcmovnbe
insl
jle
and
call
add
sbb
jno
sub
xchg
mov
xchg
adc
loope
sbb
mov
scas
test
mov
loop
sahf
push
inc
xchg
sub
xchg
jmp
lret
cmp
mov
lahf
sbb
add
jo
es
aas
das
xor
scas
sub
sub
cli
in
add
shll
add
popf
pop
jg
mov
mov
mov
or
mov
fmull
cmp
in
xchg
xchg
pop
shrd
loope
jne
in
arpl
movsl
xor
sbb
xchg
fs
imul
xchg
jmp
or
sub
nop
or
jp
into
adc
imul
scas
mov
movsl
dec
or
ss
dec
arpl
outsb
and
mov
push
enter
dec
ffreep
stos
sub
test
out
out
pop
jns
stc
add
pop
add
pop
xchg
ljmp
cmp
adc
stc
lods
jg
out
in
add
dec
sbb
jno
enter
leave
call
push
mov
idivb
in
sbb
in
sbb
push
int3
daa
test
ror
fstpl
pop
call
in
pop
push
push
xchg
test
stos
inc
scas
imul
pusha
inc
mov
aaa
mov
xor
inc
push
mov
movsb
fucom
xor
jne
xchg
icebp
mov
sub
or
cmc
ss
pop
lods
mov
xchg
mov
mov
scas
gs
daa
lds
xor
fsubrs
movsb
jnp
push
out
shlb
out
dec
out
pop
packssdw
scas
movsl
pusha
or
inc
out
xor
scas
jae
loop
cli
fwait
jecxz
fldt
pop
out
lahf
mov
cld
push
rcrb
lds
enter
ficoml
and
xor
sahf
dec
outsl
xor
fcomp
inc
div
xchg
sbb
movsb
popf
test
bound
inc
fmuls
movsb
xorb
cmpsb
sar
loopne
push
mov
enter
add
xchg
sub
neg
ja
dec
mov
jg
xor
mov
dec
push
imul
sub
xlat
jle
test
ds
push
dec
jnp,pt
dec
sarb
or
std
outsl
ljmp
mov
adc
pusha
lock
js
mov
es
ror
js
xchg
fsts
icebp
in
bnd
xchg
jbe
sbb
pop
mov
int3
jp
push
mov
sbb
les
addl
or
or
nop
fdivs
push
daa
xor
inc
dec
test
sub
mov
mov
pop
mov
addr16
inc
dec
sub
jge
fadds
jecxz
stos
mov
in
rcrb
jnp
rcrl
sub
das
pop
add
subl
mov
xor
cmpl
xchg
cmp
in
pop
mov
repz
add
movsb
mov
addb
cmp
bound
or
sub
imul
mov
jmp
xlat
inc
lods
push
data16
push
cmpsb
addl
jb
xor
out
sti
sub
clc
inc
ja
or
in
leave
imul
inc
gs
push
add
imul
xlat
push
aas
mov
cltd
push
mov
js
in
aaa
aaa
stos
and
xchg
divl
aam
lds
jnp
mov
pop
push
or
and
int
mov
outsb
popf
fnsave
sti
pop
push
dec
shll
and
xor
data16
inc
fbstp
inc
inc
shr
mov
dec
jg
movsb
pushf
dec
popf
cmp
leave
test
inc
cmpb
movsbl
jns
sbb
mov
and
and
pop
xor
cmc
in
sub
mov
add
shlb
rorb
icebp
lds
dec
mov
test
sub
lcall
jp
fcoms
dec
dec
mov
outsb
pop
cwtl
lcall
je
in
test
dec
dec
test
pusha
loope
ret
out
dec
insl
aam
int
dec
mov
push
mov
and
adc
add
iret
jge
fistpl
test
mov
add
push
inc
les
out
xlat
inc
sahf
aad
js
lahf
lcall
or
push
sub
mov
fdivrp
lcall
pop
repnz
icebp
lret
or
mov
rcll
xchg
cli
jo
jmp
add
xor
jb
jmp
dec
jmp
faddl
jp
fists
xchg
xchg
mov
mov
sub
out
cmpsb
push
movsl
adc
movsl
or
std
int
les
cwtl
pusha
push
std
jmp
dec
cltd
jle
repz
push
fstpt
dec
mov
mov
pop
mov
push
nop
push
mov
xchg
fstpl
lcall
or
lahf
jo
push
xor
shrl
xor
in
movsb
add
dec
dec
nop
es
sub
add
jo
ret
loopne
test
sbb
sahf
shlb
loop
and
call
sbb
push
cltd
jo
cmp
mov
mov
rol
cmpsb
gs
or
mov
cmp
mov
sub
pushf
push
pop
dec
cmp
mov
jb
fcmovb
mov
ret
test
push
pop
cmp
cmp
sbb
out
pop
sbb
mov
inc
fnstenv
sbb
loopne
sub
call
mov
out
ja
lret
xchg
cmpl
or
jae
rorb
idivl
sbb
xchg
stc
jg
lret
test
jne
mov
push
or
or
mov
inc
adc
push
jne
cld
shrl
dec
jecxz
ds
mov
loopne
push
lret
in
in
enter
outsb
mov
daa
aam
fs
in
mov
xchg
jnp
or
mov
cmp
stos
jecxz
mov
xor
popf
fwait
shrl
fcmovnbe
push
out
push
adc
out
xlat
in
sbb
shl
fidivs
or
enter
sbb
into
mov
aaa
nop
mov
cmc
je
push
push
js
aad
cld
cmpsb
xor
mov
cmp
jp
ret
cmpsb
mov
or
pextrw
repz
lea
std
add
bound
arpl
adc
xchg
mov
push
es
mov
mov
pop
arpl
xchg
mov
insl
lods
inc
cmp
dec
sbb
and
push
mov
jp
mov
push
xor
add
sub
in
adc
subl
shr
test
addb
mov
nop
jmp
cmp
pop
cmpsl
lahf
pop
imul
jnp
rclb
adc
insl
push
test
sbb
sti
jle
cltd
mov
aad
mov
pop
or
mov
pop
push
pop
cmp
fisubrl
loopne
lea
xchg
das
cmp
lds
xor
mov
cmp
pop
aam
fwait
rolb
inc
mov
bound
lret
cld
xchg
bound
popf
es
jb
mov
mov
in
or
or
and
add
add
add
pop
xorl
add
add
mov
xchg
sub
mov
sbb
dec
je
leave
test
test
andb
mov
jp
test
xchg
pushl
shll
iret
out
test
xor
mov
popa
cld
adc
pop
sbb
xor
mov
test
fsubrl
pusha
cwtl
dec
mov
shll
sub
mov
xor
inc
xchg
add
imul
int3
cmp
push
xor
xchg
sub
call
add
outsb
sti
ret
bound
cmp
jecxz
jg
sub
cmp
push
adc
mov
lods
in
fists
inc
out
adc
push
mov
cmc
insb
mov
jle
aaa
stos
and
loopne
sbb
hlt
cmp
xchg
sub
ss
inc
xchg
lret
or
mov
jbe
push
addr16
mov
xorb
daa
out
scas
fcomps
pop
inc
xchg
mov
scas
and
sbb
adc
push
sbb
fadds
movsl
xor
loop
sbb
enter
jbe
or
fwait
xchg
push
xor
jp
shll
or
dec
cltd
loop
shll
cmp
aas
pop
lock
je
daa
or
dec
or
leave
sub
test
xor
jge
stos
sub
cmp
mov
icebp
push
mov
pushf
add
or
shr
pop
jnp
arpl
xor
jnp
rolb
ja
pop
lcall
mov
fimuls
lret
lahf
test
or
mov
out
add
push
dec
mov
cli
inc
movsl
mov
xchg
jge
mov
clc
jne
mov
cs
push
imul
pop
in
inc
int3
push
into
loopne
outsb
test
mov
jmp
imul
outsb
pop
sub
leave
pusha
ret
lret
out
inc
sub
lods
dec
stos
shl
inc
test
das
mov
mov
xchg
fildll
test
push
xchg
and
or
xchg
pop
jmp
fdivr
sub
jno
lret
sbbl
in
call
ds
lods
mov
addb
push
pusha
daa
mov
sbb
decb
cltd
xor
mov
pop
and
push
lret
fs
mov
in
cmp
lret
xor
add
xor
in
adc
xor
ljmp
push
in
arpl
mov
cmp
jns
inc
mov
dec
ret
idivl
outsb
movsl
mov
cmp
insl
icebp
lret
repnz
and
push
pop
adc
dec
ljmp
popa
jno
ss
sbb
cwtl
mov
push
inc
aaa
outsb
fiadds
push
xor
in
push
mulb
cli
sbb
imul
fisubrs
xchg
int
clc
les
xor
repnz
cmp
pop
mov
push
jno
jg
jnp
aam
push
sbb
mov
dec
fsts
pusha
xchg
pushf
xor
stos
lock
sbb
shll
jnp
mov
inc
daa
test
pop
xchg
nop
lret
xchg
mov
dec
iret
lods
jnp
sub
jnp
sub
sbb
xor
clc
outsb
fdivp
jmp
popa
int3
gs
enter
xchg
aam
outsl
movsl
mov
jmp
jle
test
jp
or
adc
notl
mov
sbb
mov
mov
mov
out
jmp
cmpb
in
mov
xchg
and
push
jmp
daa
lods
lret
dec
dec
add
mov
jo
xchg
inc
xchg
stos
js
repnz
out
mov
push
stc
shll
dec
and
imul
sub
dec
shlb
lods
out
bound
mov
hlt
nop
add
sbb
mov
stc
cli
lahf
in
fiadds
mov
shlb
mov
mov
rorb
fildll
jle
call
mov
inc
ljmp
movsb
inc
je
cmp
add
sbb
jae
mov
faddl
push
jo
push
jno
adc
xor
sub
addl
pop
sub
push
xlat
outsl
loop
pop
in
xlat
or
xor
mov
push
mov
sbb
dec
sbb
xchg
dec
push
sub
push
xor
sub
lahf
ret
sbb
or
adc
addr16
adc
pop
mov
imul
push
lods
push
mov
xor
sti
rcll
ljmp
sub
movsl
xchg
mov
lret
sti
lock
clc
ljmp
mov
jecxz
mov
adc
nop
add
xchg
out
and
fsubrl
push
xor
cmc
test
xchg
pop
mov
lret
jo
test
lret
pop
push
fs
and
or
arpl
inc
mov
imul
call
lock
jg
out
and
pop
push
lds
orps
xor
push
add
pop
sahf
cmp
ja
out
and
and
push
lods
add
cmc
pop
mov
movsb
fsts
sub
add
lods
mov
jbe
xor
mov
sbb
or
dec
pop
push
icebp
dec
movsl
divb
je
xlat
jno
out
push
xlat
cmp
and
into
fistpll
sbb
push
out
jne
shrb
add
movsl
shrl
mov
popf
sahf
call
cmp
fcompl
loope
jbe
jmp
lea
mov
adc
mov
cmp
loope
sub
xor
call
das
pusha
mov
mov
xchg
xlat
out
push
inc
push
xchg
sbb
movl
popa
test
sbb
pop
pusha
sbb
sub
xor
add
test
cmpsb
clc
mov
push
cmp
jmp
loopne
rorl
jo
or
mov
mov
loope
lds
mov
adc
lret
adc
jne
cmpsb
cmp
cmp
fisttpl
out
inc
je
inc
iret
in
mov
jo
jle
repz
xchg
xor
scas
lret
and
shlb
xor
or
orb
jnp
stos
cmpl
cltd
dec
sbb
cmp
daa
push
test
pop
or
insb
ds
test
jo
enter
mov
adc
js
aad
inc
dec
rcl
dec
lcall
sbb
lds
ret
std
jmp
jg
shr
xchg
out
jle
lret
mov
sahf
scas
mov
scas
loop
aas
outsb
or
pop
mov
push
stc
aad
xchg
and
cmp
inc
add
cmc
add
es
arpl
sbb
mov
imul
xchg
push
lods
adc
push
or
inc
xor
mov
rclb
dec
decb
lods
cli
and
mov
push
stc
das
sbb
test
nop
jge
es
mov
in
test
testl
adc
es
pop
or
ja
mov
mov
shl
orl
les
push
xor
cmovbe
test
leave
pusha
xchg
rcrl
clc
icebp
outsl
cld
aaa
in
jo
push
movsb
xchg
xor
lahf
adc
loop
lds
negl
shll
outsb
arpl
and
sahf
push
xchg
cmc
and
mov
ret
stos
sub
js
mov
xchg
mov
adc
int3
ret
or
ss
into
scas
xchg
iret
in
xchg
in
xchg
add
push
test
loop
lds
push
push
xchg
xchg
mov
add
repz
xchg
notl
mov
movsl
fcoml
or
cmp
mov
mov
data16
xchg
es
and
and
imul
popf
out
mov
cwtl
jns
cmpsb
mov
sbb
push
pop
mov
pop
aam
test
imul
mov
and
cwtl
pop
sub
gs
dec
push
mov
xlat
in
lret
xor
das
movsb
movsl
std
aas
jmp
sbb
jb
cmp
mov
mov
mov
loope
sub
mov
cmp
mov
mov
loopne
stos
push
dec
mov
stos
xchg
mov
push
push
xchg
mov
inc
mov
fnstenv
sbb
adc
movsb
lods
in
xor
aad
loope
inc
fildll
adc
add
cmp
pop
out
add
xor
mov
cmp
lds
cld
mov
stos
sarb
movsb
inc
dec
sbb
cs
sub
and
push
jmp
sbb
ret
cmp
cltd
push
loopne
xchg
movsl
dec
mov
jle
mov
lea
mov
sti
aas
sub
mov
stos
movsb
fdivl
addr16
dec
adc
test
repz
sub
lods
repnz
pop
jge
add
pop
jecxz
loope
out
cmpsl
mov
pop
enter
aas
icebp
pop
das
add
ja
mov
dec
xchg
inc
dec
push
mov
mov
insl
dec
jns
popa
arpl
xchg
mov
add
mov
xchg
movsl
pushf
push
push
idivb
mov
leave
movl
sub
rcr
mov
cmp
and
jp
in
ljmp
cmpsb
and
mov
adc
loope
mov
dec
js
movsb
dec
push
aam
dec
adc
pop
test
aas
cli
mov
cmpl
mov
mov
outsl
hlt
inc
dec
es
pop
mov
inc
mov
adc
or
imul
jge
mov
stos
mov
push
in
xor
mov
outsl
notl
mov
dec
test
sti
jbe
mov
xchg
fildl
mov
inc
inc
mov
mov
pusha
dec
sbb
es
test
leave
popa
lea
adc
shll
cli
vmovss
adc
jl
sbb
xor
xchg
jecxz
sbb
or
jae
ret
push
mov
sbb
sbb
cmp
push
mov
jg
loopne
xchg
in
fiadds
push
nop
inc
adc
inc
arpl
cmc
mov
inc
jo
jg
cmc
cmp
loope
inc
js
fcomps
fwait
mov
stos
movups
pop
mov
mov
push
mov
and
push
sub
enter
scas
mov
mov
shll
xor
loopne
xchg
jo
jle
sbb
cmpsl
fadds
sbb
fsts
xchg
push
loope
cmpsl
xchg
fbstp
int3
loope
ss
pop
jg
xchg
dec
jg
loopne
and
je
imul
cmp
adc
xor
cli
sub
out
sbb
mov
sbb
sub
fstps
mov
jecxz
push
sub
lahf
lcall
nop
movsb
imul
dec
hlt
cltd
xchg
lds
mov
jmp
sub
mov
loopne
or
aam
out
add
lahf
inc
xchg
mov
cli
bnd
xor
sti
shrb
stos
mov
sub
cmp
mov
aad
pop
fmuls
imul
cwtl
lret
pop
fbstp
xchg
add
jnp
mov
xchg
push
imul
and
fwait
bound
inc
mov
scas
xor
pop
js
push
pop
fisttpl
mov
imul
sti
in
ja
cmpsb
inc
ljmp
repz
add
sbb
adc
xchg
ret
or
jg
lds
arpl
push
fwait
mov
xor
gs
cmc
stc
sbb
scas
pop
lods
cmp
cmp
xor
scas
das
pop
vpaddusw
mov
cwtl
inc
imul
ret
pop
cmp
ja
dec
mov
adc
pusha
lds
push
cmp
or
repnz
lea
test
iret
out
and
pushf
xor
push
movsb
in
push
jbe
push
or
push
pushf
xor
mov
xchg
movsl
pop
lods
stos
fsubs
insb
into
shl
outsb
cltd
sub
jne
ret
mov
imul
rorl
lea
sbb
loop
xchg
out
loop
bound
fwait
negl
jb
lret
imul
into
or
xor
inc
movsb
int
jecxz
fstps
mov
push
xchg
cmp
push
jecxz
rcll
cltd
inc
xor
dec
xchg
movups
pop
subb
cmp
and
mov
pop
xchg
mov
adc
pop
push
lods
lahf
inc
mov
mov
ss
push
mov
or
daa
sub
outsl
call
xchg
idivl
adc
dec
lret
pop
andb
lods
lret
lret
fdivr
pop
xor
pop
lahf
cmp
hlt
ss
icebp
inc
orl
movl
clc
adc
push
repz
out
cmpsl
xrelease
mov
rclb
xchg
inc
inc
fwait
mov
jne
daa
xchg
daa
lods
cmp
leave
inc
stos
out
sub
push
pop
lret
mov
sub
sub
jbe
clc
push
test
add
mov
push
imul
icebp
mov
cmp
loopne
adc
inc
and
jnp
std
xchg
inc
cmp
add
push
push
fmuls
sbb
js
xor
inc
fwait
xchg
daa
mov
cld
pop
push
xor
mov
stos
adc
or
mov
leave
ds
xchg
lcall
cmp
pop
adc
aam
jns
jne
dec
mov
push
cmp
jg
and
hlt
es
cmp
cmp
jo
dec
sub
cltd
ret
fistpll
insl
aaa
in
nop
adc
sbb
shrb
jo
pop
daa
xchg
mov
das
push
mov
stc
inc
test
mov
fwait
sub
enter
jns
sbb
inc
loop
in
lret
pushf
jg
jmp
dec
jge
lret
add
das
mov
arpl
xchg
jno
repnz
jge
jb
xchg
add
lcall
fiaddl
and
outsb
and
mov
ret
or
mov
inc
inc
rcl
movsl
sbb
das
je
idivb
and
sbbl
sub
mov
dec
mov
pop
cmp
cmc
or
and
add
dec
jae
shlb
or
js
jno
and
ret
dec
rol
push
cmpsl
dec
inc
inc
aad
into
outsl
and
dec
cmp
mov
push
test
cmp
ljmp
icebp
cmp
pop
cltd
notl
data16
lock
movsb
loope
shll
out
mov
xor
inc
std
sub
jmp
dec
sahf
cmpsb
int
lock
out
sub
push
pusha
clc
jnp
jecxz
or
in
arpl
mov
rcrb
mov
inc
sarb
cmc
inc
mov
inc
jnp
dec
and
cmc
cmp
jge
add
or
inc
xorl
fwait
mov
lds
or
in
shr
or
test
mov
xchg
cs
adc
xor
int3
dec
arpl
cmp
xor
daa
les
mov
stc
mov
push
mov
shr
inc
mov
lock
lods
mov
adc
pop
int
movsb
aam
inc
sbb
sub
lds
cmp
fsubl
cmp
int
call
sti
in
cli
sub
xchg
inc
cmp
push
jae
mov
add
mov
mov
pop
fdivl
faddp
orb
jmp
mov
mov
cmpsb
lcall
aam
push
fstpt
nop
mov
out
movsl
je
xor
adc
adc
aad
jle
sub
mov
xor
clc
cmp
in
xchg
xor
push
dec
cmp
xor
cld
arpl
jno
fwait
dec
mov
in
adc
ret
fmull
push
pop
lret
xchg
mov
cltd
dec
cwtl
mov
fstpl
lods
sbb
pop
imul
push
pop
testb
lret
jns
mov
adc
in
mov
sbb
pop
add
xchg
rorb
push
pop
adc
xchg
pop
dec
daa
dec
push
outsb
inc
addl
mov
daa
and
nop
add
xchg
push
je
xor
jne
mov
ja
lcall
iret
aad
and
pop
sbb
adc
mov
cmpsl
cltd
decl
in
sbb
xor
mov
sahf
mov
pop
call
add
scas
mov
sub
pop
mov
mov
arpl
inc
clc
es
outsl
stos
adc
add
je
push
mov
fildll
icebp
sub
mov
sub
shll
iret
pop
insb
mov
push
pop
mov
idiv
jns
add
pop
add
adc
cli
cltd
sub
iret
and
mov
mov
je
xchg
cmp
mov
jbe
stc
in
or
push
push
fwait
ds
nop
jmp
adc
cmp
leave
push
xor
mov
mov
add
decl
and
dec
test
jo
icebp
xchg
test
call
jno
adc
es
fidivl
repz
imul
push
test
test
push
inc
sahf
fdivr
inc
mov
int3
sbb
mov
lret
cmp
mov
or
add
fistl
mov
push
xchg
loop
out
xor
in
mov
mov
lret
ret
dec
mov
mov
popa
aas
xchg
sbb
iret
cli
push
addb
out
pop
mov
cmp
jg
mov
jge
pop
sub
je
push
imul
add
push
mov
popa
ljmp
push
xchg
mov
mov
lret
and
pusha
mov
outsb
or
push
leave
jp
pop
mulb
mov
lods
xchg
unpckhps
leave
movsl
test
sub
inc
xlat
pop
mov
cmpsb
cmp
out
dec
les
inc
pop
pop
push
pop
mov
add
jns
data16
incb
jge
sbb
int
jmp
push
sbb
mov
das
int3
pushf
pop
dec
es
imul
movsb
adc
hlt
scas
dec
sahf
adc
int
aas
sbb
or
mov
lock
test
ja
xchg
imul
jb
nop
push
pop
sarl
jge
or
fdivrl
leave
dec
mov
or
aas
xchg
adc
jo
push
fs
mov
mov
xchg
idivl
lock
inc
fldl
in
lahf
std
out
loope
jl
sub
adc
arpl
jle
jle
pop
mov
test
mov
adc
push
lods
into
les
sbb
std
mov
mov
out
dec
gs
jno
movsl
ret
ret
negl
mov
fisttps
shll
mov
cmpsb
adc
ficomps
mov
mov
and
cmp
and
in
hlt
addl
sub
mov
cmc
jp
fldcw
mov
jnp
fs
pop
decb
into
cld
scas
int
mov
and
out
or
aaa
mov
and
sahf
jnp
cmp
cmpsb
cmc
xor
lea
sub
xchg
cmpsb
xchg
test
pop
sbb
aam
dec
and
cmp
push
orl
sahf
cmpsb
mov
popa
mov
mov
pop
xlat
lret
xor
addr16
jns
aad
jle
cld
cld
nop
add
push
fs
push
dec
aaa
dec
xor
mov
aaa
mov
repnz
iret
inc
aaa
outsl
pop
popf
daa
loopne
and
mov
outsl
jbe
xor
adc
cs
outsb
or
mov
dec
sub
jg
test
dec
mov
icebp
outsl
outsl
roll
xor
loopne
pop
xor
push
loope
repz
test
add
mov
nop
data16
dec
add
jnp
xchg
lahf
push
jl
push
ds
call
pusha
lods
mov
push
jmp
cmpsl
mov
xor
jge
pop
aam
movsb
adc
rolb
call
lcall
call
ficoms
adc
shrl
inc
call
aad
dec
push
hlt
popf
add
mov
les
fucomi
sub
into
stc
lods
adc
mov
idivb
test
push
inc
sub
mov
stos
inc
ret
mov
fcompl
jno
push
rdmsr
sbb
loop
int3
push
or
movsb
out
cwtl
cli
sub
and
imul
jb
pusha
xor
cwtl
adc
stos
inc
out
and
push
add
mov
arpl
movsb
adc
rol
push
loop
repz
adc
xchg
inc
in
arpl
and
fwait
push
dec
mov
outsb
sub
in
xor
cmp
pop
test
push
sub
divb
ljmp
mov
dec
aas
jmp
fisubrl
mov
mov
std
mov
sub
addr16
inc
shrl
and
xchg
movsl
jecxz
sbb
cmp
sbb
sub
or
push
dec
outsb
and
fdivrp
cmp
push
cmc
testb
add
rcll
mov
mov
xchg
and
je
adc
or
pop
sti
in
cmp
pop
cmp
out
pop
aad
loope
mov
jg
inc
in
das
cmp
inc
daa
push
push
mov
sbb
jmp
sub
mov
xor
cli
test
stos
dec
jecxz
mov
aad
dec
and
and
pop
cltd
xchg
fcmovnbe
dec
clc
jg
xchg
cmp
cmp
sbb
jmp
in
cmpsb
adc
cltd
lahf
add
fmull
stos
jnp
mov
ja
adcl
or
iret
cmc
xchg
mov
mov
inc
imul
test
adc
sub
mov
jnp
loope
mov
xlat
out
cmp
xor
scas
pop
test
test
scas
or
cld
loop
daa
adc
adcb
loope
enter
xor
mov
adc
fsts
sub
fnstenv
or
cmpsb
pop
cli
or
push
shll
pop
insb
inc
ljmp
subb
int
mov
fs
lret
enter
jb
add
mov
jae
in
stos
nop
xor
icebp
add
int3
push
adcl
sbb
xor
add
into
dec
sub
cmpsl
dec
xchg
insl
out
push
xor
and
lret
loop
adc
mov
pop
je
mov
xlat
xlat
mov
and
hlt
lods
lret
dec
mov
rcl
mov
adc
adc
andl
scas
sahf
push
fwait
pop
push
xchg
inc
outsb
test
ds
dec
mov
sbb
and
inc
out
div
mov
jl
mov
insb
fcoml
fisttpl
jmp
fsubl
inc
or
xor
push
mov
mov
jg
sbb
mov
xchg
add
inc
push
leave
push
fildl
xor
adc
sub
mov
xlat
add
pushf
jnp
xor
inc
jl
pop
lds
popa
dec
js
jb
cmpsl
mov
mov
xlat
and
jmp
leave
stos
dec
lods
aam
dec
pop
fnstcw
pop
mov
and
aam
inc
pop
push
clc
fbstp
sbb
jbe
pop
xchg
pop
popf
cmpb
ret
dec
push
movl
cmp
add
insb
jno
jge
inc
lret
das
xchg
movl
sbb
dec
fidivrs
and
lock
mov
sbb
mov
popf
cld
repnz
cmpsb
loop
dec
sbb
push
idiv
fs
sbb
fidivl
dec
and
sahf
loop
sbb
push
push
sub
mov
and
push
sub
inc
movl
ja
cmp
fiadds
push
lods
jecxz
fnstcw
xchg
mov
push
repz
adc
and
xor
and
test
dec
shl
sti
cmpsl
cld
arpl
lock
stos
push
arpl
pushf
mov
cmp
aam
jnp
fmuls
pop
inc
mov
js
mov
in
pop
rclb
add
stc
in
jbe
jno
insb
fldt
test
fiaddl
or
xchg
js
rorb
repnz
dec
or
nop
fcoml
in
out
jnp
std
aas
std
icebp
stc
or
mov
sbb
xchg
lret
mov
out
add
sub
popf
bound
or
pop
jns
addr16
aad
push
notb
lcall
repz
add
xor
loope
mov
pop
lcall
iret
or
aas
nop
xchg
outsl
push
nop
mov
mov
xchg
std
das
in
or
dec
mov
dec
add
test
ljmp
xor
pop
outsb
in
addr16
mov
js
lds
jl
push
aad
and
stos
shlb
lods
mov
movsl
mov
or
sub
push
or
insl
jge
mov
sub
or
dec
lock
gs
test
stos
jmp
shlb
rcll
outsl
mov
fwait
cltd
popf
inc
out
sarb
mov
into
std
loope
repz
dec
mov
push
lock
std
ds
sbb
add
outsl
lods
inc
inc
outsb
mov
rorb
loope
add
dec
cmpsb
lret
fbld
ja
and
inc
out
mov
xchg
xchg
loopne
int
rolb
pop
es
ret
movsl
fwait
addr16
enter
pop
adc
popa
test
sub
and
jge
sub
in
jmp
cmc
inc
lods
stc
pop
fmull
push
xlat
insb
out
cmpsl
cmp
cmp
pop
fmuls
cs
insb
test
imul
lret
jecxz
cltd
ds
or
mov
fildl
mov
jecxz
mov
push
and
add
mov
mov
or
out
xchg
cmp
fisubrl
mov
call
dec
std
mov
push
mov
out
ds
mov
scas
jns
or
pop
mov
or
jl
sti
inc
xor
jge
ja
dec
mov
cmpsl
ja
das
adc
cmp
pop
icebp
jecxz
dec
enter
repnz
pop
pop
jge
stc
test
divl
cli
pop
push
and
out
jge
xchg
jae
mov
xchg
push
push
cmp
mov
repnz
dec
sub
aad
xchg
push
mov
adc
mov
mov
pop
or
or
test
ljmp
dec
mov
lahf
add
inc
andb
push
adc
sti
or
and
lds
in
rclb
mov
xor
insb
adc
stos
jge
cmp
add
push
lods
cmp
mov
imul
mov
add
lret
daa
fmuls
cs
stos
mov
lea
dec
mov
mov
and
mov
mov
enter
fcomi
stos
jl
inc
push
mov
or
mov
pop
jge
insb
pop
rcl
lcall
or
leave
sub
cmp
lret
jmp
pop
xchg
mov
cmp
inc
jl
ret
dec
add
shll
lret
sub
int
dec
out
in
outsb
inc
jne
adc
cmc
test
dec
sti
xor
jns
or
enterw
or
xchg
sahf
pop
movb
roll
fsts
pop
and
fmull
mov
ss
cmpb
stos
fidivrs
mov
push
pop
fsubrs
pusha
int
call
add
pop
gs
jl
sub
inc
sub
sub
pop
ss
push
sbb
mov
or
ljmp
jge
mov
call
lea
rcrl
sbb
pop
inc
adc
fadds
int3
hlt
ljmp
and
cmpsb
outsb
mov
sahf
out
decb
push
adc
lret
sbb
jmp
xchg
nop
je
xlat
or
lods
test
add
ljmp
cwtl
xchg
dec
clc
jl
ja
sub
call
dec
dec
sub
add
mov
xchg
sbb
cwtl
mov
add
mov
loope
repnz
cmp
test
ficompl
outsl
jne
sub
stos
pop
into
fs
scas
int3
mov
mov
je
xchg
add
stc
int
inc
sub
sbb
addr16
mov
data16
je
mov
insl
adc
xchg
cmpsb
sbb
neg
movsb
xchg
dec
add
xchg
mov
xlat
jnp
cmp
lcall
dec
mov
and
daa
sbb
sbb
inc
pop
negb
sahf
loop
pop
add
jne
jecxz
push
call
loopne
fsubrl
add
sub
mov
cld
push
mov
hlt
jnp
mov
xor
out
cmp
test
movsl
pop
loop
sbb
out
sbb
adc
inc
dec
repz
mov
jmp
mov
fstpt
mov
sub
mov
clc
push
int3
inc
sub
out
notb
test
clc
or
mov
mov
sub
mov
popa
cmp
data16
shlb
sahf
xchg
sub
or
sub
add
sahf
sahf
cmpsl
mov
inc
jo
xlat
inc
jb
sbb
fisubs
add
push
mov
cwtl
sbb
push
dec
fcoml
dec
movsb
cmp
stc
cmc
sub
push
mov
testb
shl
hlt
pop
xchg
jl
movsb
xor
fcmovnb
adc
mov
cmp
insb
fs
fiaddl
add
daa
out
inc
ret
leave
dec
js
inc
or
out
data16
je
or
aad
cltd
cmc
dec
push
adc
ret
fstl
mov
clc
sub
jno
mov
and
cmpsb
mov
jne
or
dec
cli
cs
lahf
mov
mov
jno
inc
cmp
mov
sub
mov
mov
je
pop
cmp
push
out
push
mov
jg
or
push
mov
cmc
adc
mov
sti
mov
mov
xchg
adc
sarb
jle
add
and
mov
and
aas
push
std
call
mov
je
push
pusha
stc
cmp
fsubl
mov
out
es
jae
dec
pusha
add
int3
adc
jns
pop
add
inc
and
jp
aaa
call
decl
pop
jbe
push
sub
fnstenv
xchg
int
call
jecxz
push
and
push
mov
and
cmpsb
jne
sbb
sahf
xchg
pop
ret
mov
adc
or
or
sub
inc
mov
xor
repnz
cmp
hlt
and
jne
es
pop
or
pushf
imul
movlps
xchg
nop
and
jo
mov
adc
push
stos
sbb
out
nop
xor
stos
inc
lahf
icebp
test
adc
aas
adc
repz
jbe
nop
popf
lahf
leave
fldenv
rorb
in
stc
mov
mov
sbb
pop
out
test
sahf
das
cli
dec
popa
clc
dec
lahf
icebp
inc
jnp
int3
or
stc
cs
stc
mov
jg
fldl
xorb
loop
adc
pop
push
iret
add
lods
xor
mov
pop
outsl
mov
cmp
std
push
les
clc
aas
jge
adc
inc
push
mov
pop
rcrb
lds
popa
lret
push
cs
mov
mov
inc
jg
or
test
int3
mov
mov
dec
dec
in
aam
fs
jmp
or
popf
mov
pop
sahf
pop
std
jmp
adc
jb
xor
lods
mov
mov
sub
adc
jmp
fs
push
xchg
cmpsl
incb
sub
pop
into
inc
xor
jle
cwtl
mov
ror
mov
into
stc
leave
xchg
jmp
xchg
inc
loopne
adc
inc
ret
and
es
adc
xchg
dec
shr
cmpsl
jo
out
mov
adc
loope
ds
jae
xor
push
mov
out
jnp
cmpsl
mov
sub
add
dec
mov
fistl
jmp
iret
sbb
mov
daa
sub
push
insb
in
sbb
das
or
mov
inc
mov
and
cmc
outsb
mov
imul
cmp
xchg
dec
flds
xchg
rorl
ds
and
repnz
sbb
ret
push
arpl
scas
jno
xor
mov
or
jle
and
aas
pop
mov
scas
xchg
data16
es
or
je
cmc
mov
sbb
pop
dec
sbb
gs
lret
fnstenv
cmp
fdivr
cld
outsl
pop
shrl
add
jge
lods
out
xchg
test
mov
cmp
or
test
xchg
loopne
xchg
stc
sarl
lds
subb
add
add
shrb
out
mov
test
mov
rorb
mov
cmpsl
addb
fisubl
mov
dec
aas
dec
mov
int3
push
in
repnz
inc
sub
sbb
mov
or
rolb
lds
cmp
dec
test
gs
pusha
pop
imul
jmp
and
inc
inc
dec
popa
and
push
in
scas
push
xchg
xchg
cmpsb
std
stc
sbb
push
cmp
mov
dec
jno
mov
pop
in
pop
mov
ss
inc
adc
ficompl
adc
xor
outsb
xchg
in
es
sbb
es
cmp
xchg
push
mov
cmp
xchg
data16
sub
es
les
mov
pushf
dec
inc
sub
sahf
mov
stos
imul
sub
inc
cmpsl
jg
or
pop
nop
loope
sbb
dec
push
ds
add
sub
cmp
xor
fistl
or
jecxz
sub
out
leave
inc
call
xchg
flds
cmpxchg
call
rolb
sub
arpl
mov
xchg
mov
xchg
fsubrl
jns
and
xchg
dec
in
push
mov
and
stc
cmp
test
jle
out
lods
sub
nop
mov
add
ja
mov
mov
sbb
insb
unpcklps
pop
adc
adc
lahf
mov
sti
pop
adc
cmp
fcoml
or
insb
ds
popf
cmp
stos
xchg
in
lcall
add
jmp
std
pop
inc
cwtl
xor
inc
jb
mov
pop
out
jnp
add
repz
leave
inc
cltd
xor
mov
stc
ds
test
mov
imul
test
rorb
fldl
loopne
fwait
imul
push
repnz
push
aas
sub
inc
aad
push
fisubs
cmpsl
or
testb
and
mov
mov
xchg
subb
aas
arpl
mull
repnz
enter
mov
pop
in
pop
push
pop
pop
out
cli
sub
mov
ss
pop
adc
sub
add
xlat
jecxz
dec
jae
rorb
jg
popa
pop
jb
out
mov
mov
insl
push
cmpsb
mov
inc
add
push
mov
push
dec
push
fstl
mov
stos
adc
mov
jns
add
jmp
movsb
sub
test
inc
std
xor
xchg
inc
dec
aaa
pop
cwtl
pop
jne
ja
push
fwait
mov
pop
lods
xchg
sub
aam
out
sbb
pop
call
jns
leave
pushf
jecxz
mov
lahf
outsl
or
jge
push
push
inc
push
ret
daa
sti
icebp
add
push
mov
pop
or
orl
arpl
xchg
add
aad
dec
xchg
scas
sub
test
test
insl
sbb
addr16
mov
cli
nop
push
or
sbb
mov
xlat
adc
dec
fs
mov
mov
adc
mov
and
jmp
xor
xchg
and
addb
stos
pop
fdivl
sbb
sub
in
push
subps
pop
into
xchg
push
inc
aas
lea
mov
lret
rcr
jns
xlat
lahf
mov
and
idivb
rolb
ja
cld
lret
test
pop
shlb
pop
loop
cmp
fmull
mov
dec
xchg
fs
aaa
aam
out
stos
int3
add
mov
sbbb
stc
in
jns,pn
jb
out
test
in
xor
leave
icebp
test
das
cltd
mov
or
out
mov
push
lret
inc
pop
mov
in
sahf
cltd
adc
and
add
mov
xchg
sbb
push
lods
aad
cmpsl
pop
cld
jne
sbb
push
fadds
in
jb
orb
and
loope
mov
add
xchg
push
adcl
and
fdivl
mov
jl
das
dec
lock
outsl
jmp
out
lret
adc
stos
dec
xchg
pop
adc
add
add
arpl
fistpl
push
push
fbstp
shlb
adc
pop
xor
adc
lret
mov
add
mov
xor
addl
push
adc
inc
adc
inc
xor
xor
lock
push
mov
add
ret
jmp
ljmp
cmc
aam
jns
jge
fs
adc
sbb
jp
mov
add
push
test
xor
enter
adc
sbb
jns
loope
nop
sbb
pop
sub
fisubs
fnstenv
das
nop
mov
outsb
aad
jno
in
dec
add
adc
cmp
inc
pop
cmp
mov
add
insb
out
or
rclb
inc
fimuls
ret
mov
mov
int3
xor
outsb
push
ds
push
in
jp
add
insb
cmp
test
xchg
or
mov
push
bound
dec
popf
es
add
or
cwtl
jae
and
nop
push
fbld
add
and
gs
mov
or
in
mov
daa
cmp
mov
fstpl
xlat
xchg
inc
pop
xor
leave
pop
sub
ds
gs
std
inc
fists
jp
int
or
or
cmc
faddl
jae
je
imul
xchg
mov
sysret
jno
xchg
add
ret
and
sbb
mov
scas
addb
stos
in
scas
dec
mov
inc
xchg
loop
mov
mov
push
inc
das
popf
sub
stc
or
test
imul
push
pavgw
or
jnp
out
push
mov
fimuls
pusha
inc
sbb
mov
cld
outsb
lods
and
shrl
inc
dec
dec
cli
dec
xchg
mov
adc
pushf
sub
imul
pop
add
imul
arpl
mov
xchg
pop
adc
arpl
or
repz
adc
in
jb
fs
call
repz
jmp
iret
sub
inc
stc
fdivs
pop
xchg
adc
lcall
xor
pop
jne
mov
mov
int3
imul
in
adc
pop
mov
xor
or
xlat
push
in
movsl
cmp
stos
loop
sub
xchg
adc
lret
aad
mov
pop
test
nop
push
nop
sti
pusha
add
je
xchg
sub
pop
sbb
inc
movsl
fdivrs
cmp
int3
imul
int
dec
dec
add
fcoml
les
mov
addr16
test
inc
jb
mov
sahf
dec
push
div
sub
enter
or
fstpt
data16
push
ret
pop
mov
pop
push
negl
cwtl
pop
xchg
leave
adc
jbe
arpl
push
mov
xchg
xor
sub
dec
mov
xlat
adc
leave
gs
pop
mov
jns
mov
jp
and
in
mov
mov
cs
dec
xor
jb
mov
daa
out
loopne
mov
add
fisttps
add
cmpsl
lret
cmc
daa
or
and
sub
int
sbb
pop
push
out
sub
cmp
dec
xor
scas
dec
adc
repz
ljmp
cmp
mov
repz
xor
ret
leave
mov
or
cli
push
jge
or
mov
andl
aas
push
inc
enter
out
lods
push
pop
dec
push
cmp
je
fisubrl
cmp
call
push
inc
mov
das
jbe
rclb
dec
das
clc
in
cmp
mov
mov
mov
test
push
mov
pop
add
rcrb
xor
sub
inc
fistpl
outsb
icebp
je
fmuls
shlb
or
dec
popl
push
shr
mov
inc
xchg
or
loopne
cmp
push
inc
push
mov
add
push
pushf
push
jp
ror
pop
inc
cmc
jle
dec
sbbl
lock
insb
or
rcll
test
fcoml
jmp
mov
dec
lahf
fwait
bswap
out
loope
jmp
decb
xchg
jae
sahf
popa
fcoml
jmp
clc
adc
sbb
xor
sbb
mov
dec
negl
dec
push
mov
hlt
ja
out
xor
sub
div
out
sbb
xchg
pushf
jg
add
arpl
jae
clc
in
inc
pop
mov
lcall
mov
mov
mov
aad
jo
adc
jbe
dec
test
jmp
insl
les
pusha
sub
sbb
adc
mov
add
popf
bound
and
and
pop
xchg
adc
aaa
aaa
mov
jmp
cltd
push
or
loop
notl
push
jae
dec
pop
inc
xlat
jo
ljmp
mov
fimuls
jno
cmpsb
sub
and
out
xor
ret
jbe
jae
pop
push
in
adc
adc
mov
in
pusha
popf
push
cmp
jp
cmpsb
mov
pusha
xor
inc
dec
xchg
mov
scas
sub
test
inc
lret
lock
gs
sbb
nop
loopne
aam
jmp
mov
add
mov
xchg
jb
out
sub
mov
int
ficoms
addb
mov
jne
add
cmp
xor
repnz
and
imul
loop
icebp
ds
rcr
lcall
mov
sahf
dec
sbb
ljmp
pop
sub
mov
and
sbb
mov
and
or
push
loopne
repz
aad
sbb
xchg
mov
xor
and
adcb
jno
lods
xor
dec
xor
xor
lcall
jbe
loope
mov
adc
xchg
jb
cmp
and
xchg
inc
push
xchg
ret
imull
ret
mov
and
inc
fcomps
lods
clc
inc
pop
or
test
scas
repz
dec
sti
int
roll
fmulp
mov
mov
mov
add
lcall
bnd
inc
sub
sub
xor
cwtl
sbb
jbe
icebp
and
jae
call
insb
cmpsb
in
into
jns
push
fstpt
add
dec
ret
mov
mov
out
jmp
pusha
xor
push
in
jp
shlb
xor
xor
fiaddl
sbb
jns
add
aam
scas
repnz
ja
in
bound
mov
imul
popf
repnz
xchg
sub
xor
jecxz
js
and
fldt
mov
push
sub
pop
sub
imul
xchg
sbb
and
es
je
subl
jle
and
mov
inc
scas
dec
imul
ret
and
pop
and
repz
and
push
out
mov
sub
inc
cld
sub
pop
popa
and
ret
movsb
cmc
fdivrl
int
dec
stc
cmp
fldl
fmull
aas
push
mov
pushf
imul
pop
inc
enter
dec
decb
dec
sbb
and
pop
add
fistpll
push
adc
cltd
pop
std
push
les
dec
jmp
mov
cmp
scas
cmp
or
mov
cltd
and
divb
mov
adc
dec
bound
push
xchg
jmp
out
subl
pusha
filds
imul
testb
mov
das
test
cmpsl
test
dec
mov
ljmp
mov
mov
test
cmp
in
sti
js
fs
ja
lock
into
push
mov
rolb
data16
and
fisttpll
test
push
mov
xchg
push
in
imul
push
lea
xor
sub
add
xchg
lds
repnz
push
cld
jae
push
popf
adc
movsb
cmpsl
sbb
add
movsb
xchg
jle
jmp
pcmpgtb
lahf
add
adc
lds
push
imul
mov
sub
sbb
icebp
leave
aam
xorb
cmp
dec
sti
or
lods
add
test
gs
mov
push
mov
mov
hlt
in
rclb
add
aas
pop
lcall
push
lods
xchg
push
imul
lcall
scas
sbb
push
jo
lods
pop
cld
nop
cmpsb
xchg
mov
aaa
testb
dec
adc
mov
out
push
cmp
adc
mov
outsl
shlb
jge
mov
xor
mov
pop
ja
outsb
mov
mov
int
push
iret
mov
xor
jae
push
movsl
repnz
or
adc
xchg
mov
adc
xchg
sub
xchg
jnp
sbb
test
push
push
sub
mov
jb
cmp
movsl
fnstcw
pop
dec
cwtl
lret
push
push
jge
and
arpl
bound
pop
or
lods
push
jl
pop
sbb
enter
adc
add
sahf
mov
push
les
sbb
or
push
hlt
addb
pop
rol
dec
imul
and
or
shrb
push
stc
adc
sbb
mov
mov
inc
ss
xchg
idiv
nop
sub
dec
or
jecxz
or
add
test
fcomip
lds
dec
fiaddl
mov
out
lret
xor
cli
sub
xor
outsl
jno
shll
iret
xor
push
or
sahf
mov
cld
insl
out
gs
push
push
adc
les
cmp
fistpll
cmpsl
xchg
es
leave
mov
mov
out
jmp
mov
cmc
sbb
jmp
sbb
xchg
cwtl
mov
or
repz
pop
or
adc
push
movl
dec
pop
pusha
stc
dec
sub
andb
cmp
out
mov
mul
shlb
clc
mov
push
inc
addr16
bound
js
stos
movb
je
xor
stos
shrl
pop
sbb
adc
inc
and
fwait
xchg
jb
mov
addb
scas
jae
xchg
cmc
xchg
push
cmp
mov
sub
popf
or
or
je
arpl
adc
push
hlt
xchg
mov
xchg
roll
jns
aad
mov
in
jae
mov
mov
jle
push
repz
sahf
jmp
jnp
or
add
inc
mov
lcall
arpl
jmp
fildl
mov
xchg
pop
mov
lods
jbe
add
out
ljmp
jae
mov
nop
sbb
xchg
xchg
mov
xchg
lret
cmp
lea
dec
lods
insl
mov
add
cmc
testl
push
and
jp
cmpsl
cmpsl
cwtl
sub
or
cmp
sbb
mov
push
inc
decl
add
lahf
out
xor
stc
sahf
or
fmulp
xor
adc
mov
int3
add
leave
mov
in
test
mov
inc
rcrb
cmpsl
insb
pop
jnp
cmp
add
negl
jbe
jno
in
ret
cmc
lret
sbb
push
lret
sub
xchg
mov
push
iret
lret
loop
sbb
pop
lods
cwtl
inc
push
nop
shl
fcmovnbe
arpl
xchg
lds
stc
int
inc
push
and
jg
mov
pop
repnz
push
mov
mov
jo
in
test
dec
and
pop
pop
inc
aas
jp
mov
add
outsb
stos
xchg
sub
and
mov
sahf
test
pop
pop
lcall
sarl
sbb
fnsave
inc
dec
mov
add
or
lods
loop
jecxz
iret
mov
adc
sbbl
mov
pop
sub
lea
mov
dec
cmp
fisubs
iret
dec
or
inc
imul
xor
mov
gs
or
adc
outsl
sbb
subb
mov
adc
cmp
mov
push
sahf
movsl
push
add
jb
jecxz
cmp
fistl
iret
pusha
in
cs
leave
sub
fcmovu
notb
push
jnp
stc
or
ret
inc
loope
shlb
daa
inc
push
pushf
sub
test
pop
jnp
fnsave
jmp
mov
xchg
hlt
jecxz
mov
dec
scas
mov
or
push
mov
cmp
sub
add
ret
jp
xorb
sbb
mov
or
pop
lret
sbb
iret
mov
ljmp
xchg
xor
mov
cmp
xchg
xchg
xchg
fldcw
dec
push
es
push
jp
es
arpl
cli
xor
repnz
das
add
or
lret
subl
dec
adc
cld
or
out
add
je
pop
daa
cltd
sub
sub
subl
mov
fwait
into
sub
ficoms
pop
xor
adc
sub
popf
add
pop
sub
cmc
ficompl
sub
push
clc
getsec
sub
es
jge
test
push
icebp
add
lret
cmp
std
push
mov
das
ret
mov
inc
ja
add
daa
sbb
inc
ret
shlb
pop
cli
and
arpl
nop
hlt
push
and
cmp
mov
les
cmp
aad
scas
cmp
xor
ret
lahf
lock
push
or
push
mov
push
sbbl
into
and
mov
fdivrl
inc
out
mov
add
pop
pop
adc
jb
aas
dec
or
sub
fs
fisubs
lret
cmp
or
lock
sbb
imul
add
aaa
andl
lds
cmpsl
inc
std
xchg
aam
dec
cwtl
or
and
repz
xor
test
pusha
mov
push
mov
cmp
popf
mov
inc
into
xchg
fbstp
jae
dec
push
fisubrl
mov
cwtl
sub
push
pop
mov
fiadds
sub
imul
rcrl
xchg
mov
push
sub
and
mov
jmp
scas
out
jmp
mov
int3
xor
push
cwtl
xrelease
cmp
mov
or
in
lret
jno
scas
sbb
or
adc
ds
data16
fprem1
xlat
and
inc
push
and
cli
imul
dec
mov
xlat
mov
sub
dec
ret
icebp
ss
or
mov
mov
and
mov
data16
mov
cmp
stos
fmull
insb
lret
pop
jo
push
sub
dec
or
pusha
mov
jo
loopne
and
or
imul
mov
call
add
sub
cld
in
xor
inc
xchg
subl
pusha
adc
jnp
sets
mov
dec
push
fs
nop
and
pushaw
cmpsb
sub
mov
pusha
js
jnp
negb
xchg
pop
hlt
mov
jge
cmp
cmp
cmpsb
add
xchg
pop
mov
hlt
sub
push
ret
fbld
dec
daa
dec
push
pop
loopne
jle
cmp
ds
or
mov
fwait
xor
icebp
inc
scas
jnp
xor
outsl
and
sub
pop
mov
dec
or
xchg
xchg
sbb
adc
xchg
adc
pop
repnz
gs
ss
adc
mov
or
cmp
les
jle
loope
mov
enter
mov
sub
jle
sub
add
inc
xor
push
inc
xor
inc
sub
cmp
mov
data16
outsb
mov
subb
in
fldcw
pop
xorb
hlt
xchg
xchg
mov
outsl
pusha
ret
popf
bound
das
aam
jle
pushf
push
mov
mov
jno
or
inc
gs
sbb
and
ljmp
aas
shll
mov
lds
daa
aad
xchg
adcl
dec
and
rorl
fildl
es
test
lock
cmp
mov
cli
push
cmc
dec
loope
cmp
repnz
jmp
xchg
or
icebp
loopne
aam
xchg
addr16
into
cmpb
or
push
stos
xor
add
mov
add
sti
cmp
adc
call
mov
stc
cwtl
cmpsb
jae
mov
push
push
xchg
sub
enter
adc
fcomps
jl
test
mov
andb
push
das
inc
add
xchg
fwait
adcl
fld
pop
push
test
loopne
xor
sbb
xor
and
fists
cmp
stc
push
hlt
popf
mov
mov
lods
xchg
out
enter
popa
add
mov
xor
test
das
xchg
imul
aad
subl
mov
sub
jl
xor
jp
xchg
out
sbb
enter
cltd
repnz
jbe
push
int
jmp
in
xor
adc
pusha
into
push
enter
fcmovbe
jb
pop
mov
or
dec
mov
and
test
mov
push
call
fidivl
jmp
fwait
rorb
xlat
sti
mov
push
mov
jne
dec
shlb
push
sahf
in
add
insl
ret
aaa
inc
dec
iret
loope
shll
mov
out
lret
enter
jbe
inc
sub
sbbb
mov
sub
dec
mov
iret
adc
outsl
xchg
and
xchg
das
fsts
int3
int
mov
or
fmull
pop
push
sbbl
mov
lret
or
mov
cmp
dec
fdivrs
cmpsb
cmc
push
jo
test
add
popf
out
mov
mov
int3
cmp
fildll
cmp
pop
outsl
xlat
imul
js
dec
inc
mov
das
add
or
in
add
movsb
stos
sub
add
aaa
clc
add
or
jl
xchg
xor
xor
push
aad
cltd
push
call
xor
cmp
mov
mov
adc
inc
push
arpl
jg
nop
push
fs
mov
push
das
xchg
mov
mov
mov
jb
jle
mov
out
xchg
push
push
scas
lods
mov
lea
push
sub
neg
jb
xchg
stc
inc
ja
and
sar
aas
ret
out
mov
je
adc
popa
xchg
mov
dec
inc
cmp
popa
out
sub
pop
jno
in
cwtl
pop
insb
mov
mov
xchg
pop
ljmp
je
in
dec
mov
push
or
adc
push
mov
ds
fistpll
insl
sub
fldenv
out
mov
in
idivl
mov
push
dec
inc
push
lcall
push
pop
test
add
xor
cmpsb
cli
mov
fists
add
sbbl
cmc
pop
lea
adc
inc
scas
jb
iret
ror
pop
ret
out
stos
add
out
cli
pusha
test
add
cmpsl
cmp
mov
push
jecxz
daa
mov
incb
pop
adc
push
aas
pavgb
pop
pop
ja
out
push
jb
scas
and
imul
aad
movsb
dec
mov
dec
xor
mov
in
jp
or
sahf
mov
inc
xchg
push
fs
or
push
xchg
dec
divl
and
add
or
push
scas
xor
lods
mov
push
call
xchg
add
rorl
mov
push
mov
inc
dec
jge
imul
jg
sub
sub
pop
inc
pop
lock
gs
and
mov
stos
lds
loope
jp
les
decb
inc
pop
mov
or
ljmp
dec
ja
lea
sbb
movsb
inc
jge
push
mov
dec
or
cmp
mov
jl
sti
jne
adc
push
cli
push
jno
movsb
push
add
out
xor
loop
jmp
sbb
and
ret
ljmp
aas
xor
dec
out
insb
das
jnp
dec
add
dec
fidivrs
addr16
fmull
dec
in
sub
mov
inc
scas
mov
fwait
mov
ljmp
adc
mov
mov
es
mov
in
aad
dec
hlt
je
jge
and
mov
push
outsb
add
imul
repz
jne
in
sbb
cli
dec
inc
fidivrl
sti
mov
inc
lods
mov
cmp
adc
add
adc
xchg
scas
push
mov
push
iret
sub
sbb
push
push
cmp
jae
gs
dec
subb
mov
imulb
jbe
xchg
jp
fstenv
or
stc
cmc
mov
cmp
mov
dec
mov
or
cli
leave
or
xor
scas
mov
stc
cmp
repnz
xor
pop
dec
pushf
lahf
jg
fwait
lods
mov
add
int
jnp
adc
push
repz
push
mov
insb
pop
adc
xor
push
mov
scas
mov
popa
xchg
movsb
adc
js
es
popa
inc
mov
adc
jb
enter
inc
int
cmpsl
mov
push
adc
sarb
jle
xor
imul
inc
cmp
aam
mov
push
out
loopne
mov
js
cmpb
dec
lds
pop
push
popa
pop
je
sub
out
lock
in
les
adc
cmp
dec
or
sub
mov
or
es
je
movsb
sbb
fidivs
fcmove
mov
decl
add
pop
jno
fisttps
mov
int
or
popa
xchg
cli
xor
mov
inc
lea
add
and
push
andl
lret
pop
xchg
mov
add
leave
mov
cmp
subl
jno
cwtl
sub
pushf
add
mov
aas
sbb
adc
repz
xchg
arpl
adc
mov
sbb
sbb
push
leave
add
jl
scas
stc
and
into
nop
push
fmull
bound
mov
hlt
and
sub
icebp
pop
std
aad
push
inc
stc
cmp
ret
fnstsw
pop
add
add
push
adc
add
add
movsb
pusha
mov
cmc
scas
pop
test
lock
sbb
movsl
xor
cmpl
adc
mov
pop
or
cmp
xchg
scas
mov
mov
es
or
and
in
ss
mov
mov
adc
xchg
shl
dec
int3
ss
int
popa
pop
fcomps
repz
mov
jno
pop
sbb
arpl
push
cmp
cmc
insb
ror
jp
xchg
gs
dec
fs
out
mov
imul
lcall
sahf
popa
xchg
fs
cmpsb
add
rcrl
mov
ja
outsl
sbb
xchg
adc
sub
inc
sub
push
mov
lods
push
outsb
fcomps
or
mov
leave
push
add
fildl
xchg
cmp
sub
inc
cmp
mov
std
in
and
pop
add
cwtl
push
in
jno
pop
pop
inc
cwtl
js
repz
jmp
adc
iret
sub
mov
or
aaa
les
dec
sbb
cmc
call
sbbl
out
sub
xlat
sub
mov
addr16
clc
adc
mov
xchg
fsubl
xchg
fidivrl
shrl
push
aaa
test
inc
pop
cmc
leave
mov
or
sub
insb
in
mov
push
sub
clc
lret
xor
cmpsl
push
fbstp
mov
test
je
mov
lcall
push
mov
lods
and
mov
dec
or
in
xchg
xor
into
add
test
mov
aam
test
lret
shl
hlt
mov
lret
xchg
mov
stos
push
cwtl
fcmovne
adc
lods
test
nop
comiss
jmp
lock
mov
cmpsl
hlt
xchg
in
pop
push
push
cli
fs
aaa
add
dec
fiaddl
ret
add
stc
fcom
mov
adc
and
adc
push
mov
jns
dec
mov
lret
sub
lahf
popl
push
sbb
or
and
int3
out
mov
jl
shl
cmpsb
movsb
arpl
loop
push
xchg
leave
aam
or
addb
sbb
subb
mov
cmp
mov
fs
cmpsl
mov
ja
fstps
or
dec
mov
push
nop
idivb
dec
and
mov
cmp
pop
fcmovne
mov
cwtl
sbb
push
test
mov
js
insl
into
out
adc
mov
cli
or
push
and
inc
jmp
out
push
add
xchg
mov
imul
ret
lcall
mov
sbb
inc
sbb
jbe
mov
lock
rorb
cli
sub
cwtl
adc
xchg
enter
rcll
adc
sub
jne
lret
add
mov
icebp
cli
jl
pop
pushf
xchg
sbb
imul
lea
std
or
mov
inc
xor
mov
mov
fcoml
je
and
jecxz
repnz
mov
aam
call
add
test
push
ret
stos
cwtl
cltd
inc
data16
shlb
jmp
pop
xchg
fimuls
add
imul
in
cmpl
ret
xor
jno
imul
in
jne
ret
loop
cmpsb
push
cwtl
fisubl
test
cmp
mov
xchg
dec
xor
jno,pt
mov
sarb
scas
mov
mov
or
jg
mov
jmp
xchg
in
lock
mov
mov
push
xchg
mov
pop
push
adc
je
out
cs
adcb
in
xchg
jb
stc
push
clc
mov
push
lahf
in
sbb
push
aam
sbb
xchg
and
ror
cmpsl
xorb
mov
dec
lock
push
ja
mov
mov
inc
ja
lret
mov
or
fldl
shl
xchg
push
fstpt
cltd
jg
les
dec
imul
mov
bound
arpl
bound
je
dec
shlb
popf
movsb
subb
in
xchg
fwait
jnp
adc
add
notl
jo
negl
dec
lods
popa
sahf
mov
jne
incl
hlt
into
hlt
call
mov
jmp
pop
dec
in
rorb
pop
mov
mov
cmp
addr16
je
xor
xchg
pop
out
jb
in
fstpt
clc
movsl
push
les
or
ds
push
cmp
adc
push
fnstcw
xor
lret
push
loopne
outsl
cld
pop
jae
fs
mov
ja
pminub
lahf
mov
mov
or
loope
sarl
repz
and
mov
xchg
sbb
call
xor
mov
xchg
mov
mov
ret
push
push
scas
adc
in
inc
pop
and
xor
jg
cmp
mov
ret
cmp
xchg
shll
xchg
mov
push
shlb
mov
lret
adc
fwait
imul
leave
ja
iret
xchg
mov
jecxz
or
adc
outsb
aad
jg
jle
jne
mov
fistl
sbb
inc
sub
or
fimuls
xor
inc
in
sbb
or
lahf
mov
mov
sbb
mov
mov
test
push
xchg
cmp
mov
push
insb
nop
addb
lock
and
aam
cmp
lods
cs
mov
shl
mov
cwtl
xor
xorb
sahf
scas
lods
jnp
cmpsl
add
js
sbb
das
out
mov
ds
int
cwtl
std
fiaddl
push
mov
inc
mov
in
loope
xchg
cmpsl
popf
jae
push
lock
adc
inc
or
scas
insb
lea
and
mov
add
mov
xchg
push
jae
push
test
fcoml
rcll
dec
jno
idivb
jbe
stc
xchg
lahf
les
xor
add
leave
pop
outsl
push
jne
cmp
sahf
es
je
ret
dec
jno
jbe
test
xor
xor
cmp
fnstenv
or
cmpsb
jmp
adc
mov
jmp
mov
in
jnp
pop
jo
xlat
cs
xchg
repnz
push
jle
lods
shlb
popa
outsl
mov
das
xchg
dec
xchg
mov
aad
adc
lahf
jg
jle
push
insb
sbb
cmp
add
stc
mov
lods
jne
sbb
fwait
notl
sub
cmpsl
xchg
sub
nop
mov
xchg
push
loopne
les
fimuls
mov
mov
fucomi
mov
ds
push
and
dec
popf
rclb
push
sahf
add
sbb
lods
imul
inc
out
incb
push
daa
dec
fs
out
jno
out
aad
mov
and
sahf
xor
lret
cmp
dec
dec
fsubrl
outsb
out
or
lcall
sbb
jecxz
xor
aam
sti
das
mov
inc
add
rclb
lret
sarl
fstps
sarl
sbb
andl
popf
sbb
sub
cmp
mov
mov
int
mov
sbb
mov
sbb
lcall
dec
nop
inc
xor
les
negl
daa
push
push
pop
cmpb
push
fsqrt
test
push
bound
pop
je
lock
mov
imul
mov
jo
cli
icebp
mov
repz
jg
mov
xlat
dec
xor
dec
push
lock
adc
xlat
and
loope
cmp
es
inc
stos
mov
scas
loopne
mov
fdivs
into
mov
cli
lret
ja
mov
jge
insb
inc
cwtl
shr
out
xor
sar
int
or
pop
jg
mov
mov
jmp
arpl
call
add
add
pop
fsubs
add
stc
add
dec
arpl
pushf
sti
push
add
aas
js
hlt
push
push
cs
cmp
xchg
loope
lods
sarb
xor
testl
repz
jmp
stos
adc
push
fdivrs
mov
dec
xor
imul
es
mov
ret
pop
sarb
cmp
scas
icebp
fldenv
iret
scas
inc
ret
cmc
andb
hlt
js
or
mov
mov
cmc
ss
pop
and
mov
inc
push
fldt
push
movb
adc
pop
pop
iret
ret
cmp
filds
jmp
fwait
cmp
or
xchg
sbbl
add
shl
in
add
icebp
cmp
adc
jns
scas
lds
sbb
cs
push
lahf
add
sbb
mov
fsubrp
add
or
add
pop
clc
in
leave
pop
push
jnp
push
test
nop
push
push
lahf
mov
call
mov
lds
xchg
stc
mov
mov
xchg
pop
bound
repnz
ficoml
add
insb
inc
insl
es
sbbb
aam
mov
cltd
iret
dec
imul
rcll
stos
test
inc
rcrl
test
addr16
or
xchg
or
sbb
sbb
movsb
lret
xor
xor
mov
mov
aad
hlt
inc
sub
jnp
push
sub
mov
and
cli
cmp
rcl
jnp
rclb
cmc
mov
pusha
push
aam
sbb
inc
pop
sbb
adc
adc
xchg
cmp
cmp
fmull
test
rol
int
test
mov
scas
aaa
aam
fstpl
shrd
fisubrs
scas
mov
mov
stos
adc
xchg
and
aaa
fimuls
jo
jnp
dec
orb
mov
aaa
push
xchg
fildll
sub
icebp
imul
mov
sub
jecxz
ds
lret
fs
aam
cmpl
and
arpl
je
adc
adc
mov
push
clc
dec
adc
mov
xchg
jbe
mov
sti
jae
iret
push
sub
rcll
scas
cld
fs
mov
adc
sar
mov
mov
ret
xchg
mov
push
and
jnp
jnp
or
fwait
and
orb
mov
or
test
scas
xor
mov
je
inc
dec
xchg
mov
pop
mov
mov
pop
mov
fmuls
dec
inc
xchg
imul
xor
shlb
xchg
stos
mov
mov
adc
or
jae
dec
out
add
testl
shlb
pop
mov
sahf
jecxz
jecxz
xchg
cmpsl
lods
xor
push
sbb
cwtl
in
xor
test
or
jmp
push
lods
sbb
sahf
repnz
mov
sbb
sbb
shl
xor
cmp
adc
shlb
xchg
cmpsb
mov
pushw
imul
cmp
popf
arpl
sbb
adc
sbb
scas
rol
int3
sbb
iret
jbe
or
sbb
or
clc
cwtl
outsb
sub
and
inc
cltd
mov
sub
add
fsubr
aaa
flds
and
pop
jle
mov
inc
and
inc
jbe
jnp
jb
in
rcl
loopne
call
xchg
shrb
in
ja
sub
mov
inc
int
push
sbb
inc
inc
outsb
in
dec
inc
lods
mov
and
rolb
dec
dec
cmp
int
repz
mov
push
inc
cltd
push
xchg
out
dec
icebp
push
ret
or
push
inc
adc
adcb
jns
enter
shrb
es
jno
out
subl
inc
lret
call
movsb
adcl
das
icebp
cmp
into
cltd
inc
iret
push
cmp
repz
lret
addr16
sahf
mov
mov
sbb
loop
aaa
movsl
test
fdivs
dec
adc
lcall
out
jne
jp
gs
cld
mov
add
test
mov
scas
fdiv
mov
adc
inc
mov
xchg
cmpsb
test
inc
lahf
aad
adc
xchg
xor
jb
imul
jb
adc
shll
test
mov
push
xor
stc
das
jp
stos
lea
popf
orl
xor
dec
mov
loopne
js
xor
mov
scas
push
sti
dec
xchg
fpatan
xchg
push
ja
nop
jnp
ret
lods
arpl
lahf
inc
jg
dec
mov
jge
fwait
lret
mov
and
movsb
movsb
fsts
fmuls
pop
sahf
mov
adc
mov
fdivp
fisubs
sub
int
mov
movsl
not
xchg
adc
out
ficoml
xchg
divl
xor
fstpt
inc
movsl
mov
mov
sarb
movsl
mov
ret
dec
out
sahf
scas
es
roll
pop
push
pop
adc
inc
in
inc
sub
in
jp
insb
cwtl
pop
mov
and
push
imul
xchg
add
adc
and
mov
clc
mov
addl
rcrb
push
sbb
xchg
push
not
pop
xchg
fmull
mov
in
rorl
push
inc
sbb
jne
xchg
fstpl
sub
dec
push
fidivrs
cmpsb
aas
push
inc
xlat
popf
sub
jg
stos
dec
pop
lcall
imull
sub
xchg
inc
sbb
xchg
dec
fdivl
stos
inc
jl
pop
test
push
jp
pushl
repz
jle
sarl
stc
cmp
mov
xor
pop
mov
mov
dec
shrl
jp
mov
lret
or
push
xchg
mov
mov
cmc
adc
sahf
mov
inc
add
popf
cld
inc
mov
jp
std
mov
xchg
lcall
adc
dec
out
xor
ret
stos
push
mov
into
out
les
sbb
data16
add
adc
jg
or
inc
mov
rorl
cld
jae
mov
mov
mov
rclb
inc
mov
add
adc
push
fsubs
cmp
push
out
subl
pop
mov
in
sub
xchg
sbb
push
jge
dec
mov
push
dec
xchg
dec
in
push
lock
sbb
pusha
out
repz
mov
mov
shll
xor
hlt
push
jno
jg
mov
bnd
out
outsl
xchg
mov
inc
mov
shl
or
or
clc
jo
push
pop
ljmp
in
lahf
scas
insl
jecxz
dec
mov
loop
daa
pop
shll
dec
and
inc
sbb
inc
mov
inc
jbe
rcrb
popa
and
lods
sti
jl
jb
movsb
daa
pop
mov
cs
mov
jl
enter
pop
and
por
xor
lahf
popa
str
fldt
sbb
lods
popa
jns
jle
repz
daa
incl
mov
mov
inc
in
outsb
dec
repz
xor
xor
mov
jecxz
push
lods
push
xor
cmpsl
mov
loop
imul
sbb
fisubl
cmp
cmp
in
cmp
insb
aad
xchg
and
xchg
loope
test
fldcw
nop
fisubrs
movsl
inc
lcall
clc
inc
out
and
push
mov
imull
push
imul
gs
in
sbb
sbb
lods
dec
push
nop
rolb
cmp
std
ja
or
jl
mov
pop
dec
xchg
out
addb
xchg
xchg
mov
pop
fisttpl
mov
and
enter
sbb
mov
js
push
notb
in
mov
jecxz
lret
adc
sti
rcr
lahf
push
xor
int3
jg
inc
cmp
pop
push
jp
xor
add
loopne
ficoml
push
movsl
mov
shrb
pop
xor
cmp
adc
loope
or
dec
or
sqrtps
push
inc
and
mov
add
pop
clc
adc
mov
scas
cmp
shrb
lods
inc
jns
mov
mov
adc
icebp
push
xchg
stc
aas
jns
scas
sarb
mov
mov
aas
mov
bound
jnp
add
push
adc
lret
dec
sub
repnz
je
xlat
mov
test
mov
mov
sbb
pop
ds
push
dec
mov
mov
pop
xchg
dec
test
loopne
add
in
jmp
cs
cmp
fsubr
lods
mov
mov
inc
jp
sti
dec
push
dec
repz
jle
inc
lret
jmp
out
repnz
jmp
mov
cmpsl
aaa
pop
cltd
ljmp
mov
mov
shr
sahf
outsb
adc
ret
push
mov
ret
pop
jns
sar
fnstsw
jl
xchg
outsl
lock
scas
outsl
push
lods
cli
sbb
es
inc
fcom
out
movl
and
xor
pop
int3
jnp
ja
add
lock
pushf
fildll
scas
aam
js
scas
mov
push
cmpsl
loope
mov
push
lods
sahf
imul
scas
mov
jmp
lahf
mov
push
rorb
adc
push
xlat
rcrl
test
or
pop
mov
pop
repz
imul
and
xor
stos
rcrl
sar
xchg
or
mov
loope
cltd
xor
loopne
push
push
jno
in
pop
xchg
pop
jecxz
leave
mov
push
lds
dec
push
push
mov
nop
adc
xor
mov
int
lahf
xor
sbb
aad
jb
lods
pop
jecxz
test
pop
or
ja
lods
rcrb
stos
pop
aaa
sub
aam
pop
dec
and
fs
push
jp
lock
scas
cltd
fyl2x
aas
arpl
jp
lods
pop
lahf
mov
cli
jno
loope
jnp
inc
pop
pop
xchg
inc
ljmp
xchg
push
inc
adc
pusha
pop
sub
repnz
rcll
nop
cmp
pop
push
adc
sub
outsb
jmp
gs
mov
add
aaa
ljmp
sbb
or
je
or
out
test
fcoms
sub
mov
adc
dec
jbe
repz
scas
gs
sti
jmp
xlat
lods
repz
dec
adc
xchg
add
sbb
and
cmpsl
das
les
xor
or
sbb
fdivrl
inc
add
int
ljmp
jne
imull
xchg
sbb
ret
loope
sub
xchg
cmc
sbb
xor
add
push
std
mov
add
outsl
push
jmp
dec
dec
jge
rcrb
popf
xchg
pusha
or
pop
xchg
fdivp
jge
cli
cwtl
jo
push
into
inc
adc
mov
dec
cld
fldl
pop
mov
and
movb
mov
fidivrl
pop
stos
fsubl
push
sbb
in
dec
xchg
push
jne
stos
inc
mov
jg
inc
push
cmp
int
andl
pop
dec
cs
fadd
arpl
cmc
sub
je
int
es
lods
in
xor
inc
aas
xchg
jbe
rol
pop
sar
jne
push
idivb
ret
ss
cwtl
cld
mov
jmp
test
jl
sub
testb
add
add
xlat
insl
sbbl
dec
cltd
jo
popa
adc
mov
cmp
add
pop
movsb
inc
ljmp
daa
out
in
shll
sbb
and
pop
push
mov
sub
hlt
dec
mov
test
inc
repnz
push
sbb
ljmp
jge
repnz
sub
outsl
ret
ds
pop
xor
jns
int3
inc
inc
testb
sub
pushf
lret
ja
fstpl
iret
mov
repz
mov
dec
add
fdivs
stc
mov
pop
cltd
push
idiv
inc
mov
push
daa
icebp
test
jo
cmp
inc
jmp
pop
andl
repz
push
or
aaa
mov
inc
and
inc
mov
or
out
fsts
xchg
dec
push
adcb
jo
int
lret
clc
and
mov
int3
sub
xlat
bswap
cmp
loop
into
in
test
push
roll
out
xor
pop
xchg
mov
and
inc
cs
jmp
insl
push
ret
add
cmpb
ret
inc
stos
jo
push
popa
fsubrs
test
ds
mov
push
mov
fidivl
xor
lret
sbb
pop
adc
sbb
fidivs
leave
arpl
jae
stos
mov
mov
dec
push
inc
sbb
push
pop
sub
gs
pop
pop
inc
aas
mov
xor
cltd
xchg
popf
orb
rclb
imul
xchg
insl
aam
stos
push
stos
fs
mov
xor
mov
andl
insl
push
shlb
into
adc
push
pop
mov
xor
xor
lock
lods
pop
and
insl
mov
or
jns
cli
mov
push
daa
int3
movl
daa
arpl
jnp
pop
aam
pop
mov
inc
clc
in
pop
mov
add
sub
test
mov
stc
jne
jbe
push
mov
xchg
xor
icebp
add
lods
popf
into
inc
imul
outsb
lock
or
and
jle
lods
mov
jno
fcoml
imul
int3
outsb
push
out
rclb
fsubrs
arpl
ret
psrlw
call
push
test
and
adc
aam
les
std
into
cltd
fmuls
pop
or
or
cwtl
push
daa
and
fistl
inc
fildl
cli
pusha
inc
aam
inc
leave
ljmp
cld
xor
pop
jae
mov
mov
call
pushf
xchg
outsb
jae
xchg
mov
pop
cmp
adc
cwtl
je
cs
lock
push
iret
inc
mov
dec
test
rcr
out
cmc
call
test
jp
inc
mov
shl
xchg
pushf
mov
dec
lods
call
jp
insb
ds
and
cld
inc
sahf
movsl
in
or
push
mov
dec
adc
out
stos
rcl
out
mov
mov
push
inc
jo
stos
jl
rcll
ss
cmpb
xchg
inc
fstps
and
call
xchg
gs
into
inc
mov
int
adc
out
shll
in
mov
sub
and
sub
add
outsl
adc
out
lods
int3
sbb
sbb
or
mov
push
pop
fidivs
push
jmp
jno
lahf
mov
insl
andl
or
or
movsb
cmc
sub
pusha
imul
leave
lcall
insb
add
lds
or
or
mov
jge
mov
mov
push
daa
pop
inc
xor
jne
pushf
in
pop
xchg
shl
pop
roll
and
jae
std
rcpps
or
dec
loopne
rorl
pop
or
bound
push
int3
fwait
mov
in
push
adc
xor
ret
aam
fwait
sub
mov
sub
push
in
dec
fwait
sbb
push
or
mov
lcall
xchg
jo
stc
cmp
push
mov
repz
dec
and
clc
lret
aaa
push
add
push
mov
fistps
icebp
lea
lret
sbb
popf
or
mov
fcoms
adc
sub
repz
adc
fbld
jl
sub
mov
jne
ss
cmc
pop
bound
xor
jmp
add
imul
xchg
into
icebp
push
lea
data16
mov
inc
ja
adc
inc
sub
cmpsb
in
incl
fadds
ret
hlt
std
mov
sbb
add
add
popf
fldenv
jle
mov
jnp
pop
mov
imul
leave
adc
insb
es
jno
in
sbbb
push
inc
fisubrl
adc
movb
sbb
xchg
sub
mov
roll
ret
cwtl
movsb
add
pushl
pop
add
mov
and
inc
jl
ljmp
mov
mov
adc
push
ljmp
dec
xchg
xlat
mov
inc
stos
mov
pop
pop
mov
pop
ror
mov
mov
jb
cmc
inc
jbe
int3
movsb
ljmp
lret
mov
pushf
pop
and
jecxz
jo
addr16
es
cli
sarb
inc
shlb
in
sbb
sahf
cmp
sbb
into
cmp
and
jne
or
cmp
cmc
mov
inc
rorb
cmc
cmpsl
mov
push
ret
lds
daa
mov
mov
or
pop
add
clc
movl
in
int3
jbe
dec
sahf
fwait
sti
jle
daa
bound
imul
and
idivl
sbb
fisttps
cmp
out
lcall
sti
push
jbe,pt
mov
in
imul
mov
add
xor
sub
sub
je
mov
dec
das
in
shll
das
add
mov
sbb
push
leave
roll
test
outsb
pop
insl
sbb
ja
inc
loop
stos
mov
sub
scas
insb
lahf
xchg
push
jg
incb
test
mov
fisubrl
decl
mov
int
mov
mul
xchg
sub
jp
pop
jecxz
fnstsw
adc
pop
push
jne
jp
cmp
mov
jbe
imul
jg
iret
rorb
jecxz
mov
decl
pop
adc
add
jbe
daa
inc
adc
jb,pn
and
int3
adc
jb
lahf
mov
es
test
ret
mov
sbb
mov
stc
in
pop
jg
pop
movsl
scas
mov
adc
add
xchg
add
lret
push
into
and
sbb
inc
or
cwtl
cmpsl
jle,pn
pop
fcoml
dec
int3
dec
shll
push
jns
dec
push
je
add
loop
mov
ret
mov
out
in
mov
sub
das
mov
std
pop
clc
jg
lods
xchg
stc
cmp
out
out
ret
mov
in
sub
ficompl
rol
mov
sub
mov
xor
jne
aas
test
shll
add
and
push
outsl
iret
jecxz
rorb
dec
jo
pop
aad
inc
sub
bound
cli
sub
mov
scas
int3
mov
int3
je
inc
test
les
fsin
andps
out
movb
out
into
in
jg
mov
insb
jp
pop
cld
pop
xchg
ljmp
ds
dec
es
xchg
adc
jnp
sbb
add
adc
inc
in
push
mov
iret
pop
and
xor
sub
push
mov
loop
lods
pop
fistpll
cltd
aam
ror
lock
xlat
pop
pop
mov
cmp
shrl
mov
cmp
int
add
shll
ja
movsb
sahf
dec
icebp
in
data16
lods
fiaddl
fs
shrl
mov
lods
inc
push
in
scas
push
xchg
adc
xor
scas
dec
movsb
cmp
push
sbb
sbb
mov
pop
jmp
dec
mov
lods
sub
loop
ret
dec
mov
neg
testl
mov
mov
test
push
push
sarb
out
sbb
lods
fiaddl
js
push
adc
add
test
xchg
inc
cmpsl
inc
into
ficomps
andl
and
int3
or
imul
and
imul
and
mov
xor
imul
outsb
out
push
mov
sbb
fnsave
sbb
loop
sub
pushf
add
jae
outsb
sub
lcall
pop
xor
mov
adc
mov
pop
aaa
mov
inc
add
xor
rcr
jl
aam
es
xchg
dec
sub
ja
loopne
and
imul
icebp
je
test
mov
xor
pop
call
ja
mov
add
fcoms
pop
imul
or
hlt
mov
mov
mov
push
jle
lods
push
jg
mov
cmpsb
pop
xor
daa
inc
call
xlat
add
or
pop
sbb
adc
aas
mov
aad
lret
mov
adc
sbb
es
and
push
or
xor
jg
cmpb
add
popf
rcrb
mov
pop
imul
xchg
or
jnp
add
mov
cld
ljmp
rolb
adcb
insb
lea
movsb
inc
int
sarb
cltd
andl
sub
std
rcrl
pushf
jge
fnstcw
outsl
out
ja
xchg
cwtl
inc
or
and
cmp
pop
jno
sbb
je
jg
mov
sbb
movsb
add
imul
xchg
packuswb
xor
mov
mov
fwait
into
jae
cmpsb
push
adc
js
mov
mov
sub
jle
mov
and
fucomp
mov
cli
invd
cmpsl
lret
sbb
jnp
stos
mov
mov
dec
add
and
lds
sarl
ror
fwait
xchg
mov
out
and
in
jle
ficoml
shl
mov
push
ret
movl
ljmp
pop
mov
mov
popa
push
mov
xor
push
leave
and
add
fsubl
push
dec
inc
cld
xor
leave
adc
pushf
mov
mov
ror
mull
scas
push
sbbl
jle
xchg
test
outsl
push
pusha
fs
imulb
jae
sub
inc
pop
stos
mov
dec
pop
xchg
jmp
hlt
push
xor
inc
ror
ss
inc
inc
loope
mov
and
pop
dec
jge
lds
push
sti
rcrl
sarb
mov
dec
outsl
sub
or
adc
fcomps
adc
jg
mov
sbb
sub
lock
cs
dec
inc
sbb
add
mov
inc
mov
ds
les
inc
jne
pushf
cmpsl
jno
iret
movsl
fidivrl
pop
les
lahf
fcomi
xchg
jnp
shlb
jle
cmp
testl
add
imul
jb
lods
add
mov
flds
add
push
mov
mov
jnp
adc
push
xlat
stc
jg
ja
add
sub
clc
fwait
pop
xlat
xor
dec
or
lea
rorl
dec
jae
pop
mov
int
out
jnp
inc
pop
test
negl
daa
dec
movsl
push
mov
bound
es
push
mov
mov
sbb
sti
adc
roll
daa
das
and
les
dec
lods
xor
adc
sub
mov
lret
mov
pushl
pop
dec
or
add
mov
addl
cwtl
pop
mov
stos
mov
mov
jnp
xchg
cbtw
and
cmpsl
lcall
stos
ljmp
sbb
mov
push
sbb
popa
mov
enter
repnz
cli
mov
nop
xor
sub
mov
addr16
loope
pop
push
insb
or
test
adc
or
pminub
adc
aas
dec
icebp
dec
mov
inc
test
push
mov
ljmp
pop
dec
and
enter
sub
shl
in
fimull
inc
jecxz
repnz
sub
push
jp
jnp
mov
lods
jl
add
inc
mov
ljmp
inc
leave
and
jge
xchg
and
mov
shld
dec
add
test
out
lahf
mov
inc
fcmovnbe
mov
xor
sub
mov
cmp
add
rcrl
add
or
inc
addr16
sub
ljmp
jecxz
push
pop
adc
mov
push
jmp
xchg
mov
xchg
sub
push
pop
mov
mov
jecxz
fdivrs
test
out
pop
add
sbb
arpl
out
sbb
add
repz
pusha
push
sbb
test
dec
mov
or
out
xlat
dec
mov
outsl
sbb
loopne
in
incb
mov
das
cmovs
push
neg
insl
inc
inc
xchg
xchg
mov
aas
cltd
pop
mov
fs
sti
mov
in
push
sub
ljmp
fidivrl
xchg
sbb
and
inc
out
xor
scas
xchg
mov
jnp
or
scas
jo
sub
pop
sbb
jnp
or
cmc
nop
out
jbe
sbb
sbb
incb
cwtl
sbb
or
jg
dec
inc
jbe
stos
cs
movsb
inc
loop
popa
cmp
subl
lods
push
in
adc
clc
push
aad
xor
jne
pop
mov
mov
enter
out
mov
add
das
pop
push
jns
jae
rolb
test
mov
imul
add
fmull
aam
push
cmp
test
mov
and
cmpsb
insl
movsl
mov
aam
daa
mov
push
cmp
push
adc
fisubrl
int
insb
icebp
xchg
cmp
pop
jne
mov
stos
in
test
jae
enter
cmp
leave
fimull
and
outsl
push
add
fnstcw
mov
xor
hlt
mov
out
loope
push
dec
cli
mov
xchg
icebp
pop
mov
adc
fwait
jmp
jns
clc
jl
push
addb
push
enter
dec
push
jmp
rorb
inc
fdivrp
call
int3
sbb
cmp
dec
xor
je
jl
mov
cmp
mov
jmp
addl
ss
jb
add
daa
in
sub
inc
add
popa
ss
cltd
cltd
int3
sti
push
std
imulb
lea
xor
push
jo
dec
sbb
cmp
lret
stos
lea
in
push
inc
out
pop
mov
ficoml
push
fisttpl
test
pusha
cmp
mov
pop
sub
sbb
xor
ret
sti
xchg
insl
pushf
out
pushf
sti
cld
sbb
mov
fidivl
add
jle
ss
imul
int
inc
and
aam
jae
push
and
mov
ss
sbb
fists
js
cltd
and
int3
negb
sbb
sbb
mov
adc
dec
pusha
xor
add
lret
outsb
pop
neg
movsl
fldenv
sub
inc
lds
shlb
sbb
mov
cli
movb
popf
popa
fsub
inc
jp
testb
xchg
test
jae
mov
dec
jns
loopne
loopne
test
aaa
mov
std
inc
mov
shl
push
in
sub
and
sub
jle
data16
xor
scas
popa
sub
in
dec
lcall
outsb
inc
je
popa
mov
dec
push
cltd
clc
jne
loope
push
loop
xchg
push
and
and
add
add
getsec
add
subb
scas
push
gs
test
push
pop
push
mov
rcll
repnz
wbinvd
push
cmpsl
into
inc
ds
insb
or
sbb
out
mov
sbbl
pop
iretw
mov
div
sbb
pop
dec
out
popf
scas
iret
jge
outsl
push
mov
and
shrb
or
xor
shrb
ds
push
stc
xlat
dec
xchg
int3
ljmp
sbb
push
loopne
dec
nop
lods
pop
jno
and
sbb
inc
call
testl
jg
mov
dec
cmp
mov
es
push
xlat
push
fwait
test
inc
sbb
gs
or
pop
push
fs
mov
cmp
mov
das
jg
push
inc
cmpsl
jns
jo
pop
out
adc
shr
push
push
std
pop
sbb
enter
shrl
fstpt
pusha
dec
imul
jecxz
dec
and
cmpl
in
pusha
sbb
decb
movsl
cmc
dec
mov
sub
mov
and
filds
lds
push
iret
push
popa
ds
jo
int
cmp
imul
mov
push
cmc
bound
insl
nop
in
cld
test
std
aam
xchg
inc
sarl
push
inc
daa
loop
sbb
test
movl
push
push
and
test
iret
dec
cs
lea
outsb
fmul
mov
movsb
pop
cmp
xor
xchg
push
movsb
jmp
imul
data16
xor
loope
sbb
fisubrl
sub
add
add
cltd
push
jo
mov
jmp
stc
sub
jp
mov
push
call
in
sar
stos
outsl
movsb
fists
xchg
adc
and
rcrb
int3
mov
xlat
adc
hlt
mov
std
or
aam
addr16
addb
shll
stos
pop
pop
dec
test
dec
inc
negb
sub
add
clc
rclb
push
jbe
imulb
inc
adc
and
iret
stc
subb
pushf
divb
inc
sbb
es
push
xchg
insb
andb
xlat
sub
outsb
js
imul
outsb
into
test
push
loope
push
inc
cwtl
cmc
adc
dec
push
adc
and
addb
mov
add
or
add
mov
aad
inc
and
in
orl
js
cli
push
cmp
pushl
mov
inc
lahf
or
pop
xor
imul
je
pop
outsl
pop
dec
cmp
pusha
lahf
dec
mov
movsl
test
arpl
push
outsb
and
inc
jmp
stos
cmpb
mov
icebp
mov
fdivr
dec
dec
jge
pusha
or
fistps
sub
inc
test
adc
push
sahf
dec
fsubrp
push
out
push
mov
insl
aad
sbb
std
out
inc
sub
lret
xor
add
or
sbb
sub
add
arpl
pop
cmp
push
push
pop
imul
inc
jns
cmp
mov
fisttps
jge
mov
pop
adc
xchg
adc
pop
pushl
sub
insb
xchg
jno
int3
scas
adc
outsb
in
insb
test
jns
dec
mov
adc
sbb
xchg
cmp
ret
xchg
movsl
add
cmp
push
sbb
xor
pop
loopne
mov
cmpsl
push
lods
mov
arpl
push
loop
dec
stos
call
lcall
in
test
sub
outsb
cmp
insl
sub
cli
icebp
lods
ljmp
icebp
out
rorl
fs
and
inc
data16
cmp
cmp
je
xchg
out
jne
loope
xor
aad
pop
aad
dec
mov
push
repnz
and
jbe
inc
mov
mov
js
sub
sub
xchg
sbb
mov
popa
xchg
push
test
adc
push
sub
sbb
addr16
sbb
popf
xchg
push
out
xchg
movsl
repnz
mov
push
mov
lea
hlt
sbb
add
cmp
cwtl
and
dec
push
arpl
repz
test
lret
mov
fdivr
sub
add
jbe
dec
pop
mov
cltd
xchg
cmc
rolb
add
fildll
pop
fcomi
je
xchg
mov
imul
stos
out
movsl
jle
scas
jmp
pop
jne
outsl
cs
xchg
dec
push
cmp
mov
inc
repnz
adc
sbb
dec
sahf
dec
mov
mov
shll
repnz
xor
pop
dec
mov
adc
cmpsl
dec
sbb
lods
push
ret
adc
and
sub
das
les
jo
out
testl
mov
dec
scas
sub
out
movsl
out
sub
aam
int
and
pop
mov
inc
sub
sbb
jno
lcall
sub
xor
mov
in
mov
and
daa
fsubl
loope
sahf
cs
and
dec
in
addr16
cltd
jno
and
and
repnz
cmp
cld
mov
push
mov
push
sub
jno
pop
or
mov
gs
inc
push
add
call
jle
cmp
sub
aam
or
pop
sarl
xchg
cltd
outsb
ss
stc
jmp
add
jmpw
fsub
mov
xlat
and
push
mov
call
insb
or
add
add
cli
aas
jg
lods
ret
mov
jge
dec
arpl
into
pmaxub
out
mov
adc
stos
and
imul
or
fisttps
cmc
mov
int
pop
inc
icebp
xor
addb
mov
cmp
dec
daa
aas
fmul
leave
lods
cmpsl
or
push
inc
mov
mov
pop
cmpsb
mov
test
xor
mov
jmp
pusha
js
mov
jle
aam
pop
adc
faddl
and
movsl
mov
arpl
pop
loopne
inc
push
and
inc
mov
mov
mov
scas
xchg
xchg
push
xor
test
popf
in
mov
popa
jns
adc
enter
mov
sahf
rcr
addr16
shlb
cmp
sbb
lods
jnp
int
pop
pop
stc
push
adc
xor
sbb
push
jg
mov
inc
inc
sbb
mov
mov
shr
repz
addb
ficoml
out
inc
or
test
cmp
call
pop
mov
pop
addr16
or
push
inc
nop
cmp
xchg
ja
dec
lcall
xchg
test
fs
inc
xor
pop
inc
test
xchg
jo
cmp
sub
sbb
push
sbb
jbe
test
or
je
and
test
add
jno
xchg
in
sub
movsl
jb
mov
je
mov
dec
lcall
xor
jae
sbb
mov
and
jmp
cmpsl
xchg
xchg
and
push
push
pop
mov
pushf
jecxz
sahf
and
dec
cli
push
rorb
insb
and
notl
gs
cwtl
jle
add
out
jnp
rol
fwait
adc
iret
pop
aad
xchg
add
mov
add
or
ljmp
inc
dec
jmp
cmpsl
fs
stos
fwait
popf
outsl
test
insb
pop
pusha
and
add
or
adc
bound
dec
pop
data16
dec
cmpl
rcr
push
add
cmpsl
movsb
and
ja
call
adc
dec
or
lret
jmp
pop
test
loopne
test
orl
mov
test
jb
sarb
and
jmp
pop
push
sub
cmp
ljmp
push
cmp
jns
fucomip
mov
repnz
and
mov
out
cld
addr16
sub
and
xor
and
js
dec
outsb
repz
lahf
enter
imul
lcall
das
insl
and
mov
xor
nop
sbb
mulb
mov
popf
imul
shlb
sbb
xchg
fadds
cli
sbb
pop
ljmp
sbb
adc
xchg
andb
je
vmovaps
vpunpckhwd
sub
jmp
or
lods
mov
adc
lea
sti
push
pop
insl
or
les
enter
clc
inc
inc
mov
pushf
int3
call
lcall
outsl
in
bound
test
ljmp
jno
push
je
std
or
sub
mov
js
and
pop
gs
jb
mov
lcall
adc
mov
xchg
push
scas
imul
push
cmp
mov
out
test
and
jnp
repnz
dec
dec
test
test
pop
push
mov
scas
insb
repz
cmpsb
iret
mov
cmp
cltd
inc
xor
lret
and
pushf
mov
mov
movsb
sbb
in
sub
mov
pop
pop
pop
scas
xchg
inc
insl
mov
xchg
sahf
gs
es
or
mov
hlt
fs
lock
stos
and
or
sbbl
and
adc
std
lret
jno
imul
cwtl
test
push
lea
out
bound
pop
pop
push
push
cmpsb
mov
xor
mov
mov
call
ljmp
test
aam
icebp
xchg
out
imul
sbb
mov
mov
mov
dec
add
data16
cmpsl
hlt
pop
mov
add
pop
add
inc
lahf
pop
out
cmpsb
adc
pop
cmp
xor
mov
or
push
xchg
or
xchg
outsb
outsb
xchg
je
rclb
icebp
sti
push
jecxz
repz
jnp
dec
dec
cmp
test
inc
and
add
outsb
fwait
ret
shlb
stc
leave
das
pop
xor
dec
xchg
imul
sarb
mov
sub
in
std
arpl
mov
icebp
sub
lahf
leave
sahf
imul
pop
ror
out
pop
dec
dec
xchg
or
add
imul
xorb
adc
sub
es
pop
mov
addr16
jg
rorl
flds
int3
dec
cs
fldl
addl
adcb
xor
jbe
and
pushf
bound
mov
mov
shll
jae
cli
lods
ret
xchg
lods
dec
cmpsl
andl
and
ffreep
inc
jb
les
popa
add
nop
push
idivb
xchg
sub
lret
inc
test
jecxz
xchg
test
ret
jns
dec
sbb
sub
movsb
outsl
push
fbld
shll
out
sti
mov
subb
cmp
jl
sbb
les
xor
pop
and
inc
add
jg
cmp
dec
outsb
add
out
ja,pt
or
dec
push
lahf
faddp
mov
lock
and
cmpsl
bound
cmpl
movsl
pop
test
test
in
dec
enter
pop
add
scas
push
mov
ljmp
scas
cli
pop
dec
inc
sub
fstp
adc
aaa
popa
pop
push
adc
fs
fstps
jmp
mov
cld
mov
pop
mov
shlb
shll
sbb
mov
out
pop
and
fisttpll
ffreep
mov
pop
int3
aam
pop
fwait
push
stos
sti
dec
popf
add
xchg
push
popa
js
or
incb
sbb
dec
xor
sbb
hlt
jo
aam
int
fcmovne
cmp
cmp
xchg
neg
out
add
mov
test
fistpl
cmpsl
sarb
mov
bound
dec
jp
lods
push
xchg
enter
add
inc
mov
xchg
out
push
sbb
out
jnp
adc
ja
jge
inc
dec
ret
int
arpl
cmpb
rolb
pop
ja
repz
sbb
xorl
mov
xor
imul
push
shrl
pop
stos
dec
cmp
jno
dec
jns
xchg
sub
jo
jle
adc
fldenv
mov
je
pop
dec
jno
mov
mov
or
and
out
xor
insb
sbb
imul
repnz
jge
add
fdiv
cli
and
pop
mov
sub
repz
pop
sbb
loop
cmp
jecxz
imul
lods
loop
jno
inc
out
mov
les
pop
and
incb
inc
lcall
mov
xchg
scas
idivl
fdivrl
jmp
and
mov
orl
push
lahf
mov
and
push
cltd
adc
jecxz
iret
sahf
pushf
fsubs
adc
gs
dec
inc
and
scas
mov
fsubs
loop
cmp
jb
lret
adc
inc
adc
or
or
mov
or
pop
ljmp
jns
cmp
xchg
daa
fisubl
pop
std
cmp
rorb
push
cmp
shll
fimull
rcll
fwait
push
cmpsl
hlt
loopne
addr16
push
arpl
cli
xchg
ficoml
fistl
lea
adc
int
mov
add
sbb
stc
fwait
int3
lods
xor
test
out
movsb
mov
inc
stos
in
push
sbb
adc
lock
pop
movsl
pushf
js
loop
jecxz
cmp
movsb
std
jp
inc
xor
std
scas
pop
cmpsb
repz
mov
insl
mov
push
mull
mov
inc
cs
mov
bound
test
movsl
das
scas
cld
into
lret
xor
push
push
add
pop
pop
jmp
rclb
jo
cmpsl
add
mov
test
sbb
or
and
aas
dec
fsubs
add
xchg
inc
sub
push
or
mov
std
stos
or
in
sub
lcall
xlat
push
xchg
arpl
inc
jg
mov
or
mov
call
popf
lret
mov
fstpl
jmp
mov
iret
inc
inc
sub
mov
mov
roll
cmc
in
cli
scas
dec
addr16
mov
fwait
mov
xchg
std
mov
adcb
dec
xor
push
mov
jge
mov
shlb
notb
mov
xchg
ffreep
pop
cmp
ret
mov
rolb
stc
cli
cmp
aam
xchg
iret
mov
mov
orb
mov
mov
mov
mov
dec
repz
out
mov
mov
adc
mov
adc
test
insl
mov
ljmp
fwait
push
pusha
push
sub
pop
cmpsl
adc
mov
inc
lret
mov
iret
mov
and
fbld
test
jle
mov
int3
and
cmpsl
shll
mov
jp
ds
sbb
dec
jae
mov
adc
test
loopne
scas
outsl
sahf
dec
adc
add
mov
aaa
adc
hlt
push
mov
push
loope
and
jmp
ret
repz
popa
imul
and
and
mov
dec
push
mov
fstps
inc
xor
sub
cmpsl
add
mov
xchg
jl
sub
sub
dec
or
or
test
or
outsb
movsl
loopne
jno
xlat
cmp
test
cmp
lahf
sub
icebp
jecxz
popa
fdivr
inc
outsb
loop
repnz
sub
mov
int
imul
mov
adc
bswap
movsl
subl
or
pushf
jnp
fucomip
cmp
xchg
add
cmp
mov
rcll
push
cmp
or
jge
stos
fidivrs
xor
in
out
sbb
daa
nop
jbe
mov
pop
inc
addb
lea
mov
inc
fisttpll
aam
xor
outsb
pop
xor
xchg
imul
mov
mov
pop
push
adc
mov
dec
shr
call
jno
mov
mov
or
mov
mov
pusha
lea
sbb
dec
mov
aad
mov
xor
dec
popf
xor
or
add
mov
adc
sub
mov
test
or
fbld
fidivl
outsb
dec
jp
outsb
and
repnz
fisubs
adc
or
inc
inc
cmc
inc
jbe
mov
test
jmp
es
xchg
adc
and
mov
inc
gs
pop
stos
or
inc
lcall
fildl
cwtl
cmpl
dec
sbb
sbb
sub
inc
mov
hlt
sbb
lahf
cmpb
test
inc
and
push
sub
lock
in
dec
add
dec
xchg
repz
sub
inc
cmp
push
loopne
out
push
mov
addb
sarl
das
cmc
xchg
clc
rorl
in
push
xor
loopne,pn
cmp
sub
in
adc
xor
dec
xor
sub
mov
ss
mov
cmpsl
push
popf
adc
clc
sub
sub
rcrb
mov
rcrb
inc
ja
or
in
add
fwait
push
sahf
fmull
xchg
pop
sub
sbb
mov
mov
push
imul
loop
imulb
xlat
lds
xchg
jecxz
insl
nop
nop
adc
fdiv
int
inc
lods
jle
insl
jbe
mov
test
push
jno
sub
cmp
das
add
xchg
test
pop
stos
les
push
pop
inc
es
jnp
push
loope
pop
adc
pushl
jne
fwait
nop
fistpll
in
pop
fisttpl
addr16
push
cmc
cmp
mov
and
mov
dec
sbb
in
cmp
push
push
daa
mul
adc
cmpsl
jmp
fldcw
xor
dec
sbb
sbb
sub
movsb
push
add
xchg
aam
xchg
shlb
gs
in
xchg
je
lret
mov
push
dec
dec
inc
xchg
lock
push
popa
push
outsb
pop
aad
ja
pop
adc
or
push
nop
sub
fwait
cwtl
es
and
mov
add
setns
pop
jbe
add
adc
push
int3
dec
mov
movsl
dec
mov
mov
push
cs
mov
pop
cmpsl
mov
dec
cmpsl
cli
sub
pop
arpl
mov
fsubl
gs
cmp
sbb
fsts
outsb
divb
lea
andl
and
fsubrs
ret
int
ret
jp
aam
subb
sub
lahf
stos
mov
call
fwait
mov
js
scas
mov
add
jno
jo
mov
fisubs
lods
popa
std
mov
sbb
loope
leave
arpl
inc
imul
jecxz
stc
jno
outsb
cmp
inc
jnp
cmp
loop
imul
dec
add
and
shrl
loopne
mov
lret
xchg
ljmp
inc
push
clc
xchg
aam
arpl
push
and
adc
push
ja
jne
scas
sub
rcll
sub
xlat
cmp
jecxz
dec
pop
cmp
dec
push
dec
popf
dec
mov
add
sub
sbb
mov
ficompl
mov
or
in
sub
not
orl
cmpsb
ret
jge
ss
lds
or
sbb
cli
mov
jge
lock
je
xor
test
mov
outsl
pop
mov
xchg
mov
xchg
imul
cltd
adc
xor
push
jp
loop
stc
xor
push
sub
mov
pop
loop
push
dec
dec
inc
stos
cmp
cmc
mov
gs
sub
push
inc
sbb
lret
and
test
and
xchg
ret
add
leave
loop
stos
jp
mov
push
add
jns
jl
cmc
fwait
sub
je
fisttpl
push
rolb
in
jl
test
push
aaa
hlt
or
scas
xchg
idivl
push
adc
cmp
popf
jle
inc
xor
push
cmc
dec
popf
jmp
push
jbe
cmp
test
lret
clc
and
leave
iret
jae
into
in
andb
adc
inc
sbb
inc
mov
mov
xchg
arpl
add
pop
push
scas
loop
andl
xor
test
cs
jmp
push
mov
aas
out
push
outsl
cmp
push
pushf
inc
and
lahf
mov
stc
cld
mov
and
mov
pusha
sub
sbb
aam
adc
repnz
pop
sub
outsb
in
out
les
loope
outsb
mov
cli
and
out
push
popf
repz
pop
jge
daa
mov
bnd
clts
mov
mov
in
cmc
dec
cmp
push
mov
ret
sti
dec
shrl
sbb
sbb
cltd
mov
dec
cmpsb
sbb
mov
pop
daa
sub
lods
shrl
cli
pop
jbe
xchg
and
out
mov
inc
mov
aas
lcall
hlt
xor
cmp
fwait
jnp
sub
imul
cwtl
pop
decl
out
jmp
cs
das
stos
sub
out
std
cltd
test
movsb
movsb
lea
mov
mov
ret
add
and
xor
in
iret
cmp
jmp
xlat
inc
int
cld
iret
call
bound
pusha
inc
les
lret
lret
nop
push
rcrl
jo
daa
or
inc
adc
outsl
stos
mov
xor
les
adc
inc
cmpsl
jmp
jp
cmp
cmpl
cmp
or
lahf
nop
ret
fisttpll
ljmp
insl
push
ficompl
in
xchg
mov
int
cli
in
xor
sub
inc
lds
xchg
aad
icebp
popa
jns
imul
jle
mull
mov
push
and
inc
imul
push
popa
xor
jb
test
jmp
or
lods
ljmp
fisubs
dec
pushf
push
aam
gs
xlat
adc
push
js
sahf
fstpl
int
fidivrl
das
mov
stos
stc
sbb
in
pop
and
mov
jb
js
dec
icebp
sbb
lahf
and
or
fistl
call
pop
bound
lcall
testl
mov
xchg
dec
std
cmp
cmp
in
jbe
sub
mov
sub
lcall
rol
xor
mov
adc
cmc
add
cmpsb
fldl
sti
dec
xor
ja
dec
ss
xor
sbb
rcrl
push
push
lret
lock
or
test
int
test
push
inc
xchg
inc
out
cmp
fildll
mov
rorl
mov
mov
popl
mov
cmp
jp
fiaddl
mov
add
mov
int3
mov
mov
in
sbb
clc
ret
imul
jb
rolb
test
push
faddl
sbb
movsl
or
icebp
scas
push
xchg
cwtl
rorl
bound
inc
popa
cmc
aad
or
lds
push
out
in
jno
or
mov
jp
cmp
ret
popa
insl
clc
cltd
lcall
mov
mov
pop
mov
mov
sbbl
push
inc
ss
mov
xchg
scas
push
add
cmpsl
adc
loope
mov
out
movsb
pop
jns
imul
jg
hlt
xor
sbb
cwtl
mov
popa
dec
xchg
mov
xor
enter
mov
jo
jecxz
mov
mov
js
push
xchg
in
mov
push
mov
xor
in
sbb
mov
nop
mov
jl
cmp
dec
mov
dec
fs
sti
jle
dec
mov
cmp
scas
mov
outsl
jnp
sbb
ss
out
mov
hlt
lea
out
xchg
and
sbb
mov
xchg
imul
aam
pop
out
dec
and
and
dec
inc
jmp
popf
popw
pushw
aaa
fcoms
stc
cwtl
mov
enter
or
roll
sub
xchg
pop
call
mov
enter
movb
xlat
ja
ja
cmp
in
sub
out
cmp
push
mov
xchg
jae
add
fcom
popf
xchg
xor
xor
add
jecxz
mov
mov
clc
les
lods
in
mov
pop
cmovp
icebp
sahf
es
xchg
jae
dec
mov
mov
xchg
popa
cld
mov
mov
jnp
push
or
jnp
dec
xchg
jecxz
in
xchg
leave
or
mov
repnz
or
adc
add
adc
xor
test
in
movsl
inc
and
daa
xchg
adc
imulb
cmp
sub
xchg
popf
xchg
popl
cmp
pop
ja
outsb
cmc
pusha
jae
insb
push
scas
jg
mov
xlat
adc
xor
repnz
xor
xchg
bound
jo
sub
cmpsl
mov
mov
movsb
rcl
dec
mov
sbb
inc
fistpl
jnp
fistps
ds
add
scas
dec
or
test
imul
shrl
mov
mov
adc
dec
test
clc
fcmovbe
push
or
sbb
lret
cmpsb
mov
cmp
jo
xchg
andl
movsl
adc
pop
pop
sbb
icebp
bnd
jmp
mov
sub
adc
ja
jp
and
jl
aaa
jecxz
lock
aas
arpl
jno
dec
sub
push
aas
das
pusha
outsb
dec
sbb
jmp
lds
sbb
sub
bound
sbb
cmp
push
jnp
out
jno
mov
jno
pop
dec
push
scas
xchg
add
mov
lods
leave
mov
mov
movsb
sbb
ffreep
mov
dec
push
enter
cmpsl
or
add
ds
jo
lcall
sti
outsl
loope
mov
das
lea
rcl
cs
mov
cli
mov
lods
adc
ret
mov
push
nop
pusha
sahf
xor
int
insl
jge
call
cmp
das
xchg
movsl
es
pop
sbb
aad
or
repz
mov
dec
and
sti
ljmp
iret
jne
loop
hlt
imul
inc
scas
pop
loopne
sbb
dec
inc
rclb
out
testb
push
mov
xor
mov
cld
gs
popa
pop
test
mov
test
stos
fwait
push
jns
adc
add
std
xor
xchg
iret
jno
icebp
cs
loope
std
mov
in
roll
cmpsl
pop
std
cmp
and
sti
sbb
push
sbb
add
xor
jge
clc
sets
jl
pop
sahf
fiaddl
loop
jns
and
fcmovnbe
jb
paddusw
jmp
dec
stc
out
or
and
cmp
int
test
js
cmp
ljmp
pusha
lds
cmp
cltd
aaa
fwait
jo
adc
sub
push
pop
sub
mov
cmp
clc
clc
jp
subb
jne,pn
mov
lcall
rclb
mov
mov
cld
mov
xchg
xchg
dec
sub
jbe
and
mov
and
push
mov
out
and
mov
mov
fs
add
cmp
mov
sub
sub
repz
cwtl
imul
mov
lret
lea
dec
pop
mov
cmp
aad
sti
lea
mov
es
faddl
mov
out
add
xchg
push
mov
dec
test
js
cs
jmp
dec
xchg
inc
jnp
outsb
mov
shrl
jle
mov
lods
inc
test
mov
cmp
xor
push
or
mov
icebp
in
lock
adc
fists
cmp
sub
sbb
lods
leave
cld
xor
mov
insl
popa
mov
inc
int3
inc
imulb
out
add
mov
cs
mov
in
shrb
daa
jle
stos
mov
add
div
roll
in
outsb
test
sbb
adc
push
data16
adc
fstl
movsb
nop
xor
rorb
dec
das
dec
inc
xor
cmpsl
addr16
lds
jae
mov
out
fisubrs
mov
arpl
scas
push
push
iret
shrb
add
fwait
mov
jae
in
bound
ja
in
sub
das
lods
inc
loope
aaa
cmpsb
fwait
adc
sub
push
xchg
cmpsl
fdiv
cmpsl
test
loopne
stc
insl
push
inc
pushf
sbb
push
out
ljmp
sub
insb
outsl
add
cwtl
mov
or
popf
adc
testb
or
sub
sub
xchg
xor
inc
inc
adc
inc
ret
push
and
or
sbb
jb
mov
cli
and
js
xor
ret
inc
jl
lods
lret
out
stc
inc
scas
push
sub
lahf
aad
inc
pop
icebp
pop
int3
jo
lea
ss
shr
and
in
inc
inc
leave
aaa
xor
fldcw
xchg
mov
inc
flds
pop
dec
xor
push
xchg
dec
dec
jecxz
test
push
jns
mov
jmp
or
sbb
std
cmp
inc
pop
mov
jecxz
mov
and
stos
push
xacquire
mov
dec
add
aas
xor
xchg
jecxz
subb
cmp
fidivs
pop
addr16
sti
and
jb
add
roll
and
outsb
dec
jb
mov
xor
xchg
cld
mov
les
rorb
test
dec
add
jns
adc
jecxz
iret
lods
cmp
out
scas
push
aaa
scas
sahf
or
or
add
xchg
fisubrs
cli
in
sbb
adc
inc
push
movsb
jno
mov
sub
jne
test
mov
add
inc
aaa
sub
lcall
sarl
jmp
into
jne
mov
inc
pop
pop
mov
in
repnz
dec
pop
lcall
loopnew
in
in
bound
dec
mov
mov
lods
sbbb
or
popa
popl
mov
dec
sbb
pop
sbb
popf
insl
add
pop
mov
mov
movsb
enter
mov
jno
mov
dec
or
in
ror
ds
ss
loop
imull
test
xor
or
fsubr
sub
mov
and
data16
fistl
sbb
lods
enter
rcr
subl
xlat
lock
pop
pop
and
jecxz
pop
push
int3
mov
cmpsl
add
adc
inc
pop
sbb
ja
popf
std
push
out
imul
sbb
xor
dec
sahf
inc
push
mov
cmc
pop
aas
sbb
mov
fidivrl
adc
dec
lods
mov
fildll
or
fisttpl
bound
psadbw
int3
xor
add
or
cli
jnp
xchg
lret
iret
lods
lret
insb
xchg
loopne
sub
pusha
sub
push
dec
ds
sub
add
mov
mov
ds
fwait
dec
mov
hlt
push
loopne
and
sub
adc
push
aam
int3
sub
or
inc
rclb
stos
jmp
outsb
mov
mov
les
sbb
stos
mov
and
test
pop
lock
cmp
jp
and
push
xor
call
sub
js
sti
add
jmp
ffreep
push
mov
mov
sbb
cwtl
outsb
lret
sar
into
loope
cli
iret
test
cmp
dec
jae
int
mov
pop
lahf
push
pop
mov
sub
outsl
cmp
pushl
roll
pop
ja
pop
sahf
cmp
scas
cmpsb
fwait
daa
cs
sub
rorb
mov
data16
int3
les
dec
mov
das
pop
jp
cmp
iret
lods
sub
cmp
push
icebp
dec
bound
dec
out
mov
pop
mov
mov
xor
xor
sub
mov
dec
jecxz
pop
pop
insb
imul
cmp
testb
inc
and
or
pushf
std
gs
xor
or
push
add
rcll
clc
push
outsl
rdmsr
cmp
pop
pop
sub
sub
or
xchg
mov
jae
dec
adc
dec
lds
or
dec
fsts
sar
outsb
inc
mov
fwait
cmp
fstpl
in
and
clc
push
out
mov
cmpsl
jmp
aas
fcmovbe
sub
cli
imul
cmp
xchg
hlt
inc
enter
das
and
addb
and
repz
mov
xor
xchg
dec
xor
sbb
icebp
in
inc
sbb
inc
sbb
pop
mov
outsl
mov
dec
sbb
inc
dec
lods
sbb
aaa
sti
cmp
jecxz
sti
dec
fnstenv
jge
adc
gs
das
push
sahf
js
xor
pop
jmp
inc
push
in
dec
aad
faddl
jl
pop
jecxz
ja
push
and
mov
and
push
lea
out
addr16
call
pusha
mov
dec
scas
dec
sbbb
sbb
insl
outsl
nop
call
cmc
das
mov
push
mov
pusha
outsb
rorl
cmp
xchg
mov
jle
sbb
testl
add
fcomi
xor
ret
mov
iret
ds
push
sbb
call
mov
mov
inc
mov
and
jge
fwait
dec
push
cmp
lock
pusha
xchg
daa
lds
jl
dec
fdivrs
js
mov
push
movl
lret
sub
out
adc
rcrb
nop
jg
sarl
mov
mov
mov
xchg
jp
push
mov
pop
inc
cmp
dec
mov
sbb
adc
mov
orl
imul
insl
out
lahf
enter
mov
ja
or
mov
mov
inc
mov
add
push
imul
xchg
push
pop
les
mov
mov
mov
push
out
push
jg
sub
cmp
xchg
lea
add
mov
adcl
dec
inc
push
aam
push
add
adc
fwait
or
inc
dec
cwtl
mov
inc
push
imul
push
cwtl
xor
cwtl
cmpb
je
and
dec
jb
push
sub
push
mov
push
sbb
mov
decl
mov
jns
mov
fisttpl
fs
jmp
pop
mov
clc
je
sub
jp
adc
repnz
lret
sbb
pop
sub
cmp
jmp
pop
or
in
jo
fwait
push
push
pop
je
and
xchg
mov
stc
mov
dec
inc
lret
outsl
hlt
popf
pop
inc
test
sub
lret
cmp
mov
and
xor
ret
arpl
out
sti
jecxz
adc
mov
outsl
or
add
jo
mov
push
pop
jo,pn
xchg
xchg
repnz
push
xorl
pop
movsb
pop
mov
xor
and
gs
les
sahf
mov
and
cmc
mov
pop
cmpb
mov
and
mov
jg
mov
inc
jecxz
adc
sti
stc
test
test
repnz
negb
outsl
adc
push
aaa
inc
sbb
adc
pusha
or
cli
aas
push
jb
jmp
jne
mov
in
aam
stos
add
loope
xchg
dec
mov
cwtl
mov
psllw
and
mov
cmpsb
push
add
imul
or
sub
xor
pop
ret
test
arpl
ret
fdivrs
mov
and
test
pop
or
cli
shlb
push
add
aas
push
jno
jno
push
scas
pop
xchg
xchg
jle
mov
lcall
mov
xorb
pop
xor
adc
jae
ror
jno
pop
jp
jecxz
ret
xchg
aam
fisubrs
mov
jae
dec
lret
inc
push
pop
hlt
pop
mov
dec
mov
pop
jne
and
xor
mov
mov
out
adc
cmp
imul
ljmp
outsb
loop
flds
addr16
out
stc
xchg
jae
jmp
shll
mov
mov
bound
ja
lahf
and
movsb
lock
jnp
test
sub
xor
mov
outsl
xor
jo
shrl
ret
cmpsl
outsl
mov
jbe
ss
mov
cmp
movsb
pop
lcall
mov
ljmp
mov
push
mov
test
xchg
inc
dec
cs
sti
dec
jnp
movsl
and
inc
xchg
fnstcw
lods
sbb
mov
out
pushf
mov
mov
fadds
push
mov
std
mull
sbb
sbb
subb
sbb
inc
lahf
mov
cmpsb
arpl
inc
jg
js
dec
je
imul
mov
push
push
push
dec
int3
cltd
mov
fmuls
sbb
pop
xor
mov
cwtl
test
jno
icebp
mov
ret
in
xor
add
push
test
push
inc
inc
andb
cmc
inc
hlt
pop
les
enter
movsl
xchg
mov
cmp
add
rorl
xor
xchg
mov
mov
cld
dec
out
cmp
std
push
push
cmp
movsb
outsl
fistpl
mov
test
js
inc
mov
out
lods
or
push
add
or
je
add
daa
push
adc
inc
pop
mov
sahf
imul
mov
dec
jl
fstpl
in
roll
std
andb
mov
ss
sub
mov
and
fidivs
dec
jecxz
test
jno
insl
filds
mov
fyl2xp1
stos
test
jo
loopne
fdivrs
sbb
insb
repz
les
xchg
push
aam
lcall
rcrb
pop
mov
idivl
clc
push
je
aas
cmp
dec
verr
jno
sar
mov
jo
js
mov
mov
sub
daa
push
call
sbb
imull
cmp
xchg
popa
xchg
and
scas
cli
add
sahf
jmp
daa
out
lods
lret
call
fadd
jns
in
fs
dec
pop
fdivl
cmp
cmp
stc
jns
add
pop
enter
xchg
xchg
les
xchg
sub
fisubs
add
sbb
xor
and
ljmp
into
cli
mov
mov
and
js
lahf
mov
xchg
xor
int
jbe
push
add
loopne
mov
lods
gs
mov
pop
push
test
jmp
push
fistl
mov
adc
mov
movsb
add
inc
xor
shlb
cmpsl
cltd
jo
jne
lds
shlb
inc
adc
sub
cmp
bound
test
push
push
cmpsl
adc
and
pop
pop
cmp
in
movsl
inc
xchg
and
mov
ja
in
ror
cli
out
call
movsb
insb
sti
ds
jmp
and
push
aam
dec
jb
mov
ljmp
aaa
shl
ss
jecxz
loope
sbb
sbb
lock
cmc
inc
aas
cmpb
mov
xor
sbb
dec
mov
rcl
xor
imul
std
sbb
test
pop
enter
cmp
push
cmp
jmp
xlat
adc
push
add
mov
cltd
imul
outsb
hlt
sub
add
sbb
adc
mov
add
sub
xchg
scas
inc
scas
jne
and
pop
shlb
jecxz
sbb
stos
hlt
or
icebp
pop
cmc
mov
pusha
inc
rcl
adc
addr16
fbld
or
sarl
cmc
mov
and
mov
jge
mov
int3
icebp
xchg
dec
in
das
xor
out
and
stos
daa
sbbb
icebp
mov
roll
sbb
in
ret
sbbb
jae
iret
adc
pop
rcll
mov
movsb
cs
call
push
cli
sbb
inc
out
mov
push
dec
shl
scas
mov
addr16
lret
mov
or
or
jmp
stos
popa
iret
pop
push
xor
in
add
mov
es
push
pop
fistpl
mov
fidivrs
mov
push
jno
mov
xor
jb
or
mov
sti
dec
sub
cli
inc
test
push
add
sbbb
pop
int
daa
jl
arpl
call
leave
adc
xlat
cmpsl
cmp
mov
repz
mov
mov
fs
sbb
mov
int
ret
scas
pop
xor
cwtl
les
pop
idiv
pusha
inc
push
iret
add
mov
lret
mov
and
aad
or
js
aas
mov
cmp
adc
jo
sub
pop
dec
jno
xor
sbb
ret
xor
stos
in
ss
mov
inc
div
testb
or
dec
push
mov
mov
mov
fstps
aas
pop
pop
adc
pusha
jle
mov
insl
mull
lds
adc
fcmovu
mov
push
mov
icebp
inc
fcmovnbe
cmp
pusha
mov
leave
movsb
lret
and
popf
mov
loope
scas
gs
sub
outsb
adc
repz
mov
mov
ret
mov
out
fcoml
lea
lods
fdivrs
xchg
fisttpll
imul
xor
mov
bnd
imul
shlb
mov
out
movsl
push
dec
xor
aad
andb
pop
mov
loope
mov
imul
test
enter
js
mov
imul
fdiv
push
or
xor
in
das
cmp
popa
hlt
stos
adc
mov
cmp
adc
adc
aaa
clc
pop
mov
inc
adc
aaa
or
pusha
xor
insb
jge
cwtl
loope
ljmp
test
adc
inc
or
mov
rolb
rorl
sbb
push
pop
jbe
lock
inc
fistpl
test
rol
scas
xlat
sbb
mov
int3
xchg
popf
xchg
jae
adc
loope
mov
shlb
mov
icebp
and
js
mov
repnz
out
dec
xchg
jno
mov
mov
sti
inc
cwtl
xor
ja
cwtl
sarb
fsubrp
pop
test
push
or
call
jne
les
or
xchg
pop
cmp
out
cld
mov
jge
enter
add
dec
popa
cmp
xchg
cmp
stos
daa
mov
sub
xor
sbb
aas
je
add
jnp
in
lret
scas
ret
mov
loopne
int3
stos
xchg
push
fisubs
cmp
movsl
or
mov
jp
mov
shrl
rclb
stos
mov
in
inc
xchg
and
out
sahf
xor
push
pusha
sti
mov
lods
adc
dec
pop
or
in
lods
mov
jno
ljmp
shlb
lcall
lahf
iret
fnstcw
add
sbb
in
cld
daa
add
mov
leave
in
in
inc
mov
or
xchg
and
dec
mov
lock
xor
aas
ret
jp
jge
jp
pop
pushf
add
in
pop
cmpl
movsb
loop
adc
xchg
test
push
aaa
sarb
adc
ret
popf
ja
cmpsb
mov
sbb
mov
mov
insb
add
fwait
inc
dec
sbb
mov
inc
or
mov
add
sbb
cmp
inc
xchg
adc
mov
in
out
lea
fwait
sub
adc
and
lret
cmp
and
les
and
ficompl
insl
cwtl
mov
mov
sub
mov
repnz
xlat
pop
add
hlt
add
mov
movsl
cmpb
out
xchg
addr16
xchg
jmp
fldl
aas
mov
inc
dec
test
dec
xor
dec
cli
push
or
jnp
mov
in
mov
adc
rorl
repnz
mov
aaa
test
rorl
js
out
mov
mov
les
fs
push
or
sub
mov
adc
daa
les
jo
popa
inc
dec
fisubrs
jae
pop
and
pusha
jno
adc
jae
adc
cmp
cmpsl
movsb
or
and
arpl
lahf
fdivs
ja
movsl
mov
movsb
sahf
test
aam
and
icebp
push
push
enter
xchg
xchg
ret
mov
jle
stos
cmp
arpl
movsl
bound
scas
imul
ficoml
xchg
mov
xlat
aam
fstp
loop
out
pop
in
out
out
push
cmpsl
xchg
mov
js
movl
lods
js
ds
gs
pop
pop
pop
decb
xor
dec
lea
insl
js
push
or
mov
xlat
dec
das
jle
push
mov
test
sbb
add
inc
fwait
nop
aas
movsl
jno
xor
mov
outsb
dec
inc
sti
cld
sub
addr16
xor
ret
mov
adc
sarb
fnstenv
adc
das
imul
pop
dec
cmp
cmp
sub
rorl
push
lds
and
mov
cmpsl
mov
mov
mov
mov
xchg
or
insl
aaa
movsb
fs
fstpt
mov
and
jbe
sub
ja
loop
mov
icebp
shrb
mov
cli
std
mov
sub
cmpl
sbb
outsb
adc
cmp
cli
xchg
jmp
pop
scas
loopne
imul
stos
cmp
mov
mov
jp
sbb
popf
sti
add
scas
xor
and
cmp
iret
pop
mov
xchg
jne
cmpsl
sub
inc
js
xlat
sti
movsl
cmc
jmp
or
ja
mov
mov
aaa
imul
js
push
mov
mov
lret
push
or
dec
cmp
lods
stos
inc
test
jp
mov
mov
add
mull
dec
cli
cmc
aad
cmc
inc
movb
jl
in
ja
jge,pn
add
das
movsl
mov
dec
mov
shll
mov
jne
lods
cmp
and
mov
repnz
add
pop
enter
dec
aam
jecxz
ja
push
mov
push
jg
int3
or
sarb
add
leave
call
inc
jno
or
dec
loopne
les
ret
std
mov
pop
fldenv
imul
shlb
out
ret
cs
mov
push
fwait
mov
add
push
mov
cmp
xchg
jns
stos
sbb
mov
xlat
add
push
imul
pop
adcb
daa
sbb
and
test
sbb
pop
jb
std
xorl
orb
adc
lea
cmpsl
fistpll
jmp
notb
xchg
int3
jbe
or
jb
insb
sbb
rclb
lcall
xor
dec
bound
arpl
movsb
mov
mov
push
xor
pop
push
scas
sbb
jle
aas
cmp
push
out
test
stc
xchg
mov
aaa
fistl
xchg
xlat
sub
pop
loopne
or
sar
xor
pop
test
push
lret
enter
lea
aaa
mov
lds
inc
push
jo
hlt
rcl
adc
sub
int
iret
jge
mov
clc
mov
cmp
arpl
and
imul
jbe
lock
adc
xchg
sbb
xchg
dec
add
and
mov
cmp
mov
fstp
shl
fsubl
leave
pop
pop
sbb
fs
or
and
aam
mov
daa
mov
hlt
sbb
enter
inc
dec
mov
jecxz
xchg
repnz
mov
inc
push
xchg
xchg
pushf
inc
stc
xchg
fistpll
xchg
push
mov
adc
and
xor
jns
arpl
int
mov
imul
movsl
scas
arpl
cltd
and
cmpsb
arpl
mov
cltd
ds
push
lret
loop
test
cmp
imul
dec
mov
dec
dec
inc
inc
psubq
cwtl
imul
pop
cld
stos
leave
pop
push
sti
jo
push
loope
out
test
stos
int
roll
xor
fsubrp
cmp
shrb
mov
xor
sub
and
shrb
aaa
adc
inc
mov
jmp
loope
cwtl
mov
push
iret
xor
jg
dec
sbb
loope
lcall
cmpl
cmp
adc
inc
test
mov
and
or
outsb
sbb
jne
mov
mov
mov
and
leave
jl
xchg
out
call
mov
sti
adc
dec
pop
out
mov
xlat
dec
inc
sarb
sbb
add
cmp
cwtl
mov
cmc
mov
pop
xor
ret
movsl
push
fnstsw
push
dec
cmp
sti
xor
fstpt
dec
add
in
or
pop
mov
mov
imul
pop
aaa
pop
fmuls
and
jb
out
sarb
jg
into
fmull
aad
mov
cmp
sbb
inc
lds
add
nop
jae
cltd
data16
inc
mov
test
dec
push
jbe
dec
push
adc
mov
test
divl
xchg
adc
cld
in
leave
or
lds
scas
das
xchg
fwait
cmp
cmp
push
cmc
xor
enter
loope
lret
cli
lret
add
inc
mov
and
stc
enter
stos
sub
sub
outsl
nop
sbb
jno
jno
jnp
outsb
mov
inc
push
movsb
pop
xor
or
sti
dec
lods
mov
jb
cmp
arpl
js
sbbb
sub
test
andl
sti
jo
popf
xchg
jl
cmp
ret
fwait
ljmp
movsl
fimull
pop
movsl
push
lods
and
js
loopne
roll
xorl
andb
or
adc
dec
subb
fstpt
popa
sub
jns
pop
adc
ds
adcl
in
mov
rcrl
add
shll
mov
xorl
jmp
outsb
jmp
push
add
cli
call
and
and
iret
jno
shrb
fsubr
loope
out
jae
cmp
in
stc
adc
and
mov
test
pop
cmp
dec
adc
xlat
imul
negl
daa
push
xchg
test
jae
or
jae
mov
sbb
movsl
jecxz
fincstp
stc
out
xchg
or
cmp
stos
sti
mov
imul
jnp
inc
or
sar
jo
adc
daa
incb
push
inc
mov
lea
cwtl
xor
ljmp
sahf
lods
repz
out
in
sub
icebp
mov
fwait
and
cmp
cmc
or
clc
or
daa
push
push
inc
cmp
pop
shll
jmp
sti
mov
mull
xchg
mov
loope
mov
inc
inc
cmp
mov
aaa
scas
cmp
dec
jmp
and
cmpsb
sqrtps
rcr
cmp
push
xor
or
add
jne
mov
loopne
sub
pop
scas
leave
lcall
lret
mov
stos
lods
scas
enter
cmp
and
pushf
aad
test
push
pop
sbb
or
and
inc
shlb
nop
sbb
outsl
test
outsl
out
stos
cltd
mov
inc
testl
shlb
ret
dec
fs
jge
test
jno
dec
repnz
aad
insl
gs
mov
xchg
pop
cltd
push
jle
lret
lret
pop
jne
sub
out
aam
cmp
push
adc
jns
add
scas
cmp
inc
xor
pop
mov
mov
testl
xchg
jge
sub
or
xchg
daa
mov
sbb
pushf
push
adc
aas
cmpsl
cmp
fs
fidivs
outsb
adc
out
mov
lds
xchg
ljmp
adc
int3
aaa
jno
in
xlat
mov
jl
loop
nop
mov
lds
cltd
ret
cli
mov
repz
out
inc
push
xchg
out
imul
dec
sub
aam
aas
jecxz
rorb
out
push
mov
xchg
jae
xor
pop
inc
adc
pop
test
das
in
out
leave
ljmp
sub
push
or
mov
push
sbb
add
push
xor
add
cmp
jp
jns
cmp
jnp
inc
dec
jmp
sbb
dec
aaa
das
jle
fsubrl
mov
mov
push
or
enter
cmp
or
push
icebp
mov
xchg
rcr
jo
into
shrb
mov
or
subb
jns
scas
cltd
push
sub
shlb
pop
aam
sbbl
lret
and
add
pop
mov
inc
or
bound
insl
cmp
sbb
in
or
sbb
ljmp
push
pushf
dec
push
xor
cld
dec
pop
inc
cmp
fs
jecxz
dec
int3
jmp
jge
scas
push
cmp
aam
pushf
cmp
out
mov
ss
inc
ret
push
adc
sub
add
js
cmpsl
sbb
mov
push
inc
daa
ficoml
orl
insb
inc
and
push
cmp
repnz
mov
clc
test
sub
mov
outsb
shll
mov
sub
loope
lods
repnz
les
loope
mov
push
loop
hlt
push
dec
jge
ret
pop
shlb
pop
mov
aam
aad
rcr
push
stos
jb
jle
ljmp
mov
repz
gs
pusha
jnp
stc
xchg
cmc
repz
mov
cltd
stos
jle
inc
mov
adcb
push
mov
pop
dec
sbb
lds
fmull
popa
ds
popf
pop
int
andl
sub
ljmp
mov
xor
and
jmp
lods
dec
hlt
mov
add
imul
cltd
in
dec
jno
and
xor
loope
imul
daa
xorb
out
push
pusha
adc
insl
test
shl
repz
in
xchg
pop
dec
ret
sbb
test
push
lock
inc
mov
mov
repz
mov
xchg
adc
popa
dec
sarb
ror
sarl
dec
xchg
cmp
lea
push
sbb
addl
mov
lds
out
mov
pop
mov
push
jle
mov
sahf
sbb
jnp
movl
add
ss
xchg
jns
xchg
inc
aam
add
mov
test
pmaxub
mov
inc
lcall
xchg
or
sub
cli
hlt
adc
sbb
out
sub
dec
imul
add
dec
inc
or
adc
das
pop
push
mov
out
mov
fistps
call
mov
arpl
movsb
adc
xor
jp
mov
mov
stos
lea
cmp
cmp
sub
push
cmp
test
or
fistpl
mov
fimull
dec
loopne
loope
push
movsl
daa
dec
hlt
xor
test
lret
add
gs
mov
sub
in
popf
in
pop
push
lock
mov
add
sti
mov
enter
pop
icebp
ror
adc
nop
cmp
out
fsin
nopl
out
data16
pushf
mov
push
push
sahf
shlb
add
je
ficoms
outsl
notb
enter
in
lods
int3
pop
fisttpll
ret
sti
in
mov
lcall
adc
hlt
filds
mov
imul
xchg
sbb
dec
add
pop
rcll
push
aaa
and
sti
icebp
imul
push
fildl
cltd
out
cli
imul
mov
xchg
jb
test
movsb
shl
pop
test
xchg
movsl
inc
ficomps
cwtl
xchg
repnz
sbbl
xchg
xchg
adc
push
sarl
rolb
repz
cmpl
inc
sahf
out
lret
jo
jnp
das
mov
mov
xchg
jl
arpl
cmp
pop
xor
jmp
in
mov
imul
and
leave
insb
insl
push
fscale
pop
or
es
dec
in
cld
pop
jo
lds
std
enter
fadds
mov
je
sbb
call
cmp
movsb
add
xchg
jb
push
insb
je
lods
pusha
pop
std
cltd
lcall
mov
mov
inc
pop
mov
and
mov
jne
insl
or
jmp
jl
and
mov
out
lods
loop
jbe
mov
sbb
sbb
subl
pop
mov
xor
xchg
and
mov
sub
mov
pop
aaa
jne
cmp
push
test
pop
jb
mov
dec
dec
in
outsl
or
cmp
jns
inc
mov
sbb
aaa
ret
shlb
dec
call
repnz
or
lock
mov
movsb
sub
aaa
iret
mov
adc
imul
push
xchg
mov
sbb
jne
pop
int
int
mov
push
ret
mov
divb
or
mov
test
or
out
adc
pop
lock
imul
insb
aas
test
fistps
daa
jne
mov
sbb
xchg
and
mov
mov
icebp
ljmp
je
movsl
xor
sub
add
cmc
sbb
ja
inc
pop
lods
fwait
pop
pop
mov
or
jb
or
inc
fidivrl
jle
scas
cs
mov
imul
cld
cs
test
xchg
dec
addb
adc
mov
das
std
enter
arpl
inc
arpl
and
aaa
sar
scas
rcr
xor
dec
lods
and
jo
les
xchg
iret
roll
xchg
mov
sbb
pop
cmpsl
xlat
xchg
leave
inc
sbb
jecxz
pop
lcall
stc
jmp
inc
lahf
cmp
push
mov
xchg
mov
mov
cmc
cmp
push
ret
xlat
inc
lea
jo
push
mov
add
fidivrs
popf
imul
loop
arpl
lcall
pop
test
pop
data16
cmp
pop
div
and
mov
push
leave
aas
mov
sub
sbb
out
ja
shrl
insl
add
fbstp
pavgw
rcll
sub
pop
push
jl
xchg
inc
push
shrl
adc
fisubs
adc
jp
std
add
sub
movsl
fidivl
arpl
rolb
fistl
icebp
into
aas
mov
sbb
add
test
dec
clc
lret
adc
ljmp
xlat
push
cmp
sahf
imul
loopne
lods
sahf
push
or
out
mov
pop
sbb
add
push
mov
movsb
add
pop
ja
jne
xor
leave
call
push
mov
mov
cltd
pop
sbb
sbb
stos
or
cmp
sti
jmp
fwait
sub
mov
std
push
sbb
mov
int
in
push
push
jle
sbb
lock
jbe
xchg
pop
cld
cmp
mov
adcb
flds
stos
push
xlat
or
jmp
mov
mov
sbb
ret
push
movsb
filds
cmp
xchg
dec
add
pop
sti
mov
scas
jne
mov
jl
dec
cmp
shlb
dec
mov
jle
in
shlb
stos
xchg
mov
fidivrs
add
movsb
mov
dec
imull
ret
and
adc
xor
lods
in
xchg
inc
cmpsb
push
cld
push
cmp
pop
push
push
aaa
sti
dec
mov
lds
push
push
adc
or
aad
out
repnz
xor
jnp
cwtl
jmp
add
jl
repz
add
mov
adc
sub
mov
ja
and
cmp
rol
or
scas
jbe
andnps
inc
push
ss
mov
push
sarb
icebp
mov
shl
mov
cmp
sbb
xorl
cld
mov
in
inc
std
imul
cwtl
aad
inc
and
mov
imul
xor
jo
loop
sbb
push
pop
mov
arpl
mov
add
xor
sbb
sahf
mov
jl
pushf
cmp
dec
jmp
fildll
mov
test
mov
repz
dec
pop
lret
icebp
sbb
lahf
xor
clc
dec
test
pop
mov
ss
jnp
add
mov
arpl
test
fidivrl
jg
data16
repnz
sbb
cmp
es
out
fmul
popf
jae
or
jp
push
jmp
mov
faddl
rorb
mov
xchg
int
mov
icebp
pop
dec
push
pop
jnp
test
or
hlt
or
cmpsb
sub
push
loope
sub
inc
jecxz
inc
mov
add
insl
into
popf
or
jbe
jecxz
sbb
rorb
sbb
xor
sub
inc
das
ja
jbe
inc
sub
hlt
fistl
dec
sub
mov
push
add
sbb
or
call
inc
daa
arpl
jb
fs
xchg
jge
or
mov
mov
fstl
xlat
ljmp
push
mov
loop
sbb
xchg
xchg
aaa
cmp
out
lcall
cmp
lods
pop
cmovnp
xchg
arpl
mov
push
aam
test
or
sbb
dec
out
and
ret
notb
cmp
popa
in
mov
pop
pop
fiadds
and
sahf
neg
icebp
pop
xor
inc
lock
iret
xchg
inc
fadds
sbb
mov
filds
and
or
ds
int
xchg
and
xor
scas
or
iret
jb
insb
sub
iret
xor
lcall
mov
mov
jmp
xchg
xchg
in
mov
adc
in
mov
jo
lods
leave
fwait
jmp
lds
push
repz
xchg
xor
jmp
push
into
lods
std
pop
imul
mov
lret
lahf
xchg
loop
xorl
lcall
mov
xor
inc
out
adc
add
stos
lds
cwtl
dec
mov
js
fidivl
lds
in
leave
cmp
pop
adc
insl
pushf
pop
push
xor
pop
push
fnstenv
pop
inc
fstpt
outsb
data16
pop
add
pop
enter
aaa
or
daa
dec
in
adc
mov
and
and
clc
and
mov
pop
add
adc
and
jecxz
jecxz
lds
sub
hlt
test
or
adc
mov
add
sti
dec
sub
push
es
outsl
imul
faddl
mov
adc
push
popa
push
aam
adcl
fs
lcall
mov
ds
fwait
inc
push
xor
out
out
rclb
dec
jmp
jle
pop
or
insl
pushf
jp
ljmp
xlat
incl
mov
inc
pushf
dec
sbb
int3
adc
inc
addb
orl
clc
and
jbe
jp
in
dec
adc
movsl
xchg
insb
sub
sub
lcall
or
sbbl
xorb
dec
dec
inc
inc
mov
and
lahf
js
inc
xchg
lock
jbe
jecxz
and
cmp
fadds
aam
aas
pusha
xchg
mov
nop
mov
push
cmp
lds
and
mov
xchg
jno
xchg
lock
push
rorl
xor
sbb
stc
and
scas
push
sub
cmp
mov
mov
push
sub
mov
sub
jge
sbb
in
jns
xchg
arpl
icebp
cmp
xlat
add
jge
cmp
sub
pushf
fwait
xchg
inc
cmp
or
xor
cmp
shrl
loopne
icebp
arpl
mov
push
int
jbe
mov
rorb
push
je
icebp
mov
push
das
out
fidivrs
xor
jg
cwtl
mov
addb
dec
shr
loope
xor
adc
adc
xchg
aas
ret
aaa
pop
pop
adc
ja
pop
fisubs
pop
test
jp
loopne
test
cld
test
xor
bound
mov
xchg
jno
dec
stos
jmp
imul
mov
out
outsb
daa
rcl
sti
aas
adc
out
pop
cmpsb
mov
arpl
mov
test
cs
push
xchg
in
outsl
mov
pop
jns
out
pusha
shll
js
mov
pop
push
jnp
cmp
jae
mov
ficomps
mov
mov
add
cwtl
fmuls
push
aad
ja
mov
lea
frstpm(287
enter
sub
stc
loopne
xchg
jb
inc
pop
dec
mov
mov
adc
fidivrs
and
test
adc
cwtl
popa
lahf
pop
inc
mov
or
mov
sahf
stc
or
mov
dec
xchg
dec
adc
sbb
mov
cmpsl
mov
addr16
jb
incb
ret
add
jo
dec
fwait
test
dec
addr16
pop
or
pop
xchg
icebp
jle
iret
je
inc
ret
and
pop
jno
xor
lret
pop
xlat
in
push
mov
push
jge
js
jb
outsb
rcrb
lahf
mov
pop
push
lret
dec
std
jmp
movsl
jno
aam
inc
xchg
ljmp
xchg
pop
dec
repz
pusha
test
and
pop
cmpsb
lods
push
cmpsl
bound
into
ss
cltd
xor
repz
mov
sbb
pusha
sti
outsb
inc
pop
fstpl
cli
pop
pushf
sbb
fwait
push
xchg
ret
add
mov
pop
pop
mov
dec
push
dec
mov
xchg
or
sarb
loopw
pop
pop
test
dec
mov
lret
addr16
data16
pusha
xchg
test
dec
jns
cmc
xchg
jb
ret
jns
movsl
xchg
mov
es
push
inc
mov
fwait
pop
mov
cmpb
test
shll
fidivrs
pop
daa
fldenv
std
daa
stos
lret
imul
test
push
push
mov
jl
and
mull
clc
jnp
jmp
push
lret
gs
movsl
push
and
push
add
and
subb
mov
sbb
adc
adc
add
mov
shlb
fucom
test
imul
mov
inc
hlt
in
lods
jns
adc
out
arpl
pop
daa
shlb
iret
hlt
leave
fwait
mov
fdiv
adc
push
popa
inc
icebp
inc
xchg
sub
cmp
jne
jns
test
lods
push
addb
jmp
and
cltd
sub
ds
in
pop
movsl
aad
xor
add
fs
outsb
xor
mov
out
shll
bound
js
xchg
mov
jno
test
mov
pop
les
lcall
push
xchg
mov
divb
jmp
aaa
mov
jno
mov
jo
pop
loop
mov
sub
jge
push
jo
push
xchg
mov
mov
test
orb
into
mov
mov
ret
fmuls
dec
inc
push
faddl
movsb
icebp
ja
fwait
dec
xchg
ja
ficompl
cmp
stos
pop
in
mov
mov
mov
out
pop
mulb
mov
mov
sbb
repz
test
xor
add
and
inc
les
mov
mov
push
fstl
es
int3
das
add
cmp
pusha
mov
push
sub
inc
inc
aaa
mov
imul
push
pop
xchg
mov
popa
sbb
inc
add
hlt
cmp
js
mov
rcl
or
cmp
aaa
loope
jl
pop
cmp
xchg
mov
nop
jo
rcrl
dec
or
ds
cmp
push
or
int3
daa
cmp
outsl
scas
fistpl
xchg
mov
add
decl
add
lahf
mov
incb
xor
mov
sub
cmpsl
jle
mov
jg
mov
addr16
jbe
mov
dec
cmp
jnp
pop
in
cwtl
aad
mov
inc
cwtl
pop
xchg
lods
leave
dec
jge
cltd
sbb
gs
push
push
push
cltd
or
ja
lcall
jmp
je
pop
push
clc
push
daa
out
cwtl
popa
dec
jmp
adc
adc
sbb
cld
inc
or
fistl
cmp
data16
aaa
pop
xchg
idivb
aad
clc
insl
or
dec
jns
jb
mov
push
mov
mov
addr16
rclb
int3
pop
mov
dec
inc
das
xchg
aas
inc
and
movsb
and
int3
xlat
bnd
push
aaa
clc
xchg
adc
out
and
jb
dec
les
sub
cwtl
mov
aad
out
pushf
mov
cmpsl
jmp
les
pushf
fcmovnbe
outsl
in
inc
push
into
or
pop
sbb
pop
pop
jne
pop
and
nop
scas
fsubp
out
arpl
add
xchg
das
xchg
add
ss
or
cmp
mov
mov
sahf
mov
push
call
ljmp
int3
pop
imul
push
jbe
sbb
movsb
inc
add
cmp
dec
addr16
lret
movl
inc
pop
dec
arpl
stc
scas
jecxz
mov
int3
aad
loopne
cmpsb
mov
shlb
and
bound
lret
or
test
mov
or
jle
or
leave
mov
xor
movsl
xchg
or
cwtl
and
adc
shlb
mov
aaa
mov
andl
mov
and
rcrb
add
pop
imul
shlb
pop
mov
jmp
or
jae
and
out
dec
mov
dec
pop
repnz
push
lcall
clc
in
mov
movsb
mov
sbb
mov
mov
int
add
addr16
mov
in
pop
call
xchg
pusha
dec
pop
adc
mov
je
rol
repz
out
gs
addr16
inc
stos
and
dec
mov
pushf
or
call
add
xchg
or
adc
xor
xchg
stc
mov
cmp
imul
icebp
mov
in
sub
imul
push
cwtl
push
cmc
call
mov
mov
and
nop
jecxz
adc
into
loop
xor
push
repz
xchg
stc
leave
cltd
push
or
xor
sub
ss
stos
or
mov
xchg
shrb
pushf
test
add
cwtl
pop
xchg
test
or
in
push
sbbl
mov
or
or
clc
movsb
sub
fsts
add
inc
fcmove
ljmp
jecxz
mov
les
pusha
fbstp
mov
fnstcw
data16
mov
je
mov
in
lds
push
xchg
push
jnp
cmp
jp,pn
loope
test
out
lea
fwait
lcall
test
nop
mov
fwait
bound
jb
aam
or
sbb
sbb
rol
or
test
push
fisubrs
test
je
push
push
jge
inc
ret
xchg
jo
mov
xchg
pop
xor
clc
inc
sub
movsb
pop
sub
mov
aaa
pushf
mov
sbb
jge
leave
xor
inc
sahf
adc
out
ret
cmp
popa
cli
stc
inc
dec
xorb
push
daa
mov
movsb
popf
inc
adc
pop
push
mov
or
mov
das
or
xchg
in
stos
stos
bound
push
negb
cmp
mov
inc
xchg
mov
cmp
dec
add
inc
jno
roll
mov
or
cld
cltd
lock
fisttps
fsubl
outsb
sub
sbb
sbb
dec
push
imul
mull
jo
and
mov
jecxz
adcl
jbe
lahf
cld
push
bound
mov
dec
addr16
pushf
inc
inc
cltd
adc
xchg
into
jge
dec
notl
aam
xchg
mov
cwtl
shl
xchg
adc
jnp
cmp
lds
push
push
add
sbb
pop
push
loop
out
loopne
js
leave
mov
dec
mov
lahf
pop
addb
sbb
push
add
pop
jo
cmp
inc
imul
jns
add
adcb
fimuls
pop
aaa
xchg
lret
push
jb
push
or
add
aas
ficomps
mov
pop
mov
mov
ficomps
in
or
enter
out
jg
pop
aad
out
jnp
pushf
push
out
adc
push
push
adc
lahf
jle
lahf
push
test
sti
shll
jno
fcomps
sahf
jno
xor
shl
out
sbb
inc
daa
cmc
add
inc
jle
adc
dec
sbb
pop
sbb
fisubl
test
mov
push
sbb
addr16
pop
inc
loope
jg
xchg
aas
adc
aas
sub
xor
mov
mov
add
adc
push
jne
mov
movd
jnp
xchg
fnsave
movsl
dec
aad
push
push
pop
into
fs
cmp
enter
pop
sub
dec
inc
pop
and
and
imul
push
and
nop
mulb
jp
push
pop
out
dec
scas
ljmp
aas
sub
shrl
add
push
lcall
je
sbb
fnsave
sub
adc
clc
xchg
xchg
push
ret
popa
xchg
dec
shrb
mov
mov
arpl
out
arpl
ret
xchg
mov
jp
adc
inc
fdiv
mov
int3
cmp
ds
pop
or
movsl
and
dec
pushf
aam
fwait
sub
repz
inc
pop
scas
sub
and
mov
out
push
and
rcl
in
sti
dec
pop
sahf
test
add
xchg
cmp
lock
icebp
arpl
adc
push
ror
cmp
xchg
jbe
cmpsb
fistps
add
ds
out
lcall
leave
pop
adc
ficoms
out
push
or
nop
cmc
pushf
xchg
ljmp
cltd
jmp
imul
inc
xchg
cmp
pop
cltd
sbb
jp
add
dec
mov
fstpl
pop
cwtl
jge
sbb
scas
outsb
outsl
dec
xchg
mov
lock
cmpsl
mov
mov
mov
xchg
or
sahf
out
mov
mov
repnz
insl
jns
adc
test
out
cmp
fadd
inc
or
sub
sahf
xchg
mov
pop
push
popl
adc
movsl
loop
decl
outsl
cmpsl
push
out
cmp
adc
shlb
popa
ret
je
nop
addl
in
scas
enter
push
clc
test
out
hlt
pop
imul
dec
xor
notl
jns
dec
mov
cli
cmp
jge
out
push
mov
lods
pop
test
loopne
push
xorb
imul
insl
push
loopne
mov
or
fs
dec
jns
in
lds
in
sbb
lock
je
xchg
cli
aas
jl
push
nop
fwait
and
and
xchg
das
out
pop
pop
pop
rorl
cmp
push
mov
aas
test
mov
push
lea
sbb
or
out
pshufw
jnp
sbb
aad
pop
push
pop
stos
mov
je
imul
sub
shl
adc
ljmp
movsb
dec
add
dec
popa
xorl
inc
dec
push
pushf
jno
je
push
dec
or
adc
leave
xor
mov
mov
and
dec
mov
outsb
gs
jmp
aad
push
test
sarb
and
xchg
lahf
mov
ds
xor
mov
push
aad
xchg
adc
nop
fwait
add
jo
aas
xor
scas
out
pop
imul
mov
push
sbb
push
inc
mov
jb
cmpsl
lahf
fcmovnb
mov
pop
sahf
mov
dec
lds
imull
ret
inc
sub
mov
adc
xchg
adc
sub
mov
imulb
jle
cmp
popf
ret
test
cld
mov
and
mov
jae
sub
clc
add
mov
cmpsl
inc
jmp
pop
lcall
pop
xchg
jl
cltd
int3
pop
and
inc
mov
je
cmpsb
les
and
sub
ret
sbb
stc
out
adcl
scas
test
jne
and
pop
int
ret
cmp
or
push
outsb
jb
inc
sbb
inc
add
je
jb
sbb
icebp
mov
mov
dec
xchg
jae
inc
movsl
imul
dec
pop
ja
push
inc
pop
or
leave
inc
insb
popa
cmpsb
inc
scas
pop
xor
iret
popa
fmuls
jns
aas
xchg
scas
js
aam
pop
or
mov
movsb
pop
hlt
out
inc
mov
fadds
cmc
jae
or
pop
dec
nop
repz
or
mov
add
xor
sub
push
mov
shl
ss
jp
repz
add
incl
repnz
in
fnstcw
in
fistpl
mov
repz
test
dec
mov
pop
jae
sbb
push
dec
clc
ljmp
out
sbb
in
test
pop
aad
fstl
div
or
fdivrs
aad
lock
sbb
dec
xor
pop
dec
test
xchg
dec
push
into
and
es
xchg
fldl
pop
xchg
dec
imul
and
sbb
mov
add
int
loope
icebp
scas
pusha
in
mov
mov
sub
sti
sbb
jge
popa
jbe
sahf
jg
lret
testb
in
popa
mov
lods
pop
mov
and
arpl
adc
scas
inc
dec
test
adc
sub
mov
fcomi
mov
or
popa
incb
std
add
mov
push
pop
pop
addb
inc
sbb
push
xor
adc
dec
nop
cwtl
mov
out
icebp
aas
cmc
rcl
sbb
imul
cmp
fwait
xor
pop
sub
jne
fistl
inc
pop
imul
inc
testb
shlb
adc
jo
insb
test
pop
push
add
fbld
jo
fsubr
movsb
out
int
std
out
xchg
out
lods
xchg
dec
jl
add
rcll
mov
sbb
mov
shlb
push
mov
call
sti
iret
mov
inc
xchg
shrl
leave
cmc
push
lds
jns
jno
xchg
mov
and
or
repz
push
cli
xor
shll
movsb
clc
sub
dec
imul
and
mov
mov
icebp
cmc
negb
or
cmp
mov
or
jmp
dec
imul
mov
xor
inc
rclb
and
lock
fsubl
loope
fistpl
push
outsb
enter
pop
out
mov
into
cmp
mov
cmc
xchg
repz
out
mov
cltd
mov
dec
imul
and
mov
idivb
mov
adc
add
push
xchg
jg
cmp
adc
fwait
mov
es
sbb
aad
lea
jns
pop
repz
mov
dec
not
sti
mov
popf
cmp
xor
iret
in
repnz
lods
les
ljmp
sub
out
loopne
cmpsb
xor
push
dec
add
push
dec
dec
mov
and
ss
and
out
and
mov
dec
sbb
add
js
out
or
arpl
ret
data16
cwtl
push
lea
inc
fwait
mov
mov
push
mov
dec
scas
ss
icebp
les
mov
test
aad
std
push
dec
pop
int
jle
cmp
enter
pop
test
adc
shll
cwtl
cmp
dec
es
test
xor
pop
inc
int
out
mov
push
sub
or
call
jmp
fisubs
jge
push
xor
adc
mov
pop
adc
imul
inc
and
pushf
dec
leave
cwtl
sbb
adc
stc
inc
mov
lret
inc
wbinvd
jl
pop
jae
mov
int3
mov
jns
cld
mov
xchg
mov
in
pusha
sbb
or
pop
adc
add
loopne
push
lods
loop
dec
or
loopne
lods
outsl
inc
fsubrp
jns
leave
js
lahf
xchg
outsl
sub
lds
imul
lret
clc
shr
mov
sbbb
ret
sarl
shlb
inc
mov
cld
mov
popf
ds
inc
ljmp
or
les
mov
xchg
andb
mov
jns
jnp
aaa
fcoml
aaa
jnp
in
xor
loope
aad
jae
or
incb
aas
mov
dec
sub
cmp
sahf
js
inc
lods
mov
dec
test
icebp
push
mov
inc
stc
jp
and
jg
dec
call
jbe
add
xor
movsl
lahf
sub
or
mov
sub
call
mov
add
sub
enter
pop
cli
mov
fisubrl
pushf
jge
push
imul
mov
cmpsb
or
sbb
jge
test
bound
dec
pop
jg
mov
into
int
shlb
in
rolb
sub
stos
push
ret
xchg
dec
xor
push
adc
mov
jl
xor
xor
outsl
pop
pop
data16
out
push
outsb
dec
xchg
dec
mov
rcr
cmp
push
cltd
pusha
in
popa
xor
sub
icebp
mov
inc
iret
clc
or
pop
sti
rcl
xor
in
out
ss
inc
add
mov
shll
xor
pop
mov
cmp
aas
stc
xor
xor
pop
add
je
pop
ds
lcall
sbb
xchg
and
into
aas
inc
or
fs
imul
push
gs
inc
imul
jge
inc
repnz
sbb
push
test
push
lret
notb
cmp
call
js
inc
jns
jle
out
clc
adc
clc
dec
ljmp
sbb
cmp
add
fwait
sbb
sahf
lret
inc
rcll
pop
popf
je
jbe
sub
jecxz
and
imul
jnp
or
arpl
mov
std
pop
bound
push
fisubl
jnp
mov
sub
add
jbe
divb
iret
mov
cmp
cld
dec
adc
xchg
and
push
test
les
out
dec
jge
and
inc
pop
aam
push
push
xchg
loop
mov
add
idivl
les
adc
gs
push
mov
fstpt
in
sbb
fnstenv
mov
lret
mov
lods
mov
int
test
ret
push
cmc
xor
xor
inc
rcr
gs
or
xchg
add
loopne
jb
sbb
lds
lret
adc
std
lea
xchg
sub
out
cmpsb
push
pop
mov
jbe
repnz
movsb
sub
mov
in
inc
inc
dec
ljmp
or
cmpsl
mov
and
lret
xchg
push
cmp
mov
cmp
pop
test
in
rolb
pop
jp
fcoms
mov
lcall
cmp
jg
fisubs
lea
ret
inc
xchg
ja
cmp
lret
or
push
mov
sahf
pop
jmp
push
and
mov
hlt
jb
xor
push
xor
adc
out
dec
mov
sub
cmpsl
cmp
pusha
in
mov
pop
in
or
lcall
movsb
stos
jl
outsl
xor
sti
jl
pop
mov
pushl
scas
cmp
jno
aaa
adc
cs
push
sub
rorb
and
sbb
test
pop
aad
mov
pop
jne
data16
push
push
add
lock
sti
test
mov
sub
fwait
mov
dec
jp
test
inc
jbe
test
das
rclb
out
jbe
lcall
mov
sub
xor
jmp
adc
xor
mov
dec
sub
add
das
inc
adc
push
xlat
mov
pop
pop
sti
jb
mov
cwtl
fistpl
ret
fists
add
sarl
dec
mov
das
inc
xchg
shll
mov
mov
stos
cwtl
fldcw
pusha
std
pushf
fcomps
push
cwtl
loope
pusha
out
loopne
mov
mov
xchg
sarb
cmc
clc
add
and
bnd
pop
jnp
jecxz
adc
mov
mov
cmc
mov
sbb
fcmovnb
ja
rcll
ret
fdiv
push
or
mov
fsub
inc
sub
std
outsl
int3
adc
jne
loopne
mov
xchg
mov
adcb
out
repz
fidivrs
jg
or
pop
xor
sbbl
inc
mov
pop
lock
dec
jecxz
inc
gs
loop
in
and
ret
scas
mov
pop
cmp
cmpsl
packuswb
ja
rol
xchg
push
or
adc
nop
subl
out
loope
les
jl
mov
ret
ds
aaa
leave
cli
movsl
fstps
mov
and
call
mov
in
sti
pop
fsubs
lcall
js
mov
gs
in
mov
mov
dec
push
cmp
push
popl
xchg
adc
insl
jmp
adcl
mov
fstpt
mov
or
mov
sbb
and
leave
fsts
or
or
xor
and
or
repz
mov
xchg
bound
andb
mov
roll
out
lcall
nop
into
fmuls
cld
fiaddl
add
adc
adc
std
adc
push
push
bound
mov
int
mov
sub
jl
add
sti
sub
jg
sub
scas
or
push
ret
jg
xor
pop
and
sbb
add
adc
mov
xor
call
jecxz
jecxz
adc
sub
shrb
push
xchg
sar
mov
fistl
repnz
ffreep
in
mov
dec
add
out
adc
es
xchg
imul
imul
push
stos
mov
lock
das
adc
pop
hlt
or
dec
dec
insl
aad
or
in
fstp
mov
push
out
lods
roll
and
je
popa
dec
movsl
mov
inc
jmp
sbb
dec
inc
mov
mov
neg
jbe
and
dec
ror
pop
das
mov
xchg
mov
xor
push
jecxz
les
jns
mov
psrld
or
push
jl
adc
add
fidivs
mov
jne
negl
inc
sarb
jo
push
idivl
jecxz
call
push
inc
es
mov
ljmp
repnz
dec
cmp
jle
jbe
push
push
or
mov
mov
fistps
fldl
outsb
cmpsl
sub
jne
jb
xchg
inc
and
addb
out
dec
adc
fstl
inc
and
mov
pop
pop
xchg
mov
sti
mov
or
test
or
xor
aas
das
xlat
and
xor
loope
nop
jbe
fmul
add
pusha
xchg
xchg
movsl
sahf
pop
mov
gs
or
dec
es
xor
fldenv
cld
xor
xchg
sarb
jns
mov
rcr
adc
in
loopne
in
dec
push
lods
mov
cmp
and
add
cs
and
mov
daa
or
pop
call
aas
pop
pop
mov
pop
sub
jle
inc
in
mov
adc
jbe
add
xor
into
push
or
scas
add
pusha
pop
shlb
jo
hlt
or
in
mov
imul
pop
mov
sub
nop
mov
movsl
sub
imul
iret
ret
outsb
xchg
into
push
int3
lahf
divl
xor
ret
shl
hlt
cs
aaa
mov
pop
xchg
sahf
es
add
setne
shll
ss
and
or
mov
scas
sub
jo
push
adc
xchg
inc
xchg
ljmp
leave
int
jle
mov
xchg
imul
imull
movsb
mov
lret
sbb
dec
lds
mov
mov
xchg
out
or
enter
jmp
push
cmp
mov
xor
mov
adc
in
and
push
es
pop
cmc
dec
call
mov
js
cmp
cmp
addl
mov
sti
or
fs
gs
shlb
add
sti
aas
shll
dec
addr16
mov
adc
test
push
nop
inc
mov
pop
xor
xor
rcrl
inc
lahf
xchg
cwtl
push
jmp
movsl
push
push
mov
fldcw
ljmp
fimuls
mov
and
out
lahf
push
xor
sbb
inc
bound
mov
mov
and
sub
addr16
sub
aad
add
xlat
imul
push
shrb
mov
cmp
pop
or
pop
cld
pop
ficompl
mov
hlt
or
sbbl
pusha
push
xlat
arpl
stos
push
or
aam
mov
in
add
mov
idivl
je
inc
jae
xchg
adc
mov
dec
or
push
mov
xchg
add
cld
mov
pop
ljmp
xlat
ficomps
sbb
lret
loope
clc
xchg
lds
mov
ds
and
push
push
loopw
mov
sub
fwait
and
adcb
ror
dec
pop
mov
dec
loopne
cmp
jbe
scas
sbb
scas
mov
xchg
repz
fsubr
leave
fldcw
lcall
sbb
jno
sbb
mov
sbb
iret
cmp
adc
and
sub
es
mov
pop
sbb
and
and
aad
fisttps
sti
outsl
mov
aam
lret
add
outsb
fwait
mov
repz
out
add
jno
mov
popf
cmp
jl
add
inc
scas
push
pop
and
loop
lods
das
enter
adc
sbb
jb
sub
imul
cmp
and
test
aaa
and
lahf
cmp
arpl
pop
jg
and
negb
mov
or
lret
or
sub
int
lds
mov
pop
push
hlt
mov
mov
push
sub
insl
push
and
ss
or
fnsave
addr16
push
cmp
pop
inc
jno
jp
and
adc
mov
sahf
mov
or
rorl
aaa
mov
xor
jbe
lret
sbbl
cltd
and
inc
jmp
sbb
jae
test
mov
sbbb
loope
clc
clc
sub
movsl
out
imull
mov
scas
adc
mov
scas
sti
js
mov
mov
loope
mov
das
pop
mov
jle
fisttpl
cmc
push
icebp
xor
je
push
sbb
outsl
cld
jp
mov
jle
inc
mov
jle
cld
fwait
or
negb
sahf
or
xor
mov
sub
mulb
aaa
fnstenv
cmp
dec
test
inc
xchg
dec
andb
inc
xor
lret
lahf
lods
jg
push
xor
push
xor
push
or
and
jg
and
pop
mov
addr16
xchg
les
or
fcoms
or
adc
jl
fsubs
les
mov
out
push
mov
out
imul
add
cmpsl
adc
adc
xchg
stc
inc
lret
mov
mov
jbe
aad
pop
xchg
inc
xchg
test
sbbb
ljmp
rorl
test
sbb
in
hlt
inc
mov
jp
and
jno
ds
xchg
dec
ret
jno
sub
orb
sahf
cmp
sub
iret
mov
sub
xchg
sahf
lea
ja
jne
sub
xor
add
and
or
cld
lahf
icebp
pop
inc
insb
in
scas
movsb
cmp
jbe
rol
jns
adc
lret
dec
lea
mov
mov
fs
les
out
sbb
push
ret
lods
pop
sbb
jge
loope
daa
rcrb
jmp
jae
fwait
out
stos
adc
insl
or
lret
dec
pop
xchg
mov
popf
jne
fucomip
push
sub
mull
outsl
fisubs
idivb
add
push
lods
in
dec
shlb
cmpsl
test
lea
mov
xchg
aaa
fbstp
dec
xchg
mov
mov
nop
cmp
rolb
cmp
aad
or
jae
mov
mov
cs
pushw
cltd
xor
jg
mov
sub
repz
pop
xor
jge
cmp
and
push
xchg
xchg
aam
and
stos
ss
outsl
xchg
inc
fiadds
cmp
fstl
mov
ret
and
sbb
xchg
jecxz
add
aas
aam
or
cmpsl
pop
inc
cwtl
sti
test
sub
push
xor
sti
out
xlat
add
rcll
mov
fadds
sarl
push
or
pop
pushf
mov
int3
pop
shlb
test
pop
push
mov
jp
push
add
popa
stc
idivl
arpl
xor
lret
daa
gs
in
jne
loopne
inc
sbb
sbb
and
cmp
jns
leave
adc
mov
loop
jae
inc
jle
sbb
mov
dec
jb
push
sti
jb
cmp
mov
rclb
mov
fisubs
lret
sbbl
icebp
sbb
stos
pop
push
aad
fldl
fistl
cmc
adc
stos
stos
push
cs
or
jg
jge
add
pop
mull
inc
lcall
mov
xchg
popa
add
jo
cmp
inc
imul
hlt
lds
fs
mov
mov
mov
cmp
ljmp
mov
cmp
ss
pushf
xchg
je
push
pop
enter
pushf
sar
shl
sub
mov
cmp
in
out
xchg
aad
mov
jne
adc
push
adc
mov
xchg
xor
out
shrl
sub
sbb
scas
jo
daa
xor
jb
lea
scas
push
lcall
cld
push
or
sahf
std
xchg
out
push
pop
inc
aaa
jno
sarb
dec
sahf
lret
arpl
push
jo
lret
outsl
repnz
ss
subl
cmc
sbb
pop
jmp
xchg
xor
push
jns
adc
ljmp
push
out
and
and
jmp
lods
pop
mov
mov
movsl
push
sbb
aaa
mov
mov
sti
out
rclb
ja
push
or
repnz
xor
aas
add
inc
xlat
mov
and
inc
sbb
aaa
mov
jecxz
dec
ret
mov
insb
rol
ja
out
cmp
lea
in
call
xchg
xor
imulb
jo
loop
arpl
add
mov
push
inc
mov
lahf
sbb
xchg
stc
in
mov
and
cmp
movsb
rorl
cmp
mov
push
adc
bound
gs
xchg
dec
mov
stos
cmp
fmulp
push
repz
push
arpl
jecxz
int3
cmpsl
push
or
add
icebp
sbb
jmp
ret
bound
and
vpsubsw
add
cmc
jnp
inc
sub
ds
pop
popf
and
sbb
scas
push
push
fldt
das
mov
push
adc
sub
and
ja
xlat
inc
fldenv
jle
adc
xchg
aam
and
shll
dec
dec
in
jbe
xchg
xchg
cmp
push
mov
and
insb
push
ja
mov
and
fld
loop
and
and
cli
int
add
mov
lods
loope
lods
in
xorl
scas
dec
xor
out
mov
or
sarb
push
add
mov
lret
out
adc
shlb
sbb
cld
adc
test
roll
xor
dec
jmp
popa
dec
adc
jg
aaa
push
push
testb
adc
xchg
loop,pt
and
xor
xor
dec
leave
lahf
inc
adc
jae
sbb
mov
jl
adc
sub
dec
call
flds
mov
inc
inc
mov
sahf
mov
jnp
popf
mov
sbb
mov
aaa
mov
pop
notb
cmp
fcmovne
mov
sub
adc
pop
sbb
loopne
dec
add
inc
or
jp
es
and
adc
cmp
mov
xchg
push
dec
pop
sbb
sub
mov
sub
xchg
fst
add
movsb
sbb
add
mov
push
dec
daa
push
mov
pop
cmp
gs
dec
mov
notb
insl
xor
adc
jns
pop
sbb
adc
push
frstor
das
lods
push
pop
inc
into
xor
inc
add
sbb
data16
hlt
rclb
popf
mov
push
jne
jecxz
inc
bound
shr
and
sbb
insl
mov
imul
lds
pop
test
mov
mov
daa
outsl
and
xchg
mov
gs
or
xchg
jne
dec
outsl
iret
daa
cld
mov
xor
mov
sub
in
sbbl
mov
in
mov
scas
inc
xor
int3
arpl
sbb
js
push
pop
jae
repnz
imul
pop
lods
lahf
or
inc
popa
mov
clc
int3
xor
xchg
shr
lods
fstpl
das
add
loopne
loop
add
into
js
cmpsl
xchg
mov
adc
add
xchg
js
add
std
jle
fldl
cltd
jmp
inc
ror
mov
bnd
sub
hlt
roll
fs
xlat
dec
pop
fdivs
lret
loop
inc
aaa
jbe
jge
xchg
mulb
or
xor
adc
sti
add
insl
outsb
scas
jmp
mov
adc
xor
pop
rclb
jl
jecxz
cmc
mov
cli
lea
add
jmp
push
loope
dec
push
xchg
mov
push
add
cltd
xor
cwtl
addl
xor
mov
xchg
mov
dec
dec
aad
test
in
shrb
jmp
push
popf
pop
movsb
lods
or
xchg
push
mov
mov
sarb
xor
in
orl
and
in
sbb
out
movsb
pop
push
xchg
pop
dec
cmp
xchg
push
je
insl
lret
aaa
scas
sti
mov
shrb
add
frstpm(287
adc
je
dec
shlb
pop
pop
call
dec
aad
imul
mov
inc
dec
fsts
xor
mov
inc
push
xchg
cmpsb
daa
lahf
pop
cmp
mov
out
ja
mov
mov
push
lret
cmc
add
xadd
out
pop
mov
or
arpl
lea
add
mov
dec
mov
pop
out
flds
add
and
test
and
test
loop
je
sub
scas
fcomi
cmc
popa
mov
inc
push
cmp
pop
adc
bound
xor
sbb
jmp
cmc
add
bound
sub
repnz
pop
cmp
mov
in
fsubrl
cmp
jg
movsl
lcall
loop
cmp
mov
mov
mov
into
daa
jmp
mov
mov
mov
fs
ret
in
sahf
xchg
lds
dec
push
scas
or
pushf
out
call
fdivl
mov
test
in
test
jb
jne
pop
idivb
cmc
xor
mov
pop
sub
sahf
pop
or
notb
movsl
cld
mov
popa
cltd
addr16
mov
or
lret
adc
fnsave
popa
cmp
sarl
cmc
xor
out
inc
or
shlb
mov
cli
inc
add
rcll
push
in
jno
aad
mov
push
push
jg
addr16
pop
xchg
cltd
or
xchg
inc
sub
xor
les
mov
insb
outsl
dec
mov
push
and
sub
xchg
dec
filds
cltd
xchg
cli
sti
mov
sub
add
or
out
cmc
pop
lret
lea
dec
out
pop
nop
lea
xor
into
inc
sbb
xor
jp
fbld
and
jo
lahf
outsb
mov
shlb
lret
mov
add
adc
test
stos
movsb
lods
loopne
pop
ja
pop
inc
fiadds
lret
sbb
inc
push
pop
push
cmp
jp
fidivrs
in
adc
dec
mov
rolb
fwait
sub
push
aam
sbbb
or
jecxz
jb
mov
sbb
sbb
js
stos
push
jmp
or
insb
out
jne
mov
ds
push
jb
sar
or
mov
pop
inc
jmp
sbbl
std
mov
xchg
sbb
xor
or
sarl
jmp
arpl
fisttpll
dec
and
leave
in
dec
xchg
pop
insl
push
clc
xchg
jno
jne
sbb
andl
push
pop
mov
movsl
aaa
lock
cmp
or
lret
push
jle
pusha
sub
cs
sbb
scas
pusha
pop
rcrl
cs
fidivl
mov
imul
fcoms
mov
sarb
xchg
stc
xor
pop
into
scas
and
lret
xor
mov
stc
or
repz
fbld
xchg
dec
fwait
xchg
cmp
xchg
negl
lahf
jbe
push
fdivrp
xor
or
dec
test
dec
push
in
push
pusha
dec
jae
shl
mov
cmp
push
pushf
out
jg
repz
jl
daa
and
call
negb
lods
aad
mov
mov
add
mov
in
insl
das
fmul
pop
add
dec
inc
mov
pop
shr
xchg
aas
in
or
or
inc
addl
scas
or
mov
or
data16
and
mov
inc
ret
sbb
dec
lret
lret
ret
sbb
push
inc
incb
xchg
sub
in
cwtl
mov
test
add
pusha
ja
adc
xlat
mov
pop
fidivs
inc
in
mov
in
push
addl
ficomps
sbb
push
ljmp
push
lea
sub
lea
cmc
dec
xlat
adc
dec
jb
fsubs
ret
andl
out
pop
in
mov
test
pop
inc
je
dec
adc
icebp
push
mov
scas
push
xor
test
and
dec
mov
es
jno
sti
and
cltd
sub
je
in
shrb
and
adc
mov
rolb
loop
cmp
mov
jnp
lcall
push
lds
mov
mov
test
dec
dec
push
lcall
lret
or
mov
or
mov
scas
dec
or
out
jl
cmp
out
mov
inc
mov
cmpsl
ljmp
cmpb
sbb
movsl
mov
xchg
dec
sarb
push
ud1
ds
inc
cmp
cld
fs
in
hlt
add
bound
inc
fistpll
int
comiss
scas
loopne
pop
xchg
mov
sub
lret
add
icebp
sbb
pop
xchg
ret
outsl
adc
je
adc
pop
loopne
fucom
adc
orb
fldt
popf
imul
jns
mov
mov
push
outsb
inc
or
mov
mov
outsb
dec
mov
xchg
aam
fucomp
mov
sbbb
pusha
popa
fwait
mov
lods
adc
pop
dec
mov
pushf
or
repz
ss
lcall
jp
pop
add
vdivss
and
inc
xor
aad
aas
int3
cmpsl
lcall
add
sahf
les
pop
adcb
fcomi
nop
cmc
cmp
mov
bound
push
sbb
jle
icebp
pop
push
mov
cmpsb
mov
stos
push
push
push
jecxz
sti
scas
xor
out
jge
adc
xchg
cli
xchg
cwtl
adc
xchg
add
or
cmc
inc
fidivs
jecxz
repz
pop
aam
sub
rorb
push
xlat
into
je
fcmovbe
orl
stos
jmp
rol
in
call
inc
cmp
shlb
jne
shrl
xchg
mov
pushf
test
mov
pop
xor
mov
testl
int3
or
scas
cs
jg
mov
jnp
movsb
xchg
bound
push
pop
or
jp
sbb
add
mov
into
iret
jo
outsb
sub
push
cmp
ja
push
jl
fbld
loopne
pop
loop,pn
div
cmp
add
inc
xor
mov
scas
lahf
sti
and
aaa
setge
sub
jno
sahf
fnstcw
pop
outsw
lret
sbb
inc
pop
subl
mov
jne
mov
loop
outsl
loop
push
test
or
xchg
aam
dec
xchg
xor
fbld
push
mov
iret
rcl
mov
ret
sub
lods
aas
sub
inc
int
movsb
jl
cltd
in
out
mov
adc
xchg
pop
lret
test
sub
mov
rorl
adc
and
inc
inc
inc
hlt
add
mov
mov
in
jb
loop
cmp
and
repnz
test
pushf
sbb
xor
fimull
sar
or
cmp
jp
and
inc
repz
add
call
lret
repz
cmp
cmpsb
lea
cld
cmp
into
mov
dec
insb
shlb
adc
mov
jns
cld
cmp
sbb
int3
fsubrs
and
push
rcll
ret
mov
pop
push
ja
inc
nop
sbb
pop
push
sbb
sbb
sub
push
jmp
sub
fcmovu
imul
sbb
fs
orb
or
xor
ret
mov
lods
test
mov
pop
sub
or
divb
loope
jne
or
inc
sub
push
sub
xor
outsb
data16
imul
out
adc
insl
ss
sub
sub
aad
mov
test
ss
data16
ljmp
cmpsb
lea
and
push
add
out
fnsave
in
loop
lods
sub
cmp
inc
outsb
jle
out
mov
mov
outsl
pop
scas
adc
xor
les
in
movsb
rep
xchg
idivl
jnp
fcmovnbe
push
xchg
sub
inc
xor
popf
ret
jle
sbbl
movsl
sti
out
call
sbb
movsb
in
xor
sbb
aas
or
mov
jbe
mov
movsb
jle
std
rorb
pop
movsb
ret
cmp
xlat
jno
lea
call
push
push
mov
cmpsl
rorb
pusha
loopne
aaa
mov
pop
lret
pop
and
fcmovnb
adc
mov
stos
je
pop
xor
add
xchg
data16
imul
pop
cwtl
push
mov
rol
dec
into
ret
jp
iret
or
dec
mov
es
mov
dec
adc
cmpsl
fldt
dec
in
jl
cmp
or
pusha
and
cmp
or
pop
cmp
sbbb
sbb
fsubrl
gs
test
dec
jp
pushf
in
loope
popf
add
nop
daa
inc
lock
cmp
daa
aas
jp
mov
push
in
mov
mov
adc
jl
je
jmp
in
jmp
adc
ds
inc
nop
mov
mov
mov
sub
inc
and
inc
dec
ja
mov
jg
pop
ficoms
dec
scas
sbb
das
fsubp
xchg
iret
mov
nop
push
lods
mov
bound
loope
add
aas
xchg
repnz
or
inc
dec
lods
movsb
in
mov
sbb
push
fs
jp
cmpb
push
lahf
test
lahf
js
mov
jge
int3
xlat
xor
sub
je
xchg
loop
mov
sbb
addr16
xlat
pop
adc
and
mov
push
ja
inc
mov
xchg
fs
add
mov
fiadds
push
add
mov
sub
xor
xor
fbld
or
data16
push
lea
addr16
jne
movsl
mov
pop
hlt
adc
repnz
das
fstpl
mov
shrl
stc
jg
jnp
cmpsl
call
cmp
iret
or
or
mov
inc
mov
sbb
xchg
flds
in
xor
xor
adc
push
dec
bound
lcall
test
rclb
scas
dec
push
adc
dec
shl
int
lods
mov
aas
jle
incl
jnp
scas
sahf
jnp
aaa
pop
sbbl
xor
push
dec
ds
jbe
push
fwait
jecxz
gs
dec
fcompp
cmpsl
sub
movsl
sbbb
push
in
not
in
ja
repnz
test
sbbl
mov
mov
sbb
cltd
fnstsw
xchg
mov
push
xorb
rol
and
pop
jecxz
dec
mov
sahf
xor
in
sub
jns
cmpsl
outsb
adc
bound
sbb
cli
pop
dec
scas
int3
jl
cmc
pusha
jbe
cld
mov
std
mov
or
insl
int3
adc
lock
call
dec
scas
int
cmp
pop
push
sysret
cltd
scas
sahf
bound
jo,pn
mov
stc
dec
movsl
push
pushf
jae
cltd
mov
and
loop
jl
mov
repnz
xchg
lds
cmc
sbbl
pop
add
scas
mov
dec
pop
mov
arpl
in
andl
inc
movsb
xor
arpl
cwtl
xor
out
or
imulb
lret
dec
cmp
ds
xchg
xchg
nop
fwait
mov
leave
loop
dec
insb
xorb
jns
in
es
fcmovnbe
pushf
mov
negb
mov
pop
outsl
test
pop
popf
in
das
sub
xchg
andl
divb
mov
subb
sbb
jae
out
sbb
or
ftst
jnp
pop
xchg
test
pop
add
dec
loop
lea
adc
mov
inc
rcrl
and
and
jle
test
mov
les
fprem
pop
outsl
add
adc
test
sub
add
fiaddl
or
jmp
jle
xor
sti
jne
lods
mov
ret
roll
es
les
push
ret
xlat
rorl
xor
dec
lcall
add
mov
pop
scas
mov
icebp
std
out
adc
pushf
add
jae
xchg
mov
call
inc
in
jl
lock
dec
xor
dec
movq
xor
jno
int3
mov
or
lds
mov
daa
pop
mov
in
or
jp
ss
mov
lods
loope
adc
inc
into
jl
and
pop
or
pop
dec
add
clc
xorb
mov
out
adc
push
out
xor
and
dec
pop
sub
add
aam
mov
loope
sub
cmp
sub
ljmp
xor
xchg
inc
ja
js
bound
inc
in
dec
sbb
push
lock
stc
pop
sbb
cmc
dec
push
add
pusha
or
sbb
mov
fcomp
inc
pop
or
je
imul
xchg
mov
popf
lret
lret
lock
mov
xor
or
lcall
mov
adc
clc
xor
xchg
test
daa
push
mov
xor
arpl
or
or
shrl
adc
and
xchg
repnz
aaa
dec
mov
inc
je,pn
pop
adc
jge
ljmp
and
or
sbb
jb
shll
adc
push
test
push
adc
xor
adc
mov
or
mov
in
cmp
adc
mov
sbb
dec
jbe
into
das
jecxz
add
add
lea
cwtl
mov
mov
das
add
nop
lods
fistps
inc
pop
test
mov
sub
fadds
jl
pop
mov
pop
adc
mov
adc
xor
push
aam
pop
xchg
fucom
inc
cld
test
ja
push
mov
jle
lret
gs
mov
inc
xrelease
mov
jbe
shll
push
xchg
sbb
pusha
dec
sti
push
lods
add
pop
fldenv
sbb
shrl
fdivrs
dec
popf
pop
test
xlat
jge
sti
or
sub
cmpsb
add
inc
and
lock
movsb
push
popa
nop
ljmp
insb
shll
xlat
loope
inc
jne
sahf
sahf
mov
add
mov
cmp
mov
popaw
daa
pop
ljmp
sub
nop
fildll
xor
or
xchg
loopne
or
mov
imul
cs
add
push
fstpl
cmp
jbe
arpl
pop
pop
mov
push
sbb
jb
xorl
popa
pop
push
das
movsb
add
xchg
pop
or
cmp
pop
iret
dec
mov
lret
xor
dec
xlat
pop
mov
test
aas
jmp
sbb
lock
push
pusha
cmc
and
xchg
roll
or
or
and
lret
push
or
pusha
inc
ljmp
sar
in
jecxz
lcall
jb
out
ficoms
sti
push
leave
xor
jb
jns
mov
lahf
mov
add
mov
mov
call
and
xor
mov
jp
or
push
adc
and
je
test
add
pop
cmp
push
les
cld
jp
mov
dec
pop
fidivrs
out
xor
sbb
mov
jne
inc
push
pop
movsl
or
outsb
insl
dec
cmp
ss
cmpsl
add
xor
je
jge
lret
fisttpl
sahf
cmp
push
insb
test
bound
into
mov
in
mov
call
jmp
ljmp
std
push
leave
add
adc
mov
iret
jmp
pop
or
out
cmp
mov
daa
lahf
repz
mov
ret
les
sahf
push
mov
mov
pop
stc
ljmp
mov
adc
mov
mov
fisttps
push
shll
adc
imul
sub
dec
add
jbe
mov
push
rclb
loope
lock
sbbl
outsl
dec
mov
scas
pop
mov
in
cli
mov
xor
xor
mov
mov
or
mov
xchg
xchg
xchg
push
xchg
jmp
rcl
lret
cltd
orb
and
cmp
or
dec
dec
push
jp
arpl
mov
lret
xchg
sbb
xchg
in
add
rcll
xorl
xchg
cmovle
adc
jno
lds
push
inc
push
data16
fildll
jbe
xchg
mov
push
mov
stos
jo
mov
adc
jne
filds
aam
stos
lea
mov
add
std
inc
mov
and
subl
out
sub
lcall
add
xchg
xor
add
mov
negb
lods
sub
fsin
insl
idivl
lret
ret
push
test
into
fwait
mov
rorl
mov
shrb
icebp
dec
je
imul
icebp
in
push
jle
push
mov
jmp
dec
sbb
pushl
rclb
jecxz
into
or
gs
jo
sub
mov
scas
loopne
fxch
popa
sbb
push
daa
shrb
pop
pop
pop
cmpsl
std
cmp
ret
pusha
rcr
jecxz
insb
sbb
ret
jb
push
insb
ret
ret
cli
adc
cmp
mov
push
pop
or
jo
mov
jns
add
test
cltd
xchg
jle
mov
call
in
jecxz
jle
sub
jae
cmpb
sbb
jg
mov
inc
sub
sbb
ret
int3
cmp
sar
ror
jne
jb
arpl
pop
inc
pop
add
jmp
ret
jae
aas
hlt
xchg
cmp
jmp
mov
scas
aam
jno
fldenv
push
adc
in
sbb
or
dec
sbb
jge
xor
les
push
xlat
sub
jnp
fdivp
aas
mov
mov
or
aad
mov
addr16
movsb
pop
movsb
std
pusha
aaa
sub
sub
sti
in
jle
inc
call
sti
es
pop
mov
into
adc
scas
adc
fidivrl
popa
dec
mov
adc
call
cmc
and
mov
mov
pop
jecxz
dec
cmc
shll
cmpsl
pop
rorb
or
testb
jns
or
cmp
xor
shll
push
or
jae
sbb
pushf
lock
xor
xor
js
aad
lcall
mov
or
pop
inc
cmp
xchg
rcll
mov
cmpsb
pop
mov
lea
stos
dec
ds
in
fs
clc
adc
cli
stos
xor
int
gs
mov
fcoms
call
test
xlat
pop
test
ljmp
negb
cwtl
cld
sbb
ljmp
sub
mov
push
cmp
add
test
push
sub
cmc
xor
add
cmp
mov
outsb
repz
inc
leave
jae
xor
adc
lret
mov
das
stos
and
inc
fcompl
or
movsb
push
cmp
out
xchg
test
sbb
arpl
fisttps
or
cmp
mov
hlt
inc
mov
or
ljmp
sub
mov
push
pop
fs
cmpsb
lret
divb
cld
push
ljmp
sbb
cmp
lods
test
in
lods
mov
lods
sbb
add
jmp
xchg
inc
lods
imul
js
mov
sub
clc
popa
mov
xor
jne
sub
repnz
mov
std
add
and
insb
into
mov
clc
sahf
mov
data16
inc
sbb
pop
push
dec
xor
nop
mov
push
sub
mov
test
push
xchg
pop
in
cwtl
pop
out
push
push
lea
jp
cmc
or
mov
and
push
fisubrl
jge
outsb
cmp
lret
lahf
jnp
sub
and
and
sub
and
or
les
xchg
pop
push
and
lds
xchg
clc
jmp
mov
cli
pop
ljmp
faddl
aad
sbb
imul
ret
imul
inc
or
fdivl
sub
add
pushf
pop
pop
adc
adc
and
add
pop
pop
fmull
push
pop
mov
in
mov
xchg
decl
and
shrb
loope
hlt
enter
stos
pop
orps
in
push
in
xchg
ljmp
xor
int3
jae
mov
scas
test
or
xchg
dec
data16
hlt
push
cmp
fs
add
sarb
push
mull
repz
shl
in
sbb
pop
in
xor
pop
adc
mov
pop
push
in
push
sar
mov
jle
into
bound
mov
sub
cmp
out
mov
pop
andl
jle
or
mov
add
cmp
clc
pop
fdivr
addr16
popa
dec
jae
jns
and
cld
imulb
mov
xor
xorb
outsl
test
xchg
and
jmp
imul
xchg
fstpt
cmp
scas
mov
dec
movsl
sub
out
sahf
aam
fs
cmp
repz
fcompl
cs
movsb
cmpsl
nop
mov
mov
pop
or
mov
xor
stos
aaa
pop
movsl
jb
push
pushf
cmp
int
popa
adc
aaa
aas
pop
xor
mov
xor
es
cmp
ljmp
cmpsb
loop
add
push
shlb
mov
inc
mov
mov
aaa
push
xchg
popa
jge
lods
sbb
fisttpll
sub
not
xchg
inc
decb
rorl
fldl
xor
mov
cld
mov
or
push
outsb
int3
adc
out
inc
xchg
movb
jne
xor
xchg
adc
xchg
popf
sbbb
sahf
pushf
mov
sti
add
out
fcoml
pushf
sub
push
insl
or
test
fidivrl
int
jmp
dec
jno
loopne
mov
sbb
lods
push
adc
iret
addr16
outsb
push
int3
push
mov
xor
sahf
lcall
adc
inc
test
sub
push
pop
jg
fisubs
dec
lcall
xchg
or
icebp
loopne
repnz
xchg
pop
cld
and
pop
mov
xor
out
imul
dec
add
setbe
lock
loop
sbb
mov
mov
dec
in
cmpb
mov
les
or
push
jae
push
data16
xchg
jecxz
bswap
jne
jnp
loop
inc
pop
outsb
fcmovnbe
or
es
mov
fcomi
ret
push
daa
ljmp
out
sbb
adc
mov
pop
add
daa
sahf
push
dec
mov
push
pusha
xchg
mov
pop
xor
stos
and
push
xchg
cmpsb
shlb
mov
ljmp
in
repnz
js
cli
out
xlat
xchg
in
movsb
mov
jo
push
sub
fldenv
xor
data16
outsb
xchg
cmp
pop
jae
add
and
mov
jnp
into
or
jecxz
mov
sub
out
sti
pop
rolb
or
sbb
dec
test
neg
test
and
fistl
jecxz
adc
flds
int
loope
push
std
adc
push
or
or
mov
sub
lods
mov
sbb
lea
xchg
stos
rcr
dec
jmp
jle
cltd
scas
or
out
push
pop
mov
popf
sub
and
mov
xchg
icebp
into
lock
jmp
lods
jno
lahf
sti
rorl
ror
test
mov
xor
xchg
outsl
pop
and
add
fs
sti
mov
fdivrs
subl
out
mov
sub
mov
cmp
test
lcall
clc
jl
divl
xor
push
mov
mov
push
push
mov
imul
fadds
mov
pop
pop
cmpsb
inc
clc
inc
icebp
push
jo
push
call
xlat
sub
adc
push
das
inc
xor
cmpsl
and
sbb
aaa
scas
or
in
ret
jnp
lret
sbbb
mov
adc
pop
add
fidivrl
cltd
jns
push
insl
xchg
stos
push
dec
cld
mov
mov
rcll
sub
mov
jno
cmp
adcb
cli
imull
popl
inc
pop
mov
cmp
xor
movsl
stos
sbb
xchg
pop
cmp
dec
jb
nop
push
loopne
push
roll
jno
xor
jo
sub
es
add
dec
lahf
test
popa
es
cmp
ret
bound
cmp
test
fistpll
loopne
add
mov
rorb
adcl
mov
pop
in
test
and
scas
dec
jecxz
jecxz
dec
in
adc
push
cld
inc
dec
mov
mov
pop
clc
push
cmp
or
sbbb
mov
xor
aaa
sarb
or
shlb
inc
sti
inc
add
inc
mov
lds
add
aas
dec
pop
repnz
xchg
aam
or
mov
push
cmpsb
jo
add
cs
push
xchg
sbb
shl
jle
sbb
adc
popf
in
sbb
test
xor
xchg
and
pop
iret
gs
mov
xchg
jnp
push
inc
test
out
insb
test
nop
pop
popf
cmp
mov
out
cmpsl
fisubrl
or
mov
xor
push
push
mov
mov
and
fisubs
arpl
push
push
mov
cmp
cmpsl
sti
loope
lds
inc
jbe
cmc
add
iret
out
lcall
mov
jno
inc
addb
imul
adc
jecxz
ja
loope
cltd
adc
ret
push
outsl
and
out
lcall
in
cmovne
sbb
xor
insl
xor
pop
cmp
mov
out
int3
mov
stos
imul
cwtl
dec
std
mov
or
xor
mov
pop
adc
nop
adcl
iret
popa
aad
xchg
decl
negb
mov
push
bound
rolb
jmp
mov
push
pushf
push
dec
add
aad
dec
fwait
testl
loop
inc
stc
js
mov
imul
fstp
loopne
xchg
mov
aas
adc
aam
mov
mov
les
jno
sub
daa
and
out
test
adc
aad
inc
sbb
outsl
jo
outsl
pop
ja
fcomi
pop
cltd
cmp
mov
std
rorl
outsl
or
or
nop
jmp
xor
ss
pop
push
mov
pmaxub
pop
dec
cmp
dec
lock
pop
adc
mov
adc
sbb
jge
adc
roll
shrb
dec
mov
into
add
dec
mov
mov
imul
mov
adc
push
pushf
sti
aad
push
dec
cmp
adc
jge
xchg
mov
aad
daa
cmpsl
sub
mov
jg,pn
sarl
fstps
enter
xor
ret
sub
rcl
sbb
jmp
movsb
sbb
les
in
sub
movsl
or
jle
mov
xor
cmp
add
xlat
ret
scas
adc
in
mov
xor
push
addr16
inc
pop
mov
ficompl
mov
popa
cmp
mov
mov
mov
lods
add
in
mov
dec
sbb
dec
inc
adc
insb
aam
inc
mov
xchg
add
nop
adc
and
add
and
sub
mov
leave
jbe
loopne
dec
jbe
in
jo
adc
daa
lods
jno
jp
jae
add
sub
xchg
and
in
push
sti
add
xchg
faddl
cmpsl
jbe
jle
mov
inc
jns
sbb
mov
in
xor
dec
shlb
jne
lcall
popl
les
or
or
pop
loop
add
mov
call
pushf
cmp
dec
inc
mov
fildll
mov
rclb
mov
sti
push
stos
ds
and
test
inc
insb
mov
xor
mov
inc
sub
out
mov
mov
add
lods
les
ss
adc
aad
xor
jmp
jo
dec
in
jg
ror
jae
rorb
push
out
inc
movsb
repnz
adc
jle
out
repz
sahf
add
pop
mov
push
int3
inc
pop
loopne
std
out
cmc
movsb
rorl
rol
aas
pop
mov
js
test
shl
mov
int3
push
shlb
and
test
sub
mov
clc
push
iret
dec
inc
lock
xchg
popf
xchg
out
leave
js
in
js
adc
jle
int
loope
jnp
sbb
mov
cwtl
xor
and
sub
test
push
inc
mov
sub
popl
pop
out
mov
jg
add
xor
out
or
cmp
cmp
jbe
xchg
xorb
xorl
subl
mov
enter
imul
dec
in
fistl
push
cmp
pop
cmp
ss
lods
jae
push
orl
ret
and
mov
push
sbb
mov
mulb
rclb
in
pop
orl
icebp
orl
fcoms
jno
pop
inc
incb
mov
jle
sbb
fildl
insl
mov
jo
add
xchg
mov
loopne
mov
lea
jp
pop
mov
sbb
mov
mov
inc
leave
ss
sub
dec
dec
jae
jmp
or
incl
inc
push
jmp
fimuls
xchg
ljmp
pop
add
dec
sub
or
inc
xchg
mov
sub
sbb
mov
inc
adc
mov
lret
out
nop
jb
mov
or
pop
dec
cld
cld
mov
or
ds
js
xor
mov
movsb
ds
mov
jbe
pop
cmpsl
sub
shrl
adc
sbb
lea
aam
cli
mov
cmc
mov
jbe
sub
icebp
dec
fcoms
dec
jns
push
lods
inc
mov
cmpsl
sahf
mov
hlt
inc
mov
xchg
popa
enter
dec
mov
call
mov
aaa
push
in
add
inc
jnp
jecxz
in
enter
lahf
mov
test
and
mov
mov
lds
mov
outsl
cmpsl
mov
sahf
leave
cmpsl
push
pop
js
mov
xor
add
pop
push
or
cs
pop
outsl
dec
rol
fmulp
jmp
cmp
test
sub
pop
popa
mov
cli
add
insl
cmp
mov
xchg
mov
stos
jae
cmp
ja
out
gs
mov
in
test
not
out
int
int3
sub
or
cmp
lcall
dec
lcall
cmpsb
add
popf
pop
mov
mov
ja
mov
test
and
xchg
sarb
aaa
pop
sti
stos
pop
mov
mov
or
inc
fucomp
jmp
bound
dec
pushf
pop
clc
xchg
mov
cmp
push
sti
insb
adc
dec
lock
fildll
pop
stc
xchg
sub
jg
inc
and
push
jp
ss
int
rep
ds
cmpsb
mov
scas
cmc
sbb
jle
vaddpd
and
pop
cwtl
xchg
pop
rcrb
cmpsb
sbb
jae
pop
int
test
stc
xchg
cmp
xor
fisubs
jbe
dec
lods
sbb
stos
mov
out
in
js
and
xchg
cmp
cmp
inc
outsb
and
ljmp
out
sub
sub
sub
push
mov
shrl
movsb
bound
or
scas
mov
test
xchg
rclb
movsl
lret
and
lret
or
out
adc
nop
jbe
adc
sbb
xchg
mov
xchg
popl
push
les
inc
les
shll
scas
mov
aam
pop
pop
and
cmp
sub
jge
sbbl
sub
cmp
cmp
mov
lods
in
jns
popf
cmpsl
push
jle
pop
mov
aam
fimull
aad
std
pop
mov
cwtl
dec
fimull
shlb
mov
sbb
sbbl
sbb
test
je
fisubrl
fisttpl
xchg
xchg
xchg
push
mov
mov
imul
imul
adcb
push
push
and
mov
inc
and
xchg
xchg
idivl
dec
sub
mov
dec
rcrl
add
fnstcw
mov
movsb
xchg
sub
mov
pop
xor
mov
adc
jg
push
test
and
jmp
rcll
sub
inc
out
mov
pop
ret
pop
adc
scas
and
out
inc
jg
lods
inc
ret
ret
push
xlat
push
jmp
stos
jge
inc
mov
or
hlt
fstl
or
or
or
lcall
cmpsl
xor
fwait
es
fidivrl
add
cmp
inc
in
dec
mov
push
ljmp
leave
fcoms
mov
pop
jl
add
loopne
mov
or
inc
add
je
loop
jge
repz
mov
jb
jp
mov
outsb
adcb
out
vmulpd
fsubrs
or
sti
push
fimull
inc
ljmp
and
mov
ffree
jns
mov
mov
xor
and
dec
mov
add
mov
mov
lea
push
scas
mov
mov
inc
fcompl
call
daa
cwtl
mov
mov
data16
mov
push
sub
pop
cmp
enter
and
pop
xor
nop
sbb
and
jne
mov
mov
gs
popl
and
pop
push
mov
mov
out
jg
dec
push
dec
push
or
push
test
adc
cs
sbb
mov
cmpsl
and
pushf
sub
push
mov
imul
scas
cmp
cmpb
or
imul
jmp
into
idivl
enter
and
lahf
loop
ljmp
sub
shrl
mov
or
dec
int3
mov
sbb
mov
mov
xchg
incl
pop
ja
outsl
not
movsb
je
sbb
dec
xchg
mov
sub
paddusb
jge
les
and
cs
cmp
push
rorb
or
popf
mov
or
push
cmp
xor
test
stos
adc
mov
aam
out
push
add
in
hlt
mov
or
test
ret
cmpb
add
mov
data16
jo
push
push
pop
pop
sbb
adc
outsl
mov
incl
lea
lahf
shll
sbb
adc
pop
loop
pop
jno
sbb
lods
pop
loope
jle
iret
stos
addb
loopne
dec
cwtl
lods
loopne
xlat
add
repz
and
jno
inc
or
add
push
mov
xor
ljmp
lret
mov
pop
and
fwait
push
mov
aam
test
sti
pop
or
in
stos
xchg
pushf
repz
xchg
testb
xor
push
add
loope
es
fimuls
pop
pop
inc
inc
cmp
sbb
dec
jg
popa
or
test
sub
sub
mov
push
test
sbb
imul
pop
add
push
dec
lods
movb
push
sbb
pop
mov
aas
push
add
mov
stos
jl
int
jl
inc
xor
sub
sbb
mov
jns
sub
imul
aam
lds
mov
pop
jns
inc
dec
xor
mov
mov
fildll
rolb
mulb
jne
pop
mov
and
sti
inc
je
push
cmp
xchg
cmp
cmpsl
inc
dec
fstl
ror
jge
mov
or
movsl
xchg
push
mov
or
mov
sub
das
dec
mov
sbb
mov
hlt
and
mov
push
testb
jmp
ss
pop
out
stos
dec
mov
and
idivl
lret
sbb
mov
imul
loopne
adc
and
jp
mov
and
fsubl
cmc
jno
test
cmc
adc
jmp
mov
pop
rorb
add
cmpsl
cmp
push
xchg
mov
and
xchg
add
rcll
cmp
xlat
mov
sub
out
imul
ds
jno
or
and
call
cmc
dec
outsl
icebp
adc
aam
test
cs
add
out
pop
sub
fstl
inc
sbb
push
addr16
imul
fadds
es
int3
cmc
sbbb
jg
mov
bound
mov
mov
loope
add
nop
fcom
insb
enter
push
dec
repnz
cmp
out
lea
imul
xor
mov
pmaxsw
fisubl
push
test
or
leave
inc
cmp
scas
sahf
not
mov
inc
adc
inc
pop
pusha
les
out
add
jno
jp
cmp
pop
sbb
cmp
test
inc
adc
aas
cmp
sar
aad
imul
mov
data16
or
cmp
mov
pushf
mov
xor
sbb
ror
sub
inc
inc
and
in
fsubs
cmp
sub
and
movsl
xor
add
lock
xchg
or
push
and
adc
sbb
aaa
sub
lcall
dec
in
pop
aad
cmp
push
iret
dec
movsb
pop
xor
sub
testl
add
push
push
or
jmp
or
mov
test
es
mov
adc
hlt
pop
inc
sub
clc
xchg
adc
enter
aas
and
loop
lds
mov
loop
mov
cld
outsl
aaa
fists
out
mov
icebp
dec
jmp
fstpt
fidivrl
out
outsb
xchg
imul
repnz
lds
pop
xor
inc
hlt
movsl
jo
dec
hlt
aam
shrl
sarl
jae
cli
fnsave
psraw
rorl
fs
sarb
fucomp
and
fdivrl
xor
and
aad
aad
sub
js
xor
fwait
cld
fistpll
jbe
and
fisubs
hlt
push
xor
adc
mov
xor
mov
jb
mov
push
mov
lods
push
cs
pop
add
sti
sub
in
stc
mov
jmp
jmp
cs
dec
sub
test
pushf
ficomps
in
mov
rcrl
arpl
repz
out
fs
aaa
mov
adc
inc
aam
sti
jae
les
test
je
rorb
subb
lahf
repz
xchg
mov
roll
je
add
call
scas
cld
sub
mov
pop
sarl
sbb
adc
and
out
push
data16
push
push
pop
add
mov
mov
add
sti
push
in
lret
roll
incb
push
push
inc
xor
adc
les
xchg
adc
mov
inc
out
mov
mov
out
mov
add
inc
mov
cli
mov
shll
clc
fistps
jg
add
rclb
add
dec
mov
cmpsb
dec
mov
push
xor
pop
inc
divb
testl
dec
mov
cmovns
fistpll
adc
loope
adc
sti
out
cmp
cmp
sahf
xlat
je
es
aam
movsb
jl
xor
scas
mov
dec
popf
xchg
add
bound
and
pop
aas
clc
mov
clc
outsb
ss
and
mov
and
add
mov
mov
inc
dec
loope
mov
fstl
mov
loop
nop
lahf
pop
bnd
jp
push
cmp
repnz
mov
or
jle
xchg
mov
jno
sub
fnstenv
icebp
in
adc
sub
and
push
repnz
and
mov
fmull
jnp
scas
popa
int3
push
ret
xor
bound
mov
mov
lods
sbb
fnstenv
cld
bnd
cld
cli
inc
mov
inc
pop
lock
sahf
std
pop
stc
mov
cld
int
outsb
enter
testb
mov
es
mov
ret
test
xchg
lods
pop
inc
mov
out
div
sbb
out
lea
add
ror
pusha
lahf
sub
ja
mov
jp
push
aas
es
es
mov
or
jbe
xchg
test
es
pop
pop
sub
and
int
sub
jp
ret
inc
add
and
faddp
sub
sbb
loope
mov
sbb
sub
ret
xor
xchg
mov
xor
dec
icebp
and
cld
jmp
mov
xor
add
mov
mov
add
scas
lret
and
scas
pop
sub
sbb
mov
cwtl
pop
lcall
repz
icebp
int3
ret
mov
das
int
sbb
lds
pop
xchg
cmpsb
sub
fidivs
sub
push
xchg
jnp,pn
mov
mov
pop
fsubp
pop
mov
out
mov
jne
push
rorl
xor
cmc
xor
add
sub
adc
sbb
clc
dec
jl
cmpsl
lcall
xchg
or
jne
fs
scas
lret
shl
ss
nop
mov
dec
test
je
or
sahf
sbb
xchg
in
aad
push
ss
movsl
xchg
rcr
out
in
xor
leave
adc
loope
jns
and
scas
inc
sbb
pop
pop
push
pop
mov
pop
dec
jns
sub
cltd
xor
mov
loopne
in
stc
dec
dec
xchg
jo
xor
outsl
mov
pushf
cmpsl
mov
div
clc
sbb
dec
int3
adc
push
xchg
std
add
dec
decb
mov
sbb
jg
jp
jns
lret
push
lds
jne
movsb
fistps
incl
imul
dec
pop
fistpll
adc
inc
loope
lret
sbb
out
inc
push
sahf
in
dec
pop
sbb
push
and
xchg
fmull
xor
add
sbb
aaa
stc
fwait
andl
dec
outsb
dec
mov
jnp
sbb
adcb
or
add
dec
jo
out
jns
sub
adc
push
les
cmp
shrb
inc
insb
mov
jb
ljmp
dec
push
repz
jl
jbe
push
xor
loope
inc
inc
enter
insl
mov
mov
in
mov
in
mov
std
xchg
xchg
add
fdivs
fsts
inc
out
in
jle
adc
adc
pop
sub
cmp
out
adc
jno
push
andps
fwait
jmp
push
xchg
or
adc
imul
inc
mov
fadd
cld
push
cmp
or
inc
xchg
dec
scas
imul
in
popa
jmp
adc
pop
push
or
xchg
and
sub
jns
adc
xor
mov
pop
mov
mov
push
jo
aaa
inc
or
or
std
mov
fimull
xlat
cld
repz
repz
fprem
fadds
out
xor
mov
decl
mov
add
or
mov
in
inc
cmpsl
mov
add
insb
orb
mov
push
rcll
scas
shrb
cmp
js
mov
ret
or
push
int
je
pop
inc
xchg
adcb
divb
cmp
push
pushf
mov
mov
in
jg
adc
lret
test
test
out
pop
inc
insb
pop
sti
ds
iret
pusha
mov
fs
outsb
aaa
aaa
movsl
push
orb
in
xchg
add
test
fdivr
popf
outsb
sub
popw
cli
adc
push
and
sub
jle
int
loopne
pop
push
rcrb
icebp
add
sub
js
mov
adc
xor
in
into
sbb
icebp
es
into
ljmp
xchg
mov
in
lea
xor
nop
ret
pop
int
inc
mov
inc
fwait
cmp
sub
aaa
xchg
stc
or
push
ret
jnp
cwtl
mov
inc
mov
popl
and
push
ds
push
mov
imul
mov
stos
movb
fbld
and
xchg
movb
scas
xor
out
push
push
das
out
mov
jae
je
sbb
jmp
loopne
cmp
fimuls
adc
lret
push
add
ret
push
adc
cs
enter
fnstsw
mov
cwtl
test
add
test
fistpl
cmpsl
jne
or
mov
andl
aaa
call
push
pop
add
cmovs
fildl
pop
mov
fdivrs
popa
out
stc
sbb
and
cmpb
lock
enter
hlt
mov
out
pop
ljmp
scas
hlt
push
xor
add
xchg
cs
add
jmp
mov
mov
lcall
loopne
jmp
mov
in
sbbb
iret
popf
mov
imul
fldenv
cmpsb
sbb
dec
into
jge
arpl
dec
jbe
adc
fsubs
mov
adc
push
mov
sbb
cmp
ret
scas
decb
lahf
negl
insl
jp
jp
cs
pop
popf
adc
inc
leave
and
jns
fcmovnbe
cwtl
cld
and
rcrb
sbb
or
push
divb
sbbb
jmp
and
flds
aas
push
inc
push
fs
or
mov
sarl
xchg
mov
addl
gs
and
iret
dec
out
pop
loop
jp
dec
and
adc
xchg
mov
push
andnps
dec
leave
mov
test
inc
pop
aas
lahf
jecxz
rorb
cmp
ja
je
stos
push
add
pop
fcompl
or
in
xor
push
push
xlat
mov
cld
int3
int3
scas
mov
mov
lret
ds
push
clc
in
imul
gs
xchg
or
rcrb
and
imul
or
or
xchg
fimuls
sub
add
arpl
in
pop
adc
sahf
mov
sar
pop
push
icebp
scas
insl
popf
rolb
std
repnz
adc
mov
fst
xor
loopne
jno
pop
sub
into
xor
sbb
or
mov
xchg
mov
dec
jae
int
push
push
jecxz
mov
cmp
push
jbe
je
movsl
sbb
sbb
je
xchg
test
mov
divps
dec
mov
cwtl
adc
cwtl
xor
sub
mov
jb
inc
cmp
lds
xor
loop
test
pop
mov
fwait
jbe
sbb
aam
cltd
jo
out
hlt
lea
dec
enter
sbb
push
shll
and
rcrb
fwait
adc
lock
inc
mov
or
js
aad
stos
push
into
and
jg
out
fnstenv
push
fwait
sbb
mov
dec
mov
sbb
mov
xchg
pop
ss
add
pop
and
mov
or
pop
adc
loope
inc
lret
fs
aam
sbb
out
in
out
push
test
xchg
jge
jle
aaa
xchg
cmc
movsl
add
and
out
repnz
ljmp
pusha
add
push
cmpsl
xchg
movsb
push
lret
cmpsl
mov
push
adc
roll
push
mov
aam
fsubrs
pop
mov
jne
in
pop
mov
mov
imulb
push
sbb
mov
mov
leave
xor
mov
pop
cli
iret
stos
test
or
push
js
sti
xchg
pop
inc
xchg
cltd
enter
xchg
xor
jmp
jb
pop
loop
xchg
lock
xor
mov
mov
movsl
mov
push
insl
stos
in
fs
xorb
xchg
cmp
pop
push
fidivrl
ja
mov
pop
stc
sub
cwtl
mov
scas
mov
shrl
clc
scas
pop
xor
nop
inc
mov
xor
xor
sbb
ss
xlat
push
push
mov
mov
imul
orl
int
lcall
incb
jecxz
scas
fwait
and
ss
add
int
idivl
repz
xchg
push
sub
inc
int3
pop
icebp
std
sub
loopne
popf
aam
clc
ret
cmpsb
sahf
stc
add
mov
shlb
adc
icebp
addl
scas
imul
imul
dec
push
inc
cmp
ss
pop
loope
add
stos
ficoml
loop
in
mov
js
mov
into
mov
popf
dec
fcmovne
in
sarl
push
sti
pop
into
jno
and
test
daa
push
jno
aad
jg
scas
xchg
out
iret
mov
addb
mov
inc
enter
sbb
cmp
and
sbb
imul
cmp
push
mov
shl
cmp
cmp
ficoml
pop
xchg
cmp
and
movsl
mov
hlt
xor
pop
cmpsb
inc
sahf
dec
cmpsb
pop
lds
lcall
stos
nop
add
jg
filds
notl
xor
int3
cmpsl
pop
adc
sub
xor
mov
mov
and
cli
addl
out
insl
mov
int3
nop
jl
mov
imul
arpl
pop
add
inc
scas
xchg
push
mov
test
test
mov
push
dec
inc
and
test
lds
push
mov
sub
sbb
mov
xor
int
and
call
jg
push
jno
xor
in
jb
movsl
dec
pop
xchg
test
cmp
mov
inc
jno
pushf
mov
mov
enter
je
outsb
mov
or
jbe
fidivl
sub
fsubl
jmp
int
mov
jg
sbb
popf
rorb
cli
das
mov
fisubs
push
mov
btrl
test
jae
xchg
loope
sbb
or
cmp
add
push
leave
nop
pop
and
mov
lcall
xor
je
ret
add
les
xor
or
sub
lods
push
cmp
or
mov
in
pop
ljmp
lret
cmp
or
es
add
scas
loop
pusha
aam
fsubs
xchg
jge
mov
pop
lods
imul
xor
sub
sub
ss
pop
jae
sub
out
mov
mov
sbb
iret
sbb
jne
cwtl
daa
dec
mov
aad
fsubp
dec
lret
dec
cmp
adc
mov
in
insl
rolb
aad
repz
dec
je
sahf
in
lret
rcll
insl
jp
data16
push
jp
mov
ja
jl
sbb
xchg
inc
test
add
shrl
stc
sbb
icebp
nop
push
cmp
scas
and
lods
fwait
xor
mov
or
lea
scas
mov
out
jno
shrb
xor
std
pop
jo
sti
add
xlat
mov
cmp
mov
mov
xlat
and
loopne
dec
xor
pop
ja
push
push
lock
shrl
loopne
mov
or
add
leave
ja
sub
jo
int3
stos
sub
push
ret
push
out
aas
fildll
js
xor
pop
jmp
leave
shlb
mov
mov
test
xor
lcall
xchg
sub
mov
sub
inc
adc
mov
aam
lcall
push
and
fsts
mov
xor
xor
pop
and
sti
add
aad
jnp
sub
mov
inc
jp
add
insl
mov
mov
mov
sub
xchg
push
adc
mov
loop
inc
shll
iret
aas
orl
cmp
add
insb
pop
frstor
add
cmp
push
xchg
or
iret
xchg
int3
fiadds
xlat
int
xchg
xchg
mov
negb
rcrl
aaa
out
xchg
mov
jg
mov
xchg
mov
mov
std
into
push
sbb
jnp
ja
mov
mov
dec
stos
push
jg
push
stos
jecxz
outsl
popa
pop
jo
mov
aaa
jp
cmpsb
adc
cmc
sbb
sub
loopne
jmp
cwtl
je
dec
out
xor
pop
xchg
mov
enter
jle
jb
mov
inc
jns
in
fwait
inc
push
jmp
xchg
mov
test
rcll
cmpl
in
das
ljmp
aaa
js
sub
pop
sbb
paddb
lahf
jl
jp
push
out
adc
jp
or
in
in
and
cli
xor
push
ljmp
sysenter
push
dec
xor
outsb
cwtl
sub
add
push
dec
push
shll
xchg
and
ret
push
mov
mov
jg
dec
jmp
lret
adc
pop
mov
orb
push
sbb
sbb
xchg
stos
add
xchg
movsl
sbb
insb
int3
popf
sub
dec
outsb
push
sti
push
popa
jmp
add
insb
popa
jnp
sub
sub
and
pop
mov
lods
in
add
imulb
test
adc
int
das
pop
push
mov
jno
or
xor
ss
cmc
xor
out
fcompl
popf
in
loopne
pop
mov
les
xchg
push
inc
pop
fsubrl
fistl
pop
sbb
xchg
ja
xchg
xchg
rolb
adc
xchg
sar
jge
sub
hlt
sbb
cmp
cmc
arpl
xchg
jmp
callw
iret
gs
stos
negl
dec
scas
xchg
mov
xchg
push
sahf
test
cmp
bound
or
inc
stos
andl
orb
add
cmpsl
push
test
pop
insl
or
arpl
cmc
sbb
pop
cmp
mov
shll
aam
sub
aam
or
push
inc
pop
mov
clc
out
stos
andb
push
pop
aad
sbb
out
add
mov
push
das
sub
jecxz
mov
ret
aam
hlt
mov
xchg
pop
ret
sub
adc
popf
mov
shlb
fidivrl
and
mov
outsb
clc
add
imul
into
mov
sbb
adc
jg
pop
aam
shld
testb
fwait
jge
lcall
imul
mov
dec
add
inc
jg
push
outsl
push
mov
les
xchg
mov
movsl
cmpsl
fwait
inc
xor
dec
add
repz
mov
int
push
cmp
je
mov
outsb
push
outsb
inc
inc
and
push
rcrl
push
adc
lock
pop
cmp
cld
pop
imul
stc
and
pusha
lods
movsl
push
mov
or
ret
push
cmc
xor
setle
mov
and
addr16
pushf
outsl
negb
pop
xor
jmp
sbb
mov
out
lds
add
das
pop
push
scas
xor
push
popf
push
cmc
lea
pop
loop
fiaddl
mov
negl
pop
mov
push
inc
cmp
xor
movzbl
mov
fdivr
adc
pop
sub
push
jp
mov
idiv
je
sbb
sub
pop
jmp
and
scas
stos
mov
cmpsl
adc
jmp
lea
rcl
inc
pop
or
sbb
divb
jo
ret
fldpi
aam
inc
aaa
xor
iret
jne
push
imul
dec
bsr
arpl
fcoml
mov
je
cmp
mov
test
xchg
mov
rcl
dec
cwtl
ds
jnp
adc
xor
stos
inc
mov
or
pop
xchg
dec
out
shl
mov
dec
lcall
pop
mov
js
mov
jne
jbe
pop
mov
mov
push
push
fists
in
scas
insl
jns
iret
inc
dec
sub
es
out
jmp
fcomp
pop
lods
movsl
pop
loop
out
adc
loope
bound
push
cmc
adc
stos
andl
jns
call
mov
pop
adc
loope
fsubs
dec
xchg
addr16
test
nop
ficompl
and
or
adc
jge
pop
push
pop
pusha
rcrl
push
test
stos
movsb
jecxz
jb
lods
jmp
movsb
and
pop
cmp
addb
popa
or
mov
rclb
adc
js
shrl
orl
orb
pusha
or
call
aam
rcr
cld
outsb
mov
mov
xchg
test
repnz
pusha
jle
cmc
sub
add
cltd
and
out
and
sbb
aaa
iret
push
jp
xor
inc
jnp
and
jns
pop
ret
test
movsl
xchg
hlt
sti
divb
filds
push
adc
fildll
sub
out
mov
mov
addr16
sbb
inc
mov
pop
xlat
repnz
divl
insl
jp
xor
dec
out
mov
dec
add
outsl
adc
bound
sbb
stos
pop
negb
adc
ds
es
cmp
push
cmp
dec
fimull
push
lods
and
mov
test
aaa
adc
fistpl
pop
int3
or
sub
cmp
cmp
mov
mov
adc
cwtl
add
movsb
push
lea
divl
js
xor
data16
mov
pop
dec
lea
sbb
inc
sub
shlb
mov
mov
aas
sbbl
stos
jge
icebp
test
mov
inc
xchg
stos
ret
std
jnp
aas
dec
pop
cmc
inc
stc
adc
gs
xor
and
push
test
add
or
arpl
sbbb
sbb
or
jnp
int3
xor
add
push
mov
sub
and
inc
add
or
and
mov
inc
in
mov
mov
jmp
faddp
lret
mov
mov
dec
sti
xlat
sbb
sti
test
loop
jo
stc
jns
lcall
inc
shrl
nop
or
cmpsl
jbe
jae
adc
jg
mov
jnp
lcall
stos
pop
and
jmp
mov
pop
je
jg
jbe
out
clc
dec
push
leave
xlat
mov
outsb
jl
jmp
mov
ror
fwait
cwtl
movsl
pop
jo
push
mov
pop
lock
mov
adc
out
in
fldcw
adc
test
mov
inc
pop
fcmovnu
js
push
lods
mov
add
and
xor
sub
add
cmp
or
inc
call
mov
jg
in
lret
dec
mov
stos
jae
hlt
cmc
lahf
iret
and
div
icebp
pop
je
sbb
test
adcb
stc
cli
xor
repz
push
inc
adc
sbb
fisubs
add
xchg
aad
aad
cs
cmp
cmp
mov
xchg
jge
mov
incb
cwtl
mov
inc
scas
fstpl
adcb
iret
jbe
xchg
jno
push
sarl
mov
xor
aad
cmp
rorl
xchg
cwtl
testl
mov
cmp
fistl
cltd
stc
jg
mov
cli
push
push
dec
in
inc
imul
xor
push
and
bound
fcoms
pop
add
xchg
push
pop
cs
push
and
sub
div
in
inc
mov
push
lret
xor
das
or
popa
mov
mov
repnz
bound
fcompl
outsl
lock
mov
call
nop
mov
or
int
jae
aaa
enter
xchg
in
dec
pop
inc
sub
and
and
pop
mov
push
sbb
xor
fucomi
inc
push
xchg
push
popa
fnsave
mov
fs
and
adc
leave
js
xchg
xor
lret
or
cwtl
mov
lahf
or
out
push
jg
repnz
mov
rcrb
jmp
push
outsb
es
lahf
imulb
je
pop
call
arpl
popf
mov
or
mov
stos
bound
faddp
stos
gs
push
es
cmp
xor
shl
pop
popa
xor
jecxz
out
push
fsubrp
jle
in
lods
cli
insl
pop
sub
mov
inc
cmp
inc
jp
jae
jno
in
dec
inc
xchg
test
mov
mov
out
rorl
jbe
add
xlat
aaa
add
xor
cmp
addb
out
lea
nop
rorb
loope
adc
push
and
fwait
lods
lds
inc
and
dec
aas
xlat
xor
cmp
std
add
jnp
scas
xor
lods
in
xchg
jne
push
cs
mov
fisubs
jle
sub
mov
and
or
test
mov
mov
and
arpl
imul
addl
or
and
enter
andl
pushf
xchg
es
xor
xor
outsl
js
push
gs
into
cmc
cmp
mov
dec
sub
lret
out
in
mov
and
aaa
xorl
jns
fsts
repz
pop
push
sub
mov
es
fldt
es
fdiv
wrmsr
pushf
out
push
lret
sarl
leave
jmp
jo
imul
dec
mov
mov
add
sahf
mov
movsl
test
mov
cmpsl
mov
nop
mov
add
inc
int3
fldcw
stc
push
movsl
outsb
lock
and
push
mov
mov
out
pop
push
les
scas
clc
aam
mov
cmpsb
insb
xchg
inc
cltd
sub
and
mov
sub
lret
lods
rolb
std
xchg
cmp
dec
pop
pop
xor
mov
xor
sub
add
xchg
addb
mov
sahf
out
repz
sub
enter
negb
iret
xor
in
enter
cmp
testl
ss
adc
add
mov
aam
fs
inc
mov
fldl
loopne
lea
and
push
dec
mov
push
xchg
imul
push
mov
in
rcrl
dec
imul
cli
lret
cwtl
push
and
pop
lcall
aad
xlat
pop
and
data16
mov
je
pop
jecxz
push
jle
push
test
push
inc
int3
inc
fsubrs
mov
jno
dec
pop
mov
stc
out
mov
sub
in
adc
js
or
sub
loop
and
xchg
cmp
pop
push
addb
cmp
insl
jmp
leave
xchg
push
jno
sub
gs
push
adc
jp
inc
mov
movsb
and
xchg
ss
fstpt
lods
or
push
push
iret
ret
cmp
setb
dec
mov
mov
test
mov
stos
movsb
call
in
jecxz
mov
in
push
mov
test
insl
inc
mov
enter
push
imul
mov
xor
pop
xchg
cmpsb
nop
mov
inc
xor
or
cwtl
pop
jnp
aad
test
cs
xor
rcrl
dec
sub
pop
pop
scas
jae
fisubl
loope
dec
jl
push
addb
das
aad
or
out
inc
icebp
xor
push
stc
repnz
dec
add
xchg
out
or
cmpsb
lret
aaa
fstl
cmpsb
jb
aad
das
xor
mov
cmpsb
in
addr16
mov
dec
aam
mov
lods
clc
mov
mov
negl
mov
jg
or
ja
cmp
in
nop
ret
sub
fwait
loopne
push
inc
hlt
sarb
and
add
mov
add
rolb
adc
mov
sbb
and
mov
repz
mov
int3
test
jp
popa
into
leave
push
sbb
ja
push
sub
lods
push
adc
adc
sbbl
lock
mov
jl
shlb
leave
sbb
xchg
ret
ja
pop
popf
jbe
xchg
int
push
xor
mov
scas
jmp
popa
jo
mov
ret
aas
jb
aaa
sti
mov
movsl
imul
leave
rorb
into
rolb
cmpsl
sbb
stos
pusha
fisubl
popf
xchg
pushf
int3
sub
jmp
dec
inc
xchg
arpl
push
orl
test
bnd
lret
xor
mov
test
adc
ret
add
iret
xchg
aad
imul
mov
xchg
mov
pop
mov
sahf
mov
xlat
jno,pt
lret
jns
sahf
je
xchg
pop
and
pop
int3
cmpsl
pop
sbb
jp
cwtl
nop
and
leave
pop
pusha
cmc
mull
xchg
and
lods
jg
jne
insb
mov
jp
dec
das
insl
mov
and
popl
push
or
lret
sbbl
mov
inc
jmp
ss
cmp
xchg
imul
dec
icebp
daa
shl
pop
add
scas
popa
int
popf
mov
xchg
fstl
xchg
sbb
push
iret
add
jmp
jmp
and
stc
xor
wbinvd
std
aaa
dec
js
je
fcmovu
ret
adc
or
xor
roll
dec
or
imul
ja
into
inc
lcall
sbb
imul
inc
test
add
mov
test
aam
adc
ljmp
dec
and
ret
icebp
pop
inc
aam
add
xchg
clc
xchg
pusha
imul
push
test
add
jno
pop
xor
and
pop
inc
push
mov
nop
inc
xchg
das
mov
nop
sub
jmp
mov
add
adc
push
jne
ljmp
mov
or
mov
sub
cltd
or
add
rclb
dec
cmp
cmp
xor
xchg
dec
test
aas
addl
push
mov
sub
push
sub
xchg
daa
mov
addl
push
xor
fdiv
and
das
test
es
sarl
cs
cmp
fnstenv
pop
in
test
inc
add
xor
test
mov
jle
in
aaa
outsl
subb
ljmp
xor
cmp
mov
enter
fistpl
or
sbb
es
and
repnz
and
leave
pusha
xchg
and
mov
sbb
pop
jp
loopne
jnp
fprem1
gs
test
lahf
cmp
and
jmp
mov
adc
aaa
shlb
flds
ja
cmc
or
in
jne
sahf
outsb
das
cmpsb
xchg
shrb
inc
popf
push
xlat
adc
pop
orl
les
adc
and
imul
pushf
mov
shrl
movsb
movsb
inc
lods
add
pop
cli
dec
shl
fdivr
pop
sbb
push
int
fsubrs
inc
mov
pusha
sub
lea
mov
stc
xor
inc
fcompl
xor
add
or
test
push
fisubs
mov
push
fstpt
or
cld
mov
test
fdivs
or
rolb
and
sub
mov
sub
test
test
loop
mov
jno
addr16
sbb
push
and
jl
cmp
ljmp
cmc
call
popf
push
add
sbbb
add
inc
fchs
mov
add
inc
popf
test
je
sbb
out
push
aas
inc
insb
int3
aas
out
push
mulb
or
xor
lds
das
inc
mov
movsl
mov
adc
std
xchg
imul
mov
cmc
ja
std
pop
sub
cmpsb
les
add
insb
mov
push
out
repnz
and
inc
sbb
jno
inc
movsl
dec
xchg
std
jb
xchg
xlat
sub
push
adc
sub
out
jmp
sub
out
pop
lock
loopne
notb
push
xchg
sub
push
fcoml
inc
pop
rclb
loopne
xor
clc
sbb
dec
pushf
loopne
or
jns
lds
cld
icebp
in
movsl
sub
xchg
adc
mov
mov
cld
mov
push
repnz
icebp
stos
inc
cmp
mov
or
jno
ljmp
fimuls
cmp
inc
andl
daa
xor
nop
or
push
movsb
cmpsl
sub
iret
lret
outsl
mov
mov
insl
cmp
loop
dec
out
pop
push
lods
inc
repnz
add
pop
jg
cmp
adc
out
sub
in
rcr
xor
and
xchg
cmp
lock
out
in
je
pop
jmp
dec
dec
data16
sbb
decl
fwait
or
pop
fwait
sub
fsubr
xchg
mov
fidivl
out
cmc
dec
push
fldl
pusha
out
dec
push
fistps
jb
or
roll
or
cmp
cmp
pop
push
sub
outsb
pop
rolb
xchg
shr
push
jbe
cs
hlt
xlat
mov
popa
lods
add
inc
mov
out
mov
ret
cmpsb
leave
test
pusha
inc
sbbl
iret
mov
aam
mov
cmp
inc
repnz
push
mov
mov
dec
outsl
fidivrl
xchg
push
cmc
clc
cli
adc
nop
mov
decl
insb
or
in
mov
clc
push
mov
ds
shrl
mov
out
insb
cwtl
stc
xor
add
cmp
add
out
and
jp
fldt
and
jns
fcomp
adc
cwtl
aam
stc
shl
xor
fbld
cmc
adc
std
jae
xor
movsl
adc
pop
out
idiv
mov
imul
rolb
inc
jecxz
jb
jne
iret
ja
jecxz
jnp
ljmp
rcr
mov
mov
jae
jb
push
cmp
scas
in
mov
enter
push
mov
aas
sub
scas
mov
mull
pop
push
jbe
inc
out
dec
pop
out
mov
rcr
cld
pop
adc
inc
jmp
dec
or
xor
mov
popa
mov
xchg
dec
into
cld
fists
cmpsl
mov
icebp
inc
js
rcrl
fisttpll
add
lahf
push
jo
sbb
ret
roll
pushf
aaa
adc
pop
add
xchg
daa
jl
xlat
cmp
fiaddl
xlat
or
aas
inc
add
xchg
or
and
icebp
shl
insl
sti
cs
mov
mov
mov
cmp
mov
ss
orl
lcall
int
pop
sbb
ljmp
jno
fcom
pusha
movsb
push
lahf
lahf
cmp
lcall
xor
sbbl
fsubrl
push
xchg
xor
add
orl
xorl
pop
mov
ljmp
lret
mov
test
mov
xlat
inc
jecxz
jmp
fildl
mov
testl
pop
pop
lret
or
inc
pop
jl
negb
adc
xchg
and
xchg
imul
or
mov
dec
popf
adcl
movsl
loop
fmuls
sub
or
sub
push
xchg
xchg
adc
sub
pop
jb
inc
jns
add
loope
mov
mov
lods
add
pop
cltd
push
sub
stos
lret
and
push
sub
andb
add
imul
je
aas
out
mov
push
add
and
test
xchg
lea
jecxz
push
sti
movsl
jl
pop
dec
pop
pop
fiaddl
test
insb
and
arpl
mov
rcrl
les
pushl
int
pushf
sub
sub
add
mov
xchg
xchg
xor
and
push
and
out
icebp
push
iret
xchg
and
out
leave
test
mov
mov
in
sbb
aad
mov
fcoml
out
mov
dec
test
mov
movsb
push
cmpsl
xchg
mov
daa
inc
out
cli
in
imul
lcall
mov
sub
adc
sbb
dec
mov
add
jb
cmp
movsb
mov
mov
or
stos
xor
shr
adc
cmp
shl
sbb
insb
inc
inc
sub
test
ja
pop
jne
or
loop
fidivs
jae
lods
and
ficomps
scas
pop
stos
adc
jle
xchg
imul
popf
aaa
jbe
js
sub
sbb
bound
mov
mov
int
sbb
sub
pop
ret
fdivl
fiaddl
cmp
mov
cmpsl
fs
lret
xchg
or
jmp
xchg
call
out
test
sbb
pop
outsl
test
and
mov
flds
inc
add
and
lds
jmp
push
into
call
aad
mov
ret
icebp
lret
pop
pop
nop
cmc
xor
add
mov
jmp
mov
xchg
cld
icebp
push
pop
std
cmpsl
call
xlat
push
pushf
movsl
inc
aaa
push
dec
push
or
clc
adc
sub
adc
movsl
and
dec
xor
movsb
mov
imul
mov
jl
es
mov
lcall
addr16
xchg
mov
push
pop
rolb
adc
loope
or
push
imul
repz
adc
mov
pop
out
les
jnp
lcall
and
int3
cmp
cmp
mov
pop
mov
jo
mov
sahf
shll
cmpl
bound
daa
mov
sub
aaa
roll
movb
test
xor
sub
and
rcrb
insb
stos
fcompl
lcall
fs
sti
test
das
xchg
addr16
xchg
add
sub
mov
inc
scas
fnstenv
dec
inc
iret
xlat
int3
and
xor
icebp
push
push
or
insb
cs
pop
ss
pop
add
cmp
jo
mov
xchg
data16
popa
sbb
popf
cmc
fidivrs
je
das
popa
push
mov
add
orb
arpl
cltd
aaa
and
std
in
adc
lock
lods
lret
jle
aad
jbe
sbb
lret
cmp
and
mov
andb
mov
mov
sbb
popa
loopne
sti
popa
inc
add
and
fdivrl
and
sub
aaa
cltd
ljmp
insl
stos
dec
orb
mov
sahf
bound
shll
mov
lock
jae
mov
cmp
or
daa
stc
insl
out
lods
stos
mov
fwait
leave
inc
repz
xchg
xchg
jg
mov
inc
adc
in
cltd
pop
orl
ljmp
int3
cmp
add
fistpl
mov
int
ds
mov
icebp
cmpsl
cmpsb
push
pop
mov
push
aad
push
mov
ja
xor
dec
jp
or
push
daa
jg
xchg
das
lods
nop
mov
inc
inc
cmp
test
incl
data16
push
mov
push
cmp
insl
dec
outsl
sub
push
stos
mov
out
lods
dec
pop
xlat
subb
test
movsb
jge
and
rcll
adc
ret
mov
mov
jg
inc
test
shlb
js
cmp
mov
ljmp
popf
mov
jno
lret
stos
inc
movsl
add
pop
mov
sbb
dec
push
popa
out
frstor
mov
pop
cltd
into
add
mov
mov
dec
sbb
cwtl
ret
cld
outsl
sbb
push
cmp
xlat
jl
mov
dec
cmpsb
pop
mov
inc
out
fcmovnbe
cltd
and
xchg
push
xchg
jb
orl
fisubs
loop
into
cmp
cmpsl
stos
dec
call
test
call
adc
outsl
ja
cltd
xchg
push
std
push
jp
in
ret
dec
xor
jae
mov
cld
push
test
in
add
popa
jo
inc
lret
pop
inc
ret
rorl
mov
fdecstp
push
mov
xor
mov
in
bound
aas
fnclex
push
iret
push
adc
loop
sbb
jno
dec
mov
sub
jge
dec
mov
fcmovnbe
hlt
pop
insl
pop
mov
mov
and
incb
in
mov
jb
xor
lret
push
sti
mov
jne
dec
cmp
cmc
stc
mov
add
repnz
imul
lock
mov
and
int
stos
mov
cld
mov
lea
int3
and
jo
pop
mov
cmc
mov
hlt
fsts
rcrb
in
and
jne
mov
mov
arpl
mov
out
int3
out
cmpsb
pop
mov
dec
lret
dec
pop
pop
sti
js
outsb
jbe
add
add
and
mov
aad
inc
push
adc
mov
mov
cmp
icebp
out
test
test
int3
mov
sub
add
mov
sbb
pop
xchg
inc
add
and
scas
gs
adc
shll
sub
jp
rorb
adc
push
pop
test
mov
push
dec
dec
push
rol
stos
movsb
sub
mov
loop
scas
repnz
in
les
fnstsw
xchg
push
sbb
mov
cmp
bound
imul
jno
xchg
xor
jns
adc
xchg
cmp
xchg
lcall
jns
lock
imul
mov
jae
lods
adc
in
xor
sar
lods
add
ljmp
jl
sub
int3
cmp
nopl
popf
add
push
or
rorl
mov
in
and
ds
aaa
adc
inc
or
iret
cmovb
faddp
test
mov
dec
ret
ljmp
insl
push
jnp
inc
pop
cmp
sbb
adc
icebp
mov
cmp
cmp
test
cmp
std
cs
adc
cmp
pop
lret
int
popf
xchg
cld
and
loopne
xchg
sub
cmp
xor
les
pop
mov
popf
fcompl
push
xlat
pop
notb
mov
pop
iret
inc
adc
lret
dec
loope
inc
nop
mov
lret
dec
sub
sub
aas
test
jno
mov
xchg
imul
out
loope
arpl
cmp
adc
stc
or
cmp
nop
jno
or
ret
mov
push
fstl
popa
test
push
cwtl
pop
mov
push
movsb
test
call
or
lea
sbb
inc
xor
cltd
test
mov
push
sahf
sbb
ret
int3
adc
cmp
pop
mov
push
mov
test
mov
leave
xor
sub
std
push
mov
push
mov
xorb
push
jns
js
cld
fdiv
mov
xor
es
gs
in
or
mov
call
sub
test
sub
outsb
ficoms
sub
call
inc
aad
pop
movsl
xchg
std
fdivs
pop
inc
jbe
fs
test
pusha
nop
bound
insl
in
stos
fldl
cltd
subb
pop
je
sub
lret
sub
mov
mov
push
pop
mov
lret
jae
pop
pop
xlat
fwait
xchg
mov
js
push
xor
daa
mov
mov
stos
arpl
inc
loopne
xor
push
lds
pop
mov
scas
lahf
push
jbe
adc
pusha
aam
and
xor
test
xchg
mov
inc
subb
inc
in
hlt
movsl
leave
in
aas
push
and
or
adc
xor
mov
mov
dec
mov
adc
repz
popl
pop
ret
sti
ret
xor
fidivs
in
push
stos
cs
les
cmpsb
jne
cmp
outsb
pop
adc
xchg
mov
adc
test
shrb
jb
sub
add
mov
adc
imul
xchg
cmp
cmpsb
es
xchg
leave
fnstenv
scas
shrl
push
mov
mov
dec
daa
sub
inc
pop
add
adc
or
hlt
movl
test
lahf
sbb
in
pop
push
adcl
ljmp
repnz
shll
imul
cmpsl
stc
jle
mov
sbb
dec
sbb
add
jl
cmp
lods
cmp
pop
imul
enter
loope
std
bnd
movsb
mov
aaa
lods
sbb
sbb
jge
adc
sub
push
cs
vmovd
popf
push
fdecstp
sub
pop
mov
push
jns
cmpsb
incb
add
mov
test
jle
add
jmp
and
dec
sarl
int3
xor
aam
jg
add
or
popa
stos
imul
xor
testb
sti
adcb
aam
fdivl
gs
testb
mov
cs
fs
mov
stc
in
xchg
add
mov
xor
fnstenv
daa
inc
lcall
flds
outsb
leave
lret
mov
enter
iret
rolb
xchg
div
mov
mov
fnstenv
mov
inc
sarl
mov
es
cwtl
aas
js
jg
pop
mov
xchg
sub
add
clc
mov
call
inc
sarb
jne
xor
inc
sub
in
push
fdivrs
mov
iret
aad
decb
aaa
movsb
mov
cmpsb
nop
out
lret
cmp
pop
adc
cli
jecxz
in
shll
les
push
cmp
dec
imul
adc
mov
add
inc
or
inc
ljmp
sub
out
jmp
neg
stos
loopne
mov
or
pop
in
mov
mov
jbe
mov
adc
jecxz
push
push
sarb
loop
push
inc
fcomps
inc
repz
idivb
pop
cmpl
addr16
adc
push
xor
inc
mov
js
repz
lods
mov
adc
jmp
dec
jp
fbld
or
mov
roll
add
ljmp
push
fildll
outsl
adc
cmp
inc
idivl
dec
mov
pop
xchg
iret
add
shll
mulb
shrl
add
dec
js
stc
mov
and
push
into
imul
mov
je
out
cld
or
rorl
jno
push
inc
incb
or
aam
out
imul
adc
mov
andl
inc
mov
imul
data16
leave
dec
clc
mov
dec
push
in
cltd
divl
shrb
push
adc
dec
or
xor
cwtl
pop
jl
adc
sbb
mov
cmp
mov
fcmovb
pop
aad
and
or
in
addb
sbb
push
pushf
add
movsl
jp
andl
adc
sbb
adc
ljmp
push
out
add
pop
add
ret
and
push
fidivrs
cmp
sarb
dec
out
pop
je
ror
pop
dec
push
cmp
loopne
cli
clc
mov
sbb
lret
mov
test
xor
sbb
nop
clc
jne
mov
stos
or
push
js
out
sbbb
mov
es
add
xchg
cli
and
cmp
xchg
scas
cs
cli
int
addr16
pushl
loopne
ss
mov
mov
or
xchg
dec
into
cmp
mov
sbb
and
sbb
push
adc
inc
jle
pop
aaa
sub
jg
ds
jp
mov
mov
ljmp
pop
int3
jmp
cmc
dec
mov
push
mov
lcall
mov
mov
int3
lock
adc
into
sub
push
shll
bnd
pop
jp
insb
lds
add
mov
add
mov
push
sarb
sbb
stc
insb
mov
cmc
and
jge
push
or
int
rclb
cwtl
les
dec
xchg
push
dec
jo
cmp
inc
iret
aas
stc
es
arpl
or
aaa
lret
pop
mov
movsl
mov
iret
aas
clc
mov
and
push
dec
sub
pop
mov
dec
popf
ficomps
loope
or
xchg
xchg
jnp
dec
into
cmp
aad
add
push
stc
aas
clc
xor
stc
scas
pop
adc
mov
xor
xchg
cmpsl
mov
jge
icebp
push
xlat
bound
jp
and
adc
fsubl
pop
cld
mov
inc
in
jmp
test
stos
out
push
pop
mov
mov
sub
aad
mov
or
mov
das
inc
mov
cld
lds
and
jge
sub
push
js
dec
dec
shl
mov
iret
pop
sbb
mov
mov
pop
pop
pushf
add
jmp
jg
sbb
pop
mov
or
ror
add
cltd
bound
insb
dec
sub
aam
in
je
loopne
sbb
movsb
xchg
sar
daa
jne
mov
pop
out
arpl
dec
jno
cli
xchg
or
cltd
sbb
out
sbb
dec
xchg
cmc
cmpsl
xchg
dec
xchg
movsl
mov
in
popf
mov
punpcklwd
jmp
mov
xor
jl
inc
and
aas
pop
push
scas
fcmove
icebp
inc
xor
aad
dec
stc
test
ficoml
clc
sub
xchg
jbe
adc
cmpsb
xchg
push
fwait
jecxz
mov
mov
stos
sub
pop
or
aad
stos
push
popf
add
aas
pop
cwtl
popa
jg
push
xor
clc
cli
loopne
cmp
jno
sub
mov
jg
jb
stc
faddp
subl
int3
cltd
mov
aas
mov
sarb
lds
fidivrs
mov
fidivs
mov
sub
decl
mov
in
daa
sub
bound
dec
sbb
mov
mov
ss
pop
mov
fistps
mov
xchg
outsb
in
ja
cli
andl
adc
jg
mov
add
push
ds
jmp
adc
mov
fnstcw
sub
pop
cld
popa
pop
pop
pop
sbb
adc
xchg
les
mov
push
sti
xchg
lds
cmp
lock
pushf
ljmp
ret
inc
cmp
hlt
fdiv
daa
dec
xchg
test
sti
imul
jmp
or
in
fcomps
das
mov
xchg
cs
icebp
add
aaa
mov
pop
adc
cmpsl
dec
xchg
je
sahf
sbb
xor
mov
jb
or
xor
bound
push
inc
iret
cmp
insl
cwtl
ficomps
ret
loop
or
mov
out
ret
sbb
push
and
push
inc
or
es
inc
jae
push
in
mov
and
cltd
dec
dec
adc
ss
das
and
xor
xor
jo
lods
sub
cmc
rclb
xchg
or
bound
push
sahf
inc
push
mov
inc
lock
lahf
sub
lahf
or
push
mov
and
xchg
and
test
xor
int3
jo
les
dec
cmp
cmp
xchg
movsb
leave
dec
cmp
adc
push
fdivr
pop
pop
or
out
andb
xor
jbe
xchg
lea
cmp
xchg
into
out
fcom
mov
insl
push
or
lea
pop
outsb
call
sti
push
mov
jns
mov
mov
mov
mov
mov
xchg
mov
xchg
jg
pop
xor
dec
inc
mov
push
pop
je
and
popf
sub
inc
aam
sbb
ss
or
sub
sub
xor
ljmp
test
push
ret
in
sub
mov
xorb
scas
or
inc
scas
push
cmp
jno
test
cwtl
daa
movsb
mov
dec
arpl
lcall
push
cs
daa
jecxz
call
xchg
int3
dec
sti
es
or
xor
cmc
pop
adc
mov
push
cmp
xchg
push
je
stos
jecxz
cmp
jg
push
sbbb
das
cmp
mov
fstps
sarl
rcll
xchg
ret
out
cmp
jo
ss
pop
imul
pop
out
movsb
not
sub
outsb
pop
push
or
bound
jae
jo
adc
imul
mov
pop
flds
setnp
aad
jecxz
and
imul
shrb
xchg
out
loope
cwtl
enter
mov
sbb
mov
mov
popf
test
std
fists
or
cmpsl
mov
dec
dec
arpl
cmp
push
scas
fidivs
clc
push
rorb
cmp
xor
jecxz
xchg
pop
jmp
aad
adc
popa
cli
and
xor
popa
pop
andb
jno
sub
out
in
fwait
pop
aam
dec
push
mov
mov
add
inc
adcl
outsl
fs
and
xor
mov
jl
fbld
out
loope
and
rorl
leave
mov
daa
mov
jp
and
push
jo
mov
mov
pop
movsb
call
cmp
lds
addr16
jmp
cmp
inc
aad
lahf
cltd
iret
or
mov
scas
fxch
scas
lods
push
add
movb
pop
cmpl
mov
xchg
xor
aam
adc
push
std
inc
or
sbb
mov
mov
sahf
push
lods
rclb
ret
xor
or
xchg
std
add
movsb
add
xor
ja
aaa
je
mov
test
sbb
out
dec
rolb
data16
cmp
movsl
or
mov
inc
dec
push
das
xchg
xor
jne
mov
mov
clc
inc
stc
test
lahf
jo
sub
mov
jmp
xchg
lds
gs
cmp
push
loope
loop
lahf
add
popa
ret
stc
mov
mov
mov
mov
clc
mov
jle
movsl
or
stos
movswl
iret
inc
mov
test
xor
xchg
add
jne
dec
and
dec
xor
mov
sbb
cs
sub
outsl
xchg
or
or
fstpl
lret
movsb
andb
adc
call
test
int3
out
cmp
jo
iret
movsl
inc
mov
imul
std
push
mov
pop
mov
xor
inc
fs
dec
jl
jge
aad
pop
repnz
aad
jo
outsl
jae
xor
mov
sbb
clc
outsl
xchg
dec
imul
ja
sub
popa
ss
mov
add
rorb
rclb
sbb
push
mov
push
setno
push
sbb
jl
dec
dec
or
sub
pop
fldt
ss
mov
or
sub
pop
push
mov
xor
imul
xor
or
mov
cmp
cmpsb
pushf
mov
mov
addb
loope
push
inc
and
add
adc
push
mov
cmp
jbe
mov
dec
adcl
add
xchg
inc
sub
imul
add
or
cwtl
or
pop
fincstp
shll
les
out
out
lcall
or
frstor
inc
add
fstpl
dec
xchg
stos
pop
xchg
mov
daa
mov
les
add
repz
popf
out
sub
mov
shl
fstps
inc
mov
xchg
aam
insl
orb
je
mov
jecxz
cmp
mov
jle
lcall
into
iret
sbb
aad
mov
or
xor
sub
mov
jne
notl
push
popf
mov
scas
enter
int
xlat
add
xchg
ja
jle
mov
arpl
imul
ficoms
jno
sub
mov
out
incl
dec
lea
xor
mov
xor
cmp
daa
mov
mov
cs
push
repz
push
lods
jp
dec
hlt
and
pop
lods
jnp
mov
mov
adc
sbb
or
mov
xchg
xor
sbb
movsl
jl
dec
stos
xor
cmpsb
cmpsl
mov
mov
xor
adc
rolb
cwtl
leave
push
push
in
lcall
xchg
sbb
stos
mov
push
jbe
and
fldl
fldenv
pop
mov
mov
mov
hlt
mov
call
push
insl
shl
inc
adc
mov
xlat
sbb
sbb
xchg
mov
cld
bound
fnstenv
rolb
inc
push
sbb
push
cmp
cld
mov
dec
mov
cwtl
push
test
sti
inc
and
arpl
jle
and
icebp
aas
and
jno
push
jbe
xchg
mov
arpl
mov
push
adcl
into
test
shll
lea
adc
into
jae
xchg
stos
cwtl
sbb
sarb
or
iret
push
cmp
mov
and
out
leave
test
pop
add
pop
aaa
add
aam
dec
fimull
push
sbb
mov
dec
or
xchg
and
or
add
loopne
lds
jl
fldt
notl
xchg
push
ret
lcall
aas
js
cmpsl
pop
rclb
stos
cmp
ss
xchg
cmp
fsubs
jne
lods
mov
gs
or
aas
pop
mov
inc
sarl
stos
sub
fdivrp
stos
sahf
loope
cmp
subb
or
sub
sub
mov
push
dec
lods
jo
jo
loopne
test
pop
dec
out
ret
jle
cmp
and
ja
in
andb
dec
nop
sub
pop
xor
test
divl
jge
mov
in
int3
enter
dec
and
sahf
push
cltd
cmp
and
add
dec
adc
push
pop
inc
test
icebp
push
sub
jmp
mov
enter
sub
rclb
lcall
dec
jp
and
fimuls
pushf
pop
pop
jnp
sbb
lahf
std
in
ficompl
arpl
repnz
mov
aam
lret
imul
lea
lods
pop
push
inc
sub
push
insl
jbe
jmp
mov
pop
push
cmp
pop
mov
push
cltd
xchg
test
push
jo
es
hlt
jecxz
mov
lret
in
xchg
int3
xor
add
inc
sti
xchg
push
jge
mov
imul
cs
out
into
in
dec
cld
add
mov
xchg
into
xchg
mov
cmp
push
cmp
cmp
and
lds
insb
cmp
mov
mov
and
cwtl
push
mov
dec
test
add
xlat
inc
fsubl
rol
xchg
les
les
jne
popf
cwtl
xchg
out
arpl
sub
js
dec
inc
push
enter
in
sub
cmp
lret
fisubrl
lahf
push
in
loop
mov
jns
add
or
inc
dec
cmp
mov
mov
mov
orl
dec
arpl
push
repz
loop
sub
aad
xchg
jno
rclb
and
inc
mov
rorl
sub
jne
add
andb
das
adc
and
adc
inc
movsb
push
test
dec
daa
arpl
into
es
incb
xchg
jmp
lds
or
add
stos
das
ficoml
adc
sub
xchg
cmp
push
sbb
inc
arpl
int
pop
das
rolb
rol
call
shl
aas
mov
bound
lock
aaa
add
inc
call
aaa
test
inc
int3
cmpsb
mov
mov
sub
add
sub
ljmp
das
add
xor
and
cmpsb
xor
xchg
notl
mov
pop
imul
adc
movsl
adc
in
add
jge
mov
cli
inc
cmpsb
inc
imul
adc
into
ret
sub
cmpsb
push
aam
adc
dec
mov
sbb
jns
flds
mov
add
imul
xchg
mov
pop
dec
mov
fwait
push
ret
pop
jp
fimuls
stos
loopne
cmp
scas
jbe
les
adc
cltd
pop
add
aad
and
push
lret
inc
repnz
or
cmp
imul
jb
jle
flds
stc
test
xor
inc
aaa
loopne
mov
inc
xchg
sub
and
add
f2xm1
out
out
cmp
pushf
rcl
push
adc
jp
jge
ja
adc
or
inc
outsl
leave
ss
dec
sahf
mov
imull
cld
pop
popf
insb
push
pop
dec
and
enter
popf
add
lds
ss
jne
dec
icebp
inc
sub
push
cmp
jmp
push
repz
push
pusha
mov
and
fnstsw
inc
mov
sub
push
xor
lea
pop
dec
loopew
pop
cmp
cmp
leave
push
push
in
add
pop
stc
sbb
pop
xchg
mov
mov
mov
adc
or
cmp
inc
fcmove
pop
xchg
push
enter
gs
hlt
lods
cmp
fnstcw
sub
push
iret
jmp
mov
fistps
aaa
lods
xor
mov
push
shr
popa
cmp
mov
cmp
dec
xchg
and
out
jmp
andl
mov
mov
mov
fidivs
cmp
icebp
cmp
lods
in
sbb
sarb
aaa
fwait
cltd
pop
jne
pop
dec
mov
shlb
addr16
mov
test
iret
xchg
ds
lret
lock
test
and
call
inc
nop
idivl
xchg
loop
aas
loopne
dec
and
nop
pusha
add
out
inc
rolb
inc
into
pop
cmp
cmp
dec
xchg
cmp
lds
lret
pop
out
lds
mov
cmpb
std
mov
shl
mov
repnz
add
stc
sbb
xlat
cli
lcall
ret
pop
cmpsb
cwtl
xchg
dec
mov
rorl
add
or
mov
push
fdivrs
lock
lods
lcall
lcall
out
int
scas
fdivl
insb
sbb
scas
pop
mov
adc
arpl
pop
push
out
imul
imul
ss
mov
outsb
jo
push
adc
aam
mov
sbb
push
in
cmpl
mov
push
faddp
ja
mov
xchg
pop
xchg
stos
or
cmp
push
jmp
pop
mov
mov
xlat
rorl
es
adc
nop
sbb
fimuls
repnz
and
xchg
jge
rclb
ret
lret
sbb
xor
jmp
add
into
std
sbb
out
or
cmp
test
jae
sub
in
insb
push
insb
pop
pop
sub
xor
push
rcl
mov
pop
cwtl
xchg
pop
imul
outsb
mov
inc
iret
shrl
mov
xlat
xchg
testb
cs
and
or
cmp
and
iret
pop
mov
clc
int3
jb
aas
mov
mov
in
cmp
xor
cmpsl
lcall
mov
out
test
idivb
pop
or
mov
stc
cmpsl
mov
adc
hlt
xchg
addb
dec
cs
xchg
fs
jmp
fs
aam
in
sub
arpl
andb
mov
es
mov
arpl
or
adc
mov
pop
xor
pusha
mov
sub
fisubs
xchg
pushf
dec
call
cmp
pop
iret
push
adc
je
jbe
dec
mov
repnz
shr
mov
rcrl
movsl
pop
and
sub
ret
sti
push
xchg
popa
or
ja
outsl
xchg
xchg
mov
inc
imulb
mov
stos
rolb
cwtl
jp
jp
pop
outsb
push
push
mov
jno
jle
fld
push
and
adc
and
pop
cli
roll
jp
or
fwait
lahf
addl
sbb
jp
repz
nop
stos
clc
mov
push
dec
add
mov
mov
andb
push
xchg
or
cmp
xchg
sahf
repnz
rcll
push
dec
hlt
lds
movsl
inc
xchg
cmc
enter
pushf
xor
push
movsb
mov
js
scas
ljmp
fimull
je
pop
pop
jb
cmp
push
sahf
sbb
jg
or
in
inc
adc
shr
pop
decb
push
push
adc
mov
jne
lds
or
movsb
sub
test
xchg
stc
rcr
push
jnp
inc
xor
mov
sub
and
xchg
lret
mov
add
hlt
and
fcmovu
and
mov
sub
or
outsl
daa
and
xchg
adc
or
mov
lret
sub
out
ljmp
jns
pop
hlt
testl
cmp
jns
push
cmc
push
mov
add
xchg
pop
imul
fcom
rcrb
jecxz
dec
ss
dec
shrl
test
mov
adc
gs
jnp
lods
sbb
out
pop
push
out
lahf
div
in
jne
or
mov
cmp
inc
push
fbstp
sbb
and
cli
lcallw
call
scas
push
xor
mov
enter
xchg
outsb
pop
leave
in
jo
mov
gs
cmp
lock
call
int
mov
fisttpll
mulb
roll
mov
test
out
stc
bnd
mov
enter
sti
dec
bound
bound
xor
in
add
mov
jb
xchg
xchg
ficompl
add
bound
ror
pop
and
ffreep
lock
loopne
mov
adc
mov
pop
movsl
jbe
mov
jl
in
jne
cs
mov
mov
and
data16
jne
inc
xor
push
test
inc
jne
cld
cmp
std
pop
inc
into
dec
add
testb
fcoml
jbe
sub
push
pop
scas
flds
andl
mov
test
aas
inc
pop
clc
repz
add
add
pop
xchg
repnz
push
dec
dec
fbld
fnstcw
cmp
aad
repz
pop
xor
jp
test
and
or
filds
repnz
and
jns
cmp
and
cltd
cmpsl
nop
push
fisubrl
lock
sub
leave
in
movsl
mov
enter
std
push
xchg
push
stos
mov
sub
insl
mov
out
sbb
lret
mov
sub
dec
insb
mov
pop
imul
cmpsl
xor
jb
xchg
push
in
orb
ljmp
lods
fildll
insb
and
in
fdivs
cmpsb
cmpsl
jmp
pusha
mov
dec
push
pop
push
aam
mov
xchg
mov
aaa
pop
out
xchg
es
push
add
das
lock
data16
jp
aam
jmp
outsb
or
add
xor
das
iret
mov
cmp
push
cmc
xchg
rorb
out
pop
ja
sub
mov
mov
xchg
nop
xchg
mov
in
inc
fwait
fwait
cmp
insl
and
inc
xchg
mov
fucom
adc
or
stos
mov
push
dec
adc
popf
data16
and
cmpsl
stos
cmp
fxch
cmp
rorb
lods
pop
adc
push
jge
daa
cmp
es
sbb
mov
or
mov
sbb
xchg
adc
sub
fucom
cmc
dec
mov
adc
out
mov
pop
jp
out
int3
leave
cmp
pop
mov
add
or
mov
jecxz
mull
rolb
or
lods
loopne
cmpsl
inc
aaa
push
or
ret
lds
rorl
inc
sti
sbb
sub
dec
mov
stc
xchg
pop
dec
ja
mov
dec
xor
sbb
fdivrl
out
sbb
or
sub
and
lret
lret
push
xchg
sbb
cs
mov
es
out
add
jecxz
inc
cltd
gs
call
fs
les
adc
adcb
mov
adc
fbld
outsb
sbb
pop
testl
push
scas
fcomip
pop
mov
sbb
sti
push
inc
jmp
cltd
subl
lret
mov
jle
jo
int3
mov
xchg
push
sahf
pop
adc
test
cmp
mov
jle
shlb
mov
xchg
push
sbb
dec
pusha
push
sub
es
jbe
ljmp
adc
std
adc
add
inc
adc
dec
cmp
icebp
add
jge
pop
jp
out
sti
and
sub
dec
adc
cmpsb
mov
sbb
sub
cmp
inc
fbstp
jecxz
push
movsb
lea
pop
rorb
data16
fnstsw
cmp
add
xchg
lret
and
jnp
ud1
and
inc
cs
test
fidivrl
mov
test
cld
lods
push
mov
pop
sbb
xor
jns
test
roll
pop
push
insb
jae
shrb
and
outsl
ja
mov
push
mov
cmp
lcall
jecxz
pop
xchg
insb
and
mov
test
pop
xchg
repnz
shrb
xchg
sbb
push
inc
xor
mov
xor
es
fldenv
mov
push
jno
lds
pusha
int3
push
pop
xchg
jl
ret
pop
xchg
dec
sahf
je
cmpb
das
sti
scas
dec
mov
sub
sbb
or
sbb
mov
add
dec
mov
push
or
xor
add
fistl
push
pop
dec
sahf
lcall
iret
sbb
out
sahf
adc
cli
pop
leave
xchg
xchg
jg
sbb
pop
lret
sbb
int3
shlb
and
lods
out
outsb
jnp
dec
push
dec
jle
inc
dec
dec
xchg
aas
call
div
fstpt
mov
mov
adc
inc
add
stos
arpl
push
int
pop
inc
cltd
sbb
imul
push
jecxz
outsb
mov
mull
das
mov
cmpsl
rorl
addr16
mov
sti
lds
cmp
sti
subl
xchg
test
sbb
mov
movsb
frstor
push
mov
sarb
mov
vorps
cmp
inc
cmp
and
push
add
mov
dec
inc
or
jnp
cmp
cli
outsl
mov
shlb
or
push
mov
es
fwait
sti
aas
xchg
ja
cmp
sbb
stos
into
stos
xor
mov
and
inc
push
xchg
mov
icebp
sub
loope
xchg
inc
sub
and
in
lret
mov
jne
outsl
arpl
inc
imul
mov
cmp
cltd
cs
adc
fsts
aad
pop
call
sbb
xor
mov
ficompl
push
push
dec
cwtl
ds
lock
xor
mov
pushf
sub
bound
bound
pushf
test
lcall
adc
pushf
xchg
stos
clc
cs
xchg
and
lea
aaa
mov
loopne
xchg
rolb
jne
jle
stos
cmp
xchg
push
aaa
mov
or
scas
stc
repz
gs
cli
push
lret
cwtl
jg
inc
flds
add
negl
jo
jle
in
lods
xchg
add
jp
xchg
inc
mov
adc
in
in
adc
or
popf
sarl
mov
or
cmpsb
icebp
leave
push
fmull
push
sbb
fs
push
cld
lahf
push
dec
lret
or
jp
fildl
add
sub
sbb
and
cmc
jecxz
loopne
cs
xorb
stc
mov
in
fwait
loop
rol
jg
dec
and
cmp
imul
mov
or
and
mov
dec
xor
fmuls
lea
sub
xchg
adc
iret
jns
cmp
jmp
je
int3
add
mov
mov
repz
ljmp
call
pop
jb
outsb
lret
push
mov
test
insb
dec
cmc
std
pop
cmp
dec
jbe
mov
mov
jl
lds
push
stc
xchg
pop
les
push
mov
pop
jne
xor
dec
imul
fcoml
adc
sbb
test
inc
inc
xchg
dec
pop
fs
stos
and
or
xor
loopne
adc
popa
adc
negl
and
das
jecxz
shll
cmc
add
pop
cmp
jle
xorl
xchg
imul
arpl
cmp
mov
fcom
sbb
sub
test
pushf
or
leave
dec
and
hlt
and
jmp
scas
cmp
imul
sbb
test
mov
test
inc
pop
and
sub
cwtl
add
sbb
mov
pop
xchg
jp
out
mov
outsb
leave
call
ret
sahf
fcmovu
lret
iret
mov
mov
adc
and
iret
push
fucom
cmp
mov
ficompl
stc
pop
fimuls
pusha
insb
out
xchg
pop
or
and
jne
dec
push
das
mov
scas
xor
shlb
test
cmp
pop
xor
push
mov
sbb
adc
test
sub
into
icebp
loope
mov
xchg
bound
and
mov
scas
sub
fcmovbe
or
sub
push
mov
jmp
lcall
ss
sub
ret
out
lret
sub
fcoml
cli
in
sub
xor
out
fsubrl
dec
lcall
sub
mov
sub
repnz
xchg
add
insl
dec
xchg
xrstors
je
sub
je
int
ss
mov
fisttpll
scas
call
loopne
mov
cld
mov
xchg
xchg
add
cltd
mov
fisttpl
sbb
sub
adc
lcall
les
mov
stc
out
adc
push
xor
int
sti
clc
es
inc
sahf
rcrb
dec
or
in
rol
stos
pop
stos
jl
pop
mov
mov
xchg
inc
outsb
xchg
imul
test
add
push
sbb
int3
ljmp
jo
push
mov
outsl
pop
pop
push
add
xchg
sub
cwtl
jbe
dec
lret
ffree
mov
jb
lock
pop
sbb
in
in
sbb
inc
shrl
arpl
or
cmpsb
xlat
pop
mov
mov
xor
repz
sub
outsb
loopne
lods
int3
cmp
nop
rorb
lahf
fisubl
iret
pop
shl
lret
fnsave
inc
loope
cmc
sub
icebp
iret
xchg
mov
ficomps
inc
je
pop
hlt
inc
jo
lret
vpunpckldq
mov
scas
std
and
xor
movsb
sub
push
xchg
adc
jle
call
bswap
jne
icebp
xor
dec
mov
movsl
xchg
xorb
xor
sbb
std
mov
aad
mov
cmp
adc
imul
arpl
jae
push
jle
aad
or
int
cmp
xor
add
push
mov
ror
dec
addr16
jbe
das
add
je
in
outsl
lods
xor
mov
pop
mov
xor
and
mov
mov
out
lds
push
cmpsb
add
xchg
loope
sbb
or
je
xchg
mov
cli
add
fs
and
movsl
out
insb
in
xchg
fst
mov
pop
push
push
mov
or
int3
movsb
mov
ror
xchg
fnsave
add
loop
insb
test
popa
fildll
mov
sbb
hlt
roll
or
push
jbe
or
pop
repz
cmp
out
pop
int3
add
fimuls
addr16
inc
pop
and
pop
sti
mov
cli
pop
aas
cmp
out
or
mov
sub
jmp
int3
notl
lcall
push
je
out
or
movsl
dec
push
mov
adc
fmull
fs
ret
out
inc
stc
sub
or
xor
cmp
mov
inc
testb
test
pop
jle
push
scas
cmpsb
push
in
stos
and
mov
andb
cld
je
cmpsl
sub
out
cwtl
les
mov
pop
add
popa
mov
enter
jle
jp
je
data16
add
adc
dec
sub
stc
aam
ffreep
push
xor
ss
and
dec
sbb
nop
pop
mov
lahf
add
dec
mov
cmp
lods
sbb
ja
in
push
cs
jnp
add
in
rolb
dec
mov
lret
sbb
mov
jecxz
xor
out
add
jne
cs
fdivs
lahf
inc
test
out
pop
push
imulb
daa
lret
inc
pop
test
or
sbb
xchg
sub
sub
pop
sub
xchg
jne
fnstsw
flds
mov
adc
pushf
stos
push
cmpsl
scas
sbb
cmp
push
in
push
adc
jl
dec
js
lods
enter
lcall
repz
fsubr
xchg
add
outsb
arpl
push
and
inc
mov
xchg
in
imul
inc
jne
lds
or
repz
cmp
cltd
lahf
cltd
arpl
adc
jae
lea
push
xchg
mov
imul
dec
jg
xchg
mov
insl
sbb
test
xlat
push
icebp
dec
lock
dec
pop
and
insl
shrl
pop
mov
in
int3
mov
fxch
fistps
ret
shl
push
and
adc
iret
pop
inc
adc
cmp
loopne
jecxz
dec
int
subl
scas
xor
shlb
push
stc
inc
cmc
iret
jo
mov
cld
mov
jl
sbb
mov
sbb
cmp
inc
xchg
inc
cmp
mov
rclb
lea
out
inc
cmp
fstps
cmp
mov
outsl
ror
pop
cmp
cmc
sbb
je
cmc
sarb
xor
mov
aam
mov
rclb
mov
xor
fisubrl
in
aas
push
jl
mov
leave
movsb
loop
or
add
in
dec
pop
xor
ss
push
sahf
ss
repnz
std
sbb
adc
ljmp
xor
push
pop
out
and
lods
pop
pop
sbb
mov
insb
jae
adc
add
and
inc
pusha
mov
dec
cmpsl
dec
gs
push
iret
add
fisubrs
inc
cmpl
test
ret
jl
rcrl
lcall
lods
and
ret
pop
xor
pop
jecxz
jns
test
aaa
inc
sbb
dec
jmp
outsb
lea
ficompl
bound
movsl
and
and
jge
rolb
and
xchg
cmp
push
add
inc
ret
rcl
mov
cmpsl
lret
push
add
or
addr16
mov
rorb
std
sub
cmp
mov
movsl
popf
xor
add
fimull
pusha
dec
test
cli
scas
shlb
and
scas
push
sar
xchg
scas
ret
sbb
mov
fdivl
mov
jbe
mov
xlat
lret
lahf
jecxz
outsl
lds
dec
out
lcall
pop
out
dec
inc
adcb
ret
ljmp
jg
ljmp
jg
das
xchg
cli
sub
ds
daa
adc
arpl
inc
push
jbe
push
mov
pusha
dec
mov
add
jmp
enter
pop
jp
jle
fpatan
xchg
stc
les
hlt
jl
sub
and
movsl
cmp
lret
lods
dec
pop
xor
jecxz
cmpsl
cmp
jne
and
xor
cmp
add
bound
loopne
lret
idivb
shlb
stos
cs
mov
test
dec
loopne
fdiv
out
hlt
in
mov
xchg
ret
jp
mov
cmp
inc
adc
dec
mov
xor
int3
iret
add
inc
xlat
inc
adc
jne
dec
out
imull
pop
hlt
loop
push
jne
sarl
enter
fstpt
mov
mov
add
inc
gs
sub
add
push
fbld
jae
ds
pop
leave
mov
sub
bnd
ljmp
in
inc
sub
in
and
pop
daa
loope
into
mov
fs
add
loope
jne
xor
insl
hlt
addb
dec
mov
pushf
std
dec
push
into
push
popf
inc
or
insl
mov
data16
xchg
jno
into
jnp
pop
pop
ljmp
push
adc
clc
sbb
orl
scas
pusha
xor
fists
dec
pop
inc
pop
leave
adc
pop
scas
sub
inc
insl
xchg
pop
hlt
sub
hlt
int3
cmpsl
xor
push
rorl
jbe
pop
or
pop
mov
inc
pushf
decb
sbb
xor
push
cmp
jg
lret
push
lret
mov
jne
inc
adc
pop
cmc
pop
push
pushf
jge
sbb
adc
pop
lock
cltd
ror
mov
je
jns
stos
ja
cmp
xchg
ficoms
sub
gs
test
imul
add
xorl
in
mov
mov
mov
cwtl
mov
lea
test
adc
dec
popa
mov
sahf
dec
sub
lcallw
popf
faddl
sbb
add
inc
in
mov
push
push
inc
pop
sub
cmp
decb
loopne
inc
or
aad
pop
fcomps
fcoms
jns
das
cli
je
sub
mov
xor
daa
inc
fimull
add
aad
jb
in
repz
dec
pop
sbb
sarb
fcmovnb
lret
lret
push
xor
lahf
imul
out
sbb
jge
fadds
nop
int3
lcall
sbb
js
xlat
pop
jns
lret
inc
cmpsb
xchg
fisttpl
mov
push
mov
aad
pop
lret
or
repz
lcall
inc
jb
jmp
push
mov
xor
cmp
jmp
das
outsb
adc
test
dec
enter
out
out
out
cmpsb
xor
fcmovnbe
adcl
sbbb
outsb
loopne
dec
pop
and
dec
ss
popf
dec
inc
aam
rclb
cmp
ret
sahf
jns
sahf
popf
mov
imul
mov
or
in
js
dec
ret
ja
arpl
stos
nop/reserved
xor
mov
dec
pusha
sbb
xchg
mov
push
jge
and
test
push
mov
mov
push
push
repz
sub
shlb
and
fcmovbe
cli
pop
repz
add
sub
dec
dec
mov
gs
stc
fwait
icebp
adc
mov
pop
xchg
pop
xor
nop
adc
pop
push
adc
fdivrp
or
or
ja
or
jo
movsb
repz
add
jmp
aaa
cmp
adc
jns
lret
push
jnp
and
imul
fs
mov
insb
cmc
int
sarb
mov
ja
ret
push
aad
xor
lret
or
ljmp
mov
lock
adc
fsts
pop
pop
sbb
pop
pop
fidivrs
and
cmp
xor
in
lahf
xchg
mov
rcrb
call
es
addr16
mov
and
adc
in
push
fsubs
adc
test
repnz
dec
negb
popa
movb
cmp
imul
adc
xchg
dec
verw
push
dec
scas
js
ret
lods
ds
push
lret
lea
lahf
or
sub
lret
dec
fldcw
jne
xchg
loope
mov
mov
dec
icebp
pop
lret
repz
adc
fbld
mov
inc
mov
or
xchg
sbb
je
pop
mov
leave
test
repz
mov
pop
js
sbb
out
fchs
movsl
ds
aaa
or
add
pop
sbb
scas
sti
cmpsb
jmp
and
ret
test
and
movsb
setle
jmp
xchg
add
and
xor
sub
inc
jne
sub
scas
cltd
enter
add
lcall
add
lret
pushf
cmp
out
xchg
inc
jno
clc
or
push
jno
pop
mov
mov
xor
data16
sbb
adc
mov
les
mov
xchg
hlt
cmpb
popa
ficomps
stc
icebp
adc
xchg
dec
aad
fnstcw
pop
push
push
roll
sarb
pop
jl
scas
cmp
push
fwait
imul
sub
loopne
stc
test
fildll
push
xchg
mov
inc
pop
fbld
pop
sub
mov
xchg
adc
out
lds
mov
adcb
int
cmp
inc
lods
rcr
in
div
jae
mov
icebp
repz
inc
add
dec
out
jno,pt
pop
jge
les
rorb
out
mov
fs
inc
jns
cli
dec
jbe
push
test
cld
fsubl
call
gs
and
mov
mov
xchg
fdivs
adc
sub
scas
mov
mov
cmp
add
cmpsl
fcomi
fmulp
sbb
lock
pop
stos
out
leave
inc
cmpsl
insb
xchg
arpl
adc
mov
push
jp
in
push
in
add
mov
cmp
add
jge
mov
jns
jbe
mov
sbb
call
ljmp
out
add
jno
iret
int
enter
hlt
mov
adc
insl
rol
lods
add
mov
xchg
pop
mov
add
ss
cmpsl
dec
push
popa
sub
add
iret
lock
stos
cwtl
xchg
jmp
gs
mov
repz
pop
arpl
iret
xchg
xor
adc
scas
push
rorb
mov
mov
sbb
and
xchg
mov
ret
add
mov
jb
aas
insb
movsl
insb
test
adcb
das
or
jbe
adc
adcb
movsl
jne
ljmp
or
sbb
pop
movsb
jo
mov
adc
lds
hlt
imul
iret
inc
cmp
adc
sbb
ret
add
push
ret
adc
xchg
shrl
fwait
add
sbb
push
iret
or
test
cltd
adc
iret
repnz
incl
xchg
push
loope
cmp
movsl
std
lahf
adc
inc
stos
cmpb
sub
int3
jae
mov
loope
mov
push
cmpsb
iret
sub
and
jns
pop
iret
dec
or
aaa
push
out
insl
push
inc
cs
cld
inc
jl
jb
xchg
fimull
inc
and
cltd
faddp
jecxz
popf
call
jecxz
sub
inc
sub
loopne
cld
sub
test
cmpsl
out
xor
pushf
scas
mov
ret
stos
frstor
jno
xchg
movsl
negl
das
sbb
test
add
ljmp
shlb
xor
int
push
rorl
fst
add
mov
pop
dec
aad
mov
mov
fisttpll
cs
cli
cmp
pop
addr16
dec
aas
ljmp
mov
and
or
sub
clc
out
pop
mov
xchg
add
fcoml
push
pop
movsb
ja
or
xlat
enter
sahf
push
cltd
lret
or
jno
xor
xchg
mov
ds
add
loopne
mov
or
add
cmp
data16
out
dec
mov
pavgb
daa
lret
dec
dec
sbb
je
lea
push
rcl
loope
fs
xor
insb
loopne
mov
lcall
mov
insb
mov
mov
imul
lcall
lahf
filds
out
xor
movsb
adc
pop
and
push
mov
leave
jge
sub
lcall
in
cmpsl
in
outsl
xor
mov
cmp
pusha
in
movsb
fdivs
push
sbb
pushf
mov
jle
sub
cld
or
adc
and
pusha
imul
mov
and
pop
je
pop
or
jns
add
pop
sub
ss
or
fwait
in
xchg
out
cmp
cltd
jns
push
mov
pusha
cld
cmp
dec
rep
jnp
mov
ds
in
and
sub
xor
cmpsb
cmpl
mov
push
sub
inc
dec
mov
mov
mov
mov
lea
jmp
pop
insb
add
cmp
xor
enter
sub
add
rolb
xor
hlt
or
cmc
arpl
test
xor
push
outsb
sub
mov
xchg
push
cmp
lods
aam
into
cli
inc
je
imul
fwait
es
jge
lcall
adc
out
aaa
test
pushf
ret
sub
imull
dec
out
or
jp
jle
jle
div
add
cld
out
std
shll
into
fadds
jmp
out
sarl
out
dec
adc
pop
adc
mov
aas
ss
lock
in
fwait
and
daa
mov
xlat
mov
int
ret
cmp
mov
jge
std
leave
sub
xchg
mov
and
push
lret
or
cli
outsl
mov
pop
pop
jae
lahf
mov
cli
and
dec
leave
outsl
and
test
inc
or
or
add
mov
mov
xchg
repnz
xchg
nop
ror
mov
xlat
enter
movsb
fwait
pop
aas
loop
js
test
gs
jne
xchg
cmp
inc
into
add
fsts
mov
xor
add
pop
out
cmp
clc
fnsave
mov
ljmp
ret
jg
cld
mov
pop
std
out
jge
icebp
sti
sub
mov
in
shl
test
dec
mov
sub
push
lret
int
and
movsb
scas
cmp
leave
mov
pop
mov
cmp
fsubrl
lcall
sub
aas
jne
arpl
push
jg
add
call
adc
sbb
mov
mov
mov
jge
and
xlat
pop
mov
cmpsl
rclb
mov
notl
outsl
and
and
lcall
pop
cmp
ret
and
inc
ret
mov
fcoml
mov
out
bound
xchg
cmpsl
sbb
push
js
mov
test
mov
or
jae
cmpl
test
stos
mov
mov
pop
xchg
insb
mov
xchg
push
dec
push
icebp
icebp
insl
add
fwait
push
lcall
jbe
push
into
jnp
adcb
loopne
std
mov
int
pushf
cmp
enter
dec
sbbl
and
mov
push
xorb
push
clc
jo
push
mov
outsb
push
sub
lods
int
pop
mov
pop
xchg
lret
pusha
and
faddl
xlat
push
insl
mov
or
xor
push
or
xor
inc
xor
jl
xor
popf
cmpb
shll
pushf
sarb
adc
incl
mov
dec
lret
push
enter
xchg
or
xchg
adc
ret
movsb
push
out
loopne
mov
xchg
cld
notb
push
xorb
and
es
loop
shrl
call
stos
dec
sub
sbb
pop
inc
in
xchg
rcr
inc
jae
xor
cli
jne
in
mov
mov
cmc
add
xlat
inc
xchg
and
fnstsw
ss
dec
mov
mov
jg
pop
scas
xchg
cwtl
cmp
mov
call
std
mov
pop
add
inc
xchg
push
jo
es
out
popa
shlb
pop
xsha1
cmpsb
dec
imul
out
loop
rcrb
and
sbb
sbb
jb
js
pop
pop
fstpl
incl
cmp
out
dec
pop
jge
mov
pushf
and
clc
jge
sbb
cld
gs
fistl
subb
dec
mov
mov
jp
jne
cmc
pop
aam
cmp
mov
es
sbb
pop
and
int3
cmc
pushf
out
ja
shrl
fmuls
pusha
leave
xchg
in
andl
mov
in
aam
out
push
jp
sub
arpl
mov
dec
dec
sub
inc
movl
add
int3
ficoms
cmc
sub
aam
push
xchg
mov
adc
ss
sarb
and
mov
icebp
scas
nop
cmp
jo
lea
pop
fcomp
ret
cmp
mov
lret
dec
inc
imul
and
pop
fsubl
loope
adc
repz
shll
sbb
pop
stos
add
dec
imul
sbb
jno
iret
daa
dec
dec
and
aad
jns
xor
lret
lds
fcompl
repnz
sbbb
jns
rcrl
xchg
mov
add
inc
iret
pop
jg
adc
ss
dec
test
int
pop
mov
mov
mov
xbegin
xor
mov
jns
js
xchg
dec
cmpsl
inc
inc
push
xor
insb
mov
out
dec
jns,pt
sub
sar
dec
sub
xor
rorb
lret
bound
mov
mov
xor
dec
adc
push
push
fimuls
sbb
fldt
mov
test
loop
outsb
sarl
adc
and
pushf
popf
int3
in
in
or
cld
insl
aas
shll
pop
cmpsb
cmp
stc
insb
in
jl
cli
sbbb
outsl
data16
add
jae
loop
in
and
das
inc
fcmove
cmp
andl
dec
insb
int
sbb
in
lcall
fadds
cmp
jne
insl
cmpsl
mov
pop
mov
pop
pop
inc
filds
and
outsb
pop
sarl
push
pop
or
or
xchg
mov
shll
adc
jbe
cmc
sbb
push
shl
inc
mov
shll
add
lret
ret
subl
int
out
iret
push
fnstsw
jbe
lar
xlat
xor
rcrb
dec
jb
adc
mov
or
js
or
mov
or
push
sti
xor
push
jl
sarb
sahf
and
shl
fidivl
pop
xor
cmpsl
or
cld
cli
das
xor
cltd
jecxz
add
test
pushf
enter
mov
test
sub
fnstcw
or
leave
pusha
and
xor
aad
test
cmp
and
shll
loopne
out
mov
inc
push
jmp
mov
ret
pop
inc
and
push
inc
mov
bound
pushf
mov
dec
jno
add
fsubl
int
jp
inc
and
test
mov
mov
add
inc
aad
cld
push
push
lcall
cmp
jp
adc
mov
add
push
fs
bound
mov
std
aam
inc
fdivrp
xchg
jp
loopne
xor
jnp
add
andb
mov
outsl
mov
andl
cmp
out
scas
jns
jl
jecxz
push
mov
shl
sti
lahf
sbb
fcomps
jmp
pop
pop
mov
outsl
push
xchg
inc
enter
mov
sub
imul
or
lcall
bound
fcoml
sarb
pop
lahf
pop
into
jge
cld
in
sbb
sbb
decb
push
fcompl
sub
xor
fs
loope
mov
daa
lods
jecxz
jl
add
in
fisttps
mov
jle
test
mov
shll
push
add
test
mov
repnz
arpl
adc
sar
pop
cli
cmpsl
andl
out
das
sub
test
mov
clc
adcb
jno
and
loope
out
cmpsb
and
and
les
adc
xlat
out
push
das
clc
pushf
mov
ss
out
int3
jae
jecxz
pop
aas
cmp
xchg
xchg
or
das
push
pusha
inc
neg
push
mov
xor
bound
aam
ljmp
cmp
cmp
repnz
fs
mov
dec
or
lret
jo
movl
imul
fstpl
shlb
adc
in
or
aam
mov
out
and
adcb
sbbl
xchg
outsb
jb
scas
ss
add
orb
dec
inc
push
dec
pop
xchg
dec
pusha
add
adc
pop
push
ljmp
ds
imul
inc
sub
enter
cmpsl
jmp
inc
negl
outsb
rorb
cmp
mov
shlb
push
jl
push
inc
insl
mov
sahf
pop
ss
ljmp
lea
pop
and
pextrw
cs
fs
or
test
cmc
rclb
aam
or
cmp
fs
int3
or
add
xorb
and
loop
in
icebp
movsb
ret
push
mov
in
mov
fdivp
and
cmp
adc
rcr
adc
mov
cmp
adc
cmp
cld
mov
add
xchg
push
ffree
xchg
addr16
mov
mov
sub
push
adc
push
xchg
sahf
xor
test
les
aaa
stc
aam
jle
test
les
ds
jns
push
inc
xchg
push
pushl
aaa
aam
lods
mov
testl
mov
fcmovnb
movsl
adc
xchg
test
test
fbld
pop
inc
popaw
std
xor
or
fidivrs
adc
cmp
aaa
push
lret
cld
fucomp
pop
adc
sahf
jle
cmp
dec
sub
aaa
imul
sub
push
mov
dec
push
ljmp
pop
cmpsb
es
int
and
mov
mov
add
add
mov
popa
mov
stos
jle
push
jecxz
out
mov
movsb
ja
fnstenv
data16
inc
mov
out
ds
jp
lock
add
nop
cmp
data16
cwtl
test
pop
ficoml
jns
pop
out
lock
fwait
push
sbbb
cmp
es
sub
jmp
cmp
divb
xor
dec
or
pop
jl
sbb
ss
dec
icebp
fsubs
popa
and
int
sub
mov
cmp
ljmp
jne
cld
stc
stos
cld
jno
jnp
shll
fnstenv
into
loopne
cmp
sbb
test
jo
testb
insl
jbe
loop
push
and
or
bound
das
cltd
lds
or
popf
xor
pop
jmp
insl
mov
lds
inc
jle
push
mov
fmuls
data16
stc
mov
inc
bound
add
hlt
std
sbb
in
popl
jmp
lret
repz
mov
mov
out
mov
and
cmp
push
lea
inc
rcrl
cltd
rol
dec
stos
add
test
pop
out
sahf
or
pop
sub
scas
imul
cmpsl
gs
lret
imul
ss
and
lret
mov
stos
test
ret
shrb
mov
jmp
xchg
in
pop
fs
lock
repnz
repz
sbb
lret
icebp
jbe
rclb
jno
aad
cmp
leave
xchg
jl
mov
sti
iret
sbb
out
jns
or
insl
add
mov
jae
sub
cmc
les
inc
jecxz
add
scas
divl
mov
negb
fisubrs
mov
mov
sub
call
subb
sbb
sbb
jmp
fdivp
iret
dec
movsl
add
mov
cmp
roll
test
in
icebp
repnz
sbb
mov
mov
pop
mov
sbb
mov
cmp
sub
pop
mov
xor
and
sub
add
sbb
clc
into
mov
adc
into
jbe
or
adc
out
cmp
adc
push
ljmp
clc
int3
loop
inc
pavgw
and
or
mov
test
jmp
ret
std
loope
insl
jp
adc
popa
clc
shr
repnz
push
xor
lods
sbb
lea
sbb
mov
mov
xchg
lock
mov
in
xchg
cld
insb
and
jae
xor
and
setle
dec
fnstenv
in
not
dec
pop
mov
rolb
xchg
xchg
and
mov
mov
loop
lods
ret
aaa
cmp
jle
movsb
popa
dec
ds
ljmp
sub
sbb
xor
pop
je
pop
inc
popa
push
popf
inc
push
inc
jo
xchg
or
popf
pop
xchg
adc
mov
inc
in
lds
icebp
les
rclb
repnz
sub
iret
xor
push
aam
arpl
lea
fildl
mov
or
sbb
cmp
rcl
loop
andl
dec
cmpsb
fsubs
sub
mov
mov
jmp
mov
pop
rolb
and
test
add
notl
outsl
aad
mov
mov
fsubl
mov
cmc
into
popa
sti
dec
push
inc
push
add
mov
fildl
aaa
add
aad
mov
add
mov
mov
dec
push
fisubs
jl
fdivrl
ret
mov
mov
fists
outsb
test
mov
pop
into
push
push
pop
add
xchg
or
pop
shll
pop
test
xchg
lock
or
and
dec
sbb
xchg
sbb
int
jbe
mov
scas
mov
in
sub
mov
stos
cmp
sub
stc
push
cld
push
mov
or
push
stos
call
arpl
or
adc
int
mov
lret
and
jmp
dec
inc
push
in
loopne
insl
dec
sbb
jmp
out
rcr
jmp
push
loopne
sbb
movsb
jecxz
pop
jb
scas
fldl
adc
add
imul
mov
adc
sbb
adc
jge
push
mov
imull
jl
mov
fwait
sti
sub
inc
arpl
mov
mov
loopne
test
ret
pop
sub
dec
xadd
and
imul
es
iret
pop
cmc
jno
xchg
jae
jb
push
mov
popf
jmp
mov
es
or
cld
ja
stc
xchg
xchg
dec
jb
mov
dec
xor
shll
mov
movsb
cmpsl
or
cltd
push
pop
lret
mov
mov
int3
inc
pop
aas
cmpsl
punpcklwd
mov
pop
outsl
xorl
dec
stos
cmc
outsb
inc
test
jb
jo
and
add
mov
div
sbb
xchg
and
pop
repnz
add
popa
adc
aas
dec
icebp
out
cmp
fnsave
in
mov
les
aas
mov
adc
lret
cltd
sahf
not
adc
cmp
out
xor
aam
push
inc
in
in
test
push
fsts
cmp
push
sbb
cwtl
aaa
mov
outsl
in
inc
lea
popa
jl
enter
jne
lea
sub
mov
gs
stc
xchg
jbe
hlt
push
inc
iret
jg
jns
push
into
mov
movsb
mov
mov
push
mov
jb
int
push
sub
ret
mov
pusha
popf
cmp
inc
xchg
or
stos
mov
adc
cmp
sub
cmp
mov
mov
xchg
mov
mov
lahf
jae
push
ss
jb
fisttps
fdiv
xchg
test
xchg
es
xchg
das
test
pop
mov
rcrl
pop
das
jg
repz
pop
xor
or
sub
xor
push
sbb
mov
pop
dec
arpl
cwtl
les
push
scas
adc
push
xor
test
jo
mov
nop
cmp
lock
dec
push
test
or
fmul
cmp
sbb
dec
es
sarl
push
inc
cs
outsw
sbb
push
mov
pop
pusha
in
shlb
mov
cmp
mov
dec
adc
pop
je
push
xor
pop
mov
loop
sub
push
inc
enter
imul
in
xor
outsb
popa
or
test
push
cmp
xchg
scas
inc
movsl
aaa
mov
scas
sbb
es
repnz
call
dec
fimull
jmp
mov
neg
jge
int3
hlt
sarb
sbb
xor
push
lahf
cmp
push
xchg
dec
and
cltd
mov
mov
pop
sub
loope
aaa
call
outsb
out
xor
sub
mov
call
lods
pop
sub
adc
int
xchg
cmc
pusha
out
or
dec
mov
or
lahf
pop
jbe
mov
jns
imul
mov
popf
fadds
push
inc
es
add
jno
ss
cld
xlat
nop
pop
sub
int3
jb
cli
push
aad
inc
push
pop
repz
adc
loope
lods
adcl
in
adc
mov
mov
repz
in
daa
ds
dec
mov
sbb
imul
pop
cmp
lcall
das
and
lcall
push
fs
inc
inc
mov
adc
xlat
ret
mov
or
xchg
lods
enter
mov
test
int3
fistpl
add
inc
mov
fsub
lods
mov
invd
inc
jp
cmp
jecxz
test
jns
jecxz
xor
stos
push
jnp
adc
aam
jle
pushf
dec
mov
repz
xor
movsl
les
out
and
inc
pop
mov
jo
add
inc
in
popf
in
sbb
xor
mov
inc
fnstenv
dec
cld
add
cwtl
mov
pcmpgtb
push
add
repnz
out
adc
mov
fs
sti
stos
dec
test
lahf
lock
sub
aam
cmp
jge
ja
rclb
pop
andl
insb
sbb
cmp
fmul
push
mov
mov
xchg
movsb
das
ret
scas
or
lds
xchg
jae
in
sub
lods
inc
sbb
xor
fsubrl
dec
xchg
mov
pop
cmpsb
in
iret
pop
scas
fs
adc
sbb
testb
sub
daa
ljmp
outsb
pop
gs
sub
cmpb
xchg
cmpsb
jl
enter
sub
in
sti
cmp
or
test
push
rorl
movsl
cld
insl
push
or
hlt
mov
xor
dec
in
sbb
std
test
sbb
sbbl
xor
and
data16
or
xor
dec
mov
test
sub
cwtl
xor
cli
bound
das
sbb
jg
cmpsl
mov
dec
aam
or
repnz
sbb
out
arpl
jle
daa
ja
aad
test
dec
hlt
inc
loop
push
stos
movsl
sub
rorb
lods
mov
aaa
dec
add
test
lds
les
mov
push
cld
mov
jnp
loope
ficoml
inc
daa
sbb
xlat
cmp
and
add
int
stos
or
fimull
test
sahf
jmp
mov
cli
adc
mov
cmp
dec
scas
adc
pop
gs
shlb
xchg
negb
ljmp
pop
mov
mov
mov
cmp
sbb
fnstcw
xlat
movsl
push
dec
push
lcall
jns
jns
pop
movsb
filds
lea
or
xchg
cmp
roll
inc
inc
repz
add
movsb
mov
cmpsb
jl
sbb
incb
arpl
insl
leave
inc
cmpsb
xchg
xchg
xor
mov
daa
test
popl
sub
addr16
mov
dec
mov
sbb
jne
xchg
in
lcall
orl
xor
sub
dec
ljmp
popa
push
and
les
jnp
leave
mov
adc
adc
and
fcmovne
mov
sarl
mov
sbb
jb
cld
clc
cmp
dec
jmp
sti
lds
inc
xor
mov
shll
popa
ret
leave
fcoms
jecxz
push
adc
inc
push
pop
cmpsb
xor
movsb
cwtl
gs
cmpsb
dec
xchg
jecxz
adc
das
fcoms
dec
xor
xor
out
cwtl
clc
fisttpll
or
loopne
sub
fwait
inc
sub
sbb
data16
dec
pop
das
mov
jbe
mov
cltd
pop
add
push
xchg
cmp
lahf
std
divl
mov
cmp
outsl
xor
push
call
addr16
jge
jecxz
lahf
dec
pop
mov
lds
pop
insl
nop
dec
add
mov
mov
aaa
lock
or
or
push
lret
push
icebp
mov
fstps
daa
push
sbb
rclb
ljmp
gs
iret
push
mov
jg
outsl
xchg
xor
test
rorb
dec
in
cmpsl
cmp
aaa
sub
dec
les
fistpl
mov
jmp
nop
xlat
sbb
and
dec
mov
and
dec
sub
pop
int
rolb
xchg
test
and
orb
mov
sub
movsb
mov
shll
mov
sub
pushf
sahf
pop
aam
pop
dec
jmp
ds
xchg
in
pop
mov
lods
jb
inc
pop
aaa
push
jne
or
addr16
iret
ds
sar
arpl
xchg
mov
int
push
fadds
sub
dec
clc
ret
das
xchg
push
inc
lods
inc
dec
fsts
cmc
outsb
push
adc
mov
sub
xor
inc
mov
sub
mov
test
loope
jp
shll
not
hlt
jne
mov
jl
xor
int
pop
daa
sti
nop
insb
shr
movsb
mov
add
mov
icebp
mov
ficomps
jae
jb
push
xchg
sub
cmp
sbb
push
jmp
dec
mov
jbe
incb
mov
pop
mov
sar
push
mov
inc
mov
pop
movsl
data16
stc
int
cmc
jp
andb
jo
cmp
insl
add
mov
loop
or
sahf
sub
pop
cmpsb
mov
cmpsb
dec
jmp
ss
rclb
call
fwait
out
stos
js
ja
push
movsb
nop
mov
les
jg
mov
cmpsb
jne
lcall
push
push
xchg
pushf
iret
popa
mov
repz
test
and
scas
xchg
testl
push
jecxz
lret
pop
cmpsb
cmpsl
mov
popf
arpl
push
std
jecxz
dec
and
cltd
test
xorb
or
outsb
leave
add
fmul
shll
es
rorl
cmp
int
xchg
rol
jae
cmp
cld
and
test
in
rorb
push
or
jo
add
std
or
sub
inc
lds
repz
add
enter
mov
pop
adc
in
add
shll
xlat
adc
cltd
je
xchg
ja
mov
xlat
out
push
test
pop
lods
jmp
fwait
sub
push
enter
dec
lret
sahf
xchg
and
pop
pop
pop
sub
filds
push
cwtl
dec
xchg
mov
xchg
sahf
hlt
or
jne
xlat
mov
insb
cld
fwait
leave
loop
jge
lret
sbb
jge
pop
js
je
xchg
xor
mov
ss
fistl
lods
ret
sbb
push
pop
cmp
sti
ljmp
loop
xchg
adc
movsb
notl
pop
divl
inc
xor
cmpsb
dec
sub
ret
pop
push
push
pushf
xor
dec
in
cmpsb
push
popf
daa
into
mov
mov
xor
pop
mov
mov
push
aam
push
sub
cmpb
dec
imul
mov
movsb
pop
xchg
mov
rcr
enter
aam
pop
popf
dec
ss
mov
in
jmp
inc
push
shr
mov
stos
sbb
adc
icebp
movsb
adc
inc
pop
lldt
or
xchg
add
xchg
inc
int3
sbb
enter
add
mov
xorl
movsb
jne
orb
adc
xchg
push
sbb
mov
lret
jecxz
mov
jae
out
stos
faddl
inc
out
jae
test
shlb
test
add
jl
mov
fwait
mov
lcall
xor
fwait
cli
jge
test
add
xor
mov
mov
pop
je
mov
fnstcw
push
mov
popf
jge
pop
or
add
test
and
enter
cltd
es
ljmp
push
in
mov
mov
call
pop
lods
dec
mov
sbb
or
and
shlb
rorl
or
mov
sahf
push
pushf
scas
xchg
mov
xor
popf
dec
cmp
push
leave
adc
outsb
push
mov
inc
sbb
fs
lret
icebp
mov
inc
call
sbb
enter
mov
fimuls
mov
movsb
loop
sbb
sbb
cmpsl
inc
push
cmp
fsub
jl
aaa
pop
fs
mov
push
lods
pop
faddp
es
push
dec
daa
sub
mov
les
cmc
mov
arpl
test
pop
jno
in
int
pop
pop
cmp
push
sub
out
adc
insl
cltd
pop
push
push
mov
loopne
pop
xchg
add
mov
cmp
cmp
jnp
inc
and
push
add
jb
inc
or
sub
mov
pop
push
popf
mov
test
orb
fmuls
sub
pop
push
sti
das
xchg
push
push
ljmp
xchg
scas
inc
call
jo
mov
inc
lret
lcall
arpl
and
pusha
adc
push
add
dec
push
shr
dec
jl
cmpsl
out
or
clc
and
pop
je
ljmp
outsl
inc
aam
cmp
imul
dec
out
test
sbbb
mov
std
imul
adcb
insl
into
push
in
push
and
xor
lahf
stos
pop
sub
mov
pop
test
ljmp
sub
outsb
mov
fidivs
jno
pop
imul
inc
or
jne
loope
ret
inc
cli
pop
idivl
ficoml
adcb
arpl
mov
pop
sbb
lahf
jge
fistpll
push
add
loopne
cltd
xchg
inc
mov
inc
cmpsb
lods
les
call
lahf
jecxz
xchg
pop
or
pop
in
push
mov
pop
or
loop
movsl
mov
scas
outsb
lds
jne
mov
cmp
mov
movsb
scas
js
fcomps
jnp
xchg
fists
addr16
out
icebp
fdivrs
inc
pop
outsb
inc
fs
stc
push
cmp
or
insl
out
addb
add
daa
cmp
xchg
movsl
cli
push
dec
fsubl
andb
lds
adc
pop
cwtl
and
mov
mov
out
xchg
xchg
and
xchg
in
sbb
xor
out
jecxz
out
fdivrs
jg
cmp
cwtl
or
aaa
mov
out
and
pop
cmp
jl
or
dec
jns
sub
jns
iret
dec
pop
mov
lds
push
push
aad
cmpsb
cmp
jmp
or
xchg
lret
aam
add
or
push
out
imul
mov
push
lcall
subps
test
adc
ja
andb
sbb
lret
inc
adc
mov
and
push
sub
pushl
rclb
and
jle
inc
pop
inc
and
mov
mov
mov
std
push
dec
xor
int
dec
sub
les
xor
clc
jb
jecxz
jno
cli
cmc
and
inc
outsl
ficomps
mov
mov
out
mov
mov
fsubrp
fs
adc
sub
push
push
ret
cmpsl
lret
push
dec
divb
add
aad
sub
aas
mov
pop
in
mov
and
push
jg
lret
cmpsb
ljmp
mov
jb
insl
mov
mov
repnz
ljmp
and
es
int3
mov
mov
jne
xor
sbb
mov
xchg
push
lret
rol
push
shr
movsb
fidivrs
pop
callw
inc
sbb
xchg
sub
mov
pop
mov
or
sbb
lahf
or
mov
sahf
insl
dec
popa
aas
pop
cwtl
in
jb
xchg
inc
push
sub
sti
sub
ret
jg
jmp
movsl
mov
inc
sbb
push
add
fistl
jg
movsl
fsubrl
lods
test
dec
loope
lahf
or
xor
sbb
dec
or
and
sub
jnp
xor
repnz
ja
push
add
mov
jecxz
or
xchg
call
cmpsl
fstpt
add
push
cmpl
out
out
xchg
test
xchg
pushl
imul
pop
mov
jge
jb
pop
jns
lds
sbb
out
mov
mov
jbe
sub
inc
imul
test
sbb
imul
repnz
test
sub
push
and
insb
ret
push
sub
aas
mov
sub
and
stc
and
dec
and
sbb
aam
mov
ud2
test
daa
int3
pushf
adc
adc
cld
rol
inc
and
fwait
jp
adc
scas
push
outsb
fsubr
mov
aaa
testb
stc
and
fmull
dec
and
sahf
test
test
jmp
adc
movsb
cmovbe
bound
jnp
mov
pushf
in
divb
mov
cli
and
or
adc
and
arpl
push
inc
je
xchg
shr
xorb
outsl
loopne
pop
in
cmp
pop
inc
push
and
cwtl
cmpsl
arpl
sahf
inc
bound
dec
jge
sbb
sub
fstps
inc
lcall
mov
push
pushf
dec
push
push
fisubrl
pop
or
jnp
cmp
pop
mov
sbb
sbb
lcall
cmp
dec
and
jnp
push
xor
pop
mov
setnp
mov
mov
sbb
fwait
adc
mov
xor
add
mov
dec
repnz
int3
pusha
and
insl
icebp
mov
sarl
aam
cmc
ret
mov
cwtl
test
loopne
pop
shlb
cmc
cmpsl
les
adc
sahf
adc
andb
sbb
sbb
pusha
jp
adc
popf
add
sbb
xchg
add
ficoms
data16
cli
xor
fxam
and
in
xchg
adc
fistps
pushf
dec
data16
mov
movsb
push
lock
lahf
push
ds
jge
xchg
or
and
je
test
inc
in
popf
mov
sub
xorb
sub
into
scas
add
pop
pop
mov
mov
mov
lock
test
adc
arpl
mov
inc
jnp
cmp
dec
imul
inc
adc
popa
scas
jp
push
pop
add
cmc
add
or
in
push
pop
dec
fcmovnb
mov
sti
in
stos
mov
inc
xchg
inc
pop
add
xor
xchg
mov
adc
jge
stos
cmp
not
xor
xor
push
insl
testl
push
and
es
gs
mov
mov
int
push
jmp
mov
cmp
jg
push
loop
pop
lcall
dec
add
movsb
dec
sti
cwtl
in
add
test
mov
or
rcrl
mov
imul
lcall
jmp
lret
push
cmpsb
test
sub
or
xor
jnp
and
ja,pn
xchg
mov
pop
push
pusha
sub
test
mov
das
mov
ficomps
fldz
mov
xchg
mov
incb
push
leave
fsubrp
mov
sub
add
ret
lods
jo
movsb
and
adc
icebp
or
ja
fptan
jae
jns
repnz
aam
enter
add
add
sbb
aam
xor
stc
inc
popa
rorl
popa
repz
xor
xlat
push
cmp
push
rcrl
rol
add
mov
mov
shll
cmp
dec
push
bound
cmp
inc
divb
mov
test
or
xchg
sbb
mov
andb
clc
adc
dec
inc
sbb
rclb
in
cmp
adc
push
jmp
xchg
bound
push
dec
leave
lods
stc
rclb
aam
cs
mov
cld
adc
mov
push
negb
xor
mov
pop
test
out
cltd
lock
sub
cli
rorb
in
stc
sti
sbb
pop
lds
ret
fidivrs
push
jnp
iret
fnsave
mov
xchg
sub
std
xchg
mov
insb
mov
push
out
out
inc
push
sbb
test
into
sbb
sbb
adc
stc
fcmovbe
arpl
cli
inc
mov
iret
inc
or
dec
sub
jno
xchg
or
loop
mov
cmp
scas
xchg
push
mov
sub
ret
rorb
lods
jns
jb
pop
in
scas
jnp
jle
in
and
inc
mov
leave
dec
std
xchg
add
or
mov
push
filds
adcl
xor
and
xor
mov
pop
test
negl
lds
sbb
repz
ret
add
imul
je
inc
out
add
js
cmp
mov
repnz
orb
shll
xchg
ret
and
rclb
mov
stc
in
push
lret
xlat
dec
popa
jo
divb
into
mov
sub
sub
sub
ret
fimuls
stos
call
push
stos
push
push
insl
cli
insb
outsl
sti
inc
push
mov
and
lcall
stos
subb
stos
push
iret
sub
mov
xchg
addb
xchg
js
jge
sbb
adc
shl
sbb
call
mov
ret
cmp
push
clc
jae
jne
dec
add
fcoml
test
js
sub
imul
inc
mov
and
xor
push
sbb
jne
xchg
fdivl
gs
repz
wrmsr
fnstcw
imul
xchg
and
inc
jnp
xchg
dec
cwtl
xor
imul
mov
jle
mov
push
stos
test
sbb
popa
or
xorb
push
mov
inc
mov
out
adcb
or
cwtl
int3
mov
push
imul
mov
nop
int3
sbb
mov
shl
dec
mov
or
sub
and
sbb
pop
loop
out
test
push
sti
out
stos
dec
les
sti
enter
jp
pop
movsl
rclb
lret
push
or
aam
push
sti
inc
push
add
sbb
push
jo
mov
mov
rcrl
mov
jge
mov
sarb
into
jae
jle
clc
adc
push
push
leave
jo
jae
add
lahf
cs
scas
push
add
add
es
out
jg
movsl
insl
iret
loop
cmpsb
pusha
sahf
mov
push
sahf
je
mov
jmpw
es
sub
lret
mov
cld
shrb
es
push
push
ljmp
cwtl
outsb
push
mov
testl
adc
or
and
cs
sbb
ds
int
push
mov
fwait
mov
add
jge
in
add
add
mov
mov
fs
ljmp
xor
jmp
sbb
cmpsl
sub
insb
nop
out
adc
gs
sub
lret
inc
daa
xlat
lret
daa
and
add
push
je
push
push
sbb
dec
lret
lea
orl
popf
iret
sbb
orl
hlt
rcl
jp
add
cwtl
sbb
dec
and
mov
mov
je
or
mov
sub
ds
in
rclb
sbb
jle
lds
sbb
movsl
jecxz
int
fistpl
js
dec
aas
hlt
scas
and
les
mov
fidivs
stos
push
and
fxch
lahf
int
mov
movsb
push
xchg
sub
es
pop
sbb
and
sbb
icebp
cmpsb
in
jle
sub
cmp
or
pop
jns
push
mov
mov
adc
or
jl
or
cmp
iret
cltd
xor
repnz
adc
xor
mull
pop
xchg
les
hlt
mov
mov
insb
shl
fistps
hlt
xor
and
rolb
fsubrl
shrb
out
lods
movsb
ret
push
inc
jmp
xor
mov
testl
psrad
cmp
lods
loop
stc
sub
mov
xchg
jmp
cmp
lds
out
shl
jp
push
or
loop
in
fs
outsb
std
push
dec
mov
xor
shrl
cmp
mov
sub
dec
pop
pusha
rclb
sahf
jge
sti
idivl
pop
push
inc
pop
adc
pop
push
mov
fistpll
add
sti
fimull
mov
add
dec
ficomps
jno
mov
ret
pop
enter
pop
call
xor
insl
and
notl
xchg
sbb
sahf
outsb
push
inc
sbb
fisubs
sub
pop
rorl
sbb
ljmp
add
mov
push
sbb
push
test
cld
lods
adc
push
mov
pop
and
sub
lods
sub
enter
shrb
gs
mov
sbbb
pop
mov
subb
enter
xor
mov
push
lock
cmp
mov
mov
scas
out
andl
aad
lock
das
push
add
imul
adc
daa
loope
std
sbb
or
movsl
out
scas
jmp
jg
imul
xchg
clc
es
and
ss
rcll
out
in
xchg
mov
mov
js
adc
inc
push
add
push
mov
mov
movsb
lds
and
out
int
out
mov
xchg
data16
and
jo
adc
jbe
test
sahf
cmc
mov
call
jo
pusha
mov
popf
pop
xchg
dec
mov
aas
ror
ljmp
js
outsl
cld
mulb
and
pop
mov
stc
sbb
lea
pop
mov
jnp
mov
mov
imul
test
pop
sysret
aad
roll
pop
lcall
sub
and
mov
sbbl
fwait
xor
lret
gs
stos
loopne
insb
inc
mov
push
mov
jnp
sahf
adc
pop
lock
dec
add
clc
and
mov
add
xchg
ror
je
jnp
lock
clc
fmuls
push
pop
sbb
dec
pop
je
test
add
or
jl
and
jno
dec
nop
stos
hlt
sub
push
mov
fadds
mov
test
daa
inc
adc
inc
scas
outsl
jl
and
mov
sahf
fsubrl
xor
mov
pop
pmaxsw
inc
sbb
into
push
sbb
sarl
test
dec
mov
dec
cmp
inc
iret
mov
js
aas
push
mov
arpl
cmpsb
aas
push
mov
cmc
cmp
lock
push
pop
aas
in
push
decb
mov
mov
mov
fcoml
imul
lock
xor
aaa
out
popa
lea
int
jmp
adc
push
aaa
push
inc
fdivrs
out
cmpsb
out
xorb
mov
add
dec
test
fidivs
push
loopne
pop
scas
fwait
leave
pop
ret
rorb
out
xchg
mov
cmpsb
ficompl
es
scas
mov
jmp
pop
rol
adc
into
dec
push
dec
inc
stc
pushf
adc
mov
pop
or
sbb
and
loop
fwait
int
pop
cmp
aad
xor
fs
dec
sarl
nop
loopne
in
inc
aaa
xor
outsl
push
sub
jno,pt
aaa
shlb
push
push
cli
pop
mov
in
pusha
movsb
roll
std
push
mov
pop
mov
sahf
xor
sbb
repz
call
insb
aaa
out
test
add
aam
jmp
xchg
loopne
ret
push
mov
fwait
mov
orps
js
sub
push
inc
mov
xor
fisttpl
fcoml
call
mov
inc
push
jle
inc
xor
mov
or
add
inc
cmp
pop
mull
cmc
mov
test
add
inc
inc
xor
xorl
call
push
push
fsubrl
loop
xor
xlat
out
xor
test
sub
inc
dec
in
inc
xchg
adcl
xor
and
pushf
xor
mov
stos
dec
test
or
push
insb
repnz
mov
pop
sbb
sub
les
stos
lcall
mov
xchg
mull
call
inc
jle
in
jbe
pusha
inc
imul
pop
cwtl
ret
imul
andb
mov
fidivl
mov
out
mov
cwtl
xchg
dec
movsb
jnp
and
shll
mov
pop
js,pn
data16
mov
repnz
fistpll
pop
pop
xor
add
mov
and
adc
inc
xchg
mov
daa
mov
cmpb
lcall
xchg
add
mov
fdivrs
into
icebp
movsb
popa
and
cmpsb
lods
shrb
stos
pusha
jno
js
les
mov
dec
sbb
in
fstps
add
inc
mov
mov
jbe
aad
sbbl
subb
sbb
xchg
into
test
sub
out
or
pushf
pop
lret
lds
loope
rol
add
mov
sbb
loopne
aad
mov
cmp
jp
int
push
dec
icebp
enter
into
shlb
xchg
aas
rorl
jo
push
xchg
xor
fdivr
shll
mov
lret
lret
inc
into
sbbb
scas
push
int
jl
inc
insl
add
shrb
test
jle
sub
sub
fbld
jno
xchg
shl
xchg
or
add
scas
out
pop
jae
scas
into
sub
stc
add
pop
mov
insl
push
shll
insl
push
dec
push
xor
sub
jmp
es
push
xchg
test
mov
mov
push
rcll
out
add
andl
adc
xor
enter
mov
adc
pop
fistpl
pushf
sub
rep
sti
arpl
fstl
cmp
pusha
push
mov
xchg
rcr
push
int
xchg
pop
jns
mov
mov
inc
or
add
sbb
imul
cli
stos
movsl
repz
cmp
push
fsts
mov
aad
adc
xchg
and
enter
inc
adc
dec
cmp
or
pushf
sbb
add
cmp
xchg
pop
dec
outsb
pusha
xor
stc
jp
or
cmp
inc
rclb
shll
and
pop
subb
arpl
pop
mov
jns
jle
inc
outsb
mov
push
divl
inc
push
and
adc
into
cmp
lahf
push
sbb
clc
xor
jbe
jp
loopne
jns
xchg
push
xor
and
xchg
lods
inc
and
or
jl
fldt
out
xor
ss
adc
inc
xor
cmp
push
clc
jbe
je
mov
mov
dec
push
or
xchg
fdivr
push
mov
cmpsl
xchg
xchg
lods
cmpsb
or
sbb
jge
sarb
dec
or
shl
imul
std
pop
cmp
or
call
add
mov
cmp
cmp
xor
push
cmp
lret
nop
push
into
loop
pop
fidivs
notb
ljmp
add
scas
jae
cmp
cld
and
cmp
lcall
xchg
iret
movsb
clc
ret
arpl
rol
cli
fmull
xchg
push
mov
rcl
mov
jnp
lods
cltd
ret
mov
sub
ret
or
xor
sti
and
fs
shl
sbb
dec
jns
sahf
mov
pop
xchg
movsb
cmp
inc
and
and
push
mov
ljmp
cmp
dec
jecxz
mov
lcall
mov
jmp
dec
cmc
adc
dec
adc
fdivl
imul
add
push
nop
inc
call
push
mov
lret
mov
subl
sbb
std
roll
pop
orb
mov
incb
in
iret
xchg
out
xlat
push
int
lods
add
cmp
mov
cmp
xorb
push
or
cmpsb
or
into
jle
sbb
call
test
add
cmpsb
jge
jg
push
outsb
insl
sbb
in
notl
insl
imul
ret
sahf
cwtl
xchg
jg
inc
xchg
neg
cwtl
jecxz
inc
int
outsb
fcomps
movsl
sar
out
scas
cmp
stc
xor
push
push
xlat
dec
aaa
xorb
mov
adc
enter
pop
push
frstor
or
insl
fcmovnb
xor
sub
into
pop
ljmp
fistpll
ficoms
xor
add
mov
adc
scas
out
mov
jl
sub
add
arpl
stos
insb
loopne
pop
push
pusha
pop
scas
into
sub
das
push
rcr
dec
xchg
push
sub
jbe
add
fildl
icebp
dec
mov
cmc
add
add
mov
cmp
mov
and
ds
out
xchg
cmp
test
lcall
cs
sub
insl
je
cmpsb
fistpl
jmp
or
pop
jmp
cmp
add
repnz
into
fsts
push
or
in
jg
xchg
fnstsw
out
dec
into
inc
sub
jmp
int
and
pop
jl
add
xchg
jno
dec
les
xor
xchg
lods
push
push
repnz
push
aad
sbbl
iret
dec
mov
lahf
mov
and
out
fnstcw
sbb
dec
not
andb
bnd
pop
shll
popa
cmp
popa
jo
cld
pop
rcr
mov
subb
and
mov
jb
fcomps
rolb
scas
cltd
cmpsl
or
andl
es
jecxz
jmp
jl
gs
sub
repz
lock
adc
sub
rcrb
dec
add
xlat
jb
fwait
adc
loop
in
push
and
jp
mov
icebp
xor
bound
out
push
add
scas
xchg
jg
push
repnz
mov
mov
hlt
mov
push
push
std
mov
inc
ss
add
test
test
stos
in
sub
fisubrs
sub
je
leave
fldt
mov
xchg
inc
mov
mov
xchg
dec
enter
das
sub
movsl
test
mov
and
out
int
inc
popf
insb
and
fstpt
cld
jge
cmpsb
mov
inc
mov
pop
imul
insl
jnp
inc
out
cmpsb
xchg
jns
mov
xlat
lcall
sbb
xchg
xchg
and
xchg
dec
mov
sub
cmp
ret
lea
jmp
dec
add
dec
js
enter
inc
cmp
cmpsb
jns
test
loop
xchg
pop
fwait
bound
sbb
ljmp
dec
mov
in
cmp
or
cmpsl
out
in
mov
adc
scas
sub
dec
and
adc
and
sbb
ficoml
call
add
test
inc
jle
arpl
xlat
out
inc
imul
and
mov
sbb
shl
mov
sub
cltd
mov
xchg
adc
jno
pop
adc
jae
clc
push
inc
pop
adc
and
or
outsb
pusha
out
xor
fbld
fidivrl
pusha
push
in
or
xlat
lret
lret
aaa
fbld
imul
pop
cwtl
in
push
lods
ss
bound
rolb
adc
js
cmp
fisubrs
xor
jl
dec
xchg
mov
gs
cmp
sub
and
and
lds
shl
rolb
movsb
cli
rorb
test
mov
dec
arpl
jecxz
push
mov
pop
sbb
lds
inc
ds
fprem
and
mov
fwait
scas
movsb
push
pop
sbb
add
inc
mov
jl
xchg
jbe
xorb
mov
out
sbb
mov
lahf
xchg
xchg
push
push
ficomps
dec
pop
cltd
loop
mov
mov
and
and
fcompl
call
jae
pop
xorl
xor
mov
xor
cmp
adc
push
pop
outsb
dec
aas
imul
aam
jbe
jb
popf
and
ss
push
jb
into
cmpb
adc
stos
scas
xor
testb
repz
and
push
cs
inc
cmp
loope
mov
stos
shrl
pop
iret
jge
loope
add
pop
in
shll
jno
andb
ljmp
popa
sbb
mov
sbb
sbb
sub
mov
inc
adc
xor
popf
adc
pop
mov
adcb
xor
insl
fcom
lcall
mov
roll
and
ss
and
nop
ljmp
push
loope
flds
loopne
push
push
pavgw
and
in
pusha
sbb
sbb
add
and
mov
cltd
loopne
dec
mov
cmp
aas
les
shl
movsb
sbb
or
inc
xchg
pushw
or
sti
bound
shrd
popf
or
mov
sbb
and
pop
std
xor
adc
ljmp
iret
add
push
sbbb
mov
dec
inc
dec
xor
std
ljmp
jle
icebp
lcall
icebp
push
jmp
xor
dec
insb
sub
xchg
inc
pop
jecxz
in
idivl
cli
pop
ds
cmp
push
or
jbe
cmp
repz
scas
mov
sbb
sbb
sbb
xor
xlat
cs
cmpsb
lods
jne
sub
ds
xor
ret
clc
mov
xchg
lcall
out
adc
insl
out
or
sub
es
mov
mov
cmpsb
out
shr
clc
add
inc
sarl
je
add
aas
inc
push
ljmp
mov
cltd
ret
adcb
ret
sbb
pop
ljmp
or
lods
fdivr
sbb
cli
push
sbbl
mov
dec
pop
test
pushf
movsl
cs
divl
and
mov
ret
add
mov
shl
mov
xchg
and
xor
out
out
dec
loope
add
popf
mov
adc
pop
jnp
dec
add
orps
push
or
pop
dec
test
fwait
pushf
xor
insb
scas
jnp
lret
out
or
dec
shll
dec
scas
jne
loopne
lret
mov
stc
and
or
in
out
or
es
shlb
sbb
mov
jae
je
push
rcll
dec
mov
call
mov
add
mov
adc
ss
ja
ja
lods
lahf
push
xchg
mov
les
mov
jne
push
mov
cld
js
inc
lret
inc
xchg
xchg
xorl
or
dec
outsb
add
int3
imul
dec
and
and
xchg
cmp
adc
add
jns
cmpsb
in
xchg
addr16
es
ss
hlt
mov
mov
imul
gs
mov
sub
pop
clc
mov
pop
daa
and
roll
repz
xchg
xchg
inc
aad
mov
xchg
and
jecxz
enter
nop
or
or
test
pop
inc
mov
push
into
push
or
push
pop
sub
icebp
mov
mov
out
rcrb
into
ss
call
xchg
lret
pop
mov
or
adc
hlt
mov
jecxz
mov
sbb
cmp
cmp
and
inc
xorl
notl
outsb
sbb
sbb
lcall
xchg
xchg
fstpl
sub
repnz
enter
jg
mov
add
adc
push
jle
incb
sub
mov
mov
cmpsb
or
mov
in
test
in
mov
xchg
xchg
repz
pop
jecxz
cmpsb
pop
scas
xor
enter
loop
in
pop
sbb
in
idivl
and
add
mov
ret
shrl
adc
cld
sub
mov
repnz
repnz
pop
mov
sbb
imul
lahf
pop
or
mov
lcall
clc
les
sbb
mov
lds
in
xchg
and
rcrl
xchg
mov
mov
imulb
or
js
icebp
ja
mov
mov
out
imul
mov
sub
pop
in
cmc
ficomps
cmp
mov
fiaddl
adc
ret
adc
cmp
jl
push
cmpsl
xchg
dec
ds
push
incl
xlat
rcrb
inc
xchg
std
mov
mov
inc
sub
cmp
ret
sahf
lea
idiv
ret
lret
sub
and
pop
xor
outsb
cmp
subl
mov
pop
fs
lock
mov
fwait
shll
add
sub
cmp
lock
rol
pop
xchg
and
push
mov
cltd
xchg
filds
mov
jle
loop
sub
cs
and
push
imul
and
adc
jmp
adc
popf
cmpsb
stos
stos
adc
bound
adc
mov
mov
outsb
mov
xor
imul
jecxz
add
ret
inc
jge
add
sub
pop
fistl
or
add
cmp
pop
xchg
dec
xchg
sub
push
jno
int3
dec
movsb
adc
pop
add
mov
push
cmp
mov
mov
add
push
push
adc
imul
pusha
fsts
mov
nop
clc
popf
jns
lret
imul
dec
mov
mov
mov
push
test
cltd
fs
jo
repz
mov
sbb
mov
xchg
or
xchg
xchg
push
push
repnz
push
push
lds
xchg
rcrb
mov
jecxz
and
inc
xchg
push
fs
icebp
pop
cmp
mull
fistpll
pop
inc
pop
jo
dec
jmp
scas
jge
cmpl
insb
ljmp
cmp
flds
movsb
cli
cmp
adc
push
les
xor
fisttps
es
repz
ds
sbb
fldenv
sbb
pushf
aaa
test
fldln2
mov
les
clc
dec
mov
and
lock
ret
xchg
push
add
xchg
mov
insl
xor
scas
push
add
dec
inc
sub
jo
xchg
and
jns
addr16
sbb
and
inc
ljmp
xchg
mov
popa
mov
mov
out
jle
pushf
or
jl
aam
nop
lahf
xchg
sub
gs
gs
mov
arpl
testb
rolb
faddl
push
pop
mov
or
lcall
test
movsl
mov
sbb
push
insb
insl
in
pop
arpl
xchg
pop
push
je
xor
lret
call
pusha
loopne
and
test
adc
scas
test
sub
pop
aaa
shlb
cltd
sbb
ficompl
add
mov
adc
icebp
out
nop
push
lret
lds
adcl
fimull
mov
jae
add
ret
lock
loope
lea
subl
sub
test
xchg
mov
ljmp
inc
stos
test
aas
mov
inc
xchg
test
daa
rcll
ds
xor
ljmp
push
hlt
lds
pop
testb
push
jns
xor
and
or
movsl
mov
ja
test
xchg
imul
mov
mov
ljmp
mov
add
xchg
in
mov
mov
leave
and
jl
adc
xor
loop
enter
xor
mov
push
xchg
shrb
sub
jmp
mov
sub
mov
dec
insb
pop
jle
push
dec
sub
push
ret
popf
out
pushl
sbb
mov
sbbl
sub
pop
bound
or
pop
cltd
cmp
scas
inc
out
sbb
or
mov
xchg
icebp
mov
xchg
and
jge
cmp
mov
data16
es
in
xchg
mov
mov
mov
subl
mov
xchg
pop
xor
mov
pusha
repz
test
ret
xchg
gs
lret
jge
inc
scas
push
cmp
cs
cli
and
add
lds
lret
inc
xchg
xor
dec
ret
xchg
mov
iret
mov
test
rorl
inc
adc
cmpsl
movsb
mov
lea
jno
jae
lea
inc
xor
mov
testl
movl
shlb
aas
int3
mov
das
jns
je
jns
xchg
cmp
and
dec
ja
icebp
adc
data16
out
cmpsb
fldl
rcrb
repnz
loopne
mov
int
xchg
aas
add
data16
jo
js
push
clc
daa
cs
int3
das
lret
xchg
icebp
sub
sbb
shrl
and
aaa
and
sbb
repnz
loopne
insl
adc
adc
xchg
fisubrl
mov
mov
mov
aaa
jmp
bound
and
dec
xchg
adc
xchg
inc
add
pop
add
shll
push
push
punpckhwd
rcrb
fistpl
dec
out
loop
adc
sbb
sbb
sub
add
testb
dec
das
and
cli
mov
and
and
popf
jmp
dec
inc
xor
or
out
cmp
mov
mov
test
jbe
lods
cmpsb
inc
xchg
jle
xchg
push
ret
nop
sub
cmp
cltd
lret
imul
and
lret
inc
sbb
xchg
testl
enter
add
jo
xchg
dec
and
insl
xchg
dec
mov
add
or
and
data16
ret
insb
inc
rorl
fwait
dec
mov
addr16
pop
lds
gs
adc
lret
push
gs
dec
shll
adc
test
mov
mov
daa
sub
xor
insb
out
jae
adc
sub
add
pop
pop
in
mov
hlt
in
mov
dec
pop
fcmovnb
push
ss
jmp
repnz
inc
into
adc
add
jecxz
incb
loopne
push
xor
jecxz
pop
repz
lock
cli
fimuls
pop
push
jb
or
movsl
lods
mov
inc
popa
stos
into
mov
mov
pop
cmp
xor
or
sbb
add
inc
jnp
inc
xchg
js
ljmp
clc
pop
daa
sub
mov
fisubrl
cs
pop
inc
insb
in
out
int
dec
gs
inc
cwtl
notb
mov
inc
push
dec
xor
rorl
movsb
jno
add
sub
sbb
add
dec
movsb
inc
les
push
and
dec
jle
dec
inc
and
mov
pop
rclb
stc
sbb
lds
int
in
add
xchg
mov
test
or
lods
mov
cmpsl
jne
fistl
outsl
in
or
adc
jp
pushf
daa
cmc
out
fnstcw
out
outsl
ljmp
cld
jl
mov
movsb
jo
lret
jno
imul
cli
push
out
inc
jae
add
or
adc
pop
jnp
push
clc
mov
std
dec
dec
pop
xchg
ljmp
mov
sbb
push
rcrl
or
pop
jp
movl
hlt
repnz
movsl
testb
sub
push
and
fstl
cmpb
jl
les
idivb
stos
lea
mov
mov
mov
cmp
cld
lret
jp
sbb
icebp
mov
pop
shrb
fsubp
pusha
xor
adc
fwait
xorl
dec
cwtl
fistl
cmpsb
mov
fisubs
jns
sti
stos
mov
push
adc
pop
push
test
sbb
adc
call
inc
push
xchg
je
jae
das
push
mov
cltd
and
iret
cmp
and
ret
jns
and
aaa
xchg
roll
xchg
xor
shlb
ss
adc
mov
pushf
loope
lods
mov
dec
push
fs
fsin
push
bound
pushf
adcb
lds
push
adc
cmpsl
mov
push
leave
mov
rorl
repz
stos
mov
in
mov
addr16
lcall
or
cmpsb
xor
inc
cwtl
cmc
arpl
xchg
pusha
xlat
fnstcw
int
xchg
cmp
and
sbb
xlat
mov
insb
xlat
dec
mov
push
into
xor
adc
inc
lds
leave
jns
test
adc
inc
inc
pop
ss
jp
sti
test
in
jo
jb
dec
inc
bound
inc
mov
inc
nop
or
inc
cld
repnz
pop
jmp
negb
pop
mov
jno
cmc
jae
mov
jb
ret
aaa
sahf
sarl
imul
or
adc
xchg
dec
stos
lret
jo
mov
cltd
repnz
mov
pop
cs
repnz
xlat
mov
movsb
sbb
or
and
push
out
shrb
rcl
add
mov
incb
mov
shrb
and
es
ds
mov
xor
mov
out
out
es
pop
int
mov
sbb
into
aam
push
sbb
ret
and
cwtl
jge
jae
inc
test
insb
jb
jecxz
sub
dec
stos
push
rcrb
sarb
xchg
add
adc
mov
out
xchg
subb
mov
hlt
mov
fcoml
popa
lret
mov
out
out
adc
and
mov
push
pop
into
push
jne
dec
mov
dec
repnz
xchg
pop
ret
sbb
mov
jb
call
or
cli
dec
mov
lods
arpl
jle
mov
dec
call
rol
cmpsb
pusha
push
add
int
inc
mov
adc
rol
sub
in
adc
inc
push
leave
decb
aas
xor
enter
dec
push
stos
inc
cmpsb
xor
add
std
add
out
mov
sub
jp
mov
xor
inc
xchg
fiaddl
loope
dec
cltd
mov
test
fbstp
shll
xchg
jnp
or
xor
rclb
xor
out
repz
push
xchg
push
add
adc
scas
adc
and
jo
sub
mov
mov
movsl
pop
mov
cld
sub
fwait
jl
dec
mov
call
mov
fimull
lds
mov
push
dec
xlat
shr
fstps
mov
pop
gs
jb
faddl
mov
mov
mov
js
cli
add
lods
adc
arpl
jp
cwtl
sbb
rcrb
sarb
or
cltd
in
jp
xchg
lret
test
or
mov
mov
mov
rcrl
add
xchg
adc
jne
xor
jns
pop
and
or
xchg
outsl
xor
xor
scas
add
sub
mov
sub
fstpt
and
bound
xchg
nop
adc
mov
dec
inc
repz
mov
inc
pop
out
inc
mov
push
adc
mov
call
cwtl
shlb
sbb
stos
clc
sub
jo
inc
add
xchg
and
pop
lea
lods
add
fstps
jge
adc
mov
mov
lcall
pop
movsl
fnsave
sub
and
pusha
sub
push
rcl
sub
jns
int
bound
out
cs
lods
cwtl
outsl
aad
dec
addr16
sbb
inc
mov
pop
mov
and
jae
mov
xchg
lea
inc
in
add
insb
sub
push
ret
and
jecxz
add
addr16
cmpsl
in
mov
sbb
adc
faddl
pop
sbb
cmp
dec
jno
lods
imul
inc
adc
mov
leave
in
mov
jmp
dec
cmp
shrl
loope
loopne
gs
pop
mov
jg
and
mov
popa
mov
int3
xorb
sbb
sbb
sbb
adc
cld
popf
cmpsb
gs
ss
mov
and
clc
xchg
mov
mov
xor
insb
and
mov
jo
or
or
sbb
xchg
sahf
push
dec
inc
shlb
xlat
or
adc
xchg
loope
push
push
jno
push
mov
subb
add
mov
dec
mov
adc
push
pop
dec
andb
and
aam
out
fsubrp
ljmp
mov
add
cmp
es
mov
cmp
mov
jg
aaa
xor
arpl
test
dec
push
xor
adc
in
movsb
lea
cltd
cmpsb
enter
mov
push
inc
leave
repnz
ficompl
in
popa
orl
jns
push
lret
insl
mov
aad
rcrb
in
dec
mov
pop
adc
aad
xchg
xor
push
xlat
negb
rcll
mov
mov
xchg
scas
mov
test
sub
aam
mov
mov
xor
jns
xor
mov
mov
lods
xchg
sbb
popf
ja
sub
inc
inc
pop
and
gs
push
xor
js
movsl
mov
mov
std
adc
scas
add
out
cmp
cmc
lea
jecxz
lret
and
inc
ret
shl
ss
test
stos
sub
test
pop
add
movsb
jmp
test
lret
pushf
es
adc
insb
sbb
pop
add
out
popf
sbb
out
fsubrl
mov
mov
in
frstor
jns
or
mov
pop
or
lahf
fs
jne
shlb
lock
test
lret
xor
mov
dec
repz
pop
inc
mov
add
adc
mov
popa
xor
inc
daa
sti
xchg
push
mov
repz
mov
iret
insb
das
mov
sub
add
fldcw
cmpsl
sub
mov
call
push
incb
add
or
aam
popf
rorb
lcall
dec
sub
lahf
lds
daa
filds
xor
popf
lods
add
outsb
pop
aaa
cmp
stc
jnp
sti
add
mov
test
lcall
pop
mov
shlb
aad
gs
lahf
add
cwtl
lods
nop
fimull
cmp
inc
jmp
xchg
xchg
push
fs
fmul
cmpb
pop
ss
shrl
dec
rol
rolb
adc
shlb
out
movsl
xchg
rol
divl
dec
sub
add
imul
sahf
test
clc
pmulhw
adc
insl
dec
sbb
adc
add
mov
lock
lcall
sti
mov
jno
cmpsl
xchg
jecxz
loop
into
cli
ljmp
jo
jmp
test
jo
mov
aam
adc
scas
jp
dec
leave
pop
dec
xchg
mov
dec
into
sbb
push
sub
push
sbb
xor
leave
fwait
mov
in
je
nop
adc
pop
inc
insb
aad
adc
mov
ja
out
aad
lret
iret
xchg
push
cld
push
cmp
and
xor
mov
cli
sub
ds
test
sub
adc
or
jbe
test
jp
jae
adc
test
jp
ret
mov
mov
ja
inc
and
out
push
add
movb
movsb
adc
push
icebp
jl
sub
fmull
shl
jmp
cwtl
test
fisttpll
jl
sub
xchg
mov
inc
mov
stc
push
jl
movsb
xchg
jb
lods
or
xor
xchg
imul
fldt
ja
xchg
rolb
push
jae
adc
insb
and
stos
pop
in
sbb
ds
subb
jbe
dec
push
cmp
scas
lea
add
imul
push
add
lret
rorl
jge
sbbl
jo
movl
shl
das
dec
and
or
incb
aad
pop
or
sbbl
outsl
pushf
or
jg
push
je
adc
shrl
add
imul
jp
outsl
xchg
cmp
push
fs
sbb
jae
sahf
je
je
add
in
push
outsb
in
and
ret
mov
dec
imul
mov
inc
sbb
call
fists
and
mov
mov
mov
push
stos
popf
xchg
imul
in
dec
pop
xchg
mov
xchg
mov
roll
add
sti
iret
push
rcrl
das
stc
xchg
xchg
ss
outsl
mov
sarl
inc
xor
lea
ss
imul
lcall
dec
or
mov
es
xchg
insb
out
or
movsl
mov
push
enter
pop
aaa
loop
push
test
dec
sub
mov
mov
inc
adcb
out
mov
xchg
xor
fwait
jecxz
clc
push
push
repz
sbb
push
icebp
fucomi
mov
js
jle
push
xorl
dec
inc
jge
jl
je
hlt
call
rcr
xchg
xchg
sub
iret
and
imul
inc
outsb
mov
add
out
xchg
pushf
sar
das
in
push
loope
bound
cmpsl
int
sub
adc
push
xor
incb
pusha
bound
movsl
mov
test
add
adc
clc
push
jle
push
fisubs
and
mov
jae
imul
mov
mov
mov
pop
pop
xchg
xor
add
into
mov
add
cmp
inc
in
inc
gs
push
jae
mov
aad
xchg
cmp
arpl
cltd
push
cmpsb
cmp
sub
xchg
inc
inc
push
mov
mov
inc
mov
xlat
aad
aad
adc
out
mov
sbb
in
icebp
cmp
and
jno
fmull
lcall
mov
repz
stos
cltd
les
dec
sbb
lods
ljmp
jg
movsl
xor
rcrb
inc
or
repnz
shrb
aas
ror
enter
imul
pop
loopne
xor
repnz
add
cmp
dec
push
rolb
rorb
sbb
sub
inc
jb
rcrb
adc
movsl
xchg
dec
popa
out
movsl
sbb
lret
push
pop
or
daa
lea
push
dec
aam
cmp
inc
out
rclb
xor
jne
mov
arpl
lods
lret
xor
cmpsl
outsl
imul
sbbl
xchg
push
mov
into
and
sub
in
cmp
test
js
add
aas
xor
xor
adc
insb
bound
add
xor
push
mov
cmp
cmp
push
subb
inc
push
lret
sub
jp
ss
in
jl
jp
mov
stc
out
std
push
adc
cs
mov
dec
or
fisubrs
or
xor
push
ljmp
cmpsl
jmp
nop
lods
cmpsb
fidivrl
cmc
mov
pusha
xchg
add
or
pop
jo
je
ja
shrb
cli
pop
fwait
daa
test
imul
jecxz
add
mov
xchg
std
addr16
pop
jge
dec
imull
es
push
cmpsb
stos
adc
xchg
jne
fiadds
mov
into
xchg
xor
mov
dec
lret
mov
push
insb
xchg
inc
fs
cmovae
sub
lahf
push
cmpsl
mov
leave
mov
inc
cld
nop
js
mov
arpl
out
add
add
pop
sti
jg
fsubrl
fcom
push
outsb
aad
pop
mov
mov
pop
push
shl
adc
movsl
jne
and
mov
mov
scas
in
dec
or
std
loope
mov
jo
pop
xor
cld
lds
and
lret
xchg
fmuls
jecxz
cld
add
mov
call
scas
push
enter
ja
jp
loopne
mov
lret
jmp
mov
or
pop
stos
add
ret
lahf
jns
jge
xchg
pop
xchg
sbb
mov
cltd
inc
and
push
jno
pop
push
xchg
xor
js
mov
aaa
fldl
push
fs
int
push
and
xchg
push
jns
dec
mov
jp
int3
movq
cs
mov
fldcw
addr16
pop
cmp
push
dec
mov
test
out
cld
jae
and
push
insl
int
daa
shll
in
pop
mov
dec
xchg
ret
xchg
inc
jb
nop
arpl
sub
mov
mov
cmp
push
lahf
cmp
mov
hlt
jno
daa
and
test
or
out
hlt
test
xchg
sbb
xchg
sub
sub
pop
mov
outsl
stos
and
leave
sub
pop
loop
mov
jno
call
fdivrl
fwait
pusha
push
or
adc
jmp
aam
cmp
xor
mov
fcoml
sahf
cwtl
jno
icebp
pop
shll
mov
loope
cmc
jbe
gs
xor
mov
in
cmp
mov
pop
jo
add
cwtl
cmc
mov
and
imul
xchg
lock
dec
mov
mov
push
pushf
sbb
mov
push
test
cmpsb
push
push
daa
pop
jnp
fs
loope
jno
lds
jl
xchg
add
pop
shrl
xor
sub
push
xor
dec
inc
das
rorl
xchg
sbb
fnstcw
fdivrs
dec
mov
jmp
mov
cs
clc
xlat
cs
inc
ret
outsl
or
dec
inc
lahf
and
das
cmp
cli
shl
clc
test
stos
inc
add
dec
inc
ja
jno
ret
loope
cmp
pop
in
sub
mov
and
in
inc
push
stos
mov
pushf
and
xor
lret
lea
xchg
inc
push
mov
arpl
aaa
inc
add
pusha
stos
in
xchg
xor
stos
rclb
xchg
and
fadds
aam
imul
and
dec
dec
inc
sub
xchg
movsb
test
or
clc
outsb
pop
mov
negb
lahf
or
inc
mov
dec
mov
mov
popf
inc
iret
mov
sub
lret
nop
mov
or
out
arpl
push
add
call
ret
pushf
mov
aas
pop
cli
outsl
mov
lods
aam
loopne
das
scas
xlat
ljmp
xor
sbb
loope
lock
pushf
mov
lret
xchg
mov
pusha
jge
adc
cmp
inc
mov
loop
in
jg
sub
pop
std
dec
push
mov
test
aas
ret
je
adc
mov
add
pop
adc
mov
and
or
sub
nop
outsl
sub
adc
jmp
daa
mov
mov
loope
mov
jmp
xchg
lret
js
fistpl
pop
add
jecxz
pop
jo
pop
jne
sbb
rorb
test
dec
and
mov
mov
iret
and
fstps
push
jae
mov
jnp
mov
jecxz
cld
xchg
mov
cmc
rol
adc
add
sbb
push
mov
pop
sbb
dec
push
js
jne
jb
mov
int3
out
push
shll
sbb
hlt
call
les
bound
sub
stc
idiv
int3
hlt
in
inc
push
std
int
in
and
jle
add
cmp
jns
xor
jmp
mov
jnp
cld
sarl
or
push
pop
fcoml
mov
mov
stos
mov
add
lock
jnp
mov
push
push
and
test
popf
stos
imul
cmp
push
fldt
push
sbb
push
cli
and
mov
mov
and
popa
aad
push
mov
das
inc
inc
pop
pusha
clc
add
xlat
test
cltd
sbbb
jns
and
add
mov
push
mov
push
out
hlt
rolb
mov
jae
dec
lock
inc
arpl
inc
jae
dec
into
push
add
sub
pinsrw
mov
xchg
les
add
jo
mov
cmp
test
sub
les
or
fstpt
inc
lds
ret
sub
clc
idivl
xor
add
cmp
aam
xor
cmp
fcmovbe
cmp
pop
adc
mov
test
movl
add
retw
sub
add
adc
mov
jl
mov
test
in
rcrl
cmc
cmc
dec
lret
inc
test
and
cld
out
sbbb
push
in
ljmp
push
data16
pop
cmp
dec
inc
out
and
mov
lods
or
sbb
pop
iret
out
mov
mov
xor
int
add
fwait
aam
test
push
adc
push
xchg
mov
mov
les
sbb
add
loopne
push
aam
pusha
pop
mov
cwtl
pop
cs
cld
inc
popf
cmpsl
fsubl
scas
xchg
jecxz
hlt
mov
ds
xlat
cmp
inc
in
cmpsl
sub
lea
repnz
mov
icebp
xchg
mov
fs
dec
les
xor
movsl
push
jecxz
inc
lods
fisttpll
shll
loope
repnz
xchg
insl
lret
fdivs
push
push
xchg
mov
in
xchg
ret
add
das
add
or
dec
in
mov
icebp
testb
les
xor
push
jecxz
pop
sbb
cli
mov
mov
outsb
mov
in
aad
push
dec
cltd
mov
sub
outsb
adc
fidivrl
cs
std
int
sbb
insb
js
jge
gs
xchg
cmp
mov
dec
lds
xor
jl
and
out
xchg
js
push
cmpsl
mov
cmp
inc
std
or
shrl
shr
pusha
xchg
push
pop
rcrl
test
pop
stos
mov
adc
mov
addr16
mov
call
fdivl
out
cmp
mov
fwait
movsl
pop
push
stc
push
cli
cmp
pop
mov
stos
sbb
push
xor
jge
or
dec
fsubrs
pop
adc
out
mov
or
in
dec
and
fimull
push
add
cmp
in
xor
sar
cmp
add
push
stc
pop
int3
or
fld
in
xor
repz
adc
stc
in
in
fcomi
ret
dec
dec
pusha
push
imul
push
inc
mul
jb
cmp
sub
pop
sub
cmp
daa
mov
lock
pusha
fmull
leave
jl
cld
call
dec
es
jae
leave
sub
xor
mov
xchg
xchg
fs
mov
push
outsl
jno
inc
jg
xor
or
add
mov
adc
rcrl
jne
shl
cmp
arpl
repz
xchg
imul
xor
leave
sahf
xor
ret
xor
xchg
xchg
dec
inc
push
fs
pop
in
imul
nop
mov
inc
std
dec
outsl
xlat
ja
addr16
lock
adc
mov
into
adc
or
and
mov
sub
add
or
rorb
mov
xchg
and
mov
pop
sbb
fdivrl
mov
rep
cli
sahf
in
xor
arpl
out
cmpsl
adcb
loopne
mov
shlb
add
xchg
xchg
addr16
ljmp
in
pop
lahf
push
push
imul
flds
jne
jmp
mov
dec
and
jecxz
repnz
repnz
mov
or
push
subb
sub
mov
std
ljmp
push
mov
jge
js
fwait
test
lcall
cs
xor
push
outsl
out
mov
test
dec
andb
call
pop
addr16
popf
cmp
push
mov
mov
pop
cmpsb
push
in
add
fadds
stos
sbb
les
lcall
xchg
inc
xor
and
adcb
negl
xchg
inc
xlat
or
lea
jae
out
int
jnp
push
jae
pop
jmp
adc
and
xor
cmp
rcl
dec
sbb
dec
push
mov
hlt
push
push
xchg
pop
mov
dec
adc
adc
dec
test
subl
cld
ret
jae
jns
mov
push
movsl
pmuludq
fdivrs
mov
inc
imul
hlt
aas
dec
enter
xchg
and
pop
cmp
xchg
xchg
add
mov
je
or
fnstsw
mov
in
scas
or
adc
dec
cwtl
mov
ds
inc
insl
fwait
out
dec
add
mov
dec
push
icebp
scas
pop
xchg
hlt
add
pop
or
pop
cmpsb
or
xchg
iret
aam
fs
jns
jp
pop
ret
aas
jno
add
xchg
sbb
sbb
cmp
cli
push
popa
xor
mov
inc
jl
faddp
movsl
dec
out
fdivl
xor
xchg
ret
jp
push
or
sbb
andl
outsb
scas
jae
mov
cli
sar
inc
sbb
es
sahf
out
sbb
aam
jp
shl
stos
adc
and
aam
push
xchg
xchg
mov
shrb
pop
adc
insl
push
aam
sbb
jns
pop
lea
stos
adc
mov
xor
mov
jg
testl
mov
mov
stos
mov
pop
and
push
insl
lret
out
sub
sti
mov
into
shrb
xor
jl
lods
xor
add
out
mov
pop
lock
lds
jo
repz
sub
test
in
push
and
das
mov
xchg
pop
daa
das
adc
cmp
jae
or
cmp
xor
aaa
and
popf
hlt
leave
push
aad
pop
out
insl
addb
mov
imul
add
mov
enter
orb
adc
or
ret
push
adc
shl
loope
inc
jne
jnp
mov
add
xchg
add
cmp
movsb
mov
outsb
cli
sub
push
sub
xlat
scas
lock
cli
lret
jae
or
dec
bound
jbe
xchg
fcmovbe
rcll
jo
lahf
jo
add
cmpsl
out
and
lcall
cwtl
setge
mov
push
lret
xor
ret
sbb
test
inc
and
fnsetpm(287
cmp
jmp
xor
in
repnz
shlb
pop
add
stos
mov
push
cmp
mov
pusha
push
push
popf
xchg
mov
sarl
stos
hlt
fcoms
roll
or
mov
lods
inc
pop
pop
mov
mov
aad
pushf
jp
add
xchg
xchg
mov
test
lds
out
push
and
or
cwtl
xchg
mov
adc
inc
xchg
sbb
mov
in
clc
fcmovnb
ss
jg
mov
xchg
shlb
cwtl
cmc
mov
scas
mov
cli
push
xor
les
or
dec
cmpsl
pop
call
jns
dec
fmull
pop
fstpl
xchg
lods
loope
popa
repnz
pop
mov
scas
xchg
cmp
push
push
inc
ds
sub
inc
lods
mov
call
dec
cmp
mov
and
push
out
cmp
rcr
jo
dec
lret
ret
loop
push
in
bound
mov
cmp
lds
jecxz
sti
xor
xchg
icebp
pushf
jmp
fwait
push
dec
mov
cltd
ljmp
mov
test
xor
mov
inc
jbe
jne
out
imul
out
or
jge
fcmovnbe
push
dec
adc
add
add
popa
stos
jg
cmp
and
mov
sub
in
xor
mov
inc
das
daa
aam
adc
mov
pop
sti
pop
xor
incl
loopne
cmpl
pop
cmpsb
add
lcall
pop
stos
push
add
in
mov
ds
cwtl
test
mov
nop
push
mov
jae
sarb
or
sbb
test
push
mov
dec
pop
jle
out
dec
sbb
jmp
mov
or
push
jnp
cmp
sbb
sub
in
xchg
fistpll
xlat
jae
jnp
mov
push
fwait
nop
subb
jno
setbe
mov
xchg
inc
push
cwtl
dec
push
gs
sbb
and
enter
fpatan
xor
xchg
pusha
cltd
cld
jle
das
stc
imul
cmpsl
push
and
ljmp
sub
mov
aas
iret
push
das
jae
ja
xor
rcr
ret
inc
adcb
adc
xchg
lahf
jl
call
loopne
pop
inc
out
jno
adc
in
std
pusha
cmp
mov
mov
xor
popfw
std
push
cmpsb
mov
ja
pop
pop
fucomi
push
std
ljmp
mov
ret
out
xor
inc
push
test
enter
dec
jae
mov
and
pusha
and
icebp
scas
loopne
lcall
std
mov
jo
cltd
aas
mov
jmp
or
add
jle
outsb
xor
adc
or
fs
lret
lods
jb
insl
popf
enter
cmpsb
call
inc
int3
mov
sub
mov
lods
fmull
sbb
fiadds
mov
push
ljmp
in
ret
jmp
xchg
je
and
ds
cmp
dec
in
lret
push
push
push
ficompl
add
enter
mov
cmp
mov
fs
aam
idiv
stos
sub
sahf
mov
rcll
inc
pushf
mov
xchg
push
adc
cmp
jb
je
adcb
pop
adc
shll
lods
pop
shl
rcl
cli
addl
divb
or
dec
cli
dec
mov
xor
lods
loopne
and
data16
bound
push
mov
rcrb
shlb
orb
add
dec
push
fisubl
ds
insb
xchg
inc
or
cmpsb
out
addr16
inc
lds
mov
test
mov
pop
pop
mov
cltd
push
add
pop
add
xchg
nop
mov
ljmp
add
mov
sbb
in
or
cmp
in
jno
and
into
push
xchg
and
mov
fs
jmp
xchg
cmc
out
sarb
jl
sbb
and
sub
jecxz
sbb
sbb
insl
xor
sub
dec
sub
out
js
call
pop
dec
inc
sub
cld
push
fisubs
comiss
popl
xchg
inc
test
ficoml
or
decl
pusha
add
xor
and
icebp
in
clc
int
mov
pop
rcll
ret
sbb
fiaddl
pop
aas
push
dec
lcall
aaa
jg
cmpb
jge
mov
dec
mov
or
mov
daa
aaa
rclb
pop
jo
and
das
mov
ljmp
jno
or
mov
popf
mov
test
or
jo
scas
mov
sbb
jae
das
leave
inc
mov
add
push
jnp
dec
pushf
in
dec
and
xchg
sbb
sbb
mov
cmc
hlt
mov
jp
fwait
inc
xor
xchg
orb
xor
call
cmc
xchg
cmp
imull
cmpl
and
ljmp
adc
out
out
insl
cli
jp
mov
and
push
cmpsl
inc
cmp
les
xchg
dec
insb
sub
xor
in
or
incb
and
or
aas
and
arpl
push
inc
call
sti
xchg
fisubrl
fwait
orl
cmp
repz
jo
sub
xchg
es
movhps
movsl
sub
cmp
jbe
arpl
pop
push
jne
mov
mov
xor
mov
outsl
push
jno
fists
jl
popf
stos
push
fbstp
rcr
fwait
adcb
ja
outsb
es
pushf
hlt
adc
fldt
dec
lods
ret
insb
nop
push
lock
cmp
xor
stos
cmp
shrb
mov
pop
mov
fnstsw
cmc
flds
xchg
or
add
setg
incl
mov
jp
and
mov
cmp
or
imul
mov
fnsave
cmp
or
pop
es
movl
jp
inc
cld
shlb
out
mov
lods
pop
xchg
xor
cmpsb
rclb
mov
mov
or
xchg
xchg
fs
push
pop
jge
ds
dec
dec
sbb
pop
pop
rep
addl
hlt
jl
mov
add
dec
out
adc
jne
add
adc
mov
cmpsl
jbe
adc
dec
xchg
cmp
popa
out
push
cmp
fs
mov
sbb
enter
pop
das
mov
jne
inc
inc
cmp
mov
xlat
insl
mov
cmp
into
subl
dec
or
xor
out
fmuls
popa
push
jae
mov
cmc
addr16
xchg
mov
popf
fxch
imulb
xorb
ss
fcoms
push
ds
mov
mov
outsl
pop
into
xchg
xchg
xchg
sub
sbb
push
popa
mov
mov
and
xchg
xor
inc
dec
inc
xchg
rcrl
add
or
sbb
fildl
mov
sub
in
push
ret
jb
iret
adc
xor
out
jne
mov
inc
xchg
xchg
mov
sahf
xor
jl
nop
lea
mov
loopne
cmp
pop
pop
xchg
repz
int3
call
push
out
jp
fsubs
or
arpl
pusha
int
add
stc
jnp
aas
out
cmp
mov
aas
iret
test
pushl
lock
sub
cmpsb
movsl
test
in
cli
outsb
in
mov
pop
pop
cmp
fstpt
pop
jno
lret
f2xm1
rorl
shrb
pop
je
jns
or
jle
pop
ljmp
repz
add
jg
mov
es
sub
jns
cmp
mov
and
stos
lock
cmpl
push
sub
jbe
cmpsl
or
mov
ret
or
xchg
inc
cli
cmp
lods
int3
lea
lea
imul
sub
adcl
mov
lcall
jb
inc
mov
inc
inc
cld
decl
outsb
in
add
movsb
mov
pop
pop
pop
or
mov
jecxz
lahf
jne
push
dec
ljmp
aam
or
scas
dec
dec
jno
popf
movsl
mov
aaa
add
test
pop
mov
lock
pop
rcl
test
stc
cltd
inc
aaa
mov
jl
hlt
es
shlb
or
cmp
cltd
jae
ret
std
fdiv
cmc
add
mov
xchg
adc
jmp
pop
push
outsb
cmp
lock
cmpsb
sbb
cwtl
fs
mov
and
fdivs
sbb
add
je
les
dec
std
add
cmp
xchg
rcrb
aad
decl
xor
scas
out
ds
sub
and
sub
lock
add
xor
cmp
into
and
xorb
bnd
add
dec
xchg
cmpsl
push
ret
mov
adc
dec
jae
loope
jle
pop
out
mov
stos
pop
push
repz
push
sarl
add
es
jmp
iret
outsb
outsb
aas
xchg
fwait
xor
xor
test
popf
les
dec
aam
in
pop
loop
dec
xor
stos
out
mov
inc
shl
sub
pushf
xchg
shl
frstor
insb
sti
and
mov
add
sub
ret
call
cmpsb
test
dec
je
push
push
pop
in
nop
inc
jo
scas
or
ja
pop
fstps
mov
jnp
loope
fwait
sub
add
int
shlb
dec
mov
popf
scas
in
sahf
jmp
sub
sub
addr16
dec
adc
test
pop
lea
cli
adc
lret
int
pop
pop
mov
adc
in
inc
testl
add
sbb
xchg
cmc
mov
mov
in
nop
inc
lcall
jge
xor
out
xor
jns
shl
nop
cmp
je
dec
smsw
ret
hlt
sarb
arpl
inc
inc
xchg
jnp
push
iret
insb
sbb
into
jecxz
scas
inc
stos
jmp
cmpl
cmc
movsl
arpl
popa
inc
lret
inc
xor
fsts
negb
leave
sbb
dec
rcll
mov
ficompl
lea
daa
pusha
push
inc
push
jo
sbb
sbb
xchg
or
xor
jp
sbb
repnz
out
cmp
outsb
xchg
jno
aam
cmp
pop
inc
push
pop
popa
sbb
inc
push
repnz
mov
or
jno
loop
test
notb
jnp
mov
jo
ss
xor
adc
jns
mov
rcrb
or
mov
add
cmp
ljmp
sub
push
loop
or
aaa
pop
mov
inc
xchg
fdivl
xchg
loope
inc
loope
and
aam
and
jns
xor
addl
and
stc
fs
jg
push
pop
adc
inc
loopne
popa
lret
into
sbb
loop
mov
mov
jns
mov
out
xchg
bsf
ds
outsl
push
add
pop
mov
stos
mov
imul
inc
sub
in
add
cwtl
push
jae
mov
mov
and
sub
out
push
aam
mov
pop
test
icebp
jns
adc
pop
mov
mov
dec
ret
scas
stc
mov
roll
push
out
lret
and
inc
xchg
or
in
xchg
mov
fstpt
push
dec
xor
adc
mov
pop
xchg
cmp
mov
ret
andl
mov
jns
in
jns
pop
pop
xchg
and
or
outsb
lods
add
sub
outsb
push
lods
sub
mov
cmpsl
mov
outsl
or
or
les
xchg
sbb
in
mov
int3
bound
cmp
sub
adc
outsl
cltd
xor
fldl
sub
fdivp
mov
sub
sbb
dec
inc
sub
jns
in
sub
mov
mov
imull
stos
hlt
push
shll
mov
gs
lret
mov
in
jb
pop
cmp
ds
loope
daa
mov
or
aam
xlat
addr16
xlat
call
fisubrs
shll
push
rol
or
icebp
pop
sahf
in
jp
xor
push
cmc
jns
cmc
push
jp
dec
das
push
xchg
push
fmulp
fidivrs
or
out
scas
lds
mov
test
add
addr16
mov
popa
xchg
test
andl
mov
mov
cmpsl
mov
fcoml
int
ljmp
addr16
sbb
mov
add
mov
sub
popf
decl
sbb
xchg
lret
ficompl
jo
ss
scas
outsl
lock
dec
jns
jmp
add
mov
xchg
mov
pop
sbb
lahf
jmp
dec
push
scas
and
mov
hlt
add
clc
loop
add
cmpsl
test
or
sbb
les
loopne
or
sbb
pop
push
adc
mov
or
add
sbb
ret
add
jno
pop
in
pop
cltd
popa
push
or
dec
dec
mov
leave
cmp
pop
cmp
test
mov
jl
push
data16
bound
pop
sub
fs
sub
dec
out
adc
subl
imul
call
or
pop
ret
lods
jecxz
xchg
pop
jb
aad
or
int
pop
mov
test
push
outsb
inc
mov
cmp
test
loopne
xchg
jle
jo
mov
or
jle
add
mov
mov
lock
sub
push
in
mov
and
pop
mov
cltd
xor
leave
cld
bound
mov
int
subb
notl
repz
stc
add
dec
pop
xchg
movsl
mov
xlat
mov
rcrb
xchg
mov
push
cmp
loope
add
mov
sbb
mov
push
pop
push
cmp
push
mov
mov
dec
and
mov
sbb
popf
call
fstpt
mov
push
xor
std
push
push
mov
xor
adc
hlt
imull
jno
xlat
cmpsl
stos
push
fdivl
mov
in
mov
add
push
push
int3
pop
and
pop
mov
fcompl
es
aas
cmp
arpl
std
mov
mov
je
push
and
lcall
xlat
jnp
ss
nop
nop
ljmp
mov
fsubrl
mov
dec
sbb
es
mov
mov
sti
sbb
adc
jno
push
push
fistl
jp
cmp
int3
adc
pop
jbe
movsl
jnp
jge
inc
dec
lods
xlat
mov
cmp
mov
lcall
enter
or
imul
popf
or
xchg
xchg
mov
popf
add
movsb
pusha
fisubrl
lods
cmp
adcl
jl
mov
or
mov
loop
sub
jnp
idiv
outsl
inc
jno
mov
fdivs
sbb
fiaddl
jmp
std
je
pop
inc
push
inc
mov
fsubs
cmpsb
cmpsl
mov
lcall
movl
sahf
pusha
mov
pop
icebp
xor
push
jle
jo
ficompl
cmp
xor
lahf
xchg
subl
in
xlat
sub
das
mov
addr16
mov
pushf
shrb
mov
std
cld
xchg
test
imul
test
aas
xor
aad
cmp
lods
cmp
fimull
mov
push
lret
lea
push
sub
mov
insb
sbb
push
cmpsl
notb
mov
jbe
int3
nop
lods
scas
mov
mov
int3
xchg
stos
or
or
mov
nop
push
or
lock
mov
mov
lret
je
js
stos
fsubl
mov
adc
aas
push
and
or
gs
jns
cltd
arpl
pop
adc
pop
push
dec
xchg
out
inc
xchg
imul
iret
dec
rorb
push
xchg
psrlq
lods
leave
adc
pop
xchg
dec
mov
stos
enter
fcoml
test
ret
jnp
test
mov
inc
adc
push
add
add
and
xor
stos
mov
rorb
cmpsl
pop
mov
cmp
adc
sbb
aas
inc
in
cltd
ljmp
or
icebp
mov
cltd
pop
ficoml
pop
out
mov
sub
fwait
or
push
data16
cmp
mov
inc
add
xchg
sarb
push
pop
sub
jno
push
mov
fsubrl
loope
scas
cwtl
in
xchg
pop
outsb
or
or
in
jp
loopne
push
xor
cmc
shr
or
int3
cwtl
in
push
inc
or
int3
or
ret
push
mov
pop
bound
and
sub
call
rcll
cld
lods
fimuls
cs
dec
daa
cmp
sahf
xchg
push
cmp
hlt
or
call
imul
adc
adc
fsts
adc
xor
push
icebp
push
xor
jno
push
mov
mov
adc
clc
pushf
pusha
mov
and
lock
hlt
cwtl
jecxz
xchg
fsts
xor
cmp
jb
shlb
push
je
xchg
test
cmpps
xor
icebp
pop
popf
cmpsb
push
cwtl
push
cmp
sti
xchg
push
jb
xchg
loope
aad
dec
xor
or
mov
adc
bound
out
sbb
pusha
insb
jnp
push
dec
xor
jb
and
sub
push
mov
daa
xor
scas
xchg
popa
enter
fdivr
call
lods
outsl
fs
pop
sbb
leave
dec
mov
sbb
xchg
mov
mov
sahf
aad
cmp
xchg
test
push
dec
bound
scas
mov
push
sbb
xchg
adc
test
negb
adc
inc
add
inc
and
or
stos
mov
sbb
stos
adc
mov
sbb
pop
push
repz
mov
sub
mov
mov
xor
jb
push
filds
adc
xchg
mov
push
add
repz
cmp
pop
or
scas
out
add
pop
jmp
and
xor
sbb
or
cmp
call
icebp
xorb
std
fwait
mov
sub
loop
scas
dec
iret
loopne
fisubrl
xor
jo
xor
shr
add
outsl
pop
ljmp
push
daa
push
fists
mov
jmp
cmp
fiadds
sub
rcrb
loope
mov
pop
push
inc
mov
stc
xchg
mov
or
daa
inc
cltd
xchg
inc
push
cwtl
aam
insl
test
js
dec
mov
cmc
mov
jae
mov
js
mov
mov
jl
iret
int3
jns
push
neg
pop
lret
mov
gs
mov
mov
push
inc
xchg
adc
sbb
jg
jmp
or
jl
stos
je
roll
test
test
mov
nop
cmp
in
sbb
in
xchg
push
loope
or
jge
test
or
sbb
inc
loope
arpl
xchg
in
xchg
mov
inc
inc
and
clc
lahf
push
mov
or
mov
xor
cmp
inc
and
lods
sahf
or
push
or
cltd
inc
fstpt
pop
dec
les
mov
les
loopne
push
dec
mov
out
mov
repz
clc
ds
daa
mov
jnp
pop
sbb
imul
and
sub
mov
outsl
call
jmp
push
stos
loopne
xor
stos
testl
dec
xlat
push
add
and
mov
lods
cld
rol
leave
sbb
mov
mov
xchg
pop
and
rolb
int
mov
sub
jbe
lods
pushf
test
push
iret
push
cmc
int
xchg
xor
push
pop
imul
fstl
les
pop
ljmp
pop
sbb
jo
sarb
ret
inc
cwtl
fwait
inc
icebp
xchg
lock
je
and
push
inc
dec
sbb
shlb
mov
inc
sub
inc
movsl
pop
js
cli
roll
ficomps
mov
xor
xor
xchg
cmp
sti
lret
xchg
into
fadd
sar
sahf
cmpsl
mov
pop
inc
imul
mov
mov
inc
test
sahf
inc
test
add
mov
mov
mov
test
pop
or
rclb
imul
pop
cld
cmpsl
add
xor
repnz
sbb
test
cmp
sub
lahf
jp
inc
mov
push
jle
and
and
insl
call
js
into
mul
orl
add
fstps
leave
inc
rcrb
xchg
adc
lods
mov
dec
pop
xchg
int
mov
test
inc
in
popf
jge
cmp
rol
jp
sbbb
fldt
xor
jb
je
fmuls
jecxz
xor
addr16
imul
loop
xchg
sbb
push
xlat
sbb
pop
xchg
out
inc
cmp
sbb
mov
aad
inc
xor
mov
xchg
test
mov
mov
add
je
std
dec
or
das
or
cli
jae
push
js
data16
jnp
inc
jno
push
leave
cmp
in
popf
adc
pop
jp
repnz
inc
lcall
in
jno
rcrl
push
fsubs
mov
add
ja
sbb
xchg
in
lea
int3
jne
mov
fnstsw
xor
or
add
add
sbb
clc
inc
cmp
in
push
mov
dec
cmc
dec
fwait
jge
rcll
cli
mov
xor
xor
dec
mov
xchg
iret
test
ret
ror
push
push
adc
lea
push
xchg
scas
out
idivb
xor
mov
popa
fldenv
in
data16
mov
xor
pop
cmp
push
or
rol
jno
pop
imul
mov
mov
jl
inc
aas
outsl
adc
cs
faddl
inc
pop
hlt
dec
cli
adc
test
leave
sbb
or
test
mov
cwtl
loope
dec
push
pop
xchg
and
pop
xor
scas
mov
sbb
ret
and
lret
dec
jo
sub
subb
data16
outsb
test
popa
inc
nop
mov
stos
loope
or
xchg
mov
movsb
sbb
daa
daa
shll
sub
sbb
add
inc
jge
or
xor
push
popa
cmp
jmp
mov
mov
repnz
push
add
repz
cltd
mov
pop
mulb
add
jg
xchg
in
dec
and
nop
scas
fisubs
enter
mov
mov
dec
mov
popf
pop
push
add
mov
adc
sub
sarl
jg
iret
jbe
add
stos
pop
inc
in
popa
push
and
andl
in
cmp
xor
xor
repz
out
adc
mov
push
push
aaa
lods
adc
mov
and
lea
loope
das
divl
out
add
push
pop
or
sti
xchg
dec
push
push
or
das
lcall
jbe
fwait
out
inc
jno
loop
es
std
inc
decl
lods
lcall
clc
add
movsl
dec
jno
repz
dec
mov
jo
aad
movl
mov
adc
cmp
jnp
imull
push
pop
dec
incb
addb
into
mov
aaa
insl
sbb
rorb
pop
stos
ja
add
fldl2e
inc
mov
imul
xchg
pop
jecxz
xchg
ja
dec
std
adc
mov
rolb
push
cltd
aas
imul
stos
aam
lods
cltd
fcoms
loop
into
dec
dec
and
xor
dec
ja
adc
out
pusha
divb
movsb
xor
fadd
mov
rcr
dec
shrl
mov
aam
cmp
cmp
fldcw
push
lock
je
scas
mov
ljmp
sbb
or
push
loopne
loope
cmp
das
idivb
fwait
xchg
or
sub
inc
lcall
mov
cmp
sbb
cmp
cs
xchg
lahf
hlt
out
inc
cmp
xor
xchg
xchg
imulb
xchg
rcrl
jb
imul
sbb
jmp
sub
jno
mov
popl
test
shlb
and
sar
addb
push
mov
jp
shll
sbb
or
cwtl
pushf
push
push
pop
je
xor
dec
mov
add
nop
sbb
popa
push
imul
cmpsb
xchg
popa
mov
test
jmp
lods
push
adc
add
mov
pop
inc
jne
cmp
daa
jecxz
jl
test
xor
push
ss
adc
icebp
ljmp
xor
fwait
mov
mov
pop
sub
push
inc
movsl
or
pusha
pop
fbld
push
out
sarl
mov
roll
inc
adc
sbb
insb
sbb
insb
sbb
sbb
outsl
adc
xchg
ds
int3
cmp
mov
fwait
mov
das
pop
loop
add
jne
fcoms
push
xor
gs
inc
push
loop,pn
incl
xchg
shr
push
popa
mov
icebp
add
or
stos
adc
mov
mov
mov
fidivs
addr16
jno
sti
ja
push
in
sbb
lret
pop
loop
mov
jle
pop
jge
mov
push
mov
in
cmp
sub
pushf
cmpl
mov
cwtl
fldt
mov
dec
adc
and
jns
lcall
add
shrb
rol
ds
sub
dec
xor
icebp
mov
mov
scas
je
adc
and
loop
jno
dec
int3
fisubrs
shrl
fnsave
adc
insl
scas
cmp
and
mov
gs
xchg
pop
adc
fcmovnb
daa
int3
sbbb
jg
and
gs
fcmovnb
dec
xor
bnd
popf
jb
jmp
test
out
cmp
dec
imul
shlb
xchg
icebp
pop
test
or
cmpl
sub
nop
cltd
shl
pop
das
arpl
pop
cmpsl
dec
ljmp
or
inc
std
push
fbstp
mov
fs
shl
insl
jae
pop
popa
popa
loope
adc
out
jbe
scas
fsubr
ljmp
pop
rclb
jb
and
hlt
scas
mov
cmp
addl
sub
fldl
mov
shrl
addr16
movsb
pop
push
push
add
push
je
sbb
ja
sbb
add
addr16
push
pop
push
push
push
fistps
das
mov
dec
stc
cmp
push
rclb
push
xchg
es
jle
into
inc
add
out
enter
imul
xchg
and
cmp
movsl
ljmp
adc
in
cmp
ds
lret
jnp
ret
popa
pop
ret
bound
jbe
jnp
ret
adc
mov
cmpsb
loope
inc
clc
push
ss
mov
xlat
jno
xlat
lea
dec
pusha
xchg
bound
fldln2
cli
pop
or
cltd
ss
dec
xchg
in
inc
mov
stos
jne
movsl
mov
aad
sti
and
out
dec
nop
aas
aas
mov
mov
inc
inc
jb
aaa
sbb
loop
movsb
lahf
fsubrs
movsb
sbb
xchg
mov
fninit
or
stc
cmp
pop
out
fnstcw
and
test
hlt
popa
stc
lods
iret
inc
int3
pop
test
xchg
mov
cld
sbb
xchg
mov
push
loopne
je
fwait
cmc
fisttpl
lods
mov
lahf
mov
in
mov
lods
push
je
and
pusha
outsb
mov
adc
loopne
ss
fstp
ret
cld
stos
xor
mov
xchg
pusha
loopne
mov
rorl
cmpsl
imul
int
dec
jmp
lcall
in
scas
std
inc
mov
lds
hlt
jno
nop
sub
enter
inc
push
xor
scas
and
shrl
div
rcll
faddl
pusha
inc
dec
fbld
xlat
fisubrl
adc
js
sbb
mov
cmp
xchg
xchg
aaa
jge
jae
mov
mov
sbb
dec
add
lcall
repz
fmulp
lret
push
cmp
mov
fisubs
je
rolb
aas
sbb
xchg
nop
repz
inc
into
push
mov
in
push
cmc
roll
and
mov
cmc
movsl
test
dec
dec
or
push
sub
hlt
or
ds
cmp
dec
je
cmp
aam
push
test
roll
movl
lea
mov
shlb
push
ss
jecxz
inc
test
jp
cmp
cmc
mov
xlat
mov
mov
push
outsb
std
mov
inc
sbbl
loopne
inc
xor
xor
scas
aam
std
fs
dec
mov
pop
xchg
dec
inc
cmpsb
outsl
xor
in
mov
out
cmova
pop
jp
jp
pop
das
mov
pushf
or
mov
inc
add
mov
and
and
js
out
ja
jg
into
ret
push
dec
dec
test
fsubs
dec
fadd
xchg
imul
mov
andb
ds
inc
mov
dec
leave
cmp
add
addr16
pop
sti
add
mov
mov
mov
push
push
inc
cmp
xor
add
mov
loop
dec
cmp
sahf
je
mov
jo
loop
push
xchg
out
mov
imull
sub
pop
push
inc
fidivs
jae
fistps
ret
lds
adc
mov
in
or
fisttpl
shrl
cmpl
pop
sub
mov
cmc
adc
cli
lea
and
and
mov
adc
sbb
arpl
test
lea
jmp
sub
push
push
pop
inc
dec
xchg
xchg
nop
pop
jle
sbb
ret
mov
test
jle
push
cmp
xchg
loop
lds
aas
lahf
add
jnp
iret
sbb
push
sub
fstl
mov
push
mov
mov
pusha
popf
xor
mov
lods
mov
jmp
fistl
das
insl
dec
addb
addr16
xor
adc
cmc
call
fldcw
fnstsw
xlat
outsl
or
sahf
sub
scas
fildl
daa
cmp
fisubrl
jle
daa
test
push
notl
xchg
jno
mov
test
dec
dec
sti
lahf
inc
xorl
scas
jle
mov
decb
push
dec
mov
ja
sub
mov
out
push
arpl
mov
mov
push
jb
inc
aas
push
jmp
sub
fidivrs
sti
push
mov
test
nop
cwtl
jl
stos
adc
nop
lds
add
fidivrs
aas
popa
popa
cltd
sbb
lds
mov
add
mov
insb
sbbb
stos
sbb
jns
and
jecxz
xchg
cmc
lret
outsb
jl
movsl
repnz
cwtl
xor
int
int3
push
iret
inc
cli
add
sub
repz
sub
cmp
fs
fbld
or
shlb
fsubl
xchg
dec
fs
and
mov
add
mov
push
inc
sub
pop
test
push
inc
or
cli
jnp
clc
sbb
imul
push
stos
adc
insl
jns
insb
insb
xor
lret
mov
or
stos
mov
jp
cmpsl
push
inc
mov
nop
or
sub
or
cmpsb
dec
mov
cwtl
sub
jl
lock
mov
dec
sbb
xlat
cmpsl
sahf
rcrl
ljmp
adc
and
cltd
stos
mov
mov
push
adc
inc
dec
and
cmp
sub
cmp
cmp
cmc
xchg
jbe
movsl
sbb
push
ret
mov
xlat
xor
jl
add
mov
dec
imul
sbbl
out
cmpsb
lcall
stos
xchg
aaa
push
sarb
ds
inc
int
push
xor
mov
cmp
mov
jp
pop
shl
adc
ficoms
add
out
icebp
lock
add
out
int
shrb
mov
mov
push
add
arpl
or
mov
pop
sbbb
mov
sbb
jecxz
mov
jne
mov
sbb
and
xchg
cmp
pushl
push
btc
jmp
jp
inc
and
imul
and
pop
sbb
fwait
cmp
push
pop
mov
shll
rcrb
jecxz
ret
jns
fsubl
mov
mov
cmpsl
jg
sub
pop
mov
das
repz
std
filds
das
movb
adc
out
imul
and
sahf
fiaddl
in
push
xchg
fsubs
cmp
sbbb
cwtl
xchg
or
jnp
popl
fdivp
sahf
dec
orb
cmp
arpl
xor
inc
mov
jno
xor
mov
js
push
xor
cmp
lcall
fwait
mov
sbb
pop
push
adc
shll
int
fisubl
mov
shr
arpl
dec
call
push
push
clc
ljmp
cmpsl
lcall
push
mov
sbb
notb
sbb
and
mov
dec
out
in
fs
sub
in
sub
pop
pop
mov
lret
ret
inc
inc
and
jbe
or
repz
push
sub
push
outsb
repz
rcrl
mov
mov
mov
cmp
movsb
call
xchg
or
orb
pop
andb
and
mov
pop
mov
outsb
fwait
xlat
jg
lock
mov
dec
lock
mov
xchg
xchg
sbbb
cwtl
add
dec
stc
ljmp
inc
sub
jae
fimull
jnp
repz
ja
mov
mov
cmp
loopne
fbld
pop
inc
hlt
cmpsb
cmp
push
xchg
roll
push
es
jge
test
sbb
lods
pop
cmc
in
ja
inc
push
cwtl
ret
xor
push
std
mov
enter
fistps
ret
sub
pusha
pop
jg
call
in
outsl
int3
sub
sti
mov
jle
xchg
xchg
gs
mov
roll
mov
stos
xchg
sub
daa
adc
dec
pop
in
mov
adc
jns
shl
jbe
mov
push
or
shrl
daa
xlat
adc
push
adc
leave
xor
stc
xlat
out
test
xor
lods
mov
rcll
jo
test
lods
mov
sbb
jns
sub
repz
mov
call
or
leave
xor
xor
pop
outsb
sub
pop
fcoml
jp
fnstenv
mov
add
sbb
jns
ret
dec
sti
fstpt
iret
or
pop
leave
mov
push
push
or
mov
sti
push
xchg
out
pop
xchg
sub
subb
push
xchg
jns
sbb
sbb
loope
scas
out
flds
add
popf
out
xor
or
testl
bound
adc
fisttpll
pushf
sbb
jae
std
inc
orb
sbb
inc
dec
mov
sub
xor
ret
dec
push
add
add
out
sbb
mov
push
inc
lods
addr16
jb
hlt
adc
cli
rorb
lret
aaa
mov
sub
mov
sti
faddp
out
inc
adc
int3
pop
and
sbb
aad
lds
push
pushf
dec
xchg
lahf
or
loope
scas
int3
fsts
add
negl
popf
mov
jno,pt
in
xchg
lret
sub
jb
pushf
les
adc
mov
mov
aaa
and
xor
or
in
push
or
sub
sbb
xchg
xchg
pop
push
push
lock
imul
jl
lcall
test
inc
data16
mov
mov
repnz
insl
test
adc
inc
dec
fnstcw
inc
mov
addr16
sub
sbb
dec
icebp
push
jecxz
lahf
pop
mov
xor
das
lret
in
ret
mov
in
cmp
in
mov
outsb
inc
shrl
sbb
icebp
lcall
lods
jecxz
sbb
je
cmp
pop
jg
or
int
mov
out
scas
sarb
shl
or
mov
push
mov
jno
xor
rorb
loope
mov
in
xchg
nop
call
sbb
imul
fcomi
fldcw
sahf
lods
sar
sbb
sbb
ja
mov
cmpsl
and
or
mov
xchg
push
sbb
fildll
or
sbb
cltd
aas
add
stc
sti
inc
ror
jg
scas
in
inc
iret
jge
outsl
push
pop
rorb
int3
mov
add
repz
push
sbb
test
push
out
fisubrs
rol
or
xor
andb
rcr
mov
sbb
add
loopne
jl
int
popf
jb
movsb
pop
add
mov
push
jl
cld
test
xlat
mov
push
pop
out
int3
sub
adc
inc
cmc
push
movsb
xor
adc
adc
dec
mov
cwtl
sub
rorl
mull
push
movsb
inc
add
cmpsb
mov
iret
lahf
jns
loop
pushf
stos
repz
sub
repnz
cmp
inc
ja
push
and
ficompl
test
mov
divl
jae
xchg
cmc
repnz
ficoms
mov
adc
mov
adc
jmp
fbld
dec
ja
xchg
xchg
jl
es
add
xor
arpl
inc
or
das
jne
lea
adc
sahf
enter
fdivrl
arpl
imul
das
jg
jns
jg
jns
add
jle
lods
out
adc
dec
xchg
jbe
js
dec
rcrb
insb
push
pop
push
pop
insb
cld
mov
inc
call
lock
push
push
add
testl
jle
sbb
imul
add
xchg
repnz
xor
xor
dec
pop
mov
push
js
add
test
ret
ficoms
push
pop
fisubs
stos
sbb
inc
sar
cmp
inc
cli
js
sbb
ljmp
mov
cltd
mov
rol
js
sub
pop
inc
lcall
dec
xor
inc
popa
cld
ror
add
push
fwait
lahf
nop
push
rclb
clc
scas
aas
add
cmp
leave
lahf
inc
testb
stos
cli
mov
mov
dec
icebp
add
dec
lock
enterw
ret
cmp
ret
dec
out
push
mov
subl
aas
jns
sahf
shrl
push
lods
sbb
or
es
gs
loope
outsb
pop
cmp
jg
mov
xchg
cmp
lods
rolb
add
mov
mov
fwait
cmp
sbb
xorl
out
jmp
sub
add
icebp
test
xor
cmp
inc
out
fbstp
xchg
sbb
and
stos
cmp
xor
mov
jle
pop
orl
subb
addb
mov
jae
xor
jno
das
mov
add
cmp
pop
cmpsb
inc
mov
sahf
push
xchg
fidivl
push
out
inc
inc
push
cmp
pushl
adc
mov
movsb
outsb
pop
mov
sbb
sub
mov
notb
clc
mov
jbe
sub
test
xor
mov
pop
clc
jg
fiadds
scas
cmc
cli
dec
idivb
pop
fsub
scas
mov
sbb
popf
jo
pop
jno
jbe
fwait
jns
add
call
call
call
pop
ds
jb
jecxz
arpl
pop
inc
push
sbb
and
out
jo
sub
test
hlt
pop
dec
scas
inc
stos
jne
mulb
shll
into
pop
inc
sub
cmp
sbb
lods
inc
jbe
mov
mov
xor
jmp
jmp
cli
mov
addl
lahf
inc
pop
andb
icebp
jns
aam
adc
in
push
xchg
sbb
ret
sbb
push
and
push
mov
mull
mov
cmp
clc
adc
pusha
cli
cli
jl
addr16
data16
adc
or
cmp
iret
movsl
scas
loopne
adc
inc
clc
mov
out
xchg
scas
jo
mov
push
add
js
mov
jmp
stos
popa
mov
dec
mov
stos
stos
cmp
dec
clc
dec
add
ljmp
and
cmp
add
jp
sbb
push
ja
mov
enter
insb
jg
mov
andl
xchg
mov
add
bound
mov
add
lods
adc
jge
dec
sbb
push
sbb
mov
xchg
push
add
cmpsb
jae
push
stos
xlat
hlt
jp
add
adc
cmp
lock
hlt
sbb
jmp
lahf
or
pop
stc
jb
gs
pop
pop
dec
mov
add
sbb
dec
sub
or
inc
jmp
jg
adc
popf
lock
add
inc
and
cltd
lahf
popa
push
hlt
pop
jb
stos
imulb
test
bndldx
cmc
mov
jb
int3
fmuls
scas
les
cld
xor
cmpb
xchg
stos
mov
out
test
or
movsb
mov
xor
adc
inc
push
rorl
out
lock
popa
mov
or
paddsw
push
adc
cmp
push
push
leave
js
hlt
ljmp
sub
mov
push
push
in
mov
sub
xlat
mov
xlat
jnp
jns
cmp
pop
stos
icebp
loope
xor
inc
sarb
lods
subb
push
dec
dec
lret
lret
sbb
push
imul
vmwrite
andb
mov
sbb
ss
and
shll
imul
ret
inc
cmovs
clc
xchg
popa
or
outsl
in
mov
add
inc
cmc
cmp
ret
fidivrl
inc
loope
dec
sbb
cs
xchg
data16
scas
daa
loop
xchg
pop
adc
sub
dec
push
xor
ret
pop
adc
ficomps
jo
rcrl
ja
jbe
inc
lret
or
mov
repnz
imul
test
push
jge
roll
lret
loop
mov
mov
arpl
fisubrl
jne
inc
pop
aad
or
xchg
js
jmp
mov
sbb
cli
fsubs
jnp
cld
dec
icebp
insb
das
jne
pop
sarb
adc
and
push
pop
mov
cmp
push
mov
dec
imul
jle
rorb
test
xor
fcoml
shr
or
or
negl
mov
jmp
addr16
jb
dec
hlt
movb
insl
das
jns
movsb
mov
jle
adc
push
ss
pop
in
mov
aam
xor
insl
imul
dec
xchg
mov
xor
add
stos
lock
imull
js
inc
mov
sub
pop
das
jne
xor
sahf
je
xchg
insl
inc
lea
mov
dec
adc
test
jo
and
xlat
xchg
and
cwtl
outsb
and
cmp
mov
pop
mov
dec
hlt
or
je
adc
shll
test
fsubrp
xlat
int3
mov
mov
jp
xchg
shlb
sub
call
mov
add
mov
shl
insb
pusha
scas
and
nop
dec
push
xor
das
clc
bound
xor
cmpsl
shll
inc
cld
adc
ret
add
gs
pop
out
mov
addr16
out
sub
mov
scas
data16
mov
data16
add
fiadds
pop
cwtl
push
gs
cmp
nop
in
aam
sbbl
inc
movsl
add
adc
mov
add
pop
mov
mov
ja
sub
mov
test
clc
lcall
cs
jno
dec
mov
test
nop
sbb
add
call
insl
or
mov
loopne
mov
jl
in
cmpsl
dec
shrl
adc
cmc
ret
jne
mov
pushf
stos
pop
fcomi
int
cltd
je
mov
enter
popa
dec
bound
and
and
shll
or
movsl
mov
push
sbb
lahf
dec
ret
test
jmp
jmp
mov
jecxz
mov
lock
ja
aas
pop
out
mov
dec
xorl
or
mov
xchg
test
sbb
sbb
add
ret
sub
adc
add
ds
out
nop
xchg
inc
ja
shr
xor
pop
out
push
not
jb
push
cltd
push
leave
mov
lret
cld
sub
push
dec
push
push
pop
mov
lea
or
testb
insb
and
stos
mov
push
push
vpextrw
or
cmp
mov
rolb
gs
cmp
xor
add
dec
or
mov
fimull
out
mov
add
orl
rcll
jne
and
mov
sbb
xor
xchg
icebp
decl
adc
in
idivb
gs
fstps
imul
or
push
test
mov
inc
cmp
movsb
dec
aaa
sbb
push
popf
lock
movb
dec
imul
incl
das
dec
in
jmp
daa
sbb
repnz
xor
mov
add
adc
loope
adc
or
hlt
sbb
xor
xlat
adc
jecxz
test
addl
add
mov
or
mov
jae
xchg
cmp
xlat
leave
fidivrl
pop
and
inc
ror
fildll
add
pushf
lds
or
into
mov
push
jecxz
cmp
out
add
into
not
scas
push
pop
inc
lcall
pop
xchg
jp
iret
scas
sbb
dec
xchg
ds
into
dec
shll
fists
ljmp
inc
xor
and
cmpsb
push
dec
sti
and
aam
fwait
addl
bound
insb
pop
jmp
loopne
push
sbb
insl
jp
cmp
sub
fsubl
test
pop
pop
sub
mov
push
lods
lret
cld
loope
xor
scas
outsb
in
testb
sbb
lea
dec
jne
test
mov
test
cmp
dec
cmp
mov
sub
loope
sbb
int3
mov
and
inc
test
xor
jbe
int3
cmp
aas
in
inc
shll
comiss
test
stc
aam
or
mov
add
fcmovu
jb
in
idivl
jge
mov
sub
rolb
fidivs
into
loope
pop
stc
lock
xchg
aaa
inc
fidivrs
adc
jmp
loop
inc
push
fs
lock
jne
data16
jnp
xchg
movsb
jae
xor
xchg
inc
shl
sbbl
inc
add
pop
jno
fwait
or
adc
mov
outsl
add
and
cmp
xor
leave
leave
mov
outsl
or
sub
cmp
imul
imul
ret
idivl
fdivr
dec
mov
fwait
mov
aas
and
xchg
xchg
imul
daa
cmp
dec
movsl
sti
xchg
mov
imulb
sub
fwait
add
push
outsb
adc
sub
insb
xor
movsl
outsb
shlb
inc
subl
in
jmp
fucom
dec
int
cmp
pop
cmp
aam
cmpsb
stos
mov
sahf
arpl
mov
cmp
and
adc
mov
aam
mov
ret
fwait
arpl
test
add
sub
pop
or
mov
inc
xchg
mov
or
ja
and
jg
pop
fdivl
test
xchg
addr16
not
xchg
out
and
inc
pop
lock
cmp
sub
xor
mov
test
adc
js
push
push
xor
mov
mov
and
clc
sub
fs
xchg
test
mov
cmp
popa
in
push
cmp
scas
testl
push
mov
ret
jmp
and
push
repz
adc
test
mov
js
dec
into
pop
push
inc
sarb
xor
cvtps2pd
xor
sub
xchg
mov
cmp
pop
ds
jno
cli
adc
lods
and
outsb
dec
loopne
outsb
and
inc
in
adc
ficoml
or
call
cld
push
fs
mov
mov
sbb
pop
pusha
sti
inc
dec
mov
mov
hlt
negb
mov
xchg
arpl
pop
lret
inc
xor
xor
mov
js
mov
out
add
sbb
fsub
dec
test
inc
adc
add
div
jnp
sub
lock
cs
movsl
add
xchg
add
stc
cwtl
mov
add
icebp
dec
nop
aas
pop
ds
jne
xchg
mov
mov
inc
pusha
mov
and
and
sbbl
test
adc
jecxz
inc
mov
aad
and
stos
aad
shrb
fsubl
jle
jge
ljmp
push
xchg
adcl
into
xchg
jl
add
jmp
jb
jbe
das
bound
in
jp
and
pop
cmp
lahf
popa
cmpsl
insb
or
mov
xchg
sbb
aaa
mov
add
fisubrs
inc
aaa
and
mov
int
sub
pushf
mov
mov
jnp
pop
test
decl
shll
sbb
xlat
xor
data16
fisubs
iret
fcompl
jno
sahf
sub
sahf
mov
or
xchg
das
jecxz
jecxz
aas
cmpsl
popf
popl
lea
mov
add
push
fmull
mov
pop
addr16
mov
jecxz
cmc
cs
mov
dec
call
dec
outsb
stos
test
mov
in
mov
xor
mov
mov
mov
cmp
mov
aaa
xchg
push
fsubs
aaa
xor
inc
sbb
push
popa
adc
sub
lods
negl
jge
cmpsb
iret
cli
jo
je
loope
movsl
xor
xor
push
mov
ljmp
and
outsb
fstps
stos
xchg
xor
sbb
pop
stc
pushf
pop
or
in
fdivrl
xor
out
cmpsl
jne
cmp
sahf
adc
mov
popf
push
dec
xchg
pusha
mov
cld
jmp
and
jg
scas
icebp
xchg
xor
jb
test
fwait
lret
shlb
pop
xchg
push
or
mov
fsubl
mov
mov
in
movsb
aas
jb
jb
and
push
rcrb
pop
cwtl
daa
add
ljmp
or
cmpsl
stos
mov
mov
mov
incb
es
jmp
std
pop
jle
add
leave
push
inc
aaa
fsubl
int3
and
aas
insb
insb
aam
imul
pop
mov
jae
pop
arpl
mov
daa
add
xor
ljmp
fldl
imul
mov
push
addr16
mov
inc
mov
lock
leave
outsl
les
or
ret
push
jle
or
ret
add
push
xchg
out
mov
mov
sbb
push
loop
addl
pop
ret
push
jno
jae
jg
pop
mov
push
std
sub
addr16
mov
test
sahf
aad
mov
xor
das
adc
rorl
jmp
sub
fmuls
jne
clc
mov
cmp
adc
dec
mov
nop
or
gs
fildl
out
sub
stc
insl
adc
jne
push
jnp
or
sti
dec
in
push
mov
lea
push
cld
popf
xor
xlat
sub
enter
inc
ljmp
call
in
and
mov
lea
mulb
movsb
xlat
push
icebp
jp
fcoms
jle
pop
inc
mov
jnp
and
xchg
cli
jg
push
hlt
test
out
jo
out
cld
fwait
or
lods
mov
scas
lahf
sub
xor
pop
test
pop
adc
jge
sub
pop
ret
gs
mov
fidivl
das
inc
pop
add
jbe
mov
xor
andl
or
sub
adc
imull
dec
nop
lea
dec
gs
add
xor
inc
test
outsl
pop
lret
and
add
ss
outsb
insb
in
add
dec
pmuludq
jge
sub
add
fisttps
jl
aas
dec
in
jnp
push
das
insb
dec
sahf
mov
jl
das
adc
push
stos
and
push
mov
popa
inc
fdivl
stos
xor
lret
jae
pop
sahf
xchg
pop
fmul
stos
xor
push
fildll
push
xchg
fistpl
insb
adc
xchg
adc
mov
lods
aam
pop
jle
aaa
pop
pop
mov
popl
push
and
rcrb
adc
jle,pn
mov
xor
es
out
outsl
dec
sbbb
outsb
das
mov
inc
xchg
ret
outsb
popa
add
inc
mov
xor
and
fcomp
jmp
ret
mov
imul
sti
and
push
inc
lahf
inc
mov
mov
xchg
bound
loopne
popf
jb
add
incl
fprem
mov
fmuls
test
adc
lock
shrb
outsl
adc
insl
sarl
in
mov
in
and
es
jle
dec
fisttpl
das
lret
adc
inc
and
sub
jo
xchg
sub
cmpsl
inc
pop
push
outsb
lods
fstpl
mov
addr16
sahf
xchg
cltd
es
xor
mov
aam
dec
and
lahf
ja
cli
or
out
ljmp
push
sub
or
lahf
scas
lock
add
xchg
jle
repnz
imul
lret
push
add
std
daa
mov
xor
mov
dec
xchg
test
cmp
lret
add
push
mov
das
das
dec
mov
sub
repnz
scas
fwait
stos
mov
push
lret
outsl
mov
mov
das
and
lret
rcrb
mov
fisubl
fdecstp
jmp
pop
xor
cmp
sub
jp
xchg
xchg
lret
popa
cmpsb
inc
lahf
les
insb
andb
mov
push
add
fwait
lcall
or
aaa
cmp
pushl
pop
xor
daa
sbb
push
stos
in
stc
inc
jmp
mov
adcb
push
leave
xchg
xchg
je
arpl
gs
stc
ret
xor
inc
mov
jle
sahf
sub
pop
mov
nop
fstps
add
mov
fs
ret
xchg
in
out
repz
push
and
jo
or
inc
pop
xor
lds
pop
fsubl
add
cs
icebp
add
popa
and
jae
push
repz
xor
mov
jecxz
mov
dec
push
lock
pop
sub
rcr
cmpsl
dec
jmp
xorb
push
out
inc
dec
cmp
hlt
in
adc
dec
adc
xor
mov
lcall
mov
mov
jno
xchg
fsub
adc
inc
loope
dec
rclb
repz
mov
or
mov
inc
je
sbb
js
lock
scas
mov
add
stc
ljmp
mov
mov
sbbb
cld
idivl
xor
lret
jecxz
push
mov
xchg
clc
jecxz
lds
adc
lods
jbe
cmpsl
jns
lea
arpl
mov
pushf
data16
aas
loopne
out
in
and
ss
mov
enter
sbb
out
mov
popa
shlb
mov
ss
lods
dec
jle
fnstcw
jno
loope
in
mov
or
cmc
mov
jnp
jl
sub
mov
push
test
les
and
sbb
sti
mov
ficompl
xchg
push
iret
addl
mulb
loop
popa
icebp
pop
nop
jl
pop
fcomi
dec
adc
fucomi
mov
xchg
dec
mov
push
mov
imul
mov
jnp
mov
push
mov
lds
ficomps
int3
push
mov
mov
dec
and
add
mov
fldcw
mov
ljmp
aas
aad
xchg
mov
mov
es
adc
sbb
dec
cmp
outsb
xchg
out
xchg
in
lret
mov
and
fidivs
aaa
fsub
inc
aad
leave
adc
add
cwtl
loop
jno
dec
pop
scas
sti
mov
xorb
sub
mov
fdivp
dec
mov
mov
mov
clc
push
push
add
dec
cmp
je
and
dec
xchg
sti
xchg
lahf
call
pushf
icebp
mov
ljmp
push
xor
adc
cmp
aas
out
add
ret
enter
lcall
arpl
rolb
aas
scas
sub
push
xchg
mov
addr16
pop
faddp
and
repnz
insl
jno
sti
xchg
sub
add
inc
xchg
shrl
cmp
filds
xor
mov
leave
pop
cmp
xchg
outsb
pop
roll
xchg
js
pop
lock
or
scas
fidivl
jg
adc
add
cmp
or
enter
xchg
xchg
or
cwtl
cmp
sub
xor
dec
inc
sbbl
ret
into
fildl
pop
movsb
cmpsl
inc
inc
push
comiss
nop
stc
mov
and
outsl
mov
stos
sub
pop
mov
scas
inc
fnstcw
loopne,pn
lcall
lret
rcrl
mov
idivb
fwait
das
push
mov
stc
imul
fwait
in
mov
push
mov
out
cs
and
insb
fldenv
movsl
pop
insb
dec
imul
idivb
inc
loop
in
cmc
sbb
fwait
imul
dec
repz
pop
xchg
stc
pushf
stos
cmp
fadds
cmova
and
fcmovnu
pop
imul
jo
fs
lret
cs
mov
insl
sahf
jnp
stc
jge
fildl
fsub
cli
mov
mov
nop
mov
cmc
and
push
mov
adc
inc
sahf
dec
repz
mov
aaa
sbb
stos
jle
pusha
insb
and
and
out
push
xchg
or
fildl
cs
xor
jl
mov
mov
inc
mov
lret
pop
fidivrs
mov
and
cmp
xor
mov
loopne
pop
std
into
sbb
and
fiaddl
mov
ffree
push
leave
sub
pusha
jb
sbb
xlat
movsl
jns
jecxz
hlt
test
in
insb
xchg
mulb
test
repz
dec
stos
push
in
pop
cmp
xchg
addr16
or
loop
adc
and
dec
in
cltd
aas
in
push
sub
add
push
jmp
in
sub
xor
sbb
in
ljmp
in
push
xchg
and
cld
outsb
stc
movsl
ret
outsl
enter
test
pop
dec
inc
cmp
adc
push
pusha
pop
jb
pop
jne
fsubrl
add
inc
addr16
loope
push
mov
jmp
insl
cmc
fnstsw
pop
mov
xchg
out
imulb
dec
jmp
jbe
popa
popf
adc
scas
hlt
fmull
mov
in
cmc
subb
lcall
repz
cmp
push
aaa
icebp
imul
dec
pop
je
dec
aas
pop
stc
stc
bound
cli
std
test
out
pop
and
bound
cld
fstps
test
aad
incl
inc
sbb
add
lcall
iret
les
push
hlt
pop
fcompl
into
mov
add
ud2
adc
inc
loopnew
loopne
xchg
sbb
sysret
mov
pop
stc
enter
cltd
adcb
jnp
mov
adc
dec
add
cli
fdivrs
jecxz
sbb
adc
in
dec
fsqrt
cld
push
xchg
cmp
adcb
dec
lods
mov
les
loop
rcl
ret
mov
jl
sbb
daa
sub
leave
inc
in
add
test
xchg
and
sub
mov
push
jecxz
cmpsl
jbe
adc
xchg
dec
or
pop
aas
inc
shll
mov
cld
arpl
ret
iret
cmpsl
mov
push
adc
fnsave
mov
mov
adc
sub
or
test
mov
lcall
stc
xchg
sub
xor
pop
shl
and
inc
int3
xchg
xchg
add
sti
cld
xchg
test
add
mov
ret
insb
pop
push
mov
jl
jg
loope
out
pop
dec
popa
push
xchg
das
pop
lahf
jecxz
mov
pushf
cmp
adc
mov
inc
inc
arpl
aas
in
jns
flds
arpl
test
mov
std
mov
jle
js
enter
pop
jecxz
push
pop
in
icebp
ljmp
shrl
adc
test
bound
jle
cwtl
adc
loope
pop
pop
cmp
lock
outsb
jp
dec
inc
xchg
mov
adc
jnp
jbe
pop
repnz
jnp
lods
jno
or
sub
sbb
adc
xchg
push
filds
mov
fstps
out
sub
fstps
test
jg
mov
scas
out
cmpsb
ds
ret
bound
js
mov
pop
add
aaa
and
pop
mov
ret
pop
jno
adcl
adcl
daa
mov
push
xor
and
mov
xlat
hlt
mov
imul
sbb
cmp
sahf
and
test
mov
stos
dec
fmul
xor
leave
mov
add
lret
jge
inc
outsl
mov
int
frstor
add
gs
dec
inc
sarl
je
sub
jecxz
mul
add
clc
jle
outsl
dec
pop
jno
clc
mov
cmp
add
dec
ljmp
sub
rcl
imull
test
dec
xchg
movb
mov
xchg
pop
sub
adc
jp
push
or
xchg
xchg
aaa
cmovb
add
pusha
cli
lea
mov
pusha
jns
psadbw
mov
ret
adc
push
daa
or
or
leave
sub
and
dec
outsb
push
and
mov
lods
imul
and
mov
rolb
and
out
xor
push
fsub
inc
jne
xor
mov
xchg
fcoml
out
js
mov
mov
xor
push
mov
push
mov
ds
out
mov
xchg
out
outsb
dec
mov
adc
and
add
sub
dec
pushf
push
icebp
adc
adc
cmp
sub
adc
stc
negb
in
inc
not
fdivp
push
mov
xlat
xor
into
clc
mov
shrl
jge
push
xor
and
lods
or
jae
cltd
jecxz
dec
mov
xor
lret
lret
dec
xor
rcrl
int3
mov
insb
lds
loopne
imul
lahf
or
mov
movsl
loope
xlat
sbb
xor
insl
xchg
cmp
out
enter
xchg
jge
adc
and
mov
pop
sub
dec
ror
dec
sub
pop
ficomps
cmpsl
mov
xor
cmpsl
ljmp
lods
int3
int3
enter
out
sub
in
add
sbb
pop
mov
pop
gs
xchg
arpl
xor
cmp
mov
inc
dec
jbe
inc
xchg
mov
aas
pop
sar
push
sbb
add
fnstenv
mov
repz
repz
sti
dec
fstl
lcall
cmp
push
pop
int
mov
sbbl
adc
cld
fsave
push
jo
adc
and
or
cli
outsl
fisubrs
das
sub
shlb
push
das
xchg
jle
fs
lods
or
out
cmpsb
mov
fldcw
in
or
xchg
adc
dec
mov
leave
inc
sub
push
inc
adc
sbb
mov
mov
jl
fstl
loop
outsl
cmp
dec
aaa
xchg
rolb
sub
int3
lahf
adc
cmp
jbe
lret
adc
xor
inc
sub
jb
pop
out
jb
xchg
mov
arpl
sbb
in
repnz
cmpsl
movsl
jl
adc
ja
mov
orl
jno
sub
or
aaa
and
imul
outsl
xchg
and
cmc
pop
dec
dec
mov
icebp
scas
fldl
imul
movsb
dec
hlt
aam
add
xchg
cmp
adc
xor
lahf
sbb
and
addr16
mov
loopne
mov
mov
push
hlt
popf
add
jmp
mov
popa
and
gs
adc
pop
xor
cmpsl
lods
lahf
iret
or
daa
leave
pop
hlt
notb
sbb
xor
jp
xchg
jbe
push
ss
xchg
gs
sbb
imul
cmp
jae
loopne
cltd
cmpsl
mov
cwtl
cmpsl
mov
loopne
jmp
jb
ja
sti
cmp
popa
xchg
jp
cmp
and
and
lret
sbb
adc
xlat
sti
idivl
stc
or
into
cmp
jo
das
sarb
push
testl
aaa
push
out
call
mov
insl
sbb
call
lahf
imul
test
lahf
jns
adcl
cmp
movsb
cmp
push
sbb
mov
adc
add
push
dec
mov
push
mov
shr
adc
test
call
mov
int3
jge
fisubrs
insl
xor
adc
or
je
jl
loope
pop
adc
loop
mov
shl
or
adc
push
pop
enter
or
test
in
pop
fsubr
xchg
dec
sub
cmp
push
xchg
and
lea
rorl
inc
mov
and
cld
jns
adc
sub
loop
jns
dec
addr16
insl
add
pop
or
jno
out
adc
push
imul
fcom
fcoms
insb
lret
add
shr
dec
mov
rclb
sbb
sub
dec
cltd
and
xorl
pusha
lahf
xchg
bound
sbb
call
mov
scas
push
push
pop
sti
daa
mov
pop
out
cs
faddp
rcll
inc
xor
mov
fucomi
xlat
pop
loop
cmpsb
imul
arpl
jo
mov
inc
xor
movsb
sub
orb
cmpsl
mov
pop
iret
ja
enter
ljmp
cmp
jae
add
xchg
mov
js
or
jnp
ds
sbb
dec
push
icebp
mov
xchg
lea
xchg
mov
add
pop
sbb
xchg
dec
xchg
jge
adc
cmc
punpckhwd
clc
cmp
cmp
cmpsb
push
lret
enter
cmp
push
out
shrl
cmp
adc
mov
or
scas
pop
dec
add
cmp
std
lods
into
aaa
push
sarl
stc
inc
inc
cmpsb
cmp
out
cmp
adc
adc
xor
inc
enter
rolb
enter
xchg
or
adc
lods
cmpsl
roll
jp
rclb
xchg
stos
dec
jo
jnp
imul
cld
add
sbb
mov
std
xor
mov
push
pop
or
stos
push
test
lcall
inc
lea
loop
inc
xchg
sub
push
adc
scas
leave
mov
mov
loop
sub
dec
xchg
adc
jno
xchg
jne
jg
fildll
out
in
outsb
xor
adc
ret
xchg
xchg
test
das
adc
adc
and
or
dec
dec
inc
mov
mov
cmpsb
out
cltd
movl
or
mov
bound
jp
push
lods
pop
adc
call
or
lret
scas
or
je
adc
inc
repnz
cmpsl
fidivrs
dec
xor
jns
dec
pop
xor
lods
adc
adc
aam
lea
pop
inc
cwtl
add
aad
mov
push
clc
mov
call
jns
fsubl
xlat
sbb
xor
subl
bound
inc
pop
aam
and
jg
out
out
and
movsl
jnp
pusha
jne
rol
insl
lds
std
fiadds
popf
bound
std
mov
cwtl
sub
dec
and
or
or
sub
imul
bound
sub
sar
sub
addb
stos
cmp
jmp
rorl
xchg
push
repnz
insb
push
rclb
hlt
les
lahf
ljmp
decb
lods
pop
ret
shll
inc
std
cmpsl
dec
and
adcb
cmpsb
fstpl
jmp
push
pushf
popf
xchg
ret
ss
aad
and
addb
aaa
jp
inc
cmpsb
sub
gs
cmp
mov
pop
mov
mov
adc
les
sahf
nop
test
mov
pop
xlat
mov
sub
push
lock
cmpl
ficoml
xor
mov
bound
cmpsb
test
or
xchg
xchg
loop
add
xor
movsl
add
pop
pop
push
dec
add
loope
jo
mov
sti
loopne
shll
in
ja
xor
fstl
call
leave
sarb
std
dec
add
in
and
and
pop
and
lahf
xor
and
xchg
mov
inc
test
jmp
test
jno
add
pop
fisubs
adc
xchg
movsl
lods
add
sbb
push
cmp
jle
push
loopne
xchg
dec
pop
jno
inc
cmpsl
aaa
sahf
cltd
fisttpl
test
pop
test
add
mov
mov
inc
popa
and
fsubrs
jae
fldl
push
inc
pop
jmp
gs
push
subb
xor
or
add
sub
lds
xchg
push
dec
adc
icebp
jnp
nop
add
hlt
je
les
aaa
sahf
jle
dec
mov
in
dec
sub
xor
fwait
and
jge
and
xor
adc
pop
pop
lds
push
lock
stos
mov
fs
fchs
mov
out
fnop
aad
mov
outsb
sbb
sub
mov
nop
dec
adc
jmp
sbb
and
mov
dec
in
stc
mov
sarl
movl
setae
push
jbe
dec
mov
cmpsb
xchg
push
pop
inc
push
addr16
fcomps
xlat
cmp
cmpsl
fdivrl
enter
sti
scas
mov
test
push
loope
and
imul
cli
pop
dec
xchg
repz
cli
mov
jmp
in
nop
sahf
sti
outsl
mov
xchg
push
xchg
or
adc
nop
jae
mov
stc
xchg
fimull
jmp
and
pusha
imul
clc
test
dec
and
pop
pushf
leave
fldt
loope
rolb
fildl
out
push
aam
lret
jg
xor
aam
jp
jmp
mov
popa
pushf
iret
test
mov
scas
pop
or
jmp
mov
leave
ds
loopne
mov
out
mov
push
xor
rcll
clc
lahf
imul
aas
mov
or
cmp
jmp
xchg
mov
frstor
fdivl
and
ljmp
and
pop
dec
push
test
out
xor
lods
add
mov
and
movb
jmp
xchg
dec
mov
jmp
outsb
and
mov
and
imulb
aad
mov
stos
jl
cltd
roll
jmp
mov
or
rclb
rcll
jae
addr16
aam
mov
js
push
leave
arpl
cmpl
insb
lock
std
int
pop
sti
cmc
jo
sub
xor
fwait
mov
push
stos
ror
jmp
out
leave
jp
push
sar
and
pop
add
pop
test
mov
aad
xchg
jns
hlt
sbb
dec
lahf
jle
pop
ret
or
jge
cmp
push
popf
cmp
xchg
sti
cmpsl
test
cmp
sub
xor
or
adc
arpl
test
movsl
xchg
std
test
jl
mov
out
or
dec
popf
fs
mov
mov
push
push
mov
add
mov
mov
dec
stos
push
or
inc
mov
mov
in
xor
pop
or
gs
sub
and
sbb
jle
add
pop
adc
in
mov
ret
inc
mov
mov
cmp
jnp
out
mov
jns
fwait
sbb
push
mov
orb
leave
and
outsb
pop
les
fsubrl
arpl
or
aad
fs
rorl
pop
mov
xchg
sub
dec
jp
pop
push
mov
jg
mov
mov
mov
add
lods
test
mov
inc
jae
or
jns
outsl
adc
bound
mov
adc
aad
push
dec
cmp
mov
or
jp
repnz
add
or
push
ret
inc
dec
faddp
out
mov
push
sbb
ja
int
fadd
inc
aad
ja
lods
mov
pop
cmp
xchg
or
mov
imul
scas
rol
fs
jp
inc
jae
rcrl
cmpsl
cltd
pop
push
outsl
pop
test
jns
mov
fimull
dec
lods
push
scas
aas
cmp
pop
mov
xor
in
pop
test
lock
pushw
xlat
inc
pusha
sbb
inc
ret
incl
lret
sub
dec
inc
fdecstp
mov
and
or
jg
mov
cmp
cld
rorb
loopne
and
lock
dec
push
sbb
sub
ret
xor
mov
int
mov
jno
xchg
mov
stos
ja
sub
jle
roll
mulb
pushf
aam
pop
repnz
pop
sub
fwait
mov
mov
sub
jmp
jge
je
inc
mov
clc
lahf
mov
push
add
inc
popf
bound
movq
add
rep
sahf
addr16
enter
pushf
jbe
out
dec
mov
sub
push
push
xor
mov
fidivrs
xchg
je
lcall
test
mov
jle
dec
out
or
xchg
insb
sbb
mov
leave
bound
or
addr16
pop
push
repz
add
fcompl
call
rcrl
hlt
and
imul
cmpsb
adcl
xor
dec
imul
outsb
jo
gs
mov
stos
mov
mov
mov
scas
jmp
push
call
cld
int
repnz
pop
popa
incb
and
jl
jmp
lahf
sub
js
dec
shll
cld
mov
lods
dec
xchg
dec
clc
loop
and
call
cs
stc
inc
xlat
cli
pop
dec
lods
cmp
lea
out
push
popf
rclb
push
cmp
ds
adc
cmc
mov
arpl
xchg
or
sbb
cwtl
cmpsb
addr16
outsl
pop
mov
fildl
sbb
xchg
scas
push
xor
imul
in
flds
cmp
or
jb
dec
add
faddl
pop
jo
add
cs
dec
cmc
inc
mov
pop
xor
and
shll
jecxz
addl
ljmp
idivl
xchg
jne
xor
xchg
mov
ret
jp
outsb
push
enter
ret
jo
sbb
mov
adc
dec
inc
mov
sbb
pushf
mov
fistl
jl
std
pop
sub
xchg
imul
call
pop
inc
fadd
dec
or
jbe
or
js
mov
pop
add
mov
testb
mov
incb
cmp
xor
cmc
testb
jno
cmp
jae
inc
clc
jb
mov
ss
jo
aam
jle
cmp
xchg
push
and
arpl
cmp
inc
rol
xchg
jmp
popf
or
mov
inc
push
ja
or
imul
out
push
and
std
sub
jmp
mov
dec
push
stc
loop
shl
test
mov
enter
or
sar
sub
fsts
xchg
fisttpll
pop
push
xchg
aas
push
std
popa
pop
dec
leave
or
fisttpl
stos
cmc
ss
pop
mov
pop
mov
repz
pop
gs
shlb
popa
fcmove
shrl
mov
jbe
cmp
into
xchg
fwait
loop
sub
push
lcall
fnstenv
fdivl
pop
popf
lea
sub
mov
repnz
insl
jle
and
pop
ss
jl
mov
and
inc
loopne
mov
insl
mov
adc
add
push
jecxz
pop
dec
pop
scas
popa
in
addl
and
ljmp
call
fadd
sub
jns
lret
mov
jmp
jne
push
mov
dec
lods
inc
and
xchg
cwtl
pop
jnp
decb
jle
push
mov
dec
lahf
mov
fstpl
lret
adc
cmp
xorb
push
sbb
scas
sub
pushf
cmp
adc
mov
jns
pushf
bound
out
cs
pushf
and
jecxz
test
sbbb
movsl
in
mov
dec
scas
xchg
shll
jb
test
xor
xchg
popf
xchg
pop
jecxz
out
dec
sbb
jge
adc
xor
mov
fdiv
pop
mov
lcall
and
mov
ret
mov
pop
sahf
xor
outsb
rcll
into
sub
cmp
xchg
sub
outsl
adc
mov
pop
push
cld
sub
or
aam
paddb
sub
jecxz
xor
lret
push
mov
push
sub
movsb
in
dec
push
jnp
sti
push
fbstp
jge
push
xchg
rorb
ja
or
adc
xor
ds
mov
inc
add
sub
dec
fwait
cld
insl
mov
rcrb
idivl
dec
in
inc
sbb
roll
mov
icebp
out
xchg
lods
mov
in
jnp
ficompl
mov
fiaddl
and
and
pop
lahf
and
xchg
ja
inc
es
push
and
push
add
hlt
js
jo
into
and
das
sbb
repz
add
mov
iretw
xchg
mov
mov
adc
repnz
popf
in
dec
sbb
mov
adc
inc
cmc
dec
test
xchg
cli
cmpl
out
es
dec
ret
sahf
sahf
mov
and
or
roll
ljmp
test
movsl
mul
rorb
sub
lock
testl
jl
cmp
mov
lea
insb
mov
adc
loopne
fcompl
pop
cmp
add
or
mov
mov
xchg
bound
xchg
sub
pop
jnp
andl
int
andl
mov
jmp
jb
sub
imul
jae
scas
and
cmp
ja
in
mov
xchg
and
sbb
pusha
mov
inc
ftst
repz
hlt
or
or
add
jp
pop
pop
arpl
fisubl
jge
push
dec
jnp
imul
sub
adc
push
push
data16
je
dec
sbb
push
dec
xchg
cmpsl
sbb
sbb
and
dec
outsl
dec
lods
push
leave
call
xor
dec
or
sbb
cmp
cltd
adc
fnsave
pop
sahf
repz
fildll
add
jb
and
pop
mov
pop
sahf
imul
xor
std
insb
cmpsl
ret
enter
pop
es
leave
dec
popf
nop
int3
test
test
je
enter
add
nop
adc
push
jns
repz
lret
negb
ret
imul
adc
lods
xor
mov
inc
dec
mov
ret
test
and
movsb
ss
sub
cmp
rolb
xchg
jne
jg
ret
loope
out
jno
xchg
in
aaa
stos
cld
mov
ret
pop
jns
cld
xor
daa
dec
shlb
dec
out
enter
sti
dec
ds
jle
jmp
sbb
mov
in
push
pop
pop
rol
sti
ret
rcrl
loopne
xchg
hlt
mov
dec
jecxz
xchg
je
jae
je
int
or
lahf
addr16
push
dec
cwtl
jp
xchg
mov
sub
dec
mov
jnp
sbb
std
pusha
mov
and
hlt
out
inc
es
aad
jb
mov
push
sbb
adc
or
sbb
inc
pop
adc
xchg
cmp
sbb
mov
adc
mulb
popf
imul
dec
push
cld
addr16
mov
or
rorb
sahf
scas
jns
int
imul
mov
push
test
js
push
popf
hlt
pop
sbb
je
pop
jmp
fs
aaa
mov
mov
pop
dec
scas
xor
push
int3
pop
cmp
ret
aad
pop
lahf
xchg
push
sub
push
push
xchg
adc
lahf
lods
imul
jns
lods
xchg
sub
insb
or
dec
popa
leave
das
mov
mov
pop
shr
cmc
xchg
sahf
shlb
mov
rcrb
mov
loopne
adc
xlat
jbe
mov
out
or
xor
push
mov
ror
shrl
jo
stos
inc
out
mov
inc
push
cmc
and
inc
mov
sbb
sbb
xor
jne
and
imul
sbb
push
test
mov
push
inc
loop
out
out
push
xor
add
pop
mov
mov
cltd
lret
pop
out
sub
push
leave
mov
ss
lret
inc
jmp
xor
push
fcomps
les
js
cmp
lds
inc
mov
sub
xchg
inc
pop
es
leave
inc
mov
mov
test
gs
mov
lea
mov
outsl
xchg
loope
inc
orl
mov
pusha
in
shl
push
data16
xchg
mov
cltd
je
inc
xor
pusha
push
sub
dec
or
xchg
test
push
lret
dec
loope
imul
enter
pop
cmpl
xor
push
outsb
pusha
and
lock
in
cwtl
aaa
pop
add
lret
jg
xchg
push
fwait
sub
imull
add
mov
lret
in
inc
mov
in
and
or
mov
sbb
sahf
xchg
mov
test
cmc
sub
sub
jbe
cmpsb
push
sbb
mov
jp
ss
dec
mov
jmp
mov
pop
gs
mov
test
pop
mov
fs
push
push
and
fcom
insl
mov
jge
adc
xor
sub
int3
arpl
orb
shll
cmpsb
inc
icebp
stc
stos
adc
das
and
push
pop
mov
pop
mov
dec
mov
test
fnstcw
gs
jns
outsl
mov
xchg
fs
inc
or
pusha
shrl
dec
dec
inc
fdivr
jg
fbld
sbb
and
xchg
scas
iret
dec
cmp
or
lods
push
xlat
mov
out
push
loope
dec
aaa
or
andl
imull
dec
cmp
push
lahf
test
jae
sbb
pop
ljmp
lea
aad
add
scas
je
xor
push
dec
or
imul
cmp
push
cmp
mov
xchg
jg
and
out
je
imul
inc
ds
lcall
cmp
mov
mov
mov
pop
add
pop
ret
xor
arpl
mov
arpl
cld
jecxz
xor
popf
adc
lds
ret
mov
inc
aam
sahf
push
mov
fisubl
jmp
insl
negl
mov
movsb
aad
push
lds
je
jge
add
arpl
xlat
js
clc
xor
enter
push
adc
mov
jge
loope
js
pushf
insl
sub
out
sbb
xor
sbb
in
adc
outsb
faddl
enter
push
and
into
or
icebp
in
xor
jecxz
cmp
xor
cld
jge
jne
sbb
fs
mov
add
jge
imul
adcb
sbb
sbb
or
push
mov
inc
lret
jl
push
lds
sub
ja
lea
pop
in
stc
ffree
popf
inc
int3
push
sbb
lcall
mov
sbb
add
xchg
dec
adc
mov
sbb
jns
mov
ret
insb
fsub
imul
fsubp
dec
mov
pop
lock
test
fistpll
mov
mov
inc
lods
xor
in
fisubl
xchg
int3
sarl
push
xor
sub
mov
cmp
add
add
pop
mov
jl
stc
cmpsb
dec
daa
or
mov
sysret
push
es
jge
es
push
into
xor
add
and
adc
movb
fisubrs
mov
clc
cmpsb
int
cmp
adcl
sbb
dec
pushf
inc
pop
jo
ret
leave
sbb
mov
popf
or
pop
sbb
xor
mov
push
mov
js
push
sub
xor
cmp
jle
lea
loope
outsb
jp
mov
or
in
adc
dec
test
daa
dec
add
xchg
pop
jno
scas
cmpsl
lahf
int3
push
inc
int
or
add
mov
lds
or
sbb
pushw
jp
ljmp
or
push
popf
push
pop
sub
es
ja
and
sub
and
fmull
dec
cld
inc
xlat
xchg
push
in
mov
fidivs
scas
mov
jecxz
cmpsb
mov
sbb
aad
pop
jp
orb
fs
lods
push
push
dec
scas
mov
sahf
pop
out
pop
daa
pop
into
adc
mov
jecxz,pn
nop
add
mov
cli
mov
loop
add
insb
inc
arpl
js
lods
dec
cmp
cmpsb
adc
out
jp
fwait
add
push
mov
aaa
dec
fstpt
mov
dec
cmp
dec
and
push
call
cmpsl
sarl
stos
lods
repnz
add
gs
cmpsb
xchg
popa
out
cwtl
add
sub
outsb
pushf
in
aas
adc
inc
jae
inc
add
or
adc
xlat
jo
inc
cld
repnz
push
jmp
and
dec
imul
xor
popl
sub
inc
mov
out
dec
outsl
ljmp
les
out
fldcw
push
cmp
mov
push
pop
inc
mov
subl
call
leave
jl
add
xor
and
imul
in
push
or
pop
in
adc
addr16
in
out
pmovmskb
mov
or
mov
pop
xlat
out
adc
push
ficomps
xchg
xor
arpl
aaa
pop
adc
mov
stc
shlb
out
shlb
in
sbb
out
cmp
out
lret
or
sbb
stos
clc
sub
push
mov
inc
add
adc
push
or
aam
xor
je
jno
notl
ss
xchg
loopne
pop
add
lahf
inc
add
sub
test
sahf
in
jnp
icebp
insl
imul
ficoms
filds
arpl
mov
jno
in
adc
fildl
cmp
cli
shll
fwait
lret
repnz
loopne
mov
aad
cmpsl
sub
stos
fildll
xchg
pop
sbb
cld
ret
sbbb
xor
movsl
pop
out
inc
or
jnp
popa
push
in
fiaddl
sub
inc
xor
sub
ficoms
xchg
or
outsb
xor
add
fwait
ljmp
push
sbb
jle
dec
dec
sub
addr16
pop
xchg
lods
mov
mov
jl
xchg
dec
sbb
or
mov
mov
push
add
adc
xor
out
push
pop
jp
nop
in
inc
jae
sarl
aas
test
mov
daa
scas
pop
test
dec
out
jp
rcl
std
cmpxchg
frstor
sub
push
sub
xchg
shl
mov
ds
ficoml
btr
les
movsb
insb
xchg
inc
and
dec
nop
fstpt
mov
inc
push
in
aas
adc
push
push
mov
pushf
ja
in
pop
test
and
testl
xor
mov
mov
into
mov
jbe
arpl
adc
sti
push
test
inc
xor
or
inc
inc
repnz
push
fcom
xchg
pushf
pop
pop
ljmp
inc
or
shll
inc
xchg
xor
sbb
aam
or
mov
rolb
std
daa
fmuls
xor
jne
movsl
imull
mov
pop
jne
sbb
stc
dec
mov
daa
fists
leave
mov
sbb
and
push
test
sbb
xchg
fidivl
lcall
dec
push
push
mov
gs
cmp
mov
pop
pusha
sub
arpl
or
jp
mov
repnz
aas
cmp
pop
scas
add
xor
inc
mov
cmp
pop
ficompl
stc
icebp
sti
lret
adc
addr16
outsl
fsts
test
pop
add
insl
inc
dec
icebp
dec
loopne
in
rcr
shr
dec
jno
shrl
lods
popa
xchg
mov
push
mov
enter
roll
scas
adc
xchg
insl
inc
dec
hlt
push
adc
dec
mov
pushf
js
das
mov
xchg
inc
or
dec
sub
push
sub
sub
and
mov
rcrb
pop
mov
xor
in
push
test
jge
pop
sbb
inc
adcl
mov
loopne
ds
mov
mov
xor
jae
out
mov
ja
scas
sbb
jmp
inc
and
das
mov
jo
fldl
movsl
mov
clc
mov
mov
test
cmpsb
xor
mov
call
orl
and
pop
inc
xchg
mov
push
jns
push
cs
add
jnp
jno
into
push
dec
xlat
mov
or
arpl
hlt
inc
fwait
sbb
cmpsl
popa
mov
mulb
push
adc
cmp
lret
aad
pushf
loopne
mov
mov
xchg
ror
pop
stc
gs
inc
cmc
push
ljmp
pop
cs
out
ret
int3
sub
dec
dec
scas
cmpsl
aas
pop
xchg
jne
aas
add
xor
lods
xor
mov
pop
test
sahf
adc
pop
mov
lret
cld
popf
nop
mov
xorl
xlat
inc
in
stc
cmp
loopne
lock
out
or
mov
xchg
imul
test
subb
mov
in
jne
sbb
mov
imul
push
scas
pop
sbb
xchg
sbb
push
push
mov
lahf
aas
mov
cmc
mov
adc
mov
or
ss
dec
into
fists
mov
jle
in
push
add
xor
stos
aaa
jb
rolb
insl
fcmovb
mov
xor
out
cmpsb
out
adc
mov
and
xor
pop
jge
jb
je
scas
pop
shll
cmp
jb
pop
mov
jne
jmp
sahf
add
and
push
mov
xchg
xor
push
or
sbb
in
pop
push
or
outsb
in
shrl
mov
iret
dec
mov
imul
xor
push
icebp
xor
jno
lods
outsb
nop
mov
dec
int
cmp
push
push
fcoml
scas
iret
dec
addr16
popf
jno
xchg
sbb
aas
dec
mov
push
aam
loopne
popa
jbe
push
pop
add
mov
into
aam
xadd
orl
or
xchg
xor
jmp
ss
test
icebp
jmp
cwtl
cmp
push
stos
sahf
lds
mov
fstps
mov
mov
dec
inc
mov
cmpsl
sbb
sti
dec
inc
sbb
sbb
rolb
push
adc
or
das
pop
inc
cmp
arpl
lret
xchg
insb
push
add
ss
push
std
lock
mov
mov
mov
aam
sub
inc
pop
out
push
cwtl
rcll
pop
mov
in
cmp
test
mov
cmpsb
inc
sub
negb
jb
popa
push
mov
sub
jg
test
mov
push
mov
xor
or
pop
pop
dec
inc
lcall
pop
sub
push
mov
pop
push
mov
js
or
sub
enter
dec
and
push
jnp
adc
loopne
dec
lret
push
push
lea
sub
mov
fcompl
xor
daa
fwait
xchg
and
cmp
cli
stos
mov
push
ret
bound
inc
and
inc
stos
xlat
fisubrl
sub
inc
add
mov
inc
movsl
mov
outsb
xchg
lret
dec
jmp
adc
js
add
ficoml
push
hlt
and
sbb
cmp
lock
incl
or
rol
lods
inc
mov
aas
scas
shrl
mov
fs
jmp
enter
jo
adc
pop
jecxz,pn
jp
dec
iret
pop
lock
add
test
into
dec
notl
outsb
ljmp
jo
rcl
lcall
push
add
lret
xchg
cmp
lods
nop
push
rorl
add
inc
scas
xchg
mov
mov
cmp
xor
inc
mov
lods
rcl
push
xchg
mov
add
clc
in
mov
push
sbb
gs
mov
repnz
jp
lock
and
dec
fsubl
pop
repnz
xlat
cs
mov
mov
push
ret
je
and
xchg
adc
negl
or
push
jne
push
ror
ds
icebp
sub
mov
es
test
pop
stos
mov
jnp
or
xor
inc
mov
inc
pusha
mov
mov
ret
xchg
add
lcall
sub
xchg
push
rcl
jecxz
lret
sub
es
mov
mov
pop
jae
insb
adc
inc
mov
out
or
jp
rcll
pop
repnz
mov
pop
mov
push
push
mov
jno
sub
lret
pop
dec
and
ret
fidivrs
loope
jae
sarb
jmp
xchg
call
push
pminsw
cmp
std
call
sti
stos
sub
inc
ret
fwait
mov
iret
stos
xchg
xchg
pop
mov
mov
mov
jne
neg
outsb
mov
xor
mov
add
lods
sbb
pop
xchg
adc
ljmp
cmp
mov
fldl
mov
outsb
jl
addr16
into
push
incl
movsl
push
leave
add
mov
enter
add
sti
mov
dec
aad
imul
call
push
push
cli
in
test
mov
stos
adc
loope
cmpsl
ja,pn
push
bound
push
mov
pop
iret
pop
jp
xchg
add
lods
push
cltd
push
imul
movsl
inc
mov
jb
dec
mov
incb
mov
and
iret
fldt
lcall
aad
mov
push
cmp
cmp
andb
sbb
sbb
cmp
push
test
in
add
cltd
inc
dec
cmpsl
push
imul
data16
sub
cmpl
rolb
adc
and
inc
leave
aas
sbb
sbb
push
xchg
or
and
sbb
test
or
mov
add
ljmp
adc
in
mov
or
pop
xor
test
mov
fsubrs
icebp
sub
mov
inc
dec
test
push
mov
add
mov
loop
loop
sub
mov
mov
mov
add
adc
inc
test
lds
dec
popf
mov
ss
cmp
cmp
iret
sbb
imul
cltd
xor
mov
lret
shl
jp
clc
inc
push
les
pushf
jae
cmp
cmp
dec
shll
add
add
mov
cwtl
or
hlt
xchg
aam
mov
push
xchg
out
cwtl
pop
rcr
sbb
mov
and
mov
dec
jb
fcmovnb
and
add
cmpb
mov
pushf
stos
jno
jno
mov
aam
dec
push
sub
test
ljmp
iret
dec
pop
sbb
fs
lea
fsubs
pop
ret
dec
xor
xchg
dec
rcl
aad
jge
cmp
add
popf
sub
in
sub
loopne
push
dec
xor
sbb
lds
sti
std
jno
test
outsb
adc
cmpsl
int3
pop
ja
pop
test
or
popa
ret
bound
pop
out
mov
lret
out
ljmp
push
dec
sbb
arpl
pushf
mov
cmpb
jns
sub
movsl
xchg
cli
leave
mov
leave
lods
sbb
shl
fwait
cmpsl
or
loope
cmp
xchg
sbbl
xlat
mov
jbe
fidivrs
out
out
add
movsb
mov
cltd
ljmp
jb
aam
fwait
jle
cmp
xchg
adc
inc
out
mov
shlb
std
stos
sbb
push
inc
cmp
int
pop
jl
test
aad
mov
je
jbe
repnz
fiaddl
pop
outsl
sbb
xchg
sbbl
movsl
das
imul
sbb
or
add
test
push
out
push
arpl
int3
and
ret
movsl
mov
add
jne
fidivrl
sub
xchg
sub
es
arpl
pslld
mov
test
jns
and
push
adc
and
mov
mov
cmp
sar
add
inc
cmp
pop
mov
fmull
adc
gs
and
sbb
add
std
fisubrl
mov
push
in
dec
in
outsl
mov
cmp
mov
sub
adcl
xor
ja
lods
push
je
sbb
out
daa
xor
xorl
push
mov
jbe
adc
in
arpl
mov
in
push
sbb
dec
loopne
inc
mov
scas
nop
and
mov
cmpl
cs
mov
add
jae
or
ret
dec
adc
clc
stc
fadds
pop
cltd
test
push
push
push
call
mov
jo
jns
iret
mov
bnd
ds
jbe
or
aad
fistpll
push
pushl
dec
xlat
xchg
mov
push
mov
scas
loope
aad
push
scas
jo
mov
add
push
rcrl
scas
lods
fwait
stos
fldcw
out
push
out
inc
add
push
fnstcw
test
std
lods
xor
pushl
js
lea
insb
xchg
xchg
jl
cmpsb
fstpl
lock
insb
sbb
pop
in
std
aad
out
mov
push
cmp
int
jmp
jl
mov
dec
xchg
cmp
push
insl
xrelease
adc
outsb
mov
push
push
jl
mov
push
cmp
lret
ud2
in
push
notb
pop
mov
jge
push
and
jl
push
ror
outsb
push
jb
clc
mov
stos
and
test
imul
cmpsl
inc
pop
adc
mov
nop
cmpsl
arpl
sub
mov
mov
jbe
std
nop
shlb
dec
inc
lcall
pop
fwait
pushf
mov
out
clc
inc
jb
cmp
orb
fdivl
dec
aam
push
mov
jae
mov
add
ds
dec
pop
or
fistpl
or
in
mov
enter
add
xchg
leave
adc
clc
enter
loop
in
cmpsb
movsb
cmp
xchg
jg
sbb
rcll
jg
negb
adc
scas
jno
xchg
add
mov
lcall
jecxz
aad
int
inc
mov
pop
stc
mov
xor
dec
pusha
jl
into
pop
pop
pop
out
idivb
loope
aas
repz
leave
push
test
mov
mov
sahf
call
cmc
jg
inc
xchg
push
mov
cld
leave
mov
push
sbb
and
pop
es
mov
cmc
in
dec
and
cmp
insl
or
shl
push
into
and
push
ret
test
mov
sub
mov
lret
pop
push
jo
jle
inc
fdivrl
or
repz
xor
cld
bound
ret
xor
lods
out
and
xchg
sbb
ljmp
cmpsl
fstpl
cs
push
ljmpw
xchg
ror
cmp
pop
inc
inc
jge
mov
jnp
in
dec
pusha
adc
aad
out
pushf
mov
sbb
or
inc
jns,pn
pushf
frstor
imull
outsl
out
fisttps
cmpsb
gs
js
iret
cltd
clc
fwait
sahf
or
mov
jne
jmp
int3
sbb
xchg
pop
pop
out
xchg
fwait
pop
int
sbb
jns
dec
imul
in
scas
ret
xchg
ret
jae
in
lcall
outsb
cwtl
nop
cmp
push
mov
dec
loop
xchg
mov
mov
fidivrl
dec
stos
or
scas
mov
mov
and
aas
xor
mov
dec
faddp
fs
test
inc
jmp
js
test
mov
pusha
pop
mov
mov
mov
shl
jae
jae
shrb
push
push
stos
lcall
popf
push
xor
cmp
xor
jb
or
mov
cmp
add
jnp
pop
out
rcr
jg
add
cmp
mov
mov
jmp
and
xorb
test
xor
add
cmpsb
stc
xor
out
jae
repnz
lods
jnp
fildl
xchg
aam
sbb
lea
in
fwait
adc
in
cmc
aad
xor
imul
xchg
out
sbb
or
shlb
rcrb
arpl
push
pop
push
jecxz
negl
lods
pusha
dec
xor
mov
cltd
leave
xor
xchg
incb
inc
or
pop
push
stos
xor
dec
and
popf
add
or
xor
icebp
mov
js
outsl
imul
inc
les
mov
push
aad
gs
adc
push
cmp
mov
sub
pop
sbb
into
add
clc
xchg
jae
adc
inc
mov
pop
xchg
pop
int
sub
popf
repnz
adc
rcl
mov
pop
pop
ret
push
adc
ss
mov
jo
sbb
jle
mov
add
out
inc
or
sub
sub
dec
pop
cmp
xor
arpl
lds
or
xor
push
aas
int
xchg
pop
mov
cmpsl
and
cld
pop
out
mov
push
cmp
iret
std
popa
jmp
sub
and
inc
in
mov
fwait
sti
dec
push
cs
lea
pop
jae
adc
dec
inc
popf
pushf
frstor
push
cmp
push
xchg
mov
cmpsb
adcb
dec
inc
jbe
inc
mov
inc
and
inc
adc
cmpb
cwtl
or
mov
jge
fdiv
insb
sbb
popa
mul
and
pop
inc
sub
jb
and
ds
repnz
jp
lcall
mov
loop
out
mov
clc
xorl
adc
xor
push
mov
dec
gs
orb
sub
mov
lock
leave
mov
out
push
adc
ljmp
mov
pop
fs
pop
fnstcw
mov
push
pop
cli
sbb
inc
in
sbb
dec
stc
insb
orl
pop
cmp
mov
sbb
gs
xchg
addl
push
jecxz
inc
ljmp
stc
fstpl
or
or
data16
push
jae
fstpt
js
scas
add
imul
enter
ja
adc
xor
push
int3
push
mov
xchg
bound
xlat
inc
fcoml
pop
scas
mov
pop
xchg
mov
arpl
es
lds
inc
in
cltd
cmp
test
mov
sub
xor
enter
shlb
or
out
mov
in
pop
xchg
sahf
dec
lret
or
fdivrl
push
lea
or
push
adc
popa
stc
jno
rcl
loope
xchg
stc
les
js
and
sub
mulb
rclb
lea
ds
pushf
lahf
fnstsw
cli
push
inc
xchg
jp
sub
sbbl
push
push
add
mov
test
lret
adc
inc
dec
popf
fmull
add
movsb
adc
sub
sbb
sbb
sbb
cmp
mov
insl
xchg
decb
cmpsb
lret
insb
sbb
push
gs
ror
mov
movsl
hlt
insb
dec
mov
shrl
dec
xor
insb
xchg
sbb
cmpsb
xchg
and
inc
push
lods
pop
jno
fidivl
les
add
je
dec
test
inc
icebp
ljmp
insl
scas
push
ss
push
movsb
jo
roll
lahf
and
fs
aam
and
in
adc
and
fdivrl
daa
je
pushf
fs
cwtl
in
jge
xchg
pop
test
ljmp
fbstp
divb
adc
cmp
sbb
and
cs
add
data16
mov
inc
lods
fdivl
inc
mov
outsb
test
movsb
xor
popf
jle
jbe
push
mov
lods
push
xor
add
scas
jns
jae
add
lret
cmpsb
rcll
les
pop
adc
and
jae
sahf
jbe
xchg
push
and
pop
mov
sbb
lahf
out
jecxz
ds
xchg
stc
pop
ret
js
xchg
nop
mov
mov
add
lock
and
add
mov
jns
ret
aad
jb
push
or
enter
adc
icebp
cld
cli
lds
push
xchg
xor
nop
and
pop
fidivs
add
or
adc
out
jge
js
inc
loopne
or
cmc
imul
push
cs
fistpl
mov
mov
insb
insl
jno
testl
les
ret
inc
int3
and
dec
push
loope
test
sub
movsl
in
dec
jmp
cmpsb
incb
ret
js
into
loopne
push
and
outsb
pop
and
aad
scas
popa
outsb
mov
in
add
cmp
xchg
outsb
lret
lock
mov
xchg
sbb
inc
inc
jle
fsubrs
cmp
sub
mov
cmpsb
mov
pop
test
in
repz
push
in
mov
sbb
xchg
out
dec
ja
dec
push
loope
lods
xlat
pop
push
gs
pop
sub
leave
test
mov
jbe
mov
xchg
xor
mov
lea
push
dec
xor
and
les
repnz
xchg
mov
jno
dec
pop
mov
mov
or
movsl
xchg
nop
sub
jl
cwtl
or
lods
insl
dec
xchg
les
mov
les
pop
popa
xor
xor
enter
imul
dec
sbb
and
dec
mov
leave
outsl
test
inc
insl
into
jns
mov
adc
inc
add
loopne
pop
sbb
pop
mov
gs
popf
cmpb
push
dec
mov
dec
xor
test
jbe
mov
jb
xchg
outsl
call
stos
or
notb
fnsave
cs
stos
insl
sub
fisttpll
xor
popa
pop
arpl
mov
jno
addl
xor
rcrb
mov
jnp
mov
add
shrl
sbb
lcall
mov
js
mov
inc
sbb
cmp
arpl
jbe
lahf
dec
aad
pop
inc
repnz
in
in
fwait
jno
and
fnsave
jmp
outsl
jg
xlat
push
in
ds
push
cmpsb
mov
sbb
pop
inc
rorl
adc
adc
insb
ss
push
insl
inc
mov
cmp
add
mov
mov
mov
jb
mov
pop
ljmp
mov
lret
stos
testb
mov
pop
scas
jecxz
xchg
out
data16
pop
adc
xor
and
mov
int3
lock
xchg
out
dec
or
clc
jp
pop
fidivrs
pop
std
dec
add
nop
xchg
cmp
jg
mov
fisubrs
test
fmull
jo
jmp
pop
xor
mov
mov
hlt
fistpll
int3
xchg
mov
test
test
jmp
mov
rcll
aas
add
data16
add
xor
fisttpl
push
imul
cwtl
mov
dec
scas
movsb
insb
repnz
mov
lret
notb
xor
pop
inc
push
xor
cmp
mov
jecxz
cmpsb
cmova
sbb
mov
push
loop
adc
jmp
test
iret
js
sti
es
jb
das
pop
or
insb
sbb
repnz
movsb
cmp
lahf
cmp
cmp
loop
out
popf
movsl
cld
aas
pop
jo
enter
xor
ret
adc
ljmp
insb
push
rorl
pushf
push
jae
shlb
icebp
push
fcomi
xchg
or
mov
mov
mov
lcall
sub
xchg
dec
cmp
fnsave
pop
sbb
mov
cwtl
inc
xor
arpl
pusha
test
andl
daa
push
pop
shlb
rcll
push
sub
aam
cmp
dec
jl
push
add
daa
mov
imul
in
xor
push
test
cmc
sub
icebp
shrd
fstpl
subl
cld
jns
shr
pop
adc
adc
cmp
mov
pop
xor
int3
sub
data16
bound
movsb
add
je
pop
lret
or
jbe
dec
jecxz
iret
imul
push
ja
ja
push
and
pop
mov
sub
xchg
mov
inc
jp
push
or
movsl
daa
sub
dec
call
cmc
pop
ret
sub
insl
pop
cmp
fwait
std
jg
cltd
clc
inc
xchg
daa
mov
stos
out
adc
sbb
cmp
outsl
stos
lahf
lret
insl
out
xchg
ret
cmc
add
jae
out
cmpsl
sbb
lret
mov
lds
mov
pop
push
xor
insl
test
sbb
jl
gs
sbb
orb
mov
scas
pop
jmp
sub
out
stos
imull
sti
mov
xor
sub
sahf
dec
mov
xchg
orb
xlat
and
xor
xor
adc
jo
daa
aad
sahf
dec
or
or
inc
and
dec
loopne
push
push
push
push
dec
loop
jp
push
outsb
stos
inc
cmp
ret
jo
jbe
out
pop
and
shlb
mov
cmp
insb
fisubs
pop
arpl
sti
leave
shll
outsb
aad
je
pop
dec
sub
mov
ja
adcl
mov
and
cmp
stc
push
cmpsl
out
mul
stos
mov
sahf
incb
clc
adcb
lods
negb
repz
inc
cmp
mov
movsb
test
cmp
repz
adc
pop
aad
jecxz
mov
xchg
cmc
popl
and
lds
lret
in
outsb
and
dec
pop
stos
dec
add
mov
pop
jge
xor
mov
mov
mov
sub
stos
in
addb
or
and
stc
cmpl
dec
mov
cltd
ret
xor
xchg
scas
cltd
dec
fwait
test
in
stos
mov
repz
inc
gs
pop
fnstenv
inc
cmp
cltd
and
test
test
js
push
or
sbb
xchg
jecxz
inc
in
in
incb
fwait
pop
add
ret
lcall
add
mov
or
cmp
or
sub
cmpsl
sbb
lahf
sbb
lahf
or
xchg
or
sbb
dec
pop
jno
cmp
mov
mov
faddl
popa
sbb
xchg
pop
es
int
lods
or
lret
stc
sub
mov
pusha
jnp
dec
mov
mov
xor
inc
pop
out
xchg
jnp
out
loope
push
dec
xchg
mov
out
mov
lret
mov
iret
sub
lea
cmp
mov
fs
mov
in
sub
pminub
push
sti
popa
xchg
pop
sbb
sub
dec
es
inc
data16
inc
cwtl
inc
sbb
xchg
sub
call
rorb
push
mov
lret
push
add
cmc
mov
pop
and
mov
xor
ret
sar
adcb
int
mov
or
push
insl
out
clc
ss
into
lock
or
push
push
sub
and
arpl
in
xor
mov
popf
sbb
rorb
inc
or
data16
shl
dec
pusha
or
mov
and
or
insl
sbb
subl
jbe
aaa
repnz
cmp
push
jae
push
fs
into
pop
xor
cmp
jecxz
push
movl
std
push
cmpsb
pop
and
nop
ret
lods
or
in
shrl
mov
xchg
adc
add
add
les
int3
mov
mov
je
inc
mov
push
jecxz
mov
adc
enter
ret
andb
mov
imul
add
addr16
cmp
les
rolb
push
push
lret
shrl
fisubrl
adc
mov
pop
aaa
jbe
mov
jg
xor
int3
outsl
mov
scas
pushf
cmp
inc
inc
and
xor
mov
nop
mov
cli
xchg
arpl
sbb
imul
or
loope
shrb
movsl
les
js
lret
add
or
jl
and
mov
pop
ror
sbb
arpl
mov
xlat
mov
into
lea
sbb
push
lds
push
sahf
rorb
sub
jg
out
lahf
addr16
filds
and
jns
add
cmp
sbb
jmp
in
sti
xchg
jl
lods
xchg
aaa
or
jne
mov
jge
cwtl
arpl
lds
mov
in
and
mov
leave
jl
cmpsb
xchg
je
push
cmp
ljmp
cmc
test
cmp
push
cmpb
inc
add
or
ret
loopne
std
or
shlb
push
xor
addr16
rolb
stos
cltd
cmc
pop
lahf
fs
or
fstps
cs
ret
lret
xchg
ret
mov
jl
jmp
jge
xor
idivl
mov
js
pop
cs
enter
out
int3
fcoml
inc
jnp
pop
ja
cmpsb
sti
cmp
xchg
add
test
push
add
add
scas
xchg
mov
add
out
xor
jns
in
leave
adc
sbbl
fs
mov
mov
jecxz
push
pop
mov
movsb
mov
mov
mov
mov
loopne
pushl
push
xlat
ss
lods
dec
xchg
jg
popa
cmpsb
xchg
xor
inc
xchg
outsl
fsubp
movsb
or
daa
mov
lret
xchg
mov
inc
adc
std
jae
sbb
sbbb
xchg
idivb
sub
sbb
or
adc
es
lods
mov
ret
push
test
test
sbb
xchg
xor
loope
ds
test
lcall
in
cli
dec
or
cs
dec
imul
aad
ficomps
push
jle
cmpsb
lods
dec
push
mov
or
xor
xor
hlt
pop
jp
jg
fmuls
add
xchg
insl
cmp
movsl
aam
xchg
dec
push
jg
xlat
in
cli
mov
mov
lds
pop
mov
jp
sub
jmp
pop
pop
stos
inc
fstpl
push
jmp
adc
mov
fmull
call
out
push
pop
dec
jmp
outsb
lods
sahf
fsubrs
aad
mov
lret
mov
add
bound
lcall
mov
imulb
cmp
and
mov
adc
mov
pop
dec
ret
and
hlt
sarl
cwtl
sbb
addb
mov
push
and
sbb
shrl
xlat
mov
jns
out
cmp
and
inc
aas
pop
pop
mov
ds
fnstsw
mov
in
mov
int3
mov
in
and
cmp
inc
repnz
frstor
movsb
push
xchg
ja
dec
ljmp
cmp
mov
lods
cmp
adc
shll
sub
outsb
cmc
sub
test
push
and
mov
aaa
push
lret
inc
adc
jne
fs
xor
repnz
cmp
sbb
nop
inc
aad
inc
mov
das
inc
rcrb
mov
jnp
sub
into
push
aam
add
shl
mov
mov
das
rcrl
mov
int
xchg
jae
popa
push
rcll
rcrw
sbb
insl
aaa
mov
mov
push
mov
xchg
ljmp
cmp
jg
cmpsb
add
jmp
loopne
adc
sbb
push
sti
sub
pop
sti
xor
cmp
sahf
mov
into
nop
jg
push
mov
dec
fwait
aam
in
enter
fldcw
and
jg
fucom
lret
inc
pop
add
outsb
add
xchg
adc
jo
sub
xchg
cmc
pop
cmpsl
dec
icebp
push
ds
sub
gs
xor
dec
pop
fsub
cmp
cmp
clc
out
pop
shr
adc
cs
xor
or
add
jbe
dec
dec
or
std
sti
sub
ljmp
mov
notb
add
adc
mov
xor
insb
negl
fistl
int3
push
xor
fcoml
loop
pop
loope
daa
sbb
or
test
cmp
mov
mov
cmovs
dec
mov
pop
mov
xor
std
xlat
sbb
cmpb
in
dec
cmp
mov
inc
inc
mov
jno
add
pop
inc
fs
jno
movsb
int3
mov
cmp
mov
int3
cld
dec
pop
xchg
aad
cmpb
imul
fadds
inc
les
mov
pusha
adc
jmp
dec
call
stos
push
popa
and
bound
sbb
or
jae
xlat
sbb
dec
xor
rcr
sbb
test
jl
xorl
adc
mov
push
mov
push
inc
aaa
push
mov
loope
jo
lods
ds
jmp
inc
pop
loop
jge
hlt
pop
push
loope
mov
daa
adc
inc
pop
sbb
xchg
lcall
lret
cmpsl
add
push
sbb
adc
ret
jl
sbb
pop
push
cld
jp
loope
ss
dec
or
push
inc
xchg
mov
pop
aad
mov
xchg
nop
idivl
cmp
lods
add
sahf
out
loope
es
bound
lret
les
fs
rcr
push
dec
leave
and
fdivs
sub
pusha
scas
pop
lcall
add
dec
pop
das
push
sbb
xchg
aas
loope
push
test
sub
lcall
mov
mov
lods
sub
in
sbb
jns
fisubrl
jge
jno
popa
inc
cli
outsl
xchg
jmp
popf
nop
or
out
dec
stos
mov
jle
andb
add
xchg
ror
mov
insl
sub
jae
in
arpl
aas
pop
daa
mov
int
and
cli
in
out
push
xchg
and
push
ret
clc
lcall
cmpsb
mov
movsl
movsb
jmp
clc
movsb
push
push
aaa
mov
and
and
mov
and
ja
and
lock
outsb
push
adc
lods
adc
pusha
push
sbb
and
bound
std
lea
and
insb
jne
and
xorl
cmp
mov
outsb
mov
cltd
loope
sbb
push
push
add
out
add
sbb
fwait
ret
inc
push
ds
and
jmp
or
cmp
xchg
inc
sbbb
lret
push
loop
mov
push
adc
pop
pop
mov
sbb
cwtl
sub
push
shrl
sti
inc
jecxz
movsb
sub
sahf
int3
adc
cmc
in
or
or
push
push
adcl
mov
pop
pop
mov
and
push
mov
cli
pandn
lea
jo
aad
add
inc
mov
adc
pushf
pop
cmp
repnz
iret
or
add
or
push
lahf
hlt
jle
or
mov
add
imul
sbb
js
push
cmp
mov
mov
scas
mov
addr16
pop
add
loopne
addl
ja
mov
cmp
sbb
pop
out
mov
pop
jne
pop
lret
ljmp
pop
ficoms
mov
mov
or
pop
cmp
outsl
push
jnp
mov
jne
or
push
test
jmp
sbb
xchg
in
fildl
mov
std
lahf
loope
imul
sahf
jecxz
mov
xchg
leave
lods
sub
adc
mov
pop
addb
add
inc
mov
sub
iret
add
add
sbb
cmc
fcompl
dec
pop
and
mov
sbb
mov
daa
stos
jle
jo
mov
pop
fmull
jb
icebp
and
jo
lret
mov
movsb
ret
insb
xor
or
gs
mov
xor
ret
jmp
xlat
dec
xchg
jle
int3
es
push
mov
stos
pop
pop
and
pop
xor
int
das
fstpt
mov
push
pop
out
push
mov
rcr
cmp
mov
xor
lahf
lret
je
jp
sub
add
test
adc
nop
sti
imul
leave
adc
bound
cltd
enter
jmp
js
mov
and
mov
ja
add
icebp
into
inc
stc
fisubrl
sbb
sub
xchg
test
cs
dec
jp
push
sbbb
aaa
cmp
mov
fs
lods
jle
or
inc
sub
xor
cltd
loope
mov
lcall
sbb
in
movsl
outsb
pop
push
dec
push
push
pop
cs
cmp
iret
mov
cs
inc
push
xor
enter
cmp
xor
mov
les
jno
xchg
imul
clc
jne
in
push
enter
rcl
dec
movsb
in
sub
repnz
cmpsb
jmp
lods
das
rol
inc
pusha
add
imul
push
mov
addr16
stos
adc
sahf
inc
iret
clc
jne
cld
xchg
push
leave
cmp
in
and
lea
test
mov
notb
je
cmpsb
addl
xchg
xchg
jne
cmp
jae
mov
shl
loope
add
mov
mov
mov
std
pop
mov
imul
cs
pop
movsb
stos
or
mov
mov
fnstsw
jl
xchg
jne
dec
or
sub
ja
aad
leave
push
cmp
test
iret
jb
cmp
addl
pusha
shr
ja
sbb
movb
inc
testl
sub
cmp
ret
adc
pop
sbb
adc
fisttpll
in
fdivrl
pop
scas
sub
push
jmp
clc
cmp
jp
out
add
stos
sbb
bound
sbb
inc
lods
iret
xchg
cmpsl
pop
lcall
lods
push
pop
or
out
mov
mov
aad
mov
dec
cmp
insl
add
imul
push
adc
push
scas
jge
cmp
cmp
std
mov
es
ja
movsb
mov
push
out
repnz
push
pop
sub
out
movsl
stc
push
idivb
sbbl
pop
or
pop
inc
icebp
jecxz
mov
fxam
dec
stos
mov
repz
add
add
stc
pop
push
pop
jnp
push
pushl
push
outsb
jb
add
loopne
std
mov
lcall
in
adc
rol
xor
fwait
mov
push
addr16
aam
mov
dec
sbb
mov
dec
and
cld
loop
or
insb
inc
lret
pop
cmp
and
cmp
sti
lret
mov
inc
mov
mov
xchg
cmp
adc
ds
cmpsb
jp
mov
fcomip
out
pop
into
xchg
popa
pop
stos
or
into
or
pusha
xor
js
inc
add
fwait
mov
adc
pushf
inc
mov
dec
pushf
clc
or
inc
mov
mov
pop
dec
pop
adc
sub
cwtl
ror
das
test
pop
leave
in
aam
mov
or
xor
leave
fdivrl
sub
mov
out
dec
lds
dec
lcall
dec
repnz
les
add
adc
inc
shl
shr
stc
mov
lods
stos
in
mov
lods
and
xchg
push
add
xor
test
pop
or
cmpsb
jmp
inc
movsl
je
test
add
jmp
fidivrl
je
mov
fincstp
outsl
and
cli
loopne
call
xor
pop
or
popf
jns
or
cmp
sbb
pop
mov
adc
test
pop
push
xor
loope
lods
adc
notl
xchg
or
stos
xchg
push
pop
cmc
cmp
lods
push
rclb
ret
es
mov
or
stos
addl
mov
inc
jo
sub
lods
bound
mov
xor
add
xor
movsl
rorb
xchg
inc
adc
sbb
enter
inc
stc
fcoms
jbe
mov
je
sbb
lods
dec
fstps
ret
out
sbb
mov
cld
sbb
cmc
imull
and
mov
popf
xlat
xchg
sbb
jg
ret
icebp
mov
in
ret
dec
mov
jno
xchg
fisttpl
fldt
xor
xchg
lahf
and
icebp
mov
sbb
sub
test
loop
inc
pop
in
add
add
pop
mov
cmpsl
mov
imul
mov
testb
enter
push
jne
imul
int3
sbb
pop
jg
mov
mov
jne
lcall
clc
fcmovnb
and
loop
stos
cmp
ja
jns
mov
inc
fiaddl
sbb
push
cmp
push
fcomps
icebp
aas
xlat
scas
push
xchg
adc
dec
jg
xor
arpl
pop
push
ja
lcall
iret
popa
fwait
pavgw
in
inc
add
stos
mov
dec
imul
into
bound
jmp
imul
push
jmp
test
adc
cmp
sbb
andl
xchg
pop
lods
lods
add
push
std
mov
loope
negl
push
rcl
mov
rolb
push
inc
pop
movsb
pop
in
jmp
mov
aad
mov
outsl
pop
mov
inc
dec
fsubl
or
prefetch
arpl
sahf
pusha
stc
je
icebp
add
outsb
xchg
inc
xor
or
loop
cltd
stos
jg
fmull
fwait
insl
cmp
pop
aas
dec
mov
lods
pop
fnstenv
imul
out
mov
dec
mov
pusha
bound
hlt
test
adc
les
jmp
or
lock
test
pop
pop
fs
out
mov
dec
xchg
xchg
pop
jae
in
rclb
xor
xchg
sti
insb
aad
insl
or
inc
jecxz
mov
adc
loope
test
cli
movsl
mov
inc
cld
and
enter
inc
into
inc
in
lods
ror
fwait
xchg
and
sub
fmul
adc
inc
popf
xchg
outsb
xchg
mov
jge
js
lds
sahf
dec
out
rcr
fsubrs
push
fcmovnbe
and
adc
in
push
in
push
rolb
and
xchg
stos
nop
insl
ja
femms
or
push
cltd
xchg
jge
cmp
addr16
lock
mov
sbb
lds
mov
and
loop
dec
sbb
mov
cmp
ret
mov
pop
hlt
pop
pusha
xor
xchg
dec
dec
lds
jp
mov
jns
test
lcall
add
inc
or
mov
fcoml
inc
dec
jle
clc
jo
je
popf
popf
inc
push
mov
pop
xlat
outsb
pop
fidivrs
mov
shl
sub
lds
and
into
rorl
nop
clc
xor
insl
sbb
jno
xchg
push
jo
stc
push
iret
stos
test
hlt
cmp
cmp
or
dec
pop
ret
mov
dec
push
pushf
cmpsb
xchg
sbb
mov
clc
stos
bound
dec
fdivrs
adc
jo
test
div
shrb
insb
jns
ret
pop
or
sub
out
pop
adc
arpl
xchg
bound
push
mov
or
rcr
inc
or
leave
orb
jp
fs
subl
push
outsl
cmp
pop
inc
mov
in
fcompl
fwait
cmp
sub
lods
imul
xchg
add
nop
pop
pushf
jl
fstl
push
aaa
jbe
xchg
inc
push
fcmovne
roll
mov
pop
adc
cmpsl
jne
adc
mov
cmp
mov
mov
mov
jg
int3
repnz
les
cmpsl
pop
sbb
pop
call
or
sarb
and
jmp
fsubr
push
in
icebp
push
jmp
adc
pop
or
sub
mov
dec
fs
cmpsb
adc
cmc
sahf
xchg
lds
mov
inc
sub
dec
and
xor
fnstsw
inc
push
mov
clc
inc
and
lock
nop
dec
inc
adc
jnp
stc
or
fs
cmp
xchg
push
jg
sub
adc
add
xchg
mov
inc
push
add
xor
daa
push
adc
push
cmp
add
hlt
daa
lds
jbe
cltd
fwait
sahf
sub
out
in
fwait
imul
mov
stos
sub
sub
flds
dec
dec
in
rcr
in
jle
ljmp
mov
mov
sbb
repz
push
movsl
bound
sbb
lret
cmpsl
stos
push
pop
ljmp
mov
adc
jg
mov
arpl
aam
dec
test
mov
mov
or
enter
mov
push
mov
loop
push
sbb
mov
scas
pusha
push
mov
xchg
add
fisubs
mov
pop
inc
cmp
cltd
cs
fwait
incb
cmp
popa
push
aas
sub
idiv
push
mov
sbb
add
call
popa
repnz
jl
ret
jecxz
aam
cld
jne
test
subb
out
push
push
lcall
and
out
jne
adc
cmpsl
cli
mov
idivb
jmp
jbe
lahf
cmp
in
jecxz
mov
sahf
rolb
lret
cs
inc
imul
ror
mov
movsl
sub
fildll
fsub
xchg
sbb
mov
inc
mov
sbbb
mov
addb
aaa
push
arpl
mov
push
out
inc
xor
sbb
push
mov
leave
dec
xlat
scas
aam
mov
or
push
lods
or
les
cmpsl
push
cs
fs
rolb
push
jbe
push
sub
int
fmul
icebp
mov
mov
mov
xor
inc
mov
or
loopne
rolb
inc
and
mov
cltd
pushf
lock
jle
std
call
movsb
sarb
sbb
iret
test
push
sub
test
fsubl
mov
adc
sbb
xlat
push
fistl
xor
or
jl
xchg
inc
nop
sbb
pop
int3
stos
mov
ljmp
jbe
lock
sahf
leave
jg
xor
pop
adc
and
cltd
shr
lds
dec
mov
adc
rcrl
inc
sbb
addr16
mov
sub
pop
lea
data16
mov
cmpsb
pop
les
das
adc
out
fidivrl
sub
shll
fs
jecxz
xchg
movsb
fistps
xchg
ret
das
insl
movl
mov
mov
xor
les
xorl
add
cmp
sub
scas
repz
adc
mov
push
jb
pop
dec
mov
push
xlat
stos
ja
js
sbb
jnp
ret
mov
popl
stc
pop
mov
ret
add
adc
lds
jle
sbb
popa
loope
icebp
bound
push
jg
imul
inc
adc
cmp
cwtl
decb
pusha
imul
pop
out
aas
pop
mov
clc
les
sbb
mov
jae
mov
std
xchg
cmpsl
sub
cmpsb
mov
xor
push
std
lods
outsl
pop
out
out
call
inc
inc
mov
stos
adc
push
or
loopne
imul
push
sti
dec
jns
inc
imull
push
nop
xchg
cmp
insl
mov
cmp
push
ror
movsl
ss
pop
fbstp
test
stc
xor
mov
adc
mov
mov
test
mov
fwait
mov
in
jl
pop
mov
icebp
jle
dec
xlat
sbb
or
fisubrs
popa
mov
test
or
jbe
dec
jno
and
lahf
pusha
mov
dec
sub
sti
push
xor
xchg
scas
into
mov
and
pop
pop
mov
mov
fiadds
adc
xor
add
xchg
push
and
add
cmp
adc
jge
mov
in
mov
in
adc
add
sti
je
push
test
movb
ja
jp
movsb
js
repnz
mov
mov
and
cli
pop
mov
pop
popf
cmpsb
rorl
outsl
dec
pop
ja
imul
out
fs
push
xor
fists
cli
data16
xor
or
icebp
xlat
hlt
sub
dec
add
xchg
mov
sti
mulb
clc
sbb
inc
std
push
or
push
arpl
dec
fidivrs
mov
out
pop
mov
std
jo
dec
ds
cmp
or
loope
inc
xchg
push
add
insb
outsl
pushf
xchg
cmp
fistps
insl
push
mov
push
lds
hlt
test
aaa
fdivrl
outsb
jl
ret
sbb
xor
or
jecxz
jl
xchg
je
bound
inc
out
pop
push
cltd
popa
pop
cmp
jecxz
sbb
les
ss
fistpll
hlt
mov
in
xor
clc
insl
aas
pop
jbe
repnz
jo
mov
pop
inc
mov
inc
mov
cwtl
xor
jnp
adc
xor
mov
sub
jmp
shrb
xchg
mov
pusha
cld
mov
out
or
mov
jo
pop
cmpsl
sub
ret
and
out
scas
dec
mov
pmuludq
mov
adc
mov
cs
js
pushf
imull
aaa
scas
stos
and
out
lret
or
call
out
pop
and
mov
mov
add
push
pop
outsl
jbe
inc
mov
xchg
fmuls
mov
mov
xlat
jnp
das
add
pop
test
mov
mov
or
data16
xchg
push
popf
jge
dec
cld
das
les
popa
mov
pop
cmp
lahf
adc
push
or
adc
add
movsb
lock
mov
imul
pusha
stc
inc
loopne
sbb
pop
imul
fdivs
pusha
loopne
xchg
add
sbb
ss
xchg
fiaddl
aad
jbe
movsb
and
sub
push
xor
roll
daa
dec
scas
jns
adc
jae
mov
je
mov
sbb
cltd
sbb
fwait
jle
push
jg
xchg
enter
movl
mov
movsb
xchg
cmpsb
jmp
and
nop
and
iret
and
dec
mov
xor
lods
mov
and
xor
jbe
xor
outsl
repz
sbb
ret
cld
movsl
scas
fadd
mov
clc
xchg
mov
aad
and
lcall
push
push
cmc
jae
sub
pop
xchg
popa
loope
call
sub
fs
sub
cmpsb
loopne
daa
dec
cmpsl
testl
cltd
movsb
xor
lahf
shr
insl
daa
pop
lea
xor
dec
arpl
lds
insl
fsubrp
cli
pop
xchg
inc
dec
xlat
mov
or
push
movsb
mov
mov
xchg
rcrb
cmpsl
test
les
sahf
scas
and
filds
sbb
pop
sbb
mov
hlt
xor
push
mov
sub
repz
add
cmc
dec
imul
cmpsb
push
adc
or
inc
outsl
faddl
mov
jnp
cmp
iret
test
lea
cmpsl
rcrl
cs
xor
int3
mov
call
in
sbb
iret
and
insl
mov
neg
mov
test
pop
xlat
bound
or
or
clc
push
loope
add
sub
stc
mov
sbb
pusha
pushf
fcmovbe
rorl
enter
adc
dec
lret
test
mov
lods
pop
sbb
ss
push
lods
mov
jne
mov
aam
push
mov
adcb
stos
mov
lret
cmpb
in
out
xchg
dec
push
leave
aad
out
shrl
out
xchg
mov
lcall
mov
cli
adc
sub
std
ficoml
ja
je
or
pop
loopne
sbb
cmp
dec
loopne
outsl
jg
add
or
cs
fcomp
mov
jmp
pop
inc
out
fildl
das
daa
xchg
pop
add
lcall
cmpsb
sbb
daa
push
aaa
lods
adc
mov
loope
add
and
mov
rep
mov
cld
lods
jns
cmp
push
xchg
push
lock
inc
jae
pop
xchg
ficoms
stos
push
dec
pushf
aas
imul
inc
pop
cmp
lods
push
sub
mov
dec
jle
jmp
adc
gs
cmp
adc
jnp
cmp
mov
pop
fs
add
xor
add
int3
rorl
mov
lahf
xor
cwtl
pop
inc
mov
sbb
mov
cmp
lea
jp
shrb
xor
nop
pushf
daa
cmp
lock
add
adc
add
adc
adc
sub
sbb
lea
bound
xor
gs
dec
loope
test
sub
outsl
mov
in
nop
xlat
in
je
pop
fdivr
inc
mov
xor
cmpsl
in
jb
pop
xchg
jbe
jmp
std
jne
nop
fs
jg,pt
nop
jb
push
push
mov
dec
fiadds
inc
jp
ret
rdmsr
loop
sahf
out
add
pop
je
es
insb
loopne
imul
js
xchg
jns
fidivrs
jl
adc
stos
inc
mov
aaa
ja,pn
lods
pop
mov
mov
sub
out
sub
pop
adc
gs
adc
into
xor
divl
cltd
test
push
dec
mov
and
hlt
pop
push
daa
or
push
ljmp
in
out
sti
xchg
in
popa
enter
mov
gs
mov
add
incb
pop
pop
jnp
push
sbb
push
cmp
scas
scas
mov
nop
sbb
adc
jb
pop
repnz
push
xchg
push
fld
aaa
push
mov
adc
aad
nop
xchg
lea
dec
dec
xchg
sahf
pop
push
je
push
sub
xor
sub
stc
test
rcrw
or
std
mov
in
int3
add
rorl
mov
adcl
sbb
movsb
das
jg
xchg
je
test
mov
cmp
dec
jle
sub
xchg
or
mov
aas
jns
ficoms
test
aam
xchg
mov
clc
inc
aam
cld
dec
test
sti
cmp
lock
loop
pusha
stc
sbb
inc
nop
orb
mov
lret
push
scas
loopne
or
lock
pop
cltd
nop
inc
icebp
je
iret
jmp
mov
jae
cmp
xchg
out
je
pushf
dec
mov
insl
or
gs
int
insl
adc
push
daa
or
mov
push
jne
in
sub
outsl
push
js
mov
inc
imul
dec
sub
mov
bound
inc
mov
fsubl
add
pop
lcall
ss
dec
pusha
add
cmp
scas
sub
stos
push
xorl
cld
cwtl
scas
push
fldl2t
sahf
lods
push
sub
int3
push
cmpl
xchg
jl
sti
mov
rcll
inc
mov
in
push
fiaddl
xlat
fwait
inc
test
dec
mov
sub
or
mov
insl
lds
int
jle
addr16
cmpl
icebp
fwait
pop
lahf
or
jbe
out
mov
cmpb
inc
lock
inc
aaa
cmp
into
or
sub
movsb
lock
mov
movsl
test
aas
mov
int
push
cmp
adc
aam
incb
pop
mov
imul
gs
out
dec
sbb
into
unpckhps
inc
push
push
test
add
and
adc
or
insb
or
sbb
or
or
pusha
push
scas
int3
in
mov
test
add
loop
mov
stos
adc
jb
and
loop
xlat
jae
dec
inc
stos
pop
ss
test
pushf
jle
fiadds
iret
rol
icebp
push
loop
fbld
sbb
xor
fwait
bnd
dec
in
out
and
cmpsb
or
sbb
aad
les
shrb
cmpsb
inc
adc
pop
push
push
pop
jg
dec
fmull
dec
test
fmuls
mov
test
loop
jns
jnp
xor
lods
sbb
jmp
orb
js
test
lret
sbb
repz
and
pop
into
cwtl
pushf
adc
adc
push
adc
int
gs
stos
shl
inc
dec
in
cmp
inc
xor
outsl
push
jnp
insl
mov
js
xchg
mov
pop
aaa
cld
fldl
add
out
pop
in
jge
mov
ficompl
popa
mov
sub
push
rcl
mov
shll
nop
sbb
pop
jl
ja
pop
cmp
mov
sbb
xor
mov
add
lcall
mov
mov
push
lea
xchg
fucomi
dec
flds
push
inc
inc
xchg
dec
push
out
and
mov
push
ret
sbb
loop
test
test
jno
or
out
pusha
xchg
loope
xchg
icebp
jg
outsb
movsl
xchg
ja
xor
test
dec
rcr
cmpps
cmp
fwait
sub
push
data16
cld
sbb
push
add
cmp
sbb
cmpsl
test
rcrb
out
loop
ror
or
lret
inc
push
and
mov
cmp
push
out
push
notl
or
sbb
inc
mov
fwait
mov
fcmovne
dec
sbb
cmp
movsl
sbb
sbb
adc
in
or
push
jns
sub
outsb
ds
out
test
aad
inc
cmp
lahf
test
adc
test
hlt
push
cmp
out
loop
nop
pop
or
xor
jle
push
repz
dec
sub
pop
pop
pusha
pop
stos
sar
dec
push
scas
sbb
ds
cmp
mov
idivb
mov
in
cmc
nop
jnp
sahf
push
sub
imul
cmp
push
aaa
xchg
pop
mov
movsb
xchg
cmp
lea
xchg
cmc
mov
insl
adc
inc
xor
xor
lods
ret
fcomi
lcall
adc
push
repnz
mov
mov
adc
pop
sub
idivl
push
xchg
in
sbb
cld
xchg
cmp
cmp
into
pop
addr16
mov
sbb
rolb
repnz
sbb
icebp
pop
stc
xlat
pop
sti
mov
subl
add
aad
and
cmp
in
es
push
sbb
xchg
lods
in
mov
cmpsl
sbb
fucomip
cmp
or
or
negb
popf
xor
add
push
lea
ret
push
cmp
mov
pop
mov
in
addl
mov
add
aas
and
or
clc
inc
pop
fisttpll
arpl
xor
and
je
sub
nop
xchg
sbb
pop
or
push
rcrl
add
cmpsl
aad
daa
dec
ss
jg
pop
cld
lods
dec
fstl
pushfw
lea
adc
jecxz
xor
fs
in
adc
xor
dec
dec
dec
mov
leave
out
mov
bound
pop
push
imul
jae
repnz
sbb
es
xor
aam
clc
decl
push
out
or
mov
dec
fsts
push
inc
or
sub
arpl
mov
add
loop
jle
orb
movsb
jge
mov
daa
rol
jge
add
daa
aas
jae
pop
jmp
into
dec
scas
frstor
stos
sub
push
scas
mov
aaa
xchg
fisttps
inc
insl
xchg
ret
xchg
push
pusha
jb
adc
xor
inc
mov
insl
insl
and
xchg
arpl
xor
mov
icebp
pushf
cmp
rorb
lods
js
pushf
out
sbb
xor
or
jnp
aas
stc
loope
jmp
mov
lret
push
andb
cltd
das
fld
jno
mov
repnz
aam
push
and
adc
shlb
push
pop
shr
sti
lods
fwait
dec
loope
in
inc
lods
leavew
ret
adc
movsb
pop
xchg
adc
push
test
outsb
lods
imulb
or
roll
add
test
adc
sbb
fstl
hlt
call
iret
scas
addb
pop
shll
mov
pop
shll
aaa
sub
pop
adc
ret
pop
push
inc
in
push
out
and
dec
loope
fidivl
dec
sub
push
inc
shlb
mov
ja
or
pop
add
jbe
inc
inc
mov
or
or
dec
dec
hlt
inc
pop
mov
or
in
test
xchg
push
sub
rdpmc
into
jecxz
cmpsl
nop
or
inc
xor
jmp
mov
or
mov
or
cmp
sbb
imulb
push
cwtl
cld
hlt
lock
dec
int3
aaa
fimuls
cmpsl
notb
fwait
movsl
lcall
mov
push
push
mov
stos
mov
stos
outsl
jbe
add
cmc
mov
rsqrtps
cmp
and
or
mov
je
mov
movsl
in
push
push
xchg
in
jge
pop
mov
scas
sldt
mov
push
sub
popa
iret
repz
inc
fnstenv
mov
outsl
pop
jle
inc
jbe
cmp
mov
sub
movsb
icebp
ss
mov
xlat
arpl
xchg
outsb
xor
and
xor
push
push
jp
shrl
dec
lock
add
push
or
scas
xchg
les
mov
loop
mov
cmp
imul
mov
fwait
pop
pop
nop
and
movsb
mov
iret
add
aad
cmpsb
inc
in
and
cmpsl
pop
shlb
jg
mov
inc
mov
xor
xchg
fs
add
xorl
mov
popl
xchg
xlat
das
sbb
data16
add
push
or
adc
ljmp
jb
inc
or
imul
push
stc
daa
jae
je
jnp
neg
aas
pop
stos
mov
int
daa
aad
add
push
lahf
scas
xorb
dec
xor
or
mov
test
fprem1
mov
in
shll
lahf
arpl
jae
aam
mov
mov
lahf
pop
mov
repz
out
das
and
js
popf
push
mov
fildll
add
out
ret
dec
call
add
std
in
push
loope
adc
push
cmpsb
movsb
ja
mov
rcrl
int
adc
cmp
ja
loopne
loop
sbb
mov
es
lds
xchg
mov
out
or
test
fwait
sub
and
out
inc
xchg
stos
mov
hlt
mov
lea
pop
push
mov
mov
sbb
cmp
ja
pop
mov
lret
jmp
cmp
lds
mov
js
jmp
dec
inc
bound
flds
xorl
mov
and
insb
inc
icebp
xchg
xchg
rcrb
fdivl
pop
dec
mov
out
rcl
sarw
aaa
ja
lret
add
clc
lret
lea
xlat
les
pop
or
xchg
stc
lret
dec
pop
data16
sahf
push
fists
loope
ljmp
inc
in
xchg
inc
fbld
cmpb
fcoms
mov
cmpb
mov
mov
jle
pop
in
push
je
sub
icebp
mov
sub
lret
aad
fisubs
movb
inc
dec
inc
dec
inc
dec
scas
mov
mov
pop
mov
mov
mov
std
adc
add
lods
fdivl
fidivs
mov
fdivl
maxps
push
cmp
mov
dec
jle
pop
lcall
and
loopne
in
xor
je
mov
into
and
sub
call
lds
sbb
wbinvd
cmp
idivl
lea
fmul
js
dec
insl
pop
lcall
fisubrl
ficompl
testl
xor
gs
jnp
add
ret
pop
mov
sbb
hlt
jnp
push
pop
mov
xor
push
mov
dec
pop
repnz
sub
loope
xchg
sar
xor
dec
jl
out
adc
pop
pop
pop
sub
xchg
mov
fidivl
inc
lcall
and
xchg
push
ja
cmp
xor
push
imul
loopne
arpl
mov
jnp
xor
fcomps
es
popa
shrb
adc
scas
xchg
ficoml
pop
imul
outsl
into
mov
push
sbb
test
xor
aam
mov
mov
pop
or
mov
js
xchg
jmp
mov
lret
cmpsb
xor
lret
fs
xor
cmp
dec
arpl
leave
mov
xor
icebp
std
mov
stos
das
mov
test
aad
sub
sub
sub
pop
xchg
arpl
jns
inc
std
xchg
fdivrp
mov
push
inc
in
jecxz
ljmp
mov
adc
sub
xor
sbbl
xchg
shrb
lock
out
insl
xor
insl
adc
cld
mov
xchg
loop
nop
sbb
or
or
adc
jb
insl
jp
jg
pop
dec
mov
test
xor
insl
or
cmp
jne
mov
and
cmpl
movsb
test
rcrb
push
cmp
sub
pop
ds
jnp
mov
mov
sbb
push
imull
xchg
xor
pushw
mov
mov
add
and
popf
mull
dec
xor
scas
push
test
push
out
xchg
pop
inc
xor
fsubrp
jmp
push
xor
ret
push
aaa
sub
xchg
fstl
fdivr
pusha
push
cltd
jns
mov
outsl
int
fistl
jmp
add
or
and
mov
xchg
sbb
sbb
scas
iret
shl
mov
push
jecxz
xchg
inc
loope
pop
loope
sbb
mov
repz
or
lds
daa
adc
cmpsl
int
xor
fdivrp
mov
das
enter
mov
adc
mov
orl
sub
dec
xor
push
pop
fldt
add
mov
cwtl
ja
cmpsl
lock
pop
adc
fldt
repz
jge
cld
adc
sbb
xchg
lret
and
cli
subb
aaa
dec
dec
mov
mov
cmpsb
mov
iret
jbe
les
iret
mov
adc
cmp
jg
mov
dec
ss
mov
mov
add
loope
jle
mov
enter
icebp
dec
push
fxam
outsl
sbb
mov
icebp
out
ja
add
xchg
das
ds
repz
out
and
jae
outsl
or
ja
lahf
dec
lret
add
loope
aam
ret
out
push
sbb
lods
push
lods
inc
cs
in
mov
sbb
xor
inc
out
push
lds
push
shlb
popa
inc
add
jp
test
sub
push
mov
js
mov
jle
mov
hlt
cmp
jns
stos
je
cmp
cmp
mov
inc
nop
adc
imul
stos
xchg
xor
jb
push
loope
push
mov
adc
aaa
hlt
popf
mov
fsubrl
sub
or
pop
xchg
psubusw
movsl
lret
mov
les
neg
test
lcall
cmp
cwtl
xor
push
inc
data16
popa
cmp
push
enter
cwtl
popf
pop
lret
inc
cld
hlt
out
fldt
fcoml
jnp
jmp
jne
divl
push
shll
inc
or
add
ficoms
and
pop
xchg
and
call
mov
lret
dec
fwait
or
test
call
out
add
sbbb
jp
mov
out
and
int
jnp
pop
push
jmp
rorl
push
pop
inc
daa
mov
or
daa
mov
fistpll
int3
cs
mov
out
lcall
pop
mov
enter
int3
mov
stc
inc
push
mov
sub
adc
push
jecxz
inc
fcoms
dec
das
cli
jnp
mov
and
xor
rol
sar
xchg
outsb
push
dec
push
jmp
adc
mov
fs
sub
jp
push
ss
rol
jns
ljmp
xchg
mov
mov
pusha
sbb
pop
mov
fidivl
jmp
cmpsl
jmp
clc
or
or
and
fnclex
insb
cmp
fbstp
fisubrl
pop
jnp
push
loope
cmp
jb
mov
mov
jg
das
pop
mov
jbe
and
repnz
loopne
xor
mov
int3
movsl
lcall
fnstenv
inc
sbb
fidivs
xchg
iret
sahf
mov
ret
testl
in
mov
xchg
lods
sbb
stos
pop
pusha
jmp
push
mov
scas
cmpsl
pop
cltd
lock
dec
pop
sub
jbe
jns
mov
inc
in
jne
jl
fstpt
addr16
or
mov
mov
cmp
sarb
stc
fwait
push
jmp
pop
adc
testb
push
movsl
push
sbb
pop
cmp
push
xchg
adc
lods
cmp
mov
ret
aaa
push
call
mov
sub
movsb
mov
xor
jb
sub
jbe
addr16
sbb
mov
repnz
rcrl
xchg
mov
popa
stc
daa
scas
inc
sbb
subl
jnp,pt
cmp
cmpsb
lret
cld
ret
in
jge
dec
jmp
cmp
aad
cmp
xor
sbb
xchg
imul
sbb
add
jb
and
inc
lcall
cmp
cmp
xor
inc
jbe
shrb
lds
adc
stos
add
jo
sub
int3
test
adc
test
mov
jae
push
lods
sbb
insl
xchg
mov
loop
in
pop
leave
sub
test
mov
movhps
push
cmp
cmp
or
adc
jae
gs
mov
les
pop
push
je
fs
fcoms
shrl
je
negb
test
add
pop
pusha
imul
shrb
push
rorb
dec
shll
ret
push
adc
xchg
jo
mov
cmp
mov
out
push
les
shll
loope
sahf
lret
add
cmp
cmp
cmp
shrb
loope
mov
pushf
stos
out
mov
pop
pop
xlat
ljmp
mov
inc
mov
inc
loope
dec
mov
sub
imul
mov
call
pop
std
inc
aaa
jecxz
jge
jns
cmp
cmp
and
lock
cmpb
lret
mov
jmp
aaa
and
arpl
cli
or
in
test
repnz
imul
mov
mov
xor
push
push
push
enter
lcall
das
mov
loope
lods
adc
push
cmp
and
mov
mov
fld
and
and
inc
jae
cmp
call
rolb
ljmp
enter
ljmp
bound
pop
jae
rcl
sbb
push
lock
loopne
and
mov
push
pusha
sbb
repz
jp
inc
mov
daa
ljmp
or
mov
dec
cmp
xchg
ss
ss
filds
add
jbe
pop
fcmovu
xor
nop
out
ret
scas
movsl
pop
push
aad
vmulsd
pop
cli
or
out
pop
jle
cmpsl
stos
test
or
mov
imul
jns
add
sub
add
rcll
push
pusha
ret
into
or
sub
inc
movsb
cmp
dec
arpl
repz
mov
arpl
in
push
add
ss
cld
repnz
mov
enter
add
mov
adc
jnp
pop
cmp
jmp
call
test
xchg
adc
add
push
sbbb
xor
leave
in
mov
jo
cmc
scas
lea
frstor
out
int3
lods
imul
jo
fistpll
dec
ss
bound
lods
mov
jge
rcll
hlt
es
sbb
jg
sub
mov
in
sub
ficomps
lods
dec
test
push
jae
push
cld
out
test
mov
sbb
inc
inc
xchg
sub
in
test
in
shll
push
push
popa
adc
stos
pushf
je,pn
mov
mov
jmp
in
cmpsl
sub
test
push
dec
push
les
popa
add
xlat
loop
loopne
mov
movsb
jns
ss
shr
jnp
pop
xor
inc
insb
outsl
cmpsl
xor
cli
adc
in
jp
jo
jp
pop
push
push
pop
dec
pushf
lret
ret
roll
std
push
mov
lock
or
lods
cmp
push
push
pop
sbb
sbb
jmp
mov
cmp
gs
push
outsl
mov
cmp
loope
cmp
test
pop
inc
js,pn
shl
std
rcr
xor
dec
mov
push
mov
sbb
push
es
sub
mov
xchg
cmp
xchg
xor
loop
dec
adc
imul
dec
inc
out
xchg
xchg
jp
pop
push
rorl
push
sbb
call
stos
es
aad
loopne
test
repnz
mov
cltd
rclb
xchg
pop
sarl
stos
mov
fs
ja
fwait
mov
icebp
out
sbb
inc
or
sbb
jb
push
lock
jns
repz
sbb
in
push
inc
leave
sub
push
testb
pop
push
inc
aad
aaa
dec
dec
push
int3
scas
jo
int
es
cmp
test
test
sub
jle
adc
loopne
add
inc
pop
sub
fistl
or
jle
and
je
inc
adc
fs
in
sbb
inc
imul
pusha
stos
popa
out
dec
faddl
xchg
mov
in
sub
fwait
add
jnp
adc
push
dec
fisubrs
test
xor
lcall
arpl
adc
out
icebp
inc
or
mov
cmp
pop
mov
fs
sti
jnp
ja
or
mov
loopne
mov
out
jl
adc
adc
aad
xor
lds
out
rcl
stos
es
pop
mov
ljmp
mov
call
push
addb
adc
xlat
ja
jg
shll
jae
pop
mov
xlat
out
and
out
dec
pop
sub
iret
lret
rcr
push
cltd
jge
mov
dec
stos
aad
or
mov
or
push
das
rorl
sub
int
mov
cmp
hlt
mov
stc
xor
jne
mov
cmp
xor
adc
inc
call
cltd
ficomps
mov
lret
inc
lcall
bound
enter
loopne
mov
adc
mov
aaa
sbb
adc
dec
loope
fsubl
push
lock
sbb
xchg
fwait
mov
add
xchg
sub
fwait
imul
insl
add
mov
in
add
gs
popf
xchg
pop
nopl
jns
fabs
jge
pop
cmpl
mov
push
fsubl
inc
xlat
imul
wrmsr
std
lcall
pop
dec
and
pop
addr16
add
inc
mov
push
sbb
adc
imul
cs
pop
adc
and
movsb
xchg
shlb
xchg
cmp
inc
stos
insl
jle
leave
imul
enter
push
sub
daa
mov
inc
xchg
cmp
mov
ss
shrl
cmpb
pop
loope
in
jo
mov
add
and
shlb
shll
inc
sub
push
mov
adc
fimull
dec
push
dec
cmpsb
lea
and
xchg
cs
pop
cmp
fwait
je
ss
pop
aas
push
in
cltd
pop
ficoml
jb
mov
sbb
xchg
xor
pusha
aad
daa
clc
or
xchg
push
leave
or
cltd
pop
or
pop
pop
in
xchg
inc
jge
or
mov
jmp
mov
lcall
or
out
add
call
sbb
dec
dec
cmpsl
popf
xlat
fs
push
xor
imul
or
lret
js
mov
out
adc
cltd
sub
repnz
xlat
repz
xlat
loopne
icebp
imul
fstps
js
pop
es
mov
xor
add
sub
xor
xchg
jnp
or
adcb
repnz
shr
push
push
testl
call
loope
es
mov
mov
jg
inc
lea
sbb
out
add
movsb
daa
jae
pop
ljmp
mov
jne
popa
mov
fidivl
dec
mov
sbb
loopne
in
xchg
pop
ret
mov
pop
lret
push
cli
shl
int
xor
mov
xor
cwtl
dec
sub
add
mov
add
paddq
iret
stos
lods
dec
sti
xor
and
mov
leave
ffree
das
addr16
jae
fimuls
out
cltd
pop
pop
jae
ljmp
or
lahf
dec
es
shrl
sbb
cmc
aas
popf
dec
jle
mov
mov
loope
jns
and
notl
jns
imull
rcrl
jb
sub
ljmp
mov
sub
push
shlb
dec
jp
and
push
mov
sub
loope
movsl
rcrb
sub
push
es
fdivr
xchg
jns
les
stos
lcall
sbb
mov
hlt
or
mov
in
insl
pushf
dec
dec
out
jnp
test
daa
aam
push
mov
cltd
test
inc
call
test
das
ljmp
scas
cmpsb
in
jnp
lahf
cwtl
or
loope
lret
pusha
jns
movsl
jno
mov
int3
call
pop
pop
jo
mov
sti
push
fistpll
add
pop
adc
mov
rcr
mov
aad
sub
pop
inc
xchg
xchg
adc
jne
adc
pushf
push
mov
into
imul
inc
add
xor
lea
cmp
aam
fidivl
movsb
push
inc
jmp
jae
mov
lea
sbb
mov
mov
pop
imul
jmp
rorb
lret
jle
sub
sub
and
pusha
sti
leave
fdivrl
cmpsl
lret
and
adc
rolb
mov
cmpsl
scas
inc
hlt
add
popa
add
mov
out
ss
jl
ret
shll
mov
fisttpl
push
pop
test
je
mov
lods
movsb
pusha
cmc
lods
outsl
imul
cli
jnp
xchg
add
jne
mov
inc
and
jmp
bound
jne
and
lcall
rorb
repnz
push
scas
mov
push
shrb
pop
jo
bound
lea
inc
imul
jo
adc
mov
popa
in
push
pusha
inc
push
dec
arpl
xchg
das
and
enter
cwtl
dec
shrl
mov
lret
les
dec
clc
cld
orb
add
insl
pop
stos
daa
adc
enter
push
dec
xchg
jle
bound
mov
aad
push
int3
mov
sbb
cltd
popa
gs
cmp
repz
push
dec
jnp
cwtl
cmpsb
daa
jg
and
or
loop
jl
sbb
sbb
mov
pop
mov
loopne
push
push
push
add
mov
add
daa
sbbl
add
insb
ret
mov
int
or
fnstsw
xor
insb
push
aad
call
xor
inc
cmp
xor
xchg
push
mov
add
mov
jmp
insb
jp
add
pop
pop
mov
jbe
jle
dec
sbb
lock
mov
and
in
jne
xchg
dec
xlat
pusha
iret
sub
add
pop
ss
add
aaa
pop
mov
and
pop
popf
aad
or
sbb
xor
or
add
jno
push
test
enter
sbb
gs
adc
push
inc
mov
push
jp
loope
pushf
pushf
insb
adc
xchg
push
daa
pop
vmread
mov
cmpsb
popa
aad
jo
adc
lds
repnz
pop
mov
cmp
inc
or
dec
fmul
aas
dec
call
mov
pop
jmp
imul
push
test
or
fs
push
push
test
loopne
aam
adc
adc
ja
mov
jle
mov
rol
lods
xchg
jg
scas
sub
cmp
xchg
in
pop
in
xchg
dec
stos
and
mov
sub
and
mov
push
call
sbb
xor
insb
cmp
xchg
shrl
cmp
xor
sub
inc
inc
mov
add
sbb
orb
jge
push
sti
ds
sub
adc
outsl
ljmp
ss
jbe
out
mov
out
jae
xlat
pushl
sbb
jg
call
in
jnp
test
cmpsl
xor
std
mov
push
daa
or
leave
dec
stc
jmp
jae
xchg
es
mov
clc
shrl
jg
pop
cld
in
icebp
fwait
mov
repz
lock
lcall
bound
pusha
ficompl
xchg
mov
jp
int3
dec
add
sub
push
mov
mov
scas
sbb
adc
add
inc
aad
mov
mov
cld
push
fldlg2
loopew
shrl
pop
das
cmpl
adc
and
or
hlt
sbb
xchg
lcall
cmpsl
arpl
and
sbb
mov
sub
lcall
mov
cmp
addb
ret
sahf
inc
faddl
cmpsl
sbb
push
xchg
mov
cld
test
mov
mov
mov
or
adc
sbb
cmp
lcall
pop
dec
jmp
les
jo
cmp
jae
cmc
push
lods
jae
jmp
lock
cmp
and
cmc
xchg
mov
fdiv
xchg
lock
xlat
stc
cmpsb
add
jno
mov
orl
loopne
pop
movsb
push
fdivrl
shl
std
mov
mov
adc
nop
inc
dec
cmp
push
orb
out
out
dec
xchg
dec
js
nop
adc
dec
xchg
fsubl
shlb
push
shll
and
push
push
inc
shl
or
imul
lcall
lahf
out
jmp
mov
in
pop
out
inc
pop
mov
insb
pop
add
xchg
adc
testb
ja
js
xor
push
pop
cmp
test
arpl
inc
cmc
xchg
cmp
adc
sti
pushf
test
out
dec
scas
fimull
cwtl
loopew
daa
jb
movsb
icebp
fwait
nop
cmp
aad
nop
adc
xchg
pop
and
push
stos
jle
movsl
popf
sbb
movsb
mov
mov
pop
pop
mov
movsl
inc
mov
bound
pop
mov
mov
xchg
push
sub
repnz
in
ljmp
popa
push
aas
enter
popa
jmp
sbb
in
leave
dec
or
lods
pop
stos
out
lods
and
icebp
mov
cwtl
push
mov
sub
mov
mov
addr16
sarb
scas
inc
sub
jmp
add
mov
jmp
jb
cld
je
ja
insl
mulps
inc
shll
and
cltd
adc
pop
test
sub
xor
pop
nop
daa
xchg
iret
dec
pop
and
inc
push
pop
cs
sbb
sbb
mov
and
jne
pushf
test
push
fcompl
push
cld
xchg
notl
test
std
mov
arpl
out
and
aad
sarl
repnz
jl
mov
aam
bound
dec
mov
dec
xchg
pop
rcrb
xor
or
out
rol
js
xlat
jns
sub
in
adc
fnsave
jmp
mov
push
cmc
in
pop
mov
cmpsb
sub
dec
fimuls
dec
jmp
push
into
mov
push
add
fidivrl
aad
sbb
in
mov
dec
mov
lods
clc
pop
gs
outsb
leave
aam
inc
paddd
push
inc
sbbb
loop
mov
sub
add
sahf
jne
dec
pshufw
out
loopne
sarb
repnz
jmp
repz
jge
mov
xchg
addl
dec
nop
jae
xchg
sbb
mov
out
xor
sbb
jne
cwtl
fldenv
pop
mov
sbb
push
sahf
or
xchg
pop
sub
ds
pop
pop
cmp
int
mov
pop
idivl
sbb
cmpsl
pop
sbb
popf
test
pop
xor
and
sbb
repnz
push
lea
or
and
push
adc
mov
call
or
sub
je
cmp
jg
pop
jle
mov
mov
push
clc
je
roll
leave
xchg
add
mov
fidivl
or
adc
int
mov
jb
inc
fbld
test
lock
daa
mov
into
jne
jecxz
popl
sbb
rol
je
pop
cltd
sub
sti
or
fcompl
push
mov
add
pushf
lds
mov
inc
js
adc
jae
mov
nop
inc
in
push
pop
in
push
jp
jnp
xlat
test
xchg
jb
xor
or
inc
loopne
js
js
cli
test
inc
mov
inc
mov
jg
fsubrs
xor
sti
mov
push
movsb
jo
enter
and
sub
sub
addr16
outsl
std
cs
into
lods
push
mull
cmp
fcomi
cmpsb
jbe
cmpsb
jns
dec
xchg
xchg
xchg
incb
mov
xchg
push
cmp
xor
lods
cmp
inc
das
xchg
movsl
in
stos
aas
mov
cmp
inc
dec
push
test
dec
cmp
jae
aad
jns
inc
test
sets
xor
adc
pop
jb
mov
loop
iret
push
sub
cmp
std
fcmovnbe
lahf
nop
pop
pop
inc
data16
dec
lea
pop
mov
js
inc
add
ffreep
xor
repnz
jb
inc
mov
ja
das
test
pop
mov
aad
scas
adc
fsubrs
cmp
adc
sub
xlat
jge
scas
cli
in
pop
or
mov
js
popf
bswap
or
inc
jl
hlt
or
bound
mov
sbb
mov
xor
mov
jb
add
data16
aas
inc
cmp
inc
mov
cmpsb
jo
pop
test
xchg
jmp
add
cwtl
loope
daa
xchg
mov
xchg
js
mov
dec
mulb
inc
shlb
ja
lock
sub
nop
repnz
lahf
inc
pop
sbb
gs
jle
mov
aad
movsl
jmp
cmp
and
inc
mov
lods
packssdw
sub
out
pop
fistpl
cmp
out
sub
loope
xchg
xchg
jno
enter
adc
and
push
in
lret
xchg
or
add
pop
sub
pop
out
or
in
xchg
stos
xor
pusha
or
mov
push
pop
inc
add
jmp
cltd
inc
in
bound
push
jecxz
in
mov
iret
or
in
mov
cld
xchg
or
mov
pcmpeqw
frstor
shl
pushl
or
xor
and
aam
or
icebp
enter
ds
sbb
test
adc
sahf
xchg
jmp
cwtl
pop
mov
cmp
inc
rcrl
in
pusha
lret
mov
adc
nop
and
dec
push
push
xchg
inc
or
ds
mov
sub
lcall
popf
out
lds
mov
daa
ja
mov
push
sub
lcall
add
pushw
inc
pop
lods
xchg
pop
pop
imul
mov
iret
pop
and
jno
pushw
mov
aaa
ljmp
ja
scas
and
jl
jmp
rep
sbb
mov
cmpl
dec
mov
dec
inc
sarb
fstl
mov
cmp
shrl
aad
lock
or
div
xchg
in
adcb
mov
std
xchg
pushf
cmpsl
inc
mov
sub
sbb
xor
mov
push
mov
popa
cmc
dec
mov
sti
mov
mov
lret
mov
push
cmp
fwait
or
sbb
push
jb
mov
ss
push
into
sbb
pop
fnstsw
cmc
out
add
or
stos
call
inc
mov
jb
insl
and
cmp
nop
mov
rcrl
mov
jmp
dec
cwtl
xlat
or
ret
dec
and
jno
cld
test
fsubr
cmp
jge
mov
jae
scas
in
and
xor
in
jg
popa
lret
cmc
cmp
mov
bnd
addr16
add
or
add
cli
or
add
xchg
in
movsl
testl
sbb
inc
xchg
lcall
xchg
int
aad
cld
lods
lods
scas
hlt
jno
mov
cli
xlat
pop
flds
gs
xchg
shll
xchg
adc
std
pop
jnp
mov
adc
adc
sbb
push
and
int3
rcll
imulb
sub
inc
js
add
add
fildll
imulb
dec
leave
jmp
mov
or
push
sbb
les
inc
test
stc
sbb
scas
add
sub
mov
cmp
xchg
xchg
sbb
fstl
mov
mov
pop
test
dec
push
mov
cmc
stos
mov
mov
fs
inc
inc
fiadds
scas
nop
xorb
push
aaa
inc
icebp
imul
mov
pop
adc
inc
xchg
inc
js
adc
daa
mov
movsl
pop
mov
push
popf
outsb
push
fistl
sbb
int3
jge
xchg
imul
cmpsl
or
call
mov
or
icebp
inc
and
es
stc
loopne
js
jge
cmp
stc
je
sub
push
in
data16
test
sbb
out
pushl
jae
enter
out
and
hlt
leave
add
cld
lock
clc
mov
clc
loopne
divb
mov
sub
pusha
adc
lods
mov
pop
sbb
aad
fldcw
fstps
mov
and
mov
xchg
mov
push
stc
arpl
dec
adc
sbb
mov
mov
pop
nop
mov
in
inc
outsb
je
inc
adc
das
sub
xlat
lahf
mov
or
loop
mov
divb
inc
shrb
xchg
xor
fstp
xchg
notl
es
adc
stos
fcoml
jecxz
mov
push
lds
lcall
sbb
add
loop
jb
aas
repnz
js
iret
mov
push
outsb
mov
fsubl
arpl
mov
mov
movsl
daa
sbb
cwtl
mov
das
fisubl
mov
dec
jge
fistpl
or
fcoms
divl
mov
lret
jbe
or
pop
imull
dec
aam
and
scas
jae
and
outsl
push
adc
xor
sbb
push
lcall
jb
insl
imul
add
sub
je
pop
pushf
int
cmp
lcall
pop
icebp
cmpsb
test
and
daa
add
lods
movsl
sbb
push
ret
clc
xor
shrl
mov
sub
pop
mov
adc
divps
mov
pushf
xsave
cmp
mov
push
ret
out
push
aam
or
mov
rcl
dec
xor
jae
cmpsb
pop
dec
rorl
dec
dec
jl
push
clc
loopnew
cmpsl
sub
lods
fucomp
inc
pop
ds
jp
int3
inc
jp
sar
mov
xor
mov
xlat
xchg
cmp
lods
cmp
jl
cmp
les
loop
push
add
les
fidivrl
movsl
fnstenv
lea
pop
sub
jne
xchg
xor
loop
xor
repz
mov
sahf
add
lahf
pop
gs
ja
jb
insb
mov
imul
in
mov
xchg
shrb
cli
push
shl
test
lahf
outsb
arpl
sub
sub
insl
shll
xor
mov
les
int3
call
and
xchg
push
loopne
lods
dec
add
outsl
inc
loope
push
mov
xchg
pop
push
adc
bound
jbe
and
pop
cs
sarb
push
subl
push
push
stos
mov
movsb
gs
je
jmp
leave
jae
add
call
ja
outsb
data16
shlb
adcb
dec
sahf
xor
cmp
sub
and
out
xchg
cmp
ja
mov
clc
stc
xor
negb
test
dec
test
and
mov
outsl
xchg
pop
shll
mov
iret
addr16
pop
jmp
mov
mov
adcb
adc
popf
lret
cmpsl
enter
outsb
push
mov
ficoml
push
outsl
and
imul
push
dec
jge
mov
pop
jbe
lss
push
imul
insb
insl
sub
or
loopne
push
mov
daa
out
push
mov
incl
into
aas
in
popl
xchg
jecxz
sub
xchg
push
movsb
jns
pop
dec
jecxz
and
cltd
sbb
data16
adc
aaa
movsl
jge
shlb
test
pusha
subb
mov
es
in
or
adc
sti
icebp
sbb
jns
inc
jle
xchg
cmp
mov
jmp
sub
ja
sub
lahf
mov
push
dec
fwait
mov
cli
fisttpll
scas
and
pop
jnp
push
fnstenv
push
dec
out
out
arpl
addl
or
adcb
mov
xchg
mov
movsb
mov
scas
xchg
jae
or
js
dec
mov
out
cmpsb
cmpsl
cmp
jo
pop
mov
cmp
cltd
out
out
shlb
lods
inc
pop
cmp
jne
outsl
sbb
imul
add
mov
push
or
into
sahf
mov
out
cmp
in
dec
enter
cmp
loop
fistl
mov
sti
cld
add
ds
lahf
xor
push
push
enter
dec
jg
insl
xchg
add
scas
gs
jp
in
dec
pop
lret
out
aad
adc
adc
jb
stc
roll
in
loopne
add
fcompl
adc
sbb
enter
xchg
aaa
pop
inc
inc
stc
clc
notl
out
and
bound
ds
rcrb
inc
mov
pop
iret
out
in
adc
clc
and
sub
add
inc
jle
sbb
scas
dec
paddq
push
inc
sbb
add
inc
scas
add
js
mov
pop
add
addr16
mov
js
fisubrl
shll
rcrb
pusha
or
adc
push
loope
jg
cmp
gs
mov
gs
mov
test
cmp
das
push
inc
out
ds
cmp
mov
mov
sbb
shl
jl
mov
call
sti
icebp
add
jecxz
cmpsb
leave
cmp
loopne
fildll
dec
clc
ret
mov
fs
xchg
movsl
pop
adc
cmp
je
pop
xor
sub
out
out
int
xlat
jbe
es
cwtl
insb
cltd
jae
adc
aad
fildll
xchg
out
in
pop
mov
jp
mov
outsb
mov
gs
bound
aas
test
xchg
xchg
or
mov
movsb
lcall
and
rclb
bound
aad
sub
mov
or
int
fwait
inc
outsb
dec
mov
mov
pmullw
leave
push
popa
je
aam
fisubrs
mov
int3
cld
sahf
shrb
or
push
pop
mov
jg
pop
and
das
cmp
cmp
push
das
ret
cli
pop
xchg
aaa
sbb
pop
add
in
or
imul
aas
jne
pop
push
xor
push
pushf
inc
push
dec
dec
xchg
into
int3
das
es
subl
in
mov
cli
add
cwtl
insb
aam
scas
arpl
xor
cmc
pop
fbstp
mov
cmp
push
arpl
or
test
xor
not
les
inc
jp
ljmp
or
lret
mov
imull
leave
lret
push
jg
in
pop
and
in
xchg
add
mov
inc
inc
mov
dec
rep
popl
rorl
add
xor
jnp
inc
cmpsb
ja
jle
pop
ficoms
rcrl
mov
out
pop
sti
add
mov
jecxz
xchg
push
sub
clc
dec
cmpsl
popa
jb
cmp
inc
lahf
lcall
out
lcall
mov
pop
faddp
test
pop
xor
xchg
fstps
mov
xchg
xchg
insl
pop
adc
loopne
jns
mov
shlb
add
cwtl
cmp
xchg
sub
cmp
mov
std
cmp
xlat
fbld
sahf
xchg
inc
dec
mov
push
sub
insl
mov
outsl
in
inc
repz
jmp
or
jne
mov
ss
cmp
cmpsl
or
fnstsw
inc
xor
loopne
inc
pop
test
xchg
es
lahf
push
leave
rcrb
mov
adc
xchg
inc
sbb
pop
sub
push
pop
xor
xor
adc
sbb
sahf
fdivs
jmp
popa
add
ret
pop
rolb
push
pop
jp
sub
push
loope
imul
pop
add
iret
out
cmp
data16
inc
xlat
sub
movb
dec
popa
xor
dec
mov
jmp
jg
iret
or
or
mov
mov
rcrl
dec
in
mov
fadd
sbb
xchg
jmp
movsl
test
pop
enter
inc
popa
arpl
add
jbe
push
pop
fstl
dec
add
xchg
hlt
lock
jnp
icebp
push
xor
movsb
dec
jl
bound
xchg
or
or
adc
pop
xor
jbe
sbb
adc
adc
dec
and
mov
imul
scas
dec
rcrb
pop
cltd
enter
mov
idivl
shrl
loop
pop
js
mov
mov
and
negl
mov
enter
scas
xor
sbb
or
mov
or
in
fs
or
popl
adc
mov
sbb
bound
xor
ljmp
rcrl
sub
jg
and
sbb
add
stc
push
inc
xchg
pop
out
xchg
xchg
sub
loop
mov
inc
out
jae
sbb
inc
cmc
push
xchg
test
gs
mov
and
dec
cmp
negb
mov
or
aad
testl
ljmp
cli
popf
sub
sbb
js
repnz
push
pop
push
jns
cmpl
mov
lods
xor
add
dec
rorb
outsl
adc
fwait
clc
out
push
mov
lahf
test
imul
aas
mov
jp
sbb
fadds
in
inc
adc
adc
test
cli
adc
add
roll
jmp
pop
and
xor
mov
scas
jno
jle
js
into
fists
xchg
movsl
fbld
lods
nop
mov
or
inc
pusha
lods
ret
leave
mov
test
sbb
ds
fs
vandps
lds
sti
push
leave
shlb
xchg
jne
jp
loop
ljmp
mov
mov
roll
push
jle
and
push
sti
adc
stos
pop
lahf
shrl
jb,pt
xor
and
out
cmp
inc
lods
sbb
cltd
cmp
pop
mov
jno
add
les
shlb
adc
call
xor
jns
sbb
mov
das
jmp
sahf
xor
or
push
jb
repnz
mov
add
shrb
dec
adc
into
add
sub
movsb
jbe
jne
xchg
jge
cmpsl
je
push
mov
cmc
rolb
sbb
inc
rcrl
mov
mov
inc
jp
loope
shrb
sub
xchg
dec
and
add
jge
sub
movsb
fcompl
fsubl
sbb
sbb
and
mov
lret
and
push
sub
or
icebp
push
push
ja
inc
out
pop
out
mov
adc
push
leave
dec
icebp
dec
dec
push
int
mov
mov
add
sub
lds
dec
cmp
mov
loopne
insb
and
xchg
and
lock
sub
in
sar
cmp
jbe
mov
fdivrs
pop
inc
xor
push
data16
pop
mov
lahf
mov
aad
mov
mov
cwtl
data16
adc
cmpw
cs
xor
cmpsl
or
mov
mov
outsb
cmpsb
mov
sub
cmpl
jmp
jmp
daa
mov
cmp
pop
sub
pop
xchg
in
lock
jns
subl
fisubrs
mov
pop
xchg
pop
jg
loopne
inc
test
rcll
pop
aas
xchg
adc
or
xchg
push
ljmp
test
call
adc
outsl
mov
out
lcall
addb
pop
daa
cmp
into
add
cmpsb
push
insb
fwait
pop
fstl
jo
insb
add
sti
bound
imul
mov
pop
sbb
sbb
lahf
or
into
iret
inc
es
push
cmp
movsb
pop
mov
aam
sub
repnz
outsl
push
cwtl
push
mov
insb
push
cmp
imul
inc
fnstcw
daa
add
push
mov
dec
int
popf
inc
mov
add
adc
mov
or
push
push
dec
insb
lret
xor
shlb
ljmp
jg
jb
jecxz
mov
inc
dec
or
sbb
sub
les
mov
jae
xor
push
xor
sbb
cwtl
in
or
and
loope
loop
inc
or
dec
mov
iret
sub
and
int3
cmp
inc
mov
and
push
push
jl
adc
mov
push
sbbb
sub
pop
pop
pop
jecxz
mov
test
loop
jb
sbb
hlt
dec
ljmp
mov
scas
xor
mov
jmp
adc
dec
insb
fists
in
bnd
iret
bswap
aam
fwait
pop
sbb
fcoml
inc
rorl
pop
stc
pop
gs
cltd
pop
outsl
int3
clc
orb
je
mov
sti
and
rcrb
mov
adc
mov
repnz
clc
loopne
in
cmp
aaa
arpl
adc
scas
dec
lods
xorb
out
push
add
hlt
mov
or
push
sbb
xchg
fimull
jmp
adc
addps
jo
and
mov
mov
xchg
xorl
and
rcll
fcomi
pop
repz
mov
mov
ds
lret
shll
and
mov
inc
add
out
mov
pop
push
sub
inc
ds
mov
pop
xor
fwait
dec
leave
sub
orb
pop
shl
out
nop
and
fnstsw
xchg
cltd
mov
aas
xchg
call
fstpl
cwtl
add
clc
fs
adc
bound
sbb
clc
push
xchg
or
arpl
or
jp
xchg
scas
xchg
xor
pop
shlb
test
outsl
xchg
mov
cmp
test
mov
bound
repz
sub
xchg
leave
mov
inc
stc
sub
pop
pop
cltd
xchg
jae
dec
imul
out
xchg
ds
add
push
scas
fadd
mov
jp
mov
adc
addl
sbb
inc
arpl
orb
sarl
jmp
xor
fisttps
in
hlt
and
cltd
jns
pop
dec
add
sbb
lock
inc
jo
jae
xor
xor
arpl
inc
inc
and
jb
dec
jnp
xor
mov
fwait
xchg
call
push
and
out
scas
lods
push
dec
push
inc
add
xor
jbe
dec
xchg
lods
mov
add
or
incl
subb
pop
call
xor
lahf
sbb
lcall
sbb
enter
dec
and
rolb
icebp
iret
test
push
lret
jmp
adc
mov
adc
xor
xor
add
xor
push
in
inc
rclb
shl
loopne
xchg
std
pop
fnsave
pop
mov
pop
inc
lret
lcall
sbb
dec
lcall
ljmp
jnp
enter
es
sti
ja
pop
and
and
into
testb
bound
stos
xchg
pop
inc
int
gs
xchg
jl
mov
repz
call
xchg
push
pop
pop
add
cld
push
mov
pop
mov
push
aas
lea
xor
xchg
push
jne
push
inc
ss
or
or
jno
iret
inc
mov
cwtl
and
popf
aaa
cmpl
push
xorl
and
mov
pop
mov
or
or
cmp
mov
rorl
dec
in
push
sarb
adc
bound
cmp
imul
rorl
xlat
pop
icebp
cmp
ret
shrl
fildl
pop
push
push
mov
xchg
push
mov
je
and
adc
jo
addb
dec
es
jg
ja
inc
test
ds
mov
test
fwait
mov
pop
loopne
scas
fsubrl
dec
xchg
stc
sbb
or
cmpsl
iret
idivb
sbb
sub
xchg
mov
loope
aas
scas
mov
ficomps
mov
or
inc
and
jg
or
shrb
jp
repz
sbb
popf
int
inc
push
sub
cmp
cmc
fsubrs
inc
cmp
xor
fstl
sub
and
or
das
and
mov
sub
xor
mov
cli
popa
xchg
jno
mov
push
dec
roll
mov
arpl
and
std
or
xchg
push
pop
sub
dec
mov
les
mov
xchg
daa
mov
mov
iret
ror
pop
inc
ror
mov
sarb
xchg
pop
push
sarb
loop
repnz
pop
pushf
out
call
adc
mov
outsl
cmp
loopne
sbb
jbe
js
cmp
inc
bnd
arpl
sbb
int3
xchg
add
jo
xchg
aaa
add
jmp
enter
xor
cmp
fwait
nop
push
les
or
dec
mov
sbb
mov
adc
das
aas
cld
dec
sbb
xchg
addl
mov
int
or
pushf
push
scas
pushf
mov
adc
iret
dec
or
aam
cmpsl
push
ret
xchg
aaa
lcall
mov
enter
and
dec
fwait
ret
mov
les
add
sahf
popa
sub
insb
or
iret
shld
xor
xchg
adc
cmpsb
loope
ljmp
outsb
daa
cmp
add
lods
or
push
scas
out
test
xor
jno
or
jl
xchg
ja
cmp
movsl
je
sbbl
lcall
push
jnp
lods
push
jl
add
lcall
out
sbbb
pop
adc
push
jmp
lcall
lds
inc
mov
ds
aaa
push
inc
add
cmp
xor
cmp
in
fldl
xor
push
gs
imul
jmp
push
js
push
insb
test
jle
frstor
mov
lret
ljmp
adc
mov
mov
movsl
add
inc
lea
stos
xchg
xchg
cmpsl
pop
mov
stc
push
and
mov
and
cmp
sbb
jns
adc
inc
pop
sbb
imul
call
fldl
or
out
rorb
lock
and
xchg
mov
or
cwtl
jmp
mov
dec
xchg
mov
leave
pop
sbb
fistl
add
cmpsl
aaa
sub
pusha
jae
mov
and
js
push
call
mov
repnz
loop
fimull
mov
aaa
jb
dec
rol
orl
je
in
enter
cmp
cmc
insl
sub
pop
ficompl
mov
xchg
rclb
stc
jecxz
test
mov
pusha
loope
pop
or
add
shrl
push
pop
mov
push
sbb
cwtl
sub
test
mov
adc
mov
loopne
lahf
into
add
stc
loop
adc
out
outsb
mov
cli
test
subb
xchg
inc
xor
addr16
jl
jno
dec
jnp
sub
mov
cmp
xor
repnz
or
lcall
xchg
or
lcall
push
cmp
mov
mov
icebp
mov
and
mov
xor
cmp
sbb
sub
push
orl
addr16
pop
imul
lds
sbb
je
sbb
addb
sub
lea
push
rcll
xlat
popf
xchg
fldenv
leave
test
scas
movb
aad
sbb
or
mov
xor
push
adc
subb
lahf
in
jae
lods
mov
push
rcrl
ficompl
int
fmull
movsl
pop
aaa
stos
lea
lret
push
mov
outsb
inc
inc
imul
jle
lods
mov
adc
fmull
ret
pop
ja
dec
push
mov
xor
pusha
fldl
jl
pop
scas
sti
mov
fdivp
adc
push
imul
mov
inc
inc
loopne
shll
lret
cmpsb
lret
lock
lcall
enter
jne
adcl
fmulp
ret
out
pop
mov
push
xchg
int
mov
in
mov
popf
push
mov
pop
jne
pop
jb
mov
xchg
popa
and
outsl
outsb
sbb
adc
mov
and
pop
rolb
xchg
or
insl
lcall
lods
fs
shl
sbb
xchg
sub
sub
jae
and
pop
mov
pop
sbb
mov
inc
iret
rorb
test
xor
and
pop
push
jns
xchg
xchg
icebp
test
and
xor
dec
imul
inc
add
push
and
pop
adc
mov
test
mov
aam
mov
cltd
outsl
cmp
cmp
mov
addb
pop
cmpl
or
insl
xor
xchg
ljmp
mov
xor
shll
out
gs
mov
out
ljmp
sbb
imul
push
cmp
inc
fs
mov
inc
pop
andb
and
lcall
dec
jne
push
sahf
mov
push
aam
movsb
inc
mov
jo
jne
lret
bound
dec
leave
push
inc
add
js
aas
in
fsubs
movsl
fdivrl
movsl
push
add
adc
mov
and
out
pop
dec
mov
xchg
fwait
aam
mov
xchg
lret
fistpl
out
pop
xchg
test
cltd
dec
movsl
jnp
lods
dec
lods
mov
pusha
sbb
cmp
aas
and
jle
dec
dec
lea
int3
lods
fcmovnb
es
ret
lret
fisubrs
mov
push
int
jbe
negl
jecxz
add
pop
sub
xor
in
and
or
dec
cmc
out
push
or
mov
fstl
mov
or
push
xchg
data16
stos
insl
sub
lea
mov
mov
pop
adc
pushf
add
daa
pop
mov
mov
ds
rcrl
mov
add
test
mov
xchg
pop
insl
mov
pop
ss
pop
rcll
hlt
test
push
dec
cmp
shlb
clc
lret
fstl
pminsw
ret
addb
cli
ss
not
pop
push
lret
outsb
mov
mov
sarl
pop
sub
add
out
xor
push
sbb
jns
cmp
push
cmpl
push
xor
jb
sbb
mov
xor
mov
add
das
icebp
sub
and
jp
pop
dec
inc
lock
add
movsl
push
push
loope
xchg
or
daa
mov
push
jl
and
adc
clc
pop
adc
push
mov
and
scas
imul
inc
adc
stos
cmpsl
es
je
mov
mov
cmpsw
or
pop
aam
jl
adc
andb
jmp
lahf
testb
sbb
push
shrb
adc
pop
inc
iret
sub
add
sahf
dec
addr16
sbb
or
adc
pop
les
test
pop
push
aad
mov
dec
rorb
loope
pop
jg,pn
lods
xchg
cld
ljmp
cmp
out
jle
or
loopne
stc
push
loop
jo
fisubrs
cmp
out
jne
cmp
jle
pusha
mov
jbe
dec
pop
mov
shrl
imul
jno
mov
sarl
ret
dec
jnp
lea
add
sub
xchg
inc
add
dec
pop
lret
mov
aaa
mov
test
mov
cmp
sub
sar
xor
cmp
pop
sub
and
stos
lock
mov
test
loop
dec
cli
pop
jne
dec
jmp
aaa
jg
popf
test
xchg
pop
mov
sub
cmpsb
movsb
mov
inc
insb
cmp
out
xchg
mov
or
fisttpl
and
je
decl
aaa
mov
push
and
jg
movlps
hlt
jecxz
in
leave
mov
inc
cmpl
mov
inc
add
das
and
cmp
jl
mov
pusha
pop
cmp
inc
ret
mov
hlt
shl
scas
popa
and
scas
pop
pop
outsb
xchg
push
ret
sahf
out
cld
mov
inc
dec
xchg
push
and
fdivl
sahf
imul
dec
or
test
xor
imul
movl
inc
test
ret
pop
mov
int
jge
addl
lahf
mov
jle
daa
repz
push
rolb
lods
leave
jmp
mov
in
mov
nop
pushf
xlat
lods
aas
lret
cmc
xor
popa
lcall
push
lret
leave
mov
cs
xchg
mov
in
movsl
mov
xor
fsubrl
cmc
data16
xor
rcr
inc
xor
and
adc
jle
lret
loope
sbb
aas
xchg
xor
out
rolb
cmovnp
sbbl
push
xorl
insl
fidivrl
add
push
pushf
jne
loopne
shl
inc
mov
sub
cmp
or
sbb
adc
insb
push
cmp
lret
daa
cmpsb
in
enter
shr
jg
fcmove
cwtl
sbb
lahf
std
jo
ret
addr16
pop
ror
jno
into
or
or
pop
insl
iret
mov
adc
and
push
repnz
pop
mov
mov
call
fildl
pop
je
jne
lahf
faddp
repnz
mov
sub
lds
push
fbstp
test
aas
fs
lret
or
mov
pushw
or
jge
mov
je
and
test
test
int3
and
mov
cmc
ds
test
inc
mov
mov
mov
movl
pop
cmp
sbb
xor
shlb
rorl
lret
stos
je
or
inc
jne
mov
and
hlt
loopne
fdivrs
mov
mov
xorb
out
daa
sbb
lcall
std
cmp
sub
dec
clc
cmp
mov
lcall
shll
jbe
cwtl
cmp
mov
pusha
mov
push
shrl
notl
inc
cmp
xchg
mov
sbb
and
ljmp
imul
xor
mov
jbe
pop
scas
ret
hlt
inc
call
mov
in
gs
lods
push
push
gs
mov
outsl
test
push
sub
fcompl
fwait
aam
inc
hlt
inc
int3
sbb
push
in
testb
mov
data16
mov
outsb
pusha
mov
jle
sti
cmp
mov
mov
or
or
jl
je
repz
dec
into
ds
gs
cld
into
jge
lds
push
aaa
mov
and
popf
mov
xor
out
dec
sbb
jae
and
jne
push
pminsw
daa
fiaddl
mov
dec
pop
sbb
cld
mov
push
dec
cmpsl
add
repnz
xchg
loope
mov
push
sub
mov
xchg
arpl
cmp
pop
pop
aas
mov
fs
shrl
lret
ficoml
aam
enter
mull
sti
mov
or
mov
jbe
jle
mov
pop
int3
int
addl
lret
inc
sti
sarl
into
les
je
and
ret
pushf
aad
inc
into
mov
movsb
bound
jb
addr16
roll
jl
xchg
add
test
push
push
inc
or
imul
push
cwtl
cs
pcmpeqb
ljmp
js
out
std
pop
or
pop
dec
inc
adc
sbb
and
jg
outsb
lret
jns
xor
arpl
clc
cmp
in
lret
pop
outsl
pop
cmp
popa
dec
push
clc
call
pop
mov
ret
xor
fildll
fs
pop
mov
pop
xchg
mov
push
inc
les
mov
jge
add
shl
pop
xchg
push
stos
push
cmp
hlt
call
sbb
mov
clc
popf
int3
es
cmp
fwait
dec
addr16
jns
arpl
jp
dec
adc
popf
xchg
jb
sbbl
in
roll
dec
hlt
popa
insl
xchg
scas
call
xchg
adc
mov
into
jl
out
shrb
cmp
sub
inc
push
or
jns
in
rolb
ror
cltd
mov
sub
jno
imul
clc
jge
inc
xchg
cmpsl
push
aas
cmpl
jg
xor
inc
lods
xchg
lcall
inc
daa
mov
daa
cmp
nop
mov
jp
pop
cmpsl
dec
iret
scas
mov
pop
popl
repnz
sbbb
scas
das
push
fs
subb
andb
xor
cltd
mov
adc
in
cli
push
xchg
sub
cmp
mov
cld
push
fisttps
out
or
leave
and
imul
lret
hlt
shlb
repz
aam
popa
sbb
int
mov
fadd
jb
idivb
lret
test
scas
sbb
loop
filds
push
xchg
xor
std
sbb
outsb
idivl
ja
or
inc
cmpsb
ja
sub
out
dec
xchg
push
push
test
push
pop
fs
sbb
dec
iret
cwtl
pop
adc
pop
or
cmp
or
fwait
push
rorb
xor
loop
push
div
loopne
sbb
push
inc
leave
mov
stos
fs
cmp
sbb
mov
jle
inc
out
or
mov
cltd
mov
out
jnp
repz
add
cld
push
fst
test
dec
mov
and
hlt
scas
js
mov
dec
sar
pop
rorb
fadds
repnz
inc
popa
mov
jg
sbbl
and
mov
pop
jp
or
mov
mov
call
cmp
add
lea
loope
lea
add
xchg
jecxz
cmp
adc
int3
push
sbb
or
sub
push
inc
mov
jle
sub
insl
rcrl
fildl
dec
mov
popf
mov
lods
xchg
cmpsb
mov
mov
gs
lret
add
out
mov
call
cmc
cmp
push
leave
mov
xchg
shrl
mov
int
adc
mov
push
sbb
mov
fsubrl
inc
loopne
pop
xchg
add
inc
shll
out
ja
ret
ds
pop
out
push
jecxz
mov
ja
push
pusha
jo
das
xlat
scas
fcomip
outsl
cmc
pop
test
xchg
in
js
movsl
test
scas
mov
jae
inc
mov
pop
cmp
out
mov
mov
outsb
clc
jge
xchg
inc
pop
push
sub
lock
mov
xchg
lret
lea
cmpsl
cmp
sbb
or
or
mov
mov
push
aaa
xchg
mov
in
dec
push
fimull
movsl
cmpsl
ficoms
sbb
mov
fbstp
xchg
or
xchg
insb
xchg
je
and
lock
xor
gs
in
lock
pop
es
imul
sub
sbb
mov
dec
adc
fnstsw
insb
push
inc
orb
sub
leave
dec
mov
xchg
movsb
pop
adc
in
add
adc
add
mov
or
pop
push
xchg
jo
insb
inc
fldcw
mov
or
cmp
aas
mov
xorl
adc
xor
and
adc
sahf
fwait
sub
daa
cmp
jl
sub
or
xchg
aam
out
mov
xor
dec
adc
pop
ljmp
mulb
popf
mov
pop
xchg
sahf
mov
stos
jmp
pop
js
ss
xchg
jmp
jecxz
and
add
lods
mov
cli
push
dec
cwtl
pop
mov
pop
out
cmc
sbb
lea
xchg
aad
xlat
in
jmp
inc
dec
cmpsl
fcoml
das
mov
adc
ss
mov
gs
inc
mov
lods
pop
xor
pop
clc
lcall
dec
in
dec
push
push
enter
cltd
cmp
test
push
pop
xor
je
loop
cmp
leave
or
outsl
fwait
sbbb
jbe
push
iret
sub
pop
push
or
call
xchg
dec
inc
or
stos
sarl
and
sub
ljmp
int3
push
aam
xchg
and
mov
or
repz
add
mov
ret
popa
sbb
and
ret
mov
inc
out
push
test
push
fisubl
outsb
xchg
psubsb
jne
cwtl
xor
push
mov
add
ja
xor
push
popa
mov
lret
mov
push
xor
push
popa
sub
push
push
aam
in
hlt
jge
cli
inc
jle
test
call
xchg
or
lcall
inc
jmp
pushf
orb
mov
xchg
sarb
dec
shll
pop
dec
xor
mov
push
xchg
pop
in
xchg
movsb
lea
sbb
movb
pop
adc
push
jecxz
sahf
adc
cli
in
shll
ret
pop
jle
fcmovnbe
popa
inc
lods
in
ss
pop
popl
cs
jp
mov
aas
mov
sub
sub
icebp
add
xchg
cmp
adcb
pop
dec
xor
lcall
push
adc
das
je
call
test
add
bound
mov
fldl
popf
push
or
adc
add
aas
push
sbb
out
sbb
jbe
inc
pop
aam
xchg
sti
dec
lock
sbbb
fldl2e
imul
and
add
push
dec
push
pop
adc
out
popf
xchg
sarl
add
xlat
mov
push
das
int
out
push
loope
jns
jmp
xchg
xor
std
xchg
gs
sbb
xchg
test
and
inc
pushf
mov
daa
outsl
pop
inc
or
mov
imul
pop
fstpl
imul
sub
sub
xchg
testb
flds
push
and
gs
and
cmp
into
cltd
cmp
jp
out
sti
shrb
scas
jo
ret
insb
loop
outsl
and
imul
sti
cmp
cmpsb
int
push
push
insl
scas
sbb
and
pop
pop
xor
mov
int
dec
dec
push
adc
cmpsb
sub
mov
shrb
xor
xchg
dec
imul
ljmp
and
fcmovne
movsb
inc
subb
clc
sub
sbb
clc
hlt
call
inc
push
nop
xchg
leavew
mov
xchg
mov
push
pop
les
dec
lods
call
mov
inc
in
add
movsb
push
add
pop
mov
xchg
push
in
pop
sahf
sub
aaa
cmp
lcall
popa
call
jmp
pop
dec
shl
imul
sub
jb
lods
movsb
sub
mov
sbb
or
push
mov
and
fnstsw
pushl
fbld
push
mov
push
not
dec
pop
xorl
jae
mov
pushaw
ss
add
add
cmp
pop
inc
es
inc
inc
outsb
fdivr
lock
shrl
loope
mov
sahf
inc
inc
rcrl
sbb
pop
fstpl
mov
lcall
aas
inc
and
or
nopl
je
cmp
mov
call
pop
mov
jl
pmulhw
in
inc
lret
loop
insb
daa
adc
jl
loope
mov
mov
pop
repnz
js
repnz
jne
xchg
andb
sbb
enter
push
bswap
sub
pop
lcall
push
movl
xchg
sbb
fcmovnb
rorl
mov
lock
ret
mov
xchg
xchg
loop
clc
mov
adc
pop
ret
nop
daa
push
or
imul
in
and
xor
xor
sub
inc
outsl
sub
divl
jp
es
imul
xlat
popf
shlb
lods
outsb
dec
lahf
in
js
adc
shrl
add
dec
into
jae
mov
xchg
pusha
mov
ret
shlb
rcll
jb
mov
or
mov
and
cmp
ljmp
outsb
mov
cmc
mov
mov
test
jl
cltd
sub
sar
fadd
xor
mov
xor
pop
fwait
push
mov
ret
sbb
and
sbb
pop
and
xchg
inc
aaa
push
xchg
sub
lods
fdivr
fldt
enter
das
shlb
jbe
mov
or
sub
imul
adc
or
lods
icebp
subl
jg
push
sbb
cmp
inc
je
cwtl
adc
sub
stos
fmuls
lods
jle
sbb
mov
or
das
js
sub
pop
xorl
lock
inc
adc
aaa
test
pushf
pop
cmp
pop
jno
aad
je
xchg
push
mov
mov
arpl
adcb
and
aas
sahf
xchg
ss
xchg
js
cwtl
jo
es
inc
inc
imul
mov
pop
or
and
or
mov
inc
inc
mov
stos
outsl
insb
nop
adc
fisubrs
pop
dec
int3
jecxz
xor
fstpl
repnz
or
pushf
ret
add
push
shl
push
movsl
and
dec
lods
lret
roll
mov
std
fwait
add
and
mov
aam
iret
daa
adc
push
mov
add
dec
imul
mov
in
and
aas
mov
and
pop
test
pushf
lret
jae
xchg
cmp
jmp
lods
std
xor
sub
divb
addr16
repnz
les
push
in
pop
push
bound
es
repnz
and
das
jne
mov
mov
aas
je
push
addl
mov
or
mov
sbb
xchg
mov
adc
mov
bswap
push
ds
rorl
into
les
lcall
mov
insl
add
test
inc
aad
sbb
sub
fdivr
cwtl
data16
test
jl
movsl
jg
jno
and
cltd
push
xor
or
mov
push
pop
dec
adc
xor
xor
movsl
arpl
jns
and
dec
or
fldenv
inc
mov
jnp
sbb
dec
dec
fs
rorb
jb
xor
adc
xchg
pop
call
fisttps
inc
cmpsb
repnz
push
push
loopne
xchg
sbb
push
jmp
add
in
frstor
push
call
out
or
bound
std
or
pop
cmp
orb
fmull
xor
lahf
add
pop
xor
mov
fistpll
scas
pushf
xchg
mov
lods
inc
pop
add
std
rol
dec
outsl
adc
hlt
aas
rolb
lods
push
gs
mov
notb
mov
cmp
pop
xchg
enter
adc
push
in
rcrl
notb
mov
je
and
icebp
stos
shl
addl
sub
cmp
jo
mov
in
outsb
ljmp
lock
jnp
out
add
inc
dec
fldenv
das
mov
mov
mov
movsl
lret
and
jmp
mov
jbe
add
stos
cmp
xchg
cwtl
xor
jno
out
push
arpl
and
add
jne
das
in
jmp
push
mov
sbb
es
pushf
xor
fwait
dec
cmp
sub
mov
jo
jno
pop
jecxz
sub
mov
jno
jge
and
andl
mov
pushf
insb
addr16
push
lods
xchg
je
cwtl
out
push
inc
sub
outsb
push
or
std
or
dec
lret
daa
fs
arpl
and
inc
lock
dec
outsl
sbb
and
arpl
mov
js
mov
shll
xchg
sbb
mov
and
jmp
dec
mov
mov
pop
dec
xchg
or
adc
pop
sbb
push
sbb
or
jne
divb
pop
testl
push
shr
std
pop
sahf
mov
fldln2
mov
mov
lcall
stc
mov
outsb
sub
je
andl
push
lahf
adc
xchg
xchg
adc
jl
sub
and
xchg
ljmp
adc
push
in
cmpsl
mov
mov
push
ljmp
loop
add
push
gs
cmp
outsb
add
push
loopne
mov
sbb
addr16
mov
testb
gs
daa
jnp
sbb
pop
insl
in
xchg
lods
jnp
lcall
mov
mov
pop
xor
adc
sbb
insb
jno
testl
xchg
sbb
mov
mov
sbb
cs
or
xor
ljmp
cmp
and
cmp
jb
insl
shll
and
push
pop
sbb
addr16
popf
mov
inc
and
jne
pop
push
or
jl
cltd
in
sarl
mov
lods
sti
cmpsl
mov
sar
push
mov
and
gs
cmp
ret
or
push
lds
fcmovnu
mov
in
add
aaa
lods
cmpsl
mov
lahf
ror
dec
mov
bound
push
shll
imul
fisttps
hlt
fistps
cmp
mov
push
adc
cltd
xlat
mov
in
inc
cmp
dec
fldenv
lahf
cld
jae
cmpsb
dec
push
gs
imull
dec
jo
jns
das
ljmp
leave
and
and
or
jo
sbb
fcomps
mov
cmp
imul
jne
xorl
adc
bound
push
dec
cwtl
dec
xor
dec
mov
and
xchg
and
and
or
jp
into
cmpsl
sub
mov
pop
in
mov
je
add
popf
sub
fnstcw
mov
lret
jnp
sub
mov
fwait
in
dec
and
adc
loopne
jge
inc
fildll
mov
adc
fwait
aad
in
push
inc
inc
incl
data16
shll
pop
ret
and
mov
dec
sbb
jmp
jge
fsubr
dec
clc
loope
rorl
ds
pop
cmp
pop
sbb
bnd
dec
adc
sub
mov
xor
out
cli
sarb
pop
popa
jge
movsb
xor
jl
mov
loop
imul
enter
pop
jmp
popf
adc
fiaddl
push
ljmp
lods
in
pop
gs
lods
cmp
inc
cmc
mov
jno
lds
repz
xor
cmp
mov
xchg
mov
cwtl
jb
xchg
stos
lcall
jg
mov
out
xor
pop
repz
mov
out
xor
clc
add
mov
dec
fnstcw
cmpsb
sub
in
mov
sub
jp
imul
cltd
js
mov
popf
xorl
xchg
ljmp
dec
mov
fnsave
xor
testb
pushf
jbe
sub
or
scas
adc
sub
pushl
jecxz
lahf
lret
sub
jo
imulb
aam
xor
push
inc
jns
cmp
ficoml
mov
pop
mov
outsl
ds
push
dec
fmull
inc
jp
jae
addr16
pop
mov
sbb
popf
pop
jne
xlat
jne
or
push
xchg
cmpsb
xlat
sbb
dec
sbb
push
xchg
pop
xchg
push
test
xchg
in
js
out
ljmp
sub
insb
mov
stos
test
adc
loopne
mov
mov
jnp,pn
or
mov
stc
adc
sbb
shrl
cli
jne
mov
pushf
je
or
insl
inc
mov
jmp
pop
in
xor
cmp
push
mov
mov
jle
mov
cwtl
mov
push
ror
dec
mov
fwait
cmp
outsl
outsl
scas
jle
and
inc
flds
inc
daa
into
es
lods
xchg
push
dec
push
pop
or
mov
inc
bound
punpckhwd
in
lahf
pushl
insl
stc
lret
mov
push
in
xchg
pop
dec
mov
push
repz
mov
lea
mov
out
mov
and
jl
mov
cmp
sbb
cmp
mov
inc
dec
lods
pop
sbb
stos
cmp
in
pop
pop
xchg
pop
cmp
mov
out
xor
or
or
add
scas
mov
sbb
mov
pop
mov
inc
ljmp
js
outsl
popa
ret
xor
xlat
call
rol
popa
cmp
xchg
push
hlt
or
cmp
pop
mov
cmp
into
aad
jp
xor
fldcw
loopne
adc
arpl
xchg
clc
jns
jno
jbe
xor
cwtl
int3
or
xor
insl
and
stos
ds
jge
cmp
repnz
rorb
cmp
mov
gs
sbb
in
dec
adc
loope
popa
ss
ds
rorb
jno
pop
ljmp
sbb
cmpsb
add
push
out
inc
notb
and
xor
std
outsb
mov
inc
xorl
adc
mov
xchg
and
xchg
das
pushf
lcall
pop
gs
shrb
adc
pusha
fadds
xchg
aaa
test
inc
jne
xor
mov
mov
mov
fidivrl
insl
mov
in
enter
out
sub
jmp
negl
lea
jb
pusha
loop
stc
orb
dec
daa
sbb
jno
adc
dec
bndldx
jmp
mov
cmc
jnp
fwait
cs
ds
inc
jbe
cmp
lahf
push
xchg
nop
mov
addb
cwtl
hlt
push
xchg
rcrb
je
mov
mov
jnp
jp
add
fisubrl
in
inc
jbe
xchg
adc
outsl
data16
cpuid
loopne
or
adc
xor
pusha
daa
xchg
mov
dec
out
sahf
pop
ss
mov
sbb
sbb
enter
pop
add
pop
or
dec
adc
jns
loop
xor
mov
jp
push
adc
ret
sub
mov
outsb
clc
sbb
sbb
cli
into
loop
pop
cmp
lock
loope
and
sub
fisubs
jge
push
xchg
sub
addr16
cwtl
cmp
jg
ja
adc
nop
bnd
loopne
dec
in
in
lods
fnstcw
cmp
push
pusha
mov
sti
lods
testl
push
into
inc
fwait
xchg
and
xorl
adc
and
aas
repz
push
inc
mov
xchg
std
repz
or
push
jmp
add
push
lods
scas
mov
cld
int3
jnp
cltd
mov
jmp
jl
scas
inc
push
enter
pusha
inc
in
jmp
shlb
cltd
or
add
pop
cmp
ds
dec
sbb
adc
or
test
xor
pop
sub
call
dec
xor
cld
ss
adc
xchg
or
adc
mov
jmp
inc
add
adcb
out
adc
pop
jbe
nop
pop
sbb
add
sub
hlt
xlat
loop
pop
mov
mov
lock
loop
repz
ds
xchg
rolb
movsb
mov
push
scas
repnz
test
pusha
bound
iret
mov
mov
in
jl
adc
iret
mov
jo
in
ds
sbb
stc
loopne
inc
outsb
push
dec
cmc
fnstsw
call
incl
stos
rcll
enter
mov
cld
icebp
mov
pop
jno
mov
mov
int
mov
clc
jmp
add
xor
sahf
and
sub
pop
jecxz
sub
cmp
pushf
dec
jle
pop
push
out
lea
out
pop
int3
mov
lock
or
adc
xor
adc
mov
aas
ja
outsb
cmp
movsl
xchg
xchg
jg
sti
inc
sub
xchg
das
push
js
push
push
enter
test
xor
cld
adc
mov
ds
ss
and
jno
loop
mov
sbb
cld
shll
mov
lcall
push
mov
repnz
push
cmp
hlt
je
pusha
xchg
add
mov
les
cs
je
pusha
dec
mov
xor
mov
add
mov
stos
fimull
lahf
shll
insb
jge
int3
inc
test
mov
cs
ret
adc
mov
xchg
out
out
dec
fwait
lods
insb
fiaddl
sbb
data16
xchg
mov
cmp
add
ds
ljmp
pop
scas
cmpl
sbb
mov
add
push
jp
mov
shll
mov
mov
int
jne
outsb
or
cwtl
cltd
or
mov
fsubl
test
inc
lock
enter
sub
push
fisubl
inc
pop
icebp
and
cwtl
adc
adc
push
dec
xor
fdivs
xchg
sub
scas
fwait
mov
int3
dec
call
sbb
test
sahf
xchg
ss
inc
mov
mov
cmp
ds
lock
shr
jb
outsl
sbb
iret
and
dec
fisubrl
mov
lret
cmp
and
add
push
and
xchg
inc
xchg
inc
push
leave
fisttpll
push
mov
sarl
jmp
fsubl
or
test
push
push
jl
fdivrl
addr16
pusha
popl
inc
and
cmp
and
mov
and
and
sbb
xchg
jle
fcoml
addr16
stos
mov
cs
fnstenv
icebp
push
and
xchg
xchg
in
mov
jno
pushf
in
push
add
adc
or
enterw
push
in
jo
out
sbb
sbb
sub
mov
in
sbb
push
test
cmp
pop
jecxz
cmpsb
sbb
aad
and
dec
dec
and
mov
loop
inc
enter
lods
push
dec
mov
mov
movsb
sub
adc
sub
cli
sbb
inc
std
push
out
mov
push
sub
adc
jns
inc
lret
mov
sub
sub
cltd
push
dec
insl
sbbb
sbb
mov
ja
imul
iret
add
gs
push
jnp
or
push
ljmp
lock
iret
jae
add
dec
lea
inc
jo
outsb
icebp
pop
sbb
lret
int3
mov
cld
xchg
in
or
orb
push
imul
adc
and
and
fildll
inc
out
xor
jecxz
add
jns
and
dec
mov
sbb
jnp
push
push
fldl
imul
lret
dec
pop
fcomps
mov
jecxz
js
cmp
add
mov
jae
loop
in
fadd
or
sub
clc
gs
fdivl
push
fldenv
fidivrs
or
aam
inc
lds
rolb
sbb
and
jp
loopne
fs
and
inc
add
bound
out
mov
hlt
mov
sub
and
into
push
adc
or
into
sti
dec
in
sub
adc
loope
push
push
jge
adc
cs
mov
enter
lods
pop
jg
jmp
mov
mov
idiv
in
daa
sub
mov
cwtl
movsb
xchg
movsb
divl
in
pop
call
stc
jmp
mov
gs
or
push
jmp
mov
insl
push
pop
out
inc
sarb
jmp
int
push
mov
xlat
ret
sbb
adc
jmp
and
test
lahf
xchg
lea
int3
jae
cmp
mov
hlt
daa
lret
dec
push
mov
and
jmp
mov
pop
out
adc
jmp
dec
jae
push
push
jno
xor
es
push
sub
dec
stos
ljmp
or
gs
xchg
pmaddwd
lret
out
mov
pop
push
iret
xor
jae
bound
fs
jne
cli
xor
push
dec
lds
ljmp
mov
or
inc
iret
loope
iret
jne
scas
bnd
fiadds
popf
mov
adc
xorb
sub
push
mov
mov
jge
mov
push
dec
inc
std
pop
icebp
or
bound
stos
cli
test
out
sbb
pop
and
mov
shll
ljmp
fbstp
push
jo
adc
leave
cld
mov
pop
sbb
pop
lahf
sbb
rcrl
push
icebp
loopne
push
and
lret
fdivl
mov
mov
mov
xor
test
aas
cmp
scas
adc
xchg
xchg
das
cmp
cli
cli
xchg
rolb
loopne
push
out
out
mov
mov
adc
mov
lcall
jle
or
jecxz
adc
push
pop
xor
enter
ret
in
call
mov
push
lock
or
push
mov
xchg
fnsave
push
lret
outsl
int
cmpsl
stc
mov
mov
add
std
mov
sarl
mov
mov
xchg
cmpb
mov
fcmove
outsb
cld
inc
das
mov
adc
push
mov
add
insb
mov
cmc
push
bound
lods
pop
es
adc
jns
mov
push
push
aam
and
insb
and
idiv
push
scas
lods
neg
cmp
ja
mov
ficomps
mov
cmp
add
pop
stos
hlt
pusha
insl
mov
repnz
push
cli
aam
fmull
cs
sub
inc
sbb
xor
sbb
in
mov
dec
push
std
ds
jecxz
xchg
aad
sub
cltd
add
mov
fsubrl
push
insl
mov
outsl
add
arpl
int
call
sarl
data16
mov
xchg
lahf
movsb
pop
inc
push
adc
sub
push
or
dec
jg
dec
clc
push
cmpsl
adc
mov
sbbb
stc
js
mov
cwtl
push
cmp
fcmovne
pop
cmpsl
in
sbb
cli
test
add
mov
js
outsb
mov
cwtl
lahf
lods
or
pushl
sbb
dec
ss
mov
ss
pop
jo
or
jae
jns
adc
fs
xor
xorl
out
roll
aad
jnp
add
clc
dec
pop
jne
data16
in
xor
jecxz
stos
in
mov
push
and
negb
int
sub
rorb
dec
das
pop
rcr
mov
or
in
sti
adc
outsl
dec
add
mov
ss
in
inc
clc
ja
ficompl
scas
mov
jmp
cwtl
mov
pop
test
xchg
and
xor
out
sbb
cmp
mov
lea
lahf
mov
push
subb
sbb
mov
in
and
cmpsb
xchg
jo
int
add
adc
push
cmpl
mov
mov
popa
cmp
push
cs
xchg
call
icebp
push
lret
cmc
mov
scas
xor
fwait
icebp
jle
jbe
jecxz
into
inc
push
dec
mov
in
and
mov
mov
out
sbb
scas
test
out
test
xchg
inc
pop
repz
dec
cmpsb
inc
sub
scas
or
int
stos
jne
repz
out
clc
cmp
ds
mov
stc
xchg
push
sub
mov
test
push
sti
gs
imul
imul
js
lahf
mov
pop
inc
push
dec
and
pop
int3
in
shlb
xchg
test
add
mov
adc
insl
stc
adc
push
cmc
and
aas
jmp
or
add
fstl
jns
mov
lea
cmp
daa
jmp
data16
xchg
jl
insb
sub
lahf
arpl
loope
aam
xor
cmpb
pop
call
fisttpll
mov
cmp
pop
icebp
lret
imul
insl
pop
inc
negb
fisttpl
cmpsl
add
test
decb
lock
add
cmpsb
pop
inc
ret
jns
in
xchg
int
sub
mov
imul
mov
adc
test
int3
mov
mov
pop
cs
push
iret
imul
dec
sub
cmc
mov
xchg
jnp
push
in
pop
adc
push
imul
pop
dec
sbb
or
mov
mov
icebp
pop
out
movsb
push
sbb
mov
mov
std
jno
cmc
pop
int
stos
adc
inc
xorl
cmp
lahf
or
ds
add
lods
and
int3
lret
das
adc
add
add
xor
xchg
mov
stc
push
dec
dec
nop
dec
cli
ja
out
jae
xchg
es
loop
sbb
pusha
dec
ffree
insb
in
fldt
ret
mov
inc
pop
dec
add
out
or
xor
lret
mov
test
imul
xlat
push
inc
pusha
mov
add
cmp
aaa
movsl
adc
inc
push
bound
sbb
xchg
pop
fwait
push
aaa
in
loopne
gs
mov
jb
mov
ret
mov
repz
cmp
xchg
add
mov
xor
rcll
or
shll
in
xor
fsubrs
xchg
divb
scas
imul
push
aam
mov
inc
test
fisttpl
jg
push
mov
and
inc
xchg
les
jae
scas
cs
push
add
stos
inc
in
sbb
xchg
jbe
test
test
jl
dec
loope
loope
lret
cmpsb
adc
test
lea
in
test
pushf
aaa
lods
xor
pop
ret
scas
cmpsb
mov
mov
subl
jno
mov
cmp
pop
fiaddl
jmp
and
cs
icebp
dec
push
outsb
stc
test
mov
faddl
cs
repz
leave
and
aaa
insl
and
sub
cmp
in
jle
adc
jns
add
les
stc
mov
add
or
adc
neg
js
and
cltd
cmp
inc
jg
add
cmp
lea
jne
or
cwtl
out
imul
and
mov
mov
inc
push
enter
fstps
jge
xor
in
mov
inc
lahf
mov
xor
cmp
roll
and
push
or
add
pop
or
jnp
cs
cwtl
fstpt
lahf
pop
xor
arpl
adc
adc
add
sub
inc
cli
outsl
aam
or
pop
repz
push
into
rcrl
movl
cli
aas
je
shlb
push
and
fwait
adc
sub
shlb
adcl
addr16
xchg
inc
jecxz
jecxz
pushf
and
sbb
js
pop
mov
jmp
leave
fcomi
dec
or
arpl
jb
jp
xor
mov
mov
in
sub
mov
es
int3
mov
popf
mov
sbb
fcomi
insl
js
push
lret
int3
cmp
xorb
mov
mov
cmpsl
int
jno
roll
mov
cmp
mov
dec
out
lret
loopne
fildl
hlt
jb
add
sti
repnz
xchg
adc
or
adc
cli
mov
data16
lods
clc
ss
or
jb
dec
add
xor
es
mov
mov
dec
pop
mov
xor
ja
dec
pusha
mov
sub
adc
dec
or
adcl
int
imul
test
leave
out
mov
inc
decb
lea
imul
bound
pop
adc
sti
jae
push
shll
scas
and
xchg
xchg
add
jns
add
adc
jb
ss
cli
push
test
sub
mov
stos
add
mov
stos
push
popf
ljmp
adc
pop
arpl
cmp
xor
jle
adc
mov
lds
aam
push
cltd
mov
sar
push
mov
repz
pop
lcall
fcmovbe
push
lock
aas
lods
arpl
data16
lret
lods
push
rorl
orl
test
pop
jb
mov
jle
int
push
into
outsb
push
lods
repz
test
mov
mov
imul
adc
in
jnp
and
push
mov
js
testb
sub
xlat
push
sbb
mov
mov
lea
mov
sub
lock
jmp
cmovge
inc
ds
push
sbb
xor
stc
scas
ficomps
and
dec
aam
outsb
imul
jmp
les
push
xor
mov
xchg
jno
add
shlb
dec
sbbl
or
je
xchg
add
sub
daa
or
pop
mov
out
xchg
loopne
mov
test
pop
ljmp
dec
loopne
das
xchg
rol
lods
movsl
mov
mov
xchg
insl
add
ss
pushf
inc
pinsrw
int3
mov
push
sbb
cmp
je
fisubl
insb
test
in
enter
push
dec
push
ljmp
lahf
pop
shll
dec
mov
mov
cmp
ds
jbe
hlt
jl
xor
sub
lret
add
call
inc
repnz
aaa
or
jbe
pop
xchg
cmpsb
sarb
test
push
xchg
cs
popa
push
inc
pop
cmpsl
xor
and
xlat
arpl
inc
push
push
add
lock
leave
mov
cwtl
or
in
push
pop
xchg
pop
sbb
mov
mov
cli
daa
std
test
movsl
pop
shl
arpl
jecxz
cmp
addr16
popf
pushf
mov
out
push
cs
adc
iret
inc
jp
pop
add
xor
and
rolb
out
das
stos
push
stc
sbb
jne
clc
outsl
jecxz
shl
cmp
xchg
rorb
mov
pop
xchg
out
loop
jge
into
scas
lods
es
shll
mov
je
adc
mov
mov
aad
jno
insl
push
jbe
adc
and
movsb
push
negl
stos
in
and
mov
add
mov
scas
xchg
cmc
push
mov
fdiv
jno
bound
sahf
and
out
mov
and
int
mov
jmp
cmp
and
mov
jbe
mov
cmp
sbb
cmpsl
jnp
inc
jl
push
sbb
lcall
xor
in
insb
mov
sub
cmp
xchg
jae
push
outsl
adc
xchg
inc
add
mov
mov
stos
jle
sub
pop
dec
popf
icebp
in
jmp
adc
mov
xor
aam
adc
add
or
pusha
pop
or
cmp
jo
imul
pop
vorpd
adc
negl
scas
sub
xchg
rorl
test
call
sahf
fstp
stc
sbb
jmp
ja
cmp
xorl
adc
lods
ret
or
fisttpl
inc
inc
pusha
jecxz
or
js
adc
fucomi
push
or
inc
jbe
or
mov
cltd
ficoml
les
out
xchg
mov
sbb
ret
imulb
sub
inc
out
sbb
cli
xor
fistpll
dec
pop
insb
pop
dec
ds
push
shlb
pop
cld
outsb
div
lret
mov
movsb
ds
dec
cs
outsb
jnp
adc
jmp
xor
test
jecxz
enter
ljmp
inc
lea
mov
jns
dec
push
mov
test
sub
loop
or
lahf
sbb
out
xchg
mov
xchg
jo
and
cmpsb
test
mov
cmp
popa
dec
push
enter
rorl
and
adc
arpl
jmp
inc
mov
es
icebp
add
cli
shrb
out
fbstp
std
mov
xorl
fwait
push
sbb
aaa
push
xor
mov
lea
enter
lahf
lret
xchg
scas
loop
push
stos
arpl
push
mov
scas
push
aam
mov
xchg
add
dec
cmpsb
out
addr16
insb
xlat
and
movsb
sti
pop
dec
mov
aad
xchg
icebp
xchg
push
jo
and
dec
jge
and
inc
faddl
jnp
mov
sub
fldl
mov
aas
cmp
and
lahf
inc
imul
push
mov
dec
dec
out
enter
push
xchg
lods
enter
sub
aaa
inc
cld
test
decb
add
push
in
mov
or
lahf
xchg
mov
imul
xchg
sub
jb
fwait
mov
mov
dec
mov
push
adc
or
lds
mov
jmp
decl
lea
xchg
in
xchg
pop
lods
mov
movsb
cld
push
fsub
cmp
fistl
pusha
pop
fdiv
inc
lods
adc
mov
mov
loop
jmp
sub
es
push
pop
stc
ss
out
mov
cli
popa
sub
and
lods
shll
div
sub
sub
sub
mov
xor
xorb
popa
insl
punpcklbw
stc
ds
mov
sarb
jno
and
sbb
sub
dec
xlat
xchg
bound
movb
pop
push
pop
out
xchg
adc
repnz
push
push
in
addb
les
sub
test
lret
fldenv
push
in
lret
lahf
cmp
insl
popf
mov
xor
sub
movsl
or
enter
jno
movsl
xorl
ja
icebp
scas
pop
dec
roll
push
aad
xchg
ret
mov
sahf
mov
imul
lahf
xchg
fucomip
cmp
jo
repz
add
sbb
stos
mov
jne
push
fs
shlb
test
pushf
add
scas
or
push
push
jecxz
pop
shll
jecxz
cmp
mov
jp
cmp
push
lret
mov
xlat
scas
jnp
adc
mov
mov
mov
mov
out
pop
jp
sub
lahf
jbe
loopne
sub
fldt
or
or
adc
repz
es
mov
divl
sti
mov
dec
pop
clc
xor
dec
xchg
cmp
call
push
pop
add
pop
xchg
xchg
inc
iret
jno
mov
arpl
mov
push
sbb
jge
push
hlt
out
and
mov
aas
xor
adc
sub
pop
jmp
imul
mov
cli
icebp
dec
jge
loope
jns
push
clc
bound
jp
das
lret
inc
addl
mov
dec
and
inc
push
add
nop
lods
pop
aam
pushf
in
adc
pop
out
xor
out
sub
adc
insb
jno
lea
cld
mov
outsb
and
jge
and
sub
movsl
jne
lret
insl
or
aas
push
mov
pop
add
xor
pop
fnstenv
out
lret
insl
cmp
sub
mov
or
jg
dec
jnp
jb
sbb
cmp
lods
fildll
adc
jb
sub
lahf
mov
aad
repz
sbb
out
mov
andl
adc
inc
popf
aas
jo
push
loop
mov
stos
mov
sbb
push
or
movsl
cmp
loope
or
int
adc
xchg
aas
imul
jnp
sbb
outsb
pop
ds
jns
jl
jne
nop
xor
push
sub
add
mov
cmc
dec
fistpll
xor
out
or
xchg
into
lcall
mov
xchg
sbb
adc
lock
fsubrl
or
lahf
orl
icebp
in
xchg
shld
jnp
jg
inc
or
mov
enter
rorb
gs
push
mov
and
dec
dec
cmp
adc
nop
push
test
mov
push
mov
jns
imul
and
imul
jecxz
mov
insl
sbb
fsubp
mov
xchg
loop
mov
call
push
in
push
out
lods
sbb
fstpl
rol
sub
iret
xchg
xlat
mov
mov
ss
fs
dec
int3
jl
insb
shll
sbb
stos
gs
mov
sub
in
xor
sbb
jge
pop
jle
jmp
lret
fwait
jnp
dec
push
push
sub
xchg
and
rcrl
xchg
inc
mov
mov
sub
std
in
xchg
cmc
fcompl
jge
outsl
lahf
aam
gs
adc
rorl
mov
sub
mov
fwait
leave
inc
jnp
push
out
mov
fimuls
notl
int
mov
xchg
jo
nop
lea
push
jno
xor
pop
pop
mov
cwtl
sbb
imul
and
push
mov
pop
sbb
arpl
fsin
sbb
cmpxchg
inc
pop
push
je
out
jne
cmpsb
out
pusha
cld
mov
fmul
mov
or
pop
and
pop
arpl
addr16
jg
not
ds
mov
xor
add
iret
stos
mov
cmpsb
enter
mov
test
push
imul
call
adc
rcr
outsl
aam
mov
lock
push
sahf
test
sub
std
fsub
lods
push
pushf
or
sbb
aas
out
inc
mov
daa
scas
js
dec
loop
sbb
jmp
shll
xchg
mov
insl
test
movsl
jg
cmp
stc
in
sahf
add
or
ret
imul
jb
ja
sbb
call
jp
sbb
lods
xor
dec
dec
ds
shrl
jnp
pslld
clc
pusha
sbbb
push
jmp
mov
xor
loopne
jg
inc
rcll
push
xchg
xchg
nop
das
cmp
pop
sub
mov
call
lret
jp
push
fldl
push
mov
pop
lods
mov
sub
sub
mov
and
je
scas
fwait
lock
fnstcw
pop
test
mov
xchg
cld
jbe
sbb
cwtl
stc
gs
into
cld
or
pop
rcr
or
aad
sbb
mov
push
loop
aad
jg
mov
int3
sarb
mov
pop
dec
sub
js
mov
sbb
stc
jmp
sbb
cli
add
cwtl
jg
add
call
aas
jno
xchg
pop
das
xchg
cmp
dec
lock
pop
cmp
jl
repz
out
sub
inc
outsl
and
cli
stos
jnp
jecxz
inc
fldt
inc
lods
sbb
addr16
mov
lahf
repnz
or
cmp
add
iret
mov
dec
push
dec
cmp
inc
stos
xor
push
add
inc
jmp
and
hlt
adc
lcall
test
filds
outsl
cld
or
adc
popf
movsb
or
arpl
mov
imulb
or
test
or
push
push
lahf
aam
jge
dec
jg
pop
test
sub
je
or
jge
sub
dec
or
pusha
jne
test
pop
adc
cmp
movb
sub
hlt
ret
fidivrs
mov
mov
jae
frstor
inc
das
xor
daa
cmpsl
sub
mov
cmc
scas
addr16
or
xchg
add
shll
push
inc
push
aas
inc
push
into
das
movsb
fcoml
test
fsub
insl
jns
pushf
cld
xor
pop
push
jns
xchg
sbb
daa
scas
or
adc
in
fbld
or
sub
repz
mov
dec
mov
sub
xor
pop
pop
jl
mov
inc
and
sub
fnsetpm(287
inc
cmp
push
adc
addb
pushf
mov
in
mov
lret
inc
dec
sub
dec
and
xorl
push
jb
push
nop
mov
mov
add
mov
mov
mov
and
add
sbb
fcmovb
pop
pop
push
sbb
shrl
movsl
or
mov
xchg
into
inc
test
lea
cltd
ds
sub
into
ss
cwtl
roll
adc
xor
sbbl
outsl
or
xchg
push
stos
xchg
lahf
test
sub
fisubl
mov
dec
into
mov
lock
loopne
cmp
lds
popl
iret
icebp
mov
repnz
mov
loopne
mov
push
cli
cmpsl
cs
lret
cwtl
push
jp
adc
gs
push
jb
fs
inc
in
lock
sahf
stos
push
mov
mov
andb
inc
push
mov
cmp
mov
add
xor
jle
pop
jb
inc
mov
xor
jb
popa
imul
fbstp
stc
les
mov
cmpb
loopne
dec
arpl
and
shrl
mov
inc
and
gs
pusha
call
inc
sub
xchg
cltd
arpl
fbld
add
xor
pushf
mov
movsb
in
xchg
stos
xchg
mov
or
lret
punpckldq
mov
jno
and
inc
xor
dec
loop
inc
add
cltd
cltd
ret
stos
sahf
pushf
dec
jae
sub
jo
jae
into
aas
imul
xor
adc
dec
jbe
mov
push
dec
xchg
mov
addb
les
cmp
xor
pushf
std
les
je
dec
loope
ljmp
rcl
shll
in
std
mov
add
fldcw
cmpsb
jge
or
cmc
mov
fisttpll
lea
cmp
or
pusha
pop
js
push
bound
setp
lret
repnz
mov
mov
sub
stos
fdivs
sub
pop
pop
in
jmp
xlat
cmp
sbb
cmpsl
call
push
daa
adc
jl
in
push
jg
insl
xor
mov
mov
std
add
jmp
inc
cltd
in
inc
aad
scas
and
imul
and
in
cmp
in
sub
cli
dec
sti
fisubs
sub
pop
pop
outsl
arpl
mov
mov
movsb
pop
call
cmp
notb
mov
xor
adc
pusha
mov
cmp
inc
or
or
push
add
andl
std
jp
xchg
jecxz
mov
jae
shll
and
into
popf
pop
xlat
xor
enter
cmp
xor
sub
lods
das
mov
push
inc
aas
xchg
inc
adc
shlb
in
ds
add
out
and
mov
or
sbb
ret
dec
jbe
int
ljmp
out
sub
mov
ffree
mov
mov
or
fs
mov
pop
mov
clc
arpl
push
xor
pop
cmpsb
leave
int
add
mov
jno
dec
movsl
fisttpll
mov
sarl
jns
inc
imul
mov
insl
or
xchg
sahf
aad
xor
scas
inc
mov
push
pop
mov
or
dec
or
xrelease
mov
push
sahf
lret
inc
rcl
xor
jg
cmp
imul
xor
xchg
rcll
clc
inc
ja
jo
loopne
pop
rorl
mov
cmp
popa
notb
imul
es
mov
insl
add
stc
scas
xchg
adc
mov
add
int
jl
jno
rcrb
clc
fisubl
popa
mov
cmp
xchg
mov
cmp
scas
fcomps
ret
mov
inc
movq
push
inc
cmp
in
cltd
sahf
dec
bound
xchg
mov
mov
out
jo
inc
hlt
pop
xchg
sub
daa
outsb
pusha
add
push
fcomi
sbb
mov
pop
push
sbb
int3
sarb
stos
int
lret
lret
call
loop
lock
jecxz
ret
in
and
adc
dec
dec
dec
out
cli
ja
push
pop
jmp
add
xchg
xor
int3
or
adc
jno
nop
dec
lcall
fs
addb
jb
cltd
sub
jmp
lods
scas
outsl
and
mov
cmpsl
cmp
push
pop
or
jns
out
addr16
jmp
das
pop
outsb
xorb
iret
daa
in
fcoms
pop
add
sarl
adc
lahf
lret
cmp
call
jns
cmpsb
or
int3
aas
lret
fneni(8087
jl
dec
cltd
add
xor
mov
mov
dec
xlat
add
sahf
comiss
push
adc
or
icebp
dec
pop
inc
cld
xlat
pushf
mov
cld
bound
xchg
inc
dec
loopne
mov
or
adc
jbe
test
jecxz
pusha
clc
clc
cmp
jae
and
and
push
outsb
xchg
or
test
mov
loop
jle
scas
aas
add
sbb
shlb
mov
inc
lret
inc
xor
popa
movsl
lret
adc
mov
xchg
dec
stc
adc
hlt
lahf
xor
ljmp
push
out
xor
mov
xchg
js
shrb
and
ss
push
adc
cmp
or
jo
into
repnz
jae
or
push
mov
aaa
and
sbb
fdivrl
add
lcall
iret
popf
push
scas
cs
and
jne
sbb
cltd
stos
add
jbe
scas
mov
hlt
xchg
push
arpl
mov
shl
and
jg
es
in
rolb
mov
insl
cmp
adc
cmp
in
in
sbb
ret
fwait
mov
popa
popf
test
in
rcll
cwtl
lods
jo
sbb
out
jp
xchg
xor
pop
loopne
add
or
lods
adc
data16
inc
sbb
fiadds
and
loope
cld
neg
jg
jnp
movb
jns
pop
or
in
jmp
adc
jle
xchg
repnz
insl
push
cmp
push
mov
jl
mov
mov
or
imul
repz
push
icebp
inc
out
sahf
movsb
jnp
push
in
out
fstp
add
pop
xchg
mov
xchg
adc
pop
mov
push
orl
mov
lahf
xor
mov
fdivl
mov
mov
sub
lret
mov
cmp
inc
jne
outsb
inc
push
aad
add
mov
jae
inc
mov
fisubrs
movsb
bound
mov
rolb
add
sub
outsb
repnz
or
inc
loopne
xchg
or
iret
shl
jecxz
inc
cltd
not
and
es
lea
pushf
add
cltd
sbb
mov
sbb
and
jp
add
pop
jmp
imul
jl
in
fnsave
lds
sahf
xor
add
rsm
cmp
test
movsb
and
mov
rcll
jl
test
popf
shl
js
jg
adc
jge
or
pop
cmp
add
dec
and
loope
mov
xor
mov
mov
xor
insl
push
stos
js
orl
xorb
xchg
ljmp
leave
shrl
mov
mov
dec
les
pusha
xchg
sbb
imul
or
loop
mov
xlat
jb
and
jle
sti
insl
cmp
inc
rorb
sbbl
pop
rol
push
jecxz
pop
addr16
inc
js
jecxz
xchg
jge
daa
ret
inc
dec
jmp
lcall
lret
add
popa
mov
jle
es
insb
mov
aad
daa
repnz
jle
dec
pop
imul
ss
pop
mov
andb
aaa
mov
cmp
mov
dec
insl
lahf
inc
cmc
push
loop
pushf
cltd
mov
add
xchg
add
mov
scas
imul
mov
mov
sub
or
mov
pop
js
int3
push
xchg
xchg
adc
imul
pop
mov
sahf
rcrl
push
es
cwtl
cmp
xchg
inc
sub
fdivrs
test
sbb
xchg
pop
cmpsb
test
xor
je
mov
mov
loop
jg
mov
add
repz
shll
addr16
mov
lock
pop
js
pop
push
jnp
subl
push
addl
adc
cmpsl
xor
or
xchg
xchg
push
cld
int
in
add
sub
outsl
in
rclb
iret
mov
cmpsb
std
mov
in
push
out
sub
push
pop
sbbl
in
inc
stos
mov
orl
or
sub
aad
xor
lcall
inc
cmp
shrl
sub
and
scas
add
ficoml
add
push
mov
jns
mov
mov
pop
fdiv
je
leave
sarl
and
dec
clc
dec
sbb
pop
in
push
jmp
adc
sbb
nop
loope
push
sbb
repnz
or
sbb
xchg
cmp
or
sbb
stos
or
pop
dec
dec
inc
enter
aam
clc
xchg
pop
arpl
mov
dec
inc
sbb
pop
std
fcmovb
xor
aad
pushf
adc
fs
pop
ficoms
into
sahf
das
sub
sbb
stc
cltd
jbe
popa
fdivs
mov
fcmovnb
shll
gs
mov
fmuls
and
mov
inc
shll
lret
movsb
mov
mov
jnp
test
outsl
lods
push
push
pop
cmp
nop
or
inc
es
mov
mov
fpatan
or
in
out
fdivl
lahf
inc
int3
cmp
mov
dec
out
add
push
fwait
add
jp
cmpsl
les
jmp
sbb
push
sub
decl
push
pop
aam
inc
xchg
imul
stc
sbb
movsl
mov
inc
aaa
pop
xor
cld
lcall
sub
stc
and
adc
pushf
mov
or
fstpt
repz
pop
dec
xchg
cmpl
push
lret
idivb
mov
ss
inc
or
cmpsl
out
in
sbb
lret
or
out
mov
xor
cmp
mov
movsl
inc
mov
dec
dec
sub
sbb
es
inc
loope
cli
pop
iret
test
jle
add
mov
xor
or
xchg
test
cmp
fwait
cmp
xchg
add
pop
movsl
adc
push
test
pop
int
test
dec
repnz
cwtl
jp
addl
jl
lret
mov
sbb
dec
lods
idivl
pop
pusha
push
adc
xor
pxor
and
add
neg
fiaddl
and
shrl
push
fisubs
adc
fcomps
add
jmp
les
call
fadds
imull
sti
inc
mov
das
test
stos
jg
push
cmc
scas
mov
jb
sub
out
js
mov
xchg
imul
sub
sub
inc
mov
pop
fwait
add
mov
nop
push
into
mov
mov
xor
and
xchg
cmp
inc
fisttpl
push
outsl
mov
pop
cmpsb
or
and
mov
idiv
dec
test
in
add
jno
sahf
and
pushf
test
orl
lods
mov
jb
push
lea
dec
ficoms
sbbb
push
mov
lods
cmpsl
lea
mov
cmp
pop
or
cmpsl
pop
jmp
cmp
out
outsb
ljmp
push
jmp
jl
or
cmp
hlt
mov
imul
notb
movb
mov
and
mov
lret
inc
mov
adc
insl
popa
dec
inc
das
in
daa
stc
mov
fmull
dec
or
fiadds
jmp
push
in
push
sbb
sti
or
fnstsw
jle
popa
jae
cs
outsl
fucomp
jmp
add
adc
mov
faddl
inc
push
mov
pop
call
and
hlt
movsl
sub
jp
or
and
jo
ret
mov
icebp
jecxz
inc
mov
adc
xlat
pop
shlb
pop
xor
inc
fwait
int
jno
pop
adc
clc
shll
outsl
repnz
lea
test
xchg
pop
push
mov
das
lods
addr16
and
imul
stc
sbb
hlt
xchg
mov
adc
push
push
subb
sub
inc
xchg
rorl
sbb
add
mov
fcomps
les
cmpsb
or
add
add
dec
lret
push
and
sub
jmp
jae
and
cwtl
aaa
rdpmc
sub
push
mov
add
inc
in
inc
cmpsl
add
pop
es
push
test
pushf
xor
hlt
lret
mov
mov
or
cmp
pusha
adc
and
rcll
inc
addr16
out
lds
daa
sub
mov
mov
adc
and
jb
push
sub
in
lods
ja
mov
sarl
lea
pusha
pop
pop
jbe
mov
xor
cmp
in
dec
and
jg
ud0
xor
xchg
lea
jo
jge
jecxz
lahf
stos
push
outsb
push
movl
out
pop
lret
sbb
rcll
popa
and
es
mov
adc
sub
xor
lcall
das
cmp
xor
mov
or
mov
popf
mull
shlb
xlat
shlb
lods
xor
and
mov
pop
jmp
sbb
mov
or
iret
fcmovnb
mov
sbb
or
sbb
mov
ja
je
mov
popf
or
mov
mov
add
cmp
roll
fs
jle
lds
mov
jg
xchg
push
cld
mov
push
cmpsb
dec
enter
cs
pop
sbb
or
sub
cmp
mov
jns
xorl
adc
out
lcall
mov
mov
pushf
test
xor
pop
mov
push
shlb
pop
ret
push
popf
push
mov
sub
iret
sti
inc
pop
int
ret
pop
push
push
les
sbb
fstps
xor
sub
dec
test
pop
sub
cmp
add
je
jmp
xor
pop
ret
xchg
cs
xchg
or
or
or
inc
xor
inc
mov
clc
push
xchg
ds
push
add
pop
je
lret
dec
sahf
dec
mov
repz
push
pop
fldenv
and
ret
mov
faddp
in
xor
repnz
push
push
adc
cs
xor
and
ficompl
adc
movsl
sbb
push
sti
call
adc
mov
out
dec
fnstsw
xchg
jns
adc
imul
pusha
inc
fldt
mov
push
iret
mov
ficoms
jg
pop
lcall
cs
mov
xchg
pop
iret
xchg
aas
ds
xchg
jge
mov
mov
xchg
sarl
or
das
and
cs
pop
mov
jmp
mov
fidivs
push
std
sbb
mov
sub
clc
popf
mov
int
cmc
pop
in
mov
in
mov
sub
sub
fs
mov
fs
cmp
ja
pop
xor
pop
xchg
rcll
mov
pusha
pop
lock
popf
out
scas
mov
cli
js
xor
jne
mov
xor
cltd
and
mov
xchg
dec
sub
int
mov
stos
clc
xor
fstpt
push
sbb
out
out
test
icebp
lds
xchg
daa
mov
and
xor
test
pop
mov
testb
cmp
xor
and
fdivs
inc
inc
push
and
aaa
mov
lcall
push
es
inc
in
outsl
dec
add
sbb
dec
fstpt
je
fs
lods
aaa
rcrl
bound
xchg
mov
cs
and
popa
adc
push
movsl
mov
mov
icebp
mov
mov
divl
loopne
adc
mov
dec
scas
adc
fs
call
pop
nop
mov
cli
adc
add
cmp
mov
push
into
icebp
and
mov
and
icebp
arpl
cld
adc
shlb
or
call
mov
shrl
lret
daa
sub
adc
rorb
pop
ss
push
mov
sub
adc
dec
pop
adc
lods
add
inc
mov
cmp
lds
iret
fs
mov
sub
jns
sar
aas
movsb
xor
and
dec
xor
add
mov
enter
mov
add
lds
cmpsl
repnz
ret
ds
mov
imul
sbb
sub
jl
mov
stos
iret
mov
fsubrs
jg
dec
lock
push
stc
sub
shl
adc
stos
mov
mov
push
jbe
jno
fadds
add
mov
sbb
pop
mov
int
enter
or
xor
dec
ficomps
pop
cmp
xor
push
xchg
add
add
pop
sbb
pop
xor
mov
xor
xchg
insl
jmp
dec
jmp
mov
pop
or
and
call
dec
je
fucomp
pop
dec
dec
jbe
fsubs
pop
int
jae
dec
std
inc
sbb
pop
add
pop
mov
lock
clc
cld
dec
mov
jo
stos
cmovs
sahf
repz
imul
sahf
imul
out
inc
push
lods
fsts
pushf
xchg
test
adc
cmpl
sbb
mov
mov
sbb
fs
push
sahf
in
sbb
cmp
cmc
mov
mov
push
add
std
add
nop
pop
std
aam
mov
bound
adc
outsl
and
hlt
cmp
and
mov
lods
test
leave
add
adc
xchg
frstor
and
sbb
inc
pop
dec
push
jno
loope
dec
fidivs
and
pop
leave
push
ss
icebp
adc
jnp
jecxz
cld
int
cmpsb
push
add
cwtl
push
fmuls
and
cmp
sub
lods
sbb
mov
pushf
dec
cmp
lahf
or
sbb
jno
aas
inc
lods
hlt
or
xor
data16
insl
mov
mov
ljmp
je
sarl
sub
leave
lods
stos
adc
fdivs
arpl
enter
mov
gs
and
mov
fcoms
adc
sbb
xor
ud1
pop
loop
dec
inc
jb
out
cmp
icebp
sub
ss
out
mov
movsb
jne
in
and
js
es
sarl
or
cmp
adc
sub
dec
dec
pop
xchg
mov
mov
popa
inc
fdivl
inc
dec
insl
push
rcl
mov
fs
test
fwait
mov
sbb
inc
pop
mov
test
sub
and
dec
lds
aaa
pop
xor
mov
xor
hlt
pusha
scas
mov
cmp
push
loop
jge
repnz
repnz
sbb
mov
enter
mov
or
iret
rorl
cmc
sub
push
in
mov
iret
jl
out
mov
outsl
mov
mov
push
stc
psubw
dec
xor
push
sub
mov
mov
sub
rcrl
addr16
cltd
sub
pop
clc
shl
jo
xor
mov
or
jge
call
fs
add
jb
ret
mov
inc
mov
sub
sub
cwtl
or
outsl
dec
sbb
hlt
cmp
call
adc
jb
push
dec
outsl
mov
adc
aam
sbb
ficoml
stos
sbb
notl
mov
imul
jle
dec
push
add
or
push
aad
jmp
pop
sub
ret
xor
cmpb
pop
orl
out
jge
rcrl
add
inc
test
cmpb
sub
fbstp
es
aas
sti
pop
fidivrs
test
mov
pop
dec
and
add
fisubrs
jmp
adc
xor
shll
sbb
xor
cmpsl
mov
and
mov
xor
inc
lahf
push
dec
add
les
loop
push
xor
pushf
ds
cmp
test
sti
fldl
push
in
loope
xor
jg
mov
adc
cmp
sbb
pusha
ret
pop
insb
and
sub
pop
outsl
inc
pop
and
push
cmpsl
and
jnp
jmp
jge
icebp
cmp
lahf
pushf
adc
mov
mov
xchg
pop
sub
push
loopne
jne
mov
dec
mov
cmc
fstpt
cli
push
test
lea
jbe
sbb
cli
jns
xor
cmp
pop
jmp
inc
lods
fsincos
sub
jne
xlat
pushf
arpl
add
pop
shlb
pop
sub
aam
aad
imul
mov
out
mov
test
dec
movl
or
add
dec
mov
jae
adc
jo
mov
mov
inc
adc
aas
in
or
dec
orl
scas
add
mov
xor
jecxz
push
decb
jle
sbb
sub
dec
sub
int3
push
pop
les
data16
xchg
sub
or
add
push
fidivl
cmp
or
jae
repz
pushf
xor
xchg
cmp
dec
popf
ja
orl
inc
fsubrs
mov
incb
dec
sub
bound
int3
cmp
stos
fs
jb
xchg
in
test
xor
jmp
pop
roll
std
push
hlt
iret
mov
push
cmp
cmp
je
mov
add
jp
dec
fcoml
pop
and
xchg
aam
ja
mov
inc
lret
cmpsb
lea
not
jnp
outsl
add
cmp
pop
xchg
or
inc
popf
xchg
nop
lea
out
je
test
xchg
aad
mov
lds
pop
push
ret
and
add
or
mov
pop
ret
shrb
stos
jg
rorb
clc
jns
sahf
lahf
or
enter
ljmp
daa
popa
push
jae
orl
fbld
push
mov
sbb
cltd
add
push
lods
les
and
in
push
dec
add
inc
push
cs
inc
xchg
jbe
fsubl
dec
sub
or
and
mov
mov
mov
dec
pushf
cmpsl
add
pop
sti
push
repz
iret
xchg
and
cmp
and
dec
add
xchg
insb
inc
inc
adc
loop
or
imul
cmp
xchg
das
ss
test
or
stos
xor
cmp
inc
mov
movsl
stos
sub
cmpsb
rolb
mov
mov
sub
cmp
loope
xchg
jbe
das
lods
movsl
push
movl
mov
lods
movsl
dec
shrb
and
pop
pop
add
les
mov
lahf
popf
nop
rclb
inc
cmpl
sbb
data16
lock
pop
adc
hlt
repz
inc
ret
pop
mov
sbb
xchg
lods
adc
faddl
pop
mov
imul
in
out
cld
cmp
movsb
sub
int3
int
mov
inc
mov
in
jl
scas
popf
lret
mov
sub
jmp
subb
bound
lods
mov
pop
inc
and
leave
mov
xor
pop
xchg
mov
jne
push
loop
bound
cmp
pop
jo
cwtl
xor
sbb
aad
push
cmp
jge
les
mov
xchg
nop
cpuid
add
mov
out
push
fisubs
push
sbb
xor
pusha
cmp
enter
adc
mov
xchg
inc
inc
ljmp
sub
fstpl
cmp
add
in
push
dec
shl
out
adc
cltd
bnd
xchg
xchg
lret
out
jns
mov
scas
std
mov
idivb
roll
outsl
mov
aas
mov
cwtl
clc
call
jo
fstpt
sbb
js
adc
ret
enter
xchg
pop
lea
test
gs
sub
sub
fsts
lds
xor
or
mov
fildll
std
sub
pop
sbbl
adc
in
or
sahf
sub
stc
cmpsl
xchg
xor
dec
ret
cmc
int
sub
dec
jmp
add
cmp
pop
arpl
push
pop
call
popf
cmp
sub
das
aad
int
push
mov
pop
adcl
dec
outsl
pop
je
mov
loope
data16
jmp
cld
mov
std
adc
mov
into
inc
xchg
adc
and
fadds
pop
pop
inc
or
mov
or
mov
jmp
out
and
add
fxch
xchg
inc
sbb
in
dec
popf
xor
cli
mov
jae
arpl
mov
adc
adc
xlat
pop
rolb
insl
mov
cmp
mov
mov
int
mulb
aas
sbb
stos
out
fistpll
mov
dec
dec
enter
movsb
aam
clc
push
sbb
aam
aad
mov
stos
inc
and
std
je
mov
js
mov
mov
roll
cmp
and
mull
test
push
dec
out
inc
jae
xor
xchg
mov
iret
cwtl
daa
dec
add
ljmp
dec
mov
sarb
xchg
or
pop
outsb
cld
pop
jne
or
xchg
push
add
icebp
mov
xchg
push
adc
pop
jmp
jg,pn
inc
loope
mov
les
add
add
out
jns
arpl
mov
movsl
das
stos
jecxz
xor
and
nop
inc
mov
cmp
jmp
xor
mov
iret
roll
movsb
leave
out
pop
mov
lds
pusha
lret
stc
cmp
movsl
add
addl
cltd
sti
pop
inc
xchg
xchg
icebp
mov
loopne
bound
in
divb
or
dec
jno
ss
xchg
imul
imul
push
test
pop
mov
je
lods
aad
loop,pn
in
sahf
rcl
sbb
cmp
mov
mov
loopne
fdivp
test
jne
dec
ret
rclb
xor
pop
out
loope
aaa
out
sbb
sbb
popa
mov
fldcw
sbb
jns,pn
sub
dec
out
adc
inc
shlb
add
mov
jp
mov
push
pop
sbb
jb
add
arpl
sahf
sbb
jp
ret
es
repnz
mov
pop
adc
lcall
push
add
sub
movsb
nop
iret
add
testb
push
stos
int
insb
sub
mov
sub
loop
sar
mov
iret
jg
lock
fsubrl
outsb
mov
push
je
dec
or
std
test
out
adc
sub
pop
lcall
or
mov
cwtl
xor
jbe
push
dec
repnz
repnz
adc
dec
rcrb
sub
inc
xchg
sbb
jne
mov
mov
incl
xchg
mov
push
aam
cmp
mov
xor
aam
mov
int
adc
daa
xchg
cmc
jp
notl
cld
ja
mov
fcoms
popa
outsl
push
ret
movsb
lret
and
imul
shll
pop
jge
jns
cli
filds
imul
push
push
iret
dec
fcompl
aas
mov
dec
iret
in
cld
popa
jbe
inc
jb
or
pop
andb
mov
icebp
fnsave
adc
aaa
push
or
add
mov
push
ss
insl
and
sbb
test
mov
inc
mov
ljmp
or
cli
dec
int3
mov
shrb
jbe
int3
xchg
repz
roll
fmull
pop
movsl
aam
add
lock
adc
adc
es
jns
jl
sub
inc
pop
sbb
adc
mov
ljmp
push
hlt
mov
mov
or
sub
ds
outsb
inc
clc
sbb
movl
aam
frstor
adc
dec
mov
aas
adc
jmp
inc
adcl
in
outsl
jle
repnz
aad
cmp
and
sbb
mov
dec
shll
mov
out
stos
ljmp
jp
lds
ja
and
pop
das
cmp
cmp
push
add
ja
iret
test
icebp
xchg
or
push
rclb
shlb
imul
jp
loopne
ret
cltd
outsb
mov
push
pop
out
push
jbe
jp
jl
jnp
cmp
jge
in
lret
test
add
sub
xor
inc
xchg
js
movb
dec
lret
push
pop
or
xor
or
push
xor
inc
jmp
sub
xchg
lods
incl
cmc
jno
pop
pop
inc
ds
mov
fwait
jns
or
fildll
ss
mov
or
mov
inc
fsubl
sub
mov
inc
test
aaa
addr16
insl
pop
bound
out
push
shrb
in
jb
mov
adc
jl
movsb
dec
shll
pop
ljmp
loopne
dec
mov
rol
dec
rorb
jg
add
mov
dec
jmp
adc
lcall
dec
cld
xchg
leave
push
jle
int3
pop
jbe
or
insl
ss
daa
arpl
in
mov
jg
dec
fcoms
push
shl
lretw
pop
dec
or
scas
cmp
ja
cmp
mov
shlb
and
sbb
sub
inc
ljmp
fiaddl
sub
mov
out
xor
or
jbe
mov
dec
loopne
fdivrp
aas
incl
fs
cmp
add
or
mov
orb
outsb
shrl
mov
in
dec
ljmp
mov
lea
call
js
aam
jb
shr
pushf
enter
ret
jns
cs
rorb
jnp
xlat
push
ljmp
adc
out
pop
xchg
sti
lret
adc
pop
scas
bnd
std
in
and
dec
add
aam
mov
js
andb
add
dec
int
add
pushf
jns
daa
xor
pop
test
mov
mov
sbb
mov
sbb
ret
pop
xchg
sti
inc
sbb
jecxz
sbb
stos
cmpsb
shrl
sub
lods
addr16
sahf
mov
popa
movsl
dec
mov
pusha
push
loope
or
mov
loop
ffreep
xchg
mov
jp
mov
sarl
adcl
push
xchg
add
out
subb
mulb
mov
fs
mov
inc
movsb
bound
loopne
pop
inc
and
cmp
fisttps
jae
adc
dec
inc
mov
mov
pop
jne
sub
dec
dec
test
imul
popf
lods
bound
or
inc
inc
jo
fwait
push
stos
dec
xchg
pop
cmp
dec
dec
adc
and
inc
nop
dec
add
addl
shr
xchg
sti
mov
inc
mov
sub
repz
inc
popw
xchg
cmpxchg
mov
pop
xor
popf
and
fmull
out
push
mov
and
pop
sahf
sbb
cs
incl
int3
fcmovbe
xchg
and
popa
or
insb
xorl
mov
add
mov
mov
orl
mov
repz
call
shl
gs
xor
loopne
xlat
cmpsb
mov
jle
push
test
lcall
js
dec
sub
jne
sbb
inc
jl
sub
adc
xor
add
jmp
mov
int
out
dec
push
or
outsl
adc
cmp
add
repnz
enter
pop
aaa
mov
fucom
sarl
imul
inc
fmuls
idiv
gs
sub
cmpsb
xchg
add
mov
in
sbb
test
lods
mov
jae
sbb
rol
dec
inc
adc
pop
pusha
test
mov
cmp
int
aas
adc
fistpll
maxps
adc
cld
xchg
inc
divl
xor
jno
push
xlat
rcr
or
loope
lret
push
dec
push
mov
add
sbb
gs
mov
loope
cmp
sbb
adc
notb
mov
add
int3
decb
test
loope
stc
dec
sub
pop
inc
mov
and
dec
inc
jp
mov
sbb
ds
fsts
xchg
add
and
rcrb
xorb
mov
nop
and
xchg
repz
rcrb
mov
rcll
mov
pop
cs
test
xchg
mov
loope
mov
iret
mov
les
cmp
repnz
sub
outsl
mov
xlat
pop
mov
mov
xlat
jnp
pop
push
loopne
out
jge
xor
mov
xor
jbe
jecxz
adc
xchg
mov
rcl
pop
setb
leave
test
subb
aas
xchg
es
out
dec
xorl
mov
cmc
out
int3
cmp
mov
xchg
jecxz
and
pop
or
sub
test
mov
fsubrl
xor
push
xlat
mov
out
and
dec
xor
xor
sbb
test
push
icebp
push
les
lcall
lahf
pushf
mov
lret
mov
push
inc
cmp
enter
sti
into
aaa
idivb
mov
hlt
inc
out
dec
lret
ret
dec
mov
loop
or
frstor
cmpsl
cmp
repnz
cmp
xor
pop
lahf
fistpll
out
div
cltd
movsb
lret
jo
sbb
or
sbb
scas
jb
es
loope
lock
mov
pop
aaa
mov
iret
mov
out
jne
cmc
jb
inc
sub
pop
mov
movsl
lds
leave
adc
pop
cwtl
cmp
inc
push
dec
rdtsc
in
xor
leave
test
sbb
orb
mov
fucomp
sbb
jnp
and
adc
mov
cs
mov
hlt
or
push
cli
xchg
sbb
mov
sbb
mov
xor
inc
inc
mov
fadds
std
fucomip
loop
adc
dec
pushf
inc
mov
mov
inc
rcrl
jmp
inc
stos
test
popf
out
mov
pop
ret
pop
scas
sbb
push
imul
sbb
flds
adcb
incb
int
inc
fwait
jno
scas
jae
cmc
push
aas
jbe
add
and
mov
loope
lahf
icebp
cs
mov
mov
rcrb
push
loopne
pop
outsb
aaa
into
fcompp
mov
or
xor
inc
pop
call
cmpsb
or
sbb
cmp
mov
js
out
test
sbb
cli
lcall
sbb
lret
jecxz
lahf
add
cwtl
sub
add
jne
add
mov
ds
int
int3
dec
cli
pushf
je
das
movsl
into
sbb
adc
mov
cs
add
idivb
mov
sub
dec
xor
lcall
sub
push
jnp
inc
cmp
dec
xor
push
adc
and
jecxz
lds
aam
pusha
nop
fs
inc
jb
lods
mov
pop
pop
fsubrs
ret
or
stc
nop
repnz
jno
sbb
mov
dec
les
lea
jb
mov
mov
push
mov
pop
adc
pop
adc
inc
outsl
cltd
dec
or
lret
cmp
xchg
into
lret
jae
jno
cmp
push
out
push
lret
pop
pop
jp
ret
mov
dec
cmpsb
mov
pop
lahf
jp
sbb
sarb
es
mov
push
cmp
cmpl
call
mov
jecxz
add
out
out
jp
fcomip
add
xlat
pop
neg
mov
xchg
sub
xchg
clc
repz
jbe
xor
fs
stos
xchg
movsl
pop
fistpll
fcoml
or
out
and
sbb
mov
pop
cmc
mov
add
or
xor
mov
xchg
fcomi
cmp
dec
insb
or
aaa
ljmp
ss
lret
leave
mov
cmp
jo
cmc
mov
push
lock
sub
das
scas
pop
dec
es
pushf
xor
mov
repz
add
mov
pop
jbe
sbb
jo
dec
push
mov
jge
ret
into
add
push
dec
and
cs
jp
popa
movsl
pop
leave
inc
out
dec
cmp
loop
push
outsl
iret
mov
pop
mov
dec
xchg
cld
lock
int3
stos
lock
das
sbb
clc
push
mov
lods
test
or
in
cwtl
movl
adc
xor
je
mov
xchg
add
ss
sbb
out
sbb
in
push
fldl
dec
mov
orl
shlb
push
nopl
push
mov
mov
and
in
js
xrelease
leave
aad
iret
adc
inc
pop
je
cmpsb
push
cmova
into
mov
fnsave
imul
cmpsl
or
xor
or
popf
pop
addr16
jp
fidivs
jns
and
scas
and
shl
jno
outsl
cmpsl
sbb
shrb
loopne
pop
cltd
test
inc
jb
mov
adc
dec
test
cmp
outsb
enter
sarl
outsl
cmpsl
sub
imul
dec
sbb
and
cmc
xchg
push
push
imul
leave
sarb
wbinvd
sub
insb
adc
rclb
leave
sahf
jg
push
mov
call
cmc
ljmp
push
test
movl
add
dec
adc
mov
jmp
push
test
add
add
lods
in
push
rcrb
sti
mov
mov
rolb
push
out
sahf
push
push
dec
outsl
je
pop
mov
lret
ret
sub
and
loope
ret
mov
sbb
push
xor
leave
xchg
sti
push
gs
mov
fs
pop
inc
cmc
and
push
mov
sahf
fcoms
sbb
divb
xchg
popf
push
xlat
push
push
in
jne
inc
inc
lods
mov
mov
sub
pop
test
cmp
insb
out
mov
sbb
cmpb
mov
adc
pushf
das
dec
dec
inc
cmp
jbe
push
mov
loop
mov
ds
scas
ja
js
mov
les
sbb
inc
dec
mov
xchg
xchg
or
ret
inc
mov
or
int3
and
xchg
test
stos
or
or
cmpsl
ss
bound
popa
mov
mov
clc
mov
and
popf
stc
inc
push
xor
in
cmp
sbb
mov
and
aaa
pop
cmp
and
pushl
repnz
add
pop
push
jne
cmpl
mov
test
or
dec
addl
popa
dec
scas
shrl
gs
and
ret
imul
mov
and
in
push
cmc
jl
stos
dec
stos
call
jp
or
cmp
cli
sbb
lock
mov
lods
xor
dec
xchg
xor
xchg
dec
cmp
add
or
mov
push
ja
ret
push
push
stos
dec
imul
cmc
mov
out
inc
push
fldt
ljmp
fsubs
outsl
daa
xchg
negl
nop
in
out
and
xchg
mov
sti
std
call
orb
pcmpeqw
xchg
fwait
das
xor
push
and
lea
inc
jb
sbb
sbb
mov
in
scas
stc
inc
inc
jecxz
mov
cmp
negl
sbb
enter
cli
dec
mov
add
jge
push
jae
scas
lods
lret
stc
incb
hlt
xchg
lcall
mov
push
push
loope
pop
imul
inc
dec
push
loope
and
test
lret
xchg
dec
sub
lods
fsts
enter
sbb
mov
in
cs
or
enter
adc
ret
mov
incb
in
popa
xorb
std
jb
test
jmp
jmp
fwait
push
rclb
pop
stos
jmp
cmpps
imul
mov
cld
int3
push
dec
add
dec
out
aam
push
pop
dec
sub
xchg
into
or
pop
in
inc
ljmp
sub
or
dec
or
les
push
lcall
sub
xor
mov
jne
ror
cmp
fs
ret
sahf
enter
gs
ja
mov
fisttpl
push
xchg
subb
clc
into
add
lock
fistps
aad
push
mov
aaa
dec
jae
cmp
mov
rorl
aaa
roll
add
cmp
bound
jle
jo
dec
cmc
or
cwtl
and
cmp
arpl
iret
inc
adc
xor
sub
fistl
pusha
sbbl
es
mov
and
push
fwait
aaa
push
sbb
xchg
fisttpl
pop
js
aam
popf
mov
adc
mov
xor
push
mov
sub
call
iret
jno
out
sub
ss
and
push
in
pop
outsb
mov
inc
fisubl
sbb
popa
mov
xchg
sahf
mov
lods
fildll
mov
shrl
lret
pop
jb
mov
xchg
into
ficomps
push
ds
mov
adc
lds
int3
popa
xchg
lret
mov
leave
and
dec
sahf
pop
icebp
aad
in
xchg
mov
and
icebp
test
jae
sbb
out
cmp
icebp
jbe
sub
sbb
jnp
jns
jo
cmpl
push
in
inc
jno
sbb
xor
vaddps
mov
and
out
jl
mov
mov
inc
push
addr16
jae
or
dec
in
pop
mov
pop
pop
xchg
mov
cwtl
fs
xchg
push
mov
or
and
adc
mul
and
inc
pop
jl
add
movb
sub
rcrl
imul
and
loope
mov
pop
lret
jnp
pop
xor
js
fistps
and
jns
frstor
ss
or
cmp
adcb
insb
jns
add
lock
pop
dec
push
sub
rcl
add
sbb
sbb
jp
lods
das
aad
xor
inc
mov
mov
fdivrl
popf
xchg
cmpsl
fists
add
cmp
push
cmpsb
lea
xor
add
mov
out
jmp
loop
sarb
scas
out
push
pop
inc
cmc
daa
mov
or
aad
sbb
jg
movsl
shrl
and
ja
and
jp
push
sub
jecxz
jno
shlb
aas
cmpsl
gs
sar
pop
mov
imull
xor
roll
and
adc
mov
jg
imul
inc
stos
lds
sbb
rolb
roll
pop
enter
pop
icebp
xor
pop
cmp
aam
cmp
ljmp
imul
and
leave
hlt
inc
cmpsb
push
pop
sbb
jl
mov
pusha
addr16
jmp
rcr
pop
movb
add
xchg
mov
add
inc
fwait
mov
and
jecxz
pop
xor
mov
fsubl
stc
mov
fdivrl
jmp
rcl
pop
call
movsl
cltd
mov
mov
sub
out
fwait
push
insl
es
pop
mov
or
stos
dec
jae
scas
mov
arpl
lock
repz
jbe
daa
cltd
pop
mov
push
cld
cwtl
pop
leave
jle
and
inc
mov
sbb
mov
or
fwait
mov
aaa
xor
push
pop
xorl
push
loope
mov
push
xchg
xchg
xchg
in
push
pusha
pop
jecxz
xchg
mov
rcll
hlt
cmp
mov
sarl
jle
add
int3
lret
cmc
sub
in
mov
cli
fsubrs
inc
sub
mov
xchg
and
adc
mov
dec
xlat
xor
and
movsb
int
pop
arpl
or
and
in
push
cs
ret
paddd
cwtl
lea
sbb
scas
std
pop
or
xor
cld
movsb
loopne
mov
out
in
jecxz
std
adc
in
ja
mov
sbb
mov
lods
outsl
ret
push
mov
mov
adc
hlt
lea
sbb
pop
or
ljmp
je
mov
loopne
sbb
cmp
xor
and
xchg
sub
adc
gs
xchg
inc
add
jae
mov
inc
jb
mov
adc
insl
sub
out
loopne
dec
jmp
scas
sub
outsb
dec
jnp
xchg
mov
fistpll
aam
shrb
adc
jmp
int
sti
jne
jle
cmp
aas
mov
cmpsb
sbb
les
add
gs
mov
push
xchg
push
mov
pusha
das
push
sub
mov
cmpb
xlat
in
cmc
mov
push
andl
ss
sarb
insb
in
stos
jmp
sahf
and
and
iret
fsubl
bound
inc
testl
mov
xchg
scas
pop
movsl
mov
push
jbe
sub
sbb
inc
inc
gs
mov
lahf
sbb
mov
adc
jne
dec
push
imul
push
ret
dec
mov
sahf
cmc
sub
push
mov
sarl
pushf
ficompl
daa
ret
movsb
inc
test
or
push
jp
add
lcall
add
in
cltd
cmp
cwtl
pop
lcall
out
in
clc
adc
add
aas
inc
dec
mov
pushf
out
jo
mov
and
mov
std
push
pusha
in
push
js
pop
add
adc
or
jo
jo
pushf
push
sub
mov
idivl
or
lret
sub
insl
shlb
jge
and
insb
jp
mov
add
pusha
js
dec
test
xchg
push
sub
dec
arpl
insb
mov
sarb
mov
or
addr16
or
mov
cmc
mov
cli
mov
push
in
push
rdtsc
cli
fnstcw
and
mov
notb
inc
mov
xor
test
mov
in
fisubrs
subl
cmp
data16
jne
pop
mov
loopne
and
fs
push
inc
popf
inc
or
xor
std
cmp
outsb
xchg
pop
cmp
and
pop
dec
cmp
loopne
jl
sbb
or
fimull
push
jle
add
fidivs
cmpsl
and
loope
dec
push
fistps
xor
ret
sub
lret
sub
stos
mov
mov
pusha
nop
xor
mov
dec
cmc
dec
jno
sbb
add
dec
divb
mov
jno
xor
in
mov
inc
or
ret
add
in
hlt
std
loope
dec
push
xlat
xchg
adc
mov
jp
addl
repz
rcrl
inc
lcall
dec
jb
out
shll
aad
out
ljmp
push
int
arpl
punpckhdq
cmpsb
xchg
pushf
adc
xchg
insl
pushf
out
insb
xor
inc
addr16
lock
or
pop
mov
xchg
xchg
and
pop
inc
pop
dec
test
js
xchg
cmp
xchg
gs
jle
insl
add
adc
push
push
adc
lock
addr16
cmpsb
or
notb
jns
dec
shlb
jb
inc
leave
cmp
mov
test
mov
add
mov
out
movsl
xor
pop
dec
dec
inc
jne
addr16
cmp
xchg
mov
rcrl
mov
cmc
add
out
hlt
push
mov
mov
ss
hlt
fldcw
adc
aas
cmp
jmp
hlt
mov
stc
xchg
repz
mov
testb
adc
gs
adc
cmp
repz
inc
cmpb
cmc
repnz
jns
pop
inc
pushf
in
sub
cmp
fwait
imul
or
mov
scas
out
xor
mov
fildll
lcall
pop
push
mov
mov
push
pop
push
call
scas
cmp
adc
add
lds
mov
enter
ds
fldpi
lahf
nopl
lret
cmp
push
gs
add
out
ja
add
adc
push
aam
in
lods
jne
out
fdivrp
cmp
xchg
dec
nop
loop
insl
fstps
pushf
dec
add
stc
cmp
xchg
ljmp
sub
sbb
fisttps
add
adc
fcompl
clc
xchg
dec
cltd
stos
call
sahf
xchg
lahf
sub
adc
mov
add
popa
sub
jne
bound
jnp
lock
and
imul
imul
jae
cltd
xchg
cmp
adc
lock
jg
xchg
call
repnz
aam
push
sbb
popa
mov
ja
dec
push
jecxz
inc
push
lods
mov
sub
mov
clc
sbb
xchg
jecxz
cli
loop
imul
mov
sbb
dec
sub
mov
incl
dec
orl
fldenv
dec
int
dec
sub
clc
cli
ja
ret
push
mov
inc
std
inc
dec
ret
outsl
aad
das
ficompl
dec
fs
mov
pop
fimuls
leave
mov
loopne
pop
and
pop
add
rcll
pop
push
fistpll
arpl
repnz
sub
les
cld
sbb
out
sbb
xchg
ret
xchg
xchg
ljmp
inc
adc
jb
mov
or
push
xchg
xchg
adc
sub
mov
cmp
outsb
into
xor
jne
push
cmc
loopne
outsl
push
sub
mov
mov
dec
call
lcall
dec
mov
xor
loop
mov
inc
or
test
dec
into
in
ljmp
out
addps
pop
sbb
lock
lret
add
adc
aad
pop
imul
inc
jno
jne
addr16
int3
mov
adc
stc
cs
divb
add
sub
lock
mov
fistps
out
sbb
mov
rcr
inc
ret
dec
sbb
insb
sbb
inc
addb
cltd
push
xor
rcr
lods
int3
stos
pop
mov
gs
out
test
ficompl
push
fs
push
cld
mov
popa
int3
mov
dec
int3
mov
ret
mov
rcrl
pusha
jb
jns
bnd
insl
xor
mov
aam
out
in
mov
push
test
adc
cmpb
insb
mov
fwait
int3
adc
mov
pop
sub
push
mov
sub
shrl
out
pop
scas
jecxz
repnz
out
js
inc
mov
mov
xor
imul
dec
popa
clc
outsb
fildl
cltd
popa
cwtl
into
mov
pop
lods
lretw
mov
ja
lods
aad
mov
push
iret
push
insb
mov
add
sbb
xor
jmp
je
sub
pop
call
xchg
lahf
scas
loop
pushf
divl
mov
push
mov
leave
sub
subl
mov
push
shlb
adc
scas
jg
aas
loopne
mov
add
xchg
or
or
fsubrl
pop
push
into
scas
push
dec
clc
pop
sbb
add
and
lods
adc
fdivrs
ss
cmpb
cld
stos
sub
mov
lahf
lcall
fidivl
inc
push
int3
js
fs
mov
mov
sub
loopne
bound
jae
js
push
scas
ret
ljmp
or
mov
ja
iret
inc
xor
push
fs
add
aad
std
adc
add
xlat
adc
push
mov
lcall
sbb
inc
ja
cmpsl
js
in
and
lods
mov
imul
sub
mov
add
push
cmp
pop
adc
adc
cmp
int
jg
lds
jo
test
pop
jmp
in
dec
inc
add
cmp
adc
lcall
repz
push
cmc
repz
jae
stc
sub
mov
mov
mov
dec
iret
mov
mov
adc
xor
stc
cwtl
rclb
out
inc
test
xor
adc
insl
stos
push
lods
stos
sbb
int
sbb
add
add
mov
sbb
add
iret
scas
xchg
sbb
cmp
sub
out
fnstsw
xchg
lret
cmp
aam
mov
ds
cmpsb
inc
sub
and
stos
into
ds
and
jp
sbb
int3
fldcw
cs
xchg
sbb
push
ficompl
lds
shlb
mov
pop
pusha
pop
xchg
sub
jb
sbbl
pop
ja
push
jno
push
mov
mov
call
loop
mov
pop
out
jne
xchg
xorb
push
lds
stos
sub
call
sub
lcall
add
add
adc
pop
mov
shlb
dec
mov
fxch
bound
push
pop
and
int
arpl
sub
pop
cmpsl
xor
mov
cltd
fwait
repnz
add
cmp
fdivs
cmpsb
iret
mov
push
ds
and
lods
sub
pop
int
mov
jo
clc
lods
cmp
call
outsb
cmp
adc
aaa
loopne
les
nop
shrl
and
in
xor
jg
mov
or
scas
pop
mov
jp
push
xor
loope
bsf
or
loope
sub
dec
mov
jbe
pushf
xor
adc
pusha
add
arpl
xor
daa
out
call
outsb
les
lods
lahf
ds
jbe
ds
jge
jne
push
adc
adc
test
pop
rol
call
mov
push
fmuls
mov
lods
int
daa
dec
xchg
jl
lock
orb
loop
adc
cltd
test
xor
xor
clc
jmp
inc
mov
stc
lods
cmp
iret
into
das
sbb
cmp
jno
xchg
ffree
push
dec
mov
mov
pop
movsb
aam
xor
and
jg
xor
and
inc
mov
inc
pop
or
or
mov
mov
icebp
push
pop
jl
inc
cmp
cld
div
addb
imulb
xchg
dec
iret
rcrl
outsl
push
fnstcw
pop
cmp
jmp
jp
arpl
les
out
rcrl
movsb
mov
push
jecxz
dec
cltd
scas
inc
xor
loopne
adc
rclb
cmp
shlb
cld
stos
sub
loope
adc
sbb
gs
cmp
imul
cmovle
fsts
nop
aaa
jns
movsl
testb
fldt
sbb
and
popa
out
out
insb
adc
jae
push
add
xchg
adc
ss
mov
dec
fcompl
mov
arpl
arpl
add
adc
loop
jmp
into
cld
mov
es
xchg
inc
lret
mov
inc
push
push
pop
fucomp
add
pop
and
movsb
aas
jno
pop
fcomps
clc
pop
ja
push
adc
pop
test
mov
es
cmp
adc
cwtl
dec
scas
inc
mov
jae
repnz
push
loope
mov
inc
mov
fldenv
lods
push
fcomps
dec
sbb
out
out
fisubs
push
out
ror
add
and
jbe
mov
inc
lds
and
repnz
scas
xlat
jmp
enter
xchg
cmpsb
jae
sbbb
fidivs
mov
lock
ds
mov
rorb
push
outsb
xlat
xchg
or
xor
fiadds
adc
outsb
pop
out
hlt
insb
fs
xorb
aam
xchg
jle
fdivr
imul
fnstsw
es
mov
test
sub
popa
clc
adc
roll
in
jle
std
dec
scas
loop
lock
push
sub
cs
add
xor
mov
push
cmpsl
cmp
aas
imul
xor
or
ret
lea
adc
das
mov
repz
leave
mov
shll
mov
lret
mov
mov
icebp
pop
mulb
daa
imul
call
loop
test
mov
fsubl
in
fstpl
pop
and
inc
xchg
jl
and
cmpsl
mov
push
lret
orb
les
les
movsl
adcl
and
push
lret
xchg
mov
daa
call
pop
es
inc
mov
int
les
mov
lret
daa
fxsave
pushl
sub
jl
imul
mov
xchg
xchg
cmp
shrb
jb
fcompl
mov
xlat
cli
stos
scas
jo
fistps
jnp
inc
pop
mov
xchg
push
inc
xchg
popa
adc
sarl
out
pop
std
mov
aas
imul
cs
call
daa
mov
jne
adc
adc
dec
sub
push
fwait
sbb
ss
sarl
add
pushf
mov
mov
pop
mov
pop
mov
mov
mov
stos
stos
iret
mov
pop
push
icebp
jb
push
xor
scas
add
pushf
in
mov
push
inc
mov
hlt
push
dec
cmp
loope
testl
adc
scas
or
add
mov
inc
cmp
jns
mov
test
inc
push
adc
sub
push
loope
or
jno
dec
xchg
jne
and
popa
and
xor
xor
popf
jo
pop
xchg
jg
in
dec
cmp
call
lods
pop
out
and
outsb
fwait
cmp
js
insl
push
aam
das
ljmp
adc
mov
xchg
sbb
mov
scas
out
adc
dec
aaa
inc
mov
inc
pushf
inc
pop
into
or
mov
sub
fadds
mov
mov
push
pop
scas
test
in
out
mov
cmp
das
nop
lcall
imull
pusha
pop
pop
outsb
dec
inc
dec
jns
sbb
mov
pop
arpl
mov
neg
push
insl
mov
std
mov
push
xlat
sbbl
sbb
dec
ret
lock
sbb
sbb
sbb
pop
inc
cs
xor
push
xchg
sbb
lds
sbb
movsb
push
push
fcoms
pop
jmp
sbb
lea
mov
stos
test
add
sub
subb
cmp
mov
adc
xchg
pop
popf
fnstenv
or
cltd
outsl
fisubrl
lds
dec
mov
lock
xchg
idiv
add
pop
loopne
push
pop
arpl
cmpb
xchg
js
mov
pop
aad
add
sub
test
and
xchg
xchg
sbb
sub
and
and
cmp
ljmp
rolb
rcrb
xchg
outsl
dec
test
mov
in
pop
and
push
xchg
push
in
sub
cwtl
stos
jb
mov
sbb
or
push
push
cwtl
insl
aad
insl
xchg
xorl
add
push
pop
jae
and
sub
adc
bound
push
cmpsl
mov
sub
jns
das
imul
stos
enter
roll
inc
cli
cmc
jbe
nop
cmp
es
ss
ret
add
sub
movsl
je
or
ljmp
add
adc
mov
xlat
cs
lahf
negb
aam
mov
fs
pop
xor
shlb
and
fidivl
aaa
mov
jb
adc
dec
ljmp
fisttpll
dec
jle
out
leave
push
jno
push
lods
push
or
aaa
sub
movsb
inc
mov
jp
jp
imul
out
std
lret
leave
mov
sarl
mov
and
jle
mov
mov
in
movb
dec
stc
sbb
lods
pusha
sti
cmpsl
mov
mov
and
mov
xchg
jle
out
cmp
inc
arpl
dec
lret
fwait
jmp
loope
shrl
push
gs
mov
test
out
shr
aas
or
cwtl
mov
lahf
xor
push
push
sub
and
loope
lcall
or
pop
xchg
cmp
dec
push
call
fimuls
call
arpl
inc
bound
rorb
push
xchg
mov
mov
xchg
jmp
mov
mov
lcall
icebp
ds
jmp
xchg
bound
shr
test
clc
or
loope,pt
dec
ljmp
out
loopne
pop
jecxz
pushf
andl
gs
push
movsl
push
jae
setp
scas
das
leave
fcoml
mov
scas
jae
outsl
leave
or
pop
xchg
out
mov
test
xchg
dec
in
fisubl
rorl
lds
leave
test
xor
ja
and
xor
xlat
dec
mov
shll
mov
xchg
and
sub
xor
mov
jl
fisttps
inc
bound
cs
out
fisubl
in
mov
out
mov
je
repz
lea
mov
ljmp
or
push
rclb
mov
xchg
pop
push
xchg
inc
nop
pop
iret
cmp
notb
sbb
xor
dec
mov
mov
aam
faddp
dec
mov
jmp
idivl
sub
pushf
push
pusha
push
fsubs
sahf
xor
pop
clc
aad
sub
mov
and
popf
adcl
mov
addr16
rcrl
aam
rorl
stos
jne
xor
inc
push
adc
subl
mov
cmp
sbb
adc
mov
pop
or
cmc
cli
cmp
and
cmp
ret
outsb
or
inc
shlb
call
jno
mov
pop
mov
push
stos
pushf
xchg
lahf
dec
adc
jmp
imul
dec
repnz
jp
cmpsl
push
push
pop
and
subb
mov
xor
aad
adc
rcll
adc
push
xorb
pop
mov
mov
imul
stos
adc
cmp
mov
xorl
mov
adc
dec
jl
enter
js
xor
push
cld
push
es
imul
adc
jg
jmp
add
lods
mov
inc
jae
push
or
xor
repz
les
cltd
jle
and
lods
scas
mov
inc
adc
xchg
jbe
mov
rcrw
lret
jbe
add
jo
aam
sbb
pop
out
pop
and
fwait
xor
test
gs
xchg
pop
ret
div
rcl
stc
pushf
mov
std
pusha
repz
and
lahf
shrb
out
gs
pusha
xor
cmp
xchg
ffree
fcos
idivb
int
jg
roll
loop
ja
int3
xor
pop
mov
xor
sbb
lea
sub
add
dec
pop
push
ljmp
lea
jl
roll
or
inc
pop
in
push
fbstp
mov
jns
loopne
aad
dec
or
cmp
xchg
mov
xchg
mov
xchg
or
sub
sub
popf
into
dec
into
push
pop
jg
repz
stc
in
cld
andl
pop
stos
or
loop
ja
push
push
int3
imul
fsubr
icebp
xor
add
in
lcall
pop
clc
xor
loopne
in
sub
jae
and
dec
fisttps
in
mov
scas
sbb
add
iret
mov
lea
gs
lods
lret
enter
dec
lds
jg
sbb
jns
cld
xchg
push
dec
pop
jmp
inc
push
movsb
xchg
pop
mov
cmpsb
push
test
xor
lret
jo
dec
shl
push
jge
bound
ss
cwtl
hlt
jne
inc
inc
je
dec
movsb
fiaddl
sub
mov
mov
dec
and
push
aaa
rcrb
pop
xlat
aas
stos
jmp
cmp
inc
imul
aad
or
jmp
fwait
mov
pop
sbb
xlat
jmp
stos
xchg
jmp
ret
xchg
ret
mov
out
push
mov
cmp
ss
jb
clc
stos
push
bound
push
in
mov
ds
scas
pop
jp
push
mov
mov
sbb
add
sub
or
xchg
lock
adc
add
cmp
arpl
sub
fidivl
out
add
push
and
rcll
cltd
fldl
or
xchg
data16
dec
jnp
jg
je
jmp
mov
mov
sub
mov
push
loop
adc
rcl
repnz
xchg
jno
loope,pn
aad
mov
mov
aam
pop
sbb
aad
mov
cmpl
xchg
lock
aaa
pushf
jp
push
pop
inc
mov
stos
push
lret
push
repnz
shrb
pop
testb
es
loop
pop
cmp
inc
and
shl
jae
push
sub
inc
sub
cmc
inc
sbb
xchg
adc
in
clc
test
mov
cmpsl
shll
incl
in
movsb
pusha
jae
jbe
rol
adc
cmpb
loop
fiaddl
and
pop
mov
test
movsb
aas
push
xor
dec
aad
inc
insb
and
mov
shrb
aam
xor
mov
fadd
pop
call
lock
in
rolb
dec
push
pop
or
sub
mov
enter
outsl
xor
pop
mov
xor
mov
and
xorb
mov
mov
xor
rcrl
stos
outsl
dec
jecxz
pop
pop
rorl
cmpsb
jl
adc
mov
jge
jns
dec
push
sub
aas
sbb
sub
inc
add
shlb
pop
clc
out
mov
shrb
aas
into
dec
imul
lret
in
push
mov
sti
sub
adc
mov
add
xlat
lret
lea
inc
cmp
mov
or
fistl
xor
dec
push
ljmp
push
jle
xchg
mov
in
push
cmp
int3
imull
out
xchg
fnstsw
pop
iret
mov
aas
out
dec
imul
addr16
cmp
sub
sub
fsubr
mov
sbb
xlat
xchg
mov
push
mov
mov
shll
xchg
mov
aad
fwait
imul
xchg
jmp
rcr
lret
and
sbb
mov
inc
pushf
mov
shrl
pop
pop
adc
lcall
mov
pop
fldl
hlt
mov
xchg
fsts
cli
mov
mov
movsl
mov
xchg
lods
sti
daa
outsb
stc
adc
mov
pop
push
shll
je
test
xor
push
push
aam
fwait
adc
in
pop
lds
xor
dec
or
int
inc
mov
rorb
loope
adcb
inc
dec
pusha
test
orl
dec
pop
dec
cmc
push
and
and
addb
jbe
push
ret
addr16
push
test
pusha
mov
in
pusha
dec
rcr
ret
push
jo
mov
xlat
jo
nop
mov
out
pop
adc
cmp
pop
push
das
and
cmp
xor
leave
jge
and
pop
xorl
mov
inc
push
cmp
aas
rcrl
pop
pop
mov
xchg
int3
mov
jle
js
in
pop
sub
ljmp
mov
jbe
test
inc
adc
pop
cmc
lock
stc
and
fisttpl
sbb
loope
jbe
cmp
inc
leave
push
mov
sub
sub
test
dec
xlat
lret
jbe
push
insl
and
insl
cmc
mov
dec
imul
cmpsb
add
or
inc
sarb
jb
and
es
pop
pushf
cmp
jne
cmp
mov
test
icebp
seto
xlat
daa
data16
sarl
roll
sbb
pop
push
fsubrl
cmpl
std
xor
push
repz
gs
push
cmp
jae
std
mov
loope
cmpb
jmp
xchg
push
mov
movsl
aam
dec
scas
shl
scas
xchg
pop
or
pop
loopnew
mov
out
inc
sbb
filds
fidivrl
outsb
or
popf
mov
push
sahf
sti
test
inc
push
enter
adc
push
inc
shl
lds
je
push
and
lahf
push
mov
and
or
and
lcall
int
pop
inc
sahf
push
pop
outsl
dec
dec
js
lret
push
addl
jmp
sbb
xlat
push
enter
xchg
jmp
pop
pop
jle
jecxz
pop
mov
xchg
cltd
inc
lds
cmp
or
cmp
mov
sub
and
pop
sub
inc
inc
cld
mov
cs
jb
ja
mov
mov
pop
sahf
movsb
ret
lock
stos
sbb
iret
dec
add
jno
add
dec
push
push
subl
mov
imul
sahf
movsb
pop
jae
xchg
enter
loope
fwait
jo
pop
lods
add
xor
das
in
inc
aaa
loope
loop
jge
jle
jb
mov
fisubrs
add
stos
push
out
add
fs
rorl
inc
pop
lret
push
insb
jnp
mov
rcll
nop
mov
jb
ret
insl
mov
or
in
jne
fdivrl
sahf
aaa
test
jnp
and
in
mov
and
xchg
popf
dec
pop
dec
pop
adc
cs
adc
aad
loop
insl
fcom
inc
aas
mov
mov
js
inc
adcl
cmp
lea
push
les
lret
lods
mov
ljmp
js
out
dec
fsubrs
dec
mov
mov
into
pusha
idivb
push
cmp
aas
out
sbb
jp
mov
mov
sub
stos
movsb
lods
pop
hlt
inc
rcl
leave
ficomps
xor
push
fldcw
sub
aaa
adc
add
aad
scas
add
cmp
mov
mov
sbb
dec
clc
jp
cmp
int
xchg
jge
jmp
inc
addr16
loop
movl
jo
push
cli
or
aad
call
jp
lret
add
ljmp
xlat
jle
jb
adc
inc
aaa
test
push
fldcw
addr16
or
and
arpl
arpl
int3
xor
jle
movsl
mov
inc
xlat
pop
xor
jg
mov
xchg
lret
cmpsl
inc
int
test
add
push
jb
in
push
shl
add
shlb
mov
out
sbb
sti
jo
lods
les
leave
les
cmpl
or
mov
or
nop
mov
dec
mov
lods
jle
xchg
sbb
adc
xlat
aaa
push
inc
aas
jl
and
pop
subl
jo
shlb
out
scas
test
mov
cwtl
icebp
pop
sbb
dec
xor
bound
pop
lahf
out
nop
sbb
lea
popa
mov
icebp
jg
mov
js
jecxz,pt
xchg
add
xchg
jb
pop
push
cmp
cmp
fwait
daa
dec
rcl
test
lcall
sub
ret
jg
jecxz
xor
mov
movzwl
les
lock
adc
movsl
mov
mov
cmp
jbe
mov
sahf
mov
adcl
nop
mov
cld
rolb
mov
test
daa
cmpsl
pop
jns
or
xor
mov
push
mov
imul
cld
sti
and
shll
fidivl
mov
mov
rolb
or
pop
mov
cmp
daa
jb
push
sbb
cwtl
push
hlt
call
fs
iret
jns
adc
mov
inc
das
and
mov
aaa
ret
sbb
and
repz
jb
out
imul
xor
push
mov
xchg
cmp
std
daa
add
dec
dec
lock
mov
adc
mov
lcall
test
add
xor
push
lods
sub
inc
inc
fmuls
ljmp
mov
dec
sub
mov
lods
xchg
cld
ja
leave
or
scas
push
push
mov
xchg
aaa
loope
in
jb
hlt
fs
inc
pusha
push
lods
mov
dec
mov
sbb
out
jae
and
rcr
cmp
dec
cmp
mov
and
imul
xchg
and
out
mov
pop
stos
mov
push
xor
imul
inc
jp
pop
out
xor
xchg
aaa
sbb
imul
enter
xor
sub
aaa
lcall
pusha
push
pop
aas
test
push
mov
lods
lret
inc
cmp
xor
push
bound
sbb
repnz
jns
mov
mov
dec
jnp
mov
or
xor
fwait
and
mov
mov
sar
jl
ja
imulb
call
in
arpl
jle
xchg
add
lea
xor
or
mov
ret
push
sbb
notb
xchg
adc
out
jo
and
inc
pop
mov
or
xor
ret
sbb
js
push
mov
xchg
insl
pop
sub
mov
cmpsb
ljmp
mov
lock
sbb
fadd
jecxz
into
sub
int
roll
jl
jnp
rol
test
xchg
insb
xor
sbbb
push
ret
imul
stos
sbb
popf
fucomip
hlt
mov
sub
push
lcall
nop
in
fstpt
fidivrl
lret
and
lock
jecxz
jnp
adc
lahf
adc
out
xchg
add
sbb
mov
in
jae
dec
xchg
mov
jne
fisttps
repz
lock
lock
cwtl
jmp
js
lock
in
bswap
jns
outsl
pusha
iret
cmpsl
imul
mov
cmp
scas
stos
outsb
cmp
push
dec
dec
jp
aaa
inc
imulb
xchg
int
push
addr16
cs
lret
cmp
jo
jbe
sub
push
dec
fs
or
xchg
scas
xlat
int3
test
sub
lahf
ret
mov
sti
xchg
jb
sub
stc
push
mov
sbb
dec
in
inc
shrb
loop
subl
aam
lds
test
int
sbb
sbb
cmp
mov
dec
fbld
dec
jne
jle
frstor
jecxz
aas
outsl
pop
ss
mov
out
adc
cld
scas
push
pusha
cld
fwait
pop
shrb
in
cmp
sub
cs
ds
lahf
mov
lcall
mov
rolb
roll
mov
insl
mov
lods
sarl
adc
fwait
or
pop
push
insl
sub
pop
sar
in
and
aad
ja
dec
sub
xor
pop
test
jg
pop
lahf
in
fdivrl
aas
sbb
sub
jae
dec
cltd
and
ret
xor
loop
repz
stc
pop
scas
out
stos
xchg
scas
out
adcb
dec
cmpsl
fstp
rorl
lret
lahf
pop
inc
es
lret
test
mov
mov
pop
jo
mov
sti
mov
pushf
jnp
jne
push
mov
cwtl
sbb
jns
mov
mov
or
out
push
push
sbb
in
xchg
xor
sbb
xor
aaa
insb
movsl
es
and
lret
pop
push
lods
movsb
add
cmp
xchg
pop
imul
popa
pop
dec
aad
dec
xor
daa
pusha
cmp
sbb
dec
push
push
push
or
paddb
pop
movsb
add
call
insl
mov
xchg
or
ret
inc
cmpsl
popl
test
cmp
or
inc
cmp
in
push
sbb
jmp
pop
xchg
inc
add
decb
pop
mov
stos
addr16
and
mov
push
daa
test
int
out
xor
fidivrl
add
loopne
lcall
fistps
and
addr16
fnstenv
enter
popa
test
xor
jno
ss
push
repz
jns
pop
xchg
popa
jbe
pop
je
jns
push
lret
pop
cmp
mov
in
hlt
adc
movl
scas
xchg
sub
push
push
enter
pusha
in
flds
sub
xchg
pop
dec
inc
mov
sbb
jbe
xchg
or
xor
sub
test
sahf
cli
test
movsb
push
je
xchg
or
movsl
and
cwtl
in
mov
adc
ret
or
xchg
add
fcmovne
push
inc
mov
scas
pop
add
and
push
fistpll
push
dec
dec
push
outsl
bound
pop
cltd
adc
pop
xchg
mov
push
fs
aad
mov
sub
xchg
sbb
inc
cmpsb
test
loop
dec
jle
add
xchg
test
cmpsb
push
inc
xor
dec
push
mov
rolb
adc
insl
push
aam
jg
cmp
sbb
jno
push
add
pop
cmp
mov
pop
sub
lds
xlat
in
push
or
leave
jmp
jne
xor
cmp
xchg
into
leave
test
xor
mov
sub
call
outsb
movsb
movsb
cmp
ss
mov
imull
loop
sub
dec
inc
xorb
insb
pop
in
lock
shl
and
adc
mov
insl
mov
mov
cltd
movsb
or
fucomip
ljmp
jns
add
hlt
dec
sub
xchg
iret
adc
movsb
sbb
test
or
clc
xchg
pop
xchg
decb
ret
data16
adc
mov
push
sbb
test
repz
mov
mov
ljmp
fcmovnu
subl
lea
fistl
push
lea
sbb
push
add
mov
mov
fbld
leave
or
cmp
mov
dec
roll
icebp
pushf
ja
lock
bound
pop
aaa
ljmp
std
cld
cmc
xorl
xorb
scas
scas
mov
jnp
sub
mov
add
mov
cmp
jp
cli
lods
dec
dec
xchg
mov
testb
into
dec
test
adc
es
add
in
mov
cmp
mov
rcl
decb
inc
adc
fisubs
and
pop
mov
int
dec
and
push
shrl
mov
test
fildl
cs
into
leave
mov
xchg
sub
out
clc
sub
and
add
mov
add
dec
addb
aam
rcrb
dec
dec
xor
xchg
push
or
jg
inc
pusha
ljmp
jecxz
scas
xchg
pushf
and
jns
insl
imul
and
fimull
cmp
std
cmovs
popa
push
in
jae
andb
or
pop
sahf
dec
jl
ds
shrb
out
xor
repnz
sub
xchg
fistl
ljmp
and
sbb
pop
sbb
inc
and
in
mul
pop
push
inc
addr16
mov
fadds
bound
dec
out
aas
testl
mov
and
hlt
jp
mov
pop
mov
or
aam
pop
jmp
mov
push
push
into
sbb
mov
mov
or
add
ret
jb
testb
xchg
xchg
cwtl
andb
xor
aaa
jecxz
mov
in
mov
xchg
xor
clc
xor
add
repnz
push
jb
std
daa
rcr
arpl
adcl
inc
inc
gs
adc
cmp
daa
aad
mov
xchg
jle
clc
cmp
jecxz
sub
mov
sub
mov
sbb
push
stos
int
test
adc
bnd
insb
cmc
mov
rep
sbb
int3
sbb
sbb
mov
aam
test
shrl
mov
rolb
repnz
xchg
insl
faddl
es
xchg
int3
cmp
in
test
jmp
push
jle
std
xchg
jo
insb
lock
outsl
rcrb
mov
aam
fsubr
popa
inc
pop
mov
pop
dec
or
push
mov
jbe
inc
int3
cmc
mov
pop
test
jg
inc
ret
loopne
out
mov
sbbl
stc
jo
lret
jmp
hlt
pop
fidivs
loopne
insb
adc
jno
or
add
shrb
das
or
bound
nop
imul
es
rorl
je
je
or
je
out
es
adc
iret
test
xor
mov
test
mov
dec
add
in
sbb
jno
mov
shrb
xchg
push
lcall
mov
test
mov
mov
sub
xchg
bound
leave
push
adcb
adc
out
pop
or
or
addb
mov
orl
push
xchg
in
xor
inc
or
xchg
hlt
aad
mov
sub
sbb
cltd
mov
icebp
fidivrs
rorb
clc
cltd
test
mov
lds
adc
popf
jnp
and
and
fwait
sbb
repnz
cli
xor
xchg
lret
and
push
pop
je
test
and
es
shll
xchg
subb
sub
popf
pop
sub
cmp
push
inc
adc
loopne
or
ror
sub
es
gs
add
jl
xor
inc
cwtd
les
jge
aam
test
int3
mov
sbb
xchg
cwtl
inc
jbe
sub
inc
mov
jne
loope
fldcw
aam
int
mov
cmp
loop
lcall
addr16
je
and
shll
dec
xchg
fildll
pushl
cmc
jmp
add
pushf
test
or
xor
mov
xchg
ja
or
lcall
sbb
add
and
adc
pop
add
es
lods
filds
sub
fadd
jbe
and
push
add
jmp
shlb
in
xor
push
xor
in
jno
jne
scas
pushf
loopne
ds
dec
inc
xchg
jne
sbb
popf
push
fs
jle
fdivl
sub
rorl
xchg
inc
imul
loop
add
decb
jge
pop
sbb
test
push
push
dec
mov
cmp
push
add
fildll
hlt
scas
icebp
sub
push
daa
jnp
cs
outsl
or
cltd
mov
imul
mov
sahf
xor
idivb
jecxz
addr16
pop
pop
mov
jae
test
iret
pop
je
inc
jge
push
mov
mov
mov
mov
mov
cmpsb
inc
pop
iret
test
push
shrl
jecxz
fbstp
inc
ret
lcall
stc
xor
cwtl
add
punpcklwd
sahf
lock
orl
xor
movsl
pop
push
mov
adc
push
dec
enter
fldcw
lds
lock
sub
ljmp
and
xorl
nop
mov
imul
cmp
loopne
int
call
cmp
adc
or
adc
iret
push
in
ret
mov
ficoml
add
in
pop
mov
or
push
sub
lret
xor
jl
lock
mov
pop
int3
pushf
js
pop
fdivp
out
add
aas
or
and
lock
push
data16
push
fnstcw
dec
mov
icebp
jb
daa
cld
rolb
push
lods
jb
push
add
add
sti
lret
push
or
inc
into
or
push
push
popf
dec
ficompl
movl
mov
inc
pop
inc
aaa
jae
mov
pop
testb
fisubrl
ds
out
cmp
cld
or
fstpl
in
clc
test
sti
sbb
fstp
movsb
in
jno
out
lea
or
sahf
sub
hlt
sub
popf
cmp
jge
in
dec
inc
push
movsl
shll
sbb
fildll
mov
xchg
sub
xchg
mov
pop
repnz
dec
cmp
movsb
push
jnp
fsubl
js
imul
popf
addr16
add
addb
insl
cmpsl
inc
sbb
scas
push
push
loop
mov
jge
fsubs
mov
adc
imul
add
inc
enter
and
mov
adc
xor
mov
cmpsl
dec
repz
xor
fdivrl
pop
push
jae
cli
in
mov
jge
sub
xchg
loopne
nop
outsb
nop
imul
pop
mov
cwtl
cvtdq2ps
flds
lods
fcoms
fwait
jp
cltd
ss
push
fsubr
imul
insl
and
add
iret
outsb
mov
test
cmp
cmp
shrl
not
ja
lret
popl
arpl
adc
pop
xchg
jbe
push
and
xor
fadds
stc
icebp
clc
pop
stos
rcr
fsub
xlat
pop
test
and
addb
out
sub
mov
mov
mov
inc
xchg
mov
add
in
dec
xor
or
insl
stc
int3
sti
jns
je
imul
and
call
int
popa
repnz
dec
xchg
push
xlat
xchg
pop
fs
jbe
decb
push
sub
jbe
add
fmul
and
mov
iret
dec
push
in
xor
mov
lret
adc
rorl
mov
cmp
cmp
jne
jl
std
rorl
mov
js
int
sbb
stos
lods
push
mov
pushf
lret
mov
pop
pop
inc
or
mov
iret
or
testb
jecxz
hlt
test
fbstp
cli
push
int
cs
mov
push
xor
in
push
sbb
lret
les
cli
push
fstl
mov
lods
outsb
lods
aaa
adc
cmp
movsb
arpl
popf
jae
add
adc
push
andl
xor
bound
push
inc
pop
imul
dec
inc
mov
gs
mov
push
inc
pop
cmpsl
insb
pop
lea
push
xchg
stos
stos
push
cmp
cmp
and
lret
xchg
leave
dec
shll
add
repz
xor
push
inc
jle
push
cli
lret
jp
and
aas
mov
or
xor
cmc
push
jle
adc
outsl
xchg
fiaddl
jno
fisttpl
out
fsubs
aam
mov
jb
add
xchg
incl
pop
mov
mov
das
sti
ret
mov
loop
mov
icebp
fsubrs
sbb
sub
xchg
out
sub
lcall
push
sti
push
xchg
out
jns
mov
into
pslld
aas
add
cmp
arpl
dec
jae
and
jecxz
leave
cmp
test
sbb
push
mov
fcomps
andb
cmp
and
adc
pop
leave
inc
pusha
inc
scas
test
jne
sub
mov
dec
xor
jle
cmc
pop
iret
test
pop
repz
or
test
jle
addr16
cmp
cmp
loopne
repnz
maxps
call
scas
insl
dec
xor
adc
xchg
fnstsw
cmp
loopne
les
lea
into
push
dec
sub
mov
aad
out
xchg
lods
out
push
in
mov
lcall
repz
mov
mov
xor
or
pop
push
insl
xlat
mov
cmp
xchg
in
add
mov
mov
pusha
mov
ds
pop
lret
sub
cmpsb
mov
mov
pushf
sub
cmp
mov
mov
aas
add
add
jl
adc
mov
dec
or
movsb
ret
lds
adc
push
adc
push
sbb
out
inc
mov
push
dec
cltd
lds
push
adc
fmul
dec
inc
xor
mov
dec
pop
flds
sbb
dec
inc
push
jp
pushf
inc
dec
pop
enter
jae
cmovae
or
insb
daa
bound
sar
xlat
mov
mov
pushaw
push
ficoml
clc
cs
lods
out
lock
arpl
fisttpll
adcb
inc
add
testb
stos
dec
cmp
es
movsb
xchg
and
ret
mov
das
fwait
push
mov
inc
sti
pop
in
xchg
imul
movsb
dec
add
test
repz
sti
sbb
xchg
sti
xchg
je
jb
test
jae
cld
cwtl
pop
ds
jb
mov
jl
push
sahf
mov
aas
decb
jno
jns
adc
int
lahf
push
sbb
add
pushf
js
adc
lret
xor
mov
cli
lds
and
ss
cld
push
fcmove
mov
mov
sbb
xchg
fwait
ja
setns
push
jg
adc
mov
je
mov
inc
loopne
jb
into
sub
ficomps
push
leave
mov
dec
xor
sti
push
push
int
jle
and
dec
in
dec
xor
adc
mov
aad
push
mov
ja
jbe
mov
cld
js
fisttpll
in
push
gs
int3
pop
xor
xchg
sub
aad
mov
subb
and
loope
jae
sub
stc
scas
cmpsb
push
pop
or
adc
sub
xchg
and
mov
loope
call
adc
jp
fcompl
jb,pn
aad
cli
scas
aas
dec
mov
out
xor
push
mov
pop
push
cli
testb
adc
pcmpgtd
mov
insb
adc
cltd
push
mov
inc
adc
daa
sub
pop
cmova
lcall
lods
in
ss
aad
push
cmovg
or
jno
xchg
pop
outsl
cmp
pop
push
mov
push
imul
push
pusha
inc
repz
cmp
inc
mov
mov
fsubp
fidivl
mov
sahf
test
xchg
push
fsts
rorb
sar
sub
cli
test
cwtl
fisubrs
arpl
mov
clc
les
mov
lcall
xor
pop
push
xchg
dec
aas
mov
mov
lds
lds
mov
inc
fmull
push
inc
push
mov
lcall
dec
mov
push
jecxz
push
lods
sub
or
int
cmpsb
jne
sbb
cmp
mov
mov
pop
test
jnp
push
shll
xor
aaa
push
out
js
test
lods
ficoms
push
in
pop
xchg
sbb
arpl
rcr
cs
sub
inc
pop
popf
sub
sub
pusha
mov
lea
pop
jno
enter
xor
jmp
imul
shll
scas
push
fwait
dec
push
mov
std
inc
jmp
rorl
and
scas
insb
inc
push
cmpl
mov
dec
in
repnz
inc
add
jecxz
dec
lcall
xlat
mov
mov
loope
mov
adcb
or
mov
cli
xchg
aaa
in
pop
sbbl
pop
test
into
or
jge
mov
and
mov
in
cmp
notl
and
cmp
fs
in
adc
aaa
icebp
shrb
movsl
or
inc
sub
fsubrs
sub
rcr
ficompl
cmp
push
bound
lea
sub
jg
sbb
jne
sbb
xor
sahf
mov
cmp
rcll
mov
sbb
add
aad
mov
pop
popf
ret
jo
cmpsb
mov
mov
xchg
push
mov
loop
jl
mov
xchg
outsb
sahf
inc
push
sbb
cmp
sub
sub
nop
push
cmp
iret
xor
push
in
dec
fidivrl
jne
xchg
jp
add
jmp
shlb
inc
pusha
arpl
scas
sub
cmp
mov
pop
add
or
mov
inc
xor
push
lret
dec
pop
imul
adc
mov
inc
pushf
push
dec
andb
aaa
ret
in
mov
insl
sub
mov
mov
xchg
insl
xor
sbb
rorb
sub
inc
nop
push
xor
add
mov
subb
clc
xchg
push
notb
mov
popa
jbe
push
call
sub
test
mov
out
push
hlt
cmp
dec
cmp
pop
out
fisubrs
adc
inc
dec
dec
popf
repz
hlt
in
jno
lods
pop
push
inc
bound
mov
jb
mov
xchg
mov
or
loope
mov
push
rclb
mov
sub
ja
push
pop
iret
fcom
leave
movsl
cli
and
mov
in
inc
dec
mov
mov
xor
adc
jle
inc
int
inc
fstpl
sub
jbe
xchg
leave
and
jecxz
or
pop
adc
xor
jecxz
xor
mov
mov
movl
jp
shlb
in
or
out
stos
dec
mov
cmp
dec
pop
fsts
adc
lds
popa
addr16
sbb
aas
sub
mov
cmp
dec
mov
pop
jnp
stos
ror
pop
dec
fstp
adc
mov
jb
mov
mov
stos
repz
adc
sub
dec
mov
and
mov
lods
leave
adc
mov
inc
xor
sbb
cmp
adc
nop
add
jecxz
jge
sub
adc
jb
scas
fwait
movsb
adc
mov
and
loop
in
hlt
imul
adc
push
mov
addr16
sub
lods
fsubrs
inc
cli
mov
cs
jle
sbb
xchg
push
xchg
jg
sahf
aaa
jae
sbb
sar
push
or
jno
in
push
pop
ret
ret
cwtl
in
shl
out
ds
cmp
addb
jmp
jmp
and
adc
in
add
scas
mov
cmp
pop
xlat
leave
inc
xchg
repnz
pusha
test
fimuls
mov
or
jle
jns,pt
inc
and
sti
mov
adc
sub
dec
icebp
lahf
push
push
pushl
dec
xor
dec
cmp
test
mov
and
inc
scas
les
xor
fiadds
lcall
xor
fimull
insl
push
push
jnp
push
and
movb
jae
jae
movaps
mov
ja
push
icebp
imul
inc
popf
dec
out
xor
in
and
cmp
dec
ret
adc
jmp
xchg
in
inc
scas
lods
dec
rcl
ds
xor
ret
out
push
out
stos
lahf
cs
cmp
pop
add
add
subb
gs
popa
out
xor
mov
cmp
mov
add
cmpsb
lea
and
ja
shlb
add
popa
cmpl
xchg
ret
cmpsl
gs
ret
and
adc
jae
mov
dec
nop
dec
xor
jg
shlb
jbe
mov
testb
movsl
lds
negb
icebp
lret
mov
pop
push
adc
ret
or
leave
cs
pop
out
sub
pop
aam
xor
sbb
and
push
jmp
rcll
call
nop
or
xlat
mov
xor
stc
sti
rcll
dec
cmp
shl
and
push
xchg
mov
cmp
sub
add
outsb
aas
mov
hlt
jmp
mov
push
imul
add
push
adc
sbb
or
mov
mov
fcmovb
aaa
mov
icebp
aas
pop
pop
movsb
mov
sti
shlb
mov
lret
aad
ret
mov
lods
jecxz
ja
test
cmp
cmp
pop
mov
cmc
cmpsb
lret
fwait
cmp
faddp
push
aas
lods
mov
add
cmp
add
push
je
sbb
aad
cmp
out
nop
cmp
pop
shl
lods
cmc
mov
add
mov
cmpsl
clc
push
repz
movsl
jnp
nop
shll
mov
cmpb
in
sbb
and
push
out
adc
imul
add
add
leave
xchg
sub
mov
clc
pop
mov
mov
sarl
pop
cmp
sbb
cli
call
cmp
clc
fcoml
add
jbe
data16
lods
inc
fmull
clc
mov
test
push
jb
mov
in
repz
xchg
xchg
push
pop
dec
sbb
les
test
mov
xchg
int3
popa
subps
pop
das
and
push
js
lret
mov
scas
lods
lds
scas
sbb
and
mov
adc
mov
sub
jbe
push
movsb
pop
scas
js
adc
inc
or
cli
or
add
aam
scas
pop
daa
mov
adc
cmp
add
xor
loopne
push
sbb
xchg
mov
imull
dec
jnp
mov
and
lock
cmp
pop
cmp
mov
fdivrl
cli
push
cltd
outsl
popa
jl
sti
or
xor
and
xor
insl
arpl
stos
rolb
lods
push
movsl
and
dec
adc
and
movsb
sbb
or
jle
fiaddl
xchg
fnstsw
pushf
movsl
xorb
adc
sub
shrb
mov
pop
loop
lods
fs
cwtl
xchg
mov
push
or
dec
inc
or
shl
testb
jne
push
stc
insb
and
dec
sti
mov
hlt
xchg
xchg
rcl
adc
in
insl
les
mov
mov
cmp
addl
dec
push
clc
sbb
jnp
sbb
sub
or
lret
xchg
xor
inc
fsubl
lock
cmpsb
int3
scas
or
mov
dec
mov
popa
jmp
shll
out
xor
loop
loop
lahf
dec
mov
xlat
js
das
sub
testb
mov
sub
or
xchg
xchg
mov
jae
mov
xchg
cmp
out
push
sti
out
jbe
ds
jle
xchg
jg
xor
ret
push
push
lahf
cs
push
jecxz
jecxz
lods
jno
push
cltd
jle
popa
shr
cmpsb
pop
ljmp
sub
loopne
mov
xchg
mov
adc
xchg
cmp
cld
or
lods
adcl
in
jno
in
and
aad
adc
scas
inc
jo
mov
xchg
lods
in
gs
mov
dec
pop
test
in
inc
xchg
or
xchg
sti
aam
mov
es
cmpsb
mov
shr
arpl
cwtl
movsl
enter
fcomi
insl
mov
cmpsb
stos
dec
popf
mov
adc
fisttpll
push
mov
fdivrl
cmpsb
add
shrl
sbb
ljmp
sbb
stc
or
cwtl
adc
loope
int
adc
insb
pop
sub
rclb
sahf
mov
xchg
mov
loope
test
sbb
adc
hlt
cpuid
mov
aad
cli
stos
and
sbb
stos
lret
xor
test
mov
jecxz
jb
lret
fimuls
es
inc
mov
imul
aas
dec
popf
rorb
or
fiadds
xor
out
lea
pop
into
cmpsb
mov
push
push
push
lea
sub
iret
mov
andb
push
fs
jae
sub
shll
xchg
jl
inc
adc
ret
sahf
and
aaa
fsubr
std
das
mov
dec
push
test
xor
popf
andl
mov
jg
iret
sub
add
mov
pop
es
pusha
data16
jmp
ds
lret
sbb
aas
out
cmc
adc
mov
pop
or
pop
sub
addl
and
sbb
sbb
pop
repnz
adc
sub
je
sub
sarb
and
scas
mov
push
mov
jmp
mov
add
and
mov
jno
dec
popf
aam
pop
fstps
sbb
mov
add
adc
jne
push
rcr
adc
mov
outsb
cltd
xor
inc
inc
sub
xchg
mov
push
mov
loopne
cltd
dec
jb
sub
fmuls
insl
int
into
push
scas
pusha
push
aas
arpl
add
or
mov
cmpsb
in
or
or
add
mov
lahf
lahf
and
ret
jecxz
mov
xor
scas
je
addr16
xchg
jae
addr16
xor
xchg
ja
mov
mov
mov
in
pop
sbb
mov
jno
add
lods
sub
jl
fcompl
mov
sub
dec
cmpsb
outsl
movsb
or
sub
xchg
int
jg
outsl
mov
inc
dec
jo
dec
loopne
mov
repnz
push
cmp
nop
add
adc
mov
ficoms
mov
or
sarb
fidivrl
bound
push
inc
inc
or
mov
fcomps
inc
in
xor
shrl
not
pop
js
aaa
push
jecxz
out
cmp
cmp
fiaddl
out
test
fs
sub
inc
inc
sub
mov
sub
shrl
lret
imul
js
add
push
adc
das
sub
ljmp
outsb
push
jg
mov
push
or
aas
lret
fsubr
mov
dec
push
jne
add
fwait
cld
hlt
ret
dec
and
or
pop
in
loope
in
mov
adc
loope
adc
jmp
adc
orb
xchg
pop
sbb
adc
push
and
pop
inc
pop
roll
cmp
cltd
dec
add
repz
adc
jbe
xchg
mov
mov
pop
lock
lcall
into
jo
daa
inc
int
lret
mov
pop
xchg
test
sahf
loop
xchg
xchg
ret
sub
push
lahf
add
call
movsl
sub
mov
loop
rorb
outsb
scas
push
fcmovbe
loope
pop
dec
mov
aad
xor
jnp
jg
and
inc
les
dec
mov
jo
adcl
leave
push
gs
lcall
sub
or
jg
int3
ljmp
nop
xchg
cs
sbb
xor
sub
xchg
xor
or
pop
fistps
xchg
loope
fsubrl
cwtl
test
jle
push
incl
xchg
fdivp
and
lret
fcompl
jne
aas
mov
lahf
in
fprem
mov
or
mov
xlat
cltd
mov
sub
aad
call
mov
clc
sti
add
jmp
xor
jp
pop
cs
fdivr
sarl
es
push
pop
imul
idiv
jbe
fistl
mov
in
aas
frstors
pusha
push
pop
sub
mov
mov
inc
lcall
inc
ss
sahf
popa
insb
fld
shr
mov
sub
iret
inc
loopne
pop
adc
call
imul
or
sub
dec
push
dec
int3
orb
mov
scas
jp
push
mov
fmul
inc
pop
dec
mov
xadd
ficoml
pop
lcall
mov
shl
xchg
sahf
stc
repnz
jno
out
leave
repz
jb
mov
xor
loope
pop
dec
icebp
fmul
cmp
mov
shrl
ficomps
dec
mov
mov
cmpb
fdivrs
push
dec
bound
inc
cld
sub
addr16
outsb
cmpsl
lock
jecxz
sbb
inc
iret
mov
dec
in
cld
push
loop
test
pop
xchg
sub
icebp
cs
jecxz
into
xor
push
jge
mov
mov
icebp
pop
xor
lcall
and
les
js
ja
lea
inc
sbb
xor
shlb
xchg
pop
mov
push
cmp
mov
cltd
stos
sbb
cltd
outsb
cmc
fnstcw
cs
ret
xchg
out
pop
push
dec
lret
not
push
push
sbb
repz
xchg
add
dec
push
push
adcb
mov
inc
lret
add
mov
ret
insl
repz
pop
dec
pop
mov
in
mov
add
mov
inc
jno
mov
pop
cmp
cmp
and
xchg
mov
xchg
cmp
jg
mov
and
es
aam
cmp
mov
leave
popf
inc
or
loope
and
nop
loopne
iret
cmp
sub
and
mov
or
push
mov
sub
aas
clc
ja
lds
cmp
mov
mul
pop
xchg
lea
js
aam
notl
sti
and
fcoms
or
mov
mov
adc
cltd
je
mov
cli
fwait
adc
nop
test
and
jbe
das
scas
lret
dec
push
pop
lea
fucom
xchg
and
shr
in
insb
pop
pop
sti
inc
mov
jo
lock
loope
out
pushf
loope
aad
fcmovnbe
push
fwait
stos
gs
sub
cs
pop
negb
out
shrd
decl
incl
xchg
out
mov
fwait
jbe
rcr
cmp
mov
pop
and
int3
leave
fsubs
pop
test
jns
mov
sahf
cmp
xlat
repnz
pusha
or
and
shll
stc
stos
inc
sub
imul
and
test
pop
lds
xchg
pop
jmp
imull
adc
cmc
pop
test
dec
aam
sahf
sub
or
imul
lock
aam
mull
pop
ljmp
jns
call
xor
cmpsl
inc
out
inc
xchg
cli
clc
jnp
sarb
fstpt
sbb
out
jp
sti
sahf
xor
sbb
in
pcmpeqd
mov
xchg
add
add
ficoml
lahf
fbld
bound
inc
ror
mov
data16
data16
xor
jne
fwait
mov
popa
das
nop
add
arpl
mov
and
cmp
cmc
pop
leave
call
std
inc
mov
stos
es
movsl
gs
xor
adc
fildl
mov
mov
mov
fisttpll
mov
mov
call
xor
outsb
cmp
fldl
sub
roll
mov
rorl
ljmp
jecxz
jle
pop
fistl
jnp
jne
sbb
sahf
or
or
ljmp
outsb
mov
sub
xor
shl
imul
adcb
pusha
inc
mov
in
xchg
mov
mov
jno,pt
add
mov
sbb
rol
lock
jecxz
xor
inc
mov
ljmp
js
xchg
mov
dec
mov
jo
push
mov
jmp
cmp
test
movsl
dec
xor
out
subl
pop
sbbb
int3
pop
xchg
push
push
cs
pop
popf
mov
jecxz
pop
sbb
xor
lea
adc
dec
rorl
inc
inc
fcomps
cmc
iret
adc
and
xchg
aaa
adc
icebp
dec
in
out
fdivl
dec
mov
in
mov
subb
sub
sub
mov
test
add
leave
leave
aas
lret
dec
adc
ss
out
nop
cltd
out
push
outsl
add
cmp
mov
mov
mov
fwait
mov
pop
push
and
mov
sbb
dec
or
cmp
pop
testl
lret
pop
inc
lahf
aaa
movsl
and
inc
aaa
add
pop
push
nop
test
mov
ds
pop
mov
inc
inc
xchg
cmp
scas
or
xor
sub
insl
and
pop
adc
push
test
push
adc
xchg
movsb
shlb
pop
cmp
addb
loope
push
lock
mov
je
mov
adcb
and
fdivl
or
mov
jg
repz
mov
scas
inc
pop
push
inc
ja
fildl
dec
loope
rcrl
pusha
cmp
cmp
adc
and
loope
jb
sbb
adc
in
pop
xor
subl
cwtl
fcomi
ret
dec
fidivrl
add
fcmovb
push
popf
ja
sbb
js
xchg
add
pusha
jb
jl
push
mov
sub
scas
sti
push
xchg
sub
cmp
sbb
icebp
jo
mov
out
xor
jne
mov
jmp
sti
push
jge
cli
test
sub
rcrl
std
bound
aad
cmp
jnp
mov
js
mov
out
xor
pop
cmp
rolb
jge
mov
lahf
clc
sub
dec
enter
mov
clc
fwait
cli
insl
lods
rep
sbb
sub
aam
jl
insl
xchg
cmp
shrb
mov
xchg
iret
cs
adc
cmp
mov
and
sbb
sbb
imul
sbb
or
inc
popf
dec
cmp
or
scas
popa
repnz
add
push
mov
es
jecxz
pop
mov
daa
jmp
sbb
in
je
mov
in
jp
dec
stos
pop
xlat
push
push
lret
or
aas
or
mov
and
cltd
and
mov
fiaddl
push
popf
cmp
mov
jmp
popf
dec
imul
and
mov
mov
mov
jb
dec
pop
xchg
inc
dec
and
sub
clc
cmp
shlb
add
mov
xchg
stc
stos
lods
and
scas
sub
gs
int3
sbb
int
pop
push
mov
pop
cs
and
and
cmp
nop
jno
fcomip
lods
stos
mov
fwait
cwtl
dec
mov
and
sbb
scas
or
dec
mov
jmp
xor
cld
arpl
fisubl
inc
mov
in
adc
mov
sub
jmp
jbe
fisttpll
bound
push
test
push
sbb
mov
nop
or
and
ds
rclb
mov
in
dec
sub
rcrb
out
dec
test
rolb
enter
movsl
cs
dec
imul
pop
push
mov
jae
stos
mov
xlat
jle
mov
sub
jmp
popl
mov
out
aas
jb
aad
ret
insb
pop
dec
cmc
not
pop
sbb
and
mov
scas
aas
rcll
shl
pop
out
cmp
cmpsb
sti
pop
cmp
ljmp
sbb
jb
mov
cmpl
mov
push
push
pcmpgtd
jle
movsl
mov
push
repnz
xchg
inc
stos
inc
push
jo
lret
dec
lea
mov
xlat
mov
dec
jne
lcall
adc
mulb
pop
shll
sub
loop
pop
notl
andl
fimull
lods
cmp
jae
mov
ret
xchg
sub
orl
jle
jge
ficoml
dec
in
sub
push
fs
out
clc
sti
ret
fnstenv
stc
cmpl
rolb
repz
ficomps
aas
lds
pop
xchg
in
mov
or
js
xchg
insl
out
aad
movsb
loope
or
fdivrl
out
and
jne
mov
enter
mov
mov
ffree
shll
xlat
sbb
push
loop
or
sbb
pop
movsb
xchg
inc
push
jmp
fildll
stos
aad
sub
repnz
mov
loope
jge
cmpsl
and
movsl
mov
sub
shlb
cld
aaa
cmp
sbb
cmpsl
mov
mov
inc
insl
sarl
mov
jmp
push
popa
outsb
mov
stc
les
or
popa
push
pop
loopne
jnp
push
cld
jg
push
pop
xchg
jno
lcall
or
add
jmp
mov
add
xlat
mov
sub
sbb
cmp
leave
push
xor
adc
dec
imulb
test
push
out
inc
sbb
mov
insb
test
cmp
adc
jno
xchg
mov
lock
rcr
scas
mov
push
push
cmpsb
lds
mov
dec
jle
pop
into
mov
adc
mov
cmp
test
ret
mov
rep
fisttpl
sbb
jnp
fstpt
cwtl
jb
dec
scas
push
pop
dec
jae
mov
cltd
ds
and
add
dec
sbb
and
mov
sbb
lret
fnstcw
push
test
mov
mov
and
cmp
and
call
cmpsb
push
add
and
mov
jb
adc
pop
xchg
xchg
imul
int
stc
cs
cwtl
les
in
jo,pn
and
mov
stos
xor
mov
call
mov
mov
jne
jge
fs
push
mov
or
outsb
sub
stos
movsl
aad
mov
mov
add
mov
dec
sti
pop
rcrb
xchg
inc
icebp
insb
mov
test
xor
dec
push
and
push
lcall
sub
lcall
pop
pop
aas
rorb
sbb
xchg
or
std
aaa
push
xchg
dec
xchg
movsl
mov
jg
mov
or
in
jl
daa
shlb
or
push
mov
sub
pop
jns
adc
lods
lea
mov
jmp
mov
mov
mov
xchg
lcall
sub
dec
gs
jmp
fdivrs
ja
test
adc
clc
xlat
pusha
pushf
xor
add
std
outsl
inc
daa
xor
inc
inc
pop
jbe
adc
fidivrl
shll
cmc
ljmp
test
xor
or
add
fwait
dec
mov
pop
or
ja
jge
pop
ret
inc
xchg
jb
cltd
mov
movsl
out
leave
dec
orl
rorl
in
sar
mov
lds
ret
mov
out
jae
mov
lcall
pusha
add
or
in
xor
add
jo
in
repnz
push
mov
pop
pop
jmp
sub
and
sub
pop
xor
aad
or
adc
jb
outsb
push
ret
mov
mov
out
adc
pop
mov
sub
repnz
cmc
mov
leave
dec
fiaddl
cmp
push
test
adc
sub
add
xor
add
hlt
cmp
xor
cmp
mov
popf
scas
aad
xchg
iret
fwait
pop
stos
xor
pop
cmp
adc
push
mov
jne
sbb
or
push
scas
pop
sub
jns
sbb
test
insb
leave
sahf
mov
add
aas
les
movl
jne
clc
mov
xchg
std
mov
bound
mov
call
lret
dec
cmp
or
xor
jle
imul
fwait
hlt
jae
push
ret
popa
mov
lods
jl
outsw
stc
cli
sub
jmp
outsb
xchg
adc
pop
xor
loope
mov
fwait
pushf
jmp
mov
sahf
shll
mov
orl
push
popf
jo
fwait
out
mov
bound
iret
in
add
mov
jne
inc
pop
jno
mov
lcall
mov
sub
sti
test
dec
int3
dec
pushf
subl
dec
adc
sti
stc
sub
enter
mov
testb
lret
fdivs
lods
pop
jnp
jnp
pop
mov
mov
push
xor
inc
enter
into
pop
divl
jge
push
and
or
in
test
sahf
pop
push
inc
icebp
hlt
shl
icebp
fwait
fs
aad
and
jb
add
popa
fmuls
jmp
and
negb
popl
mov
cmpsb
pop
dec
scas
popfw
mov
or
jno
mov
sahf
fwait
mov
inc
jge
hlt
push
aam
and
add
lahf
add
inc
in
xor
lods
imul
pushf
js
mov
mov
sbb
or
inc
lea
rcl
sbb
dec
sbb
in
xchg
fiaddl
and
je
xchg
xor
xchg
sar
lods
cmpsb
lods
dec
mov
arpl
xchg
jl
xchg
ret
pop
xchg
mov
sub
xchg
fs
mov
xlat
sbbb
add
and
add
sar
xchg
test
pop
iret
ss
and
mov
insl
add
xchg
lahf
nop
aad
fisubrs
push
jno
pusha
test
or
gs
idivl
jg
push
pop
xchg
jns
jmp
out
jns
into
leave
jmp
sub
sub
mov
xor
xor
xlat
fisttpll
mov
and
sbb
inc
les
lods
cmc
dec
jl
aam
negl
jnp
cld
popf
je
jmp
xchg
test
test
adc
in
jge
push
test
adc
addr16
movsb
into
push
cmp
aas
in
roll
scas
mov
mov
aad
test
cmpsb
sub
cltd
add
mov
mov
pop
ss
adc
inc
cmpsb
dec
js
jne
pop
cmpsl
xor
lret
mull
cmpsl
sub
leave
addl
insl
leave
mov
andb
add
jns
mov
roll
xchg
mov
cmp
in
push
aam
push
data16
push
imul
repz
mov
xorl
or
cs
and
inc
out
mov
sbb
xorl
xchg
jnp
dec
push
adc
add
or
into
rol
push
xchg
in
or
loopne
outsb
mov
loopne
push
jecxz
mul
ja
aam
push
cmp
mov
cmc
inc
imul
cwtl
xor
mov
mov
mov
adc
mov
shrb
out
ds
cmp
stos
mov
xchg
pop
gs
rorb
movaps
test
and
xlat
std
pop
not
sub
mov
xchg
cmc
shlb
or
xchg
movsb
add
or
sub
ret
pop
sub
dec
cmp
sub
in
out
inc
sbbl
leave
pop
shrl
aas
cmpsb
cmp
test
repz
or
int
out
push
inc
int3
push
and
gs
jge
push
xor
mov
push
jne
shl
scas
xchg
pop
in
lea
jg
dec
jecxz
xor
push
mov
and
lods
mov
popf
movsb
mov
adc
add
xor
sub
mulb
cmc
out
imul
add
outsl
add
dec
sbb
sub
cmc
lret
mov
cld
fistl
fisubrl
mov
das
sbb
cs
sub
pop
roll
jae
xorb
iret
stos
mov
push
leave
add
jo
insl
jns
fdivrs
push
inc
add
mov
mov
movsb
inc
dec
iret
or
jnp
sbb
adc
rol
jmp
hlt
xchg
dec
sbb
cmpsl
es
fcmovnb
imull
add
xchg
push
or
inc
adc
or
jns
xor
aad
mov
inc
ficoml
je
dec
or
dec
lds
lret
sbb
cmp
sbb
test
sbb
insl
data16
loopne
inc
test
and
les
out
jg
arpl
xchg
mov
sbb
and
gs
insl
dec
lods
loop
cltd
cs
push
sti
std
pop
fdivs
jnp
push
xchg
cmp
mov
mov
mov
xor
xor
cs
cmp
push
les
cwtl
xchg
lret
clc
jbe
xchg
sub
xor
test
mov
inc
add
or
movsl
add
jmp
jns
lds
jae
js
mov
shrb
push
jle
fwait
inc
out
je
sub
into
repz
rorb
sbb
cwtl
or
pop
insb
cmp
test
stos
inc
int3
movsb
repnz
xor
add
enter
test
mov
push
adc
dec
cmp
xchg
lods
xor
fwait
mov
mov
in
mov
xchg
xchg
jl
jno
sub
inc
test
cmp
movsl
movsb
loope
mov
xchg
lret
ds
inc
mov
roll
mov
lret
push
add
dec
lea
dec
or
pushf
push
fs
xor
mov
rcrl
add
pushf
inc
mov
push
pop
out
les
jmp
or
push
sub
cmp
mov
sbb
insb
dec
sub
cmp
pushf
xchg
call
mov
ljmp
mov
jecxz
insb
sarb
xchg
inc
inc
or
push
push
add
push
rolb
popa
fnstcw
or
lds
lods
nop
mov
aam
fisubl
stc
sbb
xchg
out
jmp
xor
bound
sbb
js
and
add
or
or
aad
sbb
lahf
lahf
sbb
fdivl
xchg
adc
cmc
adc
cmp
or
gs
mov
int3
jl
mov
rcrb
xor
fisttpl
dec
pusha
scas
mov
clc
cltd
adc
std
aam
adc
cs
les
in
push
je
clc
inc
js
pop
adc
or
adc
rcr
jnp
xor
dec
sbb
imul
sub
fmulp
stos
js
mov
xchg
repz
movsb
ret
cltd
loop
loopne
mov
push
incb
cld
data16
or
insb
cmpsb
inc
mov
mov
xchg
ret
push
hlt
inc
inc
cmp
loopne
aam
xchg
mov
sarb
cmpsb
lock
ss
cmpsl
call
aad
test
dec
jle
xor
push
test
dec
sub
inc
adcl
jge
lret
push
cltd
add
insb
add
aam
test
mov
jl
js
les
dec
xchg
test
ja
xchg
dec
xchg
xor
sub
and
push
and
jg
xchg
or
jnp
fs
or
dec
dec
sahf
jnp
and
sub
shll
popf
insl
les
pfrsqit1
cmc
nop
dec
or
jg
mov
stos
dec
cmp
out
pop
notb
imul
pop
rorb
push
test
jmp
push
inc
in
push
shlb
mov
mov
sbb
out
jl
cmp
ljmp
and
lods
pop
dec
jle
mov
test
rorb
mov
push
loopne
and
add
push
ret
pop
or
popf
loopne
and
mov
mov
lods
pop
jne
dec
dec
jae
cld
and
mov
test
mov
popf
dec
fsubp
cli
mov
pop
mov
mov
push
addr16
dec
mov
mov
out
jne
xchg
repz
mov
push
movb
es
mov
xchg
jo
xchg
mov
pushf
xor
cld
add
dec
rcrl
lock
aam
imul
pop
lods
movsl
clc
orl
idivl
mov
xor
adc
xchg
pop
std
mov
or
das
mov
mov
call
add
xchg
in
jmp
jnp
cmp
xchg
or
cmpl
adc
mov
inc
sub
or
mov
xor
dec
icebp
dec
ret
imul
or
adc
cli
ret
or
lods
push
mov
dec
jne
gs
outsb
in
les
cmp
int3
scas
pop
mov
xchg
in
sub
mov
aad
and
adc
out
bnd
sbb
in
mov
mov
fwait
cmpsl
cmpsl
cwtl
out
or
enter
mov
jno
cwtl
shl
inc
arpl
add
scas
ja
push
pop
jbe
lock
jae
pop
daa
push
scas
aam
call
mov
sbb
mov
jmp
sbb
add
and
sub
push
cmp
cli
sbb
callw
in
cmp
mov
cmp
out
pop
es
shlb
add
ficoml
in
cmp
push
adc
mov
lcall
fldl
pop
ljmp
aam
mov
clc
rcll
sbb
in
and
cmp
popf
add
or
push
rolb
inc
mov
ljmp
add
test
jmp
xchg
mov
pushf
dec
bound
xor
cs
cwtl
push
adc
xor
mov
mov
mov
cmp
xchg
negl
sbb
mov
daa
adc
or
inc
cmp
cmc
push
mov
pop
mov
sbb
push
push
mov
jp
testb
jne
push
push
repz
dec
mov
fsubp
out
xor
jnp
jmp
iret
sub
jmp
cmpsb
or
scas
stc
hlt
popa
add
das
inc
xor
sti
lahf
push
sbb
fisubl
sub
pushf
popa
daa
mov
or
push
rcrl
addr16
adc
orl
fsubrl
adc
subl
mov
jbe
in
pop
lods
jg
or
loop
in
mov
xchg
xor
and
lods
jge
xchg
xchg
mov
lcall
and
scas
out
xor
inc
int3
stos
inc
popa
mov
jns
sarb
mov
test
lds
je
cmp
xor
lock
fbld
jge
ljmp
dec
xor
pop
adcl
adc
inc
divl
pop
pop
shll
cmp
and
int3
lret
mov
aad
and
sub
or
mov
xchg
push
std
pop
jb
cmp
jo
psrlq
and
push
cmp
fdivl
js
fs
pop
and
jno
imul
push
dec
cs
add
inc
sbb
mov
je
addr16
int3
pop
adc
stc
jb
adc
mov
add
outsb
daa
icebp
sub
mov
iret
mov
gs
xchg
cs
and
push
leave
pop
mov
add
add
leave
adc
iret
xchg
inc
mov
pop
or
pop
cmp
jae
pop
or
jle
outsl
xor
adc
hlt
sbb
fisubs
jmp
xorb
sbb
stc
xchg
sarl
fcoms
mov
mov
dec
mov
mov
add
inc
int3
xor
popf
imul
loope
fwait
js
sbb
imul
adc
hlt
in
in
xor
mov
mov
scas
jg
iret
xchg
push
sbb
mov
fistps
jne
jecxz
cli
sbb
or
pushf
jmp
sbb
fdivs
add
lret
cs
imul
shrl
cli
in
jle
rcr
sti
jae
mov
mov
inc
jmp
mov
and
outsl
sbb
jle
pop
push
jp
shll
inc
mov
scas
mov
imul
fistl
cmc
mov
js
lret
sti
cmp
dec
xlat
pop
sub
and
insl
lock
ja
rolb
mov
pusha
fdivl
xor
push
inc
cltd
sbb
jmp
xchg
push
fs
jne
pop
pop
jb
jle
jge
out
jnp
mov
shll
jnp
adc
aam
jae
mov
mov
dec
jecxz
in
cmp
or
xchg
add
iret
cmp
mov
and
std
mov
adc
shl
sub
mov
js
add
stc
outsb
push
aas
xchg
add
int3
popf
push
aas
insl
cmp
pop
addr16
inc
sub
mov
adc
and
outsb
jns
xchg
dec
ror
mov
insl
addl
push
cmp
xlat
xchg
cmc
or
mov
xor
xchg
mov
dec
call
add
pop
cli
imul
xchg
mov
inc
dec
jecxz
inc
cmpl
sbb
mov
fsubl
push
je
adc
hlt
arpl
add
das
loopne
pop
fstp
addr16
idivl
rclb
push
inc
in
inc
iret
rcl
lcall
push
imul
xor
data16
dec
mov
stos
mov
inc
sarb
lahf
sub
add
adc
add
mov
outsl
dec
mov
outsb
pop
push
fwait
imul
xor
popf
shrb
cmp
jo
dec
pop
inc
push
inc
cmpsl
sahf
inc
lcall
popf
or
pop
mov
leave
dec
inc
pop
aam
pop
in
rcll
faddl
jge,pn
mov
loopne
leave
jmp
sub
insb
loope
orb
scas
pop
rep
daa
sbb
stos
xor
clc
xchg
lret
sbb
je
into
add
mov
shll
fwait
movsw
andl
adc
orb
cmp
out
hlt
or
mov
or
std
xchg
insl
inc
xor
mov
rorl
sbb
xchg
cli
sbb
int3
mov
xor
jmp
fdivrl
sbb
inc
pop
shrb
insl
les
lret
cmpl
mov
aas
jne
pop
cmpl
fstpt
fsts
and
insl
jbe
or
jge
inc
push
movsl
insb
push
std
and
mov
sub
xchg
mov
jne
add
inc
jbe
dec
and
jbe
in
xor
stos
insl
xorb
loop
aam
data16
jmp
xchg
lret
cli
ss
loop
aas
inc
ja
mov
pop
cmpsl
adc
inc
das
add
cmp
mov
scas
mov
sbb
mov
cmp
push
out
lcall
dec
and
js
cmp
call
repz
mov
mov
and
lret
xchg
sub
aas
cltd
icebp
push
sahf
push
sub
jle
insl
pop
xor
xchg
adc
popf
insb
in
aad
ljmp
fisubl
leave
in
mov
out
push
jge
bound
stc
daa
cmp
xor
inc
add
jecxz
int3
insb
pop
loope
push
sbb
mov
xorb
inc
or
lds
pusha
xchg
cmc
adc
jecxz
mov
addb
push
lcall
adcl
jo
test
xchg
push
shll
lret
iret
inc
ja
xor
xchg
sar
mov
adc
mov
lods
sbb
push
xor
ljmp
gs
stos
adc
lea
jb
or
pusha
testb
scas
hlt
ror
sbb
mov
pop
cmp
pop
dec
mov
xor
jae
and
inc
pop
gs
shll
push
lcall
jecxz
jecxz
jbe
adc
xor
sub
xchg
idiv
pop
fiaddl
jbe
pusha
imulb
pop
dec
enter
inc
push
out
in
xor
ret
andb
sbb
in
call
cmp
loopne
jno
in
xlat
xor
das
mov
mov
enter
mov
insb
cld
adc
dec
adcb
inc
inc
xlat
cld
shr
jae
sarb
ja
mov
mov
inc
mov
mov
cmp
loope
mov
leave
lahf
das
call
xor
orb
and
xor
mov
lret
les
aaa
add
cmp
and
pushf
pop
xchg
jbe
das
sub
outsb
movsb
inc
pop
clc
inc
aad
jno
jge
sbb
les
pop
add
jl
and
push
or
add
xchg
out
lods
dec
cwtl
mov
or
notb
js
pop
test
out
lds
cltd
mov
nop
pop
inc
ljmp
popf
mov
sbb
jle
sub
sub
lods
push
in
sahf
aad
mov
iret
cs
xchg
jno
mov
movsl
and
jle
test
in
xchg
orl
sub
loop
mov
adc
pop
es
cs
or
xor
lea
push
pop
repz
push
loope
std
in
cmpb
les
add
fistps
iret
fldl
sbb
inc
scas
inc
jp
test
in
mov
inc
mov
inc
bound
xor
push
jo
add
pop
mov
xlat
cmpsb
xchg
inc
outsb
and
in
imul
cmpsb
hlt
sti
add
dec
jle
push
pslld
add
call
add
and
sub
add
mov
and
jno
aas
xchg
push
jle
mov
xchg
add
rol
mov
call
jne
pop
adc
pop
jnp
arpl
sti
and
jmp
cmp
mov
push
roll
imul
cmpsl
xor
sbb
cld
in
dec
pop
popf
sbb
pop
xor
sti
xlat
jmp
jb
xchg
pop
shr
and
in
mov
adc
adc
das
mov
xor
test
jecxz
sbb
and
xor
mov
cmp
loop
mov
xor
jno
jge
ja
cld
subl
cmc
adc
adc
outsb
stos
arpl
addr16
mull
scas
hlt
dec
in
xor
push
mov
sti
int
xchg
das
push
pop
ficomps
cmp
mul
xlat
nop
add
mov
sbb
rorl
xor
vmovsd
jp
xorb
sub
rdpmc
cmp
cmp
imul
jns
out
jmp
and
cs
bswap
xchg
mov
inc
stos
jmp
stos
out
adc
cltd
ret
and
fstpl
mov
pop
cmpsl
in
daa
ss
or
ljmp
outsl
add
ja
pop
in
adc
rolb
repz
ds
notl
or
push
dec
std
inc
mov
sub
call
jmp
mov
scas
xchg
pop
ret
in
inc
xor
adc
cmc
xchg
sbb
in
test
cmpl
jle
jnp,pn
int
mov
inc
gs
imul
lock
jge
nop
xchg
or
mov
iret
add
fists
mov
jle
fwait
jns
jle
xor
orb
push
ret
sub
fwait
sub
cmp
or
loope
sub
addr16
inc
jge
sahf
sbb
fnsave
mov
ja
cmp
cmp
repz
leave
pushf
mov
mov
cmp
lods
repnz
adc
pop
lock
push
xor
mov
into
cld
hlt
das
sub
jbe
fs
xchg
inc
sti
cltd
gs
cwtl
loope
leave
mov
pusha
jecxz
jl
fsts
push
xor
push
scas
pop
adcb
sub
rcl
push
aad
xor
adc
sbb
jecxz
lods
testb
sub
mov
fcoml
push
pop
iret
outsb
jg
jle
and
sbb
cld
repnz
insl
jne
iret
or
mov
mov
and
sbb
push
pop
jno
arpl
adc
nop
mov
rcll
cs
inc
lcall
xchg
mov
xchg
jp
add
enter
sbb
mov
cltd
sub
jns
jge
mov
stos
decl
push
lock
mov
bound
push
in
pop
adc
xchg
xor
adc
mov
mov
dec
dec
jle
sbb
mov
sub
ljmp
jle
sbb
shl
mov
adc
lods
subl
mov
data16
adc
xchg
cmp
inc
frstor
mov
sbb
jmp
repnz
in
pop
jp
xchg
pop
lahf
cli
xchg
loope
sbb
pop
jns
mov
xchg
mov
push
std
movsl
dec
mov
jns
pop
stos
testl
js
xlat
fwait
jp
jg
xlat
adc
and
lcall
lods
pop
cmp
cwtl
fnstsw
cmpsl
jb
jae
fdivr
sbb
adc
cmp
jae
std
pop
imul
pop
cmp
jl
mov
and
test
stc
jno
shl
mov
cltd
jmp
gs
call
mov
out
jne
js
and
sbb
mov
aaa
iret
xor
xor
push
test
les
jne
aas
fstps
jle
out
fucomi
jge
cli
cmp
jne
aas
mov
mov
repnz
xor
mov
lcall
andb
insb
pusha
cwtl
rcrl
fimuls
xor
xchg
or
push
loop
push
sbb
mov
dec
dec
ret
mov
sahf
ficoms
add
test
fcomps
sub
xor
lahf
or
pop
mov
scas
inc
mov
push
pop
pop
xchg
popa
add
pop
mov
int3
mov
lahf
sbb
mov
int
cmc
orl
jbe
scas
jmp
test
jge
xor
pop
notl
and
test
or
insb
es
lds
arpl
mov
xchg
cmp
test
cltd
xor
mov
call
jmp
js
mov
adc
fs
loop
mov
pusha
inc
mov
sbb
mov
shrl
cs
fcoms
out
roll
decl
jg
sti
fs
imul
cmp
ds
test
stc
lcall
lods
pop
ficomps
adc
jle
xchg
shll
xchg
insl
xchg
dec
pop
test
pushf
nop
popa
mov
inc
daa
inc
test
imul
xchg
dec
lock
sub
enter
add
fst
shll
xor
sbb
xchg
leave
pushf
leave
pop
jge
mov
ds
push
pop
movsl
mov
sub
cmp
push
orb
aad
std
cmp
fistpl
jb
fsubp
mov
pop
or
jl
xchg
outsl
sbb
out
xor
and
shrl
xchg
jmp
andl
cmp
cli
hlt
daa
push
adc
add
fwait
dec
ja
ss
stc
into
push
push
or
out
out
rcrb
inc
outsl
mov
out
iret
std
ja
jp
inc
mov
dec
and
test
dec
lea
jae
cmp
xorl
movsl
iret
push
add
pop
loope
repz
pop
ret
repnz
xchg
ret
icebp
and
dec
inc
fcoml
and
mov
repnz
mov
leave
inc
or
mov
push
xor
es
negb
adc
js
outsl
insb
insb
insb
xor
push
dec
repz
in
fimuls
pusha
sub
push
push
push
clc
pop
test
inc
cs
push
test
cld
fcomps
stos
ja
lods
out
jp
bound
push
jae
push
jns
xchg
push
test
cmc
dec
or
xor
fsubs
mov
mov
outsl
mov
xor
or
pop
fwait
jne
in
adc
jecxz
and
imul
xchg
aaa
pop
lretw
call
jae
mov
dec
jbe
mov
push
dec
xor
in
std
mov
mov
stc
imul
es
lods
mov
mov
fdivr
stos
jbe
std
bound
es
in
xor
out
xchg
jmp
insl
frstor
cmovge
jl
lea
push
push
scas
rcrl
inc
inc
filds
pop
jmp
push
mov
cmp
mov
inc
sub
sbb
push
inc
lods
sub
hlt
data16
scas
imul
mov
cmp
xchg
push
fadds
int
movsb
cmp
xchg
cmc
lea
xor
or
jno
int3
lret
fs
add
push
gs
jno
jl,pt
cltd
ret
loopne
imul
iret
xchg
xlat
and
sub
or
std
adc
call
ja
adc
cmp
xlat
push
or
push
cmc
mov
stos
xchg
iret
jo
in
xchg
dec
inc
aas
fidivs
xor
pop
sbb
stos
push
jg
cmp
xchg
jo
push
dec
fdivrp
jge
inc
jo
ficoml
pop
lds
push
push
sbb
xorb
adc
in
sbbl
push
sar
inc
out
rorb
pop
dec
es
imul
or
sub
add
dec
push
pop
or
jl
mov
pop
fcoms
add
push
mov
daa
lea
into
ret
sbb
rol
dec
ficompl
insb
lcall
xchg
in
dec
adc
mov
popa
call
mov
ret
jecxz
andb
sub
mov
test
ds
adc
mov
fwait
js
movsb
std
add
ror
push
xor
ficompl
sbb
push
push
xchg
sbb
pusha
jg
pop
sbb
arpl
pop
and
js
xchg
jns
lret
pushf
mov
push
xor
cmpsb
cmc
xchg
sahf
sbb
mov
push
inc
sbbb
into
mov
ljmp
stos
or
stc
clc
mov
sbb
xchg
lahf
js
xchg
insl
lret
xchg
xchg
sbb
pop
inc
in
loopew
lcall
cmp
addr16
xchg
cwtl
xchg
inc
sub
jo
xchg
insb
lea
mov
fsubr
inc
dec
pop
sub
jns
mov
add
dec
xchg
add
lcall
cmp
cmp
outsl
add
jno
jae
jecxz
pop
sub
cltd
cmp
jg
sbb
inc
lret
mov
repnz
lcall
xchg
push
or
int
push
sbb
xchg
test
push
pop
add
lret
int3
aaa
xchg
xchg
aas
idivl
inc
push
sub
scas
scas
repz
push
add
xchg
outsl
jmp
icebp
xor
pop
jbe
jb
sub
dec
stos
pop
pop
mov
jecxz
cmp
dec
add
movsb
push
jno
test
jo
sbb
xchg
stos
sbb
dec
stos
or
enter
outsl
lds
inc
cmp
mov
leave
cmc
fistl
cmpsl
xchg
push
or
jmp
ret
vsubsd
jg
test
call
push
repnz
clc
repnz
and
push
xor
addl
xchg
mov
pop
jge
jle
ret
jle
andb
es
lcall
dec
inc
or
jle
ja
xor
mov
stc
push
sbbb
adc
fwait
ret
adc
leave
ss
mov
push
rorb
cmp
cs
shrb
lods
push
cwtl
fsubrl
push
xor
mov
insl
add
mov
test
dec
fwait
dec
push
imul
jge
fsubl
test
xchg
jbe
xchg
lea
sub
pop
xchg
test
push
adc
sbb
mov
je
fwait
jb
jbe
mov
sbbl
dec
repnz
push
inc
orl
add
lock
pop
into
dec
sub
sahf
mov
xchg
out
cltd
mov
test
addl
sbb
cmc
or
jl
xor
cld
inc
xchg
call
cmp
cmpsl
stos
xchg
jl
cld
ljmp
jnp
sbb
in
dec
out
cmp
xchg
stos
rcrb
add
pop
mov
xchg
inc
out
out
fists
stos
push
ljmp
push
sbb
jle
and
jecxz
sbb
js
leave
jl
lret
lock
movsb
inc
jmp
sti
jge
stos
nop
rclb
mov
imul
add
scas
adc
xor
test
lcall
mov
cmp
push
loop
mov
test
mov
div
push
jmp
rclb
dec
imul
ljmp
pop
push
fsubr
jns
cmp
in
mov
cld
int
fsub
and
scas
lods
stos
and
or
lock
jae
pop
jno
mov
imul
pop
mov
sub
mov
loope
mov
mov
sbb
push
addb
or
loope
adc
jb
xor
movsl
push
mov
fsubl
in
push
ja
mov
jl
sti
mov
xor
and
fdivs
divl
push
mov
mov
inc
ret
push
mov
and
mov
repz
cmp
pop
adc
out
int3
xor
aaa
out
mov
into
movsb
sti
cmc
pusha
xor
mov
repnz
sahf
add
hlt
jnp
push
test
xchg
aam
test
dec
sub
xor
jne
repz
sahf
and
nop
add
cmp
lea
sti
sbb
push
cmpsb
lret
sbb
aad
aam
popf
cmp
push
lahf
push
hlt
shll
mov
and
addr16
jge
out
loop
stos
mov
sbb
dec
mov
arpl
mov
movsl
js
call
loopne
jnp
xor
mov
je
inc
push
das
jae
add
mov
sub
ljmp
pop
mov
mov
aas
add
pop
fs
into
sbb
pop
loopne
pushw
in
cli
mov
push
ret
shlb
add
inc
lcall
pop
push
mov
hlt
sbb
and
dec
push
lret
inc
fs
xor
mov
pop
outsl
notb
gs
add
mov
inc
out
adc
inc
and
cmpsl
shlb
mov
loope
push
xor
cmp
bound
das
and
jns
fdivr
adc
test
mov
shlb
insb
leave
sbb
xor
lret
mov
mov
mov
lods
or
mov
adc
insb
push
inc
lret
and
pop
push
jns
pop
jne
and
mov
enter
lock
in
xor
mov
insb
pop
sbb
jl
fnstcw
loop
scas
outsb
add
jge
icebp
sub
xor
out
mov
mov
lods
pushf
aas
xchg
andl
jb
cltd
pop
jno
push
inc
dec
fldenv
jae
add
lds
mov
mov
in
cmp
mov
loope
and
fwait
pop
jg
imul
fimuls
popf
dec
aam
imul
jecxz
sbb
and
loope
jl
and
popf
lret
call
outsl
bound
jge
in
bound
jmp
xor
pop
std
and
lret
push
inc
out
lret
jnp
mov
inc
test
xor
mov
xchg
ror
and
popa
test
mov
stos
ds
sub
sti
adc
out
stos
mov
xor
int
jb
dec
adc
mov
int3
dec
cltd
cmpsb
lods
lcall
aaa
int3
pop
xchg
sbb
and
push
xchg
push
jae
sub
xchg
aam
rcrl
xor
push
leave
xchg
adc
xor
xor
popa
or
out
iret
push
loope
imulb
mov
mov
and
mov
stos
inc
xchg
pop
adc
in
aad
popf
into
sahf
mov
sahf
inc
sub
sub
aaa
in
adc
xchg
cltd
frstor
jbe
sbb
xor
inc
cmp
test
iret
loope
sbb
out
lahf
std
cld
push
int
xchg
scas
scas
cmc
nop
call
fwait
add
mov
pop
push
xchg
inc
adc
lods
jno
pop
data16
dec
add
push
sub
cmp
mov
xchg
ret
outsb
and
in
lret
pop
out
stc
mov
cmc
jge
cmp
fsubrs
fwait
pop
cmp
nop
push
jno
out
inc
loopne
and
ja
popa
fisubs
fldt
aas
gs
mov
xchg
dec
fwait
push
and
test
push
sub
or
jge
add
fwait
xchg
aam
inc
sbb
jg
inc
sahf
mov
shrl
popf
adc
out
xchg
fdivr
dec
test
push
xlat
or
inc
popa
fmulp
in
std
sub
repnz
inc
push
repnz
adc
shll
pusha
scas
shlb
add
ret
inc
xlat
dec
fcompl
jmp
jge
pushf
xchg
sarb
data16
pusha
dec
arpl
in
repz
add
mov
cltd
push
scas
pop
sub
jmp
push
gs
xchg
je
mov
incl
repnz
aas
and
jbe
or
lret
andb
jnp
lahf
mov
jne
jae
mov
pushf
sub
arpl
call
into
sbb
dec
mov
outsl
int
or
xchg
lret
or
ffree
fwait
pop
fisubrl
aas
cmpsb
clc
out
rcll
loope
pop
xor
xor
push
add
dec
imul
popf
mov
mov
fisubrl
jge
jns
jecxz
stos
pop
into
xchg
adc
xchg
sub
movsl
push
and
ret
push
sarl
adc
aas
mov
cmpsb
rcrl
and
and
jmp
or
in
pop
nop
rorl
jbe
cwtl
and
scas
xor
adcb
test
or
gs
mov
cmp
dec
je
sbb
lahf
aad
sbb
outsl
fsin
xor
push
dec
sahf
aad
sub
or
enter
jle
sub
cmp
cmpsb
in
in
xchg
xor
adc
mov
arpl
or
mov
jl
cmp
stc
push
jl
decb
sub
lcall
clc
sbb
cli
inc
scas
mov
fldcw
xor
andl
test
add
xor
jmp
fbstp
ficoml
cmp
and
stos
and
mov
ret
fldcw
iret
xchg
push
jo
and
jg
test
das
jbe
pop
std
dec
scas
jge
mov
xor
cli
aaa
mov
pop
adc
pop
fcmovu
hlt
push
mov
lods
clc
cmpsb
mov
xchg
out
inc
mov
cmp
push
mov
rorb
mov
jecxz
cmp
push
and
xor
pop
xchg
cwtl
call
push
cltd
mov
je
mov
xor
int
sahf
fs
sbb
sbb
jb
push
and
rorl
jle
push
call
leave
sbb
mov
push
insb
mov
pop
pop
je
inc
lret
inc
scas
stc
pop
js
xchg
inc
pop
scas
adc
iret
popf
cmpsl
or
mov
fistps
sub
adc
bound
push
pmullw
pop
cwtl
xor
and
jecxz
test
aaa
in
dec
xor
mov
push
pop
add
mov
cmp
lret
pop
sbb
push
stos
push
imul
dec
push
cmp
lods
pop
mov
cmpl
pop
lret
cli
mov
scas
sbb
lret
inc
inc
mov
or
stos
ret
test
insl
push
test
push
fucomp
mov
subl
or
push
cmp
xchg
std
je
mov
mull
ds
add
push
aaa
movsl
add
pop
pop
imull
mov
test
or
pop
mov
xchg
andl
lods
clc
push
or
add
sbb
or
dec
ret
cs
mov
scas
dec
aad
jge
dec
dec
or
outsl
addr16
adc
mov
mov
xor
fwait
inc
jp
imul
sbb
fwait
loope
mov
xor
scas
shl
out
cmp
xchg
sub
dec
xchg
adc
push
dec
pusha
jne
jne
jge
stos
movsb
sub
fstp
mov
icebp
cmp
push
cmp
adc
jmp
push
ret
fldl
and
gs
out
filds
dec
lods
das
xorl
addr16
ret
loopne
mov
shr
mov
pop
movsl
addr16
mov
sbb
out
not
xchg
push
int3
rclb
add
mov
and
pushf
fcmovne
outsb
in
fidivs
cltd
mov
xchg
or
jno
out
in
ljmp
data16
mov
adc
imul
je
les
jle
push
hlt
lahf
dec
cmpsl
dec
int
lahf
lods
jg
inc
lods
mov
push
pop
mov
pop
popa
lods
xchg
sub
inc
cmpsl
loop
cmpsl
jbe
inc
mov
icebp
loop
inc
pop
loope
repz
dec
mov
and
js
ljmp
fidivl
sub
sbb
nop
shlb
lods
in
mov
movsl
jno
push
pop
push
gs
sub
pop
out
dec
jge
scas
jns
mov
push
hlt
xchg
nop
xchg
vmptrst
push
cs
adc
xor
out
inc
in
stc
idivl
sub
dec
scas
mov
rorl
push
xor
clc
hlt
in
push
ds
repz
adc
sbb
addl
pop
in
cmp
loop
cmp
mov
pop
inc
adc
mov
lock
jmp
sti
xor
jo
lock
movl
or
or
dec
add
mov
dec
or
mov
dec
fstps
pushf
std
and
add
mov
aad
dec
leave
enter
push
sbb
cwtl
test
push
jle
addr16
fwait
subl
sub
sub
inc
mov
cmp
sarl
inc
pop
cmpsl
fs
sarl
std
flds
aas
addb
sub
bndldx
sarl
pop
inc
sahf
sbb
test
popf
cmpsl
pop
push
xor
dec
data16
lods
adc
push
sub
and
leave
daa
cmp
jae
iret
aam
cltd
adc
xchg
dec
out
and
push
xor
sub
push
iret
sti
push
xchg
pop
jg
mov
push
mov
clc
push
inc
mov
pop
cmp
push
orl
pop
call
push
xchg
jmp
sar
sub
pop
cmp
lods
in
and
and
neg
dec
lds
jecxz
add
dec
daa
fcmovu
xchg
out
xor
xchg
xlat
adc
cmc
out
out
adc
jle
mov
shl
xchg
repnz
mov
mov
ds
sbb
dec
add
mov
repz
and
notl
xor
movsb
movsl
subb
pop
jnp
insb
or
pop
inc
lcall
shl
outsb
jb
fldenv
xor
stos
push
scas
aad
pop
dec
iret
popa
sbb
pop
mov
sub
push
stc
aam
mov
sub
stos
mov
mov
jnp
stos
ret
adc
xlat
inc
dec
push
pushf
enter
in
xchg
shlb
aas
mov
pop
or
rcll
mov
ror
push
aaa
leave
jbe
push
hlt
repnz
push
movsb
cmp
push
pop
leave
fidivs
and
jmp
in
daa
push
xchg
cwtl
dec
mov
into
add
test
movsb
mov
decb
add
or
sbb
push
cmp
mov
jo
std
leave
cmp
ret
cmp
loop
mov
cs
or
mov
pop
addb
ljmp
or
daa
test
pop
jle
in
xchg
mull
icebp
and
mov
jecxz
test
mov
add
xchg
mov
icebp
jno
test
xorb
not
dec
addr16
xor
jne
fld
negb
jnp
mov
push
add
pop
inc
sti
inc
out
sbb
ret
dec
or
sub
pusha
shlb
andl
cmpsb
cmp
xchg
jae
fadd
out
test
pop
mov
cli
sarl
xor
test
jecxz
xor
mov
sbb
sbb
shll
outsb
pop
int
mov
pop
xor
orl
add
pop
or
push
pop
inc
xchg
jg
push
fsubrl
jl
mov
xor
jns
rep
inc
or
div
ss
cmp
mov
xor
popa
adc
stos
jle
xor
in
cli
lret
cmp
mov
xor
pop
adc
out
mov
loopne
sbb
xor
push
pop
in
xor
test
or
ficompl
ret
movsb
fists
jb
test
mov
mov
imul
aaa
jl
mov
xor
sub
cmp
addl
lock
inc
call
jp
or
ret
shrb
clc
fiadds
adc
clc
push
lds
mov
pop
xchg
xchg
push
mov
push
jno
aad
xor
mov
js
jle
xor
ljmp
aam
js
test
sbb
xor
lcall
ret
sbb
pop
loop
call
dec
loopne
stos
pop
inc
and
jg
pop
iret
inc
jbe
ljmp
push
data16
cmpsl
iret
push
inc
ror
pop
push
mov
iret
adc
pop
out
test
ja
inc
clc
push
shrl
xor
xchg
stos
aas
dec
loop
lea
or
std
cli
cs
push
mov
enter
push
lret
inc
test
nop
add
mov
sbb
out
loopne
push
or
pop
mov
fucomp
pushf
lret
cmp
dec
jp
and
lods
ja
mov
int
fisubl
inc
or
mov
insl
inc
inc
pop
outsb
and
add
jmp
out
insb
outsb
inc
mov
sub
mov
sub
fidivs
lret
ss
popf
pop
stos
dec
push
std
lret
out
pop
adc
or
shl
mov
loopne
cmpsb
scas
add
clc
les
lcall
push
fldenv
out
jl
in
flds
out
mov
cmc
sbb
pop
test
push
pop
adc
test
pop
jns
xor
push
nop
fsts
jnp
into
fwait
sbb
cwtl
outsb
rol
loop
inc
cwtl
mov
loop
xchg
push
xchg
sbb
in
shrb
lcall
jne
pop
push
push
enter
test
cmpsl
shr
jb
subl
pop
sbb
adc
xor
test
fdivs
lahf
push
cmpsb
inc
mov
jmp
mov
out
xchg
adc
inc
movsl
pop
dec
les
ficoms
rcr
jp
sub
pusha
cmp
icebp
and
sub
mov
jge
push
jo
out
gs
mov
xchg
out
hlt
pop
xor
cmp
adc
popa
and
pop
adc
sub
stos
add
ds
add
mov
nop
fsubrl
movsb
sbb
xlat
ret
pop
insl
in
push
push
mov
adc
into
dec
pop
in
adc
hlt
sub
bound
adc
fnstsw
mov
int3
lods
xor
sub
push
add
sbb
mov
or
mov
push
mov
push
xchg
aaa
adc
jno
lods
xchg
test
inc
in
mov
adc
push
or
mov
xchg
roll
pop
ds
mov
pop
mov
jns
sbb
aam
jmp
push
popf
stos
mov
nop
mov
mov
cld
inc
rcl
testb
jp
mov
out
ja
aad
lret
mov
gs
mov
push
fwait
push
or
adc
and
mov
push
jge
mov
dec
sbb
cmp
rclb
inc
idivb
pop
arpl
imul
bnd
mov
xchg
pushf
push
mov
mov
test
jle
int3
imul
or
outsb
push
and
inc
jo
lods
mov
pop
xor
fsubrl
sbb
lods
sar
pop
in
movsb
jmp
cmp
dec
push
dec
adc
sbb
sarl
pop
mov
cmp
xchg
lahf
and
push
int
jne
xchg
mov
or
es
aam
jne
mov
jge
inc
adcl
xchg
call
xorl
xor
fwait
lahf
addb
or
dec
xchg
lods
mov
xor
cmp
sub
jge
cmp
pop
xchg
jg
jge
data16
dec
mov
jb
add
mov
test
cmc
sti
pop
adc
pop
rcrb
jl
jne
push
scas
fmuls
cmp
sarl
pop
pop
out
in
incb
dec
icebp
inc
push
test
add
inc
pop
mov
push
popa
jno
pop
cli
mov
arpl
shlb
out
push
push
push
je
ja
cmp
mov
pop
out
xor
aam
out
and
pop
add
push
dec
mov
and
pusha
mov
mov
mov
int3
and
dec
dec
insb
ret
sti
cmp
inc
adc
mov
dec
pop
pushf
or
and
jmp
mov
inc
pop
push
mov
pop
push
test
into
xor
mov
fldl
pop
pop
ljmp
das
rcrb
lock
jle
adc
test
sbb
addr16
mov
add
gs
leave
mov
xchg
jp
sbb
xchg
or
lods
je
sbbb
inc
es
rcll
inc
jl
insl
sub
pop
stc
pop
lcall
cs
push
push
cs
xchg
cmpsb
mov
cmp
sbb
xchg
jle
outsl
adc
and
push
call
xchg
mov
lds
stos
push
xlat
in
rorl
push
cli
aam
push
cmp
arpl
icebp
pop
mov
push
cmp
xchg
or
fildl
call
or
cmp
pop
push
lret
push
push
pop
sub
das
daa
incl
xchg
xchg
mov
adc
adc
daa
cmp
je
jns
popf
push
fdivr
adc
jb
gs
daa
jge
mov
dec
add
scas
xchg
mov
call
scas
add
insl
jno
leave
jnp
out
jnp
jbe
mov
sub
test
jbe
sbb
out
out
rcrl
xchg
sub
pop
inc
lret
fnstcw
and
scas
loopne
loop
outsl
arpl
stos
or
iret
mov
js
fisubrl
in
xor
roll
dec
cltd
data16
jle
dec
repnz
fsubs
jo
jne
xchg
lods
sub
xor
pop
and
dec
cli
and
mov
and
pop
mov
into
jns
mov
mov
push
loop
js
dec
inc
gs
xor
push
push
sbb
jle
pop
mov
in
push
test
ret
repnz
pop
jnp
inc
or
mov
gs
lods
push
push
outsb
gs
inc
adc
lds
sbb
rol
fs
sbb
cwtl
in
clc
jmp
ror
stc
pop
xor
add
adc
stc
cld
loop
fcompl
jl
dec
sub
xchg
and
mov
mov
inc
mov
fmull
mov
pop
loopne
dec
cmpsl
and
mov
movsl
jmp
mov
faddp
xchg
xor
mov
clc
pop
sbb
fists
mov
pop
popf
scas
xchg
cld
loope
inc
cmp
cwtl
lcall
push
shlb
mov
roll
out
mov
pop
subl
push
sarl
out
fsubl
cmpb
xchg
insb
push
sub
out
mov
dec
test
aad
mov
mov
push
fwait
testb
cmp
dec
xor
jbe
xor
movsl
enter
imul
sub
nop
pop
sub
mov
mov
pushf
scas
sub
sbb
scas
negl
js
das
aam
mov
and
es
stos
push
xchg
and
dec
sub
lret
cli
mov
mov
outsl
pop
cmpsb
dec
icebp
or
outsb
testl
mov
or
repnz
dec
pop
inc
pop
nop
sub
popa
shlb
in
mov
or
xor
pop
aaa
sbb
jo
inc
cmp
rcrl
movsb
sbb
pop
fadd
scas
popa
fwait
mov
xor
jns
fdivrs
pop
mov
or
jbe
sti
das
mov
pop
push
jecxz
mov
pop
adc
iret
mov
xchg
es
insl
insb
add
and
daa
xor
lods
rcll
clc
mov
ds
test
jg
repz
ja
negb
outsl
out
inc
adc
pop
adc
mov
les
lods
test
fwait
seta
ljmp
cmp
add
aas
pop
incb
pop
mov
mov
adc
fldenv
clc
cli
mov
xchg
xchg
jg
lods
cmpsl
popa
jge
add
pop
pushf
mov
cmc
jnp
jne
jmp
shlb
fs
xchg
sbb
cmpsb
negl
scas
inc
pop
iret
sub
cmp
ja
ret
dec
cmpsl
jl
add
or
push
ds
loopne
mov
mov
call
aaa
test
push
inc
lea
mov
pop
das
pop
adc
dec
into
and
rcrl
ds
mov
cmc
pop
aaa
out
ds
shll
les
ljmp
fisubrl
pusha
sbb
movsb
jmp
int
mov
loopne
int3
sti
pop
daa
jl
xlat
icebp
or
xor
mov
or
pop
icebp
sahf
xorb
stos
sbb
jbe
ds
rol
cmp
xchg
sub
int
hlt
insl
mov
mov
aas
xchg
cmp
mov
dec
mov
out
dec
sbb
mov
aad
mov
or
pop
movsb
popa
es
lea
xchg
inc
and
inc
mov
out
aam
fdivs
add
cmp
xchg
jb
xchg
fstpl
add
pop
mov
sub
aad
imul
pop
cli
inc
dec
cmp
xor
lods
into
jge
fs
mov
push
out
xor
and
adc
or
fcmovu
sahf
xor
bound
cmc
movsl
fucom
leave
push
lods
std
ss
add
cwtl
leave
pushf
xchg
sub
jmp
inc
inc
jp
out
push
jno
stos
sahf
and
fdiv
mov
das
sub
sbb
push
xor
and
lahf
xchg
ds
fcompl
gs
adc
loop
repz
popa
xor
das
divb
jle
jmp
lods
subl
lods
cmpsb
mov
cmc
jge
pop
pop
and
outsb
cmpl
sub
fwait
mov
jl
icebp
sub
rcr
xor
out
out
add
add
mov
jns
aaa
jne
add
mov
pop
mov
mov
pop
xor
lds
js
lds
out
adc
dec
cmpsl
lret
mov
add
push
popa
push
dec
js
scas
adcl
sbb
lods
mov
jge
out
mov
push
scas
test
in
in
lret
jno
pop
sub
pop
mov
adc
shl
and
lcall
sti
push
mov
nop
in
fwait
lock
pop
inc
xlat
mov
mov
je
sub
cmpsl
inc
fsubrs
push
mov
pop
mov
mov
clc
daa
gs
xchg
das
sbb
test
cmpsl
mov
pcmpgtw
stos
pop
sti
pop
ret
and
pushf
mov
aas
push
xor
out
fsub
jmp
pushf
fsts
jle
dec
daa
push
js
mov
cmp
leave
mov
mov
repz
lea
pop
mov
pop
mov
addb
out
jno
jg
ficoms
gs
call
adc
jo
aam
mov
aam
push
mov
int
push
dec
adc
aas
fdivrl
mov
sbb
add
popa
mov
xor
pop
push
repz
insl
inc
shll
mov
cld
mov
xor
movsl
test
cmovns
push
rorl
push
pop
jecxz
imul
out
jl
and
cli
in
mov
fld
sti
jmp
pop
out
pop
mov
push
test
call
mov
jp
bnd
pushf
xchg
mov
iret
sub
sbbb
pop
xchg
fs
dec
jbe
jo
and
xchg
inc
pop
jae
cmp
sbb
sbb
mov
ljmp
mov
fidivl
leave
pop
sub
addr16
das
das
es
mov
mov
insl
sbb
stos
xor
push
adc
int3
hlt
ret
ret
push
mov
jbe
cmp
data16
in
stc
push
xlat
push
shrl
lea
shl
pop
iret
xor
iret
sbb
dec
mov
cmp
mov
shlb
ret
sub
add
sbb
pop
jmp
dec
mov
loopne
xchg
lahf
add
mov
jg
data16
or
in
push
pop
sub
jg
loop
or
and
sarl
push
icebp
pop
in
decb
int3
cmpsl
stos
cmpsl
pusha
mov
dec
push
cmc
addr16
mov
andl
mov
lods
vpandn
les
gs
jecxz
add
movsl
fildl
inc
lods
jb
out
rcll
xor
lock
pop
std
cmc
cmp
aaa
add
or
clc
in
ja
sub
xor
or
insb
add
stos
xchg
mov
mov
add
cmp
cmp
pop
xor
stos
scas
push
pop
out
lods
aad
divl
cs
sarl
add
xchg
jno
mov
sbb
cmp
int
shl
xchg
jl
mov
inc
or
daa
gs
hlt
lods
ljmp
insl
arpl
mov
adc
sahf
xchg
fcoms
sahf
jne
push
clc
mov
sub
sbb
les
insl
sbbl
push
sbb
sbb
inc
add
int3
sahf
pop
and
or
out
mov
int
sbb
add
out
or
inc
scas
pop
mov
mov
and
out
sbb
mov
pop
mov
mov
scas
shlb
in
out
sar
inc
mov
mov
pop
dec
xchg
lahf
mov
mov
rcll
jecxz
xchg
fisttpl
jge
subl
adc
ja
inc
adc
mov
push
popa
cmpsb
mov
fwait
pop
ss
aad
inc
movsb
fwait
cs
mov
pop
loope,pt
xchg
and
test
sbb
mov
xchg
jnp
pop
push
mov
out
loopne
sub
test
ds
mov
mov
sti
clc
cmp
aad
or
dec
mov
in
stos
adc
insl
and
mov
stos
ss
push
dec
cmpsl
sub
jecxz
in
icebp
lret
push
sub
mov
icebp
shrl
hlt
inc
sub
shlb
xor
cmp
xor
fwait
imul
pop
mov
and
mov
dec
dec
stc
sub
dec
jge
movsb
push
in
dec
push
in
dec
in
lods
lods
mov
jo
jno
xchg
sbb
adc
lret
popf
xchg
jbe
or
pop
daa
add
adc
lds
repz
or
mov
jns
aas
in
cmp
add
add
mov
jmp
sub
xchg
inc
addr16
enter
cmp
cmc
mov
rorl
sbb
in
add
mov
leave
leave
adc
pop
jbe
push
and
out
or
inc
and
mov
scas
addb
cmp
xlat
add
clc
dec
inc
sub
dec
dec
jecxz
xchg
test
pop
and
in
mov
jne
sub
mov
xchg
pop
add
int
pushf
gs
out
fiaddl
xor
jnp
sti
sahf
add
sbb
cmp
sub
xchg
int
mov
mov
mov
shll
dec
dec
xchg
fs
hlt
jmp
js
jecxz
lcall
fildl
stos
mov
and
inc
stos
int
xor
add
add
out
mov
or
icebp
test
fsub
push
adc
sbb
ss
jmp
in
push
mov
lcall
cmp
stos
sbb
jecxz
cmp
cmpsl
pop
lods
dec
sbb
cmp
divl
shl
movl
repnz
push
ja
aas
pop
xchg
push
or
adc
dec
lock
dec
cmp
int
jno
in
dec
adc
lock
stos
push
push
xchg
loop
loopne
stos
lret
push
and
and
out
inc
inc
mov
cmp
fnstcw
mov
std
bound
cmp
push
aas
cmpsl
insl
mov
test
push
clc
mov
inc
add
xchg
aas
adc
lock
jmp
sbb
dec
dec
adc
dec
arpl
pop
and
mov
bound
divb
sub
push
movsl
orl
dec
mov
sub
push
push
lret
jle
jne
push
jl
and
xor
jle
pop
jb
ret
mov
cmp
xchg
add
ja
and
cld
inc
cmpsl
mov
mov
and
mov
aas
std
test
cmp
push
imul
jmp
fwait
jnp
cmp
int3
mov
stos
imul
mov
push
xchg
iret
lods
outsb
jae
sbb
in
ljmp
pextrw
or
sbb
adc
aam
sub
loop
gs
cmp
push
cs
cmp
jecxz
or
inc
jnp
mov
lahf
outsl
ret
mov
xchg
or
adc
ret
insb
loop
lcall
xchg
dec
sbb
xor
nop
es
lret
hlt
shl
adc
and
sahf
lret
lret
jo
out
ror
dec
mov
mov
push
das
js
mov
lods
loope
andl
lret
sub
lods
out
bnd
cs
sbb
add
cld
fstpt
jb
mov
insb
sub
sahf
ret
mov
repnz
dec
sbb
xor
xchg
cmp
jne
pusha
repz
jge
je
int3
movsb
mov
sub
lcall
call
out
ret
and
dec
leave
jo
je
fwait
jbe
dec
rcll
sub
dec
xchg
lods
dec
adc
mov
adcb
jns
push
ret
in
jg
cmpsl
daa
nop
stos
cld
xchg
add
mov
mov
mov
loopne
add
movsl
sbb
push
out
fisttps
mov
or
inc
outsb
pop
pop
push
out
leave
in
or
adc
sbb
negl
js
xor
cs
or
xor
sar
push
loopne
lods
ljmp
es
xchg
cmp
jne
cmp
mov
mov
test
lret
rcrb
int
mov
fwait
jnp
loopne
fwait
xchg
repnz
leave
imul
xchg
or
dec
xchg
mov
testb
stc
scas
stos
cld
cmp
jnp
dec
jge
jmp
insb
add
add
mov
mov
xchg
pop
imul
jecxz
fdivs
adc
mov
imul
shl
sub
les
mov
lock
add
push
add
out
push
sbb
frstor
imul
inc
pop
fwait
pop
sarb
pushf
inc
fs
adc
imul
mov
sbb
xchg
cli
jno
lea
jmp
sahf
gs
les
mov
push
cmp
inc
push
and
dec
sbb
cmp
lds
sbb
shll
enter
sub
movsl
push
rclb
jnp
lret
test
and
aam
or
pop
add
outsl
adc
hlt
sbb
loopne
sub
or
lock
loop
push
cmp
out
jo
adc
mov
or
out
mov
jno
leave
aas
fldcw
mov
inc
inc
pop
dec
insl
push
test
xchg
cmp
add
aas
pop
adc
push
xchg
push
arpl
sbb
push
jns
repnz
xchg
xchg
push
sahf
or
sbb
jp
mov
add
mov
cmp
insl
mov
fnstsw
inc
dec
nop
add
and
repnz
mov
xor
xorb
pop
ja
stos
sahf
out
test
out
pop
jmp
sbb
ljmp
mov
popa
lds
jl
rol
inc
xorl
or
dec
xor
pop
mov
pop
and
push
aad
pop
int3
push
inc
in
movb
add
mov
mov
nop
adc
mov
mov
xchg
mov
movsb
xchg
and
mov
xchg
xor
int
cmpsl
pushf
lcall
dec
out
fwait
out
add
inc
sub
mov
fisttpll
jmp
hlt
sbb
or
cs
leave
loopne
and
jb,pn
adc
aaa
test
fidivrs
push
sbb
pop
or
popa
iret
adc
sub
pusha
push
pop
dec
loop
add
int
testl
icebp
adc
stos
lock
aas
mov
insl
jns
sbb
push
mov
mov
icebp
out
sbb
ja
je
push
mov
aas
cmpsb
scas
cld
popa
aas
cmpsl
or
mov
mov
aas
idivb
daa
dec
jnp
pop
in
mov
mov
and
cmp
cmp
fabs
popa
std
sar
fmull
das
lock
mov
psubsb
test
inc
lret
mov
arpl
mov
mov
mov
fisubl
dec
in
in
adc
inc
push
insb
pop
insl
insl
stos
dec
aaa
cmpsb
pop
jnp
popa
cmp
jne
rcrl
or
adc
mov
pop
fwait
leave
pop
ficoms
pop
je
aam
lahf
hlt
and
mov
xchg
shrb
into
aam
xchg
cmpsl
int3
xlat
lret
sbb
mov
and
rcrl
ss
hlt
jecxz
and
xchg
fiadds
xor
enter
dec
cmc
in
cli
ret
arpl
and
arpl
scas
inc
insb
sbb
je
repz
jl
inc
pop
push
pop
push
or
jle
outsl
scas
shll
push
fnsave
mov
sbb
mov
cmp
mov
cltd
sbb
dec
lds
xlat
push
push
sbb
pop
xor
rclb
push
ret
inc
sub
ss
pop
dec
push
daa
xor
aaa
pop
mov
mov
lret
pop
xor
hlt
hlt
insb
aaa
mov
aad
mov
stc
aas
pop
mov
pop
mov
mov
pop
and
daa
ljmp
insb
call
cmp
mov
in
xlat
sarb
hlt
fisttpl
cs
stos
imul
rclb
sarl
push
add
ds
xchg
inc
sub
jno
xchg
lret
mov
add
data16
and
stos
lock
test
inc
jmp
es
jle
nop
mov
aaa
pop
cmp
sarb
xchg
mov
shll
aam
insb
cld
adc
aam
stos
pop
jae
lods
sub
push
xor
push
mov
mov
ret
push
rorb
fwait
repz
xchg
or
push
inc
sub
inc
xchg
shlb
in
pusha
fldenv
add
sub
int3
shrl
dec
es
out
mov
jne
jb
mov
loopne
std
and
in
and
xchg
sahf
stc
jge
pop
pop
sbb
cmp
push
and
outsb
xchg
xorb
and
mov
mov
fstps
adc
dec
xor
stos
xchg
pop
enter
add
into
dec
add
cmp
push
mov
in
lret
xchg
mov
in
mov
sub
mov
ltr
pop
outsl
mov
ficoms
je
sahf
movsb
and
fists
mov
ret
mov
outsl
mov
sub
push
ljmp
test
gs
add
and
push
popa
repnz
and
jmp
insl
or
popf
mov
xchg
xor
jmp
fadds
vmovntpd
lahf
hlt
pop
or
cmp
loopne
mov
xlat
and
inc
jmp
pop
outsb
cmc
shlb
add
and
or
xchg
int
out
sbb
xchg
sbb
enter
scas
std
adc
pusha
jg
aas
aas
ret
jp
push
shlb
mov
rclb
inc
cli
out
pop
cmc
testb
adc
fisttpl
fisttps
popa
push
orl
out
into
pop
bound
jne
jge
push
push
pop
movsb
xchg
popf
xchg
insb
xlat
xlat
mul
mov
push
hlt
adc
push
xor
loope
into
lds
mov
sub
cli
xchg
or
out
push
shl
mov
and
lds
cld
cmp
jb
pop
nop
cmp
addr16
jae
jmp
xchg
fcmove
xchg
rcrl
cmc
nop
jp
hlt
mov
lcall
mov
clc
repnz
mov
jg
rol
and
sbb
stos
jno
cltd
inc
ret
push
add
shlb
mov
push
cltd
pushf
mov
test
mov
cmp
outsb
lret
inc
in
loopne
adc
mov
or
loopne
mov
in
jb
mov
or
and
push
mov
jle
dec
mov
jle
sbb
aas
xchg
cs
push
shlb
push
or
xchg
cmpsb
fisttpl
les
xchg
pop
rorl
xor
jge
rorl
xchg
gs
add
in
pushf
test
jecxz
loop
arpl
adc
xchg
sub
mov
movsbl
lds
popf
mov
cld
aas
push
inc
xor
jp
ficoml
xor
or
cmp
gs
sbb
cmpsl
pop
cmc
mov
inc
inc
add
xchg
dec
dec
cmp
cmp
sub
xlat
mov
ja
lods
add
mov
repz
pusha
adc
jl
pop
rcll
fbld
aad
insb
sti
leave
stc
es
or
pop
test
outsb
and
das
dec
repz
xor
sar
pusha
lahf
aad
push
ja
shr
repz
ret
mov
lds
pop
into
insb
cmp
sub
outsl
mov
xor
cmc
adc
loope
pop
xor
inc
pop
outsl
test
sbb
pop
clc
bound
in
mov
test
mov
jns
pop
out
lock
gs
out
mov
out
jno
mov
lret
mov
add
jp
xchg
cltd
adc
out
inc
sahf
popf
mov
and
and
lods
mov
and
outsl
call
jp
xor
fisttpl
add
out
ud1
shlb
out
xlat
or
sub
or
in
sbb
sti
hlt
lods
sub
push
dec
xorb
enter
sahf
sbb
pop
movntq
jg
and
hlt
xchg
xchg
imul
mov
into
iret
and
sbb
lahf
push
lds
aas
imul
fldcw
sub
xorl
push
aaa
or
xchg
fnstsw
xchg
sbb
or
aas
popf
xlat
iret
jl
cmp
push
adc
xor
paddw
mov
ljmp
out
sub
jl
cmp
sbb
dec
shrb
gs
mov
jge
shlb
xor
data16
lods
stc
leave
mov
adc
inc
mov
xchg
xchg
es
data16
xor
adc
or
mov
mov
orb
add
lret
cli
push
xor
add
fisubl
divb
lahf
cmp
dec
addr16
sarb
xor
mov
or
popf
pushl
cmp
xor
sub
leave
out
into
fs
xor
jge
pop
push
dec
mov
int
movsl
push
adc
sub
test
daa
adc
in
pop
sbb
pusha
xchg
cmp
fmull
movsl
pop
mov
sbb
mov
stc
jmp
dec
mov
clc
nop
pop
inc
pop
pop
and
push
frstor
xor
pop
das
xchg
ret
mov
mov
lldt
nop
inc
rcr
mov
call
adc
jb
mov
sub
sbb
je
jb
rcl
or
lds
mov
aaa
sub
call
push
stos
imul
add
and
mov
sub
jb
rcrl
movsl
cmp
loopne,pn
aas
and
jo
mov
fs
int3
mulb
test
jae
jno
inc
inc
and
sahf
and
imul
rorb
pop
mov
mov
dec
cmp
in
add
push
out
fistpll
or
stos
cltd
jge
or
in
lcall
inc
mov
lret
push
sbb
jge
lcall
dec
pop
rcl
inc
inc
jle
jns
fmulp
adc
sub
add
daa
jmp
arpl
sub
pop
mov
gs
xchg
push
es
lock
or
pop
mov
pop
xchg
xorl
pop
jg
xchg
imul
jmp
lret
push
or
dec
add
cmp
sarb
mov
add
xor
jbe
and
les
sbb
js
pop
mov
pop
push
xchg
adc
mov
mov
push
ja
fistpl
rolb
enter
add
test
gs
sbb
push
xor
mov
push
mov
sub
or
push
fcomi
ret
fs
xchg
jmp
adc
das
aaa
out
stos
stos
mov
xchg
xchg
pop
mov
mov
cld
mov
push
ret
inc
sbb
sub
stc
insl
adc
popa
out
sbb
loopne
nop
jno
jg
jl
inc
adc
js
fldcw
outsl
xchg
and
test
addr16
test
js
sub
notb
jge
push
inc
sub
ror
test
inc
idiv
loope
mov
rcr
inc
imul
loop
dec
test
push
cli
clc
bound
stos
loopne
movsb
mov
or
les
push
add
popa
mov
aam
pop
inc
enter
xor
lcall
sbb
out
pusha
pop
jno
ljmp
subb
scas
cltd
xor
hlt
out
aaa
cli
notb
jecxz
decb
pusha
adc
xor
mov
jle
xchg
xchg
or
popa
rcll
mov
nop
pop
loopne
jne
add
fcompl
arpl
fwait
push
scas
frstor
xchg
inc
aad
push
leave
lcall
and
dec
push
imull
sarl
jo
in
mov
je
mov
or
cwtl
mov
xor
imul
dec
sbb
fwait
pop
sbb
mov
dec
aam
jbe
jl
bts
nop
insl
iret
fwait
call
push
rcrb
push
push
sbb
imul
ja
insb
test
or
negb
roll
dec
inc
add
dec
in
enter
or
inc
cs
cmpsb
xor
cmp
stc
icebp
out
jno
push
data16
push
std
arpl
in
fwait
and
les
clc
je
outsb
xlat
jecxz
scas
mov
jae
inc
sbb
and
cltd
fdivrp
sbb
xorb
in
inc
test
mov
mov
mov
or
xor
out
imulb
mov
add
push
movsl
adc
lcall
leave
adc
das
push
ret
fisubrl
rorb
mov
lcall
mov
cmc
stos
or
outsl
mov
or
xchg
pop
fcmovnu
out
sub
jg
xor
outsb
jnp
push
orb
addl
aaa
sbb
nop
or
jnp
inc
lahf
inc
push
iret
jb
inc
push
or
xor
aad
std
or
test
sbb
xor
mov
xchg
or
mov
inc
roll
jbe
or
push
lret
push
mov
pop
mov
cmp
stos
mov
arpl
in
mov
cmc
xchg
in
bound
add
sar
cli
mov
sbb
movsl
add
add
jb
inc
push
mov
mov
xchg
int3
mov
jmp
adc
xor
cltd
repz
add
and
mov
je
jb
or
ss
mov
jp
sub
inc
xor
push
sub
mov
mov
lcall
cwtl
mov
ds
leave
mov
insl
or
sub
imulb
add
popa
mov
xchg
shlb
stos
sbbb
scas
into
in
ja
jae
daa
sti
mov
sub
xor
jo
fdivr
adc
pop
lds
add
out
mov
mov
sbb
mov
sbb
mov
test
pop
mov
into
or
cmp
xchg
lret
pminub
cmpsl
adc
sahf
andb
imul
mov
test
push
imul
xchg
sbb
xor
sub
and
cmp
mov
leave
lret
push
out
xor
int3
loop
adcb
divb
ljmp
sbb
xchg
cmp
int3
shll
lcall
fidivrl
pop
popa
xchg
test
xchg
shll
mov
dec
mov
jae
jns
pushl
xorb
loope
pop
setnp
pop
in
clc
add
pop
and
lods
addl
popa
not
jge
and
pop
cmp
or
jno
add
inc
or
das
dec
adc
hlt
nop
mov
push
cmp
cmp
movsl
bound
mov
sahf
cmp
daa
adc
mov
pop
or
sbb
movsl
fistpll
daa
outsl
mov
sahf
sub
lock
test
call
mov
push
fld
daa
xchg
ljmp
fisttpll
ficompl
sahf
orl
pop
ljmp
nop
push
das
stos
into
popf
adc
mov
into
cmp
and
das
mov
icebp
stos
fs
lods
jmp
pop
push
and
leave
push
loope
imul
dec
push
call
xchg
cli
test
sub
jl
rcrl
mov
jae
inc
pop
arpl
fistps
cmpsb
jnp
push
add
je
or
loop
fiadds
loop
das
iret
inc
sub
lds
or
mov
jae
fcoml
mov
imul
and
jecxz
aaa
outsb
xchg
imul
lds
sahf
das
push
in
jl
repnz
jecxz
cmc
and
mov
stos
lahf
add
sbb
pop
push
pop
call
push
stos
outsb
popa
push
call
adc
sub
std
xor
mov
mov
js
pop
dec
push
cmp
adc
scas
divb
mov
insb
cltd
sbb
pop
test
int
mov
jne
je
adc
pushf
das
xchg
rcrl
jo
mov
sbb
or
mov
and
mov
sbb
mov
enter
push
xchg
mov
jne
addb
arpl
inc
mov
jg
jb
ja
into
xchg
ret
pop
and
mov
int3
popf
inc
fs
imul
fimuls
sbb
xlat
mov
jnp
hlt
ret
xlat
popa
test
testb
jne
daa
fistpll
xchg
jnp
lret
inc
push
add
sahf
cmp
in
mov
adc
cmp
jne
mov
xchg
in
cs
sbb
or
imul
cmp
sbb
xor
mov
outsl
ret
out
mov
stos
sub
scas
xor
gs
addr16
pop
cltd
imul
pop
adc
mov
pop
inc
in
arpl
jnp
into
inc
or
xchg
es
cmp
add
iret
cmp
xchg
and
in
dec
jmp
or
ds
jp
jmp
int3
outsb
or
cmp
adc
cli
sbb
jnp
dec
orb
mov
das
std
test
fbstp
or
shlb
xchg
loopne
fcomi
mov
push
mov
ja
fisttpl
insl
xchg
cltd
push
cmp
fstps
xor
int3
pushf
push
inc
pop
cwtl
cmpsb
and
cwtl
cmp
mov
mov
pop
add
pop
fwait
mov
fcomip
push
out
xchg
xor
fcoms
scas
xchg
call
insl
sbb
pop
adc
mov
mov
and
neg
dec
mov
pushf
into
inc
sbb
mov
dec
scas
pushf
orb
sub
or
iret
lock
lret
jl
stc
inc
addl
mov
fwait
aam
or
in
sbb
pop
sbb
cmc
loopne
jge
repnz
daa
pop
add
repz
jge
push
repz
ljmp
mov
inc
mov
add
hlt
sar
pop
mov
repz
cld
sub
jecxz
sub
pop
xor
jmp
hlt
lods
inc
sti
xchg
icebp
ds
fdivr
enter
jle
lret
aam
dec
fiadds
out
into
ficompl
inc
pop
adc
xchg
movsb
adc
xchg
push
jns
repnz
scas
jne
movsb
testb
pop
xchg
dec
lret
sub
xor
mov
hlt
arpl
sub
aas
icebp
std
jmp
movsb
push
inc
and
sahf
push
jb
les
mov
xchg
rcll
aas
inc
push
mov
dec
mov
loopne
loop
add
cmp
or
push
mov
pusha
aaa
add
and
jno
int3
or
lahf
mov
divl
mov
mov
add
jp
insb
enter
pushf
mov
push
mov
les
sbb
mov
xchg
cmc
decl
xor
and
pusha
lahf
iret
xchg
sahf
dec
jb
inc
out
popa
push
xchg
add
mov
cmp
or
and
lret
repnz
arpl
mov
add
pop
or
sub
mov
pusha
enter
sub
lahf
dec
and
dec
inc
outsb
mov
lock
push
mov
mov
mov
jmp
pop
inc
fistpl
xchg
add
insb
sub
mov
dec
gs
mov
jno
mov
in
and
popf
int
lods
sbb
cmp
jl
loope
adc
popa
sbb
pop
loopne
xor
cmp
das
das
pop
or
xchg
and
mov
adc
fiadds
mov
dec
mov
or
cmp
jecxz
dec
lahf
les
jbe
and
mov
dec
mov
jecxz
sbb
loopne
pop
or
repnz
mov
mov
pop
add
cmp
add
and
scas
mov
cmp
imul
cmp
mov
mov
add
adc
ret
cld
jecxz
and
sbb
cmovae
jnp
in
movsl
push
jp
mov
mov
push
scas
or
and
sub
inc
push
lret
jp
lahf
sbb
xchg
push
adc
int
and
dec
aad
cmp
pop
sub
pop
fdivs
mov
fwait
add
lods
inc
adc
adc
jnp
inc
lea
imul
jge
xchg
dec
fucompp
mov
push
add
or
cltd
in
jae
imul
dec
imul
inc
stos
cmp
arpl
subl
shl
fwait
push
push
and
lods
mov
icebp
dec
dec
movsl
insl
jb
icebp
adcb
test
mov
ss
inc
les
aad
rcll
sub
int3
insb
xchg
ss
pop
rcrl
pop
cmp
xchg
lret
add
push
icebp
in
sub
cmpsl
out
cmp
mov
push
xchg
push
out
push
mov
repnz
push
inc
sub
aaa
dec
or
dec
jmp
hlt
or
ret
mulb
fildll
xor
loope,pt
xor
std
cmpsl
aad
inc
sti
sbb
sbb
jge
or
fdivrs
pushf
out
push
lahf
cltd
cmp
mov
loop
push
sub
hlt
das
shr
pusha
outsl
mov
dec
xchg
in
mov
cld
add
inc
int3
push
das
jns
push
fwait
add
cld
cmp
sub
and
push
popa
mov
cs
loop
inc
into
dec
jle
aam
mov
icebp
sub
loope
pusha
add
lret
xchg
pop
outsb
mov
fbstp
frstor
popf
addr16
rclb
cmp
xor
xlat
sub
add
mov
mov
addr16
adc
push
dec
pop
mov
std
mov
add
into
or
movsl
push
mov
mov
dec
call
sub
adc
loopne
sqrtps
xor
lea
lret
cltd
xchg
dec
test
and
insl
mov
or
adcb
ret
cwtl
daa
test
in
mov
bound
lea
and
fs
insl
outsl
repz
jg
cwtl
xchg
dec
xchg
jge
mov
mov
jp
aad
ja
xchg
out
cmp
pop
rolb
sbb
push
fnstenv
sub
xor
aam
int
mov
mov
lea
lret
mov
sub
jnp
mov
inc
inc
test
clc
or
inc
sub
movsl
cld
push
mov
cmpsb
push
sub
loope
dec
std
loop
cmp
jp
mov
adc
repnz
add
test
int
inc
push
ret
sub
shll
cmp
adc
js
ret
pop
cwtl
sahf
xchg
mov
sarb
out
cmpsl
daa
mov
dec
push
aaa
scas
pop
mov
add
mov
fnsave
mov
ljmp
test
dec
cmpb
pop
mov
stos
mov
pop
pop
dec
out
and
in
mov
testb
sbb
dec
lret
ret
cmp
push
mov
mov
cmp
xchg
inc
pcmpgtw
pop
jnp
gs
xchg
push
xchg
pop
les
inc
sti
in
dec
adcl
lods
dec
inc
lret
fucomi
add
gs
mov
jg
lcall
lcall
mov
xor
lea
idivb
movsl
or
fstpt
mov
andb
test
jbe
and
xor
sbb
sbb
sub
vmovddup
pushf
lds
into
cmpb
lahf
repnz
lea
push
mov
and
lret
cmp
sub
sbb
fcoml
testl
jno
sub
in
ljmp
imul
mov
pop
jns
push
sarb
and
sti
cmpsl
std
cmp
loope
push
mov
roll
jns
cmp
dec
lea
in
fisubrl
mov
pop
popa
into
sub
xor
push
dec
out
test
lods
decb
stos
mov
mov
mov
sub
test
push
aam
ljmp
cmp
int
cld
rcrl
xor
int
ret
int3
fistl
mull
sbbl
in
fldl
xor
mov
xchg
sbb
mov
adc
xchg
std
in
xor
mov
dec
pop
pop
pop
or
mov
xor
sbb
in
out
and
hlt
mov
out
and
lods
cmp
aad
lret
xchg
jecxz
add
and
fneni(8087
adc
adc
cltd
cwtl
xchg
dec
aam
cmp
scas
test
mov
ror
loope
xchg
mov
movsb
sub
mov
xchg
daa
jmp
pop
out
decb
cmc
ret
lea
mov
enter
shrl
jbe
xchg
aas
mov
movsl
inc
adc
jmp
adc
lock
out
xchg
dec
scas
dec
ror
popa
dec
dec
add
fs
mov
sub
ret
push
and
das
cmpsl
xor
adc
pop
jae
xor
or
inc
sub
es
inc
shr
or
repz
inc
cmp
das
push
ret
stc
pop
jle
dec
repnz
pop
aad
loop
cmpl
das
subb
and
or
inc
cli
inc
int
pusha
scas
pop
push
xchg
fwait
ss
push
sub
jae
jmp
aam
xlat
push
daa
and
push
popf
les
daa
std
sahf
xchg
aad
loopne
mulb
dec
outsb
add
cmp
test
xor
lock
sbb
jb
out
mov
sbb
cmc
pop
jnp
inc
mov
cmp
inc
cs
hlt
add
repz
jns
or
in
sbb
xchg
call
testl
mov
sub
std
inc
push
popa
xor
fstpt
inc
or
push
add
fdivrl
cld
hlt
xor
aaa
out
cmp
fmuls
shll
sub
popw
or
cmpsl
ljmp
adc
jmp
cwtl
mov
fisubrl
jmp
loop
pop
mov
in
loope
or
mov
cmpsb
adcl
lahf
in
addr16
ja
pop
jno
pop
sbb
xchg
test
popa
decl
hlt
mov
leave
nop
sub
jmp
dec
jp
cmpsl
xchg
cli
mov
mov
mov
ss
pop
jae
or
pop
insb
dec
dec
movsl
xchg
xchg
and
xchg
insb
sti
popa
gs
sti
mov
mulb
mov
inc
pop
imul
mov
mov
fsub
xor
in
incb
xchg
popa
aad
or
stos
jge
cld
in
xchg
subl
inc
add
add
add
dec
movsl
adc
mov
scas
adc
loop
in
sub
or
ljmp
sub
roll
insb
mov
sbb
or
adc
dec
in
add
decl
lods
pop
in
out
and
pop
ss
int3
pusha
mov
insl
pop
jns
loopne
push
jns
add
fstps
pop
xor
orb
jns
fldcw
es
pop
push
mov
push
daa
aaa
xor
mov
push
dec
stc
xchg
js
fstpl
out
test
xchg
ret
stos
pop
pop
mov
mov
out
sbb
lods
cmp
js
ljmp
les
es
repnz
jp
pop
or
or
scas
lret
inc
fstpt
int
pop
dec
ljmp
lahf
es
adc
jns
xor
adc
stos
test
gs
xlat
push
sub
adc
popf
xchg
lret
adc
jl
mov
fsts
insl
cmp
outsb
sbb
sbb
into
popa
popf
push
hlt
jo
jae
pop
cmpsl
jg
cmp
mov
xor
pop
arpl
pop
bound
in
pop
add
and
mov
or
mov
rcr
fwait
daa
lods
mov
jne
outsb
mov
lds
sub
ret
mov
dec
out
or
seto
dec
pushf
mov
lods
es
add
repz
lahf
out
mov
in
jg
mov
cmp
cli
insl
cli
pop
mov
and
lcall
xchg
pop
call
add
jns
sub
loopne
push
xchg
mov
je
out
adc
push
adc
xor
dec
ret
push
mov
lret
push
xchg
movsb
pop
adc
jno
mov
cltd
mov
stos
ret
mov
jge
adc
jl
inc
add
shlb
xchg
xchg
xorps
fs
outsb
sub
cmp
fcompl
dec
inc
arpl
push
push
push
and
or
dec
ret
pop
pop
mov
das
mov
jg
nop
sub
test
xor
jb
xor
stc
iret
in
arpl
fistps
sub
ret
cs
daa
mov
and
push
sti
or
pop
stc
fwait
mov
cmpsb
mov
mov
ljmp
dec
ljmp
mov
jne
lret
push
fidivs
add
outsb
sub
arpl
sbb
push
scas
or
es
repnz
xchg
dec
ljmp
pop
mov
test
iret
shl
xchg
jne
mov
mov
xchg
fsubrs
push
in
sbb
and
jle
push
inc
cs
sbb
cli
out
iret
jp
jge
scas
xchg
pop
test
jge
pusha
cmc
fbstp
insb
pushf
add
push
push
mov
ds
and
imul
jmp
enter
sub
cmp
or
and
notl
add
cltd
sub
mov
out
xor
push
into
sub
lcall
scas
xchg
scas
inc
push
out
hlt
xor
ss
mov
in
sbb
into
fdivrs
sbb
pop
xor
sbb
jb
push
mov
inc
clc
push
iret
adc
outsb
notb
push
mov
out
into
xor
inc
lods
movsb
fisubrs
mov
loope
hlt
mov
mov
jns
cmp
lds
pop
or
insb
or
cmp
leave
cltd
imul
jbe
into
mov
dec
dec
mov
pop
int3
mov
cltd
push
sbb
int3
hlt
cmp
xor
inc
fcoml
in
xor
cltd
sahf
test
out
push
leave
dec
xor
movsb
lods
ljmp
xchg
lea
test
or
inc
or
js
and
outsl
add
hlt
fdivrs
inc
and
xlat
mov
imul
mov
xchg
mov
jb
ret
mov
into
jns
inc
dec
cwtl
xchg
jns
pop
in
pop
jae
push
stos
gs
cli
icebp
dec
insl
mov
or
push
movsl
sbb
out
add
sbb
sub
sbb
pop
negb
xchg
adc
addb
std
sub
jo
daa
add
add
jns
out
jnp
inc
cmpsb
scas
jne
dec
int
stos
pop
imul
cmp
pop
cmpsb
jmp
mov
jg
movsb
mov
rorb
daa
mov
in
xlat
lahf
insb
add
ds
test
std
jl
and
fdivs
pop
dec
mov
jnp
or
cmp
xchg
mov
nop
lods
add
aaa
fldcw
xchg
sbb
jne
dec
jl
pop
jg
xchg
mov
push
sbb
jmp
ss
xor
mov
cmp
in
test
mov
dec
mov
lret
mov
push
stos
lret
pop
frstor
dec
in
roll
rolb
and
xchg
fwait
pop
loop
out
jns
rcrb
ljmp
push
fnstsw
sbb
or
lret
repz
pop
shrl
insb
test
stc
clc
sbb
es
mov
enter
jbe
lods
shl
jle
pop
jg
push
ss
cmp
jmp
pop
add
in
jge
int3
mov
jge
sahf
sub
push
cmc
push
jae
mov
mov
adc
sub
outsl
pop
inc
pop
ja
subl
mov
ss
mov
mov
fmull
jp
and
out
sbb
mov
roll
cmp
inc
push
inc
dec
ret
out
icebp
das
cmpsb
loopne
test
and
repz
es
pop
loopne
xchg
xchg
hlt
mull
stos
dec
mull
mov
xor
flds
adc
add
sub
jge
jae
dec
pop
inc
pop
rclb
dec
pop
or
loopne
mov
movsl
cmp
or
jae
addl
test
hlt
and
repz
sub
stc
das
mov
mov
in
xchg
inc
sbb
and
xor
mov
sbb
imull
jge
and
mov
iret
jnp
lods
sbb
mov
push
lds
jecxz
and
sbb
fidivl
push
xchg
push
imul
rcrb
xchg
mov
pop
mov
cli
test
cs
dec
push
std
js
sub
cmp
add
lcall
inc
cli
mov
add
popf
mov
cmp
ret
addr16
mov
out
pop
and
test
add
loopne
jno
scas
and
mov
sbb
movsl
mov
lret
dec
int3
inc
loopne
inc
sbb
xor
into
pop
cltd
insl
fcomps
sub
repz
jae
pop
es
xchg
mov
aad
call
inc
inc
add
test
xor
ja
pop
mov
and
inc
push
sbb
and
sbb
dec
je
sub
mov
lret
sbb
leave
sarb
addr16
sbb
notl
sbb
dec
in
lea
mov
dec
sub
xchg
mov
test
push
call
sub
push
xor
mov
xchg
fs
orl
adc
dec
in
mov
and
scas
scas
js
adc
jne
cmp
or
negl
inc
shl
into
mov
cmp
mov
jp
pop
push
pop
mov
mov
jge
xchg
mov
int
mov
inc
xor
and
mov
clc
pop
lea
mov
xchg
or
idivb
es
fimull
xchg
shll
popa
out
daa
stc
push
outsb
mov
adc
mov
xchg
cmp
push
push
xchg
inc
push
jmp
pop
mov
mov
in
inc
shlb
rcll
cmp
cmp
fcmovnb
lods
sahf
add
mov
pop
mov
dec
push
xchg
rcrl
lods
movsl
je
and
pop
icebp
data16
cmc
out
mov
fs
pop
push
pop
xchg
and
rol
lahf
adc
push
sub
lods
cmpsl
sbb
andl
pop
data16
scas
jmp
pop
push
aam
je
push
lcall
push
testl
push
adc
jecxz
xchg
ret
ficoml
int
rclb
push
cmp
mov
add
sbb
push
cmpsb
push
mov
and
shl
inc
loop
fsubrs
jmp
add
icebp
and
daa
mov
cmp
mov
push
daa
loopne
lcall
aam
in
cmp
lea
push
jmp
and
dec
cmp
mov
rcrl
sarb
pop
imul
xorl
mov
mov
aam
pop
adc
push
mov
mov
fsubrs
xchg
mov
fnstsw
adc
lret
outsb
imul
push
jg
lock
loope
mov
xor
out
mov
pop
insb
mov
push
jb
stc
fadd
insl
pop
pop
jbe
inc
adc
icebp
pop
negl
sbb
sub
rcrl
fwait
inc
sbb
mov
jno
cmp
mov
mov
xchg
jmp
cs
mov
mov
lahf
shr
xor
out
decl
jp
das
leave
les
sub
sbb
inc
pop
sub
enter
fucom
repnz
xchg
pop
call
loopne
inc
xor
inc
or
aas
mov
scas
jne
push
xlat
int
pop
icebp
push
orl
loop
fwait
sub
fs
inc
jbe
mov
jnp
or
push
mov
adc
sub
inc
call
push
cmp
dec
inc
outsl
clc
xor
ja
fsubrs
sbb
call
ds
ljmp
push
js
fcomps
xchg
inc
sbb
popa
xor
xchg
pop
cmp
mov
cmpsl
imul
xchg
xor
dec
mov
fwait
movsl
and
cmpsb
or
pop
cli
jg
add
repnz
adc
int
das
pusha
fdivrs
jecxz
pop
mov
ret
add
es
jno
jo
xor
ficompl
xchg
pop
push
jl
sbb
inc
es
and
mov
sbb
cli
ljmp
pop
xchg
push
je
xor
or
bound
mov
addr16
jbe
or
mov
lea
daa
stos
fwait
addr16
je
push
push
mov
jnp
jl
subl
dec
sub
pusha
cltd
push
xor
inc
imul
inc
das
mov
idivl
add
mov
dec
cld
imul
push
mov
das
sbb
mov
push
and
mov
pop
cmp
dec
daa
lock
mov
add
das
daa
cmp
dec
cmp
out
js
dec
test
hlt
movl
mov
sub
cmpsb
clc
roll
xchg
inc
pushf
jns
mov
sbb
in
imul
sarb
adc
shll
adc
jmp
pop
pop
sub
mov
xor
fisubrl
xor
mov
cmp
sbbb
dec
inc
in
popa
or
rcrb
lcall
sar
or
int3
cmpsb
data16
dec
ljmp
mov
mov
pop
fwait
in
dec
jl
add
pushf
push
or
scas
push
adcb
push
cmp
aaa
sti
or
popa
cmpsl
xchg
cltd
mov
int
dec
into
shlw
adc
sub
outsb
xor
sbb
lods
shll
sub
mov
sub
jge
loop
fcompl
inc
ljmp
std
sahf
or
scas
icebp
in
or
es
mov
arpl
adc
sbb
adc
mov
jecxz
scas
inc
or
xor
push
inc
jge
add
push
outsb
out
in
sub
dec
and
sbbl
add
sbb
or
ljmp
pop
xor
imul
push
mov
cmp
aam
fadds
inc
sbb
cmp
paddsb
and
fisubs
pusha
je
int
or
fnstcw
inc
ljmp
lods
in
cmp
int3
sbb
push
stc
decb
pop
inc
cs
fnsave
push
dec
in
aaa
cmp
daa
sub
mov
mov
iret
push
out
lods
cld
and
mov
push
jmp
and
push
outsl
movsb
imul
cmpsl
lods
jge
pop
clc
stc
sbb
cmp
sbb
mov
mov
mov
mov
popf
and
into
int
adc
inc
iret
sub
mov
jmp
je
ja
stc
and
mov
outsb
jge
cmp
fiaddl
jae
aam
nop
push
mov
cltd
mov
movsl
push
daa
in
xor
ja
imul
mov
test
sub
fisubl
pushf
push
cmp
ss
inc
sub
and
leave
mov
xchg
or
and
xor
sub
sbbb
adc
xor
mov
dec
imul
xchg
mov
mov
dec
mov
push
shlb
pop
xchg
es
andb
pop
mov
test
sbbb
dec
lret
xor
imul
push
daa
ret
outsb
pop
in
sbb
enter
hlt
sti
stos
sub
sbb
inc
xchg
xchg
loop
xchg
fs
test
in
fsubl
add
adc
xchg
fidivrl
data16
cltd
into
fidivrs
insb
sahf
jns
adc
jbe
subl
inc
xchg
ljmp
mov
pop
int3
cltd
imul
dec
ss
sbbl
add
lret
popa
push
repz
push
push
in
inc
cltd
mov
sub
push
inc
loop
mov
pushl
dec
jb
js
pop
push
add
lods
das
add
lcall
inc
push
pushf
mov
and
jb
std
mov
fsub
push
addr16
out
bound
mov
imul
imul
lods
jne
call
push
jno
lods
jb
mov
mov
nop
jge
mov
jne
int3
ljmp
xchg
add
adc
or
out
mov
clc
neg
adc
gs
nop
xchg
int3
xchg
xor
pop
jae
lcall
loop
cs
mov
test
fwait
jns
js
es
dec
or
sub
addl
inc
fdiv
xchg
sbb
fwait
push
pop
xor
test
cltd
xor
sbb
adc
or
repnz
hlt
mov
loope
push
sub
jns
scas
add
clc
mov
sbb
outsl
lds
ljmp
dec
lods
dec
mov
add
dec
cltd
stos
jns
ljmp
push
aam
int3
push
mov
jae
repz
xchg
ds
daa
fisubs
or
cmpsl
int
ret
icebp
stos
inc
insw
stos
mov
into
lret
xchg
cmp
mov
es
push
repz
xchg
sbb
lods
and
mov
icebp
loopne
dec
not
and
or
es
cmpsb
lahf
test
jg
popa
aas
cmp
call
sti
dec
mov
ss
xor
imul
push
mov
test
mov
add
jno
int3
sub
and
cs
adc
rep
add
xor
or
aam
sub
inc
mov
mov
fs
add
xor
in
sar
out
xor
out
lahf
cmp
adc
or
mov
xchg
push
and
cld
stc
rol
nop
dec
cld
mov
xchg
or
fs
xchg
frstor
das
stos
ss
jge
movsb
push
jle
jb
push
ret
popa
sarb
insl
test
out
push
pop
arpl
call
mov
dec
mov
mov
adc
pop
test
xchg
mov
push
xchg
scas
rolb
lcall
das
sbb
dec
cwtl
addr16
clc
test
jmp
cwtl
pusha
loop
shrb
and
repnz
movsb
es
jns
sbbb
cmp
inc
fmull
cmpsl
cmp
jbe
in
int
jae
fistpl
insb
mov
mov
mov
cli
movb
je
pop
in
mov
mov
jno
xor
mov
les
lret
and
push
shlb
mov
imul
cmpl
mov
fidivs
bound
mov
ds
and
jge
and
rorl
mov
cmpsb
push
xlat
push
out
xorl
push
lcall
push
or
sti
cmpsl
mov
inc
lds
rcrl
pop
sbbl
sub
lods
test
xchg
icebp
popf
mov
inc
cs
or
and
xchg
fucom
or
rol
sub
jge
mov
test
fadds
push
mov
mov
std
dec
enter
fs
dec
cmp
adc
loope
mov
jb
je
jne
cli
loopne
fwait
jo
and
leave
and
jmp
cmp
dec
sub
sub
imul
bound
pop
cli
push
or
cwtl
fwait
pop
pop
lock
xchg
repz
adc
mov
shlb
jg
imul
jle
mov
shrb
mov
pop
xchg
iret
xchg
outsb
enter
xchg
ror
shrb
adc
lock
push
loope
pop
push
adc
int3
add
jo
dec
movsl
js
sbbb
mov
popa
push
div
mov
pop
and
xor
mov
add
loope
inc
jno
and
inc
lahf
inc
inc
in
jae
jg
mov
xor
mov
inc
ds
mov
ss
inc
fs
add
movb
and
cwtl
loope
ljmp
xchg
jo
fcomp
ficoms
add
push
mov
mov
sub
jmp
adc
sti
mov
xor
sub
lods
ja
sbb
mov
int3
or
sbbl
and
dec
in
decb
inc
mov
mov
mov
das
sub
hlt
sbb
cmp
jno
out
lret
pop
push
stc
mov
jnp
mov
cmp
mov
sbb
xchg
ds
fiadds
and
jo
cmp
cmpsl
add
cmp
aaa
xchg
shlb
add
add
insb
in
lea
rcll
and
xor
and
in
mov
fists
mov
mov
inc
roll
xor
cwtl
mov
jmp
imul
pop
mov
jnp
ret
je
adc
imul
xor
in
fsubl
add
push
imul
dec
xchg
inc
inc
cmp
leave
cmp
mov
xchg
movsl
xor
mov
enter
mov
mov
outsb
mov
loop
cmp
push
mov
or
push
ror
jp
add
repnz
and
mov
jb
cmpsl
mov
pop
sub
dec
mov
mov
out
dec
dec
pop
and
dec
fdivp
jnp
ret
add
pop
lods
jnp
lea
or
jne
fdivl
das
inc
or
mov
mov
mov
and
mov
in
in
adc
jmp
sahf
mov
add
xor
sbb
jnp
xchg
ds
pop
mov
movsl
mov
add
stc
add
mov
std
add
lcall
call
movsl
cmp
or
cmpsl
in
jb
les
mov
cmpsb
scas
xchg
inc
ret
clc
scas
or
jns
jno
and
in
fcmove
cltd
faddl
lret
rorb
sub
call
adc
hlt
push
and
mov
pop
pop
lods
push
repz
iret
jle
push
xchg
cmp
xchg
int
push
inc
cmp
loop
inc
adc
inc
les
rorl
push
or
decl
jmp
mov
test
sti
cmp
dec
je
leave
idivl
and
inc
dec
dec
addr16
push
stc
push
push
push
scas
or
mov
xchg
nop
out
xchg
inc
testb
sahf
sbb
in
mov
test
sahf
stc
and
leave
or
popw
jge
lcall
popf
and
repnz
stc
ljmp
xor
popf
adc
fnop
cmp
pusha
jnp
cmp
aaa
aad
stc
adc
dec
and
push
push
xchg
xchg
and
lret
sbb
mov
xchg
jo
faddl
add
dec
jo
push
sub
or
push
jno
call
cmp
jne
jle
xlat
sub
push
rcrl
pop
flds
add
xchg
roll
sbb
adc
xchg
outsl
enter
scas
in
adcl
std
sbb
repz
mov
das
xchg
imul
mov
cmp
mov
outsl
jno
das
popf
ss
js
push
xor
jnp
hlt
lret
repz
lds
mov
pop
jl
imul
add
jmp
es
push
adc
pop
mov
es
dec
loop
dec
mov
inc
sub
imul
and
jl
cmpsb
mov
xor
mov
mov
cmovo
or
pop
jg
ja
std
or
xchg
sbb
aad
loope
and
or
jl
xchg
push
push
inc
arpl
enter
mov
add
ret
mov
clc
imul
xchg
in
popf
pop
mov
pop
out
push
cs
clc
pushf
adc
push
mov
mov
mov
out
cmc
divb
js
pop
cld
jl
das
enter
mov
add
es
adc
repnz
outsb
xor
push
jbe
mov
and
push
das
sub
adc
test
mov
xor
sarl
insl
hlt
test
rolb
adcb
out
pushf
fcmove
jg
pop
and
add
mov
adc
cli
dec
push
in
das
and
sub
push
or
out
call
pop
pop
fistpl
mov
orl
push
les
push
out
or
and
jecxz
jno
clc
cmpsb
js
add
pop
mov
jmp
sub
sub
arpl
xor
shlb
xchg
leave
push
and
add
int3
ret
push
mov
adc
shr
mov
pop
fs
xor
sub
roll
inc
in
cmpsl
out
add
dec
arpl
icebp
push
cmp
imul
cli
or
adc
out
insb
scas
sbb
pop
xor
test
xchg
enter
fiaddl
clc
pop
fs
shll
add
cwtl
add
push
pusha
movsb
push
inc
scas
lahf
mov
mov
sub
mov
stos
leave
rcl
jb
mov
sbb
mov
mov
mov
insl
test
pop
xchg
stc
repz
mov
test
inc
pop
jle
arpl
xchg
cli
mov
sub
sbb
fs
cmp
test
mov
fmuls
test
sub
push
or
fdivrp
arpl
shll
jle
rorl
dec
es
aam
fcomps
mov
and
inc
push
ljmp
mov
stos
mov
pop
and
sahf
pushf
mov
fdivrl
insl
sub
repnz
jmp
popf
aad
repz
xchg
hlt
dec
xlat
mov
dec
rcrb
ret
push
lods
insl
leave
mov
sub
mov
cmc
insl
cmp
mov
cltd
icebp
shrb
nop
pop
and
add
test
push
insl
xchg
dec
inc
jle
fbstp
les
lds
pop
pop
call
lcall
or
jl
cltd
mov
sub
sbb
lret
inc
bound
orb
push
stc
xor
mov
pop
pop
sub
mov
jae
cli
push
int3
xchg
rclb
sarb
cli
pxor
pushf
lods
in
jcxz,pt
in
bound
or
mov
inc
or
andl
popa
stos
popa
add
sub
xchg
or
sbb
add
fimuls
repz
sahf
and
push
or
sub
repnz
iret
fldt
loope
aad
shlb
fistl
mov
roll
jmp
hlt
xchg
pop
cmp
es
jbe
mov
fbstp
push
pop
and
lods
mov
cmp
andb
aas
xchg
je
push
xlat
aam
bound
inc
pusha
adc
push
lods
pop
sub
fcoms
mov
xchg
sub
and
stos
pop
stos
jl
insb
pop
pushf
mov
nop
lock
mov
addl
pop
out
movsl
push
dec
sbb
jl
dec
loopne
cltd
rclb
lret
cmp
ja
add
jne
push
pop
add
jnp
in
lds
sub
inc
loopne
jmp
jnp
cmpsb
fwait
sti
mov
repz
dec
adc
jne
lret
mov
leave
nop
cmp
out
mov
orl
outsl
movsb
ds
or
mov
jae
xchg
pop
dec
push
pop
stc
loop
or
push
inc
sub
xchg
mov
out
das
add
xor
jns
cwtl
fcmovnbe
andb
mov
sub
test
inc
lcall
lds
imul
sbb
icebp
pushf
mov
lret
jp
fdivrs
xor
subl
cmp
inc
add
mov
jmp
xor
orb
lods
aam
xlat
or
jge
add
dec
xor
mov
aas
cmp
daa
loopne
inc
cmp
cli
outsl
dec
pop
pop
dec
jg
adc
out
xlat
and
jno
dec
sub
orb
daa
jle
shlb
pop
xlat
mov
sbb
scas
sbb
lods
xchg
pop
loop
pop
sahf
cmpsl
pop
xchg
ss
mov
cld
daa
xchg
push
xor
notl
sarb
cmp
jp
mov
add
xchg
repz
and
pop
fadds
pusha
icebp
add
mov
cmc
cmc
pop
sahf
arpl
and
adc
pop
pushf
lods
add
mov
add
pop
and
fiadds
repnz
dec
fcoml
mov
in
lds
xchg
sahf
inc
cmp
mov
jle
push
cltd
cld
jl
mov
mov
xchg
xchg
data16
dec
jb
mov
jp
inc
push
pop
adc
sbb
enter
das
fmuls
jae
sbb
dec
dec
mov
rcl
mov
fiadds
xor
xor
in
cmc
fs
lret
cwtl
fmulp
mov
ret
test
enter
push
loope
jge
sbb
pop
jne
cs
movsl
pop
mov
mov
popa
adcb
pop
xor
and
test
push
push
inc
gs
jl
push
adc
test
adcb
xchg
push
or
dec
mov
scas
push
mov
leave
decb
jns
das
sub
jns
pushf
inc
jne
aaa
mov
repnz
leave
dec
sbb
push
pop
lcall
xchg
mov
pop
jno
mov
xchg
test
fmull
imul
push
jo
cmc
rclb
imul
repz
or
push
lret
and
addr16
decb
jmp
test
enter
push
adc
dec
mov
es
inc
pop
fisttps
daa
popf
lret
dec
sub
pop
cld
cmp
xlat
cmpb
aas
incb
rcll
lret
mov
stos
sbbb
je
inc
xchg
std
mov
mov
mov
ja
and
mov
fcmovnb
lods
jecxz
dec
and
mov
push
mov
clc
push
xchg
push
dec
sbb
fidivrs
lcall
jl
sbb
lods
jb
xor
sub
and
popa
loop
call
test
and
jecxz
je
outsl
in
test
jl
je
cmpb
xadd
mov
scas
std
ret
scas
jp
mov
stos
fwait
into
jb
mov
insl
inc
lods
xor
decl
lea
rcr
mov
inc
enter
shll
mov
sbb
xchg
mov
imul
fnstsw
push
icebp
imull
add
jmp
popa
outsb
mov
xchg
and
inc
dec
or
and
lcall
mov
cmp
lret
xorl
arpl
sti
repz
dec
pop
mov
std
inc
aas
das
xor
test
in
clc
adc
aas
jl
pushf
mov
pop
jmp
and
sbb
push
or
loopne
or
cltd
mov
mov
jo
decl
out
adc
orl
jae
jne
lods
cmp
and
aaa
jo
repz
add
xchg
aam
jg
pop
push
icebp
mov
cmpsl
add
and
xchg
jle
sbb
int3
mov
movl
in
mov
mov
testb
test
cmpsb
xor
push
pop
cmc
jp
inc
je
iret
pop
pop
out
sbb
xchg
sbb
jle
xor
mov
sbb
push
cmpl
mov
push
or
in
aad
or
cltd
xlat
jge
jo
cmp
arpl
inc
add
test
test
fs
pop
dec
pop
rol
ja
movsb
pop
pushf
xor
movsl
pop
inc
fcmovnb
mov
adc
repz
mov
loope,pt
repnz
insl
lret
cmp
stos
xor
mov
cmp
out
xchg
jbe
mov
lret
lock
outsb
popf
jns
movsb
dec
add
xlat
mov
loopne
daa
inc
adcl
movsb
mov
roll
fiaddl
and
cs
stc
push
icebp
shlb
in
jb
dec
pop
and
mov
dec
pop
and
les
push
flds
psllw
push
adc
push
aam
mov
orb
push
fucomip
mov
pop
popa
out
or
enter
sub
iret
xchg
mov
cs
pusha
xchg
or
addr16
mov
pusha
pop
mov
mov
push
mov
dec
push
dec
pushf
cmp
enter
push
fs
mov
call
dec
out
dec
sar
dec
nop
push
adc
loop
jbe
pop
sbbb
sub
xor
loope
push
mov
cwtl
movsl
shrl
dec
and
std
js
out
ret
lea
out
cwtl
mov
jmp
ja
sbb
rol
mov
imul
loopne
pop
mov
mov
jae
stc
sbb
dec
test
push
cld
sbb
lods
push
push
inc
js
sub
das
add
push
add
les
xchg
les
adc
pushf
sbb
cwtl
mov
adc
cs
ss
adc
inc
xchg
inc
frndint
imul
xchg
add
fistps
pop
jge
adc
push
pusha
or
push
sahf
push
test
test
test
jle
sbb
imul
jno
mov
sti
les
adc
push
cwtl
push
stc
xchg
sbb
sub
sbbl
add
ds
repz
stos
mov
pop
les
mov
fcmove
mov
call
js
clc
sti
nop
xor
sbb
je
inc
push
test
les
or
lret
mov
sbb
dec
int3
cli
jo
mov
sbb
daa
popf
mov
lcall
mov
dec
add
insb
dec
add
adc
xchg
push
dec
pop
or
fldcw
lods
inc
and
into
inc
jo
mov
push
sbb
stos
cli
push
loop
leave
aas
push
sub
daa
jl
pop
xchg
insb
mov
xor
mov
jno
mov
push
cmp
dec
insl
jle
dec
push
rolb
call
shlb
mov
xor
mov
mov
dec
stos
popf
mov
cmp
xor
pop
movsl
jg
clc
inc
lahf
dec
jmp
nop
out
sarb
and
mov
dec
fwait
loop
call
fstpt
adc
pop
es
jmp
ss
pop
sub
add
jecxz
sbb
jge
push
inc
fwait
stc
or
xchg
clc
xchg
mov
mov
jb
cltd
push
jmp
jo
movsb
test
inc
in
andnps
sbb
cmc
cltd
sub
daa
dec
add
or
pop
int3
out
jbe
hlt
jnp
xchg
out
inc
ss
jne
push
mov
scas
sbb
dec
push
fisttps
mov
jle
sub
mov
test
mov
jge
loope
adcb
iret
cmp
das
mov
adc
lcall
je
dec
loopne
insl
mov
jle
inc
mov
xchg
stc
pop
aas
sbb
mov
dec
lods
mov
pop
xchg
leave
jns
arpl
hlt
hlt
mov
xor
in
test
push
or
sbb
jbe
jecxz
pop
mov
jns
enter
in
mov
into
xchg
jns
stc
or
pusha
xchg
and
xchg
in
pop
mov
xchg
push
or
rorb
out
pop
jecxz
or
arpl
cmp
scas
bound
loopne
push
xchg
dec
shlb
test
jg
scas
mov
int3
mov
cmp
sbb
cmc
adc
mov
je
xchg
outsl
jmp
hlt
push
inc
lea
cmc
stc
stos
pop
out
test
test
sub
jmp
fidivrl
and
leavew
adc
dec
mov
test
fdivrl
push
sub
cwtl
cs
shl
lret
push
movsb
sub
inc
out
loopne
and
push
sbb
add
push
ret
movsl
xorb
aas
fdivs
sbb
pop
stc
jp
sub
cld
mov
stos
lods
cmc
cmp
scas
aas
ljmp
lahf
cs
push
xchg
mov
dec
arpl
mov
sahf
inc
jecxz
lock
sbb
mov
lahf
xlat
lret
rorb
out
outsb
add
int3
test
or
sub
mov
sarb
dec
imul
fidivrl
scas
stos
out
xor
nop
notb
and
les
int3
lods
add
subl
pop
js
out
and
mov
test
std
push
adcl
sbb
jne
adc
mov
mov
mov
sub
inc
bound
push
rolb
mov
movd
test
and
sub
or
fcomi
push
shlb
dec
or
out
pop
ret
sub
mov
enter
push
sub
mov
mov
pop
xchg
mov
xchg
mov
lea
push
rol
movsb
mov
and
mov
inc
mov
mov
xchg
in
rcrl
adc
sbbb
dec
insl
pop
xchg
inc
loop
mov
fists
jg
cli
lret
add
mov
shl
stos
or
pop
fistl
mov
cmpsb
jbe
push
jns
mov
cwtl
sub
addr16
sahf
jge
mov
dec
adc
leave
out
cmc
add
loopne,pn
lahf
dec
pop
imul
xor
pop
pusha
out
jno
icebp
popa
aam
stc
adc
mov
cwtl
pop
xlat
or
rorl
leave
dec
inc
sub
mov
lcall
jp,pt
push
jmp
or
adc
mov
and
or
and
out
inc
jmp
addr16
jo
das
xchg
js
sbb
ja
sbb
pop
aas
or
pop
pop
push
incb
movsl
inc
jne
insb
popf
rolb
stos
jae
mov
inc
in
mov
dec
or
ds
nop
mov
ss
loope
stos
lcall
addl
and
mov
xor
mov
data16
nop
dec
shll
push
insl
mov
xor
cmp
push
jg
sub
pop
lods
test
daa
fsubrl
adc
cmp
in
push
mov
scas
cmc
cmc
pusha
jmp
or
aad
enter
stc
int
dec
fwait
in
in
ficoms
outsl
mov
cltd
mov
inc
stos
scas
cmp
mov
loope
dec
orl
out
mov
into
fs
pop
neg
mov
addb
lea
sbb
ss
fwait
xor
data16
loope
test
cwtl
xchg
in
fildll
cwtl
mov
repz
sub
mov
sahf
ss
push
loop
test
pop
scas
dec
adc
pop
mov
jmp
movsb
scas
out
out
dec
loope
movl
fsubrl
adc
flds
sub
sbb
stos
gs
adc
test
mov
sbb
hlt
fcomps
xchg
jle
int3
add
cld
sbb
std
cmc
mov
stos
outsl
add
push
outsb
daa
not
xlat
and
int3
mov
mull
xor
loopne
fcmovnu
repz
or
ss
aam
xchg
mov
inc
mov
pop
push
lds
and
stos
ljmp
inc
adc
xor
dec
scas
adcl
daa
lcall
pop
sti
lret
in
test
jno
push
rcrb
add
add
insb
pop
dec
sub
ud2
mov
out
stos
xchg
in
jns
cmc
pop
sub
push
mov
fbld
pop
sahf
lods
adc
out
mov
pop
mov
cli
sbb
sbb
ja
inc
cltd
dec
das
sarb
and
jae
cmc
std
adc
lahf
stc
adc
pop
leave
pushf
icebp
fildll
dec
jmp
mov
stc
test
mov
cli
mov
fdivs
ja
cmc
repz
sub
lahf
fwait
dec
push
or
fsts
in
mov
xchg
jg
push
jmp
xor
pop
cltd
stc
mov
xchg
js,pt
ret
lahf
ljmp
dec
add
jp
dec
cltd
adc
inc
mov
and
sub
icebp
fdivr
mov
arpl
add
cmc
dec
mov
ret
mov
fs
shl
je
cmp
or
movl
lods
cmpsl
mov
and
jge
push
or
pop
mov
pop
arpl
xor
and
jl
sub
jne
push
dec
fmull
jge
add
aaa
adc
in
sti
xor
adc
int
sarb
ja
lods
fistl
outsb
imul
mov
xor
xlat
mov
enter
xor
aam
sub
xchg
rorb
fimull
push
mov
mov
sarl
inc
lods
pusha
insl
pop
adc
hlt
cmpsl
push
and
cmp
sti
cmpsl
and
bound
lahf
and
push
adc
mov
jecxz
add
xchg
shlb
sbb
int3
or
or
arpl
lock
inc
lods
or
add
push
orb
sarl
jl
pusha
and
mov
enter
gs
test
cltd
mov
out
inc
adc
std
movl
pop
test
and
popa
mov
adc
loopne
out
add
jmp
sub
sub
rolb
aas
lahf
loope
and
jle
or
prefetch
push
mov
das
cld
dec
jne
cmp
es
out
aaa
es
xchg
add
xchg
pop
sbb
push
gs
xlat
xchg
mov
pop
fidivrl
mov
cmp
bnd
xchg
jge
dec
stc
mov
mov
inc
hlt
jnp
push
stc
pushf
mov
insl
push
insl
mov
jne
adc
push
or
mov
shlb
cli
gs
sbb
jmp
std
sbb
xchg
das
into
cld
cmp
sub
inc
adc
xor
or
dec
jp
push
out
mov
adc
int3
faddl
pop
aad
dec
arpl
jle
loop
xor
rcl
fs
movsb
add
out
mov
iret
aam
push
cmp
adc
data16
dec
ds
mov
xor
ficompl
lock
push
loope
mov
arpl
cmp
dec
push
xor
pop
pop
xchg
mov
sbb
or
pop
psubw
xchg
mov
jl
repz
std
fwait
push
inc
movb
mov
sub
xchg
mov
lret
sbb
pop
icebp
insl
push
lock
add
jl
fwait
cld
test
insb
fmul
mov
inc
jne
std
xor
and
mov
pop
cmp
and
in
xchg
and
push
pusha
loope
mov
sahf
cmp
jecxz
ljmp
repz
mov
mov
shrl
test
pop
sbb
inc
sbb
adc
ja
sub
fisubl
test
sub
mov
inc
mov
pop
dec
xor
push
push
jae
xchg
test
jnp
mov
pop
lock
xchg
push
or
mov
dec
rolb
lcall
repz
push
xchg
cld
fistl
leave
jecxz
ss
and
arpl
push
outsl
sahf
or
pop
jg
xchg
sub
in
sbb
dec
push
dec
aam
icebp
mov
and
repz
out
xchg
addr16
jg
sub
enter
push
or
fists
cmc
inc
mov
fbld
push
or
fldt
jne
into
mov
mov
add
lock
into
imul
sti
ficompl
or
stos
inc
inc
sub
leave
movsb
lret
inc
sbb
daa
jle
movsl
std
sahf
or
cmp
and
jp
inc
cs
mov
jne
pop
adc
fucomp
int3
dec
cmpl
xor
mov
call
pop
xorl
call
enter
js
dec
dec
ret
ret
sahf
sbb
and
sub
pop
push
js
xchg
insl
pusha
xor
dec
pshufw
int
daa
or
hlt
or
jmp
repz
popf
pop
mov
inc
adc
gs
and
insl
adc
lds
lret
imull
mov
adc
enter
push
and
cmp
hlt
int
lcall
int
mov
loope
movsl
mov
popf
and
pop
jl
out
icebp
ret
shlb
cmp
xchg
mov
filds
push
stc
push
mov
push
dec
mov
jae
sub
pusha
pop
mov
test
nop
xchg
fcoms
cmc
cmp
cmc
pop
push
inc
das
fwait
jecxz
sub
inc
or
repnz
mov
cmpsb
mov
pop
fmuls
inc
aam
bound
dec
es
dec
or
or
scas
dec
pop
in
cmp
cmp
insb
stos
xlat
cs
mov
jbe
sarl
in
jmp
sbb
dec
test
push
pop
out
in
pop
lcall
and
lods
xchg
push
mov
xor
pop
in
aaa
push
cmpl
xchg
or
je
adc
or
cwtl
and
out
inc
mov
xchg
jle
and
lahf
jecxz
mov
int3
mul
add
fnstsw
inc
dec
xchg
push
adc
push
pop
lret
ds
jge
fistps
inc
subb
pop
adc
imul
repnz
dec
push
out
mov
pusha
mov
mov
mov
sbbl
insl
mov
hlt
sbbl
pusha
xchg
xlat
int
subl
pop
adc
loope
cmp
pop
dec
fisttpll
stc
lock
inc
mov
push
dec
insl
jg,pn
jle
sbb
repnz
or
adc
mov
sbb
cmp
fsubl
rcll
test
or
pop
adc
mov
add
jns
mov
cmpsl
xor
lods
xchg
test
cmp
or
sbb
rcrl
cmp
cmpsb
adc
mov
mov
xor
jl
xchg
ss
lret
jp
mov
lret
dec
dec
dec
mov
cli
pop
scas
andb
insb
cwtl
int
inc
popf
dec
fistpl
int
inc
leave
mov
adc
dec
idiv
sbb
dec
scas
sbb
sahf
pusha
add
daa
jmp
sub
scas
mov
cli
sbb
or
mov
mov
push
data16
mov
adc
movsb
fisubrs
in
sti
popa
movsb
adc
xor
xor
jae
sti
dec
push
into
mov
popa
xchg
xchg
xor
or
jl
icebp
sbb
sbb
jnp
push
mov
aam
test
repnz
jp
imul
hlt
out
xchg
js
aad
and
leave
jnp
lret
insb
dec
pusha
and
mov
flds
shrb
leave
and
aam
cmp
mov
xchg
and
xor
outsb
adc
daa
adc
sbb
xor
mov
xchg
push
dec
and
leave
test
xchg
les
add
jmp
fadds
push
into
icebp
frstor
std
in
lahf
mov
lods
xlat
das
dec
arpl
add
add
xchg
sub
scas
into
fistpl
dec
sub
mov
rol
push
add
or
inc
sarl
adc
mov
outsb
add
mov
xchg
ret
adc
push
inc
cld
or
lea
in
roll
psubsb
rorl
push
cmp
addr16
adc
mov
mov
enter
dec
lock
mov
fwait
push
dec
sub
leave
and
push
movsl
push
pop
add
lret
xor
test
push
inc
insl
pop
mov
stos
sbb
orb
mov
sub
mov
adc
lret
fnsave
xchg
sbb
cwtl
mov
sahf
pop
filds
outsl
xchg
in
add
addb
sarb
push
cltd
mov
and
and
arpl
sar
or
jne
fwait
out
mov
insb
iret
aad
test
mov
enter
fiadds
loopne
push
fimuls
fcomps
sarb
sub
fwait
popa
rclb
adc
sarl
pop
dec
or
pop
mov
test
out
pop
and
cli
jg
jg
lahf
sbb
movsl
cmp
mov
adc
sbb
jae
sub
and
and
xor
mov
mov
dec
jl
fwait
mov
add
xor
leave
lcall
or
leave
and
mov
outsb
out
mov
sub
dec
push
jnp
imul
adc
jg
daa
sti
scas
and
add
jns
stos
cmpb
subl
jne
imul
es
outsl
mov
test
jns
mov
mov
stos
push
and
js
popa
sbb
sbb
fisubs
test
cmp
or
daa
rorl
mov
shlb
hlt
xchg
jle
xor
add
sbb
mov
test
data16
pop
insl
outsb
ds
xchg
xor
pop
inc
mov
cmp
dec
push
shll
stos
je
rcll
sarl
repz
cmp
in
orl
cmp
sbb
shrb
push
pop
popf
out
push
add
push
sbb
mov
es
or
int
xor
or
int
js
stc
mov
inc
adc
inc
sti
push
dec
cmpsl
dec
sahf
mov
xor
les
cmp
and
dec
iret
ror
sarl
push
lret
adc
cmp
aas
push
sub
mov
jnp
rorb
push
mov
dec
pop
dec
stc
push
das
lock
es
push
inc
scas
mov
nop
aas
cmp
inc
ror
test
ficoms
sub
adc
iret
lds
scas
adc
mov
push
push
std
ret
repnz
mov
mov
rcrb
xchg
jb
and
int
inc
das
ret
jbe
lret
dec
dec
push
jne
jle
pop
fs
cld
ljmp
or
xor
pusha
sbb
mov
cli
add
ds
imul
pop
fnsave
lods
mov
jo
out
hlt
jb
and
xor
add
xchg
shlb
in
fidivrl
cmp
imul
into
ret
mov
aam
cli
pop
ljmp
movsb
xor
popa
push
mov
mov
dec
das
repnz
loope
and
cwtl
mov
test
insl
jo
pushl
adc
adc
or
xlat
mov
dec
rcl
add
test
push
push
inc
mov
fbld
add
mov
mov
lods
adc
push
or
add
fs
adc
dec
jne
xor
cmc
pop
adc
mov
mov
int
push
mov
lods
push
mov
lea
xchg
rep
cli
std
or
lds
mov
xchg
push
dec
jecxz
in
arpl
cltd
loopne
shll
cmc
jne
cltd
lret
mov
pop
lea
fcomip
fnstsw
mov
cmp
inc
repz
dec
popa
dec
mov
out
adc
mov
jae
das
sbb
dec
loop
icebp
out
mov
rcrb
outsb
or
and
out
repnz
mov
mov
flds
jp
fs
lods
cmp
rcll
in
scas
jmp
jge
push
fmul
xchg
data16
lret
out
xchg
out
into
cmpsl
adc
ja
and
add
adc
call
push
adc
sbb
push
pop
jmp
in
mov
jmp
sar
push
movsb
mov
sahf
mov
lahf
sbb
add
shl
mov
popa
pop
dec
inc
jecxz
cmp
rorb
xchg
daa
pop
lret
xchg
sub
lea
and
cmp
xchg
sbb
loope
add
leave
and
icebp
nop
add
in
cmc
xor
mov
pop
cmp
cmp
push
outsb
push
adc
mov
sbb
lret
fldenv
in
push
pop
arpl
imul
fcoml
mov
test
jmp
clc
and
mov
inc
mov
leave
and
adc
cmc
mov
mov
dec
or
sbb
mov
insb
roll
xchg
jno
mov
pop
loop
sub
pop
or
mov
aam
pop
enter
adc
js
inc
mov
mov
js
adc
loopne
into
xor
call
pushl
sbb
loopne
cli
push
das
ljmp
sbb
xlat
xor
xlat
xchg
adc
lods
dec
ss
arpl
jp
hlt
cmp
mov
adc
and
mov
mov
cwtl
sub
mov
lret
ja
xchg
or
filds
mov
sbb
and
aam
loop
mov
cmpsb
mov
add
sbb
lret
and
jnp
sbb
push
lcall
outsl
repz
ja
into
cmp
xorb
test
push
les
cmpsl
mov
xchg
dec
cwtl
orb
gs
pop
test
mov
mov
cs
aad
shlb
jno
or
call
lahf
enter
inc
push
jbe
lahf
outsl
mov
cmp
loope
sarl
test
jmp
jmp
mov
test
movsl
fstl
roll
push
icebp
add
add
mov
add
inc
nop
push
cmp
outsl
imul
scas
push
int3
xchg
bound
loope
nop
inc
dec
loope
popa
stc
jne
jb
popw
xlat
iret
je
hlt
xchg
popf
xchg
jmp
std
scas
jl
les
cmpsb
ret
das
mov
xlat
or
fsubs
outsl
test
scas
aas
mov
pop
les
pop
incl
jge
jmp
pushf
and
je
in
loopne
jp
shll
imul
out
cmp
dec
fs
mov
push
orb
push
mov
push
pop
sub
sahf
aad
test
in
push
jns
add
jl
mov
xchg
ret
jge
lods
in
lret
pop
aam
mov
test
pop
mov
xor
pusha
into
test
aad
int
adc
lods
push
test
divb
jle
das
mov
loop
iret
int3
rcrl
add
fstps
jp
adc
je
sbb
sub
push
push
pop
scas
les
loopne
mov
pop
xchg
xchg
lahf
xchg
sub
shr
sbb
fidivs
or
out
pop
movsl
mov
ja
add
les
mov
push
mov
adc
inc
loope
xor
jnp
adc
test
mov
popa
or
and
ljmp
iret
lods
pop
dec
mov
xchg
mov
icebp
call
bound
repz
mov
ja
js
sub
inc
imul
and
cmp
stos
insl
cmpsl
push
jmp
in
pop
xchg
out
rolb
dec
nop
lcall
push
loope
int
jb
pop
dec
nop
pop
sbb
dec
pop
movsb
jmp
fwait
enter
xlat
pop
pop
lods
nop
or
jl
sub
gs
jb
addr16
fldenv
inc
rorb
mov
mov
xchg
jb
repz
int3
testl
ret
pop
push
shrl
test
xor
addb
sbb
rcrb
cmpsb
ret
out
ja
jecxz
repz
mov
push
out
das
mov
mov
or
leave
aad
popa
in
fwait
inc
fnsave
mov
pusha
clc
leave
sub
adc
xchg
pop
fbld
xchg
jecxz
insb
pop
sub
in
pop
ret
adc
shlb
and
es
call
aad
imul
pushf
out
cli
and
xor
xor
cmc
data16
mov
rcrb
cmpsb
leave
push
cmpsb
and
lea
jns
pushf
decl
xchg
mov
inc
pushf
fdivs
arpl
cli
add
lods
sub
arpl
fwait
xor
jmp
adc
iret
pop
and
pop
sbb
sti
or
cmpl
fimull
bound
stos
sarl
lret
mov
sbb
jmp
sbb
lds
lcall
movsb
mov
int
ret
cmc
jbe
mov
xor
push
dec
stos
loope
cs
inc
popf
jp
mov
into
out
movsl
xor
or
inc
iret
ja
es
push
xorl
popa
addr16
nop
jns
mov
sub
xor
add
xor
lcall
cld
stos
mov
xlat
fwait
mov
mov
or
mov
outsb
ja
dec
jns
mov
cmp
xor
imul
scas
daa
mov
lahf
pop
dec
fnstsw
jle
cmp
inc
lret
test
jo
fistps
sbb
je
and
xchg
pop
cs
sbb
lcall
mov
xchg
repnz
shlb
sbb
out
aas
add
push
test
jno
cli
fcom
movsb
ja
divl
cmp
pop
jnp
push
les
repnz
mov
fwait
sarb
sub
cmp
xor
xlat
fwait
mov
jle
inc
shl
andl
fwait
addr16
cmpsb
es
stos
pushf
scas
test
imul
mov
int3
lret
out
ret
das
jl
das
call
pop
jne
jg
scas
popa
rol
lahf
ljmp
push
or
xchg
xchg
sub
std
ss
sahf
call
dec
mov
gs
mov
inc
dec
push
push
arpl
inc
dec
stos
cmpsb
dec
pusha
dec
add
call
mov
lods
cmpsb
insl
and
and
cmpsl
mov
dec
mov
addl
and
and
mov
imul
xchg
sbb
dec
sbb
sub
lcall
or
mov
popa
rorb
scas
cmpsl
mov
addr16
je
notb
dec
fiaddl
adc
pop
mov
jb
jge
outsb
fstpl
mov
jb
fs
push
push
push
outsb
bound
sbb
cli
pop
je
add
dec
movsb
mov
inc
mov
pop
or
jle
sbb
mov
shlb
cmpl
mov
adc
pop
or
xor
es
cmc
cmpsl
ret
out
and
adcb
dec
add
aaa
sbb
lahf
sbb
add
sub
sub
sbb
icebp
mov
add
jmp
hlt
mov
xchg
jno
push
xchg
mov
aam
aam
movsb
or
xchg
test
ljmp
cld
aaa
aam
inc
push
jo
lret
sbb
in
add
or
mov
and
adc
or
xchg
pop
xchg
pop
movsb
dec
ret
mov
aaa
sqrtps
mov
lcall
add
or
pop
out
sub
or
js
add
mov
sbb
loop
adc
xor
cmp
push
dec
push
test
ret
lret
lds
adc
sbb
lcall
aad
sbb
test
sbb
mov
cmc
xor
and
or
cld
mov
push
jl
outsl
add
cmpsl
jg
ret
lret
sahf
mov
fsin
inc
jg
and
fwait
lcall
push
inc
xchg
jae
stos
pop
arpl
out
mov
jge
out
push
les
fwait
inc
nop
lret
sub
xchg
out
inc
xchg
push
cmp
or
mov
fdiv
or
inc
loopne
ficomps
sbb
xchg
jecxz
and
es
xchg
jbe
call
and
imul
inc
mov
dec
lods
fmull
dec
sub
lcall
je
jne
xlat
aam
rcll
push
push
sti
cmp
add
pop
pop
adcl
and
mov
das
push
enter
imul
out
pop
mov
fidivs
mov
mov
pop
xor
sub
test
jae
out
repz
fiadds
jle
lret
std
dec
fcoml
test
and
out
adc
add
cmp
vmovd
xor
push
push
adc
hlt
sti
add
imul
mov
cmpl
fmull
je
mov
sbb
daa
lcall
fisubrl
out
scas
jge
repnz
out
out
inc
inc
pop
add
cmc
js
push
cmpsl
cmp
adc
in
pop
pop
adc
sbb
int3
loope
mov
mov
add
aam
or
add
in
in
add
cwtl
out
fisttps
xor
ret
dec
add
sub
sub
pop
mov
xchg
sub
lods
push
push
loope
sbb
mov
bound
push
stc
jns
inc
cmp
les
out
mov
stos
jne
dec
popa
jns
cltd
movsl
pop
mov
std
mov
sahf
gs
inc
pushf
inc
and
push
jp
loope,pt
fnstsw
dec
or
or
fistpl
loopne,pt
add
adc
sbb
sbb
mov
shll
xor
or
mov
dec
insb
subl
adc
idiv
xchg
add
xchg
mov
imul
fiadds
sahf
flds
data16
cmp
div
xor
cmpsl
and
mov
add
jns
xchg
mov
and
cmp
add
out
sbb
mov
push
fstpl
cmpsl
cmc
jg
push
push
sub
xor
loope
cwtl
cmp
das
add
mov
xor
int3
ffree
imul
fiadds
sub
push
lahf
sub
jle
subl
test
shrb
jbe
icebp
mov
inc
insb
mov
jge
out
mov
in
ficomps
mov
aad
or
mov
int3
inc
adc
pop
daa
cld
out
fnstcw
les
out
cmp
or
in
sbb
icebp
mov
xchg
ret
dec
lods
jl
cwtl
dec
in
ss
lret
push
insl
arpl
jb
daa
jge
sti
data16
xchg
ret
mov
out
push
or
in
stos
mov
inc
clc
arpl
divb
shrl
push
or
loopne
adc
mov
pop
jbe
push
insb
popa
jns
or
inc
xchg
ret
into
xor
add
movsl
inc
adc
xor
pop
clc
mov
mov
sub
cld
aaa
outsb
in
sbbl
jecxz
inc
ljmp
push
adc
push
fwait
imull
mov
andb
mov
mov
pop
aad
jp
sub
cmp
sub
lods
or
mov
xchg
enter
mov
mov
out
iret
xchg
pop
lods
sti
shll
ret
mov
mov
jns
fcomps
mov
xor
and
imul
insb
stos
cmpsl
cli
int3
xchg
dec
dec
push
adc
jnp
sbb
sub
cli
fstpl
hlt
cmp
add
mov
fsubs
sbb
ror
lahf
xchg
fistl
das
adc
xor
jbe
adc
int3
call
cld
and
sarb
aaa
dec
pop
daa
mov
mov
xchg
jg
popf
lcall
cmp
testb
es
inc
arpl
aad
ficoml
and
push
out
outsb
or
push
flds
insb
push
std
in
imul
call
neg
inc
push
cmpsl
cmp
vcvtps2pd
movsl
fldl
in
pop
leave
int3
mulb
xor
push
or
inc
push
add
int
mov
or
neg
pop
mov
mov
pop
inc
dec
sub
or
sub
mov
fcmovne
mov
pop
mov
or
ret
outsl
stc
mov
dec
fcom
fistpll
and
subb
mov
pusha
mov
add
insb
movsb
xor
psubq
cmpsl
imul
test
addr16
inc
out
push
fidivl
inc
cltd
adc
jns
pop
daa
aam
jmp
imul
jp
mov
inc
xchg
pop
cld
adc
and
popa
sahf
fsub
hlt
movsb
mov
xchg
pop
pop
lds
mov
jae
cltd
jno
pop
fisubs
jo
mov
add
xchg
cs
int
insb
loope
push
or
mov
jg
arpl
push
shlb
mov
cli
ret
cld
int
fldenv
inc
ljmp
sahf
dec
call
icebp
mov
in
adc
sahf
sbb
pop
or
mov
mov
ret
adc
sub
ficompl
insb
mov
dec
cmp
sub
sub
iret
imulb
lret
cmp
dec
xor
pop
data16
mov
xor
mov
or
loop
push
push
testb
xchg
sbb
add
addb
mov
test
push
ja
rcll
dec
repz
add
cmp
gs
dec
cmpsl
xchg
dec
aad
xchg
xchg
add
and
pop
mov
out
sub
loopne
gs
jg
push
jne
lret
pushf
jbe
jg
xor
push
stos
jp
imul
testl
repnz
and
aas
jmp
stc
or
inc
push
in
gs
xlat
cmpsl
xor
mov
popa
je
push
or
push
mov
es
push
xor
push
ljmp
andb
inc
enter
repnz
xor
mov
pop
daa
std
sub
jbe
movsb
cmp
xchg
pop
inc
shrl
or
sub
xchg
xor
leave
inc
mov
shl
es
pop
mov
add
pop
bound
fs
data16
shll
xchg
shlb
test
lock
lret
xchg
es
push
push
out
xchg
add
xchg
addb
sbb
out
fadds
aas
inc
mov
mov
mov
iret
call
mov
gs
push
js
rcll
stc
lods
movsb
mov
xor
gs
outsl
xor
xchg
sti
fdivrs
add
cltd
icebp
faddl
xor
jns,pn
xchg
sbb
pop
daa
mov
lods
add
aaa
inc
nop
in
int
jo
movsl
loopne
ljmp
cwtl
popa
mov
inc
lahf
outsb
mov
xchg
sub
adc
test
clc
scas
push
fwait
cld
aaa
cmc
inc
pop
mov
sub
sub
adc
and
loope
xchg
in
or
dec
adc
push
add
ss
das
pop
cmp
cmp
or
sub
cmc
aas
loope
mov
out
sub
xlat
fwait
ja
ret
fwait
sub
mov
and
pop
mov
scas
mov
jle
test
call
popl
adcb
jg
cmp
sarl
mov
push
jg
pusha
xorb
in
xor
addr16
mov
inc
pop
jl
in
aam
jae
and
fucomp
out
out
dec
sbb
bswap
and
mov
les
adc
js
mov
lods
icebp
ds
cmpsb
dec
cld
cmpsb
xchg
push
mov
xor
mov
sub
add
test
sbb
mov
inc
test
mov
rclb
dec
test
jmp
fs
mov
outsb
fsubrl
mov
addl
int
mov
ds
fidivs
iret
jg
cmpsb
add
cmp
jne
push
add
out
jnp
scas
pop
cmp
lcall
xor
outsl
shll
push
xchg
ja
aaa
loope
xchg
mov
jae
push
dec
adc
out
mov
aaa
shr
jmp
mov
push
lods
mov
ljmp
sbbl
jns
into
fiaddl
lds
ret
sub
inc
gs
cmp
repz
and
les
lds
stos
scas
int3
xchg
pop
cmp
and
stos
pop
out
sahf
loop
in
flds
cmp
stos
mov
xorl
cs
fmuls
dec
cmp
xchg
cmpsl
cmp
xchg
sub
mov
clc
loop
mulb
test
cwtl
mov
mov
mov
dec
mov
jns
pop
call
xor
xchg
xchg
mov
sbb
dec
lahf
sahf
xor
dec
out
roll
mov
jb
ds
fs
and
mov
aaa
sbb
add
shl
lds
mov
dec
add
cmpl
jno
jb
mov
and
int3
xchg
add
dec
xchg
sbb
and
cmp
cmpsl
mov
mov
mov
fcoms
adcb
out
push
rcll
xor
or
icebp
insl
push
rcrl
mov
mov
pop
jns
push
add
jl
inc
mov
pop
scas
sarb
and
xchg
sbb
xor
mov
movsb
movsb
xchg
enter
flds
jg
dec
mov
add
mov
call
int
push
cmpsb
outsb
cmp
push
stos
jge
jo
dec
dec
push
and
sub
sahf
push
jb
pop
sbb
xor
push
inc
shl
ret
pop
jecxz
push
xchg
push
cs
push
mov
sbb
in
js
pop
add
bound
test
aaa
or
lock
bound
or
inc
arpl
and
fwait
jmp
inc
push
push
lods
add
cs
jnp
mov
int
pop
cld
es
jno
sbb
adc
aaa
mov
cmp
leave
daa
mov
jae
adc
push
inc
mov
enter
cmpsb
je
out
sub
cmpsb
push
lock
jmp
mov
mov
lret
dec
xchg
out
popf
cvttps2pi
sbb
outsb
movsb
add
lods
scas
sub
imul
mov
cmc
mov
divb
inc
push
adc
mov
mov
cwtl
jp
inc
rorb
mov
fmul
and
popa
sub
jo
mov
or
andb
and
insb
mov
outsl
cmpsl
test
xor
jl
scas
loop
cltd
dec
or
push
lods
iret
fsubr
testl
mov
je
jge
aas
lods
fsubrl
xchg
jmp
lods
pop
orl
paddusb
pushf
sbb
sub
sub
jno
in
pop
cli
mov
mov
mov
xchg
into
xchg
xchg
inc
lock
push
test
pop
sub
mov
add
stos
es
pop
adc
mov
xchg
cmp
cltd
xrelease
pop
mov
rclb
add
lcall
inc
ss
test
nop
xchg
daa
and
pushf
jne
or
and
ja
push
cmpsb
mov
aad
cltd
addr16
dec
sbb
push
jmp
iret
mov
pushf
pop
adcb
sub
repnz
aas
sub
fwait
sub
or
or
and
test
push
lock
sti
pushf
addr16
xor
push
mov
gs
push
outsl
sbb
in
mov
roll
cld
push
push
pop
popa
jns
nop
scas
sahf
inc
xchg
mov
in
cli
inc
sub
cmp
sub
sbb
push
xor
cmc
adc
rorb
leave
cmc
push
mov
push
ja
fwait
push
bound
xchg
out
or
scas
je
sbb
and
rcrl
xchg
jmp
imul
jecxz
loop
popa
icebp
dec
repz
movsb
mov
into
out
and
or
inc
or
icebp
sbb
adc
sbb
loop
rcll
sti
sub
lcall
jmp
arpl
xor
fstpt
sbb
mov
dec
jo
scas
sub
popa
cmp
fs
xor
or
popa
dec
inc
mov
add
jb
in
rep
mov
lea
in
mov
mov
mov
sub
add
sbb
mov
xchg
sahf
loope
push
lds
jnp
pop
push
cmpsb
ret
pop
jbe
adc
mov
jg
outsl
mov
in
aas
mov
fsubl
cmp
push
cmpsl
repnz
push
inc
pushl
fs
xchg
mov
fisubl
add
or
imul
add
int3
ret
sbb
pop
gs
cmp
push
rorb
sbb
add
jl
adc
mov
pop
out
cld
clc
mov
or
cmp
push
add
pushf
cs
sbb
dec
and
dec
xchg
sub
push
or
idivl
adc
mov
fisubs
jg
pop
fstpl
push
jb
es
pop
rcll
shr
mov
jno
ficomps
ror
sti
cmp
or
pop
movsb
xorl
andb
movsb
jle
out
adc
jns
movl
cmpsl
or
insl
ficompl
push
loopne
pop
scas
pop
xchg
imul
testb
cmp
je
push
lret
stc
add
les
cmp
lret
test
scas
jp
sbb
or
test
stc
stos
push
out
xchg
inc
daa
filds
fldenv
mov
stos
js
xor
movl
mov
push
sub
nop
fsubs
and
inc
dec
ja
into
shlb
inc
lea
filds
or
insb
push
mov
xor
stos
icebp
call
xchg
scas
dec
sbb
ss
sahf
mov
ss
xor
dec
mov
pop
pop
cs
pop
lea
or
dec
sti
dec
aaa
sub
popf
pop
int3
call
sbb
mov
cmp
sub
aaa
xor
push
cmp
adc
add
push
xchg
xchg
imul
xchg
inc
adc
mov
fldenv
jmp
mull
rcrl
lcall
aas
xchg
push
leave
lods
lret
dec
push
mov
push
push
out
jmp
aam
out
popf
dec
xchg
xor
fcmovne
inc
mov
daa
add
scas
inc
push
mov
outsb
mov
mov
pop
and
xchg
mov
jge
and
mov
outsl
jecxz
test
adc
pop
jbe
xchg
dec
adc
aas
ffreep
mov
lret
adc
xor
scas
aad
and
lock
sbb
sub
push
int3
jl
mov
adc
imul
jbe
js
lahf
gs
inc
jae
daa
sub
push
dec
bound
or
iret
aaa
jne
pop
mov
or
pop
and
sub
ljmp
inc
xchg
ss
and
inc
ffreep
in
lahf
shlb
inc
scas
test
dec
hlt
jbe
call
jo
jmp
out
sbb
cmc
sti
je
add
dec
into
sahf
js
fsts
popf
or
adc
test
add
jmp
aad
xchg
fs
and
mov
sbb
jmp
cli
lods
adc
jne
mov
stc
lret
pop
lret
aas
sbb
cmp
mov
mov
rcr
or
sub
push
addl
je
loop
jae
sbb
ljmp
dec
and
mov
mov
xor
cmc
popf
pusha
shrl
iret
lahf
jge
stos
decl
insb
push
popa
shll
addr16
rorl
push
fcomps
loop
subb
mov
mov
mov
incl
add
icebp
adc
push
data16
xchg
xor
arpl
int
mov
xor
cmc
mov
pop
inc
add
add
scas
sbb
lods
add
jo
inc
into
mov
leave
sbb
icebp
push
push
test
xor
and
fists
jge
pop
cmp
orl
sub
mulb
fcomps
loop
arpl
fistpll
push
sub
inc
cmpsb
dec
fdivrl
sub
cmc
and
xchg
mov
jg
sbb
jle
mov
out
outsb
daa
and
cld
dec
rol
adc
mov
fnstenv
mov
inc
push
adcb
into
fs
mov
inc
jl
pop
aaa
loopne
fidivs
inc
pop
xchg
pop
pop
neg
ljmp
cltd
repnz
and
mov
cwtl
xchg
out
insb
jg
xchg
add
push
mov
hlt
and
xor
imul
inc
xor
shrl
fstpt
test
sbb
popa
jns
inc
pushf
ret
adc
sub
inc
out
dec
sbb
cmp
ljmp
and
or
jg
test
insl
mov
mov
inc
jmp
add
mov
dec
pushf
insb
push
adc
xchg
inc
xlat
lods
in
ja
decb
or
xchg
mov
scas
mov
int
fs
jmp
jae
in
push
pop
inc
rcrb
outsl
aad
jg
outsb
rcrb
xchg
mov
sub
pop
push
cmp
add
xchg
inc
jg
add
shl
test
pop
ret
mov
call
pop
nop
test
sbb
mov
std
sahf
cmp
push
add
fsubs
dec
push
xlat
and
sbb
push
adc
lods
and
mov
and
js
nop
fcomip
nop
xchg
out
inc
jl
fs
sti
iret
lods
call
jns
cmp
cmp
shrb
cltd
enter
jg
das
je
shll
hlt
lods
in
pop
icebp
adc
inc
call
test
dec
testl
iret
ret
pop
test
and
movsl
je
jmp
inc
adc
pop
jle
and
pop
push
xor
flds
pop
mov
sbb
xor
loop
sbb
lock
sbb
lcall
xchg
cmp
out
xchg
div
pop
aaa
movsl
xchg
nop
andb
je
addr16
shl
mov
cmpsl
jae
mov
jns
add
inc
push
cmp
jb
insb
shrb
push
xor
es
call
pop
in
lock
imul
ret
xor
add
jg
ljmp
cmpsb
sub
cmc
sbb
repz
jg
xor
loope
mov
push
mov
out
sbb
cmp
adc
dec
incl
mov
bound
les
movsl
repz
insl
jae
push
mov
jge
inc
mov
std
adc
and
jle
mov
mov
orl
inc
mov
xchg
out
push
icebp
jge
stos
test
sbb
push
sti
das
mov
ffreep
push
into
jns
cmp
pop
pusha
mov
xor
js
sbb
inc
adc
inc
inc
lahf
lock
pusha
stos
pop
icebp
xchg
ror
loop
or
pop
and
adc
lret
pop
iret
jnp
cmp
cld
xor
sbb
cmp
or
sub
dec
xchg
pop
mov
das
sbb
add
lcall
adc
mov
inc
aas
repz
push
add
dec
push
adc
das
and
jns
out
imul
outsl
sbb
pop
inc
xchg
mov
push
pop
out
lea
jne
push
push
loope
cmp
fmull
out
sub
mov
out
pop
enter
repnz
test
cmp
push
mov
loope
fadds
fidivs
inc
sti
loope
stos
cmp
dec
out
xor
pop
xchg
adcl
jmp
into
pop
and
shrl
xchg
pop
stos
pop
pop
es
sbb
mov
jns
repz
mov
jne
in
mov
cmpsb
and
sub
add
xor
int
out
fimull
mov
cmpsl
sar
je
nop
sbb
dec
rorl
bnd
cmp
add
test
insb
ds
add
insl
dec
loope
add
mov
mov
fnstenv
popf
and
dec
xor
xchg
push
fisttpll
lods
xlat
test
xchg
cmp
mov
push
and
sar
cmp
scas
mov
outsl
sub
add
mov
loop
mov
inc
adc
add
dec
mov
testb
mov
xor
fidivrl
xor
jnp
adc
mov
stos
jmp
mov
cmp
xchg
movsl
in
and
pop
sbbb
loop
ljmp
pop
add
leave
sbb
xorl
fistps
push
xchg
xchg
iret
and
or
ljmp
xchg
push
pop
pop
mov
sub
loope
xlat
push
dec
iret
adc
mov
loopne
inc
mov
out
hlt
cltd
cli
adc
fld
mov
xor
int3
inc
test
stos
dec
xchg
imulb
xchg
into
clc
into
mov
loop
lcall
pop
pop
push
mov
ljmp
cld
insb
inc
test
rcr
mov
pop
xor
dec
les
sahf
cwtl
loope
push
pshufw
pop
inc
pop
js
repz
or
jo
ja
xor
inc
sbb
outsl
xor
jp
or
shl
inc
or
or
sahf
xchg
push
xchg
mov
lcall
jo
popa
into
pop
loop
psubsb
push
into
aad
pop
mov
pop
out
shlb
outsb
xor
mov
pop
loopne
inc
cmc
pop
arpl
out
cmp
movsb
std
lahf
mov
fwait
push
jmp
adc
scas
pushf
int
aad
dec
scas
sub
lret
imul
in
or
fistpl
jmp
imul
cmp
les
sar
lahf
movsb
cmp
out
adc
push
mov
adc
jne
push
jecxz
repz
xor
dec
sub
movsl
sub
imul
push
pop
mov
out
stos
test
mov
pop
cmp
add
sbb
lds
fcom
hlt
push
adc
aam
xor
fwait
in
stos
loopne
lods
mov
mov
lock
cmovno
xchg
inc
xchg
jle
xor
test
cmp
aaa
addr16
jno
cmp
push
lret
pop
xor
push
fucomip
lds
ljmp
out
nop
int
enter
ljmp
aam
mov
jle
in
dec
aas
fldenv
mov
jg
jo
into
call
jne
mov
loopne
jno
jns
es
lods
mov
xchg
mov
insb
call
jle
mov
mov
push
sarb
mov
mov
les
js
push
icebp
push
dec
mov
imul
xor
mov
sub
mov
mov
adc
dec
insl
cmp
addb
lds
sbb
push
aas
mov
loopne
xchg
sbb
pop
lods
add
jae
push
jo
test
divl
notb
jne
fwait
xor
cwtl
test
mov
out
xchg
addr16
or
mov
js
frstor
pusha
inc
and
xchg
dec
idivl
push
pushf
xor
lock
push
mov
lahf
push
push
jle
xor
cmp
jp
sbb
lock
jl
mov
inc
popa
add
out
mov
push
imul
pushf
or
xor
adc
add
or
movsl
stos
sub
push
sbb
fsubrp
repz
shlb
pop
imul
xchg
sbb
lds
repz
hlt
mov
pop
int
mov
push
and
mov
movsb
xchg
int3
mov
xorl
add
pop
push
popf
cmp
leave
pop
mov
mov
das
xor
push
cmp
add
pop
xor
xchg
and
nop
stos
mov
movsl
fcomp
pop
push
cmp
jl
jmp
lahf
lods
adc
mov
bound
push
ret
cmp
out
aas
inc
xchg
xchg
mov
pop
dec
lahf
fistpl
test
in
jecxz
andb
adc
inc
mov
xchg
lret
enter
jmp
sbb
mov
xlat
adc
fs
push
movsb
loopne
ret
imul
mov
pop
sub
nop
lods
inc
lret
add
nop
mov
pop
xor
or
lcall
rorl
ficomps
fwait
cs
iret
test
push
cmovp
ljmp
out
mov
scas
adc
fwait
cmp
inc
push
leave
cltd
xor
rclb
push
fisttpl
mov
xchg
add
xchg
or
inc
cmp
testl
cmpl
inc
sbb
psadbw
orb
je
adc
jp
idivb
repnz
testb
adc
inc
add
cmp
ficoml
xchg
add
mov
fdivl
shlb
lods
push
out
adc
data16
cmp
pop
je
andl
or
pop
push
add
movsb
jp
leave
sbb
aas
push
push
sub
jbe
mov
enter
gs
icebp
push
test
jl
pop
inc
popf
jne
aad
pop
ljmp
cmpsb
and
jmp
xchg
inc
loop
roll
inc
gs
scas
imull
or
ficompl
movsl
das
lea
push
fcoms
imul
mov
push
mov
mov
xchg
mov
idivb
pop
movb
loop
cwtl
mov
loopne
cld
rolb
mov
xor
pop
out
cwtl
idivb
pop
int3
jg
cmc
xchg
push
sbb
stos
mov
lcall
inc
jnp
jnp
imul
dec
push
addl
add
mov
mov
xchg
cmp
add
inc
ja
jl
int3
and
add
adc
or
jb
nop
out
push
xor
mov
sub
cmc
hlt
imul
daa
sub
bound
inc
in
in
mov
mov
jge
sub
sbb
fcompl
add
cs
inc
es
jne
test
pop
jge
add
mov
lcallw
fsts
xor
insl
jno
inc
sbb
fildl
loope
and
inc
mov
imul
sub
jl
jecxz
add
hlt
data16
push
daa
xchg
inc
stc
mov
pop
out
cmpsl
js
sbb
outsb
iret
jecxz
mov
idivl
hlt
sbb
adc
and
cmp
xor
xor
enter
mov
sbb
dec
loopne
inc
jl
ljmp
pop
fidivs
adc
ja
test
arpl
scas
shr
cmp
and
minps
cmp
sbb
adc
jb
testb
je
ret
in
int
test
mov
dec
jg
add
add
cmp
dec
ror
mov
in
out
pop
jg
subl
fs
add
pop
mov
push
push
lds
notb
lret
imul
push
sub
scas
mov
jb
mov
mov
dec
mov
or
mov
cwtl
push
push
js
loop
lcall
outsb
xor
pop
stos
das
push
mov
pop
lret
pop
outsl
stc
cltd
xsaves
cmp
das
lret
es
sarl
lret
cmp
ds
xlat
or
sub
inc
inc
iret
push
mov
xor
lods
jl
imul
dec
or
fnstsw
sbb
xor
repz
out
push
cmpsl
pop
outsb
cltd
lret
dec
mov
and
popl
or
or
mull
cmp
mov
adc
xor
xchg
cwtl
mov
sbb
cli
sbb
lahf
cld
xor
xor
in
xchg
mov
aas
and
mov
adc
popa
lods
mov
adc
fwait
lods
push
pop
inc
lea
aam
inc
int
arpl
loop
fstl
pop
xchg
cld
jbe
cmp
cs
jp,pn
sub
fwait
loop
imul
ljmp
mov
hlt
cld
das
das
std
dec
sbb
mov
cmpsb
sub
xlat
inc
and
pop
jecxz
dec
mov
and
jmp
push
inc
dec
lret
cs
pushf
andb
popa
or
rclb
mov
xchg
dec
cli
push
xchg
sub
mov
sub
and
js
ljmp
in
stos
insl
repz
push
sub
hlt
lea
sub
add
push
stc
mov
and
jmp
jae
cltd
inc
push
mov
dec
pop
xor
cmc
test
popf
adc
pop
and
cmp
movsb
pop
xor
sub
inc
cmp
inc
xor
push
sub
jecxz
jmp
mov
enter
jle
pop
lret
int3
incb
mov
test
inc
push
cs
dec
ja
nop
adc
add
lods
repnz
adc
mov
cmpl
fistpl
pop
xor
pushf
fsubl
mov
xchg
mov
fisttpl
aas
iret
aad
pop
or
inc
adc
test
push
mov
cs
inc
out
pop
cltd
jo
bound
sti
push
dec
sub
mov
xchg
and
mov
lods
push
out
jbe
mov
cmp
inc
xchg
insb
arpl
xor
in
cmc
xchg
jns
out
xor
call
aam
scas
pop
lahf
outsl
adc
test
imulb
jmp
jmp
dec
and
mov
sbb
add
repnz
cmpsb
push
cmp
shl
mov
or
in
js
push
mov
mov
in
xor
fcoms
push
mov
sarl
pop
cwtl
or
pop
xlat
test
push
cld
push
push
adc
pop
ret
sub
adc
push
sbb
aas
mov
sub
pop
lea
aaa
pop
jns
fidivl
das
loopne
repnz
enter
fidivl
loopne
lret
and
push
not
cs
mov
test
dec
jns
or
xor
sub
out
aam
mov
outsl
mov
jmp
adc
and
cli
add
dec
mov
jo
inc
test
mov
cltd
pop
mov
dec
push
sub
inc
js
hlt
in
sbb
push
sub
sarl
add
inc
pop
arpl
mov
clc
mov
nop
jbe
cli
je
dec
mov
dec
cld
in
xor
ja
adc
adc
jae
pop
mov
inc
cmc
iret
pop
frstor
ljmp
mov
mov
mov
dec
je
push
dec
mov
inc
inc
push
ror
push
insb
pop
mov
and
add
push
mov
jns
xlat
dec
shl
fnstsw
ret
fidivrl
aam
cmp
dec
jmp
mov
pop
and
jnp
mov
scas
cmpsb
mov
push
js
push
sub
fs
lret
mov
cmp
or
stos
sbb
aad
mov
jno
or
lcall
dec
and
int3
leave
mov
lea
aad
push
sbb
pop
scas
adc
sbb
mov
xchg
hlt
lea
xor
or
mov
cwtl
mov
mov
leave
aam
cmp
mov
aaa
cmc
bound
sub
popl
push
loopne
adcl
cmp
dec
push
pop
jg
push
dec
sbb
inc
cmc
pop
sub
add
xor
push
hlt
mov
movsl
mov
pushf
push
js
ret
adc
jmp
pop
mov
push
or
inc
pop
int3
ss
xchg
sti
lock
xchg
xor
imul
pushf
jae
jno
jae
mov
sub
insl
sub
pop
test
int3
add
out
and
xchg
xlat
ret
mov
mov
pop
mov
lods
xchg
hlt
sbb
or
jns
enter
inc
stc
aad
mov
jl
js
mov
scas
loop
inc
xchg
scas
jle
cmp
insl
pop
es
je
dec
push
push
sbb
inc
xchg
adc
lret
aad
xor
ret
dec
sub
and
fidivs
xchg
es
insb
arpl
lret
sbb
cmp
cmp
leave
aas
loop
lcall
and
imul
lret
mov
and
and
cmp
push
addr16
inc
divb
xchg
cmp
push
jl
lahf
mov
pop
sti
inc
inc
es
sbb
jne
pop
insl
inc
icebp
push
call
xor
push
adc
cmpl
fmull
insb
inc
test
or
mov
xor
movsl
mov
or
sbb
lds
ss
les
sbb
inc
mov
lods
dec
jmp
insb
sbb
loopne
and
addr16
pop
fidivrs
mov
lods
pop
out
mov
testb
xor
repnz
dec
daa
loope
jbe
lahf
adc
int3
int3
icebp
mov
ds
pop
mov
adc
add
cwtl
loopne
mov
divl
sub
push
fwait
xchg
popa
cs
ljmp
and
mov
negl
mov
mov
cmp
iret
mov
rorb
adc
and
mov
or
jg
je
jmp
nop
push
xor
or
in
stos
cwtl
pop
push
lcall
xchg
inc
nop
xor
lret
loop
shll
sahf
icebp
mov
push
bound
sub
add
pop
imul
push
cltd
cmp
mov
das
jmp
or
xchg
or
lds
test
int
xor
and
lahf
mov
xchg
sbb
insb
jle
cli
push
pop
jmp
int3
pop
and
xorb
addl
add
add
mov
mov
or
gs
stos
inc
inc
rcr
xor
or
repnz
insl
cmc
xchg
das
cmp
loop
mov
pop
fsubs
sub
jae
test
in
or
inc
cmp
bound
in
arpl
test
addr16
roll
sbb
call
sub
xor
mov
idivl
xchg
mov
out
jae
jne
sti
push
adc
add
icebp
repz
xlat
cld
adc
lods
adc
outsb
pop
add
popf
pop
in
jb
ret
push
dec
dec
aad
adc
sub
dec
or
outsb
mov
xor
or
dec
in
movsb
adc
inc
je
mov
testl
adc
pop
xchg
shlb
mov
or
lock
jnp
inc
xor
insb
lods
cmp
cmpsl
jo
shl
lahf
cmp
pop
push
adc
or
in
mov
jns
jecxz
dec
sub
mov
cld
lods
cs
js
add
lods
lcall
xlat
push
lods
stos
loop
inc
dec
dec
les
repnz
dec
sbb
jp
jg
mov
fstps
mov
scas
into
iret
cld
jg
lcall
popf
inc
jne
fcmovb
dec
andps
sub
ficompl
cmp
inc
adc
adc
push
and
mov
sub
add
mov
ss
test
sahf
decb
mov
xor
sbb
fcmove
rcll
cmp
mov
jne
arpl
fwait
mov
out
inc
fstpl
xchg
imul
or
mov
sub
sub
push
cmc
popf
roll
xor
aad
add
cltd
lea
das
out
and
loope
das
adc
sbb
jg
cmpsb
movsl
out
xlat
push
xlat
imul
jb
insb
jge
xchg
jmp
mov
movsl
imul
lret
cld
xor
jne
dec
repz
jle
std
or
adc
pop
or
icebp
add
ljmp
icebp
sub
jp
or
jmp
orb
mov
inc
add
ljmp
xchg
ljmp
es
push
or
mov
pop
stos
shlb
xchg
sbb
or
dec
cmp
mov
cwtl
fbld
and
dec
lret
inc
gs
or
stc
jp
adc
data16
stos
xor
sub
mov
and
mov
iret
out
cmpsl
cmp
div
adcb
lret
dec
inc
xchg
in
rcr
gs
cld
cld
push
idivb
push
pop
push
into
or
adc
mov
inc
mov
mov
sub
add
push
in
out
mov
stc
add
add
sahf
scas
dec
xchg
sti
mov
sub
or
and
imul
addr16
fnsaves
sub
jecxz
push
stos
lea
adc
xor
pop
pop
ds
outsb
popf
fsubr
sub
insl
lds
sbb
clc
test
mov
int3
loop
es
icebp
fists
test
add
dec
inc
rcr
xor
mov
mov
std
xchg
sub
xor
xor
movsl
aam
dec
dec
insl
mov
in
xchg
outsb
out
xor
dec
andl
xor
fstpt
stos
lret
adc
xchg
pushf
frstor
ret
push
aaa
out
cmp
mov
aam
mov
dec
insb
add
out
sub
jmp
push
pushf
jae
mov
mov
test
lahf
movsl
cmc
mov
lret
out
xchg
cmp
jp
xor
shlb
scas
je
insb
leave
jecxz
ljmp
jl
pop
mov
stos
jp
vmovss
adc
inc
jb
dec
jl
in
mov
sub
cli
and
mov
cld
cmp
fwait
push
int
ja
and
sahf
test
mov
inc
std
jg
add
inc
je
and
xor
lea
jae
stos
scas
cmp
add
inc
andb
or
fwait
je
push
add
adc
adc
inc
add
loope
cmp
xor
sti
sbb
xlat
clc
ljmp
dec
dec
or
imul
nop
andl
dec
push
xor
fldcw
fsub
mov
sub
stos
sbb
bound
or
mov
fldt
jns
lods
xlat
addr16
outsl
and
or
in
out
fwait
add
movsb
sarb
popa
sub
sub
xchg
sub
andl
dec
cld
inc
mov
shr
test
ret
push
clc
stos
xchg
dec
call
repz
clc
cmp
int
mov
or
mov
cmp
xchg
das
mov
and
out
lock
or
call
stc
lods
pop
xchg
stos
or
js
xchg
mov
ljmp
repz
dec
push
movb
fs
xchg
jne
roll
xchg
test
int
cmp
int3
pop
or
add
jle
mov
push
aaa
sub
pop
cmp
xchg
aad
ret
imul
test
out
pop
lock
mov
add
push
in
sbb
leave
and
aaa
lock
mov
jno
lds
scas
inc
push
ret
or
push
nop
ret
cltd
loope
jo
add
addr16
sbb
xchg
and
xchg
loope
outsl
mov
xchg
bound
push
out
xlat
mov
stos
jae
xor
push
nop
xchg
sahf
fstl
aam
push
jno
pop
xlat
movsb
fsts
iret
test
push
into
je
les
hlt
das
jns
adc
xchg
outsb
cmp
xchg
push
clc
out
xor
or
push
xor
aaa
les
imul
es
out
fidivrl
mov
daa
mov
jne
ret
mov
cmp
lret
js
xrelease
mov
rolb
leave
cmp
jne
pop
or
cmp
stos
jbe
popa
popa
test
enter
mov
xchg
jge
lock
cltd
dec
xchg
in
daa
mov
imul
in
adc
shrl
inc
out
dec
and
int
mov
cld
repnz
popa
in
or
sub
inc
jbe
daa
gs
and
xlat
or
icebp
and
adc
sbbb
jne
mov
xor
cmpsl
jg
cmp
or
push
fisubrs
sbb
pop
dec
movb
bnd
push
leave
sub
mov
xchg
jl
and
jl
mov
dec
lahf
push
fisubs
mov
and
clc
cmp
gs
mov
mov
shll
add
in
pop
adc
jecxz
shll
int3
and
mov
fwait
shll
ljmp
xchg
mov
and
repnz
sti
pop
aaa
test
jo
in
lods
dec
xchg
out
out
imul
xchg
cmp
and
xor
sub
mov
bound
rcr
stc
push
adc
adc
jbe
or
xor
or
cmpl
pop
pushf
in
inc
fisubl
fadd
ret
push
sub
test
nop
aad
lret
dec
sub
ret
adc
aad
xchg
fwait
and
movsb
test
push
dec
xor
fists
inc
jle
xchg
stos
hlt
mov
out
or
mov
pop
in
je
mov
pop
dec
mov
adc
imul
adc
lock
shl
dec
mov
ds
scas
xor
mov
test
sbb
nop
lea
sbb
or
jno
xor
out
ja
adc
enter
ljmp
pushf
pop
sti
aaa
stc
lahf
push
cmp
repz
inc
pop
push
inc
xchg
aas
xor
sub
xchg
stc
clc
sahf
xor
jl
xor
mov
icebp
mov
lds
mov
adc
loope
loopne
mov
and
jg
push
cmp
or
xor
outsl
popaw
mov
out
jnp
mov
push
cltd
leave
cmpsl
xor
adc
cmpsb
mov
out
xor
push
sub
add
mov
dec
ja
das
sbb
pop
cmp
mov
insb
jae
or
cwtl
clc
inc
jb
sarb
xchg
in
aam
mov
in
push
jmp
jle
jne
inc
adc
clc
pop
dec
xor
aam
fcoml
mov
mov
clc
je
enter
rcr
mov
lcall
ljmp
push
xchg
xor
xchg
out
cmp
jbe
sub
jle
arpl
rorb
pop
cmp
mov
hlt
push
push
xchg
xchg
pop
mov
dec
xchg
pop
rorb
mov
outsl
out
cmp
and
fsubrp
cmp
xor
xlat
pop
xor
inc
pop
jno
insl
mov
call
mov
pop
sbb
jb
or
ror
sub
pushf
mov
loop
mov
jp
push
aam
testl
test
and
cmp
pop
das
inc
xchg
dec
pop
insb
mov
pavgb
jg
xlat
xor
sysexit
inc
xor
enter
add
sub
mov
fidivrs
pop
inc
fwait
lea
dec
push
in
push
cmp
ljmp
mov
das
mov
test
mov
mov
push
sbb
fdivrs
jns
fcoml
popl
or
dec
js
push
jl
add
dec
sbb
idivl
mov
xchg
sub
jmp
xchg
shlb
or
push
mov
out
and
cld
xorb
clc
dec
ss
testl
inc
pop
and
add
add
sti
jno
mov
push
add
fildll
xchg
ret
sub
movsl
lret
sub
imul
and
jp
in
outsb
xor
push
sbb
jp
pop
dec
sbb
lcall
int
xchg
xor
inc
stc
iret
fstl
leave
lcall
sarb
sahf
adc
jno
push
mov
jno
leave
xor
enter
sub
inc
rolb
dec
push
push
out
mov
imul
aad
in
or
outsb
jmp
sub
cmp
sub
test
lock
sbb
sub
sbb
cmc
push
stc
xchg
add
jmp
mov
bound
sti
adc
fnsave
shrl
jle
icebp
les
lret
lods
arpl
aam
out
xlat
jmp
pop
pop
pusha
arpl
insb
out
or
mov
xchg
inc
add
or
jns
mov
push
pop
sub
movsl
mov
push
mov
lret
hlt
out
push
scas
mov
ds
push
out
xchg
jecxz
cmp
add
inc
scas
mov
adc
popa
mov
lods
lea
scas
inc
sbb
dec
rorb
xchg
sti
adc
mov
or
cld
pusha
in
inc
stc
mov
std
push
push
jb
movb
inc
nop
aam
mov
das
add
adc
xor
insl
sbb
rcrl
add
adc
dec
mov
mov
mov
in
pop
cwtl
mov
lret
sub
mov
lret
idivl
inc
cmp
sbb
insb
push
bound
and
cmp
push
repz
cmp
jno
cltd
xorps
mov
testl
mov
push
fadd
fadds
add
imul
loopne
aad
rorb
je
add
cld
int
and
sub
push
xchg
inc
xchg
mov
push
outsl
imul
or
inc
loope
lods
movsl
mov
dec
fistpll
aam
jne
and
in
stc
stc
fdivrs
push
dec
mov
mov
sahf
scas
cmp
das
push
std
inc
in
cmpsl
pop
shr
std
or
jecxz
int
add
outsb
loop
inc
xor
xor
jp
popf
xor
xchg
inc
daa
jb
cmp
pop
andl
xorb
xchg
push
dec
out
push
in
mov
push
sub
inc
test
jmp
mov
pusha
imul
or
sarb
adc
cli
test
ja
push
cmpsl
fdivp
inc
arpl
sbb
or
lock
pop
fs
cmp
pushf
jp
push
ficompl
jmp
push
in
sub
sub
les
sub
ret
mov
push
pop
pop
rcl
test
or
out
pop
ja
pop
jo
mov
stos
sti
das
movl
fisttpll
cmpsl
cli
fidivrl
inc
mov
loopne
adc
leave
test
mov
lock
xor
sbb
cli
sub
ret
loope
inc
dec
int
cld
mov
dec
cmp
jne
dec
xor
arpl
mov
jmp
dec
xchg
adc
or
lock
mov
fidivl
add
pop
mov
popf
lea
aam
orl
mov
mov
cmp
fwait
push
cmc
xchg
push
pop
cmc
andl
sub
fiaddl
clc
adc
in
aas
adc
dec
add
aas
dec
addr16
and
cmp
decl
in
int3
adc
push
and
call
cmp
popf
fldenv
add
daa
pmaxsw
dec
lret
xor
adc
int3
xchg
incl
neg
cli
jmp
cmp
andl
loopne
or
jae
fidivl
ret
les
mov
cmp
jge
dec
test
cmpsl
inc
jbe
pushf
dec
mov
call
and
rcrb
scas
jno
test
es
addr16
sub
dec
pop
mov
cltd
loopne
fs
rorb
fldl
sub
hlt
out
cmc
pop
and
notb
scas
xchg
cmc
test
mov
mov
pop
js
add
fmull
dec
pushf
outsb
ret
jnp
fbstp
test
jnp
xchg
cmp
sbb
pop
cmp
xor
push
arpl
movsb
les
or
aad
inc
jmp
xchg
add
mov
in
ja
jge
xor
sarb
out
hlt
fidivrl
mov
add
xlat
and
add
out
addr16
addr16
lret
outsb
sbb
mov
push
mov
push
int3
jae
and
arpl
imul
cltd
stc
mov
lea
and
sbb
sti
jo
pop
cmp
xchg
inc
outsl
mov
jmp
fsubrs
bnd
adc
push
lret
enter
jecxz
mov
adc
mov
jae
push
fs
adc
out
and
adc
or
inc
fimuls
les
out
push
xor
repz
lods
pop
fidivrl
adc
stc
jnp
lcall
sahf
ds
add
xchg
pop
popa
push
sbb
loop
push
arpl
outsb
sahf
cltd
stc
lcall
fidivrl
jns
inc
mov
dec
int
mov
push
add
push
and
iret
int3
xor
call
mov
nop
les
ret
dec
lds
mov
xchg
xchg
dec
jle
sbb
cmp
xchg
add
dec
scas
insb
mov
fstps
psubb
dec
push
test
mov
sti
add
push
mov
add
sbb
cmc
out
daa
inc
pop
jmp
xchg
in
push
push
and
jo
les
mov
pop
mov
mov
fmuls
pop
cmp
sub
imul
sarb
mov
lahf
jge
xor
test
fdivrs
insb
push
jo
mov
and
mov
adcl
jp
mov
inc
mov
loopne
inc
negb
aad
ja
mov
sub
push
lods
mov
dec
cld
jl
pop
push
and
addr16
jge
pop
insb
js
mov
int3
fisttps
aam
int3
xchg
inc
sub
out
cmp
rcrl
and
in
sub
pusha
cmpsb
jne
jl
rcrb
lods
cmp
xor
int
call
xchg
icebp
mov
lods
push
popa
mov
in
jbe
dec
rclb
ret
or
es
jo
inc
sub
fbld
pop
rorb
popf
mov
lods
lods
outsl
push
daa
add
out
xacquire
push
xor
mov
bound
pushf
aam
or
pop
int3
sub
lods
in
lea
xor
gs
mov
or
out
mov
ret
xchg
int
hlt
cmp
xor
push
aam
and
hlt
jns
xchg
es
imul
mov
std
out
xorb
push
sub
xchg
movsb
into
mov
mov
out
xorl
xchg
inc
arpl
push
sbb
push
shll
jb
jbe
push
arpl
sti
pop
pop
or
stos
mov
pop
mov
fnstsw
insl
ds
out
fucomp
lahf
push
dec
dec
lcall
stos
in
and
iret
sub
nop
arpl
lret
xchg
push
and
xchg
push
dec
dec
dec
je
xor
xor
pop
pusha
inc
add
xor
push
jmp
int
push
sub
jmp
xchg
cli
cli
xor
imul
xchg
pop
lods
jbe
imul
lret
and
xor
adc
sarb
ss
xchg
adc
sub
xor
lods
jo
test
and
divb
ret
cmp
test
xor
pop
inc
xchg
ficoms
loope
dec
mov
test
mov
lret
pop
and
mov
loope
inc
mov
mov
shll
push
mov
mov
out
addr16
fcoms
jbe
xchg
sarl
jg
js
cmc
imul
testb
add
pop
shrl
outsl
add
mov
xor
dec
jmp
pop
xchg
popl
add
ret
xor
in
aam
arpl
push
jb
imul
std
jnp
ficompl
mov
lret
bound
jl
pop
jle
movsl
stos
outsl
arpl
lods
mov
adc
dec
push
icebp
test
shlb
push
jecxz
mov
jbe
nop
push
mov
mov
lcall
inc
aaa
pop
jecxz
scas
adc
movsl
fwait
out
jp
pop
mov
cmp
adc
out
jae
add
and
mov
sbb
pushf
jecxz
cltd
in
cmpsb
xchg
mov
daa
and
or
pop
sahf
sar
mov
int3
xor
pusha
inc
inc
jmp
lcall
sahf
insl
adc
xlat
inc
cmpsl
mov
cld
pusha
divb
and
jnp
pop
lods
cwtl
jle
and
fs
loopne
imul
imul
mull
nop
int
add
sbb
repnz
xchg
mov
shll
out
repz
add
cmp
mov
and
jne
or
imul
mov
pop
add
insb
xchg
sbb
mov
or
pop
cs
ret
sbb
xchg
push
mov
adc
stos
mov
jg
inc
push
ret
sub
push
aad
mov
pop
lahf
sti
mov
sbb
ljmp
not
sub
orl
xchg
xchg
jecxz
dec
stc
push
sub
inc
clc
ljmp
iret
push
scas
mov
and
ss
mov
jns
push
mov
push
nop
inc
dec
fs
mov
loopne
cmp
rol
cld
leave
inc
mov
cltd
mov
add
sbb
mov
shlb
out
pop
mov
in
and
pop
push
into
cmp
and
xlat
jne
ret
bound
or
cmp
push
jmp
mov
pop
and
cmpsl
mov
out
xchg
sbb
xchg
xor
push
sub
inc
out
adc
cmpsb
test
lea
loope
outsl
subb
adc
mul
xor
bound
rolb
cmp
rcrl
ret
lods
loopne
loope
in
add
test
pusha
fcoms
andb
ds
mov
cmp
mov
iret
inc
lods
cwtl
and
sbb
gs
pop
jp
pushf
mov
push
add
gs
sbbl
mov
dec
test
add
inc
mov
out
dec
fadds
das
add
ret
sub
arpl
push
iret
push
dec
data16
xchg
xchg
jo,pn
adc
addr16
call
das
push
sub
and
and
orb
adc
fldl
xor
imul
cmp
add
xor
movsb
popa
aad
mov
sub
adc
mov
out
sbbl
lds
push
mov
cltd
push
lea
mov
or
jbe
lcall
xor
cmp
pop
repnz
mov
jp
mov
push
aad
jg
clc
test
bound
repnz
nop
test
or
mov
outsb
jae
cmp
cld
fistpl
mov
jmp
into
or
lahf
adc
movsl
data16
push
mov
push
dec
sbbb
xchg
xchg
mov
inc
fdivrp
or
pop
repnz
xchg
fistpl
pusha
ret
mov
xorl
pop
push
imul
sahf
insl
mov
enter
rorl
jbe,pt
ljmp
cmp
mov
and
mov
jp
xor
addb
mov
push
mov
ja
repnz
xchg
mov
aas
dec
or
ja
repnz
mov
jmp
insb
mov
mov
ficoms
dec
scas
or
dec
mov
cmp
mov
xchg
rcl
imul
mov
mov
addr16
pop
fs
jl
or
jge
andl
mov
push
loop
jnp
shll
imul
es
mov
push
aas
and
push
arpl
fdivl
lods
mov
std
or
xchg
cli
mov
xor
out
mov
shl
mov
inc
adc
adc
sub
xchg
and
cs
jge
test
ljmp
push
dec
cltd
cmp
je
xchg
mov
cld
in
testb
mov
sbb
enter
mov
sti
dec
mov
pusha
mov
or
js
mov
push
int3
jge
jne
call
push
sahf
dec
jno
call
repnz
insl
pop
sbb
xchg
push
lock
out
mov
cli
cmp
adc
imul
shll
mov
sub
mov
nop
ss
dec
cmc
scas
inc
mov
outsl
inc
loop
gs
cmpl
xor
pop
out
cmp
test
jmp
mov
sub
push
leave
dec
xchg
hlt
ror
dec
arpl
add
cmpsl
push
pop
xchg
in
push
mov
scas
adc
clc
into
fdivrs
mov
idivb
cmpsl
addr16
push
jp
and
pop
xchg
loope
scas
sbb
jb
and
fisubrs
imul
adc
pop
mov
adc
mov
mov
arpl
das
dec
inc
push
sub
in
mov
test
mov
dec
stos
pop
pop
push
aad
dec
or
in
add
stos
push
int3
fadds
mov
cwtl
ret
mov
sbb
push
cmpsb
inc
jb
jbe
aas
clc
mov
loop
jne
or
fs
fs
mov
daa
sahf
adc
jle
jmp
push
je
sub
icebp
stc
filds
and
inc
pop
add
pop
dec
movl
repnz
add
inc
inc
lcall
inc
xor
sub
add
hlt
enter
popf
mov
clc
iret
loop
sbb
sub
arpl
cmpsl
ljmp
aam
data16
dec
cmc
or
leave
push
mulb
scas
mov
cwtl
pop
movsb
in
ret
xor
fs
shlb
push
pushf
sub
subl
lea
lret
add
push
xorl
cltd
aaa
push
push
andnps
sbb
mov
xchg
shlb
popa
stos
cmp
out
jmp
xorb
ret
inc
pop
inc
aam
fisubs
popf
ror
push
and
ja
dec
mov
pop
addr16
idivl
mov
inc
add
or
popa
lahf
jp
dec
add
mov
inc
loope
or
pop
cmp
or
mov
mov
sbb
popf
add
aaa
jmp
adc
lret
mov
scas
jle
daa
rolb
sarl
jecxz
sbb
mov
cmp
sbb
lods
popa
cmpsb
ljmp
mov
aas
push
and
in
push
sub
popf
mov
jae
aas
inc
sbb
insl
decb
push
xor
xor
movsb
xchg
jg
add
insb
in
popf
mov
movsl
inc
inc
dec
push
dec
punpckhdq
push
ret
stc
mov
mov
rclb
arpl
fistpl
adc
mov
repz
sbb
add
pop
inc
hlt
push
fildll
frndint
cmp
std
pop
imul
or
inc
push
push
push
inc
xchg
mov
xor
and
or
xchg
sub
fbstp
out
fbld
mov
mov
fidivs
addr16
inc
mov
stos
pop
sub
test
dec
adc
sbb
lret
cmp
or
pop
mov
dec
das
js
xor
jnp
or
xlat
add
pop
hlt
mov
js
call
inc
mov
cmp
cld
clc
stos
mov
inc
or
pop
test
mov
mov
mov
mov
loope
jg
loopne
in
aam
sub
roll
xor
xor
adc
out
test
mov
inc
dec
js
mov
into
xchg
movsl
js
add
or
pop
inc
fsubr
add
mov
std
jmp
inc
hlt
imul
xor
test
imulb
in
sbb
and
sbb
mov
fstl
mov
or
xchg
mov
push
iret
orl
or
jo
jnp
push
int3
ret
jae
lods
fsubl
hlt
das
inc
and
das
loop
repz
and
and
push
loope
lcall
lret
mov
xor
mov
sarl
out
in
bnd
and
push
fwait
add
xchg
mov
inc
mov
test
dec
sbb
in
daa
int
rclb
push
xor
mov
cmp
mov
xor
xchg
or
test
andl
stos
rcrb
mov
push
frstor
pop
xchg
outsl
adc
pop
pop
notb
mov
inc
repnz
xchg
cmpsb
movsb
jns
btc
mov
jbe
inc
je
rcrl
data16
lods
dec
xchg
sub
cltd
mov
jle
jb
inc
bnd
mov
and
sbb
ja
mov
xor
loopne
nop
pop
int
int3
leave
jmp
mov
in
addr16
cmc
or
jmp
es
or
shlb
cmc
negb
add
mov
je
into
dec
add
cli
mov
xchg
push
sbb
dec
xchg
jmp
mov
andl
pop
jo
push
stos
pushf
lret
jb
sbb
ret
dec
mov
adc
pop
sarb
mov
pushf
rol
add
push
in
xchg
dec
dec
popf
enter
inc
adc
xchg
lock
leave
jp
add
jbe
imul
das
ss
stos
jne
sbb
jg
rcr
fwait
cli
add
dec
mov
cmp
data16
mov
imul
mov
leave
sbb
or
shll
mov
mov
out
xor
pop
or
sub
ficomps
test
je
or
repnz
xorb
test
lea
fisttpll
adc
int3
loope
pop
aaa
loop
movsb
aas
dec
aam
mov
and
xchg
add
inc
dec
mov
mov
adc
dec
pushf
xor
adc
icebp
xchg
add
stos
aad
cmp
adc
jbe
repz
test
daa
push
testb
ss
mov
mov
orl
cmp
jae
gs
fildl
pop
scas
jecxz
or
sub
pusha
sub
imul
mov
out
pop
insl
or
sub
fwait
insl
adc
adc
mov
adc
aaa
mov
in
imul
cltd
jne
mov
xlat
jae
push
xchg
xor
das
adc
repnz
cs
je
hlt
cli
mov
test
mov
rcrb
stc
xor
mov
sub
loopne
ss
pop
xchg
adc
mov
es
mov
and
mov
push
rcl
gs
pusha
inc
or
xor
cmp
mov
sub
gs
inc
hlt
inc
dec
adc
ljmp
sub
and
ficomps
cld
daa
lea
in
adc
and
outsl
lods
add
push
xchg
sub
lods
and
int3
ss
inc
in
mov
xchg
jae
xchg
mov
cmc
out
cmp
inc
inc
adcb
pop
test
sahf
cltd
cwtl
sub
ja
rcrl
mov
pop
mov
sub
aas
lods
test
jns
adc
incb
xchg
add
mov
or
outsl
add
ljmp
aad
pop
shlb
or
in
popf
sub
push
sbb
add
int
nop
cmp
stos
add
ljmp
xchg
loop
and
lds
adc
lods
ret
inc
xor
push
popa
outsb
xor
xor
mov
and
inc
pop
adc
iret
js
test
adc
or
loopne
cmp
or
mul
fimuls
fidivrs
lods
mov
mov
arpl
jnp
pop
aad
push
mov
xchg
cmp
imul
testb
in
jle
add
push
add
mov
push
stos
cld
xchg
sbb
sub
jne
scas
push
iret
mov
inc
lcall
out
pop
jmp
cmp
xchg
mov
js
mov
and
int
orb
popa
mov
repz
repz
xchg
call
and
xchg
insl
repz
shl
jae
aaa
aaa
cwtl
dec
test
adc
jne
cmp
mov
dec
ds
or
jne
ja
pop
scas
adc
dec
or
sbbl
pusha
incb
int
push
cltd
add
cmp
popa
xchg
or
sub
icebp
out
fxsave
xchg
jmp
sbb
mov
xchg
mov
arpl
adc
cmpsl
test
push
inc
cltd
lods
push
mov
cmpsb
js
rcrb
pusha
ljmp
pusha
fisubl
les
dec
or
mov
or
inc
jmp
addr16
pop
mov
cmp
inc
lds
jle
cmp
out
and
jbe
sbb
shrb
fidivrl
lahf
xlat
or
xorl
push
lds
add
xchg
rorl
lret
iret
scas
test
pusha
jecxz
jo
das
mov
push
adc
dec
scas
les
jg
test
ja
push
push
icebp
in
sti
cmc
sahf
clts
sbb
fisubrs
jne
add
push
cmp
add
inc
pushf
mov
xor
inc
fs
cmpsl
aam
inc
data16
cmp
mov
mov
aam
rclb
lahf
and
movsl
ja
pushl
jae
imul
mov
lds
add
insb
addr16
lcall
add
dec
int
insb
add
fxch
fs
mov
sbb
insl
inc
and
mov
loopne
mov
popa
lahf
test
int3
jl,pt
int
lods
and
test
out
sub
lret
and
cmc
sub
jbe
jb
es
xor
cmp
fistps
sbb
ljmp
stc
insl
xchg
cli
sbb
xor
sbb
leave
jno
pop
mov
jge
sub
mov
mov
jge
dec
loop
sahf
clts
ss
mov
mov
scas
movsb
in
jmp
or
lds
scas
sbb
stos
int
xor
into
mov
test
xor
dec
orl
dec
clc
cmpsb
add
cmpsl
int
clc
mov
addr16
movsb
sti
and
in
and
mov
xlat
cmp
fisubrl
loopne
dec
and
iret
jae
aaa
mov
popa
stc
lea
int3
mov
fwait
push
push
add
imul
ret
pop
imul
jmp
mov
stos
sbb
test
adc
pop
cmc
mov
or
pop
or
mov
test
lahf
lahf
ficomps
les
mov
xor
ja
jle
dec
sbbl
popl
dec
enter
or
add
addl
repnz
popa
pop
jge
ss
cmc
aaa
mov
add
arpl
adcl
cmpsl
mov
fiaddl
xchg
cmpsb
dec
fstpl
or
movsl
cmp
clc
lcall
xchg
sub
xchg
lcall
inc
add
out
and
lds
push
pop
adc
dec
inc
sbbl
movsl
pop
fucomp
ficoml
jo
std
lcall
xlat
add
sub
and
leave
cmp
add
clc
pop
dec
xor
and
xchg
in
dec
mov
jo
lret
inc
rolb
adc
test
mov
xchg
cmp
and
add
jns
sub
sub
inc
cmp
repz
dec
shll
dec
ret
popa
nop
add
sub
sbb
stos
shrb
inc
insb
cmp
xchg
add
out
mov
imul
dec
stc
sahf
add
cltd
mov
cmp
pop
cs
popf
adc
jp
dec
and
push
outsl
mov
mov
push
leave
mov
inc
or
shl
and
jp
and
inc
fisttpll
push
push
mov
and
leave
push
hlt
adc
cmp
out
jnp
jmp
fs
cmp
data16
adc
cli
mov
push
in
jge
mov
aam
lahf
js
and
std
and
nop
push
mov
in
out
in
adc
xchg
cli
stos
and
push
cmc
aam
into
fwait
nop
arpl
rol
or
mov
mov
addb
pop
xor
mov
aam
leave
jmp
or
mov
and
test
call
pop
pop
mov
lods
fldt
decl
mov
sub
inc
rcr
and
gs
push
cli
cs
mov
cmp
out
jmpw
push
int3
fistps
mov
xchg
fsts
xor
add
push
jne
add
ljmp
rclb
push
cmp
dec
xchg
dec
out
sub
nop
sbb
push
pop
sti
xor
sbb
cmp
or
test
adc
stos
xchg
in
and
aad
inc
dec
fistpl
leave
in
cmp
insl
outsl
ss
pop
xchg
loopne
mov
inc
sbb
es
sbb
or
dec
lret
sub
lcall
in
mov
cwtl
pusha
dec
mov
arpl
jmp
into
loopne
mov
mov
mov
movsl
jge
mov
xchg
mov
jl
lods
fbld
leave
pop
clc
lret
sub
jecxz
mov
mov
inc
push
mov
xchg
push
mov
test
or
cwtl
pop
mov
add
clc
scas
inc
adc
inc
jmp
nop
int
in
mov
js
iret
std
or
lcall
ret
pop
pop
or
sbb
lahf
and
mov
add
cs
sbb
dec
aad
jecxz
mov
mov
mov
cli
into
cs
cmp
mov
add
ret
add
pop
arpl
out
insl
popa
ss
xor
or
push
popf
mov
push
pop
in
movsl
in
popf
xchg
xchg
test
int
or
lcall
or
pusha
pop
inc
mov
xchg
cs
sti
sbb
lahf
rcll
cld
shrb
sbb
jge
jge
sti
jb
popf
stc
or
movsb
jg
dec
ud1
ljmp
and
add
inc
dec
and
jge
mov
mov
cmc
test
adc
push
xorl
mov
dec
jecxz
imull
mov
iret
fistpll
dec
arpl
mov
add
cmpsl
dec
in
xorb
repz
dec
popf
in
ret
dec
mov
ja
xlat
mov
jmp
daa
lock
aas
and
dec
pop
nop
cltd
or
push
fisubrs
xchg
ss
or
mov
pop
aas
lahf
pushf
es
cwtl
xor
xor
push
in
lcall
pop
movsb
xor
incb
cmpsl
cltd
add
arpl
mov
test
xchg
xchg
insl
pop
mov
out
inc
inc
mov
xor
sbb
mov
std
mov
mov
push
cli
mov
cli
mov
or
mov
and
inc
add
or
outsb
push
lret
dec
sbb
and
orl
cmovnp
cmp
push
in
iret
rcr
jb
sarb
lea
sahf
pop
mov
sarb
push
cmp
pushf
dec
adc
das
pop
cmp
mov
and
mov
or
hlt
mov
jae
cmp
push
iret
xchg
daa
xlat
daa
mov
sti
clc
cli
sub
lret
dec
ljmp
or
in
and
inc
ret
fstl
data16
jl
xchg
std
mov
xorl
jo
xor
gs
loopne
insb
outsl
mov
test
sbbb
jb
sbb
and
insb
push
inc
int3
push
lcall
dec
xor
mov
int3
mov
xchg
push
xchg
jge
pop
lds
scas
jge
call
jecxz
xor
push
xchg
jmp
dec
cmc
in
sbb
rcll
xor
hlt
jmp
sub
ret
and
js
jb
inc
inc
push
or
aad
out
sbb
xchg
push
mov
pop
sbb
sub
std
les
mov
lds
xor
nop
aad
fs
fsubrs
sti
mov
in
scas
iret
cmp
call
mov
xor
and
lods
push
sbb
sub
shrb
inc
mov
fmuls
pop
or
jp
sbb
hlt
and
das
or
lods
or
pop
xchg
pop
cmp
inc
push
sarl
fistpll
dec
jge
dec
inc
xchg
xchg
shlb
cmp
xchg
scas
iret
and
arpl
js
inc
sbb
aad
stos
aaa
cmp
xor
cld
push
test
and
sbb
cmc
xor
ss
hlt
push
sub
addl
xchg
testl
or
or
lret
push
test
adc
bound
push
push
popa
rcrb
imull
jp
pop
jno
ljmp
push
push
testl
aam
xchg
cmc
adc
push
dec
cmp
cmc
mov
sti
dec
inc
mov
cmp
clc
or
dec
add
pop
ror
dec
push
out
aad
and
not
lds
rcll
mov
repz
sarl
or
pop
fnstcw
mov
rorl
lods
mov
and
subl
lds
adc
and
push
mov
jbe
dec
sub
mov
test
sahf
or
out
mov
pop
cltd
outsl
dec
divl
or
xchg
aam
xchg
int
jp
add
les
inc
int
leave
idivl
repz
in
mov
pop
in
and
mov
sbb
cltd
lods
sbb
jecxz
stc
dec
popf
adc
jp
mull
test
icebp
mov
mov
mov
in
iret
pop
aam
add
nop
lds
ret
mov
pusha
push
hlt
xor
idivb
mov
jae
jecxz
out
dec
fdivrl
dec
test
jl
xor
inc
push
fnsave
sti
cwtl
bound
push
mov
dec
rcrl
mov
testl
jbe
es
pop
jb
xchg
popf
xor
addr16
jne,pt
lods
fildl
daa
and
cmp
pop
xor
adc
in
jl
cltd
cwtl
and
adc
rolb
xor
jae
fsin
adc
dec
add
stos
int3
xor
cmp
or
inc
ret
jp
add
xor
stos
push
insb
aaa
dec
mov
mov
repnz
pop
xchg
push
aas
mov
test
mov
and
push
hlt
xchg
mov
fistpll
xchg
or
mul
sub
sbb
loope
or
mov
cmp
shr
pop
in
jns
xchg
xchg
jge
adc
in
scas
sarb
out
test
cli
ret
or
mov
xchg
pop
inc
xchg
popf
dec
add
fcomp
push
rcll
loope
push
and
out
cwtl
sti
and
call
dec
push
mov
addl
xor
daa
xor
sbbb
adc
imul
sub
pop
mov
es
pop
dec
or
in
lock
xchg
sub
pop
sub
jno
nop
stc
dec
dec
lret
sbb
push
insl
popf
add
dec
mov
jbe
xchg
dec
cli
int
jb
loopne
pushf
jg
xorb
or
mov
push
sub
call
mov
popf
push
xchg
jge
enter
arpl
fists
push
push
push
push
rcll
mov
fidivrl
adc
xor
cmc
hlt
out
xor
sarb
dec
insb
adc
sbb
testl
adc
inc
test
jbe
mov
js
outsb
daa
xorb
jb
pop
aaa
rorl
adc
xor
xchg
adc
and
xchg
call
and
xchg
push
inc
daa
roll
xchg
jbe
push
scas
rcll
scas
or
dec
jnp
lods
repz
lret
inc
push
fsubr
out
ret
or
iret
push
cmp
xchg
sti
adc
add
inc
es
in
clc
enter
mov
cmp
mov
jns
in
sbb
pusha
xor
in
lcall
in
pop
mov
out
repnz
stos
mov
push
arpl
mov
insl
sarl
xchg
or
jo
dec
jle
sub
iret
je
jg
mov
sub
addr16
and
cmc
mov
pop
lret
mov
roll
int
push
les
pop
cmp
test
sub
fwait
and
cmc
repz
fs
lret
xchg
jns
cmp
pop
scas
add
loope
stc
add
call
xor
mov
movsb
jmp
sbb
xchg
test
nop
xchg
xor
sbb
xor
dec
sbb
and
fstpl
in
sub
push
sbb
xchg
inc
popa
cmc
inc
cmpsb
jmp
xchg
pop
popa
imul
fiaddl
pop
aas
add
mov
mov
test
add
mov
mov
in
sub
scas
and
fstpl
out
inc
lods
and
pop
adc
pop
bnd
scas
mov
dec
test
pop
xor
out
cld
ret
fistpll
or
adc
inc
fsubrs
sub
mov
std
ret
dec
sahf
adc
xor
ja
stos
or
jae
js
lret
outsb
mov
mov
pop
and
out
leave
call
enter
mov
push
rcrl
int3
jb
ss
jne
push
clc
mov
sub
push
ja
push
xchg
mov
sahf
and
arpl
pop
mov
pusha
xchg
into
xchg
xchg
sahf
subl
inc
cmp
sbb
xorb
dec
inc
out
mov
shld
mov
fxch
ljmp
xchg
xor
loopne
and
das
inc
or
sti
fwait
shl
outsl
add
or
sti
sub
dec
loopne
clc
mov
cmc
loopne
rorb
aas
add
cmpsb
cmpsl
mov
jg
pusha
mov
out
mov
mov
or
dec
cmp
idivl
xlat
add
xchg
stos
ds
sahf
jno
out
mov
shll
adc
test
fsubs
add
fbld
orl
iret
sub
popa
jo
mov
adc
popf
mov
popa
test
mov
push
popf
jl
int
inc
das
clc
idivb
cltd
insb
pop
inc
mov
mov
lcall
dec
pop
pushf
in
jns
cmp
iret
imul
aaa
out
out
pop
out
mov
xor
sarb
inc
mov
mov
ds
cmc
jae
dec
pushf
sub
icebp
cmp
into
cmp
lahf
test
push
dec
stos
addr16
inc
pop
in
jnp
lods
pop
and
push
pop
mov
jo
xchg
sub
dec
cmp
icebp
nop
adc
aaa
aas
jbe
cld
push
mov
les
cmpb
popa
jno
out
outsb
xchg
pop
jne
adc
mov
js
xchg
jle
jne
orb
das
int
jo
andps
test
or
push
mov
jns
int
outsl
jns
test
adc
mov
fildl
xor
push
insb
shrl
das
aaa
sysexit
adc
mov
jecxz
mov
mov
dec
pushf
xchg
dec
in
mov
push
sub
adc
into
xlat
insl
sahf
dec
jmp
sbb
mov
or
add
adc
sbb
lea
insl
xor
ror
dec
jmp
in
push
pop
pop
push
lahf
add
mov
inc
bound
pop
pop
xor
insb
js
push
imul
cmpsl
sahf
cmp
lods
xor
call
aam
xchg
pop
fsts
lcall
mov
ret
xor
or
cli
clc
push
leave
jbe
sbb
lea
popa
lods
pop
popa
ja
jmp
push
add
jbe
addr16
popa
cmovnp
cwtl
mov
outsb
stos
jp
test
push
push
dec
inc
ss
mov
clc
stos
js
add
add
pop
xor
scas
out
mov
sbb
loop
call
pop
and
inc
pop
xchg
shrl
sub
das
and
jg
jo
pusha
jge
rclb
pop
fisubrs
outsl
xor
dec
push
push
cli
js
mov
jmp
ds
stos
in
rcrl
js
bound
ds
and
in
sbbl
inc
popf
imul
push
mov
push
pop
jne
ret
xchg
mov
outsl
sub
push
fidivrl
xor
rolb
adc
dec
js
shl
lock
mov
sahf
mov
mov
fs
xchg
mov
fwait
scas
das
aas
je
jns
out
xor
sub
jnp
mov
push
imul
mov
aaa
into
xor
test
and
inc
into
insb
sahf
fisttps
and
iret
js
dec
data16
mov
into
ja
jbe
mov
push
or
adcl
jge
imul
xchg
in
call
stc
jmp
fiaddl
sbb
sbb
nop
mov
cmp
and
push
and
stos
jne
orb
outsl
push
jae
jge
iret
lahf
out
push
insl
and
imull
xchg
andb
mov
repz
inc
inc
inc
aaa
mov
xchg
jae
cmp
ja
mov
roll
or
mov
int3
test
push
enter
gs
add
iret
arpl
xchg
ss
shl
movb
jns
lcall
out
mov
push
pusha
mov
mov
ret
mov
scas
gs
cmp
idivb
cmp
in
fbld
xor
iret
adc
sub
stc
sti
fdivrs
xor
sets
int3
dec
int
popa
pop
jg
push
or
adc
repnz
sub
mov
push
push
aaa
cmpb
sbb
jns
mov
xchg
movsb
test
in
cmovs
inc
inc
outsl
pop
push
cmp
out
mov
clc
cmp
into
jno
out
dec
xchg
cmp
or
adc
pop
mov
outsl
and
adc
ljmp
cmp
loope
in
in
ds
outsl
push
pop
xor
insl
and
mov
mov
pop
mov
loope
inc
add
push
jmp
repz
and
dec
lahf
mov
sti
rcrl
push
xchg
mov
scas
sbbb
mov
outsl
mov
xor
xchg
pusha
jns
sarb
cld
cli
inc
cli
lods
mov
dec
ja
inc
dec
sbb
sbb
adc
push
sub
lcall
mov
jo
and
loope
rcr
out
les
mov
jne
mov
dec
arpl
dec
jo
cmc
adc
lahf
jl
lds
cli
pop
stos
or
test
scas
pop
std
dec
adc
ret
or
into
shl
xor
dec
xchg
pop
ja
stc
dec
fwait
gs
dec
sarl
mov
arpl
cld
mov
cmp
fldt
lcall
xchg
dec
mov
in
sub
stc
aaa
jg
cmpsl
push
das
sbb
cmc
jno
mov
imul
cmp
jb
test
jbe
mov
cmpsb
cmp
sbb
cld
movsb
mov
je
cmc
fisubrl
rcrb
lahf
dec
pusha
mov
xchg
stc
mov
push
xchg
push
test
sahf
rcrw
imul
bound
mov
and
pop
jo
mull
fdivrl
inc
add
ret
mov
stc
cmp
das
sahf
inc
ficoml
and
mov
aad
decb
inc
mov
std
adc
popa
bound
mov
push
and
mov
xchg
cmp
lahf
sbbl
jnp
sub
mov
ds
xchg
ret
lea
push
orl
lods
jge
push
lahf
movsb
test
jp
xor
push
nop/reserved
sub
and
inc
stos
iret
inc
fidivl
inc
jg
aad
cmp
cmp
mov
mov
out
sti
clc
sbb
mov
lcall
mov
sub
leave
xor
or
dec
mov
ds
mov
mov
cs
xor
dec
test
adcl
mov
mov
loopne
inc
icebp
scas
mov
xchg
aam
sub
xchg
fmull
nop
dec
add
dec
mov
test
leave
shrl
lea
pop
or
push
rcrb
clc
movsl
les
rcrb
imul
lock
dec
cwtl
mov
stos
imul
push
stos
aas
mov
dec
mov
sarl
test
dec
fstps
dec
pop
fisubrs
sub
lea
push
mov
pop
rolb
xchg
pop
sbbl
imul
imul
shll
leave
adc
cmpsb
hlt
aas
bound
or
pop
inc
int3
fildl
aas
push
insb
sbb
push
test
das
ss
in
cmp
les
push
scas
rol
fwait
dec
in
je
negl
fwait
aaa
adc
fsubl
mov
pop
pushf
sbb
mov
pop
xor
lds
and
out
aad
inc
push
mov
mov
or
cli
or
jecxz
out
xchg
push
sbb
loop
push
push
not
jmp
pop
pop
xchg
mov
fwait
add
xlat
push
pushf
xchg
dec
fidivs
add
ljmp
icebp
add
and
dec
in
sub
roll
cltd
pop
mov
aas
xchg
mov
add
xor
mov
xor
mov
and
ret
jbe
mov
hlt
test
mov
xor
pop
stos
mov
or
int
mov
lea
mov
push
mov
lods
mov
movsb
or
add
fstps
lcall
negb
sbb
xchg
roll
fidivrs
repz
andb
addr16
dec
popa
cwtl
lods
add
sub
xchg
in
fisubs
mov
sbb
cmp
inc
clc
stos
sbb
sar
jnp
test
pusha
rcrl
pushf
jns
pusha
int
nop
out
stos
jp
dec
cmp
mov
outsl
push
imul
jno
out
ret
xor
sub
jmp
lcall
fld1
filds
jmp
inc
data16
dec
cmpsl
cmc
adcb
mov
fwait
aad
pop
shll
xlat
adc
sub
push
jo
cmc
fadds
xor
sub
lock
fisttps
mov
ret
popa
sub
fwait
push
stc
xchg
push
cwtl
mov
addl
test
jb
sub
inc
pop
jbe
xor
mov
and
mov
jecxz
pop
inc
rcll
xchg
lret
push
mov
shll
cmp
je
and
and
inc
pop
fiadds
and
push
cmp
inc
pop
mov
fimull
fdivrs
add
iret
jl
xchg
push
pop
xor
xchg
mov
xchg
cmp
outsl
enter
bound
adc
dec
cmp
roll
jae
test
int
mov
mov
jecxz
stos
out
in
xor
adc
aad
in
addb
cmp
inc
mov
xchg
dec
xor
cli
dec
jb
mov
sbb
jge
lds
addr16
cmp
xchg
inc
mov
aam
dec
outsl
fsubr
push
mov
scas
xchg
jmp
cmc
out
out
popf
in
mov
icebp
jl
movsl
xchg
subl
sbb
push
pop
in
ret
in
push
cmp
cmc
cmp
push
cmp
dec
cld
aas
and
pop
xchg
test
imull
adc
stc
jne
cli
cld
or
xor
dec
movsl
std
xlat
ljmp
mov
fidivs
sbb
add
push
pop
add
nop
jecxz
jo
jl
movsl
cmp
sbb
daa
cmc
mov
and
fdiv
xor
js
xchg
in
fidivl
lods
xchg
jmp
sbb
sbb
adc
insl
inc
aas
inc
out
in
xor
inc
dec
scas
jno
loope
mov
sbb
jp
gs
cltd
mov
es
jns
nop
add
aam
cld
or
cmp
sub
mov
call
jmp
dec
push
inc
cltd
lods
sarl
jle
bound
mov
adc
push
add
jne
mov
mov
inc
ret
add
sub
xor
int3
int
js
add
xor
sahf
xchg
cmp
in
cltd
sub
mov
and
xchg
push
mov
dec
push
test
in
mov
mov
mov
xchg
mov
into
push
ds
dec
mov
fxch
push
xor
roll
aad
xchg
out
lods
jge
aas
sub
das
or
adc
test
pop
aaa
jge
push
inc
out
divb
nop
enter
sarb
pop
mov
push
stc
gs
xor
push
cwtl
cmpsl
and
or
fdivr
add
pop
pushf
sub
xor
test
data16
or
insb
pop
rorb
dec
fcoml
ret
int
neg
call
enter
in
inc
popf
sub
pushf
call
mov
mov
mov
idivl
cmpb
in
add
mov
adc
jge
das
cld
jno
push
mov
push
sub
sub
cltd
dec
mov
mov
lea
xor
jp
lcall
mov
xor
fwait
insb
mov
or
popa
push
push
int
fs
dec
cld
jmp
repnz
mov
lods
lds
and
shrl
mov
loope
out
xchg
pop
xchg
repz
mov
sub
test
mov
sub
mov
push
cmp
leave
iret
cmp
sub
fnsave
cs
inc
outsb
adc
jbe
push
push
adc
inc
adc
or
sbb
adc
in
subb
adc
aad
mov
cmp
and
repnz
cli
imul
stos
push
icebp
std
insl
pushf
xchg
and
and
das
add
and
movsl
jle
or
repnz
xchg
rcrl
aad
mov
fadd
push
jb
test
cwtl
push
jb
lcall
pop
hlt
mov
repz
cltd
sub
in
stos
cld
loopne
fcmovne
out
enter
ja
inc
movsl
das
xor
mov
pop
lret
inc
test
pop
push
ret
pminub
xchg
cmpsb
jg
out
mov
outsl
pop
imul
xor
cmpsb
leave
jmp
pop
xor
pusha
xchg
mov
imul
dec
mov
call
ljmp
insb
jl
inc
ss
add
test
sahf
mov
dec
popa
adc
xchg
sbb
mov
jge
pop
xchg
repz
push
sahf
cmp
out
lcall
getsec
out
jbe
jmp
in
jbe
mov
notb
int
insl
int3
in
leave
jp
dec
enter
mov
shl
add
push
mov
add
sti
inc
iret
sub
inc
sbb
jmp
loop
int3
mov
xchg
mov
scas
pop
adcb
test
popf
fcomp
pop
dec
repnz
cmpsb
loopne
gs
cmp
gs
fsubrl
mov
push
pop
jne
add
mov
xlat
das
cli
in
jo
das
fisubrl
mov
sarl
jno
int3
ret
mov
jno
sbb
jb
into
or
ret
mov
pushf
or
dec
mov
sub
fbstp
sbb
adc
fnstcw
jne
mov
xorb
sbb
ret
mov
je
rolb
cmp
mov
sbb
jle
clc
pop
stos
or
sbb
push
and
jo
das
aam
push
addr16
mov
dec
xchg
jmp
mov
mov
dec
daa
xor
lcall
adc
rclb
or
nop
xor
mov
cs
inc
pop
das
call
idivw
or
add
insl
jnp
push
jae
xchg
cvtps2pi
data16
xor
mov
aad
jg
scas
ja
or
ret
int
and
sarl
xchg
ror
dec
jo
aas
jne
addl
lock
xlat
outsl
mov
xchg
inc
mov
or
pop
mov
push
add
jne
cmpsb
pop
loope
push
bnd
rcll
fisttpl
cmpsb
insb
pop
leave
outsb
popf
xchg
in
mov
push
push
fcompl
lds
mov
adc
lahf
ss
mov
inc
jnp
pusha
mov
push
push
adc
pop
ret
adc
popa
mov
lock
ja
jne
xchg
xor
clc
stos
inc
sbb
cmp
fwait
jmp
lahf
dec
mov
jae
aaa
xchg
lea
aas
jg
ret
lahf
and
push
call
mov
jle
pop
je
push
sub
bound
jae
test
mulb
pop
sbb
fwait
lods
addb
stc
movsl
mov
test
mov
and
xchg
jnp
addr16
lcall
jne
or
repnz
arpl
int3
fisubrs
push
inc
jns
repnz
and
or
push
xchg
and
push
ss
or
js
lcall
or
cmc
leave
push
push
fwait
or
pushf
into
gs
push
sbb
fs
sub
xchg
push
push
arpl
lahf
xor
test
xchg
ss
jmp
or
sub
xor
add
ljmp
mov
inc
mov
mov
iret
or
out
cmpsb
out
mov
xchg
iret
xor
xchg
and
sbb
aas
adc
push
xor
daa
bound
icebp
mov
jne
jb
mov
jl
insb
clc
idiv
dec
mov
repnz
push
xchg
dec
es
imul
push
cmp
and
jnp
and
imul
push
les
inc
pop
cmpsl
xchg
arpl
fwait
mov
push
data16
sahf
cmp
pusha
setne
mov
pop
sbb
jb
sub
scas
add
stos
pop
nop
adc
and
fwait
mov
rcrl
cmp
sub
cli
and
test
and
rolb
xchg
ffreep
std
push
jb
dec
stc
data16
sbbb
test
test
dec
dec
movl
jb
leave
fstpl
notb
or
and
mov
jmp
mov
push
lods
sbb
inc
popw
cld
pop
gs
sub
adc
fdivrs
adc
cmp
add
imul
pop
push
jmp
jbe
pop
jae
cmpsl
in
aam
xor
ficoms
fwait
rcll
int3
and
stos
iret
xchg
shll
sub
inc
into
jmp
jle
ljmp
cmp
sub
lods
jnp
idivl
sub
neg
into
into
ficoms
cmp
pop
mov
popf
or
nop
mov
cmp
fsubrs
push
dec
xor
or
sbb
in
pop
push
es
pop
xchg
mov
jecxz
into
fisttps
adc
push
cmp
cmp
inc
lods
jnp
fsts
xchg
jp
pusha
cwtl
jno
inc
sti
xchg
push
popf
jne
sbb
inc
push
ja
mov
pushf
shl
daa
repz
push
fwait
mov
fistl
push
test
mov
pop
pop
mov
push
or
mov
sub
xchg
dec
mov
rorl
or
movsb
cmc
call
enter
lcall
gs
pop
aaa
leave
dec
scas
cwtl
dec
cmp
fucomip
out
mov
jg
xchg
int3
jnp
je
lods
out
pop
pop
inc
xchg
dec
push
dec
jne
or
mov
lcall
test
mov
fxch
icebp
iret
into
outsb
jae
xchg
pusha
sbb
or
cmp
mov
je
cmc
and
hlt
mov
push
mov
sti
clc
call
adcl
int3
sbbl
xchg
pop
lahf
subl
sbb
add
pop
leave
adc
loope
in
stos
inc
insb
cmc
nop
dec
es
les
mov
shrl
jno
mov
and
mov
imulb
jnp
mov
xchg
test
sub
push
lock
xchg
push
outsb
inc
push
inc
dec
mov
or
aas
xor
inc
and
orb
mov
rcr
jne
cmpsl
mov
leave
and
icebp
inc
push
mov
stos
shl
or
cmp
lds
lock
inc
int
push
test
push
loop
add
cmp
sub
sbbb
test
rorb
pusha
lods
lock
push
jl
or
shlb
nop
adc
icebp
cld
xorb
mov
adc
add
mov
mov
cmp
test
mov
repnz
cmpsl
wrmsr
push
inc
shll
lret
mov
lds
shll
and
out
jg
aas
nop
adc
mov
cmp
and
xor
push
cld
loop
ja
insl
jmp
pop
sti
jg
inc
movsb
gs
cmp
test
adc
idiv
push
xlat
insb
mov
or
xchg
inc
sbb
movsl
test
or
clc
push
sub
xchg
and
in
out
xchg
rclb
add
sbb
xor
repnz
push
jge
jnp
movsb
aad
popf
xchg
sbb
jl
movsb
jmp
or
or
loopne
fisttps
dec
jmp
in
and
mov
dec
inc
dec
jmp
add
or
and
addr16
test
xor
ljmp
std
outsl
arpl
pop
mov
stc
sahf
sti
les
sti
popa
fstps
pop
push
aam
aaa
movsb
push
inc
push
jmp
ljmp
imul
sub
cmp
inc
out
xchg
jge
outsl
mov
and
lock
mov
into
or
add
cmp
jnp
add
inc
push
push
xchg
mov
mov
imul
xor
call
in
jecxz
jp
mov
fldcw
sub
sub
movsb
test
inc
mov
sbb
movsb
sub
add
loopne
out
sahf
and
xchg
in
inc
es
sub
adc
lds
and
cld
push
cmp
int3
push
inc
data16
lea
out
jne
dec
subl
gs
xchg
ret
insl
sbb
ja
fcompl
dec
add
mov
lret
movsb
xchg
cltd
mov
test
sbb
sbb
mov
pop
fs
fstpl
pop
mov
mov
popa
sbb
jno
in
rorb
xchg
sti
imul
xor
and
popf
mov
jbe
loope
std
insb
pop
mov
jp
jl
sbb
insl
mov
hlt
xlat
add
dec
jp
adc
add
pop
dec
lods
xchg
or
mov
addr16
and
xchg
dec
push
je
stos
divb
push
inc
test
int
mov
push
jle
and
lret
lea
add
cmc
popa
call
jmp
in
inc
cltd
pop
inc
mov
pop
and
mov
pop
mov
or
jns
data16
aam
xchg
jae
aas
cli
leave
test
jl
test
or
sub
push
pushf
mov
push
push
cmp
into
sub
je
in
les
xchg
dec
pop
mov
repz
aaa
out
out
idivl
aad
nop
lods
lret
rolb
and
mull
aad
mov
gs
inc
xchg
mov
lcall
xor
mov
xor
out
repz
mov
movsb
inc
popa
dec
pusha
pop
pop
dec
cmp
dec
sub
iret
mov
imulb
data16
and
add
cmp
xchg
dec
clc
ret
fdivrl
xchg
out
xchg
cbtw
xor
or
push
ret
add
shl
mov
sub
jmp
dec
lret
xchg
rclb
jg
lock
lret
xorb
insl
pop
jb
cs
ljmp
bound
lahf
mov
add
fdivrs
dec
and
roll
lds
std
jge
jnp
stos
pop
in
js
adc
hlt
das
xor
dec
and
xchg
adc
xchg
in
scas
imul
shrb
cmp
or
and
stc
std
imul
push
cwtl
jne
cmp
sub
adc
xchg
imul
inc
or
mov
pop
repz
es
cmp
js
jnp
scas
jmp
mov
jecxz
sub
dec
andl
jecxz
sbb
dec
inc
mov
lock
les
dec
mov
das
pop
je
in
cmp
fwait
add
jb
jg
mov
inc
mov
push
mov
scas
test
or
popa
stc
xorb
mul
xchg
std
push
fsubp
push
insb
loope
gs
push
sbb
in
addr16
test
push
leave
xchg
add
scas
in
cmpsb
xor
inc
xor
mov
push
ds
popf
push
rcll
push
pushf
bound
pop
sub
inc
adc
pop
jmp
ds
pushf
and
xchg
mov
mov
dec
test
scas
popf
insl
mov
cltd
test
inc
jl
lcall
out
cmpsl
sbb
fisubs
les
pop
cmpsb
std
mov
sub
fimuls
lret
pop
push
cltd
push
xor
out
into
ss
push
dec
aad
aam
mov
stos
fisttpll
mov
mov
dec
push
xor
inc
ds
xor
jnp
and
jle
and
jne
jle
cli
addb
mov
cmp
inc
popf
push
in
out
mov
mov
adc
dec
cmpl
lds
push
adc
stos
js
lods
dec
dec
je
mov
in
scas
xor
xor
clc
push
scas
push
cwtl
dec
add
pop
mov
mov
xchg
mov
adc
add
mov
dec
aad
hlt
in
mov
inc
jns
in
das
pop
and
xor
and
jmp
scas
push
cmp
in
rorl
pop
aaa
je
shld
mov
repz
jmp
fwait
lods
std
mov
sbb
andb
cltd
dec
sbb
push
rol
cltd
sbb
mov
fstp
lcall
jns
lock
shl
loopne
call
mov
fmul
mov
push
lods
push
mov
jmp
xchg
adc
sub
mov
pop
xchg
lcall
mov
push
mov
xchg
or
data16
jge
outsl
jecxz
or
shlb
movw
pop
sahf
dec
jl
es
repnz
daa
pop
stc
lds
jb
les
xchg
inc
sbb
jle
jb
mov
cli
aaa
add
aas
jg
push
xchg
sbbb
xchg
lock
in
mov
pop
adcb
fs
ljmp
push
fcmovne
adc
daa
mov
cmp
adc
in
sbb
pop
in
mov
push
inc
jns
jbe
lcall
adc
gs
hlt
int
xlat
movsl
addr16
iret
and
push
aas
or
icebp
mov
inc
out
pop
mov
mov
push
ret
mov
scas
sub
cmpsb
mov
pop
dec
out
mov
les
test
addr16
cmp
dec
test
data16
adc
idivl
mov
subb
daa
fbld
sahf
cmpsl
pop
and
xchg
mov
repz
out
dec
pushf
adc
mov
dec
imulb
inc
fcmove
xchg
aad
mov
push
xchg
inc
cmpsb
je
push
sbb
pop
and
in
popf
mov
xor
cltd
sub
jb
mov
push
fisttpl
out
xor
push
in
das
js
sub
stos
dec
sbb
jmp
aad
sti
mov
sti
stos
loopne
mov
cmp
dec
aam
cmc
add
dec
mov
daa
outsb
je
push
inc
mov
aad
mov
adc
imul
es
dec
and
mov
roll
adc
pop
fwait
inc
xchg
in
xor
daa
pop
sub
cld
sbb
mov
push
out
mov
shll
jg
das
nop
jb
aaa
add
sbb
idiv
shl
inc
or
neg
jge
adc
test
test
mov
or
jp
ss
or
out
xchg
movsl
outsb
ds
push
dec
call
testb
xorb
push
jns
mov
hlt
std
data16
cmp
sub
test
push
mov
mov
lahf
roll
pop
test
mov
xor
hlt
loopne
in
loop
push
pusha
adc
icebp
xor
rolb
xchg
ficomps
add
mov
leave
into
bound
fwait
push
xchg
jbe
mov
shlb
cmp
xchg
fxam
sub
add
sbb
popa
cwtl
icebp
cmpb
xchg
inc
cmp
das
pop
and
adc
xor
sbb
cmpsb
test
adc
out
addr16
mov
cmp
outsb
mov
in
and
pop
pop
outsl
cli
mov
push
insb
adc
adc
jno
mov
ja
jno
icebp
ret
fisubs
mov
loope
pop
and
jecxz
inc
xchg
lods
inc
add
mov
push
loopne
pop
and
add
inc
sahf
push
iret
xchg
jp
push
int
sbb
xchg
out
xchg
jo
sti
sub
sub
dec
mov
or
shrl
fs
add
and
leave
stc
shlb
sbb
aam
sahf
cs
and
das
enter
rorb
sbb
xchg
xor
jg
xlat
and
js
out
cli
pop
rolb
cmpl
loope
je
sub
jbe
lret
rcrb
sbb
shlb
and
push
loope
insb
repnz
inc
dec
ffree
rorb
in
in
or
sarl
out
jmp
fisubrl
mov
adc
adc
popf
jb
pop
pop
jle
mov
push
stos
mov
cmpsl
jle
ljmp
sbb
pop
add
push
mov
push
loopne
push
mov
cmc
ljmp
ret
cmp
incl
mov
mov
lahf
push
sbb
lea
in
cltd
lret
subb
loope
daa
pop
sub
dec
add
aas
sub
mov
lret
movsl
mov
scas
sub
xchg
adc
lcall
inc
jns
mov
leave
mov
cmp
or
fisubl
call
jns
divl
daa
push
mov
loopne
fwait
xor
inc
out
mov
leave
lea
int3
mov
fbstp
dec
rclb
shrl
test
int
mov
outsb
lock
mov
test
jb
ss
push
imul
dec
shlb
push
or
push
xchg
jae
adc
jb
addr16
jecxz
in
imul
and
or
push
inc
out
mov
lods
dec
outsl
xor
inc
lea
pop
test
mov
ss
push
xchg
clc
in
lahf
add
test
scas
xorl
jne
gs
aad
lea
xchg
lret
div
mov
stos
jb
dec
mov
add
test
mov
pop
and
ja
insl
hlt
inc
pop
gs
out
icebp
popa
ret
add
sbb
int
jmp
fisubrl
in
xchg
pop
xor
mov
cmp
xlat
cmp
xor
data16
leave
cmp
xchg
sbb
xor
clc
sahf
sbb
mov
jno
cwtl
pop
push
push
xchg
xor
aad
repz
push
dec
pop
pop
mov
inc
cmc
mov
xor
jb
mov
sbb
pop
or
scas
mov
mov
adc
mov
nop
mov
mov
push
jge
pop
pop
jmp
add
sahf
inc
push
sub
iret
lds
pop
pusha
stos
sub
mov
mov
xor
inc
jge
inc
xor
std
dec
mov
lock
pop
pop
adc
scas
add
cltd
stos
out
imul
and
pop
mov
xor
pop
fsubl
mov
bnd
aad
jmp
ret
imul
add
lret
inc
out
cwtl
push
xor
and
addr16
dec
test
test
mov
cmp
cmp
movd
inc
mov
ss
sti
xchg
add
js
popa
test
xchg
or
xchg
or
pop
pop
repnz
mov
inc
mov
jb
fildll
pop
jnp
inc
mov
mov
loope
push
fwait
add
clc
pop
fidivs
adc
lock
test
in
and
out
test
xchg
mov
icebp
imul
stos
mov
xchg
xchg
mov
out
push
outsb
sarl
and
out
inc
int
mov
stc
sub
xchg
push
into
xor
out
push
pop
xor
dec
scas
test
out
sahf
pop
cmp
nop
mov
push
sbb
in
adc
mov
lret
xchg
movsb
push
fs
jle
imull
mov
das
add
jb
adc
lea
fdivs
aaa
scas
sarb
cmpsb
outsb
sbb
sub
scas
pop
or
or
pop
ret
jge
repz
lea
mov
sub
fwait
ljmp
pop
call
and
or
pop
andl
imul
jo
and
push
xor
scas
stc
jmp
ss
add
stos
push
adc
fidivs
and
mov
push
test
cmp
je
ljmp
inc
test
outsb
xor
js
cwtl
sahf
jbe
dec
xlat
and
in
xchg
ljmp
push
adc
dec
and
mov
fistps
dec
fwait
push
pop
mov
cltd
sub
inc
das
gs
jno
sbb
mov
pop
data16
sub
into
ja
or
sbb
jnp
call
jnp
aas
sbb
fistps
fdecstp
faddp
cmp
or
in
fisubrl
pop
rorb
int
lock
pop
mov
fwait
mov
pop
test
mov
xor
loopne
push
dec
mov
pop
sti
repz
es
add
nop
adc
xchg
xor
mov
adc
mov
push
xor
fisubs
pop
aas
xorb
test
in
decb
sahf
rcll
stos
dec
icebp
push
cmpsl
nop
jge
dec
mov
xchg
sbb
adc
push
cwtl
fs
and
and
cmc
lahf
lock
jno
xor
xor
loope
mov
sbb
movsl
lds
in
push
sub
test
fadds
sbb
inc
and
std
adc
arpl
sarb
inc
icebp
sbb
clts
pop
in
cmp
ret
repnz
sti
out
sbb
lret
ss
scas
jmp
add
int
sbb
cmpsb
mov
lods
sbb
loopne
push
adc
jecxz
test
pop
lret
iret
ficoml
cmp
add
mov
ljmp
mov
or
and
inc
and
sub
mov
adc
decb
daa
lock
arpl
pop
iret
jg
sarl
movsb
mov
xchg
pushf
push
popa
mov
mov
loopne
mov
cmp
pop
rcll
mov
out
dec
mov
mov
addr16
inc
imul
cld
pop
inc
ret
push
sbb
pushf
in
sbb
jno
mov
jecxz
dec
cld
int3
iret
data16
dec
cmp
out
push
push
inc
imul
jbe
mov
xor
hlt
push
pusha
arpl
incl
loop
mov
mov
cltd
sub
push
adc
inc
add
mov
adc
fmull
cmp
or
jo
bound
cli
pusha
pop
jecxz
sbbb
mov
or
dec
push
cmpsb
mov
push
mov
hlt
mov
popl
mov
icebp
xchg
mov
lret
fiaddl
aaa
add
lcall
int
cwtl
in
or
cmp
jb
adc
data16
mov
cmp
ja
pop
inc
xchg
add
inc
lea
xchg
dec
cli
xchg
out
add
fwait
xor
inc
lret
sarl
cmpsb
push
in
jbe
test
xor
inc
mov
dec
sbb
fadds
adc
test
push
idivl
lret
rcl
fisttps
push
xor
fcoms
loop
cmp
data16
xchg
jo
mov
mov
or
in
and
push
outsl
sub
add
mov
sub
cmc
sub
and
dec
test
mov
mov
das
cmc
fwait
sahf
jns
jo
jecxz
add
outsl
mov
jae
pushf
sbb
pushf
pop
push
lahf
out
icebp
add
lods
sbb
xchg
hlt
dec
mov
or
jnp
mov
xchg
push
leavew
add
sbb
mov
testb
cli
adc
cmpsb
out
out
aaa
pop
sbb
in
lea
xor
adc
cmp
xchg
icebp
mov
shr
mov
mov
add
hlt
daa
pop
lods
mov
mov
sub
out
fldl
xor
sbb
cmpsl
dec
mov
enter
xchg
lret
fwait
lret
aas
enter
pushf
dec
fwait
scas
lds
imul
pop
inc
jb
sti
or
dec
xchg
f2xm1
dec
add
cli
cld
mov
or
sahf
xchg
push
add
clc
cmp
or
xchg
inc
jmp
decb
adc
ret
test
int
xor
cld
out
and
xchg
xchg
es
inc
adc
adcb
sbb
fdivl
rorb
ja
fcmovnb
loopne
clc
mov
arpl
jmp
or
scas
insl
std
in
mov
jp
pusha
jge
cmpsb
fistpl
addr16
mov
mov
aad
and
adc
shrl
mov
adcl
jae,pt
test
mov
xor
jbe
cli
sahf
div
adc
scas
or
mov
inc
lods
loopne
jae
pop
pop
popa
mov
xor
jle
outsb
jmp
jnp
aam
mov
loope
gs
fimull
aad
aas
lahf
lahf
jl
dec
and
out
mov
lock
int3
out
lock
out
in
or
or
mov
gs
repz
push
imulb
add
ds
pop
or
pop
dec
and
inc
xor
jns
das
jno
fiaddl
imul
mov
int3
lahf
push
cmp
adc
xchg
inc
mov
imul
add
lock
mov
push
cld
sub
arpl
xlat
pop
leave
add
decl
pop
push
jo
xor
cmc
mov
xor
icebp
enter
xchg
and
push
repnz
mov
sbb
mov
lea
xchg
aad
cmp
mov
scas
daa
std
rorb
adc
push
push
xor
fimull
rolb
and
in
push
push
dec
movb
push
out
shll
inc
adc
dec
cmp
push
pop
lahf
decb
lret
jne
xchg
and
xor
pop
jb
sub
andl
mov
shlb
gs
imul
jnp
repnz
cltd
stos
push
pusha
adc
xor
ss
ret
sub
nop
push
mov
or
and
sbb
test
fisttpl
jmp
mov
push
arpl
pusha
pop
xor
fnstenv
ds
dec
jmp
scas
sub
inc
jne
cwtl
cmp
scas
pop
add
test
mov
mov
cmp
lcall
mov
aaa
xor
cmp
scas
popa
mov
pop
jns
outsb
icebp
lods
mov
inc
shlb
and
lods
inc
inc
loope
out
lea
pop
push
push
imul
cmp
inc
ljmp
mov
rcrb
icebp
pusha
outsl
pop
test
mov
adcl
jmp
jne
and
rorl
andb
add
mov
in
mov
push
mov
lock
jecxz
pop
jno
xchg
xor
test
ds
cmp
fstps
call
mov
push
and
lcall
mov
inc
subb
repz
nop
das
and
jo
aam
in
test
cmp
or
xchg
enter
scas
movsl
push
loope
pop
add
sbb
fcompl
push
es
push
xlat
loopne
into
das
inc
fisttpl
and
sub
xchg
adc
outsb
rorl
call
and
cmp
lock
jp
jg
fucomi
pop
cmp
std
dec
into
repnz
lods
ficoml
xchg
sub
mov
out
pop
mov
add
hlt
push
cmp
jp
dec
dec
arpl
cmp
movb
stos
xchg
inc
sti
add
gs
jnp
and
xchg
adc
sub
push
mov
inc
inc
cli
in
xchg
adc
xor
mov
xorl
push
outsl
outsl
mov
sub
addr16
push
xchg
push
cmp
or
xorb
jp
aas
pop
addr16
mov
test
imul
cmc
cmc
dec
xchg
sbb
and
add
pop
jae
jb
arpl
aam
jge
mov
push
dec
call
repz
int3
cmp
rcll
mov
xchg
sahf
xor
sbb
rol
inc
fldenv
cmpsl
in
sti
shll
or
mov
xchg
lahf
jmp
sbb
dec
inc
jnp
pop
scas
sub
movl
lds
in
dec
adc
jne
stos
xlat
mov
mov
in
mov
ret
cmova
fcom
mov
or
rorb
sub
shll
cmp
cmc
repz
mov
sbb
insb
int3
push
repz
sarb
cmpsb
lods
repz
push
mov
jl
sub
pusha
jge
jo
fnstenv
pop
xchg
pushf
pusha
mov
and
xchg
inc
add
or
push
mov
out
rcrb
jo
aas
outsb
outsl
in
inc
inc
xor
addr16
cs
xor
imul
fnstenv
ds
dec
push
ret
pusha
gs
dec
push
jb
cmp
mov
inc
aaa
lcall
sti
xor
xchg
out
outsl
xchg
inc
callw
inc
loop
xchg
out
add
pop
enter
fs
or
testl
add
mov
das
cltd
xchg
xchg
pop
aam
push
push
cmp
sbb
and
int3
int3
call
push
fwait
inc
lock
lods
stc
bound
pusha
jo
sbb
movb
subl
push
sbb
adc
pop
shlb
imul
add
cmpsl
mov
mov
xchg
xlat
adc
sbb
xchg
push
inc
cs
sbb
cs
sub
imul
ficoml
in
sbb
arpl
lea
aam
fdivl
testl
dec
mov
adcl
xchg
repz
fildl
push
lahf
mov
xchg
sub
out
mov
or
add
jb
fs
and
je
mov
inc
push
adc
jno
pop
and
add
sti
pop
mov
imul
sub
repz
cmc
out
sub
mov
jecxz
lods
sub
pop
sbb
pop
int
jge
aam
sbb
cmp
cld
sahf
cmp
rcll
adc
pop
push
ficoms
clc
push
mov
mov
pop
inc
sbbl
mov
arpl
mov
icebp
icebp
movb
mov
das
fistl
and
jle
lcall
shlb
sub
test
roll
xlat
bound
test
push
dec
repnz
pop
jb
sbb
imul
test
test
stc
add
notl
aaa
decb
jb
cs
out
mov
cwtl
adc
sbb
stos
xor
sbb
and
pusha
xchg
jo
clc
sarl
add
mov
pusha
mov
mov
and
mov
call
xchg
mov
aam
pop
add
jno
push
mov
loope
rolb
adc
mov
or
cld
mov
in
jecxz
pop
in
cmpsb
loopne
fnstenv
sbb
push
movq
mov
push
jbe
push
adc
inc
push
lret
adc
jnp
and
xchg
in
pop
popf
and
lcall
ljmp
jae
loop
cmp
mov
test
inc
pop
adc
inc
adc
xor
in
leave
in
inc
imul
ror
xchg
cwtl
rorb
sbb
popa
out
addr16
pop
and
xor
int
mov
std
mov
ja
sub
adc
adc
into
mov
or
lds
je
ljmp
sub
ljmp
leave
jle
neg
inc
cmp
ljmp
xchg
dec
not
imul
cmp
mov
or
adc
pop
mov
arpl
mov
mov
fstl
sti
jle,pn
pop
cmc
cmpsb
scas
cmp
hlt
int
sub
xchg
adc
pop
lock
sub
lret
fbld
sbb
test
shll
xor
in
movsl
and
jo
cmp
sub
xchg
scas
adc
mov
stc
and
push
mov
cmpsl
in
int3
pop
divb
add
enter
mov
sub
adc
or
cmpsl
inc
ss
int
sub
int
outsb
push
in
into
adc
xor
lods
scas
stos
push
add
out
enter
mov
movsl
dec
or
mov
adc
inc
arpl
lahf
scas
mov
repnz
cmc
popf
push
orl
pusha
hlt
call
sub
xchg
pop
aaa
jg
mov
xchg
cmp
mov
gs
xor
push
cwtl
imul
aad
arpl
je
sub
ljmp
xchg
mov
rcr
aaa
mov
sbb
test
mov
fs
and
fnstcw
cmp
lock
xchg
lret
ret
push
jae
shrl
dec
pop
int
in
cs
js
rcrl
ret
xchg
sbb
gs
jns
out
adc
in
xor
add
and
call
subb
pop
jge
mov
fmuls
lods
fs
lahf
scas
xlat
push
lret
mov
in
lcall
enter
push
mov
js
push
sub
adc
jbe
ret
popa
outsl
out
inc
pop
xor
pop
ja
cmp
adc
dec
sbb
test
mov
ret
in
addr16
loop
push
xlat
pop
push
push
jmp
and
mov
aad
sbb
xchg
and
lock
leave
ret
xor
or
or
test
repz
dec
push
shl
rorl
aas
push
or
dec
movsl
out
adc
aaa
das
or
pop
cld
jnp
out
jle
sahf
mov
mov
dec
sub
and
xor
mov
lock
mov
cmpsl
ror
mov
inc
and
mov
push
push
and
inc
mov
xchg
mov
jle
pop
mov
mov
fmuls
flds
and
jae
xor
js
dec
das
test
scas
insb
lock
icebp
stos
lea
loopne
mov
sub
test
dec
xchg
loope
in
dec
jne
ret
mov
notl
imul
inc
sub
cmp
dec
pusha
xchg
divl
inc
outsl
js
lds
pop
add
sub
dec
std
dec
mov
mov
mov
jmp
mov
out
cs
xorb
mov
loopne
mov
ss
fadds
fisttpll
int3
inc
xchg
dec
std
jecxz
aad
mov
or
and
sub
push
adc
cmp
aas
sbb
repz
add
dec
cmp
mov
jge
sub
or
sbb
aad
sbb
add
or
in
addr16
jecxz
push
mov
push
out
popa
mov
push
push
push
pop
and
pop
fsubs
aad
push
jnp
and
and
add
mov
sarl
sbb
push
and
xchg
mov
in
outsl
inc
dec
js
je
das
mov
flds
das
xchg
xor
int
mov
clc
in
xchg
mov
jl
or
dec
out
xchg
imul
adc
fildl
pop
push
pushf
cmp
pop
xchg
insl
sub
mov
fidivl
sbb
add
fstpt
cmpsb
sub
inc
adc
jns
sbb
test
sbb
mov
inc
je
loope
mov
test
dec
push
outsb
add
sbb
jmp
int3
cld
jmp
in
mov
addr16
xor
xchg
into
pushf
dec
leave
push
es
fnstsw
das
mov
in
lret
jnp
jne
mov
sbb
pushl
mov
ja
out
push
inc
daa
xor
jnp
or
adc
mov
push
insb
arpl
adc
out
mov
clc
or
inc
mov
cmpsl
shll
sub
push
rdmsr
rcll
cwtl
and
sbb
xchg
vaddsd
jmp
xchg
shrb
xor
add
sub
and
dec
insl
jp
les
fcmovb
xchg
mov
call
jne
push
movsb
dec
sbb
fwait
mov
fdivl
and
aad
push
and
mov
decl
and
out
jne
sbb
mov
sub
out
into
jno
dec
movsl
sbb
out
in
jge
pop
ja
mov
mov
push
rcll
dec
or
ret
xchg
outsb
pop
cli
inc
mull
jecxz
sbb
mov
dec
fucomip
jmp
orl
dec
int3
dec
pop
insb
scas
adc
stos
or
sarl
lock
ret
neg
aam
filds
mov
mov
adc
sbb
sub
mov
movsb
xorb
pushf
push
push
mov
ja
add
pusha
mov
mov
mov
sub
xchg
mov
ret
cmp
and
push
mov
and
pop
push
add
nop
or
jns,pn
mov
testb
add
and
jecxz
inc
push
add
cs
push
cmpsl
dec
or
aas
test
mov
sbb
cs
inc
ss
out
out
sbb
in
jb
sub
mov
int
push
push
stos
pop
out
or
leave
mov
mov
sahf
push
add
out
sbb
pop
int
mov
loop
pushf
pop
add
in
or
mov
ret
push
dec
add
mov
test
clc
lods
or
cmp
push
cmp
test
lods
xchg
dec
pop
fistps
ret
jb
jns
pop
jne
shr
pushf
adc
cmp
std
push
xchg
or
mov
in
sub
add
movsb
xchg
loop
cmc
movsb
leave
lds
sub
fcomps
loopne
inc
inc
and
repnz
test
rcll
testl
stc
mov
outsb
push
pop
rorb
mov
add
pop
dec
cwtl
xor
jns
push
jo
sbb
mov
jecxz
ss
or
imul
movsl
jmp
outsl
sar
outsl
lds
rol
loopne
pop
mov
or
imul
xchg
imull
jl
jae
xor
cmpsb
adc
mov
dec
mov
movsb
sti
imulb
leave
fmull
inc
cmp
lret
sbb
out
jbe
inc
add
push
sbb
cli
jmp
push
js
jae
xor
out
pop
and
mov
xlat
and
cld
pop
fwait
inc
add
leave
pop
movsl
dec
pop
inc
call
xchg
mov
pop
rolb
sbb
mov
sti
and
imul
aam
mov
sti
or
fs
iret
sub
inc
adc
adcb
sub
mov
and
adc
sbb
sbb
mov
arpl
adc
jp
pop
pop
and
mov
jmp
mov
fdivl
jns
mov
lds
push
clc
adc
inc
inc
pushf
cmp
inc
or
inc
or
mov
or
sarb
and
cwtl
fidivrl
stc
mov
mov
and
jno
xchg
stos
das
cwtl
fs
push
lret
std
jmp
movsb
pusha
lahf
jae
insb
ret
pop
mov
inc
mov
lods
jae
fmull
rclb
cli
dec
sbb
adc
cmp
outsb
insl
sahf
xchg
push
pop
pop
fs
cmp
xchg
fs
mov
mov
add
leave
shll
loopne
cmp
movsb
aas
pop
pop
adc
mov
or
mull
push
dec
push
fistps
mov
stc
sub
mov
add
test
clc
std
and
adc
jl
sbb
mov
mov
inc
lods
sti
mov
jecxz
inc
mov
sub
pop
pop
ret
mov
xchg
inc
testb
orl
leave
lret
xorl
sahf
loop
add
test
prefetcht2
pop
sti
push
or
cmp
outsl
mov
xchg
icebp
adc
mov
fs
incl
cmp
fwait
pop
sub
movsl
jle
mov
xchg
xchg
ret
out
loop
jp
and
enter
dec
adc
lahf
xor
mov
or
dec
cmpl
add
and
mov
pop
shr
jbe
cmp
push
lea
rcll
dec
roll
inc
test
pusha
sub
sbb
nop
jns
daa
lods
push
mov
sub
push
jno
pop
pop
mov
fs
and
cmpsl
in
add
outsb
sbb
cmp
cmp
push
pusha
xchg
push
dec
mov
dec
sub
mov
repz
stos
popf
jl
mov
jno
cmpsl
nop
sbb
pusha
xchg
ret
sub
sbb
sbb
movsl
jecxz
cmpsb
cmp
or
sahf
adc
aaa
lock
pop
xchg
fidivrs
mov
jbe
jg
adc
pusha
dec
in
and
xchg
mov
jl
jmp
test
cmp
mov
inc
jg
adc
into
hlt
sbb
add
data16
shrb
jns
mov
sub
add
test
jo
cmp
lahf
lcall
sar
test
nop
adc
or
sbb
sbb
xchg
ss
jg
shlb
sbbb
inc
inc
and
ss
add
mov
cmp
neg
cltd
nop
xor
arpl
gs
fstl
ljmp
ljmp
bound
pop
lret
imul
imulb
xor
jge
pop
sbb
f2xm1
sarb
pushf
mov
and
dec
jb
ss
mov
pop
or
iret
mov
cltd
xor
std
popf
sbb
adc
push
xor
push
bound
sub
sub
iret
push
bound
ret
shl
das
xor
mov
inc
fcomp
sbb
adcl
out
out
scas
and
sbb
xor
imul
add
and
mov
clc
push
xor
movsl
mov
mov
cmp
das
and
xor
loopne
jno
sbb
enter
ja
pop
jb
pop
lret
dec
push
and
clc
cmc
cmp
mov
lcall
add
out
mov
imul
push
jle
nop
mov
and
xchg
fdivrs
jne
xor
jp
add
out
inc
add
xchg
jnp
ljmp
sbb
lods
popl
and
mov
ja
lods
imul
fbld
mov
mov
jl
mov
pushf
add
icebp
sbb
pop
mov
scas
cmpsl
inc
jp
hlt
repnz
pop
jne
cmp
add
jae
sbb
aad
adc
fbld
popf
mov
pop
push
pop
in
cltd
aaa
push
mov
stos
out
xor
decb
mov
pop
insb
jnp
push
xchg
or
ret
adc
mov
in
dec
leave
cmp
adc
adc
insb
push
ss
je
inc
push
in
sbb
outsb
pop
setge
jo
cs
inc
xchg
pop
sub
xor
push
ss
lahf
repnz
add
mov
stos
inc
jnp
mov
mov
jbe
fstpl
stos
xor
cli
in
push
aas
lcall
imul
cltd
in
stc
and
lock
mov
scas
fwait
and
test
lahf
dec
pop
clc
sbb
hlt
jnp
adc
mov
dec
cmc
jne
mov
cmp
push
mov
jg
inc
jle
cmp
dec
push
add
mov
sub
dec
mov
pusha
push
loop
add
fwait
andl
adcl
jecxz
dec
mov
dec
mov
mov
add
mov
fistps
xchg
push
jmp
dec
jno
cmpb
loopne
lret
push
sbb
pop
ficomps
je
hlt
iret
enter
gs
cmp
push
xor
jecxz
push
jecxz
adc
sbb
and
mov
push
pop
into
js
lret
fdiv
fisubs
stc
lds
test
enter
movsl
mov
sti
mov
cmp
sbb
mov
js
leave
and
mov
pop
cmpsb
xchg
clc
xchg
adc
jmp
fldln2
fidivl
inc
loopne
fdivrl
xor
mov
push
pop
or
sbb
filds
cmp
test
cmc
scas
xchg
cmp
addr16
cli
or
mov
sbb
mov
fsubr
ja
pop
mov
adc
int
pop
enter
out
xlat
inc
neg
xchg
js
cmp
les
aaa
out
jbe
ret
inc
jp
pop
sub
mov
and
clc
loope
outsl
add
adc
imul
mov
fwait
xchg
in
xor
fistl
fmull
jns
ja
inc
xor
push
xor
mov
mov
mov
add
inc
jno
in
stc
jmp
xor
cmp
hlt
rcrl
insb
mov
cmp
rcr
ja
sbb
xor
ss
jmp
sahf
clc
mov
cs
lea
in
sub
pushf
inc
xchg
inc
out
xchg
xor
pop
ds
in
push
cmp
xor
mov
adc
scas
insl
adc
popa
add
xchg
rolb
sbb
inc
ret
call
ljmp
int3
movsb
les
mov
jg
add
lock
pop
xchg
pop
shlb
push
xchg
push
andb
scas
add
imul
sub
inc
lea
in
repnz
fbstp
sbb
push
push
and
daa
add
pop
xor
xrelease
push
add
xchg
repnz
adc
js
mov
jg
mov
fistpll
pop
neg
ret
arpl
cmp
lcall
sbb
outsb
lret
je
xchg
jp
fmuls
jb
xor
test
jle
and
stos
dec
test
out
in
das
xchg
enter
repnz
addb
fstps
xchg
int3
shll
inc
add
jecxz
mov
pop
loop
mov
lcall
jns
cs
mov
adc
push
mov
adc
lods
sbb
popf
mov
push
cmp
imul
fadd
sub
imull
and
lcall
loope
push
push
leave
ret
arpl
mov
mov
aam
stc
cmp
ds
call
mov
icebp
or
jae
imul
push
fdiv
jecxz
mov
push
lock
add
xor
sbb
repz
push
and
dec
mov
add
icebp
std
mov
mov
push
mov
mov
outsb
clc
or
and
aaa
add
inc
dec
aaa
cmp
insb
sub
scas
ss
mov
xor
xchg
fistpll
repnz
aaa
aas
aad
das
jle
xchg
out
cmp
sbb
push
cmp
hlt
cs
dec
movsl
aas
pop
mov
imul
lret
cmp
and
iret
scas
jmp
xchg
cwtl
shll
push
jmp
mov
notb
jmp
fwait
repnz
pop
roll
fs
sub
xor
aas
ds
or
jno
cmpsb
sti
push
lret
sbb
scas
adc
pop
xor
push
push
mov
inc
aad
xor
inc
clc
push
popf
push
shll
lcall
cmpsl
mov
data16
out
or
mov
sub
mov
dec
xchg
imul
jbe
lds
out
cwtl
push
adc
mov
push
inc
jmp
inc
inc
or
ss
popa
push
leave
mov
jg
cmp
cli
pop
adc
sbb
insl
sub
push
in
push
bound
pop
and
in
push
mov
push
int3
sahf
stos
frstor
xlat
dec
imul
add
sbb
inc
cmp
pop
outsb
or
mov
enter
mov
mov
cmp
xor
dec
outsl
and
je
loop
mov
push
xchg
rcll
jno
push
jns
push
shlb
push
xchg
mov
pusha
dec
xchg
das
mov
adc
pop
repnz
sbb
mov
push
xor
dec
jne
add
dec
pop
sbb
add
cmc
je
pusha
pop
jecxz
fisttps
jns
mov
mov
lods
sub
xor
jnp
xor
cmp
inc
stos
pop
mov
push
sbb
int
je
xchg
and
jp
cmp
inc
push
std
pop
sub
fs
stos
popa
add
clc
nop
popf
dec
gs
in
call
imul
hlt
out
sub
cmp
mov
dec
mov
icebp
mov
xlat
ss
mov
xor
mov
test
mov
xor
hlt
mov
add
xchg
add
and
push
ss
pause
das
jo
mov
xchg
cltd
cmp
push
cmpsl
adc
xor
mov
aas
adc
lcall
mov
push
dec
inc
and
inc
mov
dec
add
cmpsb
dec
jle
lahf
arpl
cwtl
arpl
mov
lret
fwait
adc
in
mov
js
in
call
sbb
jmp
mov
test
pop
jmp
jmp
xor
sbb
in
cli
ss
add
jns
dec
dec
add
scas
jl
insb
xchg
lods
scas
rcrl
fsubs
and
fdivrs
shll
xchg
lret
jle
aam
sub
in
mov
leave
and
jb
jnp
and
jecxz
xor
rclb
pop
insl
xor
push
mov
icebp
mov
ret
lods
loope
int3
cmpsb
add
fidivrs
iret
lds
in
xor
repz
in
cld
insb
scas
inc
xchg
and
cmpb
pop
jmp
xchg
adc
scas
mov
pusha
shlb
push
arpl
inc
xor
iret
xchg
mov
push
xchg
add
mov
imul
mov
cltd
mov
adc
mov
aam
pop
mov
mov
cltd
test
loop
xor
add
xchg
imul
adc
push
cltd
sub
mov
push
mov
jns
adc
jp
adc
xchg
aam
sub
insb
jl
pop
pop
xchg
xchg
mov
cmp
push
aaa
pop
mov
push
and
dec
push
imul
divl
rcr
cmp
add
mov
mov
lds
lock
add
add
and
push
mov
ss
mov
sbb
add
sbb
stc
sbb
out
mov
cwtl
insb
sbb
and
mov
jno
jnp
cmp
iret
mov
je
mov
popf
xor
mov
push
dec
icebp
add
mov
ficoms
std
lods
popf
out
out
and
lret
lret
mov
mov
out
mov
or
pop
je
cld
filds
lret
imulb
jnp
je
sti
dec
mov
shlb
inc
pop
enter
sbb
sbb
inc
out
gs
in
adc
xor
test
jbe
mov
repz
aad
stc
mov
cmp
add
shrb
push
push
fstpt
fiadds
lock
sub
pop
data16
or
dec
xchg
or
push
ds
mov
inc
mov
mov
jg
testb
movsb
data16
stos
sub
lock
inc
mov
push
iret
fidivs
cli
push
dec
lret
cmc
mov
mov
xchg
movsb
xchg
call
arpl
int
cmpsb
dec
stc
test
or
cwtl
test
inc
add
sub
lret
cltd
push
fidivl
stos
aas
sbb
inc
pop
adc
mov
out
dec
add
jg
xchg
mov
xchg
data16
inc
jp
test
fucomp
pop
aaa
imul
addb
pop
nop
cmp
test
mov
loope
es
dec
arpl
in
xchg
int
pop
pop
mov
lret
jmp
inc
xor
push
fdivr
shrl
lea
fdivrl
les
mov
sahf
loop
inc
or
out
stos
or
push
lds
add
in
fbstp
scas
and
jge
sub
mov
pop
jecxz
cmpsb
inc
cltd
mov
jae
add
and
inc
into
in
out
sub
rcll
pop
dec
movsl
lcall
lret
sub
jge
insl
jno
and
hlt
call
jae
mov
in
push
sahf
adc
fdivrl
adc
ficoml
imul
lahf
pop
add
push
cwtl
ja
lahf
mov
int
loope
pop
fwait
or
xchg
aad
mov
ss
inc
sahf
daa
push
sub
imul
add
cmp
pop
sub
cmp
fstps
jle
xchg
lods
or
not
pop
xchg
data16
loopne
xchg
and
cmp
iret
or
test
cmpb
mov
out
mov
push
cmpsb
pop
mov
js
int
sbb
std
pop
sub
addr16
push
push
call
xor
in
lea
fidivs
insl
xchg
cmp
jne
cwtl
sahf
pop
jl
ret
mov
pop
repnz
sbb
in
sub
cwtl
in
pop
out
lods
jmp
sub
jmp
vpacksswb
xor
push
mov
std
scas
ds
gs
clc
cmp
jne
inc
push
fsubrs
repz
test
push
scas
int
dec
out
dec
scas
sub
jo
mov
ret
rep
cmpsl
aam
dec
sub
cmp
lahf
sbb
jae
lret
loop
ss
add
pop
jecxz
push
iret
pop
decb
scas
mov
stc
pop
neg
and
lods
hlt
cwtl
dec
arpl
mov
inc
xlat
sbb
sbb
xchg
scas
inc
pop
mov
in
fwait
add
imul
sub
jo
lret
std
and
inc
xor
adc
test
iret
out
push
and
gs
pop
and
aad
dec
insb
pop
mulb
unpcklps
jno
jb
les
cli
loope
fcomi
add
and
xchg
lea
or
adc
ret
sahf
jae
in
in
mov
jns
adcb
jg
in
test
jb
pop
lods
lret
dec
push
or
xorl
push
push
je
jb
and
inc
mov
xlat
sbb
ljmp
scas
cmp
das
loopne
in
mov
ss
sbb
cmc
cmp
mov
mov
add
test
std
cmc
jge
sub
loope
fs
adc
sahf
test
test
pop
sub
inc
pushf
lods
outsl
pusha
push
sub
mov
gs
stc
mov
inc
mov
in
out
jns
sarl
dec
xlat
mov
mov
aaa
popa
jecxz
mulb
add
xchg
push
add
stos
push
add
mov
dec
sub
int
pop
fldl
hlt
jno
repnz
popf
mov
and
subl
dec
clc
adcb
sti
xchg
loope
ds
mov
mov
pop
loope
sub
mov
mov
cmp
lcall
mov
mov
push
ja
fcomip
ljmp
sarb
push
mov
inc
das
jne
jg
jo
jmpw
dec
fdivrl
clc
mov
lods
cmp
mov
dec
testb
ret
mov
hlt
gs
mov
test
test
inc
pop
xor
cs
push
in
sbb
jbe
inc
popa
inc
filds
mov
lcall
pop
inc
fimuls
mov
xor
mov
insl
cli
sub
mov
lahf
rclb
mov
sub
mov
inc
mov
mov
imul
aad
jge
pushf
mov
imul
leave
xchg
int
and
jge
adc
dec
out
lea
aam
in
sbbl
adc
push
mov
xchg
int3
cmp
push
jns
mov
sub
add
aaa
dec
mov
or
pop
mov
xchg
aam
push
sub
sub
sbb
jle
mov
cmp
into
fs
sbb
cmp
jo
dec
pop
loop
add
out
adc
shl
cld
fstpl
cwtl
cmp
aad
int
xor
cs
iret
push
bound
lea
stos
les
lret
xchg
loop
xor
shl
jno
adc
push
fcmovbe
das
popa
js
cld
fbld
ds
adc
jo
add
sub
mov
mov
int
push
int
add
dec
inc
xchg
in
hlt
sub
inc
sub
push
pop
inc
dec
pushw
in
jns
pop
xor
lods
lds
negb
cmp
ss
push
pop
es
push
push
std
push
or
int
mov
je
mov
test
leave
mov
cmpsb
sarl
call
xchg
mov
fwait
lahf
cmp
ret
pop
fcoms
inc
cmp
dec
sbb
push
xchg
fldt
into
sahf
xchg
dec
add
add
js
in
mov
dec
adc
fisttps
adc
mov
and
push
inc
mov
sub
stos
sub
call
inc
push
imul
cmp
scas
or
xchg
subb
stc
jae
ljmp
nop
in
scas
hlt
lods
mov
or
fdivs
xchg
push
adc
outsb
enter
cmp
xor
fildll
andb
mov
outsb
adc
jle
push
cmp
adc
mov
dec
rcrb
adc
arpl
and
repz
jecxz
test
scas
aas
pop
add
test
sahf
test
into
pop
aam
cmp
sbb
push
dec
mov
mov
scas
sub
mov
jp
inc
out
aad
mov
lock
and
imul
sub
fcompl
or
popa
subb
push
call
mov
lods
js
inc
add
fdiv
mov
sub
fldcw
jae
mov
jnp
jb
sti
push
push
inc
add
dec
adc
gs
xchg
in
mov
insb
in
js
xorb
jle
in
subb
xor
aas
ljmp
pushf
js
cmp
movsb
nop
mov
aaa
inc
rorb
loop
mov
mov
add
cld
jecxz
scas
push
inc
xor
cmp
dec
mov
pop
dec
mov
js
and
inc
xchg
cmp
fcmovne
shr
clc
xchg
push
sbb
pop
ss
rcll
test
jecxz
js
inc
bswap
sti
mov
xchg
or
dec
pusha
cs
test
pop
outsb
xchg
xor
fmull
cmp
outsb
push
mov
sub
imul
cmpl
movsl
in
fwait
dec
push
dec
gs
dec
roll
xor
jno
push
cmp
dec
ds
cs
xchg
and
sarb
mov
idivb
mov
adc
outsl
xchg
mov
mov
jno
out
std
cli
aam
mov
dec
add
xchg
lea
push
push
mov
bound
mov
pop
push
xchg
pop
jle
das
aam
and
loopne
fnstcw
and
mov
loop
push
fisubs
lret
ret
fsts
xchg
push
jno
pop
aaa
int
inc
lods
sub
sub
and
or
dec
or
fdivrp
sarb
xchg
sbb
nop
mov
mov
call
or
cltd
and
ja
mov
in
mov
shll
mov
shrb
out
sbb
js
add
cmp
push
jle
fimull
or
mov
jo
loopne
xor
dec
sub
orl
pop
cmp
pop
inc
mov
mov
sub
test
pushf
jno
cmpsb
mov
aas
ljmp
xor
inc
incb
in
leave
and
jg
lcall
scas
cmc
push
and
xchg
mov
lea
push
jb
mov
mov
mov
iret
out
push
pusha
push
bound
lret
cwtl
xchg
jl
push
je
mov
cmp
mov
mov
inc
cmp
xchg
or
inc
clc
jne
and
arpl
lret
enter
sbb
sahf
pushf
sub
imul
imul
xchg
pop
pop
or
sarl
xchg
ret
movsl
mov
xor
cwtl
es
mov
xchg
jne
cmpsb
jg
filds
imul
sbb
jnp
cmp
adc
or
fs
rol
scas
pop
xor
scas
hlt
test
cmpsb
call
jb
popa
inc
pop
fwait
push
dec
lret
out
rorl
cmp
dec
repnz
pop
repz
cmp
and
and
or
and
dec
jp
scas
leave
sub
xchg
lds
sbb
lea
lods
sar
popf
xchg
xchg
mov
jne
icebp
stc
js
sub
pop
je
adc
pop
fdivl
inc
mov
sti
inc
xchg
and
data16
aam
nop
cmpsl
pop
jmp
in
add
ss
and
add
fists
mov
pop
inc
jo
std
mov
rorl
rcl
jecxz
stos
ja
hlt
cmpsb
fsts
dec
mov
call
mov
cmc
push
mov
xchg
test
jns,pt
inc
jp
and
xor
ret
mov
nop
cmp
xchg
or
das
sbb
sbb
mov
lods
xlat
dec
or
int3
add
bound
cmp
mov
imul
sub
lahf
jecxz
inc
idivb
mov
inc
insl
push
test
stos
lods
arpl
dec
dec
sub
jbe
sbbl
clc
daa
mov
mov
fwait
dec
xchg
int
push
call
gs
pop
loope
lods
and
mov
imul
jns
test
ret
xchg
cmpsb
mov
mov
pop
int
jno
in
jno
push
dec
xchg
mov
sarb
fwait
jae
jbe
ljmp
sbb
cltd
in
sbb
icebp
lock
sbb
pop
roll
push
mov
sbb
in
pop
pop
inc
mov
in
fsubl
mov
xor
test
add
in
frstor
mov
orb
ret
out
mov
dec
xor
xchg
push
loopne
aam
adc
iret
fs
push
or
aaa
aaa
sbb
and
xor
fidivrs
mov
jge
mov
jo
fistl
dec
jo
jle
jg
les
outsl
xchg
icebp
loope
jb
mov
sbb
xor
rcll
repz
lea
jns
dec
mov
loop
in
fisttpll
sbb
subb
into
sahf
dec
jmp
and
clc
mov
addr16
cld
pop
mov
inc
and
clc
lods
mov
sub
arpl
jns
and
mov
cwtl
push
mov
mov
arpl
sub
push
and
sbb
cmp
xchg
jb
jle
stc
inc
loop
outsb
clc
lret
movsb
adc
jns
push
push
movsl
or
dec
jnp
mov
jne
add
cli
sti
js
adc
es
mov
lret
nop
adc
mov
call
negl
fs
enter
inc
ret
push
mov
adc
inc
xchg
lcall
mov
das
xchg
mov
fiadds
outsb
jmp
sbb
test
cmp
mov
and
inc
jl
mov
aad
stos
daa
jge
out
sbb
lahf
in
mov
pop
dec
or
jle
test
rorb
fcompl
jecxz
sar
fcmovne
sbb
mov
pusha
in
jae
adc
xor
or
test
scas
loopne
aad
nop
iret
inc
je
movsl
add
sar
add
mov
dec
and
shll
js
loopne
out
outsl
and
ljmp
pop
push
mov
stos
and
test
insb
in
call
repnz
sub
push
in
push
loopne
push
mov
jge
cmp
lock
xchg
in
sub
ret
outsb
cltd
sbb
mov
sub
xchg
cltd
inc
out
mull
inc
imul
dec
push
pop
push
lds
lcall
or
int3
out
xor
cmp
leave
or
rolb
xchg
sub
mov
inc
or
into
jns
pop
push
ret
movsl
inc
cwtl
es
insl
mov
ljmp
scas
inc
add
rorb
cmpsb
sti
mov
mov
push
mov
mov
enter
pop
mov
cmpsb
mov
std
hlt
loope
cmpb
clc
lret
inc
pushf
add
and
mov
mov
lds
or
sbbl
jg
test
inc
jae
add
mov
stos
or
sbb
out
xor
fs
inc
xchg
stos
in
sub
and
mov
into
or
out
push
lret
cmpsb
push
ljmp
stc
nop
or
push
mov
cmp
int3
loop
test
or
cmp
cltd
cmpb
andb
xorb
mov
add
jp
mov
lea
pushf
dec
jae
out
fcoms
xor
stc
pop
gs
int
imul
ljmp
adc
rcrl
leave
mov
cmp
jmp
xchg
inc
sbb
fsubrs
lret
inc
push
inc
jo
xchg
jnp
lea
mov
jecxz
inc
movsb
and
imul
clc
mov
insl
mov
sarb
mov
repz
xor
or
inc
mov
sub
mov
rol
mov
fwait
iret
mov
mov
out
mov
jge
mov
cmc
mulb
xchg
dec
push
rcrb
pop
scas
xor
fwait
mov
in
xor
imulb
fmull
aam
mov
sbb
ljmp
in
stos
sti
lea
cwtl
jno
mov
ljmp
xor
sbb
lahf
loopne
lds
jno
and
scas
pop
lret
lcall
inc
add
xor
pop
xchg
sbb
loop
in
xor
adc
sub
dec
push
or
and
mov
mov
mov
and
and
xorb
mov
inc
cmpsb
daa
mov
ret
dec
bound
fisubrs
xor
add
inc
sbb
jge
sub
call
add
test
xor
push
inc
xor
jge
dec
les
mov
in
sahf
mov
loope
cmpsl
cld
out
mov
mov
push
mov
add
push
push
cltd
jnp
mov
add
fiaddl
mov
sbbl
xchg
pop
fnstsw
cmc
mov
lea
loopne
lock
pop
xor
sub
pop
pop
popf
xlat
loop
enter
lea
push
inc
ret
testl
fsubrl
repnz
div
push
std
add
pop
push
or
clc
push
sub
pop
add
jp
xchg
fadd
sub
or
mov
dec
mov
mov
movsl
jbe
push
cmovb
notl
stos
outsl
jns
popf
outsb
js
mov
xchg
mov
out
lock
jnp
pop
lods
fisttpl
movsb
je
pop
xor
or
insl
inc
mov
in
ror
push
flds
sti
jbe
cmp
addr16
aaa
xchg
cmpsl
sbb
in
xor
aaa
lods
rcll
stos
icebp
mov
mov
icebp
jbe
adc
into
fiaddl
scas
lock
hlt
xchg
mov
jnp
int3
int
xlat
push
inc
mov
pop
scas
mov
cmp
cmp
gs
sbb
les
mov
hlt
movsb
inc
sub
push
repnz
lods
subb
loope
int3
test
nop
pushf
roll
test
dec
cwtl
jge
jp
lret
cmpsb
sbb
cmpl
fcmovb
gs
push
pop
pop
jae
dec
xlat
ds
outsb
popf
add
test
sbb
movsb
and
out
or
mov
jmp
filds
jecxz
pop
stos
fiaddl
xor
mov
ljmp
or
fsubrl
aas
sub
daa
adc
or
add
mov
jge
cmp
je
fwait
mov
add
mov
ds
xor
xor
sub
fisubrs
dec
push
test
scas
ljmp
mov
mov
add
adc
sbb
mov
adc
sti
lret
jl
inc
pop
adc
les
loop
dec
add
add
push
inc
daa
adc
mov
lods
leave
mov
aas
out
jno
add
aas
mov
dec
push
adc
mov
cli
xor
sub
ljmp
adc
push
jns
int3
mov
lock
and
cli
lret
es
add
xchg
cmp
inc
pusha
mov
sahf
or
push
and
stc
ds
inc
mov
mov
add
shl
push
cmpsl
addl
in
pop
stos
mov
fisubrl
aaa
aas
loope
mov
aaa
div
fs
nop
add
or
push
pop
les
sub
jnp
push
cmc
mov
fcoml
push
bnd
std
mov
jmp
mov
inc
pop
test
cmpsl
cmp
pop
stos
dec
or
das
movsb
inc
rcll
mov
mov
sbb
aas
cmpsl
fisubs
ret
int3
adc
jns
in
sar
ret
push
psubq
inc
add
ud2
out
dec
cltd
cmpsb
jnp
int
jg
iret
mov
cmp
lahf
sub
aaa
test
push
fs
int
pop
enter
sysenter
or
pop
test
int3
pop
add
movsl
iret
mov
add
fdecstp
pop
or
and
mov
movsb
sub
jne
mov
ficompl
movsb
stos
mov
xor
outsl
pop
mov
and
and
repz
out
outsl
ja
sub
pop
jmp
sbb
lock
inc
or
pop
inc
dec
pop
pop
bound
push
enter
mov
popa
pop
hlt
fs
shlb
aad
test
and
jno
push
arpl
and
cmp
cmc
loop
jecxz
mov
outsb
mov
out
loopne
pushf
jg
adc
orb
add
testl
notb
addr16
and
cmpsb
cwtl
aas
js
push
fdivrs
pushf
out
test
jo
sbb
insb
nop
and
xchg
stc
jge
lds
sti
iret
pop
push
cmp
fld
mov
js
lock
dec
fadd
inc
mov
xorl
sbb
cs
aam
inc
adc
adc
out
imul
cmpsl
addr16
mov
push
loope
stos
lret
les
or
les
in
addl
lock
add
push
aad
adc
lock
sbb
test
add
roll
aam
je
mov
jge
daa
jnp
aaa
fcmovnu
xor
and
push
rcl
jbe
out
popf
fdivrs
or
jp
movsl
and
mov
outsb
sbb
sub
nopl
ds
xlat
lea
popf
sahf
jno
cs
push
fs
ret
cmp
mov
in
enter
push
add
pop
add
mov
xchg
testb
xchg
pop
out
outsb
shll
xchg
lock
sbb
xor
enter
cmpsb
lahf
jecxz
jl
sub
insb
push
push
add
idivl
out
xchg
pop
test
jbe
sub
lahf
imul
push
flds
push
jne
call
rclb
pop
rorl
fs
jns
loopne
cmc
pushf
mov
ljmp
add
insb
fucomi
out
xchg
mov
jo
mov
fs
mov
dec
pop
jno
jp
sub
mov
mov
pushf
push
mov
das
push
xchg
arpl
mov
icebp
cmp
sahf
lcall
pop
or
mov
dec
jle
mov
mov
xchg
mov
hlt
pop
test
jecxz
add
xor
and
adc
sbb
shrl
movsb
shlb
push
dec
xchg
movsb
sarb
std
pop
sub
mov
dec
mov
or
mov
inc
mov
outsl
pop
add
inc
and
mov
icebp
inc
xchg
dec
leave
call
outsl
js
fstpl
cmp
addr16
add
movsl
sub
sub
mov
jp
and
ljmp
jp
dec
outsb
xchg
in
xlat
adc
test
mov
lahf
ja
jp
pop
or
mov
mov
cmpsl
aas
clc
and
add
push
adc
js
aad
call
ret
test
ljmp
aad
mov
xor
insl
rorb
test
addr16
mov
in
into
mov
pop
int
cli
hlt
push
adc
in
fwait
dec
call
bound
push
sub
lods
xor
push
and
xorl
or
jb
sbb
xorl
sti
dec
inc
push
adc
lods
popf
adc
bound
testb
push
jmp
xchg
push
mov
and
insb
pop
stos
mov
je
sbb
jecxz
outsl
ret
stos
pop
pop
jl
xor
mov
dec
sub
mov
outsb
into
lods
mov
in
push
mov
and
push
fnstcw
rcrl
jae
aaa
inc
sub
jno
and
add
mov
push
sbb
mov
imul
pop
sbb
enter
movb
xchg
negl
sahf
pop
call
popf
dec
or
adc
mov
sbb
inc
pop
fucomi
mov
cmp
sub
xor
lods
xchg
mov
in
xor
push
push
fsubr
jnp
pminub
ja
and
loop
xor
inc
cmp
xor
jns
lret
inc
mov
mov
aas
in
or
adc
ret
dec
dec
sbb
dec
popf
leave
mov
cmp
mov
test
vunpckhps
or
jle
adc
adc
ljmp
in
xchg
xor
lock
xorb
jmp
popa
out
scas
out
dec
popf
push
xlat
add
std
mov
inc
je
cmc
xchg
stos
push
les
cld
mov
cmc
inc
test
pop
or
lock
cmp
cmc
rcrl
add
repz
shrl
ljmp
mov
or
and
or
sbb
hlt
jbe
leave
push
dec
ficomps
jne
pusha
adc
call
and
dec
in
jb
iret
xchg
mov
or
iret
jg
in
cmc
push
mov
cld
sub
mov
lods
add
pop
ss
push
mov
into
je
lock
hlt
push
das
loop
repnz
stc
test
cld
pop
adc
rcll
loopne
jge
pusha
jbe
pop
ss
sub
jle
xor
jmp
fsub
shlb
cltd
push
mov
inc
js
ret
clts
popa
andb
mov
cmp
movsl
jae
dec
dec
add
shl
sbb
push
fstl
or
out
fcomps
in
sarl
test
inc
xchg
arpl
bound
jns
inc
addr16
sub
jg
call
dec
cmp
call
imul
sub
loopne
pop
adc
out
sub
in
add
xchg
scas
scas
xor
push
ja
sub
pop
bound
enter
cmc
dec
sbb
inc
inc
jmp
ret
ret
and
cmpsb
test
shlb
mov
out
inc
cmpsl
and
pop
add
shll
xor
sub
aam
iret
sbb
int
and
sbb
push
ljmp
mov
sarb
inc
icebp
fildl
push
push
out
sbb
and
out
push
jmp
movsb
pop
mov
fiaddl
negb
nop
stc
pop
jae
dec
mov
push
mov
push
ret
jmp
sahf
inc
mov
xchg
cmpl
loope
mov
adcl
stc
insb
sbb
sub
adc
pop
push
or
repz
int
cmpb
scas
repnz
jbe
sub
mov
pop
push
js
xlat
stos
aaa
xchg
fstpl
xchg
and
add
pop
adcl
xor
clc
popa
mov
fstpt
data16
mov
movsb
daa
fiaddl
pop
scas
jmp
jg
push
test
psrlw
mov
push
or
push
jbe
out
mov
mov
repnz
ljmp
sbbb
test
add
inc
mov
pop
add
push
ljmp
scas
lahf
cld
mov
add
dec
jae
iret
shl
inc
and
push
mov
sbb
jne
repz
cli
rcl
xor
xchg
subb
push
aad
and
movsb
in
mov
stc
aaa
lock
js
mov
mov
push
mov
sarb
gs
cmp
data16
cltd
fistpl
inc
push
jg
xchg
xor
lea
mov
xorb
addr16
dec
ss
mov
xchg
mov
movsl
imul
mov
notb
push
sub
ss
gs
out
arpl
ja
push
lods
out
cmp
mov
fcompl
mov
push
mov
rcrl
add
pushf
pop
je
cmp
or
bound
imul
add
sbb
mov
idivl
icebp
sbb
push
push
push
ret
shl
andl
adc
push
lock
out
in
fisubl
ja
cld
mov
inc
orb
test
in
or
push
fstp
push
xchg
mov
mov
popf
imul
gs
inc
rorb
shl
push
dec
adc
lock
inc
or
les
xor
dec
push
in
out
fistpll
inc
jbe
mov
mov
push
jp
mov
dec
mov
mov
shll
or
cmp
cmp
addl
pop
out
sar
mov
pop
mov
xchg
fidivrs
int
lcall
inc
cmpsb
push
rcll
xchg
lret
out
inc
mov
jge
filds
into
pop
jg
adc
pop
mov
mov
add
stos
fdivrp
add
in
mov
mov
and
lds
xlat
pop
je
push
fucom
dec
cltd
dec
or
jmp
imul
inc
dec
insb
push
fnstcw
sti
push
test
mov
inc
ss
idivb
cld
add
xor
call
dec
loopne
push
sti
pushf
mov
in
arpl
adc
jecxz
cltd
mov
fsubr
push
lds
rorl
sub
xchg
in
lret
ret
or
idivb
xchg
cltd
xchg
mov
ret
dec
repnz
test
sbb
and
stc
pop
pop
lcall
dec
push
sub
jmp
inc
cld
add
mov
jg
in
sub
mov
outsb
int
adc
dec
out
and
ffree
dec
movsb
cld
cmpsb
bound
movsl
int3
nop
loopne
dec
repz
aas
or
pop
les
cmp
jns
lds
clc
cmpsb
jns
loope
xchg
out
push
mov
bound
dec
jb
mov
test
jge
or
add
iret
xchg
sub
push
mov
pop
push
movsb
leave
negl
aam
das
in
repnz
in
ja
adc
test
int3
jge
push
push
sbb
or
out
sub
ja
add
je
out
inc
jle
or
cs
adc
insb
repz
out
xchg
add
xlat
dec
loope
dec
sahf
jo
or
xchg
pop
leave
mov
and
push
push
mov
cmp
or
sub
mov
outsl
sub
mov
jbe
jmp
jg
jg
int3
lds
icebp
mov
cli
jae
cmpsl
xchg
and
aaa
ret
add
ljmp
push
xchg
xor
and
movsb
into
scas
sub
fisubrl
pop
mov
mov
mov
lret
add
notb
bound
pop
xchg
inc
jns
stc
or
ud2
pop
pop
ret
push
pop
xchg
ds
inc
pop
xchg
lahf
outsb
adc
push
inc
outsl
mov
mov
mov
lret
sub
xor
icebp
fisubrl
fmull
pop
dec
mov
and
mov
pop
xor
je
push
test
lock
push
dec
add
xchg
rcrl
or
lcall
fdivl
xorb
nop
xchg
push
nop
popa
cmpsb
insb
mov
fcompl
les
stos
fadds
jne
add
stos
mov
fildll
jle
mov
fcmove
test
dec
enter
or
mov
outsl
or
scas
scas
ljmp
cmp
iret
bound
jae
and
adc
cmpsl
add
lods
lret
mov
xchg
outsl
nop
xchg
movsb
fisttps
pop
int
pop
cmp
jno
lods
inc
pop
adc
aam
fimuls
adc
cmp
mov
fs
add
sub
sub
test
bound
subb
ja
add
clc
sti
xchg
ss
mov
cwtl
sub
test
inc
stos
xchg
xor
mov
bswap
jne
loopne
pop
das
sbb
pop
pop
sub
inc
mov
pop
dec
jnp
mov
out
pop
mov
and
repnz
cwtl
fxch
mov
dec
dec
mov
les
loopne
cwtl
cltd
in
rcrb
adc
adc
mov
enter
cmpsb
call
xlat
jle
jb
mov
test
int
xor
hlt
xchg
in
jp
sbb
pop
aam
rcll
out
cltd
lock
cltd
pop
push
jns
add
insl
inc
mov
in
xor
int
ljmp
and
mov
stc
insb
addr16
fstps
fistps
sub
lcall
push
xlat
fiaddl
mov
jmp
adc
adc
cmc
out
lods
aas
add
adc
adc
jbe
int3
clc
push
dec
adc
cmpsb
insl
cli
xlat
xchg
les
push
mov
inc
mov
sub
loop
dec
popf
add
and
push
cltd
ret
out
movsl
mov
hlt
shll
sahf
sub
add
adc
call
repnz
add
out
jmp
popf
xlat
imul
test
mov
fistpl
adc
loope
cs
out
test
mov
push
cmpsl
popf
es
stos
lret
add
aas
pop
sbb
popf
out
imul
insb
jnp
mov
pop
shrb
pop
loope
scas
add
out
sbb
iret
mov
int3
mov
addr16
jnp
adc
dec
mov
push
add
cmp
rcrl
jnp
push
push
popf
mov
xor
fists
out
mov
push
bound
cmp
fiadds
add
jecxz
add
dec
je
sarl
adc
jmp
inc
cld
stos
mov
testb
add
repnz
lea
ret
mov
cwtl
sub
sbb
int3
mov
cmp
xor
sbb
sub
inc
xorl
jae
xchg
hlt
pop
aad
xor
jnp
ret
xor
xor
mov
mov
pop
sub
cli
cmp
clc
pop
mov
addr16
add
mov
into
push
out
cmp
xchg
fs
mov
stc
inc
push
mov
lretw
mov
dec
dec
testl
cmp
push
popf
ret
testl
xchg
adc
lods
movb
jecxz
and
dec
js
out
push
dec
push
pop
hlt
fists
fstps
inc
xlat
jbe
cmp
in
ja
fdivrl
stos
cmp
je
mov
add
pop
xor
leave
stos
rdmsr
aas
inc
out
lods
jno
decb
filds
imul
jne
and
push
fcomp
imul
inc
mov
xor
popa
leave
and
lds
mov
lahf
imul
scas
mov
ljmp
push
dec
jno
nop
popa
jbe
sti
lock
push
push
cwtl
or
inc
sub
inc
icebp
inc
cmp
pop
xor
call
dec
sti
cmc
xchg
dec
cld
into
das
pop
loopne
or
test
cmp
mov
stos
jae
pop
decl
sbb
jne
add
ret
sub
arpl
adc
jbe
mov
push
pop
add
push
scas
inc
hlt
test
add
enter
enter
stos
mov
add
mov
xor
mov
cmp
and
and
cltd
jecxz
mov
aas
cs
push
xchg
mov
jecxz
jns
cmp
mov
movsb
aam
jg
jecxz
outsb
inc
jg
clc
lret
mov
enter
mov
mov
xchg
jnp
cmp
push
adc
push
loopne
sbb
jg
xchg
pop
xchg
call
mov
xchg
xor
dec
fucomp
imul
clc
andl
fcmove
push
pop
mov
jnp
ljmp
dec
dec
add
pop
push
movsl
in
dec
jg
jmp
hlt
jge
sti
scas
mov
loope
imul
out
sbb
in
or
xchg
add
mov
dec
divb
js
inc
jbe
jmp
jmp
loopne
jmp
scas
andl
into
pop
cli
sub
mov
nop
xor
push
and
out
dec
xchg
mov
clc
leave
or
mov
nop
mov
sub
cmpsb
pop
test
bound
fsubl
push
xchg
mov
cmpsl
lcall
out
push
inc
jno
ss
jne
out
fsubrl
cltd
jge
movl
add
xchg
imul
scas
or
sahf
les
hlt
out
and
xor
push
xchg
or
jmp
jl
mov
nop
je
jge
mov
or
rcrl
mov
pop
xchg
andl
xchg
pop
lods
ja
xchg
cmpsl
xchg
push
cld
adc
aaa
cmp
push
clc
movsl
nop
lods
and
xchg
jb
jb
call
cmp
sbb
xchg
cmpsb
lods
mov
xor
jo
xchg
lea
cmp
ret
add
mov
cmp
shll
shrb
aas
iret
cltd
arpl
fyl2xp1
and
or
xchg
popf
movsl
sbb
cli
popf
addr16
jo
nop
adc
mov
lods
lret
push
scas
out
xor
xor
into
xlat
shlb
lock
hlt
xchg
in
pop
pusha
sbb
stos
call
fists
sbb
push
inc
jmp
mov
stc
mov
lret
cmp
fwait
jno
xchg
comiss
jbe
xchg
jae
sbb
sbb
mov
add
pop
jg
and
cs
jecxz,pn
std
clc
inc
pop
js
xchg
repnz
jb
in
xchg
test
out
repnz
and
repz
mov
mov
inc
and
ficompl
daa
dec
pop
or
mov
mov
ljmp
mov
mov
push
adc
jle
mov
fisttpll
push
shl
jge
icebp
and
cmp
je
cmp
jo
sbb
pop
xsaveopt
dec
add
fisubrs
idivl
dec
mov
js
leave
out
pop
dec
or
sub
mov
inc
xor
imul
xor
mov
popa
adc
fcoms
mov
fisttps
in
int3
mov
and
inc
popf
imul
negb
adc
inc
std
mov
sub
pushf
out
incl
cmp
push
cli
int
pop
or
or
pop
mov
sbb
fsubrp
dec
scas
test
adc
bound
push
in
mov
push
inc
jnp
pop
mov
or
inc
insb
int3
and
icebp
testb
cld
sahf
add
aaa
push
and
jmp
pinsrw
stc
jp
pop
aas
hlt
xchg
shl
lds
push
add
or
pop
aam
cmp
nop
dec
jne
lahf
push
scas
push
push
mov
std
cld
inc
fwait
jmp
push
adcl
mov
xchg
aaa
lret
xchg
sbb
xor
and
jb
subl
scas
xor
lods
loop
fsubl
fwait
cwtl
popf
adc
cmp
in
int
xor
ss
negl
jne
inc
mov
cmc
call
push
inc
jle
or
cld
xor
repnz
inc
daa
xchg
mov
movsl
mov
mov
sbb
push
push
mov
mov
xor
push
pop
pop
cmp
test
or
mov
xchg
pop
xchg
in
xor
sahf
popf
inc
mov
cvtps2pd
inc
andl
dec
out
sub
inc
lods
sub
int
sub
aad
sub
test
in
and
mov
mov
sub
inc
cmpsl
mov
xchg
sbb
pop
mov
inc
popf
cmp
push
testl
shr
push
shrb
push
dec
push
sbb
add
sub
xlat
jmp
icebp
cmp
mov
repnz
lahf
mov
repnz
enter
xchg
xlat
pop
add
pusha
xchg
call
cmp
pop
lcall
cmpsl
xor
push
and
and
cli
nop
sbb
imul
jg
jo
iret
cmp
inc
js
in
out
sub
ret
dec
sub
xlat
cmp
daa
add
sti
cmpsb
sbb
add
cmc
jg
xor
insb
jle
mov
push
sbb
dec
adc
dec
inc
ds
adc
arpl
push
xor
imull
fnsave
jae
pop
popf
xchg
sub
iret
dec
ljmp
addl
or
inc
scas
mov
in
xor
shl
scas
orl
xchg
xor
mov
xchg
out
cmp
repnz
andl
nop
jo
out
dec
cmp
movsl
push
cmp
jb
mov
mov
add
mov
mov
fmull
cmp
or
out
push
movsb
loope
cmp
dec
cltd
mov
jb
leave
and
stos
xchg
jae
das
popf
add
adc
iret
xor
pop
ret
jnp
cli
push
jnp
mov
inc
dec
fistps
cmp
pop
imulb
into
addr16
mov
adc
xchg
sbb
pop
stos
test
lret
pusha
adc
popf
pop
imul
fmuls
and
into
fwait
imul
mov
data16
cmp
inc
or
fnstenv
ret
add
mov
int
sbb
repz
js
test
or
jle
enter
test
nop
add
jl
ss
and
test
loope
movhps
push
fcom
test
scas
push
and
out
xorb
inc
es
testb
push
mov
ds
push
adc
inc
and
sbb
int3
adc
shl
addb
scas
cli
sub
inc
sbb
adc
jmp
iret
lds
popf
iret
repnz
sub
shl
mov
sbb
ss
test
or
pusha
xchg
sahf
xchg
fstpl
cmp
iret
and
pop
mov
cmp
outsl
fimuls
idivl
lds
jg
cmp
fistpll
and
aam
cmp
notb
mov
jecxz
pop
fistpl
sbb
cmp
out
in
pop
inc
pop
sub
xor
repz
xchg
add
sbb
das
add
in
stos
cs
ljmp
lcall
dec
and
cmp
js
pop
inc
sbb
cmp
insb
lret
xor
pop
jp
push
or
push
cmp
imul
and
das
mov
mov
pop
jle
adc
and
fwait
cli
out
or
push
fildll
shrb
xor
rcl
mov
loopne
inc
inc
pop
xchg
mov
aas
cwtl
outsl
int
insl
fdivrl
adc
dec
jmp
mov
pusha
shll
mov
mov
clc
jno
mov
fdivrp
mov
imul
mov
movsb
repz
pop
mov
arpl
iret
fmull
lods
jge
inc
xorl
pop
adc
es
jp
or
dec
sbb
jmp
jl
pop
mov
lcall
pop
std
testb
sarl
lret
int3
je
push
push
cmp
nopl
or
lods
jo
jbe
call
add
insl
jecxz
xor
sbbb
and
xor
or
mov
ljmp
movsl
fbld
cmp
loop
sbb
push
lret
rolb
pop
jb
adcl
xchg
sti
cltd
sarl
insb
sub
push
cltd
fidivl
mov
pop
stc
das
aad
adc
ret
pop
xor
sbb
cmpsl
cltd
inc
mov
popa
lods
adc
or
push
outsb
enter
sti
mov
clc
xor
pushl
mov
jnp
stos
hlt
mov
mov
inc
outsb
das
adc
ret
std
inc
xchg
lahf
mov
sub
outsb
int3
stos
ret
lds
pop
pop
xorl
adc
xchg
pop
sahf
repz
fdivl
xchg
test
cmpb
inc
in
test
and
and
mov
pop
inc
cltd
fstpt
lea
shl
or
mov
dec
mov
ss
and
jbe
cmp
adc
xchg
mov
or
sbb
lea
out
sub
cmp
mov
mov
jo
push
je
and
and
or
sub
cmp
mov
shr
sub
clc
rolb
js
jmp
fistpl
sbb
pop
je
or
pushf
or
and
repnz
jbe
lods
xor
enter
iret
dec
popf
call
and
sub
outsb
cmpsb
shl
decl
out
sti
cmp
lods
xor
xor
pop
fmul
adc
cltd
push
mov
jne,pt
pusha
sub
jno
xor
or
sbbl
popa
mulb
insb
pop
ret
push
fwait
xor
cmpsl
adc
pop
test
inc
adc
sub
dec
cmpsl
dec
loop
and
or
pop
mov
jo
dec
mov
mov
pop
cmp
es
andl
psubusw
data16
je
adc
jmp
sub
xor
push
push
ljmp
mov
mov
mov
ja
and
push
mov
cmp
sti
cmp
adc
insb
mov
addr16
into
sbb
mov
mov
addb
dec
sub
mov
inc
stos
int3
mov
jb
scas
test
fiadds
cmp
outsb
fdivs
xchg
mov
cwtl
repnz
or
mov
and
jp
jb
dec
test
add
xchg
sub
hlt
popa
mov
mov
repnz
loopne
ret
ja
or
pusha
loopne
xor
scas
das
adcb
and
pop
test
loopne
int3
adc
stc
mov
or
mov
mov
xchg
dec
int3
imul
inc
mov
cmp
sub
scas
loop
lret
cmp
adc
sbb
mov
mov
jno
xlat
adc
in
ss
or
mov
jmp
lods
enter
jl,pt
xchg
fcmovu
aas
insb
fwait
inc
jl
rcrl
push
xchg
jmp
xchg
mov
mov
rcrb
mov
inc
in
lock
dec
fimuls
call
sarb
les
test
push
das
js
pop
xchg
cmc
dec
aaa
movsl
jne
push
add
dec
push
cmp
in
xor
mov
pop
in
in
or
sti
sbbl
ljmp
and
cmpl
cmc
out
mov
sbb
shrl
push
rorl
popa
push
fiaddl
sbb
add
mov
push
jle,pt
mov
xchg
sbb
loope
cs
push
imul
aaa
js
imul
inc
dec
repnz
inc
lods
nop
imul
pop
pop
push
or
movsl
out
test
or
or
pop
push
pop
xlat
scas
or
cli
std
clc
cld
clc
xor
jnp
xchg
adc
or
loop,pt
inc
sub
das
cli
in
jne
out
mov
sbb
fcmovbe
sbb
cmpsb
loop
pop
out
cmp
or
repz
sbb
test
fwait
int
aad
push
mov
outsl
sbb
cli
fstps
jnp
mov
into
mov
sub
mov
sbb
inc
negl
sbb
ret
scas
lds
sbb
xchg
or
xorb
mov
and
cwtl
xchg
mov
sub
or
lea
repz
cmp
movsb
sub
cmpb
mov
cs
dec
pop
push
mov
jg
push
cmp
lods
out
rcrl
cmp
push
test
out
shr
xor
jnp
pop
mov
fdivl
imul
or
push
sbb
std
repz
es
stos
sbb
or
inc
aad
negl
jle
sbb
and
pop
mov
pop
or
and
lds
int3
das
jecxz
dec
cmp
jmp
cmp
rcll
repz
adc
ds
jmp
pop
xchg
fcmovbe
mov
mov
push
xchg
repnz
sub
insb
cmp
xchg
sti
pop
cmpsl
cmpb
push
das
dec
rolb
mov
les
pop
jmp
adc
scas
and
cli
adc
repz
inc
sub
mov
fdivr
sahf
pusha
or
or
movsb
out
mov
add
out
mov
hlt
out
lret
cld
inc
enter
dec
movsb
bound
loopne
xor
mov
fisttps
pop
pushf
aas
add
cmp
into
in
clc
pusha
push
sub
inc
push
sub
test
cmpl
movsb
fnsetpm(287
xchg
push
int3
test
repnz
mov
ror
dec
mov
push
aad
aaa
js
das
ds
mov
fdivl
cmpsb
test
sub
add
test
fwait
imul
push
lods
leave
push
dec
pop
imul
aam
out
or
sub
fnsave
test
int3
jnp
cs
jno
inc
out
xor
rol
pop
and
mov
mov
fistps
sti
aam
repnz
and
in
dec
push
adc
daa
out
sbb
push
xchg
and
enter
stos
gs
fsubr
lcall
inc
icebp
sub
in
in
pop
aam
sti
xor
andb
add
and
aaa
dec
sbb
add
enter
xor
pop
dec
push
sbb
or
adc
sbb
cmp
sbb
stos
cs
cwtl
mov
sarb
cmp
cli
jno
pop
adc
fildll
add
dec
mov
or
shrl
push
push
mov
cld
mov
or
sub
data16
movsb
test
movsb
imull
jmp
or
sub
das
out
inc
dec
pushf
inc
ds
xchg
stos
and
mov
dec
fisttps
mov
aaa
inc
sahf
pop
mov
cmpsb
mull
adc
cmp
mov
and
and
sub
fidivl
and
mov
loop
rorl
ja
jp
xor
enter
data16
test
adc
inc
js
fisttps
push
pop
jmp
aad
cs
xchg
sti
pop
mov
mov
out
xchg
js
popf
and
xchg
subl
outsb
add
mov
push
inc
cld
cltd
out
lret
les
pop
cmp
mov
pop
fmul
fiadds
bound
in
xchg
push
repnz
rcl
mov
dec
in
jno
jle
mov
negb
mov
pop
mov
cs
popa
xor
call
aaa
pop
sub
mull
andl
jo
cmp
push
xchg
and
ja
pop
xor
sub
adc
insb
out
sub
scas
cmc
aad
popa
in
inc
mov
pop
dec
ds
inc
add
or
fildll
mov
cmpsb
xor
enter
jecxz
mov
push
fnstsw
fsts
imul
lret
xor
mov
push
or
and
add
adc
rcrb
hlt
push
inc
imul
jnp
inc
lock
xchg
mov
and
xor
mov
adc
lods
xor
sbb
cmp
das
adc
jbe
pushf
push
iret
and
jne
fisttpl
xor
popa
xchg
xor
inc
inc
test
push
cmc
frstor
pop
in
add
jae
jns
adc
aam
mov
fdiv
in
aas
cmp
or
inc
xor
rolb
ret
xchg
and
cli
addr16
push
cmp
iret
data16
rorb
cmp
psubb
push
je
sbb
sbb
fiadds
mov
rcrb
cmc
neg
aaa
jl
sbb
xchg
add
adc
aaa
test
adc
pop
dec
mov
add
aad
iret
mov
or
jns
pop
lea
xor
lret
inc
and
jno
imul
lods
enter
sub
xchg
ret
jb
and
jecxz
add
dec
cmp
cmp
mov
test
js
push
addl
add
mov
inc
xchg
cmpb
int3
cltd
xchg
jle
imul
mov
add
mov
rcrl
je
das
inc
ljmp
mov
sub
add
jle
add
std
xor
mov
dec
fimull
lods
ss
scas
and
stos
push
leave
sbb
test
sbb
mov
in
mov
add
pop
mov
and
arpl
loop
fwait
enter
dec
fidivrl
sbb
and
shrl
sti
adc
mov
mov
pop
pop
test
pop
xchg
neg
inc
add
mov
dec
scas
xlat
push
outsb
mov
dec
adc
inc
dec
dec
cwtl
aam
push
push
dec
rolb
push
jae
mov
insl
push
ja
sti
and
daa
mov
shlb
in
mov
add
or
jl
mov
out
add
xchg
pop
movsb
or
in
rorb
cmp
imull
mov
scas
test
pusha
jecxz
xchg
push
jno
lods
jg
pop
mov
loope
aaa
cmpsl
cmp
xchg
popf
mov
idivl
rcrb
lods
nop
pop
add
mov
jg
gs
jge
js
sub
jge
test
add
mov
mov
std
push
mov
les
xchg
push
popf
dec
int3
mov
adc
data16
sbbl
test
das
int
jno
pop
dec
and
std
xchg
or
ficoml
cmpl
inc
and
xchg
xchg
jge
enter
jns
inc
push
mov
add
fildll
in
outsb
xchg
imul
fs
push
push
js
ljmp
rcrb
rorb
mov
mov
fs
cmp
out
jmp
divl
cwtl
sti
pop
loopne
push
pop
push
imul
cli
jbe
daa
inc
testl
arpl
xor
lcall
pop
ja
addl
sub
sub
push
stos
int
std
xor
std
into
lock
xor
jmp
push
push
fdivrp
aaa
sahf
js
or
insb
in
enter
cmpsl
ret
adc
cmc
and
mov
call
aad
push
adc
ds
fldl
mov
xchg
jae
pop
or
in
mov
jns
hlt
ror
add
xor
das
mov
jo
pop
int
icebp
mov
mov
mov
and
mov
cltd
repz
push
inc
arpl
adcb
sub
movd
bound
fadd
jbe
inc
fisubs
pop
push
decb
lret
mov
stos
orb
cmp
dec
pop
dec
bound
fcomps
aad
sbb
fwait
jns
xchg
dec
jecxz
push
not
mov
inc
cmp
xchg
mov
xchg
dec
mov
fcoml
sahf
sbb
das
mov
rep
pop
mov
inc
insb
add
sub
sub
mov
and
leave
std
jo
idivl
adc
sbb
hlt
outsb
aad
mov
pusha
dec
jnp,pt
fbstp
xor
jle
push
negl
popa
or
push
daa
mov
mov
pop
bound
scas
das
dec
shrb
mov
and
push
and
es
lcall
sub
jmp
sub
jne
imul
fmul
scas
fwait
jb
call
push
es
test
add
in
insb
int
add
cmp
pop
xchg
ljmp
jne
mov
pop
or
xor
jg
test
pop
mov
adc
rcrl
aaa
sbb
mov
stos
icebp
pop
notb
sub
andb
jnp
loope
stos
cld
mov
cli
cmp
mov
aad
lods
xchg
sbb
addl
jnp
xor
outsl
and
cmp
loope
add
pop
jle
lcall
inc
jns
in
sbb
mov
daa
add
in
sub
and
icebp
fisubrs
push
rorb
fdivrs
jo
xlat
sbb
push
out
sub
and
mov
xchg
add
xlat
iret
dec
xchg
popa
jmp
xor
pop
or
jmp
leave
mov
and
ds
lock
divb
or
rcrl
test
repnz
dec
jl
mov
je
xlat
andb
mov
cmpsl
inc
mov
mov
repz
xlat
inc
leave
out
mov
ljmp
das
dec
inc
les
xchg
stc
push
mov
mov
sbb
shrl
cld
mov
lahf
push
cs
inc
stc
out
pop
cltd
pop
jo
gs
or
and
push
push
cs
scas
adc
lods
xchg
je
je
shlb
push
sarl
mov
outsl
mov
mov
add
sub
or
xchg
lds
push
push
fwait
sarb
in
movsb
cwtl
testb
popa
push
or
ficomps
jge
aaa
test
mov
hlt
sub
jb
xadd
xchg
jne
adc
jb
lea
lahf
add
and
sbbl
dec
xor
xor
imul
sarb
mov
js
or
pop
jge
test
loopne
mov
pop
shll
and
dec
xchg
into
sti
pop
mov
mov
jge
add
test
jge
push
fnstsw
addb
or
in
add
stos
xchg
add
or
pushf
or
insl
sbb
pop
cmp
lahf
sub
movsl
ljmp
sbb
mov
push
sub
inc
lock
iret
ret
std
enter
outsb
xchg
fiaddl
pop
xchg
or
push
sub
sub
insl
fwait
insb
cltd
inc
in
rcr
iret
in
into
pop
mov
std
pop
shl
addb
mov
mov
mov
scas
pop
sbb
pop
dec
xor
fs
add
mov
mov
andl
xor
addr16
pop
mov
mov
xor
xor
aaa
icebp
and
mov
js
sub
mov
pop
repz
sub
push
jp
jbe
popl
cmp
mov
push
es
adc
scas
xor
mov
lahf
mov
push
push
and
icebp
daa
mov
adc
push
jmp
andl
lret
add
loopne
mov
xchg
pop
xchg
out
mov
add
repz
mov
imul
fmull
jb
out
fmuls
adc
call
add
inc
stos
subb
xchg
sbb
pop
push
ds
and
xor
jb
scas
cmpsb
or
fists
mov
adcb
je
cmp
ret
arpl
xor
adc
mov
pop
ficoms
xor
ljmp
and
mov
dec
movsl
nop
jbe
stos
adc
adc
sti
fidivl
std
fcoml
cmp
cld
fwait
cmp
jno
mov
jmp
sbb
xor
fcomps
jecxz
int3
pop
xor
arpl
adc
das
ret
into
idivl
add
xor
test
mov
test
cmp
test
clc
or
cmp
bound
loop
xlat
mov
adc
or
cli
mov
dec
inc
cmpsb
fimuls
pop
pop
pusha
cltd
dec
js
or
sbb
pop
dec
xchg
loope
sbb
scas
add
jo
repz
cmc
sub
xor
mov
daa
imul
test
sbb
sbb
pop
lods
push
mov
mov
inc
mov
outsb
mov
iret
cmp
pop
cli
dec
lock
pushf
test
rorb
call
repz
sbb
mov
push
cwtl
fimull
mov
andb
pop
movsb
xchg
xchg
dec
or
es
inc
lds
push
arpl
jne
xchg
and
mov
push
mov
xchg
decl
inc
mov
sub
or
xor
adc
in
mov
scas
and
pop
adc
addl
adc
jp
sub
pop
xor
pusha
in
or
jg
fidivs
test
pop
ljmp
incl
lods
lcall
jbe
push
lcall
dec
sarb
jno
sbb
and
jo
or
enter
mov
popa
xchg
inc
lea
xor
dec
fistl
and
pop
loop
insl
push
push
fdivrl
add
ljmp
sbb
and
ret
push
ret
mov
xor
out
add
insb
cld
inc
jle
fdiv
or
inc
xchg
jnp
ja
stos
enter
xchg
xchg
sbb
mov
push
bound
test
mov
dec
decb
cmpsb
mov
loop
lret
cs
lea
cmpsl
add
mov
repnz
fwait
repnz
sbb
mov
loope
lret
out
ret
pusha
jge
cmc
repnz
rclb
push
lods
int
lods
add
xchg
push
inc
arpl
out
cmpb
out
dec
movsb
mov
adc
add
ret
imul
xchg
pop
push
sub
inc
lock
and
cmp
fcomps
pop
xchg
jne
sti
xor
les
cli
cwtl
add
mov
scas
mov
scas
or
out
pop
ret
cli
push
or
sub
lods
ret
cmp
je
jle
arpl
jle
and
scas
push
scas
mov
add
fwait
aaa
sti
std
stc
jg
dec
mov
and
cwtl
cmovb
mov
cmp
push
cmc
xchg
montmul
cmpsb
hlt
push
cmc
or
arpl
xor
dec
xchg
bound
out
pushf
insb
loopne
adc
mulb
adc
xchg
subl
mov
repnz
mov
cmp
leave
and
jne
mov
sbb
jmp
shll
xor
push
aad
jmp
lahf
std
repnz
fwait
inc
mov
popa
push
nop
pop
xchg
add
cmp
or
daa
emms
addr16
loope
pushf
ja
in
push
std
cwtl
pop
and
adc
pop
inc
cmpsl
je
push
shlb
inc
add
pop
or
mov
add
push
mov
xchg
dec
les
iret
mov
je
sub
inc
jae
or
sbb
ret
rcl
clc
jo
ret
test
xchg
xchg
int3
cmpsl
inc
push
je
roll
das
addr16
cmp
sbb
push
mov
pop
arpl
cmp
pop
cmp
int
mov
sbb
mov
inc
adc
ret
add
push
cs
lods
ljmp
js
ret
pop
pop
incb
cmc
mov
pop
aas
notl
out
cmpb
cmp
daa
add
cltd
mov
xchg
jecxz
adc
inc
push
scas
ljmp
loope
lods
call
jns
dec
inc
and
push
mov
jp
xchg
cmpsl
js
mov
shlb
into
iret
sbb
clc
push
cld
cmp
cs
in
jmp
insl
ret
push
test
pop
xchg
out
shl
movsl
cmpsl
fstpt
push
aad
pop
lret
popa
mov
movsb
iret
out
xchg
sub
jle
add
pop
mov
daa
pushf
in
xchg
dec
push
pop
sbb
jnp
xchg
fiadds
pop
in
and
jg
andb
loopne
orl
jp
aad
jge
push
cli
mov
push
aas
jb
add
jecxz
mov
popf
and
pop
pop
aad
mov
cmp
adc
leave
fcmovb
mov
push
repnz
cld
movsl
inc
jb
adc
mov
fdivrs
ljmp
dec
lret
shlb
mov
stos
enter
in
imul
in
ret
in
dec
pop
fsubp
dec
sti
lea
dec
loopne
lret
and
mov
gs
push
cmp
dec
jmp
int3
std
xchg
mov
mov
pop
inc
loope
loope
jnp
imul
inc
daa
cltd
out
test
push
bound
insl
popf
jo
out
inc
dec
ljmp
daa
mov
sbb
das
icebp
in
inc
jl
dec
pop
mov
add
addr16
shr
call
insl
std
das
inc
std
pusha
and
xor
fisubrl
lret
adcb
add
or
loopne
in
repnz
push
cli
data16
lods
aam
jle
lea
push
mov
loopne
clc
repnz
mov
fwait
in
mov
dec
push
sarb
andl
ret
insb
cmpb
jp
inc
call
cwtl
idivb
lock
xchg
mov
sbb
icebp
and
sahf
push
outsb
leave
or
mov
and
mov
fnstenv
out
lcall
mov
les
inc
aas
and
mov
std
test
add
add
xchg
add
cmc
mov
icebp
arpl
xchg
shrb
sub
add
rcl
ror
xchg
add
dec
xchg
stos
or
scas
out
movsl
std
movsb
ret
cwtl
dec
mov
stos
jno
or
sub
in
cmp
test
lret
fsubs
xlat
movsb
inc
xor
cmp
push
jae
jne
les
aad
cwtl
insl
dec
cld
or
xor
inc
subl
or
popf
loop
stos
ret
leave
aam
enter
and
stos
mov
mov
arpl
adc
cld
push
fsubrl
sbb
js
std
and
cmp
push
cmp
lock
add
mov
lds
fcomps
xchg
pushf
mov
rorb
cltd
js
mov
adc
aad
scas
push
jae
add
inc
push
daa
or
inc
das
fbstp
imul
xchg
int3
pop
xor
jle
arpl
push
cmpsb
inc
push
mov
ja
and
data16
cld
test
test
gs
pop
and
xchg
mov
loopne
inc
loop
pop
dec
out
fs
scas
jecxz
sti
xchg
mov
dec
gs
xchg
sub
add
js
or
sbb
inc
inc
out
icebp
call
ja
lret
movsl
adc
xor
and
movsb
xchg
add
repz
sub
inc
sbb
mov
std
mov
enter
insl
gs
pop
flds
pop
or
mov
rol
jno
cltd
outsb
shrb
shll
pushf
dec
pusha
dec
mov
rclb
daa
cmp
jo
cmp
popa
mov
lea
xchg
push
adc
push
pop
fbstp
fs
mov
push
test
add
ret
mov
stos
repz
add
and
sbb
jl
inc
cld
xchg
push
fldl
mov
lea
lahf
xchg
out
out
scas
fdivrl
cwtl
lahf
sub
xchg
cmp
out
mov
and
js
outsb
xlat
inc
mov
jne
cli
mov
jg
mov
mov
mov
mov
push
pop
push
pop
cmp
int
not
js
ljmp
and
sbb
inc
scas
sub
int
xchg
popa
imul
pop
test
xchg
mov
inc
xor
mov
add
push
or
shll
int
dec
ja
sahf
stos
jge
fidivrl
popf
mov
mov
sub
xchg
mov
push
dec
sar
imul
xor
outsl
enter
fwait
xor
inc
in
cltd
xor
icebp
push
data16
sbb
jg
fwait
jb
pusha
jne
push
popf
mov
fimuls
insb
ss
jno
cld
mov
mov
pushf
push
add
int3
mov
ret
sub
cmp
in
jnp
pop
sub
and
test
mov
cmp
pop
jmp
push
xchg
mov
ret
bound
mov
dec
jae
clc
imul
test
or
pusha
push
cltd
shl
aaa
and
shlb
in
rcl
idiv
adc
shll
dec
ret
ss
mov
scas
cmp
and
call
mov
and
add
icebp
cmpsl
insb
or
imul
pop
xor
sub
cld
stos
cs
cwtl
mov
nop
sahf
jns
and
lcall
sti
mull
loop
packssdw
test
out
sub
jle
cld
adcl
xchg
push
paddw
std
adc
xor
xor
xchg
imul
push
scas
pushf
mov
es
jns
les
repnz
add
jle
jne
or
popa
adc
loope
xchg
dec
add
add
pop
out
xor
outsl
add
xchg
sub
bound
mov
sub
jl
mov
lds
js
mov
imul
pop
cmpsl
loop
xor
mov
or
icebp
inc
loopne
gs
aam
pushl
aam
mov
ss
cmpsb
lcall
mov
and
push
icebp
test
fsub
jno
pushf
inc
lea
or
orl
mov
jns
pop
adc
add
sbb
mov
mov
pop
push
negl
sub
or
bound
aam
aam
mov
jmp
add
pushf
repnz
sarb
mov
cmp
add
xlat
fldt
out
icebp
repz
pop
or
daa
shlb
dec
gs
or
xor
lahf
mov
in
push
mov
ret
stos
ja
jmp
jp
jo
push
xor
jl
sub
fs
mov
mov
mov
test
sub
pop
rcr
cmpsb
pushf
cmpsl
movsb
adc
imull
fsubp
add
fsubl
data16
bound
inc
mov
cmpsb
push
stos
adc
sub
xorl
dec
ret
lds
xorb
sti
insb
inc
ljmp
ljmp
pop
inc
shl
and
jle
ds
dec
push
ds
andb
cmp
push
xchg
xor
jge
or
sbbb
cmpsl
jmp
std
cld
cmc
sub
xchg
or
and
pushf
ds
mov
sbb
add
mov
add
movsl
mov
fnsave
mov
out
jbe
popa
lret
sub
and
dec
mov
cmp
outsl
das
jl
daa
jb
sbb
mov
gs
mov
cmp
xchg
cltd
inc
pop
xor
shlb
push
cmpsb
mov
fnsave
popa
cmp
adc
mov
mov
xlat
cmp
movsb
out
inc
mov
ficomps
loopne
pop
mov
inc
in
adc
outsb
sbb
add
out
mov
pop
scas
call
das
fistpl
lret
fsubrp
add
shl
push
and
add
pop
test
pop
jns
ja
jb
orb
call
call
mov
jne
das
mov
std
sbb
inc
sbb
insl
pop
mov
test
add
es
cmp
mov
lret
push
dec
sar
ret
add
pop
jnp
dec
sti
fldcw
xchg
mov
or
and
fstpl
cs
jae
mov
add
cmp
sub
pop
sub
aad
mov
xchg
jmp
or
jg
outsb
dec
loopne
je
sub
lret
ja
leave
push
test
in
xor
fnstcw
and
addr16
or
divl
mov
sbb
or
addr16
mov
ljmp
dec
roll
sub
push
repz
mov
xor
sub
xor
mov
pop
ds
sub
inc
mov
or
enter
or
ficoms
xor
mov
add
fwait
aas
lcall
adc
cwtl
sub
or
in
jle
mov
xchg
andl
loopne
push
lea
lods
adc
pop
dec
scas
in
jne
pop
xlat
pop
cmp
mov
cli
pushf
or
test
js
pop
je
rcr
inc
hlt
jo
push
out
push
iret
subb
pop
insl
mov
cltd
xchg
stos
xlat
mov
iret
test
lods
je
movsl
and
out
sbb
fsubs
aas
ja
mov
lods
cmpsb
add
jae
repz
pushf
insl
sub
mov
cmp
inc
cmp
scas
dec
test
in
pusha
mov
mov
pop
ret
and
imul
bound
adc
sbb
in
fidivrs
and
pop
subb
rcll
popf
outsb
add
pop
addl
ret
and
daa
mov
lret
daa
mov
pusha
decb
add
dec
cmc
mov
mov
lret
daa
nop
sub
addr16
mov
lcall
xor
adc
cmp
sbb
insl
ds
movsb
dec
rcrl
mov
orl
addb
loopne
jnp
mov
shlb
movsl
insl
lret
mov
fs
mov
scas
movsb
sbb
cmp
movsl
mov
xor
push
mov
xchg
xchg
xor
das
xchg
cmp
rorl
imul
mov
pmaxub
ret
push
sub
pop
out
mov
aam
pushf
pop
mov
das
xchg
movsl
test
fwait
dec
pop
mov
or
sbb
scas
jnp
mov
push
packsswb
sub
sub
shll
jp
adc
mov
jnp
clc
pop
jbe
movsl
inc
jbe
xchg
mov
and
push
add
xor
mov
mov
inc
jl
fstpl
and
lret
sub
inc
push
adc
push
popa
xor
out
lcall
push
jp
lret
inc
sbb
hlt
je
iret
xchg
mov
xchg
push
jmp
dec
dec
imul
leave
cmpsb
fwait
stos
dec
aam
ror
xchg
jno
mov
jae
mov
mov
js
out
cs
push
movsl
push
js
jo
cli
movsb
lds
lea
aad
jo
outsl
or
je
ss
outsb
jbe
mov
daa
out
les
nop
decb
mov
inc
dec
cmp
icebp
xlat
cs
xchg
pop
sbb
sbb
or
in
pushf
push
or
mov
push
and
add
xchg
ret
into
lahf
adc
lea
jnp
cmp
sub
leave
add
fs
inc
cltd
repz
fs
aas
lret
pop
lea
test
or
lret
aas
xchg
fisubl
pop
push
pop
mov
int
or
adc
js
test
jae
push
ss
mov
aam
lahf
negl
outsb
adc
push
mov
push
adc
add
jp
jb
xor
call
lahf
and
pop
push
fisttpll
insb
pop
fs
in
outsb
push
sbb
fidivs
mov
cmp
ds
negb
scas
mov
mov
stos
inc
mov
stc
loop
mov
xchg
fstp
push
loope
dec
add
loop
inc
sub
push
fsubrs
stos
mov
rcl
inc
add
jns
or
cmp
xor
shl
movsb
sub
jmp
push
mov
mov
sbb
or
stos
xchg
mov
cld
shlb
dec
jecxz,pn
mov
lcall
cmp
xor
sub
mov
xchg
xchg
inc
sti
popa
dec
xchg
cmc
dec
jl
or
icebp
inc
cmpsl
adc
push
js
mov
push
add
scas
xchg
inc
dec
cmp
lods
lret
and
xor
jle
pop
test
sti
sbb
cwtl
jae
lret
lahf
das
jp
aad
jecxz
shl
ljmp
mov
mov
pop
not
lcall
sti
cmpsb
sarb
testb
jl
mov
aas
dec
xor
sbb
insl
lcall
xor
add
mov
pop
xchg
jo
out
mov
ss
push
sub
bound
data16
jbe
push
mov
mov
xor
fwait
insb
dec
mul
mov
aad
and
or
xor
xor
daa
rcr
shrb
add
sub
sub
in
mov
xor
mov
fstpl
xchg
xchg
add
mov
cmpl
imulb
loopne
into
xor
fimull
jo
sbb
jecxz
or
mov
pop
divl
stc
inc
in
pop
push
dec
xchg
or
mov
ss
das
jge
sbb
ds
es
aaa
jmp
dec
rcr
fmul
jge
push
mov
les
push
js
mov
dec
mov
push
and
push
push
into
jecxz
sarb
dec
aas
xchg
dec
inc
insl
pop
adc
and
bnd
xchg
idivb
ljmp
mov
outsb
outsb
lods
xchg
in
popf
or
xchg
add
imul
test
inc
sbbl
lcall
add
sbb
inc
inc
fnstenv
mov
adc
jbe
xlat
cmp
std
notl
lahf
dec
pusha
fwait
xlat
popf
inc
in
jge
or
sbb
pop
pop
int
loop
dec
clc
cli
pop
lods
test
test
jbe
stos
bswap
sbb
cmc
fnsetpm(287
inc
jb
pop
in
loop
xor
loopne
sub
jmp
jno
xchg
mov
push
push
or
jne
popf
xchg
lea
movsl
into
cmp
cmp
jg
orb
sub
pop
sbb
cmpsb
mov
int3
or
int3
cmpsb
or
xchg
cmp
rclb
push
iret
add
mov
fstpl
push
or
out
push
cmp
inc
scas
dec
sti
out
mov
sahf
inc
repz
jp
mov
or
cmpb
dec
push
imul
out
push
in
and
ljmp
repnz
out
and
xabort
mov
notb
outsl
inc
inc
adcb
push
loop
iret
popl
sar
enter
or
imul
cmp
mov
lods
ljmp
lock
or
xchg
cmp
mov
mov
in
dec
out
push
cmp
jl
push
call
and
rolb
jb
xor
cmc
sub
xchg
xchg
pop
xchg
sub
cmp
pop
inc
dec
sub
loopne
or
insl
sahf
pop
ret
jnp
es
push
js
pop
cmp
xor
xchg
mov
jmp
mov
pop
lcall
pop
shrb
int
ret
jge
fmuls
test
push
inc
shlb
repz
inc
andb
insl
in
inc
icebp
ss
and
and
xor
xchg
jo
mov
and
push
xchg
and
insb
pop
adc
sub
push
lods
outsb
adc
outsb
add
mov
in
cwtl
pushf
lods
std
mov
test
inc
push
xor
or
into
or
sbb
add
lock
cltd
mov
sub
loopne
mov
pop
xchg
sbb
dec
subb
push
push
mov
sbb
pop
faddl
adc
inc
mov
fstl
mov
or
mov
out
cwtl
xchg
shl
cmpsb
out
cmp
and
lock
cs
shlb
sub
inc
icebp
or
dec
aas
cmpsb
mov
xchg
dec
mov
mov
mov
adc
sbb
rcl
imul
cmp
mov
jo
mov
mov
imulb
fs
xor
mov
hlt
xor
inc
fimull
mov
sbb
sbb
push
jae
push
push
std
cmp
dec
dec
fisubs
ret
xorb
xor
sar
push
jo
sbb
lret
jmp
xchg
and
mov
mov
addr16
mov
out
mov
je
jnp
sub
dec
inc
ljmp
movsb
mov
movsb
iret
cwtl
cmp
das
in
cld
sub
jnp
out
sbb
lods
xchg
outsb
xor
aad
or
inc
ljmp
in
or
push
sarl
outsl
aam
push
mov
sbb
daa
and
hlt
cltd
scas
mov
sub
jg
sub
pop
clc
pop
orb
mov
outsb
add
jge
sbb
pop
mov
adc
or
push
sti
mov
sub
adc
cmp
jp
pop
movsb
push
out
push
xchg
cld
sub
inc
imul
imul
pop
jno
push
jnp
daa
loope
pushf
mov
mov
inc
data16
push
lods
icebp
lods
mov
and
push
jns
adc
int3
xor
pop
add
xchg
jl
mov
and
lret
ljmp
sbb
pop
fwait
daa
repnz
jmp
push
xor
push
ret
out
orb
pop
out
stc
push
shlb
mov
out
negl
int3
sbb
sbb
cmp
xor
mov
jge
push
mov
daa
lahf
clc
and
lcall
ficompl
mov
cwtl
pusha
lcall
pop
inc
xchg
les
outsb
push
mov
into
shrl
mov
mov
push
fcomps
inc
pop
popa
dec
nop
mov
mov
pop
icebp
jno
arpl
xor
mov
shrl
addr16
cmp
xor
push
inc
ja
add
sbb
arpl
out
mov
test
iret
jns
popa
mov
jg
fwait
lahf
xor
dec
cmp
dec
cmp
mov
fiadds
sbb
cmpsl
lods
dec
nop
out
sbb
xor
fimuls
dec
pop
stos
jp
fwait
or
imul
decb
outsl
and
push
dec
pop
jecxz
and
sbb
inc
cmp
and
xchg
cmc
mov
ficoms
stc
push
int
dec
ret
loopne
cmp
data16
aam
lods
cmpsl
or
pop
in
sub
jmp
sub
jge
daa
cld
in
ret
pusha
or
out
xor
mov
fldcw
in
and
in
ret
fidivrs
mov
daa
repnz
clc
fucomp
fidivrs
enter
std
in
mov
add
dec
pop
or
dec
cmp
mov
sbb
les
rcrb
pop
jae
out
mov
cwtl
rcll
dec
add
and
jbe
ja
jmp
jae
ret
adc
xchg
adc
mov
iret
pop
jnp
int
cmp
inc
and
shrl
insb
sbb
fnstcw
jmp
insb
or
jg
stos
or
dec
xchg
push
rolb
push
movsl
clc
loopne
xchg
sbbb
cmpsl
pop
test
jge
push
add
mov
jge
sub
pop
cmp
movsb
cmp
push
imull
inc
or
mov
outsl
pop
sarl
cmp
ret
sub
mov
aam
jg
inc
sub
icebp
into
inc
sub
xchg
or
jp
dec
out
cltd
add
outsb
lock
mov
out
mov
cmpsb
je
mov
sbb
and
aad
outsb
cmp
dec
push
stos
popa
out
dec
bound
xor
mov
inc
addr16
mov
inc
jp
mov
out
cmp
dec
hlt
aas
add
ss
mov
xor
sub
orb
xor
insb
fistl
cmp
and
enter
fidivl
in
ds
scas
mov
insb
xor
mov
and
jo
cmp
popl
inc
adc
jl
xchg
xchg
push
push
push
or
jecxz
and
cmpsb
jno
inc
jns
fsubr
inc
cld
mov
aam
outsb
mov
jo
and
mov
dec
bound
out
fnstsw
cvtsd2ss
push
xor
unpcklps
leave
rol
mov
cmp
sub
addl
jne
push
jmp
sbb
cmc
cli
out
test
pop
shlb
xchg
dec
fists
add
clc
inc
testb
xor
sti
ja
ficomps
jle
and
xchg
jae
fnsave
cmp
out
or
mov
out
stos
dec
pop
mov
les
lret
pop
pop
push
push
fdiv
xor
js
mov
adc
cwtl
lret
add
dec
add
pop
sti
test
shlb
mov
xlat
push
mov
inc
and
sbb
or
xor
fwait
xchg
insl
sub
xchg
lret
stc
enter
push
movsl
xor
push
fildl
cmp
mov
movsl
rolb
add
pop
test
and
ret
test
es
and
int3
xchg
and
push
rcrl
pop
mov
in
jne
jns
mov
aad
rcrb
pop
mov
inc
sub
stc
dec
stos
stos
std
cmp
aad
jge
repz
sbb
dec
dec
sti
jl
loop
push
fadd
adc
shlb
lea
faddl
fmull
popa
adc
mov
imul
sub
sarl
pop
out
add
cmpsl
jg
enter
popf
jmp
aam
jp
xchg
mov
sbb
mov
jae
js
add
mov
fwait
inc
add
rclb
arpl
ja
movsb
dec
dec
pop
lret
mov
mov
cmpsl
add
mov
bound
cld
arpl
int
iret
jns
repz
mov
sbb
dec
or
pop
mov
inc
jno
js
mov
dec
test
aam
and
and
jecxz
mov
xor
push
inc
repnz
ds
cmp
sub
jge
mov
mov
repz
or
or
imul
or
jge
mov
jl
and
lret
int
rcrl
fdivrs
mov
pop
sbb
pop
dec
jae
xchg
loop
fnstenv
cmp
cmpl
xchg
xchg
addr16
or
mov
pop
xlat
lea
mov
dec
add
add
cltd
imul
fisubl
gs
shrl
lds
xor
mov
ret
jbe
stc
mov
xchg
jecxz
rol
ljmp
repnz
add
in
xchg
repz
jp
lahf
test
xor
in
dec
int3
jecxz
das
push
std
pop
movzbl
inc
in
mov
sub
inc
jb
adc
push
jae
adc
aaa
mov
push
cmpb
loop
cmp
insl
sub
xor
jmp
mull
push
testl
mov
aad
in
lea
cmc
sub
dec
jnp
inc
pushf
dec
test
adc
inc
xchg
adc
pushf
insl
stos
and
fsts
icebp
sahf
fcmovb
adc
push
pop
addr16
imul
mov
test
sub
cltd
xchg
aam
xor
inc
cwtl
xchg
sub
or
clc
mov
shl
xchg
fwait
test
pop
mov
and
incl
and
cmp
pop
std
mov
bound
xor
inc
mov
fcoms
cltd
cmpsl
in
cmp
lret
push
arpl
push
inc
movsl
xchg
sbb
pop
outsl
inc
or
xor
inc
loop
jecxz
jo
xor
mov
fisttpll
adc
jmp
in
lcall
testl
adc
sub
pop
adc
xor
cmp
mov
dec
outsb
lcall
sar
movsl
or
lcall
cltd
mov
inc
jle
scas
push
lds
xor
mov
clc
iret
add
inc
mov
lods
in
adc
test
push
dec
and
daa
hlt
xlat
dec
hlt
mov
xchg
push
test
sub
mov
sarb
or
dec
mov
outsb
jb
and
push
sub
xchg
cmp
stos
inc
outsl
sub
mov
inc
add
cmpsl
add
pop
shll
fimull
out
xor
jnp
sarl
or
add
ds
out
sub
push
cmp
or
sahf
inc
mov
mov
mov
shlb
mov
hlt
fcoms
sbbb
mov
inc
fimull
push
data16
sarb
pop
push
adc
clc
push
in
xchg
sbb
cli
mov
cwtl
add
fs
fstpt
das
addl
ds
mov
mov
xchg
hlt
jbe
enter
cmp
sbb
add
clc
clc
mulb
imul
push
xchg
jge
sarb
mov
and
test
jmp
sub
or
out
jmp
stos
inc
out
push
fs
into
jge
xor
lcall
loop
jo
insb
push
mov
fcoml
mov
pushf
push
sbb
mov
jp
or
out
or
jp
add
jb
pop
fucomip
xchg
xor
dec
mov
push
lret
lret
pop
fs
insl
out
inc
mov
add
adc
mov
adc
or
scas
and
outsl
xor
pop
xchg
and
or
lret
test
xchg
test
dec
adc
jnp
scas
mov
xchg
pushf
cli
mov
mov
add
outsb
daa
cbtw
push
in
jg
adc
in
and
ds
icebp
inc
in
xor
insl
xorb
lret
inc
iret
rcrb
dec
sub
aaa
mov
mov
pusha
jo
sub
and
ret
test
xchg
aas
cmpsb
mov
popf
mov
int
inc
or
dec
push
jge
stos
mov
inc
cli
iret
ficomps
fiadds
sar
dec
ficomps
mov
jno
and
mov
push
sub
xor
xlat
xor
mov
movl
fcmovnb
out
lock
pop
mov
cmc
sbb
mov
outsb
pop
das
das
aas
jnp
lock
dec
test
jns
xor
jl
decb
or
inc
pop
or
and
stos
sarb
cmp
in
mov
pop
rclb
sub
test
pop
add
pop
and
sub
mov
add
adc
pop
cmp
frstor
cli
cmp
xchg
or
icebp
pop
push
add
popa
ret
xor
jmp
inc
or
sbb
inc
enter
pop
push
pop
lds
fs
cmp
cmp
xor
mov
add
push
cmpsb
data16
ret
adc
cmp
jbe
pop
jmp
int3
fwait
mov
lods
scas
push
add
shl
into
sub
pop
out
adc
notl
into
jo
mov
jmp
fwait
test
cmp
push
jp
repz
sbb
jp
sbb
xchg
sub
stc
inc
fldt
or
jge
shll
or
xor
outsl
pop
mov
loopne
out
or
out
subb
sbb
adc
idivl
mov
mov
adc
xor
lcall
or
ret
push
int
scas
jle
adc
sbb
dec
lds
xchg
enter
push
lret
rcl
mov
fstpt
xchg
fcompl
mov
lcall
and
cmp
ror
jmp
mov
push
ja
pop
push
xlat
lock
nop
sbb
lock
pusha
mov
push
pop
adc
push
loope
mov
inc
and
sbb
aaa
inc
jge
divb
inc
in
mov
repz
lea
fs
rolb
push
or
add
loopne
mov
popa
aas
mov
xchg
push
cmp
push
out
jb
jnp
fisubl
ret
loop
rcll
add
pop
mov
adc
mov
jno
inc
popa
add
fnstsw
sub
clc
mov
mov
add
lods
mov
pop
daa
out
and
cmp
mov
stc
mov
xchg
shl
std
cmpsb
ror
fidivl
push
mov
cmpsl
gs
ss
dec
lods
pusha
cmp
rolb
push
out
popf
out
nop
jo
cmp
cmp
xor
push
adc
xchg
inc
ja
test
pop
popf
pop
cmp
rclb
mov
cmp
inc
or
mov
xor
leave
iret
out
mov
lret
pop
cmpsl
aam
andl
dec
and
pop
push
hlt
dec
or
push
cld
add
inc
outsb
mov
add
push
cwtl
cmpsl
push
dec
out
js
mov
stos
or
imul
repz
shll
xorl
mov
push
cmp
adc
push
add
addl
sar
sub
fwait
dec
lods
cs
dec
fstpt
adc
movsl
rcrl
inc
jbe
lret
jle
nop
js
loope
subb
enter
xor
add
pop
or
sbb
or
cmpl
movb
jbe
cltd
cmp
addl
xor
fsub
call
mov
data16
jmp
or
push
xor
aas
cmp
fcoms
in
jnp
dec
xlat
mov
shll
cmpsb
mov
mov
mov
aaa
fiaddl
push
pop
mov
imul
movsl
cmc
push
mov
daa
cmp
les
mov
dec
roll
and
sub
lods
mov
and
and
data16
jno
lds
data16
xchg
mov
movsl
data16
aam
sti
icebp
out
and
cmp
inc
mov
lret
test
into
mov
xor
scas
fcoml
add
push
testb
mov
lcall
out
xchg
pushf
push
sub
out
sub
inc
bound
mov
gs
mov
sbb
push
fmul
call
iret
fs
adcb
stos
and
ljmp
jbe
clc
test
cmpsl
outsl
out
stos
jle
scas
cmp
divl
lret
mov
cltd
jne
fdivrs
mov
xchg
dec
mov
push
adc
cwtl
inc
dec
imul
shlb
mov
out
push
and
push
out
movsb
fdivrl
scas
jb
push
mov
in
ret
sbb
xchg
in
pop
mov
cmp
xor
cmp
mov
das
add
cmc
sbb
or
push
stos
xor
int3
cli
xlat
jnp
ficompl
pop
xchg
mov
aam
ret
scas
fidivrl
or
sub
aaa
shrl
fbld
inc
je
sbb
mov
nop
dec
pushf
mov
mov
inc
push
subl
imul
jl
lods
mov
jae
push
pop
stc
jg
cld
dec
decl
xchg
push
inc
inc
sub
sub
add
adc
add
outsb
add
inc
jo
nop
xor
fmul
push
xchg
testl
or
gs
sub
rcrb
xlat
mov
enter
mov
inc
lret
cmp
fs
lds
xor
movsb
sbb
fwait
xor
mov
fwait
add
sbb
push
push
sbb
fiaddl
sbb
stos
inc
arpl
ljmp
mov
and
xor
int3
ret
int3
sub
hlt
adc
sub
fcompl
movl
out
pop
aaa
mov
xor
dec
adc
cmp
mov
and
call
loope
sbb
add
or
xchg
int3
xor
inc
jp
sub
fnsave
add
ds
lock
pop
fnstsw
fisubrs
stc
push
jnp
setge
ret
adc
xchg
sub
sbbl
int
mov
aaa
jg
test
enter
rcll
cli
repz
jle
adc
xor
inc
push
sub
push
cli
arpl
add
sbb
aaa
call
cmp
fsubp
mov
shl
sub
dec
xchg
insb
lea
cld
rcrb
push
aam
push
or
or
xor
mull
mov
and
xchg
jmpw
pop
ret
inc
cs
mov
pop
cs
popf
cmp
inc
leave
ds
sub
xlat
clc
je
addr16
jmp
fsubs
and
sbb
push
stos
mov
mov
imulb
and
pop
fidivrs
cmc
and
in
mov
jno
in
mov
fnstenv
repz
popf
cmpsl
mov
scas
scas
mov
mov
mov
sar
cmpsb
clc
fwait
sbb
adc
push
adc
mov
dec
dec
call
in
pop
jg
outsb
lret
outsb
jne
ljmp
mov
test
mov
xchg
dec
stos
test
stos
mov
call
mov
or
xchg
jp
jnp
sti
sti
or
xor
or
jbe
loop
loope
cmpsb
inc
push
mov
inc
not
out
data16
pusha
icebp
push
int
out
sbb
push
or
inc
sahf
das
les
cmp
imul
rcrb
lret
sbb
or
sbb
pop
add
popf
mov
cmpsl
fsubs
movsb
std
add
aaa
sti
pop
jp
dec
out
inc
add
mov
cltd
lcall
sub
idiv
push
fildll
outsb
fadds
mov
cmpsb
int
icebp
int
jmp
dec
xchg
loope
mov
lahf
gs
push
cmp
aam
xchg
xchg
subl
push
sbb
test
aad
push
xchg
or
cld
push
dec
mov
call
inc
jne
adc
pushf
mov
test
adcb
mov
jae
mov
cmpsl
cmpsb
movsb
or
mov
lods
inc
pop
adc
cmp
cs
mov
jmp
mov
ficomps
pop
inc
movsb
mov
jge
cmc
jb
cmp
xor
inc
inc
inc
mov
ja
push
pop
mov
or
mov
xor
xor
xchg
leave
dec
cmpsl
jne
push
test
push
adc
and
int
mov
movsl
enter
idivb
sub
jbe
ja
cmpb
sbb
popf
inc
int3
jae
cmp
mov
lock
mov
push
bound
test
cs
jmp
mov
out
cmp
jb
xor
pop
hlt
cmc
repz
pop
xchg
cmp
mov
dec
mov
pop
fmuls
jae,pt
jae
rorb
push
or
or
or
stc
aaa
push
jns
mov
pop
or
loope
popf
negb
bound
or
test
imul
or
add
loopne
dec
dec
cmp
cmp
add
mov
and
sub
xor
int
push
out
pusha
inc
lods
call
xchg
cmp
pop
xchg
imul
pop
loope
mov
add
ljmp
ficompl
inc
fstps
cwtl
jecxz
xchg
push
pop
sbb
xchg
cltd
pop
pop
or
add
bound
cmp
lods
xor
repnz
iret
mov
test
insl
std
xor
pusha
push
xor
shll
mov
add
call
subl
or
push
in
pop
and
jae
dec
inc
dec
jnp
movsb
loop
lcall
loopne
cmp
add
sub
or
imul
movsb
test
add
pop
daa
popa
movsl
xor
repz
pop
jne
mov
pop
xor
push
cmp
enter
icebp
es
gs
aam
or
mov
aas
lcall
sub
daa
push
inc
xchg
rcll
sub
push
mov
mov
clc
test
es
xchg
xor
in
push
loop
das
rcr
add
adc
jae
mov
or
push
in
sub
subb
inc
fdivl
jb
sbb
push
xchg
nop
jmp
mov
xchg
jle
and
addr16
jge
sbb
cmp
push
sarl
aaa
not
add
or
int3
mov
fbld
xor
jmp
sbb
pop
sti
idivb
leave
jmp
xorb
adc
std
inc
add
sub
int3
ror
push
sbb
xor
and
adc
and
repnz
and
in
xchg
mov
aas
mov
fisubs
leave
and
int
popf
js
andl
adc
sti
scas
fdivs
adcb
jno
adc
cmp
lea
xchg
mov
or
in
into
addb
test
xchg
xchg
int
lcall
int3
ljmp
out
pop
jno
cmp
fistl
xchg
fildll
cmp
push
scas
roll
cmp
ret
repnz
sarb
pusha
ficompl
pop
test
cltd
push
mov
add
push
mov
sbb
inc
ss
xchg
mov
cmc
xchg
hlt
sbb
mov
pushf
sub
push
xor
and
xchg
mov
insb
daa
pop
idiv
mov
cmp
sbb
dec
cld
sub
loop
inc
xor
sbb
lret
mov
or
dec
cmp
std
data16
mov
data16
push
inc
in
cmp
push
inc
cmpsl
add
dec
lret
jmp
ds
in
jo
inc
flds
loopne
test
mov
fisubrl
jge
mov
and
jne
hlt
inc
add
dec
and
loopne
mov
cwtl
sub
add
cwtl
xchg
call
popf
test
jg
cmpsb
ja
jne
sbbl
ret
out
push
stc
add
adc
pop
call
jmp
push
in
adc
add
int3
pop
sahf
cli
jg
xor
xor
sbb
daa
cld
mov
mov
push
dec
pop
push
or
roll
add
fidivs
loope
mov
inc
mov
testl
jl
mov
cmp
std
push
loopne
addl
jae
sbb
jae
pop
andl
mov
outsl
faddl
xchg
andb
adc
or
mov
test
lods
das
xchg
popa
and
xchg
sbb
scas
adc
data16
leave
or
insl
cmc
mov
adc
lods
ja
mov
outsl
lret
jb
leave
insl
icebp
or
pop
xchg
sub
ja
pop
xchg
fldenv
xchg
lret
stc
lods
icebp
xor
jnp
push
fwait
dec
push
lret
add
test
lods
fildl
test
sub
fwait
pop
out
push
and
adc
mov
pushl
and
sarl
cmc
push
mov
adc
mov
and
adc
fstpl
mov
mov
dec
lahf
or
sbb
imul
pushf
mov
sbb
jl
jne
pop
add
and
xlat
inc
sub
in
pop
in
lds
loopne
jbe
hlt
cmc
pusha
jo
mov
dec
jl
jns
fidivs
daa
pop
movsl
shl
aas
adc
add
out
jle
jmp
jbe
dec
adc
ficompl
jecxz
bound
cmp
sbb
xlat
push
jno
pusha
inc
repz
arpl
stos
scas
sbb
xor
jnp
pop
cld
and
cmp
std
loopne
pusha
sar
lret
sbb
and
es
pop
in
repnz
sbb
and
insb
iret
sub
adc
pop
repnz
fs
stos
fstpt
jg
push
push
jle
xchg
pop
push
xor
jmp
push
dec
dec
test
adc
cmc
leave
jbe
push
stos
push
lret
jmp
jae
mov
addr16
mov
adc
dec
mov
jne
imull
ret
dec
adc
lret
out
ss
mov
push
stc
aad
mov
inc
mov
push
pop
aam
movsl
icebp
lret
mov
pop
lock
mov
jbe
and
jbe
sarb
xlat
les
adc
int3
adc
and
cs
repnz
push
dec
in
mov
pop
pop
xor
negb
mov
xorl
jns
ret
mov
or
mov
and
mov
xor
lcall
xor
sbb
lahf
fdiv
push
mov
sar
jecxz
dec
xchg
mov
adc
jl
jge
push
push
in
pop
iret
cs
pop
lock
dec
inc
xchg
loope
xchg
cmpsb
dec
aam
cwtl
cltd
lods
pusha
cltd
add
xchg
adc
ret
sub
jne
jnp
inc
lock
xchg
pushf
mov
sub
nop
pop
stc
pushf
mov
pushl
push
insl
cmpsb
add
push
pop
lods
adc
push
mov
cltd
mov
sub
das
aam
push
daa
bswap
or
mov
adc
repz
ret
movl
test
sub
mov
cmp
les
cmp
xchg
sarl
cmp
or
or
sahf
xorl
fdivrs
js
dec
mov
add
icebp
insl
jecxz
fs
cmp
cltd
dec
push
push
out
loope
xor
iret
test
lock
les
mov
dec
xchg
or
cmp
fimull
jbe
mull
shrb
mov
scas
pop
ljmp
jmp
repnz
push
push
xor
jo
lret
jl
sbb
push
aam
inc
sarb
enter
in
inc
mov
sbb
xor
jbe
cs
loop
test
inc
je
ljmp
in
xchg
pop
cld
cwtl
xor
sar
fbld
lret
lahf
repnz
jg
adc
add
inc
mov
dec
jo
push
test
insl
push
into
or
bound
push
adc
bound
jb
stc
test
push
cmpsl
adc
mov
push
inc
in
clc
cmc
dec
scas
lds
push
sub
xor
or
sub
inc
jp
xchg
inc
cmp
fwait
leave
sbb
scas
push
mov
pmullw
sub
out
mov
icebp
pop
movb
adc
pop
dec
lds
iret
mov
jnp
lock
mov
xchg
call
lcall
lock
mov
mov
mov
das
decb
ret
sbb
mov
lds
xchg
sub
addr16
push
ds
stos
popl
js
sarb
pop
inc
adc
jne
insl
stos
sbb
dec
inc
dec
sub
int3
scas
test
xchg
stc
test
mov
cwtl
pop
adc
imul
cltd
loope
iret
ret
clc
xor
push
hlt
or
aad
imul
pop
xchg
rcll
jbe
xchg
mov
fldl
mov
or
imul
and
inc
mulb
xchg
daa
cmp
cmpsl
gs
add
sub
jae
dec
sub
or
pop
add
in
cmp
js
je
jge
mov
mov
mov
fwait
mov
jns
movsl
repnz
mov
jge
mov
out
shr
cmc
call
clc
xor
add
subb
or
and
push
scas
xchg
jge
push
sbb
cmp
loopne
inc
insl
push
mov
or
pop
and
push
insl
or
rclb
or
add
jns
mov
enter
loopne
xchg
sbb
pop
insb
mov
xchg
cmpb
stos
flds
xor
fisubl
es
adc
dec
popa
repnz
cmp
lock
push
lock
and
xchg
lock
dec
lret
adcl
lock
adc
bound
jle
mov
cltd
ja
decl
xchg
inc
imul
mov
in
repz
mov
mov
push
addl
shl
sub
sbb
inc
mov
mov
jno
nop
and
negl
test
out
mov
pushf
shlb
aas
mov
loope
adc
in
mov
sbb
mov
push
add
mov
or
cmpl
test
or
test
movsb
add
insl
jmp
xchg
mov
lods
mov
mov
movsb
add
inc
cld
ja
xchg
lods
out
fnstsw
aas
mov
inc
shrb
test
mov
xchg
enter
mov
push
adc
fsts
xor
pop
shr
xor
mov
nop
insl
mov
cld
sub
push
sahf
les
dec
push
push
jo
dec
lret
rcrl
or
cmp
mov
ffree
loop
inc
orb
and
cmp
adc
gs
hlt
cwtl
sub
dec
enter
or
or
cmp
icebp
outsb
xchg
aaa
jge
sub
incb
lea
pop
xchg
adc
fmul
mov
addr16
jmp
rolb
xlat
imul
xlat
mov
sarb
xor
push
dec
test
and
loopne
in
das
pop
pop
arpl
out
dec
lret
or
mov
call
mov
xchg
mov
adc
jl
repnz
xchg
je
fisttps
test
daa
call
push
dec
rcr
fsubl
jae
ja
adc
sub
push
fcoml
sbb
pop
insl
push
fs
lds
add
loope
mov
call
fsubrl
loopne
aas
jbe
lods
mov
mov
les
scas
mov
ret
int
les
xchg
pop
int
dec
cmp
or
cwtl
icebp
movsb
add
xchg
jmp
mov
sub
pop
xchg
adc
lods
push
in
xor
pop
pusha
int3
int
mov
andb
mov
or
loopne
cmp
das
xchg
add
lcall
mov
fsub
and
sub
jmp
dec
lods
dec
lret
jmp
adc
push
add
jl
or
popf
sarb
and
xchg
pop
int3
sub
sbb
dec
shlb
inc
movsb
popa
inc
fcmovb
inc
mov
xor
data16
fildll
push
fsubrs
imulb
jae
nop
iret
int
xrelease
jnp
stos
pop
cmp
loope
mov
pop
pop
test
cli
xor
sahf
fists
out
xlat
xchg
aad
xor
adc
lock
into
add
mov
push
mov
pop
push
xchg
fbld
test
rolb
adc
xor
pop
jb
add
mov
leave
enter
xor
push
popf
aas
cld
jne
xchg
cltd
adc
mov
cmpb
push
popa
loopne
sub
lock
mov
sub
lock
mov
push
cvtps2pi
sbb
std
out
cwtl
fmuls
aam
xor
inc
or
fbld
es
in
xchg
adc
ljmp
nop
dec
mov
inc
sub
xacquire
push
loopne
mov
jb
flds
mov
test
das
jb
lcall
mov
fs
jae
cwtl
popf
int3
xchg
insb
pop
ljmp
icebp
lahf
out
push
xchg
fistpll
addr16
xchg
jns
call
jae
mov
xchg
call
fs
xchg
xor
out
lret
add
mov
dec
pop
loopne
pop
jb
out
loopne
mov
mov
push
data16
out
jbe
mov
jmp
repz
lock
test
xlat
xor
add
inc
or
stos
fmuls
inc
jnp
or
ja
jbe
cld
out
rol
out
popf
fiadds
and
cmp
pop
mov
add
into
adc
add
inc
lock
add
sbb
out
inc
inc
add
dec
rcll
sbb
fwait
stos
mov
xchg
push
sub
mov
push
or
xchg
push
mov
cmp
int
pop
ror
adcl
adc
xor
and
mov
mov
hlt
mov
sub
insb
inc
add
push
into
push
push
mulb
and
sub
sti
cwtl
in
pop
inc
jmp
push
push
jnp
test
jae
mov
cmp
mov
mov
je
aaa
pop
repnz
sub
ret
popa
popf
lds
fs
stc
test
adc
push
pop
ljmp
xchg
fbstp
mov
push
sahf
mov
shl
sbb
push
and
sbb
in
insb
dec
adc
pop
scas
popf
lods
mov
mov
xor
mov
imul
xchg
iret
dec
mov
rorl
xchg
sbb
mov
aas
mov
pop
dec
xchg
outsl
xor
lret
dec
jno
in
add
and
sub
sbb
add
push
pop
sub
push
subb
imull
jmp
sbb
lcall
test
shrl
and
out
sub
outsl
xor
aad
and
dec
pop
push
sbb
out
je
decl
adc
or
adc
out
dec
push
es
bound
jne
aas
push
shll
jge
dec
int3
scas
cmp
in
mov
insb
push
and
adc
pop
test
jo
push
pop
or
mov
push
repnz
mov
inc
mov
in
add
xchg
call
pop
cmc
ror
ret
ret
sti
fsubrs
xchg
xor
loop
lods
xor
sub
cli
call
mov
aas
cld
push
xor
lods
or
xor
mov
repz
or
loopne
dec
shll
pop
sbb
leave
jne
popa
aas
mov
jmp
mov
imul
jne
and
cmp
popa
mov
jg
sarb
inc
jmp
pop
push
outsb
adc
stc
dec
jecxz
jo
add
and
sub
adc
dec
scas
jge
xchg
cltd
or
lea
daa
mov
mov
enter
roll
dec
or
imulb
popf
mov
xchg
lods
inc
addb
push
mov
jecxz
jne
shlb
aad
jnp
push
add
cmp
mov
movl
add
lahf
cli
xor
mov
jge
mov
jnp
and
mov
js
sbb
jne
ret
mov
push
cs
inc
add
aad
in
jnp
jo
or
pop
mov
cld
xchg
or
data16
inc
xor
and
pop
adc
or
xchg
xlat
adc
mov
insb
pop
loope
aam
mov
inc
leave
adc
arpl
insl
and
arpl
lock
mov
add
outsl
movd
xchg
add
and
mov
aad
sarb
lahf
mov
scas
cmp
sarb
mov
leave
pop
push
jmp
mov
mov
xchg
mov
xchg
jp
dec
adc
addr16
mov
inc
inc
jne
sbb
fwait
fwait
out
jmp
xor
int
movsb
mov
xchg
xchg
or
rcrb
or
arpl
fwait
dec
cs
mul
loop
lcall
loopne
inc
xlat
mov
inc
adc
xor
xor
sbbl
int
sub
in
xor
nop
enter
fmuls
aam
or
xchg
jmp
subb
nop
addr16
test
add
sbb
sub
cld
mov
imul
lods
adc
fwait
jo
rcrl
mov
xor
int
nop
test
cmp
xor
mov
xlat
fildl
lds
pushf
shll
xchg
lret
ret
rorl
or
rorl
inc
fsub
push
cmc
add
add
fidivrs
add
subl
lods
mulw
and
lcall
push
mov
sbb
sahf
int
fldz
stos
aad
add
movsl
repnz
cld
aas
clc
add
jle
mov
push
cmpsl
cwtl
sub
mov
cmc
mov
push
push
and
fisttpl
roll
dec
inc
andb
mov
ror
outsb
xor
or
cltd
jbe
in
movsb
inc
lods
sub
out
test
sbb
aas
mov
or
es
inc
pop
loop
lcall
add
push
pusha
xor
pop
movsb
repz
cmpb
xor
jmp
jmp
icebp
xor
inc
jmp
jo
jge
addb
aad
stos
out
jo
jbe
mov
into
add
loopne
arpl
mov
repz
js
xchg
sub
and
repz
out
mov
cmpsb
popa
push
fwait
aam
xchg
mov
testb
loop
mov
mov
or
test
hlt
push
mov
loope
icebp
lock
xchg
rorl
pop
fisubrs
mov
sbb
add
or
push
and
sbb
sbb
out
clc
sbb
sub
loopne
sti
xor
xor
jnp
xchg
jge
les
or
dec
mov
out
jb
frstpm(287
and
inc
cmp
xor
addb
jp
mov
cmp
xchg
sbb
mov
sbb
call
mov
mov
aas
lods
shlb
mov
cmpsb
cmp
and
scas
loop
xchg
jnp
outsl
test
jnp
and
push
popf
push
mov
mov
lods
out
jnp
movsl
push
dec
jle
xchg
into
js
inc
or
mov
gs
icebp
adc
sub
test
mov
sub
mov
rcl
daa
add
pop
inc
fiadds
nop
mov
repz
sbb
jl
or
into
ret
dec
gs
jp
in
mov
enter
lods
mov
jge
mov
inc
fmuls
jmp
lahf
sub
fsubrs
mov
int
addb
fwait
jno
std
popf
add
icebp
movsb
adc
or
ja
subl
movsl
ljmp
into
sbb
lods
sub
mov
roll
imul
pop
sub
insl
and
sbb
xchg
and
rcll
enter
ret
jb
jmpw
popf
jnp
dec
mov
outsl
cmp
cwtl
hlt
dec
push
dec
pop
test
push
popa
jg
scas
and
movsb
mov
xchg
cmp
test
mov
inc
add
das
xchg
divl
mov
and
mov
sub
sub
mov
bound
xchg
dec
icebp
aaa
mov
xor
jnp
sub
test
loopne
sbb
hlt
repz
cltd
lods
lahf
cmpl
bound
lds
pop
ljmp
add
add
cmp
js
xchg
test
ret
lea
cltd
xchg
or
fnstcw
cli
pop
xlat
push
push
ficoml
ljmp
out
push
sbb
mov
sub
cwtl
loope
sub
add
add
or
and
nop
xor
jle
repnz
cmpsl
dec
outsb
imul
sahf
pusha
rorl
xchg
and
inc
fsubrl
test
decb
adc
lods
ds
fisubrs
loope
cmc
outsb
ldmxcsr
push
clc
insb
dec
dec
inc
mov
sbb
mov
mov
adc
dec
aad
stos
sub
sbb
ds
xor
mov
push
sub
lret
jecxz
sahf
lods
dec
and
xor
int
mov
les
scas
call
add
jbe
lods
adc
pop
pop
inc
popf
in
or
or
mov
pop
cmp
mov
lods
and
divl
aas
movsl
nop
inc
inc
xchg
cmp
mov
inc
push
xor
inc
mov
dec
jne
push
sub
jg
mov
or
adc
pop
pop
mov
push
and
ss
jne
dec
popf
sahf
popa
jae
mov
xchg
das
ds
lahf
popf
aaa
fsub
xchg
mov
inc
icebp
pop
testl
mul
test
and
dec
push
pop
xorl
cmp
fmul
imul
clc
jae
fstpt
ret
sbb
mov
jl
xor
cwtl
xchg
jne
pushf
push
popf
sub
stos
mov
and
int
adc
bound
or
daa
mov
and
ja
push
in
jmp
iret
lods
and
pop
test
mov
sbb
xchg
cmp
cmp
sarb
jp
adc
add
pop
xchg
sbb
mov
dec
mov
test
inc
les
std
jae
scas
ds
push
hlt
jns
lahf
je
pop
cmp
dec
or
cltd
jnp
sahf
jbe
mov
push
sahf
popa
xchg
dec
xchg
jl
dec
movsb
cmp
cld
mov
pop
sbb
push
inc
pop
jns
ja
pop
sub
in
and
lcall
xor
mov
jb
cmpb
lods
dec
out
push
sbb
add
jae
and
int
out
push
sti
movl
sub
or
xor
push
pop
fstl
and
cmovge
jge
xchg
cs
scas
or
stc
mov
je
or
inc
sub
xchg
adc
xchg
js
mov
jnp
sahf
int
inc
aad
sbb
cmp
or
adc
pop
push
inc
inc
scas
sub
jo
jge
aaa
and
cmpsl
loopne
popf
clc
mov
xchg
inc
bnd
or
push
inc
int3
out
fdivl
stos
loope
ret
das
fcomps
mov
jg
cmc
adc
jo
int3
jno
cmp
sbb
mov
adc
mov
int3
lods
sub
out
cltd
outsb
subl
add
aad
or
or
rclb
pop
mov
stc
xchg
mov
mov
or
or
adc
push
sbb
pushf
stos
jns
add
div
sbb
push
scas
das
out
sbb
movsl
jmp
sub
pop
sbb
or
xlat
jbe
insb
fmull
mov
cli
xor
xor
das
dec
movsl
fisubrs
int
push
cmp
aad
into
jbe
clc
rorb
stc
sahf
aam
jbe
mov
repz
pop
push
fiadds
mov
adc
mov
sbb
xor
out
scas
pop
sub
mov
outsb
mov
adc
es
adc
push
jbe
repz
imul
repnz
rcrb
xor
out
inc
xchg
cmp
sbb
loop
lret
jmp
mov
jmp
inc
pop
pop
or
out
mov
and
cmp
scas
push
push
aam
dec
scas
cmpsl
test
outsl
and
lock
cli
aad
jmp
xlat
lcall
scas
xchg
adc
mov
xor
jmp
lds
adc
out
xor
xor
jmp
dec
fcompl
nop
adc
call
int
jne
add
out
or
push
mov
inc
push
mov
cmc
in
mov
in
mov
enter
jae
xchg
pusha
nopl
es
sub
sub
mov
mov
dec
xor
scas
aam
dec
test
inc
jg
loopne
push
in
xchg
clc
sbb
mov
lds
js
aad
fildl
mov
pop
mov
popa
decb
int3
aas
jae
mov
cli
xlat
pop
loope
out
pop
lods
iret
test
xlat
out
or
lret
jle
sti
insb
lahf
mov
xchg
repz
rclb
je
lods
test
sbb
ret
dec
rolb
stos
inc
push
inc
ja
sarl
add
rorb
out
or
xchg
stos
sbb
imul
inc
sub
add
add
cli
mov
int3
xor
adc
dec
xchg
add
stos
subl
sub
mov
lods
test
pop
mov
insb
movsb
dec
push
push
sbb
or
dec
add
inc
loope
ss
movsl
jne
jne
mov
inc
lock
popa
jnp
inc
call
sar
inc
out
jl
mov
dec
pop
and
mov
mov
push
fsubrs
in
imul
stc
lahf
pop
ds
ret
cmp
ret
stc
and
mov
mov
jecxz
hlt
cmpb
inc
outsl
mov
push
test
cs
outsb
punpckhwd
mov
cs
mov
pop
ret
sub
in
leave
dec
inc
jnp
mov
incl
stc
shr
jmp
addb
dec
xchg
out
imul
inc
jb
xchg
fsub
lcall
out
push
jb
sbb
pop
shll
pop
rorb
aad
xchg
pop
les
mov
int3
fwait
mov
push
xchg
movsl
out
mov
sbb
jne,pn
cmp
movsl
bound
and
sarl
mov
jmp
or
rol
pop
outsb
add
push
xor
das
mov
testb
sub
neg
stos
shll
xchg
sbb
xchg
aad
jae
insb
add
fists
js
or
rolb
stos
rcr
cltd
pushf
les
mov
add
lea
js
loop
inc
insb
pop
adc
lret
test
outsb
push
jo
sahf
pop
and
into
inc
lret
int3
xchg
jmp
or
int
push
ret
sbb
je
outsb
fwait
push
aaa
sarb
sub
scas
push
sahf
adc
sbb
add
sbb
or
std
int3
push
sahf
shl
add
pop
popa
mov
dec
and
out
and
call
insl
aas
pop
out
mov
scas
pop
mov
scas
adc
mov
xorl
rclb
mov
lods
out
out
pop
out
xchg
es
xchg
scas
imul
leave
scas
iret
orl
jge
pop
jnp
in
sbbl
scas
test
push
mov
jp
mov
fdiv
mov
push
jmp
and
mov
inc
ljmp
adc
push
sbb
mov
jae
dec
mov
and
repz
sub
insb
mov
stos
jae
mov
in
cmpsl
lods
xchg
data16
insl
adc
adc
fcmovnu
mov
outsl
loopne
adc
std
xchg
mov
fs
and
das
fsubl
dec
jmp
sub
cli
xor
jge
call
pop
push
pop
xchg
mov
insl
add
outsl
lret
or
into
int3
or
in
add
add
push
ja
lds
subl
in
xchg
xor
loope
and
or
xor
arpl
push
lods
jno
and
into
imul
push
dec
sbb
mov
sbb
mov
and
daa
xor
push
mov
test
jecxz
je
sub
add
gs
pop
loop
outsl
nop
imul
fiaddl
cli
gs
adc
mov
xchg
loopne
lods
cli
cmp
jle
roll
or
push
int3
rcrb
imul
js
adc
adc
test
testb
lds
push
jnp
cmp
mov
out
add
push
push
pop
sub
cmpb
rorl
lahf
popf
test
ja
push
cltd
jmp
fmuls
lret
or
mov
gs
outsl
mov
int3
cmc
adc
je
dec
nop
pop
cmp
out
dec
or
and
fbstp
mov
insb
in
push
cmp
std
lods
outsl
iret
daa
sub
stos
push
leave
inc
imul
mov
xchg
lahf
popf
shlb
xlat
xchg
jge
mov
out
data16
mov
jecxz
pop
mov
adc
xlat
and
lcall
add
int
cmp
push
mov
sub
out
adc
xor
aas
mov
sbb
push
icebp
adc
push
push
call
pop
call
inc
add
and
gs
and
mov
add
jne
sub
xorl
and
mov
lods
dec
or
mov
adc
stos
sahf
dec
imul
mov
mov
xchg
adcl
pop
ja
or
aam
inc
mov
arpl
mov
sbb
mov
int3
xchg
out
inc
pop
lret
xlat
outsl
mov
movsl
loope
sbb
nop
std
xor
incl
leave
lahf
adc
call
adc
fldcw
stos
addl
mov
mov
xor
sub
fistl
push
xchg
mov
dec
lea
lahf
in
jge
in
mov
inc
mov
loope
subl
xor
inc
xor
ds
sbb
arpl
out
pop
icebp
inc
adc
fcompl
adc
inc
and
xchg
ljmp
ss
pushf
sbb
xor
ss
xchg
inc
xchg
shrd
out
loopne
jge
fstl
cmp
mov
mov
sub
or
jae
das
fildl
js
push
lret
into
mov
sub
fldcw
jbe
fwait
inc
outsl
ret
je
imul
or
ss
push
loope
pusha
inc
stos
das
mov
test
mov
push
jbe
and
mov
idivl
push
movsbl
xchg
flds
aaa
aam
inc
insb
les
imul
xlat
not
scas
push
mov
repnz
jae
mov
in
adc
jmp
mull
mov
sahf
and
push
inc
pop
xlat
movsb
mov
movsbl
pusha
sub
in
iret
in
test
aas
sbb
sahf
ret
test
mov
dec
and
inc
cmp
sub
das
test
imul
pop
xchg
or
orl
dec
xchg
inc
cli
add
enter
pushf
dec
fiaddl
sub
pop
imul
xor
mov
adc
mov
cmp
sub
les
mov
xor
jns
lahf
xor
and
xchg
lret
mov
popf
push
sbb
pop
insb
adcl
xor
and
fld
repnz
lret
cmp
jge
sbb
into
dec
push
jecxz
shrb
push
in
repz
imul
and
jnp
pop
jecxz
sbb
xor
fs
sub
out
mov
lret
divl
cld
sub
stc
enter
daa
mov
pop
imul
xchg
dec
adc
xor
push
push
mov
js
imul
dec
push
xor
call
inc
ljmp
negl
cmp
pusha
dec
and
xchg
incb
xor
and
jno
dec
pusha
add
push
ficoms
dec
inc
insb
push
movsl
hlt
fdiv
xchg
js
xchg
out
and
ja
dec
int3
in
xor
xchg
ret
rorl
int
push
and
xchg
jmp
out
and
xor
sar
notb
inc
sub
fnstcw
jnp
nop
ja
pusha
dec
mov
or
sub
pushf
mov
fstpt
dec
mov
test
jae
pop
pop
in
adc
loopne
lods
loop
jbe
icebp
bound
lods
js
mov
sbb
mov
adc
and
inc
in
mov
pop
mov
aaa
mov
push
xor
cltd
xchg
push
push
nop
or
in
lahf
xchg
mov
into
xor
out
mov
mov
jbe
js
lahf
xor
pop
ljmp
mov
mov
or
ret
aas
cli
sbb
xchg
adc
mov
adc
rolb
repz
dec
jl
sub
jb
add
xchg
popa
mov
jns
lea
out
or
push
adc
jns
sub
xor
negb
adc
clc
sub
xor
xchg
adcl
ss
icebp
sub
dec
xlat
ficomps
int3
lods
xor
xchg
rcll
iret
xchg
mov
push
cmp
mov
lret
sbb
pop
mov
push
sbb
xor
xor
insl
fimuls
inc
and
inc
in
fildl
daa
addl
ret
fbstp
jnp
push
pop
lcall
js
add
test
push
call
nop
in
or
pop
cmpsb
mov
push
add
sbb
pop
dec
inc
stc
or
mov
aam
test
clc
inc
mov
push
sbb
mov
sub
fcmovb
test
mov
mov
es
push
lret
lods
testb
xchg
mov
clc
xor
jo
cli
insl
lods
mov
mov
mov
mov
mov
loope
popf
push
inc
sbb
mov
inc
cltd
cmpsb
jbe
jne
mov
xchg
sbb
lods
int3
dec
mov
jecxz
test
out
xchg
aad
dec
in
push
dec
add
dec
lods
fwait
xchg
pop
or
dec
clc
and
add
rcrl
les
inc
test
xchg
and
movsl
loop
fists
mov
je
outsb
jmp
inc
cmp
or
adc
in
mov
movsb
mov
inc
pop
shl
rcrl
insb
cmp
jg
jle
jbe
adc
push
loope
push
outsl
mov
xchg
rcll
lret
ret
popa
repnz
lahf
push
fimull
adc
xor
sbb
sbb
lock
pop
cltd
imul
inc
mov
mov
cmpsl
out
adc
sahf
adc
mov
aad
inc
xchg
gs
or
pop
es
sbb
mov
rolb
outsl
cmp
xchg
in
mov
cli
mov
sub
and
adc
add
xchg
push
cwtl
mov
fwait
popa
jo
popf
adcl
subb
pop
cltd
aas
mov
jne
mov
dec
lods
mov
negb
sub
imul
dec
in
xlat
pop
in
rcl
ss
jmp
pop
xor
orl
cmpsl
add
mov
xor
out
sub
push
xor
scas
pop
inc
mov
jle
idivl
aas
fdivs
movsb
xchg
mov
lea
lds
ljmp
jno
jae
cmp
loopne
sbb
adc
jbe
data16
shrb
test
shll
xchg
xchg
jl
mov
in
mov
cwtl
jae
out
adc
popa
inc
lock
test
stc
xlat
xchg
jns
sti
xor
cmp
dec
xchg
popa
sbb
dec
sub
mov
mov
rcl
mov
sahf
lock
scas
gs
sti
testb
out
leave
push
xlat
push
cwtl
mov
xchg
mov
or
popa
cwtl
rolb
fstl
aaa
jnp
mov
pop
es
jbe
gs
popa
xchg
cwtl
sub
daa
cmp
int
bound
loope
aad
int
ret
sbb
dec
fisubl
fstpt
fisubrs
gs
and
cmpsb
and
scas
mov
jle
xorb
std
incl
ret
xchg
mov
inc
sub
stos
mov
fisttps
mov
scas
rcll
xchg
lahf
pop
sub
fcompl
cltd
cwtl
xor
sub
outsb
ljmp
push
add
mov
iret
arpl
jmp
outsb
lods
aas
lds
xchg
out
sub
pop
cmp
repz
movsl
add
fldt
out
jl
ljmp
imul
loopne
int3
repnz
bswap
sbb
cmpsl
vdivpd
cmpsb
pop
xchg
stc
mov
inc
inc
add
popa
das
fnsave
int
sub
jge
ret
cmp
dec
xchg
mov
outsb
test
dec
ja
test
faddl
mov
inc
lods
mov
std
cmpsb
mov
shr
add
mov
fnstcw
les
pop
lods
push
inc
cmp
lcall
xchg
push
push
je
mov
dec
push
icebp
inc
loopne
jg
out
push
pop
pop
add
dec
cmp
jle
ljmp
jmp
pop
loope
xchg
cmp
bound
aad
adc
mov
xchg
mov
add
xchg
dec
sti
cwtl
das
out
cli
fucomp
cmp
ja
xor
jbe
cmp
xor
jb
xlat
sub
cmc
clc
orl
jae
jg
test
test
faddl
clc
fmulp
test
mov
cs
jecxz
repnz
mov
loop
clc
fcmovb
out
or
cmpl
mov
daa
mov
incb
dec
add
loopne
inc
mov
out
jp
adc
xlat
stos
das
mov
jp
arpl
cmp
mov
adc
fmull
jl
mov
jp
std
sub
icebp
push
mov
sub
xor
mov
push
push
rcll
xchg
subb
movsl
loop
pushf
lods
sahf
sti
mov
in
xchg
sbb
or
xor
push
jmp
lock
movsl
popf
imul
sub
mov
or
mov
sub
repnz
aad
lds
inc
pop
in
inc
jg
adc
js
movsb
or
push
hlt
jb
mov
pop
ss
xor
fs
iret
sbb
sub
cltd
or
scas
ficoml
adc
pand
incl
add
pusha
adc
es
sub
fs
ljmp
pop
adc
inc
lea
dec
out
xchg
notb
cmp
mov
popa
je
ja,pt
or
lds
es
loope
pop
clc
scas
pop
leave
mov
pop
out
lret
rcl
lcall
inc
xor
mov
sbb
repz
xor
out
mov
inc
das
add
test
test
push
sbb
enter
mov
lea
aaa
push
mov
int3
fiaddl
repnz
mov
xchg
adc
adc
iret
scas
cltd
dec
cmp
hlt
jl
mov
jns
data16
aaa
pop
addr16
test
std
add
cmp
adc
mov
loope
adc
out
es
mov
sbb
daa
das
repz
jg
stos
dec
mov
test
inc
pop
xchg
adc
test
sub
cmp
test
sbb
enter
cmc
lea
inc
lcall
pop
out
mov
or
push
jb
or
imul
xchg
negb
cld
mov
stc
orb
repz
sbb
jbe
ret
push
test
addr16
push
sub
dec
ja
or
mov
push
add
xor
dec
sub
adc
mov
out
push
mov
dec
cli
jnp
mov
mov
adc
xor
das
cmp
xchg
inc
subl
dec
mov
cvttps2pi
xchg
lods
andl
ds
jb
int
fwait
push
into
repz
and
outsb
adcl
aad
mov
fwait
mull
adc
fmuls
sub
sbb
push
adc
jne
xor
test
in
lret
xor
dec
push
sbb
xchg
sbb
sti
add
loope
adc
mov
push
or
lret
cmp
dec
pop
and
enter
jbe
jb
aas
adc
stc
pop
and
fcomip
mov
sbb
mov
pop
push
arpl
mov
xlat
xchg
lods
int
push
movl
and
adc
ja
push
dec
in
mov
scas
push
and
leave
mov
dec
lahf
shll
mov
ficomps
clc
maxps
int
shrl
pop
and
repnz
imul
xchg
mov
cmp
mov
xchg
mov
ja
data16
pop
push
cld
mov
xor
mov
pop
aas
sub
sbb
fadds
cli
lods
movsl
dec
adc
test
push
ret
mov
cltd
in
loope
inc
inc
mov
cmp
cltd
out
adc
sti
arpl
ds
outsb
push
cmpb
cmp
add
setg
xor
cltd
adc
fisttpll
add
out
cli
je
xchg
arpl
rcrb
fs
or
sub
push
xor
test
jecxz
cmp
sti
adc
stos
pusha
arpl
push
mov
out
xlat
push
test
jmp
shll
mov
inc
test
mov
or
add
pop
test
mov
push
test
loopne
or
and
enter
fstpl
push
and
ret
roll
sbb
rolb
loope
push
push
lahf
dec
stos
orb
fcomps
test
notl
xchg
and
lret
sbb
dec
popf
sub
mov
sti
xchg
push
add
leave
cld
cmp
sbb
in
add
dec
lds
nop
bound
scas
insl
mov
loop
xchg
mov
ja,pn
arpl
fcmovu
fsubl
repnz
clc
bound
sbb
daa
cmp
icebp
jbe
scas
jae
mov
test
bound
push
mov
push
imul
jb
jmp
cld
pop
xorb
fs
mov
dec
stos
aas
xchg
pop
mov
jo
mov
push
ss
pusha
mov
es
pop
aaa
les
dec
mov
pop
adc
aad
sbb
out
pop
pop
inc
dec
int
adc
rcll
xchg
test
loopne
sub
jmp
imul
movsb
subb
pop
fistpl
mov
out
and
mov
mov
mov
jbe
pusha
xchg
lea
sbb
or
outsl
cmp
nop
push
pop
push
dec
mov
or
pop
mov
pop
pushf
sbb
xor
fdivrs
bound
popl
aaa
xor
mov
mov
sbb
aam
mov
mov
fadds
xchg
out
and
and
sub
sbb
adc
test
jo
popa
and
pop
fcom
into
ficomps
jb
jne
pop
xor
mov
lret
out
push
sbb
aad
inc
int3
lret
call
cmpsb
mov
cmpsl
inc
lret
add
or
popf
dec
mov
sbb
jns
fwait
aaa
push
add
inc
add
mov
inc
or
push
sub
or
lods
scas
sarb
dec
inc
hlt
dec
mov
and
push
out
mov
div
pop
inc
adc
jecxz
jne
pop
cmp
lods
mov
jg
lds
sbb
adc
aad
mov
and
add
jae
fnsave
jmp
push
lret
cmp
into
mov
icebp
add
push
repz
lods
inc
out
mov
lea
sbb
adc
sub
fstp
or
push
aam
js
cmpsb
sti
aas
movb
shl
std
mov
or
push
test
xchg
popa
xor
push
mov
iret
mov
movsl
pusha
and
xor
aad
or
js
mov
int
mov
jp
sbb
push
or
xchg
and
xchg
in
mov
sti
rep
or
mov
mov
pushf
aaa
mov
mov
mov
cmc
outsl
iret
daa
call
jae
push
push
movsl
cmc
rorb
mov
out
inc
dec
dec
aam
inc
fstl
int
sti
das
enter
and
bound
cs
pop
xchg
shr
push
jp
jecxz
jno
les
mov
inc
or
fisubrl
fbld
aaa
scas
mov
push
inc
or
into
sub
fbstp
inc
jo
ljmp
or
hlt
pusha
and
fisubl
and
pop
cmp
sbb
mov
inc
adc
call
mov
repz
idiv
sbb
cmpb
inc
ret
out
negb
je
sbb
leave
loope
int
adc
into
cmp
add
pop
cmc
fnstcw
je
pop
popf
xlat
or
pop
xchg
cmp
xlat
outsl
daa
adc
lret
test
jecxz
pusha
cmp
stos
cs
insb
outsl
jae
dec
js
pop
fidivrs
xchg
mov
inc
in
jg
inc
sysexit
mov
fnstsw
sbb
test
mov
mov
test
cmp
jnp
push
adc
cmp
or
imul
adc
into
int3
loopne
pop
add
mov
add
or
outsl
pop
cli
imul
int3
div
mov
cwtl
jmp
xor
mov
add
clc
xor
pop
sti
xchg
js
mov
or
sub
loope
mov
test
repz
daa
jle
lret
lea
fists
mov
popa
pusha
in
xchg
or
in
arpl
mov
test
push
popa
arpl
nop
inc
xor
mov
ficoml
jnp
orb
push
sub
pop
div
int
jns
jge
test
jp
mov
movsb
cmp
cmp
cs
int3
loopne
xor
xor
in
movsl
lods
sub
lods
jns
repz
dec
inc
repnz
cmp
cwtl
push
rclb
push
and
aam
pop
or
lods
fwait
outsb
fldl
fs
mov
adc
inc
cwtl
fldt
sti
movsb
in
jge
fstp
addr16
xor
dec
xor
out
push
and
or
xchg
sub
dec
xor
mov
inc
pop
sahf
push
jmp
adc
dec
enter
testb
add
test
clc
imul
movsl
pop
mov
mov
jns
into
aad
enter
shrb
int
dec
fwait
pushf
rcl
dec
lret
stos
sub
scas
adc
mov
mov
das
daa
or
pop
adc
mov
mov
pop
shl
cltd
rcr
lods
jnp
jo
fstl
jno
test
pop
popf
cwtl
or
pop
mov
inc
mov
jecxz
add
sbb
jno
popf
dec
sub
push
sub
sub
lods
mov
inc
test
inc
push
pop
mov
mov
fbstp
sub
aaa
lret
leave
or
sbb
adc
xchg
jns
push
mov
stos
xchg
das
mov
aam
jecxz
and
sarl
mov
xchg
lahf
daa
cmc
sbb
fisubs
sub
mov
and
push
dec
in
inc
lds
sub
roll
jne
mov
in
or
cmp
jge
push
daa
ret
mov
repz
hlt
into
imul
and
fnstcw
int
mov
mov
cmpsb
adc
insl
ss
insb
push
mov
rcll
daa
push
adc
mov
sub
scas
cmp
cwtl
je
dec
stos
test
dec
sarb
jb
jb
icebp
add
mov
and
dec
push
bound
mov
sub
jge
aaa
dec
inc
adc
cld
add
push
push
jecxz
dec
es
sub
pop
sub
push
test
push
in
popa
int3
add
jb
mov
subb
dec
inc
xchg
inc
nop
pop
jns
je
inc
and
xor
cmc
pushf
pop
std
mov
mov
or
imul
mov
or
ljmp
push
pop
neg
dec
xchg
mov
rol
add
loopne
cmpsb
xchg
insl
cli
insb
pushf
cmpsb
inc
and
inc
xchg
or
xor
repz
mov
insb
aam
fwait
sub
inc
into
jbe
in
mov
enter
imul
xchg
or
inc
in
ficompl
popa
lret
push
mov
pop
push
xchg
int
sbb
es
pop
inc
dec
lahf
aaa
mov
xor
jp
clc
imul
inc
mov
xor
cmpsl
movsb
inc
cmp
addb
enter
mov
sub
mov
test
push
push
cli
mov
popf
jnp
add
test
aaa
test
movsl
adc
mov
nop
aad
popa
jmp
pop
xchg
jle
dec
mov
stos
cltd
pop
push
fcomi
xor
hlt
imul
loopne
push
and
push
addb
pop
jl
aaa
adc
adc
mov
hlt
imul
mov
loope
rcrl
clc
js
jbe
mov
mov
sahf
cmpb
dec
jns
out
push
mov
xchg
pop
jmp
push
sar
leave
lahf
mov
daa
pushl
lock
inc
push
vmovd
add
push
xchg
xor
cmp
sub
imul
add
lea
ret
test
ja
xchg
jge
fiadds
xorb
int
jbe
cmpsb
popf
aad
mov
cli
push
ficoms
push
lahf
mov
sti
mov
inc
cmc
pop
jl
ja
leave
in
xlat
and
mov
add
xor
sti
cmp
dec
lret
test
add
xchg
mov
pop
dec
push
jb
cmp
and
repnz
push
inc
sbb
leave
mov
bound
cmp
cmp
sahf
enter
aas
mov
scas
push
in
stos
add
outsl
pop
add
decl
jp
pop
pop
in
or
mov
pop
pop
fsubl
js
ret
inc
cmp
xchg
mov
jle
xchg
iret
out
mov
dec
test
pop
push
cmp
scas
sbb
faddl
xchg
std
lods
imul
jg
jno
adc
cmp
xor
push
js
dec
flds
das
adc
sti
dec
sbb
filds
int3
mov
mov
xorb
push
dec
loope
dec
lds
mov
push
and
xchg
lds
hlt
aaa
mov
loopne
in
cld
rorb
in
test
add
cmpsb
sub
insb
insl
adc
sub
rcl
outsb
mov
push
cmc
pop
bound
cmp
pop
repnz
outsb
orb
sub
jbe
in
dec
icebp
mov
es
dec
inc
cli
cmpsb
or
in
loop
xor
and
sub
inc
out
mov
xor
daa
or
or
sub
lret
out
mov
cmpsl
ja
rorb
xchg
mov
movsb
fiaddl
pop
inc
mov
pop
adc
cmc
decl
call
cmpsl
fs
jmp
push
add
lock
mov
addb
test
lret
sbb
mov
jae
cmp
jecxz
mov
push
ret
shll
cmpsl
adc
fwait
cltd
aam
mov
shrb
push
push
lahf
push
add
bound
push
cmc
lret
mov
out
add
add
test
cmp
arpl
stos
mov
mov
testl
sahf
pop
mov
jnp
xchg
into
insl
dec
lods
icebp
ljmp
sub
sub
icebp
xor
fcoml
push
xchg
aad
sub
sti
pop
addl
xchg
divb
cld
push
pop
mov
sbb
ficompl
call
push
inc
inc
jne
push
in
jo
cmp
jae
movsl
push
jg
fisubs
cmp
cmp
stc
xor
cmp
fwait
push
inc
jecxz
mov
pop
mov
pop
lahf
aaa
dec
add
fwait
sub
pop
ret
adc
cmp
daa
sub
dec
push
add
pop
lea
outsb
mov
cmp
loopne
add
fnstcw
sub
shlb
fimuls
int
shlb
je
xchg
lea
jp
jno
cli
pop
add
jle
sarl
rorl
cmp
fsubrl
mov
or
sub
ret
shr
xchg
pop
xor
jp
rcrb
loop
mov
adc
jnp
sub
mov
dec
adc
andnps
stos
lods
mov
imul
pop
inc
push
mov
mov
xchg
xor
aas
adc
in
and
adc
xchg
popf
ss
dec
popf
jb
aam
xor
push
xchg
adc
sbb
mov
push
pushf
imull
jmp
ja
inc
and
test
sub
repz
fstpl
sti
dec
mov
lret
dec
lea
loop
fwait
dec
popf
and
pushw
hlt
jg
outsb
dec
push
sub
fadds
push
add
xchg
cmp
jns
mov
ja
cmpsl
push
lcall
ss
mov
lret
ljmp
push
out
cmp
mov
push
xor
add
lods
xor
in
xchg
xor
popw
addr16
lret
les
xchg
pop
int
or
js
push
jo
lea
inc
add
lcall
pop
add
imul
inc
mov
je
jno
int3
adc
addl
addl
sub
inc
aaa
in
insl
xor
push
jg
xor
jne
push
jbe
xchg
push
cmp
fst
test
repnz
push
ljmp
pop
sbb
jle
in
mov
mov
mov
shr
cmpsl
pop
pop
popf
loope
in
adc
dec
rorb
packssdw
ret
xor
orl
and
cmp
leave
mov
cmp
clc
neg
hlt
je
dec
jl
int3
cmpsl
push
and
std
pop
scas
jb
icebp
add
jbe
mov
mov
int3
and
xchg
fsubs
sbb
out
insl
mov
int3
lret
add
inc
mov
or
repnz
out
loopne
loop
mov
cmp
shrl
mov
repz
sbb
or
rorb
sbbl
aas
sub
jmp
fsubr
arpl
mov
and
in
add
push
ja
xchg
jle
mov
jne
jl
pusha
dec
lret
jmp
icebp
mov
sti
stc
in
pop
sahf
inc
ror
jecxz
out
insl
sub
inc
sub
adc
dec
sbb
subl
insb
mov
jb
outsl
adc
xchg
mov
push
das
test
les
into
lea
adcb
out
aam
inc
sub
xor
xchg
pop
mov
ljmp
cmpl
jns
xchg
shl
or
popf
nop
out
jle
incb
jnp
sub
mov
pop
pop
fsubrl
call
insl
call
mov
mov
ret
jle
sti
xlat
mov
aam
lock
fimuls
xchg
mov
cmp
jle
pop
test
jno
sbb
sub
or
gs
mov
cmpsb
das
mov
loope
inc
xor
dec
push
jle
sbb
test
insb
adc
je
mov
movsl
mov
ljmp
in
add
test
ror
inc
loope
push
clc
inc
iret
and
push
mov
sbb
sub
fnstenv
add
adc
sub
push
xchg
lods
jns
insb
test
jno
xor
insb
sub
cli
test
mov
or
aad
sbb
xchg
ret
stc
mov
cmp
xchg
and
cmp
or
iret
lret
pushf
lods
push
add
out
mov
xchg
sahf
mov
inc
cmp
or
xor
std
or
insb
jno
pusha
movsl
and
pop
xorl
out
addr16
sub
sbb
int3
sub
pop
mov
sub
ja
neg
sub
push
xchg
xchg
out
add
ds
fbstp
aad
push
imul
icebp
sbb
adc
iret
cmpsb
in
aam
jecxz
mov
sahf
es
mov
and
pop
pusha
jno
inc
aam
xchg
inc
or
ret
test
pop
nop
je
insl
fisubs
push
out
mov
dec
xchg
neg
stos
jge
test
lock
jmp
mov
and
xor
sbb
xor
in
push
arpl
adc
push
pop
hlt
pushf
fcompl
aas
enter
mov
rcl
push
or
adc
mov
dec
and
fsubs
lods
inc
push
aad
rclb
jb
inc
jno
cmp
popl
daa
mov
push
pop
fcom
add
les
mov
iret
aam
push
adc
nop
pop
out
jnp
sub
sbb
push
movsb
shlb
scas
repnz
xchg
cmp
inc
push
mov
in
or
sub
cmp
hlt
sub
xor
lock
lods
adc
mov
xlat
dec
fdivs
fimuls
outsb
lret
cmp
cmpsb
fstps
pop
mov
sub
mov
popa
lcall
out
cli
mov
imul
and
cli
mov
sub
mov
push
adc
les
in
xor
aam
sub
icebp
gs
push
mov
pop
sub
xlat
int3
cmp
sbb
jge
mov
adc
insb
es
add
pop
pop
out
mov
cmp
ljmp
out
shll
jl
xchg
adc
or
outsb
pop
mov
pop
imul
xchg
outsb
pop
fdivrp
jecxz
subl
ds
jns
push
inc
mov
pop
fisubrl
adc
dec
adc
and
cmp
data16
je
sub
add
xor
push
sub
gs
pop
fucomp
xor
loop
mov
ss
aam
in
sbb
ljmp
out
sti
mov
aam
mov
mov
out
in
and
pop
cld
mov
stc
repz
stc
ja
aam
daa
scas
push
jo
bound
jp
sub
lcall
jle,pn
or
mov
cld
push
ret
add
outsl
xchg
mov
out
adc
arpl
icebp
push
pushf
repz
add
push
or
insl
fcomps
add
cmp
adc
shrb
push
out
mov
test
cmpb
xchg
add
lock
iret
adc
xchg
cmpsb
add
mov
and
data16
outsb
and
mov
stos
mov
mov
sbb
mov
and
in
dec
push
sub
push
nop
lcall
out
cmp
xchg
or
ret
push
jno
mov
sub
ret
imul
in
mov
cmp
in
dec
cmc
inc
sti
pop
call
movsl
push
popa
insb
out
pushf
pop
out
gs
pop
jecxz
pop
xchg
xchg
leave
jg
pop
or
mov
xchg
xor
sub
lock
cmp
addr16
pop
add
lods
cwtl
cmp
or
mov
push
loope
inc
lods
mov
add
xor
je
int
jno
ss
xchg
sbb
or
ds
inc
jmp
lock
jecxz
test
pop
into
les
dec
xor
mov
cmp
sbb
and
mov
jne
adc
pop
out
sbb
es
stos
dec
mov
and
fcmovb
arpl
dec
vmulss
orl
or
add
out
ljmp
lcall
mov
daa
and
lret
mov
xchg
fcoml
add
add
pmulhuw
pop
xchg
in
lcall
mov
leave
add
aad
ret
and
push
hlt
nop
or
cmpsb
mov
add
arpl
fsubs
ljmp
adc
test
out
adc
adc
out
mov
rcrb
dec
sbb
mov
int3
inc
jp
in
fisubs
xchg
adc
and
in
inc
cmpsl
push
loope
call
iret
cli
movsb
std
push
lock
and
fcmovb
push
sub
sub
movsl
icebp
adc
cltd
in
xchg
push
loope
cld
pop
dec
add
adc
iret
cmp
int
orl
adc
mov
jg
jmp
or
add
mov
sub
push
mov
insb
fistps
negl
cmpb
mov
add
sub
mov
and
dec
sbbb
sub
ja
jnp
and
pop
mov
xor
sbb
pop
lods
mov
mov
pop
sbbb
repz
jp
in
in
sbb
in
out
cltd
sub
mov
xchg
add
dec
mov
add
test
stc
lret
sbb
or
jne
mov
fs
pop
push
mov
out
cmpsl
lods
jl
sbb
add
or
scas
add
test
nop
out
and
test
mov
jne
aas
repz
jo
fcomi
push
outsl
sub
movsl
push
push
and
push
xor
jmp
pop
insl
add
sahf
outsb
push
push
and
addr16
mov
sub
aaa
dec
sub
push
push
fisubrl
movsb
mov
jge
sub
mov
fs
cmp
scas
movsl
les
cmp
notl
scas
or
pop
ja
mov
sti
enter
and
clc
pop
dec
push
dec
fwait
mov
lods
fwait
icebp
or
mov
jno
xor
cmc
push
roll
xchg
jg
subb
dec
cmp
and
negb
paddsw
jbe
and
xlat
jns
lock
fcmove
es
or
or
jg
mov
mov
daa
sbb
mov
cmp
push
add
leave
nop
hlt
shrb
aas
cmp
fcomps
and
mov
xchg
mov
inc
push
adc
jl
xchg
cmc
aaa
icebp
adc
jl
xchg
xlat
ljmp
sarb
cwtl
ljmp
push
xchg
inc
sbb
loope
in
xchg
hlt
inc
adcb
fisttpl
and
xchg
movsl
sbb
push
pop
aaa
and
repz
inc
clc
insl
mov
xorb
cmpl
imul
xor
mov
outsb
push
push
subb
fwait
inc
sbb
jno
stos
sub
xor
stc
or
xchg
jecxz
imul
dec
popf
jnp
andl
stos
std
test
loope
dec
push
add
out
xlat
jecxz
mov
inc
jl
adc
xchg
mov
stc
popf
setns
mov
fcmovu
addb
int
test
ficoml
repz
jne
icebp
jmp
xor
insl
lret
fisttpll
xchg
out
adc
lcall
jmp
cld
adc
ret
cmpsl
je
push
xchg
dec
xlat
cmc
dec
sarb
push
ret
insb
adc
sbb
sub
out
in
or
ljmp
mov
lret
mov
stos
sti
jnp
cmp
aas
loope
or
sahf
adc
or
cmp
push
lods
aad
mov
hlt
leave
jns
push
push
lods
jnp
sub
fisubs
or
shrb
sbb
sub
mov
mov
ss
testb
xchg
sub
ror
ret
cs
call
xlat
ja
stos
inc
mov
adc
pop
cli
dec
rclb
shlb
jmp
jne
adc
or
push
dec
scas
lcall
push
sub
inc
sub
in
mov
push
add
add
add
outsb
cwtl
xor
or
leave
aad
mov
or
sub
pop
ljmp
into
out
inc
sarl
xor
mov
and
cld
xor
movsl
cmpsb
testl
cmp
jp
xor
mov
mov
mov
cltd
jns
cmp
popf
ficomps
inc
inc
cmp
int3
gs
fs
in
sub
cmp
loop
xor
out
scas
xchg
pusha
gs
ret
mov
adc
push
add
int3
das
cmpsl
negb
sbb
jae
xchg
push
jge
stc
jns
scas
sub
xor
in
in
leave
push
jnp
dec
add
inc
push
rol
cmc
jl
lock
repz
shlb
pusha
xchg
out
fsubrl
hlt
pop
mov
adc
ds
xor
push
fcompl
push
ret
nop
dec
and
popa
add
inc
push
cmp
adc
jae,pt
pop
pop
ficomps
in
inc
test
mov
aam
into
add
mov
and
shl
adc
daa
test
adc
xchg
lcall
stos
popf
je
mov
and
lahf
fdivs
mov
cwtl
xor
lock
add
icebp
pop
jg
fsub
in
mov
daa
int
mov
fdivrl
mov
rclb
xchg
cmpsl
decb
daa
dec
loope
popa
lcall
mov
push
mov
adc
ds
out
stos
inc
dec
add
bound
int3
aas
adc
pop
lods
pushf
mov
pop
jmp
lock
add
daa
pushf
ret
sahf
mov
push
cmp
mov
mov
aaa
loopne
mov
test
mov
fsts
lock
dec
in
pushf
dec
iret
cltd
inc
in
fistps
xchg
cmpsb
sbb
fidivrl
orb
mov
sarb
dec
and
jecxz
pop
sbb
add
sti
test
mov
test
ljmp
sbb
addr16
xchg
cmp
dec
mov
jae
cmpsl
fdivr
add
push
mov
stos
lea
ljmp
dec
dec
inc
outsb
pop
mov
out
dec
inc
rclb
sbb
mov
jo
lods
mov
data16
sub
insl
insl
js
shrb
negb
mov
jnp
adc
pop
push
cmp
pop
mov
in
test
addr16
icebp
mov
push
arpl
xchg
pop
jl
fisttps
and
cmp
mov
cmp
addl
adc
jnp
stc
mov
inc
xchg
les
ret
test
das
add
sub
popf
insl
fistpl
outsb
jmp
hlt
aas
stos
lcall
movl
push
aad
inc
nop
pop
and
add
mov
inc
fistpll
fbstp
mov
cmpsw
pop
xor
and
jnp
add
je
outsb
ljmp
add
mov
call
notb
or
push
cld
cld
shll
add
xchg
lods
call
roll
pop
jo
sbb
inc
push
or
fmull
mov
in
data16
push
pop
cmp
push
hlt
mull
dec
in
inc
je
rcrb
pop
cmpsl
in
loopne
int3
inc
ret
shll
in
cld
out
js
mov
inc
cmp
jbe
jp
hlt
test
sub
mov
inc
inc
adc
sub
movsb
out
movsb
mov
mov
nop
aas
ja
mov
sbb
adc
mov
add
mov
pop
and
pusha
call
and
xlat
scas
xchg
loopne
adc
enter
jle
inc
mov
test
dec
adc
ljmp
lret
mov
test
adc
pop
xor
pop
fldcw
xchg
pop
push
pop
xchg
sub
jecxz
dec
mov
cltd
mov
mov
mov
cmc
sbb
subb
xor
xchg
or
iret
and
push
mov
mov
daa
inc
mov
loopne
lea
js
movsl
in
mov
pusha
int
xor
cmpsb
out
loop
and
inc
add
cmc
dec
js
lcall
dec
sbb
sub
xchg
leave
cmp
lock
imul
popa
popf
add
cltd
lods
xchg
push
push
shl
repz
pop
xchg
lds
cmp
mov
jmp
mov
push
sub
adc
shlb
sbbl
scas
lock
add
adc
jb,pt
pop
lcall
adc
mov
xchg
fistps
inc
dec
es
cmp
andl
arpl
repz
mov
test
jecxz
inc
mov
ficompl
ja
sbb
out
sar
fdivrl
jecxz
add
mov
or
mov
sub
pusha
aaa
rol
or
sub
enter
cs
mov
sahf
std
mov
jecxz
insb
and
in
or
gs
mov
inc
out
sbb
imul
push
test
out
jns
push
pop
int
shrl
add
lahf
jno
test
pop
repz
cmp
nop
mov
sbbl
repnz
mov
mov
cmp
into
mov
int3
or
sbb
jg
xor
lcall
test
add
cmc
push
mov
pop
cmpsl
mov
inc
xchg
mov
cmp
sar
cmp
push
loope
in
fwait
jle
push
lret
shl
push
xchg
je
andl
test
push
dec
ret
ret
loope
fldcw
and
lret
mov
mov
icebp
out
adc
out
dec
in
in
bound
mov
mov
push
hlt
sbb
js
notl
mov
hlt
or
sbb
and
addr16
xor
loope
jle
mov
xchg
nop
sub
adc
add
add
lods
or
sub
outsl
stc
cmpsl
les
jecxz
add
xchg
sar
dec
iret
inc
jl
and
lret
lcall
inc
mov
fidivs
and
push
bound
dec
clc
pop
push
fldcw
pushf
pop
or
mov
push
orl
rcll
xchg
jns
xor
enter
fcmovu
iret
sub
inc
sbb
and
stos
or
jp
pop
rolb
lahf
lock
pop
ss
shlb
std
adc
mulps
scas
nop
dec
and
addr16
xor
ja
icebp
ljmp
das
movsb
sbb
aad
mov
jbe
xchg
add
loop
mov
insb
add
dec
cmp
and
dec
sub
gs
subb
pop
mov
testl
lock
or
xorb
xchg
xor
or
sbb
insb
ja
inc
cmc
cmp
into
inc
inc
cmpsb
push
icebp
std
aad
xchg
jmp
out
daa
jmp
insb
xor
jecxz
pop
imul
arpl
mov
js
popf
sub
sbb
push
fnstenv
ljmp
pop
sbb
iret
les
int
xchg
cmc
push
imul
insl
xor
and
mov
fisttps
lods
and
xchg
lods
mov
stos
jns
cmp
add
sbb
std
aaa
mov
jle
mov
xor
jo
aaa
inc
adcl
push
mov
lock
adc
cmpsb
cmc
loopne
rclb
sub
dec
sarb
movsl
out
mov
stos
sub
xor
repz
lahf
jmp
int3
sarb
mov
mov
or
in
inc
mov
pusha
flds
bound
xlat
jnp
gs
pop
cmp
push
mov
pop
int3
or
pop
shr
add
dec
push
xchg
es
sub
add
sbb
xchg
jp
ss
jnp
iret
stos
rorb
push
scas
xchg
push
push
popa
or
jae
psubw
jo
or
sub
mov
push
lahf
cli
test
stos
cmc
aam
xor
sahf
and
mov
xor
sarl
mov
movsl
xor
mov
lret
out
in
and
in
add
pop
sahf
call
pop
test
imul
inc
aad
cmp
jne
mov
sbb
adc
dec
push
cld
xor
divb
inc
sbb
inc
push
jp
cmpsb
mov
stos
jns
ret
es
sub
leave
pop
or
sub
mov
call
jl
rorl
inc
xchg
mov
fildl
jmp
hlt
adc
jns
mov
enter
aam
lods
mov
pop
sub
les
lahf
icebp
into
dec
pop
or
fistps
mov
out
test
cli
nop
idivl
pushf
push
sbb
jl
lret
iret
jb
or
and
loop
ss
rcrl
jne
scas
insb
pop
cmp
xor
gs
mov
sub
repnz
pop
lret
sahf
loopne
adc
into
push
inc
cmp
int3
push
mov
loope
ret
jmp
mov
add
repnz
fsubs
push
push
fsubs
add
into
movsb
mov
push
out
sahf
pushf
mov
push
xor
jl
jp
cmp
scas
push
mov
shlb
outsb
hlt
mov
or
aas
cmp
or
cmp
mov
and
push
push
sbb
mov
xorl
call
mov
lret
jbe
mov
out
jae
outsb
shll
aaa
jbe
xchg
hlt
bound
or
xor
sub
subb
inc
xlat
sub
icebp
cli
psubsb
fs
mov
mov
pop
inc
pop
shl
pop
arpl
push
mov
nop
cmp
push
enter
mov
push
jns
adc
xor
xor
leave
out
cmpsb
push
data16
add
mov
sub
in
jmp
rep
mov
clc
xor
and
cmp
or
and
into
xchg
jb
fxch
mov
inc
cmpsb
movsl
xor
stc
out
ror
xlat
sub
aad
ljmp
imul
test
loopne
pop
in
adc
mov
je
add
into
pop
nop
movsl
rorb
sti
jne
sub
pop
push
or
adc
push
popf
xchg
pop
ret
dec
and
popf
mov
push
movsb
outsb
pop
or
stos
arpl
push
in
movsl
dec
int3
inc
cltd
jb
cmovo
mov
nop
mov
push
into
mov
mov
cmp
and
mov
push
xor
and
sub
sbb
jl
push
subl
dec
add
sbb
divb
ja
lods
and
xor
and
adcb
mov
mov
push
bound
sbb
inc
loopne
test
outsl
lret
enter
ficomps
adc
or
mov
mov
std
enter
ret
fsts
test
xchg
add
jns
mov
adc
negb
push
mov
clc
pushl
lret
fidivrs
aaa
mov
mov
and
mov
mov
out
xchg
sub
pop
xor
icebp
cmp
stc
out
inc
out
dec
xchg
dec
jecxz
in
ret
or
rcrl
imul
imul
cmp
stos
pop
shll
push
mov
out
inc
fld
int3
dec
les
dec
ret
fsubs
enter
pushf
fcomp
or
inc
es
push
enter
imul
shlb
mov
les
ds
in
nop
dec
xor
pop
cld
sbb
dec
xor
jo
rcrl
enter
ljmp
movsb
jo
cmc
jl
or
loop
out
movsl
adc
push
out
pop
xchg
xor
jno
mov
sub
cwtl
fs
repnz
push
adc
cmp
jge
pop
cmp
jb
mov
push
jecxz
outsl
mov
add
iret
rcll
sahf
in
arpl
cmp
adc
lret
pop
lods
add
pop
pusha
clc
push
cmc
mov
xchg
pusha
push
sbb
xor
faddp
daa
xchg
pop
pop
lret
or
adc
popa
cmpsb
inc
imul
sahf
out
aad
pushf
push
dec
pop
jge
mov
cmpsl
sub
rcrl
out
mov
add
and
add
rorb
stos
mov
insl
xchg
pop
cmp
pop
test
pop
cld
out
and
les
fwait
cmc
push
mov
mov
or
and
jg
or
les
push
inc
mov
call
movb
test
subb
fnsave
sub
inc
inc
scas
sub
gs
loopew
mov
rcl
les
lret
lea
aad
cmp
add
rcrl
sbb
imul
dec
call
aaa
push
mov
addb
push
insb
push
dec
mov
adc
push
push
das
pop
and
add
lds
outsl
fistl
cmp
pop
mov
push
nop
add
mov
imulb
nop
dec
jbe
push
jge
sbb
and
push
movsl
jo
cmp
loope
xchg
dec
add
pop
mov
int
add
push
add
daa
add
int
cmp
repnz
cld
rclb
push
jb
rclb
cmp
or
mov
fisttps
andb
scas
iret
ror
add
pushf
loop
jge
shrl
lret
fs
mov
imul
outsb
push
inc
clc
dec
lahf
sub
repz
lock
lret
fwait
cltd
insb
push
notl
pop
push
sub
push
jbe
mov
in
stos
es
mov
jo
push
insb
js
dec
loope
aas
mov
mov
sahf
ss
or
add
jno
mov
sbb
arpl
dec
sbb
pop
cld
jbe
push
in
cmp
test
or
xchg
jne
out
lahf
dec
pop
addb
mov
std
popf
sub
fisttpll
cmp
jg
jp
inc
pop
push
jbe
xchg
lea
pusha
imul
push
scas
mov
jbe
jle
mov
adc
fimuls
sti
cmc
mov
mull
cmp
inc
adc
pop
sbbl
js
or
movsb
rcrb
popa
aam
mov
jo
push
out
aas
push
xor
push
dec
push
mov
push
push
movsl
popf
jnp
shrb
mov
fistpl
mov
adc
sti
xchg
inc
jns
xchg
es
xor
dec
mov
xor
aam
dec
ret
arpl
test
aad
stos
das
lods
or
xor
sbb
outsl
pop
or
xchg
popf
mov
pop
lods
gs
pop
add
pushf
xchg
adc
scas
mov
or
fisttpl
xchg
xor
shrl
mov
aaa
dec
mov
addr16
popf
addr16
cwtl
lds
mov
xchg
adc
or
jo
inc
mov
gs
int
es
sbb
out
in
mov
adc
fldl
scas
jbe
cli
mov
lret
sub
popa
std
push
fdivr
sbb
cwtl
adc
dec
xor
jnp
outsb
in
outsb
fisubl
loopne,pt
gs
lret
rorl
mov
and
loope
loopne
test
cmpsb
inc
roll
int
in
es
mov
jp
fcmove
cmp
stos
cmpsl
pop
fistpl
std
cmc
and
test
sub
lret
mov
sbb
je
jno,pt
fcoms
sbb
push
push
and
fwait
push
adc
push
mov
stos
xchg
push
add
mov
cmpb
imul
test
cmp
cmpb
jo
cmc
push
fstps
movsb
xchg
mov
jge,pn
and
int3
cmp
out
jle
mov
mov
aas
shr
inc
cmpsl
es
mov
gs
cmp
aas
jnp
test
add
mov
dec
sub
jle
decl
pop
adc
add
add
xchg
loop
pop
les
stc
pop
call
adc
sub
jbe
sub
push
xchg
dec
pop
jne
mov
mov
xlat
add
sbb
or
push
dec
mov
mov
cmpsl
sahf
cmp
fisttps
cli
ja
mov
xchg
xchg
mov
incb
and
jo
xorl
jbe
inc
pop
and
or
mov
pusha
cmpb
les
adc
pop
push
nop
in
stos
jmp
lahf
jp
jno
jb
adc
lea
dec
test
mul
xor
mov
xor
mov
popa
ret
repz
xchg
int3
jmp
mov
ja
adc
mov
and
idivb
dec
jmp
pop
or
ret
sub
mov
mov
lock
push
sub
out
mov
mov
fdivr
inc
das
popf
cmp
and
jp
sti
sbb
inc
inc
adc
das
enter
mov
fiaddl
andb
jns
sbb
loope
daa
mov
sub
ret
xchg
pusha
xor
push
cmp
mov
in
push
nop
cwtl
adc
out
mov
jp
ret
add
inc
pop
mov
int3
pop
jnp
and
or
insb
add
testb
xor
test
aaa
repnz
push
shll
testb
lods
ja
push
mov
dec
repnz
andl
out
fsubl
jl
notb
push
mov
pop
movsl
xchg
pop
dec
adc
cmp
cmp
mov
cli
mov
rcrl
cmp
jmp
jno
push
mov
mov
jnp
dec
sbb
lock
xchg
nop
clc
arpl
ljmp
pop
adc
jno
ja
rorl
mov
test
sub
fdivrl
mov
testb
ss
jne
lea
lods
cmpsl
mov
inc
add
inc
je
xor
jle
xchg
xchg
cli
stos
cmp
pop
fisubrs
and
push
stc
jbe
dec
mov
repz
adcb
test
add
es
lret
push
push
cmp
mov
adc
or
aaa
pop
int
std
xchg
sahf
fistps
pop
add
cld
shll
shlb
das
mov
add
movsb
push
inc
divb
ljmp
sub
sahf
fmul
lods
xchg
xor
add
lcall
addr16
lcall
aaa
fs
add
mov
xchg
dec
mov
push
xchg
xchg
stos
xchg
mov
xchg
cmp
subb
and
inc
cwtl
add
or
pop
xchg
ret
vpunpckhbw
mull
mov
shrl
mov
mov
scas
jnp
jae
test
xchg
jg
mov
pop
dec
enter
and
push
fnsave
stos
inc
fdivrs
inc
mov
imul
mov
loope
mov
ja
pop
mov
add
fucomi
mov
shlb
call
add
fsubrp
fld
out
fwait
addr16
pop
and
cmp
dec
ret
sbb
popf
sbb
mov
imul
cld
insl
divl
cli
jo
cmpl
fnstsw
test
iret
out
or
shrb
xchg
ss
xchg
imul
push
sbb
popa
cwtl
dec
cltd
lds
push
dec
ret
or
and
jno
iret
sbbl
decb
xor
decl
inc
xor
dec
aad
cltd
xor
push
xlat
adc
fldt
pop
mov
cld
push
dec
js
fildl
lret
daa
cld
sub
loop
test
clc
int3
into
mov
inc
iret
and
imul
or
fnstsw
xchg
fcomps
les
xchg
aad
lahf
in
lahf
sbb
or
incl
pushf
sub
call
cwtl
pop
dec
rorl
sbb
add
mov
inc
adc
das
dec
rcrb
sub
mov
lret
sar
cmpsl
jbe
push
jae
fcoms
shl
mov
xchg
inc
out
mov
inc
subl
test
mov
push
dec
hlt
mov
pop
int
adc
sub
scas
add
int3
mov
loope
stc
jmp
adc
ret
sarl
movsl
xchg
cmp
insl
jp
sub
shlb
mov
add
cmpsl
int3
inc
jne
es
mov
mov
aam
mov
out
pop
jo
in
into
loope
jns
in
inc
sub
movsl
jg
lock
in
lea
pop
push
mov
add
test
and
jb
mov
scas
inc
fidivrl
cmpsl
shl
cwtl
ret
push
push
mov
jbe
mov
int
mov
mov
push
mov
mov
mov
das
xchg
dec
fdivrp
mov
pop
dec
ljmp
dec
mov
test
jecxz
das
pushf
push
adc
lock
icebp
call
mov
xchg
icebp
mov
mov
inc
push
jae
lods
movsb
jne
imul
enter
rorl
imulb
fistpl
imul
lret
fildll
ret
cmp
test
jbe
sub
pop
ficomps
xor
xchg
push
sub
pop
lods
pop
sbbb
mov
push
sahf
cld
fwait
jo
les
cmpsb
adc
pop
js
adc
xor
outsl
push
in
rorl
push
adc
inc
xor
cmp
iret
cmp
inc
sahf
in
pop
out
test
sbb
xor
mov
iret
mov
dec
xchg
pop
inc
push
fistps
cli
xor
jecxz
popf
mov
shll
mov
mov
incl
jmp
mov
dec
popf
aam
sbb
cwtl
mov
jl
mov
ljmp
fcomi
loopne
movsl
inc
enter
les
outsl
imul
jp
jae
loopne
mov
dec
xor
inc
pop
pop
or
je
lds
sbb
int3
mov
xchg
sub
fwait
testb
aad
xchg
mov
cld
pop
loope
dec
orb
mov
add
sub
adc
rorb
frstor
insl
mov
xor
and
jno
aad
in
inc
and
add
lret
push
inc
dec
frstor
stc
ljmp
pusha
xchg
popf
aas
xlat
in
xchg
lcall
sbb
mov
jecxz
test
push
and
pop
mov
les
mov
rorb
jp
jmp
enter
push
sub
movsb
jle
add
push
mov
nop
das
mov
xor
mov
push
out
mov
shll
adc
dec
insl
mov
loopne
push
shrb
mul
repz
stc
iret
mov
sar
pop
dec
lods
hlt
fadds
ret
jo
lock
repz
leave
mov
pop
xchg
push
dec
fdivrl
out
cli
push
cmp
adc
out
lods
cs
mov
test
aad
sti
mov
leave
gs
aas
and
or
ja
mov
xchg
adc
pop
shrb
dec
fidivrs
dec
cs
or
cmc
fists
mov
push
sbb
mov
mov
ss
sbb
xor
stos
xchg
inc
xchg
cmp
ljmp
imul
dec
jle
and
out
adcb
dec
or
outsb
cmpsb
push
xchg
inc
stos
mov
jns
mov
cwtl
add
pusha
loop
inc
lea
in
dec
inc
stos
movsl
addr16
jge
sbb
xchg
mov
xchg
pushf
jne
int
fldcw
push
sbb
mov
add
and
xor
pusha
dec
ds
xchg
mov
mov
es
les
mov
sahf
xchg
jnp
pop
lods
jge
fbstp
xor
sbb
les
scas
loop
add
repnz
xorb
inc
das
xor
jp
cmpsb
xchg
mov
das
mov
xor
test
add
fcompl
sub
mov
xor
cmp
push
mov
ror
cs
cmp
aaa
arpl
outsl
rcrb
popl
pop
movsl
jge
mov
test
mov
add
push
push
mov
aam
sbb
or
or
fldcw
adc
xchg
icebp
es
in
test
scas
cs
xlat
sub
fildl
and
push
add
lock
mov
or
icebp
rcrb
popa
fwait
gs
pop
imul
inc
rcl
or
rorb
cmpsl
fadds
fdivr
sbb
push
decl
add
xchg
std
push
fcom
push
movsl
jmp
rcrl
xchg
fcmovnu
fcoml
jae
jg
mov
ret
fcomp
jne
loopne
mov
cmp
push
xchg
mov
divb
or
lea
or
hlt
in
push
dec
sub
mov
mov
xchg
loope
daa
add
cli
cmpsb
sbb
pop
push
pop
lret
loop
insb
test
scas
dec
movsb
sbb
sti
outsb
lret
jmp
repnz
imul
lods
cmp
jae
jns
test
sub
sbb
pop
add
out
dec
rorb
xlat
sbb
das
push
ret
lahf
iret
xchg
or
mov
gs
dec
int3
rclb
adc
loop
sahf
shll
xchg
insb
sbb
push
and
cmp
imul
mov
jmp
jmp
fwait
cs
scas
sbb
pop
addb
imul
mov
cmp
cli
push
sbb
inc
nop
mov
outsl
frstor
int3
and
jmp
adc
pop
or
add
lds
mov
lea
test
pop
repnz
inc
jnp
outsb
dec
push
sub
adc
add
cli
jo
or
push
cld
xlat
xor
imull
mov
xor
ja
mov
and
push
and
mov
movsb
loopne
push
bound
sahf
mov
cmp
ret
cmp
imul
cmc
jmp
outsb
push
loope
xchg
dec
arpl
lahf
sbb
lods
fs
xor
icebp
inc
xor
mov
in
mov
out
jne
imul
cmp
fcomp
add
pop
mov
push
dec
bound
loope
out
ljmp
cmpsl
cwtl
jo
xchg
dec
loope
test
add
add
std
inc
mov
jecxz
jno
std
adc
movl
xor
mov
mov
push
lahf
clc
or
mov
jo
xor
imul
push
dec
mov
push
lea
cmp
sbb
pop
pop
adc
and
mov
nop
xor
test
sahf
cs
in
aam
cs
cwtl
sub
adc
test
add
enter
or
mov
cmp
mov
jl
mov
ficoms
ljmp
in
outsb
pushf
pop
xchg
test
add
jl
sub
jnp
pop
repz
push
pop
ja
emms
in
jmp
push
and
xchg
lcall
or
mov
xor
fs
aam
jp
movsl
sbb
dec
lret
mov
cld
and
scas
faddl
xchg
or
aad
jns
add
xor
sub
dec
aam
mov
movsl
inc
xchg
in
xor
not
stc
dec
rorl
in
sub
lret
leave
rcr
and
popf
add
mov
dec
and
ret
cmp
xchg
lds
push
clc
sub
aaa
mov
mov
cmp
lods
or
shll
push
dec
aas
loope
and
fs
insb
scas
sub
inc
sbb
sbbb
stos
push
lods
lds
cmp
xchg
dec
and
mov
mov
mov
data16
mov
jge
scas
and
int3
sub
mov
jbe
push
jns
jnp
movb
aaa
idivb
and
cmp
fucom
fnstenv
shl
es
and
pop
je
jno
icebp
arpl
pop
sbb
es
notl
pushf
rcl
jge
fmul
mov
bound
fldl
cmp
cwtl
cmpsl
sub
inc
js
pop
dec
mov
xchg
and
adc
mov
fst
or
lcall
mov
mov
imul
stos
js
xor
scas
mov
arpl
add
sub
mov
loope
mov
in
pop
mov
lods
cmp
jmp
jns
mov
pop
push
push
push
jl
mov
in
rcr
ret
sbb
add
ret
jno
call
sti
mov
das
das
imul
cwtl
ja
insb
push
add
repnz
push
jle
jge
cmpsl
js
add
movsl
jmp
stos
push
jmp
add
imul
xadd
xor
xor
stos
or
subl
and
mov
insl
xor
dec
int
sbb
mov
pop
push
xor
mov
add
jge
jo
inc
and
sbb
cmp
jmp
jmp
aam
dec
fs
pop
jle
popa
fbstp
gs
push
test
pop
imul
cmpb
adc
sub
adc
mov
adc
or
pop
out
jge
subl
arpl
jecxz
insl
das
and
xor
in
pushw
jb
ret
dec
dec
pop
add
lds
in
pop
je
push
push
pushf
inc
xchg
subl
into
sub
pop
test
sarl
pop
into
idivb
hlt
pusha
gs
xchg
leave
stos
arpl
lods
or
mov
in
pop
inc
sub
loope
mov
cmpsl
or
pop
adc
out
stos
jle
es
lret
and
ret
add
sbb
jne
sub
subb
clc
ja
cmp
adc
cltd
sbb
ss
lret
incb
push
fisubrl
pop
add
push
jg
hlt
push
mov
xchg
subl
sbb
lahf
lahf
aaa
jle
loop
push
lods
xchg
cmp
mull
inc
js
mov
fiadds
push
dec
inc
imul
filds
mov
mov
adc
sbb
push
dec
cmpsb
mov
mov
cmp
push
cs
sahf
cmpsl
imul
xor
pop
jbe
loop
das
lods
sub
sar
nop
push
or
mov
jns
xchg
dec
enter
hlt
mov
fimuls
mov
scas
mov
fs
pop
arpl
sub
sbb
mov
sbb
movsb
es
enter
pushf
fs
jae
jb
dec
mov
cmp
cltd
inc
sub
dec
xchg
push
sbb
mov
push
out
clc
adc
pop
shl
sbb
and
fimuls
outsl
jne
insb
aas
loop
into
jecxz
jbe
pop
jmp
cmc
dec
jae
sub
dec
daa
sbb
int3
adc
xchg
xor
movhps
aaa
test
sahf
das
in
xchg
ljmp
in
test
pop
xchg
repnz
in
rcrb
ret
mov
scas
enter
icebp
sub
aad
push
adc
jb
sub
fsubl
sbb
sub
std
jg
leave
adc
add
aad
jge,pt
nop
notl
fadds
add
into
dec
out
imul
pop
xchg
cmp
aaa
mov
and
hlt
xchg
cwtl
cmpb
push
lods
popa
repz
mov
outsl
mov
jns
into
outsb
sub
cmpsb
outsl
mov
cmc
arpl
scas
jl
stos
mov
add
mov
add
pop
add
xor
cmpsl
xchg
xchg
jecxz
out
shrl
out
test
push
nop
jle
mov
mov
xlat
jbe
sub
push
jb
lds
sti
mov
xor
leave
and
scas
sub
adc
loop
shl
loopne
imul
in
mov
loope
sbbb
aam
jp
enter
dec
into
xorl
je
pop
inc
push
and
xor
in
add
mov
xchg
loopne
popf
fadd
mov
rolb
dec
inc
cltd
add
movsl
jg
sub
mov
xchg
jp
sbb
push
inc
xor
imul
pop
cmpb
xchg
test
outsl
leave
nop
mov
inc
stos
subl
inc
sub
push
dec
lods
stc
jp
xchg
dec
jae
icebp
xchg
movsb
fs
pop
or
sbb
xlat
xchg
pushf
adc
mov
ret
pop
add
lahf
jp
fs
scas
loopne
sbb
sbb
dec
std
pusha
daa
mov
popa
pop
or
adc
into
shrw
cmp
les
mov
push
dec
cmpsl
dec
clc
scas
dec
test
sahf
mov
scas
pop
pop
and
push
adc
adcb
pop
xor
cmp
cmp
mov
outsb
mov
mov
jecxz
sub
push
aad
lods
xlat
and
jp
mov
es
clc
mov
jnp
jmp
xor
test
push
loopne
jae
mov
addr16
das
sbb
ds
fwait
inc
cmp
and
cli
push
lds
push
dec
rorl
fnsave
mov
inc
call
sbb
mov
xchg
fwait
push
push
adc
enter
and
jae
popf
lea
pop
xchg
push
dec
fadd
scas
cmpsb
push
sbb
test
jno
ja
jmp
or
les
imul
out
sub
mov
mov
mov
shll
sub
dec
faddl
imul
sub
js
adc
sti
and
xor
je
xor
loope
in
into
ret
out
lret
and
lods
and
jmp
jge
or
ss
rolb
pushf
rolb
out
pop
push
sarb
arpl
cmp
outsb
xchg
adc
jg
pop
mov
or
imul
lea
ftst
ja
jno
aad
mov
or
mov
mov
in
pop
xor
xor
cmp
add
and
in
stos
std
and
idivb
push
dec
out
testl
cmc
jmp
push
mov
aas
cmc
ljmp
cmp
push
dec
aaa
into
xchg
jle
mov
xor
daa
mov
and
sbb
out
pcmpgtb
clc
push
shlb
and
lahf
mov
sub
inc
add
jo
sub
jp
mov
or
sbb
xor
or
arpl
xchg
mov
and
mov
mov
fcoms
loope
insb
or
ror
sbb
pop
movsl
in
fists
cld
lcall
imul
leave
ss
xor
pushf
pop
add
ret
adc
clc
das
pop
sbb
dec
cld
inc
xor
pop
sbb
mov
push
lods
mov
lea
loopne
in
pop
mov
test
sub
jle
jg
jp
fs
stos
loopne
pop
push
xchg
adc
xorb
inc
stos
dec
shl
xchg
pop
fidivrs
jnp
ret
add
xchg
xlat
shrl
xchg
jae
jae
fisubrl
stos
aas
mov
push
arpl
movsl
mov
sub
lahf
sbb
das
ljmp
mov
scas
scas
insl
pop
pop
xorl
dec
mov
add
cmp
cmpl
shlb
push
int3
adc
xchg
and
imulb
cs
sarl
fstl
outsl
sti
ficompl
xor
fistl
outsl
mov
cld
dec
aam
js
repz
inc
out
mov
mov
pop
outsl
xor
insb
jnp
push
nop
dec
mov
xchg
jle
push
popa
cs
dec
rcr
bswap
pop
dec
notl
sbb
mov
inc
iret
push
ret
stos
pop
inc
mov
xor
inc
push
cmpsl
and
es
imul
aam
xor
xor
in
jo
add
push
dec
decl
adc
sbb
sbb
jo
addr16
pop
sbb
andb
mov
cmp
dec
popa
insb
inc
shll
mov
adc
ficomps
adc
imul
adc
sbb
inc
mov
in
mov
mov
in
arpl
je
jbe
inc
aad
gs
adc
lods
adcb
add
push
movsl
push
jae
call
shll
sub
sbb
sbb
mov
mov
out
int3
xchg
push
lret
add
mov
mov
clc
into
and
push
lret
dec
pop
fs
dec
and
mov
js
inc
inc
test
popa
out
ret
test
filds
cltd
jge
mov
xchg
adcb
push
sbb
bound
push
adc
push
xchg
mov
fwait
imulb
push
and
pop
enter
cmpsl
lea
data16
add
dec
mov
mov
dec
int
dec
aam
adc
dec
and
sbb
fists
push
push
rolb
xor
clc
out
xor
xchg
mov
mov
cmpsb
adc
test
push
ja
mov
cmpsl
ret
adc
fs
dec
dec
and
stc
pusha
cmp
mov
daa
ja
xorb
dec
add
sbb
cltd
jecxz
mov
insb
sti
jae
int
sub
push
out
mov
repnz
insl
mov
xlat
addr16
jmp
lcall
pop
notl
ret
lods
mov
push
nop
dec
aam
mov
mov
jb
loopne
and
or
ret
ficompl
js
gs
popf
lock
fwait
push
mov
pop
push
ljmp
fisttpll
jb
pop
push
and
into
xchg
xlat
or
rorl
sub
jmp
cmp
popf
fists
into
jns
inc
les
fincstp
cltd
mov
xchg
xchg
inc
add
cmpb
pop
fists
aas
fstl
scas
call
jne
push
jne
arpl
insb
je
push
xchg
pusha
cmp
fdivs
or
add
and
mov
popf
incl
xor
fstl
push
js
pop
mov
jle
cmp
push
int
push
pop
push
push
fs
aas
sbb
gs
popa
in
pusha
inc
xchg
test
stos
jecxz
out
jl
js
ret
jbe
sub
jle
js
sub
je
mov
call
lahf
fcompl
flds
jmp
cwtl
push
pusha
shl
aas
jnp
jmp
sahf
xchg
adc
lods
xor
or
loopne
mov
cld
rcrl
scas
xlat
fs
jnp
dec
cmp
push
mov
ss
sbb
add
mov
sbb
shlb
and
addr16
adc
or
inc
adc
test
adc
test
inc
rolb
shrb
les
jp
loopne
sbb
pop
mov
test
test
repnz
xchg
xchg
neg
mov
dec
jo
cmc
push
add
cli
xchg
es
ret
mov
mov
pop
sbb
and
inc
adc
out
and
xor
loopne
mov
pop
pop
inc
rcll
pop
mov
and
dec
mov
jl
in
jnp
add
pusha
pop
push
stc
add
adc
xor
pop
mov
xor
jae
iret
fcomps
dec
sub
data16
ss
scas
into
inc
pop
jbe,pt
lahf
adc
outsb
icebp
ret
fcomip
dec
push
fimull
push
xor
inc
pop
xchg
jl
rcrl
add
cmp
jmp
sahf
sahf
push
ret
daa
fcmove
call
adc
ret
hlt
and
pop
mov
dec
pop
mov
dec
push
mov
push
inc
jne
pop
sbb
shll
loopne
inc
mov
out
mov
sahf
xchg
xor
cwtl
in
incb
int
popf
cmp
inc
mov
inc
and
xor
xchg
dec
test
mov
inc
mov
cmp
in
testl
push
repz
movl
sub
sbb
fstpl
mov
mov
xor
sub
inc
xchg
call
pop
mov
and
mov
inc
imul
xor
movsl
int3
inc
gs
pop
data16
mov
push
imull
and
jns
mov
insl
mov
cs
pop
or
stos
ficomps
sub
mov
mov
aam
or
sti
xor
inc
inc
dec
mov
push
pop
into
cltd
aad
sbb
lds
jae
fimull
and
fsubrl
leave
adc
imul
lock
clc
xlat
mov
aas
cwtl
or
cmc
xchg
js
jnp
pop
fidivl
out
pop
push
sub
push
repz
xor
pop
in
fldl
adc
mov
jp
aaa
sbb
icebp
jp
sbb
push
xor
mov
lcall
jae
fmulp
sbb
xorb
mov
inc
dec
cmp
repz
or
cmp
inc
cmp
lcall
pop
fwait
jb
mov
adc
jecxz
cmp
push
test
xchg
xor
mov
dec
js
mov
mov
inc
pop
int
cmc
mov
push
bound
test
out
out
cmpsl
fldt
mov
xchg
push
incb
mov
ss
or
dec
or
fmulp
pop
movsl
mov
push
mov
sub
stos
inc
loopne
add
mov
stos
sahf
dec
cmp
adc
sub
dec
das
repnz
mov
lock
add
push
imul
dec
sub
cld
lock
add
xchg
orl
fdivr
jg
test
in
inc
dec
es
mov
lods
das
fwait
pusha
mov
cmp
cmc
push
cmpb
cmp
add
jbe
addb
imul
mov
outsb
lods
dec
mov
add
adc
mov
mov
cmp
insb
add
jp
repnz
aas
cmp
aad
inc
inc
sub
lds
mov
ja
mov
jns
ret
inc
cmpxchg
iret
outsl
les
dec
in
mov
push
es
lods
test
inc
aam
cwtl
sub
fidivrl
mov
push
repz
xor
aam
and
cmp
sbb
pop
pop
cmpl
jl
movsl
ret
and
jp
jle
orl
sub
jg
icebp
je
rolb
insb
pop
xchg
push
outsb
pop
ss
cmc
es
xadd
adc
out
xchg
add
and
adc
and
adc
movsb
pop
dec
cmc
sub
fsubl
jl
hlt
inc
dec
or
dec
sub
add
cwtl
decl
cmp
xor
arpl
in
push
jp
fldl
xor
push
add
mov
mov
mov
cmp
push
xor
imul
inc
and
mov
cmp
in
enter
inc
lods
adc
and
rcl
aaa
fisttpl
push
mov
das
mov
mov
add
cmp
dec
in
scas
inc
cmp
jg
pop
es
leave
or
push
or
and
ljmp
test
lret
fs
lcall
mov
cmp
ss
jecxz
push
mov
fisubrs
bound
loope
inc
push
lea
xchg
push
sbb
sbb
out
subb
sbb
cmc
jecxz
test
repz
loopne
nop
xchg
push
adc
xchg
fsubrl
add
push
add
scas
add
out
xchg
sbb
and
mov
fstpl
outsb
jge
in
or
and
inc
call
test
mov
test
popf
add
push
les
ljmp
insl
test
aam
dec
inc
push
enter
push
insb
lea
mov
cmc
scas
loope
shll
mov
jns
rorb
and
add
shl
pop
xchg
loopne
scas
and
pop
in
xchg
jbe
dec
xor
mov
push
cmp
ret
pop
mov
inc
push
xor
xchg
adc
xor
sbb
and
movsb
ret
cmp
lock
das
jmp
xor
sbbl
pop
jmp
cmpsl
sbb
lods
pop
fidivl
lods
xchg
cmpsb
xchg
stc
adc
out
stc
push
loop
pop
and
inc
in
or
call
in
in
in
add
daa
adc
inc
cmpsb
test
outsl
mov
ja
adc
push
xlat
mov
sbbl
push
mov
loopne
and
addr16
mov
fwait
push
push
jmp
xchg
jne
add
sarl
sub
enter
jno
out
aam
mov
sub
sahf
xchg
pop
shll
xor
pop
dec
or
dec
adc
ret
js
pushf
mov
je
test
mov
add
and
cli
leave
les
sbb
aam
or
movsb
arpl
sahf
dec
mov
or
es
fdivl
jge
lea
dec
dec
ret
mov
data16
cmp
and
sbb
js
add
call
lcall
sbb
xlat
pushl
mov
add
mov
cmp
and
aas
idiv
pushf
insb
pop
push
int3
jno
insb
or
pop
enter
mov
adc
fidivs
jmp
loop
out
sub
lret
in
inc
cld
mov
jnp
sub
jnp
out
dec
inc
xchg
gs
cmp
xchg
ja
fisttpl
iret
pop
push
inc
mov
cmovge
jne
adc
add
enter
ret
aam
sahf
outsl
fsubrs
imul
cld
call
dec
sbb
push
dec
in
cmp
stc
data16
inc
xor
outsl
cmp
pushf
in
out
mov
push
pushf
adc
in
jl
mov
gs
outsl
iret
dec
inc
pop
xor
push
lods
cs
pop
push
out
ret
pushf
call
aaa
insb
cvtps2pi
dec
push
loop
push
push
data16
mov
out
mov
cwtl
mov
adc
es
add
in
sarl
out
scas
lret
sar
sbb
pop
ja
fisubrs
sub
fwait
icebp
subb
fwait
sub
mov
cmp
jmp
pusha
or
xchg
mov
inc
js
mov
cmp
jns
push
loop
sbb
aad
push
jne
cltd
inc
js
jne
pop
cmp
push
incl
test
xor
hlt
dec
push
pushl
lods
adcl
jge
rep
andb
je
clc
add
mov
mov
sbb
insl
add
aam
popa
adc
adc
pop
fdivs
jne
pop
cs
or
inc
call
mov
cmp
jge
lahf
cltd
pop
adc
or
repnz
fiadds
mov
adc
aas
lahf
push
cmp
xchg
and
decl
xchg
lret
lea
or
mov
fildll
ds
imul
mov
lods
pop
in
push
data16
outsb
dec
xchg
scas
outsb
or
mov
dec
mull
addr16
sub
adc
xchg
add
push
xor
lods
stos
or
aaa
xor
enter
lods
cs
sbb
cld
je
or
inc
inc
test
mov
stos
mov
mov
sub
push
or
cmp
and
gs
push
sbbb
mov
out
push
cli
dec
test
mov
fists
insl
das
lret
loop
ja
mov
mov
loope
mov
jg
fincstp
and
cmp
xchg
les
repnz
xchg
mov
call
mov
aaa
pop
mov
jo
call
ficomps
int
jmp
aam
mov
ljmp
and
push
ffree
xchg
inc
popa
pop
clc
or
add
mov
mov
fadd
mov
lahf
jno
mov
mov
fstl
adc
mov
ficomps
repnz
pop
cmp
movsl
pop
pop
pop
cmp
xor
jb
pop
inc
call
jg
rcll
adc
inc
xchg
sbb
and
int3
frstor
orb
loope
add
sti
mov
pushf
aas
xchg
xor
xor
adc
outsb
adc
sub
into
lods
lods
iret
push
repz
ss
movsb
subb
mov
dec
jge
dec
shlb
push
mov
shrl
mov
movsb
pop
popa
add
cmp
scas
dec
popf
pop
xlat
jbe
jl
add
insb
mov
test
sti
dec
sub
movl
sbb
cli
sub
dec
aam
xor
stos
sbbl
loop
jbe
bound
jne
jae
shl
xor
cwtl
cmpsb
aas
jns
sub
subb
int
es
mov
cmp
cmp
mov
fdivp
and
dec
inc
or
push
roll
test
test
fcmove
cmp
push
mov
mov
jne
jb
adc
cltd
jae
test
cmp
fstl
loopne
out
and
jp
inc
xor
gs
xor
pop
imul
mov
cmp
lea
sti
mov
repnz
movsl
jmp
push
pop
and
sbb
fnstenv
mov
inc
cmpsb
and
ds
jnp
xor
xchg
pop
movsl
ja
dec
mov
nop
sbb
aam
fidivl
pop
div
jmp
mov
stos
push
add
in
das
mov
cmpsb
and
pop
cltd
push
out
loope
and
push
mov
inc
cmp
adcb
fcomp
pushf
ljmp
jbe
call
outsb
or
inc
mov
push
scas
cmp
mov
test
ja
into
mov
sti
dec
sub
mov
add
push
cmp
jb
lcall
xor
icebp
fidivl
mov
pop
inc
aad
push
jg
test
push
jns
popa
stos
out
pop
pop
adc
mov
jmp
dec
call
jle
out
scas
sbb
adc
dec
and
adc
pop
and
les
gs
or
iret
stos
hlt
and
ljmp
imulb
mov
cmpsb
inc
cld
and
mov
sub
xor
push
pop
popf
jb
cmp
cmp
pushf
lea
sbbl
cmp
mov
cmp
decl
mov
and
pop
sub
cmp
in
out
push
popf
sar
mov
and
jle
testl
xor
pop
push
mov
sbb
inc
pop
mov
sahf
lods
cmp
inc
bound
test
mov
fadd
sbb
push
enter
cmpsl
pop
pushf
cmp
hlt
inc
xor
xchg
sub
cli
repz
cmp
cmp
sahf
inc
jae
and
fmuls
popl
xor
ret
outsl
mov
sbb
imull
jecxz
pushf
or
pop
iret
icebp
aad
movsl
xor
testl
sub
shlb
mov
imul
sbb
sbb
dec
sub
gs
and
and
iret
adc
pop
push
xor
ret
cwtl
stos
adc
xor
cmp
mull
subl
lods
stos
int3
xchg
daa
mov
adc
lret
push
addr16
pop
icebp
or
stos
aad
adc
clc
mov
jl
dec
divb
push
inc
sub
pop
sbb
adc
les
outsl
sub
movsb
cmc
jo
test
nop
rclb
call
and
jb
out
pop
and
mov
inc
pop
ret
dec
lock
out
dec
ret
out
add
aad
shll
cmp
mov
ja
lcall
adc
mov
xchg
mov
arpl
cld
cmp
mov
test
mull
cmp
test
xlat
sub
fsubrl
jnp
inc
popa
lods
xor
jecxz
in
in
inc
arpl
scas
adc
mov
xor
mov
jmp
dec
movsb
mov
insb
inc
cmp
insb
mov
enter
insb
jmp
jne
minps
or
cmpl
mov
arpl
imul
pop
mov
fistpl
call
add
fmulp
cmp
adc
popf
insb
fiadds
lock
or
inc
data16
mov
imul
or
adc
cld
popa
jb
add
orl
bound
leave
bnd
std
in
out
jge
lea
hlt
andb
scas
pop
sub
scas
lods
shll
test
ss
xchg
in
sahf
dec
js
xor
or
fs
out
mov
loop
out
fs
add
mov
xchg
in
xor
dec
fmull
mov
loop
sbb
mov
xchg
rcrl
push
shrb
xor
cwtl
mov
repnz
jmp
fwait
loopne
popa
sbb
lds
push
jge
in
nopl
inc
mov
mov
lret
and
push
decl
popa
lea
ret
mov
jno
pop
xchg
stos
mov
xchg
cs
movsl
in
test
sbb
insl
addr16
or
decl
add
mov
dec
in
pop
popf
fnstenv
loope
mov
add
mov
xor
adc
ret
push
sar
and
fdivs
sbb
outsl
ret
inc
into
jl
sbb
xchg
ljmp
adc
aas
aam
bound
sub
xorb
sbb
mov
pushf
or
dec
inc
test
jnp
popa
jp
jg
popa
data16
add
stc
mov
and
les
mov
xor
or
insb
out
mov
flds
or
xchg
sbb
popf
xor
es
and
or
cmp
insb
or
pop
xchg
mov
aas
pop
adc
std
mov
pop
push
xchg
lret
aaa
clc
fsubrs
sbb
mov
push
mull
dec
push
data16
cmp
bound
testb
out
mov
jbe
dec
dec
dec
xchg
out
je
xor
jmp
inc
aad
jb
ss
mov
jne
clc
and
jnp
jmp
adc
lods
divl
xchg
jnp
or
xor
icebp
mov
mov
mov
dec
movsb
mov
stos
mov
pop
xor
push
test
cmpsb
je
mov
mov
pop
xchg
xchg
les
das
mov
fwait
jmp
mov
negb
dec
push
push
push
jns
xchg
fnstcw
fwait
dec
cmpsb
cli
adc
pop
int
add
xchg
pusha
dec
lods
stc
aad
std
jae
ja
mov
mov
push
jecxz
fistps
dec
decb
push
out
into
dec
test
mov
rorl
pusha
jmp
lods
cmp
cli
or
mov
dec
push
aaa
jbe
jge
adc
loopne
loope
adc
jle
mov
inc
fucomi
mov
mov
loopne
xchg
iret
arpl
nop
cld
fldenv
shrb
xor
rcll
and
cmp
dec
or
pop
ja
lret
cmpsl
cmpsb
xchg
push
insb
add
sbb
cs
fs
fadd
dec
adc
stos
xor
push
pop
rcll
in
les
add
mov
xchg
push
jecxz
fiaddl
std
addr16
ret
lcall
inc
mov
out
dec
jnp
pop
repz
cltd
int
in
fs
sub
cmp
push
sub
xchg
lret
push
jno
mov
mov
aas
fdivr
subl
push
cli
or
jp
sti
rcll
leave
das
sub
or
adc
sbb
cmp
dec
test
call
lods
push
sub
pop
orl
shll
xor
push
jnp
adc
or
movsb
aam
sbb
xor
outsb
aas
pop
mov
cltd
mov
mov
xor
mov
mov
popa
pop
mov
cmp
jecxz
push
pop
pusha
xor
push
cmp
or
sub
sbb
std
int3
loopne
xchg
andb
and
or
adc
xor
mov
stc
mov
push
xor
add
xor
adc
add
cmpl
bound
popf
ficomps
pusha
mov
fstpt
imul
xlat
in
lods
push
notl
addr16
insb
mov
jmp
or
push
push
jmp
pushf
rcrl
rclb
mov
lcall
and
cltd
lea
cmp
sarl
jl
pushf
mov
aam
jno
mov
in
outsl
cmp
and
dec
pop
lods
push
sbb
movl
sti
xchg
sbb
pop
add
push
push
lcall
xchg
testb
mov
xchg
pushf
rcl
dec
out
cmp
in
or
xchg
adc
ret
or
ret
fwait
iret
das
daa
clc
bound
arpl
mov
adc
inc
xchg
lock
or
sahf
push
and
sbb
les
push
out
mov
push
inc
jns
loop
mov
lret
int3
jge
push
mov
icebp
out
es
dec
inc
dec
sbb
xlat
idivb
sub
and
aaa
out
pop
mov
mov
stc
vphadduwq
pop
sbb
das
testl
inc
adc
sbb
aam
or
mov
lret
leave
aam
inc
je
mov
rolb
cmpsb
dec
dec
mov
orl
jl
add
jne
stos
sbb
cmpl
and
mov
jp
jnp
and
imul
imul
xchg
dec
mov
fs
cmc
push
dec
cld
cmp
sub
pop
hlt
arpl
sbb
dec
les
xchg
push
movsl
add
clc
mov
jnp
ret
and
in
dec
xchg
push
cmc
stos
test
cmp
notl
add
mov
mov
cmovno
loop
mov
out
jnp
and
mov
in
fidivs
mov
pop
bound
jne
pusha
shr
fadds
mov
jae
movsl
fisubl
pusha
mov
movsb
aas
ja
cmp
imul
pop
push
mov
icebp
popf
dec
dec
adc
subl
xor
int3
mov
xor
in
imull
loope
dec
jne
idivb
push
push
shl
hlt
push
jmp
int
cmp
repnz
mov
jecxz
dec
push
xchg
pop
xor
nop
nop
or
and
lock
jecxz
data16
sbb
or
inc
push
pushf
mov
insb
les
xlat
inc
aas
out
add
cmp
push
mov
in
loope
sub
jge
push
sti
sub
xchg
adc
inc
mov
jecxz
sbb
xchg
iret
mov
outsl
sahf
mov
adc
call
mov
xor
enter
out
pop
loop
and
ds
xchg
sahf
gs
xchg
subb
push
pop
push
push
sahf
sub
push
push
test
pop
and
add
xchg
mov
fcoms
ja
add
aas
jnp
or
or
mov
daa
hlt
pop
mov
jmp
mov
cmp
outsb
test
das
cmp
pop
pop
inc
add
push
and
lahf
movsl
loop
xchg
jnp
jmp
pop
xchg
call
xor
dec
jmp
ja
fwait
sbb
mov
dec
mov
in
scas
dec
lea
add
mov
dec
ss
int3
jno
push
je
int
jo
dec
or
pop
sbb
xchg
xchg
sub
out
scas
arpl
sub
adc
add
fmul
cld
jb
cld
jmp
xor
je
rorb
sub
mov
mov
push
mov
insb
and
push
shrb
cmpsl
xor
jbe
xchg
jns
aad
pop
dec
iret
faddl
je
push
in
jne
jbe
or
dec
inc
test
xchg
jp
aaa
jnp
xor
clc
repnz
das
dec
push
add
mov
repnz
or
inc
js
dec
fisubs
andb
jmp
dec
push
push
ret
mov
mov
dec
mov
pop
jo
sahf
adc
repnz
and
push
movsl
xchg
mov
divb
sahf
mov
sbb
cmp
inc
dec
and
or
test
dec
cmp
pushf
cmp
jp
pop
test
data16
je
aam
push
inc
dec
repnz
lea
push
mov
outsb
repz
pop
lahf
lds
and
sbb
daa
in
popl
frstor
ret
in
lock
fmull
or
loop
rolb
lods
pop
fildll
pop
mov
fidivl
sbb
nop
imulb
in
mov
and
add
test
das
sbbl
out
int
inc
fimuls
xchg
orl
out
push
sbb
into
pop
push
lcall
or
mov
cmp
mov
or
or
xchg
icebp
fldenv
jb
and
je
clc
mov
das
ret
les
adc
sub
cmp
bound
and
and
js
mov
outsb
dec
out
push
scas
mov
in
aam
xor
cmpsl
fadds
clc
pop
xchg
hlt
lods
fwait
imul
push
js
fisubrs
loop
pop
nop
jns
sbb
fistps
jp
or
and
aam
fildll
hlt
nop
ljmp
mov
inc
lret
jne
arpl
adc
xor
adc
xor
outsl
add
cmp
dec
lcall
jnp
divb
aad
ret
jne
imul
lock
movsl
or
mov
adc
inc
adc
movsl
iret
loope
ret
lock
inc
cmpsb
inc
mov
mov
lods
addr16
push
jne
addr16
cmp
push
mov
in
arpl
xchg
adc
jns
or
jmp
or
mov
insl
ss
pop
outsb
push
jmp
push
lds
stos
dec
jge
inc
mov
inc
lea
rorl
mov
sub
ja
les
mov
xchg
mov
lcall
cmp
dec
xchg
mov
lds
loope
jmp
lea
sub
loop
rcll
es
xchg
adc
sbb
incb
lret
fcompp
fdivrs
outsb
mov
adc
dec
sbb
cmp
sub
or
out
or
imulb
out
int
ljmp
sti
nop
pop
mov
dec
stos
testb
stos
push
mov
lret
adc
in
mov
imul
ret
inc
mov
test
leave
imul
push
loop
push
arpl
arpl
mov
lahf
mov
mov
aas
fs
pop
movsl
fcmovu
in
iret
mov
sbb
int3
sbb
add
xchg
cmpb
frstor
or
outsb
mov
sbb
push
aaa
rcll
add
shll
outsb
pop
movsb
push
andl
push
push
mov
sbb
scas
push
dec
mov
jbe
dec
mov
ljmp
jbe
cmp
mov
loop
mov
notl
cmp
mov
pop
das
dec
filds
jecxz
add
subl
xchg
jmp
das
negb
sysenter
movsl
stos
cli
sahf
insl
mov
jmp
leave
outsb
mov
incb
inc
pop
pop
add
push
in
mov
inc
icebp
push
lret
jo
scas
movsb
inc
and
dec
push
inc
testl
stc
call
push
popf
movsb
sub
int3
call
daa
cli
rclb
shrb
mov
push
mull
mov
sub
pop
mov
fldcw
cmp
lret
pop
iret
fcoml
xchg
mov
cmovns
jmp
mov
jb
mov
cltd
and
lret
sub
movsl
mov
adc
cs
loop
push
inc
cld
rcrb
lea
pop
addr16
mov
mov
xchg
insb
loop
jle
mov
jl
and
lods
stc
or
sbb
mov
scas
push
addb
enter
jle
inc
add
adc
imul
popa
push
dec
add
pop
inc
insl
orl
xchg
pusha
pusha
fcmovnbe
inc
add
xchg
mov
lock
mov
cltd
and
fsubl
sbbb
sub
or
push
xor
daa
mov
adc
stos
arpl
shlb
lods
jmp
jnp
mov
sbbl
fnstcw
in
sbb
inc
notl
ficoms
in
pop
outsb
cld
mov
or
js
sub
xchg
leave
pop
outsl
fnsave
mov
call
ds
pop
movsb
mov
cmp
jae
loope
nop
insb
fs
xchg
inc
shlb
int3
mov
aas
cltd
or
mov
mov
daa
mov
popf
and
out
or
adc
push
rclb
mov
sbb
xchg
lea
test
mov
dec
repnz
vminps
ja
jmp
bound
ja
das
adc
xchg
cltd
in
jp
mov
in
sbb
stos
pusha
cmp
outsl
mov
out
dec
sar
mov
les
rorl
dec
add
pop
mov
xchg
movsb
cmpsl
outsb
xor
or
or
push
insl
mov
cmp
cltd
and
sahf
and
dec
add
shl
test
or
pop
testb
outsl
cmp
cs
fadds
sbb
hlt
add
jge
jno
xchg
cli
cli
adc
push
mov
pop
movsl
in
pop
jbe
mov
push
and
or
push
adc
lds
push
in
pop
add
fcoml
pusha
in
lcall
cmp
cli
xor
mov
jae
leave
mov
insb
adc
inc
mov
sti
ret
scas
and
leave
andb
rcrb
imul
fs
add
dec
cmpb
adc
push
fsubp
js
jecxz
lods
es
sti
in
xchg
xchg
jns
push
lea
dec
add
xchg
imul
mov
mov
pushf
add
mov
je
lds
repz
pop
dec
jmp
imul
lea
push
stc
push
inc
leave
stos
rcr
jae
or
lahf
movsl
fwait
sub
or
cmp
cli
addl
aas
mov
push
xlat
notw
push
out
jbe
dec
dec
mov
test
pop
test
sbb
mov
push
orb
shll
mov
out
roll
int
mov
or
jne
push
lret
push
ret
stos
cmpsl
mov
mov
adc
or
add
shufps
and
movb
adc
shrb
sub
jl
push
cltd
jb
sbb
mov
lds
adc
and
lcall
mov
cmpsl
and
cmp
insb
pop
dec
sbb
aaa
lcall
or
mov
push
icebp
inc
cs
out
mov
push
popa
sbb
cmp
cmc
jbe
insl
test
inc
xor
pushf
add
fsubrs
sub
fcmovnb
inc
cmc
in
pop
pop
nop
push
cmp
push
mov
jl
arpl
pusha
push
pop
push
mov
sbb
xchg
insb
data16
pop
and
movsl
jbe
stos
cmp
gs
in
sub
hlt
in
jo
xor
mov
mov
out
sti
movsl
mov
push
test
inc
es
inc
pop
cmc
mov
lret
loop
insb
push
xchg
inc
pop
jmp
jae
das
dec
stos
aas
loope
in
jg
jle
fstl
pop
mov
sbb
shl
ds
sbbl
shl
int
fs
rclb
xor
xchg
pop
add
dec
pop
hlt
push
dec
adcl
mov
push
fstpl
sbb
jp
mov
xchg
jbe
mov
movsl
aas
mov
xor
pusha
out
push
mov
xchg
adc
xor
in
negl
mov
mov
sbb
and
loop
jg
push
mov
daa
sarb
out
cmp
sub
add
lock
jno
imull
xchg
mov
int3
mov
addb
xchg
stos
jge
cmp
data16
adc
les
iret
or
enter
pop
rcrl
sbb
inc
mov
inc
sbb
adc
ds
inc
jg
or
mov
cs
gs
jne
mov
sub
std
imul
mov
jb
and
sub
ror
adc
cmpsl
ljmp
xchg
mov
sub
je
mov
jbe
mov
or
push
jnp
cvtpi2ps
sbb
out
pop
stc
mov
mov
enter
fcmovne
push
pop
out
pop
inc
popf
ret
sub
jle
in
loope
push
sub
inc
int3
sub
mov
or
out
cs
movb
push
inc
xlat
fildl
cli
mov
and
imul
nop
es
lock
pop
sbb
lods
lods
cmp
sti
lret
adc
shlb
stos
ljmp
dec
push
aad
das
cmp
xchg
test
aam
push
push
fidivs
xor
add
adc
pop
daa
mov
pop
lock
fstl
pop
or
xchg
fcomps
loopne
push
out
fsubrp
jbe
and
push
dec
cmp
mov
or
repnz
js
jl
aaa
loop
sub
xchg
sbb
mov
xor
shlb
push
or
inc
ss
adc
ds
or
dec
mov
xchg
push
and
lds
out
adc
or
inc
test
mov
cwtl
insl
imul
popa
cwtl
mov
mov
in
scas
cltd
popa
push
cmpsl
out
dec
arpl
lret
mov
cmp
pop
or
inc
jmp
mov
push
in
fidivrl
dec
push
divl
cmpsb
xor
jg
jmp
outsl
add
data16
mov
neg
cmp
std
ret
add
cmpl
mov
dec
inc
jle
xchg
dec
jns
fisttps
sbb
pop
iret
dec
mov
pop
mov
ja
sarb
dec
or
pxor
cmpsl
fiaddl
icebp
mov
fimull
mov
add
aad
mov
add
xlat
ja
pushf
es
movsb
jno
push
cld
clc
jg
scas
fwait
push
fcmovnu
push
lods
push
xchg
das
push
ret
shlb
addl
sub
cwtl
sahf
pop
cmc
imul
iret
cmpl
cwtl
mov
sahf
xchg
aam
dec
xchg
fcoms
push
cmpl
js
inc
jb
aas
std
dec
mov
xor
or
rolb
pop
fnsave
loopne
jne
xor
movsl
in
out
fisttpll
jecxz
mov
jl
xor
shr
mov
sbb
fs
cmp
pop
into
pop
cmpsb
les
jbe
aaa
jg
cltd
pop
adc
addr16
rcrl
arpl
push
or
enter
or
mulb
jns
lret
sub
add
dec
xchg
mov
call
cld
inc
add
aam
in
jecxz
or
rcrl
fisubrs
or
or
push
mov
mov
xchg
lock
flds
test
loop
mov
pop
nop
pop
fwait
test
xchg
cmpsl
push
ljmp
pop
push
add
pop
xchg
ja
test
fadds
push
stc
movsb
mov
std
lret
mov
pop
mov
dec
ficoml
push
mov
addr16
pop
rol
dec
mov
and
iret
ljmp
inc
ret
loope
cmc
push
push
sbb
xor
lods
mov
dec
jge
popf
or
les
jnp
mov
je
movsl
mov
imul
lea
scas
ds
push
fimuls
scas
out
mov
movsb
bound
call
jge
lahf
jno
fisubl
test
push
push
stos
mov
mov
das
fwait
mov
in
hlt
loop
movsl
dec
enter
outsb
daa
insl
sarb
xor
or
sub
lods
inc
mov
sti
and
mov
jle
mov
mov
shlb
jp
aad
push
dec
js
mov
push
pop
dec
pop
cmp
cltd
mov
rolb
cmpsl
mov
or
out
iret
jecxz
sbb
xchg
les
loop
dec
cld
pusha
aas
out
scas
cmpb
sbb
add
test
push
shrb
sahf
rcrl
ficomps
inc
sbb
sub
add
mov
add
xchg
push
aad
xchg
dec
mov
inc
xchg
mov
cmp
fnstcw
xchg
rorb
pop
dec
mov
jp
scas
push
pop
popf
rcrb
pusha
cmp
lock
cmp
xchg
std
and
out
cmp
xchg
sbb
mov
cmc
xor
sbb
xchg
jae
mov
jno
mov
mov
adc
mov
cmpsl
test
and
out
or
outsb
inc
repnz
jnp
or
pop
sub
mov
stos
clc
data16
les
cld
jne
xor
lods
pop
mov
iret
sub
add
mov
mov
jecxz
lcall
in
shr
movsb
xchg
rorl
jne
sub
test
and
cs
sbbb
or
pop
adc
stos
insb
mov
dec
mov
rclb
mov
sbb
lock
cs
sub
into
fnstcw
push
xor
jbe
sbb
inc
cmpsb
fcompl
cmc
push
jmp
mov
je
push
mov
pop
arpl
loopne
repnz
mov
mov
push
or
lcall
lea
das
add
xor
shrd
mov
cltd
in
pop
sub
sub
pop
lods
pop
call
outsl
mov
jb
pop
sbb
lahf
jecxz
mov
mov
lret
daa
inc
daa
bound
aad
sub
xchg
mov
xor
mov
mov
mov
ret
js
aas
inc
sti
in
lods
adc
or
cmp
insl
fcoms
mov
pop
in
addb
daa
xor
insb
mov
test
add
adc
inc
popa
xchg
xor
mov
rcrl
mov
popa
or
idivb
sbbb
popf
mov
andb
cmp
adc
adc
mov
mov
dec
pop
xchg
movsl
scas
mov
mov
sysret
loopne
mov
mov
mov
andb
dec
movb
adc
jae
cmp
push
int
aaa
int
fbld
sub
stos
add
cs
push
lret
xchg
push
pop
jo
push
cmpsb
sahf
loop
leave
push
test
xchg
cld
pop
insb
and
sbb
lret
data16
sub
lret
pop
fidivrs
jns
mov
stc
mov
pop
hlt
arpl
int3
sbb
lea
sub
and
lods
adc
loopne
cwtl
ss
andb
fcomip
aas
lods
xchg
lret
ficoml
pop
scas
sbb
sti
xchg
loop
push
add
mov
repnz
and
rcrb
fcmove
dec
sub
enter
jo
dec
xchg
mov
lock
daa
rcll
icebp
inc
roll
cmp
aas
movsb
jecxz,pt
mov
loop
insb
inc
ret
iret
pop
mov
mov
push
cli
xchg
pop
push
aaa
xchg
ljmp
into
add
imul
mov
add
and
out
iret
ret
mov
and
xchg
pop
enter
cmpsb
mov
pop
dec
push
incb
sbb
cmp
aaa
fsubp
pop
cmpsl
in
pop
mov
fs
dec
jae
dec
jl
pop
sub
jp
arpl
je
or
xchg
adc
and
mov
mov
cmp
xchg
rorl
mov
imul
mov
pusha
jmp
dec
mov
sub
cmp
sbb
hlt
mov
into
cwtl
arpl
fsubs
mov
jb
loope
insl
add
out
cmc
lods
push
and
mov
xlat
xor
pushf
das
call
mov
addb
scas
xlat
and
push
mov
pop
insl
and
push
sub
out
mov
enter
fbstp
xor
inc
icebp
outsw
adc
or
mov
stc
xor
mov
push
push
scas
adc
and
loopne
and
repnz
lods
push
rorl
jmp
call
js
mov
dec
out
es
adc
adc
out
aaa
lds
mov
jb
rol
in
mov
aam
lahf
dec
adc
out
popl
or
sti
push
adc
iret
jb
in
adc
mov
fmull
adc
sub
push
cmp
mov
push
xchg
mov
movsl
mov
sti
adc
test
outsl
push
in
out
or
mov
notl
push
outsl
inc
sti
push
lcall
in
fisubl
fbld
sbb
pmullw
add
mov
fcmovb
loopne
inc
dec
popf
je
dec
inc
xor
fistps
jmp
sbb
shll
addr16
ret
in
pop
adc
sub
and
cmc
and
lea
add
jmp
rcl
cs
dec
jno
xchg
adcb
bound
mov
pop
pop
adc
xchg
aam
test
lods
inc
or
push
mov
add
insl
jge
adc
ficoml
out
iret
xchg
iret
and
add
cs
clc
je
xor
xor
pop
mov
jb
sbb
cmp
xor
adc
sbb
add
jl
mov
mov
xchg
dec
loope
outsl
std
inc
push
enter
cmp
sbb
mov
push
adc
stos
adc
jle
sti
sbb
jns
inc
jg
xor
sahf
xor
sbb
inc
mov
addl
push
xchg
das
sub
jo
add
std
fwait
mov
xor
mov
out
ret
popa
addr16
shll
or
xor
lret
lahf
cmpb
mov
mov
jne
or
inc
shlb
ret
mov
iret
fcom
ret
and
add
imulb
xor
add
and
and
push
sbb
cmpsb
pushf
call
adc
jnp
and
push
add
sahf
icebp
outsb
fists
cltd
fbstp
and
lods
rcr
cmp
loopne
and
push
sti
mov
loopne
test
cmp
jp
rol
sbb
jge
lret
inc
imul
aas
push
fs
lret
mov
mov
xor
jle
add
bnd
cmp
dec
cmc
lea
lods
fnsave
mov
sbb
ficoml
push
insl
or
mov
mov
add
pop
in
out
or
push
push
cltd
push
jle
dec
test
fs
mov
dec
and
out
adc
push
shr
ret
mov
cmpsb
mov
jmp
pushl
test
scas
sahf
sbbl
and
adc
mov
dec
iret
aaa
xchg
movsb
mov
mov
sub
inc
add
push
pushf
or
fldcw
jb
rcr
jl
inc
xchg
pop
mov
dec
or
ss
push
call
mov
rcl
repz
scas
lea
aam
add
arpl
sub
sbb
xchg
clc
cmp
add
stc
push
arpl
jns
and
icebp
push
div
icebp
in
insl
pop
mov
xor
pop
jnp
loope
jns
stc
jbe
outsl
mov
adc
push
mov
int
fistpll
cld
sub
push
jae
mov
jo
fnsave
mov
fcoms
mov
dec
push
pop
test
daa
fwait
or
ret
xchg
mov
sub
imul
mov
xchg
or
mov
mov
inc
popl
cwtl
jg
pop
push
pop
aaa
imul
outsl
rorb
ljmp
fidivs
repz
push
jmp
sbb
subb
inc
cli
xchg
arpl
leave
xchg
pop
sub
push
nop
xor
cli
jo
mov
cmpsl
ss
clc
and
sahf
pushf
mov
xchg
sbb
repz
push
dec
punpckhbw
push
repnz
test
mov
ljmp
jns
add
xlat
add
mov
sbb
cmp
ljmp
testb
or
dec
push
xchg
xchg
adcb
mov
cli
dec
fcom
and
mov
xchg
mov
inc
fsub
xchg
sbb
stos
into
push
mov
aam
cli
sarb
clc
aad
cmp
xchg
stos
mov
fnsave
stc
push
inc
movsb
adc
jb
jo
jmp
push
add
push
outsb
ffreep
cmp
xor
or
jnp
or
cltd
int3
in
decb
push
lods
jle
js
xor
call
mov
push
rcll
push
jmp
aad
cmc
cwtl
add
lds
adc
stos
jbe
jmp
or
mov
test
sbb
aam
push
pusha
lret
adc
jmp
push
shl
insb
adc
imul
jbe
or
jg
cwtl
xor
gs
jne
mov
shlb
add
call
pop
mov
in
pop
jge
mov
push
push
inc
and
push
lret
lcall
pop
lds
inc
sti
sahf
cltd
and
es
cs
or
xchg
in
in
je
or
pusha
loopne
mov
jo
addr16
cmp
adc
xor
rcrl
sahf
scas
int
jl
ds
cmpsl
enter
pop
mov
ret
mov
fists
adc
cmp
lret
push
imul
cmp
pop
enter
popl
cmp
lock
je
jns
ja
mov
and
movsl
mov
ffree
loope
pop
arpl
mov
push
or
xor
jg
xor
pop
pop
loop
test
lret
mov
mov
jo
jge
inc
repz
lods
pop
sub
jnp
andl
sbb
sbb
push
pop
scas
inc
pop
lods
jns
loopne
adc
mov
pop
and
mov
cmovbe
sti
push
lea
mov
aaa
xlat
sub
call
cmp
mov
adc
pop
sti
xor
xchg
mov
decb
inc
mov
jmp
or
jecxz
adc
pop
aad
and
jnp
cs
pop
cwtl
aas
xor
loopne
mov
or
dec
lea
push
jle,pt
adc
cltd
repz
jl
cltd
out
ds
and
repnz
dec
repnz
ret
js
mov
cld
jg
push
push
insl
push
xor
pop
xchg
ljmp
xor
jp
and
movsl
jns
jb
sub
push
push
sub
in
cmp
sbb
movb
push
dec
aad
cmp
addr16
cli
aam
fdivl
pop
dec
adc
ljmp
or
mov
fists
dec
jne
bswap
aam
sub
gs
test
mov
push
push
pop
dec
notb
cmp
pop
mov
sbb
mov
cmc
xor
shlb
mov
push
xchg
cmp
pop
or
aas
js
adc
ss
lret
pop
pop
arpl
push
lock
mov
ljmp
out
push
inc
in
jecxz
xchg
repnz
mov
pop
or
shll
movl
pop
pop
imul
mov
add
out
mov
inc
fbstp
sbb
hlt
jmp
pop
add
lea
jle
pop
scas
add
imul
fdivr
test
jmp
lret
test
out
aas
fistl
bound
lret
xor
loop
adc
shll
stos
pop
push
inc
scas
lret
jge
mov
xor
into
jl
inc
mov
inc
movsl
ret
mov
sbb
daa
jl
add
mov
lea
and
xchg
int
lret
fwait
sbb
in
add
psubq
adc
mov
insb
ds
scas
data16
or
insl
dec
loopne,pt
xchg
cmpsb
inc
jo
aas
xor
lea
and
stos
sbb
xchg
ficoms
push
mov
inc
mov
scas
outsb
jbe
arpl
mov
inc
jbe
cmp
loope
push
loope
addr16
sub
mov
dec
pop
inc
ret
xchg
cli
dec
dec
pop
sub
sbb
leave
xchg
push
pop
jle
mov
pop
sub
shlb
ficompl
sub
insb
sbb
int3
pusha
push
mov
and
push
idivb
jl
ficompl
xchg
mov
insb
cli
outsl
fdivl
cs
pop
insl
js
test
dec
ror
add
and
mov
sahf
out
dec
nop
add
stos
fwait
cmc
ficoms
xchg
stos
incb
jl
testl
das
rcrb
or
mov
cli
dec
lea
xor
push
movsl
mov
hlt
xor
sub
out
scas
jmp
and
cltd
fs
outsl
roll
lock
ss
in
subl
and
push
lret
es
clc
pop
push
sbb
cmp
xchg
mov
imul
int3
push
js
or
int3
mov
cmc
das
mov
mov
lahf
ds
pusha
popf
mov
std
iret
adc
dec
jl
mov
insl
xor
and
adc
adc
cmp
adc
arpl
push
add
outsl
dec
add
into
sub
and
lods
fs
and
sbb
add
mov
xor
push
mov
pop
cmp
inc
mov
imul
push
adc
shrl
xchg
dec
and
mov
popf
insl
fsubl
not
pusha
aad
pushf
sti
dec
incb
inc
xchg
iret
addl
into
fs
push
lcall
bound
inc
mov
xlat
cmp
xchg
pushf
xchg
cmp
jns
cmpsb
xor
rcll
iret
mov
ficomps
mov
push
leave
cmp
mov
mov
push
jnp
or
and
jbe
cwtl
mov
shll
adc
mov
out
push
mov
push
sub
push
hlt
adc
jge
push
stos
push
dec
xlat
fmul
mov
or
cmpsl
nop
ficoml
mov
pop
cmp
add
xor
movsl
aad
pop
sbb
sub
fs
pop
cmp
xchg
mov
push
cld
lahf
test
xchg
daa
jns
mov
cli
iret
aam
xor
or
jp
adc
pop
ret
dec
daa
sub
scas
xchg
scas
sarb
jnp
xchg
adc
add
sub
adc
sub
std
mov
sbb
mov
and
stc
mov
call
xor
ljmp
mov
outsl
int
arpl
test
mov
mov
ud2
mov
lea
jo
sub
cltd
inc
sbb
mov
pop
jbe
ds
sbb
rorl
outsl
pop
cmpsl
negl
push
ret
mov
mov
out
jmp
cmp
ljmp
jecxz
insl
add
pusha
inc
cmp
fnstsw
fld
sub
xchg
push
ja
out
in
and
adc
jp
xchg
mov
int
jmp
pop
xchg
data16
clc
jnp
adc
lahf
arpl
test
and
jns
jae
adc
test
fucomi
aam
jb
xchg
fimull
xchg
pop
pop
out
inc
inc
popf
push
les
dec
ficompl
mov
fdivrl
push
test
dec
and
or
xchg
push
pop
push
sbb
mov
mov
cmp
mov
fcoml
into
jge
and
int
mov
stos
ret
outsb
out
fldcw
mulb
inc
inc
push
ss
cs
sub
push
test
sbbl
sti
add
dec
mov
mov
adc
sub
cwtl
push
aad
jno
adc
add
mov
les
fsub
int3
mov
ss
sub
cmp
fnsave
loope
sbb
cmp
addr16
mov
inc
sub
mov
jbe
testb
les
and
mov
pop
cmp
or
jno
dec
mov
mov
lods
stc
ds
sarl
dec
orb
xchg
leave
sti
xchg
pop
hlt
out
mov
pushl
daa
mov
pusha
lahf
adc
lods
dec
lea
rolb
pop
movb
pop
pop
jne
add
fidivrs
sub
xchg
fdiv
cltd
or
mov
loopne
test
inc
aas
hlt
ljmp
dec
jbe
lods
stos
cld
rorb
xchg
lods
pop
push
and
pmaxub
fsts
lahf
xchg
adc
adc
mov
mov
pusha
sbb
shlb
es
aaa
dec
add
mov
movsb
bound
fldl
pop
push
inc
jge
push
xchg
jmp
cmp
js
xor
daa
lea
fstpl
shrl
or
das
orl
or
lret
sahf
lds
outsb
jp
jno
add
mov
and
repnz
retw
add
push
cmpsb
imul
mov
test
dec
jno
mov
lret
mov
insb
sub
mov
imul
clc
sbb
pop
mov
sbbb
mov
jnp
jns
ja
mov
mov
pop
js
out
xchg
jbe
jg
sub
out
stos
loop
mov
mov
or
aas
sbbl
dec
and
pushf
add
int
cmp
jae
leave
cmp
xchg
mov
dec
xlat
inc
sub
sahf
cwtl
dec
and
pop
shr
push
adc
movsb
cs
sub
test
mov
arpl
pushf
mov
data16
cmc
lahf
hlt
cmpsb
subl
hlt
rclb
and
mov
push
xchg
jge
sub
in
out
aad
pop
mov
shl
mov
pop
mov
cmp
push
call
xchg
icebp
mov
adc
cs
ja
int
out
enter
jbe
ret
sub
add
inc
lret
jns
maskmovq
testl
movsl
pop
rcll
inc
xchg
rcrl
ljmp
dec
in
rolb
mov
push
rclb
push
js
inc
inc
xor
mov
jp
mov
or
fs
pop
int3
movsb
pop
xchg
dec
mov
in
lods
mov
gs
out
push
inc
das
jnp
out
mov
mov
aad
icebp
fldt
or
pusha
rcr
adc
lcall
test
dec
bsr
and
sarl
clc
adc
fs
pop
push
and
shlb
cmp
inc
sub
inc
cld
or
mov
cmp
push
sub
add
hlt
test
fs
push
pusha
cmpsb
mov
push
or
aam
mov
push
or
mov
cmp
insl
pop
stos
int
sar
or
add
dec
repz
movsl
int
mov
gs
mov
add
inc
and
xor
pop
mov
stc
mov
sbbl
syscall
mov
dec
loop
sbb
xor
push
fwait
mov
dec
sbb
mov
mov
mov
fs
jne
lret
push
rorl
mov
fcoml
ja
push
xor
test
mov
int
add
movsb
cmp
arpl
lock
push
test
repnz
push
mov
fwait
pop
cltd
aas
push
movsb
inc
push
test
mov
in
pop
sub
mov
add
lahf
dec
jp
js
mov
mov
pop
or
std
les
jae
jge
notl
les
lods
push
dec
pop
outsl
roll
out
jg
or
cli
jnp
ss
inc
fs
push
sub
dec
push
xchg
xchg
bnd
fdivs
sbb
cwtl
and
into
in
lcall
jmp
shll
js
xchg
sbb
mov
add
cmp
fsubr
add
lods
sbb
repz
sbb
pop
inc
sbb
divb
push
xchg
add
lods
aas
xchg
xor
xchg
sahf
xor
in
jecxz
pop
les
js
mov
mov
cmpb
mov
add
testl
sub
mov
shl
scas
and
shl
cmp
je
daa
inc
dec
ret
ss
call
mov
data16
repz
and
movsl
xchg
sbb
mov
pop
sub
addr16
sbb
cmp
jecxz
lret
rcll
imulb
push
ret
rcr
jo
decb
aad
cmpsb
les
fsubs
dec
and
fists
cmp
jns
adc
decl
fadd
or
stos
lock
or
mov
clc
adcb
jnp
scas
sbb
jno
jmp
pop
mov
cmp
and
inc
sub
notb
cwtl
pop
outsl
xor
mov
or
sbb
lcall
mov
cmpsl
cmp
fwait
leave
or
pop
push
and
sub
mov
xchg
repz
lods
sub
aam
pop
stc
adc
lea
in
out
ror
rcrb
pop
pop
repz
lods
out
insb
dec
fcompl
les
jg
push
sbb
xor
sub
xchg
inc
jmp
mov
daa
mov
sub
jecxz
jg
imul
int3
mov
cmpsb
cmp
and
xchg
dec
mov
inc
ss
sbb
sbb
push
xor
lcall
lods
das
adc
add
mov
pop
out
ljmp
test
fs
push
shl
fsubrs
and
scas
cltd
insb
into
add
push
jns
js
pop
fstpl
dec
cmp
xchg
xor
inc
clc
popa
scas
xchg
or
fildll
jns
leave
push
adc
aaa
sbb
xchg
xor
stos
movsl
cmc
mov
mov
mov
adc
andl
mov
out
inc
call
xor
js
mov
xor
int3
jns
jle
movsb
sub
cmp
jne
jb
xchg
mov
jno
mov
adc
jae
jns
mulb
pop
or
rcrl
add
xor
sub
dec
adc
or
mov
jbe
mov
in
mov
mov
jg
inc
pop
pop
out
testl
push
stos
popa
push
mov
adc
in
mov
and
dec
pop
sub
or
lods
ss
xor
icebp
sub
cmp
mov
sti
out
xchg
call
inc
ljmp
xor
sbb
testl
hlt
adc
insb
xorl
add
add
outsl
or
push
fistpll
lret
add
pop
cwtl
push
sub
test
cli
xor
in
push
je
pop
je
mov
das
gs
pop
push
bound
rcl
push
lock
inc
cwtl
cltd
jo
arpl
mov
add
xor
inc
fldcw
jl
add
xlat
fimuls
andl
sarb
test
adc
and
in
xor
addb
mov
lret
dec
adc
xchg
orb
xchg
mov
sbb
jp
and
test
das
pop
dec
and
inc
pop
leave
push
cld
xchg
test
push
pushf
mov
gs
and
mov
stc
mov
in
mov
add
adc
jbe
jp
inc
adc
adc
iret
mov
mov
lock
mov
gs
jnp
popf
pop
inc
push
push
jae
jb
and
xor
inc
imul
or
mov
adc
push
or
cmp
push
lahf
fwait
iret
enter
fldl
aad
push
mov
imull
in
push
or
jno
addl
lcall
xor
jne
inc
dec
xor
push
jns
dec
js
pop
sbb
outsb
daa
jg
dec
pop
testb
daa
xchg
repz
jb
loope
mov
daa
push
das
aas
xchg
subb
fistpll
mov
mov
pop
cmp
push
sbb
sahf
mov
xlat
xor
fcomps
imul
xchg
push
mov
xlat
lea
or
xor
pop
js
out
pop
movsl
lahf
jne
xchg
int3
bound
cmp
jge
js
jg
mov
inc
test
sar
out
js
aad
cmp
adc
ret
pop
fsts
xor
xchg
mov
dec
or
mov
ja
pop
push
in
loopne
xchg
and
xchg
adc
bound
sbb
sbb
dec
aam
sub
xorb
loope
sahf
and
lock
sub
lcall
es
repz
testb
loop
push
mov
js
dec
scas
xchg
add
cwtl
push
sahf
mov
mov
sbb
rorb
mov
sbb
jne
xor
arpl
mov
outsb
arpl
mov
mov
imul
leave
xchg
insb
int3
push
mov
xchg
push
cmc
int3
bswap
repnz
sbb
xchg
sahf
dec
fndisi(8087
push
into
push
ss
adc
xchg
in
dec
mov
out
xlat
adc
dec
addr16
xchg
adc
mov
jge
ud1
insb
fxch
push
and
jne
sbb
mull
repz
ljmp
xorl
stos
dec
mov
or
jmp
std
inc
imul
sub
test
xor
loope
rorb
mov
or
rorl
std
jb
lock
not
fsubrl
cmp
cmpsb
or
jge
ds
push
jne
fmuls
bound
dec
push
jmp
adc
mov
shll
or
in
andl
xor
shrl
and
inc
mov
sub
xchg
fwait
xchg
or
jl
dec
xor
bound
mov
daa
pop
clc
jo
or
jno
xchg
mov
out
fstl
icebp
xor
or
cmp
sbb
lahf
xor
scas
addr16
lcall
lret
aaa
dec
daa
ss
sub
daa
clc
cltd
mov
push
xor
dec
dec
ja
jle
je
sub
fistpl
sete
outsb
or
and
outsb
ret
xchg
jns
adc
mov
adc
and
aas
jmp
inc
mov
ret
aas
sub
stc
nop
lock
pop
mov
cmp
out
fnstsw
shll
cmp
gs
push
lcall
or
ficompl
jp
or
sub
sub
mov
mov
out
les
sub
lods
mov
cmp
mulb
lret
adc
jbe
mov
das
pushf
xchg
jnp
dec
jno,pn
call
fidivs
push
fldenv
sbb
xor
sqrtps
cmp
inc
mov
cld
mov
lds
or
lret
inc
mov
push
mov
mov
mov
mov
das
and
rcr
sbb
adc
fs
inc
push
loope
jb
sbb
jo
adc
mov
mov
pop
ret
or
les
mov
js
xchg
xor
into
dec
and
push
in
mov
sbb
cmp
in
sbb
shrl
dec
mov
ds
sub
sub
sbb
int
jbe
fisubrl
loope
div
sbb
outsb
cli
aad
enter
and
xchg
cmpb
es
lds
and
push
fcmovu
xchg
cmp
xchg
sbb
pop
mov
popa
jns
jle
lods
ljmp
sub
outsl
stc
jge
stc
xchg
sbb
insl
jl
mov
mov
pop
inc
je
push
mov
sti
std
dec
jmp
and
jp
xor
imull
mov
bound
mov
leave
push
les
movl
stos
sbb
or
xchg
xor
daa
dec
sti
repz
movb
mov
mov
jo
adc
pop
fiaddl
mov
dec
inc
hlt
dec
pop
jmp
mov
stos
inc
dec
inc
sbb
ret
sub
andb
fs
outsl
scas
mov
mov
push
push
push
mov
ret
movsl
leave
stos
iret
fiaddl
or
xor
int3
jp
inc
dec
mov
scas
mov
shll
stos
outsl
dec
jl
sbb
jecxz
pop
rorl
jo
mov
fucom
xchg
lods
add
mov
pusha
std
out
mov
mov
and
loop
dec
out
adc
dec
ja
mov
mov
mov
pop
mov
jge
fimull
mov
scas
fstpl
pop
push
roll
subl
aad
add
cmp
flds
adc
push
stos
and
dec
aam
stc
or
outsb
sbb
push
xlat
in
jo
pop
push
mov
mov
pop
sbb
jne
mov
loope
inc
jmp
pop
mov
xchg
inc
mov
gs
enter
push
adc
in
outsl
fwait
repnz
mov
iret
jmp
in
mov
mov
fwait
inc
ret
std
mov
movsb
xchg
ja
ja
pop
aas
les
xchg
pop
mov
sub
hlt
xchg
ret
les
jae
lahf
jge
and
decl
jmp
hlt
push
icebp
mov
out
push
push
jns
inc
pop
sbb
pop
loope
pop
add
xchg
jo
aam
jecxz
neg
enter
xor
les
cmp
addr16
nop
xchg
sub
dec
cld
inc
mov
cmpsl
dec
mov
sub
dec
mov
xorl
dec
add
jl
cmp
lcall
insb
or
mov
xchg
enter
dec
dec
fwait
and
fidivl
mov
push
vcvtps2pd
test
int
sbb
loop
std
enter
jg
int3
mov
dec
mov
mov
add
cmp
sub
sub
movsb
cltd
daa
adc
mov
mov
jl
mov
rcll
sub
mov
stos
arpl
imul
je
dec
add
movsb
jae
push
dec
mov
ljmp
test
out
xchg
xchg
xor
ret
fdivrs
fdivrs
js
out
lea
cmpsb
psrlw
out
hlt
sbb
hlt
iret
mov
aas
ret
sbb
roll
fists
or
data16
call
pop
stos
negl
sbb
js
inc
or
data16
imul
mov
lea
add
and
negb
dec
mov
dec
fwait
adc
xor
pop
adc
fwait
mov
out
xchg
jnp
mov
std
adc
mov
enter
jecxz
mov
in
in
jmp
clc
aam
aaa
xor
lock
cs
daa
das
pop
cmp
sbb
out
pushf
jo
jae
and
pop
insl
cmp
ficoms
xchg
or
mov
add
dec
ss
ljmp
jnp
xor
popa
lcall
loope
pop
mov
divb
adc
popf
lret
push
sbb
mov
mov
mov
repnz
negl
addr16
inc
js
jg
test
mov
sub
loopne
ds
cld
sub
and
in
xor
mov
pop
pop
cmp
or
mov
aas
or
ljmp
lahf
dec
mov
into
out
xchg
imul
mov
loop
xchg
sti
pop
inc
mov
sbb
imul
and
cmp
fwait
add
inc
gs
jo
aam
mov
outsb
push
cmp
in
mov
sbb
fnstcw
rol
aaa
lret
loopne
push
mov
dec
jns
and
pop
jns
je
mov
flds
rolb
test
lret
daa
les
scas
sbbb
add
out
aas
and
out
xchg
repz
mov
movsl
ret
inc
push
std
in
mov
jmp
out
xchg
xchg
sbb
adc
add
mov
mov
rorl
xchg
dec
roll
lds
daa
pusha
inc
add
lret
negl
fiaddl
mov
ret
out
into
xor
flds
or
pop
mov
insb
sub
test
xchg
lahf
cmp
jle
cwtl
lret
xchg
fcoml
jbe
lret
jns,pn
lods
mov
adc
xor
xchg
int3
jne
cmp
mov
mov
sti
add
mov
pop
enter
add
jb
xlat
sub
ljmp
pop
or
in
jmp
add
mov
enter
adc
mov
push
test
mov
xor
dec
pop
scas
xor
pop
addr16
jge
fwait
mov
jle
add
push
mov
xor
push
ljmp
xchg
dec
in
add
and
scas
inc
fs
dec
out
add
push
mov
xchg
shrb
mov
or
leave
faddl
loopne
sub
push
inc
out
insl
cmp
or
addb
sarl
in
push
shll
imul
ret
add
and
push
adc
add
ret
or
inc
adc
out
fmuls
add
mov
sbb
jle
sbb
loope
mov
ljmp
cmp
movsl
fdiv
cmp
imul
mov
cli
and
lods
cmp
out
hlt
clc
stc
test
jnp
out
shrb
or
and
test
dec
ds
aaa
pop
xchg
fidivs
sub
cltd
ret
pop
mov
mov
push
adc
mov
push
jp
pop
scas
es
mov
push
xchg
mov
outsl
xor
or
int
push
subl
mov
js
xchg
int3
push
xchg
ljmp
loop
push
mov
lret
cld
pop
les
push
lods
jl
cltd
adc
jno
test
in
push
add
mov
mov
mov
dec
and
fwait
pop
sub
nop
cmpsl
add
mov
mov
iret
jnp
ss
nop
or
fildl
inc
fiadds
pusha
mov
incl
push
fsubs
movb
add
inc
popf
push
pop
or
sbb
inc
fwait
sbb
cs
mov
lock
lret
xor
mov
mov
and
jo
sub
je
mov
mov
test
push
loopne
cld
xor
imul
aad
push
xchg
test
aad
testb
jno
in
and
mov
enter
sbb
and
dec
inc
mov
test
xor
pop
icebp
fidivrs
mov
or
inc
mov
aam
inc
sub
lock
pop
shrl
xlat
ljmp
ja
out
test
scas
pop
xor
and
bound
addb
add
adc
jp
repnz
pop
dec
xor
or
cwtl
inc
subl
rcl
in
les
aas
jnp
outsb
ret
mov
jle
add
test
adc
jns
popf
cmp
cmp
xchg
cmpsl
arpl
inc
dec
lahf
mov
pusha
xchg
push
mov
inc
cs
dec
cmp
stc
mov
and
cmp
xchg
lahf
pop
pop
fidivs
movl
outsb
push
repnz
inc
cmp
je
aas
adc
mov
xor
mov
cmp
pop
mov
xchg
push
mov
inc
in
and
arpl
rcrl
pusha
lcall
dec
or
ficoml
in
inc
test
mov
mov
adc
ja
ds
scas
data16
fstpl
and
pop
rolb
sub
test
jno
shl
mov
mov
in
addr16
mov
sub
imul
test
add
xor
pop
stos
gs
and
int
mov
std
sbb
cmpsl
mov
jp
in
sbb
popf
outsl
xchg
jl
cvtdq2ps
or
test
mov
xchg
xor
add
push
sub
mov
inc
js
inc
sbb
xchg
jnp
fnstenv
mov
into
fucom
inc
addb
adc
andl
mov
jecxz
push
mov
inc
xchg
push
gs
push
mov
shr
stos
xlat
pop
inc
addl
add
cmp
lods
fs
repz
repnz
scas
das
cmp
int
mov
jbe
and
scas
or
movsl
insb
loopne
dec
add
scas
xchg
daa
mov
xchg
cmpsb
cli
mov
sub
scas
dec
cmc
sbb
movsl
jbe
xor
rclb
sub
mov
in
cld
mov
pusha
in
xor
mov
adc
fnstsw
xchg
mov
fstl
cmc
and
stos
cwtl
inc
mov
cmp
jle
jg
sti
sbb
cmpl
and
pop
iret
dec
dec
addl
rcrb
push
add
fs
add
into
clc
cmp
fdiv
js
mov
stc
pusha
inc
arpl
iret
xchg
mov
and
test
mov
jge
push
inc
push
mov
jmp
shrb
aad
mov
movq
and
and
pop
repz
shll
mov
and
iret
daa
jle
lahf
jb
add
push
and
mov
cmp
aad
xor
pop
out
pushf
sbb
out
cmp
pmuludq
push
ljmp
pop
mov
pop
loope
xchg
lret
pop
aaa
ja
stos
and
sub
hlt
inc
push
xor
fdivl
push
dec
add
add
inc
mov
hlt
les
xor
dec
xorl
ljmp
std
stc
jecxz
pop
sub
rorl
rcll
lahf
pop
std
mov
adc
and
into
mov
sbb
pop
mov
iret
or
xchg
push
insl
movsl
lret
call
fistpll
and
into
sarb
fiadds
mov
pop
and
pop
xor
ds
shl
lods
nop
push
dec
fmull
std
cmc
inc
cmpsb
loope
add
arpl
push
sbb
or
fsubrl
mov
lahf
sub
jbe
gs
imull
out
push
sbb
test
adc
push
jecxz
jecxz
jl
mov
and
ficomps
scas
in
push
jg
insl
push
jb
fs
mov
mov
dec
xor
mov
push
test
lock
mov
rcrb
push
sarl
imul
adc
sahf
push
fidivrs
lcall
push
mov
negb
xchg
cmpsb
js
dec
outsl
hlt
xchg
in
adc
push
mov
cmp
idivl
jne
add
lock
jbe
adc
mov
stc
aam
fcomi
pop
lock
movsb
je
jo
pop
rorl
and
pop
pushf
xchg
jb
xor
pop
stc
dec
push
jmp
or
repz
pop
shrb
mov
mov
hlt
ret
js
jl
and
sbb
andl
cmp
outsl
popf
das
fnop
cltd
mov
out
push
in
mov
pop
popa
ror
xor
dec
movsb
aam
in
sub
mov
xchg
ret
push
xchg
testl
sbb
pop
pop
pop
test
movsb
jl
add
icebp
ds
arpl
fimull
lret
insb
dec
xchg
roll
or
jns
adc
repnz
push
or
out
mov
adc
les
sub
leave
stos
mov
push
lahf
outsl
jl
data16
xor
fs
dec
sarl
or
jp
mov
jg
cmp
fistl
dec
clc
repz
mov
pop
out
xchg
mov
mov
lock
mov
inc
and
mov
sti
pop
jbe
test
lock
jmp
mov
loopne
mov
xrelease
clc
clc
jl
sub
imul
test
mov
jmp
adc
sub
out
cmp
lods
sub
data16
aas
mov
mov
xchg
int
fmull
and
ret
mov
cmp
mov
inc
push
stos
scas
aas
scas
pop
scas
push
test
sti
xor
push
das
shll
jnp
loopne
cmp
je
xchg
dec
jge
jg
lock
mov
inc
test
jo
mov
pusha
mov
jmp
mov
xchg
lock
int3
pop
pop
and
jo
mov
pusha
pushl
push
outsb
xor
dec
jecxz
mov
xor
jecxz
in
dec
pushf
mov
das
movsl
mul
mov
imul
mov
mov
push
jo
ret
push
sub
cli
sub
jbe
adc
pop
popa
adc
mov
popl
outsl
in
out
xor
stos
push
adc
fbld
mov
pop
pop
pop
addr16
lods
or
lcall
frstor
dec
ret
aad
aad
adc
push
lock
add
mov
test
das
cwtl
mov
xchg
mov
mov
xchg
jmp
shrb
mov
in
scas
or
dec
mov
adc
out
cli
popa
ljmp
jmp
outsb
push
mov
cmp
std
cmpsb
arpl
out
dec
insl
mov
dec
pushf
cli
inc
mov
cmpsb
xchg
cmp
popf
or
or
push
mov
idiv
nop
push
into
dec
adc
cltd
jp
repz
std
inc
or
das
add
cs
jge
sbb
pusha
scas
test
pop
loop
or
push
adc
andl
jb
jp
insb
xchg
add
xchg
sbb
push
push
ret
sbb
mov
push
mov
loope
lcall
lea
mov
movsb
pop
ja
scas
je
or
outsb
clc
xchg
lahf
js
xor
das
stc
icebp
xchg
mov
xchg
sbb
and
call
sub
dec
int3
mov
ljmp
mov
cmp
push
in
loope
cmp
pusha
into
mov
and
jb
ss
pop
adc
roll
cmp
insb
leave
test
cmp
add
mov
jmp
aam
aas
cmp
mov
outsl
outsb
mov
mov
dec
push
nop
loope
mov
cmp
cmpsb
mov
jno
inc
into
fisttps
push
or
stos
pop
scas
fwait
in
sbb
mov
out
hlt
mov
movsb
rcrb
cld
insb
enter
mov
leave
sub
mov
pop
cmp
push
fdivl
mov
ret
mov
mov
dec
int3
lods
stc
jbe
jbe
mov
mov
xor
cmpsl
std
lea
lock
fscale
push
inc
or
push
inc
fwait
add
ljmp
xchg
adc
jmp
push
xchg
cld
cld
push
add
adc
mov
lds
lret
pusha
mov
pop
dec
popf
aaa
and
pop
inc
push
in
arpl
pusha
aas
lods
gs
int3
ljmp
insb
arpl
jge
adc
shlb
add
ljmp
fmul
push
mov
adc
cmp
mov
iret
sbb
mov
fnstcw
push
ss
out
push
lea
cmc
mov
and
test
test
cmc
pop
and
mov
ret
sbb
mov
div
aad
jns
sbb
xchg
addr16
mov
pop
mov
imul
sub
jne
popa
mov
stos
icebp
push
and
add
push
mov
incb
sub
dec
lds
int3
loopne
jl
or
mov
in
xchg
cmp
adcb
or
lea
int3
les
pop
xchg
sbb
xchg
push
in
jns
jnp
inc
jmp
mov
std
jl
ljmp
pop
sarb
mov
or
enter
icebp
mov
sub
pop
loopne
imul
or
inc
pushf
mov
cmpsb
jg
mov
push
int3
pop
sbb
and
rcr
lods
sub
pusha
sbb
cmp
mov
sub
outsl
sar
lret
pop
mov
idivb
jp
and
insb
mov
in
xchg
cwtl
out
mov
mov
das
pusha
cmp
xchg
gs
test
dec
in
jp
das
pop
scas
xchg
push
addr16
xchg
cmp
negl
out
jnp
adc
lret
and
fcoml
jb
add
mov
jl
stos
cmp
popa
push
je
in
into
cmp
addr16
bound
push
mov
or
or
mov
pushf
jo
cmpsb
add
sbb
inc
cltd
aas
inc
fidivrl
sbb
cmovo
push
inc
in
in
sbb
shll
pop
pop
and
sbb
pop
jae
pop
ljmp
stos
push
ljmp
inc
xchg
into
bound
mov
sbb
push
ja
and
lcall
repz
aaa
jl
and
aad
pushf
add
dec
sbb
iret
or
hlt
popf
xchg
loop
scas
popa
xchg
push
dec
inc
nop
ret
pop
icebp
std
cltd
and
cmc
mov
mov
dec
lods
les
shrl
xchg
or
outsb
push
repz
sub
cmpsl
and
scas
inc
out
jmp
jno
cmp
push
hlt
adcl
and
fucomi
cwtl
xor
test
rorb
subb
arpl
test
repnz
jb
icebp
insl
push
popf
movsb
addr16
cmp
addr16
mov
mov
xchg
outsl
fwait
pushf
iret
test
stos
jmp
loope
mov
xor
cltd
rcrl
stos
sbb
cmpsb
inc
outsl
cmpsb
cmp
aas
cmpsb
lret
es
in
or
xor
sbb
jne
sbb
add
das
xchg
fldl
pop
movl
jne
flds
imul
adc
lds
ja
loope
out
push
adc
sbb
add
loopne
sbb
jl
in
inc
dec
xor
test
lds
jne
sbb
mov
mov
mov
jns
push
sarb
out
mov
add
sbb
mov
repnz
push
lcall
mov
inc
std
xchg
call
push
jmp
jle
repz
push
mov
and
std
xor
xor
ds
mov
adc
movsl
jae
fcoms
popa
daa
lret
popf
sbbl
push
divl
xchg
cmp
or
fmull
hlt
add
lds
add
rcll
inc
add
insl
outsl
dec
lret
cs
xlat
insl
mov
lahf
pushf
xchg
je
jp
pop
mov
mov
in
ficoms
aaa
sbb
fwait
push
out
outsl
sub
leave
jmp
add
movsl
vmovq
xchg
sub
pop
push
mov
and
sbb
aaa
mov
xor
sbb
pusha
lcall
pop
add
es
push
jmp
fstps
or
push
add
pop
inc
scas
shlb
lods
push
xlat
js
mov
inc
insb
into
mov
xchg
rolb
jnp
sub
arpl
test
js
jmp
inc
jbe
jp
sbb
xchg
jne
and
sub
mov
in
jmp
arpl
aad
mulb
imul
mov
sbbl
outsl
push
add
push
adc
xchg
xchg
mov
inc
notb
btr
jo
jl
daa
out
int
push
xor
ljmp
or
movsl
push
pop
popa
rcr
mov
ss
arpl
lcall
aas
aaa
sti
mov
sub
stos
push
adc
test
stc
xchg
cld
jno
rorl
fstl
aam
pop
mov
inc
jmp
xor
mov
xchg
xchg
xlat
stc
mov
sub
push
in
mov
sub
call
xlat
adc
and
inc
sbb
and
bound
push
inc
sahf
sbb
jo
pop
lock
mov
xchg
sbb
inc
inc
popa
cmp
in
sub
sub
cmp
add
lahf
pusha
dec
ja
inc
enter
xlat
xchg
and
pop
jp
jg
mov
outsb
mov
xor
mov
add
loope
mov
and
mov
fbld
lret
sub
sub
cli
pop
jb
xchg
mov
mov
xlat
das
test
pushf
inc
jae
ss
xor
fcmovnu
jne
out
repnz
pop
sub
mov
push
inc
push
mov
jbe
jg
loop
aam
subl
mov
cld
jne
sahf
imul
ret
inc
test
jecxz
stc
xor
mov
dec
dec
xchg
sarl
xchg
jno
mov
lret
pusha
and
pusha
test
les
or
or
ret
sub
ds
rcr
lods
aas
roll
mov
push
jo
cltd
bound
test
in
add
rcll
cltd
dec
mov
push
stc
popa
out
push
xor
arpl
fbstp
ljmp
cmp
xchg
xchg
ja
pop
out
dec
mov
fimull
data16
js
fcompl
inc
loopne
stc
ret
xchg
dec
pop
sarl
sahf
or
and
rcll
cld
imul
and
push
or
jae
dec
pop
sti
dec
adc
inc
adc
lock
inc
fnstenv
push
xor
add
fwait
mov
mov
mov
cmp
repz
dec
push
jo
movsl
pop
loop
repnz
sti
cmp
mov
je
sub
loope
mov
lds
dec
xchg
pop
add
pusha
cmp
out
add
flds
shl
inc
dec
jo
insl
add
in
push
enter
nop
adc
sahf
and
push
sbb
sub
inc
dec
xor
or
cmc
ret
in
xor
mov
or
out
mov
push
sub
mov
dec
push
pop
mov
jmp
pop
push
imul
adc
add
pusha
cmp
out
fists
sarl
xchg
rorb
add
jecxz
imul
mov
stos
add
ds
inc
dec
mov
xor
out
cli
xor
mov
test
mov
iret
ret
inc
jne
mov
lahf
in
xor
fdivs
jne
into
pusha
fwait
xchg
jl
push
jns
sbb
int
pusha
add
jnp
lods
mov
jg
dec
hlt
dec
cltd
test
add
addl
cmp
ljmp
mov
xor
and
add
icebp
mov
push
jg
dec
mov
pop
dec
aad
cmp
lds
jp
cmpsb
fiaddl
or
mov
je
movsb
adc
adc
mov
add
jecxz
mov
mov
mov
xor
mov
popf
pop
cmp
leave
packuswb
or
push
inc
inc
pop
sbb
test
loope
test
das
popa
shl
cmp
inc
cltd
mov
test
mov
jae
call
adc
push
dec
cmpsl
movsl
mov
push
mov
outsl
inc
hlt
jp
aaa
je
enter
clc
pop
test
mov
incl
sub
xchg
stc
lret
add
daa
dec
data16
addb
push
pop
push
in
sub
bound
popa
cmpsl
adc
add
scas
xchg
mov
imul
or
cmp
loope
mov
mov
jl
ds
icebp
dec
fsubl
mov
fnstcw
pop
pop
mov
push
cmc
pop
ficoms
push
pop
addr16
lea
dec
xchg
jmp
enter
mov
movsb
sbb
dec
sbb
pmulhuw
pop
scas
cmp
loop
sbb
icebp
test
mov
mov
aas
xchg
ret
fnstsw
repnz
and
jl
jb
pop
mov
jecxz
das
mov
fs
dec
jne
cmpsb
dec
and
iret
sbb
cs
or
movsb
cmp
in
xchg
xlat
mov
loop
inc
jns
push
xlat
push
addr16
push
pop
push
clc
jo
cmp
inc
arpl
gs
sbb
arpl
and
jbe
shll
mov
lds
ja
aas
jo
fcomip
cltd
pop
mull
mov
xchg
xchg
mov
pop
xchg
adc
cs
xchg
inc
dec
sbb
mov
cli
mov
jbe
sub
stos
adc
xchg
sub
sbb
aam
sbb
mov
test
push
add
push
mov
loopne
cmp
int3
and
inc
outsb
jno
popf
and
out
push
xlat
and
pop
mov
iret
out
fidivs
sub
inc
aas
adc
addl
lret
aaa
adc
dec
xlat
lds
outsl
rorb
popa
aam
pop
popf
mov
jmp
jne
cmp
orb
lods
add
cmp
mov
add
inc
lock
jbe
ja
jo
imull
mov
mov
mov
mov
repz
sbb
cmp
sub
pop
sbb
pop
clc
sbbb
out
stc
inc
insb
jl
fmull
daa
lods
mov
gs
outsl
mov
test
mov
aaa
les
fidivl
aam
inc
shrb
test
mov
mov
cld
mov
jo
inc
bound
jo
enter
mov
xor
sti
repz
jnp
loopne
dec
xchg
sub
enter
mov
iret
ss
pop
xor
rcrb
mov
aam
das
add
popf
pusha
fisttps
loop
fsubrs
cli
jmp
push
inc
and
xchg
subb
je
pop
fsubrl
add
push
mov
out
arpl
fdivs
stos
mov
hlt
fisubs
jmp
test
les
ljmp
ds
loopne
xchg
cwtl
int3
adc
add
inc
jg
pop
in
out
push
lret
hlt
mov
inc
in
pushf
dec
mov
das
add
repz
adc
aaa
adc
add
jl
outsl
and
scas
adc
or
cmp
mov
bound
adc
cmc
adc
and
test
xlat
filds
inc
sbb
mov
xor
pop
out
imul
xor
repnz
push
enter
adc
pop
scas
or
inc
cmp
adc
cmp
push
imul
pop
test
in
insl
loop
lret
xchg
adc
jl
repnz
shl
jns
stos
mov
paddsb
int3
push
add
sbb
and
push
and
les
int3
leave
mov
dec
lahf
int3
fdivrl
inc
aad
sbb
mov
mov
inc
lahf
negb
sub
or
add
std
bound
push
cmp
jl
jg
gs
fcmovu
ret
sbb
mov
add
lret
push
push
pop
dec
dec
add
clc
aad
jle,pn
xor
xchg
inc
leave
ret
mov
or
mov
cmp
jbe
push
inc
in
insb
not
adcl
pop
sub
stos
push
je,pt
fyl2xp1
dec
fsub
jno
cmp
iret
and
fdivs
push
inc
imul
ja
imul
cmp
ret
mov
sub
dec
insb
pop
adc
fidivl
sub
mov
jecxz
adc
testl
out
mov
stos
daa
movsl
shl
clc
dec
push
inc
ljmp
les
adc
mov
nop
dec
add
sub
icebp
sbb
ss
inc
mov
inc
loope
xor
mov
test
cmc
nop
add
adc
mov
xchg
add
hlt
jns
mov
and
pop
dec
push
push
push
sbb
jmp
pop
mov
jo
fmuls
mov
imul
pop
data16
ljmp
rcrl
cmp
cmp
pop
inc
xor
jecxz
mov
aad
mov
cmpsb
out
pop
mov
ds
mov
inc
ja
pop
xor
addr16
fstl
shl
orl
mov
and
bound
leave
filds
pop
hlt
hlt
sbb
sbbb
divb
jae
into
jno
jne
mov
lods
out
scas
les
clc
mov
push
int3
das
dec
nop
sub
jge
sbb
fsubr
cmp
pusha
repnz
sub
add
jns
into
pop
fisubs
movsl
adc
and
popl
fstps
adcl
push
pop
das
cmp
outsl
xchg
pop
popa
test
sbb
stc
ljmp
adc
mov
mov
jl
sti
jbe
push
or
fdivr
mov
inc
jecxz
int
inc
and
jmp
ja
xlat
xor
xor
insl
pop
cmpsl
dec
test
imul
or
mov
sbb
fwait
or
sub
lea
out
push
cmpb
pop
sub
call
jae
fistpl
scas
and
stos
sub
dec
cmp
xchg
mov
xor
insb
push
dec
shrl
bound
filds
int
int3
xlat
mov
dec
icebp
or
cmp
xor
mov
xlat
lret
test
leave
xchg
ss
test
pop
lahf
sti
mov
sub
mov
iret
fwait
xchg
jecxz
cmp
mov
dec
loope
mov
mov
xor
loop
out
movsw
addr16
fwait
jo
jmp
nopl
sbb
inc
add
insl
addb
xchg
mov
mov
push
or
or
std
adc
adc
jb
adc
sbb
fwait
mov
jl
lcall
push
pop
push
scas
ds
mov
pop
shrl
dec
fistpl
add
mov
icebp
dec
stos
cs
std
adc
jo
and
xchg
sbb
out
loop
add
hlt
push
xchg
adc
push
insb
pop
js
shrb
mov
pop
pop
testl
mov
xchg
mov
inc
jb
and
ss
test
aam
sbb
sbb
add
dec
or
jb
loope
inc
lahf
inc
xor
lcall
in
pop
in
fisttpl
cwtl
test
shlb
jbe
inc
push
xor
cs
repnz
fs
aam
popa
js
lods
out
sub
fisttpl
negb
jl
adc
insl
sub
sub
ret
nop
jmp
loopne
cmp
xchg
call
nop
mov
add
push
shlb
ret
fs
sbb
fs
dec
negb
jle
insl
xchg
fchs
jne
mov
call
repnz
sbb
cmp
pop
jecxz
pop
fs
jne
push
addr16
shrb
stos
xchg
push
mov
fcoms
outsl
movsb
movsl
jbe
xchg
ss
push
bound
or
dec
pop
jo
addr16
subl
sbb
lds
or
repnz
inc
inc
mov
pusha
cli
sahf
sub
mov
sub
sub
addr16
mov
scas
in
pop
test
sub
and
insl
popl
lods
shrl
bound
push
pop
mov
inc
aam
cmp
add
lahf
push
add
inc
shr
mov
in
or
mov
aas
mov
add
add
es
mov
incb
cmpsl
sub
call
cmp
or
das
sbb
cld
stos
sahf
outsl
shrb
sarl
cmp
xor
sbb
gs
sarl
cmp
and
xchg
cmp
mov
fwait
dec
xor
inc
mov
cmp
test
loop
hlt
clc
fs
xor
stos
mov
repz
mov
mov
mov
xchg
mov
pop
pop
push
sti
inc
inc
jns
jmp
xor
icebp
jle
mov
jl
push
in
sub
push
pop
mov
inc
add
popa
in
xor
in
fisubrs
pushf
scas
adc
repz
cmpsb
arpl
popf
test
repz
dec
add
jle
std
shl
test
xchg
mov
xchg
lea
mov
xchg
dec
pop
scas
fdivl
mov
jle
push
sub
cmp
scas
jns
scas
cmp
and
mov
pop
outsl
xor
cmpl
mov
mov
xor
ret
xchg
adc
out
push
cmpsl
cmp
in
add
mov
sbb
mov
push
xchg
push
pop
add
stc
gs
ret
sbb
mov
xorl
rolb
cmc
inc
jo
fwait
mov
dec
mov
jnp
xchg
ja
outsb
subb
call
lahf
repz
pushf
loope
addr16
lea
lcall
and
xor
int3
fwait
movsb
dec
cmp
loop
mov
jge
dec
adc
stc
mov
cwtl
jle
popw
cmp
gs
addb
enter
dec
mov
xlat
push
lock
jl
jl
sub
dec
and
fisttps
ss
ja
insl
aaa
adc
out
mov
adc
inc
scas
mov
pushf
cmpl
notb
xor
lods
aam
out
jbe
bnd
out
or
push
out
jne
aam
pop
pop
ljmp
add
jg
ljmp
mov
in
arpl
xor
sbb
test
and
xlat
stos
addr16
jnp
ja
mov
xor
mov
rolb
cmp
sub
xor
sub
daa
int3
mov
dec
mov
mov
adc
cli
mov
in
push
xor
cmp
adc
mov
dec
xchg
push
jbe
nop
sahf
inc
out
test
sbb
add
das
push
xchg
push
and
js
popa
mov
lock
pop
notb
das
add
shrb
dec
int
pop
and
out
repz
fnstsw
movsl
cltd
int
fcompl
daa
stos
cmp
idivl
sbb
pushl
ds
push
rcr
jne
xor
mov
xchg
dec
mov
cmp
cmp
hlt
cli
ffreep
es
dec
femms
jno
in
in
cmp
lea
sub
adc
sbb
xor
lcall
into
sti
sub
scas
icebp
dec
cwtl
inc
push
jecxz
rclb
mov
icebp
mov
or
subb
loope
jmp
xchg
loop
cmpsl
mov
lcall
test
xorb
cmpsb
loopne
jl
adc
idivb
fsubs
imul
mov
mov
jb
shrl
rcll
push
fists
push
xchg
fnsave
pop
fldt
repz
insl
fistpll
sub
push
imul
shlb
pop
mov
fldt
xchg
sub
mov
clc
gs
or
mov
es
loopne
daa
jne
fisubrs
insb
sub
inc
jp
jns
sbbl
lret
sub
das
cmp
inc
imul
negl
fs
add
sub
test
scas
adcl
cli
pusha
cmpsl
push
sbb
ret
sahf
jo
add
sbb
dec
cwtl
pop
mov
in
fisubl
sub
out
stos
and
mov
pop
addr16
sub
or
jb
pop
adc
movsb
bound
add
add
pop
mov
mov
repnz
out
popa
mov
std
adc
cmpsb
cmc
lret
pop
dec
fwait
xor
sbb
iret
shrl
add
inc
sub
adc
xor
mov
cld
mov
je
jl
fnstcw
jbe
or
pop
push
jbe
mov
and
and
ljmp
dec
dec
adc
xor
sti
push
mov
repz
mov
adc
pop
xchg
bound
outsb
insb
mov
lods
imul
movsb
mov
inc
cmp
sbb
cmp
push
hlt
add
mov
mov
sbb
adc
push
in
mov
add
out
or
push
add
sub
mov
pop
imul
lods
push
pop
mov
les
into
sbb
mov
mov
fsubrl
vorps
divl
adc
mov
push
cli
mov
stos
aaa
jecxz
int
push
mov
xor
lock
xchg
inc
mov
out
rcll
inc
outsb
jne
call
ss
jmp
stos
aaa
int
sbb
xlat
add
in
test
mull
mov
aas
cmp
sub
push
add
ds
sbb
sbb
adc
jbe
sbb
mov
ret
outsb
addr16
cmp
push
sahf
or
ret
xor
leave
cmp
inc
shll
lea
add
push
push
inc
mov
lods
iret
sub
jb
mov
punpckldq
inc
cmp
inc
mov
fdivs
jne
add
std
js
in
mov
mul
hlt
jecxz
iret
movsb
inc
mov
leave
fcomi
or
es
pop
pop
fdivs
xor
pop
in
adc
jnp
mov
mov
ja
xchg
cltd
and
xchg
mov
mov
push
mov
xchg
sbb
mov
aad
cmp
aam
push
lahf
adc
cmpl
aam
sti
sbb
sub
mov
sti
mov
dec
inc
aad
fcoms
inc
push
inc
in
push
jmp
push
loopne
xchg
mov
cltd
addr16
aam
shl
cmp
shl
xchg
jno
adc
jmp
das
pop
pop
aas
inc
faddl
out
rorl
mov
fwait
xchg
insl
fdivp
es
sbb
sbb
fidivs
loope
lcall
aaa
jae
ja
push
xchg
mov
movsl
pop
idivl
xor
imul
movsb
mov
push
or
in
or
push
mov
icebp
addl
cmp
cmc
jg
sysexit
sahf
lea
fdivrl
inc
push
cmc
add
bound
cmp
adc
daa
add
lret
lcall
out
repz
mov
insb
nop
fcmove
cmc
popa
or
pop
decb
xor
dec
cmp
mov
ds
jno
push
inc
jge
bound
cs
rorb
mov
loop
inc
pop
jmp
cltd
push
fs
jmp
push
icebp
les
or
jp
xlat
mov
leave
mov
push
insl
je
add
rorl
inc
in
sahf
adc
insb
jbe
cmp
insb
sbb
or
sub
lea
pop
dec
lods
int3
iret
xlat
pop
push
test
cmp
stc
ja
movsb
aad
dec
repnz
mov
adc
lea
test
outsl
cmp
push
addr16
adc
js
add
xor
xor
stos
ljmp
push
push
sbb
ljmp
repnz
adc
push
scas
jl
aad
jo
stc
je
dec
lcall
pop
jns
pop
push
xor
lcall
faddl
test
jmp
icebp
sbb
mov
mov
push
adc
jle
int
outsb
or
sub
and
mov
xchg
or
inc
cmp
iret
test
push
mov
in
into
fisttpl
lret
add
push
mov
lock
jb
std
mov
test
mov
fildll
inc
ffree
je
mov
mov
mov
push
test
addr16
aas
repnz
data16
aam
jb
das
push
gs
dec
jecxz
imull
ficoml
cs
jl,pn
fdivrs
jnp
and
sbb
js
out
stc
out
imulb
loop
mov
outsb
dec
mov
sbb
fisttpll
mov
cltd
scas
adc
jne
inc
pop
push
clc
movsb
pop
into
push
and
cwtl
or
ljmp
sub
aad
jle
lcall
push
mov
imul
insl
aaa
mov
push
jp
add
mov
xchg
arpl
push
sub
leave
ret
sbb
xor
mov
adc
xor
popf
ds
xchg
jg
lret
call
cmpsb
leave
xchg
out
loope
and
xchg
pop
lahf
mov
xchg
xchg
or
cmp
dec
cmc
inc
sbb
xor
outsl
sbb
fwait
pop
call
mov
mov
mov
or
icebp
inc
mov
or
xchg
jo
sbb
mov
mov
xchg
cmp
push
repz
shl
push
lret
inc
icebp
movsl
cld
xlat
enter
dec
out
push
push
mov
mov
or
std
mov
mov
or
sahf
xchg
sahf
cwtl
dec
aaa
sbb
les
in
mov
jmp
inc
xor
sbb
hlt
jbe
mov
pop
mov
ret
dec
xadd
and
in
ds
cmp
add
mov
add
out
jnp
add
ja
pop
cmpsb
stos
loopne
aad
xor
movsl
dec
lret
mov
fs
sub
cmc
inc
adc
nop
ret
push
fwait
cli
jmp
out
dec
bt
cwtl
inc
popa
pop
push
inc
lcall
data16
pop
push
jge
push
js
sti
pop
xor
imul
enter
cli
fs
sub
jne
dec
dec
cmp
mov
xchg
push
or
mov
pop
inc
test
clc
scas
test
sbb
loope
scas
fucomi
and
dec
and
aad
rcl
leave
clc
and
retw
mov
xor
cwtl
divb
cmp
inc
jle
jle
fidivs
dec
cmpsl
sbb
and
ret
mov
mov
jns
push
mov
mov
push
adc
rolb
stos
add
daa
and
cmp
inc
mov
or
mov
std
sbb
out
icebp
scas
push
dec
daa
push
sbbl
push
enter
fwait
pop
aad
jb
push
sbbl
and
ss
mov
mov
test
cmpsb
add
mov
out
mov
lea
inc
adc
add
dec
outsl
xor
in
repz
movsb
or
xor
sub
aaa
scas
in
xlat
push
sbb
or
xor
shlb
arpl
inc
lods
cltd
cmp
jno
cmpsl
icebp
xchg
cmp
movl
xchg
call
cmc
popa
dec
and
hlt
cmc
mov
scas
pop
fst
add
or
mov
fidivl
les
ljmp
fmull
loope
cwtl
mov
lret
test
xchg
aad
lcall
aad
mov
sbb
aaa
push
mov
je
jle
mov
int3
dec
pushf
mov
sbb
sub
pop
movsb
fnstcw
notl
sahf
xorb
sahf
xchg
insl
loope
es
mov
addr16
xor
andb
inc
sub
movsl
adc
sub
jmp
pusha
pop
daa
rcrb
sub
mov
daa
iret
roll
jnp
sar
jo
popa
stos
add
out
jo
sbb
mov
mov
in
mov
orb
out
adc
adc
jg
pushl
shrl
cs
das
pop
sub
stc
aaa
in
mov
cmp
mov
push
dec
imulb
fimull
icebp
adc
and
ja
sub
daa
loopne
enter
sbb
shll
cmp
jne
cmp
jge
test
mov
std
ret
cmp
push
xor
cli
pop
idivl
in
scas
sub
mov
ljmp
fbstp
scas
pop
aam
add
lret
cmpsl
lret
inc
bound
pusha
mov
int3
fcoml
into
addb
adc
adc
pusha
test
test
fadds
xchg
add
xor
dec
or
int
mov
dec
pop
push
in
jne
imul
cli
fisttpll
mov
jp
rolb
jbe
mov
sub
aam
cmp
pushf
ret
cmpsb
out
pushf
inc
and
loop
leave
inc
mov
sub
loope
mov
or
aad
stc
mov
adc
mov
jno
or
sbb
inc
loope
insb
lcall
xchg
lret
mov
arpl
repz
or
add
mul
inc
or
inc
ret
xor
dec
fstpl
les
push
scas
cmpsb
dec
adc
adc
or
sub
sub
fistps
mov
xor
mov
movsb
inc
sub
dec
loope
inc
jnp
pop
add
in
sub
mov
push
leave
mov
stc
les
mov
and
or
mov
out
inc
pop
or
sbb
xlat
add
xchg
jg
sub
cwtl
arpl
cld
and
xchg
ds
mov
mov
or
jns
mov
mov
cli
cmpsb
call
mov
dec
jg
jecxz
xor
xor
push
pushf
and
out
out
xor
in
aad
pop
mov
xchg
and
andl
test
and
jae
and
fstpt
iret
das
cmp
enter
data16
jg
shll
in
jo
inc
mov
jno
inc
fwait
icebp
iret
adc
bound
pusha
imulb
jp
jbe
out
lods
pcmpeqd
pop
mov
test
pop
subl
push
lods
es
jnp
jle,pt
push
push
mov
cmp
popa
inc
push
lret
xchg
and
pushf
sbbb
pop
faddl
gs
ficoml
data16
in
in
je
icebp
xor
repnz
jbe
sti
jmp
sub
xlat
mov
in
gs
in
dec
mov
cmp
mov
mov
pop
xchg
scas
sub
shll
xor
mov
mov
jmp
bound
cmp
pop
cmc
mov
xchg
cmp
fnsave
fimuls
test
fcomps
mov
fld
ss
add
push
imul
xchg
mov
sbb
sbb
push
je
mov
cmp
popa
push
cwtl
mov
lds
test
xchg
decl
sub
test
xchg
push
jns
sbb
push
mov
mov
or
mov
mov
sbbb
and
and
adc
lcall
cltd
lods
mov
scas
es
std
adc
aam
push
mov
sub
pop
mov
test
rolb
test
xlat
xchg
std
in
sarb
jne
xor
sbb
lock
jb
xchg
push
lea
in
xchg
fdivrs
aad
dec
ds
dec
pop
mov
mov
mov
inc
clc
mov
dec
arpl
mov
andb
or
and
dec
sbb
push
and
rcrl
mov
out
jno
dec
inc
pop
jp
ret
push
jecxz
cmpsb
cltd
sbb
std
and
jle
xchg
invd
sub
out
fwait
push
inc
std
hlt
dec
cmpsb
push
orl
inc
cmp
inc
lock
and
mov
loopne
cltd
scas
int
stc
sbb
stos
js
mov
xor
sub
push
loope
cmp
cmp
jnp
inc
lock
xor
movsb
je
cmc
add
jle
jmp
stc
cli
fmulp
rorl
add
and
jns
and
in
xchg
add
inc
adc
push
std
leave
cmpl
jp
lods
push
xchg
mov
pop
push
in
push
loope
sbb
iret
add
jns
sarb
xor
pop
in
in
out
push
sbb
stc
and
jle
or
out
es
mov
pop
cli
out
xchg
mov
in
lcall
fsubrl
mov
sub
dec
imul
jmp
iret
push
int
scas
dec
cmp
aam
mov
or
mov
xchg
pop
test
jns
jge
lret
adc
sub
mov
xlat
jno
mov
adc
jo
popf
cwtl
jns
pushf
mov
lret
int
dec
ficomps
out
adc
mov
neg
adc
lcall
sbb
xor
cld
jno
out
lcall
lock
mov
dec
dec
or
arpl
xor
add
cs
data16
cmp
outsb
int3
in
hlt
push
dec
insl
ret
pop
mov
subb
xor
fs
fs
mov
xchg
outsb
movsb
pop
fwait
jae
insl
sbb
mov
cmp
adc
add
mov
aad
scas
frstor
cmpsl
insl
jmp
inc
insl
sbb
stc
sbb
popf
fisttpl
adc
aas
mov
xchg
cmpsl
sbb
xchg
fildl
gs
out
in
or
js
in
mov
xchg
adc
cmp
mov
cmp
sub
jo
loop
adc
jp
das
data16
icebp
inc
imul
fmuls
fistpl
inc
sbbl
xchg
add
sbb
enter
addb
into
out
jno
lret
adc
and
inc
jne
adc
shll
cmpsl
jns
pushf
xchg
sub
and
push
aam
xchg
ss
jmp
into
dec
push
lcall
dec
jge
dec
add
or
dec
sub
pop
rcrl
cld
sbb
es
push
repz
pop
add
sub
sbb
rclb
pop
stos
pop
mov
aaa
add
xor
mov
add
daa
out
pop
inc
mov
xor
aad
push
and
add
cmp
sahf
mov
jo
mulb
aaa
fwait
and
jnp
cs
movsl
cltd
pop
xor
cwtl
pop
outsl
jb
inc
mov
or
and
or
push
jg
std
push
fwait
push
out
aad
pop
pop
arpl
add
add
inc
cmp
in
mov
popf
popf
scas
fnstcw
pop
dec
lods
xchg
and
out
popa
sbb
dec
cmp
rcrb
mov
rclb
es
xchg
cmpsl
bound
ja
add
enter
xchg
xor
ljmp
in
mov
add
ret
loopne
xchg
cmpb
data16
inc
aad
data16
or
mov
adc
xchg
into
adcb
cwtl
icebp
inc
xor
push
test
sbb
lea
inc
and
sar
and
lahf
sbb
outsb
les
jae
or
enter
push
mov
mov
movsl
pop
fwait
sbb
add
mov
dec
sub
jl
cmp
mov
in
mov
jecxz
cmp
sahf
lods
dec
idivl
lods
mov
dec
int3
out
lods
jmp
lock
pop
pop
daa
mov
mov
add
stc
dec
leave
mov
jne
or
stc
mov
xchg
and
push
jae
cmpsb
lcall
jle
cmc
addb
jg
popa
arpl
pop
mov
and
lds
call
rorb
movsb
mov
lahf
mov
leave
sbb
dec
push
jl
jbe
fdiv
test
xor
icebp
push
fs
rorb
jg
test
xor
shr
sbb
es
rolb
mov
xchg
popf
xor
in
and
inc
mov
sub
imul
icebp
lock
dec
loope
or
mov
sahf
cmp
sub
cmc
jno
in
mov
dec
push
push
pop
or
add
sub
dec
fimull
xchg
shr
ds
mov
mov
mov
cld
out
mov
push
mov
xchg
fcmovu
push
jp
cmp
push
sahf
lods
dec
push
test
sti
dec
dec
scas
xchg
shlb
enter
cltd
fcomp
out
jmp
daa
das
loope
or
add
test
js
movsb
addb
sub
bound
lods
fs
je
sub
test
mov
cmpsl
cmp
mov
jns
leave
cmp
dec
mov
popf
xor
cli
cmpsb
xor
mov
movsb
scas
fcmovbe
add
add
ljmp
mov
jnp
ljmp
push
sub
xchg
fdivs
cwtl
adc
adc
shr
xchg
or
pushf
add
adc
lret
inc
cmpsb
push
xlat
jl
xor
sbb
push
push
sub
sahf
leave
mov
stos
ljmp
in
idivl
xchg
xchg
stos
data16
add
out
add
mov
sub
lret
push
pop
stc
int3
into
or
or
dec
dec
cmp
jnp
sbb
xlat
sahf
lret
fs
sbb
cltd
mov
adc
pop
jmp
jnp
subl
fdiv
or
xchg
xchg
ja
imull
inc
jle
dec
jns
dec
sbb
loop
sarb
mov
xor
dec
mov
sbb
push
outsl
je
lret
xchg
dec
daa
sbb
and
in
mov
sbb
mov
andb
jbe
cmc
mov
or
add
mov
repnz
dec
push
loop
push
shl
addr16
or
shl
sarb
call
xchg
aad
push
fcomps
and
dec
inc
jp
add
jae
pop
repnz
scas
jns
mov
xchg
or
div
popf
mov
andb
adc
test
pop
sub
xchg
mov
lods
ds
leave
mov
into
jno
shll
push
sbb
sti
gs
jae
lret
or
js
std
dec
push
pop
fcoms
mov
xchg
sbb
jb
adc
cmp
ljmp
addr16
orb
cli
and
pop
push
fxch
sub
xor
sarb
push
movsl
jb
or
pop
dec
pop
stc
in
outsl
xor
cwtl
mov
cmc
sbbb
loope
sbb
fiaddl
push
stc
push
cmp
sbb
ret
rcr
and
mov
ja
adc
call
push
xchg
mov
and
fs
fisubrl
clc
call
repnz
icebp
lcall
jo
xchg
data16
jl
cwtl
jae
pusha
pop
subl
stos
xor
sbb
xchg
mov
pop
dec
jmp
aas
add
scas
arpl
sbb
icebp
sbb
dec
dec
push
xor
addr16
mov
xor
out
icebp
mov
es
adc
ss
inc
mov
xor
pop
shrl
sbb
enter
inc
lret
push
cmp
or
push
call
lret
cli
imul
loopne
push
add
or
push
data16
jl
sbbb
cs
mov
lea
int
pop
adc
mov
jl
xchg
call
repnz
sar
add
push
idivl
pop
xor
out
loope
cwtl
jbe
arpl
mov
aam
int3
push
mov
mov
xchg
mov
aam
lahf
xchg
jo
mov
ret
inc
push
sub
add
sbb
sub
popa
stos
pop
push
or
add
into
mov
gs
and
push
imul
lret
stos
sub
in
inc
std
push
push
add
jp
mov
lret
adc
mov
push
in
lods
jecxz
add
dec
or
jns
mov
shr
sub
add
mov
in
movsl
lods
cli
sahf
jl
dec
imulb
push
pop
inc
mov
jb
add
popf
out
les
xor
or
inc
in
sbb
in
mov
mov
pushf
xchg
and
out
rorb
daa
inc
je
mov
fld
fwait
mov
sub
mov
xchg
xchg
pop
aam
dec
fwait
add
push
mov
xchg
mov
mov
jnp
pushf
jl
mov
push
roll
movsl
cmpsb
adc
test
test
mov
test
add
mov
enter
mov
pop
leave
adcl
cmp
pop
or
stos
pop
aad
lds
test
jp
scas
fs
sub
icebp
jl
lcall
inc
lcall
dec
dec
dec
js
or
push
or
repz
mov
mov
leave
xlat
xor
mov
xor
xchg
push
divb
movsl
pusha
scas
imul
scas
int3
jp
insb
mov
xor
sbb
test
inc
mov
push
or
lret
push
aaa
fsub
xor
cltd
jns
add
dec
cltd
lock
dec
push
adc
icebp
ret
xor
push
or
fs
cli
std
cmp
mov
mov
gs
pop
enter
xchg
subb
add
mov
subb
mov
xor
dec
dec
push
cld
out
mov
mov
lret
push
fildll
or
cltd
cmp
cmpsl
add
cltd
and
adc
xchg
sbb
outsl
jg
adc
inc
ljmp
in
test
rolb
cmp
jae
adc
repnz
repnz
and
jg
add
inc
lcall
push
out
sbb
adc
mov
mov
loopne
pop
dec
jb
adc
pop
mov
fistps
adc
cmp
jmp
push
dec
jl
test
lock
cmpsb
push
push
cmp
cmpsl
outsb
ljmp
loope
xlat
push
mov
xor
repnz
out
push
mov
mov
mov
cwtl
jle
add
xor
lods
mov
pop
mov
sub
inc
inc
pop
or
aad
sbb
insl
test
lock
push
mov
jmp
rorl
in
lahf
lock
pop
icebp
hlt
xchg
mov
sub
ja
jge
add
push
lods
sub
cmp
adc
mov
aad
fwait
mov
bound
daa
das
add
jb
ja
mov
xlat
shl
divb
pop
or
outsl
pop
insb
and
subb
cmc
xchg
je
test
pop
mov
nop
dec
mov
mov
pop
test
mov
and
mov
mov
mulb
sub
ret
xchg
pop
sbb
popa
inc
stc
std
cmp
pop
cmp
das
push
cmp
sbb
lret
and
jno
aas
xchg
adc
push
or
push
jo
jmp
inc
push
ret
lcall
lods
cmpsb
push
enter
push
inc
and
mov
jl
lods
push
es
add
int3
mov
movsl
or
test
mov
mov
sub
mov
out
cmpl
in
stos
mov
or
jecxz
outsb
scas
je
dec
mov
movsl
cmp
xchg
and
repnz
xor
sub
or
dec
inc
push
ss
aam
fxch
mov
lock
int3
cli
out
loope
xlat
mov
sbb
mov
aam
push
adc
shr
jl
xchg
add
mov
push
push
rolb
mov
cs
cmp
xchg
push
aas
cmp
nop
jbe
stc
roll
cmpsl
mov
ds
push
inc
mov
and
push
mov
add
fsubrl
xchg
lret
xchg
mov
fistps
notb
pop
ret
pop
subl
testl
es
push
sbbb
lahf
xor
shr
test
cmc
mov
dec
jbe
adc
inc
imul
test
repnz
jns
and
fdivl
bound
xchg
push
in
mov
bound
lods
push
sarl
sbb
imul
imul
lret
mov
mov
xor
idiv
cwtl
sub
mov
pushf
lret
jns
bound
out
adc
out
inc
sbb
lcall
cwtl
push
dec
xchg
fidivl
dec
std
pop
lods
xlat
xorb
enter
scas
shll
subl
jp
cmp
das
wbinvd
in
jp
and
subb
lret
sub
or
test
jge
or
dec
fwait
loopne
out
outsl
test
scas
sbb
scas
sub
cmp
push
and
push
fisttpl
daa
ja
cld
lods
inc
push
push
cmp
or
cmp
mov
sti
adc
addr16
imul
shlb
mov
push
mov
and
push
or
hlt
cmc
fnstenv
push
mov
ret
shrl
adc
into
imul
dec
mov
test
cmp
cmpb
jp
adc
fstp
adc
adc
hlt
sbb
xor
cltd
stos
push
cltd
jns
fsubr
inc
fs
ds
scas
mov
sbb
xor
adc
lahf
dec
jecxz
mov
xor
outsb
jno
rol
mov
inc
push
dec
pop
int
push
pop
and
repz
jne
xor
push
or
stos
arpl
dec
mov
loop
and
pop
jne
and
int3
xchg
fldpi
mov
icebp
daa
jns
jae
dec
push
pop
std
dec
xchg
stos
lea
sahf
sti
add
aam
test
mov
push
in
xchg
or
adc
mov
cmpsb
or
cmp
stos
and
sbb
cmp
add
and
js
stos
jbe
adc
dec
cmp
or
mov
cltd
std
clc
enter
add
mov
sti
fwait
mov
jl
and
out
popa
ss
daa
push
repnz
lret
pushf
jle
lss
and
pop
std
jns
or
leave
sub
fcoml
hlt
mov
data16
out
inc
cmc
sbb
mov
or
es
fs
lea
gs
jne
call
nop
pushf
lahf
adc
jns
mov
pop
adc
jno
mov
mov
stos
ror
add
ss
push
cmpsb
inc
lock
jnp
mov
adcb
xor
jecxz
push
shlb
push
mov
aam
xor
inc
aaa
pop
scas
pop
lods
mov
adc
mov
rcll
mov
in
loope
shlb
jecxz
shl
push
arpl
push
shl
nop
fimull
jno
inc
das
pop
movsb
insl
movsb
jo
scas
cld
lods
adc
int3
lret
xchg
loopne
inc
xchg
push
add
jge
imul
shrl
outsb
add
xchg
mov
jl
nop
fmuls
sbb
and
and
mov
xchg
rorl
jne
inc
daa
cmpsb
into
jae
nop
insb
jg
mov
xchg
mov
cmp
add
mov
ret
stos
adc
push
xor
pusha
sbb
lcall
xchg
cmp
mov
xchg
dec
jb
adc
hlt
data16
jmp
pop
sti
mov
adc
outsb
jg
add
cmpsl
dec
or
incb
mov
jge
push
je
roll
out
cmp
subb
or
into
add
pop
imul
add
lahf
jnp
push
add
pop
xchg
adc
and
jb
mov
mov
sbb
sub
xor
mov
aas
jae
push
scas
adc
sub
fldt
jle
jb
push
push
les
adc
aas
jnp
incl
xor
mov
mov
jmp
xor
out
js
and
push
adc
cmp
shr
mov
cmpsb
cs
sbb
jno
sbb
push
sarl
pop
pop
repnz
xchg
in
pop
push
push
xor
stos
or
jns
pop
test
push
mov
aam
cmp
test
out
inc
mov
add
lcall
sbb
fistpll
adcl
fiaddl
notl
lock
sarb
cmp
in
inc
mov
subl
add
mov
push
xor
test
mov
inc
scas
into
lock
inc
and
mov
mov
scas
push
enter
inc
ljmp
movsb
nop
lret
adc
pushf
or
mov
fstps
pop
subl
mov
inc
mov
pop
popa
jp
push
mov
outsb
arpl
dec
jg
repnz
and
jns
sbb
aaa
mov
das
into
sahf
scas
push
sbb
cli
int
pop
ds
pop
sarb
fstpl
jae
pop
mov
mov
jbe
outsb
jno
jl
roll
cmp
js
and
int3
repz
xchg
bound
call
or
adc
sub
xor
pushf
sbb
inc
outsb
fwait
ret
jle
mov
std
mov
out
int
xchg
arpl
int3
mov
sub
test
xchg
inc
mov
sbb
mulb
shlb
inc
sub
faddl
rcll
sbb
lret
mov
adc
ret
ss
push
int
jmp
test
in
clc
add
add
sbb
inc
sbb
sbb
lcall
imul
es
mov
push
std
pop
lock
mov
xchg
adcb
les
jp
lds
mov
pop
test
icebp
sbb
xor
adcb
sbb
or
mov
jae
test
jmp
adc
faddl
xchg
sbb
popa
loopne
popf
fcomps
out
sbb
xorb
out
shrb
mov
or
add
xor
pop
ljmp
sub
inc
lock
inc
ljmp
jbe
stos
rcll
cmp
add
mov
xrelease
js
test
sub
or
int3
cmc
and
jb
xchg
push
mov
dec
jnp
inc
push
mov
mov
or
push
je
adc
sub
popf
leave
sub
cltd
push
dec
sbb
std
and
lcall
cld
insb
xchg
aad
jmp
sar
bound
sbb
dec
adcb
in
inc
pop
test
lods
ss
pushf
cwtl
push
sbb
push
sub
jmp
cs
pop
mov
int3
pushf
xchg
inc
or
loopne
imul
in
and
jne
sbb
stos
ret
lods
lods
je
out
and
push
xchg
imul
inc
add
xchg
je
and
mov
mov
mov
je
xchg
iret
push
pop
and
stos
adc
les
push
push
mov
push
or
ljmp
push
scas
mov
fs
ret
daa
cwtl
leave
push
lods
push
xchg
lret
data16
inc
fdiv
add
push
push
mov
aaa
cltd
jo
pop
push
push
test
hlt
jns
mov
and
push
out
mov
outsl
add
arpl
and
adc
cmp
xchg
popa
push
xor
je
push
lock
je
out
lock
outsl
push
mov
jb
scas
or
sahf
and
push
add
add
cmp
add
ss
scas
pop
push
aad
stos
cmp
pop
add
movsl
pop
sahf
lods
cmp
cs
sub
cmpsl
mov
add
bound
push
ficompl
test
je
stos
jo
sub
int3
sub
test
sub
mov
mov
cltd
icebp
pop
aam
lahf
in
out
jl
xor
jns
je
cmpb
cmovle
nop
cwtl
das
xchg
inc
inc
adc
mov
cmc
sbb
mov
js
in
sbb
dec
cwtl
lahf
dec
test
xchg
jbe
adc
and
es
out
jg
cmc
mov
out
inc
mov
leave
out
mov
icebp
xor
shl
mov
and
lea
or
or
ja
das
scas
xlat
clc
inc
mov
inc
clc
test
xor
lods
mov
push
lods
ljmp
leave
dec
sahf
enter
inc
cld
cmc
mov
imul
sub
inc
inc
dec
ljmp
xchg
ret
cmp
inc
jp
pop
jns
cmp
adcl
repz
and
loopne
pop
inc
cmpsb
adc
aad
push
aaa
push
sub
xchg
imul
xor
adc
and
pop
inc
and
test
push
rol
pusha
dec
leave
mov
and
test
push
fildl
jo
and
lds
jl
inc
iret
shl
stc
pop
cmpsb
shrb
dec
xchg
mov
pop
mov
fidivrl
jecxz
lods
mov
push
add
lock
es
out
movb
mov
sub
dec
adc
pop
std
popa
fsubrl
inc
mov
dec
xchg
jns
or
pusha
mov
sbb
not
mov
xlat
mov
push
out
mov
xchg
mov
stc
arpl
iret
pop
adc
icebp
pop
mov
setns
sbb
ror
mul
test
out
hlt
adc
dec
jnp
sub
dec
jne
push
subl
or
jp
or
and
cltd
int
xchg
add
xchg
or
jnp
pop
mov
loopne
jl
push
and
add
leave
je
pop
fwait
imul
lock
out
iret
loopew
ret
mov
or
push
int3
sbb
loopne
add
push
hlt
orps
loope
dec
aam
xor
cs
aam
adc
push
in
stos
clc
cltd
sbb
out
out
jmp
test
out
out
lock
inc
lcall
cli
cmpb
inc
scas
mov
jmp
js
inc
out
add
dec
call
sbb
scas
mov
fldt
pop
mov
dec
jne
ja
and
adc
xlat
or
shrl
dec
pop
into
scas
negl
scas
jno
cld
mov
stos
inc
inc
or
lea
andb
cmp
daa
js
pop
shrl
shrl
lret
mov
inc
xchg
sub
dec
jecxz
push
dec
pushf
into
mov
std
jge
mov
in
into
adc
pop
push
addr16
and
xlat
mov
add
jnp
mov
aaa
lods
add
sub
add
loope
mov
jb
fs
sbb
pop
jle
jg
aam
lock
loop
xor
call
pop
addr16
fistpll
insl
pushf
xor
stos
lods
insb
out
sub
test
dec
aad
pop
or
xchg
sub
fxch
or
cmc
mov
jmp
push
dec
lret
mov
daa
push
loopne
loop
push
inc
mov
xorl
dec
adc
mov
xlat
not
mov
mov
and
negl
mov
jbe
hlt
pop
cmc
test
sbb
add
jae
incb
popl
repz
cmpsb
lods
arpl
jle
sub
stos
mov
popa
inc
test
addr16
pop
es
leave
repz
popf
adc
push
es
aam
jne
cmp
stos
mov
or
jle
mov
mov
inc
shll
mov
xor
mov
dec
clc
lret
scas
mov
mov
cmc
sbb
push
sti
cltd
xor
jne
loope
dec
fidivrs
sbb
out
pop
sbb
xlat
and
push
xchg
movsb
mov
push
jb
mov
rol
ds
cmp
xchg
ja
lds
xchg
aad
out
mov
stos
jo
int
cmp
mov
mov
test
lret
mov
das
outsl
imul
push
or
mov
notl
aaa
int3
jg
add
mov
sub
dec
mov
mov
test
push
rcll
cmp
jns
ret
outsl
popf
sbbl
subl
inc
int
idiv
sub
imul
insb
out
pop
imul
fidivrs
std
repnz
ja
push
inc
push
mov
inc
push
jne
mov
push
lea
stos
sti
in
push
insb
roll
cwtl
cmp
or
mov
imul
das
fnclex
push
sbb
vpsllq
cli
adc
dec
leave
mov
push
adc
pop
and
push
bswap
mov
inc
mov
ja
int3
push
cli
lds
mov
dec
dec
push
adc
cmpsb
inc
cmp
loopne
clc
es
pop
lock
mov
push
mov
cmc
in
es
lahf
daa
mov
es
or
mov
icebp
sub
scas
lcall
jg
lock
stos
push
stc
mov
sub
test
and
roll
jbe
das
test
push
ret
mov
fsubl
add
shrb
sbb
push
stos
or
mov
cli
mov
ds
xchg
repnz
int
repz
push
jns
into
fldenv
imul
stos
mov
mov
add
jle
lock
xchg
fildl
and
xor
pop
sbb
ret
jo
xchg
fstpt
xlat
orb
ds
cmp
mov
pop
ljmp
ss
or
pop
out
mov
add
negl
fs
sbb
test
sub
xchg
push
inc
jle
out
rorl
or
inc
fidivs
in
push
jmp
and
imul
dec
fistpll
sti
xorl
xchg
pop
jl
push
dec
jbe
push
int3
fldcw
dec
stos
mov
mov
js
outsl
fwait
and
push
ss
xchg
sbb
bound
ljmp
mov
hlt
imul
mov
cmp
andb
fcoml
cli
sub
sti
cld
and
aam
mov
mov
jae
mov
repz
adc
ret
xlat
and
xchg
push
mov
inc
outsb
stos
mov
dec
ds
popf
mov
xchg
inc
xor
mov
push
fwait
jae
sbb
dec
pop
jno
mov
fwait
push
push
ror
int3
dec
das
xor
ficomps
in
push
out
iret
test
mov
mov
imul
mov
mulb
pusha
lods
adc
fwait
adc
inc
dec
adc
inc
push
es
outsl
sbb
cmp
int3
lahf
mov
in
shl
insl
dec
ficoml
bound
jp
sbbl
ljmp
out
and
fdivl
inc
into
inc
pop
in
fidivrl
jbe
pop
ljmp
out
andl
adc
xor
test
inc
stos
mov
cmp
inc
movsb
push
pop
pop
jmp
addr16
push
mov
cmp
test
push
pop
sti
stos
mov
dec
js
faddl
or
ss
mov
dec
repz
loope
pop
repnz
pusha
jecxz
inc
insl
sbb
cmpsl
cld
jmp
imul
or
adc
push
je
or
pop
ss
in
mov
push
frstor
mov
xlat
fnsave
xchg
mov
jge
into
bound
push
loopne
sub
cli
lahf
pop
int
sbb
std
jmp
xor
out
test
fimull
cmp
add
loope
fdivs
inc
test
ror
dec
pop
cltd
push
pop
or
add
or
negb
or
ljmp
jns,pn
sub
add
cmp
add
sbb
jns
fs
fimuls
fcoml
or
mov
scas
push
scas
daa
or
push
xor
test
push
imul
mov
dec
sbb
adc
hlt
xor
push
push
cmp
out
and
fs
out
sbb
and
mov
stos
jb
lods
imul
push
aaa
dec
ficomps
pop
divb
int3
pop
std
jns
sbb
sbb
sub
jb
adc
mov
push
pop
push
fnstsw
enter
jp
push
mov
into
adc
loop
or
insl
cmc
inc
or
adc
jp
or
lock
mov
mov
testl
lods
outsl
idivb
adc
ret
xor
jge
repz
add
stos
lcall
mov
mov
or
adc
into
adc
push
test
imul
outsl
mov
push
inc
jb
call
in
loope
push
cmp
mov
adc
shrl
xchg
ret
add
lret
jge
cmp
and
icebp
cmp
mov
sub
or
fstpl
adc
movsb
out
call
rcll
xor
push
push
jmp
rclb
jp
mov
jecxz
mov
stc
jmp
jp
push
pop
push
das
notb
ss
mov
gs
pop
in
mov
mov
sbbb
cs
jae
pushf
pop
sub
or
out
sub
into
lea
cmpsl
orb
xchg
out
outsl
scas
cmpsl
out
clc
xor
lods
nop
dec
add
jmp
xor
sbb
pop
icebp
enter
xchg
cmpsl
adc
mov
dec
mov
fisubrl
ds
sbb
pop
in
in
movsl
xor
add
pop
addr16
jo
fsubrs
and
int3
pushf
rcrb
repnz
dec
addr16
push
mov
nop
lret
xorl
xor
sbb
mov
test
movsl
outsl
pushf
sarl
mov
sahf
or
push
out
pusha
add
jmp
and
jno
and
sahf
js
jg
xchg
sub
cmp
inc
adc
mov
mov
in
pusha
ss
stos
mov
js
mov
or
bound
ret
pop
shrl
es
mov
add
push
aaa
xor
lret
mov
and
inc
pop
pop
push
test
sub
inc
ds
xor
lret
ret
sbb
dec
daa
add
inc
pusha
or
test
dec
aam
xor
testb
shll
lcall
jne
jg
movsl
hlt
adc
dec
or
sar
jg
add
pop
mov
enter
inc
jo
push
icebp
fisttpl
xchg
movsl
push
out
mov
mov
dec
les
mov
nop
imul
lods
pop
mov
inc
mov
cmc
push
xor
push
roll
sar
sub
xor
pop
push
imul
test
jle
es
xor
xchg
repz
mov
hlt
jbe
fwait
lock
sub
dec
call
stos
fnstcw
nop
out
rclb
ljmp
cmc
stc
sub
mov
sub
js
and
nop
or
gs
dec
mov
mov
daa
xor
bound
pop
mov
lods
pop
ret
jo
sbb
pusha
pop
dec
cwtl
pushl
iretw
adc
cmp
push
mov
movsb
scas
sbb
aaa
mov
in
sti
scas
xchg
movsb
xor
cmp
mov
shll
and
adcb
loope
jle
add
ss
cmc
cmp
and
int3
repz
lret
jg
dec
and
jcxz
popf
mov
add
lahf
scas
andb
out
sub
mov
lods
jecxz
cmp
test
sbbl
les
push
sbb
mov
hlt
cld
lret
ljmp
adc
ljmp
xchg
xchg
mov
xchg
push
xchg
imul
or
imul
cmpl
popa
lock
sbb
cli
iret
jbe
dec
stos
mov
jno
and
sarb
adc
pop
inc
pop
nop
stos
push
sub
xchg
fcompl
jmp
mov
inc
cmovbe
into
cmp
cmp
cld
int
sbb
aam
sub
fnstsw
daa
orl
or
icebp
inc
pop
push
fwait
and
sbb
popa
pusha
xchg
dec
mov
out
lea
xor
jge
das
mov
push
xchg
test
jo
cmp
jnp
mov
outsl
or
daa
adc
outsl
and
aad
out
sub
popf
mov
sub
out
jg
out
sub
pop
cld
add
pop
stos
cmp
sahf
mov
mov
push
lret
faddl
push
fcmovne
jnp
test
push
xor
sbb
scas
jo
scas
cmp
repnz
push
arpl
sub
sahf
mov
or
fisubl
jle
xchg
daa
cli
lds
inc
mov
mov
jl
andl
aaa
shlb
inc
xchg
or
jno
call
push
xor
dec
sbb
aam
add
mov
xchg
sub
sub
sti
stos
fs
push
scas
lcall
mov
ret
mov
mov
and
xchg
push
ret
or
fbld
cmpsb
jo
and
jg
cli
adc
test
xbegin
xchg
pop
stc
pop
push
into
cmp
cmpsl
loopne
and
pop
out
sub
dec
jp
addl
inc
adc
mul
cli
popf
ret
xchg
mov
jg
push
and
or
mov
stc
arpl
add
fcom
aam
mov
insb
and
push
and
data16
jnp
hlt
lahf
inc
mov
inc
aaa
xor
inc
into
mov
mov
mov
mov
or
push
jg
in
js
cltd
mov
loope
xor
cmp
icebp
orl
dec
test
inc
inc
xor
cmp
mov
jns
adc
ret
repnz
xor
leave
mov
lods
pushl
mov
mov
sub
push
push
pop
sub
int
ret
cmp
pop
mov
jmp
outsb
into
lods
xchg
push
sbbl
js
mov
push
mov
loopne
popf
inc
sarl
sbb
xchg
ret
jle
outsb
cmp
arpl
mov
inc
inc
mov
sti
call
mov
pop
aad
mov
pop
pop
into
pop
sar
out
aaa
inc
stos
xchg
mov
ss
push
fwait
pop
in
xchg
inc
adc
test
out
push
into
pusha
icebp
sub
xchg
loop
popa
cmpsl
dec
dec
push
gs
sbb
pop
lret
repnz
pushf
or
push
xchg
mov
jge
jp
and
cld
sub
popf
sub
shrb
dec
pop
movl
incb
inc
pop
or
rcrb
hlt
icebp
mov
mov
mov
call
xchg
nop
outsl
pop
call
inc
mov
mov
mov
ss
mov
imul
mov
push
pop
jnp
cmp
repnz
test
aaa
or
push
jle
fcompl
push
gs
jecxz
and
sbb
popf
inc
lock
dec
inc
lcall
call
inc
cmc
adc
daa
pop
out
cli
leave
cs
sbb
and
sub
arpl
mov
roll
dec
add
mov
mov
rcrb
aad
leave
inc
cwtl
xchg
leave
adc
cmc
adc
out
xor
lahf
shrl
addr16
stos
dec
sbb
or
push
pop
mov
mov
cmp
xchg
push
sbb
in
push
clc
imul
lea
sbb
cmc
punpckhdq
inc
test
shll
pop
fs
arpl
test
jmp
sub
sbb
out
sarl
pop
test
js
sahf
mov
int
lods
jbe
sbb
mov
inc
xor
ljmp
xlat
sbb
lock
and
or
adc
push
pop
cltd
sub
mov
pop
cmp
dec
in
lcall
std
add
adc
aaa
cwtl
and
loop
dec
mov
dec
imul
pop
cmc
lret
scas
or
jnp
cmp
not
fnstcw
cmpl
pushl
adc
or
sbb
mov
lret
mov
xchg
pop
inc
or
fldl
inc
lret
or
sti
aam
cmp
and
inc
pop
and
pop
aam
into
xchg
iret
sarl
and
cwtl
aad
cmp
sub
int
out
or
pushf
xchg
sbb
cs
sub
cld
jecxz
and
sub
pop
stc
mov
ret
sbb
mov
jl
xchg
test
ret
lahf
ret
inc
mov
dec
out
shl
scas
sbb
xchg
dec
xchg
lock
xor
frstor
xor
inc
pop
add
lcall
xor
sub
negb
popf
sub
jne
sahf
and
test
and
mov
sub
inc
dec
inc
addl
mov
cmp
inc
dec
jae
pop
mov
jae
or
xchg
push
xor
mov
jg
and
aam
mov
sub
aam
fwait
movsb
bound
cmc
and
mov
push
inc
imul
pop
sub
or
jmp
imul
inc
and
lds
fwait
adc
jecxz
jo
mov
xchg
sbb
lahf
or
xor
jne
lock
adc
add
daa
fwait
push
add
inc
sbb
sbb
pop
repnz
xchg
mov
jg
mov
je
add
push
movsl
test
js
int3
jno
inc
inc
push
insl
out
in
dec
cltd
mov
test
and
stos
mov
inc
pop
sbb
push
adc
xchg
xchg
out
scas
iret
pop
push
mov
xchg
lret
jbe
jne,pn
add
pop
fisubrs
push
adc
ds
loopne
xchg
xchg
outsb
xor
decb
pop
cmpsl
add
loop
test
test
lret
sbb
push
mov
loope
outsl
bound
pop
push
jno
push
push
mov
cmc
add
loopne
aas
scas
pop
addr16
adc
pushf
mov
es
gs
scas
loopne
loop
lcall
xchg
dec
pop
out
pop
inc
cmp
js
imul
xchg
loop
jg
mov
jno
fbld
sbb
and
std
fbld
xlat
pop
mov
xor
pop
stos
mov
gs
inc
lds
mov
sub
xor
ja
enter
imul
cmp
dec
lods
cmp
stos
repz
ja
stos
cwtl
in
mov
pop
je
mov
dec
sub
push
adc
std
testl
popa
sbb
adc
inc
icebp
cwtl
in
adc
push
mov
rcrl
sahf
add
cld
roll
cltd
loop
pcmpeqw
mov
ljmp
xor
and
adc
rolb
sbb
out
and
andb
sub
loope
and
sbb
push
je
in
gs
scas
rolb
xlat
push
mov
fwait
push
outsl
or
sbb
shl
sar
cmc
mov
sbb
dec
push
push
pop
push
shl
lock
mov
push
nop
out
mov
rolb
loopne
loop
xor
aaa
je
mov
sub
aad
or
sub
jns
sbb
bound
xor
inc
fwait
repz
xchg
mov
push
push
pop
stos
leave
addr16
cmpsl
test
jns
dec
jl
das
xchg
loope
outsl
xchg
and
test
loope
notb
sub
leave
pop
daa
in
sbb
xchg
jmp
outsb
mov
shll
jae
push
and
negl
ljmp
pop
adc
popf
imul
xchg
scas
mov
cmp
sahf
and
out
fsts
outsb
div
cmp
mov
sbb
sbb
jne
ja
dec
movsl
fdivp
stos
sbb
pop
mov
sub
and
into
jnp
into
movsl
cmp
dec
ja
je
and
ljmp
lret
js
or
aas
xor
pop
mov
sbb
sahf
jge
and
data16
pop
cmpsl
or
jne
xlat
je
out
adc
out
fildll
stos
dec
outsl
mov
lcall
mov
mov
add
jl
mov
adc
sbb
outsb
inc
push
mov
mov
mov
mov
mov
movsl
mov
in
lret
cmp
xchg
adc
pop
xlat
mov
int
push
cmp
gs
mov
data16
not
dec
cmp
jo
pop
or
sbb
mov
pop
pop
cli
movsl
in
inc
inc
sbb
add
push
jle
jle
je
imul
jmp
cmp
ja
adc
test
or
andb
jnp
ljmp
dec
inc
adc
imul
dec
xchg
mov
dec
stos
dec
cmc
xorl
shll
loop
iret
cmp
fmuls
jge
lahf
mov
mov
stos
iret
out
imul
hlt
inc
add
mov
sub
adc
jo
je
and
and
add
sub
and
adc
ret
lds
jle
adcb
xor
dec
rcrb
jmp
fld
xor
mov
sub
dec
pop
gs
movsb
add
rclb
pop
arpl
repnz
stos
lret
adc
stc
cwtl
pop
ds
stos
sbb
jle
dec
mov
or
mov
loopne
movsl
scas
cmp
arpl
and
adc
push
out
or
outsb
dec
in
test
rcr
outsl
test
mov
xorb
push
mov
push
sbb
and
ja
dec
imul
iret
int
cs
das
inc
loop
rep
sub
mov
pushw
adc
pop
out
dec
sub
shlb
fs
fcomp
in
and
jnp
roll
jae
call
jae
adc
jb
push
test
cmp
inc
pop
leave
sbb
xor
test
mov
dec
push
lods
sarl
or
fidivrl
sti
and
adc
and
xorl
mov
rorb
xchg
or
sbb
out
jl
adc
in
sahf
jge
adc
push
out
jl
cld
jl
pop
jne
arpl
ret
stos
or
xor
xlat
push
lods
push
dec
push
add
cmp
add
mov
in
loop
pop
sbb
and
es
push
inc
popf
add
out
std
jnp
or
repz
xor
test
xchg
mov
mov
push
cmpl
sbb
xor
ljmp
into
movsb
xor
push
xor
sub
popl
mov
jmp
inc
cmp
loopne
add
popa
out
fwait
pop
ljmp
jnp
cmc
jns
ret
arpl
sbb
cmpsl
into
push
inc
scas
push
je
add
mov
mov
mov
or
push
test
imul
jnp
int
cld
icebp
ficompl
xor
lds
and
bound
bound
aaa
scas
cmp
or
shl
popa
mov
xchg
dec
xchg
scas
aas
ja
push
mov
lock
lds
mov
rcrb
rorb
pusha
fs
mov
stos
loope
sub
adc
repnz
jecxz
fwait
loopne
jge
mov
mov
cmp
aaa
lods
clc
cmp
arpl
in
cmp
test
and
insl
jnp
cwtl
in
lds
popf
cmp
lea
pop
shll
test
fwait
add
out
push
add
jle
orb
xchg
mov
pushf
inc
dec
pusha
out
fbld
gs
jno
push
in
fmull
stc
repnz
mov
mov
das
push
shrl
fwait
addb
sbb
lea
jg
cmp
cmp
xor
ret
call
push
les
push
mov
mov
mov
rorb
mov
subl
pop
sahf
dec
xchg
in
mov
aas
xchg
cld
or
movsb
mov
pushl
aas
js
dec
lret
adc
sub
jnp
insb
xchg
popf
cmp
adc
mov
add
cmp
fisubl
loope
andb
lds
js
popf
sbb
icebp
sbb
or
rorl
fimull
lock
scas
xor
mov
mov
adc
adc
mov
out
ja
out
out
or
xor
xchg
cmp
rorb
cmp
std
jae
mov
mov
ss
imul
popf
outsb
dec
repz
xor
dec
lcall
mov
jns
jmp
in
in
out
gs
mov
and
and
sub
push
arpl
push
fistpl
jne
adc
mov
mov
stc
arpl
or
ficomps
aam
outsl
cs
sbb
xchg
fnsave
data16
stos
sub
jb
scas
dec
scas
lds
fisubrl
and
lea
or
enter
pop
das
jno
mov
fdivrl
cmp
or
les
scas
jbe
mov
test
test
call
je
gs
mov
and
imul
std
adc
sub
test
add
push
sbb
xchg
inc
fidivs
pop
sub
shrl
sti
mov
imul
jle
mov
jns
add
out
inc
add
out
lods
mov
mov
inc
mov
in
xor
push
and
ret
pop
pop
sahf
movsb
xor
add
xchg
mov
test
bound
in
into
push
xor
subb
xor
into
jge
ss
mov
cwtl
mov
mov
push
ljmp
or
cld
push
imull
cmp
std
xor
jl
xor
rcll
data16
push
inc
loop
add
sti
cmp
fs
aas
cmp
imul
push
out
inc
aam
xor
hlt
cltd
dec
int
cmp
pop
negl
add
cmpl
inc
sbb
jno
das
mov
push
or
mov
sbb
inc
inc
shrb
clc
movsl
out
ds
mov
je
cmp
pop
mov
mov
dec
and
es
mov
cmp
push
xor
mov
test
int
fidivs
xchg
cmp
or
arpl
or
decb
stos
xrelease
mov
jns
inc
fucom
cmc
xchg
pop
push
jne
lods
jmp
icebp
ret
out
mov
mov
and
movl
push
cs
lcall
roll
add
mov
sub
inc
pop
stos
and
mov
and
cmpsl
or
rolb
push
xchg
fwait
scas
inc
xchg
stos
push
mov
mov
cmp
loope
mov
or
adc
push
mov
stos
fsts
mov
lds
ljmp
in
jle
push
pop
push
push
jb
icebp
or
lods
sub
popf
fldenv
xor
xor
sbb
xor
inc
push
js
lds
fcmovnu
adc
pop
mov
pop
pop
sub
mov
push
int
cmc
push
add
mov
or
mov
sub
pop
sbb
js
dec
or
push
repz
mov
or
mov
popl
dec
dec
rcr
jg
imul
leave
jo
jne
push
dec
in
ror
nop
dec
xor
iret
repnz
shr
popf
lahf
pop
ss
xor
sub
call
aad
sub
lds
mov
lahf
hlt
dec
adc
rclb
xchg
test
dec
cmc
out
add
sub
ljmp
inc
pop
nop
cmp
sub
adc
jg
cmovge
dec
mov
out
fcomp
data16
mov
repnz
inc
dec
ds
je
jg
cmp
pop
xchg
outsb
scas
repnz
fistps
xor
pop
in
fdivs
adc
dec
shrb
in
cmp
frstor
imul
jno
fstps
add
jle
mov
je
adc
decl
push
into
outsl
xchg
sbb
int
inc
cmp
pop
ret
fimull
xorb
cmp
out
pop
sub
insb
push
pop
mov
popa
pop
mov
xchg
pop
sti
imul
inc
push
lahf
insl
dec
pop
xchg
push
mov
and
or
pop
jbe
int3
in
pop
or
mov
icebp
adc
pushf
add
lret
mov
outsb
sbb
push
stos
inc
push
jecxz
test
xor
stc
pop
int
and
mov
or
dec
shr
addr16
sarl
jae
push
jge
add
pop
adcl
add
push
shlb
ja
jmp
ret
loopne
cli
pusha
mov
fwait
mov
js
bound
push
jne
jle
sbb
push
mov
lods
add
xchg
jg
mov
loop
xchg
sub
leave
movsb
cltd
and
and
sub
aaa
pop
aaa
pop
loope
push
in
mov
jge
pop
dec
jmp
sbb
jecxz
into
mov
sub
popf
mov
and
out
aam
cmp
pop
sti
mov
fwait
scas
dec
push
add
js
mov
and
stc
lret
xchg
push
push
push
push
dec
pop
bound
out
cmp
pop
sub
ljmp
arpl
push
sbb
cld
aas
inc
outsl
loopne
rcl
push
sub
out
lret
push
adcb
adc
add
mov
aam
mov
xchg
ds
jns
dec
adc
sbb
loope
xchg
mov
mov
fisubs
jnp
jmp
xor
pop
test
int3
jg
jns
fwait
popa
pop
lods
sar
ja
mov
dec
aam
mov
idivb
mov
ret
jnp
fsts
xchg
sub
inc
shl
dec
ja
adc
mov
adc
out
or
test
insb
or
fnstenv
xchg
test
pop
ss
dec
mov
cs
mov
push
jb
les
in
into
lret
or
sbbb
arpl
cmp
cmp
int
jmp
jmp
dec
sarl
lcall
push
ret
jl
pop
inc
inc
cmp
pushf
and
sbb
stos
inc
pop
dec
movsb
fildl
fcom
inc
jmp
or
lds
into
xor
inc
mov
mov
cmpsb
aad
lcall
lret
xchg
gs
mov
divb
sub
adcl
fldlg2
dec
pop
mov
xchg
sti
mov
sub
lds
pop
xor
into
mov
je
jecxz
xchg
add
mov
xchg
stos
call
xchg
mov
int3
mov
fidivs
pop
sub
ret
adc
in
jp
inc
pop
testb
xor
jae
fnstsw
and
popf
or
movsb
mov
int
jmp
xchg
xor
test
cmpsb
repnz
lret
test
add
test
add
insl
pop
int
sbbb
icebp
fs
xchg
jne
hlt
popw
or
xor
cmp
jl
bound
mov
xchg
push
push
loop
xchg
in
leave
insb
fstpt
or
adc
lods
out
adc
cmp
mov
sub
and
mov
pop
xlat
dec
mov
xchg
lea
cmp
fdivrl
je
cmp
fsubl
sbb
xor
cmp
gs
fisubrl
out
adc
mov
push
and
int3
movsl
enter
addb
xchg
loop
hlt
mov
dec
hlt
stc
push
mov
sbb
sbb
xchg
adc
addr16
aad
push
movsb
rcr
inc
mov
push
dec
pop
and
hlt
add
ds
push
test
jne
sbbl
jge
dec
xor
stc
add
out
sub
add
js
xchg
icebp
jge
push
sbb
outsl
adc
xor
mov
mov
add
cmp
andl
scas
movsb
xor
pop
insl
sbb
test
int
cmp
shll
push
lock
mov
lret
les
mov
in
in
test
push
and
mov
pop
icebp
pop
lret
fwait
sub
xor
mov
mov
repnz
hlt
push
pusha
mov
mov
inc
push
or
adc
sub
sub
xor
roll
dec
clc
sub
sbb
mov
subl
mov
add
pop
dec
aam
add
xor
les
stos
fs
movsl
xchg
mov
adc
adc
test
int3
std
dec
xor
fucomp
sub
fstps
adc
pop
imul
repz
jmp
add
leave
sbb
sbb
sub
shll
lahf
int
xor
adc
out
test
sub
icebp
jmp
push
sbb
bound
adc
cmp
jmp
or
xor
jbe
jo
and
push
test
pop
lahf
repz
mov
mov
push
pop
adc
fwait
mov
sbb
dec
xchg
loop
sbbl
ret
sbb
sbb
repz
jo
and
adc
push
xor
in
sbb
mov
adc
rorl
and
leave
adc
test
enter
aam
mov
pop
add
imul
loope
dec
mov
sbb
cltd
inc
pop
pop
or
addr16
aas
push
test
fwait
inc
dec
xor
mov
aam
sub
jns
ret
in
dec
paddb
lret
jns
fidivrl
in
adc
dec
mov
js
nop/reserved
dec
mov
jb
cmpsb
and
cmp
mov
sub
out
pop
pop
testl
cld
iret
add
add
pop
cltd
xor
xor
dec
pop
cmp
dec
lods
fsubrs
outsl
loopne
mov
test
sarl
arpl
mov
loop
cltd
movsb
lret
mov
pop
rcl
js
roll
push
or
pop
pop
lock
add
xchg
sub
dec
movsb
loopne
jb
sbb
push
je
add
mov
cwtl
mov
jecxz
lahf
stos
call
js
lds
jmp
mov
rclb
jp
lahf
jns
inc
stos
push
mov
outsl
in
adcb
mov
add
cltd
mov
cs
fucomp
xlat
mov
leave
test
lret
es
or
sub
xchg
daa
pop
fwait
sub
fnsave
fs
mov
pop
cs
mov
clc
mov
rcrb
aad
push
lods
loop
jae
push
cmp
add
add
fldenv
aam
rcll
leave
xchg
ficoms
jp
test
addr16
mov
sbb
fdivs
inc
xchg
add
adc
xor
push
lahf
add
mov
and
fsubs
outsb
pop
dec
loope,pt
nop
movhpd
mov
insb
push
pop
dec
dec
rorb
out
dec
cwtl
scas
push
jns
cmp
fcmovb
aam
sub
hlt
mov
lock
inc
xchg
repz
push
mov
cli
sbb
jl
push
jns
es
inc
sub
sbb
mov
enter
xchg
mov
adc
fistpl
ljmp
mov
inc
pop
inc
mov
jbe
adc
ficoms
aaa
lods
pop
vrsqrtps
aad
jo
xorb
or
cmp
in
in
push
jle
subl
ret
add
movsl
stc
pop
mov
mov
jae
xchg
adc
cld
sbb
mov
daa
xchg
jbe
pusha
pusha
frstor
or
dec
and
push
stos
cmpsl
jmp
and
or
in
inc
cmpsl
and
push
inc
xor
cmp
mov
pop
dec
orl
rcrl
xchg
jo
mov
pop
lahf
aaa
cmp
sub
push
pop
push
insl
nopl
lret
popf
adc
cmpsl
jns
inc
ljmp
iret
push
sub
bnd
sub
mov
outsl
out
pop
mov
xchg
dec
ret
and
inc
in
cli
mov
dec
fmul
popw
xchg
pop
dec
jp
mov
popa
xor
test
sbb
mov
out
jg
sub
xchg
cs
into
add
pop
cmp
fwait
stos
mov
sub
int
ljmp
ficoms
mov
sub
in
cs
pop
jae
adc
cld
and
movsl
push
push
xchg
in
inc
inc
xchg
inc
into
repz
cmp
mov
pusha
add
dec
shr
test
out
mov
fs
test
enter
mov
push
inc
push
fists
arpl
insb
jbe
sub
mov
movsb
push
sahf
repz
jmp
sarb
js
mov
xchg
mov
xchg
inc
xchg
and
icebp
mov
jne
in
adc
shll
inc
loopne
push
fistpl
por
mov
cmp
shll
ljmp
gs
outsl
adc
adc
mov
adc
pushl
shrl
add
das
adc
push
in
lds
clc
cmpsl
pop
sub
push
mov
push
into
jns
jmp
ds
imul
xor
sbb
push
aaa
rolb
adc
adc
jno
xchg
add
sbb
js
adc
add
in
cmp
rorb
mov
fdivrl
push
cmp
dec
jle
xor
sahf
popf
hlt
sbb
push
adc
add
inc
sub
mov
mov
cmpb
ljmp
dec
adc
sub
mov
cli
fdivl
call
cmpsl
aam
out
fldln2
mov
and
sbb
bound
stos
inc
loopne
aad
in
cmp
mov
mov
test
test
lret
cmpsb
je
dec
or
xchg
mov
push
sarl
movl
sbb
stos
cmp
lret
dec
mov
in
dec
les
iret
test
stos
popa
aas
test
mov
outsb
dec
out
popf
fistps
stc
mov
mov
pop
cmp
mov
clc
xchg
fbld
xchg
enter
out
xchg
cmp
popf
mov
pop
xlat
jo
mov
rorl
aaa
push
dec
mov
lret
and
xor
or
xchg
aas
push
push
xor
jp
mov
decl
ds
mov
aad
xchg
sub
scas
xchg
jne
jge
add
stos
filds
cs
add
movsb
test
lahf
out
call
scas
push
cmove
arpl
and
sarl
sti
adc
xchg
inc
fistpl
popa
lods
pop
sbb
aam
adc
test
pop
or
dec
xchg
pop
push
jae
cld
insl
jp
xor
xor
mov
lods
out
add
fistps
mov
push
xor
mov
sub
dec
loope
push
shll
mov
dec
mov
jo
mov
stc
outsl
and
test
aam
mov
pop
ds
and
call
leave
out
xchg
jns
push
ficoml
and
sahf
push
addr16
jl
push
nop
jne
or
pusha
mov
pusha
inc
popf
inc
cmpl
xchg
xor
cmp
add
mov
mov
gs
into
jmp
fdiv
iret
jb
je
mov
xor
test
xchg
inc
cmp
mov
stc
jl
sbbl
imul
cmpsl
xchg
inc
adc
mov
cmp
int
cld
daa
jmp
and
xor
sahf
pop
lahf
mov
xor
adcb
sbb
sbb
pop
inc
loopne
push
pop
nop
mov
cmc
inc
ret
cmpl
sbb
xor
scas
in
imul
aas
pop
test
sbb
call
jl
test
sbb
pavgb
scas
mov
pop
inc
movsb
jecxz
loop
push
enter
hlt
fsubrs
loop
dec
or
xchg
dec
sbb
rcrb
xor
or
les
dec
movsl
cmp
inc
inc
jl
sub
lds
nop
or
nop
xchg
add
mov
test
inc
aaa
mov
push
out
adc
mov
xchg
add
movsl
or
fisubl
fstl
leave
shll
stos
adc
mov
into
jne
movsl
inc
sarl
mov
jge
in
add
jnp
ret
in
push
fnstcw
gs
jl
sbb
adc
and
ja
mov
adc
into
dec
addb
enter
iret
sbbb
int3
pop
cmc
fnstenvs
pop
pushl
pop
cmp
sub
arpl
pusha
xor
adc
mov
outsb
mov
xchg
stc
out
mov
add
dec
aaa
out
xor
rcrb
push
adc
rcrb
push
adc
pusha
in
jbe
lea
push
or
cltd
fwait
lods
fldl
xchg
xchg
pop
mov
mov
mov
sbb
push
cmc
test
adc
pop
push
and
or
sti
mov
xor
nop
and
pop
push
sub
dec
push
sub
mov
and
cmp
sub
sbb
popa
aas
adc
xchg
xor
in
adc
shrl
pop
lret
adc
lcall
in
in
ss
addl
push
xchg
pop
popf
push
cmpsb
and
adc
inc
pop
push
dec
sbb
inc
enter
sbbb
push
loop
push
or
and
cmpsl
fs
xchg
xor
add
add
xor
and
pop
mov
mov
and
lods
xchg
pop
mov
cli
push
inc
push
aad
negb
jne
imul
lods
inc
pop
loope
cmpsb
rcl
push
fisttpl
test
lods
dec
adc
cli
sub
cli
das
lcall
jmp
inc
pushf
cmpsb
xor
shlb
sub
jb
xchg
dec
data16
mov
dec
ret
insb
int3
add
pusha
push
cmpsb
cmp
mov
in
jno
sbb
dec
cwtl
testb
mov
scas
adc
sbb
lret
mov
jmp
jl
push
mov
xchg
je
push
sti
sbb
jle
xor
cmp
jge
push
imul
mov
adc
sar
push
push
pop
cmp
lcall
mov
add
jbe
or
sbb
frstor
xchg
imul
add
push
sbb
mov
inc
or
push
in
sbb
push
and
pusha
popa
mov
ss
mov
adc
pop
xchg
adc
or
adc
xor
das
xchg
jmp
adc
dec
and
xchg
mov
loop
stos
sbb
int
mov
loope
outsb
repnz
cmp
je
or
test
mov
push
push
push
mov
jecxz
mov
lods
adc
push
mov
and
bound
mov
dec
ret
outsb
xor
jge
mov
mov
in
fcoml
jnp
ljmp
out
push
pop
shrb
push
inc
and
leave
inc
sbb
add
rcl
gs
std
repnz
sub
in
rcll
stos
imul
rorb
dec
bound
xlat
scas
out
rorb
in
aaa
mov
push
pusha
fnsave
movsb
adc
jae
rclb
adc
jbe
jbe
insb
lretw
divl
cld
xor
and
stc
xchg
xchg
lds
sahf
add
mov
loop
push
out
and
lcall
ja
ret
je
and
std
sub
push
xlat
push
scas
push
test
pushf
ljmp
push
mov
inc
fadds
mov
push
adc
jnp
ror
mov
inc
push
fsubl
nop
lods
and
mov
jmp
std
dec
and
cmpsl
fwait
mov
lock
test
mov
cmpsb
cmp
out
or
arpl
andl
mov
pop
xchg
into
insl
dec
jae
ds
xor
push
aad
push
or
pandn
push
lret
hlt
xchg
or
mov
aad
out
mov
xchg
jp
xor
add
inc
int3
outsb
inc
dec
loop
mov
lea
xchg
xor
lds
sahf
aad
lret
lret
sub
ljmp
lea
push
inc
js
aam
arpl
xchg
xlat
inc
mov
ret
inc
data16
jnp
pop
rcrb
stc
outsl
test
mov
out
ds
push
jbe
inc
inc
or
fldt
pop
adc
mov
and
lods
jbe
xchg
xchg
or
lds
xlat
lock
inc
jge,pt
dec
insl
data16
sub
push
cs
mov
pop
inc
push
jmp
popa
adc
cmp
push
das
fidivrs
movsl
push
jns
imul
das
lods
stos
hlt
iret
in
mov
out
jmp
cltd
sub
jecxz
pop
outsl
push
cmp
bound
pop
sbb
loope
idivb
ja
loopne
in
jae
mov
pop
aaa
jmp
xor
jge
daa
mov
lods
jl
inc
sub
mov
in
decb
sar
xchg
mov
push
add
or
and
lods
imul
jno
adc
xlat
test
pop
cli
clc
aad
shl
shll
jb
repnz
ds
testb
jg
or
xchg
adc
out
xor
mov
mov
lcall
or
in
rcr
xchg
scas
cmp
int3
ds
or
jo
push
push
mov
cmpsl
and
lret
adc
xor
mov
push
loop
lret
dec
icebp
xor
sub
in
xchg
jmp
jp
or
fists
jae
push
arpl
push
xchg
sahf
iret
jnp
jmp
xchg
sbb
push
ljmp
lods
movsb
insb
mov
xor
push
test
jl
pop
test
pop
test
jmp
mov
mov
clc
out
jns
add
xchg
scas
fsubr
and
or
mov
ds
fstp
bound
adc
shll
cmp
or
test
pusha
cmpsb
lret
popa
pop
outsl
adc
lret
cmpsl
adc
orl
mov
xchg
cs
repnz
mov
mov
and
or
inc
lea
repnz
lret
int3
mov
repz
pop
ret
xchg
andl
rclb
and
lret
add
jbe
pop
icebp
inc
out
push
pop
loope
shrl
loope
push
shlb
fisttpll
jns
jp
dec
xor
repz
aas
xchg
add
mov
jecxz
sbb
sbb
and
jno
mov
addr16
mov
xlat
das
sarl
xchg
lock
push
jae
mov
mov
gs
push
outsb
scas
inc
pop
psraw
or
push
or
adc
dec
ret
xchg
xor
outsl
add
arpl
in
cwtl
cld
sbb
inc
push
cmp
into
push
xchg
sub
stc
sbb
push
pusha
inc
sub
mov
cmp
xchg
adc
test
dec
jle
adc
xor
leave
mull
mov
jge
inc
bnd
jmp
or
xchg
xchg
mov
mov
in
push
push
adc
mov
push
or
jmp
or
mov
xlat
fs
push
mov
mov
aaa
subb
lds
ds
sub
mov
ds
cmp
imul
mov
cmp
sub
cmc
cmp
inc
data16
jb
stos
pop
sub
push
xor
mov
or
adc
arpl
outsl
jbe
push
cmp
pusha
ss
fcom
and
test
cmp
into
shl
das
imul
sbb
jecxz
cmpsb
dec
push
fistpl
ret
jmp
jg
cltd
or
movsl
movsl
int
lcall
pushf
xlat
xor
jecxz
xchg
mov
inc
and
cmp
pop
insb
cmc
sub
popf
mov
std
mov
clc
cmpsl
sub
jbe
mov
mov
popf
adc
sbb
dec
and
shl
add
pop
sbb
dec
leave
pop
push
outsl
xor
dec
or
mov
mov
test
lea
or
cli
lds
sub
push
inc
lods
es
jb
mov
icebp
gs
scas
xchg
jmp
cmp
fdivl
xchg
or
mov
fwait
mov
int3
jno
inc
leave
push
pop
push
xchg
repz
inc
push
cli
or
mov
jg
jnp
sbb
pop
cmp
imul
and
cmp
rcl
dec
xchg
bound
cmp
out
insb
adc
stos
icebp
add
out
out
dec
mov
jecxz
sub
pop
or
sub
and
shll
jae
cld
push
adc
test
mov
cwtl
mov
xlat
ja
jle
mov
mov
andl
dec
xchg
or
mov
cmp
repz
jo
jo
loopne
push
enter
jno
mov
mov
and
mov
sub
inc
stc
xlat
int
pop
js
flds
stos
insb
scas
bound
std
mov
ja
fdivrs
cmpsb
inc
push
flds
shrb
lods
je
outsl
adc
jbe
push
and
in
jmp
inc
decb
sbb
push
jbe
adc
test
mov
inc
and
inc
jp
sbb
lret
cwtl
jno
stos
ret
fnstenv
cli
push
ret
xchg
mov
lea
jnp
in
lods
das
in
sbb
jmp
repz
cli
inc
mov
cwtl
scas
fs
jp
sti
movsb
into
insl
stc
xlat
cmp
ret
xor
orb
cltd
add
test
jo
out
pop
out
lret
push
outsb
es
movsb
pop
inc
rcrl
int
repnz
fcmovnu
mov
adc
scas
pop
and
loop
pop
and
sbb
sub
mov
jo
jmp
cld
jns
pop
jmp
ret
or
cmc
popa
pushf
cmp
testl
or
mov
fldcw
pop
mov
in
push
sub
pop
mov
nop
out
daa
fidivrl
xchg
nop
push
push
mov
btl
pop
movsb
scas
das
add
inc
pop
cmp
pop
fiadds
xor
and
pavgb
xchg
adc
cmp
sbb
jl
int
pusha
and
mov
out
sahf
aaa
jg
mov
cmpsl
pop
les
hlt
sub
jle
jnp
icebp
cwtl
jnp
lods
int3
cltd
mov
lea
and
in
lahf
scas
jg
in
pusha
cmp
fwait
xchg
bound
hlt
scas
rclb
jg
pop
xor
add
lds
clc
jnp
data16
bound
scas
sbb
cmp
adc
enter
popf
jecxz
xlat
icebp
push
gs
cmp
add
outsl
push
jge
aam
and
or
add
add
fcmovb
add
rclb
ja
sbb
daa
aam
dec
lcall
inc
cmp
jmp
les
mov
jl
out
outsb
fisubrl
jmp
int3
fcmovne
pop
popa
jl
data16
sub
mov
mov
inc
mov
jae
pop
mov
xchg
pop
lods
test
sub
call
adc
add
cltd
pop
incb
adc
stos
movsb
pop
pop
xorb
xor
repnz
ret
test
cmp
adc
jae
pop
out
jb
add
add
mov
aam
cmp
push
push
jl
nop
jbe
shrb
cmp
cmp
push
int
push
cli
dec
mov
lret
push
sbb
hlt
sub
shlb
xor
mov
mov
pop
rorl
push
icebp
xchg
lret
scas
decl
aam
sbb
or
idivb
sbb
movsb
fcompl
cmc
mov
sbb
jo
and
test
and
daa
cmpsl
scas
fcoml
iret
cmc
cmpsl
add
icebp
jns
xor
inc
cli
sarb
jmp
push
push
into
pusha
nop
fwait
cmp
icebp
iret
sbb
pop
push
aam
nop
mov
sub
mov
lcall
inc
lods
cld
add
xor
xor
mov
fbstp
pop
negb
adc
unpckhps
mov
arpl
push
ds
imul
mov
movsl
out
sbb
mov
mov
inc
jmp
sub
jp
mov
orl
mov
inc
sub
fnstcw
mov
aad
jg
sub
test
mov
jae
aas
imul
push
mov
mov
fsubrs
push
push
bound
fdivrp
jge,pt
cmp
scas
insl
lds
outsb
jno
fldl
add
lcall
addr16
jno
lods
jb
into
mov
test
dec
hlt
mov
ja
mov
movsl
loope
movsl
mov
push
rcrb
cld
lock
lcall
lahf
std
inc
push
test
sbb
fchs
sub
cmp
xor
pop
pop
sarl
add
lods
push
jne
or
mov
test
ss
movsb
sub
and
mov
mov
xchg
adc
pusha
pop
lret
and
outsb
mov
dec
test
ret
mov
sbb
std
negl
pushf
inc
sbb
mov
jnp
push
aam
mov
xlat
cmc
adc
int
sub
fwait
inc
iret
test
mov
jbe
shl
jecxz
pop
pop
push
inc
divb
pop
pushf
jno
mov
je
ljmp
adc
jg
dec
push
jo
inc
sub
or
xchg
pop
mov
or
lret
mov
and
inc
xor
incl
rclb
jp
add
mov
jne
rorb
xor
adc
and
or
scas
pop
ror
std
pop
mov
pop
sbb
hlt
lret
adc
lods
jae
cmp
rolb
mov
sub
pop
popf
mov
dec
jbe
outsb
sbbb
test
cwtl
nop
comiss
xchg
clc
orb
mov
sub
mov
popa
jns
add
cmpsb
cmp
insb
push
clc
sbb
mov
jg
dec
jle
xchg
pop
scas
iret
push
aaa
jecxz
xchg
fstl
cmp
int
call
add
adc
aad
ret
xlat
jb
or
push
mov
mov
jmp
mov
mov
fcomps
ds
jg
movsb
js
aaa
fcompl
scas
mov
cmp
fpatan
fwait
lea
orb
roll
sub
mov
add
cwtl
push
scas
pushf
psrlq
or
gs
sbb
stos
xor
or
push
jmp
aad
stc
mov
pop
push
jbe
outsb
addl
clc
mov
sub
test
cmp
cmp
std
inc
lods
xchg
xchg
das
sub
popa
nop
and
dec
push
jae
cmp
push
loope
ds
dec
mov
lahf
mov
jmp
gs
mov
subb
mov
outsb
shlb
cmp
sub
sub
lret
int3
xchg
mov
sbb
scas
cmp
cld
xchg
add
xor
mov
mov
cltd
or
mov
mov
pop
mov
jg
shlb
push
xchg
mov
cmc
in
xor
rcrl
sub
insl
xchg
xorb
rolb
ret
idivl
loopne
hlt
stos
jle
xchg
push
ljmp
xor
cmp
mov
out
sbb
fs
mov
inc
adc
stos
loop
in
dec
push
push
push
mov
xchg
mov
mov
repz
mov
dec
outsb
pop
aad
lods
push
xor
movsb
or
ljmp
adc
lret
mov
repz
or
push
mov
and
mov
jl
adc
mov
pop
and
dec
cmp
lods
cld
push
push
pop
aam
mov
addr16
loopne
sti
cli
addl
ret
dec
inc
and
xchg
ret
adc
mov
imul
pop
das
dec
sbb
pusha
mov
fs
add
ljmp
call
mov
mov
pop
addr16
subb
icebp
popf
xchg
xchg
or
loop
jmp
scas
or
stos
sahf
in
dec
roll
mov
ljmp
mov
insb
out
arpl
and
or
int3
sbb
inc
jge
addr16
jge
jle
pusha
mov
adc
push
mov
fisubl
int
push
dec
mov
xor
push
pop
cmp
add
insb
jle
outsl
inc
jb
and
addr16
leave
popa
call
sbb
shlb
dec
and
push
and
jbe
imul
fisttpl
es
add
and
test
mov
add
cmp
inc
adc
stos
les
xchg
in
push
or
mov
and
dec
subl
rol
fldlg2
mov
pushf
mov
cli
and
or
aas
lods
gs
xchg
loope
or
enter
ret
jno
notb
daa
mov
push
jmp
pop
rolb
pop
cltd
mov
lahf
and
adc
std
sti
out
jge
fwait
sub
dec
loopne
push
xor
mov
shll
push
test
xor
das
paddsb
lahf
cmc
cmp
push
push
addb
mov
xchg
test
mov
sbb
sbb
hlt
inc
ljmp
push
test
inc
std
ss
insl
jmp
mov
dec
push
pop
dec
mov
bound
insl
jmp
sti
orl
jno
adc
xor
and
xor
cmpsl
insb
dec
mov
and
ja
adcb
jl,pn
cmp
mov
pop
fisubrs
enter
mov
mov
mov
insl
xlat
or
mov
inc
in
fs
mov
mov
jmp
dec
sbb
out
mov
xor
mov
movsb
mov
inc
cmp
pop
sti
mov
push
add
shlb
jg
adc
sub
pop
or
repz
add
loop
push
jg
dec
xlat
rcll
stc
sub
fdivrs
mov
roll
dec
insb
adc
mov
lock
addr16
shl
sahf
xor
jp
es
xchg
sbb
es
push
adc
mov
mov
shlb
mov
sbb
loopne
out
inc
shlb
inc
xchg
jbe
rcl
mov
xor
rclb
stc
int3
xor
jp
mov
iret
nop
jecxz
xchg
mov
pop
jnp
bound
in
arpl
lea
jg
shll
xchg
int
scas
lret
test
je
fisttpl
lahf
out
ret
and
std
jmp
cltd
mov
or
repnz
dec
sbb
adc
lret
movsb
lods
insl
lock
jmp
mov
ret
mov
xor
mov
movsb
mov
xor
jg
iret
movsb
into
and
cmp
lods
dec
xchg
ret
into
pusha
in
push
in
jb
dec
fisubl
data16
adc
xorb
fiaddl
cmpsl
mov
data16
sub
push
stos
xchg
stos
sbb
out
push
icebp
adc
mov
xchg
fnsave
pavgb
add
dec
jo
shl
fidivs
nop
mov
mov
movsl
pop
icebp
xchg
int3
mov
adc
xchg
fistpl
cld
pop
pop
add
dec
mov
fldenv
push
push
add
sarl
popf
jns
leave
dec
add
push
sti
pop
cmpsb
repnz
mov
shl
mov
or
es
adc
data16
movsl
ret
sti
or
dec
bound
outsb
lret
sbb
in
sub
dec
shrw
dec
cmp
aas
lret
jbe
rorl
dec
bnd
movsl
adc
fwait
int
adc
arpl
fisubs
push
push
jo
pop
inc
push
shlb
xchg
xor
stc
push
out
aaa
mov
fisttpll
test
shl
sub
cmp
pop
add
sub
fstps
cmp
cmpl
and
icebp
imul
pop
push
cmp
sbb
add
int
scas
sub
fsubr
xor
out
sub
cld
daa
dec
cmp
es
stc
pop
int
icebp
push
cmpsl
lock
jl
lret
and
and
out
push
jb
rorl
test
daa
adc
xor
daa
lods
sub
fstpt
sbb
xor
nop
push
out
aad
and
movsb
daa
or
mov
shrl
mov
pushl
add
pop
dec
test
xor
loopne
dec
push
lret
cmp
daa
fstpt
ret
shlb
mov
jno
mov
rorl
ss
mov
pop
push
rcll
pop
in
push
jp
jecxz
add
jnp
fstpt
adc
sahf
push
mov
outsl
mov
jno
aas
je
out
lcall
sbb
ja
sbb
mov
ja
and
cli
stc
push
out
add
imulb
lods
cmpsl
push
mov
pop
mov
add
mov
jns
sub
mov
mov
pop
cwtl
pushf
imull
or
dec
pushf
daa
xlat
mov
mov
add
and
pop
in
adc
sbb
fiaddl
in
pop
sub
stos
clc
bound
mov
push
jmp
add
inc
sbb
xor
dec
call
outsb
cs
icebp
pop
rclb
adc
rcll
push
cmp
jg
sub
sbb
mov
ljmp
repnz
clc
jmp
icebp
nop
pop
call
and
jp
data16
lds
je
lods
movsl
cwtl
lahf
scas
shrb
fcompl
cld
lock
sub
dec
jg
push
nop
mov
adc
inc
mov
mov
shlb
movsb
sbb
loope
sub
leave
mov
mov
mulps
cmc
ret
dec
pop
push
fadds
push
nop
push
push
outsb
in
sbb
lcall
fimull
ljmp
in
aaa
es
aam
lods
cwtl
fwait
push
shll
int
aam
push
daa
lahf
loop
mov
adc
pop
in
outsl
sub
jnp
push
jl
movsl
movsl
mov
mov
xchg
shlb
sub
scas
cmp
xlat
or
mov
jge
fisubrl
push
ljmp
stos
int3
adc
cmpsl
xor
in
test
ret
jl
sbb
mov
pop
lcall
dec
adc
fwait
xchg
lret
mov
subb
sub
pop
sbb
aad
mov
cmp
push
mov
in
add
push
adcb
rorb
adc
pop
xor
jo
pop
addr16
lock
mov
lcall
add
add
iret
lods
jns
mov
cltd
enter
sub
jp
push
je
daa
sbb
outsl
fxch
add
xchg
mov
inc
clc
icebp
mov
push
loop
setle
jnp
adc
jle
lds
mov
mov
rcr
daa
in
fistpl
insb
pop
test
pop
xor
mov
or
sub
shlb
imul
sub
xchg
sahf
mov
mov
test
jo
pop
test
clc
add
cmp
xchg
push
sbb
mov
or
rclb
aas
or
in
xchg
jge
pop
xchg
int
addr16
pop
cmc
cmp
pop
and
cltd
pop
mov
mov
scas
addr16
lcall
add
rcll
or
cld
jecxz
cs
sub
mov
std
pop
movsl
insl
imul
add
push
jns
int
ret
mov
xlat
inc
add
clc
xchg
sub
xor
jnp
xchg
pop
or
push
sbb
xlat
mov
xchg
or
add
imul
movb
mov
jle
dec
sub
xchg
ds
xor
add
add
push
push
mov
insl
cmpsl
shl
add
mov
push
xchg
loope
stos
add
lahf
mov
cld
ret
mov
fcmovb
stos
xor
gs
nop
pop
pop
ja
xor
mov
cwtl
sub
or
push
std
push
cmp
pop
or
fs
and
fbstp
je
in
and
push
arpl
aad
cmp
std
lret
mov
mov
xchg
sbbl
add
jmp
mov
cmpb
xor
xor
ds
adc
push
das
scas
imul
jb
add
or
jg
cmp
stos
push
shl
sbb
and
xchg
xor
push
or
fcoms
pop
ret
jecxz
cmc
jle
cli
daa
add
lock
aaa
mov
fwait
cmp
lahf
imul
test
movsl
jp
adc
mov
stos
sub
dec
cld
int
iret
dec
xchg
add
fidivs
arpl
jne
mov
cmc
rcrl
pop
push
xor
mov
loopne
lds
add
aam
inc
jo
sub
scas
mov
sarl
movsl
pop
xchg
fldt
sbb
or
jle
aaa
sti
fsubs
xor
add
jb
mov
lret
scas
push
xor
shll
dec
or
xchg
sti
mov
in
leave
hlt
xchg
subl
out
and
js
adc
mov
sbb
andb
pop
sbb
loopne
push
clc
dec
ror
in
ret
jl
push
xor
cmp
aad
jmp
jmp
lock
aam
xorb
ss
lods
push
sub
xchg
int
mov
sbbb
sub
sub
testl
in
daa
mov
fcmovu
cmp
push
int3
and
shll
push
es
sti
jmp
faddl
xchg
lods
jmp
dec
xor
mov
pop
lds
sarb
lahf
lcall
and
faddp
cmc
in
lret
jle
inc
mov
push
pop
adc
repnz
fcoms
add
inc
lahf
push
mov
and
sub
mov
bound
sub
in
sub
and
in
mov
jmp
adc
xchg
dec
rep
aas
dec
mov
push
inc
out
rclb
lock
adc
mov
iret
and
bound
out
xchg
out
out
fldcw
lds
jno
cmp
dec
aad
xlat
sbb
sub
pop
cmpsl
test
cli
adc
sbbl
repnz
shrb
std
mov
test
into
sbb
lds
mov
add
jnp
test
mov
les
dec
push
pop
arpl
inc
or
or
fcoml
loope,pn
mov
mov
outsl
cld
dec
rcrl
inc
ljmp
cmc
lods
sub
sub
dec
or
cmp
fstpt
ljmp
jg
std
push
mov
cltd
int
stos
scas
add
mov
add
imul
into
lea
lcall
fnstenv
push
mov
repz
arpl
add
in
aad
push
cmp
faddp
jae
xchg
and
bound
jb
sub
xorb
aaa
and
out
or
ds
mov
repz
push
mov
mov
pop
movsb
fadds
xlat
das
dec
sahf
push
std
das
and
adc
jo
cld
mov
lods
insb
addr16
ret
test
and
or
sub
xchg
aas
mov
pop
add
mov
ret
jae
je
jmp
call
mov
xchg
mov
pop
push
jb
add
loopne
xlat
mov
pop
mov
iret
in
in
pushf
aad
add
push
outsl
sub
loopne
sub
or
adc
inc
add
outsl
fisubs
test
shl
mov
stc
cmp
cmp
fwait
sub
sti
mov
jl
mov
jbe
outsb
add
mov
add
pop
lret
push
aad
icebp
fldenv
or
icebp
inc
mov
pop
mov
fldcw
test
push
inc
dec
sbb
add
out
fnstsw
rclb
insl
pminub
or
mov
add
jle
xchg
xor
or
lret
adc
ljmp
fisubl
xchg
popf
movsl
mov
test
sub
xor
movsl
orl
ljmp
mov
push
xchg
movsl
sub
bound
pop
inc
cs
data16
push
cli
outsb
sbb
add
mov
mov
mov
xchg
xor
lods
add
adc
pushl
jge
dec
cmpb
or
mov
push
sub
in
sar
out
stc
lds
push
test
xor
cmp
lds
les
leave
fisttpll
mov
adc
adc
cmpsb
push
sbb
aas
jns
aad
sarl
add
sbb
mov
js
add
arpl
movsl
cmpsb
xor
sarl
cld
rdmsr
inc
cltd
lahf
mov
shll
fnsave
fildll
inc
push
out
shrb
lods
aam
int3
mov
add
repz
ss
push
test
addr16
roll
insl
loopne
adc
repz
subps
sub
pop
std
jne
xor
mov
sbb
cli
jecxz
punpckhwd
fadds
out
rorb
jnp
and
adc
dec
jnp
lret
rolb
xor
fisttps
mov
jb
mov
xor
mov
enter
xchg
cmp
out
mov
andb
call
loope
cs
rorb
or
js
xchg
cld
int
mov
out
cmp
cmpsb
xorb
mov
in
and
push
sbb
sbbl
popf
ficomps
into
ljmp
dec
int
sti
inc
les
jmp
mov
movsl
fsubs
push
mov
add
xor
adc
inc
adc
cmpsb
xchg
mov
and
out
shr
cltd
or
mov
and
jae
jg
movsb
dec
les
mov
jno
lods
in
mov
mov
and
nop
add
or
jbe
iret
xor
popf
dec
arpl
inc
xor
movsb
jl
mov
out
cwtl
lods
fldln2
mov
and
comiss
outsl
xor
fadds
lret
dec
jg
pop
enter
xchg
sbb
pop
xor
push
adc
xchg
nop
dec
push
and
out
jo
xchg
or
js
mov
add
mov
popa
add
test
into
push
out
xor
daa
int3
cmc
stos
daa
sub
mov
or
lds
cli
inc
lea
adc
inc
or
je
push
stos
sub
xlat
outsb
pop
xor
pop
cmc
inc
daa
mov
adc
xchg
fldl
inc
or
pushf
ficoms
dec
xor
cmpb
clc
add
inc
call
movl
cld
sbb
jp
in
cmp
cwtl
dec
or
js
or
iret
arpl
and
lods
mov
mov
psubw
and
cli
pop
lods
inc
xchg
inc
xchg
and
pop
xor
repz
data16
in
and
popa
cmp
sub
mov
and
test
in
imull
aaa
and
inc
test
fimull
ss
sub
dec
push
mov
jnp
mov
sbb
loopne
adc
rcrb
mov
jnp
icebp
mov
xchg
ljmp
int
js
pop
sarl
push
in
movsl
mov
imul
pop
xor
adc
ljmp
scas
jb
jmp
or
add
rcrb
outsb
mov
adc
sub
jle
lahf
sarl
jnp
repz
pop
sbb
test
adc
mov
lahf
dec
mov
mov
icebp
jae
inc
inc
cmpb
lods
pushf
jmp
movsl
mov
das
inc
pop
cmp
and
notb
pop
adc
mov
sub
pop
int3
rclb
mov
push
movb
movsl
mov
movsb
bsf
mov
mov
pop
out
call
lea
pop
mov
stc
sti
jp
xchg
push
or
loope
das
mov
int
cwtl
inc
push
and
mov
loopne
in
repz
xchg
ja
mov
ret
dec
lods
sbb
fisttps
push
stc
cld
int
pop
out
in
in
xorb
jnp
lods
data16
adc
jae
mov
mov
loopne
out
pop
mov
inc
aam
mov
cmp
hlt
aas
in
icebp
add
outsb
pop
inc
jge
lock
pusha
xchg
sub
push
and
es
popa
pop
aaa
jp
std
in
pop
inc
leave
push
test
ficomps
aaa
insb
pop
sti
sahf
push
dec
adc
jno
jmp
lods
lods
call
leave
cld
in
daa
mov
rclb
mov
sbb
gs
mov
hlt
xchg
lods
leave
int
adc
test
rcrl
pop
push
loope
imul
ja
aam
enter
jl
insl
sti
add
pop
mov
pushf
and
mov
and
push
int
mov
js
leave
and
cmp
cmp
mov
adc
add
or
scas
outsl
inc
daa
es
mov
xor
jge
or
cltd
or
or
pusha
or
and
sahf
leave
loope
jmp
jo
dec
pop
mov
popf
mov
or
subb
into
lds
push
out
cmp
ljmp
lock
mov
stos
xchg
mov
les
lret
dec
loope
mov
push
dec
push
mull
jae
into
aas
push
jbe
inc
pop
movsb
adc
arpl
mov
int
out
lret
cmp
scas
push
in
ja
sub
test
xchg
push
ds
movsb
ljmp
mov
mov
cmp
adc
or
shl
or
adc
shll
in
loopne
add
mov
fisttps
mov
sub
or
adc
dec
xor
andb
cmp
add
push
mov
ret
addr16
ja
out
lcall
sub
stc
add
dec
mov
push
cmc
ret
pusha
mov
andb
adc
and
push
pushf
icebp
or
cmp
adc
pusha
ret
das
pop
aas
movsb
sub
lahf
test
sbb
movsl
push
jo
xor
repnz
xor
cmpsl
popa
test
mov
add
retw
dec
insb
ja
pop
das
data16
test
xchg
mov
jp
stc
fucom
xchg
push
int3
jnp
pop
push
jp
mov
dec
or
cld
sub
sub
or
shlb
int3
and
sahf
jge
in
mov
inc
xchg
fstps
outsl
mov
mov
xor
gs
mov
fs
popf
popf
mov
in
push
xchg
cli
aaa
sub
pop
mov
sahf
pushf
cs
cltd
mov
rorl
sahf
mov
xlat
inc
insl
adc
aas
fs
mov
lret
leave
outsb
add
inc
negl
and
inc
mov
loopne
aad
inc
out
add
test
adc
add
inc
jo
sub
push
ja
out
inc
test
test
mov
aas
jmp
mov
nop
adc
xchg
mov
xor
adc
jg
pop
cmpsb
mov
jae
leave
dec
daa
and
mov
std
xchg
aad
or
out
pop
pop
pop
xor
iret
sbb
and
sub
ljmp
fwait
or
jb
data16
inc
xchg
popa
das
mov
jmp
paddw
addl
ret
loope
cli
loope
pop
or
lock
sbb
mov
inc
and
icebp
cli
or
test
aas
jb
ffreep
jnp
mov
jno
pop
enter
or
mov
cwtl
shll
jne
or
jg
push
jmp
cmp
mov
jne
cmpsb
inc
ret
push
cmpsb
dec
mov
jle,pt
mov
push
fwait
rclb
ret
or
jle
adc
xor
add
xchg
jmp
insl
insb
movsl
pop
pop
pop
jle
add
or
inc
mov
icebp
imull
xor
xchg
fdiv
inc
out
mov
mov
movsb
xchg
in
add
lcall
xchg
sbb
and
jg
mov
rcl
xchg
mov
testb
inc
jo
push
fdivs
arpl
mov
ss
xchg
ja
nop
ficoms
arpl
cmc
sub
jmp
jle
cmp
out
out
sahf
mov
dec
cmpsl
inc
out
lock
jl
mov
mov
das
jecxz
push
dec
jne
adc
push
std
sub
inc
inc
sbb
mov
fstl
fstpt
lret
mov
push
jne
mulb
lret
cmp
dec
sbb
sub
sub
jbe
leave
mov
flds
mov
dec
ja
lods
jbe
add
mov
xor
or
lds
push
sarl
test
push
imul
push
sub
test
xchg
mov
ret
stos
sub
ds
mov
mov
fwait
sarl
pop
sub
jmp
jge
push
push
shrb
arpl
mov
sub
jo
icebp
mov
pop
orl
dec
fisubs
dec
pop
pop
add
xor
jl
call
or
scas
sub
lret
cmp
inc
xchg
push
fwait
notb
ret
ja
push
push
mov
ret
inc
adc
repz
or
lock
adc
pop
fdivl
sub
out
pop
push
and
lods
adc
mov
in
fwait
test
adc
pop
mov
and
ds
sti
mov
xchg
add
movl
mov
fimull
or
xor
xor
push
adc
cli
mov
ds
adc
mov
popf
xchg
sub
mov
mov
adc
mov
bound
and
scas
jmp
and
mov
push
mov
divps
daa
mov
mov
aaa
push
sahf
or
int
lret
or
mull
cli
jg
daa
sahf
or
inc
lds
in
aad
ja
sub
adc
test
push
es
in
das
dec
pop
push
cmpsb
and
xor
outsb
add
jb
mov
jg
push
mov
stc
nop
cmp
pop
inc
mov
mov
xlat
push
add
mov
mov
popa
lds
es
es
lods
push
push
pop
sti
jg
cmpsb
sub
dec
test
inc
mov
mov
sbb
xlat
adc
popa
pop
and
and
in
js
push
rolb
dec
jmp
bound
push
test
add
sbb
add
xchg
mov
call
test
or
orl
cli
push
push
test
insb
adc
pop
nop
or
andl
mov
sar
xchg
pop
shrb
loopne
fildl
inc
ret
mov
lcall
sbb
mov
jmp
push
leave
popf
xor
enter
ds
mov
jmp
cs
add
sub
lret
loop
sahf
rol
imul
in
or
add
xchg
mov
sarb
sub
andb
es
daa
mov
cmp
pop
mov
pop
roll
int3
xchg
dec
pop
and
cmpl
aaa
loop
xor
push
sahf
or
test
daa
push
dec
push
into
dec
sbb
cmp
jp
ds
xchg
mov
pop
cmp
pop
or
loope
leave
jnp
cli
ds
lods
daa
fildll
and
test
mov
test
sarl
mov
mov
adc
adc
adc
push
int3
cmp
lahf
pushf
inc
or
add
out
xor
mov
in
jnp
mov
mov
js
es
mov
push
fsubs
mov
dec
mov
xchg
sbb
inc
sub
sbb
movd
sbb
jno
push
pop
pmovmskb
in
test
pushf
mov
xlat
gs
ja
js
or
mov
sub
cli
and
mov
cmp
mov
test
ret
js
out
sbb
xchg
jns
xor
orl
sub
sbb
filds
call
in
inc
push
push
mov
or
movsb
sbb
push
cwtl
rcr
andb
push
or
inc
xchg
je
out
outsl
rcrb
ds
jl
and
xor
or
loope
repz
push
ficompl
push
cltd
xor
jbe
lods
jecxz
insl
int3
data16
push
lahf
dec
jb
push
or
sbb
dec
xor
push
loop
add
sar
xchg
lahf
mov
in
xchg
mov
sbb
lods
out
in
pop
jns
bound
ds
sti
mov
mov
mov
in
xchg
ficoml
mov
ret
mov
es
mov
sbbb
cmpsl
lods
jg
jge
imul
lods
pop
pop
and
mov
sbb
dec
adcb
lcall
nop
in
insb
ljmp
pop
gs
mov
jg
dec
mov
sub
push
insl
sbbl
outsb
pop
stos
jg
pop
mov
dec
stos
inc
aad
xor
cmp
out
and
subb
push
jmp
cmpsl
cmp
in
mov
xlat
dec
push
cmp
jo
out
mov
cmp
lods
mov
dec
mov
fcmovbe
xchg
out
xor
aas
push
fistpl
xchg
or
ja
or
pop
and
xchg
repz
dec
lret
inc
mov
int
push
push
rclb
repnz
and
fmuls
cmc
cmp
mov
mov
sbb
pop
rcr
js
test
add
xchg
or
in
mov
repz
enter
mov
xchg
cmp
push
cmp
fdivl
jp
hlt
outsl
xor
flds
cmp
jge
add
cmpsl
mov
push
pop
test
cmpb
js
inc
ds
xor
sbb
xor
aad
pop
mov
mov
cli
movsl
test
and
adc
sti
cmp
out
movzbl
jge
and
call
pop
xor
cld
mov
xor
mov
push
adc
rolb
xor
hlt
movl
inc
cld
mov
shrl
xor
ja
cmc
jbe
cltd
adc
pop
xor
lret
inc
popf
add
sub
fwait
es
pop
pop
int
mov
daa
imul
repnz
ljmp
pop
fdivs
mov
add
adc
push
cmovs
adc
xchg
jne
in
cld
iret
mov
mov
ret
test
and
aad
sub
mov
test
repz
in
rorl
xchg
rcll
xchg
ret
adc
cli
test
mov
or
fstl
outsb
mov
aam
sub
sbb
mov
and
mov
pushf
push
dec
lock
movsb
mov
aad
enter
lock
in
out
ret
push
mov
mov
pop
xchg
add
xchg
sub
xor
pop
test
pop
cmp
push
dec
nop
out
fstps
adc
popa
add
and
insl
lds
call
xchg
shrl
push
sbb
addb
adc
mov
cmp
inc
ja
inc
outsl
dec
lcall
push
mov
xor
xor
stos
inc
loope
out
sahf
inc
mov
mov
xchg
fidivl
hlt
sbb
dec
xchg
rclb
mov
fwait
imul
adc
cmc
mov
push
aaa
lcall
out
mov
sub
lods
jg
or
or
scas
jge
and
adc
sbb
in
out
cltd
js
xchg
popf
inc
pop
sti
mov
test
pushf
loope
mov
jbe
xor
sbb
jge
sub
mov
lods
adc
mov
dec
mov
cmp
out
shl
xchg
data16
xchg
int
jbe
dec
insb
push
mov
xlat
xor
push
mov
lock
or
idivl
cltd
shrb
adc
fadds
push
cltd
in
repnz
ja
adc
jns
cwtl
xor
flds
xor
scas
inc
popa
and
insl
loope
and
pop
rolb
jno
in
bound
add
and
inc
xchg
scas
mov
call
popa
lret
out
pop
add
add
mov
adc
repz
push
ror
inc
pusha
dec
fidivl
lcall
inc
cmp
push
lea
lcall
jne
jge
pop
mov
cmp
xchg
out
xor
mov
jle
xchg
add
mov
mov
lret
shrb
jmp
incl
or
negb
lea
hlt
xor
pop
xor
rorb
loop
dec
jb
xchg
ret
xchg
mov
pop
jmp
inc
es
jge
pop
fnstsw
call
xor
xlat
imul
cld
mov
mov
cmpb
and
jge
lods
inc
jae
cmp
or
ret
gs
jp
pushf
jo
in
lcall
in
iret
in
subb
or
es
jo
aaa
pop
scas
outsl
test
mov
movsl
ljmp
jmp
dec
fldenv
outsb
xlat
pop
xchg
mov
adc
fiaddl
jp
pop
cmc
and
outsl
push
jns
rorl
stc
sarl
insl
and
add
cld
ljmp
sbb
subb
xor
mov
push
arpl
int
jle
or
sbb
int
fdivr
mov
mov
test
and
ret
ja
test
fcompl
nop
jo
mov
add
jbe
adc
pop
add
push
sbb
rol
cmp
ret
mov
loopne
sbb
shrb
sub
fimuls
int
in
mov
test
pop
out
shlb
fcmovnb
pop
ja
lock
inc
mov
js
test
add
insb
mov
or
and
sahf
sub
xchg
push
mov
sbb
lds
xor
lcall
jp
les
mov
dec
test
lods
int3
lock
scas
out
xchg
stos
test
js
fstpt
and
jp
mov
inc
enter
fdivrs
mov
out
imul
push
pop
pop
adc
add
ss
rorl
push
xlat
cmc
mov
bound
test
jns
data16
mov
es
inc
jmp
jmp
adcl
inc
insb
pop
xlat
test
scas
in
icebp
mov
xlat
pop
mov
in
inc
xor
jl
hlt
cs
cmpsl
mov
mov
dec
and
or
sub
cmpsl
mov
inc
cltd
cmp
adc
cli
cmp
push
cmp
cmc
mov
out
xor
les
jmp
paddsw
in
xchg
jb
mov
or
xlat
cltd
jmp
mov
push
jae
sti
out
push
adc
add
xor
sub
mov
cmpsl
pop
imul
jo
mov
or
and
jp
lret
insb
pop
adc
jmp
inc
xor
inc
bound
mov
or
xor
stos
jle
push
push
out
int
cwtl
dec
pusha
cmp
enter
test
imul
mov
pop
xor
ja
test
mov
stc
idivb
jg
bound
jno
dec
mov
loope
or
sahf
mov
ljmp
sbb
pop
xchg
and
adc
fmuls
insb
rep
dec
sbbl
popf
cld
adc
in
push
cmp
dec
xchg
adc
sbb
and
jmp
shrl
fdivl
and
sub
aam
mov
inc
loop
cmp
or
push
inc
xor
jb
inc
mov
dec
mov
je
mov
cmp
jo
jno
mov
icebp
cmp
sarl
mov
pushf
inc
insl
in
mov
jge
icebp
incb
inc
aaa
inc
mov
loop
inc
sbbb
xchg
sahf
xchg
jmp
notl
pop
xchg
std
push
cli
popl
fbld
jl
mov
pusha
push
out
pusha
insb
scas
cmc
jae
sbb
adc
sbb
popf
ret
into
xor
and
insl
rorb
fnstenv
leave
dec
adc
out
adcl
fsubrs
mov
dec
scas
iret
pop
into
fmuls
cmp
out
push
cltd
insb
or
lret
pop
inc
sbb
fcomp
cmpsl
nop
push
scas
jmp
jno
jmp
dec
dec
mov
sub
notb
pop
inc
adc
adc
jmp
lods
lret
or
rclb
mov
sbb
ljmp
xor
xor
test
daa
xchg
add
jge
lret
cmp
dec
insl
jp
sub
lret
sbb
sbb
inc
mov
notb
or
cmc
dec
pop
fsubrp
gs
cmpsl
xchg
in
aaa
std
scas
push
lock
or
mov
aaa
outsb
insl
out
or
jle
popa
and
sub
jne
adc
out
add
bound
dec
iret
or
int3
data16
xchg
lea
mov
xchg
inc
shrb
push
in
dec
jno
test
or
mov
push
sbbb
jmp
xchg
add
roll
stos
mov
xor
pop
arpl
shrb
pop
and
std
mov
jle
add
or
sbb
and
and
shrb
xor
mov
sbb
push
pop
cmpsl
pop
sti
push
iret
inc
ret
shll
js
cmpsb
push
cmc
jle
adcl
jmp
dec
outsl
imul
bound
ljmp
push
mov
nop
int3
test
add
pushf
test
push
leave
in
mov
test
repnz
movl
xor
stos
cmp
jbe
or
cmp
mov
jbe
xchg
xor
out
das
sub
int
aam
shll
pop
loope
in
popa
adc
nop
pop
xchg
scas
push
movsl
mov
add
jo
xchg
test
inc
fcomi
imul
loope
jne
insl
mov
gs
je
cli
ret
or
jg
scas
and
cmp
lods
cli
jae
out
imul
mov
call
push
jo
repz
shr
fisttps
xchg
imul
xchg
stc
sbb
dec
fimuls
aad
ss
jns
insb
out
add
dec
push
mov
mov
jl
daa
xchg
sub
dec
sub
lcall
stos
insb
mov
rcrl
scas
das
inc
dec
and
inc
mov
lods
xor
in
xor
into
push
mov
arpl
cltd
loop
cmp
xchg
sub
mov
xor
dec
bnd
mov
test
in
pop
xchg
testb
and
pop
mov
jbe
jecxz
mov
cmp
cli
dec
sahf
mov
push
shlb
scas
je
jg
push
sub
repnz
jbe
fcom
inc
test
pop
out
sub
and
cmp
daa
or
shrb
mov
pop
push
shll
hlt
addb
push
loop
dec
test
cmp
fcomps
das
mov
adc
adc
scas
in
mov
sbb
aaa
sti
leave
fisubrl
icebp
add
cwtl
jo
xor
mov
inc
loop
sub
xor
out
inc
inc
dec
into
adc
push
adc
sbb
aas
test
das
mov
cmp
sbb
notl
mov
movsl
loopne
out
cmp
mov
pop
xchg
jne
cs
xor
gs
adc
imul
mov
outsl
sbb
int
cmc
and
jno
je,pt
push
sbb
xlat
mov
xor
fnstenv
mov
repnz
sahf
xchg
add
mov
outsl
mov
testb
sahf
mov
xchg
sbb
clc
inc
xchg
daa
mov
shlb
inc
out
icebp
adc
sbb
cltd
aam
add
mov
rcr
and
icebp
jecxz
in
js
into
lret
mov
popa
stos
sbb
bound
push
dec
pop
inc
pop
xor
hlt
orl
int
in
in
adcl
out
mov
fwait
scas
pop
das
inc
loope
pop
test
inc
jmp
ficomps
mov
or
lcall
cwtl
mov
test
and
push
inc
inc
sbb
insb
mov
push
scas
pop
dec
mov
mov
pop
cmc
or
ret
hlt
mov
jno
push
mov
mov
test
shr
jno
push
cmp
sti
mov
mov
lret
cmp
push
mov
inc
sbb
xchg
pop
mov
sbb
pop
movsb
orb
ljmp
jb
fs
mov
cmp
cmp
lret
in
push
push
cmp
cmpsl
add
push
scas
js
or
scas
mov
inc
rcrb
dec
cmc
push
sti
js
les
pop
push
lret
mov
sar
ficoml
push
push
sbb
in
call
xchg
loope
jbe
jp
cmp
xchg
dec
xor
xchg
movsl
test
ret
shlb
dec
inc
test
loop
int
enter
subl
xlat
push
adc
imull
gs
xor
lret
or
lock
mov
fistpll
jg
inc
xchg
dec
mov
cmpsb
cmp
arpl
ja
push
or
cltd
cmp
mov
mov
jne
push
xor
in
in
mov
add
sub
xchg
mov
outsl
inc
xchg
mov
jmp
xlat
pop
aam
jb
test
pusha
cmp
jae
inc
xchg
test
add
movsl
xlat
mov
jmp
mov
push
stos
addb
stc
push
inc
xchg
das
mov
cwtl
and
dec
inc
ret
xchg
jmp
repnz
inc
sub
cmp
rorl
mov
xor
xor
push
mov
call
pop
sub
daa
pop
test
sbb
jns
cli
mov
jmp
pop
mov
std
arpl
lods
jmp
shrb
cmp
pop
push
mov
push
imul
movsb
icebp
pushf
add
xchg
movsl
inc
ret
lcall
fiaddl
inc
stos
pop
mov
mov
fnstcw
sub
fwait
enter
int
rol
incl
mov
lods
fistpll
popa
cmpsl
dec
cs
mov
sub
inc
jnp
sbb
aad
int3
or
imul
xchg
push
lds
es
les
push
bound
int3
mov
or
stos
add
movsb
and
stc
fmull
inc
fiadds
mov
incb
in
inc
push
fwait
inc
dec
xchg
test
sbb
inc
out
out
jl
jmp
push
shrl
or
test
cld
push
xchg
or
je
cmp
mov
leave
xor
lds
xor
bsf
mov
dec
pusha
or
pop
mov
pop
shll
mov
mov
push
aam
popf
adc
jnp
call
dec
pop
jnp
push
cmp
xchg
add
out
dec
insl
jae
cli
adc
push
xchg
push
and
mov
roll
cmp
or
jne
xchg
and
jp
mov
fdivrs
aas
mov
inc
lods
in
push
sbb
mov
sub
mov
adcb
pop
popa
pushf
fistl
sahf
add
sbb
push
push
mov
hlt
dec
dec
mov
xchg
cwtl
mov
ss
adc
and
das
inc
outsb
inc
movsb
es
xchg
rcr
cmpsb
cmpsb
int
test
es
push
fcmovnbe
jo
fxch
adc
icebp
sbb
hlt
mov
scas
lods
shrl
shrb
sbb
loope
inc
inc
cmp
inc
pop
jb
push
push
sub
ds
dec
adc
mov
addb
push
adc
sub
xor
add
jge
xchg
sbbb
int3
popf
or
mov
sub
daa
adc
fists
fadds
xchg
or
shrd
jge
dec
mov
mov
stos
outsb
pop
hlt
mov
cltd
je
cmpsb
mov
aam
and
push
jo
or
cmp
call
or
pop
fs
mov
stos
inc
out
sub
arpl
or
fwait
pusha
inc
int3
addr16
xchg
fs
mov
jne
shr
das
lock
outsb
and
test
fs
mov
mov
imul
jecxz
rcr
dec
jp
nop
pop
out
clc
jmp
mov
mov
lock
mov
sbb
fwait
xlat
enter
pop
popf
int3
and
call
push
jge
ss
xorl
cmc
jbe
cld
jns
fsts
pushf
or
xchg
and
stos
push
and
pop
testb
mov
adc
out
test
xor
jns
leave
mov
aam
mov
xchg
dec
lcall
dec
or
in
dec
pop
xchg
xor
loope
dec
sbb
test
pop
jp
lods
jecxz
mov
leave
addl
lret
into
fcmovnbe
adc
fisttpll
cli
test
iret
test
inc
xor
push
jmp
cli
add
mov
cmp
push
aas
cmp
push
lods
xor
cltd
std
pop
xchg
int
fdivl
fdivl
inc
out
pop
lods
xor
fbld
or
xor
mov
sub
lock
ret
movsl
mov
sub
or
enter
das
and
ret
sub
pop
jmp
dec
lret
int3
adc
pop
lods
dec
lahf
push
push
aad
test
gs
cmp
loopne
outsl
aad
push
cwtl
sbb
out
pop
rorb
mov
imul
xor
jg
or
pusha
pushf
frstor
pop
call
popf
das
jb,pn
inc
jp
add
ja
fs
pop
test
mov
fidivl
orb
cmp
cmp
jns
mov
cld
idivl
sub
and
leave
lds
xchg
pop
repnz
jg
adc
test
jne
je
and
pop
fcoms
sub
xchg
xchg
fcmovb
sbb
jne
adc
jp
fistpl
inc
stc
popf
mov
pop
lock
addr16
iret
jl
jno
ret
idivb
repnz
xlat
sahf
js
xor
xchg
call
xor
lret
addr16
cwtl
and
js
dec
xlat
or
aad
insl
sub
push
scas
aad
jmp
mov
fnstenv
or
clc
sbb
xchg
cltd
test
xchg
pop
mov
xor
jle
fcomps
pop
sbb
mul
sarb
xor
loopne
xchg
std
xchg
inc
movsl
push
push
jne
xorl
ja
xchg
lods
lret
jp
and
pop
int
sarl
add
mov
push
out
pushf
add
int
insl
adc
addr16
pop
scas
push
das
ret
lods
jne
and
cmp
adc
mov
pop
les
cmc
ficoms
mov
dec
es
mov
xlat
push
adc
push
inc
add
lods
adc
fisttps
cmp
sub
sub
xchg
bound
jge
inc
jl
stos
cmp
outsb
lock
inc
and
xchg
and
subl
mov
lds
lds
repz
mov
jp
arpl
icebp
cmp
aad
jl
arpl
stc
pop
cmp
out
lods
or
mov
mov
dec
sub
scas
and
jne
insb
cmp
rol
cmp
push
mov
in
aas
mov
mov
lret
clc
sub
ret
mov
repz
mov
insl
or
ja
inc
mov
test
jge
pop
push
rcl
inc
jmp
int
sahf
in
loope
cmp
or
sti
push
outsb
ret
ds
jno
das
mov
lods
xchg
lds
test
xchg
pushl
mov
test
mov
sbb
fisubs
mov
xchg
adc
or
cmpsb
rorb
mulb
arpl
sbb
jb
and
jns
enter
ljmp
out
cltd
fstpl
xchg
sbb
push
mov
stos
pusha
mov
pop
imul
push
sbb
mov
inc
lret
pop
call
mov
ljmp
cli
cmp
dec
pop
or
dec
call
pop
aad
sub
add
fwait
sub
cltd
fdivl
test
sysenter
pop
les
pop
or
pop
jmp
sahf
mov
cs
ljmp
mov
enter
push
xchg
push
scas
popf
sbb
xchg
sbb
mov
test
cwtl
shlb
shr
fdiv
imul
test
js
push
popf
fisttpll
lods
roll
enter
call
les
lds
jno
clc
pop
jbe
sbb
sub
dec
fdivrs
lret
fnstsw
inc
clc
xchg
xor
dec
lret
faddl
xor
aad
xchg
fisttpl
cwtl
insl
or
pop
js
in
adc
jne
add
into
and
mov
jl
outsl
mov
daa
nop
mov
in
and
mov
pop
mov
add
rcrl
addr16
and
hlt
inc
inc
stos
pop
mov
mov
call
adc
cmp
sbb
shrl
cmp
out
jle
jns
or
pop
lahf
iret
cld
inc
bound
mov
jl
mov
dec
lcall
add
inc
jecxz
imul
push
xor
sarb
dec
or
pop
adc
mov
push
jb
js
push
test
out
rcrb
sub
pushf
adc
repz
push
shlb
mov
jbe
movsl
nop
dec
adc
add
cltd
in
jecxz
lret
dec
sbb
cmp
adc
cli
mov
subl
aad
add
movsb
push
mov
and
fwait
das
shrl
dec
clc
xlat
inc
rorb
xor
xchg
jl
pusha
fiaddl
xchg
fstpt
fwait
add
dec
loope
dec
outsl
xchg
push
in
jnp
pop
push
arpl
xchg
js
sub
jb
movsl
mov
insb
adc
mov
pcmpeqb
xchg
addb
mov
lock
jns
xor
dec
sub
jl
push
movsb
push
popa
cmp
add
cmpsl
sub
jo
stos
lea
repnz
rolb
xchg
mov
insl
xchg
pop
pinsrw
push
push
xlat
push
pushf
push
push
push
inc
in
cli
jnp
adc
add
fdivrl
cld
mov
lcall
rolb
mov
std
lret
xchg
loope
sar
sub
mov
in
test
add
rcl
fisttpl
imul
lods
int3
push
mov
inc
pop
mov
pop
stos
or
dec
scas
lahf
idivb
jmp
sbb
mov
mov
cmp
sbb
jmp
add
xor
in
pop
add
decb
notl
mov
and
lret
hlt
sbb
cld
lea
and
pop
pop
imul
fcomps
ljmp
bound
aas
inc
push
fdivrs
add
adc
popl
insb
pop
adc
sahf
push
jecxz
in
sub
mov
cltd
mov
xchg
js
jbe
pop
stos
add
pop
scas
xchg
mov
dec
jae
jle
out
ja
insb
ffreep
jb
pop
jp
cmc
dec
shlb
sbb
mov
add
in
push
mov
loopne
pusha
add
fidivrs
lock
ja
loopne
scas
das
mov
adc
sub
and
jmp
shrb
mov
inc
mov
ja
dec
xor
insl
repz
cwtl
ret
jecxz
and
ret
mov
xchg
xchg
adcl
mov
jbe
and
aad
cmp
stc
lret
and
xchg
inc
es
push
jae
aad
lods
roll
push
xor
mov
add
or
lods
mov
aas
pop
inc
and
push
lret
aaa
sub
addl
pop
movb
jg
inc
inc
mov
fisttps
icebp
pop
xchg
xchg
mov
in
daa
insb
jnp
into
dec
jbe
push
cwtl
mov
idivb
sti
jns
cmp
mov
sets
cli
xchg
aaa
xchg
dec
sbb
clc
addr16
outsl
adc
dec
aam
pop
sbb
mov
mov
test
push
lock
push
ret
out
mov
add
arpl
sub
sbb
mov
fcmovnb
xchg
and
adc
dec
hlt
mov
fwait
testl
mov
std
inc
stc
dec
xchg
pop
pop
fistpll
loop
out
sub
enter
or
hlt
mov
aam
and
add
mov
cli
ret
push
repz
out
jnp
jne
and
pop
repz
push
push
add
dec
std
pop
sbb
lret
push
pop
in
push
mov
test
xchg
xor
cmp
iret
xchg
jo
addr16
inc
sub
ss
imul
icebp
stos
cld
cwtl
pushf
fcmovne
and
hlt
push
adc
fs
pop
nop
fstps
repnz
push
xorl
xor
mov
xor
out
movsb
sub
enter
aaa
xchg
xchg
int3
and
add
cmp
loope
push
aad
mov
roll
out
jnp
rcr
aaa
into
data16
dec
popa
lods
aam
mov
loope
xchg
bound
out
dec
mov
mov
mov
and
arpl
dec
cmpsl
add
movsl
mov
fsubs
mov
iret
out
pop
inc
movsl
mov
xor
pop
fsubs
je
sub
sub
ss
and
cmpsl
pop
ret
dec
mov
in
mov
xor
insb
sub
mov
cmpsl
cs
and
int3
pop
jno
xchg
imul
add
in
nop
scas
test
adc
and
mov
pop
popa
jne
or
sbb
jge
std
sub
movsl
mov
jnp
jae
aaa
push
add
or
faddl
cmpsl
push
stos
out
lds
mov
sub
inc
shrd
or
movsb
mov
or
and
leave
cmp
bound
lret
cmc
sbb
stos
push
out
xor
popf
inc
dec
lret
shll
xchg
fxam
cmp
popf
fwait
mov
push
mov
mov
hlt
inc
xchg
cs
aad
push
rorl
cld
das
sbb
fdiv
adc
push
jnp
arpl
pop
enter
jo
notb
out
ljmp
rcl
or
sub
inc
pop
pushf
out
ljmp
cmpsb
xor
test
mov
lret
inc
fst
cmp
add
fistpl
mov
daa
mov
psrad
pop
or
cli
cmp
or
aam
scas
cli
jbe
dec
cmp
sbb
imul
clc
gs
pop
cmpb
decl
dec
lea
pop
pop
fsubl
ljmp
je
dec
adc
ss
cmp
scas
daa
xor
test
xor
jl
hlt
mov
xor
or
pop
pop
js
mov
jo
mov
fldt
rorb
dec
cmp
pop
movsl
fidivrs
aaa
mov
test
loop
adc
sbb
lret
lcall
add
cld
cs
pop
adc
cmpsb
lea
insl
addr16
movsb
popf
jno
xlat
fmul
lcall
mov
pop
mov
sbb
push
push
in
add
mov
fstpl
je
sub
lcall
add
jns
cmp
in
jne
mov
push
in
pop
mov
xchg
push
addr16
xor
lfs
pop
addr16
shl
test
push
cmc
add
xor
and
aad
jne
cmpsl
and
call
push
mov
sub
rcr
xor
sub
rclb
push
lret
sahf
ret
leave
jmp
movsb
lods
fimull
push
adc
mov
xchg
sti
imul
inc
dec
cmc
mov
sbb
out
cmpsb
push
sbb
lds
pop
sbb
bound
jb
inc
inc
jne
jb
scas
out
repz
shlb
mov
pop
orl
jl
mov
xchg
testl
lock
pop
mov
in
fcomps
sbb
popf
and
sub
stos
fadds
cltd
jl
jp
xchg
sbb
sub
std
cmp
js
mov
and
or
jge
lea
js
mov
loopne
call
rcrb
dec
jo
sub
pop
repz
lods
push
or
xchg
pop
test
daa
fbld
jo
pop
or
in
scas
and
fsubrs
gs
or
sub
leave
cmp
xor
pop
inc
push
adc
pop
jecxz
cmpsb
or
mov
jns
cmp
jae
jle
mov
sbb
ret
notl
ja
mov
dec
cmpsb
inc
mov
cmp
ss
inc
sbb
mov
sbb
scas
mov
outsb
pop
fwait
scas
pop
cmp
pop
push
pop
imul
mov
js
inc
scas
add
sbb
jbe
sbb
mov
xchg
xor
cmpl
loop
or
push
pop
mov
xchg
test
push
jno
in
or
fadds
enter
sub
cmp
push
mov
int3
mov
aam
pop
jg
pop
xor
inc
stc
sbb
xor
mov
hlt
xchg
es
mov
jns
fcom
inc
xor
lods
insb
mov
in
nop
movsb
adc
movsb
into
jmp
mov
insb
push
stc
adc
ja
jns
jl
push
push
es
jo
test
mov
lret
dec
xor
lods
nop
jns
testl
cmp
fsubs
jo
clc
xor
xlat
sti
lcall
fsubrl
cmp
lahf
repnz
pop
dec
int
jbe
add
jmp
push
lock
shrb
or
adc
movsb
test
sahf
scas
add
stos
out
mov
sub
aad
pop
push
xlat
hlt
lret
in
gs
in
pop
xor
sub
lock
push
or
insl
mov
xor
sti
xchg
fscale
fistpl
sub
or
in
mull
mov
sbb
add
xlat
dec
cwtl
repnz
das
stos
nop
shl
adc
cmp
jg
jge
mov
mov
and
ficoml
int3
and
mov
mov
mov
sbb
loop
rcll
movsb
jecxz
int3
iret
adc
hlt
mov
les
or
jle
lahf
xchg
cmp
std
sub
adc
xchg
sbb
insl
nop
sub
dec
sbb
mov
dec
xor
arpl
incb
inc
jae
xor
xchg
inc
sbb
arpl
inc
pop
int3
loop
outsb
sahf
jecxz
cltd
jae
cmp
rolb
outsl
jle
out
and
mov
in
out
mov
fsubrl
mov
push
cld
lcall
je
rorb
dec
arpl
out
mov
pop
and
jnp
fwait
jnp
stos
xor
pop
pop
inc
mov
leave
push
lahf
mov
sub
ret
mov
jb
sub
in
pop
mov
jmp
xor
mov
push
sbb
repz
loop
cmp
xor
frndint
cmp
mov
bound
jo
inc
jbe
xor
decl
sbb
xchg
imul
sub
or
pop
jmp
add
xchg
movsb
lahf
js
or
shl
ss
ror
sub
mov
cmp
add
and
push
and
mov
jns
ficoms
pop
cmp
push
sub
adc
inc
adc
bound
rorb
pop
popa
lods
xlat
cmpl
mov
repnz
dec
mov
popf
movsb
out
xchg
sahf
ljmp
jg
addr16
in
cmpsb
jmp
shrl
ds
outsl
shl
mov
loopne
es
dec
pop
xchg
mov
dec
lcall
sub
push
cmc
mov
je
push
cmp
out
push
push
and
out
clc
jmp
push
push
jae
lock
cmp
or
jno
out
adc
lret
inc
push
xchg
test
xchg
jae
outsb
push
mov
mov
add
aam
sahf
lock
insl
int
cmpsl
stc
and
and
jmp
xchg
mov
add
call
add
aam
pop
jp
push
xor
xchg
pop
loope
rclb
dec
push
adc
mov
hlt
or
lock
or
dec
shrb
pop
and
cmp
std
fbld
sbb
sbb
jbe
scas
pop
aaa
push
xor
pop
in
mov
or
fstpl
aaa
sub
lahf
push
inc
push
popa
cmc
sbb
jno
fidivl
jmp
pusha
ret
ja
pop
rorb
clc
jno
out
iret
add
sub
mov
andl
dec
and
or
fucomi
dec
xor
lock
shrb
movsl
jge
inc
jp
lea
and
repz
sbb
cmpl
sbb
into
jmp
out
sub
adc
test
inc
sti
mov
std
sbb
lret
in
cltd
sbb
sbb
adc
and
in
sub
adc
ret
subl
sbb
xchg
and
add
js
sbb
xor
mov
sub
dec
dec
dec
dec
sub
mov
jae
mov
dec
jp
lahf
hlt
and
sbb
push
xor
in
adc
sub
push
or
ja
push
test
sbb
js
mov
xlat
sbb
repz
dec
std
popa
sbbb
cld
jmp
loopne
call
add
push
sbb
rcll
push
cmpsb
jo
jge
jge
xchg
mov
fisubrl
xor
xchg
lahf
lahf
adc
aaa
inc
js
scas
jecxz
fbstp
shl
cmp
rcll
or
xchg
mov
add
dec
or
sti
mov
mov
add
push
dec
rcrb
cld
xchg
pop
dec
push
aas
dec
mov
fwait
loopne
pop
outsl
ret
sub
inc
mov
movsb
inc
xchg
repnz
nop
or
xor
adc
mov
add
int3
dec
cs
mov
movsl
cmp
inc
push
inc
pop
lcall
inc
repz
mov
mov
mov
dec
sub
mov
add
mulb
int
pop
pop
pop
push
and
fs
nop
mov
mov
dec
push
flds
stos
fldt
mov
pop
xchg
lret
inc
incl
ds
fildll
jae
or
inc
cmp
cmp
jmp
jbe
inc
jmp
jmp
sarb
sub
lret
xor
popf
sub
add
or
pop
lahf
ds
xor
stos
xor
insb
sbbl
dec
or
sbb
outsl
les
out
push
inc
sub
xchg
jbe
fld
inc
sbbb
pop
inc
iret
idiv
xlat
cli
jns
rolb
mov
fdivl
jle
mov
dec
jno
scas
mov
out
pop
aaa
out
imul
pop
xchg
push
out
mov
loopne
pop
xchg
xor
imul
adc
lcall
aaa
add
and
and
push
lcall
outsl
jp
xor
imul
fisubrl
cmp
loopne
movsb
es
pop
js
and
cmp
push
loopne
push
pop
mov
pop
pop
in
push
jns
imul
aaa
inc
lret
scas
adc
loope
sbb
or
fs
xor
xchg
xchg
clc
scas
mov
dec
add
out
mov
int
xor
or
pop
xchg
xchg
push
repnz
inc
daa
cmp
popf
mov
or
shrl
jb
imul
jle
ror
mov
adc
lods
sub
ljmp
add
jl
in
addl
fwait
test
aas
mov
mov
ds
mov
sub
out
popf
in
movsb
enter
lds
cmp
aaa
mov
lods
insl
push
or
push
and
fadds
xor
or
mov
lret
scas
mov
add
arpl
add
xchg
fdivrl
mov
xchg
mov
iret
and
mov
jo
lock
imul
rorb
inc
popf
cld
dec
xchg
dec
inc
enter
push
hlt
stos
arpl
xchg
sub
das
repz
mov
jge
fildll
mov
call
cmc
cmc
and
enter
cmp
mov
mov
jp
out
jb
ret
mov
in
fcmovbe
xchg
ds
loopne
lret
out
iret
sahf
aaa
aas
in
pusha
pop
push
jp
jecxz
fwait
jp
loop
jecxz
push
leave
int3
inc
lcall
bound
repz
cmp
or
mov
pop
mov
inc
aad
out
lahf
pop
fsubl
ja
out
xor
mov
mov
sbb
cwtl
and
dec
mov
lods
sub
cmp
push
lcall
mov
inc
ret
pop
pop
testl
mov
ds
mull
ret
std
or
clc
jg
fmuls
sub
jle
xchg
push
cmpsl
cmc
clc
fadds
int
inc
lahf
mov
vpacksswb
outsl
cmpsl
out
adc
adc
cmp
ja
movsl
repz
sbb
ret
mov
imul
pop
push
dec
jmp
dec
pop
pusha
lret
pop
or
shlb
cmpb
jns
in
pop
xchg
fildll
push
mov
sbb
fdivrl
decb
ds
aas
int3
mov
push
jle
insb
es
fimull
pop
pusha
int
bound
roll
inc
out
inc
ret
jp
int
mov
xchg
mov
aas
adc
sbb
lock
roll
xchg
dec
xchg
mov
fimuls
out
add
nop
add
xchg
and
mov
push
sbb
add
icebp
insl
mov
inc
lahf
popa
xchg
add
ss
lret
pop
xchg
sbb
scas
xchg
scas
xor
int
int
call
lods
sahf
inc
push
into
and
sahf
add
in
mov
pop
mov
add
fcmovnbe
mov
pop
movsl
imul
aas
sahf
sub
jg
mov
push
push
cmp
xchg
in
repnz
mov
pop
adc
psllw
adc
add
mov
xchg
stos
test
and
push
mov
scas
into
cmp
adcb
out
ret
outsb
orb
pop
mov
faddl
icebp
mov
loope
push
sbb
gs
repz
adc
inc
fisubrl
js
or
add
cmp
or
cli
out
test
sbb
cmp
aas
jne
mov
push
movsb
in
lret
in
push
sub
jle,pn
leave
adc
mov
mov
imull
outsb
pop
test
flds
std
das
ja
stos
mulb
inc
mov
cmp
mov
push
filds
lock
les
lret
xchg
cmp
cmc
push
arpl
jle
xor
lcall
xchg
add
imul
icebp
jno
lods
in
jmp
add
cwtl
nop
icebp
outsb
mov
ja
int
mov
pop
push
add
add
mov
in
add
push
bound
push
ficompl
shll
and
mov
insl
push
ror
dec
pop
imul
pop
mov
dec
mov
mov
push
daa
mov
fwait
jmp
sbbb
jbe
adc
fwait
mov
add
adc
mov
pop
das
xlat
add
push
subb
fcmovnu
jo
dec
xor
or
hlt
mov
pop
sbb
insb
sar
das
dec
sti
sbb
adc
sub
push
pop
push
and
aas
xchg
jp
xchg
sbb
mov
or
jne
jmp
sti
pop
push
adc
cmp
test
push
push
xor
arpl
lock
sub
jmp
fldt
pop
incb
movsl
clc
pop
icebp
dec
push
cmp
push
inc
out
icebp
pop
nop
mov
adc
int
xor
shrl
or
fs
mov
dec
mov
cmpsb
xor
stos
sub
push
jo
pop
dec
mov
pop
pop
das
or
push
leave
repnz
jbe
mov
shrb
out
ret
ficompl
sar
add
jl
repnz
jnp
mov
test
sub
xor
sbb
ja
xchg
or
insl
call
sub
imul
jns
mov
cmpsl
sbb
jp
pusha
lods
in
pop
fwait
mov
mov
adc
cmp
daa
popa
sbb
jge
or
inc
sub
mov
std
cmp
mov
mov
xor
jno
pop
jns
xor
and
out
hlt
in
xlat
repnz
lahf
int3
andl
pop
push
xchg
movsb
push
roll
push
mov
adc
jo
xorl
cmp
ljmp
mov
in
fcmovnbe
xor
mov
loopne
lock
nop
sbbb
cmpsb
inc
cmc
in
mov
inc
gs
sub
push
bound
ss
mov
mov
push
mov
adc
jp
idivb
lds
jmp
jns
es
aad
adc
inc
jnp
or
jg
push
jb
jg
cmp
lock
cmpsl
jo
jno
adc
hlt
inc
mov
push
adc
rorl
adc
mov
mov
stc
leave
xor
bound
or
mov
in
rcll
ret
dec
lcall
jmp
sub
jo
jnp
dec
mov
inc
cltd
shll
out
jae
daa
xchg
and
decl
mov
xor
cmp
shl
inc
dec
in
add
adc
mov
mov
adc
mov
sbb
mov
in
add
mov
push
mov
inc
mov
sub
push
and
out
loope
xchg
mov
and
mov
pop
enter
sub
test
mov
rorb
pop
xor
inc
dec
dec
mov
lods
stos
bound
test
adc
inc
movsb
enter
das
andb
or
pop
pop
fbstp
ret
shll
mov
xchg
push
push
fwait
sub
lods
lods
das
xchg
push
mov
mov
jmp
xchg
push
inc
test
popf
js
in
lea
daa
or
push
xor
pop
dec
push
sbb
flds
dec
mov
sub
les
xchg
xchg
je
rclb
cmp
adc
pusha
repz
div
sub
in
addr16
sbb
outsl
sub
in
js
jle
pop
ret
cmp
loopne
pop
iret
scas
jbe
lcall
popa
into
mov
repnz
shr
push
testl
mov
sbb
mov
pop
xchg
pop
pop
add
mov
ds
or
std
loopne
xlat
lret
mov
scas
inc
mov
jno
mov
adc
push
lods
mov
mov
xchg
imul
dec
aaa
mov
sbbb
mov
jecxz
cmc
gs
hlt
outsb
xchg
mov
icebp
cmp
in
neg
or
or
mov
mov
jb
iret
xchg
iret
pop
mov
mov
stos
sahf
clc
ljmp
loope
add
hlt
jns
sbb
mov
test
and
movb
stos
std
pop
stc
dec
dec
push
ljmp
mov
lods
add
push
adc
pop
rcrb
sbbl
mov
test
aas
sbb
mov
and
jl
mov
pop
xor
xchg
mulb
mov
jg
out
add
jne
stos
dec
jne
scas
enter
mov
and
repz
popa
ds
fiaddl
adc
sbb
add
test
cli
sbb
insl
div
and
and
xchg
ss
add
jmp
mov
addr16
mov
lods
arpl
insb
lock
add
xor
add
xor
pop
int3
sub
cmc
fistl
outsl
mov
mov
xor
pop
mov
addl
cmpsb
int3
roll
pop
xchg
icebp
or
mov
sar
lret
divb
sahf
imulb
cs
subb
popf
push
jg
jge
cwtl
push
pop
cmc
xchg
sub
js
jmp
mov
icebp
sub
cld
in
jmp
push
insl
fdiv
xchg
ret
mov
xor
dec
aaa
std
jns
ds
lcall
call
lret
xchg
dec
test
cmp
aas
add
mov
arpl
jge
ljmp
pop
into
out
ja
inc
test
mov
dec
push
adc
pop
pusha
int3
lods
lret
pop
stc
lahf
lcall
testl
pop
sbb
cli
ljmp
and
inc
add
cmp
add
mov
sub
mov
mov
sahf
mov
movsb
movsb
jge
ds
ljmp
xchg
aaa
xchg
jmp
push
mul
xor
sub
mov
add
fbld
call
rol
pop
test
and
mov
enter
inc
add
lock
push
roll
mov
push
adc
dec
adc
enter
push
ds
jnp
and
cmpl
repz
into
add
mov
mov
sbb
mov
xor
cli
cwtl
pop
pop
push
lret
rcrl
call
out
mov
xor
in
jl
jno
dec
mov
and
enter
cmp
shl
fiadds
sub
clc
add
push
outsb
movsl
adc
push
mov
mov
sbb
pusha
mov
fwait
push
ljmp
insb
mov
cltd
cld
lahf
icebp
mov
subl
fwait
push
orl
scas
xchg
and
mov
ret
sbb
test
int3
lahf
mov
mov
imul
mov
out
outsb
adc
clc
inc
loopne
sub
daa
icebp
shrl
xor
insl
xor
loop
fcoml
jmp
movsb
mov
les
aam
mov
arpl
fidivs
xchg
std
repz
xchg
aam
sbb
sbb
mov
pop
inc
cwtl
test
das
cmpsl
mov
bound
push
pop
adc
jns
std
pop
push
mov
add
out
jae
push
pop
push
popa
loop
movsb
pusha
mov
add
inc
outsb
xor
bnd
xor
pop
inc
sbb
clc
fdivrl
or
inc
adc
in
jae
mov
lods
test
cmc
jb
fwait
mov
mov
sub
movsl
dec
insl
call
mov
fists
mov
js
cmpb
pop
outsb
jg
nop
ljmp
sti
xchg
mov
scas
repnz
mov
xchg
shr
test
test
sub
add
js
ret
cwtl
xchg
mov
xchg
lea
mov
pop
arpl
pop
jmp
lret
dec
mov
lods
add
xchg
mov
loop
inc
lcall
push
inc
mov
mov
sbb
xchg
pop
jge
dec
cmpsl
sbb
mov
inc
lods
lret
pop
mov
sub
push
and
fwait
sub
mov
test
add
pushf
or
fmulp
imul
fsubl
lret
mov
data16
lock
adc
dec
sahf
jmp
sub
cmpsl
inc
movsb
pop
lret
push
sarl
push
rcll
push
add
pop
stos
cmp
and
or
or
lahf
xchg
pop
or
mov
push
sti
shlb
pop
xor
in
mov
push
push
lret
ficoml
cs
pcmpeqb
inc
ss
xor
mov
adc
xchg
cmp
mov
adc
xchg
jle
lds
mov
xchg
cs
lahf
push
jo
dec
lcall
inc
mov
jecxz
jle
clc
add
pushf
pop
rcll
adc
push
jmp
pushf
jl
sarl
loop
adc
inc
xchg
test
push
xor
sti
mov
lahf
inc
in
scas
lret
notl
pop
aam
lods
add
mov
push
cmp
test
push
js
mov
stos
aas
mov
insb
mov
adc
push
iret
mov
mov
divl
test
sub
cwtl
push
das
inc
fbld
xor
shlb
testl
pop
mov
es
jnp
les
push
sti
pop
dec
aam
mov
in
lea
lods
nop
cmp
add
xchg
and
and
cmp
nop
cwtl
imul
and
add
push
mov
sti
rorb
pushf
and
rolb
es
repnz
nop
and
mov
or
mov
outsb
data16
ficomps
lcall
inc
pop
icebp
inc
repz
xor
xchg
mov
cwtl
mov
and
jl
mov
sub
adc
fstenv
mov
cmc
loopne
mov
add
mov
sub
call
cs
xor
insl
xor
fidivrl
fcompl
push
mov
addb
pop
and
mov
xchg
out
sti
add
jne
fs
in
dec
jmp
cmpsl
or
dec
cmpsb
idivl
push
sbb
push
mov
les
pop
mov
outsl
hlt
std
and
adc
movsb
stc
fsubrs
loop
and
scas
fwait
ja
xabort
xchg
jp
popa
movsl
inc
pop
insb
push
inc
test
adc
cmpsl
repz
aam
sbb
push
cmc
xchg
lods
dec
scas
jno
push
pop
nop
cmp
mov
insl
inc
cmpsl
push
int3
mov
aam
mov
dec
stos
adc
sbb
xor
sbb
push
sbb
inc
sbb
je
lahf
cmpsl
dec
hlt
stc
rorb
cltd
iret
cmpsl
push
in
add
mov
push
test
sub
lods
rcrl
sbb
mul
sub
inc
out
mov
ljmp
jecxz
add
rorl
fdivp
cmc
pop
sub
cmc
cmp
mov
repnz
sub
push
daa
sub
mov
daa
push
sub
stos
movb
xchg
and
jb
cmp
xchg
pop
stos
or
test
xlat
jb
fisttpll
add
fsub
add
and
cltd
xor
loopne
lock
bound
insl
sbb
and
xchg
or
fists
orl
mov
mov
test
fwait
lret
aad
cmp
and
cmpl
add
push
outsb
dec
into
inc
je
lods
sub
push
loopne
push
pop
ja
outsb
sti
jecxz
insb
adc
adcl
adc
movsl
jae
xor
jae
das
fistpll
cmp
push
bound
clc
add
int
fld
push
ljmp
stos
mov
xchg
dec
pop
jle
dec
sbb
enter
mov
imul
add
mov
aad
push
xor
stc
inc
xor
out
cli
outsl
add
subl
fdivl
adc
sub
jb
in
push
mov
sbb
push
push
aam
xchg
hlt
je
xchg
ljmp
ja
mov
cltd
cmpsl
int
add
out
cmp
jp
add
push
jne
ljmp
stc
pop
out
xor
xlat
mov
adc
xor
enter
loop
movb
cmp
test
mov
rcrb
ret
stos
add
push
incb
call
push
std
add
ror
add
icebp
push
imul
add
jmp
pop
inc
xchg
inc
aad
add
inc
lock
or
in
hlt
lds
aas
mov
repnz
cmp
pop
jns
sub
fprem
shrl
jmp
popa
scas
scas
sbb
test
push
mov
push
test
lret
leave
cmp
jmp
sti
ljmp
aam
mov
cltd
mov
cmp
movsb
sbb
outsl
adc
aad
jmp
pop
inc
push
hlt
sub
les
fisttpll
mov
sbb
push
sbb
pop
stos
aam
pop
or
cld
lahf
out
ret
in
sub
daa
pop
push
clc
scas
jne
push
sti
mov
lods
in
push
data16
fadds
sahf
aad
jbe
cmp
mov
bound
xchg
popa
shrl
mov
mov
inc
xor
fidivl
ret
sub
mov
notb
gs
inc
out
loopne
jg
int3
cltd
clc
sub
or
sub
aas
ja
fisttpll
inc
loope
pop
scas
mov
push
gs
dec
pop
jmp
mov
mov
push
pop
xlat
mov
std
adc
imull
repnz
add
inc
dec
mov
xor
pop
push
sbb
dec
enter
mov
out
cltd
je
je
mov
cmp
or
call
das
adc
data16
loop
cmp
and
sub
movsb
stos
aaa
mov
ret
jns
jns
loope
inc
fwait
push
mov
adcb
push
inc
cli
xchg
es
fidivrs
ss
jge
subl
lock
sub
cmp
push
add
das
call
int3
sub
std
pop
fsubs
xchg
outsb
test
mov
iret
mov
inc
mov
adc
movl
lock
xor
xchg
sbb
cmp
pop
loop
sbb
jnp
mov
cmc
jns
mov
or
mov
jecxz
pushf
and
outsb
imul
stos
rcrl
inc
nop
push
in
stos
dec
mov
aaa
sub
lret
add
sti
jbe
inc
add
adc
sub
stos
insb
mov
mov
cld
movsl
and
sbb
push
aam
call
enter
and
incb
xchg
push
lret
inc
into
jle
inc
or
mov
mov
hlt
pop
add
jne
scas
inc
lods
mov
mov
jle
rorl
fistl
or
xchg
sahf
adc
leave
fdivs
loope
lds
or
jp
mov
out
mov
mov
pushf
lock
push
mov
outsb
lods
loopne
or
nop
mov
rorb
test
inc
xchg
pop
and
std
mov
or
or
inc
sub
xlat
jae
adc
xchg
test
scas
pop
jl
xchg
aas
push
and
xor
mov
jg
pop
dec
mov
jae
data16
loopne
sbb
xchg
add
rorl
sbb
xor
mov
cwtl
mov
test
scas
popa
cltd
out
xor
pop
aas
sbb
in
pop
es
cmpsl
jl
aad
enter
mov
xchg
cmp
loop
xlat
cmpsl
insl
and
inc
jmp
rcrb
clc
sbb
or
mov
mov
xchg
xlat
jae
push
mov
cld
inc
pop
js
lcall
xor
mov
xchg
rorl
mov
lods
inc
xlat
ljmp
cmp
cmp
iret
mov
decb
inc
xchg
lcall
mov
ret
xor
mov
cmp
ljmp
pop
sar
xchg
stos
pop
das
sbb
jecxz
test
add
sti
push
clc
cmp
call
les
xchg
push
xor
and
add
out
aaa
push
pop
pop
loop
pop
into
leave
dec
rcrb
les
js
andb
xor
repnz
addl
xchg
jne
or
pop
and
nop
add
lods
sbb
cmp
cmp
std
pop
in
pop
stc
jne
sbb
mov
mov
inc
sub
and
lret
stos
dec
push
cmpsl
cltd
lea
sbb
and
mov
idivb
mov
push
dec
mov
into
movsl
or
loopne
repz
xor
jmp
adc
mov
sub
aad
adc
ja
push
jbe
fimull
push
inc
imul
mov
mov
in
lods
or
jp
push
inc
adc
dec
mov
fdivs
rcrl
dec
insb
add
call
cs
mov
fdivrl
push
ds
xor
jnp
inc
push
cmp
jge
xchg
mov
sti
dec
loope
scas
cmc
outsl
adc
shll
cmp
bound
adc
int
std
cltd
jle
mov
fsubrs
cs
pushf
sub
or
inc
push
gs
add
cmp
mov
pop
hlt
push
fnstenv
outsl
in
and
mov
inc
mov
dec
fists
add
addb
dec
aad
mov
sub
mov
pop
shlb
mov
or
adc
jge
mov
lret
rep
ja
divb
pop
dec
adc
fisttps
xor
mov
mov
push
xor
loopne
addr16
xchg
bnd
inc
jmp
push
mov
add
cmpsb
aad
push
test
movsb
xchg
xor
or
and
fsubrs
cmp
stc
repnz
leave
add
and
push
cmpsb
lcall
dec
sbb
and
or
inc
cmp
out
shll
fldenv
push
mov
mov
in
out
mov
lock
cwtl
dec
mov
cwtl
dec
out
arpl
xchg
movsb
pop
dec
pop
jae
xor
or
lret
cmp
je
cmp
push
pop
jnp
push
lds
jmp
in
and
aaa
jns
and
fstpt
das
sbb
stos
sbb
xor
ss
lret
pop
out
rclb
fistps
or
scas
in
cmp
sbb
adc
sbb
lret
je
mov
or
mov
xorb
mov
mov
jno
add
sbb
pop
in
lods
lcall
pop
pop
xor
jae
je
pop
mov
xchg
das
push
mov
int
sub
lods
dec
xchg
xchg
inc
addb
outsl
sub
inc
stos
cmp
push
or
push
into
push
aaa
inc
rcrl
ficompl
outsl
mov
ja
xchg
mov
lods
adc
aad
leave
outsb
lods
jl
pusha
icebp
cmp
sbb
push
sub
hlt
sbb
loop
pop
outsl
mov
cli
jb
mov
arpl
popf
ret
pushaw
pusha
cli
adc
vsqrtpd
rolb
or
pop
dec
sbb
push
test
shlb
adc
cs
cmc
or
das
adc
clc
lds
xor
sbb
sub
lcall
int
subl
hlt
loope
inc
xchg
xor
das
or
cli
shll
cmp
in
cmc
cs
xlat
mov
pop
sbb
mov
fs
dec
ret
xchg
adc
cs
and
push
sbb
sarb
mov
sub
nop
mov
mov
pop
dec
vpmadcsswd
stos
push
inc
xor
pop
xor
fidivrl
int3
fstpl
mov
inc
add
and
sub
mov
cmp
icebp
testb
dec
out
mov
subb
add
scas
popf
aam
loope
leave
mov
je
mov
or
scas
mov
rcl
icebp
stc
pop
adcl
pop
xchg
ror
sub
enter
push
inc
hlt
dec
stos
pop
idivb
mov
scas
repnz
pop
aas
jl
daa
movsl
leave
testl
sarb
aad
mov
in
and
and
imul
pop
dec
and
stos
imul
cmc
push
pushl
push
push
dec
mov
gs
or
inc
fidivrl
gs
in
push
mov
add
push
or
mov
cmp
sbb
inc
sbb
jle
pop
rorb
sbb
push
insb
push
jecxz
xchg
mov
and
or
fmuls
push
aam
rorb
imul
or
dec
push
into
xchg
fcomps
out
data16
xchg
lock
fwait
daa
xor
xchg
icebp
inc
test
xchg
les
or
dec
or
ljmp
jo
push
cwtl
pushf
mov
aad
lods
pop
int3
cwtl
pop
jae
fwait
xor
js
fdivl
negb
pop
fmul
jae
or
enter
cmp
xchg
setl
out
sub
inc
xchg
mov
mov
cwtl
mov
sub
dec
push
jp
addl
das
cltd
mov
mov
icebp
loop
lds
mov
push
cmp
call
mov
imull
inc
je
out
push
xchg
addl
divl
sub
ljmp
pop
pop
push
into
cmp
adc
in
cmp
xchg
adc
ret
ss
mov
rolb
fcoms
movsl
mov
int
pop
dec
pop
dec
or
lods
popl
fdivr
inc
and
mov
jge
imul
pop
push
mov
mov
pusha
popa
loop
mov
mov
clts
push
push
cmpsb
ljmp
es
in
pmulhw
adc
and
sbb
push
sti
pop
cmpsb
inc
dec
lret
gs
mov
pop
sub
fwait
cmp
out
ret
jmp
push
mov
pusha
lahf
std
adc
jg
xchg
add
shl
sbb
movsl
adcb
xchg
scas
cli
mov
push
cwtl
sbb
lds
test
sti
loope
mov
cmc
sbb
imul
add
aas
cli
lds
jb
mov
out
jbe
mov
icebp
and
push
orl
xlat
mov
xchg
test
mov
loopne
or
mov
jns
sahf
imul
sub
mov
pcmpgtd
pop
xor
pushl
or
adc
inc
clc
call
out
iret
adc
mov
jg
mov
mov
mov
outsl
mov
iret
push
rclb
sub
imulb
or
xchg
nop
inc
or
push
fisubrl
xor
jle
sarb
lret
lea
repz
jg
or
ret
es
ficomps
cltd
dec
cli
movsb
mov
test
rorl
mov
adc
or
adc
add
in
cmp
cmp
xchg
mov
gs
adc
jno
mov
nop
dec
adc
xchg
iret
in
or
cmp
jp
aaa
fimull
push
pop
nop
cmpsl
into
jne
dec
mov
ret
jmp
fxam
cmp
push
cmp
inc
das
les
pop
das
cmp
sbb
jns
imul
addr16
adc
mov
popf
dec
push
jg
mov
aam
jmp
adc
xor
inc
in
inc
xor
repnz
cltd
sar
cmp
and
outsb
dec
ret
mov
jnp
fmull
sub
add
push
and
jne
xchg
bound
cwtl
aad
filds
negb
adc
mov
cmp
add
call
push
inc
cmpsl
dec
adc
stos
sete
aad
insb
inc
push
test
sahf
cltd
movsl
mov
or
adc
jmp
jl
cmpsb
mov
mov
pop
lcall
pop
in
in
repz
mov
aas
in
jns
rcr
out
inc
adc
cmp
xchg
stc
or
lret
in
pop
addr16
roll
add
xchg
out
mov
push
aas
insb
and
rcll
je
out
sarb
mov
aad
out
cmp
stos
lcall
jns
xchg
fs
outsb
in
sub
stos
pop
or
jae
sahf
jp
sbb
leave
xchg
popf
les
xchg
daa
je
jo
lock
dec
add
movsb
cltd
jne
jmp
out
shrb
cmpsb
hlt
adc
push
cmp
pusha
aas
add
mov
mov
ljmp
xchg
mov
jmp
movsl
xchg
shrb
push
aaa
loop
fistl
in
sbb
sub
stos
push
cld
loop
xor
xchg
clc
pusha
pop
movsb
mov
testb
add
pop
pop
add
pop
cli
or
in
insl
xchg
cmc
popf
dec
mov
cmp
ljmp
and
clc
pop
out
push
int3
or
xchg
test
inc
insb
push
push
pushf
dec
int3
call
clc
popa
pop
push
push
aam
sbb
pop
sub
or
cld
rcrb
fcompl
lods
or
lds
xchg
mov
cli
push
lea
std
jge
and
test
fdiv
pop
not
pmulhuw
cmp
jmp
jae
or
mov
inc
popf
sti
sbb
mov
inc
aas
int3
call
fistpll
add
adc
lret
out
mov
fstpt
jecxz
xor
sub
mov
ja
add
bnd
js
test
inc
pop
imul
xchg
add
adc
pop
loope
pushf
call
mov
mov
add
gs
push
pop
pop
popf
mov
data16
fucomi
jl
xchg
imul
pop
aaa
loopne
xor
inc
test
adc
repnz
fdivrs
fisubs
fnsave
scas
mov
jle
js
ss
test
sbb
dec
sub
cltd
pop
call
js
adc
cli
push
mov
inc
xor
mov
push
movsl
ss
push
xchg
add
fbld
mov
jb
clc
popf
addr16
insl
sti
into
das
test
dec
lods
popa
push
vpmacsdql
push
jne
add
lock
int
cltd
mov
pop
mov
or
adc
fmulp
jmp
xor
mov
call
dec
mulb
add
xor
mov
cwtl
sub
fiadds
adc
inc
test
mov
cltd
out
xchg
cmp
test
sbb
stos
clc
or
mov
cmp
stos
mov
mov
pop
pushf
hlt
inc
cmc
loopne
insl
fbld
notl
dec
push
in
xchg
and
mov
dec
jmp
sub
jmp
and
jno
cmpsl
scas
push
mov
mov
call
jno
icebp
and
cmp
or
pop
shr
cmp
inc
mov
outsb
jns
sub
lea
pop
pop
sar
add
pop
rdpmc
cmp
jg
das
xchg
inc
cmc
sbb
pop
mov
push
or
insb
notl
or
mov
or
data16
adc
nop
cmpsb
enter
cmp
outsb
test
xchg
jns
and
repz
clc
push
mov
int
aaa
mov
stc
mov
mov
loope
jbe
jmp
sbbl
pop
push
inc
cmp
rcrb
scas
movsb
lds
ss
out
pop
imul
stc
jae
mov
pop
mov
pop
cwtl
mov
xlat
push
pop
js
in
push
jne
jecxz
cwtl
mov
loope
lcall
mov
iretw
xchg
pushf
mov
shrb
rorl
fwait
loopne
dec
adc
sti
aas
sub
or
rcll
or
stc
xor
inc
loopne
push
cltd
je
mov
push
mov
outsl
inc
nop
mov
push
insl
das
pop
jno
xor
adc
out
jbe
mov
ja
shlb
mov
add
ds
xchg
xor
inc
mov
push
mov
push
add
or
mov
pop
push
lods
loopne
xor
pop
pop
mov
aam
xor
jle
mov
lock
in
jno
js
into
imul
popa
cltd
ret
jbe
es
cli
out
lahf
into
icebp
dec
cmpsb
in
push
fmuls
inc
xchg
or
lods
sub
cwtl
dec
dec
sar
jl
inc
cmp
pop
testb
lret
dec
add
cmp
add
sub
call
push
cmp
aad
fistpl
xchg
arpl
scas
mov
cmpsb
mov
mov
popa
test
sub
call
cmp
mov
or
sahf
push
mov
or
and
ror
nop
xchg
ret
ret
fisubrs
popf
push
xor
stos
sbb
fs
mov
mov
mov
lret
add
aad
sbb
inc
icebp
add
fldenv
stc
in
xor
xor
int
sub
push
in
je
sub
lods
aaa
dec
add
push
dec
pop
jne
mov
fsubl
adc
lret
pop
add
xchg
dec
in
cmpsl
xor
je
sbb
and
loopne
imul
xchg
cltd
in
in
push
cmp
and
pop
dec
sbb
xchg
xchg
push
cmp
inc
xchg
pushf
mov
xchg
sbb
jae
pushf
xchg
movsl
aam
mov
inc
inc
xchg
test
jecxz
repnz
cmp
adc
and
stos
out
sub
das
push
mov
fs
out
cmp
inc
shl
lock
jg
jne
divps
and
pop
out
sub
mov
push
rolb
and
fcoms
xor
lock
aam
cmp
xor
adc
aad
jmp
and
mov
popa
jne
jb
push
imul
cli
fs
jno
mov
or
add
xchg
lods
mov
inc
sahf
push
andb
push
or
xchg
addr16
icebp
das
mov
shrl
negb
cmpsl
addl
jg
xor
js
sub
out
arpl
pop
dec
inc
lock
add
prefetchw
jbe
sbb
sbb
inc
mov
dec
loopne
ljmp
mov
xchg
psadbw
dec
mov
cmpl
pop
xchg
es
push
ficompl
mov
lock
icebp
aas
int3
cmp
mov
push
inc
cmp
inc
insb
fistps
in
jo
push
pop
movsb
inc
outsl
mov
mov
fnstcw
shr
rclb
cmpsb
in
push
sbb
add
jne
ja
xor
sub
outsb
add
outsb
inc
stc
lock
mov
call
pushf
mov
addb
lock
mov
dec
insl
nop
jmp
xchg
jbe
mov
fsubl
nop
int3
clc
cmp
fsubrl
xor
scas
insb
add
mov
jle
ret
mov
fs
fidivs
cli
insb
loop
jb
jbe
popf
test
jl
dec
sub
orb
mov
adc
jns
lods
es
aam
adc
and
pop
and
push
leave
inc
pushf
flds
cmp
xor
rcr
xlat
rclb
xchg
cld
jmp
cmp
shl
enter
rorb
pop
daa
mov
iret
mov
pop
or
lahf
xor
rcrb
test
ret
lcall
cld
jns
jl
push
imul
jle
ljmp
jns
or
pop
push
mov
mov
dec
sbb
int
sbbb
and
int
xchg
mov
int
xor
mov
pop
cld
lret
loope
pusha
add
sahf
mov
mov
push
push
into
jns
add
jo
nop
xor
cmp
shll
dec
pop
or
rcrb
aam
mov
cmp
mov
in
loope
pop
and
pop
addl
sahf
mov
mov
sbb
mov
pop
loope
add
and
lds
or
or
dec
stos
sub
cmp
cmpsb
in
negl
inc
out
jns
and
ret
mov
pop
loope
sbb
cmp
cmp
lds
push
pop
jne
lea
pop
mov
jmp
stos
add
enter
adc
inc
mov
adc
pop
mov
cmp
mov
add
adc
sub
rclb
xchg
cltd
sti
movsb
ja
push
int
add
sbb
mov
sarl
enter
aam
jmp
mov
cmc
sbb
subl
lret
adc
out
push
fwait
sbb
lahf
fdivrp
add
cmpsb
fnstenv
mov
mov
push
insb
mov
mov
testb
dec
mov
xchg
cmpsl
insl
mov
mov
cmp
xchg
cmpsb
outsb
pop
xchg
pop
outsb
cmp
xchg
cli
push
or
jmp
mov
dec
stos
jmp
stc
and
int3
push
popa
xchg
pmaxsw
add
mov
dec
push
fcmovnbe
loope
adc
sub
mov
pop
cld
add
cmp
jmp
shrb
jg
es
jno
or
enter
adc
mov
rclb
das
jbe
paddsw
fwait
cmp
mov
push
mov
ret
rcr
cli
fnstsw
pop
incb
cmp
out
ja
jae
aaa
int
mov
ss
lret
out
inc
fcoml
jge
xchg
sub
sub
sbb
leave
dec
sbb
inc
popa
loop
lahf
mov
bound
push
pop
pushf
aas
push
scas
bound
pop
fsubrl
jl
mov
inc
mov
nop
out
shrw
or
xchg
adc
adc
sbb
xchg
dec
add
jge
bound
mov
push
cmp
addb
cmp
pop
bound
pop
mov
or
lods
pop
push
and
fs
aas
jb
mov
mov
adc
inc
mov
push
out
test
push
shl
mov
movsl
cld
inc
and
jne
dec
out
cli
out
int
bound
jno
mov
pop
in
add
xchg
add
aad
stos
daa
int3
mov
mov
sub
xor
aam
fsubrl
mov
test
xor
dec
xchg
mov
mov
lahf
mov
nop
adc
mulb
xor
mov
jns
add
pop
fsubrs
sub
xlat
bswap
push
jne
aam
xlat
cmp
movb
and
mov
push
dec
mov
dec
aas
jo
adc
pusha
sub
in
or
sbb
loop
movsb
pusha
movsb
dec
pop
dec
into
test
xor
xlat
repnz
xlat
dec
jl
in
enter
sti
and
push
adc
dec
xchg
pop
lods
clc
xchg
jmp
test
pcmpeqd
xor
icebp
fyl2x
push
fmulp
movsb
movzbl
pop
mov
dec
filds
fdivrp
clc
out
hlt
seto
rclb
fdiv
mov
test
push
jb
lods
add
xchg
or
stos
mov
fldenv
jb
vmovdqu
pop
mov
notl
jno
cmpsb
lock
in
xor
xor
sbb
inc
or
jo
fs
test
pop
jns
or
decl
push
je
and
inc
sarb
mov
lds
dec
mov
int
jb
xor
outsb
test
fstps
stos
aas
jl
dec
pop
fdivrs
loop
jbe
mov
xor
pop
inc
int3
adc
dec
pusha
fwait
and
push
cmp
movsl
les
push
and
jbe
mov
sub
sbb
sbb
jbe
mov
xchg
jb
add
mov
jno
inc
sbb
imul
pusha
lea
pop
and
daa
pop
xor
mov
adc
push
cmp
pop
ljmp
xlat
jns
faddl
out
xor
push
sub
andl
insl
push
sub
dec
jns
repz
xchg
stc
push
lret
test
loope
xor
sbb
dec
out
dec
sbb
imul
cmpsl
mov
fmul
jns
data16
sub
push
ret
add
fwait
and
in
in
popa
mov
adc
and
lods
dec
pop
push
adc
bound
inc
insl
jge
add
in
dec
mov
loop
xchg
mov
pop
stos
inc
aad
pop
dec
cli
sub
shrb
and
xor
xor
mov
push
scas
or
outsl
movsb
iret
adc
push
call
notl
ja
cmp
lock
sbb
mov
push
xor
inc
lods
das
pop
sub
push
push
lods
mov
rcl
mov
mov
movsl
jle
push
add
mov
insl
fdivl
sub
and
xor
sbb
fcomp
pop
out
add
xchg
pusha
mov
sbb
adc
sbb
clc
shr
adc
ds
or
cmp
push
pop
adc
push
xor
push
and
push
sbb
ds
movsl
stos
movsb
push
flds
sub
sahf
and
mov
shlb
rorb
daa
ret
shlb
cmp
sbb
inc
pop
cld
mov
shrb
jge
add
push
cwtl
daa
les
mov
mov
test
js
dec
cmp
jg
dec
out
mov
fisubrl
fisubrs
in
push
jo
mov
adc
pusha
outsl
xchg
fisubl
rcr
cmc
cmpsb
xor
sub
mov
arpl
xchg
loopne
sub
adc
or
sbb
mov
and
fcompl
orb
in
sub
les
cmpsb
cmpb
mov
fisubl
add
sub
enter
in
cmpl
sbb
jle
and
pop
mov
fidivrl
in
mov
add
lahf
in
sbb
pop
jl
mov
fwait
jno
cld
mov
nop
push
xor
sub
xlat
fldt
bound
rcrl
das
cmpsl
push
shrl
jae
je
sbb
ret
iret
xchg
mov
fdivs
int3
insb
push
cmp
ret
dec
repnz
loopne
out
inc
push
xchg
aaa
popf
ljmp
cmp
cmp
fidivl
testl
dec
cmpsl
add
pusha
jbe
jge
nop
stos
xchg
loope
shr
enter
aam
push
lahf
mov
push
pop
and
add
mov
je
enter
jecxz
or
and
cld
cmp
inc
ret
das
pop
cmp
xor
mov
nop
jne
pop
mov
aam
add
cwtl
pop
and
mov
ds
xchg
sti
dec
clc
int
or
rclb
repz
imul
movsl
jmp
test
pop
mov
inc
ficompl
mov
fwait
mov
imul
xchg
cmpsl
out
mov
lds
cmp
fldt
lods
iret
dec
xlat
loop
push
push
push
lret
pop
sbb
mov
cld
push
dec
adc
push
cs
mov
scas
aas
pushf
xchg
jmp
and
leave
outsb
cmp
leave
or
cmp
inc
cltd
jo
xchg
loope
movsb
pop
sub
push
test
sbb
mov
sub
push
mov
lret
push
push
jbe
dec
mov
mov
clc
cmp
xchg
jns
xchg
mov
push
dec
push
mov
ja
mov
and
iret
test
cmp
xor
push
mov
out
popf
imul
aad
and
ret
outsb
outsb
sub
adc
add
or
cmc
jl
test
nop
mov
or
addb
fcoms
sbb
sarb
and
push
pop
call
cmp
lods
mov
xchg
mov
sub
sbb
dec
cmp
int
pop
pushf
adc
ficomps
jg
cwtl
adc
jge
inc
decb
adc
lret
leave
mov
popf
mov
xchg
fisttpll
es
call
push
cmc
pushf
pop
int3
fisubrl
adc
ret
lock
out
std
fnstenv
cmp
loop
mov
jecxz
cltd
cmp
adc
cmpsb
push
in
inc
cmp
lcall
andl
sbb
pop
xchg
push
popa
and
scas
fadds
mov
stos
cmpsb
and
pusha
jb
mov
dec
fists
insb
cs
loop
and
adc
inc
and
jecxz
jg
jg
add
inc
jbe
sahf
cli
stos
rclb
roll
nop
lock
out
int3
adc
xchg
sbbb
cmpl
test
sbb
cld
xchg
jbe
mov
js
mov
out
push
xchg
xor
pusha
shlb
xchg
sbb
pop
xor
pop
inc
push
test
imul
cld
and
jnp
xor
out
shll
js
fs
inc
and
out
jnp
aam
pop
pop
leave
scas
cs
cwtl
xorb
daa
test
xchg
nop
mov
popa
xorb
mov
dec
stc
cmp
inc
data16
popf
pop
ret
jb
stos
pop
arpl
mov
clc
outsl
in
add
mov
xchg
fiaddl
mov
lds
in
clc
out
sarl
aaa
adc
insl
push
stc
mov
pop
cmp
xor
sbb
cli
pop
push
mov
or
lret
lret
lret
dec
std
loope
pop
pop
sbb
xchg
or
aam
in
mov
repz
aaa
dec
sub
fcomip
int3
sti
push
xchg
loopne
and
ret
insb
jns
sbb
shl
push
lea
inc
xor
std
gs
xlat
je
pop
js
ds
loope
cmp
mov
add
aaa
ds
or
jnp
in
mov
imul
fsubl
push
mov
std
lcall
or
jo,pt
mov
pusha
cli
jle
xor
add
dec
xlat
jle
xor
jbe
loop
add
push
insl
js
inc
jmp
lods
scas
iret
jl
lea
jp
test
std
xchg
fwait
xchg
mov
in
sbbb
add
gs
out
stc
rcr
int
mov
fnstcw
jbe
jmp
xlat
fsubrs
push
cwtl
in
xor
mov
cmp
repnz
in
lock
cmp
idiv
movsl
aad
ja
and
aam
sbb
jnp
cmp
dec
push
es
dec
mov
sbb
inc
xor
jmp
fwait
lock
jns
xorb
imul
leave
xor
xchg
mov
xorb
mov
outsb
ret
test
xchg
push
int3
mov
dec
ret
test
rcll
stos
mov
inc
mov
stc
xchg
inc
imul
test
adc
flds
dec
mov
testb
xchg
inc
cmp
pop
jg
xchg
out
pop
inc
and
xor
adc
xor
loopne
cmp
dec
dec
int
jnp
and
xor
lods
and
cltd
sub
mov
jno
mov
add
shrl
lods
and
inc
sbb
dec
mov
jb
scas
inc
xor
insb
mov
mov
push
popf
jo
es
imul
mov
arpl
insb
or
push
sbb
fsubs
mov
les
nop
insl
sub
xor
jae
pop
in
cltd
sbb
mov
mov
test
dec
push
pop
push
loopne
clc
scas
loope
aas
push
pop
mov
test
mov
ror
ret
test
cmp
inc
xor
outsl
cmp
out
loopne
pop
adc
pop
out
push
arpl
leave
outsl
or
jno
jnp
bound
je
lds
sub
push
sbb
out
sub
pop
pushf
aaa
and
lcall
push
je
push
and
sti
pop
std
mov
add
push
scas
jecxz
cmpb
out
ljmp
cmc
push
repz
nop
dec
cld
pop
xorl
lds
pushf
cmp
loop
das
mov
jae
adc
lods
outsb
push
jbe
mov
inc
popf
out
fildl
sarb
insl
fdivrl
mov
sbb
test
pusha
mov
lea
mov
mov
mov
mov
lea
repz
cltd
jp
or
ret
mov
jbe
xchg
pop
xchg
es
daa
push
or
into
push
push
sti
dec
andb
adc
pop
xchg
imul
cmp
ja
aas
lods
je
lea
jp
aam
sub
ret
or
lods
adc
jbe
fldl
dec
mov
aam
ret
sub
in
cmpsb
fwait
mov
inc
mov
push
gs
xor
adc
pushf
fisubrs
popf
mov
xchg
push
int
jl
mov
add
mov
xchg
mov
popf
sub
pop
pop
mov
shll
cmp
pop
and
fdivrl
pop
mov
mov
xchg
push
in
xor
sub
pop
pop
das
push
pop
imul
int
daa
js
loopne
mov
jb
js
sahf
pop
test
jnp
push
les
bound
in
fnsave
scas
xor
cmp
sub
dec
add
mov
fld
repnz
xor
and
addr16
sbb
mov
in
or
cmp
mov
imul
pop
adc
add
push
mov
fisubl
int3
movsl
test
mov
testb
pop
sbb
inc
js
xor
insb
fs
shrb
push
xchg
jg
movsl
sbb
sub
andl
mov
xchg
shll
outsl
mov
mov
cld
pop
xlat
pop
cwtl
outsb
mov
sbb
cmp
lods
ss
enter
imul
mov
arpl
cltd
sub
in
xor
call
xor
jle
jmp
int
xchg
or
or
sarb
fiaddl
cmpsb
push
sub
inc
mov
cs
ss
loope
lods
jae
dec
push
and
imul
pop
inc
popf
fistpl
adc
es
jp
scas
fisubrl
cmc
sar
scas
hlt
mov
imul
xor
repnz
lock
jb
cs
cli
roll
adc
inc
mov
js
mov
ret
cli
xor
pop
jnp
push
mov
movsb
ficoms
or
push
xchg
dec
cmpl
sbb
sbb
mov
mov
inc
cmpsl
and
pop
inc
fcompl
sbb
push
add
pusha
pop
mov
add
lcall
xchg
mov
lahf
mov
in
adc
pop
dec
cs
ret
mov
mov
cmp
xchg
or
pop
testl
cmp
add
daa
fldenv
and
push
cld
xor
push
jae
inc
lock
lcall
test
xchg
mov
mov
dec
ret
stos
andb
es
or
cmpsl
adc
stc
adc
push
sarl
clc
cmp
adc
call
pop
adc
enter
push
xchg
xchg
jmp
pop
jo,pt
cmp
lds
aas
jge
cld
incb
dec
ficoms
xor
fmull
dec
bound
jle
cmp
push
mov
sahf
jl
daa
and
mov
xchg
int
rorb
mov
mov
adc
add
mov
mov
pop
loop
outsl
setg
leave
mov
pusha
adc
mov
and
mov
adc
and
loopne
andl
lods
xor
dec
sub
or
or
iret
xor
iret
add
out
out
mov
mov
movsl
and
sarb
sbb
dec
xchg
mov
fiadds
mov
subb
outsb
xchg
daa
cli
mov
add
lea
and
das
out
push
sub
cmpsb
jmp
pop
pop
sbb
mov
xchg
stos
adc
mov
cwtl
sbb
pop
sahf
cs
jo
mov
jecxz
mov
push
jmp
negl
push
addr16
inc
fadds
call
mov
or
adc
add
int
sub
iret
rcrl
shl
and
add
jecxz
ret
ss
ja
pop
or
pop
pop
and
mov
icebp
jo
stc
mov
mov
fdivrl
addb
mov
sub
dec
cld
jl
mov
jle
and
mov
lods
addb
fistl
adc
xor
in
lcall
and
cs
imul
jae
int
fcmove
cli
lcall
push
sbb
scas
cmc
sub
xor
cmpsb
lods
xor
dec
adc
repnz
rcrl
or
xor
loopne
fs
jp
out
inc
clc
aad
fwait
lock
imul
cmpsl
or
out
push
adc
jnp
aas
mov
mov
imul
inc
xor
xchg
adc
xchg
mov
mov
cmp
out
pop
test
add
test
in
dec
js
sahf
and
xor
in
mov
scas
jb
pop
cmpsb
cmp
jge
dec
push
cwtl
int3
lret
ds
mov
xor
cmp
or
or
stc
loop
pop
gs
mov
xrelease
repz
inc
hlt
or
fstpl
movsl
lock
cwtl
jge
cs
insl
push
jge
aam
popa
adc
mov
inc
nop
mov
xor
add
push
pop
insb
jns
ja
decl
sbb
pop
add
or
lock
inc
movsl
jae
dec
lret
jns
xchg
pop
jo
sub
jge
xor
in
adc
icebp
sbb
inc
and
icebp
sub
cmp
mov
mov
jnp
das
push
ds
inc
jmp
leave
aas
arpl
leave
in
jmp
lods
stos
out
xchg
inc
loope
mov
out
mov
rcrl
pop
mov
cs
shlb
push
jp
pop
scas
pushf
fdivrp
into
pop
push
mov
add
adc
dec
lea
sbb
and
fnstsw
adc
mull
cmp
xchg
dec
lret
test
sbb
sub
mov
andl
pop
mov
jg
nop
mov
inc
lea
das
dec
loope
enter
mov
loop
pop
fwait
sub
in
cmp
outsb
jne
cwtl
arpl
ljmp
repz
push
add
dec
pop
sbbb
cmp
nop
shrl
fnstenv
or
mov
or
xorb
xchg
lahf
jge
imul
inc
pop
cmpsl
inc
pop
lds
stos
jp
xchg
fisttpll
xchg
cmc
inc
shrl
jne
cmp
jg
mov
push
or
mov
stos
mov
adc
sbb
and
mov
inc
mov
cld
sub
rcr
das
lret
cmp
fbstp
xor
int
test
data16
das
pop
ret
sti
mov
test
jns
mov
cld
movsb
lods
and
lahf
cmc
sti
xchg
pop
repz
jecxz
cmc
hlt
jecxz
data16
iret
sbb
jo
sub
xchg
dec
les
sahf
dec
insb
fdivr
jnp
xor
fdivl
dec
outsl
fisubs
xchg
sbb
jge
sar
loope
movsl
pop
lret
aas
daa
xorl
xchg
repz
mov
imul
jmp
xchg
rclb
dec
sub
sub
data16
push
xor
jecxz
and
mov
xchg
sti
jmp
sbb
sub
mov
cli
dec
adc
imul
inc
mov
stc
mov
jecxz
mov
jns
int
dec
clc
cmp
xchg
mov
loope
jl
out
mov
es
mov
add
or
mov
gs
loopne
mov
aaa
bound
push
inc
filds
push
xchg
jp
mov
lahf
mov
xlat
movsb
filds
mov
push
scas
dec
pop
stos
fwait
lds
shl
adcl
xchg
scas
push
mov
jmp
jle
inc
faddl
clc
fmull
sbb
xchg
fnstsw
push
nop
xor
fwait
jle
xchg
cli
rcr
or
in
push
xchg
cmp
pop
mov
jp
add
push
pop
mov
add
fnstsw
or
push
and
in
mov
cmp
mov
push
jmp
imul
fstpl
pop
mov
loop
pop
shlb
adc
and
add
jbe
imul
cmpsb
pushl
jns
dec
mov
jle
cmp
ret
dec
push
jbe
and
loop
xorb
js
and
mov
in
stc
call
dec
insb
mov
pop
push
pop
js
inc
or
jno
or
or
nop
cld
inc
pop
mull
mov
jo
push
lcall
dec
insb
mov
and
arpl
test
dec
pop
push
ret
je
cld
repz
jge
or
sbb
jae
push
and
sub
cld
call
xor
xlat
cli
push
into
call
dec
std
ret
mov
in
xor
jecxz
pop
js
aam
stos
shlb
fs
and
mov
cltd
inc
cmp
out
jmp
sbb
lret
jae
and
jbe
insl
jp
aas
xchg
inc
fistpll
repnz
nop
adcb
mov
xor
loope
adc
int3
ljmp
adc
aaa
popf
push
push
push
cmp
lea
je
cli
pop
outsl
ret
and
mov
movsl
sbb
cmp
mov
jns
mov
pop
xchg
jl,pn
mov
jne
push
mov
or
scas
xchg
in
dec
test
ret
sbb
and
test
or
lcall
pop
iret
fcompl
sbb
imul
jbe
push
les
sub
les
and
fucomp
and
xchg
sahf
iret
cmp
arpl
xorl
movsl
xchg
jae
ss
daa
daa
pop
mov
cltd
inc
mov
mov
jbe
test
shlb
call
fwait
ret
in
popf
cltd
jecxz
mov
outsb
cs
aaa
cmp
adcb
push
sbb
cmp
add
movsl
inc
movsl
or
push
push
dec
roll
in
sahf
push
cmpsl
mov
rorl
gs
adc
lods
cmp
push
fimuls
rorl
lods
dec
clc
xchg
scas
or
movsb
adc
movsl
fs
mov
les
movsb
cmpsl
enter
sub
hlt
mov
fildll
add
jns
dec
push
mov
mov
fcmovu
add
and
adc
out
jecxz
gs
lret
dec
or
push
xchg
dec
push
roll
xor
lret
mov
mov
test
jne
mov
insb
imul
jmp
lahf
dec
popa
imul
inc
ss
in
in
inc
push
rol
sbb
mov
imul
jp
jp
jge
ret
pop
cwtl
bound
cmp
fbld
lods
daa
xor
in
test
insb
int
sbb
mov
lods
daa
ror
out
ds
inc
pop
ljmp
repnz
xchg
push
lea
and
popf
mov
cmp
xor
out
xchg
out
push
fcomp
mov
lret
minps
dec
in
les
lcall
inc
mov
pop
paddb
lea
repz
aad
push
xor
adc
fiaddl
repnz
fldenv
repz
push
add
sbb
js
icebp
sub
push
jge,pt
aas
push
jge
pop
shll
in
jno
lods
popf
jecxz
adc
ret
clc
mov
les
dec
ljmp
in
fnsaves
cmp
inc
ljmp
or
lock
jbe
or
cld
mov
dec
dec
mov
out
xor
pop
pop
das
or
lcall
imul
xchg
filds
adc
lahf
jl
aad
xor
std
andb
out
push
enter
pop
mov
mov
jo
add
and
addb
in
pop
retw
xchg
push
das
inc
push
rorb
out
pop
jg
mov
iret
sbb
jl
lock
cs
ror
arpl
and
outsb
adc
inc
cwtl
lcall
jmp
or
sbb
adc
mov
fimull
xchg
stc
js
adc
stos
jns
pop
cmpsl
sbbl
pop
mov
inc
scas
lock
cmp
popf
cmc
jge
ds
lea
inc
mov
jp
loopne
sarb
xchg
pop
test
ret
pop
nop
iret
mov
pop
repz
push
repnz
xchg
mov
pop
and
or
pusha
push
int3
mov
sub
lret
enter
cmp
mov
xlat
mov
mov
ret
and
jmp
add
and
mov
insb
test
std
aam
jp
aam
mov
aaa
int
xchg
mov
push
ja,pt
or
add
sub
mov
sub
ljmp
xchg
xchg
push
pop
push
rorl
fcmovnu
mov
cli
xor
sbb
stos
aam
mov
push
notb
insl
and
mov
xor
in
sbb
bndstx
mov
clc
adc
cmp
sbb
ja
jns
pop
stos
stos
mov
loope
orb
cltd
ss
repz
jae
mov
in
clc
rcr
inc
jno
das
and
xchg
lahf
jecxz
mov
imul
xchg
clc
testb
fwait
push
imul
sbb
test
jl
pop
addr16
push
lret
jae
mov
cmp
dec
imul
inc
or
inc
out
dec
adc
mov
cmp
test
mov
f2xm1
cmpsb
mov
adc
jns
sahf
iret
fistpll
mov
lock
dec
pusha
loope
or
push
insl
scas
movsl
es
adc
popf
loope
orb
inc
hlt
push
subb
jno
mov
cld
and
mov
loope
adc
dec
loop
enter
add
lret
and
pusha
aaa
pop
push
and
or
scas
xor
aam
loopne
push
bound
dec
mov
cs
pop
lods
scas
dec
cmp
cld
jg
push
sbb
sbb
iret
cmp
notb
or
loopne
loop
lea
mov
iret
loop
ja
push
push
push
dec
sbb
test
sahf
lahf
shll
aas
enter
int3
arpl
repnz
rcr
rolb
push
iret
mov
shlb
enter
imul
popf
in
cwtl
repnz
repnz
clc
fistpll
out
cmp
mov
sub
mov
js
je
jnp
out
xor
inc
sub
inc
je
or
adc
lds
popa
and
rcrb
xchg
movsl
jmp
push
insb
jmp
or
adc
insb
movsb
in
ret
xlat
pop
mov
imul
inc
xchg
cmp
jno
xchg
jg
sbb
roll
imul
add
das
and
inc
mov
pushf
lock
mov
jmp
fcompl
lcall
inc
ds
in
adc
sub
xchg
xchg
das
js
fnstcw
or
rol
add
jae
shl
lret
inc
or
mull
dec
push
sti
sarb
sahf
or
popa
inc
out
out
xchg
inc
popa
push
in
je
movsl
outsb
add
dec
lods
pop
popf
dec
adc
mov
aam
aaa
lods
sahf
insl
xchg
fcmove
ret
fmuls
fld
push
push
clc
jle
or
stc
cmpb
iret
sbb
adc
push
ljmp
mov
int
add
leave
jae
mov
and
mov
add
mov
push
addr16
movsb
pop
out
mov
cltd
mov
sahf
inc
xor
inc
cld
push
mov
cmpsl
insl
adc
mov
or
pop
jns
out
idivb
mov
dec
iret
jb
icebp
pop
dec
cmp
xor
pop
pop
mov
mov
sub
or
popa
mov
lds
das
mov
loop
cmovp
mov
or
xchg
lret
dec
pop
jl
inc
iret
out
loopne
fs
outsb
jecxz
cmp
cmp
sahf
int
shrl
or
sti
jae
sti
jecxz
sub
push
ret
aad
add
insl
sbb
leave
adc
les
xchg
lods
adc
fldenv
jb
mov
jecxz
jne
mov
mov
ss
lahf
dec
scas
pop
xor
mov
pop
sub
lock
push
adc
cltd
mov
or
test
push
pop
sbb
addr16
fwait
test
ret
pusha
mov
fdivs
inc
fld
xchg
push
cs
pop
or
sub
adc
into
pop
and
jno
hlt
inc
ficomps
xchg
in
push
dec
call
adc
ds
mov
out
and
int
lcall
xchg
push
mov
pushl
and
dec
mov
cmp
push
push
stos
das
int3
xchg
xchg
mov
mov
or
in
sbb
lret
adc
pop
add
cltd
dec
iret
mov
daa
int3
faddl
mov
out
jae
xchg
test
push
xchg
rclb
sub
out
testb
jb
insl
into
stos
push
sbb
std
or
xchg
push
xchg
xor
dec
rolb
imul
andb
and
je
dec
cmp
dec
mov
add
or
lods
mov
mov
fildll
out
inc
insb
pop
popf
ljmp
inc
push
fstpt
shl
std
inc
ficoml
add
fstpt
mov
jmp
sbb
sbb
rcrl
test
int
sarl
or
out
and
rolb
push
loope
lret
rol
sbb
loopne
shll
pop
adc
sbb
ret
inc
inc
daa
jp
dec
push
pop
out
and
cmc
lods
or
popa
adc
sbb
jnp
jns
adc
jp
and
ss
mov
inc
stc
mov
adc
clc
xchg
xor
sub
in
cmp
insb
xor
stos
stc
jb
outsb
xchg
mov
int
scas
inc
mov
out
jle
sbb
call
into
daa
cmc
stc
cmp
nop
aam
cmp
fstps
cmpsl
sub
dec
pop
inc
fsubrl
in
mov
gs
push
dec
fsubs
inc
and
ret
call
xor
inc
adc
arpl
mov
movsb
aam
cltd
es
bound
adc
je
shl
xchg
gs
cld
je
push
adc
jne
xchg
fidivrl
dec
mov
cltd
mov
or
inc
pop
sbbl
xor
sbb
push
lret
mov
mov
mov
adc
adc
add
clc
jb
arpl
out
repz
fs
cmp
xor
xchg
pop
fstpl
jnp
mov
add
idivl
loope
repnz
js
call
sub
pop
subl
dec
mov
jne
mov
cli
pop
sub
dec
xchg
push
and
or
xor
jecxz
jl
lds
xchg
lret
lods
add
addr16
sub
sbb
in
clc
dec
mov
test
shll
jb
out
imul
fnstcw
mov
loope
xlat
and
push
movsl
cmp
fmull
aad
mov
test
inc
adc
xor
dec
pop
in
xorb
inc
sub
mov
jl
popa
fdivl
jmp
test
mov
pop
inc
popf
das
or
jmp
inc
inc
mov
int3
and
cmp
shlb
add
icebp
add
dec
or
xchg
adc
sbb
es
int
push
insb
lcall
and
lcall
lret
xor
sbb
cmp
nop
into
push
adc
ret
lahf
sbb
xchg
lds
mov
xor
dec
sbb
pop
loope
mov
mov
push
repz
fwait
and
sub
push
rcrl
xchg
aas
mov
inc
sbb
jne
std
data16
push
stos
test
je
jae
dec
aas
es
mov
repnz
mov
mov
lret
push
data16
imul
mov
outsl
dec
scas
pop
sub
daa
daa
mov
fnstcw
mov
aad
or
jmp
and
inc
ja
wrmsr
aam
mov
lret
stos
stc
add
pop
in
push
out
xchg
add
mov
sbb
ljmp
scas
xchg
sbb
cmpsb
divb
inc
mov
mov
xchg
mov
fmul
vpextrw
lds
or
roll
or
jecxz
daa
xor
stc
icebp
xor
xchg
lea
aam
cmp
and
stos
cmp
shlb
lods
cld
stc
cmpsl
adc
mov
out
jmp
cmp
cmp
dec
mov
loop
and
lret
xlat
cld
js
ret
loopne
mov
and
sbb
cli
idivl
adc
or
pushf
or
inc
not
std
je
imul
stos
imul
js
inc
jg
add
jbe
adc
sbb
mov
jl
adc
mov
jb
cltd
push
jmp
dec
push
xorb
popf
mov
lcall
jbe
sub
xchg
rolb
aaa
jns
fidivrs
lds
lds
inc
mov
icebp
dec
test
dec
int3
inc
sub
mov
inc
aam
int
xor
pop
movsb
cmp
push
lcall
xlat
add
sub
cmp
sub
fcoms
out
adc
jl
or
xchg
int
mov
sub
jno
and
fdivrl
cmp
mov
outsl
or
or
xchg
adc
mov
dec
pushf
push
stos
lods
mov
or
outsl
xor
lods
xchg
sub
mov
push
mov
jne
add
jl
push
xchg
mov
sbb
or
jbe
mov
sahf
inc
pop
jae
leave
inc
aas
xchg
scas
xchg
pop
mov
mov
mov
imul
mov
inc
in
sahf
iret
jnp
fsub
mov
push
cmpsb
out
push
call
jle
jg
movsb
addr16
inc
cli
pop
sub
shlb
sub
je
out
leave
sbb
lret
cmpb
adc
sarb
ds
sub
inc
sub
push
mov
int
ja
repnz
int3
inc
out
dec
or
cwtl
out
call
add
sysret
outsl
dec
stos
mov
std
andb
xor
mov
mov
pop
movsb
rcl
jmp
cmp
push
add
jno
pop
mov
incl
xor
sub
xchg
nop
andl
jns
in
or
xchg
mov
scas
mov
mov
out
mov
xchg
out
es
adc
cmpsl
cs
inc
cmpb
test
xchg
jg
rorb
lods
xchg
jp
pop
jbe
addr16
pop
aad
aam
mov
sub
into
loopne
dec
pop
stos
and
inc
mov
and
sub
imul
inc
data16
or
out
mov
stc
ja
mov
pop
push
mov
mov
and
ljmp
xchg
shl
inc
cmp
push
cmp
pop
repz
enter
mov
enter
fcompl
mov
lods
push
arpl
mov
or
pop
loop
push
dec
sub
mov
jmp
sti
xchg
icebp
in
cltd
push
jle
xor
nop
scas
mov
and
dec
cltd
inc
sbb
inc
imul
imul
cwtl
loop
adc
jecxz
push
jle
int3
loope
cltd
test
popa
mov
mov
sub
mov
pop
test
cmc
cltd
or
outsl
cmp
add
out
add
cltd
test
aas
jno
sbb
call
js
mov
in
add
adc
pop
mov
and
add
jmp
jbe
adc
cli
cmp
sbb
adc
mov
lcall
call
into
sahf
cmp
shrb
btr
dec
cmp
adc
xchg
adc
test
dec
jl
rcrl
xadd
adc
push
inc
mov
lahf
out
xor
hlt
loop
cmp
push
cld
inc
pop
push
mov
test
mov
sbb
in
dec
and
bsf
aas
sbb
inc
push
int
fsubrp
inc
orb
and
sbb
into
dec
mov
xchg
std
pop
mov
or
xchg
pop
sub
add
stc
pop
cmp
pop
mov
mov
je
cmp
popf
add
mov
xor
add
jecxz
hlt
in
cmpl
das
out
pushf
push
fdivp
adc
xlat
dec
sub
ja
xchg
push
dec
lds
dec
cmp
lcall
inc
lods
scas
addr16
stc
jl
fimuls
test
and
dec
pop
leave
push
dec
and
pop
jns
sbb
jnp
and
xor
jl
sub
push
inc
test
fs
shlb
push
mov
pushf
arpl
pop
mov
inc
lahf
in
adc
xchg
mov
push
jp
dec
or
xor
adc
cli
movsb
jg
mov
add
iret
rcl
push
int3
ljmp
xor
test
clc
add
xor
bound
sub
imul
push
mov
add
lret
test
jp
or
xchg
lret
test
dec
mov
mov
mov
push
jmp
ror
addr16
icebp
hlt
icebp
bound
testl
pop
stos
lcall
mov
test
or
lret
cli
and
xchg
mov
mov
loop
lahf
xchg
in
fnsave
sub
ljmp
clc
jge
arpl
std
addl
dec
movsb
notb
cmp
addr16
cmp
lahf
add
rclb
into
sub
ds
mov
jb
or
push
cmp
jbe
inc
adc
jle
call
and
pushf
add
int
inc
out
stc
dec
loope
pushf
repz
lret
sub
into
stos
push
in
adc
lret
leave
jno
test
lea
arpl
dec
dec
int3
loopne
inc
add
mov
aam
push
jbe
stc
lcall
ljmp
and
xchg
fcmovne
loop
xchg
pop
das
mul
jo
mov
loope
push
mov
dec
xchg
cmp
fdivl
cwtl
pop
cmp
js
sub
push
sahf
out
xchg
jb
add
pop
mov
cmp
lods
repnz
or
out
dec
or
dec
addr16
cld
mov
cmpsb
inc
lret
add
test
inc
fisttpl
stos
js
call
clc
inc
cmpsl
adc
jne
jp
arpl
add
cltd
loope
enter
fstps
push
lock
cs
or
cwtl
dec
lahf
sahf
mov
jno
mov
in
hlt
int3
dec
mov
stos
mov
jns
inc
rcll
xor
mov
insb
inc
jb
ret
sbbb
mov
and
in
jo
mov
fstpl
and
cld
push
jnp
lods
das
int
xor
push
in
sub
xchg
mov
xor
pop
sbb
mov
pushfw
pop
mov
mov
pusha
jo
sahf
shrb
inc
xor
ljmp
xchg
pop
and
sub
sti
rcll
push
add
mov
mov
xchg
popf
fwait
dec
int
and
and
pop
decl
xchg
sub
cmp
push
inc
mov
cwtl
imul
mov
add
jno
popa
addr16
xchg
dec
push
or
call
daa
xchg
add
in
inc
fs
das
push
scas
and
jmp
cld
sbb
into
je
pop
inc
lret
cli
mov
push
inc
mov
lea
mov
xor
pop
sub
dec
inc
out
orb
dec
out
push
sbbl
ds
out
jecxz
cli
ret
and
cmp
mov
inc
mov
sub
cmp
rdpmc
in
push
jo
push
rcrl
dec
add
and
xor
lcall
cmp
xchg
xchg
add
psrld
sbb
mull
cmpsb
xchg
cmp
cwtl
inc
jle
push
mov
mov
mov
and
scas
cmp
mov
test
test
push
jp
enter
xchg
xor
cmpsb
jns
leave
movsl
xchg
lret
inc
movsl
xor
push
lock
add
les
ja
sar
call
clc
call
jne
insb
repnz
add
sub
into
stos
cltd
mov
mov
xchg
or
cmp
push
repz
shll
je
daa
fildll
cltd
imul
and
cmp
aas
xor
pusha
std
push
into
aad
xor
mov
xor
dec
fmul
cmpsb
mov
scas
pop
outsl
mulb
pop
ljmp
sbb
push
inc
into
or
sbb
pop
jecxz
cmpsl
cmc
push
sbb
call
scas
sub
xor
pop
insl
jmp
push
mov
pop
xchg
push
or
out
jge
mov
pop
add
adc
stos
xchg
and
divl
cmp
shlb
pop
jns
cs
out
mull
std
xchg
cmpsb
jmp
insl
pop
popf
pop
xchg
ljmp
dec
cmp
pop
imul
repz
push
cmp
mov
shll
add
xor
ret
hlt
mov
pushf
cmp
mov
jns
cmpsl
mov
fcomp
clc
mov
cmp
imul
sarb
lds
mov
push
cmovae
lock
rcrb
nop
outsl
lds
inc
push
mov
adc
adc
pop
sbb
and
sub
or
push
in
jl
mov
sti
pop
dec
cmp
mov
push
mov
inc
mov
pushl
in
sub
cmpsl
jmp
sarb
adc
lea
out
and
js
xchg
mov
mov
or
adc
inc
cmpsl
shrl
jecxz
xchg
xchg
add
addr16
hlt
lods
incl
sar
in
nop
jbe
rclb
mov
ret
mov
incl
pusha
or
les
dec
mov
dec
imul
fstl
and
fsubrl
in
push
leave
cltd
bound
stos
dec
aam
pop
xchg
cmp
test
and
mov
xor
daa
gs
roll
into
or
into
outsb
mov
lods
fmuls
mov
pop
push
dec
fdivp
dec
sub
hlt
data16
jge
repz
mov
dec
shr
call
jmp
ret
add
hlt
push
adc
out
test
dec
int3
xor
push
mov
pop
mov
inc
psubusb
mov
cmpsb
push
test
add
out
push
mov
filds
int
pop
sub
popa
mov
into
stos
lahf
aas
repz
nop
cld
push
sahf
inc
xor
data16
cmpsl
cmp
jae
jnp
and
mov
lods
pop
out
cmp
xchg
jecxz
adc
bound
inc
sub
mov
in
hlt
lahf
dec
orb
pop
push
dec
das
add
jl
xchg
xchg
movb
in
jge
pop
mov
lea
xchg
push
scas
pop
cmp
push
lea
gs
leave
roll
fwait
adc
mov
scas
fsubrs
popf
pop
inc
sbb
divb
pop
icebp
ret
movsb
scas
inc
movsl
flds
out
xchg
and
stos
push
pusha
push
sub
and
ror
sub
jp
sbb
les
push
push
or
lret
push
shl
movsl
pop
lahf
aaa
into
sbb
adc
pop
addr16
mov
jns
icebp
ret
paddusw
lods
outsl
nop
add
push
bound
iret
test
into
out
ficompl
xchg
out
pusha
sub
pop
cwtl
mov
test
or
mov
pop
inc
cmp
cmp
ret
or
cmpsb
bound
pop
pop
xchg
jmp
das
pop
pop
dec
mov
adc
push
ret
xor
insl
and
dec
inc
scas
insl
and
xor
rcrl
push
mov
jo
js
mov
xchg
or
add
out
scas
test
xchg
mov
xorb
aam
test
fbstp
inc
imul
push
or
movsb
sbbl
cmp
out
in
repz
cmp
mov
loopne
mov
and
ss
ss
add
inc
adc
repnz
ds
jmp
imul
out
xlat
rolb
inc
sbb
jge
bound
pop
bound
and
fldl
test
dec
aad
mov
stc
sbb
dec
and
shlb
jno
or
test
rorb
dec
xor
fwait
nop
test
test
mov
mov
push
push
jbe
inc
sub
data16
pop
sub
cmpsl
xchg
sbb
and
xchg
push
test
mov
pop
push
std
ss
mov
shl
pop
push
jnp
jns
jne
pop
rorb
dec
mov
dec
shr
jae
cmpb
jge
jle
push
mov
mov
adc
outsb
scas
push
mov
inc
repnz
sahf
push
mov
or
cmp
mov
inc
jnp
fcmovnbe
sub
xor
mov
sbb
lds
pop
and
loopne
pushf
insb
adc
sub
daa
js
pop
inc
hlt
call
pop
xchg
add
xchg
negb
clc
xchg
les
enter
cld
fcom
mov
scas
aad
cli
push
lret
xchg
mov
pop
xchg
or
sbb
dec
push
add
mov
sahf
icebp
inc
fisubrs
outsb
mov
or
push
or
mov
mov
daa
xchg
jl
mov
sbb
call
push
ja
es
gs
jns
out
jb
int3
clc
or
mov
add
push
or
loopne,pt
stos
shrb
sub
shll
daa
xlat
push
cmp
daa
lret
rcll
push
cs
cmp
xor
jmp
inc
jecxz
and
lsl
daa
sbb
fdivrs
pop
jae
dec
pop
mov
shl
push
add
dec
adcl
dec
dec
adc
pop
mov
cmp
push
sub
cmp
xchg
inc
push
xchg
mov
xchg
cmc
xor
in
fimull
sub
negl
sbb
dec
lret
daa
inc
aas
rorl
imul
iret
cmp
sub
ret
hlt
insb
jnp
je
outsl
or
lds
aas
cli
cli
mov
or
xchg
into
std
in
das
pop
pop
sbb
or
or
into
mov
mov
jo
sbb
ljmp
dec
dec
xchg
loopne
mov
cmp
scas
mov
mov
cld
in
ret
cltd
xchg
ret
xor
pop
out
jmp
push
pop
cmp
enter
lret
sbbl
lcall
push
mov
addb
cld
inc
push
push
popf
or
add
outsl
cmp
mov
imul
and
das
subl
or
test
out
mov
ret
testl
mov
test
and
jnp
xor
test
pop
stos
arpl
mov
aad
aaa
jge
dec
mov
loope
aad
cmp
dec
imul
or
or
lret
gs
scas
xchg
mov
jp
pop
xor
addr16
rcll
fwait
packsswb
int
cs
or
sub
fcomps
sbb
jb
adc
jecxz
adc
pop
mov
sbb
pop
jle
jo
dec
pop
xchg
scas
mov
mov
fdivs
arpl
dec
sub
xor
mov
rcll
out
js
int
js
xchg
cli
aaa
inc
mov
enter
adc
xchg
loope
mov
jae
mov
inc
xor
fsubs
cmp
scas
movsb
xchg
stc
and
xchg
add
cmpsb
enter
inc
lret
xchg
idivb
mov
out
adc
inc
bound
call
sahf
je
mov
jns
sub
fstpt
xchg
in
lret
mov
mov
xor
adc
divl
arpl
or
mov
push
push
push
fadd
pshufw
sub
aaa
dec
add
jmp
push
mov
cmp
mov
incl
push
cmpsl
push
sbbl
mov
shlb
push
enter
cmp
sub
clc
aaa
popa
test
xchg
test
sbb
xchg
scas
shrb
xor
mov
mov
das
lods
aad
cltd
movsb
jmp
mov
in
subb
cld
add
adc
js
mov
xchg
shr
scas
aas
call
lock
pop
pop
pop
shl
mov
daa
pop
popf
xchg
mov
xchg
push
jno
sub
mov
int3
aad
mov
push
sub
adc
into
mov
cltd
mov
icebp
cs
outsl
pusha
stos
mov
sub
or
fisttpl
loopne
lds
mov
mov
mov
adc
int
sbb
out
push
mov
mov
xor
push
adc
je
lea
xchg
xchg
and
mov
icebp
filds
cmp
push
test
insl
mov
pop
cmp
mov
jg
push
mov
nop
loop
mull
cmp
enter
popa
jo
arpl
iret
out
jl
cld
shrb
aas
shl
jo
repz
in
dec
out
popa
pop
jg
mov
adc
icebp
out
mov
mov
jl
mov
repz
icebp
mov
jo
mov
xchg
mov
mov
pushf
js
mov
popa
cmpsl
imull
jl
or
pop
mov
ficoml
lods
loope
cmpsb
jge
inc
dec
mov
and
sbb
push
jnp
adc
add
mov
aas
jae
popf
mov
push
dec
push
loope
dec
in
xor
fistpll
mov
lahf
int3
jp
mov
rclb
es
dec
aam
or
iret
pop
dec
or
xchg
jb
repz
sbb
jecxz
out
push
cwtl
add
mov
adcb
xchg
in
or
scas
push
sub
jae
inc
hlt
mov
xchg
ret
shl
sub
push
cmp
dec
inc
adc
outsb
and
or
jl
rcrl
int3
inc
rclb
mov
sub
fdivl
inc
adc
cmpsl
pop
ret
mov
cmpsb
add
les
adc
leave
or
push
push
push
add
sarb
lods
cli
mov
out
lea
or
repz
mov
adcl
aad
add
dec
aad
mov
pop
xchg
push
ds
fldl
mov
loopne
xor
mov
cmc
lock
xchg
cld
cmp
repz
inc
mov
push
adc
push
inc
dec
std
or
xchg
scas
pop
orb
cmp
inc
cmpsb
add
dec
adc
and
pop
xor
daa
popf
pop
mov
cltd
pop
fisubrl
int
cmpsb
pop
jge
mov
push
dec
mov
mov
popa
mov
inc
xchg
or
jne
pop
and
leave
sub
nop
insl
shll
lds
test
loopne
push
mov
or
mov
out
loop
add
ljmp
xchg
or
xchg
decl
test
or
or
pop
sub
sti
mov
mov
mov
lret
mov
jge
mov
fidivs
dec
sbbl
and
cmp
bound
sarb
aad
int3
gs
std
lcall
mov
nop
inc
add
iret
or
fsts
xchg
aas
sub
mov
sti
xchg
or
movsl
or
pop
inc
mov
or
imul
sub
gs
call
cwtl
test
xor
fldenv
dec
ja
roll
push
or
xchg
lods
mov
mov
xchg
jnp
fsts
int3
shll
or
stos
in
repz
std
rclb
fwait
pop
and
popf
cmp
scas
std
pop
dec
and
inc
inc
mov
push
hlt
jge
mov
cmpsl
cmp
dec
and
in
add
ret
add
or
icebp
and
pushf
inc
jbe
adcb
ljmpw
outsl
test
or
sti
jl
aaa
add
lock
scas
aam
mov
insl
jl
test
jle
insb
ss
dec
add
mov
adc
jl
xchg
ret
cmp
out
dec
xchg
movsl
adc
test
in
loopne
push
and
push
adc
into
out
xacquire
jb
rcrb
inc
mov
mov
lahf
test
jl
dec
cmpsb
mov
test
nop
push
mov
xchg
daa
repnz
js
daa
dec
loope
jl
lcall
aad
cmpsb
xor
mov
fdivrl
or
bound
in
push
mov
out
dec
sahf
in
rolb
or
repz
mov
outsl
and
add
inc
mov
inc
cmp
in
test
insl
xchg
jbe
inc
pusha
insb
dec
add
hlt
push
js
push
and
shll
js
es
gs
xchg
jp
or
pop
scas
add
mov
inc
pop
cmp
mov
leave
bound
pushw
xchg
push
data16
popf
sbb
repnz
loope
test
jb
aas
aas
pop
enter
mov
xchg
jnp,pn
push
ficoms
cmp
cmp
inc
scas
es
test
inc
mov
push
jbe
dec
das
and
mov
ret
jo
fs
jnp
or
sbb
inc
loop
pushf
pop
and
shlb
and
int3
sub
mov
and
call
int3
incl
push
int
push
orb
xor
cwtl
imul
adc
inc
in
into
push
adc
lret
xor
hlt
jbe
mov
adc
movsb
and
or
icebp
stos
dec
pusha
stc
es
testl
divl
mov
or
test
stc
sbb
fmuls
xor
test
stos
push
jecxz
and
jmp
adc
xchg
cmp
inc
out
fidivs
aad
shll
add
mov
push
mov
push
ss
dec
mov
push
inc
or
cwtl
cmp
test
clc
mov
js
add
sti
mov
push
into
sbb
inc
xor
lock
lea
sti
ret
cmc
dec
xor
out
pop
xlat
pop
addr16
jns
outsb
and
hlt
test
sub
xchg
xchg
popa
push
xor
cltd
movsb
xchg
add
dec
pushf
pop
clc
ljmp
icebp
or
loop
fstl
xchg
in
push
or
out
cmp
scas
cmp
stos
mov
lahf
xchg
ja
out
mov
inc
xchg
stc
cmp
aam
xor
cwtl
push
pop
push
lret
push
add
push
push
mov
sbb
add
or
scas
xchg
cmp
repz
push
mov
int
call
adc
sub
add
mov
push
test
cmp
and
push
icebp
push
pop
push
xchg
icebp
jbe
jae
pop
mov
cmc
movsb
and
pop
xor
sub
pusha
out
and
fsts
dec
dec
sbb
sbb
psubsb
cwtl
mov
fistpl
out
das
sub
push
mov
and
jle
inc
testl
cmp
stos
add
and
scas
mov
and
jnp
xlat
test
in
jns
stos
adcl
fldt
jecxz
ficoms
or
push
test
fisttpl
loopne
lock
mov
lcall
cmpsl
shlb
mov
dec
sbb
or
leave
dec
mov
push
xchg
push
cmpsb
jb
stos
leave
je
pushf
fs
pop
stos
enter
call
push
jle
shrl
jle
ss
jecxz
fisttpl
xchg
std
pop
inc
cmp
out
addb
pushf
sbb
out
mov
jno
int
fwait
xor
push
in
scas
loope
subb
loopne
jbe
xchg
xor
in
xchg
jns
pop
fwait
sub
and
inc
mov
xchg
int3
insl
fwait
in
cmp
repz
std
inc
stos
sub
xchg
adc
ljmp
and
xchg
pop
mov
add
scas
pop
fdivs
movsb
mov
bound
loop
mov
dec
icebp
mov
or
mov
or
or
jne
add
repz
mov
push
cmp
mov
fsubr
clc
ljmp
jae
push
xchg
stc
leave
mov
jae
add
out
push
pop
pusha
lea
out
pop
sbb
and
xor
pop
jbe
mov
fwait
sbb
out
mov
jg
jae
fs
sti
out
outsl
pop
push
lcall
and
push
jne
jbe
shl
testl
jg
loope
stos
sbb
sub
mov
scas
aam
loop
imul
mul
pop
movsl
dec
lret
loopne
out
xchg
cwtl
in
jge
sub
inc
sub
les
mov
movsb
lods
mov
xchg
ret
and
or
test
sbb
ja
xchg
mov
sti
sbb
imul
xchg
cld
jb
addr16
mov
out
fwait
sbb
mov
xchg
and
ljmp
cmp
sti
call
and
cwtl
push
outsl
pusha
icebp
pop
mov
mov
lock
push
cmpsl
cli
outsl
push
and
jg
mov
mov
mov
fisubrs
sub
mov
dec
insb
cwtl
mov
xchg
clc
ficoms
pop
lods
sbb
movsl
jmp
sbb
xchg
push
aad
jnp
insb
xor
into
cs
pop
pop
mov
push
pop
mov
into
sub
lock
fs
lcall
add
mov
pop
add
data16
lahf
je
pop
sahf
shrl
dec
jmp
jae
xchg
pop
fcmove
pop
enter
mov
leave
jg
push
adc
mov
test
jecxz
sub
ret
push
mov
imulb
int
mov
clc
mov
push
mov
jne
inc
jl
xor
in
in
push
into
push
repnz
inc
jae
imulb
js
int
dec
and
lods
call
popf
stc
nop
gs
sti
fstp
das
mov
insb
xor
insl
les
ljmp
insb
mov
outsl
push
adc
inc
stos
and
or
pop
aaa
sub
adc
xchg
jle
push
xchg
rolb
int3
mov
scas
cmovno
jns
lret
stos
jo
cmpsl
push
xor
leave
cmp
sub
mov
mov
nop
add
cmp
scas
imul
out
bound
testb
enter
das
test
cmp
shr
aad
dec
adc
adcl
bound
xorb
cwtl
test
aad
sub
pop
jg
ja
jl
pop
lahf
sub
pop
enter
outsl
cs
test
leave
movsb
mov
push
pop
mov
cwtl
xchg
lods
testl
rcl
add
enter
imul
int3
incb
repnz
loope
fdivrs
fwait
mov
inc
cmove
in
xor
sub
test
push
add
cld
dec
add
xchg
and
icebp
lahf
cmp
sub
iret
sub
cmpsb
ficoms
repz
dec
jecxz
test
adc
push
es
stc
dec
int3
adc
and
fadd
fbstp
push
out
cmp
pop
pop
mov
enter
adcl
xchg
ja
push
xor
rcl
arpl
movsb
icebp
arpl
xchg
sbb
outsl
popa
js
cld
adc
aam
pop
sub
mov
xchg
in
cld
cmp
push
cwtl
data16
clc
sbb
xor
decb
shlb
loop
lea
jae
data16
roll
add
push
jb
loop
xor
jb
mulb
sub
sbb
mov
dec
icebp
scas
push
movsb
pop
inc
adc
mov
push
popa
mov
xlat
add
xor
dec
in
in
imul
out
mov
imul
lock
dec
jle
jle
outsb
popa
cmp
das
incl
pop
pop
cltd
push
add
cmp
and
cmc
fisubrs
andb
mov
adc
jb
mov
sub
xchg
jb
mov
lcall
pop
rcl
fldt
js
pusha
add
pop
popa
das
orb
xlat
daa
scas
ja
lods
arpl
rcrl
and
rcrb
adc
and
xchg
pusha
popf
daa
scas
cmp
sbb
pusha
pop
es
sbb
xor
fcom
mov
mov
notl
and
pop
jecxz
call
mov
push
push
jmp
les
lods
pop
pop
leave
in
jns
fsubrs
cmpsl
adcb
cmpsb
jo
xor
sub
mov
and
lds
add
push
outsb
mov
fs
stos
je
xchg
cld
xor
jnp
push
int
into
adc
push
pop
pop
push
mov
jecxz
lock
sbbl
into
sub
insb
scas
addr16
rcll
sarl
xor
loop
adc
sub
jecxz
and
adc
in
dec
popf
test
fwait
and
in
lock
dec
dec
sub
lret
lahf
fisubl
adc
je
dec
push
iret
and
repnz
sub
movsb
imul
daa
cs
fwait
mov
in
adc
jo
pusha
cmp
scas
int3
loopne
enter
movsb
pop
inc
or
pop
mov
test
mov
orb
and
ss
loope
dec
loopne
pop
pop
roll
stos
aaa
lret
sahf
orl
push
xchg
mov
push
call
sbb
sbb
xor
lcall
pushf
lods
paddsw
cmp
test
mov
lcall
push
adc
stos
pop
mov
cmp
xor
fisubs
xor
test
xchg
test
mov
pop
or
sub
cmp
mov
ja
aaa
daa
and
dec
dec
sub
inc
pop
xor
mov
fldt
cmp
inc
mov
and
adc
mov
mov
push
jmp
mov
stos
mov
mov
mov
insl
clc
sbb
icebp
ja
ljmp
xor
ja
xchg
and
rorl
and
sub
movsl
fucom
lahf
getsec
repnz
and
cs
sahf
icebp
push
sub
dec
fs
cwtl
pusha
pop
cltd
or
test
lcall
mov
es
sub
ljmp
cmp
aam
cmp
sbb
ljmp
fprem1
jns
out
jg
stos
mov
nop
popf
imul
fadds
xchg
dec
push
adc
sub
lock
mov
dec
mov
adc
push
inc
iret
cld
ja
inc
out
dec
mov
decl
mov
and
in
push
adc
sbb
test
js
or
push
mov
aad
fmuls
dec
mov
fisubrl
jp
pop
xchg
hlt
sub
sbb
cmp
mov
push
out
mov
hlt
mov
inc
sub
sbb
pop
hlt
inc
call
call
pop
sahf
daa
jmp
add
pop
jbe
add
shll
fsts
jl
sub
inc
dec
movsb
in
sub
cs
or
pop
cmpsb
sub
xor
pop
stos
xor
mov
mov
mov
mov
test
lret
test
and
lea
aad
pop
cmp
mov
outsb
mov
adc
xchg
xor
in
fiadds
mov
fidivs
jecxz
andb
mov
nop
out
int3
into
arpl
xor
ret
lock
dec
movsb
xchg
xchg
mov
sub
jecxz
mov
aas
sbb
xor
jle
sbb
or
iret
mov
rclb
mov
fldcw
lock
je
fwait
out
adc
movsl
xor
popa
lock
loope
sub
mov
fiaddl
sub
mov
dec
jecxz
inc
mov
repz
pop
add
mov
mov
cmp
push
gs
lods
pop
fldcw
enter
mov
xor
push
pop
mov
testb
jp
fsubr
icebp
xor
push
hlt
jae
bound
call
lcall
aam
aam
add
loop
jg
mov
xchg
push
jns
test
push
fincstp
scas
pop
xchg
mov
mov
mov
jg
mov
enter
inc
into
cmp
pop
fldlg2
mov
jp
cmpsb
dec
xchg
loopne
lcall
mov
movsl
imul
mov
pop
jb
cli
pop
lahf
imul
lret
mov
adc
sbb
add
dec
push
aad
pop
inc
pop
pop
xchg
and
mov
dec
mov
les
mov
movsl
out
inc
mov
pop
mov
dec
pop
cmp
push
mov
push
dec
ret
adc
jo
das
sbb
ljmp
inc
incb
repnz
mov
cmp
dec
sbb
cmp
add
mov
je
stos
add
mov
mov
mov
pop
imul
cmp
mov
sub
mov
add
out
and
mov
out
ret
jb
mov
mov
pushf
xor
les
inc
cmc
test
jb
push
std
mov
enter
push
sbb
adc
sub
popa
sub
inc
sbb
push
test
ljmp
leave
outsl
cwtl
jmp
add
pop
sbbl
dec
add
sti
daa
xchg
and
sbb
push
sbb
mov
jge
and
mov
pushf
mov
cli
sub
mov
das
imul
les
sbb
cmp
outsl
xor
jnp
mov
rclb
push
xchg
jp
add
pop
xchg
stos
mov
add
lods
test
out
xor
mov
dec
sbb
xchg
loop
push
mov
inc
loope
mov
push
ret
dec
insb
dec
push
loopne
push
divb
xchg
pop
stc
ds
push
or
xchg
aam
jns
jbe
xor
xchg
mov
in
push
mov
cmc
adc
push
bound
pop
data16
pop
cli
lahf
and
mov
stc
and
cmc
out
fs
cmpps
push
cmc
and
or
xor
inc
push
mov
push
xchg
shl
pop
pop
jb
imul
cmp
xor
pop
call
enter
shlb
add
rcr
xorb
cmp
sti
scas
and
cli
out
call
rcrw
addl
adc
scas
cli
cmp
push
jns
dec
jno
jb
jmp
inc
outsb
inc
cmp
insl
fucom
pushl
in
and
sub
xchg
pop
gs
sub
jb
dec
lods
popf
bound
push
push
add
cmpsb
shll
push
mov
scas
fs
jge
pop
xchg
pop
scas
rcrl
outsl
pop
bound
sub
out
push
jle
adc
pop
mov
jg
jge
int3
and
push
stos
lret
pop
pop
rolb
pop
cmp
mov
inc
repz
cmp
cltd
inc
divb
xchg
lock
xor
mov
cmp
in
cs
jb
test
inc
leave
bound
loop
xchg
pop
leave
and
test
and
popa
mov
xchg
outsl
jns
pop
cmp
push
mov
dec
xchg
test
push
jecxz
adc
cmp
pop
lahf
xchg
mov
nop
pop
mov
mov
or
cmp
addb
iret
push
negb
outsb
outsb
cmp
enter
push
leave
sub
data16
adc
stos
push
aaa
cmp
mov
int
jo
adc
or
mov
xlat
xor
push
shlb
je
movsb
cmp
lret
mov
nop
add
in
cmp
push
jp
jae
test
push
or
popf
jbe
dec
shll
in
inc
jns
sub
mov
adc
loopne
daa
xor
mov
jbe
int3
pop
inc
movsb
jne
xor
inc
cmp
mov
lds
jp
sarb
mov
inc
test
dec
inc
and
mov
arpl
dec
dec
inc
mov
dec
gs
xchg
popf
stos
scas
xchg
xchg
push
ljmp
mov
lods
xchg
movl
xchg
xor
ret
add
ret
mov
fstpt
call
flds
out
push
mov
cmp
cmp
loopne
outsl
mov
or
mov
in
loope
sub
mov
scas
fstpt
int3
mov
mov
cmpsb
fisubrl
push
cmp
or
ss
pop
push
rorb
jbe
fistl
fadd
or
fisttpll
xor
cli
sbb
push
nop
pop
add
jb
aam
dec
sub
pop
push
cmp
daa
test
lcall
inc
adc
xor
mov
push
jbe
cmp
cmp
adc
mov
mov
out
mov
mov
inc
xor
xchg
and
jmp
data16
push
fdivs
in
sub
sbb
push
rorl
mov
add
std
add
int3
xor
pusha
adc
xchg
sub
lods
sub
shlb
mov
es
mov
mov
sbb
inc
mov
pop
xor
inc
aaa
mov
insb
mov
pop
mov
sub
add
shll
into
xchg
mov
repz
scas
jnp
mov
jae
xlat
sbb
push
cmp
xchg
xchg
hlt
push
adc
fwait
mov
jmp
jae
scas
jbe
mov
int3
push
es
das
lods
jns
xchg
or
clc
sbb
xor
and
repz
rorb
xor
bound
bndstx
dec
cwtl
mov
out
es
jle
pushf
shl
push
jg
pusha
fcompl
enter
lea
jmp
icebp
push
cmpb
das
adcb
inc
jnp
mov
divl
cmp
stos
sub
xchg
outsl
mov
inc
mov
and
dec
insl
dec
sbb
inc
add
fcmovbe
lods
shlb
xor
add
or
dec
cltd
add
dec
aam
stos
mov
cmp
mov
push
lock
data16
mov
sbb
and
mov
or
or
cld
data16
adc
loop
out
divb
mov
sbb
pop
and
popa
mov
jmp
pop
jg
inc
sub
movsb
xchg
hlt
mov
xchg
push
popl
cli
jno
push
cmp
orb
pop
adc
or
mov
xchg
sub
sbb
negl
in
aam
rcrl
cltd
sub
rcr
fs
clc
andb
adc
jae
and
notb
add
ljmp
inc
jb
mov
insl
adc
xorb
mov
sub
add
pop
and
les
sub
xchg
in
and
or
mov
das
out
xchg
pop
pop
cmp
sbb
adc
ljmp
adc
jp
add
stc
xor
sub
push
les
push
sbb
sbb
lahf
inc
sbb
shll
scas
cmc
outsl
in
pushf
mov
jo
cmpb
or
mov
out
dec
inc
sub
loope
idivb
ja
adc
in
xor
popa
cmpsl
fisubl
add
dec
mov
insl
sti
adc
jl
scas
icebp
mov
lock
fsubs
adc
pop
pop
pop
inc
mov
loopne
mov
sahf
lods
inc
xchg
inc
push
call
push
ja
inc
and
dec
scas
jbe
aas
mov
loop
mov
add
push
lea
fsubs
rclb
popa
mov
lahf
loope
xchg
xlat
ja
mov
repz
mov
lea
call
int3
inc
aas
xchg
jb
test
dec
sahf
sbb
and
call
add
out
pop
loopne
flds
daa
loop
je
push
inc
sub
xchg
jecxz
xlat
add
mov
lods
push
les
ret
sub
mov
imul
test
test
stc
mov
icebp
mov
test
pop
daa
sbbl
jg
dec
add
sub
fbld
test
cmp
addr16
xchg
fmull
es
or
sbb
jp
add
and
push
repnz
cwtl
fists
jecxz
or
dec
pop
mov
sbb
insl
push
fsubrl
mov
out
stos
pop
test
or
pop
sbb
mov
and
push
sbbl
dec
jbe
inc
jl
popa
sarb
rclb
mov
in
sub
xorb
xor
hlt
sbb
inc
cld
xchg
dec
hlt
aas
cltd
pop
clc
jp
fdivrs
lock
out
jle
push
push
enter
add
xor
fnstenv
push
fs
mov
or
lods
pop
sbb
mov
hlt
xchg
sbb
out
mov
decb
ficompl
fcompl
xor
cwtl
push
jmp
xor
in
arpl
xchg
xchg
mov
inc
lods
inc
push
ja
or
cmpl
or
adc
jecxz
js
adc
mov
push
pop
pusha
imul
pop
cwtl
adc
sbb
es
jo
sbbl
cli
sub
jle
sbb
sub
add
mov
or
mov
push
jmp
pusha
or
push
sub
xchg
movsb
mov
icebp
sbb
xor
fldcw
and
mov
sub
jo
lret
int3
pop
in
and
call
cs
cmp
adc
bound
add
adc
test
filds
imul
mov
inc
inc
mov
or
push
inc
clc
ss
mov
pop
sti
inc
pop
mov
movl
out
cltd
sbb
nop
cltd
xrelease
addr16
or
int3
ficoml
int3
insb
jmp
aaa
enter
shlb
sbb
in
fsubrs
dec
xor
int
popf
faddp
addr16
xor
and
test
test
mov
adc
pop
mov
mov
push
pop
inc
mov
adc
cmpsb
mov
pushf
xlat
orb
sbb
movsb
push
rolb
xchg
xchg
fnsave
shl
mov
in
dec
adc
adcl
in
ljmp
mov
push
stos
sub
pop
hlt
das
cltd
mov
and
je
iret
mov
outsl
sub
adc
inc
fldl
sbb
mov
stos
xchg
mov
xchg
dec
out
and
cli
sub
jl
sbb
jmp
add
bound
loop
xlat
or
out
aad
cmpb
clc
cltd
std
gs
sub
pop
cltd
out
movsb
and
mov
pushf
push
sbb
and
fsubl
xchg
pop
push
xor
xor
xor
push
cmp
pop
data16
enter
cmp
adc
jno
lret
lahf
scas
push
jmp
and
dec
lods
cmp
das
shll
lea
adc
xlat
in
repz
das
mov
popf
adc
jg
addb
xchg
imul
call
xor
mov
cmp
push
sbb
and
and
scas
sar
fildl
movsb
bound
fwait
pop
lea
std
push
cwtl
pop
out
inc
je
xchg
add
dec
xor
jnp
jl
inc
cmpsl
jns
gs
adc
xchg
andb
outsb
mov
rclb
mov
shrl
mov
xchg
sub
mov
push
dec
xchg
dec
xchg
sub
cmp
cltd
xchg
jbe
push
pop
push
sbb
lock
fistps
loop
ffree
jle
je
mov
jbe
ljmp
test
adc
test
aas
clc
mov
pop
icebp
dec
cmpsb
rcll
dec
sub
bnd
inc
sti
push
sub
cwtl
outsb
lods
frstor
jp
hlt
inc
nop
or
les
testl
sbb
pop
xchg
in
mov
sub
jmp
test
lret
data16
inc
mov
adc
ss
sahf
inc
pop
mov
or
pop
push
and
push
pop
loopne
fsubrl
mov
vcmpsd
mov
inc
or
shlb
push
cmp
ret
sbb
push
int
mov
loop
hlt
mov
jmp
or
push
inc
mov
add
mov
fwait
xlat
jp
add
pushf
stos
lret
fdivs
lcall
shrb
add
and
adc
js
pop
jp
mov
cmp
xor
inc
push
push
mov
das
xor
push
sub
repnz
inc
mov
loop
fimull
or
mov
in
lock
mov
stc
add
or
iret
jb
dec
dec
int
icebp
pusha
jmp
outsb
mov
rclb
mov
outsb
pop
xor
xchg
hlt
push
shl
jecxz
jne
jne
push
nop
adc
test
outsl
out
sahf
in
xchg
fcoms
and
divb
push
mov
sbb
stc
out
rolb
xchg
lock
mov
jno
call
jns
ucomiss
cmpsb
into
pop
pop
movsl
lahf
jmp
frstor
mov
pushl
iret
mov
loopne
mov
mov
pop
rcl
xchg
fcom
xchg
pop
popf
cmp
in
or
cld
dec
jg
lods
xorb
jg
xchg
lahf
jp
jae
dec
lods
or
adc
push
and
mov
fisttpl
adc
mov
push
and
sarb
or
out
ret
aaa
add
mov
mov
mov
add
call
lds
flds
or
pop
sub
mov
xchg
mov
int
rorb
dec
adc
cmp
mov
lods
mov
xor
push
mov
rorl
push
repz
mov
stc
stos
mov
scas
je
dec
cmpsl
xor
inc
push
daa
mov
sahf
and
xor
add
jmp
mov
adc
mov
inc
xor
mov
mov
mov
lret
xchg
in
mov
and
insb
popf
lock
rcr
xor
les
xor
lahf
test
adc
mov
sub
push
pop
addr16
inc
pop
push
xchg
fs
test
inc
jo
xchg
mov
mov
data16
push
leave
mov
jle
loopne
pop
mov
xchg
insl
addr16
out
jae
imul
mov
nop
mul
dec
aaa
std
or
xor
rcll
mov
inc
lock
jecxz
pop
mov
xchg
fbstp
scas
pop
inc
push
shll
mov
and
in
imul
cwtl
mov
andb
subb
loope
pop
out
fcomps
jecxz
ljmp
into
dec
fisubs
sbb
and
xor
dec
push
repz
add
mov
cmp
out
shll
jl
popf
loopne
pop
hlt
in
inc
cltd
sahf
insl
mov
nop
aam
ljmp
jecxz
push
inc
jo
dec
ds
xchg
in
push
lods
inc
rorb
inc
add
ds
loop
sarl
push
fidivrs
cwtl
pop
sbb
jb
xor
lds
push
jl
mov
scas
push
dec
filds
sub
or
pop
notb
adc
scas
js
xor
xor
fwait
int
mov
testb
inc
rol
das
imull
xchg
imul
sbb
xor
ja
flds
push
dec
stos
or
mov
cmp
xchg
jbe
jge
mov
enter
adc
mov
adc
roll
fs
xchg
pop
lret
repz
dec
fdivl
mov
scas
mov
xchg
imul
fwait
xor
icebp
clc
loope
or
rol
lahf
sub
and
jnp
pushf
shl
in
das
fmulp
dec
and
mov
adc
outsl
jl
xchg
ret
fimuls
add
sbb
loop
cmp
jl
scas
test
sub
shrb
cmp
push
pop
into
dec
sub
das
mov
addb
sahf
xor
movsl
decb
cld
pop
cmp
or
mov
sub
popf
cli
xor
jno
sub
xchg
lret
or
ja
ljmp
mov
push
cmc
fwait
xor
fcompl
xchg
lods
ret
xchg
sbb
xor
adc
test
mov
jne
xchg
inc
sub
and
les
ds
pop
sarb
in
xor
es
aas
pop
pusha
popa
mov
fnstcw
mov
dec
mov
pushf
dec
lcall
addr16
add
adc
xchg
gs
mov
shlb
lods
loope
je
mov
lods
mov
pop
pusha
cmp
pop
ds
out
clc
lods
pop
call
out
adc
push
fsts
jae
rclb
call
add
cs
cwtl
pop
or
lret
dec
stos
jge
andl
mov
mov
push
inc
cmpsl
and
and
jne
out
and
roll
lea
mov
mov
adc
daa
fwait
sub
pop
mov
push
xorb
xchg
rcl
xchg
sti
pop
jae
cmpsl
mov
push
sub
sbb
cmp
pop
jnp
addr16
jp
jno
cwtl
jecxz
push
in
push
cwtl
scas
mov
into
and
orb
xchg
insb
mov
push
mov
fistps
aam
mov
cltd
sub
xor
fs
aad
es
jno
fstpl
sahf
jns
jge
mov
xlat
leave
mov
sub
mov
test
cs
pop
inc
fildl
mov
adc
push
sbb
imul
inc
in
add
ficomps
add
dec
lret
aam
jl
cld
push
push
add
dec
leave
negl
in
negl
out
fwait
inc
and
fisubs
mov
add
lcall
icebp
push
sub
stc
jg
cmp
pop
je
sub
add
or
mov
fldt
or
nop
xor
lods
fnstenv
jl
jmp
push
sti
sbb
std
les
xchg
shll
pop
les
dec
ds
push
sub
pop
pop
push
loopne
push
mov
sub
xchg
sub
adc
cmp
aam
imul
jg
mov
adc
dec
jae
xchg
sbb
xor
mov
mov
or
mov
aam
cwtl
xchg
xchg
dec
jg
lret
pop
mov
dec
mov
xlat
sbb
and
mov
es
movsb
fwait
pop
jp
jg
divl
fst
adc
push
ljmp
jl
ja
jge
cmpsl
das
leave
add
mov
jge
sub
jb
ja
xor
or
leave
mov
lret
popf
mov
or
jns
decb
hlt
sub
addr16
movsl
pop
cmp
or
mov
sbb
movsl
je
sub
mov
decl
pop
mulb
mov
inc
repnz
mov
cmpsb
ret
filds
pop
in
test
jae
sar
cmc
mov
fisttpll
xchg
mov
sub
adc
aas
fsubrl
adc
push
iret
xor
add
cwtl
mov
adc
add
outsb
sub
imul
or
mov
adc
inc
cmp
mov
push
jb
faddp
in
lcall
pop
adc
notb
push
inc
sbb
dec
mov
inc
ret
pop
mov
dec
enter
jecxz
gs
shr
push
test
inc
loop
cmp
cmpsb
mov
ficoms
mov
out
xor
enter
jp
dec
into
leave
push
mov
fldt
fst
jge
icebp
repnz
int
jmp
pop
shrl
sbbb
jmp
cmp
cli
xlat
push
std
lods
aam
adc
mov
rcll
jne
adc
gs
inc
inc
push
sub
jle
repnz
sbb
ljmp
mov
push
cli
bound
cmpsb
pause
test
shrb
mov
shlb
pop
lahf
or
mov
outsl
sbb
cmp
fidivl
movsb
inc
xchg
mov
sti
pop
sbb
jnp
mov
push
push
mov
pop
push
loop
sub
and
dec
cmp
stos
and
repz
jecxz
cwtl
push
mov
enter
inc
mov
insl
loop
inc
pop
or
pop
into
or
mov
push
and
push
in
jnp
push
push
sub
pop
add
xor
aaa
cmovb
mov
jae
inc
in
mov
xchg
push
or
js
neg
adc
addr16
push
mov
mov
adc
sarb
das
fwait
add
adc
in
add
pop
xchg
lods
jb
dec
into
sbb
pop
xor
xor
js
mov
insb
xor
jmp
repz
jmp
push
ss
mov
loopne
das
xchg
clc
lea
ja
cs
mov
repz
cmp
std
scas
ret
push
test
imul
shrb
or
mov
xor
lods
jge
cltd
gs
pop
xchg
subb
lods
add
mov
xchg
cmp
repnz
dec
inc
mov
xor
xchg
cli
cmc
pop
cltd
cwtl
adc
dec
xchg
leave
les
stos
mov
mov
xchg
jne
loopne
inc
sbb
divl
pop
lcall
inc
xor
cwtl
cltd
mov
fimuls
aaa
jbe
mov
movsb
mov
imul
inc
sti
scas
mov
fidivrl
xor
or
xchg
push
bts
inc
gs
adc
imul
sar
popa
loope
xchg
pop
pop
es
mov
push
test
dec
cmp
push
mov
dec
jmp
mov
sub
loope
jmp
jmp
jns
xor
stc
xchg
sahf
mov
push
jne
dec
inc
mov
adcl
cmove
stos
and
fldcw
xor
push
pushf
dec
int3
mov
loope
dec
lret
and
jb
cmpb
mov
insb
jb
mov
xchg
or
out
pushf
stos
clc
mov
adc
scas
adc
add
jmp
inc
pop
jmp
cs
xor
in
lods
orl
mov
adc
pop
push
into
or
pushf
loope
mov
mov
pop
add
dec
stos
lret
int3
dec
inc
xchg
lret
cmpsl
jecxz
in
cli
sbb
mov
popa
fs
xor
pop
js
cmp
mov
jmp
mov
lret
lods
lea
pop
hlt
in
adc
cmp
imul
push
jb
or
adc
leave
adc
add
movsl
xor
pop
mov
add
sub
dec
stos
sarl
cmp
fisubl
cmp
xchg
sub
jo
mov
xchg
movsl
push
lret
or
push
idivl
jb
and
mov
cld
movsb
adc
test
mov
xor
cmpsl
gs
imul
sub
cwtl
mov
cmp
push
mov
or
lea
lods
push
and
data16
pop
fiaddl
adc
out
stc
xchg
push
popa
jb
jo
sahf
std
fists
jne
adc
mov
inc
arpl
repnz
xchg
imull
lods
cwtl
scas
jg
in
sbb
pop
xor
cltd
dec
stc
lahf
mov
mov
fwait
xchg
hlt
xor
stc
push
repz
cwtl
push
mov
cmp
push
ss
or
notl
movsl
push
xor
imul
cmp
and
mov
test
mov
sysexit
and
imul
xor
mov
push
mov
iret
inc
or
adc
subl
movsb
pop
jmp
cmpsb
mov
and
or
and
sbb
jnp
loop
addr16
xor
les
iret
mov
or
cmp
xchg
or
dec
sahf
stos
scas
fstps
rorb
test
cmc
daa
xchg
adc
scas
mov
test
cmp
cmp
fs
or
ja
and
mov
inc
mov
aas
pop
adc
add
or
orb
out
adc
ljmp
test
ficoms
cmp
mov
sbb
sahf
stos
andl
je
les
out
ss
jmp
dec
stc
scas
orb
dec
mov
out
scas
sbb
mov
sahf
mov
rcrl
enter
jo
xchg
lret
inc
mov
jne
or
mov
ret
imul
mov
lea
outsb
enter
mov
adc
jbe
xor
and
and
int
xor
push
lret
fisttps
dec
mov
jge
stos
ret
nop
hlt
mov
cs
shl
lcall
out
add
xor
pop
rorl
ret
adc
sbb
dec
hlt
adc
and
fidivs
out
sub
jp
cltd
cmpsb
fidivrl
rol
cmp
dec
pushf
mov
and
mov
and
not
flds
lret
daa
mov
xor
adc
fwait
mov
cmp
call
out
nopl
dec
insl
cltd
and
es
and
hlt
inc
mov
push
dec
inc
lcall
aad
subl
mov
iret
add
and
sti
jecxz
aam
sub
mov
ret
cmp
shrb
mov
jo
mov
xorb
in
loope
nop
mov
inc
dec
sub
push
in
iret
or
arpl
cli
pusha
lea
pop
inc
cmp
clc
cli
int3
adc
fcomps
pop
xchg
adc
gs
je
mov
mov
dec
repnz
aad
stos
jnp
push
aam
nop
or
data16
aaa
mov
leave
mov
call
out
aad
lahf
imul
jno
out
pop
sub
lcall
imul
je
mov
imul
lcall
in
decl
lock
sti
sti
cs
outsb
inc
andb
arpl
inc
lods
ret
xchg
sub
int
jge
imul
fcoms
dec
jge
ljmp
lock
xor
fcomps
outsb
lds
incl
fucomi
call
push
or
jnp
sbb
pop
nop
aad
cmp
mov
out
mov
xchg
mov
pop
cmpsb
push
in
mov
imul
je
cmp
setg
mov
xchg
out
adc
mov
lea
enter
pop
pop
fwait
sbb
adc
dec
jne
sub
inc
mov
ret
pop
xlat
jnp
dec
add
mov
int3
xor
jbe
rcr
xorb
fdivl
cmp
or
push
lds
jp
roll
xor
sbb
xchg
cmc
aad
mov
or
lock
add
xchg
stos
mov
and
xchg
ret
adc
sub
pop
sti
fstl
loope
and
testl
mov
roll
xchg
call
repz
test
or
cbtw
imul
fldz
ret
je
arpl
jo
xchg
jae
push
sbb
arpl
outsl
fists
in
xchg
outsb
xchg
int3
xchg
push
call
push
fbld
mov
sub
fs
dec
ja
scas
lods
movb
jecxz
hlt
adc
insb
cmp
sub
fs
cli
je
mov
mov
jae
dec
add
pop
xchg
add
pop
sti
paddusb
icebp
imul
pop
outsl
cmc
push
jb
jg
jnp
push
or
repnz
cmp
scas
aas
aas
stc
inc
mov
aam
xor
loop
cmp
ss
lret
cwtl
pop
xor
xchg
ret
jg
js
mov
jle
movsb
xor
call
mov
jae
mov
adc
pop
out
inc
ficoml
scas
mov
rorl
xchg
movsl
popa
jg
cmp
cmc
sbb
xchg
sub
xor
out
or
rolb
cld
push
outsl
clc
xchg
push
jno
mov
xchg
add
mov
repz
movnti
pop
adc
push
sbb
inc
psubusw
fs
rcr
jge
sub
or
mov
inc
and
xchg
mov
dec
dec
mov
aas
mov
push
je
mov
cmp
xlat
pop
mov
daa
test
gs
xorb
lods
push
jne
and
scas
push
dec
cmp
imul
add
icebp
adc
sbb
repz
sbb
lret
stos
push
pop
xor
aas
mov
mov
sub
adc
nop
cmpsb
insl
iret
loopne
mov
add
faddl
mov
adcb
out
dec
cmpsb
lods
push
and
call
xchg
cltd
jno
dec
in
mov
add
ret
sub
movsl
cmp
shlb
cmp
jne
mov
cwtl
sub
and
cs
sahf
fcoml
add
cmp
jge
in
jbe
push
data16
mov
mov
pusha
fisubrs
prefetch
and
js
xchg
addl
ljmp
xchg
into
dec
aaa
leave
lds
add
mov
test
xchg
pop
sub
stos
fwait
inc
mov
das
push
in
aad
mov
and
xor
insb
mov
push
ss
movsb
inc
dec
popa
addb
imul
xchg
push
rclb
sub
pop
pop
dec
shll
xor
cmp
lret
mulb
gs
jl
test
mov
scas
lret
inc
insb
mov
add
pushf
jge
ljmp
xchg
xchg
inc
nop
add
shlb
and
push
pop
popf
imul
out
inc
and
leave
mov
cwtl
or
mov
jns
and
test
jge
cli
push
imul
jecxz
imul
lcall
and
sbb
xchg
in
mov
xchg
loope
insb
movsb
lcall
fsubrp
or
repz
xchg
bound
cmpsb
aad
adc
movb
xchg
lock
inc
mov
int
pop
setp
xor
sahf
fdivl
mov
shrb
imul
push
pop
inc
add
aaa
mov
xlat
push
jle
subb
gs
popa
popf
cli
cmp
fucomp
fadd
lods
mov
jmp
mov
cmp
cmp
cmp
mov
push
or
sbb
mov
push
shl
sbb
mov
cmpsl
rol
out
mov
xor
push
sbb
test
sbb
sub
pop
ret
loop
sub
pop
mov
mov
call
and
sbb
adc
xor
in
xor
sub
cmp
fprem1
mov
icebp
fwait
push
cmpb
es
in
sub
shrl
rorl
mov
mov
gs
sahf
sub
and
cmp
inc
add
fincstp
jae
dec
arpl
cmp
and
pop
and
sahf
jl
test
lahf
loop
fildll
mov
jne
lret
das
addb
scas
cmp
cmp
push
je
scas
repz
movsl
in
adc
lds
addr16
pop
xchg
cmp
out
cld
out
testb
fwait
jmp
out
mov
adc
xchg
push
divb
out
inc
and
ja
jne
addr16
and
dec
out
xchg
cli
lret
or
add
imul
inc
xchg
xchg
int3
and
mov
test
lahf
lret
testl
pop
mov
iret
mov
jl
jmp
dec
aas
jb
dec
mov
cmp
popf
ficoml
or
pop
sbb
dec
sbb
sub
cmp
sub
inc
xchg
out
cli
js
aaa
movnti
sub
insb
and
insb
stos
scas
jns
jno
inc
xchg
mov
std
nop
es
mov
xor
ficompl
clc
sbb
bound
or
sbb
sbb
add
test
in
mov
sbb
xchg
int
jnp
icebp
and
jcxz
xor
lods
push
lock
adc
in
add
testl
lods
arpl
pop
jnp
pop
dec
addr16
gs
imul
pop
outsl
and
sub
in
xor
pop
cmp
jo
push
je
mov
sbb
mov
xchg
inc
mov
ficomps
enter
icebp
mov
mov
sub
test
loope
cli
gs
test
sbb
jle
add
rep
inc
sbb
dec
sub
dec
repz
inc
xchg
pop
test
inc
mov
xor
dec
aam
xor
mov
cmp
xor
cmc
je
push
popa
xchg
mov
and
pop
sbb
jbe
or
and
or
or
cmpsl
cltd
sbb
inc
test
add
adc
das
mov
and
and
mov
pushf
scas
pop
mov
mov
sub
lahf
jbe
rclb
jp
loope
add
fidivs
mov
pop
inc
js
hlt
jp
xchg
or
in
mov
ss
out
insl
and
stos
mov
adc
pcmpgtw
leave
mov
cli
push
sub
pop
ds
inc
jl
sub
aad
sahf
or
mov
adc
dec
iret
pop
scas
pop
or
xchg
mov
mov
ljmp
roll
js
xor
movsb
hlt
inc
lcall
adc
fadd
icebp
inc
pop
rcr
or
mov
aas
imul
sbb
es
jne
outsl
mov
xor
push
pop
sub
sarl
scas
in
dec
movsl
movsl
xchg
sub
je
aaa
cmp
std
in
inc
jns
subl
mov
sarb
mov
adc
push
pop
insl
loope
loope
out
popa
push
ret
xchg
sbbb
sub
lea
lcall
xor
mov
out
and
pop
jge
out
inc
int3
push
lret
mov
pop
repnz
jecxz
in
push
xchg
dec
push
imul
fsubl
mov
add
xchg
dec
mov
and
ljmp
ds
nop
inc
mov
push
imull
sti
test
push
hlt
xchg
je
jbe
xor
push
jle
push
clc
dec
pusha
pop
sbb
pusha
stos
cmpsl
pop
add
repnz
loope
mov
ror
jp
push
push
aam
ljmp
leave
pop
into
ret
push
pop
cmpsb
cmc
dec
and
add
dec
mov
pop
xchg
shr
cmp
push
repnz
lods
in
sub
mov
pop
les
bound
cs
sub
pop
out
mov
loopne
mov
es
out
ss
mov
cmpsl
adc
loope
sahf
andl
in
mov
push
out
ljmp
jp
shlb
call
cmp
or
repz
stos
mov
fists
inc
lods
out
lret
and
inc
xchg
popa
cmp
lret
push
xchg
stos
pop
xorl
fwait
sbb
shlb
fnstsw
lods
cmp
pop
cwtl
divl
mov
and
call
inc
pop
add
jbe
shl
sbb
mov
outsb
jp
sbb
pop
mov
jmp
popa
ja
pushf
push
pop
test
fldt
xchg
push
rcrl
and
xor
mov
cmc
scas
xchg
add
dec
pop
ffreep
push
jle
loope
daa
std
outsb
dec
adcb
pop
jo
sbb
push
push
xorb
dec
incl
shlb
mov
sub
test
test
add
sub
into
mov
cli
aad
and
scas
shl
sub
daa
popaw
sub
xor
xchg
sbb
push
xor
ret
or
push
inc
sub
negl
sbb
adc
lock
les
inc
enter
mov
imul
jo
fxch
test
push
fstl
inc
in
cmpsl
cmpsb
fwait
jne
pop
out
and
jbe
push
add
mull
xchg
push
cmp
mov
jl
or
out
enter
add
add
dec
daa
roll
nop
ljmp
mov
iret
jmp
stos
stc
inc
mov
pop
mov
lds
jmp
pusha
in
daa
xchg
imul
sub
inc
out
inc
or
xchg
xor
hlt
xor
ljmp
and
imul
jge
sbb
mov
pop
nop
lods
mov
inc
dec
add
jl
ljmp
pusha
jl
xorl
cmpsl
lods
xor
xchg
sub
insb
dec
ds
adc
cwtl
sub
hlt
out
leave
arpl
fstpt
mov
dec
mov
cmp
inc
cltd
sub
pop
inc
into
lods
divl
fiaddl
mov
aaa
sbb
dec
cmp
aad
js
ret
rorb
mov
sbb
fs
mov
push
add
mov
out
xor
stc
dec
cmpsb
cmp
mov
add
dec
cwtl
clc
mov
lahf
vmwrite
fwait
push
jb
jmp
jno
inc
push
cmp
inc
jae
push
jb
sub
ds
roll
pushf
insb
push
adc
mov
arpl
mov
push
mov
xchg
dec
dec
dec
aaa
fwait
and
js
or
jg
addb
out
icebp
sbb
stos
dec
mov
cmc
sub
arpl
ja
inc
fisttps
andl
std
jge
movsb
or
jb
aaa
scas
sbb
xor
std
and
pop
call
ret
out
adc
mov
push
inc
jg
pop
jae
adc
pop
inc
rolb
fwait
sub
sub
out
mov
shll
cmp
cmp
or
pop
stos
mov
cs
daa
and
stc
ja
scas
mov
iret
sahf
outsl
stc
fsub
int3
sub
lods
into
sbb
ljmp
jnp
les
cltd
push
movsl
cmpsb
outsl
ds
jo
adc
or
js
mov
mov
outsl
add
test
add
add
enter
fildl
add
push
cmp
out
gs
lret
incb
nop
xor
fwait
std
push
fadd
sub
mov
das
cs
sbb
or
add
test
pop
xor
jns
add
and
pusha
jg
lock
push
sbb
dec
orl
adc
add
lret
mov
sbb
push
das
xor
dec
mov
add
outsl
xor
sbb
and
fistl
shl
push
or
sbb
push
sub
push
pop
pop
fiadds
test
in
shrl
jno
adc
mov
mov
fnsave
scas
sub
in
sti
dec
sub
in
xchg
xchg
adc
subl
or
pop
mov
jle
lahf
mov
enter
in
movsl
jb
pop
sub
pop
sbb
in
or
aam
imul
stc
iret
test
and
pop
fs
mov
jmp
push
jne
sbb
xchg
das
fwait
movsb
inc
jb
fcoml
xor
xchg
adc
jp
dec
ss
jne
movsl
xchg
adc
mov
lock
pop
mov
mov
pop
clc
mov
clc
in
dec
sbb
ja
movsb
xchg
mov
stc
outsb
in
dec
push
rolb
xchg
cmpsb
cmp
xlat
xchg
push
push
inc
sub
outsb
mov
adc
add
and
call
mov
xchg
sbb
ret
inc
pop
dec
jmp
xchg
xchg
adc
scas
sbb
setge
rcl
pop
xchg
jmp
mov
lret
jb
test
cltd
wrmsr
mov
in
adc
xor
jnp
xchg
cmpsb
and
xor
xor
in
mov
in
dec
lret
jno
or
rclb
ja
ljmp
repnz
inc
cwtl
sub
cmpsl
fwait
loop
in
jecxz
mov
cmp
js
repnz
mov
xchg
mov
push
pop
call
push
nop
mov
mov
mov
mov
ffree
jbe
icebp
cmp
imul
add
mov
fs
cmp
sub
push
mov
cmp
dec
bound
in
out
aaa
ss
dec
nop
ret
fiaddl
jecxz
scas
xchg
mov
mov
call
cmp
adc
data16
jmp
jae
sbb
fistl
test
cmp
gs
ss
push
es
jge
imul
movsb
ljmp
sbb
outsl
mov
xor
cmp
in
in
sbb
fucomi
scas
lcall
dec
popa
sarb
testl
xor
inc
les
stos
cltd
stos
xchg
mov
in
pop
and
jp
ja
inc
pop
cmp
rcrb
daa
jge
cs
sub
nop
stos
scas
fcoml
jb
enter
adc
testb
mov
mov
xor
xchg
inc
push
pop
xchg
mov
push
sarl
call
iret
dec
adc
mov
test
dec
push
xchg
xchg
fdivrs
xchg
push
icebp
sarl
mov
push
mov
repz
fs
lret
enter
into
leave
mov
jae
push
pop
cltd
lock
xchg
dec
ret
cmp
sub
add
dec
fmuls
cmpsb
data16
out
cltd
pop
or
inc
jbe
jl
in
jmp
pop
je
and
in
stos
ja
or
insl
sub
xchg
aas
cmp
and
nop
mov
jecxz
loop
xor
lock
add
cmpsb
inc
jle
jns
into
and
cmp
shrb
dec
and
dec
icebp
icebp
and
cmp
adc
loopne
cmpsb
lahf
mov
inc
mov
lock
dec
gs
lods
insb
mov
jb
in
pop
jmp
in
xor
sbb
cmpl
sub
rcrb
in
popa
xlat
add
xchg
inc
sub
test
lret
ds
sub
mov
xchg
cmc
cmp
add
cmpsl
jo
push
ja
adc
maskmovq
idivl
gs
jl
sbb
test
mov
lret
dec
fnstenv
popf
cmpsl
jae
ss
xchg
fcompl
jb
sub
jbe
loope
xlat
mov
loope
lret
movsl
mov
push
aad
or
xchg
loopne
les
adc
jo
inc
imul
or
pusha
ret
push
fistpll
mov
xchg
lret
addr16
addr16
movsb
popf
cltd
shrl
mov
lds
cmp
sarl
ja
mov
and
jmp
mov
movzbl
sub
mov
cwtl
xor
leave
mov
sbb
xor
push
shlb
ss
xor
or
hlt
push
and
mov
and
hlt
dec
inc
nop
scas
push
shl
lock
inc
mov
setle
adc
adc
ret
nop
jae
into
inc
out
sub
sbb
pop
and
push
jno
scas
lea
fwait
jo
pop
push
jbe
ret
mov
out
mov
stos
push
gs
pop
lcall
xor
xor
aaa
inc
jne
cwtl
sub
mov
cli
arpl
mov
or
pop
aas
enter
inc
inc
sbb
sub
inc
pop
stos
shlb
int
fisttpl
pusha
stos
test
xor
push
loop
scas
arpl
in
add
xchg
sahf
sub
inc
add
mov
ret
cli
test
pop
ret
sarb
in
lret
dec
in
ds
fisttpll
cmp
jnp
jle
adc
pop
mov
mov
jl
clc
sti
icebp
add
pushf
xor
mov
out
in
mov
xor
ja
mov
adcl
push
cmc
mov
push
xor
and
mov
jmp
ffreep
in
add
aam
push
cmp
out
cmp
xchg
in
aaa
push
sub
lds
mov
cmp
add
lock
movl
pop
movsb
push
or
add
xchg
arpl
arpl
ds
lea
push
sbb
push
and
fistpl
mov
jmp
loop
jns
fmul
cmp
shrl
in
xchg
mov
cmpsb
mov
and
loopne
pop
popf
orl
test
dec
or
lock
jns
test
jnp
sub
mov
scas
icebp
cmp
setg
sar
movd
in
inc
jl
cli
fisttpll
lods
adc
mov
repnz
fidivrs
fwait
sbb
jo
cmpsl
inc
out
lods
sbb
stc
orb
push
stos
jno
out
dec
jno
and
dec
test
sub
out
adc
jns
enter
rol
aad
leave
dec
cli
inc
add
insb
out
pop
pop
push
cs
icebp
pushf
pop
sub
adc
inc
inc
pop
jbe
rclb
in
mov
and
jge
sbb
pop
adc
arpl
mov
jne
mull
xor
fistl
sbb
jmp
mov
mov
ljmp
lret
push
mov
xchg
xorl
mov
aad
adcl
lods
cwtl
fsubl
mov
xor
arpl
pop
movl
pop
fisttps
imul
lods
cwtl
fsts
xor
pop
xchg
mov
xor
or
pop
xchg
dec
popa
movsl
mov
jns
push
addr16
ds
push
imul
frstor
cli
mov
or
or
out
imulb
test
jge
sub
push
dec
mov
icebp
jl
pop
add
push
mov
lds
and
mov
pop
jb
mov
jbe
jb
jbe
leave
in
cltd
push
lock
rcrl
das
pushf
xor
daa
inc
ljmp
push
push
pop
cmc
fbstp
movsb
aad
test
dec
lcall
xchg
xor
mov
dec
lcall
push
mov
jb
lods
mov
adc
addr16
aas
xchg
mov
pushl
sub
lods
adc
sarl
and
lods
inc
out
sub
rorl
inc
jno
loope
add
loopne
stc
fidivs
scas
xchg
aad
fs
dec
pushf
mov
adc
inc
shll
xchg
xchg
jo
xor
mov
and
and
lods
loopne
mov
xchg
jns
or
jns
and
mov
add
ret
xchg
jg
adc
xchg
test
repz
add
add
adc
test
shlb
fsts
cmc
test
lea
out
adcb
xor
int3
jb
leave
inc
daa
mov
movsb
fstps
sbb
je
lock
movsl
clc
add
lret
push
push
pop
jecxz
dec
xlat
int
inc
call
or
sbbb
pop
push
add
fimull
push
add
aam
andl
adc
adc
sbb
or
fisttpll
pop
push
loopne
dec
mov
pop
pusha
mov
icebp
sub
adc
pop
in
mov
ret
lahf
adc
das
aas
adc
loop
test
mov
push
jne
aaa
and
loopne
or
into
inc
ljmp
movsb
daa
leave
out
cmc
xchg
mov
adc
xchg
cmc
adc
xor
arpl
sbb
movsl
lret
dec
adc
test
pop
aad
cmc
cmp
mov
mov
inc
dec
pop
adc
mov
mov
in
adcl
xor
fiaddl
out
or
xchg
adc
jae
and
mov
xchg
and
loop
cld
stos
mov
aad
jecxz
andb
mov
js
cmp
mov
in
sub
dec
inc
inc
add
sub
add
shrb
lahf
cld
sarl
lods
bound
cmp
fistpl
jo
xor
push
cmp
xor
outsl
into
stos
insl
jmp
xor
or
andl
andl
jno
jne
cmc
out
add
rcll
xlat
fdivr
mov
inc
fsubrs
mov
sbb
lcall
into
jecxz
xor
gs
mov
aad
add
repz
jnp
stc
xor
pop
std
xchg
mov
out
push
lods
je
loop
push
push
outsl
xor
sbb
scas
add
repz
daa
lcall
inc
xor
mov
icebp
mov
push
adc
xor
sbb
push
mov
fdivl
ror
test
jno
bound
add
loope
icebp
pop
dec
leave
mov
test
cmp
sbb
repz
movsb
cmp
jecxz
mov
xlat
cmpb
mov
ss
orl
andl
pop
cwtl
outsb
inc
add
adc
xlat
imul
jle
push
inc
xchg
loope
call
ret
xchg
movsl
test
repnz
pop
test
es
pop
xchg
dec
push
jmp
or
push
adc
mov
das
push
and
jle
ret
mov
xchg
dec
cs
pop
adc
xlat
fistpl
std
or
mov
int3
aaa
mov
inc
repz
lcall
hlt
mov
clc
pop
popf
adc
popf
jmp
push
and
push
or
pop
cmp
mov
mov
lcall
add
stc
fsubrs
jge
xchg
add
ret
dec
xchg
sbb
out
movsl
jo
sbb
inc
push
leave
sahf
aaa
xchg
pop
fs
push
sub
and
data16
mov
inc
mov
ret
dec
test
cs
addr16
and
and
stc
sub
cld
push
iret
sub
mov
test
arpl
sbb
mov
lods
shrl
add
inc
stc
and
call
xor
mov
pushf
sub
xor
or
mov
push
adc
icebp
stos
add
stc
ljmp
cli
mov
loope
std
pop
and
adc
or
test
xchg
cmp
cs
jnp
xchg
int
mov
scas
pop
scas
cmpsb
push
inc
mov
aam
fnstcw
movsl
inc
ljmp
mov
jae
pop
sbb
pop
inc
inc
mov
mov
fnsave
loope
sbb
inc
repz
js
jbe
mov
stos
xchg
mov
movd
or
jl
cli
in
rcll
xor
mov
ret
lods
jecxz
sbb
inc
fisttpll
xlat
jae
das
and
sbb
jo
btl
cmp
movsl
iret
ret
inc
push
jo
push
lds
adc
mov
repz
cmp
xor
mov
jmp
push
jp
mov
mov
mov
fnstenv
test
test
nop
aad
xor
mov
jbe
xchg
xchg
push
stc
xor
mov
pop
dec
lret
mov
sub
pop
loope
cmp
mov
mov
in
into
gs
or
xor
xchg
cmc
into
out
push
test
pop
aad
xor
test
mov
dec
shr
add
push
js
adc
fs
loop
pushf
cmc
shll
inc
fistps
lock
fucom
xor
sahf
or
mov
mov
mov
ret
rol
jno
lcall
je
xchg
push
lods
inc
loope
bnd
jecxz
imul
jp
mov
cmp
cwtl
fidivrl
shrb
mov
divps
fmuls
lods
add
es
es
faddl
jmp
dec
cwtl
push
inc
inc
idivl
adc
inc
jne
lock
xchg
enter
sbb
dec
jge
add
fsubrl
pop
cmpsb
jecxz
in
cmp
into
mov
nop
dec
cmp
das
int
test
les
std
push
rcrb
shrl
pop
dec
lock
dec
and
adc
outsb
inc
test
in
xor
call
lods
mov
mov
mov
sbb
mov
and
insb
inc
pop
stc
leave
mov
ss
sbb
out
mov
mov
adc
test
lahf
dec
int3
lds
lret
jle
test
std
push
in
or
mov
push
shl
jns
shll
sbb
scas
xchg
je
sahf
mov
sbb
inc
xchg
mull
imul
xor
add
scas
xchg
ret
and
cmp
movsl
mov
cmp
movsb
pushf
xor
mov
push
nop
cmc
dec
scas
mov
jo
cmpl
inc
lods
push
jns
daa
pop
jae
pop
sub
ss
inc
sub
stc
andb
jno
push
mov
pop
push
sbb
xlat
fmull
stc
add
push
adc
movsl
jne
cltd
imul
cmpsl
jl
ljmp
jge
xchg
mov
add
dec
nop
scas
push
insb
and
dec
scas
adc
push
data16
sti
sbb
fs
in
int3
sub
mov
mov
mov
test
mov
jmp
mov
jecxz
pop
sub
xorb
jno
add
lahf
fdivrl
js
xor
shrl
fucomi
sbb
pop
mov
scas
pop
fildl
sub
lcall
jae
popa
cmpl
xchg
addr16
pop
negb
lahf
rol
add
cmp
xchg
bound
add
or
in
mov
mov
std
jnp
xor
xchg
divb
push
pop
sbb
ljmp
hlt
sbb
mov
push
cmp
psrlq
mov
lahf
mov
and
test
adcb
xor
call
rcrb
call
pop
int
jne
lret
inc
push
xor
cmpsl
das
arpl
sbb
sub
call
or
icebp
imul
inc
adc
out
push
and
sub
push
xchg
push
pop
add
mov
aaa
pusha
in
push
stos
pop
fisubrl
xor
fdivrl
jae
nop
insb
outsl
test
fwait
mov
loopne
push
xchg
add
pop
jns,pn
cmpb
mov
mov
sub
pop
pusha
jl
mov
adc
dec
aad
and
stos
fists
bound
push
pop
add
cmp
inc
add
or
or
jbe
imul
push
sahf
lods
lahf
stos
jl
inc
mov
pop
dec
adc
ror
inc
aaa
fs
dec
xlat
sub
sbb
push
or
jb
sbb
xchg
icebp
incb
lock
sub
inc
out
sub
lret
mov
sub
push
xchg
sahf
movaps
or
mov
das
jmp
mov
adc
addb
add
ror
jnp
adc
mov
jecxz
ret
add
sbb
test
data16
dec
or
shlb
push
pop
movsb
aaa
adc
addl
stos
cmp
mov
xchg
repz
mov
xchg
xor
jnp
mov
adc
repnz
add
sbb
pop
pop
inc
xchg
bound
rclb
xchg
fcomip
enter
aaa
adc
sbb
or
sub
das
ficomps
adc
fs
jp
adc
jle
fists
mov
sub
movsb
xor
in
out
sahf
in
rolb
mov
dec
call
dec
pop
scas
in
jne
pop
push
add
sarb
and
jmp
inc
fsubrl
xlat
pop
sbb
repz
xor
pop
sti
jo
js
lret
jle
mov
mov
addr16
push
or
pop
xor
cld
aaa
inc
popf
xor
and
sbb
mov
push
iret
rcl
push
mov
lea
dec
bound
pop
in
lret
int
ljmp
inc
int
add
jecxz
mov
sbb
mov
mov
dec
fiadds
cmp
out
jmp
push
or
das
repz
push
mov
fistpll
jge
jo
and
ja
scas
fsts
hlt
cmp
xlat
xor
bound
push
popf
subl
lcall
jae
das
in
add
loopne
cld
sub
jb
iret
out
pop
les
and
and
test
lret
cmp
test
icebp
cmpsl
mov
out
test
shlb
or
lds
insb
cmpsl
sbb
mov
mov
pushf
lret
icebp
push
in
fmuls
pop
movsb
add
sbb
shlb
in
add
fcmovnbe
mov
dec
pop
sub
sbb
push
negb
and
and
xchg
sbb
jo
jg
cld
cmp
ds
push
lea
cld
xchg
in
pop
mov
test
addr16
mov
fildll
mov
fdivl
es
les
jae
decl
mov
adc
or
pop
movsl
icebp
jae
test
scas
dec
ret
test
clc
mov
sbb
aaa
or
sbb
mov
subb
push
fcmovb
pop
dec
insb
sbb
xchg
xor
notl
sub
and
mov
pop
cmp
outsb
mov
lea
cmc
mov
int
mov
out
mov
pop
cmp
bound
cmp
cmp
xchg
sub
lret
rcll
test
iret
adc
mov
rorl
movb
mov
cwtl
pop
push
sbbb
push
in
adc
push
push
repnz
in
lock
inc
es
stos
adc
gs
and
jmp
cmp
pop
jecxz
getsec
scas
lret
push
incb
gs
fisubrl
repz
jnp
sahf
jg
adc
loopne
lahf
mov
lods
push
enter
sbb
pusha
sbb
jmp
into
in
adcl
sub
test
jns
mov
mov
ja
push
ret
fistpl
pop
adc
movsb
or
pop
and
roll
dec
adc
repnz
repz
movsb
sub
mov
loope
in
lcall
sarb
je
fstps
xor
sbb
test
xor
push
les
fwait
push
stc
xlat
rcr
insb
mov
xchg
lock
and
in
sub
les
sbb
lock
pop
and
cli
and
loope
int3
xor
cmc
cltd
cmp
and
sti
lret
xchg
sahf
inc
cmp
lods
test
mov
push
imul
adc
lahf
loopew
dec
out
sbb
and
out
xlat
and
inc
dec
addr16
sti
out
cli
popl
mov
dec
pushf
or
arpl
and
sbb
int
sbb
push
ljmp
orl
fucom
shll
adc
mov
test
xor
sbb
lcall
out
insl
in
inc
gs
call
pop
fimull
xchg
pop
lods
arpl
outsb
test
ret
jns
out
popa
mov
cmp
lods
in
adc
jge
lds
adc
xor
fdivrs
jae
push
jg
repz
je
dec
xor
mov
or
dec
dec
mov
shll
cmc
add
mov
and
sub
mov
sti
mov
add
adc
sub
sarl
std
enter
daa
push
push
jge
jp
jmp
xor
xchg
push
cld
fcompl
sbb
lahf
cld
fdivrp
enter
rcll
mov
movntq
push
movsb
cmpsl
lock
pop
adc
push
add
mov
out
jp,pt
cmpsl
mov
loopne
sub
in
mov
shr
sub
or
cmp
xchg
adc
loopne
mov
ret
jp
jle
mov
aaa
add
cli
xchg
pop
clc
inc
lret
cltd
test
jbe
je
sub
jns
push
or
ljmp
outsb
sub
cld
jno
loopne
cli
pushf
inc
loop
repz
pushf
push
out
cmp
aam
outsl
addl
cmp
sbb
es
lds
mov
add
in
xor
rol
icebp
jmp
mov
fmulp
cmp
push
les
int
dec
xchg
mov
imul
push
mov
ret
jl
cmpsl
jmp
xchg
mov
cmp
fs
popf
jge
lcall
lcall
lcall
jae
adc
mov
test
add
xchg
stos
repnz
aaa
xchg
lret
sbb
sbb
dec
jg
dec
cs
in
add
out
in
ljmp
leave
cld
mov
in
dec
fdivl
xchg
dec
fcompl
ljmp
push
add
xorb
pusha
inc
and
mov
dec
add
lea
inc
push
pop
pop
sbb
jne
aam
xlat
rcr
mov
jne
std
roll
pop
pop
mov
inc
sbb
sahf
dec
dec
jns
jecxz
xchg
sbb
and
xor
in
lret
add
cs
jne
clc
jp
jg
mov
adc
xor
mov
adc
shrb
pop
scas
or
jno
sbb
jl
das
aaa
push
mov
push
lods
xor
jg
fwait
cmp
jmp
aas
mov
or
fsubl
repz
mov
sti
lret
dec
in
mov
mov
push
rcrl
test
in
test
xchg
les
insl
out
sub
push
sysenter
pop
lds
mov
mov
mov
out
and
jecxz
mov
lea
jmp
mov
ljmp
dec
fldt
or
rol
dec
rcrb
addl
fs
or
das
rclb
addr16
mov
vpminub
fnstcw
cmc
inc
sbb
rorl
in
adc
ss
cmp
ds
or
imul
js
lret
cmpsb
scas
pop
shll
pop
movsl
dec
xchg
xor
mov
cld
sub
rcrb
mov
test
push
pop
jo
cmp
int
popa
lret
or
in
jae
pop
pop
dec
jle
jne
ret
out
mov
popa
mov
pop
mov
movsl
shld
sub
shll
fsub
cmp
test
jb
and
inc
xchg
scas
jp
imul
pop
fucom
jp
mov
cmp
int
push
sub
gs
or
test
cmp
xor
cltd
xor
pop
iret
pop
test
sbb
pop
pop
add
mov
dec
push
jecxz
pop
insb
icebp
sarb
inc
rorb
ja
clc
mov
jmp
sete
jb
sub
outsb
xchg
ret
mov
ret
arpl
jne
xchg
cmp
push
cltd
mov
rorb
mov
je
dec
addr16
mov
dec
inc
insl
inc
imul
cmpl
push
hlt
call
ljmp
add
mov
lods
test
pop
xchg
sub
sahf
clc
sbb
xchg
push
out
scas
push
pop
dec
into
sbb
in
dec
clc
sti
pop
adc
push
xorb
jmp
aam
mov
in
js
mov
mov
jnp
leave
testb
or
call
movups
mov
test
jmp
int3
roll
lret
test
test
outsl
loope
inc
aam
dec
mov
mov
jp
mov
push
cs
xor
inc
xchg
adc
je
aam
hlt
push
mov
push
jg
and
inc
dec
in
es
xchg
test
cmp
inc
repz
inc
and
jmp
adc
pop
div
push
push
aam
sti
scas
sbb
repnz
push
lods
sbb
rcl
add
mov
loope
cld
adc
cmp
pushf
shrl
pop
repz
lea
addl
fsubr
xchg
or
push
cmc
jge
xchg
and
scas
and
and
aas
xchg
fdivrl
hlt
das
jno
out
sbb
loop
mov
mov
scas
inc
xchg
mov
aad
movsl
ja
add
push
aad
stos
adc
push
sarl
sbb
xlat
and
sbb
ds
xor
lcall
imul
mov
scas
xor
inc
pop
repnz
leave
adc
add
xchg
je
xchg
ret
pop
mov
nop
sub
sbb
push
leave
push
pop
ss
push
jno
pop
scas
xchg
adc
ret
movb
push
pusha
sbb
inc
addr16
push
lcall
mov
mov
sbb
cmp
cli
stc
jg
or
test
jecxz
add
movsl
sbb
push
imul
xlat
pushf
jp
xchg
ja
push
call
push
cmpsl
pop
aas
adc
fwait
pop
jae
sbb
outsb
sbb
icebp
add
xchg
outsb
push
out
jo
push
stos
push
pop
out
xchg
popf
push
cltd
mov
and
mov
bound
testb
ja
cmp
or
inc
sahf
pop
push
clc
push
pop
mov
and
fcomps
or
aam
int3
sub
push
xchg
dec
mov
out
fmull
pop
jo
mov
in
lret
dec
sbb
inc
mov
push
movsb
mov
cmpsb
lock
mov
mov
shll
test
cmpl
lea
dec
enter
cmp
sbb
jb
lods
sub
adc
ret
adc
jne
flds
roll
icebp
ss
cmpsb
outsb
jbe
mov
mov
inc
or
les
jne
in
pop
jb
dec
jno
jo
dec
xchg
xchg
jmp
fsubl
lock
push
pushl
pop
mov
jecxz
sub
scas
xchg
and
mov
neg
push
shrl
pop
sarl
dec
lock
lret
arpl
pop
enter
jecxz
dec
or
popf
rcl
les
aaa
sub
cmp
in
je
jns
rol
mov
xchg
ss
xchg
aam
test
int3
int3
push
test
enter
xorl
cwtl
aaa
into
sti
loop
mov
sbb
sarl
sub
outsl
lods
push
adc
mov
push
sub
enter
adc
mov
lea
outsb
loop
sbb
dec
fwait
jb
inc
stos
out
mov
stos
jl
dec
jnp
sbb
sar
inc
push
movsl
in
repz
cmpsl
pushf
ja,pt
dec
test
dec
bound
enter
inc
pop
je
and
add
stos
orl
xchg
cld
pop
pushf
jno
fisttps
pop
inc
es
leave
loop
add
fists
loop
or
inc
or
xchg
dec
stc
inc
movsl
adcb
faddl
sbb
cs
sub
push
jbe
inc
inc
mov
sub
std
inc
fnstenv
enter
stos
xor
mov
push
and
jg
dec
jecxz
gs
push
mov
add
jmp
stos
pop
popf
push
decb
in
push
adc
addr16
in
in
jle
lds
push
fs
push
ret
inc
xchg
jnp
xor
outsb
lret
ss
mov
and
jb
stos
insb
jns
bound
sbb
jmp
ss
stos
flds
lods
nop
cmp
mov
std
hlt
add
ss
sub
stos
insl
notb
mov
xchg
mov
ficoml
dec
lds
pop
mov
xor
lods
mov
dec
pop
lret
das
cld
pop
mov
gs
stos
cld
adc
es
fsubrs
mov
adc
divl
pop
stos
outsb
jnp
mov
mov
daa
jp
jnp
xchg
adc
pop
xchg
add
add
cmp
mov
and
and
inc
into
mov
aas
addl
mov
stos
pop
or
lcall
add
repnz
stc
rclb
stos
loope
in
mov
ja
pop
arpl
jne
in
mov
pushf
imul
fisubl
push
lret
imul
mov
adc
jne
inc
mov
or
fists
cmp
arpl
imulb
xor
or
mov
dec
or
dec
aam
stos
icebp
adc
dec
inc
ficoml
popa
add
in
into
dec
scas
xchg
pop
mov
mov
sbb
mov
jo
mov
mov
pop
lret
or
fnstcw
mov
addb
mov
fisubs
dec
mov
ret
mov
mov
and
mov
popw
mov
mov
out
mov
sti
adc
jae
pop
test
in
mov
push
lahf
dec
scas
test
pop
sbbl
and
imull
mov
lcall
out
into
loop
pop
rolb
sub
movsb
adc
xchg
adc
jo
cmp
cwtl
push
mov
inc
mov
lahf
dec
ds
mov
addl
push
xlat
lods
fwait
pop
add
adc
and
sub
test
xchg
loopne
xchg
push
test
add
cltd
sbb
push
jmp
pop
fdivs
loope
push
jns
mov
js
add
daa
stos
mov
xor
inc
hlt
add
ljmp
xchg
adc
testb
arpl
push
fcoms
ljmp
cmpsl
add
dec
hlt
jmp
scas
push
adc
or
add
pop
daa
stos
pusha
scas
call
xchg
jb
repz
mov
push
push
jbe
mov
ror
insb
fs
jg
popf
rcll
mov
clc
mov
add
dec
pop
movsl
push
xchg
stos
inc
popf
or
mov
mov
sbb
test
iret
add
outsb
push
inc
pop
out
xorb
inc
mov
adc
sbb
jo
push
cs
push
jno
in
pop
aam
jns
test
mov
xlat
adc
scas
pop
stos
inc
mov
push
imul
xchg
jge
or
orl
pusha
lahf
pushf
rorl
cmp
pop
pop
adc
mulb
insl
imull
fidivrs
mov
fdivp
push
or
lods
push
aam
lods
repnz
ret
mov
leave
rolb
sub
sub
and
jmp
add
movsl
ja
shl
dec
cs
rorb
adc
movsl
loopne
inc
je
mov
inc
ja
popf
in
lahf
mov
push
sub
out
sub
or
out
popa
mov
in
pop
loope
add
nop
add
jg
xchg
or
sub
and
mov
mov
pop
dec
leave
enter
test
pop
std
sbb
in
jns
ja
cmp
push
push
call
dec
jne
outsb
ds
mov
sub
adc
mov
pop
mov
mov
stos
enter
enter
inc
mov
enter
arpl
push
xchg
inc
pop
sbb
dec
stos
mov
xchg
insl
jmp
jno
mov
test
inc
sar
adc
fcmovbe
gs
mov
mov
inc
aam
adc
jne
xchg
pop
add
mov
jmp
aam
sub
push
push
test
leave
pop
es
cltd
cmpsb
add
mov
adc
jae
mov
xchg
imul
push
movsl
leave
out
push
xchg
cltd
and
xor
std
or
sub
add
and
hlt
andl
jno
cli
or
xor
mov
adc
xor
fwait
mov
xchg
sub
mov
push
cmp
xchg
push
loope
jle
clc
add
rorb
xchg
mov
cmp
xchg
xor
mov
sub
cli
dec
dec
movsl
shrb
push
into
fcmove
pusha
inc
xor
adc
push
outsb
sbb
int3
jae
adc
test
cmp
inc
popa
mov
int3
daa
aas
sub
lods
andb
sti
xchg
push
jl
das
dec
push
out
inc
fs
xor
outsl
fwait
jmp
loope
adc
cmp
cmc
push
loope
push
jb
test
scas
sub
pop
shrb
rclb
add
xor
fdivl
xchg
gs
pop
out
shl
sahf
rcrl
ret
jecxz
sub
dec
xchg
and
xlat
and
xor
xor
sahf
sti
cld
mov
ret
insl
fs
push
mov
mov
vmread
ret
popf
jg
ss
adc
movsl
pop
pop
sub
add
mov
and
xchg
jmp
mov
cld
xor
repz
push
fnstenv
div
pop
ljmp
sbb
leave
imul
or
sub
lret
add
ja
adc
ja
call
xchg
pop
jmp
in
inc
mov
adcl
or
jmp
mov
or
les
jge
ret
out
les
sbb
and
popa
xlat
das
cli
icebp
loop
push
adc
xor
das
and
ss
mov
rol
hlt
cmp
pop
adc
ja
cmpsl
mov
stos
jae
mov
mov
shrb
lea
out
movsl
int3
das
inc
or
dec
daa
not
daa
imul
jae
fdivrs
pop
add
jno
or
pop
ljmp
loopne
xor
or
adc
mov
inc
pop
add
rclb
inc
add
decb
cli
lahf
mov
das
inc
mov
dec
repz
faddp
cmpsb
fisubrl
pop
aaa
popa
sbbb
cmp
push
jg
movsl
adc
out
dec
ja
ss
imul
mov
add
lcall
jnp
cmpsb
imulb
and
push
sbb
sahf
and
add
dec
pop
inc
xorb
int3
pop
or
sbb
test
fsubr
insb
and
in
mov
sti
xor
addr16
fadd
and
movsl
ret
jl
pop
imul
mov
cltd
pop
lret
lahf
or
adc
clc
and
inc
ss
fldl
in
sbb
adc
push
adc
add
stc
dec
popa
jl
adc
js
repnz
xchg
pop
add
scas
sub
add
push
mov
fdivp
bound
add
push
fimuls
mov
mov
adc
insl
movsl
adc
cmovne
fsub
out
sbb
mov
and
mov
jns
fwait
or
gs
in
jns
push
push
lahf
or
outsl
sub
sti
arpl
dec
xchg
daa
mov
jno
or
inc
in
add
movsl
stos
arpl
mov
and
or
inc
mov
pushf
les
add
xor
cmp
mov
mov
cwtl
cmp
mov
enter
loop
cmp
sahf
mov
sub
push
rcll
aas
adc
pop
push
jno
dec
repnz
add
xor
sbb
sbb
out
mov
fwait
cwtl
adc
in
cmp
mov
cmpsl
pop
jnp
adc
cmp
add
cmc
enter
dec
mov
js
mull
bound
frstor
xchg
inc
shl
pop
lahf
and
jecxz
fcoms
jmp
push
pushf
xchg
jb
mov
bound
push
lods
popa
retw
mov
mov
fwait
movsb
or
mov
inc
cmp
pop
arpl
or
mov
lds
iret
pop
jg
inc
into
sub
sar
mov
push
out
and
popa
or
mov
int3
mov
cmp
loop
in
and
addl
add
adc
dec
sub
int
or
dec
pop
add
test
and
sub
filds
lods
pop
bnd
sbb
dec
sbb
aas
sahf
push
rcrb
jnp
sbb
cwtl
pop
fiadds
sbb
pop
daa
daa
out
lahf
adc
mov
dec
jle
mov
mov
and
xchg
and
iret
xor
data16
pop
add
mov
push
imul
je
xchg
sahf
decb
ret
in
int
push
push
ret
insb
sbb
rol
ret
mov
pop
in
loop
cmp
std
dec
sbb
repnz
shrl
movsb
and
dec
data16
sub
sub
or
icebp
lods
repnz
push
xchg
rorb
xchg
shufps
jb
jmp
das
pop
cli
mov
xchg
mov
adc
xor
sbb
sbb
sbb
cmp
mov
pop
rorl
mov
pop
adc
add
aam
jge
ljmp
in
dec
jbe
scas
pop
rcrl
jle
xchg
xchg
dec
add
cs
cmp
leave
inc
hlt
je
adc
and
sub
sbb
mov
aad
adc
bound
mov
movsb
rolb
dec
rorl
push
pop
add
cwtl
repnz
mov
dec
daa
adc
stos
arpl
neg
pop
sbb
icebp
jecxz
mov
and
and
aas
lods
or
jge
bound
out
rorb
call
adc
adc
test
fwait
stos
repz
mov
std
fistpll
jge
out
jmp
push
inc
inc
cmc
xchg
popa
mov
stos
jnp
jbe
out
es
cli
ret
mov
test
rclb
or
sbb
in
xor
neg
mov
or
adc
das
movsl
rolb
aad
lret
sub
pop
mov
ffree
jg,pt
jne
lods
aad
mov
push
sub
into
hlt
add
aam
jae
push
and
icebp
inc
hlt
ss
sub
adc
call
aas
imul
iret
push
dec
mov
lea
int3
stc
mov
bound
cmp
xor
dec
aam
pushf
roll
inc
into
ljmp
add
mov
out
pop
mov
jbe
mov
cmp
lock
xchg
ds
loop
jge
pushf
stos
inc
xchg
jmp
divl
movsl
jbe
mov
jg
call
cmp
pop
dec
xchg
mov
fcomi
sahf
dec
rcl
mov
sub
cmp
lea
popf
mov
sti
js
inc
adc
mov
push
sti
out
add
iret
adc
popa
scas
sahf
xor
rcr
sub
xrelease
rcll
sub
push
out
fcmovu
aaa
sub
ret
scas
dec
bnd
sub
data16
mov
loope
and
xchg
leave
inc
imul
popf
ss
push
sti
cli
pop
push
shlb
or
int3
fdivl
jbe
popa
lds
outsl
mov
lret
push
pop
lods
std
imul
lods
xchg
cmp
mov
andb
std
fwait
pusha
lahf
bound
dec
sub
clc
push
aaa
or
ljmp
test
cmc
aad
mov
jo
lret
pop
fstl
or
sahf
and
fs
les
xchg
dec
lret
push
decb
loopne
and
inc
push
and
adcb
jns
shll
xchg
inc
test
punpckldq
outsl
pop
int
repnz
cmp
push
shll
and
cmp
pop
lea
ja
pop
sub
cmp
pop
in
cmp
shlb
mov
mov
xor
dec
jmp
in
sbb
mov
int
xor
jecxz
mov
sub
mov
lods
leave
sbb
push
or
repnz
mov
adc
mov
cli
mov
test
ret
xchg
stos
gs
sarb
cli
imul
mov
pop
lahf
movsl
push
push
jo
mov
das
outsb
pop
pop
xchg
sahf
mov
sub
lahf
out
pushf
ljmp
xchg
movb
dec
jmp
push
mov
mov
aam
push
sti
pushf
sti
ljmp
aaa
mov
popf
xchg
pop
xor
rcrl
sub
mov
orb
push
arpl
inc
mov
stc
loope
mov
test
pusha
mov
push
dec
call
cmpb
fstps
jo
inc
mov
mov
ss
mov
and
mov
inc
sarl
jmp
fisubrl
jmp
add
inc
mov
aaa
jle
dec
test
cmc
mov
fwait
adc
in
xchg
sub
dec
xchg
sub
push
repz
mov
sub
jle
aam
mov
imul
adc
out
cmp
shll
repz
lock
test
push
cwtl
cld
cs
and
cmp
bound
inc
jo
cmovb
pop
ror
pop
push
sbb
addr16
push
rclb
cmp
push
and
icebp
mov
pop
xor
xchg
push
sahf
and
ljmp
out
add
jg
pop
mov
scas
jns
or
dec
cld
and
sti
test
pause
jl
call
pop
add
pop
lds
in
sarl
cli
imul
outsb
lods
lock
jo
sbb
test
jmp
bound
sub
ror
ss
pop
jns
pop
popl
dec
and
inc
push
std
cmp
mov
mov
sbb
sarl
pop
stos
scas
lods
jnp
mov
xchg
add
mov
mov
xchg
dec
fwait
mov
pop
inc
sarb
cmc
popf
rcrb
insb
out
cmc
sub
popf
loope
push
add
data16
xchg
add
xchg
in
inc
sub
push
sbb
stos
imul
mov
push
std
mov
idivb
movsb
cmp
inc
popf
sub
sub
push
jae
outsl
xor
jns
mov
gs
scas
cmp
mov
shll
sahf
jp
add
push
and
xchg
in
mov
lods
push
push
imul
xchg
loop
mov
or
adc
cmpsl
inc
int3
fadds
ljmp
or
push
push
int3
or
cltd
sbb
es
cltd
or
arpl
sub
xchg
pop
adc
mov
ret
push
aad
xchg
lahf
test
outsl
mov
cmp
xchg
pop
jno
ret
fstpl
mov
lea
daa
lods
or
cs
add
cmpsl
lret
rorl
dec
in
jmpw
imul
xchg
pop
push
dec
movsb
pop
icebp
icebp
pusha
inc
inc
in
test
dec
jecxz
or
mov
xor
adc
lods
ljmp
push
mov
test
pop
ds
lret
jbe,pn
aad
dec
ret
adc
mov
insb
and
je
negl
jne
cld
jns
repz
jl
dec
and
push
push
icebp
xchg
das
jne
push
jg
aaa
or
aaa
hlt
lret
adc
nop
cmpsb
inc
pop
cmpb
mov
adc
xor
mov
or
into
and
and
mov
mov
aaa
cmp
fldt
rorb
sbb
xchg
fucomp
mov
xchg
fstpl
and
sub
mov
inc
dec
push
shrl
sbb
ljmp
das
and
ret
insb
nop
push
stc
fucomp
movd
mov
mov
fimuls
mov
xchg
popf
in
mov
in
popa
mov
addr16
mov
lock
mov
ds
mov
push
mov
js
xor
popf
inc
push
notl
outsb
cmp
shlb
dec
mov
rorb
push
push
or
repnz
ret
mov
sti
and
fistpll
inc
fadds
gs
les
stos
push
cs
scas
lret
xor
mov
dec
cmp
mov
push
fiaddl
fists
dec
lret
cwtl
cmp
out
adc
xor
dec
xor
jle
pop
shlb
sub
xor
lods
aaa
iret
vmovaps
adc
sbb
jnp
aad
adc
xor
mov
cmp
push
mov
add
clc
aaa
jle
loope
jbe
dec
pop
dec
xor
lret
jo
lock
aam
shl
sub
fcmovnu
sbb
or
xor
out
dec
scas
ret
push
mov
mov
inc
lock
push
insb
or
scas
cld
in
test
out
add
push
jno
push
in
fisubrl
fists
popa
push
pop
cmp
fs
mov
add
push
data16
mov
icebp
add
jne
les
mov
push
xor
rclb
xchg
js
lods
test
pop
lock
adc
cmp
leave
ljmp
bound
jl
dec
and
lods
daa
jne
insb
shl
jmp
lret
cmp
and
iret
and
push
in
aad
xor
test
inc
js
push
and
daa
movsb
push
xchg
pop
mov
push
icebp
add
adc
mov
jmp
xlat
test
cwtl
pop
pop
lock
movsb
ljmp
add
mov
dec
aaa
rcl
rcl
fisubrl
dec
sub
mov
je
add
out
or
pop
into
xchg
adc
mov
ficoml
xor
shlb
sti
lret
jb
mov
xchg
dec
fidivl
inc
aas
sub
out
movsl
ret
rorl
arpl
and
push
insb
js
pop
out
clc
es
inc
mov
dec
mov
inc
ja
or
mov
jb
rorb
shll
cmpsb
stc
mov
dec
ja
lcall
lret
jnp
jecxz
stc
mov
mov
adc
jecxz
lret
je
arpl
and
xchg
jb
xchg
leave
int
xchg
push
pop
les
jbe
xchg
lock
and
das
jo
push
xor
mov
cld
push
mov
or
xchg
sar
movsl
lea
jns
aaa
fs
int
movsb
aaa
insb
nop
inc
mov
and
push
imul
ja
sbb
mov
add
xchg
or
add
jnp
pop
out
mov
adc
add
pop
and
jp
or
push
push
icebp
adc
aas
lods
aad
push
lods
loopne
addr16
mov
mov
adc
mov
int
test
imul
pop
lock
and
cmp
in
and
lret
stc
mov
mov
xlat
in
sub
push
push
test
or
jl
inc
mov
push
rorb
sub
jmp
rcl
mov
and
in
xor
cmp
sub
scas
shll
ficoml
out
icebp
add
and
lahf
xchg
push
and
jns
movsl
dec
insb
lods
ds
cltd
es
lods
push
xchg
loope
pop
je
mov
jns
pushf
xbegin
cmp
mov
enter
adc
test
data16
sarl
mov
sbb
ljmp
jo
loopne
and
cmpl
adc
das
xchg
clc
pop
insl
sbb
mov
in
call
ss
pop
xchg
loopne
call
adc
add
push
insl
fiaddl
push
cmpsb
in
pop
inc
mov
mov
jl
imul
loope
repz
jbe
ds
pop
mov
call
fdivs
add
flds
mov
dec
ss
jmp
cmc
xor
cmp
pop
mov
sbb
movsl
into
xlat
mov
cld
xor
out
jne
mov
repnz
icebp
mov
aaa
cmp
jg
lret
aaa
les
cmp
pop
outsb
xor
bound
xor
repnz
inc
scas
imul
in
fisubl
das
lahf
call
jmp
push
jg
mov
or
inc
stc
push
fs
mov
call
mov
and
aam
mov
test
mov
lret
xchg
test
popa
jo
pusha
shrl
add
sbbl
shlb
sbb
xor
stos
enter
shll
add
mov
xor
dec
ficomps
cmp
cld
fldt
mov
addr16
cld
pop
into
push
push
mov
mov
imul
inc
xor
stc
test
in
in
fsub
xor
enter
cmovns
jp
std
inc
mov
ljmp
rorl
pop
sub
mov
mov
mov
orb
popa
repz
jecxz
loopne
cmc
dec
xchg
cltd
inc
fbld
xor
or
cmpsl
push
setle
pop
mov
or
lret
or
or
icebp
inc
jge
adc
mov
lds
cmp
into
mov
cwtl
sub
jp
add
adc
out
mov
loope
sbb
mov
jb
js
inc
aaa
push
pop
adc
push
pop
xor
xor
test
adc
adc
pop
mov
jmp
test
pop
aam
or
mov
out
mov
sar
mov
or
push
dec
mov
cmp
mov
dec
fcomip
scas
daa
negb
xlat
je
dec
mov
mov
mov
inc
mov
and
rcrl
nop
out
bound
loop
cmp
or
or
sarl
outsb
xchg
stc
mov
ja
push
lods
mov
adc
filds
or
dec
and
cs
shlb
xor
and
xor
das
daa
popf
jmp
out
cmpsl
pop
mov
je
pusha
push
pop
jge
push
mov
cld
dec
lock
adc
push
or
xchg
sahf
and
xchg
movsb
or
out
inc
inc
aad
ljmp
rcr
cmpsl
sbb
dec
jbe
popa
adc
or
sti
dec
lea
jl
mov
dec
mov
add
out
xchg
shr
fisubl
loop
sub
xchg
std
push
shll
pushf
add
mov
cmc
push
aas
insb
jno
pop
sbb
mov
aam
adc
test
sbb
push
push
test
push
sbb
test
and
adc
cmpsl
dec
test
xor
aam
out
stc
lret
pushf
push
mov
add
fsubrs
xor
test
inc
pop
push
call
xor
dec
inc
test
loopne
xor
faddl
mull
or
sbb
mov
jl
fcmovbe
pusha
fcomps
test
mov
mov
or
mov
ret
inc
xchg
sbb
pop
inc
add
stos
repz
mov
fldl
scas
lret
stos
sahf
aam
add
in
test
lock
xor
fisttps
outsb
sahf
aaa
cmp
pcmpgtw
xchg
add
sub
xchg
scas
mov
adc
jg
das
dec
icebp
jbe
inc
pop
dec
add
jns
outsl
sub
cmp
jmp
or
mov
hlt
cmp
stos
jno
fwait
cmpsl
imul
xor
push
imul
and
aas
js
cmp
sti
jnp
xor
pushl
mov
fs
icebp
sub
add
stos
mov
enter
xchg
dec
insw
in
pop
popf
out
mov
mov
dec
push
jae
fsubs
ret
mov
sbb
adc
movsl
leave
in
cmp
mov
popa
xor
jnp
push
inc
inc
ja
sub
mov
pop
sbb
sar
push
jp
dec
xchg
int
mov
jl
push
sub
sahf
or
rolb
dec
cmp
jo
inc
scas
sub
nop
mov
popl
mov
rolb
sbb
jge
inc
test
mov
add
cmp
push
scas
xor
mov
add
call
xchg
sub
push
outsl
clc
rol
mov
jbe
jg
dec
xor
aad
dec
repz
movsl
cmpsb
pop
js
loopne
sbb
pop
xor
jo
es
push
pop
cs
aaa
repnz
adcl
jno
ds
cmp
in
dec
inc
xchg
pop
into
inc
hlt
add
adc
jne
mov
call
iret
push
stc
outsb
loopne,pt
xor
dec
stos
insl
les
sti
call
push
ljmp
jb
and
cld
add
push
pop
inc
jg
inc
fs
inc
out
and
push
dec
lcall
cmpl
daa
pop
adc
fsts
mov
jb
out
add
push
mov
test
int
push
dec
mov
movsl
shll
rcrb
lods
add
stc
and
mov
stos
imul
pop
cmp
jo
mov
lret
test
cmp
pop
pop
mov
stos
and
dec
lahf
rolb
mov
fs
sub
jnp
fisttpl
movsb
jne
aas
minps
lret
insl
mov
and
outsl
or
fiadds
pushf
dec
jno
shlb
sub
inc
add
jg
les
mov
in
test
pop
sarb
pushf
push
adc
and
sbb
push
mov
testl
mov
pusha
mov
jge
in
popf
mov
cmpsb
jge
mov
outsl
jl
mov
andl
push
daa
pusha
lcall
mov
out
cmc
fwait
lds
mov
fwait
mov
inc
scas
hlt
add
jl
mov
pusha
push
pop
xorl
shrb
push
or
mov
pop
in
push
inc
inc
mov
out
sbb
test
mov
lock
xorl
mov
repnz
jo
mov
cmp
loopne
fprem
pop
decb
mov
add
cmpl
push
cmp
rol
sub
iret
xchg
mov
mov
rorl
std
inc
loop
sub
out
cs
cs
mov
cmc
push
and
and
lods
fsubrl
mov
negl
jne
xor
test
xchg
call
addr16
and
das
cwtl
dec
bound
lahf
push
cmc
pop
add
in
shl
adc
pusha
ret
mov
adc
mov
nop
cmpsl
mov
sbb
int
aad
mov
pop
dec
sbb
sub
adc
insb
cmpsb
cld
loope
mov
fmuls
jno
or
ljmp
mov
fldenv
fidivrs
push
sub
push
pusha
test
into
fwait
dec
sarl
mov
lcall
jg
push
ja
aad
xchg
pop
add
pusha
aam
cmc
inc
loop
je
and
mov
mov
add
cmc
insb
inc
mov
xor
mov
sahf
orl
cmp
nop
mov
sbb
xchg
jo
or
imul
incb
fst
jmp
jne
adc
jbe
and
jae
cli
push
icebp
outsb
jbe
dec
pop
sub
mov
iret
sbb
fdivl
pop
mov
sub
je
add
pop
mov
mov
fwait
repz
or
cmp
imul
fimuls
xchg
adc
in
subl
push
pop
and
enter
or
imul
add
sbb
and
fst
clc
enter
roll
push
sbb
jecxz
pop
dec
and
mull
cmp
mov
ficompl
dec
stc
imull
shrl
lahf
mov
and
into
and
mov
orl
nop
aas
cmc
pop
mov
movsb
dec
sub
mov
cmp
jno
jns
out
jge
mov
icebp
test
jns
lahf
mov
xchg
cwtl
test
rolb
ss
sbb
mov
push
lock
xor
das
ret
mov
clc
jnp
in
out
pop
and
test
leave
add
in
xchg
jl
int
icebp
loopne
xlat
shll
stos
jle
jmp
popa
lds
outsl
lods
repnz
or
jmp
mov
stos
shll
cltd
mov
dec
icebp
into
xchg
pop
jno
and
xor
scas
cwtl
ret
sti
lahf
in
loop
aad
or
gs
mov
jg
xor
add
ja
add
arpl
popf
jp
ret
cld
dec
xor
rcl
adc
in
mov
mov
or
jno
insl
inc
outsl
fimull
int3
addl
mov
jge
into
loope
xchg
push
xchg
mov
cmp
repnz
mov
test
cwtl
xchg
sarb
xchg
pop
jecxz
mov
xor
iret
xchg
mov
cmp
mov
jp
mov
jg
cmp
mov
sub
sub
out
shlb
es
les
enter
addl
pop
mov
inc
test
jno
jns
daa
loop
mov
mov
mov
add
les
stos
mov
mov
clc
daa
mov
and
shll
xlat
int3
lcall
push
sub
mov
outsb
lret
addr16
and
ret
ficompl
and
xor
jge
adc
jae
sub
leave
ljmp
lods
adc
imul
cmpsl
sarb
jne
xchg
scas
add
imul
clc
filds
mov
jnp
ffreep
addb
fisubs
jmp
xor
jge
rcr
jae
fisubrl
and
inc
or
jo
sub
pusha
xchg
pop
rcrb
stc
dec
jae
test
jo
xor
xchg
imul
mov
fwait
mov
sub
roll
pop
fisubl
insl
in
nop
pop
or
mov
push
sbb
mov
xchg
jo
and
inc
lods
inc
pop
cmp
roll
icebp
test
xchg
jmp
movsb
mov
sbb
mov
test
cltd
add
cwtl
sub
or
mov
mov
pop
push
mov
cmp
jl
rorl
cwtl
test
sbb
mov
jae
and
lock
sub
jnp
inc
lret
sub
mov
rcrl
pop
add
inc
push
sbb
mov
fdivrs
jmp
sbb
mov
arpl
incb
inc
xor
pop
xor
xchg
loope
mov
add
mov
add
dec
push
mov
into
lret
add
loop
jne
xchg
add
sub
push
repz
sahf
xorb
out
and
sbb
ficompl
insb
jmp
jmp
or
inc
movsl
mov
loopne
mov
in
lahf
in
lods
pop
cmp
cld
popl
add
gs
xor
jmp
es
cmc
js
jns
and
cmp
mov
push
cli
dec
int3
loope
out
cmp
mov
jp
insl
fidivs
xchg
cmp
dec
push
inc
mov
xor
xor
push
fldenv
jno
loope
mov
mov
jnp
jecxz
mov
mov
addl
dec
imul
add
fisttps
ret
sbb
cwtl
or
in
jg
push
inc
mov
mov
sbb
cmp
stc
lds
imul
or
jmp
inc
outsl
dec
pop
adc
es
xor
cmpsb
mov
lcall
pop
mov
push
pop
gs
add
jnp
or
mov
add
adc
fdivrs
cmp
dec
popa
pop
add
aam
adc
sbb
lock
call
push
pushw
pushf
stc
mov
mov
out
pop
ja
daa
outsb
fdiv
lret
cli
rorl
ss
aam
and
imul
repnz
sub
mov
push
add
inc
push
pop
and
rorb
imul
xchg
push
cmc
push
call
jnp
movsl
popf
int3
jmp
adc
or
inc
fldl
xchg
xlat
add
popa
push
lahf
push
push
aam
cmpsb
push
and
add
les
adc
fs
aaa
or
leave
add
inc
jne
cmpsb
cltd
das
sbb
dec
mov
hlt
and
sub
icebp
xchg
inc
ss
divb
or
lret
mov
data16
sbb
enter
pop
arpl
in
outsl
mov
hlt
sbb
mov
jno
faddl
jae
pop
outsb
jge
je
movsb
xchg
mov
mov
dec
sbb
test
cmpsl
inc
fisubs
sbb
lods
shrb
jp
add
add
aaa
imul
fists
cltd
addr16
hlt
inc
sbb
out
into
xchg
outsl
jns
inc
inc
dec
fldl
pop
mov
jmp
inc
fwait
pop
pop
xor
insl
mov
sti
mov
mov
xlat
jg
out
cmpsl
adc
and
movsl
sub
sbb
add
xchg
pop
cmp
pop
cmpsb
imul
ficoml
and
nop
subb
mov
fcoml
or
pop
inc
cmc
mov
jns
loope
xor
mov
aas
mov
adc
jmp
jl
xchg
fildll
lret
mov
pushf
ficoml
pop
out
ret
add
dec
sub
xor
xchg
xor
js
ret
js
and
clc
dec
loopne
icebp
stc
ja
push
cmpb
fwait
push
fdivrs
in
mov
and
or
lds
int3
pop
fdivp
dec
jae
xlat
sahf
out
jns
xor
lret
add
loopne
stos
and
pop
cmp
scas
in
out
imul
icebp
and
ret
popf
lds
cmc
xorl
test
and
jnp
fbld
repz
sti
inc
cmpsb
sbb
imul
xchg
mov
adc
sahf
frstor
rorl
lea
stc
lods
xchg
cmp
lods
pop
mov
ja
call
mov
push
shlb
aaa
mov
mov
nop
or
inc
orl
rol
mov
xchg
jle
popf
add
add
std
xor
adc
pop
pop
inc
movsb
shlb
pop
jge
xchg
pop
lret
sahf
xchg
pusha
and
sahf
loopne
or
outsl
xchg
inc
mov
mov
inc
pop
mov
add
add
xchg
lret
out
pusha
imul
xor
scas
outsb
dec
scas
cwtl
mov
les
xchg
loope
andb
lods
test
jg
fsubrl
inc
daa
imul
loopne
xor
shl
sarl
lods
lret
jo
std
insl
orl
into
out
xlat
test
mov
in
mov
jl
sbb
test
xchg
pop
test
mov
and
pusha
cwtl
stc
test
push
lods
sbb
pop
stos
pop
inc
push
xor
popf
arpl
sbb
setle
dec
sbb
xchg
add
jbe
sahf
sbbb
inc
lea
ljmp
fnstcw
xor
sbb
hlt
mov
jb
lea
fwait
cmpl
push
or
loope
lods
pop
popf
fdivl
mov
dec
dec
pop
xor
add
jecxz
jle
aam
xchg
ss
jge
leave
push
shrb
mov
mov
mov
dec
mov
xchg
dec
enter
lods
or
lds
lret
fmuls
and
jmp
push
sbb
pop
and
xchg
push
lcall
and
sub
movsl
mov
lahf
sahf
adc
jg
or
add
repz
and
sahf
mov
in
jle
push
cmp
icebp
push
mov
adc
xchg
sbb
inc
jne
jecxz
test
mov
scas
loop
imul
or
imul
sahf
cltd
in
les
in
popf
add
dec
movsl
dec
inc
sti
sbb
push
adc
add
pop
mov
dec
shlb
loop
jle
jbe
adc
rcrl
pop
fistpl
loopne
mov
push
and
push
inc
cmp
filds
mov
jnp
xor
dec
adc
adc
jae
xchg
mov
enter
xchg
jl
and
cltd
iret
notb
mov
push
push
fidivrl
inc
ffreep
clc
lock
jmp
mov
mov
mov
xchg
adc
call
shll
test
inc
popa
ds
push
sub
mov
cmpsl
xor
dec
clc
inc
cmp
jo
jnp
or
out
std
or
jbe
test
mov
or
data16
jmp
aad
out
insb
aad
jns
imul
outsb
fstpt
pop
into
rclb
hlt
fisubrs
push
xchg
stc
push
sbb
mov
aas
push
dec
lods
mov
pop
xchg
cmp
popf
daa
jno
mov
push
dec
inc
nop
fistps
sub
cld
add
xor
sbb
fdivs
jecxz
push
lahf
lcall
icebp
mov
mov
sbb
ret
sub
cwtl
push
adc
cld
into
mov
ss
popa
cltd
sub
loopne
scas
dec
xchg
int3
jo
and
pop
push
test
pop
and
push
cmpsl
loop
lods
testl
pop
cli
subb
push
lods
pop
sbb
lcall
xor
pop
push
iret
xchg
adcl
jge
dec
insl
ret
test
clc
lods
leave
mov
cmp
lock
push
sbb
dec
mov
fisubrl
loope
imul
push
movsl
mov
stos
cmc
or
fwait
lret
xchg
out
mov
fsubrl
add
inc
fimull
ljmp
pop
pop
roll
jae
outsb
dec
cli
inc
dec
cs
sbb
and
mov
jmp
daa
scas
cmp
mov
int
lcall
jb
mov
and
loope
pop
cmp
pop
sub
mov
shll
ffree
sub
fldl
cmp
or
inc
and
and
xor
aam
jl
fidivrs
inc
jecxz
pop
adcb
and
test
rcrl
cld
call
xchg
cmc
and
into
add
sbb
addr16
lahf
sbb
ljmp
in
cli
cmp
loope
aas
das
or
mov
and
aad
shll
fs
xchg
mov
std
outsl
movsl
or
dec
jl
or
dec
pusha
bound
add
dec
rorl
nop
jle
andl
or
ficoms
jno
push
gs
pop
mov
pop
pop
inc
fcmovnu
xor
stos
adc
mov
sub
mov
cltd
add
and
sbb
popa
aad
jns
sub
enter
jmp
ret
popa
movsl
mov
mov
stc
jb
icebp
xchg
mov
daa
clc
cwtl
sbb
mov
cltd
ficomps
cs
jle
pop
sub
ja
mov
fwait
pop
ljmp
lcall
xchg
mov
pop
or
lcall
push
jg
jle
adc
iret
andl
sbb
sbb
adc
jb
ret
and
lock
fcomip
into
push
icebp
into
sbb
dec
cmpsb
outsb
mov
inc
push
rorl
popa
mov
adc
sbb
mov
cmp
vmovd
jne
dec
sub
xchg
sarb
cmp
shrl
jecxz,pn
sub
outsb
jp
adc
arpl
dec
pop
out
out
or
mov
frstor
lea
leave
jnp
jo
dec
sub
push
in
mov
insb
mov
push
add
cmpl
stos
inc
aaa
xlat
cli
int3
pop
mov
sbb
mov
mov
xchg
iret
xor
mov
dec
shll
xchg
arpl
mov
add
dec
push
push
into
clc
insb
or
lahf
adc
inc
lcall
loopne
lods
dec
out
nop
lock
sti
sub
adc
add
popa
dec
leave
adc
mov
int3
xlat
cltd
sbb
adc
mov
or
mov
sarb
mov
xchg
js
pop
test
mov
enter
pop
in
movsl
jmp
inc
add
ljmp
jb
and
jno
mov
orl
push
fptan
cmp
test
ret
out
jbe
insl
mov
cli
xchg
es
je
mov
cmp
push
and
insl
pop
arpl
lds
sbb
xchg
in
jp
dec
push
or
nop
xlat
fwait
psubsb
push
outsb
xchg
lea
out
mov
mov
cmp
or
cmp
inc
push
dec
cmpsb
jmp
xchg
jecxz
jp
imul
je
aad
pop
sbb
in
sbb
scas
mov
test
xor
lods
repz
pop
sarb
lret
sbb
or
jmp
pop
ljmp
mov
outsl
jne
pop
mov
lret
test
adc
sub
add
sahf
push
das
jno
lods
mov
test
test
nop
pop
xchg
test
mov
int
adc
cmp
std
mov
add
cmp
jmp
roll
imul
or
dec
mov
insl
test
sub
jmp
scas
mov
pop
adc
and
cmp
xor
mov
inc
sbb
call
adc
mov
loopne
ljmp
or
xorl
loop
mov
mov
push
xor
adc
in
push
out
test
adc
pop
fcompl
bound
and
pop
insl
inc
add
or
pop
push
cmpsb
sub
push
scas
pop
push
mov
clc
rcrl
jbe
mov
push
add
or
jno
dec
and
sbb
loopne
sub
sbbl
xchg
hlt
cld
fcoms
mov
push
jno
sarl
aaa
inc
clc
cmp
outsb
pop
sar
cmp
inc
mov
bound
mov
xchg
pop
fisubrl
pop
mov
push
mov
test
pop
imul
inc
jae
or
pushf
hlt
lods
pop
movsb
fldenv
jo
arpl
pop
cs
psrad
mov
insb
scas
aad
out
pop
lahf
sbb
pop
sub
sbbl
mov
xchg
jmp
bound
fmuls
cmpsl
pop
shrl
add
shll
sti
pop
jecxz
aam
xor
divl
sbb
repz
dec
in
mov
pop
in
addr16
add
xor
pop
add
mov
gs
mov
outsb
into
leave
add
incb
inc
inc
pop
pop
mov
jmp
xchg
mov
dec
int
sbb
dec
stos
addr16
bound
lods
ds
adc
mov
popf
mov
jo
dec
xchg
mov
cmp
adc
aad
mov
cmpb
adc
std
sti
sbbb
call
js
push
in
cmp
ret
sbb
repz
iret
sbb
mov
mov
fldl
add
pcmpeqd
dec
xchg
sarl
or
es
out
int3
adc
mov
in
dec
cmp
repz
cli
pop
adc
add
inc
mov
cmc
sub
and
mov
testb
fisubl
mov
push
inc
cmpl
jno
aad
xlat
mov
in
inc
insl
xchg
and
jbe
syscall
dec
incl
lret
ds
sub
enter
je
loope
in
lods
repz
fadds
js
push
adc
and
mov
mov
mov
mov
cmp
data16
cmpl
sbb
outsb
add
loope
add
imul
sahf
xor
sub
cwtl
cwtl
and
lret
dec
out
jbe
add
add
cmpsb
jb
ret
adc
or
xor
cmp
pop
add
mov
call
lods
sub
mov
sbbb
inc
scas
pop
or
test
rcrb
es
roll
sub
sbbb
add
rcll
jo
adc
dec
addl
xchg
add
test
imul
mov
lock
push
mov
adcb
aaa
mov
aas
jbe
sar
in
sub
mov
xchg
in
jno
adc
cmovno
cmp
cmp
sbb
push
stos
insl
out
out
pusha
cmp
push
lret
sbb
push
xchg
inc
imul
lret
jl
mov
inc
in
les
addr16
mov
mov
push
pop
dec
jle
xchg
xchg
jp
imul
loopne
out
adc
and
clc
xlat
loop
sbb
gs
or
jp
sbb
test
push
rcll
xchg
mov
mov
mov
sub
lcall
xchg
sub
mov
outsl
adc
call
inc
call
lock
sub
lods
jo
enter
dec
in
dec
add
loopne
stos
inc
cli
jge
jl
cmpsb
dec
mov
loopne
xor
sbb
test
dec
inc
push
dec
inc
inc
and
jl
jmp
icebp
cmp
add
pop
das
jl
or
mov
aaa
rorl
xchg
sub
outsb
pushf
addl
sub
xlat
mov
dec
fldl2e
xor
mov
sbb
adc
and
jb
mov
test
push
ret
inc
or
cmpsb
pop
add
iret
ss
xor
xor
jae
movsl
mov
push
jge
rcrb
fs
pop
jne
mov
mov
lahf
cli
inc
iret
push
pop
add
or
shlb
lds
loopne
pushf
int3
xchg
mov
cmp
sub
andl
mov
lds
scas
imul
lcall
stc
xchg
mov
dec
cmpsb
jno
and
and
or
cwtl
inc
insb
mov
fs
sub
mov
cmpb
cs
sub
xor
push
dec
xchg
xor
jp
pop
loopne
cld
fwait
push
mov
bound
xor
pop
mov
mov
push
aad
movsl
loopne
mov
cli
jl
inc
dec
aas
cwtl
inc
sti
add
aad
xchg
add
or
je
ret
push
inc
movsl
loope,pt
fucomi
aas
mov
or
jno
je
pop
shlb
inc
outsb
fsubs
pushf
aam
jb
rorl
orb
xor
decl
mov
inc
pop
fmuls
jmp
adc
into
scas
jnp
aam
in
mov
je
inc
inc
cs
test
aaa
dec
les
mov
or
mov
jg
cmp
sub
outsl
sub
inc
in
xchg
or
leave
pop
hlt
movsb
sub
or
and
jbe
rcll
aam
lcall
sub
arpl
cmp
pop
inc
jne
pusha
test
cs
mov
clc
arpl
fwait
test
scas
adc
mov
dec
rorb
pop
push
mov
insb
cmc
and
pop
push
xor
imul
jle
pop
mov
test
jmp
and
cli
movsb
cmc
test
stos
inc
insl
inc
fcompl
sbbl
mov
and
xchg
cwtl
jl
insl
xchg
inc
xchg
mov
stos
cmp
jecxz
pop
adc
orl
ffree
or
mov
mov
xchg
add
incl
jmp
jg
pushf
repnz
shlb
sbb
jg
cmp
inc
lds
imul
loope
inc
insb
popf
mov
stc
movsl
jnp
mov
mul
int
nop
call
mov
and
push
push
mov
push
sbb
das
and
test
mov
mov
xlat
scas
call
add
mov
insb
fcomi
add
ds
xor
popa
movsb
loope
imul
enter
adc
clc
mov
pop
ret
insl
push
sbb
clc
fxch
push
sbb
push
scas
xor
mov
cmpsb
cmpsb
sub
mov
in
divb
int3
pop
pop
in
cmp
mov
jg
xchg
jne
dec
data16
mov
test
orl
xorb
hlt
imul
mov
adc
enter
or
lcall
xchg
jne
int3
pmaddwd
sub
and
pop
pusha
roll
jle
jge
loopne
jp
sbb
pop
enter
das
test
lods
loop
lret
mov
lock
lret
enter
cmpsl
int3
sti
lea
and
dec
jns
mov
enter
dec
repz
dec
mov
in
xchg
shrl
mov
and
or
cld
jae
xor
jbe
xchg
sbb
int3
mov
cmpb
lods
dec
mov
cmp
lret
fwait
xchg
arpl
adc
adc
clc
popf
push
xchg
xchg
fcoms
cmpsb
scas
inc
add
mov
pop
xor
adc
xchg
daa
repz
pop
jno
and
push
aam
out
jp
incl
push
sub
xor
sbb
cmc
in
adc
jb
pop
jae
or
pop
dec
imul
aas
adc
les
cmp
add
int
fmul
sbb
sub
aad
cmpl
sub
push
hlt
and
movsl
push
sbb
into
jb
fcomi
pop
repnz
pop
pushf
in
mov
sbb
push
movsb
xor
scas
push
ficoms
adc
and
mov
sub
jns
mov
sub
xlat
jb
sbb
add
cli
and
inc
add
mov
vdivsd
es
sub
insb
sti
loop
out
or
pop
aad
cwtl
add
cmpsl
xchg
loopne
in
mov
lods
xor
popa
cwtl
fwait
lods
loopne
xchg
xor
shl
pop
xchg
inc
pop
and
inc
cmpsb
clc
sti
sbb
xchg
xchg
ret
adc
pop
pop
insb
mov
adc
push
imul
cmp
xlat
scas
cmp
test
sub
dec
lahf
leave
adc
lea
fucomp
xchg
or
mov
and
bound
stc
jae
loop
jp
pop
pop
adc
sbb
test
int3
and
adc
adc
xor
in
push
jns
sbbb
dec
clc
cmc
mov
iret
es
rolb
sbb
and
adc
or
or
fwait
stc
fadds
in
test
mov
push
sbbl
pop
or
nop
inc
push
push
shll
mov
cmp
xchg
sti
ja
je
inc
lret
shll
mov
int
orb
mov
or
fcoml
mov
add
xchg
mov
mov
sub
and
sbb
test
into
movsb
cmp
test
push
out
in
and
daa
and
cltd
sub
test
inc
inc
dec
lret
lock
stos
in
dec
shlb
sub
sub
fsubrp
push
mov
aaa
sub
dec
movsl
pop
and
int
ret
pop
cli
inc
add
clc
mov
ret
in
adc
jl
je
mov
cltd
fstpt
mov
test
loope
pop
pop
mov
mov
rolb
scas
into
inc
cmp
dec
push
jns
jmp
sub
jb
sbb
push
mov
pop
sub
clc
or
pop
sbb
mov
inc
cmp
aad
cmpsl
push
pusha
jo
push
cli
test
jl
aam
xor
fnstsw
xchg
test
mov
lods
push
inc
fisttpll
dec
scas
mov
pop
addr16
xchg
movsb
add
fidivrs
std
mov
sub
icebp
outsb
sarb
outsl
ret
and
loope
or
sbb
jno
mov
fnstsw
jno
mov
add
std
add
shll
fsubs
mov
dec
scas
mov
in
scas
pop
push
dec
es
rcrb
xchg
imul
ss
in
aam
sbb
dec
adc
pop
filds
ret
jb
or
cmp
cmpsl
pushf
xchg
cmc
jns
add
adc
mov
mov
pop
push
and
pop
test
xor
je
sbb
ss
popa
jmp
jo
repnz
dec
add
push
lcall
cmp
loopne
add
jno
pop
adc
fiadds
xor
pop
push
sbb
lds
mov
aas
and
mov
adc
lahf
sbb
hlt
in
jbe
add
daa
cmp
into
xchg
mov
inc
add
aas
imul
in
push
jae
es
pop
push
lds
xchg
jl
and
add
pop
addr16
out
mov
icebp
inc
or
sbb
call
and
fbstp
xchg
gs
adc
sub
xchg
sub
int
ds
and
rorb
fadds
in
shll
insl
xor
jne
rorl
xor
jmp
cmp
push
lds
cmc
xchg
xchg
inc
jmp
jmp
sub
jno
xchg
out
fisubrs
or
cli
mov
or
stc
add
shrl
mov
into
fstps
leave
xchg
int3
dec
mov
and
add
andl
pop
gs
xor
or
movsl
test
mov
cld
xchg
ljmp
mov
pusha
cmc
dec
pushf
pop
test
jge
cli
sub
int
jns
ror
push
sub
jl
gs
mov
fcmovu
mov
pop
movsb
movsl
mov
and
jle
pop
rcl
in
pop
push
das
inc
daa
movsl
or
mov
sahf
mov
imul
movb
outsl
cwtl
stos
leave
aas
mov
incb
out
enter
push
test
nop
arpl
cli
and
imul
push
pop
aas
cli
fsubr
dec
nop
fmul
enter
push
jg
cmpsb
mov
scas
repnz
stos
dec
cmpsb
pop
xchg
mov
jae
ss
clc
dec
adc
dec
popa
roll
dec
xlat
mov
sahf
or
je
sarb
scas
pushf
and
mov
mov
dec
ja
fistpl
sub
sbb
in
mov
xor
out
dec
lahf
repz
insl
in
aam
pop
ret
xor
mov
aas
fidivs
div
sbb
adc
dec
outsl
subl
pop
pusha
xchg
stos
cmp
mov
std
push
mov
repnz
ljmp
je
inc
fucomi
aas
lods
xor
out
pop
push
pop
xchg
lock
mov
cmp
pop
mov
push
inc
xor
push
insl
call
insb
sti
add
aad
les
out
sub
icebp
xor
inc
test
mov
or
dec
adc
es
imul
xor
lret
dec
inc
and
sub
xor
repnz
jg
mov
mov
mov
dec
shll
adcb
mov
push
push
pop
movsl
mov
sub
inc
inc
jns
fsub
and
movsb
ljmp
std
popa
push
jns
push
jl
lahf
and
stos
std
movsl
jns
and
stos
inc
cmp
dec
adc
push
mov
inc
inc
nop
inc
ljmp
rcll
jbe
cmp
sub
outsl
jg
add
fadds
js
pop
mov
jge
sub
push
popf
popa
inc
outsb
faddl
pop
jnp
and
and
xor
insb
sub
mov
sub
insb
lds
inc
arpl
mov
mov
movsb
mov
add
cmpl
push
xchg
xor
mov
data16
push
ja
xor
xchg
pop
movsb
test
into
out
or
icebp
or
ljmp
mov
les
aam
sub
out
and
xchg
leave
cmp
jns
mov
jp
lahf
pusha
repz
jno
frstor
and
stos
inc
cmp
popa
bound
in
call
sar
inc
xor
fisttpll
cli
xlat
add
add
mov
jg
mov
movsl
loop
or
mov
push
out
or
sub
test
mov
inc
loopne
daa
mov
xor
cltd
xchg
mov
adc
fistl
mov
fiadds
flds
outsl
xchg
and
bound
lea
mov
push
xchg
cmp
push
sub
xor
dec
test
ret
stos
xchg
sbb
xchg
sub
fcomp
push
mov
push
push
xchg
pop
xor
add
test
cmp
lods
jg
fistl
xor
inc
pop
sub
lock
fmuls
sbb
xor
aas
cmp
push
and
cs
cmc
dec
inc
adc
mov
mov
hlt
jbe
or
call
rep
or
scas
xchg
inc
rcll
mov
push
pop
xor
inc
adc
xor
icebp
sub
dec
mov
bound
push
insb
mov
stos
cltd
sub
ficomps
leave
mov
hlt
stos
cwtl
jge
pop
mov
push
ljmp
push
in
repnz
jmp
addr16
movsb
daa
or
fidivl
jns
pop
sahf
test
fwait
add
cmp
cmc
jg
rorb
push
and
mov
inc
adc
aaa
push
sahf
loop
sbb
add
ficoms
pop
aas
cmp
sahf
xchg
adc
stc
loop
add
clc
rorb
stos
inc
xchg
and
mov
push
push
in
jge
ja
mov
outsb
dec
jecxz
cltd
and
in
aad
jb
mov
rcrl
cld
pop
lret
fbld
or
lahf
cmpsb
leave
dec
dec
mov
outsl
orl
push
jns
mov
mov
das
cmp
or
test
mov
push
mov
popl
mov
xor
sub
mov
fistps
add
and
arpl
int3
sub
fsqrt
in
std
bound
loopne
stos
lcall
hlt
jg
test
dec
sub
outsl
add
inc
pop
inc
stos
cmpb
xchg
and
and
repz
jne
call
xchg
imul
out
push
sub
cltd
push
fst
in
push
jge
js
cmpsb
pop
nop
cmc
or
or
mov
adc
fdivl
push
je
nop
jnp
pop
jno
seta
pop
add
push
jne
enter
xchg
and
dec
fwait
push
adc
shlb
ds
repz
push
mov
in
test
xchg
jecxz
stos
mov
test
sub
scas
jbe
imul
ja
hlt
xor
jecxz
imul
xor
sub
pop
sub
movsl
je
loopne
bound
xchg
in
sti
je
pop
sub
in
dec
jg
push
loope
sbb
into
addr16
inc
cld
rolb
cmp
xchg
mov
shll
repnz
add
adc
cwtl
or
xor
aad
sub
push
xchg
insl
cwtl
pusha
cwtl
mov
jecxz
mov
repnz
push
in
sbb
jecxz
sub
int
pop
lock
mov
dec
cwtl
sti
cli
stc
xor
pop
loope
xchg
mov
inc
stc
jp
inc
ja
call
fidivl
insb
iret
pop
mov
mov
ss
sbb
jmp
fists
into
sbb
ror
iret
dec
imul
xor
and
sbb
imul
adc
jo
mov
loopne
test
rep
in
mov
add
cmp
pop
jp
notb
sti
fucomi
movsl
and
clc
popa
aam
lods
ret
aad
ficomps
in
popf
pushf
les
nop
jp
push
mov
cltd
push
xor
shl
test
data16
js
shll
lea
test
sar
roll
hlt
inc
jg
lods
mov
inc
cmp
xchg
add
stc
or
es
jle
fdivrl
nop
sub
adc
add
adc
mov
push
sahf
loopne
jae
xchg
scas
dec
or
sbb
jnp
insb
or
pop
or
stc
popa
js
push
sbb
mov
lds
outsl
flds
mov
shufps
cmp
dec
mov
pop
in
pop
mov
and
inc
jns
hlt
mov
dec
outsb
xor
lock
sbb
inc
add
lea
test
mov
xchg
iret
rcrl
fbstp
push
mov
fists
pushl
xchg
sub
jo
cmp
push
rcl
mov
sub
rorb
cld
pop
xchg
mov
push
and
sti
cwtl
in
loope
dec
test
mov
add
cmp
cmp
fldenv
jne
xchg
pusha
scas
mov
jbe
lods
shrl
push
sbbl
or
js
fwait
sub
mov
mov
shl
rclb
insb
dec
lods
outsl
xlat
sbb
cmp
pop
dec
addr16
mov
mov
scas
jne
rclb
xchg
fisttps
mov
test
addr16
pop
mov
call
pop
mov
imul
push
xchg
or
xor
pop
push
js
pop
xchg
int
int3
es
sub
mov
sbb
or
cmc
fsts
es
mov
add
and
xor
lret
stos
jl
sahf
push
pop
stos
xor
push
xor
sub
ljmp
cmc
ret
call
bound
add
xchg
movsb
repnz
or
inc
cmpsl
test
or
cli
jge
lret
int3
fildl
sub
lret
pusha
cmpsb
test
outsl
xor
js
inc
sub
and
jg
shrl
or
subl
add
or
push
ja
pop
shr
lret
jle
icebp
mov
inc
mov
stc
jae
cmc
inc
pop
push
into
cltd
mov
out
cmc
lods
mov
sbb
inc
aaa
mov
into
add
add
push
mov
lret
test
adc
pop
sbb
dec
mov
out
out
ja
mov
mov
mov
xchg
jmp
pop
add
mov
lds
dec
inc
or
mov
or
adc
shll
imul
inc
xor
lods
xchg
loopne
mov
fcomp
pop
mov
mov
inc
mov
sahf
leave
sbb
mull
jmp
pop
or
subb
sbb
or
push
xor
jl
popa
jg
cmp
mov
add
pushf
pop
xchg
aaa
roll
xchg
or
loop
ficompl
pop
sbb
lcall
cltd
inc
test
vaddsubps
movsb
sub
xlat
scas
jne
fdivrl
ljmp
jmp
dec
test
fsubrl
dec
daa
sub
sbb
ret
sub
movsl
lcall
pop
stos
mov
inc
sub
pop
pop
sti
push
xor
outsb
pop
imul
adc
cmp
add
jmp
jle
xchg
adc
mov
pop
mov
pushf
in
push
sbb
mov
adc
xchg
push
das
xor
imul
gs
xchg
and
jl
and
adc
dec
fidivrs
mov
test
xchg
dec
sahf
inc
movsb
ret
sbb
enter
data16
mov
xor
xchg
aam
pop
aad
pop
jle
cmc
and
div
cmpsl
push
dec
push
push
stc
mov
sbb
mov
inc
sub
adc
mov
flds
cmp
mov
les
and
inc
imul
mov
mov
cld
icebp
aas
icebp
adc
pushl
sbb
imull
aad
in
mov
cmpsl
imulb
push
and
stos
xchg
std
dec
or
pop
repnz
js
mov
mov
int3
lock
jne
jmp
loop
push
loope
xchg
shll
test
mov
push
jp
mov
ror
repnz
clc
pop
daa
mov
sbbb
jno
aas
or
ja
inc
std
push
cmp
xor
arpl
xchg
bound
jbe
dec
andl
xor
addb
sub
aaa
push
push
mov
aaa
and
adc
lea
mov
sbb
fwait
aaa
mov
and
pop
leave
imul
add
fmulp
insb
cmp
dec
cwtl
add
movl
and
outsb
pushf
adc
xor
xchg
push
fmulp
pushf
stc
pushf
lcall
inc
pop
fisubrl
cld
push
pop
sub
je
push
mov
fisubrl
cmp
mov
and
xlat
and
mov
test
cmpsb
mov
jnp
hlt
push
fisubs
je
xor
movsl
in
loope
loope
cs
sbb
mov
jb
push
xchg
pop
pushf
add
dec
pusha
repnz
adc
mov
pop
cltd
push
bound
mov
clc
xchg
daa
int
xchg
jmp
loop
dec
push
dec
into
addr16
xchg
nop
lea
mov
stos
jae
jecxz
mov
ljmp
scas
test
pop
js
pop
iret
ret
cmp
mov
call
cmp
negl
roll
std
sbb
and
insb
inc
or
iret
xor
icebp
mov
jmp
xchg
in
jns
aaa
jne
xor
sub
rcrb
mov
add
mov
xchg
movsb
movsl
scas
pop
push
test
cld
cli
pop
out
lds
repz
fstpl
int3
xor
add
es
or
dec
int
pop
jmp
jmp
xor
inc
test
mov
les
cmpsb
add
cs
xchg
clc
outsb
cmpsl
roll
add
mov
pop
cltd
subb
sbb
mov
dec
out
outsb
enter
pop
test
shrl
push
cmp
jbe
inc
fldl
repz
jmp
xchg
ja
jno
mov
push
dec
cmc
push
mov
sub
pop
mov
push
push
pushf
shrl
xchg
addr16
into
lahf
les
filds
xor
pop
outsl
dec
nop
jne
dec
inc
mov
out
es
gs
fdivrl
adc
and
test
xchg
sti
and
aam
arpl
xor
imull
xchg
push
xchg
push
test
loop
mov
cmp
stc
inc
add
out
cmp
aam
xor
xbegin
fs
test
in
inc
add
inc
mov
add
mov
mov
sti
jl
jne
sub
gs
ret
mov
cs
sub
pop
mov
mov
pop
cmp
pop
popf
inc
xchg
dec
aas
mov
popf
jns
js
mov
dec
inc
out
or
jge
in
adc
fildl
cltd
cmp
cmc
sbb
and
xor
fstl
in
call
jo
jecxz
jns
test
shrl
pop
es
fs
push
mov
mov
xor
pop
adc
fsubl
cwtl
push
add
add
pusha
in
cld
jl
lods
out
pop
jp
shr
hlt
das
aas
jne
xchg
sub
ja
out
inc
sarb
inc
inc
test
in
gs
sbb
pusha
adcb
gs
out
testl
pop
std
xor
mov
and
ds
mov
jge
mov
dec
push
cmpsl
jb
out
jle
pop
sbb
mov
xor
push
and
call
mov
loope
fs
adc
mov
mov
xchg
push
bound
or
pop
xlat
stc
data16
push
sahf
out
jecxz
cltd
inc
pop
aaa
sub
jg
push
mov
adc
jg
pop
insb
out
cld
stos
dec
sbb
jge
inc
ds
test
xchg
inc
leave
call
icebp
push
jo
and
call
xor
or
push
add
pop
cmp
lahf
inc
and
xchg
scas
jb
fisubrl
cltd
out
ljmp
rcl
insl
imul
addr16
nop
sbbl
mov
cmc
xchg
fisttpll
jmp
xchg
add
dec
sbb
std
js
add
out
jns
pop
out
inc
jmp
cmpl
pop
enter
inc
loop
pusha
sbb
je
pop
or
sahf
mov
leave
ljmp
xchg
jp
and
out
pop
repz
leave
lahf
and
dec
add
jno
pop
in
clc
mov
add
push
shl
xor
outsb
push
mov
or
out
mov
pusha
mov
adc
sbb
movsb
pop
movsl
xchg
cli
aas
in
nop
cmp
popa
mov
nop
mov
sbb
pop
es
imul
cltd
int3
ficomps
popf
sub
ret
inc
and
std
dec
xchg
xchg
jno
aas
in
pop
sub
or
lret
pop
out
loope
push
dec
dec
inc
ficoms
pop
xchg
mov
imul
dec
pop
fisttps
push
mov
jecxz
sub
stc
adc
xchg
add
xchg
xchg
mov
jno
push
pop
adc
pop
mov
cmp
sahf
iret
in
loope
sub
les
jno
insl
sub
rcll
cmpsb
sbb
hlt
dec
pop
inc
adc
xor
xor
sub
je
movsb
stos
push
jecxz
or
pop
out
mov
imul
pop
push
cld
pop
mov
and
xlat
sbb
lcall
ds
mov
dec
addr16
test
pop
inc
push
push
outsb
in
sbb
hlt
adc
ja
mov
mov
push
inc
mov
pop
ja
gs
jecxz
cmp
pusha
aam
push
adc
cmp
sub
inc
mov
sbb
pop
arpl
mov
xor
cmp
leave
sahf
pop
aaa
pop
testl
mov
and
popf
xor
mov
cmp
pop
in
sarl
lods
mov
dec
mov
ret
in
mov
push
ss
ret
add
jb
xchg
or
jb
add
xchg
xchg
pop
cmp
mov
pop
and
xchg
sub
ds
or
movsb
inc
sub
mov
xlat
fildll
les
xchg
pop
xchg
test
idivb
repz
or
jge
rclb
out
or
mov
ljmp
insl
or
push
fsubrp
mov
fcomi
mov
pop
pop
nop
rolb
push
setne
sub
dec
imull
jne
push
mov
dec
insl
sub
test
fwait
sbb
adc
rcll
xorl
insl
inc
adc
add
jae
in
dec
divb
jmp
sbb
les
cmc
mov
sub
cmc
clc
cwtl
adc
jge
adc
out
shlb
mov
or
jg
xchg
pop
ret
data16
out
sbb
jp
daa
jmp
push
mov
test
dec
repz
insb
loope
sbb
jecxz
push
xchg
and
rcll
push
pop
sub
and
pushl
jl
in
gs
adc
aaa
fisttps
popl
scas
scas
sub
pop
nop
dec
fistl
sbb
sub
dec
outsb
and
popa
shrl
sub
test
jg
int
pop
js
mov
and
das
mov
clc
xchg
or
adc
push
lods
pop
mov
into
pusha
mov
fildll
sarl
inc
xchg
mov
or
les
cs
movsb
xchg
mov
dec
xchg
scas
mov
nop
adc
jne
lock
stos
loope
sbb
push
xorb
push
or
das
or
lea
sub
push
lahf
movsl
mov
cwtl
sbb
in
cwtl
xchg
ja
mov
popf
jge
ss
adcl
pop
sub
mov
jb
pop
out
jmp
sub
xchg
mulb
sbb
or
cmpsl
mov
sbb
cwtl
test
test
loop
addr16
push
fldcw
and
xor
jae
dec
and
jae
ss
std
mov
imul
jns
jbe
dec
mov
mov
data16
sub
inc
or
test
inc
mov
cmp
jecxz
and
xchg
ss
jmp
outsl
out
jmp
arpl
lock
scas
cmpsl
jge
cwtl
cmpsl
and
idivb
movb
pusha
fwait
outsl
movsl
ja
in
add
js
shlb
mov
pop
xchg
pop
in
xor
adc
int
pushl
aam
cmp
cwtl
int3
int
pop
jp
pop
jne
mov
pop
inc
lea
dec
shll
mov
sbb
lds
or
sbb
push
iret
cmpsl
lock
or
mov
xor
push
dec
in
pusha
push
xor
test
inc
iret
inc
mov
addr16
pop
decb
or
cmp
bnd
jmp
out
mov
movsl
pop
out
icebp
adc
ror
arpl
mov
movsl
sbb
push
or
push
std
subl
push
lds
mov
sbbb
sbb
xor
sbb
pop
mov
insl
enter
lret
std
sahf
add
pop
mov
movsl
pop
mov
jmp
out
mov
dec
in
int3
mov
or
int3
mov
xchg
xchg
mull
jge
mov
ficompl
imul
bnd
cmp
mov
fwait
dec
mov
ja
mov
mov
adc
pop
sub
insl
in
mov
stos
and
stc
iret
fsubrl
in
mov
pop
add
xor
pop
and
xchg
jb
sbb
jae
jbe
dec
in
stos
mov
jae
out
push
push
cmpl
lods
fs
andb
aaa
add
loope
int
std
xchg
loopne
fwait
push
jnp
add
test
jl
inc
jno
xchg
enter
jp
cmpxchg
xchg
sbbl
insl
jns
and
lods
call
lret
push
cmp
jg
adc
mov
shll
adc
sub
ret
sti
insl
outsl
fists
fcmovb
loop
es
out
cmpsl
stos
in
outsb
cli
jg
cmp
sti
inc
dec
imul
cwtl
and
pop
add
or
push
clc
mov
xor
cmp
jne
je
mov
sti
andb
addr16
icebp
cmp
inc
movsb
inc
shrl
bound
int3
int
fs
dec
sub
fimuls
sub
mov
lret
sbb
pop
or
out
cmc
cmp
push
fadd
sbb
mov
dec
mov
cmp
out
adc
std
insb
push
adc
fsubs
cld
cmp
adc
mov
addr16
dec
pop
mov
mov
pushf
call
cmp
inc
sbb
cwtl
jecxz
add
popf
punpckhdq
sti
add
sub
mov
jmp
xor
mov
adcl
mov
mov
pop
mov
dec
shrb
cmpsl
subl
adc
or
testb
lahf
mov
cmp
xlat
jo
ror
das
les
lock
pop
popf
cmp
dec
int3
stos
cs
push
subl
jp
inc
fmull
push
or
pop
lea
out
dec
insl
lahf
cltd
je
aam
sarl
push
jle
insb
stc
sbb
add
inc
int3
insl
mov
sbb
pop
sbb
fs
out
mov
aaa
jg
iret
insl
stos
sbb
mov
leave
sub
xor
test
movsb
lret
push
sti
or
negl
dec
or
out
daa
dec
stos
mov
mov
jmp
adc
mov
ja
dec
lahf
int3
in
cmp
fldcw
jmp
push
and
stos
push
dec
mov
adc
or
sub
inc
sti
cli
out
sti
lcall
push
sub
xor
les
notb
pop
dec
push
cmp
mov
sbb
js
sarb
sarb
push
jle
pop
das
into
adc
cmpsb
add
ja,pn
inc
ret
pop
xorb
pop
cld
cmp
gs
movsl
or
mov
hlt
test
int3
mov
inc
fisubl
scas
xchg
mov
push
repz
inc
push
pusha
sahf
sub
mov
popa
cmp
mov
leave
lods
aaa
mov
into
sub
lods
jp
push
daa
add
mov
xor
pop
push
cmp
xor
add
subl
pop
sbb
roll
pop
test
cmpsl
jp
sub
cltd
je
js
ficoml
jns
idivl
gs
cmc
loope
jmp
xor
dec
data16
sti
pushf
imul
dec
out
adc
or
les
pop
lock
jmp
xor
mov
fcomp
xchg
xchg
sbb
mov
mov
stos
mov
mov
mov
pop
cmpsb
mov
faddl
mov
push
ret
cmp
call
out
cmp
mov
icebp
jnp
dec
repz
adc
arpl
jg
loop
cmp
in
bound
gs
in
xor
xchg
daa
xchg
ret
repnz
mov
lea
cmp
dec
loopne
pop
mov
inc
xor
outsb
rorb
or
leave
push
push
jns
andl
ss
stos
aas
xchg
gs
popf
dec
in
pop
sub
outsl
sbb
jecxz
js
add
jnp
push
sarb
dec
or
std
xchg
add
sbb
mov
mov
inc
imul
lods
jno
cmpsb
lret
jno
mov
lret
test
ror
jnp
xchg
and
mov
push
mov
mov
stc
adc
shll
test
push
aaa
je
cmp
loope
jp
xchg
add
pop
xor
mov
mov
cmp
jg
mov
add
imul
mov
pop
and
jae
aaa
inc
call
repz
adc
sub
lods
mov
dec
out
adc
mov
mov
dec
test
daa
inc
mov
stos
sbb
stos
imul
mov
push
mov
stc
inc
sahf
lret
shrl
cs
mov
sbb
mov
sti
or
stc
dec
outsl
xor
pop
test
pop
cli
xor
xchg
add
imul
insb
sub
xchg
sbb
add
sbb
inc
pop
ret
sub
mov
into
push
lods
stc
cmp
cmp
lock
jmp
mov
inc
or
jecxz
or
stos
mov
mov
mov
movsl
in
lret
push
sbb
pop
ja
pop
std
pushf
add
pop
adc
cmc
push
sbb
mov
push
sbb
dec
sub
insl
xchg
movb
clc
push
lahf
lds
push
mov
inc
jo
push
push
minps
cltd
mov
dec
mov
in
or
or
lods
les
xchg
aad
mov
fwait
movsb
mov
out
or
mov
loop
lds
xchg
pop
sbb
push
ja,pn
mov
shll
cmp
inc
sub
mov
stc
and
mov
int
jnp
dec
lods
sub
arpl
dec
jae
mov
pusha
mov
aad
lods
test
cltd
inc
adc
jne
inc
into
inc
adc
mov
jle
and
mov
in
jle
fs
rcrl
int
lods
jge
or
inc
test
and
cld
sahf
stos
xchg
xchg
hlt
or
push
push
dec
add
inc
pop
jns
add
lret
and
dec
shrl
mov
cmp
ljmp
xchg
out
cld
imul
inc
xor
div
rcll
fs
bound
jecxz
cmp
jmp
popa
jbe
or
xchg
je
lds
sbb
cli
arpl
cmp
fcmovnu
adc
add
in
ljmp
pop
fwait
dec
popa
ret
mov
cltd
cmpsb
inc
fwait
jle
cmp
ja
add
mov
dec
das
outsb
sarb
inc
insb
or
jmp
or
jne
jbe
pop
xor
cmp
add
cmp
enter
js
pusha
adc
out
push
cld
addr16
pushf
shl
push
imul
lret
pusha
xor
jb
push
pop
ja
and
push
shlb
pop
je
inc
dec
pop
adc
loop
adc
pop
imul
pop
arpl
xlat
icebp
mov
adcl
fs
fs
es
xlat
fwait
add
shlb
cmpl
or
test
popa
cld
mov
int
dec
ja
repz
daa
sti
and
xchg
and
pop
mov
and
add
call
lods
cld
aas
sbb
pop
aam
sbb
and
sbb
fs
loope
jne
inc
mov
loope
mov
lret
mov
test
pop
pop
sahf
push
and
stc
out
out
push
sbb
cmpb
lods
data16
pop
xchg
fisttpl
das
bound
push
jmp
aad
xlat
rcr
xor
pusha
mov
sbb
test
mov
inc
jle
xchg
cmpsb
jne
inc
mov
aaa
cli
or
int
jbe
pop
jecxz
mov
in
cmp
ror
andl
int
addr16
fildl
decb
fnstsw
push
sub
push
lds
enter
subb
add
sub
outsl
scas
jge
ret
aam
push
jmp
cmpsb
loop
iret
loope
inc
scas
or
mov
lea
fstl
push
xchg
adc
das
sbb
into
cmp
int
test
clc
ret
out
jg
xchg
push
or
lret
pop
mov
fdivrl
fsubs
sbb
mov
insl
and
insb
ja
testl
push
push
shlb
xchg
iret
dec
aam
lds
test
push
dec
inc
xchg
imul
aam
popa
add
popa
sbb
adc
mov
adc
in
rcll
fldcw
bound
sub
ss
pop
lock
xor
and
test
out
icebp
outsb
roll
or
lcall
stos
ret
rclb
int3
into
dec
in
popl
int3
inc
std
test
adc
aaa
clc
adc
sarl
jno
cmp
push
jge
fnstenv
xchg
fwait
mov
incl
fcomps
stc
cmp
pop
inc
add
xlat
imul
loopne
addr16
adc
in
push
jg
aam
addl
stos
add
jno
xchg
in
cmpsl
incb
cmp
pop
insb
jmp
dec
push
inc
aas
ds
push
repz
in
mov
shrl
ficoms
mov
out
push
add
in
imul
test
xor
orb
sub
jmp
cmp
outsl
ret
cmp
aaa
into
dec
pop
sbb
xor
pop
push
adc
mov
jae
dec
cli
cs
mov
cmp
adc
cltd
testb
mov
dec
int
into
mov
and
test
pop
out
in
cmp
mulb
adc
cmpsb
pop
fbstp
mov
pusha
pop
or
add
nop
xchg
mov
dec
mov
lods
scas
cld
jmp
add
push
bound
adc
xor
pop
iret
push
loope
add
lahf
inc
cmc
adc
rcrl
lock
cli
or
fnsave
cltd
sbb
jge
jle
das
sub
in
mov
in
movsb
sbb
stc
xchg
mov
scas
pop
adc
dec
or
addr16
dec
mov
movsl
stc
jno
icebp
sbb
mov
push
sub
mov
inc
mov
mov
push
enter
les
popf
adc
inc
outsl
adc
jp
mov
dec
pop
sbb
outsb
dec
push
mov
xchg
lahf
push
enter
imul
les
push
movsb
nop
pop
sbb
push
icebp
pop
lret
inc
cmp
or
add
push
mov
sbb
fsubrl
repz
sub
cwtl
inc
mov
xor
aas
jns
sub
sub
xor
push
cmp
adc
pop
mov
adc
movb
lds
lret
adc
lods
sub
dec
mov
int3
negl
cltd
mov
sbb
mov
or
adc
int
loopne
adc
add
pop
adc
sbb
bound
pop
rcrb
sbb
mov
adc
dec
mov
cmpsl
idivl
mov
adc
sbb
outsl
push
cmp
pop
enter
imul
sub
daa
orb
test
stos
jecxz
in
jp
in
js
push
dec
ret
jbe
lds
sbb
cmp
test
insl
xlat
outsl
jno
pop
mov
mov
cld
dec
mov
pop
cmpb
xorb
rolw
jmp
inc
repnz
jle
fmull
icebp
ss
xchg
inc
inc
out
pop
mov
repnz
test
jmp
xchg
add
js
jbe
jb
jle
cmp
in
pop
ret
adc
prefetcht0
aaa
sbb
sar
aam
mov
ret
mov
fs
jae
xlat
popa
arpl
sub
out
xchg
jle
imulb
insl
rclb
inc
lret
aas
xorl
cmp
cs
xchg
sbb
fxch
sub
imul
sub
sub
into
cmp
xor
lret
mov
imul
push
add
sbb
loopne
mov
or
and
and
or
adcb
jge
lods
or
clc
imul
imul
push
int
sbb
fsubp
bound
mov
xchg
nop
adc
outsl
pop
fwait
cmp
cmc
xchg
cmc
lcall
mov
push
cmpsb
mov
stos
lods
lahf
cmp
lock
rorb
icebp
ret
cmc
xchg
inc
push
jmp
add
aad
in
leave
dec
sub
cwtl
in
cld
pop
jge
lret
stc
push
rcrb
mov
sbb
cmpsl
roll
inc
sti
pop
mov
out
sub
in
neg
push
adc
mov
lcall
int
inc
push
imul
jo
xchg
sub
divl
mov
cmp
xor
popl
mov
and
pop
insb
sbb
aam
mov
pop
insb
fldcw
repz
pop
sub
mov
out
icebp
clc
sub
loopne
inc
add
pop
or
ss
push
sub
imul
xchg
xorb
mov
fisubrl
dec
movl
imul
cmpsb
mov
push
fists
dec
adc
int3
mov
ljmp
fwait
out
lods
test
inc
hlt
and
iret
pop
cmp
add
adc
mov
rcrb
enter
mov
mov
fst
jnp
cmc
add
mov
xchg
xchg
lahf
ljmp
mov
add
gs
inc
movsb
dec
lods
ja
jno
ret
pop
lods
cmp
xchg
sahf
das
movsl
shrb
jbe
lods
mov
scas
test
sub
dec
pop
mov
mov
adc
cwtl
and
cmpl
adc
outsb
xchg
jnp
jbe
xchg
insb
and
lods
add
clc
fbld
inc
inc
pop
lret
or
cmp
outsb
mov
or
adc
loope
adc
pusha
xchg
push
xor
pop
jns
dec
xor
sbbb
insl
outsl
pop
xor
stc
lahf
xor
xlat
push
jl
lods
into
jmp
dec
ja
push
es
dec
cmpsl
pop
les
int3
lret
pop
pop
fstl
and
ret
aaa
lahf
test
fidivl
adc
arpl
and
and
adc
mov
dec
sbb
sub
or
hlt
aam
or
sar
daa
jb
lahf
je
xchg
mov
in
stos
dec
and
push
lods
jae
push
in
mov
push
xchg
cld
jmp
pusha
ljmp
mov
push
adc
hlt
call
adc
xchg
xorl
jmp
push
dec
icebp
test
push
fstpt
and
jg
dec
xchg
popf
fnstcw
jns
sub
in
push
xor
jne
leave
mov
ljmp
test
mov
std
out
push
sbb
mov
inc
adc
jns
dec
mov
popf
scas
jle
add
xchg
adc
inc
into
inc
int3
mov
js
mov
test
xor
sub
push
pop
outsl
inc
or
jmp
cltd
adc
inc
pop
xor
jge
shrl
push
cltd
mov
sti
inc
mov
mov
inc
xchg
lret
scas
inc
inc
sbb
daa
pop
jp
sub
or
push
sbb
jmp
mov
jg
jne
repnz
push
out
sbb
cmp
loopne
addr16
push
stos
ljmp
cmpsb
jg
out
jecxz
mov
cmpb
jg
jg
in
pop
insl
fdivl
sbb
or
loopne
push
insb
dec
adc
mov
int
dec
popf
or
inc
jecxz
adc
xchg
test
pushf
dec
addl
dec
cmpsb
loopne
daa
pop
test
cmp
jbe
mov
push
rcr
xor
jg
or
iret
xchg
add
lret
insb
shll
add
popf
mov
adc
movsb
push
sub
dec
repnz
shl
inc
dec
dec
push
xchg
mov
push
fidivrs
sti
jno
adc
pop
push
or
outsb
enter
jp
enter
or
rorb
jb
loop
xchg
fidivrl
jl
jg
divl
adc
aam
sub
and
pusha
loopne
push
sbb
pop
into
aad
sub
xchg
out
xchg
push
out
in
or
test
push
out
push
outsl
int
scas
iret
aad
push
mov
daa
push
out
cs
fs
insb
adc
loopne
sbb
pop
jne
shll
into
rcrl
jecxz
mov
int3
or
pop
ret
or
sub
xor
insl
fcmove
add
cmpsb
push
dec
inc
call
out
jo
lahf
cmpsl
sbb
mov
add
pop
or
jg
mov
imul
mov
notl
sub
test
mov
mov
shl
shrl
xor
pop
mov
out
inc
movsb
and
test
or
shll
mov
sahf
push
push
outsb
xchg
or
lods
scas
test
push
fcomp
xor
sti
push
bound
jns
rcll
xor
mov
adc
ljmp
cli
push
sahf
or
sub
out
push
push
imul
out
icebp
xor
mov
xlat
shrl
mov
adc
nop
mov
xchg
jge
mov
sub
xor
popa
imul
loopne
ds
scas
xlat
xchg
mov
pushf
lds
adc
imul
sub
mov
mov
push
jg
ss
int
sbb
dec
test
add
and
mov
movsb
mov
out
or
loop
mov
cli
and
in
push
in
lods
cmp
inc
jae
jge
jmp
cwtl
adc
add
and
stos
ss
lgs
sub
push
sarl
aas
pop
test
outsl
sbb
mov
out
fwait
jns
or
jmp
cld
xor
fwait
pop
mov
add
aam
ljmp
sub
cmpsl
jo
add
icebp
int
adc
cltd
inc
sub
dec
sbb
outsb
dec
sbb
xor
sahf
push
mov
adc
xor
icebp
xchg
or
nop
aaa
negl
dec
and
cltd
lret
push
mov
data16
dec
jp
jp
sbb
xchg
and
cli
add
mov
or
lds
cmp
pop
clc
mov
hlt
jne
or
movsb
xor
adc
mov
loop
cmpsl
addr16
or
iret
jns
in
push
adc
add
cmpsb
jmp
insb
scas
cmp
cmp
lock
and
decb
cmp
or
clc
sub
push
outsl
fsubl
pop
dec
fdivrl
pop
mov
sti
andb
mov
xchg
aas
add
adc
mov
daa
xchg
sti
sbb
adc
add
sbb
mov
mov
jo
mov
xchg
add
scas
or
xchg
jo
inc
adc
inc
negl
xlat
cmp
mov
xor
mov
sbbl
adc
mov
mov
cmp
and
pop
pop
mov
cld
out
pop
popf
insl
out
and
mov
xchg
mov
pop
dec
inc
or
enter
in
xor
adc
pminub
jo
add
xchg
pushf
sub
mov
addr16
sbb
mov
jae
lods
sub
xlat
cmp
shrb
daa
mov
cli
leave
insb
jo
push
adc
cmp
mov
cltd
mov
mov
outsb
rol
mov
inc
mov
aad
mov
shr
sub
jmp
enter
mov
adc
sub
fistpll
ja
pop
movsl
xchg
add
daa
cmp
or
fcomi
je
aam
enter
out
push
mov
hlt
dec
notb
jge
in
pop
pop
fdivrl
jo
loope
adc
inc
imul
mov
and
inc
mov
inc
mov
bound
stos
scas
in
push
inc
js
inc
jmp
jnp
lret
shll
add
xor
sub
aas
popf
sub
sub
cmp
inc
pop
and
ret
inc
sti
mov
outsl
outsl
call
xor
lret
movsb
cli
mov
pusha
out
fidivs
cmp
ja
rcrb
adc
cmc
sub
addl
mov
or
xor
pop
xchg
repz
jp
in
nop
add
mov
roll
loopne
and
lock
movsl
mov
scas
inc
leave
mov
loope
adc
sbb
and
xchg
icebp
rcrl
xchg
mov
add
ja
or
mov
xchg
test
lods
mov
lahf
cwtl
scas
push
cli
inc
icebp
xchg
in
xor
mov
xchg
fisttpl
xlat
mov
push
scas
icebp
mov
inc
add
jae
cltd
ds
jnp
and
jmp
out
data16
mov
mov
fmul
nop
fmul
mov
leave
daa
sahf
cmp
js
mul
jbe
adc
repnz
call
cmp
dec
adc
test
push
out
xchg
les
xor
or
sti
loopne,pt
iret
sbb
adc
nop
testb
in
into
xchg
sbb
repz
fbstp
inc
iret
dec
mov
dec
xor
or
mov
ljmp
sub
insl
mov
rorl
ja
sbb
push
shll
std
add
icebp
mov
arpl
std
in
jno
or
xchg
push
repnz
mov
adcl
cmp
xor
jno
fbstp
cmp
jno
lock
movsl
cs
lods
ja
pop
sub
dec
pop
shll
leave
push
mull
insb
add
mov
inc
add
add
fdivrl
mov
lods
pop
adc
jecxz
pop
loopne
clc
out
dec
loop
mov
xor
inc
push
daa
push
mov
insl
cmpsl
xor
fdivl
mov
dec
dec
push
fdivs
xor
inc
mov
ja
hlt
jne
xchg
mov
sub
lods
lds
daa
cmpsl
in
xorl
dec
inc
flds
bound
jle
arpl
mov
pop
jmp
or
sub
push
mov
jnp
aaa
mov
repnz
and
xor
outsl
arpl
pop
nop
int3
popf
clc
in
je
or
test
out
and
bound
pop
push
mov
jge
cmp
rcrl
jle
pop
int3
xor
or
das
inc
adc
lea
or
imul
push
out
xor
ret
pop
mov
sarb
cmp
sti
call
xlat
dec
stos
xchg
rol
push
push
ret
mov
inc
pop
leave
add
in
mov
push
mov
lret
shll
lret
arpl
xchg
mov
mov
or
push
and
fwait
xlat
cmp
sahf
jle
fistl
std
xor
jge
das
xchg
fcmovb
push
fisttpl
xor
cld
ficomps
das
mov
mov
pop
and
je
xchg
or
lret
rorl
call
lods
sbb
loop
mov
sub
ljmp
dec
xor
adc
adc
push
push
push
inc
rcrl
jle
icebp
cwtl
sub
pop
jb
pushf
cmp
and
sahf
jp
lods
mov
fstps
inc
lods
in
dec
xchg
or
ss
mov
jo
mov
or
or
lds
cli
dec
int3
mov
lds
test
movb
lock
add
dec
ret
rcr
insl
xchg
cld
gs
into
and
ret
sbb
pop
ja
add
sbbl
mov
cmp
fdivrl
pusha
enter
push
or
inc
push
fdivrl
adc
in
dec
sbb
xorb
sbb
xchg
inc
cmpb
dec
cwtl
setb
xor
aaa
sbb
pop
add
mov
roll
ds
jmp
aad
or
in
pop
jb
jmp
mov
and
mov
les
or
sbb
stc
xor
fiadds
xchg
out
movsl
bnd
iret
movsl
insl
mov
pop
pop
dec
inc
movsb
popf
pop
loopne
pushf
add
lods
int
loopne
jbe
ror
ret
jg
push
dec
cwtl
add
or
dec
in
hlt
leave
test
mov
cmp
jae
outsl
bound
call
xor
int3
scas
les
mov
sarl
sbb
mov
pop
lea
ret
jnp
push
std
add
dec
loopne
fsubs
sbb
jae
inc
xorb
push
bswap
mov
test
hlt
lret
imul
xor
add
fldenv
aas
push
subl
xchg
or
pop
push
dec
ret
push
mul
inc
xchg
cmp
out
gs
push
add
or
enter
das
testb
lcall
or
dec
mov
int
lahf
or
outsl
out
xchg
dec
pop
addr16
mul
bound
inc
mov
pushf
data16
xchg
add
dec
rcl
xor
inc
ret
mov
test
clc
xchg
jbe
xchg
les
pop
cmpsl
je
inc
sar
xchg
das
xchg
je
pop
jle
imul
jmp
dec
in
xor
adc
rdpmc
lahf
mov
cmp
cmp
and
jb
and
mov
add
xor
mov
sub
mov
sbb
dec
mov
nop
stos
loopne
mov
add
cmp
dec
sahf
lcall
jae
leave
mov
mov
hlt
insb
push
sub
xchg
popw
add
pop
gs
je
inc
push
sbb
jle
dec
xchg
ret
mov
adc
ret
xchg
movsb
into
jae
in
xor
mov
stc
cmp
dec
out
mov
add
fwait
pop
pop
cmp
xchg
add
aad
ret
cmpsl
pop
stc
mov
nop
mov
shrl
std
or
sbb
fldt
in
pop
gs
sbb
fwait
mov
cmpsl
insb
mov
notb
xchg
mov
xor
push
and
addr16
call
dec
xchg
out
sub
sbb
lea
popa
and
inc
popa
or
inc
jno
push
sub
jge
mov
adc
out
sahf
xlat
nop
mov
push
jecxz
sbb
xchg
jne
xor
lret
aaa
mov
xor
dec
movsb
mov
inc
mov
sub
dec
add
jns
lock
inc
adc
mov
or
jmp
push
lods
and
andb
lcall
mov
push
dec
aaa
loop
scas
mov
testb
aas
mov
adc
push
inc
loopne
adc
popa
enter
in
sub
ja
imull
mov
or
mov
mov
push
fsubl
cmp
and
hlt
imul
test
cmp
dec
pushl
in
and
out
mov
test
or
aad
xchg
test
loope
jo
xchg
adc
sti
mov
adcb
je
dec
push
sub
fsubl
cmp
cld
shll
std
rorl
push
les
push
mov
xlat
jmp
pop
mov
cmc
popa
aad
pop
loop
sti
cli
sar
shll
sub
pop
arpl
cwtl
leave
cmpsb
mov
pop
ds
call
inc
jb
cmp
divl
sbb
sub
inc
sbb
jmp
fnstsw
mov
or
cmp
jbe
out
mov
in
pop
fbstp
jb
xchg
popf
xor
loopne,pt
rcl
scas
push
push
ficoml
inc
push
mov
xchg
push
loop
loope
xchg
adc
out
insb
xchg
bound
loop
fiadds
cs
mov
notl
rclb
sub
bound
mov
jnp
push
dec
pop
sub
inc
bound
dec
es
inc
push
std
inc
pushf
mov
push
and
ljmp
aad
mov
pusha
adc
into
push
push
aad
lods
push
jnp
dec
pop
jo
loopne
fisubs
inc
inc
mov
outsl
xchg
jecxz
mov
test
mov
pop
aas
loope
xorb
mov
out
dec
repz
cmp
mov
jle
dec
lea
mov
arpl
sbb
aaa
addr16
inc
adc
push
mov
mov
cwtl
pusha
movsl
adc
jns
enter
mov
cld
and
call
mov
xlat
mov
lods
xor
shlb
aam
ljmp
or
pop
cmp
push
insb
arpl
mov
pop
adc
sbb
cmp
adc
rcrb
imul
in
push
mov
test
fistpll
jle
or
mov
int3
bound
add
aaa
in
sbb
aaa
dec
sub
xchg
fimuls
xchg
xchg
push
or
movsb
shrb
cmp
fisubs
add
adc
lods
mov
cmp
push
xor
inc
mov
push
jns
xor
mov
cmp
out
fdivl
mov
dec
add
fisubrl
mov
addl
test
rcrl
or
mov
xor
mov
xor
xor
mov
push
enter
ret
mov
mov
pop
aad
test
mov
add
jecxz
push
aas
test
and
sti
stos
test
inc
dec
jnp
out
mov
dec
stc
fiadds
xchg
add
mov
mov
xchg
jbe
dec
arpl
lahf
popa
rcr
add
test
sbb
xchg
rorl
lret
cmpsb
cmc
dec
in
sarb
rcrl
sub
dec
push
xchg
cmp
outsl
jmp
jge
and
scas
pop
and
lods
mov
sub
fwait
push
shlb
push
rcrb
jbe
fsincos
push
push
adc
loope
xchg
xor
jg
outsb
mov
shll
cmp
fiadds
call
cmp
test
or
outsb
in
mov
push
push
mov
inc
push
mov
sub
sub
inc
mov
cwtl
stos
repnz
mov
sbb
pop
dec
call
mov
sub
lahf
shll
dec
in
push
ret
shlb
decb
lahf
fcom
scas
xchg
lds
inc
cmp
shrl
xchg
push
mov
rorl
xchg
xor
cmpsb
pop
cmpb
mov
mov
push
jb
mov
xchg
ja
call
add
mov
scas
xor
enter
testl
cmp
dec
mov
and
in
pop
mov
fldpi
fwait
mov
out
pop
pop
push
pop
movl
test
cmp
sahf
push
dec
lahf
mov
sarl
faddl
jle
in
dec
mov
loop
add
movb
je
mov
sti
cwtl
cmp
xchg
mov
push
inc
and
jno
or
xchg
xchg
ljmp
or
mov
mov
fcomp
cmpsl
xchg
sarl
cmpsb
mov
test
andl
movsl
dec
adc
js
adc
pop
adc
push
adc
jnp
jge
fcoml
shlb
mov
inc
nop
push
mov
xchg
clc
fimuls
std
outsb
mov
jno
stos
jbe
es
mov
fstl
xchg
faddp
add
lds
cmp
shll
mov
jb
popa
jno
repnz
lds
sub
mov
push
pusha
lds
xor
arpl
dec
mov
out
insb
mov
add
xlat
push
iret
hlt
mov
add
jns
push
add
cli
ljmp
xchg
push
jl
sbb
push
test
jns
sbb
lahf
adcb
sbb
mov
pop
mov
inc
adc
xor
mov
int
cwtl
dec
insb
pop
mov
push
cmp
pop
pop
xchg
push
push
and
inc
pop
cld
sbb
clc
dec
addr16
loop
imul
addr16
sub
into
test
cmc
das
rcrl
lahf
mov
dec
fbld
sti
mov
shl
push
sbb
push
dec
js
mov
push
jp
pushf
inc
fimuls
test
mov
lret
test
cmpsl
mov
hlt
mov
orl
jno
push
adc
lret
out
hlt
mov
lock
mov
and
movsl
xor
test
cmp
leave
jne
adc
in
stc
mov
jns
pushfw
cs
sarl
and
icebp
push
fxch
cmp
leave
push
sub
arpl
subl
mov
fstps
xchg
sub
mov
test
lock
fwait
dec
int3
out
mov
aam
mov
xchg
mov
lret
mov
std
jp
xchg
insb
and
testl
insb
fldt
add
add
jg
sub
xchg
cwtl
jne
out
punpckhwd
lcall
ficompl
ds
or
cmpsb
mov
mov
pop
divl
xor
outsb
ret
ss
mov
jl
imul
bsr
add
jp
shll
sarb
xchg
in
mov
and
sbb
inc
dec
stos
push
xor
jecxz
aad
push
adc
in
jecxz
pop
push
dec
idivl
enter
push
sti
or
filds
jle
sbb
or
cmpsb
inc
lret
fisttpll
aas
jge
dec
repnz
pop
aas
push
cltd
inc
mov
test
push
adcb
jmp
mov
insb
iret
sub
lret
xchg
stc
vpand
dec
sbb
and
jg
mov
jns
movsb
popf
jp
mov
ds
addr16
cmpsb
cmc
ds
in
aad
ljmp
cmp
test
jmp
sbb
xchg
sahf
roll
lcall
cmpb
xor
add
or
les
or
push
xchg
mov
xor
test
mov
ror
fildl
jo
out
js
popa
jbe
jge
push
or
into
mov
xchg
in
pop
lods
dec
mov
test
or
loope
in
mov
xchg
jmp
adc
xor
cmpsb
mov
xchg
repz
and
movsb
sbb
int3
push
xchg
xchg
jbe
loope
ljmp
jno
pusha
out
mov
pop
pop
cmp
or
xchg
decl
cmc
adc
mov
shld
jae
addr16
jbe
jno
ret
add
aaa
and
jp
int3
scas
daa
jno
mov
cmp
add
fdivs
sbb
ljmp
arpl
mov
gs
jns
mov
cmp
test
pusha
mov
mov
add
and
xchg
xchg
dec
jbe
pop
or
mov
adc
fdivs
int
mov
mov
push
scas
inc
rol
add
aam
mov
and
jo
and
adc
pop
mov
jne
lahf
add
pop
incb
in
lret
mov
push
lret
sub
aad
mov
mov
push
xor
mov
xchg
dec
data16
mov
dec
mov
xchg
xlat
pop
mov
hlt
leave
lds
adc
inc
insl
mov
jle
cs
popl
mov
test
rol
push
jp
int
scas
rcll
lret
cmpsl
imull
les
jbe
pusha
sub
xchg
sbb
inc
lods
jnp
in
cmp
push
inc
je
inc
cmp
cs
test
jnp
mov
sbb
clc
add
repz
jmp
cmp
jle
adc
sbb
cs
xchg
rorb
lea
shrl
lods
insl
ret
fistl
js
mov
dec
jns
jno
fsubrs
scas
dec
push
addb
jl
out
lods
xchg
jp
xchg
cwtl
pop
cmp
sbb
dec
xchg
enter
fs
cmp
movsl
roll
dec
mov
or
pop
shrb
insl
pop
ret
mov
movsb
xor
repz
leave
pushl
push
adc
mov
cmp
cmp
sbb
test
dec
inc
ret
xor
fnstsw
xchg
add
fidivl
add
xchg
dec
xchg
std
pop
fcomps
pop
popa
xchg
xlat
mov
cmpsb
push
nop
mov
cld
icebp
sub
pop
and
leave
insl
pushf
divb
push
shll
pusha
in
pop
repz
mov
xchg
mov
xchg
xchg
dec
push
pop
jnp
mov
push
sub
inc
pop
jbe
and
das
call
inc
lret
inc
or
mov
xchg
fldl
repnz
stc
add
movsl
shr
in
sbb
ret
pop
imul
or
fisubrs
pop
inc
sub
push
out
mov
mov
scas
or
cmp
pop
enter
outsl
pop
xor
inc
imul
pop
or
shlb
push
mov
xor
mov
imul
jge
add
jge
mov
mov
scas
repz
ret
pushf
jmp
in
dec
sub
jecxz
xor
sahf
imul
xchg
jp
dec
inc
or
stos
lock
fstl
iret
mov
fsubs
and
mov
dec
test
adc
test
push
divb
das
out
movsb
mov
icebp
ljmp
bound
loope
andb
loop
mov
inc
fcomip
das
inc
xchg
sbb
xor
mov
call
fstpl
inc
lods
inc
fwait
leave
aas
repnz
std
dec
popa
lcall
fdivrl
in
out
cmp
ss
inc
movsl
inc
add
mov
xor
jecxz
in
cwtl
xor
rcrl
fs
testb
imul
das
fwait
popa
mov
loop
xchg
je
enter
sahf
repz
sbb
scas
jns
lods
mov
mov
push
xor
lods
dec
pop
cmp
dec
aas
repz
and
pop
push
push
add
shr
dec
lock
imul
push
sbb
jno
add
cmc
cltd
cmp
dec
mov
mov
ret
ljmp
push
push
loope
mov
jmp
xchg
imul
pushf
sti
es
cmpsl
add
iret
ljmp
pop
mov
sbb
aad
and
pop
jle
ret
or
cmp
cmpsl
and
sub
lret
and
pop
pop
mov
mov
fwait
xchg
ja
push
fisubs
stos
dec
xchg
mov
xchg
add
sbb
sub
or
push
into
or
push
out
aam
ret
sbbb
xchg
adcl
jg
mov
pop
mov
cmp
xchg
adc
addr16
mov
add
les
or
pushl
xlat
roll
pop
xchg
sahf
jns
les
or
inc
dec
push
movsl
add
int
lret
xor
dec
and
movsb
pop
mov
xor
push
xchg
aaa
pushf
or
push
dec
lock
fcoms
mov
inc
mov
cltd
cmp
jle
xchg
xchg
push
mov
aaa
mov
lret
mov
adc
and
inc
js
mov
insb
xchg
jmp
pop
push
sbb
aam
in
push
inc
jne
jns
je
sahf
jbe
xchg
mov
xor
nop
flds
mov
adc
sbb
mov
pop
and
shrb
mov
in
outsb
pop
pop
dec
pop
movsl
ret
pop
sahf
jae
pop
dec
inc
mov
js
sub
in
push
mov
add
fadd
cmpsb
or
or
mov
mov
das
out
daa
jne
out
test
movsb
pop
jmp
popf
xorb
inc
adc
push
push
popf
sub
rolb
nop
mov
pop
add
cltd
movsl
aas
inc
sbb
cmp
idivl
insb
cmp
mov
dec
mov
lret
or
cmc
or
jbe
lods
pusha
adc
gs
mov
inc
mov
dec
or
push
push
add
andb
and
out
ja
fwait
jl
lret
fadds
ja
xchg
ss
cmp
outsl
pushf
inc
fwait
gs
loop
bound
into
inc
out
push
or
gs
sahf
addr16
in
xor
ds
in
outsb
mov
lds
clc
rorl
jl
icebp
sti
movb
in
lods
loope
xchg
imul
sub
mov
sahf
xchg
inc
sbb
or
jbe
mov
aaa
add
push
fldlg2
pop
mov
bound
push
pop
shrb
add
jge
push
mov
push
and
add
lods
repnz
lods
dec
push
lret
aas
movsl
int3
es
in
into
je
and
movsb
lods
mov
xor
roll
mov
mov
sbb
sbb
jmp
and
pop
test
add
out
xchg
xchg
fs
jbe
js
in
lret
xchg
fst
push
mov
fbstp
mov
movsl
pushf
cmp
in
pushf
mov
inc
rcrb
fsts
jg
cmp
rorb
insl
or
sub
inc
dec
cs
lret
ficoms
sub
bound
push
lcall
or
xchg
test
ljmp
mov
or
mov
mov
or
inc
xorl
push
in
cmpsb
sbb
xchg
xchg
push
mov
filds
lds
negb
jg
rcrb
push
adc
nop
jne
jbe
jno
fistps
lods
add
ss
xchg
imul
push
repnz
std
pop
push
ror
outsl
dec
lods
loopne
addr16
ljmp
jb
jo
push
ret
adc
in
inc
or
das
and
and
es
es
addr16
dec
jge
fcmovnbe
das
pop
mov
jae
mov
dec
cli
lcall
mov
jecxz
test
loopne
std
sub
daa
xor
shll
mov
divl
ds
cli
mov
in
dec
das
stc
mov
bound
insb
stos
addr16
pop
dec
into
push
outsl
fsubs
mov
pop
mov
dec
mov
or
jae
pop
addr16
in
decl
inc
mov
test
mov
or
test
aad
push
ficoms
int
insl
icebp
iret
or
mov
pop
mov
sbb
mov
pop
xchg
mov
lods
mov
inc
scas
fwait
xlat
push
pusha
das
inc
or
xor
inc
stc
cmp
int3
add
jl
into
adc
mov
insl
cli
xchg
int3
gs
imul
pop
test
mov
icebp
leave
jle
lea
mov
scas
xchg
add
les
mov
das
pop
or
or
cld
sbb
push
push
sub
jae
xchg
daa
inc
xchg
inc
pminub
mov
inc
xchg
fdivrl
cmp
pop
cmp
add
in
out
repnz
mov
stc
push
test
shlb
insl
pushf
lock
pop
out
xor
pop
std
imul
imul
ror
adc
adc
test
jno
mov
lret
orl
and
js
shll
sahf
inc
addb
fmull
add
xlat
mov
dec
das
push
fs
add
dec
cli
dec
push
dec
mov
arpl
punpckldq
jno
out
and
fisttpl
jmp
pop
mov
decb
mov
roll
inc
mov
xchg
iret
fcoml
movsl
sti
sbb
jae
std
imul
mov
andb
aam
pop
dec
rcrl
popa
in
pop
out
fisttpl
dec
push
cmp
inc
lea
dec
sub
loope
mov
mov
cwtl
test
in
xlat
push
in
push
mov
sahf
ret
movsb
fcompl
mov
fldl2t
mov
cmpsb
je
pop
lret
cmp
mov
and
addb
ja
loop
mov
mov
int
ficomps
adcb
call
or
inc
mov
vmread
sbb
and
loope
mov
pop
inc
xchg
enter
push
imull
jl
mov
cmpsl
or
cli
jmp
pop
ret
or
pushl
inc
lods
outsl
dec
mov
ret
xchg
jmp
mov
sub
mov
and
cli
sbb
push
xor
push
mov
add
lret
push
imul
fildl
fstpt
repz
dec
std
clc
lret
add
push
xchg
insb
in
xchg
add
call
pop
fsubrs
ljmp
in
ret
sti
fnstcw
or
das
aaa
pop
loopne
imul
add
cmp
jg
in
lods
push
repz
mov
sahf
cld
mov
jge
push
push
lcall
out
call
xchg
mov
jmp
jle
je
les
xor
fnstenv
sbb
dec
fisubrs
das
loop
inc
push
ftst
jno
push
ss
hlt
xchg
aaa
mov
xchg
insl
mov
cmp
sbb
imul
cwtl
std
jg
stos
mov
cmp
scas
mov
mov
shlb
mov
jne
gs
sbb
mov
lea
jns
stos
sub
mov
into
mov
rol
inc
insb
adc
add
out
out
orl
int3
mov
scas
sub
repnz
cmp
les
jmp
sarb
xchg
sbb
pop
pop
insl
pop
xor
inc
push
iret
inc
mov
mov
xchg
sub
ss
cmp
mov
jae
add
rorl
sub
sarl
gs
or
js
pop
pop
js
push
ljmp
int
imul
repz
adc
mov
sti
lock
shlb
std
adc
fwait
mov
mov
sbb
repz
imul
scas
xor
movsl
mov
mov
mov
nop
xor
sub
aad
mov
jo
pop
sbb
loope
adc
add
dec
push
xchg
pop
aam
scas
scas
loopne
je
mov
inc
sbb
xor
cmp
jle
cwtl
shrl
and
jae
inc
pop
mov
aad
repnz
sarl
loopne
dec
jecxz
scas
loop
je
and
sub
fwait
jecxz
nop
mov
iret
pop
add
enter
inc
jno
cmpb
add
loop
push
stc
inc
es
enter
dec
mov
repz
sbb
sub
cmp
sbb
or
into
int
mov
popf
rcrl
lds
fldenv
jl
fwait
pop
mov
jbe
int3
daa
or
scas
mov
stc
pop
mov
cmp
dec
jae
in
aam
cmp
out
mov
xchg
movsl
pop
sub
rol
cld
call
jecxz
pushf
xor
jge
daa
mov
cmp
add
ljmp
adc
adc
push
xchg
sbb
push
push
addr16
cmp
stos
pop
aad
adc
mov
pop
repnz
or
push
fisubrl
push
pop
lods
lret
stc
les
xchg
pop
jge
sarb
xchg
xchg
xor
jmp
addr16
mov
mov
xor
leave
jp
dec
jmp
adc
lret
dec
movsb
dec
push
lea
sarl
fildll
addb
int
stos
xor
pop
cmp
pop
push
std
loope
ja
cmp
repz
or
movsb
shr
movsl
push
clc
push
movsb
xor
add
and
in
sub
stc
jne
pop
cmp
std
stos
outsl
push
mov
xchg
in
push
add
sbb
hlt
in
bound
lock
cs
dec
inc
loope
outsl
loopne
arpl
lret
mov
mov
mov
add
and
gs
mov
inc
mov
sbb
mov
lds
push
adc
jmp
pop
push
sbbb
lock
pop
aas
mov
pop
pop
mov
xchg
jge
add
shrb
popf
xor
test
sub
mov
outsl
adc
push
dec
mov
daa
xchg
sbb
movsl
cmp
dec
cld
cli
jl
lods
inc
rcr
xchg
cmp
mov
dec
mov
into
mov
cmc
cli
xor
add
mov
xor
test
mov
ror
sub
and
jl
cli
testb
jno
pop
or
push
insl
test
in
and
push
addr16
mov
scas
adc
cmp
lcall
xchg
ficoml
fildl
sub
inc
inc
push
outsb
cmp
imul
lods
ret
ja
mov
mov
push
leave
cmp
pushl
ljmp
xchg
mov
stos
sub
mov
sbb
insl
mov
lds
jae
or
fnstenv
adc
repz
rcl
mov
xor
mov
mov
push
iret
int3
dec
cmp
test
pop
lock
mov
jnp
dec
es
xor
imul
test
fcoms
jnp
dec
pop
push
mov
sub
int3
pop
xchg
and
push
cs
jns
inc
mov
sub
xchg
loope
cmp
icebp
xor
adc
mov
leave
adc
jbe
pop
push
daa
cmc
or
dec
lcall
xor
jnp
sub
xchg
add
daa
and
int3
mov
dec
xchg
sub
nop
push
push
idivb
and
pop
out
fwait
roll
and
inc
cmp
mov
sbb
lcall
dec
sbb
pop
push
and
jnp
hlt
ss
das
or
ss
and
pop
ret
sub
scas
xchg
dec
jno
pop
daa
and
dec
and
adc
mul
orb
mov
shrl
insl
inc
jae
push
stc
rcrl
push
push
mov
mov
fs
or
ljmp
mov
in
mov
cmp
mov
es
pop
fdivs
and
jae
or
cmc
xchg
sbb
pop
leave
enter
pushf
outsb
call
outsl
gs
mov
dec
push
mov
cs
adc
in
mov
inc
mov
pusha
dec
fisttpl
xchg
mov
lock
or
xchg
xchg
in
ret
pop
sahf
cwtl
aam
push
int
stc
adc
leave
mov
inc
lods
cld
or
jno
in
push
ds
sub
push
out
aaa
inc
test
xchg
outsl
or
pop
dec
lock
int3
adc
jnp
loope
loop
leave
xlat
loop
xor
and
push
and
or
fs
add
fwait
je
dec
push
cmp
bound
xchg
lds
xchg
data16
cmp
jo
out
mov
mov
sbb
hlt
sub
xchg
sbb
push
jle
jo
out
cmp
inc
scas
cs
push
jecxz
mov
out
jp
rcrb
in
dec
in
popa
pop
xchg
bnd
shll
pop
lock
mov
dec
loopne
mov
fs
jae
xor
negl
sbbb
inc
xor
pushf
int3
popa
inc
mov
push
add
inc
push
call
cmpsb
cmc
cmp
das
fistpl
call
shrb
sub
ss
jle
pop
fistl
sub
lods
shlb
cmp
outsl
push
add
dec
add
pop
fst
add
pop
sahf
jo
ror
cmp
cmp
sub
aas
pop
cltd
orl
xchg
std
scas
and
jno
adc
mov
mov
adc
pop
jmp
addr16
add
inc
dec
in
add
adc
xor
sub
xchg
test
stc
aad
inc
inc
cmp
popf
mov
push
jmp
in
mov
sbb
dec
mov
stos
imul
out
add
xchg
and
cmp
inc
sub
dec
sbb
movsb
cmp
xchg
dec
imul
dec
sbb
out
test
out
fcompp
stc
bound
fmull
lret
aaa
mov
pusha
pushf
or
inc
fstl
and
int3
xlat
mov
push
out
jl
mov
sub
dec
iret
cltd
in
cmpb
leave
mov
out
adc
xchg
movsl
adc
jl
and
fstpt
out
jle
xchg
rcl
sbb
pop
fdivr
mov
out
mov
push
xor
inc
outsl
xor
popf
pop
ds
loop
stos
push
clc
sti
out
in
mov
xlat
ret
pop
call
jl
lods
xchg
sub
loopne
js
sub
or
jge
sbb
dec
test
in
or
push
dec
rcrl
dec
outsl
jo,pn
out
xor
outsb
jae
ficoms
pop
ret
out
cmp
push
in
add
mov
enter
cmp
fstl
mov
push
stc
rcrb
mov
push
xchg
push
aam
nop
in
mov
mov
loop
js
sbb
mov
nop
cmp
inc
mov
incl
xor
push
push
mov
mov
repz
cmp
shll
inc
xchg
fmuls
mov
xor
pusha
fxtract
sub
fistpl
jnp
popa
pusha
sbb
add
and
stos
daa
mov
xor
cmp
aad
in
jbe
sub
xchg
jo
adc
mov
jno
push
dec
lret
dec
sahf
mov
or
mov
fwait
push
inc
rol
hlt
push
out
mov
jle
lock
adcb
repz
add
movsb
imull
mov
ret
dec
push
ss
loop
sbb
pop
inc
popf
add
and
push
es
sub
sti
jns
lret
enter
scas
cmp
pop
repz
lods
and
or
cmp
inc
pop
sarl
dec
dec
dec
js
mov
pop
pop
sub
loope
repnz
push
push
inc
lret
mov
jno
neg
inc
les
and
xchg
mov
cltd
add
cmpsl
push
xor
cmp
loope
add
jnp
push
iret
xchg
popf
leave
ja
cmc
mov
scas
orb
or
adc
or
insb
dec
sbb
mov
adc
outsb
add
into
pop
push
adcb
js
scas
test
pop
cli
sub
lret
jns
xchg
jae
jns
jb
xor
aaa
and
cmp
xchg
test
adc
shrb
cmc
ret
dec
in
in
adc
pop
mov
test
add
xchg
pusha
ret
sub
incl
fdiv
icebp
dec
adc
fcoms
mulb
lea
mov
gs
shlb
sbb
das
mov
test
int3
scas
jnp,pn
in
and
jne
stos
pusha
or
jb
push
sbb
xor
adc
movsb
jg
jmp
pusha
or
into
mov
mov
push
in
and
ret
add
out
mov
pop
sbb
or
sub
outsl
sbb
jns
hlt
std
cmpb
mov
rcrl
sti
mov
push
cmp
push
mov
xchg
bound
xchg
cmc
push
cwtl
and
popf
cmp
sub
jp
sbb
imul
aad
fs
fwait
or
push
div
cmc
xchg
jno
shlb
pushf
fidivrl
imul
frstor
dec
dec
and
push
cld
insl
sahf
shll
incl
lock
pop
cld
fs
mov
push
xchg
jbe
adc
and
pop
pop
mov
mov
sub
cmc
mov
ja
mov
or
xor
mov
mov
js
sub
pop
push
adc
cmp
fsubs
pop
ds
sbb
stos
add
inc
inc
in
xchg
dec
cld
sub
test
adc
stc
or
data16
jmp
popa
mov
das
dec
xor
push
dec
mov
dec
scas
repnz
mov
add
lods
sub
jnp
sbb
or
in
mov
pop
jae
mov
lea
pop
andb
sbb
jnp
pop
sub
ja
jecxz
jo
js
xorb
imul
loop
push
ja
lds
sbb
cmp
dec
xor
sub
jmp
int
int3
ret
cmp
or
push
fnstsw
sbb
std
cmp
addr16
enter
dec
cmp
in
or
imul
loop
lock
xchg
dec
xor
jae
cld
aas
add
mov
jp
mov
aam
adc
mov
push
dec
jo
and
bound
pop
xchg
shll
add
pop
mov
adc
mov
sbb
stos
sub
popa
dec
or
jb
xor
inc
or
dec
in
lock
pop
cs
jb
mov
xchg
gs
aad
ss
mov
pop
mov
adc
push
les
lods
and
jae
inc
js
inc
xchg
pop
jecxz
ret
mov
xchg
mov
or
lds
ja
hlt
xor
mov
in
mov
dec
push
iret
xchg
ret
jmp
js
and
fnstsw
addb
xor
insl
mov
pop
repz
iret
ljmp
pop
andl
push
adc
fistpll
pop
aaa
pop
roll
sub
push
and
push
test
jl
outsl
clc
sub
jle
insl
cld
pop
xor
sub
iret
ficompl
push
js
xor
xchg
incb
sbb
call
scas
shrl
push
leave
mov
pop
adc
aad
ret
push
arpl
mov
pop
mov
cld
jae
xlat
stos
inc
cmp
push
in
inc
mov
imul
lahf
push
movsb
xchg
in
bound
push
cmp
aaa
add
pop
jge
mov
pop
xor
enter
cld
int3
pop
jge
cmp
nop
aas
dec
mov
xchg
push
aaa
cmc
add
imul
mov
lret
stos
aad
push
sahf
sub
xor
adcb
cmpsl
test
fsubrl
xchg
ljmp
or
sbb
stos
pop
je
out
mov
jp
ds
pop
bndldx
lods
rcl
in
push
lea
rorb
addr16
sbb
js
cmp
shll
jnp
aas
sub
sub
and
cmc
pop
adc
mov
push
xadd
cmp
shrl
inc
aaa
mov
xchg
push
iret
test
mov
push
cmp
jbe
mov
shl
cmpsl
xchg
sub
mov
mov
mov
sbb
xlat
cmp
ja
mov
popf
nop
mov
in
inc
cli
lcall
xor
lcall
out
lds
subb
enter
lods
ret
cld
jnp
inc
test
push
xor
ret
ljmp
cli
sub
pushf
push
pop
xlat
je
push
lret
mov
lods
test
orl
push
or
sub
xchg
pop
cmp
div
cmp
and
lret
rcll
popa
loopne
mov
xor
stos
xchg
cmp
mov
push
inc
mul
adc
insl
into
repz
inc
bnd
neg
cmpsb
xchg
jmp
rorl
popa
jae
adc
icebp
cmpsb
add
or
call
add
jmp
popf
lock
enter
mov
push
xor
pushf
dec
pusha
pop
xor
dec
cmpps
lret
test
add
mov
popf
jb
jmp
filds
jns
push
or
adcb
loopne
das
sub
push
insb
sbb
cli
fisttpll
adc
in
adc
and
jge
mov
orb
mov
lods
imul
adc
loop
adc
lcall
push
cmp
add
xorl
mov
or
je
push
out
push
sub
cmpsb
cmp
xchg
pop
jae
push
dec
xor
jbe
int3
cmp
cwtl
pop
dec
sbb
and
test
mov
dec
es
jp
fbld
inc
and
pop
std
insl
pop
test
call
fcomps
aad
rclb
sbb
fmull
scas
mov
jp
das
inc
dec
mov
cli
xor
mov
jecxz
shlb
inc
das
lods
xor
ret
inc
inc
fistl
ret
adc
cmpsl
or
cmc
adc
or
inc
jb
sbb
add
sbb
jge
lcall
mov
loop
mov
sub
insb
test
stos
int3
mov
jmp
xlat
sbb
or
imul
std
shll
addr16
fsts
adc
bound
insb
dec
inc
pop
or
push
mov
out
sti
imul
adc
cwtl
shrb
push
mov
adc
shrl
dec
lds
xor
ljmp
inc
aas
jg
pop
pop
lods
inc
sbb
cmpl
fldenv
cmpl
jmp
add
and
loopne
lret
ret
mov
int3
pop
ljmp
addl
inc
fxch
lds
sbb
out
fisttpl
jo
mov
xchg
and
dec
xor
das
hlt
dec
inc
adc
lret
jo
pcmpeqd
push
add
dec
sbb
fbld
adc
idivl
pushf
unpckhps
clc
lds
js
pop
int3
mov
lret
cmc
sub
mov
out
int
and
arpl
popa
adc
inc
ss
lea
icebp
mov
jge
mov
cmpsb
lock
xchg
imul
mov
mov
jne
sbb
mov
lods
dec
pop
and
imul
push
hlt
pop
pop
add
mov
outsb
sbb
cmp
sbb
jg
lods
data16
add
cmp
add
int3
sbb
lds
fs
xchg
out
sti
ds
xor
add
cmc
mov
aaa
sahf
pushf
adc
dec
aam
mov
fistpll
nop
cli
inc
sbb
aaa
ficompl
or
cmp
nop
add
or
popa
inc
jle
xchg
mov
mov
std
pop
and
je
data16
cmpsb
jge
cltd
fwait
sub
imul
imul
dec
testb
insl
pop
jno
jl
or
dec
lods
xchg
push
or
xor
fistl
out
dec
jmp
bound
mov
insl
pop
repnz
mov
add
xlat
inc
push
sub
push
shrb
mov
sahf
add
cmp
mov
inc
and
mov
push
jne
test
and
ljmp
inc
shrb
xchg
sbb
jle
and
push
mov
inc
jns
cmp
pop
cmp
add
pop
jle
jmp
popa
sub
scas
jge
jno
pop
ret
mov
pop
and
mov
int
arpl
aaa
jbe
xor
jb
in
and
sub
pop
fs
push
xchg
push
cwtl
loop
sti
iret
cmp
sub
xor
push
dec
popa
lret
jle
test
mov
xor
mov
lahf
mov
icebp
sub
int
cld
mov
or
insl
dec
cli
mov
rcl
mov
adc
mov
pop
mov
cmp
js
sbb
pop
ret
popa
jns
jnp
and
xor
push
pop
testl
out
pop
fdivrs
stos
imul
sarl
or
std
mov
scas
ret
dec
fnstsw
ss
aad
jbe
ret
out
icebp
pop
add
sub
push
lea
movsl
pop
add
rol
loopne
icebp
push
stc
sub
push
loop
fucomip
lea
insb
cmpb
bnd
lcall
push
mov
into
lds
lcall
and
inc
les
mov
push
icebp
mov
xor
xchg
int
enter
cmp
inc
data16
inc
out
pop
mov
sbbb
sbb
push
push
push
fistl
nop
sub
lds
pop
add
std
mov
mov
dec
into
popf
xchg
cmp
jae
xchg
or
lcall
stc
jge
push
arpl
fwait
roll
popf
inc
fists
ds
jg
aam
adc
cmp
adc
mov
aam
sbb
xor
nop
push
ljmp
clc
mov
add
cmp
jp
add
sub
jp
mov
jae
scas
jno
dec
dec
icebp
es
mov
sbb
lods
aam
inc
cwtl
pop
xor
dec
adc
cmp
nop
in
mov
nop
cmc
and
into
push
movsb
mov
out
mov
aad
gs
loope
xor
shll
sbbl
cwtl
in
aad
jmp
fs
aam
inc
mov
lock
bnd
test
int
pop
push
cmp
mov
mov
mov
xorb
in
or
push
push
movb
push
mov
mov
sarl
mov
adc
or
jmp
push
xorb
xchg
in
sub
sahf
ja
movsb
aaa
mov
sub
cmp
add
rorl
pop
dec
xor
repz
mov
mov
sbb
or
call
js
dec
adc
dec
in
gs
xor
fwait
jecxz
mov
xlat
out
stos
mov
or
lea
aad
sahf
test
adc
xchg
push
pop
mov
loop
aam
jg
mov
test
shll
sbb
mov
call
jno
or
daa
lahf
add
inc
jbe
cs
sti
aam
stos
xchg
xlat
lea
imul
int3
pop
lcall
or
leave
jbe
fadds
jmp
mov
fstl
insl
les
incl
or
pusha
push
and
adc
xor
xchg
sub
dec
lds
pop
mov
or
jmp
fadd
xchg
push
adc
and
add
push
dec
mov
stos
loope
sti
add
popa
ds
mov
imul
out
add
outsl
in
mov
inc
add
xorl
aad
mov
jno
aam
xor
out
aas
decb
add
mov
pop
mov
fdivrl
sbb
push
cmp
lret
and
pop
pop
mov
sub
in
in
lock
lock
xor
or
stos
mov
sbb
gs
mov
popa
mov
test
push
jo
lock
adc
iret
and
jle
aas
jl
pop
ret
or
push
mov
mov
stos
xor
or
ret
lock
inc
pop
pop
mov
iret
int3
sahf
js
dec
jp
cltd
lret
cmc
inc
pop
incb
push
adc
iret
push
cli
adc
push
jp
pushf
mov
pop
push
sbb
orl
fsqrt
shrl
xor
mov
stc
int
inc
dec
pop
cmc
lds
dec
pop
pop
repz
add
fwait
out
sub
inc
int
sbb
out
dec
jg
add
into
adc
outsl
sub
push
mov
aad
subb
movsl
push
aaa
dec
xor
mov
push
repnz
test
pop
jp
fwait
outsb
pop
dec
shrb
bound
fimull
pmullw
jecxz
outsl
movsl
and
js
shr
sub
jb
mov
mov
mov
fiadds
mov
mov
mov
pop
in
and
xchg
aas
push
or
aam
cmp
mov
pop
das
sub
pop
add
and
ret
lret
cmp
inc
scas
sahf
movq
imul
adc
xchg
ljmp
hlt
addb
sub
aad
mov
movsb
mov
dec
dec
xchg
pop
sub
jp
cmc
pop
push
test
mov
dec
or
lret
daa
std
push
pop
jmp
or
add
das
add
mov
ja
adc
mov
mov
dec
jnp
mov
ret
mov
outsl
adc
mull
cmp
loopne
mov
scas
outsb
push
sub
xor
pop
fcoml
mov
push
xor
out
xchg
ffree
adc
or
xchg
fs
cwtl
jmp
call
xor
arpl
int3
es
and
in
stc
sub
outsb
orl
stos
adc
mov
add
aaa
sub
or
enter
jne
push
push
push
pop
jp
xchg
aas
sub
dec
lock
mov
out
pop
mov
and
jg
dec
cltd
xlat
adc
aad
cmp
inc
lds
mov
mov
mov
lods
or
sbb
fcompl
pusha
jge
in
mov
cmp
xor
test
popa
and
jnp
and
or
sbb
lods
mov
ret
mov
fdivs
es
inc
jb
cli
pushf
iret
or
xchg
dec
clc
or
out
movsb
mov
dec
dec
mov
adc
push
rep
cs
adc
xchg
lret
enter
adc
dec
adc
sub
or
dec
pop
into
inc
clc
fisttpl
sub
roll
out
sub
call
ja
data16
add
enter
fimuls
stc
out
sbbl
mov
fcomps
jb
mov
or
xchg
mov
add
jbe
adc
pusha
mov
pop
ds
dec
fwait
mov
add
fnstcw
dec
ss
mov
jb
es
mov
xor
mov
sub
pop
mov
hlt
pop
cmp
inc
stc
pushf
push
roll
int3
adc
push
addr16
jp
mov
mov
add
fsubrs
mov
jne
mov
cmp
test
push
pop
pop
icebp
pop
mov
out
adc
sub
int3
stc
lahf
cwtl
fcompl
mov
test
lret
xchg
xchg
and
mov
or
xchg
jecxz
in
pop
dec
insl
dec
mov
push
int
sahf
xor
xchg
into
push
out
mov
cmc
jnp
xor
sub
or
in
aam
mov
scas
in
mov
inc
jg
int
cmpb
clc
fists
outsl
fsubrl
enter
add
mov
popa
mov
pop
outsb
inc
jnp
or
mov
xchg
fldcw
ja
push
inc
dec
mov
pop
icebp
sub
clc
sbb
cmp
and
jmp
popa
cmp
sbb
or
adc
stc
test
mov
mov
cmc
bound
or
aas
mov
mov
ja
pusha
inc
pop
adc
cmp
or
mov
push
std
xor
or
sbb
jns
cltd
test
jle
sarl
and
into
sbb
mov
jo
scas
push
fwait
mov
push
stos
mov
dec
push
inc
loope
leave
jns
xlat
and
sub
jg
insb
icebp
sub
cld
jo
popa
scas
xchg
xlat
or
jo
mov
int
in
out
lods
fwait
or
jge
gs
dec
mov
aad
in
cmp
dec
call
stos
mov
inc
test
adc
or
pop
js
sub
dec
mov
and
ss
popa
cmpsb
push
pop
imul
mov
fwait
add
sarl
loop
sahf
fnstenv
mov
ljmp
lcall
loope
jle
dec
mov
cmp
imul
mov
loop
scas
pop
push
mov
lods
stos
decl
sbb
loopne
fistpll
add
mov
jae
in
stos
inc
add
adcl
xor
push
imul
xchg
dec
inc
mov
or
notl
sar
mov
mov
jns
mov
push
iret
mov
pop
das
addr16
mov
or
or
in
mov
or
cwtl
enter
jb
or
leave
cmpsb
push
mov
adc
imul
pop
cvtpi2ps
add
daa
jmp
fwait
jo
pop
jp
clc
imul
mov
fcmove
mov
fdivp
cmpsb
xchg
sub
sbb
out
cmp
sub
push
mov
in
jl
pusha
cli
sub
filds
test
cmp
xor
jb
dec
cmp
mov
mov
pop
repnz
ret
pushf
xchg
mov
inc
xchg
or
sub
sub
xchg
ret
into
cmpsb
int
jg
mov
lret
xor
and
mulb
push
rolb
int3
xchg
cltd
lds
inc
sub
pop
xchg
in
scas
shl
imul
mov
dec
jp
mov
scas
lock
mov
vpcmpgtd
and
dec
or
jbe
fcomi
push
cmc
sbb
aad
das
sub
cmp
add
pop
repz
insb
mov
adc
mov
es
lds
and
mov
pop
mov
dec
xor
addr16
lcall
inc
mov
addb
dec
jle
movsl
test
jecxz
pop
das
or
shll
cmc
into
or
fiadds
fisubs
adc
ficoml
mov
mov
add
jbe
stos
dec
adc
popa
mov
addr16
sbb
add
xor
jge
sbb
sbb
and
outsl
movsb
pushf
and
call
inc
add
ss
xchg
fstpt
enter
lock
jb
mov
cmp
push
cmp
movl
adc
mov
xchg
xchg
aaa
or
and
and
ljmp
sbb
mov
sbb
mov
jbe
push
push
cmp
cmp
xor
fistpll
popf
and
repnz
sbb
mov
inc
fildl
jecxz
out
mov
inc
mov
lods
xchg
sbb
fisubrl
insb
test
in
sub
repnz
jg
dec
sub
aas
pushf
inc
dec
add
cmpsw
cmpb
push
dec
rcll
xorb
stos
sarb
ficoms
fsubp
mov
mov
inc
jecxz
jmp
and
int
mov
and
push
test
lahf
stos
clc
lods
lcall
xchg
insb
sub
shl
cmc
adc
xchg
outsl
add
jecxz
and
fmuls
les
dec
inc
mov
lea
nop
dec
sub
mov
fstps
xchg
or
and
mov
sbb
xor
xchg
and
shr
push
adc
or
push
sbb
jbe
jge
ja
pushf
adc
lahf
fistpll
mov
mov
dec
cmp
sbb
cmpsb
popf
dec
mov
lahf
xchg
cmpb
clc
movsl
fdivrs
cmp
je
clc
mov
adc
or
adc
cmc
or
cwtl
adc
dec
pop
nop
sbb
adc
adc
pop
jbe
ret
xchg
push
es
into
jle
fs
lea
mov
out
pop
fdivl
test
out
push
fiadds
cmp
dec
mov
in
cmpb
decb
lret
cmpsl
sub
jbe
xor
mov
adc
and
mov
mov
dec
addl
and
daa
xor
push
inc
jno
aad
popf
xchg
jmp
and
cwtl
outsb
xchg
aam
gs
push
jne
mov
sbbl
jg
ds
sub
sub
mov
and
loope
in
cmp
call
xor
icebp
jno
mov
in
push
cwtl
fisubrl
into
xor
adc
sarl
loop
jns
aaa
adcl
add
outsb
arpl
sub
jbe
lods
aas
jl
in
adc
dec
dec
addr16
lds
in
mov
jle
xor
dec
pusha
test
or
mov
push
cmp
fsubs
push
dec
inc
or
in
mov
ljmp
mov
sbb
jle
test
or
call
cmp
inc
jl
aam
xor
mov
sahf
push
outsb
lcall
js
jnp
pop
rol
xor
jl
popa
adc
aaa
sbb
inc
je
xchg
pushf
inc
leave
pushf
lcall
mov
pop
cmp
cmp
lock
movsl
es
in
aaa
shlb
jmp
xchg
je
sub
shrl
loopne
test
aas
iret
adc
orl
iret
icebp
push
pop
std
es
dec
cmp
fdivp
jle
rol
out
sbb
mov
mov
aas
mov
ss
adc
pusha
or
xor
stos
cmp
pop
lds
inc
mov
into
dec
fsts
leave
jno
fcmovu
mov
out
pop
mov
imul
adc
push
adc
add
pop
mov
cmpsl
mov
aam
dec
sbb
dec
jno
nop
adc
xor
data16
sub
cltd
orb
jle
cmp
sbb
or
stos
popa
inc
inc
lock
call
mov
repnz
xchg
setge
jmp
stc
outsb
icebp
fistl
push
outsb
xor
shll
jo,pn
shrl
mul
loop
cld
xchg
repnz
pop
mov
xor
and
jno
rcl
fisubrs
lock
lahf
jbe
lds
ljmp
jne
inc
and
fbstp
scas
mov
andb
test
sbb
in
and
jnp
mov
push
dec
outsl
inc
test
mov
pop
mull
dec
cmp
int
xchg
pop
xor
in
adc
add
addr16
mov
jno
mov
aam
xor
ds
adc
out
push
jmp
inc
ss
ret
inc
fcmovu
jmp
inc
pop
cli
adcl
mov
xor
xchg
sbb
jge
stc
mov
loope
push
adc
into
pushl
shlb
jl
nop
mov
add
fwait
cmpxchg
inc
idivl
cmc
loop
and
add
sub
push
inc
and
mov
cmp
push
dec
das
shll
cmc
pop
out
lret
daa
xchg
ss
dec
push
es
push
sbb
test
push
xor
push
orl
dec
dec
and
add
fists
inc
or
inc
ficoms
loopne
mov
sbbb
mov
jle
sub
dec
rcrl
rorl
pop
rep
xchg
pop
push
sub
arpl
jae
movsb
sub
lret
loopne
fnstsw
call
cld
bswap
cld
fisttpl
pushf
cmpb
data16
pushf
xor
sbb
je
cmpsl
and
subb
mov
or
lea
imul
mov
stos
adc
outsb
enter
jbe
test
or
mov
adc
les
cmp
add
xchg
push
add
xchg
push
bound
aaa
loope
leave
lea
xchg
pop
shr
mov
dec
push
mov
sbb
add
jb
push
lahf
mov
and
cs
xor
add
sub
aam
sti
fisubrl
dec
ret
call
mov
lcall
sbb
iret
or
dec
and
inc
and
cmp
cmpsl
sub
or
or
and
subb
scas
jae
cltd
je
mov
mov
pushf
in
or
pop
push
or
cld
and
pop
hlt
pop
in
and
add
mov
mull
pop
aas
xchg
cmp
or
das
add
ja
aam
inc
push
int3
sub
xor
inc
dec
stos
rcll
push
sub
mov
jle
jle
adc
iret
and
xorl
add
dec
lds
call
ret
cmp
insb
ret
dec
xor
mov
lahf
das
test
mov
dec
and
fs
int3
dec
lea
cli
pop
pop
ror
repnz
jp
add
cli
cli
push
add
call
enter
pop
stos
dec
jg
inc
lret
fistpll
bsr
xchg
xchg
inc
insb
into
ret
aas
dec
mov
push
sbb
jbe
or
out
xor
jbe
mov
test
mov
out
or
repz
add
push
xchg
pop
add
rorb
loope
add
cmp
and
pop
jg
inc
repz
add
and
inc
sub
scas
xchg
repz
out
inc
lea
add
rcll
in
addr16
in
sbb
fdivrp
pop
hlt
push
fnsave
dec
inc
in
lock
fdivs
call
mov
mov
test
pop
ljmp
xchg
leave
adc
sti
jbe
movntps
or
jge
adc
mov
cmp
gs
dec
jb
pop
pushf
mov
jge
add
add
mov
push
gs
out
dec
ret
jle
mov
dec
aad
pop
gs
sti
pop
pop
iret
jmp
pop
mov
cmp
les
outsl
lea
mov
pop
int
sub
jo
lods
inc
imul
loope
xchg
xchg
or
sbb
pushf
adc
push
je
inc
in
ljmp
fildl
push
shrb
aam
inc
sub
jmp
arpl
or
cmp
subl
xchg
pop
xlat
mov
lahf
sbb
aaa
sarl
pop
in
repz
lcall
popaw
cmp
xchg
mov
stc
adc
cmpsb
leave
arpl
aad
push
lods
das
nop
mov
push
insb
js
or
jnp
push
enter
dec
outsb
mov
mov
outsb
idivb
mov
inc
pop
add
insb
ss
xchg
in
sub
pop
aaa
cmc
xlat
scas
lds
call
gs
xchg
insl
or
out
and
dec
push
pop
mov
bnd
pop
dec
lahf
jae
movsl
mov
lcall
and
cmp
pusha
sarb
cmp
dec
adc
rcr
js
int3
lods
xchg
jae
or
test
in
je
sbb
in
loopne
and
sub
mov
es
imul
and
add
dec
call
push
cmp
loop
scas
pusha
ror
icebp
icebp
sub
mov
fstl
mov
xor
add
mov
popa
mov
pop
and
pop
jne
adc
sbb
jmp
daa
mov
in
push
sbb
mov
and
clc
call
and
jnp
xchg
stos
shlb
add
adc
in
push
imul
aaa
jns
repz
mov
stos
shl
mov
mov
adc
lahf
xchg
inc
dec
dec
jmp
test
xor
dec
imul
dec
ret
popa
xchg
mov
popa
int
js
mov
jae
loope
dec
movsb
or
push
loop
sbb
cmpl
cmp
std
in
cmpsb
pop
mov
sub
iret
call
push
ret
sub
push
into
int3
mov
and
pop
mov
pop
cmp
push
pushl
xchg
and
mov
pop
adc
push
rol
jno
subb
cmp
movsb
pmaxsw
xchg
cmpsl
mov
mov
gs
jmp
aam
sti
xchg
ss
bound
js
faddl
jne
popf
pushf
xchg
movsl
clc
fisttpl
cmp
iret
int
cli
add
adc
pop
iret
dec
imul
push
pusha
pop
lret
shlb
and
mov
pop
xor
int3
cmp
jp
jl
pop
ret
clc
dec
xor
push
call
sub
and
cmp
push
mov
insb
xchg
or
rcll
mov
in
ja
sbb
jecxz
mov
pop
stc
cli
xor
xor
adc
jle
jmp
jecxz
imul
sub
mov
mov
cmp
add
adc
hlt
fsts
movb
or
push
adc
or
fstps
in
jbe
icebp
fadd
and
daa
push
pop
lret
pop
loopne
mov
es
pop
lahf
pop
or
mov
mov
mov
cmc
out
sbb
punpckhdq
in
sub
or
cmpsl
cmc
pusha
popf
stc
sbb
push
sbb
cmpsb
test
ds
add
out
jmp
sbb
mov
mov
data16
mov
push
and
test
ss
aam
push
pop
pop
mov
popa
push
nop
or
xorb
sub
add
add
adc
push
rclb
cmpsl
jg
adcb
insb
mov
enter
sub
loope
pusha
dec
movsb
sbb
pop
call
cmpsl
dec
adc
dec
out
and
push
add
lret
xchg
jmp
xchg
adc
xor
add
add
test
sub
jb
mov
cmp
mov
push
frstor
xchg
pop
sbb
xor
dec
sub
mov
scas
lods
sbb
lock
in
std
icebp
dec
adc
cmp
xor
addl
or
iret
mov
incl
jmp
mov
jmp
cmp
idivb
mov
xchg
cld
pushf
mov
cwtl
fs
test
movsl
or
pop
sti
mov
inc
enter
jl
ljmp
jg
dec
jnp
mov
fsubl
push
fadd
dec
or
jno
inc
cwtd
and
push
inc
jl
mov
call
repz
ljmp
fdivrs
xchg
mull
lret
mov
in
mov
lock
loop
negb
jo
cli
out
test
push
lds
std
push
int3
in
push
in
das
inc
adc
dec
lahf
sbb
repnz
loope
sbb
mov
ret
lcall
repz
pushf
repz
les
jp
mov
aam
cmpsl
sub
lcall
int
xor
inc
inc
cld
lods
add
push
movsb
cmc
out
es
clc
cmp
dec
push
pop
mov
adc
jae
inc
jl
int3
jne
fs
insl
shll
outsl
sub
or
rcrl
add
pop
iret
icebp
test
jle
icebp
loop
xchg
push
cmp
imul
test
not
aaa
sarb
mov
ja
idivb
mov
fnstenv
sbb
in
mov
insl
jae
aam
adc
push
subl
push
fucomip
movsb
mov
mov
lret
mov
jne
cmp
add
addr16
aad
dec
jle
sbb
push
and
arpl
sbb
push
push
cmp
ljmp
mov
cmp
cmc
fsubl
nop
cmc
add
insb
push
push
add
cli
and
shrb
dec
popl
and
xor
cmp
cld
xchg
xlat
add
jns
xor
sbb
pop
dec
pop
ja
sub
cmc
pop
mov
mov
ja
adc
jp
mov
xor
call
insb
xchg
cmpsl
sti
mov
push
jle
push
sahf
dec
in
mov
and
int
cmpsl
mov
add
jmp
pop
sub
adc
jecxz
inc
cmp
jae
pop
or
sbb
xor
loope
jb
loope
aas
stos
xlat
and
loopne
cmpsl
data16
sahf
adc
sbb
xchg
or
test
adc
jmp
jbe
in
cmp
jle
lock
xchg
cwtl
pop
jbe
loop
test
scas
xchg
in
xchg
sbb
mov
stos
ret
sarl
js
xchg
pop
jae
dec
int
scas
sbb
and
fnsave
sub
inc
push
pusha
nop
cmpl
addr16
xchg
bound
leave
sub
int
fs
add
sahf
adc
pop
dec
add
add
adc
jmp
add
dec
movsl
xor
and
ret
call
shll
popa
mov
push
inc
mov
pop
mov
inc
popa
ds
out
std
popf
aad
decl
aas
test
int3
aam
rcl
lret
das
push
mov
cwtl
add
cld
xchg
rcll
adc
lcall
popa
les
imul
pop
cmp
out
fistpll
into
xchg
mov
call
jmp
mov
mov
hlt
stos
cmpsb
jecxz
daa
out
inc
js
es
insb
lods
iret
push
rcll
lock
adc
jno
cmp
scas
mov
clc
inc
call
je
int
pop
adc
inc
movsl
ret
cli
add
xchg
mov
inc
mov
sarb
pop
and
stos
or
popf
fbstp
lret
cmp
xlat
out
inc
mov
orl
pop
inc
push
or
adc
rol
dec
push
dec
hlt
loop
test
adc
inc
jb
ljmp
push
cmp
mov
push
pop
sbb
push
mov
repnz
sub
dec
inc
mov
jnp
addr16
scas
imul
inc
enter
jno
or
pop
fstpl
stc
and
jmp
aas
sti
sbb
xchg
cltd
mov
fdivl
cmp
movsb
sti
cmp
std
push
or
push
jmp
ret
xor
mov
cmp
inc
pop
xchg
xchg
jo
jne
inc
sti
or
jle
in
pop
mov
in
jecxz
sarl
pop
mov
mov
aaa
dec
sahf
jmp
jb
bound
cld
or
and
adc
push
testl
dec
lret
cmp
test
ja
mov
mov
mov
jb
jp
xlat
adc
stc
cli
cli
scas
mov
rorl
sbb
sbb
cmp
in
imull
in
pop
ja
xor
scas
pop
flds
dec
jle
ds
mov
sahf
mov
and
and
rcll
push
xchg
jne
sbb
xchg
dec
decl
imul
pop
pop
loop
aaa
pop
into
inc
pop
jnp
cmpsl
fimuls
jne
shll
loop
adc
stc
add
jo
mov
jg
mov
push
and
aam
stos
loope
in
jb
xchg
fimuls
repnz
pop
mov
xchg
mov
in
add
mov
int3
mov
cmp
cltd
out
dec
test
iret
sbbb
popl
xchg
inc
js
test
loop
test
lea
sti
sbb
fldt
xchg
cmp
rcrb
jl
outsb
and
in
sub
mov
cmp
mov
mov
lret
movl
loop
test
push
jno
sub
test
jb
xorl
fwait
jno
sbb
push
xlat
divb
dec
imul
and
pop
aad
adc
adc
add
std
jmp
mov
sub
xor
lods
movsb
inc
outsb
xor
dec
and
jne
outsb
test
in
lods
hlt
xor
sarl
je
dec
repz
fs
or
jo
icebp
mov
clc
std
lock
xchg
adc
ljmp
rorb
lahf
xor
cwtl
sahf
xchg
div
ror
cmpsb
inc
inc
add
fldenv
bound
repnz
fs
pop
into
bound
fs
dec
pop
pop
push
mov
outsl
pusha
popf
xchg
jnp
ret
lahf
cmp
arpl
cmp
out
hlt
shlb
mull
icebp
jle
pop
fnstenv
mov
mov
push
inc
xchg
and
insb
cli
and
push
mov
ds
xor
daa
push
aad
sbb
xchg
test
jae
and
xchg
ficoms
rorb
or
insl
aam
push
cwtl
push
enter
push
lret
cld
jp
add
pop
mov
xor
push
inc
mov
das
pusha
sbb
loopne
cmp
call
pop
push
sbb
push
and
cltd
imull
dec
xchg
movsl
outsb
jbe
mov
and
insb
jb
xor
out
pop
xchg
in
pop
pop
jns
and
sbb
mov
or
push
arpl
enter
sbb
add
xor
sbb
es
fsubr
loope
icebp
mov
sub
mov
inc
jge
das
subb
test
pushf
outsb
xchg
imul
ljmp
inc
arpl
adc
cmp
and
inc
push
pop
cmp
clc
cmpb
imul
or
pop
cld
cwtl
scas
pop
push
xchg
jle
dec
mov
sub
inc
mull
push
shlb
test
lcall
mov
dec
stos
sub
aaa
push
sub
cmp
test
push
repz
push
mov
fidivrl
pop
js
xchg
pop
cmc
shrb
addl
addl
ret
and
sarb
leave
and
js
addl
mov
sub
daa
sub
ja
mov
pop
sbbb
push
inc
cltd
lea
icebp
add
or
cmp
mov
pop
and
lea
and
pop
adc
iret
mov
push
mov
sbb
outsb
ret
insb
dec
fstps
jle
lea
mov
sbb
lods
pop
std
and
clc
mov
ret
out
pop
mov
or
or
in
sbb
and
mov
jge
jge
or
sub
clc
lods
in
sub
adc
pop
xchg
daa
shrl
hlt
dec
and
inc
mov
loope
push
call
in
push
inc
stos
arpl
js
mov
sbb
and
stos
cmp
movl
sbb
jns
adc
jge
mov
mov
ljmp
lods
jnp
add
lret
mov
stos
inc
or
xor
jge
pop
sbb
pop
jbe
call
push
fadds
jae
enter
js
js
fsin
adc
bound
in
movsb
mov
addl
in
shll
fdivl
insl
ret
jle
rcrb
call
xlat
imul
inc
xor
out
ror
lcall
in
pushf
xor
mov
mov
cli
dec
hlt
mov
push
cmpsl
pop
rcrb
push
sbb
sbb
cmp
push
stos
int
xor
std
pusha
or
divl
fadds
aad
dec
pop
jle
es
mov
xchg
jmp
ljmp
jecxz
add
mov
cmc
push
mov
bound
repz
adc
outsl
fidivl
call
xchg
jle
adc
add
and
pop
pop
mov
daa
sti
movsb
mov
xchg
cmc
xor
adc
lods
lods
cwtl
fnsave
add
cmp
push
mov
sti
lea
xor
cmpsb
mov
cmp
adcb
mov
icebp
jno
movsb
arpl
loop
test
leave
aaa
dec
lea
and
cmp
and
ljmp
add
addr16
in
lock
mov
cmpsl
cltd
fstpl
cmc
fs
inc
in
leave
mov
negl
std
sbb
inc
movsl
fistps
dec
sti
scas
mov
or
and
adc
xor
jl
inc
into
mov
std
xchg
inc
cmc
popf
fs
and
xor
shlb
gs
sbb
sbb
loop
ja
and
mov
aad
mov
mov
mov
sub
int3
add
fisttpll
repnz
add
test
push
jae
gs
jb
jo
jbe
inc
subl
out
jmp
leave
fstps
loope
sahf
or
dec
add
adc
popa
out
lret
mov
push
xchg
push
dec
inc
add
outsl
sub
insl
add
inc
inc
or
cmp
ljmp
push
hlt
in
jno
mov
notl
into
sbb
jae
cmc
in
mov
or
inc
nop
cld
filds
or
hlt
and
adc
stos
stos
inc
and
int
stos
and
xor
adc
mov
mov
push
std
or
dec
loopne
mov
std
inc
mov
push
sbb
xor
arpl
scas
jge
in
mov
aad
sahf
push
flds
or
xchg
mov
mov
push
test
jnp
cltd
into
push
lea
lret
adc
pop
movsl
inc
sbb
repnz
jae
xor
xchg
mov
inc
iret
jge
mov
lock
dec
call
or
sbb
rorb
mov
pop
push
jbe
loope
fucom
icebp
icebp
jo
and
in
mov
dec
jecxz
mov
iret
jmp
dec
jne
or
ret
mov
addb
mov
lods
lds
je
data16
xchg
or
or
ret
fs
xchg
sub
inc
pushf
lret
and
jns
mov
or
mov
sarl
inc
adc
lret
fs
testb
adc
pop
lret
mov
mov
std
adc
xchg
xchg
scas
xrelease
daa
pop
mov
cltd
rol
add
mov
mov
leave
mov
mov
push
gs
xchg
jae
lret
lret
in
sub
loop
lret
ret
fcmovb
and
lods
jle
fisubl
lock
inc
mov
pmuludq
popa
pusha
gs
xchg
add
sbb
mov
fsubrl
or
cmp
mov
or
pusha
jnp
push
jge
mov
sub
push
subb
mov
dec
jecxz
enter
jl
add
js
int3
mov
enter
mov
movl
jg
jo
les
mov
mov
add
rol
scas
mov
cmp
mov
xchg
fisttpl
jbe
add
lds
jo
das
mov
mov
imul
push
and
push
sbb
mov
sub
add
hlt
ljmp
fcmovnb
push
sub
jl
inc
out
sti
xor
pop
add
sub
xchg
inc
js
into
test
jge
xchg
ret
loop
lods
dec
clc
mov
mov
popa
outsl
push
xor
inc
mov
xor
pop
andl
pop
adc
cmc
int3
xlat
xchg
and
lcall
mov
lods
hlt
xor
pop
xchg
push
imul
mov
push
add
icebp
out
add
sbb
add
jecxz
stos
and
dec
xchg
pop
push
std
or
mov
mov
ret
jb
xlat
and
cltd
ret
test
sbb
loop
mov
imul
in
pop
dec
mov
or
sub
xchg
or
pop
mov
pop
lods
stc
insb
sbb
arpl
cmp
cmpb
fildl
jecxz
out
es
stos
mov
pop
sbb
mov
pop
mov
jl
test
jae
fists
push
test
xor
dec
lods
inc
xor
pop
xlat
dec
ret
or
lods
xor
mov
das
dec
dec
or
push
jbe
xchg
ficompl
sbb
sbbl
jo
mov
bound
fs
pop
ljmp
or
lea
pop
pusha
pop
cmp
xchg
cmpsb
ja
fstp
fcmove
in
notl
inc
xchg
cmpsl
icebp
adc
jo
lock
push
jnp
sbb
jmp
pusha
fdiv
mov
or
sbb
call
cmp
push
lods
js
inc
int
imul
push
xchg
scas
xchg
pop
lock
mov
mov
jecxz
leave
stos
pop
test
sub
xchg
arpl
cltd
subb
sub
in
aad
mov
mov
shl
push
jmp
test
es
outsb
int3
mov
jae
add
push
adc
lret
js
mov
mov
and
fwait
into
pusha
mov
lock
ja
add
movsl
je
dec
cmp
loop
lods
adc
iret
cmpsb
cmp
xor
adc
sbb
sahf
pop
sbb
xor
inc
xchg
popf
call
insb
insl
pop
mov
lock
xchg
sbb
les
mov
idivb
out
sub
or
sbb
xchg
cmpsb
inc
out
adc
push
scas
xchg
int
cmp
dec
in
imul
mov
mov
mov
mov
xor
pop
outsl
mov
arpl
test
add
jmp
or
and
fwait
dec
sbb
xorb
fsubl
call
insb
sbb
inc
cltd
pop
nop
ret
push
jns
cmp
jns
mov
jne
adc
push
sub
lcall
negl
mov
aad
test
mov
or
jne
add
push
or
pop
loop
iret
push
pop
mov
sub
pop
xor
test
push
adc
pop
mov
das
into
ror
cmp
push
or
inc
fsubrs
inc
popa
add
adc
adc
fisubrs
or
xor
cli
repz
xor
pop
jle
xchg
ljmp
jg
data16
jle
loopne
mov
mov
ja
xor
add
push
repnz
push
jmp
je
je
imul
xchg
cmp
push
sbb
mov
sub
jle
jns
scas
jns
fcoms
js
or
dec
pop
dec
mov
cmp
lea
cltd
in
shll
xor
cmpsb
loop
pop
add
lret
mov
xor
mov
jb
or
push
mov
jmp
es
test
shll
mov
pop
or
dec
xchg
xrelease
push
into
or
ret
lods
pop
xor
sbb
lahf
shlb
inc
inc
sahf
sub
or
pop
xor
ja
es
ljmp
lds
scas
xchg
cmpsl
adc
push
push
stos
ss
pop
mov
xor
jns
mov
jl
mov
mov
fs
rcrb
int
push
test
int
mov
and
or
imul
ss
mov
shl
pop
fmuls
xchg
inc
pusha
xor
sub
in
iret
mulb
xchg
inc
cmpsl
lock
es
cmp
cld
mov
and
adc
filds
mov
or
add
xor
test
push
fs
mov
pop
jno
xor
push
xchg
jecxz
rcl
jae
hlt
loopne
fidivrs
xor
push
lahf
gs
add
xchg
sub
pop
jnp
sub
cmp
mov
push
cmp
xlat
pop
sbb
and
leave
mov
insl
mulb
ljmp
add
in
jge
stos
cmpsb
sub
cmpsb
imul
ret
xor
pop
movsl
mov
mov
jp
addr16
inc
dec
push
ss
xor
out
in
ret
mov
addr16
stc
lahf
iret
sub
out
add
repnz
icebp
xchg
push
sub
mov
daa
and
xlat
push
and
inc
stc
in
test
xchg
cmp
sub
adc
daa
jge
sti
in
push
push
data16
nop
pop
xchg
push
pop
cmp
mov
push
int
arpl
cmc
fildll
mov
sahf
popf
jns
js
ret
shl
adc
aaa
mov
dec
loope
or
shl
dec
dec
rolb
dec
adc
adc
popa
push
mov
push
in
mov
inc
and
cs
cltd
mov
jecxz
rolb
test
cmpsl
inc
sbb
pop
fiadds
rol
aam
fucom
lret
mov
push
in
inc
rcll
decb
in
addr16
sub
scas
push
push
icebp
es
xorb
pop
sub
into
adc
xchg
out
mov
stc
xor
push
test
mov
cmp
cmp
js
stos
sub
addr16
mov
xchg
pop
lods
fwait
movsb
out
lahf
cs
aas
daa
loopne
stc
nop/reserved
mov
outsb
add
addr16
movsl
xchg
inc
lret
pushf
out
int
sub
shlb
mov
pop
sub
mov
push
mov
in
push
adc
xlat
cmp
pop
add
test
fiaddl
dec
pop
add
popa
loop
mov
jno
notb
shlb
inc
adc
test
mov
test
mov
cmp
data16
movb
outsl
xchg
scas
push
dec
xor
out
cld
and
xor
mov
arpl
das
jg
in
xor
cmpsl
sbb
in
imul
outsl
ss
inc
test
fdivrl
in
jmp
lods
outsb
adc
jge
mov
xchg
mov
sub
sub
xor
and
mov
mov
loop
push
xchg
in
sbb
add
pop
sbb
outsb
addr16
sub
push
and
add
call
adc
xchg
les
jge
or
mov
les
xchg
movsl
aas
insl
inc
pop
stc
das
or
sub
sahf
jne
gs
pop
pusha
out
or
xchg
mov
subl
std
cmp
cmp
push
push
mov
ja
test
push
data16
push
push
stc
or
arpl
pusha
addb
out
xor
call
mov
call
es
mov
loop
in
xlat
push
inc
push
mov
sbb
add
ror
ljmp
pop
xor
sbb
mov
jge
lods
das
popa
jne
cmp
sub
pop
pusha
jecxz
cmp
mov
add
lahf
pop
pop
or
dec
mov
pop
hlt
push
jne
sbb
ficoml
sbb
mov
movsb
stc
add
repnz
push
xchg
lds
xor
loope
aad
lods
lods
sub
das
mov
pop
adc
data16
cli
jl
mov
je
inc
stc
mov
inc
lea
cmp
ret
test
jae
sbb
add
jnp
push
dec
sub
mov
cmp
jmp
fisubrs
mov
iret
leave
xchg
aam
and
mov
shl
mov
push
aam
mov
push
jae
push
sub
notb
pop
add
cmpsl
dec
je
sbb
cmp
mov
pop
jb
dec
xchg
or
mov
mov
cmc
push
subb
dec
xchg
fcoms
cwtl
push
adc
ljmp
frstor
in
mov
out
push
scas
jg
clc
push
cmp
ljmp
movsb
pop
fmuls
lahf
and
pop
movsl
sbb
in
lea
sbb
or
out
insl
in
cli
push
adc
pop
xchg
and
lret
cmp
sbb
mov
mov
and
sbb
sub
and
in
out
mov
cld
or
mov
lahf
stos
pop
jg
sbb
fstpl
lret
out
dec
nop
xchg
in
loope
sbb
pusha
xor
or
test
mov
sub
in
mov
xor
cld
and
jnp
push
mov
and
ljmp
orb
aam
push
push
xchg
pop
mov
out
in
aas
push
sbb
stc
testb
xor
jecxz
repnz
es
sbb
lea
dec
adc
jg
ret
stc
fsts
adc
jp
mov
push
scas
cmp
test
dec
cmp
ret
or
pop
scas
shl
in
or
out
inc
push
test
daa
mov
xor
scas
xchg
mov
pop
iret
sub
pop
pop
xor
mov
add
cli
pop
cmpsl
fiadds
push
in
cmp
lock
pop
test
xor
out
sub
xor
xchg
out
hlt
mov
stos
push
push
in
xchg
mov
aad
roll
cli
leave
jb
cmp
xchg
test
push
aaa
lds
ja
enter
sbbb
add
lea
pop
xchg
add
mov
mov
jge
jbe
jne
sbb
mov
cli
cs
clc
and
push
jnp
sahf
fadds
mov
mov
int3
cltd
mov
pop
cmpb
sti
bound
sub
clc
and
mov
rclb
xlat
inc
jge
enter
jnp
dec
and
mov
xchg
xchg
mov
xchg
fs
and
mov
ret
loope,pn
xchg
cmp
mov
outsl
in
inc
cmp
out
cltd
ja
mov
xorb
ret
mov
test
pop
test
cmp
push
sar
mov
imull
sub
xlat
sbb
out
icebp
jns
iret
ret
xchg
add
insl
insb
jle
and
push
push
mov
xchg
mov
mov
add
xchg
pop
cmp
or
cltd
sbb
mov
into
or
outsl
out
daa
fstps
adc
mov
mov
into
or
outsb
fisttps
add
cmp
popa
adc
lea
cmpsl
mov
hlt
cmp
inc
sbb
dec
mov
rcll
dec
sub
test
lcall
or
stc
push
pushl
mov
bound
rol
cmp
ljmp
sub
sub
push
lcall
in
inc
hlt
push
insb
jns
jb
cld
pop
xchg
push
ret
and
insl
jb
or
loope
jb
sahf
dec
pop
fdivrs
push
js
into
mov
push
lcall
inc
add
mov
movl
aas
stos
mov
jg
lret
mov
das
push
iret
lahf
mov
jbe
add
dec
cld
sarl
icebp
test
out
idivl
pop
xchg
push
push
loop
std
test
imul
popa
sbb
pop
insl
fstl
test
jecxz
inc
pushf
int
mov
insl
inc
jge
leave
pop
sbb
dec
mov
jl
repnz
push
popf
dec
xchg
adc
fidivrl
push
int3
inc
mov
je
movb
or
shll
sbb
inc
sub
jg
cmp
adc
or
mov
add
test
dec
push
je
dec
sbb
sbb
dec
xor
cmpsb
dec
pop
mov
repnz
add
dec
mov
loopne
add
out
icebp
fldt
push
pop
sbbb
lret
push
sbb
pop
push
das
dec
mov
ror
out
es
sbb
and
inc
out
aaa
int3
xor
dec
inc
xchg
out
imul
mov
and
movsl
pop
xor
add
xchg
xor
mov
lret
or
jle
stos
mov
push
mov
mov
add
jmp
and
imulb
pop
mov
sub
mov
pushf
and
out
ficompl
out
pop
hlt
mov
push
mov
lcall
jo
loope
and
dec
popf
es
pop
fcmovbe
loop
pushf
stc
js,pt
or
sbb
cvtdq2ps
fnstsw
fmull
orl
pushf
pop
and
xchg
jg
mull
mov
loopne
pushf
pop
sub
pop
push
ss
iret
sbb
sbb
xor
iret
jecxz
js
mov
out
mov
ja
js
jg
shr
outsl
jp
outsb
mov
push
dec
lods
or
adc
dec
imul
ss
lcall
push
or
dec
leave
sub
sarl
cmp
lcall
mov
inc
enter
or
inc
lret
ljmp
je
aam
sub
cld
lds
sahf
mov
in
sub
and
adc
add
icebp
loope
movsl
cmp
push
or
xchg
and
push
inc
adc
mov
in
mov
pop
scas
je
xchg
insl
shrl
test
xlat
adc
imul
add
jle
and
out
xchg
testl
cltd
in
push
inc
fbld
dec
rcl
stos
pop
mov
mov
mov
push
adc
push
addr16
sub
or
cli
jecxz
jmp
popf
cmpsl
mov
shrb
ss
test
imul
hlt
popa
int3
xor
dec
dec
adc
repnz
cmp
setns
iret
popa
leave
popf
scas
add
testl
push
aaa
push
sar
cmpsb
and
insl
pop
lods
add
and
sub
dec
xchg
mov
cmp
xchg
add
sub
in
imul
cmp
into
push
psraw
pop
and
pop
aaa
addr16
adc
mov
xor
jns
lods
lods
bnd
insl
xchg
mov
mov
pop
dec
mov
sbb
and
or
and
adc
aaa
jp
in
call
xor
fisttpl
lea
stos
ret
icebp
pop
xor
or
mov
aaa
jmp
outsb
mov
xor
inc
mov
cwtl
sti
xchg
inc
adc
stos
imul
cmpsl
sti
push
pop
xchg
mov
mov
push
pop
cli
sbb
repz
fs
aas
stos
aad
cli
jno
add
repz
jno
outsl
mov
pop
ret
mov
and
pop
mov
or
xorb
sub
jnp
and
lea
std
out
add
push
clc
jmp
inc
sub
push
cwtl
mov
in
cmp
push
mov
add
xchg
shll
jg
gs
dec
insl
icebp
jmp
sbb
and
js
cltd
and
mov
cmp
in
movsb
push
pop
aam
sub
out
daa
in
push
ret
or
fdivrl
psrlw
out
pusha
in
or
std
push
fwait
notl
mov
js
in
lahf
notl
xchg
xchg
sti
push
mov
loopne
adc
out
lahf
mov
in
cmc
sbb
enter
fwait
adc
add
cmp
loopne
loop
dec
add
into
cmpsb
mov
mov
out
fisttpl
xchg
fs
xlat
mulps
nop
aaa
lds
push
cli
aas
out
dec
push
jns
imul
in
push
add
dec
pop
fs
and
scas
push
jp
sbb
addr16
jo
arpl
or
jp
push
pop
sahf
pop
cmp
adc
repnz
sub
pop
sub
das
adc
xor
xchg
xchg
das
add
mov
arpl
fisttps
or
cltd
dec
outsb
dec
gs
and
inc
js
mov
push
repnz
cmpsl
lea
lea
sahf
sub
cmp
pop
cmp
test
stos
es
stc
xchg
ret
in
jo
jg
add
outsb
ret
adc
out
mov
outsl
pusha
pushl
adc
dec
cmp
mov
push
shl
fisttpll
sarb
loopne
ds
mov
jle
mov
jecxz
pushf
lret
stos
dec
cmp
cmc
xor
sarl
inc
fstp
dec
mov
mov
sub
and
sub
or
sar
outsb
mov
inc
cmp
pop
cmpsl
sti
mov
fs
dec
push
lcall
xchg
push
adc
and
sub
push
insb
add
insb
fs
and
mulb
pop
add
testb
dec
pop
jecxz
adc
lcall
iret
fcmovbe
test
popa
lods
testl
adc
sub
mov
sub
mov
repnz
pushf
cmp
add
add
leave
xlat
mov
addr16
lods
mov
mov
mov
mov
lock
pusha
sub
loopne
cmp
or
imul
dec
cmp
std
sbb
testl
add
jle
das
mov
adc
test
icebp
sahf
pop
mov
repnz
stos
sub
aam
movsb
inc
lret
xor
ror
xor
inc
mov
outsb
cmp
fcomip
notb
sub
outsl
out
add
or
pop
mov
shll
in
es
jae
lock
popa
push
pop
pop
pop
mov
pop
repnz
out
and
or
lds
mov
add
jo
shlb
push
pop
aaa
pop
loopne
pop
fs
outsb
jbe
shl
push
push
pop
pop
mov
sbb
stos
mov
aad
xor
dec
lock
pop
inc
je
fbld
addb
push
insb
xor
sahf
cwtl
insl
movsl
push
call
push
call
mov
ja
movsb
xor
dec
mov
or
mov
jns
xchg
lock
mov
fdivrs
hlt
scas
and
push
lahf
ret
xchg
xor
shl
xor
cmpsl
out
lret
mov
testl
mov
pop
enter
jo
cmp
frstor
push
xor
imul
ret
adc
adc
lcall
leave
cmp
aaa
cmp
lods
add
sub
cmp
in
call
add
mov
arpl
xor
rorl
dec
fstpt
jbe
pop
mov
xlat
fwait
arpl
xor
inc
faddl
rcrb
adc
mov
ds
jnp
fidivrs
andb
iret
fiaddl
mov
cltd
iret
lds
rcr
test
add
lods
sub
test
sbb
mov
sub
xchg
divb
movsl
push
mov
lahf
leave
mov
or
arpl
addr16
repnz
das
jb
in
mov
nop
je
adcl
cli
jns
arpl
xchg
in
in
orl
pusha
add
ds
mov
cmp
sub
repz
sub
xchg
add
int
insl
rcr
dec
fs
mov
mov
pushf
scas
loopne
pusha
aas
rcl
pop
mov
cs
cmp
push
mov
pop
mov
sub
cmc
js
aas
imul
pop
sbb
bound
ljmp
inc
in
inc
inc
std
xor
mov
ljmp
lods
lea
popa
sub
lahf
dec
inc
nop
sbbb
add
sbb
ds
cwtl
loop
shll
xlat
lds
mov
cmp
inc
sbb
jmp
mov
mov
pusha
and
adc
pop
or
insl
jo
ret
cmp
andl
push
or
sbb
sub
pop
pop
aad
cmp
pop
mov
mov
in
fstpt
aad
or
lds
xchg
or
jecxz
and
xorb
dec
flds
insb
or
sub
sbb
push
pop
cmp
lock
bound
in
dec
scas
adc
push
pop
ljmp
add
pop
ds
jno
cmpsb
int3
sar
pop
or
xchg
js
and
inc
adc
mov
ret
ret
lock
mov
inc
inc
mov
mov
mov
push
sbb
dec
inc
pop
lret
push
cmc
bound
cmp
fbld
add
mov
popf
sbb
lcall
popa
fcoml
pop
add
sti
mov
icebp
push
fcmovnbe
xor
xor
mov
stos
cmp
mov
mov
sub
and
cmp
mull
lcall
jge
sarl
lods
mov
into
lea
pop
sarb
loope
pop
cld
call
outsl
je
adc
mov
push
sti
add
xchg
sbb
adc
jne
loopne
shrb
push
lds
pop
fidivrl
mov
test
add
or
mov
les
dec
mov
int
mov
push
and
pop
pop
push
jmp
xchg
xchg
int
movsb
adc
imul
dec
lock
xchg
mov
adc
dec
aam
je
movb
xor
inc
mov
aas
adc
jmp
repnz
inc
mov
popf
pop
repnz
sbb
mov
fdivrs
icebp
jmp
dec
in
lahf
mov
or
fmull
ja
adc
test
lock
push
push
lret
inc
add
shr
and
repnz
fadds
testl
dec
je
dec
dec
mov
xor
fistps
test
aad
test
fbstp
mov
jle
xor
mov
mov
xchg
mov
cli
cmc
out
ds
sub
and
sbb
xchg
xchg
cs
jl
jmp
pop
xchg
xchg
fisttps
ja
pop
cs
data16
and
adc
aam
icebp
cbtw
or
lahf
stos
lcall
sub
pop
inc
shrl
inc
xchg
data16
dec
xchg
js
cmp
dec
ljmp
and
ror
pop
jge
loopne
xor
dec
pushf
adc
ds
cmpsl
push
in
popf
mov
xchg
out
sub
fcoml
data16
je
xchg
jno
mov
sbb
outsl
mov
cmp
or
mov
or
mov
xor
push
dec
xor
in
push
sbb
lods
jle
lret
aas
xor
push
je
cld
push
test
in
pop
xor
test
or
std
pushf
dec
cmp
and
push
or
dec
xor
mov
fs
loopne
sub
lods
mov
and
ja
loopne
sub
adc
shlb
cmpsb
notl
fistl
sub
mov
mov
and
xchg
data16
mov
mov
pop
lret
add
out
in
cmp
dec
ds
dec
cmpsb
inc
in
xor
cs
add
adc
in
mov
sub
ret
mov
add
push
mov
push
or
mov
mov
js
cltd
jl
ficompl
out
push
lcall
mov
cld
shl
scas
mov
int3
cmp
popf
int
jl
dec
jo
add
adc
lock
pusha
cmpsb
sahf
imul
push
xor
or
out
pop
push
add
push
mov
sbb
pop
sbb
stc
rorb
add
loope
xor
and
push
std
aad
fistpll
mov
and
imul
js
or
stos
add
mov
rolb
cmp
shrb
jp
add
mov
pop
push
in
repnz
and
dec
mov
scas
jge
in
daa
inc
mov
mov
xor
cmpl
mov
cmpsb
stos
mov
cmpsb
inc
fcompl
lahf
icebp
mov
and
lret
mov
sbb
cld
enter
sbb
stos
hlt
cwtl
jo
jmp
inc
mov
dec
testb
xchg
or
mov
xor
inc
out
mov
rcll
pop
hlt
xlat
cld
jnp
or
popa
dec
cmp
insl
adc
pop
cmp
inc
mull
inc
stos
push
sub
movsl
cmp
stos
outsb
paddb
inc
fisttps
cs
imul
das
rol
in
ss
fldenv
xchg
jmp
mov
fdivrl
rcll
xchg
jo
add
pop
cmpsb
lret
inc
loopne
ret
cmp
fldt
and
scas
call
sub
pop
push
sbb
daa
push
or
inc
hlt
shll
inc
movsb
mov
js
jb
dec
shll
repnz
mov
sbb
orb
mov
das
in
mov
xorb
sbb
inc
push
inc
sbb
push
imul
xor
and
imul
dec
dec
ljmp
sub
lahf
mov
and
sbb
stos
addr16
out
jne
out
push
xchg
and
cld
pop
cmpsl
sbb
jno
cli
jge
in
adc
insb
push
fldcw
xchg
mov
stc
lods
push
out
ret
mov
ficomps
fucomip
mov
push
sub
aaa
xchg
push
fistps
repnz
pop
fs
and
mov
inc
movsl
ret
jnp
cmp
sbb
ljmp
mov
mov
sbb
sub
outsl
jne
mov
imul
sti
jne
dec
xor
stos
sub
loope
andl
jno
sub
into
fisubl
inc
notb
cltd
or
adc
je
sbbb
sub
imul
out
jle
jb
and
push
mov
cmp
out
sbb
sbb
test
loope
sub
add
jne
xor
xchg
repz
jle
rcll
mov
addl
pop
jmp
repz
xor
push
repz
pushf
adc
jmp
push
testl
jne
add
mov
stc
cld
test
xchg
jg
pushf
iret
aad
pop
lcall
mov
sub
int3
imul
repz
xlat
call
mov
gs
sbb
ret
pop
mov
iret
je
aas
test
lea
into
push
cmp
push
call
add
mov
mov
dec
inc
addb
mov
xchg
ret
xor
out
fsts
mov
push
fs
test
push
cs
data16
push
stc
fcmovbe
or
jg
in
xor
stos
ret
xchg
loopne
sete
fisttps
or
aaa
rcrl
pushf
adc
cld
imul
icebp
jp
ret
mov
dec
cmpsl
pop
jnp
xchg
or
popl
sti
repnz
xor
fildll
pop
fimull
loope
lock
mov
in
fldt
add
push
adc
xchg
ss
adc
jb
imul
xor
cmpsb
inc
in
stos
aad
push
cmp
es
cmpsb
xchg
insb
stc
subl
call
add
sarb
inc
xor
mov
jns
and
gs
adc
divb
inc
sbb
fwait
idivb
adcl
xor
sbb
out
jno
mov
shlb
rol
rcr
cmp
rcll
aaa
pop
loopne
pop
dec
sub
lret
fnstenv
mov
int3
stc
gs
jno
or
js
adc
xchg
cmp
mov
nop
adc
xchg
mov
mov
cmpsb
icebp
pop
les
sub
les
xchg
jne
fnstsw
cmp
out
pushf
mov
rolb
cmp
dec
leave
add
imulb
dec
popa
test
adc
xor
add
out
leave
cmc
inc
bound
cld
sbb
xchg
js
orl
fnsave
sbb
sub
pop
pop
mov
addr16
jge
inc
mov
scas
mov
imul
and
push
adc
xor
ret
mov
out
aad
sbb
pop
lcall
roll
test
imul
or
ds
add
push
scas
or
mov
scas
jmp
jle
pop
cmc
push
and
lods
xchg
aam
mov
mov
mov
sub
cmp
dec
mov
pop
jge
popa
loopne
push
adc
outsb
cmpsb
loope
shll
dec
in
movsl
and
ficoml
repnz
in
mov
ja
inc
dec
push
pusha
decb
stos
mov
cmp
adcb
leave
push
shrb
cmpl
mov
leave
loope
and
les
and
lret
xor
aaa
lds
popa
popf
lret
out
inc
shrl
xor
test
sbb
call
cmp
push
mov
cwtl
jle
adc
or
call
xchg
cmp
push
mov
cmp
loopne
ljmp
in
dec
sub
pop
loop
pop
outsb
inc
daa
fbstp
or
sub
sbbl
and
jne
cmpsb
js
push
lcall
push
xor
and
push
xor
xchg
hlt
repz
xchg
cltd
out
jmp
inc
cmp
test
std
stc
inc
mov
test
or
ret
jnp
xchg
outsb
inc
adc
push
cmp
stc
aas
and
sbb
inc
dec
inc
cs
or
inc
mov
sub
cltd
mov
push
jp
push
lcall
cmp
pop
das
sbb
incb
adc
xchg
inc
inc
aam
fs
aaa
pop
mov
pusha
mov
negl
out
push
mov
mov
pop
mov
psubb
sti
xchg
shlb
in
rcl
fimull
jbe
js
std
cmpsb
cmp
push
aaa
xor
fs
jecxz
cmp
xor
dec
jbe
test
int3
cmp
add
ficompl
mov
popf
adc
mov
cmp
mov
add
mul
aam
xor
mov
xchg
cmp
stc
aam
jno
aad
shrl
and
jb
pop
add
pop
divl
cmp
add
xor
pop
pop
sti
lock
loope
gs
mov
popf
jns
or
jo
loopne
pop
js
mov
pusha
pop
test
jle
mov
daa
in
sbb
sub
jle
pop
mov
in
add
aas
pop
je
xor
xchg
sub
xchg
ljmp
shll
xchg
jbe
mov
ds
pop
xlat
adc
or
inc
gs
add
imul
and
adc
outsb
nop
jnp
cmc
outsb
shrl
fstp
mov
and
and
aaa
icebp
mov
pushf
lods
popf
inc
jnp
idiv
ficoml
loope
adc
and
ret
cmc
or
jl
enter
sbb
je
mov
sub
test
or
lock
dec
pop
dec
cmc
mov
mov
rorb
lods
push
ds
mov
pusha
sub
cmp
outsb
lea
fs
dec
mov
lahf
jle
ljmp
cmp
lods
int
and
test
adc
inc
mov
cmp
xor
jl
ret
int
fists
xor
xchg
nop
notb
jo
push
mov
mov
inc
mul
adc
sbbl
sub
enterw
aaa
or
dec
xor
push
xor
sbb
cmp
movsl
popa
mov
lds
push
push
call
mov
mov
add
loop
xchg
pop
dec
jmp
jle
mov
out
push
jge
sbb
daa
jp
sub
sub
je
and
les
or
nop
scas
shlb
sbb
xchg
mov
ja
adc
or
fldl
jmp
mov
sahf
dec
pop
jbe
cli
push
out
imulb
jge
xchg
mov
cmc
dec
mov
test
loop
sub
xor
test
outsl
and
lock
shrl
lea
adc
mov
mov
orb
jno
mov
mov
imulb
cld
push
inc
data16
imul
sbb
mov
cltd
in
shrl
out
jne
mov
pop
push
lahf
sub
cltd
mov
inc
lock
mov
pushf
movsb
insb
pop
mov
push
mov
or
fidivs
in
mov
lods
lds
scas
sahf
repnz
mov
jno
cld
pop
mov
movb
aas
ljmp
fs
je
fisttpll
das
ret
mov
sub
leave
imul
mov
in
enter
mov
pop
push
push
cli
sbb
sub
xchg
sub
aaa
sbb
or
leave
or
pushf
xchg
sub
movsb
cs
cld
mov
jp
jmp
and
movd
scas
inc
inc
xlat
movsl
in
rcl
aam
cmp
mov
aas
adc
jge
push
pop
dec
mov
lea
cmpsb
stos
out
adc
js
push
push
add
int3
iret
mov
pop
sub
mov
shrl
xchg
push
cmp
popf
insl
cmp
adc
cld
lea
add
dec
mov
or
mov
xchg
jae
jle
sbb
sub
push
adc
jae
sbb
data16
fadds
cmp
ss
lahf
into
jno
cwtl
rcr
adc
cmp
adc
lret
rclb
in
in
ljmp
loopw
test
jg
jge
push
cltd
jg
js
xchg
push
mov
sub
mov
fcomps
outsl
gs
xchg
mov
xchg
fnstsw
inc
add
adc
pushf
getsec
js
aas
stc
xor
push
xchg
std
dec
add
js
pop
push
sub
stos
arpl
mov
das
or
and
punpckhbw
mov
dec
and
nop
shl
ds
sub
loop
pop
push
test
sbb
nop/reserved
add
scas
xor
cmp
jge
test
ret
int3
or
aad
ds
repz
loop,pn
push
sti
ret
imul
sub
mov
in
imul
adc
lcall
adcb
push
mov
js
pushf
notb
loope
cltd
push
pop
jp
aaa
push
int
pop
jae
rolb
cltd
pop
out
pop
xor
popl
les
mov
jne
inc
fsub
and
push
imul
idiv
mov
repnz
dec
subl
and
loopne
adc
jmp
ret
mov
inc
inc
push
push
add
mov
push
jle
in
repnz
insl
or
scas
cli
push
mov
bound
repnz
hlt
sbb
inc
jl
aad
jo
lret
cltd
jmp
mov
insl
insb
fmul
push
loopne
mov
pop
or
shl
test
pop
sub
or
in
rcll
mov
push
int
test
xchg
test
shrl
jecxz
mov
fld
mov
cmc
adc
daa
fwait
mov
pop
sbb
cmpsl
icebp
xor
sub
movsl
mov
mov
cmp
clc
out
imul
push
mov
int
cmp
movsl
xchg
aaa
dec
lret
dec
add
sarl
in
xchg
outsb
andl
imul
and
test
ret
out
sarb
push
gs
test
lock
adc
scas
sbb
mov
mov
cmp
xchg
add
in
mov
add
cmp
lods
shrb
enter
arpl
test
adc
pop
jb
ret
ss
mov
cmp
push
mov
xorb
les
fldt
xchg
fldl
jae
sbb
popf
inc
inc
lahf
sbb
sbb
lret
or
inc
cmp
mov
pop
movl
je
shrl
popf
rorb
push
jecxz
in
cli
enter
xor
mov
xor
outsb
or
dec
lea
insl
jae
push
mov
inc
rclb
jb
sub
or
inc
fwait
lcall
add
je
adc
or
test
insb
out
in
push
xchg
jno
mov
pop
ret
jmp
fwait
push
sbb
cmp
ds
rolw
adc
xor
push
mov
cmp
jb
jge
enter
lret
out
push
jnp
xor
jae
mov
sub
ja
pop
mov
stc
test
mov
push
outsl
jl
in
push
add
xor
ret
jmp
inc
mov
push
adc
in
adc
test
cltd
repnz
push
pop
add
imulb
or
fists
jmp
repz
lret
mov
or
fnstcw
pop
mov
sahf
and
or
mov
aas
jno
adc
sbbb
fldcw
push
mov
daa
inc
mov
cmp
cmp
mov
mov
sbb
inc
mov
repz
and
xor
dec
test
outsb
idivb
xchg
popa
cli
jne
stc
pop
cmpb
jbe
pop
aad
std
ja
clc
dec
test
mov
icebp
mulb
repnz
int
leave
popa
adc
fnstcw
out
pop
adc
sbb
fadds
mov
jo
ret
inc
pop
cmc
fistps
movsl
pop
xor
fisubrl
xchg
test
out
inc
ja
pop
mov
mov
xor
mov
arpl
decb
cmp
pop
sub
cmpsl
mov
fadd
xchg
or
mov
insb
fidivl
mov
add
fucomp
cmp
cmpsl
arpl
outsl
cmp
ds
or
js,pt
and
int3
or
test
pop
mov
rclb
jbe
push
test
pop
and
ss
sub
jae
adc
clc
add
cmp
pushf
pop
inc
out
fstpt
lret
xor
flds
das
iret
cwtl
pop
jnp
mov
xor
jns
insl
rcrl
and
inc
pop
addb
push
fs
clc
movsb
mov
xor
pusha
lock
cmp
inc
in
add
iret
fdivs
and
aam
negl
mov
fistps
imul
pop
ret
mov
aam
in
or
xchg
and
xchg
fldt
lds
popa
pop
mov
imul
sbb
hlt
xchg
imul
aad
push
pop
push
mov
pop
into
pop
cmp
inc
stc
push
cmp
cltd
je
sbb
pop
shrl
addr16
jl
test
mov
push
add
hlt
data16
cwtl
mov
data16
fadds
leave
mov
mov
lea
ret
add
jp
xor
sbb
cli
hlt
shll
andl
push
popf
mov
int
cmp
cld
into
mov
sarl
xchg
cltd
adc
jmp
jmp
imul
std
cmp
jne
mov
mov
mov
loope
sub
lcall
shlb
out
or
jno
jae
xchg
adc
inc
cmpsb
addr16
das
scas
or
les
sbb
outsl
loopne
fstpt
addr16
popf
in
pop
in
xchg
iret
lods
jno
xor
in
pop
jno
jnp
ja
push
aas
dec
imul
cmpsl
adc
addr16
mov
cmp
adc
inc
add
push
mov
sbbl
xchg
mov
pop
sbb
pop
or
jb
mov
or
xchg
add
push
cld
leave
arpl
cs
fists
outsl
sets
pop
lahf
jo
inc
xor
inc
push
loopne
enter
je
mov
stc
scas
outsl
movsl
enter
subb
dec
fisubrl
sarl
fsubrs
adc
in
outsb
call
push
lods
call
stos
sahf
test
mov
push
jns
loopne
in
lea
imul
loop
cmp
sub
pop
xchg
aas
cs
adc
pop
adc
and
out
stc
add
mov
dec
mov
cli
pop
and
test
call
jmp
lods
mov
mov
fildll
or
test
sbbl
jae
out
out
lret
cmp
mov
adc
cmc
inc
or
xchg
pop
aaa
jnp
xchg
movsl
sub
jne
mov
xor
dec
jae
xchg
mov
pop
in
sar
sub
jg
push
pop
push
jmp
fisttps
int3
daa
scas
addr16
iret
pop
mov
mov
shrb
mov
stos
inc
sub
xchg
dec
inc
enter
push
mov
cmp
sub
outsb
dec
mov
repz
and
and
cltd
test
adc
add
mov
int3
cmp
add
in
test
scas
jp
fildl
shrb
lret
std
dec
pop
inc
pop
jae
ja
mov
inc
int
insl
or
mov
pop
add
mov
and
mov
dec
insb
adc
push
add
lods
pop
mov
sahf
in
pop
jl
mov
mov
lds
or
mov
lock
mov
dec
sbb
xchg
lret
dec
adc
stos
xchg
xor
jmp
pusha
shlb
movsl
pop
stos
movsl
fwait
inc
jp
loop
dec
in
jp
daa
popa
in
sub
mov
shrl
cmc
and
fistpl
jmp
lea
mov
lods
out
inc
and
and
dec
mov
xchg
jae
mov
jmp
loopne
notl
sbb
push
imul
push
cli
jbe
inc
lret
xor
xchg
sbb
and
test
add
pop
pop
ljmp
jnp
push
xlat
notl
sub
jmp
xorl
mov
aam
cltd
ficompl
sbb
addb
add
sarb
and
xchg
pop
into
popf
jo
push
jl
mov
fmull
add
xor
fnsave
mov
int3
mov
jo
outsb
sbb
daa
popf
loop
daa
mov
mov
out
add
mov
pop
cltd
mov
clc
mov
loopne
add
dec
push
jae
dec
negb
shl
cmp
negb
les
popf
jno
dec
shlb
shlb
nop
or
pop
test
mov
xchg
scas
pop
arpl
adc
xchg
push
add
fisttpl
and
pushf
dec
data16
and
and
and
mov
jmp
movsl
xor
mov
jl
xlat
mov
in
or
lret
retw
adc
inc
xor
inc
sarb
imul
pop
xor
adc
dec
dec
rcrl
xchg
les
mov
divl
psrld
push
lods
ret
test
and
iret
mov
mov
mov
mov
loopne
loop
pop
push
mov
pop
sub
mov
xchg
mov
ret
lock
xchg
mov
js
push
pop
dec
lret
in
ret
xchg
add
shrb
mov
inc
out
sbb
aad
int3
mov
in
loop
test
into
daa
lods
jnp
test
inc
inc
pusha
mov
xlat
adc
mov
inc
dec
pop
mov
testl
pop
mov
addb
adc
lret
pop
mov
add
mov
fsubr
xchg
sub
call
loopne
push
nop
icebp
aad
sbb
ud2
cltd
shll
jg
daa
pusha
push
mov
xchg
pinsrw
arpl
iret
pop
fisubrs
mov
push
pop
mov
popf
mov
xchg
xchg
in
sti
and
and
cmovnp
adc
lods
cld
std
dec
stos
les
cli
and
mov
adc
ja
pop
lods
sub
pop
sbb
into
push
loopne
push
loope
sbb
stos
xchg
push
out
jno
repnz
pushf
mov
aad
and
ja
jmp
inc
push
fnsave
add
or
jbe
inc
adc
mov
add
divb
mov
cmp
maskmovq
fabs
pop
cmp
dec
jecxz
mov
inc
or
testb
sbb
xchg
mov
xchg
ds
jo
leave
pushf
pusha
pushf
push
add
aas
xor
out
int3
dec
daa
test
lea
pusha
push
in
fwait
sub
fbld
icebp
roll
push
test
popa
xchg
sti
push
dec
xchg
xor
icebp
stos
ljmp
daa
adc
insl
inc
daa
out
aad
repz
jnp
mov
fwait
push
shlb
imul
inc
dec
mov
adc
xor
pop
sub
xlat
movsl
pop
loope
jl
inc
fmull
xchg
out
addr16
xchg
testl
push
out
pop
out
or
dec
push
adc
jo
push
sbbl
cli
cld
jb
xor
inc
clc
mov
jne
mov
pop
ret
push
stc
fcompl
cmpsb
xor
sbb
and
ljmp
fimull
insl
mov
imul
cli
xchg
or
pop
out
rcrl
dec
and
add
imul
fsubr
mov
test
pushf
xor
cmp
icebp
shrl
imul
mov
mov
jo
jge
sub
mov
dec
jl
lods
jp
addr16
icebp
daa
fincstp
out
adc
hlt
add
or
jnp
pop
jno
jg
sub
jno
loopne
mov
popa
xchg
jae
fdivrs
punpckhdq
sbb
push
and
jle
jb
rclb
jno
adc
mov
insb
mov
and
stos
clc
pop
and
xlat
and
aaa
jmp
fs
mov
test
vpaddusw
mov
out
lcall
or
push
jge
cmpsb
incl
in
lcall
es
hlt
xor
jnp
dec
loope
push
imul
out
mov
pop
lret
push
xchg
jno
lahf
icebp
jecxz
aaa
je
pop
mov
jnp
sub
ret
mov
lea
mov
lods
and
aas
sbb
ds
clc
scas
sub
mov
sbb
cli
xor
jo
mov
inc
push
imul
inc
loop
aaa
xchg
iret
jp
addr16
mov
xchg
mov
mov
pop
xor
pop
adc
sbb
sub
mov
push
xchg
dec
push
cmp
fadds
lea
push
popf
test
mov
xchg
inc
push
inc
pop
pop
aaa
call
xchg
pushf
lds
loop
add
test
movb
inc
jg
ficomps
fnstcw
mov
cmp
fistpl
or
rcrl
out
in
ret
fdivrs
jg
ds
ret
push
xchg
inc
push
pop
cmpsl
call
mov
mov
add
push
roll
imul
incl
xchg
aaa
cmp
lret
push
or
cmp
test
sahf
pop
or
dec
mov
call
fiadds
xchg
mov
mov
je
pop
push
clc
or
aam
jne
pop
pushf
fimuls
sbb
mov
add
out
and
mov
inc
nopl
jmp
xchg
sub
icebp
sbb
and
or
nop
dec
adc
repz
in
pop
das
icebp
dec
nop
popa
in
add
leave
iret
iret
test
out
jnp
in
and
inc
aaa
sub
push
mov
aas
jno
sahf
out
push
add
stos
mov
xlat
add
enter
ja
xchg
pop
jne
pusha
mov
xor
lahf
outsl
and
jnp
mov
les
or
fimull
lods
jmp
dec
or
sub
pushf
cmp
xchg
lahf
lods
gs
mov
leave
or
repnz
jbe
sbb
popa
inc
add
or
fisttps
adc
mov
lret
pop
add
mov
ret
nop
leave
push
xlat
add
mov
lods
inc
js
pushf
adc
cmpsl
popa
es
pop
mov
inc
sub
sbb
adc
adc
stc
insb
scas
or
pop
inc
fucomip
rcll
repnz
mov
mov
cmp
arpl
inc
jb
mov
dec
mov
es
dec
adc
repnz
fsubr
dec
push
inc
cs
push
dec
ja
rorb
jmp
xlat
ja
xlat
lods
jp
or
insb
adc
push
cmp
sahf
pop
rorb
mov
lcall
and
sub
dec
shll
addr16
jno
mov
ljmp
inc
fdivr
mov
add
adc
notl
popa
pop
int
mov
inc
mov
pushl
loop
inc
fimull
or
mov
sbb
repnz
fidivrs
sbb
push
out
mov
lret
jle
or
xor
sub
pop
xchg
xchg
imul
std
mov
push
sbb
pop
int
sbb
aas
nop
and
aad
inc
repnz
xorl
cmp
jns,pt
incb
call
adc
add
nop
sub
dec
lahf
and
jmp
or
sub
jns
out
jp
jg
std
mov
pop
mov
fisubl
mov
sbb
or
mov
mov
in
xor
cli
mov
cmp
dec
das
xor
and
mov
daa
and
or
xchg
dec
cmc
sbbl
mov
cmp
pop
fsub
imul
daa
stos
mov
sub
dec
rorb
mov
push
shlb
sti
rorl
mov
push
or
cmp
mov
out
inc
frstor
sbb
movsl
aam
dec
jmp
je
pop
inc
std
sbb
dec
xor
and
movsl
push
dec
or
dec
out
dec
stos
push
xorl
rsqrtps
dec
rclb
test
ret
dec
add
mov
and
call
add
pop
xor
jmp
mov
fidivl
lock
mov
je
dec
jne
dec
rorl
ss
adc
xrelease
insl
cmc
movsl
cld
jg
mov
lret
sub
mov
aaa
mov
adc
jbe
mov
sbb
mov
jo
sar
mov
lods
lods
shll
test
aas
jns
cmc
loopne
aad
jp
cmp
pop
ss
into
in
in
fs
or
push
lea
pop
mov
and
or
mov
test
bnd
je
ljmp
repz
adc
jmp
repnz
scas
popa
cwtl
lock
xor
push
cmp
std
outsl
stos
inc
popa
mov
fwait
popa
mov
jecxz
jb
push
jb
pop
inc
ret
adc
mov
adc
or
and
add
and
out
es
out
sbb
sbb
xor
mov
jne
adc
arpl
add
mov
adc
sti
mov
cmp
mov
in
jp
sahf
mov
test
mov
adc
add
cmp
fwait
in
mov
xor
and
cs
pop
jno
sub
rol
and
sti
jmp
fadd
stos
cmp
outsb
or
dec
fidivs
ss
jbe
mov
insb
loopne
in
mov
clc
fld
test
inc
xlat
add
sbbb
cmpsb
add
cmpsl
adc
mov
std
inc
sbb
cld
push
push
stos
cltd
lcall
insl
sahf
lods
inc
jnp
jge
outsb
loope
cmp
push
xchg
mov
faddl
inc
int3
mov
pop
aad
cmp
clc
and
fcoml
les
inc
adc
aam
dec
mov
inc
inc
js
or
push
dec
sub
enter
insl
daa
xor
mov
rorl
jle
cwtl
xor
repz
or
mov
push
shrb
adcb
leave
and
jle
mov
cmp
out
aad
inc
lcall
icebp
and
pusha
sub
mov
mov
out
cltd
mov
mov
in
shll
jge
test
faddp
xor
mov
pop
mov
xchg
notl
jge
daa
adc
imul
dec
addb
fwait
shlb
sbb
xchg
pop
cmp
std
punpcklwd
xorb
in
push
or
sub
mov
repnz
push
or
scas
mov
jl
in
push
das
push
jmp
out
pop
push
hlt
bound
and
lds
xchg
jg
push
jmp
idivb
inc
je
movsb
aam
inc
mov
fcoms
ljmp
or
cmove
xchg
fimuls
cmc
xchg
mov
scas
sub
cmpl
lea
mov
outsb
popa
dec
sbb
or
outsb
add
clc
negb
cmpb
es
xchg
insb
cmpsb
inc
js
dec
jne
sbb
cltd
adc
repnz
jmp
rclb
and
imul
test
mov
andb
push
popf
dec
lret
popa
inc
fwait
scas
sub
xor
ja
dec
cwtl
in
std
jne
iret
jg
pop
and
add
cmp
push
or
mov
jg
mov
jge
cmpsl
insb
in
inc
xchg
xor
mov
out
push
push
add
mov
xor
jp
inc
mov
pop
nop
push
hlt
mov
mov
pop
jo
pop
dec
loop
xor
push
push
aam
pop
jp
stos
int
movsl
mov
add
xchg
lahf
dec
testl
leave
dec
iret
fbstp
sub
daa
cmp
lret
xor
ret
incb
movsb
out
pop
push
or
rol
in
mov
notb
adc
mov
dec
add
dec
push
in
adc
and
inc
cmpl
insb
mov
and
pop
cld
sub
bound
sub
out
stc
dec
mov
inc
orb
jae
jb
loope
insb
lret
movsb
jl
stos
xchg
adc
add
push
and
nop
cmp
jb
push
xchg
insl
dec
xchg
dec
leave
call
lea
mov
enter
fsubp
lea
orl
clc
dec
daa
pop
lret
xchg
in
scas
shl
adc
mov
pop
lret
ja
or
sub
pop
sbbb
sbb
sub
fs
cli
test
lret
mov
lcall
cmp
mov
std
popf
mov
dec
jle
inc
adc
imul
adc
cmp
jb
pop
inc
icebp
enter
orl
cmp
repnz
inc
into
hlt
stos
sbb
mov
push
loop
add
cmp
or
fcoms
mov
test
xchg
pushl
jne
pop
xlat
mov
ret
scas
mov
ret
es
adc
mov
fs
jne
inc
test
negb
gs
das
mov
les
xor
call
outsl
in
mov
mov
dec
pop
stos
jns
push
ljmp
in
inc
inc
test
ret
push
push
dec
cmp
movsl
adc
lods
imul
ret
push
fdivrl
leave
cld
lret
stc
sahf
mov
test
ljmp
or
mov
shll
andl
xchg
xchg
nop
mov
aad
mov
std
out
push
movsb
insl
mov
fsubr
loop
or
xor
add
popf
and
cmpsl
lret
mov
mov
pop
fistl
jno
lds
or
out
push
loope
and
insb
cmc
cmp
pop
jnp
loop
add
rcrl
mov
push
repnz
push
cltd
mov
les
stos
sahf
mov
lret
cs
and
and
mov
fsubr
and
xchg
mov
mov
sbb
stos
mov
sub
daa
push
addr16
sub
pop
push
inc
in
dec
dec
mov
xor
sahf
jbe
or
adc
les
mov
icebp
dec
test
test
lea
add
dec
call
idivl
hlt
rorb
fwait
and
hlt
roll
pop
sti
xchg
push
rclb
xchg
push
mov
rolb
xor
add
aad
dec
push
insb
leave
lods
jg
jae
aad
or
and
cmpsb
int3
jns
inc
cmp
cld
xor
jne
push
sti
push
cs
rorl
mov
cli
mulb
mov
pop
shrl
and
mov
fisubl
bound
inc
psubusw
pop
outsl
lahf
lea
movb
pop
jae
xor
xchg
and
mov
mov
xchg
ret
outsl
scas
xor
adc
jns
push
sbb
or
xor
popa
mov
lret
xchg
out
daa
xchg
mov
stos
push
movsl
sub
and
je
ds
sbb
aas
aad
stos
push
ret
fistps
push
repnz
mov
and
pushf
and
and
mov
pop
jmp
pop
push
adcb
mov
add
and
dec
inc
jge
stos
popa
push
sub
clc
int3
dec
jb,pn
cld
and
mov
stos
push
aaa
mov
and
inc
inc
jg
sbb
cmp
sub
sbb
sub
sub
ret
mov
push
dec
lcall
jg
sub
sarl
xchg
jae
shlb
or
sbb
mov
sub
push
xchg
dec
std
pushf
cmp
mov
adc
pop
and
inc
sbb
sub
dec
inc
sbb
lods
cmp
into
mov
xchg
fisttpll
loope
add
or
ret
jae
mov
mov
outsb
xor
jne
mov
imul
sbb
in
inc
sbb
dec
inc
inc
test
cmpsb
ret
lahf
pcmpgtd
roll
cmp
movsl
sub
femms
adcw
inc
movsl
xchg
mov
jmp
test
hlt
popa
xlat
cmpsb
hlt
jp
rcll
out
mov
pop
inc
push
aam
in
lea
xchg
dec
push
ljmp
nop
mov
shll
sbb
js
push
mov
and
ljmp
xor
jg
mov
xchg
scas
mov
pusha
push
lods
daa
inc
outsl
enter
subb
jg
nop
fisubl
aad
inc
add
dec
dec
test
movsb
sub
push
adc
push
mov
sub
sarl
mulb
bound
cmpsl
aaa
push
push
xlat
add
and
mov
aam
and
mov
outsl
xor
mov
fists
mov
push
shlb
sti
jl
xchg
dec
lods
iret
test
pop
ret
or
in
cmpsb
int
adc
jbe
sbb
das
outsl
imul
xchg
sub
fadds
outsb
adc
add
aam
dec
pop
fstl
lahf
pop
cmpsl
mov
xorl
fildll
int3
call
stos
sbb
push
xchg
jne
inc
cmp
xlat
sbb
xchg
pop
jno
xchg
pop
mov
add
mov
xchg
mov
fmul
sbb
jge
and
sub
pusha
orb
stc
adc
std
leave
adc
mov
cmp
aad
cmc
fsts
jle
pop
inc
out
stos
ret
xorl
cld
shlw
repnz
xorl
xor
and
xor
cld
shlb
dec
popl
inc
sbb
ret
inc
mov
jno
mov
in
xchg
pop
pop
loope
in
pop
shll
and
adc
jg
cmpsb
xlat
jg
das
int3
xchg
jb
xlat
push
xchg
push
jns
mov
sbb
cmpsb
addb
jmp
cmp
xor
lahf
xchg
rorl
dec
sub
cwtl
jnp
and
xchg
mov
jns
xchg
adc
popa
mov
xchg
pusha
adc
and
and
cmp
or
cmpsb
outsb
ss
hlt
cmc
push
cli
sbb
add
mov
loope
sbb
and
lret
lret
push
std
out
jg
je
sbb
jle
pop
inc
sbb
push
cld
rep
ja
push
and
pop
dec
jl
outsl
jmp
xchg
aas
test
jo
outsb
sbb
subb
shll
fists
outsl
sahf
movsb
jp
fidivrl
fsts
fs
fwait
cmpsb
xchg
xchg
xor
pop
push
or
aam
inc
fsubrl
fistps
fnsave
repz
jmp
mov
and
xchg
inc
arpl
push
xchg
fucomip
out
pop
jnp
jmp
push
inc
add
movsb
pop
dec
cld
outsl
dec
das
xchg
sbb
fcomip
mov
sub
daa
fildll
xor
fcmovnbe
mov
xchg
pop
push
push
iret
push
cmp
jmp
sbb
lds
mov
pop
mov
or
pop
rorb
insb
aaa
adc
ja
push
push
fmul
imul
jb
jl
add
cmc
stos
pop
out
and
sub
cmp
ja
cmp
sub
xchg
sbb
mov
push
movsb
test
aam
shlb
ljmp
cli
lret
lods
and
lcall
movsb
or
mov
lcall
addr16
mov
mov
cmp
loope
fstl
cmp
ret
loopne
xchg
push
add
emms
repnz
dec
mov
stc
jmp
ss
pop
ljmp
pushf
sub
and
or
addr16
xchg
mov
pop
or
insb
cwtl
or
push
dec
scas
jno
pop
hlt
push
mov
lcall
je
inc
xor
or
jb
push
xchg
ljmp
mov
das
or
lock
in
mov
mov
or
je
add
pop
mov
fwait
xor
push
sbb
out
aad
cmpsl
push
sbb
mov
icebp
out
js
pop
shrb
rorl
pop
ret
pop
repz
push
mov
loope
jle
fmuls
out
xchg
insb
xor
mov
xchg
jo
sti
cs
pop
daa
xor
test
mov
lret
sahf
add
repnz
mov
sub
inc
popf
push
mov
rclb
push
shrl
mov
xchg
pop
xchg
fdivl
push
aas
xchg
jbe
mov
ljmp
sahf
and
mov
out
pop
into
push
adc
push
sti
mov
and
lret
lea
and
fidivs
mov
push
xor
add
aaa
sbb
xor
xchg
popa
movsb
lods
inc
cvtpi2ps
mov
push
cwtl
jmp
mov
xchg
stc
jl
mov
mov
rcl
shrl
jo
into
pop
sbb
fldcw
sbb
outsl
or
iret
inc
pop
in
inc
orl
xor
mov
xlat
jno
shr
jae
mov
jmp
loope
adc
in
pop
inc
shr
cwtl
jp
jae
dec
sbb
or
dec
fildl
adc
lcall
jno
cmpsb
pop
loope
insl
roll
inc
fiadds
movsb
jbe
lret
fwait
dec
arpl
in
pusha
xor
jbe
je
cmpsb
mov
in
cmp
xor
or
fistl
mov
sbb
or
mov
cmp
pop
mov
enter
out
adc
scas
imul
inc
jecxz
pop
jne
inc
inc
push
mov
aam
adc
xorb
jne
cmpsl
add
mov
or
mov
in
fistpl
inc
imul
ja
std
ret
lcall
push
in
gs
and
or
lods
pop
cli
jmp
lea
cmpsl
dec
or
cmpsb
push
jp
mov
fst
and
xor
sub
das
and
ss
xlat
add
cmp
movsb
test
mull
and
fs
xchg
mov
push
lret
sub
jge
xchg
pop
jg
in
push
push
loopne
adc
inc
jge
dec
ja
xchg
repz
or
loopne
jle
mov
sbb
pop
xchg
repnz
lock
fldcw
fisubrl
out
daa
scas
mov
fmull
sub
xor
cmc
mov
jl
or
stos
pop
mov
pop
popf
iret
jle
jmp
lods
sub
test
out
mov
mov
lods
xchg
imul
add
xchg
dec
jmp
std
not
fisubl
cltd
jmp
icebp
aad
jns
mov
or
scas
stos
shr
jb
mov
dec
js
ss
jge
sub
mov
jno
js
sub
insb
scas
inc
add
push
sahf
pop
add
lret
ss
out
das
stos
dec
and
pop
push
pushf
sbb
call
cwtl
xor
jo
pop
subb
add
pop
or
mov
mov
cli
test
out
mov
cmp
lds
mov
dec
inc
pusha
stc
dec
xchg
or
imul
shrb
movsb
in
test
inc
mov
dec
in
push
mov
ret
shlb
sahf
add
xchg
inc
cmp
fwait
lea
retw
int
insb
pop
sbb
ret
movsb
and
xchg
enter
or
mov
push
addr16
pop
cltd
ret
test
cmc
adc
or
and
into
adc
mov
mov
arpl
sbb
iret
push
movsb
inc
ja
mov
mov
dec
mov
mov
jb
pushf
adc
andl
jmp
fidivl
mov
or
cmp
pushf
rcr
mov
xchg
pushf
adc
sub
xchg
pop
inc
movsb
xchg
fwait
jb
repnz
or
iret
jno
push
repnz
inc
leave
pop
pop
mul
sub
xor
mov
xor
stc
dec
pop
shlb
xchg
sub
inc
mulb
push
xchg
test
push
out
or
sti
lea
mov
mov
mov
and
andb
mov
and
xchg
cmp
imul
dec
loope
jne
push
nop
inc
adc
int
scas
push
push
inc
cmpsb
add
push
xchg
in
pop
jmp
or
fisttpll
call
xor
mov
push
adc
out
fiadds
out
scas
jbe
loope
mov
sub
sbb
push
xor
lret
inc
cmpsl
pop
mov
imul
das
wbinvd
ljmp
adc
test
mov
ds
gs
insb
cld
cwtl
lds
jae
or
jmp
adc
add
push
lahf
cmpb
xchg
sbb
stc
test
xor
fnstsw
clc
fisubrs
movsb
cmpsl
jb
sub
adc
gs
test
mov
icebp
cmp
pushf
stos
push
pushf
mov
and
push
push
xor
jae
pop
push
or
bts
ds
sub
sub
pop
pop
jp
xorl
add
jmp
push
test
xchg
add
fwait
outsl
jb
into
add
sbb
sub
stos
mov
cmpsb
jge
ret
mov
dec
mov
leave
ds
neg
mov
push
inc
pop
sub
pop
popf
xor
dec
xlat
adc
mov
fcompl
cmp
xchg
aad
scas
inc
lahf
sbb
mov
mov
mov
mov
sub
movsl
movsl
sbb
mov
dec
mov
mul
ljmp
and
dec
xchg
cmp
out
or
rcll
inc
aam
idivb
loopne
jae
dec
aas
fstpl
jp
push
inc
ljmp
lahf
aam
fistpll
cld
mov
jo
and
cmpsb
add
push
sbb
aad
test
push
add
pop
mov
inc
dec
mov
xchg
popl
shrl
rcrb
out
outsb
mov
nop
jb
stos
cmpsb
xchg
sub
inc
sbb
sub
js
push
pop
out
out
and
lahf
xlat
dec
sub
lods
jbe
add
lock
insl
adc
fdivs
mov
bound
mov
mov
pop
aam
add
mov
xor
in
inc
lahf
out
xchg
jae
sub
sbb
jp
push
orb
cmp
mov
notl
cmp
pop
mov
mov
fwait
push
jno
pop
push
push
dec
aam
cltd
add
cmp
mov
orl
mov
mov
fwait
fwait
aad
sub
pop
pusha
lea
cmpsl
repz
adc
idivl
jno
xchg
xor
or
push
mov
bound
inc
in
pop
pop
and
xor
fldcw
pop
adc
cmp
push
dec
leave
out
js
clc
mov
notb
call
pop
aam
add
add
sub
pushf
jecxz
jp
repz
add
stos
push
mov
push
mov
loopne
xchg
cmpsb
dec
jae
push
mov
outsb
sbb
jp
mov
mov
push
mov
and
std
sahf
fcoms
hlt
orl
loop
xchg
int
daa
sbb
clc
scas
adc
psubusw
cli
inc
mov
test
mov
xchg
add
dec
and
inc
and
dec
fcmovb
adc
ja
out
leave
mov
in
lock
into
inc
loope
mov
rorl
bound
clc
adc
in
inc
sbb
cmp
and
fwait
sbb
push
pop
xchg
rol
mov
cmc
push
xchg
idivl
enter
mov
dec
sarl
in
dec
add
dec
insl
mov
cmp
mov
sahf
test
push
xchg
fstpt
int
rclb
repz
ret
mov
sub
pop
jns
inc
add
je
dec
cmp
sbb
cmpsl
inc
gs
lods
mov
xchg
adc
ficoml
or
testb
dec
xchg
mov
jg
dec
shlb
pop
add
mov
xchg
pushf
popf
and
cltd
in
xor
mov
sti
dec
fimuls
sbb
mov
cmp
in
sub
xor
mov
sub
jb
jmp
xchg
and
orb
fdivl
and
and
daa
fdivs
push
bound
aas
gs
repz
and
mov
sbb
aad
push
sbb
xchg
mov
mov
mov
leave
add
dec
fldcw
pushf
sbb
jne
or
xchg
sub
xor
lds
sahf
ds
cltd
outsb
popa
fs
call
xor
lahf
je
and
sti
int3
push
enter
repz
popf
mov
fwait
cmp
xorl
xchg
fimuls
cmp
inc
ss
sub
adc
xor
pop
jmp
inc
inc
xchg
lahf
popa
stos
ret
and
xorl
mov
loope
adc
lcall
inc
pop
in
inc
out
aaa
loop
es
fdivp
jae
lret
or
push
hlt
pop
jne
pop
push
cmp
mov
shr
pop
movsl
shll
rorl
xchg
aad
xor
hlt
into
mov
ss
lds
or
nop
sub
jno
into
sbb
jmp
in
push
jne
sub
out
sti
sub
shll
mov
ljmp
and
addb
scas
mov
subb
jns
fcmovnb
and
out
add
push
movsl
pop
scas
cmp
push
jp
sbb
and
lcall
rorb
in
fs
cmp
in
int
pop
pop
xor
push
add
lret
add
data16
faddl
or
cmpsl
cmc
imul
ret
mov
lret
jae
jecxz
mov
push
mov
or
xor
xchg
xor
mov
or
lods
shrb
sarl
sub
into
xor
mov
insb
aad
mov
dec
fs
push
test
cmp
hlt
jmp
mov
mov
ljmp
add
repz
ja
push
ss
and
dec
out
sub
xchg
pushf
lock
dec
cmp
mov
out
add
call
fwait
sub
scas
or
and
enter
pop
pop
lock
les
mov
xor
subl
pop
stc
pop
in
in
insl
sub
jbe
inc
cld
sub
aad
lods
mov
popa
daa
repnz
pop
arpl
lods
ret
xchg
fs
push
in
lahf
dec
push
xchg
adc
mov
gs
cld
push
xchg
andl
mov
mov
test
fstpt
outsb
jecxz
ja
aam
ret
in
jb
adc
jnp
int3
shrb
xchg
or
xor
push
pushf
pusha
jne
add
xchg
cwtl
jnp
mov
adc
fnsave
imul
mov
mov
adc
cmp
inc
cmp
mov
sbb
jmp
mov
pop
cltd
xor
mov
and
pop
push
js
and
inc
and
mull
sbb
xor
push
fists
mov
insb
sub
mov
popa
and
orl
mov
sub
xor
test
out
arpl
dec
mov
hlt
je
test
mov
cmpsb
fistl
mov
xchg
in
mov
lret
nop
mov
and
fsubrs
js
inc
repnz
add
cmp
mov
dec
dec
ja
xchg
xor
rcrl
jae
dec
movsl
mov
ss
mov
cmp
pop
mov
adc
push
jb
sahf
test
lret
test
lods
mov
adc
add
jae
cmp
push
jo
pop
jmp
sbb
jecxz
cld
dec
int
jmp
push
sub
insl
test
adc
mov
jno
inc
dec
sub
pop
mov
dec
stos
push
clc
rolb
and
popa
mov
adcb
inc
cmp
xor
test
mov
cmp
adc
fisubrl
rorb
je
outsb
pushf
xchg
or
mov
lret
cmpsb
cmp
adc
cmc
push
mov
out
adc
lahf
xor
inc
adc
test
push
inc
outsl
xlat
cli
sar
fsts
pushf
lcall
adc
jg
hlt
lock
es
cmp
mov
add
push
das
imull
aaa
scas
xchg
aam
iret
cmp
and
cmp
jnp
out
pop
mov
sbb
mov
sub
sbb
sbb
loope
bnd
add
inc
daa
inc
mov
in
stc
je
mov
call
jbe
rclb
sbb
loopne
stos
imul
and
fsts
outsb
stos
xor
ret
fisubrl
xchg
aam
push
xchg
fsubs
cmp
movsb
call
repnz
rcrb
cmpsb
ja
xor
ljmp
push
adc
aad
shl
orl
jbe
ret
add
fbstp
dec
inc
loope
dec
insb
xchg
dec
jmp
ljmp
fsubs
mov
cmp
add
lret
nop
enter
mov
adc
cmp
add
dec
fwait
mov
mov
push
shr
dec
jns
je
lods
and
pop
mov
or
lahf
inc
rcll
inc
in
jp
jmp
add
mov
inc
sbb
aam
inc
jmp
cmp
ret
xor
imul
mov
fwait
je
xor
call
cli
gs
push
insb
and
mov
popf
lock
icebp
jnp
push
jl
push
in
adc
inc
test
pop
rcr
xlat
mov
and
add
push
jle
add
sub
sarl
dec
and
dec
mov
ja
xchg
mov
repz
es
xor
jle
orl
fs
scas
sbb
icebp
addr16
jmp
mov
jp
test
sub
lods
fnsave
lcall
mov
pop
or
cmp
cmpb
ljmp
movsb
maskmovq
jmp
jmp
adc
jecxz
cmp
js
lret
mov
jns
cld
push
pop
pop
jle
push
or
pop
mov
add
cli
bound
clc
jns
ret
sarl
sbb
shlb
fs
pop
jg
pop
les
in
mov
mov
test
ss
in
xor
shr
orb
outsl
push
sub
push
nop
mov
jns
fistps
mov
jnp
and
cmc
push
push
aam
stc
stc
xchg
scas
sbb
inc
inc
repz
inc
aam
aam
and
xor
cmpsb
incl
insb
loopne
les
mov
add
sbb
mov
cmpsl
es
test
dec
or
pop
xchg
lret
xchg
adc
ljmp
dec
xchg
stos
in
lcall
mov
sbb
mov
sub
jns
clc
push
push
mov
cmp
daa
cmp
pop
pop
add
xchg
mov
test
xchg
xor
shr
add
add
ret
jnp
subl
inc
dec
mov
jp
sbb
mov
mov
call
loopne
insl
and
imul
mov
int3
add
enter
jmp
jb
add
mov
daa
dec
pop
mov
mov
xor
loop
mov
add
movsl
jae
scas
mov
lahf
dec
jp
sbb
pop
lods
push
xchg
add
ljmp
in
add
push
add
cmpsl
cltd
mov
cmp
leave
sbb
push
cmp
fwait
inc
cld
lods
cmpsl
negl
stos
repz
lods
lods
mov
dec
adc
xor
fistps
pop
cwtl
jmp
push
push
dec
pop
xor
dec
repnz
mov
or
push
cltd
jge
out
lds
cld
cwtl
out
mov
jns
call
rcr
mov
je
sbb
fimull
sub
push
push
sub
ffree
scas
dec
aas
lret
pop
mov
fimuls
in
out
cltd
cwtl
insl
adc
faddp
fwait
mov
and
loop
stos
andl
test
test
xlat
sbb
out
xchg
repnz
pop
pop
out
ss
dec
jle
aam
insb
mov
insb
dec
lock
cltd
push
imul
xchg
pop
fs
lcall
loop
jbe
sbb
cmpsl
arpl
adc
sbb
jge
xchg
inc
jmp
push
out
or
pop
ss
rorl
add
mov
dec
clc
adc
jle,pn
dec
and
xor
add
jle
push
add
aam
bound
xchg
pop
xor
stos
stos
ret
lock
push
sbb
in
sbb
inc
flds
repz
mov
or
or
popf
adc
enter
lcall
insl
cs
in
fcoms
in
cmp
arpl
scas
xchg
cmpsb
loope
mov
popa
add
dec
sti
sub
js
loopne
mov
icebp
push
sbb
insb
movsb
sarl
pop
dec
sbb
ss
mov
and
mov
arpl
dec
adc
fdivs
sub
push
clc
mov
fiadds
xchg
jb
call
push
xor
outsl
test
rorl
lret
push
fnstenv
mov
cmp
push
or
out
das
mov
xchg
xchg
pop
xchg
fisttpl
xor
ljmpw
cld
pop
sbb
addb
mov
inc
fcoml
bound
xchg
outsl
ficomps
rorl
adc
int3
test
jae
or
fisubs
into
push
test
repz
adc
out
nop
jecxz
sub
test
scas
adc
dec
dec
pop
cmp
jl
div
into
jge
or
dec
lea
push
loope
stc
shlb
or
add
jbe
out
sbb
or
mov
push
cld
jge
icebp
sbb
movl
lret
outsl
sub
adc
in
cmp
mov
push
push
sbb
lock
cmpsb
and
xor
push
mov
push
pop
and
inc
push
in
mov
in
ret
adc
cmpsb
cmp
pop
inc
cld
sbb
lret
pushf
mov
stos
rclb
ret
dec
mov
cmp
mov
lea
clc
mov
xor
addl
enter
xor
push
movsb
out
mov
aas
xchg
arpl
adc
jp
inc
sbb
cmpsl
mov
repnz
divb
xchg
lds
sub
jne
cmp
and
jge
loope
in
cld
or
out
jle
mov
fwait
mov
ss
pop
shrb
inc
inc
call
lret
int3
divb
adc
adc
xor
push
push
pop
cli
imul
aas
pop
data16
mov
popa
fwait
add
repnz
fistl
jmp
lret
sbb
lahf
push
sti
xor
inc
nop
dec
movsb
dec
outsb
xchg
and
and
ficomps
andb
pop
or
hlt
push
xor
movsl
fsubrs
neg
pop
cmp
ds
or
leave
iret
pop
in
mov
loope
push
xor
addl
cmp
testl
and
or
mov
data16
fsub
xor
xchg
xor
mov
and
test
mov
mov
stos
jecxz
push
aas
ret
adc
sahf
dec
mov
cmp
mov
lods
mov
xchg
mov
lods
out
xchg
inc
jmp
test
jl
cmp
cmpsb
add
push
rolb
push
das
loop
lods
sub
pop
cmp
mov
shll
cmp
jb
and
dec
leave
push
push
or
divl
mov
in
fs
cmp
mov
or
gs
insb
out
mov
pop
pop
jns
fisubrs
sbb
test
call
cli
adc
or
aas
or
xchg
pop
jno
int
jo
imul
and
pop
jo
pusha
cli
mov
in
mov
dec
popl
lret
cwtl
dec
mov
push
stos
xor
out
loopne
test
pop
loop
sub
xor
xchg
sub
out
orb
jmp
cs
push
stos
dec
mov
jno
and
or
push
mov
cld
xor
lds
repnz
or
stos
and
sbb
repnz
mov
and
push
xchg
das
push
ret
pop
jne
mov
xchg
dec
mov
add
pop
push
cmpsl
fwait
inc
movl
cmpsb
lea
test
enter
mov
sarl
out
cmp
mov
mov
andb
and
mov
stos
jmp
cmp
ss
movlps
test
mov
sti
pop
xchg
lds
out
pop
lret
andb
inc
jmp
or
arpl
sahf
int3
push
mov
jmp
sbb
pop
jns
dec
adc
inc
test
hlt
jle
xor
dec
push
or
add
cltd
daa
popa
insb
mov
cmp
xchg
add
loope
out
lcall
or
sets
loopne,pt
lods
popf
hlt
mov
popl
adc
jo
sub
lcall
jmp
xor
cmp
lea
lahf
push
push
or
and
dec
xchg
adc
leave
fisubrl
imul
aam
sub
pop
mov
rolb
mov
ret
and
shlb
push
sbb
mov
sahf
lret
lret
les
jae
mull
dec
inc
jmp
push
bnd
int
lcall
xor
lea
mov
push
cmp
jnp
loope
sahf
ja
adc
mov
ss
push
xor
mov
jnp
hlt
dec
sub
vcmpps
fbstp
push
or
in
fsubp
fbld
xor
cmp
xor
fcomi
sbbb
insl
push
notl
aaa
stc
outsb
iret
adc
inc
adc
jp
add
add
xchg
push
sub
pop
jb
or
add
movsl
lcall
int3
xor
rol
in
movsb
je
push
and
cmp
repz
lcall
mov
aaa
ja
outsb
stos
adc
push
mov
ret
push
xchg
divb
cmp
xor
insb
rol
lock
push
shl
cmpsb
xor
ret
xchg
mov
pop
into
addr16
dec
lahf
inc
aaa
test
jno
in
pop
push
mov
ds
movsb
or
or
lea
fucomp
imull
aad
mov
sbb
sbb
in
pop
and
lret
out
enter
xlat
push
test
sahf
push
jle
cpuid
ret
pop
out
popl
pop
push
ja
outsl
fs
sub
mov
bound
add
js
mov
pusha
jecxz
push
cmp
shr
out
cmp
int
cmpl
fisubrl
int
mov
int
push
sub
mov
cmpsb
mov
add
jns
xchg
push
xor
jecxz
sbb
inc
subl
insl
pop
dec
addl
fisubs
sub
notl
jno
stc
add
pop
jb
andnps
push
pop
and
jbe
add
imul
pushw
inc
imul
rcrb
test
out
pop
mov
movsl
ljmp
movsb
clc
dec
lret
xchg
rcrl
ja
icebp
ss
repz
dec
out
xor
xchg
push
dec
aas
mov
sbb
sarb
les
cmp
test
imul
imul
fimuls
pop
dec
dec
mov
jp
cltd
or
ficoms
dec
inc
lods
js
inc
mov
sbb
xchg
sub
jne
loop
fstp
adc
cltd
mov
xchg
sbb
sub
jmp
lods
rcll
pop
shrl
lret
ret
jle
push
lock
jmp
mov
cmpsl
movsl
scas
addl
xchg
js
add
or
jp
ja
mov
mov
cwtl
ja
pop
xor
hlt
jne
and
push
sub
jno
pop
mov
jmp
cs
lock
push
mov
dec
mov
adc
add
shr
pop
jge
pop
mov
inc
push
fnstsw
roll
ss
mov
cmpsl
push
push
push
fmull
stos
add
das
cmp
rcr
cmp
push
sbb
jb
ficoml
dec
stos
stos
add
push
popa
into
enter
mov
ret
pusha
imull
mov
lods
sub
adc
imul
dec
sbb
nop
pop
dec
xchg
pop
jle
dec
das
push
pop
repz
orb
test
pop
mov
pop
js
xor
test
pop
xchg
mov
sbb
xchg
shlb
loopne
xchg
nop
insl
bound
in
divb
push
popf
mov
xchg
mov
mov
lret
orb
pushf
movb
shrb
arpl
popf
cmp
enter
push
xchg
jnp
shlb
mov
dec
inc
cmpsb
pop
pop
insb
xchg
or
cmp
xor
dec
movsl
stos
in
push
xor
bound
mul
dec
outsl
pop
pop
movsl
fsubrl
divb
stc
or
adc
lods
jp
add
xlat
sub
fmul
lahf
or
adc
loope
mov
mov
jnp
sti
in
add
lods
js
add
cmp
or
dec
ficompl
and
xchg
add
scas
dec
movb
repnz
sub
aaa
or
imul
jnp
movl
aaa
mov
bound
mov
fwait
cmpsl
jb
cs
jle,pt
aas
or
or
outsl
loope
mov
cmp
push
add
and
enter
mov
into
dec
aaa
cmc
mov
mov
sbbb
sub
mov
xchg
shl
fdivl
push
cli
stos
sbb
cmp
inc
push
aaa
cmc
test
shrb
dec
hlt
ftst
or
fistpl
or
addl
das
mov
mov
gs
sub
aam
jp
sti
jecxz
inc
lahf
int3
mov
insb
sahf
pop
lcall
sahf
setns
push
sahf
in
je
and
push
mov
std
aad
sub
out
bound
or
mov
orl
mov
scas
jle
dec
movsb
in
shr
mov
add
adc
lea
add
data16
pushf
jecxz
and
xor
out
fdivl
lret
xor
or
mov
dec
dec
test
mov
call
stos
inc
pop
jo
repz
add
and
jo
xchg
popa
xor
lods
xorl
jge
xchg
xchg
arpl
mov
push
jnp
es
jae
xorl
cmp
jp
fwait
push
popa
mov
fwait
add
pop
aad
ds
movb
orb
adc
data16
xor
cs
lret
pop
mov
movsl
in
cmp
ret
in
dec
jmp
xor
unpckhps
mov
sbb
iret
mov
xchg
xor
fisubrl
shlb
out
hlt
sbb
sbb
mov
loop
sub
mov
mov
enter
repz
xchg
lret
movsl
push
fsubrl
adc
fisubs
fucomi
inc
in
pushf
test
testb
loopne
sahf
in
iret
pop
inc
dec
push
stos
clc
stos
out
mull
mov
xlat
mov
ljmp
cmp
ja
sbb
or
push
gs
mov
and
mov
cltd
rorl
xchg
jecxz
outsl
jecxz
and
pop
sbb
in
cmp
mov
mov
mov
pop
mov
jg
cmp
xor
jbe
test
pop
lods
pushf
jmp
cmp
jnp
sahf
fcomps
mov
dec
es
jb
push
pop
movsb
in
dec
fsubrp
cltd
adc
cmp
addr16
lahf
and
out
push
ficoml
pop
cmp
scas
test
out
sub
repnz
sbb
subl
mov
inc
lahf
cwtl
lock
out
ds
mov
js
data16
fmuls
mov
push
mov
pop
loope
shll
mov
clc
jg
push
pop
sbb
aam
sub
aad
add
cmpsb
dec
dec
fwait
rcrb
sti
xchg
in
sahf
dec
decb
xor
out
sbb
push
rcll
cltd
and
aaa
pushf
in
cmp
js
int
xchg
mov
or
inc
mov
sbb
rolb
adc
cmp
xor
movsb
pusha
push
mov
sub
scas
popf
lret
loopne
pop
fisubs
cwtl
jbe
mov
orb
xchg
cmp
dec
jns
jle
ficoml
fisubrs
mov
xchg
cmp
pop
and
dec
int3
mov
dec
fmull
jae
push
roll
push
mov
xchg
mov
push
adcl
xchg
or
in
inc
movsl
xor
insb
mov
fsub
sub
cmp
adc
shlb
outsb
cmpsb
rolb
leave
xor
ret
xor
sbb
cmpsl
dec
mov
je
in
adc
mov
jge
xchg
pop
sahf
test
push
rcrl
sbb
dec
xchg
pop
jle
jae
pop
and
loope
lcall
pop
dec
stos
ret
imulb
sbb
mov
fbld
mov
mov
add
mov
inc
xlat
pop
loopne
push
or
cmp
fucom
ret
paddq
mov
mov
cmc
dec
roll
cmp
ficoms
sar
scas
jg
cwtl
fmul
addr16
pop
dec
call
sbb
push
adc
pushf
or
mov
ss
fdivs
cmp
fxam
inc
mov
fnstcw
cli
lea
mov
jo
sbb
in
or
mov
xchg
or
or
outsb
dec
imul
mov
mov
push
mov
loopne
bound
mov
adc
sub
repz
aad
push
xchg
mov
fsubs
xchg
xchg
cmpb
inc
insb
lea
mov
xor
xor
icebp
dec
pop
cld
fimull
daa
inc
popa
ljmp
outsb
int
stos
xor
test
xchg
or
jb
jge
or
movsl
push
xchg
sbb
and
mov
bound
mov
sbb
mov
out
rorb
mov
xchg
jecxz
adc
fs
jle
clc
sbb
rolb
dec
call
dec
sbb
inc
aas
or
dec
xchg
in
cld
inc
cmpsb
xchg
sub
cmp
sbb
push
cwtl
js
push
xchg
or
jae
jmp
sub
test
mov
mov
test
jno
test
ds
es
adc
imul
pop
out
in
push
dec
int3
adc
negb
fwait
or
sbb
pop
mov
jae
mov
xchg
or
inc
jnp
lret
mov
pop
mull
sbb
mov
lods
out
adc
cmp
xchg
jne
xlat
mov
xchg
xchg
add
movsl
xor
mov
cmp
sub
dec
gs
lcall
mov
stos
xor
and
jle
push
cmp
sbb
mov
cmpsl
pop
push
inc
aaa
push
repz
xor
shl
and
xor
add
cmpsl
pop
jg
ja
call
mov
loopne
cmp
rclb
mov
fcmovne
jo
push
cmp
cmp
aad
sub
sub
or
xchg
xor
sbb
lods
pop
mov
mov
nop
into
push
stos
mov
sti
cmc
lds
mov
roll
stos
mov
dec
xchg
inc
addr16
sti
je
cltd
inc
scas
outsl
nop
mov
cwtl
in
push
push
add
pop
dec
test
dec
adc
jo
stos
lahf
aad
cs
fiadds
mov
mov
xchg
nop
rol
repnz
add
xlat
inc
mov
cmp
ds
mov
inc
repz
mov
jne
or
and
outsb
mov
test
in
test
and
imul
sub
imul
sbb
cmc
pop
fstps
das
dec
loope
push
jne
and
pop
lods
mov
fs
mov
js
daa
adc
sub
or
mov
insb
lods
es
sub
sub
xchg
mov
mov
adc
or
sbb
out
xchg
subl
or
dec
push
rclb
enter
pop
insl
fadd
rorb
pop
jmp
sti
jle
xchg
test
clc
jp
or
ret
pop
mov
popf
add
in
dec
sub
jne
pop
cwtl
out
cld
int3
rorl
pop
getsec
mov
mov
mov
nop
out
sbb
mov
scas
fisubrl
and
pop
testl
xchg
adc
bound
loope
pushf
adc
and
clc
sbb
rorl
jbe
jl
and
flds
dec
mov
push
ljmp
mov
imul
test
test
inc
divb
or
lods
lahf
leave
sbb
ficoml
adc
fisubs
loopne
popa
add
push
jnp
sbb
sbb
scas
les
dec
push
cwtl
ret
data16
sbb
xor
iret
jl
sub
mov
sub
mov
xchg
sbb
fnsave
mov
fdivrs
pop
jbe
orl
aad
lea
jmp
jo
cmp
dec
out
jecxz
cmovns
icebp
lods
call
das
test
pop
adc
or
int
fisttpll
inc
and
lock
add
test
inc
jno
pop
jns
push
fldcw
in
jl,pt
ret
jge
inc
xchg
inc
pop
xchg
mov
xchg
mov
jae
or
add
sub
insb
jnp
stc
inc
mov
nop
mov
fistpll
in
loopne
in
mov
inc
std
popf
js
pop
les
inc
clc
adc
xlat
inc
sbb
js
xchg
or
xchg
movsl
out
or
ror
lahf
sub
fcomps
orb
add
jmp
push
cmpsb
mov
rol
aam
loope
loop
rorl
and
cmpsb
mov
fsubl
jno
jae
fmuls
cmp
jmp
out
imul
mov
xchg
sbb
xchg
and
sbb
add
push
int
jno
sub
add
sub
pop
cltd
mov
fidivl
adc
xchg
out
lods
daa
pop
xor
scas
sub
add
addl
call
mov
cmp
outsb
push
inc
pushl
mov
push
jecxz
jecxz
pusha
scas
in
pop
int3
xchg
fcomp
xchg
xchg
dec
mov
jl
dec
mov
ret
sub
push
mov
mov
push
cmc
cmpsb
xchg
cmp
fadd
daa
push
es
subl
or
sub
jnp
xchg
fadds
mov
stos
addb
add
fnstsw
out
inc
ljmp
adc
add
jp
testl
lea
mov
aaa
sub
jmp
and
xor
mov
xchg
lods
push
sahf
adc
mov
orb
popf
and
fstps
in
jge
inc
mov
xor
mov
out
push
subl
jl
sbb
dec
sbb
adc
sub
aas
or
add
sbb
or
fcoml
movsl
dec
inc
daa
cmp
or
sbb
clc
shl
mov
test
fcmovnbe
adc
and
xor
mov
iret
addr16
outsl
dec
hlt
ja
in
dec
add
je
orl
jno
or
jnp
roll
fmul
rorl
das
int3
dec
movsl
dec
jl
push
std
jo
pop
push
push
jmp
or
std
xor
push
add
pop
movsb
outsb
pop
orl
lahf
loope
popa
out
push
push
fstpl
int3
fmull
lods
sbb
fucompp
mov
jno
xchg
lahf
mov
fldl
das
mov
iret
ret
out
dec
push
stos
dec
mov
sbb
cld
dec
std
mov
mov
imul
add
push
hlt
jmp
dec
pop
xor
lds
mov
lret
aam
out
sar
push
jns
je
and
dec
ds
jb
push
or
xchg
inc
jno
cmp
lcall
sbb
lret
and
cmp
add
aaa
loope
pop
dec
push
test
in
mov
fsubrs
jl
xor
xor
or
ret
fstl
pop
mov
sbb
ljmp
mov
adc
ficoms
mov
jo
pop
loopne
stos
lock
add
and
flds
or
lds
aaa
push
xchg
adcl
xchg
fs
ja
pop
cmp
mov
icebp
or
adc
xor
outsl
inc
mov
idivb
push
inc
cmp
mov
les
adc
xlat
jle
mov
xchg
cmp
adc
out
push
push
ja
sbb
std
mov
sahf
imul
jmp
ret
movsl
mov
cmp
pop
aam
adc
xor
les
push
and
xchg
nop
and
mov
es
mov
rclb
sbb
dec
mov
in
jns
pop
ds
xchg
push
and
or
xchg
sbb
mov
pushf
lcall
sub
xchg
xor
mov
js
pop
ljmp
fdivrl
loop
popf
and
hlt
adc
xchg
lods
dec
scas
adcb
scas
cld
mov
mov
mov
pop
scas
ljmp
inc
sti
adc
test
pop
cmc
fldenv
sahf
mov
push
jns
or
int3
pop
mov
mov
xor
test
adc
ja
mov
push
movsb
in
icebp
mov
and
xor
js
jne
mov
xlat
jmp
jno
push
add
push
mov
or
xchg
or
jg
jle
or
aas
gs
mov
repz
popa
pop
sbb
popf
sbb
push
cld
shrl
out
orb
and
fs
sti
inc
mov
in
cld
movsl
clc
and
push
daa
mov
adc
and
sbb
mov
rcrb
leave
sbb
jno
adc
lret
test
mov
sub
ret
pop
push
xor
hlt
sub
and
mov
add
cli
fcomi
xchg
mov
insl
out
ljmp
jmp
mov
das
dec
jmp
push
mov
dec
imul
movsb
popf
es
movsb
in
jp
negl
adc
loopne
pop
decl
mov
xor
jle
jecxz
dec
or
outsb
adc
dec
mov
es
adc
inc
stc
hlt
sub
jecxz
mov
inc
xchg
test
aaa
loope
es
sbb
adc
xchg
sbb
addr16
xor
and
outsb
jp
sub
cld
stos
cmc
lret
lea
out
jg
nop
lcall
xchg
loope
xchg
xchg
pop
jge
data16
repz
push
push
push
inc
dec
popf
mov
movl
push
jne
or
push
cmc
pop
call
mov
cmc
icebp
out
push
adc
mov
adcb
xchg
and
imul
pop
fcompl
fdiv
sub
stc
mov
loope
cmp
jmp
scas
inc
mov
into
push
and
jbe,pn
lea
pop
pop
dec
fs
ret
sarb
arpl
mov
cwtl
jle
jl
push
mov
or
pop
mov
test
repnz
sbb
jo
enter
sbb
aaa
cmc
stc
inc
and
jae
lcall
sbb
add
push
xchg
enter
cs
mov
jmp
pop
into
xchg
movb
pop
and
test
xorb
fdiv
mov
cmp
mov
pusha
jo
shlb
jp
or
push
lods
or
or
jne
mov
lea
out
icebp
jecxz
aas
xchg
sbb
cmp
push
fldl
adc
imul
sub
loop
dec
jp
pop
adc
jg
sbb
negl
outsb
xchg
and
mov
test
test
loopne
push
hlt
repnz
lock
pusha
mov
fldenv
inc
mov
add
lea
fsubrl
pushf
bound
mov
cmpsb
roll
sub
repz
push
sbb
add
mov
jnp
mov
sbb
pop
xchg
sbb
test
imul
daa
loope
into
aaa
mov
jge
rorl
lea
lods
mov
dec
mov
test
mov
mov
sahf
or
sub
dec
out
xor
repz
ret
inc
les
or
leave
outsb
je
mov
adc
adc
aam
out
xchg
loop
loopne
add
outsb
cmp
pop
xor
out
sbb
arpl
adc
test
push
push
ss
mov
add
loop
xor
mov
push
cld
jmp
test
cmp
ret
mov
xor
add
and
or
cli
lds
push
jb
push
mov
outsl
or
jbe
mov
add
sbb
loop
pop
sub
hlt
pop
or
das
out
mov
xlat
hlt
xor
aad
xchg
in
sbb
sbb
dec
daa
vsubpd
pop
inc
and
pushf
pop
xchg
jns
imul
jl
mov
jecxz
or
push
and
cmp
xchg
into
and
jns
push
imul
loopne
int3
dec
pushf
cmp
and
mov
inc
dec
pop
pop
insb
nop
mov
call
and
push
or
cmp
in
insb
push
push
pop
lret
xlat
pop
mov
push
add
les
pop
and
imul
andl
xchg
fildll
loop
mov
sbb
fmul
xor
aam
repnz
and
mov
pop
arpl
rcl
sbb
mov
test
mov
lret
negl
sub
mov
in
ret
enter
or
popf
push
call
jnp
mov
inc
shrl
and
loopne
xor
jl
scas
mov
adc
add
data16
add
mov
test
popf
hlt
mov
icebp
popf
jae
xchg
dec
jg
pop
push
and
jbe
mov
dec
push
mov
or
icebp
sbb
or
scas
dec
jmp
xchg
movsb
cli
pop
test
iret
cmpsb
hlt
into
lods
pop
sahf
mov
insl
in
arpl
outsl
int3
ret
push
cmp
and
outsb
adc
xor
js
sahf
and
push
fsts
mov
pop
dec
mov
in
adcl
hlt
fldcw
rdtsc
jae
add
inc
es
adc
sub
iret
shlb
aas
cmp
jge
pop
mov
cmp
shl
test
xchg
lock
icebp
jnp
add
and
test
pop
or
std
icebp
jle
cld
fldcw
popa
lret
adc
pusha
in
ret
test
mov
aam
aaa
xor
das
rcrl
rorl
mov
mov
cmc
ret
inc
negb
imul
adc
adc
or
sbbb
cmp
lcall
sbb
adc
sbb
or
in
int
fisubrs
inc
mov
jb
ljmp
jp
ds
outsl
jae
add
xchg
mov
cmpsb
or
fsubs
xchg
lahf
xchg
xchg
pextrw
dec
cmpsb
idivl
leave
clc
sarl
push
push
jg
mov
hlt
into
xchg
and
jle
outsb
xor
movsb
mov
arpl
xchg
lcall
flds
mov
out
repz
insl
adc
imul
or
sbbb
push
sbb
pop
movsl
lcall
lret
orb
or
icebp
hlt
arpl
xchg
or
xchg
nopl
add
sub
mov
ret
notb
pop
inc
insl
sbb
adc
and
je
arpl
mov
cltd
mov
jmp
int3
js
cs
pop
xor
xchg
stc
push
pop
mov
ficoml
mov
int
into
ret
pushf
and
test
fcmovnu
inc
repz
out
loop
test
jle
call
fwait
sbb
pop
mov
movsl
push
aaa
mov
sub
xchg
adc
inc
mov
loopne
pop
sahf
cli
subl
push
pop
inc
mov
dec
lea
pop
xor
and
aam
cmp
cmc
lret
lods
ret
inc
sti
sbb
jl
dec
fsubr
cltd
inc
and
hlt
in
xor
add
xor
aad
dec
pop
lea
xchg
rcl
push
or
movsl
pop
inc
jbe
cs
cmp
pop
or
pusha
inc
cwtl
rolb
sbb
test
or
mov
in
or
sub
inc
lea
ret
jae
insl
test
ret
mov
inc
mov
idivb
add
and
outsb
das
mov
and
fisubs
pop
push
jl
or
or
icebp
push
adc
rolb
mov
sbb
aad
jmp
cmc
cmp
pop
jp
pop
outsl
stos
mov
push
adc
lods
inc
mov
adc
icebp
and
loop
or
cmpsl
inc
jae
xchg
rorl
jo
adc
fldl
mov
aas
sahf
sbb
add
jae
jmp
cld
loope
push
lods
outsl
lock
mov
sub
rcrb
std
roll
push
mov
cmp
push
lret
pop
inc
movb
test
mov
cld
jle
int
fisubs
jge
shl
sbb
lret
mov
cmp
andb
and
sahf
dec
push
dec
std
lock
dec
xchg
lea
mov
aas
inc
sbb
scas
idiv
ljmp
hlt
mov
and
call
imul
loopne
mov
iret
push
mov
mov
cli
enter
lcall
fwait
sti
mov
arpl
das
pop
xchg
or
ret
fdivl
inc
mov
xor
test
mov
or
xchg
pop
insl
jne
jmp
and
scas
jl
cmpsl
arpl
inc
into
xchg
test
xor
push
test
leave
jb
push
cs
es
cltd
add
mov
hlt
fdivrl
mov
dec
add
sbb
mov
pop
sbb
scas
out
push
pop
add
mov
movsb
test
xor
addb
mov
or
repz
fbld
pop
mov
jle
push
sti
jp
push
mov
fldenv
mov
push
outsl
xor
cmp
loope
xor
push
sub
mov
inc
daa
add
dec
xor
les
push
scas
in
cld
jmp
xchg
loop
cmp
dec
mov
jle
dec
adc
cmp
pop
ja
push
out
stos
and
popa
push
das
xchg
mov
pop
test
lret
jge
xchg
sbb
addb
jbe
jae
rcrl
in
in
add
xchg
stos
cmpsb
fwait
sahf
mov
outsl
js
jb
xchg
push
dec
xor
aam
dec
cmpsl
in
mov
in
test
shll
test
cmp
jl
lods
dec
jl
mov
xor
sbb
aaa
and
xchg
fildl
jp
jge
push
arpl
mov
lea
imul
pop
shll
xor
scas
shrl
push
xor
mov
dec
push
lahf
repz
repz
in
sub
js
cltd
inc
out
fsub
loopne
js
jbe
fs
cmpsl
inc
mov
pop
clc
inc
mov
inc
mov
rol
fcomp
sub
int
sahf
iret
sbb
jbe
jp
add
cmc
or
ffree
int
mov
clc
xorl
and
aad
sbb
scas
out
inc
sbbb
add
ret
add
test
xchg
sub
add
aad
dec
fwait
loop
lds
xor
mov
mov
jns
and
inc
shll
int3
mov
popf
mov
jecxz
inc
pusha
or
cltd
loop
dec
fcmovbe
pusha
addr16
mov
mov
outsb
loope
dec
push
or
subb
sbb
cwtl
xchg
lock
out
sbb
fwait
mov
ret
sbb
mov
adc
pop
sub
popf
jne
fildll
xchg
mov
gs
inc
pop
adc
mov
sub
ffreep
addr16
push
cmp
test
test
jle
pushf
mov
scas
sahf
push
repnz
xchg
inc
cmp
push
and
mov
jbe
cmpsb
or
int3
roll
aas
sub
int3
les
sbb
adc
bound
test
pop
inc
ret
xor
xchg
lds
outsb
jnp
ret
pushf
rorl
cmp
loope
scas
or
stos
xchg
pop
mov
mov
dec
cmpsb
arpl
push
imul
add
clc
adc
pop
xchg
push
mov
popf
subb
loopne
xchg
push
ja
ljmp
jns
xchg
jmp
mov
sbb
test
xchg
outsb
pop
sbb
sbb
pop
mov
in
push
pop
xchg
fcoms
pushf
icebp
daa
shlb
sbb
lret
pop
jecxz
pop
cmp
popa
das
or
xchg
sub
dec
in
or
andl
in
push
push
xchg
push
test
adc
mov
mov
push
push
add
sbb
sbb
inc
cmp
cs
mov
repnz
push
xchg
mov
test
fcoms
pop
lds
fldlg2
loopne
aam
clc
setae
idivb
jge
jns
imull
sub
enter
or
repnz
sub
or
xchg
outsb
mov
add
mov
shll
loop
push
push
stos
mov
sub
jg
adc
inc
adc
cwtl
daa
sbbb
or
int
nop
adc
xor
mov
pop
je
push
ja
adc
out
push
daa
jbe
ljmp
or
fs
dec
leave
push
mov
aas
add
sbb
aam
cmp
add
shrl
jnp
sbb
adc
imul
addr16
add
into
fadd
mov
cmpsl
add
cmp
gs
dec
pop
test
sub
xchg
pop
sub
push
pop
mov
negb
fwait
or
adc
dec
xor
dec
lods
std
cmc
arpl
jbe
adc
adc
jg
aam
mov
or
scas
or
lods
add
ss
adc
mov
loop
popf
mov
mov
rorb
inc
cmp
ja
and
insl
test
jmp
out
adc
cmpsl
sbb
loope
xchg
xor
mul
data16
add
jmp
es
mov
out
enter
jmp
pusha
lods
int
addr16
pop
jg
cltd
xor
cld
add
aam
xchg
cmp
test
jmp
xchg
jae
out
mov
mov
js
daa
pop
icebp
and
mov
push
xor
dec
mov
pop
stos
movb
movsl
into
inc
ja
loopne
xchg
xchg
mov
sub
xchg
addr16
inc
scas
js
js
rcrb
cli
add
dec
cmc
mov
adc
inc
mov
outsb
mov
cld
repnz
lret
xchg
add
rcll
mov
dec
xor
insb
loope
ret
cmpsl
es
enter
fmull
ss
test
subl
jnp
mov
out
fisubl
pop
push
pop
iret
xchg
lds
push
xchg
adc
aad
xchg
lods
lret
sbb
cli
adc
mov
inc
xchg
mov
cmpsl
jge
stos
or
popa
inc
mov
mov
out
mov
mov
adc
dec
mulb
fimull
pop
lea
and
sti
imulb
jge
bnd
xor
jae
in
push
and
hlt
outsb
push
adc
test
nop
stos
lret
inc
rep
pop
mov
sub
shll
movsl
jne
in
xchg
dec
add
or
cmp
inc
cs
jns
loop
push
cmpxchg
rclb
test
mov
xchg
add
or
xchg
es
loopne
mov
int3
jb
mov
dec
call
or
test
ljmp
cmp
insl
push
bound
cmpsb
xor
cwtl
push
addr16
sub
push
jo
pushf
inc
nop
nopl
push
xchg
pop
jo
loop
jge
ja
xchg
adc
xchg
ret
sub
jbe
ja
and
in
pop
adc
cmc
test
adc
push
lret
push
push
cmp
jecxz
aam
js
imul
dec
icebp
adcb
lods
dec
arpl
sbb
int3
xor
loop
stos
ret
jbe
sbb
jb
mov
pop
pop
sbb
or
pop
aad
dec
loopne
mov
clc
cmp
lock
out
or
mov
and
inc
arpl
pop
jae
xchg
fmul
stc
notl
lret
inc
inc
frstor
mov
add
punpcklwd
mov
cld
shlb
sbb
lea
xchg
inc
test
in
xchg
jle
xchg
imul
jg
lods
sbb
lods
ret
add
cmp
pop
mov
pop
sub
leave
push
push
mov
cltd
push
add
aad
mov
adc
imull
sti
xor
cmp
sarl
repnz
ja
mov
insb
js
out
dec
adc
lds
jp
dec
decl
int3
push
clc
xchg
fwait
mov
or
push
in
jne
fstl
jno
mov
add
clc
or
je
pop
fildll
cmp
cs
mov
jle
ljmp
cmp
pop
xchg
sub
adc
and
mov
lea
insb
or
add
jnp
out
cmpsb
xor
not
in
arpl
popf
xchg
mov
cltd
aaa
imulb
jbe
dec
jno
icebp
test
jo
and
xchg
xchg
inc
mov
inc
insb
in
push
dec
adc
pop
inc
int3
ret
xor
outsb
enter
mov
pop
dec
aas
fdivl
int
lret
out
xor
sub
sbb
inc
or
icebp
ror
lahf
sub
xor
loop
int3
mov
sbb
push
jecxz
cwtl
dec
push
push
dec
inc
inc
ror
jmp
lahf
xchg
xor
sub
mov
push
frstor
icebp
sbb
push
andl
das
shlb
dec
xorps
adc
mov
cwtl
mov
sub
lcall
jne
in
fidivl
or
mov
lea
daa
or
jle
sub
jns
shll
in
popf
inc
fwait
pop
pop
das
push
pop
aam
test
mov
inc
inc
pop
mov
into
int3
lods
fidivrl
stc
mov
popa
pop
gs
jmp
dec
loop
ss
outsb
mov
movsb
loopne
aad
nop
mov
fcmovnbe
test
inc
fldt
push
insl
mov
popa
iret
sahf
sbb
icebp
dec
repnz
insb
subb
xor
adc
mov
mov
jne
adc
xor
push
fwait
mov
dec
push
cmc
or
arpl
jge
xor
call
dec
roll
adc
test
gs
xchg
lods
sub
pop
roll
push
pop
mov
mov
and
and
cmp
xorb
fucom
xlat
dec
dec
sbb
mov
cwtl
dec
xchg
sub
inc
mov
int
push
mov
jnp
stos
jo
or
mov
mov
aas
mov
clc
out
inc
sub
xor
or
push
movl
pop
sbb
push
leave
lcall
xor
push
loop
mov
push
sbb
mov
xchg
pop
jb
pop
faddl
lret
lahf
jle
jl
test
mov
dec
aaa
or
mov
cmc
push
sub
cmp
xchg
out
imulb
std
pushf
jb
ret
mov
movsb
pop
nop
xor
fiaddl
jno
mov
ret
adc
flds
out
pushf
movd
rclb
sub
jo
cli
push
clc
pop
leave
jbe
or
movsl
leave
adc
sbb
jo
mov
and
xor
inc
inc
mov
fildll
dec
push
fsubrl
xchg
loopne
xor
jle
xchg
mov
cmp
scas
scas
ds
mov
push
dec
push
mov
fs
jl
loope
dec
lods
adc
pushf
or
ljmp
jmp
or
mov
push
cmp
int3
add
arpl
into
xchg
jecxz
outsb
jp
loop
jmp
jecxz
cmpsl
add
pop
lock
adc
inc
in
out
mov
sbbb
sub
loope
fidivl
movsl
sub
scas
pop
movsb
movsl
or
std
mov
mov
inc
push
xor
mov
push
fiadds
add
jp
mov
lods
les
cmc
add
stc
aam
sahf
sub
or
add
jle
imul
push
push
dec
adc
mov
add
in
and
imul
mov
dec
cmp
movsl
dec
aaa
cmp
xchg
jle
xor
pop
aad
cmp
sti
or
pop
xchg
test
xchg
nop
repz
xchg
or
lcall
lods
pop
lods
jno
cmpsl
gs
and
popa
mov
test
cli
and
in
mov
dec
in
pop
jo
jge
xchg
clc
adc
stos
jne
leave
lea
mov
dec
nop
into
into
scas
mov
cmp
not
push
mov
mov
call
adc
test
fildll
imulb
gs
jne
call
stos
jecxz
jae
push
xchg
hlt
mov
pop
pushf
inc
in
dec
jns
mov
loop
hlt
mov
push
jg
rcll
lahf
inc
push
lret
sbb
icebp
push
or
jl
pusha
shrl
bound
popa
fucom
fnstcw
fstl
push
jno
jae
dec
mov
mov
cmp
dec
imul
xchg
mov
xor
fbstp
mov
lods
pop
dec
call
scas
sub
dec
pop
lahf
mov
jg
sbb
mov
or
gs
mov
mov
popa
bound
cli
out
addr16
addr16
mov
xor
data16
cs
out
mov
fmuls
andb
mov
sbb
cmpsb
call
pop
rorl
mov
leave
or
cwtl
adc
into
in
xchg
sbb
loop
jae
pop
mov
call
cmpsl
jg
lea
ss
mov
mov
loop
xor
jne
or
repz
stos
pusha
dec
clc
test
dec
add
sbb
jne
pushf
and
repz
jb
repz
je
nop
daa
sub
mov
aam
mov
inc
out
xchg
mov
and
push
jno
lcall
mov
rorb
orps
inc
add
pop
jns
adc
enter
inc
pop
std
and
or
cmpsl
arpl
and
mov
xor
inc
dec
or
in
mov
jmp
mov
mov
jg
imul
bound
cmp
fsubrs
jae
aaa
je
inc
outsb
cmp
mov
inc
cmpsl
sub
inc
test
pop
sbb
mov
dec
mov
into
cltd
sub
shlb
rorb
xchg
or
ret
pop
sahf
mov
add
push
lods
lahf
addr16
test
push
popa
cli
sub
lahf
loopne
lea
or
sub
push
push
sti
iret
jbe
pop
push
sahf
mov
cwtl
lahf
push
outsb
sti
mov
dec
xchg
movsl
decl
xlat
adc
inc
inc
cld
cld
icebp
pushl
or
pop
cli
lds
mov
adc
ss
xchg
jb
add
fnstsw
les
push
jle
data16
xor
pop
int3
cwtl
sbb
addb
mov
pop
cmpl
mov
push
sbbb
adc
cmc
mov
cmc
mov
and
or
or
adc
pop
or
or
cmp
lods
pop
ror
jmp
sar
xor
cmpl
sub
out
dec
lahf
inc
jge
pop
cwtl
push
xor
negl
pop
clc
xor
xor
jl
sub
stos
es
test
fists
hlt
sub
insb
test
inc
scas
xor
hlt
inc
shlb
xchg
hlt
ret
test
mov
cli
test
push
stos
loope
cmp
mov
mov
cmp
push
pop
aaa
xor
cmp
xchg
inc
push
arpl
test
dec
mov
xor
fwait
pop
clc
add
pop
movsb
add
in
scas
sti
int
cmc
out
fldpi
xchg
clc
dec
inc
out
mov
nop
ret
mov
gs
or
lock
fs
test
dec
cmp
mov
stc
lret
std
es
inc
add
stos
fucomp
pop
fnstenv
lods
cmp
jb
lahf
ljmp
push
dec
ret
push
ja
adc
mov
xchg
and
mov
add
mov
cmp
mov
jmp
mov
adc
daa
fbstp
push
xor
xchg
mov
cmp
sub
fwait
mov
cmc
in
pushf
push
xor
repz
inc
lods
adc
mov
cmp
mov
into
xor
out
cld
and
out
test
mov
out
sbb
xchg
sbb
cmp
nop
xchg
pop
xlat
gs
es
sub
or
mov
pop
call
xrelease
std
or
fistpll
jae
ror
cltd
enter
mov
popa
mov
mov
sub
cli
subl
cld
push
iret
push
das
jmp
adc
pop
scas
scas
and
test
lcall
or
mov
test
es
and
mov
add
lock
loop
es
outsb
mov
jmp
shll
sbb
sbb
xchg
cld
gs
sbb
jg
jg
xchg
push
lcall
popa
xor
jmp
ja
jge
or
dec
imull
mov
mov
outsl
jne
pop
pop
dec
adc
decl
idivl
mov
mov
inc
lock
jno
rcll
stc
ret
or
testb
insb
test
or
push
ja
sarl
mov
push
xor
and
fstps
lcall
gs
adc
jbe
repz
adc
leave
fwait
daa
sub
stc
mov
mov
dec
push
arpl
adc
lods
fdivl
hlt
pop
and
out
adc
fnstcw
or
ja
inc
xor
ja
cli
push
add
pop
cmpsb
jns
int3
sarl
lcall
cmpsl
mov
out
rcl
or
pop
add
repnz
jp
dec
push
lahf
ret
jnp
mov
pop
imul
cmpsl
pop
xchg
push
mov
stos
push
fmull
insl
or
leave
mov
xchg
ret
jno
imul
mov
pop
xchg
repz
stos
ds
jp
inc
les
sub
xor
loopne
in
mov
or
dec
and
xchg
in
lock
addr16
or
mov
mov
cmp
lods
push
or
jno
push
jnp
sbb
out
cmpsl
or
jmp
aaa
fistl
cmp
leave
hlt
dec
sub
adc
mov
inc
mul
stos
sarl
pop
mov
jno
adc
mov
sti
fsts
cs
and
sqrtps
mov
jnp
lds
pop
mov
outsl
gs
push
fimull
xchg
cwtl
cmp
aam
push
pop
sub
mov
test
jmp
or
pop
adc
sub
pop
jl
and
xchg
xor
xor
or
jb
push
std
xor
iret
cmp
lods
cwtl
cs
cmp
lock
pop
adc
adc
ja
lea
jl
cltd
dec
and
inc
fnsave
adc
and
xchg
push
pop
xchg
fldt
clc
jne
ret
lds
test
and
data16
mov
push
dec
xchg
mov
adc
aad
and
insb
push
jge
sbb
dec
mov
dec
fcmovb
test
insb
aam
imul
sub
mov
add
into
mov
andb
mov
outsb
push
call
int3
imul
push
add
rcll
cld
add
xchg
repz
mov
mov
loope
rorl
sbb
and
int3
test
cmpsl
lcall
sub
aad
xchg
fld
cmc
mov
pushf
push
jne
dec
or
rorw
and
cmpsl
jns
sub
fdiv
fwait
adcb
cmp
pushf
inc
in
cmp
push
ret
push
pushf
push
pop
pop
sub
cli
ret
xor
cwtl
dec
pop
enter
xlat
push
fs
out
sti
ja
into
push
jo
cmpsb
iret
cmp
pop
aad
pop
dec
pop
cmp
mov
sti
cmp
std
out
inc
lods
adc
mov
push
cmp
inc
sarb
or
cs
jg
jnp
jg
jl
add
inc
dec
or
jp
xchg
cmpsb
mov
addl
repz
xchg
cmpsl
jle
mov
idivb
and
clc
xchg
mov
push
dec
mov
push
stc
xor
aad
sub
leave
dec
xor
in
push
mov
cld
out
xor
loope
hlt
outsl
adc
mov
jae
push
das
mov
icebp
jnp
clc
scas
mov
mov
mov
out
jmp
push
dec
mov
je
xor
cmp
pusha
aaa
cmc
and
test
jg
pop
xor
sub
sub
lret
adc
scas
xorl
insb
add
dec
mov
pop
jnp
inc
sbb
pusha
int
push
mov
mov
into
lods
sti
inc
pop
xchg
loopne
rcr
cmpsl
scas
or
hlt
nop
sbb
cmp
pop
fcomps
cmp
push
cli
push
in
mov
add
loope
dec
movsl
xchg
mov
push
push
jbe
mov
out
push
inc
mov
cld
incb
daa
pusha
das
push
xor
adc
xor
sbb
mov
in
sub
or
inc
mov
adc
out
mov
aad
shll
dec
lea
cmc
rorl
lods
std
and
mov
imul
mov
add
lret
das
popf
sub
push
call
popf
mov
loopne
cmc
push
dec
stos
adc
xor
mov
les
leave
push
jnp
test
rcl
add
pop
imulb
mov
or
lods
dec
imul
sub
ficoml
dec
pop
mov
popa
bound
das
or
jns
in
and
inc
test
stos
push
add
sub
and
xchg
or
mov
push
or
data16
xchg
lods
and
pop
xorl
push
hlt
inc
inc
test
add
mov
cltd
imul
insl
add
add
leave
push
ret
and
inc
jg
mov
jae
cmc
mov
aaa
imul
jmp
std
and
mov
dec
aam
ds
movsl
rorl
xchg
or
xor
xchg
hlt
push
cs
or
movsb
xor
shrl
lret
pop
sub
cmpsl
jp
cmp
addr16
enter
into
gs
nop
pop
jg
imul
inc
rcll
push
call
mov
stc
jne
negb
pop
jmp
add
dec
mov
xchg
and
mov
mov
scas
adc
or
stc
push
mov
leave
jmp
cmp
adc
mov
jecxz
ret
test
adc
inc
arpl
mov
in
and
jbe
aas
inc
rcr
enter
add
loopne
aas
push
xchg
xchg
xchg
sub
ja
push
jno
sub
popf
push
in
inc
insb
pop
mov
dec
sbb
mov
dec
sub
xchg
outsl
rcrl
shr
jg
sub
mov
push
dec
jnp
sarb
add
fucomip
jo
inc
and
lods
lods
loopne
out
fwait
push
jmp
sub
fcoml
jl
sti
mov
stc
decl
aam
mov
out
inc
xchg
fsubl
outsl
jne
movsl
dec
jp
cld
divl
cmp
mov
cs
pusha
sbb
and
comiss
xor
push
mov
fsts
dec
mov
inc
mov
lret
inc
movsl
xor
sub
inc
xor
dec
sub
jb
daa
adc
pop
mov
jbe
cs
cmc
ss
cmc
ss
and
loopne
mov
loopne
cmp
unpckhps
dec
out
push
cmpsb
nop
fistpll
mov
adc
setp
and
cli
push
out
xor
in
pop
jl
aam
pop
scas
cmp
lds
sbb
out
in
enter
fwait
sub
lds
sarl
add
cs
iret
cmp
ds
js
inc
daa
add
cli
add
shrl
push
xorl
rclb
or
or
jne
fs
dec
dec
lds
cmp
gs
subb
cmp
daa
inc
pushf
adc
in
dec
cmp
les
gs
in
push
in
leave
cltd
xor
pop
hlt
rcrb
ss
dec
pop
add
ja
sub
push
cmp
clc
repz
stc
inc
in
ljmp
pop
pusha
scas
mov
add
pop
push
inc
sub
aas
jmp
mov
mov
jae
or
pop
pop
fisubs
xchg
push
shrl
sbb
std
pushl
inc
inc
pop
ss
orl
stos
add
inc
xor
movsl
dec
and
pop
test
call
dec
push
into
pop
push
jbe
movsl
ljmp
lock
rcrl
cli
mov
inc
push
push
test
stos
adc
xor
in
mov
notb
xchg
push
je
cmp
and
sub
cmp
sub
mov
mov
bound
push
nop
stc
lcall
subb
add
lock
xlat
cmp
in
fs
xchg
mov
negb
sti
cmp
inc
jb
xchg
loop
in
xor
cmpsb
add
adc
mov
out
pushf
push
jp
rcll
pop
xchg
shlb
mov
lret
iret
xor
sarl
jo
je
rolb
xchg
xor
stos
and
mov
cmc
das
icebp
cld
push
adc
inc
aas
ficoml
leave
cmp
rcr
dec
jp
daa
xor
in
pop
cmpsb
idiv
fidivs
inc
es
cltd
stos
ss
pop
dec
push
iret
mov
xor
mov
xor
inc
or
dec
jb
test
jb
mov
inc
push
pop
add
and
sbb
ljmp
push
sub
lods
sti
gs
mov
or
xchg
xor
mov
pop
mov
lods
cwtl
cmp
cltd
ret
hlt
repz
add
or
sbb
rclb
int
mov
sbb
hlt
rcrb
sbb
nop
in
pop
out
and
add
mov
js
or
in
jle,pn
and
dec
push
mov
cmp
fwait
divb
std
xchg
nop
int3
and
iret
ja
in
mov
loopne
adc
out
fucomp
mov
xor
xor
stc
dec
ja
fbld
jns
sub
stc
jne
sub
xchg
pusha
or
pop
shll
xchg
fwait
insl
stos
repnz
adc
xor
or
cmpsl
push
mov
shrd
hlt
and
shlb
xor
enter
mov
lods
and
dec
iret
hlt
sub
mov
in
pusha
lods
rol
mov
mov
mov
sub
xorb
xor
push
shll
inc
pop
std
out
xor
pop
cmp
xor
and
das
add
pop
ds
fdivs
add
and
aam
cmp
andb
add
popf
and
xchg
into
ret
jmp
repz
cltd
add
mov
sub
push
stos
test
test
dec
aaa
add
mov
fildl
sub
push
mov
dec
adc
cwtl
and
dec
out
xchg
pop
adcl
test
dec
mov
lret
cmp
aaa
bound
xchg
mov
jne
fdivs
xor
lods
jg
cmc
pop
xchg
add
insl
mull
and
cmp
popa
pop
add
rorb
orb
fwait
icebp
sbb
or
ficoms
adc
cmpsl
and
jo
mov
pushf
jne
cmp
pushf
sub
ja
sbb
lods
out
dec
push
lar
jecxz
ret
jg
sub
sub
dec
dec
push
dec
sar
out
and
ret
shrl
das
loope
cs
mov
mov
xchg
out
xchg
lahf
mov
sub
sahf
insl
sti
test
pop
lods
jecxz
mov
pop
push
inc
pop
mov
push
sbb
pop
push
jae
xchg
jno
fisubrs
pop
dec
stos
add
or
aam
repnz
push
push
mov
jg
xchg
push
xor
push
call
data16
xchg
push
out
data16
movsb
jmp
in
out
loope
fwait
xlat
xchg
bound
flds
mov
pop
xchg
push
test
imul
push
sbb
and
mov
jmp
test
cmp
leave
or
pusha
lea
pop
jo
xchg
jmp
popa
pop
adc
mov
jmp
fwait
or
test
outsb
lret
push
xchg
push
push
fstl
adc
jmp
pop
lcall
mov
mov
cwtl
or
dec
negl
cli
add
sub
jl
jae
dec
loop
rcrl
addr16
add
leave
jno
inc
shrb
and
fcomps
je
dec
data16
aad
mov
sub
xchg
lret
stc
dec
std
sbb
popf
enter
ljmp
in
xchg
mov
mull
insl
sbb
cmp
in
ror
lds
pop
mov
inc
ficoms
imul
fs
cld
push
dec
adc
cmp
xor
repz
outsb
pop
jae
mov
xchg
xor
push
shrl
repnz
mov
rcrb
js
lret
add
inc
sti
add
js
lds
mov
pop
shlb
xchg
enter
push
cmp
xchg
add
cmp
jo
lret
nop
cmc
add
mov
xchg
sbb
aaa
xchg
fwait
jle
mov
cvtps2pi
sub
out
out
pushf
add
addr16
mov
inc
lods
lods
lret
mov
and
sbb
sub
jecxz
xchg
ret
pop
sub
cmpsl
or
xchg
insl
add
popw
xor
jle
jb,pt
mov
into
add
add
fcmovnu
and
or
ja
xor
jg
lods
push
das
dec
sbb
nop
push
orl
push
fstpt
inc
adc
bnd
lock
sub
rcrb
aaa
sahf
test
mov
jb
ret
cld
xchg
iret
or
nop
cs
icebp
fmuls
jns
repnz
repnz
out
cmp
shll
fsubrs
pushf
dec
loopne
testb
je
mov
adc
pop
cld
gs
fs
sub
je
push
in
in
popf
dec
jno
push
lret
lods
mov
test
dec
icebp
adc
icebp
test
test
cmp
or
mov
sub
jnp
je
mov
xor
daa
lret
mov
push
xor
inc
pop
sub
scas
inc
mov
into
inc
movsl
xchg
addl
and
addl
mov
mov
ljmp
jb
cvtpi2ps
jae
rcrb
jnp
push
icebp
movsl
jb
movsb
hlt
cmc
mov
notb
jle
pop
push
sub
push
enter
mov
lock
cli
sbb
mov
push
lret
adc
and
rol
cmc
dec
mov
addb
dec
in
pop
loopne
leave
sub
pop
call
pop
jg
xchg
insb
push
shrl
in
mov
lock
or
sbb
push
daa
stc
mov
adc
push
cmp
jg
pop
clc
mov
fsubs
mov
cmp
push
lods
enter
inc
lods
and
lds
pushf
mov
push
cltd
fisttpll
hlt
and
adc
mov
lds
int3
add
sbb
xchg
mov
stos
xchg
xchg
rorb
cmp
xchg
xlat
imul
mov
jp
dec
ds
jmp
fstpl
jge
cli
or
pop
ss
dec
mov
sub
and
mov
rorl
sub
leave
inc
sbb
cmpsl
cmc
inc
lret
out
fstpl
push
sbb
std
mov
mov
enter
jl
xor
fisttpl
popa
add
loope
ds
ret
mov
xchg
mov
cwtl
jmp
push
test
fsubrp
add
insl
out
arpl
mov
jmp
dec
mov
and
lods
jge
jno
cs
je
push
mov
mov
push
jmp
mov
les
xor
dec
notl
lods
mov
push
adc
jl
cmp
pop
scas
test
and
add
lahf
popa
push
adc
xor
xchg
fidivrs
lods
addb
shrb
scas
fnstsw
mov
mov
les
hlt
jb
fwait
insb
xchg
imul
outsl
cwtl
xchg
push
xchg
test
addr16
mov
xor
pop
mov
mov
cmp
and
push
daa
cmpsl
push
lods
mov
filds
sti
xchg
inc
dec
add
loop
lock
pop
scas
mov
scas
shlb
adc
and
out
ja
shrb
iret
dec
pop
xchg
fbld
mov
mov
cmc
sub
stos
lods
xorb
test
loop
sub
jle
inc
or
mov
dec
dec
mov
sarb
cs
cli
insb
in
leave
cmp
icebp
sbb
jmp
lods
lods
push
push
inc
fst
sbb
call
in
sub
inc
cmp
adc
push
daa
dec
fbstp
pop
adc
xor
adc
ret
sarl
aam
adc
fisubs
xchg
ret
es
push
rcll
and
cmp
sbb
int3
jb
sbb
dec
push
lret
adcb
jo
movsb
xor
push
test
test
movsl
push
sub
fldt
mov
mov
push
sub
fisttpl
jns,pn
and
push
rclb
inc
in
add
mov
xchg
insl
repz
shr
out
push
out
call
ror
mov
addr16
fnstcw
rorb
in
mov
jmp
mov
or
pop
test
outsl
subl
pop
lock
sbb
sbb
ss
jno
jge
adc
jae
sbb
lretw
out
icebp
es
negb
xlat
jns
push
aam
rcr
cld
fs
sbb
ss
sub
xchg
jecxz
aad
pop
or
es
mov
rcll
cli
mov
dec
add
add
movsb
pop
call
notl
jmp
mov
mov
sbb
adc
dec
movsb
sbb
and
mov
xlat
cmp
mov
nop
push
rclb
hlt
mov
dec
data16
data16
adc
inc
stc
jecxz
cmp
jp
in
je
iret
xchg
or
sbb
and
insb
push
mov
into
inc
and
iret
scas
es
insb
pop
push
std
pop
mov
outsb
iret
test
pop
pop
mov
les
lods
jecxz
push
movsb
int
cmp
clc
xchg
ja
movsb
test
mov
cmp
cli
xor
rcl
xchg
std
inc
mov
imul
push
lea
mov
inc
mov
and
cmpsb
inc
es
pop
test
dec
and
sub
int
jmp
shrl
or
dec
mov
lret
fisubrs
inc
mov
aaa
negl
dec
int3
cwtl
xchg
testl
dec
pop
aad
sbb
mov
and
into
mov
fucom
and
push
enter
mov
cmpsl
bound
xchg
nop
fsubp
mov
cmp
pop
xor
jl
movsb
jg
call
lahf
and
mov
idivb
loope
jl
lock
call
inc
jmp
fs
dec
pop
adc
jmp
mov
jo
scas
mov
cmc
xor
pop
dec
push
ljmp
hlt
in
loop
mov
add
pop
lcall
sub
lcall
xchg
addr16
mov
or
insl
fcoms
mov
lds
jo
pop
movsb
xor
mov
cli
mov
sub
dec
aad
ret
cmp
dec
mov
lods
push
sbb
xor
dec
shrb
pop
sbb
jmp
jle
jmp
subb
lahf
shlb
ss
mov
pop
in
sub
insb
mov
repz
fs
out
jae
add
ss
adc
cmpsl
nop
shr
in
mov
mov
test
shll
pop
xlat
and
inc
xorb
imul
fsubrs
mov
push
cmpsb
add
movsb
stos
lea
mov
pusha
bswap
add
arpl
add
inc
inc
mov
cmp
push
mov
fldenv
popa
repz
dec
inc
in
mov
fstps
das
mov
mov
jo
adc
rcrl
sbb
into
shll
pop
scas
lods
pop
or
fcoml
fldcw
push
jo
aam
icebp
mov
pushf
sbb
out
sti
ds
or
xchg
lds
xorl
iret
movsb
daa
sub
in
scas
lock
loope
pushf
sub
mov
push
jmp
adc
pop
cmp
int
test
lcall
inc
jmp
xchg
movl
ljmp
int
cmp
or
imul
sbb
in
sub
mov
fsubl
addl
mov
dec
sarb
xchg
add
add
xchg
and
leave
push
mov
test
lret
js
add
sbb
cmp
bound
dec
xor
mov
or
bound
int3
mov
mov
sbb
pop
jge
sub
pop
pushf
pop
mov
filds
cltd
out
scas
cmp
mov
mov
push
int
adc
js
fisttpl
and
xor
in
int
je
andl
and
lds
fisubrs
cmp
or
jp
add
mov
inc
mov
cmp
stos
rclb
jl
call
outsl
loope
shl
and
mov
ja
jmp
pop
leave
in
dec
addr16
mov
xlat
sbb
cli
cld
or
jmp
xchg
and
dec
stos
xor
xchg
pop
movlps
or
fldt
ljmp
popa
stos
jecxz
pop
add
jns
test
es
mov
movsb
shll
arpl
lea
adc
sahf
cmp
mov
or
sahf
mov
add
aam
mull
stos
cli
clc
lcall
cmp
push
mov
loopne
mov
and
jno
xchg
loope
add
fisttps
int3
mov
sub
inc
mov
dec
or
subl
shl
xchg
pop
inc
or
lcall
je
push
in
inc
jno
cmp
mov
test
adc
pusha
pop
int3
loopne
and
jo
iret
cli
inc
cmp
sbb
popa
clc
out
aas
pop
pop
into
xor
add
jmp
cltd
xchg
mov
popf
test
and
or
insl
js
pop
xchg
push
xchg
jmp
dec
pop
mov
je
xchg
mov
shl
fwait
scas
mov
sbb
jg
popf
push
mov
or
push
pop
xchg
iret
jae
in
dec
lock
loop
fists
scas
cld
xor
lds
insb
aad
jecxz
andb
push
add
sub
pop
cmp
lret
scas
aaa
and
add
pop
mov
sub
cmc
incb
js
add
add
rol
ljmp
xchg
fs
rol
mov
xchg
in
pop
pop
lods
dec
sbb
aaa
jno
enter
jp
sub
mov
cmp
and
mov
roll
scas
mov
adc
sbb
daa
lods
jge
add
push
mov
mov
pop
mov
dec
and
or
jmp
sub
jae
pop
jmp
sub
cmpsb
sahf
mov
imul
mov
movsl
lock
push
jg
mov
inc
setbe
or
je
sahf
inc
sahf
inc
cltd
lock
push
nop
and
jne
mov
mov
pop
cli
std
cmpsl
lcall
scas
pushf
lret
std
mov
sbb
iret
dec
pop
push
loop
add
pop
add
adc
jbe
dec
xor
pushf
sahf
and
pop
mull
mov
mov
in
push
dec
dec
fadds
dec
push
inc
in
leave
xchg
adc
gs
dec
sub
sub
inc
mov
call
xor
sahf
in
inc
lds
ja
mov
mov
adc
sub
sub
xchg
in
cs
nop
lret
or
sbb
cmp
dec
mov
mov
lock
add
ret
sarl
fcompl
adc
sbb
loopne
lahf
cwtl
decb
mov
outsb
stos
test
dec
or
pop
rcrb
add
mov
repnz
cmp
rcll
sbb
mov
lcall
sbb
xor
inc
jmp
into
rcrl
push
leave
idivl
xor
jmp
xor
loope
mov
sbb
xchg
xchg
iret
xor
dec
cmp
mov
mov
cs
adc
jl
xchg
xor
sub
sbbb
jb
jg
cwtl
movd
mov
dec
mov
add
push
loopne
pop
lret
push
std
adc
ret
sbbb
fidivrs
adc
add
int
and
sbb
in
xchg
inc
push
sbb
test
xchg
pop
or
push
sarb
mov
push
sub
outsb
or
mov
daa
lods
test
or
ss
mov
xor
lods
ss
mov
mov
adc
push
mov
xor
push
in
mov
test
popa
shrd
push
stos
add
mov
dec
xlat
jo
ss
push
dec
and
push
outsl
out
adc
sub
mov
mov
test
jmp
push
test
xchg
push
jb
inc
lock
dec
mov
movsl
inc
dec
xor
roll
adc
rorl
and
fsubrl
push
push
ljmp
inc
and
mov
rcrl
popf
jg
call
lods
aas
pop
or
out
push
ljmp
das
leave
js
int
int
pop
or
xor
adc
std
repz
in
je
inc
pop
push
xor
inc
test
push
lock
jnp
and
scas
sbb
fcom
jl
sbb
inc
push
fwait
and
jmp
inc
pop
push
out
or
lock
add
adc
call
sub
xor
insl
push
xor
cli
fsts
push
ss
lahf
add
cmp
scas
add
xchg
mov
inc
push
pop
aam
and
sub
cmp
push
push
mov
sub
inc
mov
cli
push
and
jl
push
add
jl
out
daa
dec
xchg
shrl
lea
sub
adc
je
pop
enter
outsl
mov
jp
push
mov
dec
insb
outsb
adc
mov
or
icebp
adc
scas
jno
mov
pop
les
jno
push
bound
push
pushf
loopne
xchg
sti
cmpsb
fs
adc
or
sahf
jno
adcb
xor
xchg
xor
jp
sub
push
fwait
push
push
or
test
jp
jno
pop
add
push
pop
bnd
jo
push
pop
je
jp
sub
jbe
cmc
xor
arpl
jg
bound
cmp
and
iret
lret
inc
cwtl
mov
pop
dec
in
movlps
mov
xor
cmpl
sbb
ljmp
imul
outsl
cmp
xor
push
popf
xor
outsl
mov
adc
arpl
mov
and
jle
push
inc
mov
inc
and
js
ss
repnz
fcmovne
xor
pop
jne
loopne
dec
outsl
and
push
mov
jmp
cs
movl
mov
daa
lret
cltd
cmp
or
dec
inc
xlat
cmp
dec
popa
xlat
repz
push
aam
xchg
movsb
shl
dec
mov
xchg
punpckhbw
mov
mov
les
fsub
rcrl
fimull
cmp
lds
xchg
and
jnp
ja
jns
push
pop
movsl
jb
in
push
xchg
ljmp
mov
pop
adc
jb
lds
mov
lea
cmpl
stos
or
dec
imul
mov
adc
jo
shlb
bnd
ret
adc
jp
ret
pop
jns
cmpsb
mov
jmp
mov
fistpl
push
test
mov
pop
rcrb
out
dec
push
ljmp
add
or
or
jl
or
mov
inc
add
das
movsl
jb
imul
jp
sbb
imul
lret
cld
stos
repnz
call
mov
xchg
aam
adc
pop
out
movsl
pushf
je
aad
test
fsubrs
cmp
dec
iret
rolb
lods
mov
pushl
mov
stc
jne
fwait
or
imul
mov
push
iret
push
jnp
inc
loopne
mov
lcall
imul
mov
push
cli
sbb
mov
nop
fbld
mov
pop
mov
icebp
xorb
daa
aad
cs
repnz
imul
cli
add
in
inc
leave
lea
sahf
enter
test
xor
cltd
in
and
test
and
fldl
mov
lods
mov
dec
scas
stc
loope,pt
xchg
dec
out
stc
lods
icebp
sub
pop
fimuls
ficomps
add
push
cmp
std
xor
inc
ret
mov
xor
jne
jp
sbb
xor
jnp
cmp
test
push
pop
or
cmpb
lock
pop
dec
out
cmpsl
hlt
cmp
shlb
dec
lods
test
ja
loopne
jecxz
repz
mov
jg
xchg
inc
jl
repnz
dec
mov
mov
cmovs
push
addr16
cmp
bound
std
push
jae
xchg
inc
sub
add
pop
je
ss
rorb
pop
or
xchg
push
dec
mov
jecxz
test
inc
int3
into
push
push
daa
ljmp
sbb
dec
jle
in
xor
mov
cmpb
fwait
pop
adc
test
jne
xor
shrl
sbb
jne
dec
lods
mov
stc
push
fnsave
cmp
scas
bound
lds
pop
out
xchg
pop
mov
cs
jp
mov
pop
inc
xchg
testl
add
mov
inc
cltd
and
hlt
adc
adc
jo
add
in
mov
jp
mov
xchg
pop
cli
sbb
xlat
sub
inc
cmp
pop
daa
pop
push
mov
outsl
xor
or
sbb
cld
fadd
xor
ficomps
outsl
mov
call
jge
jb
arpl
iret
push
xchg
sub
cmpsb
mov
ljmp
mov
jg
xor
movsb
imulb
jge,pt
ror
pop
sub
cmpsb
in
ja
test
lahf
cld
xchg
sub
mov
mov
into
cmp
in
sub
rclw
lcall
mov
push
aad
int
pop
negb
and
mov
push
out
sbb
popa
mov
sbb
mov
inc
or
mov
aaa
stc
mov
cmp
pushf
movsb
lret
cmp
test
add
mov
cmc
adc
pushf
loope
adc
mov
shrl
aam
and
dec
add
fbld
push
and
xchg
sbb
in
adc
ja
cmp
push
in
pop
sbb
adc
imul
je
nop
mov
fisttps
jge
pop
dec
js
cmp
mov
fildl
scas
dec
lods
inc
movsl
mov
dec
push
sbb
int3
call
push
lret
adc
cmpsl
push
shll
adc
ljmp
add
xor
call
insl
lret
xchg
jnp
hlt
jg
inc
xor
inc
pusha
mov
outsl
mov
sub
sbb
cltd
iret
xor
fs
push
sbb
lds
cmc
sub
enter
mov
icebp
je
cmpsb
adc
pop
mov
divl
lahf
mov
sbb
xchg
jp
aad
hlt
add
cmpsl
mov
and
xor
cmp
pop
repnz
add
xor
test
lock
pushw
mov
mov
xlat
mov
testb
std
es
jecxz
lods
adc
je
scas
lods
ret
xchg
or
test
fldenv
pop
mov
xchg
pop
mov
mov
fiadds
shll
cmp
jno
push
dec
mov
pop
aam
adc
xchg
xchg
dec
mov
outsb
lahf
cmp
add
shll
sub
push
or
roll
lods
aas
in
mov
xchg
sub
daa
add
int3
les
cmp
sbb
in
loopne
jae
mov
push
lcall
or
outsb
scas
mov
addr16
sti
mov
cmpl
aam
or
add
cmp
jae
sub
dec
or
aas
lock
add
inc
fwait
adc
fidivl
sbb
inc
mov
lds
and
gs
aad
inc
adc
das
lcall
pop
xor
inc
fcomps
inc
xorb
testb
jb
not
daa
xor
pop
mulb
ljmp
test
add
test
push
add
jecxz
bound
loopne
cmp
icebp
mov
outsb
sti
and
mov
mov
lods
cs
mov
push
mov
xor
xor
test
add
push
jo
pop
add
jb
jne
js
arpl
mov
sub
or
inc
std
neg
dec
mov
lret
pop
adc
out
movsl
pop
adc
lahf
imul
inc
cmp
adc
bound
xchg
xor
addb
lock
xor
mov
daa
mov
ret
bound
js
test
repnz
xor
scas
add
push
or
aam
jns
jge
loop
mov
pushl
popa
nop
cld
inc
or
pop
mov
ja
imul
pop
stos
cltd
in
int3
mov
mov
shrb
insl
jmp
inc
fnstenv
into
push
pop
leave
pop
xor
jb
into
inc
lcall
xchg
push
js
ljmp
adc
enter
scas
mov
xchg
pop
vhsubpd
pop
or
jae
clc
and
jge
in
lret
je
test
cltd
ret
pop
dec
pop
ljmp
cmpsl
push
movsl
sub
in
ret
mov
stos
iret
insb
andb
stos
andl
lods
scas
adc
xor
pop
jle
into
lods
std
scas
loope
pop
mov
cmp
mov
mov
rorb
cmp
daa
aas
mov
sub
jno
cld
pop
mov
mov
imul
cmp
insb
sub
jecxz
lcall
scas
xchg
sti
mov
sbb
aaa
in
out
es
fstpl
addl
inc
aas
scas
pop
or
cltd
push
loop
out
out
mov
enter
scas
mov
movb
testb
push
iret
divl
mov
and
jl
dec
data16
jp
cmp
test
push
xchg
loop
clc
loopne
mov
add
fld
daa
push
and
popf
mov
mov
stos
mov
imul
in
cmp
divl
pop
mov
js
loop
cmp
repnz
mov
shrb
xchg
add
repz
dec
mov
pushf
scas
cmc
push
je
mov
push
shll
inc
inc
test
int
dec
pop
mov
ret
xchg
mov
mov
dec
lods
xor
or
int3
mov
shll
add
fstps
test
stos
mov
mov
or
push
gs
pop
add
jb
cmp
mov
lcall
nop
xor
fs
iret
daa
xor
mov
pop
fs
push
test
mov
fldl
iret
mov
mov
jnp
jmp
and
in
mov
scas
inc
in
loop
add
cmpsl
or
and
dec
mov
push
xchg
jns
mull
mov
imul
lcall
movsl
add
inc
cs
rorl
jmp
cmp
pop
add
sbb
bound
pop
mov
push
xchg
and
lea
jecxz
fstpt
push
movsl
jno
outsb
jno
or
cld
mov
jno
pop
or
xchg
pushf
mov
cltd
mov
sbb
aam
cmp
jns
mov
mov
inc
mul
push
pop
fcompl
adc
xor
shll
and
inc
cmp
into
jmp
jecxz
sbb
in
lods
insl
dec
cwtl
jmp
pop
int3
fildll
xchg
in
mov
test
shlb
int
sbb
and
and
mov
aam
lret
xor
movsl
mov
ss
fs
jle
jb
inc
mov
jl
nop
sti
jmp
es
jns
aad
mov
stc
data16
test
sbb
inc
adc
dec
std
pop
fs
mov
jns
rcrl
cmp
dec
push
push
pop
push
or
pop
push
out
leave
shlb
mov
test
push
aas
andb
jbe
sub
jp
enter
testl
jnp
in
fisubrl
fldl
dec
test
sbb
mov
cltd
sbb
jbe
jmp
cmp
call
fnstenv
adc
add
scas
popf
pop
imul
xchg
shrl
lods
jg
mov
inc
jge
aaa
pop
lea
mov
sbbl
mov
sub
mov
adc
loopne
mov
lcall
xor
jns
sbb
roll
dec
iret
dec
jns
je
sub
popa
fnstcw
jne
andb
sti
push
insb
push
push
std
cld
push
repnz
and
dec
pop
push
lods
jge
lret
add
dec
xor
pop
testl
mov
mov
sub
or
inc
lods
jno
jp
xchg
pop
cli
ss
fcmovbe
mov
les
pop
and
jne
ret
mov
jge
add
mov
mov
mov
int3
mov
push
inc
mov
roll
sbb
pop
adc
daa
pushf
mov
push
cmp
outsb
lea
inc
and
mov
or
pop
aad
test
pusha
sub
sti
in
sarb
cmp
add
shlb
fnstcw
dec
dec
es
and
sbb
imul
jl
mov
fldl
ror
mov
filds
push
dec
outsl
stos
std
mov
mov
pop
arpl
mov
jae
inc
xor
mov
bnd
loope
fwait
int3
lea
into
push
testb
cmc
lcall
test
push
sbb
gs
test
sub
add
pop
jmp
adcb
pop
insl
inc
pusha
mov
por
xchg
scas
mov
push
mov
flds
inc
xchg
cmp
je
lcall
mov
mov
loopne
jns
lods
mov
add
ja
out
xor
lahf
and
ja
jno
mov
jo
int
lds
ja
daa
orl
jnp
sbb
sub
lret
xchg
movsl
add
or
xchg
out
aad
xlat
sub
pop
pop
cmp
pushf
jns
notl
lcall
call
inc
hlt
sahf
sub
sub
je
mov
fsubr
mov
test
lret
xor
pop
fcompl
cmc
test
pop
and
inc
pushf
jmp
jecxz
jle
cli
dec
jecxz
xor
out
mov
js
dec
xchg
nop
jecxz
add
push
fmuls
std
sbb
mov
loopne
mov
and
test
fisttpl
fcmovne
xlat
jnp
punpcklbw
ret
jae
cmp
push
jg
scas
je
test
xchg
cltd
rclb
imul
imul
push
popf
xchg
ds
mov
mov
mov
aaa
mov
jb
xor
test
mov
pop
xchg
sub
dec
add
clc
cwtl
mov
jecxz
sbb
loop
jp
stos
lret
sbb
pusha
inc
std
jecxz
imul
sub
rcrl
fdivl
fsts
add
enter
ss
in
stc
push
jmp
mov
int
jb
clc
movl
bound
add
in
jbe
lods
in
xchg
scas
popa
mov
stos
out
dec
scas
test
mov
xchg
or
es
pusha
std
xchg
dec
jp
sbb
push
or
notb
inc
and
lahf
insl
nop
in
adc
sbb
xchg
and
or
mov
fs
add
mov
add
xchg
sbb
ljmp
pop
sbb
xor
iret
repnz
dec
lock
lods
mov
daa
pushl
inc
loopne
jbe
jg
fwait
or
iret
mov
daa
scas
adc
cmp
cmp
inc
pop
add
push
inc
adc
inc
mov
rolb
lahf
push
inc
adc
imul
in
hlt
pop
repz
xchg
mov
call
xor
sub
lock
push
cmp
sbb
sub
adc
fsubrs
rcrb
into
inc
mov
test
pop
sub
xorl
mov
das
pop
inc
push
frstor
mov
or
mov
pop
fisubs
and
mov
cmp
sahf
repnz
imul
mov
mov
cmpsl
inc
ret
insb
xor
push
mov
lea
cmp
xchg
xor
push
sbb
inc
mov
scas
adcb
cmc
pushf
ljmp
jne
dec
iret
xor
xor
xchg
sti
ljmp
sub
pop
xchg
adc
and
mov
push
cmpsb
mov
or
xor
inc
or
push
cltd
mov
push
or
xchg
or
sub
dec
or
arpl
test
xor
lcall
cli
xchg
dec
aaa
mov
mov
icebp
inc
push
dec
sets
pop
cwtl
test
test
dec
gs
shlb
cld
test
mov
jae
out
ret
sbb
aas
dec
push
and
xchg
leave
cmpsb
test
sbb
clc
lods
bound
jnp
and
jge
xchg
xor
jecxz
ds
and
int
das
xor
sub
stc
xor
cmp
mov
arpl
push
in
repnz
xor
in
adcl
pop
dec
insb
mov
stos
and
jp
loopne
inc
mov
mov
jb
add
loopne
aas
jl
and
xchg
loopne
mov
popa
or
insl
out
xchg
aas
sbb
inc
fisubl
pushf
pop
std
mov
push
int
test
sbb
ja
cli
repz
jne
xor
push
popf
inc
add
frstor
ss
push
sbb
ljmp
inc
sub
fimull
push
add
cli
inc
pop
enter
scas
inc
sub
and
ret
and
jne
xchg
inc
jle
cmpb
scas
inc
xchg
aaa
sahf
lock
push
pop
call
push
mov
pop
xor
popa
pop
add
jmp
shll
dec
into
and
sbb
mov
loope
pop
pop
sub
xor
push
mov
sbb
lret
push
rcll
pop
mov
mov
sbbb
adc
xchg
icebp
mov
aad
je
movsl
sarl
daa
and
int3
ds
push
pop
push
mov
mov
jecxz
push
out
in
sahf
inc
call
mov
xchg
jecxz
sub
mov
in
repnz
je
mov
inc
ret
clc
pop
cmp
xor
jecxz
xchg
push
pop
jae
aas
lods
pop
pop
rorb
inc
and
popf
jg
popa
sbb
xchg
push
aam
sub
cltd
mov
ja
cs
aas
mov
pop
cmp
add
jbe
stc
ret
mov
repz
es
test
mov
xchg
faddl
test
mov
incl
dec
sub
scas
add
hlt
jo
jb
je
cs
repz
jne
inc
std
enter
inc
test
into
shll
or
or
aam
fcmovnu
int3
mov
jno
push
mov
int
adc
test
pop
repnz
je
idiv
jecxz
adc
mov
movsb
push
jnp
gs
push
mov
pusha
int
sbb
xchg
jl
adc
jge
mov
pop
loop
ss
pop
inc
adc
fimuls
mov
lods
imul
sbb
movsl
aaa
loopne
mov
jl
sub
mov
pop
or
repz
notb
jnp
jbe
arpl
mov
mov
push
push
imul
loope
cmp
mul
or
repnz
test
mov
dec
jmp
lahf
jno
xchg
xor
mov
mov
addb
sarl
mov
sub
fwait
lds
mov
pop
lret
push
rol
sbb
mov
decl
sub
cmpsl
mov
mov
pop
aam
mov
lret
hlt
repz
ss
lcall
mov
outsb
mov
addr16
movsl
pushf
insb
enter
sti
dec
and
pop
int
sub
mov
es
in
and
orl
adc
pushf
aad
test
retw
test
loop
pop
cmp
lods
das
sahf
scas
ret
push
cmpsb
clc
jl
sahf
sub
jp
movsb
xchg
out
add
mov
dec
jg
pop
ss
dec
stos
sub
add
in
gs
jnp
push
movsl
add
xchg
mov
adc
mov
xor
cmpsl
push
adc
dec
pop
inc
fidivrs
inc
add
jge
push
push
cmp
fwait
cmpsl
scas
or
cwtl
mov
jae
sbb
push
movsl
dec
in
inc
out
scas
sbb
insb
test
mov
inc
cwtl
je
jecxz
lahf
adc
jne
push
jnp
mov
push
add
cmp
test
mov
xchg
jae
jle
sub
aas
sbb
mov
mov
call
mov
mov
and
mov
icebp
in
push
repnz
jge
mov
sahf
mov
or
imul
mov
pusha
cmp
lret
jmp
add
mov
cli
popf
in
insl
mov
aam
mov
mov
lds
stos
or
pop
fldenv
cwtl
push
jae
mov
inc
aas
int
cwtl
xchg
push
in
push
imul
xchg
hlt
and
dec
sbb
xchg
pop
in
push
add
sub
orb
jge
sub
jnp
adc
repz
stos
add
sub
mov
add
add
aad
insb
xor
sub
sbb
ljmp
mov
and
xorb
cmp
cwtl
cmpsl
push
adc
push
xchg
pop
outsl
lahf
jmp
fldenv
ljmp
ret
bound
mov
jecxz
mov
out
xlat
inc
xlat
mov
daa
sbb
lods
cltd
mov
loop
arpl
lahf
inc
inc
test
lahf
sub
cmp
outsl
rcll
dec
scas
xor
pop
loop
aas
gs
jmp
and
test
xlat
hlt
jmp
inc
leave
add
push
and
push
in
fcoms
xchg
imull
or
cmp
sub
mov
dec
jp
pop
jb
adc
faddl
jno
and
mov
les
js
idivl
xchg
xor
xlat
and
push
xchg
dec
push
cwtl
xor
xlat
inc
cmpl
mov
dec
xchg
mov
or
stc
mov
add
and
mov
xchg
imul
xchg
or
movsb
mov
push
mov
pop
adc
vphsubbw
inc
enter
push
inc
sub
cs
mov
xor
dec
pusha
cmp
add
pushf
pop
rol
out
xor
xlat
inc
inc
and
insl
les
add
sub
mov
mov
sbb
cmp
mov
je
imul
mov
cmp
sbb
mov
jo
mov
rol
rcll
aaa
shr
pusha
cmp
jae
in
fs
sbb
out
mov
gs
pop
push
int
push
scas
out
hlt
mov
mov
cmp
or
mov
test
sub
orb
iret
lods
xchg
lcall
out
cmpsb
lea
movl
sti
mov
xchg
pop
arpl
leave
xor
loope
sbb
adc
mov
enter
mov
outsl
mov
nop
std
adc
xchg
mov
lcall
pop
mov
inc
fsubrp
outsl
fsubl
xchg
adc
dec
adc
inc
pushf
andl
fcompl
cmp
cmpl
aam
clc
das
lods
dec
lea
call
or
xor
inc
or
lds
cmp
shl
mov
pop
fsubs
xchg
mov
and
push
dec
cmp
mov
mov
and
test
and
or
mov
adc
mov
call
inc
loopne
loop
into
iret
sbb
inc
test
in
movsb
mov
lcall
cmp
cmpsl
adc
xlat
call
sub
inc
mov
mov
ja
rcll
out
aad
lds
xor
movsb
pop
mov
test
or
push
cli
xor
mov
insb
add
jecxz
cltd
jbe
or
sub
jns
arpl
mov
jmp
rorb
mov
and
jecxz
rorb
cmp
ss
dec
dec
clc
outsb
sarb
sbb
or
andb
or
outsl
mov
loopne
lret
stos
incb
and
jle
and
push
movsl
rcrl
ljmp
lock
pop
mov
cmp
and
xchg
dec
jle
mov
sbb
or
add
arpl
data16
in
test
jno
call
cmp
jb
out
test
xchg
adc
xchg
cs
in
jle
stos
imul
dec
icebp
or
or
jo
scas
push
xchg
insl
loope
and
mov
push
push
push
dec
sbb
or
mov
pop
adc
sub
hlt
inc
das
or
jne
push
inc
into
mov
es
dec
call
jno
inc
je
ret
sbb
pop
divb
adc
fdivrs
ficoms
fwait
mov
xor
pop
test
int
push
daa
push
push
aaa
sub
dec
out
or
push
mov
repnz
popa
cli
xchg
pop
and
aaa
mov
add
jnp
lods
adc
pusha
les
daa
adc
mov
in
test
dec
push
pusha
in
lock
jp
xor
shl
in
addr16
xor
dec
and
lods
into
sbb
fwait
out
fldt
mov
jge
lds
fiaddl
testb
imul
std
adc
stc
sbb
test
xor
in
sub
push
push
arpl
pop
imul
rolb
xchg
push
daa
fld
mov
xchg
dec
sets
push
ret
adc
push
xchg
add
lods
mov
int3
in
or
push
xchg
fisttpl
sbb
out
cmp
jge
ljmp
outsb
adc
jbe
ljmp
jmp
mov
xchg
notl
call
inc
mov
shlb
int
xchg
xor
insb
cmp
add
std
mov
xchg
pop
je
call
pop
aas
insl
inc
adc
mov
movsl
jae
or
ja
xor
shll
ficompl
loop
leave
aad
jbe
mov
inc
ljmp
and
movsb
lret
rcrl
rcl
pop
jmp
push
mov
push
pusha
jp
leave
bound
cmp
test
adc
into
and
add
or
fdivl
dec
push
pop
add
stos
fbstp
push
mov
jne
out
mov
cmpsb
roll
mov
ja
cmc
sub
sbb
fs
idiv
fwait
and
sub
dec
and
dec
mov
sarb
addr16
xchg
sub
mov
and
fistpll
mov
movl
out
or
sbb
lds
loopne
add
shll
mov
repz
ljmp
sub
xchg
push
jecxz
pop
sbb
aam
cmp
lcall
ret
stos
cmp
jp
aaa
jmp
mov
cltd
dec
adcl
stos
inc
bndstx
sbb
bound
push
xor
std
push
addr16
mov
xchg
fmuls
popa
cmc
pop
jo
mov
inc
cs
sub
paddusw
ret
add
mov
push
mov
leave
adc
cwtl
inc
cld
mov
out
jne
mov
or
xchg
jle
mov
mov
test
fisttpll
mov
pop
cvtps2pi
iret
jns
iret
mov
in
into
aas
in
sbb
stos
mov
pop
stos
jnp
clc
dec
xchg
mov
jge
ror
jae
mov
out
sarl
xor
sub
rorl
mov
cmpsb
loopne
lret
xor
mov
sub
inc
lcall
mov
xchg
add
sub
test
jbe
inc
stos
repz
and
cmp
or
add
outsb
and
out
fldenv
gs
xchg
ljmp
pop
sub
in
fsub
ret
insb
fsts
fildl
cld
add
sub
add
sub
xorl
sub
sarb
out
insb
push
xchg
hlt
scas
add
popa
jle
cmpsl
cmp
xchg
lods
lret
xor
mov
xlat
jbe
outsb
jl
dec
push
xchg
sbb
mov
xor
push
mov
jle
dec
mov
cs
mov
cmp
aas
js
lret
insb
es
loope
pusha
inc
in
cmp
push
xchg
jne
dec
clc
pushf
mov
stc
ja
jns
adc
cmc
jb
push
movsl
push
ljmp
push
jge
lock
dec
lret
dec
iret
je
xor
insl
fsubrp
sbb
cld
js
adc
cmpsl
and
mov
aad
mov
nop
mov
cmpsl
cltd
sbb
or
adc
sbb
xlat
movsl
jbe
ret
mov
jge
aas
pop
into
sbb
flds
ret
mov
push
lcall
stos
hlt
es
mov
pusha
hlt
sbb
in
fsubrs
hlt
jecxz
jecxz
bound
mov
es
lcall
into
dec
inc
or
xor
or
push
sub
xor
ret
lock
movswl
xor
test
cltd
pop
add
or
repz
add
loopne
shl
cwtl
mov
and
scas
movsl
jne
cmp
pop
xchg
add
inc
or
xchg
mov
ljmp
int
call
jecxz
adc
xor
shll
movsl
mov
sarb
sarb
lods
and
dec
test
xchg
lea
mov
xor
mov
out
inc
dec
movsb
push
test
jmp
ret
in
add
nop
shlb
fsubs
or
ret
push
push
pop
clc
enter
mov
jno
fdivrl
movsl
cmp
testb
mov
push
ret
pop
outsb
movsb
sbb
inc
std
and
inc
pop
addr16
add
mov
add
cwtl
sbb
iret
dec
popa
jle
dec
adc
sub
xchg
lcall
xchg
andl
xchg
in
mov
pop
xor
cmp
es
mov
jge
stos
daa
scas
push
xchg
pop
addr16
rolb
sub
mov
jne
sbb
sbb
pop
mov
sub
in
sbb
adc
leave
mov
add
loopne
push
dec
lock
dec
add
fnsave
lahf
mov
jg
dec
clc
inc
mov
in
addr16
push
popa
jp
ljmp
jo
fiadds
inc
sbb
inc
pop
in
push
mov
push
lds
pusha
aas
clc
add
push
fsubrs
ret
js
out
pop
shll
mov
insb
mov
test
subl
jno
jmp
dec
ljmp
sub
fiadds
out
push
sti
unpcklps
mov
jb
jge
lahf
adc
pop
push
dec
push
std
pop
push
ficompl
xchg
add
mov
loopne
inc
sub
data16
sbb
pop
sbb
jp
mov
inc
es
div
inc
dec
push
cmp
das
cltd
mov
test
pop
jge
jle
adc
xor
or
daa
xor
mov
ror
mov
dec
ja
pusha
insl
cmp
xor
jae
push
fs
push
in
pushaw
ret
jle
mov
in
loopne
mov
jmp
in
sub
lcall
inc
mov
test
icebp
cwtl
pop
xchg
imul
inc
outsb
mov
and
mov
pop
movsb
je,pt
adc
fcmove
dec
outsl
lahf
imul
enter
enter
sbb
and
arpl
jecxz
movsl
rol
ret
std
nop
pop
cmp
out
stos
cwtl
mov
ljmp
rorl
mov
imul
mov
add
or
mov
data16
stos
and
jbe
out
cmp
push
cmp
push
nop
pop
add
jmp
call
jns
rcll
test
pop
sbb
sub
aas
ljmp
mov
inc
jmp
out
xchg
push
popf
mov
pop
dec
test
test
jmp
inc
sahf
outsb
ljmp
lcall
pop
mov
and
sbb
jmp
or
adc
enter
stos
outsb
rcll
mov
in
pop
xchg
xchg
xlat
push
push
jae
xchg
add
xor
sub
movsl
or
dec
movsl
aad
int3
insb
sub
mov
push
push
xchg
insl
or
or
push
movsb
iret
sbb
lret
test
in
aam
and
lock
pop
push
out
add
jns
ficoml
sub
jae
mov
subb
jbe
out
dec
imul
sbb
pop
xchg
je
inc
aad
mov
into
fisubl
lods
xchg
test
push
jmp
push
lret
lahf
inc
cmpsb
jge
and
sub
push
repnz
imul
mov
xor
into
mov
xchg
es
in
xor
mov
add
mov
cmpsb
inc
inc
xchg
mov
and
idiv
inc
push
mov
jo
xchg
je
fs
adc
xchg
ret
add
test
xchg
rcr
push
mov
mov
adc
imul
pusha
mov
popa
mov
mov
push
push
mov
sbb
stos
cmp
sbb
fmull
int3
add
jge
or
out
stc
dec
pop
xor
sbb
mov
xor
dec
out
int
jg
ja
out
leave
jb
les
push
xchg
jmp
lahf
inc
test
mov
pop
mov
fxch
addb
shll
aam
popf
xlat
push
cmp
xchg
sub
lods
sub
stc
lods
mov
sbb
movsb
lods
dec
out
sub
ret
sub
or
addr16
test
pop
ret
aad
cmpsb
dec
adc
lock
pusha
enter
clc
stos
add
pop
sti
mov
add
xchg
mov
xor
push
je
dec
arpl
imul
std
jecxz
fidivl
mov
and
xchg
fs
xchg
aam
sbb
xor
jge
ja
sub
fwait
jbe
pop
idivb
mov
push
das
outsl
mov
ror
sub
das
and
inc
loopne
inc
mov
clc
inc
stos
dec
andb
fidivrs
inc
sub
daa
loope
ss
cs
or
je
ret
fnsave
insl
push
fwait
mov
xor
mov
mulb
cmp
cmp
mov
aas
xchg
and
stc
push
scas
mov
into
add
inc
cmp
imul
sub
add
shl
stos
mov
mov
test
in
push
dec
imul
cmpsb
mov
or
scas
xchg
mov
or
fidivrl
push
shlb
pop
aam
cltd
lcall
fists
inc
push
and
pop
cmpsl
adc
shrb
jmp
ds
sub
mov
in
out
fs
push
ss
mov
adcl
fcoml
mov
add
mov
push
in
pop
psrld
icebp
test
jl
pop
cmp
sub
ror
add
inc
jne
fsubrs
lods
bound
cmp
dec
repz
cmc
daa
cltd
sub
fsubl
scas
add
adc
std
lods
or
or
cmp
repz
cli
movsl
fsubp
sub
xor
mov
sti
lods
jle
or
dec
adc
cmp
cwtl
sbb
loopne
pop
xchg
gs
push
jmp
xlat
xor
movsb
inc
dec
mov
add
jge
loopne
lock
push
cmp
push
jmp
ja
push
xor
pop
scas
pop
clc
add
in
cmp
sahf
gs
push
ds
aas
pop
jmp
fistl
mov
jmp
jne
adc
inc
mov
adc
sbbb
inc
push
outsl
fistpl
js
js
mov
fwait
aas
std
arpl
inc
dec
cmp
sbb
and
xor
out
push
xchg
enter
xor
andl
jecxz
cmp
fisubrl
movsb
iret
xchg
add
jbe
or
lods
and
pop
push
or
sahf
aas
dec
inc
xchg
mov
je
pop
push
inc
sarl
es
sbb
js
jne
dec
icebp
test
add
fbld
out
shll
add
cmp
push
cmp
sbb
addb
and
pop
je
adc
inc
pop
sbb
sub
outsl
sti
mov
mov
popf
push
outsb
sbb
daa
push
sub
jg
rcll
and
insl
mov
mov
pusha
and
icebp
shrb
sub
jne
mov
cld
xor
movsb
mov
adc
xchg
mov
pop
jbe
mov
add
mov
xchg
add
pop
push
outsb
sbb
lcall
mov
mov
cmp
or
add
lahf
push
fistl
dec
pop
repnz
push
cmpsl
pop
out
dec
dec
int3
mov
lods
jge
int
mov
loop
add
cmc
lock
xchg
pop
mov
hlt
iret
sbb
xor
sbb
ljmp
idivb
loop
jno
dec
mov
loopne
es
xchg
andps
mov
or
dec
inc
mov
xor
inc
xchg
adc
and
dec
dec
out
imul
dec
cmp
xchg
data16
sbb
mov
lock
popa
test
and
adc
imul
cld
arpl
mov
icebp
lock
and
jbe
arpl
or
leave
bound
mov
mov
fstpl
mov
test
dec
clc
ljmp
pushf
arpl
test
push
test
stc
fistl
cmp
mov
dec
fisttps
mov
cmp
mov
jnp
andl
jmp
mov
add
mov
sub
nop
jb
outsb
and
out
dec
mov
and
and
and
cmpl
lea
fbld
popa
xor
pusha
pop
scas
outsb
adc
int3
mov
cmp
or
sub
push
mov
and
jg
xor
dec
icebp
adc
addr16
xchg
gs
bound
xor
pushf
jl
daa
mov
sbb
mov
dec
stos
jne
lret
adc
pop
inc
je
cmpsb
arpl
testb
scas
mov
add
push
test
mov
mov
std
data16
adc
pop
js
push
push
dec
xchg
idivl
sbb
movsl
jnp
push
lret
movsl
stc
sbb
jne
test
int3
fs
adcl
nop
mov
sbb
shlb
js
movsl
cli
adc
sub
xchg
outsb
sbbb
sub
das
stos
jns
pop
jl
sub
push
lock
cmp
sti
mov
mov
jl
cmp
mov
or
mov
dec
jecxz
das
insb
inc
rsm
movsl
call
movsb
outsl
jmp
jg
pop
sbb
imul
jb
jo
cmpsl
loopne
cmp
orl
inc
pop
pop
pop
mov
jb
and
jg
cmp
cwtl
cs
adc
test
jp
xor
pop
cwtl
jle
adc
insl
xor
lret
jae
sbbb
jl
fwait
daa
ror
xor
test
cmp
xor
and
iret
pop
cmp
jnp
fwait
popf
cs
mov
sarb
jbe
repnz
cmp
xchg
and
das
sbb
xchg
mov
test
cmp
xchg
mov
adc
sbb
and
mov
mov
test
call
push
test
hlt
dec
pushf
sub
stos
sbb
sub
popa
xchg
pushf
pop
jl
cltd
xor
out
xor
dec
jmp
ss
hlt
xchg
push
pop
cltd
repnz
mov
adc
mov
js
or
cmp
lahf
rcll
jge
add
je
inc
pop
mov
push
leave
mov
push
and
inc
out
xchg
cli
dec
notl
insl
pop
aas
lret
lods
roll
imul
addb
sbb
fstpt
cli
push
cmp
mov
into
aam
ss
xchg
add
hlt
jo
movsb
mov
in
jge
rcll
stc
pop
xchg
xor
jp
imul
imul
jmp
push
and
fsubs
and
movsl
mov
icebp
scas
shll
dec
xor
into
push
xlat
lcall
rcr
aam
fcomi
ficomps
mov
add
jecxz
and
mov
sbb
rcrl
jne
adc
xor
cltd
xchg
arpl
out
mov
cmpsb
mov
out
adc
dec
push
mov
xchg
pop
ljmp
or
daa
adc
enter
iret
dec
rcrb
sub
sahf
mov
arpl
mov
in
out
stos
frstor
add
sub
inc
or
testl
xorps
nop
pusha
arpl
popf
dec
inc
xchg
xchg
pop
push
aam
stos
mov
and
enter
jmp
xchg
test
loopne
orl
jmp
cs
cmc
out
push
xchg
testb
fwait
mov
ja
in
negl
stc
pushw
mov
lock
add
fisttps
xchg
inc
xchg
mov
xchg
imul
jge
jbe
jge
jl,pt
ret
int
or
cmpsl
mov
dec
fs
test
int3
sub
sti
fidivrs
rclb
pusha
test
ds
pop
roll
stc
sbb
decl
int3
xchg
cwtl
pop
cli
mov
je
adc
filds
loope
pop
xor
aad
add
pop
sub
imul
test
adc
sbb
or
mov
pushf
aam
movsb
jae
inc
leave
lds
jbe
ss
dec
and
xchg
mov
jge
es
xchg
jne
cs
sarb
mov
sbb
fbstp
and
or
fisubrs
mov
loope
lret
addr16
push
jae
stos
sbb
add
leave
cmp
test
fcomi
roll
fwait
rcrl
popa
fbstp
imull
rclb
call
mov
pop
ficompl
dec
cmp
and
rcrl
pop
iret
test
fisubrs
fwait
repz
call
insl
repz
cs
stos
in
mov
sahf
push
pop
xlat
lahf
ljmp
add
xor
or
in
scas
dec
movl
outsl
sub
pop
pop
jbe
jo
push
movsl
sarl
mov
dec
jo
test
jg
adcb
inc
loop
jp
divl
adc
ljmp
in
mov
pop
dec
mov
mov
mov
cmp
leave
rclb
jns
add
mov
xchg
pop
aas
dec
loopne
scas
aaa
imul
or
or
jnp
lret
in
gs
fbstp
xchg
icebp
test
nop
or
mov
mov
popa
push
addr16
sahf
in
pushf
mov
ljmp
dec
sub
mov
jge
cmc
stos
cmpsb
inc
das
ss
scas
sbb
rcrl
arpl
xchg
mov
or
xchg
arpl
cmp
test
ja
out
adc
add
bound
xchg
xchg
pop
ds
movsb
mov
call
std
jbe
sbb
xorl
punpckhdq
int3
inc
lret
addb
jae
ljmp
xorb
mov
sbb
mov
shll
adcb
rclb
mov
cld
rcrl
cmp
lret
cli
mov
lock
cli
jb
push
stc
jmp
imul
jl
fdivrl
dec
xor
push
xor
pop
loope
sub
jl
shlb
and
aas
cwtl
adc
fdivp
subb
int3
push
shlb
pop
jmp
cli
add
lock
fidivs
ret
mov
inc
inc
dec
and
cmpsb
inc
inc
subb
sbb
js
add
repz
cmp
cmpsl
cmp
mov
jb
push
loop
xchg
mov
lret
or
mov
xor
ror
std
test
daa
sub
lret
scas
sub
popa
xchg
pop
aam
mov
aam
pop
cltd
dec
cmp
cmpsb
push
pop
cs
dec
aad
outsb
and
fldcw
sbb
ficoms
in
mov
adc
aaa
pop
adc
aas
lock
mov
into
jb
mov
stc
push
add
lahf
repnz
jb
push
adc
cld
mov
xor
int3
enter
lods
push
repz
mov
jb
lea
xchg
aaa
jns
cmp
push
jo
fs
lcall
test
sub
sub
fisttpl
outsl
push
push
lods
pop
aaa
rolb
outsb
cli
jp
cmp
insb
add
push
in
mov
sbb
int
inc
jno
loop
xor
pop
je
daa
insl
scas
sub
push
xlat
mov
push
push
inc
hlt
ljmp
push
lret
ds
sbb
add
insl
std
into
xor
pop
cwtl
in
sbb
add
adc
fwait
jge
cli
or
mov
loopne
jno
dec
sub
jb
lods
xchg
scas
pop
loopne
sbbb
or
sbbb
add
xchg
dec
or
jl
pop
std
xchg
int
aad
mov
cmp
fxch
daa
inc
mov
push
lods
mov
ja
js
outsl
sbbb
and
scas
inc
or
jge
cmp
dec
out
cmp
sub
js
mov
push
adc
and
fildll
shll
or
out
in
cld
push
fwait
insl
stos
push
wbinvd
dec
repz
jmp
xchg
out
je
sub
ds
or
add
out
and
inc
addb
jne
dec
add
xchg
push
nop
test
fistpll
pop
jecxz
and
or
jge
xlat
cmc
mov
lret
mov
fists
enter
pop
xorb
cmp
sbb
jp
movsl
pop
mov
mov
mov
mov
lea
stos
outsb
push
or
imul
int
jns
mov
sub
in
jle
shll
jmp
fisubl
mov
add
sbb
jmp
lods
cmpsl
add
and
or
jns
lods
or
mov
out
fs
mov
ljmp
in
adc
jbe
shrb
call
cmp
and
enter
enter
xchg
arpl
cmp
dec
adc
mov
ja
movl
cmp
aas
pop
ljmp
cmp
fdivrs
mov
jmp
jno
mull
mov
test
sarl
dec
xchg
fisttps
xchg
test
adc
xchg
inc
sbb
mov
sub
xchg
rorb
sub
xor
add
jp
mov
test
mov
pop
add
add
jecxz
dec
xlat
mov
mov
mov
cmp
inc
push
cmc
jns
fsubs
lret
icebp
icebp
push
cmc
add
aam
jns
leave
insb
lret
xchg
and
test
sti
or
data16
xor
loopne
fistps
mov
jbe
mov
imul
adc
icebp
dec
cmp
jge
andb
cmpsb
imul
les
insl
xor
mov
sahf
mov
cli
dec
or
jae
mov
hlt
adc
fs
ljmp
dec
mov
fstps
inc
mov
or
mov
iret
jp
jno
push
or
js
pop
lods
jmp
in
outsl
cli
int
pusha
aam
addb
dec
call
stc
leave
lahf
mov
add
mov
dec
daa
imulb
std
clc
cmp
and
into
mov
or
jle
test
fs
sbbl
inc
pop
jge
dec
sahf
xor
push
scas
mov
push
in
add
adcb
arpl
mov
movsb
sbb
adcb
cmc
cmp
dec
in
adc
int3
jb
outsb
jecxz
dec
xlat
sub
mov
movsl
push
jl
push
inc
leave
mov
add
mov
add
mov
call
xor
outsb
and
ficomps
insb
cmp
push
mov
fnsave
dec
cmovge
mov
outsb
aaa
aaa
icebp
shr
fsubrl
jg
mov
dec
test
ljmp
fdivrs
ds
dec
lds
les
jecxz
add
in
ljmp
xchg
outsb
mov
nop
sti
mov
jle
and
pop
in
loopne
lcall
fiaddl
hlt
add
jo
add
adc
insb
in
movsl
sti
push
loop
inc
and
or
cmp
or
inc
push
ret
jbe
xor
and
in
shlb
cmp
xchg
mov
push
fstp
pop
jmp
mov
orb
mov
in
mov
sti
adc
popa
dec
mov
or
cmp
adc
nop
mov
imull
xor
mov
mov
sub
sub
lcall
lret
add
test
fidivrs
mov
sbb
or
jno
andb
out
imul
imul
push
cmpsb
inc
cmpsb
mov
mov
mov
xor
jb
test
mov
in
sti
cmc
insb
xor
adc
adc
mov
lds
call
add
das
push
mov
add
call
sub
sub
add
mov
pop
xlat
imul
xchg
enter
xchg
enter
jnp
pop
arpl
ja
mov
mov
icebp
xchg
jno
cs
push
fnstcw
adc
in
xor
movsb
es
pop
into
sti
push
mov
mov
roll
jne
out
cmp
std
inc
push
mov
dec
mov
pop
xchg
xor
sti
pop
dec
das
add
mov
popa
add
cs
xor
mov
stos
or
pop
xchg
cmp
aaa
ljmp
mov
push
aas
int
push
aad
cli
outsb
cmp
push
lahf
and
xor
xchg
sbb
jo
cmp
pop
add
in
pop
mov
repz
sub
mov
xor
or
test
mov
pop
mov
or
jmp
mov
insl
pop
and
xor
xor
ja
pusha
mov
insl
xor
lods
icebp
arpl
movsb
inc
add
pcmpgtw
sbb
mov
xor
mov
sbb
jg
sbb
repz
popa
mull
out
cmp
lret
testb
mov
pop
add
mov
cltd
pop
jle
ljmp
fcoms
push
xor
es
lods
adc
xchg
jno
mov
sub
ret
lock
cmp
xor
lea
jmp
clc
pop
fisttps
pop
xor
insl
loopne
es
lods
fisttpll
int3
push
jmp
aam
insl
cmc
push
incl
jle
fwait
popa
mov
cmp
aad
mov
fwait
jecxz
pop
stc
jb
shr
outsl
push
mov
push
fdivs
mov
mov
xchg
cmp
out
shlb
int
push
mov
mov
je
or
push
mov
ficoms
sbb
dec
add
dec
aam
dec
add
mov
sbb
cli
xor
das
lods
xchg
jecxz
cld
test
add
mov
mov
and
cmpsl
jbe
das
repz
popf
jae
out
ss
inc
add
data16
pop
loop
sbb
push
dec
bound
ret
cmpsb
lods
dec
int
jmp
or
xlat
es
lret
int
cmp
out
sub
into
dec
sbb
mov
cmpsl
jno
push
out
sbb
xor
adc
negb
not
and
adc
test
pusha
jb
popa
inc
insb
push
xchg
push
jge
jge
jmp
cmc
sti
xor
jno
inc
or
inc
push
cmpsl
in
and
enter
nop
lret
and
jo
mov
mov
repnz
repnz
inc
repz
sbb
mov
xchg
sub
xchg
and
jg
push
repnz
sbb
and
gs
lahf
jp
inc
imul
loopne
mov
pop
rorb
jecxz
jp
mov
push
lcall
insb
mov
xchg
fdivl
add
bound
nop
sub
jg
enter
sbb
add
mov
fstenv
adc
adc
sbb
mov
mov
pop
adc
cmc
pusha
pop
subl
cmp
vmwrite
push
and
divl
xchg
push
and
dec
gs
or
rcll
call
sub
int
inc
xchg
test
or
nop
push
mov
jno
pusha
xchg
lret
bound
mov
mov
das
insl
mov
movsl
lods
push
sahf
inc
clc
xchg
cmp
xor
bound
sub
roll
xor
bound
pop
ret
lods
nop
adcl
out
leave
and
jge
push
mov
scas
or
int3
mov
fnstenv
test
pop
mov
imul
stos
jo
mov
sbb
fcomip
sbb
sbb
add
mov
sbb
mov
nop
and
fisubrs
insl
enter
repnz
adc
pop
or
jge
inc
mov
add
scas
loope
lea
loopne
outsl
pop
push
mov
imul
mov
imul
push
fwait
les
les
repz
adc
add
adc
and
inc
and
dec
dec
mov
sub
xchg
xor
push
cli
push
or
add
pop
mov
bound
push
push
test
icebp
push
sub
sbb
in
and
mov
lahf
cwtl
scas
pusha
xchg
rcr
dec
ljmp
inc
cmp
mov
mov
out
aad
sbb
sub
xlat
sbb
das
mov
push
stc
outsl
mov
jge
fs
xchg
inc
out
inc
aaa
mov
add
outsb
clc
adcl
adc
pop
lock
jae
shlb
jl
leave
pop
sbb
push
add
sub
sahf
out
push
mov
ljmp
mov
inc
ficoml
gs
pusha
insl
stos
lret
sahf
add
pop
ficomps
ret
mov
push
dec
mov
add
sbb
ret
nopl
mov
or
mov
mov
call
jb
fnstcw
scas
in
loope
push
filds
xchg
cs
xlat
mov
aas
fistps
and
repz
add
fwait
jnp
push
push
adc
sbbl
or
imul
push
cmp
test
fwait
icebp
or
xchg
in
nop
push
dec
fidivl
call
pushf
stos
pop
dec
pop
xchg
inc
dec
ljmp
in
arpl
adc
std
repnz
adc
push
rorl
cmpsl
pop
cli
aad
push
jge
lret
and
mov
stos
xchg
inc
jo
out
in
jb
mov
inc
out
add
sti
push
pop
lahf
arpl
xchg
xchg
or
push
xchg
jne
mov
or
int
push
in
cmp
xchg
xor
fsubrs
cwtl
gs
push
jb
out
fcomps
dec
inc
inc
in
sub
ret
sbbb
subb
fcos
in
fisubrl
test
cli
popa
lods
sbb
call
mov
xchg
sti
mov
loope
ret
stos
iret
scas
ljmp
xchg
sbb
or
stc
add
out
aad
fbld
mov
xor
push
sub
movsl
xor
cmpsb
out
insb
mov
jb
cld
arpl
push
shll
fidivrl
cmp
pop
adc
dec
scas
decl
data16
sbb
bound
insl
data16
sarb
pop
arpl
add
add
imul
push
inc
inc
sbb
imul
call
ja
and
jbe
rorb
push
test
dec
movsb
pop
loop
imul
pop
sbb
ljmp
cmp
dec
dec
mov
mov
adc
dec
sub
fstl
test
mov
fcmovu
jo
loop
xor
in
or
mov
loopne
jl
xchg
push
cmp
add
cli
out
inc
add
inc
int
cs
pop
add
cmp
pop
pop
and
sub
mov
movsl
fsubrl
in
mov
xor
mov
movsl
es
jne
push
fcomps
rcl
repz
add
mov
cmpsb
or
aaa
out
inc
out
sub
loope
jb
mov
pop
adcb
mov
repnz
add
pop
xchg
aad
pop
pop
inc
jl
inc
sbb
scas
in
fsubr
adc
test
mov
ja
and
cld
in
push
add
push
inc
mov
pop
adc
lahf
or
and
xchg
cmp
loopne
call
fldcw
mov
dec
lods
lret
sub
fucomp
cld
in
mov
stc
mov
push
test
sub
jge
dec
xor
daa
in
jecxz
mov
mov
pcmpgtw
iret
pop
int3
cmp
loop
pop
subl
aaa
stos
sub
inc
xchg
inc
dec
rolb
or
sbb
xor
repnz
cs
in
outsb
or
fs
dec
mov
adc
mov
or
jae
add
add
in
pop
mov
mov
sbb
jb
sub
cwtl
in
mov
arpl
dec
pop
adc
fsts
jbe
jae
dec
xor
fimull
pushf
mov
dec
enter
stos
mov
loope
scas
jecxz
and
mov
jb
pop
ss
add
out
cs
mov
mov
and
xorl
and
cltd
mov
cmpsb
iret
inc
pop
xchg
loop
inc
mov
xchg
mov
sahf
jge
and
mov
and
xchg
jnp
arpl
jae
int3
stos
dec
mov
sub
mov
push
or
fwait
das
or
iret
add
push
jo
imul
push
pop
addl
je
nop
jle
jmp
fisubrs
inc
add
mov
into
test
sub
sub
int3
in
mov
sub
xchg
loope
nop
cmc
xchg
aas
test
jns
mov
sbb
push
mov
fdivrs
roll
dec
ret
incb
fldl
or
ficompl
xlat
pop
out
add
pop
ret
push
xchg
imul
bound
pop
pop
pop
lods
negb
dec
xor
or
mov
jns
pop
push
mov
insb
icebp
mov
xorb
jne
push
test
popa
or
dec
sub
pop
inc
push
dec
dec
insl
fiaddl
test
inc
fnsave
lods
jl
xchg
xor
lcall
or
es
mov
pop
addr16
xchg
xchg
mov
push
scas
pusha
pop
inc
es
popa
xchg
cmpb
ja
fs
adc
mov
xchg
outsb
ljmp
incl
out
adc
subl
jecxz
fsubrs
pop
pushf
jae
cmpsl
sub
inc
sbb
into
ror
dec
stc
sti
jle
cli
pop
iret
mov
test
loopne
xchg
lret
iret
xor
xor
ret
xchg
mov
pxor
ss
imul
orl
data16
lds
pop
sarb
cmpsb
cmp
mov
out
push
test
jg
movsl
mov
mov
mov
push
mov
pop
cli
cmpb
jle
lcall
daa
repz
mov
stos
mov
cmp
aas
movzwl
lods
and
stos
in
test
sbb
les
aad
mov
dec
sub
mov
andl
jne
jl
out
mov
xchg
std
cltd
and
div
cltd
mov
rcrl
sbb
add
xchg
fsubrl
mov
jns
lods
imul
cmp
sub
push
mov
jnp
pop
push
xchg
rorl
mov
adc
lahf
add
inc
jb
bound
push
jmp
add
insb
aam
mov
fisttps
arpl
ret
lods
xchg
push
sbb
scas
push
mov
stos
fcomps
addr16
mov
imul
dec
imul
pop
js
cmp
inc
fcmovnb
int
jo
sub
pusha
mov
rclb
ljmp
mov
std
sub
push
in
mov
xchg
adc
xchg
sub
or
push
rcr
jecxz
jecxz
inc
xchg
fsubrl
xchg
push
iret
loopne
and
out
fimull
mov
xor
push
cld
fnsave
rorb
ja
mov
pop
mov
inc
xchg
ret
xchg
loope
sub
jge
mov
cmp
jb
shll
imulb
xor
test
mov
or
cmp
dec
js
mov
lods
cmp
ss
in
in
fiaddl
mov
push
cld
jb
imul
or
xchg
sbb
jo
xchg
pop
lods
xor
arpl
insb
sub
mov
add
fstl
adc
mov
fidivrs
push
fnsave
jne
and
pop
inc
scas
outsb
inc
hlt
cltd
mov
jp
sarb
clc
push
lods
mov
xchg
push
lea
inc
add
cltd
lret
in
icebp
nop
adc
or
dec
stos
cmpsb
out
repnz
les
mov
cmpsl
pop
jne
rolb
loopne
repnz
jmp
scas
out
sbbl
cmpb
inc
mov
and
pop
jb
mov
push
jp
aam
imul
mov
jnp
jo
mov
cmpsl
out
pop
xchg
jno
aad
xor
imul
outsl
loopne
mov
addr16
add
testb
repnz
xchg
nop
push
int
jle
or
add
invlpg
enter
test
dec
mov
cmp
sub
in
fs
lret
lret
jge
ss
pop
mov
pushf
decb
and
insl
out
insb
add
lret
in
mov
cmp
xchg
push
xchg
icebp
in
lods
or
stos
jl
scas
cli
outsl
xchg
jbe
dec
jmp
inc
loope
lahf
sub
inc
loopne
stos
cld
sahf
jge
adc
cmpsb
jl
comiss
clc
dec
mov
arpl
lret
mov
pusha
ljmp
and
mov
shrl
push
cli
pop
out
aad
jge
test
pop
call
mov
adcl
cmp
xor
xorb
mov
ja
fmulp
mov
leave
outsl
inc
icebp
mov
sub
outsl
cs
cmpsb
inc
lods
addr16
or
clc
add
daa
adc
lock
mov
pop
mov
scas
sub
jb
jl
dec
pop
mov
movsl
std
daa
inc
jle
ljmp
xchg
daa
mov
jmp
push
dec
inc
iret
rcrl
imul
push
popf
insb
daa
loop
adc
adc
xor
out
aaa
pop
loope
jno
add
mov
jns
rolb
cmp
push
fmull
loopne
gs
push
inc
fwait
and
push
jns
cmp
dec
inc
mov
adc
xchg
sub
sbb
push
pcmpgtd
test
add
add
lods
fcmovnbe
call
fsubrs
movsl
hlt
outsl
inc
lret
sub
inc
dec
pop
mov
je
xchg
lea
sub
loope
adc
movsl
cmpsb
push
add
fcomps
fildl
addl
loop
fdivp
and
pop
cli
into
sbb
mov
lcall
fcomi
mov
sbb
inc
xor
xchg
test
lret
xlat
cmp
adc
daa
push
add
mov
js
dec
aam
or
test
enter
xor
add
pop
fwait
cmpsb
subb
jmp
fcompl
sti
sahf
cmp
pushf
ljmp
in
sub
adc
repnz
mov
sub
lock
dec
or
push
in
sub
ljmp
sub
jb
movsl
xchg
push
dec
in
add
add
in
ss
dec
push
push
cli
movsl
cs
and
call
ljmp
notb
xchg
outsl
jno
mov
cmpsl
inc
mov
cld
xor
dec
jns
xchg
andb
add
clc
sub
popf
gs
xchg
out
inc
dec
popa
lea
movsl
or
test
mov
pop
add
and
dec
sbb
sti
jbe
push
ss
repnz
inc
cmp
daa
jbe
sahf
push
xchg
pop
daa
sub
xchg
arpl
inc
push
out
adc
repnz
repz
jle
andl
cmc
jno
pop
gs
xchg
mov
xor
sahf
sahf
daa
int
into
ljmp
add
push
xchg
aaa
xchg
insb
pop
push
fstps
or
push
lret
mov
dec
call
data16
pop
out
ret
cmpsb
add
push
xchg
imul
mov
sti
or
sub
dec
jp
mov
inc
or
pop
or
fsub
sub
sbb
mov
pop
mov
idivb
jo
iret
outsl
pop
stos
jbe
and
mov
leave
out
pusha
cmp
push
pop
cmp
mov
and
mov
lea
lds
dec
scas
add
hlt
pusha
fdivl
add
xorb
int
mov
loop
fld1
lret
xchg
inc
dec
jb
mov
add
pop
add
int
cmp
adc
xchg
inc
mov
sti
out
notl
xor
pop
bound
adc
imul
mov
mov
rcll
push
xlat
pop
sbbb
sub
adc
jp
or
cmpsb
mov
xorb
dec
aad
inc
fisubrl
mov
pmaxub
je
enter
clc
sahf
lds
in
push
xor
adc
jae
push
je
jmp
mov
fiaddl
fldl
add
dec
xchg
jmp
dec
cltd
xor
negl
cmc
or
jge
cmp
movsl
popf
cli
stos
dec
inc
sub
cmpsl
in
inc
xlat
sbb
push
int3
enter
loope
adc
rolb
xchg
add
push
sbb
xor
cmp
fs
into
popf
mov
and
xor
or
xchg
add
or
add
jecxz
bound
cmp
inc
lret
lods
inc
sbb
int3
mov
mov
cltd
jo
insb
cmpsb
add
test
cld
repz
shr
or
lahf
jbe
leave
cld
mov
int3
mov
out
cmp
out
cltd
xor
cmp
lods
fisubl
leave
sub
ja
mov
test
ljmp
das
cmpsb
mov
jae
pop
insl
in
fnstenv
inc
movsl
fs
dec
lock
mov
cmp
lock
faddp
push
and
pop
xchg
adc
into
or
mov
dec
jns
out
xchg
js
aad
xor
push
push
icebp
inc
sar
dec
xor
insb
ss
sarb
fstpl
stos
mov
popf
leave
jmp
and
dec
in
push
dec
and
pop
sub
in
xchg
or
mov
shr
and
les
repnz
mov
pop
out
pop
push
sti
data16
xchg
cltd
lret
cltd
dec
sbbl
xchg
add
dec
pushf
mov
mov
add
stos
xchg
stos
pop
jl
push
jg
ja
lods
pop
sbb
stc
test
in
pop
cmpsl
iret
push
mov
aaa
icebp
xor
inc
add
and
push
add
in
jne
mov
stos
arpl
aas
faddl
sbb
dec
pop
xchg
bound
jb
xor
sbb
jl
xor
xor
jbe
jmp
xor
xchg
test
jl
pop
push
push
mov
inc
sar
mov
jno
adc
shll
sub
loope
pushf
das
or
mov
or
dec
dec
inc
push
insl
std
je
sbb
jae
push
push
fwait
or
int3
cltd
mov
sub
mov
inc
dec
les
inc
inc
cmpsl
stc
lret
xlat
clc
call
and
mov
mov
aas
dec
js
push
mov
fisttps
and
add
iret
jne
gs
mov
fistl
mov
stos
ljmp
mov
mov
xor
and
test
cmp
out
cli
sbb
repnz
rcl
and
jae
ds
xor
inc
mov
cmpsl
in
add
fs
inc
xchg
stos
mov
inc
xlat
lds
leave
enter
xchg
js
and
stc
or
cmp
mulb
and
pop
fsubr
loope
inc
sti
add
add
mov
int
bound
add
jno
cltd
ret
adc
cmpsl
and
je
in
cwtl
stc
mov
sub
xchg
je
push
dec
ds
cmp
int3
addb
repz
addr16
test
pop
je
push
xor
sub
adc
out
inc
sbb
fisttpll
xor
pop
das
lret
sbb
cmp
cmp
xchg
cltd
jno
jnp
fs
aad
dec
movsb
mov
mov
pop
orb
lds
out
or
xchg
jge
cmp
push
shlb
rol
jge
and
xchg
mov
mov
or
add
icebp
or
loope
into
dec
or
mov
lahf
shlb
enter
aas
pop
adc
cs
stos
and
out
cmp
int
pop
xor
cmp
xchg
imul
hlt
mov
mov
cltd
pop
lret
outsb
mov
lret
mov
jns
dec
icebp
mov
aas
in
paddsb
sbb
xchg
scas
mov
xor
imul
xor
push
daa
sbb
aaa
jg
lock
jb
iret
dec
sbb
lret
cvtdq2ps
aad
sbbl
add
sarb
popa
stos
jg
xchg
cmp
nop
loope
sbb
ret
inc
cmp
xchg
lahf
or
xchg
into
sub
jecxz
arpl
scas
decb
pop
or
mov
lock
xchg
lahf
ret
dec
cld
dec
sbb
gs
sbbb
cli
mov
and
mov
out
xor
test
lahf
xchg
in
sbb
sub
js
filds
xchg
std
mov
cld
fmul
push
cwtl
scas
jno
xlat
cld
ja
mov
scas
daa
adcb
test
dec
xchg
aaa
sbb
outsb
test
jnp
sbb
xchg
xchg
call
pop
loopne
in
loopne
and
leave
nop
mov
or
dec
shlb
jmp
addb
outsl
lods
pop
lcall
cltd
mov
pop
adc
dec
stc
je
in
mov
in
cwtl
out
push
mov
add
cmc
scas
cmp
xchg
scas
add
jnp
sti
out
in
xor
movsb
cltd
cli
es
or
shll
push
inc
cltd
mov
add
pop
cltd
pop
dec
rorl
cmp
scas
cmp
jle
push
jp
lahf
xlat
icebp
mov
cwtl
in
xlat
jne
pop
int3
push
in
out
shrl
jo
fwait
in
pop
dec
out
test
cmp
jmp
stos
rcl
gs
sbb
ds
jecxz
push
mov
or
push
jnp
cmc
icebp
inc
mov
cmp
mov
inc
dec
xor
aad
aaa
inc
in
mov
cmc
xchg
inc
addr16
push
push
push
sbb
adc
mov
xchg
addb
cs
mov
cmp
aam
inc
jo
aam
mov
cmp
or
in
adc
and
lahf
or
ds
cmp
sbb
inc
mov
mov
in
pop
jno
adc
xchg
adc
imul
add
or
and
into
notb
test
mov
and
mov
popa
lcall
das
int
xchg
mov
pushf
test
add
pop
add
mov
cmpsb
xchg
aad
pushf
jb
lahf
mov
leave
sub
push
cmpsb
push
cwtl
jne
cmc
arpl
xor
inc
xor
and
inc
orl
cwtl
pop
outsl
and
in
inc
ljmp
or
xor
scas
daa
dec
add
pop
inc
or
stos
es
cld
lret
nop
jb
nop
cmp
mov
push
dec
mov
loope
jge
sbb
pop
daa
aad
out
stos
dec
movsb
xor
lock
popa
cmp
jl
lds
xchg
imull
je
shll
add
mov
xorl
inc
cmp
sbb
shlb
in
jno
lret
imul
shl
adc
test
pop
xor
pmuludq
sbb
inc
lahf
or
jne
shlb
xchg
clc
xor
lods
push
jmp
test
pop
daa
sbb
mov
std
inc
push
push
shlb
js
cmp
push
add
nop
call
sbb
lcall
or
sbb
mov
out
movsb
call
jg
pop
dec
xor
jne
lds
push
or
jo
cli
enter
lcall
mov
lods
xchg
xor
cmp
cmc
dec
mov
loope
dec
ret
sbb
in
ficompl
pusha
pushf
mull
stos
sahf
sub
adc
dec
test
push
mov
shl
add
mov
mov
fadds
int3
or
ss
or
pop
nop
xchg
and
icebp
pop
ret
or
or
xchg
inc
mov
ret
pop
je
xor
pop
sbb
shll
dec
sub
dec
mov
cmp
nop
pop
arpl
ret
cmpsb
mov
dec
push
test
loopne
into
fistl
stos
test
cs
push
imul
fistpll
mov
stc
mov
into
aam
test
cs
sahf
xchg
imul
mov
mov
idivl
push
sbb
pushf
mov
stos
and
jmp
cmp
xlat
loopne
mov
or
cmp
mov
movsl
sub
and
mov
cwtl
push
push
fcomps
pop
adc
jns,pn
popa
push
int3
iret
mov
mov
sub
sbb
jl
jbe
lock
cmc
mov
push
and
fwait
mov
sub
bnd
pop
mov
daa
pop
sub
mov
mov
jle
push
int
lods
pushf
adc
movsl
pop
adc
xchg
cmp
repnz
mov
cmp
xchg
loope
inc
aaa
mov
cmpsb
popf
ret
outsb
inc
and
pop
insb
outsl
sbb
das
in
mov
sar
xchg
sahf
ljmp
cli
sub
add
loope
fldl
mov
xor
ret
shlb
push
push
mov
fnstsw
sub
xor
leave
repnz
sbb
xchg
add
addr16
stos
pop
sbb
cmp
repz
dec
pop
sub
cmpsl
xchg
inc
iret
jmp
xor
adc
leave
xchg
mov
sarl
and
and
in
repnz
inc
inc
mov
sbb
fnsave
push
and
das
dec
xlat
jns
sbb
ficomps
push
cld
shr
adc
divb
lds
push
lahf
inc
xor
je
stc
shll
dec
es
fwait
gs
repz
xlat
sbb
adc
or
fs
sub
outsl
movsb
xchg
scas
xchg
xchg
jl
rcrb
adcl
sub
adc
or
or
divl
fidivl
add
test
jmp
jae
icebp
cmp
add
hlt
jmp
dec
inc
xchg
xor
cmpsl
std
ret
add
jecxz
cmc
push
sbb
pop
leave
rcl
add
test
lahf
mov
xlat
lock
inc
orb
sbb
push
jbe
pop
in
not
cld
xchg
jns
test
in
jbe
stc
jp
jne
push
pop
sub
arpl
pusha
stc
bound
test
push
insb
clc
into
add
movsb
inc
jae
push
xchg
loop
or
xchg
jmp
dec
cmpsb
cmp
xchg
cmp
pusha
lock
arpl
insl
addr16
adcl
dec
sub
sbb
shl
xchg
sbb
stc
rorl
xchg
dec
loopne
stos
lret
cmp
cmp
pop
das
push
jno
lret
pop
push
aad
inc
hlt
repnz
fidivl
repz
pop
inc
ret
inc
cmp
std
movsb
adc
add
lock
sti
jp
rorb
xchg
negb
jl
lock
call
inc
inc
push
cli
dec
xor
movsl
addr16
stos
cmp
in
pop
push
pop
stc
loope
adc
dec
cmp
push
es
scas
lods
or
jl
pop
jmp
daa
mov
and
jle
shll
ljmp
enter
rcll
sub
jp
cltd
daa
push
mov
inc
rorl
push
shrb
mov
scas
test
test
aam
xlat
cmpsb
or
test
scas
pop
mov
sbb
fdivp
jl
stos
arpl
popf
pop
sbb
fistpll
out
mov
mov
aaa
pop
mov
lret
xchg
icebp
mov
popf
sub
push
cmp
or
das
data16
pop
inc
jne
mov
pop
fistl
jmp
add
dec
cltd
xchg
pusha
sbb
cmp
inc
jne
out
pop
jno
mov
lcall
mov
lds
test
jo
add
push
lock
cmp
lods
inc
mov
inc
jl
mov
inc
push
clc
or
arpl
dec
or
xor
test
cltd
cld
mov
arpl
cmp
and
jne
bound
out
cmpsl
pop
add
push
jbe
cwtl
lret
push
sbb
xchg
push
pop
jae
mov
pop
jno
push
and
testl
push
lods
sti
lret
or
std
sub
sub
jnp
ret
adc
mov
xchg
call
inc
fildll
xchg
gs
fbld
jnp
gs
imul
pop
je,pn
cmpsb
jecxz
inc
add
ftst
mov
push
push
adc
sti
call
repz
es
or
add
mov
inc
xor
fmul
ret
and
cmp
sub
add
gs
mov
mov
xchg
movsl
mov
lcall
push
in
mov
xchg
lcall
pushf
cmp
mov
cli
rolb
lds
dec
sub
sub
lcall
pop
inc
loope
and
sahf
sub
sbb
cmpsb
add
and
mov
sub
mov
add
inc
cmpsb
popa
inc
pop
pop
and
push
ss
lahf
int
inc
fisttpll
mov
stc
ret
jl
pushf
adc
out
mov
cld
pop
pop
push
xchg
mov
inc
ja
sti
je
lods
neg
nop
imul
xor
jns
fsubrl
jo
ret
sub
mov
mov
cwtl
mov
sbb
mov
inc
fs
lahf
js
rcrb
sbb
adc
out
movsb
les
leave
mov
outsb
jae
or
out
out
adc
mov
or
pop
incl
push
notb
inc
cmp
imul
jp
jge
sbb
sub
or
xor
mov
fisubl
mov
pusha
inc
push
popl
and
mov
gs
sbb
cmc
imull
and
cmpsb
cmpl
push
int3
movsb
dec
pop
mov
les
movsb
mov
add
xchg
aad
add
imul
jmp
stos
dec
mov
push
jnp
pushf
repz
cmp
pop
dec
xchg
xlat
xor
add
cltd
test
loop
test
add
sbb
adc
call
mov
sbbl
leave
icebp
xchg
inc
addr16
xor
cmp
mov
jnp
in
js
inc
inc
stos
adc
mov
ret
xchg
das
cmpsl
push
mov
out
dec
lods
dec
push
es
dec
mov
jns
nop
das
jl
mov
pop
add
mov
sub
mov
sub
add
dec
cli
test
sbb
dec
imul
into
mov
dec
stos
mov
push
mov
pop
popf
mov
xchg
outsl
adc
add
pop
jg
repz
cmpsb
mov
push
shlb
loop
inc
xor
cli
out
jb
pop
pusha
movsb
pop
in
push
xor
mov
adc
or
rcrl
int3
scas
subb
cli
and
xchg
je
xor
jmp
add
xchg
push
ficoml
repz
mov
or
in
dec
bound
icebp
pusha
out
fidivl
arpl
ffreep
jge
ficoml
mov
fs
jecxz
mov
scas
xlat
jno
mov
rcll
jle
and
fdiv
push
jecxz
mov
sahf
xor
je
mov
ja
dec
lods
mov
mov
mov
push
jp
pushf
push
dec
ret
leave
and
sub
dec
cmpsb
dec
jae
insl
xor
ljmp
leave
cmp
bound
sbb
sub
sub
xchg
pop
into
cmp
mov
mov
inc
mov
adc
sub
daa
sbb
xchg
imul
dec
jl
adc
xor
lret
mov
stos
int
or
mov
mov
int3
divl
pop
imull
ljmp
adc
cmp
jmp
cwtl
xorl
cmp
cmpsb
test
cs
mov
cs
arpl
es
clc
das
sbb
adc
mov
out
xlat
pushf
adc
gs
imul
jmp
xchg
mov
int
int3
and
iret
in
aaa
xchg
xor
xor
push
in
adcl
ja
shlb
shlb
std
bound
or
int
fisubrs
clc
mov
inc
cmp
scas
mov
xor
ljmp
adc
call
cwtl
cli
fs
sbb
sbb
in
dec
icebp
pop
mov
jmp
dec
insl
or
stos
mov
ljmp
adc
ja
gs
lods
mov
pop
aad
or
test
adc
xor
jno
mov
fiadds
xor
add
pop
in
in
push
pop
push
repnz
jl
add
aam
fsubrl
adc
jns
es
mov
jns
mov
cmpsb
into
cmpsb
imul
lret
adc
pop
jns
ss
sbb
cmp
pop
jnp
pushf
push
mov
push
fstps
lods
scas
ja
lods
adc
push
nop
iret
and
and
outsb
cmp
in
sbb
hlt
cltd
fisubs
lret
pop
fsubs
test
std
sahf
xor
es
mov
jne
mov
mov
aam
lret
lods
enter
sbb
pop
hlt
loop
jno
mov
insb
hlt
inc
bound
orb
adc
jne
inc
in
sbb
xor
mov
call
push
mov
add
push
push
mov
cli
add
pop
aas
xorb
push
inc
mov
and
cmpsl
add
imul
insl
add
addr16
push
jecxz
jl
fs
roll
pop
push
xchg
push
xor
pop
push
and
leave
ret
xchg
push
sub
aam
cltd
dec
jne
cmc
loop
fwait
dec
js
add
sti
nop
cmp
inc
stos
and
mov
push
divb
cmpsl
clc
jae
mov
in
xor
addr16
imul
xor
and
mov
addr16
popf
cmp
mov
loopne
push
sbb
push
adc
push
inc
int3
inc
rcr
and
repz
inc
cmp
ja
mov
mov
mov
mov
jmp
push
in
gs
int
adc
push
pop
dec
out
imul
imul
fidivrl
push
cwtl
cmc
mov
lods
jge
bound
cltd
mov
orb
test
fwait
in
mov
mov
xchg
test
xchg
dec
inc
mov
lret
mov
xchg
adc
mov
sub
repnz
imul
xchg
dec
aaa
add
iret
cmp
ja
mov
push
test
xor
outsb
cmp
popf
shrb
out
adc
sub
fsubl
aad
or
jns
and
push
pusha
jmp
lahf
or
rcrl
ja
mov
adc
insl
hlt
fstp
mov
mov
lea
push
arpl
jecxz
push
clc
inc
dec
test
cmp
xlat
clc
int3
jno
jle
dec
adc
dec
inc
pop
and
jg
ret
cmpb
sbb
pop
dec
inc
scas
mov
nop
shl
inc
clc
imul
jno
mov
xchg
int
and
dec
fprem1
mov
ljmp
lret
aas
mov
loop
out
test
bound
outsl
mov
das
idivl
lods
dec
or
xchg
mov
fcmovne
and
out
inc
ljmp
aam
in
mov
inc
sbb
cmp
test
xchg
fisttpll
pop
fisubs
cltd
ljmp
ljmp
mov
mov
or
sbb
outsb
or
lret
test
cmp
cwtl
xchg
aas
cld
sub
cmp
sbb
push
in
and
mov
imul
rorl
push
in
push
leave
pop
aaa
scas
lahf
jmp
push
sbb
negl
cs
sti
mov
cli
inc
incb
int3
add
lcall
xchg
mov
cs
movsl
int3
sub
cmc
iret
cmpsb
imulb
sub
sub
cmpb
xor
sbb
nop
adc
push
inc
test
cmp
xor
stos
mov
pop
fnstcw
stos
mov
jns
outsl
fnstsw
sub
adc
filds
push
xor
pop
fcoml
lock
fs
je
std
pop
int3
pop
ret
push
bound
enter
in
push
shlb
outsb
in
or
push
daa
inc
cmp
scas
sahf
jmp
lret
icebp
gs
ss
jb,pn
adc
arpl
fwait
cmp
or
les
mov
sbb
mov
xor
and
mov
mov
cwtl
or
addr16
ljmp
or
scas
pop
pop
inc
ror
daa
mov
cmc
out
cmp
lock
cwtl
out
sbbl
xor
sub
adc
mov
ret
imul
push
push
xchg
jle
ds
sub
cld
into
xchg
mov
in
into
pop
aas
adc
xor
out
jmp
sub
je
loope
ds
cmc
dec
adc
notl
repz
mov
mov
or
sbb
pop
repnz
inc
hlt
in
js
popa
popf
mov
xchg
test
int3
test
aaa
push
xchg
out
lods
sub
stos
fwait
mov
lock
mov
roll
gs
xchg
cmp
clc
out
outsb
sbb
dec
inc
adc
xchg
jo
add
xor
in
es
call
pop
in
add
movsb
ret
hlt
aam
xlat
popf
ds
and
lahf
test
push
and
into
ljmp
icebp
leave
daa
test
aam
dec
imulb
push
mov
pop
jnp
push
mov
out
rorl
mov
mov
xor
shlb
leave
pop
adc
cs
mov
xor
or
insl
mov
test
dec
cld
push
push
mov
test
hlt
pop
je
inc
pop
mov
jmp
jne
and
push
add
xchg
cld
push
and
mov
push
mov
sbb
jg
or
pop
stos
jl
fwait
adc
sbb
sbb
cwtl
jbe
stc
loopne
xor
sub
bound
or
mov
cvtps2pd
sub
out
cld
sub
xchg
add
rclb
pop
push
fucompp
in
stos
xchg
pop
sahf
xchg
or
fbstp
pop
fldenv
pop
pop
pop
xchg
add
andb
divl
stc
icebp
jno
mov
cmp
xor
nop
sub
xchg
lea
fcmovbe
dec
or
jle
push
pop
xchg
jns
xchg
adc
add
lock
jmp
cmp
cwtl
push
cmp
mov
subb
pushl
cmpsl
fbstp
or
inc
js
mov
cmpl
ja
sbb
outsb
adc
xorb
add
outsb
jecxz
pop
mov
inc
pop
test
shll
mov
mov
mov
mov
lahf
pop
jecxz
cmpsb
cmpsb
xor
repz
movsl
faddl
pop
mov
inc
inc
in
mov
pop
sbb
cltd
inc
push
pop
xchg
clc
pop
mov
clc
xchg
or
jae
push
out
mov
imul
cmp
xchg
mov
jo
mov
mov
cmc
sub
into
mov
aaa
outsl
pop
or
test
stos
sub
in
push
push
test
mulb
pop
loope
leave
loope
mov
flds
ds
jge
cli
pop
std
jle
jne
sbb
and
fsubl
mov
jno
daa
shl
daa
jnp
pop
or
in
incl
orb
jl
adc
std
adc
decb
cmc
pop
add
push
sub
inc
xor
jns
push
outsl
test
ja
sbb
jns
pop
jns
mov
in
pop
sbb
lea
dec
idivb
mov
das
xor
xchg
jp
cmp
filds
adc
add
pop
cltd
pop
data16
jnp
les
adc
mov
inc
les
pop
pop
jecxz
jg
mov
in
jae
inc
push
std
xchg
pop
das
addb
and
fisubrl
mov
scas
lret
mov
addr16
xchg
repz
adc
repnz
jp
cld
lock
pop
fwait
push
or
repz
xor
scas
bound
lahf
dec
pusha
sub
push
insb
mov
insl
ret
cmpsl
and
pop
sbb
and
inc
clc
add
popf
cmc
and
sbb
lret
insb
push
sub
cmp
mov
or
or
fs
sub
dec
mov
jle
mov
push
xchg
xchg
lods
or
add
fistpl
test
movsb
jne
outsb
test
fwait
test
sub
cmovnp
mov
mov
jae
stos
aas
push
fst
jbe
mov
push
mov
xor
out
js
hlt
or
lods
or
or
mov
mov
pop
and
add
ds
pop
ds
dec
lds
mov
and
add
cmp
jge
shrl
lea
lods
xor
int
cmpsb
or
fs
fisubl
jmp
jae
fisubl
xor
sub
fiadds
pusha
jb
inc
fyl2xp1
addr16
sbb
cmp
mov
pushf
mov
mov
and
push
cmpsl
cmp
int3
push
pop
mov
inc
dec
sar
push
fisttpl
jecxz
dec
jge
xchg
insb
jb
subl
jae
lcall
mov
push
daa
inc
fsubs
inc
inc
ret
mov
push
and
fisubrs
pushf
mov
nop
js
push
je
adc
mov
gs
or
aas
shrb
adc
mov
mov
and
xchg
gs
outsl
and
lcall
mov
pop
mov
jo
cmp
lds
dec
xchg
jo
dec
adc
add
sub
shrl
jecxz
cltd
test
fucomi
jno
mov
clc
jg
mov
mov
scas
adc
imull
push
sub
std
jg
imul
test
pop
ror
sbb
xchg
xchg
push
aam
mov
sbb
xchg
jo
cmp
pop
lahf
aad
scas
cmp
pushf
sub
sbb
in
push
cmp
adc
clc
call
xor
mov
add
mov
je
cwtl
jae
loopne
inc
iret
inc
not
sub
mov
cmp
dec
negb
mov
sti
dec
fwait
dec
push
les
push
mov
subl
cs
mov
mov
ljmp
js
push
mov
xor
call
sub
lret
cltd
lods
mov
dec
shll
adc
sub
sub
mov
pop
mov
pop
push
fsubs
sub
cmpsl
dec
sub
mov
addr16
es
sub
pop
push
push
mov
jp
lea
test
jne
inc
xchg
mov
bound
gs
mov
cmp
xchg
pop
sbb
sti
pop
sub
pop
xor
nop
lock
fldenv
mov
cmc
cltd
pop
jae
scas
dec
dec
mov
cmp
sbb
dec
and
and
insb
shrl
adc
iret
xor
je
push
adc
adc
into
jmp
scas
dec
jns
inc
add
dec
test
mov
xor
adc
push
push
mov
loop
fs
xchg
cmp
inc
icebp
mov
fnsave
mov
mov
pop
and
dec
push
push
inc
jbe
sub
pop
xchg
or
sarb
and
and
mov
jb
push
insl
movsl
sbb
inc
xchg
or
xchg
xchg
jg
call
jne
sti
mov
subb
or
xlat
jg
xchg
clc
lret
push
push
dec
jp
sahf
scas
mov
lret
sub
xchg
sbb
out
aas
cmp
mov
insl
and
adc
rcll
adc
cmp
gs
lret
xor
fcomps
cs
add
xchg
xchg
in
movsb
clc
xor
rcrl
xchg
cmp
pop
in
cmc
les
data16
imul
lds
movsl
fcomp
scas
adc
mov
lahf
and
imul
lock
fucomi
mov
scas
into
in
popa
push
imul
push
jp
dec
or
xchg
pop
lret
cs
jg
lret
inc
pop
add
adc
repz
mov
push
xchg
rol
xchg
dec
xchg
not
push
xchg
xchg
jge
dec
dec
gs
jne
imul
rcrl
test
sbb
mov
jmp
andb
rorl
leave
add
clc
jecxz
xor
and
and
mov
fidivrs
inc
mov
js
mov
sbbl
jp
sbb
lret
fsubrl
dec
jecxz
arpl
loop
adc
loopne
mov
push
mov
pop
sub
add
mov
mov
inc
outsl
and
xchg
add
cmpsb
inc
dec
outsb
outsb
test
dec
dec
dec
test
sub
lock
imul
loope
xor
add
insb
test
cmp
pop
jae
rol
std
nop
imul
mov
das
inc
int
iret
fcoml
scas
dec
in
inc
testb
lds
stos
xor
roll
iret
fcomp
dec
stc
and
and
stos
push
movsl
xchg
jo
in
daa
xchg
sbb
pop
arpl
fsubs
mov
leave
dec
clc
sbb
or
pushf
stc
mov
mov
adc
stos
mov
sbb
fwait
push
movsb
testb
mov
mov
int3
xchg
jp
sbb
enter
cmp
pop
stos
sbb
je
repz
inc
adc
std
mov
pop
outsb
jnp
fucomip
pop
gs
push
call
add
xchg
sbb
pop
hlt
push
mov
das
push
lock
cs
or
jnp
pop
fimull
daa
mov
push
ret
inc
lods
mov
in
lock
fcompl
mov
add
div
push
mov
addb
mov
repz
in
stos
lahf
mov
call
sub
je
or
sub
movsb
cmpb
fmull
lret
xchg
sbb
jp
test
repnz
loop
daa
jno
push
mov
nop
cmc
pop
or
jo
outsl
add
fstpt
mov
mov
out
jp
ret
dec
in
addl
xchg
pusha
mov
fwait
dec
popf
adc
adc
test
jae
pusha
sarb
and
sbb
insl
shlb
outsl
aad
pop
push
mov
xchg
out
rorl
cwtl
lds
jecxz
outsb
cmpsb
mov
ss
adc
nop
fs
rolb
jp
enter
jl
xor
mov
xor
sti
fisubl
dec
loop
mov
adc
repnz
sbb
call
fsubl
xor
and
pop
lea
cld
shrb
adc
das
cltd
inc
and
nop
or
lcall
ror
xchg
jne
fwait
pop
mov
fsubl
in
pop
jg
fs
pop
fidivrs
and
fnstenv
push
xchg
xor
and
jnp
and
dec
pop
jae
shlb
jno
sbb
mov
xchg
mov
repnz
ficoms
scas
push
cmp
push
inc
aaa
dec
or
aam
in
rcl
dec
sub
dec
xchg
inc
mov
jg
cltd
dec
sbb
pop
outsb
loopne
push
imul
insb
xor
push
dec
fstps
popa
cmpsl
mov
loopne
or
notb
pushf
jnp
rol
push
addr16
jb
rep
fildl
out
fistl
jns
adc
cmp
cs
nop
sub
mov
jle
fwait
xchg
pop
mov
cltd
pop
das
inc
or
outsl
push
ja
outsb
sbb
outsl
ja
inc
cmp
or
mov
adc
jne
xorl
cmp
push
int
cmp
pavgb
and
aas
in
push
imul
sbb
dec
push
imul
mov
popa
sub
jne
push
xchg
pusha
xor
repnz
inc
cli
jb
pusha
mov
xchg
lcall
inc
mov
sbb
mov
insb
fdivs
inc
inc
mov
popa
rorl
imul
dec
out
decb
inc
lods
add
cwtl
dec
leave
movsb
leave
mov
das
pushf
or
mov
cltd
inc
pop
sbb
lods
movsl
and
adc
cmp
daa
ret
mov
sub
mov
cmp
jmp
jnp
sti
pop
fadd
xchg
push
xor
clc
sbb
sti
cmpsb
outsb
and
ja
cmp
push
scas
imul
cmp
das
pop
jg
cmp
test
xlat
xchg
fwait
pop
xor
int
sub
fcmovb
dec
dec
fiaddl
mov
xor
jge
mov
pop
cmp
dec
pop
mov
rol
or
inc
adc
fnstsw
into
inc
pop
aam
jo
cmp
movsl
xor
pop
xor
adc
ret
clc
jmp
ljmp
mov
test
mov
lret
jle
cwtl
imul
jae
cmpsb
adc
mov
popf
push
or
loope
hlt
push
dec
cmpsl
xchg
push
mov
outsl
add
mov
push
xor
push
pop
fbstp
jne
xor
leave
mov
push
jp
adc
adc
mov
inc
rcrb
inc
dec
clc
inc
insb
cltd
add
scas
jo
shll
or
pop
cs
leave
setg
mov
dec
cld
dec
in
ljmp
adc
jno
daa
mov
sub
pop
and
push
sbb
loope
push
ja
test
test
clc
adc
mov
daa
add
je
xor
xchg
lea
sub
pop
or
sub
lods
sbbb
sbb
rorl
daa
movsb
mov
jae
cli
pop
fnstenv
ss
inc
mov
jno
cltd
push
notl
nop
mov
imul
jmp
inc
jl
xchg
fsubrs
imul
inc
in
xlat
test
cmp
xor
and
xchg
push
xchg
mov
pop
call
movsb
jnp
add
pop
psubw
cmpsl
dec
push
das
sbb
or
rorl
aas
xor
cli
cmc
addb
pop
push
cmpb
or
sahf
mov
js
adc
clc
inc
or
movsb
pop
popa
pop
shl
mov
cmp
cmp
lea
ficoms
fldcw
fidivl
dec
lods
add
jge
nop
rol
lea
fisubl
and
push
push
pop
ja
aad
ja
xchg
and
cltd
fwait
xlat
mov
es
add
iret
pop
pop
inc
fsubrl
sarl
les
inc
repnz
add
xchg
ret
rorl
daa
stc
movsb
not
dec
jno
inc
ror
int
ds
pop
cld
mov
pushf
loopne
scas
repnz
stc
inc
fstps
cmpsb
ja
fidivrl
fstpl
mov
test
lcall
mov
push
out
sub
shr
mov
sub
or
std
cmp
dec
adc
jns
xchg
pop
rcll
cmp
pop
dec
mov
mov
out
mov
adc
fsts
addr16
mov
sub
jmp
aaa
pop
subl
inc
inc
pushf
fwait
mov
fcmovb
ljmp
mov
add
fstpl
mov
in
into
lcall
cmp
xchg
xchg
jne
mov
icebp
adc
mov
into
sub
sbb
fsubrs
hlt
in
int3
adc
jmp
pop
and
cs
add
incl
pop
push
mov
out
jo
mov
pushf
dec
jle
pusha
lahf
mov
cmp
pop
shlb
mov
cld
test
insl
out
fwait
mov
push
adc
fadd
scas
ret
fldcw
movsb
idivl
imul
jp
pop
cmpsb
aad
jle
mov
leave
inc
mov
jae
test
or
cmp
jo
nop
es
popf
rolb
subb
xchg
add
dec
out
mov
stos
mov
jnp
sbb
loopne
stos
mov
subl
loopne
mov
jp
jb
rcrl
jns
fisttpll
loop
insl
fsubs
cmp
mov
cmc
out
lcall
mov
scas
ds
cmc
leave
inc
aad
inc
sahf
inc
imull
lods
mov
sub
fwait
pop
pop
bound
or
outsl
test
outsb
popa
je
cmpsl
sbb
out
jmp
sub
jnp
mov
in
inc
mov
out
sub
sahf
push
dec
iret
arpl
push
ret
loop
mov
int3
mov
repz
adc
pop
int3
test
mov
add
sub
push
mov
inc
mov
rolb
pop
mov
in
dec
cmp
inc
and
lret
sub
cmp
jns
fildll
mov
daa
dec
jp
mov
std
cmc
xor
nop
xchg
xor
sbb
shlb
fs
mov
rcr
cld
cmp
enter
xor
mov
xor
cld
push
jmp
mov
or
adc
adc
push
inc
mov
adc
pop
ret
outsb
sub
pop
call
inc
js
inc
call
dec
lea
mov
movsb
leave
xor
push
cld
sahf
cltd
insl
push
cmp
jmp
jbe
push
in
xchg
sub
ret
or
js
mov
lods
out
adc
cs
pop
sub
popl
mov
inc
pop
sti
jle
xor
das
inc
dec
jecxz
rolb
add
inc
stos
addr16
inc
repnz
sub
addr16
inc
mov
loop
cmpsb
sahf
jle
in
scas
push
aaa
push
xchg
cmp
ficoms
ljmp
xchg
gs
insl
les
sbb
dec
out
repz
push
lods
daa
dec
mov
icebp
mov
pop
mov
mov
cltd
and
aam
mov
invd
in
or
dec
addr16
mov
inc
stos
or
loop
rcrb
and
sub
aad
push
call
cmc
fsubrs
pop
add
inc
pushf
sarl
xor
rcr
jo
cld
mov
aad
daa
scas
loop
pushf
xorb
inc
xor
fcoml
test
jp
aam
sub
sub
icebp
test
jp
sub
and
int
nop
mov
fidivrs
adc
loope
dec
shll
out
stc
cld
fistl
fbld
data16
or
pop
inc
cmpsl
leave
sbbb
stos
fiaddl
div
mov
push
sub
bound
ret
push
data16
sbb
sbb
mov
xchg
fmuls
sahf
data16
xor
adc
imul
into
fisttpl
inc
cmp
pop
lret
fisubrs
xor
lods
insb
andb
cmp
imul
dec
aam
in
sahf
in
cli
jecxz
xchg
in
movsb
inc
xchg
inc
outsb
sbbl
jb
jne
cmp
sub
dec
in
or
inc
int3
jp
das
jae
or
add
pop
xor
mov
test
int3
bound
imul
cmp
shll
mov
sahf
mov
jmp
dec
mov
xchg
nop
xchg
add
cbtw
stos
xchg
dec
rcrb
stos
xchg
lret
pop
mov
js
mov
idivl
lea
imul
les
xor
notl
movsb
rcr
mov
jb
inc
cltd
mov
xor
jo
mov
sub
sarb
sbb
adc
xchg
das
hlt
inc
lret
add
cmp
dec
sub
in
push
fdivr
hlt
popa
xchg
sub
les
dec
xchg
test
sbb
mov
jmp
out
pusha
rolb
inc
mov
out
dec
mov
jl
cs
jne
ds
fdivp
jl
jecxz
mov
adc
jno
push
aam
incb
sar
or
push
mov
stc
call
ret
xor
mov
sahf
pop
pop
xor
decl
stc
adc
push
add
jecxz
jno
jae
add
in
or
mov
mov
adc
mov
push
jecxz
fimuls
xchg
jge
data16
mov
mov
mov
push
and
fnsave
fmulp
mov
ret
lahf
pop
mov
std
push
lcall
icebp
mov
sbb
gs
xor
inc
xchg
push
test
js
mov
jmp
inc
sbb
lret
push
or
mov
ror
push
rcrl
jns
inc
lea
mov
in
cmpsb
cmp
xchg
icebp
pop
xchg
adc
jg
sti
push
and
imul
xchg
adc
lods
cld
mov
adc
pop
jp
mov
jle
push
cmc
mov
dec
es
inc
sbb
mov
inc
imul
inc
mov
shll
imul
imul
push
ret
enter
icebp
mov
sbb
lods
pop
insl
dec
dec
and
ljmp
out
sarb
cmpsb
dec
popa
outsb
push
fadd
sbb
jp
xchg
mov
aaa
and
scas
rcr
adc
into
sarl
outsb
or
or
or
mov
xor
movb
dec
and
and
mov
lret
mov
ret
or
or
jge
mov
pop
cwtl
loop
push
jo
add
rorl
mov
xor
or
add
nop
push
je
jns
fimull
mov
mov
jo
aad
add
cli
loope
mov
lea
pop
pop
push
frstor
sbb
push
imul
xchg
xchg
mov
jb
xorb
sub
imul
lahf
daa
cmp
push
lods
sub
sbb
mov
daa
leave
es
fstp
mov
popa
outsl
cmc
aad
fstp
xchg
loopne
push
cmpsb
sub
lods
ljmp
fisubrs
rcrl
je
lea
jbe
cmp
mov
movsl
ficompl
mov
ss
inc
adc
mov
jle
jno
mov
mov
imul
and
pushf
cmp
pop
aaa
xor
cmpsb
or
mov
mov
and
sahf
jp
xchg
mov
jge
jle
mov
pop
adc
or
fstl
push
outsb
add
imul
rcl
pop
pusha
push
push
push
sahf
test
or
dec
lahf
gs
pop
roll
jl
or
push
mov
pop
dec
fucomip
dec
sub
xor
int3
repz
cs
cvtdq2ps
mov
add
mov
mov
cmpsb
xchg
data16
mov
aaa
lahf
sub
sub
pusha
pop
les
stc
leave
mov
xlat
bound
repz
sbb
test
adc
mov
sbb
loopne
mov
lret
andb
adc
xor
sbb
or
inc
pand
in
ds
mov
lcall
pop
xchg
mov
or
inc
push
popa
insl
cmpsb
cltd
xchg
cmpl
sub
adc
and
xchg
clc
xor
jnp
jo
pop
inc
stos
pop
xchg
pusha
inc
bswap
push
cmp
lock
imul
xchg
mov
rcl
xchg
rorl
mov
and
into
orl
cmpsb
xchg
adc
mov
jmp
dec
jle
xor
shll
mov
sub
repnz
push
add
cmp
fdivl
fidivs
inc
sbb
pop
and
xchg
pop
les
sbb
repz
push
and
lock
lcall
inc
jo
rcrb
out
call
loope
imul
mov
xor
pop
pop
mov
mov
cs
xlat
iret
cmp
fstl
push
cli
leave
rorl
mov
fmulp
cmp
lods
xchg
mov
adc
mov
and
jl
inc
cli
pushf
lea
bound
lret
out
mov
sbb
leave
jns
rorb
pop
dec
push
out
flds
dec
sub
jno
gs
xchg
aam
lahf
xchg
and
std
and
fwait
xor
cli
shlb
cmc
adc
sub
push
xor
repz
and
mov
xchg
add
std
xchg
lods
mov
sahf
stos
pop
mov
ret
iret
fdecstp
mov
and
fidivrs
scas
out
cmp
enter
out
into
or
inc
iret
aam
xchg
sti
shlb
mov
cli
lea
out
je
push
daa
jnp
cvttps2pi
inc
or
mov
cmp
mov
push
aaa
adc
out
sbb
into
mov
aam
add
ret
push
scas
gs
sbb
jae
ljmp
mov
pop
flds
inc
loope
ljmp
dec
mov
shll
dec
jno
xor
xchg
scas
imul
mov
jo
jle
inc
leave
lods
test
inc
movsb
loope
ficoms
xorl
ds
icebp
xlat
ss
cltd
jne
data16
aas
push
test
shll
jno
mov
outsb
loop
sbb
push
insl
loop
cmp
jg
bound
pop
pop
mov
sub
loop
shl
cmp
and
pop
sub
mov
jae
fsubl
or
adc
aam
loope
ss
sahf
inc
jb
bound
rcrl
je
pusha
es
cmp
mov
sbb
sbb
mov
pop
dec
sbb
sbb
xor
dec
and
add
cmp
les
cmp
subb
imul
cmp
fmull
daa
aam
shr
sbb
dec
addr16
mov
fsubp
cmpsb
mov
jne
mov
xchg
mov
lahf
mov
call
pusha
js
lock
mov
push
jecxz
aad
int3
jle
add
sahf
test
pushf
iret
out
sahf
notb
add
lea
inc
gs
or
xchg
mov
mov
scas
jmp
out
hlt
inc
fwait
cs
inc
dec
xor
test
mov
and
xchg
cmc
and
arpl
enter
aad
jp
ljmp
bswap
dec
ja
pop
dec
lret
scas
jle
mov
test
pop
lea
pop
inc
unpcklps
sbb
stos
cld
stos
cmp
enter
dec
add
mov
ljmp
pushl
fsubl
inc
mov
dec
mov
sub
mov
mov
sub
adc
jno
jne
sub
test
shll
inc
dec
dec
movsl
xchg
andl
mov
mov
lret
je
lahf
push
fwait
inc
cwtl
test
jg
xor
cld
cmp
das
mov
adc
or
push
jle
mov
or
call
and
xchg
sub
sahf
bound
jnp
jp
push
mov
sbb
je
testl
xor
mov
or
outsl
ja
lods
adc
sbb
xlat
push
jb
sbb
imul
add
push
mov
adc
lods
mov
fisubrl
dec
test
bnd
mov
push
push
ret
xor
xor
push
cld
fcomp
mov
outsl
sub
adc
int
jg
out
pusha
adc
sub
decl
fisttpll
addr16
cltd
std
fdivl
push
mov
lahf
add
loop
sti
outsl
mov
pop
xor
hlt
sub
and
push
out
sub
mov
xchg
push
orb
shll
cmc
push
test
sub
dec
and
aas
fdivs
sbb
lods
insl
sbb
mov
mov
addb
pusha
pop
mov
scas
push
movsb
pop
lret
jne
cmpsl
xchg
repz
and
jns
ljmp
int
mov
rol
push
adc
pop
jl
push
cmpsb
mov
leave
pop
mov
and
mov
lods
out
cli
nopl
js
mov
inc
ret
sbbl
insl
daa
mov
push
nop
or
pop
and
lea
push
push
pop
jae
out
sbb
cmp
sahf
loopne
gs
test
jne
add
outsl
xor
iret
jmp
adc
xchg
test
aas
mov
ljmp
push
sbb
ss
push
mov
inc
xchg
cmp
out
push
add
hlt
sti
xlat
ljmp
imul
stos
andb
mov
inc
sahf
jg
test
lods
jb
aam
push
pop
cmp
inc
pusha
lock
mov
mov
cmc
int
inc
aad
mov
popf
push
loopne
lcall
sub
cmp
push
das
bound
pop
setg
cmp
xor
xchg
jg
mov
pop
inc
je
test
xchg
add
cmp
or
dec
rcrl
mov
mov
mov
mov
cmp
push
popf
ret
xor
jno
iret
gs
adc
hlt
mov
push
push
cltd
or
les
sbb
push
sub
push
push
sbbb
test
in
cmp
mov
or
es
xchg
outsl
mov
sub
add
js
xchg
mov
adc
lods
add
cwtl
jmp
inc
and
addb
fimuls
in
jnp
loope
imul
pop
addr16
xchg
cmc
sub
rcll
xchg
xor
mov
fstpt
lcall
daa
pop
enter
stos
fs
ss
repnz
mov
inc
inc
data16
sbb
mov
movsl
mov
dec
push
call
mov
pusha
ss
call
cwtl
inc
inc
fsub
push
adc
in
cwtl
pushf
mov
or
fadds
notl
cmp
mov
repz
add
test
fbstp
mov
movsb
fisttps
adc
mov
pop
xchg
pop
mov
inc
aaa
fldl
ret
adc
mov
inc
xor
pop
mov
jmp
mov
xlat
sahf
popa
dec
push
ja
in
xor
add
push
push
leave
inc
or
popf
jae
int3
push
or
mov
arpl
shr
and
lea
cmpsb
dec
xchg
pushf
sub
push
add
jae
lahf
movsb
inc
jmp
mov
xchg
jo
ret
fcompl
adcl
xor
bound
mov
fbstp
sbb
jae
test
jnp
movsb
mov
popf
mov
mov
add
xchg
sbb
and
xchg
xchg
adc
fisttpll
or
pushf
xlat
mov
jl
cmp
cmp
adc
cmp
add
push
test
mov
jne
inc
sbb
and
lahf
arpl
jno
xchg
adc
or
pop
inc
add
movsb
out
pop
cmp
and
les
lret
popf
push
into
std
jbe
inc
out
mov
data16
sahf
pop
ret
xor
enter
out
or
pushf
add
jl
sub
add
xor
scas
ret
xor
inc
jns
xlat
mov
roll
pop
inc
not
pop
mov
mov
nop
push
fcoml
mov
sub
mov
mov
outsb
jle
imul
pop
lret
lea
popa
mov
adc
fimuls
push
rol
sbb
idivb
test
int3
xchg
and
and
or
imul
repz
pop
bound
out
fidivrs
ficomps
les
imul
out
mov
pop
lret
test
dec
ret
jge
andl
stos
cltd
pop
and
cltd
sub
fiadds
test
pop
in
push
jle
jmp
in
push
lods
cmp
cmp
nop
or
xor
sbb
inc
lret
xchg
push
mov
adc
iret
or
pop
xor
add
in
aam
sub
loope
iret
shll
mov
addr16
cmp
scas
lret
and
in
cmp
mov
mov
gs
imul
jb
cmp
mov
out
mov
jmp
xchg
cmpsl
pop
mov
stos
fs
cmp
addr16
mov
cmp
into
dec
mov
push
mov
call
inc
xchg
mov
test
push
leave
js
and
jmp
pop
jmp
clc
loope
adc
out
les
cs
leave
lock
aad
ljmp
push
sbb
cmc
push
dec
fcmovnbe
mov
dec
xor
mov
fcmove
inc
push
cmp
fsubp
fmul
fnstcw
mov
popa
jp
movsl
pop
add
gs
xchg
jge
arpl
inc
jmp
out
add
test
repz
in
sbb
xchg
inc
jmp
lods
sbb
mov
adc
mov
and
and
jnp
fists
jne
jbe
ror
sbb
sahf
jp
jge
gs
jecxz
mov
mov
push
mov
cli
or
pop
sbb
dec
ds
in
push
mov
jb
add
popa
stc
call
mov
and
popa
xchg
add
into
movsl
mov
out
jo
mov
negb
pop
movsl
xchg
out
shlb
dec
dec
lahf
add
stc
icebp
lea
ss
js
mov
xchg
inc
lahf
rol
cmp
pop
xor
inc
and
mov
fnstenv
adc
out
pop
stos
lret
adc
mov
and
and
ret
imul
inc
popa
mov
enter
fists
adc
popf
iret
push
stos
sub
repnz
aaa
out
fwait
mov
aad
fbld
mov
push
ja
sbb
sbb
les
mov
sti
setge
addl
imul
dec
das
push
mov
mov
push
xorl
lret
pushf
pop
out
lcall
xchg
pop
adc
inc
sub
mul
sub
cmp
es
inc
mov
hlt
loopne
outsb
xchg
jnp
jle
and
adc
adc
dec
lahf
loop
and
int3
incl
xor
and
sub
cld
fbld
and
fisubs
sub
fnstcw
jbe
decb
add
adc
cld
rcl
pusha
movsl
cmp
cmpsl
and
adcb
xor
rcrb
cltd
mov
fisttpl
js
xchg
gs
mov
push
adcl
je
dec
insl
mov
lods
ficoms
loope
push
rclb
xchg
mov
sub
pushf
scas
push
xor
mov
divl
lcall
data16
sbb
clc
cmp
dec
jg
addr16
stos
fistps
pop
xchg
xchg
cltd
cmp
lock
dec
jp
dec
dec
inc
mov
data16
daa
outsl
cwtl
stc
jmp
cmp
aas
test
pushf
in
sub
dec
xor
aad
jl
inc
aas
andl
insl
nop
sbb
mov
push
push
mov
enter
sub
sub
and
xchg
xlat
imul
jno
mov
mov
xchg
push
lahf
stos
mov
mov
and
push
mov
or
in
xchg
pop
cld
jmp
inc
and
or
mov
dec
ljmp
xor
mov
in
out
push
mov
lret
and
jbe
mov
fs
ljmp
or
movsl
popa
xchg
cld
jnp
mov
testb
fisttps
lods
dec
repz
sbb
xchg
repnz
mov
add
lods
iret
mov
inc
add
das
lahf
cwtl
imul
fldt
movsl
out
push
cltd
add
inc
pop
shrb
cltd
in
aas
stc
jp
dec
xchg
cli
inc
movsl
inc
push
xor
popa
xchg
mov
shll
mov
out
insl
in
adc
inc
inc
cmp
les
dec
and
dec
jg
pop
push
repnz
cmpb
aam
sbb
vpmaxsw
push
mov
shrl
mov
int3
sbb
arpl
out
pop
xor
test
pop
push
popa
stc
push
movsb
push
gs
xor
or
fsubl
repnz
pop
js
lret
jb
cmp
movsl
jbe
cmc
test
ljmp
inc
adc
les
test
xchg
adcl
pop
jnp
nop
mov
imul
cltd
xorb
jge
mov
adc
cmp
div
sbb
in
xor
push
call
int
fcoms
fists
and
sub
and
mov
mov
xchg
repnz
jnp
jae
xor
jae
jg
add
jae
nop
aaa
inc
push
push
xchg
sbb
sub
daa
inc
repnz
jo
jl
push
std
cmp
nop
leave
adc
add
fdiv
adc
int3
xchg
dec
mov
lods
mov
mov
mov
lea
call
add
popw
iret
xlat
add
pop
cmpsb
mov
faddl
int
cs
xchg
lods
add
repz
in
xchg
fildl
dec
sub
mov
lahf
xchg
mov
push
cltd
hlt
cltd
test
dec
mov
add
or
jns
ds
mov
movsb
jl
push
adc
cltd
and
push
dec
fildll
mov
sub
inc
sbb
int3
jo
mov
and
arpl
lahf
fistps
xchg
push
mov
xchg
push
mov
outsw
lret
or
jnp
mov
sahf
cmp
fmull
sbb
lret
cli
clc
jo
imul
adc
fwait
inc
jne
or
push
push
arpl
repnz
faddp
pop
ljmp
jno
and
xor
loop
mov
outsl
ret
inc
mov
push
and
xchg
xchg
jbe
and
test
adc
add
leave
outsl
setl
inc
xchg
sbb
aas
xor
or
dec
inc
outsl
sbb
and
sub
add
call
decb
test
out
xchg
xor
jno
and
stos
cmp
nop
sub
dec
rclb
push
xchg
rcll
jmp
dec
mov
cmc
bound
pop
dec
sub
sti
dec
add
push
outsl
fistl
movsb
mov
aad
cmove
pop
jle
jle
test
fistl
xor
gs
dec
je
jns
or
out
jns
pop
jge
xorl
add
stc
jmp
js
sbb
sbbb
cmpsb
inc
add
pushf
cmp
movsl
rcl
lret
push
test
xor
imul
outsl
out
push
xbegin
cwtl
sbb
nop
xor
gs
cmp
arpl
lret
or
mov
push
add
add
jnp
fstpt
lock
xchg
xchg
push
jb
pop
test
jae
push
iret
enter
pop
subb
js
cmp
stos
jge
cmc
dec
jae
idivb
sarl
sbb
xor
es
inc
push
xor
pusha
and
xchg
dec
cs
notl
loop
adc
sbb
and
filds
sub
frstor
das
inc
mov
popf
push
jp
inc
loope
mov
cmpsl
shlb
sub
mov
pop
loop
dec
popf
mov
cmc
dec
orl
push
mov
dec
mov
jmp
testb
push
jo
lods
cmpsb
cmp
xchg
in
xchg
out
std
fnstenv
pusha
push
in
mov
jmp
inc
ret
rcl
repz
lea
sub
mov
push
inc
mov
loopne
adc
adc
std
das
loopne
and
cmpsl
sti
clc
jbe
ss
ja
sbb
loopne
push
inc
loopne
stos
in
mov
lret
bound
repz
dec
dec
add
ret
xor
xor
nop
pop
test
sbb
lahf
ljmp
fistl
inc
testl
lock
pushf
outsb
orl
lods
add
sbb
sbb
popa
es
push
idiv
lcall
pop
fidivrs
xchg
pmaxsw
or
xlat
shrl
mov
xchg
sahf
fcoms
hlt
imul
sub
mov
mov
jle
ficoml
out
rclb
sub
call
mov
xchg
loope
cwtl
lds
add
or
push
and
add
popa
pushf
inc
scas
fcoms
loope
lds
mov
rol
push
iret
mov
mov
jae
bound
jbe
in
sbbl
daa
push
mov
test
out
cmp
jnp
dec
add
test
inc
and
push
pop
xchg
out
or
daa
popa
sub
je
rol
and
cmp
cmp
push
push
rcll
mov
mov
gs
subl
sub
std
repnz
and
mov
pop
mov
cmp
in
xor
sbb
cmc
inc
sbb
fisubs
jge
sbb
add
ljmp
adc
pop
iret
mov
push
mov
xchg
out
fstpl
testb
cli
mov
pop
adc
sub
fdivrl
cvttps2pi
sub
ret
and
lock
push
lret
or
fstpl
xor
popa
jns
and
pop
sbb
cmp
in
out
or
push
int3
xchg
xor
lcall
push
je
repz
jecxz
mov
mov
icebp
mov
imul
push
inc
test
mov
add
fwait
pop
shll
js
cmpb
or
cmp
lret
out
sub
xor
dec
mov
push
mov
addr16
xor
push
dec
mov
push
cmp
mov
adc
push
dec
xchg
jecxz
into
sarb
jnp
mov
cli
xlat
lret
dec
fcomps
lahf
cli
testl
mov
les
xchg
cmp
stos
sbb
jecxz
pop
lcall
mov
jb
test
in
xor
fisttpl
push
pop
addr16
sbb
or
xor
cltd
js
das
ret
insl
lods
faddp
mov
shll
std
mov
mov
pop
shll
push
aam
icebp
and
fistpll
adc
pop
cmp
mov
dec
cmp
test
je
in
and
pop
stos
xor
call
jne
aad
dec
pop
in
insl
testb
fcomps
xchg
xor
pop
pop
icebp
mov
xchg
out
iret
inc
cmp
xor
test
shll
hlt
sbb
jmp
clc
or
inc
or
push
mov
test
shlb
dec
pop
das
add
pop
inc
mov
and
push
or
push
cmp
test
cs
je
sub
mov
outsl
jno
cld
push
push
lret
jl
xor
mov
xlat
cmp
pop
mov
pop
dec
add
pop
mov
dec
mov
pop
dec
xchg
test
adc
cmp
pop
addr16
mov
in
aam
xchg
dec
xchg
shrb
sub
push
pop
inc
daa
xor
or
sti
dec
ljmp
movsb
xor
dec
adc
inc
shrl
dec
shrl
bnd
inc
imull
dec
dec
sub
lahf
sti
imul
mov
shl
xchg
hlt
mov
pop
mov
cmp
jmp
cmp
test
mov
dec
mov
out
or
rclb
pop
sub
inc
mov
and
in
cwtl
popa
lret
or
adc
cmpsl
lods
unpcklps
je
push
pop
test
pop
cmp
in
hlt
ljmp
ficompl
insl
pushf
ds
addr16
dec
pop
mov
dec
in
or
mov
xorb
stos
test
jp
jnp
mov
pushf
mov
adc
inc
adc
adc
lret
loopne
je
fsubrl
lods
add
mov
jmp
mov
mov
push
shll
pop
cmp
std
jmp
shrb
dec
jae
mov
sbb
jmp
jmp
jne
loopne
mov
pop
xchg
lods
test
jnp
loope
out
add
or
and
out
sarb
adc
fbstp
add
push
orb
in
je
sbb
pusha
xorl
out
sub
push
in
pop
xor
cmpsb
iret
push
push
int
dec
jae
into
inc
les
mov
pop
pop
dec
arpl
adc
sti
lret
jp
jg
and
inc
jl
imul
xchg
dec
hlt
mov
icebp
push
xchg
test
arpl
hlt
insl
or
jne
fiaddl
xchg
daa
aam
pop
std
imul
dec
ret
xor
outsl
int3
daa
int
cltd
adc
je
popa
std
xchg
mov
adc
sahf
shll
daa
mov
or
cmp
in
dec
pop
and
cltd
or
fisubl
movsl
js
xchg
dec
push
jnp
insb
adcl
sbb
jge
lahf
ss
sub
sub
repz
popa
scas
in
jle
mov
push
shlb
xor
loope
ss
leave
and
jp
xchg
push
stos
testb
dec
mov
rcrb
add
push
inc
push
add
cmpsb
negb
scas
cmp
in
daa
mov
sbb
stc
js
orl
scas
mov
jne
inc
popa
movsl
lcall
inc
int
pushf
outsl
jp
lahf
inc
mov
mov
xchg
addr16
in
push
sub
adc
aad
or
mov
hlt
in
jne
mov
cmp
fnsave
adc
outsl
jo
popf
sbb
add
xchg
mov
mov
test
ds
loop
cmp
inc
and
push
inc
fstp
pop
andl
pop
sbb
cmpsb
push
jnp
outsl
push
xchg
ret
xchg
xorb
xorl
mov
mov
xchg
aam
xlat
push
hlt
push
sbb
cmp
outsb
dec
sbb
mov
pusha
mov
in
cwtl
lea
inc
dec
cs
loopne
lock
push
shrb
xchg
inc
arpl
fcomps
addl
add
jnp
inc
movsb
mov
test
mov
mov
push
in
sbb
add
push
mov
ret
add
xchg
das
dec
inc
lret
cli
xchg
daa
dec
stos
dec
lret
stos
insb
mov
out
sti
fnstcw
or
mov
mov
stos
push
mov
push
or
lret
ljmp
mov
leave
and
cs
pusha
lock
xchg
add
add
mulps
or
inc
in
dec
xchg
lret
push
dec
gs
jo
ret
push
fwait
and
xchg
mov
paddw
loopne
xchg
xor
out
jecxz
or
sarl
stos
sbb
leave
sbb
lahf
inc
jge
aaa
or
add
inc
adc
or
or
andb
push
or
stos
push
mov
scas
push
ja
sbb
daa
push
xchg
adc
into
outsl
sub
xchg
outsb
push
dec
jno
ret
mov
les
jns
push
mov
out
add
jge
jge
aad
stos
lock
jecxz
rcl
movsl
xchg
pop
fdivrl
mov
adc
shrb
mov
stos
dec
lahf
stos
push
cs
xor
push
test
call
push
scas
imul
das
jbe
outsl
add
mov
cld
out
xchg
sub
or
and
pop
mov
dec
cmp
into
ds
inc
jb
mov
xchg
fs
sbb
jne
or
enter
clc
dec
ret
push
pop
push
jo
data16
stos
push
mov
xchg
cmp
xchg
movsl
pop
adc
ds
or
xchg
inc
cld
push
in
jge
aam
iret
testb
in
push
mov
je
dec
outsb
lret
ret
mov
cs
xchg
xor
jmp
faddl
adc
negl
lcall
outsl
enter
cli
int
imull
push
loop
fisubl
dec
adc
push
xorl
mov
test
push
pop
arpl
xchg
aad
sbb
es
imul
cld
imul
jne
mov
lea
cmp
fdivl
jne
jle
push
rcll
lea
push
fimuls
sbb
sbb
rcll
pop
shrl
push
push
pop
add
dec
clc
and
mov
inc
in
arpl
test
hlt
add
mov
addr16
pop
insl
or
jae
pop
sub
xor
push
push
iret
or
mov
sahf
sub
pusha
jle
inc
popf
push
add
repz
lods
aas
in
imul
std
arpl
mov
nop
out
cli
fs
or
in
fisttpll
outsb
repnz
push
mov
inc
fbld
sub
shll
jg
xchg
push
and
outsl
dec
push
xchg
fs
sbb
inc
push
or
dec
xchg
mov
mov
ret
cld
out
mov
sbb
aad
fs
iret
ss
fistps
mov
pop
lret
push
xlat
sbb
lahf
add
xor
mov
mov
pop
testl
outsl
nop
mov
mov
adc
out
xchg
enter
pusha
sbb
lock
lret
xorb
pop
push
sbb
lods
mov
rcrb
ret
mov
sub
imul
or
push
cli
add
je
jo
mov
cmp
inc
xchg
cmpsb
cwtl
jb
push
loop
xchg
or
orb
push
cmp
sahf
jge
cmp
test
pop
inc
into
loop
adc
cmpsl
inc
sub
testb
mov
imul
iret
les
aaa
movsb
jmp
fcmovnu
mov
out
jnp
aaa
mov
and
sub
sub
cltd
xchg
jecxz
lock
stc
inc
mov
cli
adc
mov
pop
mov
jp
push
and
dec
stos
repz
enter
aam
mov
loope
lods
and
iret
mov
xor
mov
mov
mov
inc
push
xor
or
adc
pop
fdivrl
pop
pop
cmc
mov
sti
jno
jb
and
out
cmpsl
add
insb
cmc
mov
sub
pop
cltd
cmp
mov
mov
popf
pop
les
aad
in
push
pop
mov
add
sbb
push
stc
rolb
inc
or
sub
push
mov
push
push
divb
int3
xchg
cmp
aas
xor
push
add
test
dec
mov
movb
mov
sbb
sub
lahf
xchg
mov
push
mov
pop
push
cmp
jg
fmuls
subb
mov
pop
push
dec
movb
dec
cld
push
call
mov
pop
xor
dec
and
cmp
xchg
mov
fsts
push
inc
das
jg
ret
sarb
movsl
push
mov
mov
ret
test
jmp
adc
mov
ficoml
and
pop
xor
mov
adc
test
insl
mov
mov
add
xor
xor
fldl
xchg
dec
push
sbb
in
jae
pop
in
jg
rcl
cmpsb
sbb
aas
inc
shrb
ss
popf
popa
add
xor
adc
or
and
jmp
data16
mov
mov
ds
push
pop
lods
test
cs
sbb
movsl
jecxz
mov
sub
push
lahf
into
sti
xchg
add
mov
icebp
cmp
inc
in
shl
shr
cmp
mov
addr16
sub
adc
jmp
scas
sti
sti
into
imul
shr
xchg
test
xor
xchg
sbb
lds
or
shlb
xchg
hlt
jecxz
inc
std
ret
fists
sarl
pop
aam
add
lods
push
and
gs
inc
pop
sub
or
dec
and
sbb
cmpsl
push
inc
arpl
out
mov
adc
jo
add
mov
inc
jp
fcomps
je
jecxz
push
leave
sub
call
mov
or
mov
mov
shrl
lods
int
mov
rolb
shr
push
sahf
rclb
sbb
jae
mov
or
cmpsb
js
cmp
daa
sti
jp
fstpt
jle
rep
pop
das
int
shlb
sarb
ds
sub
test
push
push
add
xor
mov
dec
sbb
out
mov
sub
icebp
and
or
jae
push
jo
mov
fwait
sub
and
into
xor
xchg
jb
arpl
pop
fisubl
imul
xor
addl
and
imul
lret
mov
scas
mov
fidivs
dec
jl
and
dec
stc
dec
std
les
data16
jle
iret
cmp
sbb
push
mov
leave
jnp
cwtl
test
sbb
add
scas
sbb
loope
repz
add
push
dec
arpl
stc
fildl
roll
cld
cmp
dec
jbe
imul
dec
ret
cli
inc
jne
sbb
adcl
cmc
daa
jp
mov
loop
dec
enter
shll
inc
loopne
or
and
gs
xchg
fsubr
add
cmpsb
ds
jb
xchg
or
or
or
je
movsl
xchg
scas
xchg
push
roll
xor
jo
ret
mov
incb
push
int3
jmp
lret
push
cwtl
xor
or
pop
rcrl
mov
imul
lret
mov
jecxz
aaa
mov
hlt
or
cmp
cmpsb
jmp
outsb
inc
xchg
sahf
push
stc
push
arpl
fdivrs
mov
cmp
pop
jns
add
leave
ja
sub
adc
cli
xchg
arpl
aad
jnp
xchg
mov
mov
add
test
xchg
aam
std
out
dec
xchg
adc
dec
inc
mov
dec
jge
test
sbb
int3
ja
mov
enter
mov
push
iret
icebp
jecxz
nop
insb
dec
int
cmp
cmp
push
sbb
pushf
mov
and
or
in
roll
test
aas
es
pop
mov
cld
push
pop
or
xchg
inc
xor
int3
xor
aas
in
adc
or
push
arpl
pushf
addb
cmc
loope
add
test
fwait
js
int
out
enter
adc
sub
outsb
xchg
in
cmp
sbb
ljmp
push
and
into
mov
sub
lahf
ljmp
fdivrs
xchg
hlt
push
xor
sbb
insb
dec
scas
mov
jno
inc
push
mov
push
mov
cmp
imull
pop
nop
add
sub
cmp
leave
mov
add
sar
insl
mov
cmpsb
sub
int
inc
fldenv
call
push
cld
xchg
add
mov
mov
aas
add
insb
lds
xchg
mov
in
push
roll
test
cmpsb
dec
sbb
orb
or
jp
fisttpl
jle
or
xor
sarl
sbb
daa
xlat
mov
pop
xor
in
adc
dec
cmpsl
or
in
jl
sub
push
jne
xor
ss
or
or
jge
bound
sbb
pop
call
push
mov
mov
sub
mov
in
cs
ss
mov
scas
outsl
and
hlt
mov
jg
iret
add
into
sub
mov
jae
imul
adc
jns
inc
adc
xchg
movsb
nop
fwait
inc
add
mov
or
sar
xchg
nop
fldt
aam
jmp
inc
dec
sbb
pop
xor
in
push
ss
push
sbb
jp
jl
inc
lcall
fcmove
mov
xchg
mov
cwtl
mov
pusha
insl
ret
stos
xchg
lret
jnp
mov
jns
subb
mov
fcomps
addr16
outsb
popf
lods
cwtl
mov
inc
jecxz
push
cmp
xor
mov
mov
lds
fcompl
imul
nop
adc
mov
lods
and
adc
mov
movsb
shll
jle
inc
jno
and
insl
adc
dec
push
lahf
mov
lahf
mov
xor
sahf
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
test
cmp
xor
pop
jecxz
lods
push
das
aas
xchg
mov
mov
dec
inc
adc
sub
xchg
xchg
dec
lret
adc
les
cli
repnz
cmpsl
ret
push
sahf
movsl
sub
adc
push
jle
push
vcvtdq2ps
rclb
fidivl
movsb
jo
js
inc
push
jge
lcall
in
cmpsl
call
dec
mov
movsb
cmp
pop
fcoml
jg
dec
jle
imul
push
and
push
and
jae
mov
lods
movsl
jno
ja
mov
xor
fstl
jns
mov
push
pop
mov
cmc
xchg
xchg
hlt
xchg
push
das
mov
and
mov
or
jns
dec
mov
lods
mov
xor
cld
cmp
lcall
bndstx
xchg
cmp
cmp
pop
xchg
aad
pop
pop
sub
sarl
or
mov
dec
rcrb
loop
xor
cltd
cmp
cmp
xlat
into
sbb
shl
repz
jno
sbb
test
mov
sahf
js
rcrb
add
int
out
test
inc
roll
xor
cmp
in
mov
lock
cmc
mov
clc
add
jbe
add
arpl
mov
inc
lods
aam
nop
fisttpl
add
inc
xor
bound
sub
xchg
fbstp
and
rolb
stos
push
insb
inc
jge
mov
mov
std
inc
sbb
loope
dec
fistl
hlt
movsl
push
daa
mov
or
and
dec
jge
dec
pop
adc
add
jns
nop
adc
pop
fdivrl
push
jb
pop
stos
pop
movsb
icebp
imulb
fcomps
repnz
adc
xchg
xor
jnp
out
out
mov
sbbl
push
nop
cmpsl
pusha
lahf
in
and
or
les
outsl
in
stos
es
xchg
lods
jbe
mov
out
test
ljmp
cmp
dec
lret
mov
pusha
jns
cmp
fwait
add
sub
sbb
iret
jbe
adc
inc
dec
xchg
arpl
pop
lds
lahf
mov
jnp
mov
enter
lret
out
and
enter
fdivl
ficomps
dec
ror
sbb
xor
dec
cld
xlat
cmpsb
lea
push
fstl
jmp
cwtl
int3
dec
cmc
repnz
xchg
sub
ja
xchg
test
enter
cmp
inc
mov
jne
cmc
or
dec
dec
aas
popf
or
and
jge
mov
mov
bound
pop
cmp
pop
pop
fldt
hlt
sub
sti
stos
mov
icebp
push
leave
and
movsl
mov
xor
mov
roll
mov
jge
mov
push
test
mov
lods
jbe
push
sbb
push
cmp
test
push
adc
adc
mov
jb
int
inc
push
sarb
subl
enter
pop
sbb
pusha
mov
clc
xor
lds
mov
jns
insl
rcrl
push
shlb
push
sbb
lods
xchg
push
jnp
dec
cmp
xchg
xchg
jbe
addb
push
push
mov
ret
push
cwtl
data16
mov
imul
inc
mov
into
sahf
inc
xchg
sbb
pop
sbbl
inc
mov
cld
cmp
in
bound
xor
je
aaa
mov
add
dec
and
adc
outsl
ret
in
sbb
cld
das
mov
in
inc
loope
mov
xchg
in
addl
js
fwait
cmp
rolb
in
add
sub
lea
mov
mov
adc
insl
mov
call
inc
fidivl
inc
cwtl
nop
dec
stc
icebp
push
inc
je
inc
popf
xchg
xchg
pop
inc
lahf
clc
arpl
inc
aam
enter
dec
frstor
sti
test
xchg
aaa
pop
sbb
sbbl
jmp
ds
imul
and
xor
mov
or
imul
stos
in
in
or
cmc
jne
cld
sub
enter
jl
and
mov
fnstenv
loope
lds
aas
movsb
inc
movsl
je
xlat
jg
xchg
lret
xchg
outsb
jle
push
pop
into
jge
or
lea
sbb
lock
ljmp
push
imul
dec
in
add
mov
enter
xchg
pop
std
out
push
mov
mov
jecxz
mov
outsl
loop
dec
rcrl
nop
push
push
insb
add
in
dec
mov
cmpl
sbb
subb
mov
into
lods
push
mov
pop
sahf
addb
sub
mov
push
fwait
les
decb
mov
xlat
andb
into
test
fwait
pop
push
fwait
imul
das
fnstenv
outsl
and
mov
lds
inc
sahf
loop
test
cmpsb
aad
sbb
cmp
mov
shlb
add
push
mov
add
ud2
mov
enter
adc
test
add
cmp
roll
cmp
lods
sub
out
mov
aaa
adc
xor
adc
repz
push
or
mov
mov
fdivr
xorl
imul
test
jns
aaa
icebp
je
pushl
shll
addr16
pop
movsl
mov
or
and
sub
cmc
scas
mov
mov
cmp
in
push
gs
jp
inc
imul
dec
jle
loop
mov
jmp
mov
add
and
sbb
lea
data16
dec
mov
sti
sub
jmp
xor
and
sarl
ficompl
inc
ja
mov
out
lock
jnp
insl
xchg
dec
mov
imulb
aas
inc
push
icebp
in
aaa
scas
pop
out
jo
mov
stos
out
inc
push
sub
and
out
ds
subb
xchg
jmp
push
insl
daa
je
jmp
xor
inc
sbb
or
out
in
jae
in
fdivs
pop
cmp
mov
mov
mov
into
push
add
lods
pop
pop
mov
dec
pop
out
fistps
aam
movsb
popa
xchg
test
jp
cltd
mov
or
cli
jb
mov
lret
cmp
ss
jae
std
rcr
sub
pop
xchg
xor
hlt
ss
mov
sti
sub
in
std
aad
lret
inc
lods
cmc
xor
lahf
jle
int3
cmpsl
xchg
jo
testl
in
cmp
mov
lea
xchg
pop
push
xchg
pushf
aas
out
fmull
imul
cs
mov
pop
cmp
sahf
movsl
sbb
inc
mov
sarl
jbe
push
inc
mov
push
cld
loope
mov
sub
xor
pop
aaa
mov
int3
nop
iret
sbb
out
iret
mov
lods
xchg
loopne
jae
cs
pop
sbb
hlt
push
add
lea
divl
into
lahf
shll
xor
inc
or
push
js
fwait
or
pop
dec
add
int3
pop
cli
add
ret
jnp
add
inc
je
adcb
sub
dec
sbb
fnstcw
mov
pusha
test
test
mov
xchg
or
es
gs
jno
mov
test
inc
and
gs
cli
popf
je
out
xchg
mov
and
push
lahf
add
or
in
mov
push
cmpsb
ds
in
pop
int3
mov
sahf
push
cmc
mov
xor
push
in
arpl
sbb
test
stc
dec
sti
cmpsl
into
dec
rcl
popf
cmpsb
xlat
cmp
lods
cmc
stos
adc
lds
sub
inc
adc
nop
mov
inc
sbb
push
js
fcmovne
jnp
jns
or
or
movsb
xor
xchg
xor
add
sysenter
scas
xlat
movsb
push
inc
iret
clc
loop
sub
mov
adc
and
lret
fwait
or
int3
or
out
outsb
inc
int
jno
push
repnz
repnz
dec
js
xchg
hlt
test
sub
push
fiadds
xor
dec
stc
stos
mov
mov
mov
xor
sbb
gs
inc
mov
jp
mov
ret
arpl
or
push
sahf
lahf
in
rorl
dec
lock
ud0
aaa
aaa
roll
push
cmp
loop
jbe
pop
mov
test
sbb
stos
push
xchg
movsl
push
mov
jecxz
ret
sbb
cmp
aaa
shll
sbb
pop
pop
push
test
jmp
popf
test
mov
mov
add
or
xor
sti
je
out
or
call
iret
stos
out
scas
scas
push
push
in
insb
push
push
ja
cmpsb
mov
and
dec
add
nop
cmp
push
ret
jecxz
mov
mov
xor
shl
pop
pop
or
scas
inc
lea
arpl
cltd
mov
or
push
adc
lret
aas
addb
cmp
test
jae
dec
xchg
shrb
insb
and
mov
inc
fimull
loopne
mov
xor
push
movsb
jg
cmp
fldt
lds
and
lods
mov
popa
out
shlb
inc
push
jecxz
mov
or
ret
aad
in
lcall
cmp
inc
aam
jle
inc
or
push
pop
pop
mov
sbb
aaa
int
outsl
inc
in
lahf
popf
mov
add
adc
imul
inc
xchg
out
adc
push
and
pop
ror
imul
mov
gs
inc
bound
test
loopne
in
inc
int
mov
xchg
jl
imul
sbb
and
add
pop
enter
adc
push
mov
pop
call
in
sub
push
shrb
int3
in
add
jg
cmp
ds
adc
lret
dec
push
adc
xchg
and
inc
cmpsb
mov
arpl
add
imul
jle
icebp
push
mov
stos
or
xor
push
inc
mov
in
js
jae
sbb
xchg
push
sti
mov
rorb
adc
xchg
xchg
add
shlb
jnp
stc
push
leave
or
nop
push
cmp
xlat
xor
pop
pop
push
pop
xchg
lahf
bound
je
addr16
xor
test
pop
rcrb
repnz
lret
cwtl
cmpsl
pop
mov
les
ss
mov
cmc
xchg
mov
pop
lock
xor
sahf
mov
stos
jb
xchg
jmp
pusha
lea
pusha
mov
cltd
dec
mov
rol
pop
pop
mov
cmp
rorb
sub
aad
xor
fsub
xchg
pop
cmpsb
dec
adc
cmp
and
jo
push
inc
push
pop
dec
mov
xchg
mov
mov
cld
divl
pop
pusha
leave
cwtl
xor
ljmp
xchg
jns
hlt
insb
mov
call
lret
enter
and
and
sbb
push
cmpsl
adc
jle
js
push
test
adc
loope
jge
jbe
jnp
mov
mov
add
adc
std
test
stos
aad
je
sbb
lcall
cmp
bound
push
adc
xor
sbb
lods
dec
rcrl
inc
push
adc
xchg
fs
ja
jge
jecxz
in
in
in
pop
cmp
xchg
sbb
dec
cltd
jbe
xor
iret
mov
and
add
fdivrs
inc
or
daa
es
out
mov
aas
ret
pop
cmp
lea
fs
xor
pop
in
xchg
jo
mov
mov
push
pop
lock
aad
pop
add
je
dec
push
push
jmp
xor
fimuls
push
lcall
dec
mov
xor
enter
hlt
xchg
mov
cld
loope
sti
sub
and
pop
scas
sbb
popa
jp
jle
mov
outsb
aas
stos
lock
lret
mov
ffreep
xchg
aas
add
andl
out
cmpsb
sub
add
inc
hlt
popa
pushf
pop
imul
sub
repz
xchg
fs
pop
les
leave
push
std
pop
mov
lods
push
leave
shlb
adc
je
lcall
pop
and
mov
add
or
sub
xlat
out
lods
stos
mov
sbb
xchg
push
lahf
inc
shlb
aaa
in
cmp
stos
ljmp
mov
pop
enter
cmp
fistps
xor
sahf
push
add
add
add
pop
add
inc
xchg
cs
out
sub
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
or
jne
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
movsl
outsb
add
add
outsb
