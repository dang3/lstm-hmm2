sbb
add
mov
sbb
push
mov
inc
sbb
loop
add
mov
push
rcrl
mov
fwait
fwait
out
es
or
cli
mov
inc
push
addr16
mov
xor
push
insl
xor
stc
shrl
sbb
stos
and
and
mov
test
ss
add
imul
mov
sahf
into
popa
inc
and
pop
loope
popa
sbb
cmp
xchg
push
sub
inc
lods
and
shll
stos
in
outsl
and
xor
sub
or
addr16
mov
mov
cmp
cmp
push
jmp
shlb
jmp
sub
out
fs
nop
shll
and
xorb
mov
incb
cli
or
jge
outsl
xor
into
imulb
add
xchg
imul
or
jecxz
ss
push
test
ficompl
out
dec
push
jl
jb
int
in
icebp
scas
xchg
stc
push
pop
mov
inc
cmp
imul
imull
shll
out
outsl
ja
xchg
sti
gs
mov
and
xchg
out
or
cmp
lock
mov
sub
dec
stos
or
andl
push
xlat
sbb
shl
scas
roll
mov
cmp
xchg
xchg
or
mov
andb
fdivrl
cmpsb
jle
popa
jge
sub
sub
mov
sbb
test
push
dec
js
xor
mov
popf
in
mov
dec
mov
mov
mov
xchg
fidivrs
xchg
mov
inc
pop
cmpsb
scas
mov
ljmp
and
dec
jl
push
stos
repnz
inc
jg
and
pop
dec
xchg
mov
cld
mov
aaa
insb
cmp
or
scas
jl
popa
xchg
inc
gs
fsubrs
loope
cmc
aam
outsl
jecxz
and
sbb
mov
cs
push
movl
dec
inc
inc
aam
inc
mov
cltd
fistpll
cmp
cwtl
mov
repnz
xor
inc
xchg
test
les
hlt
out
leave
pop
out
sbb
inc
xchg
ret
sub
cmp
repz
out
mov
pushf
cmpb
ds
fisubrs
sbb
sbb
mov
filds
push
out
or
ss
scas
mov
cmp
jo
ds
mov
push
loop
clc
ret
shlb
test
xorb
mov
sbb
stc
mov
out
mov
or
xchg
loope
jne
jns
std
inc
notl
sub
mov
inc
add
xchg
inc
mov
mov
dec
rdpmc
insl
jno
dec
mov
daa
push
cmpsl
inc
pushf
mov
popf
xor
mov
push
mov
lock
sbb
popf
mov
repz
data16
dec
inc
cmp
jbe
cmp
mov
sub
xchg
mov
rcl
push
mov
mov
idivl
add
mov
jae
jmp
hlt
dec
out
add
xchg
mov
clc
imulb
jp
cmp
sbb
stos
dec
xchg
jle
arpl
cmp
insb
fcmovu
js
test
jle
mov
push
pop
xor
lret
mov
add
pop
mov
pop
mov
mov
roll
xor
adc
xchg
pop
hlt
mov
jge
and
mov
shll
mov
sbb
inc
scas
ss
fnstenv
lret
pop
lcall
mov
or
shl
pop
mulb
stos
imul
pop
ja
sub
jno
jge
lret
jle
test
cmpsl
aas
sbb
lock
jb
xor
int3
jl
aas
and
sarl
jge
pop
mov
push
cmp
pop
add
xor
jae
iret
in
lock
xor
add
push
pusha
arpl
rcll
aad
pop
mov
add
adc
lods
clc
mov
xor
fidivs
mov
xchg
popf
inc
sti
sub
mov
pop
push
inc
inc
sbb
out
sbb
cmp
outsl
xchg
sbb
add
outsl
out
loop
call
inc
or
and
mov
dec
push
int
cmpsl
mov
or
cmp
rolb
sbb
loope
sub
adc
xchg
cmp
push
cmc
push
daa
xor
adc
push
out
sti
sub
adcb
cmc
call
mov
push
xchg
cwtl
jne
sub
movb
fdivr
dec
add
outsb
arpl
ficomps
jo
lods
lret
pop
fidivl
inc
pop
jo
int3
adc
repz
sbb
mov
lods
andb
mov
icebp
ficompl
jo,pn
push
jns
cli
jmp
adc
or
sbb
fidivrs
jge
das
jl
sub
xor
test
inc
shll
repz
sti
xchg
fisubrs
lahf
jo
push
cltd
das
hlt
push
test
jae
inc
lret
or
jmp
inc
outsb
icebp
faddp
xor
lea
pop
in
sti
pop
sub
arpl
add
cwtl
inc
sbb
xor
sub
add
sub
lahf
push
pop
push
les
inc
cmp
push
mov
or
clc
jecxz
leave
leave
sbb
fiaddl
xchg
outsb
push
outsb
lods
push
mov
dec
loopne
repnz
jge
sahf
stc
leave
loopne
pop
clc
sti
cmp
cwtl
mov
adc
jg
pop
scas
jl
daa
mov
mov
insb
bound
jb
nop
and
testb
cmpsl
push
je
mov
lahf
jge
mov
rorb
add
iret
cmp
sbb
mov
rcrb
cmp
int
out
outsb
add
rorb
lahf
pop
lret
sub
mov
lret
int3
fcoml
out
adc
aaa
dec
sbb
in
cltd
fidivrl
jle
push
popf
push
aam
jns
cmp
or
pop
sbb
or
xor
stos
aad
or
xchg
ljmp
pop
jb
fwait
dec
xor
or
sar
sbb
out
adc
mov
in
jae
stc
std
cld
mov
sbb
push
xchg
adc
sbb
dec
ja
mov
movsl
pop
or
jbe
jle
orb
push
call
test
and
mov
sarb
jmp
sbb
xor
dec
lods
daa
movsl
mov
in
fstps
cld
inc
rcl
cltd
scas
push
fadds
popa
repnz
xor
aam
cmp
jmp
pop
in
mov
dec
push
loopne
xlat
push
xlat
cmpsl
mov
and
adc
add
jle
add
es
mov
mov
push
mov
sub
adc
lcall
icebp
push
push
mov
ljmp
jne
notl
jno
cmc
dec
rcl
stc
frstor
aaa
aas
dec
mov
mov
sub
cmp
daa
push
outsb
imul
mov
ja
test
pop
lea
lret
jo
fneni(8087
and
sbbl
lea
loop
ffreep
jbe
jb
bnd
and
and
xchg
lods
xor
push
ja
imul
sub
scas
shll
sub
xor
loope
loop
int3
jmp
or
test
scas
loope
or
inc
ret
inc
xlat
dec
inc
jle
stc
or
pop
add
or
inc
jecxz
jbe
sub
jle
rorb
mov
loopne
sbb
ja
pop
and
cs
adc
pop
pop
and
pop
cmp
mov
clc
mov
rcll
inc
mov
lds
sbb
dec
stos
or
in
orl
inc
mov
rcrb
das
dec
andb
sub
and
addr16
cmpsl
adc
push
testb
subl
mov
and
test
orl
loop
movsb
pop
mov
jno
out
mov
lods
adc
push
lds
adc
nop
lcall
xchg
hlt
cmpl
imul
mov
fldt
nop
cltd
fdivl
fsubr
mov
jnp
sbb
add
iret
add
dec
xchg
clc
mov
sti
xchg
lret
pop
xchg
ljmp
es
and
xchg
sub
sbb
push
jecxz
dec
mov
cwtl
rclb
mov
jno
xor
and
pop
push
push
push
or
leave
cmpb
adc
jno
mov
xchg
dec
lret
xchg
jge
xchg
insb
add
stos
and
movsb
gs
sbb
add
xchg
and
out
ret
scas
push
and
icebp
popf
sbb
aad
or
mov
jle
test
push
dec
sub
push
rorl
mov
xchg
lcall
jbe
test
shl
inc
sub
fldenv
mov
clc
sbb
xchg
or
je
jno
jns
mov
aaa
and
sub
bound
daa
fwait
sub
shr
fstpl
lret
sbb
adc
adc
jmp
add
adc
out
mov
fidivrs
popl
jmp
xchg
test
lret
loop
fbld
fstpl
dec
adc
cmp
cmp
dec
inc
cmp
mov
mov
add
push
stos
popf
stos
hlt
mov
mov
out
xchg
idivb
jb
mov
movsb
sub
jle
and
dec
lds
std
mov
ret
addb
jge
faddl
mov
ror
adc
pop
jmp
ror
movd
mov
repz
ret
jbe
ret
pop
cwtl
sub
mov
xchg
add
mov
aas
out
notl
or
sub
cmpl
push
jae
push
jnp
lds
mov
cs
lcall
mov
mov
jg
and
mov
cmpsl
test
sahf
xor
das
or
ds
inc
stos
bound
xor
inc
inc
jle
cli
pushf
mov
fistl
test
fs
popa
inc
pop
notb
fdivl
push
inc
and
rorl
mov
bound
pop
shll
out
and
sbb
lods
and
jnp
sub
cmpsb
gs
mov
pop
sbb
pop
xchg
mov
pop
negl
add
ja
addr16
xchg
hlt
ret
cmp
sbb
orb
inc
xor
loopne
push
mov
iret
outsb
mov
push
pop
daa
cmp
pop
inc
dec
push
mov
decl
cmpsl
and
lock
testl
push
cmp
mov
cld
movsb
outsl
pop
and
push
lahf
jnp
pop
mov
push
mov
add
sub
adc
mov
pop
jg
mov
test
xchg
subl
mov
dec
and
dec
or
jecxz
jcxz
mov
cld
shr
dec
imul
pop
sub
push
xchg
sub
and
lret
mov
xor
inc
ja
push
xchg
fmuls
fucompp
enter
inc
les
add
js
cmp
jo
mov
mov
bound
sbb
repz
aam
das
scas
mov
push
push
jl
push
int3
xlat
pop
mov
push
lret
ja
xchg
pop
sti
xor
ja
dec
cli
sub
andb
scas
inc
gs
bound
jp
aam
fdivl
inc
jne
mov
sub
mov
aaa
pop
adc
call
cmp
repz
hlt
mov
je
outsl
and
and
imul
scas
dec
push
popf
outsb
int
ror
mov
xchg
and
cmc
sbb
mov
aas
jnp
arpl
mov
inc
loope
fmuls
cmp
arpl
aaa
cmp
shll
lea
fsub
scas
pop
lret
adc
mov
xor
mov
imul
xchg
inc
cli
das
add
jo
jg
and
fldenv
xorl
inc
fidivrl
test
js
push
sar
arpl
jle
sub
not
in
or
sbb
in
jp
jno
pop
jnp
and
fstpt
scas
test
mov
xchg
xor
sarl
cwtl
lahf
je
sbbb
icebp
xchg
mov
sbb
sub
cs
outsb
out
mov
iret
popa
mov
cld
push
aas
insb
mov
shl
jae
lock
push
push
fimull
call
xor
add
cld
stc
push
xor
sub
mov
dec
xor
pop
push
in
xchg
and
sahf
stos
lock
xor
push
inc
dec
cmpsl
dec
in
in
ret
or
dec
fisubrs
xchg
xchg
into
jbe
pop
jnp
leave
les
cmc
clc
xor
mov
cmp
sub
stc
add
insl
jg
or
cmp
repz
push
cli
repnz
pop
stos
xor
xchg
adc
jecxz
or
or
mov
or
out
push
in
push
dec
scas
adc
mov
add
jno
mov
repnz
rolb
stc
jecxz
xchg
cmp
xchg
movsl
cltd
sbb
jnp
sarl
pop
mov
cwtl
cmp
dec
outsb
lcall
adcb
mov
lret
imul
mov
jp
cli
jbe
sub
das
sbb
mov
rcrb
mov
push
sub
xchg
push
mov
xchg
inc
mov
mov
shr
xor
hlt
repz
popf
push
mov
pop
add
push
in
shll
xlat
push
out
sbb
scas
dec
jbe
adc
sbb
adc
lahf
aad
push
push
or
popf
inc
nop
jns
sbb
ret
scas
mov
lcall
xchg
adc
push
cmp
ja
jl
bound
sub
add
inc
add
dec
pushf
lcall
movsl
nop
out
inc
mov
xor
pop
aas
mov
add
movb
arpl
mov
sti
sbb
jnp
imul
js
adc
jge
mov
jno
in
sbb
imul
cs
decb
movsb
scas
in
hlt
xor
jle
das
pop
mov
movsb
ret
pop
push
adc
int3
mov
pop
int
rcr
push
outsl
push
cmp
xor
jmp
pop
daa
aam
ret
enter
mov
in
add
mov
xchg
adc
mov
or
enter
fdivrs
and
repnz
sar
imull
cltd
push
or
push
movsl
ret
in
mov
hlt
sub
aad
xchg
mov
pop
or
adc
fimull
cwtl
push
mov
aad
pop
dec
adc
add
or
pxor
mov
pop
lret
cld
sbb
xchg
mov
add
dec
cmp
cwtl
shld
xor
adc
cmp
add
adc
inc
mov
rcr
outsb
cmp
rcl
dec
subl
clc
testl
xor
xor
scas
pop
mov
sub
add
repz
or
fdivp
mov
lahf
xchg
in
mov
xchg
mov
mov
ds
mov
jmp
adc
xor
xor
rcrl
sbb
mov
or
inc
cmp
add
in
pop
add
mov
push
lret
jp
jle
or
push
push
fwait
mov
dec
scas
mov
mov
loopne
jbe
or
and
and
mov
call
addr16
cmp
lret
mov
push
sbb
jbe
jecxz
je
ja
push
hlt
mov
aaa
loopne
dec
push
stc
test
push
in
xchg
push
or
test
aad
jg
push
sub
xchg
pop
sub
in
lcall
out
xchg
std
jle
daa
mov
sub
loop
sub
dec
fsts
or
lods
pop
and
mov
adc
out
pop
dec
data16
mov
outsl
sub
jne
int
adc
jbe
loopne
mov
jecxz
int
aas
cmpsb
mov
add
out
je
cmpl
movsl
xchg
mov
sub
loopne
pop
lods
shll
jle
xchg
movsl
daa
cmp
enter
iret
roll
pop
fcmovb
mull
popf
ja
pop
jns
mov
and
mov
xchg
push
push
sahf
or
cmp
cmp
pop
lcall
push
dec
test
pop
mov
js
xchg
add
pop
pop
mov
lea
insb
mov
fimull
jo
in
movsb
pop
popf
xchg
rorl
cs
jl
mov
sbb
xchg
mov
jecxz
inc
movsl
rorb
aam
sub
scas
push
sub
pushf
inc
inc
and
sub
add
mov
or
lds
sti
stos
sub
les
aas
push
cmc
jnp
cs
in
ds
pop
fiadds
ret
jle
les
test
push
mov
dec
dec
out
xor
jmp
mul
jp
mov
cmp
push
xchg
or
ret
fnstsw
call
arpl
jno
cwtl
jl
pop
dec
incb
xor
push
pusha
leave
mov
inc
push
add
mov
in
pusha
dec
dec
loope
shrl
cmp
fisttps
cmp
fnstenv
inc
nop
add
pop
cmpl
movsl
ja
out
jbe
jnp
jg
push
pop
dec
cmp
hlt
je
les
pushf
jg
lret
repnz
mov
test
sub
test
add
mov
sub
insl
push
pop
mov
sbb
repnz
mov
jecxz
inc
lea
fistpll
lods
jle
pusha
mov
fwait
push
add
jecxz
das
pop
lods
mov
lods
mov
push
push
in
push
aad
mov
ds
inc
pop
or
mov
jl
lock
add
gs
aad
cmp
paddw
rcrb
idivb
xchg
jne
gs
out
add
idivl
clc
jb
out
mov
fs
xchg
mov
mov
inc
sub
ret
je
mov
fisttps
mov
jmp
mov
jbe
enter
cmp
xor
lcall
lods
out
mov
push
adc
mov
ret
scas
jg
in
repnz
test
stos
fistl
out
pop
outsb
mov
or
mov
mov
jbe
mov
push
int3
mov
popf
lcall
mov
ljmp
cltd
pop
mov
and
add
pushf
xchg
dec
add
jb
dec
bound
add
iret
adc
lret
fstpl
fwait
ja
hlt
aas
mov
dec
fcmovu
mul
or
enter
shlb
movsl
sahf
dec
mov
sub
icebp
hlt
xor
lods
inc
fxch
icebp
scas
cmp
push
bound
lcall
pop
xor
pusha
shll
popf
add
mov
fldenv
mov
shr
cltd
push
dec
or
pop
pusha
mov
xchg
cmp
or
in
dec
lock
setp
outsl
push
xor
sub
into
movb
hlt
jae
out
aam
dec
xchg
scas
je
sub
sub
hlt
cmp
jns
divb
or
clc
mov
loop
and
mov
push
pavgw
js
enter
imul
insb
jg
xchg
xlat
add
test
xchg
mov
xor
add
cli
add
push
mov
loopne
rcrb
push
dec
push
xor
push
data16
lods
jmp
cmp
sub
xchg
repnz
aad
xchg
pop
mov
jnp
movsl
aad
test
popa
in
stos
out
cmpsb
pop
inc
pusha
xlat
scas
mov
lds
les
push
jp
xchg
lcall
ljmp
jle
push
xchg
jnp
sti
imul
jne
jecxz
mov
or
aaa
out
test
push
cmc
cmp
adc
sub
mov
jno
xor
mov
or
mov
push
loop
inc
repz
pop
ja
mov
sub
fists
dec
cmp
in
xchg
sbb
or
jno
insl
and
push
jp
and
aam
jo
xor
pop
pop
mov
xchg
in
and
rcll
cmpsb
push
scas
sub
shrb
pop
inc
jmp
cmpsl
jecxz
xor
xchg
or
sbb
or
dec
das
daa
push
cmpsl
adc
lods
aaa
adc
int
mov
mov
mov
fldl
inc
push
inc
xor
xor
out
cs
pop
sub
cmp
scas
mov
dec
in
push
mov
std
jg
jo
aad
in
xchg
mov
fildll
sti
sti
shll
cmpsb
xchg
test
or
hlt
jecxz
addr16
sbb
mov
pop
mov
aam
leave
and
mov
mov
in
fisubrl
roll
mov
std
jge
call
stos
aaa
cs
inc
and
andl
mov
mov
sbb
cmpsl
jmp
fidivrl
adc
and
pop
add
out
xchg
adc
push
js
cmp
lret
mov
cmpsl
xor
push
inc
arpl
mov
jns
or
orl
add
lcall
inc
adc
mov
cmp
and
adc
ret
and
jp
mov
stc
and
jp
fistpl
enter
adc
dec
push
mov
push
loop
movsl
shll
push
lcall
icebp
dec
sti
jmp
push
shrb
decl
inc
cmp
shlb
mov
outsl
mov
jno
cmp
rcrb
jb
add
inc
jle
addb
jnp
sbb
popf
call
clc
adc
clc
les
sbb
pop
pop
lods
test
jmp
jmp
mov
jp
pop
dec
jg
dec
xor
sahf
jo
cmpl
pushf
or
repz
sahf
mov
xchg
push
lahf
subl
rcrb
ret
clc
ss
mov
mov
pop
or
sahf
fnstcw
movsb
xlat
in
mov
sub
enter
in
and
cmp
jmp
jno
std
out
popf
ret
hlt
sub
mov
inc
movsb
pop
mov
jle
mov
in
inc
mull
fsubs
loopne
iret
lahf
jb
xor
clc
andb
add
out
cmp
xor
int
jae
jae
or
sbb
pop
in
aaa
or
mov
pop
lods
xor
mov
mov
adc
push
mov
int
sbb
add
push
dec
mov
ficompl
or
and
adc
cmc
jne
adc
hlt
dec
iret
xchg
fidivrs
dec
jns
mov
sub
xchg
jne
xchg
call
loope
mov
les
adc
jne
cmp
js
jbe
xchg
jge,pn
call
hlt
xor
je
sbb
mov
or
cmc
fdivrs
xor
inc
xchg
or
add
jne
stc
pop
jp
ss
mov
mov
fwait
pextrw
mov
adc
xor
dec
cmp
mov
cmp
and
rcrb
dec
inc
mov
outsl
pop
sar
or
cpuid
add
stos
cmp
adc
and
leave
pop
ljmp
sub
out
xchg
popf
dec
mov
int3
jge
cmp
or
add
lods
pop
mov
xchg
scas
jge
cmp
push
out
rcll
cmp
xchg
pop
mov
push
pushf
cltd
pop
push
xor
or
jno
push
mov
push
addr16
ljmp
dec
shrl
push
call
add
aas
push
outsb
fidivrs
pmulhw
xchg
sbb
pop
hlt
inc
rorb
cmpsl
aad
inc
jbe
mov
adc
and
out
stos
shlb
movsl
mov
incb
aas
and
fisubs
xchg
fimull
mov
xor
rcrl
out
adc
mov
lds
xor
stos
mov
jmp
insl
mov
repnz
pusha
mov
lods
mov
shll
lods
stc
fdivrl
mov
iret
mov
pop
xor
inc
adc
mov
mulb
negl
mov
cmc
push
shrl
rolb
and
pop
iret
jbe
dec
iret
xadd
push
stos
inc
push
xor
aad
push
rorl
lret
jp
test
cmp
out
xor
xor
and
pop
mov
mov
mov
popa
sub
es
mov
push
jnp
aas
in
xchg
push
push
test
and
mov
aaa
hlt
mov
rolb
or
arpl
movsl
fstl
lahf
xchg
jp
pop
imul
in
sarl
jo
sub
js,pn
jmp
add
and
sub
xchg
xor
fucomip
cld
mov
or
inc
mov
int3
imul
mov
push
and
add
bound
pop
fcomps
jo
mov
mov
cltd
or
add
daa
cmp
test
dec
jno
dec
ficoms
outsl
mov
inc
xor
shll
jnp
mov
in
adc
xor
rorl
outsl
mov
icebp
movsl
pop
addr16
dec
jnp
dec
pop
and
cs
sub
out
ficomps
je
shrl
lock
shr
sub
sahf
jb
adc
push
mov
adcb
bndldx
icebp
lock
icebp
daa
mov
icebp
add
into
scas
dec
imul
roll
incb
pop
pop
sub
xchg
dec
test
sub
mov
icebp
sbb
dec
add
mov
out
sarb
mov
pop
arpl
stc
stos
and
jb
push
inc
jb
outsb
repz
dec
add
or
xlat
cwtl
faddl
lret
out
dec
movsl
ret
jb
addb
loope
out
ss
rclb
mov
data16
cltd
test
mov
sti
xchg
push
jnp
sbb
jmp
mov
add
fldenv
in
adc
push
data16
jns
cmp
dec
aam
mov
mov
xor
push
loopne
and
or
mov
or
push
sahf
sbb
push
xchg
xor
pushf
ud2
jns
inc
test
inc
pop
push
pop
leave
pushf
cmpsb
test
adc
das
mov
out
adcb
xchg
dec
lret
dec
fwait
dec
sbb
fdivl
pop
dec
fmulp
sahf
popf
cmp
lcall
imul
fisttps
ror
fsubs
dec
movsl
lea
cltd
arpl
pop
idivl
shlb
insb
call
hlt
xor
gs
push
xchg
sbb
mov
mov
in
xor
icebp
add
xor
inc
fwait
aas
std
mov
minps
cmc
fstpl
sbb
add
stos
nop
fwait
sahf
inc
lret
xchg
and
lods
push
stos
adc
xchg
sub
incb
adc
out
lcall
movsl
mov
sbb
cltd
cmpsl
push
xchg
adc
out
mov
idivb
test
xor
lret
shrb
cltd
sahf
jp
ds
jmp
xchg
popf
scas
std
lcall
movsl
fmulp
jp
xchg
pop
mov
je
mov
cmpsl
scas
into
xlat
jg
js
jno
mov
mov
out
jno
cs
push
mov
lods
adc
mov
int
and
arpl
shl
hlt
or
out
sbbb
call
add
and
cmpsb
lret
mov
dec
and
outsl
sub
cli
pop
mov
pusha
push
pop
xchg
push
xlat
sbb
cmpb
nop
dec
cmp
cmc
inc
movsb
pop
mov
cltd
or
daa
movsl
add
shr
and
push
loop
jp
inc
dec
jle
or
pop
shrl
sti
sbb
cltd
xchg
lret
ja
fistl
jg
popa
mov
mov
sbb
outsl
popl
mov
bound
push
xlat
test
jle
sub
lcall
js
std
xchg
jo
adc
or
jbe
insb
outsb
cmpsl
jle
dec
sbb
sahf
cmpsl
xor
aaa
xchg
lods
sbb
lds
out
cmp
andb
scas
enter
cli
xlat
inc
rcrb
fcomi
inc
jmp
les
sbb
mov
inc
pop
in
push
mov
imull
movsl
xor
adc
mov
test
cmp
push
sbb
ljmp
and
push
mov
adc
jp
inc
add
sbb
out
cmp
xor
cwtl
or
test
adc
out
scas
std
cmc
inc
mov
outsl
mov
cmp
sti
cmp
cmc
mov
fsubs
mov
and
cltd
push
jmp
add
test
int3
sbb
xchg
or
fdivl
aaa
xor
popa
mov
pop
pop
aas
mov
loopne
cmpb
xorl
mov
inc
loop
mov
dec
and
movsl
sbb
lods
fstpl
out
fadds
sbbl
loopne
js
ret
adc
cwtl
repz
mov
aad
jo
jae
ds
fisubrl
add
pop
sbb
mov
into
dec
inc
jnp
rol
adc
or
sub
add
test
ja
fucomip
jle
stc
push
sbb
shrb
lret
ret
cmp
fstp
adc
sub
cmp
dec
lcall
out
inc
das
sbb
insb
cmp
sahf
push
sbb
cmp
lock
lods
ja
jecxz
addb
inc
inc
inc
sub
outsl
mov
dec
push
std
cmpsl
inc
jne
leave
jmp
imul
and
add
loop
in
mov
data16
xchg
popa
add
into
sub
jge
mov
sub
jne
clc
cmpsl
in
push
push
imul
cmpsb
mov
ror
jp
cmp
call
jmp
add
cmp
push
jecxz
and
cltd
movq
lahf
jecxz
out
mov
xor
mov
sbb
fiaddl
sbb
jne
inc
xchg
mov
sub
dec
stos
stos
out
or
sbb
sahf
scas
adc
mov
push
negb
pop
daa
xor
adc
cmp
mov
sbb
lds
and
xor
mov
jl
scas
xor
fdivl
aad
sub
xchg
fcompl
loopne
movsl
incb
or
mov
test
cmpsl
fs
adc
sub
mov
not
push
sub
mov
adcl
and
gs
lret
test
mov
mov
aad
out
popf
xchg
fwait
ucomiss
sbb
shll
sahf
movsl
pop
jmp
out
fidivs
lret
mov
xchg
popa
cmpb
out
jmp
jnp
loopne
clc
pop
cwtl
cmp
pusha
pop
or
add
out
xchg
mov
add
out
addr16
outsb
cli
test
aam
sar
mov
imul
cmp
mov
lea
fstp
mov
cltd
or
adc
daa
lahf
lcall
cmp
dec
or
movsb
mov
mov
jns
cmp
sti
mov
cmc
fistps
repnz
mov
movsl
insl
cli
aad
pop
imul
add
xchg
adc
xchg
sbb
aaa
jo
lds
ja
add
or
sbb
test
sub
push
push
mov
jb
mov
pop
scas
divb
cmp
xor
std
stos
xchg
lret
fwait
adc
and
jmp
fldl
and
jae
adc
aaa
fstpt
and
pop
mov
cmp
movsb
adc
cltd
adcl
mov
adc
shrl
outsl
dec
inc
mov
cmc
sub
loope
adc
and
lret
add
inc
inc
cmc
dec
mov
cwtl
mov
inc
inc
and
inc
push
pop
int3
push
inc
or
iret
mov
dec
xor
jmp
bsr
aad
cmp
mov
push
mov
and
mov
arpl
jb
sbbb
or
mov
negl
push
lds
sub
ficoms
mov
push
into
cli
mov
or
jo
ret
push
addr16
xlat
cmpsb
mov
mov
lock
adc
cld
dec
dec
jae
cltd
loopne
pop
sub
inc
mov
pop
xor
lret
or
mov
ret
scas
xchg
xchg
mov
orb
es
push
jnp
or
ret
cmp
jp
cmp
repz
stos
xchg
out
xchg
cli
push
mov
jg
fcomi
inc
pop
or
mov
sbb
imul
lea
enter
sub
xchg
leave
xor
push
in
inc
push
cmp
mov
mov
inc
push
push
push
in
lahf
sbb
jge
ds
inc
popa
adc
out
int3
insb
cmp
orl
mov
mov
jbe
pop
stc
jb
sbb
jge
loop
lcall
pop
lahf
mov
outsl
jnp
aaa
les
test
adc
dec
lahf
pop
dec
in
gs
stc
mov
in
or
addb
push
fcomip
mov
pop
lea
jns
insb
fwait
insb
cmc
and
pop
lahf
lret
dec
jecxz
cmp
or
add
sbb
xchg
jp
push
fisttpll
xchg
cmp
dec
sahf
xchg
pop
xor
jmp
cmp
sub
pop
movzwl
cmp
mov
jns
add
in
push
out
negl
and
adc
hlt
jmp
adc
repnz
push
mov
je
pop
lcall
cmc
ds
ss
mulb
cmpl
cld
outsb
ds
cli
int3
push
dec
xor
cmc
das
mov
in
sbb
sbb
stc
dec
stos
fabs
cmp
cld
in
push
add
insl
push
sbb
mov
sub
xor
jns
fisttps
mov
rorb
adc
popf
jg
lods
das
mov
dec
and
cld
outsb
nopl
cmpsb
out
sub
bnd
mov
cmpsl
ret
popf
inc
dec
or
xor
in
pop
dec
aaa
pushf
jns
push
loop
dec
or
push
mov
inc
aas
push
fs
pop
inc
xor
dec
jbe
jmp
lods
fdivrs
adc
mov
jne
lods
inc
pop
leave
divl
xchg
jbe
clc
or
lea
xchg
clc
es
fs
in
repnz
xor
dec
mov
mov
push
xchg
sub
popf
es
stc
mov
ss
xor
les
mov
cmp
jae
xor
fdivs
ss
gs
jmp
fucomp
arpl
sbb
and
rorl
int3
fs
jae
push
cmpsb
pop
mov
mov
xchg
add
jl
dec
lods
sub
push
mov
dec
flds
jns
loopne
std
cmpsb
xor
fdivs
icebp
lods
sub
std
push
pop
out
mov
sbb
push
adcl
mov
mov
sub
pop
jo
fs
mov
pop
insl
mov
mov
decl
push
inc
cltd
adc
pop
mov
dec
dec
or
push
lcall
xor
mov
jae
and
xchg
idiv
orb
sub
std
out
insl
sub
sub
mov
mov
jl
add
in
inc
mov
outsl
inc
add
cmpsl
fcmove
jae
iret
movsb
pusha
mov
rcrl
pushf
fidivrs
push
pop
push
dec
loop
push
shrl
dec
daa
or
xor
into
rolb
rorl
or
cmpl
add
in
mov
jg
sub
test
addr16
lods
inc
stc
pop
popf
insb
fsts
mov
pop
push
cli
out
xor
add
push
xchg
repz
stos
cwtl
mov
adc
xchg
bound
loope
mov
pop
adc
into
xchg
sbb
sbb
push
call
fnstsw
bound
fildl
dec
cwtl
xchg
mov
push
clc
scas
je
jmp
repz
pop
pop
scas
push
jg
push
fmull
cli
pop
icebp
pop
adc
sbb
sub
lea
cmp
adc
test
add
jg
fwait
push
dec
add
xchg
daa
cmp
out
xchg
fildl
popa
sbb
mov
jae
mov
jp
test
int
adc
out
cltd
cmp
sahf
and
jnp
jo
mov
inc
outsb
sbb
xor
jp
int
mov
loop
orb
into
mov
mov
sarl
inc
and
stos
enter
xor
xchg
mov
sbb
mov
insb
loope
notl
cmp
mov
into
cmp
jb
push
dec
xchg
sbb
fbld
xor
test
dec
and
mov
and
xchg
subl
cld
addr16
jb
mov
lds
mov
pop
aas
or
xchg
outsb
repnz
fistps
in
cmpsb
jno
inc
cmp
mov
push
mov
dec
in
pop
or
dec
mov
or
adc
mov
mov
mov
pop
testl
lock
add
into
push
add
push
mov
add
pushl
lea
outsb
cld
add
mov
in
lea
cmp
xchg
inc
loopne
out
inc
cmc
loopne
loopne
dec
call
stc
mov
sub
in
fisubl
dec
clc
mov
enter
pop
movsb
xor
and
mov
push
inc
ja
dec
dec
sbb
lcall
aad
adc
in
mov
mov
bound
mulb
xchg
test
mov
xor
arpl
call
and
mov
data16
push
inc
movsl
hlt
and
xchg
fisttpl
out
mov
mull
dec
jg
dec
add
fdiv
scas
aam
xor
sub
xchg
in
pop
cli
repz
sbb
not
sub
cmp
das
or
in
adc
add
rclb
mov
jae
push
jae
mov
jnp
sub
jge
out
out
ljmp
das
rol
jne
adc
jp
pop
sbb
outsb
sub
mov
loop
xchg
push
add
add
add
mov
pop
xchg
fldl
dec
test
les
fwait
and
ja
mov
fistpl
int
inc
js
mov
add
push
inc
fs
add
jb
add
or
inc
mov
dec
lcall
std
add
jmp
and
sbb
mov
push
fwait
xor
pop
loop
test
add
sub
jle
adc
and
je
ljmp
repnz
xlat
sbb
sub
pop
dec
shrb
nop
cmpsl
mov
imul
inc
sbb
and
sti
push
sbb
lcall
ret
cltd
out
mov
cmp
pop
mov
mov
push
mov
xor
stos
daa
push
add
jo
xor
xchg
mov
mov
sub
mov
js
int
bound
icebp
xor
and
out
push
jmp
frstor
fsubs
pop
rol
inc
stos
jno
loopne
daa
or
rcll
pop
mov
sbb
xchg
ja
addr16
jle
and
nop
push
ja
lds
sbbl
ss
adc
mov
rolb
xor
pushf
add
mov
mov
loopne
cs
fldt
dec
es
lahf
std
cmpsl
or
jl
daa
inc
cmp
cmp
outsb
xchg
inc
push
and
into
add
int
cld
cmpsb
ret
int3
or
xchg
fidivrl
loope
mov
sub
xlat
clc
cltd
push
pop
leave
lea
push
fcmovu
adc
push
push
xchg
inc
mov
sbb
repnz
int
popa
mov
loopne
loop
or
jmp
adcl
dec
inc
je
movsl
arpl
xchg
arpl
pop
xchg
or
lahf
fwait
add
push
xchg
sar
xchg
sub
nop
inc
ficomps
sbb
xchg
adc
or
hlt
lods
in
mov
xor
in
sbb
in
outsb
icebp
repz
int
lret
or
loop
sub
lea
mov
sahf
push
lret
test
popf
rclb
es
mov
push
test
es
inc
and
mov
jp
cs
fisubrl
loopne
ret
rcll
dec
inc
jae
or
fcmovnb
mov
xchg
aas
cld
pop
mov
adc
add
pop
inc
imul
adc
adc
std
int
fwait
shrl
sbb
xor
push
pop
bound
repz
loop
lods
dec
xchg
inc
cwtl
int3
mov
lret
cmpb
andl
cltd
popf
mov
aad
ret
mov
repz
xor
stos
jecxz
dec
and
dec
loope
push
jg
cltd
and
gs
push
mov
shlb
jns
and
pop
push
cmpsl
and
xchg
add
xchg
jnp
ja
inc
add
jg
ljmpw
pop
insb
xchg
adc
sub
ret
inc
in
xchg
stc
sbb
push
mov
roll
mov
and
dec
sbb
adc
aas
cmpsl
mov
jg
notl
lock
cmp
lods
push
sbb
pop
push
cmp
mov
mov
jmp
dec
addr16
lea
lock
shrl
adc
mov
xchg
lds
shll
int
icebp
inc
push
add
xlat
xchg
pop
icebp
push
pop
popl
or
das
jmp
sbb
cs
pop
ret
in
mov
notl
jmp
mov
jae
iret
pushf
mov
sbbl
xchg
out
icebp
adc
xchg
mov
push
push
mov
cmpl
fwait
outsl
mov
iret
adc
or
push
shll
popf
sahf
adc
xlat
mov
jb
das
frstor
sub
lods
mov
or
inc
imul
jno
mov
fistpll
repnz
and
mov
mov
sbb
jno
dec
repz
in
push
dec
mov
and
sub
cmp
pop
test
nopl
jg
cmp
frstor
xchg
enter
or
pop
push
cmc
push
pop
mov
xor
hlt
xor
int3
daa
ja,pn
loop
test
sahf
lea
es
jmp
push
push
shlb
xor
push
jae
leave
call
pop
movsl
push
jge
sub
leave
test
subps
es
imul
adc
or
mov
stos
xchg
aas
fnstsw
es
add
inc
push
or
mov
dec
jg
lret
incl
push
pushf
lea
inc
adc
push
dec
xor
in
in
inc
pop
movsl
aaa
fidivrl
sub
into
cmp
insl
push
in
jg
pop
cmc
cld
sbb
or
fs
out
push
aas
int
orb
mov
sbb
outsl
data16
lret
dec
hlt
idiv
xchg
xchg
in
adc
in
inc
pop
popl
fisubl
rclb
sub
mov
push
sub
ret
push
es
in
mov
orl
mov
imul
or
fdiv
inc
mull
push
cmp
cli
pop
lret
movsl
imul
mov
cwtl
out
inc
jne
test
inc
ret
xor
pop
imul
push
int3
jmp
or
mov
das
test
jecxz
jmp
shll
cli
shrb
insb
movsl
loope
cmp
jmp
push
lcall
jmp
sbbl
cld
faddp
and
xor
stos
outsl
mov
in
fnstsw
add
xchg
dec
or
aas
adc
sahf
aaa
loop
into
and
lret
fdiv
pop
ficoms
lcall
inc
ret
popa
out
sbb
inc
jmp
jg
cmp
pusha
xchg
enter
sub
call
and
popa
push
or
shll
fnsave
jo
sbb
mov
and
xchg
enter
lcall
xor
bound
sbbl
cmp
jo
dec
fists
xor
test
mov
mov
lret
imul
mov
into
int3
fs
mov
cli
out
outsb
adc
rcrl
pop
xchg
clc
cmp
iret
cmp
push
je
xchg
sub
sub
cwtl
jns
push
sub
or
sbb
lods
ds
mov
and
fidivl
pop
xor
in
insl
shll
mov
cmp
mov
mov
xlat
ficoml
stos
adc
sarb
scas
inc
aad
movsb
mov
jle
scas
daa
mov
xchg
jae
scas
dec
inc
les
subb
jbe
add
dec
in
cli
jg
cmp
push
or
jp
xchg
xchg
inc
push
and
mov
xor
in
aaa
in
into
pushf
xchg
mov
sub
mov
pop
seta
cli
test
sbb
xorb
aad
jg
movsl
adc
jb
insb
arpl
pusha
cmp
shrb
cli
xor
loope
jge
in
jp,pn
dec
pop
dec
ljmp
mov
push
movsb
les
arpl
jmp
xlat
sahf
movsb
sbb
gs
lret
out
push
push
stos
jo
adc
xor
pop
jecxz
dec
test
xor
mov
xor
cmp
out
or
fisttps
cmc
enter
dec
mov
and
fisubrs
lods
jp
cli
or
cwtl
sub
pushf
xchg
sbb
mov
ljmp
adc
mov
iret
pop
fidivrl
fsub
test
mov
lret
into
shl
iret
add
sub
cli
sbb
pop
ret
divb
jmp
mov
cltd
jae
or
jae
lahf
xchg
adc
test
sbb
fwait
loopne
mov
pop
jge
mov
fmuls
ja
mov
jno
les
mov
in
pop
cmpsl
popa
pop
leave
enter
imul
in
lds
leave
jb
add
dec
insl
lock
stos
push
push
loope
xor
xchg
ljmp
mov
stc
rcrl
xchg
negl
jnp
or
mov
les
jp
test
cmp
jmp
in
mov
mov
or
xchg
mov
lret
adc
pop
jne
lcall
pop
pop
cmp
push
add
sub
mov
xchg
pushf
sbbl
push
ja
int3
dec
decb
pop
test
jp
das
pop
test
das
jmp
xor
adc
dec
jp
adc
cs
mov
xor
lods
xchg
loope
mov
push
mov
aad
inc
lcall
pop
sbb
dec
lock
cmp
iret
les
pop
xor
fldt
mov
repnz
jnp
pop
mov
cld
fcompp
mov
leave
scas
ljmp
adc
mov
enter
shll
lods
loopne
testl
inc
pop
sbb
sub
lea
in
mov
and
pop
jo
in
mov
add
sarb
aam
movsb
add
cltd
mov
out
test
xor
or
fcmove
pop
cmpsb
pop
inc
popa
dec
cmp
inc
insb
xchg
loop
inc
jb
in
or
add
jge
mov
mov
cmp
mov
jns
cmc
das
test
adc
psubd
push
dec
sub
jne
icebp
stos
sbb
sbb
jp
lret
inc
pop
sub
dec
cmpl
std
xchg
dec
or
loop
jnp
int
iret
insb
mov
mov
fisttpll
test
js
mov
out
iret
xor
jl
in
push
add
sbb
out
cmpsb
xchg
mov
cmc
outsb
cmpsb
lret
cmp
xchg
insb
xchg
push
inc
mov
add
mov
shrb
xchg
cmp
rcl
scas
jno
aam
les
lea
or
push
gs
mov
sbb
xlat
xchg
adc
xchg
sbb
push
adc
mov
jg
pop
sub
mov
push
add
cmpsb
std
jle
jno
xor
sub
push
outsl
mov
xchg
shr
lcall
xor
jbe
sub
sub
test
push
lods
fisttpll
mov
mov
xchg
pop
dec
jo
pop
mov
push
les
imul
daa
imul
mov
pop
bndstx
xchg
fnsave
mov
dec
xlat
in
lret
mov
faddl
add
add
xchg
cwtl
icebp
xchg
aaa
or
je
lahf
das
sarl
aas
or
aad
pushf
add
add
push
mov
and
addr16
mov
fldenv
jp
inc
scas
into
pop
pop
xor
cmp
daa
aas
and
mov
sahf
cmpsl
test
push
jb
mov
cld
pop
jbe
test
pop
je
jmp
mov
and
sarb
das
push
mov
andb
bnd
repnz
fsubrs
gs
js
inc
loop
or
test
cmc
mov
jno
mov
cli
xor
pop
inc
pop
sbb
ds
test
lret
xchg
xchg
mov
mov
and
lret
xchg
imul
rorl
mov
call
jae
jg
add
rcr
push
imul
out
mov
loop
rol
push
add
xlat
insl
shlb
or
and
lahf
lret
jge
mov
dec
dec
fs
jnp
mov
jae
xchg
ja
jl
and
pop
enter
jle
pop
inc
stos
fdivl
adc
jmp
in
mov
push
pushf
sbb
out
mov
rcrb
xor
push
es
mov
icebp
test
mov
sbb
iret
jo
xor
popf
inc
imul
mov
loop
sub
mov
stos
test
cmp
insb
nop
stos
inc
jae
clc
jmp
fwait
cmpsl
pop
pushf
mov
scas
fildll
aam
lds
xor
in
jne
adc
rcrl
mov
or
sub
push
sti
jne
cs
sbb
aam
adc
dec
stos
push
and
sub
aas
shrl
jae
push
jno
sub
sar
adc
jo,pn
xchg
and
out
jne
cli
mov
cltd
aaa
inc
adc
mov
xor
jmp
and
adc
sbb
mov
out
mov
fldenv
fnstcw
xorl
mov
aad
sarb
fidivl
xchg
jnp
xchg
enter
insb
mov
mov
pop
xchg
hlt
and
sub
mov
mov
sub
aas
gs
insl
jb
xor
push
loope
test
es
mov
or
nop
aaa
mov
and
into
lods
lods
lds
test
jp
ja
out
xlat
fistpl
sahf
fisubrs
movsb
mov
jl
cmp
push
outsl
or
or
and
push
mov
mov
mov
jecxz
addb
pextrw
push
adc
scas
in
ret
cmp
dec
mov
aam
push
ljmp
or
ss
mov
mov
pop
pop
and
pop
mov
sub
movsl
pop
and
dec
dec
loop
push
mov
dec
clc
jne
mov
push
mov
push
aaa
ja
scas
mov
rclb
pop
das
movsl
cmpsl
cmp
and
mov
mov
smsw
js,pn
jg
pop
fistps
add
enter
and
jmp
sub
push
adcl
lds
jns
mov
mov
jno
jbe
mov
les
movsl
adc
pop
jl
es
add
in
xchg
pop
fidivl
inc
in
dec
in
rcr
adc
aam
mov
loope
xchg
into
cli
sub
rorb
sub
orb
mov
sbb
cmp
sub
ret
mov
inc
pop
jo
cmp
lret
mov
adc
cmp
adc
inc
pop
cmp
data16
adc
jae
lock
imul
mov
lcall
xchg
in
and
test
mov
mov
sarb
dec
fimull
popa
fistpll
and
jecxz
jge
jo
push
add
repz
xchg
mov
pop
sbb
fldcw
lahf
leave
sub
add
cwtl
inc
push
sbb
sbb
mov
popf
mov
out
roll
xchg
fwait
cmp
sub
mov
fidivrs
xor
js
or
jmp
clc
sbb
sub
jp
popa
mov
xlat
cmp
jae
test
test
jbe
jns
adc
dec
push
jbe
loopne
jnp
rclb
mov
sub
lods
or
push
push
sahf
fdivp
sub
sbb
push
mov
xchg
iret
adc
adc
cmc
adc
or
sub
adc
cmpsl
jle
inc
rolb
cmpsb
insb
cmp
insb
jno
cwtl
and
imul
imul
popa
mov
jmp
or
fiadds
hlt
mov
or
test
push
fiadds
pop
shl
faddl
pop
repz
xchg
stos
pop
jne
mov
mov
cmpl
out
push
mov
gs
pop
movsb
sbb
mov
lahf
and
push
aad
add
shll
addr16
nop
dec
ljmp
jl
xchg
jp
into
inc
pop
inc
xor
sti
lahf
ja
jns
adc
mov
dec
pop
mov
mov
jnp
mov
pop
xor
mov
add
mov
push
ljmp
sub
dec
pop
pop
mov
mov
jle
inc
jmp
fimuls
push
int
jo
xchg
xor
enter
popf
ret
mov
dec
iret
mov
bound
or
jecxz
push
ljmp
or
repz
xor
push
dec
outsb
setl
mov
xchg
inc
sub
cmpsl
jns
jge
stos
aad
push
mov
push
jb
dec
dec
cld
push
repz
loope
sbb
pushf
sub
pop
sbb
dec
shll
push
or
push
sbb
cld
mov
fdivrs
add
jo
loope
movsb
xor
std
pop
mov
xor
mov
dec
lahf
pushf
test
mov
sti
ret
dec
fidivs
jp
sbb
xchg
add
test
dec
in
sub
mov
jg
jb
pop
adcl
movsl
jmp
inc
ja
ja
xchg
jnp
in
sarl
notl
and
mov
sub
cmp
mov
push
pop
sbb
or
test
jno
push
fnstenv
lock
loopne
shll
clc
cwtl
xchg
imul
jp
mov
xchg
jns
sub
or
fisubrs
push
outsl
nop
fbstp
pop
jne
mov
das
imul
jns
cwtl
lods
lret
mov
adc
mov
push
sahf
fadd
repz
ss
sbb
push
arpl
fistpll
mov
dec
mov
aaa
sub
pop
sbb
data16
jno
and
add
fs
sarb
aas
in
dec
not
movsb
adc
add
adcl
pop
pop
addr16
sar
sbb
stos
push
pusha
lret
imul
sub
push
xlat
mov
pop
je
push
clc
mov
imul
mov
in
inc
jae
sbb
pop
rcrl
xor
insb
and
cmc
pusha
mov
jp
fisttpl
mov
jae
cmpsb
lea
pop
sub
clc
mov
sub
sahf
sbbl
jnp
js
stos
inc
int
out
xchg
lock
repz
mov
daa
mov
mov
call
sbb
sub
lret
jnp
bound
pop
push
mov
clc
scas
add
jle
inc
xchg
sbb
imul
mov
cmc
dec
ret
sbb
push
scas
lods
mov
cmp
mov
xor
fs
iret
jp
add
push
setb
outsb
jns
pusha
xlat
pop
mov
in
les
jge
sub
push
push
pop
ret
pop
fimuls
insb
movsb
rorb
adc
stos
scas
pop
sub
cwtl
mulb
inc
sbb
lds
add
pusha
cmp
in
sbb
fxch
dec
pop
mov
mov
pop
fsubr
inc
mov
loop
add
mov
dec
jge
xchg
sub
sub
dec
push
das
lods
cs
pop
jge
pop
negb
dec
mov
sub
hlt
and
lahf
cmpb
imul
fdivrl
in
mov
das
fcomi
jnp
xchg
mov
jmp
inc
push
int
xorb
movl
in
push
enter
fwait
rcrb
and
jbe
mov
or
lret
insb
xlat
mov
mov
fucom
ret
sbb
mov
test
pop
pop
loopne
jg
inc
int
add
mov
pop
sbb
fldt
lcall
sahf
inc
xchg
cs
fildll
jmp
or
xchg
push
test
pop
cmp
shrb
pop
and
mov
pop
push
cmp
movsl
adc
pop
xlat
outsl
jno
inc
add
push
pop
mov
xchg
sbb
jbe
ds
and
push
bound
jl
test
adc
add
xlat
push
pusha
or
jnp
jno
jmp
inc
fcomps
xlat
and
mov
fstl
fwait
sbb
pop
jp
sub
imul
pop
sti
jb
andl
push
out
loop
jmp
idivl
xor
or
lods
xor
mov
out
rcl
sbb
sarb
cmc
and
xor
stos
mov
cmp
and
addb
imul
push
mov
call
inc
sub
push
out
pop
daa
xchg
mov
sub
mov
dec
test
fisttpll
in
cmp
fstl
sbb
or
icebp
pop
mov
jne
xchg
sub
sub
andb
xor
mov
ret
sahf
loope
xchg
fstpl
in
mov
scas
cmp
fwait
pop
push
xchg
mov
loop
cmp
xchg
ds
mov
pop
push
es
jno
or
xor
subl
out
je
sbb
out
or
lcall
and
jae
sahf
push
bound
inc
cmc
adc
push
movsl
fisttpl
call
loopne
mov
xchg
pop
add
xchg
and
mov
add
sarl
negl
orl
fstps
jae
add
fxam
js
enter
mov
loop
out
imul
push
ljmp
shll
out
xor
mov
mov
inc
mov
in
jecxz
xchg
xor
lahf
cmp
ja,pn
add
pop
mov
adc
call
sahf
xchg
lret
aas
std
outsl
pop
or
loop
or
je
mov
add
push
sbb
into
insl
lods
rcrb
dec
mov
sub
push
cltd
aas
cmp
and
jp
lods
cld
subl
movsl
mov
outsl
mov
cmp
cmp
jb
mov
inc
and
dec
lea
pop
shl
jp
adc
inc
xor
adc
xchg
pop
cmpl
out
inc
gs
mov
sbb
out
mov
imulb
sbbb
pushf
cmpsl
and
aaa
pop
inc
sti
inc
or
ret
inc
jbe
cmpl
or
outsl
mov
xor
or
sub
inc
leave
inc
test
and
xchg
arpl
jns
sub
dec
out
add
xchg
cltd
jge
addb
and
aaa
sbb
sarl
pop
cmpsb
jb
cvtdq2ps
test
frstor
sarb
into
dec
std
and
aam
cmova
stos
or
loope
ds
outsl
mov
cld
mov
stos
or
push
in
mov
nop
repnz
cwtl
lods
and
jmp
sti
mov
push
lret
mov
shlb
inc
stos
or
xor
frstor
push
adc
adc
or
std
jle
movsb
ficoms
push
mov
push
mov
sti
inc
jae
push
or
pushf
idiv
pop
int3
leave
push
repz
dec
dec
pop
das
enter
mov
insl
push
sbb
stos
lock
aam
scas
sub
push
je
repz
jp
out
test
or
cmp
adc
add
jecxz
imul
icebp
xor
sbb
sbb
clc
mov
int3
xor
loopne
adc
jb
xlat
adc
or
pop
mov
imul
add
cwtl
mov
push
cmp
adc
push
push
repz
repnz
outsb
cmpsb
adc
nop
cmpb
in
frstor
aas
mov
and
aad
mov
xchg
fdivl
mov
stos
jle
fidivl
orl
or
iret
add
mov
ss
cld
data16
aaa
jecxz
or
and
cwtl
cmp
xorb
mov
loop
dec
fldt
sbbl
pop
and
lahf
loop
xor
aad
repnz
aam
xchg
test
or
mov
rorb
lcall
mov
add
mov
cld
test
ror
pop
sbb
or
aad
mov
adc
pop
insb
lret
xor
jge
inc
mov
mov
push
jmp
mov
push
lahf
inc
cmc
jge
push
imul
jb
mov
aas
lock
std
mov
les
aaa
xor
mov
dec
xor
fidivl
mov
and
dec
divl
fnstenv
and
js
lahf
pop
mov
fs
lahf
scas
cmp
insl
add
or
mov
xor
cmc
js
sub
pop
push
outsl
jnp
add
push
test
xchg
inc
dec
xchg
lret
mov
out
pushl
mov
movsl
dec
add
sub
push
dec
add
cmpb
push
dec
push
jb
daa
lods
push
add
cmc
mov
add
lret
faddl
cs
je
push
lds
les
push
leave
popa
fists
in
test
mov
shrl
push
lret
xor
ret
test
das
leave
and
pop
mov
and
pusha
out
mov
test
out
rcrl
and
jns
jb
inc
push
cmpsb
jle
ljmp
xchg
jle
insb
adc
sbb
jecxz
push
fwait
scas
xchg
inc
mov
jb
arpl
arpl
mov
pop
movsb
stc
or
mov
jae
aad
or
nop
mov
push
lods
jns
faddl
jl
divl
pushf
sub
pop
mov
xchg
mov
mov
add
push
mov
dec
sar
clc
mov
xor
push
enter
mov
mov
les
inc
cs
nop
adc
imul
mov
push
or
pop
jl
dec
jmp
pop
imul
pop
data16
dec
lahf
mov
iret
sbb
mov
pop
lcall
ljmp
cmp
test
add
insl
idivl
or
out
sbb
arpl
xchg
pop
xor
ss
rcl
sub
stos
pop
insl
cmpsb
arpl
push
ss
es
data16
imul
xor
mov
bnd
jo
and
out
xchg
fs
mov
cmp
sub
fst
out
cltd
cwtl
bound
jno
bound
ficoms
jmp
mov
shlb
ja
jge
es
lock
mov
sub
cltd
bound
xor
cwtl
sbbl
shll
loopne
push
shr
inc
jg
in
and
inc
jg
adc
add
popl
mov
inc
mov
pop
pop
mov
orb
cmp
js
xchg
sar
add
dec
add
sti
xorl
xlat
mov
mov
mov
xlat
scas
ffreep
leave
mov
sub
xor
movsl
xchg
or
outsl
add
sarb
jno
pop
bound
sti
addl
sub
cmp
icebp
jbe
in
jo
outsl
pop
inc
cmp
cmp
sub
pop
inc
jge
pop
mov
pop
sub
fwait
into
ret
rcll
xor
sbb
faddp
push
lcall
cmc
shlb
pop
cli
sub
je
adc
nop
notl
mov
dec
dec
and
mov
inc
push
adc
xchg
adc
inc
jecxz
xor
les
push
or
dec
dec
xlat
or
xchg
rorb
xchg
cmp
test
adc
idivl
cmp
add
sbb
sbb
std
orl
cmp
lock
fildl
mov
das
sub
and
leave
dec
shr
popf
shl
or
or
push
into
push
cmpsl
cld
mov
jb
inc
xor
mov
jnp
fwait
aad
xor
jns
jp
adc
loop
pop
xlat
test
call
mov
lock
das
outsb
punpcklwd
arpl
data16
and
xor
or
jae
lahf
jecxz
xchg
ja
sbb
mov
mov
cmp
psubw
insl
or
clc
mov
nop
mov
rclb
pop
fstpt
push
and
data16
or
jge
jmp
in
mov
repnz
sub
xchg
pop
push
or
paddusw
or
adc
scas
jmp
jo
pop
push
mov
dec
push
fsubrs
adc
mov
jmp
push
data16
aad
cmp
push
mov
mov
cld
dec
jmp
nop
stos
lahf
sub
sbb
adc
mov
dec
cmp
sub
ss
jns
ds
stos
mov
mov
or
push
pop
mov
mov
pop
mul
cwtl
dec
sbb
dec
fcmovbe
ja
sub
or
iret
inc
inc
jns
es
lea
mov
jbe
int3
or
repnz
lods
sti
imul
push
ss
repnz
lcall
orl
dec
div
pop
jmp
or
inc
jb
in
mov
mov
push
and
ret
outsb
outsb
loop
sbb
mov
mov
cmp
insl
add
popf
sbb
inc
adc
popa
mov
je
adc
xor
outsb
aam
roll
out
fisttpl
pop
arpl
jnp
pop
insb
insb
cmp
icebp
dec
jecxz
mov
popa
inc
pop
out
or
imul
mov
js
scas
jo
inc
mov
jnp
mov
scas
das
push
push
or
popa
mov
pop
rclb
dec
inc
pop
dec
lock
int
fldcw
cmc
xor
les
lea
jns
insl
dec
mov
imull
or
inc
aad
loopne
daa
jb
push
mov
sub
lahf
jbe
int3
push
inc
or
mov
scas
sub
sbb
cmp
adc
jg
popf
mov
int
add
daa
movsb
or
ja
adc
mov
sub
js
and
hlt
mov
xor
jp
clc
aad
inc
ss
outsl
xchg
xorl
imul
pop
jnp
or
xchg
repz
push
xor
std
ret
xor
loopne
test
cs
xchg
sub
in
test
std
and
fxch
stos
pop
sub
sbb
lods
xchg
pushf
sahf
shlb
sub
mov
dec
or
sub
aam
pop
cltd
test
xchg
test
sti
in
mov
in
xor
mov
or
mov
fisubrs
xor
test
hlt
ret
addb
mov
jle
mov
pop
cmp
stc
aad
jns
sbb
sbb
mov
xlat
shlb
sahf
xor
push
mov
dec
lea
xchg
jmp
mov
jno
clc
gs
es
aaa
fiaddl
mov
enter
cmpl
sbb
cs
imulb
fdivrp
loopne
popa
and
sbb
ja
push
imul
cmp
dec
push
test
dec
push
sub
mov
gs
out
push
popf
cs
cwtl
ror
lods
stos
mov
testl
repz
fsubrs
movsl
xor
inc
jmp
xchg
jg
lods
inc
orb
jp
mov
aaa
out
pop
je
jnp
test
loopne
dec
popa
cmp
aad
push
adc
in
arpl
mov
xor
add
hlt
mov
mov
mov
int
push
push
mov
inc
loop
sub
mov
mov
test
xor
mov
test
fs
or
adc
test
add
jmp
pop
xchg
decl
pushf
sbb
mov
sub
xchg
pop
shlb
inc
int3
dec
pop
sub
leave
sahf
das
fs
mov
test
fidivs
xor
jle
inc
xlat
cltd
loop
lods
lret
pop
dec
sahf
xchg
shll
subb
mov
daa
inc
cltd
cltd
stos
iretw
mov
cltd
cmp
in
mov
sub
xor
push
cmp
nop
pop
mov
adc
xor
push
roll
insb
std
fs
ljmp
jb
add
mov
in
lahf
jl
and
cli
stc
xor
push
xchg
nop
out
sti
movsl
mov
js
frstor
call
cmp
xor
test
push
out
sub
and
sub
and
insb
xchg
dec
test
aad
popa
outsb
call
jb
fsubrl
ja
mov
mov
push
in
pop
xlat
xchg
xchg
adc
data16
add
ds
daa
and
shlb
mov
dec
and
xlat
repnz
decb
xlat
jo
sarl
testb
out
lds
cmp
call
xchg
sbb
sub
dec
fwait
inc
or
mov
mov
adc
call
jnp
lret
ds
mov
inc
test
push
out
cs
inc
mov
sbb
lahf
jns
test
mov
mov
outsl
ret
stos
push
mov
jnp
cmp
or
xor
sbb
mov
cmp
dec
sub
push
sarb
jne
popa
sub
popa
lahf
xor
pop
and
std
cmp
inc
and
pop
sbb
aas
imul
xor
clc
sbb
cmp
lahf
and
loopne
cld
sbb
andb
xchg
cltd
mov
push
inc
xchg
inc
cwtl
inc
mov
aam
mov
xor
push
and
faddl
xchg
mov
dec
pop
test
push
les
fucomi
mov
aas
pop
cmp
in
data16
lret
cmp
mov
sbb
inc
adc
cltd
pop
adc
sbb
jg
sub
mov
push
push
popa
xchg
enter
inc
pop
cmp
ret
push
shrb
in
je
push
or
push
and
pushf
pop
inc
pop
inc
scas
mov
jb
sub
scas
xchg
mov
shl
insb
out
aas
pushf
inc
xchg
or
cmp
negb
sahf
jae
mov
stos
jmp
stos
test
out
jge
ds
xchg
dec
xor
or
enter
push
sub
stc
std
test
jbe
sub
addr16
lahf
out
push
xchg
popa
pushf
imul
pop
sbb
fmull
cwtl
xor
dec
popa
out
addl
or
andb
mov
jae
sahf
test
test
ja
out
popf
loopne
lds
sub
adc
sub
movl
andb
shlb
imul
inc
cmp
push
repz
scas
jg
push
mov
mov
or
fildl
int
in
add
mov
div
iret
imulb
inc
adc
pop
dec
dec
add
out
rcrb
mov
popa
aas
lea
shll
jl
jle
or
add
faddp
jne
adc
cmp
dec
inc
dec
movlps
push
mov
inc
js
ja
jmp
outsl
mov
sahf
nop
pop
aaa
or
cwtl
lock
fists
or
dec
sub
stos
addr16
psubb
ds
and
add
inc
ljmp
jb
jbe
subb
add
sub
adc
mov
push
jo
and
cmpsb
cwtl
push
ret
subl
cmp
test
jae
sub
aas
test
popf
mov
and
lods
mov
mov
mov
jle
imul
mov
out
sub
sub
mov
adc
cpuid
leave
jl
mov
sub
sti
sbb
daa
sub
fsubrs
cmc
inc
cmp
jb
cmp
faddl
push
ret
icebp
xchg
push
outsl
pop
and
fisubrs
ja
scas
cmp
xchg
pop
xchg
jp
sub
adc
mov
add
sbb
cmp
repz
xchg
enter
in
add
pop
mov
mov
iret
sbb
jbe
data16
push
popa
xchg
dec
les
xlat
movsl
and
cld
push
mov
jle
jbe
pop
es
sub
or
pop
fxch
cmp
jecxz
push
push
mov
in
pop
xchg
pop
pusha
lcall
aas
push
fnstsw
inc
test
in
cmc
pop
push
jbe
dec
dec
jmp
mov
sub
or
out
ret
je
xor
sbb
inc
sbb
mov
repnz
xor
adc
mov
add
or
clc
jne
dec
pop
int3
sub
shll
daa
lock
pop
push
mov
leave
outsl
std
ud2
inc
outsb
cmpsl
and
mov
inc
pushl
add
aas
xchg
ficomps
cmpsl
push
dec
cli
pop
ljmp
or
idivl
fldln2
jl
xchg
btcl
dec
std
negl
push
ja
ja
subb
or
data16
lods
cmpsb
mov
ret
sub
into
sub
cltd
insb
sbb
xor
push
cmpsb
push
out
popa
fcomps
lds
xlat
and
inc
jmp
pop
add
jg
cmpsl
sbb
fs
out
ret
repnz
lahf
xchg
arpl
dec
dec
in
cmpsl
and
call
fwait
mov
xchg
inc
adc
xchg
push
sub
adc
jbe
ret
jo
dec
imul
or
lds
cmp
stos
sub
sub
imul
int
or
cs
repz
test
imul
in
mov
pop
or
gs
imul
les
xchg
ds
and
data16
mov
inc
movsb
jl
xchg
mov
movsb
sbb
lret
in
push
add
add
dec
cmpsb
jle
es
sbbb
sti
fsubr
inc
arpl
je
fidivrs
in
daa
jae
push
cltd
sbb
sub
fmulp
fs
es
and
test
pop
cmp
xchg
xchg
jb
ret
and
push
pop
xchg
cwtl
xor
adcb
adc
in
sub
test
lret
push
pop
sti
jbe
xlat
mov
sbb
pop
sub
push
test
mov
dec
xor
test
xchg
cmp
add
fcmovnb
out
inc
ja
sbb
mov
pusha
mov
in
adc
jnp
repnz
inc
inc
aaa
test
mov
push
xchg
push
pushf
aad
xor
cs
and
pop
imul
add
lods
cmpsb
push
mov
pop
test
push
sub
cmp
paddsb
lahf
and
imul
jnp
mov
test
cmp
dec
xchg
ret
push
insb
cmc
cmpsl
pop
adc
push
clc
aad
pop
fmul
push
sbb
push
leave
addr16
dec
aaa
mov
jmp
pop
mov
cld
xor
fcomps
xor
test
inc
xor
sbb
loopne
mov
sub
inc
mov
jb
out
cmp
mov
pop
xor
pop
mov
ljmp
jnp
dec
push
gs
xor
jo
ja
sti
fwait
push
jno
and
fldcw
xor
mov
fadds
jbe
inc
xor
pop
jg
popa
add
ret
jno
outsb
or
out
in
dec
pop
dec
xor
cmp
mov
ds
jmp
mov
inc
xchg
mov
mov
shrl
mov
enter
aam
fildl
hlt
mov
mov
test
jp
scas
inc
out
xchg
repnz
je
lods
mov
jne
in
or
dec
or
scas
cmp
inc
adc
cmpsb
pushf
push
imul
shl
jp
push
xchg
mov
sub
lea
test
or
addb
dec
push
sub
hlt
mov
in
les
in
test
rcr
jl
pushf
push
insb
adc
cmpsb
cli
and
xor
cli
and
xchg
pushf
jne
data16
xchg
and
mov
fisubs
xchg
inc
out
jns
je
or
xor
pusha
stos
xchg
clc
pop
adcl
pop
pushf
jp
aas
sub
jns
movl
aad
pop
xor
popf
daa
push
push
or
sub
jno
mov
adc
leave
jmp
negl
add
or
idivb
test
fisubrl
sub
scas
xchg
jnp
data16
mov
mov
lock
push
out
pusha
bound
fsubrp
pop
dec
dec
cmp
push
dec
sub
inc
mov
loop
jl
pop
and
xor
jb
cltd
pop
jp
cmp
and
mov
pusha
adc
aam
lcall
add
iret
std
xlat
icebp
sti
fldl
add
and
enter
andb
popa
int3
scas
int3
push
aam
and
add
push
stos
pop
mov
fwait
xor
jb
pusha
rolb
imul
add
jae
pop
into
mov
push
andl
outsl
cmpsl
jmp
mov
xor
or
pushf
lret
inc
mov
cmp
sub
stos
or
pop
call
sub
mov
pusha
ret
js
fistl
dec
fldenv
aam
mov
mov
jo
jnp
mov
mov
pusha
push
xchg
cs
push
flds
repnz
mov
pop
sbb
mov
jne
cwtl
rcr
lods
jno
mov
stc
inc
cmpb
jno
outsb
adc
and
shr
cmc
in
xor
mov
and
add
popa
pop
mov
dec
mov
pop
clc
xor
push
inc
push
ret
loopne
or
pop
mov
push
lea
push
iret
lret
push
add
int
xchg
outsl
push
fs
ljmp
bound
fstp
sub
sbb
jge
inc
ror
arpl
mov
inc
dec
test
mov
cmpsl
jecxz
in
stc
add
int
xchg
adcb
jecxz
cmp
mov
sbb
fists
sbb
pop
aaa
imul
mov
xchg
aam
loop
inc
movsl
movsl
lods
out
push
cmp
aas
fs
lahf
test
adc
mov
andb
fwait
dec
xchg
lds
xchg
or
or
in
xor
gs
fwait
cmp
jg
push
cmpsl
ss
xor
mov
dec
lret
cld
test
sub
mov
jmp
leave
aaa
fstpl
sbb
lods
xchg
and
adcb
xor
inc
push
xor
dec
mov
std
sub
aad
cmpsb
push
sahf
pop
adc
xor
pop
stc
ret
jo
sbb
ja
jae
dec
sub
or
push
and
loopne
xchg
xchg
dec
icebp
push
repz
cmp
mov
sbb
sbb
aad
push
xorb
fsubs
dec
mov
add
fs
xor
lret
dec
enter
mov
or
pop
aaa
cltd
cs
dec
enter
or
leave
daa
inc
aas
lds
or
les
sub
ja
loopne
inc
fcomps
pushf
adc
jns
data16
or
cmpsb
mov
and
sub
push
test
mov
int3
adc
push
and
jge
repz
adc
adcb
lods
sub
sub
js
orps
subl
mov
pop
inc
xchg
popf
push
scas
test
or
mov
push
into
pop
icebp
loopne
push
hlt
mov
pop
loop
fdivrs
scas
fstpl
mov
cwtl
push
and
movsl
jns
outsb
mov
pop
xor
test
or
sub
inc
xchg
enter
sub
inc
pop
pop
sbb
push
in
cmp
inc
lods
test
mov
mov
ds
ret
fnstenv
icebp
pop
jecxz
icebp
test
dec
xchg
jae
mov
mov
lods
pop
jg
cmp
rclb
hlt
sub
pop
imul
popa
test
ja
xorb
or
pop
stos
adc
insl
mov
stos
hlt
in
lcall
mov
fisubrl
ds
cwtl
nop
jno
test
loope
and
mov
mov
mov
mov
or
ret
daa
jl
aad
jbe
xchg
mov
mov
fnstcw
std
pop
pop
mov
and
aaa
xor
test
in
push
mov
mov
jbe
inc
cmp
fwait
dec
add
lods
mov
test
xchg
pop
sub
mov
pusha
icebp
jne
jno
sub
bound
xor
lret
outsl
roll
iret
xchg
pop
sub
xchg
clc
cmp
ret
lds
or
out
mov
ret
fwait
sub
mov
jp
pusha
inc
fsubrl
scas
movsb
mov
sbb
repz
adc
test
repz
mov
ja
out
and
je
adc
jne
xchg
sahf
outsb
stos
popa
popf
mov
int
popf
cmpl
pop
sbb
xchg
pop
gs
mov
mov
xchg
jae
jmp
mov
dec
cmpsb
pop
adc
inc
adc
mov
push
mov
fiadds
sub
sbb
pop
int
das
test
pushf
ret
inc
stos
xor
mov
or
sbb
cmp
loope
dec
push
shrl
xor
or
dec
xor
fmuls
dec
ds
jle
aaa
lods
add
mov
mov
mov
movsl
lcall
arpl
stos
mov
cli
ljmp
cmp
js
enter
cld
dec
cmp
dec
lahf
inc
fwait
ret
test
nop
dec
int
mov
sub
dec
fstpt
xor
xor
sub
test
addr16
dec
xchg
cmp
shll
sti
fistl
mov
shrl
mov
or
int
enter
jp
mov
jmp
pop
ds
jg
adc
insb
je
xchg
push
int3
jno
enter
xor
fldl
sbb
and
fsubrl
xor
in
inc
out
mov
je
xchg
and
enter
mov
mov
jge
test
xchg
aaa
shrl
insb
dec
rolb
sbb
lock
jp
and
inc
testl
loopne
loopne
push
out
shrl
ror
sti
mov
xchg
push
sub
out
stc
and
mov
push
sub
bound
cwtl
jl,pt
sbb
ret
in
xchg
shll
mov
clc
pop
pop
js
popa
or
imul
inc
xchg
cltd
jg
in
jge
inc
mov
jae
outsb
dec
xor
lret
mov
push
xchg
adc
iret
rolb
stos
lret
movsl
sub
pop
xor
sbb
mov
or
adc
rcrb
loop
or
lret
fwait
xor
mov
dec
fnstenv
bound
pusha
mov
sti
sbb
pop
ret
fisubs
inc
sbb
aam
cmpsl
cmp
lcall
pop
or
add
shrb
fildl
sti
dec
jns
inc
sub
jo
jae
icebp
cli
ret
push
stc
stos
das
lcall
cmpsb
add
jb
sub
cs
imul
push
nop
push
jo
mov
mov
in
add
mov
enter
sub
push
popa
sub
mov
fsubrs
mov
push
jmp
gs
pop
or
cmp
stc
gs
jp
xchg
data16
push
in
mov
xchg
or
jp
add
sti
cs
pop
bound
shrb
cwtl
jnp
pop
or
or
mov
or
xchg
push
xor
mov
jmp
cmpsl
push
xor
dec
push
adc
cmpsb
aam
pushf
insl
cmp
test
fucomi
fsubs
leave
outsl
mov
mov
shrb
or
push
loope
loope
das
mov
cwtl
fmul
jmp
fidivrs
es
or
in
dec
nop
aaa
in
enter
push
inc
inc
cwtl
gs
pop
inc
xchg
jno
inc
sahf
pop
psubd
cs
xchg
int
jb
sub
pushf
aaa
pusha
hlt
call
jmp
jle
inc
mov
or
jno
push
daa
lret
fwait
xor
sub
sbb
movsl
jle
std
cs
sub
mov
push
mov
fimull
sti
scas
out
xchg
in
xchg
pop
lock
jecxz
aad
sub
dec
aaa
das
mov
je
sahf
shlb
fwait
sbbl
loope
popf
xor
enter
fiaddl
xchg
jmp
xor
mov
sbb
adc
adc
pop
loopne
sbb
sub
sbb
call
ljmp
addb
outsb
adc
mov
shrb
add
mov
ss
iret
xchg
loope
jno
and
adc
rorl
mov
rcrl
fisttpll
cmp
sbb
push
push
cmp
xor
sub
or
mov
sub
call
and
cmc
pop
lds
pop
movsl
pop
sbb
in
xor
out
into
push
cwtl
adc
mov
jmp
clc
and
dec
mov
add
cmp
jecxz
repz
adc
cmc
mov
pop
daa
jne
call
out
call
add
or
imul
jmp
out
gs
sbb
iret
ja
fcomps
js
sbb
push
nop
lods
jno
mov
cmp
es
dec
xor
call
mov
je
sbb
lcall
pop
scas
mov
das
fwait
cmpl
push
fs
jb
push
test
stc
push
data16
in
jb
roll
sarb
lret
bound
hlt
and
das
adcl
ffreep
push
and
lahf
mov
jo
adc
iret
adc
popf
enter
jb
cld
shlb
inc
pusha
pop
cmp
cmp
ret
jl
adc
mov
xchg
xchg
in
push
jno
mov
inc
mov
mov
scas
loopne
mov
mov
and
test
decl
mov
and
jne
lret
ljmp
ss
xor
lahf
js
sbb
pop
sbb
into
hlt
dec
jo
inc
mov
cld
inc
clc
pop
mov
jg
sub
xorb
or
in
adc
sbb
stos
jbe
or
scas
outsb
aas
fstl
sbb
inc
push
test
add
js
jns
mov
push
dec
xchg
shll
push
mov
loopne
or
mov
add
pop
sbb
jle
lahf
and
shlb
jmp
and
icebp
sahf
add
xor
outsb
cmc
mov
and
cmp
leave
xchg
mov
xchg
insl
adc
adc
dec
mov
shll
ror
lods
push
outsb
inc
sbb
sub
add
lods
arpl
sbb
cld
push
or
pop
loop
into
mov
movsl
mov
data16
push
sti
jbe
and
fidivrl
cmp
push
cmp
xor
out
mov
hlt
pop
int3
cmpsl
and
cmp
xor
fsub
pop
clc
add
shrb
and
icebp
pop
sub
push
lock
xor
rcrl
xor
pop
cmpsb
add
cmpb
mov
push
push
mov
cwtl
out
push
std
aaa
sarb
push
xchg
jo
mov
xchg
js
jle
ja
pop
and
add
push
stc
repnz
mov
int3
cwtl
out
lock
pop
imul
je
adc
mov
aam
inc
sar
out
lock
xchg
ds
loopne
rorl
adc
or
mov
rep
arpl
add
jnp
cmpsl
lock
test
notb
mov
push
xor
in
jg
jb
aas
push
mov
fdivp
imul
or
sub
mov
fs
gs
fstl
xor
lret
pop
xchg
mov
jo
imul
stos
fsubs
push
clc
xchg
lahf
out
xchg
rorl
lahf
inc
repnz
jp
inc
or
xor
fmul
push
sahf
push
bound
sbb
sub
sub
add
addr16
fcmovnu
jns
int
xchg
cld
jb
pop
ljmp
testb
and
lret
mov
aad
cmpsb
jmp
testl
insb
bound
push
clc
scas
jno
insb
icebp
jg
ss
stc
xchg
jnp
shlb
jb
loop
out
xchg
adc
jno
mov
addb
xchg
dec
inc
lea
push
loopne
mov
int
cmp
aas
je
sbb
dec
mov
pop
inc
jle
test
test
mov
sbbb
enter
shr
cmc
and
test
out
and
test
mov
sbb
mov
jmp
xchg
xor
and
pop
or
insl
jg
jbe
mov
pop
aad
and
sti
ljmp
mov
adc
and
cld
xor
mov
sub
fs
and
xchg
loop
push
data16
adc
mov
fistpll
mov
sub
inc
mov
lret
popaw
lcall
adc
les
mov
ljmp
rorl
in
push
fadds
mov
mov
push
mov
lds
push
xchg
mov
aaa
push
jnp
dec
sub
fs
pop
or
sbb
int3
clc
pusha
pop
movsb
orl
and
xchg
test
adc
or
pop
sub
add
test
ficoml
test
push
and
sahf
jecxz
loope
out
dec
jle
jg
aam
outsb
imul
sbb
fistl
push
xchg
cmp
cmpsb
sub
in
mov
mov
je
fdivrs
mov
inc
fcoml
cmp
mulb
mov
out
inc
loopne
and
and
ljmp
jecxz
push
in
es
push
push
mov
out
mov
or
jge
ficoml
xchg
adc
fcmovbe
in
adc
cmc
int
push
xor
cmp
jp
cld
pop
xor
iret
and
insl
push
dec
pop
inc
popa
xorb
xor
xchg
or
or
push
add
jbe
push
addl
push
inc
pop
or
mov
js
add
inc
aas
mov
mov
adc
pop
xchg
ljmp
lods
call
or
imul
shlb
insb
jno
mov
test
incb
repnz
xchg
cmp
cli
mov
or
pop
fildll
rclb
das
fs
adc
aas
scas
mov
xchg
sti
mov
xor
sti
imul
sahf
xchg
inc
pushf
adc
movsl
push
cli
mov
imul
mov
pop
shl
ds
mov
push
xchg
pusha
ss
inc
int
mov
mov
incl
adc
pop
rorb
mov
sub
pop
push
adc
shlb
gs
inc
mov
lods
in
sbb
dec
fwait
icebp
add
push
rcrl
dec
pop
mov
roll
mov
add
xor
mov
pushf
insl
std
in
sbb
test
pop
repnz
xchg
nop
adc
cmpsl
dec
clc
in
xor
push
push
xchg
pop
cs
push
mov
jnp
lods
sub
shl
into
std
dec
sub
adc
adc
xor
sub
xchg
inc
stc
les
scas
in
push
fstpt
dec
aam
rorb
loopne
pop
mov
cltd
sbb
in
jg
daa
pop
lds
adc
js
stc
mov
pop
push
push
clc
cli
xor
mov
stos
xchg
out
cmp
loop
popf
push
dec
inc
lock
push
xlat
jp
or
pop
pop
or
jns
in
and
adc
mov
dec
movsl
aaa
mov
and
mov
mov
arpl
shll
xchg
adc
xchg
cmp
fldl
clc
lock
rcrl
and
loop
xchg
cli
pop
or
mov
dec
sidtl
loope
and
sub
cwtl
lret
pop
sbb
pop
pusha
push
sub
imul
mov
fiadds
dec
pop
sub
xchg
or
movsl
test
jo
push
mov
sbb
out
dec
pop
push
mov
addr16
aad
inc
mov
fldcw
les
mull
and
addr16
xor
sbb
add
jge
jnp
adc
enter
in
add
xchg
mov
mov
xlat
into
dec
and
adc
stc
clc
orb
call
push
outsb
orl
scas
mov
movsl
call
and
sbb
mov
ret
sbb
mov
in
mov
fiadds
hlt
xchg
sbb
cwtl
fidivs
mov
and
bound
push
sub
addr16
int
sub
push
clc
fnclex
push
enter
mov
ficoms
pushw
push
pop
jbe
push
pop
lahf
adc
xchg
mov
xchg
pop
xchg
jmp
dec
loop
sbb
mov
test
pusha
jecxz
imul
push
adc
xor
fisubl
lods
pusha
icebp
clc
out
orl
push
jo
icebp
gs
pop
scas
adc
jns
les
push
nop
sbb
cltd
adc
enter
mov
jp
xor
jb
fsts
cmp
xchg
mov
mov
xor
nop
cwtl
sub
addr16
mov
dec
fmuls
icebp
pushf
xor
add
xchg
xchg
pushf
loop
rorl
mov
lcall
stos
xlat
push
push
add
and
or
and
fists
add
and
cmp
int
adc
hlt
cmc
xchg
xchg
iret
je
lahf
sbb
mov
lods
stos
xchg
lods
dec
lret
test
aas
je
adc
hlt
mov
xchg
or
enter
sub
mov
pop
sbb
popl
repnz
dec
xor
sbb
aad
jae
popf
imul
pop
or
js
sub
incb
lcall
inc
repz
addr16
cld
ss
pop
das
lods
dec
add
js
sub
lcall
dec
fs
xor
aaa
icebp
sbb
ret
loopne
fstl
in
data16
test
das
sarl
dec
jb
mov
lea
hlt
or
fdivrl
mov
out
movsl
daa
mov
inc
lods
xlat
dec
mov
mov
out
out
push
leave
dec
insl
or
ja
xchg
loop
jg
fsubp
xor
mov
mov
into
inc
popf
es
stos
jno
or
loopne
mov
ror
cwtl
mov
shlb
mov
jp
into
pop
cltd
add
stos
stos
and
cld
cld
pop
popa
imul
pusha
in
pop
punpckldq
add
cmpl
cld
mov
in
popa
cmc
roll
push
dec
jns
test
jl
inc
aaa
sbb
xbegin
pop
lret
aaa
mov
je
push
cmc
loop
stos
lahf
push
adc
jno
pop
and
in
push
inc
xchg
cld
adc
pop
sbbb
sbbl
mov
inc
or
ficompl
mov
add
xorb
xchg
and
mov
ret
dec
xchg
or
pop
loope
dec
sbb
xchg
mov
xchg
push
mov
jbe
outsl
lods
mov
out
fidivl
out
add
lea
jmp
pop
and
push
sub
mov
mov
or
enter
loope
sub
sbb
jae
xchg
sub
loop
in
sahf
lret
cmp
test
int
and
cld
jl
dec
xor
sbb
and
mov
mov
js
jle
xor
pop
into
scas
push
pusha
out
cmpsb
rcll
scas
call
mov
shrb
or
cwtl
mov
adc
jmp
adc
inc
lea
leave
pop
call
inc
cmp
mov
loope
pusha
into
rclb
clc
push
xchg
adc
imul
mov
mov
das
setle
pusha
lods
jge
jns
mov
jmp
mov
clc
jo
xor
jge
push
xlat
lret
xchg
stc
decl
mov
hlt
gs
add
cmp
out
push
xchg
and
fwait
jb
jae
es
add
adc
mov
movsb
dec
repz
ja
xchg
aaa
ss
xchg
lret
fdivl
mov
lods
pop
addr16
mov
aad
out
popf
insb
xchg
cmp
push
pop
push
lods
add
loop,pt
cmp
mov
dec
jo
add
or
test
pop
mov
sub
push
adc
fwait
addb
pusha
dec
push
cmp
cs
pusha
popl
stc
pop
mov
adcb
mov
shrl
enter
sbb
test
sbb
push
cmp
xor
inc
push
shrb
sbb
mov
movsl
mov
popl
push
push
std
rorl
mov
pop
mov
xchg
inc
scas
shlb
inc
fadds
push
jge
pop
mov
mov
sbb
enter
xor
cs
mov
sub
test
mov
das
jne
xor
out
or
jne
mov
test
pop
mov
lea
in
mov
je
sahf
stc
or
jb
scas
mov
jmp
popa
cmpsb
icebp
popa
cs
call
adc
mov
ret
jns
outsl
aaa
les
data16
jo
sbb
jo
lcall
adc
push
push
xchg
sbbl
jp
dec
dec
push
jo,pt
push
jge
fwait
jmp
mov
outsl
in
pop
push
loop
nop
loop
jne
push
test
js
push
out
in
movsl
xor
and
iret
xor
adc
fdivs
dec
cmp
mov
insb
in
add
stos
scas
iret
jmp
pop
xchg
addr16
daa
ljmp
inc
dec
pop
mov
inc
cmpsb
cmc
xchg
orl
dec
in
pop
sub
loopne
jl
xchg
enter
sbb
mov
dec
mov
or
pop
or
fists
and
pop
xchg
or
scas
in
lea
imul
dec
lahf
cmp
jl
lcall
cli
ds
or
iret
cmpsl
lods
ficompl
std
add
xor
in
int3
jo
das
xchg
gs
xor
nop
sbb
and
mov
cmc
test
add
sub
adc
cmp
cmp
rorb
int
push
sbb
pushf
xor
dec
and
xor
mov
ret
push
xchg
push
mov
pop
and
adc
mov
mov
outsb
mov
cmp
and
sahf
mov
mov
inc
sbb
aas
sbb
mov
repnz
out
or
and
in
imul
sub
lods
push
das
lret
fs
mov
mov
stos
outsb
ror
leave
cmp
sbb
sub
cli
mov
mov
cmpsl
adc
xor
into
fbld
inc
fldl2e
sub
out
xor
adc
adc
dec
mov
stc
ss
test
icebp
adc
ja
mov
imul
sub
lea
icebp
daa
aas
xchg
inc
jle
jp
push
fimuls
cli
outsb
adc
xlat
sub
push
xor
int
xor
bound
inc
lods
fwait
or
cmc
imul
int3
dec
jns
dec
pmulhuw
repnz
adc
fwait
jns
mov
les
jbe
push
xchg
ret
imul
icebp
pop
int
jb
push
lcall
aaa
mov
gs
pop
xchg
pusha
data16
add
cmp
mov
jmp
push
mov
xchg
inc
mov
push
lock
ds
jb
in
push
jb
add
inc
popf
jns
roll
mov
mov
jbe
stos
mov
bound
xor
mov
and
popa
inc
orb
es
test
push
ret
std
or
gs
cmpps
adc
sub
out
cmp
jnp
loope
shl
movsl
mov
repz
jge
mov
mov
xchg
sub
fildl
mov
mov
scas
xor
or
mov
iret
adc
out
shl
scas
sbb
xchg
dec
adc
loope
mov
mov
pop
aad
popf
int
adc
addb
sbb
jo
and
arpl
iret
shll
fdivr
xchg
mov
add
ret
rorl
or
data16
in
mov
pop
orl
sbb
push
movsl
loopne
cltd
loope
std
jl
and
shl
ss
lret
in
cmp
sbb
enter
test
inc
xor
mulb
and
jmp
das
pop
add
std
loope
mov
pop
and
cmp
test
fdivs
cmpsl
daa
call
sbb
xchg
int3
fnsave
jbe
mov
jecxz
icebp
inc
out
jns
mov
dec
pop
xchg
out
pop
jae
xor
ret
sbb
xor
nop
sub
adc
insb
pop
mov
cltd
arpl
movsb
push
out
sub
mov
or
mov
lea
sbb
outsl
adc
sub
dec
pop
sbb
xor
sbb
in
inc
fs
inc
inc
pop
shlb
mov
add
dec
mov
mov
or
scas
lds
gs
push
cmp
xchg
dec
pop
xor
xchg
sub
fidivl
push
mov
es
mov
add
imul
push
out
sub
stc
jbe
in
outsb
push
add
ret
sub
xchg
lock
and
stc
sbb
mov
and
fdivl
xor
aas
dec
dec
sbb
mov
out
or
dec
and
xchg
push
mov
sbb
jg
decb
scas
lahf
dec
and
cmc
fisubrs
or
stos
notb
and
xchg
pop
sub
int3
push
jmp
js
pop
jo
outsl
pop
inc
sub
xchg
inc
sbb
push
mov
into
orb
mov
xchg
adc
mov
jne
sbb
outsb
mov
into
cltd
and
pusha
lock
and
imul
fucomp
mov
mov
xlat
in
adc
cmp
repz
pop
aaa
xor
repnz
sbb
xorl
rcrb
imul
mov
mov
and
jmp
mov
xor
shll
or
mov
dec
jl
sbb
mov
jg
aas
and
inc
jecxz
adc
cmp
js
cmpsb
loopne
cmpsl
gs
testb
cli
nop
jo
ss
mov
pop
cmp
test
xchg
jle
in
testl
cli
xchg
sbb
add
and
inc
lea
pop
jb
mov
sbb
push
addl
int
lret
imul
ljmp
push
jns
xchg
mov
xchg
inc
mov
aas
popf
dec
hlt
outsb
jge
or
jbe
sbb
mov
jns
in
cmp
jecxz
popf
data16
incb
inc
or
shrb
sbb
jno
call
lret
cmp
mov
insl
sar
mov
mov
jg
int
subb
jmp
ds
cs
sti
frstpm(287
sub
xchg
iret
sub
out
movsb
imul
dec
adc
adc
and
clc
jnp
test
or
xchg
ret
xchg
fldt
rclb
cmp
int3
jno
dec
pop
or
sbb
icebp
imul
pop
or
push
mov
and
insb
test
pop
adc
jbe
pusha
mov
sub
mov
popf
inc
mov
out
out
cmc
dec
outsb
or
adc
cmp
mov
mov
push
jno
xor
xor
rolb
and
ret
fldenv
mov
arpl
in
push
orb
fxam
or
push
notb
gs
cs
loopne
and
enter
daa
addr16
push
inc
sbb
push
ds
aam
mov
lcall
xchg
xchg
inc
mov
mov
adc
dec
shrl
divl
mov
pop
aam
xchg
bnd
cs
adc
cli
cmp
sub
std
repz
repnz
push
pop
int3
add
jns
inc
cmpl
mov
xchg
cltd
jp
imul
adc
xlat
cmp
inc
inc
dec
popa
inc
xor
clc
sub
sahf
inc
cmp
cmp
outsb
xchg
shll
std
iret
sub
jnp
sbb
jnp
xchg
jns
lcall
les
mov
xor
insl
in
ret
lock
mov
lds
and
stos
pop
dec
adc
push
out
xchg
subb
mov
loop
adc
adc
loop
push
enter
cmp
or
or
xor
fwait
or
jnp
mov
dec
mov
ss
push
push
lahf
shl
bound
test
jbe
pusha
mov
push
push
adc
es
sub
test
pop
sbb
add
inc
add
cs
push
mov
addr16
fwait
lds
cltd
stos
inc
cmp
or
sahf
sbb
jg
mov
test
mov
push
das
notl
jbe
lods
add
jno
xchg
repz
out
push
shlb
pop
pop
flds
adc
push
cmp
sub
push
push
stos
insb
lret
stc
repnz
mov
fmul
adc
in
mov
mov
mov
mov
and
into
mov
jb
cwtl
les
shl
xorl
cmp
sub
cmp
inc
idivb
rol
mov
dec
lds
and
addl
sahf
cmpsl
mov
mov
adc
dec
lcall
mov
mov
cmp
aad
xchg
sarl
pop
pop
add
xchg
clc
cs
test
pop
clc
mov
mov
lock
ja
clc
mov
cmp
daa
test
pushf
lea
fsubrl
or
lcall
or
jbe
sahf
cmp
movsl
inc
push
pop
mov
xchg
orl
jp
mov
adc
insl
add
pop
fwait
pop
jmp
push
cwtl
jae
mov
aas
jg
pop
cwtl
jl
cmpsl
lahf
call
sti
movsb
mov
or
aam
movsb
gs
push
add
inc
cmpsl
xchg
out
or
mov
push
cmpsb
in
mov
jle
cmp
or
lret
mov
out
cmp
cmp
mov
mov
fcoms
test
push
mov
cmp
aas
mov
xor
mov
stos
jno
imul
and
clc
mov
sub
and
out
nop
outsl
fstpl
mov
jno
mov
mov
jle
data16
mov
jb
cmp
mov
mov
mov
leave
push
rclb
call
xchg
sub
sbbl
mov
loopne
push
mov
in
mov
dec
xchg
jo
rorb
pop
lds
scas
jo
cmp
or
adc
sbb
mov
sub
outsl
mov
aas
cmp
pop
sub
add
dec
arpl
shll
xchg
cs
cmp
in
lret
xchg
adc
xor
cmpsb
ds
cmc
or
jle
in
dec
into
out
fxch
les
mov
cmp
scas
and
fistpl
pop
inc
or
pop
cmp
xor
scas
jmp
push
mov
xchg
ja
inc
mov
sub
mov
push
sbb
filds
xchg
shll
mov
jns
mov
popa
jns
loope
xchg
addr16
in
dec
dec
fldcw
pop
lods
xor
xchg
ret
jno
pop
xchg
hlt
std
mov
fistl
into
push
pop
leave
mov
in
repnz
mov
xor
cmp
or
lcall
pop
mov
xchg
js
nop
jg
mov
inc
in
call
aas
or
sbb
push
mov
mov
jb
jmp
sub
decb
pop
clc
pop
mov
and
out
sbb
xor
out
popf
pop
rol
mov
push
inc
fcoml
cmc
pop
andl
mov
shlb
fldl
pop
pop
lret
push
mov
loope
inc
mov
popa
mov
sahf
sub
add
rcr
pop
lds
iret
sub
dec
inc
mov
sub
ret
inc
dec
mov
inc
xchg
out
mov
icebp
jl
inc
xor
mov
cltd
sbb
imul
mov
lea
push
xor
stc
push
push
mov
add
or
dec
jno
and
dec
inc
add
cmpsl
inc
xorb
loop
fiaddl
xlat
sahf
les
ret
mov
jmp
xor
mov
addr16
mov
mov
lds
int
cmp
and
inc
cli
push
hlt
mov
dec
mul
std
xor
or
ja
mov
pop
inc
mov
clc
jb
pop
fcoms
xorl
sub
sbb
daa
add
lcall
push
cmp
sub
xchg
arpl
stc
bound
jmp
sbb
mov
pop
dec
cmp
inc
rol
js
lret
sbb
adc
mov
icebp
pushf
push
aam
fbld
xchg
sub
out
xchg
pop
adc
pop
pusha
pushf
fsubp
lea
mov
sub
cmc
shrb
cmp
stos
add
hlt
rclb
cwtl
xor
ss
outsb
pop
int
or
xchg
test
lea
aam
inc
sub
gs
aam
aas
js
test
or
sbb
jne
push
rcll
loope
xchg
push
lret
iret
dec
push
mov
orl
mov
pushf
add
cmc
xorb
xor
sub
gs
xchg
fsubs
shrl
xchg
mov
int3
mov
push
pop
ficoml
and
mov
nop
pop
dec
mov
sbb
fwait
inc
icebp
cs
lods
jp
or
lods
sti
xor
lret
or
xchg
sub
jmp
xchg
xor
xchg
push
pop
fscale
and
xchg
or
and
cmp
cmp
imul
push
mov
xchg
adc
xchg
icebp
jnp
or
arpl
ds
xchg
aas
xor
cmc
outsl
pop
call
dec
pop
outsb
sbb
inc
call
stos
xor
and
insb
xchg
inc
mov
ljmp
out
push
lods
scas
mov
gs
outsb
mov
arpl
lock
loope
mov
push
or
outsl
js
push
in
pop
cmp
inc
jns
sbb
cmp
cmovg
jbe
sub
mov
or
xchg
xchg
fnstcw
sbb
stos
mov
jns
jecxz
arpl
dec
outsb
imul
stos
mov
jecxz
jmp
mov
ljmp
arpl
fistpll
jne
std
dec
mov
mov
pop
sub
mov
lcall
push
push
sub
out
pop
cmpsl
cmc
inc
aad
movsb
ds
addl
xor
int3
jecxz
rcrl
out
adc
inc
jb
adc
and
mov
std
ss
ljmp
and
out
or
je
mov
xor
or
xchg
inc
jecxz
incb
dec
repz
pop
lods
cs
pop
adc
das
orl
mov
dec
push
ss
adc
imul
mov
je
sbb
mov
mov
popf
gs
dec
cmp
loope
in
fldl
xor
dec
dec
pop
aas
frstor
fldz
lods
and
pusha
sbb
cmp
ret
out
gs
loope
cmp
icebp
ret
cmp
testl
cli
inc
mov
jp
popa
mov
or
xchg
mov
cmpsl
add
add
iret
mov
movsb
inc
xor
je
jge
jno
cli
movsl
shrb
gs
imul
xlat
cmp
aam
jmp
add
aas
popf
leave
mov
cmc
mov
pusha
ret
inc
sbb
pop
add
xchg
pop
lret
movsl
sbb
stos
jl
mov
pop
sub
sbb
mov
mov
fsubr
or
cmc
rclb
and
loopne
pusha
xchg
jecxz
pushf
mov
lret
popa
lock
pop
sub
pop
pcmpeqw
repz
xchg
lods
cmp
and
out
cmpsl
sbb
and
pop
sbb
adc
push
dec
rorl
xchg
divb
sbb
repnz
mov
sbb
ljmp
and
fcomip
push
repnz
sbb
adc
and
movsb
out
cmp
rorb
mov
mov
mov
leave
arpl
movsb
jge
movl
jge
xlat
rol
dec
fcmovnb
inc
mov
adc
lret
mov
adc
lcall
hlt
pop
lret
test
ret
push
xor
in
gs
inc
icebp
je
les
mov
pop
pop
push
pop
popa
mov
dec
pop
adc
mov
xor
jmp
jp
in
or
xor
mov
es
mov
xchg
rcrl
sub
into
into
adc
jnp
loop
push
es
ret
movsl
pop
rorb
mov
insb
and
mov
in
mov
inc
sub
add
je
dec
push
jo
mov
sub
outsl
cli
adc
and
mov
pusha
add
mov
rclb
mov
int3
push
adcl
dec
mov
stos
lods
xor
pop
lret
out
out
leave
mov
jo
or
ss
rclb
fstl
adc
sub
push
push
xchg
repz
enter
push
and
push
movd
test
mov
scas
test
mov
sub
xor
nop
pop
and
xor
jg
lds
inc
insb
out
cmp
sub
scas
inc
or
fnstsw
mov
cwtl
iret
push
out
std
or
roll
imul
shl
adc
sbb
push
lahf
imulb
push
das
xchg
aam
lock
mov
sbb
in
and
or
enter
pop
add
das
mov
push
mov
das
stos
or
push
repz
jb
insl
fs
push
xchg
cmpsl
sbb
cld
fucomi
mov
fwait
xlat
out
and
sarb
dec
mov
or
mov
jb
std
sub
cmpsl
push
xchg
push
nop
mov
cmp
or
xor
aad
fistpl
scas
mov
pop
data16
nop
gs
xchg
xchg
aaa
xchg
in
imul
cltd
and
stc
insl
lcall
dec
sub
or
test
xor
ret
pop
cmpb
ds
fsub
dec
daa
cmp
xor
cmp
in
push
sarb
in
loope
ds
cmp
sahf
jno
icebp
int3
fs
int3
call
sbb
mov
das
sub
leave
mov
pop
adc
call
daa
cmpsl
mov
test
jns
lret
add
roll
jmp
sub
ret
sub
shlb
mov
jl
cmpsb
jb
sbb
fsubl
sbb
push
mov
stos
cmpl
pop
int3
aad
jne
addl
sub
insb
out
push
and
push
ja
clc
out
xchg
xor
call
repnz
inc
and
push
pushf
lret
mov
mov
movsb
fistps
and
jbe
fwait
cmp
or
sarb
add
ret
mov
mov
aas
jp
addb
aaa
fisubrl
imul
xchg
push
gs
loop
movsl
inc
and
daa
rcrb
xor
add
xor
stos
pop
movl
mov
lcall
push
mov
hlt
ret
push
inc
adc
xchg
ja
insb
psubusw
fdivl
ljmp
jbe
loop
lods
add
mov
mov
incl
mov
mov
insb
lock
popa
dec
jle
sub
mov
bound
or
lret
scas
and
mov
outsb
pop
cmpsl
dec
scas
cmp
out
das
push
addr16
testb
test
jle
dec
dec
push
shr
fabs
dec
mov
jns
shlb
out
movsl
adc
sbb
mov
in
fsubl
push
dec
fwait
mov
jle,pt
inc
sub
int
fcom
cltd
and
pop
js
fs
lock
cmp
jns
xor
inc
rol
cmp
scas
or
cmp
nop
es
jns
mov
addb
push
inc
sbbb
out
test
push
outsl
lret
mov
and
mov
jae
stos
pop
cmpsb
in
out
daa
adc
and
adc
int3
sti
fsub
call
jl
int3
lret
std
and
out
pop
pop
jb
mov
sub
cli
jg
and
mov
cmp
das
mov
jecxz
cmp
dec
push
or
push
adc
xchg
sbb
test
into
popa
jnp
popl
bound
lock
add
mov
or
arpl
pop
dec
or
loop
ret
das
xchg
scas
imul
push
jbe
add
movsl
jge
imul
and
mov
out
cwtl
jo
adc
cld
lods
xor
aas
stc
fwait
hlt
je
ja
mov
adc
add
cmc
pop
aam
daa
repz
pop
cs
adc
jge
jae
adc
dec
rcrb
sbb
dec
push
sub
mov
xorl
test
adc
pop
orl
fsubrp
outsl
adc
lret
cmp
add
dec
or
add
aad
xor
jo
loop
jbe
rcr
sub
rorb
repnz
mov
pop
pop
mov
xchg
outsl
inc
xchg
mov
xlat
jge
or
add
cmc
and
cwtl
shrl
pop
mov
mov
jns
mov
adc
xlat
xchg
inc
rorl
dec
or
inc
sbb
sar
push
mov
shll
dec
shlb
mov
pusha
sub
rolb
or
idivb
scas
testb
shlb
in
xchg
mov
inc
loope
fwait
mov
clc
add
mov
add
add
pop
or
or
mov
jbe
and
dec
or
or
pop
add
popa
les
and
mov
repnz
mov
stos
cmpsl
jbe
popf
mov
cs
push
adc
pop
mov
les
icebp
and
insb
std
mov
cmc
lret
and
cmp
cmpl
divl
das
test
sbb
or
or
mov
or
push
cli
sbb
icebp
push
int3
enter
repz
mov
jns
and
sub
cld
stos
insb
fcom
pop
add
lods
insl
push
inc
pop
add
es
fidivl
sbb
and
jmp
andps
mov
addl
insl
mov
mov
aad
xchg
add
lods
sub
call
jno
stc
cmp
push
mov
xchg
fildll
and
test
mov
xor
jo
std
test
dec
ljmp
push
lods
cmpsl
ficoms
add
mov
mov
jmp
js
xor
das
outsl
fcomps
dec
adc
test
push
xor
int
inc
push
jb
xchg
inc
cmp
in
stos
mov
mov
call
pop
and
movsb
fcompl
push
jae
mov
add
sub
adc
sbb
add
add
test
mov
call
sub
dec
push
hlt
push
cld
dec
cmp
arpl
lea
sub
pop
push
push
add
jnp
sub
fisttpll
out
mov
jae
jno
mov
xchg
dec
pop
pushf
out
inc
bound
insl
mov
stc
jge
bound
add
mov
push
sbb
loop
xchg
movsb
add
jl
leave
push
adc
imul
repz
sahf
cltd
pop
loop
mov
test
push
and
rolb
lcall
mov
cmp
adc
and
push
cmp
mov
dec
xor
fldl
adc
cmc
bound
and
xlat
mov
lcall
xor
lahf
in
popf
test
test
push
xor
dec
inc
ret
or
lods
js
popa
ja
les
popa
popf
pusha
repnz
inc
push
xor
xor
pop
pop
or
fimull
jnp
addr16
dec
cmpsb
xor
mov
jg
in
or
pop
loope
daa
mov
mov
test
add
mov
mov
mov
push
out
jns
push
jl
mov
rcrl
rolb
call
test
cmc
loope
xchg
lock
sbb
pusha
xlat
xchg
enter
xor
push
cmp
adc
insl
jg
add
addl
lahf
aaa
ljmp
mov
push
sub
jo
test
sbb
adc
fcoml
jbe
pop
repnz
mull
fiaddl
jp
rcl
or
inc
push
cmpsl
mov
jno
outsb
add
cwtl
xor
and
push
pop
pop
icebp
aad
out
sub
push
push
in
out
xchg
pop
mov
jge
add
pop
std
pop
dec
dec
add
test
xor
xchg
les
std
lock
andl
cmp
push
lret
mov
jle
popf
cs
adc
sbb
loope
addps
movb
xlat
inc
cmp
int
xor
mov
mov
pop
inc
cmpsl
idivb
movsb
mov
cwtl
push
xor
and
andl
push
mov
popf
xchg
jmp
je
jnp
andb
mov
cmp
push
or
mov
and
push
mov
push
fdivs
cmp
lahf
stos
cmp
sub
sub
cld
les
fildll
movsb
cmpsb
jecxz
pop
movsb
xchg
insb
addr16
xchg
sar
jge
adc
test
mov
rcrl
out
adc
rcll
jbe,pn
cmpsl
in
iret
in
popf
imull
test
fnstenv
and
movsb
add
fsubrs
jno
cmpl
fsubrl
xor
out
pop
jg
mov
scas
or
dec
arpl
lock
not
xor
push
dec
mov
mov
pop
aam
shrl
stos
sarb
mov
pop
out
rcr
xor
enter
pusha
mov
sbb
cli
xchg
xchg
movsb
test
inc
cmp
mov
push
mov
xor
stos
rcrb
push
inc
pop
jl
cwtl
jb
inc
inc
mov
or
mov
mov
jecxz
cltd
repz
lds
jg
sub
shll
out
inc
push
pop
pop
mov
adc
and
adc
sbb
cmc
pop
xor
adc
xchg
je
add
xchg
aaa
iret
hlt
cmp
add
mov
xor
and
je
add
repz
dec
or
mov
mov
xor
xchg
scas
addr16
xchg
movsl
lahf
fidivs
mov
dec
push
xchg
xchg
lea
sub
test
add
mov
cld
pop
lahf
outsb
push
ds
pop
stos
sahf
xchg
jb
xchg
fcom
ss
test
pop
in
leave
cld
imul
call
xlat
test
in
jnp
sbb
pop
xlat
lahf
add
adcl
pop
lret
push
cmpsb
out
sysret
xor
pop
int3
jb
ss
sub
movsb
inc
jns
cmp
cmpl
mov
aas
or
push
xorb
xchg
adc
loopne
stos
push
leave
xchg
ljmp
jmp
shrb
rorl
push
dec
xbegin
adc
add
pop
cld
dec
mov
mov
cld
ret
ja
jo
into
sbb
cmc
adc
sahf
cwtl
cmc
adc
out
test
ret
sub
xchg
and
gs
fdiv
jo
notl
test
aad
shll
mov
mov
loopne
sbb
and
int
lods
ficompl
xor
lahf
pop
xlat
cmp
cmp
or
push
int3
pop
jmp
pop
pop
cltd
and
hlt
bound
and
ja
les
xchg
push
in
rorb
stos
hlt
les
adc
push
xor
out
ss
push
pop
xor
xor
gs
jne
sub
push
in
mov
mov
or
xor
bnd
sub
ret
dec
inc
push
mov
dec
xorl
cmpl
jl
frstor
or
jne
or
mov
sub
cli
mov
aam
add
rolb
in
xlat
insl
movsb
fpatan
adc
daa
sbb
inc
sbb
or
ljmp
add
repz
jge
mov
add
daa
mov
mov
mov
insl
mov
adc
sbb
sbb
ret
rolb
sbb
movsb
je
and
cwtl
sub
into
xor
adc
rcrl
in
adc
dec
rorl
cmp
subl
lret
xor
push
xor
cmpsl
pushf
adc
and
xchg
test
mov
push
out
jg
hlt
mov
pusha
push
inc
inc
mov
xchg
cli
add
jge
adc
ret
repz
out
adcb
push
fs
cmp
xlat
out
mov
test
mov
outsl
out
pop
or
cmc
lods
and
mov
clc
lods
cltd
fbstp
push
sub
or
imul
add
mov
aad
mov
mov
fdivp
jne
subl
adc
cmp
or
orl
mov
sbb
rolb
rcrb
lahf
add
out
ds
lea
add
adc
loop
jno
je
and
push
jnp
ds
cld
lret
lahf
imul
xchg
imul
decb
sbb
jge
mov
push
pop
jmp
xchg
je
in
and
mov
adc
adc
out
xchg
push
sbb
dec
xor
mov
add
mov
cmc
in
adc
frstor
xchg
pop
lret
outsb
rcll
xor
jle
mov
xor
sbb
movb
int
imul
daa
stos
and
sbb
adc
cltd
push
stos
inc
inc
add
insb
js
adc
jb
aas
push
xor
fsubl
dec
xorl
imul
js
jmp
mov
repnz
add
rcr
xchg
test
push
test
cld
repnz
insl
sbb
jno
popl
mov
lret
rclb
fldcw
ds
iret
arpl
mov
dec
xor
inc
jecxz
add
hlt
ds
orb
fldcw
out
pop
scas
lret
jns
pop
cmp
xlat
shlb
jnp
jl
mov
and
pop
sbb
int
imul
mov
lds
std
jno
push
lock
insb
shlb
dec
pop
mov
movsl
dec
mov
mov
push
or
mov
pop
ror
outsl
and
addl
mov
and
dec
mov
sub
and
stos
mov
into
int3
cmp
test
test
push
mov
xchg
add
jge
pushf
cmp
loop
adc
xor
aam
out
ret
jo
cmpb
js
negl
push
ss
pusha
movsb
push
ret
cmc
sbb
lret
pushf
mov
push
adc
push
rcrb
inc
sti
and
adc
in
xor
lods
mov
pop
shll
int3
rol
xchg
ja
xchg
fmul
insb
addr16
cmp
push
add
inc
je
mov
shll
mov
lods
and
xor
xchg
testl
popl
pop
pop
sub
pop
shl
jnp
xchg
mov
inc
mov
ljmp
jge
jge
or
mov
negl
xor
movsl
jns
inc
out
std
lcall
cwtl
test
outsb
lcall
fstl
in
test
pop
jl
out
mov
push
sahf
add
loopne
lret
jae
sbb
bnd
les
and
and
xchg
je
aad
xchg
clc
add
adcl
call
ret
movsl
aad
dec
adc
enter
jle
hlt
cmp
test
lods
push
shlb
mov
ud0
adc
notb
push
xchg
out
pop
lret
push
dec
push
fwait
adc
sub
push
leave
sbb
lods
callw
mov
sub
push
dec
lcall
pop
loop
ja
jae
lret
hlt
adc
lcall
mov
test
mov
mov
ds
test
rep
icebp
xlat
rcl
clc
pop
fistl
lcall
repz
out
mov
scas
jnp
out
lahf
ljmp
les
xchg
insb
imul
icebp
hlt
mul
in
js
sbb
add
shll
int3
jb
adc
sbb
xor
lds
xchg
xor
cmp
mov
mov
cltd
or
repnz
sub
gs
in
incl
lret
jnp
pop
movsb
pop
fistpl
or
test
mov
stos
mov
test
fdivl
imul
push
fdivr
cmpsl
pop
ja
jae
insl
ds
fisubrs
pop
cmpb
push
adc
jp
das
add
mov
jb
adc
and
lcall
mov
arpl
jl
insl
sub
or
daa
push
mov
pop
cmc
add
pop
sbb
cmc
mov
lahf
mov
mov
inc
add
push
int3
fstpt
pop
lcall
aaa
dec
mov
test
push
cmp
xor
jne
shrl
imull
sarl
sbb
popa
cmp
cmp
dec
movsb
mov
add
xchg
and
jae
jecxz
fbstp
lods
and
scas
push
add
jo
pop
jl
xchg
sub
leave
mov
scas
icebp
lods
cwtl
mov
sbb
cmp
repz
cmpsb
xchg
mov
mov
lods
cmp
sbb
jns
nop
into
js
lods
sbb
dec
mov
push
jbe
lahf
xor
mov
rcll
or
xor
or
mov
rorl
movsb
imul
fldt
fsubrl
or
pop
int
in
or
push
or
mov
into
or
popa
jno
push
out
sub
cmp
jae
pop
sbb
test
mov
inc
push
xor
sbb
mov
mov
addl
push
sarb
ljmp
loop
test
fcoms
mov
js
ljmp
lods
mov
divb
xlat
push
jmp
adc
jg
pop
rolb
mov
sub
cmp
scas
xchg
mov
add
and
lods
push
shl
cmp
and
pushl
inc
pop
fistpl
lock
arpl
dec
mov
outsl
stos
jae
movsb
fistl
jecxz
xor
mov
nop
mov
dec
sub
nop
sbb
cld
lret
mov
scas
cs
fnstenv
ret
xchg
mov
jle
cmp
and
movsb
xor
push
xor
jno
mov
xor
jb
mov
sbb
fistpll
cwtl
xor
orl
stc
in
pop
mov
hlt
or
mov
cltd
push
call
mov
scas
adc
hlt
or
dec
pop
rep
ljmp
adc
push
repz
pop
add
in
ss
dec
insb
jge
popf
in
and
jecxz
test
xchg
pop
mov
push
cltd
arpl
xor
cmpsb
inc
imull
cltd
push
faddl
sub
out
mov
dec
cmp
push
jge
lods
in
test
insb
pop
or
pop
ret
xchg
and
pop
fwait
xchg
fldenv
mov
scas
lea
in
xchg
mov
outsb
sahf
ljmp
and
hlt
loopne
inc
and
pop
jg
or
inc
mov
dec
pusha
orb
mov
loope
popf
xchg
ret
cld
rcll
pusha
mov
mov
je
inc
rcll
bound
loopne
jp
ret
movsb
pop
gs
popa
jns
push
and
jb
out
insl
or
dec
sti
repnz
in
xchg
test
xchg
loop
cmp
repnz
clc
pop
call
jno,pt
mov
jbe
inc
inc
lret
dec
sbb
ja
sbb
sbb
mov
pusha
popf
roll
daa
dec
xchg
mov
xchg
xchg
outsl
out
push
sbb
jle
cmp
cmpsl
adcb
xchg
loopne
push
xchg
gs
mov
cmp
int3
cs
cli
inc
mov
or
mov
mov
pop
sti
ljmp
mov
gs
into
imul
push
sbb
pop
or
insb
sbb
mov
dec
lret
mov
loop
jbe
xchg
mov
inc
jmp
in
loope
mov
sub
mov
push
int
mov
cmp
loop
mov
or
jg
cs
pop
fsubrp
popa
add
lret
das
and
les
xchg
mov
xchg
mov
div
add
in
pop
pop
in
scas
sub
adc
inc
sbb
sub
cmp
pusha
or
js
add
push
and
into
inc
add
fists
push
inc
inc
sub
pop
dec
add
cmp
xor
shrl
rcll
lret
mov
and
iret
xor
inc
jns
or
popa
mov
sbb
inc
nop
and
iret
cltd
movsb
push
mov
mov
clc
xor
mov
mov
in
daa
popa
inc
mov
mov
sub
mov
inc
dec
xchg
outsb
test
int3
xor
imul
mov
cmp
add
sub
fbld
jnp
ljmp
dec
cmp
sar
test
jbe
fstps
cmpsb
and
insl
pop
fcmovnu
pop
inc
pop
test
sub
cmp
lods
addr16
push
pop
js
xor
jecxz
testl
cmpsl
loopne
sbb
imul
test
adc
fimuls
ret
mov
movsb
pop
adc
or
push
cs
jecxz
xor
test
popa
je
push
mov
inc
repnz
sub
xchg
popa
sarb
jb
sbb
lcall
ret
cmp
xchg
adc
mov
mov
add
hlt
adc
roll
lret
inc
in
loope
sub
cld
cmp
mov
add
cmp
shlb
call
loopne
lret
outsl
ror
inc
cld
adc
push
daa
jne
std
mov
fs
push
popf
in
cs
xor
stc
out
jns
push
lock
inc
loop
cmp
hlt
xchg
inc
or
and
push
adc
xchg
push
lcall
repnz
shl
mov
cli
into
ret
faddl
test
popa
lea
mov
std
movsb
aas
mov
jbe
push
loop
xor
jne
sbb
push
data16
xor
std
and
in
push
mov
das
insb
xchg
or
mov
mov
dec
cmp
cmp
push
pop
stos
pop
inc
cmp
xor
xchg
or
dec
imul
cmp
add
mov
hlt
push
xchg
sbb
outsb
mov
fdivl
scas
and
loopne
leave
iret
lret
adc
xor
pop
imul
faddl
mov
sub
pop
mov
hlt
fwait
mov
jl
orl
mov
sbbl
sub
push
imul
hlt
lds
loop
out
test
dec
push
arpl
mov
push
xchg
sbb
test
cwtl
xor
and
lods
fiaddl
xor
icebp
push
jge
les
jb
xchg
imul
add
inc
stos
xor
jnp
inc
mov
add
pop
test
aad
leave
ret
cmc
mov
push
jl
iret
imul
mov
jae
xorl
sub
rol
std
fcmovu
shll
mov
fmul
shlb
sub
psubsb
orl
jl
push
mov
xchg
cmpsl
adc
lea
push
inc
xchg
add
sub
xchg
pop
notb
adc
xor
xlat
jmp
mov
int
adc
mov
ret
mov
jge
add
push
xchg
pop
dec
xor
dec
stc
mov
jae
les
jmp
adc
mov
xor
outsl
xor
fdivrp
pop
je
mov
repnz
cs
add
test
sahf
mov
jmp
aam
test
js
or
inc
aam
fs
and
sbb
scas
out
lods
pop
xchg
aad
sbb
sub
or
sahf
jecxz
stos
leave
fisttpl
or
push
push
ret
jne
int
orl
test
cli
lret
cmp
or
mov
addl
pop
jae
dec
out
les
movsb
add
shrb
and
clc
cs
stc
pop
sarl
xor
adc
cmp
xchg
inc
mov
pop
xchg
dec
jns
je
push
mov
gs
das
adc
and
imul
test
or
fsubrs
push
dec
mov
cli
mov
xlat
test
cmp
xor
test
roll
mov
inc
xchg
mov
or
dec
daa
dec
daa
add
mov
ljmp
mov
cli
scas
lahf
fsts
loop
and
jbe
and
mov
lods
mov
or
insb
hlt
std
roll
aad
pop
lea
cli
push
dec
addb
jmp
adc
mov
sub
addr16
movsl
insl
daa
push
xchg
xchg
rcrl
sub
or
cmpsl
inc
repz
lea
or
repz
mov
les
test
push
loop
sub
cmp
xchg
je
mov
xchg
adc
xorb
cltd
mov
mov
subb
xchg
mov
mov
popf
pop
cmp
push
stc
xchg
add
jge
addr16
cmp
iret
sub
incb
roll
mov
push
and
cmc
push
mov
data16
cmp
xchg
lret
sbb
lds
lcall
push
cli
dec
xor
repnz
int3
imul
cmp
jo
mov
jns
sbb
adc
sti
or
lret
xchg
aas
add
push
js
pop
shrb
push
mov
jmp
int
xchg
mov
mulb
sbb
add
mov
pop
dec
int3
or
stos
rcll
xlat
sub
ds
adc
push
add
jg
rcrl
gs
push
stos
out
jle
cmp
aas
fstpl
cs
gs
aas
mov
sub
sbb
cmp
ja
jo
sbb
outsl
cmpsb
pop
adc
push
aaa
scas
ficomps
push
repnz
pop
rolb
test
xchg
in
sub
push
xchg
into
cwtl
pop
push
inc
cmp
dec
cltd
jmp
inc
movsl
test
cmp
mov
ljmp
sbb
out
enter
pop
pop
jb
pushf
fprem
fs
add
rcr
rolb
les
cmp
pusha
out
lret
cmp
shll
out
shlb
test
xor
inc
add
popa
pop
sbb
xchg
mov
notl
scas
mov
sbb
pusha
adc
jb
iret
or
mov
sub
push
insb
mov
bound
push
or
jl
jmp
mov
add
inc
mov
rclb
call
dec
fwait
iret
imul
inc
mov
out
ret
push
rcll
mov
mov
pop
xor
pop
icebp
cmp
shll
lods
call
xchg
adc
les
rorl
test
push
movsl
pop
movsl
popa
movsl
mov
test
add
xor
adc
jne
popf
and
push
sbb
fstps
pop
jbe
out
cmpsb
xchg
enter
rcrl
lea
addr16
faddp
out
push
cmp
xor
repz
loop
dec
mov
mov
mov
mov
xor
pop
pop
shll
mov
adc
mov
and
test
test
ret
xlat
in
shlb
repz
dec
jno
test
scas
sbb
jb
mov
adc
inc
add
inc
mov
xlat
test
pop
fstpt
dec
push
andl
mov
jle
into
adc
out
xchg
xchg
pop
fs
push
sbb
jno
jno
in
data16
xor
mov
sbb
sbb
mov
lock
int
sub
sbb
jne
mov
testb
xchg
cs
ret
js
fcoms
jb
sub
ret
xchg
xchg
add
pop
pop
push
inc
add
imul
icebp
fcmovnbe
ja
std
mov
pop
or
lahf
push
adc
inc
pop
outsl
xor
xor
in
in
adc
jbe
shlb
sbb
cmpl
add
fldl
je
jl
and
incl
fnstenv
nop
outsl
add
mov
aaa
lock
dec
es
xor
aam
sub
inc
inc
stos
imul
cltd
pop
cltd
mov
mov
xor
data16
shl
outsb
in
jle
xchg
aam
mov
mov
add
push
out
cmp
mov
xchg
pop
fists
ret
test
pop
leave
test
sub
out
int
mov
fdivrl
jecxz
add
dec
pop
ja
shlb
mov
push
jmp
pop
or
sahf
sti
xor
mov
fadd
cmp
mul
or
xchg
mov
jnp
jecxz
and
nop
mov
sub
mov
inc
in
fcmovne
lret
aaa
mov
jecxz
call
sub
pop
or
push
add
cmpsb
and
adc
or
lret
lcall
jae
icebp
push
xchg
lcall
stos
xchg
add
gs
mov
cld
pushf
xchg
pushf
mov
fdiv
icebp
mov
fs
pop
mov
or
mov
jno
push
pop
mov
mul
test
pop
scas
aas
jecxz
loop
in
xchg
pop
mov
fmulp
push
imul
cmc
and
bound
cmp
gs
jecxz
sbb
cmpsb
cltd
lret
fwait
arpl
and
into
xor
inc
sub
dec
adc
in
pop
mov
in
adc
jecxz
clc
sahf
adc
mov
and
out
jae
mov
or
push
hlt
mov
jge
sub
push
std
adc
lods
repnz
dec
sub
jle
mov
shrb
add
xchg
mov
sub
jne
mov
sbb
pop
add
xchg
sbb
ret
xchg
xor
pop
cmp
inc
push
iret
cmp
aaa
scas
pop
and
aaa
repz
jecxz
mov
rcrl
dec
mov
test
inc
add
pop
and
xchg
ja
or
mov
clc
lods
pop
lock
lods
mov
fs
repz
fnstsw
loop
mov
and
shl
faddl
lret
out
rorl
jo
test
int
stc
dec
xchg
int3
es
add
xlat
xor
add
cmp
pop
jle
mov
push
mov
inc
mov
sub
cmp
imul
add
repz
aas
clc
dec
stos
pop
shlb
adc
push
push
popa
sbb
imul
cs
or
xchg
ret
mov
dec
icebp
into
push
add
pop
shlb
dec
aaa
cmc
movsl
fidivrl
insb
mov
dec
xchg
xor
add
mov
movsb
movsb
aad
lcall
aam
add
push
push
pop
pushf
mov
jle
jge
push
mov
push
stos
cmpsl
inc
cmp
jg
sub
movsb
loop
je
mov
lds
orb
jp
mov
mov
clc
xchg
mov
dec
outsl
sub
mov
inc
cmp
sbb
fmull
lods
jne
aas
scas
mov
xor
or
lcall
les
mov
xor
out
push
jne
jmp
aam
add
cmp
dec
popa
cmp
ret
xor
nop
jb
sbbb
popf
dec
cld
inc
shl
dec
or
mov
int3
mov
xor
mov
hlt
push
push
sbb
xor
inc
adc
rol
pushl
push
aas
movsb
pushf
inc
test
push
push
jne
fnstsw
jle
cmp
lea
mov
int3
mov
rorl
push
and
sbb
mov
andb
rclb
aaa
pop
orb
rcll
mov
ret
sub
dec
cmpsb
jbe
xor
adc
cmp
rcrl
je
mov
push
xor
add
std
ficoml
mov
push
and
test
mov
scas
in
jmp
es
fisttpll
pop
ror
pop
push
outsl
inc
jne
repnz
jg
sub
xlat
mov
push
mov
fucom
fiaddl
push
cmp
into
jl
mov
pop
xchg
lock
nop
mov
mov
loop
fsts
gs
std
repnz
sahf
mov
pop
xor
repz
inc
cmp
xor
mov
out
clc
xchg
push
jns
jmp
or
add
test
gs
test
gs
adc
jl
repz
jge
icebp
fcmovne
xor
add
and
mov
ljmp
sub
fcomi
les
jo
dec
add
xor
xor
data16
mov
aaa
fbstp
std
and
mov
mov
gs
movsl
std
mov
pop
cmp
mov
pusha
mov
mov
and
lods
stos
mov
aam
push
jns
in
lds
jnp
sub
test
xchg
jbe
fwait
imul
loop
sbb
fst
sahf
sbb
push
cli
movsl
rcrb
gs
imul
lret
flds
andb
and
fnsave
mov
gs
cli
push
pop
cmp
adc
loop
adc
inc
pop
gs
and
aam
out
aas
mov
xlat
cmp
fisubs
xchg
das
test
cs
dec
mov
push
push
cmp
mov
xorl
add
rcrl
xor
add
loop
imul
pop
imul
rcr
jae
popa
stos
inc
mov
nop
leave
pop
pop
push
xchg
sub
testl
in
popa
pop
negb
adc
pop
ss
stc
daa
pop
pop
stc
inc
jg
lock
leave
push
xchg
insl
daa
or
and
ficoml
pop
incb
bound
lds
pop
cld
out
lods
repz
jbe
jecxz
test
jae
push
std
sahf
insl
xchg
dec
test
add
or
shrl
xchg
mov
jmp
and
and
mov
out
xchg
mov
stos
jmp
jg
ja
jp
xchg
ja
adc
inc
dec
jge
rcrb
shl
and
jnp
jmp
cmp
shl
inc
xchg
add
sub
test
cli
outsl
iret
mov
and
out
lds
outsl
cmp
cwtl
push
divl
ret
std
jl
in
imul
pop
pop
cmpsb
in
jno
pop
jae
mov
scas
stc
mov
leave
or
sti
cmp
insl
or
sub
sbbb
stos
pop
sbb
pop
sbb
push
jae
xor
push
mov
push
and
mov
rol
push
imull
loope
stos
sub
idivl
and
or
mov
mov
adc
mov
fwait
hlt
inc
int3
addr16
adc
mov
inc
movsb
incl
push
mov
incl
pop
insb
cmp
pushf
lea
bnd
dec
addr16
imul
jg
sbb
ds
and
dec
mov
js
or
scas
sbb
call
add
mov
outsl
jbe
ss
dec
iret
sbb
out
in
cli
js
sti
shlb
lret
and
add
jp
cmpsb
lea
test
pushf
mov
jo
and
fcoml
out
test
fcmovnu
or
paddusb
mov
cmp
stos
scas
mov
jmp
push
cld
jnp
aad
pop
insl
jg
push
push
cli
dec
jg
mov
xchg
pusha
nop
inc
jle
scas
pop
pop
add
out
cmc
int
and
mov
outsb
rorl
out
dec
jg
mov
movsl
adc
shrl
sar
std
rcl
pushf
adc
call
and
loop
jne
mov
push
sub
cmp
or
pop
or
jbe
js
das
lret
mov
int
sahf
jnp
push
inc
gs
lahf
sub
xchg
xor
mull
es
mul
testb
fwait
sbb
xor
rolb
sub
outsl
mov
dec
xorl
test
pop
iret
pushf
fwait
js
dec
call
js
xor
call
jl
mov
sti
sub
lea
sub
dec
xor
mov
fcomip
cmp
dec
pop
mov
mov
fcomps
mov
arpl
int3
mov
cld
shll
pusha
shrl
push
lds
mov
das
push
int3
insb
hlt
xor
mov
sub
xchg
push
out
gs
mov
push
shlb
scas
cmc
or
imul
jge
jge
jno
insb
mov
imulb
leave
adc
and
shll
sbb
stc
dec
insb
pop
fcomi
mov
xchg
mov
inc
outsb
mov
or
sahf
stc
xchg
cmp
pop
pop
dec
jl
lds
icebp
rep
adc
dec
aas
sti
js
dec
fld
cmp
jne
mov
xchg
cli
lret
andl
clc
sti
outsl
gs
aam
pop
cmp
lock
test
mov
jb
sbb
inc
sub
pop
pop
movsb
bound
jo
push
push
dec
inc
aam
test
push
cmpsl
aas
js
lahf
xchg
cmp
jg
arpl
inc
inc
or
sbb
jo
dec
iret
sub
call
cli
pop
dec
mov
lea
or
inc
fbld
cli
or
fstps
adc
cmp
int3
xorb
adc
mov
adc
inc
add
sub
xchg
mov
popf
daa
in
cmc
lods
adc
cmp
mov
or
lods
add
loopne
add
dec
cmp
cs
mov
add
outsl
mov
in
lods
xchg
jbe
jno
jae
sub
or
dec
pop
mov
add
sti
ficoms
dec
mov
mov
sub
pushl
xchg
mov
add
sbb
sub
jns
mov
test
mov
cli
pop
shr
adc
sub
dec
mov
or
add
into
fsubrp
cwtl
or
clc
je
into
mov
mov
inc
cmp
pop
push
sub
loop
xchg
insl
aas
repnz
add
ss
jmp
push
sbb
mov
xor
adc
test
inc
pop
push
push
pop
mov
xor
sub
push
sbb
or
gs
xchg
repnz
pop
cmp
xor
cmp
pusha
in
pushf
jl
cli
dec
jmp
ss
nop
pop
or
mov
es
add
sbb
inc
jnp
mov
js
hlt
aam
das
sarl
jo
pop
jo
shrl
dec
popf
mov
mov
sub
in
icebp
sub
jnp
jmp
test
dec
jns
lods
pop
popa
das
xchg
dec
inc
dec
jne
xchg
lock
fneni(8087
push
mov
and
fimull
mov
loop
cmpsb
cltd
xorb
pop
dec
mov
jecxz
mov
loopne
pop
ja
adc
sbb
xlat
pusha
ficoms
push
xchg
dec
cmovp
push
scas
in
push
push
pop
cmp
pop
in
inc
sbb
mov
rol
cmpl
cmp
and
loopne
jo
mov
and
std
add
xor
jo
and
inc
nop
je
adc
xor
adc
outsl
sub
ret
fadd
cmpsl
sub
rep
mov
sub
mov
mov
pop
cli
adc
rol
aam
add
push
xchg
lods
xor
mov
push
lods
ror
pop
push
mov
jl
hlt
scas
push
mov
lahf
mov
xchg
mov
cmp
out
test
lods
jo
jo
pop
jle
arpl
or
or
rorb
sbb
aam
jb
add
xchg
mov
dec
enter
sub
sbb
and
xor
sbb
ds
sbb
movsl
std
insb
xor
jmp
jge
cmpb
sbb
ljmp
mov
cmp
sub
xlat
mov
int
cmp
pop
cli
test
sbb
jb
insl
pop
sahf
enter
aaa
lret
pop
cmp
shll
mov
sarb
jno
jmp
mov
mov
pop
mov
je
mov
outsb
mov
or
xchg
mov
scas
or
ja
fmull
xchg
jmp
cltd
and
pusha
jl
pushf
inc
cli
xor
dec
and
imul
test
push
pop
iret
int
lret
aas
imul
inc
jb
inc
push
or
cmp
mov
daa
in
das
adc
sbb
xchg
pop
add
push
inc
fwait
push
pop
jno
lock
icebp
cmpsl
cs
div
cltd
fcmovnb
andb
std
jg
xor
mov
xchg
loope
leave
jl
ret
xchg
loopne
stos
pop
mov
push
xchg
push
push
popf
lock
int
fxch
mov
jmp
lods
add
outsb
jmp
lret
rol
push
leave
out
das
adc
inc
bswap
rcr
inc
xchg
dec
andl
shll
adc
andl
mov
xchg
pop
mov
sahf
movsl
arpl
inc
jmp
int3
add
mov
jno
xchg
test
fisubrl
fwait
inc
lcall
add
insb
jecxz
mov
sarl
loop
xchg
mov
orl
cmpsb
adc
jp
loopne
out
ret
imulb
jb
rcrb
jle
dec
jmp
or
in
cs
std
imul
cmp
repnz
add
cli
or
pop
xchg
xor
fwait
xor
add
push
mov
in
ficoml
leave
int3
adc
es
jecxz
mov
cmpsb
out
jge
lcall
push
scas
sbb
dec
addb
xchg
mov
adc
push
fwait
divb
in
push
inc
mov
mov
mov
or
adc
pxor
jmp
inc
push
jg
ret
sbb
hlt
or
into
and
sub
call
push
mov
push
cmp
push
mov
push
xchg
adc
jno
push
cli
inc
out
xor
fsts
xchg
out
jnp
into
je
sbb
stc
mov
push
mov
test
ds
sub
aam
leave
pop
mov
jae
or
lahf
xor
in
mov
je
outsl
add
mov
iret
push
push
imul
movsb
adc
lds
aaa
mov
jno
adc
add
sbb
lcall
mov
dec
fisttps
ja
mov
test
mov
lods
daa
or
clc
pop
gs
sahf
fbstp
xchg
es
jle
xchg
inc
sbb
repnz
mov
repz
jnp
scas
jmp
xlat
pop
dec
lret
repnz
shlb
pop
jne
mov
pusha
cld
jl
cmp
lock
xchg
bound
xchg
ljmp
out
push
pop
lret
clc
jl
addr16
jg
or
popf
sbb
stos
outsl
fs
or
nop
leave
hlt
adc
and
xchg
faddl
dec
stos
int3
xor
mov
mov
dec
fwait
stos
cmp
jbe
inc
out
jno
and
inc
test
jno
fistpll
stc
and
gs
lds
movsl
data16
pop
shll
test
mov
xchg
and
inc
push
fsts
mov
mov
arpl
inc
push
lret
sbb
xlat
call
test
add
les
sar
xchg
mov
or
mov
mov
shl
shlb
pop
lret
lcall
shl
pop
mov
dec
dec
adc
push
cwtl
das
jl
movsb
lods
add
jns
jle
gs
push
cmp
mov
cmc
aaa
dec
nop
in
xlat
pop
lret
mov
outsb
xor
jb
push
cmp
jne
fistpll
dec
aas
pusha
jb
loopne
pop
test
push
xchg
orb
ret
pusha
push
test
xchg
lods
nop
outsl
repz
repnz
xlat
xlat
jmp
loope
into
xchg
push
roll
inc
stos
fcmovu
out
xor
sbb
sbb
shll
push
scas
ficomps
sbb
cmpsl
and
xchg
sbbl
mov
dec
sub
in
push
sub
outsl
cld
imul
lock
and
cmc
cmp
stos
and
xchg
lea
mov
aaa
daa
add
cmp
pop
lcall
aad
jno
pop
hlt
enter
cwtl
es
call
mov
stos
add
rcrb
push
ds
les
jp
sub
xor
and
movsb
dec
test
xchg
and
adc
mov
enter
sub
adc
stos
imul
xchg
mov
repz
adc
mov
addb
test
add
push
pop
in
adcl
or
out
lret
clc
cmovg
gs
pop
das
inc
jb
gs
jae
lock
mov
adc
mov
or
pop
sbb
add
lds
sti
bound
sub
out
into
sti
push
scas
push
cmp
psrad
inc
in
outsb
mov
mov
cltd
and
cmpl
stos
dec
push
ret
inc
rorb
xor
jg
out
xchg
call
pop
dec
adc
xchg
ret
aad
jns
mov
aas
push
xor
sub
in
call
jb
std
les
and
push
shlb
mov
je
add
or
sub
sub
or
push
bnd
pop
fcompl
or
xor
jle
pop
xchg
dec
and
jecxz
xchg
jecxz
mov
xchg
push
les
call
lret
mov
cmpb
xchg
in
or
or
sti
jp
out
add
lcall
mov
lods
insb
outsb
add
mov
aam
dec
testl
icebp
int3
sub
sbb
cmp
pop
jb
sbb
adc
inc
rol
and
repz
adc
sti
mov
mov
mov
aas
loopne
lods
push
lahf
push
mov
arpl
popa
movsl
lret
fwait
jb
movsb
pop
mov
jae
scas
xchg
std
imul
pusha
mov
jge
loop
or
push
iret
mov
cmp
adc
jns
iret
sbb
int
mov
adcb
aad
push
shll
inc
mov
arpl
adc
pushf
xchg
icebp
outsb
push
lret
inc
dec
cld
or
and
xlat
into
out
ret
mov
push
jge
xchg
out
nop
adc
push
dec
rolb
je
and
pusha
jg
sub
add
and
das
shufps
clc
push
in
sub
mov
ja
lea
mov
mov
lcall
mov
push
in
pop
jae
mov
mov
jmp
popf
dec
dec
lcall
inc
inc
lds
jne
js
aas
inc
repz
sub
or
xlat
repnz
push
xchg
lock
push
insb
mov
shl
leave
or
popf
mov
adc
push
dec
mov
iret
inc
out
stos
jmp
xchg
push
xchg
shll
pop
and
data16
mov
rolb
mov
repz
fadds
dec
sub
fimull
mov
add
cmp
or
fidivrl
xchg
sbb
xor
in
stc
cmpsb
ja
cmp
cmp
lds
scas
mov
adc
pop
orb
or
cmpsl
je
mov
orb
xchg
inc
sti
adc
orl
push
mov
add
add
cmp
outsl
popf
je
cmp
insb
sub
add
outsl
cwtl
and
inc
aaa
arpl
hlt
add
push
test
mov
test
jg
xor
push
mov
int
inc
mov
aad
cmpsb
push
in
or
sbbb
into
pop
sbb
or
sbb
pop
arpl
addr16
movsl
adc
add
pop
je
mov
stos
sbb
scas
cmp
push
orl
mov
pusha
jnp
fistl
jne
in
mov
inc
xchg
cwtl
inc
jo
jecxz
jle
dec
jb
pusha
les
mov
xor
out
or
jmp
adcb
mov
aas
stos
cmp
aas
sarl
std
jbe
xor
test
fldt
cmp
bound
jp
into
test
rcll
pop
push
lret
mov
push
and
sbb
sub
jl
jbe
pop
sub
push
stos
pop
push
adc
pop
sbb
or
cmovae
js
sarb
xchg
rcll
into
lock
int3
mov
jecxz
arpl
test
mov
push
aam
adc
in
adc
nop
and
inc
mov
cmpsb
sub
arpl
sub
popf
out
sbb
fisubrl
xchg
mov
pop
mov
js
aad
imul
inc
popf
push
mov
fdivs
movsb
xor
lret
xchg
pop
jge
cli
jne
mov
hlt
mov
jo
adc
inc
xor
sbb
enter
push
dec
cmp
leave
adc
leave
movsl
mov
mov
scas
cmp
imul
adc
jnp
mov
roll
stos
inc
addr16
into
cmp
loopne
in
scas
add
test
fldenv
imul
loopne
data16
insb
pop
mov
xchg
sbbl
lea
fs
jle
std
and
mov
pusha
jmp
dec
xor
fisubrl
into
inc
test
push
inc
or
and
xchg
outsl
pop
dec
and
jg
pushf
mov
je
loopne
mov
fstpt
bound
fiaddl
jne
arpl
imul
add
dec
je
out
sahf
sbb
enter
cmp
jg
push
cmpl
loopne
xchg
mov
inc
cmc
pop
int3
cmpl
cmp
mov
imul
inc
mov
push
sbb
lods
pop
mov
jg
movsl
pop
dec
dec
rcrb
add
pop
mov
xor
gs
dec
pop
or
loopne
lods
imulb
add
movsl
repz
mov
sbb
sub
stc
imul
xor
test
and
push
pusha
and
jg
xchg
int
xor
jp
lret
sbb
arpl
in
jp
and
outsl
inc
pop
icebp
add
pop
push
leave
add
push
inc
fisttps
mov
dec
sahf
out
xor
jbe
add
cmpsb
test
add
and
inc
movsb
push
sub
daa
hlt
repz
push
cmc
out
adc
cmc
test
call
push
xchg
dec
hlt
push
jns
scas
xchg
mov
imul
push
in
push
ljmp
cmpsb
adc
adc
sub
xchg
cmc
inc
cld
gs
mov
insl
test
inc
push
ret
and
xchg
jg
in
jb
sti
xor
cmp
dec
push
xlat
je
cmp
in
enter
lds
nopl
sub
mov
xor
dec
jge
in
pop
popa
push
movsb
inc
insl
xchg
lods
in
das
mov
aad
les
in
insl
push
enter
xor
sub
mov
push
inc
sbb
mov
push
loope
push
sbb
jecxz
and
aad
mov
or
ret
mov
fwait
loop
dec
test
add
pop
mov
adc
dec
or
add
xor
cmp
in
and
fsts
push
mov
fs
mov
fldcw
js
jg
xor
pusha
mov
jmp
into
and
jb
push
ljmp
subl
sub
add
jns
stos
adc
out
xchg
inc
in
mov
pop
movsl
push
movsl
out
daa
lods
pop
add
or
cs
mov
jecxz
ret
movsb
adc
daa
movsl
adc
sub
mov
out
daa
jle
mov
int3
adc
xor
mov
frstor
ss
xorl
inc
inc
sti
data16
iret
lods
pusha
fstl
lret
dec
pop
call
stos
jo
inc
popf
fsubl
xchg
cs
js
fwait
add
popa
icebp
mov
cld
je
xor
pop
lret
mov
addb
add
add
ljmp
jmp
jmp
scas
movsb
dec
push
fidivl
jg
imul
cs
sbb
xchg
lahf
faddl
test
jp
cmp
push
cwtl
ret
lods
mov
mov
and
mov
inc
loop
sbb
iret
cmp
mov
mov
ljmp
mov
das
inc
sahf
mov
jmp
in
addr16
leave
sub
es
aas
inc
ds
jnp
sbb
int
inc
inc
push
dec
mov
or
dec
andb
fbstp
adc
out
mov
outsb
shll
pop
shll
lahf
std
or
sbb
rcrl
testb
mull
ja
or
jbe
loope
divb
iret
cmp
adc
scas
xor
cmpsl
jecxz
xchg
jne
outsb
in
jle
inc
test
mov
xlat
mov
aas
jne
test
mov
ja
mov
int3
insb
leave
arpl
cld
jmp
sub
ja
and
mov
icebp
movsb
test
jae
rolb
xor
or
insb
ljmp
das
icebp
dec
xchg
mov
ja
mov
dec
cltd
mov
or
xchg
insl
push
cmp
inc
into
subb
arpl
shr
pop
pusha
push
mov
pop
clc
dec
adc
mov
cmp
gs
cmpsl
pop
inc
xchg
push
dec
xor
pop
pop
push
and
sub
dec
pushf
fldl
add
dec
cmp
and
cmp
xchg
sti
aas
jmp
xchg
push
jmp
sbb
jbe
pop
out
int3
rcrl
xor
fadds
mov
inc
or
sub
fst
cmp
imul
mov
dec
inc
add
lock
adc
dec
sub
cmp
jns
mov
test
rcll
fadds
ljmp
lret
int
xlat
jo
sbb
filds
idivl
mov
imul
push
mov
mov
stos
or
out
mov
adc
out
test
xchg
cld
pop
insl
push
sahf
das
out
inc
dec
data16
add
fcmovu
insl
sahf
cmp
adc
inc
mov
js
and
mov
imul
push
dec
jle
int3
or
mov
out
jg
pop
int
ror
fmull
aas
jecxz
jge
mov
outsb
cmc
data16
mov
mov
mov
push
push
in
out
xchg
jo
sbb
jno
repnz
dec
adc
int3
dec
cmp
xchg
enter
sub
cmp
mov
jae
ret
mov
mov
xchg
gs
loope
test
bound
ds
push
adc
lea
xchg
fimull
lock
adc
sub
repnz
lods
ja
popa
sbb
sbb
sbb
shll
push
dec
jns
or
imul
ret
push
push
popf
adc
mov
icebp
mov
and
jl
pop
mov
loopne
cltd
or
jb
add
fidivl
jmp
jp
jns
inc
push
mov
push
test
insl
jae
push
loopne
xchg
sbb
aas
push
test
adc
pop
push
cmpl
lahf
stc
sbb
aad
jo
fnstsw
jecxz
stos
cmp
call
test
leave
je
cwtl
sti
mov
sub
pusha
sub
and
mov
mov
test
ret
outsw
pop
pusha
lods
lret
cmc
sub
test
mov
lret
dec
out
andb
das
ret
jmp
or
inc
addr16
out
push
repnz
mov
or
mov
adc
dec
xchg
bound
sbb
pusha
movsb
into
xchg
inc
and
mov
ficompl
scas
push
add
jmp
nop
sub
adc
das
js
imul
pop
arpl
or
jno
fs
leave
mov
test
das
lods
sbb
jge
fnstcw
sub
arpl
lods
shll
mov
ljmp
roll
clc
into
test
dec
dec
push
xor
in
mov
xor
int
out
out
negb
jmp
shr
cltd
in
mov
les
out
add
cmp
pushf
jns
repz
jbe
push
mov
mov
jmp
mov
clc
add
icebp
add
sbbb
out
call
ljmp
in
mov
pop
pop
sbb
dec
dec
jbe
mov
pop
dec
mov
ds
xor
flds
ljmp
push
jno
jb
jb
cltd
sub
and
int3
push
xchg
outsb
sbb
lock
xchg
iret
pop
inc
pop
movsb
adc
out
repnz
aaa
mov
notl
and
and
mov
or
repnz
jns
xor
sub
sub
push
in
outsl
outsb
jl
pop
pop
push
inc
jno
aam
or
movsb
mov
adc
ss
ret
jae
cmp
xor
inc
push
fldl
dec
mov
in
mov
test
pop
mov
mov
xor
or
dec
jl
inc
aam
or
leave
sbb
mov
pop
xor
sbb
mov
cmp
cmp
repz
push
pop
aaa
movsl
jp
insl
mov
sbb
mov
repz
into
imul
mov
int3
repnz
in
adc
mov
jae
js
cmp
or
sbb
rol
sti
stos
add
in
lods
loopne
fisubs
test
ret
mov
loop
and
je
mov
clc
ja
sub
out
rorb
popf
inc
xlat
mov
adc
push
mov
nop
push
lret
inc
orb
pop
dec
pop
lea
mov
xchg
outsl
dec
popa
cwtl
pop
push
lret
pop
fsubl
fcomps
psubusb
mov
xor
cltd
in
sub
in
jge
icebp
mov
cwtl
pop
adc
daa
popf
push
push
loope
or
fidivl
das
divl
in
bound
dec
jb
leave
es
pusha
sub
lock
pop
out
call
cmc
jno
mov
shl
xchg
sub
test
and
loop
mov
or
fnstsw
or
jno
push
mov
shlb
and
xchg
add
arpl
daa
gs
stc
inc
adc
aaa
xchg
shrl
std
aas
jp
cltd
test
dec
jg
mov
lods
jl
loope
lods
pop
cs
pop
cli
pushf
cmpsb
inc
cmp
daa
mov
int
add
jnp
mov
pop
xchg
sbb
and
outsl
out
add
call
imul
daa
push
xor
pop
jecxz
mov
test
fdivrp
repz
sti
in
pop
incb
inc
or
mov
or
xchg
imul
mov
outsl
xor
testl
je
push
cmp
out
shrb
popf
dec
push
cmp
inc
fldl2e
in
int3
xor
sbb
loop
pop
enter
sub
cli
nop
cmc
stos
xor
xchg
insl
insb
outsb
test
cltd
mov
jae
dec
adc
aad
mov
fisubl
mov
popf
cwtl
das
rcl
and
xor
orl
pop
pop
dec
insl
sbb
fildll
lret
pop
xchg
jmp
mov
push
lret
imul
sbb
subb
or
orb
sub
popf
mov
js
and
mov
add
push
push
in
dec
mov
add
lds
lods
push
pop
testl
adc
mov
mov
data16
lahf
xrelease
aaa
test
aam
mov
js
fwait
xor
les
sub
sbb
sub
push
cmp
mov
xor
das
dec
xchg
addl
sbb
cmp
leave
and
addr16
lret
lret
jb
jp
mov
jmp
adc
daa
ret
mov
mov
mov
scas
sbb
lock
sub
adc
or
cmp
jne
mov
push
in
jae
orb
in
push
jle
dec
aas
mov
sahf
add
repz
scas
inc
jb
or
sbb
dec
adc
mov
ljmp
jns
xchg
loopne
add
jle
jo
cmp
loopne
mov
xlat
flds
adc
call
jo
sarl
jnp
nop
adc
push
scas
pop
scas
push
pop
es
addr16
ror
cmp
fwait
testl
mov
rcrb
lahf
pop
prefetch
pop
push
out
scas
xchg
bound
mov
dec
flds
outsb
adcb
test
std
sti
int
dec
xor
xchg
ret
push
subb
cmp
lds
je
loope
jle,pn
xchg
pop
orl
ret
sub
jnp
sqrtps
or
sbb
sub
popa
ret
aas
inc
pusha
sub
pushf
aam
and
je
inc
jmp
or
sahf
sbb
int3
mov
test
ds
mov
and
push
dec
sbb
adc
xadd
mov
cltd
das
mov
or
ds
rolb
das
cld
imul
adc
mov
dec
fidivs
cld
push
ret
adc
mov
lcall
aad
and
jne
movsl
in
fcomps
dec
scas
sbb
rorl
xchg
inc
test
mov
xchg
es
mov
popf
xor
xchg
fsubrl
xor
push
shrl
idivb
adc
pop
sbb
xchg
dec
clc
push
pop
ja
or
insb
add
jb
jnp
sti
push
sbb
nop
cli
rorl
cmp
cmp
sub
or
mov
xchg
xchg
sahf
insl
and
dec
stos
lods
cmp
aad
xchg
dec
out
adc
test
mov
mov
cs
rolb
sub
repz
or
push
movsb
dec
outsb
jmp
sbb
xchg
inc
jo
xor
jge
fidivs
popa
mov
lahf
mov
xor
lds
xchg
testl
xor
pop
cmp
push
mov
push
lock
imul
xor
cmpsb
push
jl
stos
mov
je
mov
push
scas
xlat
int3
sub
mov
inc
neg
in
sahf
mov
sub
call
inc
ds
js
adc
inc
fsts
mov
out
mov
xor
and
push
outsb
pop
mov
or
add
cltd
adc
inc
mov
or
out
jmp
jge
cmp
xchg
xchg
inc
jle
shlb
das
inc
pminsw
sahf
or
jmp
in
call
ljmp
stc
out
sbbl
pop
jo
in
pop
loop
or
in
push
bound
add
mov
mov
jb
add
aas
xchg
aas
cld
push
cld
push
out
dec
jp
jo
inc
inc
push
xor
nop
addr16
call
mov
sti
push
inc
clc
jl
adc
testb
sbbb
sti
jge
in
adc
pop
or
fdivrs
in
or
jbe
jno
jg
leave
cmpsb
inc
sbb
push
ret
int3
mov
shll
imul
repnz
ljmp
rol
test
jle
mov
ja
jo
adc
push
dec
into
repz
fwait
xor
mov
sbb
mov
push
movsl
jle
push
dec
xor
inc
xchg
std
fmul
psrlq
add
imul
pop
ljmp
sahf
xor
out
mov
roll
int3
sub
popf
cmp
xchg
js
fmuls
call
jle
sub
and
mov
inc
scas
ret
dec
push
and
rorl
stos
gs
ja
int
cmpsb
pop
outsl
adc
jb
push
das
mov
sahf
sarl
inc
mov
pop
xor
jg
ret
adc
sub
mov
mov
xor
inc
fcmovb
jb
lret
inc
xlat
lock
out
ret
jl
ficomps
mov
iret
jae
inc
insl
xor
dec
dec
cmc
imul
xor
mov
scas
inc
mov
push
ss
in
std
and
jmp
lahf
mov
sbb
jno
push
sbb
jae
aaa
add
mov
sbb
adc
mov
lods
in
sbb
pop
push
jl
xchg
lahf
mov
ja
test
dec
adc
lcall
pop
jb
jp
and
rcll
sbb
mov
shll
insb
ret
cs
sbb
and
xor
or
daa
in
les
popf
xchg
nop
add
je
sbb
xor
cmpsl
gs
push
fwait
and
or
push
mov
sbb
iret
mov
xor
out
les
sbb
sbb
mov
mov
test
inc
outsb
jecxz
and
push
adc
movsl
xchg
xchg
inc
rcr
int
sbb
sbb
pop
mov
movsb
mov
int3
dec
jb
and
mov
int3
or
sub
cmc
xchg
popa
xchg
aaa
push
leave
add
inc
jno
dec
push
mov
test
push
fs
lahf
loope
add
cmp
jmp
into
out
push
inc
jle
sbb
aam
imul
add
jle
addr16
fists
sub
xchg
stos
xor
add
outsb
xlat
and
std
stos
pop
mov
inc
aas
jg
and
orb
dec
mov
cmpsl
outsl
add
adc
mov
imul
stos
inc
sbb
cmc
adc
pusha
faddl
stos
fildl
ret
jnp
cmp
call
dec
cmpsl
mov
sahf
mov
dec
fisubs
push
idivb
dec
lret
jl
xorb
push
lcall
xchg
js
ds
push
push
dec
push
mov
fs
cmc
and
aaa
jo
push
fwait
sbb
push
or
test
sbb
das
push
adc
cmp
mov
insb
jecxz
mov
pop
add
mov
cmp
loopne
ret
sbb
xor
scas
pop
inc
mov
mov
orl
in
imul
in
or
xor
jl
jl
enter
add
lock
sub
and
lret
pop
jle
mov
push
dec
and
into
leave
push
or
cld
aas
cmp
stos
adc
push
cmc
pop
sahf
scas
sbb
idivb
in
aam
sub
rorb
sub
add
jno
nop
xlat
pusha
lcall
xor
sbb
into
jbe
xchg
mov
adc
jno
cmp
adc
or
pop
mov
out
mov
imul
mov
stos
fst
mov
mov
es
cmpsb
sub
and
fwait
jnp
push
outsb
inc
lea
mov
sub
scas
sarb
dec
sub
pusha
pop
fimull
pop
pop
je
add
jnp
dec
xor
cs
cwtl
or
push
sbb
into
add
outsb
or
xchg
cmp
cld
mov
jbe
in
mov
xor
jp
mov
push
mov
push
cmp
dec
ds
pop
push
into
jns,pn
push
jecxz
int
enter
pushf
fwait
dec
outsl
and
ss
imul
mov
ja
lock
enter
mov
cmp
push
outsl
inc
sub
inc
stos
push
jg
out
sti
add
dec
fsubs
push
mov
mov
mov
and
xchg
cmpsb
push
pop
cmc
lea
jae
std
and
bound
pushf
adc
xlat
in
xchg
xchg
int3
les
cmp
inc
pusha
pop
push
test
fstpt
jp
sarb
into
mov
mov
loop
hlt
inc
jle
test
push
cmp
pushf
push
adc
xchg
push
in
cltd
ja
cmpsl
adc
cli
aaa
lret
pop
pop
out
incl
aam
pop
sbb
stos
jbe
cld
hlt
jmp
enter
push
xchg
ret
insb
inc
test
fptan
fiadds
push
lock
mov
push
aam
sbb
jle
fs
faddl
xchg
jae
cmp
cmp
or
push
pop
push
mov
dec
and
cmp
scas
jmp
xor
rol
mov
mov
dec
div
sub
ljmp
jl
pop
add
dec
inc
repnz
dec
test
ja
cld
in
loope
xor
shr
lahf
push
sub
scas
out
push
pop
inc
scas
outsl
adc
lahf
mov
test
ja
es
addr16
jle
icebp
xchg
call
pop
cmp
mov
add
imul
sbb
jnp
shrl
dec
lcall
mov
mov
inc
push
xchg
jmp
ret
xlat
jns
adc
in
data16
out
popa
jmp
xor
test
jae
scas
pop
mov
mov
std
cmp
sbb
jmp
or
stc
xchg
adc
pop
fmull
cmpsl
bound
rorl
sub
ljmp
dec
mov
into
in
jnp
mov
add
lods
jg
xor
mov
fnstcw
sahf
jle
nop
hlt
or
jg
push
andl
in
push
fisubs
push
arpl
jb
dec
lock
lea
pop
roll
les
hlt
push
push
into
sub
pop
data16
je
pop
mov
std
xchg
js
rorb
xor
outsl
loopne
cmpsb
adc
lcall
into
sub
adc
stos
testb
stc
jae
xor
in
into
mov
stc
pop
or
push
sub
outsb
inc
pop
push
ss
mov
jle
divl
add
pop
icebp
pop
mov
add
shlb
jmp
and
push
sahf
or
lahf
std
loop,pn
into
fst
dec
out
pushf
push
ja
mov
insb
rcll
mov
mov
rorl
mov
pop
fildl
jl
movsb
pushf
cmpsb
cld
incl
sar
gs
inc
ret
lods
call
push
jae
inc
test
cmp
sub
pop
sti
jg
inc
cvtpi2ps
mov
xor
xchg
mov
mov
test
adc
aad
ret
jno
outsl
push
mov
cmp
aaa
insl
jae
popa
fs
stos
and
mov
in
mov
pop
stc
inc
push
and
sub
xsaveopt
xor
fdivs
cmp
test
ret
sbb
lret
xlat
cmp
fildl
fidivs
movsl
add
in
push
or
mov
rorb
rcll
fcoml
push
xchg
loop
jo
add
adc
stos
cmpsl
cmpsb
mov
imul
xor
xor
push
clc
aas
fidivrl
out
mov
pusha
or
mov
imul
xor
lods
in
adc
add
xor
les
jae
pop
and
or
rol
das
stc
lea
push
jecxz
push
lahf
movsb
xchg
adc
xor
sbb
cmp
jne
in
outsb
mov
test
in
inc
imul
cltd
fs
sub
popa
xorb
fxch
call
jg
xor
pop
xchg
cmc
push
add
push
clc
out
xchg
test
out
jb
filds
push
cli
xchg
dec
mov
sub
sbb
inc
push
push
sarl
pop
add
stos
arpl
je
fisubrl
data16
clc
sti
mov
inc
pop
jne
xor
cmp
cwtl
ja
xchg
out
mov
sbb
adc
les
nop
cmp
cmp
insl
push
lahf
push
cmc
into
and
mov
out
add
sub
mov
lret
stc
lock
outsb
sub
sub
scas
inc
out
fsubrs
pushf
cmp
cmp
ss
fimuls
lahf
lea
inc
dec
adcb
or
jge
out
pushf
dec
cwtl
jns
popa
lds
out
test
inc
ret
cmpl
mov
push
xchg
jno
inc
pop
dec
xchg
lret
dec
loope
sahf
push
add
mov
sbb
xchg
icebp
inc
std
sbb
lods
and
adc
movsl
mov
rol
cmp
movsb
shlb
rclb
fstp
sti
popa
outsb
clc
ss
ss
arpl
leave
push
imul
cld
sarb
jne
push
cld
adc
rorl
pushf
xchg
add
inc
pusha
xor
jno
arpl
ficomps
sti
leave
mov
data16
enter
out
and
pop
add
scas
cmp
push
inc
dec
xor
mov
aad
into
pop
xor
fistl
scas
pusha
adc
mov
aaa
inc
mov
mov
mov
es
mov
mov
adc
mov
mov
cmp
ds
mov
sahf
aas
subl
sub
sbb
lahf
push
xchg
or
adcl
repnz
test
lods
and
mov
movsb
xchg
outsb
mov
jmp
jmp
mov
xor
inc
aaa
rcrb
or
mov
mov
push
mov
pop
pop
and
cmp
jae
pop
cli
subl
cmp
scas
stos
lock
mov
gs
aaa
in
jle
xor
xchg
mov
jecxz
lcall
mov
fmull
adc
jl
cmpsl
dec
adc
fldln2
sub
pop
pop
ljmp
cwtl
and
lahf
lcall
clc
orl
push
push
push
adc
mov
mov
fadds
push
int
pusha
xlat
daa
xchg
xor
mov
mov
ret
jne
xor
into
xchg
addr16
sbb
dec
mov
push
xchg
cwtl
enter
dec
mov
inc
dec
xor
dec
rcrb
xchg
notb
and
popa
jge
xchg
and
add
cs
xchg
out
das
mov
sbb
notb
mov
xchg
dec
mov
sbb
push
mov
push
push
imul
aas
push
movsb
out
xor
std
adc
lock
cs
aad
fstpl
push
push
scas
mov
loop
inc
orb
movsb
out
inc
dec
push
and
mov
jl
sbb
xor
cmc
jne
cmp
call
dec
lods
xor
mov
stos
cmpsl
nop
int3
les
inc
ret
cltd
sar
pop
jb
sti
jmp
in
stc
xor
push
mov
xchg
jle
in
mov
push
xchg
push
xchg
imul
push
xor
xor
data16
into
dec
das
outsb
cwtl
out
push
xchg
icebp
aas
mov
lods
pusha
clc
ss
movsb
cmpsb
and
push
push
loop
paddw
fldt
arpl
lret
jge
pop
mov
in
ljmp
lret
adc
mov
dec
lea
ss
and
std
hlt
sub
int
jne
push
pop
loopne
jo
sti
imul
je
pop
sbb
jmp
pop
mov
addr16
iret
or
pop
push
mov
mov
lods
js
into
mov
jp
dec
aas
les
js
dec
pop
aaa
cmp
xchg
mov
sbb
and
stc
jg
fsubs
mov
js
shll
pop
popf
dec
pop
inc
add
insl
sti
rclb
iret
int3
movsl
dec
aaa
mov
sahf
fdivl
data16
mov
daa
xchg
add
pop
xor
xchg
jno
add
cmp
xchg
sbb
ja
in
aad
adc
xor
xchg
cltd
nop
pop
or
nop
in
push
cmp
imul
ds
push
or
out
movsb
push
out
jae
inc
ljmp
dec
clc
add
jp
ret
les
repz
orl
ja
aas
sarb
sbb
fs
faddp
imul
into
pushf
stc
cli
jg
movsl
subl
aad
sbb
sbb
dec
mov
xor
test
fiaddl
cld
pop
pop
lods
push
movl
insl
aaa
adc
xchg
add
stos
xor
hlt
mov
mov
xchg
dec
aas
add
icebp
das
add
jle
fwait
lods
mov
in
cltd
lcall
push
aaa
or
sbb
mov
xor
mov
sbb
scas
sub
dec
sbb
fs
fs
push
fstp
fdiv
cmp
imul
stos
jle
fs
inc
sbb
jbe
je
xor
cmp
push
rcl
pop
cli
jmp
popf
push
xchg
data16
jnp
fmul
add
inc
fisttps
xchg
xor
je
dec
sbb
lret
shll
push
mov
mov
mov
pop
dec
cmp
dec
out
inc
xor
xchg
lret
test
stc
nop
jne
outsb
movsl
xchg
testb
cwtl
stos
and
dec
jae
inc
or
clc
into
popf
jp
jb
cmp
fiaddl
mov
cltd
ds
dec
push
xor
jmp
rol
sub
xchg
rolb
dec
mov
jne,pt
jl
roll
lahf
movsl
test
outsl
dec
scas
in
xlat
lahf
icebp
sub
xchg
sub
push
mov
dec
es
pushf
add
sbb
mov
lock
push
out
lahf
ror
adc
jl
sarl
cmp
rcrl
test
repnz
call
imul
mov
bound
dec
jle
movsb
mov
cmpb
lods
aad
testb
clc
jns
jle
paddsw
inc
push
jno
mov
cs
pop
cmovp
pop
push
sahf
lret
pop
dec
popa
repz
ljmp
js
aaa
popa
sbb
jne
push
pushf
es
testl
pop
mov
mov
popa
push
pop
decl
movsl
repz
aad
rcl
jo
js
bound
data16
add
add
es
mov
xchg
aad
mov
jns
andl
fmull
daa
xor
dec
pop
je
or
pop
xor
push
lahf
pop
adc
adc
and
in
xchg
mov
movaps
xchg
sbb
pusha
jb
outsl
insb
insb
fs
psubsw
stos
fincstp
inc
loop
mov
mov
lret
or
xchg
fldenv
sti
aaa
sub
cmp
adc
leave
pushf
jge
or
add
pop
leave
add
lret
push
mov
insb
adc
jge
and
lods
lods
inc
pop
or
ljmp
imul
into
inc
dec
mov
jl
add
add
pop
repnz
in
or
cmpsl
adc
stos
daa
mov
lods
adc
push
loop
test
mov
or
or
and
in
xor
lods
fwait
xchg
insl
enter
popf
outsb
sbbl
bound
je
sti
popf
xor
sbb
stc
and
vmwrite
mov
push
in
hlt
test
push
mov
add
xor
adc
cmc
xor
aaa
bound
adc
pop
mov
jnp
andl
shr
ds
aad
repz
lods
sub
mov
mov
mov
pop
orb
and
pop
or
ljmp
add
push
movsb
cmp
cmp
push
out
and
pop
sbb
jg
inc
inc
mov
iret
adc
jle
inc
jb
jecxz
inc
mov
ficoml
mov
sub
aad
fistps
jle
mov
push
pushf
inc
pop
cmp
out
imul
cmp
out
jnp
ljmp
lds
shll
popa
fcompl
xlat
jl
cwtl
rorl
or
scas
jmp
incb
push
mov
or
lcall
xor
les
dec
pop
shl
call
iret
mov
popf
fdivrp
stos
mov
or
push
sti
lods
leave
inc
push
cltd
mov
sub
push
xchg
jbe
js
mov
hlt
pop
test
ljmp
and
mov
rolb
dec
pop
jge
dec
mov
inc
ret
lret
inc
pop
mov
add
jecxz
inc
mov
stc
xor
arpl
popf
push
push
loope
aaa
sbb
cmp
sub
fadd
xchg
fwait
or
pop
jno
sbb
push
xchg
add
cmp
inc
repz
mov
jbe
mov
pop
mov
rcrb
cld
push
jae
or
fwait
pusha
xlat
ljmp
mov
mov
out
add
push
arpl
sub
push
icebp
inc
xor
xchg
popa
test
jle
mov
psrlw
inc
adc
lret
in
ja
mov
cwtl
mov
add
movb
ds
sbbb
jmp
dec
xchg
addr16
iret
inc
push
xor
sub
push
mov
or
shrb
pop
xchg
add
daa
xor
aaa
loopne
arpl
push
jns
ret
jmp
jns
sti
icebp
pop
sarl
lods
dec
push
shll
neg
js
push
sbb
lcall
sub
xor
jo
sbb
out
cli
inc
popa
jl
jg
mov
movb
out
orl
jne
cmpb
pop
mov
jns
and
jl
addl
xchg
test
and
test
sub
jno
xlat
dec
xor
or
ja
push
scas
and
fiadds
jb
xlat
sbb
sbb
ds
add
lea
adc
pop
pop
loopne
xlat
fisubrl
cmp
mov
mov
movsb
out
mov
mov
call
sub
xchg
idiv
and
lds
shrl
push
into
xchg
mov
cmpsl
sub
pusha
dec
mov
or
lods
dec
cmp
mov
cli
add
push
pop
pop
mov
js
add
cmpl
sbb
dec
add
std
and
cmc
cmpsl
add
xor
call
push
jmp
and
push
nop
hlt
iret
and
test
rolb
adc
pop
mov
int
mov
cmp
pop
icebp
and
test
sbb
fidivrl
idivb
adc
sub
push
movsb
es
mov
fdivrs
sbb
fsubr
pop
push
and
int3
cs
into
mov
mov
cmp
fidivl
or
xor
das
xor
sbb
or
sub
inc
xchg
xchg
and
mov
ja
pop
leave
push
mov
push
dec
pusha
daa
icebp
stc
test
out
inc
pop
cmp
fxch
push
cmpsb
fsub
cmpsb
rclb
loopne
xchg
sbb
jmp
in
in
mov
lret
dec
jns
stos
jnp
out
dec
pusha
pop
xchg
cmpl
std
dec
stos
jns
cltd
xchg
sub
mov
push
popa
pop
or
sbb
sti
sbb
ja
and
push
add
out
lahf
orb
and
ja
pop
pop
sbb
mov
cld
daa
sub
adc
repnz
mov
or
xor
fisubl
int3
int
cwtl
add
rcll
or
mov
rorb
bndcl
adc
faddl
in
cltd
add
sub
fcompl
fistpll
pop
test
mov
push
rcrb
bound
cmp
lock
mov
jle
push
lock
iret
xlat
xchg
mov
mov
repnz
addb
fwait
inc
loopne
pop
add
cmc
sbb
add
or
out
in
cld
push
xlat
dec
xchg
mov
lea
mov
mov
xchg
dec
pop
push
mov
xchg
mov
add
cli
mov
xor
fcoms
mull
lcall
lret
shlb
push
sbb
pop
add
xlat
sbb
test
movsb
sbb
adc
int3
jae
push
stos
outsb
mov
mov
fmul
hlt
enter
call
mov
dec
mov
out
incl
sbb
mov
jle
inc
cmp
pusha
fstpl
loop,pn
loopne
aas
dec
mov
jg
arpl
popf
dec
hlt
arpl
inc
das
jbe
fdivs
xor
scas
sahf
push
aas
mov
mov
jae
lret
xchg
in
popa
push
sub
hlt
jns
into
shll
jns
fimuls
shlb
and
repz
mov
jge
repz
jecxz
stos
inc
test
sub
jb
xor
add
cmpsb
xchg
xchg
add
mov
sub
pop
call
jae
leave
or
push
adc
xchg
jl
je
popf
mov
dec
loopne
loopne
in
out
jmp
or
outsl
mov
lcall
sarb
aas
fisttpll
insl
lret
push
xchg
mov
and
out
nop
addr16
scas
xchg
cld
outsb
adc
inc
stc
js
dec
push
mov
push
sahf
out
xchg
aad
outsl
adc
adc
pop
jmp
cmpsb
mov
xor
addl
movsb
sub
add
sbb
iret
movsl
add
in
jne
in
mov
jb
mov
pushf
jmp
cmp
stc
inc
add
enter
out
jb
inc
shl
inc
cmc
lods
clc
push
ja
fidivrl
add
add
dec
aaa
pushf
and
sbbb
repz
outsb
pushf
sub
fs
jno
cmp
es
call
popf
icebp
cs
in
out
sahf
xchg
push
es
ret
mov
rorl
cmp
jne
in
test
sbb
out
adc
rcl
out
xlat
sahf
arpl
shl
push
push
sbb
inc
bound
adc
insb
xchg
testl
out
or
int3
push
adc
mov
and
adc
fdivs
jns
loopne
lret
shrb
fwait
dec
cmp
xor
aas
push
jge
lret
in
pushf
or
mov
lods
in
mov
mov
sbbl
mov
fisubrs
mov
aas
inc
test
pushf
stos
ljmp
aam
and
or
adc
imul
out
scas
jge
mov
idivb
sub
lods
in
pop
and
xorb
and
fmull
aas
aad
pop
inc
loopne
sbb
cmpl
xchg
mov
mov
and
sub
and
cmp
cli
cltd
inc
add
push
mov
jle
insb
xchg
mov
jmp
ds
roll
push
push
jmp
dec
jb
repz
jns
pusha
inc
xchg
cmp
mov
popa
fmull
adc
hlt
add
jg
sarl
push
push
or
out
sarb
push
pop
hlt
sbb
js
push
mov
pop
jmp
push
out
xor
mov
lds
or
xchg
dec
mov
scas
cwtl
jmp
cmp
iret
cltd
xchg
sub
loopne
lods
lret
pop
lcall
mov
nop
mov
or
mov
loope
inc
pop
aam
cmp
mov
lock
jne
mov
cld
popf
and
sub
lea
leave
push
xchg
push
add
cmp
sbb
test
inc
out
sub
gs
sbbb
push
js
stos
popa
add
outsl
push
mov
decb
test
or
xor
and
inc
fstps
movsl
outsb
testl
into
int3
push
ret
sbb
jae
pop
and
jo
sub
xchg
lods
adc
aas
iret
movsl
decb
hlt
xchg
popa
jno
adc
sbbl
push
ret
cmpsb
push
pop
cmp
clc
mov
jg
mov
out
fdivrs
inc
push
sub
cmp
push
mov
je
pop
or
rorl
fs
push
inc
jbe
xchg
nop
dec
cmpsl
xor
fadds
popa
mov
daa
stc
dec
stos
xchg
sub
mov
in
xchg
cmp
mov
test
fnstenv
jecxz
xchg
push
clc
iret
mov
leave
addr16
cwtl
data16
or
xchg
nop
arpl
inc
lret
test
and
or
mov
xchg
cmp
xchg
push
fsubrs
pop
push
dec
jo
cmp
jno
adc
cmp
pop
outsl
jg
pop
mov
sub
in
loopne
cmp
rcrb
icebp
add
lcall
out
dec
sub
mov
xor
xchg
inc
in
add
testl
dec
rcll
fmuls
push
cmpl
imul
ljmp
xor
repnz
aas
mov
jmp
out
nop
scas
shrb
mov
xor
xchg
pop
in
cmc
sbb
pushf
xor
in
imul
inc
out
xor
test
mov
mov
sbb
jne
out
or
mov
sbb
xchg
lods
mov
outsl
hlt
out
cmpsl
inc
mov
cld
pop
lret
sub
scas
sub
jne
outsl
bound
mov
pushf
mov
sub
inc
inc
and
stos
add
mov
out
in
rcr
popa
jb
jle
xor
inc
xlat
xchg
lock
sbb
out
inc
lret
shl
in
jne
push
lods
scas
pop
jae
cmpsb
adc
jnp
jno
push
hlt
out
and
test
ja
pop
push
loope
xchg
lock
xor
pop
lret
leave
ds
subb
and
dec
cli
jecxz
in
cmp
jg
loope
enter
fldenv
stos
xchg
pop
adcb
scas
and
and
mov
testb
sbb
pushf
cmp
push
das
sub
add
jmp
push
mov
ret
cltd
aaa
mov
sub
inc
sahf
push
sbb
lret
jae
dec
push
pop
test
mov
and
sbb
int
lods
and
xor
jge
mov
repz
ss
sbb
rclb
mov
sub
inc
xorb
iret
push
pop
dec
xlat
mov
ljmp
and
loopne
aam
mov
mov
or
shl
sub
fmuls
shrb
mov
in
mull
nop
aas
push
mov
xchg
imul
mov
inc
fldenv
and
and
pushf
adcl
cltd
mov
pop
mov
push
adc
out
push
mov
cmp
test
sbb
xchg
inc
dec
repz
pop
jmp
mov
dec
adc
and
mov
jb
lock
fiadds
in
outsl
push
pop
ljmp
nop
in
test
fwait
outsl
test
mov
lods
xchg
je
add
call
lret
dec
jo
repnz
fcmovnu
mov
jnp,pt
enter
mov
xchg
sub
pop
lods
dec
and
cld
bound
push
fisttps
cmc
xchg
test
jle
fstps
dec
adc
adc
lods
sub
das
je
loop
push
stos
imul
mov
divb
lcall
pop
repnz
sbb
pop
xchg
and
imul
sbb
insb
in
cmp
ret
and
push
stos
cmp
pop
ss
fisubrs
and
fdivp
sti
push
fcmovb
or
sti
dec
lret
leave
pop
sub
add
mov
xchg
sahf
in
fisttpl
cmp
bound
clc
dec
xor
mov
das
inc
and
pop
push
cld
das
push
dec
cmp
jnp
mov
lds
mov
ret
mov
mov
xchg
xor
aam
cmp
repz
loop
inc
mov
xchg
mov
mov
bound
movsl
icebp
pushf
aaa
call
pop
lods
push
fmuls
pop
xor
cmpsl
sub
xchg
xor
sub
and
push
or
xlat
fdivl
popf
movsl
test
or
push
push
fwait
sti
negb
push
mov
mov
sahf
jecxz
mov
jo
lds
ljmp
lock
aaa
jmp
sbb
cli
and
and
push
sbb
dec
mov
lods
pop
sub
inc
jmp
ja
sbb
nop
dec
mov
inc
or
push
add
gs
push
sti
or
aam
or
mov
inc
sbb
imul
out
jnp
loop
ss
add
loope
mov
pusha
movsb
pop
xchg
rol
or
adc
vpsubq
xchg
pop
gs
xor
cmp
jecxz
sbbl
and
adc
pop
arpl
out
mov
jnp
out
cmpsb
or
cmc
pusha
mov
pop
in
inc
cmp
out
outsl
xor
test
jae
insb
mov
inc
aas
add
mov
lods
inc
aad
xlat
shlb
lock
xchg
outsb
mov
aad
push
jecxz
cli
mov
in
pop
jmp
es
mov
xor
test
stos
outsl
iret
xor
test
jmp
mov
adcl
and
push
cwtl
mov
fs
pop
dec
fdivl
push
adc
dec
int
jg
lds
cmpsl
jne
stos
mov
or
out
sbb
in
xor
dec
fisubrs
int3
mov
popf
iret
push
xor
mov
mov
lea
pop
xchg
sbb
lods
and
leave
cli
ljmp
xor
pop
dec
sub
cmp
fisttpll
mov
inc
aam
fidivl
adc
push
dec
ror
jge
mov
push
jae
les
sbb
fisubrs
stos
pop
sub
bound
add
push
or
cli
mov
and
cmp
fdivl
jne
adc
je
inc
call
outsb
mov
sub
arpl
and
arpl
dec
mov
stos
lcall
les
sarb
cmp
shlb
xchg
gs
mov
ja
cwtl
dec
mov
or
stc
mov
mov
pop
jge
mov
call
inc
repz
fs
cmp
push
jnp
aas
adc
popl
out
xchg
rcrb
iret
adc
push
fwait
add
pop
add
outsb
cmpsb
xlat
movsb
add
in
jecxz
repz
or
xor
bound
xor
popf
adc
faddl
or
repnz
xchg
sbb
jp
je
lea
mulb
pusha
push
lcall
cli
xchg
or
jbe
and
in
sti
aad
aaa
mov
add
fsub
mov
inc
lock
out
push
in
loop
cltd
scas
adcb
mov
xchg
sbb
aas
pop
mov
mov
popf
shll
jae
sub
js
sub
arpl
add
pop
arpl
cltd
jmp
pop
or
inc
sahf
sbb
cmp
lret
xchg
lret
or
jae
inc
add
xchg
jns
aas
test
sub
lret
testb
aas
in
setge
icebp
mov
inc
and
fcom
or
and
aas
subl
add
mov
mov
fcomps
add
xlat
xchg
ret
cmpsb
jo
push
mov
stos
bound
dec
push
lcall
shl
js
pcmpgtd
in
movsb
push
inc
fldl
seto
sbb
and
mov
je
sub
cs
iret
push
loope
fcmovnb
adc
jmp
push
jmp
add
fsubs
lods
sub
xor
stos
ds
pop
cmpsb
shl
xor
cwtl
out
jle
push
push
and
jno
cwtl
ret
xorl
jne
pop
or
rcll
mov
into
loop
push
jle
dec
adc
mov
fisttpll
jg
sbb
dec
jo
dec
fistpll
pop
jg
decb
clc
jne
xchg
pop
vunpcklps
push
pop
aaa
out
jl
cmp
dec
pop
adc
js
pop
aad
out
inc
or
ror
imul
adc
xchg
movsb
push
mov
mov
fidivl
arpl
std
lret
std
pop
cmp
cwtl
scas
int
xor
lds
dec
mov
xchg
jg
push
outsl
xchg
mov
psadbw
xor
das
push
mov
push
setbe
mov
subl
out
pop
cmpsb
sbb
mov
filds
ret
and
mov
adc
insb
mov
aad
mov
sbb
cmpsl
dec
pop
lock
pop
outsb
inc
or
sub
mov
dec
inc
daa
inc
sarb
int
and
fsubl
pop
jne
mov
ds
and
xchg
sbb
mov
lods
adc
scas
fwait
arpl
das
repz
ljmp
sbb
outsl
push
aam
sbb
cmp
dec
mov
dec
xchg
cmp
sub
xchg
mov
lret
inc
push
gs
dec
fmull
or
lret
xchg
cmp
or
mov
sub
movsb
sub
mov
add
push
add
adc
and
sub
adc
jge
fwait
jns
push
arpl
add
cmp
loope
add
imul
dec
mov
js
out
mov
mov
and
arpl
stos
mov
xorl
shrl
jns
pop
je
nop
mov
mov
dec
stc
adc
sbb
je
out
stc
outsb
mov
mov
in
cmpsb
dec
or
pushf
pop
int3
pop
shlb
jecxz
dec
sbb
sti
in
mov
clc
lods
stc
fcmovbe
dec
add
xchg
dec
xlat
shll
dec
jg
xchg
mov
mov
jne
adc
aas
into
scas
stos
rol
xor
push
jb
movsb
sbb
mov
mov
jns
hlt
xchg
jmp
test
push
repz
aad
cmp
sbb
test
neg
std
nop
repnz
or
clc
sub
mov
xchg
dec
push
xchg
mov
push
aam
sbb
rolb
mov
mov
aad
inc
popa
jl
js
pop
aaa
sub
pop
mov
jbe
cmp
or
cmp
adc
dec
xchg
mov
lret
addr16
push
or
das
sub
dec
inc
lods
cmp
pop
enter
adcl
mov
inc
xor
xchg
adc
sbb
in
jmp
popf
or
xchg
lods
sbb
scas
clc
inc
push
hlt
test
ljmp
stos
sahf
hlt
dec
insl
sub
in
jb
andl
dec
loop
xchg
mov
pop
adc
mov
js
repnz
les
test
mov
push
sub
dec
cmp
or
jnp
daa
arpl
aam
jnp
out
out
xchg
push
jae
mov
addr16
jp
outsl
adc
dec
mov
leave
push
iret
bnd
xor
lods
scas
cwtl
loope
xlat
inc
stc
push
repz
test
and
or
sbb
loopne
ret
cmp
sbb
pop
sub
xchg
fisubl
lock
mov
enter
xchg
mov
jbe
fmul
ja
int3
insl
mov
xchg
mov
lret
xchg
pop
or
cmp
ja
je
stos
jno
inc
loop
or
add
sbb
mov
fs
or
stos
mov
xchg
insl
sbb
bound
cmp
ficoml
jo
cmpsl
lcall
loopne
dec
sbb
out
andb
jns
dec
cmp
mov
rclb
stos
icebp
mov
rolb
inc
xor
sbb
jb
push
rcrb
daa
xchg
or
mov
adc
dec
scas
lahf
leave
test
les
mov
popf
mov
dec
nop
ljmp
iret
xchg
xor
repnz
cmp
sub
iret
ds
jnp
mov
lahf
adc
add
adc
roll
inc
and
jne
icebp
arpl
inc
test
gs
sub
xor
dec
or
adc
icebp
sar
push
push
ret
aaa
sarl
pushf
mov
imul
adc
cs
pop
lret
sbb
sub
xchg
clc
and
adc
bound
xlat
pop
andl
push
xchg
adc
ret
push
mov
invd
cmp
es
es
out
fwait
sub
cltd
lahf
cmp
inc
cmpsb
inc
dec
pop
sub
add
mov
ret
cmp
mov
sahf
jp
rorl
and
dec
aad
mov
push
or
xchg
addb
mov
test
inc
popf
addl
ret
inc
xchg
leave
and
jae
inc
add
mov
lret
sub
lods
pop
negb
in
cltd
ja
rolb
sub
inc
test
rcll
rcr
xor
pop
data16
scas
out
les
xchg
daa
adc
xor
push
sbb
xchg
fsts
mov
mov
jl
push
pop
push
mov
leave
iret
push
and
cmp
aaa
ja
mov
sub
shlb
scas
mov
cli
adc
rol
mov
xor
push
mov
out
add
cmp
out
pushf
mov
or
cmp
push
hlt
or
or
cmpsl
add
enter
sbb
dec
sub
ret
stos
dec
mov
mov
or
xlat
dec
pop
dec
sahf
mov
shrb
fsubrp
in
iret
test
sub
pushl
movsb
mov
mov
mov
into
lsl
loopne
jne
mov
jle
inc
inc
push
jg
lods
sbb
scas
insb
int3
gs
scas
sub
cmp
cmp
or
scas
into
pop
lock
mov
out
pop
mov
inc
adc
fcmove
mov
and
sbb
daa
daa
into
and
pop
mov
push
repz
push
xchg
popf
push
jne
roll
mov
mov
sbb
neg
mov
push
scas
inc
cwtl
and
xchg
idiv
out
jmp
div
mov
cli
push
shl
cmpsb
call
es
shrl
jp
xchg
testl
pop
sahf
xchg
mov
arpl
mov
ljmp
xlat
cld
xor
addr16
push
pop
and
add
mov
pop
pop
cmpsl
fsubrs
and
inc
sbb
mov
push
mov
pop
stos
add
lret
xchg
ds
lret
jmp
cwtl
js
fisubs
inc
jmp
push
lods
sti
xorl
sbb
stos
mov
cmpsl
cmc
jmp
test
sub
mov
cld
out
mov
inc
out
adc
rcr
fistpll
shll
pop
cwtl
inc
cmp
int3
fbld
pop
repnz
pusha
lret
adc
mov
jno
mov
ja
push
cld
ds
lahf
push
andl
sti
and
subb
pop
test
mov
sbb
into
loope
pop
pop
inc
sub
inc
pop
xlat
lea
das
out
aaa
pop
rclb
or
enter
push
cmp
inc
je
int3
sarl
cmp
enter
into
aas
adc
xor
ret
cwtl
push
out
dec
sub
fsts
mov
rorb
adc
sub
sbb
sbb
iret
xchg
arpl
aaa
test
xchg
mov
not
ret
out
mov
cmp
cs
push
xchg
stc
fwait
mov
adc
inc
hlt
sahf
dec
lret
sbb
cli
pop
mov
fldl
rcl
inc
hlt
jae
repnz
movsb
mov
sti
test
enter
mov
xchg
std
call
jae
push
dec
mov
enter
xor
push
push
add
cltd
mov
fwait
mov
pop
push
addr16
sub
shlb
fdivrl
fimuls
xor
push
pop
insb
loopne
mov
sbb
lds
lret
std
jne
mov
push
iret
adc
into
pop
adc
xorb
push
scas
iret
adc
pop
adc
int3
xchg
dec
outsl
and
test
sbb
pop
cmp
mov
daa
fisubs
mov
xorb
sub
cmp
mov
jmp
jne
loop
dec
push
mov
mov
cmp
adc
dec
mov
sbb
repz
mov
dec
insl
xor
int
into
ja
int3
scas
repz
push
add
and
stos
dec
mov
jge
add
jge
lock
push
ja
clc
push
fimuls
sub
je
dec
sbb
js
jbe
ret
mov
mov
inc
xorb
loope
fwait
push
sbb
in
adc
mov
nop
pop
xlat
cmp
mov
fimuls
pop
push
add
dec
push
das
mov
out
xor
ret
repz
cmp
mov
sbbl
xchg
sbb
mov
cmp
xchg
sbbl
int3
in
cltd
fs
jae
sub
pop
ss
aas
iret
jle
sub
push
mov
add
and
sub
push
mov
repz
sar
adc
dec
nop
jge
xchg
sub
jecxz
sbb
jne
cbtw
pop
enter
cli
jbe
inc
add
hlt
js
insl
shlb
xchg
inc
fmulp
inc
mov
test
loop
fisubrl
pop
sbb
icebp
das
dec
sahf
loope
sti
sub
clc
inc
out
rcrb
jne
mov
fildl
loop
test
daa
xor
mov
roll
data16
dec
lret
ror
pop
icebp
dec
out
or
cmp
test
pop
push
ds
lods
mov
test
cmpsb
cmc
or
jmp
bound
cmc
mov
or
and
cmp
pop
inc
data16
jne
xor
stc
fstl
fisubrs
jecxz
adcl
pop
pop
cwtl
pop
addb
gs
popf
and
adc
jl
ja
int
mov
movsl
sub
mov
das
loopne
jl
mov
stc
movsb
icebp
push
addr16
cwtl
and
push
and
and
bswap
add
jle
or
das
shlb
out
cmp
cmc
jmp
push
inc
imul
pop
pop
xchg
loope
cmpsl
dec
mov
jecxz
test
test
and
push
test
push
and
or
sbb
loopne
pop
jbe
jns
mov
in
push
mov
enter
pop
imul
xchg
ret
add
xlat
dec
cmp
arpl
dec
or
ret
dec
stos
push
leave
cli
mov
dec
mov
sbb
jb
mov
mov
js
fldenv
push
push
ljmp
mov
shl
fs
mov
adc
xchg
xchg
xchg
add
jle
dec
mov
call
push
add
dec
sbb
iret
lret
jnp
pushf
jnp
int
jmp
jno
js
cs
addb
cmp
lret
add
arpl
std
mov
std
imul
fstpt
add
popf
push
imul
sbb
in
fists
aaa
in
push
popa
leave
aaa
or
jg
inc
pop
fldcw
cmpsb
adc
loop
xchg
into
jo
dec
adc
mov
add
adc
push
cmpsl
push
aaa
xchg
int
and
xor
dec
stos
jmp
mov
iret
andb
push
cltd
movsb
hlt
mov
mov
cmp
hlt
fs
loopne
xchg
notl
orl
out
pop
test
pushw
iret
or
jb
adc
imulb
sti
adc
stos
fstps
jp
mov
into
test
xchg
mov
sbb
xchg
push
xchg
add
fiadds
test
sbb
lret
out
mov
daa
xchg
add
cmpsl
mov
or
stos
nop
vpmacsdd
sbbb
lret
jge
sub
loopew
sub
dec
mov
test
outsl
fs
shlb
mov
push
rcrb
xlat
std
sbb
outsl
add
cld
push
in
xlat
loop
test
pushf
out
popf
jns
lock
insl
mov
xchg
mov
repz
je
scas
sahf
rorb
fadd
iret
ret
xchg
add
loop
mov
lock
imul
sti
xor
adc
in
mov
fs
mov
inc
lods
pop
or
sub
dec
xchg
mov
adc
repnz
mov
lods
test
not
dec
out
stos
jle
xor
es
aad
pop
and
fs
shl
push
and
popf
popa
lret
pushf
fsubs
or
and
js
daa
dec
pop
adc
aad
sarb
lods
sub
and
cwtl
or
pop
cmp
mov
fs
icebp
add
addr16
stos
fs
ja
pop
mov
xor
pop
mov
and
jge
push
or
outsl
dec
mov
test
gs
sbb
xor
nop
cmp
or
das
outsl
shl
lds
lcall
in
xor
add
jmp
repnz
and
cmp
nop
adc
ja
mov
scas
pop
lret
and
cmp
inc
add
pop
xor
idivb
ja
sarb
icebp
mov
movsb
hlt
dec
insl
pop
dec
pop
jbe
sub
fiadds
outsb
jne
mov
push
push
lret
rep
jg
jbe
sbb
je
dec
test
sbb
mov
andl
je
mov
sbb
cld
jae
ljmp
pop
pop
push
cs
and
jg
adc
lods
cltd
mov
sbb
out
dec
cs
adc
or
or
xor
ja
add
mov
mov
or
pop
push
inc
rolb
adc
scas
add
xchg
push
pop
stos
test
loop
test
inc
imul
in
xor
out
fiadds
push
mov
in
loope
bnd
insl
or
or
cs
insb
in
inc
nop
mov
cmp
dec
cmp
inc
or
xlat
stos
in
inc
mov
inc
or
mov
jns
sub
pop
cli
nop
push
sbb
jb
jno
adc
clc
pop
and
insl
mov
push
mov
or
es
dec
loope
cmc
or
mov
test
repz
out
jecxz
stos
lret
jl
or
decl
mov
loope
pushw
call
jne
mov
sbb
xchg
adc
in
ljmp
mov
int
add
loope
xor
xor
add
jp
xchg
pop
shl
fs
pop
mov
call
ds
sti
imul
xlat
lret
loop
adc
adc
push
mov
or
in
mov
clc
outsb
rcll
or
leave
jp
jp
shll
stos
adc
orb
adc
and
cmpsl
or
xor
in
icebp
push
pop
pop
fldt
pop
pop
cmc
cmpsl
pusha
lret
nop
cmpsw
cs
pop
test
pusha
popf
nop
mov
add
scas
loope
jle
jmp
ret
inc
adc
jbe
icebp
loop
enter
sbb
xor
or
mov
jp
movsl
out
push
adc
lret
cmp
add
jo
push
xor
nop
pop
fcomip
bound
add
arpl
push
arpl
and
je
add
jecxz
cmpsb
addb
adc
pminsw
cmc
call
mov
out
xor
push
daa
push
and
mov
push
fwait
adc
cmp
mov
xchg
or
dec
movsl
lods
ret
outsb
cmp
push
xor
lcall
sbb
in
cltd
xchg
sahf
add
sti
jb
mov
fnstsw
xchg
insb
lock
dec
push
cmp
sub
jae
sbb
imul
fsub
pusha
movsb
push
test
imul
adc
ret
jle
pop
mov
lds
sbb
jbe
fists
icebp
cltd
sbb
or
pop
imul
mov
xlat
stc
pop
divl
inc
mov
pushf
stc
sarb
loop
test
or
cmp
divl
adc
movsb
sub
rcrb
dec
es
jo
or
pop
pop
test
lds
inc
mov
sti
dec
cmp
pusha
push
div
enter
jnp
popf
cmpsl
pop
mov
push
fcomps
adc
adc
jl
add
popf
ja
pop
xchg
lret
mov
mov
mov
ljmp
xor
ss
sbb
sbb
xor
bswap
mov
cmpsb
es
aad
dec
fwait
mov
imul
outsl
arpl
pop
lock
daa
test
inc
aad
sbb
push
jbe
out
and
cmp
andl
sub
push
jp
mov
cmp
ds
insl
inc
add
dec
out
mov
adc
xor
xor
ret
push
xchg
dec
mov
aaa
inc
leave
out
leave
ss
addr16
aam
ret
leave
mov
lret
mov
mov
or
call
ljmp
stc
cmp
mov
in
push
cmp
add
mov
sub
fs
xchg
or
jae
dec
xor
push
mov
inc
jl
pop
sbb
mov
lret
lods
sti
lahf
add
xor
or
out
sbb
mov
pop
daa
mov
dec
inc
adc
je
adc
repz
mov
idivb
ret
arpl
gs
pop
sub
jno
jbe
cwtl
and
out
mov
mov
dec
lcall
sub
insb
push
outsl
adc
rcrb
sbb
lock
or
test
call
jbe
jle
xor
xor
dec
xor
imull
jno
ror
pop
jno
sbb
jmp
ret
cmp
add
sub
jg
cmpsl
xor
sbb
imul
xchg
mov
adc
rorb
inc
js
push
pop
push
push
mov
repnz
and
and
cli
jne
enter
mov
pop
cmp
mov
fbld
rol
loop
push
mov
push
fisubrs
push
popa
mov
bound
add
pop
aad
pop
dec
bound
or
mov
or
adc
movsb
cmp
aad
inc
outsb
in
into
mov
call
stos
ffreep
dec
insb
xor
clc
fbstp
cltd
cmp
pop
aas
filds
pop
mov
sti
mov
xchg
cmp
stos
fs
mov
repnz
mov
and
cmp
test
push
rorl
jae
xor
cmc
dec
cltd
mov
into
push
ljmp
test
fstpt
test
and
push
cmp
pushl
ljmp
sahf
sti
xor
mov
cmpsb
cld
jae
fsubr
movsb
out
leave
loop
lods
mov
daa
movsb
int
cmpsl
or
push
lock
insl
test
jne
add
mov
and
sbb
sahf
addl
xchg
daa
pop
inc
dec
in
nop
jmp
add
push
lret
sbb
in
in
push
add
jp
rclb
mov
push
bound
adc
iret
and
stc
or
int
insb
sbb
dec
movsl
in
dec
cmp
fidivrl
aaa
popa
sub
fs
mov
push
adc
or
push
nop
pusha
inc
ds
repnz
pop
or
test
fmuls
popa
mov
sti
adc
aad
js
rolb
mov
sub
gs
lahf
pop
jo
push
insb
je
pop
xchg
mov
pop
pusha
mov
sbb
scas
mov
in
jns
lds
jne
mov
push
fistpll
mov
adc
xchg
jge
js
adc
arpl
mov
push
mov
rolb
cwtl
inc
ja
ja
test
movsb
mov
sti
mov
pusha
and
fsts
xor
popa
pop
sbb
stc
shll
movsl
pop
frstor
and
daa
mov
mov
aad
shl
mov
fdivl
pop
test
insb
cltd
ret
adc
shrb
cmp
rcrb
or
movsl
inc
dec
mov
sub
jne
icebp
xor
and
jns
inc
jae
js
pop
cmp
pop
mov
int
scas
mov
in
stc
pop
subl
mov
and
outsl
ja
add
push
das
pushf
mov
fs
xor
insl
andb
xchg
into
push
je
cld
or
call
int
test
inc
lods
ds
popf
push
push
add
adc
xor
push
movsb
or
add
jge
jl
jb
fcmovnb
or
inc
subl
dec
pop
dec
aad
jne
or
leave
out
mov
stos
or
gs
adc
xor
daa
clc
jmp
cmp
fstl
rolb
xchg
and
gs
sbb
xchg
aad
in
lret
repnz
jg
push
data16
jmp
imulb
aas
fs
mov
jbe
imul
add
cli
cld
aaa
inc
xchg
int
fs
push
push
lret
xor
sub
popa
xchg
lahf
xor
iret
cld
push
enter
clc
jo
mov
xchg
mov
jmp
push
mov
cld
fidivrl
adc
in
pop
xchg
mov
stc
dec
push
es
loopne
stos
mov
clc
pop
cltd
adcb
imul
addb
mov
mov
mov
stc
push
or
pop
mov
lcall
je
inc
cmp
mov
shlb
js
mov
out
push
add
dec
stc
repz
jmp
sahf
movsb
scas
in
jnp
adc
jno
out
xor
push
movsb
add
rol
xor
adc
push
je
movsb
jl
xchg
pop
test
phsubw
cmpsl
push
adc
sub
xchg
add
mov
and
cwtl
and
inc
cmc
lods
stos
cmp
call
dec
mov
flds
ja
frstor
sbb
movsl
jg
fwait
xchg
cmp
sub
dec
jns
sahf
js
in
mov
mov
mov
add
sub
and
jo
pop
test
lock
jl
aaa
cwtl
std
push
inc
sub
out
add
cmpsl
jl
lea
ljmp
adc
inc
sub
fs
out
xchg
fisubrl
push
push
inc
adc
push
and
mov
pop
mov
inc
dec
cld
xchg
jmp
or
dec
pushf
push
cwtl
cmp
pushf
pushf
adc
mov
std
jle
cli
imul
out
sub
test
and
into
xchg
adc
xor
and
or
jge
inc
jae
pop
jl
dec
outsl
mov
mov
adc
rcll
sub
aam
loopne
mov
cmp
orb
lret
test
sbb
adc
cli
mov
mov
popa
or
mov
jecxz
mov
fistpll
jge
sub
lds
jno
sub
push
cwtl
fisubl
jbe
dec
stos
xchg
pop
xchg
mov
push
inc
aad
in
push
jmp
pop
popf
inc
pushf
stc
mov
fs
push
dec
into
std
dec
sub
pop
jmp
push
stos
pcmpgtb
ds
or
push
mulb
mov
pop
lods
mov
pop
mov
gs
cwtl
push
sbb
mov
into
push
popf
outsl
inc
sub
sbbl
cltd
jae
adc
das
dec
lea
pop
sub
fldenv
inc
add
mov
stos
mov
es
cmpsl
ljmp
dec
std
je
lds
dec
inc
arpl
mov
add
sub
lods
pop
jne
and
or
aad
shl
add
lret
xchg
sbb
jge
jp
lock
leave
inc
pop
fwait
cli
repz
sbb
stos
pop
popf
cmc
in
scas
je
ja
xchg
mov
mov
frstpm(287
xchg
pop
adc
xlat
in
cltd
int3
push
add
or
pop
orb
das
fs
sbb
cmp
jno
into
or
test
cld
adc
shrl
jnp
daa
hlt
outsl
mov
mov
dec
jmp
jmp
subb
clc
xor
and
sahf
xchg
jp
or
adc
fiaddl
lods
sub
cmp
testl
rcrb
dec
iret
aad
inc
jge
inc
xchg
mov
scas
xor
lock
or
cmp
xchg
push
sbb
pushf
add
fwait
mov
lods
adc
mov
outsb
add
test
pop
outsb
cmp
mov
xor
outsb
push
xor
push
jne
dec
dec
aam
cmp
insb
jae
aas
lcall
fnstsw
push
xchg
push
lea
mov
cmpsl
rclb
jl
cmp
jbe
lcall
fisttps
push
adc
sub
rclb
mov
push
jp
mov
loope
aaa
mov
out
or
xor
test
lahf
push
mov
xchg
mov
sub
push
outsb
lock
jg
dec
out
arpl
in
shl
ret
arpl
cld
fisubrs
js
or
sub
inc
rcl
sti
inc
cmpsl
mov
inc
and
fisubs
arpl
mov
xchg
iret
cmp
mov
je
pop
jbe
aaa
jp
jge
sti
add
stc
inc
add
idiv
lea
dec
neg
xchg
outsb
out
sbb
dec
addr16
loope
mov
stos
mov
add
or
push
fidivl
cmp
pushf
xchg
lods
mov
jns
gs
jae
imul
shlb
dec
push
sahf
dec
in
jae
mov
rorb
add
in
test
jecxz
cmp
add
adc
adc
out
mov
cwtl
mov
test
cmc
push
mov
pop
mov
cs
out
lods
inc
adc
mov
outsl
in
dec
push
arpl
outsb
pushf
rolb
pop
in
push
push
testb
push
testl
adc
les
lea
xor
mov
mov
xor
add
sub
pushf
push
xor
and
mov
cmp
aas
fdivs
xor
xchg
das
sub
pop
lea
xor
add
addb
aad
add
sbb
adc
push
or
sbb
lods
std
imul
pop
out
outsb
push
lret
jne
mov
push
rolb
test
add
fdivrl
xchg
sub
into
stos
dec
hlt
test
jle
push
xor
cmpsl
mov
out
mov
add
mov
dec
dec
jae
popf
fs
repz
mov
cli
js
sbb
jp
mov
ljmp
and
scas
daa
jo
jl
push
mov
repz
xchg
jbe
cmp
xchg
lea
dec
add
push
testb
repnz
or
sarl
out
int
or
ds
jns
das
xchg
mov
push
or
add
lahf
in
loop
jb
sbb
xchg
cmpl
jge
adc
stos
xchg
rcrl
insl
pop
mov
ljmp
cli
das
xchg
push
and
cmp
jge
sti
cmpsl
inc
fdivp
leave
inc
xor
mov
jns
push
dec
sbb
shlb
pop
cltd
xor
push
dec
inc
and
xchg
xor
lret
mov
lret
jmp
testl
mov
inc
sahf
and
fildl
mov
jb
mov
xor
in
sbb
adc
rorl
adc
gs
push
and
hlt
rclb
pop
mov
mov
es
je
jno
sbb
arpl
ds
test
imul
loop
les
aam
cwtl
add
jle
clc
dec
jle
lods
jo
lahf
sbb
xor
push
jmp
lret
lcall
int
sub
js
and
cmp
sbb
push
mov
pop
cmovb
test
inc
mov
addr16
into
in
push
jg
fistps
push
lds
ds
cmpsb
cltd
lods
push
daa
cltd
divl
rcll
push
jb
inc
lock
in
jmp
xor
sarl
in
sahf
fcmovnb
pop
test
cmpsl
inc
sbb
out
pop
add
mov
enter
lret
outsb
std
jne
dec
and
add
inc
push
in
sbb
leave
mov
jge
mov
push
outsb
pop
rcrl
inc
sbb
fwait
mov
outsl
xlat
xor
and
int3
adc
xchg
and
hlt
mov
ja
sub
or
inc
and
outsb
mov
push
imul
pop
xchg
outsb
ficompl
xchg
jle
enter
dec
inc
loop
jnp
pop
dec
inc
xchg
pop
adc
test
ret
adc
pop
mov
cmp
cmpsl
and
es
sub
lock
sbb
pop
mov
std
imul
ret
or
insl
fsubs
xor
test
sub
xchg
sti
push
lea
cs
pop
stos
fisubrs
cmp
push
sub
sub
push
inc
cmp
pop
or
cmp
sahf
push
mov
cmpsl
push
sbb
push
dec
popl
mov
outsb
xor
movb
rol
cmp
adc
data16
dec
sub
imul
test
jle
shl
dec
mov
test
test
test
fs
sti
mov
arpl
lahf
cwtl
adc
xor
or
fdivl
addr16
jo
out
in
sbbb
sub
sbb
adc
inc
jl
popf
pop
push
xor
and
xchg
adc
and
cmp
inc
sbb
sarb
fstpt
cmpsb
mov
scas
pavgb
sub
fstl
sahf
adc
fwait
sub
jecxz
xchg
jne
mov
mov
add
pop
aaa
mov
mov
mov
mov
inc
mov
ja
pusha
jno
fucom
adc
loop
pushf
fcmovbe
dec
add
dec
or
mov
dec
mov
xor
jge
ss
dec
in
and
sub
mov
int3
and
mov
outsl
push
mov
pop
decb
jg
inc
addb
mov
cmpb
mov
xor
cli
push
movl
cli
nop
adc
es
mov
push
or
loopne
call
sub
stos
fucomi
or
sub
dec
push
cltd
mov
or
scas
sbb
xchg
cmp
dec
mov
jno
add
stos
sbb
cmp
scas
dec
bound
sahf
pop
pop
mov
aaa
fldcw
rcr
aad
test
lods
lret
mov
int
xchg
inc
jo
xchg
out
mov
fmull
loop
dec
popf
into
jecxz
push
and
adc
xor
sbbl
push
cmpsl
lds
xchg
xchg
add
mov
add
dec
and
out
repz
cmp
cmp
popa
pop
push
xchg
and
neg
jecxz
pop
mov
inc
mov
inc
orl
pop
fnstenv
outsl
sahf
inc
dec
scas
or
pop
data16
lahf
std
mov
loop
loope
scas
ljmp
sti
jns
jb
icebp
leave
mov
add
sbb
jl
sbb
mov
outsb
fldenv
jns
xchg
mov
lods
jns
cmc
stc
fstps
jmp
loope
and
xchg
mov
mov
ret
fsubs
xchg
sbb
push
push
sub
sahf
bound
call
push
test
test
in
bnd
lods
inc
inc
movsb
pop
out
enter
add
dec
stc
fmulp
aaa
cmp
sbb
push
rorb
push
sub
ljmp
imul
cmpsl
arpl
test
cwtl
sub
jle
loop
xchg
pop
pop
test
dec
movsl
enter
nop
or
insb
dec
mov
add
iret
lret
mov
jb,pt
jp
data16
outsb
mov
cmp
lahf
or
sbb
push
mov
sbb
mov
push
js
lret
imul
jmp
mov
dec
shll
pop
movsb
sbb
stos
loope
ljmp
xlat
or
outsb
addr16
fs
cmp
cmpsl
call
into
mov
mov
and
sbb
push
jnp
adc
aas
or
mov
mov
pop
sub
push
repz
mov
dec
rolb
lods
lret
jne
inc
cwtl
jns
int
iret
jbe
outsl
cwtl
push
pop
hlt
xor
mov
pop
out
or
icebp
jp
mov
jmp
lds
hlt
fs
arpl
jae
outsl
in
idivb
push
push
add
sbb
repnz
dec
cmp
icebp
add
add
jae
mov
sbb
cmpsl
mov
pop
add
push
insb
add
push
movsl
leave
mov
jne
adc
nop
out
das
add
inc
cli
xchg
sbb
in
in
add
stos
test
mov
jp
mov
scas
and
push
add
out
jecxz
notl
pop
inc
icebp
shlb
andl
cld
stc
xchg
lcall
fwait
sbbl
in
mov
mov
addr16
outsb
test
inc
inc
loope
dec
test
repnz
push
adc
test
sub
icebp
sbbb
mov
and
imul
out
jle
mov
adc
scas
fwait
jp
hlt
and
mov
sub
sub
cs
in
mov
mov
dec
mov
jl
movsl
jle
in
movsl
xchg
imul
lods
pushf
mov
jge
out
mov
jl
es
imul
cmp
pop
push
shl
xchg
push
push
das
test
fldt
dec
pop
sbb
mov
push
and
jno
pop
sti
adc
sahf
mov
js
lcall
inc
pop
adc
addb
inc
lret
in
jle
cmp
cmp
ss
sub
cmp
lret
jmp
or
test
fisubrl
sarb
dec
gs
xchg
or
and
lcall
and
sahf
aad
insb
xor
push
out
loop
mov
mov
push
scas
js
das
sub
in
pop
jnp
rorb
xor
adc
add
ret
into
pop
jbe
add
jge
add
sbb
fimuls
aam
xchg
jns
sti
adc
or
jecxz
dec
and
cmp
push
jg
add
je
mov
ret
pop
push
js
push
push
rcl
dec
or
cmp
pop
ja
jo
jbe
mov
cli
push
repnz
jmp
and
testb
adc
inc
popf
repz
aaa
mov
fimull
cmc
mov
push
ja
ljmp
arpl
cli
mov
das
fwait
push
test
or
ja
int
nop
mov
push
push
xor
lds
pop
das
fwait
cmp
loop
push
mov
in
push
pop
sbb
lcall
add
pop
cmp
lods
test
inc
ljmp
test
aam
cmp
out
int
cmp
into
bound
in
xor
mov
ficoms
neg
leave
loopne
fisubs
test
pop
je
jnp,pn
sub
mov
repnz
out
push
mov
jne
imul
mov
mov
mov
mov
and
pusha
aam
xor
sbb
popf
mov
push
and
jmp
xor
lods
cmpsl
mov
push
incb
movb
shrl
push
sub
adc
xchg
add
jecxz
mov
jg
mov
pop
ja
inc
dec
cld
pop
pop
scas
in
mov
cmp
shll
lea
mov
pop
icebp
loopne
movsl
dec
addr16
and
adc
repz
orb
xor
adc
and
and
inc
inc
shrb
ja
cs
mov
sbb
mov
mov
dec
sub
push
nop
pop
xchg
imul
fiaddl
push
sub
xchg
adc
ret
mov
sahf
outsb
lock
aas
or
pop
scas
mov
xor
ror
fildll
lret
pushf
fstps
jge
rclb
stos
or
jecxz
daa
inc
ds
xchg
jg
scas
in
sar
xor
or
push
add
scas
icebp
loopne
gs
xor
int
mov
adc
movsl
movsl
iret
cld
dec
cmp
mov
mov
jl
nop
movsb
xor
das
scas
dec
test
mov
stos
shl
decl
inc
sbbl
jnp
outsl
sarl
loope
loope
mov
xchg
push
cmpsl
dec
inc
xchg
jno
repz
xor
cs
and
subl
fsubrl
lods
cwtl
cmp
add
ljmp
inc
cmc
mov
add
inc
jg
fisubrl
cwtl
popa
xchg
clc
in
xor
lcall
rcll
jp
mov
into
outsl
out
les
inc
push
mov
sub
dec
aaa
sub
lcall
xor
test
xchg
loop
add
test
shll
scas
ja
outsl
rclb
shrb
pop
xchg
pop
mov
pop
xor
movsb
mov
dec
std
enter
jmp
and
mov
cmp
jecxz
push
out
iret
inc
or
xor
add
cmc
loopne
push
xor
sbb
jle
enter
or
mov
testb
scas
popl
cli
sub
leave
xchg
mov
out
adc
xchg
push
fwait
cltd
shrb
ret
ret
mov
fidivrl
dec
inc
idivb
ljmp
push
imul
std
mov
ficoms
test
aaa
mov
xchg
xchg
adc
xchg
xor
lea
into
and
mov
fwait
xor
mov
jae
rcrb
and
int3
xor
pop
inc
dec
nop
pop
sahf
cmp
lahf
mov
lret
jp
ret
add
push
push
inc
repnz
mov
gs
push
adc
mov
jge
fwait
stos
sub
sbb
fistl
adc
daa
loope
test
pop
mov
mov
jb
mov
inc
jae
jo
popf
outsl
mov
dec
std
std
out
or
and
sub
fmulp
into
in
call
stc
inc
ret
icebp
sarb
mov
mov
lret
and
ret
lret
jp
jbe
ja
imul
push
sub
outsl
cmp
fildll
inc
dec
sti
add
dec
mov
ja
outsl
add
xchg
cmpsl
mov
pop
mov
dec
inc
mov
ret
js
dec
ret
xchg
mov
leave
cmp
pop
stos
shll
mov
lret
adc
xlat
mov
mov
push
or
xchg
cld
ficomps
mov
inc
out
pushf
test
fwait
cmp
andl
clc
icebp
inc
movsl
mov
int3
repz
mov
movsb
mov
sub
ja
cmp
jg
xor
shl
int3
and
sti
aam
mov
xor
insl
xor
dec
pop
je
dec
je
es
mov
addr16
xchg
mov
sub
test
jp
xchg
mov
push
add
pop
ret
xor
sbb
mov
test
scas
jbe
out
imul
sub
mov
or
or
out
roll
jne
outsl
loope
cmpsb
ret
imul
jns
xchg
sub
sub
loop
dec
mov
dec
scas
movsb
addb
adc
loope
add
call
in
stc
dec
mov
aaa
cmp
js
push
xchg
iret
nop
cmp
and
ds
stos
xor
jmp
enter
sahf
les
outsb
mov
adc
add
jb
stc
or
push
cltd
jmp
pop
insb
mov
outsl
fcoms
jne
jbe
ds
or
cmc
lahf
sbb
test
mov
lret
das
add
in
dec
sub
jnp
dec
popf
cmp
addr16
sub
out
push
cwtl
stos
out
sbb
imul
inc
and
movsl
lds
xchg
and
adcb
and
cs
dec
scas
jae
add
jg
adc
sbb
mov
mov
pop
iret
xchg
sbb
and
push
std
push
pop
jle
movsl
jmp
xchg
xor
push
jbe
gs
dec
dec
mov
push
sbb
and
fs
mov
js
and
lock
inc
and
dec
jne
ja
fistpll
mov
adc
dec
jmp
jecxz
pop
mov
loop
cmp
jge
test
loop
push
test
jg
js
sahf
mull
cmp
rcr
stos
push
push
lcall
ss
cmp
mov
jle
push
xchg
fldt
pmaxsw
xor
push
sti
les
test
push
push
xchg
adc
repz
push
lret
iret
sahf
pop
push
cltd
push
dec
or
clc
push
or
or
fists
movsl
xchg
push
jne
adc
inc
xchg
push
in
mov
mov
gs
adc
mov
stos
xchg
dec
jle
cmpl
xorl
arpl
mov
push
fsubrl
mov
inc
aaa
packssdw
je
inc
das
lea
iret
sub
add
lds
sbb
nop
iret
cmpsb
and
lahf
loope
in
xchg
and
push
push
mov
push
push
add
push
mov
mov
pop
pop
adc
and
movsb
adc
push
jge
scas
cmp
ja
adc
nop
add
in
add
insb
xchg
dec
xchg
inc
andb
daa
mov
orb
dec
aam
dec
repnz
mov
test
stc
leave
stc
xor
imul
shll
mov
call
arpl
loop
pushf
cld
adc
ljmp
pop
cmpsl
mov
inc
lods
adcl
fistps
in
rclb
aas
cmc
ljmp
xor
es
test
je
je
jnp
in
sub
mov
push
loopne
sti
add
cmp
and
or
je
jae
xor
push
ljmp
mov
test
out
add
dec
lods
rclb
arpl
xchg
aam
jmp
sbb
data16
jb
fisubs
ja
adc
popf
in
dec
inc
mov
push
iret
xor
test
push
pop
lret
add
shrl
loope
push
rcrl
fcmovnbe
out
iret
dec
pop
ds
xchg
xlat
add
and
in
movsl
mov
loop
lret
pop
and
outsl
out
dec
mov
popa
sub
sub
hlt
scas
imul
push
in
das
xor
xor
inc
int
add
out
xchg
loopne
mov
test
fbld
sti
mull
mov
dec
sbb
scas
leave
cmc
sbb
ljmp
jecxz
in
jns
push
in
negl
incb
inc
pop
mov
andl
in
pop
pop
cmp
adc
fistpll
insl
mov
or
imul
adc
loope
lcall
cmp
das
fisttpl
popa
ret
adc
loope
push
sub
inc
test
es
incb
push
sub
loope
adc
lea
lds
das
lea
adc
insl
int
mov
pop
sar
mov
xchg
xor
jb
stos
mov
aad
rcl
cmpsl
lds
add
jb
mov
clc
jmp
fstpt
int3
push
dec
cwtl
pop
dec
test
adc
adc
enter
addr16
inc
xor
mov
add
rcll
adc
sub
outsb
aas
or
or
jmp
pop
outsl
sahf
fs
cmp
loope
xor
sbb
cmpsl
cli
into
cli
lahf
sub
adc
inc
decl
fistpl
std
arpl
inc
lods
sbb
repz
sti
xchg
or
fwait
inc
cmc
ljmp
sbb
sub
dec
xor
aad
add
push
mov
mulps
bound
pop
shl
cmp
mov
push
sbb
mov
xor
push
rcrl
div
es
mov
bound
sub
cmp
xchg
jmp
stos
movsb
fldl
mov
adc
popf
jo
lods
cmp
mov
adc
mov
mov
xlat
push
stos
stos
adc
addr16
xchg
mov
push
pop
imul
push
cwtl
div
aaa
aas
pop
hlt
xor
clc
dec
dec
clc
hlt
int3
ret
and
mov
mov
add
cmp
rol
jb
in
cmp
cmpsl
mov
lods
std
jns
push
pop
mov
pop
lea
push
mov
pop
mov
movb
int3
fldt
and
into
rol
ret
popf
test
jno
hlt
and
stc
or
cs
ret
jbe
pop
adc
xchg
rolb
mov
test
mov
fnsave
xchg
xchg
test
push
sbbl
inc
icebp
push
rcrl
ret
sbb
sbb
jg
aad
test
xlat
test
xchg
test
cwtl
leave
and
add
mov
filds
pop
nop
mov
adc
sti
cwtl
pop
and
mov
and
in
orl
cmc
pop
orl
fbstp
add
adc
push
jmp
inc
loope
sub
xchg
xchg
pop
fadd
push
adc
or
fisttpl
inc
popa
adcb
mov
in
scas
cmc
incl
dec
push
popa
es
pop
rsm
pop
mov
adc
sub
ja
sti
shl
dec
cmp
mov
dec
mov
pop
scas
imul
xchg
loop
push
and
lcall
popf
mov
mov
xor
notb
sbb
lods
add
pop
leave
jne
out
testb
stc
hlt
and
adc
vpmacssww
mov
add
mov
pop
push
add
out
xchg
je
imul
push
movsb
xchg
xor
int
inc
mov
push
jmp
iret
mov
sub
jns
pop
inc
cmp
push
ret
mov
mov
lret
aam
push
adc
ror
or
inc
jp
pop
add
pop
es
popf
pop
int3
fdivrp
push
inc
scas
and
or
jl
or
pop
push
xchg
jb
and
inc
mov
pop
mov
jns
push
pop
rolb
adc
das
lods
and
jmp
adc
jl
fsubs
jbe
out
cwtl
in
pop
dec
sbb
outsb
inc
jnp
out
sahf
lods
sbb
xchg
daa
imul
jbe
pop
shrl
imul
mov
iret
xor
and
mov
cmp
dec
enter
test
adc
fsubrs
std
hlt
dec
repnz
cmpsl
cltd
inc
ds
arpl
arpl
rolb
mov
in
jns
cltd
lods
cmp
xchg
cmc
add
imul
sub
mov
cld
mov
je
popf
outsl
ljmp
xor
pop
movsb
and
jmp
sahf
out
or
inc
push
pop
out
pop
addr16
mov
je
clc
xor
jecxz
jno
xor
jo
add
mov
push
mov
test
jb
or
add
out
jnp
movsb
fs
mov
pushf
xchg
push
add
cld
push
push
ja
sub
add
xchg
mov
dec
arpl
imul
mov
popa
cmp
mov
fisttpl
out
scas
test
daa
enter
sbb
mov
xor
mov
movl
jmp
sub
imul
mov
mov
int3
jno
and
clc
icebp
or
sbb
push
inc
sahf
jae
xchg
sbb
bound
inc
popf
fnstenv
leave
dec
push
add
lret
cmp
jp
aaa
testl
stos
dec
pop
call
imul
daa
mov
sbb
add
cmp
xchg
repnz
cmc
in
mov
push
ficoml
pop
scas
lods
mov
add
xchg
inc
pop
sub
xchg
cmp
int
stos
adc
adcb
sbb
std
xchg
out
pusha
test
mov
xlat
out
dec
cltd
out
ljmp
xchg
in
dec
ja
inc
push
es
enter
sub
popf
sarl
xchg
je
out
sahf
imul
dec
or
jns
pop
sbb
mov
sub
mov
mov
ds
sbb
pop
adc
xchg
jmp
pop
lds
xchg
inc
test
mov
sbb
add
jmp
jno
cmp
cwtl
stos
cld
jl
les
stos
out
repz
fs
cmp
and
lahf
dec
das
add
dec
jle
out
jbe
push
gs
ja
test
shll
jo
jmp
movsl
and
push
push
jns
test
pushf
into
sbb
mov
aad
xchg
mov
and
push
lret
adcl
mov
mov
arpl
out
les
pop
push
mov
ret
test
mov
mov
aaa
and
repnz
into
inc
inc
sahf
shll
movsb
gs
xchg
mov
mov
icebp
mov
pusha
into
cwtl
xchg
bound
nop
xchg
out
lods
gs
and
aas
rcll
or
cmp
jp
push
scas
cld
and
ljmp
ficoml
push
mov
gs
push
popf
out
iret
dec
mov
push
lcall
add
lods
lret
out
pusha
xor
push
pop
pop
sub
fisubrs
roll
lea
pop
outsb
je
in
add
xchg
in
shll
xor
les
jne
xor
jg
mov
mov
test
leave
add
mov
cs
das
fmul
add
xor
int
pop
sbb
test
xor
arpl
sbb
inc
dec
dec
add
ds
dec
and
sbb
pop
cld
add
cmpsl
pop
mov
mov
push
and
ds
dec
jmp
scas
mov
jno
xor
je
bound
or
fwait
aam
sti
test
pop
xor
cmp
loopne
pushf
std
incb
dec
sub
sbb
xchg
pop
mov
push
cmp
mov
push
cmpl
rcrl
inc
jmp
sbb
inc
push
mov
dec
mov
das
and
and
lcall
xlat
pop
negb
test
fstpl
stc
movsl
scas
ds
pop
cmpsb
inc
orb
inc
lea
shll
inc
jns
cmpsl
lret
sub
ss
or
mov
vpshlq
xor
push
xor
imul
shll
rcrl
jmp
pop
pop
imul
repnz
dec
xchg
cmc
xchg
mov
mov
mov
sub
loop
dec
shufps
mov
fimull
insb
test
enter
dec
and
push
arpl
pop
ret
aas
mov
inc
xchg
sbb
cli
cmpsl
leave
pop
es
jp
cli
les
or
cmc
mov
fwait
adc
mov
daa
mov
das
imul
test
lahf
mov
int
data16
subb
adc
mov
in
fmul
pop
inc
jae
pop
sbb
inc
cmp
pop
mov
insl
stos
mov
mov
inc
mov
hlt
inc
inc
adc
mov
rolb
jp
mov
push
arpl
sarl
or
test
inc
jnp
or
and
out
add
in
ja
imul
arpl
test
ret
mov
popa
jmp
fists
dec
sbb
into
dec
jnp
or
je
repz
xor
int3
adc
movl
mov
mov
adc
dec
cmpsb
inc
loopne
lock
outsl
subb
loope
dec
mov
lret
dec
fbstp
arpl
call
adc
popa
cmp
mov
jecxz
inc
inc
or
movsl
inc
insb
and
xor
aaa
and
int3
adc
je
daa
lock
mov
mov
in
mov
aaa
jge
xchg
fldpi
leave
rcll
in
je
bound
test
aam
lods
sbbb
jnp
and
dec
cld
outsb
jne
xchg
inc
rcll
addl
xchg
addl
es
imul
mov
sub
cmc
adc
movsb
btr
insb
test
sub
rcr
adc
enter
cmp
les
push
sub
lret
cmpsl
das
test
mov
push
daa
cmpsl
and
fcmovbe
push
cmp
pop
push
adc
and
or
sub
fildll
inc
sub
or
mov
hlt
jnp
in
mov
and
out
sbb
fsts
mov
sub
rcr
push
xor
push
xlat
insl
loope
fwait
lret
or
push
mov
push
cmpsl
in
sahf
xor
xor
inc
cmp
mov
mov
stos
dec
dec
adc
or
pop
jl
aam
pop
insl
inc
bnd
dec
sti
imul
sbbb
ffree
dec
push
add
popf
push
mov
sbb
and
push
push
lret
gs
jbe
push
ret
push
sarl
pop
cmp
lcall
popf
pusha
fwait
das
lea
cmp
inc
jne
push
cli
mov
or
je
add
je
jp
jl
xchg
jmp
outsl
pop
push
scas
movsb
xchg
and
into
cmpsl
call
xor
iret
loop
mov
popa
jno
int3
int3
mov
sbb
outsb
ret
and
in
rcl
iret
pushf
out
repz
mov
shl
push
and
fwait
mov
movsl
aam
loop
sub
imul
fldt
lods
in
je
push
dec
movsb
lret
mov
fsubs
lods
dec
adc
stc
aam
loopne
mov
cmpsb
adc
jo
in
mov
fisttpl
movsb
or
fisttpll
mov
ljmp
int
sbb
loopne
xchg
ror
and
filds
or
or
icebp
mov
test
fidivrl
test
xor
mov
scas
and
xchg
sub
push
outsb
enter
mov
ret
dec
fists
daa
lods
in
stc
lret
sub
scas
pop
mov
mov
add
popa
jg
out
mov
xchg
lds
xchg
inc
mov
or
mulb
or
fldenv
cmp
arpl
lds
mov
inc
mov
in
jp
shr
pop
outsb
mov
push
push
icebp
push
pusha
lcall
clc
and
data16
push
cmp
test
arpl
add
or
jb
popf
jge
fbld
cmp
cmp
adc
mov
push
lods
stos
pop
dec
sub
push
aam
jmp
or
repnz
fs
mov
xchg
jo
sbb
add
inc
rol
push
add
icebp
mov
and
data16
push
aas
dec
mov
cld
xchg
stos
es
or
cltd
xchg
inc
adc
dec
clc
repz
loop
rorb
sti
nop
or
pusha
add
fucomi
mov
push
enter
test
jbe
fnsave
sub
lock
or
dec
mov
rcl
and
xchg
adc
aas
mov
enter
add
xchg
popf
shrl
mov
rcl
popa
jnp
mov
mov
mov
pop
pop
aaa
insb
inc
xor
push
pop
fstpt
fs
shlb
movsl
pop
sbb
sbb
imul
xor
gs
pop
sub
xchg
pop
mov
fdivp
xor
push
jae
dec
lcall
stc
xchg
and
sub
lock
mov
push
mov
jae
out
fmuls
popf
cli
js
sub
jp
mov
adc
inc
pop
call
cmpsb
cmpsl
xchg
scas
mov
mov
ret
cmp
aam
jns
imul
test
xchg
push
push
jmp
add
lcall
imul
ficoml
pop
pushf
arpl
cs
dec
xor
loop
pop
call
or
sub
or
adc
jle
and
add
or
jo
int3
jns
mov
mov
inc
mov
xchg
xchg
dec
adc
repz
sahf
push
push
insl
in
add
mov
gs
stos
pop
add
popl
lock
rcl
scas
cmp
adc
push
and
stos
inc
inc
add
sbb
mov
pushf
adc
mov
nop
andb
subl
jo
pop
dec
xchg
sbb
push
jnp
xchg
imul
ds
dec
jmp
pusha
outsl
and
mov
shll
bnd
mov
sbb
mov
fimuls
or
ficoms
pop
sbb
pop
ret
lds
les
enter
xchg
pushf
inc
sbb
pop
or
mov
in
dec
xor
in
cltd
pop
cmp
mov
pop
mov
xor
jecxz
xchg
je
inc
stos
loopne
cld
inc
and
xchg
das
ljmp
sti
das
xor
repnz
jge
mov
or
lret
jmp
cmp
sbb
adc
inc
adc
mov
push
aas
xchg
clc
hlt
andb
xchg
outsb
adc
popf
or
jno
mov
cmpb
push
add
notl
pop
arpl
pop
sti
cmpsb
lcall
cmp
mov
aas
and
mov
mov
outsb
adc
mov
mov
pop
sub
fimuls
adc
dec
das
ja
xchg
inc
in
fstp
mov
out
test
dec
push
popf
aaa
mov
and
push
xchg
jl
cmc
aas
or
inc
sbb
pop
int3
or
push
dec
mov
pop
jl
ja
adc
pop
fiadds
add
adc
lock
sub
inc
mov
mov
pop
cmp
test
mov
mov
aad
test
dec
movsl
aas
cmp
adc
in
push
jg
int
scas
fsubl
pop
cmpsl
test
xor
test
xor
mov
sub
xorl
xchg
ds
cs
inc
inc
adc
ss
cltd
aad
mov
jle
adc
fisubrl
cmp
mov
loop
roll
lret
xor
outsl
xor
fldl
insl
push
pop
lods
inc
push
ds
data16
and
or
or
and
sub
leave
xchg
sbb
mov
pop
pushf
mov
add
jle
scas
jp
shrl
out
inc
xor
inc
fistpll
mov
mov
in
std
cli
or
adc
aam
rcrb
arpl
sub
adc
mov
jmp
inc
push
jg
and
push
add
mov
jnp
ljmp
push
add
mov
imul
mov
mov
mov
rcll
ss
mov
push
ds
jmp
and
addr16
mov
data16
stos
sub
xchg
mov
fmuls
dec
inc
scas
sar
xorb
or
xchg
push
sbb
rcl
sbb
cmpsb
xor
stos
loope
xor
gs
lea
icebp
mov
and
loope
icebp
dec
lahf
shrl
cmp
jge
cmp
mov
pop
xor
rol
push
jmp
mov
jno
jle
lods
fisttps
adc
add
mov
loope
xchg
imul
loopne
push
decl
aam
mov
xchg
stc
cmp
jecxz
notl
sbb
testl
imul
imul
call
loope
pop
and
aam
ljmp
cs
push
rdtsc
push
inc
mov
and
sub
insl
xchg
std
or
mov
aaa
test
out
xchg
pusha
in
lock
xor
das
fld1
imulb
scas
jmp
aad
nop
enter
aas
xchg
cmpsb
adc
pop
cld
in
mov
cs
cmp
incb
xchg
cmp
outsb
lret
and
jge
cmc
testb
add
xchg
out
jns
jno
mov
lret
insl
lock
sbb
mov
and
insl
inc
mov
in
lock
fldl
lods
sub
jae
arpl
inc
aas
ds
outsl
cmp
jmp
dec
cld
add
pop
add
inc
lret
cmpsl
cmp
and
mov
inc
addr16
imull
and
xchg
mov
push
rclb
push
les
int3
dec
notl
push
dec
aaa
jne
shlb
outsb
sahf
xchg
push
lock
and
mov
xor
icebp
push
mov
push
test
or
sbb
jecxz
inc
jnp
fs
sbbl
inc
pop
jb
data16
ret
movl
in
scas
popf
sbb
cwtl
inc
pop
out
and
add
xchg
addr16
gs
sbb
ja
adc
das
movsb
stc
or
and
je
test
aad
js
clc
int3
pop
xor
int
maskmovq
fsubs
sub
mov
jns
and
arpl
jg
or
dec
or
mov
negb
aaa
pop
and
xor
daa
pop
dec
xor
pop
imul
add
xchg
add
xor
notl
insb
pop
and
scas
adc
cmp
test
mov
nop
jp
out
add
test
adcb
cmpsb
sub
clc
mov
push
fcmove
mov
inc
and
iret
fmull
movsl
add
in
cmpb
enter
xchg
jbe
push
jg
repz
gs
fbstp
je
cmp
xchg
xchg
xchg
orl
cs
sub
xchg
sti
add
pushf
mov
xor
gs
pop
push
test
mov
sub
jecxz
insb
std
int
dec
js
stos
add
icebp
jecxz
dec
fs
adc
jg
sbb
adc
add
lods
cli
popf
movsl
adc
push
icebp
int3
fcomps
jo
test
inc
lea
test
out
mul
pop
lods
iret
xor
fnstsw
lea
jl
cld
cld
pop
dec
in
call
dec
sbb
sbb
sub
frstor
aaa
outsb
push
push
mov
cmpsb
xor
sbb
mov
push
repnz
and
mov
ret
subb
out
or
bound
sub
outsl
into
cmpb
mov
adc
icebp
movsl
mov
popf
scas
xchg
aaa
in
sti
mov
aas
rorb
jp
xor
stos
test
xor
in
push
push
mov
insb
mov
out
iret
inc
lock
fistl
adc
popf
adc
jbe
push
pop
cwtl
ljmp
or
mov
add
or
mov
add
xchg
test
and
and
outsl
cmpsl
cmp
jp
xor
fmull
sub
ds
leave
push
mov
xchg
repz
test
and
mov
inc
fwait
and
sub
movsb
test
ret
cmp
pop
jbe
xlat
add
pop
lods
test
push
mov
call
mov
cs
adc
or
bound
fists
xor
iret
xchg
cmpsb
pop
jne
lea
xor
test
shll
inc
mov
lret
lahf
and
lcall
jno
clc
dec
imull
repz
lds
xchg
in
popf
subps
aad
les
mov
rcrb
test
sub
and
fs
ja
sarl
mov
jecxz
movsl
lds
push
test
and
xchg
xor
xor
pop
imul
and
cmp
movsb
mov
gs
fstps
mov
loopne
or
lcall
sbb
test
cmp
mov
insl
jge
cs
lcall
cmp
in
mov
jnp
mov
data16
xchg
xor
shrl
inc
mov
out
inc
imul
lcall
loop
xlat
es
mov
pusha
xor
mov
push
imul
mov
xchg
xchg
imul
jnp
dec
mov
jbe
or
pop
hlt
movsl
jns
mov
inc
into
sahf
scas
adc
add
push
icebp
inc
push
dec
and
fldl
enter
fsubl
or
cmpl
mov
adc
stos
jne
lcall
movsb
loop
sbb
nop
in
js
iret
les
mov
fiadds
fidivs
pop
mov
hlt
inc
lds
add
cmp
lret
pop
cmc
addr16
fsubl
inc
sbb
sbb
aas
dec
mov
dec
mov
jmp
cmp
xchg
outsb
cld
int3
addr16
mov
test
jns
repnz
xchg
xor
push
outsb
adc
dec
out
cmc
fildl
ds
xchg
dec
pusha
inc
cmc
jmp
leave
ja
mov
xchg
cmp
push
in
lods
inc
or
sbb
pop
dec
enter
jmp
addr16
insb
push
clc
cmp
in
jns
sar
inc
inc
add
mov
stos
and
fwait
add
xchg
iret
test
filds
daa
mov
pop
insl
addb
inc
ret
ds
fs
add
iret
pop
mov
bound
add
sarl
clc
mov
mov
jo
and
dec
cmp
cmp
jmp
or
jmp
ss
in
adcb
cmpl
icebp
fistl
cli
ljmp
jne
xor
icebp
sbb
pop
pop
ja
imul
ficomps
sbb
loope
sti
cmp
cli
fwait
jns
jg
jne
push
inc
roll
lods
mov
mov
push
adc
mov
cmp
sbb
jge
add
lods
xchg
inc
xor
stos
shr
loop
sti
jns
loopne
dec
xchg
mov
add
ficoms
jns
test
lret
fldenv
clc
les
shr
lds
cltd
loope
mov
xor
mov
lods
cltd
jo
in
xor
shll
mov
cmpsl
outsl
dec
aad
ljmp
aaa
roll
or
push
jmp
push
je
inc
mov
cmc
call
sub
cmp
incb
lahf
mov
das
in
scas
repz
test
xchg
sti
icebp
and
cmp
dec
cmpsb
adc
push
pop
sbb
ret
fs
lds
inc
add
xchg
das
jbe
mov
insb
call
out
outsb
loope
vphaddubw
sbb
daa
popa
out
dec
pop
lods
dec
mov
out
pop
aaa
imul
adc
fs
negb
pop
dec
cmp
dec
mov
mov
clc
hlt
inc
movsb
ds
jmp
dec
sub
fstl
shlb
sbb
loop
jo
js
push
inc
xchg
mov
jp
pop
outsb
stc
fcomip
sub
popa
xlat
fdivs
lret
mov
daa
fmull
idivb
test
or
clc
gs
mov
insb
adc
dec
inc
mov
sbb
fwait
outsl
leave
scas
dec
push
and
pop
cli
ss
ret
xchg
mov
xor
sub
inc
out
xchg
push
mov
out
xor
add
divl
std
aad
fcoms
inc
vpmacsdql
or
addb
cmc
mov
dec
dec
dec
in
mov
fstl
loopne
mov
dec
pop
pop
sub
popf
rorl
shl
push
jne
test
pop
adc
push
jns
push
das
push
sarb
sub
adc
push
fistpl
mov
xchg
rolb
and
xor
nop
and
inc
inc
mov
pop
and
xchg
ficoms
gs
sbb
mov
sub
cmp
clc
jg
jns
movsb
repz
push
mov
ror
jne
xor
sub
je
rolb
sub
pop
movsb
fdivp
test
cmpsb
pop
aas
mov
lahf
xor
stc
jl
xor
add
push
mov
dec
lea
adc
dec
jb
nop
inc
cli
sub
scas
loope
sub
dec
mov
push
daa
mov
cwtl
lsl
jno
and
pop
dec
mov
das
cwtl
dec
iret
or
add
test
and
dec
dec
ret
cmp
cmp
mov
rcrb
jle
je
notl
int3
cmpsl
shl
int
push
fdivrp
js
dec
lods
jno
adc
out
adc
xchg
dec
dec
dec
cwtl
mov
aam
sbb
adc
out
mov
mov
dec
imull
lcall
xchg
icebp
push
xlat
sub
addr16
dec
loop
out
adc
inc
inc
in
fs
push
loopne
test
or
push
jg
push
mov
ss
inc
popf
jns
out
jno
pop
test
mov
pop
out
xor
cmp
insl
mov
jns
jle
inc
xor
xor
lret
pop
mov
sbb
cwtl
arpl
sbb
or
outsb
mov
lods
push
adc
adc
cmp
dec
sbb
daa
jbe
xor
jp
popa
faddp
fcmove
push
cld
addr16
cmp
adc
and
add
jo
add
pop
cwtl
cmc
mulb
fadds
lahf
push
adc
pop
mov
stos
adc
das
ret
add
subl
movsl
clc
lret
cmp
xor
lds
in
cs
lahf
sarl
in
xor
xor
call
cmp
jecxz
pop
movl
sub
jp
xor
xchg
fcompl
das
iret
jp
iret
loope
mov
inc
dec
ja
iret
dec
test
fwait
inc
lods
sub
lret
andb
adc
jnp
and
mov
jbe
dec
push
lds
or
fisubrl
movsb
fisubl
lea
arpl
push
lods
dec
pop
and
mov
sti
mov
jbe
lret
jecxz
aas
lea
adc
jno
adc
pop
ljmp
push
mov
jl
push
fadd
and
and
aaa
sub
mov
xor
push
fnstenv
pop
sbb
push
sub
sbb
xor
roll
jne
sub
ret
cli
aad
pop
or
dec
dec
xchg
mov
stc
or
mov
and
leave
pop
popf
push
adc
out
mov
incl
int3
jge
arpl
in
jp
cmp
sahf
pop
dec
loope
sub
mov
and
pop
sahf
mov
out
lods
ret
add
xchg
sti
push
loop
test
aaa
outsl
xor
jbe
xor
fistpl
cmp
ficoms
test
mov
repnz
xchg
lahf
jae
adc
xchg
sub
adc
out
popf
adc
lret
pop
jmp
xchg
mov
cwtl
sub
sbb
inc
dec
rcrl
movb
out
idivb
jle
dec
mov
pop
mov
xchg
scas
mov
dec
jecxz
xor
jb
cmp
ss
clc
ret
xchg
cmp
loope
mov
adc
push
jecxz
movsl
xchg
aas
leave
pop
popf
mov
adc
stc
pop
or
dec
fdivs
test
rcrb
ffree
jno
inc
jne
into
xorl
sub
sbb
cmp
jge
stos
inc
lock
push
outsb
loopne
aaa
add
cmp
out
or
pop
jge
movsb
imulb
jecxz
sub
int
in
jae
outsb
icebp
push
mov
iret
std
xchg
push
and
mulb
cmp
mov
insb
incl
mov
lods
jno
sbb
xor
outsb
inc
dec
lcall
dec
ret
mov
cmp
in
or
inc
inc
cwtl
xchg
pop
inc
je
push
out
adc
sub
ficompl
clc
insb
mov
sub
mov
xchg
sbb
mov
lds
push
cmp
cltd
dec
inc
arpl
jge
sahf
in
xor
add
popa
es
push
icebp
add
outsl
ss
xchg
sub
les
icebp
nop
jg
adc
inc
les
cltd
sub
inc
test
pop
fimuls
or
inc
inc
fs
outsl
out
into
shlb
jbe
ret
out
jp
jno
es
imul
xchg
in
test
mov
je
pop
push
shrl
cmp
xchg
cmp
lock
xchg
lcall
cmp
pop
mul
mov
sub
dec
pop
in
and
iret
aad
adc
mov
xor
les
jbe
lahf
add
mov
rorl
js
sbbb
pop
gs
mov
int3
inc
das
push
pusha
xor
add
mov
xor
mov
xchg
sbb
std
pushf
iret
or
ret
fisubrs
and
int
pushf
imul
imul
adc
push
js
jb
in
aam
and
repnz
cmp
stos
adc
mov
shlw
mov
les
cli
ja
push
xchg
aam
into
mov
dec
inc
fs
mov
xor
fistps
leave
mov
inc
mov
add
cmp
inc
xlat
cli
mov
cmpl
aaa
aad
mov
iret
pop
jle
xor
addb
cmp
stc
sbb
dec
mov
inc
sbb
lahf
add
xor
pop
and
jmp
in
xchg
cmp
mov
push
pop
arpl
cltd
mov
into
mov
inc
mov
mov
into
les
sti
aas
jmp
push
mov
in
sub
xchg
xor
push
pop
sub
or
xchg
pop
xor
xor
dec
loop
jae
out
test
add
jge,pt
sbb
jno
fidivrl
add
and
loopne
jb
xchg
test
in
add
jle
inc
call
sub
sahf
lcall
in
push
sub
fdivr
sbb
add
xchg
lahf
sahf
mov
stc
or
add
mov
ljmp
hlt
hlt
mov
loopne
sub
or
jnp
hlt
sub
imul
sub
or
adc
xor
inc
je
std
mov
cmp
xorl
movsb
ja
xchg
mov
imul
idiv
maskmovq
idivl
stos
push
mov
dec
popf
mov
adc
lret
and
cltd
movsl
sbb
jmp
mov
mov
das
mov
cmp
jmp
mov
pop
dec
int
in
inc
inc
ja
flds
jne
pop
lods
mov
add
das
push
inc
popa
jnp
test
shlb
sbb
jb
mov
int3
push
ficoml
pop
push
jnp
pusha
adc
insb
lcall
js
mov
inc
lods
push
pop
add
add
fisubrl
xchg
inc
in
pop
stc
out
or
sbb
mov
mov
ja
push
cmp
sti
jb
ljmp
cmp
jg
mov
mov
out
movsl
sub
mov
inc
push
push
ljmp
mov
mov
lock
mov
push
mov
ret
and
test
out
mov
rolb
aas
test
insl
sar
idivl
push
in
push
dec
iret
lea
std
mov
into
in
inc
rorl
mov
ds
ret
mov
push
nop
aas
add
xor
addr16
push
scas
pop
jge
adc
push
mov
cltd
into
scas
mov
or
arpl
fs
xchg
mov
mov
ret
lds
imul
pop
dec
aaa
std
aad
decb
test
int3
insb
mov
pop
xorl
pop
dec
scas
outsl
mov
sub
lods
jae
xchg
int3
lds
xlat
je
sbb
call
xchg
mov
jg
mov
xchg
mov
call
movsl
mov
jmp
adc
and
sbb
dec
cmp
mov
fldenv
jle
mov
orb
sbb
mov
adc
sub
decl
mov
cli
outsb
mov
leave
lds
stos
int
push
rcl
or
cli
add
push
fisubs
or
fcomp
mov
les
pushf
into
aaa
pop
mov
test
push
lods
pop
jg
mov
pop
movsb
dec
sbb
jmp
mov
sub
jno
sbb
inc
lods
push
into
inc
pop
rclb
adcl
cld
int
sbb
mov
push
fimuls
mov
ret
cmpl
into
popf
sbb
aas
sarb
rclb
xor
out
sub
repz
xchg
xchg
gs
dec
in
hlt
mov
or
add
cmp
pop
dec
movsb
jp
inc
popf
cmpsb
clc
jg
mov
sbb
cmpsl
cltd
fs
pushf
in
xor
jmp
mov
imul
or
sahf
and
les
pop
pop
fisubl
mov
sub
mov
xchg
sub
iret
mov
mov
xor
sarl
in
jne
sbb
mov
mov
lea
cmp
shl
push
cwtl
dec
daa
xchg
pop
jecxz
imul
into
in
in
jp
jbe
xor
loop
call
jnp
mov
or
xchg
push
sahf
repnz
sbb
jge
xor
out
add
mov
popa
addr16
or
jg
call
dec
and
fstpt
fdivrp
jl
daa
jmp
orl
inc
mov
je
stos
mov
adc
sub
xchg
mov
cmc
cmp
mov
sbb
dec
mov
adc
and
rorl
and
cmp
jns
and
xlat
sti
adc
rsqrtps
outsl
aam
aam
or
daa
pop
cmp
divl
add
test
mov
pop
es
ljmp
lret
mov
outsb
jl
shrl
pusha
mov
cmp
xchg
cmpsl
mov
ret
xor
mov
popf
clc
inc
and
rclb
adc
adc
or
jns
mov
fmul
fsubl
enter
rclb
sub
add
popl
mov
mov
jns
push
in
inc
stos
jecxz
sub
push
jle
lret
mov
mov
mov
sbb
mov
lahf
mov
xchg
mov
aad
rcr
dec
inc
rol
mov
mov
push
movsl
call
jle
popf
pop
jae
push
dec
pop
cwtl
in
mov
lock
jae
sti
hlt
scas
mov
sub
pop
push
bound
movsl
scas
xchg
adc
jle
push
lods
cmp
dec
aad
rcll
loope
jge
rorl
into
sbb
shll
jae
iret
orb
in
fcomip
scas
hlt
pop
mov
jnp
stos
mov
shl
sbb
or
adc
sbb
mov
lds
jmp
push
imul
add
mov
xor
jge
aam
jo
cld
push
and
fcmove
or
call
pop
xlat
dec
cmp
or
fisubl
add
movsb
daa
or
add
xor
inc
gs
xor
jmp
outsb
cmp
loopne
xchg
mov
ret
rcll
popa
inc
push
jmp
test
jmp
adc
sub
pop
jmp
and
mov
or
push
jle
inc
out
ds
push
clc
mov
xchg
test
mov
cmpb
push
hlt
add
jns
int
pop
stos
lock
cmpsb
lret
add
aad
sbb
stos
stos
dec
sbb
orl
aas
and
es
movsl
fdiv
inc
mov
xchg
dec
pop
dec
push
inc
mov
popa
lds
xor
cmp
ds
stos
mov
jl
lods
and
jns
out
jb
jns
imull
lcall
xorb
lcall
and
int3
jb
in
jg
mov
mov
es
push
xorb
stos
sbbl
shrb
andb
and
jae
stc
pop
cs
add
or
lea
jp
pop
rclb
sbb
inc
std
jns
xor
or
sbb
xchg
addr16
pop
clc
push
push
repz
adc
mov
add
sbb
cwtl
mov
xlat
dec
mov
in
int
jl
loope
loopne
cmp
or
push
sub
jnp
and
cwtl
inc
mov
lahf
cmp
std
xor
rcr
fcoml
add
dec
pop
daa
mov
fs
jmp
cmp
inc
jo
loope
push
sarl
dec
flds
imul
rcll
jae
insb
cmp
mov
sahf
jl
aas
dec
popf
pusha
inc
inc
pop
pusha
cmp
sbb
clc
inc
jmp
push
jo
andb
enter
gs
pop
push
jb
shlb
and
dec
push
sbbl
xchg
out
fwait
inc
lahf
icebp
sub
mov
jmp
sahf
or
in
dec
cmp
ret
inc
mov
cmpsl
pop
aam
push
cmpsb
mov
fs
fbstp
mov
cmp
cli
neg
sti
loop
dec
rolb
mov
or
test
xchg
xchg
sbb
orl
dec
and
ror
inc
dec
push
push
hlt
out
out
lret
cmp
clc
mov
mov
add
inc
jg
repz
adc
cltd
xor
mov
aad
popl
mov
dec
out
xchg
dec
mov
lret
pop
push
mov
sub
and
cs
pushw
movsl
jge
sahf
movsl
xchg
mov
pop
mov
and
gs
jb
push
cmc
cmp
es
mov
mov
jmp
and
or
and
inc
jmp
mov
or
out
push
cmp
fdivl
popf
xlat
cmpsl
out
sub
testl
hlt
dec
adc
cmp
xor
dec
in
mov
loop
push
in
call
mov
ret
or
test
lret
xchg
add
idivl
xchg
ret
push
inc
fadds
nop
jp
es
stos
xchg
int
test
add
stos
mov
push
sbb
sbb
cmp
lcall
dec
xor
cli
lods
mov
je
dec
pop
mov
jp
test
aad
mov
loop
inc
mov
sbb
mov
mov
sub
cmpsb
lahf
mov
clc
std
mov
xorw
ficoms
cmpsb
sti
jb
xor
mov
call
dec
and
shl
pop
dec
push
sbb
dec
mov
jb
sub
mull
aad
arpl
cmpsl
shl
cmp
and
push
hlt
decb
mov
inc
sub
push
clc
add
mov
icebp
add
int
and
scas
loop
jmp
mov
flds
fs
subb
out
popl
xchg
push
data16
jp
test
pusha
push
in
cmp
and
out
lea
xor
rclb
jp
xchg
movsl
rorb
inc
ljmp
out
jnp
mov
imull
fidivrs
xor
mov
dec
popa
pop
mov
pusha
mov
push
push
mov
jns
mov
int3
cmc
push
dec
bound
pop
mov
in
repnz
int
jo
scas
shlb
scas
mov
mov
enter
mov
iret
sti
add
int3
push
mov
std
inc
dec
lea
mov
mov
fsubs
xor
mov
nop
xlat
dec
es
fistpll
push
and
popf
movl
arpl
pop
xor
cli
and
push
outsl
in
nop
inc
lock
mov
xchg
test
xchg
test
and
lret
mov
rcll
fists
push
sub
fldt
ja
xchg
jae
mov
cmc
and
sbb
add
adc
movsl
xor
sti
sub
in
mov
cmp
mull
addr16
out
add
mov
ljmp
push
ss
push
out
xchg
mov
jl
cld
cltd
mov
jl
cli
push
in
test
stos
outsl
call
popa
ret
pop
push
sbb
sub
les
clc
sub
cmc
cwtl
inc
das
fmul
jo
test
push
pop
sbb
arpl
fs
xchg
adc
mov
xchg
cltd
loop
mov
mov
xor
sbb
push
and
xor
adc
mov
jp
pop
cld
sub
push
cltd
addr16
pop
idiv
adc
push
xchg
push
mov
daa
sub
sbb
adc
lods
lret
xor
mov
les
jle
sub
pop
cmp
dec
or
sub
nop
pop
lds
jg
fldl
mov
mov
xor
jmp
xchg
out
adc
roll
clc
lock
jns
sti
data16
mov
jmp
repnz
or
pop
leave
cmp
aad
call
sti
inc
xchg
dec
aaa
pop
pusha
ss
call
jmp
push
push
sbb
adc
ds
clc
popf
not
pusha
xlat
and
mul
sbb
cmp
ret
and
mov
cmp
push
imul
xor
aaa
pop
cs
popf
lods
fcompl
or
mov
ficoml
push
cmp
push
fdivrl
inc
dec
push
mov
test
push
sbb
mov
mov
push
pusha
xor
jno
or
idivb
adc
aaa
repnz
imul
jecxz
stos
ret
ja
xor
xlat
jns
jnp
out
jl
sysret
cwtl
cli
cmpsl
das
add
bound
xor
loopne
sub
dec
jge
mov
rcrb
ljmp
fs
sbb
sub
inc
and
jg
leave
mov
ljmp
jno
pop
shll
mov
adc
into
pop
push
ja
mov
out
cmpsl
jbe
mov
icebp
sub
push
movsb
jb
cmp
cmp
ret
fcmovnb
aad
pop
loop
or
inc
jp
lods
js
fstpl
and
enter
test
sbb
xchg
call
inc
sarl
arpl
fidivrl
pop
pop
add
mov
xor
sub
repz
enter
xchg
pop
fs
jecxz
add
rorl
lahf
fidivl
dec
jmp
in
sub
shlb
cmp
aaa
mov
inc
arpl
movsb
fsubr
repz
dec
in
andb
push
sub
shll
pop
mov
sub
lcall
cmp
push
jle
outsl
ja
mov
or
push
xchg
into
or
cmpsb
pop
cld
js
scas
and
or
add
cmp
jbe
mov
pop
mov
or
lds
lret
fistl
sahf
js
sbb
cmc
fdivrl
push
jne
in
dec
xchg
sbb
ds
repnz
lahf
insb
or
je
sub
arpl
call
rcr
xchg
fdivl
ja
push
xor
leave
push
dec
xchg
and
out
mov
jecxz
repnz
jbe
in
cltd
ja
push
xchg
shlb
fisubl
and
pop
push
das
sbb
pop
sbb
jmp
or
js
movsb
pop
push
mov
sbbb
dec
add
call
jnp
xchg
aad
and
call
movsl
or
adc
scas
enter
jbe
test
push
mov
fsts
and
dec
outsb
add
and
jno
mov
jecxz
sbb
adc
adc
sub
cmp
mov
or
lods
or
adc
enter
cwtl
or
fisubrl
jecxz
pop
scas
das
insl
scas
jnp
and
jne
push
sbbb
mov
jle
mov
cmpsb
in
push
sbb
xor
jnp
lods
fiaddl
stos
push
push
or
imul
mov
fidivs
loope
fadds
cmp
clc
or
or
lahf
les
jbe
dec
into
jae
xor
scas
aad
cmpsl
and
push
mov
negl
xor
lahf
mov
jmp
add
mov
std
mov
dec
fstl
test
addr16
sub
sbb
jnp
popa
push
sub
push
mov
shrl
xchg
xor
adc
cwtl
adc
jg
pop
ds
push
cmp
inc
ljmp
in
pop
push
decb
push
add
push
push
mov
mov
inc
mov
pop
rcll
adc
mov
mov
in
jecxz,pt
sbb
push
pop
les
push
cmp
add
xchg
cmc
sbb
leave
push
xorb
jno
and
jp
ret
aad
jns
movsb
les
cltd
dec
add
jle
or
dec
mov
mov
enter
adc
add
pop
add
lret
int
push
jecxz
push
add
inc
es
loopne
outsb
pop
adc
mov
mov
insl
in
ljmp
jnp
ret
pop
rcrl
scas
adc
sbb
push
sub
push
fldl
dec
loop
sbb
pop
test
fisttps
sub
lahf
xor
rol
clc
lods
test
jne
xor
cmp
sbb
push
or
out
call
mov
stos
dec
xchg
incb
cmp
pushl
pushf
loopne
mov
in
pop
setae
mov
pop
lret
aas
sub
push
push
cltd
movsb
xchg
lods
sub
add
and
cmp
loop
xchg
pop
inc
ds
cmpsl
mov
je
fistl
jns
push
lods
sub
fwait
lret
fwait
aam
push
push
addr16
or
inc
shlb
or
add
jbe
lods
cmp
xor
lock
lret
cli
xlat
mov
insb
icebp
movsb
int3
push
dec
jg
icebp
aas
lcall
gs
sub
pop
jle
pop
mov
and
filds
cmp
mov
inc
cltd
mov
dec
into
out
out
push
bound
sti
test
in
testb
adc
fsubl
test
and
hlt
nop
sub
cmp
pop
sbb
push
sub
push
and
shl
pop
xor
fwait
call
test
fidivrs
or
cwtl
pop
cld
xorb
and
cmc
fistps
shlb
ficompl
mov
add
jbe
repz
push
divl
cmp
inc
arpl
sbb
arpl
xor
les
leave
mov
sbb
adc
ret
cmp
mov
shll
dec
jmp
mov
pushf
inc
pop
push
lret
call
fwait
xor
sbb
rep
loop
push
or
adc
movsl
lret
and
add
push
mov
stc
push
or
cmpsl
adc
jmp
loope
les
scas
das
fstps
xlat
testb
or
rcl
loopne
xchg
and
cmp
mov
lods
mov
inc
pusha
pop
jp
push
mov
mov
jge
mov
xor
insl
dec
cmp
dec
jmp
jno
das
mov
out
leave
xchg
ss
cs
xor
outsl
decw
popa
dec
xchg
push
loope
mov
loop
cmpsb
push
dec
stos
insl
cmc
xchg
sbb
shll
lcall
sarb
pop
jbe
test
inc
adc
adc
push
iret
or
push
pop
mov
mov
or
dec
repnz
out
in
test
xor
in
mov
test
push
je
inc
xor
and
adc
lret
adc
aad
aas
fildl
rclb
stos
inc
xor
mov
and
mov
pop
mov
xor
fnstenv
mov
iret
leave
mov
popf
mov
pop
es
sub
push
mov
out
mov
and
inc
lcall
sbb
inc
cmp
xlat
cmp
pusha
cmp
scas
lea
ret
sbb
dec
mov
pop
neg
test
inc
mov
out
es
sub
sti
into
lret
je
or
jecxz
cmp
nop
pop
xchg
cmpsb
call
xor
mov
mul
adc
ds
pop
mov
mov
sub
inc
xchg
test
movsb
sub
jg
dec
bound
add
stos
loopne
mov
push
xchg
lods
inc
mov
imul
out
xlat
mov
jg
js
sub
popa
popa
xor
add
add
lock
or
adc
mov
adcb
gs
shll
cld
outsl
inc
lock
sub
test
cmp
push
jbe
imul
outsl
out
push
das
pop
push
enter
insb
xor
jle
push
lds
xchg
loope
or
jb
xor
push
jmp
jbe
cmc
inc
hlt
sbb
mov
gs
sbb
pop
ja
pop
push
and
mov
dec
mov
mov
xchg
gs
in
xchg
jbe
lret
xchg
jbe
enter
lea
sahf
sarb
sub
jnp
icebp
cmc
hlt
jae
pushf
dec
test
inc
push
jne
adc
inc
adc
add
out
jno
jp
jno
lret
pop
stos
add
xchg
mov
lods
scas
cltd
lahf
adc
test
and
or
movsb
shrl
incl
lfs
sub
adc
xchg
addr16
xor
popf
gs
call
xchg
out
aad
outsl
ss
and
xchg
sti
sbb
mov
call
jo
push
pop
mov
cmp
outsl
stos
das
jmp
inc
aam
ljmp
scas
jae
mov
aas
rcrb
adc
loopne
cmp
and
or
dec
jle
jp
and
std
push
mov
cmpsl
aaa
loopne
cmpsb
adc
sub
add
mov
jmp
fisubrs
xchg
pop
out
mov
push
add
popf
adc
gs
mov
icebp
lods
fmull
and
cmpsl
push
push
sbb
movsb
mov
inc
imul
popa
or
jo
jl
aad
idivl
mov
mov
inc
shl
mov
iret
inc
mov
lock
ror
outsb
jp
inc
add
aas
lcall
pop
mov
ljmp
test
ret
adc
insl
or
ss
xor
bound
in
stos
xchg
add
cmp
out
push
loope
fidivl
lods
inc
ds
push
pop
add
xchg
loope
sbb
loop
or
inc
test
pop
jl
mov
sahf
mov
in
mov
mov
sub
mov
xor
lcall
loop
mov
dec
inc
mov
jmp
js
dec
fwait
add
xchg
dec
ljmp
push
or
cmpsl
hlt
popa
jno
ds
sbb
and
adc
sbb
xlat
nop
pop
rclb
push
cmp
nop
ljmp
mov
push
adc
pop
das
cltd
fisttpll
push
jae
add
pop
jge
int
subl
sbb
push
shlb
lcall
cmc
pop
pop
arpl
loope
inc
loope
test
mov
push
push
addl
inc
pop
xor
mov
pushf
popa
push
popf
add
test
daa
mov
dec
out
les
push
sti
int
std
sub
nop
inc
cmc
add
mov
xor
in
cmp
das
push
add
mulb
push
into
jne
push
or
push
pop
or
sbb
push
sti
dec
ss
cmpsb
mov
push
or
jnp
aam
and
out
and
jne
jp
ljmp
out
stos
dec
xchg
inc
jmp
fiadds
cmpsb
lret
and
daa
adc
sar
xchg
stc
idivl
jne
push
push
mov
in
pop
jno
out
shl
add
adc
ret
int3
cmp
jbe
push
push
xor
ja
pushf
imul
scas
jmp
pop
neg
jb
mov
pop
sbb
mov
and
jmp
jge
pop
or
stos
cmp
dec
out
shl
pop
mov
inc
push
cmp
je
push
notl
inc
xor
cvtdq2ps
sti
mov
je
mov
mov
lret
aam
and
mov
mov
push
in
fisubrs
ljmp
or
mov
dec
stos
test
cmp
mov
adc
push
inc
cs
fbstp
push
jbe
and
std
pop
add
enter
fistl
mov
fldenv
je
cs
fadds
pop
mov
movsl
or
xor
pop
shrb
in
xor
mov
cltd
mov
pop
enter
cmp
leave
pop
sub
add
outsl
cwtl
push
lds
fldenv
inc
lcall
scas
mov
imul
pop
mov
push
add
xchg
int
adc
sahf
dec
push
push
clc
out
insl
daa
les
inc
mov
add
sbb
scas
int
imul
xchg
jno
test
fstl
call
xchg
leave
ja
enter
ds
jge
sti
sbbl
lret
xchg
aad
adc
sbb
mov
clc
scas
jno
xor
inc
mov
not
scas
imul
scas
sbb
shrl
imull
loopne
push
adc
sub
ja
pusha
dec
aam
sub
nop
sbb
fnop
mov
push
rorb
cwtl
cmp
sbb
jae
sub
arpl
call
in
outsb
sub
scas
dec
pop
pop
push
dec
jge
mov
das
mov
mov
sbb
arpl
in
jle
xor
jge
xchg
imul
or
das
or
lcall
push
adc
ret
adc
add
inc
popa
mov
fnsave
cmc
loopne
stc
cli
pop
and
enter
xlat
xor
mov
lock
sarl
idiv
jns
shr
dec
inc
rcrb
mov
lock
cmc
loope
pop
cmp
lahf
fimuls
xchg
adc
xor
shll
es
orb
lahf
jecxz
mov
imul
shl
add
gs
pop
push
in
insl
cmc
mov
push
fwait
pop
cmpsb
or
pop
xchg
adc
lahf
push
popf
add
pop
sbb
mov
mov
push
push
ja
mov
fsubs
not
add
xchg
pop
adc
add
mov
push
xchg
or
test
lahf
shl
mov
cwtl
dec
adc
lods
int
bound
pop
lea
std
out
mov
gs
push
xor
lret
jecxz
scas
and
call
repz
pushf
dec
pop
orb
push
cs
bound
in
sbb
test
push
scas
jnp
pop
cwtl
sbb
out
movsl
fwait
sbb
test
lods
mov
shlb
sbb
or
push
lret
jle
stos
rcl
sbb
sbb
add
inc
adc
xchg
and
mov
cmp
cs
aas
dec
decb
push
sarb
adc
je
cmp
add
cmc
or
fwait
mov
push
xchg
cmp
aas
jb
lods
xor
fldl
aaa
or
int3
cwtl
rol
adc
jmp
das
or
jl
scas
prefetcht1
add
dec
lret
sahf
lret
dec
jp
daa
mov
dec
pop
inc
jo
push
scas
pusha
pop
push
pop
call
daa
xchg
rcrb
mov
xor
ret
and
sbb
jecxz
mov
sub
dec
loopne
mov
imul
mov
mov
inc
xor
into
sbb
xchg
mov
ss
cmovp
iret
inc
imul
push
or
push
hlt
rcll
jmp
mov
inc
leave
xchg
mov
leave
inc
mov
cli
dec
xor
cmp
popa
inc
les
mov
sahf
mov
sti
mov
pop
out
sbb
lret
scas
cmpsb
gs
xor
outsb
sub
pop
dec
dec
mov
push
sub
jmp
loopne
shrl
add
imul
sbb
adcl
pop
jmp
xchg
pop
gs
inc
das
movsl
adc
out
aam
idiv
xor
sbb
mov
call
push
int3
and
and
call
fwait
rorb
push
aaa
rcl
imul
and
xchg
test
mov
dec
xchg
xchg
pusha
and
push
cmc
imul
roll
repnz
dec
test
sub
push
cmpsl
and
ss
mov
pop
pop
xchg
popa
stos
jl
xor
mov
lret
loopne
add
mov
add
dec
mov
add
divl
sbb
push
push
xor
cltd
jnp
shrb
or
xchg
sub
jb
popf
loope
mov
mov
push
cmpsb
js
scas
test
dec
xor
mov
mov
clc
cs
mov
ds
adc
pop
mov
stos
imul
pop
inc
daa
xlat
sub
mov
jle
xorb
pop
mov
test
int
or
inc
dec
sub
jmp
ret
or
fldenv
jl
hlt
popa
add
mov
je,pt
mov
add
clc
in
out
lds
inc
cmpsl
lret
stc
jbe
mov
int3
dec
fs
xchg
or
ljmp
cmpsb
pop
or
mov
xchg
sbb
fisubs
lahf
xchg
rcl
xor
lret
out
jb
inc
xor
pop
cwtl
and
data16
dec
insb
xor
adc
mov
test
ss
movsl
in
repnz
in
in
xor
lods
mov
popa
cmp
xor
cmpsb
std
ljmp
pop
push
or
out
add
mov
repz
clc
mov
call
sub
hlt
jmp
stos
mov
jno
mov
stos
daa
aad
jle
test
push
adc
mov
aas
dec
jg
lock
add
jno
add
sbb
sbb
adc
push
push
ja
push
mov
push
mov
pop
sub
sub
fcoms
sub
out
mov
loopne
rclb
test
jo
xor
je
sbb
mov
jno
adc
adc
sub
xor
xchg
das
lea
inc
imul
inc
cltd
ds
pop
sti
std
leave
enter
inc
inc
push
push
cli
sub
mov
pinsrw
rclb
lret
adc
mov
iret
jl
add
inc
std
cmp
mov
mov
add
mov
push
daa
dec
inc
jns
xchg
lret
mov
jne
inc
outsb
jae
ror
jmp
ret
mov
dec
shlb
and
lds
insb
fcomp
pushf
out
pop
ss
outsb
cmp
jmp
adc
sub
mov
dec
mov
js
dec
adc
cmp
push
push
daa
add
jne
in
out
sub
icebp
cmp
test
or
mov
mov
cmp
orl
fildll
xchg
inc
mov
repz
out
enter
push
test
inc
push
xor
mov
sbb
jecxz
imul
jg
xchg
adc
jmp
sub
pop
pop
jnp
outsb
adc
push
shlb
adc
sbbl
ret
aam
jmp
lea
dec
dec
imul
out
faddl
adc
xor
jbe
iret
pop
addb
and
push
jbe
inc
and
adc
and
push
gs
test
adc
jp
mov
inc
jbe
and
test
jmp
outsl
xchg
inc
cmp
push
lock
lcall
jbe
cmpsb
push
rcrb
mov
push
inc
adc
int3
lock
cmp
pop
int
mov
out
mov
mov
aam
fldcw
or
mov
inc
dec
jecxz
in
sbb
xor
sub
das
icebp
addb
in
xor
dec
dec
sbb
mov
add
adc
pop
jl
adc
dec
fiadds
into
orb
sbb
inc
scas
dec
out
adc
cmc
mov
lcall
aad
sub
or
ret
neg
dec
int3
scas
and
dec
incl
jg
mov
mov
sub
cmp
and
cmpsb
arpl
stc
ret
test
xorl
cmp
pop
ret
mov
cwtl
fistps
out
jg
mov
jl
mov
push
std
arpl
jl,pn
aaa
push
nop
cmp
and
push
jle
lock
loop
mov
cmp
movsb
icebp
test
cmp
mov
in
or
push
sub
int
lahf
sub
clc
inc
arpl
sbb
push
nop
cmp
mov
pop
xchg
mov
sbb
mov
mov
inc
dec
jo
xlat
mov
loope
jge
shlb
aas
roll
xor
jle
mov
mov
lods
into
clc
data16
inc
in
sub
psadbw
jae
mov
adc
jp
pop
clc
scas
inc
sbb
xchg
sub
inc
jmp
push
aas
push
ss
sub
mov
js
pop
push
pop
xchg
stc
inc
add
ja
ror
lock
xchg
pop
pop
out
test
pop
push
add
cmpb
inc
xor
jne
jbe
lods
sub
lods
push
nop
clc
mov
mull
sub
lea
test
inc
pop
mov
pop
push
cmc
xchg
push
mov
inc
int
pop
call
sub
jle
rcr
aaa
mov
pop
fdivs
das
dec
dec
daa
fists
adc
hlt
xchg
lret
push
cld
addr16
js
stos
push
inc
mov
loopne
jmp
jle
push
mov
lds
lret
int
rcrb
fwait
rcrb
aad
lods
out
sub
cltd
inc
pop
xchg
out
inc
mov
or
mov
or
ret
data16
shll
sahf
imul
aad
cmp
into
bound
add
push
mov
scas
daa
mov
arpl
xchg
in
push
lods
dec
mov
nop
in
jbe
inc
fimuls
sbb
and
lock
inc
jo
lods
add
and
add
mov
push
inc
adc
mov
es
dec
and
jl
test
xor
push
sti
outsl
jae
jbe
sbb
cmp
sbb
push
loope
repnz
pop
ljmp
xchg
xor
mov
dec
jns
and
mov
mov
pop
pop
gs
test
jno
xchg
mov
xor
scas
daa
add
scas
adc
xor
movsl
mov
mov
sub
cmpb
es
seto
or
aam
popa
mov
insl
dec
push
sub
mov
add
mov
jnp
or
dec
adc
push
push
jns
adc
lds
popf
lret
sub
cli
push
xchg
mov
test
cmpsb
ss
popf
mov
jae
xchg
into
iret
int
cmpsb
adc
sti
push
dec
stos
dec
dec
xchg
cmp
loope
mov
xor
mov
fbld
cmp
or
cli
mov
int
mov
rol
mov
ss
leave
adc
sub
inc
push
sti
popf
cs
dec
insl
fcomip
sbb
jo
pop
fwait
call
xchg
lea
dec
push
dec
mov
adc
lahf
pushf
stos
imul
adc
cmp
in
movsl
and
ds
out
lcall
test
lahf
cmpsl
mov
sti
inc
xchg
stc
ds
jp
ja
pushf
addl
aaa
out
lea
add
in
push
rcll
loopne
xor
mov
push
sub
leave
push
xchg
mov
mov
xchg
xchg
mov
int
inc
ljmp
cmp
sbbb
mov
dec
sub
shlb
stc
xchg
jbe
in
mov
test
stc
lret
add
push
mov
or
sete
mov
out
dec
mov
lods
lahf
popa
into
mov
dec
in
xor
call
mov
cmovne
cwtl
divb
or
out
lret
or
test
add
inc
and
jmp
mov
xchg
shll
inc
stc
fwait
cmp
xchg
mov
mov
pop
cmp
or
cmpl
cwtl
push
or
addb
addr16
dec
push
jae
mov
mov
add
mov
into
in
nop
fcoml
and
cs
xchg
inc
mov
data16
pushf
cld
add
cmpl
xor
mov
push
fcompl
stos
add
inc
or
jae
shrl
lods
sub
jo
xor
pop
jae
cmp
lock
xor
or
pop
dec
mov
lcall
dec
sub
fldt
gs
adc
dec
push
shlb
out
int
pop
mov
xchg
faddl
jmp
xor
test
dec
aaa
mov
stc
ret
and
jp
bound
in
rcrb
mov
mov
add
mov
insl
adc
inc
fldenv
dec
mov
ret
cmc
inc
mov
mov
call
jmp
xchg
jb
cmc
imul
push
aam
cli
shrb
sub
stc
pop
jl
aaa
int
add
icebp
hlt
mov
mov
flds
push
push
into
mulb
cmpb
adc
fsubrp
orl
mov
mov
push
or
dec
dec
les
jnp
jg
out
inc
int3
dec
sbb
or
hlt
push
rclb
and
pusha
notb
jp
add
xor
test
or
sti
out
jge
movsb
push
repz
jb
push
aad
ficoms
daa
adcl
mov
stos
test
das
rcrl
das
or
int3
gs
insb
push
pop
out
sbbb
sub
add
stos
inc
es
push
movsl
lret
addb
xor
stos
ljmp
or
sub
lds
rcll
and
add
xor
nop
sub
pop
add
stos
sbb
imul
fbld
outsb
inc
add
mov
int3
sub
mov
cli
mov
xor
std
add
and
jge
jae
cltd
mov
mov
dec
push
jl
pop
call
in
sub
out
dec
mov
mov
cmp
in
jns
xor
cs
fcoms
and
lds
lret
movsb
bound
mov
add
add
cmp
sti
test
and
pop
ds
mull
mov
cmp
inc
loop
addr16
insb
mov
push
clc
dec
or
es
push
aas
loope
push
cmp
mov
push
jp
inc
mov
adc
mov
lret
scas
aas
sub
out
cmpsb
dec
pop
movsl
dec
ljmp
pop
mov
lret
cmpsb
cmp
add
call
test
aas
aad
lcall
outsb
fistpll
dec
lods
sub
push
sbb
stc
jecxz
cltd
mov
loopne
daa
adc
xor
das
or
les
out
cmp
and
stos
push
insb
mov
push
cmpsb
sub
leave
or
lea
or
mov
or
mov
inc
in
xchg
add
repz
ja
and
loope
add
stos
inc
imul
jmp
mov
into
sub
sub
loopne
adc
inc
loopne
rcrb
xchg
lock
sti
shll
push
inc
lret
sbb
cld
mov
add
fidivrs
dec
mov
aad
mov
out
test
inc
cmp
pop
loopne
dec
push
and
jb
cmp
mov
mov
cmp
inc
fcompl
pop
inc
add
and
ds
xor
xchg
ss
fwait
push
imul
iret
ljmp
test
push
cmp
xchg
pop
movsl
lret
fcmovnbe
or
stos
into
ss
mulb
jp
aaa
mov
push
push
pop
or
mov
add
in
faddl
xor
cmc
fildl
mov
nop
jecxz
vcvtps2pd
ja
arpl
mov
clc
and
mov
popa
xor
pop
jg
cmp
fldt
les
xor
or
es
fcmovnu
xchg
cld
das
hlt
push
out
mov
cmp
xchg
arpl
sahf
xchg
jmp
jp
fists
mov
or
pop
cmp
adc
faddp
repnz
addl
pop
out
inc
inc
mov
jns
mov
mov
jbe
mov
mov
cld
jmp
movsb
push
mov
aad
into
xor
push
loopne
sub
lock
js
sar
test
dec
pop
stos
lds
cmp
daa
or
mov
movsb
sahf
mov
adc
cmp
xor
stos
xor
xchg
out
xchg
jbe
daa
mov
xchg
sub
or
jle
cmp
xchg
fildl
mov
lahf
in
mov
sbb
xchg
xor
pop
mov
add
fwait
movsl
pop
lret
jae
xor
test
adc
pop
or
cmp
push
in
aas
add
loop
repnz
mov
add
les
inc
mov
aas
jge
cltd
ret
insb
test
and
xor
je
shr
dec
leave
ret
aad
add
lret
call
and
pushf
xlat
aas
leave
pop
fisttps
push
pushf
or
or
cltd
push
insb
xchg
int
xor
jecxz
outsb
test
daa
add
mov
xchg
ss
dec
push
inc
push
out
pop
mov
loop
std
xlat
adc
pop
mov
mov
push
sub
fisttpl
mov
and
iret
xchg
outsb
push
loope
mov
dec
xlat
push
sub
sub
cmp
and
cld
push
testl
or
loopw
rcll
inc
xor
lret
jb
jmp
cmp
decb
test
out
or
int3
push
into
cli
push
cltd
xor
lods
or
xor
mov
xchg
xchg
adc
mov
dec
jb
cmp
sbb
adc
dec
int
push
xchg
inc
and
sub
mov
mov
mov
pop
or
faddl
sti
pop
xor
cmp
xchg
mov
add
cmc
xlat
cmp
pop
decl
subl
push
ret
jp
xor
cvtpi2ps
test
xor
dec
je
inc
stos
mov
popa
lods
mov
xchg
push
add
push
cmp
nop
sbb
xor
and
in
test
aam
bound
movl
out
dec
aas
pop
push
int
mov
out
jl
bnd
lods
push
in
js
xchg
adc
mov
sub
pop
orl
jge
pop
xor
hlt
jl
lods
jne
cmp
push
push
pop
push
mov
pop
aam
hlt
insl
sbb
jno
cmp
xor
ljmp
movsl
loope
fs
pushl
push
lret
test
push
lea
loopne
mov
clc
pop
push
jge
jne
loop
push
xchg
mov
gs
cmp
xor
loope
add
lods
in
mov
mov
fisttps
lcall
push
and
ss
flds
test
fstpl
div
aad
inc
xchg
lret
fiaddl
movsb
mov
sbbl
mov
jns
inc
adc
nop
mov
dec
nop
sbb
test
jnp
xchg
dec
add
xor
lods
pop
jg
xchg
pop
xchg
arpl
mov
push
arpl
sbb
scas
jmp
dec
test
xchg
sbb
aam
jmp
aaa
not
out
xchg
mov
faddp
dec
and
jo
sub
imul
xor
lods
mov
sbb
xor
and
push
jne
dec
jo
mov
clc
dec
iret
lea
mov
andl
sbb
lcall
mov
pop
mov
mov
lahf
sbb
popa
xchg
mov
in
lcall
jle
gs
mov
rclb
lock
addr16
xchg
sbb
pop
jg
fists
sti
jnp
jno
push
push
mov
shlb
cmp
int3
xchg
sbb
addr16
or
cmp
dec
test
iret
mov
xchg
pop
jno
in
sahf
jb
mov
movsb
sub
insl
ljmp
or
and
xchg
test
fsubr
fisubrl
pmulhuw
lds
mov
xchg
pop
nop
or
test
cmp
int
sub
jns
push
push
push
jecxz
pusha
adc
not
jecxz
aaa
xor
mov
lods
roll
lds
inc
repz
xor
xchg
jmp
aas
imul
leave
rclb
mov
adc
repnz
insb
lret
js
pop
pop
or
popf
insl
inc
fcmovnb
aam
js
enter
mov
fimull
add
cmpsb
into
je
repnz
sub
test
cmp
cmpsl
pop
push
shld
insb
inc
jae
jge
mov
lret
cwtl
push
or
insb
dec
pop
repz
sbb
jmp
std
sub
dec
aas
and
cmp
mov
inc
and
adc
xor
mov
inc
cmc
out
test
adc
fisttps
inc
rcll
dec
sub
lcall
jne
es
inc
pop
dec
out
lods
inc
dec
sbb
out
in
jle
add
mov
push
cs
arpl
rol
cmp
fcmovnb
lcall
fwait
or
cmc
cli
sbb
aam
js
hlt
push
ficomps
cwtl
call
nop
jnp
mov
pop
sbb
and
int3
xor
xchg
pop
dec
loope
push
cmp
aaa
push
push
mov
lds
adc
jbe
cmp
sub
clc
pop
cmp
clc
lods
and
xorl
icebp
dec
nop
and
mov
add
fisttps
xchg
psrld
cs
stos
mov
data16
xchg
jge
and
andb
push
push
jno
mov
xbegin
negl
pop
pop
or
jge
ja
mov
push
ffreep
je
pop
ficomps
pop
dec
mulb
mov
xchg
repnz
xchg
mov
loope
lret
pop
push
dec
or
xchg
xchg
ret
adc
mov
sbb
inc
xchg
and
out
pusha
inc
inc
mov
out
dec
test
ret
xchg
addr16
jb
adcl
push
lret
scas
jecxz
or
jo
mov
int3
outsl
popf
inc
rcrl
xchg
mov
clc
push
fisubrl
mov
repz
jecxz
hlt
xchg
lret
jo
fdiv
loop
inc
push
shrd
xlat
ret
xor
cmp
jnp
add
je
loopne
and
dec
hlt
pop
pop
addr16
add
xchg
lock
and
inc
and
inc
pop
lock
xchg
xchg
xor
loope
pop
es
cltd
push
scas
in
dec
push
and
popf
jmp
adc
and
in
xorl
pop
ja
inc
cmp
and
movsl
pushf
or
and
add
fxch
cmp
mov
pop
push
mov
cmpsb
add
adc
jmp
stos
insb
ds
inc
dec
or
enter
cmc
addb
out
pop
out
dec
stc
push
gs
xlat
xlat
jecxz
mov
gs
mov
ljmp
push
sub
dec
mov
cmp
shrb
loope
jo,pt
add
cmpsb
push
std
cmpsb
and
sbb
jne
sub
or
daa
inc
xor
push
int3
pop
outsb
inc
movsl
testb
pop
iret
dec
cmp
mov
ss
fimull
popa
outsl
test
negl
in
shr
inc
mov
rcrb
mulb
jnp
jmp
scas
sbb
mov
xchg
jg
loop
mov
xchg
pop
push
rcrb
xchg
gs
lahf
adc
or
loop
addr16
stc
dec
loop
sbb
dec
mov
dec
sbb
and
cwtl
pusha
pop
shlb
test
test
push
scas
lahf
cmp
out
xor
add
cli
jno,pt
pop
test
adc
aam
inc
or
leave
xchg
idivl
xor
les
shlb
cld
rorb
cmpl
std
or
aam
cs
je
loopne
rorb
ds
pusha
pop
scas
sub
ficoml
pushf
or
lcall
les
test
adc
fimull
repnz
or
cmp
mov
lds
dec
cmp
xor
mov
mov
xor
mov
repnz
loop
inc
mov
pop
adc
imul
fsts
or
jno
je
popf
fstl
or
mov
push
mov
ds
push
int3
push
xor
inc
cmp
mov
lods
ds
push
mov
jae
sub
lods
inc
xchg
xchg
jmp
repnz
push
push
push
cmp
cmp
xor
adc
stc
inc
idivl
addb
jbe
mov
pop
inc
dec
imul
cmp
or
ret
loopne
and
push
jns
sub
and
pop
pop
call
and
xor
lea
push
and
or
rclb
mov
aaa
mov
sub
sub
in
lea
int3
rcl
add
std
or
and
fisubs
pop
fs
outsl
adc
out
fwait
xchg
insb
dec
enter
sbb
ljmp
cmpsb
dec
jne
jecxz
add
fldenv
adc
lea
addr16
mov
pop
lret
inc
fsubs
lret
enter
movl
gs
shlb
dec
xorl
cmpsb
sub
pusha
bound
jne
in
stos
mov
mov
lock
jb
sbb
dec
jp
sub
insl
rcr
stos
mov
xchg
sub
lea
mov
jmp
sahf
sub
or
jp
lahf
popf
mov
xor
into
adc
movsb
sub
clc
lcall
nop
fnstcw
xchg
mov
push
adc
movsb
adcb
sub
pop
cmp
or
mov
imul
jmp
xchg
sbb
pop
inc
sbb
lret
test
add
sbb
xchg
scas
pop
repnz
dec
pop
out
sbb
div
mov
lods
cmc
or
inc
ja
pop
mov
mov
roll
stos
jge
in
mov
test
jo
dec
dec
jo
loop
inc
das
loope
das
pop
xchg
dec
loop
and
aam
cmp
adc
stos
insb
jae
cmp
pushf
xchg
adc
xor
rolb
inc
shrl
cmp
aad
lods
loopne
ret
adc
pop
push
jmp
enter
icebp
push
dec
int3
xchg
jge
xchg
test
push
lret
mov
pop
rcll
xor
and
cmp
sub
js
pusha
or
insb
jge
popf
fcomps
scas
test
pop
int3
repnz
bound
push
pop
xchg
sbb
aas
mov
pop
fbld
arpl
mov
jmp
aam
pusha
and
jnp
enter
push
sub
in
mov
jne
int3
adc
jae
int
dec
inc
dec
inc
divl
pop
sbb
dec
dec
daa
fnstenv
movsl
cmp
test
cmp
flds
xchg
andl
cwtl
cs
sar
cmp
mov
call
lret
scas
mov
xchg
outsl
or
sub
cmp
shl
cmpb
mov
cltd
adc
push
stos
rclb
inc
ret
icebp
outsl
adcl
xor
sbb
inc
mov
bound
mov
xchg
inc
test
sbb
loop
mov
notb
fcmovbe
idivb
push
sub
xor
xor
adc
mov
and
cmp
int3
cmc
loope
data16
nop
out
xor
shl
icebp
lahf
jecxz
pop
adc
pop
fmuls
dec
lret
movsl
lret
cmp
stos
mov
sti
jb
xchg
call
cld
subb
outsb
sbb
js
shlb
addr16
push
nop
cmp
xchg
mov
sbb
loopne
mov
pop
in
iret
sub
jl
es
mov
pop
sub
fsubl
imul
or
loop
das
or
les
cmp
sub
in
dec
popf
in
in
push
inc
xchg
or
nop
fs
inc
addr16
mov
dec
and
pop
lret
xchg
ret
xor
cmp
pusha
lods
out
in
mov
dec
fiaddl
lods
in
arpl
push
stos
pop
outsl
shlb
pop
cmp
je
sbb
test
out
push
scas
cmp
xchg
mov
sbb
sbb
rorb
mov
xchg
leave
ficoml
mov
popa
bswap
dec
inc
lret
ret
and
or
pop
ret
pop
mov
jmp
push
cmpsb
fs
cwtl
enter
pop
inc
repz
les
repz
mov
or
pop
add
je
adc
xorl
mulb
push
push
mov
add
inc
cmp
dec
repz
pop
pop
or
jns
jae
sub
mov
xchg
repnz
cmp
ficompl
pop
cld
aad
stc
or
ss
mov
mov
pop
or
repz
add
mov
cmpsl
mov
and
jns
pop
test
push
jbe
jge
inc
in
test
sub
jmp
mov
or
repz
cmp
sar
mov
jnp
push
call
xchg
jne
add
xor
rorl
or
sub
sbb
inc
xchg
xchg
and
push
lea
ret
jo
xor
fwait
enter
ljmp
fidivl
mov
test
mov
mov
push
xchg
jge
loope
jl
adc
movsb
repz
sub
cmp
sahf
sbb
and
xor
loop
sbb
shl
xor
mov
xor
and
inc
inc
push
or
jae
and
sahf
movl
aas
pop
in
cmp
movsb
and
or
jno
adc
push
dec
roll
lods
push
gs
cmpsl
xchg
push
movsl
cltd
sbb
add
pushf
ss
mov
and
outsl
sbb
push
out
repnz
fidivrl
imul
mov
stos
push
and
jecxz
dec
xchg
mov
fstl
pushf
movsl
movsb
xchg
mov
mov
sbb
jge
out
xchg
inc
fidivs
mov
std
fists
in
pop
int3
or
das
or
rcrl
mov
imul
dec
adc
jl
add
lahf
push
stc
adc
sub
cmc
orl
push
pusha
jno
test
and
stos
push
hlt
call
or
movl
stos
cld
inc
or
mov
neg
jnp
mov
xchg
into
jne
dec
dec
xchg
push
add
bound
xchg
add
sub
js
in
addb
xor
imul
cmp
mov
jb
or
sahf
shrl
xlat
pop
mov
fldenv
add
inc
mov
xchg
push
aas
fst
pop
rclb
xor
les
jae
lret
pop
sbb
pop
xor
xchg
lcall
nop
cmc
cmp
cmp
sti
inc
nop
push
add
xchg
je
je
fdivs
push
adc
jne
in
push
push
int3
and
xor
mov
sub
jmp
cmp
or
das
or
in
push
pop
pushf
sbb
inc
sbb
outsb
push
pop
mov
lcall
mov
aad
movsb
testl
pushf
into
cmpb
stos
std
pop
cld
aas
add
popf
push
pop
jns
cmp
push
enter
sahf
outsl
and
add
inc
nop
imul
pop
arpl
pop
cmp
ss
cwtl
por
pop
sub
sbb
out
adc
sub
imul
test
inc
insb
sub
mov
inc
ret
mov
pop
push
adc
imul
imul
xchg
in
inc
xchg
out
mov
push
jp
jmp
loope
clc
fldenv
or
adcb
into
arpl
and
pop
mov
popf
mov
in
in
or
icebp
lock
or
adc
in
sbb
sub
sbb
xchg
cmp
call
mov
mulb
jo
pop
data16
mov
lcall
lahf
lods
outsb
mov
out
xor
mov
int3
jp
mov
ljmp
sbb
mov
les
pop
mov
and
inc
arpl
cmp
lods
test
fs
shll
imul
jbe
pop
sbb
dec
pop
sub
dec
jmp
push
pushf
cmp
mov
push
and
sbb
pop
dec
gs
adc
mov
test
jmp
mov
cmp
ljmp
mov
pop
mov
outsl
enter
sub
dec
flds
jle
inc
sahf
adc
sub
add
stos
jp
xchg
cld
inc
adc
push
sbbl
pop
pop
lcall
lods
add
or
xchg
dec
sbb
cmpsl
popa
add
iret
mov
cmp
movsb
aad
fisubrl
imul
fdivs
adc
mov
fidivrs
dec
fiaddl
daa
std
add
xchg
fidivrs
dec
iret
sbb
and
xchg
jbe
push
jne
mov
inc
pusha
or
es
loop
dec
pushf
fwait
imul
pushf
xor
adc
adc
repz
loopne
sub
addr16
push
clc
addr16
dec
ficompl
pop
test
sti
sbb
movsb
es
dec
out
lcall
adcl
sub
mov
add
pop
add
shlb
sub
mov
decb
or
pop
sti
and
enter
sar
outsb
mov
push
sub
loop
stc
test
cmp
in
cmp
add
xchg
inc
jae
outsb
testl
cmp
mov
and
js
leave
mov
hlt
sbb
add
adc
ja
sbb
dec
bound
or
sbb
sub
pop
and
fcoms
shrb
add
inc
push
jae
lock
roll
push
and
js
repnz
mov
jg
fs
sub
in
fnstenv
mov
push
dec
call
test
pop
mov
xor
pop
rorl
dec
fsubrs
imul
aam
push
lock
aaa
sbb
rclb
pop
mov
adc
mov
mov
cmp
jle
jle
repnz
std
pop
enter
inc
cwtl
lea
loop
cmpsl
jmp
jb
mov
dec
pop
jl
bswap
mov
je
push
or
pop
dec
xor
loop
mov
and
cmpsl
sti
rol
xchg
xor
add
jle
pushl
inc
iret
inc
bound
sub
inc
or
ret
insb
out
inc
out
sub
andb
jg
aam
push
std
adc
decl
repz
xorb
or
xor
cmp
subl
stos
ja
add
inc
scas
aaa
das
mov
and
negb
inc
mov
mov
testb
iret
rorl
dec
mov
and
mov
sub
movsl
dec
xor
sbb
sbb
aas
mov
mov
pop
loop
loop
push
mov
andl
test
test
enter
xchg
popfw
cmp
addr16
aad
cltd
rclb
fwait
mov
int
cmp
jb
xor
xchg
mov
cltd
and
stc
insb
or
push
pop
int3
rclb
sbb
loopne
pop
push
sub
xchg
cli
jb
and
andb
sub
pop
jae
pop
ja
dec
call
dec
or
cld
imul
adc
jmp
ret
repnz
movsb
dec
mov
cli
subl
sar
mov
mov
loope
cmpsl
push
xchg
pop
pop
jmp
jg
xor
pop
mov
pop
aad
push
sbbb
mov
ljmp
cli
jbe
cmpsl
push
and
pop
and
loope
gs
test
mov
push
testl
push
cmp
cmpsb
or
aad
mov
faddl
mov
and
cmp
jle
aad
flds
enter
ds
mov
push
dec
repnz
fistps
cltd
mov
and
xchg
div
inc
and
sub
or
push
fisttpll
sub
lock
fsubr
mov
stc
dec
xchg
scas
imul
jns
rorl
iret
mov
pop
mov
in
call
pushf
xchg
test
insb
cmp
pop
pop
mov
lods
mov
fdivs
aad
fstpt
adc
lds
fnstsw
xor
pop
xchg
ret
inc
or
mov
pop
ljmp
jnp
add
lods
or
mov
lcall
xchg
lods
sbb
mov
daa
jbe
push
sti
cmpsb
cmp
dec
ljmp
push
and
fiaddl
xchg
fbld
ss
es
push
ss
or
lret
mov
je
push
addr16
lret
rcl
jae
lods
or
cmp
xchg
into
dec
repnz
mov
out
cs
orl
cwtl
jb
aam
adc
push
call
les
jbe
pop
sti
cmp
add
scas
push
mov
push
xor
cmpsb
out
hlt
stos
pop
enter
push
jb
jecxz
aas
mov
ja
pop
clc
adc
sbb
sbb
pop
sahf
mov
lcall
xor
pop
sbb
mov
scas
sahf
mov
mov
mov
into
in
scas
push
mov
adc
jge
fld
in
filds
inc
in
jns
mov
mov
bsr
dec
add
icebp
lcall
adcb
sbbl
fs
lahf
xchg
add
jb
fidivs
out
scas
imul
in
inc
cmpsl
imul
test
pop
mov
mov
ds
out
mov
fstps
fiadds
test
push
aad
inc
push
dec
inc
jnp
leave
and
lret
add
cmp
fisubl
mov
mov
jp
leave
dec
xchg
aad
vmread
dec
sar
dec
mov
mov
adc
fidivs
mov
fstps
or
aam
push
dec
adc
movsb
sub
mov
fwait
clc
dec
sub
push
cmp
stos
scas
aas
bound
xor
cltd
xchg
subb
push
or
fimuls
mov
icebp
adc
mov
aad
lea
inc
hlt
sbb
das
xlat
xchg
out
jle
pop
mov
xlat
dec
add
dec
sub
push
mov
mov
pushf
jecxz
xchg
mov
fstps
and
jne
faddp
xchg
je
loop
sub
shrb
loope
xlat
sbb
push
push
iret
push
test
add
jecxz
idivl
call
pop
repz
xor
inc
movsl
enter
dec
pop
push
imulb
xor
pop
mov
push
jl
mov
add
xchg
scas
mov
xchg
mov
outsb
gs
repz
adc
dec
in
sbb
ds
or
negl
hlt
dec
push
mov
add
jmp
sahf
js
cmc
sahf
dec
cmp
testl
xchg
mov
cwtl
jmp
mov
int
push
inc
jo
arpl
sbb
adc
and
stc
and
add
mov
mov
aad
sti
call
ja
repnz
push
dec
sti
xor
push
jg
gs
mov
sbb
mov
testb
sub
inc
add
mov
jmp
mov
jo
jg
imul
into
popf
add
ret
or
and
outsb
ljmp
mov
xor
adc
pop
shlb
mov
fs
adc
fwait
pop
jle
lods
scas
enter
out
enter
repz
xchg
pop
mov
sbb
jno
push
test
movsl
int
loope
cmp
cmp
out
dec
cmp
mov
cmp
rolb
adc
cld
mov
incb
dec
add
popf
cmc
dec
clc
sub
push
cmp
mov
and
cltd
pop
popa
pop
addr16
and
mov
or
mov
fiadds
dec
loopne
sbb
aam
sbb
mov
popf
push
dec
sub
sub
inc
pop
daa
jmp
lock
test
xchg
pop
lahf
fs
jmp
xor
pop
and
and
repz
test
push
cmc
cmp
or
es
bound
into
inc
fidivl
testb
mov
mov
dec
loop
in
in
fwait
xchg
mov
sub
mov
lds
repz
jmp
jp
and
push
mov
fs
test
pusha
ss
shr
nop
shlb
imul
leave
ret
add
jno
sahf
shl
push
imul
mov
mov
cwtl
aam
mov
sub
cld
sti
push
mov
fsubrl
mov
lret
cmp
loop
in
pop
test
insl
xlat
imull
or
in
loopne
es
pop
shlb
mov
lods
xchg
mov
es
shll
movsl
mov
inc
data16
cmp
jge
cmp
add
in
cmp
pop
mov
std
jg
lods
loope
mov
xchg
mov
inc
outsb
cmp
mov
fsub
xchg
shlb
adc
jb
frstor
les
test
pop
mov
outsl
add
sub
clc
xor
cmp
addr16
and
jae
sbb
xchg
fstps
jmp
stos
cmpl
addl
mov
stos
mov
jle
repnz
pop
outsb
scas
je
jns
xchg
inc
cmp
push
leave
mov
popa
mov
sub
inc
jge
out
mov
jg
sub
and
das
add
std
jge
shrl
pop
js
mov
js
pop
fidivrl
adc
lahf
adc
aam
js
repnz
and
roll
and
outsl
lods
dec
cmp
scas
pop
leave
push
out
arpl
mov
mov
jecxz
cmp
cmp
bound
inc
mov
stos
cmp
and
inc
dec
push
push
jmp
push
pop
xchg
and
and
lods
mov
sub
push
push
outsb
or
dec
clc
sbb
loopne
bound
sbb
push
or
shrl
andl
pop
out
fidivrs
test
cmp
out
mov
stc
push
jbe
sarb
popa
adc
jns
push
data16
sbb
daa
cmc
and
hlt
movsb
push
in
out
fcmovnu
leave
or
pop
rolb
xor
fs
jle
mov
mov
in
ljmp
hlt
inc
out
fsubs
cld
pop
mov
xor
xorl
dec
push
mov
cmp
leave
mov
aam
pop
jp
push
in
pop
sbb
xor
lret
sbb
jae
clc
jo
cmp
push
insl
and
sbb
jecxz
jl
es
filds
jecxz
pusha
popa
dec
cmc
xor
aaa
mov
push
sub
in
in
outsl
out
aas
mov
arpl
hlt
decb
cwtl
mov
idiv
leave
into
push
xchg
and
xchg
add
pop
jmp
xchg
pop
push
das
sub
pop
mov
cmc
cmpsb
out
jge
pop
lret
hlt
xchg
and
shr
inc
jge
mov
inc
out
and
and
mov
mov
outsl
mulb
ror
test
loopne
shrl
loope
add
or
mull
or
cmp
sub
aam
stc
aaa
fistps
out
jbe
mov
cltd
cmp
add
insb
cli
pusha
shrb
add
in
lcall
and
and
xchg
je
ret
sti
mov
das
ret
dec
test
pop
cmp
inc
adc
ljmp
mov
cmp
stc
inc
fistl
jnp
mov
xor
dec
data16
or
jne
inc
adc
fldt
xchg
cltd
cwtl
das
insl
dec
cltd
movb
mov
fsubs
arpl
lock
lock
xchg
jecxz
jecxz
sbb
fdivrs
mov
bound
jae
mov
pop
jge
lods
popf
cltd
js
mov
fldcw
adc
dec
mov
ds
mov
out
sarb
sbb
int3
inc
fisubrs
push
add
lods
cmp
addr16
mov
and
xor
xor
ss
rcr
sahf
dec
xchg
fdivrl
lret
imul
enter
divl
out
incb
cltd
sbb
cld
add
adc
sbb
xor
gs
daa
in
push
xchg
data16
repz
lods
clc
stos
outsl
rorl
dec
cs
inc
aas
addb
popf
lcall
in
icebp
das
sahf
push
and
clc
pop
jg
std
lret
cld
call
pop
sub
cli
inc
addl
jns
movsb
sbb
push
mov
push
cmpsl
testb
loope
ds
cmp
xchg
int
mov
clc
aaa
divl
push
cmp
adc
or
roll
call
mov
cld
xchg
pop
fistl
cwtl
pop
imul
mov
cs
pop
loope
addr16
test
ret
lret
or
icebp
xor
mov
or
push
pushf
cmp
jl
cld
insl
sbb
icebp
xor
sbb
inc
imul
pop
sbb
push
inc
pushf
fnstenv
adc
imul
jge
push
mov
adc
decl
testl
push
daa
sub
dec
mov
dec
add
dec
and
mov
insb
jnp
xor
out
xchg
mov
out
mov
ja
and
arpl
jle
test
out
lcall
or
push
sbb
sub
mov
aas
inc
mov
dec
iret
lahf
xchg
mov
addr16
scas
popa
fucomp
por
fsubs
lret
dec
mov
sbb
mov
mov
mov
dec
mov
lret
lods
cltd
mov
cmp
shlb
andb
movsl
push
mov
mov
int
jecxz
sti
out
xor
cwtl
or
addr16
cmpsl
aas
mov
pop
paddb
or
ret
push
inc
lret
out
ljmp
ljmp
inc
scas
into
lret
and
popa
cltd
sub
iret
xchg
xor
movl
shrl
int
shr
pop
sbb
jo
sbb
jmp
ja
sti
popa
sub
jns
lods
nop
adc
test
sbb
mov
mov
mov
inc
clc
jnp
sub
fstpl
push
es
push
dec
sarb
lret
and
cmp
pop
dec
loope
push
fsubs
xor
iret
xchg
insb
sub
scas
cmp
mov
push
lds
insl
or
bound
repnz
pop
les
mov
bound
cwtl
retw
jne
and
das
push
call
aaa
in
hlt
push
aam
mov
mov
je
pop
in
mov
fiadds
lcall
jns
xor
sub
fstp
or
rclb
dec
fdivrs
cmp
in
cli
daa
inc
test
imul
inc
sub
incb
hlt
les
jne
cmp
repz
lcall
popa
push
mov
ljmp
dec
dec
in
lea
mov
mov
push
mov
dec
push
adc
int
bound
dec
add
ret
test
subl
jmp
into
scas
lret
mov
dec
pop
fsub
mov
add
rcll
mov
jmp
xchg
fmul
push
in
cmp
fnstenv
inc
jge
push
mov
outsb
mov
mov
jbe
sbb
push
rcr
cmp
mov
sub
mov
and
inc
enter
shll
and
sbb
xchg
xchg
sbb
aad
mov
lcall
lds
popl
xchg
and
sahf
sar
sbb
jbe
imull
js
mov
imul
inc
mov
clc
or
sbb
insl
jno
imul
in
in
dec
sbb
inc
inc
lods
xchg
dec
nop
loop
dec
push
lahf
cmp
cmp
ja
mov
in
and
sarb
jecxz
xchg
xchg
xchg
cltd
jno
scas
pop
cmp
shlb
mov
dec
add
mov
sub
fsubs
cmp
pop
cmpsl
pop
in
stc
mov
mov
adc
sbb
jmp
lahf
inc
fldl
nop
inc
repnz
rorb
xlat
jg
lret
add
add
sbb
sti
inc
pop
sbb
mov
mov
roll
jne
jno
pop
out
pop
add
lock
lahf
outsl
into
imul
popa
pop
into
pop
call
xor
in
dec
pushf
enter
jnp
dec
add
push
inc
push
adc
inc
out
mov
leave
mov
pop
in
xchg
xchg
xlat
rcr
add
out
jns
mov
std
jo
push
mov
cmpsb
inc
lds
lret
lcall
lret
pop
push
jae
xor
push
int
shlb
mov
mov
inc
daa
mov
push
pop
scas
inc
jge
sti
pop
mov
aam
stc
jl
cmp
xlat
mov
cmp
adc
cwtl
pop
cltd
push
mov
mov
pushf
int3
mov
pop
and
icebp
lret
xchg
mov
adc
jno
fmull
data16
adc
sbb
mov
push
or
fwait
cli
int
sbb
and
dec
inc
sub
add
lock
repz
lea
pop
fcompl
lcall
pop
fnstenv
and
add
jecxz
push
xchg
mov
and
add
mov
aam
xchg
inc
push
sub
imul
push
mov
xlat
stos
imul
mov
outsb
rcl
rcl
mov
push
and
aad
jne
orb
add
notl
xchg
data16
push
sub
je
push
pop
imul
dec
cmpsl
cmp
es
sub
pop
adc
push
imul
sbb
push
test
xor
and
add
sbb
stos
sub
aaa
adc
sub
inc
shl
add
aad
cli
dec
mov
stc
or
imul
outsl
add
arpl
lock
mov
jns
push
dec
outsl
lret
and
loopne
xchg
iret
cmp
daa
and
ret
ljmp
scas
psraw
mov
mov
stos
push
and
std
pop
or
clc
and
iret
stc
jbe
mov
pushf
push
pop
cmc
icebp
das
mov
test
lea
mulb
inc
test
sbb
xchg
int3
push
sbb
mov
mov
in
rolb
cmc
jno
mov
or
xchg
loopne
cmp
fistps
dec
cwtl
pushf
lods
push
mov
add
push
movsb
push
test
mov
adc
and
rcrl
pop
or
jmp
mov
xchg
jo
aaa
push
xor
pshufw
dec
lea
call
lea
js
leave
jno
mov
iret
hlt
push
out
adc
jecxz
mov
out
insl
ss
sbb
and
mov
sub
mov
and
popa
inc
or
push
jle
les
mov
xchg
je
test
rorl
cmp
stc
ljmp
cwtl
shlb
int
leave
test
push
popa
xor
xchg
clc
mov
mov
push
dec
pushf
daa
pusha
sbbb
and
loop
sar
rorb
dec
push
scas
enter
cmpsl
sbb
enter
cli
pop
lahf
lods
loope
movsl
or
andb
ret
imul
cmp
dec
push
xchg
stos
loope
cmp
push
sahf
inc
sub
pop
fiaddl
sbb
push
dec
jmp
sbbl
iret
inc
mov
push
ja
ja
nop
jle
stos
pop
dec
xlat
xchg
lock
scas
inc
cmp
rcrb
popf
adc
xor
pop
hlt
jmp
hlt
jns
fsts
outsl
data16
xchg
xor
cmpsl
es
cmpsb
or
es
jecxz
test
rcll
xor
ja
adc
cli
aad
push
into
pusha
xor
cmp
pop
adc
leave
insb
sbb
add
notl
xchg
int
ja
ja
and
cmp
push
mov
add
and
and
or
ds
push
push
ret
es
push
aad
pop
in
daa
xlat
das
fwait
jge
inc
sbb
adc
dec
add
fwait
int
xor
test
sub
dec
adc
sbb
cmp
xchg
js
mov
testl
mov
inc
addr16
lods
lret
arpl
popa
xchg
add
sbb
shrb
inc
lret
dec
jge
fs
pop
or
add
fucomi
out
sti
or
std
xchg
adc
mov
rorl
adc
ret
pop
out
out
xchg
mov
or
adc
add
mov
dec
inc
mov
clc
jmp
flds
popf
jb
push
sub
addl
dec
inc
int3
pop
ss
mov
sahf
cwtl
jno
ds
fcomps
into
movsl
and
divl
int3
jbe
lcall
and
aad
lret
or
rolb
lock
sarb
xor
sti
pop
jp
dec
jl
mov
jecxz
lea
sub
or
pop
sub
cmp
addr16
js
outsb
aad
divb
test
inc
sahf
jb
dec
push
jmp
pop
or
adc
adc
mov
jae
xorl
jg
mov
loope
cli
stos
cmp
sub
mov
divl
or
xchg
mov
add
jb
xlat
jge
es
out
fsts
and
dec
loopne
cmpsb
pop
xor
jg
outsl
insb
sbb
movsl
cs
jg
ret
and
cmp
cmc
mov
add
push
call
les
repnz
push
cmpsl
push
xchg
pop
sub
xor
out
sub
push
insl
mov
inc
or
inc
cmp
adc
cltd
loop
mov
add
and
cmpsb
scas
lods
xchg
and
inc
out
sahf
mov
ret
sbb
fdivrs
in
xchg
mov
mov
push
les
cld
aam
shr
jae
fadd
shlb
cltd
push
in
jmp
push
fcompl
push
push
enter
cmc
xchg
mov
lret
loop
pop
inc
bound
mov
sub
adc
int3
test
sbb
mov
stos
lcall
add
data16
xor
push
iret
mov
sub
lcall
mov
sub
and
stos
iret
fldcw
inc
jge
int3
in
xchg
lds
and
lods
fbld
imul
mov
dec
in
outsb
fs
cmpsl
bswap
mov
in
mov
addl
inc
sbb
push
pusha
sbb
pop
mov
xchg
jmp
out
or
push
stc
cmp
ljmp
push
and
je
sti
aaa
pop
rcl
add
pop
xor
and
add
jbe
es
aaa
int
pop
sbb
in
adc
stc
mov
ss
push
jg
push
aad
mov
cwtl
xor
das
stos
fs
ljmp
xchg
sbb
jmp
jp
jl
call
push
mov
addr16
ffree
pop
aad
out
movsb
sbb
xchg
enter
pop
sbb
lcall
or
mov
xchg
aam
std
aad
mov
pop
dec
test
cwtl
or
jb
mov
xchg
mov
push
data16
ja
mov
test
lcall
sub
call
mov
or
nop
and
movsb
loopne
ds
and
out
pop
mov
test
pusha
jp
mov
pop
jns
xchg
jecxz
push
inc
and
arpl
jno
imul
jmp
lods
leave
ret
into
insl
ss
fs
pushf
imul
add
sti
pop
pusha
aas
mov
daa
xor
divl
mov
sbb
lods
addb
add
rorl
dec
cmp
push
call
fwait
testb
dec
mov
sbb
push
push
pop
sub
adc
cs
adc
out
cmpsl
and
cmpsb
stos
addb
dec
mov
fcomps
pop
add
adc
pop
lods
inc
mov
push
aaa
lods
shlb
sub
cmp
icebp
add
adc
mov
arpl
test
mov
sarb
aaa
notl
xchg
and
fwait
xlat
adc
sub
or
push
test
add
pop
das
xchg
cltd
pop
xchg
std
inc
loop
jle
icebp
jnp
inc
out
push
xchg
ljmp
out
sub
jo
lock
jae
andb
push
sub
jns
sbb
outsl
stos
push
cld
ret
lret
or
cltd
cmc
inc
test
neg
stc
sbb
cmp
pop
gs
add
xchg
cmp
pop
mov
sahf
ds
jecxz
aad
jae
adcb
ds
pop
add
xchg
inc
xchg
add
pushf
pop
int
test
imul
cmp
inc
add
movsb
and
hlt
aas
daa
sub
js
inc
mov
mov
push
jp
ret
sub
jp
adc
pop
idivb
ss
adc
popa
mov
sub
jno
sahf
into
mulb
mov
lock
hlt
fldenv
int
movsl
fsubl
mov
add
cmp
int3
dec
xor
adcl
stos
cmp
mov
mov
loope
popa
imul
inc
mov
xlat
xchg
rcl
lret
xchg
jno
or
fwait
gs
cltd
dec
call
add
mov
xchg
jecxz
jg
fstp
push
inc
mov
adc
inc
mov
mov
add
mov
cmpsl
xchg
bswap
mov
jl
out
jmp
lret
pushw
fisttpll
push
mov
xor
in
sbb
fcoms
pusha
cltd
pop
cmp
sub
sbb
dec
imul
jle
insb
cmp
sbb
adc
rolb
mov
xor
xchg
std
js
stc
dec
js
inc
or
push
mov
cmpsl
rclb
dec
mov
data16
pop
and
xchg
and
xchg
je
pop
ss
sub
mov
push
ljmp
mov
adc
scas
xor
add
jno
mov
data16
or
int3
pop
movsb
cs
mov
mov
push
insb
rorb
push
adc
xor
or
sahf
aam
add
cmp
mov
in
cmpsl
sub
jecxz
das
jo
orb
test
jg
lea
mov
and
push
pusha
cmp
in
fdivp
pop
sti
xchg
movl
pop
out
xchg
adc
inc
fdiv
sbb
add
sub
or
je
icebp
pop
dec
subl
testl
nop
into
aad
dec
xchg
cli
sbb
jp
cwtl
insb
clc
lret
rorl
jmp
into
fwait
jb
in
scas
addl
mov
xor
inc
mov
dec
stos
adc
sahf
lahf
popf
inc
sub
push
or
out
adc
enter
jmp
cmpsb
cmc
scas
rcrb
sbb
or
fcomp
sub
imul
pop
lods
cmp
cmp
sub
mov
pop
add
sbb
mov
jmp
shrb
xchg
pop
mov
mov
fwait
inc
out
js
rol
adc
cwtl
jnp
loopne
lods
call
ficomps
clc
mov
cmp
clc
lcall
jecxz
dec
cmpsl
jnp
or
xbegin
fstps
aad
icebp
pop
mov
add
inc
jmp
test
daa
aaa
imul
and
loope
cmp
outsl
pop
add
or
mov
mov
mov
xchg
and
add
add
leave
add
clc
lahf
cmpsb
or
or
cmp
mov
and
test
shrb
or
pop
movsb
and
ljmp
movsl
dec
pop
popa
out
inc
inc
inc
repz
add
adc
or
rorl
and
or
add
loop
mov
pop
sarl
int3
shll
dec
scas
sub
mov
pop
xchg
push
xlat
dec
push
ja
adc
xchg
ss
ficoms
dec
xorl
jnp
mov
sub
and
inc
pushf
jno
cli
mov
outsl
fimuls
into
xor
test
andb
add
push
std
xchg
sbb
movsl
xchg
add
push
rcrb
in
sti
addr16
repz
dec
repz
jno
sbb
movsb
lods
push
mov
jae
and
mov
imul
cld
inc
jmp
and
jg
mov
xor
clc
inc
sub
test
in
mov
xchg
mov
mov
addr16
pusha
inc
sub
fwait
fadds
jne
mov
popa
ja
sub
mov
and
mov
xchg
push
xor
call
or
inc
push
hlt
sub
xor
aaa
test
scas
inc
pop
dec
sub
out
add
pop
mov
adc
lcall
pusha
mov
ja
sahf
lcall
dec
push
imul
pusha
jl
adc
and
mov
xchg
add
data16
bound
insb
aaa
repz
rep
lea
adc
sub
test
in
daa
add
or
stos
nop
or
movsb
mov
insb
or
adc
dec
jne
cld
sub
fs
pop
dec
mov
mov
jp
daa
fmull
push
sbb
pop
mov
addl
hlt
adc
push
repnz
test
loop
test
idiv
jmp
jecxz
or
xor
mov
mov
pop
call
mov
or
rorl
mov
jns
ds
jo
data16
mov
lahf
int3
das
mov
bswap
push
mov
sub
out
loopne
dec
stos
cli
rorb
inc
mov
xor
rorb
pushf
xchg
test
mov
mov
aas
dec
test
pop
pop
insl
arpl
push
mov
stos
stos
mov
enter
int3
jno
or
push
jns
js
adc
fsts
xor
addr16
cmpsl
dec
test
shl
out
push
clc
int3
and
mov
jmp
daa
add
or
cmp
lret
fbld
cmp
mov
es
xor
rorl
lret
and
mov
mov
pop
jge
and
mov
mov
add
gs
or
or
add
sbb
rep
jl
sbb
push
popa
adc
xor
ror
ret
enter
mov
rorl
ss
and
lea
aam
dec
repnz
iret
adc
hlt
fucomi
in
repz
aas
test
add
movsb
pushf
int3
sub
cli
nop
int
les
xchg
push
shlb
mov
cmp
and
pop
xlat
xchg
hlt
fisttpl
popf
repnz
dec
shr
xor
sbb
and
test
inc
adc
jbe
jl
xor
push
iret
lret
mov
inc
inc
cltd
clc
mov
div
push
adc
jo
lds
fnstsw
mov
jne,pn
fwait
sar
and
adc
pop
repz
cmpsb
adc
pop
gs
xchg
xor
lea
mov
std
mov
rorb
sar
cmp
mov
mov
or
das
lea
xor
xor
jae
sub
std
inc
push
push
stc
sub
inc
inc
mov
lahf
rclb
xor
cmp
pop
and
pop
int
call
mov
movsb
mov
outsl
cltd
and
or
push
dec
xchg
ljmp
adc
or
pop
lds
xchg
mov
or
lahf
repz
jno
push
pop
out
insb
inc
pop
cltd
mov
int3
mov
ljmp
mov
in
sub
and
xchg
mov
sahf
inc
notl
arpl
fs
xor
xchg
fisubrs
sub
mov
test
dec
cmp
test
addr16
mov
insl
iret
loopne
mov
in
ss
sbbb
shrl
insb
popa
ja
push
xor
sub
xchg
or
xor
and
cmp
ss
dec
mov
xchg
fbstp
cmp
fcmovne
faddl
dec
mov
dec
mov
js
lods
xchg
rorb
imul
dec
out
mov
scas
fsubr
int3
jle
inc
ja
adc
sarl
sbb
lret
insl
xor
mov
fdivp
int3
pushf
loop,pt
iret
out
mov
xchg
cmpsl
cli
loop
out
cmp
mov
xor
xchg
or
stos
das
notb
and
je
pop
pop
pop
cltd
push
fsubrs
aaa
rolb
mov
mov
into
scas
sub
xlat
aas
adc
scas
movsb
mov
je
lea
jg
push
sbb
scas
xlat
add
pop
push
fnstcw
inc
lea
sbb
hlt
mov
leave
cwtl
pop
aas
ja
xchg
cmp
cmp
pop
mov
pop
outsl
popa
js
sbb
popf
ss
stos
out
push
rorl
xorl
stos
insb
cmp
cmp
outsl
cmc
jle
mov
ret
lods
cmp
add
pop
in
dec
leave
pop
mov
loop
popf
cmp
and
filds
vunpckhps
pushf
xchg
xchg
inc
inc
divl
adc
jmp
into
pop
into
inc
xlat
push
andl
inc
mov
push
inc
cmp
ss
xor
in
or
rolb
or
pop
adcb
ret
ds
mov
mov
add
mov
push
mov
push
aas
mov
sub
aam
js
stos
mov
mov
add
sbb
sub
pop
hlt
insb
std
out
test
scas
inc
popa
fucomi
lret
inc
push
mov
mov
push
cmpsb
push
lock
jmp
ljmp
xor
clc
sti
push
iret
fisubrl
insb
mov
subl
pop
and
xorl
or
add
sahf
ja
nop
xchg
mov
mov
dec
cld
shr
fucom
addr16
xchg
inc
in
nop
sbb
jbe
lcall
add
data16
bound
pusha
fwait
xor
scas
adc
pop
lods
mov
adc
shlb
xchg
push
test
sbb
jmp
in
pop
cmc
ret
cmp
mov
adc
call
scas
roll
and
xchg
call
and
cmp
inc
push
inc
ja
std
mov
shrb
imul
jl
xchg
cmp
jecxz
ror
popa
xchg
sub
or
stc
out
enter
test
sbb
aas
xor
push
decl
test
mov
adc
or
loop
test
push
mov
or
adc
cltd
out
cmpsl
popa
ret
and
mov
fildl
fistl
xor
scas
sbb
and
jnp
out
fstp
out
jno
mov
aad
push
sub
adc
sub
loopne
lcall
dec
imul
loope
or
cli
adc
sbb
test
push
leave
js
call
xchg
xor
fs
divb
stos
xchg
fisubrs
xchg
and
or
and
loopne
js
mov
xor
ja
mov
mov
cli
add
test
xchg
scas
sub
fisubs
inc
jg
or
outsb
pushf
rcll
shll
aaa
xchg
jmp
popf
sbb
inc
jge
mov
cs
or
gs
add
aam
inc
fdivs
sub
testl
and
lahf
inc
jmp
test
lea
jns
mov
xor
xchg
aaa
test
mov
in
dec
mov
cmc
mov
mov
es
push
jmp
es
in
mov
rclb
xchg
inc
sbb
pop
int
xlat
mov
pop
add
sub
dec
out
mov
pop
out
mov
mov
imul
push
add
push
and
int3
mov
loopne
cmp
jge
cmp
enter
loope
or
mov
lds
xor
sub
or
subl
sub
lods
loopne
fsub
scas
xor
movsb
cmp
lds
pop
pop
shufps
std
push
sbb
int
or
pop
lcall
stc
ret
sti
inc
cmp
dec
mov
xor
add
mov
pop
add
test
dec
sub
inc
mov
dec
imul
sbb
lds
ja
iret
movsb
inc
fwait
inc
mov
shrb
subb
pop
jns
or
push
int3
inc
xor
stc
inc
in
js
or
lret
lods
das
cwtl
jne
movsb
shll
lcall
lret
mov
sti
test
dec
lods
push
mov
lret
push
xchg
xchg
xchg
rcll
addl
leave
sbb
push
clc
mov
cmp
imul
fnsave
fmuls
sub
push
or
ficoml
xchg
or
mov
imul
ss
int
stos
and
jno
arpl
cs
and
movsl
addb
lods
insb
adc
mov
push
rorl
xor
inc
jnp
repz
adc
arpl
nop
mov
mov
mov
repnz
dec
jmp
jmp
push
add
lahf
pop
jnp
sahf
lods
or
mov
inc
int
inc
repz
mov
jmp
mov
adc
jb
xchg
adc
iret
sub
inc
lret
add
es
xchg
pop
jge
lea
sbb
and
inc
jae
mov
lds
and
test
ja
add
adc
ret
cmp
cmp
or
lahf
aaa
jmp
daa
dec
shlb
adc
lods
add
push
lcall
push
icebp
cmpsl
in
shl
repnz
loopne
add
and
mov
orl
test
cmp
push
mov
sbb
adc
rorb
pop
sbb
mov
mov
in
sti
out
fisubs
ds
xchg
xor
fcmovbe
int
mov
mov
es
out
lret
clc
shrl
mov
out
mov
mov
push
fimull
pop
push
jmp
fsubl
scas
and
leave
adcl
fsubl
mov
mov
pop
xlat
dec
loope
shr
jbe
andl
repnz
push
mov
lret
cwtl
xchg
fcom
adc
nop
rcrb
push
in
lret
sti
das
stc
mov
jle
add
loop
fsubrs
cmpsb
int3
fdivp
sub
in
es
and
fs
test
movsb
or
mov
cmp
and
sarb
lcall
mov
add
pop
fisubrs
loopne
xchg
or
or
aam
xchg
push
mov
sarb
inc
sbb
in
mov
subl
iret
jne
pop
xor
fdivl
pushf
ljmp
fbld
xlat
ja
shll
shl
inc
adc
push
jmp
xor
xchg
insl
cmpsl
sbb
aas
cmp
xor
scas
jg
popa
and
push
test
in
push
inc
add
or
je
sbb
cmpsl
outsl
test
push
add
inc
movsb
dec
pop
and
mov
cmpsb
dec
pop
cld
sbbb
mov
and
imul
test
pusha
dec
xchg
loope
xchg
fcompl
mov
out
iret
pushf
arpl
outsl
sub
stos
mov
fs
push
dec
jge
push
cltd
mov
sbb
insl
fsubp
lock
nop
fistl
mov
dec
jb
rol
daa
out
mov
imul
jnp
jb
and
pushl
mov
into
sub
sub
push
mov
sbb
push
sub
fs
push
xchg
xchg
push
inc
test
inc
fnstcw
das
xlat
js
loopne
xlat
add
lahf
mov
cmpsb
mov
loopne
clc
dec
popa
and
lret
adc
mov
xor
movsb
add
ss
xchg
or
sub
cmpsb
pop
xor
jnp
in
sub
pop
test
in
call
movsb
dec
test
inc
xchg
mov
cs
sub
push
insb
dec
xor
or
inc
cltd
mov
roll
pushf
mov
in
or
sub
lret
xorl
sub
mov
lret
mov
sti
icebp
popa
rcll
lret
lds
xchg
outsl
sbb
mov
lods
movsb
mov
lods
fnsave
sub
jmp
xchg
ss
test
inc
jns
jp
adc
dec
or
mov
ret
or
sbb
lret
cmp
insb
jg
aas
lods
fwait
dec
inc
lock
push
lods
mov
xchg
cltd
mov
std
add
cmp
jo
icebp
sbb
in
clc
and
cli
jnp
push
mov
aas
ja
in
mov
fsub
inc
jmp
lock
inc
jmp
mov
popa
mov
mov
dec
repz
aaa
lea
cwtl
jno
xchg
repz
ja
js
aad
dec
ret
shrl
pop
sahf
lahf
inc
insl
lahf
lock
lret
in
jge
int
mov
in
inc
jg
jp
push
mov
add
pop
scas
arpl
lret
daa
subw
jb
cwtl
xchg
outsb
mov
inc
jmp
jb
stc
xchg
repnz
rorb
mov
popw
addr16
mov
push
int
inc
jbe
imul
adc
js
add
test
pop
mov
test
or
test
dec
adc
mov
in
push
xchg
mov
fildl
fadd
add
movsl
int3
mov
push
inc
mov
test
mov
int
hlt
push
mov
cmp
sub
add
cli
lahf
addr16
or
mov
test
iret
subl
cld
xchg
out
sub
add
add
pop
adc
lds
push
cmc
mov
mov
or
aam
jecxz
lods
mov
gs
pop
add
outsl
into
xor
fdivl
jbe
add
sbb
mov
sbb
mov
sbb
repz
cli
pusha
cmp
mov
xchg
ja
ja
dec
inc
sub
inc
addb
aam
mov
sbb
xor
mov
xchg
xlat
roll
test
divb
cmp
ret
jmp
cmc
jae
in
ss
pop
shlb
pop
sbb
sub
pop
call
jns
mov
addl
push
inc
aas
mov
jp
push
and
xor
cmp
xchg
loope
sbb
ljmp
fsub
decl
mov
insb
arpl
iret
push
cli
inc
outsb
push
jnp
sbb
xlat
std
or
fcompl
sbb
jno
roll
add
cltd
and
lods
cmpsb
pop
lret
dec
aas
push
dec
clc
jmp
xchg
je
out
and
push
push
dec
jecxz
mov
push
filds
pop
cli
xor
mov
add
sbb
mov
jno
mov
icebp
jge
shlb
mov
out
inc
sbb
jp
jb
repnz
pop
inc
int3
sub
ds
lods
mov
sbb
cmc
or
xor
jp
dec
andps
push
jns
ss
mov
vpcomd
dec
pop
fists
push
hlt
out
pop
pop
enter
dec
and
int3
adcb
cmp
xor
sti
addr16
dec
add
xchg
inc
fs
xchg
mov
jnp
mov
mov
mov
push
aaa
xor
jns
mov
dec
lcall
inc
xor
cld
jns
stc
out
lods
lea
lret
bound
jno
std
scas
out
rcrl
cmp
jmp
call
jno
int3
jne
jmp
jle
adc
in
jb
loopne
mov
pushf
mov
jecxz
insb
mov
inc
push
inc
and
sub
dec
das
pop
loope
dec
mov
cmp
dec
lret
dec
cltd
sahf
add
xor
je
xchg
cli
adc
lock
or
insl
roll
pop
and
xor
jno
stos
hlt
xor
rcl
sbb
sub
inc
dec
pushf
cld
lods
cmpsb
or
js
in
jp
mov
mov
add
jecxz
std
movsb
outsl
test
cmpsl
inc
cmp
mov
pop
fidivl
xor
pop
pop
pushf
aad
shl
and
xchg
inc
xor
mov
inc
ror
add
jno
test
shlb
adc
bound
ljmp
jle
sub
scas
mov
loope
aad
cmp
loop
clc
jg
jne
push
into
mov
inc
lret
adc
fucomp
cs
jae
xchg
clc
push
push
add
jl
addr16
push
sahf
sbb
divb
or
pop
cmpsl
pushf
and
test
cli
mov
inc
pop
pop
jbe
loopne
dec
addr16
cwtl
sbb
repz
adc
lret
mov
cli
aad
daa
or
out
fldt
mov
icebp
inc
outsb
scas
sub
add
imul
push
cmp
xchg
cmp
mov
sbb
or
pop
stc
xor
cmp
or
shlb
fxam
pop
xchg
dec
jp
out
int3
fucomi
clc
xor
push
lahf
cltd
pop
stos
sub
test
popa
ljmp
testb
outsl
test
inc
ret
and
out
ds
clc
aam
test
cmp
sbb
fcoml
sldt
insl
rorl
outsl
or
sbb
mov
cmp
ficomps
xchg
insw
mov
jae
test
icebp
lock
mov
cmpsb
xor
inc
out
imul
icebp
lcall
or
ja
inc
daa
xor
xorl
cmpsb
mov
in
call
or
mov
xor
popa
mov
push
pop
mov
fdivr
push
mov
inc
decb
mov
and
inc
movsl
jecxz
mov
je
xor
add
mov
sarl
jne
in
test
mov
xlat
add
dec
push
repz
rolb
dec
fs
xor
mov
adc
xchg
pop
daa
xor
cmp
repz
ret
xor
xchg
dec
int
sub
es
xchg
cli
sarb
fisubl
gs
xchg
add
outsb
cmpsl
push
mov
ja
xchg
pop
fsubrs
test
cmp
iret
or
mov
or
pushf
mulb
mov
push
cld
cli
cld
shlb
adc
in
icebp
pop
jne
pop
loop
push
mov
xchg
mov
add
pop
inc
std
or
inc
mov
sahf
sub
and
repz
add
pushf
adc
sub
sub
inc
mov
jg
outsb
scas
test
mov
xchg
ja
sub
jp
insb
dec
sti
mov
cmp
sub
xchg
dec
movsl
ds
sbb
xchg
or
and
cmp
mov
mov
aad
pop
imul
lods
or
mov
jle
std
mov
cmp
mov
inc
push
mov
fcoml
ds
test
adc
jb
xchg
jl
push
sbb
push
xlat
aas
push
mov
mov
mov
shll
scas
es
adc
icebp
mov
lock
pop
int3
xchg
leave
or
jbe
push
cmp
dec
aaa
scas
pop
arpl
out
cmpsb
lret
jbe
str
faddl
cmp
xchg
pop
in
mov
pop
nop
adc
dec
inc
mov
in
mov
in
xorb
jl
or
push
pop
pop
mov
ret
push
jns
or
bound
pop
fldcw
adcb
xor
aaa
ret
sbb
shll
push
daa
and
mov
loope
sub
xor
repz
test
push
xchg
rcll
lea
movsb
mov
sub
adc
popa
mov
insb
out
popf
xor
rclb
inc
or
xchg
cmp
pop
inc
lock
fsubrs
bound
mov
push
lds
pushf
lcall
ss
pop
aaa
adc
outsl
xorl
mov
aad
cmp
or
mov
addr16
aad
mov
sbbb
push
out
pop
in
out
mov
or
dec
daa
push
push
sbb
fiadds
das
cli
in
test
push
inc
sub
mov
xchg
mov
lock
test
cld
test
dec
pop
test
adc
loop
les
movsb
cmp
pop
cli
pop
shrl
imul
sbb
pop
test
xchg
fsub
dec
or
setle
bound
icebp
or
int
into
mov
inc
cwtl
les
fistl
mov
lods
add
dec
imul
xchg
cwtl
push
sarl
ret
clc
in
jnp,pt
cltd
aas
mov
and
and
test
jecxz
cmp
xor
shr
mov
mov
sbb
mov
shll
push
int3
add
add
xchg
inc
pop
or
shll
inc
mov
mov
int3
ficoml
xor
adc
mov
shl
push
inc
pop
outsl
cmp
xchg
loopne
add
fisttpl
clc
pop
adc
xchg
clc
scas
outsb
iret
lods
add
pop
fwait
and
dec
mov
pushf
pop
mov
sub
outsl
nop
decb
adc
inc
loopne
sti
xor
out
dec
mov
dec
sbb
sbb
sub
and
insb
push
lods
add
sti
sbb
sbb
scas
jae
out
repnz
fistpl
mulb
jo
cmp
cwtl
enter
call
jge
leave
leave
je
faddl
mov
bound
test
jno
insb
cld
inc
out
lahf
out
or
std
xchg
in
push
lahf
push
xor
inc
sbb
aas
cmp
test
fcmovnu
mov
dec
out
sub
mov
jp
sahf
pop
xor
cmp
push
sub
xor
jnp
out
sub
push
out
jnp
cvtps2pi
cmc
mov
subl
gs
dec
js
ret
popa
pop
scas
out
xchg
insl
fistps
jbe
lods
js
jg
add
sbb
inc
xchg
cmp
loopne
push
mov
mov
xor
loope
push
ret
jnp
pushf
sbb
adc
cwtl
icebp
mov
or
xchg
addb
rol
push
loop
popa
and
dec
or
mov
fsubr
sbb
sub
cmp
mov
jp
push
loop
jle
lahf
sub
push
jo
ljmp
nop
mov
movsb
push
push
adc
arpl
out
mov
and
mov
mov
insb
jg
mov
mov
ret
jg
cli
adc
popf
push
ljmp
sbb
add
add
jmp
jle
xorb
ja
inc
loope
jns
pop
hlt
enter
adcl
cmpb
dec
mov
mov
clc
data16
mov
lret
loop
pop
fs
inc
add
inc
mov
inc
rcr
pop
xor
pusha
js
ds
je
movsl
call
mov
sbbb
daa
mov
add
mov
pop
jmp
xor
cmp
sub
sbb
enter
aad
adc
pop
adc
ss
insb
push
sbb
mov
jge
xchg
jnp
jno
or
mov
stos
push
cmc
nop
cmp
adc
dec
xor
ja
adc
rorl
push
push
test
lods
or
test
std
xchg
inc
jbe
mov
pop
jnp
and
jmp
pop
popa
xor
dec
imul
mov
test
mov
loopne
in
test
mov
sub
sbb
mov
sub
subb
ret
ja
stos
out
jge
push
arpl
jne
sbb
jl
mov
jmp
or
pop
mov
mov
adc
adc
mul
stc
int3
and
inc
ljmp
outsl
repnz
insb
xchg
hlt
into
jno
inc
out
pop
pop
js
outsl
mov
adc
pop
mov
add
shlb
cmp
lcall
frstor
shl
mov
ljmp
jns
pop
pop
push
shrl
jne
jge
mov
pop
std
movsl
int3
xor
and
xchg
xor
rorb
aam
into
and
push
and
bound
icebp
sub
lods
loop
sbb
pushf
lcall
pop
mov
rclb
jle
pop
and
adc
movsb
arpl
test
pop
add
adc
scas
add
mov
scas
pop
or
dec
mov
mov
sub
iret
jg
cmp
insl
sub
fnstenv
push
shrl
mov
out
jmp
dec
rcll
mull
dec
jae
dec
jae
icebp
aas
out
ljmp
mov
inc
pop
and
and
sub
xor
lret
add
inc
mov
lret
sarb
add
test
loop
movsl
push
xlat
lcall
je
adc
orb
dec
fisubl
lods
dec
enter
test
xorb
bound
xchg
cmp
sub
push
xchg
in
idiv
mov
out
pop
pusha
adc
pop
ds
mov
jnp
ds
mov
movsl
fmull
sub
rorl
lds
cmp
mov
jg
mov
addr16
outsb
shrl
mov
cltd
icebp
xchg
xor
xchg
sub
or
test
cmc
loopne
sub
jne
pop
fsubrl
mov
or
cmpb
inc
sahf
int
inc
cs
add
adc
pushl
aad
xor
mov
dec
lahf
out
inc
lret
mov
neg
pop
adc
push
imulb
loop
mov
pop
mov
cmc
test
and
and
cld
jle
sub
loopne
sbb
push
mov
popf
mov
jmp
and
ja
into
cwtl
por
mov
mov
mov
pop
test
int3
push
inc
cmp
js
adc
iret
mov
divb
sti
jge
cld
xor
sub
ss
fisubs
xchg
lea
or
cwtl
mov
int
lret
cmp
popa
jmp
aaa
rsqrtps
push
sub
dec
repnz
ss
inc
adc
icebp
push
cs
or
jb
call
dec
repz
xchg
push
aad
pop
scas
push
dec
cmp
dec
mov
dec
cld
sub
mov
pop
cmp
mov
lcall
mov
and
iret
mov
adc
cmp
out
outsl
mov
leave
sbb
push
aaa
push
and
adc
pop
cmp
mov
and
xchg
out
push
jl
cwtl
mov
lods
push
and
pop
push
std
cmp
hlt
add
xchg
mov
enter
mov
outsl
faddl
fldl
inc
je
jle
scas
movsb
mov
jp
jae
jb
pop
stos
push
adc
shl
stos
pop
rorb
into
stc
imul
mov
lret
xor
popl
add
mul
mov
sbb
sbb
xchg
jge
fmull
mov
pop
lods
mov
xorb
das
cmp
mov
fisubrl
daa
cld
dec
jp
lret
and
xchg
shlb
sub
jecxz
rorl
lret
push
jnp
push
mov
andl
cmp
mov
add
out
cmp
cmp
inc
scas
mov
mov
movsl
pop
out
arpl
inc
addb
cmp
repnz
pop
xchg
adc
push
sub
negb
out
mov
mov
pop
mov
sahf
shrl
shll
push
stos
sub
sbb
jbe
sbb
dec
hlt
cmp
sbb
bound
ret
ljmp
push
dec
pop
sbb
cmpsl
lea
and
je
lahf
sahf
test
into
shll
rorl
push
or
jae
dec
scas
stc
dec
mov
xchg
mov
xchg
fidivs
xchg
mov
and
mov
mov
add
sub
lret
outsl
mov
sar
test
or
mov
pop
jnp
iret
xchg
push
test
inc
dec
shrl
test
sub
xchg
fwait
pop
out
fwait
hlt
lea
xor
lret
nop
and
dec
leave
xchg
std
mov
push
cmp
or
dec
push
mov
cmc
cmp
push
out
and
aam
lea
lret
mov
mov
insb
mov
adcl
sub
es
incl
leave
cmp
inc
stos
clc
pop
push
push
test
inc
arpl
jo
imul
rorl
mov
aas
rcrb
aaa
or
push
lods
shlb
sbb
pushf
push
inc
mov
es
add
loopne
insb
rorb
pop
pop
pop
pop
dec
and
push
mov
jge
xchg
xor
xchg
inc
xchg
pop
cmp
cwtl
xor
mov
xchg
imul
loopne
and
and
jecxz
ret
mov
or
pop
cwtl
inc
popa
adc
lods
xchg
jmp
inc
mov
outsb
bound
cmp
jo
pop
movsb
inc
pop
sbb
jg
decb
dec
mov
outsl
or
inc
cs
jecxz
cmp
pop
jb
cmp
addl
sti
mov
xchg
add
lds
aas
hlt
mov
sbb
rcrb
scas
outsb
cmp
insl
dec
jno
dec
jns
lret
lcall
test
inc
add
into
mov
xchg
add
loope
pop
pop
push
sub
jns
icebp
je
aas
mov
xchg
pop
mov
cs
mov
sahf
xchg
push
dec
in
jl
aaa
aad
mov
pop
or
dec
mov
pop
cwtl
cmpsl
mov
imul
mov
sub
out
xchg
inc
repz
sbb
sub
cwtl
mov
lods
xchg
xor
xchg
imul
and
mov
cmpsb
lds
sub
lods
dec
cmp
jnp
roll
aad
je
lahf
sbb
sub
out
or
repz
or
jle
arpl
ja
or
sti
push
popa
sbb
mov
adc
addl
mov
scas
shll
fcomp
pop
jge
ret
shlb
mov
mov
aad
repz
xchg
das
sbb
rcll
adcl
push
adc
in
cmpsb
jle
sub
or
xchg
inc
and
mov
mov
adc
adc
out
push
adc
int3
xchg
push
arpl
scas
insl
jg
inc
lea
mov
pop
inc
sbb
fildl
ljmp
adc
push
ljmp
movsb
push
mov
mov
mov
scas
cmp
outsl
mov
sbb
pop
add
fsub
fiadds
fsubl
loopne
jb
stc
loop
test
fisubrl
pop
mov
cmp
ss
pop
xor
hlt
sub
xchg
pusha
sbb
jg
mov
dec
pop
cmp
or
mov
push
outsl
xor
push
inc
sbb
loop
mov
insl
cmp
popf
lock
add
pusha
add
cmp
shl
cmp
dec
or
and
jmp
imul
inc
dec
dec
aam
jg
stc
mov
sahf
push
sbb
dec
inc
lds
lret
dec
stos
add
xor
faddl
lds
dec
insl
testb
mov
push
shlb
mov
imul
mov
and
sbb
out
pop
add
sbb
mov
or
or
mov
test
inc
loope
adc
cmp
sbb
xchg
rorb
fnsetpm(287
fwait
jbe
inc
clc
jo
pop
lods
lahf
sub
cli
or
cli
push
ret
pusha
cmpsl
icebp
in
call
faddl
sub
lea
sar
fstpt
mov
in
int3
inc
inc
inc
sbb
movnti
sbb
insl
mov
cli
addr16
pop
sub
xlat
popa
idiv
das
xchg
lcall
fstps
test
dec
loope
ljmp
inc
cli
push
imul
mov
scas
cmp
sbb
iret
inc
adc
test
fnstcw
adc
out
sarl
cwtl
lret
cmpl
mov
mov
insl
push
cmovns
dec
mov
mov
pop
jge
jecxz
jmp
sbb
cs
dec
fcmovu
in
mov
int3
adc
rcr
aad
mov
repz
inc
popf
jmp
xchg
mov
xchg
ret
mov
int3
repnz
sbb
jnp
lcall
lods
ja
xchg
repnz
dec
xor
add
mov
mov
call
in
or
pop
mov
cmpsb
stos
fisubrs
int3
xchg
mulb
lahf
xchg
mov
iret
int
jmp
sbb
das
idiv
stos
mov
ljmp
rcl
dec
into
cltd
gs
xlat
jg
cmc
cmpb
xchg
push
insb
mov
mov
bound
aas
xor
scas
push
lea
int3
test
lea
cmp
push
cmpsb
jmp
std
in
jmp
xchg
dec
push
fcmovnu
es
out
aas
clc
bsf
sub
stc
loopne
mov
jp
stos
shl
test
mov
mov
sub
mov
insl
fsqrt
mov
or
jne
xchg
lds
dec
inc
or
mov
xor
pop
or
adc
je
sti
cpuid
lret
int
int3
mov
push
fwait
cmp
outsb
lods
inc
sbb
jmp
and
dec
mov
scas
mov
fwait
aaa
aas
mov
ss
add
mov
arpl
push
pushf
ss
test
pop
fld
mov
sub
jnp
pop
push
in
push
pop
jle
ret
jg
mov
dec
push
out
int
fstpt
sbb
out
push
fisubs
sub
sti
dec
outsb
xor
jbe
lock
nop
xchg
rolb
or
pop
add
jae
shrl
sub
cltd
xchg
jbe
mov
sub
jecxz
and
dec
repz
dec
leave
mov
cltd
ss
das
orl
push
xchg
adc
mov
pop
aaa
jo
push
icebp
add
xchg
imul
das
sub
mov
mov
and
stos
imul
inc
push
and
add
and
adc
inc
lret
cld
xor
test
fucomp
sub
mov
dec
xor
mov
out
daa
lret
adc
and
inc
sbb
xchg
nop
insl
sbb
jl
adc
cld
push
push
insb
ret
stc
adc
cmp
das
jecxz
pop
ss
in
jo
mov
out
rcrb
sahf
in
filds
jbe
xor
and
gs
jecxz
xorb
push
aad
imul
dec
cmc
sbb
adc
adc
jbe
add
add
or
sarb
add
outsb
jae
movsl
pushf
mov
push
and
int
xchg
pop
pop
jne
fxch
mov
loope
fdivl
imul
or
adc
fldl
mov
mov
das
mov
sub
jge
hlt
sbb
cmp
ss
ud2
pusha
dec
es
lcall
js
out
lds
test
push
fs
xchg
into
mov
jle
xchg
je
js
cmc
mov
or
inc
imul
jl
xor
or
daa
out
inc
stos
scas
cmp
mov
sbb
push
sahf
cli
jmp
mov
cmc
sbb
nop
sbb
pushf
cwtl
stc
addr16
xchg
loopne
sbb
movsl
cmp
sbb
test
shlb
xchg
cwtl
cmp
mov
pop
enter
test
dec
imul
jns
in
sbb
jno
dec
fbld
andb
add
mov
movsl
jmp
loope
insb
push
fs
xchg
or
int3
aaa
cmp
int3
mov
in
sbb
push
ret
fs
mov
pop
sub
iret
fisubrl
jmp
test
xchg
into
xchg
int
mov
sbb
pop
push
add
sti
sub
sbb
out
loopne
aam
pop
enter
popf
arpl
sbb
fimull
jae
push
mov
cli
cmp
push
in
mov
imul
adc
scas
cmpsl
lahf
bound
pushf
xchg
sub
fdivr
aas
in
jbe
push
adc
addr16
ja
mov
push
cmp
popf
jae
push
ret
sahf
or
xor
or
and
in
mov
adc
daa
xchg
shrb
insl
pusha
inc
jnp
call
lea
leave
sti
sti
iret
mov
dec
test
xor
and
xchg
mov
push
mov
unpckhps
icebp
pop
popf
js
cmp
jae
mov
sbb
icebp
and
in
jns
mov
lret
imul
dec
pop
enter
ljmp
mov
cltd
ffree
loopne
add
pop
fstpt
add
mov
jne
and
sbb
xchg
inc
out
test
mov
test
mov
fsubrl
cmp
jl
gs
test
push
repnz
pop
mov
pop
dec
cmovae
jle
jge
sub
daa
add
mov
adc
lret
insl
jle
pop
xchg
jns
stos
pushf
outsl
mov
leave
sub
loopne
xchg
mov
fmull
out
ja
xor
ljmp
inc
push
test
fs
bound
inc
xlat
gs
mov
inc
jo
inc
imul
gs
cmp
xor
repz
sub
aaa
shll
fdivs
int3
stos
mov
pushf
icebp
loopne
fists
imul
rorb
jno
out
jp
pushl
into
out
cmpsb
jmp
in
xchg
into
out
aad
jo
icebp
insl
sub
sbb
mov
in
or
jo
fisubrs
incl
stos
fstps
mov
push
xchg
add
mov
icebp
jno
test
push
pop
lahf
jo
mov
iret
adc
mov
jle
out
inc
pop
movlps
sub
rcll
movsb
sbb
cmp
push
cmp
push
ljmp
dec
in
adc
adc
adc
add
cltd
jle
adc
popf
pop
sbb
inc
cmp
rclb
dec
cmc
in
mov
pop
orb
sar
mov
pushf
movsb
movsl
and
out
mov
jae
xchg
lods
xchg
addl
out
jl
popa
jnp
out
pop
insb
clc
push
fs
and
int
pushf
mov
mov
popf
pushf
es
push
fdivl
enter
into
sub
arpl
xchg
jmp
xor
jnp
and
pusha
lods
xchg
adc
mov
popf
sbb
dec
fnsetpm(287
adc
xchg
and
notl
ret
mov
fistpll
sub
xchg
jp
lcall
push
or
sbb
push
adc
iret
xor
scas
psubb
mov
mov
leave
push
jno
sub
push
inc
outsl
lods
xor
sub
orb
bswap
in
mov
dec
push
lods
xchg
ds
imul
jns
into
std
sbb
or
and
and
xor
pop
mov
lods
fwait
add
loope
ret
push
xchg
inc
cld
mov
cmp
sbb
lods
lret
popa
ss
nop
out
mov
repnz
sub
stos
jge
sti
test
inc
test
das
or
jmp
pop
sets
and
stos
fdiv
xchg
cmp
mov
pop
rorl
fisubl
sub
fidivrl
scas
int3
les
jb
hlt
mov
add
mov
inc
nop
mov
and
in
pop
lcall
cwtl
cli
mov
cmp
and
enter
lods
add
ja
push
jo
or
dec
mov
cli
gs
cmp
adc
fildl
mull
mov
ret
call
notl
pop
lcall
jno
out
push
mov
push
call
jne
mov
int3
mov
inc
jp
mov
and
rol
push
and
cmpsl
add
adc
dec
xlat
iret
fmuls
and
cmc
add
ret
pop
cmpsb
xor
lea
jne
scas
pop
jb
ds
jo
cmp
movsb
xchg
fstl
inc
icebp
loopne
xchg
jmp
int3
iret
add
cmp
dec
push
inc
imul
xchg
mov
test
sbb
cmpsb
mov
clc
lock
incb
out
lods
and
adc
cmp
ljmp
mov
xor
push
or
jb
and
jb
xchg
xor
mov
ljmp
cmp
scas
mov
push
sub
icebp
cmc
pop
fsubrs
lods
add
sbb
jge
jp
mov
loopne
xchg
sbb
imul
loopne
mov
mov
fnclex
pop
adc
xchg
jp
push
mov
push
nop
subb
push
inc
cmpsl
xchg
jns
jg
inc
and
inc
jg
sbb
push
mov
lahf
clc
jle
mov
out
stos
je
jns
and
jle
out
xchg
or
aas
out
mov
sub
cmc
mov
lods
jbe
mov
cmp
mov
ret
push
clc
fistpl
out
cmp
jmp
jmp
sbb
push
loop
mov
push
in
call
cmp
mov
loope
sub
push
into
sti
lods
mov
inc
fisubs
add
inc
movsbl
sub
ja
xchg
or
sbb
jnp
movsb
mov
out
test
lret
and
pop
pop
jnp
jecxz
mov
scas
jo
movsl
jne
lcall
adc
pusha
loop
push
out
stos
dec
jmp
xchg
adc
sub
fisubrs
pushf
xchg
shl
loop
push
incl
imul
pop
inc
data16
ret
and
lcall
movsb
int3
in
inc
xchg
loop
xchg
call
in
rcrl
mov
loop
adc
sti
jp
test
jno
hlt
adc
int
adcl
mov
arpl
push
insb
fwait
je
iret
xchg
ljmp
insb
pop
pop
push
hlt
pop
dec
jbe
sbb
push
imul
inc
loope
dec
xor
push
stos
add
stos
outsb
movnti
sbb
jle
jnp
into
xlat
jecxz
outsb
lret
mov
ret
scas
push
inc
pop
dec
xor
mov
jecxz
in
mov
cld
adc
dec
cmp
fdivs
add
mov
pushf
popa
inc
fnstenv
lahf
inc
cmp
sub
stc
xlat
push
jle
ja
push
fldenv
stos
into
cmpsb
out
fstpt
insl
shrb
ret
shl
pop
addb
mov
jmp
dec
mov
push
cltd
icebp
cmpsb
js
cli
cli
inc
add
andb
ret
imul
xlat
stos
jne
mov
xor
dec
js
jmp
dec
adc
movsb
dec
jno
or
inc
jecxz
or
mov
stc
aas
jbe
or
repnz
fsubp
fs
insl
js
cmp
idivl
cmpsb
jge
add
jmp
pop
mov
ror
xchg
mov
bound
pop
push
pop
lods
sbb
inc
jge
movb
fisubrl
mov
outsb
and
sub
xor
inc
shr
inc
mov
lock
and
ret
jne
cmp
ljmp
push
add
lods
in
pop
dec
out
and
loopne
sub
lea
push
int
mov
push
mov
dec
cs
and
adc
js
cli
adc
cltd
xchg
xor
pop
xchg
enter
sbb
xlat
cmp
bound
fwait
repnz
pop
or
xor
mov
and
imul
mov
pop
cmp
testb
cmp
fdivrp
mov
mov
dec
psrlq
dec
inc
xor
or
repnz
loop
out
jmp
std
mov
or
xchg
lcall
push
pushf
xchg
or
dec
mov
xchg
aaa
xor
popa
sbb
outsb
add
cmp
mov
pop
insl
mov
pop
pop
rcll
movq
xor
das
adc
xchg
sub
clc
mov
jg
fstpt
jp
rorl
jne
leave
add
xchg
mov
dec
fidivrs
pop
repz
lock
les
hlt
jne
testb
loop
shll
rorb
jp
loope
mov
mov
int3
push
xchg
pop
add
pop
jmp
and
sub
dec
xchg
xchg
pop
mov
movsb
jne
xor
sbb
jmp
outsl
ficomps
mov
cmpsl
pop
dec
inc
and
push
mov
or
lods
push
add
loope
push
jle
iret
add
rcrb
and
es
clc
jns
in
push
sub
cmpsl
faddp
push
jmp
jbe
lret
arpl
andl
ss
imull
mov
dec
sbb
ror
rorl
cmp
popf
mov
das
cmp
imul
fwait
andl
imul
rolb
pushf
pop
arpl
ffreep
cli
gs
xchg
cli
fld
mov
mov
js
lahf
sub
cmc
jmp
dec
js
fwait
iret
and
and
cld
iret
or
in
rcll
xor
rorb
mov
ficoml
add
daa
ror
mov
data16
push
incb
mov
push
pop
lods
push
insb
cmp
fmul
lods
cwtl
ss
and
fucomip
es
pop
daa
in
mov
and
cmp
pushf
sti
popf
xchg
stos
mov
fsubrp
mov
jbe
mov
cli
add
sub
pop
mov
cmpsl
fistpl
fldl2t
adc
jbe
pop
aas
jecxz
mov
fidivrs
mov
xor
in
pop
push
mov
fcmovnu
int3
aas
sub
mov
cmp
pushf
loopne
test
push
mov
fidivl
sbbb
add
sbb
shrl
popa
shll
enter
movsl
lcall
mov
pop
mov
mov
or
leave
filds
filds
sbbl
lds
clc
fidivs
dec
aas
insb
mov
out
aas
or
lret
sarb
or
imul
jecxz
popf
lret
loope
insb
mov
pop
or
mov
jp
dec
mov
sub
mov
jns
repz
cltd
jns
jb
lods
and
lock
or
insb
xchg
push
xlat
push
sub
andl
mov
cmp
popf
and
dec
das
imul
fdiv
adcb
hlt
loop
pushf
jnp
sub
mulb
lcall
cmp
sbb
andnps
popf
dec
dec
out
popf
dec
jmp
shll
inc
adc
in
int
aaa
js
inc
fnsave
popa
inc
arpl
ss
sub
rorw
scas
insb
daa
daa
sbb
jne
shlb
pop
push
and
xor
or
jne
out
dec
insb
sbb
inc
xchg
data16
scas
or
mov
push
jb,pt
nop
das
stos
jmp
xor
das
fstpt
xchg
ret
xchg
or
in
sbb
xor
or
in
lea
scas
add
adc
daa
jmp
scas
inc
fistpl
in
iret
in
xor
icebp
lods
inc
or
insb
add
mov
or
xchg
mov
mov
mov
loop,pt
icebp
push
in
mov
xchg
call
movsl
jl
mov
mov
pop
xchg
fisubl
mov
pop
dec
xorl
lock
inc
mov
add
insl
cmpsl
cmpsb
adc
bound
fadd
mov
testl
outsl
es
ljmp
bound
in
sbb
int3
jl
sbb
cld
outsl
sub
scas
aas
les
mov
aas
sahf
pop
adc
adc
das
fcomip
mov
setns
loop
out
fwait
jecxz
or
arpl
ja
arpl
iret
js
lahf
cltd
inc
cmp
cmp
repnz
sbb
jmp
fwait
pop
sbb
ds
jmp
hlt
sti
jns
sbb
fcomps
and
into
in
and
mov
push
sbb
sti
outsb
cld
sub
jb
mov
pop
cmp
sub
pop
pop
mov
es
fcompl
sbb
fmull
add
popf
ja
leave
stc
push
fsubs
dec
cltd
js
push
sbb
bound
mov
inc
push
or
mov
jmp
jnp
mov
mov
loop
push
adc
adc
dec
popa
inc
xchg
inc
pop
mov
sahf
xchg
stc
lods
cmp
pop
les
pop
push
in
and
mov
call
jle
mov
loope
ds
push
jl
mov
mov
jns
lods
sbb
ljmp
push
push
mov
push
aam
xor
xor
out
xor
or
std
mov
push
mov
insb
pop
ljmp
or
sub
aaa
int
int
aad
int3
daa
loope
fadd
daa
mov
mov
mov
xor
push
mov
or
test
jnp
in
jl
mov
jne
in
adc
adc
push
mov
das
imul
sbb
and
push
out
call
and
stos
out
dec
adc
add
insl
jp
xchg
lods
push
mov
les
adc
cmc
mov
ret
push
sub
dec
in
inc
rclb
mov
and
push
scas
and
jge
sysenter
cmp
xchg
xchg
in
test
fs
cmpsb
arpl
sbb
repz
inc
loop
arpl
loope
shrl
ret
jb
adcb
imul
lods
loop
loopne
ror
cli
pop
dec
mov
inc
push
out
jge,pn
and
xor
cmpb
fidivl
mov
ficomps
insl
les
loope
shll
faddl
push
xor
cwtl
jmp
aam
mov
push
into
fwait
inc
into
sbb
flds
and
cld
jno
js
or
xchg
mov
sbb
mov
imul
push
cli
jg
xor
cwtl
imul
jb
push
xor
mov
scas
mov
pop
repnz
enter
mov
in
test
call
mov
fisubrs
out
push
icebp
fdivr
fstpl
mov
mov
dec
into
inc
pushf
js
push
in
fidivrl
popf
out
in
cltd
xchg
aaa
add
out
clc
pushf
lahf
lcall
aam
ljmp
pop
cmp
sti
loop
jle
rorb
fstps
add
xchg
mov
sub
mov
jle
rclb
add
cmpsl
mov
mov
mov
fdivrl
sbb
and
jle
jno
lods
xor
add
jp
fs
or
mov
jbe
cs
inc
sub
ret
test
cmp
mov
loope
das
and
inc
inc
push
add
clc
dec
pop
cli
dec
loop
loop
jg
push
fisttpll
daa
fnsave
mov
and
cmpsb
aam
mov
mov
cmp
mov
cwtl
and
mov
call
mov
cmpb
add
sub
xor
jnp
outsb
scas
jb
idivb
mov
lahf
push
mov
xorb
into
roll
pop
shr
jmp
mov
pop
mov
jb
hlt
xchg
sbb
push
push
jp
inc
or
daa
push
mov
les
lahf
stc
and
scas
nop
xchg
lret
aaa
xorl
js
lods
insb
lret
es
out
cmp
rorl
mov
addr16
lods
mov
cmpl
iret
mov
pop
bound
rcrb
loopne
jno
jae
rolb
loope
loop
addr16
cmp
scas
xor
jecxz
dec
ljmp
mov
ja
das
popa
jge
add
and
xchg
jae
ljmp
fsubl
pop
cmpsl
sbb
in
push
cwtl
mov
mov
and
lret
fxch
push
mov
pop
or
fdivs
mov
pusha
rorb
dec
push
enter
fdivs
nop
mov
cmp
jg
mov
mov
cmpsb
fiaddl
jecxz
jno
dec
fcoml
mov
jge
cmp
lock
sbbb
cmc
cmp
xor
outsb
iret
or
stos
int3
cltd
mov
movsb
or
sbb
pop
pop
subl
movsb
cltd
mov
sub
ror
stc
push
push
sbb
sub
in
mov
int3
mov
cmpsl
rorb
and
sbb
dec
repz
sbb
cmp
insb
pop
mov
cmp
cmp
mov
in
add
mov
sub
mov
aaa
dec
mov
dec
insb
cmp
rol
add
std
sub
arpl
push
aad
sub
pop
fcmovu
or
jbe
or
xor
sub
mov
or
test
sbb
nop
call
and
stos
adc
xchg
outsl
cmpsb
pop
adc
js
jno
mov
out
hlt
in
call
push
pop
cli
adc
xchg
xor
or
data16
add
jae
aas
int
shl
push
and
mov
xchg
jmp
clc
ficomps
out
std
rcll
pop
std
add
mov
int3
pushf
cmp
adc
cs
pop
sub
arpl
outsl
xor
fidivrs
stos
fisttpll
jbe
push
imul
loop
sbb
ja
cld
dec
stos
out
mov
and
data16
lock
push
es
inc
push
sub
andb
scas
scas
inc
mov
pop
pop
mov
ds
mov
mov
mov
sti
loopne
stc
cmp
jbe
das
mov
inc
hlt
outsl
outsl
repnz
subb
btc
inc
dec
pop
fisttpll
cmpsb
icebp
jne
in
xchg
jbe
subl
adc
lahf
fidivl
fdivrl
in
shlb
cmc
lret
mov
push
gs
lret
add
add
jb
sub
shlb
ret
lret
pop
xchg
ficoms
xchg
in
jne
mov
sub
fsubrp
xchg
xchg
mov
jae
push
loopne
in
popf
idivl
push
ja,pn
fstpl
adc
insb
xor
mov
fcoms
and
rol
inc
stc
push
cli
rol
inc
lods
add
xchg
insl
inc
loopne
fsts
inc
ret
adc
adc
and
popa
aas
insb
push
lods
xchg
sbb
mov
or
inc
mov
mov
and
and
sti
xchg
ficoms
add
mov
cwtl
rcr
ret
cmp
inc
lods
call
andl
test
mov
xor
push
hlt
jle
mov
bnd
mov
neg
pop
stos
cmp
lods
mov
adc
push
sub
into
pop
dec
rorl
divl
mov
sub
xchg
lods
idivl
jb
add
xchg
dec
xor
or
jmp
stos
jmp
add
xchg
mov
pop
fldenv
fs
je
decb
and
push
add
and
adc
repz
jae
or
fdivrs
push
sub
ficoml
sbbb
mov
icebp
ja
lcall
hlt
aas
xchg
lcall
lret
lods
xchg
or
jge
lods
faddp
dec
and
add
outsb
dec
jle
mov
test
es
ret
mov
enter
jns
pop
xchg
js
scas
cs
in
xor
pop
aaa
std
xchg
pop
jnp
cs
jge
aam
call
stc
call
imul
mov
jbe
fdivs
sub
push
aam
inc
or
hlt
iret
fwait
sub
inc
mov
cmp
repz
sbb
pop
jae
jmp
xchg
mov
ret
imul
sub
or
add
or
call
inc
shll
or
sub
mov
mov
and
int
add
jmp
xor
sub
mov
xor
xchg
xchg
push
sahf
adc
int
jnp
pop
rcrl
sti
and
mov
js
lods
fsubr
insl
cmpsb
mov
push
lret
xchg
add
divb
xchg
adc
test
sub
sub
setge
in
mov
fwait
shll
call
cmpsb
cmp
test
fisttps
xor
aad
gs
push
sub
out
dec
into
or
stos
fwait
jge
sysenter
popa
xor
lcall
push
adc
pop
pushf
and
or
call
cs
adc
test
mov
jp
xor
insb
imul
mov
sbb
push
jmp
jg
dec
lret
fdivr
push
mov
lods
or
add
adc
imul
adc
pop
mov
outsl
or
cld
xor
js
xor
stc
cld
insb
push
dec
imul
cmp
icebp
cmpsb
pop
cmc
repz
mov
xlat
and
aas
shll
div
lods
jl
sub
imul
ljmp
xor
sbb
inc
add
mov
in
outsb
push
xor
pop
jns
fbstp
or
std
mov
mov
mov
xchg
jbe
out
dec
out
jmp
movsb
or
and
icebp
je
fs
jecxz
pop
mov
loopne
out
int
pop
cs
xor
loopne
push
jo
js
lcall
xor
repnz
cmpsw
or
xchg
sbb
outsb
sub
mov
push
sbb
test
push
xor
sub
pop
lcall
or
mov
xor
or
xorb
mov
scas
out
test
mov
mov
jb
mov
xor
jns
jge
mov
xor
mov
stos
xchg
fists
mov
and
js
pop
cwtl
fwait
add
and
iret
aam
xchg
mov
dec
inc
mov
cltd
test
es
inc
push
cltd
lret
lret
clc
cmp
aad
mov
les
lds
jne
cs
aam
adc
out
pushf
fdivrl
rorb
outsl
pop
out
fsubl
inc
inc
xchg
add
daa
mov
nop
sti
aad
push
xor
cmp
pop
sbb
stc
adc
int
cld
and
call
push
aaa
xchg
sub
test
lods
adc
dec
aas
xorl
and
mov
sti
aaa
fisubs
out
jns
test
dec
mov
dec
xor
and
mov
adc
clc
out
js
mov
sarb
and
cwtl
movsl
loop
data16
stos
or
push
fsubr
lock
imul
hlt
je
stos
adc
mov
rcrl
sbb
mov
sbb
movsb
fwait
ret
fisubl
shrb
adc
test
push
xchg
jno
les
and
lret
test
xlat
divb
mov
jecxz
sbb
imul
jae
bound
xchg
jo
dec
sbb
fwait
popa
outsb
movsl
and
fcompl
mov
je
or
xor
jae
cmc
cmp
add
scas
adc
or
insb
push
jnp
in
sub
data16
xlat
push
push
ja
sbb
push
push
xor
pop
xchg
push
xchg
inc
adc
sbb
outsb
xor
movsl
mov
push
bound
call
mov
out
sub
cs
sahf
cmpb
inc
pop
mov
test
out
adc
lcall
lret
js
mov
sub
in
xlat
sahf
sahf
cs
test
or
lea
jne
sbb
sbb
pop
xchg
mov
cltd
xor
shrb
das
push
add
shrb
add
nop
and
dec
test
in
stc
lret
rclb
or
cmpsl
in
or
loope
imull
inc
shlb
push
repnz
sub
dec
out
and
jne
xor
lret
pop
andb
and
pop
fisubl
xor
add
gs
mov
iret
sub
jg
mov
fstpt
imul
in
repz
outsb
jecxz
pop
into
dec
inc
sbb
or
and
lock
mov
das
ljmp
sbb
ror
stos
sub
mov
orb
pusha
popf
push
out
cwtl
dec
inc
add
xchg
mov
sar
je
insl
inc
adc
lods
pop
mov
dec
pop
sub
xchg
lcall
repnz
lds
int3
loop
jecxz
jmp
idivl
mov
shll
jecxz
and
push
push
lods
jns
aaa
add
arpl
arpl
sarb
sub
leave
iret
or
pushf
jmp
pushf
test
add
ret
xorb
cmp
movsb
jge
or
insb
or
inc
cmp
adc
cmc
lods
jge
stos
push
insb
loop
les
lods
imul
mov
std
loope
or
addb
xor
push
cmp
fldcw
out
jae
xlat
daa
scas
jmp
sbb
cmpsb
sbb
xchg
cmp
push
cwtl
sub
test
sbb
mov
push
mov
sbb
test
jecxz
push
clc
fildll
mov
jbe
xor
sbb
int3
pop
lds
xchg
mov
lcall
push
fbld
cmp
insb
sub
push
stos
popl
rorl
stos
sub
stos
xchg
fs
subl
cmp
xorb
jo
fists
mov
or
cmc
sub
aaa
jb
lods
or
cld
dec
adc
add
ret
pusha
add
enter
call
movsl
cmpsb
into
or
pop
dec
jg
push
loop
mov
xor
sarl
gs
sti
adc
jb
mov
dec
imul
mov
mov
movsb
fcoml
adc
or
in
lret
aaa
cwtl
sub
out
cmpsb
cmp
mov
sub
cmpsb
imul
sbb
enter
mov
ss
adc
scas
mov
aad
lret
dec
data16
add
iret
fsubs
movsb
movsl
arpl
loop
out
dec
loopne
inc
lret
fidivrs
dec
fldl
cs
in
or
adc
mov
or
movsb
mov
nop
dec
inc
in
sti
fistps
lods
xchg
ret
js
lret
mov
cld
stos
push
ficompl
pop
sbb
xchg
fsubl
divl
mov
mov
add
repz
dec
cwtl
add
into
xchg
dec
dec
sbb
jns
xor
push
pusha
dec
push
adc
jmp
sbb
inc
jge
jl
dec
dec
cmpsb
fcoml
int3
aad
int3
mov
mov
mov
jnp
int3
out
scas
rcrl
shlb
add
mov
stos
data16
addb
mov
cmp
cltd
dec
mov
test
xchg
jnp
sbb
mov
jmp
sub
pop
fs
movntq
out
andb
lods
fdivs
fcoml
adc
cmp
fdiv
lods
in
sarb
sbb
sub
adc
and
inc
mov
fs
clc
sub
leave
sbb
push
pop
mov
adc
jne
dec
mov
pop
les
mov
jge
pop
insb
iret
and
mov
scas
cmc
mov
pop
cmp
jecxz
mov
les
push
cmpsb
pop
rcrl
dec
lods
mov
mov
jns
mov
loopne
mov
mov
pop
mov
push
bound
pop
shrb
in
fnstenv
stc
add
je
add
cmp
stos
pop
addr16
jecxz
imul
xor
shrl
inc
jmp
popa
int
in
push
test
mov
jmp
testb
mov
xlat
dec
fbld
fisubs
xchg
arpl
dec
pop
xor
jg
mov
je,pt
xlat
rcr
fcmovu
rsm
mov
adc
mov
lods
fs
test
nop
lcall
pop
gs
mov
insl
stos
insb
dec
aas
dec
adc
jge
hlt
into
cmp
nop
or
cltd
pop
fsubr
and
jp,pn
rcrl
or
inc
sbb
sarb
push
rcrb
imul
sbb
jnp
rorl
jg
push
cmp
xor
sarl
sub
dec
pop
xor
cmpsl
ret
in
jns
lods
cmpsl
aad
std
fsts
cld
jg
xchg
push
dec
loopne
fadd
lods
push
rorl
jp
mull
add
xor
mov
fs
jnp
movsb
cmp
sbb
push
into
enter
inc
dec
sahf
jne
dec
mov
dec
mov
or
movb
mov
pop
xchg
xchg
inc
xchg
rolb
fsubrl
cwtl
adc
pop
sbb
jo
push
xor
ja
out
popf
xor
outsb
mov
movl
push
enter
dec
je
xchg
out
repnz
fimuls
pop
sbb
out
cmc
jb
push
dec
decb
dec
ret
push
mov
add
in
bound
jecxz
int
mov
adc
xor
or
outsl
push
sub
adc
jl
mov
fisubrl
and
data16
rorl
pop
mul
push
je
pop
mov
xorl
sbb
xchg
sbb
inc
movsl
outsb
jnp
sahf
rcr
push
xchg
pop
sub
test
xchg
popf
mov
inc
gs
dec
and
insl
stos
mov
call
cmp
push
mov
add
mov
arpl
pop
inc
sub
popl
push
cmp
add
inc
in
in
jecxz
sbb
mov
idivl
pusha
imul
xlat
cmp
shl
mov
call
frstor
imul
ret
enter
xor
aad
mov
adc
inc
sub
jnp
out
lahf
test
stos
outsb
call
fwait
insb
fs
fwait
cwtl
cld
mov
fsubrl
mov
xor
int
iret
xor
mov
jb
mov
jb
das
add
mov
sub
cli
pop
loope
adc
mov
pop
xchg
sbb
in
sub
and
test
ret
add
jbe
pop
mov
xor
mov
out
xchg
data16
xor
nop
fnsave
psubq
xchg
int
jg
mov
push
ret
and
xlat
mov
cmp
inc
jo
xor
xchg
jb
arpl
popa
pop
dec
rol
jg
sbb
ficoml
add
adc
xchg
push
dec
push
out
fdivrs
adcb
cmpsl
sbb
xor
fsubrl
lods
push
jecxz
movsb
and
stos
aaa
or
test
bound
add
fistpll
mov
mov
in
xor
sub
inc
sbb
out
aam
push
mov
jle
ficompl
subb
mov
inc
gs
daa
jl
mov
xor
shlb
xor
imul
jle
pusha
pop
insb
xor
adcb
divl
loopne
int
sub
sbb
adc
pop
sub
mov
lea
roll
xchg
push
stc
sbb
icebp
adc
mov
daa
aas
test
or
aad
lret
pop
movsb
test
out
jg
stos
or
and
and
andb
ljmp
push
cmp
sbb
pop
push
outsb
adc
xorb
cli
jns
ljmp
imul
bnd
jle
dec
mov
fldt
in
gs
ss
inc
or
fs
inc
mov
pop
push
mov
add
sbb
lahf
lock
mulb
lods
mov
in
push
mov
dec
sbb
jl
inc
orl
jns,pn
je
addr16
scas
daa
iret
pop
outsl
lret
subb
sub
call
push
push
xor
mov
adc
cmpsl
mov
xor
mov
adc
fimull
jnp
ror
stos
test
sbb
ret
out
push
out
movsl
mov
jp
popf
inc
psubsw
xor
mov
aad
pop
push
mov
testl
nop
add
xchg
outsl
adc
shl
xchg
jp
lods
cs
dec
xor
lds
cmp
in
xor
insl
sbb
xor
and
popf
loop
pop
stos
jae
pop
sbb
inc
sbb
mov
jne
push
int3
shrl
loop
mov
jbe
push
jge
jno
jmp
clc
or
inc
shlb
mov
call
dec
mov
pop
fs
jmp
adc
xchg
icebp
mov
inc
inc
aad
insb
xchg
mov
insl
test
mov
shld
outsl
pop
xchg
flds
sbb
cmc
xor
fstpt
mov
sbb
mov
movsl
fwait
jp
aas
jbe
scas
and
nop
ds
shll
pop
ja
outsl
dec
es
sub
mov
call
mov
sub
adc
sbb
lock
sub
fldl
ret
or
ds
adc
addr16
pop
and
hlt
repnz
add
sar
das
data16
scas
gs
push
notl
sbb
mov
adc
int3
popf
xchg
int3
mov
inc
into
fldenv
sar
jp
loopne
fwait
sbb
and
test
push
lret
jle
push
push
les
and
test
sbb
pop
mov
sbb
test
movsl
test
insb
lcall
mov
jmp
xor
push
sbb
dec
sub
inc
pop
and
arpl
mov
push
and
adc
pushf
stos
in
mov
inc
mov
loopne
inc
mov
stos
push
aaa
lods
outsb
lods
clc
push
in
icebp
sbb
lock
sub
je
outsl
mov
test
addr16
rorb
mov
movsb
hlt
pop
cld
test
cwtl
cld
gs
and
imul
jo
mov
fisttps
out
add
xchg
sub
or
dec
lret
ficoms
call
test
repnz
pop
pop
sub
mov
or
aaa
xchg
push
enter
hlt
pop
test
cmc
dec
pusha
cltd
movsb
test
hlt
ja
sbbl
sub
mov
adc
leave
sbb
lcall
add
jne
jnp
mov
lock
aad
aam
orl
aaa
insb
outsl
push
sbb
loope
or
fisubs
jg
outsb
jbe
cmc
mov
mov
xchg
dec
dec
pop
ljmp
inc
pop
adc
sbb
lcall
js
sub
dec
addb
xchg
repnz
call
xor
cmc
pop
popa
rolb
sahf
add
lods
mov
add
or
cwtl
cwtl
pop
ds
mov
inc
or
outsl
test
daa
inc
fdivl
mov
mov
dec
nop
and
cmp
jmp
cmp
fistpl
imul
negb
ljmp
jno
sti
mov
sub
jmp
fnsave
int3
dec
cli
mov
inc
xchg
inc
cld
mov
inc
rorl
adc
inc
sbb
mov
cmp
add
sub
jnp
dec
pushf
lock
aas
gs
and
add
pop
cmp
adc
xchg
cmp
mov
stos
test
movsl
outsb
mov
sub
mov
outsb
leave
adc
mov
mov
pop
in
sub
inc
jmp
rcll
rorl
enter
into
mov
push
shl
out
pop
mov
jmp
jg
xor
cmp
ss
scas
dec
pop
xlat
rorl
sub
add
shlb
inc
fcom
push
fwait
cmp
pop
mulb
shrb
ljmp
push
sbb
or
adc
cmp
sbb
xchg
sbb
pop
xchg
jecxz
mov
in
outsb
cmpsl
push
push
mov
insb
add
aad
jecxz
xchg
pop
adc
inc
mov
gs
xor
pop
mov
bound
mov
mov
hlt
std
scas
subb
push
aam
xor
mov
xchg
cmp
cmp
hlt
mov
int
insb
sub
imull
bnd
push
cmc
sbb
mov
jg
mov
pop
mov
aas
inc
ret
fcomip
fldenv
lahf
inc
push
imull
or
rcrl
ljmp
in
dec
sub
fnsave
fldl
insb
arpl
xor
ja
add
call
stos
add
mov
mull
lret
decl
cs
in
inc
add
pop
mov
std
xchg
adc
fldt
lods
inc
xchg
cmpl
and
jne
sub
pop
mov
jns
xchg
cmp
mov
and
mulb
test
addr16
jo
push
adc
inc
adc
fistl
lahf
popf
lcall
and
add
test
fcompl
insb
add
cmpsl
sbb
es
adc
imul
inc
xor
xorl
and
adc
jne
push
cli
xchg
jns
hlt
rcll
pop
jbe
ljmp
inc
notl
dec
cmp
sbb
imul
dec
mov
inc
mov
in
imul
sub
mov
pop
lahf
fsincos
cmp
fs
pop
xchg
test
sbb
out
push
inc
addr16
fildll
inc
std
repz
or
loop
clc
loope
into
sub
int3
mov
pop
mov
fmuls
js
cs
and
cltd
inc
xchg
repz
popa
xchg
xchg
mov
xchg
insb
xchg
xor
popf
in
add
add
lahf
scas
out
cltd
aad
dec
and
cmp
popf
pusha
push
test
cmp
int
daa
fwait
lea
mov
xor
cmp
loopne
int3
and
jle
fisttps
xorl
out
sbb
xor
jle
adc
pop
jecxz
push
mov
inc
sbb
push
cmp
icebp
ja
pop
push
or
sub
sbb
xor
mov
dec
dec
fucomip
popf
inc
sbb
and
sbb
inc
addl
mov
imulb
pop
or
cmc
xorb
rolb
pop
sub
jecxz
aad
mov
pop
mov
mov
and
rcrb
push
int
inc
mov
stc
pusha
stc
rorb
jno
mov
js
mov
cmp
cld
scas
adc
pop
je
or
mov
loope
adc
push
jecxz
les
cmp
lea
xchg
aaa
lock
cwtl
gs
mov
mov
add
hlt
leave
adc
aas
jmp
loop
pop
dec
xchg
nop
sub
xchg
mov
jl
negl
adc
loopne
mov
out
out
push
lods
shrb
fsts
insl
iret
cli
mov
lret
insb
fsubrl
out
pushl
adc
xor
cs
lds
inc
and
test
and
sub
shll
enter
mov
test
std
push
repnz
xchg
inc
adc
shll
pop
jns
cld
aas
lret
cwtl
mov
mov
cmpsb
push
inc
mov
aam
in
cmp
ret
xchg
outsl
jg
shrb
in
in
arpl
imul
lods
aam
jle
sarb
dec
aas
int
push
pop
filds
sub
or
pushf
inc
std
hlt
ja
repnz
sub
mov
mov
popa
popa
push
add
inc
sub
inc
insb
nop
inc
loope
cmc
jb
test
pop
jecxz
xorb
shlb
jo
stc
fadd
andl
inc
add
mov
cld
push
faddl
lret
mov
xchg
mov
in
pop
xchg
push
pop
pop
mov
out
xchg
cmpsl
fwait
mov
pop
lds
sbb
or
cmp
inc
int
jns
mov
mov
mov
dec
jg
inc
mov
xor
cmp
lock
dec
mov
cs
xchg
shll
mov
sbb
cmp
cmp
mov
enter
cwtl
pop
pop
jae
cmp
push
lock
xchg
insl
loop
pop
push
iret
aam
push
inc
lods
ds
fs
push
xchg
cmp
xchg
dec
add
pop
jno
inc
adc
pop
gs
mov
ja
in
pushf
cwtl
or
in
xchg
push
xchg
lret
mov
inc
or
sarb
lcall
cltd
aaa
xchg
mov
sbb
sub
pusha
sbb
jno
outsb
add
xchg
or
xchg
pop
sti
ja
in
loopne
and
cwtl
cmp
movb
addr16
mov
js
out
jp
sub
mov
andb
ljmp
cwtl
adc
jbe
and
in
insl
in
xchg
push
jns
mov
dec
or
lahf
add
and
ljmp
or
push
pusha
push
stos
dec
aas
add
outsl
inc
vminss
vmovupd
fiaddl
adc
daa
movsl
xor
test
and
sahf
loope
js
cmp
mov
mov
mov
insb
and
xor
sub
jg
ja
and
stos
fadd
and
lods
xchg
cmp
mov
gs
jle
test
pop
cmc
mov
lods
mov
xchg
pop
xchg
sbb
jg
jg
xchg
sub
cmp
loope
leave
fwait
mov
sti
xor
movsl
xor
in
lods
ret
rcl
add
into
sub
fmul
push
and
mov
xor
std
sub
cs
or
imul
jge
xchg
pop
pusha
or
scas
push
mov
into
movsl
pop
popa
cmp
sub
ret
sub
xchg
ret
xchg
push
pop
mov
outsl
dec
es
cwtl
repz
xchg
pop
clc
mov
cs
ds
and
pushf
jo
mov
cmp
rcll
dec
xchg
add
nop
and
negb
xor
add
mov
cmc
sarl
inc
or
xor
scas
mov
iret
dec
sub
mov
repz
jns
or
mov
inc
pop
add
repz
and
frstor
insl
jno
mov
stos
aaa
mov
mov
jno
sbb
cltd
mov
lods
outsb
int
mov
sub
in
fdivp
std
js
inc
jmp
stos
xchg
shlb
rcr
lcall
mov
sub
add
repz
hlt
test
out
mov
out
sub
loopne
sbb
int3
iret
int3
fcomps
dec
fwait
rclb
out
dec
dec
add
push
enter
cmp
cmpsb
test
add
testl
andl
xchg
fisttps
int
loopne
xchg
cmpsl
fiaddl
cmpsl
pop
sti
mov
add
out
push
dec
jns
mov
push
in
push
cmp
lds
jo
prefetcht0
xor
xor
dec
fsubr
mov
jecxz
sub
xor
adc
dec
movsl
mov
fsubs
or
or
jo
and
pusha
ret
mov
jnp
int3
pop
mov
das
ljmp
in
xchg
in
mov
es
cltd
aaa
jge
dec
lock
sti
mov
leave
push
repz
pop
push
bnd
dec
mov
cmpsb
out
mov
ret
gs
andb
insl
cltd
cmp
or
les
add
lods
cmc
push
imul
xchg
clc
mov
jmp
inc
xor
int
push
rclb
and
loopne
movsb
sbb
jno
ret
or
test
jp
rorl
insl
sub
add
test
xor
or
ljmp
divb
sti
push
push
nop
lea
and
xor
jecxz
pusha
add
aad
push
data16
pop
push
xchg
jecxz
faddl
outsl
push
and
cmp
mov
jae
js
in
mov
addr16
sbb
dec
hlt
jo
shrl
mov
ja
out
bnd
imul
mov
and
ja
jo
pop
jecxz
test
pop
push
es
cwtl
add
xchg
jg
push
imul
les
and
mov
mov
popf
xchg
add
iret
push
rorb
xor
aam
jnp
loope
loope
sub
loopne
add
mov
inc
jo
arpl
ja
dec
mov
aaa
adc
fnstenv
cs
adc
in
into
lahf
addr16
lret
mov
int3
mov
fmuls
int
int3
les
mov
pop
clc
sbb
mov
call
addb
test
jno
inc
fsubl
mov
pushf
out
pushf
push
dec
add
test
int3
ljmp
mov
loop
lcall
inc
loope
lods
and
mov
in
out
mov
cmp
xchg
mov
repz
xor
dec
push
xchg
movsb
hlt
xchg
ds
fcmovnu
mov
cld
aam
mov
popa
ficoms
dec
mov
jmp
popl
sub
dec
jne
xorl
cmpl
lea
sbb
out
es
cmpsb
jb
and
imulb
stos
mov
aad
cmc
fisubrl
pushw
fidivs
fdivrl
stc
fisubl
dec
inc
cmp
das
adc
cli
inc
push
sub
dec
mov
adc
mov
jge
lods
imul
lret
xor
add
mov
fstp
mov
popa
in
pop
popa
pop
jp
cwtl
sbb
shl
in
mov
adc
mov
push
fsubrl
push
ficompl
fimull
in
notl
add
lods
bound
cmp
xchg
push
sub
imul
scas
iret
xchg
div
xor
add
fs
out
jne
xlat
sbb
test
and
loopne
push
cli
lds
pop
inc
jo
loopne
jmp
imul
sub
or
mov
lret
daa
xchg
mov
push
lods
das
inc
or
cmp
add
enter
aaa
lock
cwtl
mov
scas
data16
ljmp
xchg
cmp
mov
sub
sub
and
mov
scas
loope
test
pop
ss
adc
int3
shll
add
xor
inc
fisubs
push
jge
or
xor
lock
xlat
cmp
add
pop
inc
xor
sbb
aam
fcmovb
js
cli
div
mov
add
inc
sub
mov
or
sub
mov
ret
aaa
lock
pop
dec
gs
lea
lcall
int3
xchg
arpl
adc
mov
in
push
scas
pop
cltd
outsl
sub
aam
cwtl
mov
push
daa
mov
ds
and
testb
mov
xor
rorb
sti
cmpsb
or
sub
insl
and
je
sub
movsb
jp
or
sub
stos
cmpsb
cld
xor
xchg
test
lock
jl
xor
outsb
cs
cmp
mov
cld
bound
push
xchg
add
aas
les
sub
jne
lds
add
adc
mov
jmp
or
out
mov
insl
xor
cmc
mov
pop
xchg
jmp
mov
add
test
mov
mov
pop
dec
dec
ds
jbe
es
ljmp
add
xchg
sub
mov
ljmp
mov
push
test
call
cmp
mov
aas
mov
pop
pusha
loop
mov
loopne
xchg
jp
add
or
shl
push
jge
and
pusha
or
sub
addb
je
negb
pop
push
sbb
sbb
pusha
or
push
jno
je
inc
mov
sbb
pop
jp
ljmp
orb
aas
cwtl
mov
xchg
fdivs
cmc
call
inc
sbb
js
push
pusha
ds
or
add
dec
call
or
jo
stos
fs
mov
fidivs
cmp
xchg
dec
shll
push
dec
fwait
stos
mov
push
lret
xchg
jle
ja
pmaddwd
and
lret
jno
out
lahf
push
push
pop
mov
and
and
and
mov
rcpps
popf
enter
and
lock
mov
sub
pop
shlb
pop
aaa
mov
cmpsl
leave
addr16
push
pop
inc
ret
push
xchg
sub
jo
adc
clc
push
mov
cmpsl
push
sarl
inc
loope
sbb
mov
add
fs
mov
mov
pop
call
sbb
mov
ja
or
dec
and
xchg
into
test
sti
pop
rorl
xor
negb
loope
hlt
ffree
decb
jle
call
iret
inc
add
mov
repz
int3
or
loop
in
mov
dec
pusha
leave
cmp
push
push
jbe
fldenv
std
pusha
xchg
movsl
and
mov
call
scas
pop
cmp
and
mov
dec
push
mov
cmp
inc
lods
nop
cmp
push
cmp
sub
fwait
push
sbb
leave
testb
imul
int
sub
mov
inc
subb
es
insl
jnp
cmc
xor
call
xcrypt-cbc
cmpsl
xchg
ds
dec
rorb
out
dec
pop
sbb
jp
imul
push
mov
das
aam
xchg
testl
push
in
mov
jns
mov
cmp
test
repnz
dec
xchg
adcb
out
test
cmpsl
or
repz
cmpsb
or
pop
push
pop
pushf
repnz
test
xchg
popa
jne
pop
xchg
jl
adc
pop
pop
sbb
lcall
out
adc
xchg
push
rorb
cmpsl
mov
cld
xor
int
xchg
pop
add
jmp
sbb
push
jg
sub
and
aas
clc
pushf
mov
int3
es
inc
and
mov
xor
xor
stos
lods
cmpsb
jecxz
mov
push
jnp
dec
mov
xor
sbb
das
pushf
lret
adc
pop
stos
and
hlt
jnp
add
out
ja
inc
mov
lods
icebp
js
leave
stc
push
cs
outsb
adc
lods
sahf
and
mov
mov
aaa
inc
ficoms
pop
data16
push
dec
push
inc
pushf
enter
and
adc
pusha
or
jae
dec
popf
add
scas
mov
jecxz
mov
mulb
bound
js
dec
dec
clc
ds
lret
andl
das
and
addr16
jecxz
test
aaa
hlt
movsl
scas
inc
and
imul
sub
leave
negl
jl
dec
add
std
out
pop
in
stos
imul
add
arpl
popl
fdivrl
movsl
push
sbb
nop
mov
mov
test
js
push
xchg
or
leave
fs
inc
shll
fst
aam
pushf
sti
insb
jmp
push
nop
mov
arpl
or
mov
stc
ja
fldenv
and
shr
mov
rcrl
jb
add
and
int3
cli
test
push
dec
lahf
push
movsl
and
cmp
dec
insb
jnp
sub
xor
test
adc
es
sub
cmp
mov
test
jmp
jecxz
data16
or
adc
nop
cld
loope
sbb
mov
les
sbb
push
cli
pop
nop
mov
lea
pusha
add
sbb
mov
xor
cmpsl
adc
enter
inc
adc
xchg
lods
dec
fisubs
add
mov
add
cmc
sbb
shrb
je
cmp
fsubr
ret
iret
fcoml
inc
mov
push
testb
fs
inc
std
test
cmp
push
ljmp
mov
mov
jbe
in
imulb
loopne
cli
and
in
xor
addr16
sbb
mov
mov
inc
jl
stos
stos
cmp
pop
adc
or
pop
jne
xor
dec
xor
xchg
mov
lods
mov
popf
addr16
dec
enter
jl
lcall
adc
das
and
xor
cmp
je
test
imul
ret
inc
bound
into
pop
push
push
outsl
xchg
push
jo
negl
ret
and
roll
sti
out
mov
jge
clc
adc
daa
cmpsb
incb
cmp
xor
jmp
ss
flds
inc
mov
cmp
int
lods
imulb
clc
xchg
or
push
inc
sub
add
into
jbe
les
popf
jne
rorb
cmp
jo
cmp
mov
sbb
cmp
dec
pusha
sbb
mov
xchg
stos
int
or
lahf
jmp
mov
or
sbb
aam
imul
or
jmp
testl
test
or
add
or
or
push
push
adc
mov
stos
stos
sbb
cmp
mov
pop
dec
sbb
repz
cwtl
push
ja
jno
inc
inc
cmp
leave
sub
in
ljmp
jb
adc
insb
shlb
lods
push
cmp
aad
movb
jg
popa
cltd
sbb
cmp
sub
out
mov
push
dec
std
mov
xchg
adc
in
pop
add
addb
push
es
push
sbb
or
aas
fadd
add
popa
jns
roll
push
mov
pop
in
push
stc
es
ljmp
mov
dec
adc
push
mov
imul
aam
xchg
outsl
jg
dec
iret
movsl
hlt
add
ds
cmp
lret
aas
mov
xchg
mov
mov
sbb
cmpb
subl
lds
sbb
test
repz
andl
nop
test
test
mov
xchg
jne
inc
add
xchg
jl
mov
loopne
fiaddl
ret
jp
scas
andb
sbb
test
out
into
push
xlat
ret
dec
jne
xchg
mov
and
xchg
mov
pop
repz
inc
jecxz
mov
push
mov
call
aad
movsb
jb
popa
pop
and
sbb
push
push
xor
ret
cmp
out
mov
or
mov
xor
sub
rol
sbb
into
add
jge
test
adc
and
dec
pop
push
mov
mov
and
fsubr
shll
pusha
test
frstor
mov
inc
xchg
daa
mov
mov
rcll
pop
jnp
pop
cmp
aaa
mov
push
or
nop
je
addr16
or
mov
cmc
xor
cmpsb
aam
sub
xchg
fsubrl
mov
jp
jae
lods
mov
aaa
test
jno
shr
jae
popw
sbb
ss
mov
inc
pop
sbb
ret
add
inc
repz
dec
pusha
aaa
fs
mov
xchg
push
sbb
sbb
cmp
adc
hlt
int3
push
dec
daa
out
repnz
mov
xor
sub
daa
popa
scas
adc
ficoms
mov
shlb
cli
rorl
or
or
xchg
sub
outsb
dec
gs
pop
sbb
xor
out
mov
ljmp
fiaddl
mov
fdivl
cmp
xor
and
icebp
rol
mov
lock
fists
push
jns
xlat
loopne
push
cmp
shl
shlb
sub
xchg
ja
loop
test
mov
hlt
inc
xchg
leave
push
adc
fisubrs
inc
outsl
pushf
push
inc
addb
pop
sub
addl
inc
setl
mov
inc
addr16
cmpsl
icebp
int
stc
fwait
jbe
push
divb
dec
or
fisttpl
sahf
in
inc
ss
or
cmpsl
push
jnp
inc
mull
mov
lret
mov
out
jae
aaa
lods
test
mov
add
inc
push
lock
dec
lahf
jecxz
jae
pop
adc
inc
cmp
ja
test
mov
enter
lahf
adc
sbbl
sbb
jl
xchg
daa
xor
and
push
lods
movsb
aas
insb
dec
push
mov
das
xor
and
out
shlb
xor
in
push
adcb
sub
xchg
pop
mov
inc
mov
int3
or
dec
push
dec
sub
jb
stos
in
aad
adc
pop
ds
std
mov
lahf
xchg
or
add
pusha
xchg
out
jmp
insb
cmc
nop
pop
mov
xor
or
iret
cwtl
push
xchg
mov
xchg
outsl
aaa
push
repz
push
dec
lods
push
rorb
inc
ss
roll
or
leave
cltd
imul
xchg
push
mov
push
stos
dec
ss
jb
scas
or
add
sub
cmp
nop
xor
add
xor
in
lods
and
or
in
xchg
xor
adc
stos
mov
dec
mov
dec
mov
sub
push
inc
sub
sub
mov
scas
pop
mov
test
imul
lds
add
frstor
sub
enter
test
movsl
je
mov
shlb
push
cli
sbb
loope
aaa
or
stos
xchg
mov
xchg
ss
popa
loope
jbe
xor
das
or
nop
nop
mov
into
xor
jno
iret
stc
dec
ss
test
inc
data16
xchg
int
cmp
fisubrs
pusha
or
mov
or
into
inc
mov
hlt
icebp
push
fmul
fildll
addr16
daa
mov
jle
in
cld
fbld
dec
sbb
pop
scas
add
add
pop
mull
ss
or
test
sub
push
sbb
sti
incb
imul
mov
sbb
xchg
mov
pop
push
iret
sub
out
xlat
push
mov
sbb
std
insb
cmp
sub
xor
insl
in
mov
sahf
es
repnz
push
decb
adc
dec
pop
lret
dec
inc
adc
dec
jno
ret
sarl
mov
push
in
ljmp
ljmp
rcrb
push
ret
divl
xchg
pop
stc
jl
cmp
lret
ljmp
xor
std
nop
out
sbb
sbb
xchg
mov
into
fwait
gs
dec
sahf
daa
dec
cmpsb
icebp
les
lret
fs
lret
push
adc
lds
sbb
cmp
mov
fldenv
mov
lret
mov
int3
aas
pop
pop
jle
mov
inc
dec
sbb
out
dec
push
jo
dec
add
incl
arpl
sbb
jns
imul
rol
aaa
js,pt
clc
or
lods
jle
jp
test
or
sbb
loope
scas
orb
shll
stos
in
and
inc
sbb
pop
pusha
testb
mov
cmp
clc
popf
inc
mov
in
hlt
add
in
cmpsl
aas
fisubrl
xchg
outsb
scas
xor
rcll
arpl
cwtl
xor
sti
jg
addr16
leave
xchg
xor
xor
scas
loopne
sbb
push
mov
pushf
lock
push
xor
popa
push
mov
lret
ja
arpl
repnz
fs
clc
jns
xlat
sub
jl
adc
mov
lcall
aad
pop
psllw
loop
sbb
lcall
or
test
push
jne
lret
mov
push
mov
mov
jle
neg
test
cmp
loope
xchg
push
cmp
dec
das
lcall
xchg
push
inc
mov
push
orb
in
sub
pop
add
inc
fs
fs
dec
rorl
dec
or
sub
iret
add
aad
dec
sbb
jmp
pop
arpl
sbb
dec
ss
clc
cmp
pop
mov
loop
push
xchg
adc
pusha
test
mov
outsl
movsb
mov
adc
fdivrs
pop
mov
das
push
out
mov
sbb
add
pusha
pop
cltd
std
insl
cmp
flds
call
xchg
ds
fsubl
mov
adc
in
std
mov
popa
or
xor
jmp
adc
dec
xor
mov
pop
fistpl
push
push
fimuls
and
ficoml
pop
jmp
xchg
dec
sbb
jb
push
sti
jae
into
push
pop
arpl
push
aas
or
cmc
mov
scas
push
cmp
pop
rcrb
mov
push
pop
fcoml
int
adc
jbe
jmp
jmp
popa
mov
repnz
xorb
mov
mov
xchg
fldenv
aaa
xchg
sub
pusha
imul
bound
push
scas
test
adc
dec
push
or
call
or
sub
js
or
scas
imul
push
mov
mov
push
mov
inc
fnstenv
push
mov
mov
adc
inc
jmp
xor
aad
push
mov
aad
cmp
enter
sbb
aad
sbb
jno
push
scas
sbb
mov
cmpsb
dec
mov
cs
push
lods
lods
lret
mov
xchg
push
rorl
fst
sub
rolb
insb
cld
clc
or
xchg
jl
sqrtps
fwait
clc
inc
or
and
sbb
arpl
in
xchg
cmp
fists
popa
xchg
sub
sbb
and
in
stc
scas
jge
push
push
cmp
mov
xchg
dec
mov
dec
sub
mov
cmp
leave
sub
pop
fldcw
xor
mov
lea
inc
ss
notb
cmp
jns
or
cli
xor
jmp
mov
sbb
inc
or
movsb
clc
sbb
jns
dec
ljmp
adc
aas
jne
loope
jns
and
pop
lea
test
rclb
ds
mov
xchg
movsl
leave
ds
add
push
sbb
add
inc
mov
jp
iret
xchg
mov
les
mov
mov
push
sbb
jae
pop
push
inc
idivl
mov
xor
jp
orl
jns
xchg
outsb
xor
sub
inc
stc
xor
pop
iret
push
movsb
ret
mov
xchg
inc
lea
adc
mov
rcll
out
adc
not
stos
jae
jnp
pushl
push
mov
hlt
call
loopne
pusha
adc
mov
int
into
or
xchg
icebp
mov
xchg
jbe
sub
dec
icebp
mov
inc
cmpsl
adc
xor
jl
jle
fisubrs
rolb
pop
inc
aaa
icebp
cmp
and
adc
cli
push
inc
fcoms
rclb
jno
clc
add
mov
cmp
push
push
mov
in
sub
fs
add
mov
xchg
test
orl
adc
sbb
mov
push
mov
cmc
pop
in
pop
data16
mov
std
stos
fsubrl
pop
or
stc
inc
inc
cmp
repz
lods
add
pop
dec
xchg
arpl
adc
mov
xchg
pusha
xchg
and
loop
sub
leave
push
mov
dec
stos
sti
fst
cs
push
stc
sti
sbb
xchg
test
cmp
xchg
mov
fwait
sub
xchg
divl
out
cltd
call
fisttpl
jle
adc
pop
ret
mov
adc
ror
testl
ljmp
rol
in
cwtl
xchg
repz
aam
push
pop
xchg
js
xchg
xchg
mov
push
ljmp
pop
loope
mov
mov
sbb
cmp
jmp
or
out
pop
xchg
not
popf
and
xor
adc
sub
pop
cmp
lret
js
xor
lret
lods
sahf
pop
sub
jns
xchg
nop
sub
shr
pop
ficoml
call
push
push
jne
add
leave
mov
loopne
jecxz
jae
xchg
pushf
xor
cmp
lret
nop
push
add
mov
lods
and
dec
jl
mov
loope
jl
sarl
and
rcl
inc
repz
add
das
mov
jbe
int
rclb
or
or
lret
lods
or
lds
pop
ret
xchg
ja
push
inc
test
mov
incl
inc
jge
push
cltd
adc
popa
mov
test
ds
add
mov
test
mov
mov
ficoms
lcall
outsl
jge
out
sub
ret
stos
sbb
dec
loop
into
ja
fs
pop
test
sub
call
xchg
pusha
shlb
jp,pt
jne
push
sar
outsb
sub
stos
iret
cmp
out
and
fcoml
subb
xchg
or
movsb
pop
sbb
stc
pop
pop
shlb
das
icebp
and
orl
inc
frstor
shrb
loopne
mov
fdivrs
push
mov
pusha
dec
jbe
pop
cli
jmp
fldl
xchg
xor
jge
push
test
jge
xlat
or
dec
push
aam
out
popa
add
xor
shl
dec
push
cltd
xchg
loopne
loopne
idivb
orb
movsb
push
insl
test
dec
cmp
sbb
pop
fs
xor
sbb
jmp
xlat
xor
jp
cmp
js
cs
cmp
stos
loope
push
frstor
xor
jl
lret
jae
sub
stos
sarb
in
jl
dec
pop
mov
lcall
mov
jbe
lcall
add
imul
add
movsl
pop
lods
imul
imulb
push
sbb
or
test
bound
pop
pop
add
addb
jmp
gs
or
lret
mov
dec
out
xchg
jae
mov
cwtl
scas
push
ficoms
fwait
leave
movsb
testl
jge
lods
pop
or
sti
fsubr
repz
adc
out
mov
outsl
dec
test
xchg
subb
or
jns
jp
repnz
in
shr
xor
std
sub
jmp
sarb
in
shl
fwait
lcall
sub
in
fstps
addr16
imul
ds
inc
ret
out
mov
jp
jbe
xchg
clc
pop
in
mov
imul
in
repnz
cmp
pop
and
faddl
jge
aad
mov
xor
ja
cmp
test
jno
and
repz
rcrb
or
add
shll
push
cmc
sub
ja
cmp
sarb
jnp
push
mov
xor
icebp
push
out
xor
jmp
inc
adc
add
and
mov
pop
add
sbb
cli
aad
ret
lods
cwtl
arpl
inc
or
push
bnd
test
push
fimull
in
push
fs
bound
push
aaa
test
xor
push
fpatan
or
push
je
mov
and
loopne
inc
pop
arpl
out
lds
jmp
movsb
lret
cmp
lahf
xor
push
pop
cmp
icebp
mov
out
adc
popa
mov
fstpl
imul
out
out
ret
insb
jge
scas
mov
int
mov
test
sbb
ret
iret
xor
in
lcall
jae
ret
mov
and
mov
shl
ficoms
cli
popf
fiadds
inc
dec
dec
lods
cmp
pop
pop
cmc
incb
push
movsl
fnsave
push
das
fsts
mov
inc
pop
pop
pop
fisubrl
movsl
jbe
aad
xchg
fs
test
ret
adc
adc
sbb
cwtl
mov
mov
cwtl
or
lods
cli
cmp
jecxz
and
sub
loope
inc
pop
aas
add
pusha
shlb
add
hlt
jbe
pop
dec
rcl
jecxz
les
loop
ja
jmp
lods
ret
pop
xor
xchg
xor
mov
cltd
cld
xor
jb
cmpsl
inc
add
or
notb
cmp
add
ljmp
cmp
sti
cwtl
push
scas
cld
adc
push
sub
movsl
enter
jbe
movsb
sbb
lahf
xchg
push
loop
xchg
mov
sti
fmull
sub
adc
xchg
test
mov
jmp
mov
mov
inc
movsl
lock
sbb
leave
stos
outsl
cltd
cli
fstps
push
pop
pop
cmpsb
fimull
stc
jg
stc
cwtl
incl
or
fcomp
cmpsb
mov
movsb
stc
push
or
add
cmpsl
data16
cmpb
fbstp
cmp
dec
pop
inc
inc
scas
mov
addr16
mov
mov
ret
popa
xchg
xor
and
pop
jg
fcoms
mov
push
push
rorl
pop
xor
jno
mov
cld
cmp
and
xchg
jne
push
loop
jp
push
push
and
mov
mov
mov
or
in
xor
aad
adc
dec
stc
rorl
mov
xor
add
movsl
fwait
and
loope
xchg
movsl
imul
insl
inc
out
cli
push
fcmovbe
jo
cmpsb
mov
lock
pop
mov
cmp
orl
popf
or
pop
arpl
push
or
mov
xchg
xchg
sbb
lea
in
pshufw
mov
mov
cmc
fiaddl
dec
push
xchg
testb
sub
xchg
out
cmp
rcr
sbb
cmpsb
lahf
inc
vandnps
fsub
jnp
and
in
sub
ret
leave
punpckhwd
xor
jg
dec
or
je
insl
popf
cwtl
sub
es
cmp
xor
je
enter
inc
pop
fstpt
jge
pop
jns
push
xor
and
cwtl
fdivl
dec
jbe
sub
nop
and
sets
inc
xchg
popa
mov
lret
add
jecxz
pop
aaa
cmp
stc
push
inc
mov
iret
dec
xchg
cltd
adc
sub
insl
cld
mov
hlt
push
lcall
xor
mov
pop
or
dec
aam
popf
shll
mov
insb
stos
mov
mov
inc
jmp
push
cmp
sub
fsts
enter
mov
movsb
orb
cmpsl
or
sarb
sub
shlb
sarl
outsb
cmpsb
insb
inc
ret
or
mov
pop
mov
cltd
roll
cmp
cld
lret
jnp
int3
in
xor
or
pop
adc
sahf
pop
and
ret
mov
repz
inc
pop
ret
add
pop
lcall
ljmp
outsl
stos
test
adc
cmp
lahf
cmp
loope
mov
or
sbb
lock
out
imull
out
push
pusha
cmc
push
loop
and
call
jns
jmp
inc
sbb
jp
popa
into
or
push
loope
push
cld
sub
adc
orb
fs
stos
div
jno
daa
mov
mov
fsts
insb
push
jle
dec
loope
sub
daa
cmovge
mov
inc
push
mov
cmp
mov
push
imul
arpl
jp
mov
shll
dec
lcall
lods
daa
xchg
pop
jb
xor
lock
jns
enter
mov
cmp
lret
xchg
xchg
cmp
cmpsl
push
lods
test
inc
dec
popf
int3
sub
popf
hlt
lds
es
xchg
adc
adcl
or
xchg
cs
rcrb
sbb
andb
push
inc
aaa
ss
bnd
mov
xor
fadds
ficoms
fcom
shll
pop
sbb
cmpsl
adc
lea
dec
nop
inc
daa
es
ljmp
mov
rcr
xchg
and
pop
aad
scas
mov
push
enter
stos
lds
mov
inc
jmp
pushf
in
push
push
loopne
outsb
mov
or
mov
iret
and
mov
mov
cmp
in
xchg
loop
dec
inc
cld
jns
and
push
into
fwait
mov
jo
mov
out
lcall
mov
sbb
jno
xlat
lret
fidivrs
ds
aam
lods
adc
xor
cmpsb
int
dec
xchg
add
push
push
cmp
clc
ret
pushf
pop
fcompl
imul
cmp
inc
jmp
inc
mov
inc
sbb
aad
mov
adc
xor
mov
mov
enter
sub
push
dec
ret
xor
stos
push
ret
cmp
inc
test
pop
add
or
dec
push
bound
sbbl
add
cwtl
jae
negl
ss
fldl
dec
xlat
ss
xchg
scas
aas
int3
pop
movsb
dec
stos
fidivrl
adc
jns
or
pop
outsb
push
loope
leave
jno
inc
jl
in
lcall
or
aam
cmp
in
xchg
rorb
shlb
mov
jne
cwtl
lcall
and
xchg
lock
lds
enter
xchg
push
cs
sub
hlt
inc
adc
aas
lock
enter
int3
daa
jno
push
out
repz
arpl
pop
cmpsb
test
or
push
jmp
in
mov
inc
add
imul
inc
mov
loopne
inc
push
ss
mov
sarl
mov
movb
arpl
xlat
ret
or
pushf
xchg
mov
push
or
cmpsb
daa
xchg
sahf
orl
int3
test
bound
aam
dec
pop
inc
add
cli
divl
push
mov
leave
js
push
add
shrb
and
push
stc
or
sbb
pop
push
pop
js
xor
pop
mov
jg
in
jae
fcmovbe
pslld
aam
mov
mov
mulb
xchg
pop
inc
mov
inc
scas
xor
and
sbb
xor
sub
mov
xchg
jnp
jo
jne
jl
mov
cmp
mov
adc
push
in
add
outsb
and
sub
xchg
lds
sahf
sbb
jle
adc
aas
shl
pop
jecxz
or
js
fstps
arpl
cwtl
fcomp
loope
gs
push
orb
lcall
repnz
push
cld
das
aaa
das
xchg
mov
popf
cmp
ds
adc
fisttps
dec
ret
mov
popa
or
pop
scas
mov
stos
outsb
bound
and
push
or
jb
movsb
insl
sub
lret
pop
mov
sub
rcr
jle
push
mov
jbe
cmc
cmp
mov
je
jno
inc
lock
xor
or
inc
inc
cmp
xor
dec
pushf
and
sti
pop
sub
jne
mov
jne
xor
jnp
or
loop
in
xchg
push
lret
push
int
insl
dec
adc
or
fiaddl
xor
pop
lahf
popf
xor
fsubs
inc
addr16
cmp
xchg
test
sar
repnz
cs
ja
sti
mov
and
jmp
imul
push
lahf
lods
arpl
cmp
imul
fmul
ficomps
loope
and
dec
mov
enter
loopne
hlt
mov
xor
adc
ds
lahf
pop
clc
rcrl
pop
test
out
add
data16
jle
xorb
xchg
aad
iret
aam
jne
cmpsb
inc
jns
pop
nop
cmp
out
inc
lods
lods
daa
icebp
jl
xchg
out
push
push
dec
cld
jp
xor
dec
inc
mov
ja
sbb
arpl
cmp
scas
jl
mov
dec
add
push
ja
popa
lods
jbe
cwtl
cmp
sub
or
sbb
dec
add
sbb
or
rcl
sbb
push
add
maskmovq
mull
dec
sahf
ljmp
or
inc
dec
pop
pop
dec
dec
jb
push
or
outsl
lcall
fld
dec
movsb
lret
cmp
sub
push
dec
shl
mov
ss
loopne
cmp
lods
mov
xchg
or
out
fsubr
sub
lea
xor
sub
pop
add
outsb
push
cmpsb
fsubp
or
push
sarb
int3
sbb
clc
jge
cmpsb
dec
nop
pop
cmp
dec
pop
sub
das
aaa
out
mov
jl
jne
in
or
popa
leave
inc
cmp
stc
enter
or
in
cwtl
pushf
xor
adc
test
stos
scas
int3
aam
or
dec
xchg
int3
in
jge
shll
cmp
jp
mov
iret
cld
pop
cmp
icebp
cmp
stc
inc
push
xchg
inc
lret
push
mov
js
push
mov
and
lds
cmp
xor
ret
mov
dec
cld
test
xchg
lds
cwtl
test
xor
jmp
pop
sub
dec
add
jnp
dec
mov
aam
flds
iret
push
sub
jge
push
pop
gs
pusha
mov
fisubs
fld
nop
enter
in
cmp
inc
inc
inc
jecxz
mov
pop
mov
xlat
xchg
xchg
adc
jb
mov
xchg
imull
gs
mov
pop
mov
pop
xchg
rcrb
jno
arpl
jg
cmc
mov
test
rclb
pop
add
in
adc
fs
add
test
xchg
mov
cwtl
call
cli
dec
lock
or
push
push
jecxz
inc
in
sbbl
test
fs
mov
sub
push
imul
mov
pop
dec
ret
jns
gs
movsl
ret
lock
inc
cmpsb
push
pop
pushf
loopne
sti
jmp
repz
add
jnp
and
outsb
repz
jns
cwtl
mov
pusha
jmp
js
xchg
sub
lods
gs
inc
std
ret
mov
pop
nop
xor
sbb
sub
into
mov
rolb
insb
mov
sahf
fwait
jno
jae
mov
add
jne
jno
cmpsl
jg
outsl
roll
es
add
leave
adc
inc
rcr
cmp
rorl
sub
lea
adc
pop
sub
cwtl
add
push
idivb
fistpl
sub
or
jle
insl
push
and
pop
sub
addl
mov
mov
push
nop
into
subl
sahf
adc
cmpsl
inc
fisubrl
insb
mov
xor
cmp
pop
or
ficoms
les
arpl
idivb
inc
in
popf
dec
pop
cld
jno
or
loope
cli
int
xor
jae
dec
or
or
inc
pop
jg
out
inc
cmpsl
mov
adc
add
mov
xchg
and
push
add
xor
xchg
jb
ret
andl
pop
data16
loope
iret
add
mov
jge
popf
sbb
mov
lods
or
sbb
sub
in
mov
jl
clc
push
fistpll
mov
jle
mov
sbb
adc
pusha
add
lods
or
xchg
and
jge
xchg
xor
gs
ss
sub
pop
icebp
adc
xlat
push
popf
inc
jmp
in
popa
sub
cmp
test
in
inc
aad
cmpsl
mov
mov
inc
cs
movsl
mov
movsb
add
outsl
add
jae
jle
jbe
bound
or
fcmovnb
test
jmp
inc
aam
jne
mov
cmp
or
in
cmpsb
lods
loopne
cmpsb
push
aad
sub
xlat
mov
repz
sbb
sti
hlt
lahf
cmp
cmpl
xlat
cmc
decl
inc
shl
into
dec
les
loop
xchg
cmc
xor
pop
arpl
mov
jmp
imul
push
test
nop
adc
and
jmp
and
loopne
mov
addr16
push
cmc
fsubl
add
nop
cmp
mov
push
frstpm(287
cmp
enter
pop
fmul
pop
lcall
inc
and
in
fdivl
popa
aam
dec
mov
and
out
mov
pop
cmp
test
mov
xchg
mov
pop
lds
push
loopw
mov
xor
rcrl
je
inc
cltd
lret
aad
mov
sarb
lods
scas
fdivrl
out
pop
cltd
sbb
push
cmpsl
or
and
cli
stos
xchg
je
jo
cmc
fcompl
hlt
pop
or
addr16
shlb
scas
mov
test
sbb
and
push
repz
or
aam
lret
mov
jge
movsb
mov
add
imul
mov
cmp
mov
sub
scas
dec
lahf
mov
std
shll
mov
sub
push
enter
test
xchg
jno
inc
mov
clc
sub
aad
into
xchg
adc
fs
xlat
and
mov
pop
xlat
xchg
les
or
inc
push
daa
lret
cmp
testl
mov
cmp
shlb
jp
or
lea
lahf
imul
push
mov
jge
movsb
adc
jnp
inc
xchg
dec
xor
mov
in
xor
mulb
sbb
jmp
jbe
ret
sub
das
and
push
add
mov
das
xchg
sub
jne
ret
pop
sbb
andb
mov
fimuls
fscale
je
xchg
xor
sub
fsubr
mov
mov
jbe
mov
int3
mov
cmp
mov
jp
jl
xor
push
stos
jne
pop
mov
or
sub
sbb
jp
jb
test
jnp
inc
inc
push
xchg
mov
mov
xorb
jecxz
mov
add
mov
out
or
sub
sub
or
xor
ret
add
aad
xchg
je
sub
inc
or
mov
inc
and
je
push
div
add
fs
aad
dec
sub
mov
repnz
enter
or
sbbl
js
xor
bound
mov
lds
sarb
enter
mov
mov
scas
jbe
insl
les
test
stos
out
aam
test
std
sub
mov
fdivl
pop
xchg
xchg
dec
fs
stos
fldcw
test
adc
pop
dec
nop
mov
inc
rcrb
cmp
sub
xchg
push
stc
pop
out
jp
ja
loope
inc
sbb
jae
push
inc
hlt
jle
inc
mov
mov
cltd
push
aam
sbb
stos
out
pop
jne
popf
test
dec
inc
outsb
fsubr
adc
dec
nop
test
and
jno
lods
push
lahf
mov
lret
pop
add
add
xor
mov
leave
clc
dec
add
mov
movsb
add
lcall
lret
add
jl
mov
cmp
pop
outsl
lock
or
fldcw
das
add
mov
int3
mov
cmpsl
lock
push
fbld
mov
sub
call
fcmovnu
shrl
adc
cmp
arpl
int
mov
or
add
call
or
push
in
stc
dec
sub
adc
sbb
movzbl
lcallw
and
cmp
lock
pop
in
in
mov
shrl
sbb
out
cmc
icebp
sbb
mov
rcr
out
xchg
dec
fists
mull
cmp
jae
add
into
adc
cmpsl
jle
imul
jmp
es
test
repnz
mov
out
dec
fisttpl
popf
ljmp
push
cmp
adc
insl
out
dec
loopne
inc
and
jl
xor
inc
sbb
mov
add
cmp
mov
push
jp
leave
xchg
add
imul
ljmp
cmp
mov
dec
imul
mov
push
bound
push
popa
inc
into
sub
test
sbb
andl
jge
icebp
inc
xlat
or
ficompl
cmpsl
dec
lock
sbb
insb
loope
fs
adc
ljmp
inc
pop
dec
mov
jae
add
xor
and
pop
pop
fisttpll
mov
xchg
sbb
arpl
cmp
mov
pushl
in
pop
mov
add
aad
push
push
testb
out
jmp
cmp
ret
dec
enter
pop
and
rcrl
bnd
aaa
ljmp
and
lock
jbe
clc
jae
aaa
ret
push
pop
dec
daa
sub
jbe
xchg
inc
enter
jb
mov
dec
push
add
mov
ret
adc
imul
das
mov
imul
fucomip
mov
xor
push
faddl
hlt
jb
add
xchg
mov
jbe
push
sub
xchg
jae
add
pop
inc
jmp
and
mov
cmp
rcrb
pop
xlat
shl
adc
xchg
jl
xlat
xorl
outsl
pop
and
xor
loopne
cmpsl
setne
pushf
or
sbbb
incb
sub
repnz
cltd
mov
xchg
shll
and
mov
orb
xor
movsl
sbb
repnz
jae
bound
xchg
mov
mov
mov
aam
mov
loop
adc
es
fs
jge
add
les
lods
sub
testl
es
loope
xor
mov
fwait
xor
daa
roll
add
mov
call
push
das
mov
in
adc
lahf
fmuls
mov
fs
loopne
dec
bound
outsl
ljmp
stc
dec
in
pushf
xor
adcl
lret
push
add
pushf
inc
shr
mov
imul
fisubrl
push
adc
inc
mov
repnz
jnp
push
scas
pop
sub
data16
nop
push
int
pop
and
cmp
sahf
sarb
lock
sbb
mov
sbb
adc
aam
data16
xchg
xchg
outsb
into
xlat
gs
jno
sbb
or
cmp
jnp
mov
adc
rcrb
xlat
fdivrl
cmp
repnz
fildl
push
outsl
aaa
fld
lds
jno
sub
adc
add
lods
fwait
ljmp
inc
aam
mov
push
add
cmpsl
jmp
rcrb
sub
rcrl
cmpl
dec
dec
mov
testb
ss
ljmp
aas
xor
es
iret
xchg
cmp
and
jo
jmp
jns
pop
cmp
mov
or
imul
add
cld
in
scas
in
adc
jne
test
or
inc
das
xchg
insb
rcll
cmp
push
flds
mov
mov
mul
aas
dec
mov
xchg
xchg
xor
inc
aad
pop
mov
scas
push
xchg
jbe
sbb
lea
cld
mov
xor
xor
mov
roll
sub
into
inc
mov
or
outsb
xchg
les
xor
jb
popf
mov
mov
fistpll
push
pop
jecxz
repnz
fdivrp
dec
into
ljmp
je
loope
cmpsl
sahf
mov
mov
and
cmp
xor
and
aas
testl
dec
sarb
insl
dec
cmp
popa
cli
sub
std
or
xchg
daa
js
lea
adc
cmp
fs
mov
sub
pushf
notb
dec
xchg
insl
cmc
xor
pushl
pop
out
mov
lods
test
shrb
sar
addl
push
mov
and
xor
xor
aas
mov
mov
cltd
imulb
stos
xchg
data16
add
enter
popf
ret
and
idivb
scas
mov
dec
adc
or
scas
negl
mov
mov
imul
or
mov
xor
pushf
adc
add
xchg
fcomip
fmuls
jno
and
ss
cmpb
popa
nop
mov
sub
xlat
xchg
sub
cmp
out
add
out
jne
std
repnz
inc
xor
mov
add
jb
arpl
sbb
jae
inc
adc
movsl
cmp
add
cmc
pop
jecxz
pop
cmp
sti
pop
jb
gs
dec
in
testl
enter
or
out
push
test
and
and
and
sbb
jg
or
aas
pop
int
sub
cmp
mov
cmpl
bound
mov
lret
xor
in
xor
lea
add
bound
cli
lock
out
jl
adc
arpl
roll
lods
push
mov
int
jae
jg
mov
jae
mov
inc
pop
jmp
nop
xchg
in
or
stos
aam
cmp
pop
imul
sub
test
cmpb
add
push
ss
dec
incl
mov
movl
dec
data16
dec
imulb
fistpll
mov
ret
sub
mov
dec
cli
push
add
rclb
leave
js
push
test
mov
jo
jl
or
xchg
cli
or
or
jno
inc
push
cld
jno
mov
xlat
dec
add
loopne
sahf
push
inc
cmp
dec
cmp
or
mov
mov
insb
test
push
or
decb
pop
mov
mov
xor
add
push
adc
and
je
cmpsb
cmp
xlat
push
push
xor
data16
orl
andl
adc
fisttps
daa
stc
insl
or
sub
jnp
arpl
arpl
inc
mov
fmull
mov
pop
les
push
adc
jg
adc
cmpsb
stos
pop
das
lret
inc
in
add
xchg
hlt
movsb
sub
loopne
jb
pop
mov
loopne
xor
pushf
adcb
push
data16
xchg
inc
add
sub
mov
and
iret
jmp
dec
push
cmp
jp
or
sub
mov
xchg
clc
add
or
fmull
std
aam
lods
mov
dec
adc
mov
inc
cmp
push
insb
add
add
adc
rol
jns
fistps
and
jno
imul
and
movsb
mov
sbb
in
push
lods
inc
mov
insb
sbb
push
push
jp
movsl
mov
test
mov
insl
and
sahf
push
mov
out
or
popf
movsb
add
or
lock
shl
aas
iret
sbb
sbb
mov
cld
lea
gs
test
mov
push
jo
mov
sub
packsswb
pop
loopne
test
scas
mov
pop
cmc
sbb
enter
push
adc
mov
mov
sub
push
adc
xor
pop
loop
lds
inc
mov
push
sub
jns
std
shll
jl
frndint
lds
data16
decb
dec
insl
loop
out
in
fimull
gs
fcmovb
stc
adc
repz
jns
lea
push
jle
pop
push
inc
xor
sbb
insl
pop
xchg
cmp
push
pop
push
mov
mov
hlt
push
into
xor
dec
push
add
push
mov
mov
testb
inc
sti
es
jecxz
std
xor
icebp
hlt
or
jmp
mov
cmp
je
add
push
add
push
addb
iret
and
sbb
adc
inc
ret
mov
cmc
jg
xor
loope
aas
pop
les
repnz
jmp
cmc
lods
arpl
imul
xor
hlt
xchg
jmp
xchg
sahf
add
mov
jecxz
cltd
repnz
mov
or
adc
mov
jp
xchg
push
mov
aas
movsb
insb
adc
cmpb
fmuls
rclb
lret
dec
push
xchg
dec
outsb
cld
sbb
xlat
test
inc
jnp
scas
jae
pushf
outsb
lock
insl
cwtl
nop
leave
dec
and
push
shlb
sbb
push
es
imul
adc
push
and
in
mov
stos
mov
inc
out
ljmp
pop
inc
sub
xlat
or
rcll
iret
and
insl
add
and
dec
add
popf
adc
dec
or
fadds
imul
jbe
and
jge
mov
cmpsl
push
jg
or
ret
mov
push
sahf
mov
xchg
ja
arpl
imul
xor
cltd
jns
mov
mov
je
lahf
outsb
adc
mov
lock
mov
int3
mov
mov
jnp
cmpsb
cmp
inc
jno
and
and
jmp
jbe
gs
lret
jno
std
xlat
lock
outsb
cmp
lock
lret
jne
mov
push
stos
cmp
lds
xchg
lea
js
loope
aaa
push
push
mov
ret
in
add
fsubr
cltd
mov
insb
clc
jl
and
cmp
cmc
aad
cmp
xor
mov
add
addr16
aad
sub
loope
or
jmp
jns
mov
cmpl
mov
jno
insl
adc
mov
jno
adc
adc
inc
decb
add
inc
sahf
push
pop
imul
roll
sub
in
add
jmp
int3
dec
xchg
cmp
ds
fsincos
jae
adc
cmpsb
mov
mov
jae
sub
add
xchg
xchg
dec
push
push
jecxz
pop
dec
dec
jle
mov
scas
pop
lods
pusha
push
inc
or
pusha
mov
sbb
mov
inc
lods
mov
insb
cli
fisubl
out
dec
fs
push
jmp
or
mov
mov
and
pop
rorb
jmp
or
movsb
or
ja
cmpsb
fnstsw
je
xor
push
cltd
xchg
cli
in
stos
clc
imul
inc
inc
out
rcrl
jbe
rcll
mov
xchg
sbb
lahf
ret
mov
incl
inc
add
ljmp
xchg
imul
sub
shr
add
adc
out
and
push
cwtl
or
push
or
fstpl
fs
xor
dec
lea
enter
rcrl
or
rolb
repz
cmpsb
xchg
aad
push
mov
out
mov
js
stos
push
jecxz
popf
loopne
rcrb
testb
add
and
or
cli
xor
stos
popa
les
jnp
sbb
ficoms
pop
aaa
loop
inc
jmp
stos
mov
or
fiadds
lcall
fdivs
jno
or
xor
fsubr
mov
sbb
lods
repz
das
pop
or
sbbl
mov
mov
push
lods
xchg
mov
popf
jae
xchg
repz
aam
cmp
nop
ret
sub
js
lret
or
cmp
frstor
insb
jbe
dec
mov
test
push
fwait
pop
int
out
gs
push
ret
fcmovu
adc
sbb
int
das
stos
sub
mov
jae
into
dec
ret
jns
sub
gs
sbb
dec
punpckhdq
pop
push
rolb
stos
inc
push
lock
push
fldl
push
pushf
inc
xor
or
adc
lock
repnz
das
push
jg
mov
inc
dec
add
inc
rcrb
jmp
repnz
int3
hlt
mov
push
pop
cld
dec
enter
xor
in
fcoml
fwait
fwait
jo
ret
mov
filds
push
shlb
xorb
scas
adc
push
iret
fisubrs
xchg
cmpsb
leave
call
adc
aad
aas
inc
xchg
sub
cmp
mov
mov
mov
sbb
mov
push
in
jo
aas
lds
arpl
pusha
shlb
inc
jbe
out
mov
loope
jmp
scas
cwtl
xor
jnp
push
insb
add
xchg
mov
pop
sbb
mov
aas
cmp
daa
aam
aad
ss
es
inc
loope
das
stos
mov
loopne
lods
jge
adc
fnstenv
adc
sahf
jg
pop
aam
sbb
adc
xlat
insb
les
mov
mov
sub
loopne
aas
sbb
sbb
jno
pop
push
lcall
jl
lret
or
xchg
cmpb
jae
out
outsb
stc
push
mov
or
jmp
jg
or
lock
inc
sub
dec
popa
sbb
cmp
sbb
fldenv
or
rcll
out
pop
push
jns
inc
or
std
outsl
sub
ljmp
in
pop
xor
jmp
mov
test
inc
sbb
cmpsb
adc
mov
insb
pop
dec
xchg
nop
imul
cs
jb
jno
push
cmp
aas
add
fisttpl
cmp
je
adc
inc
add
repnz
push
sbb
xchg
iret
adc
gs
lods
inc
lret
in
or
shll
mov
addr16
or
fildl
mov
push
call
lahf
cmp
lea
mov
sub
and
jne
add
xlat
ljmp
dec
sub
dec
xor
mov
inc
notl
lret
mov
iret
loopne
arpl
mov
push
mov
xor
sbb
leave
es
jae
sbb
or
lods
inc
and
dec
push
inc
leave
xchg
inc
jl
cli
jnp
inc
lea
add
dec
cmpb
fsubl
fwait
push
add
ljmp
loopne
mov
in
movsl
pop
xchg
aam
cmp
xchg
scas
call
sarl
inc
sbb
push
push
add
sub
fidivrs
dec
pop
mov
rol
fbld
sbb
mov
pop
test
cld
pop
mov
and
es
mov
mov
sahf
lcall
arpl
sbb
std
clc
adc
loope
mov
push
or
cmc
sub
cli
shll
inc
push
jb
fiadds
xor
push
iret
call
mov
lret
push
outsl
and
cmp
rcll
inc
fninit
lahf
cmp
sub
or
mov
sahf
out
daa
fdiv
idiv
pop
xor
xchg
out
mul
xchg
aaa
mov
sub
xchg
popa
mov
popf
ja
std
xchg
inc
hlt
repz
in
cmp
rcrl
enter
jb,pt
loop
jmp
jl
movb
mov
in
adc
daa
cmp
push
and
xchg
mov
fidivl
stos
pop
rcrl
jbe
out
cmp
addr16
cld
xor
sbb
fildl
ljmp
xlat
orl
sbb
inc
sbb
pop
push
dec
push
mov
sub
imul
sbb
ret
mov
in
in
repnz
push
insl
orb
pop
adc
or
cli
mov
mov
and
cld
popa
mov
pop
push
das
fsubrp
pop
lds
std
xchg
or
roll
adcl
xor
out
xor
mov
daa
out
call
mov
adc
jl
stos
sbbl
movsb
aam
or
sbb
adc
ror
cmc
lret
mov
sub
push
in
rcll
jl
and
daa
out
cmp
movsl
pushf
loope
jne
mov
loopne
jne
cmp
addr16
fisttpl
mov
je
pop
divl
sti
sahf
cmc
aam
ja
scas
sbb
mov
cmp
into
inc
stc
rcrb
push
cmc
ret
testl
stos
dec
inc
jp
jns
pop
stos
push
adc
pop
loopne
fldt
push
and
mov
sarb
xchg
iret
rorl
xchg
sarb
negl
in
repz
stos
insb
scas
jmp
test
insl
sbb
mov
rcrb
mov
push
cmp
rol
push
push
dec
stos
sbb
inc
stos
push
jecxz
sub
xchg
imul
aad
fisubrs
addb
pop
gs
lods
arpl
out
mov
mov
fimuls
mov
outsl
mov
movsl
out
xlat
loop
insl
fsubrp
movsl
outsb
xorb
sbb
movsl
ret
inc
jl
jp
push
cmp
xor
daa
add
inc
pop
fidivrs
arpl
popf
mov
mov
mov
adc
mov
ds
jnp
mov
pop
mov
in
cs
xor
shrl
sbb
push
stos
xor
call
add
adc
in
cld
or
add
and
inc
clc
dec
jo
xchg
mov
sbb
arpl
repz
pop
push
ret
aaa
jae
ss
in
or
ss
cmp
pop
adc
rcr
jns
lods
in
pop
xor
aas
cli
push
lret
mov
lock
ja
dec
jg
mov
mov
pop
aas
ffreep
sbb
xor
mov
pop
lds
jp
sbb
in
mov
push
out
xchg
adc
mov
inc
adcl
push
lahf
adc
mov
pop
cltd
add
je
inc
fcoms
sbb
int3
jo
sub
cmp
sub
stos
rolb
out
sbb
jle
adc
adc
imul
movsl
inc
xor
inc
sub
loopne
xchg
pushf
shll
xchg
xchg
loope
add
cli
cmp
pop
or
stos
ljmp
ret
dec
loopne
sub
jmp
insl
idivl
ja
shl
xchg
fnstenv
cli
fistpll
or
movsl
and
xchg
sub
jmp
in
nop
lret
xor
lret
pop
mov
dec
nop
mov
testb
inc
xor
bound
and
pusha
cltd
mov
aad
push
sbb
and
sahf
push
lret
sbb
out
dec
outsb
add
or
sbb
sbb
xchg
fldt
xchg
testl
int
jecxz
inc
imulb
aaa
out
decl
mov
inc
jno
mov
popa
mov
cmpsb
jo
ret
inc
out
aam
outsb
add
enter
xchg
lock
adc
inc
and
cmpsb
call
mov
jnp
xor
aam
idivl
push
shrb
inc
icebp
sub
sub
adc
jecxz
pusha
je
ja
jae
xlat
mov
test
xor
adc
mov
jbe
xor
sub
repz
repz
addr16
sub
and
push
rcrb
cmp
mov
ds
jecxz
daa
push
pop
loop
out
fwait
add
sbb
or
xchg
xlat
mov
pop
or
into
aad
setbe
or
fstps
and
sub
fmuls
pop
xchg
mov
add
push
pusha
pushl
add
jb
sub
xchg
test
mov
xor
dec
movsl
call
sbbl
ljmpw
push
and
dec
cltd
mov
xlat
mov
stc
stc
xorl
or
aaa
test
pop
push
movsb
mov
mov
in
mov
push
leave
push
dec
mov
mov
jbe
push
jnp
fmuls
enter
xchg
mov
add
and
cmc
xchg
cmp
in
fcoml
ror
je
cmpsb
adc
mov
rolb
mov
shlb
ja
xchg
stos
stos
gs
stos
dec
les
movsl
sub
pushf
out
jb
fcmovnu
mov
push
in
dec
mov
jg
inc
add
int
jle
test
xor
popa
testl
in
mov
mov
jle
inc
arpl
inc
loop
jge
pop
sysret
mov
cs
xchg
ret
repnz
jb
ja
push
jg
sbb
and
jge
imul
push
mov
imul
add
test
fnstsw
int
push
add
das
stos
xor
xchg
das
add
push
dec
test
xor
xchg
cmp
xor
dec
lahf
or
cmc
stc
sub
mov
adc
loope
inc
mov
gs
call
xchg
or
ftst
mov
jmp
push
stc
hlt
fistpl
cld
or
mov
rolb
jo
pop
lahf
or
adcl
pop
push
repz
ficompl
cmp
je
xlat
outsl
cwtl
sbb
sub
xchg
xchg
cmp
ficomps
jno
pop
mov
jbe
add
mov
rcrl
mov
popf
sbb
mov
push
adc
push
jmp
jecxz
cmpsl
clc
push
lret
or
fwait
iret
mov
adc
cmp
inc
push
aam
mov
jl
into
ja
and
pop
mov
cmp
hlt
adc
xchg
inc
leave
push
mov
ss
je
add
sbb
jnp
or
add
jle
jge
inc
and
cltd
pop
inc
sub
aas
xchg
sub
in
mov
jl
pop
in
pop
mov
mov
arpl
jg
lret
es
mov
loop
sbb
push
andb
outsl
xlat
jp
cmc
enter
imul
pop
jo
adc
push
mov
loopne
or
xchg
daa
dec
jmp
cltd
loopne
cwtl
and
loop
rorb
jbe
jge
push
ret
sbb
cld
pusha
mov
and
mov
repz
push
rcl
loopne
repz
clc
jbe,pt
ret
mov
mov
dec
add
out
sbb
mov
and
inc
fidivl
pop
push
fcmovbe
or
push
mov
xchg
lret
pop
xor
rolb
popa
mov
cmp
mov
test
mov
sbb
fadd
xor
pop
jno
arpl
repz
pop
push
lret
lret
mov
mov
aam
push
fst
push
mov
icebp
cmp
daa
inc
repnz
xor
mov
push
pop
loope
mov
scas
insb
mov
out
mov
mov
sbb
lods
jns
push
popa
adc
mov
rolb
inc
or
push
xor
leave
sub
push
mov
jp
pop
movsl
inc
rorb
sbb
jne
js
fnstsw
repnz
adc
inc
sysexit
jecxz
repnz
xor
das
jg
inc
in
mov
xchg
in
jg
ljmp
inc
inc
mov
ljmp
lahf
ds
mov
pushf
pop
dec
xchg
jmp
xchg
xchg
outsl
lds
ret
push
mov
int
repnz
pop
adc
int
or
cltd
push
sbb
sub
and
and
inc
int
scas
mov
add
stos
push
pusha
add
cmpsl
scas
pop
outsb
push
mov
in
cmc
or
jle
inc
adc
repnz
into
sub
ss
mov
fidivrs
andl
outsl
sahf
imul
repz
in
fst
cmp
cmpsl
aaa
aaa
mov
insb
mov
adc
ficoml
xchg
jns
lds
div
jo
dec
jns
sbb
xor
popa
add
mov
xchg
inc
in
in
in
push
sbb
montmul
cmpsb
ret
movsb
mov
mov
and
scas
stos
mov
lahf
fsubp
mov
mov
or
ja
fildl
jo
jb
push
inc
in
es
out
fsubrl
jne
test
xor
jns
and
and
jecxz
push
fisubrl
addr16
test
cwtl
aas
mov
pop
push
xchg
lahf
xchg
mov
scas
stos
arpl
iret
and
aad
jl
jae
jecxz
ret
cmp
adc
adc
imul
int
out
jae
or
lods
dec
inc
aam
into
mull
sbb
sbb
sahf
pop
push
mov
cmp
cmp
push
xchg
mov
lock
sbb
fs
mov
push
in
sub
sbb
jge
es
icebp
mov
push
cmp
cmc
imul
insl
lret
jmp
pop
stos
mov
push
inc
pop
add
lcall
icebp
mov
popf
inc
dec
dec
mov
stos
push
aam
ret
movsb
cmc
cmp
loope
push
pop
outsl
cmp
xchg
lds
push
outsl
mov
lahf
and
jne
pop
test
enter
inc
loop
push
js
popf
and
sub
push
fucomp
xchg
push
insw
adc
or
jbe
sbb
repnz
pop
fsubl
xchg
shlb
les
insl
mov
aam
mov
sarl
dec
xchg
ja
and
sub
mov
cmp
rol
mov
and
push
pop
arpl
add
daa
outsl
mov
fidivrs
movl
popa
push
test
call
xchg
int3
add
loope
psubusb
iret
push
mov
sub
roll
daa
into
pop
sti
sub
lcall
ss
pop
mov
cmp
jbe
int
das
sbb
aad
xor
loope
sbb
fildll
fisubrl
xchg
add
and
cmp
cmp
scas
outsl
inc
xor
insl
lock
dec
push
ds
xchg
js
sbb
scas
jmp
mov
dec
outsl
jae
clc
pushf
or
or
test
push
mov
jb
mov
sub
and
add
fwait
stos
sti
mov
adc
add
call
pop
mov
pusha
sub
adc
faddl
push
stos
sbb
jge
out
addb
in
test
iret
out
and
addr16
mov
and
jge
mov
add
adc
sti
fisubrs
jb
pusha
int3
popa
lret
xor
sub
arpl
out
add
pop
adc
xchg
jns
in
push
xor
aaa
sarb
test
mul
popf
dec
fadds
mov
adc
sbbl
jecxz
pop
out
mov
cld
imul
ds
inc
push
lods
cltd
inc
imul
jp
outsb
xchg
push
jl
pop
sub
cmc
outsl
in
dec
fldcw
and
movsb
cmpb
jge
in
das
jle
out
enter
stos
aas
xchg
jo
add
cmp
lret
mov
push
jnp
loope
mov
lea
push
jp
mov
scas
rcll
pop
out
into
ficomps
and
aad
fldl
mov
jmp
cmp
cmp
xor
xchg
xchg
lahf
ret
int
fsub
and
outsl
adc
xor
push
icebp
nopl
push
xchg
insl
jmp
rcl
lret
lock
psllq
dec
mov
add
fwait
mov
lods
dec
lds
pushf
ss
push
push
stc
test
xor
push
imul
mov
inc
outsb
fisubrl
adc
lds
jo
inc
pop
adcl
fidivl
push
jmp
dec
lret
dec
adc
mov
mov
push
pop
sarb
and
pop
test
mov
mov
sub
mov
sarb
scas
push
addr16
into
or
aaa
jno
incl
mov
mov
mov
adcb
cmpsl
cld
ret
daa
daa
cmp
jmp
loop
push
adc
jge
push
push
or
pushf
sbb
insl
push
jno
jns
mov
xchg
push
stc
xchg
mov
ret
mov
jg
add
or
inc
dec
mov
mov
push
loop
cmpsl
dec
aam
xor
movsb
adc
xchg
or
cmp
or
push
fldenv
outsb
sub
lret
clc
pushf
inc
arpl
jne
cmpsl
sti
and
mov
xor
or
enter
in
enter
pop
adc
mov
dec
daa
aam
dec
leave
leave
lock
mull
add
imul
mov
jecxz
or
popa
push
mov
fwait
jno
into
popf
lods
cwtl
int
lods
push
notl
xchg
xchg
imulb
jns
int3
pusha
bnd
inc
pop
fcoml
pusha
add
xchg
add
jno
cmp
or
outsb
out
sub
clc
mov
sub
movsb
cmp
rclb
xor
in
push
xor
inc
cmp
movsl
cmp
jmp
mov
sbb
xchg
push
mov
jo
add
sub
sub
hlt
push
xorb
lea
pop
sub
xor
cmpsb
mov
jnp
std
add
je
sbb
hlt
push
pop
push
sbb
mov
mov
inc
sub
dec
ret
aad
dec
mov
adc
cmpsl
fbld
or
test
and
hlt
lods
and
pop
push
ss
in
jae
push
rorb
xchg
clc
adc
repnz
push
sbb
or
imul
dec
loope
dec
repz
shl
push
imul
out
aaa
pop
shl
jae
cmp
int
mov
pop
adc
jns
stc
sahf
test
scas
inc
nop
and
fwait
xchg
adc
fisubs
punpckldq
push
mov
btc
or
sti
pop
sbb
fcmovbe
insl
mov
xchg
lret
scas
push
in
leave
inc
add
xchg
stos
xchg
loopne
mov
jb
divb
aas
fistpl
divb
repnz
pushf
aam
mov
dec
xchg
mov
mov
push
mov
lcall
vucomisd
mov
fcoml
cmpsb
movsb
push
sbb
sbbl
loopne
add
jns
xchg
sbb
call
fmull
into
arpl
inc
sub
scas
xchg
pop
mov
imul
dec
add
inc
xor
dec
pop
jb
js
cmpsb
xorl
sbb
test
pop
cmc
xchg
int3
adcl
xlat
imul
dec
pop
cmp
out
and
outsl
dec
adc
adc
jmp
add
sub
or
stc
pop
jb
xor
fisttpl
mov
cmpsl
cmp
jle
sbb
repnz
punpckhwd
and
pusha
mov
cmp
dec
jb
mov
imul
cmpsl
jmp
pop
mov
test
mov
bound
sbb
jmp
mov
fs
out
sahf
mov
mov
lds
cmp
xor
out
int3
adc
outsl
in
and
xchg
sti
sarb
xchg
out
sbb
xchg
clc
stos
scas
cwtl
addl
mov
lahf
sub
scas
jno
imul
sbb
push
out
push
xchg
ja
cmpsb
aaa
adc
or
or
outsb
pop
loopne
das
push
mov
sbb
sahf
push
add
xlat
pop
pop
add
pop
mov
jecxz
adc
insl
mov
loop
ffreep
sbb
test
jns
or
imul
lahf
add
sbb
dec
pop
mov
cli
lds
lods
pop
cmp
adc
sbb
xor
mov
out
popa
es
loop
pusha
lret
jge
loop
add
jecxz
inc
andl
pop
xchg
ret
pop
mov
rorl
inc
push
dec
sbb
sbb
xchg
jo
push
fdivl
jo
mov
mov
adc
popa
sti
xchg
std
mov
push
idivb
mov
stos
lock
or
sub
loopne
rorl
inc
xchg
ss
inc
aam
dec
and
data16
les
xchg
sbb
adc
xchg
lret
mov
inc
mov
dec
and
cmc
rorl
out
sbbl
outsb
scas
negl
enter
scas
xchg
mul
xor
jmp
xchg
or
pop
mov
fmuls
sub
mov
xchg
cmp
pushl
test
push
xchg
cld
adc
dec
std
mov
cmp
enter
add
dec
sarb
xor
mov
mov
arpl
pop
in
rolb
jns
test
xchg
adc
or
cmc
sbb
cmp
fmuls
js
lret
sbb
lret
adc
aaa
sbb
xchg
mov
mov
cmpsl
pop
enter
sub
stos
inc
lods
subb
adc
mov
fidivrl
ret
addr16
lahf
repnz
jmp
int
push
je
lret
push
cld
mov
push
fwait
xor
es
fadds
xchg
xlat
sbb
lcall
mov
dec
adc
popf
maxps
leave
sahf
mov
pop
adc
dec
adc
into
mov
sbb
push
cmp
pop
mov
cli
adc
loope
push
inc
loop
inc
xchg
ljmp
xchg
shl
es
movsb
mov
insl
jp
iret
jbe
outsb
xchg
xchg
out
xor
add
outsb
xor
inc
cmpsb
dec
shlb
fildll
jmp
or
ss
xlat
imul
sahf
mov
mov
cmp
cwtl
xor
xchg
mov
sub
mov
push
or
mov
mov
jb
mov
jp
adc
pop
out
jecxz
ret
push
mov
sbb
call
cwtl
push
outsb
dec
scas
test
xor
insl
pusha
dec
je
jb
cmp
jae
icebp
pushf
ja
clc
js
dec
mov
push
imulb
fucomi
sbb
cmp
xor
push
rolb
lcall
scas
aad
fbld
fs
cmc
shll
and
pop
lcall
ror
mov
out
stc
cmpsb
ljmp
out
inc
aad
iret
lods
gs
iret
add
icebp
test
jb
fbld
jnp
sbbb
fnstsw
push
int3
shlb
jge
mov
pop
sarb
movsl
into
inc
cltd
xchg
dec
mov
loopne
sub
rorb
cmc
push
xor
sub
andl
or
cmp
das
adc
cs
mov
jp
mov
xor
ret
into
in
rcrl
idivl
dec
insl
pushf
sbb
ss
jge
mov
or
hlt
dec
mov
or
fcmovnb
cmp
gs
dec
lahf
cmpsb
inc
push
subl
push
mov
gs
add
mov
cmp
cmp
mov
jmp
mull
call
addr16
lahf
imul
test
subl
sbb
pop
lods
pop
xchg
stos
sbb
popf
mov
fs
arpl
mov
pop
mov
xchg
aad
and
or
pop
pop
push
jbe
idivl
sub
aad
pop
pop
decl
mov
shlb
lret
in
fwait
lea
fldl2t
cmpl
cli
pop
cwtl
cmp
roll
clc
pusha
sbb
in
jp
rcrb
test
mov
ret
lods
pop
and
sub
daa
pop
das
sub
adc
add
psubw
add
lret
pop
aam
xchg
and
jge
aam
cld
and
sub
lods
mov
js
push
nop
lahf
xchg
push
pusha
mov
jp
movsb
push
mov
jge
pop
std
loop
call
sbb
arpl
sub
sbb
enter
mov
arpl
flds
jbe
pop
jle
sbb
out
cmovle
jno
out
mov
test
stos
push
int3
icebp
movsl
test
mov
xor
push
movsb
imul
orb
adc
add
mull
xchg
inc
or
cmp
dec
in
loope
pop
jno
xchg
scas
data16
cwtl
imul
mov
xorb
jle
lds
imul
call
cmp
jp
mov
mov
jb
cmp
xlat
imul
xor
push
push
mov
cmp
in
sbb
mov
scas
test
adc
jmp
cmpb
dec
ljmp
mov
cld
das
dec
dec
lret
xchg
add
das
inc
dec
adc
jno
cld
out
xor
addr16
xchg
adc
aad
mov
or
movsl
imul
sub
mov
cmp
fdivrs
mov
lret
js
movsb
sbb
and
push
pop
dec
mov
xchg
idivb
imul
sbb
pusha
xor
jnp
test
inc
roll
ficomps
add
stos
fsubrs
outsl
stos
mov
xchg
out
jns
mov
orb
test
fiadds
pop
push
add
sbb
bound
cs
ljmp
test
mov
lods
cmc
lea
xor
mov
inc
outsl
pop
add
jecxz
or
xor
ret
sub
and
xchg
dec
enter
dec
jo
aad
enter
xor
xchg
lret
cmpsb
mov
adc
daa
mov
mov
int
sub
stc
xchg
cli
sahf
hlt
jg
or
or
push
ret
add
sub
xor
push
sti
adc
adcl
cmpsb
stc
shrl
gs
adc
jns
mov
std
ljmp
mov
movb
out
and
movsb
jne
xlat
xor
xor
mov
lds
xchg
gs
test
pop
jl
mov
cmpsb
stc
xchg
aam
sub
xor
inc
jnp
pop
movsl
es
jne
sbb
movb
fisttpl
xor
in
and
repnz
fmull
lods
orl
adc
mov
add
cmp
dec
addr16
push
dec
xor
es
inc
fsubl
cwtl
inc
cmp
jl
sub
mov
adc
mov
ret
lahf
out
jmp
inc
dec
push
daa
dec
xlat
mov
ss
je
fwait
or
push
jg
sarb
dec
inc
or
insl
mov
adc
cltd
outsb
pop
dec
mov
pop
sbb
xchg
push
or
mov
lahf
sahf
dec
push
inc
sub
cld
sbb
mov
popa
lods
dec
xchg
stc
in
bound
jg
mov
cmp
insb
xchg
pop
ds
inc
push
xlat
shl
inc
ret
sub
in
adc
pop
lcall
pop
rcr
clc
adc
test
cmpsl
jb
sbb
shrl
rorb
sbb
add
inc
lods
hlt
addr16
xchg
xor
enter
imul
and
jmp
mov
adc
sti
popa
cwtl
aas
test
int3
mov
lcall
lret
mov
inc
inc
mov
hlt
xchg
std
and
push
push
jnp
lahf
ja
out
fwait
pop
aaa
mov
js
fdivl
scas
cmp
cmpsl
dec
sbb
addr16
cli
and
fcoml
mov
in
out
jecxz
adc
enter
adc
cs
xchg
mov
inc
mov
cmpsb
lret
in
mov
ljmp
lret
and
popa
mov
fucomp
notb
in
push
xchg
cmpsb
je
mov
testb
cwtl
xor
aaa
cmp
mov
je
mov
ja
adc
sub
stc
dec
je
sub
rcrl
adc
mov
push
sarl
pop
dec
sti
mov
call
xchg
lret
add
lock
add
sub
adc
and
iret
jg
jge
and
cmp
leave
in
lret
cmpsl
push
add
lods
push
scas
mov
subps
out
inc
outsb
lret
mov
bound
pop
pop
lds
in
or
cmpsl
push
adc
es
imul
dec
or
enter
sahf
lcall
and
movsb
test
mov
mov
pop
xor
jle
ja
mov
into
cmp
inc
fisubs
cmpb
cli
in
fisttps
pop
mov
aas
pop
sbbb
std
cmpsb
or
daa
sub
nop
mov
pop
iret
enter
in
inc
inc
mov
mov
pop
mov
pop
mov
or
mov
sahf
pop
dec
jge
arpl
jns
ret
ret
rorb
iret
fnstcw
xchg
xor
ljmp
roll
test
push
xchg
popa
push
push
inc
std
mov
test
sbb
or
xor
dec
sbb
inc
lret
lods
divb
push
ljmp
clc
scas
fs
push
jae
repnz
xor
xchg
icebp
mov
mov
sbb
adc
cli
mov
jb
sbbl
movsl
xchg
shrl
jne
jp,pn
cwtl
repnz
repz
es
insb
lret
mov
pop
xor
xor
pop
xchg
cwtl
sub
xor
dec
or
sub
push
push
adc
subb
or
push
push
fbstp
or
sub
inc
push
xor
lret
incl
add
jno
fcoml
push
sub
mov
insb
or
push
sub
jge
rorl
lods
jo
es
bound
push
adc
mov
sbb
shr
pushf
mov
add
pminub
out
push
mov
jecxz
leave
mov
or
push
stos
dec
mov
daa
icebp
pusha
adc
aaa
imul
test
inc
ds
cli
pop
adc
jno
and
into
jae
in
jno
enter
enter
or
mov
or
jo
dec
jmp
loop
rorb
cmp
mov
test
out
out
push
mov
jae
popa
inc
push
icebp
inc
lods
xor
xor
or
cmpsb
bound
addr16
push
sub
mov
sbb
fwait
sub
fxam
add
sbb
notl
popl
mov
inc
fistpl
test
cmc
gs
cld
loope
cmp
lods
sti
ret
jecxz
inc
and
xor
or
jne
repz
repnz
cmp
sbb
out
or
in
and
fisttps
aam
scas
sub
sbb
addr16
adc
jp
or
cwtl
fwait
and
mov
push
or
gs
rorl
add
cs
adc
xchg
jp
out
mov
in
sbb
add
stos
in
jmp
int
mov
pop
imul
xchg
out
ret
adc
scas
pop
push
mov
je
push
clc
adc
imul
dec
pop
rcl
int
cs
xchg
mov
add
dec
sbb
gs
jnp
les
mov
push
mov
je
add
sbb
push
pop
out
cmc
inc
inc
adc
mov
daa
and
test
and
je
pop
mov
sub
cmpb
jns
mov
js
pop
jne
mov
cmp
push
test
mov
jge
mov
dec
add
cmp
inc
dec
lods
xor
push
push
lahf
push
xchg
shll
ds
xor
imul
mov
mov
xor
jnp
or
fsubrp
fs
imul
jmp
mov
repz
push
sbb
aas
push
addr16
sub
mov
out
jns
insb
or
push
dec
jnp
xchg
push
pop
mov
jb
movsb
mov
push
movsl
outsb
xchg
sbb
jl
jg
mov
call
cmp
lea
outsb
mov
cs
mov
sbb
lret
cmp
pop
outsl
loop
movsl
adc
jno
shlb
xchg
mov
inc
mov
add
lea
jae
lods
repz
jb
adc
xor
or
jne
call
cwtl
dec
jge
pop
ljmp
shlb
mov
mov
push
stc
jle
push
add
xchg
push
aam
ljmp
ss
mov
cs
call
add
mov
add
xchg
aad
push
push
push
das
mov
int3
dec
cmc
push
sub
add
lds
lea
movsl
scas
xchg
push
mov
mov
jo
mov
xor
jmp
and
xchg
and
outsl
lcall
sti
jmp
or
jecxz
cwtl
imul
shrb
pop
repz
push
insl
add
xlat
aas
movsb
js
es
in
inc
cwtl
jge
outsl
xchg
test
not
gs
push
dec
push
add
roll
jmp
repz
jns
pop
ret
push
jnp
aaa
loopne
mov
sub
stc
dec
leave
ss
sbb
xchg
adc
adc
int3
movsb
mov
mov
adc
out
fldt
cmp
xchg
int
lea
hlt
push
stos
lods
pop
fimuls
dec
ror
mov
imull
vpsubb
popa
cmp
neg
in
test
push
xlat
ss
call
jl
js
jb
ds
roll
jp
decl
lock
cli
pushf
out
insb
ret
hlt
out
imul
loope
mov
leave
jbe
xchg
jge
insl
push
add
pop
mov
aam
inc
bnd
xchg
jae
xor
lods
push
cmpsb
cmp
pop
cld
mov
adc
test
sti
leave
or
mov
out
sbb
dec
lcall
pop
lods
stc
push
leave
lds
mov
push
add
and
xchg
fs
popf
ret
and
ljmp
xlat
mov
cli
or
and
out
scas
lods
cli
jne
sahf
inc
test
fwait
xchg
xchg
arpl
into
mov
cmpsb
jb
adc
mov
outsb
scas
notl
pop
push
ljmp
adc
pop
stos
out
stos
pusha
push
sbb
fst
insl
lds
sarb
mov
in
mov
loope
jnp
jl
andb
mov
in
or
mov
mov
add
shll
out
in
in
and
mov
adc
sti
lods
ja
adcb
push
cld
jl
lods
xchg
and
das
add
adc
jp
pushf
mov
addr16
gs
fistpl
data16
ljmp
xchg
pushl
sub
xchg
test
pop
stos
orb
adc
out
sbb
rcrb
and
stos
cmc
dec
mov
loopne
sbb
cmpsb
cmp
adc
insl
dec
pop
cs
lret
jmp
inc
sti
test
mov
xchg
xchg
in
or
daa
mov
in
xchg
cltd
nop
sub
fwait
sub
xlat
inc
loopne
pusha
cmp
cmpsb
rorl
outsl
rcl
add
loope
xor
jp
stc
mov
fdivrs
sbb
jbe
push
cli
sarb
pop
inc
rorl
in
loop
and
rorl
push
dec
push
or
subl
push
inc
push
and
push
pop
xchg
scas
inc
add
dec
push
and
fwait
mov
mov
inc
add
pop
xchg
push
pop
imul
cmp
dec
cmpb
pop
fnsave
cmp
nop
addb
lods
pop
or
aam
cmp
xor
xchg
xchg
inc
cmp
inc
mov
mov
mov
fnstcw
jecxz
and
dec
shlb
and
sti
insl
sub
mov
dec
in
adc
sarb
imul
sahf
sbb
pop
lret
push
adc
je,pt
xor
cmpl
enter
pop
dec
rcrl
push
dec
pop
aad
std
mov
test
pop
lods
rolb
call
into
sbb
pop
lds
dec
push
push
inc
mov
add
jo
imul
jnp
sub
sbb
add
jno
add
mov
jp
cwtl
mov
cmp
mov
inc
scas
xorb
xchg
fs
add
mov
adc
mov
pop
dec
push
adc
rcr
in
rol
inc
clc
jns
pop
cmpl
cmp
pop
cli
lods
lods
pop
andb
in
mov
xor
cmp
xchg
int3
lds
aaa
lret
ret
cli
lea
sub
sbb
ret
inc
xchg
cli
gs
into
in
jo
out
dec
mov
push
dec
dec
push
out
mov
and
ret
pop
lock
push
out
ficoml
cwtl
xchg
add
xchg
inc
cmpsl
push
imulb
daa
call
callw
and
lods
insb
xchg
sbb
push
sub
jecxz
clc
cwtl
ljmp
lods
xchg
sbb
fcomi
push
scas
push
push
enter
pushf
xor
pop
jge
into
mov
pop
int
insl
shrb
adcl
mov
cmp
std
or
jb
out
ret
push
lret
outsl
adc
out
push
mov
push
pushl
and
loop
mov
pop
insl
test
pop
cli
loopne
mov
cmpsl
mov
cmc
pop
adc
out
xchg
orl
push
inc
mov
test
test
loopne
insl
mov
cmp
cmp
xchg
push
iret
and
ficoml
sti
and
repz
addl
lret
sub
scas
or
lret
mov
lret
pop
pop
dec
enter
mov
loopne
cmpsl
out
icebp
push
aam
adc
ds
and
xchg
inc
insb
icebp
cmpsl
pop
jns
dec
sbb
shr
imul
xchg
jmp
jmp
aad
add
mov
cmp
fstl
pop
je
mov
push
dec
test
pushl
cmpsl
mov
sub
ret
push
push
stos
mov
pop
xor
loop
cmp
adc
bnd
imul
lock
jno
cli
stc
out
jl
icebp
pop
pop
xor
pushw
loopne
sti
dec
sbb
je
mov
outsb
sub
lcall
xchg
pop
addb
ret
dec
dec
push
ror
loopne
outsb
lcallw
sub
mov
push
std
pop
inc
fwait
sbbl
push
cmc
or
adc
push
gs
hlt
loop
out
movsl
hlt
push
push
cli
inc
and
and
stos
jp
shrl
adc
sbb
or
cmpsw
xchg
lods
in
ret
sbb
sub
mov
js
jp
sub
jp
in
add
lret
in
repz
loope
lcall
loop
jne
push
pop
sub
ljmp
inc
or
jl
mov
sbb
test
inc
pop
ja
cwtl
push
add
lret
dec
inc
sbb
pop
jne
mov
adc
aas
inc
cmpsl
jge
dec
lds
add
repnz
jns
cmpsb
iret
push
in
mov
ret
insb
andl
mov
push
jno
jecxz
pop
inc
call
inc
pop
dec
in
jae
mov
jle
iret
shlb
jae
dec
pop
out
mov
inc
aad
shrb
pop
sbb
add
dec
pop
pop
cmp
sub
sub
jbe
xchg
nop
scas
sub
cmp
jmp
cmp
shr
loopne
addr16
sbb
hlt
dec
pop
sub
push
xor
movb
dec
cs
sub
nop
div
dec
pop
js
jle
dec
push
call
xor
mov
adc
add
push
pop
or
cmp
push
test
sbb
mov
test
adc
xchg
xor
adc
sbb
rorl
fcomp
jge
mov
loop
adcl
dec
jp
mov
sbb
lahf
jg
push
fisubrl
int
imul
pop
inc
bound
xchg
add
adc
xchg
sub
push
testl
sub
sbb
daa
shrb
pop
push
es
push
xlat
std
rcr
xchg
mov
pop
ret
mov
jmp
mov
jl
enter
daa
ret
add
repz
mov
gs
xchg
rcrb
dec
jp
int3
jne
and
or
jle
add
push
adc
jb
mov
or
or
loopne
push
out
int
sahf
inc
adc
leave
mov
pop
push
aas
sub
mov
repz
ret
xchg
jmp
js
push
push
mov
in
popf
push
pop
xchg
pop
or
xor
jl
repnz
aas
imul
mov
cmp
insb
adc
add
adc
sbb
or
dec
lahf
dec
add
ret
movzbl
es
add
inc
mov
inc
inc
add
cmp
sbb
addl
ljmp
test
jge
test
cmp
cmp
stos
into
sbb
addb
std
fsubrl
xchg
add
sbb
mov
ljmp
ficomps
sub
and
mov
inc
dec
cmp
pop
or
and
mov
lcall
xor
add
push
xor
or
xor
in
icebp
leave
jp
aaa
jo
jg
push
push
mov
fists
aas
dec
or
fs
popa
inc
sub
js
xlat
mov
rcrb
and
pop
xchg
imulb
mov
repnz
fs
mov
addr16
xlat
inc
lcall
adc
test
xor
mov
jg
dec
inc
push
inc
lds
loopne
xor
popf
xchg
mov
call
fistl
jecxz
mov
xchg
cs
out
sti
cmp
mov
outsb
dec
sub
sbb
sahf
fsubl
sub
ds
lea
xor
fsubs
mov
jp
xor
pop
aaa
jne
pop
sub
lds
jmp
outsb
jnp
add
call
rorl
pop
dec
aad
sub
push
repnz
mov
push
push
fistpl
mov
nop
xor
loopne
rcll
cmc
shlb
lods
icebp
pop
mov
and
stos
rorl
cltd
sbb
stos
xlat
lock
inc
pop
ss
repz
rcrb
inc
mov
inc
and
lret
dec
fwait
adc
mov
repnz
dec
mov
cmpsb
ds
pushf
sbb
dec
jns
jne
mov
cmp
fists
add
das
in
iret
xor
sti
and
push
shll
mov
mov
cli
add
lods
jp
iret
rcll
mov
pop
popf
data16
adc
xlat
and
and
sbb
and
ret
and
jno
mov
mov
mov
and
shll
xchg
dec
xchg
jl
test
mov
jbe
add
jle
bound
bound
xchg
sarl
mov
sub
mov
das
or
gs
or
negb
jmp
je
adc
xor
jne
fidivrl
stos
sbb
mov
sbb
add
test
cmpsb
fisttpl
inc
ret
or
jo
imul
inc
pop
fisubl
dec
sub
imul
scas
cwtl
mov
movl
jne
jmp
cld
inc
jo
add
xchg
xchg
cmc
sub
fstpl
dec
aad
dec
xchg
pop
cli
jns
fisttpll
loopne
enter
aas
and
enter
testb
sub
push
lahf
jle
xor
xchg
lods
jmp
sti
negb
jne
mov
push
scas
push
outsl
push
xchg
push
and
mov
mov
sub
sub
jae
xorl
fiaddl
ss
mov
cld
jle
data16
ret
pop
add
in
xor
jns
call
jno
and
in
pop
bound
xchg
pop
iret
inc
fisttps
sub
mov
xchg
iret
xchg
jo
dec
pop
cltd
xor
aaa
sub
test
adcl
adc
cmp
adc
rclb
jne
sbb
lea
xchg
cwtl
jae
cmp
sti
lret
in
or
test
fisubs
dec
push
pop
loop
sbb
jecxz
and
inc
fs
sub
or
cmp
or
inc
jb
and
xor
sub
inc
inc
mov
int3
push
inc
testb
jg
xchg
jb
mov
sbb
inc
pop
out
mov
or
pop
jbe
jmp
sub
lods
mov
adc
jb
lcall
or
imul
jno
jnp
insl
jp
stos
xchg
stos
push
xchg
cmp
aaa
inc
push
mov
jle
arpl
xor
cld
enter
call
jnp
xchg
pop
repnz
sub
sahf
out
push
pop
ja
ljmp
ljmp
sbb
push
xlat
mov
or
cmpsl
xor
dec
daa
xchg
test
push
lcall
fmull
sbb
xchg
sbb
pop
pop
push
incl
xchg
adc
mov
dec
and
push
add
es
out
sbb
out
and
loop
inc
es
sub
mov
ficomps
flds
notl
loop
out
iret
xchg
dec
jnp
imul
movsb
jb
jge
push
and
iret
xchg
xchg
aad
int
sub
mov
icebp
pusha
pop
sbb
cmpsb
xchg
shl
xlat
inc
imul
sbb
orb
lahf
adc
adc
les
and
addr16
out
push
dec
aas
notl
in
fs
pop
fidivrl
fidivrl
xchg
xor
pop
mov
jge
int3
leave
adc
dec
aas
pushl
mov
mov
fldln2
mov
ja
push
mov
push
cmp
xlat
lret
inc
mov
pop
dec
mov
sub
mov
mov
xchg
sbb
xchg
popf
cmpsl
gs
ss
fsts
add
mov
add
add
sbbb
leave
xchg
sub
cwtl
jns
xor
imul
jle
rolb
sbb
pushl
mov
adc
cmc
enter
mov
inc
in
imull
nop
add
push
mov
cmpl
stos
into
stos
adc
ja
shll
bound
aas
add
out
sti
sbb
cli
mov
add
mov
dec
sbb
mov
mov
mov
jge
sbb
xchg
push
xlat
loop
dec
push
movsb
rcrl
xlat
cmpsl
out
dec
or
lret
scas
icebp
push
aaa
add
xchg
rcrl
push
jae
mov
xor
sbb
and
lret
sub
xor
push
sbb
in
clc
add
pushf
jns
das
push
addr16
dec
ja
cmp
mov
mov
lods
icebp
dec
inc
out
adc
aaa
or
stc
mov
sub
daa
pushf
testb
adc
dec
js
mov
enter
dec
push
push
sbb
cld
lods
adc
repnz
jae
sub
pop
int
mov
movsl
rolb
roll
jge
mov
divb
or
fdivrs
imulb
ror
sbb
pusha
adc
aam
mov
popf
cmp
mov
or
mov
cmpsl
or
out
stos
xchg
jb
xor
loope
sti
jg
mulb
pop
arpl
cwtl
lahf
testl
mov
aad
ljmp
clc
cbtw
cs
lods
xlat
mov
ffreep
lahf
iret
cs
pop
jne
mov
stos
pop
lea
or
xchg
addb
jl
rclb
incl
sbb
scas
dec
imul
test
rcll
shrl
nop
je
mov
ja
repnz
out
dec
jno
jbe
add
jg
and
cmp
in
lahf
jno
pop
rcrl
ret
popa
mov
pop
mov
pop
fimuls
popf
mov
sub
mov
xchg
ja
add
mov
or
add
aad
pop
xchg
or
cmp
dec
jnp
jae
out
xchg
scas
or
cli
cmpsb
insb
push
test
hlt
jns
jge
add
out
jge
mov
sti
mov
mov
sbb
ja
loop
cmpsb
mov
mov
stos
lods
mov
ds
push
aad
iret
inc
xor
fcom
stc
sarb
movsl
xchg
adc
mov
mov
or
push
dec
outsl
jbe
shrb
in
cmc
pushf
or
clc
jns
add
add
pop
nop
pop
loop
xchg
pop
xor
push
mov
int
aam
mov
adc
mov
das
dec
popf
pop
in
sbb
ret
xor
jge
push
jne
sub
data16
inc
lock
xchg
cltd
lea
es
lea
insb
xor
or
addr16
iret
gs
inc
sbb
cmp
jns,pt
jns
and
add
jno
lcall
ss
fimuls
in
outsl
divb
mov
add
mov
xchg
rolb
inc
adcb
leave
test
cli
shrl
call
popf
lret
inc
xchg
inc
xchg
push
xor
scas
or
jb
xchg
mov
out
rcr
jb
test
sbb
lods
mov
sub
das
jecxz
nop
jae
push
cmc
fcoml
dec
fldenv
adc
jae
dec
xchg
shll
insl
add
inc
cmp
dec
dec
xchg
icebp
in
dec
clc
xor
pop
push
cmpsb
sub
cld
mov
push
decb
lods
shrl
lods
stos
test
push
scas
push
das
iret
inc
in
shlb
xor
inc
push
sub
cmc
mov
sarb
fnstsw
mov
sbb
mov
add
fists
mov
mov
js
lcall
sub
movsb
rclb
outsl
out
jne
std
scas
cmp
mov
pop
lret
clc
push
mov
jl
pop
lcall
aad
lock
lret
mov
aaa
ror
mov
lahf
mov
xor
call
add
jbe
mov
fldl
repz
adc
xlat
pushf
rcrb
mul
enter
add
xor
push
stc
loope
sub
mov
fst
lods
cmp
inc
xchg
out
rcrb
inc
push
or
dec
mov
push
mov
cmpl
xchg
mov
and
mov
lahf
std
sub
faddl
mov
orb
push
pop
dec
es
lods
divl
push
int
and
mov
pop
in
inc
roll
loope
jne
ja
push
jecxz
or
sub
mov
shrb
mov
pop
and
scas
mov
inc
shrb
dec
jmp
pop
xchg
push
push
out
push
mov
iret
fst
dec
dec
sub
add
imul
xchg
es
add
es
rorl
jo
jbe
popf
and
sbb
xor
pop
pop
std
shrl
inc
cli
xchg
or
jb
test
sti
test
es
xor
int
xchg
ret
cmp
mov
mov
adc
sbb
push
int
push
and
jae
or
lcall
es
dec
cmp
cmp
push
mov
hlt
mov
pop
xchg
mov
std
add
xchg
data16
pop
out
xchg
and
push
dec
lahf
jp
pop
jl
adc
and
dec
mov
and
xchg
mov
dec
pop
lds
fisubl
jb
dec
adc
pop
mov
pop
es
rcrb
or
and
scas
cmp
cld
sub
cli
les
inc
xorl
push
pop
and
testb
stos
jg
lret
xor
or
sahf
call
int3
xchg
mov
xchg
dec
pmaxsw
mov
inc
aaa
xlat
mull
leave
adc
add
add
add
scas
push
jo
jns
mov
repz
mov
mov
lret
mov
jle
icebp
cmp
data16
pop
mov
xchg
aas
mov
jns
mov
inc
inc
cmpl
cmc
xchg
pop
icebp
cwtl
pop
pop
aam
iret
outsl
jnp
sub
push
into
cmp
mov
or
sub
jmp
push
mov
popf
es
inc
rorl
out
icebp
test
push
fdivrs
and
jg
cmpsl
xchg
mov
in
cmpsb
ret
xor
dec
dec
sarl
loopne
daa
dec
clc
or
add
xchg
xor
xchg
pop
adc
mov
fldenv
push
jne
adc
and
negb
mov
addr16
fisttps
mov
ds
dec
pop
push
fnstenv
ljmp
pushf
dec
pop
dec
pop
dec
xor
mov
movsb
lods
pop
mov
adc
add
jl
push
ret
rorb
sub
icebp
test
cs
mov
cltd
lods
daa
les
int
scas
movsb
inc
lea
testl
xchg
sub
ret
add
pusha
mov
js
push
pop
push
inc
int
fwait
cmp
sub
data16
clc
or
mov
pop
mov
mov
sti
mov
and
dec
pop
mov
and
adc
cld
push
jl
data16
icebp
pop
xor
out
imul
sub
nop
repz
push
ljmp
loop
shrl
pop
enter
inc
push
adc
xchg
cltd
pop
addb
test
and
in
stos
cld
lock
fadd
ljmp
mov
icebp
rorb
lods
cmp
in
sbb
dec
dec
inc
js
jmp
push
ret
xchg
jecxz
ss
pop
js
addl
in
dec
rorl
test
mov
inc
dec
pop
mov
xchg
sbb
subl
sti
xlat
aad
fdivrs
jns
adc
inc
or
push
sub
add
sbb
punpckhwd
jne
dec
das
sub
jns
call
imul
push
fcoml
mov
cmp
jge
xchg
inc
xor
outsl
iret
jmp
in
xchg
lea
mov
add
hlt
sub
jbe
mov
cmp
mov
lea
imul
xchg
out
jmp
ljmp
push
aaa
push
and
idivl
mov
std
or
sbb
push
adc
fists
sahf
push
stc
dec
sbb
xor
jne,pn
push
or
clc
daa
mov
push
arpl
lcall
icebp
push
shlb
jbe
or
push
jns
push
jecxz
cmp
mov
dec
push
js
add
dec
push
xor
inc
sbb
pop
repnz
mov
lods
sarb
ffree
cmp
pop
fs
sbb
mov
pop
fprem
jp
pusha
ret
pop
pop
mov
jns
adc
or
sub
xchg
jmp
jno
cltd
shr
fcmovnb
cmp
push
pcmpeqd
out
adc
pop
pop
test
mov
add
cmp
out
sbb
xlat
push
cmp
jbe
push
insl
jg
shrb
ds
aaa
push
inc
neg
loop
lcallw
popa
adc
pusha
pusha
jbe
inc
movsb
pop
lods
test
jl
stos
add
orb
shlb
cli
add
mov
fstl
and
js
or
xchg
mov
aas
push
loopne
movl
insb
pop
rcrb
and
and
push
mov
pop
mov
jp
and
pop
xor
insb
ja
in
pusha
popa
in
iret
dec
jns
xchg
jg
loopne
xchg
mov
sbb
movsb
enter
mov
cmp
repz
testb
pop
pop
add
push
or
ljmp
imulb
scas
adc
stc
andl
xor
sbb
and
sbb
rol
mov
in
mov
sub
push
adc
pushf
xorl
mov
sub
mov
xlat
sbb
call
cmp
punpckhwd
arpl
add
cmp
mov
out
ds
xorl
fucomp
jo
xchg
pop
enter
jl
sub
sarl
xchg
enter
rep
pop
jl
cmpsl
addr16
mov
push
mov
pop
dec
cltd
outsl
jmp
pop
mov
push
ljmp
push
or
jmp
dec
xor
loopne
aad
lret
add
test
mov
loope
outsb
fstl
lahf
insl
sub
sub
cmp
test
fcmovne
ret
in
push
out
and
jae
leave
mov
cmp
mov
mov
xchg
ss
lahf
roll
icebp
adc
jecxz
ret
pop
push
or
lock
jnp
scas
out
lock
push
popa
pop
push
les
mov
sub
fwait
pop
mov
lret
das
sbb
loop
into
and
cmp
pop
inc
xchg
jmp
mov
sar
cld
inc
or
shlb
test
sub
popf
cmp
mov
leave
jns
sbb
or
fcomip
outsb
inc
sub
les
push
sbbb
push
jnp
xor
xchg
loop
mov
nop
push
sub
sbb
imul
push
adc
dec
rolb
or
shrb
fst
ficomps
push
stos
mov
sbb
ljmp
adc
jbe
sub
xchg
sbb
shlb
int3
leave
mov
icebp
add
out
jbe
jl
push
gs
jmp
push
fisubrs
in
sub
pop
int3
repnz
icebp
mov
test
and
sub
xchg
mov
daa
sbb
pop
sub
into
les
jmp
sub
inc
sti
push
fadds
dec
cmpsb
cmpsb
mov
add
sti
mov
hlt
std
das
in
mov
call
ja
fs
aas
mov
sbb
jge
repnz
push
inc
xchg
roll
daa
xlat
xor
lret
shrl
test
mov
push
dec
in
mov
cmp
jg
pop
dec
outsl
mov
out
test
fiaddl
and
sub
push
dec
adc
in
cmp
es
jne
mov
mov
loope
sahf
add
sub
fmull
mov
xchg
movsl
nop
xor
test
cmc
fisttpll
out
jle
adc
lcall
lds
pop
movsl
and
cmp
hlt
mov
sarb
ja
mov
loop
rcll
mov
rolb
xor
jbe
mov
rcll
pop
xchg
pop
mov
outsb
jle
test
cmpl
dec
pushf
insl
lds
jle
adc
in
out
dec
sub
lock
sahf
cltd
pop
fdiv
aad
das
pop
or
xchg
xlat
std
jmp
ret
enter
mov
jns
inc
mov
lret
mov
dec
loope
sub
stos
xchg
xchg
subb
in
jp
dec
aad
inc
jp
inc
ljmp
shrl
mov
push
sahf
xor
rcrb
dec
cmovb
icebp
addl
sti
push
cmpsl
fildl
stc
mov
icebp
inc
xchg
and
aas
sub
fst
ds
bt
pop
sub
push
aam
aad
xchg
fmuls
fwait
shrl
iret
pop
mov
lock
push
jp
insl
xor
jmp
ret
dec
leave
imul
sbb
mov
pop
shll
add
sub
imul
ss
jecxz
xor
adc
pop
jle
push
push
fnstenv
cwtl
ficompl
dec
push
sbb
inc
cmp
dec
out
nop
notb
push
xor
sub
cld
jle
push
ret
pop
cmp
fstpt
xchg
xchg
into
cmpsl
and
test
gs
mov
jo
xchg
sbb
push
rorl
sub
and
cli
and
shlb
push
pusha
mov
jmp
adc
lods
mov
test
mov
fisttps
cmp
fs
loop
aam
push
and
and
addr16
cltd
or
dec
sub
sbb
and
or
inc
jo
cltd
int3
in
xchg
outsb
mov
or
rol
inc
scas
sbb
out
sub
jecxz
outsl
mov
and
xor
add
data16
mov
nop
mov
xchg
sahf
cmp
movsb
mov
bound
mov
pop
scas
addr16
dec
jb
bnd
ss
dec
xchg
xchg
dec
push
popf
jmp
int3
fsubrs
daa
mulps
pop
loop
aam
testb
daa
add
movsl
xor
cs
inc
jbe
xchg
dec
mov
daa
in
ja
repz
push
out
sub
call
push
add
aam
push
scas
into
cmp
sub
jge
arpl
stos
scas
mov
ret
push
push
cmpsl
jp
and
stos
push
jbe
fdivrl
in
ja
idivb
pop
daa
xchg
and
cwtl
scas
in
adc
or
jmp
sbb
mov
roll
je
adc
int3
icebp
and
mov
cltd
shl
insl
jl
rol
inc
inc
sub
aam
lcall
rorl
lret
pop
inc
ror
out
mov
mov
adc
cs
std
jp
push
lcall
es
lea
adc
adc
fistl
repnz
xchg
xchg
adc
add
inc
pop
push
and
cmp
xor
mov
mov
shl
cmp
imul
mov
inc
clc
cmc
cmp
pop
push
adc
bound
push
subl
aas
add
pop
sbb
mov
jecxz
xor
xlat
or
psubsb
push
call
gs
dec
lods
xchg
cmp
into
leave
and
mov
aas
test
pop
popa
sub
pop
mov
pop
inc
inc
cwtl
stos
fisubrs
repz
in
pop
incb
inc
mov
inc
movsb
push
clc
daa
ss
rep
mov
push
je
adc
loopne
mov
daa
repz
jecxz
data16
cmp
push
mov
adc
pop
inc
lahf
inc
in
inc
iret
add
jecxz
cmpsb
popf
mov
cs
outsl
in
push
push
lret
inc
ret
jg
pushf
dec
imul
int3
shlb
loope
xor
push
cld
inc
dec
dec
fstl
sub
or
mov
popa
loope
imul
dec
push
cld
test
addr16
dec
push
cmp
insb
xchg
fdiv
and
ljmp
mov
mov
les
xor
mov
sub
add
jae
push
and
xchg
pushf
mov
and
loop
cmp
cmp
data16
ds
icebp
inc
xlat
ret
in
jmp
dec
pop
movsl
mov
add
xchg
ret
dec
jge
jecxz
lret
push
cld
scas
stos
xchg
sbb
int3
jnp
or
adc
stos
loopne
fistps
repnz
pop
cwtl
mov
push
xchg
bound
ja
xor
clc
loopne
pop
sbb
xchg
mov
or
inc
movsb
xchg
inc
ret
stc
lret
jmp
xor
mov
push
mov
mov
push
addb
lods
push
testl
stos
cmp
adc
test
pop
and
cmp
mov
cmp
sub
adcl
jae
stc
pop
push
shrl
sub
mov
jne
movsb
adc
fisttpl
clc
mov
xor
sub
sti
mov
or
mov
stos
lds
addr16
pop
sbb
lea
jl
xchg
push
inc
xchg
and
ret
aam
inc
mov
pop
add
out
sbb
fldt
mov
or
cmp
and
int3
ret
mov
jo
jne
pop
pop
mov
clc
xor
mov
inc
mov
aam
inc
les
notl
popf
push
mov
loopne
aam
cmp
in
inc
pop
or
cmp
shrl
std
js
sti
scas
sarl
ljmp
sbb
xor
lret
pop
push
cmc
mov
xchg
fisttpll
in
inc
xor
addr16
test
nop
add
push
add
sub
cmp
sbb
sysenter
adc
inc
je
cmp
ja
stc
mov
stos
in
push
orb
jns
cmp
or
inc
loope
sub
or
mov
stos
sahf
lds
addr16
in
shrb
aam
hlt
test
add
iret
fwait
inc
sbb
mov
cmpl
cmp
dec
cmp
add
out
lods
jp
mov
xor
repnz
jge
js
mov
daa
minps
inc
int3
mov
sbb
inc
mov
push
fisubrl
sbbl
pop
dec
sbbb
or
and
xor
xchg
sbb
test
enter
lods
jns
std
pop
aas
adc
arpl
push
mov
stos
test
repz
pop
fstpt
loopne
mov
dec
fidivrs
jns
ret
inc
pop
aad
cli
xchg
loope
data16
movsl
iret
add
mov
or
xor
and
inc
stos
push
jg
sbb
sbb
in
loope
ja
scas
addl
arpl
jmp
dec
outsb
mov
psubw
adcl
rcl
mov
mov
dec
aaa
aas
push
or
xlat
adc
jae
push
push
xchg
dec
adc
inc
sub
cld
test
out
aad
and
popa
out
cmc
sbb
push
scas
sub
decb
pop
sub
mov
test
scas
cli
xchg
notb
arpl
enter
sub
mov
push
rcrl
loopne
loopne
andb
outsl
xor
cld
fistpll
push
or
aas
pop
shrl
int3
or
cmp
iret
jo
inc
test
out
pop
movhps
dec
aas
add
imul
mov
test
icebp
lods
insl
pop
es
cmpsl
adc
inc
pop
push
fidivrs
mov
jne
xchg
pop
dec
mov
test
mov
pop
mov
jnp
lock
cmpsb
pop
or
std
addl
mov
fdivrp
xchg
dec
adc
jl
mov
add
pop
mov
mov
hlt
mov
cmc
mov
push
xchg
inc
fcmovnbe
popf
adc
fxch
stos
subb
int
xor
mov
xor
out
add
stos
clc
mov
adcb
push
div
out
insb
pop
and
cmp
dec
test
cli
jge
cmp
xchg
jae
push
mov
sub
mov
fsubp
cmp
movsl
inc
aas
jge
dec
sti
mov
enter
adcb
mov
aas
cltd
add
movb
dec
cmpsl
repz
xchg
push
das
adc
mov
rcll
mov
adc
xchg
daa
fbstp
hlt
mov
and
adc
cld
and
push
xlat
rclb
jbe
arpl
sahf
test
sbbb
les
mov
test
stos
and
xchg
xchg
repz
dec
or
arpl
adc
dec
pop
dec
lock
gs
stc
add
rorb
cs
bnd
add
pop
stc
addr16
insl
xchg
lods
add
add
mov
sahf
das
mov
scas
xor
jecxz
adc
loopne
add
divl
into
outsb
adc
lods
jno
cmpsl
leave
push
pop
dec
jb
or
push
dec
inc
sub
iret
pop
outsb
shlb
mov
fdivs
and
mov
inc
sbb
jmp
aam
aas
sub
mov
bnd
push
sbb
and
or
ret
test
xor
dec
imul
stos
jnp
or
mov
loop
dec
xchg
jg
push
jmp
stos
out
aas
daa
or
sub
pop
orb
mov
repz
nop
xchg
les
fldt
cmpsb
rol
shrl
ds
jno
stos
xchg
push
sbb
pop
js
push
xchg
mov
xchg
adc
rcrb
push
out
test
pusha
scas
call
inc
jle
mov
xor
mov
jbe
lahf
sbb
add
inc
mov
sub
mov
jle
push
ljmp
push
lret
cmp
add
and
in
or
lret
mov
jp
sbb
fsubs
dec
sahf
and
mov
js
mov
push
jns
stos
outsb
js
je
dec
ss
imul
aad
inc
pop
mov
push
cmp
cli
push
rclb
push
hlt
xor
pop
rcr
mov
jmp
sub
and
sbb
pop
lret
in
pop
stos
and
fistps
or
add
cmp
jecxz
mov
sbb
pop
cmp
adc
inc
dec
shlb
mov
dec
push
nop
xor
jbe
sub
lret
movsl
xchg
push
pop
iret
mov
ja
jbe
dec
push
or
js
das
sbb
pop
mov
in
xchg
lock
rol
sub
mov
adc
aam
loopne
mov
pusha
and
in
jno
mov
shl
jg
xor
test
cmp
lahf
jnp
push
mov
dec
adcl
dec
push
dec
into
loopne
roll
pusha
and
dec
lea
jo
mov
add
jae
dec
push
insb
imul
cmpsl
pop
leave
stc
cmc
mov
in
and
pushf
jmp
push
popf
xchg
fcomps
and
sarl
ss
and
aad
inc
inc
push
sbb
jbe
mov
mov
mov
call
jle
xchg
mov
aad
dec
push
adc
leave
inc
neg
std
aad
or
jmp
or
sub
pop
pop
ja
mov
or
lea
xor
test
push
mov
inc
cmp
pop
rcrb
add
iret
and
add
fbld
ds
or
xchg
sub
out
add
shll
pop
sub
sbb
cld
push
add
sbb
or
inc
out
and
outsb
push
add
jns
sbb
adc
push
sysenter
or
mov
imul
inc
jmp
and
jmp
xchg
aam
fisttps
jl
mov
scas
dec
fidivrl
repz
ljmp
cmp
sti
and
cmp
xchg
gs
imul
daa
mov
sub
adc
fs
shll
sub
add
js
mov
inc
pop
sbb
xor
xchg
hlt
cld
push
push
leave
push
xor
or
dec
clc
mov
jae
adc
hlt
sar
imul
adc
dec
dec
sbb
fistps
push
mov
aam
sti
cmc
jae
sarl
test
jp
push
xor
stc
push
pop
pop
pop
lea
pop
pop
pop
push
sbb
fwait
sbb
mov
adc
movsl
sub
cmpsb
jmp
test
push
adc
lcall
dec
fstl
repz
push
mov
sub
add
dec
stos
popf
lock
or
mov
outsl
jb
ret
or
dec
aaa
scas
das
cli
xor
or
jns
jge
mov
call
insb
cmp
cmp
repnz
sbb
pusha
jmp
and
gs
ss
adc
je
xorl
pop
ja
repnz
psubd
and
lods
jmp
imul
dec
xchg
insl
xchg
mov
push
test
inc
imul
dec
xlat
and
daa
fnsave
lcall
adc
and
out
mov
out
out
pop
and
push
cmp
xor
addr16
stc
imul
pop
sub
xor
cwtl
testb
and
mov
imul
loop
fsubs
jge
jp
ljmp
inc
lock
mov
cmpl
cmpsb
jae
adcl
fistps
add
repz
stc
rcrb
lret
pop
inc
mov
or
jle
jecxz
cmp
adc
xchg
inc
rorl
push
jmp
neg
inc
cwtl
rcl
fsubr
lock
out
dec
imul
aaa
arpl
and
ja
push
outsl
insl
jg
cmp
mov
gs
sub
mov
mov
jl
xchg
jne
inc
mov
fdivr
pop
pop
push
out
push
dec
dec
sub
push
das
les
lock
bound
pop
inc
test
adcl
dec
mov
jle
mov
lea
sarl
lds
adc
pushf
test
mov
pop
xor
and
adc
or
push
inc
test
mov
in
inc
jns
push
aam
nop
lret
mov
inc
and
cmp
jmp
adc
mov
pop
xchg
lea
and
dec
mov
arpl
push
jp
divb
sbb
or
jbe
xorb
mov
push
fxch
cld
xor
ja
sub
imul
js
popf
xor
lret
push
cltd
mov
loop
xor
fbld
and
loope
pop
je
rorl
jb
and
inc
push
and
ljmp
cmp
loop
add
adc
in
adc
repz
push
int3
pop
mov
inc
mov
mov
jbe
xchg
jmp
xchg
sub
addb
popa
or
inc
sbbl
mov
adc
inc
mov
xchg
std
cld
cs
leave
xor
test
or
aas
mov
inc
pop
ret
fwait
loop
js
add
lock
cmc
or
daa
and
imul
adc
add
and
fistpl
into
into
and
notb
push
je
xor
cld
mov
jp
sbb
rcr
shl
imul
jp
stos
pop
cmpb
mov
int3
std
movsl
icebp
jne
mov
mov
std
stc
dec
aaa
std
movsl
or
jg
mov
dec
stos
stos
pop
add
mov
mov
jp
jmp
inc
mov
mov
add
add
sti
pop
mov
add
inc
push
dec
push
xchg
xchg
xchg
or
aam
mov
push
cld
inc
aaa
mov
arpl
pop
jp
add
sbb
mov
cmp
and
aad
jg
mov
add
sahf
or
push
jo
inc
test
int3
inc
icebp
adc
sub
fiadds
jo
fsubl
sub
and
mov
clc
push
mov
or
pop
sarb
xor
pusha
and
arpl
cmp
fwait
adc
mov
push
mov
imul
dec
xor
jmp
jno
shll
xor
xchg
jnp
lahf
aaa
mov
int3
jno
cwtl
adcl
lea
xor
sahf
pop
lea
mov
sahf
cltd
mov
outsl
mov
sub
mov
js
repnz
out
mov
xchg
in
iret
negl
dec
cmp
push
jne
aad
pop
pop
add
movsl
sub
mov
cwtl
loop
jge
and
aam
insb
icebp
add
leave
negb
mov
jge
mov
sbb
fsts
cmpsl
pop
lods
pop
xchg
lahf
lret
test
dec
add
fldl
mov
jb
insb
sub
movsl
inc
sub
lahf
or
cltd
in
pop
movsb
xchg
jne
xor
mov
mov
inc
push
std
insl
push
and
movsb
jae
outsb
or
pushf
stc
pop
out
sbb
mov
adc
sbb
test
cmc
mov
inc
addb
pmaxub
fs
cld
mov
xor
imul
jbe
ds
pop
inc
mov
jmp
pushf
sub
cmpl
jnp
loopw
daa
push
stos
sbb
sub
gs
lock
cmp
mov
add
mov
mov
lods
sahf
and
movsb
cmpsl
xlat
fdivl
or
mov
xor
jg
les
pop
and
mov
jle
push
and
xor
call
fwait
addb
xchg
or
or
jecxz
cmpsb
movsl
push
pop
fadds
push
jp
xor
push
push
rorb
fistps
cmp
cmp
inc
add
les
xchg
lods
cmp
inc
mov
cmpsl
xchg
cltd
enter
ficomps
cmp
mov
sbb
hlt
inc
les
adc
pop
mov
movsbl
push
mov
pushf
and
cwtl
into
mov
rorl
jae
add
adcb
in
push
imul
je
pop
repnz
dec
pushl
jge
dec
xor
push
sub
lret
jo
xchg
mov
jg
cltd
push
jl
outsl
pop
psrad
mov
mov
shlb
fidivrl
mov
push
lcall
lds
lahf
dec
scas
dec
pop
adc
pop
lods
dec
jecxz
xor
aam
xchg
aam
cld
jae
lods
push
cmp
popf
push
xchg
xchg
inc
xor
mov
xchg
stc
ret
or
bound
test
int
out
insb
or
out
loopne
jl
bnd
jmp
or
mov
faddl
dec
xorb
aaa
mov
sub
scas
es
sbb
push
jns
lahf
in
movsb
pushf
sbb
adcb
adc
out
xchg
cmc
mov
lret
or
push
loopne
pop
int3
loopne
fiaddl
repz
mov
sti
lds
push
stos
repnz
xorl
scas
jne
insl
or
in
cmova
dec
subb
pop
xor
mov
jp
cmc
jg
out
jmp
fcmovu
outsb
jne
push
fs
enter
ss
imulb
add
mov
ljmp
dec
lock
icebp
arpl
in
fst
push
pop
fstpt
aam
mov
pop
xchg
push
push
dec
jo
mov
mov
fisttpl
ljmp
out
inc
mov
roll
je
mov
inc
lock
movsl
sar
setle
insb
jge
mov
pop
mov
pop
dec
mov
jnp
popf
bound
sbb
pop
push
jle
and
sub
jmp
movsb
mov
add
in
xchg
xchg
movsl
sub
dec
icebp
xchg
test
xchg
add
and
je
cld
mov
jl
adc
popl
sbb
fstpl
jecxz
sub
mov
icebp
and
jmp
xchg
sbb
repnz
and
ret
popl
dec
jbe
jmp
xor
rorb
mov
or
stos
cmp
clc
in
cmp
mov
push
push
jns
dec
ja
in
nop
push
in
add
out
pop
sti
mov
cld
adc
and
std
into
pop
pop
outsl
adc
dec
add
fistpll
out
in
shll
lock
jge
pop
xor
xlat
andl
out
cmp
jge
lret
cmp
inc
mov
dec
fistpl
into
cmp
mov
or
mov
aad
loopne
leave
xchg
lods
inc
mov
loop
dec
divl
and
rcl
xor
xor
lahf
sub
or
shrb
mov
pop
xor
sbbl
in
fldlg2
ret
or
ficomps
repz
scas
fstp
jns
inc
mov
mov
cwtl
aas
xor
inc
movsb
sti
sbb
test
fidivrs
or
es
popf
mov
test
outsb
stc
jb
adc
cs
mov
outsb
lods
outsl
add
mov
fwait
aad
xor
cli
sbb
adc
mov
xchg
xchg
je
xchg
lock
cmc
adc
mov
scas
xchg
cmp
outsl
xor
mov
int3
test
ja
mov
dec
mov
jge
mov
mov
stc
les
mov
cmp
out
jle
aas
adc
pop
push
ret
leave
sub
cmp
mov
inc
mov
push
fmull
pop
and
mulb
adc
mov
and
adc
xchg
fwait
insb
mov
dec
jp
out
cmp
outsb
jb
cmp
add
or
pop
mov
fadd
sbb
ljmp
or
clc
fcoml
mov
mov
icebp
inc
in
data16
mov
xchg
adc
xchg
push
mov
loope
fildl
jo
test
mov
or
sbb
xchg
mov
mov
fsubrl
adc
sbb
add
call
sahf
imul
jecxz
mov
mov
cmpsb
adc
cmp
int
imul
jl
sub
and
ljmp
decb
dec
adc
ret
ret
push
mov
dec
fwait
lcall
psubq
cmp
and
addr16
mov
lahf
es
jnp
jle
push
jle
mov
insb
mov
pop
xor
mov
and
adc
fwait
fs
shr
out
lret
and
push
dec
sbb
pop
mov
mov
mov
dec
cld
insb
sbb
sub
in
push
decb
xchg
lds
insl
ljmp
mov
dec
pop
sub
dec
lret
mov
es
and
scas
pusha
pop
std
into
mov
add
loope
inc
test
push
sar
testl
lods
adc
lea
loopne
jg
sbb
sbb
pushf
push
or
cmp
cmp
xchg
call
inc
popa
pop
fwait
vorps
and
jno
xchg
cmp
xchg
mov
or
or
das
mov
adc
inc
adc
jg
and
int
subl
and
mov
add
lret
jbe
inc
mov
ficompl
xchg
fxch
jg
je
add
cmp
dec
lods
mov
scas
call
push
sub
jmp
xchg
nop
jmp
daa
pushf
pop
sbb
pop
jg
or
mov
inc
fmull
rorb
cmp
repz
adc
enter
je
adc
adc
icebp
sbbb
and
sbb
pop
sbb
fnstenv
scas
fnstsw
iret
sbb
int
pop
es
mov
roll
jo
pop
inc
mov
ds
out
cli
lahf
cmpsb
sub
scas
cltd
movsb
test
imul
cmp
fwait
push
or
inc
adc
sbb
movsb
pop
push
dec
mov
push
dec
jne
lods
popa
lret
xchg
mov
xchg
out
xchg
sub
or
fadds
mov
ja
sub
add
push
outsb
or
iret
push
test
out
lods
call
les
cwtl
lcall
pushf
loopne
mov
imul
pop
adc
push
jecxz
mov
iret
in
jnp
jg
test
mov
nop
push
add
and
shl
aas
shll
adc
sti
hlt
stc
or
push
add
fidivrl
sub
sbb
pop
enter
in
jle
pop
inc
test
iret
and
das
fwait
sbb
or
mov
aas
add
or
outsb
gs
imul
pop
stos
xchg
stos
xchg
jecxz
out
mov
pop
cmpsl
test
fldenv
ss
or
mov
cmpsl
inc
lret
xor
mov
pusha
adc
loop
mov
xchg
cmp
mov
out
popf
test
cmpb
popa
sbb
sbb
push
mov
lret
cli
adc
loope
in
adc
add
pushf
jmp
adc
fidivrs
push
stos
inc
into
sub
scas
nop
mov
or
lea
pusha
je
enter
movsb
pop
jb
xor
xchg
and
xor
push
outsl
dec
push
add
cmpsl
je
pop
cld
cmp
jg
inc
mov
push
int
sub
sub
mov
lea
es
shll
imul
rcll
fcmovb
and
ja
ja
mov
les
subl
orb
cwtl
cmp
sbb
cltd
insb
jecxz
cmp
roll
fld
repz
lods
stc
sar
testb
push
and
push
in
fchs
in
or
xchg
pop
push
test
sti
mov
cmpb
into
push
and
mov
shl
in
repz
loopne
mov
xchg
clc
add
testb
pshufw
stos
lcall
in
mov
out
dec
xchg
sub
aaa
push
push
jge
ret
pop
dec
jnp
imul
mov
xorb
mov
movsb
cmp
dec
adc
pop
xchg
imul
xchg
cld
pop
mov
and
hlt
outsl
stos
mov
nop
cs
out
adc
mov
xor
inc
mov
cwtl
negb
push
adc
addr16
mov
rcrb
inc
cmp
dec
mov
dec
fs
or
adc
sub
jmp
cmp
stos
repz
mov
out
jecxz
pop
inc
aad
sub
mov
dec
or
nop
push
leave
aad
jno
lds
loop
cmpsl
push
and
shlb
sbb
repnz
cli
stos
lcall
cwtl
sbb
mov
add
sbb
dec
ds
adc
xor
and
dec
jae
bound
pop
adc
jbe
mov
imul
xchg
or
jmp
jmp
outsl
outsb
sbb
clc
push
cmp
sub
push
sub
dec
or
ret
out
lods
lock
insb
cmp
mov
fwait
pop
xchg
aaa
mov
nop
push
call
ss
xorb
cmp
pushf
test
dec
aad
mov
sti
fwait
inc
and
xchg
lcall
push
jle
das
xor
push
adc
stos
imul
sub
frstor
out
mov
sbb
sbb
rcll
js
lods
xchg
nop
incb
pop
lea
cmp
jnp
cmp
int
mov
xchg
push
call
fs
ret
jbe
adc
stos
andb
leave
ljmp
dec
add
cmpsl
je
leave
repz
mov
add
movsb
lahf
rclb
mov
roll
push
pop
out
mov
idivl
les
xor
xor
mov
cmp
xchg
stos
xorl
aam
mov
std
stc
jmp
adc
push
add
clc
jle
and
push
mov
stc
insl
add
clc
int3
xor
divb
xchg
std
daa
jle
add
inc
mov
enter
nop
inc
aas
xorl
lds
repz
cld
sahf
fs
notb
fwait
lods
fildl
in
fsub
ja
imul
stc
repz
jle
mov
cmp
cmp
xchg
call
test
loope
sub
test
imul
or
sub
add
aad
push
sbb
subb
insl
adc
adc
sarb
aas
jl
aaa
jb
mov
push
jge
test
add
mov
pop
cmpsb
adc
xchg
cli
push
test
rcrl
add
fnstenv
dec
jnp
add
push
adc
cmp
lret
fdivrl
xor
add
mov
mov
xor
addb
repz
ss
hlt
xor
shrl
outsb
je
push
movsb
fwait
mov
es
xlat
in
mov
fiaddl
in
les
mov
ror
loop
or
adc
adc
push
and
mov
fidivl
lcall
dec
xor
into
nop
mov
pusha
push
gs
ds
pop
ret
jge
outsb
popf
je,pt
cmp
cwtl
inc
out
mov
lods
inc
out
mul
push
lods
cmp
mov
leave
dec
and
push
lret
loop
les
scas
aas
std
cmp
jnp
pop
mov
push
mov
cmp
lds
mov
sbb
xchg
dec
xor
and
fneni(8087
pop
aas
sub
and
dec
push
mov
cli
push
out
outsb
lahf
fsubrl
add
call
sbb
pop
int3
nop
adc
test
fildll
lock
aad
andb
and
mov
jp,pt
mov
or
pop
or
scas
xchg
push
sbb
push
ss
add
dec
jmp
xor
shrl
lds
rcll
push
xor
ss
inc
out
xor
mov
adc
push
ret
iret
daa
adc
jbe
negb
mov
xchg
add
lock
push
sbb
stos
aaa
inc
mov
inc
sbb
push
divb
sub
sahf
xchg
scas
fwait
inc
xchg
out
and
add
fsubr
sub
mov
cmc
jecxz
add
cmp
in
mov
xchg
inc
je
sub
and
je
lret
lcall
or
sti
cmp
and
aas
sti
or
xchg
jmp
push
insb
add
dec
idiv
aas
push
pop
into
or
sbbb
mov
imul
out
jge
pop
jne
aas
rorb
es
add
sub
into
es
sub
not
push
lods
stos
inc
icebp
xchg
sub
imul
fildll
push
insl
add
add
cmp
sbb
push
stc
mov
arpl
int3
mov
sub
cltd
movsb
ficoms
sub
push
cmp
les
out
mov
ja
das
fiaddl
cltd
push
inc
mov
xchg
popf
jg
cld
and
sahf
xor
outsb
cmpl
mov
in
pushf
std
rcrb
sub
lcall
jg
xor
adc
xchg
pop
in
popf
out
aaa
scas
cmpsb
ret
adcl
jg
or
outsl
fiaddl
adc
imul
sbbl
jbe
lret
aam
push
push
and
movsb
sbb
lcall
test
inc
xor
lahf
mov
scas
inc
shr
rcll
sub
pop
mov
inc
mov
shr
sub
xchg
lahf
dec
stos
movsb
test
xchg
std
int3
icebp
xchg
or
jno
jbe
out
ljmp
das
adc
cld
sbb
sub
jle
cs
or
leave
push
sbb
mov
mov
sub
ret
sub
popa
stos
ret
lock
and
ror
outsl
lds
int3
mov
fs
fldt
adc
mov
sub
mov
in
aam
loop
lods
adc
test
roll
lret
stos
mov
and
loope
les
and
mov
aaa
dec
popl
adc
outsb
push
mov
push
nop
cmp
jno
xor
mov
int3
mov
in
clc
and
cmp
cmp
mov
inc
cmp
movsb
xchg
shll
xor
clc
test
cmp
push
dec
cmp
enter
and
in
pop
xchg
jnp
push
adc
repnz
dec
dec
std
mov
adc
cmp
sahf
mov
xchg
aaa
jl
mull
inc
cmp
jno
jmp
ficomps
lret
push
es
sub
jo
sti
sub
xor
out
lods
std
lods
pusha
insb
pop
push
data16
lret
pop
xchg
mov
or
xchg
das
in
jb
stos
daa
pusha
fwait
aam
adc
and
loop
mov
dec
sub
jmp
push
stos
cmp
and
ror
ja
lock
cmp
add
test
scas
lea
nop
cltd
fsubrs
leave
sub
cltd
mov
cmp
mov
xchg
gs
or
les
xchg
jne
movsb
push
fs
flds
into
and
aaa
call
daa
mov
push
and
jmp
xchg
push
mov
push
jp
dec
jne
je
fs
add
sbb
stos
xchg
jle
sti
and
jno
or
aas
out
fimuls
xchg
jb
cmp
sub
fistps
in
push
sub
leave
mov
dec
sarl
clc
sti
fsubrl
test
cmpsl
cli
xor
lods
gs
cmp
jl
shrb
mov
mov
jmp
add
test
cmp
and
loopne
aaa
mov
loopne
mov
call
pop
dec
xor
aad
dec
iret
or
lahf
gs
xor
clc
les
js
cwtl
dec
push
fdivs
dec
aaa
inc
das
push
in
pop
jge
xchg
push
sub
ds
xchg
add
mov
aaa
cmp
mov
xchg
lods
movsl
js
outsl
lea
inc
cmp
loop
vmwrite
cmovae
add
mov
add
flds
mov
cmp
nop
mov
leave
ret
pop
int
pushf
push
dec
data16
test
pop
jmp
mov
dec
sbbb
pop
and
mov
xor
push
pop
jmp
movsb
mov
cmp
inc
sbb
scas
and
lds
sub
inc
or
popf
lcall
popl
xor
mov
mov
push
mov
je
dec
sub
lahf
mov
ja
mov
pop
dec
cmp
inc
mov
inc
out
pop
repz
inc
jne
dec
movsl
inc
insb
mov
cltd
lods
mov
mov
pop
jmp
dec
jbe
popa
popf
mov
mov
mov
test
cmpsb
xor
shr
sub
pop
mov
fwait
jle
jmp
mov
inc
sbb
push
xor
test
dec
int3
jp
mov
out
mov
mov
sbbb
shll
gs
pusha
cmpsb
lahf
in
push
sub
out
leave
ret
int3
iret
adc
mov
cmpsl
push
insl
in
int3
mov
mov
xor
pop
adc
aas
xchg
addr16
cmp
sbb
outsl
and
mov
adc
mov
int
int
xchg
in
add
sbb
insb
or
sub
cmp
cmpsl
add
sarl
pop
rorl
test
jge
ret
lcall
cmp
xchg
lock
lea
in
test
jecxz
cmp
push
add
aaa
and
icebp
ss
sti
jae
aad
mov
int
pushf
jnp
and
shll
insl
mov
xchg
rol
inc
xlat
push
mov
sub
dec
sub
jmp
pop
cmp
les
fcom
mov
ret
movsb
mov
mov
lock
mov
cmp
jnp
mov
orl
lods
in
aas
xchg
repz
aam
mov
scas
iret
or
jmp
xchg
jae
inc
jp
subb
lods
xor
lahf
or
mov
movsl
rcrb
adc
cwtl
pop
pop
adc
mov
fdivr
aaa
nop
insb
clc
mov
xor
in
notl
xor
ja
cmc
cmp
jge
jmp
sarl
stc
sub
pop
stc
add
sbb
or
cmp
out
dec
decb
fmuls
adc
outsl
lock
jne
mov
cmpsl
sub
lds
ss
loopne
ret
mov
push
imul
cwtl
fprem1
pop
sub
sub
pop
aaa
push
push
push
lock
adc
rcrb
jge
aad
cli
mov
bound
xchg
rorb
add
cmp
jmp
jae
outsl
subb
jge
xor
push
popf
mov
dec
xchg
push
push
jns
xchg
push
and
xchg
daa
or
mov
dec
sbbb
mov
shlb
mov
push
daa
lods
lock
sbb
pop
or
jno
xchg
mov
xchg
push
sub
dec
cmp
test
or
push
lods
add
inc
push
pushf
fdivrs
ljmp
xor
mov
stc
pushf
popf
xor
and
fnstenv
xchg
lahf
xchg
sahf
imul
inc
pop
pop
pop
cmc
mov
push
mov
inc
shll
les
les
int
push
mov
dec
sbb
je
xchg
adc
fstpt
ljmp
loope
sbb
out
push
popa
int
xchg
mov
adc
loope
or
fsubrl
mov
mov
inc
xchg
sub
movsb
decl
sbb
cmpsl
push
cmp
hlt
pop
fwait
mov
aam
je
sub
sub
sbb
lea
xchg
cmpsl
fisttps
jo
xor
pop
pop
inc
pop
stc
sahf
repz
psubsw
subb
pop
cs
sar
add
push
aaa
push
in
jbe
add
or
das
sahf
or
enter
pusha
pop
cmc
jo
xchg
mov
out
mov
inc
and
es
jnp
ljmp
add
ljmp
dec
test
xchg
orl
xchg
mov
out
imul
cmp
clc
mov
fidivrs
dec
ss
insl
dec
cmp
in
ret
mov
mov
inc
xchg
stos
inc
sub
shlb
sub
push
adc
add
mov
jmp
stc
shlb
outsl
sbb
jb
cmpsl
add
out
adc
bound
lods
repz
shll
mov
test
push
cmp
cmp
pop
push
jne
mov
data16
add
xor
ret
add
xchg
add
cmpl
out
fst
popf
imull
popa
repz
ficoml
aam
sbbb
pop
add
test
sbb
pushf
sahf
das
jae
ret
sbb
push
adc
pop
div
xchg
adc
mov
mov
outsl
scas
mov
pop
pop
outsb
sub
mov
push
add
add
fmull
int
nop
sub
push
sbb
popa
xchg
stos
sub
xor
xor
daa
jmp
addr16
fadd
jg
cmpsb
gs
dec
adc
shl
jno
add
pop
mov
dec
popa
jle
dec
jge
sub
and
cmp
rolb
dec
inc
mov
lea
xor
or
push
jg
repnz
fcoml
sub
cwtl
out
mov
mov
dec
push
int3
push
pop
push
xor
add
push
pop
push
fisubrl
pushf
ljmp
clc
or
ret
xchg
push
jns
ffreep
and
push
dec
fwait
addr16
into
shlb
sbb
movsl
out
subb
push
test
mov
mov
fidivs
push
fisubl
dec
mov
dec
sbbl
mov
js
push
mov
movsb
dec
dec
out
outsb
call
sarb
clc
out
push
jns
pop
push
shlb
test
jns
add
jmp
inc
imul
dec
jl
out
push
sub
xor
ja,pn
repnz
fadds
or
jbe
mov
stos
dec
mov
cwtl
in
lret
and
fists
fisubrs
sahf
and
and
add
shll
jno
pop
in
push
test
sub
adc
or
lods
push
addl
xchg
jmp
insl
in
jle
xchg
fs
repnz
dec
xchg
mov
das
aas
test
cmp
mov
xchg
lcall
test
stos
inc
gs
inc
daa
dec
arpl
out
imul
insl
pushl
lret
or
inc
leave
cmpsl
ljmp
lds
mov
loope
pop
mov
cmc
pop
ffreep
mov
jb
or
rolb
xor
lret
incl
mul
sub
imul
jbe
adc
push
ret
pop
cmp
fists
jmp
jnp
test
sub
imul
fwait
mov
push
outsb
sti
ret
pop
adc
jno
lret
xchg
push
loop
xlat
jg
shlb
or
mov
scas
movsl
pop
leave
rcr
add
insb
jo
mov
sub
arpl
pop
xchg
or
sti
dec
push
bound
addr16
stos
or
pop
push
xor
inc
mov
icebp
fidivs
and
mov
loop
scas
pop
cmp
bound
xor
xchg
inc
mov
cmp
insl
mull
pushf
pop
outsb
push
add
lahf
mov
dec
lahf
sti
int3
jne
sbb
adc
aas
pop
arpl
int3
rcrb
mov
mov
add
arpl
and
pushw
jle
ljmp
push
or
fs
fwait
add
test
jbe
std
jbe
imull
fwait
mov
xchg
rsqrtps
inc
mov
in
and
pop
mov
mov
in
ret
xor
xchg
call
sub
push
js
daa
jge
mov
push
xor
dec
popa
xchg
pop
sub
xor
mov
leave
inc
mov
cltd
pop
fcmovbe
in
fcomps
xor
es
sbb
imul
pop
adcb
inc
inc
xchg
repnz
nop
mov
rcrl
sbb
adc
or
cmpsb
jae
and
inc
pop
ja
insl
js
jmp
es
push
imul
pop
sbb
push
stos
rcrb
ja
or
xor
inc
outsl
in
mov
shlb
or
dec
lret
insl
mov
mov
jle
mov
mov
movsb
scas
adc
pop
jg
mov
jp
push
jbe
mov
rorb
cmp
repnz
mov
mov
stos
mov
sbb
mov
push
mov
or
addr16
test
call
cli
xor
sub
je
adc
test
rorl
repnz
push
pop
inc
iret
add
xchg
leave
mov
jae
cmp
loope
xorb
jno
jecxz
shl
sbb
sbb
ljmp
sbb
add
cmc
fmull
mov
xchg
ds
mov
sub
pop
mov
mov
pop
cmp
mov
adc
xchg
add
push
bound
inc
dec
mov
lea
xchg
out
gs
cmp
mov
and
sarl
sub
and
xor
int3
into
mov
adc
in
imul
in
cmp
aaa
sbb
lock
push
cmp
aas
and
mov
nop
lods
jo
ljmp
xlat
jb
scas
inc
xchg
insl
pop
sub
or
je
ds
pop
fld
push
mov
xchg
mov
movsl
loopne
sub
inc
add
je
jno
dec
xor
mov
ret
xchg
pushf
or
and
dec
sbb
outsb
xchg
cmp
mov
inc
add
aaa
sbb
daa
push
mov
std
and
mov
shll
js
outsb
dec
aam
bound
outsl
aam
cs
rcll
enter
pop
cli
and
in
xchg
test
adc
add
sub
mov
inc
rorb
aaa
sub
jns
inc
cltd
inc
push
xlat
inc
aaa
pushf
push
dec
cmpsl
shll
pop
lahf
xor
adc
xchg
js
or
incb
enter
push
popa
mov
cmp
sbb
ficoml
inc
clc
cmp
int3
ja
rcrb
orb
sub
scas
add
rorl
push
fimull
pop
pushf
popa
pop
xchg
sub
mov
test
aaa
rcll
sub
dec
xor
popa
xor
push
loope
or
pop
sbb
inc
fsubl
xor
add
dec
mov
aaa
sub
fs
lds
fwait
shrb
mov
xchg
in
pop
aad
mov
cwtl
xchg
sub
fldenv
les
sub
outsl
dec
mov
rorl
jle
mov
jae
pop
lods
fildl
sahf
jae
add
push
imul
jmp
add
inc
cwtl
push
repnz
std
mov
xor
clc
rclb
divl
fs
test
stos
push
jb
hlt
fdiv
and
fs
xchg
jl
outsb
shrl
sub
push
outsl
push
ss
int3
in
inc
clc
shlb
push
jle
mov
out
rolb
pop
xor
jmp
add
add
xor
mov
int3
mov
xor
dec
sbb
xor
cli
into
rcrb
pop
leave
cltd
mov
dec
hlt
icebp
mov
xor
sub
imul
orl
pop
push
or
hlt
iret
es
and
lock
js
mov
scas
std
bound
add
aam
cmp
xchg
pop
push
xchg
xor
sarb
push
into
sbb
xchg
orl
mov
cmp
sub
dec
leave
shrb
mov
adc
push
ror
cmp
sub
pop
mov
mov
pop
sbb
pop
mov
or
lods
mov
les
jne
mov
shr
and
fnstsw
daa
sub
in
fistpl
mov
or
testl
loope
fsubl
xchg
cs
lds
jl
arpl
into
aad
imul
push
mov
adc
push
add
inc
into
cwtl
ja
scas
jecxz
pop
xor
lds
adc
or
and
push
cmp
call
fidivs
les
jae
outsl
jno
aas
xchg
enter
in
mulb
lret
pop
stc
cmp
ds
mov
imul
loope
rorl
std
pop
sub
mov
dec
fisubl
pop
and
and
scas
pop
adc
mov
or
ss
jae
push
cmp
scas
mov
jge
popf
pop
in
stc
cmp
sub
fistps
sub
outsb
mov
add
add
adc
scas
or
arpl
jmp
xor
and
mov
adc
mov
and
test
int
jmp
push
inc
cmpl
sub
adc
xlat
xlat
das
cwtl
jb
lods
jne
mov
mov
mov
and
stos
in
int
sub
xor
push
xchg
mov
pop
mov
lahf
and
ret
mov
inc
out
jb
cwtl
jl
out
insl
mov
sub
lcall
pop
push
sub
and
in
outsb
addr16
repz
jmp
cld
push
sbb
std
popa
mov
cmp
jno
sbb
xchg
mov
cs
dec
inc
je
arpl
fisubs
jne
adc
out
dec
inc
mov
sti
xlat
bound
ja
inc
stos
xchg
lods
rol
repnz
xchg
or
jne
xor
arpl
int
xlat
lcall
dec
outsb
mov
dec
add
lea
mov
sarl
mov
or
sarl
out
cltd
sub
loopne
sbb
push
lcall
cli
sbb
inc
stos
lcall
inc
fdivs
mov
xchg
pusha
repnz
repz
pop
dec
lahf
push
mov
insl
xor
jo
add
inc
in
sub
push
push
mov
std
push
mov
aad
sbb
xchg
addb
lea
xor
test
leave
gs
cmp
mov
and
push
or
dec
and
call
cmp
icebp
es
je
cmpsl
roll
mov
roll
sbb
add
push
add
add
and
test
arpl
std
movsb
in
cwtl
in
ret
test
pop
out
pop
push
xchg
shl
dec
or
xor
aad
ss
fistpll
xchg
mov
mov
fwait
divl
jp
lret
lea
push
test
stos
inc
shlb
and
sbb
lods
sbb
pop
stos
or
ss
test
mov
jno
cmp
xchg
insb
xor
push
xchg
mov
xchg
adc
js
mov
iret
push
or
pop
jnp
or
pop
add
enter
inc
mov
mov
aas
fldl
add
lret
cs
and
mov
adc
mov
cmp
mov
ja
xchg
sub
fcoms
or
mov
push
push
jo
shlb
mov
xchg
jmp
in
inc
sbb
cmp
mov
dec
pop
cli
fisubl
mov
sbb
xchg
rorl
and
lods
inc
lret
dec
push
fldl
xor
dec
pop
loope
mov
xchg
aas
adc
sbb
int3
test
loop
cmp
fldenv
mov
inc
fs
pop
jae
mov
and
fimuls
popf
pop
in
and
nop
add
into
aaa
pop
cmp
xorl
mov
xchg
adc
xchg
xchg
std
in
hlt
fidivrs
cmp
lret
xlat
ficomps
cmpsb
insb
sub
into
testb
pop
outsb
aam
pop
std
loopne
xchg
xchg
cmp
sub
fsubs
int
adcl
das
mov
sbb
imul
xlat
in
dec
push
jns
call
mov
lods
mov
jecxz
jmp
bound
cmp
push
adc
lahf
into
hlt
cld
dec
fsubl
pop
add
js
cmpsl
lods
insb
mov
pop
nop
stc
and
xchg
int3
subb
movsl
pop
loopne
xchg
repz
and
pop
pop
cmc
decb
push
in
int3
lea
dec
jmp
inc
enter
xchg
ret
aam
sbb
push
mov
sub
mov
and
inc
inc
mov
sub
neg
xchg
sahf
rolb
ror
sbb
sub
rcll
fadds
add
stos
ds
push
push
push
mull
test
inc
mov
sbb
mov
mov
out
jp
subb
dec
call
cmp
add
add
cmp
fldt
xchg
dec
fcoms
mov
js
aas
clc
xor
dec
cmp
stos
insl
mov
mov
int3
sub
fwait
sahf
lds
sub
andl
mov
das
add
insl
xor
loop
lret
mov
push
mov
or
mov
xor
inc
jl
fsubs
inc
dec
xchg
inc
pop
adc
cmp
repnz
pop
pop
lahf
xor
test
mov
pusha
mov
loope
or
dec
clc
xchg
int
xchg
sub
dec
jg
and
das
sti
jbe
imul
leave
test
lret
adc
in
mov
lds
shl
and
movntq
or
daa
dec
mov
or
dec
nop
addr16
les
sub
out
and
or
test
fists
push
movsb
cmpsb
aaa
data16
and
push
insb
or
jg
icebp
adc
cmp
push
pop
int
les
mov
inc
stos
push
sub
outsb
in
mov
xchg
fmuls
ret
in
iret
jae
sub
test
in
pop
inc
xchg
out
sbb
push
jnp
sbb
push
lock
es
jg
sbb
or
cwtl
std
rcl
bound
pop
mov
aas
inc
cmp
in
mov
pop
push
nopl
popa
popa
dec
and
cmp
out
and
lock
sub
xchg
mov
mov
lahf
jge
or
cmp
in
das
xor
jp
jno
call
dec
jno
arpl
ds
leave
or
mov
fmuls
aam
pushf
jno
xlat
mov
hlt
add
inc
mov
sub
push
loopne
jl
xor
out
adc
loope
pop
jmp
add
mov
push
loop
imul
repnz
nop
pop
in
xor
mov
xlat
cmp
or
cltd
inc
mov
push
clc
fwait
loopne
cmp
pop
push
pushf
add
push
outsb
hlt
or
jp
mov
movsl
jno
and
xor
in
push
xor
sarb
cmc
jmp
jp
inc
les
pop
mov
push
bound
pop
mov
movsb
hlt
daa
fs
and
js
loop
inc
cmpsb
lds
inc
xor
cmpl
xchg
mov
call
cmp
jnp
std
popa
pop
jae
stc
inc
jp
jns
inc
add
pop
je
cli
mov
repnz
ss
mov
sub
push
lods
loope
mov
adc
fisubs
mov
and
lds
cmp
push
cmp
enter
imul
jbe
dec
push
rcrl
pop
add
sbb
push
out
mov
mov
dec
pushf
push
je
inc
mov
jnp
les
mov
aas
in
cld
adc
sub
cld
jns
sub
push
je
sbb
xchg
push
lods
scas
sahf
rolb
inc
inc
xchg
xchg
stc
fimuls
pop
mov
imul
adc
leave
rorl
push
jbe
lcall
repz
clc
enter
mov
mov
mov
mov
outsb
mov
ds
pop
js
test
ficoml
cmp
das
mov
hlt
adc
xor
sbb
les
inc
cmp
bound
sbb
loope
lds
jg
sbb
sub
or
fwait
mov
pop
fstpt
hlt
fldcw
movsb
xchg
stos
xchg
cmp
sbb
sbb
push
out
jg
mov
outsl
out
int
mov
mov
dec
imull
xor
loopne
cmp
push
push
jmp
xor
outsb
mov
xlat
lock
lahf
imul
sub
aam
mov
popf
mov
imul
xor
mov
sbb
cld
ss
ja
pop
pop
loope
fiadds
adc
pop
inc
sub
shlb
out
jle
in
push
pop
jo
pusha
mov
jns
pop
stos
mov
jecxz
cmp
lret
dec
call
dec
dec
shll
or
inc
fxch
repnz
jns
add
sbb
nop
push
or
out
dec
inc
clc
cs
push
shrl
xchg
sbb
push
pop
inc
fistpl
cmpl
xor
xor
xor
push
sbb
and
repz
sti
cld
sarl
add
push
outsb
pushf
and
adc
and
lock
jle
or
mov
mov
shl
jecxz
xor
fbstp
ss
sub
mov
ss
inc
adc
mov
add
jl
sub
shll
imul
jne
aaa
dec
fs
mov
xor
in
addr16
popa
fucomi
cwtl
jbe
mov
add
jnp
mov
jae
or
idivb
mov
mov
pop
adc
jbe
cmpsb
mov
pop
mov
or
rorb
mov
add
push
cmpb
xlat
ror
and
mov
push
cmp
jns
mov
and
imul
lret
sarb
adc
push
punpcklwd
out
mulb
ror
es
out
rcrl
imul
roll
sub
andb
fwait
gs
fsubp
xchg
cli
call
enter
or
mov
or
push
cmp
outsl
subl
xchg
cmp
mov
add
js
iret
popa
fwait
out
into
add
inc
cmp
std
stos
mov
jne
cmp
ja
dec
adc
sbb
sub
dec
jno
sub
or
stos
adc
cmp
mov
dec
sub
mov
pop
test
inc
popf
xor
mov
movsl
xor
fs
daa
adcb
imul
and
sbb
or
pop
lcall
iret
aas
jne
lcall
dec
or
push
cmp
inc
repz
dec
orb
mov
mov
dec
and
test
fs
lock
notl
mov
push
inc
repnz
je
lods
es
gs
loop
fbld
push
or
push
jg
sbb
in
nop
sbb
cmp
fidivs
lea
fldcw
in
int
or
in
dec
push
loop
loope
mull
addr16
ljmp
xchg
clc
pop
sub
push
bound
ret
ss
mov
jmp
mov
cmp
fldcw
data16
add
xor
or
mov
rcrb
cli
aad
call
inc
add
push
aad
js
jp
js
enter
inc
stc
sbb
fucomi
adc
inc
mov
outsb
jl
movsl
leave
out
adc
std
fdivs
mov
insl
pop
cli
inc
cmpsl
mov
outsb
and
mov
repnz
popa
ret
pop
out
aad
aam
out
inc
pop
xor
imul
int3
push
xor
dec
out
xchg
sbb
les
push
loope
pop
push
cwtl
pop
jbe
or
shll
or
lods
sub
add
xchg
sub
adc
ds
jae
ror
inc
wrmsr
aam
push
clc
das
aaa
cmc
push
push
xchg
adc
push
pop
mov
test
jno
sub
cmp
sbb
repnz
insb
fimull
xchg
sub
push
add
jns
shl
ja
loopne
and
sti
and
xor
pop
pop
inc
cltd
push
fistpl
lods
or
sub
int
fsubrs
or
xchg
and
sub
das
pop
xchg
dec
ss
sbb
xlat
fwait
mov
daa
stc
testl
add
in
xchg
ret
inc
sub
popa
push
add
shll
incl
pop
mov
das
movsb
mov
insl
xchg
lret
or
inc
lock
pop
scas
jno
sbb
dec
jle
repz
xor
xchg
add
hlt
lret
mov
aad
push
jnp
mov
inc
cmp
ljmp
cmpsb
scas
movq
aad
cs
loopne
cmp
dec
jecxz
jmp
cmpsb
mov
mov
mov
mov
fsub
and
mov
push
mov
outsb
adc
mov
mov
mov
jne
test
sbb
dec
sbb
mov
jo
mov
icebp
aam
xchg
inc
out
push
push
push
dec
pop
add
push
or
push
shlb
aas
or
sbb
addr16
add
inc
xor
jge
call
and
leave
dec
sti
ss
lret
test
sti
in
stos
and
into
xchg
leave
adc
cmp
incl
leave
dec
mov
mov
inc
pop
mov
cs
push
aas
in
jns
mov
in
push
jnp
in
sub
adc
jno
mov
shrb
rclb
sahf
lret
out
loopne
jp
mov
int3
jae
sub
pop
or
jge
movq
xchg
cli
jge
mov
cmp
fstpl
dec
das
mov
inc
shrl
and
pop
aas
addr16
jle
out
gs
loope
aam
jne
xlat
mov
mov
jmp
mov
shl
cmc
js
inc
push
adc
test
dec
cmp
loop
test
jbe
cmp
std
rcll
ficoml
in
xor
mov
rcr
jb
or
and
cwtl
test
bound
and
les
push
inc
addr16
and
xchg
inc
lods
aam
ja
sub
jmp
clc
test
in
sub
lret
mov
sbb
orl
mov
mov
mov
sub
movsl
int3
cmpsl
xlat
mov
mov
cmp
ljmp
sbb
lahf
mov
scas
push
jp
xchg
inc
outsl
sbb
adc
rolb
mov
adc
jne
fstp
js
inc
negl
push
stos
andl
stos
rcll
into
cmp
std
push
adc
test
sub
cmp
je
jae
stos
in
imul
scas
ljmp
cmp
pop
jecxz
pop
jnp
mov
cs
test
or
scas
cmp
pop
mov
mov
cmp
jne
mov
out
mov
xchg
or
fcmovnb
xor
insb
stc
sar
jb
jbe
mov
idivl
into
mov
pop
in
mov
cli
pop
inc
add
test
jno
ljmp
cmovnp
push
je
mov
push
fildll
xor
in
int3
xor
jge
stos
fs
inc
cmpsb
mov
or
ljmp
scas
push
inc
mov
insl
out
inc
mov
jb
je
scas
sub
mov
mov
aad
dec
addr16
sub
lock
sahf
adc
jnp
shrb
je
dec
push
inc
rclb
mov
jbe
adc
cmc
push
push
or
arpl
xor
mov
mov
mov
lea
push
aam
or
lods
xor
push
ss
jb
data16
rcr
out
gs
fwait
xor
shll
jge
dec
inc
mov
xchg
xchg
aam
repz
push
ss
jae
cld
cmp
jmp
popf
adc
outsb
cmp
leave
dec
dec
and
das
pop
ja
sbb
daa
orb
inc
or
mov
cwtl
mul
push
xor
xor
lret
jbe
or
sub
arpl
jle
sbb
pop
lock
sbb
mov
idivb
test
iret
lcall
fiadds
mov
mov
test
and
repz
stc
dec
add
aad
jle
pop
lods
pushf
inc
lahf
adc
lcall
fisttpll
mov
push
push
notb
out
das
pop
inc
mov
ja
sub
aam
cmpsb
sbb
xor
xor
adc
or
push
clc
cmp
lahf
idivb
adc
fnstsw
sbb
rolb
xor
js
and
inc
pop
sub
mov
inc
cmp
outsl
fs
std
arpl
and
in
jge
jne
pusha
loope
mov
cli
inc
mov
cmp
dec
mov
pusha
jg
iret
or
imul
sarl
cmpsb
dec
mov
aaa
fwait
lds
rcrb
push
imul
mov
es
push
and
sub
cmpsl
dec
sbb
jmp
movsb
sub
out
inc
imul
mov
pop
data16
xorb
flds
inc
ret
push
xchg
mov
call
cwtl
rorb
stc
add
js
sbb
dec
xlat
xor
pop
les
inc
shll
push
sbb
sub
lds
mov
mov
ja
fidivrs
push
repnz
fcmovnu
pop
nop
push
pop
outsb
or
jp
cmp
mov
rcll
xchg
mov
fdivl
shll
mov
cmp
add
aad
push
and
mov
mov
push
in
dec
inc
cmc
mov
scas
fadd
aaa
fs
and
xchg
imul
jmp
das
and
lahf
inc
pop
lret
sbb
or
insl
jae
push
loope
adc
sti
sarl
stos
lds
cmp
push
mov
rcrb
clc
leave
dec
cmp
add
inc
enter
jecxz
pusha
add
push
xor
pop
xchg
fimuls
push
fcmove
sub
xor
push
jecxz
mov
cmp
lahf
cld
mov
cld
push
in
mov
test
dec
pop
leave
sahf
lock
stos
leave
ds
sub
jbe
dec
and
add
cmp
adc
push
adc
lds
fstl
mov
push
mov
popa
in
lcall
xor
pop
add
inc
mov
popf
mov
ds
cmp
push
leave
or
push
mov
ss
or
push
jecxz
cwtl
xor
shrb
js
xchg
aad
xor
and
test
stc
cmp
lret
dec
fsub
bound
or
push
mov
jae
jmp
adc
arpl
frstor
cmp
stc
push
push
lahf
les
sbb
pop
mov
jns
inc
and
ljmp
ja
fdiv
and
push
jb
mov
scas
pop
leave
js
xor
jbe
add
lds
mov
push
fidivrl
ljmp
mov
pop
sub
cmp
imul
mov
fisttpl
dec
dec
inc
xor
lods
das
pop
xchg
mov
ss
ret
sti
adc
es
rolb
stc
incb
add
jp
mov
fucomip
lcall
pop
xlat
pop
rcrl
push
pusha
sub
addr16
daa
xorb
fidivl
test
or
out
adc
gs
dec
fwait
arpl
sbb
sub
mov
popa
push
add
hlt
lcall
bound
inc
lds
aam
pushf
pushf
cmpsl
cmp
mov
bound
ffreep
scas
ds
lods
pop
cltd
out
xorl
cmp
hlt
mov
cmp
outsb
xchg
add
mov
lret
and
lds
in
loope
lcall
push
adc
or
dec
shrb
jbe
scas
sub
jne
jmp
or
sbb
mov
jno
push
xor
inc
subb
ss
or
dec
lcall
iret
mov
sbb
insb
das
jl
lret
imul
push
push
cmp
xchg
cld
pop
das
movsb
and
test
mov
lret
lcall
mov
push
lods
dec
cs
aad
rcll
adc
xchg
lods
cli
xchg
jne
fisttpl
lods
xor
out
pop
or
dec
xlat
clc
gs
push
sbb
pushf
int
pop
cmp
lret
call
dec
loop
xor
sub
add
jge
sub
pop
dec
xor
je
sub
lret
hlt
jp
cmpsl
ds
std
shlb
repz
xchg
mov
ret
mov
push
aaa
push
mov
nop
lret
clc
std
push
mov
loop
sbb
and
sub
xchg
sbb
shl
xchg
cmpb
fldt
sarl
adcl
mov
push
mov
mov
iret
mov
or
mov
xor
or
or
scas
orl
outsl
mov
xchg
js
xchg
sbb
cmp
imul
mov
mov
mov
movsb
pop
dec
xchg
push
add
sub
repz
push
lds
jae
lcall
arpl
fimull
pushl
xchg
test
lods
mov
dec
in
out
out
push
adc
jmp
stos
rcrb
sub
scas
inc
inc
out
aam
gs
in
idiv
cmpb
imul
cs
jecxz
dec
sbb
jg
sub
push
mov
xor
push
test
xchg
in
dec
scas
pusha
insl
mov
or
add
or
inc
cmp
or
imulb
push
sahf
faddl
push
or
push
xor
dec
mov
testl
lock
popa
adc
les
or
sbb
test
cvtdq2ps
sub
jp,pt
mov
in
mov
sbb
mov
mov
stos
adc
push
xchg
or
pop
ljmp
imul
xor
stos
cmc
enter
push
popf
jp
xchg
fisttpl
jb
dec
mov
xchg
rorl
mov
cltd
or
push
dec
js
insb
shll
mov
lods
out
ret
mov
test
sbb
or
inc
adc
inc
fs
sti
cmp
jb
out
mov
mov
pop
mov
xchg
add
pushl
pop
jecxz
dec
gs
dec
push
fistl
decl
sbb
push
mov
scas
jbe
movsb
icebp
jbe
repz
xor
sub
data16
fimuls
or
bound
jp
inc
addr16
xchg
adc
pop
stos
sub
out
aad
mov
push
insb
sub
dec
shlb
in
xor
mov
mov
jns
add
inc
pushf
movsl
pop
cltd
inc
jnp
inc
or
stos
mov
jmp
mov
xchg
into
xchg
inc
xchg
add
lret
test
push
add
inc
ss
sbb
mov
pop
loope
xchg
orb
mov
out
or
xor
daa
incl
or
mov
fcos
mov
add
movsb
lock
imul
popa
mov
iret
mov
cmp
push
test
loope
imul
outsl
mov
insl
mov
repz
jb
xor
pop
nop
je
adc
lret
out
imul
adc
dec
sbb
jmp
stos
xchg
jb
mov
sahf
idivb
pop
stos
jmp
xor
inc
mov
insb
dec
adc
cmp
fcmovnbe
popa
add
in
stos
push
out
fistpll
dec
not
pop
cmp
in
pop
xchg
cmp
dec
mov
imul
and
lock
jae
lods
decb
stc
test
sar
cmpsl
je
shr
ljmp
jne
pop
mov
pop
repnz
fwait
sub
add
repz
ljmp
add
rcrb
aam
cmpsl
or
addl
jne
in
nop
ret
jne
push
push
scas
aad
xor
lock
scas
and
arpl
cwtl
mov
or
xchg
push
mov
xor
pop
sbb
add
insl
movsl
xor
cmp
jmp
and
jle
adc
or
scas
mov
pop
xchg
imul
or
sbb
and
call
gs
dec
lock
aam
jge
or
push
loopne
sti
repz
mov
inc
jo
lds
and
in
or
jb
inc
cmc
mov
in
fimuls
ds
mov
and
mov
sbb
jmp
leave
and
loop
stc
movb
push
or
inc
icebp
xor
inc
fdivrs
nop
mov
sbb
inc
sub
inc
pop
aam
icebp
mov
xchg
mov
or
int
xchg
inc
cmp
dec
incb
dec
push
in
daa
xchg
add
insl
fisttpll
aam
push
shll
sub
mov
insb
sti
inc
xchg
or
pop
bound
out
pop
js
pop
and
push
scas
mov
mov
jb
dec
popa
out
xlat
loopne
gs
jb
ficoms
sbb
cmpsl
mov
mov
xchg
cmp
pop
loope
clc
push
mov
rolb
addr16
pusha
out
xchg
pop
mov
rclb
pop
cltd
scas
test
inc
mov
lock
jl
push
int3
inc
sbb
sbb
sbb
fwait
stos
lock
mov
out
cli
enter
push
cltd
mov
push
pop
xchg
out
mov
pop
outsb
rcll
loopne
xchg
sub
imul
addr16
dec
outsb
dec
loop
adc
xchg
in
push
push
popf
or
mov
dec
sbb
repz
mulps
or
outsl
mov
mov
nop
ja
pop
push
aas
fidivl
lret
call
inc
pop
pop
cmp
push
mov
jae
data16
cs
push
xor
dec
add
popf
sub
out
dec
lods
jns
jne
sbb
into
push
and
push
incb
int3
sbb
ss
and
call
and
fstpt
js
and
shrb
mov
push
fadd
dec
xchg
sub
mov
in
cmc
aam
test
xchg
jg
jne
add
repz
clc
cmp
dec
cmp
je
push
cwtl
int3
and
xchg
jl
sbb
fwait
arpl
cmp
ret
cli
cmp
mov
push
fucomi
popf
add
mov
std
or
dec
xchg
push
push
push
add
xchg
leave
call
repz
ljmp
jbe
lret
add
in
xor
push
sub
jle
jno
mov
cmp
mov
jae
es
call
cld
cmp
push
js
nop
int3
fldenv
stos
ror
addr16
cmp
insb
jge
jno
and
add
mov
subb
shll
shll
decl
call
sti
inc
movsb
in
fdivl
adc
loop
ret
pusha
push
sarl
and
leave
mov
lret
lret
cmp
cmp
sub
adc
dec
push
loopne
xchg
fs
fsubrs
sbb
sbb
sub
xor
stos
add
xchg
lcall
mov
ret
loop
repnz
ja
sbb
mov
mov
mov
jbe
stos
loop
iret
dec
lea
lret
mov
xor
pop
push
pop
cmp
out
icebp
dec
mov
ret
pop
fdivs
fwait
insb
adc
nop
adc
adcl
mov
xor
and
roll
popa
xchg
repz
and
es
mov
dec
inc
mov
mov
push
mov
lcall
sbb
lea
xchg
pop
test
std
sbb
scas
aas
xchg
shlb
mov
fcomip
aaa
stc
jb
mov
gs
insb
leave
pop
fdivrl
jb
ss
std
stc
xor
pop
outsb
xchg
aad
add
dec
rorl
sbb
out
movsl
dec
fwait
notl
popf
pop
push
mov
adc
cltd
xchg
fisttpll
test
xchg
enter
mov
pop
out
xchg
loop
nop
das
xchg
mov
test
cmp
jae
ljmp
add
cmp
test
cltd
gs
int
loop
or
lret
rcll
push
rclb
out
scas
ds
push
cwtl
mov
mov
mov
mov
orb
jecxz
je
dec
call
shl
inc
sub
and
adc
test
xchg
add
lea
std
sbb
and
das
fbld
filds
scas
in
negb
filds
aam
sub
imul
add
jle
sub
rcl
pop
pop
push
test
xchg
mov
dec
jmp
in
and
xchg
mov
lock
and
decl
inc
insb
fstl
xchg
data16
pop
in
push
shlb
mov
ja
push
ret
inc
fldenv
xor
mov
pop
imul
jb
jno
into
dec
icebp
daa
out
and
mov
sbb
mov
cmp
jns
inc
movsl
sub
jo
js
pop
xchg
mov
mov
jl
cwtl
pop
dec
push
inc
mov
rcrl
inc
add
inc
aaa
inc
fmuls
packuswb
xchg
push
pop
ficompl
jb
adc
rcl
sti
popa
push
mov
dec
in
adc
ja
movsb
mov
jb
stc
cmp
inc
jne
xchg
mov
lock
xchg
fsubs
and
or
cmc
lods
pop
fadd
std
daa
es
gs
outsl
or
mov
hlt
dec
xorl
fists
or
insl
std
repz
jmp
xor
insb
in
addb
push
mov
sbb
sub
std
mov
or
xchg
out
pop
mov
cmp
inc
cmpsb
xchg
aas
outsl
add
out
lods
lods
jl
cmp
push
add
dec
loope
popf
decb
stc
xchg
fisttpl
dec
inc
lds
push
repz
and
xlat
xchg
jmp
loop
push
fldt
lods
mov
jle
out
pop
hlt
adc
jne
outsl
xchg
shlb
fisubs
test
add
test
inc
pop
ljmpw
pop
add
pop
les
in
femms
sbb
fs
push
ret
fldenv
popf
or
mov
ja
sar
aas
xchg
inc
inc
pop
movsl
adc
push
pop
inc
jl
imul
in
mov
in
jne
outsl
insl
push
rol
cmp
testl
pushf
xchg
rcl
jnp
push
add
jge
xchg
mov
push
or
dec
sub
mov
push
and
cmp
int3
adc
pop
insl
mov
hlt
push
cmpl
jecxz
jle
bnd
hlt
mov
test
loopne
ret
outsl
push
fisubl
xchg
inc
outsb
cltd
and
pop
pop
xor
push
push
pop
ror
mov
mov
jl
sbb
jp
sar
jmp
aam
jno
shlb
xor
gs
repnz
testb
adc
call
repnz
mov
xor
jg
dec
jge
inc
repnz
add
je
add
in
dec
rol
add
stos
push
mov
int3
je
xchg
int3
adc
ds
push
mov
cmp
cmp
data16
push
push
js
sbb
sub
scas
sub
adc
imulb
or
lahf
hlt
pushl
adc
add
clc
mov
xchg
stos
add
and
add
repz
adc
mov
xor
fmull
jno
nop
xlat
enter
cmpsl
push
test
movsb
inc
fsubl
std
negl
int
imul
mov
dec
cmp
jle
pusha
push
cmpsb
xlat
dec
xchg
repz
inc
dec
cmpb
out
aas
ljmp
ret
jnp
pop
sub
or
in
out
inc
cltd
xor
jge
jle
push
and
dec
and
leave
test
fimuls
jp
pop
or
js
sub
mov
das
mov
stos
push
cmpsl
movsb
lcall
pusha
arpl
cmp
leave
repz
shlb
xor
push
push
mov
and
jbe
mov
bound
adc
test
imull
cmpsl
pushf
lds
sbb
cs
fnop
dec
outsb
nop
push
inc
mov
lock
ljmp
je
iret
orl
fbld
mov
sahf
pop
xchg
cmp
jnp
shlb
jl
enter
mov
jle
and
test
int
mov
push
retw
mov
iret
sbb
xor
mov
cwtl
ja
js
hlt
xchg
leave
add
pop
mov
xor
cli
jle,pn
jge
ja
fdivl
popa
cmp
movsb
mov
xor
sub
and
sub
test
xchg
dec
ret
mov
xor
movsl
pop
sbb
sub
jbe
push
fdivp
inc
dec
push
jo
dec
inc
dec
inc
push
inc
jle,pn
pop
jbe
imul
stos
push
xor
sub
cmp
shrb
pop
cmp
jb
outsb
movsb
jbe
push
roll
jns
shlb
push
sbb
mov
xchg
enter
rclb
movsl
mov
pop
lock
cmc
add
push
push
rol
mov
insb
rcr
cmpl
lods
adc
dec
out
filds
xchg
sbb
pusha
add
push
cmp
push
pop
push
mov
jmp
popa
add
loope
ret
fldcw
sbb
nop
rcrl
xchg
icebp
into
add
les
jge
cld
jecxz
aaa
push
mov
adc
cli
js
mov
inc
sahf
nop
pop
sub
or
dec
mov
cmp
mov
fcom
arpl
mov
cmp
lret
xor
push
cld
ficomps
push
pushf
cs
cmp
test
xor
mov
popa
rcl
jp
pop
out
stos
repz
pusha
mov
xchg
xchg
or
jo
and
adc
jo
mov
jmp
pop
ss
push
mov
addr16
imul
rcrl
sub
jmp
fbld
arpl
xlat
xchg
fdivl
push
andl
clc
lahf
aas
mov
mov
test
xor
aaa
stc
in
push
sbb
mov
addb
or
mov
or
out
ja
dec
dec
sbb
or
xor
fcom
sbb
fwait
xchg
cltd
jae
ret
fildl
and
stos
xor
aas
je
or
test
movsl
aas
sti
mov
add
mov
int
sarb
dec
mov
cmp
movsb
xor
jb
std
out
sbb
or
adc
sbb
sbb
icebp
test
leave
cmp
dec
dec
push
add
cltd
rclb
fisttps
test
jmp
dec
movsb
or
push
in
pop
jle
and
lcall
inc
jmp
mov
mov
xor
sub
cmp
in
push
mov
xor
negb
aad
or
or
and
test
jp
gs
mov
add
mov
jle
adc
fidivrs
out
mov
fstpl
xchg
popf
jp
stc
and
push
iret
sahf
and
imul
es
jl
pop
inc
inc
mov
jno
cmc
or
popf
pop
enter
and
sbb
push
dec
cmp
jl
xchg
in
pop
xor
jae
jmp
mov
pop
fisttpl
pop
sbb
dec
js
daa
testb
cmp
or
cltd
sahf
lods
ds
lahf
mov
stos
push
add
push
mov
fsubs
out
roll
pop
test
les
lahf
aam
pop
jb
push
test
push
js
inc
mov
jp
ds
pop
dec
fcmovnb
inc
add
cmp
xchg
add
and
xchg
inc
mov
mov
sbb
cld
loop
in
push
push
in
enter
ljmp
lahf
das
in
pop
aad
sarb
dec
sbb
jno
add
jo
aam
push
dec
scas
lea
jns
fnstenv
fidivrl
mov
and
pop
push
popa
mov
mov
xchg
xchg
jp
xlat
or
sub
and
lcall
leave
inc
testl
pushf
and
hlt
test
mov
push
in
gs
pop
pushf
cmp
nop
popa
xor
pusha
pushf
gs
mov
int3
test
and
adc
movl
and
xor
jae
out
sub
clc
sub
or
rorl
jnp
or
clc
fsub
pop
aam
add
jle
push
xchg
cmp
mov
pop
jl
dec
mov
push
ficompl
sbb
cmp
inc
pop
cmp
rcll
arpl
in
pop
bound
mov
jbe
lock
movsl
call
int
cmp
or
sbbl
call
orl
out
out
aad
stos
je
and
push
and
in
push
or
pop
xor
sub
sub
iret
sbb
mov
mov
jbe
out
pop
mov
shrb
pusha
stos
adc
jne
pop
adc
movsb
cmc
push
fiaddl
es
imul
sub
mov
aas
bnd
dec
iret
lods
xchg
mov
mov
test
jae
cltd
push
shlb
gs
mov
imull
mov
or
sbb
add
notb
sub
xchg
sahf
pusha
cltd
popa
xchg
aas
pop
sub
cwtl
push
sub
ss
mov
int3
das
mov
icebp
cmp
add
fildl
in
shl
mov
clc
insb
stos
sub
dec
jnp
das
in
sbb
clc
stos
and
or
fcmovne
dec
orl
or
or
jl
add
jg
cmc
fs
sbb
jp
in
out
mov
push
cmp
mov
dec
xorb
and
cmp
sbb
jecxz
pop
roll
loop
cmpl
sbb
or
movsl
inc
outsb
push
xor
inc
or
std
xchg
lods
adc
adc
mov
add
add
jle
or
jb
cmp
sub
mov
pushf
sti
pop
repnz
or
pop
clc
stos
pop
mov
rolb
or
jnp
xchg
ret
or
pop
cmc
stos
ljmp
push
xchg
xor
adc
push
imul
and
cli
push
gs
imul
jno
rcrb
sbb
ficomps
bound
jbe
dec
cmpsl
mov
ret
loop
dec
cltd
imul
xor
fidivl
fwait
xchg
repz
es
lods
or
mov
jo
rorl
repnz
add
pop
jae
mov
in
jbe
outsb
xchg
sbbl
add
push
mov
sbb
call
std
rcrl
sub
aas
lea
in
inc
or
lods
pop
lret
notb
push
rep
mov
jo
scas
repnz
cltd
mov
ret
nop
arpl
test
push
mulb
rorb
mov
mov
hlt
pop
mov
cwtl
adc
sbb
mov
cmp
in
push
mov
fs
pop
sbb
sbb
mov
and
dec
mov
pop
gs
loop
data16
jb
ds
inc
stos
cmp
or
xchg
cwtl
jae
mov
xchg
mov
and
jae
or
lods
mov
cmp
and
jns
dec
aas
addr16
and
inc
int3
shr
repnz
sbb
and
cmp
arpl
fld1
lret
dec
push
ja
cli
hlt
or
popf
lret
repnz
push
std
mov
mov
insl
loopne
jecxz
push
push
outsb
mov
mov
test
add
popl
dec
test
xchg
sub
jg
in
ss
or
popa
sub
xor
fs
ret
cmpsb
lods
pop
loopne
mov
mov
mov
fildll
push
sti
std
data16
xchg
loopne
mov
dec
pop
leave
movsl
jae
out
aaa
mov
fsubrs
inc
cmpsb
mov
loopne
lret
mov
push
and
or
xchg
push
mov
sbb
inc
sub
cmp
fdivl
icebp
inc
mov
xchg
cwtl
ljmp
insl
test
xor
push
ljmp
mov
inc
loop
mov
push
iret
dec
mov
inc
mov
jb
js
xchg
mov
movsl
xor
sbb
jmp
mov
or
dec
mov
push
pop
jns
pop
push
dec
add
shl
in
jl
test
sbb
sarl
out
insl
jb
popf
insb
push
out
jne
aad
lret
push
js
sub
ret
ljmp
xchg
xor
test
fiadds
in
add
fdivs
cmp
in
mov
sub
jecxz
cli
lods
mov
gs
inc
xchg
shlb
jnp
or
es
inc
lret
movsb
add
bndldx
lods
xchg
jnp
sbb
xor
pop
mov
mov
subl
sub
xorl
or
push
insl
add
xor
es
cld
pop
hlt
jle
inc
fwait
repnz
push
jno
or
jns
sub
fmulp
out
dec
pop
dec
loop
dec
out
cmp
pop
mov
lods
mov
pushf
cmpsl
jmp
mov
sbb
mov
outsb
outsl
cmp
das
mov
fs
movhps
xlat
add
inc
das
rcll
cld
nop
pop
ja
xadd
jp
adc
adc
mov
jnp
cltd
push
sbb
adc
mov
cmpsl
push
repnz
movsl
xor
or
mov
insl
inc
sbb
or
das
mov
dec
jp
adc
movsb
sbb
inc
xor
jo
mov
adc
xchg
aas
or
jp
inc
mov
xchg
mov
mov
push
pop
push
stos
fcom
mov
jp
adc
xchg
insb
sbb
sub
or
fsubl
cmc
mov
ljmp
jnp
mov
fistl
push
sub
jl
add
test
mov
lds
icebp
xor
and
imul
mov
ljmp
lahf
out
sbb
ret
dec
mov
cmpb
sub
and
ret
and
enter
cmpsb
xor
fdivp
mov
test
shl
inc
adc
arpl
cmp
fdivrl
sub
outsb
add
sbb
push
andl
shll
jnp
loope
mov
and
jo
fisubl
scas
or
out
int
cmp
push
pop
add
lahf
inc
sub
jb
mov
xor
inc
mov
test
xchg
xorb
jb
sahf
jg
lods
test
movsb
dec
rcll
xchg
notl
mov
jno
arpl
xlat
adc
or
lods
adc
stc
cmp
push
inc
mov
mov
xchg
inc
gs
cltd
clc
cmp
fs
ss
je
or
cmp
pop
ja
sahf
pop
rol
xorl
scas
sub
cltd
adcl
mov
sbb
cwtl
adc
stc
dec
sbb
pop
mov
mov
mov
ficoml
std
xchg
push
mov
int
mov
mov
icebp
je
push
mov
loop
jge
outsb
sahf
fcompl
mov
data16
push
fs
insb
push
js
in
jnp
mov
mov
mov
pop
pop
sub
in
sbb
aas
jp
mov
pop
test
std
mov
pop
inc
lcall
sub
jl
dec
in
and
insl
or
inc
lods
nop
xor
fnstcw
out
adc
push
rcrb
mov
mov
and
xor
push
fsubr
jb
imul
ljmp
cmp
xor
mov
adc
sbb
ds
dec
jecxz
add
hlt
std
mov
mov
scas
and
pop
int
jo
push
inc
or
push
movsl
mov
inc
shl
in
pop
jle
stos
or
shrb
cltd
outsb
dec
pusha
out
cmp
rclb
xor
insl
adc
and
push
add
retw
ficompl
stos
outsl
imul
test
decl
cmp
xor
lret
daa
sbb
int3
inc
mov
dec
addr16
push
fcmovbe
jg
aam
pop
adc
pop
mov
mov
inc
arpl
push
xchg
testb
sbb
xorb
add
xchg
mov
mov
lods
lds
stos
inc
dec
dec
ret
out
sar
cmp
jno
call
mov
pop
ss
out
iret
cmp
iret
xchg
jbe
push
mov
or
jno
andl
inc
mov
mov
jecxz
mov
pop
or
in
mov
mov
pop
add
repnz
sub
push
fs
push
fwait
mov
jne
xchg
ficoml
jns
mov
mov
sub
imul
cmc
xchg
mov
inc
mov
inc
out
mov
pop
pop
sbb
aas
dec
pushf
mov
shrl
adc
cld
test
inc
lock
dec
mov
sbb
sub
test
jge
out
fiaddl
sbb
nop
iret
lock
inc
ds
in
inc
add
movsb
mov
mov
lock
or
pop
scas
and
shrb
dec
mov
imul
mov
sub
mov
xchg
test
gs
inc
adc
xchg
cmp
jo
lods
jno
ror
or
adc
cltd
jge
push
stos
pop
das
lods
jge
sbb
inc
je
cmpl
jle
adc
aas
sbb
xchg
xor
push
xchg
out
pop
imul
gs
xor
adc
daa
adc
test
bnd
and
mov
mov
and
mov
out
dec
ja
clc
fucomp
dec
stos
xor
rcrl
sbb
aam
or
adcl
dec
push
adc
xchg
loop,pn
fstp
aad
sbb
mov
insb
test
jae
lret
pushaw
jl
pop
pop
mov
and
insl
add
mov
add
xchg
cmpsl
inc
data16
imul
pop
inc
js
daa
or
mov
lret
jecxz
fsub
loope
jl
ret
mov
pop
data16
push
pop
or
mov
pop
pop
loopne
sbb
repnz
stc
ret
mov
fisubs
out
push
push
mov
ds
mov
jp
aad
and
pop
mov
jnp
add
cmc
fwait
mov
fsubs
push
add
sub
adc
xchg
sarl
shr
sti
out
pop
lcall
cmp
push
add
in
insl
stc
push
rcll
out
clc
cwtl
insb
and
iret
add
pop
dec
dec
add
sub
mov
adc
push
sub
jg
xorl
xchg
sbbl
sub
jbe
repz
pop
in
adcl
jp
pop
outsb
repz
or
insb
mov
push
push
cmp
push
aaa
lds
fs
pop
insb
cmpsb
leave
ljmp
lea
push
pop
xchg
jb
mov
xor
test
outsl
dec
xchg
insl
xchg
xchg
and
add
loope
xor
xor
nop
into
imul
clc
sub
xor
cmc
loope
dec
pop
dec
add
pop
sub
iret
stc
ss
and
fisubrs
or
inc
dec
mov
loopne
lahf
cli
cmp
lds
jecxz
inc
xchg
pop
fistps
dec
loop
add
cmp
jge
mov
and
push
mov
jnp
inc
adc
imul
add
test
fiaddl
cmp
aam
fdivs
in
imul
push
lea
adc
cli
dec
mov
jbe
jns
pop
or
clc
fwait
ds
pop
push
scas
shrb
dec
or
pop
xor
mov
pushf
inc
inc
rcl
je
and
lret
lret
aad
into
fs
sub
out
int3
dec
mov
or
pop
fsubr
and
sbb
ljmp
pusha
sbb
rclb
imul
lret
addr16
das
or
or
ds
add
adc
rorb
xchg
js,pn
or
mov
inc
out
imul
add
into
cmc
sbb
lret
lea
xchg
xor
dec
push
fcomp
jl
lahf
inc
fstpl
xor
adc
adc
pop
add
call
int
xchg
popa
mov
inc
xor
jbe
decb
inc
dec
lods
in
nop
pop
lret
xchg
test
rclb
pop
ljmp
dec
sub
lahf
stc
jb
xor
mov
xor
push
pop
push
and
dec
call
pop
sbb
xor
cwtl
gs
popf
rolb
addr16
insb
mov
arpl
in
cld
out
dec
daa
lret
and
push
cmp
sub
xor
aaa
lret
jge
sbb
jle
scas
pop
mov
and
push
push
mov
dec
cmp
lock
lahf
loopne
push
push
push
lods
xchg
sahf
mov
inc
mov
and
sti
and
or
ljmp
jl
xlat
xchg
sbb
mov
adc
push
jbe
xlat
and
adc
xchg
mov
sahf
adc
rorb
lahf
push
adc
adc
popf
gs
mov
cltd
xchg
stos
push
jecxz
cwtl
jmp
pop
xchg
jl
enter
pop
ds
ret
push
js
in
jno
hlt
jp
xchg
pop
lods
mov
xchg
pushf
pop
idiv
pop
jno
pusha
and
sbb
sahf
das
or
dec
data16
pop
dec
pop
xchg
ds
jae
lods
aaa
xor
stos
sub
rorb
mov
jo
dec
or
pop
out
mov
sarl
mov
sti
dec
popa
ret
push
fmull
and
daa
mov
pop
fwait
ret
fmull
leave
popf
jp
lcall
aam
popa
popa
push
mov
xor
push
imull
or
nop
push
jl
mov
out
sub
icebp
dec
pop
dec
push
movsl
lret
mov
cmpsb
jmp
pop
jno
outsb
xor
push
mov
dec
aam
jno
sahf
mov
stos
loope
mov
sbbl
add
jns
jle
adc
sub
cltd
lea
mov
and
jp
loope
pop
jno
xor
cwtl
add
rcrl
xor
pop
clc
inc
adc
mov
mov
adc
in
lret
das
aam
jb
dec
aaa
xchg
das
adc
lea
gs
mov
lret
xchg
inc
jp
add
adc
addr16
sub
cld
sub
cltd
cmp
mov
fprem
inc
mov
in
sub
sbb
sbb
adc
stos
pop
cmpsl
cmpl
jbe
pop
push
mov
dec
cmp
jae
hlt
push
sub
xorb
inc
fnstcw
pop
inc
sbb
fdivs
pop
fcomps
les
mov
jecxz
xor
cmp
inc
or
dec
in
mov
pop
jmp
push
cmp
shll
xchg
mov
cmpl
mov
mov
push
pop
xchg
adc
inc
out
push
ss
push
and
pop
jbe
sahf
xchg
out
add
add
jmp
test
rcr
add
sahf
xchg
or
dec
pop
pop
push
loope
mov
call
mov
dec
aaa
mov
add
push
insl
dec
cmpsb
dec
lret
in
addr16
add
xor
mov
pop
in
jns
and
add
dec
inc
sub
enter
mulb
cmp
dec
xchg
sub
xchg
cvttps2pi
cwtl
fs
ljmp
xchg
mov
ljmp
jmp
adcb
pop
rorb
pop
fidivrs
dec
add
and
pop
add
xchg
xchg
stc
sahf
test
jno
aad
lods
jno
pop
inc
xchg
mov
neg
imul
pop
rcrl
xor
pop
sbb
pop
pop
lock
ja
adc
dec
xor
jno
ss
dec
in
pushf
sub
jmp
mulb
aam
imul
pop
fidivrl
cld
mov
pop
xor
jp
fwait
aaa
inc
pop
leave
push
mov
or
cld
loope
jne
xchg
adc
scas
add
stos
add
loop
fwait
mov
inc
sbb
xchg
in
jge
jp
inc
sbb
or
mov
or
pop
imul
data16
or
xor
add
hlt
aaa
int3
cld
cwtl
gs
jno
inc
iret
or
fists
popa
cs
test
jo
std
push
stos
push
fisubs
call
int
and
rorl
mov
out
dec
je
repnz
or
mov
dec
mov
xchg
sub
jl
data16
lret
push
hlt
nop
pop
hlt
rolb
push
psubsw
outsl
cmp
shl
mov
out
sub
pop
mov
in
orb
push
lods
psubusb
or
cs
repnz
push
inc
or
nop
ret
repz
lock
sbb
and
inc
and
jo
out
push
jecxz
cmc
jecxz
dec
adc
data16
pop
cmpsl
sub
or
sbb
ljmp
xchg
cmpsb
aas
mov
adc
popa
jecxz
cmp
notl
jmp
sub
shrl
xorl
xchg
mov
push
inc
mov
xlat
roll
mov
fldenv
xor
cmp
movsl
add
push
adc
adc
fwait
jb
fucomip
in
pop
movsb
push
push
mov
pop
imulb
in
insb
leave
push
mov
push
mov
ret
sbb
jno
xchg
adc
loopne
sub
sbb
ret
and
sub
or
cli
push
mov
push
push
mov
loope
cmp
out
sbb
pop
sbb
je
pop
and
in
sbb
mov
add
dec
pop
adc
sbb
add
inc
int
cwtl
mov
pop
aas
jbe
andl
mov
orl
ljmp
enter
push
test
jns
inc
rcl
sub
popa
iret
repnz
mov
das
mov
data16
xor
lret
xor
adc
add
push
xor
mov
adcl
xchg
fdivrs
int
mov
pop
cli
push
test
stos
fsin
jmp
cmp
dec
daa
mov
pushf
clc
jp
or
fs
push
sub
dec
jecxz
jne
jo
sbb
push
fiadds
sub
inc
std
and
fdivs
sub
or
sti
fnstcw
xchg
fcmovnb
mov
mov
cmpsb
jnp
dec
add
gs
push
pusha
jmp
adcl
call
mov
mov
gs
push
lods
lods
mov
sti
repz
adc
sbb
mov
push
cwtl
dec
cmp
lcall
add
sbb
mov
pop
fldl
cmp
inc
fwait
xor
lock
inc
cmpsl
mov
pop
sti
out
leave
mov
cmpsb
dec
lahf
push
mov
xchg
pop
add
idiv
adc
inc
lret
sahf
test
ljmp
mov
jg
leave
aaa
lock
sbb
leave
movsl
test
mov
mov
jnp
sbb
xorb
fcmove
call
inc
movl
ret
fnstcw
inc
mov
xor
aad
rcl
push
push
cmp
cmp
dec
sub
cmp
mov
cltd
sahf
or
stos
fprem1
or
adc
push
ljmp
sub
xor
or
cltd
xchg
cmp
sub
aaa
rcll
ja
jns
mov
push
pushf
push
popa
sub
push
cmp
pop
test
lock
sbb
dec
mov
aaa
and
cli
sbb
mov
js
jge
out
or
sub
pop
sub
daa
mov
push
add
jecxz
dec
xor
or
rolb
push
jp
push
mov
out
cmc
sub
test
sub
lods
pop
pop
loopne
sbb
aad
loopne
adc
push
fisttpll
cli
inc
adc
lahf
adc
fxch
in
adc
dec
lret
int
xchg
popa
loopne
out
and
jecxz
pop
ret
imul
int3
jno
push
js
addl
and
jmp
das
inc
mov
mov
cmp
sbb
push
push
xchg
enter
iret
lock
inc
or
insb
mov
out
scas
filds
xchg
mov
cmc
fcomps
aam
adc
insb
sub
mov
xchg
pop
add
or
mov
insb
popl
flds
and
dec
xor
aaa
lret
push
stos
aaa
sarl
inc
and
clc
shrl
in
std
push
rcrl
dec
push
push
ret
and
or
xchg
adc
mov
pop
xchg
jnp
mov
and
mov
les
pop
mov
cld
xor
mov
cmp
in
movsb
repz
inc
add
ror
and
push
push
ror
adc
mov
aad
jge
sbb
xchg
lcall
int3
je
cmp
cwtl
or
pop
ret
in
jnp
mov
jecxz
inc
nop
push
into
pop
mov
es
mov
push
gs
icebp
push
arpl
xor
inc
lret
fldcw
xor
pop
ja
pop
arpl
mov
fbstp
ja
ja
arpl
clc
sahf
imul
aas
scas
fsubl
or
cltd
jo
sbb
nop
xchg
xchg
arpl
cmp
lahf
movsb
or
arpl
sbb
andb
fs
dec
jnp
xchg
pop
or
stos
adc
cmpb
cmpsl
sbbb
xchg
hlt
dec
addb
add
sub
fs
mov
or
shrl
jecxz
test
fsubl
popa
mov
add
mov
sbb
sbb
orl
push
push
aaa
fxch
jmp
icebp
xor
add
pop
jbe
insl
push
sbb
dec
jne
ljmp
imul
call
das
loop
jg
xchg
pop
aas
into
mov
addr16
push
mov
jne
jecxz
inc
repz
xor
pop
jg
clc
push
ja
xchg
mov
lret
mov
mov
jns
and
in
divl
lds
adc
sub
fwait
push
test
pusha
jne
jbe
xlat
sti
cmp
cwtl
ljmp
and
out
enter
lret
ss
mov
and
sub
rorl
scas
pop
lea
nop
and
je
mov
mov
cmp
pop
int3
aaa
test
or
cltd
mov
jns
jp
cs
xchg
pop
push
xchg
push
scas
cld
add
inc
aas
loop
pushf
mov
cmp
mov
dec
fldcw
or
xor
and
add
ret
shlb
imul
rol
pop
and
sbb
mov
lods
pop
and
test
pop
out
pop
ja
aam
add
stos
mov
jo
xchg
out
mov
push
stc
jns
ja
lret
and
sbb
lds
mov
ljmp
mov
cwtl
stc
jp
sbb
sub
or
sahf
sub
int3
cmp
inc
dec
je
push
out
mov
inc
jo
sub
sbb
cmp
repz
mov
lds
add
mov
stos
and
ret
mov
orl
mov
sbb
jo
out
out
lret
lret
shlb
push
out
or
jmp
aam
mov
ja
ficompl
pop
jb
push
mov
ret
jg
jo
ds
dec
out
ret
or
les
test
outsb
ljmp
jne
sbb
push
cmc
or
add
push
inc
add
cmp
sub
imul
rcr
daa
enter
add
cltd
arpl
popa
js
mov
and
or
push
mov
sahf
shll
pop
stos
cld
sub
fdiv
mov
dec
xchg
int3
fisttpl
in
xchg
mov
popa
push
xlat
pop
sub
iret
pop
outsl
pop
push
push
inc
or
jge
jmp
fsubrl
mov
sub
aas
dec
mov
subb
pop
ret
arpl
hlt
icebp
pusha
push
xor
pop
pop
add
cmp
and
xchg
lock
fsubl
pop
sbb
dec
adc
ljmp
cwtl
dec
imul
fstpl
in
popf
mov
lods
mov
sub
das
imul
leave
sub
sbb
cmp
mov
inc
jl
ss
adc
test
mull
loopne
iret
nop
test
fisttpll
jne
or
jo
sbb
jbe
shlb
sub
adc
sti
xor
dec
bound
mov
int
stc
xor
cmc
xor
cmp
scas
call
fs
push
decl
out
ss
data16
aad
sub
sub
push
sbb
and
mov
push
ja
push
add
je
mov
push
xchg
sarl
ljmp
mov
pop
mov
mov
sbb
das
push
cltd
and
hlt
jl
int
jae
or
int
sbb
sbb
dec
pop
arpl
fisubs
adc
mov
cwtl
jp
std
imul
aam
inc
sbb
sub
and
inc
stos
dec
lds
or
int3
jge
in
dec
cmp
inc
movzbl
dec
je
adcb
arpl
ja
stos
fstl
fmuls
mov
add
xor
cltd
pop
dec
movsl
jns,pt
and
sub
adc
dec
push
push
scas
sbb
jbe
call
jecxz
sti
pop
sbb
int3
xchg
and
in
negb
lods
out
xchg
test
lock
adc
into
leave
adc
jbe
and
and
jb
xchg
adc
popf
cwtl
jg
in
fsubs
xor
lods
adc
addr16
inc
or
ret
lds
data16
shrl
sub
push
cmpsb
cmp
mov
incl
push
jle
mov
rcll
add
adc
or
xchg
cmp
loope,pt
orl
cmpb
dec
mov
jb
test
add
xchg
pop
or
push
mov
shr
sbb
dec
ret
jp
and
shl
pushl
cmp
push
into
int
into
cmp
imul
cli
adc
jb
inc
sti
out
add
and
cmp
pop
or
sub
jb
scas
mov
jge
xchg
lods
sub
shrb
pop
dec
fs
movsl
and
sti
add
pop
aas
jle
cmp
mov
push
jmp
cmp
xor
xchg
cmp
jnp
dec
insl
icebp
add
jb
and
cli
nop
adc
lret
movsb
xchg
sbb
ret
inc
cmpsl
iret
push
jo
rolb
mov
sbbl
pop
lret
fs
loopne
adc
add
ss
imul
movsb
adc
jno
jl
cmpsl
jmp
xlat
pusha
imul
leave
sahf
incl
jae
adc
xor
add
pop
dec
xor
notb
pop
sub
sbb
sbb
xchg
or
push
lcall
jbe
ret
mov
sti
into
pusha
xor
movl
fnstcw
mov
pop
sub
pop
fxch
push
lods
into
mov
adc
shlb
mov
psubsb
jmp
lods
ret
das
call
popa
xlat
orl
push
je
daa
test
stos
xor
out
jo
cmpsl
mov
lock
int3
ds
fldln2
adc
cmp
jns
aas
gs
cs
push
sub
dec
fisttpll
js
pop
jmp
or
es
sub
add
mov
inc
sub
sbb
ret
test
jbe
mov
jb
adc
dec
mov
mov
pop
repz
mov
ret
bound
mov
lret
stc
or
in
inc
xlat
jecxz
or
out
sbb
aas
scas
movsb
daa
or
into
pushf
xor
repnz
sbb
adc
js
pushf
sub
add
cmp
loopne
mov
mov
and
clc
push
adc
sbb
int
fimull
leave
lea
xor
fldt
add
mov
dec
in
adc
or
mov
xor
jns
imul
es
stc
mov
cld
sub
imull
cmp
cs
inc
stos
sbb
imul
push
ret
sti
lock
xor
inc
sti
sarl
cmp
push
push
nop
stos
sbb
popf
jmp
mov
lret
mov
js
cmpsl
inc
and
jmp
cwtl
push
data16
mov
subb
cld
inc
popf
adc
not
dec
adc
or
into
cmpsb
xlat
lods
outsl
add
popl
shl
inc
add
sbb
jg
fldt
sti
cmpsb
push
mov
mov
mov
popa
or
cmc
mov
xchg
jne
sbb
hlt
imul
int3
push
add
shrl
roll
dec
push
outsl
outsb
mov
jp
push
adc
and
addr16
dec
cmpsb
adc
add
mov
sbb
add
pop
arpl
or
popa
fists
stos
dec
push
cmpsb
xchg
or
and
lea
xchg
or
stos
loop
jge
lahf
scas
cmp
and
cmp
dec
dec
loope
jmp
mov
cmova
fnstenv
loopne
lea
sbb
mov
lret
push
pop
in
xor
add
xchg
stc
pop
shll
mov
sbb
inc
ss
adc
dec
dec
leave
xchg
imul
dec
pop
or
lret
or
xor
sahf
add
stos
jmp
in
xor
insl
shll
pop
aaa
push
sbb
pop
mov
or
ret
nop
daa
fwait
or
popa
inc
push
dec
lds
into
xchg
inc
jmp
loop
push
xlat
rcrb
push
ficoms
sub
decl
mov
stos
inc
fsubrs
insb
dec
mov
jne
sbb
sbb
aam
in
hlt
pop
jnp
sub
ss
sti
call
pop
mov
lahf
mov
in
add
push
mov
fldl
fnstenv
ret
loop
stos
cli
jb
mov
jbe
cmpb
clc
in
pop
hlt
dec
mov
jmp
mov
fidivl
out
mov
jb
dec
push
shr
aad
cmpsl
ljmp
mov
cmp
dec
mov
fs
fs
cwtl
cmp
pop
sub
push
sbb
xchg
jns
and
js
lea
fisubrl
and
mov
ds
loope
add
mov
fs
push
lods
js
ficoml
sub
leave
aaa
jecxz
xorb
loop
lock
mov
sbb
fs
mov
xchg
cmc
jb
dec
mov
add
int
xchg
mov
and
call
push
inc
or
sbb
stc
fdivs
push
add
adc
addr16
lcall
or
outsl
and
dec
lods
lock
inc
jmp
je
lds
cwtl
adc
imul
xor
popa
mov
imul
test
pusha
sbb
sbb
cmp
in
mov
cmc
fstp
mov
aad
aaa
enter
int
faddl
out
popf
lss
lock
lcall
imul
outsl
neg
leave
dec
inc
out
inc
xor
xor
cmpsb
jecxz
jo
push
and
push
mov
sub
pop
adc
movl
jge
insl
outsb
xor
dec
pushf
mov
mov
fdivrp
fwait
push
sbb
stos
lods
xchg
pop
shlb
dec
lahf
cltd
iret
mov
addr16
vphsubdq
lahf
sbb
vpexpandw
repnz
mov
inc
and
xlat
and
adc
cltd
mov
in
cmc
mov
test
jae
lock
sbb
lcall
push
in
or
ret
or
inc
push
aam
ds
mov
mov
adc
dec
pop
fcoms
and
add
dec
cli
lret
push
pop
data16
pop
sbb
cmp
fisttps
imul
sbb
clc
dec
adc
sub
jnp
mov
hlt
nop
and
cmp
dec
cmpsb
lock
adc
jge
mov
test
jo
push
popl
cmc
cmpsl
lods
sub
dec
jns
cmp
ret
xor
iret
mov
mov
jg
stos
pop
movsb
mov
outsb
dec
xor
pop
dec
jle
aas
adc
mov
sub
mov
call
cmc
fimull
das
pop
dec
jno
cwtl
arpl
ljmp
test
nop
decb
xor
inc
or
notb
es
test
mov
push
lock
cmp
gs
shll
repz
and
aam
jns
jb
aaa
and
imul
fabs
ds
test
pop
mov
insb
jl
hlt
or
je,pn
pop
in
mov
shrl
js
cmpsl
xlat
div
adc
and
js
xor
sbb
mov
movsl
imul
add
hlt
lds
movsl
mov
push
or
push
adc
adc
adc
loope
mov
popf
inc
xlat
fstl
lret
sbb
jle
xlat
mov
shlb
daa
inc
jb
dec
xor
inc
pop
push
mov
test
xor
aaa
mov
lds
mov
push
repnz
iret
mov
notl
mov
into
das
or
lret
push
dec
jp
cli
fbld
jo
xor
jnp
fucom
loope
add
cmovae
mov
sub
mov
pop
test
push
pop
add
loop
les
push
fdivrl
jae
pop
mov
jb
jl
fiadds
fwait
jecxz
mov
out
loop
mov
rcll
adc
scas
repnz
iret
inc
xor
sub
out
fdivr
leave
fisttps
xchg
cmp
mov
pop
lea
dec
or
xorb
adc
mov
xchg
ret
in
mov
or
lret
mov
cmp
xor
jg
cltd
jo
mov
insb
mov
das
ret
push
or
push
test
lahf
mov
bound
cmp
mov
repnz
mov
popa
fsubs
push
jbe
push
pushf
sub
push
add
repnz
jo
dec
call
sysret
fs
inc
xor
dec
loop
pop
push
mov
adc
adc
mov
mov
xor
dec
out
int
mov
inc
unpckhps
or
test
jb
inc
mov
pop
add
mov
push
mov
je
or
cli
sub
jbe
incl
loopne
cmpsl
mov
and
mov
adc
data16
mov
pop
xchg
shlb
in
sbb
fistpll
mov
mov
pop
int3
xchg
mov
and
idivl
divb
sti
push
outsl
cld
mov
pop
mov
fimull
cld
cs
js
test
mov
andl
mov
dec
cltd
out
jmp
mov
out
rol
mov
jle
scas
adc
icebp
push
mov
dec
mov
mov
and
or
aas
mov
out
insl
andb
mov
imul
mov
shrb
add
sub
add
pop
aam
and
dec
inc
nop
xorl
data16
jmp
outsb
adc
lcall
push
lock
mov
xchg
nop
lret
xchg
out
xorb
roll
cltd
cmp
dec
cmp
push
pop
add
or
push
sbb
aas
pop
sbb
pop
push
daa
and
dec
call
and
scas
or
imul
dec
xor
test
push
push
or
lods
sbb
shlb
loope
pop
cli
aad
xorl
pop
push
pusha
jmp
jno
xchg
mov
adc
mov
repz
lods
rcl
xchg
push
aam
sub
add
dec
test
sub
or
lods
negb
data16
xchg
pop
icebp
cmp
mov
mov
pop
ret
xlat
scas
repz
push
dec
inc
jp
fistpl
inc
pminub
sub
jl
cld
lcall
fiadds
mov
sti
repnz
inc
cmp
and
aad
into
mov
cld
gs
adc
repnz
pop
add
sub
adc
pop
mov
das
std
jno
insb
mov
ret
jecxz
pop
andb
mov
ss
rorl
imul
or
mov
jbe
cmc
sahf
insl
pushf
shlb
stc
sahf
shl
nop
ret
xor
addr16
push
adc
movb
enter
ret
cmc
xor
inc
sub
fdivs
mov
imul
jmp
fsubrl
inc
sbb
imul
dec
cltd
dec
push
pop
imul
xchg
push
insl
adc
sub
sbb
ss
in
pop
lock
mov
dec
cmp
add
and
inc
sbb
mov
lods
mov
inc
pusha
mov
lret
lret
dec
popa
or
jge
pop
xor
popf
inc
push
cmp
outsl
mov
inc
mov
lret
jge
test
mov
mov
xchg
mov
leave
mov
leave
dec
push
insl
movsb
fisttpll
jno
ljmp
repnz
es
loop
fnsave
das
push
call
daa
adc
cmp
ret
inc
mov
sub
jecxz
mov
lret
jno
dec
xor
shrb
push
leave
mov
out
sbb
notb
push
dec
stos
add
xor
std
cmc
push
mov
add
adc
pop
pop
pusha
shlb
rcl
sub
fistpl
cmp
popa
fmuls
stos
mov
cli
dec
push
lods
es
add
push
pop
ret
das
xor
in
insl
add
and
push
jnp
mov
push
cmp
mov
or
inc
in
stc
or
rcrb
fwait
js
dec
fldenv
cmpsl
inc
jo
mov
dec
xor
jp
mov
ret
jbe
ret
jle
mov
and
lods
fisttps
stos
movsb
je
fdiv
cmp
repz
pop
mov
or
iret
inc
xchg
das
sub
cmpsl
add
cmp
jns
inc
out
push
mov
xchg
dec
mov
mov
mov
into
loope
xchg
inc
sbb
shlb
mov
shl
jne
xchg
add
insl
fcmovnbe
repz
sub
int
loope
mov
sub
loope
add
mov
add
imul
push
fisubl
iret
jge
push
daa
sub
mov
out
iret
fimull
adc
inc
fwait
jmp
xor
movsb
fs
cmp
movl
stc
test
xchg
sub
sub
sarl
mov
inc
push
sub
mov
leave
psubd
cmpsl
int3
fwait
lret
sbb
push
les
stc
not
imul
jne
push
cmp
or
iret
imul
dec
or
mov
and
sub
xor
mov
inc
mov
and
xchg
push
dec
push
xchg
das
fisttps
js
and
mov
pop
into
outsb
adc
xchg
test
pop
in
dec
hlt
jmp
jl
cmp
mov
push
cmpsb
andb
inc
test
sub
jae
pop
and
sub
sub
lock
pop
xchg
jge
adc
lret
imul
or
ret
and
or
push
inc
adc
pop
mov
xor
sbb
pop
in
imul
fistl
scas
dec
cmp
lcall
aad
mov
dec
xlat
sahf
sbb
mov
pusha
lcall
xchg
pushf
xor
inc
clc
add
ds
adc
js
ss
push
decl
cmp
mov
sub
adc
pusha
cwtl
xor
aad
sbb
popf
xor
cmp
addl
mov
in
add
filds
ljmp
fldl
push
xor
xor
fwait
out
dec
aas
adc
push
popf
pop
dec
push
es
adc
movsb
lds
xchg
jl
out
inc
stos
iret
and
sti
and
jmp
mov
and
mov
dec
pop
test
shrd
push
xchg
lds
fwait
mov
sbb
add
mov
inc
stc
sub
loopne
push
xor
pop
xchg
bound
add
loope
xor
dec
inc
cmp
roll
jecxz
or
sbb
cmp
adc
mov
fwait
cwtl
pop
outsb
lods
stc
scas
into
and
push
dec
aas
push
call
xorb
sub
or
lock
jbe
out
es
cltd
lret
dec
int3
iret
shlb
xor
cmp
dec
xchg
sbb
outsl
and
test
mov
nop
or
xor
outsw
lcall
in
outsb
sub
xchg
test
mov
pop
dec
lock
lcall
shl
ja
shll
or
mov
aas
jge
dec
and
sbb
jno
sub
add
hlt
lret
aam
ficoml
repz
jl
popf
jg
aam
addr16
clc
or
sbb
shlb
aas
test
lock
rcrb
jnp
das
add
pop
test
sbb
xor
mov
mov
fs
insl
jp
sti
mov
mov
push
hlt
mov
adc
pop
jns
pop
lret
test
pusha
lds
lds
lock
mov
lock
inc
cmc
or
mov
mov
dec
add
jae
ja
add
or
mov
mov
mov
in
in
cmpsl
inc
fistps
pushf
mov
adc
add
adc
jle
xor
int
pop
xchg
or
faddp
jb
or
int3
loope
sarb
mov
bound
sub
popf
add
lods
sarl
or
call
lock
sub
mov
and
out
xchg
dec
scas
jge
jbe
lods
mov
in
ss
adc
jle
add
repz
stc
sub
lock
mov
add
test
js
shrl
pop
push
push
test
mov
loopne
jno
sbb
int
shlb
xchg
jle
cmp
push
rorb
push
cli
stos
sub
cmp
imul
adc
insb
push
adc
pop
iret
push
sti
mov
sub
and
lods
stos
or
add
aas
mov
or
rorb
mov
movsl
adcb
and
and
sbb
mov
sti
js
fstp
fdivrs
cmpsb
ljmp
sar
mov
scas
xor
dec
fwait
lods
mov
sub
push
xchg
pop
daa
shrl
loope
iret
testb
sbb
pop
jge
lods
stc
and
and
mov
add
aaa
test
out
lret
int
in
das
dec
fimull
fsubs
xor
sub
dec
fdivrl
out
pop
rorl
bound
popf
rclb
and
cmpsl
jbe
pop
pop
lds
fwait
hlt
mov
xor
xchg
sahf
xchg
sub
cwtl
insl
sub
dec
fs
mov
cmp
pop
sbb
js
cld
sbb
jne
dec
faddl
cmp
incl
pop
jmp
lods
addl
and
pusha
imul
lds
ljmp
sbb
push
int3
adc
mov
jo
push
ja
fildll
lods
xor
sub
lahf
in
mov
sub
jbe
adc
mov
or
xchg
push
addr16
int
lods
lods
jg
sarl
mov
cmp
mov
dec
aad
adc
pop
out
adc
jb
mov
jb
pop
xor
js
int
fwait
mov
sarl
das
lods
inc
fistl
daa
xchg
adc
mov
mov
sti
add
adcl
sub
lahf
push
sub
in
cmp
add
mov
push
xchg
xor
add
ss
enter
cmp
mov
in
and
popf
dec
fwait
cwtl
mov
pusha
cmp
outsb
loop
sbb
mov
and
stos
enter
and
rclb
xchg
adc
dec
hlt
mov
jl
js
xor
rclb
xor
popa
or
cmp
sbb
movsb
int
fisttpl
inc
mov
fidivl
rolb
mov
sti
or
jbe
ret
sbb
into
test
nop
fistl
push
mov
inc
xor
into
push
mov
xor
pavgb
scas
xor
push
push
adc
out
pop
or
add
jb
in
mov
mov
inc
push
or
inc
and
iret
pop
add
andb
lea
jle
punpckldq
dec
test
jne
cmp
rcrl
roll
sbb
cmp
adcb
and
ljmp
sahf
mov
es
inc
shr
stos
sub
sbb
je
subl
std
pop
xor
rcrl
pop
sub
aas
jge,pn
clc
sub
and
or
pusha
mov
movsb
xchg
mov
in
arpl
cltd
repnz
push
sub
cmpsb
test
test
mov
lods
or
sti
or
mov
adc
or
xor
mov
aaa
mov
cmp
cmp
and
cwtl
xchg
je
ljmp
push
mov
mov
lahf
test
mov
or
icebp
xor
idivb
sbb
cmc
push
mov
arpl
imul
pop
rep
std
repz
or
ljmp
sub
mov
pushf
fstpt
lahf
jg
das
lods
xorl
into
adc
jp
add
pop
jno
aaa
cmp
sub
in
dec
add
push
add
popf
inc
aam
sub
hlt
mov
or
mov
pop
ja
sub
out
inc
decl
xchg
sbb
jg
arpl
insb
or
cmpsb
popa
pop
mov
xchg
idivl
mov
mov
cmp
cld
in
xchg
hlt
call
iret
repz
push
aam
fstpl
jae
xchg
in
sti
out
push
cmp
in
ljmp
movsl
cmc
scas
inc
rorb
inc
cltd
icebp
gs
mov
mov
push
xchg
jge
dec
sbb
shlb
push
pop
das
sbb
ffree
pusha
push
cmpsl
inc
inc
mov
cltd
pop
push
sbb
fwait
das
or
rorb
fwait
adc
les
pop
jb
push
mov
inc
rolb
mov
mov
popa
pop
test
mov
cmp
adc
pop
or
or
sbb
into
lretw
mov
sbb
dec
testl
test
jno
cmpsl
dec
jnp
shlb
push
mov
fldl
ret
cli
dec
int3
out
inc
adc
jno
lsl
aam
hlt
arpl
andl
pushf
ss
sbb
mov
rcll
jb
int
mov
inc
mov
mov
fistl
sbb
cltd
add
fidivrl
sbb
js
pop
jno
or
jo
scas
pop
imul
jecxz
sarb
out
push
in
push
inc
pop
mov
jp
cmp
ret
pop
outsb
pop
scas
rcrl
inc
ficoms
mov
daa
cli
test
push
jmp
out
outsb
ljmp
adc
cwtl
and
inc
adc
sub
lcall
fcmovnu
jge
jmp
sbb
cli
xlat
inc
pop
bound
or
dec
inc
pop
stc
addr16
mov
inc
andl
mov
mov
push
test
adc
les
push
mov
push
sub
mov
into
sub
mov
outsl
jg
xlat
push
cmpsb
inc
jb
dec
shlb
pop
xor
dec
sbb
add
sub
jbe
lods
mov
inc
jg
in
sbb
or
insl
lds
fidivl
push
imul
stc
fs
outsb
mov
lahf
sbb
jg
nop
sub
jle
div
imul
xor
lahf
in
shll
jno
and
fdivrl
dec
mov
rcrb
pop
pusha
mov
add
mov
enter
outsb
dec
and
xchg
insl
jecxz
cmp
sub
lret
rcll
lods
xchg
mov
inc
pop
sahf
hlt
adc
push
gs
add
lods
out
lock
dec
mov
scas
push
int3
add
pop
mov
push
shr
mov
test
dec
mov
push
push
inc
adc
js
sti
xchg
mov
xor
mov
aam
adc
sub
stos
bound
mov
sub
not
sbb
dec
jmp
xor
pop
cmp
dec
je
outsb
lahf
inc
orb
pop
mov
fstl
adcl
mul
dec
shll
mov
aam
ljmp
out
fwait
test
push
xor
repz
ldmxcsr
clc
bswap
or
cmpsl
and
adc
cmpl
or
out
les
mov
adc
push
in
and
testl
cmc
in
jecxz
adc
add
imul
bound
loopne
adc
mov
test
clc
mov
or
data16
add
pop
xchg
jnp
mov
lret
mov
cmp
dec
into
stos
push
and
scas
dec
push
dec
inc
mov
test
mov
sub
leave
test
jo
pop
jmp
loope
sub
xlat
xchg
hlt
fdivrl
cs
out
js
adc
les
xor
ficompl
mov
inc
out
pop
jo
leave
out
mov
cli
ret
stc
jmp
sub
or
cmp
repnz
add
int3
decl
and
insb
add
xchg
shrl
cmp
pop
mov
push
mov
icebp
and
popa
push
cli
je
stos
and
sub
shll
stos
lds
lock
mov
cmp
sarl
adc
ja
popa
mov
std
dec
jecxz
inc
jp
movsb
test
testb
inc
xor
sub
cmp
cwtl
jmp
jbe
pop
dec
dec
testb
jecxz
lods
inc
push
cmpsb
inc
adc
mov
cmp
pushf
push
jae
cwtl
sahf
cmpsl
pop
ds
lcall
xor
adc
out
mov
clc
arpl
shl
xchg
stc
dec
fisubrl
loop
iret
pusha
mov
rorb
adc
jns
subb
sub
sarb
pop
fwait
aas
shll
sbb
scas
mov
lret
int
cmc
aas
shrb
aad
arpl
pushf
sub
loope
mov
fnstsw
mov
rorl
or
mov
test
in
scas
push
js
scas
pop
enter
call
insb
sbb
lahf
notb
or
lock
scas
dec
rsqrtps
mov
mov
pop
mov
xor
sbb
push
repnz
cmpl
sbb
or
mov
add
cwtl
je
and
or
jg
cmc
jnp
pop
inc
sub
mov
stos
std
movsb
popf
loopne
jmp
mov
add
dec
inc
inc
xchg
mov
jge
rcrb
popa
pop
fwait
inc
jmp
jno
enter
adc
or
xchg
rcll
mov
mov
fmuls
xor
stc
lock
mov
pop
adc
dec
sbb
rorb
out
fnsave
or
cli
jecxz
sub
fwait
mov
inc
and
push
xchg
adc
sub
stos
sbb
pop
out
pop
pop
push
mov
and
xchg
inc
or
adc
in
dec
adc
insb
mov
aad
lock
shlb
test
pop
lcall
add
test
sub
inc
es
psubsw
cmp
lods
shll
mov
mov
jmp
sbb
mov
sub
pop
sbb
mov
jle
push
std
leave
lods
inc
das
cld
arpl
adc
xchg
nop
outsl
lods
mov
and
cmpb
lds
addr16
js
jp
mov
loopne
mov
insl
enter
mov
xlat
inc
inc
cmpsl
sbb
mov
push
mov
and
pushf
adc
push
fisubrl
mov
xor
mov
sbb
or
leave
rcrb
ss
outsl
cmp
sbb
popa
shll
push
and
aaa
sti
rorb
mov
add
xor
or
push
jmp
sub
mov
xor
jae
pop
or
test
scas
inc
pop
or
mov
lahf
adc
mov
add
mov
xor
stos
add
flds
push
in
cmp
mov
pop
rol
insl
dec
cltd
push
cmp
xor
mov
inc
ficoml
test
mov
mov
jge
cmp
into
dec
ret
push
call
or
loopne
xor
push
cmpsl
sbb
add
aaa
xlat
and
mov
cmc
xor
les
push
mov
into
xchg
cmp
sar
mov
jb
xchg
lods
adc
addl
nop
ret
cmp
pushf
mov
out
push
lahf
push
and
out
jecxz
shrb
jge
mov
imul
xlat
cltd
dec
dec
mov
fcmovbe
fstpl
fiaddl
push
rolb
cmpsb
dec
jno
inc
mov
in
inc
outsl
inc
or
sbb
push
leave
repz
pusha
test
push
arpl
adc
arpl
xor
xor
jb
lcall
lods
cmc
xor
xchg
jns
test
cmp
sbb
jg
sub
leave
pushf
sbb
jns
fwait
jae
sub
leave
cmp
inc
div
xchg
sbb
movsb
inc
sti
or
adc
add
stos
or
insl
sahf
sbb
icebp
mov
test
jge
arpl
shll
mov
jge
or
je
lock
addb
sub
mov
push
gs
jge
cmp
adc
inc
add
xor
fdivl
bound
cmpsb
sbb
fistps
xchg
mov
dec
outsb
sub
push
test
int3
add
push
pop
xchg
ss
jg
push
dec
and
jge
xor
add
or
xor
sarb
cmpsb
fiadds
les
mov
push
mov
jnp
in
xchg
ret
xor
mov
aam
add
jno
fwait
movsb
jbe
hlt
mov
xchg
jecxz
and
aas
fstps
mov
mov
nop
iret
pop
pushf
and
push
mov
pop
shrl
stc
mov
ret
shll
pop
aad
or
cli
push
addr16
imul
xor
int
shl
inc
inc
mov
and
mov
out
inc
dec
stos
or
mov
sbb
jbe
and
and
lea
lcall
lahf
mov
sbb
dec
movsb
xchg
push
mov
test
clc
sub
in
jb
add
fists
cmpsb
sbb
push
push
jns
dec
jl
sub
pop
push
cmp
or
dec
pop
iret
daa
add
lea
cwtl
push
cli
jmp
enter
inc
mov
rcrl
pop
mov
adc
xchg
sbb
sbb
cmpsb
stc
inc
mov
and
shlb
push
mov
push
sahf
jmp
das
jle
adc
add
dec
add
daa
sbb
add
aam
sub
iret
sbb
out
pop
push
ret
inc
outsb
lods
xor
dec
mov
pop
lret
pop
enter
repnz
inc
or
movsb
loopne
lods
mov
sahf
inc
inc
insl
ret
mov
add
xor
xor
andl
int3
adc
ret
gs
scas
or
or
xchg
insb
xchg
inc
cmpsl
scas
out
cld
xor
cmpb
xchg
sub
adc
ljmp
inc
fcompl
xor
jp
in
mov
mov
add
xchg
adc
xchg
enter
and
lods
xchg
add
jne
in
daa
dec
xchg
cmpsb
imul
pop
push
int
imul
imul
xchg
jb
cmpsb
sub
movsb
hlt
int
sbbl
out
sbb
xchg
movsl
out
dec
mov
pop
xchg
and
jecxz
pop
pop
cwtl
jl
sbbl
pop
vmovss
sub
adc
scas
xchg
in
mov
clc
pop
mov
lods
cmp
sub
je
inc
xchg
adcl
dec
xorb
sbb
out
push
rcll
cmpsb
adc
mov
pop
and
push
ljmp
fistpll
push
xor
negl
push
add
pop
scas
sbb
push
push
cmp
jmp
push
movb
pushf
rorb
pop
pop
aas
clc
dec
mov
cmpxchg
cli
adcl
aas
fcomps
pop
popa
addr16
and
jle
xchg
mov
mov
fucom
xorb
mov
dec
notb
arpl
xchg
mov
inc
das
xor
sub
mov
pop
jmp
cmp
push
cmp
out
fxam
hlt
mov
push
xchg
outsl
adc
mov
mov
movsl
mov
lret
loop
cwtl
cmc
or
adc
or
mov
xchg
test
or
push
adc
jg
stc
out
or
push
outsl
mov
call
xor
imul
fnstenv
adc
sbb
adc
xor
js
adc
add
mov
mov
jne
pop
movsl
rorl
push
and
mov
sub
pop
sub
mov
or
pop
adc
addb
cwtl
hlt
ficoms
daa
jne
xor
pop
push
cmp
dec
mov
sub
mov
xor
cmpsl
jae
mov
lock
inc
das
inc
add
dec
test
cmp
xchg
arpl
lahf
pushf
insb
add
scas
in
push
iret
add
push
jns
fmuls
inc
cli
js
dec
xor
sbb
fcomip
push
cld
xchg
pop
cli
in
mov
mov
jmp
mov
adc
das
mov
repnz
js
mov
mov
jmp
cltd
jmp
xchg
pop
out
lea
xchg
bound
pop
cli
lret
mov
xlat
inc
loopne
loopne
mov
out
rclb
cmc
ja
leave
shll
jle
and
pop
mov
jb
mov
jnp
aas
add
fcompl
int
mull
lret
movsl
gs
inc
inc
leave
jbe
cmp
push
test
test
sub
sub
out
push
scas
mov
sbbl
mov
call
adc
pop
sbb
xchg
enter
mov
xchg
sub
ss
pushf
sbb
or
imul
push
rcrl
push
inc
lock
dec
jne
adc
aas
and
mov
xchg
stos
dec
xor
mov
xchg
sbbl
testl
outsl
ss
leave
stos
filds
inc
xchg
pop
call
hlt
or
cli
insb
ror
cld
andl
filds
mov
mov
cld
mov
add
cmp
hlt
popa
lea
divb
test
les
lods
stos
js
or
fmull
pop
mov
jg
movsb
rcl
push
fsubrs
xchg
and
jae
push
sbbb
jbe
pop
xor
test
mov
pop
adc
cli
cld
pop
push
sub
xor
xor
jg
push
add
xor
mov
subl
sbb
jno
xor
mov
movsb
cs
lret
cmp
jns
or
pop
rolb
fstl
pop
lret
lahf
aam
test
adc
sub
lea
loop
xchg
aas
test
testl
xchg
adc
stos
xchg
rcll
xchg
mov
jecxz
jle
int
imul
dec
dec
mov
push
xchg
out
dec
dec
jns
filds
jo
push
pusha
pop
scas
and
iret
dec
addb
sbb
in
dec
ja
xorl
mov
loope
push
push
outsb
cmc
jbe
arpl
xchg
fisttpl
imul
push
out
roll
sbb
xchg
sahf
jne
test
and
outsl
repnz
jmp
ss
mov
cmpb
and
fldt
sub
pop
xor
test
push
xchg
test
push
inc
push
or
xchg
sub
and
push
js
stos
movsl
inc
sub
std
fnclex
pop
mov
adc
cmp
enter
in
or
frndint
and
imul
repnz
call
jbe
xor
mov
sbb
out
out
push
stc
mov
adc
sbb
pop
sbb
mov
popa
clc
nop
mov
mov
push
aas
push
xor
inc
sub
outsl
iret
xchg
mov
scas
mov
and
cmpb
test
mov
or
add
xchg
out
lods
cmp
adc
stc
jge
mov
adc
pop
fwait
in
pop
es
jae
xchg
mov
push
test
cmp
aad
adc
int
leave
jg
xchg
pop
insb
loop
adc
mov
or
mov
mov
mov
frstor
and
test
adc
jo
aaa
sbb
xlat
push
popf
movb
jne
mov
mov
jne
or
mov
outsb
sbb
xlat
fidivl
repnz
into
inc
sahf
je
icebp
ss
pushf
jne
jmp
sti
test
loopne
jbe
cmp
or
aam
add
cltd
lds
test
mov
movsb
enter
loop
hlt
mov
aam
push
movsb
sub
sub
jecxz
bound
inc
jge
ficomps
test
into
cs
stc
call
daa
jecxz
out
sub
mov
in
loope
jge
pusha
pusha
xchg
jno
data16
test
jbe
rorb
jno
enter
mov
sub
adc
bound
add
lret
lods
into
rclb
mov
add
adc
adc
xchg
lahf
mov
xor
jmp
out
mov
cmp
mov
jns
jbe
sub
dec
mov
adc
dec
andb
or
jle
push
test
push
loop
lret
inc
outsb
jge
dec
pop
push
sub
push
jb
and
call
mov
stos
mov
xor
ds
push
dec
paddsw
les
sahf
jne
jno
add
sub
mov
and
icebp
mov
in
fwait
cli
sub
insl
jbe
cmp
pushf
pop
repz
movl
std
in
lods
xchg
pop
fidivl
cs
jo
test
jne
test
cltd
lods
loop
in
pop
sub
ret
add
cli
sub
test
sub
xor
jge
arpl
dec
jle
mov
outsl
sbb
rcrl
loop
mov
ret
ja
in
sbb
mov
popa
and
cmp
addr16
cmp
xor
aad
mov
dec
cmp
sarl
pop
add
les
leave
mov
std
push
outsb
inc
push
mov
imul
inc
push
and
jmp
dec
int3
mov
rorb
mov
test
adc
mov
mov
in
mov
mov
sub
xchg
cmp
mov
into
rorb
jo
push
es
pop
mov
lahf
js
or
inc
fistpl
xor
jmp
lds
imul
les
or
scas
repnz
push
cmp
leave
iret
sti
aad
shrb
adc
lea
mov
mov
and
mov
mov
mov
jb
push
sbb
mov
hlt
xchg
icebp
jmp
lods
jecxz
mov
xchg
add
fwait
push
add
xor
mov
mov
mov
fabs
scas
sbb
sub
jno
int
call
js
pushf
push
xchg
adc
scas
aaa
fmulp
das
xor
mov
sbb
insl
lcall
mov
sahf
lods
sbbl
adc
jno
mov
inc
outsl
pop
jo
sar
jnp
dec
mov
mov
cli
rol
and
mov
lods
mov
pop
stos
push
pop
or
daa
test
jbe
inc
call
xchg
mov
rol
mov
nop
xor
cld
adc
rcll
test
out
and
pop
cmp
inc
dec
outsb
imul
or
pop
hlt
roll
out
imul
addl
inc
pop
int
leave
cmp
rorl
out
pop
nop
cwtl
jmp
and
xor
aas
and
jno
lret
push
pop
je
adc
push
or
mov
add
push
or
test
mov
inc
fisubl
xor
mov
jns,pn
lret
test
push
ret
xchg
push
cld
mov
popf
mov
stc
push
pop
sub
cs
lods
sar
loop
sahf
jb
loop
mov
add
flds
push
scas
sub
xor
lds
cld
sahf
sub
xor
cmp
push
dec
inc
and
rol
cmp
divl
fwait
mov
pusha
pop
xor
int3
sub
cmc
pop
adc
mov
jmp
mov
test
lcall
repnz
pop
push
jmp
or
outsl
mov
adcl
add
sbb
test
dec
mov
jo
push
jp
inc
cmp
jno
mov
aaa
rclb
hlt
xchg
ficomps
mov
lahf
mov
hlt
hlt
dec
add
ret
xchg
popf
lret
dec
les
gs
divl
sbb
movsb
jns
mov
fmulp
sbb
jb
xchg
pop
push
shlb
adc
xor
and
lock
lahf
fildll
dec
jmp
sub
cmpb
fucomi
fs
fwait
test
pop
xchg
mov
mov
call
jl
bnd
mov
pop
pop
pop
loope
aaa
sbb
xchg
jnp
push
and
loop
cmp
xchg
pop
push
xor
sarb
xlat
mov
bound
pop
pusha
aam
int
or
scas
push
mov
rcrl
adc
scas
out
push
mov
aam
add
mov
cmpsb
mov
xor
xor
sub
aad
stc
xchg
add
mov
repnz
xor
mov
mov
mov
sub
sbb
addr16
xchg
ret
mov
mov
int
fiaddl
test
mov
lcall
enter
xchg
hlt
shrb
jl
cld
popa
in
ret
call
push
shlb
push
jecxz
xchg
shlb
int
pop
push
lea
dec
mov
popf
movsb
xchg
push
mov
sarb
jle
mov
lock
pop
aam
xor
push
fidivrs
xchg
sub
mov
push
gs
imul
cmp
lret
push
mov
xchg
out
dec
test
out
adc
fiadds
add
or
xchg
mov
fisttpl
push
mov
jecxz
cmp
gs
lods
jge
dec
bnd
pop
mov
fs
and
out
repnz
inc
jle
sub
dec
mov
mov
lret
adc
add
imul
or
imul
fwait
jle
jnp
clc
xchg
sbb
movsb
mov
adc
fisubrs
xchg
xchg
pop
mov
mov
or
xchg
iret
test
xor
sbb
outsl
pop
int3
popa
imul
iret
dec
mov
jb
add
jmp
out
imul
and
mov
sub
scas
xor
adc
push
pop
mov
shlb
sub
sbb
jmp
xchg
or
pop
mov
push
stc
mov
sarl
insb
js
xor
or
arpl
int
out
lock
bound
rcll
cmp
hlt
sbb
push
fisttps
shll
lock
inc
and
scas
repz
cmp
xchg
pop
xor
dec
lock
adc
outsl
jno
lea
popf
sahf
adc
or
rolb
imulb
cmc
adc
lahf
jb
push
cmp
in
push
sbbb
sahf
lods
je
sbbb
mov
or
fcomip
mov
jne
movl
push
and
cmp
fwait
out
push
es
cmpl
shrb
pop
jp
jle
xor
repz
cmp
push
inc
rorl
fisttps
adc
movsb
cmp
mov
stos
in
movsb
int
mov
and
inc
cmp
out
xchg
push
out
mov
test
xchg
add
cmp
jp
and
push
cltd
add
lret
push
add
popa
mov
sbb
je
loopne
add
lret
xchg
and
xlat
test
dec
inc
mov
fnstsw
into
pop
inc
mov
adc
push
mov
sbb
aas
cld
ja
movsb
or
adc
cmp
je
lret
pop
mov
xor
xchg
or
addb
std
lods
and
lahf
clc
push
aas
popf
xor
cmp
fs
xor
inc
lcall
sub
imul
pop
and
fsubrl
loope
push
lret
cli
add
inc
cmp
jae
push
shl
sbb
in
pop
nop
mov
daa
mov
xchg
push
fwait
rorb
sbb
fiadds
or
dec
add
push
cmpsl
add
je
imul
xor
xlat
mov
jle
and
loope
test
mov
psubsb
mov
and
repz
push
iret
jne
pop
jmp
lret
repz
test
dec
int3
repz
sahf
bound
and
in
push
imul
mov
push
pusha
adc
test
mov
mov
sub
and
mov
jge
or
inc
out
cmc
imul
arpl
mov
pop
rcrb
jno
mov
xor
movsb
xor
fistl
sbb
lcall
insl
cmpsl
fdivp
sarl
pushw
out
insb
call
sub
ljmp
andb
push
test
jno
inc
pop
jnp
adc
mov
nop
xchg
adc
push
enter
cmpsl
or
mov
cld
adc
jl
and
jne
fimull
xchg
ret
adc
inc
aas
sub
adc
push
scas
add
mov
push
dec
jo
out
pop
shll
adc
mov
xor
sub
dec
ss
push
or
flds
pop
inc
sub
xchg
cmp
dec
addr16
int
and
pop
jo
sahf
xchg
dec
fstpt
adc
dec
add
dec
sub
in
sbb
iret
mov
inc
in
mov
xchg
jno
dec
sbb
xor
out
mov
fucomp
aaa
cmp
xor
sbb
xchg
push
jmp
insb
push
xlat
mov
cmp
mov
sahf
mov
aam
mov
test
rcrl
xchg
sub
add
int
mov
mov
adc
cmpsl
push
pushf
out
subl
push
push
mov
pop
and
shlb
mov
fwait
or
test
push
lret
imul
pushf
push
test
push
jmp
dec
gs
add
cmp
incl
rcll
or
pop
lds
xchg
pop
push
in
cltd
sbb
xchg
outsl
loope
ljmp
sub
ror
int3
push
lret
xchg
pop
sub
test
cmp
in
pushf
test
out
pushf
mov
jl
shrb
xorl
loop
je
cli
int3
sbb
cmp
pop
adc
mov
arpl
xchg
mov
pop
icebp
dec
rcl
loop
stc
test
icebp
lret
jns
fs
mov
aas
mov
lahf
outsl
adc
dec
test
dec
push
add
xchg
pop
ds
into
dec
clc
mov
push
bound
adc
push
icebp
xor
sub
outsb
mov
add
imul
int3
mov
arpl
dec
xor
cmp
shrb
mov
lahf
std
adc
add
mov
adc
sub
ret
cwtl
pop
add
and
push
sbb
cmp
pushf
cmc
xchg
mov
dec
sahf
xor
cltd
ja
iret
jl
mov
push
or
push
fs
push
addb
nop
cmc
test
je
cmp
push
and
into
or
sbb
sub
testb
jb
push
adc
fildll
fsubs
test
stc
adcb
movl
jno
mov
jecxz
in
cli
adc
xorl
std
aaa
pop
leave
test
xor
inc
inc
dec
xchg
jmp
pop
popf
jle
rcr
test
xlat
inc
xchg
pop
loopne
loopne
pop
adc
push
or
xorb
push
rol
dec
inc
lock
mov
adc
dec
insb
jbe
fstps
xchg
and
mov
movsb
cmp
jle
dec
rorb
sub
adcl
or
or
push
aad
jno
or
lods
inc
iret
jg
out
mov
push
xchg
std
mov
cli
clc
and
pop
pop
rcrl
ljmp
out
dec
dec
push
jo
add
xchg
ljmp
add
js
pop
mov
mov
jae
inc
fldenv
cmp
cmp
jno
scas
rclb
cmp
mov
dec
add
test
repz
xor
fwait
outsl
push
pop
xor
sbb
sbb
subl
mov
scas
jb
sbb
jge
gs
leave
adc
std
shrb
mov
in
rcll
push
bound
dec
mov
jns
mov
jge
int
vmovupd
fidivs
popf
or
xchg
ds
lods
gs
add
shrb
test
or
enter
adc
out
gs
aas
jbe
mov
push
dec
inc
out
add
out
dec
xor
fwait
cmp
sbbl
shrb
push
sahf
push
xor
dec
hlt
jae
add
movsb
rcrb
aad
sbb
mov
xor
adc
mov
ds
inc
icebp
aas
movsb
sub
nop
pushf
xor
and
mov
shlb
dec
mov
lcall
push
cltd
push
into
loope
or
std
inc
inc
daa
jle
adc
mov
enter
xchg
fwait
mov
pop
mov
inc
mov
jp
scas
imul
sub
fisubrs
pop
push
mov
outsl
jp
lea
cmp
mov
pop
fisttpll
push
xchg
std
js
and
fildl
push
mov
cltd
adc
and
mov
icebp
xchg
lret
or
test
fsubl
cmp
and
orl
test
jmp
lods
pop
push
dec
push
jmp
add
das
jo
jns
sbb
fbstp
mov
adc
lret
push
pop
inc
or
xchg
call
inc
dec
repnz
mov
jp
fstpt
xor
cmpl
lea
push
ret
mov
leave
xor
xchg
push
cli
sbb
rcr
sbb
mov
cmpsb
stos
lock
jb
ds
push
gs
jmp
xchg
movsl
xchg
adc
mov
mov
int
lock
sti
or
and
sahf
addr16
pop
test
aaa
movl
pop
sbb
out
mov
add
push
daa
rcl
mov
ret
jnp
mov
cwtl
cmp
out
mov
pop
dec
jnp
inc
mov
cld
inc
rcl
or
or
fildl
sub
xchg
aaa
loope
fimull
add
hlt
push
jecxz
xchg
xchg
clc
pop
mov
push
xor
repz
mov
pop
add
or
inc
jge
iret
push
pop
mul
test
xchg
mov
jl
sbb
decb
sub
inc
lods
mov
pop
adc
mov
jb
or
pop
sbb
sbb
add
pop
adc
push
and
adc
add
lock
mov
rcl
sub
fisttpll
mov
lahf
in
mov
mov
sahf
lret
adc
dec
lahf
jae
pop
xchg
out
push
inc
cmpsb
mov
cli
dec
mov
and
incl
add
bound
lcall
test
mov
imul
xchg
subl
sarl
cmp
xlat
xchg
inc
jecxz
xor
in
xchg
sbb
loopne
imul
cmp
and
mov
dec
pop
push
mov
cmp
sbb
inc
rcrb
cld
arpl
js
insl
imul
cmp
popa
cmpsb
lock
jl
inc
iret
inc
push
fisubrs
xor
xor
or
je
and
push
sbb
icebp
xlat
fbstp
push
aam
fnsave
mov
sbb
pop
push
lret
icebp
push
dec
adcl
dec
push
inc
pusha
xor
subl
lds
out
pop
jmp
xorb
inc
xor
sub
mov
inc
icebp
pop
jecxz
pushf
inc
xchg
addr16
xchg
mov
push
xor
nop
jb
xchg
and
cmpsb
push
insb
stos
es
add
add
xchg
and
push
lds
fldcw
fbld
mov
jl
cmpsl
mov
or
test
into
cwtl
jae
adc
xchg
aas
sub
add
sbb
sti
push
dec
ja
xchg
cmc
pop
or
in
mov
mov
aad
outsl
imul
ja
mov
cmp
push
cmp
daa
dec
push
jecxz
push
mov
push
outsl
std
xchg
ljmp
push
daa
fistl
stos
xchg
cli
and
pop
nop
cs
and
out
pop
ret
lods
jecxz
ja
sub
lret
imul
mov
mov
or
icebp
fldcw
inc
and
outsl
dec
addb
sahf
lock
jl
mov
sub
xor
shll
jle
xchg
popa
out
sub
negl
lahf
push
jmp
pushf
sub
in
ucomiss
out
cs
sti
sbb
sub
sub
pop
push
mov
adc
or
mov
xchg
call
fdivl
mov
shlb
cmpsb
and
jno
bound
jp
push
and
mov
xchg
pop
adc
mov
add
mov
test
push
add
mov
pop
xor
push
jo
outsb
jae
sbb
xlat
fimuls
push
cmpsl
or
pop
cwtl
in
mov
dec
pop
inc
jo,pt
test
gs
in
int3
mov
jns
push
add
fildll
dec
xchg
xchg
mov
sbb
cmp
xchg
pushf
rorl
sub
jno
fistl
fs
leave
inc
test
inc
inc
push
out
leave
sbb
pop
jg
jg
push
mov
push
dec
mov
and
sbb
nop
stos
sub
mov
mov
insb
push
fidivs
jg
push
add
mov
mov
adc
pusha
popa
dec
mov
aam
push
add
aam
inc
arpl
mov
idivb
shrb
ret
jmp
jo
jp,pt
ret
iret
jbe
in
and
aam
jg
int
lahf
xchg
into
xchg
mov
pand
push
inc
inc
inc
and
out
sahf
and
add
sub
aad
cmp
push
or
push
enter
adcl
or
sub
dec
cltd
or
push
cmpsl
popa
jno
jae
dec
adc
pop
push
movsl
jg
sbb
mov
pushl
sbbb
repz
sub
jb
inc
imul
pop
add
cld
jbe
hlt
xor
lds
fidivl
into
jnp
push
daa
lcall
xlat
xor
mov
mov
test
or
pushf
jae
pop
incl
dec
lcall
push
cmpsl
xor
and
flds
mov
test
fdivl
xor
xlat
inc
sub
in
lret
lock
fwait
outsb
imul
cld
jl
mov
and
das
inc
dec
push
int3
mov
and
mov
xchg
pop
adc
insb
pop
sub
lods
test
notl
mov
jbe
xor
or
cmp
imul
jmp
stc
xor
stos
sub
andl
pop
dec
inc
cmc
ret
push
adc
xor
mov
dec
jne
lods
and
sti
add
fidivrs
shr
jne
mov
sbb
imul
adc
cmpsb
adc
movsb
test
je
push
mov
lret
sub
inc
dec
stos
js
pushf
mov
push
ret
and
aas
inc
das
xor
adc
sbb
cltd
punpckhwd
lock
mov
dec
push
sub
or
sbb
insl
lea
xchg
lcall
dec
cmc
test
out
pop
dec
jne
lret
pop
rcrb
and
pop
push
sbb
adc
mov
mov
xor
lcall
decb
adc
mov
cs
pushf
ss
ljmp
outsl
jbe
jle
push
ljmp
ds
lret
jp
or
mov
aas
add
testb
adc
roll
loopne
dec
sub
add
xchg
xorl
pop
push
stc
out
push
pusha
fnsave
ljmp
xor
adcb
pop
icebp
sahf
jmp
test
mov
jmp
stc
ret
repnz
mov
sbb
lods
ret
or
jb
aam
cs
loop
rclb
push
bound
jae
or
sti
inc
lcall
aaa
testb
in
xor
loop
cld
add
cli
mov
fisttps
jp
cltd
adc
add
hlt
test
sbb
enter
dec
aas
sbb
aaa
cmp
pop
adc
xor
loope
int3
in
dec
repz
loopne
mov
adc
sbbl
into
call
dec
xchg
fnstsw
hlt
xchg
cli
shl
jns
xrelease
mov
mov
int3
idivb
ret
jno
rclb
cs
mov
sbb
xchg
mov
loop
cmp
in
add
sbb
mov
xchg
fisttpll
mov
std
cmp
cmp
mul
dec
ljmp
push
or
jge
ja
and
repz
or
sbb
jmp
push
popf
or
inc
lods
xchg
sbb
mov
scas
inc
push
into
xorb
xor
shll
jnp
fistps
movsl
push
push
pushf
fcmove
mov
in
jno
xchg
icebp
xchg
mov
mov
dec
jmp
imul
mov
or
movsl
inc
fists
inc
lret
aaa
xor
insb
loopne
mov
je
aas
xor
fisubrs
pop
xor
repnz
test
sub
inc
inc
cmc
mov
rorl
fnstenv
lds
jl
inc
into
sub
pop
ja
cmp
js
jmp
mov
inc
pop
adc
sub
mov
sarl
xchg
int3
dec
sbb
shll
lret
add
pop
lret
xchg
pushf
rcl
div
xchg
ljmp
mov
add
mov
adc
leave
mov
cmp
mov
sub
xchg
lea
jnp
out
test
lret
adc
xchg
fcoms
ret
or
int
jge
and
fsubrl
mov
jmp
and
sub
inc
add
adc
lahf
mov
and
addr16
daa
adc
lods
lcall
jne
filds
inc
mov
cltd
mov
cmp
sbb
jns
add
adc
cmp
paddq
lret
ror
addr16
and
cld
out
scas
outsl
dec
sbb
sbb
xor
pusha
popf
mov
fucomi
pop
jp
pop
dec
cmp
push
addr16
shll
jp
add
mov
xchg
sub
lods
xor
mov
jno
xchg
xchg
pop
mov
data16
stc
cmp
ja
and
or
pushf
cmp
shl
cmpsb
cmpsb
arpl
leave
push
xor
clc
or
std
popf
in
xchg
jbe
lret
cmp
lods
add
pop
ljmp
es
mov
jnp
sti
cmp
jg
inc
rcll
sub
inc
pop
xchg
inc
mov
mov
xchg
nop
sbb
outsb
mov
ret
int3
pushf
ficomps
cmpsb
adc
bound
fs
push
lock
add
xchg
addb
int
inc
out
or
outsl
sbb
addb
adc
or
popf
fldpi
mov
movsl
out
adc
mov
imull
xor
stos
and
sarb
push
std
and
ret
clc
arpl
jb
push
add
xchg
ds
test
xchg
add
xchg
dec
std
or
outsl
insl
out
jmp
jle
cmp
adc
clc
ss
ja
or
inc
in
rolb
mov
pop
aam
xor
test
mov
xor
xor
idiv
in
fnstcw
mov
add
and
mov
sbb
xchg
enter
sub
test
jmp
test
push
daa
or
fidivs
mov
jne
mov
je
rorl
mov
ret
push
lret
in
jmp
into
xlat
ret
fs
inc
dec
jno
imul
mov
out
cltd
sbb
mul
andl
sbb
incb
das
adc
movsb
push
push
xor
adc
jl
sub
out
cmp
movsl
aad
mov
mov
pop
sub
loopne
or
lods
aad
inc
cmp
mov
mov
adcb
sub
xor
sbbb
inc
inc
pop
mov
fidivl
pusha
add
adc
pop
aam
cmpsl
fimuls
mov
je
pop
ret
faddl
daa
aam
js
adc
jmp
cmp
mov
pop
dec
jo
xor
out
and
cs
ljmp
aaa
fbld
fwait
pop
in
js
cmc
inc
mov
mov
inc
xchg
pop
pushf
ret
cmp
icebp
cmpsb
call
jge
mov
imul
pusha
mov
lret
aad
push
es
js
mov
pop
jmp
xor
add
fistps
push
int3
js
xchg
add
orw
inc
daa
pop
sub
data16
daa
cld
lds
ret
mov
stc
sub
loope
ljmp
mov
flds
aaa
stos
fxch
push
push
lds
mov
mov
mov
sub
push
arpl
arpl
arpl
rclb
mov
add
or
pop
add
daa
mov
push
sar
divl
cmpsl
xchg
and
mov
dec
push
rol
pop
jnp
lds
mov
jne
xchg
fimull
jmp
xchg
jb
enter
fildll
mov
incl
sbb
out
fists
sbb
inc
sub
inc
jnp
aam
mov
xor
ficoms
popa
call
stos
rcll
pop
xor
mov
popf
iret
lahf
or
xchg
xchg
std
in
repz
fldt
mov
cmp
adc
ja
sti
mov
lods
cmp
jmp
sub
std
mov
jmp
dec
mov
mov
xor
ds
sbb
add
adc
push
mov
rcrl
and
inc
aaa
push
arpl
test
ss
push
cmp
fstl
and
cmp
inc
leave
lcall
cwtl
mov
or
sbb
pop
sub
inc
xor
insb
les
ss
xchg
in
enter
jge
inc
cmpsl
push
movsl
push
push
inc
sbb
adc
mov
aaa
dec
and
in
stos
sub
out
ja
sub
sbbl
out
icebp
mov
jge
inc
popf
or
adc
mov
popf
pushf
inc
pop
inc
cmpsl
and
int
xchg
xchg
aam
sbbl
or
pop
mov
jne
shll
mov
ljmp
je
mov
jg
pop
add
in
loope
mov
inc
xchg
test
mov
lods
int
add
outsb
popa
or
mul
cltd
jb
xor
cmpsl
clc
fcmovnbe
mov
dec
or
aad
jo
pop
mov
and
fldl
jnp
pop
pop
push
ret
xchg
test
inc
sbb
stc
lock
jmp
jnp
fwait
lcall
push
out
cmp
loop
call
les
rcrb
mov
mov
outsl
jae
and
adc
sbb
adc
dec
iret
or
pushf
stos
xor
aas
sbb
lods
mov
dec
repz
stc
fs
in
sbb
xchg
and
cld
pop
imul
decl
aas
mov
jns
pop
mov
sbbb
xor
pop
testl
inc
sub
fiaddl
mov
or
cmp
stos
subl
add
sub
cmp
lea
jne
sarb
add
sub
or
addr16
mov
push
and
mov
xchg
ffreep
lods
out
sub
aas
adc
fnstenv
ja
mov
add
enter
mov
mov
cs
cmp
aaa
inc
push
arpl
roll
mov
ljmp
int3
push
insl
cld
mov
sbb
cltd
cltd
inc
sbb
outsl
mov
ljmp
std
lods
or
xor
fnstcw
push
lock
jge
popa
dec
fwait
cmp
lea
into
mov
jbe
les
jne
in
aam
jmp
fs
jns
mov
negl
imulb
stos
mov
cmp
cmp
cmp
cmp
adcl
or
cmp
into
scas
adc
and
gs
sar
mov
sbb
popf
jge
mov
pop
dec
cmp
lea
mov
mov
jle
inc
in
andb
les
ret
adc
repz
sub
sbb
jne
sahf
mov
cmp
out
shrl
push
inc
decb
dec
fmull
mov
cmc
lods
pop
sahf
pushf
sub
popf
push
add
in
mov
shlb
xchg
mov
jns
cmp
std
lea
out
xor
pushf
out
xor
dec
xor
cmpsb
jbe
ret
cwtl
out
insb
push
test
mov
fbstp
add
sbb
leave
pop
or
sub
cwtl
ja
sub
lret
cs
fcomps
bound
cmp
push
sbb
test
push
sub
cmc
xor
inc
lahf
dec
daa
or
push
push
adc
aad
dec
sub
ret
sub
sub
cmp
sub
inc
loop
mov
or
xlat
sub
enter
mov
adc
and
mov
jns
xor
shrb
cmp
inc
pop
out
dec
lretw
sbb
lods
pop
mov
inc
xchg
xchg
in
jmp
or
mov
mov
outsb
mov
repnz
inc
cwtl
sar
lds
bnd
imul
mov
and
scas
pavgb
scas
cmp
mov
mov
test
sbbb
movsb
fsubl
lcall
int
mov
fnstsw
adc
xor
int3
xor
mov
pop
lret
xor
je
xor
cli
push
mov
xor
mov
out
xor
dec
jle
xorl
fsubl
popa
lds
rclb
xchg
mov
test
dec
sub
sub
out
rcll
popf
mov
lahf
xor
out
mov
mov
stos
cmp
ja
pop
mov
outsl
lods
pop
mov
push
cmp
in
lcall
mov
dec
movsb
xorl
adc
inc
in
sub
xchg
jmp
stc
xchg
aam
adc
imul
mov
xor
lret
int
dec
and
mov
jecxz
xchg
mov
sbb
in
outsl
cwtl
shr
or
jnp
pop
mov
dec
xor
inc
mov
loopew
test
jb
push
dec
lds
cltd
loop
cmp
sub
cmpsl
les
jae
or
xor
lea
xchg
lods
jge
mov
insb
idiv
xor
mov
xchg
ss
cmpsb
mov
xor
shl
mov
cld
dec
inc
dec
nop
in
adc
sub
or
and
pop
dec
dec
push
jle
arpl
push
jno
or
fucomi
jb
into
add
movzwl
lock
test
xchg
or
adc
push
inc
mov
inc
sbb
mov
jecxz
jbe
sti
xor
jo
and
pop
xchg
mov
jmp
les
and
int3
inc
shl
aas
outsb
fcom
add
movsl
and
rclb
and
xchg
rorb
cmp
jno
adc
dec
sbb
and
add
xlat
sub
pop
std
lock
adcb
pop
adc
in
adc
mov
jecxz
inc
jge
es
sub
xor
sub
hlt
fdivr
js
mov
outsb
or
jmp
sub
add
cmpsb
push
pop
arpl
stos
mov
add
pop
xor
or
cwtl
sbb
stos
or
push
mov
and
jg,pn
or
cmp
cwtl
aas
dec
shll
fcomp
push
mov
punpcklwd
loopne
outsl
clc
out
mov
mov
iret
xchg
in
or
adc
rorl
adc
fistpl
mov
pushf
dec
sarl
sbb
sub
or
push
scas
sti
lea
mov
xchg
cld
sbb
sbb
push
pop
push
aas
out
insl
add
fs
inc
aaa
sbb
mov
pop
dec
xor
movsb
movntps
adc
dec
movsl
fldcw
mov
fbld
jae
lea
lret
mov
mov
sub
movsl
or
dec
add
das
stc
jne
mov
lock
mov
ffree
dec
lock
add
lods
inc
dec
mov
aad
loopne
scas
pmaxub
inc
pop
or
xchg
lods
dec
dec
add
in
mov
lods
mov
jne
ljmp
xchg
cmp
or
ja
inc
out
sbb
push
clc
mov
push
mov
mov
mov
stc
sub
jo
xchg
sbb
mov
push
bound
adc
add
push
fbld
and
push
pop
xchg
push
xchg
ds
jp
in
shll
mov
mov
pop
jg
leave
xchg
xor
stos
lcall
jne
push
cmp
add
cmc
stc
and
push
cmpsb
ret
xchg
stc
ret
loope
arpl
xor
xchg
ffreep
sub
jns
cld
jle
pop
sub
cmpsl
or
or
decl
ljmp
and
mul
push
push
sub
mov
adc
jns
mov
cli
push
inc
daa
pop
pop
adc
cmpsb
mov
cmp
jnp
mov
sahf
aam
sbb
jp
std
push
xchg
jnp
push
sahf
scas
ret
mov
js
sub
dec
fistps
and
xchg
fcomps
push
fwait
js
sbb
jge
inc
sarl
shr
fwait
cmp
lret
gs
aas
out
aaa
int
add
cmp
je
jg
daa
push
dec
sarl
jmp
bound
jo
jmp
insb
mov
pop
dec
inc
jg
add
movsb
mov
push
insl
dec
pop
xchg
mov
das
push
jnp
int
adc
xor
test
insb
pushl
ret
push
movsl
dec
jp
mov
xchg
mov
cmp
cltd
leave
cmp
aam
popf
les
js
sub
icebp
popf
push
pusha
add
sub
mov
xor
lret
fstpl
movsl
add
shlb
out
mov
pop
jb
cmpsl
or
push
idiv
mov
push
pusha
sbbl
xchg
push
inc
daa
mov
loope
lahf
xor
add
sbb
mov
mov
outsb
mov
test
mov
dec
pop
adc
leave
rcll
mov
xchg
lret
mov
dec
int
popa
test
push
add
xchg
push
or
pop
jnp
sbb
xchg
scas
popf
loopne
adc
cmp
scas
pop
cmpsb
stos
bound
xchg
push
das
push
ret
cmp
or
lahf
mov
shl
sub
xchg
mov
xchg
jge
inc
pop
xchg
cmp
arpl
mov
push
xchg
mov
aad
and
push
and
clc
or
stos
repnz
or
and
cmp
sbb
fstl
ljmp
pushf
leave
fmuls
mov
pop
sub
dec
pop
rol
xchg
or
sbb
cmc
inc
je
jns
inc
mov
adc
lret
jno,pn
mov
stc
lret
pop
frstor
cwtl
loop
sub
pop
imul
mov
mov
negb
enter
xchg
xor
mov
addr16
or
dec
push
mov
dec
nop
xchg
cltd
jo
and
pop
lret
in
mov
mov
cmp
imul
jb
adc
cltd
lds
ficoml
jg
arpl
pop
add
stos
cmp
xchg
push
lcall
xor
sub
jne
imul
ds
adc
arpl
mov
ds
mov
inc
pop
outsl
ret
xor
sub
popl
lcall
lock
dec
dec
mov
rorl
inc
daa
xchg
dec
call
gs
iret
or
cmp
jge
pusha
pop
dec
pop
inc
and
scas
faddp
mov
inc
cmpsb
fcompl
push
push
sbb
stc
pop
adc
or
jne
insl
lods
popa
cmpsl
and
insl
adc
imull
xchg
lods
outsl
xor
arpl
lcall
mov
push
jge
mov
cs
xchg
mov
call
out
fs
ja
cmp
jge
add
mov
popa
cld
or
xchg
mov
xor
daa
xor
sahf
in
xchg
push
scas
notl
pop
xor
xchg
adc
js
sub
pop
xchg
sub
roll
mov
out
sbb
dec
clc
fwait
ds
ja
hlt
aam
xchg
push
out
imul
add
cmp
cwtl
ret
and
xor
xchg
xchg
insl
cwtl
push
les
xor
mov
testb
lret
or
sarb
lret
add
gs
sbb
pusha
inc
movsl
lea
dec
push
test
add
jp
push
aad
mov
outsl
push
xor
xor
rcrl
ljmp
cmc
cmpsl
or
push
adc
push
cmp
or
imul
xchg
std
mov
dec
mov
rcrb
cld
push
mov
cli
add
adc
mov
scas
orl
lcall
lahf
stos
aas
test
pop
pop
dec
out
lea
jge
addl
cmp
lock
add
jae
subl
cmp
mov
fld1
and
out
dec
fnstsw
test
cs
mov
std
and
inc
jmp
outsb
mov
mov
push
ret
pop
and
and
mov
addr16
xor
cltd
jb
xchg
mov
sub
or
roll
call
lods
push
ror
xor
push
ljmp
mov
popa
dec
jae
std
decb
inc
test
dec
or
sub
mov
or
cmpsb
add
and
loopne
pop
jns
xor
inc
cmp
imul
int
lret
xchg
int3
lahf
sub
push
fstpt
lods
int3
lret
inc
jmp
outsb
sub
aas
in
xchg
lods
std
xchg
push
inc
mov
mov
fsubrs
xlat
mov
pop
outsl
add
mov
stos
jl
fmuls
call
xchg
sub
lahf
rorb
outsb
mov
cmc
rolb
bound
xor
cli
sub
xor
jle
cmpsb
in
js
daa
test
ljmp
cmp
movb
mov
lods
cmc
icebp
or
inc
and
fs
and
loope
mov
les
fistpl
cmc
or
mov
xchg
sbb
jae
push
dec
sub
ret
add
mov
lret
pusha
push
ret
push
ds
ljmp
jne
stc
outsl
repnz
out
sbb
mov
mov
push
rcrl
movsl
mov
lret
fcomi
lahf
jg
jbe
mov
pop
pop
stos
sbb
pop
mov
pop
fcomp
dec
sti
add
xor
out
repz
aas
ds
imul
clc
leave
add
push
out
sbb
data16
leave
xor
outsl
inc
xor
lds
mov
cs
ja
in
jg
push
fcoms
push
mov
popf
stos
jae
jecxz
imul
mov
in
scas
aaa
cs
cmp
ljmp
sbb
pop
and
inc
dec
inc
push
xor
imul
pop
sti
ss
xor
xor
imul
mov
hlt
pusha
cmp
xor
std
or
dec
mov
mov
scas
cmc
leave
out
or
rorl
mov
push
nop
shrb
xor
mov
add
and
sbb
test
cld
ret
ljmp
pop
repnz
and
push
outsl
xlat
test
stos
sbb
sbb
sbb
clc
sub
test
test
sahf
mov
pop
test
dec
lret
pushf
pop
enter
sarl
pop
jne
pop
in
sub
outsl
loopne
rcll
rcrl
push
notb
inc
aam
pop
les
xchg
push
mov
sbb
push
rorl
shll
jl
jne
push
lret
xchg
xchg
test
pushf
icebp
inc
add
pop
adc
lds
jbe
inc
xor
gs
fld
mov
jg
pushf
adc
outsb
adc
movsb
pop
add
insb
leave
ds
int3
ret
adc
cmc
mov
dec
in
push
loop
add
cmpsb
inc
xchg
loop
loopne
movb
adc
ss
mov
popf
mov
lcall
mov
jo
cmp
stc
cmpsl
fucom
sub
loope
lock
cli
mov
mov
sbb
add
mov
and
jle
xor
mov
adc
xor
or
stos
clc
fnstcw
pop
ljmp
lcall
addl
jge
cmp
mov
sbb
or
rcrb
hlt
jmp
push
gs
cmp
inc
adc
cmp
add
in
sbb
cmp
jge
xchg
clc
jmp
outsb
jns
cmpsl
xchg
mov
mov
repnz
dec
jns
mov
cmp
xchg
cmp
mov
out
pusha
or
les
aad
push
test
into
mov
fisubs
inc
jbe
fmuls
inc
outsb
data16
cmp
push
xchg
xlat
andb
adc
ret
mov
incb
jle
dec
loopne
pushf
jge
shlb
lahf
adc
lds
in
in
push
xchg
mov
icebp
leave
jle
push
lcall
scas
adc
xchg
push
dec
mov
dec
notl
out
and
cmp
shl
lods
js,pn
cmp
clc
add
mov
add
ficoml
dec
and
push
mov
push
mov
dec
leave
sub
imul
in
inc
or
aad
divl
adc
xchg
jge
int
xchg
stc
pushf
cmp
or
inc
cmp
pop
sbb
mov
jecxz
mov
xchg
jg
aad
or
inc
push
pop
roll
ret
jmp
sbb
xor
test
pop
scas
sahf
stc
scas
aam
add
pop
sbb
addl
adc
mov
dec
mov
pop
xchg
cmc
ljmp
add
aas
mov
pop
ficomps
cmp
and
mov
sub
and
mov
lret
pop
xor
jns
adc
mov
dec
testl
and
aam
dec
jmp
andb
insb
or
jmp
cltd
pop
rorb
inc
or
mov
cltd
cmpsb
sti
loopne
cmpsb
notrack
jmp
int
popa
pop
add
es
movsl
cmp
cmpsl
aad
push
into
mov
scas
pop
rol
ror
push
mov
mov
and
adc
or
pushl
cs
xchg
mov
mov
dec
add
test
testb
out
xchg
filds
xor
pushf
insl
ret
xor
aaa
cmpsb
test
popf
push
leave
pop
test
cwtl
pop
shrl
xchg
lock
mov
mov
mov
into
pop
push
loope
popa
sahf
loope
cmp
xor
xor
adc
xor
pop
mov
dec
mov
and
out
push
sub
int
addb
push
push
adc
outsb
cmp
mov
xchg
pop
xor
pop
xor
inc
xor
adcl
cmp
data16
nop
mov
pop
mov
inc
imul
shlb
mov
jmp
jbe
test
pop
sub
dec
popf
mov
dec
fcmovnu
lods
push
push
mov
jecxz
aas
inc
or
test
sub
sbb
aas
xchg
and
cmp
dec
jg
and
movsb
js
cmp
pop
fisttps
pop
adc
mov
pop
js
inc
xor
xchg
sub
adc
sub
push
dec
sbb
inc
pushf
mov
mov
pop
xchg
fadd
fldcw
cwtl
jno
shrl
xchg
stos
enter
cmp
and
push
data16
dec
add
cmp
test
in
push
mov
mov
jae
popa
xchg
xor
das
in
fimuls
xchg
mov
in
in
push
ss
shlb
adc
jbe
ffree
xchg
xchg
adc
in
pushw
lret
cmpsb
push
aaa
test
push
shll
push
add
out
add
pop
xor
fs
mov
mov
fnsave
lods
cmpsb
lret
dec
push
adc
adc
jmp
adc
adc
push
popf
cmpsb
pop
loope
jns
mov
jnp
mov
xorl
jmp
lcall
add
mov
mov
sbb
sti
incl
xchg
sbb
push
sbb
adc
scas
roll
pusha
pop
shlb
fidivrl
sbb
adc
insb
addr16
push
jb
cvttps2pi
decl
push
rcr
push
in
and
inc
cmp
cmpb
adcl
adcb
lret
inc
jge
cmp
cmpsb
sbb
out
lds
jg
fnstcw
mov
mov
cmpsb
aas
cs
scas
mov
push
addr16
imul
adc
mov
push
push
jae
and
cld
movsl
mov
cmp
mov
add
dec
xchg
jg
sub
fnsave
pop
arpl
fistps
insl
pop
test
cltd
js
push
loopne
dec
cmpl
iret
mov
mov
enter
loopw
inc
psubsb
push
lods
jge
sbb
push
mov
out
push
or
mov
roll
jo
outsl
cltd
pushf
mov
dec
mov
out
fildll
mov
pop
or
mov
xchg
mov
in
sbb
dec
pop
xor
jno
xor
lret
inc
push
cld
xor
lock
sbb
aam
jmp
push
or
loopne
gs
pushf
push
and
jo
cwtl
mov
hlt
xchg
sahf
pop
clc
adc
push
cmp
sti
fcompl
cmp
mov
push
loope
push
in
mov
jno
xchg
into
outsl
jb
pushl
outsb
lret
mov
inc
icebp
sub
jl
pop
sbb
cwtl
pushf
push
cld
adc
popf
rorl
ja
popl
pop
mov
jno
mov
or
xchg
icebp
insl
decl
fcoml
imul
mov
inc
mov
mov
inc
mov
mov
pop
ret
pop
incb
test
in
loope
pop
mov
cmpsl
in
test
gs
pop
out
iret
and
aam
push
js
mov
and
push
cmpsb
test
call
inc
in
inc
out
mov
adc
sub
and
lahf
loop
mov
mov
es
xchg
lahf
pop
mov
jns
hlt
mov
ffree
push
jns,pt
cltd
push
outsl
in
mov
and
mov
mov
in
push
imul
pop
in
cmpsb
add
ret
cmp
scas
jmp
and
mov
mov
sub
in
xor
call
mov
mov
js
push
scas
ret
stos
notb
mov
ss
fs
aas
cmc
cmp
jl
sub
cmp
inc
repnz
and
imul
sbb
mov
cmp
sub
cld
lds
add
xor
mov
push
xor
fnop
jae
pop
in
mulb
jae
lea
xchg
jl
jmp
inc
loopne
scas
mov
xchg
add
stc
add
mov
adc
popf
sub
loop
and
push
test
dec
inc
cs
js
insl
in
insl
hlt
iret
sbb
ljmp
fbld
sbb
xchg
sub
pusha
or
scas
and
mov
mov
lcall
jne
xchg
jmp
negb
push
mov
adc
pop
push
out
lahf
stc
sub
mov
or
or
xor
addr16
push
inc
lcall
pop
adc
mov
cli
jle
jbe
cwtl
add
int
cmp
push
mov
insb
imul
mov
push
push
enter
jae
sbb
test
test
scas
jno
outsl
push
test
xchg
push
addr16
stc
mov
xchg
jle
push
iret
daa
pop
and
loopne
pop
hlt
imul
mov
dec
add
aaa
dec
inc
mov
push
cmpsl
jnp
sub
dec
push
imulb
test
push
sub
xor
hlt
cmp
dec
inc
mov
test
lret
jp
and
mov
ss
add
loopne
mov
clts
mov
pop
repnz
push
out
sti
enter
cmp
in
test
aas
js
push
mov
pusha
or
sub
enter
vpacksswb
mov
sub
mov
dec
pop
or
lods
xchg
jnp
bound
cli
push
push
ret
push
out
in
insb
popa
pushf
pop
std
xchg
ret
push
pop
sub
dec
pop
mov
pop
jbe
je
leave
cmp
ret
sbb
pop
call
pop
rcrb
sbb
dec
lret
cltd
mov
or
inc
arpl
clc
imul
sbb
lcall
idiv
insl
jno
jns
movsl
les
loope
sbb
icebp
jns
stos
mov
push
inc
ja
jecxz
pusha
jno
and
lds
in
cmc
popa
xor
jmp
sub
lcall
sub
push
xor
out
push
inc
decb
jge
mov
push
mov
clc
ss
aaa
adc
loopne
or
push
je
mov
gs
add
fdivl
and
shll
call
xor
mov
pop
lods
mov
mov
insb
inc
lahf
cmpsl
addr16
xchg
mov
dec
jg
add
subl
dec
inc
mov
xchg
decl
dec
test
fimull
xchg
lahf
dec
inc
xchg
push
popf
pop
nop
bound
loopne
push
xor
lret
jge
imul
xchg
mov
es
pop
adc
mov
in
cmpsb
nop
push
movsl
xor
sbb
xor
stos
add
rclb
mov
les
fwait
out
in
cmpsb
mov
jge
adc
mov
fwait
jmp
out
int
mov
sbb
sbb
jae
xor
xchg
sub
outsl
rcll
test
nop
mov
jecxz
pop
arpl
push
cmp
int
sarb
shlb
inc
and
mov
shlb
clc
sub
cmp
sub
insb
dec
cli
push
shlb
and
dec
std
icebp
ja
mov
push
cmpsb
aad
xor
pop
jno
xor
push
jne
das
into
lods
xor
dec
xor
push
fs
or
inc
dec
xchg
popa
movsb
cmp
fadds
add
jg,pt
inc
test
cmc
pop
lods
enter
sbb
andb
mov
jle
push
ret
lds
inc
psrlw
mov
push
pop
mov
data16
movsl
lahf
pop
inc
out
cmp
outsb
fiadds
mov
test
push
jns
movl
mov
sti
stc
jns
cmp
fwait
jmp
cmpb
cmp
test
cwtl
dec
mov
leave
add
lcall
into
mov
or
push
sahf
ret
jecxz
enter
xchg
in
add
mov
movsb
mov
in
push
dec
mov
fadd
ljmp
xor
mov
mov
addr16
cmp
sbb
or
push
cmpsl
xchg
inc
xchg
mov
pop
xorb
outsl
mov
xchg
into
jnp
fs
clc
sbb
fldt
mov
pushf
mov
sar
adc
sub
mov
sub
daa
or
jg
xchg
push
in
rclb
mov
inc
xchg
sbbb
rcrl
cld
mov
es
xchg
push
pop
dec
pop
jp
inc
out
mov
fstl
js
cmp
sub
and
data16
rolb
aad
fistl
xchg
cmpsl
mov
add
push
push
shr
lock
mov
add
sbb
jle
adcb
lret
fcmovnu
cwtl
cmpsb
or
out
ficomps
sarl
add
cmp
sub
inc
sbb
dec
pop
cmp
jmp
jne
frstor
mov
mov
aam
rol
cld
dec
jns
xor
cmp
sub
push
sbb
shrl
je
inc
push
daa
lds
outsb
xchg
xchg
lret
xchg
lock
inc
rcll
pop
aam
push
pop
or
dec
in
sbb
aaa
data16
daa
mov
pop
mov
jo
push
adc
mov
inc
rcrl
xor
aas
mov
mov
fistpl
into
push
jp
mov
fwait
andb
jne
add
bound
movsb
aad
xchg
sub
or
jg
xchg
aas
adc
push
mov
mov
xchg
adc
xchg
jmp
or
push
jns
rcll
cld
cmpl
loop
out
lock
cmp
jmp
out
shrl
shrb
shlb
in
mov
mov
in
push
cmp
aas
xor
mov
movsb
mov
fs
shll
popa
push
mov
call
imul
lcall
stc
pop
sbb
or
pop
cwtl
in
push
pop
cmp
mov
sbb
mov
sub
ret
pop
mov
inc
push
es
lds
fidivl
mov
outsl
pop
ret
xchg
call
mov
fs
push
scas
fsubrl
inc
cmp
jbe
insl
adc
cmp
out
sub
pushf
dec
arpl
daa
pop
std
add
sub
mov
xlat
pop
pop
pop
enter
leave
inc
jge
shrl
mov
test
or
sub
rcr
mov
cwtl
jae
xor
push
and
adc
andl
push
out
push
pop
xchg
push
jb
call
mov
cmp
shrb
lods
ss
jg
aad
movsl
movsb
and
leave
test
xchg
add
adc
mov
in
js
fcomps
xchg
sub
cmp
add
sbbl
shrl
sub
lea
xchg
sbb
and
cmp
add
xchg
add
cmp
pop
adc
jmp
lcall
jge
jb
pusha
mov
js
je
jno
xchg
dec
fcomps
loopne
cmp
push
pop
cmp
ffree
cmp
cmovbe
jbe
ljmp
mov
fistps
cmp
jae
aaa
xchg
push
ds
sahf
cmpl
lahf
mov
jg
aaa
les
cmp
mov
addr16
mov
sbbl
mov
shlb
mov
stos
push
mov
insl
pop
mov
adc
xchg
fisubl
ret
enter
sbb
stos
lret
in
sti
cli
push
cmc
jno
mov
mov
cmp
outsb
push
mov
jg
outsb
or
mov
movsl
pusha
add
mov
and
outsb
mov
jne
lods
mov
inc
xor
popf
xor
xor
out
mov
loop
sbb
scas
pushf
dec
xchg
dec
or
repnz
sbb
aas
hlt
daa
mov
cmc
test
in
mov
or
insl
jnp
into
xchg
andb
sahf
xor
adc
pusha
inc
andl
cwtl
iret
inc
push
leave
jae
pop
dec
jns
pop
push
and
xchg
cltd
add
push
call
loopne
pop
scas
je
shll
imul
loopne
jbe
cltd
test
ljmp
mov
adc
aas
popf
push
or
sub
xchg
inc
fisubrs
add
std
cli
pop
push
out
aaa
gs
std
dec
push
inc
sti
outsb
push
xor
movsb
xor
test
push
sub
jge
mov
ds
push
aam
imul
or
push
sahf
push
cwtl
rep
or
inc
fsubrs
xchg
adc
mov
xchg
adc
int3
and
js
std
xor
jne
xchg
sub
cmpl
push
andb
into
cmc
inc
cltd
jne
push
xchg
mov
xchg
out
xchg
xor
aad
or
int
jne
shrl
mov
sti
test
xor
subb
insb
xchg
jo
loopne
scas
cmc
movsb
inc
push
sbb
rcrb
jecxz
mov
push
imul
push
movsb
mov
lock
cli
pop
leave
adc
mov
cli
js
aas
sub
xor
xlat
mov
pusha
imul
adc
lret
mov
loop
int
movsb
inc
xchg
mov
push
fadds
movsl
inc
pop
enter
cwtl
jne
or
iret
pushf
hlt
xchg
sti
jle
push
or
ss
push
jae
dec
xor
loop
mov
push
jns
pop
inc
movsb
call
clc
shr
in
push
dec
sub
jno
aad
xchg
dec
inc
push
ja
insl
popf
sub
icebp
lcall
lods
rcl
jl
ret
adc
cmp
in
fwait
insb
mov
inc
xchg
cmp
lds
ret
into
outsl
inc
testl
cmpb
clc
test
lods
out
aas
cwtl
push
ja
fsts
add
aaa
stos
dec
movsl
cmp
or
fst
add
cmpb
sub
jl
xchg
js
pop
stc
aad
call
pop
sahf
sbbl
into
aam
push
mov
jecxz
inc
rcrl
js
xor
mov
and
jns
repz
inc
cmc
int
movsb
or
push
shl
and
sbb
lds
push
xor
push
mov
mov
lcall
fidivs
scas
xchg
es
xor
xorb
out
rcrl
or
testl
sub
in
pop
call
cwtl
mov
mov
sub
mov
sbb
in
cmc
lea
js
insl
mov
pop
mov
in
dec
sahf
adc
sti
cmpsb
test
outsb
mov
dec
mov
nop
enter
lea
adc
sub
cwtl
int3
cmpl
outsb
jle
push
jmp
mov
xor
mov
fidivrs
sbb
movsb
xchg
mov
inc
dec
ja
mov
imull
dec
cmp
cmp
popf
out
xor
repnz
or
je
fimull
adc
std
shl
je
jo
mov
ror
arpl
push
in
push
pop
mov
dec
push
sub
sahf
and
shlb
fcoml
sbb
push
std
daa
jge
stos
scas
dec
scas
or
stc
adc
enter
sub
mov
aaa
inc
sbb
and
xchg
mov
mov
cmpsb
sbb
cli
pop
int
into
sub
nop
dec
gs
ds
scas
push
jge
call
sub
xor
pop
and
xchg
and
cmpsl
dec
or
js
movsb
mov
push
pop
push
xchg
pop
into
shr
sbbl
cs
cs
arpl
in
cli
lea
or
add
popf
adc
jecxz
and
fiaddl
inc
xor
add
stc
or
test
sub
cmp
lods
shr
adc
popf
mov
inc
popa
mov
loopne
stos
push
xchg
jbe
lock
and
fldl
hlt
mov
jp
jp
mov
pop
enter
xor
mov
hlt
fwait
mov
je
dec
add
jno
hlt
sahf
stc
in
add
call
xchg
sbb
sahf
in
inc
cmp
inc
sahf
pop
addb
clc
movsb
dec
inc
aas
and
mov
inc
mov
xchg
push
les
xchg
pop
pop
mov
mov
repz
leave
sub
scas
bound
test
jge
jbe
dec
cmp
mov
push
sti
sti
lret
add
cmp
adc
js
adc
in
jl
dec
jg
call
ja
subps
das
int3
cli
mov
pushf
mov
cs
jecxz
fmul
imul
lods
jo
insb
mov
sbb
pop
jno
push
fs
pushf
aas
add
jecxz
inc
out
loopne
ljmp
ljmp
push
mov
pusha
add
insb
fsts
sub
jns
cmpsl
lods
and
out
add
incb
lret
jns
pop
mov
test
in
lods
xchg
sahf
jmp
mov
or
pop
loope
pop
in
add
adc
sub
mov
addr16
pop
dec
fdiv
adc
out
popa
das
repnz
ret
aam
mov
idiv
inc
and
rcrl
icebp
push
fsubrp
mov
stc
jno
adc
dec
sbb
mov
inc
dec
add
jle
adc
cmpsl
push
into
xor
sbb
adc
xor
cmp
std
in
xchg
adc
sahf
test
dec
dec
lcall
mov
push
jo
sub
enter
lds
cmpsb
jno
outsl
jo
or
in
mov
in
mov
icebp
stos
ret
fdivl
inc
mov
scas
es
cs
jbe
sub
in
addr16
cwtl
jnp
enter
negl
mov
outsb
cmpsl
je
mov
loope
push
repnz
mov
das
pusha
cld
insl
pop
pop
jae
fxtract
lods
sub
or
out
dec
adc
in
jno
mov
aad
or
decl
stc
sub
fld
ret
add
loope
pop
out
sub
hlt
push
cmp
jne,pn
test
dec
aad
insb
and
mov
push
cs
leave
pop
adc
out
jl
or
mov
xor
pop
push
inc
hlt
xor
imul
mov
enter
and
inc
repnz
loop
xchg
aaa
mov
jne
jo
sti
pop
fistl
push
ds
mov
sbb
xchg
pop
in
xor
xor
sarb
add
mov
cmp
movsb
mov
mov
jmp
mov
mov
js
stc
pushf
popl
popa
xorl
aam
imul
adc
lcall
push
adc
cld
out
das
push
aaa
add
mov
jl
xchg
insl
scas
roll
sarb
pop
lods
dec
or
jg
std
call
std
clc
stos
jl
mov
mov
ja
or
cmpsb
add
daa
xchg
mov
sub
in
fs
stc
mov
shr
cmc
sub
push
and
pop
jnp
cmp
fdivr
aaa
pop
adc
fisubl
adc
cltd
ljmp
lds
xchg
imul
lret
pop
add
stos
lahf
cmp
outsb
popf
mov
mov
xor
jmp
icebp
add
insl
mov
mov
outsb
lret
pusha
sti
out
inc
je
cld
push
aaa
lea
icebp
out
sub
mov
mov
out
out
jb
ljmp
adc
nopl
sub
ret
push
or
aas
std
mov
insl
inc
stc
mov
das
fcoml
sbb
sbb
adc
jle,pt
jp
repnz
jl
lods
fwait
insl
jl
adc
gs
xlat
arpl
imul
xor
scas
cmp
and
dec
cmp
mov
mov
and
mov
sub
cwtl
enter
push
sub
cmpsl
ljmp
faddl
insl
int3
mov
xor
popf
and
push
or
bound
sarl
mov
jle
stos
adc
outsl
outsl
cmp
jnp
inc
mov
jmp
sbb
xchg
pop
push
stos
adc
xchg
ficomps
int
cs
insl
cmpsb
inc
jmp
xchg
lcall
dec
xchg
pop
imul
push
imul
leave
lea
xor
adc
inc
test
or
fiadds
sub
and
jns
pop
add
push
mov
inc
xchg
inc
aaa
xor
loopne
jecxz
stc
mov
lcall
or
add
mov
std
je
mov
int3
ret
jecxz
add
and
imull
xchg
inc
test
lods
fistpll
dec
pop
shlb
xlat
mov
jcxz
movl
sub
lret
test
or
pop
das
pop
movsl
add
fsubl
aas
jmp
ds
sub
cmp
repz
sbb
arpl
fsubrl
xchg
pop
out
mov
inc
cwtl
adc
mov
and
and
jl
ss
ficoml
cmp
mov
ja
in
outsl
pop
pop
hlt
push
nop
int3
cmp
jns
aas
dec
push
insb
or
lds
sub
mov
outsb
addr16
mov
cmp
cltd
insl
add
mov
fmulp
aas
dec
outsl
xchg
insb
jl
dec
add
out
or
in
icebp
fs
mov
mov
dec
fimuls
sbb
inc
sub
mov
push
sbb
push
cmp
adc
and
dec
cmc
xor
fstp
ss
dec
bound
test
cld
push
int
pop
mov
sub
movsl
insb
in
adc
push
fdivs
sahf
xor
shll
popf
dec
in
int3
pop
push
in
sbb
mov
loope
mov
jp
popa
cmpl
iret
dec
add
xchg
sti
subb
fidivrs
in
cmp
insb
test
jl
mov
lods
int3
xor
nop
sub
ret
js
ljmp
test
roll
loop
jp
in
fcompl
rcr
push
and
repz
outsb
inc
fmull
dec
mov
pop
cli
jbe
hlt
push
shlb
aad
repnz
mov
std
add
xor
adc
or
pusha
lock
or
jge
movsb
movsl
nop
jecxz
dec
cld
dec
in
jae
mov
test
push
adc
iret
test
mov
dec
stos
std
aad
adc
imul
lods
enter
pop
mov
dec
pop
cmp
loopne
xchg
pushf
lods
lea
sub
push
lahf
cmp
adc
inc
push
or
daa
sub
test
enter
inc
mov
mov
test
rcll
push
or
inc
push
test
xor
imul
mov
jecxz
cwtl
popf
push
ja
insl
xor
cmp
dec
jecxz
fs
iret
fwait
fwait
lret
inc
jnp
pop
pushf
push
cmp
sbbl
insl
jp
sbb
jmp
mov
xor
and
dec
movsb
add
daa
jl
mov
stc
mov
fs
lods
xchg
clc
xlat
pop
mov
fwait
lret
mov
cmpsb
inc
es
popl
mov
cmp
mov
scas
adc
pop
jns
aad
lahf
bound
int3
loop
scas
or
inc
and
fistpl
inc
call
sbb
cmp
and
movsl
pop
test
xorl
cmpsl
das
daa
mov
mov
push
shrb
mov
movsb
mov
pop
fdivs
sub
add
movsb
mov
out
jp
jmp
cmpb
inc
lea
in
sbb
cs
add
xchg
ret
mov
cli
dec
outsb
adc
repnz
fsub
xor
out
dec
add
pop
lods
stos
inc
xor
lea
lock
adc
insb
fs
inc
inc
je
xchg
aam
mov
sbb
mov
in
gs
ret
xchg
cs
xor
xchg
out
pop
das
imul
pop
add
adc
mov
mov
mov
sub
aam
cmovnp
arpl
imul
cmp
mov
and
jle
mov
push
data16
loop
xor
enter
mov
add
or
aad
mov
sarb
pop
and
stc
fnsave
push
mov
adc
cmp
test
push
ret
sbb
popa
out
sub
push
pop
aad
das
mov
jne
popl
jmp
loope
repnz
push
or
mov
add
rcr
xchg
std
xor
sub
test
out
cmpsb
lods
popf
cmp
adc
and
inc
inc
pop
out
imul
imul
cmc
scas
scas
mov
movb
mov
jg
std
xchg
cmp
cltd
mov
mov
xor
sub
jg
dec
cmp
std
sbb
call
push
pushf
repz
jge
pop
jmp
pop
jp
mov
sub
les
xor
mov
push
fmull
fs
ss
push
lds
lcall
sbb
or
lcall
iret
mov
jecxz
add
and
fs
sub
sbb
add
aam
jle
aam
imul
xchg
jle
dec
cltd
pop
in
popa
scas
int3
sub
shl
and
out
sbb
inc
mov
mov
sarl
add
cs
push
scas
arpl
mov
rolb
xchg
repnz
test
insl
or
cmc
xchg
xchg
test
xchg
push
cmpl
leave
inc
adc
fldl
mov
adc
cld
pop
or
repz
add
xchg
loop
insl
in
add
negb
fldl
cmp
repnz
xchg
dec
sub
pop
xor
stc
in
fcmovne
dec
sub
sub
jge
sbb
or
mov
adc
add
dec
mov
cwtl
pop
mov
or
mov
lock
aad
test
mov
add
lret
and
sub
jp
mov
int3
scas
subl
sub
sub
aaa
ds
sbb
fsubp
add
ss
imul
ja
fildll
loop
lret
cs
rorb
leave
xchg
lahf
inc
inc
int3
pop
cli
jno
ds
mov
leave
int
xor
lret
xor
xchg
mov
dec
rorl
pusha
fmull
inc
ds
out
popf
push
out
mov
fdivrl
push
addr16
fcompl
jmp
xchg
xor
ret
cmc
test
adc
inc
add
and
jns
dec
adc
pop
dec
mov
sti
lock
xchg
cld
mov
testl
and
fwait
sar
idivl
outsb
es
arpl
xchg
int
movsb
xor
sub
inc
test
inc
mov
mov
lods
jne
movsb
sbb
cmpl
adc
pop
push
test
sbb
repnz
add
int
mov
movsl
xchg
pop
std
push
ljmp
out
int3
or
jmp
and
daa
and
mov
lcall
pop
lds
cmp
dec
in
mov
xor
rcl
mov
mov
inc
xchg
or
jno
adc
jg
push
adc
ret
sbb
fsubrl
test
adcb
dec
inc
decb
test
jmp
lods
insb
push
test
cmpsb
movsb
fidivrs
cmp
push
or
add
push
or
cmpsl
movsl
out
adc
shr
aam
cwtl
cmp
push
push
sti
xchg
in
lods
fwait
mov
xchg
popf
in
push
xchg
shrl
sarb
in
cmp
enter
xchg
mov
push
enter
dec
icebp
adc
pop
xchg
test
jp
cs
push
push
out
mov
test
scas
pop
jne
mov
mov
out
and
xchg
pop
xor
out
je
mov
pushf
shlb
push
js
test
sahf
leave
mov
test
dec
fisttps
shr
or
inc
adc
cmp
sahf
add
mov
add
enter
jb
xchg
mov
mov
add
jno
xor
or
adc
lahf
ret
xor
cmp
cmc
adc
sbb
lcall
loopne
adc
jne
pop
fiaddl
push
loop
pop
mov
sub
orb
leave
out
mov
mov
push
pop
dec
aam
push
jl
rsqrtps
xor
stc
dec
fldl
jb
jae
test
xchg
fstpt
out
hlt
dec
xchg
push
popa
filds
repz
push
test
sbb
loop
lods
aam
jg
ds
pop
mov
add
sarl
mov
test
pop
aaa
sahf
in
xor
rol
xor
mov
inc
sbb
mov
repz
inc
xchg
pop
rcl
xchg
stc
adcb
sahf
lahf
idivb
ss
jo
shr
int3
push
rcll
loop
popa
mov
mov
push
popa
xor
lods
imul
mov
jb
lds
notb
xchg
mov
inc
pop
cld
ljmp
pop
in
enter
mov
js
xchg
imul
push
cs
loope,pt
testl
sar
xlat
ljmp
cltd
test
dec
mov
mov
cmp
int
outsl
ficompl
or
jnp
fidivrl
jno
cmp
mov
stos
std
xor
or
mov
mov
in
xchg
push
add
rcrb
sahf
mov
nop
popa
xor
into
mov
pop
dec
sub
icebp
daa
mov
cmp
orl
ret
leave
push
sbb
lock
lock
pushf
adc
xor
mov
inc
push
pusha
inc
outsb
or
pop
scas
dec
pop
push
xchg
xchg
enter
add
roll
pop
pop
mov
inc
mov
fs
mov
sbb
bound
leave
shlb
stc
and
lock
jmp
or
mov
outsl
dec
gs
xor
daa
fwait
xchg
xchg
inc
test
xchg
lret
cmp
rcr
mov
jb
sub
and
jl
stc
inc
xchg
dec
lcall
sub
xchg
jg
pop
xor
sqrtps
test
out
iret
pop
sub
dec
pop
stos
movzwl
ret
call
decb
or
andb
fldl
add
sub
arpl
push
out
jae
ret
popa
fstl
xor
lods
pop
push
sub
popf
sbb
scas
adc
pop
jns
cmp
jbe
push
fcmovu
cltd
cli
fbld
pop
test
das
in
mov
lret
insb
push
mov
out
and
out
aas
in
mov
xchg
and
or
aam
cmpsl
inc
mov
push
fabs
jmp
mov
daa
cmovb
sti
dec
mov
mov
pop
test
add
xchg
test
xor
dec
aas
scas
fwait
xor
mov
fs
push
jns
jnp
adc
push
call
cwtl
push
popf
data16
sbb
loopne
and
addr16
out
pop
jno
mov
sub
mov
fmulp
adc
test
and
je
jae
xchg
out
cwtl
dec
xor
cmc
jmp
leave
mov
inc
sbb
test
pop
dec
sahf
lock
fisttpl
out
dec
lods
jmp
add
mov
adc
fsubrp
sbb
imul
mov
sub
sti
leave
mov
dec
fsubrs
out
pop
sti
dec
push
or
sbb
inc
jg
cld
pop
pop
repz
data16
adc
inc
adcl
mov
xchg
test
adc
mov
pushf
dec
lretw
sti
and
pushw
push
pop
insl
mov
insl
ss
xor
adc
push
scas
push
js
dec
daa
scas
hlt
movsl
cmp
sub
divl
xor
mov
aas
mov
sarb
jne
movsl
repz
xchg
mov
mov
rcl
and
or
or
cltd
xor
add
mov
stc
js
cmp
icebp
and
jns
ljmp
and
inc
xor
das
es
shlb
sbbl
xor
mov
lea
daa
cltd
mov
xchg
jns
cmpsb
push
lahf
enter
sub
es
mov
arpl
inc
pop
mov
mov
lds
push
dec
mov
in
loopne
js
fbld
mov
decl
and
mov
sub
or
cmp
scas
cmp
add
roll
fwait
in
pop
into
xchg
and
xchg
push
inc
sahf
jecxz
imul
sbb
rorb
arpl
lods
and
jg
cmc
imul
and
inc
int
push
clc
adc
insb
or
add
pop
ret
pop
and
sti
jg
jno
leave
aas
popa
jp
ficoml
test
lret
roll
jae
scas
mov
mov
movsl
mov
fs
cltd
xchg
sub
lret
dec
shlb
scas
inc
inc
stos
cmp
add
movsl
or
scas
xor
je
jbe
cmp
test
xchg
xchg
mov
sbb
jle
cmc
popf
xchg
jnp
repnz
lods
fwait
clc
outsl
dec
subb
or
inc
cmpsl
lods
mov
jns
cmp
pop
inc
js
frstor
imul
pop
decb
cld
lahf
jp
das
aad
scas
jecxz
aad
pusha
adc
cltd
xchg
xor
rol
add
sbb
adc
shlb
push
into
mov
popa
dec
mov
jmp
mov
scas
xchg
movsb
jns
pop
sub
or
shrl
cmp
or
xor
addr16
sub
xchg
mul
aas
mov
and
xor
and
icebp
cld
cmp
adc
cmpsb
xchg
sarb
jae
mov
jo
or
inc
lea
and
mov
lret
arpl
call
push
daa
mov
jb
sarb
fs
int
pop
and
inc
fsts
orl
and
inc
je
jb
popa
jl
mov
xor
add
jge
inc
mov
repz
mov
imul
xchg
push
mov
push
inc
dec
inc
jl
dec
cmp
filds
inc
rcr
fisubl
or
and
jg
mov
push
pop
aad
add
daa
rcr
xor
push
jg
push
rcll
or
and
ja
dec
sbb
fmull
xchg
cmp
jbe
pop
fwait
push
iret
dec
rep
xor
movsl
dec
mov
mov
fnstenv
ret
popf
movsl
lock
cmp
in
movsl
mov
adc
xor
push
pop
mov
and
leave
les
negl
into
lock
xor
aaa
mov
outsl
xor
rcrb
pop
pop
in
icebp
and
add
in
lods
push
lds
sbb
outsb
xchg
mov
jle
fbstp
push
stos
jae
xchg
jns
sbb
mov
daa
pushf
rol
sbb
dec
mov
push
fistps
mov
test
int
call
sbb
scas
xchg
jns
rolb
inc
stos
and
xor
sub
mov
faddl
xor
pop
mov
pop
sarl
cmp
mov
mov
pop
mov
aad
je
call
push
les
sub
fiaddl
imul
pop
imul
dec
or
sbb
push
sbb
mov
mov
xorl
subl
es
sub
inc
leave
loop
and
adc
add
in
jmp
push
push
cmpsl
pushf
aad
sbb
fisubs
sbb
mov
mov
push
stos
outsl
cld
stos
inc
mov
dec
subb
add
repnz
out
daa
pop
adc
push
pushf
mov
ljmp
cld
add
lahf
xchg
sbb
stc
add
push
shll
xchg
inc
aad
test
jle
testl
or
stc
inc
pop
sbb
imul
daa
scas
push
and
pop
subb
and
fsubrl
int3
cs
jae
cmpsb
int3
xchg
into
aam
pop
pushf
xchg
pop
add
gs
aad
lods
jne
and
push
dec
mov
lods
inc
test
jg
mov
ret
lret
mov
stos
out
pop
inc
fucomi
pop
push
pop
data16
dec
mov
pop
xor
insb
scas
dec
xchg
imul
or
idivb
inc
mov
hlt
in
xchg
addl
jne
sbb
shlb
dec
pop
loope
outsb
in
lahf
mov
cmp
pop
mov
pusha
or
frstor
push
inc
push
aad
dec
leave
in
out
test
pop
cmp
ret
cmp
inc
stos
ss
sub
aaa
push
testl
add
aad
jmp
dec
pop
loop
popf
orb
repz
mov
lahf
fnsave
dec
mov
mov
sahf
sbb
push
imul
inc
subl
aad
data16
out
xor
mov
or
into
leave
push
jb
filds
cmp
popf
cmp
cmp
repz
push
jb
push
adc
mov
pop
iret
mov
jge
jmp
sahf
mov
ljmp
notl
sbbl
mov
mov
add
or
aas
jp
pop
mov
lock
stos
jle
inc
cmp
mov
dec
inc
lds
mov
and
scas
js
ds
sbb
pop
fwait
stos
fisubrl
adc
adc
mov
or
pop
das
dec
test
cmp
mov
icebp
or
jmp
rorb
in
jecxz
in
cmp
add
xor
inc
inc
adc
imul
inc
sahf
aas
xor
dec
cmp
or
imul
cmpsb
aas
push
or
add
xlat
into
in
aaa
das
idivl
movsl
inc
pop
sahf
cmp
ret
jae
xchg
mov
pop
sub
xchg
in
sbb
jge
and
or
mov
in
mov
pop
repnz
test
popf
xchg
xor
mov
inc
jg
mov
sti
mov
test
inc
fisubrs
std
jle
je
clc
xchg
mov
mov
jbe
and
outsl
lea
outsb
rclb
cs
pusha
and
decb
adc
cmp
aam
cmpl
stos
pushf
xchg
lock
cmpsl
clc
jle
fdivr
jne
xchg
scas
sub
test
dec
test
jae
testb
sub
shrl
or
hlt
jne
adc
into
add
test
mov
mov
lcall
ret
or
push
push
test
stos
jp
enter
jbe
lcall
into
pop
stos
mov
lods
adc
xchg
xor
fmuls
jecxz
push
faddl
xor
scas
push
in
ficoms
cli
mov
inc
outsb
sub
jae
popf
add
arpl
andl
addr16
ret
and
lahf
inc
xor
sub
lds
dec
xor
rorl
mov
in
pusha
mov
xorb
mov
ss
mov
jae
dec
ljmp
icebp
out
jecxz
sbb
dec
stos
sbb
jo
cmpl
mov
kmovw
std
mov
mov
push
pop
dec
div
cltd
ja
fildll
outsb
sti
repz
and
mov
pop
mov
fistl
stos
repnz
sub
jmp
insl
mov
or
or
xchg
add
les
inc
les
pop
or
leave
pop
out
mov
mov
cmp
xor
fwait
cmp
pop
pop
sub
outsl
inc
xchg
jl
mov
jno
mov
push
adc
mov
loopne
das
jg
dec
lcall
pushf
push
add
fidivl
ret
fistps
test
xchg
jg
movsl
add
or
shlb
push
jne
aad
add
mov
push
pop
sbb
xchg
inc
xchg
or
sbbl
mov
pop
push
or
andb
dec
rcrl
aas
mov
fidivs
push
mov
dec
andb
in
push
push
or
add
and
mov
lahf
mov
xor
inc
das
jg
add
cmpsl
mov
and
sbb
inc
adc
push
pop
cmc
jecxz
mov
add
aaa
popa
enter
stc
xor
xor
fldcw
and
addr16
mov
movsl
pop
xorl
lea
cmc
sbb
push
sub
stos
mov
xor
or
mov
sub
jae
pop
loope
rorl
mov
cmp
mov
jne
lods
movsb
push
sub
xorl
jae
jp
xor
or
mov
xor
repz
mov
incb
xchg
data16
fdivr
dec
aam
mov
xchg
inc
xor
mov
mov
repz
loopne
sub
fildll
pop
adc
mov
sbb
sbb
lods
jmp
aas
into
sub
xchg
imul
lahf
das
sbb
push
neg
stos
in
push
xchg
notl
mov
lods
sub
pusha
push
mov
cmpsb
adc
cmp
adcl
cmp
andb
pop
dec
push
jle
cwtl
mov
inc
ficomps
sbb
push
cmpsb
ljmp
into
add
hlt
push
add
and
mov
jo
bound
adc
or
int3
out
cs
add
test
inc
sahf
mov
sbb
push
inc
aaa
cmp
int3
sub
outsl
pop
add
cwtl
mov
test
orps
clc
adc
xor
aam
jo
daa
pop
jne
fildll
in
mov
xor
rcll
push
test
mov
xlat
lcall
jg
out
mov
ja
ret
rorb
test
dec
rcll
shl
icebp
cmp
push
pusha
movsl
popf
push
xchg
fcomip
sbb
cwtl
mov
push
xchg
fldcw
push
enter
jbe
xchg
iret
xor
or
mov
aam
dec
xor
dec
cwtl
icebp
sbb
mov
mov
lds
negl
nop
cli
fs
xor
jmp
adc
adc
jl
ljmp
sbb
cmp
mov
xchg
stos
leave
mov
movsb
loop
xchg
popa
jbe
fbld
and
ret
pop
in
inc
mov
push
mov
popf
cmp
repnz
push
push
pop
xchg
flds
mov
data16
pop
rorl
xchg
xlat
mov
hlt
push
jp
test
pop
or
adc
aaa
and
outsl
stc
cmp
movsl
cmp
xchg
jl
lret
or
out
movsl
mov
sbb
in
jnp
les
insl
fisttpll
fcom
lods
popa
gs
dec
cli
lea
movsl
sbb
mov
fldcw
inc
daa
stos
call
and
jnp
cmp
cltd
js
rorl
jns
mov
movsl
cs
shr
push
sbb
shll
inc
lcall
inc
leave
out
pop
jecxz
pop
ljmp
test
ljmp
and
loope
lods
xchg
and
cmpsl
lods
xchg
mov
in
in
cmp
mov
cmp
xchg
xchg
mov
push
out
lret
cmc
push
test
scas
cwtl
and
in
or
movsb
int3
lret
les
and
cltd
imul
pop
inc
ljmp
sti
add
mov
fcmovne
test
imul
fildl
jl
pop
add
xchg
sbbl
jg
pop
in
push
push
mov
sti
add
cmp
pop
xchg
scas
nop
fldl
mov
mov
mov
es
imul
dec
dec
les
xor
es
sbb
ljmp
lock
dec
inc
pop
movsl
inc
lret
xor
mov
mov
ret
stos
negl
jae
pop
ret
cmp
adc
cmp
inc
jae
data16
mov
cmp
jl
inc
fistpl
std
cmp
mov
ss
pop
out
dec
std
arpl
xchg
cmp
pop
jae
aaa
mov
and
dec
lret
das
xchg
fsubrl
test
repz
fucom
daa
les
or
jb
lret
dec
mov
les
xchg
clc
stc
ss
mov
insb
push
mov
sub
sahf
sbb
ret
mov
outsb
push
std
aas
lret
lret
idivb
sarl
movb
insb
mov
fnstsw
out
xchg
mov
fstps
in
test
out
out
std
jg
enter
xor
push
aad
lcall
lods
xorb
lret
inc
lcall
xchg
adc
lock
and
mov
pushf
shll
pop
jecxz
pop
and
ficomps
imul
fucom
imul
mov
scas
pop
je
addb
xchg
or
into
shlb
movsl
cwtl
bound
mov
mov
dec
sbb
dec
scas
loop
imul
lahf
jmp
dec
data16
push
fwait
stos
cltd
lock
sub
adc
mov
negl
into
xchg
jb
dec
ljmp
mov
scas
mov
inc
mov
mov
stos
testb
ljmp
lods
out
imul
bnd
lods
pop
addr16
mov
scas
nop
dec
jecxz
loopne
push
xchg
sbb
ret
mov
jnp
das
xchg
push
mov
mov
cmpsb
jbe
hlt
jle
das
fistl
jmp
in
cli
std
loope
fisubrs
bound
push
lods
cmpsb
sub
lret
mov
pushf
cmp
jne
orl
test
xchg
mov
out
pop
fdivrl
idiv
mov
mov
ja
int
pop
jae
leave
leave
pop
inc
push
inc
sub
test
add
cltd
je
repnz
imul
xchg
inc
sub
rcrb
je
bound
mov
pop
sbb
loopne
mov
adc
js
out
jnp
int
pusha
sub
add
mov
and
mov
fwait
dec
repnz
cltd
fidivl
xchg
adc
pop
cs
inc
fsub
xchg
lret
inc
xor
pop
movsl
sbb
out
jns
adc
ffree
sub
push
mov
imul
jno
lea
and
ficoms
pop
sub
xor
jnp
es
ds
pop
leave
mov
push
and
enter
lret
dec
pop
pop
rorl
or
xchg
cli
adc
movsl
add
mov
adc
pop
or
movsb
aam
in
roll
shl
popa
add
arpl
lock
das
scas
movsb
mov
mov
ret
ficoml
push
jle
popf
sub
xor
jae
aaa
inc
mov
icebp
mov
push
int3
xchg
mov
leave
mov
mov
aas
mov
aad
lods
subb
std
sbb
out
sub
pusha
das
jns
test
test
adc
mov
add
aas
inc
mov
icebp
xchg
mov
jecxz
lock
cli
ret
add
test
jl,pn
aaa
mov
fisubl
jl
in
push
push
xchg
fstpl
lods
xchg
push
es
rcrb
adc
repz
mov
scas
xchg
test
jl
imul
out
fs
subl
addl
mov
js
pop
push
pop
mov
imul
xor
push
push
nop
push
mov
push
popf
and
pop
or
jo
mov
js
xor
and
je
setp
data16
sbb
loope
sub
dec
repnz
loop
or
mov
inc
push
xor
or
jg
test
push
adc
and
mov
insb
dec
adc
pop
mov
push
dec
push
pop
repnz
mov
sbb
inc
inc
dec
mov
movl
push
fsubl
xor
mov
test
aaa
int
clc
out
inc
mov
jg
iret
sahf
fld
out
call
jge
filds
or
cmp
lods
cmpl
xchg
cli
adc
rol
xor
sbb
pop
add
xchg
dec
push
fisttpl
inc
pop
push
mov
inc
pop
adc
pop
adc
rcrb
mov
push
jno
xor
jle
pop
mov
cmc
ss
imul
push
imul
out
inc
cs
dec
jmp
xor
mov
jo
add
testl
pop
aaa
add
xchg
out
in
andb
sub
test
jle
mov
xor
scas
lahf
lods
scas
add
in
cmp
mov
push
sub
xchg
pop
arpl
test
jne
jne
test
pop
cmp
testl
jl
pop
sbb
sbb
loop
add
jle
push
shrl
loopne
lds
and
in
jb
cld
ret
popf
test
jl
mov
push
nopl
add
push
inc
outsb
enter
mov
dec
mov
lods
and
repz
jecxz
hlt
repnz
or
mov
xchg
roll
aaa
dec
sub
cmp
push
xor
sahf
push
pop
mov
add
lds
cwtl
inc
dec
out
push
mov
sub
sbb
sbb
test
repz
out
call
cmp
pmuludq
clc
pop
mov
test
in
push
outsb
mov
loop
and
popf
icebp
and
inc
and
jge
xchg
sub
add
sub
push
jns
sar
inc
out
mov
sbb
scas
push
inc
pop
and
imul
mov
cmp
fwait
cmpsl
xor
cli
dec
bswap
add
pop
mov
xchg
out
cmp
inc
xchg
pop
rcll
dec
jmp
ljmp
inc
and
repnz
pusha
or
mov
aas
mov
mov
dec
pushf
cs
fwait
pop
inc
adc
shll
ret
push
out
cltd
dec
or
and
jnp
xchg
ss
xor
mov
js
mov
and
push
jecxz
inc
loop
lret
outsb
sbb
pop
add
or
push
sbb
sbb
adc
out
pop
mov
add
adc
sbb
test
test
in
fs
mov
pop
icebp
mov
jg
and
faddp
dec
jge
dec
xor
bnd
mov
test
sub
xorl
in
cmp
xchg
inc
repnz
mov
pop
fistpl
lods
imul
sub
out
mov
adc
jp
test
mulb
push
add
rcrl
xchg
mov
loop
outsb
adc
cmp
xchg
mov
jp
repz
test
xchg
rcrb
cmp
xchg
repz
int3
jae
push
lea
dec
push
cmpxchg
cmpsl
add
add
mov
inc
ficomps
call
lcall
mov
shr
xor
test
idivb
je
xor
push
int
jl
icebp
inc
jne
scas
xchg
insl
add
sbb
es
bound
or
je
in
out
and
shr
jle
jl
sub
lcall
mov
mov
xor
dec
jl
mov
pop
adc
ror
out
pusha
js
lret
out
cli
aam
or
mov
popf
shlb
subb
popa
and
pusha
jo
xlat
movsl
mov
out
subl
jae
adc
xchg
imul
mov
iret
lret
mov
cmp
mov
inc
test
and
push
fldl
insb
pop
lret
mov
out
js
daa
xor
popa
or
pop
int3
adc
push
mov
xchg
mov
pop
cs
movsl
mov
mov
outsb
or
loop
fistpll
push
ret
or
mov
imul
dec
cmp
imull
gs
push
pop
pop
xchg
push
and
add
or
push
add
mov
lods
out
into
cmpsl
cmc
dec
js
and
in
das
and
xor
gs
pusha
inc
scas
jb
insb
es
dec
mov
mov
fimull
jo
adc
sub
daa
jecxz
lret
push
sub
inc
jae
shl
or
std
scas
in
fcoml
dec
clc
fmuls
sbb
sub
dec
inc
sti
and
test
jp
mov
push
rclb
movsl
iret
lret
mov
inc
cmp
push
or
leave
test
pusha
jne
xor
dec
mov
push
test
push
jns
xor
outsb
lods
xchg
cmc
outsl
sti
or
imul
cs
outsl
cltd
pop
adc
data16
cmpsl
mov
push
cwtl
enter
mov
lods
or
adc
jo
xchg
jmp
pop
mov
addr16
xor
xorl
push
sub
ljmp
or
mov
test
inc
int3
lahf
sahf
jp
imul
sub
or
push
push
in
rcr
dec
int3
popa
inc
push
push
cwtl
mov
in
dec
mov
inc
addb
mov
xor
or
jl
inc
jb
xadd
cmp
inc
subb
pusha
mov
mov
pop
imul
hlt
insl
clc
jns
jnp
sbb
jecxz
add
shl
cmp
xor
xor
mov
lods
ret
jge
pop
xor
jmp
xorb
aaa
stc
fs
test
in
shl
mov
cmpsl
in
xchg
push
cltd
mov
scas
stos
and
push
out
into
jg
and
xchg
jbe
into
adc
out
xchg
dec
lock
mov
vandps
push
jb
popf
inc
fldenv
xchg
test
or
xchg
cmp
aas
pop
repz
jns
in
push
in
andl
lcall
sahf
cmpsl
xor
mov
cmpsb
sub
fwait
into
mul
sub
jge
lds
cmpsl
push
pop
mov
and
aas
cmp
insb
imul
or
pop
mov
int3
jcxz
insb
les
push
lods
pusha
or
imul
aam
inc
je
cld
mov
add
inc
mov
nop
out
aad
std
inc
jb
ret
out
ret
adc
mov
mov
xchg
jae
dec
sbb
mov
int
insl
clc
cmp
mov
add
insb
outsb
ret
or
add
mov
cli
and
cltd
dec
sarb
add
adc
stc
sarb
aad
inc
cmp
es
inc
sub
jae
inc
cs
cs
mov
loop
lods
add
add
lret
mov
std
gs
push
sbb
es
flds
dec
push
rorb
inc
data16
mov
cltd
mov
and
pusha
xlat
mov
out
add
scas
in
movsb
mov
and
or
mov
dec
ja
pop
dec
dec
rclb
inc
imul
mov
cld
ds
push
inc
inc
lea
xchg
lcall
adc
and
mov
jg
ss
xor
and
mov
popa
stc
imul
fmull
cmpsl
arpl
in
shlb
and
stos
sub
aad
std
xchg
and
or
mov
int3
sbb
in
repz
and
shr
outsl
pusha
aas
xchg
jmp
inc
out
cmp
sub
xchg
mov
rclb
add
inc
and
push
mov
sbb
adc
jne
or
gs
mov
pop
out
xchg
pop
shr
sbb
pop
lods
stc
fs
mov
shr
or
jbe
inc
sti
loop
cs
mov
iret
lea
ret
cmc
iret
mov
cltd
push
pushf
lods
and
lret
mov
loopne
inc
cmp
mov
jns
add
push
je
imull
jne
sub
and
fs
loopne
ss
pop
xchg
shrl
cmp
sbb
mov
mov
mov
aam
mov
xor
add
lock
int
dec
xchg
push
insl
dec
mov
mov
aam
pop
xchg
cmc
mov
fsubl
js
add
mov
leave
fdivrl
call
clc
mov
push
cmp
mov
or
cltd
imul
xor
mov
shr
pop
aas
imul
ja
cltd
fs
and
push
test
or
imul
sahf
push
into
fadds
jnp
jae
and
and
adcl
dec
xchg
out
mov
ds
mov
mov
call
sub
outsb
sub
add
xor
push
sub
inc
cmp
nop
sub
mov
pop
jmp
es
data16
xchg
push
movl
addb
dec
pushf
inc
adc
and
aad
push
add
jns
in
andb
push
mov
pop
push
insl
mov
testb
inc
dec
jae
les
clc
dec
testl
pop
imul
mov
sub
mov
xor
scas
sub
inc
std
ret
leave
in
aas
and
push
xchg
push
or
and
push
movsb
jl
lcall
or
inc
mov
popf
pop
aaa
roll
clc
push
pop
enter
pop
inc
sub
jle
sub
cmpsl
xor
push
pop
sbb
scas
push
jno
out
jp
cmp
jge
loope
sub
mov
cmp
aas
sbb
xor
pop
xchg
push
aaa
mov
popa
sbb
xor
and
mov
cmp
je
pop
test
insl
jne
push
add
mov
cmp
sub
mov
push
lods
mov
sub
test
jg
cmp
pop
xor
adc
mov
pushf
mov
push
das
or
add
out
call
cmpsl
in
cmpsb
inc
inc
cmp
push
pop
push
xchg
popf
xchg
pop
xchg
addr16
sub
test
inc
enter
lea
pop
mov
push
aad
pop
mov
repnz
aaa
js
sub
add
std
repz
inc
in
xor
or
xchg
ss
adc
ljmp
sub
out
in
je
cmpsl
fildll
xor
push
call
imull
inc
jle
mov
nop
dec
mov
in
sbb
cmp
repnz
jae
test
shlb
push
mov
out
imul
add
push
or
inc
mov
ljmp
sbb
pop
sbb
fneni(8087
lret
mov
jmp
adc
js
das
clc
mov
mov
mov
adc
jge
shlb
dec
addr16
nop
mov
jne
xchg
daa
cmpsb
aaa
int3
leave
xlat
je
add
dec
push
dec
pop
fsubrl
mov
or
xchg
je
dec
insb
je
es
inc
adc
jne
mov
mov
stc
mov
gs
loope
sarb
sbbb
lcall
or
push
sub
dec
pop
outsb
sbb
sub
fldl
nop
jecxz
ds
add
clc
jb
leave
inc
jno
rcr
mov
data16
push
jmp
shrb
and
dec
jno
xchg
pushf
jae
jmp
sbb
xchg
testl
push
jmp
lods
mov
movsl
popl
fisubs
pop
mov
sbb
out
dec
fs
in
push
xchg
xchg
sar
arpl
arpl
sub
jge
mov
mov
adc
stos
sahf
aad
pop
mov
pop
fcoms
pop
repnz
add
jbe
jecxz
mov
arpl
clc
dec
jecxz
and
jmp
cld
lret
scas
pop
cmp
fisubrs
adc
int
leave
outsb
test
cmpsb
arpl
mov
mov
xor
cmp
push
outsl
sub
inc
ss
jg
or
fucomip
cmp
ffreep
outsl
cld
push
jnp
pop
push
out
fs
js
shlb
cmp
jmp
xchg
sbb
imul
rcll
push
js
imul
std
jb
mov
fs
jecxz
cmp
jg
daa
repnz
sbb
mov
in
stc
scas
std
ja
and
adc
adc
jns
sub
sbbl
imul
outsb
ljmp
adc
mov
dec
sbb
xchg
mov
imul
mov
adc
scas
loop
in
mov
fisubrl
enter
vcvtps2pd
mov
rolb
std
hlt
call
std
shr
cmpsl
imul
andb
push
sbb
inc
mov
inc
loope
les
aas
int
lock
mov
in
or
aad
cmpb
xor
popf
xchg
lods
in
loope
xor
jmp
cld
pop
inc
mov
dec
loop
sub
push
mov
pop
push
pop
lret
cwtl
testl
cltd
dec
add
lds
cmp
xor
out
loop
sub
and
mov
and
push
fucomip
lock
in
shll
cmp
pop
jbe
xchg
push
popf
dec
mov
cmp
test
stos
add
fnstcw
lds
negl
mov
push
push
out
pop
inc
xor
dec
insb
loopne
lods
xor
sub
das
and
pusha
outsb
xor
push
mov
and
and
mov
sbb
jg
loope
inc
fst
loope
insb
fstl
xchg
subb
into
in
stos
loope
das
jne
repnz
aaa
xchg
fsubrp
jle
stc
pop
icebp
enter
push
into
notl
rcrl
and
movsl
jnp
dec
loope
sub
cs
or
movsb
dec
push
jp
or
dec
cmp
ljmp
add
enter
sti
xchg
sub
movsl
es
mov
stos
adc
imul
sbb
adc
out
sbb
sub
adc
test
jb
mov
int3
mov
add
dec
inc
mov
jno
mov
push
push
adc
fcoml
sahf
inc
mov
dec
jbe
aam
inc
or
aaa
sbb
fwait
xchg
shll
cli
int
inc
lret
mov
enter
push
mov
mov
add
pop
sbb
mov
sbb
cwtl
roll
int
pop
push
mov
xor
fnsave
mov
xchg
mov
popf
ss
push
adc
ror
ja
fistps
sub
mov
imul
mov
jle
sub
dec
js
add
in
in
push
sbb
imul
mov
and
movsb
inc
test
jo
test
jae
lods
loop
jo
mov
xor
xchg
sbb
jmp
scas
pushf
add
sub
repnz
pop
ficoms
xchg
pop
cmpsb
xchg
loop
int
ja
lret
aam
test
xchg
lea
mov
push
movsl
fwait
push
loop
mov
rcl
in
shr
or
sub
repnz
mov
pop
subb
test
mov
push
xchg
aad
pop
jae
pop
ret
les
push
movsl
dec
enter
or
mov
mov
add
jb
mov
sbb
adc
fdivrp
jge
hlt
jmp
sbb
sbb
mov
insb
dec
sbb
in
pop
in
scas
inc
pop
into
or
jle
ds
and
int3
leave
xor
lret
xchg
pop
lret
sarb
lock
fsubrs
xor
mov
pop
fs
pop
mov
jecxz
cli
sbb
gs
addr16
enter
jb
fwait
es
cld
adc
adc
in
or
mov
and
xchg
xchg
push
scas
fdivrs
sbb
addr16
add
push
pop
pop
jge
cltd
out
cwtl
xor
xchg
sbb
dec
ret
lcall
xchg
or
dec
shl
mov
frstor
call
xor
add
fs
adc
fiadds
push
mov
ljmp
fists
add
mov
lods
test
movsb
pop
data16
rclb
shr
xchg
add
stc
scas
cmp
arpl
popf
cmp
jp
xor
or
dec
scas
cmp
xor
lock
dec
ret
pusha
xchg
or
push
mov
mov
inc
mov
jns
pop
cmp
adc
pop
out
mov
push
xchg
jmp
pop
jge
inc
sub
pop
call
inc
push
mov
fidivrs
jecxz
or
dec
sbb
inc
jg
jo
adc
push
movsl
lods
cltd
hlt
or
pop
dec
popf
add
add
sub
dec
jmp
dec
fisttpl
mov
mov
mov
sub
daa
mov
out
rcr
pop
jecxz
adc
imul
add
fxch
jmp
jne
imul
lret
cmp
and
fstps
adc
ds
arpl
jnp
decb
stos
rolb
gs
xchg
addb
fisubrs
fs
iret
push
xor
loopne
sub
sbb
sbbl
aas
call
addr16
xor
cmp
adc
data16
daa
adc
not
mov
sub
and
jno
std
idivl
xlat
cmp
inc
xchg
scas
add
aaa
xchg
mov
sub
adc
sbb
cwtl
roll
leave
dec
sub
push
or
jbe
inc
movsb
push
mov
ret
mov
or
cmp
xlat
add
push
xchg
lock
add
pop
test
cmpsl
adc
int3
adc
jnp
das
pusha
push
dec
loopne
pop
push
shlb
and
push
ja
dec
scas
inc
mov
cmpsb
rorb
sub
pusha
push
xchg
scas
dec
sub
incl
cltd
out
movsl
cmp
fstps
lcall
out
mov
push
lea
in
dec
xchg
cmp
test
jnp
in
mov
mov
xor
push
test
loopne
mov
mov
cmpl
or
stos
mov
jg
cmp
cmp
xor
insb
lods
xchg
and
stos
das
pop
arpl
xor
jl
xor
ret
andb
lods
sbb
aam
bound
cltd
lods
fsubl
shll
xchg
mov
clc
lret
adc
les
sub
out
fwait
dec
test
push
dec
dec
shlb
mov
test
add
xor
add
leave
rolb
das
push
pop
xchg
dec
xchg
pop
cs
xor
push
or
xor
js
ret
mov
mov
add
test
jle
add
push
lea
xchg
mov
lds
sbb
or
or
inc
popf
add
dec
push
shll
ror
insb
add
repnz
nop
xchg
mov
mov
fisubl
jg
xchg
jno
call
pop
mov
jb
push
dec
mov
push
pushf
lcallw
bound
aad
cmp
rcrb
xor
in
cld
scas
push
pop
and
push
mov
inc
push
iret
icebp
ja
sub
push
mov
stos
es
push
stos
pop
or
inc
addr16
mov
jg
push
pop
out
lock
andb
cmp
cmp
mov
push
sbb
cmp
mov
lods
and
mov
adc
leave
jbe
and
out
sub
aas
mov
add
nop
enter
pop
lods
sarl
xchg
mov
or
cmp
mov
pop
out
inc
pop
into
int3
sub
pop
test
fstl
pop
mov
xchg
inc
out
mov
lret
jae
shll
std
imul
mov
stos
xor
leave
add
fnsave
out
rcl
movsl
or
cs
xchg
jae
xorb
adc
mov
push
sbb
cmpsl
pushf
mov
dec
out
imul
cmp
dec
adc
or
pop
das
mov
add
mov
out
outsb
or
icebp
xor
sub
cwtl
mov
adc
sub
cwtl
inc
ret
and
cld
popf
mov
add
adc
fadds
mov
adc
aaa
jl
jae
in
xlat
nop
jns
in
cwtl
rcll
and
mov
sub
xchg
loopne
aaa
push
stc
sbb
jl
stc
outsl
xchg
mov
loope
fwait
ss
push
or
fdivr
mov
xchg
outsb
inc
pop
xor
shlb
fprem
aad
push
enter
in
push
inc
dec
fcomps
cmpsb
jns
fdivs
enter
jp
cmp
ss
loop
jmp
ja
test
or
cli
pop
adc
mov
imul
sarl
rcr
mov
pop
dec
push
addl
cpuid
xor
fcmovnbe
push
dec
movsb
xchg
fadds
xor
push
push
adc
ret
loop
and
mov
popf
pusha
cmp
dec
mov
enter
lock
xor
xchg
xchg
aas
mov
js
pop
loope
lcall
lods
scas
stc
jp
and
lret
pop
repz
or
mov
sbb
lods
or
inc
mov
sti
xlat
aaa
in
sub
mov
push
and
push
mov
scas
pop
push
stos
mov
inc
jecxz
cmp
jecxz
rorb
or
push
shlb
aam
pop
inc
ljmp
repnz
out
ret
add
or
adc
jl
adc
cmpsb
or
sub
loop
add
or
pop
sbb
inc
cmp
into
aad
es
push
pusha
push
movb
jle
jge
repz
pop
shll
mov
pop
adc
cmp
and
dec
cmc
sbb
iret
push
push
mov
fisubs
fistps
pop
jb
les
dec
mov
push
iret
dec
pop
jne
jo
popf
pusha
jno
fld
jb
mov
in
out
sbb
xor
push
or
mov
push
movsl
inc
add
or
lea
mov
mov
xchg
ds
jg
and
sti
aad
xor
shrb
adc
outsb
lret
xchg
cmpsb
ja
add
xchg
xchg
fwait
scas
xchg
jbe
adc
rcrb
xchg
and
test
xchg
and
push
in
pop
xorl
data16
outsb
js
mov
sbb
sbb
fwait
js
mov
in
xlat
out
les
fdivl
int
sbb
andb
enter
pop
cmp
add
fsts
shll
adc
cmp
pop
testl
or
cmpb
cmp
adc
fists
cld
out
inc
jbe
jmp
dec
incb
sub
imul
push
shrl
jge
dec
pop
and
and
jnp
rcr
adc
ja
faddl
inc
pop
stos
and
mov
into
xchg
data16
repz
push
push
xchg
loope
pop
lret
fwait
cld
loope
stc
or
mov
push
jno
pop
icebp
sub
mov
sbb
jg
jge
add
cwtl
push
mov
outsl
cwtl
dec
aam
jmp
sarl
flds
xor
loope
mov
inc
sub
jbe
mov
shll
sub
jl
jle
mov
cs
xorl
jl
push
lret
lret
jge
and
push
aam
add
mov
sub
mov
data16
mov
xchg
and
jg
push
or
and
in
dec
cld
stc
jae
add
lahf
sub
fisubrl
pop
sbb
dec
jl
pushf
pusha
sub
jne
mov
cmpsl
xor
shl
adc
cmpl
pop
mov
nop
pop
call
fs
or
cmp
jg
sub
lock
fs
mov
fsts
andl
fstps
pusha
lret
andl
push
lret
popf
adc
insl
in
test
add
pop
sbb
frstor
repnz
mov
or
pop
cmpsb
loopne
jp
add
adc
and
jbe
pushl
mov
mov
clc
clc
or
xchg
dec
jg
call
jb
popf
jmp
mov
jmp
dec
test
ret
jge
sar
push
inc
repnz
push
jle
fadd
nop
sbb
add
ss
pop
xchg
cmovge
mov
adc
pop
jp
ret
fdivrl
mov
fs
fisubl
in
cmp
pop
dec
sahf
inc
leave
aam
mov
sbb
stc
mov
mov
xor
push
in
adc
outsb
test
aam
imul
pop
repnz
mov
das
shr
jecxz
stos
mov
pop
sub
xchg
adc
dec
jecxz
fdivrs
jb
or
pop
xor
ret
fstpl
bnd
jae
jbe
hlt
xchg
pop
mov
push
idivb
stos
dec
aas
push
pop
cmpsb
inc
nop
outsl
insb
inc
and
dec
cld
pop
cltd
out
sbb
cmp
mov
xchg
aaa
push
into
jno
cltd
adc
std
xchg
mov
jmp
mov
fmull
cmp
sub
mov
or
cmp
xchg
fcoms
sbb
mov
sbb
xchg
adc
shlb
rorl
hlt
mov
mov
neg
in
ds
xchg
mov
iret
mov
fnsave
imul
fildl
test
jns
xlat
frstor
push
push
mov
jne
or
in
cmp
inc
sbb
add
dec
adc
jb
in
leave
data16
pop
insb
out
jg
or
mov
ret
sahf
mov
push
cmp
or
ja
xchg
movsl
icebp
hlt
cmp
cltd
out
sahf
xor
pop
xorl
loopne
ret
jmp
xchg
xchg
test
je
lds
pop
adc
stos
shl
xor
lret
cmp
aam
mov
movsb
es
inc
lods
ret
adc
push
dec
xchg
repnz
shll
jae
fidivrs
jne
popf
test
dec
or
lods
js
std
sub
mov
add
add
stos
mov
cmp
dec
notl
push
jo
sub
sbb
and
sarb
inc
roll
testb
jl
pop
movsb
aaa
into
jno
insb
bnd
ficoms
jne
mov
inc
push
stc
push
sbb
in
mov
dec
outsl
vmulsd
mov
pop
lods
push
insl
sub
movsb
loope
mov
pop
fidivrl
sub
shll
push
ss
xchg
das
lea
test
xor
pop
mov
ret
jne
hlt
cmp
nop
cmp
lret
clc
pushl
add
jno
jne
jnp
lock
mov
rolb
je
loop
mov
xor
mov
pop
mov
add
fdivs
inc
sti
adc
push
xchg
lret
rol
inc
pop
outsl
lahf
gs
xchg
popa
and
pop
repz
sub
push
pop
pop
pusha
out
mov
mov
iret
xor
sbb
es
sbb
push
ljmp
lahf
fs
sbb
les
cmc
pushf
shll
push
insb
ds
mov
stc
adc
push
clc
cld
cmp
sub
repnz
inc
jg
xor
push
fadd
sub
mov
adc
and
pop
lods
sub
cmp
call
es
mov
push
or
inc
in
push
mov
or
lods
jmp
sbb
or
in
xor
fisubrl
add
fwait
aam
mov
inc
pushf
pop
jno
jmp
movsb
clc
insb
and
lods
mov
outsl
inc
mov
push
in
or
mov
test
and
dec
mov
xchg
dec
push
test
adcb
scas
test
clc
push
stc
inc
clc
subl
sbb
dec
scas
test
les
inc
bound
shlb
stos
inc
cltd
xchg
aam
mov
jbe
inc
iret
mov
mov
cmpsb
xchg
fwait
and
jmp
push
mov
push
jmp
mov
jge
ja
out
cmp
inc
push
es
sub
rcll
std
jl
mov
rcrl
stc
sub
out
pusha
xchg
sub
daa
nop
aam
xor
fidivs
xor
jle
cli
div
jo
add
sub
mov
sub
fwait
mov
sub
insb
mov
jb
fsqrt
pop
inc
mov
xchg
test
cltd
add
std
out
aas
and
or
xchg
pop
into
aas
push
xorb
xlat
ljmp
jge
cmpsl
mov
and
sub
add
pop
cmpsb
repnz
icebp
xchg
icebp
fsubl
jle
mov
jae
xor
inc
out
push
fwait
rcrb
xchg
jge
xchg
ss
adc
cmpsb
push
push
push
mov
out
push
bound
mov
sub
sbb
sub
xlat
dec
mov
cltd
mov
xchg
pop
sarl
inc
xchg
int
mov
scas
cmp
or
cltd
sti
dec
xchg
outsl
cmp
enter
pop
or
lret
out
jbe
enter
xor
mov
pusha
adc
dec
xchg
inc
pop
mov
int3
cmp
out
sbbl
mov
jle
movq
test
sub
pop
dec
lret
idivl
pop
out
pop
out
mov
adc
push
rcrl
in
cmp
adc
adc
push
add
mov
in
sbb
aam
daa
insl
mov
repnz
cld
xchg
ret
jb
lea
xor
jecxz
lret
mov
push
inc
jno
jb
aaa
scas
mov
lret
mov
je
mov
adc
cmpsl
mov
das
jl
jae
mov
xor
jns
mov
inc
jecxz
or
xchg
and
and
fsubr
inc
pusha
mov
shrb
inc
mov
pop
ret
loope
cwtl
int
popl
das
push
cmpsb
push
das
andb
cli
sub
mov
fsubrs
and
clc
std
dec
loop,pn
bound
and
cmpsb
mov
enter
das
adc
popa
fdivl
loopne
xor
out
out
pop
xchg
popa
test
lods
ret
lods
aaa
hlt
ds
aas
arpl
aaa
es
and
shll
push
or
cmpsl
ljmp
enter
pop
out
addr16
pop
pop
mov
mov
mov
add
and
ds
and
push
stos
hlt
popa
outsl
cmc
sbb
aad
outsl
and
lods
outsl
out
into
mov
mov
jp
mov
jb,pn
push
jne
js
das
ja
shrd
dec
out
dec
fdiv
dec
mov
ljmp
xor
out
lret
pop
sub
cmp
and
mov
jmp
jmp
mov
stos
xchg
sub
dec
bound
or
movsl
fldenv
icebp
jle
shll
mov
gs
scas
scas
mov
shr
cmpb
push
sub
stos
data16
mov
mov
mov
clc
xchg
mov
sub
inc
cmp
push
iret
push
jb
loope
add
jbe
js
dec
xchg
and
stos
sahf
push
and
push
xchg
lods
in
test
loop
xchg
loopne
add
cwtl
dec
mov
cmp
mov
aaa
dec
in
fisttpll
inc
test
add
push
cld
fcoms
std
lcall
test
adc
mov
pop
mov
dec
xchg
es
inc
fdivrl
sub
repz
cli
add
inc
inc
jle
or
ds
push
xor
mov
dec
nop
fimuls
hlt
ret
test
es
lret
out
mov
cmc
mov
imul
sti
adc
dec
cmp
dec
lahf
xchg
sub
push
jmp
inc
arpl
jge
pop
mov
icebp
push
movsl
push
cmp
les
test
pop
pop
rorb
lods
and
or
xchg
je
adc
insb
push
jl
popa
cmp
aas
mov
in
inc
xor
and
lods
dec
xchg
fsubl
inc
sub
out
or
leave
mov
sbb
andb
mov
xor
xchg
jne
mov
fcmovb
or
and
pop
xor
cmp
jo
hlt
lock
lods
mov
xchg
cmc
mov
call
scas
out
aas
mov
aam
leave
mov
mov
scas
sub
popf
mov
je
pop
sbb
and
sub
test
add
je
idiv
scas
js
lcall
add
xor
icebp
inc
repnz
mov
call
inc
adc
sub
cmp
adc
rol
mov
sbb
cmc
or
add
clc
push
inc
mov
mov
nop
xchg
das
nop
stos
jmp
and
ror
pop
mov
loopne
xchg
fmuls
dec
adc
cmp
pop
ljmp
cmp
mov
and
ja
movl
jo
sbb
dec
bound
add
dec
out
inc
dec
incl
sub
lock
cltd
mov
fisubrs
test
mov
repz
arpl
xorl
and
or
mov
mov
mov
imul
pushf
ja
or
cmc
cmpsb
xchg
cmpsl
dec
stos
inc
mov
mov
das
in
es
inc
gs
pop
add
jle
sub
dec
lea
sti
pop
and
es
clc
mov
inc
ljmp
or
mov
inc
les
orl
lret
in
popa
jle
jbe
aad
jae
test
loop
cmp
out
xor
xchg
lahf
filds
sub
xchg
arpl
jo
mov
mov
jle
cmpb
or
pusha
mov
pop
ss
mov
pop
xor
gs
movsb
lret
ret
rcll
jno
jb
mov
mov
pop
test
mull
and
cmc
test
xchg
jge
mulb
pop
adc
cli
sbb
jecxz
xor
lret
mov
daa
fsubl
dec
hlt
fisubrl
jno
sbb
aam
int
push
push
outsl
adc
jbe
and
ficoml
xchg
nop
and
push
jge
call
insl
add
xchg
sub
inc
pop
loop
sub
push
clc
xlat
cmpsl
pop
mov
dec
pop
sub
or
pop
sarl
fisttps
xor
pop
push
mov
aad
inc
mov
psrlw
fcoml
add
ss
mul
and
and
mov
mov
pop
sub
jge
iret
loopne
mov
lcall
insb
ja
add
jno
dec
repnz
inc
out
xor
sbb
das
mov
sbb
test
aam
jno
fcoml
addr16
dec
repnz
and
les
iret
or
aas
imull
sub
jge
sarb
arpl
lcall
cmpsb
sbb
lds
xor
cmpsb
dec
shlb
pop
movsl
xorl
movsl
jg
dec
xchg
xchg
and
test
xor
leave
ss
int
xor
loopne
sbb
out
xor
xor
gs
lods
mov
pop
mov
loop
insb
popf
jge
pop
cltd
mov
test
push
xchg
mov
lods
jle
add
sbb
mov
or
jg
test
adc
mov
push
std
sub
inc
aam
and
sbb
xor
mov
lock
test
stos
fwait
pop
out
dec
or
data16
mov
out
loope
ljmp
sbb
js
jl
xor
sbb
ja
jne
mov
mov
sahf
lcall
lock
jne
outsb
sbb
out
pop
mulb
dec
loope
test
cltd
add
inc
jmp
mov
jmp
loop
mov
xchg
movsb
ficompl
repz
xor
inc
and
mov
scas
mov
lahf
dec
and
inc
stos
add
daa
xchg
pop
ss
stos
add
add
cmpsl
cmc
cli
and
and
lahf
test
test
adc
dec
lret
xchg
ja
pop
jmp
aaa
pop
cld
jno
out
cmp
jae
test
shlb
pop
jmp
mov
inc
sbb
or
aad
loopne
mov
neg
sub
sub
fdivrl
testl
mov
sub
sbb
push
jg
out
cli
insl
out
in
shll
repnz
mov
xor
scas
dec
inc
xchg
pop
mov
cmp
xchg
dec
std
adc
daa
iret
in
mov
hlt
out
or
inc
pusha
sbb
pushl
mov
xchg
inc
aas
out
stos
pop
fisubrs
pusha
sub
and
rcrl
inc
inc
push
mov
popa
jbe
sub
faddl
popf
dec
jbe
arpl
imul
lods
leave
test
std
sbb
xor
dec
leave
mov
shl
lods
sarl
dec
mov
pop
and
enter
aaa
ss
pop
jb
or
cmpsb
pop
pop
adc
add
dec
test
ljmp
inc
pop
and
add
cld
push
or
sub
js
xor
mov
add
cmc
rclb
imul
inc
pop
sub
insl
sub
das
mov
cmpsb
cld
sub
inc
jg
fistps
ficomps
jmp
outsb
jl
mov
jae
pusha
cmp
jmp
jecxz
out
mov
mov
mov
jno
xor
push
fcoml
push
mov
sbb
xor
cs
xbegin
aam
loope
pushf
shll
mov
fldcw
lods
xchg
mov
testl
mov
dec
lret
int
cmpsb
inc
lods
mov
leave
icebp
mov
add
sbb
fstp
add
cld
icebp
scas
xchg
add
push
cmc
pop
pop
movsl
add
cmp
out
jg
or
cmp
jmp
sbb
sar
xor
clc
jl
sbb
fstl
fimull
andl
fisubrl
push
imull
repnz
pop
jp
mov
add
pusha
es
inc
out
les
cmp
xorl
cmp
pop
stos
mov
test
mov
ja
mov
aam
inc
mov
cmp
push
rcrl
jo
popl
sub
mov
or
jne
les
xlat
pop
or
xor
lret
call
xchg
fiaddl
mov
inc
out
mov
cmpsl
cmc
in
mov
loop
stos
popa
mov
xlat
idivl
insl
ja
pop
jnp
sbb
push
cmp
out
mov
mov
imulb
adc
cmp
fs
pop
push
imul
mov
out
pop
ds
pop
mov
fwait
mov
ret
in
pop
rclb
jno
jbe
leave
shrb
shll
loop
mov
mov
je
insl
lahf
dec
fsub
dec
insl
pusha
add
enter
nop
and
push
test
jge
shll
sub
or
ja
xchg
mov
adc
mov
popf
ss
in
mov
ja
pusha
fsubrs
mov
mov
jecxz
in
mov
rorl
mov
cwtl
imul
lods
sbb
int3
adc
jno
cmp
xlat
jge
xor
and
dec
pop
sub
pushf
aad
ja
cs
xor
adc
imul
mov
inc
bnd
shr
dec
call
mov
sbb
jecxz
addb
inc
bnd
mov
adcl
dec
ds
xchg
sbb
jbe
cmpsb
xchg
incb
xchg
push
test
jns
fbstp
icebp
mov
pop
mov
fadd
cwtl
sbb
ljmp
xor
std
xchg
movsl
addl
mov
roll
mov
and
xchg
sbb
jno
cltd
test
push
pop
int
out
fidivrs
cmp
mov
pop
mov
adc
jbe
cmp
fnstenv
addr16
mov
pop
in
enter
push
fucomip
add
sbb
enter
loope
in
fucomi
stc
ss
push
mov
jl
mov
jge
movsl
enter
cli
sbb
pop
push
repnz
xchg
loope
push
dec
test
xchg
mov
mov
adc
popf
popf
out
testl
inc
pop
shlb
add
cmp
pop
push
les
ljmp
inc
mov
fisubrs
sub
xchg
jmp
push
in
jl
jge
mov
out
movsb
pop
adc
cmp
fbld
loop
lahf
lahf
push
mov
aaa
iret
jp
mov
push
mov
push
in
sbb
call
push
shlb
adc
cmp
leave
mov
scas
aad
mov
lds
mov
cld
icebp
insl
lea
cmpl
cmp
push
pop
cmp
ror
pop
scas
inc
lods
adc
int3
add
movsl
daa
out
mov
in
inc
insl
rcl
aaa
out
xor
lock
cmp
push
pop
int
push
aad
das
jmp
push
loop
adcb
sub
fiaddl
loope
xchg
mov
aad
pop
mov
loope
or
xchg
adc
push
jmp
push
mov
push
bound
and
mov
dec
mov
lea
adc
pushf
idivl
lahf
pop
imul
int
lcall
cmpsl
rclb
xchg
daa
dec
pop
adcb
ds
jbe
ret
insl
bound
les
push
nop
popa
int
mov
call
mov
sub
repz
mov
sarb
mov
sti
sahf
xor
and
fwait
dec
xor
mov
add
cmc
jle
repnz
pop
inc
mov
jnp
arpl
add
lcall
lret
shl
jp
shlb
jmp
ret
sbb
mov
lds
lret
push
outsl
in
cs
adc
in
push
adc
imul
jp
mov
or
pop
add
mov
or
inc
ud0
jnp
sub
adc
fmul
lods
inc
mov
jae
jmp
ret
or
and
sub
int3
xchg
add
stos
rcr
ret
aaa
shll
sbb
sub
xor
adc
cld
test
mov
out
imul
mov
and
fld
out
xchg
add
mov
jl
xchg
int
clc
jnp
inc
mov
outsl
lahf
jle
pop
das
repz
mov
mov
jno
xchg
jno
xor
jno
je
mov
cmc
push
mov
movhps
xor
outsl
repz
inc
jmp
sub
jo
push
fldl
clc
cli
lret
push
add
or
and
lret
pop
push
leave
out
call
fdivrs
repz
std
sahf
jg
popf
mov
and
cld
fs
insl
insb
push
test
and
sbb
jge
cmp
cmp
mov
pop
xchg
pop
cld
fwait
cld
ljmp
in
cwtl
xlat
xlat
or
push
fcomi
push
aas
sub
imul
xor
lea
aas
data16
adc
aad
inc
in
jae
mov
jle
ret
and
dec
pop
shr
xor
in
or
pop
sub
ret
pop
mulb
lock
sbb
inc
and
xchg
adcl
call
mov
push
mov
fistl
sub
mov
add
sub
in
xor
xchg
dec
cmp
test
mov
pop
dec
hlt
push
hlt
jmp
das
dec
xchg
insb
lret
xchg
and
roll
je
xchg
cwtl
lcall
arpl
pop
iret
mov
fstp
ja
xchg
mov
daa
scas
stos
lds
pop
or
pushf
or
movsb
loopne
mov
into
inc
or
leave
pop
and
and
loopne
clc
out
adc
push
inc
mov
push
jae
cmc
or
fmull
out
add
std
add
das
xchg
jmp
mov
in
js
fmull
push
dec
and
nop
jl
pop
out
fiadds
jecxz
sahf
mov
inc
inc
enter
int
rcrb
and
or
and
dec
or
imul
popa
push
jns
jmp
adc
push
orb
mov
cmp
adc
add
mov
sahf
gs
or
or
add
popa
jnp
es
jp
movsl
xchg
sbb
xchg
mov
xchg
clc
iret
mov
or
dec
repz
lcall
xchg
sar
mov
push
push
mov
sub
jmp
popa
cmc
dec
xchg
dec
xchg
outsl
sub
test
jl
stos
cmpsl
mov
add
lretw
jp
inc
inc
inc
and
imul
addr16
cmp
sahf
test
push
sub
arpl
shr
mov
or
push
cltd
add
sub
aas
xor
inc
out
adc
adcl
subb
sbb
fcoms
inc
mov
cmp
rorb
hlt
rcll
ret
push
sbb
sahf
pop
test
ret
jbe,pn
jb
or
xchg
imulb
cwtl
add
movsl
testb
fcoml
mov
sub
sub
popf
in
mov
push
mov
repnz
cwtl
lret
mov
popf
mov
jmp
cmp
mov
cmp
iret
nop
xor
daa
add
ss
hlt
sbb
lcall
add
nop
pop
inc
inc
out
mov
cmp
dec
sti
inc
aad
sub
jp
or
pop
mov
repz
jne
scas
std
repz
int
scas
sbb
or
mov
xorb
cltd
shrl
push
leave
push
clc
into
or
adc
shll
in
add
jae
and
inc
mov
jg
pop
call
gs
stos
jg
xor
cmp
lods
xorl
mov
sub
add
adc
mov
cwtl
nop
push
dec
xor
cmp
les
stos
js
sbb
cwtl
fwait
not
push
shll
out
xlat
scas
sub
fdivr
lock
jo
jg
lret
cmovs
aad
stos
push
mov
out
cmpsl
out
mov
push
mov
dec
mov
mov
cmp
loopne
and
or
dec
js
mov
mov
add
dec
adc
negl
scas
cmp
xor
mov
mov
mov
fidivl
stc
dec
lret
jnp
icebp
lret
cwtl
mov
inc
inc
jecxz
mov
scas
mov
dec
mov
in
imul
loope
mov
mov
fdivr
cld
jmp
hlt
mov
outsl
cltd
popf
cmp
cmpsb
dec
inc
call
loope
int3
xor
int3
xor
lret
roll
inc
or
jnp
mov
in
fwait
cmp
dec
enter
iret
pop
js
sub
dec
sub
or
mov
pop
sbb
mov
popf
frstor
sbb
cli
pushf
sbbl
xchg
sub
stos
push
mov
les
xor
pushf
test
repnz
mov
lds
hlt
cltd
xlat
inc
xchg
ds
and
jge
shl
dec
push
repz
dec
dec
cmp
scas
jmp
add
sbb
aas
push
sbb
addb
es
loope
push
scas
aad
sub
in
inc
popa
fs
mov
and
mov
or
add
jge
fisubrl
idivb
nop
clc
out
movsl
mov
mov
stos
enter
movsl
sub
jg
test
daa
sbb
and
popf
pop
aad
adc
lret
pop
movsl
dec
and
inc
push
adc
adc
xor
jns
push
sub
dec
ljmp
call
cmp
mov
mov
cmpl
xlat
adc
mov
js
and
loope
test
mov
in
testl
loopne
pop
or
push
adc
jge
insl
pusha
pop
add
cmpb
dec
shll
mov
popf
add
push
xor
sub
loop
test
mov
pusha
xchg
enter
rcl
pop
rolb
add
loopne
js
and
lds
xchg
lahf
add
jl
cmp
mov
aaa
inc
add
xor
dec
push
add
lods
jns
jae
adc
jmp
sbb
cmpsb
xlat
pop
sti
sub
data16
mov
fs
jbe
xchg
cwtl
sbb
push
or
popf
test
cld
adc
outsl
in
jbe
push
test
ror
mov
mov
push
out
jmp
pushf
or
rorb
out
push
push
push
mov
ret
mov
pusha
nop
sub
data16
push
sbb
inc
leave
sub
in
mov
fcomps
and
ljmp
mov
jg
in
sub
mov
sbb
ljmp
movsb
push
movb
int3
mov
je
dec
jge
lret
movsb
dec
iret
cmpl
cli
add
xchg
pop
mov
mov
xchg
fcomip
xchg
icebp
and
pop
mov
roll
ja
xchg
push
test
pop
mov
loope
sbb
mov
insl
rclb
nop
pop
bound
inc
fstl
out
jne
inc
jle
push
push
xor
sbb
inc
popf
cmc
stos
jne
inc
ljmp
inc
fsubrl
mov
les
ljmp
sbb
add
repnz
pop
mov
adcb
adcl
mov
enter
fs
inc
xor
pop
stc
inc
cmpsb
jg
xor
rorl
mov
cmc
dec
inc
cmp
bswap
fs
sbb
outsl
das
mov
mov
out
insb
aad
fs
sub
cmp
xchg
dec
add
in
lret
mov
fcoml
push
stos
mov
int3
aam
inc
popf
mov
popf
push
mov
pop
inc
imul
jae
out
xchg
mov
jne
cmp
mov
xor
mov
push
outsl
test
xor
jbe
ds
pop
lods
out
sbb
mov
daa
call
and
and
cmpsb
test
sbb
xchg
push
shll
dec
jb
stc
push
xchg
cmpsl
pushf
jmp
mov
jp
push
imul
in
inc
pop
fcmove
pop
cmc
mov
pop
adc
pop
push
dec
xor
add
fisubl
sbb
out
dec
insl
xchg
adc
jle
andb
loopne
fdivs
ret
add
loop
sahf
cmp
jns
in
jno
push
sbb
mov
jle
and
jns
call
lret
rcrb
bound
add
pusha
sbb
fstl
mov
pusha
mov
lret
pop
cltd
adcb
fcoms
fiadds
pop
push
dec
test
jbe
lret
jl
ja
loopne
mov
jge
mov
jle
sbb
adc
jo
mov
adc
or
fidivrl
test
lods
xor
add
push
sbb
or
or
jge
jnp
stos
js
mov
stos
jg
sub
inc
xchg
lret
push
inc
cmpsl
jp
add
push
mov
mov
pop
xchg
cld
popa
xor
testb
mov
lods
dec
and
loop
fstpl
and
and
repnz
in
lods
jp
cmp
arpl
pop
hlt
mov
ss
jg
push
outsb
or
aaa
out
divl
xorl
aam
imul
mov
pusha
pusha
adc
aad
and
stos
divl
int
in
arpl
lods
insb
repnz
inc
aas
sbb
mov
jecxz
pop
test
fdivrl
ss
xor
add
rorl
js
pop
dec
rcr
sub
cld
xchg
mov
outsb
jbe
push
aaa
aad
ret
sub
aaa
push
loope
add
mov
lds
add
cltd
cmpsb
push
loopne
mov
loop
sbb
mov
test
test
movb
jp
xchg
jns
call
adc
add
sbb
sub
xor
xor
das
das
loope
bound
inc
test
ret
ljmp
orl
movsl
mov
push
jno
test
cmpsl
push
mov
lret
mov
push
jno
mov
and
add
cmpsl
cmp
ret
add
xor
daa
fdivr
or
push
scas
mov
xor
out
xchg
jne
out
pop
arpl
xlat
inc
sub
cmpsl
fs
jle
inc
xchg
lods
rcll
imul
addr16
negl
ror
dec
sbb
jns
or
adc
mov
icebp
sbb
in
fcompl
xchg
dec
loop
jbe
or
sub
out
pop
xor
ret
out
outsl
xchg
ljmp
or
jge
pop
out
cmp
loopne
xchg
lahf
hlt
xchg
pop
test
push
out
rclb
xchg
sub
outsl
push
out
sub
sbb
jle
pop
in
and
insl
jmp
jg
jae
cmp
sbbb
in
push
fsubs
sbb
pushf
stos
and
sarb
xchg
add
mov
mov
fisttps
daa
out
or
iret
addr16
lds
clc
inc
jbe
pop
xchg
xor
hlt
jmp
mov
stos
fidivrs
inc
cwtl
fadd
stc
push
dec
pop
iret
push
stos
adc
pop
inc
mov
jb
repz
mov
push
out
sub
pushf
js
pop
xchg
jae
dec
lods
xchg
icebp
jmp
jmp
sub
dec
shl
adc
rcrl
mov
adc
ret
or
pop
pop
aas
xor
test
mov
pop
and
int3
imul
push
dec
cmpsl
push
push
pop
and
popf
sbb
roll
xor
jg
cmp
jbe,pt
sbb
xchg
rcrl
mov
ljmp
cmp
daa
mov
jnp
adc
cmp
sub
aaa
scas
mov
pop
je
scas
in
test
jne
pop
in
push
xor
push
mov
les
xor
aaa
or
mov
mov
aaa
or
out
inc
dec
cmp
shlb
addl
lods
lods
test
test
mov
jnp
cmp
xchg
ljmp
clc
mov
push
mov
nop
ja
push
push
jnp
dec
mov
sarl
fwait
push
movsb
shrd
add
imul
xor
dec
push
mov
sahf
inc
sbb
idivl
movsb
jo
sarb
xor
imul
mov
fwait
mov
mov
sub
aaa
pop
and
push
or
jle
popf
xor
lds
jecxz
aas
mov
adc
sbb
js
add
pushf
sub
outsb
xor
mov
pop
add
inc
std
jbe
in
das
ja
insb
add
inc
and
fistpll
pop
imul
mov
push
stos
sub
loopne
repz
mov
mov
sub
xchg
mov
lahf
sahf
test
xor
xchg
movsl
sarb
pop
lahf
rcr
fcomip
repz
lret
sti
xor
mov
outsb
pop
mov
mov
sbb
sub
cmpsb
sbb
xor
or
frstor
xchg
fwait
mov
int
push
inc
repz
fwait
jg
mov
cmpsb
mov
test
jbe
jne
test
xchg
add
insb
dec
adc
in
fstpt
cld
aam
inc
sub
stos
xchg
push
add
and
arpl
int
aaa
push
fwait
in
cmpsl
push
inc
shrb
and
ret
sub
dec
insb
and
out
adc
xor
xcrypt-cfb
cmpsl
movsb
mov
mov
test
mov
sub
ljmp
fwait
hlt
push
test
jge
jl
popf
add
lret
icebp
sub
out
mov
jmp
aas
outsl
adc
repz
out
mov
jg
outsb
jecxz
xchg
out
sub
pop
xor
lret
or
pop
sub
inc
faddl
mov
rorl
xor
cmpsl
repz
into
xchg
movsb
aad
push
pcmpeqd
inc
push
shlb
fbld
addr16
rcrb
out
dec
and
push
movsb
adc
enter
mov
daa
push
jne
dec
or
push
cld
ficoml
xchg
lods
push
scas
movsb
pop
push
mov
xchg
aaa
js
jbe
dec
pop
push
xchg
seta
pop
jmp
sub
divb
lock
sbb
push
pop
ljmp
sbb
lcall
aaa
in
decl
call
pop
inc
decb
sub
cltd
cld
dec
scas
ficoml
or
divb
or
icebp
cli
mov
mov
inc
dec
jnp
cwtl
dec
test
inc
or
lret
jle
and
iret
fimull
or
shll
imul
popl
js
scas
and
adc
test
shll
sahf
add
cmp
and
clc
out
pop
adc
js
xchg
roll
mov
push
lcall
sbb
fwait
push
mov
and
xchg
movsl
mov
push
decb
popa
inc
test
mov
sahf
xchg
inc
into
inc
mov
dec
inc
movsl
dec
lcall
push
or
bound
test
cmp
push
or
aad
mov
add
mov
push
js
sbb
push
stc
xchg
mov
js
out
xor
inc
jo
jbe
sbb
cmc
mov
dec
mov
mov
gs
lods
sub
jb,pt
xlat
mov
adc
fdivp
ljmp
sub
push
sbb
mov
push
jge
sub
repz
outsb
incl
into
paddsb
mov
mov
dec
cmc
cmp
sub
jbe
jae
pop
xor
sub
jmp
les
insb
and
fwait
test
adc
jp
lahf
xchg
fisubs
jno
jmp
leave
push
and
clc
ljmp
nop
loopne
js
cmpb
adc
pop
popf
inc
dec
arpl
jne
test
sbb
sub
scas
bound
mov
mov
rorl
addb
push
push
dec
push
mov
outsb
les
std
push
mov
sub
mov
out
fiadds
add
sub
pop
shlb
or
popf
adc
loopne
cltd
mul
pop
adc
or
xor
std
xchg
xchg
push
mov
adc
or
imul
mov
sbbb
inc
in
pop
popa
adc
xor
addb
pop
add
cmpl
pop
pushf
cmp
icebp
cmp
sbb
bound
lret
movsb
pusha
out
and
jmp
fcompl
or
pusha
mov
adc
es
or
shll
nop
add
sbb
pop
mov
dec
pop
ret
fisttps
add
adc
stos
pop
cs
adcb
mov
imul
popa
add
js
cmc
sar
inc
mov
xchg
lahf
fldlg2
std
xor
xor
sub
int3
cmp
bound
jae
cltd
in
jle
push
and
popf
rcll
xchg
adc
cmp
cmpsl
gs
sahf
xchg
js
adcl
mov
loop
repnz
mov
lcall
repz
adc
ja
or
inc
xchg
in
xchg
out
shll
outsl
push
or
call
push
inc
add
fstps
mov
xchg
lcall
adc
jmp
pushl
and
jle
push
ja
in
jecxz
scas
jnp
iret
and
aam
sbb
adc
ficompl
mov
mov
aad
fwait
lea
and
push
ljmp
jp
fsin
fstps
sub
push
xchg
stos
mov
mov
nopl
lret
cmp
fstps
or
les
pop
sub
int
jle
add
xlat
jnp
inc
mov
sub
xchg
and
outsl
icebp
divl
stos
xchg
insb
xchg
sub
fs
push
jno,pn
fidivrs
leave
out
sbb
sub
repnz
mov
movsl
cmp
fcompl
out
addr16
insl
lods
lret
in
ffreep
hlt
adc
pop
mov
add
jno
xchg
dec
or
clc
test
xor
jle
pop
idivl
jmp
xchg
mov
cmpsl
push
je
push
in
jle
movsl
mov
stos
out
cmp
xor
mov
popf
inc
test
out
fcoml
dec
and
xchg
pop
dec
jmp
lret
adc
fs
insb
mov
cmpsl
aaa
mov
outsb
xor
sbb
inc
arpl
xchg
dec
push
cli
xor
lret
vmread
js
les
pop
mov
inc
enter
lods
mov
loopne
pop
and
xchg
in
xor
ja
gs
mov
test
data16
rcl
jg
push
or
shrl
int3
adc
icebp
pop
pop
out
pusha
test
sbb
inc
divl
jecxz
xchg
mov
insl
gs
pop
repz
cmpsl
imul
jecxz
cmc
repz
repz
pop
mov
jp
hlt
fistps
mov
inc
xor
xor
cmp
sub
or
fcompl
mov
jmp
les
aaa
cmp
dec
add
add
pushf
test
cli
mov
sbb
pop
fwait
ljmp
xchg
xchg
in
mov
popf
jae
mov
dec
daa
inc
mov
leave
adc
ret
aad
xor
data16
jno
jno
xlat
bound
cmpsl
inc
aam
and
xor
sub
mov
out
daa
push
dec
lods
popf
fnstenv
push
loopne
and
inc
vpaddd
adc
rcrl
mov
sub
rorb
jmp
jecxz
cmp
jl
aam
pop
or
std
xor
add
lods
in
popf
push
inc
leave
jle
popa
jp
addr16
icebp
iret
add
scas
cmp
idiv
mov
scas
xor
jmp
gs
push
in
adc
mov
push
leave
jg
sti
sub
and
jo
jae
aad
test
mov
pop
xor
xlat
adc
xor
adc
int
xor
shrb
pop
sbb
push
push
add
test
or
jl
mov
ret
into
cld
dec
adc
inc
sbb
pop
push
or
pushf
dec
xchg
inc
jno
push
xor
sahf
popa
mov
imul
int
adc
inc
xchg
subl
or
decl
or
dec
and
sbb
cmpsb
outsb
in
jle
xchg
push
subl
imul
sub
bound
in
push
jae
add
push
push
int3
bound
mov
ds
mov
xor
rcrb
push
or
xor
cwtl
jo
dec
sub
xor
cwtl
push
lods
mov
shrl
mov
jecxz
push
push
mov
cmp
cld
mov
add
insb
and
mov
hlt
jp
push
xchg
or
dec
decb
fcoml
test
gs
out
xchg
push
sbb
add
mov
xchg
cli
leave
jne
pop
and
scas
or
jnp
ljmp
lock
pop
push
pop
test
jne
and
cwtl
leave
lret
js
push
loope
inc
jcxz
pop
lock
out
cmp
imul
pop
shrl
dec
or
and
xor
xchg
jge
xchg
or
loopne
mov
repz
dec
in
leave
enter
fs
mov
ret
mov
dec
jno
push
mov
or
mov
sbb
fs
cmp
cld
lret
pop
cs
xchg
mov
scas
jns
mov
xor
jg
sbb
xor
mov
cmp
dec
lock
inc
fcomps
out
inc
js
neg
pop
jnp
push
push
pop
xor
mov
mov
inc
pop
clc
push
arpl
popa
sbb
add
cmp
mov
sbb
jbe
pop
xor
dec
fsts
sub
and
out
es
in
mov
dec
mov
mov
add
jo
shl
aam
jge
hlt
into
test
imul
adc
push
lret
es
repnz
pop
sbb
fnstcw
fst
add
scas
enter
dec
push
loope
cmp
rcrb
fs
loop
leave
adcl
aam
inc
pushf
xor
push
into
fisubrl
test
imul
repz
dec
rclb
pop
xchg
dec
mov
das
out
loope
testb
enter
inc
jmp
xchg
add
xor
pop
xchg
inc
fwait
repz
mov
aam
add
xchg
add
and
daa
xor
cmp
sbb
dec
push
mov
adc
mov
add
pop
cmp
enter
sbb
cs
gs
clc
adc
das
pushfw
xor
sahf
aaa
rorb
push
push
sub
push
cmp
xchg
adcl
push
fstl
xor
ffreep
ljmp
adc
hlt
incb
out
sbb
dec
mov
fnstenv
movsb
xchg
push
mov
push
pusha
loopne
inc
xor
lods
push
jl
enter
mov
cs
or
out
call
jno
cmc
xlat
lret
push
sbb
les
rcrl
sbb
call
and
dec
in
jle
and
fcoml
inc
cmc
fwait
cltd
jl
fnstsw
sarl
sarl
push
enter
sbb
stos
inc
sbb
ss
inc
es
fnstsw
or
clc
dec
movsl
sbb
dec
int
cmp
push
mov
fmul
cld
lret
lea
mov
daa
inc
dec
pop
mov
int3
and
adc
sub
movsl
idivb
mov
and
aas
add
aaa
mov
mov
pop
push
sti
sub
bound
insb
cmp
stc
mov
add
push
jmp
jbe
sub
mov
out
andb
jmp
pop
mov
mov
xchg
fs
add
ds
mov
push
imul
mov
aad
negl
jge
and
call
enter
xchg
cwtl
sub
pop
and
ss
es
pop
ljmp
inc
jl
out
lea
fisubs
insb
ffreep
fsin
mov
jg
nop
xchg
jno
pop
test
sub
aam
cmp
mov
pop
mov
and
mov
outsl
and
int
push
gs
jl
dec
cmc
mov
xchg
sub
dec
fsubl
push
outsb
xchg
fmuls
insb
sub
mov
shlb
inc
push
orb
mov
sti
out
imul
mov
pop
vpunpckhqdq
pushf
movsb
and
cmpsb
sbb
pop
loope
test
xor
subl
cmp
sbb
xor
cmc
mov
or
xor
out
sub
loopne
dec
jo
adc
dec
and
aaa
or
imul
jb
ds
inc
fmuls
push
std
les
dec
cwtl
xor
lods
push
push
add
add
cwtl
and
mov
addl
xchg
popf
xor
jno
lock
cmp
addl
in
std
mov
or
xchg
and
scas
and
cltd
sub
sub
ficompl
arpl
pop
xor
or
ss
jmp
mov
inc
xor
jnp
sbb
pop
push
pop
jnp
lods
popa
leave
popa
dec
lea
icebp
xchg
mov
cmp
rcrl
aas
scas
add
push
or
push
ret
adc
xor
aam
push
out
mov
mov
add
pop
lods
push
outsl
pusha
cwtl
dec
jmp
fisttpl
loop
cld
or
mov
in
xchg
pop
stos
push
scas
movsb
ret
pop
mov
cmpsb
dec
ja
cmp
test
dec
jns
adc
in
mov
test
sbb
sub
int
add
loope
push
inc
bound
jmp
inc
flds
rcrl
pusha
mov
xchg
xor
dec
mov
adc
pop
or
pop
or
rcr
mov
xchg
out
mov
mov
fidivrs
in
add
mov
scas
push
stc
xchg
mov
xlat
stc
popa
mov
or
push
roll
stc
cwtl
add
mov
in
dec
scas
jbe
in
xlat
bound
inc
dec
inc
push
clc
insb
jbe
push
out
dec
add
pop
fsts
insb
dec
movsl
and
mov
and
shr
dec
in
mull
outsb
cmp
rolb
pop
adc
inc
fsubs
stc
out
add
inc
into
loope
pop
call
lcall
push
or
popa
pushf
rcrb
sbb
call
ja
push
mov
repnz
mov
push
scas
sbb
push
inc
jne
adc
jno
leave
push
add
testb
jp
clc
and
shr
push
mov
jle
pop
pop
test
pop
mov
jno
imul
lret
loopne
cmpl
xchg
push
adc
xor
lods
ljmp
xor
mov
push
fistpll
push
dec
andb
aaa
sbb
xor
cmp
xlat
push
data16
jnp
adc
mov
in
sbbl
ds
mov
pop
mov
imul
push
inc
mov
lods
xor
je
enter
inc
xor
push
and
js
mov
enter
shl
movsl
sbb
add
adc
int3
fsts
sub
adc
jmp
fwait
or
push
in
xchg
mov
cli
sbb
sub
lahf
jb
cmp
or
push
aad
pop
mov
mov
call
and
fistps
and
sbb
jp
mov
test
imul
je
jo
ja
cmp
sbb
loop
je
std
add
push
fidivrs
pop
push
int3
inc
mov
or
scas
mov
decb
inc
or
loope
xchg
sub
push
push
inc
or
push
add
dec
push
addb
mov
or
mov
fidivrs
imul
repnz
mov
gs
fcoml
cwtl
mov
icebp
cs
clc
das
in
xchg
addr16
fldt
shl
addr16
out
gs
and
sarb
sbb
adc
daa
lock
inc
sahf
jne
pushf
nop
pop
mov
roll
jecxz
add
push
sbb
fs
jecxz
insb
xor
mov
stc
adc
clc
adc
mov
or
adc
mov
and
cmp
insb
add
push
dec
fwait
lods
xchg
lods
and
cmp
pushf
xor
stos
xchg
lds
ljmp
add
push
scas
or
cltd
jp
out
jg
inc
jne
adc
stc
pushl
pop
mov
ja
aaa
mov
adc
and
enter
jbe
push
leave
pop
lods
pop
inc
fwait
xchg
pop
xchg
shl
xchg
scas
mov
cwtl
pop
in
mov
cmp
adc
testl
mov
jns
loope
clc
push
repz
cli
cmp
inc
movsb
outsl
ja
in
sbb
fildl
lret
rcrb
jecxz
mov
mov
mov
jle
out
cmp
cmc
mov
mov
cmp
mov
js
and
popa
mov
jg
pusha
jg
jecxz
sub
iret
inc
jge
and
jne
sar
mov
andl
inc
inc
lods
les
add
dec
pop
adc
aad
add
cli
mov
push
aad
pop
cmp
dec
pop
jae
mov
js
mov
adc
popa
cltd
lods
mov
cmpsl
pcmpgtw
add
jle
fistpl
mov
sub
pop
sub
mov
stc
leave
in
shl
and
faddl
mov
and
add
jne
dec
adc
out
push
pop
pop
pop
xor
imul
pop
je
lods
cmpsl
add
xor
outsl
clc
mov
cld
adc
pop
xor
add
cmp
pushf
jmp
scas
cmp
out
scas
pop
push
cmc
dec
and
xchg
mov
sub
pop
dec
clc
lock
mov
ljmp
mov
cmp
out
out
cmp
jnp
mov
or
pop
sti
insb
int
pop
fnstsw
and
add
aad
inc
cmpsl
mov
mov
int
into
dec
adc
cwtl
aad
xchg
xchg
xchg
sbb
sbbl
test
jle
stos
fdivr
out
pop
sahf
sub
jle
inc
sub
movsb
test
push
mov
jp
out
push
jecxz
add
cmpsb
enter
arpl
and
aaa
jl
adc
cmp
push
ficompl
outsl
mov
out
xchg
out
hlt
imul
xor
fsubrl
push
int
fstpt
add
rcr
xchg
jl
aam
out
pop
add
ds
das
ss
ja
add
sbb
out
sbb
jnp
mov
les
fcomps
sbb
lcall
adc
pop
jnp
int
or
push
scas
ret
hlt
xor
and
and
dec
jmp
push
push
ret
loop
cmp
ftst
stos
push
pop
sbb
or
xchg
mov
out
xchg
lahf
inc
mov
mov
push
cli
push
adc
push
inc
les
mov
dec
push
and
fs
sbb
aad
mov
adc
and
push
inc
gs
jno
xlat
imul
jle
enter
mov
push
stos
pop
out
fsubrp
pop
jmp
push
mov
inc
dec
jnp
outsl
mov
dec
std
das
and
dec
std
out
push
movsl
mov
popf
lcall
rorb
ds
cmc
mov
cmpsb
jno
add
mov
sub
mov
mov
jae
cs
lea
bound
sub
sar
mov
stc
push
inc
adc
and
xor
cs
xor
stc
mov
add
dec
in
lret
aaa
mov
hlt
int3
push
bound
aam
daa
repz
cmp
outsb
ror
dec
scas
inc
test
gs
test
ss
sub
mov
xor
mov
cmc
add
mov
jmp
xchg
push
roll
shrl
mov
pop
test
xor
add
in
das
push
dec
sub
xchg
test
sti
sub
pop
call
rorl
cmp
out
push
out
imul
jae
popa
jg
rorl
out
and
lea
mov
mov
ret
aad
iret
es
cmp
pop
gs
popa
lea
cmpsb
jmp
leave
rcrl
sbb
mov
cwtl
jbe
xchg
es
aas
xchg
sti
lahf
mov
inc
loopne
fists
push
xchg
xchg
xor
adc
cmp
mov
jo
in
out
push
xchg
outsl
jle
mov
mov
xchg
sub
mov
cli
sub
add
fstps
push
stc
imul
loope
pop
mov
and
dec
ljmp
add
add
loop
int3
add
das
mov
mov
push
push
inc
in
mov
aaa
in
jne
lods
call
leave
add
adc
cmp
push
cmpl
loope
mov
sbb
jbe
dec
shlb
rclb
xchg
inc
repz
mov
pop
das
adc
clc
and
or
test
mov
pop
iret
sbb
inc
pop
pop
js
dec
push
fildll
xchg
jg
popa
sbb
xlat
dec
sti
cwtl
movsb
popa
into
popl
enter
mov
and
dec
add
sbb
and
sub
inc
shll
cmp
pusha
xor
sahf
ror
sbb
std
pop
cmp
inc
jecxz
test
dec
cltd
addr16
lds
iret
lret
mov
mov
test
into
lods
repnz
jns
adc
sbbb
pushf
pop
jle
mov
pop
xchg
addb
push
and
cli
add
call
push
inc
fildl
sbb
cltd
bnd
inc
xor
mov
push
nop
xor
adc
mov
jbe
inc
nop
inc
jp
je
test
cmpb
stos
cmc
sub
int
into
sbb
jno
adc
mov
sbb
sub
push
xor
std
jne
sbb
aas
pop
mull
xor
add
mov
sbb
pop
int
and
cmp
and
lods
push
xor
sub
jo
std
pushf
loope
push
adc
add
stc
aam
mov
mov
mov
test
adc
fldenv
cmp
dec
cld
mov
mov
cli
and
sub
adcl
movsb
outsl
mov
pop
inc
imul
or
ds
insl
and
adc
mulb
push
adc
cmpl
data16
fsub
cmp
fs
scas
adc
shll
fistpl
sub
and
or
jecxz
hlt
cmpsl
jnp
in
inc
jl
inc
or
mov
ficoml
scas
mov
jge
mov
mov
inc
mov
loope
jp
or
in
xlat
lcall
or
ret
mov
aad
das
cmp
xor
jns
add
xor
dec
jns
sbb
cmp
mov
testl
stos
imul
sbb
out
add
lds
xor
jne
popf
inc
pop
pop
dec
sbb
sarb
hlt
leave
fdivrl
cmp
and
cmc
xchg
frndint
push
mov
mov
mov
sbb
sbb
add
adc
adc
cmp
dec
cltd
mov
in
cmp
xor
stos
pop
movsl
lds
jle
jle
mov
ret
cmpb
fimull
out
jmp
lds
mov
and
imul
jnp
sbb
in
mov
cli
add
cmpsb
fs
cmp
dec
mov
lcall
jbe
nop
fcompl
xchg
and
call
adc
inc
cmpsb
loopne
xchg
cwtl
and
pop
out
dec
test
pop
pop
insb
add
int
jns
jbe
les
shll
popf
jl
inc
adc
pop
test
xchg
sub
cmp
mov
mov
ds
stos
adc
fsubl
shlb
jb
jecxz
int
sub
addr16
mov
mov
addr16
lcall
mov
xchg
lock
push
adc
std
xor
popa
push
std
fchs
outsl
int3
pop
out
adc
mov
cwtl
push
and
sbb
fmul
cmpsb
push
xor
mov
loop
or
pusha
jbe
cmp
das
push
cltd
enter
std
cli
std
mov
lahf
js
or
jne
leave
adc
movsl
mov
push
jl
xchg
adc
ret
test
sub
sbb
arpl
movsl
mov
adc
cmp
or
xor
jmp
and
push
mov
lods
divl
add
or
xor
dec
test
clc
jb
sub
inc
xor
fucomp
and
and
jns
xor
rolb
and
mov
push
popf
mov
sbb
ja
xchg
fnstenv
scas
jmp
dec
jae
jp
leave
sub
cmp
stc
push
and
rcr
jle
leave
push
in
jmp
xchg
int3
sbb
imul
inc
sbb
fsubrl
lret
push
frstpm(287
mulb
fisubs
movl
xor
xchg
mov
inc
mov
jno
sti
adc
mov
mov
orb
repz
in
loope
mov
cld
ss
out
adc
pop
loope
pop
addr16
aaa
add
cmc
lock
adc
ss
cmpsl
pop
ja
lds
hlt
enter
add
pop
stos
mov
rclb
sub
les
xor
dec
add
es
xchg
push
inc
orl
mov
jle
or
test
xchg
repz
and
mov
shll
jle
push
xor
out
arpl
adc
call
jb
inc
ss
push
icebp
or
sub
mov
pop
or
icebp
int3
and
sbbl
jb
xchg
cmp
push
jns
fiaddl
cli
leave
in
jmp
jg
adc
daa
mov
or
cmp
cs
mov
incb
sbb
xor
push
pushf
cli
inc
add
push
stos
mov
out
js
jae
lock
jae
not
movsl
sbb
popa
out
add
shll
popf
sub
inc
test
add
iret
cmpsl
sub
jecxz
subl
addb
cmpsb
in
shlb
sub
push
mov
addr16
xchg
and
push
test
movsl
mov
and
insl
clc
pop
push
rclb
jle
enter
stc
movsb
cmp
mov
jge
or
xor
lahf
std
lret
adc
mov
addr16
cmp
fdivrl
out
mov
lds
lock
add
pop
call
test
ror
in
jmp
add
icebp
loope
daa
fsubrs
push
push
into
sbb
push
in
jae
fcmovb
push
dec
and
insb
in
aad
scas
mov
repnz
popa
xchg
dec
cmpsl
imul
mov
out
push
test
push
jle
push
sub
inc
and
push
loop
stos
repz
out
xchg
les
sub
mov
ljmp
das
std
jae
pop
in
daa
mov
mov
hlt
arpl
dec
ret
out
icebp
sbb
dec
lret
fucom
add
cmp
jbe
int
stos
jmp
clc
or
imul
fistl
sbb
rorb
out
mov
pop
inc
dec
push
inc
add
and
dec
mov
xlat
cmp
inc
addr16
int3
cltd
mov
pusha
xor
ret
push
ljmp
js,pn
mov
cmp
repnz
fisubrs
rorl
in
push
jecxz
iret
add
adc
jmp
test
push
pop
mov
cmp
out
mov
sub
aaa
test
repz
subl
movsl
lods
cmp
push
loopne
aaa
or
cli
aas
inc
mov
adc
fdivl
mov
adc
xor
mov
dec
cmp
adcl
xlat
insl
mov
inc
repnz
cmp
loopne
fimuls
jl
fistl
cmp
sbb
push
in
lret
mov
xchg
lods
inc
aam
lods
pop
sub
imul
push
cwtl
inc
icebp
mov
pop
push
iret
aam
pop
and
jp
cmpsl
lods
add
mov
mov
inc
ja
cmp
aam
and
or
fldenv
and
ret
insl
mov
leave
pop
jbe
in
ret
mov
incb
clc
xor
pop
mov
je
mov
pop
sub
ljmp
sbb
mov
clc
outsl
ds
cltd
cltd
into
push
sbb
mov
pop
pop
lahf
mov
push
das
test
mov
nopl
mov
psadbw
lds
test
xchg
pusha
clc
jp
arpl
cmc
imul
cmp
aad
pop
jmp
ret
fnsetpm(287
test
mov
mov
mov
ss
clc
mov
mov
popl
mov
rolb
cmp
aaa
add
push
and
inc
cmp
addr16
push
mov
lods
cmp
sbb
inc
jg
out
sbb
pop
scas
gs
mov
lea
mov
sub
mov
int3
enter
push
xlat
or
lods
in
divb
int3
sbb
pop
add
xlat
mov
push
in
cmp
jbe
in
jge
hlt
mov
adc
pop
js
mov
data16
dec
test
push
sub
repz
lea
out
mov
pop
lods
inc
and
loopne
jae
not
adc
push
sbb
in
dec
sub
pop
repz
int
ja
sbb
sahf
xchg
push
enter
mov
scas
dec
test
dec
pop
mov
push
enter
nop
pop
push
mov
pop
inc
into
and
popa
fwait
mov
addr16
or
loopne
xlat
add
jecxz
mov
repz
pop
mov
movsl
into
movl
cmp
fs
and
add
jmp
out
xchg
js
das
mov
stos
inc
out
sub
into
inc
push
dec
sbbb
push
mov
stc
fs
inc
inc
inc
dec
jnp
inc
mov
inc
cmp
mov
lea
xchg
sub
cmp
fwait
push
in
inc
cwtl
jge
stos
pop
xor
int3
or
roll
adc
pop
sub
ja
mov
inc
xor
mov
ret
push
sbb
and
insb
pop
add
pop
mov
lods
out
xchg
loopne
pop
ret
orl
sub
pusha
xchg
daa
fisttps
andl
inc
mov
shrb
push
mov
cmp
adc
flds
flds
lahf
adc
out
xor
sub
lods
ja
rcrb
bound
cmp
or
mov
loop
stos
mov
sub
mov
fiadds
scas
pop
loop
repz
adc
mov
jne
repnz
cmc
mov
cmp
add
add
lea
sbb
loope
addr16
sbb
cmp
in
loope
std
mov
mov
decb
jmp
xchg
out
sbb
js
mov
pop
push
adc
addl
imul
xor
ffree
enter
and
sbb
int
mov
xchg
bound
insl
ja
add
push
scas
fisttpl
jbe
xchg
iret
lahf
popf
cmp
es
inc
mov
adc
inc
push
inc
fsubr
int3
mov
pushl
push
negl
cmp
or
into
pusha
movsl
mov
sub
add
cmpsb
mov
test
mov
jmp
inc
aaa
mov
push
pop
arpl
int
xor
enter
cmc
mov
ljmp
jb
rcr
ss
cmp
pop
xor
pop
movsl
sub
mov
enter
fisubl
and
sti
push
in
ret
fs
xchg
pop
insl
pusha
sbbl
sub
fisttps
push
imulb
mov
pop
sub
inc
pop
daa
leave
test
mov
cmp
xchg
lds
push
mov
mov
dec
add
mov
add
or
lods
dec
leave
or
pop
jnp
mov
jg
bound
jle
ficoms
mov
push
or
pop
nop
arpl
sbb
pop
seto
hlt
dec
test
mov
inc
push
hlt
jbe,pn
rcrl
dec
adc
add
jmp
js
dec
add
jp
or
cmp
hlt
idiv
repz
je
pop
mov
push
ficompl
add
pop
adc
sbb
aad
out
xor
jge
jmp
push
mov
pop
mov
ljmp
fidivrs
pop
or
push
pop
jnp
int3
test
push
cwtl
in
mov
sub
dec
popf
dec
lock
inc
fimull
sub
adc
out
pushf
lcall
sbb
fsts
lods
movl
jae
stc
dec
add
pop
aaa
add
in
mov
es
jl
iret
xor
and
mov
dec
arpl
mov
mov
outsb
out
sub
out
dec
rcrl
loop
insb
dec
xchg
call
loopne
xchg
je
xchg
inc
je
pop
mov
sbb
push
outsb
cld
addr16
mov
pmaxsw
mov
jno
mov
pusha
fstl
sbb
mov
sub
in
xchg
and
dec
cmpsb
loopne
scas
sbb
add
xchg
lahf
fbstp
mov
sbb
jno
or
mov
mov
and
cmp
push
cmpsb
out
dec
orl
adc
ljmp
push
mov
pop
movsb
insl
rorb
daa
movsb
mov
lock
pop
pop
imul
repnz
mov
sar
sbb
arpl
dec
mov
test
xchg
mov
ret
push
loop
fstpt
mov
lods
push
js
mov
pop
adc
push
dec
or
xor
notb
mov
push
idivl
lret
sbb
cli
add
fwait
mov
mulb
ds
lds
fistps
cmp
add
lret
dec
cmp
jns
lds
and
inc
fiaddl
fidivl
rolb
jle
in
jae
out
mov
cli
mov
scas
add
sbb
add
jg
fsubs
in
les
fstpl
lcall
sahf
cmc
inc
sbb
adc
dec
aad
dec
fsubl
or
bnd
push
shlb
push
aam
test
and
mov
or
mov
test
adc
fisubs
in
add
mov
xor
push
cld
dec
gs
pop
xchg
push
dec
int3
push
mov
xchg
add
mov
out
and
scas
std
idiv
pop
enter
js
ds
das
xlat
pushf
push
jp
pop
repz
test
mov
push
sub
sub
sub
adc
pushf
in
and
jne
push
movsb
cld
push
jno
push
and
or
push
mov
dec
scas
dec
test
mov
icebp
xchg
fimull
in
and
xor
push
scas
push
lock
jecxz,pn
sbb
mov
ss
xlat
and
out
inc
je
imul
loopne
push
int
orl
xchg
sbb
xor
lret
icebp
dec
bound
or
push
bound
test
cld
fisttpll
xchg
popf
leave
jmp
sub
mov
aam
xchg
in
imul
jg
mov
sub
cwtl
and
ret
jb
mov
adc
pop
jnp
je
incl
inc
inc
fdivr
add
test
xor
jb
mov
mov
push
xor
mov
xor
ja
rclb
fldcw
sub
stos
lahf
jmp
test
ffree
push
gs
mov
mov
mov
inc
faddl
add
sbb
mov
fildll
incb
mov
sub
ja
mov
int3
mov
pushf
cmp
pop
mov
es
sahf
inc
adc
inc
sub
adc
xchg
jb
adc
adc
adc
inc
fiadds
dec
popa
jae
popa
fbld
fisubs
popf
aad
cmp
jg
xor
rcr
lods
mov
dec
mov
cmp
jle
mov
repnz
lock
sub
mov
sarl
pop
mov
fimull
aas
xor
outsb
sub
jmp
shll
popf
jns
cltd
ud2
mov
mov
mov
addb
enter
stos
adc
push
in
inc
fistps
aam
sar
inc
int
inc
jne
cli
adc
pop
call
cmpsl
jg
dec
lods
cmp
cli
inc
leave
sti
mov
mov
call
jg
lods
jae
xor
ret
stos
cli
or
mov
into
add
push
jb
jno
shll
out
inc
cmp
cmp
jl
xchg
in
xlat
scas
push
scas
out
bound
push
cli
iret
sub
mov
pop
fwait
cld
pop
addr16
jb
push
sbb
adc
jae
xchg
dec
mov
or
dec
sub
sub
mov
fsubl
in
insl
mov
cld
mov
rol
jge
xchg
or
and
and
aaa
or
and
or
dec
push
fcmovnbe
xsha1
cmpsb
iret
mov
mov
jecxz
subb
sub
xchg
out
ret
jecxz
push
stc
inc
jo
push
sbb
xor
xchg
daa
push
xchg
push
push
in
or
imul
lock
in
aaa
test
or
test
dec
adc
push
iret
aad
test
push
mov
loope
mov
mov
add
popf
decl
jae
push
cmp
pusha
mov
stos
nop
or
ja
mov
mov
adc
pcmpgtb
setne
push
fidivl
out
inc
push
sarb
pop
and
rorl
bound
enter
xor
mov
cmp
daa
inc
adc
inc
inc
adc
inc
enter
or
je
sbb
into
add
mov
lret
jecxz
and
pusha
lea
fidivrs
pushf
add
cmp
fmuls
movl
adc
lods
pusha
andb
ds
add
mov
pop
insb
adc
test
add
mov
lds
ja
sbb
out
lahf
and
sbb
int3
gs
xor
or
int
addr16
fdiv
scas
pusha
jo
or
test
lea
lcall
loop
pusha
jmp
cmp
sbb
xor
stos
push
xor
cmp
jo
insl
jno,pt
dec
mov
ret
dec
xchg
add
in
imul
daa
or
adc
and
je
insb
sahf
fldl
fwait
ja
ja
fisttpll
andb
sahf
pusha
add
rorl
add
push
cmp
ljmp
fldt
mov
push
out
xor
sub
aaa
cmp
mov
jg
adc
pop
add
jp
fdivl
ja
stc
sbb
push
pop
jg
insl
dec
mov
xchg
das
xor
fadds
cmp
lcall
pop
mov
mov
mov
imul
pop
outsb
sbb
ret
je
loop
and
test
mov
mov
pop
and
cld
testb
cmp
cmp
cmovnp
outsl
and
or
inc
inc
aas
inc
sbb
mov
mov
data16
ljmp
mov
jge
add
ret
xchg
mov
mov
push
ljmp
and
mov
jmp
movsb
add
scas
shrl
ret
mov
sbb
xchg
or
icebp
leave
fcompl
cmp
pop
lock
pop
movsl
aad
cmp
mov
xor
mov
cmp
sub
rcrl
sub
cmp
xor
rcl
add
adc
cmc
pushf
in
mov
subb
sbb
sbb
dec
push
negb
adc
inc
sub
aaa
addb
adc
aam
addr16
iret
fimuls
dec
xor
cmp
sti
jle
cmpsb
mov
cli
push
sbb
sub
ds
leave
sub
sti
cltd
add
stos
in
insb
add
pop
xchg
dec
xcrypt-cfb
cmpsl
pusha
iret
cli
aam
lods
fidivl
repnz
mov
aaa
add
sbb
xchg
jmp
inc
mov
sarl
sbb
jmp
sub
xor
ja
sbb
adc
mov
test
ret
lea
mov
stos
push
cltd
xor
in
rcrl
and
sbb
rcr
cltd
les
mov
shlb
inc
mov
out
leave
or
adc
mov
in
sub
jmp
mov
adc
daa
and
mov
sar
rorl
lea
push
jbe
and
mov
js
xchg
lods
enter
data16
ja
rcll
cmp
pop
adcb
mov
pop
repnz
dec
shlb
jbe
nop
ss
gs
lcall
adc
jg
jbe
rorb
xchg
sbb
xor
test
cmp
lods
jmp
pop
inc
ret
fucomi
mov
pusha
cmp
and
mov
push
iret
pop
xchg
fadds
xchg
inc
mov
and
mov
dec
pop
push
rorl
push
in
push
rcll
insb
testl
adc
xchg
jg
pop
mov
xchg
fsubl
test
scas
pop
test
mov
mov
ss
jmp
popa
adc
mov
and
jge
lock
mov
mov
jns
outsl
or
pop
adc
in
sub
xor
cld
shl
mov
xchg
adc
jnp
cmp
ficoms
push
out
sbb
pop
jbe
addr16
mov
shrl
lcall
mov
inc
xchg
jecxz
cmp
arpl
lock
inc
inc
out
je
cmc
and
sbb
aam
mov
mov
pop
sbb
inc
testb
push
cmp
out
mov
out
icebp
jp
xchg
xchg
add
dec
repnz
fisubs
mov
xchg
sbb
and
adc
leave
push
jo
mov
xor
or
or
mov
xchg
adc
movl
fldcw
daa
dec
sahf
or
aam
aas
mov
mov
addr16
addr16
mov
scas
popf
pop
ja
and
dec
push
test
mov
ret
add
jge
hlt
shlb
pop
test
dec
int3
lods
pushf
sbb
mov
xor
scas
mov
add
dec
dec
mov
int
out
clc
in
jae
pop
inc
mov
aas
addr16
into
cmp
and
jb
xor
xchg
push
inc
loop
xor
dec
mov
sub
fs
jns
imul
jo
loope
add
loopne
adc
fcoml
push
das
lods
xor
xor
daa
mov
jg
cmp
stos
sub
sbb
cmp
mov
cld
mov
nop
js
movsb
icebp
out
mov
movsl
loopne
dec
xchg
rcll
push
or
xchg
add
pusha
dec
adc
mov
popf
nop
mov
notb
cmc
mov
mov
jne
cmp
je
inc
lods
push
mov
mov
add
loope
jle
adc
pop
stc
into
loope
shrb
sbb
mov
cmc
pop
push
lcall
int
inc
cmp
ret
in
or
aas
or
mov
jnp
pop
outsb
pusha
mov
ds
lock
icebp
daa
mov
adc
push
lcall
in
cmp
sbb
enter
add
loopne
fwait
outsb
int3
inc
das
add
movl
into
adc
add
xchg
cmp
inc
mov
pop
mov
mov
repnz
aad
mov
stos
fnstsw
xchg
mov
adc
xor
out
inc
sbb
cmpsb
push
add
push
nop
mov
inc
aam
mov
insb
pop
in
iret
je
movsb
cli
jbe
push
and
shrl
cmp
or
adc
outsl
inc
cmpsl
cmpsl
leave
fdivp
es
xor
or
push
lds
stc
pop
jno
push
pop
test
add
cmp
and
mov
out
push
mov
mov
outsl
mov
pop
inc
pop
aaa
icebp
mov
mov
sub
call
push
cmp
aas
js,pt
jmp
loop
imul
iret
inc
imull
sub
pusha
fiadds
stos
xchg
jno
mov
scas
ja
in
xchg
xor
cltd
roll
add
jno
lret
enter
aam
imul
cmp
fistps
lods
pop
dec
icebp
pop
pop
mov
adc
test
xor
xchg
repnz
cmc
inc
iret
outsb
jns
in
mov
adc
push
cwtl
lret
loop
les
popa
adc
addr16
push
mov
inc
add
dec
outsl
ret
xchg
fldl
or
addb
pop
leave
ret
mov
in
jp
xchg
cmp
inc
and
cmp
fcmovnu
mov
lock
sub
sahf
lahf
xlat
popa
sbb
lods
pop
icebp
loopne
or
mov
jbe
bound
mov
clc
pusha
stos
push
pop
jle
je
cmp
mov
add
xchg
roll
kmovb
push
xchg
fwait
pop
shlb
xchg
in
test
sbb
inc
in
flds
cwtl
mov
aad
imul
pop
leave
sub
and
mov
jne
pop
repnz
xchg
mov
adc
cmpsl
adc
mov
dec
pop
jge
fimull
sbb
loope
push
push
mov
push
jo
xor
mov
std
outsb
pop
mov
out
pushf
fdivrl
clc
lds
stc
xor
lock
sbb
call
inc
in
inc
jl
or
scas
es
mov
test
mov
dec
push
jecxz
pop
adc
mov
or
push
jne
jmp
add
adc
aaa
call
lods
andb
mov
sbb
je
shrl
incb
enter
rolb
lods
mov
paddusw
add
mov
std
rcl
jmp
mov
in
cmp
cmp
gs
push
lods
push
cs
lcall
js
outsb
fwait
je
xchg
addr16
xor
mov
and
xor
push
cmp
cmp
adc
leave
shrb
icebp
stos
test
dec
adc
fadds
es
loope
mov
cmp
sbb
push
daa
shll
fsts
push
int
fdiv
movl
xor
mov
out
sub
mov
xchg
insb
mov
rcrb
scas
mov
xor
and
ja
popa
lds
mov
xchg
cmpsl
movl
shll
nop
mov
jmp
in
sub
or
cmp
mov
jmp
das
stos
mov
dec
sbb
xchg
rcrb
mov
mov
push
js
mov
xchg
cs
imul
mull
pop
enter
or
push
xchg
fs
or
push
test
outsb
xlat
cmp
in
mov
flds
cmpsb
xchg
stc
int3
cmp
lret
nop
mov
adc
and
aam
fdivrs
push
xchg
adc
or
jbe
xor
insl
icebp
inc
or
mov
xor
shlb
test
or
lret
mov
mov
rolb
cmp
jmp
sbbb
dec
lds
push
cmpsl
in
mov
sbb
mov
mov
adc
adc
call
sarb
xor
mov
push
xor
popa
or
mov
imul
jno
nop
enter
cltd
ret
aad
jg
push
add
inc
arpl
pop
cmpl
popf
in
mov
inc
pushf
lods
pop
jbe
mov
jb
push
imul
add
pop
sbb
jno
cmpb
jb
mov
sar
movzbl
in
pop
mov
and
inc
dec
push
icebp
push
or
xchg
rorl
rcrl
test
js
and
loopne
aad
fcoms
rolb
into
ja
int
out
pop
xlat
pop
push
xor
pop
add
pop
push
mov
jns
rclb
pop
nop
fcmovnu
cli
jno
lret
daa
adc
or
hlt
std
fidivrs
jle
xchg
inc
cmp
mov
push
inc
loope
repz
mov
rcl
adc
push
jge
es
rorb
cmp
mov
mov
mov
mov
push
outsl
es
inc
xor
inc
inc
je
add
dec
scas
sub
cmp
je
jle
or
test
jg
fadds
push
testb
ret
out
scas
cmc
das
mov
pop
xor
ficompl
out
sbbb
shrb
or
pop
cmpl
lea
movsb
lret
xor
add
push
pop
push
call
icebp
add
pop
dec
sti
aam
xchg
xorb
sub
inc
mov
loopne
or
aas
cmc
subl
mov
mov
adc
pushf
cmp
or
out
hlt
cwtl
push
cmp
mov
in
mov
iret
testl
test
pop
add
xchg
mov
stos
out
mov
fs
js
cld
lock
pusha
mov
inc
pushf
push
lret
cmc
fs
mul
into
lret
movnti
shrb
adc
outsb
insb
pop
mov
inc
cwtl
test
movsb
je
loop
clc
or
fistpll
mov
aad
addb
test
cwtl
test
pop
aas
lret
incb
xor
pop
push
out
dec
pushl
rorl
mov
sbb
xor
fimull
in
mov
in
inc
in
sbb
rcl
outsl
loope
pop
xchg
call
and
outsl
push
add
addr16
jnp
pusha
inc
pop
dec
fstpt
movsl
inc
sub
push
cmp
and
inc
test
pusha
jae
or
cmp
mov
push
mov
xlat
cmp
bound
das
jb
test
inc
movsb
jns
subb
and
jecxz
xor
mov
mov
add
mov
mov
les
std
mov
divb
inc
sahf
das
jnp
fs
sub
fistpll
movsl
data16
test
loopne
xchg
xchg
aas
loop
rorl
test
push
pop
fisubl
xchg
inc
jns
push
repnz
and
fimuls
aas
jecxz
popf
sbb
add
xchg
testl
jl
push
orl
xchg
cld
in
sbb
nop
ret
popf
push
add
ja
xchg
loope
int3
mov
sub
cld
fildll
hlt
movsb
fsubrs
int3
or
cli
out
dec
loope
sbb
in
int
gs
mov
push
xor
add
add
xor
and
sub
shl
xchg
rolb
adc
cli
xlat
nop
insl
jle
mov
imul
lods
sub
cmp
aas
js
dec
sahf
pushf
cmp
jbe
jge
push
push
idiv
pop
push
or
in
cmpsb
mov
idivl
pop
mov
push
mov
dec
repnz
jno
cmp
mov
sub
jmp
aas
push
dec
pop
jns
in
pop
jmp
or
mov
fisttpll
popf
dec
and
or
sarb
cld
lret
push
cmp
xchg
clc
repnz
int
add
nop
mov
aam
fcmovnb
imull
xor
mov
pop
vpcmpgtd
test
lret
out
sbb
movsl
jns
push
dec
xor
lea
mov
add
jnp
mov
mov
dec
popf
and
iret
add
fs
inc
inc
loop
or
icebp
ds
jp
cmpsb
jo
mov
or
mov
jecxz
ljmp
inc
scas
xlat
mov
mov
imul
sub
cmp
mov
add
js
les
js
stos
movl
out
xchg
addl
nop
icebp
pop
ror
cs
mov
adc
popa
mov
cs
pop
dec
into
sub
add
mov
mov
jae
cmpsb
sarl
push
fsubr
fwait
outsl
adc
jmp
pop
or
push
dec
mov
aas
jnp
xchg
pop
xor
mov
jp
mov
xchg
pop
push
push
mov
scas
imul
jecxz
imul
dec
sbb
mov
std
jle
inc
ljmp
or
jg
pop
pop
pop
add
sub
pop
in
cmp
or
lds
andl
ss
jb
cmc
fcompl
movl
stc
add
sub
insb
xchg
lock
pop
subl
imul
jp
xchg
cmp
ds
pushf
sbb
mov
sbb
add
cld
jbe
mov
loopne
and
cmp
js
andl
push
xchg
fmuls
add
sub
loope
sbb
rcll
and
cmpb
sbb
ja
mov
aam
dec
clc
pop
mov
cmp
int
sarl
sbb
sbb
rcrb
std
xchg
pop
mov
mov
cmpsb
inc
test
das
orl
sub
sub
push
sbb
add
in
mov
gs
dec
adc
adc
fbstp
xchg
popf
ret
int3
scas
jne
sahf
push
push
sub
sub
xchg
sub
xchg
dec
test
shlb
int3
cli
cmp
xchg
xor
aas
es
cmp
pop
das
jns
cmp
movsl
cmp
arpl
pop
mov
hlt
mov
subl
std
inc
xchg
imul
shl
shl
push
or
cwtl
test
sarl
sub
sti
pop
stos
ja
sbb
sub
jno
mov
xchg
rorl
mov
stc
loope
inc
movsb
in
sub
in
mov
movlhps
mov
pop
jno
stos
xchg
pop
lret
lahf
or
jl
mov
push
add
jg
sbb
mov
rorb
xchg
inc
xchg
adc
mov
cmp
fidivs
lret
shl
adc
jb
and
sbb
shl
mov
es
sbbb
jmp
adc
lock
fldcw
js
enter
xor
loopne
lds
out
hlt
push
je
jge
push
mov
add
jl
cmp
mov
mov
ja
std
pop
je
inc
push
das
ja
test
les
inc
inc
add
xchg
repnz
adc
ret
xor
mov
fnstcw
out
sbb
pop
cld
mov
jo
leave
mov
dec
jmp
lods
push
adc
inc
mov
aaa
sbb
aad
push
aas
outsb
pushf
pop
mov
push
xor
sub
ret
insb
call
aam
mov
cmp
sbb
fs
das
inc
cmp
fiadds
adc
adc
test
push
aad
push
or
push
cmp
adc
shl
pusha
aaa
adc
mov
scas
mov
sahf
fst
ljmp
shl
aaa
mov
add
mov
fidivl
push
mov
cmp
inc
jnp
fcomi
jmp
jp
xor
mov
sub
mov
testb
push
push
xchg
and
int
and
cli
adc
inc
es
push
scas
arpl
cltd
lcall
push
push
xor
subb
adc
les
scas
rolb
sbb
fdecstp
sbb
out
daa
and
push
lods
mov
add
inc
out
and
cltd
loopne
jp
push
imul
adc
insl
cmp
test
shll
movsb
subb
sbb
jb
push
mov
inc
mov
shlb
test
push
mov
and
xor
pop
mov
mov
loopne
push
push
icebp
jp
or
or
sbb
push
test
inc
std
pop
fld
dec
pop
icebp
fnstsw
jle
data16
roll
mov
lea
jns
adc
or
xchg
notl
cmpsb
ret
cltd
mov
loopne
fcoml
push
pop
push
cmp
mov
sbbb
and
mov
sub
popf
sbbb
leave
rclb
clc
and
jo
hlt
xor
push
in
sbb
pop
bound
inc
daa
movsl
pop
es
xchg
out
mov
repz
sbb
jl
out
icebp
inc
dec
mov
mov
xchg
iret
jecxz
jno
and
out
lock
and
gs
test
sahf
adc
cmp
js
in
mov
out
mov
fistpll
std
cld
xor
xor
jmp
jecxz
es
jge
repnz
repnz
in
scas
addl
xchg
rolb
xchg
pop
jnp
dec
sub
lock
ds
inc
out
aam
lret
push
jecxz
rorb
xchg
aam
cmp
out
movsl
jns
js
pop
lods
pop
add
hlt
dec
push
cmp
add
push
fcoms
mov
mov
ficompl
mov
int3
scas
fildl
pushf
sbb
mov
int3
mov
int3
ja
leave
lods
movsl
xchg
xchg
aad
dec
addr16
xor
data16
dec
scas
stos
dec
movups
scas
inc
subb
std
jbe
inc
sub
xchg
js
push
sub
pop
ds
sbb
leave
cmp
or
insb
sbb
push
test
je
or
cmpsl
xor
jl
aaa
jb
fisubrs
inc
fcompl
inc
das
inc
sub
mov
ja
sbb
leave
fisubrs
ja
or
push
insb
jg
in
xchg
mov
addr16
das
or
pop
jmp
push
sub
adc
or
es
mov
mov
call
sbb
xchg
push
sarl
xor
mov
lds
pushf
fmull
inc
lock
sbb
jmp
ljmp
add
lea
mov
and
add
rclb
jge
sub
fcmovnu
imul
mov
jae
xor
fistps
enter
xor
push
cmp
out
add
jns
stos
mov
adc
cli
popf
repz
jp
add
mov
int3
aas
cmc
pop
fsubrs
addr16
and
lret
call
test
sti
sbb
jne
adc
out
mov
push
jp
inc
jb
scas
push
fidivrs
inc
add
fwait
push
out
pop
out
add
mov
push
dec
fiaddl
xor
lret
nop
dec
loopne
sub
rclb
movsb
mov
leave
in
xor
cwtl
cmp
cmp
out
femms
push
test
pop
adc
rcrl
test
out
mov
cmpsb
clc
push
ret
enter
scas
outsb
adc
fnstenv
repnz
outsl
insb
into
ror
imul
cmpsb
mov
cs
adc
popa
out
push
inc
cltd
mov
mov
xchg
loope
push
sarl
daa
movsl
lret
sahf
add
inc
addl
jbe
bound
pop
fcoms
lahf
dec
push
add
aad
dec
ljmp
insl
adc
sub
inc
fwait
lret
test
inc
and
and
xchg
xchg
or
dec
fstps
shrl
pop
mov
mov
push
sub
out
lcall
in
into
mov
mov
mov
cmp
pusha
jge
sub
mov
push
mov
pop
js
sub
inc
sub
mov
sbbl
lret
cmc
xchg
stos
out
jg
loop
dec
ja
in
les
dec
lock
jmp
jae
insl
xor
fs
jns
insb
mov
push
imul
sbb
mov
mov
pop
inc
or
push
push
dec
xchg
cmc
cwtl
fwait
cmp
mov
lea
push
mov
ret
xor
cli
sti
add
and
xor
jb
movsl
popa
loop,pn
loope
out
mov
cmp
je
lahf
mov
ja
push
cmpsb
imul
xchg
adc
sbb
mov
pop
clc
xchg
xor
sub
movsl
into
popa
jb
push
call
pop
sbb
push
cs
adc
jae
out
jecxz
push
data16
iret
push
decb
add
mov
mov
hlt
jne
inc
movsl
or
sahf
mov
rcr
pop
pushf
push
sbb
out
sub
mov
out
shll
dec
mov
mov
adc
repnz
xor
sbb
into
mov
fwait
adc
push
ror
daa
clc
mov
or
push
clc
pusha
movsl
scas
cmp
xor
jne
jo
int
pushf
push
sub
std
jo
push
aad
cmp
scas
add
sub
stos
mov
pop
ficoml
jne
iret
and
mov
roll
in
scas
cmp
xchg
mov
sub
pop
cli
mov
cli
daa
rcrb
fsubrl
fstps
lahf
lcall
sub
xor
dec
jge
or
addl
and
pop
xchg
fsubl
mov
ficomps
je
add
sub
adc
lret
cs
jbe
loopne
inc
cmpsl
xchg
mov
push
add
pop
fsub
xchg
mov
out
mov
push
inc
add
shlb
in
inc
imul
dec
cli
and
idiv
shrb
dec
dec
and
dec
inc
inc
inc
adc
xor
test
fsub
inc
fdivrs
xlat
rcll
sub
sahf
leave
scas
repnz
mov
shll
daa
test
xchg
ficompl
mov
jl
lock
ret
sbb
sbb
inc
lea
lea
repz
std
fdiv
fnsave
pop
mov
push
std
testl
lods
stc
jp
outsb
sbb
push
jae
or
dec
and
enter
int3
pop
int3
sti
cli
xor
mov
inc
int3
add
pusha
and
add
insb
xor
and
mov
dec
pop
les
add
loopne
std
js
push
enter
xchg
out
lock
sahf
sub
mov
push
test
xchg
je
push
flds
mul
lcall
mov
xor
cmp
ret
adc
fbld
shr
movsb
filds
mov
mov
out
pushf
icebp
dec
lcall
adc
mov
dec
fnstsw
andb
pminsw
insb
inc
xor
or
mov
jg
dec
inc
push
xchg
das
jecxz
adc
xor
mov
inc
lret
push
mov
dec
sahf
repnz
push
in
inc
mov
sub
into
cmp
sbb
xchg
imul
jbe
fwait
nop
push
aad
push
sub
and
fsubl
imul
subl
gs
and
ja
push
inc
inc
push
js
push
repz
adc
imul
insl
mov
xlat
xlat
mov
sbb
cli
inc
add
imul
push
pop
jge
mov
xchg
xchg
inc
adc
mov
pop
inc
lret
shlb
stos
adc
inc
dec
jle
or
ja
xor
and
add
inc
mov
iret
sbb
inc
jne
add
add
ret
repnz
pop
push
int
shl
or
stos
popf
sub
jnp
mov
data16
pushf
and
jp
stos
test
stc
push
pop
pop
dec
or
mov
aas
push
fwait
push
inc
dec
loop
xor
mov
repz
sahf
cmc
mov
fucomp
fs
sbb
cmp
loopne
jbe
adc
ljmp
mov
xor
lret
daa
je
adc
leave
insb
cli
mov
push
add
and
push
mov
fwait
cmp
rcll
fwait
sbb
ficoml
daa
test
iret
and
mov
fcmovbe
shrl
cmpsb
sbb
add
insl
out
rol
add
sub
sbb
ss
sbb
dec
out
enter
adc
xchg
movsb
mov
jl
out
movsb
shlb
push
call
sti
ljmp
sub
inc
test
lods
outsl
cmp
daa
shll
and
cld
push
popf
xor
mov
xchg
dec
or
movsb
pop
jo
dec
subl
jge
xchg
lds
ja
push
sub
pop
inc
fwait
sub
and
cmc
inc
les
inc
mulps
add
cmp
je
imul
lds
fiadds
loop
xchg
dec
in
pop
jbe
jg
scas
hlt
ss
push
inc
inc
dec
lea
aad
int
adc
std
add
sbb
lret
push
cs
clc
add
jnp
cmp
loope
fs
adc
inc
int
call
es
mov
sbb
pop
pop
push
daa
cld
jl
mov
add
pop
xorl
testl
jo
std
adc
sbb
cmp
aaa
in
inc
push
fistl
clc
aaa
jb
cmp
sub
fld1
mov
call
xlat
adcl
jge
cmpsl
sub
sbbb
xchg
andl
push
adc
cmp
ss
popa
or
imul
repnz
aaa
imull
fcoml
subl
fstpt
out
inc
sbb
test
cmp
outsl
addr16
cwtl
jg
dec
mov
cld
in
ss
or
sbb
outsl
adc
cli
mov
xchg
xchg
pop
or
imul
or
or
mov
mov
pop
sbb
arpl
rclb
mov
loop
js
popf
cwtl
mov
stos
int3
cmp
mov
pop
gs
mov
mov
es
int
xor
ret
daa
orl
int3
add
adc
and
clc
test
mov
mov
add
dec
call
lahf
mov
gs
cld
adc
jp
or
mov
fistl
and
add
push
ret
fistpl
dec
enter
insl
jae
cmp
mov
mov
in
pop
nop
or
inc
imul
nop
xor
cltd
push
aad
clc
dec
cltd
scas
push
pusha
push
int
and
xor
jmp
fisubs
push
mov
pop
enter
lods
xor
aam
dec
sbb
and
enter
jle
cmp
nop
xchg
sbb
jg
dec
or
and
inc
popf
lret
xchg
test
in
xor
add
aaa
cmc
push
pause
pop
je
insl
movsb
test
and
test
xor
mov
mov
pop
mov
pop
push
jle
dec
pop
lods
add
lods
dec
inc
mov
push
pop
test
out
lret
aas
cld
mov
gs
pusha
push
dec
pop
pop
lahf
adc
xchg
shll
aaa
js
mov
xchg
pop
adc
cmp
jnp
idivb
ficoml
jmp
cmp
ss
mov
arpl
mov
outsb
adc
jns
jge
mov
jp
xor
add
add
lahf
mov
sahf
push
shlb
ja
mov
push
cmc
pop
add
pop
mov
rol
cmp
out
rol
in
mov
mov
inc
push
sub
das
xor
test
repz
call
lock
mov
lods
mov
push
xchg
dec
les
pop
ja
cmpb
in
adc
movsb
jno
dec
adc
xchg
repz
mov
inc
mov
push
lcall
sbb
outsl
out
incb
sahf
and
ficomps
sub
adc
xchg
push
jmp
pop
jecxz
stos
sbb
adc
lcall
or
mov
repz
sbbl
insb
test
std
jg
lods
pop
out
inc
cmp
xchg
xchg
aad
push
enter
pop
xchg
in
sbb
movsb
fistpl
mov
push
mov
and
repz
aas
in
xchg
lret
lgs
push
jb
hlt
jle
xor
and
dec
fnstcw
dec
mov
scas
lea
mov
out
sbb
out
sbb
cmp
push
cld
call
sbb
sub
sbb
dec
sahf
jne
mov
or
cmpsb
inc
sbb
or
call
push
dec
jl
push
sbb
int3
std
ljmp
or
mov
mov
mov
inc
scas
xchg
add
sbb
mov
orb
pop
cmp
xor
aad
cmc
push
xchg
pop
xor
ret
out
xchg
cmp
repz
mov
pop
stos
push
mov
xor
je
xchg
clc
popa
adc
mov
dec
pop
add
out
stos
jo
gs
jnp
mov
stos
xchg
pop
sub
inc
aaa
mov
sbb
movsl
mov
push
aas
push
mov
loop
pop
push
clc
mov
dec
jmp
pop
jo
inc
pop
and
sbb
xchg
or
xchg
xor
es
xor
push
push
inc
ficompl
mov
sbb
and
jl
pop
aad
in
stos
sub
pop
loop
arpl
lea
jecxz
mov
imull
jmp
or
icebp
sbb
add
xor
fnstsw
aam
repnz
mov
imul
cmp
adc
adc
fmull
cmp
or
scas
and
pushf
add
mov
cmp
daa
out
movsl
cltd
insl
mov
out
cmc
push
push
mov
sbb
jecxz
jb
into
jbe
sahf
fnsave
popa
out
in
bound
shrl
xor
mov
andb
scas
arpl
inc
out
icebp
fsubrs
lcall
cmpsl
in
lea
jecxz
gs
adc
jg
adcl
dec
add
mov
sbb
xor
fistps
sahf
cltd
stos
jmp
push
xchg
sbb
and
mov
lods
xchg
pop
fnstcw
repnz
dec
mov
mov
cmp
lds
xchg
cmpsl
mov
ja
pop
sub
sti
aas
jp
cmp
in
notb
movsb
cmp
dec
mulb
leave
std
dec
mov
in
lds
loope
or
push
jne
or
xchg
mov
pop
sahf
sbb
arpl
out
fidivl
mov
test
xchg
cmp
xchg
scas
sbbb
cs
push
lahf
pop
xchg
add
jno
cmpsl
dec
mov
fdivl
mov
inc
mov
sbbb
out
jnp
cmpsl
xor
push
loop
pop
scas
push
aam
sbb
or
popf
repnz
jns
mov
fsub
mov
scas
jne
dec
cmp
in
sbb
test
lret
ret
sbb
add
int
push
dec
lahf
mov
into
fmull
in
std
jl
add
clc
add
and
int3
push
pusha
ficompl
enterw
adcb
pop
imul
scas
ljmp
sbb
dec
lock
mov
ret
inc
mov
pop
pop
ret
push
repnz
jno
fdivl
mov
pusha
scas
in
push
jl
das
lock
mov
scas
xor
clc
mov
adc
int
pop
sub
mov
fildl
sbb
push
or
je
add
mov
loopne
dec
jg
mov
sbb
push
push
sbb
sbb
lcall
in
ja
insl
popa
cmp
out
outsb
ret
mov
mov
arpl
xor
jnp
fdivrl
jl
push
aas
sbb
sahf
fnstcw
adc
mov
lods
je
sbb
mov
rcrl
lret
ljmp
arpl
sbb
xchg
pushf
les
mov
jp
scas
jne
sbb
test
or
or
mov
call
mov
leave
aas
jb
shrl
push
out
outsl
shrb
aad
repz
aam
insl
xchg
rorb
das
push
in
fmull
fisubl
adc
cmpsl
or
dec
cmpsl
sarl
mov
ja
lock
lret
rcr
adc
mov
dec
xchg
mov
dec
nop
mov
fidivrs
dec
out
mov
fstpt
repnz
jbe
jecxz
add
outsb
cmp
std
js
push
mov
inc
inc
and
stos
pusha
cmp
outsl
adc
fldenv
rolb
sbb
xchg
cmc
stc
or
sarl
adc
mov
xchg
mov
mov
xchg
cli
popf
cs
ljmp
jbe
adc
sahf
dec
push
sar
adcl
push
mov
add
adc
and
test
jle
loopne
addr16
cmp
std
cltd
inc
jae
fbld
out
and
arpl
sti
mov
mov
and
cld
jbe
pop
icebp
and
test
nop
imul
and
adc
push
xor
dec
push
pop
inc
adc
or
cltd
out
mov
mov
jbe
inc
repz
mov
xor
push
outsl
push
jl
shrl
in
std
add
lods
dec
and
sub
movb
sbb
lcall
rcll
sub
jg
mov
pop
sbb
mov
cmp
add
jns
mov
fs
pop
adc
pop
mov
ffree
inc
ret
xor
sub
cmpsb
sub
cltd
pop
mov
xchg
cltd
fcompl
mov
and
test
sbb
repnz
mov
mov
jnp
jg
dec
xlat
inc
shl
inc
cld
fsubrl
aam
mov
je
daa
cltd
gs
push
xchg
mov
pause
inc
leave
std
imull
in
push
sbb
jns
mov
mov
jo
and
jbe
fiaddl
jno
cmp
insl
js
repz
daa
out
xor
xor
arpl
cmp
jo
mov
inc
dec
jp
lcall
enter
mov
inc
fimuls
xor
leave
insb
jno
cmp
dec
xorl
aad
sbb
sbb
nop
xchg
sbb
lods
fmul
xchg
or
sarl
aad
jns
outsl
jmp
js
jg
sbb
dec
xchg
mov
and
pop
je
cwtl
xchg
std
fs
sahf
adc
xlat
ret
jns
cvtdq2ps
mov
dec
and
mov
xchg
push
je
movsb
mov
cmp
xchg
mov
fisttpl
mov
orb
push
sub
and
mov
dec
jle
es
sti
ror
jne
outsl
jbe
adc
inc
or
add
jb
cs
cmp
arpl
ss
mov
sbb
imul
xorb
mov
cs
sarb
push
dec
xchg
cmp
daa
jle
pop
push
xor
repz
push
xchg
push
push
ja
repz
mov
sahf
and
or
mov
xchg
push
dec
cmpb
cli
je
das
int3
cmp
mov
cmp
call
xchg
inc
add
jge
out
sub
sbb
or
out
and
sub
mov
iret
push
sti
les
dec
sbb
cltd
repnz
and
in
add
mov
scas
adc
into
xor
or
adc
mov
or
rcll
jg
mov
and
mov
fwait
xor
jge
fidivl
jmp
jmp
outsb
fidivs
inc
sbbb
or
ret
sbb
xchg
ljmp
std
dec
dec
sbb
jge
xchg
mov
jo
lods
jg
je
leave
mov
dec
ds
imul
clc
cs
scas
pop
mov
out
cmp
incl
sub
push
repz
jae
push
iret
stos
fldt
cwtl
mov
jle
orb
lahf
in
pop
dec
inc
fwait
cli
and
iret
pop
mov
pusha
sub
or
push
pop
xchg
sbb
jb
adc
add
add
icebp
mov
add
inc
push
mov
pop
mov
sub
pusha
jmp
in
outsb
ds
imul
xorb
cs
stc
xchg
or
dec
imul
jmp
jnp
xlat
sub
addr16
push
mov
pop
jb
ja
jecxz
scas
js
jnp
call
insb
mov
sub
ficoml
aad
mov
rcrl
cwtl
negb
dec
fdivrs
addl
sbb
jne
cli
push
es
icebp
pusha
mov
mov
adc
xor
scas
sub
fiadds
xchg
push
fwait
lcall
aaa
imul
dec
mov
cmp
hlt
int3
pop
inc
mov
push
inc
lods
sbb
leave
daa
gs
aad
mov
mov
mov
push
cwtl
jl
push
mov
lods
out
jge
fsubs
mov
shrl
mov
xchg
sub
xchg
push
shr
push
xor
push
jl
add
ja
mov
insb
xchg
ret
xlat
or
clc
cwtl
cmp
ret
repnz
cltd
ljmp
pusha
cltd
repnz
mov
es
mov
pop
mov
or
sub
xchg
in
out
push
clc
fsubrs
jmp
jae
cmpsl
sti
pop
sbb
mov
into
cltd
and
inc
jecxz
adc
lret
mov
lea
xor
mul
imul
mov
stos
aas
stos
and
push
lds
jae
push
rclb
xchg
inc
sub
xchg
add
pusha
int
cmp
adc
fdiv
dec
repz
pop
pop
lods
mov
mov
inc
cli
xchg
cli
mov
iret
punpckldq
pop
jne
adc
pushf
xor
pusha
sub
xchg
adc
pop
les
add
roll
dec
ret
ja
xor
xchg
xor
inc
adc
outsl
fdivrs
hlt
mov
xchg
aad
sbb
push
ret
mov
xor
sbb
and
iret
popa
xlat
cmp
out
das
xchg
mov
outsb
cmp
ret
mov
sub
fimuls
push
lret
fsubr
cld
fs
fwait
les
in
fisttpl
or
lock
pop
lahf
adc
cmc
sahf
cwtl
lods
lds
pusha
pop
mov
lock
adc
rorl
sub
mov
pushl
push
out
sbb
outsl
idivl
push
fchs
cwtl
dec
in
push
cmp
insb
pop
test
jge
pop
add
pop
leave
xchg
xchg
sub
or
inc
jl
cmp
cmc
sbb
pop
int3
pop
mov
mov
or
sbb
ret
and
aad
or
sub
mov
push
fcmovb
mov
stc
cmc
and
push
pop
int
repnz
mov
test
lret
push
or
js
adcl
mov
add
jne
and
int3
enter
lcall
aad
xchg
xchg
jmp
fsubl
rclb
push
mov
or
pop
push
leave
pop
pop
inc
jbe
pusha
rcrl
pop
cmpsl
ljmp
lods
iret
xor
push
sub
xchg
push
lcall
fcom
pop
aad
sub
fstpt
push
aaa
punpckhbw
fdivl
fwait
int3
lods
mov
xor
mov
xchg
leave
jno
pop
push
bound
pop
mov
mov
incl
stos
sub
mov
and
dec
adc
cmp
dec
pop
pop
test
repz
repnz
movsl
inc
push
mov
push
sub
add
push
fwait
movsb
ficomps
sub
inc
rcrb
adc
fnstcw
mov
push
mov
jp
sub
out
lock
mov
or
addl
jg
pop
or
jl
xchg
push
pop
call
and
mov
sbb
fisttpl
adcb
stc
jmp
addr16
xlat
in
sbb
aad
fmul
adc
or
sbb
push
or
out
xchg
daa
jge
shlb
sbb
fsubrp
mov
std
repz
mov
mov
fnsave
sbbb
fisttpl
adc
mov
shrl
xchg
add
jl
leave
popf
in
push
cs
cmp
dec
mov
out
stos
lds
lcall
lea
lret
test
repnz
mov
push
inc
les
dec
das
js
push
std
lds
int
out
test
xchg
loopne
push
leave
in
add
fdivrs
subl
push
xchg
das
ljmp
mov
add
mov
leave
inc
negb
sub
stos
int
push
cmp
outsl
push
movsb
in
lods
lock
mov
dec
xchg
mov
pop
shrl
sbb
sub
push
fcompl
mov
pop
and
in
insb
cld
xor
and
mov
call
mov
ss
mov
add
push
sbb
inc
into
or
and
movsl
pop
sub
outsl
xchg
mov
lods
cld
das
movsb
fstl
cli
inc
nop
and
scas
out
inc
jo
loopne
inc
pop
pop
push
adc
or
cwtl
ds
xorb
dec
test
movsl
cmp
cmpsb
jecxz
fdivrs
movsl
in
aaa
mov
je
or
mov
frstor
push
adc
cmp
cmc
in
jnp
js
aad
test
xchg
cmp
sub
and
push
adc
cmp
lea
mov
jecxz
ljmp
sub
push
movsl
push
mov
push
test
sbb
push
loopne
ljmp
clc
xor
mov
mov
mov
add
push
dec
rolb
dec
scas
icebp
xchg
jecxz
sti
mov
cmp
jo
mov
fisubs
push
shr
jg
ja
pop
xlat
sti
push
ret
fmul
jnp
push
mov
fsubl
add
cmpsl
xchg
mov
sub
gs
stos
mov
push
fwait
and
outsl
push
pop
mov
fwait
test
rolb
cltd
mov
dec
mov
repnz
push
mov
imul
int
add
adc
sbb
fimull
iret
ret
imul
pop
lahf
inc
mov
hlt
fbstp
pop
adc
sub
mov
mov
mov
test
std
sar
xchg
jle
cli
sbb
adc
aam
sub
pushl
xor
or
or
jp
jnp
addr16
xor
test
push
sbb
out
xchg
add
jp
testl
pop
hlt
sub
inc
insl
repz
jmp
push
mov
lahf
mov
pushf
jp
imul
xchg
pop
cs
data16
shr
adc
lahf
cmp
outsb
insb
and
arpl
pop
dec
and
push
cmp
rol
pop
mov
imul
jne,pt
fst
aas
int3
push
push
ss
out
lret
lea
rcrl
rclb
cs
mov
sti
push
jae
cmpsb
imul
out
xor
call
mov
out
add
pop
mov
lds
fldl
bnd
push
mul
std
dec
dec
cmp
pushf
sbb
inc
adc
cwtl
pop
aad
ja
lahf
adcb
xchg
jp
push
cmp
shll
cmpsl
jmp
push
iret
mov
inc
xchg
repnz
aam
aam
xor
stos
push
pop
inc
es
push
and
mov
jmp
ljmp
adc
fcoml
lahf
fisttps
lods
outsl
cmpsl
cmp
and
cmp
fists
fldl2e
sub
je
outsl
sbb
mov
mov
cmc
pop
sbb
cmp
push
lea
mov
sbb
and
adc
or
loop
sub
mov
aas
pop
movsb
int
shlb
pop
in
xchg
jbe
rcrb
out
loope
andb
inc
mov
jle
call
mov
jecxz
mov
pop
lods
test
sarb
cmp
cwtl
lret
cmpsb
mov
xchg
add
loope
pushf
idiv
and
xor
pop
ljmp
imul
out
sbb
xchg
repz
stos
xor
not
jl
mov
or
stos
push
jb
xor
adc
jne
add
cmp
je
arpl
mov
or
sbb
cmp
in
int
xchg
sbb
jno
inc
loop
loopne
add
popa
sbb
dec
xorb
add
lahf
and
inc
pop
sbb
stos
les
xor
xchg
std
jns
cmpsb
adc
bound
xor
cwtl
push
add
xor
adc
inc
pop
aaa
mov
mov
push
inc
subl
iret
xchg
ss
xor
out
scas
sarl
aam
sub
sub
and
sbb
js
in
pop
or
fldl
test
mov
lret
xor
dec
dec
mov
ret
cs
sbb
iret
dec
inc
jmp
pop
lds
stos
sahf
in
cli
adc
incb
push
sub
push
or
jnp
cmpsl
cmp
dec
lods
sub
addr16
mov
sub
lock
push
sub
fs
imul
out
in
loop
and
push
mov
dec
shl
xchg
subl
xchg
pushf
out
out
cmp
out
lds
test
int
mov
inc
mov
ret
sarb
xchg
outsl
test
cmpsl
mov
xchg
push
sarb
add
dec
sbb
stos
mov
cs
mov
test
push
push
into
xor
js
nop
aad
mov
mov
enter
mov
cmpb
js
mov
cmp
sub
in
lds
pop
es
pop
fs
or
adc
outsb
inc
fidivrs
dec
push
jl
add
inc
lock
and
int3
dec
enter
xor
xchg
jb
aaa
cmpsb
scas
test
and
mov
push
sbb
push
xchg
sbb
sbb
mov
and
je
xchg
mov
arpl
mov
cmp
xor
loope
adc
sbb
test
inc
loopne
dec
push
push
push
cmpsl
cmp
adc
dec
daa
add
mov
sbb
push
cltd
rcrl
orb
cmp
cli
ret
sbb
inc
test
lret
inc
inc
inc
nop
jne
addl
cmp
push
inc
xchg
mov
pop
mov
sub
sbb
push
repnz
mov
xchg
inc
mov
repz
push
rcr
mov
sub
std
xlat
jge
add
dec
cmp
dec
sub
repnz
adc
mov
sbb
sub
int
push
push
pop
xchg
cs
aad
jo
out
mov
test
int
push
jg
icebp
int
xchg
mov
inc
mov
fsubrs
aaa
push
adc
sub
inc
mov
add
cld
sbb
mov
and
pop
not
adc
lock
add
mov
sahf
xchg
mov
data16
sbb
push
lock
mov
out
pop
mov
inc
mov
mov
add
stos
cmp
test
cmp
mov
pop
xchg
cmc
jecxz
cwtl
push
rcrl
mov
arpl
push
cli
imull
je
aad
rclb
add
jmp
push
jmp
sub
bound
fcmovne
es
mov
sbb
dec
popf
jle
sbb
loop
jne
loop
outsb
pop
in
or
pop
add
xor
ljmp
mov
or
xchg
sub
cs
jnp
mov
sbb
xor
xchg
sub
movl
in
push
jnp
cli
push
xchg
mov
rolb
movsl
pop
and
push
in
or
ss
push
cmpsb
cmp
lods
in
mov
lea
dec
jnp,pt
xchg
sbb
dec
inc
fsubs
into
and
out
int3
out
pop
pop
mov
mov
and
cmp
rclb
rorl
mov
imull
adcl
sub
pop
pop
cs
adc
xchg
ja
ret
mov
stc
into
dec
sbb
or
fwait
sub
in
das
je
mov
xchg
lods
xchg
inc
inc
sahf
lds
dec
xchg
xor
fcmovnb
dec
jne
iret
icebp
inc
jle
xchg
pop
ss
gs
fwait
add
mov
bsr
xor
cmp
outsb
xchg
mov
fsts
mov
mov
jnp
shl
cs
test
dec
stos
shlb
pop
pusha
sub
lahf
fisttpll
or
into
incb
xor
mov
in
and
mov
mov
in
dec
pop
rcl
cwtl
add
mov
xchg
and
adc
aas
sahf
out
xchg
insb
dec
dec
cltd
push
fs
xchg
adc
push
sub
adc
pushf
inc
pop
mov
lahf
push
inc
sbb
fldl
cwtl
add
pop
cpuid
out
pop
ljmp
jbe
in
lcall
jle
mov
insb
clc
sub
aas
shl
mov
out
add
out
and
xchg
loop
enter
lret
sti
sub
pushf
arpl
adc
je
mov
dec
inc
in
movsl
clc
xchg
outsl
fisubs
adc
mov
scas
mov
jno
imul
out
add
fdivr
stc
mov
or
fcmovnbe
sub
sbb
jno,pt
cmpl
jns
rcrl
call
cmp
dec
in
int
adc
int
cld
ljmp
mov
xor
stos
mov
enter
cltd
inc
in
aaa
jmp
subl
les
insb
nop
sbb
dec
inc
dec
add
mov
das
xchg
mov
hlt
into
hlt
fdivs
pushf
adc
adc
adc
data16
push
ds
pop
jno
adc
ret
push
out
pop
add
imul
lds
inc
daa
repnz
in
xor
xor
cmp
fwait
dec
ret
adc
sarl
pop
push
js
sub
push
adc
or
inc
or
mov
stos
adc
call
or
push
sub
jecxz
outsl
sbb
not
jge
add
imul
inc
cmc
mov
fs
ljmp
sahf
mov
icebp
sar
cmpsb
or
loope
out
pop
xor
mov
and
push
xchg
pushf
lods
jmp
cmp
jge
pop
sbb
mov
repz
sbb
shlb
cs
mov
loop
jo
ret
js
mulps
pop
popf
fstps
lods
jno
lock
and
adc
jne
imul
fidivrs
imul
test
cli
mov
ss
jl
popf
stc
mov
pusha
sbb
insl
sbb
sbb
in
or
ret
jno
stc
sti
loope
or
pusha
andb
pop
and
adc
lcall
xor
sbb
in
fdivrl
jb
xchg
xchg
add
pop
repz
mov
mov
adc
jae
lret
mov
fcmove
movsb
test
aas
lock
insb
and
fs
mov
sub
and
push
mov
jg
mov
xor
or
mov
mull
jmp
mov
mov
icebp
dec
js
aam
shrl
mov
cld
push
call
lcall
dec
sub
popf
ficomps
popf
dec
rcll
dec
cmp
test
cli
cmp
aaa
je
adc
scas
xlat
sbb
dec
loopne
adc
sub
pop
xor
lahf
in
insb
or
cmpb
imul
int
stos
cmpsl
pop
gs
lods
cmp
shll
mov
and
jp
ja
mov
mov
cmpsb
in
lahf
pop
xchg
out
push
cmp
push
pop
enter
inc
loop
lds
xchg
jno
test
push
jnp
in
jo
mov
mov
pop
mov
sub
lods
jmp
clc
push
xchg
dec
push
jbe
sbbb
sarl
ss
add
adc
bound
imulb
mov
stc
fsubrl
pusha
push
dec
cmp
lock
or
cld
jnp
push
xchg
sbb
sarl
xor
icebp
push
pushf
push
call
adc
inc
lds
sbb
fs
cwtl
or
or
sub
xchg
in
pop
daa
out
and
mov
xchg
out
mov
sbb
mov
sbb
enter
test
xchg
mov
sub
roll
mov
push
lods
or
insb
lea
add
dec
lds
incb
in
cltd
xlat
lahf
lahf
mov
mov
jecxz
aaa
hlt
out
xorb
cmc
sti
pop
fistpl
cwtl
lret
arpl
push
push
js
mov
mov
jp
add
sbb
xlat
bt
es
jbe
push
mov
imul
jb
in
xchg
push
lcall
mov
push
adc
daa
jg
sbb
fsubl
jl
mov
push
stos
fcoms
xchg
mov
pop
loopne
add
pop
stos
shll
mov
ret
jge
loop
jb
cs
data16
orb
sahf
test
loope
in
push
jb
int3
sahf
cltd
hlt
sarb
cmp
cli
aam
stos
dec
out
fildl
test
mov
push
or
dec
or
test
cli
add
or
filds
loop
bound
test
sbb
dec
xchg
data16
outsb
lds
inc
push
mov
sub
adc
cmpsb
and
adc
mov
vpunpckhdq
addr16
inc
int
dec
push
popa
and
ret
ret
xchg
xor
xchg
and
fildll
in
or
adc
or
sbb
loop
xchg
or
mov
mov
or
xchg
mov
fstps
inc
xor
xor
clc
sub
jl
ja
gs
pop
pop
stos
lahf
aad
inc
inc
cmp
pop
into
push
jns
pop
or
cmpsb
jo
or
test
addr16
data16
mov
xchg
xchg
mov
jmp
jmp
mov
mov
mov
add
js
jp
xchg
enter
sub
jbe
push
out
ret
push
mov
inc
mov
mov
or
ret
push
bound
icebp
stos
mull
popa
mov
fmuls
divb
xor
inc
in
nop
add
pop
stos
add
push
mov
nop
sbb
mov
add
aaa
cmpsb
cmp
xchg
sub
mov
nop
cmpsb
add
sub
jmp
and
mov
out
adc
popa
adc
sbb
call
adc
sub
mov
imul
call
mov
and
cld
shr
lret
ds
data16
enter
inc
enter
inc
adc
dec
fsubr
and
mov
sub
in
stos
aad
dec
bound
out
jne
push
enter
je
scas
cwtl
mov
int3
outsb
leave
push
sbb
lahf
lods
icebp
inc
sti
sbb
jno
or
mov
sub
rorb
int
inc
cmp
lret
sbb
loop
jge
pop
xchg
loop
jae
ficoml
xlat
push
push
xor
or
mov
std
and
clc
test
jmp
jbe
sbb
sub
sti
xor
aad
insb
arpl
mov
mov
pushf
call
sbb
xor
jbe
jns
out
addr16
inc
xchg
mov
cmp
dec
xchg
mov
and
rorb
push
out
stos
icebp
add
rolb
mov
lret
mov
add
mov
aad
imul
roll
cmpsb
push
insb
jp
push
sub
xchg
test
xor
insb
inc
jns
mov
mov
lods
int3
hlt
ret
cmc
xrelease
pop
cmpsl
arpl
mov
insl
jne
pop
jns
and
test
shl
mov
fcmovb
xor
frstor
xchg
mov
jmp
enter
or
mov
lock
mov
andl
addl
es
lret
bound
cmp
lock
iret
pop
inc
fwait
xor
idivb
pop
fidivl
loope
pusha
pusha
jne
adc
mov
sbb
aad
into
jle
mov
dec
clc
xchg
mov
adc
cmp
imul
repz
mov
outsl
mov
cmc
loope,pt
or
js
push
hlt
add
lds
fisttpll
mov
fisttpl
je
cltd
call
iret
cmp
js
daa
cmp
out
mov
xchg
mov
sub
sbb
push
or
inc
jbe
data16
ja
jo
les
sti
mov
and
jnp
in
pop
and
movsl
dec
inc
push
jge
mov
and
xor
jns
cltd
pmulhw
lret
xchg
pop
dec
jmp
shll
out
add
jnp
ljmp
les
aaa
mov
mov
and
push
add
mov
xchg
jmp
popf
out
push
addr16
mov
rol
outsl
fs
add
inc
bound
ds
fs
out
jbe
cwtl
dec
insb
lods
xor
inc
or
xor
clc
or
test
outsb
or
pop
xchg
pop
in
xchg
out
fcomps
mov
fcomip
cltd
and
imul
outsb
addr16
dec
scas
or
int
mov
adc
xchg
scas
xchg
fcomip
iret
jl
and
xlat
fidivrs
mov
ss
sub
imul
daa
mov
add
cmpsl
fdivr
ffree
lods
lock
repz
das
in
mov
xchg
cwtl
mov
xchg
inc
jae
imul
ss
ljmp
or
inc
mov
jbe
loope
push
fmul
adc
clc
outsl
sbb
ds
icebp
pop
call
jae
cli
sbb
test
xchg
xor
jnp
lock
mov
das
movsb
mov
push
scas
dec
push
lret
xchg
push
jge
push
sbb
std
add
ret
mov
out
and
sbb
imul
popf
popf
cli
adc
jge
cmp
loope
data16
inc
fdivrs
into
mov
pop
inc
das
aas
decl
rcrb
jecxz
push
lods
mov
xor
int3
aas
js
outsl
add
test
addr16
mov
scas
mov
jmp
xor
inc
mov
xchg
and
mov
lgs
xchg
sub
adc
dec
push
in
lods
mov
cmp
xlat
repz
push
aaa
and
mov
fidivrl
pop
fxch
je
push
imul
inc
inc
sarb
test
and
xchg
cmp
sarl
std
mov
add
sbb
jno
mov
mov
out
subb
popa
dec
movsb
xchg
or
push
mov
pop
mov
mov
leave
sbb
rcrb
pop
movsb
mov
js
dec
ror
jg
xlat
and
push
mov
lahf
out
pop
outsb
mov
aad
dec
fiadds
adc
scas
inc
adcl
in
jge
cli
pop
xor
inc
cwtl
sub
mov
sti
adc
inc
push
lret
sbb
repz
in
loope
jb
pop
pop
pop
jo
cmpsl
mov
mov
out
arpl
movsl
mov
in
push
inc
loope
pop
cmp
test
clc
jecxz
and
js
jle
ja
mov
pusha
cmpsb
ret
pop
leave
lods
pop
pop
xchg
and
and
xchg
jp
cltd
imul
dec
xor
jns
dec
cmpsl
int3
ljmp
lock
into
jns
stos
popa
adc
popl
out
lock
add
dec
and
aam
cmpl
push
inc
mov
sub
movl
mov
push
jl
push
rclb
push
dec
icebp
loop
in
xchg
and
mov
scas
dec
push
lret
inc
and
push
fcmovnbe
jmp
jge
xor
ror
dec
and
or
dec
fnsave
adc
movsl
inc
add
fs
aaa
pop
adc
popa
sub
jl
xorl
js
in
outsl
push
sbb
insl
sahf
popa
pushf
adc
lods
icebp
fwait
mov
rol
gs
repz
loope
pushf
mov
jno
push
sahf
mov
cld
and
push
subl
and
lds
xor
mov
push
push
sbb
scas
jle
add
ror
mov
adc
je
ret
pop
xchg
mov
xor
test
mov
inc
xchg
out
daa
cmp
push
inc
cs
mov
push
mov
adc
sbb
mov
in
dec
jge
push
jp
imul
cli
mov
cmp
out
in
orb
mov
mov
jl
pop
sarb
jp
adc
jmp
pop
pushf
cmpsb
out
push
clc
incb
lock
in
lock
cpuid
dec
xor
add
mov
int3
push
dec
enter
dec
imul
push
pop
sub
js
rcr
outsb
push
dec
test
jae
jno
push
mov
lret
xchg
mov
outsb
inc
lods
fidivrs
adc
imul
icebp
push
loop
jb
adc
push
sbb
jbe
shl
push
xchg
je
popf
mov
inc
jo
inc
push
fs
lahf
mov
push
and
push
or
in
cltd
push
movsb
dec
xchg
xor
mov
lods
shl
xor
sbb
xor
and
cmpsl
push
push
in
aad
das
or
aam
enter
in
bound
dec
jne
cmp
mov
and
cli
inc
fmul
imul
pushf
std
inc
rcll
test
lock
mov
or
movsb
ljmp
aas
adc
jle
jmp
add
push
cmpsl
hlt
pop
movsl
fdiv
hlt
out
jns
dec
fdivr
aaa
in
repz
repz
fdivrp
hlt
cmp
sti
loope
daa
jno
test
jmp
add
cwtl
mov
and
xchg
mov
clc
mov
mov
addl
dec
sbbl
orl
adcb
push
jge
mov
test
repnz
xchg
icebp
adcl
jae
shll
stc
sarb
sahf
xor
mov
in
mov
jne
and
int3
arpl
dec
rolb
sti
in
ljmp
pusha
sbb
push
mov
fld
jae
xchg
pop
sbb
roll
popf
aam
fwait
mov
sar
add
mov
fldlg2
jle
in
loope
pushf
or
test
lcall
sbb
popa
lock
adc
fidivrl
dec
jmp
imul
sub
mov
and
lea
fnstenv
cmp
daa
add
push
hlt
adcb
xchg
adc
insl
push
call
pusha
inc
cmpsb
fldt
xchg
jecxz
adc
sarl
xchg
add
cmc
mov
add
xchg
push
roll
shll
das
popa
sub
in
insb
xlat
pop
inc
lds
jmp
push
sub
cmp
mov
push
aam
or
rcrl
arpl
mov
xlat
hlt
add
rep
dec
push
inc
lock
lahf
xlat
jecxz
in
dec
jns
inc
dec
test
popa
daa
sbb
push
push
mov
mov
aas
loope
and
add
sti
xchg
xchg
add
ret
push
rorl
adc
jb
pop
inc
out
rorb
stc
push
imul
add
mov
xlat
std
inc
aas
sub
add
insb
cmpsl
pop
lods
loope
xor
and
and
aaa
jno
out
mov
jbe
dec
cmc
cmp
push
push
cs
popf
in
xchg
int3
xor
pop
dec
movsl
aad
test
enter
imull
sbb
jo
dec
sahf
add
xor
sub
aas
es
and
lods
mov
cmp
in
add
and
pusha
lahf
scas
push
inc
stc
in
pop
push
mov
fsubl
mov
jg
jno
gs
jns
orl
nop
adcl
sbb
fstpt
adcb
pop
pop
push
pusha
xchg
xlat
xchg
push
mov
shrb
sar
rorl
dec
jns
xor
outsb
dec
mov
mov
sbb
sub
dec
pop
xor
std
andl
mov
dec
fdivl
push
xchg
dec
test
insl
xor
and
sti
or
div
sahf
dec
dec
or
fs
es
inc
test
std
mov
add
out
sub
testb
imul
mov
cmpsb
movsl
out
jbe
enter
sbb
lahf
stos
and
cmp
add
addr16
sbb
xor
nopl
sub
fisttpll
jo
push
adc
cltd
sub
pop
lock
dec
adc
inc
out
fists
stc
cmp
xchg
mov
je
rclb
push
push
sub
popa
dec
fwait
mov
mov
pop
dec
inc
shrb
push
rcrl
roll
push
jmp
cmp
out
fstp
cld
sub
dec
dec
bound
push
dec
mov
xchg
jle
xchg
add
fistpll
jns
out
and
imul
adc
sbb
cmc
les
mov
dec
pop
and
dec
sub
mov
lret
enter
inc
mov
test
adc
fwait
rcrw
add
cmp
xchg
fimuls
xchg
cs
shrb
insl
dec
out
mov
je
pop
icebp
fildll
clc
add
mov
inc
or
jmp
xor
and
cmp
aad
mov
dec
leave
jp
dec
push
popa
push
lret
das
xorl
in
xchg
jbe
push
push
das
addr16
mov
push
arpl
shrl
lret
push
jmp
dec
and
movsb
faddl
xchg
sbb
or
pop
push
cmc
sbb
imul
sub
popf
xor
ret
adc
pop
sub
js
stos
sub
inc
sbb
je
pop
lock
mov
lods
jae
divl
clc
sbb
add
xchg
lret
mov
xchg
in
add
xor
jmp
stc
push
loop
int3
sbb
insb
jl
in
sarb
adc
sub
adcl
jmp
ret
pop
cmpsb
test
mov
xor
jne
jbe
scas
mov
out
pusha
loope
loope
arpl
adc
xor
test
test
mov
mov
lods
gs
mov
mov
cmp
add
push
adc
inc
adc
mov
jle
jmp
fisubl
push
push
mov
loope
shlb
jp
adc
pop
outsb
mov
rcrb
jae
mov
mov
pop
or
fcomp
sub
or
push
loop
stos
imul
mov
rclb
sbb
test
mov
arpl
sbb
cmp
aaa
add
aas
add
mov
andl
inc
mov
cs
jae
adc
cld
pop
jle
cmpl
insl
pop
pop
enter
pop
mov
adc
cltd
shl
xchg
ret
sarb
inc
test
add
sub
repz
inc
push
cmp
cli
dec
push
dec
sub
and
cli
ret
push
mov
inc
lock
roll
loope
bound
pop
aaa
lds
into
mov
pop
jne
pop
stos
mov
aad
cmp
test
out
lds
xchg
out
pusha
cmpsl
sub
mov
in
dec
mov
jbe
inc
loopne
jne
xchg
sbb
pop
fisubs
inc
imul
in
fisttpll
int3
xor
sbb
fs
imul
add
mov
rcl
xchg
pop
fidivrs
cli
add
stos
dec
and
and
adc
push
add
sub
xchg
je
push
pop
mov
adc
inc
rcrl
ds
aad
stos
jecxz
div
mov
cltd
inc
out
xchg
cmpsl
aas
test
push
sub
mov
mov
in
gs
cli
imul
add
mov
fs
lock
fdivrs
dec
and
mulb
pop
mov
mov
lock
iret
repz
sbbb
jb
pop
sbb
aad
inc
mov
xlat
leave
pop
and
push
jns
xor
sub
mov
fs
inc
cmp
mov
mov
mov
lods
rcr
dec
and
xchg
loope
inc
cmp
leave
adc
or
nop
cmp
das
inc
xor
lea
jns
jae
xor
out
mov
lods
loope
and
add
scas
movsb
fcom
lock
xor
jne
mov
movsl
divb
jno
pushf
outsl
daa
cmp
into
cld
scas
mov
lock
or
push
jbe
aaa
pop
call
mov
xor
sub
loope
jle
xor
das
push
test
dec
jne
dec
loop
mull
inc
pop
and
idivb
outsl
dec
in
add
xor
outsl
pop
pop
adc
repz
add
sbb
cmc
ret
jmp
popa
sbb
out
rcrl
dec
or
sub
test
inc
leave
push
or
rorb
xchg
inc
lret
xchg
aas
push
pop
sbb
adc
and
test
sar
shrb
xor
cs
bound
in
ret
xchg
add
mov
pop
cmp
or
les
xor
test
xchg
jno
in
aam
imul
imul
test
mov
jmp
les
mov
pop
push
out
gs
xor
ficompl
sarb
push
jge
dec
mov
cmpsl
push
movsb
lahf
mov
dec
rorl
popf
mov
sahf
data16
out
xor
loope
test
and
push
jmp
sbb
pushf
rorb
ljmp
xchg
push
mov
push
aaa
leave
or
or
add
xchg
push
dec
jns
mov
push
ficompl
inc
xor
and
adc
add
xchg
std
rcr
xor
out
push
adc
fcomi
dec
push
add
ret
xor
cmp
sbb
jg
jle
cmp
inc
mov
push
xchg
inc
adc
jl
adc
ds
inc
int3
daa
cs
add
mov
jb
aas
jmp
push
mov
sarb
stos
imul
jle
cwtl
aam
xorl
push
cld
orl
cmp
ficomps
jmp
sub
mov
jmp
repnz
or
mov
xchg
pop
imul
sub
mov
jnp
mov
jg
hlt
jp
mov
push
adc
xchg
xlat
out
sbb
mov
dec
in
dec
push
xchg
or
pop
aam
aaa
iret
iret
mov
push
lock
push
or
jge
jbe
daa
inc
scas
imul
repz
inc
mov
add
icebp
push
ret
sbb
repnz
sbb
jns
sti
int
add
lret
mov
xchg
jnp
iret
jns
ljmp
mov
subb
mov
add
inc
cmp
fs
jg
push
test
sysexit
push
xor
pusha
push
shll
arpl
popf
ds
fnstenv
mov
shll
andl
adc
xor
daa
pusha
mov
mov
in
insb
fstps
imul
orb
add
rcrb
mov
mov
in
lods
inc
ret
pop
insb
inc
push
shl
clc
xchg
cltd
fwait
shll
push
pushf
add
mov
dec
mov
test
iret
xor
in
mov
je
imul
pop
xor
xorl
sbb
jmp
sub
out
mov
cs
repz
imul
lds
dec
jge
pop
adc
cld
sbb
ja
cli
test
imul
cs
loope
ja
subb
lock
mov
mov
add
cli
sahf
ja
hlt
pop
jmp
dec
outsb
lods
js
lods
jmp
jle
lea
sbb
mov
jmp
inc
lcall
jo
int
dec
hlt
mov
in
jns
adc
jmp
rclb
in
xlat
mov
push
mov
hlt
xor
out
out
jmp
repz
pop
sub
dec
aad
outsl
inc
xor
mov
test
mov
std
jmp
jae
dec
jp
add
inc
dec
cwtl
and
les
add
outsb
add
cmpsb
mov
push
adc
lahf
and
sbb
fisttps
sub
sbb
insb
test
push
mov
inc
fcompl
sbb
xor
imul
inc
pop
and
clc
repnz
xchg
or
pop
shlb
mov
mov
ljmp
sarb
lret
repnz
inc
cmp
test
lock
dec
nop
negl
jmp
push
out
or
push
out
xchg
mov
int
shl
lcall
add
roll
rclb
xor
sbb
and
arpl
cmp
add
scas
ret
outsl
stos
stos
movsl
cmp
or
aam
mov
cld
sbb
bound
cmp
not
fwait
lret
je
inc
adc
jecxz
nop
enter
lcall
pop
add
clc
jmp
xchg
inc
xor
call
sti
sub
iret
ss
fcomps
pop
nop
add
add
xlat
daa
js
xor
push
mov
xchg
in
cwtl
jp
sbb
jb
sbb
inc
dec
jle
mov
inc
dec
mov
xchg
ret
das
scas
and
pop
fst
mov
sbb
xchg
cld
cmpsb
test
xchg
pushl
sub
sbb
inc
inc
ss
mov
inc
dec
or
out
jl
es
inc
cmp
in
pop
sbb
xor
pop
loopne
jo
and
outsl
cltd
divl
dec
int3
insl
xor
mov
gs
and
fisttps
arpl
dec
insb
sub
inc
lahf
daa
dec
jg
push
dec
cmp
test
lret
mov
cwtl
enter
mov
and
cwtl
flds
push
stos
pop
cltd
adc
push
pop
clc
adc
mov
cltd
xchg
movsb
call
push
push
insl
lahf
add
jmp
mov
mov
lock
mov
dec
pop
hlt
loopne
push
dec
mov
pop
pop
call
and
pop
dec
xor
mov
add
sbb
jno
dec
pop
cs
xor
push
cltd
stc
jge
xlat
pop
lods
loope
pop
push
out
push
ja
mov
jnp
cmp
dec
xchg
jge
test
insl
ror
lock
xchg
xchg
lahf
or
push
mov
pop
bndstx
jle
mov
mov
mov
call
loopne
mov
addl
mov
jl
push
cli
jle
inc
and
mov
sbb
or
jl
push
int3
lock
push
mov
das
fidivs
filds
mov
mov
adc
pop
push
jno
addl
push
fildl
lret
cmpsl
lods
or
int
inc
loope
pushl
pushf
sbb
mov
call
mov
test
rcl
lock
fsts
jmp
mov
js
inc
push
xchg
imul
icebp
jno
lods
sbb
mov
xchg
nop
mov
sahf
std
hlt
outsl
in
shlb
push
and
mov
loopne
xchg
push
sbb
and
sahf
push
adc
mov
aas
xchg
add
mov
jecxz
xor
xor
inc
jmp
inc
mov
jae
sbb
adc
push
pop
xor
jp
icebp
push
test
pushf
cmp
sub
adc
cltd
sub
gs
xor
mov
sbb
pop
in
test
addb
lock
imul
adc
shlb
aad
insb
push
je
out
ss
push
sub
dec
xchg
and
adc
mov
ret
adc
scas
sbb
inc
cltd
or
adc
ss
gs
and
xchg
inc
mull
dec
out
and
pushf
nop
xor
sbb
addl
mov
jg
dec
add
adc
daa
lea
mov
mov
js
hlt
xor
mov
ds
jecxz
dec
ds
sub
in
jbe
out
push
sub
mov
mov
enter
pushf
mov
movsb
sbb
lcall
jo
add
add
test
xchg
cltd
mov
shl
adc
sbb
mov
dec
mov
xchg
sbb
lods
xor
cld
pop
xor
cmp
pop
add
dec
cmp
pop
mov
rorb
xchg
pop
cmpsl
ficoml
fstpl
sub
jae
icebp
mov
gs
push
pop
push
fcmovnb
lret
jp
outsb
outsb
nop
jbe
daa
mov
cmpsl
pop
add
scas
loop
add
mov
in
mov
subl
jecxz
int3
mov
jnp
out
fwait
add
in
stos
sub
sbb
mov
sbb
xchg
jl
sbbb
bswap
mov
add
insl
sti
dec
mov
daa
or
rclb
popa
pop
xchg
pop
push
or
rcll
jo
ret
outsb
mov
add
mov
adc
push
push
mov
call
cs
cs
out
rcll
popl
hlt
xor
push
sub
js
sbb
jmp
rcrb
mov
lds
sub
aam
loop
mov
add
dec
cli
bound
push
mov
xchg
gs
out
mov
xchg
test
xlat
xchg
push
add
in
loopw
inc
sbb
mov
test
shl
xor
cmp
jl
shll
jle
add
mov
outsl
adc
loope
ljmp
fadd
out
dec
enter
pop
push
add
orb
add
adc
jns
ret
test
cmp
sub
mov
sbb
inc
pop
in
mov
fcomp
inc
mov
pushf
adc
jp
or
lock
xor
adc
xchg
mov
mov
ret
movsb
add
test
cmpsb
push
das
push
imul
mov
std
in
fwait
cmp
ss
cld
mov
jmp
cli
arpl
push
push
cs
pop
lret
pop
sub
xor
addr16
or
stos
cli
mov
addr16
aas
push
inc
jns
sti
mov
jle
icebp
rolb
sbb
dec
das
push
cltd
jno
push
pop
dec
inc
pop
lret
sahf
jle
inc
fnstcw
mov
mov
clc
dec
mov
sbb
std
scas
fldcw
adc
mov
cld
notb
push
mull
dec
iret
and
shrd
push
inc
rcr
xor
mov
test
fistps
push
gs
pop
or
add
cmp
xchg
mov
xchg
out
out
inc
sub
push
fistpll
loop
in
jbe
ja
outsl
aam
fimull
xchg
in
pop
lds
ret
jg
or
das
popf
pop
je
scas
cmp
jbe
add
push
movsb
inc
movsl
push
xchg
ficoms
push
dec
pop
out
test
gs
div
or
stc
mov
pop
in
inc
je
dec
hlt
mov
int
ret
pushf
cmp
repz
xor
jns
sbb
mov
daa
out
popa
xor
lret
inc
inc
data16
xchg
cmpsl
or
adc
in
cmpsl
fld
leave
insl
sub
add
sbb
push
dec
dec
cli
jne
dec
xorb
cmpsb
xor
cld
fldt
test
out
addl
jmp
sbb
inc
lret
mov
cwtl
inc
pop
dec
cmpsl
xchg
add
repz
and
push
and
mov
cmp
xchg
out
rolb
fsubs
stc
fdivrl
jl
lods
cs
inc
lock
sbbb
cs
fidivl
add
mov
dec
mov
add
mov
cmpsl
sbb
repnz
cmp
shl
pop
loope
and
xchg
ret
mov
mov
das
ficomps
or
mull
mov
mov
inc
fmull
loopne
aaa
dec
mov
and
mov
lret
int
movsb
pushf
pushf
loop
out
jnp
outsb
mov
pop
sbb
jge
daa
mov
add
js
lahf
sub
and
xchg
and
mov
negb
jmp
xchg
xor
pop
outsl
fstpt
es
mov
pop
push
push
and
sub
and
popa
xor
adc
leave
stc
xchg
in
pushf
arpl
outsl
nop
mov
bswap
fisttpl
imul
sbbl
insl
repz
mov
arpl
pop
xor
call
leave
and
mov
out
enter
pop
lret
dec
cmp
or
fcompp
xor
rorb
xor
rorl
lods
enter
insl
dec
scas
cmp
pop
je
movsl
push
xchg
cs
sbb
mov
cmp
xchg
sbb
enter
into
arpl
leave
insl
les
stc
insb
test
cmp
mov
adcl
and
cmc
mov
fwait
stos
jbe
out
jl
fistpl
and
add
in
dec
inc
popf
scas
out
sbb
xlat
pop
mov
cs
mov
push
xor
bound
dec
mov
test
in
repz
aad
rclb
test
fisubl
popf
fldl
jle
xchg
dec
xorb
and
fsubrl
out
outsb
push
andl
add
clc
stc
cmc
cmp
dec
dec
fsubl
xchg
and
pop
xchg
in
loop
dec
leave
repnz
lahf
sbb
pop
cmp
or
mov
outsl
mov
adc
inc
fstpt
insb
xor
fistl
and
jae
mov
and
stc
scas
scas
in
ljmp
add
push
aad
push
mov
loope
sub
lcall
repz
negl
and
imul
add
mov
add
sti
cmp
and
jle
xor
fisubrl
lret
dec
and
das
out
pop
push
icebp
inc
movsl
ja
adc
cmc
scas
shl
xor
das
daa
cltd
jl
sbb
and
xorb
in
push
lds
xchg
dec
mov
insb
imul
divb
pop
inc
xchg
cmpsl
or
xlat
or
cld
jmp
mov
xchg
and
and
ss
adc
dec
dec
std
inc
loopne
in
add
xchg
mov
push
rol
flds
call
repz
xor
arpl
xchg
cmpsb
fwait
xchg
sub
mov
pushf
or
fimull
cmp
aas
xor
inc
sahf
jno
fbld
repz
push
jae
movsb
mov
jno
rcr
mov
lods
xchg
outsb
xor
add
pop
dec
sub
into
fdivl
es
ss
mov
data16
adc
dec
cmp
out
jo
mov
stos
sbb
mov
xor
pusha
pop
fs
lods
cmp
outsb
int
mov
add
xchg
adc
cld
dec
jae
inc
je
add
lret
shll
pop
aaa
mov
mov
fs
out
stos
fsub
and
fisttpll
cs
dec
mov
fisttpll
cmp
cmpsb
nop
fistps
test
inc
push
inc
mov
in
or
mov
ss
cmp
pop
cld
rorl
jge
test
pusha
xchg
inc
fwait
movsl
roll
push
cmpsb
mov
or
xchg
mov
or
cwtl
sbb
jb
pop
aad
push
pop
pop
push
mov
int
push
jbe
dec
stc
iret
push
shrl
pop
xchg
ret
jp
push
xor
ss
or
lods
lods
out
clc
int3
or
in
or
aad
add
ja
dec
dec
add
inc
xchg
loopne
mov
dec
mov
mov
ljmp
popf
cmp
adc
mov
sub
and
inc
mov
or
or
jmp
cmc
push
cltd
cmp
pop
push
inc
push
mov
stos
xor
jp
das
movsl
mov
aad
jb
scas
xor
ds
mov
filds
out
jmp
iret
mov
mov
mov
into
pop
shll
mov
xor
dec
mov
and
or
lds
xchg
rcrl
or
or
xor
sbb
fdivs
call
cmp
push
lahf
cmc
jo
cmp
loop
std
jmp
int3
lahf
arpl
jne
mov
lahf
es
push
adc
pop
incl
lcall
ja
in
clc
adc
addr16
lods
mov
popf
insb
incb
fdiv
adc
cwtl
jo
int
dec
adc
in
mov
in
dec
int
fidivs
scas
outsb
fstpl
imul
loopne
jae
xor
loope
push
shll
popf
push
clc
xchg
testb
ret
sub
aam
sbb
lea
cmp
imul
testb
pop
jnp
adc
cwtl
mov
adc
inc
repnz
cli
push
popf
lds
imul
sub
jcxz
sbb
adc
sbb
pushf
mov
jo
add
mov
outsb
mov
or
push
dec
sbb
shrl
pusha
pop
shll
rolb
or
les
and
or
dec
popf
sbb
push
jle
sub
push
xchg
fwait
mov
sub
mov
adc
cld
enter
pop
adc
mov
lea
js
out
shlb
inc
lret
mov
fisubrl
mov
repnz
mov
push
lahf
inc
sbb
mov
aad
mov
cltd
or
rol
mov
cld
ljmp
in
into
push
xchg
cmp
and
clc
pop
pop
jo
fsubl
fwait
bound
out
xor
test
adc
rorl
sub
das
or
fildll
cmpsl
outsb
inc
mov
add
fcompl
les
div
sub
sbb
repnz
dec
call
push
fdivs
adc
popa
notl
in
lods
cld
clc
clc
data16
dec
sbb
inc
sbb
aad
pop
dec
cmp
push
lret
imul
aas
stc
mov
push
outsl
inc
sbb
arpl
mov
mov
lret
loop
and
sub
je
xchg
xchg
pop
xchg
sub
aaa
hlt
push
dec
xor
ficoms
shlb
ds
std
or
xor
inc
mov
push
repnz
or
xchg
jle
jl
sbb
add
in
dec
push
push
call
sub
pop
stc
mov
repz
inc
sub
out
inc
sbb
dec
push
jecxz
out
out
shlb
jge
mov
out
push
adc
movsb
xlat
sub
aam
add
iret
adc
mov
or
push
lcall
cmp
loop
ret
testl
sub
imul
adc
dec
leave
pop
mov
cmp
adc
cmp
push
insb
push
movsb
fimull
repz
jb
push
out
pop
add
sbb
cmp
enter
xor
cmpxchg
out
and
cmc
out
aas
shrb
jle
imul
dec
rorb
fldenv
dec
pop
sahf
lcall
nop
jecxz
or
scas
sbb
cmpsb
sub
das
push
insb
lock
scas
icebp
pop
out
int3
and
sti
leave
lret
mov
sub
add
mov
cmpsl
xchg
test
mov
into
pop
sahf
mov
lock
lods
xlat
insb
adc
shl
mov
add
or
jle
addb
insl
jb
mov
stc
inc
lds
int3
add
jae
inc
or
rcr
add
inc
repz
mov
cmp
and
xchg
rcll
mov
dec
or
out
mov
div
shll
inc
jnp
subl
pop
test
mov
leave
xor
icebp
popf
push
push
bound
sub
ja
js
fwait
imul
mov
test
cmp
arpl
push
inc
mov
paddq
les
es
js
inc
or
pushf
push
ret
dec
push
aas
test
fs
lock
xor
outsb
test
dec
xor
jmp
loop
pop
lret
fnstenv
dec
mov
xchg
inc
fbld
cs
or
adc
es
cld
lock
and
in
inc
test
pop
adc
leave
mov
jge
adc
adc
scas
ds
pusha
or
jne
in
lds
pop
sbb
outsb
inc
out
adc
push
jno
pop
mov
mov
ja
aam
push
cmp
nop
inc
iret
mov
mov
in
test
daa
cmpsl
or
mov
rcrb
inc
imul
push
dec
pop
std
xchg
sbb
jmp
enter
fwait
imull
sbb
mov
fisubl
pop
mov
pop
arpl
mov
arpl
popf
and
scas
mov
test
imul
fildl
fcomip
or
jbe
jmp
cli
or
mov
mull
mov
pop
dec
jmp
ds
push
je
outsb
decb
mov
rcrl
mov
and
pushf
sub
cmp
add
dec
iret
pushf
outsl
xor
scas
ja
and
scas
xor
les
call
mov
xorl
mov
dec
ret
loopne
mov
mov
xlat
dec
pop
rorb
xor
outsb
pushf
or
cmp
cli
and
out
mov
arpl
adc
mov
les
imul
adc
nop
repz
xor
cltd
mov
cmp
test
dec
sub
ret
data16
cld
sbb
out
cmpsl
ja
mov
push
mov
subl
xchg
mov
dec
mov
sbbb
not
shll
and
jg
cli
mov
test
stos
jp
aam
enter
dec
insl
mov
mov
xor
lcall
in
sub
pop
xchg
mov
cmp
cwtl
lcall
push
lods
xor
xchg
dec
cmp
fidivrs
lret
mov
pop
xchg
popa
cmp
cmp
out
movsl
in
mov
cli
lds
test
or
xchg
sbb
fldcw
mov
ljmp
inc
mov
pop
push
mov
in
fildll
sbb
adc
push
fsubl
mov
xchg
leave
mov
popf
loope
fcomi
fadd
jo
arpl
dec
in
popf
mov
inc
mov
add
ljmp
pop
adc
in
pop
scas
popf
xor
jecxz
and
jp
inc
xor
sarl
popf
ss
add
adc
imul
mov
mov
jno
cs
gs
xlat
dec
insb
pop
ret
mov
pop
lret
push
pusha
sarl
test
mov
mov
xchg
push
ja
lret
sbb
xor
jne
cmp
pop
fmull
sbb
inc
hlt
loop
fsub
repnz
jmp
in
iret
jge
out
jmp
xchg
mov
sub
mov
aaa
movsb
push
lcall
cmp
pop
lahf
imul
xchg
imul
les
movb
into
andl
jb
jnp
popa
dec
icebp
pop
dec
aam
jae
out
decb
in
iret
pop
xchg
fucom
push
test
das
sub
je
addl
js
enter
mov
adc
dec
push
lods
push
into
fwait
jmp
cs
pop
movsl
cld
icebp
mov
cltd
xchg
int
push
mov
cmc
lret
dec
dec
je
test
es
lahf
les
xchg
sbb
adc
xchg
aas
addr16
mov
mov
push
cltd
test
loop
dec
in
push
scas
push
xor
sub
mov
sbb
jno
mov
aaa
push
push
out
mov
loop
mov
sahf
push
subl
fs
outsb
mov
iret
ds
mov
or
jo
lds
mov
out
lcall
add
sub
ror
mov
xor
and
sahf
xchg
in
test
out
add
and
mov
data16
mov
mov
or
popw
inc
incl
fmull
insl
test
stos
icebp
gs
sub
divb
into
inc
pop
fidivs
or
addr16
test
cmp
ret
lea
sbb
xorl
les
push
cs
popf
pop
sbb
adc
rorb
inc
ljmp
xchg
adc
sbb
and
test
int
pop
push
push
sub
jmp
imul
push
xor
cld
jg
cmpsl
sbb
fcom
stos
cmc
jns
xor
push
enter
jg
pop
imull
dec
mov
mov
sbb
jno
jge
pop
push
icebp
aaa
shl
mov
jne
and
add
dec
test
orb
or
mov
aad
test
add
sub
enter
inc
cmp
rclb
pop
inc
lahf
adc
sub
push
hlt
mov
outsb
inc
jnp
imul
mov
xchg
mov
fucomi
mov
shl
mov
sbb
push
mov
xchg
insl
mov
mov
ret
fistpll
test
xchg
mov
das
test
mov
push
sub
pop
sbb
dec
mov
xchg
divl
mov
sub
jne
out
add
sbb
icebp
mov
sub
aas
jl
fdivs
mov
push
popa
add
repz
push
cwtl
into
ret
xchg
sub
rcrl
cmc
rorb
in
cmp
scas
xor
fwait
adc
inc
adc
dec
adc
dec
adc
mov
into
mov
int
mov
jecxz
imul
inc
cmp
mov
fwait
mov
shlb
std
shrb
mov
or
jns
arpl
dec
and
mov
xchg
dec
mov
sub
shrb
add
dec
fmull
loopne
fs
mov
push
lcall
aam
sub
xchg
xlat
dec
mov
push
pop
rcr
nop
and
dec
jnp
in
inc
add
push
int
inc
cmp
push
negl
mov
and
outsb
movsb
iret
cmp
mov
dec
adc
in
fistps
insl
ret
add
insl
mov
sbb
aas
sub
scas
mov
jp
fmull
leave
xchg
xor
pop
pusha
arpl
xchg
and
push
push
imul
je
xchg
cli
adc
mov
lret
and
test
pop
mov
mov
mov
xchg
inc
call
lcall
cld
outsb
jp
and
xor
repnz
pop
mov
inc
dec
pushf
sub
push
out
cmp
pop
add
mov
mov
int3
sbb
or
mov
vpcmpeqb
push
xor
les
stos
jnp
xchg
mov
cmpsb
out
les
sti
aaa
aas
fildll
sahf
lahf
push
or
add
sarl
or
lcall
adc
jno
xchg
pop
out
loop
aaa
imulb
sbb
test
ss
lahf
jmp
ljmp
adc
sub
aaa
shll
pop
jnp
jbe
xchg
aam
inc
add
repnz
out
xor
mov
in
pop
dec
aam
and
push
inc
enter
aas
push
out
movsb
lock
xchg
popa
lret
sbb
clc
fstpt
jmp
inc
shrb
jbe
into
adc
lods
and
scas
xchg
jne
pop
inc
aaa
mov
adc
jg
xchg
in
lret
push
xlat
sbb
cld
mov
xchg
sub
stos
push
push
neg
pop
cmc
adc
leave
jb
cli
test
loope
scas
rorb
or
cmp
push
data16
mov
lahf
divl
punpckldq
mov
push
lcall
jns
inc
push
testl
ds
mov
xlat
push
pop
addl
push
adc
xchg
aad
inc
scas
subb
inc
repz
mov
sub
fisubs
fists
test
inc
dec
mov
push
push
sbb
out
insb
jmp
sub
enter
jns
js
mov
test
and
jg
mov
add
push
push
outsl
push
inc
cmpsl
lret
je
push
in
xchg
cs
pop
bound
push
sub
out
cmp
mov
cmc
lcall
andb
sub
test
jl
or
insl
fstpt
mov
push
sahf
gs
daa
xor
cmp
or
cli
xchg
xlat
loop
leave
je
jle
data16
shll
xor
popl
hlt
pop
inc
jb
stos
mov
sub
and
and
repz
mov
lods
mov
and
and
inc
fadds
mov
or
add
outsl
jb
mov
xor
dec
adc
iret
js
push
les
enter
int
inc
push
and
mov
mov
ret
lahf
sbb
aad
addr16
cwtl
add
ret
adc
push
sub
hlt
adc
or
adc
cmc
jne
cmc
clc
mov
adc
pop
imul
shrl
imul
jno
pop
lahf
fs
xor
scas
mov
xor
xchg
mov
mov
add
lock
pop
mov
lcall
lret
adc
imull
add
xchg
addr16
cmp
idivb
xchg
jmp
cld
test
jg
call
scas
cli
xchg
xor
in
cmpsl
inc
les
mov
xchg
xchg
adc
mov
mov
ds
iret
into
mov
push
imul
les
fsts
pop
jb
push
lods
mov
cld
out
inc
pop
data16
in
lahf
sub
in
xlat
mov
dec
xor
cmp
or
push
jbe
mov
adc
adc
mov
pop
push
adc
push
xor
out
out
test
arpl
loope
pop
fcmovnb
roll
jl
xor
and
xlat
scas
mov
inc
cs
mov
jmp
leave
mov
lret
das
adc
push
mov
mov
cld
dec
mov
scas
setne
das
dec
testb
jnp
mov
orb
aam
js
movsb
inc
adc
mov
dec
cmp
pop
xor
push
push
pop
imul
xor
aam
dec
push
aaa
xchg
ficoms
or
arpl
mov
jbe
inc
pop
jp
fcompl
inc
push
leave
fldt
rolb
inc
xlat
fcomps
inc
xchg
xor
xchg
mov
stos
add
mov
in
jne
lret
imul
std
adc
movsb
mov
shrl
lcall
push
cmpsl
xchg
out
pushf
pusha
lcall
shll
xor
pop
loope
push
dec
popf
mov
inc
outsl
add
orl
xchg
dec
call
stos
push
or
popl
testb
add
lea
cmc
pop
outsl
mov
int
loop
hlt
jmp
mov
loope
cmp
sub
jmp
outsb
icebp
adc
mov
fimuls
insl
fs
pop
pop
inc
fwait
xchg
je
les
push
xor
cmp
clc
shrb
in
aas
mov
jp
gs
and
pop
imul
pop
dec
mov
dec
and
pop
movsl
cmp
das
xchg
or
inc
push
cmp
pushf
pop
push
mov
adc
movntps
inc
jle
cmp
jb
adc
scas
mov
mov
add
js
add
fcmove
rcrb
xor
stc
and
arpl
dec
push
inc
insb
or
add
inc
ja
xchg
mov
out
icebp
and
rcll
inc
mov
push
stc
outsb
xor
and
cmc
ss
push
gs
lds
push
cmc
lret
pop
lods
shrl
repnz
sahf
mov
int3
in
js
adc
mov
mov
inc
add
inc
sub
sub
jns
pop
fwait
xor
fsubrl
lret
jo
mov
and
ja
xchg
xchg
mov
push
cwtl
mov
scas
xor
testb
jle
pop
xor
js
pop
inc
sbb
imul
sbb
xor
outsb
add
orb
xchg
das
lret
mov
pusha
pop
jbe
pop
adc
fstps
xor
mov
test
rolb
es
pop
enter
fisubl
shrb
mov
and
mov
rolb
fstpl
call
clc
mov
fldt
sbbl
dec
or
pop
mov
adc
push
rcll
ret
and
in
out
add
sbb
mov
hlt
sbb
movsb
jae
outsb
xchg
pop
adc
mov
and
xchg
fidivrl
roll
pop
push
adcb
sbb
in
mov
push
nop
fwait
cmp
cltd
jp,pn
jp
jle
bound
stos
adc
and
sbb
inc
outsl
jne
cmp
rcll
mov
repz
mov
or
cld
test
cmp
xchg
mov
jno
into
add
or
popf
lcall
cwtl
add
lods
xchg
aas
mov
pusha
inc
sub
fsubrl
nop
jl
aam
in
inc
ss
mov
loopne
xor
push
jge
sub
jb
xor
movsb
or
loopne
mov
or
popa
push
inc
repnz
inc
pop
mov
adc
dec
lea
add
mov
loop
jp
in
adc
mov
lods
push
faddl
mov
inc
and
cmc
inc
ja
sub
loop
jle
push
int
jle
ljmp
mov
add
hlt
xchg
movd
leave
lods
xchg
push
add
dec
lds
lret
pop
gs
dec
fwait
jle
mov
js
arpl
aaa
adc
adc
icebp
pop
mov
ljmp
popa
jne
adc
adcb
jp
xor
jmp
mov
mov
insl
popf
ret
js
mov
pop
push
lcall
jmp
cmpsl
je
stc
jg
or
adc
clc
lock
pop
mov
cwtl
cmp
loope
mov
dec
fnstcw
xchg
fisubrl
mov
lcall
cltd
in
push
sbb
scas
or
imul
ljmp
out
jge
sbb
call
cs
pushf
mov
fcomps
adcb
std
jmp
jmp
fsubrs
mov
or
mov
fsub
pop
sub
push
sbb
sbb
jp
test
test
cmp
in
mov
xor
adc
cmp
push
aam
rolb
pop
or
add
jp
repnz
inc
mov
aas
pushf
xchg
inc
xchg
in
imul
adc
es
call
mov
mov
popf
mov
inc
imul
std
push
inc
add
and
pop
sub
std
pop
dec
inc
adc
and
outsb
mov
xchg
sbb
lods
lret
hlt
sti
xchg
pop
sbb
xchg
repnz
jbe
jne
mov
sahf
push
mov
iret
inc
sti
arpl
pop
lea
cli
lahf
adc
call
or
mov
adc
ficoms
mov
sub
push
fimuls
mov
ss
xchg
push
addr16
push
out
jp
in
fwait
sbb
icebp
cld
orl
loope
fwait
pop
test
push
mov
gs
in
pop
movsb
aas
insl
fidivrs
loopne
xchg
push
jge
push
stc
int3
insb
shlb
sub
cmp
out
dec
mov
jp
xor
mov
and
paddusw
push
enter
mov
mov
rcll
popa
aam
jmp
mov
dec
mov
iret
dec
pop
xchg
repnz
adc
in
adc
leave
fsub
push
loopne
xchg
adc
andl
scas
dec
cmp
fdiv
in
adc
mov
add
test
imul
sete
or
mov
push
shll
and
scas
cltd
or
dec
adc
and
and
inc
shlb
xor
push
dec
rcll
or
ror
pop
js
dec
lods
push
pop
out
add
inc
sbb
push
fcoms
call
and
and
lret
lahf
xchg
clc
iret
or
and
mov
jge
int3
insl
int3
inc
mov
add
mov
push
xlat
mov
in
jle
pop
adc
in
outsl
inc
outsl
insb
test
in
fwait
data16
push
mov
clc
cmpsb
jmp
mov
scas
mov
xor
addl
pop
xor
push
shll
or
sbb
lds
sub
push
adcl
add
inc
xor
imul
push
mov
push
cmp
jle
jecxz
add
cmp
xor
nop
pop
cmc
sbb
sub
xchg
dec
lahf
pop
outsl
sti
cmovno
sub
jge
sbb
lea
test
scas
arpl
cmp
xchg
out
sbb
test
push
sub
dec
push
repnz
outsl
cld
pop
pop
in
sbb
pop
cmp
xor
adc
push
jns
sbb
aad
mov
add
and
add
pop
jmp
fisttpl
jb
data16
inc
icebp
sub
sub
push
sub
mov
pop
decb
jmp
addr16
pop
lea
test
inc
in
mov
mov
clc
mov
fs
jg
dec
pop
jns
xor
gs
ja
sti
scas
xor
stc
jl
add
mov
dec
and
call
add
cmpsl
push
gs
jg
fdivp
push
jp
loope
cmpsb
ret
add
xor
cwtl
mov
iret
cmp
hlt
inc
dec
mov
les
and
sub
pop
adc
push
jno
xor
movsl
cwtl
mov
xchg
mov
push
inc
mov
and
xchg
adc
fildl
pushf
sub
mov
inc
mov
cmc
nop
cmp
pop
mov
jmp
mov
xchg
or
daa
clc
out
and
mov
cmp
loop
dec
inc
inc
xchg
adc
stos
insb
adc
push
scas
sahf
sarl
jae
xchg
leave
dec
scas
popa
subb
or
insl
aam
push
loop,pn
jo
ljmp
dec
test
fists
jg
sub
lea
cmp
mov
cs
fmuls
mov
add
sub
pop
repz
fdiv
call
mov
pop
dec
std
ret
fdivrp
xchg
jp
mov
test
popa
dec
sub
pop
xor
icebp
lods
stos
ret
mov
pop
in
sbb
movsb
stos
inc
and
scas
popa
in
cli
sarl
enter
lret
pop
mov
jp
scas
and
and
popf
pop
ret
mov
xchg
add
sub
jl
repnz
sbb
jmp
push
cmp
xchg
inc
and
mov
mov
sbb
out
or
fisubl
aam
cmp
popa
inc
in
adcl
lea
lock
fwait
add
lcall
fildl
pop
mov
cmp
ljmp
pop
pop
jo
add
adc
sbb
not
aam
push
jle
and
dec
dec
pop
movups
fdivrl
cltd
fisubl
inc
xchg
out
inc
scas
jg
jl
add
adc
in
cmp
lods
je
xchg
repz
mov
gs
inc
ret
imul
xchg
adc
sti
notb
adc
xchg
clc
dec
pop
inc
pop
rcr
push
enter
bndstx
mov
jae
pop
mov
int
push
repnz
lahf
cmpsl
or
insb
into
fdivp
nop
inc
cld
jae
cmp
xchg
or
jbe
sub
fadds
xorl
and
inc
aad
cwtl
jl
fistps
mov
pushf
mov
dec
js
inc
imul
push
jmp
fcmovnu
pop
push
mov
int3
sub
and
pop
outsl
xchg
in
and
jnp
ljmp
sbbb
clc
and
leave
jle
shr
and
clc
add
test
push
mov
jmp
es
pop
fstp
popa
imul
push
and
push
sbb
shll
jae
adc
add
pop
icebp
add
lods
mov
ret
pop
std
cmp
rolb
jg
dec
ja
sti
out
inc
inc
xor
push
out
lcall
or
cs
mov
xchg
cmpsb
push
mov
xchg
cmp
sbb
xor
push
mov
in
stc
dec
adc
ret
lahf
add
pop
in
in
jp
int3
adcb
dec
fadds
std
mov
loop
add
push
mov
mov
movsl
sbb
sbb
iret
or
dec
mov
push
andb
xchg
dec
and
in
lahf
insb
add
dec
icebp
pop
lahf
popa
xor
adc
loopne
leave
test
adc
mov
popf
gs
dec
shll
jno
mov
repz
add
and
std
pop
test
sahf
or
mov
mov
sbb
popa
cmp
mov
rcl
lahf
adc
pop
jmp
sub
dec
jno
push
jmp
rep
inc
push
pop
xchg
adc
or
rorl
xchg
pop
and
or
pop
repnz
lahf
sub
das
add
fcmovbe
hlt
or
pop
fcmovbe
jl
shlb
cld
mov
mov
inc
sub
and
push
jae
vcmpss
mov
or
jle
cmp
jmp
mov
fsub
lds
mov
es
mov
cmp
lods
outsl
aas
mov
insl
xlat
jne
push
pop
sub
fwait
imul
xchg
jge
dec
jg
xor
jg
and
aaa
xchg
cmp
lods
stc
idiv
leave
das
push
mov
sub
or
dec
mov
data16
mov
or
pop
leave
push
jb
jno
adc
lahf
test
les
fcoml
movsl
inc
lahf
sbb
lock
loope
xor
or
push
pop
in
mov
xchg
sub
das
jae
push
lcall
lods
stos
int
mov
pop
xchg
pop
fbstp
adc
test
lods
fsubl
jg
or
xor
mov
test
xor
aam
push
xor
je
fistl
fxam
aaa
jmp
enter
jo
cmp
and
or
je
ljmp
mov
pop
std
daa
js
outsl
push
or
nop
sub
jge
xor
mov
sub
jecxz
add
mov
and
imul
arpl
push
mov
pushf
in
sbb
popa
adc
or
lea
in
add
jo
imul
sub
test
loop
adcb
stos
xor
pushf
repnz
cmp
sbb
fs
mov
icebp
or
xor
or
xchg
mov
xchg
mov
pusha
js
test
rcr
cmpsl
icebp
mov
mov
hlt
pop
pop
fnclex
insb
mov
ret
rol
aam
mov
out
repnz
inc
xorl
cmc
adc
arpl
mov
test
mov
mov
jne
sbb
mov
mov
or
push
push
mov
cmp
mov
sub
or
inc
push
and
sti
not
adc
xor
jno
or
push
out
xchg
imul
je
movsb
ja
or
add
jb
add
mov
stos
sbb
add
add
mov
hlt
lock
and
push
ds
mov
xlat
outsl
cmpsl
xor
mov
pop
cli
in
sbbb
lahf
sbb
inc
scas
shrl
jle
pop
adc
adc
xor
xchg
adc
and
adc
in
fwait
push
push
add
loopne
rorb
rcll
scas
nop
stc
push
xchg
jle
imul
fistpll
add
imul
xchg
xchg
aam
jle
pop
cmpl
add
push
inc
outsl
lds
mov
dec
mov
ret
and
nop
add
push
xchg
inc
inc
sbb
mov
inc
add
xchg
fdivrp
fcompl
push
xor
sub
push
into
dec
popa
mov
test
dec
xchg
invd
jecxz
call
bound
cmp
xchg
sbb
pop
mov
cmp
and
lret
and
fdivl
mov
push
jp
dec
lock
sbb
mov
cmpsl
push
push
fcompl
mov
sbbb
scas
jg
lahf
mov
mov
jns
mov
test
adc
daa
shr
inc
icebp
cwtl
mov
in
mov
or
adc
mov
xchg
push
fdivrs
mov
mov
and
pushf
add
adc
les
inc
cmp
out
lret
scas
dec
or
lds
lret
mov
std
xlat
sti
aad
mov
and
enter
jns
lods
shl
add
mov
inc
xchg
add
inc
in
insb
and
sub
cmp
mov
fcmovbe
adc
and
mov
xlat
pushl
pop
pop
pop
mov
and
pushf
inc
xor
aad
cmp
bound
mov
mov
pop
fimuls
jae
add
or
push
inc
ja
sarl
add
js
pop
mov
jl
push
test
push
dec
fildll
loop
loop
imul
dec
push
sub
notb
jg
popf
popa
frndint
xor
pop
mov
pushf
push
mov
jp
pop
inc
pop
lret
in
or
fists
mov
cmp
add
sub
pop
xchg
es
cmp
jl
testb
and
insb
repz
xchg
xchg
sub
sbb
dec
call
cli
mov
cmp
inc
or
dec
push
pusha
mov
sbb
repnz
stos
sub
mov
and
jge
outsl
out
push
out
loop
sub
pop
loope
jge
sbb
std
cli
int
cmp
aam
inc
cmp
lods
push
mov
push
iret
jge
pop
pop
pop
stos
cmpsl
cmpb
jmp
out
fadds
xchg
mov
jbe
xor
pop
or
lret
xchg
push
sbb
push
movsb
and
cmpsl
mull
adc
daa
or
hlt
mov
push
adc
call
lret
seta
pop
sbb
xchg
cmp
clc
cmp
mov
icebp
icebp
bswap
inc
loope
repnz
jle
or
cmp
shrb
lods
mov
test
cmc
add
mov
jge
clc
cmp
cmp
test
rcl
push
ss
fisubrs
les
ret
and
sub
xchg
aas
leave
mov
movsb
stos
push
add
sub
lods
sub
cmpsb
dec
adc
test
les
int
pop
popf
or
frstor
sbb
aas
sbb
rorl
adc
aad
xor
pop
mov
pop
sbb
inc
push
imul
std
lcall
push
xor
imul
gs
cwtl
adc
cmc
pop
xchg
int3
jnp
outsb
jnp
mov
loope
or
rcl
clc
mov
adc
cwtl
imul
xor
movl
popf
mov
fs
dec
neg
dec
adc
mov
pop
push
mov
or
out
aas
or
in
add
scas
insl
jecxz
push
mov
sub
les
cmp
xchg
loope
adc
mov
rcl
xchg
mov
inc
test
xchg
imul
mov
inc
xor
stos
sub
jge
push
inc
mov
or
xchg
push
out
and
into
and
loope
fisubrl
sbb
mov
xchg
jecxz
or
mov
imul
mov
das
xor
cs
pop
fucomip
js
mov
movsl
mov
sub
xor
push
adc
pop
add
rcl
les
push
in
xchg
stc
mov
lock
fwait
imull
pop
jl
dec
xchg
dec
scas
add
adc
cmp
jmp
scas
shlb
lcall
dec
mov
nop
xchg
cmpl
jmp
out
dec
test
outsb
push
add
shll
lea
btc
sti
or
jl
bound
out
mov
in
fisubl
jb
aam
fwait
cli
push
cmp
into
repz
add
pop
xor
das
rclb
push
andl
adc
mov
jb
fs
jo
scas
xlat
shrb
xchg
or
outsb
sbb
push
cli
in
push
popf
leave
mov
mov
push
outsl
pop
test
test
test
jbe
bound
adc
in
dec
dec
rorl
mov
mov
or
adc
pop
int3
cmpsl
push
lret
add
jno
clc
fxch
mov
pop
cmp
sbb
call
das
scas
push
add
fistps
aad
shrl
leave
icebp
push
fildll
enter
inc
cs
xor
lds
aad
xchg
push
cltd
inc
mov
mulb
inc
xlat
mov
mov
cmp
xchg
scas
call
scas
cli
popl
push
icebp
dec
je
out
inc
mov
rep
pop
inc
es
insb
fidivrl
or
in
shll
xchg
cli
pop
sti
inc
jb
xchg
xor
int
lcall
or
mov
rcr
mov
lcall
inc
int3
js
out
insl
mov
rolb
push
pop
fbld
dec
cmp
enter
aam
inc
pop
fwait
clc
push
jmp
leave
mov
addl
or
test
mov
insl
jne
and
pop
cs
mov
cmp
adc
cld
xchg
add
push
lahf
jb
shrl
push
xchg
adc
push
adc
ds
mov
sbb
push
sub
fwait
xchg
sub
push
cs
es
test
xchg
iret
push
inc
jo
push
mov
sub
cmp
data16
sub
scas
dec
loopne
lods
mov
pusha
push
mov
mov
arpl
or
xor
push
insl
mov
pop
aas
out
mov
sarb
add
fcomi
adc
cwtl
push
inc
cmp
ljmp
out
dec
loope
inc
js
sbb
sbb
pop
sbb
inc
cmpl
es
mov
lds
repz
and
dec
push
mov
push
fisubrl
sti
fisttps
mov
pop
stc
jmp
stos
mov
in
lock
cmc
sbb
mov
add
add
add
mov
int3
mov
out
adc
mov
adc
movsb
inc
xchg
inc
sahf
cmpl
stos
push
xorl
or
jecxz
ljmp
fildll
es
or
cmpsb
pop
popf
and
bound
inc
daa
push
test
ret
js
lods
push
push
outsb
ja
sub
add
movsb
nop
stos
xlat
fwait
mov
mov
mov
xor
fmuls
push
sbb
dec
xlat
cs
push
mov
lock
push
cld
jp
cmc
mov
cld
adc
insl
std
xor
out
lret
sbb
mov
cltd
pushf
dec
jno
in
shrl
mov
js
in
sti
orb
dec
outsb
pop
inc
jb
adc
xchg
and
repz
push
repz
cmpsl
xor
das
pop
pop
leave
dec
les
je
jp
inc
and
inc
xchg
jb
mov
addl
sbb
ret
sbb
jge
loope
cwtl
adcl
ret
xchg
mov
cmp
add
orb
icebp
or
pop
arpl
cmpsl
popa
outsl
push
dec
in
bnd
cmp
cmp
push
add
stos
cmp
xchg
push
or
aam
das
jmp
jge
jg
in
mov
jne
test
ljmp
ds
push
ljmp
dec
sub
sahf
cmp
and
mov
cmp
xor
mov
cs
leave
fwait
pop
inc
add
frstor
inc
les
jbe
loope
lock
stc
or
lret
xchg
cs
push
mov
mov
add
dec
lret
inc
push
xorl
aad
jg
and
sbb
cmp
sbb
pop
es
imul
jecxz
cmp
cmp
insl
mov
pop
sbb
or
pop
and
push
cmpsb
leave
shl
pop
cmpsl
jp
and
iret
ret
repz
int
mov
adc
mov
or
mov
and
js
js
push
mov
jno
popa
popf
cltd
pusha
lds
jp
mov
xor
je
fcoms
add
ds
ss
sbb
into
push
rcll
dec
dec
shrl
sbb
or
xchg
pop
adc
sbb
leave
ret
outsb
mul
bound
leave
cli
pop
xor
fiaddl
push
xor
incl
lock
adc
mov
mov
pusha
sub
push
push
addr16
jmp
aam
test
inc
addr16
dec
dec
jl
ror
in
jp
fstl
loope
xchg
xlat
jmp
sub
cmp
pop
test
insb
and
mov
mov
stos
sbb
mov
pop
pop
inc
mov
jp
jg
mov
imul
gs
mov
stc
loope
mov
xchg
ss
ret
insl
mov
mov
lea
or
jmp
inc
insl
ljmp
mov
pusha
mov
popf
add
ret
dec
lds
loope
lret
push
lahf
xchg
sarb
cmp
xchg
and
push
lahf
lcall
lea
fwait
sub
into
and
add
sbb
ret
ffreep
adc
jne
rep
and
out
inc
cs
fs
mov
add
push
dec
mov
jne
xchg
pop
out
or
adc
jg
pop
or
out
fnsave
scas
mov
push
mov
pop
lods
xorb
push
jmp
lock
fwait
xchg
push
pop
repnz
int3
loope
clc
sbb
pop
adc
movl
xchg
mov
sub
cmp
mov
xor
ds
sbb
divb
pop
ja
scas
mov
insb
mov
add
push
paddd
sbb
xor
shl
mov
into
or
outsb
stos
aas
mov
fnstcw
cli
outsl
aam
lahf
fidivs
jbe
shlb
jo
push
xchg
pop
xchg
mov
outsb
mov
adc
in
jb
jno
sbb
mov
test
jno
mov
adc
jge
xor
jp
lcall
xor
lret
mov
stos
jo
rclb
scas
and
icebp
or
mov
mov
lods
insb
cli
out
mov
and
and
std
hlt
and
in
bnd
std
dec
cwtl
dec
idivb
in
repnz
std
mov
pop
push
orl
out
nop
loop
mov
add
fiadds
in
and
and
repz
add
sbb
add
leave
imul
jne
lret
xor
in
out
fs
and
sbb
xor
adc
mov
jns
mov
aas
insl
mov
xor
jne
int3
push
jmp
mov
jmp
lahf
mov
push
mov
in
xlat
outsl
ficoml
gs
adc
xchg
adcb
mov
add
jo
repnz
or
repz
jge
pop
repnz
push
arpl
mov
push
pop
xchg
aam
pushf
aas
mov
xor
ljmp
pop
xorl
ss
adc
pop
jb
fnsave
jo
sub
insl
dec
mov
test
test
shll
ss
pop
arpl
jb
repnz
int3
xor
push
outsl
lds
dec
mov
xor
int
xchg
shll
rcrb
pop
fcomip
sbb
lahf
dec
sbb
out
xor
stos
insl
push
push
sahf
cmpsl
subl
cmp
xor
cmp
xor
nop
push
test
push
xchg
pop
lahf
repnz
ja
mov
pop
in
dec
pop
mov
stos
xor
bound
into
add
mov
cmpsl
jmp
or
xor
xchg
loopne
incb
into
sub
inc
mov
fcomps
mov
movsb
mov
inc
xor
outsl
or
mov
mov
lock
inc
mov
icebp
mov
mov
sbb
les
in
arpl
push
aam
or
mov
lds
mov
stc
cmp
add
jl
and
das
and
cmpsl
mov
js
fistl
xchg
push
cs
jno
ds
push
inc
inc
pop
rcrb
mulb
mov
cmc
jp
inc
int
inc
in
mov
pop
push
aad
shr
mov
and
mov
mov
aad
adc
cmpsb
mov
cmc
mov
mov
seto
add
xor
inc
cmpsb
inc
xchg
xor
cltd
in
cwtl
rclb
mov
jge
aad
lods
mov
shrl
lahf
arpl
mov
add
mov
shlb
cmp
fs
aas
ja
arpl
jne
or
ja
fwait
mov
out
je
pop
xor
pop
mov
inc
or
xchg
mov
stos
mov
leave
pusha
or
leave
decl
dec
adc
imul
add
pusha
test
and
and
jecxz
xor
and
leave
inc
fists
mov
scas
ds
sbb
les
test
and
movsl
test
lret
jno
cli
cs
sbb
outsl
mov
xchg
movsb
nop
pop
pop
bound
js
insb
mov
cltd
or
cmp
push
sub
cwtl
push
mov
out
stos
jmp
notb
sahf
xchg
jmp
push
jns
fnstcw
sbb
insl
data16
cmpsl
push
cmp
dec
aas
gs
xorb
xor
sub
cmpsl
push
mov
inc
insb
adc
xchg
pushl
icebp
insl
pop
jle
das
xchg
xor
inc
ret
stc
inc
rcl
inc
pop
fwait
push
jae
push
and
add
jg
xchg
dec
push
std
das
mov
dec
arpl
in
aaa
pop
push
bound
ja
loope
adc
outsl
shll
test
mov
adc
inc
mov
push
out
fs
pop
and
mov
ds
adc
repz
sub
arpl
fiadds
mov
fisttpll
inc
mov
mov
lcall
pop
enter
fistpl
into
sbb
sub
jmp
jbe
hlt
and
push
cmp
add
js
ret
jno
and
lcall
inc
mov
dec
xchg
in
or
flds
mov
jl
adc
je
xor
pushf
test
xor
lds
jmp
push
pop
ret
rcrb
gs
out
jno
loop
add
in
or
push
jl
popf
dec
icebp
and
popf
jmp
jmp
into
cmp
push
shlb
mov
fildl
add
sbb
fwait
nop
mov
in
out
addr16
cli
jns
sub
and
xorl
into
xchg
or
sti
jnp
push
mov
stos
xchg
jbe
cld
andl
cmp
dec
sahf
inc
je
sub
mov
call
or
imul
shll
mov
lahf
stc
push
pop
fwait
sub
mov
jb
add
rorl
mov
lret
daa
sub
lcall
scas
inc
mov
push
shlb
push
mov
cmp
idivb
sub
addr16
dec
xor
mov
jae
fsubl
mov
mov
repz
dec
inc
js
jo
mov
sub
popa
mov
sub
mov
pop
dec
popf
inc
out
sti
jo
pop
adc
cmpsb
stos
xlat
and
add
aad
inc
inc
cmp
push
pushf
and
push
test
or
dec
scas
sub
call
dec
sub
inc
push
mov
cwtl
loop
shl
call
shl
cwtl
fdivs
pop
scas
outsb
inc
nop
xchg
mov
mov
fs
nop
out
aad
adc
inc
fistl
notb
and
mov
fmulp
and
aaa
loope
mov
mov
add
pop
sub
xchg
imul
sub
pop
cmp
jp
stc
mov
or
sub
add
repnz
lcall
sub
sti
cld
xlat
or
bound
repnz
insl
push
adc
sub
lret
aad
adc
jge
push
icebp
push
fildl
sbb
loop
in
pop
xchg
je
add
test
push
xor
jl
call
xchg
test
and
pop
mov
mov
imul
sahf
cmpsb
inc
notb
push
fldt
cmpsl
xor
repz
cmp
out
int3
jg
pop
mov
int3
imulb
imul
inc
push
lahf
mov
pop
mov
inc
sti
jle
xor
adc
outsb
into
sbb
adc
das
jns
cmp
dec
jb
fstpl
int3
or
xorl
pop
out
mov
je
rol
rorl
inc
in
dec
test
call
pop
stc
xchg
mov
ret
xor
jns
lods
add
sub
pop
lods
out
shrl
pop
pop
dec
push
push
gs
cmp
mov
xor
jns
das
into
mov
dec
jno
mov
push
jnp
push
daa
or
aam
xchg
addr16
out
fidivrl
xchg
and
test
mov
out
addr16
jo
bound
pushf
cmpsb
stos
mov
or
lds
or
scas
xor
rcl
lret
xchg
or
mov
sub
xchg
jno
pop
cltd
aas
andl
fdivrl
inc
add
sbb
int
sub
or
inc
fcomps
sub
imul
clc
mov
sub
or
push
dec
sbb
rorb
jmp
inc
dec
push
push
cmp
mov
std
mov
mov
insl
adc
aam
add
add
enter
je
cld
stos
push
pop
push
inc
std
mov
lea
sbb
ss
dec
stos
int
jmp
inc
inc
and
mov
aam
test
pop
jge
fs
jle
aam
cmpsl
test
lcall
mov
mov
in
sub
push
mov
outsb
xor
or
loopne
mov
aas
mov
sar
jmp
lret
dec
pushf
xchg
imul
jbe
xor
push
pusha
and
and
in
shl
clc
xor
lds
loop
mov
adc
and
adc
jl
jbe,pt
hlt
test
fimuls
adc
pusha
xchg
pop
arpl
jle
xchg
jmp
push
lret
rorb
cmpsl
xchg
xor
test
push
sbb
dec
pusha
cmp
or
rcrl
ud1
insb
jo
popa
jle
pop
nop
push
cmp
nop
sub
xchg
mov
andl
testl
mov
mov
inc
inc
test
mov
aaa
sub
nop
add
imul
push
sbb
xlat
fmuls
movsl
xchg
pop
std
fldt
mov
jae
data16
push
jge
les
loop
test
test
cmp
jbe
cs
loop
sbb
xor
into
inc
xor
lea
in
xchg
pusha
shll
mov
cmp
jmp
aam
cmpb
test
and
adc
lret
xchg
cmpsb
rcll
push
shlb
fsubrl
mov
rcrl
push
cmp
in
and
xchg
sbb
push
daa
je
out
inc
sub
add
sbb
loop
int3
outsl
cmc
outsl
jbe
bnd
cmp
inc
data16
mov
push
and
sub
test
push
fbstp
push
pop
add
pop
sub
hlt
in
mov
xor
mov
adc
or
dec
lahf
jl
fidivs
push
inc
mov
rolb
push
mov
xor
lahf
mov
out
sub
xchg
jecxz
subl
sub
cmp
mov
js
stos
cmp
pop
test
lods
shrb
or
dec
ljmp
in
jae
jno
test
and
fdivrl
xchg
es
mov
pop
sub
shll
add
insl
mov
xchg
cmp
push
jge
ds
jb
rol
mov
test
mov
mov
iret
sbb
in
adc
popf
subl
repz
xchg
vmovntps
dec
jge
cli
jns
mov
aam
fcmove
hlt
dec
pop
in
arpl
ret
jl
fisttps
xor
jne
push
cmpsl
inc
and
mov
popa
pop
fwait
aas
mov
mov
jl
dec
das
mov
pop
icebp
shrl
add
fmuls
shl
xor
push
out
stos
ljmp
inc
int
dec
aaa
sbb
and
inc
fldenv
enter
cmc
ja
addr16
ss
out
dec
mov
ds
inc
or
cmpsb
cs
pop
orl
pop
testl
lods
ja
dec
fwait
add
xor
subl
adc
pop
jle
fs
ljmp
mov
clc
jae
sarl
fmull
es
push
mov
es
imul
test
mov
std
jmp
adc
fsubl
mov
es
pop
lods
movl
lcall
test
push
mov
int
xor
push
xchg
mov
fucomip
or
loope
sbb
mov
sub
dec
cltd
mov
pop
pop
push
cmc
and
shll
fisubrl
int
push
pop
call
mov
pop
lea
mov
pop
fisubrl
adc
lret
hlt
xchg
add
movsl
repz
sbb
nop
sbbl
mov
mov
cmp
adc
pop
dec
adc
fcomip
jno
loope
nop
es
and
das
hlt
subb
popf
xchg
cwtl
in
add
mov
push
cmp
dec
out
mov
jnp
xchg
out
lock
sub
jb
shlb
jae
xchg
cs
cmp
popa
pop
jg
scas
mov
cld
jne
test
xchg
stos
sub
inc
pop
outsb
push
inc
mov
push
dec
cwtl
ja
cld
mov
sahf
add
imulb
pop
in
aad
icebp
andb
call
jo
aam
call
sub
sub
mov
pop
xor
cmp
lcall
sti
jno
subl
loop
sbb
push
push
std
push
scas
insl
cli
rorl
sub
loop
or
sub
pop
push
ds
in
sub
daa
cld
add
in
fnsave
aad
cmpsl
cmp
popa
cmpsb
cwtl
inc
lret
aaa
xchg
pop
or
mov
jb
test
sbb
adc
scas
adc
sbb
in
or
pop
pop
jmp
inc
int3
mov
ja
pushf
std
push
sub
push
adc
pop
fwait
adc
pushf
mov
rcrl
xlat
push
bound
mov
ljmp
and
pusha
sarl
xchg
test
mov
call
out
sub
add
pop
xchg
dec
addr16
enter
xor
or
test
inc
movb
xchg
xor
es
fwait
add
add
xchg
sahf
dec
dec
jo
out
scas
jle
std
dec
xor
push
push
sub
test
and
xchg
mov
sub
fisubrs
mov
pop
add
push
sub
int
mov
outsl
cmp
mov
jle
test
mov
jmp
inc
shll
loope
roll
cltd
fadd
loop
mov
scas
xchg
mov
test
inc
lahf
pop
add
lock
dec
jecxz
out
jmp
jb
mov
popf
pop
adc
xlat
cmp
js
pushw
cltd
popa
dec
add
xor
adc
pop
sub
das
shrl
or
add
cld
dec
mov
or
repz
add
pusha
push
gs
sbb
les
cmp
addr16
aas
arpl
mov
lea
arpl
cmp
mov
cltd
fsts
loop
adc
pop
pop
sarb
es
fwait
mov
lahf
out
dec
jg
call
in
jge
int3
push
push
lock
inc
jl
movsl
sahf
fiaddl
xchg
dec
mov
jno
scas
pop
sbb
out
dec
outsl
cmp
pop
mov
icebp
rolb
sbb
jno
movsl
mov
add
sbb
ja
mov
aaa
jl
movsb
xor
mov
js
in
mull
cmp
and
add
jno
jmp
xor
lods
mov
aas
in
lods
cmp
and
cmpsb
and
pop
push
ja
push
rorb
notb
mov
outsb
stos
and
pop
and
nop
leave
mov
es
jo
ficompl
jl
jo
mov
stos
mov
fdiv
mov
sti
lcall
push
push
xor
pop
pop
and
adc
orb
pop
mov
add
test
imul
push
add
inc
add
int3
scas
sub
hlt
cmp
test
dec
and
mov
xor
dec
push
push
loopne
xchg
xchg
mov
test
nop
mov
popf
into
mov
add
xor
push
add
add
mov
ljmp
jne
cwtl
mov
out
lea
cltd
jne
jae
in
iret
inc
iretw
sbb
pop
insl
fs
pop
movsl
mov
sub
and
enter
int3
mov
std
inc
mov
pop
cmpsl
inc
loopne
imul
xor
subl
push
add
dec
or
fld
pop
pop
adc
jno
pop
popa
push
test
loope
shrd
jmp
pop
addb
and
mov
aad
imul
out
fnstcw
fnstsw
outsb
mov
sbb
pop
pop
cmp
ja
jmp
ss
mov
sbb
cmp
aas
mov
lock
jmp
xor
stos
std
push
dec
pop
out
fwait
adc
test
ret
std
notb
ja
ss
dec
push
adc
add
cmp
push
push
and
mov
pusha
and
push
cmp
mov
xor
pop
jl
rcrb
pop
call
dec
mov
cmpb
fistpl
mov
sbb
push
prefetchwt1
es
jecxz
add
test
jnp
in
data16
mov
inc
scas
adc
add
cmp
lods
sbb
and
pop
xchg
push
and
or
sbb
add
sbb
inc
xor
divl
cwtl
into
push
test
xchg
in
ret
rcrb
ljmp
mov
xor
push
iret
out
orl
push
inc
cltd
out
and
mov
mov
rolb
fistps
and
mov
imul
loop
sbb
xchg
jp
jae
int3
in
ss
mov
lcall
push
jle
out
sbb
repnz
pop
cmc
mov
or
mov
and
out
xor
fisubs
aad
add
push
adc
sub
cmp
adc
rolb
xor
outsl
sbb
loopne
mov
les
xor
sbb
mov
cmp
mov
inc
mov
scas
out
addr16
dec
inc
ficompl
call
mov
lahf
inc
cmc
ss
imul
inc
cmp
cwtl
lock
cmpsb
test
scas
int
int
fcmovnb
aam
fistpll
das
into
adc
loope
mov
mov
sbb
mov
pop
pop
jle
fisttpl
xor
mov
mov
imul
sbb
popf
test
popa
outsb
insb
mov
inc
pop
fiadds
ja
ret
ja
inc
int
loopne
fisttpl
adc
jno
lret
push
andl
xchg
movsl
cltd
mov
jge
mov
push
push
cli
jge
cmp
xchg
out
lahf
cmpsl
les
test
and
xorb
dec
xchg
jl
std
and
test
cmpsl
cmpsb
in
pushf
and
idivb
pop
test
je
mov
and
sbb
lret
and
push
mov
jecxz
push
and
mov
push
push
movsl
pop
or
je
jne
xor
test
mov
test
hlt
mov
or
bound
lahf
xchg
mov
out
sbb
scas
test
fmul
das
xor
and
jg
data16
pop
clc
imul
inc
mov
outsb
mov
pop
inc
pop
notl
xchg
enter
insb
xchg
sbb
push
aad
or
popa
testl
jmp
jmp
std
jmp
std
xchg
inc
testl
fcmovne
jb
mov
xor
out
or
gs
cmp
pop
shlb
mov
mov
sbb
mov
mov
cmp
test
orl
repz
jle
sub
out
push
jmp
mov
lock
andb
mov
cmp
fimuls
cld
mov
jno
jmp
mov
lock
test
cltd
lods
pop
push
add
pop
push
icebp
inc
mov
xor
xchg
es
mov
lods
push
push
dec
loop
shl
sub
sbb
mov
add
flds
adcb
or
jnp
aam
lds
scas
push
jb
lods
jne
negl
cld
jmp
mov
mov
add
popa
inc
into
mov
mov
iret
loop
aam
daa
stc
dec
xchg
into
pop
xchg
cmp
mov
xlat
addr16
scas
inc
and
mov
test
cli
jb
jae
xor
fs
sti
sti
mov
dec
adc
dec
cmp
in
mull
cwtl
cmp
mov
in
aam
add
or
dec
dec
daa
inc
jle
jb
lcall
pcmpeqd
xor
xlat
ficoms
pop
and
movsl
adc
mov
dec
rcl
lret
hlt
nop
and
jnp
data16
xchg
pop
outsb
dec
addr16
or
push
pop
sub
jl
or
or
add
sti
dec
pop
subb
movsb
mov
inc
mov
mov
xor
fisttpl
je
jg
shll
xchg
outsb
scas
sbbb
jno
mov
loop
cmp
shlb
push
fs
inc
mov
lock
mov
aas
aam
call
clc
push
sub
inc
movsl
lahf
and
xchg
in
cmp
ljmp
out
inc
dec
sub
fsubs
add
cmp
mov
mov
push
dec
sub
xor
jp
dec
jae
add
pop
mov
test
clc
jae
mov
jns
cmc
sbb
enter
and
test
adc
les
shlb
aaa
fdivl
les
xchg
addr16
scas
push
testl
mov
fsubrs
stos
push
test
enter
push
and
mov
out
inc
pop
mov
dec
xchg
popa
mov
or
ret
add
push
cmp
jae
rcr
bound
gs
jns
das
xchg
push
pop
xor
add
adc
or
out
lock
sbb
mov
out
cmp
movsb
sbb
mov
jp
lods
hlt
sub
adc
adc
jmp
std
or
jle
xchg
shll
movsb
cmpsb
aad
or
xchg
jmp
and
mov
dec
adcb
sbb
pop
jae
das
cli
popf
adc
mov
ss
loop
scas
lret
shr
pop
jns
jg
decb
sarb
jge
xor
add
inc
pushf
pushf
pop
dec
fsubrs
lock
and
mov
js
inc
adc
divb
mov
or
aaa
mov
imul
test
jnp
jecxz
jecxz
push
cmp
jns
sbb
xchg
adcb
cwtl
mov
cld
decl
nop
lcall
andl
pop
aad
aas
sub
adc
into
and
xor
xchg
lcall
sbb
mov
mov
call
or
jb
dec
sti
lods
shlb
sbb
popf
data16
inc
addr16
inc
pop
idivb
push
and
int
xchg
test
adc
push
fists
lods
add
repnz
pop
inc
xchg
std
cmp
push
ljmp
lahf
arpl
cld
std
rep
ds
test
sub
gs
and
je
out
xchg
mov
movsb
xor
jno
scas
mov
mov
push
es
rorb
iret
ret
and
push
mov
push
jae
out
adc
dec
mov
sarb
add
dec
push
loop
sbb
mov
xchg
into
dec
mov
pop
out
movb
pop
mov
lods
aam
nop
inc
ljmp
outsl
xor
cmp
add
xchg
xchg
xlat
test
mov
inc
call
out
in
es
add
fnsave
mov
mov
adc
push
xor
jge
dec
sbb
pop
jl
xor
push
dec
sbb
inc
int3
mov
mov
dec
iret
mov
std
xchg
lock
pop
dec
cmp
sub
cmp
maskmovq
testl
xor
cmp
pop
addl
add
push
ficomps
push
cmp
hlt
dec
xchg
xchg
mov
into
pop
into
or
jbe
cmp
xchg
sarb
push
inc
rol
adc
lahf
cmp
cmc
lock
add
sbb
cmpsb
jnp
mov
xor
pop
pop
xor
pop
loope
mov
push
cmpsl
mov
or
mov
mov
leave
mov
or
sbb
cwtl
cmp
aaa
leave
loopne
cmpsl
call
mov
mov
ljmp
in
sbb
mov
lea
mov
sub
mov
out
push
and
mov
in
xchg
dec
sbb
pop
jg
jp
xor
push
lods
scas
cmp
enter
lds
jno
and
xchg
push
add
in
dec
and
mov
insl
pushf
pop
and
inc
sub
scas
or
adc
inc
cmpsl
pop
fistps
lea
cltd
push
daa
sub
pop
inc
jne
outsb
mov
imul
inc
out
pop
pop
cmp
jp
sub
je
pushf
jns
mov
add
je
sarl
adc
or
xor
cli
jns
jae
or
popf
sub
inc
stc
mov
push
add
cmpsl
sub
mov
fwait
ljmp
xor
mov
fndisi(8087
add
sub
outsl
ljmp
adc
push
sub
loopne
pop
scas
mov
adc
dec
jmp
push
neg
inc
jmp
testb
add
movsl
lret
leave
adc
cmp
and
sub
sbb
lods
sub
scas
mov
cmp
push
xchg
jp
ja
ret
jae
jnp
jecxz
fisubs
mov
out
scas
dec
pop
xchg
into
pop
bound
insl
or
insb
loop
adc
pop
push
cmpsl
inc
fcmovnbe
adcb
sbb
pop
lock
pop
mov
filds
repz
fldenv
mov
push
shll
outsl
xor
mov
mov
add
aad
mov
adc
jo
push
aas
shlb
push
insl
cmp
adcl
push
dec
cmp
into
hlt
rclb
and
je
adc
dec
inc
lret
mov
jns
js
xor
sbb
clc
pop
inc
inc
push
shlb
mov
dec
mov
enter
cmp
cmp
inc
lds
and
pop
in
xor
hlt
jecxz
fistpl
push
sbb
push
and
add
jo
adc
sbb
inc
or
or
mov
mov
mov
ret
scas
pop
lods
movb
pop
scas
pushf
cmp
jg
jecxz
mov
and
jnp
xlat
inc
cmp
pop
enter
mov
xchg
or
es
mov
sbb
or
mov
test
ret
inc
mov
ss
ret
popf
lods
dec
cli
enter
xor
cmp
or
fcmovne
lret
cmc
mov
inc
cs
dec
mov
xor
mov
pusha
sub
sbb
pusha
adc
loope
inc
xchg
push
fisubs
inc
rclb
dec
mov
sysexit
decb
subl
jae
aad
xchg
mov
dec
push
add
test
daa
add
push
xorb
jg
scas
cmp
push
mov
movsl
push
inc
mov
leave
dec
push
xor
xchg
std
inc
shlb
call
or
jno
adc
rol
push
inc
outsl
cli
enter
fldenv
shll
lahf
cltd
dec
push
sahf
cwtl
dec
adc
lods
dec
xchg
jb
test
mov
or
loopne
sbb
mov
adc
pop
xchg
jno
dec
les
and
pop
ret
mov
bswap
mulb
xchg
mov
das
mov
repz
mov
popf
cmp
dec
cli
jge
imul
sub
enter
sar
clc
add
xchg
insb
push
push
jl
and
pushf
mov
repz
add
adc
into
nop
iret
pop
cmp
sbb
faddp
push
insb
test
repz
jbe
stos
sub
shll
xchg
sub
push
cmp
leave
add
mov
fidivs
rorb
scas
xchg
push
stos
cmp
sbb
jne
ja
xor
or
dec
jle
or
ret
leave
arpl
jecxz
outsl
adc
mov
ret
xor
jmp
orb
sbb
bt
ret
loopne
dec
sti
fists
mov
pop
pop
jo
pop
xor
lret
enter
inc
dec
in
imul
push
dec
mov
mov
sub
rcrl
dec
out
repnz
mov
je
icebp
and
or
inc
push
push
mov
movzbl
cmp
rclb
stc
add
shll
jns
adc
test
mov
jecxz
inc
lods
xchg
imul
insl
out
inc
sbb
test
adc
mov
imul
xchg
sbb
xor
lcall
addr16
std
jl
jge
adc
cmpsl
jbe,pt
leave
addr16
rcl
push
in
push
jno
dec
jo
lahf
mov
mov
es
xchg
push
mov
push
jp
inc
loopne
pushf
movsb
sub
cmp
pop
cwtl
dec
adc
lods
lret
pop
test
shll
mov
sub
dec
fbld
or
sub
cmp
adc
leave
js
sub
adcl
mov
pusha
aad
adc
ret
div
mov
stc
inc
jo
es
sbb
imul
rorl
scas
dec
and
mov
cmp
xor
loopne
scas
cmp
loope
and
lret
insb
ficompl
dec
sbb
jcxz
cmp
or
std
cmpsb
mov
push
jle
fsubr
icebp
in
and
icebp
cli
mov
mov
lds
dec
ja
xchg
fistps
jge
xchg
jg
jmp
cmp
add
jle
arpl
cltd
pop
mov
daa
inc
pushf
push
pop
mov
jp
pop
dec
mov
and
push
test
and
xlat
aad
loop
rsqrtps
cmp
fcoml
lea
dec
rcll
adc
inc
sub
lods
push
mov
pusha
aaa
pushf
inc
cmp
mov
adc
out
xor
xor
inc
bound
push
lret
insb
int
loope
fsubp
ret
aas
push
aam
sbb
mov
popf
sub
or
sub
sbb
fstpl
enter
sbbb
inc
fistl
cmp
xor
jl
outsl
xor
push
and
pop
xchg
jnp
inc
xchg
cmp
popf
arpl
adc
scas
sbb
les
xor
ficomps
call
dec
loopne
cmpsb
fstpt
inc
je
mov
dec
sbb
insb
lahf
push
xchg
dec
jp
jno
push
std
and
in
ret
movsl
fistpl
jmp
cmp
jmp
adc
into
jb
fisubrl
jno
dec
sbb
dec
adc
lret
sbb
cwtl
mov
jmp
pop
sbb
xlat
mov
or
and
in
stos
mov
xor
js
out
sti
jp
test
xchg
pop
jne
mov
lret
jge
xor
jo
dec
dec
shll
js
jo
jge
push
cmp
adc
gs
cli
mov
out
dec
dec
lcall
pop
inc
aas
cltd
into
mov
cmpsb
cltd
mov
les
inc
movsb
iret
adc
dec
inc
cmp
iret
lahf
stos
ffreep
dec
dec
sub
daa
loopne
ja
mov
loop
adc
mov
add
or
mov
or
pusha
sarb
iret
leave
das
pusha
pop
mov
adc
and
addr16
mov
dec
inc
sbb
or
dec
sbb
enter
adc
sbbb
add
dec
cmp
jae
jecxz
mov
loopne
jno
xlat
ds
movsb
leave
push
rdpmc
clc
insb
mov
mov
inc
xchg
push
push
movsl
es
add
xchg
pop
lods
clc
cmp
cmp
clc
fdivl
inc
pop
lret
je
mov
xor
fbld
je
pop
push
xchg
idiv
pop
aam
xorl
dec
sub
fistpl
mov
popa
lret
loopne
mov
inc
dec
out
repnz
fwait
inc
sub
je
pop
mov
aad
jl
ret
mov
jg
ret
add
and
in
mov
fstsw
xor
lahf
fsubr
push
outsb
cmp
ljmp
mov
pushf
xor
ficoml
lock
or
xchg
scas
cli
call
aad
lock
sub
aad
fwait
outsl
mov
fldt
in
push
repz
aas
xchg
in
in
rclb
cmc
or
xchg
sub
mov
frstor
cmp
in
arpl
roll
sbb
inc
sbb
jb
push
pop
orb
fndisi(8087
sbb
cmp
xor
dec
adc
jp
mov
sbb
incl
adc
adc
out
aas
lret
aad
stc
inc
shlb
les
lahf
clc
adc
mov
cmp
or
push
icebp
push
add
call
add
cltd
mov
push
adc
lods
jg
dec
inc
add
cmp
lahf
aas
sub
inc
outsl
jno
sub
scas
add
fwait
push
ds
clc
gs
stc
bound
inc
add
or
dec
sbb
mov
xchg
addl
push
adcl
cwtl
js
gs
push
lcall
pop
add
and
xchg
mov
push
pop
sbb
fwait
mov
mov
inc
clc
loopne
sarb
jmp
jo
pop
pop
inc
sbb
dec
fmull
sbb
sub
mov
mov
mov
jne
mov
ret
icebp
mov
cs
push
ljmp
lcall
in
out
sbb
out
insl
cmpsb
fs
dec
jmp
loope
idivl
cmpsb
jne
sub
xchg
call
iret
adc
and
dec
or
out
mov
insl
cmc
inc
jecxz
scas
lock
int3
jo
xor
pusha
add
insl
mov
pop
push
dec
add
xchg
push
fistps
xchg
cmp
jne
push
and
mov
dec
cmpsb
enter
mov
iret
mov
rcll
scas
pushl
aaa
das
nop
movsb
sarb
add
jge
out
popf
inc
or
mov
and
xor
xor
sub
push
test
mov
cli
enter
lret
pop
add
mov
in
pop
pop
sbb
lcall
adc
insb
stc
mov
imul
adc
pop
ljmp
fistpll
dec
test
add
ja
das
stos
ds
adc
pop
cld
shlb
inc
dec
mov
mov
pop
add
imul
mov
xchg
push
sti
shlb
repz
adc
pop
jmp
dec
pop
jp
pop
mov
mov
mov
lock
mov
out
inc
pop
hlt
push
push
loop
inc
xchg
xchg
cmp
ret
jbe
fbstp
push
adc
xchg
xchg
push
xlat
inc
ss
xchg
or
cmpsl
add
add
and
adc
pusha
es
imul
inc
xor
sbb
cmp
das
adc
mov
xchg
cld
lds
nop
fldl
xchg
lcall
lret
push
cmp
call
aaa
xor
and
push
sub
es
push
ss
push
inc
mov
fcomip
pop
inc
cmpsb
cwtl
sub
cmp
std
mov
adc
and
jbe
aad
lods
pushl
inc
bound
aad
adc
pushf
lahf
sarb
lds
in
out
movsl
insl
ret
fdivr
mov
lcall
sahf
iret
or
cmc
and
cmp
mov
fists
icebp
add
rolb
test
mov
ja
test
loopne
and
mov
mov
push
mov
das
push
sbb
out
push
scas
jmp
hlt
stc
mov
adc
xchg
inc
pop
ficomps
inc
pop
outsl
adc
call
insl
xchg
fiadds
mov
shll
xor
mov
in
or
dec
subb
push
cs
or
hlt
imul
mov
nop
sub
xchg
xchg
out
jne
lock
nop
insb
hlt
pusha
cwtl
je
cld
sub
cmpsl
lock
mov
xor
push
stos
push
sub
into
sbb
mov
lods
ljmp
and
jge
pop
test
or
std
lcall
cmp
push
lods
pop
sub
xchg
stos
inc
test
pushf
stos
inc
inc
out
movsb
orl
add
repnz
fcmovu
cmp
loop
or
mov
shll
stc
add
add
adc
inc
add
je
testl
jbe
add
int
add
sbb
fistpl
dec
push
xchg
mov
aad
inc
push
mov
shll
ror
jns
mov
test
mov
cmp
and
and
or
popa
lcall
jmp
sti
gs
rorb
unpckhps
mov
pop
inc
and
rclb
sub
mov
data16
repz
popf
gs
sbb
push
mov
andb
mov
ja
mov
lahf
scas
outsb
mov
sub
xchg
lods
int
jno
pop
orb
mov
pop
sub
fwait
mov
push
pop
lea
lock
adc
clc
pop
inc
dec
xor
sbb
xchg
aam
imul
arpl
dec
push
dec
push
push
mov
push
aas
aaa
fcmovbe
jmp
rorl
in
pop
or
sbb
sbb
inc
push
bound
mov
push
or
stos
aam
xorb
push
pop
mov
rcrl
sbb
aam
push
mov
fidivrs
icebp
sbb
imul
cmc
inc
int
outsl
inc
push
add
lods
dec
lret
add
or
jo
adc
orl
jp
imul
lea
push
rolb
pop
adc
icebp
rcll
and
inc
shll
out
adc
imul
push
out
out
xchg
clc
sbb
lods
cli
ret
outsb
inc
cld
sbb
pop
aaa
jno
or
jl
lcall
mov
lock
loopne
mov
or
aam
mov
mov
or
stc
pop
es
xor
jae
ss
cmp
test
cmpsb
ficoml
pop
xchg
sarb
sbb
mov
ret
xchg
je
sub
dec
ljmp
adc
add
xor
out
subl
dec
sbbl
mov
push
adc
imul
jge
lret
andb
push
cli
fwait
leave
or
adc
negb
mov
adc
push
mov
pop
sub
and
pop
and
mov
nop
insl
mov
in
cwtl
push
pop
pusha
shll
sti
sbb
in
and
push
or
lcall
shr
daa
rcll
sub
inc
icebp
add
outsb
sub
data16
loopne
jb
fistpll
xor
mov
rol
scas
loope
xor
inc
fwait
inc
shrl
repnz
fdivr
int3
push
xchg
cmc
inc
popa
call
jp,pn
jns
daa
lret
orl
insl
out
xchg
sbb
pop
in
movl
in
ds
movsb
dec
jno
js
pop
sub
insl
fidivrs
jp
xchg
sbb
push
adc
ljmp
out
loope
inc
call
xchg
in
adc
ljmp
repz
into
stos
and
pop
add
fadd
inc
shlb
xchg
test
push
cs
cli
imul
jp
lds
insb
sub
lock
movsb
loop
push
aad
inc
or
fwait
adc
arpl
lahf
jp
sub
jge
leave
or
and
sbb
lret
push
pop
push
lret
inc
repz
ja
fistpll
mov
imul
and
and
cmp
mov
mov
hlt
xchg
lret
fstcw
aam
or
mov
clc
leave
shr
lds
inc
add
sbb
and
stc
adc
cmp
pop
hlt
pop
jge,pn
sti
jp
call
stos
cld
cmpb
push
dec
mov
bound
addr16
aaa
mov
mov
mov
xchg
or
and
fistpll
jb
daa
xchg
leave
into
ljmp
fldenv
fbstp
cmpb
cmpsb
cmp
test
mov
test
pop
inc
mov
cmpb
xor
gs
push
gs
cmp
adc
push
ret
lock
and
out
dec
dec
test
dec
xchg
pop
push
sub
cmp
aaa
push
inc
adc
mov
push
xchg
xchg
cmp
sbb
pop
fs
add
push
lahf
int3
push
iret
pop
enter
and
pop
jp,pt
int3
lods
push
loopne
mov
hlt
sbb
mov
and
sub
fistpll
fimull
mov
pop
and
movl
ljmp
jp
ds
mov
ljmp
outsl
stos
dec
fidivl
and
inc
mov
stos
outsb
mov
pop
mov
sub
mov
sub
push
mov
and
addl
pop
pop
dec
insb
xchg
and
dec
pop
ds
and
or
out
ss
jo
movb
iret
xchg
lds
inc
pop
xor
hlt
mov
imul
or
mov
sti
jecxz
lods
cmpl
jne
fsubrl
lret
sub
cmpsb
and
packuswb
inc
nop
jp
cli
add
outsl
lock
and
jmp
scas
scas
sbb
mov
sub
pop
push
adcl
dec
xlat
sarl
out
mov
jmp
jne
iret
cmc
aaa
and
icebp
dec
adc
pop
dec
inc
and
rcrb
sbb
mov
aam
in
or
mov
into
cmpsl
loope,pt
arpl
push
mov
mov
int
ljmp
repnz
dec
dec
aas
cltd
popa
xor
xlat
ljmp
mov
pop
jae
jmp
add
sub
mov
pop
and
xlat
jne
aas
mov
jge
or
stos
out
push
inc
mov
xor
out
adcl
lret
jle
or
mov
jns
je
int3
sbb
aaa
pop
in
add
push
movsb
outsb
inc
and
dec
jne
cmp
ficomps
in
add
scas
jnp
cmovl
sub
ss
push
add
fstpt
pop
std
mov
mov
jno,pt
aad
mov
vpaddd
rorl
or
aas
push
cli
xchg
rolb
xchg
rcrb
mov
sarl
sbb
mov
insb
push
xor
xor
mov
dec
mov
mov
dec
fimuls
inc
popa
lock
and
insl
cmp
inc
aaa
ret
mov
aad
cmp
jnp
repz
clc
jbe
and
idivl
lods
cmpsb
cmc
shl
mov
xor
into
sbb
add
imul
mov
push
shl
xor
cs
pop
data16
pop
jge
jle
sarl
push
push
mov
mov
inc
and
xchg
les
out
jge
mov
pusha
clc
jp
mov
cmpsl
repz
cmp
out
or
pop
outsb
aad
and
sub
out
icebp
and
inc
mov
outsb
xchg
adc
inc
pusha
dec
mov
addr16
xor
int
and
fwait
jne
fnsave
sbb
sbb
cmp
add
sub
push
jecxz
mov
int
sbb
and
or
xchg
mov
push
movsl
jle
outsl
push
add
push
jp
jo
mov
and
insl
fidivs
cld
jp
fiaddl
sbb
fwait
daa
xchg
sub
loop
jge
push
addr16
push
pusha
xchg
add
mov
aaa
xchg
or
mov
stc
inc
mov
mov
mov
int3
dec
std
sub
pop
jbe
and
bound
cmc
jns
insb
notl
lea
test
sbb
jge
pop
movsl
mov
sbb
aas
arpl
pop
push
pop
pop
imul
pop
loopne
mov
cmp
cld
cmp
test
pop
mov
xor
dec
jae
popa
imul
in
mov
ficomps
insl
test
idivl
push
mov
xchg
cmp
pop
inc
and
movsl
imul
sbb
fs
js
jae
pop
in
jmp
movsl
lret
pop
rolb
icebp
sub
enter
jecxz
push
in
mov
fcoms
xor
in
cmp
ret
into
lret
popa
jae
sbb
lret
cmc
pusha
xchg
cmpsl
movsb
mov
dec
pop
inc
sub
xchg
lock
inc
out
add
icebp
cli
dec
or
inc
and
negl
mov
incl
imul
push
sub
pushf
repnz
ds
adc
add
popa
mov
add
out
movsl
xchg
outsl
jl
mov
cmp
mov
xor
mov
and
add
sbb
jns
sbbb
ja
mov
cmpsb
sti
push
fists
xchg
leave
jbe
inc
sbbb
xchg
fwait
sahf
sbb
leave
imul
gs
inc
xor
inc
cltd
addr16
stos
popf
jb
adc
lods
jl
jno
outsl
mov
aad
push
ss
dec
test
xchg
cmpsl
xlat
and
inc
and
push
mov
xchg
or
dec
mov
lcall
and
add
xlat
es
xor
sbb
pop
in
imul
pop
icebp
fnstcw
or
xor
clc
pop
sub
popf
inc
pop
mov
mov
jg
mov
jmp
push
mov
mov
ret
cmc
mov
add
mov
push
push
shl
outsb
xor
xor
lcall
outsl
jo
test
lock
lods
or
sbb
loop
dec
mov
add
mov
mov
test
out
popf
outsb
pop
mov
rcl
push
in
leave
xchg
in
mov
xchg
dec
aaa
or
aam
std
mov
and
jg
loope
pop
out
inc
xor
xchg
fwait
adc
cli
xor
ljmp
cmp
adc
lcall
and
adc
mov
inc
fmul
lods
insl
xor
and
faddl
and
mov
jmp
adc
lock
test
dec
call
mov
mov
and
loop
movsl
and
popa
aam
data16
jae,pt
rcrl
cmpsb
xchg
scas
or
sbb
repnz
outsl
mov
xor
cs
and
fnstenv
std
jo
mov
xor
xor
lock
outsl
pop
imul
add
mov
lds
push
outsl
sbb
pusha
sbb
lds
outsl
dec
mov
loop
loop
push
std
xchg
loope
sub
xor
pop
pop
and
and
push
fisttpll
fnstsw
xchg
jp
dec
cmp
push
push
inc
and
sahf
lret
rcrl
leave
ljmp
xchg
xchg
pop
rolb
repz
adc
dec
jb
outsl
mov
es
fnsave
in
dec
pop
jno
aas
mov
ret
stc
jae
mov
or
mov
imul
test
jns
inc
dec
sub
leave
cli
or
adcb
jb
outsb
neg
andl
push
inc
out
lea
aas
aad
dec
cld
push
cmpsb
test
js
lcall
mov
jmp
movb
sbb
mov
lods
out
popa
cmpsb
fistl
leave
mov
add
iret
arpl
and
ret
sub
cmp
aam
mov
flds
push
push
inc
dec
insb
inc
mov
pop
adcl
enter
jmp
shr
cmpsl
in
xchg
cld
lret
or
or
mov
push
sub
cmpsb
movsb
fisttps
sub
repnz
inc
and
xchg
jo
or
dec
sbb
jb
jb
mov
bound
xchg
xlat
inc
in
dec
mov
imul
pop
sbb
in
ret
fs
cmp
cmp
das
popf
bound
jne
push
add
adc
xchg
sbb
mov
xlat
stos
add
jnp
adc
cs
in
lcall
rclb
and
idivl
sbb
pushl
test
fidivs
cmpl
or
sub
and
adc
mov
xchg
mov
adc
xchg
jecxz
shrl
inc
daa
sahf
lret
and
inc
pop
dec
inc
fucomip
mov
test
js
out
pop
mov
mov
push
xor
sub
insl
sbb
dec
xchg
adc
lock
cmc
dec
jae
in
mov
adc
or
icebp
gs
mov
aaa
and
fldl2t
lods
int3
test
pusha
mov
inc
shl
leave
push
push
lds
ljmp
xchg
test
sub
jg
pop
test
jb
pop
fs
inc
rcrl
mov
scas
cmp
ret
xor
inc
and
sbb
adc
aad
cwtl
pop
lods
clc
jecxz
and
std
mov
push
lea
sub
push
and
pop
mov
push
popa
or
les
mov
pop
sahf
imull
sub
pop
pop
sahf
stos
cld
lahf
lret
jns
mov
daa
ror
fimuls
mov
fdivl
pop
sbb
mov
cli
dec
mov
cmp
adc
mov
pushf
enter
or
adc
roll
pop
cmpsl
mov
pop
xor
stos
xor
aaa
outsl
pop
add
cmpsl
mov
pop
loope
rcrl
and
mov
inc
sti
jae
outsl
and
loopne
or
aad
adc
inc
pop
loop
std
imull
fcompl
jo
push
jp
jp
or
daa
int3
out
sub
push
cs
cwtl
mov
repnz
dec
stos
sbb
nop
mov
cmp
test
mov
add
orl
adc
dec
shlb
push
mov
mov
dec
ret
cltd
test
das
push
or
jecxz
dec
js
hlt
add
jmp
dec
sbb
les
mov
sbb
jb
int
out
test
cmpsb
fstps
sti
out
xchg
xchg
sbb
sub
lea
lahf
lcall
pop
pmaddwd
pop
out
fadds
mov
and
sub
mov
jp
jl
sbb
mov
add
imul
xor
cwtl
add
dec
test
bnd
stos
fsubrl
dec
and
ja
jge
pop
sub
pop
movsb
out
scas
pop
push
les
incb
loopne
push
or
psubb
sub
gs
mov
lds
insl
out
lds
mov
pop
pop
add
pop
arpl
ret
shr
cmp
into
ret
outsl
jo
push
mov
xor
fnstsw
jmp
push
lret
lahf
dec
cltd
and
inc
out
int3
sub
adc
ds
push
mov
mov
gs
cltd
xor
pop
int3
mov
jnp
outsl
inc
ss
and
cli
test
mov
icebp
std
xchg
aaa
cli
add
lock
lcall
ficompl
add
cmp
sub
loopne
dec
pop
testl
mov
mov
aam
loopne
jno
jbe
fsubrs
je
jmp
idivl
or
or
lret
les
mov
aam
into
shl
mov
je
imul
int3
push
movsl
push
shll
or
mov
and
mov
stos
jb
and
jmp
pop
jne,pn
pop
sbb
sbb
pop
repz
mov
push
push
in
mov
mov
mov
sub
lea
fsub
sbb
out
outsb
incb
jbe
iret
sbb
sbb
dec
and
add
imul
aaa
fwait
test
push
jmp
outsl
mov
sahf
cmpsl
adc
cmpsl
fs
aaa
lds
adc
iret
jno
and
sbb
sub
dec
out
pusha
and
mov
cld
dec
pop
inc
bound
les
stc
in
lahf
xchg
cmp
leave
imul
inc
insb
sub
xor
mov
iret
cs
repnz
cmpsl
cmp
push
call
ret
mov
xchg
test
pushf
dec
jecxz
mov
nop
test
sub
pop
add
shrb
or
add
jge
jno
dec
jmp
rolb
jb
bound
mov
ds
imul
popa
insb
push
pop
mov
scas
xchg
pop
sbb
xchg
push
mov
test
test
sub
push
cmpsl
pop
nop
xor
fs
cltd
enter
js
cltd
inc
push
mov
popa
fcoms
frstor
repz
testb
dec
jb
imulb
mov
add
ret
rcrl
lea
xchg
adc
ret
xlat
pop
ret
repz
jne
lea
sbbb
idiv
mov
repz
sbb
jle
jno
push
scas
shll
fucomi
std
push
ljmp
sbbb
stc
stos
lahf
mov
hlt
mov
movsl
gs
add
call
sub
int
ret
scas
mov
xchg
outsl
out
cmp
push
rclb
movb
repnz
in
iret
cmc
add
jg
add
push
rcr
mov
test
dec
push
in
add
xor
nop
aas
push
adc
push
lods
lcall
xlat
and
repz
test
xchg
sbbl
pusha
lret
inc
or
cmc
subl
movsl
push
enter
sbbl
mov
jmp
rol
loope
repnz
dec
imul
push
es
push
xor
or
pop
dec
xorb
and
or
xchg
jmp
not
adc
nop
mov
lahf
push
pop
rcrb
addb
mov
imul
test
cmp
jecxz
aam
addr16
int
jmp
or
sbb
mov
jmp
fisttps
aam
cmp
mov
xor
xchg
sub
faddl
clts
jg
mov
mov
jnp
fadd
and
add
adc
ja
push
jnp
gs
mov
jns
push
sub
jne
mov
dec
xchg
adc
ljmp
and
negb
in
stos
jle,pn
aaa
out
je
jno
jnp
cmovs
cli
movsb
mov
sub
std
jno
inc
dec
adc
stos
inc
ds
xchg
mov
sbb
dec
enter
sub
test
lea
fs
or
outsb
cmpsb
push
sbb
int3
sbb
mov
iret
dec
mov
idivl
jmp
xchg
cmp
pop
xor
shll
subl
sahf
out
insb
mov
pop
mov
imul
push
jl
adc
pop
insl
cmp
push
roll
jmp
mov
pop
adc
loope
push
pop
mov
or
flds
out
sbb
mov
sub
xor
xchg
add
jne
testl
mov
pop
xchg
mov
fucomip
or
adc
mov
fcoms
mov
push
lods
cmc
arpl
das
mov
adcl
jmp
movsb
cmp
mov
data16
mov
sbb
xchg
loop
subl
add
leave
mov
in
fwait
dec
in
cmp
aam
orl
aas
imul
cltd
movb
bound
test
sub
cmpsl
pop
dec
dec
fildl
outsl
and
push
sahf
sarb
sub
loop
cli
mov
stc
sbb
mov
in
mov
pop
sbb
cld
xor
push
push
aad
or
cwtl
mov
sub
push
iret
xorl
jbe
pop
pop
add
inc
sar
fldl
pop
scas
loop
sbbl
lods
out
jns
out
xchg
test
cmpsb
mov
fistl
addr16
and
hlt
xchg
and
mov
xor
pop
cmp
jne
mov
outsl
imul
clc
in
fcos
rorb
loope
aam
jp
lahf
inc
mov
mov
or
dec
jge
pmaddwd
pop
jle
jle
mov
cmp
call
das
rorb
scas
gs
adc
int
xor
sub
hlt
cltd
aam
mov
mov
xor
out
add
inc
hlt
sbb
lret
push
fwait
in
arpl
movsb
repnz
not
out
jae
lret
cmpsl
loope
scas
movsl
ffreep
mov
xor
fistps
cmp
cmp
ds
scas
je
pop
ret
hlt
out
jp
aad
dec
push
ret
push
popa
out
mov
and
cmp
fstps
push
insb
fldcw
rolb
mov
xchg
cmp
daa
dec
mov
xor
jg
pop
or
pop
mov
sub
ss
sub
lods
xchg
loop
inc
mov
sbb
cwtl
aad
cmp
pop
or
jae
xor
and
dec
mov
js
inc
les
cmp
addb
push
xor
popf
mov
cmp
imul
mov
sub
out
pop
cmovae
insb
call
lahf
dec
mov
mov
pusha
pop
mov
shlb
or
xor
scas
pop
cmp
xor
daa
imul
dec
xchg
mov
mov
or
dec
insb
movsl
f2xm1
dec
std
xchg
nopl
and
jns
or
imul
aad
push
push
scas
imul
sub
and
xchg
cmpsl
roll
mov
popa
out
and
xor
test
inc
hlt
sub
popf
xlat
fwait
add
pushf
jmp
les
and
push
mov
jo
je
mov
add
aas
xchg
push
mov
push
lret
xor
fdivl
jge
pushw
sti
in
mov
jns
sarl
mov
and
int3
fcomps
fiadds
xorb
loopne
inc
pusha
pop
add
xor
in
leave
mov
push
in
sbb
cmpsl
xchg
ret
mov
bound
popf
and
mov
in
rorl
fwait
and
pusha
xchg
push
adc
sbb
stos
ja
sbb
testl
push
sub
insb
std
mov
leave
mov
adc
call
fidivs
ja
loope
adc
jae
bound
in
cli
pop
movsl
pop
int
cmp
jns
sub
add
pop
sub
out
inc
mov
int
jg,pn
sbb
jo
sahf
cmp
pop
adc
jo
pop
jbe
jmp
in
sbb
insl
rorb
lods
leave
ljmp
jp
gs
and
and
inc
dec
mov
inc
popa
or
mov
xor
subl
or
fldl2e
mov
mov
test
or
xor
cs
fwait
stc
mov
leave
insb
adc
jle
jo
pop
xorb
xchg
cwtl
pop
add
xchg
or
repz
scas
lods
ljmp
push
mov
cmc
lods
inc
xchg
imull
jo
cmp
cli
jmp
mov
xchg
push
mov
popf
xor
lea
mov
xchg
and
xchg
push
dec
iret
mov
sub
popf
jo
xchg
jmp
ss
push
xchg
out
incb
push
jle
ss
cmp
xor
inc
or
push
test
or
push
adc
mov
fdivrl
or
dec
fwait
mov
push
in
sbb
into
clc
jns
cmpsl
sub
mov
sti
lods
lcall
scas
xchg
enter
add
adc
addl
stos
in
stc
ret
xor
leave
or
gs
mov
neg
arpl
aas
and
fcomip
mov
cmp
dec
aaa
mov
dec
jle
jne
inc
or
filds
pop
pop
out
mov
in
dec
daa
adc
sbb
dec
dec
jmp
lock
cmpl
cmp
push
pusha
add
out
lods
aam
adc
and
pop
inc
cmp
pop
sub
mov
or
lret
pop
push
jno
sahf
xor
push
in
xchg
sarb
adc
shlb
jmp
mov
push
pop
jmp
notb
sahf
mov
push
cltd
in
pop
ret
jo
div
mov
adc
in
dec
fisttps
mov
rcl
out
pusha
mov
jnp
insb
nop
pop
fs
fstpl
jmp
sbb
clc
sub
dec
ficompl
xor
dec
cld
ja
mov
in
dec
adc
std
jbe
xchg
inc
xchg
pop
pop
push
scas
pop
aad
jne
ret
inc
lahf
js
xchg
pop
test
mov
or
mov
daa
and
repz
pop
stos
lods
dec
je
fcmovnbe
jg
es
pcmpgtd
lret
sbb
addb
xchg
loop
ret
push
in
mov
mov
dec
and
or
popf
insl
lock
test
rcl
out
adc
andl
sbb
add
push
sub
cmp
xchg
nop
sbb
std
xor
test
xchg
xor
mov
sahf
cmp
loopne
pop
cmc
cwtl
jmp
int
xor
mov
in
hlt
inc
cmpsl
out
xchg
lock
iret
into
out
adc
add
icebp
dec
sbb
movsl
loop
cmp
cmp
push
call
jl
push
arpl
lods
test
xchg
test
fisttpll
jmp
add
loop
sbb
int3
icebp
out
add
mov
mov
or
xchg
jp
loopne
sbb
inc
push
push
mov
inc
and
ret
mov
subb
sbb
int3
outsb
jle
sub
iret
lds
subl
outsl
jnp
mov
rcrl
lret
shll
push
xchg
adc
daa
inc
loopne
pop
adc
insl
jmp
jl
add
adc
adc
sub
sub
jne
mov
test
and
sub
pop
cwtl
mov
stos
jmp
sbb
les
inc
xor
push
icebp
cs
xchg
pushf
insb
roll
cmpb
jp
mov
dec
or
outsl
aas
dec
stos
or
xor
shrb
xor
cld
mov
mov
dec
lahf
daa
mov
inc
mulb
xor
push
inc
xchg
out
pop
adc
shrl
cmp
in
mov
std
scas
sbb
and
xchg
stos
push
aaa
mov
lret
cmp
inc
cltd
mov
inc
daa
xchg
xchg
stos
das
mov
jae
sub
mov
cwtl
sbb
mov
fisttpll
mov
mov
aaa
gs
pop
or
dec
fildl
dec
sub
or
outsl
ja
or
push
mov
adc
int3
xchg
rcll
mov
add
pushf
and
aad
sub
jl
push
xor
movsb
icebp
outsl
mov
out
mov
mov
and
movl
fstpt
loopne
movsb
cmc
adc
roll
mov
imul
pop
clc
pop
pop
outsl
adc
repz
cli
mov
mov
shrb
adc
cmpb
xor
outsb
outsl
out
xor
ja,pn
xchg
jo
add
ja
movsb
inc
pop
ja
dec
jo
loope
push
mov
aaa
xchg
xor
xchg
sarb
inc
xor
pop
aaa
pushf
mov
push
mov
jo
xlat
xor
pop
mov
push
je
test
addb
xlat
int3
daa
cmp
jge
movsb
test
dec
loopne
and
outsl
loop
adc
iret
test
mov
popf
out
push
pop
add
push
lahf
test
pop
and
mov
in
mov
movsl
xor
push
push
cmp
xor
mov
inc
jns
push
xchg
pop
mov
ljmp
sbb
es
mov
mov
fcomps
dec
xor
and
test
cltd
lahf
scas
jg
pop
pop
push
stc
jecxz
dec
push
sahf
aaa
mov
daa
iret
sub
push
push
mov
frstor
insb
pop
mov
lds
pop
pop
mov
ret
addr16
popa
push
ljmp
fimuls
stos
in
inc
gs
and
sarl
push
mov
mov
leave
lods
int3
or
addr16
pop
jmp
push
sub
push
sbb
or
sub
xor
sbb
pop
inc
mov
mov
and
mov
mov
out
stc
mov
cltd
pop
cs
bound
popf
jne
rcrl
inc
dec
test
mov
std
push
pop
cmp
adc
sbb
pop
pop
insb
add
jb
cmpsb
fisttpl
add
adcl
dec
or
out
cwtl
xor
rcll
adc
xor
mov
fistps
dec
stos
lock
or
iret
dec
pop
pop
jl
ss
mov
xor
sbb
xchg
fwait
aad
das
mov
mov
cli
insb
pop
xchg
cmp
dec
insb
pop
cmp
hlt
mov
dec
mov
and
mov
sub
mull
xchg
icebp
mov
sub
scas
push
in
xor
adc
adc
and
mov
sub
imul
dec
or
ja
or
push
mov
mov
jle
or
sbb
dec
cs
push
or
outsl
scas
jns
inc
xchg
mov
mov
outsl
out
and
push
dec
loopne
sbb
xchg
mov
jp
outsl
add
pop
in
shl
jbe
xor
pusha
push
je
push
out
sub
into
adc
sub
ret
jbe
sbb
push
adc
cmc
stos
bound
mov
cmp
pop
xchg
jno
sti
jg
aas
mov
ss
imul
adc
outsb
cmp
adc
cmp
pusha
ja
lea
scas
sub
mov
notb
xsha1
cmpsb
mov
and
jae
fs
ljmp
inc
outsb
popa
pop
fs
inc
push
pushf
mov
mov
lds
cmpsb
mov
leave
sbb
insl
je
lret
adc
dec
xlat
call
hlt
incb
push
ljmp
fcmovbe
pushf
scas
or
scas
idivl
out
sbb
push
mov
in
std
dec
mov
insl
jle
xor
adc
xor
mov
clc
test
jae
in
xchg
cmc
add
xorb
add
fsts
loope
iret
clc
jae
in
stos
lock
mov
sbb
fimuls
ss
xlat
push
lock
or
jb
inc
or
mov
push
cwtl
and
repnz
mov
stos
sub
scas
jp
cli
lcall
in
mov
pop
jnp
inc
push
rclb
mov
into
jge
lahf
mov
dec
cmp
xor
enter
mov
test
xor
adc
pop
lods
movsb
test
xor
lods
lahf
iret
out
test
pop
xchg
inc
outsb
add
push
cmc
add
js
mov
in
mov
pop
or
int3
or
pushl
pop
dec
test
sbb
das
cmp
into
lods
push
jb
pop
scas
pop
xchg
cmp
push
into
test
add
sub
aad
cmpsl
push
mov
cmp
inc
repz
lcall
cmp
or
push
ret
sub
divl
outsb
jbe
lret
add
sub
nop
out
push
clc
pop
imul
and
adc
xor
dec
mov
bound
sbb
outsb
outsb
pop
jns
xor
add
outsl
ja
pop
inc
sub
das
push
inc
out
adc
fisttpll
jle
stos
jbe
mov
out
mov
dec
mov
gs
clc
jge
decl
sub
sub
call
shl
mov
inc
mov
jmp
inc
scas
lods
sti
or
mov
and
jecxz
cli
test
xchg
and
rcrl
lahf
sub
xor
push
cmp
mov
sub
jb
dec
mov
mov
jb
std
scas
insl
pop
movsl
add
jg
mov
mov
gs
xchg
push
push
adc
mul
jmp
adcl
movl
add
aaa
dec
movsl
xorl
xor
push
fwait
out
push
into
sub
mul
data16
outsl
loope
adc
fdivp
mov
add
or
dec
mov
aaa
fmul
sbb
jae
mov
popa
adc
out
pop
pop
in
movsl
mov
push
mov
xor
je
cld
mov
adc
aam
push
xor
add
dec
and
ds
mov
mov
dec
xor
inc
pop
and
and
pop
subb
insb
and
insb
xor
xor
pop
mov
pop
insl
sub
sbb
pop
push
arpl
out
xor
lds
repnz
lret
loope
mov
test
sub
inc
add
repz
xchg
fdivs
mov
dec
or
jmp
push
pop
mov
or
out
xlat
jo
call
loop
out
inc
dec
push
cmp
hlt
fldt
sbb
jns
xchg
xorb
jb
leave
inc
lds
push
orb
es
pop
sbb
subl
or
mov
mov
jne
xchg
adcb
aas
sbb
addr16
scas
ljmp
jle
xchg
jp
jbe
outsb
sub
nop
das
or
notb
sbb
loop
add
into
sti
mov
push
aas
jg
shl
aad
push
mov
je
rcl
pop
adc
das
iret
sub
aaa
mov
leave
rcll
mov
lock
or
fistpll
aaa
mov
gs
sub
pop
sbb
push
daa
and
mov
push
dec
and
xchg
mov
xor
cwtl
push
out
mov
mov
div
repz
test
je
aaa
cmp
nop
xchg
dec
mov
push
push
cmp
and
ss
inc
jno
fisttpll
adc
jnp
push
pop
cmc
rolb
inc
and
imull
pop
daa
insb
scas
jbe
or
lahf
add
cmc
xor
cmp
test
fdivr
jmp
mov
pop
pop
loopne
xlat
sbb
into
aam
adc
and
push
filds
in
dec
jge
pusha
aad
push
mov
mov
fcomip
call
andl
mov
xchg
movb
cld
nop
mov
xor
mov
in
das
sbb
lahf
sbb
dec
jns
icebp
mov
or
movsb
mov
pop
out
xchg
mov
adc
gs
jmp
and
jb
xor
imul
jnp
xchg
repnz
cmp
lea
push
daa
testl
mov
dec
xchg
aam
in
cwtl
push
pop
fcom
hlt
dec
sbb
stc
push
jns
mov
lds
push
adc
and
imul
jno
mov
xchg
gs
adc
addr16
xchg
clc
push
jnp
sbb
ss
and
jle
out
fwait
std
jb
jecxz
movsb
sbb
mov
in
and
and
sar
es
outsb
pop
scas
roll
imul
jecxz
cmp
xchg
push
mov
arpl
jb
sub
cmp
cmp
test
sbb
movsl
inc
pushf
pop
xor
aaa
fstps
xlat
aam
push
test
je
fldt
sbb
int
jmp
mov
out
jne,pn
push
dec
push
sti
inc
inc
imul
pop
inc
and
or
mov
mov
mov
pop
and
mov
jo
cmp
lcall
jbe
dec
loopne
xor
dec
cmpsl
adc
cmp
mov
jbe
lods
in
ret
lds
jmp
xchg
scas
push
sub
mov
pop
cmp
or
loop
inc
fdiv
je
push
icebp
nop
nop
jno
jnp
adc
enter
push
or
xor
mov
addr16
rclb
sub
xor
popa
popa
dec
push
scas
nop
popf
pop
aaa
push
mov
xor
mov
out
inc
std
fistl
test
mov
pop
gs
mov
inc
jl
pop
ret
aaa
sub
loope
mov
inc
loope
sbb
sub
addr16
loope
dec
xor
xchg
xor
sub
pop
out
and
sub
call
cmpsl
sbb
push
sub
xchg
lret
cmc
add
mov
pop
add
and
add
cmp
mov
mov
mov
cs
pop
aam
cld
mov
std
adc
frstor
jle
cmp
rorb
inc
pop
inc
xchg
jnp
js
and
rcr
push
scas
es
jmp
mov
test
mov
or
idivl
fwait
scas
insl
popa
adc
and
loop
cmp
mov
and
aad
fs
les
mov
ret
mov
mov
pushf
mov
push
push
repnz
jo
pop
sub
push
dec
push
push
xchg
cmp
and
das
or
cmpsl
jp
mov
inc
sub
loopne
fbld
and
aam
aam
shrb
test
out
adc
clc
xlat
sub
and
inc
sbb
scas
pop
or
fidivl
int3
sbb
mov
xchg
pop
jnp
aas
test
lea
bound
xchg
imul
shll
xor
out
and
hlt
xlat
pushf
cmp
iret
cmp
push
pusha
test
sbb
jb
mov
pop
test
les
sub
jecxz
jle
pop
sti
outsb
jmp
clc
div
xchg
fcomip
cmp
push
std
fcoml
or
xlat
cmp
sbb
stc
mov
inc
pusha
int
fstps
out
jg
pop
push
popa
sar
and
fcmovu
lcall
dec
cmp
test
or
sub
ljmp
ret
xchg
int
loopne
imull
shlb
in
stc
ret
fistl
xchg
jl
push
push
int3
sbb
arpl
ret
cmp
jno
sub
or
mov
sbb
lods
jo
add
test
es
push
mov
cmp
jnp
lret
mov
mov
test
and
dec
sbb
add
cwtl
rolb
xorb
mov
jo
cwtl
mov
inc
sbb
div
or
daa
das
jge
test
dec
jns
in
dec
int
pop
movsb
mov
and
and
dec
sbb
push
out
cld
cmpsb
xchg
mov
add
and
xorl
rorb
rcrl
pop
es
xchg
xor
inc
cwtl
push
push
pushf
outsl
imul
adc
movsb
inc
rolb
sub
or
jmp
stc
xor
or
adc
scas
xchg
push
adc
addr16
call
pushf
xchg
or
aas
cmp
and
jp
fbld
and
xor
mov
aas
sub
shlb
sub
lahf
jmp
test
add
fnstcw
ret
push
sarl
inc
aas
cmovb
jnp
cmpsb
mov
data16
cld
mov
data16
xor
add
xchg
mov
iret
adc
gs
inc
xchg
shr
in
mov
mov
popf
jb
sbb
push
jge
test
xor
and
aas
or
in
imul
jo
inc
stc
in
push
jnp
inc
mov
pushf
dec
pop
pop
xorl
xchg
push
add
lcall
and
or
iret
cmp
or
mov
out
out
test
das
pop
xor
xchg
pop
stos
pop
mov
cmp
ss
sbb
or
cmp
clc
addl
jae
sbb
les
jno
pop
push
mov
scas
insl
push
xchg
testb
cmpb
out
adc
pop
sub
mov
xchg
notl
jbe
lret
mov
mov
mov
js
xchg
and
or
daa
push
jge
mov
jmp
add
push
xchg
cmpsl
hlt
xchg
dec
lock
daa
xor
xor
jecxz
sub
sub
stos
aas
mov
pop
lahf
push
mov
or
in
lea
lods
rol
lods
sti
lret
jp
pop
mov
add
cmp
adc
add
stc
mov
cmpsl
scas
lahf
xchg
clc
cmc
mov
jnp,pn
mov
cmpsb
push
xor
push
sub
push
addb
sbb
pusha
loope
xchg
jb
mov
loope
dec
das
cmpsl
and
bound
push
sbb
fs
orb
dec
data16
cmp
xor
push
nop
fwait
dec
inc
pop
addr16
lcall
pushf
push
hlt
push
dec
pushf
in
adc
xor
sbb
arpl
inc
jae
pop
scas
adc
jae
aad
arpl
repnz
sbb
popa
jo
out
mov
das
sahf
push
pusha
andb
push
addb
mov
mov
cmpsl
ret
rol
out
addr16
sti
add
adc
movl
orb
mov
cwtl
jo
loopne
pop
add
cmp
mov
cmpl
pop
into
outsb
std
xchg
data16
mov
dec
ljmp
sbb
jae
mov
stos
cmc
clc
nop
jle
xor
sub
xchg
push
sbb
arpl
sub
sbb
adc
lods
sub
shll
sbb
mov
xchg
jns
lods
pop
xor
test
test
push
sbb
mov
xchg
push
jbe
sti
test
adc
pop
pop
pop
and
stos
xchg
xor
scas
lods
push
jmp
and
sbb
mov
pushl
aas
xchg
cltd
repz
xchg
sub
or
pop
jecxz
mov
and
push
mov
mov
ds
xchg
or
out
sub
scas
loope
mov
movsl
lods
dec
xchg
xor
add
cltd
rcl
imul
adc
or
and
sti
mov
and
lcall
sub
pop
fs
stos
push
test
inc
push
test
jl
push
xor
push
std
xor
fnstcw
push
imul
fs
cmp
xchg
mov
adc
sub
push
mov
ret
xor
mov
add
mov
int3
xchg
mov
rcrb
ds
mov
xchg
ret
das
int3
shlb
push
inc
in
mov
or
test
dec
call
pop
mov
mov
sub
aad
out
sub
gs
add
ror
call
pop
sbb
cld
sbb
push
fcoms
jnp
stos
adcb
or
jo
and
cmp
inc
sti
addr16
icebp
adc
xlat
fstp
and
fwait
or
in
jns
adc
push
pop
pop
mov
movsb
cmp
push
clc
scas
sub
xor
mov
inc
loopne
lods
mul
jno
cmp
subl
xchg
stc
sub
push
fwait
addl
adc
stc
mov
push
aaa
jns
adc
or
loope
push
ds
rcll
adcb
xor
and
inc
mov
test
pop
sbb
call
and
cmp
cmp
leave
aad
aaa
adc
add
xlat
test
jl
mov
lret
inc
mov
mov
loop
lock
xor
and
in
inc
rcrl
inc
mov
sub
insl
roll
push
sbb
ja
jl
stos
mov
aam
arpl
mov
test
dec
inc
ljmpw
out
repnz
mov
fiaddl
mov
mov
je
sub
fprem1
dec
jns
popa
cwtl
pop
push
sub
jmp
jl
mov
mov
repnz
loop
dec
and
popf
in
add
in
fs
xorb
fistpl
push
shrl
sbb
jl
pop
and
imulb
adc
cmp
orl
xchg
pop
pop
or
sub
inc
nop
sub
dec
sub
or
out
fadd
jle
lods
xchg
xor
fdivs
nop
xlat
loopne
xor
scas
jnp
mov
stos
cwtl
adc
insb
ret
inc
je
mov
or
andb
sar
dec
or
inc
ret
movsb
mov
jb
popa
sbb
enter
cmpsl
cli
adc
xor
cmpsl
or
push
jl
mov
xchg
push
rclb
rorb
adc
jbe
and
adc
mov
adc
ss
inc
lcall
fsts
xor
out
mov
sbb
pop
or
jge
les
or
cltd
xchg
decb
mov
mov
fistpl
enter
push
sub
rorb
push
mov
lret
test
push
loopne
sub
adc
mull
dec
in
mov
outsl
sbb
test
push
xorb
mov
enter
cmpsb
push
lock
jge
push
xor
ror
adc
insl
jge
sbbb
clc
int3
mov
adc
arpl
pop
stos
repz
imul
sub
mov
test
jle
xchg
fs
fs
jmp
mov
dec
pop
sbb
sbb
int
mov
daa
les
or
rolb
out
push
cmpsb
xchg
fwait
lcall
stos
inc
out
push
sub
push
je
ljmp
loop
and
or
pushf
pop
repnz
push
sbb
cli
add
pop
xchg
cmp
dec
dec
jb
outsl
inc
call
les
lret
loope
scas
test
insl
xchg
mov
movsb
popf
adc
push
push
lret
out
cltd
cmp
ds
sarb
xchg
sarb
dec
dec
dec
fs
mov
mov
sub
pop
adc
es
pop
sbb
es
cmp
out
test
out
add
push
jae
psubusb
ljmp
xor
in
into
popa
sbb
push
sbb
mov
lods
mov
ja
mov
test
sub
inc
and
ret
int
fwait
ret
and
loope
cmp
and
add
mov
rclb
jmp
mov
push
cli
jge
xchg
je
jl
push
jb
xor
xlat
sbb
aam
and
xchg
jbe
je
test
mov
pop
push
int
sbb
inc
sbb
cmovge
test
int
es
push
mov
aad
and
aad
jecxz
scas
jo
dec
iret
repz
adc
and
ljmp
je
pop
shrl
test
jge
mov
and
insb
and
xchg
test
mov
mov
repz
jno
insl
fisubs
jae
jo
push
cwtl
and
or
jp
addr16
or
ret
pushf
paddusw
and
push
clc
xor
jl
pop
iret
loopne
jp
scas
arpl
push
jnp
fwait
incb
ss
test
popf
jo
out
lods
call
inc
mov
or
cmp
roll
lret
inc
adc
inc
push
mov
mov
adc
mov
xor
ss
ret
jecxz
jb
lock
pushl
xor
sbb
and
ficoml
cli
mov
mov
mov
cs
jge
mov
mov
push
andb
fmulp
xchg
lret
mov
cmp
stc
pop
jle
aam
repnz
cmp
data16
jo
imul
xor
add
jge
push
lahf
mov
hlt
jg
icebp
lds
inc
iret
pop
cmp
xor
fs
mov
movsb
cld
sbbb
add
mov
loope
xchg
call
sti
imul
jle
clc
jl
mov
cwtl
aas
mov
push
shlb
clc
pusha
mov
xlat
imul
mov
popf
aam
jb
push
pusha
mov
lahf
or
mov
lahf
pop
jne
or
fiadds
push
jae,pt
gs
or
pop
ret
test
adc
adc
xchg
xor
test
mov
push
fisttps
stos
ret
sub
das
mov
jno
out
xchg
jae
daa
pop
mov
in
fistps
leave
stos
shll
push
inc
test
mov
dec
mov
add
adc
mov
sbb
sub
or
push
dec
repnz
mov
cmp
sbb
aas
cli
jo
xchg
imul
stos
shrl
dec
mov
push
outsl
mov
xor
jno
loopne
imul
xor
mov
push
lcall
mov
cwtl
mov
xor
cmp
ffreep
stos
lahf
cwtl
or
in
xor
push
cmp
cmp
ja
hlt
jae
test
imul
jl
cmp
sbb
out
xchg
insl
notl
cmpl
leave
scas
mov
dec
sub
sub
sbb
adc
or
outsl
xchg
push
das
test
lds
movsl
sbb
cld
cmc
fistl
fldcw
mov
xor
sub
adc
push
lods
fldcw
inc
cltd
icebp
shr
popf
xor
pop
mov
cli
sbb
out
rolb
aaa
mov
push
xor
sbb
shrl
pusha
xchg
sub
jns
enter
sti
fnsaves
nop
test
cmp
xor
xchg
xchg
jno
out
fisubrl
es
aam
test
int3
ud0
pop
mov
fildll
push
fs
push
xchg
outsl
push
dec
sbb
jbe
jmp
sub
mov
test
gs
push
mov
xchg
dec
lret
arpl
jmp
aas
lock
js
fisubrl
repnz
xchg
fstpt
les
add
fidivl
ja
les
iret
fistpl
and
test
into
jae
aad
xchg
mov
lret
mov
lock
mov
imul
in
arpl
mov
pop
and
jb
lock
out
loope
sbb
push
mov
out
inc
mov
clc
inc
into
xchg
dec
jbe
xchg
mov
cmp
out
orl
xchg
xor
daa
gs
jl
mov
pop
lret
jmp
jo
out
lea
std
dec
and
jno
xor
mov
mov
or
xchg
dec
popa
mov
mov
add
jmp
push
enter
in
add
shrl
xchg
mov
imul
fisubs
mov
xor
add
outsl
aad
and
jne
mov
mov
mov
int3
xchg
loop
int
test
cmp
jnp
adc
pop
outsb
sahf
or
cltd
inc
xchg
mov
xor
pop
ja
xchg
inc
addb
mov
cmpsb
adcb
leave
test
enter
ror
rolb
lock
and
fisubrs
and
push
cmp
ret
shlb
mov
in
fisubl
mov
xor
cmc
pop
add
mov
or
sub
mov
cli
fnstenv
and
mov
ret
mov
daa
lods
repnz
adc
or
jecxz
repz
sbb
pop
jbe
outsl
pop
xchg
mov
ds
mov
cmp
clc
mov
cmc
cmp
sub
jb
std
adc
addl
insb
daa
pop
ffreep
sub
jbe
sub
jbe
shll
cmpsb
cmc
pop
arpl
stc
out
inc
mov
mov
ss
xchg
test
add
orb
outsb
lret
or
dec
incl
stos
inc
or
cmp
add
xchg
pop
mov
arpl
xchg
and
xor
shlb
pop
int3
push
sbb
popf
and
mov
test
loop
clc
adc
pop
mov
adc
inc
jo
outsl
pop
sahf
xchg
out
sbb
dec
fsubs
xchg
or
out
out
pop
or
jno
insb
sub
lods
mov
addr16
int3
lea
out
push
inc
popf
push
dec
sarl
adc
mov
or
xchg
push
divb
rclb
mov
aad
adc
mov
test
sahf
inc
inc
gs
sbb
addr16
sahf
sbb
sub
fists
push
mov
cwtl
push
jbe
push
jbe
bound
outsb
mov
lret
jne
lods
jmp
popa
cmp
or
push
and
std
cmp
daa
test
loope
sbb
adc
push
mov
mov
mov
fisubs
or
xchg
int3
mov
mov
sti
lcall
cmp
dec
shlb
sbb
jb
inc
int
xlat
insb
scas
xchg
pop
xor
fiadds
lea
push
imul
pop
inc
ja
xchg
rcll
out
mov
adc
outsb
sub
arpl
and
dec
adc
sbb
repz
xor
cmpsl
sbb
mov
loope
fisubs
lods
xchg
in
repz
mov
mov
dec
out
adcl
or
repnz
dec
xor
and
or
cmpl
dec
pop
mov
cmp
data16
cli
jmp
adc
mov
push
mov
adc
cmc
dec
and
sti
hlt
imull
mov
in
enter
xlat
lods
cmpsb
in
arpl
sbbl
dec
jmp
dec
cmp
push
mov
enter
aad
jmp
lret
test
pushf
outsb
pop
inc
mov
xor
scas
stos
cmp
push
push
ja
xchg
daa
push
sub
jmp
mov
cmp
xchg
jns
leave
int3
push
out
xor
insb
xchg
int
pop
fsubrl
insb
mov
or
cmp
xlat
inc
movsl
lods
int3
add
lret
into
mov
inc
lret
cmp
cmpsb
jne
test
insb
fbstp
dec
mov
jb
outsb
in
xor
cmp
fisubrl
mov
dec
adc
jo
mov
push
aas
mov
xorl
aas
sbb
and
adc
sub
xchg
sti
cld
lret
mov
xchg
inc
popa
and
add
mov
data16
jmp
jmp
push
mov
insl
incb
jne
xchg
push
jg
daa
dec
movsb
pop
and
das
mov
aam
mov
pop
jecxz
jmp
rorl
pop
jmp
sbb
loopne
cmp
xor
pop
in
test
cmp
cmovle
xchg
and
ss
js
jo
inc
ret
push
ret
push
cmp
shlb
cwtl
pop
add
jmp
inc
dec
pop
push
es
inc
aad
fcompl
mov
dec
icebp
lcall
les
test
add
and
xor
push
out
cmp
push
mov
mov
xchg
mov
dec
sbb
push
fcom
jmp
pop
outsl
mov
lret
in
xor
xchg
pop
or
out
jns
or
or
jl
inc
fadds
sbb
jmp
sbbb
leave
pop
imul
pop
in
mov
jbe
mov
pop
inc
fstpt
fidivs
std
jo
insl
or
lods
aam
pop
jge
repz
mov
mov
xor
test
dec
cmp
sub
xchg
stos
in
adc
jg
rcll
sub
jbe
loop
icebp
push
into
push
cli
dec
loope
shr
sub
and
mov
test
cli
shrl
jo
in
lea
xchg
and
sub
xor
pushf
xchg
mov
imul
and
popa
mov
lods
fmull
outsl
pop
pushf
push
inc
cmpsb
fadd
lods
push
subl
insl
fucom
mov
add
mov
push
repz
jg
lahf
mov
call
cmp
lret
ds
nop
mov
sbb
scas
test
mov
rorl
insb
ss
movsb
mov
out
dec
andb
add
cmp
or
mov
or
nop
data16
ja
addr16
sbb
iret
dec
lea
std
or
lock
mov
leave
in
cmp
jmp
mov
push
mov
mov
mov
test
dec
adc
repnz
xlat
mov
out
aad
inc
test
sar
sub
xchg
stos
pop
push
and
push
fmuls
fcomp
mov
mov
jle
scas
push
xbegin
adc
test
lcall
fucomip
or
dec
aaa
rcr
les
mov
sub
pop
jo
pop
pop
push
shrl
dec
xchg
dec
lds
jp
cs
xor
test
iret
jae
stos
push
lcall
cld
cli
rep
add
in
cmp
lods
xor
into
dec
fstpl
in
cmp
int3
jge
xor
fistpll
cmp
cwtl
push
into
fsub
and
insl
and
adc
repnz
mov
fwait
push
add
pop
inc
ljmp
and
orl
lods
jle
sahf
sbbl
jg
cmp
sbb
nop
fbld
idiv
push
shrl
mov
sub
test
out
xchg
sub
mov
mov
mov
int
jnp
lahf
sub
jns
lret
nop
daa
mov
lock
xchg
xchg
clc
pop
ss
cmp
int
enter
and
inc
inc
push
jne
push
je
popf
pop
or
cmp
mov
push
ljmp
mov
imul
or
push
outsb
adc
and
add
mov
orl
popa
or
inc
int
sbb
sub
jp
mov
mov
call
sbb
inc
xor
jle
insl
pop
add
and
movsb
mov
lret
std
push
cmpl
imul
or
fisttpll
gs
bound
xor
or
xchg
lea
testl
shrb
push
pop
mov
fistpll
adc
add
idivb
int3
pop
jno
ret
mov
jl
cld
rorl
mov
ss
pop
stc
dec
ds
insb
jnp
cmp
ljmp
fildll
mov
fwait
ret
jmp
xchg
add
ror
dec
add
pop
fdivs
cmpsb
test
les
and
or
aas
xchg
xor
fmuls
jp
adc
loope
nop
aas
jns
jno
int3
add
fdivrl
insl
lret
xchg
sub
js
or
out
frstor
and
mov
add
fildl
inc
or
xorb
xor
push
out
imul
and
sub
nop
cld
mov
add
adc
fnsave
or
ja
pop
cmp
push
shl
cmp
inc
adc
sarb
sub
adc
jno
fmull
dec
adc
push
jo
in
mov
fs
cmp
std
outsb
pop
fwait
outsb
in
icebp
inc
movsb
iret
rclb
fdivrs
push
into
adc
push
adc
ret
sbb
fwait
inc
test
add
mov
test
dec
nop
or
dec
mov
and
loopne
in
xchg
mov
lods
mov
fs
mov
loope
and
cmp
ljmp
jmp
outsl
mov
dec
clc
mov
ret
adc
xorps
iret
jle
xchg
lock
push
push
mov
xchg
adc
pop
call
xor
sub
lret
frstor
inc
mull
or
rcr
push
icebp
in
int
inc
pop
imul
cmpsb
mov
and
xchg
sbb
push
xor
inc
aas
pop
jnp
cltd
adc
pop
lods
jae
sub
jbe
ret
mov
xor
lds
mov
sti
adcl
or
in
jne
mov
xchg
mov
mov
xor
mov
xchg
bound
mov
pusha
xchg
xchg
insl
cmp
mov
sti
data16
jns
mov
flds
mov
xchg
sahf
cltd
push
xor
lock
add
inc
ret
and
aam
test
pop
popw
js
pop
xchg
mov
inc
lret
xor
in
mov
popf
pop
gs
jecxz
cmpsl
inc
dec
push
and
ret
out
dec
mov
sub
sub
xchg
cmp
or
pop
adcl
test
push
jge
sbb
jl
in
cmp
test
loop
xchg
adc
mov
jg
aas
scas
add
ficomps
jo
adc
lods
jg
pop
mov
xchg
jp
jne
inc
aam
xor
testb
lods
test
xchg
push
mov
int3
mov
dec
adc
les
pop
xor
pop
adc
and
lcall
mov
ja
pop
sarb
lret
lock
insl
pop
and
sub
es
cld
or
xor
or
sub
popa
inc
fcmove
mov
cmpsl
sarb
inc
inc
push
add
inc
cwtl
repnz
push
jl
jno
jmp
adc
or
jo
add
pop
xor
inc
in
out
push
inc
or
daa
push
cmpsb
xchg
ljmp
out
fs
in
pop
je
das
jg,pn
pop
push
mov
lret
push
mov
xchg
cwtl
pushw
add
psubsb
pushf
dec
sti
int3
mov
adc
ret
sub
arpl
notb
xchg
adcb
cmp
mov
cmpsb
iret
inc
xchg
jge
lcall
mov
mov
loope
cmp
inc
xchg
cld
sbb
movsb
paddusw
pop
scas
inc
fwait
ljmp
lds
pop
and
adc
push
cld
pop
adc
ror
cmp
xor
js
inc
mov
out
loope
ret
std
sub
jp
adc
dec
inc
push
std
scas
ja
je
mov
xor
cmpsb
add
sub
xchg
das
fiadds
aad
inc
into
adc
mov
pop
stos
outsb
jae
add
inc
jle
sub
pusha
jno
cwtl
test
loope
xchg
cmpsb
pop
js
adc
pop
int3
fldcw
mov
sbb
stc
inc
out
xor
ljmp
iret
pop
fnstcw
imul
mov
xor
xchg
les
sub
xlat
inc
hlt
cltd
mov
out
push
mov
mov
fmull
shrb
sbb
add
sbb
push
cmp
sub
mov
fldcw
pop
mov
lds
mov
int3
dec
sbb
mov
inc
mov
data16
shll
aas
stos
sbb
xor
sub
and
and
std
lea
xchg
sbb
xor
and
xor
adc
int3
sub
and
scas
mov
test
cmp
mov
test
jecxz
adc
jmp
push
cmp
cmp
subl
movsl
pop
mov
add
inc
ja
popa
and
mov
ja
sti
jae
sub
roll
roll
mov
sbb
in
lcall
arpl
push
cmp
cmc
mov
enter
imul
lods
fldenv
lds
repz
mov
scas
inc
and
lret
cwtl
push
xor
scas
inc
pop
les
xor
adc
xor
imul
pop
push
rclb
adc
ret
adc
fnstenv
aas
addl
orb
rcll
shr
push
xor
rcll
adcl
mov
add
xor
push
scas
xchg
cmp
sti
cmp
xchg
pop
sub
xorb
pop
mov
das
loop
push
push
popa
adc
aam
add
add
mov
lods
ja
sarb
add
fiaddl
popf
mov
dec
cmp
mov
pop
adc
and
aam
mov
fisubs
pop
jo
xchg
xchg
cmp
out
inc
testb
jns
lret
mov
push
aas
lds
mov
loopne
outsb
mov
add
xchg
add
sub
mov
cmc
mov
test
dec
jge
stos
jle
adc
push
jecxz
ds
dec
sub
sti
loopne
cld
shrb
imul
mov
cltd
movsl
mov
sub
adc
outsb
rolb
and
sub
popa
out
pop
mov
lahf
sar
add
cmp
call
ja
adc
ds
cmp
sarb
je,pt
adc
std
ret
mov
repnz
xlat
inc
aam
loope
adc
lds
jns
pop
mov
jg
lock
mov
cmp
dec
mov
and
push
xor
dec
xor
jmp
pop
inc
xchg
out
lahf
jg
and
add
sub
cmp
ffree
aad
add
filds
sbb
jle
loop
loop
jne
test
stc
sahf
jmp
pop
xchg
dec
push
in
aaa
dec
cmp
out
push
ja
jecxz
int
add
push
fnstenv
inc
mov
mov
faddp
mov
xchg
lock
sbb
lret
fmuls
fwait
cmpb
xchg
test
pop
int3
sub
fs
pop
jne
iret
sti
adc
add
insl
pop
outsb
test
and
mov
cs
test
dec
stc
lcall
pushf
in
mov
loope
les
ret
loop
pop
insb
pop
fimuls
lock
mov
les
push
imul
jg
loope
pop
or
cltd
add
stc
jne
call
pop
sti
in
mov
iret
pop
aaa
ja
cmpsb
mov
negb
cmp
les
hlt
out
orl
mov
xchg
cmp
cli
popa
scas
jg
loop
inc
idivb
inc
or
aad
xor
xchg
push
movsl
xor
inc
test
adc
xchg
mov
xchg
xchg
xchg
jmp
adc
out
repnz
lock
cld
nop
das
mov
mov
imul
test
cmc
stos
cwtl
jb
into
movsb
pop
inc
sbb
dec
aam
jecxz
inc
lods
cmp
jns
test
adc
ljmp
cld
pushf
cmp
and
sub
ds
pop
stos
mov
es
inc
out
inc
movl
pop
enter
cwtl
test
flds
mov
dec
mov
push
pop
repnz
rcll
mov
addr16
mov
cmpsb
mov
sub
stc
fidivl
jmp
xor
or
bound
and
iret
ficoms
mov
xor
sub
lret
pminub
and
lret
xor
ret
jne
aaa
lds
pop
data16
mov
fisubs
adc
test
loop
out
dec
mov
pop
pop
icebp
pop
test
jge
jbe
mov
outsb
jne
jbe
aad
filds
push
aam
mov
dec
or
cmp
dec
ss
in
mov
lods
cwtl
push
ss
rolb
ljmp
xor
mov
popa
pmuludq
mov
pop
rcrb
xor
daa
addl
es
mov
adc
inc
in
inc
daa
rcl
loope
inc
xchg
into
idivl
jb
push
add
popaw
out
pop
mov
mov
stc
mov
aam
mov
cmpsl
test
sub
addl
pop
ja
xor
out
pop
jecxz
inc
mov
or
push
out
leave
loop
mov
push
aas
int
mov
mov
cli
push
jl
loope
sbb
shll
lods
rolb
inc
adc
notb
insl
bound
loope
cld
gs
dec
jl
lcall
push
pop
add
pop
outsl
ret
jge
stos
mov
negl
cmpsl
test
add
gs
mov
scas
imul
and
pop
and
sub
jg
or
mov
hlt
and
aaa
jle
mov
das
or
pusha
push
dec
and
in
push
sub
cmp
adc
or
xor
or
adc
add
jns
bound
rcr
inc
fstl
push
add
cmpsl
adc
in
inc
arpl
pop
or
js
xrelease
lret
movl
dec
popf
out
lods
rcrl
sbb
lret
dec
push
call
pop
mov
popf
cld
jnp
stos
daa
inc
add
ja
jne
test
daa
mov
pop
fdivs
loope
aam
mov
testb
push
push
sub
push
cs
loope
pop
jns
add
push
add
dec
lcall
xchg
dec
cmp
xor
into
push
lidtl
gs
ret
leave
sub
jp
stc
in
inc
adc
add
and
sahf
pop
xor
push
push
sub
sub
push
inc
lea
es
mov
addr16
mov
stos
or
dec
imul
fcomps
xor
lahf
ljmp
push
pop
mov
cli
sub
jnp
lahf
mov
jnp
dec
out
or
in
pusha
add
mov
mov
outsl
in
aad
int
cli
fstl
jp
aas
cmp
or
and
mov
jp
aas
jge
lahf
daa
sub
cmp
inc
push
movsl
xchg
adcl
sbbl
sub
xchg
cmp
or
pop
pushf
pop
push
and
cld
xchg
test
out
xor
aaa
call
sahf
gs
repz
cmp
jns
fcoms
or
cmp
jg
pushf
fsts
int
sub
std
dec
adc
enter
adc
das
dec
in
stos
ja
adc
jne,pn
popa
in
xor
sub
clc
lea
ljmp
sub
into
adc
idivl
repnz
jnp
stc
xchg
clc
mov
jae
test
sub
dec
iret
mov
popa
xor
mov
and
jmp
jmp
cli
and
mov
jle
outsl
lret
or
inc
lock
test
jo
outsl
fcoms
jmp
mov
out
nop
xor
fldt
popa
ljmp
addr16
mov
andb
filds
jp
popa
scas
loope
xchg
hlt
and
les
stos
scas
cli
xchg
test
push
push
push
hlt
inc
dec
mov
in
imul
dec
mov
dec
mov
cmp
xor
sub
stos
jne
fistpll
insl
push
and
cmpsb
inc
sbb
or
leave
aas
aas
mov
sub
push
mov
test
adc
scas
xchg
adc
enter
xchg
es
adc
inc
lea
aam
jle
dec
jo
nop
push
stc
aas
inc
scas
in
sub
xchg
inc
pop
cmc
push
jle
xor
jne
lods
stos
arpl
cmpl
push
inc
sub
mov
jno
push
nop
inc
cs
in
cmp
mov
ficompl
jno
aad
sub
push
cwtl
iret
in
push
and
mov
test
add
pop
cmp
push
and
repnz
divl
insl
adc
ret
dec
lds
xchg
cmp
fisubrl
push
fs
cmpsb
mov
mov
and
adc
jg
inc
cmp
fstpl
ss
mov
xchg
xchg
das
rclb
stc
and
and
xchg
sbb
lret
add
scas
xlat
les
xchg
mov
jns
repz
movsb
mov
inc
mov
leave
out
pop
fsub
mov
push
xchg
bound
inc
cli
sbb
stc
jmp
out
xchg
jb
cmp
xor
stc
mov
cmp
inc
cmc
enter
int3
arpl
pusha
and
xlat
and
fs
xchg
push
adc
jb
xor
dec
adc
icebp
xchg
sti
mov
scas
adc
sub
add
sub
pop
push
cmc
outsb
pop
daa
fisttps
cltd
xchg
jmp
gs
mov
mov
popf
inc
mov
xchg
mov
inc
pop
mov
jp
sbb
inc
cltd
jo
push
mov
imul
pop
or
ss
and
ds
shrl
push
negl
jmp
lcall
or
mov
jl
bound
and
mov
cwtl
push
sahf
dec
mov
aas
gs
fsubrl
sub
jge
add
mov
nop
data16
lods
fsubp
popf
jns
adc
mov
imul
dec
xor
inc
or
pop
jnp
jg
cmp
jle
ret
stos
cmp
lahf
je
xlat
cmpsl
pop
orb
in
shrb
push
cmp
out
mov
out
mov
pop
mov
jecxz
pop
test
push
jl
or
insb
add
cmpsb
pop
push
scas
cmpl
jo
lods
lds
stos
scas
dec
mov
mov
fmull
mov
ljmp
fidivrs
pushf
mov
aam
js
mov
nop
mov
xchg
and
in
sbb
push
xchg
sub
dec
cld
pop
xor
rolb
ss
arpl
adc
push
mov
xor
dec
lods
mov
lahf
jle
push
sub
inc
mov
mov
xlat
sti
adc
jne
inc
and
and
push
out
mov
gs
inc
fwait
test
push
jae
pop
add
fbld
aam
out
jp
sbb
jnp
addb
cmp
mov
stos
jg
push
stc
sbb
dec
ljmp
sarb
mov
push
mov
jmp
lea
inc
fiadds
cmp
mov
outsb
dec
cmp
dec
std
fs
mov
aam
pop
inc
ficomps
inc
insl
and
adc
addr16
inc
or
loop
adc
mov
push
mov
pop
dec
push
xor
out
mov
fimuls
lcall
sub
cmpsl
lcall
ss
pop
vmwrite
push
test
push
test
test
xor
in
ds
lahf
pop
cli
sub
imul
mov
and
loop
push
push
mov
sub
sub
test
mov
xor
dec
iret
clc
ret
popf
les
xchg
xchg
pop
mov
mov
mov
fdecstp
inc
and
cmp
xchg
es
rcl
out
in
leave
mov
test
pop
cmp
sub
push
mov
xor
sub
sbb
push
fdivrl
shlb
hlt
les
xchg
hlt
mov
and
push
jecxz
jle
mov
cmp
sub
jecxz
jno
push
mov
pop
cmp
lcall
dec
or
js
and
pop
leave
fwait
adc
ret
push
les
cmp
lahf
cmc
or
mov
and
repnz
xchg
sub
push
pushf
lods
ret
lret
jns
mov
sbb
shrb
pusha
xchg
cmp
sbb
fldcw
mov
mov
sub
mov
test
jns
es
out
xchg
int3
dec
loope
cmpsb
sbb
adc
lcall
mov
jae
and
fwait
cld
es
faddl
cmpsl
std
sbb
leave
icebp
xchg
out
push
sti
rol
sbb
sarl
add
ljmp
idivl
add
sbb
shl
jno
test
repnz
push
adc
jl
adc
mov
xchg
adc
das
jl
sbb
mov
add
jmp
sbb
je
cmpxchg
jl
clc
jbe
ss
pop
sti
pop
xchg
push
fwait
shll
mov
cmp
xchg
call
lods
push
push
loopne
push
popa
add
imul
addr16
pop
cmp
pop
sub
mov
inc
stos
dec
inc
dec
addr16
mov
fisubrl
xor
xor
cmp
dec
mov
lods
inc
push
xchg
hlt
popf
inc
push
dec
pop
cmp
xchg
mov
aam
sbb
jns
jne
pop
adc
push
pop
xchg
pop
adc
int3
add
xor
repz
fidivs
mov
mov
mov
jns
fdivrl
cwtl
das
jg
cmpl
call
clc
xor
inc
iret
shrl
sub
inc
cmpsl
sbb
bound
aas
test
popa
push
movsb
fwait
and
and
cltd
fs
mov
mov
xchg
addr16
adc
xchg
loope
push
js
adc
mov
cld
aaa
adc
ret
xor
xchg
push
dec
scas
jg
push
xchg
sub
push
mov
icebp
dec
in
mov
push
fsub
dec
loope
pop
scas
popa
cmpsb
insb
adc
out
sbb
and
xor
add
push
pop
xchg
push
or
mov
ljmp
and
and
ret
into
pop
xlat
std
adc
and
lods
fisttpll
cmp
add
xchg
pop
sub
imul
stos
lds
pop
ret
movsb
xor
roll
int
cld
pop
dec
jg
xchg
or
pop
push
ret
cmp
mov
add
push
jnp
insb
mov
cltd
and
dec
mov
ret
adc
outsb
xchg
push
adc
adc
loop
stos
repnz
or
mov
mov
dec
jo
xchg
xor
into
fsub
pop
xchg
mov
mov
clc
mov
jp
or
pop
push
push
xchg
test
dec
loope
orl
adc
or
sahf
hlt
mov
mov
imul
decl
mov
add
adc
test
jne
sub
mov
imul
sbb
sub
dec
cmp
bound
mov
sbbb
push
jbe
or
pop
cmp
into
js
cwtl
inc
scas
fs
jge
std
push
in
mov
les
jnp
leave
out
pop
test
movsl
aam
sub
or
dec
movsl
pop
fmull
aad
iret
dec
fdivrl
outsl
pop
or
sbb
jns
jmp
mov
xlat
pop
or
inc
dec
adc
xor
sub
add
mov
lret
loope
xor
fildl
and
testb
iret
cmp
sub
mov
xor
sahf
jno
pop
popa
loope
dec
inc
test
lea
cmp
shlb
and
adc
cmpsb
mov
xor
jmp
push
add
aas
jb
cmp
dec
pop
addr16
mov
mov
mov
rcrl
lret
fidivrs
mov
int
imul
adcb
imul
xor
pop
dec
and
adc
push
aaa
lcall
push
xor
fsubs
out
jno
jb
cmp
shrl
arpl
mov
dec
scas
and
pop
sbb
mov
cltd
pop
sub
repnz
nop
jge
inc
jmp
insl
push
ror
mov
nop
stos
fildll
daa
or
sbb
xchg
and
outsl
sub
lea
out
cli
ret
dec
pop
adc
mov
fs
xchg
scas
add
out
ret
or
inc
mov
jmp
call
mov
inc
stos
cmp
cmp
test
and
cmp
dec
sub
mov
add
push
into
in
fisubs
pop
pop
cmp
xchg
ret
cwtl
stc
loopne
mov
inc
jbe
call
out
mov
test
lds
loopne
jo
jbe
loopne
inc
sbb
daa
jae
imul
movsl
addr16
mov
dec
ljmp
adc
cmp
in
and
into
inc
jne
movsb
enterw
adc
mov
pop
or
cmpl
pop
sarl
inc
jno
push
add
scas
imul
push
repnz
jo
sub
sbb
lods
insl
add
dec
lods
or
imul
je
pop
arpl
sub
push
in
inc
push
adc
lds
adc
inc
mov
sbb
pop
repnz
fists
dec
rcll
jae
jbe
mov
push
dec
pop
inc
adc
test
adc
sti
out
pop
mov
mov
iret
sbb
xchg
subb
adc
mov
imul
stc
rorl
push
bound
cs
out
out
stc
rcll
mov
xchg
sbb
pop
mov
cmpsb
incl
bound
gs
xchg
mov
push
mov
mov
xchg
das
cld
mov
sub
mov
push
popa
gs
mov
xlat
jno
or
ficomps
leave
lret
clc
cld
push
int3
xchg
movsl
jae
xchg
test
push
leave
lods
jb
test
adc
test
and
sbbb
stc
mov
repz
pop
pop
rolb
aam
jl
push
mov
in
gs
cmp
add
jp
adc
lods
lret
xor
adc
dec
fwait
mov
pop
add
mov
imul
xor
adcl
cwtl
push
jne
shll
stos
int3
and
fs
add
jp
pop
mov
clc
xor
shll
dec
out
or
mov
push
or
add
jb
jmp
hlt
mov
pop
rcrb
orl
mov
hlt
mov
or
in
outsb
xor
in
repz
pusha
push
sbb
mov
mov
test
sub
sub
fadds
mov
adc
lea
test
pop
mov
insb
addb
mov
js
adc
movsl
pushf
gs
ficomps
xchg
call
aaa
xchg
mov
mov
jne
out
adc
cli
out
in
icebp
les
push
fcmovu
sbb
sbb
sub
cmp
jbe
jmp
dec
aas
dec
popa
fdivr
std
out
and
push
pop
mov
mov
lea
mov
and
mov
push
repnz
push
shlb
stos
ror
adc
add
incl
leave
insb
mov
cmpsl
dec
test
jg
adc
repz
pushf
push
ret
in
dec
push
popf
sbb
rolb
ficoml
int3
jp
lds
movsl
gs
sub
push
testl
out
lock
xor
pop
out
aaa
add
or
inc
sbb
aad
xlat
sub
jae
in
jne
jbe
aaa
mov
fmull
push
add
out
fdivrs
insb
fs
adc
dec
icebp
out
or
adc
ficomps
testl
xchg
jno
in
nop
in
ror
je
inc
je
andl
mov
out
xchg
pop
movsl
push
mov
icebp
repz
sub
out
mov
xchg
test
mov
inc
test
push
imul
nop
clc
scas
mov
pop
mov
das
ret
shlb
fldt
js
fstps
and
pop
inc
jl
adc
out
sub
cmpsb
dec
pop
jnp
mov
aad
in
fcomps
andl
test
mov
and
mov
lret
jge
pop
cmp
testb
inc
push
in
mov
inc
and
and
mov
push
adc
ret
outsb
adc
mov
out
and
push
xchg
dec
imul
out
sub
aad
jns
fcoml
imulb
push
outsb
jne
enter
in
sbb
hlt
inc
fsts
push
xor
fs
lahf
dec
cmpsb
cs
aad
sub
aaa
sub
inc
add
and
pusha
test
sbb
sbb
lea
pop
push
scas
jne
iret
rcrl
pop
icebp
sarb
dec
loope
ret
push
rclb
pop
add
dec
rolb
cmpsb
call
xor
add
xchg
test
and
stos
in
lahf
adc
xlat
xchg
xchg
cmpsb
into
insl
mov
cmc
xchg
and
pop
mov
dec
scas
loope
hlt
adc
into
or
jb
fwait
pop
js
out
push
mov
inc
cs
nopl
xlat
cmc
in
inc
or
or
insl
xchg
and
xchg
lret
xchg
lock
jns
adc
jecxz
jle
xor
sbb
in
nop
stos
mov
stos
clc
dec
data16
xchg
mov
pop
and
sar
out
add
mov
push
orb
ljmp
add
imul
pop
mov
stos
scas
int
push
xor
cwtl
jb
push
dec
push
xor
shll
mov
fildl
mov
lahf
sub
push
fists
jp
sub
les
xchg
movsl
in
mov
fstps
inc
push
notl
xchg
adc
repz
or
out
aas
push
mov
cmc
mov
fs
subb
lds
cmp
xor
jbe
lret
adc
fists
mov
inc
pusha
dec
test
js
adc
mov
pop
mov
pop
mov
xor
lds
sbbl
js
sub
ja
jb
cmp
sbb
inc
imul
inc
jae
xchg
dec
bnd
dec
cltd
call
scas
push
inc
dec
sahf
xchg
sbb
sub
mov
insb
adc
inc
add
jo
adc
aam
xor
mov
ret
addl
pop
mov
leave
cmp
lret
pop
test
mov
sahf
fdivrl
out
ret
inc
xchg
andb
ret
lea
jge
push
pop
pop
iret
enter
xchg
rcrl
xchg
jno
std
sbb
mov
fcomps
pop
cmc
movsl
inc
xor
mov
push
jo
arpl
rorl
pop
pushf
mov
lods
fidivl
mov
mov
cmpsl
ss
or
clc
mov
scas
imul
mov
stc
testl
rcr
and
and
add
ret
psubsb
or
adc
test
mov
stos
les
sub
out
les
inc
test
dec
insb
pop
call
push
jle
scas
in
push
shll
xor
pop
xchg
fadds
shlb
sahf
aam
or
pop
or
divb
xchg
inc
shlb
jbe
out
jo
push
out
leave
inc
lcall
imul
jge
out
fsts
xor
jle
test
rcrb
rcrl
lods
xchg
popfw
rolb
xchg
push
pop
dec
dec
pop
rorl
std
mov
iret
mov
arpl
les
xchg
in
or
arpl
jb
mov
xchg
mov
mov
clc
sahf
pusha
in
push
fisubrs
jbe
xor
je
push
fmuls
lret
push
loopne
and
jno
dec
mov
sub
aas
scas
lods
and
mov
leave
aas
dec
cwtl
loope
add
cmp
xchg
and
fstl
mov
popa
add
test
mov
call
add
push
jmp
inc
xchg
mov
scas
addr16
mov
dec
push
mov
in
sub
clc
xor
sub
cmp
call
rcrl
mov
fsubrl
mov
mov
mov
sub
pop
ret
aaa
adc
fisttps
cmc
in
and
outsl
xor
lds
fbstp
dec
mov
mov
les
xchg
les
in
cwtl
sub
aaa
xor
add
lahf
test
repnz
jbe
movsl
out
jl
aaa
and
and
xor
inc
sti
inc
icebp
pop
add
xchg
inc
adc
mov
idiv
movb
aam
pop
mov
jp
js
push
pop
cmpl
fcmovb
or
pop
ficomps
mov
dec
jno
stc
aad
inc
lcall
popf
punpckhbw
inc
push
adcb
mov
mov
repnz
test
pop
add
lcall
cmp
notl
je
pusha
jb
xor
xchg
in
sbb
sub
scas
in
mov
mov
mov
and
add
mov
cmpb
loopne
ret
insl
fistpl
call
testl
adc
cli
xor
gs
push
dec
jge
insb
add
push
add
cmpsb
and
int3
roll
clc
stc
mov
call
mov
lock
sub
xchg
inc
test
arpl
add
lds
and
clc
fsts
fsubrs
dec
mov
pop
add
push
jmp
inc
inc
xchg
leave
lea
push
repz
lcall
jmp
and
adc
pop
inc
dec
test
push
pop
push
test
mov
mov
push
mov
scas
sub
dec
mov
push
sarb
cmp
and
mov
cmp
into
out
lahf
movsl
inc
std
pop
xlat
xlat
xorl
sbb
rcrl
cmpsb
mov
sti
cwtl
jecxz
cmp
sbb
scas
add
ljmp
popa
aas
sub
dec
mov
inc
push
arpl
sti
fs
jl
jecxz
jmp
xor
cmc
cmp
ret
dec
jecxz
sahf
orl
cmp
sbb
ljmp
lcall
sub
mov
pop
jno
jns
adc
xchg
xchg
shll
sbb
out
add
jl
and
outsl
enter
cli
lock
xor
enter
enter
mov
ja
shrb
xor
shrl
fistpll
add
into
clc
jl
bound
flds
shlb
xlat
mov
repnz
enter
test
jns
cmp
stos
and
fisubrs
mov
fs
add
cmp
hlt
fwait
imulb
jge
and
shll
out
cmp
pop
aaa
fmuls
sbb
sub
inc
mov
jbe
adc
insb
inc
cmp
out
xchg
adc
jp
adc
and
mov
and
stc
mov
mov
or
add
cmpb
mov
push
push
lret
xor
decb
jp
outsl
mov
scas
jbe
data16
adc
add
dec
xchg
out
push
push
lret
mov
push
mov
dec
mov
and
add
dec
sub
dec
mov
push
xor
mov
ja
test
sub
arpl
sbb
xlat
loop
inc
lret
mov
push
cltd
jecxz
push
cmp
shll
pop
jle
xlat
xor
roll
mov
lods
pushf
fisubs
popf
cmp
sub
cmp
mov
and
ja
inc
xchg
js
jb
addr16
sbb
sti
push
cmp
jl
cmp
scas
movsl
and
call
les
incl
cmp
adc
and
shll
popa
decb
xor
xor
pop
inc
xchg
sbb
or
mov
cmp
or
pushf
xor
sbb
push
shlb
and
movsb
push
and
and
bound
fstpl
test
dec
xor
xchg
lock
dec
lahf
mov
mov
xchg
mov
inc
or
movl
xor
jns
or
notl
adc
aad
dec
shrb
dec
and
pop
sub
stc
imul
les
aas
popa
pop
xchg
mov
xchg
fistpl
pop
inc
out
aad
and
xchg
loopne
xchg
mov
test
arpl
xchg
jg
std
arpl
cmc
cmp
cmp
inc
mov
int
jbe
or
cli
daa
lahf
add
cli
gs
mov
sub
cmp
out
mov
data16
and
sahf
sub
dec
cmp
movd
jmp
add
mov
dec
scas
add
mov
dec
adc
dec
pop
lds
xor
rorl
stc
notl
mov
adcb
jmp
lods
sbb
xchg
fwait
daa
das
cmp
insl
pop
inc
std
mov
mov
imull
dec
mov
fnsave
inc
dec
mov
mov
pop
push
call
loopne
xor
lds
and
xchg
xchg
std
mov
ljmp
ret
mov
loope
rorb
pushf
push
fnstcw
cli
sbb
xchg
sub
jg
leave
cld
pop
popf
lahf
inc
int
lds
push
sub
cmp
lods
dec
mov
into
xchg
sbb
push
stos
ffreep
cmc
ja
jmp
aad
enter
cli
lcall
cld
xor
sub
inc
dec
push
push
sarl
sbb
jnp
nop
and
cmp
xchg
mov
xchg
push
push
cmp
movsl
mov
jbe
in
mov
imul
pop
pop
subl
add
mov
mov
cmp
add
pop
xor
sbb
nop
cld
das
in
loope
and
cmpsl
addl
sbb
inc
mov
lock
pop
and
pop
movsb
add
jo
or
sbb
inc
test
or
pop
mov
mov
std
cltd
cltd
out
xor
xor
xlat
mov
pop
xor
lods
xor
lret
out
and
mov
leave
lods
test
or
scas
push
inc
sahf
fisubrl
jno
mov
add
lods
sub
cmpl
mov
sub
out
adc
jecxz
fstps
test
sarl
mov
pop
adc
mov
cltd
fmull
dec
jo
filds
mov
xchg
in
add
int3
inc
jne
lcall
daa
jns
cs
fwait
cmpsb
in
out
jbe
mov
jb
push
xchg
cwtl
cmp
adc
lret
les
mov
pop
pop
in
dec
add
inc
rcll
cmc
push
leave
mov
stos
push
cli
xchg
inc
pop
sarl
xor
loop
jae
les
mov
fwait
bound
mov
loope
sbb
sbb
into
cltd
fdivr
jbe
adc
loopne
rcrb
pinsrw
xor
flds
into
jae
dec
dec
mov
les
fs
addl
inc
mov
or
pusha
addb
mov
push
sub
int3
and
pop
cmp
leave
push
les
in
push
sbb
push
shlb
loopne
inc
sbbl
jecxz
jp
je
mov
sbb
call
and
lock
lret
cmp
outsb
ja
mov
rcrl
or
out
mov
sub
mov
xchg
aam
pop
push
pop
add
adc
pop
out
mov
icebp
es
pop
enter
pop
jbe
and
mov
fisubrs
or
pusha
xor
push
popf
push
test
lahf
idivb
sahf
xchg
lock
or
and
cmc
inc
test
inc
inc
test
or
jmp
out
mov
daa
clc
dec
inc
push
add
xchg
adc
enter
outsb
pop
sbb
add
movsl
sbb
int3
pop
jmp
jecxz
mov
cmp
xorl
pop
loop
jp
aaa
fsubrs
jb
push
xchg
jp
mov
jg
jmp
in
pop
daa
fstpt
or
xchg
rorb
js
pop
sahf
push
mov
mov
adc
and
inc
mov
push
call
ss
pushf
xchg
fstpt
pop
fdivs
out
scas
test
or
xlat
lods
cmp
or
sbb
xlat
jae
rorb
cli
sub
jmp
shlb
aaa
je
mov
push
lret
lret
or
lcall
xchg
xor
ret
mov
add
paddd
in
inc
lods
sbb
jle
in
push
xor
mov
pusha
push
mov
stos
push
lock
jmp
repnz
pop
clc
push
ja
imul
std
adc
xchg
movsl
cmp
dec
xchg
mov
jl
lock
add
testl
fbld
add
clc
es
mov
sbb
leave
cmp
cmpb
jle
fimull
push
mov
add
xor
insl
mov
mov
and
pop
pop
inc
mov
cmpsb
stos
adc
jg
loopne
mov
clc
sarl
out
in
or
dec
push
or
inc
and
out
imul
jae
sbb
clc
dec
shr
push
pop
and
in
pop
shr
xchg
fdivrs
or
jnp
add
cltd
outsb
mov
cmp
enter
xchg
pusha
mov
sub
mov
xchg
mov
ja
xor
out
data16
mov
mov
stc
pop
cmpsb
rcrb
in
dec
pop
pushl
adc
je
push
shlb
cli
cmp
je
outsb
gs
lahf
push
sub
mov
mov
xchg
jb
cwtl
sti
fbstp
sbb
mov
add
std
xchg
xor
shr
inc
lret
add
mov
rcr
bound
push
loope
mov
xchg
push
mov
stos
jle
pop
sahf
sbb
pop
adc
fiaddl
je
lock
lret
scas
jo
shr
clc
jp
jbe
cmpsb
push
dec
mov
ja
xchg
adc
adc
xchg
dec
iret
std
dec
out
adc
cmpsb
xchg
sbb
out
imul
dec
ljmp
insl
orb
xor
mov
jle
cltd
testb
js
mov
stos
sub
cmpsl
or
pop
into
sbb
dec
test
rol
mov
mov
testl
enter
hlt
adcl
dec
jecxz
dec
fs
pop
nop
std
mov
scas
add
sbb
loopne
and
inc
cld
sbb
sub
cltd
mov
adc
rolb
int
dec
inc
movsl
push
rcrb
aad
fstpl
jo
jns
push
imul
push
mov
repz
popa
dec
xchg
cmpsl
filds
lahf
addr16
dec
adc
leave
aaa
inc
repz
dec
adc
cld
js
dec
push
insb
popf
in
sub
mov
xor
lret
sub
out
xor
in
dec
sbb
out
lods
push
mov
sub
in
mov
mov
dec
lcall
iret
mov
xlat
xorb
dec
aaa
iretw
aam
ret
stos
repnz
sbbl
xor
movsl
or
xchg
pop
mov
jae
cwtl
mov
pop
jp
jnp
dec
mov
inc
mov
iret
adc
add
jp
adc
int
inc
jnp
imul
cli
or
subl
xchg
xor
cmp
and
xorl
rol
push
mov
lods
cli
neg
sub
shrb
sbb
dec
add
jae
fisubrl
incl
jecxz
aaa
dec
dec
xor
add
dec
sbb
rcl
add
mov
jbe
pop
popf
out
cmpsb
xor
xor
mov
xor
add
xor
test
xchg
mov
fwait
sbb
fidivl
sub
push
ja
jp
scas
loop
push
push
and
cmp
testb
popa
outsb
cmp
adc
and
subb
adc
scas
dec
clc
push
push
call
and
jge
mov
lods
test
add
xchg
orb
mov
out
data16
lods
mov
mov
inc
out
add
xchg
loop
das
repnz
mov
fwait
js
in
cvtpi2ps
mov
adc
mov
add
ja
mov
insb
in
in
insl
cmp
xorl
or
call
aam
inc
cli
movsl
xor
rcl
mov
sbb
aaa
sub
xor
dec
roll
cmp
into
pop
jne
sbb
arpl
call
adc
mov
out
mov
pop
aas
xor
or
mov
scas
mov
mov
inc
shll
test
int
int
pop
cmp
icebp
push
adc
int3
xchg
enter
inc
cli
mov
enter
dec
jb
frstor
out
lret
mov
into
mov
sub
push
mov
dec
stc
xor
push
out
jns
xor
dec
mov
lahf
and
add
rcl
sahf
xchg
mov
pop
lret
ss
loope
out
sti
lea
pop
addl
jge
pop
sbb
push
lret
ljmp
bound
test
mov
cmp
dec
in
cwtl
in
arpl
sub
add
sub
sbb
pop
jmp
lret
sbb
mov
cmp
xchg
pop
movl
shlb
mov
test
subb
lock
lods
xor
fcomp
sub
push
jb
mov
lret
mov
mov
pushf
sbb
inc
push
in
imul
adc
jg
popf
cmc
inc
cmc
out
in
not
mov
mov
pminsw
sbb
mov
roll
mov
dec
push
or
icebp
pop
hlt
push
je
and
iret
lcall
pop
outsl
pushf
loope
out
push
sub
inc
push
lds
adc
fidivrs
fidivl
xor
test
fsubrs
inc
mov
and
pop
outsb
das
lock
enter
sub
add
add
dec
pop
sub
adc
popf
lret
stc
sub
add
fsts
push
sub
inc
shl
cs
xchg
lret
out
movsb
jmp
xchg
push
xchg
lret
push
mov
inc
jae
aam
cmp
sbb
sub
or
aad
xor
sbb
mov
sub
mov
sub
sub
jmp
jo
movsl
pop
mov
xor
data16
in
push
add
mov
data16
leave
movsb
jns
stos
into
scas
or
imul
imul
orl
xchg
scas
xchg
cltd
in
stos
and
test
movb
movsl
repnz
or
loopne
popf
dec
dec
jl
jae
mov
mov
cmpsb
pushf
cltd
cs
hlt
and
pop
mov
fistl
rcl
test
ret
jle
mov
push
int
push
sti
sub
clc
xchg
cmp
jp,pt
mov
jl
push
mov
cmp
mov
push
fcmovnb
jmp
fwait
pusha
sub
xor
popa
rorb
inc
enter
or
push
ljmp
adc
add
stc
loop
loopne
mov
push
mov
daa
push
lea
pusha
xchg
push
pop
js
icebp
xchg
and
jnp
push
or
or
push
sarb
inc
hlt
out
imul
xchg
dec
shlb
add
adc
sub
cmp
mov
sub
push
dec
xchg
jl
scas
addr16
divl
movsb
stos
mov
hlt
add
movsb
pcmpeqd
dec
pop
sbb
push
and
xchg
add
mov
jmp
ja
sbbl
enter
test
fsubrs
sub
cmpsl
in
js
scas
mov
inc
cmp
aaa
addl
sub
sbb
xor
ja
aam
aam
clc
fisubrs
push
and
mov
loopne
sarl
pop
movsb
cli
mov
lcall
daa
inc
xlat
and
xchg
mov
aad
add
pop
cltd
shrb
ss
inc
cltd
or
divb
scas
pop
cli
std
repnz
inc
jle
dec
jae
add
sub
mov
rol
imul
mov
out
add
in
mov
inc
pop
rolb
or
daa
dec
inc
dec
xor
xchg
and
scas
mov
movsl
jo
mov
mov
sbb
xor
cwtl
lock
add
sbb
push
sub
inc
mov
imul
int
sub
xchg
lret
lods
adc
das
jecxz
dec
push
aam
insl
jo
jmp
push
xor
mov
fsubl
cmpsl
jb
enter
jae
dec
xor
fadds
mov
loope
aas
jmp
inc
add
bound
into
and
cli
add
sub
ret
ss
shl
push
or
mulps
pop
ret
xor
in
push
js
insb
pushf
popf
mov
lds
xchg
push
aaa
dec
mov
xchg
sti
imul
xchg
shlb
and
imul
lret
addr16
push
out
les
mov
jb
fmuls
xchg
cmp
pop
movsl
jmp
mov
cmp
or
mov
cwtl
inc
outsl
xchg
cmp
imul
xchg
std
stos
adc
jae
adc
or
mov
imul
and
clc
mov
jmp
movsb
stos
xor
mov
lret
inc
les
fnstcw
dec
xchg
lods
repnz
push
outsb
inc
dec
xorb
nop
mov
pop
jns
jg
sar
inc
loopne
pop
rclb
and
jbe
scas
jecxz
push
dec
xchg
xchg
pop
lahf
xchg
fs
jno
sub
and
or
sub
xchg
mov
or
dec
fsts
ficomps
rcrl
xchg
popa
repnz
pusha
pmulhw
inc
push
mov
lahf
outsl
mov
adc
pop
dec
pop
not
ds
into
inc
mov
cmp
sbb
arpl
jle
inc
movsb
xchg
mov
aaa
mov
ja
mov
mov
in
cmp
dec
clc
clc
or
stos
pop
add
or
xor
adc
dec
lcall
popf
push
fnstsw
lret
dec
fsubrp
fdivs
out
xchg
xor
popa
jo
imul
es
mov
lock
adc
fnstcw
imul
imulb
fnsave
negb
mov
scas
rorb
pop
test
sub
lods
fnstenv
out
ljmp
and
jmp
sbb
sbb
mull
lret
xchg
adc
sub
mov
jmp
xor
mov
cltd
push
xlat
cmpb
scas
cmp
push
cmp
mov
sbbl
out
push
cmpb
push
jo
and
sti
outsb
js
lods
icebp
addr16
add
lods
inc
push
ja
jge
inc
movzwl
xor
test
sarl
sub
dec
and
pop
push
inc
xchg
lds
xchg
mov
ficoms
cmc
xchg
icebp
fldt
mov
ss
cs
fnstcw
push
push
subl
imul
cwtl
test
test
xor
pop
adc
test
jae
hlt
fsubl
lds
in
sub
test
pop
jnp
lcall
jb
pop
shll
push
lcall
sub
jge
jo
mov
aam
ja
sbb
jmp
icebp
repnz
inc
fucompp
pop
das
inc
shrl
sbb
mov
pusha
push
rclb
call
loopne
pushf
mov
loop
movsl
xchg
out
mov
push
aam
aas
push
repnz
lret
jno
vpor
loopne
cwtl
lds
xlat
cmp
fnstcw
in
jns
jno
into
mov
xchg
xlat
dec
jbe
enter
dec
mov
and
jg
mov
sbb
les
pusha
mov
mov
inc
dec
cwtl
addl
imul
call
sub
add
sbb
sahf
dec
push
rcrb
lret
adc
movsl
mov
jno
je
test
js
adc
or
fs
jp
test
rorl
mov
mov
mov
in
js
adc
xchg
push
jecxz
aas
or
int3
adc
ja
add
daa
push
mov
iret
movsl
lds
jg
jae
pop
fcmovne
mov
jmp
mov
add
or
inc
fildl
add
push
cli
mov
jle
push
aam
sti
pop
repnz
in
ljmp
pop
movsb
or
push
scas
push
popf
int
jmp
mov
mov
jb
xor
cld
mov
cmpsb
xor
push
clc
sbb
aaa
pop
xchg
std
daa
or
or
stc
xor
jo
lods
aam
cmp
jg
mov
scas
cmp
lahf
addb
xor
sub
cli
dec
xor
sbb
pop
jbe
mov
inc
dec
out
ljmp
push
add
mov
scas
mov
xchg
mov
stc
sbb
adcl
xlat
imul
cmp
loope
js
pop
sbb
push
sub
icebp
push
add
jp
push
jae
pushf
lock
lcall
mov
adc
outsl
mov
push
hlt
dec
icebp
mov
adc
mov
cmc
xlat
jnp
add
iret
push
xchg
xor
popf
repz
pop
leave
push
jb
jp
dec
das
lock
ret
repnz
test
cwtl
jo
and
sbb
sub
mov
imul
outsb
lcall
inc
or
xor
jbe
cmp
xor
mov
lods
mov
fisttpl
or
nop
mov
and
aad
push
mov
xchg
sbb
xor
fwait
xchg
mov
fisttps
ss
loopne
jecxz
popf
cmp
mov
daa
cmp
rcrl
mov
loope
adc
out
insl
mov
push
rolb
add
jmp
xchg
cmp
fists
cmp
scas
pop
fildll
xchg
push
test
ficoml
push
xchg
sahf
sub
or
in
jle
pusha
xlat
ja
jge
jo
jne
cmp
test
mov
int
xor
push
jbe
dec
mov
int
aas
add
xor
lock
jo
mov
add
cmp
dec
gs
jno
in
push
gs
int3
mov
movl
pop
mov
imul
xlat
xchg
cmpsl
jmp
and
sbb
dec
xchg
xchg
in
sub
push
fistl
push
mov
in
dec
movsb
inc
inc
add
aas
lods
mov
sbb
inc
sti
add
test
cmc
mov
cmp
cmp
xchg
lds
xor
add
loop
std
les
pop
movsl
sahf
pop
idiv
mov
outsb
add
pop
push
mov
insb
jbe
jmp
mov
mov
clc
subb
enter
push
stos
testb
insb
and
nop
add
scas
aad
inc
mov
ds
push
sbb
fdivrl
ja
or
cltd
repnz
push
xchg
and
xor
insb
enter
mov
fsubrl
sub
add
repz
mov
xchg
scas
test
popa
leave
jnp
testb
addl
push
loop
adc
add
mov
dec
pop
lock
xchg
mov
iret
stos
call
dec
dec
jae
xor
push
jge
aas
jae
mov
bound
and
xor
imul
scas
mov
lods
stos
jb
sub
mov
sub
push
testb
pop
fildl
test
arpl
push
sub
fisubl
xchg
push
inc
add
das
cmpsb
movsb
pop
xchg
adc
jmp
shlb
notb
inc
adc
mov
imul
les
sahf
mov
inc
loopne
sahf
pop
cmpsb
in
xchg
sbb
cmpl
add
ds
xchg
test
cmpl
in
pop
pop
loope
std
jbe
xor
jle
xor
cmp
lret
dec
aad
jecxz
pop
ds
mov
js
push
fwait
incl
es
mov
pushf
pop
mov
ret
jb
movsl
fwait
sbb
or
popa
out
push
sbb
jmp
push
shl
adc
hlt
cmp
mov
fnsave
in
icebp
ja
shl
mov
cltd
ss
mov
mov
call
outsl
jno
add
jns
imul
push
or
pop
fnstcw
mov
js
sbb
adc
xor
inc
sbb
and
rclb
add
sub
xchg
call
or
and
mov
fisttpl
add
cmp
mov
push
fwait
je
std
cs
fdivs
mov
mov
mov
mov
cmp
cld
xor
mov
jl
jl
mov
mov
mov
roll
cli
sbb
iret
movq
dec
out
mov
mov
jle
and
pop
rcl
add
test
rclb
jge
add
pop
fwait
lea
fists
sbb
mov
xor
in
adc
paddsb
fsts
cwtl
mov
pop
dec
cli
pop
xchg
cmp
jns,pt
xor
xchg
and
das
rorl
repz
pop
pop
loopne
mov
cltd
push
adc
add
push
jp
shll
in
loopne
cmpsl
adc
fcomps
nop
cmp
push
lods
mov
push
das
jae
pop
mov
fwait
jno
lcall
dec
jnp
or
std
dec
scas
sbb
mov
lds
dec
loopne
outsb
sub
loope
in
gs
lret
test
out
push
dec
add
scas
scas
mov
adc
test
lret
cmovs
sub
das
bound
mov
shll
push
int
mov
pop
orl
movsl
lock
sub
or
sub
fildl
daa
mov
aaa
imul
inc
fidivrl
sbb
insb
pop
mov
mov
lahf
pop
ja
out
lsl
jg
inc
cltd
gs
pushl
add
cltd
cmp
jmp
adc
pushf
cmpsb
icebp
popa
xor
loope
decl
cwtl
pushf
ret
repz
cmpsb
fistps
add
pushf
sti
bound
fldl
xor
std
xchg
jp
call
outsl
inc
test
mov
rorb
roll
add
cmp
rcll
xchg
xor
xchg
mov
shr
test
mov
push
mov
cmpsl
pop
or
cmp
movsb
in
sahf
punpcklbw
outsb
cs
jb
xor
test
mov
adc
lock
cmpsl
adc
pushf
and
pushf
add
pop
mov
loope
dec
cli
inc
sbb
int3
lahf
scas
or
ss
or
iret
xor
jns
adc
mov
mov
cmc
xor
out
mov
ss
dec
xchg
pop
ja
or
in
xor
inc
jg
inc
add
or
imul
xor
lods
rcrl
addb
mov
mov
stos
push
or
fwait
sub
jle
sahf
add
jg
pop
jno
out
push
pusha
xor
mov
nop
fiadds
and
dec
movsb
fisubrl
cmpl
ret
xchg
arpl
sub
sbb
mov
mov
xchg
lret
inc
inc
call
lret
push
pop
adc
lods
sub
ret
inc
xchg
adc
xor
stos
mov
cmpsb
mov
jmp
mov
sbb
dec
push
jecxz
xchg
adc
loopne
and
and
dec
xchg
aad
pop
dec
pop
outsl
into
jl
push
mov
inc
call
pop
mov
mov
es
stos
xorb
in
ficomps
and
mul
iret
cli
int3
lcall
out
mov
xorb
stos
add
adc
mov
sahf
add
mov
fdivrl
lahf
and
scas
mov
in
lret
dec
inc
sbb
push
adc
dec
cmp
pop
lods
sub
rclb
cmp
add
ljmp
jne
loop
pop
mov
leave
ficoms
out
lret
shlb
movsb
inc
push
jmp
jle
dec
jbe
mov
negb
pop
xchg
mov
repnz
sub
daa
sub
loope
xchg
loope
int
sahf
cmp
inc
leave
xor
sub
lahf
sarl
lods
inc
jnp
cmp
xor
pop
push
lret
inc
fists
movq
sub
orl
xchg
push
dec
cmc
outsb
fwait
rorl
cmp
xor
lea
pop
stos
stc
shl
pop
mov
test
hlt
bnd
push
insl
and
push
sbb
inc
ljmp
stos
push
into
imul
sub
xor
jg
cvtdq2ps
adc
shrb
ficomps
mov
test
loop
shll
xor
add
mov
add
rclb
lret
insb
adc
out
andb
cltd
mov
pop
fwait
ss
jle
sarb
add
mov
add
xchg
pop
or
pop
lahf
rclb
popl
enter
js
ja
stos
outsl
xchg
jbe
xchg
and
cmpsb
inc
jmp
xchg
aaa
es
inc
movsb
lea
out
stos
cmc
xor
cmp
cwtl
xor
sub
daa
movsb
movsb
fadds
push
pop
xlat
test
inc
test
pop
loope
lods
mov
mov
cs
mov
xor
add
or
scas
ret
inc
mov
test
and
enter
xchg
add
stos
repz
mov
fstpt
add
pop
pop
loope
loop
push
daa
xor
add
xchg
add
outsb
in
mov
push
pop
mov
jbe
dec
mov
and
ror
cld
in
rorl
out
or
nop
les
jne
xor
inc
xor
lock
ror
test
cmp
cltd
aam
add
out
call
add
cld
sbb
add
sub
push
or
xchg
js
push
negb
xor
inc
test
imul
and
xor
push
movsl
test
mov
outsl
adc
pop
subl
lods
xchg
scas
hlt
sbb
push
sub
mov
sub
and
push
sub
add
cwtl
push
insl
sbb
sub
adc
cmp
xchg
test
mov
sub
sbb
push
scas
mov
pop
jp
dec
jae
cld
xchg
in
mov
dec
xchg
sarl
pushf
pop
jge
outsl
pushf
repnz
mov
xor
and
mov
fbstp
jle
sahf
and
popf
clc
jbe
mov
sbb
add
pop
adc
or
pop
push
fldl
shlb
mov
add
out
sub
xor
cmp
add
push
xor
pop
mov
popf
sbb
sub
ret
or
fs
dec
test
std
add
addl
movsl
pop
sbb
push
fcoml
cmpb
lcall
or
hlt
jp
xchg
push
test
adc
xlat
imul
xlat
xor
dec
xor
movsl
scas
hlt
flds
jecxz
mov
cmp
sbb
mov
inc
push
stos
test
popf
jle
icebp
sbbl
into
call
jno
push
fiadds
rolb
cmp
je
std
aas
movsl
adc
in
xchg
add
jno
out
rolb
imul
push
ds
pop
mov
dec
and
mov
cwtl
cwtl
aas
fstpl
and
mov
hlt
out
and
sbb
ret
ds
cmpsb
push
or
fcomp
or
mov
mov
jns
aad
push
xchg
adc
mov
movsl
sarl
icebp
and
pop
dec
test
cmc
xor
call
outsl
mov
std
cmp
add
or
add
ret
mov
mov
insl
push
jle
cli
arpl
pop
repnz
mov
rorb
xchg
dec
ja
mov
jno
cld
out
fstpl
and
rol
or
ds
mov
mov
arpl
dec
pushf
and
xor
cmp
ja
clc
sbb
adcl
bound
mov
adc
inc
das
sbb
lcall
xchg
jmp
cmp
fsubrp
push
push
push
xchg
sbb
insl
jecxz
popf
xor
sbb
xchg
into
std
popa
inc
out
mov
sub
jge
pop
and
movsb
xchg
arpl
push
mov
lcall
inc
mov
scas
fwait
sub
cmp
inc
adc
cmp
jl
xor
ss
aas
test
cmp
mov
repnz
push
aam
test
fiaddl
xor
dec
push
insb
or
and
sbb
jne
jl
sub
adc
subl
xchg
ds
mov
aas
test
mov
cmp
pop
jp
mov
ja
add
fcoms
insl
inc
xor
enter
xchg
nop
mov
push
and
or
ja,pt
sbbl
fisttpll
sub
les
mov
inc
js
and
and
pusha
mov
push
pop
loope
imul
cmp
mov
lret
faddl
jge
cmp
cs
jecxz
cmp
xor
loop
jp
in
lods
stos
js
jno
ljmp
in
and
inc
mov
xlat
mov
lods
push
xchg
imul
xor
push
mov
dec
xchg
or
insb
fists
mov
xlat
jl
pop
lods
mov
ror
out
bound
mov
sbb
mov
lret
cs
dec
mov
add
lea
ja
dec
imul
fldcw
jns
lret
test
pusha
out
adc
jnp
add
jbe
mov
js
pop
mov
ja
push
addr16
mov
pop
sbb
jnp
add
inc
lret
cmp
cltd
mov
jno
sarl
or
lret
lret
fldt
lock
push
and
adc
out
cmp
lcall
inc
imul
shll
mov
rcrl
cs
cmp
pop
adcl
rclb
notl
or
stos
ret
push
dec
dec
xlat
push
sbb
cld
inc
dec
addr16
lea
in
int
jmp
or
addr16
sbbb
xchg
sahf
push
wbinvd
xor
fstpt
push
shll
sbb
sub
add
pushw
jbe
push
imul
jno
dec
inc
xor
lret
dec
jns
lock
mov
dec
jge
cli
mov
je
or
and
imul
or
popf
push
push
out
adc
cli
testb
push
inc
movsb
xorl
das
cmp
movsb
ret
lret
aaa
xor
outsl
fldt
sarb
clc
decb
sub
iret
xor
xor
or
dec
xor
in
xchg
or
adc
cltd
and
jg
sub
lea
leave
jb
std
jg
gs
test
pop
mov
dec
je
gs
jo
lret
mov
bound
cmp
lods
outsl
fiaddl
repnz
sbb
das
pop
daa
jl
ret
in
cmp
cmpsl
cmpsl
mov
inc
push
pop
movsb
add
nop
cmpsl
clc
inc
sahf
aad
xchg
xchg
inc
imulb
fwait
shrb
leave
pop
hlt
xchg
mov
add
xor
jmp
fdivrs
mov
std
cmpsb
adc
pop
popa
fnstenv
shrl
icebp
xor
pop
jb
mov
add
mov
and
leave
enter
pop
rcr
ret
in
iret
or
inc
pop
push
push
mov
test
dec
xlat
fwait
in
loope
insb
or
ret
cli
es
cli
xor
sbb
fisttpl
cmp
dec
xor
sbb
das
jecxz
push
pop
and
leave
shufps
push
pusha
in
and
popa
sbb
js
sub
dec
pop
testb
int
enter
sahf
ljmp
and
ja
in
or
dec
pop
cmpsb
pop
mov
test
inc
mov
dec
into
pop
pop
test
or
subl
push
cli
orb
imull
shrl
adcb
arpl
mov
out
lret
cmp
lret
mov
cmp
ja
cmp
mov
imul
aam
in
data16
mov
mov
xlat
jne
les
jecxz
adc
int3
cli
ret
push
sbb
mov
dec
imul
push
icebp
adc
je
lods
mov
lds
jne
out
inc
mov
xchg
mov
enter
cmc
xor
pushf
adc
add
test
ss
divl
loope
dec
sbb
xor
cmp
ljmp
pop
cmpsb
mov
mov
dec
lods
cmpsb
jo
cmpsb
scas
scas
cltd
jg
lahf
pop
jecxz
faddp
jbe
add
cli
loop
adc
ja
inc
sbb
dec
jecxz
inc
cmp
sahf
xor
les
add
mov
cmp
xor
xchg
das
mov
xchg
and
adc
xor
inc
push
test
sbb
cmp
or
imul
pop
pop
sub
jge
xchg
mov
movsb
test
jecxz
inc
dec
aaa
leave
mov
and
loopne
mov
dec
xor
movsl
test
mov
xor
pop
adc
fldl
gs
add
sub
test
adc
scas
cmpb
sbb
mov
ds
cmpsb
add
enter
fucomp
fidivrs
sbb
jmp
sbb
dec
add
push
pop
enter
xchg
shrl
mov
push
xor
imul
ret
adc
shll
leave
fisttpll
insb
cwtl
mov
popa
adc
jg
insl
pop
push
sbbb
loop
add
outsl
into
jae
sbb
fidivl
jne
and
fidivl
inc
push
arpl
mov
icebp
lock
cld
adc
pop
or
lods
mov
push
and
lcall
sbb
loop
adc
and
mov
adc
mov
fisttpll
in
sub
cwtl
inc
cld
fdivp
dec
inc
pop
enter
inc
xor
push
in
jg
jb
mov
sbb
sbb
jae
into
jb
xchg
iret
sbb
jecxz
mov
xor
in
mov
cmp
and
cs
cmp
sbb
xor
daa
leave
dec
lret
pop
fildll
lcall
aad
sbb
fimull
jbe
rol
repnz
cmc
jo
movsb
in
push
sbb
int
stc
lret
and
popf
stc
adc
int
ds
cwtl
jo
pop
adc
jnp
mov
cmp
xchg
shlb
fsubl
ss
cmp
fs
in
out
jnp
out
orb
rcrb
test
push
xchg
add
ret
loopne
call
push
arpl
push
loop
add
popa
shrb
mov
pop
ds
aam
int
std
dec
inc
xchg
push
lret
add
cld
ret
xchg
add
mov
ret
mov
or
sbb
mov
ja
inc
test
mov
dec
sbb
pushf
imul
lds
bound
mov
stc
lcall
jmp
add
xchg
loope
dec
rcll
add
jnp
rcll
push
dec
movsl
js
ljmp
jmp
clc
cwtl
popl
gs
or
adc
ss
xor
hlt
and
xchg
hlt
xor
arpl
into
inc
aas
cld
cmp
inc
imul
ret
jg
dec
xchg
push
jge
mov
outsl
imul
jo
sbb
and
mov
add
mov
fucom
adcl
and
mov
adc
and
test
shl
xor
jl
jmp
ja
orb
pop
sbb
jne
add
add
mov
and
jb
mov
enter
fwait
shrl
int
aad
add
jo
jge
add
inc
call
sub
nop
mov
adc
adc
mov
add
pop
fldenv
ljmp
sbb
mov
arpl
xchg
cwtl
test
dec
adc
lds
xchg
pop
pop
pop
fisubrl
lds
cs
rorb
int
mov
dec
pop
push
lahf
repz
out
scas
mov
pop
es
cmpsl
xlat
pop
loop
pop
out
and
in
xlat
push
cwtl
add
pop
pop
sahf
xor
test
pop
cmpsl
ss
add
add
mov
in
test
int
sub
mov
insl
dec
mov
cmp
ret
or
mov
imulb
mov
and
xor
push
ss
aaa
nop
mov
jno
in
xchg
jmp
inc
ss
repnz
push
mov
cmpsb
icebp
fiaddl
jle
sbb
stc
loopne
sarl
mov
int3
inc
mov
ja
sub
xchg
and
xchg
sbb
add
test
xor
cmp
xor
icebp
std
add
and
push
outsb
xlat
jb
push
sub
push
arpl
dec
xchg
cwtl
into
and
into
daa
aaa
adc
and
push
in
shlb
in
aam
or
rclb
dec
xor
sub
je
mov
shrl
mov
mov
cmp
mov
or
popa
js
xchg
xchg
push
movb
arpl
insb
ss
cmp
inc
into
mov
out
nop
mov
xchg
push
out
andb
push
push
push
xor
lods
sub
xor
cld
int
push
ja
cmpsb
cmpsb
jecxz
out
repz
bswap
or
pop
xchg
mov
pop
addr16
xchg
mov
or
inc
sbb
loope
test
fistpll
sbb
mov
scas
lock
sub
pop
cmp
js
dec
das
into
mov
mov
imul
xchg
pop
mov
addb
mov
xor
mov
rcll
cmp
inc
fidivs
pop
sbbl
jmp
in
fwait
add
outsb
insb
daa
jge
lea
mov
xor
pop
xor
call
out
xchg
mov
fs
mov
jmp
lcall
cmc
fmuls
cmc
adc
mov
jg
movsb
push
xor
push
lods
xchg
jnp
out
mov
xor
cmp
push
lret
pop
aam
pushf
int3
subl
and
push
outsb
fwait
pop
mov
je
push
mov
mov
adc
push
cli
mov
lds
in
inc
data16
pop
dec
lods
leave
lock
jo
jmp
mov
sahf
xchg
sub
add
sbb
scas
imul
add
lods
pop
popf
mov
fsubl
in
fiaddl
xor
xor
test
push
sub
jl
addr16
sbb
push
sbb
aas
cmpsb
mov
push
pop
popa
imul
dec
fwait
pop
lea
push
and
or
adc
mov
jb
push
rcr
adc
xchg
mov
mov
int
or
inc
jmp
shrl
lods
sti
mov
stc
aam
dec
lcall
pop
inc
add
out
mov
es
pop
adc
mov
ss
sub
daa
cmp
cmp
fnstsw
loopne
sub
loop
push
push
xchg
add
pop
xchg
scas
sub
ret
pop
ja
daa
cs
cltd
sahf
rcll
mov
add
sti
jb
aad
insl
stc
xchg
and
das
notl
mov
xorl
enter
jnp
inc
cmp
xor
pop
outsl
sub
gs
lret
and
inc
movsl
test
pop
and
in
das
mov
pop
mov
call
fwait
repz
lds
rcrb
push
mov
push
dec
mov
stos
jle
pop
pop
or
mov
nop
daa
push
sahf
mov
movsl
push
repnz
fwait
xor
xor
pop
xchg
andb
xchg
sbb
pop
pop
adc
mov
lahf
adc
jns
sbb
dec
fstpl
loop
xchg
cmp
inc
rcrb
push
or
lea
adc
out
out
pop
repnz
push
xor
into
outsl
or
xchg
pop
inc
cmp
iret
adc
cmp
dec
in
mov
decl
adc
xlat
cmp
data16
jne
js
int3
cwtl
inc
mov
cmp
and
or
push
mov
lahf
dec
add
in
lods
inc
mov
daa
push
pusha
mov
mov
mov
imul
inc
ret
add
movb
call
xchg
in
daa
lea
fildll
lret
adc
mov
es
cmp
out
lods
inc
cmp
aas
mov
jb,pn
arpl
xchg
pop
inc
push
pushf
out
fs
cmpsb
push
je
cld
out
push
out
or
hlt
add
dec
push
push
ss
xor
inc
or
insl
fistps
jae
sub
cmp
push
cmp
mov
ja
sbb
or
insl
testl
js
xorb
out
fsubp
fistps
push
inc
insl
inc
push
mov
bound
inc
mov
cmp
add
and
fs
je
imul
cmpsl
stos
movsb
sar
xchg
xor
xlat
scas
add
sti
daa
jl
loopne
inc
enter
mov
mulb
shr
add
arpl
xor
mov
sub
fnsave
adc
pop
sub
cmp
inc
xor
mov
xlat
xchg
imul
pop
sbb
cmpsb
jl
std
testl
pop
inc
sbb
xchg
scas
add
dec
xor
cmpsl
pop
jae
ret
or
mov
push
inc
das
mov
in
lds
xchg
mov
dec
sub
rolb
push
lea
dec
cmp
inc
repz
jae
mov
dec
out
mov
mov
mov
mov
stos
xchg
fdivl
xchg
xchg
dec
cli
sbb
andl
daa
lret
aam
jae
and
mov
mov
cmp
or
sti
rcrl
pop
add
dec
push
pop
fdivrl
push
stos
scas
push
out
outsl
pop
jecxz
inc
addl
cmp
jbe
ja
cmp
mov
pusha
mov
aaa
sub
fidivrl
jne
xchg
repnz
pop
cmpsl
pop
push
add
or
push
movaps
lret
dec
sti
repz
cltd
mov
jno
lcall
adc
int3
push
bound
fdivrl
mov
ret
popf
push
into
rcl
stc
imul
pop
in
dec
push
fwait
inc
test
subl
or
mov
inc
bound
das
enter
sub
adc
mov
mov
or
in
loop
xchg
aaa
ljmp
mov
xlat
stos
sub
sbb
out
pop
push
jb
cmp
into
sub
sbb
xchg
dec
lcall
sub
rolb
xchg
stos
push
imul
out
and
add
andl
jge
xchg
mov
push
mov
loop
jbe
push
or
out
insb
xlat
icebp
xor
push
pop
fmuls
psubusw
mov
insb
jle
inc
xchg
jl
push
sbb
jg
fwait
pop
popf
or
stos
pop
mov
mov
daa
sub
cld
inc
ret
adc
xor
loope
dec
dec
adc
out
push
or
cmp
nop
rol
pop
pop
mov
movsb
mov
out
imul
das
out
jno
sbb
inc
iret
pop
xchg
aad
rorb
mov
and
adc
dec
cltd
pop
add
in
jns
jg
cs
cmp
shrl
xchg
mov
arpl
add
jl
push
push
jb
faddl
test
and
mov
insl
pop
stos
cli
sbb
out
inc
inc
repnz
shrb
cmpsb
cmp
mov
test
out
xchg
fsubl
or
xor
mov
add
dec
fnsave
jnp
scas
cltd
mov
xchg
out
inc
orb
add
movsl
or
or
push
jge
add
and
pop
sub
push
dec
fimull
push
xchg
push
cmp
mov
lret
xor
xchg
push
lods
dec
test
outsb
dec
nop
jne
mov
cmp
adc
add
cmp
cs
cmp
sbb
or
inc
push
inc
dec
lret
and
std
mov
gs
movl
pop
lcall
mov
mov
dec
sbb
or
xchg
lods
das
or
mov
xor
or
adc
cmpsl
mov
loope
sub
jne
sbb
lock
push
adc
jo
mov
pop
add
push
shlb
sub
mov
test
int3
aam
sbb
adcl
push
std
mull
lods
mov
das
divl
adc
pushf
push
ss
push
test
pop
mov
add
stos
cld
push
jne
sub
mov
outsb
mov
push
push
push
add
cmp
int
mov
fisttpl
arpl
aaa
ljmp
jmp
mov
mov
loop
and
xchg
fldcw
subb
adc
push
stc
sbb
leave
filds
pusha
repnz
sahf
js
pop
mov
jge
aad
mov
push
fidivl
out
in
lahf
gs
push
pusha
in
sti
fisubs
fnstcw
jle
inc
andl
dec
push
lret
xlat
mov
cmp
xor
in
mov
fistps
mov
xchg
sub
push
adc
test
mov
and
pop
mov
push
dec
jnp
insl
cs
push
fwait
sti
shll
cltd
ret
test
xchg
dec
in
sub
adc
mov
mov
int
dec
gs
xor
cltd
int3
xor
leave
mov
in
std
sbb
jcxz
push
lea
mov
inc
push
push
and
push
aas
mov
push
daa
ret
mov
leave
or
orb
test
cmp
adc
insl
sbbb
add
fstl
mov
inc
dec
ljmp
daa
mov
scas
ret
cmp
mov
vucomisd
dec
stos
mov
aaa
rcrb
out
adcb
pusha
call
jo
shlb
push
jecxz
loopne
sub
cmp
xor
aam
mov
and
xor
test
stos
lods
mov
iret
cmp
or
push
pop
insb
mov
sub
add
cld
inc
ret
sbb
push
push
mov
add
mov
dec
adc
lcall
mov
or
in
mov
std
add
scas
popa
lea
push
insl
repnz
inc
inc
mov
pushf
sti
xor
push
xor
or
fsqrt
in
into
test
mov
movsl
imul
inc
shll
fldpi
aas
xor
dec
mov
mov
cmp
das
icebp
inc
cld
cmp
lock
dec
sahf
stos
dec
pop
out
scas
sub
xchg
sbb
ljmp
jno
inc
scas
jl
pushl
nop
add
cmp
fiaddl
mov
xor
bound
fs
jp
cmpsl
jb
jg
ss
sub
xchg
xor
outsl
stos
pop
cmp
dec
inc
in
scas
add
clc
movsb
inc
inc
pop
or
pop
mov
sub
std
or
fs
push
sub
mov
xchg
lods
int
mov
dec
mov
jns
sbb
add
pop
data16
cwtl
shrb
xor
fistpll
ud1
aad
xlat
movsl
js
shll
test
add
pusha
lods
fxch
mov
xor
or
das
cli
mov
mov
shll
or
loopne
push
lds
xor
mov
push
adc
ret
sbb
ret
sarb
gs
fmul
jo
int3
jnp
stc
imul
mov
adc
jecxz
test
dec
lcall
push
test
ss
jl
sub
sub
insl
pop
incb
imul
sbb
ss
cmpsl
fdiv
inc
out
adc
roll
jle
addr16
add
shl
inc
jb
rorb
into
and
cmpsb
sub
rorl
xchg
push
data16
adc
adc
fisubs
xchg
call
les
scas
out
stos
imul
add
pop
cltd
insb
pop
jge
dec
mov
loop
jecxz
lret
fnsave
out
imul
arpl
stos
xchg
lret
or
or
jge
fldl
adc
leave
roll
test
sahf
mov
fdivs
pop
dec
push
inc
clc
in
sbb
adc
stc
je
mov
lahf
fisubrl
fdivrl
or
mov
fwait
push
mov
testl
or
mov
adc
lret
dec
mov
das
idivb
daa
xchg
dec
sahf
pusha
dec
jg
jmp
andl
scas
dec
jns
sbb
mov
in
sub
das
hlt
push
je
mov
jmp
mov
or
mov
jae
lret
stos
ror
sbb
or
inc
cltd
aam
jne
insb
sbb
ficoms
and
decb
push
inc
imul
cmp
sbb
mov
jmp
adc
sub
cs
test
mov
and
sti
pop
adc
xchg
je
pop
jns
dec
pushf
stos
js
test
pusha
popa
cld
stos
enter
or
in
jge
sub
and
in
hlt
xchg
scas
cmpl
lret
jbe
cmpl
pop
inc
mov
or
sbb
rorb
int
sub
jbe
cmpl
int3
adc
cmpsl
enter
push
nop
cmpsl
inc
in
add
xor
pop
call
mov
dec
sub
mov
int3
insb
rcrb
int3
and
dec
adc
inc
adc
sbb
test
lahf
out
sub
cs
xchg
push
sbb
daa
lods
addb
inc
divb
push
iret
cmpsl
mov
mov
inc
pop
pop
mov
push
cli
xchg
rorb
or
sbb
or
mov
sub
push
xor
pushf
ret
adc
js
pop
or
lods
or
arpl
aas
daa
repz
jo
test
pop
int
mov
push
outsl
sub
pop
out
fisttpl
push
arpl
aad
push
and
bound
push
in
mov
mov
inc
dec
jae
xchg
or
lret
scas
mov
in
clc
mov
push
es
ljmp
notl
pop
popf
cmp
mov
cmpb
sbb
or
dec
dec
scas
inc
or
jg
sti
iret
stc
xchg
cmc
xor
add
insb
sub
adc
jnp
fsubrl
test
dec
push
cmc
fmuls
nop
test
scas
xor
inc
jl
add
xor
xor
lret
cmp
cltd
sub
sbb
cmp
movsb
xor
lcall
mov
imul
iret
add
cli
subl
int3
clc
xchg
mov
mov
push
xorl
mov
aad
popf
je
push
xchg
popa
dec
inc
and
loopne
gs
je
mov
sti
sysexit
pusha
inc
movsl
cmp
or
popa
aaa
fwait
push
or
repz
inc
in
pusha
push
push
mov
xchg
movsl
inc
pop
mov
xor
addr16
rcr
aas
add
mov
cmp
jmp
jae
mov
and
test
fnstsw
daa
aad
not
add
cmp
inc
push
out
jp
cmp
xchg
scas
je
shlb
insb
shll
xor
or
mov
xchg
xlat
insl
and
aaa
lret
xchg
lret
aas
mov
mov
loope
test
adc
lcall
pop
jle
add
stos
pop
in
jns
sbb
and
stc
mov
jge
inc
imul
outsl
in
out
leave
xor
sahf
ds
mov
aaa
jae
mov
int
sahf
imul
notl
add
mov
int3
shll
sub
lock
jmp
adc
xchg
or
xor
jecxz
loopne
dec
jg
ret
lds
jo
sbb
xor
dec
xlat
stos
les
gs
jno
push
and
add
mov
inc
push
stc
push
jb
outsl
sbb
fisttps
fwait
mov
add
mov
push
scas
cltd
xchg
inc
mov
mov
testl
mov
pushf
loope
push
adc
jo
mov
lcall
insb
leave
add
push
xor
push
mov
sbb
inc
or
idivl
hlt
arpl
and
jp
mov
cmp
mov
xchg
aam
fnsave
and
sbb
mov
mov
fucom
rclb
dec
fcoms
int
test
sub
pop
loopne
xchg
cmp
leave
insl
mov
and
mov
xchg
call
adc
adc
lahf
xor
std
imul
call
int3
adcl
divb
test
cltd
mov
ja
push
lock
repz
lds
daa
dec
js
inc
xchg
lcall
push
sti
sub
cmp
or
fidivrl
mov
ret
mov
or
popf
lcall
daa
xchg
inc
lock
lds
xchg
jo
mov
push
les
rcrb
aam
xor
in
or
push
or
pusha
xor
ret
mov
add
aad
jg
lock
sbb
lret
pusha
rclb
mov
dec
xor
cmp
adcb
sar
adc
fwait
test
mov
lods
mov
push
andb
mov
sbb
js
push
outsb
popa
cmc
push
lock
inc
xchg
js
clc
xchg
movsl
and
dec
jmp
pop
aam
jecxz
xorb
mov
cmp
rcl
lret
jo
dec
mov
xor
jno
pusha
and
add
push
aad
mov
xor
mov
pop
adc
dec
xor
scas
mov
cltd
pop
pop
or
ss
cmp
sbb
and
adc
adc
ljmp
mov
es
call
sub
pushf
jp
xchg
dec
data16
mov
je
fcomps
mov
cmpsl
enter
mov
out
in
fidivrl
notrack
xchg
adc
mov
cmp
addr16
stos
and
push
push
stc
pop
out
sub
les
push
mov
sbbl
popf
xor
lret
inc
aad
push
push
imul
sahf
inc
dec
movsb
mov
sbb
mov
adc
xor
call
and
ljmp
xchg
jb
dec
jnp
xor
insb
data16
and
xchg
mov
push
les
cmp
dec
js
sub
sub
add
aaa
sbb
sub
cmp
push
dec
in
mov
add
adc
mov
out
xorl
cmp
out
ss
push
mov
mov
push
shlb
iret
pop
sub
cmp
add
adc
pop
not
jo
mov
dec
out
fwait
push
xchg
push
js
bound
xor
sub
lret
aaa
js
addr16
and
or
adc
inc
mov
jp
in
int
fnstsw
cmp
inc
jb
or
mov
inc
outsl
add
adc
es
mov
mov
dec
stos
outsl
inc
aas
data16
es
mov
cli
add
cmp
jo
jmp
movsb
int
jp
push
jb
add
mov
sbb
sbb
out
ret
out
js
mov
jl
push
stos
fsubrp
jecxz
pop
xchg
add
repz
mov
push
in
iret
nop
fistps
dec
pop
or
jns
lea
xchg
pop
xor
push
mov
pop
xor
iret
test
sub
mov
xchg
movsb
icebp
xor
pop
and
xor
movsb
and
into
sbb
sbbl
lret
xchg
popa
xor
fs
js
add
sub
pop
xchg
dec
repnz
push
movsl
adc
pop
jne
xor
dec
repz
pop
mov
adc
inc
icebp
imul
ficoml
adc
lock
push
lock
stos
enter
lods
jne
insl
jp
out
leave
xor
xchg
push
aas
stos
lret
mov
rorl
add
push
ljmp
xchg
jno
mov
and
pop
push
dec
in
inc
mulb
mov
adc
insb
add
sub
mov
cmpb
add
fwait
cmp
shll
cltd
mov
mov
push
pop
push
andb
xchg
imul
xchg
push
orb
pop
jbe
test
pop
or
push
test
popf
inc
pop
cmpsb
push
mov
mov
mov
and
out
and
jne
cmp
fldt
into
cli
loop
ret
mov
adc
inc
scas
lea
xlat
arpl
cmpsl
into
movsl
pop
cli
or
es
mov
mov
mov
add
jbe
lock
sub
jl
outsl
dec
daa
jl
inc
in
dec
aas
xorb
mov
stc
sbb
add
test
mov
xor
jnp
ret
jge
sar
scas
adc
cwtl
repz
jg
jbe
call
sbb
fdivrl
rcrb
inc
pop
fldln2
add
stc
ja
lods
xchg
xchg
add
out
movsl
ds
movsb
xchg
jmp
xchg
dec
dec
push
mov
jg
into
inc
test
test
and
int3
jle
pop
insl
lods
clc
xorl
inc
test
jmp
or
sub
or
lea
jl
lods
push
and
std
ljmp
insl
out
jle
dec
xchg
cld
mov
inc
xor
mov
bound
mov
mov
push
andb
orl
ror
dec
shll
sarl
and
outsl
mov
fidivs
sbb
mov
push
mov
loope
cmp
mov
jp
loop
shlb
lea
dec
xor
xor
es
pcmpeqd
push
lret
pop
jp
imul
jo
repnz
mov
mov
push
adc
jmp
dec
xor
insb
fiaddl
stc
lret
arpl
jbe
fcoml
sub
pop
mov
pop
test
and
xchg
not
mov
out
outsl
outsb
shr
in
notb
aaa
and
lret
ja
xchg
add
mov
adc
mov
adc
push
add
les
inc
dec
imul
cmpsb
adc
xchg
xor
rcr
fcmove
xor
dec
sub
sbb
pop
mov
dec
dec
sub
push
cmpsl
test
and
xchg
popa
fs
insl
lahf
and
xchg
cmp
dec
movsb
jecxz
aas
adc
rcrl
adc
subl
sbb
jno
xchg
push
outsl
cli
fmull
daa
cmp
jle
pop
cmp
mov
in
sbbl
stc
and
sahf
sub
arpl
jp
add
pop
std
fwait
xchg
std
mov
arpl
lret
sbb
and
dec
in
js
stos
adc
lea
adc
cmp
popf
lahf
test
in
shrl
add
mov
andb
inc
nop
and
sub
nop
fidivl
pushf
push
xchg
test
mov
sub
xor
cmp
inc
fidivs
sbbl
sti
cmp
cmp
pop
jl
out
fimull
dec
popf
lock
ss
das
or
mov
insl
imul
mov
adc
xchg
inc
xchg
adc
dec
inc
leave
jle
je
push
cmp
fucomip
ljmp
sub
int3
jge
jl
rcrb
cmc
mov
fwait
ret
jne
adc
sub
add
cmc
call
mov
into
push
out
dec
jb
and
push
xor
rcr
adc
bound
and
sbb
pushf
push
loop
lds
jp
cmpsl
out
xchg
pop
pop
dec
fsubr
enter
mov
and
into
and
lods
xorl
rorb
or
fildl
lret
fiaddl
rcrb
push
aas
stos
adcb
addr16
mov
shlb
loope
jbe
loopne
sbb
push
xor
andl
outsb
or
xchg
cmc
inc
push
inc
cmp
outsl
xchg
int
jle
ss
test
in
fmull
mov
ret
cmc
xchg
mov
test
xchg
pop
clc
jmp
insb
xor
sbb
movsb
push
xor
xlat
mov
adc
stos
scas
adc
mov
xchg
or
sub
pop
jae
dec
mov
fisubrs
jne
pop
outsl
mov
fs
sbb
xchg
xchg
fimull
sub
or
mov
mov
adc
mov
sbb
sbb
dec
xchg
xchg
inc
aad
mov
movsb
mov
cmp
decl
xor
and
orl
push
je
xchg
lods
pusha
mov
aaa
in
sub
push
cmp
pop
popf
data16
xorl
in
sbb
negl
mov
pop
ja
sbb
fwait
test
aam
outsb
aas
pusha
xchg
and
pop
cmpsb
in
mov
xchg
cld
add
popl
lcall
sbb
mov
push
xchg
ds
mov
or
or
mov
push
jns
or
xor
or
daa
inc
or
test
xor
enter
mov
mov
mov
in
cltd
add
test
pushf
jnp
sub
sbb
jl
cvtdq2ps
add
sahf
loopne
insb
fidivs
adc
xchg
add
xlat
jp
enter
lcall
daa
sub
sub
cmp
sbb
shrl
and
pop
sbb
imul
mov
imul
je
daa
out
add
loopne
sub
jo
mov
fs
jne
dec
push
lret
fnsave
pop
mov
inc
clc
lea
push
inc
cmp
fnstcw
mov
jo
or
mov
lock
and
sub
cmp
mov
shrd
js
add
and
out
sarl
fisubs
stos
mov
push
and
insb
test
cltd
xchg
adc
call
jnp
in
xor
or
icebp
imul
pushf
sbb
mov
jg
shrl
dec
in
gs
ficompl
and
adc
mov
cltd
mov
int3
fiadds
dec
sahf
ljmp
aas
push
icebp
or
mov
jmp
jb
or
sbb
add
out
mov
outsl
aad
mov
jge
xor
fcmovu
fdivs
jne
test
add
xor
pop
out
inc
iret
xchg
push
aam
shl
sbb
pop
leave
mov
sub
sbb
in
cmp
icebp
pop
fidivs
cli
push
push
call
repnz
shl
jg
gs
enter
clc
ficomps
push
cmp
jg
mov
xchg
add
push
xchg
shrl
popa
pushf
sub
mov
imul
adc
lods
dec
js
or
mov
loop
xor
push
push
data16
mov
pushf
daa
inc
stos
aaa
inc
loope
jns
lret
mov
mov
mov
add
mov
out
push
adc
mov
in
or
addb
xor
out
push
pop
jnp
xor
push
sub
jg
pop
lds
repz
pop
out
adc
push
adc
iret
int
sbbl
ret
add
mov
adc
sub
xlat
mov
idivb
fists
mov
arpl
inc
ds
pop
mov
mov
jl
inc
xor
stos
cmpsb
repnz
push
mov
out
sub
mov
jl
add
or
out
out
push
rolb
inc
int
xlat
loope
loope
cmp
outsb
jge
cmp
repz
int
xor
pop
cli
xchg
incb
cmpsl
xchg
in
jl
aas
xor
mov
sub
push
xor
addr16
mov
lea
vxorpd
sahf
add
rcll
pushf
add
aad
in
imull
adc
jno
push
add
repz
mov
or
jo
cmc
xchg
sub
neg
xchg
orl
pop
dec
fsub
cmpsb
xchg
dec
stos
or
sti
or
jno
inc
mov
and
cmpsl
sub
mov
loope
pop
inc
jbe
dec
cmpsb
xchg
aas
xchg
fbld
sbb
xor
xor
cmp
stos
or
jle
call
push
das
mov
outsb
pop
or
mov
out
loope
andl
xchg
xor
xorl
orl
or
je
int3
fistpl
jae
mov
test
daa
adc
cmp
pop
insb
cmp
xchg
and
ja
in
or
pop
lahf
lock
and
scas
jno
inc
int3
mov
xchg
or
jne
cmc
test
movzwl
imul
add
add
int3
cmp
rorb
ret
aaa
ret
fwait
pop
adc
cmc
sbb
mov
push
push
push
lods
std
xor
dec
mov
sub
scas
push
mov
in
inc
adc
bound
sub
and
sbb
stc
add
lds
mov
inc
mov
mov
pop
ja
xchg
addl
insb
jmp
nop
push
push
or
int
bound
xor
jb
repz
dec
shlb
pushf
inc
in
sbb
out
leave
dec
pop
pop
inc
inc
and
inc
xchg
mov
push
dec
jno
inc
jg
adc
lods
hlt
outsb
idiv
xor
sbb
jae
mov
jns
in
add
insl
pop
pusha
aad
pop
or
dec
lds
xchg
popf
sbb
repnz
ret
lret
mov
ljmp
mov
dec
pop
nop
lock
inc
inc
pop
or
dec
jo
cmp
inc
and
mov
add
rol
insl
out
das
imul
js
sub
pand
jns
lods
adc
pushf
and
jo
or
mov
aad
mov
lods
pop
testl
fists
mov
jecxz
bound
adc
lods
sbb
pop
mov
decl
in
loop
bound
lret
out
clc
ds
push
cmp
ret
mov
mov
test
dec
dec
cmc
movl
movsb
mov
jo
aam
mov
ss
pop
ret
int
jbe
jne
sub
repnz
mov
ja
ret
mov
mov
mov
lods
xorb
dec
xor
stos
divb
jl
fisubrl
leave
out
enter
sbb
jecxz
adc
xchg
subb
addb
add
popa
idivl
xor
xor
repnz
xchg
cmp
dec
sub
or
mov
das
jp
mov
leave
sahf
push
and
dec
xor
lret
dec
bound
fsub
lds
pop
lea
out
fcoms
mov
test
push
out
popl
rcrl
stos
mov
loope
cmp
xchg
jno
cmpsb
dec
stos
ljmp
scas
test
push
sbb
push
scas
cmp
test
les
dec
roll
enter
or
clc
inc
fstpt
loop
mov
mov
mov
inc
jb
nop
inc
cli
or
outsb
add
add
addr16
repz
faddl
push
stos
vpaddd
sub
std
stos
ficoms
jecxz
xlat
sub
int3
lret
inc
bound
movsb
popa
jae
cmc
mov
arpl
jno
cli
mov
mov
imul
jecxz
mov
xchg
cld
mov
xchg
outsl
sbb
jbe
push
pop
lret
fwait
inc
subl
subl
adc
test
popa
or
aas
sub
xor
scas
mov
sub
jnp
mov
js
outsb
test
stos
hlt
push
cmpsl
add
loope
push
add
das
inc
sar
or
xchg
repnz
jo
push
dec
adc
mov
xchg
in
cmpsb
fbld
or
sbbb
dec
push
dec
cmp
insb
lea
scas
jo
mov
xor
jge
add
mov
sahf
clc
popf
cltd
fs
int3
testb
inc
adc
gs
cmpb
mov
jecxz
sbb
in
lods
mov
inc
inc
sub
lock
sti
mov
aas
sub
std
mov
sbb
movsb
xchg
cltd
push
push
add
inc
or
repz
adc
or
push
lret
sbb
sbb
push
insb
mulb
pop
cli
repz
scas
mov
and
shrb
pop
dec
std
adc
add
inc
inc
xor
adc
lret
sbb
sahf
mov
pusha
and
mov
fistpl
mov
sbb
and
adc
mov
fisubs
and
std
lahf
jbe
cwtl
xor
jecxz
adc
aad
out
popl
dec
sahf
adc
mov
dec
dec
lahf
rclb
sti
movsb
inc
ds
test
mov
daa
outsl
je
push
jnp
std
pop
pop
pop
push
or
pop
mov
popf
lahf
mov
shll
add
pop
adc
add
xchg
fimuls
pop
mov
loopne
into
loop
push
cs
dec
ficompl
push
mov
mov
int3
and
idivb
test
mov
or
pop
sbb
add
sahf
test
xchg
dec
les
fst
scas
push
cld
imul
push
shll
cmp
pop
pop
adc
es
inc
in
mov
adc
lahf
xor
add
in
sbb
mov
shll
add
pushf
inc
iret
sub
rcl
dec
mov
jo
mov
ret
cmpsl
fs
shll
int
add
mov
inc
push
call
push
mov
push
or
and
pop
mov
lea
stos
mull
ja
imul
movsl
mov
xchg
in
dec
add
and
pop
jp
enter
cmpsl
insb
sar
in
adc
je
mov
jo
shlb
arpl
aad
negl
inc
jge
dec
xchg
mov
aas
push
rolb
or
fwait
push
jno
mov
mov
pop
repnz
push
enter
stc
cmp
or
sub
aas
push
adc
sbb
xor
mov
mov
jns
lahf
inc
adc
adc
ja
lock
lcall
xor
xlat
push
xchg
in
push
push
push
mov
scas
loopne
mov
sbb
xor
int3
sbb
out
sbb
daa
into
mull
mov
or
lret
cmp
std
cmpsb
bound
rorb
out
ror
pop
cli
mov
pop
xor
shrb
jg
and
add
add
adc
add
in
sub
popa
loopne
lea
jl
mov
jns
nop
jecxz
enter
lcall
add
mov
or
fcomip
fstpt
stos
rolb
mov
jb
or
add
cmp
test
lea
mov
push
adc
inc
sbb
add
arpl
gs
pop
repnz
ds
imul
repnz
jae
and
lea
sti
jb
ja
les
hlt
aaa
sar
cmp
fistl
mov
push
int3
or
jge
in
lds
pop
in
and
pop
pushf
dec
out
test
shlb
push
xchg
arpl
inc
jg
lods
ja
out
and
cmpsb
push
dec
mov
aad
mov
sub
imulb
iret
mov
mov
or
iret
ret
inc
jle
jecxz
ljmp
jge
dec
test
mov
xchg
mov
xchg
jle
xor
jno
inc
dec
cmp
daa
hlt
fnsave
dec
pop
popa
or
xor
fildl
cmp
cmp
fsub
sbb
rcl
mov
aas
push
mov
and
lahf
jmp
pusha
std
pop
inc
mov
cmp
push
lods
sub
ja
in
gs
idiv
out
sti
dec
or
mov
cmpsl
enter
mov
or
cmp
fst
test
test
popa
test
push
je
xchg
stos
movsb
pop
cmp
mov
sbb
jno
mov
mov
mov
mov
ja
shr
mov
insl
inc
in
lods
and
mov
inc
dec
xchg
lret
aad
mov
ss
or
mov
pop
iret
pop
into
incb
sub
out
movsb
fistpl
push
mov
popf
sarb
fidivrl
adc
test
mov
inc
lods
nop
loopne
je
icebp
xlat
mov
adc
fscale
jmp
dec
adc
mov
adc
pusha
mov
cmp
or
pop
mov
jno
push
fists
xchg
cmp
mov
mov
pop
pushw
jae
mov
incl
pop
push
and
mov
push
push
mov
inc
sub
and
aad
sbb
mov
adc
dec
call
xchg
in
loope
int
aaa
int
inc
and
movb
movsb
int
sbb
lock
in
mov
leave
lahf
push
mov
ljmp
in
shl
scas
cmp
ds
mov
out
jns
insb
fsubr
fucomip
pusha
xchg
in
loope
fisttpl
sub
cmc
xor
fcmovne
scas
sub
lea
dec
sbb
enter
and
sub
outsb
clc
xchg
aad
jno
fildl
rclb
jne
addr16
inc
xor
mov
and
mov
push
nop
mov
cmp
repz
xor
xchg
sbb
xchg
test
dec
je
mov
out
in
cli
adc
push
jns
cmp
adc
inc
insb
popa
cmpsl
addr16
push
mov
pop
adc
in
jbe
or
jg
pop
push
sub
sub
arpl
arpl
fsubrl
mov
mov
int3
jnp
sub
pop
add
pusha
call
hlt
mov
mov
push
mov
cmp
int
sub
icebp
jns
push
scas
mov
sahf
sub
shlb
mov
inc
es
imul
shl
adc
mov
lcall
jo
mov
adc
rcr
std
jbe
out
aad
movsl
mov
sub
adc
lahf
cmp
sub
or
in
sar
cli
fwait
popa
adc
pusha
mov
ljmp
sub
add
cmpsb
stc
and
movsb
test
mov
mov
bound
push
data16
lds
adc
test
das
xor
mov
push
call
idivl
in
adc
jmp
mov
xchg
pushl
inc
xor
and
ds
cmp
int3
popa
data16
jb
js
rcr
jecxz
adc
test
xchg
pop
lahf
mov
mov
lods
jle
dec
test
adc
xchg
stos
scas
xchg
into
dec
dec
sbb
dec
pop
shlb
mov
sub
movsb
ds
es
mov
mov
push
inc
mov
test
inc
imul
out
cmpsl
pop
es
push
jnp
dec
cs
and
sub
sar
cmc
xor
outsb
outsb
push
in
cwtl
push
adc
and
mov
mov
jle
add
cmp
sub
pop
out
sub
les
push
lcall
and
jb
pusha
mov
adc
sbb
mov
pop
js
dec
ss
jecxz
aaa
dec
xchg
into
ret
inc
xchg
frstor
dec
dec
mov
jne
adc
cmp
pop
pusha
fsubr
lea
or
popa
add
aaa
test
add
xchg
xor
shl
cmp
or
jbe
dec
rorl
adc
or
cld
ja
add
jbe
jne
lds
xchg
jns
sub
dec
inc
loope
lock
enter
lcall
mov
fdivrs
dec
cmp
ljmp
sbb
insl
sub
pop
stos
mov
adc
xor
mov
in
xchg
jg
cwtl
adc
fwait
xchg
cmp
js
imul
into
add
or
mov
test
mov
push
lock
sub
push
orb
add
xor
movsb
loop
xor
movsb
mov
push
lcall
dec
popa
sub
and
int
cld
int3
adc
inc
ficomps
or
sbb
and
cmpl
test
int
rorl
in
adc
mov
sbb
sbb
insb
push
nop
lods
fs
xchg
out
dec
pop
add
jl
imul
xchg
push
imul
mov
aaa
jl
mov
scas
pop
mov
push
adc
add
dec
testb
in
and
or
icebp
sub
sub
outsl
mov
in
jmp
jecxz
and
movsb
iret
or
loopne
stc
cmpsb
xor
shl
push
adc
mov
ret
push
or
cmp
clc
mov
test
ficoms
es
mov
subl
jae
inc
mov
inc
mov
fisttpll
mov
and
and
fwait
sbb
pop
mov
clc
or
adc
mov
dec
test
mov
mov
addr16
fs
popf
mov
nop
and
in
icebp
fcmovnu
idivb
andb
dec
dec
mov
in
adc
inc
out
xchg
loopne
sub
jmp
jg
sbb
or
adc
dec
mov
dec
movsl
rorb
jns
or
mov
cmpsb
mov
sbb
movsl
test
inc
stos
add
insl
adc
dec
xor
add
lcall
fisttps
out
mov
pop
or
pusha
movsl
mov
rcrb
filds
mov
std
xlat
into
push
xchg
rcrl
or
les
aam
cmc
bound
adc
sbb
scas
lds
add
daa
sbb
adc
push
orb
add
fsubs
imul
leave
push
xor
loopne
int3
lcall
jge
inc
scas
push
cwtl
mov
mov
filds
loope
xchg
iret
mov
repz
int3
sbb
mov
jbe
push
in
gs
cmpsl
adcb
sub
test
xchg
jnp
daa
scas
and
jae
aaa
jl
cmp
scas
push
push
in
inc
dec
inc
dec
fisubrs
fs
subl
jmp
xorl
fs
lcall
and
imul
mov
fstpt
lret
jle
pop
jbe
add
sbb
sub
sub
mov
cli
loope
movsl
roll
inc
fwait
je
push
adc
sbb
pop
push
testb
mov
sysenter
jmp
mov
test
cmpsl
mov
cmp
and
test
sub
dec
add
xchg
cmp
push
clc
or
sbb
push
jae
popf
scas
sub
gs
xor
repnz
cmp
jg
test
sahf
pop
shr
sub
jb
lods
fucomp
xchg
dec
xor
jle
lcall
out
jae
ret
adc
negl
mov
stos
dec
mov
pop
push
out
pop
daa
cmp
fyl2xp1
add
jecxz
das
and
faddl
ss
inc
sbb
out
scas
movl
test
sub
xchg
sub
push
pop
mov
lds
ljmp
negl
pop
in
add
xchg
xor
jle
inc
fnstsw
sti
int
test
roll
stos
xor
sub
xchg
sbb
fidivl
push
pop
xor
ret
aam
stos
and
int3
cmp
xlat
cmp
xor
xchg
add
test
xchg
ljmp
jmp
sbb
push
xor
inc
inc
gs
lods
pop
arpl
lahf
add
xor
pop
aam
jge
sarb
sahf
mull
adc
or
and
enter
sub
xchg
mov
mov
insb
pop
inc
mov
and
std
pop
jbe
mov
imul
rep
jmp
mov
jle
jno
jle
sbb
mov
xchg
pop
data16
test
jmp
pop
adc
mov
or
add
push
fs
and
incl
nop
or
xchg
mov
negl
movsl
loope
and
jle
stos
jmp
cmp
mov
mov
sub
push
jg
out
int3
loop
and
into
test
and
mov
pop
mov
movsl
pop
out
js
test
and
sub
iret
pop
js
jb
cmp
and
xor
insl
xchg
jge
adc
push
mov
fnstenv
dec
pop
add
iret
scas
or
mov
pop
out
ljmp
fmull
sbb
dec
pop
lods
sub
stos
mov
aas
adc
int
and
je
push
pop
sub
imul
inc
mov
mov
ds
sahf
adc
xor
xchg
test
insl
movzwl
inc
inc
or
es
enter
push
inc
cmpsb
loopne
mov
in
mov
rclb
enter
iret
movsl
ja
mov
das
or
inc
pop
add
mov
gs
cltd
rcr
cmp
cmpl
lock
dec
fwait
ret
pop
stos
add
xchg
cld
add
jg
ret
push
in
or
mov
jb
out
mov
mov
pusha
dec
sbbl
mov
adcl
sbb
sub
jbe
lret
and
adc
sbb
insl
push
dec
les
mov
sahf
cmpb
addr16
mov
inc
inc
push
sub
sub
pop
ja
iret
les
push
xor
cwtl
testl
pop
inc
test
sar
pop
rol
cmp
in
gs
test
rol
rcl
insl
mov
mov
mov
in
sub
test
pop
sbb
ss
inc
lret
imul
pop
mov
cmp
js
addr16
pop
hlt
or
fisttpl
cmp
mov
xchg
inc
gs
sub
mov
lret
xchg
xor
and
xor
cmp
sub
lret
add
ficomps
int
push
loope
dec
mov
pop
sti
push
jno
sub
adc
push
cltd
mov
cmp
loopne
sbb
mov
aas
inc
es
ds
dec
xor
and
and
cmp
nop
dec
sub
repz
in
mov
scas
pushf
jmp
pop
aad
sbb
or
mov
fsincos
inc
push
sbb
cmp
inc
addl
pusha
call
sbb
insb
push
test
clc
dec
enter
test
jns
xlat
inc
cmp
imul
jecxz
or
repz
movsb
je
nop
les
arpl
push
lcall
xchg
xchg
std
sbb
rclb
pop
adc
test
scas
jle
xchg
push
and
incb
cmpsb
test
call
adc
repz
popf
pop
inc
xor
aad
xchg
icebp
jg
or
lret
das
xchg
test
mov
lea
scas
cltd
or
xchg
aam
mov
loopne
fsubrs
jl
push
xor
ja
inc
mov
jmp
jne
cmp
sub
and
sub
pop
jge
repz
xchg
lret
cli
inc
jp
lahf
sub
shlb
cmpb
cmp
or
push
movsl
out
or
in
fdivrl
aaa
sub
adc
cmp
pop
out
les
gs
jbe
inc
jle
es
jo
pushfw
imul
stos
inc
jg
sbb
pop
pop
mov
xchg
pop
or
imul
bound
out
test
xor
or
divb
xor
cmpsb
ret
xchg
lahf
mov
rcrb
pop
fidivrl
mov
mov
mov
cmpsb
fs
inc
xor
sub
dec
pop
inc
rcrl
add
jmp
pop
fcmovnb
push
dec
mov
xchg
hlt
cs
in
je
std
xor
jbe
in
enter
add
iret
lahf
mov
pop
add
cmpsl
jl
hlt
mov
jno
inc
lds
add
or
call
outsl
adc
insb
push
scas
loope
mov
loop
mov
dec
lock
push
js
push
push
jbe
cli
fwait
jne
cld
cmp
sub
in
outsb
in
aaa
jae
add
iret
sti
jns
mov
or
inc
int
and
lock
ds
mov
test
rcrl
repz
xchg
mov
xor
loopne
xchg
sub
sub
stos
lock
pop
mov
lock
cmp
and
call
loopne
and
mov
mov
mov
xchg
pushf
std
fmul
or
push
jl
pop
mov
inc
test
or
mov
addr16
pusha
test
mov
mov
cmp
or
into
dec
sbb
or
push
add
sbb
aad
inc
gs
jne
jne
std
imull
insl
fldl
add
mov
loopne
dec
cmp
mov
out
aam
add
pop
add
mov
imul
outsb
mov
mov
and
pop
jle
xor
push
inc
push
into
push
cmp
xor
test
out
push
mov
jge
outsl
in
dec
push
sbb
ret
sub
test
mov
jae
icebp
nop
gs
adc
adc
sub
cmp
push
adc
icebp
dec
adc
xchg
out
shlb
addl
mov
mov
jb
andb
add
movsb
xchg
repnz
iret
push
int3
dec
pop
adc
outsl
cmpsb
mov
fsubl
scas
mov
sbb
out
pop
xchg
sbb
mov
adc
ds
imul
ret
cmpsl
scas
xor
ss
lock
cmp
lahf
cmp
push
fbstp
mov
fcomps
jmp
cmpsl
movsb
xchg
sahf
dec
stc
clc
movsl
scas
les
les
rcll
push
mov
cwtl
call
fisubs
cmp
dec
mull
cmpl
rolb
mov
mov
cmpsl
mov
push
lcall
inc
ffreep
sub
dec
rdpmc
mov
adc
inc
add
mov
adc
sbbl
cwtl
xchg
and
xlat
repz
mov
repnz
loopne
aas
push
dec
xchg
add
and
repnz
or
jno
outsb
xlat
cmp
inc
and
sbb
fiaddl
test
fsubs
push
lcall
push
setg
inc
fwait
inc
loop
xchg
xlat
cmp
adc
addr16
mov
fnsave
cmpsb
push
test
loope
cmp
arpl
mov
push
arpl
pop
fwait
cmp
mov
fsubrs
pop
cld
cs
or
imul
popa
push
arpl
sbb
sbb
inc
inc
shr
xor
adc
cmp
sbb
addr16
mov
push
jmp
outsb
cmpl
push
jmp
outsl
add
pop
mov
icebp
pop
xorb
ljmp
sbb
notb
push
mull
jne
fyl2x
cmp
testb
rclb
les
sbb
movsl
iret
mov
inc
push
enter
pushf
hlt
push
cmp
jne
stc
mov
or
ds
sbb
jnp
mov
xlat
cmp
mov
fwait
dec
jl
movsb
stos
loop
pusha
outsl
pop
lahf
pushf
sti
sbb
rorl
jg
jl
mov
bound
jle
xorb
ret
js
pop
out
popf
das
sub
add
in
je
jno
daa
or
in
jae
sub
lret
adcl
push
sti
mov
in
mov
push
cmc
cmp
aad
icebp
sbb
imul
push
das
add
add
adc
xchg
xor
lock
sahf
clc
dec
nop
mov
popf
and
sub
xchg
dec
adcb
int
les
sbb
rcrl
es
jns
mov
xchg
imul
test
shr
fdivs
cmp
sub
sub
add
inc
mov
cmp
outsb
mov
ljmp
test
call
outsl
mov
stos
aad
xor
pop
xor
dec
ja
pop
cmp
cmp
sub
dec
dec
inc
adc
xchg
pop
xorb
call
rcl
cwtl
jbe
cmc
test
cmp
sahf
ljmp
cltd
sub
in
and
mov
and
mov
mov
adcb
pusha
push
js
xor
sbb
xchg
in
jg
dec
call
loop
ret
or
sahf
loope
and
imull
cmpsb
dec
adc
lcall
inc
add
leave
and
jle
pop
inc
aas
loopne
or
add
cs
xor
xchg
mov
xchg
sub
sbb
fisttpl
jg
and
stos
lods
xor
clc
adc
adc
dec
ja
pop
sbb
enter
and
jecxz
mov
lret
push
xor
mov
mov
test
mov
stos
lcall
mov
imul
lret
test
lea
lock
cwtl
adc
repz
in
cli
outsl
mov
mov
mov
and
negl
lods
rol
mov
mov
jmp
or
stos
cli
and
xchg
aad
ficompl
mov
idivb
jmp
enter
pop
aad
aad
dec
push
mov
dec
adc
xchg
dec
sub
xor
fwait
clc
std
out
dec
test
inc
jb
clc
dec
fidivrl
lahf
mov
imulb
lock
test
jb
clc
bound
xor
adc
jg
sub
push
add
repnz
cwtl
ficoms
push
inc
pop
pop
test
mov
sbbb
adc
mov
mov
mov
push
test
mov
cs
pop
nop
fidivrs
fisubrl
inc
shlb
xor
mov
in
test
lods
mov
dec
cmpsl
mov
or
cmpsb
push
push
adc
mov
scas
rorb
in
leave
mov
nop
cmp
aad
inc
jne
int
lret
adc
push
push
push
or
aam
inc
dec
jecxz
fnstenv
sahf
sbb
lret
stc
das
ljmp
jbe
pushf
mov
jp
test
mov
push
int3
dec
adc
or
lahf
mov
popl
add
cmc
inc
imul
jnp
xchg
xchg
pop
mov
pushf
cld
push
in
push
xchg
sbb
in
cmp
mov
test
push
test
xchg
cld
mov
lret
decl
stos
xchg
ja
push
js
pop
fdivrp
jecxz
jo
dec
jbe
daa
pop
sbb
inc
lock
jo
ret
aas
rolb
push
sub
sub
test
push
mov
xlat
or
out
or
shll
jle
minps
in
lock
ljmp
jnp
imul
scas
outsl
out
sub
gs
xor
lock
arpl
sub
push
inc
dec
xchg
dec
arpl
jl
out
nop
adc
inc
or
pop
dec
fidivl
mov
lcall
shr
adc
add
jae
push
xlat
call
pop
push
pusha
and
jnp
hlt
leave
sub
insl
fcompl
jl
mov
jno
pop
adc
shlb
pop
xor
sub
mov
lock
aam
jmp
inc
test
jp
lcall
push
mov
mov
sti
jne
and
pop
test
call
inc
add
dec
mov
movsl
and
out
adc
push
aaa
fcmovnb
sub
sbb
daa
daa
sbb
xor
jp
pop
pop
shlb
call
cmp
mov
lcall
push
lods
jns
stos
cmp
orl
push
leave
mov
push
dec
dec
aam
fimuls
add
mov
or
sbb
sbb
aam
jmp
jg
push
js
or
push
repz
fbld
push
orb
shll
mov
mov
xchg
and
subb
or
push
push
push
xchg
in
mov
mov
jle
in
cwtl
fstl
sub
insl
fwait
push
enter
je
mov
emms
lcall
data16
mov
lea
xchg
jb
xchg
xchg
xor
cmpsb
cmpsb
outsb
cmp
nop
imul
hlt
imul
sbbl
subl
scas
adc
mov
add
jns
jno
test
lods
outsb
push
scas
mov
cld
dec
int3
call
push
mov
inc
and
arpl
add
sub
sub
outsl
mov
xor
adc
xor
pop
bt
mov
xor
stc
dec
cmpl
push
je
repnz
pushf
sub
mov
xor
je
outsl
mov
inc
stos
fsub
shl
mov
dec
and
mov
hlt
mov
test
or
mov
aas
out
mov
sbb
jecxz
jg
addr16
in
dec
in
daa
insb
cmp
sub
out
add
cld
mov
ds
xchg
out
das
insl
popa
int
fstl
test
imul
fnstenv
call
aad
mov
sub
push
test
mov
mov
and
jae
xor
mov
pop
fldcw
test
call
out
inc
push
fstpl
out
sub
cmp
adc
jg
sbb
ss
data16
sti
nop
and
add
cmp
xchg
mov
loope
push
aaa
mov
pop
add
push
ret
pop
xor
xchg
outsb
dec
push
mov
frstor
jg
add
dec
pop
repz
in
ret
pop
mov
ss
pop
dec
push
jecxz
mov
into
fldl
insl
xchg
push
inc
ljmp
lret
aam
dec
pusha
add
test
addb
mov
inc
ds
xchg
xlat
cli
mov
sub
or
lds
fisttps
jp
pusha
mov
sbb
movsb
push
cmp
adc
nop
xor
rolb
sbb
outsb
in
xchg
jg
sub
fidivrs
shll
sbb
mov
pop
and
dec
dec
push
fisubs
mov
dec
push
loopne
cmp
lret
popf
rorl
and
push
sbb
arpl
push
dec
dec
push
cwtl
dec
fsubrs
and
mov
push
sub
or
out
add
fcomps
add
push
jecxz
int
xchg
add
retw
rcrb
jns
jg
cli
xchg
and
jbe
mov
inc
iret
dec
or
fsubrl
das
sbb
jo
loop
sub
mov
pop
sub
inc
stos
shrl
xor
jmp
cmp
repnz
aas
sub
fdivs
cmp
xchg
std
pop
push
out
push
jne
mov
mov
mov
iret
ret
pushf
sbb
lret
out
outsb
setl
and
xchg
dec
pop
sbb
faddp
mov
in
inc
pusha
ljmp
pop
mov
or
pop
lret
mov
mov
mov
sarb
test
xchg
pusha
jno
sbb
sub
adc
popa
outsl
jge
jae
inc
pop
lret
pusha
lds
jl
mov
jle
mov
mov
fnstenv
pop
les
fisubl
scas
scas
inc
loopne
pop
jmp
cmp
or
jno
sub
xor
fsubs
mov
hlt
cs
and
gs
mov
in
jp
sarl
mov
sbb
shll
lods
mov
cmpl
lds
adc
sti
mov
ds
or
xchg
dec
inc
inc
testb
fwait
dec
mov
mov
adc
fcoms
mulb
jg
mov
cltd
adc
inc
bound
sbb
sub
sbb
mov
push
movb
scas
mov
sti
or
jae
jecxz
addl
sar
xchg
jge
push
push
inc
jne
cmp
filds
jl
std
cmp
mov
popf
outsl
loop
sub
or
mov
sbb
into
xchg
sub
sbb
rol
lahf
push
out
pop
test
in
in
and
cmp
sti
rep
dec
mov
sbb
sub
out
ss
mov
jg
aas
out
pop
jno
or
xchg
jb,pn
ja
or
adc
imul
jmp
mov
mov
add
lock
div
clc
pop
lea
dec
sbb
in
and
xchg
mov
xor
sub
int3
inc
outsb
lea
pushf
jp
jmp
call
or
cmp
repz
enter
pop
push
out
or
aas
int3
loopw
fildl
inc
fimuls
push
sahf
lret
arpl
mov
cmp
data16
insl
xchg
loope
lret
mov
mov
and
jne
adc
xchg
cmp
fistl
repnz
mov
xchg
je
test
scas
inc
mov
out
sub
repz
enter
popf
lds
in
gs
push
or
mov
adc
stc
mov
xchg
inc
mov
mov
je
add
mov
and
les
loope
sub
out
inc
xchg
push
fwait
jne
pusha
in
or
std
cmpsl
decl
cwtl
jle
xor
adc
sbb
xor
loop
rcr
push
lahf
pop
pop
lods
lods
ret
push
jmp
jne
pop
aad
sub
inc
xchg
push
cltd
cmpsl
lock
inc
sub
aaa
out
outsl
repnz
ror
adc
stc
lock
cmp
mov
mov
jo
pop
hlt
jecxz
mov
xor
lfs
out
dec
and
adc
nop
sub
pop
jecxz
in
outsb
mov
mov
jmp
aaa
sti
stc
js
xchg
sti
push
test
push
sti
rcll
add
cmp
jg
cmpsl
mov
adc
inc
sarl
aas
lds
and
popf
lods
mov
fnsave
mov
xorl
jecxz
lods
aam
push
ret
mov
push
jl
adc
and
xor
sub
mov
inc
imul
lea
and
inc
mov
scas
fwait
int
sbb
into
dec
sub
hlt
xchg
add
lahf
mov
cwtl
mov
out
imul
push
es
and
shr
and
mov
xchg
imul
into
js
incb
lret
cmc
pop
jns
decb
push
cwtl
sub
test
and
cwtl
jae
adc
dec
aam
out
lahf
push
fsubrs
inc
es
loop
sbb
pop
push
in
sbb
xchg
push
std
and
push
xchg
mov
sbb
adc
mov
repz
xchg
fs
cmp
repz
mov
clc
daa
lret
outsl
and
push
dec
cltd
sub
aam
stc
cmp
mov
push
fstps
jb
int
iret
mov
hlt
repnz
inc
adc
sub
mov
aad
imul
je
xor
dec
repnz
xor
jno
or
xlat
std
jne
sbb
lock
mov
js
dec
repnz
aaa
mov
push
stos
xor
push
jmp
xor
cmp
mov
scas
dec
and
push
insl
cs
fwait
cmp
push
jecxz
pop
jge
mov
into
stos
sub
jmp
sub
and
dec
enter
cld
addl
xchg
push
pop
leave
roll
sub
mov
jno
and
sbb
push
xchg
ret
std
loope
mulps
imul
dec
inc
xor
subl
inc
lds
dec
dec
xchg
jl
push
and
pop
mov
ljmp
sbb
jl
inc
imul
sub
push
or
in
int
int3
bound
mov
int
arpl
cmp
lahf
xchg
mov
loopne
push
xchg
jmp
mov
push
int
mov
dec
fisubrl
fisubrl
lods
mov
and
sbb
mov
stc
aas
mov
std
rorl
and
push
dec
testl
jmp
push
dec
test
inc
daa
fildll
out
addr16
mov
scas
jo
mov
je
dec
pop
or
negb
jp
and
pop
mov
push
mov
fbstp
xchg
sbb
pusha
cld
or
test
es
lods
dec
fstl
enter
mov
loopne
lret
inc
xchg
out
cli
scas
cmp
push
push
nop
aaa
inc
jns
push
mov
lods
dec
mov
sbb
adc
jno
lods
xchg
push
add
imul
xchg
jo
fnstcw
mov
jmp
call
roll
or
shlb
jno
insl
into
xchg
cmp
sub
or
add
pop
push
sti
test
cwtl
repz
cmp
test
cmp
outsb
cmp
add
std
lret
fdiv
ss
or
fwait
popl
push
xlat
push
js
or
pop
scas
cmp
xchg
jle
ret
arpl
add
ret
jno
in
jle
pop
sbbb
les
cwtl
push
mov
dec
sbb
fs
pop
ret
clc
in
mov
ja
test
psrlw
sbb
or
mov
cmp
loop
mov
or
pop
hlt
jb
test
js
and
sbb
mov
adc
push
call
sbb
mov
scas
pop
xlat
loopne
fisubs
adc
repz
sbb
xchg
fidivs
lret
iret
aaa
iret
mov
dec
inc
sub
jl
mov
test
add
and
mov
inc
popf
lods
in
xchg
mov
inc
sub
dec
outsl
fbstp
rorl
pushf
pop
repz
addr16
xchg
mov
test
dec
push
pop
mov
sub
mov
rcl
jge
insb
lods
xor
or
dec
jp
outsl
xchg
aaa
push
pop
xor
jb
dec
mov
cmp
fldt
arpl
shlb
mov
sbb
aas
aad
popf
pop
xchg
push
js
scas
insb
xor
fiaddl
cmpsb
inc
mov
cmp
push
xlat
mov
pushf
mov
mov
mov
add
insl
xchg
cld
repz
mov
inc
sub
jecxz
into
cwtl
mov
aam
add
xchg
ja
mov
aaa
insb
fisubrs
stos
fisttpll
pavgw
ds
rorl
xchg
outsb
ss
outsl
cmp
pushf
inc
mov
pop
pop
sub
test
pop
xchg
lods
mov
dec
push
fsubl
std
sbb
cmpsb
jl
daa
xchg
aaa
cmpsl
xor
shrb
fsubrs
stos
xor
cmp
leave
or
divps
arpl
push
loop
fstl
jecxz
loopne
jecxz
fimull
lret
lahf
stos
mov
lock
xchg
pop
add
mov
test
xchg
aam
call
enter
push
mov
loope
mov
in
mov
test
mov
mov
dec
adc
das
fwait
in
push
pop
or
movsb
push
jge
jb
test
ljmp
out
das
das
push
lods
mov
movsb
mov
dec
add
pusha
push
mov
push
mull
push
dec
inc
daa
or
cli
mov
ja
xor
cmpsl
xor
cmp
mov
push
andl
stos
jne
fnstsw
push
add
pop
in
xchg
mov
inc
ret
mov
adc
inc
rorb
dec
rorl
mov
cltd
dec
shlb
inc
pop
adc
inc
and
scas
adc
jle
mov
daa
push
lret
mov
pop
gs
movsb
pop
cmp
aaa
inc
lea
lret
aad
xor
and
div
dec
cs
dec
dec
subl
popa
cmp
mov
addl
jno
cmp
xor
arpl
dec
dec
add
stos
rcl
mov
mov
dec
push
cmc
sbb
sub
mov
repnz
xchg
jle
ja
cwtl
mov
dec
call
iret
arpl
inc
cmp
or
subl
ret
adc
lock
jmp
and
cs
dec
scas
and
and
lcall
roll
fistl
repnz
shlb
jae
mov
mov
frstor
jno
jl
fldt
lds
movsl
fsubrp
xlat
mov
mov
decb
in
imul
add
bound
mov
cmp
jnp
imul
pop
dec
or
shll
mov
mov
negb
shl
lock
test
pop
rcrb
in
daa
sub
sub
xchg
push
mov
insl
dec
adc
xchg
shll
aad
mov
mov
fistps
rclb
popf
mov
filds
out
aas
push
insb
imul
ret
push
iret
sbb
push
ds
fsubrl
jo
outsb
sub
imul
inc
and
inc
aaa
lock
test
ljmp
jecxz
cmp
adc
dec
and
push
or
dec
daa
xchg
adc
imul
fs
loop
sbbb
sbb
adcl
sub
sbb
cltd
xchg
sbb
mov
inc
push
dec
out
jae
fimull
addr16
or
pushf
insl
test
or
cmp
lock
adcl
not
ja
and
and
fwait
pop
cmc
and
add
outsb
sbb
jp
push
arpl
or
mov
mov
aam
nop
jne
clc
add
cli
fidivrs
repnz
imul
lcall
add
fnstenv
mov
pop
flds
js
mov
lods
ds
mov
mov
add
pop
sbb
repnz
mov
pushf
jmp
int
xchg
fldcw
out
and
cmp
push
add
stc
imul
cltd
sbb
enter
shll
sbb
and
inc
push
cmpsb
mov
and
sbb
insb
sbb
arpl
lahf
push
mov
test
insl
mov
scas
loop
out
xor
jbe
jo
negl
push
jno
cmp
mov
adc
inc
jno
clc
sti
test
jbe
xor
sti
clc
test
popa
dec
pop
fcmovnbe
sti
jecxz
pop
inc
push
call
add
imul
out
mov
jmp
xor
push
sti
jl
notl
mov
xchg
xchg
decb
fmulp
lods
ret
mov
mov
leave
sbb
inc
mov
push
stos
shl
sbb
and
mov
jo
hlt
push
test
xchg
jbe
jmp
xor
repz
inc
fsts
jns
stc
add
mov
cmpsb
jp
mov
cmc
or
adc
in
cli
bound
lahf
pop
pop
or
mov
inc
sbb
mov
push
call
iret
mul
xlat
jecxz
xor
xor
sti
fs
adc
fstpt
scas
xchg
dec
outsl
xchg
shr
adc
scas
pop
pop
mov
sub
pop
aam
loopne
push
push
lahf
jg
xlat
inc
adc
lahf
addb
jecxz
jae
xchg
out
xor
popf
add
ljmp
je
lds
xor
fimuls
and
fsubs
fisubs
fs
jmp
mov
in
shrb
xchg
cmp
dec
xchg
in
jno
inc
inc
dec
movsl
push
pop
push
or
icebp
push
jbe
mov
cmp
jno
clc
dec
scas
mov
int3
mov
movsb
cwtl
or
cmp
js
xchg
subl
dec
push
into
repz
rcl
or
shll
sbb
jne
cmp
cmpsl
aaa
dec
enter
cmpb
addb
cmp
mov
fldt
in
mov
hlt
push
mull
add
dec
dec
movsl
sbb
inc
in
fidivs
cmp
mov
dec
xchg
jg
bound
leave
in
aad
aad
mov
jmp
mov
lea
movsb
mov
rcll
mov
inc
call
push
pop
sbb
lahf
std
fpatan
mov
std
jg
into
stc
or
gs
add
inc
pop
aaa
add
lret
aam
inc
adc
push
add
jb
mov
rorl
inc
add
cwtl
repnz
out
mov
jg
or
fwait
pop
jl
jb
scas
bound
lret
mov
daa
pop
jno
mov
divl
arpl
cmp
pushf
mov
pop
sub
flds
subl
sbb
push
cmp
jb
jbe
ret
iret
push
cmp
xchg
add
push
pop
in
mov
jle
mov
sbb
outsl
and
ror
ret
xor
addr16
or
lods
mov
push
aam
adc
das
shll
xchg
test
jnp
fstpl
push
pusha
adc
loop
in
hlt
xlat
ja
jno
int
add
jp
jp
sahf
nop
je
orb
cmp
mov
jbe
icebp
sbb
pop
push
fildll
sbb
dec
xor
js
xlat
das
insb
jbe
arpl
daa
pop
test
mov
int
int3
mov
js,pn
xor
cltd
jno
push
and
mov
insb
jl
stos
dec
sbb
xor
xchg
scas
cmp
aas
adc
mov
mov
popf
or
lcall
repnz
ljmp
mov
jns
jno
push
out
lahf
xorl
push
sub
sub
or
jno
ja
sarb
iret
ror
dec
andb
sahf
fstl
or
lret
in
loope
jmp
aaa
in
or
sub
sbb
outsb
pop
out
adc
mov
mov
test
gs
mov
pop
xor
dec
aas
inc
test
mov
pop
and
shrb
movsb
stos
mov
mov
pop
popf
add
mov
rclb
push
sbb
ret
orl
sub
jge
inc
sqrtps
fbld
mov
repz
or
js
xchg
xchg
mov
and
data16
popa
or
inc
mov
aaa
xchg
bound
xor
shrb
stos
test
leave
jg
iret
xor
dec
data16
mov
dec
push
sbb
push
inc
cmp
into
lock
and
add
pushf
dec
adc
in
data16
in
push
mov
adc
das
insb
into
lret
sub
int
mov
sbb
jae
adc
loopnew
lahf
sahf
xchg
and
das
stos
pop
or
mov
inc
arpl
leave
push
xor
xchg
or
fisttps
in
popf
roll
cmc
lea
fldlg2
jmp
stc
inc
scas
fs
call
out
psraw
movsb
pushf
scas
flds
or
adc
hlt
into
dec
cmpsb
xchg
gs
xor
xor
daa
test
add
add
jg
sbb
or
pop
mov
lcall
adc
jmp
dec
or
cmp
cmp
fcoms
arpl
or
scas
dec
movsb
aaa
cwtl
cmc
das
and
mov
imul
int
iret
js
xchg
cmp
mov
out
add
cmp
popa
dec
xchg
in
cmpsb
jecxz
fsubrp
outsb
jb
iret
dec
add
int
mov
outsb
js
adc
ret
out
dec
jmp
mov
jmp
mov
daa
loop,pt
sub
dec
pop
lea
jae
gs
inc
inc
sub
cmp
push
enter
inc
popf
fsubs
mov
mov
repnz
xor
icebp
cmc
scas
out
fdivrs
and
inc
outsl
jbe
pop
fisttpl
and
sub
fmul
push
pop
xchg
add
adc
loop
loope
repnz
out
xchg
xor
cmp
xchg
cmpl
cld
pop
cmp
in
xchg
cwtl
scas
add
hlt
in
mov
stc
sbb
lods
or
dec
mov
sbb
add
jg
iret
frstor
mov
dec
adc
jnp
push
lock
or
jge
je
mov
mov
sti
orl
xchg
int3
mov
js
sbb
push
xor
add
stos
mov
test
test
jno
lcall
cmpsb
shrl
loope
pop
shlb
dec
fs
sub
and
sub
sub
jmp
jmp
mov
jge
mov
stos
test
stos
cmp
and
xchg
xchg
nop
jb
push
addl
mov
ficomps
add
cmp
dec
fsubr
pop
rol
pop
push
adc
mov
jo
pop
fdivr
and
sbb
jae
stc
cmp
adc
lds
or
xor
test
push
push
jb
ss
adc
stc
stos
dec
dec
and
orl
push
aam
cmpsl
jp
jb
sbb
ljmp
mov
hlt
inc
ds
les
es
testl
adc
pop
dec
leave
imul
std
addl
rcl
fldl
inc
leave
sarb
rcl
inc
and
inc
mov
push
mov
jmp
hlt
test
adc
idiv
dec
cmp
sarl
bound
dec
test
jae
je
test
cmp
or
in
cld
arpl
insl
in
mov
inc
in
push
aas
sarl
push
sbb
lods
scas
or
xor
hlt
sub
xchg
outsl
lock
scas
outsb
dec
sbb
adc
sahf
movsb
pop
into
in
popf
mov
sbb
cmpsl
int3
xlat
nop
or
adc
ja
loop
and
gs
mov
add
cltd
pusha
sub
ret
add
push
imul
cmp
ja
mov
testl
gs
mov
out
cmp
scas
adcb
inc
pushw
sar
pop
js
hlt
lea
aas
sti
or
sub
arpl
imul
inc
es
stos
loopne
and
pop
mov
adc
aas
adc
ljmp
mov
insl
cs
int
fwait
adc
je
dec
out
fnstsw
lret
mov
xchg
out
or
mov
push
gs
xchg
inc
or
outsl
inc
out
push
xchg
dec
jp
xor
inc
cmpl
cltd
pop
scas
sbb
cld
mov
bound
fmull
mov
dec
imul
mov
sahf
xchg
fxch
and
fnstenv
cwtl
test
outsl
loopne
pop
jbe
lds
xchg
je
sti
sbb
cmp
fimuls
loope
push
adc
ror
iret
cmpsl
adc
sti
or
mov
scas
xchg
pop
push
das
sbb
je
mov
add
lods
repnz
lret
fisttps
sti
cmp
std
push
sbb
popa
cli
add
sahf
jnp
pop
aam
dec
dec
jl
sbb
divb
lods
inc
jp
fsubrp
adc
bound
or
out
xchg
or
and
push
xor
pop
jmp
xor
call
pusha
cld
dec
xchg
rcll
fstpt
cltd
mov
push
pushl
mov
in
xor
mov
push
ret
and
mov
fdivs
xchg
jne
nop
pop
andl
nop
jb
push
xchg
ud2
pop
lds
in
hlt
sbb
and
test
mov
push
xchg
loopne
lcall
sbbl
out
int
sub
imul
adc
jge
adc
pushl
stc
add
or
sbb
xchg
or
int
sbb
sbb
sahf
movsl
ret
gs
sub
cwtl
jecxz
inc
out
scas
testb
add
je
jle
dec
mov
mov
and
inc
xor
jno,pn
jae
mov
rclb
mov
adc
in
in
mov
leave
add
jecxz
test
pop
or
adc
in
sbb
lea
arpl
add
sub
sub
idivb
jmp
in
in
adc
js
in
or
add
or
popf
in
jmp
out
cltd
test
sbb
pop
sbb
inc
inc
mov
push
adc
cmp
hlt
out
mov
xchg
dec
out
stos
ret
test
cmp
rol
andb
inc
jae
dec
push
mov
call
xchg
dec
stos
inc
sub
push
lds
outsb
and
pop
push
jge
jg
loop
and
repz
pop
xor
mov
outsl
int3
mov
jae
ja
lret
jne
lods
jl
xchg
clc
mov
or
in
or
inc
push
inc
enter
es
das
aas
adc
shrb
and
add
or
sti
pusha
xor
or
fstpt
or
push
cmpxchg
pop
test
mov
loopne
xchg
push
popf
inc
roll
fwait
cmp
fld
push
mov
arpl
push
or
cmp
int3
cli
les
cmpsb
xor
xor
dec
xor
test
dec
cmp
gs
xchg
mov
mov
addl
out
popf
pop
fucom
das
inc
repnz
fs
inc
inc
loopne
pop
ljmp
mov
arpl
scas
nop
lret
cltd
shrb
leave
jnp
push
adc
loopne
jp
push
cmp
dec
dec
cli
fistpl
push
cmp
jb
xor
push
jbe
sbb
jge
mov
or
in
mov
mov
mov
movsl
dec
inc
dec
mov
lret
and
aam
mov
repz
fdivrp
or
cli
dec
add
mov
aaa
dec
test
cltd
test
aas
adc
in
adc
add
mov
iret
shlb
pushf
sbb
xor
pop
jp
inc
cmp
out
dec
out
jnp
sub
lods
cmp
mov
das
mov
or
sbb
jnp
and
outsb
mov
xchg
test
testb
xchg
subl
mov
gs
mov
jbe
mov
jnp
fsubrs
out
jo
xchg
ljmp
daa
fisubrl
cmp
push
pop
addb
arpl
cmp
insl
fldcw
xchg
imul
insl
sbb
das
ss
icebp
loopne
int
cmp
inc
ss
in
dec
jo
lahf
shlb
daa
fbstp
dec
imul
xor
dec
adc
or
js
aad
inc
jno
jge
scas
jl
stos
sbb
push
out
xlat
jo
test
sub
sub
lret
aas
ret
std
cmp
push
pop
cmp
jns
jae
arpl
mov
or
mov
push
pop
mov
popa
dec
jecxz
rorb
repz
sbb
add
xor
jmp
loopne
js
in
xor
xor
cmpsl
mov
jns
cmpsb
mov
xor
lcall
fmull
xor
add
ret
pop
addr16
or
fcomp
icebp
and
pop
sbb
pop
inc
loopne
int
fcmovu
push
jecxz
clc
fcoml
stc
or
xchg
cmpsb
mov
out
push
ds
cmp
cmp
push
mov
jmp
adc
adc
add
mov
pushf
inc
adc
push
mov
pop
push
pop
andb
xchg
xor
jbe
sub
scas
testb
pop
cmp
or
orb
in
lea
xchg
lea
or
orl
aad
mov
add
xchg
mov
ja
pop
pop
xchg
mov
push
out
xchg
mov
testb
popa
lahf
pop
notb
fcoms
mov
cmpsl
push
xchg
loopne
push
incl
dec
cmpb
lcall
cmp
cwtl
push
cmp
mov
std
shlb
test
dec
push
inc
pop
xor
mov
aam
int3
mov
inc
pop
lahf
scas
inc
xchg
xor
push
jl
mov
cltd
sbb
adc
sti
stos
push
mov
pop
cmpsl
js
incb
and
lea
or
cmp
adc
repz
add
jb
mov
sbb
gs
jae
sbb
aad
mov
loop
add
push
or
mov
sbb
les
jge
dec
inc
pop
hlt
or
or
js
sbb
push
loope
das
fdivrl
es
insl
inc
pop
shlb
cmp
pop
addr16
xchg
and
sub
sub
mov
pop
mov
cwtl
inc
mov
notl
push
in
fidivl
inc
ret
imul
fdivl
sub
loopne
fisubs
push
divb
pop
mov
pop
mov
andb
or
fsub
mov
rcll
aas
mov
imul
and
sbb
mov
int3
cs
mov
stos
jp
arpl
pop
stos
mov
add
mov
mov
lahf
sub
mov
clc
xchg
pushf
push
mov
sub
test
mov
mov
test
shl
xchg
push
stc
mov
sbb
sbb
xchg
mov
and
outsb
pop
lcall
cs
xor
dec
adc
mov
cmpsl
push
pusha
adcb
inc
mov
lcall
adc
xchg
lea
push
dec
sub
jo
inc
push
adc
mov
jmp
outsl
sahf
fwait
ja
mov
icebp
pop
sbb
mov
fsubrp
mov
mov
fistps
cmpsl
ljmp
fucom
fnstenv
pop
fwait
and
and
orl
jno
mov
in
adc
jne
call
scas
outsb
repz
lods
add
arpl
mov
push
sahf
xor
or
xchg
sbbb
repz
dec
cs
stos
adc
mov
scas
fwait
mov
mov
bound
mov
cmp
xchg
dec
dec
dec
stc
popa
add
xchg
xor
fidivs
pop
and
xor
push
xor
xor
fimull
pushf
inc
dec
fstp
popa
shll
mov
add
or
sbb
in
fdivrl
in
jne
lret
push
fidivrs
mov
xor
xor
cwtl
or
mov
dec
repz
popa
jae
xor
clc
aad
out
add
push
call
adcb
and
mov
adc
mov
fsubr
adc
fimull
daa
movl
mov
imul
andl
int3
fsubrp
test
mov
insb
jno
pop
stos
adc
mov
xchg
clc
dec
push
gs
gs
mov
sub
cmpsl
sbb
mov
xor
dec
call
push
mov
jae
mov
out
notb
in
aas
add
mov
in
sub
cmp
cmp
jns
add
sub
pop
inc
imul
scas
adc
out
pushf
into
mov
hlt
into
jg
push
cld
mov
das
inc
sbb
sbb
cmc
xchg
imul
icebp
mov
sub
jb
imul
ficomps
mov
add
sbb
lahf
movsb
jnp
sbb
sbb
sub
repz
pop
cmpsb
out
or
repnz
adc
push
push
mov
push
mov
dec
ds
cmp
sub
jecxz
and
sub
cmp
stc
js
push
enter
sub
pushf
scas
add
mov
sub
mov
sar
popf
jbe
aad
pushf
mov
outsl
sbb
sub
mov
jmp
push
jle
rcll
and
lea
add
xchg
in
mov
fs
xchg
adc
cltd
es
jbe
bound
ficoml
aaa
js
cli
aam
or
inc
xorl
sbb
sbb
push
sub
inc
into
cmpsl
jno
jg
nop
pop
mov
pusha
call
stos
or
xchg
das
ret
jnp
add
mov
sub
sti
into
mov
scas
jbe
mov
xor
dec
pop
push
or
mov
sti
aas
movsb
clc
out
xlat
inc
ss
xchg
cmp
insl
push
in
xchg
mov
mov
push
sub
aam
ljmp
fs
fsubs
pop
jmp
sbb
jae
xchg
es
jp
and
jmp
ror
int3
push
jns
mov
adc
stos
mov
dec
add
mov
lea
aam
cmp
out
rolb
pushf
or
mov
pop
lret
int3
push
lcall
js
mov
enter
lods
mov
scas
or
ret
jl
pop
rcr
jl
and
push
inc
push
dec
or
xor
pop
cld
fisttps
insl
cs
inc
push
jo
push
out
xor
cs
icebp
cmp
ljmp
mov
fiaddl
mov
xor
bound
in
push
add
pop
outsb
fwait
imul
inc
mov
xlat
leave
mov
js
and
btr
mov
inc
push
aaa
popa
push
mov
dec
cmp
in
adc
or
xchg
call
jnp
lods
sahf
adc
inc
mov
adc
aaa
scas
mov
push
sub
in
movsl
aas
pop
or
in
aaa
cmpsl
or
cld
add
mov
mov
xor
mov
push
clc
push
xlat
bound
inc
fsubs
cmp
ret
pop
aad
xchg
mov
fcompl
mov
lea
inc
cmp
xchg
mov
push
fwait
mov
adc
iret
test
jno
inc
mov
enter
or
scas
add
cmp
pop
push
push
dec
cmp
in
or
xlat
pop
outsb
and
jnp
jp
xor
shl
bound
pop
mov
and
daa
imul
mul
jg
fwait
in
adc
jb
insb
push
jae
push
sub
insb
pushf
out
out
adc
fchs
and
dec
dec
fisttpll
xchg
sub
adc
and
sbb
add
adc
frstor
add
test
bound
xor
rcl
mov
lret
test
or
lods
mov
or
repnz
lea
clc
aam
inc
fdivrl
jo
fmuls
ljmp
test
outsl
mov
bound
cmp
jo
push
cli
push
push
ljmp
iret
adc
and
cld
mov
sti
push
push
jae
rorl
push
dec
test
cmp
shlb
cmp
outsb
pop
mov
mov
mov
xlat
test
cmp
es
xchg
loope
push
in
sbb
sub
xchg
jne
mov
mov
in
push
fwait
das
fdivrs
pop
fdivrs
xor
stos
inc
xchg
fwait
cmp
push
mov
mov
je
xor
pop
inc
arpl
sub
pushf
mov
aaa
inc
rcrb
jno
sub
cli
adc
sub
fsubrs
xchg
dec
mov
outsl
int3
fwait
jno
movsb
fwait
xchg
in
or
pop
mov
imul
std
xchg
lods
stc
lods
xchg
fstp
out
scas
cmpsl
fidivrl
fldenv
lods
pop
cmpsb
cmp
mov
push
icebp
cmpsl
xlat
cli
mov
mov
loope
jge
add
push
jmp
jle
mov
shlb
jmp
jg
add
stos
lret
pop
push
or
or
sub
sbb
add
subb
cmp
enter
and
out
scas
int
push
out
repz
loopne
inc
out
aam
xor
lock
adc
mov
xor
and
xchg
mov
test
mov
outsb
jae
out
xor
inc
leave
sbb
or
loopne
xchg
outsl
stc
orl
mov
movsb
hlt
jle
pusha
popa
js
mov
mov
cltd
jle
mov
xchg
sbb
pop
xchg
mov
sarl
dec
mov
lret
les
shr
mov
mov
adc
push
inc
fcompl
out
mov
je
pop
dec
and
xchg
les
add
imul
cmp
stc
lds
lock
std
sub
xlat
jo
movb
sbb
test
pop
fcomps
sub
daa
or
add
gs
je
add
and
cmp
rsm
sbb
cmp
ret
push
adc
sbb
insl
xchg
pop
push
leave
push
into
cmp
xor
push
cmp
xchg
xchg
lds
call
xchg
jb
idivb
xchg
popa
jmp
push
data16
inc
cs
stos
insl
add
out
xchg
add
icebp
and
mov
in
loop
mov
loope
ficoml
fidivl
popf
out
inc
mov
jle
cmp
inc
add
cwtl
inc
sbb
fcoms
mov
xor
fwait
rol
sub
adc
rcr
inc
or
mov
iret
or
fdivrl
lods
inc
cmpsb
dec
sbb
sbb
jg
jnp
mov
sbb
sub
insb
xchg
movb
loopne
aaa
or
xchg
push
sbb
dec
and
jns
lcall
and
xchg
or
je
pop
dec
hlt
sub
ds
dec
xchg
scas
enter
ss
scas
pop
mov
jbe
lods
data16
add
mov
ja
jecxz
sbb
js
lret
push
pop
xchg
cltd
lcall
sarb
and
sbb
subl
xchg
es
jl
sub
mov
jo
sub
pop
cli
sbb
add
fdivl
sbb
int
inc
push
xor
loopne,pn
orl
pushf
xchg
mov
ss
mov
adc
or
scas
pop
loop
or
fisubl
push
dec
inc
punpckhwd
inc
xlat
lock
dec
mov
sbb
aas
xlat
cmp
test
cmpsl
or
mov
icebp
pop
filds
sahf
add
popf
cmp
mov
aaa
int3
in
into
pop
adc
xor
pop
adc
xor
and
and
not
leave
mov
call
enter
and
dec
lds
fwait
sub
test
out
xor
leave
inc
jp
dec
jl
movsb
adc
imul
or
cmp
subb
push
addr16
repnz
stos
fcompl
jbe
jmp
xchg
stos
cmp
or
xor
mov
iret
inc
lea
mov
and
or
das
xor
and
jo
jne
or
xor
int3
int3
ds
imul
insl
cmp
repnz
sub
mov
call
xchg
dec
out
or
xchg
aam
test
and
mov
out
add
mov
icebp
xor
and
sbb
js
lods
fidivrs
and
out
mov
inc
cs
pop
dec
push
inc
inc
sbb
dec
pop
pop
cmp
cli
jge
notb
xchg
pop
push
sbb
xlat
push
sti
and
clc
cltd
inc
inc
sub
mov
jl
pop
or
fidivrs
push
mov
movsl
xor
sahf
ror
mov
xor
adc
stos
pop
nop
or
cmp
cmpsb
into
dec
sbb
and
push
nop
xchg
or
jne
sbb
ds
mov
xchg
jmp
pusha
daa
loopne
icebp
rorl
scas
scas
sub
icebp
popf
xchg
mov
pop
or
inc
push
sub
adc
aam
sbb
jnp
sbb
outsb
ret
pop
dec
push
fstpl
cwtl
add
and
outsl
inc
pop
and
fdiv
inc
das
iret
imul
cmp
incl
lret
add
jo
xchg
outsb
cmpsb
les
jae
lock
int3
sbb
and
add
icebp
lods
fdiv
leave
cmp
outsb
arpl
inc
xchg
negb
jno
cli
cmp
adc
repnz
mov
fnsave
lcall
dec
shll
outsb
xor
push
add
aas
test
mov
mov
push
cli
mov
addr16
sbb
dec
pop
or
xchg
jg
xor
ss
push
or
or
pop
xlat
orl
adc
loop
jg
ljmp
xor
int3
push
shrb
mov
jns
adcl
daa
cmc
in
fildll
jb
rolb
nop
subl
xor
shll
inc
mov
fsubrp
and
mov
lret
xchg
outsb
cmpsl
or
out
add
andb
dec
mov
mov
int3
adc
mov
sbb
mov
fstpt
cli
mov
cmp
inc
or
fdivs
push
mov
sbb
push
adc
mov
dec
ret
daa
outsl
adc
dec
idiv
frstor
jns
mov
push
jl
jno
mov
push
fstl
aam
push
xorl
mov
pop
popa
cmp
insb
popa
stos
and
ret
fwait
jbe
int3
dec
mov
mov
fistpl
shrd
add
pop
stos
sbb
inc
mov
fs
push
mov
outsb
xchg
sbb
clc
fcom
fstpl
popa
sarb
jbe
in
out
add
out
movsl
xchg
push
aaa
aas
or
repnz
pop
and
push
push
xchg
jecxz
pop
ret
sub
lods
das
mov
push
cwtl
dec
aad
ja
inc
stos
inc
stc
pop
pushf
pusha
orl
inc
mov
sub
hlt
sub
daa
fnstsw
mov
test
sbb
mov
dec
xchg
pop
jl
and
dec
jbe
fsubl
push
jecxz
test
out
popf
sbb
mov
jl
mov
stos
inc
cmp
int
and
lret
or
and
xchg
sub
dec
adc
sbb
jo
jle
dec
xor
insl
andl
mov
xlat
jle
ret
sub
mov
pop
and
fsts
ret
shl
cmp
nop
lret
push
mov
out
inc
aaa
out
out
add
xchg
jp
js
xchg
push
js
lret
ljmp
and
push
add
adc
jl
pop
cmpsl
test
gs
das
sti
pusha
push
ds
popf
jecxz
sahf
cli
mov
cmc
mov
jmp
cmp
shlb
and
inc
inc
roll
cmp
jno
jge
les
mov
inc
rorl
add
lods
imul
sbbb
popa
cmp
es
xchg
and
pop
sbb
cmpsb
cmp
out
fcompl
xor
int
xchg
push
or
lods
lea
mov
imul
xchg
aam
clc
pop
lgdtl
mov
in
and
aad
xor
popa
mov
pop
or
repz
mov
mov
xor
push
iret
fcomi
shll
mov
or
scas
test
outsl
xor
bound
scas
fistps
ja
jmp
inc
pop
push
cmc
daa
cmpsb
stos
xchg
and
cmp
or
push
jno
mov
std
jnp
inc
ds
mov
int
stos
sbb
fistps
sbb
add
popl
mov
iret
mov
outsl
lock
addr16
push
inc
into
mov
sub
cmpsl
xor
test
push
xor
cmp
mov
nop
lahf
cmpsb
outsb
mov
adc
js
jp
lea
jecxz
cwtl
push
inc
jnp
jecxz
push
pop
jo
movsl
sub
arpl
jmp
cmp
push
sbbl
jge
nop
ja
xor
lods
dec
xchg
in
aaa
mov
cli
xchg
cmp
adc
pop
or
ret
arpl
addr16
stos
jl
mov
mov
add
cmp
mov
xor
cmpsb
mov
hlt
mov
push
bnd
push
add
mov
mov
cmp
cs
jnp
je
pop
int
sti
sti
cmp
inc
imul
mov
jl
xchg
or
bound
call
add
stc
push
insb
sub
loope
in
jg
or
in
iret
cld
mov
rcrl
popf
rcrb
rcrl
repnz
lds
je
or
out
cmp
xchg
icebp
sub
gs
mov
add
loop
dec
jnp
bound
push
mov
pop
xchg
or
xchg
push
jecxz
stos
jle
ret
lcall
nop
xor
push
push
or
xor
fucomip
out
lds
hlt
hlt
scas
icebp
or
mov
cli
push
jl
int3
and
inc
icebp
dec
pusha
and
xlat
enter
cmpsb
int3
test
shll
shrl
cmpsl
neg
call
mov
add
neg
xchg
pop
call
imul
pop
shr
stc
xchg
js
icebp
repz
sbb
stos
arpl
fsubs
cmp
adc
dec
ret
lahf
mov
fsts
inc
add
lcall
cmpsl
sti
push
push
out
pop
call
aaa
stc
pusha
flds
movsb
in
cwtl
sbb
mov
loopne
aam
fincstp
aas
loopne
or
sbb
mov
mov
pop
fiadds
rolb
dec
dec
out
inc
cmp
adc
sti
into
test
stc
mov
sub
jmp
sub
push
scas
lods
xchg
fidivrl
mov
stos
imulb
mov
in
lods
mov
mov
rorl
rolb
cmp
repz
inc
push
adc
push
add
mov
je
xchg
iret
push
xchg
push
imul
das
scas
repz
mov
ficomps
adc
xchg
xchg
push
mov
and
dec
mov
xchg
aaa
leave
xchg
cmp
rcll
sti
sbb
pop
lcall
ljmp
orl
and
call
inc
add
push
fistpl
sub
adc
cli
cwtl
movsb
xchg
adc
jne
jne
sbb
std
sub
pop
inc
insw
fsubr
popa
mov
sti
or
rcll
ret
ret
inc
cmpsl
xlat
cmp
popa
push
xor
add
mov
sbb
icebp
js
dec
sub
addr16
lods
icebp
xchg
push
mov
enter
pop
sbbb
push
je
xchg
jl
or
in
jmp
mov
adc
jg
push
bound
scas
jo
pop
ret
jb
jnp
pushf
cmc
mov
test
jge
in
scas
clc
mov
popa
xor
xor
mov
mov
popa
and
mov
shll
arpl
xor
gs
hlt
or
xor
dec
pop
inc
pop
push
mov
aad
sahf
push
push
aas
dec
pand
cli
mov
xor
adc
mov
aad
ds
jns
dec
cmc
xor
mov
mov
pusha
adc
sub
push
jp
jmp
out
out
ljmp
push
mov
repz
inc
cmpl
xchg
xor
mov
or
imull
xor
pop
jg
mov
sub
lret
inc
xchg
sub
movsb
push
test
cld
sub
jne
mov
and
inc
or
dec
mov
xor
mov
push
fucomip
or
mov
xchg
or
xchg
scas
pop
jbe
push
mov
nop
movsb
inc
sbb
pop
jp
sti
pop
orb
movsl
jbe
or
dec
ja
and
sbb
or
jge
scas
or
pop
rcl
adc
lret
mov
sbb
cmp
daa
and
jl
sbb
adc
inc
add
fdivl
and
mov
frstpm(287
int
int
cmp
pusha
movsb
lahf
cmp
mov
cmp
sub
jmp
addr16
sbb
sbb
xchg
int3
insb
cmpb
xor
shll
or
testl
lahf
jae
movsb
repnz
or
stos
push
ss
rorb
outsl
fwait
lds
pushf
xchg
push
lret
dec
leave
subb
fildll
sbb
sub
adcl
mov
in
out
in
push
mov
sbb
lea
cli
pop
nop
mov
movsb
cld
les
dec
xchg
aaa
call
test
and
sbb
test
mov
sbb
movsl
and
fsubrl
loope
add
push
mov
push
and
sti
jge
xchg
cmpl
xor
xor
dec
stos
addr16
inc
sub
inc
aaa
js
fdivl
cli
mov
clc
int
inc
call
push
fidivs
sub
xchg
fildll
jge
sub
jnp
fdivrl
lods
jl
imul
inc
leave
cwtl
cmp
lock
mov
mov
jge
dec
mov
add
outsb
adc
notb
fistps
and
pop
add
pop
shrl
fs
adc
jbe
xchg
mov
out
push
iret
test
data16
addb
mov
mov
lods
pop
push
pop
arpl
mov
inc
aaa
lret
lds
js
mov
mov
cmpsl
sub
pushf
jmp
icebp
mov
lock
addl
cmp
sbb
hlt
outsb
outsl
cmpsb
jl
fiaddl
push
testl
cmp
add
jae,pt
adcb
bound
push
sbb
movsb
adcl
mov
push
xchg
sbb
je
jecxz
lods
lds
xor
rcr
imul
rolb
call
inc
add
pushf
mov
push
xor
repz
or
xchg
sbbl
add
hlt
sub
mov
sub
dec
das
daa
fs
mov
repnz
push
popa
idiv
jecxz
pop
fildl
clc
fldt
cmp
mov
icebp
pop
xor
gs
jmp
dec
dec
adc
push
in
xchg
mov
cmpsl
sbb
ret
cmp
ficompl
dec
xor
pop
xor
xchg
fdivr
aas
and
inc
xlat
loopne
mov
test
push
in
xchg
outsl
lods
out
mov
iret
add
outsb
cmpsb
sbb
ja
push
testl
inc
inc
aas
mov
jle
fidivrl
mov
jns
fisttpll
hlt
outsl
inc
ret
adc
shlb
idivb
and
lock
clc
mov
and
incl
mov
inc
das
out
and
cmpsl
int3
sub
mov
insb
addl
in
mov
popa
pop
mov
dec
inc
mov
stc
sbb
ret
dec
dec
nop
mov
out
call
fldt
movsb
fcoml
int3
mov
fs
jbe
leave
or
jecxz
sbb
mov
push
push
cmp
or
aaa
ja
push
xor
xchg
jg
imul
jge
dec
and
lods
aas
xor
daa
dec
xchg
sbb
pop
inc
pusha
pop
je
fwait
mov
pop
or
sub
and
pushf
clc
ret
and
sbb
mov
push
sbb
iret
xchg
nop
fldt
int
xchg
sbb
push
sbb
mov
insb
jns
xchg
sub
mov
loop
jmp
jns
popf
sub
xor
add
inc
std
vcmpsd
push
js
in
aam
sahf
xchg
cs
fs
xor
jp
jae
add
arpl
iret
push
xchg
lret
rcl
ss
xchg
and
add
inc
test
inc
sahf
sbb
shrl
mov
and
cmp
sub
xor
xchg
inc
roll
or
xlat
pop
cmp
pop
dec
addr16
int3
mov
xor
ja
outsl
adc
leave
ds
dec
leave
jbe
mov
lods
outsb
in
jae
repz
push
dec
lea
dec
int
and
inc
inc
adc
ret
dec
enter
push
lock
test
sub
je
adc
enter
into
push
adc
out
cmpl
or
sarb
inc
mov
lods
pop
and
inc
cmp
lea
cmpsb
icebp
nop
gs
adc
inc
sbb
inc
push
cmpsl
adc
frstor
cmp
or
fildl
je
out
das
mov
rolb
ljmp
ret
or
push
pop
xor
pop
in
xchg
stos
stc
cwtl
nop
inc
dec
stos
mov
leave
xchg
or
stc
push
jl
fistl
rep
inc
pop
pop
mov
or
add
dec
mov
mov
and
pushw
mov
dec
mov
aad
pop
xor
cli
fwait
pop
cmp
in
subb
sti
fwait
bound
les
add
dec
fstpt
lret
sbb
loopne
mov
push
adc
cld
mov
pop
push
test
mov
mov
into
test
outsb
or
int3
leave
cmc
and
jns
push
add
pop
out
xor
sub
sbb
jo
inc
fiaddl
inc
int3
stc
jmp
sub
xor
cmp
fsubr
outsb
jmp
sub
sbb
pusha
pop
jecxz
rol
pop
inc
out
xchg
decl
in
jae
fs
sbb
and
or
ror
stos
dec
jmp
mov
cmc
xchg
test
lahf
rclb
not
inc
sub
xor
into
fmul
roll
sti
cmp
adc
mov
adc
inc
or
xlat
in
pop
sbb
mov
aam
adc
pop
dec
adc
cmp
mov
and
test
mov
dec
scas
cmpsl
stos
xchg
xchg
inc
push
sbb
insl
scas
mov
adc
scas
adc
pop
into
push
mov
xor
test
outsb
and
les
ss
call
and
outsl
pop
out
popa
inc
mov
jle
push
jno
sarb
cmpsb
ficoms
pop
hlt
cmp
rcrb
xchg
push
jle
jl
andb
lock
push
adc
inc
inc
stos
test
mov
and
mov
lock
int
mov
je
push
outsb
push
xor
mov
dec
sbb
iret
mov
loope
aaa
xchg
out
xchg
sbb
and
inc
loop
mov
mov
fsubl
xor
shrl
stos
push
lock
arpl
mov
add
lcall
push
mov
cwtl
out
out
adc
scas
mov
call
pop
add
loopne
push
jge
pop
pop
xchg
push
ja
loopne
popa
cltd
insl
pop
shll
cmp
fnop
inc
push
repnz
and
imul
cmp
ss
loop
xorl
inc
adcl
xchg
pop
adc
iret
and
push
clc
les
mulb
and
xchg
mov
pusha
and
xchg
and
out
dec
arpl
ja
mov
sarb
push
or
mov
xchg
int3
xchg
mov
cmp
test
sbb
push
pusha
jle
xor
jo
mov
adc
jle
xlat
push
int
mov
js
push
xor
out
fs
call
add
mov
inc
sbb
push
xlat
pop
fisubs
dec
leave
into
mov
sub
ffree
jecxz
inc
xchg
cmp
arpl
push
mov
fs
in
dec
loop
mov
fbld
mov
insb
fs
fcoml
fidivrs
iret
outsb
std
mov
or
int
push
sub
mov
pop
jns
mov
orb
dec
std
imul
sub
leave
cmp
scas
mov
inc
jl
shlb
pop
inc
mov
mov
push
pop
sti
pop
xchg
fwait
bound
jl
rorl
sbb
and
cld
push
imul
shl
cmpl
xchg
inc
xchg
lahf
faddl
andl
gs
add
adc
fisttpl
clc
out
xchg
sub
aas
mov
and
ror
test
test
mov
mov
add
cs
jecxz
jo
jge
iret
mov
cwtl
mov
paddq
loopne
insb
jp
rcl
push
xor
adc
mov
sahf
mov
cmp
cld
cmc
aam
push
in
insl
jge
test
jge
cltd
push
xchg
cli
push
push
jle
mov
test
mov
and
imul
hlt
cmp
lea
mov
sub
das
cmp
xor
mov
popf
sub
pop
fcomps
or
test
mov
int
test
into
pop
sub
sub
adc
pop
xchg
sub
daa
xchg
shlb
xchg
test
sub
stc
push
mov
adc
mov
cmp
sub
jnp
xchg
sub
call
push
mov
dec
xor
pop
shlb
cmpsb
sbb
sbb
sub
pop
push
pop
ljmp
aas
into
inc
jb
pop
ja
push
xchg
adc
imulb
xchg
dec
es
sub
leave
sbb
xor
aaa
ret
xchg
ss
mov
jmp
popf
adc
mov
sub
fidivrl
dec
xchg
lret
push
mov
sub
scas
shlb
pop
repz
dec
outsb
cmp
mov
rorl
push
std
insb
out
cmp
mov
repnz
cmc
push
and
ja
ds
push
xchg
lcall
enter
outsl
dec
bnd
inc
insb
jecxz
dec
repnz
cli
je
fisubs
fsts
int3
sub
inc
bound
push
cmp
pop
xlat
arpl
mov
les
cmc
lahf
subb
sub
pop
push
cmpsl
icebp
hlt
cmp
add
dec
hlt
fwait
mov
pop
cmp
push
pop
shlb
mov
mov
int3
ret
xor
push
enter
daa
add
add
inc
decl
sbb
mov
data16
jb
mov
pop
push
out
lret
hlt
lret
adc
mov
cmp
out
movsl
pop
cld
stc
loope
rcrl
cld
inc
adc
and
jne
sbb
jge
ret
stos
pop
push
cwtl
lock
sarl
push
inc
or
xlat
mov
ror
cmc
mov
push
out
xor
pop
pop
mov
inc
sbb
push
ficompl
xlat
push
push
jbe
aam
int3
popf
add
xor
in
mov
and
adc
mov
add
cmc
ss
lahf
pop
test
adc
mull
jne
cltd
dec
subl
mov
or
lahf
mov
lahf
loopne
dec
push
in
jmp
orb
icebp
sbb
test
push
jbe
out
dec
nop
out
aam
mov
jne
jns
cmp
xlat
std
inc
shlb
aaa
rcrl
lods
loop
mov
int
jp
sub
stos
movsl
cmp
test
push
icebp
pushf
lea
jno
mov
jns
xchg
pop
jne
push
pop
xchg
mov
add
fcmovbe
scas
pop
movsl
cmp
popf
xchg
push
pop
jne
int3
jb
cli
inc
js
setae
pushf
dec
lret
fisttpll
stc
mov
in
inc
fmul
push
fistps
ljmp
pop
xchg
daa
sub
scas
shlb
jl
push
stc
scas
sub
and
xor
pop
mov
sbb
loopne
aad
aam
ret
cmp
push
call
loope
pop
jnp
fldt
sbb
test
jnp
in
jge
push
sub
push
add
adc
stos
add
mov
pop
xor
inc
loopne
mov
adc
sub
jno
xor
pop
std
add
out
daa
rorl
mov
lea
repnz
xchg
push
mov
add
push
push
hlt
jp
sbb
pop
popf
pop
popa
push
out
fsubrs
cmp
repz
inc
jne
loope
rclb
and
aaa
or
sarl
dec
dec
xchg
push
lods
sub
sti
scas
shll
loop
xchg
mov
cmp
jne
push
int
aam
dec
fs
sbbl
nop
jl
lea
mov
bswap
out
push
push
add
leave
push
repz
lds
add
mov
dec
pop
mov
jns
jo
jle
loope
outsb
xchg
jb
inc
mov
je
and
mov
in
or
dec
enter
es
rcr
or
xchg
mov
leave
cltd
xchg
test
es
icebp
sbbb
push
aam
icebp
repz
test
fs
mov
out
add
ficompl
or
sar
lea
adcb
push
mov
cmp
push
lods
stos
ret
and
jnp
pop
mov
sbb
mov
mov
in
sbb
inc
out
xchg
adc
inc
add
lds
push
push
inc
push
mov
aad
test
push
outsb
mov
dec
cli
subl
jbe
push
js
xchg
das
push
out
lahf
cmpb
mov
inc
cmp
sbb
lcall
pop
sub
cmp
jge
sarb
aas
shrl
pop
jo
pop
ret
shlb
mov
fs
pop
xor
sub
test
repnz
and
int3
sti
xor
dec
and
jo
push
xor
lock
sahf
packuswb
int3
andl
push
and
and
aam
addr16
push
imul
in
jle
loope
sbbb
add
jnp
popa
popa
sub
addr16
pop
filds
and
pop
inc
xchg
mov
sbbl
lret
push
jno
pop
jne
mov
idivl
xchg
sub
dec
pop
je
sub
js
test
out
inc
inc
icebp
lea
mov
xor
cs
dec
xchg
pop
sti
lret
xchg
lahf
inc
push
rclb
in
add
add
fimuls
or
movsb
push
xor
hlt
dec
push
loop
lret
js
pop
and
cmp
add
sbb
pushf
movsb
fcoms
mov
push
outsl
out
arpl
inc
das
xchg
jg
outsl
or
clc
jl
stc
gs
in
mov
push
sbb
filds
push
and
in
cmp
xchg
sbb
lock
sarb
jle
cmp
mov
push
mov
xchg
dec
mov
mov
xchg
in
inc
mov
cli
int
xor
cmc
dec
arpl
mov
pop
cmp
jecxz
fists
popa
lahf
lock
sahf
cmpsb
sub
ja
xchg
ds
je
jmp
add
pop
rcl
xchg
mov
fimuls
jae
nop
push
outsl
adc
push
ljmp
jmp
xor
push
js
dec
imul
mov
mov
adc
test
add
add
inc
out
xor
in
ja
inc
push
inc
push
xchg
push
cmp
loop
repnz
dec
outsl
jb
mov
dec
pop
pop
das
sbb
enter
in
xor
imul
push
test
les
dec
add
loopne
add
jb
fmul
push
mov
scas
sub
sbb
aam
add
lds
fxch
add
aam
dec
mov
jns
lock
dec
int
push
enter
mov
loop
outsl
dec
int3
xor
mov
movsl
mov
rorb
cltd
ss
adc
ljmp
bound
insl
imul
jno
mov
sbb
pop
pop
pop
pop
inc
ret
fwait
call
mov
jmp
aaa
lahf
bound
mov
and
cmpxchg
jae
popf
jg
outsl
push
xchg
ss
stc
addb
mov
sub
test
in
mov
lods
mov
sub
push
nop
lret
in
loop
jp
adc
insb
push
sahf
push
pcmpeqb
xchg
popl
jno
int
xor
mov
or
jbe
and
lret
mov
lcall
fstpt
lahf
jmp
pop
push
imul
sbbb
inc
mov
push
and
and
xchg
sti
icebp
mov
adc
cltd
mov
mov
daa
and
jne
push
inc
mov
mov
sub
stos
xchg
xchg
outsb
scas
and
cltd
in
inc
sbb
out
adc
pop
or
adc
xor
jne
divb
jbe
call
xchg
nop
divb
int3
xor
out
adc
dec
xor
cli
inc
fdivs
loopne
pop
imul
jne
shll
inc
in
fwait
xlat
je
cld
and
inc
mov
test
mov
test
inc
mov
loop
xchg
sub
push
xchg
pop
push
cwtl
adc
sub
fstpl
xor
xchg
jnp
rcrb
lahf
add
lahf
xor
shll
and
in
jmp
sub
rcrb
push
or
dec
dec
je
mov
lret
xchg
cmp
dec
rclb
cmp
mov
inc
mov
mov
cmp
sub
dec
test
loop
or
dec
mov
repz
dec
fsubl
pop
in
adc
or
inc
mov
mov
dec
dec
push
shl
push
das
rclb
mov
sbb
push
push
stos
fninit
inc
xchg
into
inc
or
sub
mov
call
in
std
xor
in
dec
fiaddl
push
xor
out
push
xor
pop
in
jecxz
push
or
xor
mov
push
faddp
and
mov
pop
adc
lods
testl
shlb
sub
testb
dec
pop
inc
or
sub
xchg
cmp
out
mov
xchg
loope
inc
push
inc
cld
in
outsl
push
popf
adc
sub
sub
jl
sub
cmp
mov
pushf
cmp
daa
loope
adc
cmpsl
repz
dec
in
test
cld
cmc
jne
aas
data16
xor
cmpsl
pusha
fstpl
mov
test
mov
aas
sbb
mov
dec
aad
notl
loop
cmp
sub
mov
push
xchg
test
push
xchg
jge
mov
and
rcpps
ffreep
in
push
sti
jbe
dec
inc
dec
pop
mov
in
lea
mov
jl
xchg
sbb
push
lret
loopne
adc
idivb
lock
divb
inc
push
ret
lods
adc
iret
inc
sub
hlt
adc
inc
dec
ja
aam
dec
lcall
and
adc
jmp
dec
in
lcall
les
xchg
add
push
loop
arpl
push
mov
lods
hlt
fstpt
or
out
stc
enter
pop
ror
inc
testb
mul
leave
mov
mov
fs
dec
cmp
dec
adc
stc
dec
out
ds
pop
xor
or
test
jnp
cld
inc
lods
popf
movsl
mov
jne
mov
lods
mov
sbb
cmp
dec
push
ss
sbb
xor
jg
push
push
inc
xchg
jle
imul
test
xchg
and
out
mov
cmc
lods
sub
pop
loop
pushf
cs
lods
ret
test
fisttpl
cld
cltd
dec
les
cmp
add
cmp
ret
fisttps
push
jecxz
insb
movsb
sbb
aam
cmc
dec
fsubs
jns
push
adc
add
xlat
cld
add
in
sti
xchg
mov
xchg
iret
jmp
mov
adc
stc
leave
sbb
add
notl
push
cmp
ss
push
rorl
subb
mov
jnp
cmp
mov
fnsave
iret
test
fistpl
lea
out
in
and
lods
mov
push
shrl
lods
add
jae
notl
pop
push
pop
ss
jecxz
outsl
insb
dec
stos
out
sbbb
inc
test
mov
sub
nop
mov
rorl
imul
jg
inc
push
bt
inc
enter
or
outsb
mov
clc
xlat
mov
sbbb
mov
push
xchg
mov
inc
in
lcall
loop
jbe
mov
rorl
mov
pop
or
cli
shll
inc
addl
outsl
dec
xor
jle
loop
je
loope
daa
fnstcw
in
dec
outsb
add
pop
push
cmp
shl
cmp
jmp
xor
testb
adc
adc
cwtl
sbb
dec
sbb
clc
sub
jmp
inc
add
mov
inc
mov
bound
push
jecxz
xchg
in
loopne
test
daa
aad
sbb
rcrl
fadds
stos
jg
sub
dec
nop
or
aaa
sub
add
andb
faddl
popa
jg
popa
xorl
clc
mov
ss
ds
negl
sarl
xor
repnz
push
std
jge
outsl
stc
imulb
lret
test
push
and
jns
pop
push
lea
lock
sub
mov
insl
push
pop
xor
lods
cmp
xor
adc
not
addr16
sbb
leave
hlt
xor
test
testb
push
cmp
xchg
and
push
push
pop
jae
fistps
stc
jle
xchg
out
xchg
xchg
aam
ret
or
or
cmp
dec
addr16
xchg
or
fistpll
pop
or
xchg
cmp
xchg
xor
test
cmpsl
mov
addr16
sbb
adc
cs
arpl
mov
enter
movsb
add
adcb
inc
dec
in
pop
fwait
ds
roll
xchg
or
push
xchg
push
fidivl
aas
sbb
dec
rcr
push
es
mov
dec
sub
and
and
sub
cli
fcoms
add
push
loopne
cmp
sub
rolb
cltd
mov
pop
in
mov
addr16
push
shll
fiadds
loopne
mov
push
jmp
sub
adc
mov
iret
inc
fwait
xor
popf
mov
add
invd
cmp
aad
addb
leave
mov
xchg
aad
icebp
push
xchg
adc
hlt
xchg
mov
sbb
cmp
jle
mov
loop
cs
and
lcall
xor
push
subb
out
sub
mov
cmc
arpl
popf
jne
dec
cmp
in
idivb
mulb
dec
test
cmp
sub
stos
call
xchg
insb
dec
add
inc
gs
out
insb
and
mov
lock
pushf
mov
push
js
subl
sbb
lahf
mov
lock
movsb
pop
pusha
mov
inc
pop
pusha
jns
ret
mov
ja
adc
xor
push
shlb
addr16
or
mov
or
add
or
xchg
fldt
aad
and
push
inc
iret
pop
mov
pop
outsl
mov
sub
out
out
mov
inc
xor
jecxz
push
movsb
in
aas
push
adc
dec
mov
stos
push
out
leave
data16
lock
rolb
xchg
xchg
push
sbb
xchg
mov
xchg
fwait
mov
sbb
and
mov
fistpl
test
push
rclb
push
or
add
xor
pop
mov
sbb
cld
sbb
mov
cmpsb
inc
pop
lahf
mov
xchg
test
mov
mov
push
insb
pop
pop
mov
fcompl
int
add
fwait
sbb
inc
lea
fisttps
fnsave
enter
cwtl
mov
xor
leave
push
push
andl
es
cmp
sbb
fistpl
adc
repnz
adc
das
ja
and
sub
stos
sbb
jbe
stos
int3
mov
cwtl
adc
add
mov
inc
pop
mov
mov
mov
sti
jp
add
sahf
mov
in
stc
in
pushw
pop
out
cs
jge
lret
push
pusha
imul
or
insl
lds
pop
negb
or
cs
pop
faddp
iret
fwait
adc
fwait
jo
push
dec
dec
mov
mov
xor
sub
ss
mov
jp
inc
cmp
and
ljmp
xor
rorb
out
sub
test
out
fimuls
test
dec
mov
aad
fst
lods
mov
dec
jmp
std
cmp
lods
mov
and
push
stos
add
fstpl
mov
bnd
stos
jge
rcr
pop
sbb
mov
push
mov
inc
add
mov
adc
arpl
adcl
ret
xchg
jp
jecxz
aad
dec
stc
cmc
mov
xor
fstps
hlt
incl
loopne
sbb
aaa
gs
push
xor
lods
ret
jmp
ljmp
sub
fisubl
dec
mov
pop
inc
fmuls
sub
inc
imul
insl
pop
mov
jo
dec
out
and
xchg
cwtl
mov
pop
sbb
inc
pop
add
xchg
and
popf
lcall
fdivs
dec
mov
adc
pop
ret
in
clc
add
cmpsb
mov
idivl
sub
fxch
mov
arpl
jl
mov
ret
rcr
mov
mov
mov
mov
fidivrs
notb
scas
dec
test
loopne
and
push
xchg
leave
out
push
out
insl
cmp
push
push
push
mov
push
sbb
mov
xor
fdivs
dec
pop
push
cmpsb
pusha
dec
popa
and
loope
leave
clc
ds
sbb
inc
movsb
fadd
jb
dec
push
pop
dec
fs
stos
aam
mov
adc
mov
or
sti
in
sahf
xchg
push
cld
jl
dec
dec
dec
sti
inc
in
lcall
inc
add
mulb
mov
shl
cmp
mov
or
jmp
imul
rcrl
cmp
inc
push
aad
stc
xor
xor
std
cmp
adc
sbb
and
xchg
mov
adc
lret
mov
push
sbb
mov
mov
and
movsl
rcl
lret
sbb
out
movsl
mov
mov
push
pop
in
mov
or
ror
sub
sbb
push
mov
add
sbb
sbb
jle
or
rorb
adc
sub
jno
aas
inc
sbb
les
adc
pop
clc
nop
shrl
jbe
adc
lahf
pop
push
mov
popf
rorl
mov
push
sbb
and
pop
scas
fdivl
pop
or
fidivrs
in
add
rcll
adc
push
popa
xor
add
in
testb
icebp
inc
cli
or
pop
jge
iret
mov
xchg
mov
cwtl
lds
ss
mov
add
fistl
idiv
cmp
orb
push
std
aaa
nop
jle
movsb
leave
das
cmc
jo
push
sbb
ficompl
jle
mov
pusha
adc
inc
fisttpll
cli
mov
and
add
push
aaa
les
repnz
repz
pop
adc
enter
loopne
test
lcall
sbb
push
je
push
lahf
xchg
mov
fidivrl
add
in
dec
mov
daa
xor
test
mov
nop
mov
aaa
add
dec
push
jmp
iret
leave
jl
test
inc
lock
movsl
stc
ds
cmc
out
das
imul
add
push
or
add
or
add
sbb
cltd
xchg
pcmpgtw
push
adc
mov
mov
hlt
std
dec
int3
ret
sbb
in
outsb
andb
lret
mov
mov
lcall
and
imul
cld
jne
pop
lret
repz
dec
add
jge
imul
std
adc
loop
push
popa
add
adc
popf
insb
dec
push
fwait
mov
fmull
xchg
popf
xchg
fdivl
repnz
hlt
mov
out
rcll
sub
cmp
jno
dec
adcb
inc
xchg
sub
pop
sbb
add
ficompl
stos
pop
cmpsl
pop
push
and
lret
lds
lock
xor
out
loopne
sbb
pop
xlat
xor
jecxz
xchg
xchg
jae
ficoms
scas
cmpsb
ficomps
pop
fisttpll
addr16
jge
ud0
pop
jl
mov
pop
gs
mov
mov
mov
mov
pusha
das
lea
push
movsb
cli
inc
fisttps
sbb
cmpsl
dec
out
sbb
lret
pop
sub
loopne
in
lods
mov
cmc
out
or
sub
lahf
fcomp
mov
roll
sar
cmp
mov
in
mov
and
push
mov
push
call
pop
idivl
fdivs
fidivrl
enter
nop
dec
sub
fidivrs
mov
stos
and
aam
push
xchg
outsl
xor
sub
cmp
mov
repz
dec
rcll
add
hlt
mov
les
jg
dec
or
dec
inc
add
pop
shlb
fsubs
filds
and
pop
cli
in
repz
nop
add
lea
lock
cmp
mov
sub
mov
add
cs
push
push
cmp
or
ljmp
sbb
lods
push
xchg
push
fadd
inc
popf
enter
loopne
inc
lods
mov
mov
jbe
push
push
dec
mov
leave
dec
cmp
andb
or
sbbb
add
pusha
iret
js
sub
adc
sbb
iret
add
pop
xor
out
ret
arpl
lcall
sbbb
cmp
push
mov
cmp
mov
xor
xchg
cmpsb
push
xor
xchg
adcb
js
insb
sub
pop
mov
iret
xchg
xor
push
cmp
pop
mov
mov
pushf
roll
xchg
fwait
add
cmp
fwait
outsl
sbb
insl
rclb
andb
xor
cltd
lahf
dec
xchg
shr
or
pop
xor
cmpl
and
and
scas
dec
lods
out
xchg
imul
mov
daa
and
repnz
adc
xor
and
add
fildl
ret
out
aam
or
insl
in
std
sub
xchg
cmp
sub
mov
pop
out
xor
clc
shr
test
rcll
jl
mulb
inc
ror
out
and
jp
fcom
sti
and
xchg
jmp
sub
test
jno
xor
stos
mov
outsl
cli
mov
outsb
mov
fs
xor
push
sbb
cwtl
push
mov
push
and
lret
mov
fsts
movb
fdiv
xor
test
lcall
push
sub
cs
sbb
jo
push
jecxz
das
imul
jo
xor
sub
push
sbb
sbbb
inc
test
adc
dec
mov
jne,pn
cmp
jl
outsl
addl
lea
hlt
jo
iret
add
cmp
inc
mov
mov
sbb
test
jmp
ds
inc
call
cld
mov
je
repz
repz
fsub
mov
or
les
stc
add
aaa
cmpl
mov
dec
movsb
inc
push
inc
int
cltd
cltd
ljmp
ss
stc
and
jl
cmpl
loope
fwait
pop
lock
fwait
xor
sti
adc
or
push
cmc
hlt
dec
sbb
imul
mov
fldcw
mov
popa
mov
jle
pop
arpl
outsb
and
loop
add
cmc
jne
push
adc
std
pop
jp
sbb
call
daa
mov
mov
stc
das
cs
out
cld
sbbb
and
and
xchg
xor
loopne
xor
jae
lcall
cld
lret
fwait
out
cwtl
scas
ret
es
cmp
stos
pop
or
fldenv
lods
sbb
add
les
cmp
das
push
mov
jne
leave
imul
mov
sbb
jbe
jns
cmp
es
loope
jae
xchg
pushf
stos
and
decl
dec
jl
call
out
and
jge
addr16
js
leave
and
dec
hlt
add
rcll
fisubl
divl
shll
adc
mov
fld
xchg
or
mov
mov
std
mov
add
mov
mov
pop
rorl
push
adc
and
push
pusha
stc
cmpb
adc
gs
jl
call
mov
xchg
mov
pusha
cmp
out
das
aam
jae
std
xchg
es
out
pop
xchg
loope
xor
adc
stos
in
in
int
mov
mov
jnp
in
cmp
pop
addr16
xchg
lret
arpl
xor
mov
push
movsl
cmp
pop
adc
xor
or
and
jne
imul
pusha
pop
pop
mov
scas
cmp
fidivs
stos
ja
adc
int
push
pop
fisubrl
inc
test
push
pop
pop
jo
pop
insb
jnp
dec
es
add
pop
dec
and
or
scas
xor
push
cmpl
jl
pop
mov
jmp
mov
dec
clc
test
sub
cli
stc
pusha
mov
lret
adc
rcr
jno
and
mov
call
xor
scas
xor
negl
stc
and
mov
push
dec
pop
inc
fdivr
sbb
pop
dec
adc
outsl
dec
jge
add
jbe
lcall
adc
inc
jmp
cwtl
pop
jo
adc
rol
out
pop
xchg
jmp
loope
inc
xor
mov
subl
pop
iret
fs
mov
pushaw
mov
cmp
fisttpll
test
icebp
pop
mov
adc
ja
int3
sub
lret
jp
adc
pop
mov
adc
je
imul
js
test
rcll
iret
xor
cs
adc
into
movsl
fcoms
iret
xchg
and
add
cmp
mov
test
mov
loopne
imul
ds
mov
js
ja
pusha
sub
test
push
jbe
mov
dec
adc
test
or
xor
push
and
jle
ret
cmp
jae
xorb
ud1
and
out
shr
push
mov
mov
fwait
or
xchg
scas
jge
pop
data16
adc
pop
xchg
fs
adc
add
and
xchg
dec
js
rclb
adc
xchg
inc
dec
xor
repnz
mull
fcoml
push
mov
cmp
sub
or
add
adc
bound
push
dec
or
movsl
cmp
pop
pop
mov
imul
out
loop
sub
push
mov
sbb
lods
jb
ja
push
out
lret
pop
sahf
stos
sbb
daa
pop
ljmp
mov
fs
jge
call
enter
cmp
and
es
stos
xchg
nop
pop
jge
adc
push
fwait
xchg
cmc
dec
movsl
dec
cmpsl
outsb
or
cmovbe
loope
inc
pop
loop
icebp
sub
icebp
dec
call
test
icebp
cmp
adc
sbb
sbb
cmc
dec
int
lock
arpl
in
pop
xchg
sub
arpl
into
mov
mov
pop
iret
sub
lahf
je
adc
push
xchg
mov
xchg
mov
inc
out
insl
fiadds
stos
jle
into
cmpsl
mov
xchg
sbb
add
adc
sbb
rcll
or
lret
fs
test
aam
mov
jecxz
mov
mov
or
dec
mov
push
popf
cli
add
int3
pushl
enter
pop
mov
ffree
out
rcll
cs
je
xchg
addl
scas
cmpsl
mov
leave
jnp
adc
adc
test
jge
push
arpl
sub
mov
es
enter
sub
lret
xchg
mov
mov
popf
mov
sub
cli
test
add
int3
mov
xchg
xor
xchg
cmpsl
mov
fcmovnbe
imul
mov
or
sbb
mov
aaa
inc
xor
xor
loope
pop
fdivrl
mov
out
jns
lret
movsl
sub
es
fwait
push
pop
adc
and
insb
sub
insb
lahf
lds
sahf
in
repnz
enter
cmpsl
xchg
mov
clc
and
cmp
and
or
in
jmp
inc
jb
pushf
gs
js
pusha
mov
pusha
ja
inc
pop
inc
xor
aaa
in
mov
xor
mov
lret
rclb
je
xchg
out
out
sub
popa
std
leave
bound
js
cs
cmp
push
pop
add
mov
pop
inc
dec
lods
dec
test
push
mov
pop
push
sbbb
call
pop
sbb
arpl
sub
jno
ss
pop
cs
xchg
ja
pop
fimull
xor
xchg
sbb
cmp
cwtl
ds
xor
add
and
or
loope
pop
int
xor
push
mov
fistps
jno
scas
aaa
push
outsl
test
jae
fldenv
cmpsl
shl
insb
ja
jmp
divl
insl
mov
movsl
dec
adc
jmp
mov
jae
out
dec
sahf
jle
jo
xchg
xchg
push
jno
clc
push
test
cmp
xchg
lret
popf
pop
jg
pop
sub
orl
inc
insb
lcall
pop
rorl
outsb
sbb
jecxz
sti
pop
es
sbb
adcb
sbb
add
jne
imul
outsb
xchg
lea
adc
or
pop
mov
and
sub
lock
or
mov
pop
mov
fs
ret
mov
push
push
jl
cmp
xchg
jge
cmovns
adc
fs
add
sub
daa
cmp
mov
movsb
mov
jo
xor
mov
xchg
adc
jg
lock
or
xor
test
xor
shll
rorl
fstpl
pop
or
lods
mov
fstpl
pusha
lret
in
in
pushf
push
sub
in
out
inc
in
leave
add
rcll
jno
out
push
test
cld
rcrb
cmp
push
jbe
out
daa
outsb
mul
lret
mov
sahf
icebp
stc
jp
push
adc
pop
dec
mov
mov
push
jnp
xchg
sti
pop
jl
gs
push
cmpl
mov
cld
sbb
int3
loopne
add
inc
xor
mov
push
sbb
addb
or
and
push
stc
dec
daa
cmpsl
push
add
mov
push
out
fidivs
sub
icebp
mov
push
cli
jl
btl
fadds
cmpb
adc
addr16
push
mov
movsl
shl
pop
fldenv
push
jl
push
adc
xor
mov
out
imul
adc
push
ds
dec
sti
lock
mov
adc
mov
scas
xchg
sub
mov
and
aaa
aad
int3
das
fisubl
mov
stc
mov
lds
mov
xchg
lods
mov
int
nop
stc
stos
into
sub
xor
bound
mov
pop
mov
or
pop
push
xor
xchg
sub
scas
add
xlat
push
xchg
andl
pop
pop
imul
cmpsb
ret
inc
xorb
and
mov
test
cs
inc
push
aas
aas
dec
insb
mov
std
inc
shrb
or
arpl
and
xor
push
andb
push
lcall
mov
pop
jno
test
popa
adc
jecxz
dec
mov
shrl
scas
sar
push
or
cmp
cmp
sbb
jg
enter
das
mov
lods
push
cs
adc
movsb
dec
aad
dec
push
roll
scas
and
ljmp
mov
fsubrs
fiaddl
movsb
cmp
outsl
dec
scas
pop
movsb
pop
push
loope
in
push
jmp
nop
sahf
jp
mov
ja
inc
gs
ja
inc
mov
test
out
nop
pop
and
or
jp
xchg
and
mov
adc
and
aad
or
rorb
mov
iret
push
xchg
fwait
jne
scas
fbld
mov
icebp
jecxz
mov
push
push
das
mov
sub
shl
outsb
aaa
jecxz
sbb
aas
das
sub
dec
leave
sub
shll
fwait
pop
call
popl
add
inc
and
repnz
jl
iret
in
ljmp
add
outsl
or
cmp
addb
rcr
mov
pop
ljmp
push
cs
sub
dec
test
inc
sti
jo
mov
int
push
xchg
xlat
icebp
lea
adc
imul
dec
dec
movsl
test
leave
xchg
stos
push
inc
mov
test
mov
lock
fldl
cmp
sbb
dec
mov
fsubrs
scas
mov
arpl
test
and
push
xor
pop
mov
push
and
or
sub
imul
es
loop
mov
push
lret
xor
int
mov
loopne
lret
cmp
push
shlb
jg
out
cmp
cld
mov
or
push
sub
std
testb
xor
rcl
mov
ret
gs
sbb
xor
out
or
aaa
push
push
pushf
lcall
lock
dec
push
cmc
ret
pushf
push
mov
mov
or
mov
mov
or
mov
js
lea
sub
lock
lock
insb
sub
pop
mov
lods
loope
mov
mov
je
mov
sub
insl
push
sub
ret
scas
inc
mov
xor
mov
push
cmp
bound
int
gs
pop
mov
dec
xor
lea
test
rcrb
inc
jge
inc
push
jle
notb
jns
mov
jp
lahf
mov
xor
jge
lahf
inc
fdivrp
data16
cltd
jb
in
xlat
lods
sbb
push
fdivrs
dec
adc
cli
leave
sub
lea
popa
mov
dec
cmc
cmp
test
insb
enter
out
sub
cmpsb
movsl
cli
stos
xlat
adc
and
js
dec
repnz
xlat
cmp
or
pop
hlt
pop
cld
or
push
mov
inc
out
lret
rcll
shrb
add
xor
shlb
mov
mov
jge
fmull
xchg
inc
and
shr
pop
sbb
push
outsl
fcmovu
sbb
sbb
hlt
sbb
push
and
cmpsl
cltd
pop
push
loopne
das
pop
mov
cmp
das
dec
adcl
in
xor
icebp
loop
mov
cs
call
call
out
mov
les
dec
add
push
test
stc
test
cmpsb
or
out
lea
jmp
push
pop
sub
ret
push
jo
idivb
pop
mov
leave
fucomp
mov
stos
iret
mov
push
mov
jae
mov
scas
sbb
sbb
pop
adc
push
int3
pop
lods
xor
add
hlt
add
ret
loopne
mov
ret
loop
dec
pop
shrl
sub
mull
in
add
aam
in
mov
cld
jle
popf
mov
push
fnstcw
out
call
dec
push
sbb
popa
adc
stc
mov
scas
xchg
push
daa
push
es
cwtl
sbb
jo
sahf
sbb
mov
fucompp
nop
sbb
mov
cmpsl
bnd
mov
add
or
mov
dec
and
dec
insb
xchg
cmc
scas
ret
pop
les
inc
mov
fdivrs
adc
mov
or
and
add
mov
sti
sahf
xchg
jle
mov
adc
sbb
sahf
inc
pop
lret
pop
inc
inc
xchg
jae
push
popa
lods
outsl
push
subb
pop
jl
mov
sbb
in
xor
xchg
insb
mov
xchg
loop
repnz
and
mov
in
and
fmull
inc
int
xchg
fisttps
xchg
inc
mov
ja
jae
adc
and
push
test
rolb
sbb
mov
push
pop
fdivl
repnz
rcll
fdivrl
fists
nop
das
bound
lds
jp
mov
mov
mov
and
xlat
inc
stos
mov
gs
testb
and
rorl
xchg
push
jne
mov
and
jae
jae
movsl
sbb
clc
popa
lods
imul
shlb
xchg
js
jle
dec
std
mov
rorb
in
out
cmp
in
popa
sub
dec
sti
fisubl
mov
imull
cbtw
sbb
outsl
push
mov
add
cmpl
sub
into
shll
xor
and
push
pop
xorl
cli
and
mov
or
leave
mov
fimuls
fwait
mov
jp
out
cmp
jae
xor
pusha
testb
mov
sub
addb
mov
sti
roll
mov
jae
sbb
fldcw
je
cmp
mov
int3
jp
sbb
dec
jnp
cmp
addr16
mov
dec
sti
mov
cmp
cmpsl
xchg
int3
pop
adc
fwait
into
xchg
divl
xor
or
push
inc
dec
loopne
mov
lea
jmp
xchg
push
xchg
xchg
call
lahf
jnp
mov
out
and
push
lods
mov
and
popa
cli
loopne
push
jnp
sub
roll
mov
inc
mov
popf
pop
jnp
in
push
sarb
sub
loop
icebp
mov
xchg
pop
cwtl
outsl
jg
shlb
and
mov
aad
outsl
sbb
jmp
push
idiv
popf
cvtps2pi
ret
loope
mov
inc
stc
enter
adcl
pop
push
jmp
mov
in
cwtl
push
inc
aaa
mov
ss
cmp
xorb
cltd
adc
popa
mov
add
xor
sub
les
out
jmp
and
dec
inc
xor
loop
loopne
cwtl
mov
insl
dec
stos
mov
and
push
loopne
jno
sub
sub
movsb
push
jle
and
shr
fdivrs
lret
xor
je
lods
adc
mov
cmp
and
dec
repz
imul
xchg
mov
jbe
mov
int3
cmp
jb
mov
cmp
mov
adc
jbe
aas
in
nop
or
fimuls
cwtl
mov
xor
lea
or
pop
ss
and
addr16
push
jp
pushf
in
pop
clc
inc
nop
pop
or
and
gs
pop
clc
or
xchg
shrl
mov
cmp
or
pusha
xchg
mov
lds
xor
pop
pop
ret
mov
sbb
sbb
aam
inc
or
push
inc
das
adc
enter
or
call
or
cmpsb
sarb
insb
push
js
daa
and
adc
dec
and
xor
nop
mov
inc
imul
mov
out
das
in
fs
inc
dec
mov
mov
mov
mov
lret
push
and
cmp
add
enter
in
mov
cmc
arpl
mov
or
pop
popa
mov
pop
out
mov
push
jns
or
push
sbb
xchg
pop
into
daa
popa
dec
aad
stos
push
xchg
push
inc
sbb
std
aaa
pop
movsl
push
mov
adc
cmp
lcall
jo
fucomip
mov
pop
jb
inc
mov
pop
rorb
mov
pop
es
sbbl
int3
out
ficompl
adc
cwtl
icebp
ret
mov
scas
addr16
pop
sbb
sbb
pushf
sub
push
adc
popa
or
adc
pop
xchg
adc
imul
adc
lret
in
insl
leave
add
inc
cld
adc
lahf
lahf
ds
std
loopne
push
mov
hlt
cld
outsb
cmpl
testb
lahf
stos
cmc
imul
icebp
jge
xlat
rcrl
lcall
sahf
dec
aas
cmpsl
es
mov
mov
xlat
sbb
aas
pusha
inc
jns
xor
sahf
daa
jo
fidivl
dec
add
mov
xchg
push
orb
jl
loop
lcall
into
pop
mov
inc
es
add
xchg
xchg
pop
pop
push
mov
pushf
fstl
pop
jb
pop
lret
mov
cli
jecxz
rcr
mov
push
es
mov
mov
sbb
mov
lret
xor
sub
pop
sub
ljmp
stos
leave
in
outsl
xchg
cwtl
outsb
incl
mov
sub
loopne
popa
add
mov
insl
or
add
movsb
ret
adcb
xchg
xor
sbb
stc
push
mov
cmp
mov
rolb
outsl
scas
ret
out
and
js
xor
dec
adc
add
or
push
jnp
add
test
fistps
int3
xacquire
mov
cmp
sbb
push
sbb
insb
addr16
divl
inc
fidivs
sbb
cld
stos
or
test
jno
add
popa
jecxz
bound
xchg
cmp
out
jmp
jne
ja
test
mov
and
int3
add
fists
dec
out
aad
jp
mov
dec
stos
adc
push
nop
cmp
shll
fadd
xchg
sub
stos
xor
adc
cmp
jno
bound
cmp
insl
mov
sub
mov
in
xchg
scas
jno
adc
popf
xorb
je
jmp
sub
or
fwait
push
out
shrb
subb
mov
sti
add
cmp
mov
std
jl
pop
lea
in
cmp
incl
idiv
call
jge
and
scas
mov
iret
enter
sub
sub
jne
jns
mov
into
cmpsl
neg
pop
pop
xchg
pushf
rcll
cwtl
subl
and
hlt
outsb
push
out
addl
addr16
popa
dec
or
lahf
adc
xor
mov
lcall
pop
pop
fistps
pop
cmp
stos
inc
xor
mov
loopne
xor
cmc
shrb
cmp
shl
in
xchg
in
std
lock
jecxz
push
call
push
roll
inc
push
sbb
jl
cli
aas
xchg
cmp
insl
aaa
mov
pop
loopne
sub
mov
jae
aam
lods
in
inc
mov
dec
push
repz
or
imul
iret
ss
push
rol
push
or
mov
daa
and
mov
mov
jmp
xchg
movsb
or
xor
lock
fcomi
cmp
pop
sbb
nop
xchg
mov
es
add
push
mov
xor
push
pop
jo
shll
in
sub
repnz
inc
pop
lahf
cli
nop
pop
jg
lretw
sub
sub
pop
or
test
movsl
std
lods
popf
add
fs
push
fldt
xor
loope
cli
int3
sbb
mov
icebp
push
mov
xor
add
sub
dec
push
inc
fsin
mov
ror
push
mov
jmp
inc
and
xchg
mov
out
cmp
ljmp
dec
iret
aam
subb
cmp
mov
fdivs
loopne
gs
xor
fcom
pop
mov
xchg
ljmp
add
add
push
mov
test
xchg
cltd
test
das
pandn
test
inc
mov
xchg
push
flds
ss
push
xchg
divb
mov
scas
negb
into
inc
enter
sub
mov
scas
fidivl
clc
jnp
jp
repnz
add
jne
ficoml
scas
sbb
out
arpl
stos
dec
fwait
inc
nop
int3
int
mov
js
loopne
dec
xchg
js
xor
mov
sbb
ficompl
push
mov
inc
xor
dec
and
pop
mov
mov
inc
sub
bound
and
dec
popa
aam
jecxz
call
adc
js
sbb
add
mov
gs
dec
stos
dec
xchg
popa
mov
pop
imul
lods
or
pop
cmp
lea
sbb
scas
xchg
jle
mov
pop
pop
cmp
ss
icebp
mov
enter
sub
lahf
push
lods
les
in
inc
or
or
insb
mov
jp
cltd
adc
push
or
adc
xor
decb
pusha
sub
cmp
mov
cmc
sbb
jp
jle
add
sbb
sbb
insb
testb
jne
pop
outsb
daa
push
mov
ss
dec
fimuls
das
mov
or
pop
add
cwtl
mov
rcr
inc
or
inc
inc
inc
dec
out
dec
imull
clc
mov
inc
outsl
cltd
xchg
popa
enter
test
xchg
icebp
mov
js
mov
add
data16
sbb
jns
cmpsb
mov
xor
pusha
dec
aaa
add
jb
movsl
xor
push
sbb
mov
lods
xchg
xchg
inc
sub
adc
call
pop
pop
and
cmp
inc
imul
pop
dec
inc
add
data16
or
xchg
icebp
pop
pop
xchg
lods
aam
mov
ror
insb
jle
lret
cli
cmp
push
pop
mov
pop
aaa
inc
filds
pop
xor
xor
enter
pop
scas
mov
orb
stos
mov
dec
fiaddl
mov
push
lods
lds
mov
scas
jg
aad
inc
imul
rcrl
mov
mov
mov
push
jmp
mov
fdivl
mov
icebp
cld
int
add
fmull
fldenv
mov
outsb
cmp
xlat
xor
outsb
cli
rclb
test
or
ja
inc
jle
and
out
dec
add
mov
jle
out
and
sub
sub
clc
or
mov
xlat
add
push
push
cmpsl
aaa
dec
or
lea
sbb
xchg
dec
sub
sti
mov
dec
dec
mov
xor
cmp
cmpsb
push
mov
out
mov
stos
mov
push
mov
mov
pop
fldl
roll
dec
xchg
adc
adc
pop
sbb
sub
and
stc
xchg
hlt
lret
jecxz
mov
xchg
lock
jno
xchg
pop
cmp
dec
dec
inc
push
pop
xor
push
ja
rolb
xchg
subl
ficoms
bound
icebp
jns
pop
cmp
adc
cs
inc
sub
imul
adc
lcall
lcall
mov
std
xchg
out
dec
xor
out
test
leave
daa
xchg
adc
sub
lods
and
xchg
in
mov
cwtl
addr16
mov
into
iret
movsl
call
pop
sub
inc
and
xchg
add
cmp
shrl
push
enter
in
pop
jg
mov
std
push
loope
fsubr
sub
andl
jmp
or
cmp
jo
mov
adc
cwtl
in
and
sub
ja
jl
or
and
and
adc
push
inc
test
loop
test
outsb
adc
xorl
mov
pop
imul
sub
shll
cmpl
rclb
cmpsb
mov
mov
data16
cmp
fimull
negb
lds
sti
and
mov
mov
pop
sbb
pop
mov
inc
mov
aaa
push
xchg
lcall
jo
in
ss
fldenv
shll
stc
pusha
jl
icebp
xor
mov
outsl
insl
dec
icebp
lea
mov
pop
iret
mov
and
mov
test
mov
ret
cmp
or
sub
xchg
pushf
aas
jnp
in
adc
imul
mov
xchg
les
inc
shrl
pusha
pop
int
inc
dec
sub
movsb
ficompl
xchg
loop
sbb
mov
mov
sahf
pop
dec
dec
insb
jb
es
subb
out
mov
xlat
std
jge
imul
test
cmp
fwait
jge
inc
adc
loope
cmpsb
xor
lret
ja
add
and
std
rorb
inc
cmp
sub
xlat
sbb
imul
and
lods
push
pop
out
test
in
push
dec
jp
jns
and
lock
mov
dec
imul
inc
bound
es
cmp
xchg
xchg
pop
pop
jno
leave
insl
test
mov
jmp
pop
cmp
addr16
insb
jae
dec
aas
lahf
dec
aad
mov
cmp
add
xor
push
and
inc
in
rcll
pop
in
cltd
cmp
xorb
sbb
stc
xor
inc
xor
mov
push
int
icebp
jg
adc
int3
xchg
cmp
xchg
xchg
push
loope
xchg
jmp
or
jno
adc
or
pop
push
aad
xchg
jns
sub
sub
sbbl
stos
mov
mov
pop
hlt
inc
sti
jle
rol
insb
sarb
sbb
scas
mov
in
cmpb
stc
or
sbb
jo
mov
gs
lods
fdivrs
mov
das
enter
jbe
ljmp
sub
out
insb
push
dec
xchg
je
adc
pusha
push
cmc
adc
mov
xchg
jnp
adc
sub
arpl
xor
ja
popf
mov
sub
lds
inc
add
cmp
sbb
pop
mov
in
lret
xchg
popa
inc
pop
clc
andl
hlt
jl,pn
mov
and
sbb
jno
dec
jae
js
sbb
jmp
pop
cmpb
jae
sub
call
mov
lret
push
push
out
xchg
dec
daa
leave
mov
loopne
or
and
and
sahf
mov
repz
fwait
or
js
cltd
aaa
outsb
cmp
insl
cli
fidivrl
mov
sbbb
rcrb
lods
mov
shrb
roll
iret
xchg
jp
push
imul
loop
push
std
hlt
fistpll
addr16
push
in
data16
pop
push
sbb
push
je
mov
inc
out
mov
xchg
ret
cwtl
in
fsubs
mov
cltd
pop
xor
and
push
in
fbstp
les
inc
lods
inc
add
pop
fcmovbe
xchg
sahf
mov
xchg
stos
lret
cmp
js
add
adc
andb
icebp
mov
xchg
ucomiss
sub
mov
adc
orb
jmp
mulb
dec
mov
fld
inc
imul
push
lock
mov
pusha
lods
lds
push
scas
fildll
cmp
add
repz
shll
cmp
jns
pop
xchg
push
sti
pop
push
popa
and
fidivrl
in
xor
or
push
js
or
xchg
jecxz
fsts
fsubrl
arpl
lea
mov
add
add
mov
test
fwait
dec
fdivrp
push
loope
jbe
fsubs
insb
lea
call
ds
dec
push
in
pushf
adc
sbb
mov
fstpt
leave
jbe,pt
mov
in
pop
add
xchg
xchg
adc
daa
aam
popf
test
mov
shl
das
loopne
mov
xchg
xchg
icebp
test
push
and
outsl
outsb
gs
or
xchg
adc
add
and
sbb
or
in
xorl
mov
arpl
lock
adc
mov
mov
imulb
pop
and
sbb
adc
imul
mov
add
jmp
fiadds
addb
cmp
mov
dec
daa
push
inc
cmpsb
les
hlt
or
pusha
xchg
lock
stos
repnz
pop
pushl
hlt
push
enter
lods
mov
pop
aam
jg
adc
xlat
pop
not
stos
and
sub
add
mov
mov
outsl
and
cwtl
stc
insl
lock
jne
xchg
leave
xor
es
add
xchg
sub
sub
ja
insl
pop
daa
lods
mov
mov
xchg
ds
push
or
call
nop
dec
jp
fsubp
nop
xor
test
push
in
fs
pop
les
adc
frstor
xor
loopne
mov
movsl
push
jl
cmp
out
jo
lahf
xor
lock
cltd
lahf
sbb
pop
add
std
mov
lods
or
mov
cmp
enter
push
dec
inc
inc
icebp
fs
movsl
cltd
sbb
shr
and
cltd
sti
dec
je
inc
inc
mov
dec
clc
psubusw
pop
int3
inc
rolb
jle
mov
sub
cmp
mov
sbb
mov
push
mov
mov
push
and
lods
jmp
inc
clc
sbb
test
leave
into
mov
add
orb
mov
xor
cld
das
add
add
and
xor
aam
lcall
loopne
mov
adc
push
sbb
out
mov
xlat
sub
adc
cmp
jb
and
and
xor
mov
arpl
in
mov
jge
cmp
lret
movsb
test
call
cwtl
mov
jl
inc
push
pushl
adc
int3
mov
pop
jge
inc
xor
decl
outsl
cmp
ficomps
xor
mov
inc
add
sbb
mov
sbb
jp
dec
xor
push
xchg
das
jb
mov
inc
insb
sbb
pop
ljmp
mov
scas
call
mov
cmp
cmp
int3
push
push
dec
push
arpl
sbb
pop
lret
fnstcw
movsl
fs
adc
or
dec
std
pop
jnp
lret
ja
orb
imul
or
adc
adc
add
jl
js
or
mov
loop
mov
in
sti
xchg
pushw
sub
or
fwait
loop
jnp
mov
ja
aam
sbb
sti
lret
mov
push
aad
mov
rorb
loope
cmpsb
adc
mov
xor
repnz
test
call
dec
out
xchg
adc
jecxz
cmc
je
and
jge
xor
adc
adc
jo
imul
sbb
repz
and
add
inc
cmc
clc
insl
pop
jbe
jmp
xchg
dec
call
sub
sbb
mov
sbb
push
push
rorl
std
fldl
jno
xchg
jp
aas
dec
pop
adc
mov
popa
aaa
xchg
xor
xlat
loop
xchg
xchg
xor
and
leave
adc
popa
in
push
aam
sti
jno
lods
fisubrl
inc
xor
in
into
subl
sbb
xchg
inc
cmpsl
push
shr
and
mov
add
shl
lock
mov
dec
add
pop
vaddsubps
lret
dec
outsl
dec
leave
pop
je
loopne
jle
int3
ljmp
sbb
addb
adc
push
cmp
int3
sub
adc
xor
js
dec
cmp
mov
and
out
or
loop
mov
and
sarb
popf
stc
lea
dec
fidivl
xor
cmp
mov
insb
clc
jbe
xor
mov
inc
enter
popf
lea
repz
test
adc
mov
mov
xor
out
sbb
jmp
jnp
push
mov
cli
jmp
pop
js
cmp
mov
fisubrs
xchg
in
mov
push
dec
popf
mov
lods
stc
lret
jb
push
jg
push
push
adc
in
repnz
cmpsb
and
mov
dec
push
das
push
out
das
mov
dec
cmp
dec
mov
sahf
test
pop
pop
scas
mov
xchg
sbb
loope
mov
lock
pop
mov
inc
or
mov
ficompl
mov
inc
jo
gs
pop
addr16
mov
lods
out
out
ds
sub
daa
sahf
jo
cmp
pop
push
cmp
imull
fdivrp
mov
and
je
inc
aas
sbb
movsb
add
lret
xchg
popf
inc
jo
sbb
arpl
outsl
adc
in
or
xor
jp
pushf
xor
mov
fldl
shlb
ss
or
push
jge
or
loope
and
pop
and
mov
dec
xor
stos
sbb
mov
das
cmp
pop
cmp
cmp
popa
clc
std
dec
jmp
cmp
sub
mov
js
jbe
in
adc
int
sbb
jp
movsb
popa
mov
insl
ljmp
ss
fdivrl
mov
addr16
clc
sbbl
sub
icebp
inc
xchg
pop
sbb
push
push
push
xor
and
popa
push
adc
imul
xchg
dec
mov
dec
mov
cmp
push
xor
push
push
lcall
sub
ret
iret
insb
cs
and
lcall
cltd
and
jg
imul
jmp
pop
xor
fmuls
mov
les
out
jp
push
popa
aad
adc
dec
iret
gs
pop
ds
sbb
and
mov
das
mov
es
push
inc
test
dec
scas
stos
jmp
outsl
cltd
addl
sub
sbb
pop
dec
rcrl
cmp
xor
xorl
inc
xchg
sub
cli
repz
xchg
rolb
sub
and
fadds
lods
jle
cmpsb
sbb
cmp
jb
lret
popa
mov
fldcw
xchg
lret
fldcw
mov
stos
ljmp
aam
cmpsl
jnp
fwait
test
aam
leave
lret
outsl
sahf
movl
inc
popa
ret
jmp
adc
mov
clc
fidivl
in
xor
fidivl
cmp
call
popl
ffreep
lahf
movsb
pop
adc
cmp
sbb
into
xchg
adcl
or
inc
cli
cwtl
add
cmpsb
js
push
pop
in
mov
pop
enter
sub
dec
mov
jle
lret
mov
pop
out
rolb
loope
rolb
dec
adc
mov
sub
jecxz
fnsave
aam
les
mov
jg
or
sub
pusha
cli
dec
add
sbbl
loope
lret
ret
scas
daa
int3
push
add
push
pop
daa
pop
xor
sub
loopne
dec
inc
inc
out
pop
movsl
or
jns
fsubs
and
movsl
enter
lahf
jb
fistpl
sbb
push
rcrl
push
ficomps
pushf
xchg
into
sub
mov
outsl
cmp
lock
inc
xchg
jnp
inc
inc
and
jae
fchs
dec
movsl
xor
inc
stos
js
mov
sub
mov
fnstsw
dec
inc
dec
arpl
pop
mov
fcoml
mov
cmp
xchg
mov
push
push
mov
add
cmp
jo
insl
xlat
cmp
cmpsl
test
cld
sub
add
leave
imul
aad
jb
mov
inc
sub
and
enter
jp
mov
mov
out
dec
scas
and
bound
in
clc
xchg
dec
jmp
fs
jl
test
lock
rolb
sbb
ds
imul
push
rcl
sbb
lods
aaa
shrl
aam
adc
leave
cltd
das
pop
add
sub
loope
and
dec
and
mov
sbbl
add
dec
test
in
push
xchg
xor
je
std
jno
mov
dec
ds
cmpsl
xchg
movsl
push
aas
inc
add
pusha
pop
fdivl
pop
xchg
pop
push
adc
jno
test
js
cli
lods
mov
in
and
ror
pop
ja
sbb
cmpb
js
mov
shll
ljmp
repz
mov
lret
push
push
fldenv
gs
mov
pop
sub
jb
ret
pop
inc
mov
pop
outsl
arpl
pop
das
inc
ret
jecxz
pop
lret
mov
push
adc
test
mov
jns
cld
loop
push
cmc
stos
scas
incb
adc
mov
movl
popf
cmp
je
stc
push
or
in
and
jle
fstpl
ret
lahf
gs
pop
adc
sub
sub
pop
mov
dec
icebp
mov
push
pop
ds
daa
jmp
xchg
shrl
test
ss
xchg
inc
lods
xor
jle
stc
scas
add
jg
iret
mov
cmp
ds
rclb
pop
lcall
call
dec
subb
test
movsb
xchg
mov
cmc
and
imul
xchg
mov
dec
mov
pop
lret
pop
mov
flds
pop
add
sbb
je
inc
xor
jg
adc
rclb
sbb
pop
sub
mov
or
push
mov
pop
jno
sahf
add
test
clc
add
fwait
mov
fs
ljmp
inc
and
int
in
rorb
xor
stc
adc
push
cmp
out
loop
iret
test
fiadds
in
cmp
dec
pop
inc
xchg
pop
int
mov
dec
or
jnp
les
push
lea
sbb
inc
jns
test
popf
fildl
push
or
mov
add
nop
insb
xchg
push
lcall
rolb
ret
xchg
push
mov
das
int3
pop
and
out
or
aaa
movsb
fstps
in
orl
push
cmp
jle
push
ret
mov
cmpsl
lods
mov
and
rcr
lods
vminsd
mov
aas
push
mov
or
xchg
and
outsb
push
loope
insl
pop
movsl
mov
outsb
jg
mov
out
sarl
xchg
roll
icebp
js
mov
xchg
jne
xchg
push
mov
pop
mov
sub
add
adc
jl
pop
jnp
sub
lods
pop
or
sub
ret
add
lahf
pop
adcl
add
xchg
sub
pop
cmpb
mov
xor
inc
lds
mov
out
adc
lret
popa
pop
je
and
sahf
dec
pop
xchg
dec
jge
and
shrb
dec
jno
stc
dec
icebp
cmpsl
ficomps
outsb
adc
add
test
test
lret
or
mov
inc
sbb
dec
push
cmpl
pusha
push
test
xchg
add
lods
popa
jmp
jg
pop
mov
jb
das
cmp
test
cmc
xor
jno
lea
xor
ljmp
push
jbe
cmp
in
push
fwait
cmp
or
mov
addr16
sahf
iret
lcall
pop
lock
ss
scas
add
mov
push
test
jb
mov
rcr
xchg
out
inc
or
fyl2xp1
lea
push
ja
out
mov
lcall
rcrb
nop
adc
ja
fs
adc
sub
call
pop
cltd
int3
push
fsubs
ljmp
insb
imul
fcoms
jb
mov
dec
fsubp
outsb
aaa
leave
out
jae
xchg
add
mov
lret
into
push
inc
inc
cmp
in
out
fisubl
mov
jp
or
pop
in
mov
sbb
inc
and
mov
mov
insl
dec
jne
jo
mov
add
cld
push
movsl
xchg
arpl
xor
aam
xchg
jmp
idivb
mov
cld
xor
jno
and
xchg
push
inc
and
xlat
xor
pop
jge
xor
in
lds
inc
aaa
cltd
js
inc
mov
out
adc
sti
mov
icebp
push
adc
jmp
into
xor
push
mov
pop
mov
movsl
mov
sub
cs
mov
xor
pop
andb
jl
or
inc
mov
sbb
xor
mov
mov
xchg
jle
ljmp
pop
pushf
push
icebp
popf
xchg
into
les
or
adc
fidivrs
push
pushf
cld
das
mov
adc
mov
jg
aam
cmp
mov
addr16
lret
or
in
pop
shll
je
or
mov
and
sub
dec
out
mov
or
mov
dec
pop
xchg
and
jb
and
and
sub
lods
into
cld
xchg
jge
fmull
mov
leave
xor
das
popa
xchg
popl
jmp
mov
add
loopne
dec
mov
jae
das
jle
popa
gs
mov
mov
fistps
addr16
fldt
cmovno
adc
dec
jno
outsl
std
loope
or
loop
xchg
dec
xchg
shll
xchg
mov
dec
and
jecxz
jbe
dec
and
adc
daa
xchg
faddl
xor
aam
dec
mov
cmp
insl
or
jecxz
pushf
push
mov
jb
jo
push
xor
leave
adc
dec
jp
enter
dec
push
jecxz
sbb
fmulp
xor
mov
pop
mov
in
roll
lds
shll
dec
mov
xchg
outsb
adc
pushl
movsl
je
xchg
mov
das
mov
test
inc
sarb
push
or
mov
jne
adc
mov
jbe
xor
pusha
adc
xor
cmp
fwait
inc
lcall
ficomps
and
sarl
das
and
lcall
inc
loop
sti
gs
and
into
jae
xor
imul
or
cltd
cmp
inc
push
adc
imul
les
mov
jne
mov
pop
idiv
nop
ljmp
aas
stos
jnp
scas
adc
cli
xchg
mov
dec
jno
or
pop
push
mov
push
xor
std
sbb
lahf
andb
xchg
lret
sub
push
aad
push
ljmp
les
xchg
lock
popl
fs
in
xchg
out
fsubrl
outsb
imul
out
mov
pop
cmp
bound
lods
mov
pop
and
test
movsl
shlb
mov
fmull
fdivs
loopne
int
jecxz
test
adc
xchg
shrb
push
loop
call
scas
add
fsubl
push
out
dec
xorb
loopne
mov
filds
cmp
mov
xor
enter
rorl
fisubs
bound
push
jmp
sbb
adc
lret
xchg
sub
cwtl
jmp
aam
pop
out
add
sub
imul
iret
jne
ror
mov
xchg
ret
addr16
or
and
arpl
arpl
aam
or
movsl
faddl
out
mov
into
mov
and
pop
cmp
out
pop
cmpsb
dec
mov
test
xchg
jnp
pop
sahf
arpl
sbb
xorl
sub
mov
out
cmp
mov
stos
mov
and
xor
out
negl
mov
inc
mov
mov
mov
stos
lret
xchg
and
mov
pop
push
cwtl
shll
out
jmp
inc
fnstenv
pusha
xor
dec
movsb
cmp
dec
es
cs
mov
adc
fisttpll
add
cmp
fiadds
mov
mov
repz
pop
jmp
mov
xor
sbb
sub
push
inc
bound
cmpsb
adcb
dec
repz
in
pop
sub
inc
xor
test
push
fisttpl
in
in
sbb
push
movsl
cmp
daa
icebp
cwtl
loop
icebp
std
std
jp
fs
cmc
ja
jecxz
enter
xchg
call
xlat
stos
push
mov
push
out
or
inc
push
adc
out
xor
add
add
push
fdivl
jle
cs
inc
pop
fsubrs
lods
jge
mov
addr16
hlt
jmp
repnz
lahf
push
shll
clc
iret
mov
jle
rcrb
adc
sbb
in
mov
movsl
aas
std
inc
in
lcall
inc
add
or
test
lcall
fcmovne
repnz
ja
inc
pushf
jo
rclb
adc
subb
stc
adc
sbb
xlat
push
and
movsb
fwait
or
push
stc
mov
notb
mov
mov
inc
push
aas
mov
ds
dec
push
inc
cmc
jne
ljmp
in
sahf
jge
dec
clc
and
mov
ret
lods
shl
in
shlb
sti
lods
cmp
mov
imul
insl
sbb
sbb
imull
mov
aam
lret
cwtl
fnstsw
pop
push
pop
mov
xor
shll
jmp
jp
push
mov
mov
dec
aad
xchg
stos
int3
inc
pop
dec
cld
imul
in
cmp
mov
aam
push
mov
ror
mov
hlt
mov
jge
mov
push
arpl
cld
mov
dec
mov
mov
push
imul
pop
popa
es
or
pop
stos
mov
or
add
jg
pop
lds
shl
and
add
shlb
sbbl
repz
popf
adc
negl
testb
aaa
mov
dec
lods
sub
test
jl
or
mov
lods
fmul
pop
inc
and
jge
xchg
or
ds
mov
xor
mov
mov
fildll
jl
sub
stos
or
sbb
into
or
and
addr16
mov
mov
jp
cmpb
int3
or
and
mov
jp
clc
and
lret
idivl
mov
outsb
fcompl
jmp
and
stc
xchg
iret
mov
xchg
mov
rep
out
shrl
call
rcrb
and
jl
pop
push
adcb
aad
dec
cmp
mov
jl
cmc
pop
pushf
in
mov
dec
mov
addr16
sub
mov
sub
sub
ss
or
mov
lret
adc
sub
xchg
lret
loop
ret
push
daa
pushf
push
stos
sbb
cli
push
xlat
sti
aas
insb
pop
out
cmp
mov
jp
push
shlb
push
sbb
mov
movsl
arpl
adc
dec
mov
mov
fwait
mov
insl
xchg
dec
cmp
adc
mov
scas
adc
insl
mov
mov
inc
pop
dec
cmpsb
mov
ljmp
fwait
xchg
cli
mov
adc
xorl
add
mov
cmp
pusha
imul
jne
fistpll
in
mov
cmp
lods
xchg
mov
pop
out
mov
fs
jnp
jb
lock
mov
xor
dec
xor
pop
lret
xlat
or
and
and
sub
popf
push
push
stos
jo
pop
sbb
jg
mov
xor
jo
and
aad
insb
sti
data16
jge
gs
or
inc
mov
mov
ja
int3
xor
push
shll
jbe
scas
sbb
clc
push
inc
sbb
or
dec
jp
fsubs
int3
gs
add
xor
add
out
push
mov
xchg
jo
repnz
addr16
ljmp
add
and
xchg
push
or
mov
rclb
ficoml
scas
sub
jmp
out
cmc
scas
aaa
dec
push
mov
pop
adcb
xlat
ja
repz
arpl
in
xchg
or
test
sbb
jle
cmp
push
outsb
dec
adc
popf
mov
clc
sbb
mov
adc
dec
pop
scas
mov
fiadds
fdivs
jns
movsb
pop
mov
idivl
lods
rcll
cmpsl
xor
rcll
jbe
jb
add
jbe
pusha
mov
filds
push
sub
repz
clc
or
pop
lods
mov
mov
sbb
jno
cmp
or
aad
xor
adc
loope
adc
pop
cmc
aas
pop
in
xchg
dec
pop
mov
cmp
pmullw
std
lret
xor
repnz
jbe
cmp
mov
bound
mov
loop
stos
lods
xchg
jge
jmp
push
lods
out
fs
push
cmpsl
dec
sahf
lea
js
pop
fcmovbe
mov
add
mov
xor
dec
xchg
mov
sub
dec
jo
jle
test
lods
int
ret
pop
andl
loopne
stc
scas
push
mov
fcmovb
mov
sub
ds
xchg
sub
mov
int
int
std
mov
hlt
inc
in
roll
mov
es
add
imul
or
gs
mov
cmovae
mov
stc
jne
pop
xchg
movsl
push
push
fs
xor
scas
jns
lahf
xor
push
adc
jmp
outsb
call
ss
test
xchg
out
cwtl
xchg
mov
fisubrl
dec
dec
lea
jne
aad
adc
insb
clc
push
out
ret
push
adc
popf
in
stc
jbe
repz
shll
cld
repnz
dec
test
push
mulb
cmp
cld
ja
jge
xor
loopne
adc
dec
popa
sbb
ss
insb
in
insb
ja
pop
mov
sub
inc
ret
push
es
cs
popaw
ret
mov
sbb
cs
pop
mov
ds
mov
lea
insl
in
sbb
or
in
hlt
push
aad
outsl
je
xor
cmp
sub
push
jbe
out
jp
jge
jge
incb
ds
push
inc
push
mov
data16
gs
cltd
sbb
or
lds
xlat
mov
sbb
outsl
repnz
xchg
mulb
pop
add
fimuls
dec
cmp
out
push
mov
cs
lret
add
and
or
sub
jg
jl
stos
xchg
sbb
rcrb
mov
sahf
out
pop
pop
mov
in
pop
movsl
sarl
mov
cltd
out
sub
cmp
cmp
and
lret
adc
aad
in
pop
fldl
repnz
sub
adc
out
and
loop
pop
dec
imulb
pushf
push
cmp
out
mov
aam
loope
mov
sbb
sbb
call
pop
xchg
inc
cmpsb
imul
sbb
xchg
inc
pop
mov
push
and
call
jmp
aad
cmp
adc
fs
and
xchg
sahf
sbb
movsb
pop
pop
xchg
daa
xchg
stos
xchg
add
dec
mov
xchg
xor
push
jno
sbb
icebp
xchg
sbb
cmp
inc
mov
adc
mov
loopne
inc
jbe
fildl
jnp
xlat
jb
loopne
jns
inc
aas
xchg
movsl
andb
jge
pop
xchg
mov
hlt
cmpsl
add
ret
inc
or
dec
inc
add
lea
lds
jnp
adc
or
mov
flds
sti
aam
fisttpl
ret
test
cmpl
lods
fsubr
push
sbb
cmpsb
arpl
cmpl
add
sub
pop
adc
lcall
rol
and
test
lret
imul
mov
scas
pop
or
mov
les
xchg
dec
hlt
sub
popa
pop
ja
adc
fldenv
xor
inc
dec
mov
jbe
imul
mov
imul
cmc
and
jmp
add
pop
dec
mov
sbb
ficoml
sub
xchg
jbe
lcall
dec
aam
movb
or
lods
mov
fstps
stos
and
movb
inc
xor
mov
mov
sbb
out
jns
cmp
outsb
les
scas
sub
dec
aam
cmp
push
push
xchg
mov
mov
nop
xor
mov
inc
cmpsl
div
jmp
lods
dec
xchg
lcall
andl
xchg
mov
inc
imul
inc
xchg
aas
dec
add
bnd
aad
fwait
pop
out
jp
mov
push
add
inc
std
add
adc
sbb
cld
mov
mov
xchg
pop
inc
enter
lods
and
outsb
cltd
or
jecxz
push
mov
lods
leave
sbb
fildl
jg
add
jp
jl
jp
sbb
or
sbb
add
sbbb
mov
jbe
push
or
fcmove
adc
out
clc
or
pop
sbb
movsl
shr
loope
out
pop
sbb
repz
dec
cli
add
dec
xor
stos
cmp
push
pop
adc
cmp
sub
jb
xor
jns
mov
out
insl
and
jmp
frstor
xchg
fpatan
mov
test
sub
mov
sub
mov
shll
xlat
push
movsb
mov
cltd
jae
add
subl
inc
cmp
into
loope
cli
repnz
in
inc
js
cmp
mov
or
mov
insl
inc
or
xchg
ret
jno
adc
jmp
or
scas
mov
cmc
sbb
add
mov
mov
pop
sbb
mov
outsb
mull
setg
xlat
out
mov
iret
fsub
dec
pop
or
mov
hlt
adc
in
roll
add
inc
xor
fdivl
add
xchg
aad
lcall
inc
mov
into
adc
fistps
into
mov
inc
mov
jmp
push
outsb
rcrl
jge
sub
sbb
xchg
push
lcall
outsl
add
pushf
lret
js
out
jae
sbb
adc
xor
dec
pop
inc
mov
or
mov
push
add
nop
pop
push
xchg
repz
addb
ret
xchg
cmp
dec
lock
cli
or
gs
imul
fdivrl
int3
je
fistpl
pop
dec
test
dec
push
jbe
adc
or
sub
xor
scas
icebp
mov
cmpb
out
ficomps
push
sub
negb
push
repnz
arpl
out
jle
fwait
cmp
loopne
test
fcmovb
push
xchg
iret
jmp
ficomps
enter
jo
add
stos
cltd
and
adc
sub
movsb
repz
popa
push
aaa
jle
or
iret
xchg
cmpb
addr16
mov
cmpsb
cmp
insb
and
cmpsb
cltd
ss
aaa
jmp
shrb
iret
loop
mov
push
stc
cwtl
sub
pusha
xor
or
push
adc
ja
sbb
push
popa
xchg
xchg
addl
lret
mov
mov
nop
lea
xor
xor
push
fsubl
negl
xchg
mov
leave
popa
push
jg
jg
in
arpl
aad
fwait
test
xchg
sarb
loopne
lea
roll
call
or
fwait
lcall
test
sub
mov
xor
add
and
add
and
mov
ja
jns
xchg
mov
sbb
xchg
mov
inc
or
jo
xchg
mov
insb
out
push
ds
shlb
push
lcall
popf
push
xor
inc
idivb
stc
mov
xchg
push
cmp
cmp
mov
aas
inc
cmp
mov
xor
push
arpl
scas
cmpsl
and
loopne
loopne
popa
outsl
stc
les
pop
insl
jmp
fs
sbb
sbb
out
imul
push
sub
test
and
add
fcmovnb
pop
sub
shlb
es
std
fadd
shrb
adc
and
or
mov
push
ret
push
mov
cmpsb
enter
xor
ret
add
daa
and
push
adc
in
jp
and
pop
sbb
loop
out
test
xchg
test
mov
add
cmp
adc
cmp
push
dec
push
test
pop
leave
jl
or
mov
lahf
adc
adc
jnp
les
insb
push
out
push
loop
cmp
sahf
sbb
fstp
orl
mov
cltd
push
push
adc
cltd
cmp
outsl
jno
push
mov
aad
rcl
sti
or
cmp
mov
jo
aad
push
adc
andb
in
fwait
sbb
pop
test
inc
cs
in
or
adc
adc
sbb
les
in
andb
into
into
add
push
pop
push
mov
jo
mov
ret
outsl
ljmp
or
jmp
mov
mov
fcmovbe
rcrb
fdivrs
cmpsb
adc
sub
sub
adc
sbbl
lods
xor
push
pop
push
fidivl
sbb
and
pop
insb
inc
pop
test
dec
mov
dec
in
pop
pop
div
femms
and
xlat
cmp
xchg
sbb
cmp
mov
mov
pop
sub
imul
fldcw
push
stos
sti
mov
or
mov
jo
pop
ret
lods
arpl
cmp
or
fisubrs
add
jo
std
loop
and
add
jne
add
sti
jae
or
aad
dec
cmpsl
mov
aad
sub
pusha
stos
pushf
mov
xchg
pop
pop
bsf
popa
repnz
push
xchg
inc
sbb
jl
popf
stos
sbb
aas
movsb
mov
push
and
and
inc
pop
pop
cwtl
push
je
out
inc
mov
popf
mov
fs
test
add
adc
mov
jbe
xor
cmc
fiaddl
and
or
jb
dec
ficoms
jle
jbe
sub
jns
jne
push
std
sbb
int3
sbb
lahf
sahf
mov
iret
xchg
mov
int
push
pslld
mov
fsub
movsb
sub
scas
and
mov
pop
add
cmp
loope
jp
pop
xchg
sub
or
mov
scas
add
imul
inc
aam
push
pop
cmpsb
mov
pop
mov
xlat
fists
shr
add
inc
pop
xor
mov
push
test
shll
das
lds
sub
clc
ljmp
sub
aam
inc
pop
popa
xor
mov
pop
ss
lret
push
js
dec
lods
clc
pop
xchg
sbb
hlt
jle
int
rcrl
jg
mov
push
repz
push
cmp
jne
sbb
ja
mov
ret
cmpsl
push
cld
push
addr16
popa
dec
in
pushf
add
lods
std
ret
sbb
xchg
xchg
mov
paddb
inc
dec
sahf
mov
push
decb
sub
mov
sbb
or
sti
xchg
rorl
lea
dec
ret
jg
cmpsl
bound
adc
mov
mov
shll
aas
sbb
cli
lock
inc
adc
xchg
pop
mov
fidivl
test
add
stos
mov
in
scas
sub
cmp
dec
lret
sub
mov
or
xorb
imul
addr16
dec
sysenter
mov
out
sti
jp
mov
movsl
mov
adcb
lahf
mov
sub
cmp
xchg
xchg
out
dec
mov
jo
movsb
jb
and
jge
mov
test
imul
rcll
es
jle
adc
mov
xlat
cmp
fdivrs
adc
xchg
xchg
fildll
test
sub
or
add
pop
bound
jmp
fcoml
and
aas
dec
cwtl
dec
sbb
stos
mov
sub
sub
and
aad
jns
jae
loope
jnp
call
pop
pop
fldl2t
pusha
push
addr16
inc
sbb
ja
jmp
mov
adc
decb
repz
ss
fbstp
and
testl
xor
mov
and
push
jb
test
loopne
lret
jge
jne
popa
stc
cmp
or
cld
mov
dec
in
xchg
jo
cmp
mov
pop
cmp
mov
add
adc
shrl
jne
pushf
lahf
adc
xchg
push
lods
ja
pop
subl
mov
pop
cld
bt
repnz
jmp
bound
cmc
gs
lahf
push
jg
adc
fisttpll
jle
es
hlt
movsl
jmp
cmp
dec
jmp
adc
adc
icebp
mov
mov
xor
adc
mov
mov
loop
fsub
add
mov
popf
push
arpl
sbb
ffreep
xlat
jns
pop
cmp
mov
or
cmpsl
sub
pop
outsb
stc
xor
adc
outsb
shlb
ja
or
fbld
dec
xchg
nop
xchg
push
xor
mov
leave
add
js
ljmp
xchg
xor
sub
pop
inc
mov
arpl
xor
jne
push
ret
fmulp
es
loopne
dec
mov
stos
jmp
xchg
push
sbb
loope
inc
fidivl
std
xor
adc
adcb
fs
xorb
aad
mov
inc
or
push
lea
and
lock
cmp
mov
cmp
cltd
mov
test
negl
movsb
and
jae
cld
loop
inc
iret
jmp
mov
mov
jmp
xor
es
in
movsl
pop
xchg
mov
rolb
jg
inc
mov
das
sbb
inc
mov
xchg
scas
loop
rcrb
fnstsw
pop
dec
xchg
mov
cmpsl
inc
adc
pop
xchg
pushf
ljmp
inc
adc
pop
xlat
jle
xor
popf
aaa
out
rorb
mov
ss
inc
outsl
push
or
inc
jno
or
faddl
and
adc
xor
cmpsb
popf
inc
xchg
cmpsl
xchg
addr16
int
imul
sbbl
xlat
push
sub
and
sbb
xchg
in
mov
cwtl
out
push
popa
cmp
mov
dec
out
hlt
mov
push
xor
fsubrl
fildl
dec
test
push
xor
bound
inc
rclb
je
jg
or
jl
leave
cmp
sbb
mov
jno
dec
push
jge
in
push
push
ljmp
stos
roll
pop
sbb
dec
jl
or
imul
push
xchg
mov
adc
cmp
cmp
pop
rcrl
fadds
inc
push
mov
jp
sahf
rorb
bound
mov
ljmp
jl
mov
fdivs
mov
xor
outsb
cwtl
lods
int
inc
adc
fisubl
int
pop
mov
mov
add
adc
adc
lahf
jmp
jo
cmp
xchg
or
jnp
push
adc
loope
das
mov
dec
mov
andl
in
mov
into
jg
xchg
cltd
repz
mov
rcr
arpl
inc
nop
loope
lret
lods
push
sbb
movsb
jns
push
popf
pop
pop
inc
lds
std
ret
incl
sbb
mov
test
test
xor
xchg
test
ljmp
xor
nop
sbb
inc
pop
shrb
aas
push
xchg
pop
pushf
xchg
les
imul
cmpsb
mov
iret
imul
out
stos
push
cmpps
addr16
movsb
int
scas
ret
dec
xchg
call
test
cmp
mov
dec
subb
pusha
jo
mov
push
aas
popa
icebp
scas
lahf
lret
mov
dec
push
jl
mov
inc
mov
cmp
std
xlat
movsl
inc
push
adc
pop
mov
loopne
jmp
sub
inc
dec
sub
cmp
push
push
pusha
popf
ret
pop
out
test
sbb
mov
sub
icebp
iret
lea
mov
sbb
cmp
cmp
push
jmp
adc
xchg
ja
loopne
pop
mov
and
rorl
cmpsl
xor
mov
mov
shll
xchg
out
pushf
jno
inc
lock
loopne
iret
inc
ret
jo
sbb
inc
and
leave
lret
ljmp
scas
mull
movsl
repnz
jge
std
push
jb
mov
mov
rcl
lods
adcl
or
lret
in
xlat
mov
push
mov
movsl
sbb
fisubrl
shll
orb
loopne
je
sbb
cwtl
xchg
ss
in
fdivr
shlb
cltd
cli
scas
aad
in
scas
int
ret
mov
mov
lret
iret
out
cmp
sti
fcomps
mov
mov
dec
mov
xchg
push
pop
dec
lods
lcall
fldt
dec
aad
int3
and
dec
enter
sub
iret
xchg
das
and
push
movsb
pusha
cmpsb
pop
dec
leave
call
jp
xchg
cmp
std
in
jg
cmp
xor
jl
push
shl
inc
loopne
mov
fs
pop
or
int3
call
xchg
sahf
fidivs
pop
mov
push
outsb
loope
mov
outsl
or
rep
sub
xor
push
int3
cld
or
or
lret
movsl
mov
sub
push
xchg
mov
sbbl
xor
insl
movsb
jns
jno
aad
jecxz
inc
es
cwtl
jb
and
jbe
fwait
or
sub
xor
and
subl
dec
xchg
aas
int
psubsb
sbb
and
movsl
push
sbb
loopne
push
ljmp
sbb
mov
or
movsb
or
pushf
out
into
test
repz
pop
sub
sahf
inc
stos
lds
leave
cmp
dec
sbb
movsl
mov
lea
mov
or
xchg
in
pop
insl
iret
mov
adc
ss
cld
out
imull
lods
sti
mov
or
add
inc
lea
cmpsl
push
inc
and
stos
pop
pop
mov
adcl
outsb
mov
imul
jle
sahf
jmp
mov
add
xor
adc
mov
jo
jmp
jecxz
clc
xchg
hlt
add
mov
cltd
adcl
clc
imul
mov
mov
xor
push
inc
fsubrs
pop
inc
dec
psubsb
out
mov
jecxz
iret
mov
shll
vpsrlw
adc
fcmovnbe
jg
loopne
fsub
fistpll
xor
stos
sub
iret
xor
decl
stc
pop
dec
xchg
add
aam
mov
pushf
xchg
rcl
das
xchg
mov
nop
lea
loopne
clc
ret
xor
lock
ja
push
inc
dec
pop
add
sub
repz
pop
xadd
pcmpeqb
push
mov
ret
mov
out
push
cmp
cmp
inc
mov
pushw
pop
jge
inc
mov
roll
xchg
pushf
dec
or
cld
test
mov
aad
aaa
imul
insl
xchg
mov
and
cld
rcll
mov
sbb
das
jmp
je
jecxz
mov
cmp
ret
jno
pop
cmpsb
scas
sub
roll
repnz
push
mov
add
aas
cwtl
xchg
test
lods
aam
and
stc
add
xchg
sub
fldl
mov
movsl
shrl
dec
cmc
or
adc
inc
cmp
cmp
adc
sub
cmp
pop
inc
add
jbe
jge
adc
cmp
int
jle
mov
mov
jecxz
inc
stos
push
mov
fs
mov
rclb
or
xchg
aas
mov
sub
cld
imul
mov
nop
nop
pushl
sbb
mov
dec
fmull
frstpm(287
xchg
inc
mov
pop
adc
pop
out
ja
sti
outsb
dec
mov
ja
mov
test
cmp
dec
jae
sbb
xor
sub
stc
fs
inc
add
shll
js
mov
shlb
and
into
add
jns
pop
test
addr16
fimull
lcall
cmpsb
cmp
and
xlat
sbb
push
sarl
mov
jmp
or
mov
inc
xchg
mov
cmp
arpl
in
mov
or
shrl
out
negb
pushf
pusha
jp
stos
fmuls
aas
push
mov
jbe
xchg
cmp
pop
je
ja
cwtl
sub
icebp
push
cmp
sbb
cli
dec
push
and
or
jecxz
mov
cmp
xchg
fstps
jns
daa
and
xor
fs
fs
stos
fiaddl
cmp
push
mov
mov
jb
or
mov
xchg
jle
inc
xchg
mov
sub
add
std
pop
cmp
sub
pusha
xchg
jg
mov
pushf
fdivl
push
jp
nop
mov
repnz
jb
pop
lret
push
xchg
fdiv
stos
lret
mov
xor
fs
jnp
scas
lods
xchg
push
pop
dec
stos
movnti
adc
out
sarl
jno
sbb
fisttps
in
ss
adc
lds
inc
sbb
loope
cmp
ss
dec
rclb
inc
sub
rol
ljmp
movsb
add
aaa
push
cmp
in
out
leave
jl
dec
jp
pop
pop
mov
aaa
cmpsb
add
jl
jmp
pop
sub
out
movsl
push
mov
add
inc
pop
out
cmp
xor
mov
mov
pop
or
lods
into
mov
gs
lds
dec
adc
mov
and
icebp
xchg
sbb
sbb
outsl
mov
in
sbb
or
fstps
xor
mov
cmp
cli
test
xlat
jecxz
ljmp
xchg
repz
jns
cwtl
xor
pop
xchg
push
mov
jns
cs
mov
fdivrl
cmpsl
cmp
daa
inc
add
jp
mov
adc
popf
lods
jne
jo
mov
aam
rorl
pop
mov
lahf
daa
in
adc
in
mov
hlt
pop
mov
or
dec
out
popa
cmpsb
or
xchg
jae
mov
in
or
lret
or
adc
into
add
mov
adc
jo
jne
xchg
pop
cwtl
shrl
push
adc
js
sarl
out
sbb
in
xlat
rorl
les
jg
inc
sub
mov
push
out
les
jnp
outsb
enter
add
push
mov
loop
cmp
mov
sub
into
jb
jp
icebp
xlat
or
out
bound
xchg
push
xchg
aam
mov
lcall
movsl
dec
pop
stos
inc
pop
or
xchg
pop
outsb
push
lds
dec
sub
adcl
cmp
cmp
mov
loop
xor
into
ds
push
sub
sbb
minps
mov
fistpl
cs
mov
xchg
push
sub
mull
mov
scas
pop
xchg
aaa
cwtl
loope
pushf
insl
iret
ret
movsl
iret
outsb
mov
lock
xor
cmp
pop
jns
ret
mov
xor
or
jge
cmpsl
mov
cwtl
lret
aaa
pop
sub
out
push
leave
fcompl
sbb
js
ljmp
mov
je
xchg
xor
or
sbb
in
jnp
xchg
cmp
loop
mov
jnp
dec
mov
xor
lods
imul
pop
stos
in
popf
sbb
inc
push
jb
mov
dec
xor
mov
je
or
xor
inc
jge
sbb
jmp
fidivrl
mov
hlt
jbe
stos
aas
jae
shrl
and
int
pop
pop
bnd
mov
sar
adcb
scas
pusha
inc
jp
mov
cmp
mov
imul
add
sbb
sub
and
sar
jle
jnp
loope
fldt
ljmp
sti
sub
daa
cs
push
int
adc
es
ds
sarb
and
pusha
sbb
enter
and
cmp
xor
xor
sti
xor
lahf
lahf
inc
rcrb
xor
mov
scas
add
in
cld
mov
and
rclb
daa
adc
push
dec
mov
adc
sub
shll
or
clc
push
pop
xor
sbb
jle
ja
mov
sub
mov
sbb
lahf
dec
dec
mov
vcvtss2sd
xchg
jp
sahf
jb
movsb
iret
ljmp
mov
sbb
jmp
sub
sti
lret
fwait
or
xchg
pop
cmpsb
sbb
cmp
and
mov
and
xor
push
aad
dec
out
and
jb
cmp
mov
loope
add
add
add
mov
flds
ret
cmp
shrd
push
std
mov
mov
lret
daa
nop
pushf
push
sbb
stos
mov
lahf
pop
pop
mov
inc
jmp
inc
push
arpl
pop
xchg
mov
mov
inc
es
imul
push
push
call
lds
xchg
fbld
sbb
push
mov
add
test
aam
ficoml
bnd
pop
ss
mov
fwait
push
adc
xor
inc
lret
lods
or
jnp
stc
push
push
jmp
push
test
cwtl
sub
loope
sbb
sub
pusha
add
jecxz
decl
or
dec
sbb
or
mov
mov
out
mov
and
sub
imul
adc
cld
or
pop
fisttpl
test
mov
sbb
fmull
or
aam
mov
cmp
push
shr
dec
pop
inc
lea
pop
lods
fucomi
fbstp
outsb
test
xor
iret
lds
jns
or
jo
sbb
pop
push
fstl
in
sbb
push
movsb
xchg
cmp
pop
sub
inc
pushf
push
sahf
nop
dec
icebp
hlt
mov
repnz
inc
in
mov
xor
out
xor
sahf
push
xor
bound
aaa
cltd
shlb
cmpsl
andb
lock
mov
ficomps
mov
jle
cltd
add
jne
and
mov
adc
xor
mov
and
arpl
ljmp
adc
push
jno
ret
nop
xlat
sub
out
adc
out
gs
xor
jge
hlt
mov
pop
sub
xor
inc
mov
push
sbb
aam
sti
adc
cmpsb
out
gs
iret
insb
arpl
inc
fsub
lcall
fcoml
out
insb
sbb
push
cmp
cmpsl
and
mov
out
sbb
push
or
popf
xor
out
out
addr16
or
mov
cmpsb
add
pop
filds
aad
roll
pusha
inc
xchg
push
je
pop
mov
in
test
pop
arpl
fstpl
mov
jnp
arpl
inc
xchg
pop
ljmp
aas
dec
test
sub
cmp
jmp
adc
int
and
scas
push
jno
mov
sbb
push
movsb
add
scas
xchg
or
loop
push
inc
sbb
push
sbb
lret
push
ret
adc
lahf
test
leave
or
hlt
xchg
cs
pop
ljmp
xor
jp
popf
mov
insl
xor
mov
shll
sub
xor
dec
or
xor
jno
inc
testb
jno
mov
adc
inc
jecxz
jno
inc
mov
and
pop
or
stos
mov
push
push
adc
negb
add
arpl
lret
inc
gs
push
std
movups
and
aaa
aas
in
mov
in
repnz
add
lods
fs
sahf
mov
pop
cmp
cltd
mov
or
fwait
xor
stos
mov
mov
cwtl
sub
push
push
imulb
mov
rcll
stos
dec
xor
mov
mov
jae
jbe
cmp
loopne
xchg
xor
lret
mov
ss
dec
in
inc
inc
jae
push
xor
cmp
int3
lahf
sbb
dec
mov
pop
out
in
rcll
test
call
xchg
pop
xlat
fstps
movsl
enter
xor
aad
jb
xchg
gs
jbe
jns
xchg
aaa
inc
jb
mov
int
dec
outsl
mov
sub
xor
repnz
push
add
lods
inc
ret
push
fcoml
fistpll
add
add
daa
and
es
add
lods
pop
addr16
jecxz
out
pop
or
pop
xchg
push
xor
jecxz
and
mov
jbe
mov
popa
aas
cltd
jno
push
out
and
inc
xor
jnp
cmpsb
popw
mov
mov
rcr
and
dec
jl
movsb
fdivrl
sti
and
ret
add
stos
ja
cmpsb
lds
sub
test
sub
dec
outsl
imul
in
enter
clc
jo,pn
adc
nop
into
add
stc
pop
cwtl
cmpsb
jg
imul
in
ror
jns
adc
aad
mov
and
scas
push
ret
scas
pusha
int
dec
adc
add
and
mov
in
fmul
xor
dec
add
add
sub
fincstp
sub
adc
mov
xchg
loope
cmp
mov
aaa
sub
test
test
popf
sub
pop
lods
cmp
mov
jmp
xor
leave
jb
jb
or
stos
xchg
ljmp
movsb
jg
shlb
fnstenv
jmp
dec
jbe
test
scas
add
scas
jne
mov
repnz
mov
push
mov
out
fmul
stos
test
pusha
push
push
insl
iret
in
adc
outsb
mov
xor
out
add
ffreep
std
sbb
out
lahf
js
dec
sti
loopne
sbb
sub
push
push
in
ja
sub
mov
cmp
ret
mov
dec
int3
or
fwait
pop
int
jecxz
lea
popf
movsl
jl
xor
lods
and
dec
inc
pusha
icebp
cld
std
jne
in
jbe
rcll
rolb
push
fwait
movsl
push
push
imul
add
sub
cmc
ja
jecxz
popf
add
pop
fcmove
push
or
aas
scas
xorl
inc
ret
imul
adc
test
lret
sub
out
inc
test
sub
mov
mov
jmp
pop
outsb
mov
fdivr
insl
cmp
mov
in
in
lret
lods
fwait
movsb
push
scas
jne
adc
mov
fldcw
jb
inc
cmp
lds
repnz
lock
aad
out
ja
pushf
movsb
icebp
sahf
sub
mov
push
test
push
add
inc
cmp
cmc
pop
fwait
sbbb
aad
pop
popf
test
pop
insl
fstps
dec
xchg
and
pop
push
xchg
out
fistps
ror
mov
popa
sbb
leave
daa
repnz
sub
fiadds
clc
mov
fisubrs
call
inc
sbb
bnd
lods
das
jns
mov
dec
push
idivb
sbb
ret
repz
mov
adc
adc
jns
inc
int3
or
cld
and
pop
and
loope
fildl
sbb
and
daa
orl
lds
and
mov
call
test
lahf
xor
lret
fs
xor
leave
jbe
inc
push
nop
pop
push
fsubl
sahf
imul
shlb
fistpl
cmpsb
call
xlat
push
and
aad
add
mov
or
sub
mov
shrb
and
fildl
outsb
icebp
pusha
lcall
mov
push
xchg
sbb
test
inc
jmp
add
add
cmpb
jb
in
push
mov
lock
insl
mov
arpl
into
gs
ljmp
pop
jns
fs
sbb
adc
mov
and
sub
cmp
mov
jp
inc
pop
int
lret
test
fistpll
jl
pop
push
inc
lahf
stos
push
pusha
mov
outsl
cmpsl
xchg
ja
cltd
or
repnz
out
test
div
fwait
pop
inc
xchg
or
mov
push
dec
jnp
pusha
pop
out
inc
or
inc
pop
out
test
lea
push
cld
mov
and
fnstsw
repz
insb
push
or
decb
decb
or
ret
xchg
pusha
rcl
clc
cmpsl
pop
inc
sub
push
push
mov
mov
test
bound
xlat
outsb
cmp
pop
mov
jp
jmp
jmp
mov
aad
pop
sub
mov
jb
add
and
inc
outsl
add
fs
out
jb
pop
jbe
jne
clc
iret
mov
xchg
push
pushf
cvtdq2ps
roll
pop
and
sub
mov
daa
dec
mov
les
xchg
ljmp
jg
inc
sti
push
in
pop
in
repz
aam
inc
popl
addr16
xlat
jp
mov
and
outsl
inc
daa
sub
cmpsb
jnp
jg
lahf
cmpsb
shll
imul
hlt
add
imul
out
push
shll
and
adc
xor
cmp
in
push
sub
dec
nop
and
add
pop
and
sub
mov
pusha
adc
mov
jge
out
pusha
clc
rclb
fiadds
xchg
dec
mov
movsb
push
arpl
xor
ret
sbb
inc
ret
lods
loop
cltd
shrl
mov
sub
imul
push
mov
cli
inc
add
pop
enter
jmp
ret
gs
sub
stc
cmc
out
jnp
lret
xchg
cwtl
enter
xor
xchg
dec
jmp
mov
mov
xlat
dec
mov
js
in
outsb
push
repz
pushf
inc
cmp
add
mov
dec
sbb
lcall
and
or
movsb
pop
ss
stc
pop
imul
sbb
xchg
jmp
xor
inc
movsl
lret
sub
hlt
sub
cld
pop
data16
xchg
daa
scas
out
sbb
sbb
ret
inc
jae
aad
insb
dec
push
leave
and
dec
inc
push
xor
mov
or
inc
adc
dec
lret
jns
push
movsl
flds
inc
mov
inc
xor
fisubl
mov
dec
push
lds
push
jo
test
and
or
xchg
out
cmp
out
jmp
pop
cld
adc
mov
sub
jns
dec
aaa
andl
xor
enter
ret
dec
fistl
clc
int
mov
out
gs
xor
mov
roll
sarl
test
sbb
out
xchg
movsl
mov
ret
popf
xchg
and
test
mov
cwtl
cmpl
fists
push
imul
and
and
add
mov
dec
dec
or
fdivrl
subl
out
push
pop
jle
push
or
pop
ret
add
lods
mov
push
pop
xchg
and
mov
cmp
aaa
mov
sub
mov
mov
mov
stos
testl
mov
push
jo
jmp
shl
or
imul
inc
fcomip
sahf
push
mov
movsb
shl
subl
cmp
add
imul
jnp
fdivr
dec
add
fwait
inc
dec
xor
out
pop
subb
jmp
lds
add
dec
jae
and
inc
push
fmuls
mov
dec
test
mov
cltd
iret
fwait
xor
scas
cmp
sahf
js
cmpxchg
xchg
mov
lret
mov
push
or
rclb
loope
aad
test
adc
in
sbb
sbb
scas
and
mov
sbb
jae
imul
scas
pusha
out
mov
sti
imul
cwtl
idivl
rcrl
ss
inc
xor
mov
js
iret
xlat
in
mov
xlat
pop
cmpl
and
test
xor
dec
test
add
push
mov
add
pushf
jno
or
repnz
mov
jge
roll
loopne
sbb
arpl
or
jge
fists
push
rol
xor
fstl
push
adc
shll
mov
and
sub
add
pop
mov
jp
and
pop
mov
js
or
push
inc
mov
lret
inc
xchg
push
pushf
inc
or
cmpsl
jns
lret
int3
imul
lahf
daa
xlat
mov
jecxz
push
xchg
add
push
add
scas
ss
jo
mov
dec
and
cmp
ret
cmp
insb
jae
push
nop
add
sarl
out
int3
scas
xchg
mov
pop
fistpl
push
xor
pop
cwtl
mov
add
xchg
adc
repnz
jle
inc
sub
sbb
sub
xchg
jae
mov
cltd
loopne
scas
xchg
pop
les
cmp
test
jb
mov
cmp
push
pop
scas
jae
xchg
fcmove
push
rcrl
pop
push
cwtl
icebp
addl
es
je
ret
sub
pop
fiadds
icebp
inc
dec
mov
daa
dec
cli
scas
mov
sub
jae
gs
or
mov
add
jae
pop
mov
mov
loop
iret
and
sbb
adc
inc
mov
cwtl
jmp
add
fwait
insl
add
cs
inc
mov
xchg
mov
jecxz
dec
mov
push
shlb
daa
stos
pop
jl
push
lahf
and
repz
outsl
rcll
jae
push
add
mov
or
dec
testb
cmpl
mov
pop
pushl
cmp
xchg
cmpsb
js
mov
fists
adc
lods
int3
jle
ret
popf
lods
stos
cmp
lods
mov
xor
cwtl
pop
test
push
or
xchg
inc
popa
jno
rorb
imul
decl
ds
pop
ss
pop
jl
das
mov
fisttpll
fmull
cmp
adc
or
mov
pop
dec
push
rolb
sbb
sbb
jae
stc
inc
fsts
push
xor
repnz
std
cmc
outsb
iret
sbb
push
or
push
gs
mov
pop
int
mov
fiadds
aas
dec
sbb
int
push
dec
xchg
aaa
shrb
outsl
pushf
in
pop
repnz
mov
testb
mov
lcall
push
pusha
dec
adc
inc
orb
test
in
out
test
dec
jle
adc
pop
shl
jno
cmp
orl
dec
jl
sbb
jnp
inc
mov
rorl
and
inc
mov
dec
repz
std
sbb
sbb
popl
or
mov
call
jecxz
mov
mov
sbb
and
icebp
fisubl
add
mov
cmp
ljmp
fdivl
mov
cmp
int
not
addr16
cmp
loope
jbe
sub
popa
or
clc
mov
sub
js
dec
jno
mov
lods
test
std
test
fisttps
push
ja
movsw
clc
add
pushf
pop
jbe
or
das
pop
mov
test
lret
out
jne
and
int
popa
jb
ficoms
adc
fdivs
fists
push
test
test
dec
jne
repnz
les
adc
out
ds
or
enter
pusha
cmp
ret
inc
aaa
inc
mov
fstps
adc
nop
dec
inc
fidivs
lods
push
mov
fisttpl
adc
pop
add
and
lock
cmpsl
stos
es
adc
mov
xorl
jns
sub
push
iret
push
shrl
sbb
pop
int3
push
push
pop
push
mov
call
in
out
stos
jb
add
cmp
dec
rolb
inc
fistl
pop
jmp
imul
fisubs
push
fisubrs
xchg
lcall
push
dec
cmpsb
je
mov
adc
and
xchg
bound
push
pop
mov
ja
xor
dec
cmpsb
repz
arpl
adc
imul
cmp
adc
clc
rolb
stos
xchg
loopne
inc
lods
xchg
xor
inc
or
test
xor
fcompl
and
add
test
mov
pop
pop
cmpsl
call
ja
in
insb
shlb
insb
jo
mov
mov
jp
jl
divl
xlat
lods
jecxz
inc
mov
aaa
push
lock
adc
sbbl
fsubp
dec
cmp
sbb
xor
sub
mov
pop
popf
call
in
inc
adc
cs
xchg
das
xor
xchg
sub
call
cld
xor
dec
nop
xor
dec
dec
aas
push
fwait
jmp
pop
ret
mov
cltd
sbb
pushf
push
test
icebp
pop
jmp
add
mov
jle
xchg
bound
mov
repz
mov
test
repz
andl
movsb
add
jns
mov
mov
xlat
gs
jg
mov
mov
scas
push
add
jecxz
das
or
mov
loop
jecxz
inc
and
xor
or
lock
aad
aaa
and
dec
or
mov
fwait
scas
push
add
adc
daa
repnz
lret
movsl
dec
sub
push
mov
fsubrs
pop
lds
stc
inc
cmpsl
enter
cvtpi2ps
push
jno
ds
xchg
add
iret
js
push
fs
mov
add
imul
pop
out
scas
popa
mov
dec
and
stc
push
icebp
xchg
in
cwtl
shlb
mov
dec
lods
dec
movsb
push
out
mov
lods
sbb
sbb
mov
fidivs
unpckhps
int
mov
and
movsb
aaa
inc
xor
stos
push
lods
call
lods
and
xchg
pop
fdivrl
test
ret
test
xor
adc
pop
or
gs
adc
add
xlat
subb
add
or
test
xchg
lock
inc
int3
enter
pop
cmp
add
jno
in
and
push
fbstp
cmc
xor
fnstenv
stos
int
jns
sub
jno
add
jbe
mov
jnp
push
divb
push
enter
pop
add
push
inc
addl
adc
repz
aaa
lcall
dec
xchg
dec
pop
jae
popf
hlt
sbbb
mov
mov
dec
push
sub
leave
mov
add
rol
notb
dec
cmp
pushf
mov
sahf
loope
iret
mov
loop
jmp
jns
jmp
inc
cmc
les
inc
pusha
jno
adc
sub
xchg
xchg
jmp
decb
cli
ss
out
loop
insl
cmc
push
stos
loop
adc
adc
inc
lea
mov
and
mov
rolb
jle
sti
inc
notl
movsb
sub
add
inc
andb
arpl
enter
cmp
xchg
mov
sbb
dec
jmp
and
inc
and
mov
pop
das
sub
lret
mov
in
loope
mov
ljmp
insl
xchg
or
xchg
mov
loopne
mov
gs
andl
mov
xchg
mov
and
xchg
push
cli
xor
add
mov
dec
fisubrl
jo
mov
mov
adc
fsts
out
cmp
inc
jg
in
cli
or
push
xchg
xchg
xor
mov
mov
push
inc
mov
cmp
cld
shrl
imulb
jmp
out
cmp
cwtl
andb
xchg
add
jae
addr16
add
sti
sub
xor
and
rcll
rcrb
cli
popa
insb
dec
xor
repnz
scas
jne
cli
ja
cmp
and
jne
xor
push
pop
jnp
shlb
mov
fnsave
mov
add
push
sbb
shrb
mov
shll
js
les
jae
sahf
pop
stos
rcrl
jge
jle
mov
pop
mov
insb
stos
adc
dec
daa
sub
fwait
mov
jno
mov
lods
sub
sub
push
pop
jl
and
test
cli
xor
outsl
push
mov
mov
cmp
mov
sub
pop
clc
mov
xor
pop
jmp
arpl
xchg
and
or
mov
fwait
pop
in
inc
in
sub
outsb
mov
scas
ret
mov
sbb
fisubrl
mov
jecxz
or
stc
pop
xorl
pop
sub
shl
test
mov
mov
mov
stos
push
push
je
push
addr16
push
out
aam
test
dec
mov
lods
sub
push
es
icebp
ret
add
mov
stc
movsb
xor
pop
inc
stc
xor
mov
push
cwtl
shrl
xchg
xor
int3
fldt
outsb
add
dec
roll
xchg
or
jno
pop
sub
xchg
xchg
ret
pusha
jb
sub
push
cmpsb
lcall
adc
sub
jmp
ds
mov
sub
cltd
pop
and
sarl
and
cli
or
sub
mov
outsl
rcrl
mov
pop
dec
outsb
in
jne
push
test
xor
test
and
stos
xchg
jne
mov
stos
mov
inc
mov
rolb
jno
sub
mov
xor
jg
xchg
fnstcw
inc
pop
mov
xor
daa
fistpl
ret
in
arpl
adc
sahf
pop
mov
sub
ljmp
lods
imul
cmpsl
js
pop
cwtl
leave
jne
xor
mov
xchg
dec
push
inc
and
loopne
pop
push
out
sbb
jae
lcall
stos
cmpsb
mov
cmp
into
jbe
inc
decl
adc
xor
mov
mov
or
pop
fcomps
insl
jl
jp
js
in
mov
pop
ljmp
clc
clc
ret
mov
push
ret
pop
mov
lock
call
out
mov
sub
add
sub
mov
or
bound
mov
outsl
es
add
push
jnp
scas
jl
fcoml
adc
and
sbb
mov
out
jnp
push
je
aad
pop
cmp
push
hlt
push
and
and
add
lcall
stc
pushf
xchg
out
ret
lss
std
push
push
arpl
and
scas
mov
mov
sti
jne
je
out
paddq
dec
push
lahf
sub
pop
xlat
popa
xlat
scas
or
xor
mov
xchg
pusha
inc
cld
xlat
push
cmpsl
lret
mov
push
xchg
repnz
test
add
sbb
dec
mov
mov
jno
pushl
push
cwtl
mov
push
fidivrs
into
incb
add
xor
sbb
push
or
mov
rcrb
mov
jne
push
lods
dec
popa
add
mov
mov
mov
sbb
mov
orl
ficompl
aas
fsub
aaa
scas
stos
sub
mov
stos
pop
test
or
scas
out
pop
inc
cltd
cltd
popa
xor
sbb
xchg
das
xor
lahf
outsl
nop
inc
aam
sub
sub
aaa
jl
and
cmpsb
fwait
enter
test
rcrl
or
jo
negb
aam
mov
dec
std
cmp
jb
jecxz
xchg
jns
or
lahf
xor
mov
mov
sbbl
roll
and
push
sub
add
pop
dec
js
in
rorl
fsts
mov
jno
inc
test
dec
aam
sbb
or
adc
xor
or
dec
out
push
cld
sti
rolb
xchg
push
cmpsb
movsl
ljmp
sbb
mov
inc
add
inc
dec
pop
stos
ds
sbb
das
inc
out
xor
xor
xchg
repz
mov
lcall
xor
gs
stc
jbe
jecxz
stos
jae
pop
popa
fcomps
cmp
cld
push
xchg
out
ss
rclb
jb
xchg
out
imul
mov
push
inc
jl
pop
xchg
xchg
dec
jne
mov
ja
pop
sbb
cli
mov
je
cs
mov
mov
les
cmp
sub
sbb
insb
divl
pusha
das
insb
push
rcr
notl
mov
mov
outsb
in
imul
push
pop
cmp
aam
cmpsb
pop
dec
sbbl
dec
fistps
cmp
xlat
movsb
sahf
add
test
cmpsl
fcoml
jnp
mov
and
lods
js
jnp
add
sub
mov
xor
fwait
out
and
inc
fs
in
pop
cld
lods
repz
lods
cmp
mov
push
sarb
or
aaa
xchg
add
push
jno
mov
inc
sarb
xlat
push
iret
js
add
and
hlt
scas
std
ret
mov
testb
pop
xchg
test
xchg
andb
mov
mov
mov
fwait
call
adc
sti
es
in
xchg
cmpsl
imul
cmp
inc
adc
pop
les
fnstsw
add
xchg
or
les
leave
pop
es
data16
adc
imul
daa
loopne
rolb
and
out
and
mov
jb
pusha
push
xchg
gs
cmp
loop
adc
dec
inc
sub
mov
jb
xchg
xor
xor
push
inc
cmc
jnp
shll
xchg
pop
jo
jbe
ret
loope
test
into
lcall
push
mov
or
fcoml
jb
xor
scas
roll
scas
imul
push
ja
mov
xchg
call
add
fcmovnu
push
xchg
in
mov
mov
idivb
cmpsb
in
bound
xchg
pushf
fs
sub
repz
cs
or
pop
test
daa
ja
sbb
loope
jl
and
pop
or
dec
cltd
sbb
outsb
sub
sub
mov
sarl
lods
clc
scas
push
jle,pn
jns
pop
lret
lds
mov
mov
aaa
pusha
cwtl
dec
jl
int3
aaa
arpl
mov
cmpsl
imul
fisubrl
add
loop
lret
mov
je
xchg
and
sbb
hlt
mov
dec
pop
pop
cmpsl
cmpsb
jns
mov
fmul
daa
out
pushf
mov
stc
aam
in
xor
insb
push
lds
imul
ret
sbb
ss
daa
sahf
fisubrl
and
shr
test
mov
mov
add
scas
mov
push
mov
lods
dec
inc
pop
mov
xor
cmpl
repnz
jnp
mov
ds
imul
xchg
aaa
data16
negl
pop
xchg
ficoms
dec
and
or
call
shlb
sbb
sbb
lea
stc
mov
divb
mov
mov
lods
jmp
fldt
or
ret
sbb
packuswb
into
sbb
or
pop
or
aas
xor
pop
jge
lahf
enter
mov
mov
pop
mov
arpl
aam
cs
shlb
mov
imul
clc
mov
pop
mov
add
inc
scas
imul
repnz
push
cmpsl
stc
xor
inc
pop
xor
ret
mov
mov
test
mov
pop
jne
std
or
pop
mov
pop
mov
xor
sbb
adc
data16
decb
cmp
je
out
insl
stos
subb
mov
cmc
pop
shrl
sub
jl
xor
or
sahf
fwait
adc
insb
jnp
pop
int
je
test
pushl
sub
dec
cmp
push
ljmp
xchg
pop
cmpb
icebp
add
pop
dec
xchg
pop
clc
shll
lods
je
push
push
inc
outsl
cmpsb
push
sbb
mov
xor
mov
loop
xchg
jo
add
sbb
sarb
cwtl
cmp
sbbb
sub
std
xchg
pop
dec
dec
mov
ja
push
cmp
adc
and
inc
push
mov
jg
or
xchg
jl
mov
cmp
jg
xchg
sbb
inc
dec
dec
mov
inc
add
xchg
inc
mov
sub
mov
push
inc
sub
clc
scas
int
and
jo,pt
test
test
addb
hlt
fmul
inc
leave
movl
mov
mov
inc
adc
mov
aad
inc
shr
mov
notb
data16
mov
push
inc
scas
sbb
xchg
into
sub
loope
push
push
mov
pop
std
push
stos
sbb
test
push
fmuls
imul
push
in
std
sbb
stc
or
jge
sub
fs
movsl
rcrl
jmp
dec
lret
ret
or
arpl
or
mov
lahf
stos
mov
lods
inc
pop
mov
sbb
mov
scas
xchg
outsb
aam
add
push
sti
add
inc
or
inc
lea
xchg
pop
cmp
add
addr16
sbb
and
test
dec
sbb
xor
jl
xor
outsl
jb
gs
lds
jno
loope
sub
cmp
addr16
xchg
mov
in
movsl
in
xchg
ret
fidivrl
jns
xchg
push
clc
push
ficoms
imul
xchg
hlt
push
push
pop
dec
rorb
dec
mov
mov
add
push
lret
xor
clc
adc
inc
loopne
push
mov
jae
int3
lods
nop
les
stos
cmp
pop
icebp
ret
ret
rol
pop
and
test
adc
lea
mov
dec
and
push
dec
sub
ficoml
in
mov
fldt
adc
xlat
jl
inc
outsb
fdivs
push
dec
in
dec
ret
xchg
cs
add
pusha
ffree
movsb
or
inc
jnp
cltd
jg
push
mov
popa
dec
cwtl
inc
incl
dec
inc
int
pop
ficompl
dec
pop
repz
and
rcr
cwtl
mov
mov
fdivrs
dec
sbb
clc
cmp
int
pop
xorl
scas
hlt
adc
inc
add
dec
mov
lea
mov
je
mov
add
dec
popa
mov
sbb
dec
leave
mov
sbb
les
inc
jp
lret
lahf
xor
je
mov
mov
dec
xor
test
jns
adc
imul
movsl
pop
dec
into
nop
imul
ret
cli
loope
out
cmp
cmp
lahf
push
jp
mov
fldenv
bound
dec
cmp
jno
fsincos
addr16
aaa
mov
neg
adc
scas
sbb
push
and
fimull
bound
xor
inc
pop
mov
mov
dec
into
inc
test
sub
or
add
into
jo
mov
cmp
mov
add
xchg
iret
add
cwtl
cmp
mov
jmp
mov
out
mov
jl
stos
pop
add
pop
add
popa
or
sub
scas
ss
mov
push
mov
mov
and
adc
in
or
outsl
insb
cmp
jno
sbb
or
hlt
adc
adc
ja
or
cmp
jne
pusha
lods
push
or
or
cld
dec
inc
adc
rcrl
arpl
jb
cmp
sbb
add
mov
mov
mov
sbb
nop
push
mov
das
or
mov
mov
sub
or
add
lock
das
bound
push
jne
pop
dec
stc
pop
lret
push
clc
mov
jmp
je
out
loopne
adc
jmp
into
clc
into
orl
aas
mov
mov
cld
fdivrs
inc
outsl
push
fxch
mov
shrb
lret
sub
push
out
sbb
or
mulb
out
or
es
pop
xchg
lcall
dec
or
loop
sbb
arpl
pop
inc
aad
sub
mov
sbb
mov
adc
cmp
xor
jmp
mov
lock
in
pop
inc
pop
add
add
push
mov
push
mov
add
xchg
dec
mov
sub
sbb
rol
jmp
dec
push
mov
sti
fs
jmp
icebp
mov
pop
sbb
sbb
outsl
dec
rol
mov
adc
ljmp
mov
sub
cmpsl
out
push
std
adcl
pushf
mov
push
and
pop
testl
sbb
cmp
cmpsl
mov
shufps
push
pusha
daa
xor
push
fidivs
mov
push
cld
inc
and
movsl
cwtl
arpl
mov
mov
js
out
dec
sbb
jle
out
push
rorb
ja
out
dec
imul
add
loope
das
lret
pop
aaa
push
iret
ja
pop
xor
bound
out
cmpsl
addr16
jns
sarb
mov
push
push
cmp
cmp
stos
cmp
jo
in
add
mov
popf
int
mov
jnp
xchg
aaa
testb
or
fiadds
pop
leave
add
les
sbb
xrelease
or
xor
push
flds
jg
xchg
in
mov
mov
and
lock
icebp
scas
pop
in
or
idivl
sbb
sbb
daa
mov
lods
lods
jb
mov
imul
jno
in
in
ja
xor
mov
dec
push
in
jb
mov
hlt
les
dec
or
push
jg
add
cmpsb
jns
dec
pop
mov
pop
rolb
push
test
cmpsb
jo
nop
aas
mov
push
aaa
xor
test
cltd
aaa
jmp
push
and
cmpsl
shlb
or
sbb
ficomps
lret
mov
and
loopne
jb
stos
adc
adc
xor
pop
cld
rorb
mov
jge
adc
xor
icebp
xor
inc
add
nop
roll
hlt
ss
fisubl
dec
out
push
pop
mov
cli
lds
ja
jge
mov
into
adc
mov
or
push
jo
repnz
std
jnp
scas
sbb
push
imul
sahf
mov
cmp
mov
std
pop
mov
dec
daa
scas
sub
in
cmp
lock
test
lods
jns
mov
mov
fmuls
dec
or
cmp
add
das
pop
and
add
lea
sbb
jp
iret
fistpll
mov
add
inc
subl
dec
imul
or
shll
shrb
sbb
push
fisubl
arpl
cs
std
fisubrs
int3
aaa
add
and
xchg
xor
out
push
shrl
push
pop
jge
sub
lock
hlt
cwtl
mov
jmp
pushf
xchg
and
movsb
aaa
out
lret
push
xchg
lods
gs
in
xor
pop
inc
cwtl
in
pop
pop
rclb
jo
cs
pop
dec
mov
add
sbb
xor
or
lea
inc
mov
out
sub
call
jo
mov
mov
mov
fsts
dec
mov
jns
jg
push
cmpsb
push
dec
insb
push
inc
ds
push
and
imul
xor
movsb
jp
jne
add
test
add
push
jmp
pop
outsb
xchg
sub
inc
dec
lds
jno
inc
push
ja
pusha
sbb
xchg
add
popa
sar
shr
movsl
data16
push
inc
shrb
aad
mov
les
mov
addr16
fildll
xor
jge
cmp
outsl
jl
pop
or
test
and
add
mov
mov
cltd
data16
xchg
push
int
cwtl
sbb
and
xchg
mov
test
push
inc
xchg
dec
loop
dec
adc
fwait
xor
push
out
dec
sbb
push
push
ja
lods
flds
orb
repnz
cwtl
cltd
push
test
bound
jne
push
push
inc
pop
dec
outsl
dec
pop
sub
jmp
sti
cmp
movd
aam
inc
in
hlt
push
and
hlt
hlt
cmp
inc
mov
fisubrs
shrl
scas
mov
imul
jne
cmp
stc
dec
mov
leave
or
xchg
imul
jnp
shr
fnstsw
mov
test
fisttpll
add
mov
jecxz
test
pop
sub
clc
sbb
mov
orb
repz
mov
out
dec
mov
out
lcall
xor
pop
pusha
fstpt
cmpsb
add
mov
std
dec
ret
push
add
lods
xor
ds
lret
or
xor
flds
aam
pop
or
add
adc
imull
lods
test
adc
push
dec
jmp
movsb
xor
push
mov
repz
ljmp
push
pushf
in
ja
and
addb
fisttps
jnp
mov
jno
cmpsb
fistl
out
xor
sbb
sahf
jecxz
and
xor
push
ss
pop
and
int3
mov
sub
xor
mov
push
insl
inc
in
sub
pop
sub
ret
lea
pushf
mov
or
outsb
test
dec
out
arpl
cmp
stos
out
cmp
lret
xchg
mov
cltd
inc
cmp
jo
adc
lret
addr16
mov
inc
pop
popf
daa
repnz
cmp
jnp
aaa
scas
xor
jmp
lcall
sbb
mov
push
xorb
cltd
and
dec
dec
rcrl
movsb
inc
das
imul
dec
mov
js
ss
xchg
rcll
aaa
imul
out
jno
into
mov
jle
cmpb
xchg
fs
shl
sub
xor
movsb
loope
repz
sbb
dec
mov
push
std
mov
pop
das
jmp
sbb
adc
lea
mov
mov
idivb
stos
push
lret
test
pushf
in
push
jmp
jns
outsl
test
push
sahf
jae
push
mov
out
icebp
ja
sub
movsb
fstpt
mov
cmp
pop
ljmp
lahf
inc
mov
js
jg
movsl
xchg
pop
and
or
or
jecxz
push
push
jnp
dec
xchg
aas
cmp
sbb
xchg
fnsave
xlat
test
iret
cmp
ret
imul
das
mov
icebp
sub
clc
and
inc
sub
sbb
dec
sbbb
in
fildll
jge
dec
xchg
mov
jg
jo
jns
xchg
popa
nop
mov
nop
add
mov
sbb
jge
popf
gs
mov
test
adc
leave
addr16
repnz
push
mov
mov
shll
mov
pop
jge
sbb
out
ret
inc
js
pop
mov
test
rorb
sub
stos
mov
mov
stc
std
push
xor
xor
loope
jp
scas
lcall
arpl
cmpsb
jmp
outsl
add
aas
jnp
sbb
and
push
sub
daa
enter
lret
lea
hlt
insl
adc
in
test
xor
xchg
jnp
pop
jmp
inc
pop
lock
pop
xor
jno
xor
add
jge
loop
jle
pop
jbe
mov
std
mov
pop
mov
jl
mov
dec
inc
fcomps
pop
add
sub
xor
enter
pop
mov
imul
adc
test
dec
adc
ss
leave
int
aad
adc
pop
sahf
dec
popf
sbb
repz
xchg
mov
inc
jle
lea
lods
mov
cmp
in
mov
call
mov
xchg
fisttpl
cmp
xor
dec
mov
out
je
cld
and
sub
mov
jl
add
push
out
push
repnz
lds
pop
or
loopne
mov
cmp
scas
in
scas
lds
cmp
add
out
aam
push
dec
mov
jno
out
std
pop
or
add
cmp
mov
js
mov
pop
sbb
cmp
or
xor
lea
movsl
add
dec
test
pavgw
mov
push
add
mov
ret
jno
cmpl
xlat
dec
notl
lods
or
cwtl
sbb
movsl
sbb
insb
std
cmpl
stos
dec
cmp
mov
jp
inc
xor
and
fbld
imul
xor
clc
loopne
or
and
push
cmp
xor
adc
outsl
test
jle
int3
lea
jecxz
test
xor
loope
in
dec
add
les
push
dec
xor
fiaddl
or
mov
faddl
jp
xchg
insb
stc
addr16
test
cmp
push
cmp
inc
rcll
or
or
pushf
xorl
aam
xlat
pop
pop
scas
and
push
xor
sahf
xchg
scas
test
enter
sub
push
and
movsl
jg
push
inc
rcrb
sub
les
stos
pop
stos
insl
movsl
xchg
or
das
sub
lret
ret
push
lahf
mov
dec
pushf
sub
mov
push
xor
clc
setns
jl
push
mov
dec
jge
lds
pop
loop
ss
fcompl
insl
mov
mov
ss
test
je
adc
add
dec
xchg
in
stos
iret
xchg
js
jge
mov
mov
icebp
add
sub
mov
sub
addl
dec
or
add
xchg
ja
inc
lds
and
cmp
and
xor
mov
xchg
cmpsb
fcmovnbe
test
adc
add
lods
cmp
jne
lret
ret
push
mov
mov
inc
shrb
xchg
sub
pop
ds
scas
js
mov
ja
cmp
sub
ja
shl
in
cmp
insl
cmp
ret
cmc
lods
cmp
and
shll
push
lcall
xor
cld
pusha
adc
dec
lahf
and
lret
add
imul
push
push
pusha
imul
iret
in
mov
mov
inc
jae
movsb
or
rcrb
dec
stos
fdivs
ret
aam
ss
adc
inc
insb
and
xor
sbb
int3
rclb
sub
fildl
outsb
ret
jnp
popa
mov
fidivrs
pop
in
adc
lea
loopne
test
add
mov
push
xor
add
orl
lds
cli
addl
mov
js
jge
pop
test
pushf
pop
sahf
and
adc
hlt
call
inc
repnz
int3
cmp
xor
repz
imul
mov
mov
fsubp
scas
call
xor
sub
cmpsb
jge
out
cld
mov
aad
icebp
pop
mov
cmp
std
sarl
adc
pop
mov
popa
pop
sbb
push
cltd
aam
out
jb
and
cmp
imul
pop
inc
cmp
loopne,pn
jae
loop
inc
mov
mov
cltd
cmc
popa
pop
sub
imul
dec
jno
inc
jno
inc
pop
adc
cmc
stos
mov
cmpsl
hlt
push
jl
lret
jl
jp
mov
les
mov
sbb
pop
push
mov
jmp
inc
sub
push
icebp
movsl
jecxz
out
pusha
dec
mov
sub
mov
mov
andb
mov
test
add
flds
adc
jle
xchg
sbb
cmp
add
sbb
out
ret
add
jle
cli
and
push
loop
insl
mov
push
out
dec
sbbl
lods
push
dec
lahf
jl
nop
sbb
mov
jg
fmull
icebp
fisttps
jb
dec
pusha
xchg
lcall
sub
insl
xor
jge,pn
adc
movsb
jbe
les
ja
cmp
jo
pop
icebp
fcompl
mov
shlb
jp,pn
gs
inc
push
daa
int
push
je
loope
movsl
jbe
sbb
sub
inc
movb
call
xchg
xor
xchg
arpl
mov
pop
mov
addr16
xor
outsl
icebp
ret
add
and
test
xor
mov
jnp
rol
push
dec
clc
lret
xor
cmpsl
clc
cmp
mov
outsl
mov
jle
or
inc
adc
xchg
popa
cmp
cs
in
add
popa
arpl
xchg
lds
loope
subb
mov
adc
movsl
xchg
or
mov
xor
scas
inc
out
pop
lahf
mov
ja
jecxz
icebp
popf
scas
mov
jl
mov
mov
push
mov
add
movsb
xorl
pop
xchg
mov
ret
xchg
sub
fisubrs
pop
ret
mov
cmp
rolb
dec
popa
sub
inc
shll
jle
xor
or
cmp
nop
push
fbld
xor
mov
push
dec
cltd
mov
test
push
pop
push
pop
add
lret
clc
jg
js
pushf
aad
leave
dec
int3
outsb
lret
push
and
xchg
sbb
das
pop
lock
add
les
popa
aam
das
sub
clc
jl
xor
xor
mov
orb
icebp
roll
lods
test
cmp
add
int
adc
mov
scas
std
out
jo
mul
loope
rcll
in
jno
jo
rorb
test
inc
mov
ljmp
mov
out
hlt
inc
add
pop
jmp
mov
jb
sub
lret
lea
mov
rolb
enter
jge
inc
cmpsb
lods
subl
std
subl
mov
fcomps
adc
lods
jbe
sbb
hlt
push
test
adc
jge
dec
outsl
ret
inc
out
test
pop
mov
sti
shll
pop
repz
xchg
xchg
push
dec
iret
test
pop
jg
dec
and
shlb
idiv
lods
mov
movsb
inc
in
and
stos
addr16
push
sti
popf
je
pop
jg
push
mov
jne
js
cmp
xor
sub
out
mov
repz
lods
cmp
cmp
hlt
cmp
test
dec
mov
inc
jg
vmread
jmp
adc
daa
loop
xchg
imul
jecxz
lea
icebp
mov
and
add
mov
lock
push
xchg
cmpsb
or
jb
inc
jae
std
cmp
rsqrtps
cmpsl
cmp
adc
jno
lock
stos
or
push
es
adc
lods
ret
cmp
dec
xorl
ret
xchg
ret
dec
xchg
data16
out
jp
fmull
sub
pop
addr16
lret
jge
in
test
jg
popf
and
nop
je
jb
lods
out
enter
jge
int3
xchg
scas
pop
sbb
rcrl
fisubl
mov
sub
outsb
das
xchg
cmp
adc
mov
and
stc
xchg
push
fstpt
mov
das
xorl
cmp
add
adc
cli
add
or
int
je
jecxz
in
mov
mov
add
adc
or
jnp
jns
inc
call
cs
les
hlt
add
sarb
or
add
outsl
es
test
jle
cs
inc
lret
inc
std
or
sbb
jge
dec
mov
not
jge
xchg
mov
cmp
inc
xchg
jmp
or
dec
inc
arpl
js
mov
push
xchg
add
inc
adc
mov
adcb
and
mov
adc
rcrl
pushf
lods
mov
inc
insb
sub
cli
add
jmp
adc
or
mov
xchg
mov
xchg
stc
and
or
lret
imul
das
fildl
mov
mov
test
hlt
out
jnp
dec
insb
pop
pop
pushf
mov
imul
adc
daa
mov
sbbl
and
dec
lahf
in
cwtl
call
xor
adc
push
lret
test
adc
fucom
mov
cld
popa
cmpb
and
pop
adc
addr16
cli
pop
out
pop
je
test
mov
dec
push
pop
adc
orl
outsb
xor
sbb
mov
out
shlb
cld
aaa
dec
mov
adc
ds
sub
shrd
jecxz
clc
xchg
mov
enter
insb
xchg
and
ja
lods
and
inc
sbb
mov
stos
jg
hlt
int3
fdivl
daa
and
jp
js
scas
outsb
hlt
ds
sbbb
xchg
popa
push
imull
mov
ss
mov
adc
je
mov
es
mov
jo
pop
jb
adc
add
fs
cmpsl
push
xchg
pop
mov
mov
mov
aaa
inc
inc
mov
xchg
jne
mov
fisubrl
inc
inc
push
sub
data16
aam
dec
mul
insl
into
fildl
jae
push
cmc
je
fcomps
shll
nop
test
mov
mov
imul
cmp
std
imul
adc
mov
pop
pop
fwait
sbb
push
fldenv
dec
push
data16
jg
xor
and
mov
mov
mov
push
lock
les
mov
jl
test
in
into
sub
push
jle
sbb
test
push
rorb
cmp
pop
out
cmpsl
popf
xor
or
scas
push
test
es
popa
outsl
xchg
inc
pop
std
pusha
aas
inc
mov
insl
jg
mov
jl
clc
fsubrs
les
fcmovbe
add
scas
adc
xchg
repnz
push
test
int
jo
and
xor
inc
pop
cmpb
cld
jmp
stos
negb
ljmp
popw
sahf
cmp
in
fwait
xchg
cmpsl
inc
jbe
in
dec
dec
xchg
add
push
mov
add
inc
xor
test
fnstenv
shrl
xchg
loopne
pop
pop
inc
push
enter
lret
in
jl
adc
test
mov
loope
mov
adc
xor
in
incb
repz
push
dec
add
and
mov
jb
aam
int
js
lods
jae
or
imul
scas
nop
rorb
push
pop
xlat
push
and
xchg
mov
xchg
push
xchg
jg
jge
cmp
popa
imul
fists
xchg
xchg
pop
xchg
loope
add
adc
scas
pop
fmuls
in
aas
movsb
push
jecxz
sbb
popa
lods
sub
test
pop
mov
pushf
push
pop
adc
ss
pop
mov
call
xor
jno
cs
xor
xchg
daa
cmp
cs
push
cmp
scas
rcrb
adc
ja
dec
dec
movsl
xchg
loope
xchg
push
fdivrs
cli
xor
jne
nop
and
ret
xchg
dec
testb
icebp
into
lret
insl
adc
out
repz
and
popf
das
int
sub
push
iret
jae
nop
xor
or
popa
cmp
push
loopne
inc
add
jmp
fxch
and
dec
and
movsl
lods
jnp
imull
inc
jb
pop
cmp
leave
daa
push
out
inc
add
adc
ja
cli
loop
mov
in
add
xor
gs
popa
ja
or
xchg
and
push
subb
daa
lahf
pop
sti
pushl
mov
jp
stos
rsm
aad
inc
cmp
enter
mov
inc
hlt
lea
outsb
repz
pop
in
in
lret
cs
nop
inc
in
mov
adc
and
push
add
xor
jns
pop
fadd
cmc
mov
mov
push
push
jecxz
mov
ss
int
out
into
or
add
mov
ret
pop
ret
aam
lds
jno
add
or
jbe
push
mov
shll
gs
daa
gs
mov
in
xchg
dec
shll
outsb
enter
in
frstpm(287
add
jmp
enter
xor
mov
clc
or
inc
mov
mov
inc
sub
and
test
mov
in
fucomi
inc
push
adc
imul
fisubs
orb
je
jne
push
cltd
mov
pop
fs
dec
add
cwtl
fucomi
dec
jae
adc
sarl
sbb
iret
addb
jge
std
movsb
sbb
mov
mov
pop
sub
add
xor
pop
mov
inc
lods
mov
mov
mov
clc
push
subb
lods
add
push
jb
lahf
movsb
fcmovbe
inc
mov
dec
sub
das
arpl
cmp
out
popa
je
shlb
mov
inc
add
sbb
je
out
cld
inc
ss
xorl
jns
or
mov
jmp
call
or
into
inc
pop
inc
insl
mov
mov
push
in
popa
leave
inc
lods
xor
dec
rcll
inc
mov
or
stos
mov
outsl
leave
push
xchg
xchg
dec
out
adc
dec
xor
adc
sbb
stos
cmp
shlb
pop
imul
je
in
cld
bound
or
movl
sub
out
mov
dec
mov
xor
inc
sbb
sub
and
arpl
ds
jo
pop
mov
ljmp
fwait
hlt
lahf
je
mov
push
adc
dec
imul
sub
cmpsb
xor
mov
jle
clc
stos
dec
sbbl
adc
xor
out
cmp
push
add
ror
fnstcw
imul
adc
leave
inc
mov
inc
loop
cmp
dec
sub
cmpb
filds
add
cmp
andl
lret
shrb
stos
xchg
je
sub
notl
mov
and
push
cmpb
ret
repz
stos
movsl
add
mov
push
xor
fldcw
xor
mov
sbb
ja
cmpsl
sub
in
lods
test
mov
push
jo
cmpsl
ljmp
or
sahf
push
or
mov
jne
pop
sub
pop
xor
pop
inc
mov
test
pop
insb
dec
or
addr16
xchg
mov
mov
sub
or
xor
arpl
pop
lea
shrl
sbb
push
bound
fmuls
in
adc
sti
jl
test
xchg
sbb
nop
lcall
stos
add
roll
jge
push
pop
pop
stos
mov
mov
mov
and
ficoml
sti
or
or
dec
fiaddl
ficompl
xor
push
stos
cmp
ja
push
mov
mov
add
or
insl
cmpsl
jns
mov
inc
jle
sbb
jge
test
filds
mov
sub
sbb
jne
addr16
xchg
dec
or
xor
sub
mov
test
orl
push
fs
push
cltd
imul
fwait
arpl
dec
add
sub
sub
shlb
mov
xchg
test
faddp
sub
in
push
sbb
push
sbb
fiadds
lds
mov
imul
and
out
loope
dec
aam
cmp
add
std
movsb
into
cmpsl
aad
jp
out
pop
sub
sbb
lret
inc
movsl
cltd
mov
sti
stos
jne
xor
in
popf
hlt
jbe
ret
cwtl
dec
clc
xchg
repz
or
fdivs
push
icebp
jg
insb
cmpsb
and
adc
push
fmull
popa
push
cmpsb
loopne
sbb
mov
dec
das
notb
jg
mov
ret
ja
add
push
mov
mov
imulb
pop
cmpsb
push
std
cli
mov
orb
stc
nop
loop
fcmovu
xor
add
hlt
add
jmp
pop
mov
out
mov
ret
clc
imul
cmp
add
or
pop
addl
adc
inc
xor
mov
xchg
int
mov
jmp
xchg
xor
andl
sti
mov
fisttps
repnz
inc
pop
mov
and
repnz
pop
pop
mov
mov
or
insb
prefetch
or
outsl
mov
in
mov
jge
clc
inc
scas
adc
pop
inc
ret
sbb
gs
not
inc
fnsave
xor
leave
daa
lcall
pop
std
out
lods
pop
mov
xor
adc
cs
gs
movsb
mov
fcomi
xchg
push
mov
bnd
rcll
ds
mov
int
adc
mov
or
add
into
jae
ljmp
popf
jb
in
pop
hlt
xchg
into
into
int3
xchg
ja
insl
stos
mov
jecxz
cmp
mov
inc
push
mov
push
dec
xlat
cmpsb
imul
xchg
rcll
sub
cld
ljmp
sub
punpckldq
sub
xor
lea
aam
outsl
mov
mov
shll
mov
adc
inc
mov
push
jno
mov
add
jnp
cmpsb
repz
orl
xlat
lock
stos
jmp
loope
cmp
pushf
js
stos
xor
lret
idivb
pop
je
aas
or
inc
imul
add
cwtl
or
pop
and
clc
pop
dec
fs
pop
ss
lods
stc
fiaddl
add
lret
inc
stos
popf
inc
xchg
fldln2
mov
inc
sti
adc
fisttpll
mov
inc
mov
add
out
stos
push
test
subl
es
sub
or
scas
js
mov
popf
xor
or
mov
ljmp
and
dec
ljmp
pop
and
sti
xchg
pop
in
and
insb
jbe
mov
stc
int3
xor
outsl
xor
mov
pop
push
mov
mov
and
cmova
xor
push
jl
jg
cmpsl
in
xchg
sbb
aaa
lea
test
mov
xchg
jns
xor
jne
adc
mov
and
or
ss
imul
sbbb
push
push
rorl
test
in
in
sbb
shl
sahf
sbb
jg
add
mov
pop
cmp
xor
and
hlt
jmp
aaa
stos
adc
ret
xor
push
mov
loop
imul
movsb
std
xchg
rolb
pop
js
inc
shrb
sarl
sub
jb
xchg
or
pop
jno
cmc
dec
pop
or
pop
pop
cmp
call
add
pop
daa
xor
scas
xchg
daa
sub
mov
xchg
mov
cmp
ds
mov
inc
out
sbb
addr16
mov
push
andb
or
dec
xor
lret
xchg
cli
rcrb
out
stos
or
jne
iret
sbb
movlps
sub
cwtl
popa
repz
sub
sbb
pusha
and
orl
inc
xor
push
sub
ljmp
adc
sbb
xchg
pop
pop
xor
jp
and
nop
out
cmp
nop
es
test
push
jno
test
mov
popf
cltd
jl
sub
xchg
mov
pop
scas
inc
and
lds
lods
mov
pop
adc
pop
shrb
mov
and
insl
or
push
push
xrstors
lahf
jb
pop
adc
sub
cmpsb
xchg
xlat
xor
cmp
lret
repz
fiaddl
jp
cltd
mov
cmp
mov
jnp
mov
iret
scas
bound
lock
cmp
xchg
mov
lds
ret
daa
sub
ret
rorb
dec
ljmp
out
shrb
outsl
pop
mov
inc
mov
mov
andl
and
ret
int
pop
mov
scas
sarl
xchg
and
repz
dec
insl
popa
or
testb
mov
dec
lds
mov
clc
dec
mov
cmpsl
mov
aaa
mov
cmpsl
movsb
mov
add
adc
les
jae
cltd
mov
mov
cmc
mov
sbb
jnp
aad
pop
mov
and
clc
imul
mov
lret
push
cmp
dec
xchg
jno
sbb
cltd
int
and
aaa
push
movsl
lret
push
imul
mov
cmp
out
push
cmpsb
imul
addr16
pop
cs
int
push
fisubrl
int
lods
adc
mov
ljmp
repz
xor
fcmovnbe
int3
sub
mov
mov
inc
or
push
sub
inc
push
cs
lds
out
dec
insl
push
jnp
inc
mov
mov
xlat
pop
cmp
scas
out
loop
mov
bound
xchg
sarb
sub
lret
xor
jl
cld
lds
in
aas
sbb
cli
add
hlt
add
sahf
ljmp
dec
std
call
ds
jo
and
pop
lea
mov
xor
test
scas
xor
dec
inc
test
or
dec
inc
enter
repz
or
xchg
sbb
fiadds
shll
stc
subl
mov
insb
mov
pmaxsw
xchg
jecxz
and
dec
sti
popf
jb
lcall
lcall
push
roll
xchg
leave
mov
addr16
xchg
insl
ds
jnp
out
arpl
and
jnp
imul
jae
repz
sub
sbb
xchg
mov
aam
shr
lds
aaa
int
int3
cmp
mov
out
xor
sbb
mov
sbb
ljmp
dec
outsl
mov
lods
dec
icebp
fstl
repnz
lods
out
cwtl
cld
addb
jle
sbb
repz
mov
dec
js
jp
and
stos
xchg
sti
mov
mov
sub
movsb
fistpl
imul
mov
popf
ljmp
dec
xorb
push
jb
mov
ljmp
iret
adc
xor
insl
adc
lret
mov
imul
cmpsb
inc
push
pop
lods
push
add
pop
mov
in
repz
test
cmpsl
shlb
pop
cmc
sti
pop
and
stos
sub
jmp
xlat
in
pop
mov
inc
loope
pop
scas
lcall
fidivl
pop
cmpsl
addr16
jns
mov
dec
sub
jnp
xor
pop
inc
test
clc
cli
lods
ret
movsb
add
aad
sub
cmpsb
sahf
out
jbe
add
out
add
aaa
in
jle
fwait
pop
jl
sub
push
divl
ficoms
push
insl
jno
iret
mov
cmp
add
xor
sti
aad
pop
mov
inc
popa
xchg
mov
jbe
mov
mov
dec
add
sub
adc
pop
insb
fcoms
rolb
mov
jge
scas
ds
push
fs
shlb
and
add
inc
loope
test
rcrb
mov
cmp
add
test
ret
cmp
lds
jb
in
jmp
repz
and
pop
or
push
pop
arpl
cmpsb
xchg
shr
daa
test
lods
xchg
sbb
les
repz
sub
es
jo
jle
cli
ljmp
or
mov
imul
idivb
xor
dec
jg
mov
mov
imul
mov
addl
cwtl
mov
push
jnp
das
pop
pop
test
pop
mov
lcall
out
mov
dec
aas
push
adc
in
and
pop
scas
xor
fdivs
test
and
stc
sbb
in
mov
lcall
aam
fsubrl
xor
rcrb
inc
ds
xchg
fs
push
pop
xor
lods
fbstp
ja
mov
scas
jp
inc
test
aas
jecxz
incb
loop
lahf
jae
xor
movsl
pop
fcompl
ljmp
jns
pop
and
outsb
push
stos
inc
test
test
dec
jl
int
test
inc
jmp
pop
dec
mov
out
rep
js
leave
jmp
xchg
cwtl
and
cmpsb
hlt
lea
xchg
movsl
in
sbb
out
inc
fwait
and
fcmove
cmp
mov
cmpsb
sbb
cmpl
imul
sub
clc
xor
int3
sti
subl
aam
popa
mov
add
insb
scas
and
cmp
arpl
and
cmpsl
mov
mov
mov
rcrl
aad
adc
mov
shll
loope
pop
jg
addr16
adc
inc
repnz
lods
adc
decb
jns
popf
mov
je
mov
sbb
repnz
mov
adc
jne
std
clc
ja
notb
mov
in
mov
mov
popf
arpl
xchg
inc
je
sub
xchg
jp
xchg
cmp
addr16
mov
push
pop
mulb
arpl
into
push
pushf
mov
pop
arpl
xchg
dec
sbb
sbb
loope
loope
push
mov
outsl
jl
sub
jge
call
ds
ss
push
dec
adc
push
scas
aam
xchg
mov
and
stos
and
lock
cmp
stos
and
cmp
jnp
push
ret
cli
adc
das
sar
js
xlat
push
in
negb
mov
repz
cmp
jnp
mov
pop
jp
xor
dec
xlat
mov
sub
mov
xlat
or
push
inc
jmp
sub
xor
push
out
loope
sbb
cmp
jg
and
cmc
lcall
adc
inc
aad
xor
cs
out
mov
sbb
lahf
pop
hlt
push
fldenv
imul
lock
shlb
pusha
outsb
bound
add
hlt
mov
pushf
xchg
negl
jo
sbbb
cmpsb
pop
sbb
add
xchg
pop
into
hlt
mov
insl
ficoms
les
repnz
pop
test
push
push
inc
adc
das
or
es
arpl
cltd
sti
imul
mov
add
rcrb
outsl
insb
mov
inc
add
sti
adc
jle
push
rol
test
cmp
mov
stos
movsl
in
push
cmp
repz
fisttpl
arpl
push
lods
cmp
xchg
cmpsb
fwait
sbb
sbb
push
data16
xor
int
push
les
inc
inc
xor
add
popf
dec
dec
mov
adc
mov
lock
sahf
cmp
cmp
xchg
xor
mov
cmp
sub
and
and
sub
push
popa
lods
sbb
js
movsb
repnz
dec
std
arpl
jb
jp
shrl
xchg
and
jp
ror
insb
fstl
adc
push
flds
adcb
push
jno
ljmp
add
adc
hlt
js
lods
inc
xchg
ret
mov
shlb
jecxz
add
or
mov
or
adc
cmpb
sub
dec
andl
decl
dec
jb
sbb
adc
std
in
sub
out
pop
dec
mov
lret
mov
cwtl
inc
pop
fistps
or
mov
gs
xchg
dec
sbb
es
sti
mov
in
inc
leave
outsb
lea
push
cmp
call
push
mov
xchg
mov
test
ss
cli
push
xchg
and
jbe
xor
push
leave
insb
xorb
push
subl
lds
out
pushl
pop
daa
sarb
jne
in
call
out
adc
push
jge
pop
lods
lahf
pop
jge
mov
pop
jno
mov
mov
ss
mov
fidivl
push
lcall
adc
sub
lahf
addr16
xor
sub
mov
jecxz
aam
inc
sbb
push
incl
pop
insl
fnstenv
popf
pop
arpl
jae
clc
xchg
in
aas
xchg
mov
lret
rcl
xor
sarl
je
jg
jo
outsl
mov
das
out
sbbb
movsb
or
push
jbe
cli
lods
jle
lret
push
sub
cmpsl
xor
fstp
out
nop
je
push
fs
imul
xchg
aam
or
adc
inc
imul
sub
ds
fwait
sahf
frstor
fldenv
xchg
push
mov
inc
and
add
std
sub
daa
dec
push
or
mov
mov
rorb
fstpt
cmc
or
lret
ret
lds
loop
fldt
pop
pop
loop
adc
jp
pusha
out
mov
in
xchg
imul
push
adcb
aas
jne
ret
push
adc
push
in
in
xor
jne
test
mov
push
mov
and
test
inc
shll
dec
xor
inc
mov
mov
imul
mov
js
or
xchg
dec
daa
in
lods
cmp
inc
clc
adc
and
add
lods
adc
xor
and
xor
xor
add
xor
or
pop
mov
or
aam
gs
cmp
aaa
and
nop
or
sbb
mov
inc
lahf
mov
mov
add
mov
jae
mov
scas
jmp
fadd
movsb
rolb
xor
mov
popa
sbb
popf
arpl
sahf
sbb
imul
movsb
push
mov
jns
jge
orb
enter
ret
repnz
mov
cmpsb
mov
mov
packsswb
fimull
sbb
adc
lret
adc
push
sbb
out
int3
push
es
pop
insl
insb
int3
jg
jo
leave
dec
xchg
add
dec
jne
iret
out
xchg
sbb
push
and
jmp
lods
adc
or
pop
outsl
mov
fidivrl
inc
cmpsl
inc
sbb
mov
jg
jns
xor
xchg
adc
dec
push
sbb
xor
push
push
inc
aas
mov
jge
jbe
call
inc
ljmp
ret
or
fsubs
scas
and
and
xchg
push
fldenv
and
loop
rolb
mov
stos
or
mov
cmp
fcmovu
lea
shrl
popf
lods
mov
push
inc
shlb
mov
xlat
dec
mov
movsb
shrb
xor
cld
jecxz
xlat
shlb
pop
pop
or
push
cvtps2pd
iret
push
out
sahf
loope
jecxz
call
push
and
or
sbb
jl
push
mov
xor
mov
jg
fsubl
and
push
xor
mov
outsb
and
jle
mov
mov
push
push
out
cs
sub
lock
repnz
adc
out
test
xchg
je
mov
cmpsb
out
xchg
and
sub
jae
repnz
hlt
cmp
add
push
cmp
jns
in
das
fsubr
cmc
loopne
ret
mov
adc
and
adc
jg
sahf
push
xchg
cmp
push
ficomps
inc
adc
orb
call
mov
adc
and
mov
lods
push
add
inc
or
mov
mov
loopne
xchg
push
int3
orl
mov
in
and
cltd
jp
fcmovnb
arpl
stc
push
lret
stos
or
ja
adc
xchg
loopne
and
or
dec
xchg
scas
sti
and
inc
inc
xor
shll
enter
add
and
and
notl
inc
dec
loop
push
mov
jae
enter
sub
jbe
add
inc
in
or
cmp
jmp
mov
outsl
imul
add
dec
dec
repz
mov
lds
add
dec
push
sbb
pop
loope
lret
xor
inc
outsb
inc
insb
pop
fs
sub
lcall
mov
push
jb
jg
push
and
clc
add
out
rcr
sbb
popf
adc
popf
addr16
negl
ficoms
xor
mov
pusha
lret
shl
fisubl
xchg
mov
jecxz
jle
sbb
nop
mov
xor
jno
or
orl
outsb
mov
adc
mov
mov
lret
iret
cmp
pop
xchg
in
add
pop
xor
xchg
mov
aad
rol
movl
ret
je
pop
push
dec
dec
dec
pop
test
add
jo
dec
vmovaps
repz
jns
push
aam
lret
or
adc
idivb
xchg
ja
ja
out
mov
shlb
gs
mov
sbb
enter
test
insl
mov
repz
add
cmp
out
mov
adcb
push
mov
iret
inc
int
lret
sbb
adc
push
loope
outsl
mov
lahf
adc
jecxz
aaa
leave
add
ret
pop
les
sahf
sahf
xchg
sti
imul
jo
fnsave
out
in
jne
fmuls
ret
mov
and
shrb
cmp
aam
cmp
pop
sbb
sub
xor
xor
pop
cltd
cmp
pop
daa
stc
cmp
sbb
daa
push
nop
nop
pop
dec
adc
test
stos
xchg
rcl
rorb
push
popa
jne
lret
push
pushf
jle
push
lock
lahf
mov
cmp
xor
cld
fstps
imul
popa
sti
stos
or
cwtl
loopne
add
mov
aad
jl
sbb
xor
int
pusha
sub
mov
push
jecxz
jne
xchg
repnz
in
pop
scas
push
xchg
push
mov
add
xlat
std
hlt
xor
jo
mov
pop
sub
in
cmp
xchg
mov
jl
jae
in
pop
lods
lea
push
mov
sbb
push
fwait
test
push
push
imul
jnp
add
mov
div
push
imul
push
mov
lods
jp
mov
xchg
cwtl
mov
and
std
mov
mov
pusha
or
add
mov
lea
popa
data16
mov
push
inc
xchg
lods
adc
mov
sub
adc
jg
dec
cmovl
xor
inc
ljmp
in
xlat
into
movsl
ljmp
sub
lock
mov
aaa
pop
inc
xor
mov
dec
inc
jns
push
add
out
add
rcrl
and
lock
sbb
push
lods
sahf
cmpsl
jp
pop
xchg
dec
in
pop
outsl
dec
xchg
sub
and
xorb
jne
movsl
daa
cld
sbb
mov
inc
adc
adc
cld
out
push
mov
mov
imul
lahf
sar
ss
mov
mov
adc
pop
loop
lret
mov
movsb
aam
push
iret
jg
lcall
fists
mov
push
inc
or
pushf
arpl
inc
cmp
aaa
and
enter
pushf
orb
arpl
data16
xor
cld
or
push
or
je
pop
adc
js
cmp
in
test
adc
dec
adc
or
xor
xchg
jl
out
adc
stc
or
lret
inc
test
inc
cwtl
pop
fdiv
xchg
lods
add
dec
mov
cld
test
lock
jb
cmpsb
cmpsb
jne
cmp
lret
cmp
jo
repz
cmpsl
repz
je
aas
add
sbb
sbb
ja
sti
ja
lea
add
push
mov
loopne
mov
add
test
cs
push
out
rolb
fadds
cmp
fstp
adc
jl
lret
leave
loop
ljmp
push
adc
out
mov
lcall
test
lahf
leave
xor
aas
mov
sub
aas
adc
mov
in
lea
cwtl
and
mov
and
mov
or
fildl
xchg
and
hlt
ljmp
dec
xlat
sbb
arpl
testb
mov
in
cli
les
or
call
sbb
daa
arpl
pushf
lahf
sub
and
mov
mov
lret
pop
inc
into
push
out
roll
je
mov
sub
mov
cmp
xor
out
lcall
test
adc
and
xchg
and
adc
push
xlat
cmc
out
sbb
insb
xchg
fdivrl
sub
and
ja
cld
decb
jge
push
push
cwtl
cmp
mov
call
int
mov
std
orb
jne
rorl
jl
sub
test
into
jmp
pop
hlt
push
push
xchg
inc
cltd
mov
ljmp
xchg
mov
add
push
jg
ss
dec
push
movl
lcall
in
xchg
sub
test
jne
sub
int3
sub
outsl
xor
sbb
lea
nop
stc
or
xchg
jae
sbb
ljmp
cli
push
inc
movsl
mov
nop
popa
push
stc
dec
xor
jecxz
fldcw
mov
outsb
scas
cmpsl
sbb
out
std
mov
jae
or
push
xchg
mov
cmpsb
push
repz
out
cmpsl
lcall
inc
insl
mov
out
pop
mov
addr16
mov
imul
cmp
test
js
imul
add
fisubrs
sbb
addr16
push
cmp
jl
fbld
scas
add
outsl
push
sbb
push
add
aaa
push
ret
adc
add
xor
scas
dec
leave
scas
add
mov
int
mov
or
mov
lea
inc
adc
and
mov
and
scas
sti
or
out
and
insb
mov
and
repz
sub
jle
mov
mov
aad
movsb
fs
push
movsb
loop
mov
sarl
lock
xchg
add
mov
dec
jecxz
inc
cwtl
mov
xor
out
arpl
sti
test
cmc
dec
sti
mov
pop
mov
jg
lcall
rolb
lret
xchg
xor
jmp
pop
mov
insb
push
adc
shl
and
in
pop
clc
hlt
sub
xchg
sbb
je
push
fdiv
mov
fildl
in
adc
cmp
rcrl
aaa
in
jo
ds
pusha
mov
imul
push
xor
dec
jns
or
les
pop
inc
stos
test
hlt
jbe
ret
mov
outsl
subl
mov
dec
or
jl
push
mov
add
xchg
xor
fldenv
sbb
lea
cli
es
mov
cli
lcall
scas
mov
xchg
inc
rolb
stos
adc
test
push
pop
mov
fbld
push
adc
sub
daa
hlt
inc
ret
xchg
pop
xchg
xor
cmp
inc
push
sub
xor
mov
xchg
sbb
jbe
das
dec
mov
and
cmp
and
pop
and
or
sbb
mov
pusha
fbstp
in
je
cs
cli
cmp
mov
lods
push
popf
dec
js
notb
les
pusha
pop
jp
sub
push
sub
xchg
cli
outsl
or
sub
add
push
bound
rcrb
mov
rcrl
adc
repz
stos
jb
pop
inc
nop
nop
pop
enter
ret
aaa
or
out
mov
in
xor
cmpsl
gs
push
test
or
test
or
dec
dec
mov
out
mov
and
repnz
push
bound
add
adc
lods
or
in
movsb
and
dec
sbb
into
sub
je
mov
out
lods
pop
fldt
outsb
mov
cmp
lods
loop
fcmovne
xchg
pop
mov
std
add
inc
int
and
mov
cmc
adcb
add
inc
pop
sub
mov
movsb
push
call
add
push
pushf
sbb
sahf
in
cwtl
lcall
ljmp
pop
stc
in
mov
daa
clc
and
sub
pop
mov
ret
push
cmp
cmpl
and
les
inc
lcall
ja
xor
and
dec
jbe
mov
mov
mov
lods
test
loope
sbb
push
and
bound
daa
call
cmpsl
aad
aad
mov
cmpl
cmp
fisubrl
xor
lock
scas
in
dec
mov
fldt
divb
repnz
or
push
push
xlat
pop
sub
pushf
mov
push
out
in
test
push
or
incl
mov
inc
dec
lods
jmp
xchg
mov
dec
sub
in
icebp
int3
xor
jns
sub
adcb
xchg
aam
sub
or
mov
test
inc
sbb
sbb
dec
jno
add
faddp
cmp
shl
cmp
add
in
test
addr16
adc
cmpsl
ss
xor
mov
test
sub
cmp
aas
inc
fcmovne
movsl
call
outsl
mov
dec
lods
shl
lcall
adc
js
cmc
or
push
daa
xchg
gs
inc
loope
fcoms
or
xchg
and
int
nop
mov
fcoml
sub
mov
mov
test
notb
xchg
pusha
cmp
jecxz
idiv
leave
push
xor
stos
in
xorl
sarb
xlat
cmp
aam
cmp
jno
add
pop
jb
jnp
int3
and
dec
mov
shlb
pop
lds
push
fdivp
add
mov
dec
sbb
pop
mov
add
jle
out
inc
or
cmp
xchg
flds
imull
add
pop
mov
sahf
into
sarl
pop
aam
int3
gs
repnz
xor
push
mov
mov
nop
add
jp
test
dec
test
mov
lcall
jo
jns
mov
subb
popa
fcompl
jl
push
lock
repz
pop
dec
rcll
out
shlb
and
cld
add
js
es
negb
mov
inc
les
aad
pop
push
jl
xlat
sub
pop
push
sbbb
ljmp
dec
jae
and
aas
rcl
mov
jne
xchg
lock
and
mov
bound
sbb
shrl
popa
mov
mov
pop
inc
cld
std
mov
int
jbe
pop
and
add
mov
inc
lds
aam
jp
ljmp
adc
push
int3
jle
or
push
mov
sub
imul
imul
add
out
mov
loop
loop
loop
lret
mov
insl
cmpsl
mov
and
push
xor
sub
scas
and
lret
add
ficoml
popa
mov
cld
stos
pop
push
scas
fisubrl
xlat
outsb
xchg
jae
jbe
nop
cmp
arpl
dec
mov
aaa
dec
jno
scas
mov
out
adc
rol
dec
pop
loopne
sbb
inc
sti
out
xchg
cli
mov
fs
divb
int
scas
cwtl
mov
cli
push
dec
test
xor
adc
out
sbb
pushf
aas
out
lret
les
test
aas
ficomps
adc
dec
push
mov
pusha
xor
stc
dec
cmc
push
bound
lret
movsb
inc
push
pop
aad
aaa
cmp
popf
pop
sbb
aam
xor
aad
fistpl
ljmp
fs
mov
jmp
xor
adc
lods
andl
push
add
das
xchg
ficompl
pop
push
sbb
in
mov
call
mov
insb
push
inc
lods
pop
mov
mov
int3
xor
out
and
push
dec
cli
cmpsb
dec
pop
test
hlt
cmp
je
idiv
mov
push
js
jle
enter
aaa
outsl
into
aaa
mov
mov
insl
mov
push
fidivs
xor
and
sbb
mov
addr16
jno
xchg
xchg
arpl
cmc
es
xchg
dec
jbe
and
pop
jp,pt
xchg
out
dec
pop
mov
inc
fidivrs
inc
pop
out
ret
cmpb
leave
mov
push
in
mov
mov
xor
pop
int
out
mov
cmpsl
test
loope
push
and
xchg
es
lods
movsl
adc
das
cmp
adc
jmp
xlat
dec
inc
mov
pop
scas
outsl
enter
ss
insb
incl
gs
imul
iret
sub
pop
fisubrl
and
popl
lods
insl
mov
or
ja
lods
adc
sbb
adc
shll
pop
push
shlb
jl
int3
mov
push
ret
data16
fldenv
sbb
ds
jb
xor
and
or
adc
daa
cmpsb
inc
sub
push
sbb
mov
sahf
outsl
scas
jno
int
rclb
sbb
inc
sbb
push
push
mov
gs
sub
addr16
jb
fucom
mov
loope
clc
sub
out
mov
adcl
ret
or
mov
into
clc
fistpll
pop
andb
loope
add
cmp
pop
xchg
icebp
sbb
sub
aam
out
pop
mov
hlt
pop
aad
jnp
push
rcl
inc
sub
mov
in
ja,pn
xor
fucomi
std
sbb
mov
pop
jmp
sub
sub
enter
cmp
mov
adc
inc
repnz
scas
test
loope
insb
and
cmp
orb
dec
mov
loopne
testb
iret
cltd
mov
adc
pop
test
xorl
and
add
lret
cmp
pushf
sbb
outsl
mov
lock
lock
mul
data16
jecxz
cltd
cmc
daa
inc
cmpsb
xlat
fiaddl
dec
push
movl
cmp
pushf
nop
test
test
aas
push
adc
dec
or
adc
lds
dec
xor
mov
sahf
insl
cltd
mov
leave
decb
scas
sub
push
or
hlt
xchg
negl
jecxz
pop
pop
cli
insb
mov
sub
test
hlt
fcomi
addr16
fnstcw
cmp
test
jbe
lods
leave
scas
pop
dec
cmp
movsl
dec
ljmp
push
aaa
push
jo
aas
jbe
inc
andb
sbb
aad
inc
imul
loop
sbb
nop
mov
into
mov
xor
test
imul
pop
lret
add
and
cmp
push
cmpsl
add
lcall
arpl
pop
push
inc
mov
insl
clc
fdiv
sub
mov
repnz
ret
mov
xchg
xor
adc
cmp
add
repz
push
int
jo
mov
fs
dec
add
sbb
out
ljmp
lahf
insl
mov
aam
cmp
inc
es
fists
fisttps
inc
inc
out
xor
enter
nop
xchg
sub
cmpsb
mov
lods
push
adc
adc
jns
mov
pop
mov
xchg
movsb
insb
add
sub
xor
aaa
jl
jge
clc
outsl
repnz
in
repz
dec
je
pushf
shrb
fdivs
cmpl
dec
xor
test
xchg
out
out
test
xchg
out
jnp
cmp
loop
sbb
nop
inc
aas
and
shll
inc
pop
rolb
jl
sub
inc
mov
leave
testl
adcb
test
mov
pop
dec
cmp
test
imul
shlb
xchg
pop
stos
data16
mov
inc
jae
int3
and
not
add
cmp
repz
and
imulb
mov
in
and
loopne
pop
int
push
sbb
cmp
mov
subb
xor
test
jp
xchg
enter
push
mov
and
enter
lds
dec
jnp
lds
mov
in
enter
mov
add
or
xchg
sub
sub
mov
push
ret
and
call
lods
dec
inc
aam
pop
add
das
mov
sti
loop
fwait
dec
cmpsb
aaa
sub
dec
cmp
in
mov
pop
nop
xor
mov
mov
add
lods
stc
lcall
push
mov
sbb
mov
lock
imul
push
or
icebp
or
mov
fs
stc
hlt
and
push
mov
loope
xor
fsubl
jmp
or
sbb
jne
minps
push
cmp
xchg
adc
iret
xchg
jae
ss
daa
inc
insl
mov
pop
mov
push
dec
mov
or
popa
rcr
inc
mov
xor
mov
sbb
adc
imul
sub
rcrl
cltd
mov
ret
adc
add
dec
daa
or
mov
add
aam
pop
and
rcrl
inc
outsl
pop
jbe
add
cmp
pusha
sbb
lds
fcmovu
ret
hlt
pop
xchg
jns
cmpsl
stos
sub
xor
fwait
jb
adcl
imul
inc
mov
shrb
testb
inc
cmc
repnz
cmp
lahf
xor
je
jne
xchg
push
or
mov
mov
insl
push
lock
pop
xchg
jb
loope
js
mov
xor
in
shrb
push
inc
stos
popf
add
insb
jp
inc
push
jb
push
dec
iret
push
hlt
stc
mov
cmp
xor
mov
call
mov
push
adc
aad
push
and
mov
arpl
sbb
pop
push
add
aam
push
mov
adc
and
mov
sahf
fsubl
insb
sub
hlt
dec
sbbl
subl
les
inc
xchg
stos
ret
test
or
jno
aam
std
ja
in
ss
and
jne
adc
xchg
in
imul
sbb
mulb
leave
iret
xchg
rclb
mov
adc
pushf
loopne
in
xchg
dec
xor
mov
js
xor
setbe
dec
pop
aam
add
test
xchg
push
add
sbb
cmp
jno
cwtl
inc
sbb
loope
mov
cmpl
lcall
mov
push
lods
jne
popf
cmpsl
push
or
mov
aad
jmp
or
and
cmpsb
push
or
cmovle
test
xor
lcall
test
mov
and
mov
push
js
inc
jb
jmp
mov
sub
outsb
sbb
in
fs
and
mov
mov
fucom
fisubrl
fidivrl
cs
xor
ret
push
out
stos
nop
push
push
aad
test
aam
xor
sbb
xchg
fildll
movsl
add
pop
add
sbb
ljmp
xchg
dec
fmull
das
jnp
push
cmp
cmc
jecxz
popa
inc
add
dec
mov
fdivl
push
mov
dec
lret
rol
lcall
inc
rorl
lea
call
and
xor
jo
std
add
bound
stc
push
xor
movsb
movsb
and
xor
clc
mov
dec
jnp
xchg
dec
jne
cltd
mov
and
arpl
lods
iret
ja
movsb
test
into
inc
lods
jo
pop
jae
push
jle
repz
xor
jne
mov
aad
cwtl
cmp
push
outsb
cmp
cwtl
xchg
pop
cmp
test
lcall
sub
sub
in
mov
das
aaa
bound
je
inc
xor
push
push
leave
mov
or
add
sahf
push
sub
xchg
or
decb
roll
push
jmp
sub
jb
stos
add
adc
leave
xchg
jl
cmp
int3
fdivrs
shl
add
loop
dec
fdivs
addr16
inc
cmp
dec
cmc
popa
mov
lods
dec
mov
iret
xor
lods
push
mov
mov
das
xchg
jae
push
xor
add
lods
mov
jbe
icebp
add
mov
add
push
xchg
and
mov
mov
mov
push
orb
pop
xchg
clc
cmc
test
sub
or
nop
sub
adcb
or
insb
cmc
in
jne,pn
cmp
pop
leave
lahf
into
and
nop
lock
push
outsl
xchg
inc
lea
iret
sbb
xchg
and
sbb
fdivrl
dec
mov
insl
push
pop
jmp
and
mov
xor
call
das
mov
ffreep
stos
push
adc
addr16
mov
std
pop
stc
and
lahf
jl
movsl
shl
or
dec
mov
inc
jne
mov
js
xor
inc
ret
in
sub
jb
std
cmpsb
loopne
mov
mov
mov
xor
into
pop
out
cmpsl
mov
pop
xchg
mov
repz
fwait
push
mov
pusha
shl
in
pop
test
ret
xchg
sub
lods
aaa
scas
out
mov
dec
inc
je
mov
mov
jle
mov
pop
in
pop
jecxz
lock
jp
sti
cmpb
cmpsl
pop
es
notl
jb
jb
mov
and
fimull
adc
in
and
imul
dec
push
mov
add
jge
inc
cwtl
insl
aam
cmp
rcll
clc
jle
daa
je
sbb
push
mov
jl
jbe
dec
movsl
sbb
ja
add
aas
xchg
shl
ret
pop
daa
sbb
xchg
jmp
jo
xchg
fcmovne
insl
cld
mov
out
imul
jb
pop
pusha
xchg
dec
lret
xchg
pop
sbb
sub
in
inc
aam
mov
pop
out
push
mov
push
mov
dec
mov
shr
pop
aas
pop
mov
insl
testb
mov
das
into
push
and
repnz
inc
ds
cmp
jecxz
mov
xchg
adc
adcl
mov
gs
clc
data16
test
out
leave
or
mov
xchg
or
dec
out
mov
adc
cmp
popf
fldenv
sub
pop
shll
push
movsb
push
push
push
or
leave
mov
and
push
into
addl
rol
sarl
sub
outsl
aas
cmc
icebp
add
leave
rolb
mov
mov
imul
mov
adc
sub
or
insl
test
jecxz
mov
mov
push
xchg
into
cmpsb
mov
xchg
xor
jp
add
rcll
xchg
sbb
adc
decb
dec
adc
cmp
dec
sub
xchg
push
or
push
sbb
or
into
in
daa
hlt
adcl
push
in
or
jae
test
mov
pop
dec
outsl
loopne
xor
dec
inc
push
lods
jne
xor
fcomp
jg
out
cmpsb
sbb
stos
arpl
pop
push
or
pop
imul
mov
mov
in
lret
aad
int3
mov
push
and
and
sub
fwait
add
repnz
push
in
add
in
fistps
push
adc
fs
imul
xchg
clc
and
xchg
arpl
jne
nop
and
mov
adc
ljmp
mov
sbb
or
pop
shrb
or
fisttps
cwtl
dec
scas
sbb
push
mov
push
insl
into
sbb
mov
push
pushf
push
mov
mov
xor
ds
sub
aas
test
int3
mov
mov
sbb
or
jl
pop
insl
cmp
push
andl
push
lock
and
push
jb
test
sti
pop
outsb
dec
jle
push
mov
test
imul
xchg
sub
loopne
es
xchg
mov
jle
mov
mov
call
jo
lea
shlb
data16
insb
mov
or
insb
add
pop
das
lret
inc
shl
test
xchg
cmpsl
roll
or
es
cltd
pop
test
inc
lcall
bound
mov
xchg
xchg
adc
jmp
mov
mov
rorl
testl
dec
dec
jl
jmp
xchg
mov
cmp
ja
add
adc
push
outsb
sahf
nop
and
fistl
imulb
and
inc
lcall
in
pop
testl
push
inc
int3
mov
dec
inc
xchg
or
sub
jns
mov
shrl
xchg
loope
cs
aaa
insl
imul
imul
data16
in
lods
cmp
sbb
fsubs
dec
lock
mov
daa
scas
cmp
fcmovbe
jbe
adc
mov
sub
sbb
jb
loop
jle
stos
inc
fwait
cli
loop
cmc
fdivrp
leave
sbb
jge
leave
fwait
dec
or
cmc
mov
addl
cs
xor
xchg
imul
and
adc
popf
sbb
pop
rorl
loopne
cmpsl
imull
inc
test
std
fwait
out
jle
fisubrs
xchg
outsb
xchg
repz
sbb
sub
mov
inc
pop
sbb
cwtl
lea
adc
pop
and
mov
mov
xchg
xchg
js
or
sub
jo
cmp
jmp
mov
mov
mov
pop
cld
fsubrl
dec
inc
mov
pop
or
imul
xchg
dec
or
push
and
xor
lret
in
add
mov
and
or
push
lahf
hlt
in
pop
push
inc
xchg
pop
push
mov
cmpsl
aas
mov
in
clc
xchg
test
imul
cmp
sub
dec
dec
and
popl
sbb
or
jns
pop
aas
callw
arpl
in
sahf
lret
mov
insb
outsb
lcall
incb
mov
icebp
xor
jns
mov
fadds
lds
inc
cmp
and
aas
xchg
lods
cltd
lods
fistl
sub
aas
outsb
push
add
iret
arpl
push
pop
add
jb
gs
ds
add
sahf
shll
hlt
test
inc
jl
mov
xchg
jno
add
ret
mov
jmp
pop
mov
push
sub
push
sub
push
pop
xlat
push
out
scas
decl
mov
sbb
inc
lods
adc
adcl
push
sub
push
movsb
xor
ljmp
roll
jbe
dec
pop
hlt
adc
loopne
adc
repz
mov
es
mov
push
cmp
pop
xor
xchg
mov
out
xchg
and
mov
and
push
and
sti
bound
sahf
pop
dec
int
rcrb
sub
fstps
push
jnp
jle
jbe
fsubs
aas
into
insb
xlat
adc
push
mov
pop
dec
add
data16
movl
xor
mov
cmp
mov
cmp
and
sti
pushf
lods
add
hlt
xchg
jg
aaa
lcall
cld
mov
push
xor
es
imul
ret
jmp
ret
hlt
dec
aas
call
fistpll
adc
cmp
sbb
jg
in
cmp
xchg
xor
mov
inc
inc
fcomp
xchg
arpl
push
sub
pusha
loopne
pushf
imulb
out
test
mov
xor
mov
mov
imul
xor
enter
mov
imul
mov
pop
jl
ss
mov
adcb
inc
cmc
cmp
testb
cmp
out
lcall
imul
test
pop
imul
add
mov
jle
pop
jecxz
jae
icebp
and
and
in
jle
imul
les
xor
xor
add
scas
mov
mov
sub
bound
int
jg
mov
sarl
mov
aad
pop
js
sbb
cmc
dec
out
scas
in
fldcw
mov
ret
dec
xchg
pop
xchg
add
sete
hlt
push
leave
xor
clc
or
ret
mov
pop
cli
dec
jne
jecxz
sbb
jno
lret
mov
hlt
adc
notb
cmp
lods
xchg
cmp
lcall
roll
adc
dec
xchg
add
cmpsl
repz
arpl
scas
mov
lock
jmp
push
add
ja
mov
rcrl
push
pop
iret
sbb
std
in
jle
roll
dec
jg
stos
std
lcall
les
aas
paddsb
adc
add
adcb
mov
add
xchg
or
inc
mov
push
js
mov
mov
aam
mov
mov
jno
xor
inc
lret
adc
pop
dec
jmp
dec
int3
sbb
testl
scas
scas
mov
adc
xchg
ds
sbb
pusha
cmc
dec
mov
fldt
inc
mov
jle
and
dec
addr16
sahf
shrb
xchg
pop
mov
adc
out
stos
movsb
lahf
adc
scas
test
mov
aam
xor
call
or
push
xchg
int3
cmp
jae
lea
out
xor
int
xlat
imul
repz
cmc
add
mov
aam
lcall
leave
cmp
lret
sub
ret
loop
mov
fnstcw
add
sbb
pushf
ljmp
xchg
cmp
into
fcoml
dec
xor
mov
mov
popf
movsb
pop
arpl
and
cltd
test
cmp
or
bound
pop
sub
aas
xor
push
hlt
mov
mov
stc
sbb
xor
mov
pop
push
fisttpl
lods
ret
clc
dec
push
push
sbb
inc
inc
push
icebp
sub
pop
push
adc
outsb
outsl
mov
into
out
sbb
xor
leave
scas
push
fidivrl
es
and
out
pop
dec
mov
mov
es
aam
test
sbb
pop
sbb
mov
jl
scas
idivb
fsubrl
sti
shrl
sbb
mov
push
and
pop
rcll
push
xchg
insl
or
shrb
imul
pop
rorl
fcmovu
inc
pop
push
and
cwtd
cmc
jae
adc
rolb
sub
mov
shl
jle
lcall
je
and
fwait
pushf
push
lods
sub
xor
sbb
pushf
lods
loope
dec
push
rcrb
inc
filds
pop
add
js
adc
ss
loope
ljmp
inc
mov
test
or
int
pop
repz
pop
cmp
aad
jae
cmp
fisubrl
mov
fnstsw
push
lret
inc
lods
jp
fistps
pop
ret
aad
push
cmp
call
adcl
lods
push
xchg
and
cmp
inc
xchg
or
pop
dec
jecxz
icebp
mov
xor
movsl
or
out
inc
adc
push
pop
fistpl
sub
sub
ret
loopne
neg
insb
xchg
mov
push
push
loop
outsl
pop
ror
add
int3
das
mov
push
cli
jae
cmp
dec
sti
mov
lahf
xchg
xchg
or
push
popl
inc
mov
push
loopne
mov
insl
adc
cmp
adc
inc
outsl
es
je
mov
test
lds
push
and
mov
out
cld
dec
mov
mov
enter
and
sub
les
cmp
fcmovu
xor
cwtl
cltd
sub
rolb
mov
jne
and
hlt
push
int
mov
xor
rclb
mov
and
add
pop
clc
into
cmpsl
lds
dec
out
imul
mov
push
pop
stc
xlat
cwtl
mov
lds
lahf
xor
mov
cmp
mov
push
dec
and
clc
jns
arpl
xchg
pushf
pop
cmpsl
and
or
and
mov
jp
decl
out
lahf
divb
or
mov
gs
xchg
cmp
subl
je
inc
jne
fsubl
xor
and
or
pop
jge
cs
cmp
sbb
cmp
xchg
ficompl
orl
out
fld
push
fistl
inc
mov
xor
dec
scas
xchg
and
mov
std
aaa
add
lea
jmp
les
scas
mov
lea
test
dec
inc
sub
js
mov
aam
jmp
jbe
pop
pop
dec
cmp
dec
fdivp
jne
xchg
xchg
add
xchg
data16
xchg
xchg
cs
aad
pop
sbb
bound
pop
popa
es
mov
xor
nop
ficomps
fdivr
fiaddl
sub
arpl
push
ljmp
gs
inc
enter
jl
shrl
cs
push
inc
cmp
push
or
push
sbb
or
jae
fisubrs
dec
adc
dec
inc
jp
iret
mov
mov
loopne
in
rclb
cmp
dec
outsb
push
clc
sbbb
test
mov
test
mov
pop
fstpt
outsb
rclb
jns
sahf
call
jnp
fsubrp
inc
mov
iret
push
sbb
in
insb
xchg
mov
std
xchg
aas
inc
movsl
shlb
push
or
push
cmp
ds
push
pop
dec
lahf
sub
sbb
lock
in
xchg
pushf
arpl
mov
xchg
cmpsb
push
and
sbb
repz
lock
push
rorl
jae
sbb
or
cmp
push
imul
mov
aam
jnp
iret
les
test
xlat
scas
add
cmove
add
and
hlt
inc
mov
jns
andl
mov
cs
cld
ret
jg
pop
pusha
cwtl
scas
xchg
mov
lds
movsl
test
sbb
sbb
mov
and
loop
enter
jbe
mov
dec
cwtl
cld
stos
shll
xor
mov
js
inc
and
xchg
stc
mov
xor
lahf
and
lcall
lds
fidivrl
cmp
sti
stos
adc
mov
flds
lods
mov
mov
test
inc
jge
pop
bound
push
add
out
pop
lahf
sub
test
in
push
sbb
out
ljmp
scas
andl
cld
pop
les
inc
push
jb
and
xchg
test
lret
jmp
xor
inc
cmp
imul
pop
inc
aaa
ds
add
shlb
cmp
mov
adc
xchg
nop
lret
push
sbb
mov
cmpsb
cmp
int3
enter
cmp
rclb
stos
aad
fwait
pop
bound
xchg
enter
shlb
fistpll
mov
push
std
pop
lds
adc
je
imul
mov
add
cmovle
aaa
mov
in
xchg
insb
mov
imul
push
das
sar
mov
inc
cmp
lds
movsl
add
iret
mov
adc
xor
rorl
aad
cld
xor
jp
out
imul
mov
stos
lods
jecxz
xchg
loop
sbb
std
adc
jl
out
out
push
mov
cmpsb
inc
ds
jg
daa
repnz
or
cmpsl
pop
add
mov
mov
aas
mov
sahf
adc
fcoml
and
jns
clc
clc
push
xchg
lcall
aad
xchg
xchg
xor
jnp
pop
outsl
adc
mov
push
push
jg
enter
std
mov
push
mov
outsb
std
imul
pop
rorl
cmp
jb
xchg
cmpsb
jne
sub
in
jo
sub
xchg
mov
int3
stc
popf
xlat
movsl
clc
jge
add
int
pushf
jnp
call
push
sbb
push
test
dec
call
fsubrl
pushf
dec
jge
test
enter
std
sub
int3
inc
popf
cmp
fistps
pop
pusha
insb
imul
and
imul
mov
loope
fwait
nop
loope
insb
pusha
add
jg
dec
filds
bound
push
loope
xor
adc
and
scas
das
js
mov
ficoml
imul
jb
and
xor
cmp
pusha
xchg
out
lock
push
inc
inc
add
es
sub
ds
xchg
daa
aam
rcrl
add
and
mov
push
mov
mulb
mov
pusha
mov
fsub
cmc
push
cld
jecxz
mov
push
addr16
mov
and
mov
dec
mov
pushf
pop
push
xchg
fsub
fwait
pop
jo
mov
jmp
icebp
pop
sub
push
je
add
inc
xor
push
in
push
sahf
aaa
mov
adc
or
mov
sub
fstps
loop
les
mov
loopne
popa
mov
xchg
imul
mov
shlb
inc
mov
mov
xchg
xchg
loopne
sahf
xchg
imul
insb
inc
add
sti
push
jmp
icebp
lds
pop
push
mov
mov
icebp
push
js
std
jno
decl
push
repz
aad
cld
mov
nop
fdivl
movsb
mov
movntps
clc
cmp
jae
xchg
inc
mov
push
pop
or
roll
ja
fldl2e
lcall
insb
mov
xor
jl
inc
xchg
pushf
rclb
mov
mov
test
jo
rcrl
in
int3
push
xchg
or
sub
lods
enter
jae
adc
sbb
lds
lea
jl
sbb
movsl
icebp
mov
add
outsl
mov
or
cmpsl
in
jp
adc
cmp
mov
daa
push
xor
repnz
or
push
insl
enter
adc
push
outsl
jmp
xchg
xor
insb
sub
andl
ret
cld
xlat
xchg
mov
and
aaa
fcmove
test
fsts
aam
pushf
outsl
test
or
popa
push
inc
aad
lahf
cmpsl
sar
loope
mov
xchg
rcr
push
dec
lea
pop
out
pop
pop
aam
xchg
and
sub
xor
cmp
push
sub
fcoml
in
pop
mov
mov
adc
mov
movsl
mov
and
lods
sub
shlb
mov
sbb
cmp
dec
call
xchg
bound
faddl
push
test
cmp
daa
aad
xchg
jecxz
add
xor
aas
push
les
cmp
cmc
jbe,pn
stos
lret
aam
pop
sbb
pop
pop
lock
adc
jo
andl
fstps
fisubrl
xlat
fs
fwait
loope
mov
cltd
sbb
call
fbstp
bound
std
js
sub
int3
jo
or
and
mov
jmp
cs
in
cmp
or
cmp
sub
int
ja
dec
rorl
loopne
pop
mov
fwait
lret
ljmp
pusha
lcall
pop
add
sbb
jns
mov
in
out
xchg
dec
stc
bound
mov
or
mov
cmp
leave
mov
repz
mov
daa
sahf
loope
psadbw
int3
andb
cmp
inc
xor
andb
in
les
mov
push
mov
jle
mov
int3
std
int
mov
mov
mov
jmp
inc
mov
dec
jecxz
jp
cmp
mov
loopne
sub
xchg
mov
jg
les
push
mov
jp
xchg
cmp
inc
movsb
jno
test
and
popf
stos
pop
xlat
pop
in
mov
dec
mov
adc
and
add
ret
pop
imul
add
lcall
fistpll
push
sarb
xchg
ret
int
insl
jnp
sub
sbb
outsb
push
divl
jo
inc
push
sbb
bndstx
push
outsb
dec
xchg
cld
push
je
push
cmp
lock
pushf
mov
or
push
cmp
jmp
mov
mov
loop
or
sti
and
mov
mov
cmp
in
call
mov
adc
mov
into
pop
adc
xchg
arpl
daa
jbe
cmpsl
jmp
dec
jp
cmp
cmp
inc
xchg
sbb
and
push
add
das
rolb
pop
inc
pop
aad
sti
addr16
ja
pop
imul
xor
cmpsl
xchg
stos
pop
inc
xchg
imul
dec
adc
in
inc
pop
lods
pop
lret
in
ds
loopne
xor
or
and
lahf
sahf
outsl
pushf
jno
mov
sub
in
mov
add
into
mov
bound
jmp
mov
test
add
data16
mov
outsl
or
popf
pop
add
xchg
inc
fisubrl
mov
mov
lret
sub
jae
testl
bound
mov
dec
xlat
push
or
ljmp
pop
or
pushf
adc
sbb
xchg
push
inc
pop
jge
dec
add
pop
in
mov
hlt
jp
mov
pop
xor
add
xchg
fisubs
mov
sbb
frstor
push
inc
pop
data16
mov
nop
jne
lock
pusha
inc
push
inc
xorl
push
ror
and
loopnew
fstps
sub
xchg
mov
cwtl
cwtl
movsb
rol
inc
mov
lahf
lcall
xchg
xchg
mov
push
cmp
xchg
inc
push
sbb
fwait
xorl
mov
shrb
jge
jmp
adc
fcompl
xor
ja
jge
test
xor
popf
sbb
cmp
lds
je
fdiv
fisttpll
das
and
cwtl
mov
test
mov
push
xchg
rorb
adc
cmp
dec
ret
jae
outsb
fadds
push
cltd
pop
push
iret
addr16
das
pop
mov
mov
add
dec
add
fldl
mov
lds
ret
or
sahf
rorb
cmc
mov
mov
sub
mov
out
imul
loop
inc
aam
mov
push
imul
mov
aas
sbb
scas
dec
push
push
cmp
cmp
pop
jl
jno
ja
clc
out
mov
icebp
fsubl
add
popf
push
xor
lea
hlt
mov
and
cmp
mov
jle
lds
push
repz
push
pop
ficompl
andb
in
jno
in
inc
sub
lods
push
push
mov
adc
xchg
pop
lret
insb
fdivr
sbb
xlat
push
cmc
adc
lcall
popa
out
sbb
in
pop
stos
lea
sbb
jmp
pop
into
mov
push
jnp
jl
xlat
dec
push
push
das
sbb
bound
pop
and
or
pop
inc
add
mull
xchg
mov
mov
and
stos
inc
outsb
sbb
lret
dec
mov
rcll
pop
inc
cmpsb
xor
jmp
test
js
cmpsl
lret
inc
add
xchg
pop
in
mov
adc
scas
sub
stos
cmp
add
mov
xchg
push
cs
cmp
pop
push
xchg
dec
outsb
pop
sub
lret
in
jae
test
out
stos
push
inc
outsb
mov
arpl
test
in
mov
xchg
call
mov
mov
push
push
stc
outsl
enter
sbb
xchg
pop
xor
cmp
cmp
inc
cwtl
mov
pop
jb
sub
rclb
dec
nop
movsb
repz
sbb
gs
ds
movsl
aad
sub
jge
mov
js
into
adc
jl
lret
jge
cmp
jp
aad
mov
sub
aas
fildl
es
and
add
data16
mov
fs
mov
sti
cwtl
fsubl
mov
mov
test
jae
adc
xor
das
ss
test
jecxz
bound
dec
cmp
mov
leave
aaa
arpl
fdivrl
adc
fcoms
inc
dec
xchg
bound
push
sbb
cs
sbb
sub
pop
shll
stos
mov
mov
std
into
sbb
lahf
std
inc
aam
subl
imul
mov
xchg
dec
clc
jbe
mov
mov
sbb
or
xlat
int3
lods
lds
in
mov
mov
in
jns
fisubrs
mov
lret
xor
dec
or
ja
lea
lea
or
stc
fcom
jo
push
into
jp
pop
mov
ret
cmp
add
popa
rorl
pop
rcrb
shlb
jp
repnz
je
cltd
bound
pushf
xchg
xchg
ja
dec
ja
jnp
push
punpckhbw
stos
inc
mov
cli
es
stc
shr
fidivl
test
xor
mov
lods
je
lea
pop
adc
xchg
ss
mov
push
xchg
daa
mov
repz
addr16
les
xor
sbb
sbb
jnp
ss
pop
sub
aad
cld
ss
fistl
nop
and
testb
int3
pop
jp
jecxz
xorb
cmp
mov
sti
popa
stos
or
popf
mov
dec
add
insl
iret
cltd
mov
aas
ret
mov
and
adc
fcomip
pop
pop
mov
cmp
imul
sbb
pop
jnp
xor
pop
push
cmpl
aaa
hlt
cmp
jb
out
nop
jmp
adc
lods
push
fimuls
or
fidivs
xlat
jl
mov
negb
mov
test
rolb
mov
cmpsl
xchg
outsl
in
ss
xchg
subl
ljmp
push
cli
mov
add
sub
jge
inc
push
lds
xchg
jno
dec
addr16
xor
xchg
jg
outsb
inc
fsubs
cmp
les
fwait
das
test
jne
xchg
lods
and
pop
jo
xor
dec
dec
sub
imul
popf
jns
mov
aam
jnp
imul
inc
dec
lret
subl
sbb
stos
xchg
inc
mov
add
test
mov
ja
je
js
push
mov
mov
insl
outsb
xor
mov
adcb
scas
xchg
jmp
inc
rclb
pop
in
mov
dec
mov
jmpw
xor
jo
sub
scas
push
add
lret
push
sti
push
sub
outsb
enter
push
rcr
cld
add
das
aad
out
out
aaa
jnp
repnz
or
in
sub
sbbl
mov
ljmp
ljmp
inc
fidivrl
adc
test
xor
sub
mov
xchg
jle
shrl
dec
cmpsl
sbb
fnop
movsb
mov
push
adc
cmp
test
sub
add
push
jnp
and
movsb
sbb
jecxz
adc
out
roll
mov
xchg
movsb
xchg
jae
pop
mov
nop
pop
sbb
xchg
push
mov
adc
push
subps
negb
clc
xchg
sbb
cmp
movsb
add
jns
mov
loope
mov
xchg
xchg
cmp
popf
pop
rcll
push
outsl
ret
jbe
inc
aad
fsubr
add
icebp
mov
mov
add
dec
icebp
outsl
push
cltd
jne
mov
stc
in
cltd
outsb
jl
inc
test
leave
xor
loopne,pn
ljmp
cmp
pop
push
arpl
rol
cld
mov
cmp
cmp
popf
stc
mov
les
in
inc
push
mov
and
inc
mov
jbe
add
mov
out
push
fstpl
adc
sbb
pop
dec
adcb
imul
sub
jnp
sbb
cmpb
inc
mov
pop
in
aad
les
or
mov
jns
in
and
stc
dec
ljmp
sbb
outsl
int
or
aam
es
mov
fstl
pop
sbb
add
fsubl
insl
mov
mov
pop
lods
sub
and
jmp
fcoms
subl
cwtl
iret
push
loop
std
aaa
inc
cs
xor
cld
lahf
xchg
mov
in
ffree
add
xchg
xchg
add
mov
dec
hlt
mov
xchg
lea
je
aaa
sbb
iret
push
mov
mov
ret
int
cmp
ret
cmc
clc
or
cmc
dec
cmc
addr16
mov
icebp
xchg
shlb
jg
mov
push
inc
call
aas
bswap
fwait
cmp
pop
dec
mov
sub
scas
push
sub
adc
mov
lds
aam
inc
subb
imul
aam
insl
xchg
sahf
adc
cmp
or
orl
mov
fisubs
cs
test
loope
clc
imul
cmp
jns
stc
push
pop
test
test
lods
shr
mov
cmp
jbe
mov
jecxz
jmp
popf
imul
push
les
sub
cmovns
or
push
xor
jmp
xchg
mov
xlat
das
cli
iret
movsb
addr16
adc
push
sti
xor
dec
popf
dec
cltd
out
xchg
push
call
lea
xchg
lock
imul
lock
scas
fmuls
cld
test
movsb
xor
outsb
cs
pop
outsb
mov
push
lods
or
repnz
dec
xchg
in
lret
cmp
ret
leave
mov
or
cmp
push
adc
inc
xchg
movsb
pop
adc
adc
add
dec
jp
or
adc
inc
mov
xchg
push
insb
imul
jecxz
mov
das
outsb
sub
cmpsl
sub
jno
jb
xchg
push
add
std
insb
popa
jg
push
xchg
pop
mov
jo
adc
lock
jp
lahf
testl
and
cltd
arpl
insb
arpl
sbb
fs
jbe
add
pop
mov
scas
pushf
mov
xor
sub
in
xchg
push
xor
push
cmp
ss
lahf
pop
cmpsb
dec
dec
mov
pushf
mov
jae
in
dec
sub
push
nop
stc
xchg
lock
leave
add
popf
clc
add
jns
lods
cmp
xor
jnp
pop
in
call
pop
sti
adc
into
sub
repnz
repz
int
pop
jge
jo
sub
mov
pop
popf
aam
test
mov
aaa
jge
scas
cmp
in
stos
pop
loop
inc
or
pop
xchg
out
mov
xchg
mov
inc
dec
adc
lahf
jecxz
mov
jae
repz
cmp
fdivl
cmpsb
aad
fildll
es
xchg
cmp
lods
mov
repz
std
sahf
js
stos
fxch
xchg
scas
fldt
loope
mov
mov
enter
fdivrl
or
icebp
xor
jns
mov
lds
sub
insb
out
jle
mov
fsts
lahf
inc
add
loop
fisttpll
out
test
adc
subb
into
int3
lock
or
or
testb
arpl
mov
push
lea
je
mov
pop
fisubrl
sub
addr16
sub
out
push
ret
stc
add
mov
movsl
add
js
lret
sbb
xor
testb
mov
loopne
xchg
cmp
outsl
xchg
jmp
push
je
imul
fwait
into
dec
inc
or
mov
cltd
mov
mov
fcoml
pop
mov
shlb
icebp
xor
pop
mov
xchg
pop
xchg
aas
pop
je
out
sbb
in
xor
sbb
or
lret
jecxz
aam
jne
jae
loopne
adc
rorb
mov
gs
out
je
adc
dec
mov
stos
sahf
addr16
push
lcall
mov
repz
dec
mov
xor
das
pop
sbb
fdivl
cmp
sti
in
mov
pop
mov
pop
push
push
out
push
repz
pcmpgtd
test
xchg
sbb
js
clc
into
lret
into
or
clc
and
stc
lea
stc
xor
mov
mov
dec
jmp
sub
push
sbb
and
in
pop
aam
clc
pop
mov
jae
cmpsl
dec
add
pop
movsb
popf
mov
sub
mov
adc
arpl
fwait
mov
and
enter
into
xchg
pop
or
adc
shll
xor
jp
xchg
mov
dec
adc
mov
and
std
or
jns
test
nop
xor
jle
mov
mov
loop
testl
adc
scas
push
xor
mov
popa
das
jbe
mov
daa
idivl
js
or
lock
pop
xchg
mov
cld
mov
inc
insl
fnstcw
dec
xchg
pop
shll
lret
ret
pushf
cmp
xchg
sbb
sbbb
push
mov
jo
inc
mov
enter
repz
xchg
fbld
int
imul
fisttpl
movsb
xor
lret
mov
push
sti
ficoms
xor
cvtps2pd
xchg
fisubrs
out
dec
sbb
call
jmp
fchs
pusha
xchg
pop
cmpsb
adc
adc
add
pop
imul
pop
or
cmpsl
mov
adc
in
cld
push
sbb
mov
jmp
fs
cmpsl
jno
call
sbb
mov
inc
outsl
jb
or
test
repz
aam
aas
mov
xadd
dec
pop
lret
xchg
push
ss
pop
adc
aam
xchg
mov
scas
rorl
data16
lret
inc
mov
push
sub
inc
popf
outsl
repz
adc
adc
xchg
aad
xchg
out
repnz
or
mov
das
and
or
loopne
cwtl
in
jo
loop
in
and
xor
fcoms
jmp
lret
leave
mov
cmpsb
mov
test
test
xchg
insl
mov
mov
push
sti
je
jns
imul
jnp
shll
rcrl
mov
lcall
and
xor
loop
int3
sub
cmp
pop
hlt
loopne
loope
mov
lahf
das
lahf
push
popa
ds
repz
dec
lret
pop
mov
ja
out
pop
and
pop
in
sub
and
jecxz
cmc
sub
lea
rorl
rol
imul
mov
jg
jnp
and
stos
sbb
pop
push
add
icebp
pop
imul
jmp
mov
pop
pop
popf
cli
mov
sbb
mov
sbb
dec
ds
sub
es
repz
lcall
mov
fisubs
xor
repnz
pushf
xchg
sahf
push
dec
std
repz
gs
jno
sbb
dec
inc
bnd
fst
jbe
cmp
cltd
push
enter
testl
fbstp
test
rorl
mov
sbb
in
sbb
mov
pop
jp
stos
popf
push
rorb
out
push
xor
jno
xchg
mov
pop
ror
mov
jns
jne
imul
push
fwait
das
shlb
jecxz
push
mov
sub
sbb
ffree
sbb
adc
push
je
jae
in
icebp
pop
add
jno
cmc
mov
repnz
pop
cld
dec
rorb
push
mov
mov
cmp
xor
dec
mulb
hlt
cwtl
test
sub
add
and
jae
loop
je
jbe
iret
adc
mov
cs
rolb
into
xor
mov
adc
sti
stos
mov
insl
push
push
mov
mov
es
cld
into
xchg
inc
in
popf
jle
aad
out
jne
mov
fdiv
int
shrl
push
push
sub
imul
and
jae
add
mov
mov
out
inc
jbe
add
movsl
fdivrl
fimuls
xor
cwtl
movb
jns
fidivrl
pop
mov
out
xchg
into
scas
fs
nop
pop
adc
push
bound
inc
push
lods
add
je
inc
sbb
jle
dec
fcompl
fnstcw
dec
rorb
push
adcl
call
mov
xor
in
dec
inc
nop
push
fists
std
inc
jl
insb
xor
dec
int
pop
in
sub
clc
mov
arpl
mov
jae
daa
cld
fdivrl
shrl
fdivrp
cmp
orl
mov
test
in
stos
test
nop
sub
mov
insb
xchg
ja
dec
dec
push
push
ss
jns
sbb
mov
fldl
loop
lret
and
xor
push
pop
lods
lahf
adc
dec
es
fistpll
mov
push
adc
mov
pop
sahf
fildl
gs
mov
xchg
cmp
xchg
loope
andb
sub
dec
mov
xchg
pop
xchg
arpl
xchg
cmp
jl
add
jmp
ds
add
cltd
aas
add
stc
cld
iret
pop
scas
pop
dec
mov
fldl
mov
lcall
fisttpl
xchg
sbb
pop
sbb
inc
lret
dec
ja
pop
outsl
ja
pop
mov
nop
cld
test
mov
pusha
andb
shlb
aas
pop
inc
mov
sub
mov
adc
fsubl
inc
and
mov
mov
adc
aas
roll
jg
or
loopne
mov
pushf
lret
fadd
gs
xchg
aam
arpl
mov
clc
lds
iret
scas
ds
fcomps
or
xchg
mov
repnz
pop
or
inc
and
repz
shlb
fisubrl
push
fistpll
mov
push
xchg
push
push
lods
mov
movsl
or
rcll
cmp
jb
mov
mov
ja
pop
and
cli
or
mov
xchg
cmpsl
and
jae
xor
pop
xorb
mov
xchg
decl
aam
sub
aaa
cmpsb
mov
repz
outsl
sub
cmp
rol
xor
pop
xchg
xlat
push
xor
jecxz
mov
xlat
adc
xchg
xlat
dec
ds
cli
aam
aad
sub
mov
das
imul
adc
pop
repz
call
adc
addl
imul
mov
ret
fstpl
mov
test
adc
or
rcl
mov
push
inc
xchg
arpl
mov
loope
push
cmp
mov
pop
nop
push
dec
fisttpl
jae
inc
call
lods
aad
cwtl
mov
cmp
xor
scas
wbinvd
cli
mov
or
jp
add
mov
fcompl
neg
ret
add
sub
or
ja
pop
ret
dec
or
repnz
mov
inc
js
mov
cltd
adc
test
or
stos
pop
mov
jo
scas
pop
sbb
ret
stc
sahf
in
in
fildl
xor
sub
xor
xor
mov
jb
out
notl
dec
xor
mov
das
push
les
push
in
inc
mov
je
ljmp
mov
bound
cltd
fnstsw
dec
test
push
sti
inc
insb
and
push
pop
xor
aad
in
jno
or
sub
ljmp
sbb
xchg
sti
imul
pusha
and
sub
xor
mov
cmp
mov
nop
pop
js
and
mov
rolb
inc
mov
fdivrs
aad
push
or
cmc
aas
push
sub
xor
js
lret
fisttpll
jne
mov
cli
jb
pushl
lret
sub
jp
ss
imul
fcompl
mov
cld
cwtl
ret
push
cmp
xor
gs
je
xchg
xor
cwtl
xchg
sub
xor
nop
jge
jnp
cmc
aam
sbb
xor
insl
xchg
shll
or
mov
jne
cmc
mov
mov
jle
insl
ror
adc
lods
add
mov
mov
fcomps
loop
sbb
add
or
adc
xchg
mov
pop
mov
adc
adc
je
aam
cs
and
inc
fisubl
add
jl
and
fsub
sub
inc
add
or
mov
icebp
jge
adc
js
or
mov
pop
mov
repnz
cmpsl
mov
ss
mov
fsubrs
pop
shrb
ja
pop
jno
stc
insl
dec
lcall
jnp
push
pop
push
sub
ljmp
iret
int
xorl
mov
scas
pop
cwtl
outsb
push
adc
add
sub
sub
stc
std
fsubrs
test
sbb
push
movb
fimuls
pusha
push
fdivrp
xchg
cmp
daa
filds
fdivrp
inc
push
or
mov
js
pop
mov
or
push
ret
cs
cmp
leave
push
push
stc
and
mov
dec
scas
xchg
mov
xchg
in
out
add
push
out
orb
fistl
test
lock
mov
cs
dec
pop
xlat
je
call
pop
and
xchg
sub
xor
sbb
sub
ret
in
xchg
cmp
dec
adc
push
xor
xchg
jp
add
xchg
ret
into
adc
pusha
mov
addb
stos
test
mov
sub
std
mov
mov
inc
cmp
movsl
cs
fs
dec
sti
push
sti
cmpsb
je
jae
into
cwtl
cli
and
inc
fdiv
cwtl
mov
int
or
lds
aaa
xchg
into
imul
and
dec
data16
out
inc
cli
xor
pop
aas
clc
xor
jge
in
lcall
orb
fdiv
jg
cld
stc
lds
jnp
lock
pop
ja
out
push
loopne
cmp
jo
sub
or
xor
popf
arpl
jge
pop
fcomps
sahf
cmp
movsb
fcoml
adc
clc
cli
fwait
idivl
outsb
push
loop
ret
je
inc
lret
adc
jp
pusha
mov
mov
mov
arpl
mov
mov
ficompl
jg
adc
xor
test
jg
mov
outsb
lcall
fcmovnb
mov
jo
mov
testl
hlt
addr16
insl
adc
dec
dec
lea
adc
clc
push
push
in
mov
popa
pop
mov
jb
enter
ud2
add
sub
and
add
mov
push
lods
test
ja
adc
mov
movsb
out
cmpsl
lods
insl
mov
xor
pop
add
sub
mov
push
pop
jecxz
pop
jne
filds
cmpl
iret
pop
ja
xchg
je
xor
jecxz
out
das
pop
sub
cmp
adc
nop
xor
sub
ficompl
nop
pop
mov
cmp
inc
daa
loop
out
daa
and
fnstenv
sub
sub
inc
into
or
push
add
add
mov
and
out
xor
xlat
std
adc
mov
arpl
fs
shrl
iret
movsl
mov
cmp
call
adc
inc
push
mov
push
add
faddl
dec
or
cmp
test
clc
test
shr
lret
sub
cmp
ja
hlt
idiv
xchg
pop
mov
sti
push
or
add
lods
mov
dec
fnsave
pop
xor
jle
or
ljmp
ja
int3
jecxz
out
add
aam
cmpsb
fs
loop
fiaddl
add
pop
aad
icebp
jle
stos
negl
jmp
das
xor
sbb
icebp
es
jl
sub
test
insb
pop
xor
or
shlb
dec
jae
loopne
cwtl
mov
jmp
adc
jp
in
lcall
cli
adc
cwtl
inc
or
sbb
add
and
mov
jle
fildl
sbb
inc
jg
daa
jbe
jns
int
mov
push
lods
popf
dec
ret
or
addr16
jmp
pop
mov
std
pop
std
sbb
mov
test
dec
push
mov
xor
mov
lea
mov
push
xchg
out
sbb
xor
cmpsl
pop
jg
enter
lods
add
inc
mov
jo
cwtl
ja
inc
xlat
test
movsl
push
mov
or
sarb
pop
xchg
xor
pusha
cmp
pop
lock
sbb
sub
push
outsb
cli
cmp
push
movsb
sub
cld
sub
push
push
fstps
repnz
pop
lret
xor
mov
out
sub
out
push
ror
cmpsl
mov
sbb
add
lret
add
in
jmp
mov
icebp
movsl
xlat
nop
arpl
movsl
push
enter
pop
call
dec
xchg
jo
fidivs
sub
jne
adc
test
mov
es
inc
pop
pop
enter
int3
clc
lods
mov
out
mov
sbb
repnz
mov
mov
fwait
pop
pop
inc
push
mov
xor
adc
sbb
lcall
xchg
inc
push
or
outsl
push
adc
in
jp
inc
outsb
lret
and
and
dec
jmp
cltd
adc
loope
loopne
push
mov
and
aad
adc
fldenv
jae
fwait
loopne
or
jb
inc
xchg
xchg
cmc
daa
aas
sbb
mov
push
aam
jae
sti
addl
mov
push
notl
mov
stos
stos
fcoms
cmp
rcll
rol
imul
lods
vfrczss
cmp
or
and
sub
rep
pusha
call
jmp
mov
inc
push
and
fmul
adc
push
sti
adc
dec
jne
and
sbb
scas
mov
in
repnz
jmp
mov
mov
and
mov
adc
push
mov
jge
scas
cwtl
aad
icebp
pop
and
dec
sti
nop
pop
loope
mov
sbb
mov
adc
xchg
pop
and
aaa
cmpsl
xchg
inc
loop
rorl
push
fcmovnbe
push
push
js
pushf
jae
mov
xchg
mov
push
sbb
test
mov
cmp
fwait
pushf
sbbb
or
and
adc
push
jg
ret
push
movsl
xor
pop
dec
jg
cmp
mov
ss
loop
inc
xor
out
add
inc
mov
inc
adc
dec
in
push
por
into
inc
mov
ror
and
xor
mov
mov
sub
lahf
and
pusha
inc
jle
inc
and
jecxz
inc
js
xor
repz
inc
mov
ja
push
and
mov
in
rclb
jbe
xchg
lret
xor
aaa
insl
xchg
push
jl
into
xchg
mov
sbb
sbb
mov
outsb
js
dec
jle
es
mov
rcll
mov
add
mov
push
loop
sti
jo
cmp
data16
in
ds
mov
pop
out
das
mulb
popl
and
aas
movsb
ljmp
sbb
jl
push
je
mov
into
adc
inc
loop
in
cmpsl
lods
mull
test
push
loope
movsl
fisubs
loop
cmp
push
xor
push
inc
out
adc
cmpsb
clc
in
pop
jno
pop
xchg
divl
mov
movsl
mov
lcall
test
mov
out
in
mov
hlt
hlt
xchg
jp
sbb
xlat
push
pushf
dec
iret
leave
jne
sub
adc
pop
and
testb
add
movsb
popa
idivb
outsl
mov
dec
movzbl
sahf
lock
lret
popf
imul
push
and
aam
imull
outsl
xor
add
fcmovnu
cmpsl
mov
push
pusha
xchg
jg
fucomi
daa
daa
loop
dec
cltd
jmp
jbe
xlat
pop
jl
js
insb
lahf
push
push
mov
push
int
es
ja
mov
jmp
jmp
mov
data16
pop
aas
lahf
leave
inc
sbb
cmp
std
add
movsl
in
outsl
movsl
pop
pop
add
mov
imul
or
in
cmc
and
outsl
xchg
xor
sub
cmp
rorb
ss
mov
mov
add
jo
lods
dec
jg
jo
mov
inc
ret
jne
jb
dec
push
sti
arpl
mov
adc
out
in
mov
je
rcr
cmpsl
jecxz
hlt
sub
jnp
and
adc
mov
and
data16
popa
std
and
inc
pop
jmp
cmpsb
jo
mov
or
fistpl
jns
rcr
cmp
out
stos
jb
push
sti
addl
aad
iret
sbb
push
sbb
jl
and
aam
mov
dec
mov
fcmovne
in
scas
sbb
mov
mov
sub
loope
lret
cmp
cld
push
mov
arpl
and
add
and
mov
mov
fisubs
js
lcall
mov
les
adcb
or
es
int
xor
jae
mov
sbb
sarl
mov
mov
rcr
leave
push
xchg
fidivrs
jns
inc
ja
imul
ds
and
mov
out
mov
cmp
aas
mov
daa
cs
sbb
iret
dec
push
mov
push
adc
fdivr
ljmp
cmpb
cmpsb
fcoms
mov
pop
mov
cmpsb
dec
stos
push
push
in
mov
jns
in
xchg
idiv
mov
and
aam
mov
mov
sub
and
dec
or
loopne
mov
adcb
jne
adc
or
sub
lds
loopne
or
ja
lock
dec
into
mov
decb
fisttpll
xchg
aam
mov
push
nop
ret
popf
push
jb
xor
mov
stos
cli
pop
jl
xchg
popa
push
xor
rcrb
sub
cltd
pusha
adc
sbb
cmpsb
aas
cmpsb
xchg
adc
fsubrl
cmc
clc
sbb
cs
jmp
lea
xor
into
dec
or
mov
add
mov
aas
movsb
std
data16
add
js
add
jb
lea
jmp
sbb
icebp
xor
add
std
pop
test
inc
mov
fisttps
dec
xchg
stos
sti
scas
jle
mov
or
xchg
mov
pop
lods
xor
push
cmpsl
scas
cmp
ss
adc
jl
or
sbb
cmp
add
stos
aas
adc
cmpsb
fwait
push
sbb
out
cmp
loopne
jle
mov
jo
pop
mov
ficomps
push
adc
ljmp
and
push
rclb
icebp
lds
loopne
int3
pop
lods
sarb
in
mov
cmp
xchg
repz
pop
lock
xor
imul
stos
inc
xchg
mov
or
pop
ficoml
inc
mov
jo,pn
loope
iret
lea
sbb
xlat
cmp
push
fisubs
sub
cmp
jl
sti
movb
push
fcomps
cmp
xor
mov
inc
out
or
in
jb
or
sbb
pop
daa
or
shll
fldt
jle
pushf
aam
sti
push
xchg
and
movsb
fmuls
jb
add
jae
test
cmp
js
dec
mov
pop
push
pop
insb
xor
mov
int3
inc
fnstcw
repnz
js
rclb
cmp
and
mov
fmuls
xchg
or
testl
iret
mov
or
sbb
xor
xchg
or
xchg
out
jne
mov
es
fidivl
testb
jns
addb
push
xchg
mov
inc
inc
jb
mov
jl
adc
test
add
xchg
shll
mov
scas
mov
cmp
lock
icebp
dec
jg
sahf
or
loopw
pop
push
adc
jnp
movl
jge
push
sub
js
inc
pop
dec
arpl
incb
iret
push
dec
or
dec
sub
in
repz
or
xchg
sbb
mov
add
jp
add
jo
push
lcall
jns
push
xchg
ds
xlat
pop
stos
xchg
ljmp
mov
or
fdivrs
pop
add
or
fldenv
nop
and
xor
loopne
out
pop
lret
enter
call
sub
lret
out
gs
sbb
ret
sub
or
mov
add
mov
aas
mov
mull
inc
inc
xchg
movsl
fwait
cmpl
dec
ljmp
enter
int3
mov
mov
cli
jnp
outsb
rorl
dec
and
mov
dec
sbb
loop
sub
flds
pop
mov
dec
pop
lock
pop
out
fs
idivl
es
inc
mov
bound
shrl
gs
fyl2x
inc
mov
es
insl
adc
add
dec
adc
jb
fbld
into
jge
aad
pop
push
outsb
rcrl
aad
aam
cmp
adc
in
fisttps
xor
lods
xlat
pop
adc
add
and
xchg
mov
and
in
out
testl
hlt
popf
loopne
out
add
jbe
shlb
leave
fstps
popa
cld
in
jle
dec
inc
sub
add
xorb
cmp
pop
push
xor
leave
scas
int3
notl
sbb
inc
inc
add
imull
in
daa
inc
sahf
ja
inc
jno
inc
mov
repnz
inc
or
leave
cmp
fistl
leave
lock
cmpsl
sub
jl
lret
mov
inc
sub
stc
rcrb
sub
test
mov
mov
hlt
jo
outsb
or
fyl2x
es
push
or
xchg
mov
shrl
adc
out
inc
ds
lods
loopne
xchg
xchg
lods
xchg
dec
and
lea
out
ds
push
rolb
push
inc
or
jle
push
jns
or
mov
mov
popa
and
cmpl
mov
pop
ret
fidivs
cltd
push
fiadds
push
imul
into
pop
push
sbb
insl
or
popf
inc
bound
or
pop
xchg
adc
repnz
rcrb
xchg
dec
ljmp
push
dec
mov
lea
pop
dec
dec
sbb
mov
fucomp
xor
add
xchg
mov
lahf
movsl
fnsave
push
ret
and
cmpsl
jg
sub
insb
dec
das
add
mov
ficompl
push
clc
add
xor
lods
inc
test
repnz
test
pop
sub
jbe
mov
outsl
dec
outsl
cmc
jnp
sarl
xchg
rcll
fsubr
mov
outsl
xor
xor
mov
aas
in
and
fsubrl
shrb
ds
adc
adc
pop
mov
dec
cmp
ljmp
ss
mov
xchg
out
jg
nop
jae
push
mov
inc
shr
adc
inc
xor
cmpsl
push
mov
xor
fadds
push
test
sub
fbld
mov
ds
imul
mov
sub
test
sub
pop
lea
mov
hlt
out
cwtl
test
mov
cmp
inc
dec
inc
jae
cmc
mov
cli
dec
lods
cmp
mov
jle
sub
or
inc
outsl
push
daa
jg
nop
sti
push
sbb
psubusw
and
int
push
popl
fbld
pop
xchg
repz
sub
es
mov
mov
imulb
sub
sbb
or
mov
mov
stos
in
cld
xor
pop
pop
mov
stos
imul
xchg
sbb
dec
and
pop
xchg
cwtl
addb
mov
mov
out
sbb
push
adc
or
push
ja
fldenv
rol
mov
insb
cmp
pop
enter
cmpb
jb
xchg
ret
ja
aaa
add
loopne
mov
sub
js
adc
inc
mov
sbb
xor
stc
adcl
sbb
sti
sub
push
repz
filds
pop
push
adc
stos
dec
xlat
mov
jb
arpl
test
imul
out
or
leave
fildl
jne
loop
aaa
lret
ja
rorl
inc
rcrb
or
sarb
and
adc
mov
push
inc
pop
mov
ret
or
addr16
mov
ljmp
daa
add
les
inc
leave
add
imul
dec
push
mov
push
mov
pop
push
aad
push
mov
xchg
js
push
sbb
jnp
into
push
mov
mov
insl
or
push
and
or
jnp
fsub
add
xor
push
cmp
fsubs
inc
mov
cld
aas
mov
jg
in
dec
imul
scas
push
lret
pusha
loope
jno
jns
test
int
outsl
stc
sbbb
inc
cld
or
clc
rcrb
lds
jp
cmp
into
add
mov
lock
adc
adc
test
lds
jo
lcall
aad
jno
stos
sbb
jmp
xor
sarb
cmp
orl
jecxz
cltd
inc
sbb
shll
enter
loopne
cmc
push
mov
in
jle
bound
lea
es
jnp
test
jns
jmp
push
inc
cmc
add
add
and
in
mov
add
push
icebp
push
addr16
lcall
dec
das
mov
fnstenv
out
push
push
jl
push
add
imul
enter
pop
in
out
jnp
mov
ss
pop
mov
repnz
outsl
xor
push
and
out
and
ss
sahf
jns
jo
fsubp
push
jge
sub
int
adcl
je
lods
adcb
scas
sub
subl
dec
lret
movsb
ss
xlat
notl
mov
outsb
mov
cs
lahf
out
dec
xlat
popf
cld
xchg
mov
addr16
mov
outsl
mov
mov
cmp
xchg
xor
outsl
adc
stos
inc
mov
scas
xchg
adc
stc
sub
push
and
xor
mov
dec
jp
sub
mov
jae
or
daa
addr16
movl
sub
lock
jns
shl
or
dec
sbb
cmp
mov
push
cmc
push
jg
jl
nop
jns
xor
xchg
adc
push
dec
pop
mov
cltd
pushf
push
push
ds
je
push
enter
lea
int3
adc
lcall
imul
fwait
insl
mov
loope
sbb
sbb
jnp
push
jmp
inc
dec
pop
add
inc
mov
arpl
fildll
lock
sarb
inc
inc
gs
gs
loop
jb
scas
mov
pop
sub
icebp
or
mov
inc
ret
sbb
mov
xchg
mov
clc
hlt
xchg
mov
pop
ljmp
das
ficomps
sarl
xor
sub
leave
in
daa
imul
das
addr16
xchg
push
jnp
sub
or
and
subl
gs
cwtl
ss
inc
in
push
nop
mov
ds
xor
mov
cmpsb
imul
pop
mov
imul
cs
or
loop
stos
and
add
out
pop
arpl
pop
jmp
xchg
dec
imul
lret
scas
cmp
pop
mov
scas
inc
mov
xchg
popf
shlb
pusha
test
add
xchg
cmp
cvtdq2ps
ja
shl
int3
call
xor
jg
push
testl
mov
clc
ja
and
jo
mov
push
sbb
cmp
insb
outsb
mov
xor
mov
and
xchg
ret
adc
add
shl
sub
add
out
inc
sub
pop
jg
sbb
mov
xchg
mov
pop
fnstsw
pop
and
mov
lock
add
cmpl
idiv
jbe
leave
xchg
lock
pop
sub
jb
test
faddl
mov
testb
jg
mov
les
out
loop
pop
cli
xor
xchg
sbb
gs
outsl
stos
fwait
js
mov
pusha
fdivs
inc
cmpsb
orl
mov
dec
jae
mov
sahf
stc
pop
inc
cwtl
jmp
cmp
insl
jle
icebp
lock
enter
push
enter
push
shr
cmp
or
leave
loopne
mov
hlt
insl
jg
addr16
pop
xor
push
or
or
dec
xor
cmp
cs
test
mov
pop
xchg
cmp
sbb
or
clc
in
or
sbb
xchg
or
gs
iret
mov
lret
jnp
jno
jmp
insb
or
push
cld
fwait
sub
mov
cld
ds
outsl
gs
fcmovnbe
call
jle
push
mov
dec
lret
daa
loopne
mov
xor
rcl
dec
push
pop
cmpsb
mov
sar
jmp
iret
sub
pop
pop
dec
xchg
cmp
sbb
addb
sbb
xor
jg
nop
dec
insl
stc
dec
pop
inc
add
add
or
cmp
les
adc
inc
loope
inc
push
or
cmp
ljmp
insb
mov
cmp
xor
mov
fwait
and
inc
outsl
nop
rcll
stc
inc
sub
imul
sbb
adc
movsb
jle
push
inc
pop
adc
filds
jnp
aad
cmp
int3
lret
adc
mov
lret
outsl
aad
jmp
adc
sahf
jns
mov
push
dec
pop
mov
stos
push
scas
sbb
xchg
ljmp
test
xchg
fwait
or
mov
bound
inc
pushf
sub
arpl
dec
xor
pop
stos
arpl
dec
test
sub
xor
insb
cmp
mov
repz
sbb
icebp
and
adc
xor
jne
mov
inc
jg
addb
push
jae
cmp
adc
mov
rorb
idivb
std
sbb
push
mov
in
push
xor
adc
mov
and
cmc
pop
mov
mov
arpl
cltd
or
or
fisubl
jns
out
or
pop
adc
jmp
andb
andl
data16
jle
lods
data16
movsb
mov
sbb
add
xorl
loopne
push
sbb
mov
adc
jp
outsl
into
iret
xor
movsb
push
and
aas
fs
and
mov
imul
mov
jmp
scas
inc
xor
stos
pop
clc
sbb
loop
push
sbb
mov
aad
mov
sbb
jg
or
inc
hlt
dec
mov
cmp
jno
out
and
enter
out
lods
aam
sarl
cwtl
xchg
adc
shr
out
push
xchg
insb
pop
jp
lods
ss
orb
mov
push
out
fsubp
popa
push
js
push
pop
inc
cmp
lds
cmpsb
adc
fwait
and
sbb
pushf
mov
mov
push
cmp
cmp
movsl
les
push
push
adc
ds
rcll
jnp
xorb
jg
idivw
movsl
adc
jbe
jmp
pop
aas
or
inc
mov
sbb
mov
outsb
cwtl
into
pop
push
inc
dec
xchg
fdiv
shll
mov
in
xlat
popa
mov
loope
sbb
and
outsb
add
jg
ret
jnp
xchg
insl
push
movsl
inc
js
dec
add
xor
dec
cs
xchg
out
insl
and
xchg
mov
fisubs
mov
pop
jge
or
or
push
imul
addr16
cmpsb
and
arpl
insb
nop
mov
dec
scas
aaa
pusha
outsb
add
pop
aam
cwtl
mov
sbb
movsb
xor
imul
scas
add
pop
es
xrelease
xor
cwtl
cld
xchg
pop
xchg
fcmovu
jo
cmp
pusha
push
add
lea
bound
add
cmp
sub
insb
test
xchg
add
mov
cmp
cmp
jg
pop
sub
lret
dec
imul
in
mov
jle
mov
cmp
xor
and
lcall
xlat
push
mov
sbb
int
mov
inc
or
ljmp
fistpl
push
shlb
pop
iret
push
cmc
push
sub
xor
fidivl
sbb
sbb
nop
or
repnz
and
mov
dec
push
lret
jbe
scas
popa
sub
orl
pop
adc
ret
sub
jecxz
push
mov
clc
sub
out
pusha
mov
or
rclb
sbb
andb
push
ds
xorb
sbb
in
dec
idivl
mov
xorl
dec
fdivr
idivl
repnz
mov
mov
into
aam
xchg
jae
sub
push
jle
mov
pop
ret
sbb
xchg
test
jle
cmc
inc
cmp
add
rcrl
jno
enter
pop
pushf
push
aaa
xchg
mov
inc
or
mov
dec
lock
sub
jae
jmp
fstps
sub
pop
negl
mov
jp
xor
jns
adcl
out
dec
andb
jle
pop
sarl
jle
pop
dec
jne
ds
psubb
orb
sbb
addr16
leave
or
cmp
cmpsb
push
jl
inc
inc
mov
gs
rorb
fsubrp
sbb
mov
setbe
mov
das
xor
insl
sahf
xor
loope
data16
incl
aad
or
fisttpl
mov
fwait
mov
sub
clc
push
xlat
inc
rol
mov
mov
aaa
cli
mov
movsb
cltd
negb
into
sbb
sub
and
or
icebp
in
push
lock
out
xchg
mov
sti
sub
es
test
ljmp
in
sub
push
mov
es
jp
pop
sbb
imul
mov
dec
sbb
ds
mov
stc
xor
sbb
jmp
bound
adc
ficompl
pop
fcmovnbe
xor
in
xor
push
push
mov
pop
sbb
xchg
pop
ret
add
xchg
sbb
outsl
lods
fstl
mov
movsl
xchg
ss
xchg
jb
xor
sahf
ficoml
jbe
mov
bound
push
mov
xor
mov
andb
repnz
xchg
mov
in
sub
add
cmp
xchg
mov
xchg
mov
popa
int
dec
leave
xchg
out
scas
fnstenv
push
lret
sahf
pop
cmp
test
les
rcl
rcll
jmp
add
lahf
pop
insb
pop
out
cltd
inc
insb
jmp
jl
xor
adc
push
jns
jnp
orl
popf
int
jno
pusha
loope
mov
repnz
data16
mov
mov
sub
out
and
or
mov
ja
cmp
xor
inc
xor
mov
mov
mov
mov
and
jbe
addb
in
pusha
les
aam
jle
repnz
cmpl
jmp
and
mov
ds
loope
inc
mov
dec
add
das
cmp
loope
cmp
mov
into
popa
aam
addl
dec
movl
push
sub
movsb
xchg
cltd
fmull
repz
scas
movb
fistpl
imul
jbe
push
pop
cli
or
popf
nop
xor
cltd
xchg
insl
mov
outsb
insb
idivl
mov
addr16
jnp
and
pop
mov
sub
inc
test
sahf
mov
mov
rolb
sub
jbe
sub
fxch
aam
sub
mov
pop
jmp
icebp
sahf
adc
sahf
fildll
mov
cmp
sbb
lods
mov
and
cld
sbb
pop
mov
add
sti
dec
dec
dec
and
popf
test
sub
adc
into
repnz
hlt
dec
std
mov
shld
addl
cmp
mov
movsb
inc
fsubl
mov
cwtl
mov
sbb
stos
out
add
lods
inc
jge
mov
mov
ret
cmpsl
cwtl
dec
mov
mov
imul
jns
dec
jge
adc
xchg
imul
xchg
push
jo
rcr
je
sbb
and
mov
push
cmp
fmull
addr16
imul
dec
pop
cmc
enter
cwtl
sti
out
pop
jns
loopne
mov
out
bound
ss
mov
insb
fadds
movsl
call
adc
iret
and
xor
push
jle
orl
aad
rorb
or
push
es
fwait
out
std
mov
xchg
sti
pop
jecxz
inc
push
mov
adcl
mov
inc
sub
mov
sbbl
scas
outsb
pop
stc
fimull
dec
mov
cmc
inc
pusha
cs
stos
fldl
movsl
dec
notl
movsl
sub
xchg
or
dec
mov
pop
add
test
xor
into
jmp
xor
sub
jecxz
mov
lock
sarb
xchg
ret
jne
mov
arpl
sbb
jmp
test
xor
addr16
jns
cmp
arpl
pusha
cwtl
cwtl
push
into
jp
int
iret
push
sbb
or
push
cmp
arpl
scas
das
ror
mov
pop
mov
movsl
pop
bswap
mov
mov
repnz
aad
cmp
and
outsb
jo
push
pop
and
arpl
clc
xor
in
int
cmp
sarl
ljmp
sbb
int
jns
and
adc
dec
xlat
jae
nop
cmp
mov
push
loopne
popf
jp
sub
mov
and
push
insl
ret
mov
xchg
out
mov
fs
aad
fs
or
mov
cmc
and
sbb
jns
iret
inc
adc
sbb
push
mov
aad
repnz
xor
andb
push
mov
sub
inc
pop
dec
mov
mov
pop
xchg
cmp
xor
xchg
loop
fs
adc
mov
stos
filds
fbstp
shr
and
push
scas
pop
sub
mov
test
xor
sub
pop
cmpb
arpl
mov
add
iret
fstp
cwtl
shl
dec
test
clc
ds
jbe
xchg
aam
rol
fists
test
insb
lock
push
iret
xchg
pop
cmpsl
std
add
or
jne
movsl
stos
dec
scas
sbb
in
hlt
xchg
loopne
iret
iret
jbe
outsl
dec
lahf
cwtl
insb
cmp
pop
dec
sbb
push
pop
mov
loope
jp
xor
jp
and
and
imul
adc
mov
ss
inc
sbb
mov
data16
xchg
mov
xchg
cli
pop
call
andb
sub
mov
pop
mov
cwtl
push
clc
arpl
cld
jmp
lods
popa
ds
jl
push
inc
out
and
mov
ds
movsb
fistpll
xor
lods
and
jp
adc
xchg
clc
out
aaa
insl
xor
ss
mov
sbb
sarb
les
fwait
jl
pop
sti
pop
jle
add
in
pop
and
in
sub
push
cwtl
jmp
mov
std
cmp
fcomp
in
js
enter
xchg
add
xor
fcoms
mov
daa
int
mov
out
adcl
mov
jo
jns
cmp
fisttpll
push
mov
stos
sbb
test
or
stos
js
and
push
mov
xchg
leave
jg
arpl
xchg
sti
ret
sbb
or
sub
ljmp
jge
or
push
lods
mov
push
lea
mov
xlat
rcrb
mov
sti
shrl
xor
loop
dec
sbb
nop
fisubrs
sbb
and
adc
xor
mov
dec
pushf
xor
mov
mov
cld
sub
popf
pop
inc
mov
or
mov
popa
fwait
and
jb
aam
mov
xchg
aam
pop
cmp
sbb
dec
inc
fidivs
call
out
xchg
dec
add
mov
mov
insl
pop
jp
sbb
add
jmp
inc
and
out
add
push
ljmp
adc
jae
push
jle
pop
divb
aaa
movsl
push
pop
pop
dec
or
mov
inc
xchg
roll
pop
jns
mov
xchg
sub
scas
fldt
hlt
icebp
xchg
push
lods
in
lds
add
mov
scas
test
adc
popf
insl
fisubl
push
mov
ficoms
aas
fs
inc
mov
cmp
pop
stos
jmp
in
push
test
mov
in
inc
adc
mov
scas
push
daa
jo
addb
outsb
cmp
lret
loopne,pt
popf
mov
jae
xchg
clc
push
xor
fldenv
xchg
xchg
stc
sbb
sub
movsb
stc
sub
xor
and
push
je
cld
int3
in
xchg
movsl
sarb
lock
sub
das
mov
xor
adc
cwtl
lods
sub
xlat
out
daa
and
mov
mov
pop
lcall
mov
daa
jae
xorl
jge
jns
ss
les
jmp
mov
pop
mov
adc
shl
fidivrs
dec
and
and
xchg
pop
ret
mov
add
mov
inc
add
sti
jns
push
lcall
push
lret
xor
in
inc
inc
pop
and
js
clc
sbb
xchg
jmp
into
imul
inc
add
sbb
and
cmp
push
jno
repnz
cld
cmp
dec
pop
rolb
xchg
dec
jne
pop
xchg
out
out
xor
adcl
inc
jns
cli
xchg
xchg
cli
dec
or
insb
sub
and
sbb
minps
test
in
ret
imul
sub
jne
add
cmp
pop
sub
mov
sub
int
mov
push
leave
xor
pusha
push
cmp
int
das
push
fwait
lret
cmp
or
imull
icebp
mov
inc
xor
cmp
mov
inc
insl
aas
movsb
or
and
xchg
and
xchg
sahf
shr
iret
inc
pop
icebp
aaa
push
push
cmc
inc
inc
outsl
imul
cmp
hlt
pop
and
sti
adc
pop
mov
dec
push
inc
mov
mov
adc
inc
popf
mov
xorb
out
insl
ds
and
mov
daa
pop
xchg
cs
push
sub
adc
cs
fwait
and
out
push
inc
or
popf
xor
cld
push
dec
mov
stos
jbe
inc
adc
cmp
pop
or
inc
push
push
cmc
scas
gs
lods
sub
xlat
stos
cld
outsb
mov
mov
sarb
mull
cmp
and
sub
stc
imull
fs
or
aam
fcomp
jp
cltd
in
aam
ret
ret
or
sbb
mov
inc
inc
jl
imulb
les
stos
jge
int
mov
std
pop
hlt
les
push
mov
mov
push
mov
popa
ds
pushf
xchg
jg,pn
insb
aam
and
fbstp
xchg
mov
imul
rorb
mov
mov
push
mov
std
xchg
incb
dec
add
fs
cmp
enter
fsubrl
dec
sub
sbb
insl
xlat
dec
lods
jnp
pusha
xchg
jnp
mov
cs
or
mov
insl
popf
in
out
push
pop
faddl
ret
inc
xor
addb
daa
and
sahf
dec
sbb
or
jno
and
cmpsl
mov
adc
jle
sbb
push
imul
fstl
out
xor
add
movsb
mov
and
sbb
xchg
and
insb
push
xchg
scas
rcrb
mov
add
adc
in
insb
adc
lret
sbb
xor
aaa
je
xchg
sbb
inc
mov
imul
mov
cmp
adc
outsb
fistpll
pop
popf
add
ljmp
adc
push
adc
push
loope
jg
push
ret
hlt
push
xor
sahf
jae
or
movb
and
sub
data16
xchg
inc
inc
pushf
push
rol
gs
cmp
mov
push
inc
sahf
movsl
lea
xchg
mov
aas
mov
cld
outsb
adc
fwait
and
inc
rclb
sbb
lods
cmp
dec
adc
xor
je,pt
lds
and
clc
push
movsl
iret
fsubrl
filds
cmp
out
sbb
push
inc
adc
dec
xchg
mov
push
or
mov
push
sbb
bound
loope
iret
popa
repz
inc
xchg
mov
mov
jne
xchg
sbb
test
idiv
sahf
pushl
push
dec
inc
ss
cmp
mov
faddl
in
dec
mov
mov
dec
cmc
shlb
xor
testl
mov
ja
jno
adc
xchg
add
jo
stos
jp
sub
dec
ss
clc
mov
xor
aaa
dec
fistl
mov
hlt
xchg
fwait
leave
mov
jb
mov
sarl
push
xchg
test
jge
and
sarb
jmp
popf
addr16
outsl
pop
cmp
stc
and
push
cmc
push
and
or
jo
ret
cld
cmp
mov
dec
and
ret
daa
aas
repnz
xor
lcall
push
mov
adc
xor
sti
mov
inc
into
dec
push
rcll
popa
int3
fsts
mov
leave
cmc
mov
sbb
int3
popf
out
adc
or
mov
dec
mov
rcrl
fdivr
into
jp
cli
icebp
psrlq
sub
sub
pop
rcll
mov
pop
imul
mov
roll
test
dec
rcll
dec
aaa
das
les
jo
cs
jmp
loop
fs
lods
fcomp
mov
fwait
dec
imul
sub
mov
sbb
enter
je
pop
orl
xchg
pop
adc
sbb
jg
push
loopne
jae
mov
xchg
ja
data16
hlt
add
mov
or
jnp
mov
mov
into
bound
mov
das
mov
push
or
fldl
or
push
and
arpl
pop
dec
push
pusha
jnp
xor
pop
dec
test
cmpsl
jo
push
mov
mov
xchg
xor
pop
stc
js
cmovno
fadds
dec
adc
inc
dec
add
das
out
mov
loope
jae
pop
ret
sub
dec
je
xchg
pop
pop
xchg
add
fptan
xor
dec
repz
pop
mov
xchg
shr
call
push
mov
test
nop
xchg
outsl
sahf
fsubp
jae
sbb
sub
and
mov
cmp
sbb
sub
cld
repz
sbb
mov
sub
push
loope
in
aas
cmp
frstor
in
mov
mov
xchg
mov
outsl
and
sbb
jb
mov
or
mov
fimuls
loope
add
mov
jno
xor
fcmovnb
jg
out
sub
insl
sahf
cltd
frstor
adc
sbb
mov
sahf
sbb
fisubrs
mov
js
push
cmp
cmp
sahf
dec
or
add
call
adc
mov
mov
push
loope
mov
mov
xor
gs
or
in
ja
insl
dec
movsl
jecxz
xchg
push
outsl
and
cmc
clc
jbe
ret
cltd
jle
in
inc
cmp
insl
cmpsl
scas
lahf
sti
lock
add
add
mov
cmp
dec
std
lret
mov
lods
hlt
dec
popa
adc
mov
testl
mov
or
fcmovnb
insb
sub
sti
fwait
arpl
or
aam
lds
popf
pop
addl
icebp
loope
movsb
jg
push
jecxz
leave
mov
iret
loop,pn
xchg
call
pop
sub
sti
imul
mov
pop
mov
dec
aas
pop
add
jno
pop
dec
les
ja
adc
movsl
popf
push
xchg
loopne
fcmove
mov
jecxz
inc
sbb
js
out
in
mov
pop
xchg
push
leave
mov
pusha
sub
or
leave
sbb
cli
faddl
stos
repz
into
jns
or
inc
jle
sub
inc
cli
cmp
xchg
xchg
or
imul
cmpsb
fdivrl
fcmovnu
sub
push
pop
arpl
adc
and
push
cmc
das
xchg
xor
clc
dec
push
out
pop
jae
arpl
mov
adc
push
out
lret
inc
push
daa
pop
shlb
jb
ret
jecxz
mov
rcrb
push
lahf
jl
shrl
iret
mov
sbb
pop
lods
add
push
mov
pusha
into
scas
add
dec
fists
jecxz
adc
ja
stos
shll
pop
orl
adc
push
shll
movl
push
cmp
jge
pop
jge
aam
dec
mov
lret
mov
push
dec
mov
imul
cltd
inc
inc
mov
enter
mov
es
xlat
mov
sub
aas
jecxz
imul
repz
jno
iret
cltd
xor
movl
psrlq
mov
iret
out
sbb
arpl
inc
cwtl
xchg
mov
xor
mov
adc
sbb
out
or
pop
xchg
lcall
popf
push
imul
mov
icebp
xchg
cmpsb
aaa
add
mov
cmp
inc
icebp
sub
icebp
dec
mov
add
mov
clc
pop
aam
out
mov
mov
and
dec
orl
xchg
jmp
or
mov
dec
aas
roll
ret
or
out
lret
cmp
lods
or
out
or
movsb
mov
adc
in
cmc
adc
ror
mov
stos
jmp
pop
sub
sub
or
and
clc
jge
push
test
adc
push
jbe
imulb
mov
icebp
pop
movsl
je
jb
xchg
lcall
xchg
sbb
lods
gs
xchg
rcrb
pop
loope
pushf
insb
scas
push
or
adc
push
mov
adc
push
movsb
pop
mov
call
cmp
aas
test
add
sbb
sahf
inc
sbb
fwait
fs
add
sub
pop
stos
mov
pop
add
out
mov
pop
push
mov
rcll
mov
jno
mov
stos
repz
inc
push
cmc
push
mov
add
xchg
dec
sbb
data16
xchg
fsub
add
cmpsb
and
mov
test
dec
mov
jmp
jmp
inc
imul
outsl
mov
mov
mov
sbb
enter
nop
cmc
dec
mov
xchg
shl
jne
xchg
out
insl
add
rolb
mov
testl
inc
and
in
dec
xor
dec
cs
mov
sbb
mov
xlat
jb
cltd
push
lret
and
sbb
lods
xchg
subl
xlat
shll
int3
jge
movsl
dec
mov
cld
imul
xchg
add
pop
je
mov
pop
xchg
mov
dec
enter
or
sub
arpl
push
adc
pop
jecxz
out
adc
lock
aas
pop
jle
out
xchg
cltd
xchg
add
insb
mov
mov
push
sbb
aas
loopne
push
inc
fildll
movsl
inc
jl
leave
dec
stos
test
mov
call
mov
inc
leave
sbb
lds
sub
ret
stc
xor
fcomip
aam
test
ret
pop
fsts
sahf
enter
bound
sbb
shrl
repnz
arpl
push
daa
push
jae
inc
lods
lret
or
imul
sbb
mov
lret
sub
cmp
mov
idivb
enter
inc
das
jg
mov
rorl
sub
inc
inc
scas
push
and
lret
lods
or
dec
jns
int3
and
jge
or
shlb
testb
cmp
sarb
xchg
xchg
adc
jns
int
lahf
sbb
imul
xlat
adc
stc
mov
cmpsl
clc
fmul
pop
lea
push
mov
fcmovnu
sbb
enter
add
mov
or
mov
aas
les
aam
mov
pop
push
les
lock
cli
mov
or
push
xor
les
jno
out
mov
mov
dec
push
aad
add
pop
add
leave
cmp
arpl
xchg
data16
int
push
out
dec
inc
scas
cwtl
cmp
les
into
pop
aaa
jo
bound
mov
sti
mov
das
jg
xchg
or
jp
xchg
xor
mov
pop
add
xchg
loopne
inc
push
gs
mov
or
jne
test
xor
js
add
sbb
jecxz
push
ret
cmp
jl
subl
idiv
repz
push
or
push
cs
mov
scas
xor
dec
inc
out
dec
mov
cli
repz
loop
adc
jle
mov
je
inc
or
push
or
leave
insb
sbb
cmp
jp
cmp
sub
xor
das
lea
jg
mov
int3
sbb
mov
lahf
enter
fwait
sbb
fldl
push
jnp
mov
sub
fdivr
or
pop
test
adc
std
inc
rorl
adc
mov
shrl
fiaddl
inc
jle
cmp
insl
push
fcomi
std
mov
std
xchg
mov
imul
xchg
xor
dec
mov
lea
mov
xchg
std
sarb
cmpsl
repz
jne
sbb
in
cwtl
inc
mov
pop
jbe
and
push
mov
dec
or
inc
dec
ret
loopne
es
sub
sub
xchg
stc
btc
sbb
rorl
dec
cmp
add
mov
or
gs
mov
mov
add
call
dec
test
dec
int
insb
repnz
and
mov
push
mov
sti
cmpsb
lcall
add
inc
and
mov
xchg
inc
iret
jae
dec
xchg
lret
int3
jle
icebp
adc
gs
push
sbb
pop
push
mov
enter
int
scas
adc
xor
add
std
nop
int
js
movsl
vpsllq
mov
loope
jge
fs
mov
xlat
dec
push
add
xchg
jo
loope
das
inc
pop
mov
cmp
mov
invd
jge
push
jns
push
rolb
dec
rcrl
sbb
dec
xor
dec
xor
movsl
xchg
push
imul
and
mov
into
sbb
cmpsb
fisubl
push
shlb
sub
jmp
sub
stos
and
lock
or
outsl
pop
in
mov
xchg
lret
mov
shll
inc
cld
sub
jns
or
cmpsl
ljmp
dec
fidivrs
mov
mov
es
movmskps
inc
mov
jmp
mov
mov
jbe
test
addr16
loop
iret
xor
mov
cmp
sub
stos
mov
rcr
sub
add
bound
xchg
adc
stc
test
push
mov
lahf
fwait
lods
pop
outsb
adc
cmp
jns
lds
add
mov
lea
loop
rcr
imul
xor
out
int3
or
test
cmpb
mov
pop
inc
lds
xor
add
jmp
inc
idivb
add
mov
imul
adc
jmp
or
or
push
loope
andl
and
scas
mov
ljmp
adc
fldenv
jge
out
popa
xor
gs
aam
out
pop
or
push
cs
add
dec
sahf
test
pop
data16
pop
test
pop
jl
sbb
xchg
dec
or
add
es
xchg
icebp
sub
sub
imul
add
insb
jae
push
out
sbb
fcoml
insl
adc
jo
xor
adc
pop
mov
sbb
mov
rorb
push
sbb
je
pop
imul
lods
rcrb
jno
fsubl
and
or
adc
les
dec
pop
lret
fs
xchg
imul
rcrb
js
xor
ud0
and
or
cmp
fcompl
mov
lret
loope
negb
cmp
cs
lret
subb
lret
mov
pop
inc
movsb
xchg
aas
xlat
imul
pop
sbb
movsb
cmpsb
dec
gs
ja
jge
push
lret
sub
xchg
test
mov
adc
push
add
xchg
add
lcall
mov
dec
out
ljmp
xchg
in
fadds
ds
cmpsl
mov
and
sbb
pop
mov
adc
cmp
ret
outsb
daa
outsl
or
cltd
xor
data16
dec
mov
inc
iret
inc
pop
cltd
adc
mov
fcmovu
pmaxub
pop
add
or
adc
fldt
or
rcrb
mov
push
xchg
roll
out
sbb
sub
add
sub
fs
addl
add
repz
sbb
xchg
push
jno
inc
out
cli
mov
call
push
mov
push
mov
mov
push
out
aas
rolb
add
mov
in
in
add
mov
shr
or
movsb
sti
stos
jl
mov
dec
adc
in
dec
shlb
adc
adcb
leave
xorl
insb
xor
inc
mov
push
xor
pushf
ror
xor
mov
adc
jb
cs
push
adc
pusha
icebp
and
scas
fisubl
mov
push
and
jbe
aaa
ret
add
jnp
scas
shrb
sbb
push
and
xor
or
movsb
sti
pop
xchg
cmp
es
sub
adc
cli
push
pop
aas
aaa
adc
xchg
je
sbb
inc
mov
inc
sbb
bound
stc
jle
sbb
fists
shlb
iret
shrl
ljmp
mov
ss
adc
mov
rcr
mov
ss
mov
jne
xor
push
iret
mov
les
pushf
and
push
cmp
xor
jns
ret
xor
les
adc
sbb
ficoms
pop
adc
andb
andl
mov
sbb
divl
push
js
repz
loop
dec
pop
inc
arpl
addr16
stc
mov
jno
cmp
fdivrs
mov
mov
jno
enter
cwtl
popf
lds
fcomp
incb
dec
fimuls
mov
sbb
jnp
add
jge
xor
mov
ljmp
shrl
std
xchg
sbb
sbb
jb
out
dec
xor
je
frstor
mov
jl
xchg
out
rcr
jcxz
cs
sub
ljmp
out
out
sbb
xchg
cmp
or
xor
mov
test
mov
sub
pop
jnp
mov
lock
xchg
inc
out
outsl
and
lret
jae
insb
divl
sub
jl
popf
popf
shlb
sbb
and
xor
cmp
or
mov
push
addr16
jle
mov
xchg
std
pop
xor
in
inc
jb
ds
push
mov
mov
jle
sbb
addr16
or
or
cmp
lret
mov
int
repnz
addr16
out
xor
fistl
hlt
mov
mov
pop
repnz
test
ds
imulb
lcall
ljmp
mov
jb
or
mov
and
nop
shrb
mov
mov
call
out
mov
aam
fcoml
inc
adc
roll
push
add
mov
fcmovne
pop
call
mov
sarb
js
in
in
and
mov
xchg
adc
fstp
xchg
cmp
movsb
mov
jns
xchg
leave
inc
sbb
test
test
hlt
add
jmp
out
or
inc
ja
inc
and
sub
aaa
loopne,pt
orb
adcb
pop
mov
pop
xorb
sbb
jl
sbb
aad
jg
mov
jne
aad
push
movsl
dec
nop
fwait
inc
and
adc
adc
dec
data16
xchg
inc
aaa
mov
test
int
mov
mov
scas
inc
mov
mov
mov
or
push
sarl
vmptrld
ffreep
or
inc
mov
lods
imul
mov
pop
leave
mov
sbbb
lock
fildll
jno
cmp
loopne
cli
jmp
mov
loop
push
lds
jne
into
xor
in
pop
push
fcomps
cmp
fwait
test
bnd
movsl
mov
cmp
lcall
pop
inc
icebp
test
pop
test
testb
pop
stc
cmp
pop
adc
aam
daa
mov
cmp
sarl
mov
add
pop
lea
rorb
mov
cmc
or
movsb
mov
sbb
push
jecxz
in
pop
shrb
pop
dec
sub
pop
and
shlb
or
jmp
cli
ret
imul
mov
movsb
xchg
xchg
and
rorl
mov
in
aas
test
cmpb
push
push
and
xchg
jne
jns
cmp
sbb
sub
insl
cwtl
mov
gs
cli
rep
xchg
pop
pushf
dec
push
fs
jle
retw
mov
push
loope
imul
xchg
inc
rcl
lods
mov
sbb
xor
sub
testb
arpl
lock
sti
sbb
inc
ficompl
lods
mov
ret
cltd
fs
mov
ss
int3
sti
adc
xchg
pop
bound
je
adc
test
in
test
jl
sbb
pop
int3
int3
cld
mov
not
inc
ret
cmp
pushf
lret
mov
jecxz
mov
cmp
jae
cmpsb
push
sbb
add
test
jmp
in
je
add
dec
pop
fimull
or
adc
inc
dec
or
sub
inc
inc
pop
mov
int
mov
fwait
inc
and
cmp
inc
jl
dec
pop
lods
shl
mov
inc
sub
je
cmp
aad
sti
sub
out
mov
jno
pop
xor
inc
loope
push
mov
dec
push
push
int3
cs
std
jns
adc
and
dec
fnstenv
or
in
stc
add
mov
cmp
mov
cwtl
xor
gs
or
ja
into
mov
mov
lock
es
shlb
lret
and
pop
cmp
hlt
test
ficompl
lods
cmp
orb
lods
dec
jp
jmp
pop
add
rol
cmp
push
add
xchg
add
push
xor
cmp
je
scas
call
inc
inc
pop
cs
dec
stos
cwtl
clc
adc
fimuls
or
cld
push
mov
xchg
add
stos
push
dec
int3
xchg
xchg
jns
xchg
ja
pop
dec
add
or
mov
outsl
ret
shlb
pushf
and
ja
jp
gs
into
dec
lods
movsl
fistpll
jnp
repz
lock
aad
xchg
gs
xchg
sub
fidivs
adc
scas
mov
and
jae
push
in
mov
hlt
in
mov
out
push
gs
arpl
rcrl
call
push
xor
mov
jmp
js
sub
repz
icebp
pop
dec
add
jge
cmp
scas
sub
fmul
sbb
js
insl
mov
inc
cli
xor
lret
xlat
test
adc
pusha
xchg
js
adc
or
mov
or
mov
clc
jae
scas
adc
pop
cwtl
and
in
jp,pn
push
ds
mov
mov
in
xlat
inc
jg
test
roll
lea
jl
cli
fnsave
pop
dec
out
out
mov
into
fcompl
adcl
xchg
adc
sbb
xor
call
rcrb
js
mov
mov
cltd
jnp
pushl
push
cmpsl
pop
dec
add
fdivl
adc
popa
inc
sti
adc
test
ret
pushf
cli
clc
in
addr16
cmp
mov
jg
mov
movsl
mov
and
mov
adc
xor
lret
test
inc
dec
add
push
dec
test
cmpsb
inc
add
jecxz
aad
repnz
lret
fcomps
inc
sbbl
pop
fsts
mov
mov
or
test
movsl
mov
fwait
push
mov
add
aad
mov
loop
mov
test
sub
lock
mov
sub
stos
inc
daa
pop
inc
push
xchg
fstps
fcompl
jmp
dec
mov
mov
hlt
lret
push
repz
in
arpl
clc
push
sbb
push
push
test
pop
popa
cltd
lret
inc
inc
jle
add
mov
push
es
push
clc
and
xchg
cmpsb
mov
mov
std
imul
xor
andb
sub
jb
insb
xor
mov
pop
out
mov
seta
jl
cwtl
imul
cmp
add
call
jo
jl
gs
fsts
shrl
ljmp
pop
cli
mov
test
test
les
cmp
clc
stos
addr16
mov
call
repz
ljmp
mov
insb
mov
pop
dec
mov
icebp
lret
add
push
loop
or
in
dec
xchg
imul
mov
test
stos
jmp
shlb
mov
fs
leave
sbb
fistpll
push
jns
cs
jae
sbbb
ljmp
push
rcl
ss
cli
or
sbb
loopne
das
arpl
sbb
pop
lods
out
dec
adcb
mov
push
imul
xor
hlt
mov
inc
pop
xchg
ss
call
iret
inc
nop
movsl
xor
movsb
and
sbb
mov
push
mov
xchg
mov
test
cmpsb
add
arpl
mull
jae
les
pop
ss
fs
xchg
test
popf
cwtl
cltd
js
lahf
xchg
dec
xor
mov
or
adc
inc
inc
mov
lds
mov
dec
jb
mov
xchg
popf
test
test
inc
je
push
fistpl
out
xor
cwtl
jo
repnz
fstps
cmp
sub
fs
dec
jle
xchg
jo
inc
xlat
jge
cwtl
aas
test
sub
mov
leave
cld
cmp
jnp
int3
loopne
aad
mov
push
dec
lock
mov
sar
data16
cmp
fwait
lods
xor
push
jmp
insl
lods
sbb
repnz
cwtl
xor
fs
daa
jbe
es
enter
pop
or
lahf
sub
cmp
loope
lods
and
cld
loope
cmpsl
orb
inc
test
gs
rorb
xchg
add
not
jecxz
test
iret
sbb
cs
cmpsb
dec
mov
fnstcw
dec
inc
push
nop
jl
mov
ret
sub
cmp
out
xchg
cmp
lea
out
xor
imulb
shlb
mov
insb
not
call
lock
jne
imulb
ret
aas
jl
cmp
inc
pop
and
hlt
outsb
das
sahf
call
dec
pop
mov
pop
bswap
push
js
lahf
fisttpl
stos
cmp
cld
inc
xchg
dec
into
pop
sub
aam
or
out
gs
sti
cmpsl
dec
and
js
out
sbb
cmp
add
rcr
and
dec
in
jns
mov
add
nop
inc
das
or
rorb
inc
push
adc
mov
out
outsb
pop
test
and
loopne
fs
imul
enter
bound
sti
daa
inc
dec
cmp
inc
imul
push
jne
pop
imul
sbb
les
popf
push
fimull
push
xor
sar
push
out
out
lea
mov
adc
push
ds
sub
addps
shlb
std
je
mov
into
inc
cmpl
push
jae
loopne
lret
dec
fcompl
sbb
scas
pop
dec
pop
jbe
mov
cmp
fwait
xchg
cs
push
ds
inc
insl
inc
xor
or
addb
cmc
mov
mov
xor
pop
dec
jmp
cmp
rcl
add
andl
or
pop
test
aas
loopne
cltd
adc
dec
mov
test
cmpsl
sbb
ret
push
xchg
and
cld
or
inc
jbe
jecxz
jae
sti
dec
add
aam
inc
mov
jns
cmp
pminsw
sub
and
sbb
decb
cmp
daa
xchg
lret
repz
loop
or
cli
out
mulb
xor
mov
xor
out
gs
pop
mov
inc
sub
add
adc
lock
fisubrs
les
fs
jne
or
pop
adc
mov
jbe
iret
ja
shl
mov
mov
or
sub
xorl
sbb
inc
pop
add
stos
cmc
lahf
out
pop
xchg
les
xor
sahf
orl
roll
cmp
push
repz
jmp
fisubrl
adc
insl
xchg
mov
dec
sbb
std
adc
call
mov
pushf
es
sbb
mov
dec
and
mov
aas
pop
xchg
scas
push
not
cmc
add
cmp
in
sub
xchg
popf
pop
shll
dec
mov
push
cmc
xchg
add
bound
dec
jbe
and
mov
xor
inc
dec
mov
xor
inc
dec
mov
lods
mov
add
xchg
and
sbb
outsb
xchg
push
sbb
pop
adc
fisubl
push
mov
xchg
mov
xchg
cmpsl
jno
fstpt
jle
or
enter
int
push
cmp
fcmovb
outsb
mov
xor
mov
sub
dec
popa
shrl
sub
xchg
dec
imul
arpl
inc
cmp
add
cwtl
xor
push
scas
xchg
out
jle
xor
sbb
push
pop
or
sub
inc
inc
imul
mov
push
mov
or
and
pop
cmp
lea
inc
pop
inc
jp
or
out
pop
xchg
test
in
int
and
hlt
xchg
xor
dec
mov
inc
imul
mov
sahf
jae
in
jecxz
adc
add
push
out
inc
lock
push
fs
leave
add
fcoms
insl
mov
inc
and
jg
dec
mov
sub
mov
out
sbb
sub
jbe
xor
out
lods
push
mov
lret
cmc
and
shrb
or
adc
push
sbb
cmp
sub
and
in
js
loop
push
sbb
repz
dec
push
mov
aaa
sub
xor
cltd
pop
loopne
and
lock
jle
adcl
or
xchg
cmpsl
fdivs
add
cmp
shrl
out
in
cmpsb
pop
cmp
mov
lods
mov
addl
mov
or
clc
inc
adc
iret
cwtl
push
push
sbb
xor
fldcw
lahf
scas
xchg
push
aas
and
adc
lods
pusha
addl
sub
scas
cmpsl
icebp
pushf
pop
or
pop
vcvtss2si
jnp
ret
push
pop
imul
sahf
xchg
dec
pop
sbb
andb
pop
mov
insl
test
or
repnz
aas
arpl
lret
mov
mov
and
fcmovb
or
pop
mov
or
lea
and
xchg
cmp
es
cmc
jg
dec
ficomps
out
sub
int3
faddp
push
stos
aas
out
in
je
lret
mov
test
imul
insb
std
xor
mov
xor
push
mov
insl
loopne
and
mov
adc
xor
imul
fsubs
xlat
fnstenv
dec
shl
loopne
inc
mov
inc
xor
sahf
mov
aaa
cmpsl
cmpsb
mov
add
pop
mov
inc
mov
ss
icebp
mov
divb
mov
fcmovnb
pop
imul
sbb
push
inc
test
movsl
gs
cmp
jns
push
jge
les
ret
aaa
es
mov
mov
outsb
pmaddwd
insb
enter
push
addr16
mov
or
test
push
mov
das
sti
xor
mov
mov
pop
gs
mov
xor
jg
jcxz
shl
in
jo
inc
loopne
pop
std
cmp
in
cmp
sub
xor
or
xor
xor
sbb
in
mov
fildl
push
in
stos
fists
leave
fnstcw
push
mov
cmp
fucom
mov
push
xchg
iret
lods
enter
sahf
test
and
and
push
push
pop
sti
cld
stc
cmp
in
sbb
orl
ja
loopne
psrlw
aas
in
sub
inc
test
ucomiss
push
add
ss
cmp
push
gs
mov
enter
and
jg
imul
and
xchg
out
lcall
aad
sub
mov
jge
bnd
jne
out
cli
xor
xchg
sbb
pop
xor
pop
and
fadd
pop
push
out
push
fcmovu
push
add
test
stos
pop
jl
test
popl
sbbb
inc
movsb
jg
sbb
mov
jg
test
push
addr16
jl
mov
jnp
or
imul
push
imul
xor
inc
lock
add
xor
aaa
dec
call
stos
loopne
icebp
insl
mov
fmuls
xlat
scas
clc
testb
inc
and
jnp
roll
ss
enter
xchg
mov
mov
and
sbb
mov
andl
adc
sbb
pop
xchg
mov
out
dec
scas
xor
and
mov
cwtl
insb
adc
and
xchg
xor
dec
roll
jle
jle
fadd
xor
xchg
adcb
push
adc
test
pushl
add
push
js
out
pushf
cs
dec
mov
hlt
jge
aaa
stos
xchg
es
dec
pop
movsl
mov
push
insl
push
lock
les
pop
xor
daa
xchg
pop
shrb
daa
adc
stos
inc
in
pop
or
xchg
insb
mov
stos
adc
or
mov
rol
push
sub
xchg
sbb
xchg
test
mov
into
xchg
andl
movl
push
scas
cmp
dec
cmp
rcrl
clc
push
sub
lahf
jb
cmp
cltd
pop
inc
pop
mov
pop
push
inc
adc
fbld
loop
popa
sarl
mov
aaa
aad
rol
test
ljmp
enter
pop
push
jne
dec
dec
sbb
xor
jno
sub
xor
mov
lcall
sub
js
add
sub
jg,pt
fwait
dec
out
push
cmpl
iret
loopne
fdiv
inc
mov
pop
ret
outsb
dec
pop
mov
fwait
mov
ljmp
loope
call
ja
dec
xchg
push
shlb
cmpsl
cmp
jb
pop
in
mov
sbb
mov
gs
jmp
add
and
es
mov
dec
cltd
sarb
cmpsl
xor
mov
and
and
mov
popf
ret
dec
xchg
cmp
mov
mov
inc
jg
adc
inc
push
inc
push
sub
mov
sbb
ret
mov
incb
push
or
pop
insb
lahf
push
pushf
pop
cmp
jp
jecxz
mov
push
jno
xlat
repz
jmp
ja
test
fnstsw
cmp
pop
mov
jmp
fimuls
jnp
dec
std
aas
cs
jno
dec
aas
inc
lods
mov
pusha
test
stos
cli
das
clc
xchg
cltd
loop
dec
and
ss
lcall
inc
push
mov
inc
push
inc
pop
dec
xchg
shll
loope
inc
jns
nop
sti
mov
stos
lret
aas
adc
xchg
mov
mov
inc
inc
cmp
pop
inc
lods
jecxz
pop
ljmp
xchg
cmp
inc
inc
leave
dec
faddl
lock
mov
add
ret
arpl
fimull
push
in
jmp
jmp
and
xchg
or
sbb
stos
xchg
dec
or
dec
sti
iret
mov
jns
jo
adc
cltd
sbb
xchg
and
xchg
out
mov
push
sbb
inc
push
sub
inc
or
and
scas
cmc
xor
adcb
clc
inc
push
xor
sbb
in
mov
aad
imul
mov
lods
and
mov
in
les
and
aam
push
outsb
in
js
jns
jg
mov
fmulp
xor
dec
xor
shll
sbb
cli
mov
loopne
mov
fcmovu
in
rol
xchg
hlt
push
call
fadds
sub
fistl
popa
aas
cmpb
mov
or
loope
lock
mov
rcrl
sbb
mov
sub
into
mov
pop
out
je
sti
scas
xchg
mov
xor
sbb
scas
xchg
mov
mov
stos
inc
ds
sbb
dec
fdivs
lcall
mov
int
out
sub
jecxz
and
inc
ss
je
xchg
xor
xlat
inc
add
sbb
mov
sbb
clc
js
pop
out
dec
scas
ret
inc
mov
cmp
sub
les
jle
outsl
jns
pop
cmp
sti
fwait
xchg
mov
pop
in
sub
cs
out
fstps
sbb
lahf
int
ljmp
push
pusha
mov
jns
adc
adc
rolb
fists
stos
idivb
shl
loopne
ret
inc
sbb
lret
out
mov
pop
mov
stos
add
fcomi
mov
dec
dec
mov
movsb
lds
and
sbb
dec
push
cmp
daa
cmp
jecxz
lds
dec
lahf
jno
mov
jp
dec
add
xlat
add
inc
mov
pop
jno
add
je
sub
pusha
pop
jmp
sbb
adc
add
jmp
mov
aas
xchg
imul
mov
xchg
jecxz
sbb
std
xor
stc
jnp
sub
rcr
sti
add
dec
or
xorl
or
aam
add
lods
pop
fcomip
bnd
popf
shrb
cmp
rorb
bound
shlb
xrelease
pop
xchg
mov
mov
shll
inc
sbb
sbb
cmp
je
divps
inc
adc
ljmp
fdivrl
mov
sbb
hlt
adc
leave
mov
in
mov
cmp
dec
popf
jge
cmpsb
jb
jo
addr16
fwait
call
jecxz
or
roll
mov
sbb
mov
cmp
stos
sbb
add
out
pushf
mov
imul
sub
std
outsb
lret
lds
or
push
xor
pushf
loopne
mov
ret
xor
adc
add
sub
mov
insl
call
xor
mov
scas
dec
repz
int3
push
push
aad
push
test
jns
sahf
in
jge
jbe
jbe
pop
push
jecxz
sbb
imull
add
jmp
and
mov
stos
es
popa
arpl
or
in
insl
mov
fisttpll
js
fdiv
xlat
cmp
popa
dec
inc
add
sub
cmp
xor
or
jge
lret
shr
inc
test
add
in
fsubp
imul
add
mov
bt
jbe
or
jg
daa
scas
mov
cld
or
xor
fildl
push
mov
xor
aas
xchg
jp
mov
xchg
cmpsl
cmp
pop
nop
stos
iret
push
and
adc
push
mov
lds
flds
daa
jb
sub
xchg
jns
enter
movl
and
mov
fstl
jmp
sub
stc
mov
pop
testb
push
jb
leave
inc
ret
fdiv
shll
add
jge
inc
cli
mov
mov
shrb
sub
dec
mov
or
xor
popf
je
xor
rorl
hlt
xor
inc
loop
enter
icebp
push
imul
adcb
out
in
jno
add
mov
push
mov
mov
push
lock
jbe
xchg
lock
rclb
ja
mov
fists
mov
mov
mov
test
xlat
sti
lret
in
xlat
push
xchg
pop
rclb
lea
cwtl
aas
fnstsw
jp
mov
jnp
add
jl
scas
cmpl
cmp
or
jb
das
adc
bound
and
and
sub
ljmp
stc
cmp
fdivl
adc
test
push
lock
mov
nop
lret
dec
add
jae
out
dec
imul
test
sub
push
inc
aaa
cmp
mov
sub
stos
sub
mov
and
inc
sub
push
insb
stc
and
outsb
roll
adc
aas
decb
mov
fistpll
sbb
out
mov
lcall
sbb
mov
or
push
jmp
sbb
imul
lret
out
xchg
ficoml
test
ret
fstpl
pop
dec
jle
pop
lahf
push
mov
loopne
push
stc
loop
cli
xchg
std
push
enter
fdivrs
xchg
push
push
pop
aam
aaa
out
cwtl
mov
sub
mov
dec
out
mov
stos
cmpsl
loopne
pop
pop
sbb
xor
popa
pusha
xchg
stos
repnz
xchg
dec
repz
daa
mov
and
mov
pop
fisubrl
jecxz
pop
push
das
arpl
xchg
xchg
ds
cwtl
popa
xor
or
pop
inc
and
cld
mov
mov
pop
mov
je
mov
shll
xor
idivb
push
cmp
jp
hlt
data16
sbb
push
add
lea
or
lcall
adc
leave
or
out
dec
cltd
jb
push
push
push
cmp
out
sub
inc
jo
ror
imul
addr16
mov
adc
jnp
xor
lods
ds
jle
scas
add
mov
pusha
cs
inc
loop
sahf
imul
jl
cmpl
dec
mov
popa
inc
int3
cwtl
arpl
ret
cmpb
ds
xorb
pop
adc
ljmp
xchg
shlb
movsl
out
ds
jae
pop
mov
aad
jp
aam
fldl
xor
std
out
nop
leave
out
xor
dec
inc
movsl
pop
popf
loope
xor
sbb
push
repz
cmp
push
xor
mov
ret
fimuls
ror
mov
aam
ljmp
pop
aad
sbb
lcall
cmp
clc
icebp
rclb
mov
lcall
insl
js
repnz
lds
fidivrs
movsl
xor
xchg
jo
xchg
mov
fistpll
sbb
cmp
pop
jl
out
mov
xchg
mov
or
mov
daa
inc
test
jg
cltd
mov
cmp
jg
loope
and
push
enter
pop
incl
cmc
mov
and
test
and
and
mov
cmp
cmpsb
cmpsb
adc
sbb
fisubrl
inc
mov
add
lock
loop
xchg
imull
jmp
cmp
shr
mov
out
je
jl
mov
sbb
int3
sub
mov
mov
jl
inc
jl
dec
mov
mov
push
jle
insl
inc
int
jb
dec
imul
pop
das
add
into
hlt
pop
push
jnp
lea
xchg
dec
adc
lods
stos
pop
push
adc
jl
rolb
xor
inc
bound
cmp
das
xor
in
pushf
jecxz
push
movsb
data16
and
das
mov
adc
sarl
xchg
ds
push
jmp
cli
lods
aad
daa
clc
jg
jle
mov
push
mov
pop
xchg
mov
pop
adc
lcall
mov
push
pop
stos
mov
cwtl
mov
xchg
imul
xchg
xlat
inc
ret
cmp
jnp
int3
in
xor
dec
in
cmp
aad
lret
nop
jo
push
xchg
shll
into
inc
sahf
mov
dec
mov
filds
not
sub
in
insl
push
mov
mov
cs
fiaddl
stos
popf
mov
cmp
mov
pop
insb
push
outsl
pusha
sub
jmp
dec
mov
fildll
xor
push
push
add
pop
out
sub
and
test
dec
cmp
paddusw
or
xchg
in
scas
sub
cmp
std
inc
xchg
pop
cli
xchg
xchg
sti
cli
xchg
inc
sti
mov
ja
loop
cltd
je
dec
or
stos
mov
sbb
not
aas
sub
pop
dec
popa
jl
mov
bound
outsb
sbb
push
rorb
jno
mov
jp
inc
imul
movsb
lock
jge
push
push
adc
rorl
in
addb
in
pop
jg
pop
mov
push
adc
jno
push
sbb
mov
mov
scas
stos
pusha
mov
adc
je
xchg
mov
aas
mov
nop
push
cmpl
xchg
xchg
cmp
and
push
bound
push
out
cmp
aad
mov
test
xchg
sbbl
dec
mov
cmp
fwait
repnz
lods
xchg
or
in
repz
imul
mov
sahf
xlat
dec
or
fsubrs
jmp
cmp
cli
adc
ds
adc
mov
mov
popa
in
stos
sub
lret
sub
adc
jmp
rclb
shrb
rolb
mov
xchg
push
clc
lcall
repz
stc
test
in
sub
add
sub
sti
mov
lcall
aad
mov
ja
ss
faddl
loope
lcall
xlat
xor
mulb
cld
scas
mov
inc
and
fstpt
mov
pcmpgtb
ss
cwtl
aas
or
xor
es
bound
adc
outsl
pop
lods
aad
xor
or
and
outsl
ret
push
stos
ret
fs
cmpsl
ret
pop
inc
lock
ret
sbb
movsl
pop
mov
and
sahf
mov
inc
push
xor
xlat
negb
or
aaa
push
out
lahf
ror
fmul
push
pop
xor
cwtl
pop
jp
mov
sub
xchg
push
frstor
add
mov
repnz
imul
aam
mov
aas
testl
jae,pt
fsubl
fwait
dec
add
adc
lock
mov
ret
out
inc
or
push
ret
xchg
mov
or
sub
js
and
jb
cwtl
pmulhuw
and
mov
imul
cmp
pop
lock
fdivs
xchg
fwait
scas
push
push
dec
stos
dec
test
pushf
add
loopne
xlat
fbld
imul
jns
inc
icebp
sub
mov
mov
ret
mov
sahf
jg
add
add
loope
pop
lret
inc
push
sub
sub
add
mov
inc
ds
lock
and
jns
sti
scas
adc
sub
sub
cmpsb
data16
je
cmc
or
xor
andl
stos
push
jl
and
pop
popa
mov
fistpl
push
push
cmc
xor
ficoml
pop
pushf
adc
jne
insb
sbb
mov
fistps
add
xlat
data16
mul
cmp
and
nop
leave
add
mov
movsl
or
sub
sbb
mov
jle
dec
imul
sbb
mov
stos
and
push
adc
mov
jbe
in
in
dec
test
dec
push
and
jg
call
rol
and
or
je
mov
ret
sbb
push
push
fnsave
jbe
imul
mov
cmpsb
fs
aad
subl
jne
clc
mov
push
iret
sub
test
pop
cltd
pop
lret
pusha
xchg
stos
repz
cmpsl
sub
in
scas
fdivs
mov
cmp
pop
out
sbb
outsl
into
imul
inc
dec
mov
inc
dec
inc
stos
jnp
dec
xchg
cmpsb
aam
mov
mov
addb
push
sti
rcr
gs
dec
shll
cltd
lcall
call
sub
dec
flds
mov
cmp
les
sub
push
fldt
outsb
enter
imul
adc
mov
es
aas
adc
and
popa
rclb
pop
pop
out
lds
arpl
inc
repz
push
push
call
popa
popa
shr
dec
add
aas
or
inc
xor
xor
jmp
in
psrlw
mov
cwtl
aas
inc
movsb
xchg
xchg
lret
sbb
and
or
cs
add
shlb
cmp
mov
shlb
cmovge
push
std
inc
pop
cmp
xor
add
into
cmp
cmpsb
pushf
insl
faddl
mov
mov
lea
pop
dec
outsl
adc
ret
lret
push
pop
sub
cltd
dec
ret
add
fidivrs
rorl
jo
push
jb
pop
jno
push
xchg
mov
pop
push
mov
xchg
mov
iret
out
and
and
in
mov
into
push
xchg
cmp
rorb
pop
out
sub
pop
sub
popf
scas
pop
inc
int
insb
lahf
pop
or
xor
lahf
mov
stos
mov
push
cwtl
jnp
mov
or
mov
inc
mov
orb
sub
fstl
into
ja
inc
hlt
shr
in
popa
mov
lcall
adc
out
mov
shr
mov
adc
mov
ret
xchg
aad
cmpsl
add
jecxz
jg
pusha
mov
jle
aas
push
stos
daa
scas
shrl
jnp,pn
into
test
outsl
cmp
out
push
aad
xor
pop
nop
sub
jle
loop
cwtl
and
push
mov
jne
jle
mov
das
adc
push
loopne
jne
cmpsl
mov
inc
ret
popf
pop
mov
sbb
outsl
stos
jae
daa
cmp
out
push
cmp
add
mov
std
test
and
and
jnp
cmp
push
bound
jne
test
mov
xchg
test
mov
push
fdivrs
push
pusha
xor
in
sbb
leave
rcrb
cmp
lock
sbb
jb
ret
rcl
add
push
jns
fisubrl
cld
adc
gs
out
enter
dec
mov
imul
lds
cli
outsl
dec
dec
xlat
je
add
mov
cmp
push
mov
or
push
sar
mov
cli
jg
int
adc
xor
mov
mov
lret
int
xchg
enter
imul
and
adc
out
jg
adc
push
or
sub
leave
add
cmp
push
mov
imull
stos
fdecstp
sbb
xlat
repz
jge
ljmp
cmp
mov
pop
sub
aad
in
push
mov
int3
dec
test
pop
ret
or
and
push
mov
insb
xchg
add
fiaddl
or
push
inc
jno
sbb
mov
jbe
movsl
sub
and
lods
addb
mov
push
stos
aas
sub
cmc
jmp
stos
sahf
jmp
loope
dec
mov
push
cmc
gs
int
push
popa
mov
mov
ret
fildll
hlt
push
sti
les
shr
inc
mov
pop
aaa
sbb
enter
jns
push
jo
mov
add
pop
loope
outsb
lods
push
mov
xchg
jp
adc
scas
pop
clc
testl
out
in
mov
inc
pop
dec
clc
repz
aad
es
aam
in
out
push
mov
or
adc
inc
or
jb
dec
push
or
push
mov
into
sahf
cld
test
or
sti
xchg
mov
jle
aaa
sub
fmul
aam
pop
mov
mov
mov
sub
jp
sub
jb
ret
mov
pop
pop
jp
push
or
shll
imul
xor
test
dec
das
dec
fldl
clc
add
pop
mov
scas
pop
insl
fnsave
ja
add
sbb
scas
and
icebp
insl
sub
std
lods
jb
xchg
cli
lods
adc
mov
hlt
adc
sub
pushf
xor
xchg
mov
ror
in
mov
or
push
cli
lea
dec
xor
aaa
outsb
xor
scas
cltd
cmp
rcr
push
cmc
adc
cld
mov
cwtl
sahf
and
rolb
loopne
ret
clc
pop
es
mov
add
jg
dec
insl
push
and
xchg
mov
iret
movsl
push
fdiv
shl
add
rorl
jg
gs
dec
arpl
xor
fmul
nop
stc
mov
pop
scas
shr
scas
mov
test
testl
leave
adc
and
jecxz
cmp
mov
xchg
push
xchg
xor
lret
shlb
fcomi
adc
xor
ljmp
mov
cwtl
lcall
inc
stos
sbb
jns
push
push
arpl
add
jle
scas
xor
push
pop
jmp
dec
add
jge
pop
push
clc
xlat
cld
adc
push
imul
push
xlat
lret
mov
ja,pt
cmp
or
test
or
bnd
loopne
idivb
cmp
das
sbb
movsb
addb
jo
or
cld
sub
imulb
enter
aas
cmpsb
add
cld
rolb
pop
psubq
ret
dec
dec
dec
and
es
hlt
fldcw
cmp
stc
mov
xchg
je
mov
sub
into
jg
push
xchg
jno
mov
movsb
sbbl
push
xchg
lea
dec
call
cmpsl
mov
fwait
les
add
inc
mov
cmpsl
sbb
decl
mov
in
rorl
cld
adc
jo
subb
dec
shrb
push
mov
inc
mov
loope
dec
lahf
loope
xor
dec
bound
dec
jg,pt
adc
sub
xchg
ljmp
push
push
in
cmp
inc
cmp
push
inc
aaa
int
outsb
pop
mov
ret
in
push
ja
aad
out
outsl
fisubl
das
push
aam
sahf
mov
cmp
inc
adc
repz
push
mov
push
or
fiadds
rcrb
push
ret
out
jp
enter
pop
mov
mov
rclb
lds
pop
pusha
dec
test
mov
push
je
test
std
dec
dec
add
pop
shrl
ds
call
sub
mov
mov
jbe
and
jecxz
repz
mov
xchg
je
ds
sub
cs
insb
stc
hlt
dec
mov
cld
dec
test
ret
inc
jmp
push
or
fadds
nop
cli
mov
jp
push
or
dec
sub
mov
add
cmpb
xchg
shll
scas
xor
cmpsl
ja
mov
popf
jle
jb
jmp
add
adc
ret
arpl
cwtl
lock
xchg
xchg
int3
nop
dec
inc
xchg
jle
pop
pop
adc
fisubs
pop
aaa
outsb
lods
sub
sub
pop
insl
sbb
in
xor
cmc
sbb
pusha
mov
lods
ret
cwtl
es
pop
lcall
pop
mov
mov
pusha
iret
shrb
lock
outsl
cmp
cltd
push
std
sbb
scas
je
imul
fwait
push
test
mov
pop
lods
sbb
push
ret
aad
or
mov
inc
jns
ljmp
insb
decb
pusha
dec
dec
rorl
or
jg
mov
rorl
add
idivl
jmp
cmp
mov
jecxz
xchg
outsl
pop
cmp
pusha
je
mov
and
lock
cli
es
sti
inc
push
scas
inc
fs
cwtl
xchg
clc
out
popl
inc
adc
dec
mov
mov
pusha
add
popa
lods
mov
das
mov
cwtl
mov
aad
or
lret
shrl
call
das
push
outsb
lcall
test
mov
notb
leave
scas
xor
out
stc
shl
add
lods
insb
sbb
xchg
push
push
cmp
outsb
into
data16
and
dec
fdivl
xchg
mov
cmp
out
repz
icebp
pushw
pop
ret
dec
cmp
or
mov
or
pop
lock
or
pop
movsl
cld
push
out
es
out
sbb
clc
adc
cmp
iret
xchg
data16
iret
ljmp
pop
imul
jae
outsb
addl
xchg
in
inc
aaa
mov
jp
jno
jle
ljmp
or
ja
mov
ret
sub
mov
inc
mov
repz
fdivs
dec
jge,pn
lcall
or
data16
inc
and
lea
or
into
imul
jbe
popf
pop
aad
lahf
xchg
jl
jmp
in
sbb
add
jge
sub
cltd
jecxz
mov
bound
cmp
pushl
and
inc
adc
mov
xor
clc
add
pop
pusha
dec
in
sub
mov
shrb
sti
push
ljmp
inc
push
inc
popf
mov
mov
imull
push
pop
fstl
add
push
fbstp
jnp
test
out
mov
int3
loope
or
jns
jp
push
dec
or
pop
push
or
popf
aas
mov
or
xor
stos
xchg
ds
xor
mov
hlt
aam
daa
or
filds
inc
dec
mov
mov
lret
daa
mov
xchg
mov
rcrb
push
outsb
ss
fld
pop
stos
insl
mov
in
test
dec
rorl
mov
arpl
mov
jno
shlb
sbb
daa
sub
call
cld
xchg
jmp
cmp
test
sub
fstpt
sbb
rcrb
lret
jp
fs
cmc
push
mov
ficoms
push
ja
je
mov
into
xchg
push
and
cwtl
sub
lcall
and
fdivl
js
cmp
xor
inc
and
mov
mov
dec
mov
cltd
push
lds
push
cmpsb
mov
lret
mov
pushf
xor
adc
imul
repz
or
lock
mov
or
hlt
in
xchg
dec
ret
and
xor
sbb
fsubr
dec
sub
into
cmp
cmc
mov
adc
sub
fdivl
incb
dec
xor
neg
out
mov
test
mov
es
push
xchg
ret
fidivl
jg
ja
lea
mov
sub
sti
test
jae
mov
out
push
xchg
add
sbb
mov
pop
jb
leave
lcall
in
lret
xorb
push
movsb
push
push
adc
sbb
push
jae
push
rcrl
mov
stos
pop
inc
push
mov
xchg
mov
out
fbstp
sbb
out
gs
xlat
mov
iret
add
sbb
cld
stos
mov
fwait
jl
icebp
xchg
les
mov
xor
shll
icebp
xchg
mov
shlb
push
aam
jo
pop
out
mov
inc
outsb
hlt
idivb
ljmp
add
mov
or
and
pop
cmp
push
lret
popa
cmc
nop
xchg
std
sbb
out
adc
pop
outsl
out
xchg
mov
scas
inc
xchg
push
jp
and
in
imul
rclb
movsl
push
xchg
iret
sbb
iret
or
int3
jns
push
fcompl
mov
add
out
leave
pop
outsb
lsl
scas
flds
rolb
mov
cltd
fwait
lods
sub
es
stc
jge
lock
push
pop
aaa
movsb
push
ja
daa
fisttpll
lahf
add
push
jg
nop
fdivrs
sbb
dec
pushw
aam
faddl
push
stos
adc
icebp
rolb
adc
jl
fistl
jns
das
outsl
data16
enter
fwait
ss
add
pop
out
ds
mov
mov
pop
push
fisubrs
bound
pusha
mov
cmp
int3
popa
movsl
shr
imul
fcomps
out
adc
outsl
jg
popa
pushf
loop
jge
popf
es
bound
mov
cmp
push
xchg
jl
fsubl
stc
lds
es
and
fdivr
test
xchg
pop
pop
push
or
dec
pop
sub
inc
xor
bound
insl
divl
pop
lods
sbb
dec
rclb
loope
lods
jne
xor
push
test
into
fstl
mov
lahf
push
out
rcr
gs
cmpsl
or
sub
sbb
daa
scas
insl
pop
ficoml
xchg
pushf
cmpb
dec
jmp
inc
aam
jp
xchg
roll
xor
clc
scas
jo
out
adc
in
cs
add
add
adc
add
pop
mov
push
fisubrl
insb
mov
jl
scas
idiv
std
and
mov
inc
pop
aad
cmp
std
xchg
frstor
imul
push
rol
into
in
test
jno
sub
icebp
or
repz
jle
leave
xlat
cmp
pop
sbb
cmpsl
xchg
jno
pop
xor
sti
dec
movsb
orl
xchg
add
push
adc
arpl
cmc
shll
sbb
leave
mov
aad
fs
push
push
sbb
dec
mov
push
enter
gs
shll
adc
stc
push
dec
rclb
inc
repnz
xor
cli
je
mov
push
or
jae
hlt
xchg
mov
sbb
adc
rol
adc
jo
sbb
pop
fwait
dec
inc
insb
sub
scas
out
into
hlt
dec
add
test
xor
mov
std
fwait
sub
js
mov
pusha
stos
loope
lods
ja
mov
mov
xor
subl
jmp
fbstp
xchg
cltd
push
add
mov
pop
cld
mov
xchg
mov
movsl
nop
add
xchg
push
dec
stos
pop
xchg
mov
pop
sbb
jnp
mov
in
sarb
mov
fsubl
jp
jbe
and
in
cmp
sbb
mov
fsubp
xor
pop
push
and
out
jmp
es
leave
test
xchg
push
sbb
cli
jnp
hlt
movl
shll
test
jnp
cs
mov
push
ds
icebp
sub
cmpsb
jmp
outsl
mov
lret
fxch
dec
xchg
xorb
div
pop
jecxz
jae
popa
xor
add
xchg
mov
mov
dec
arpl
pop
js
lods
movsb
pop
iret
in
xchg
mov
fucomi
inc
rorl
ss
jp
mov
rol
push
mov
in
and
cs
or
addr16
inc
inc
shll
cmp
mov
mov
cmpsl
sbb
bound
in
or
test
add
mov
in
jg
pop
movsb
fsubl
clc
or
int
xchg
notb
jo
aaa
in
mov
lods
popf
or
ja
stc
sbb
rol
mov
xor
jp
lock
inc
push
mov
int3
fnstcw
ret
dec
or
in
cmp
leave
addl
jbe
in
push
and
mov
lret
stos
subb
dec
es
int
sub
mov
mov
jg
mov
pop
adc
cmp
adc
rsm
dec
leave
mov
in
mov
sti
xchg
insl
lds
pushf
mov
inc
lcall
or
insb
cmc
jae
push
lods
or
xor
repz
add
or
clc
pop
in
pushf
inc
addb
lods
shrb
or
xchg
mov
faddl
push
repz
jecxz
and
pop
jp
sub
push
mov
sbb
in
push
insb
andb
adc
mov
int3
cmp
lods
inc
es
mov
leave
das
popf
hlt
xorl
push
mov
imul
cmp
pushl
add
scas
into
cmp
jle
dec
insl
incl
mov
call
xchg
das
repnz
hlt
push
xor
jl
jo
pop
sbb
pop
dec
cmp
popa
aaa
inc
jne
dec
sub
adc
lods
push
sub
xchg
int
cmp
pop
out
je
enter
xchg
jmp
mov
out
mov
popa
or
mov
ljmpw
cs
ds
push
mov
sti
xor
xchg
shr
cs
or
lods
rorl
pushf
xor
push
je
mov
loopne
repz
pushf
in
or
and
shr
and
mov
xchg
hlt
fs
pop
hlt
push
mov
push
and
lods
es
mov
loope
pop
clc
icebp
lret
fsub
movsb
adc
sub
std
dec
in
stos
jno
lods
add
out
push
orb
imul
jnp
jmp
repnz
fwait
outsb
sti
cs
ficomps
sbb
xchg
mov
popa
aas
cld
aam
adc
pop
out
dec
jmp
adc
loop
lret
movsb
xchg
ret
sbb
cmp
and
or
inc
and
cli
mov
mov
out
mov
mov
rorl
push
rcr
or
sbb
data16
scas
push
inc
push
xchg
push
adc
pushf
fildl
sub
adc
popa
je
inc
scas
jge
idivl
aad
jne
stos
lock
mov
push
dec
movsl
xchg
gs
xor
imul
or
imul
push
fcmovnu
jecxz
insl
mov
repnz
sbb
lret
sbb
js
pop
xchg
mov
and
xchg
in
out
sarl
mov
jo
xchg
fimull
adc
sub
inc
lret
in
pop
mov
mov
fs
sub
sub
and
sbb
cmpsb
pop
jbe
insb
clc
mov
or
stos
dec
or
or
mov
mov
mov
mov
movsbl
inc
hlt
cmp
push
lods
out
mov
out
or
test
bound
add
mov
pusha
adc
negl
rcll
aas
push
push
mov
shl
fcom
notb
add
ret
jle
addl
jge
nop
inc
inc
push
jae
daa
lret
push
test
int3
mov
test
lods
adc
cs
mov
test
fistps
push
int3
jp
movsl
int3
arpl
cmp
push
mov
addr16
mov
ror
cld
xchg
inc
sbb
xchg
push
imul
inc
adc
bsr
in
push
pop
ficoml
int3
add
xor
pop
lds
sub
icebp
arpl
scas
pop
and
mov
pop
lods
push
dec
mov
jbe
scas
sbb
loop
sti
pop
sbb
sbb
adcb
push
mov
mov
adc
jns
je
dec
sti
je
test
bound
scas
or
add
frstor
incl
imul
cmp
out
test
enter
outsl
mov
pop
and
arpl
and
jns
mov
mov
add
mov
xchg
ret
divb
jecxz
loop
insb
mov
xchg
xchg
xchg
stos
cmpsb
inc
jecxz
and
jae
and
sub
bound
mov
dec
mov
out
jecxz
enter
dec
inc
adc
xor
sbb
push
or
out
push
mov
frstor
xchg
inc
mov
sub
or
xor
fsub
jmp
sub
jbe
sti
pop
pop
cmpb
and
jge
add
inc
mov
pop
xor
jp
adc
imul
and
mov
inc
ljmp
xchg
sub
cltd
stos
sbb
add
insb
adc
inc
add
cmpsb
inc
inc
push
push
mov
shll
lods
popl
hlt
pop
ret
int3
pop
jo
cs
push
test
lds
ss
sbb
dec
push
test
push
arpl
lahf
xchg
test
sarb
les
adc
sub
loopne
add
mov
sbb
sbb
call
pop
cmc
pop
jg
sub
sbb
stos
in
push
add
xchg
cs
out
lods
mov
outsl
cli
push
jae
xchg
jmp
xchg
ret
mov
bound
cmp
push
dec
inc
mov
jbe
in
pop
js
js
inc
sbb
addr16
out
sub
mov
sbb
cmc
popf
cmpsb
fisttps
addr16
gs
mov
insl
dec
ret
rep
push
out
xor
push
mov
pop
test
adc
jns
xchg
mov
sarb
std
push
ljmp
add
sbb
dec
fs
scas
jne
loop
insl
mov
inc
data16
dec
pop
mov
pop
xchg
mov
push
cwtl
sti
loope
jnp
jnp
std
aad
daa
sub
dec
dec
mov
shr
sub
ds
iret
les
mov
mov
stc
shlb
sub
stc
jecxz
add
cmpsb
push
xchg
mov
push
or
push
mov
adc
xchg
cmpsb
daa
jecxz
and
cwtl
and
mov
adc
jne
cmp
dec
aad
jne
in
test
lods
xchg
add
dec
test
aaa
xor
dec
lds
sub
ss
mov
lods
mov
xchg
sqrtps
push
xor
imul
sub
adc
mov
xor
xchg
dec
cmp
adcb
inc
sbb
xchg
mov
jl
je
mov
mov
xlat
flds
loop
mulb
cli
fiaddl
mov
or
leave
lahf
gs
repz
pop
ss
shrb
inc
jg
mov
cli
lods
jmp
xchg
popf
fnstcw
pop
int
not
mov
cmpsb
push
xorl
jg
fstl
dec
jge
inc
mov
cltd
xlat
sbb
xchg
dec
je
das
xor
xchg
inc
out
test
mov
aaa
or
mov
ds
and
cltd
je
pop
dec
push
sub
bound
gs
xorl
adc
sti
repz
outsl
sbb
mov
movsb
out
fmuls
ret
sub
pop
mov
dec
sti
lds
push
xchg
and
inc
movsl
arpl
ds
dec
inc
adc
popf
mov
cmp
mov
in
and
mov
ror
jno
and
daa
adc
adc
mov
or
or
or
push
imull
inc
fs
inc
mov
cmc
mov
hlt
mov
sub
jb
pop
mov
fidivrs
test
jmp
mov
sbb
lret
scas
hlt
jl
loope
orb
and
push
es
dec
pusha
ds
xchg
cmp
xchg
shlb
clc
add
push
mov
or
je,pt
pop
les
xor
mov
cmp
ss
xor
arpl
in
int3
lock
sub
nop
jl
cmp
out
in
pop
sub
lahf
adc
cmp
jecxz
inc
lahf
clc
out
mov
cmpsb
dec
out
xor
push
push
inc
cmp
outsb
pop
scas
out
mov
add
daa
mov
xchg
lahf
insl
xchg
data16
xchg
jae
or
sub
mov
les
sahf
iret
mov
je
or
popf
ljmp
sub
les
popf
dec
push
or
inc
lods
xor
aas
push
sbb
sbbl
mov
lods
xor
jmp
out
sub
pushf
cwtl
sbb
cmp
push
jp
xor
add
mov
inc
push
sti
xor
cmp
xchg
in
mov
sub
dec
sub
mov
call
or
mov
repnz
push
jb
inc
mov
loop
femms
daa
sbb
inc
pop
inc
pop
and
jno
and
mov
test
lahf
sub
into
sti
sub
xor
adc
push
shl
aaa
jns
push
dec
mov
mov
fbld
cmpb
jne
lods
test
jns
cmp
dec
in
mov
xchg
xchg
mov
pushf
testl
fdivrs
fidivrl
or
pusha
ret
add
clc
mov
mov
lods
mov
mov
sub
or
out
xorb
cli
mov
shl
jp
enter
mov
or
mov
mov
dec
movsb
sbb
imul
and
movsb
js
mov
mov
movsb
sub
leave
cmp
popa
jmp
sti
lds
push
cmpsl
sub
push
jns
notl
and
in
popf
jmp
sub
outsb
cmp
push
sub
adc
mov
std
popf
std
loop
inc
push
stc
js
in
ret
data16
stos
sarb
push
jecxz
sbb
xchg
sub
movsl
sub
pop
loop
mov
je
mov
adc
lea
mov
test
or
je
lods
sbb
mov
ret
jns
add
xor
inc
dec
stc
xchg
xor
fldl
add
hlt
mov
insl
popf
notb
cmp
dec
ss
dec
and
iret
mov
sbb
push
mov
and
add
pop
inc
cmp
in
insb
std
sub
lahf
sbb
or
pop
or
imul
lds
xor
test
loopne
cmpsb
shr
add
repnz
pop
mov
xchg
loope
fcmovnbe
fstpl
xchg
xchg
lret
into
out
std
dec
mov
sbb
fs
je
cmp
jne
cld
divl
lea
dec
daa
adc
jno
or
ds
fsubs
xchg
push
subl
pop
sti
pop
add
shl
sbb
or
jl
push
and
addr16
xor
inc
push
xchg
repnz
jns
sbb
dec
jecxz
pop
push
sbb
shrb
addr16
push
push
and
out
push
ss
out
scas
or
aam
insb
rolb
ja
push
sbb
xor
sub
xchg
mov
cld
rcl
ficompl
jg
mov
ss
repz
push
mov
call
out
xchg
or
sbbb
in
das
shlb
outsb
add
repnz
sub
insl
aaa
sbb
adcb
pop
adcb
and
xor
imul
lock
arpl
mov
mov
xlat
cmc
int3
push
push
dec
pop
jbe
out
pop
dec
or
mov
shrb
mov
push
xchg
add
and
inc
adc
aam
fsts
movsb
xchg
sbb
out
mov
mov
flds
lret
addr16
cwtl
dec
arpl
int
xchg
dec
subb
cwtl
std
test
cwtl
dec
lock
repnz
jge
faddp
mov
mov
movsb
mov
xor
xor
stc
pushw
mov
cltd
out
push
push
loopne
mov
pop
sub
jns
cmp
dec
outsb
outsl
lock
jns
out
mul
mov
xor
adc
outsl
clc
jno
adc
dec
inc
or
sub
lock
or
out
mov
inc
mov
push
xchg
mov
mov
gs
in
aad
mov
and
push
cmp
jp
and
or
cmp
imul
cmp
adc
neg
loopne
cmpsb
scas
adc
shl
ficoms
xchg
in
xchg
scas
mov
adc
jmp
pop
inc
fincstp
push
aad
out
or
loop
jbe
inc
add
mov
xchg
loop
xchg
jnp
shlb
iret
mov
adc
clc
push
ja
fists
dec
pop
jle
test
sub
lret
mov
out
push
sub
addr16
popa
mov
testl
or
mov
fmul
aad
lret
lds
or
and
in
inc
and
lock
xchg
daa
jmp
adc
out
fwait
inc
popf
dec
stos
jns
and
push
push
out
mov
push
ss
add
lock
cmp
out
xor
jp
cmp
fsubr
sub
fdivl
stos
testl
ja
subb
repz
cld
imul
popa
sahf
pop
cmp
push
mov
daa
add
sbb
ds
dec
out
inc
pop
xor
xchg
sbb
mov
scas
popf
fisubl
test
pusha
imul
aaa
out
fstl
pop
dec
pop
xchg
in
inc
outsl
sbb
in
push
cwtl
mov
sbb
push
jl
xlat
add
mov
lahf
stos
nop
daa
andl
clc
xchg
loop
push
jge
cmp
fcomps
rorb
testl
and
xchg
int3
inc
and
push
push
cwtl
daa
xor
sbb
xlat
sub
mov
scas
hlt
cmpsb
push
shll
stos
movsb
dec
or
lret
xchg
pop
lods
out
cmpb
jmp
scas
jp
outsb
cmp
adc
fwait
mov
mov
out
lret
cmpsb
in
mov
std
icebp
cs
pop
gs
jl
inc
sbb
rorb
scas
mov
test
inc
pop
std
pop
adc
jge
push
xor
adc
test
lods
dec
stc
xor
xchg
rcr
aaa
jne
outsb
sub
cli
shll
je
mov
fsts
cli
lcall
rcrl
lret
daa
imul
jmp
imul
add
pushf
xor
in
cmp
repnz
push
popf
add
mov
push
mov
lahf
shll
arpl
sub
fxch
leave
xchg
insb
xor
and
pop
pushf
and
xchg
insb
faddp
lret
stos
test
bnd
out
out
lahf
test
aas
out
pop
inc
jle
sbb
jp
dec
mov
jmp
pop
fiadds
fldl
fs
pop
pusha
cmpsb
clc
mov
xor
push
cltd
mov
pop
fistpll
xchg
incl
cmpsl
repnz
in
in
outsb
or
pop
sub
loope
rcr
cld
jb
stos
xchg
lret
fmuls
sysexit
xor
std
dec
sub
add
jle
mov
repz
testb
adc
lds
jns
sbb
leave
jns
addr16
jp
dec
add
cmp
out
or
gs
dec
jno
out
cmpsl
xchg
inc
xor
push
es
call
push
xor
mov
mov
loop
add
or
rclb
dec
pop
mov
outsb
dec
xchg
push
iret
sbb
les
insl
stos
mov
mov
aas
jmp
pop
aam
ss
inc
mov
mov
imul
push
xor
mov
xchg
cmp
outsl
sub
xorb
jno
sahf
inc
jne
repnz
and
out
cmp
dec
jp
jb
jo
jecxz
insb
or
sahf
rcrl
jecxz
stos
cmp
or
int3
mov
adc
out
outsb
push
push
jg
repnz
clc
aas
mov
adcb
fildll
mov
xchg
xlat
lret
addr16
jecxz
pop
dec
pop
lods
call
inc
popf
mov
push
in
push
iret
cld
sbb
push
mov
dec
insb
mov
je
shrl
xor
and
sub
push
lcall
push
divl
dec
fsubl
scas
bound
add
adcb
dec
add
push
jb
jns
mov
push
iret
out
sub
into
pop
roll
inc
mov
gs
aam
xchg
add
int3
pop
loope
sub
mov
jns
add
and
push
test
jle
fisttpll
adcl
inc
pusha
and
add
inc
cmpsb
out
or
ja
xchg
pusha
inc
or
je
mov
mov
adc
out
mov
mov
dec
and
jmp
push
jno
sahf
push
popa
xchg
out
mov
imul
andl
fstl
jnp
shrl
dec
adc
dec
mov
sti
fistl
fildl
scas
jo
mov
inc
lret
hlt
adc
sub
dec
cmp
fdivl
lds
in
adc
xor
fsubrl
cld
test
xchg
push
repnz
xchg
xor
fcomp
mov
dec
rclb
xor
inc
sti
lods
gs
cmpsl
push
jo
int
xchg
push
scas
incb
add
in
pop
cs
cmp
jbe
xchg
mov
into
sbb
ret
flds
xchg
rclb
sbb
std
sub
mov
fcoml
adc
neg
jnp
out
pop
add
mov
clc
pop
mov
int3
cmp
fadd
jae
jb
mov
imul
xchg
pop
js
adc
lret
xor
pushf
in
fistpl
ret
popf
popa
push
push
insl
mov
and
jl
das
lds
push
lea
adc
sbb
lods
sub
aas
pop
adc
push
mov
xor
pop
scas
add
bound
cli
xchg
xor
jl
lds
cmpsl
andb
arpl
dec
enter
dec
xor
repz
popa
aam
pop
xor
push
shr
mov
mov
dec
or
cmp
sub
sbbl
das
mov
sbb
into
adcb
inc
das
jbe
jo
enter
push
push
repz
daa
test
xor
pop
fbld
sarl
enter
sub
mov
sub
push
cmp
daa
lahf
jae
repnz
sbb
push
xchg
in
push
push
mov
scas
ficoml
movsl
sti
dec
mov
pop
mov
bnd
in
dec
xchg
cld
in
repz
cmp
cmpsb
stos
dec
insb
out
fdivp
insl
outsl
mov
adc
xlat
mov
cld
jno
mov
pushf
jle
fs
or
xor
mov
push
pop
rcrb
pop
or
add
mov
cmc
inc
movsb
hlt
dec
insb
outsb
arpl
scas
xlat
sub
jge
repnz
fstl
add
adc
repnz
jnp
jbe
addr16
pushf
lret
lock
sti
dec
adcl
pop
fists
pop
sar
cmc
mov
mov
push
shr
popf
mov
leave
xchg
pop
mov
aad
adc
ss
pushf
jle
inc
and
ror
inc
xchg
mov
sbb
push
mov
pop
jl
dec
mov
in
add
imull
in
movsl
lret
mov
addl
movsb
and
imul
adc
push
andb
pop
inc
mov
out
xor
sbb
sub
popa
inc
and
dec
push
and
mov
mov
mov
sub
inc
les
popf
ret
push
insb
stos
push
dec
das
pop
clc
xchg
insl
push
repnz
mov
repz
lock
fmul
pop
cwtl
or
or
lea
insb
loope
outsb
push
or
jb
pop
fmulp
mov
ss
sbb
sti
and
xor
fmull
repz
roll
mov
sti
cs
scas
push
or
or
aad
adc
pop
mov
cmc
mov
adc
mov
int3
jecxz
xchg
mov
cwtl
xchg
push
cmp
call
xchg
inc
jnp
inc
sub
arpl
adc
lret
mov
mov
rol
ds
jecxz
cmp
sub
push
loope
int3
sbb
sub
cs
pop
scas
inc
sbb
jo
cld
xchg
scas
aad
pushf
jo
int
cmp
repz
mov
inc
mov
roll
jbe
pushf
sub
popf
sbb
pop
outsb
test
js
in
jns
mov
add
jno
jg
sti
rcr
enter
pop
fbld
xor
push
pop
cmpb
xor
jg
rorb
leave
das
and
lcall
and
jnp
adc
lret
mov
std
inc
jmp
popa
pop
mov
into
jl
dec
mov
xor
cs
adc
xchg
fstpt
cld
xchg
outsl
jne
aam
pushf
dec
add
push
jecxz
mov
je
imul
cwtl
or
iret
mov
mov
mov
dec
jbe
adcl
push
clc
jmp
cld
gs
stos
es
adc
jno
xchg
jp
test
pop
out
sbb
iret
jmp
and
mov
sbb
or
xchg
cmp
outsl
xlat
fldenv
mov
stos
cs
popa
inc
arpl
gs
cwtl
test
dec
jl
or
pop
mov
jbe
test
out
icebp
ret
adc
jge
push
setge
push
fldenv
sbb
stos
push
stc
push
sub
and
addr16
lret
sbb
ds
xchg
decb
ds
cs
push
push
jmp
ss
and
xor
mov
cli
push
outsb
shll
fcmovbe
lret
jno
nop
cltd
in
je
pop
inc
cmp
outsl
xchg
bswap
cs
adc
enter
cltd
lods
in
dec
inc
in
and
jge
dec
sub
sub
jp
adc
into
mov
enter
and
push
popf
jno
rolb
ficompl
mov
dec
fisubs
mov
jle
ret
inc
sbb
mov
sti
lret
cmp
loope
pop
jg
sub
daa
jl
in
jp
mov
or
pop
cmp
inc
pop
repz
test
jne
cmp
test
mov
enter
add
lods
roll
cld
jecxz
divl
cmpsb
or
mov
jecxz
or
adc
outsl
jae
pop
adc
js
pop
mov
out
test
xchg
outsb
jo
xlat
andb
subl
cmpsl
inc
ja
xor
mov
jb
cld
sub
cmp
jmp
xor
testl
lcall
lret
push
mov
pop
rcr
bnd
arpl
imul
lret
sub
mov
mov
outsl
add
aas
scas
xchg
sti
test
add
fadd
ret
test
or
lods
push
mov
mov
repz
mov
ja
sbb
enter
sub
lret
filds
notb
imul
mov
negl
sub
lock
out
popa
or
movsl
cld
loope,pn
dec
add
dec
insb
sbb
jge
push
push
push
push
or
pop
loop
roll
js
int
shll
fstpt
mov
or
jae
jg
xor
popa
cmp
inc
imul
cmpsl
test
adc
rolb
xchg
stos
cmp
sbb
imul
ficoml
lea
cld
push
ffreep
jecxz
mov
jnp
dec
sub
mov
fistpl
icebp
add
in
repz
in
xchg
xrelease
lcall
mov
mov
rorl
repnz
cmp
nop
imul
cli
int
leave
int
jno
test
mov
cmc
shrl
insb
mov
mov
scas
cld
popf
inc
stos
xor
out
add
push
jo
xchg
inc
das
sub
int3
fdivrl
shr
pop
and
adc
xchg
out
xor
mov
pop
test
adc
out
jns
outsb
scas
cmpsl
dec
lahf
rcrl
jecxz
xchg
filds
cs
fbld
movsl
in
and
cltd
push
xchg
imul
movsb
xchg
mov
shr
or
dec
push
push
call
rep
ret
mov
lcall
cmp
loop
or
sbb
negb
adc
loop
push
jmp
stc
xchg
or
ss
xchg
mov
mov
inc
cs
outsl
jbe
add
enter
cmp
fisubl
imul
sbb
call
or
adc
movsb
and
es
and
mov
cli
cmp
rcr
inc
cmpsl
pop
adc
jp
fs
and
test
sub
pop
and
sub
repnz
scas
push
jl
aas
sar
mov
add
and
in
fistps
add
push
jl
xchg
xor
flds
cmc
sbb
jne
and
in
xchg
add
sbb
mov
fcoml
dec
sbb
repz
scas
inc
sub
iret
insb
mov
xchg
pop
push
mov
adc
jecxz
xchg
mov
jns
leave
dec
fs
mov
push
mov
fcompl
std
sbb
mov
stos
push
mov
cs
imull
add
js
stc
lods
arpl
mov
mov
insl
in
mov
dec
std
out
clc
stos
jg
popa
stos
jl
pop
jmp
cli
daa
cwtl
ds
clc
sbb
adc
cmp
rcl
popa
push
sahf
fiaddl
fiaddl
xchg
dec
jp
stc
stc
loop
cmp
or
call
jmp
add
test
bound
and
cmp
xchg
pop
pop
inc
jecxz
ds
negb
sub
jecxz
mov
push
inc
xchg
inc
in
sub
outsb
roll
xchg
cmp
into
mov
jge
insb
lock
or
psubusb
les
aad
mov
pop
dec
sbb
dec
pop
or
cli
cltd
pop
in
adcb
outsb
add
cltd
sub
rcl
lea
dec
in
sbb
addl
ja
scas
mov
sub
stc
sbb
pusha
push
test
cmp
fiadds
mov
stc
push
sbb
stos
and
mov
jl
mov
into
jnp
push
nop
sbb
xchg
pop
push
push
das
insl
xchg
mov
pop
test
hlt
mov
repz
pop
dec
push
loop
or
inc
in
lock
sub
jg
add
sbb
cltd
sbb
insb
sub
xchg
hlt
add
push
cs
add
adcl
and
pop
div
hlt
out
and
jnp
je
xlat
mov
xchg
xor
add
pop
xchg
inc
cmp
clc
add
sub
dec
dec
lret
rolb
fcomi
ror
std
sysenter
movsl
pop
in
jmp
cmp
mov
add
rcll
adc
push
addr16
aas
and
lods
or
cs
xor
fisubrl
jb
cmc
idiv
push
test
pop
sub
and
fsubrs
fldl
subb
fdivl
test
orb
mov
jo
inc
lret
jge
inc
pop
sub
xchg
sbb
in
dec
or
fs
sbb
outsb
cmp
dec
xor
cli
out
mov
mov
sub
mov
pop
jae
add
les
mov
arpl
int
pop
add
sbb
jecxz
popf
mov
adc
jmp
mov
fidivrs
jmp
add
xchg
into
cmp
roll
jo
push
fnstenv
shll
push
push
in
orl
lods
mov
jg
or
gs
or
push
mov
dec
cmp
or
adc
cmp
add
mov
mov
daa
popl
sarb
fisubrs
stc
xorb
cvtps2pi
jbe
into
cltd
dec
ja
out
insb
adc
jbe
cmp
andl
cmp
ljmp
dec
and
add
sbb
mov
gs
pusha
cmp
pop
mov
in
or
gs
gs
mov
mov
stc
lcall
dec
mov
rorl
in
push
rcrl
repz
push
fnstsw
add
jmp
js
imull
hlt
int
cmp
into
mov
fmuls
movsb
mov
push
nop
cmpb
or
mov
mov
negb
or
inc
sub
pop
jbe
fwait
test
dec
fisubs
push
out
addr16
fidivrs
ret
scas
cmp
out
shlb
data16
jne
stos
push
nop
pop
rcrl
mov
popf
lds
in
test
xchg
xor
and
ljmp
sar
test
mov
insl
jmp
addl
xacquire
mov
add
push
or
jl
and
push
dec
or
fbstp
jg
add
je
sub
outsb
popa
clc
scas
fists
mov
sbb
xchg
adc
int3
nop
aam
shl
int3
mov
lcall
mov
adc
inc
mov
fnsave
insl
jmp
lret
xor
and
cli
sbb
lds
fimull
xchg
mov
ss
hlt
sub
xchg
and
fistpll
movsb
jmp
aam
and
push
lret
xorl
idivl
aam
stc
push
lcall
mov
iret
in
lock
call
les
cmpsb
sbb
pop
dec
std
mov
mov
mov
push
mov
popf
adcb
cmp
shr
xchg
shrb
add
das
sarl
test
loop
ja
push
int3
pop
fbld
adc
dec
sub
jbe
xor
inc
js
fcoml
loopne
adc
push
popaw
sarb
push
popa
arpl
mov
push
or
mov
inc
sub
movsb
js
cmc
out
cmp
xor
adc
mov
adc
xchg
fsubs
mov
js
sbb
loope
mov
push
sub
fwait
adc
aaa
xchg
and
fldenv
int
stos
int3
inc
dec
test
stos
adc
test
jle
imull
jg
aaa
frstor
das
jb
pop
js
sbb
dec
xchg
popf
js
js
and
ficoml
pop
mov
pop
enter
leave
sahf
xchg
push
into
add
cmpl
mov
lds
xchg
repz
mov
push
or
sbb
jae
mov
jle
jbe
adc
sbb
hlt
por
bound
push
hlt
pop
adc
lds
lret
stos
cld
cmp
push
mov
sub
stc
or
ret
pop
inc
out
push
sub
mul
out
iret
push
sbb
pop
push
sub
push
dec
sub
add
cs
and
cwtl
outsb
lret
jecxz
xchg
in
dec
lcall
or
hlt
test
push
pop
jp
popf
fsub
popf
insb
push
mov
mov
cltd
jno
hlt
outsb
ficoms
gs
lret
roll
test
cmpsb
mov
push
mov
mov
xor
mov
or
popa
or
pop
stos
jg
add
push
push
hlt
mov
mov
cld
sbb
ret
adc
or
mov
in
sbbl
orb
bound
test
sti
dec
dec
aam
sub
inc
mov
pushf
mov
shll
jg
xchg
sub
outsl
xor
xor
stc
cmp
push
or
data16
loopne
or
push
test
loop
xchg
push
mov
and
dec
mov
add
rolb
push
sbb
dec
cmp
add
insl
cmp
pop
fs
add
cs
test
not
mov
loope
pop
xor
mov
cmc
inc
out
or
sti
repnz
push
adc
pop
dec
jp
fisttpl
orb
push
dec
rcll
adc
stos
jnp
stc
mov
xchg
pop
int
pop
clc
cli
pop
pop
in
sbb
fildl
push
jmp
dec
das
add
aas
lods
cmpsl
mulb
sti
mov
push
cmp
mov
lds
sbb
sbb
xor
or
and
cld
addr16
outsl
fists
pop
or
int
cmp
orl
addr16
stos
fnstcw
std
mov
xchg
mov
repz
in
pop
pop
cmp
adc
bound
mov
cmp
adc
out
repnz
push
pop
jecxz
scas
fimull
xlat
stc
sbb
mov
mov
icebp
lods
dec
add
push
sub
lcall
imul
roll
cmpsb
icebp
test
mov
pusha
adc
ss
xor
inc
add
adc
mov
int
sbb
add
mov
jecxz
pop
adc
cmp
push
mov
lds
ljmp
mov
loope
or
cmp
fsubs
pop
xor
xor
aam
stc
js
and
xor
movsl
inc
or
add
leave
in
sbb
xor
in
bound
jl
push
dec
cmp
add
jns
ja
rorb
xor
cmc
scas
hlt
or
xchg
pop
push
pop
repnz
stos
lcall
mov
xor
out
fldenv
data16
pop
outsb
mov
inc
or
aaa
iret
pop
lods
sub
jno
xchg
sbb
dec
pop
inc
aas
cmpsb
xchg
mov
push
add
sbb
ret
bnd
ret
xchg
push
jb
pushl
cld
lcall
popa
in
pushf
jmp
pop
rclb
pusha
mov
gs
or
hlt
aam
inc
and
inc
pop
push
sahf
mov
std
ret
or
dec
stos
pop
fwait
test
addl
sbb
rorb
movsl
les
mov
jno
add
or
mov
pop
adc
aaa
pop
and
adc
mov
test
dec
mov
push
xor
movsl
cs
daa
mov
sbb
sub
int3
in
ljmp
mov
fistpl
xorl
jns
adc
scas
pop
sbb
idivb
mov
sbb
add
mov
push
jns
inc
imul
mov
sub
cmpsl
cltd
bound
mov
loop
or
and
pop
pop
jo
shll
pop
out
sahf
setbe
or
adc
out
enter
aam
mov
mov
clc
scas
enter
mov
cld
lcall
call
mov
lahf
stos
lcall
cld
les
cmpsl
adc
or
pmaxsw
cltd
ljmp
out
push
push
mov
or
fisubs
das
test
push
in
jb
and
cmpsb
loopne
pop
or
sahf
adc
xchg
add
lea
and
das
xor
lret
adcl
repnz
lret
sbb
mov
mov
push
leave
dec
sar
insl
dec
jnp
add
inc
test
mov
cmp
and
and
dec
loope
imul
filds
add
mov
cmp
ss
stos
inc
adcl
xchg
movsb
push
jno
in
jns
jecxz
and
jge
xchg
mov
xlat
xchg
rcrl
mov
inc
ret
enter
dec
xchg
cmp
pop
mov
daa
pop
cmp
sub
mov
add
xor
ja
sub
subb
mov
lea
outsl
jae
pop
push
xchg
jno
add
imull
jo
xorl
sahf
push
or
btsl
ds
xor
sbb
xchg
mov
pop
add
into
inc
fdivp
fdivrs
cmp
pusha
xchg
dec
sbb
mov
fsincos
or
sbb
repnz
lods
je
sti
sub
dec
imull
mov
and
dec
aaa
mov
adc
pusha
pop
xchg
dec
leave
stos
repnz
sub
insl
lods
cmp
enter
sub
pop
aad
adc
adc
jnp,pt
xlat
and
pop
cmpsl
jns
jo
and
push
rcrb
xchg
pop
and
mov
imul
or
lods
and
or
inc
adc
xchg
outsb
lret
or
mov
cmp
inc
stos
rol
dec
push
sub
push
jae
adc
sbb
jns
or
repnz
mov
es
stos
pop
lods
and
les
aam
lcall
fcomps
mov
ss
pusha
mov
ss
addr16
mov
pop
repnz
mov
shlb
push
cmp
sub
stos
in
xchg
push
mov
push
jmp
mov
and
int3
xor
sub
or
pop
mov
mov
inc
jns
sbb
xchg
mov
in
test
push
mov
rorb
mov
daa
inc
or
shrb
in
dec
adc
insl
dec
adc
sub
push
loopne
and
and
in
adc
mov
or
loopne
add
mov
stos
adc
dec
adc
dec
lcall
cmpl
xor
sbb
test
xchg
addb
test
ljmp
push
aad
mov
ret
dec
cltd
and
test
pop
mov
adc
ror
leave
in
int
xorl
frstor
mov
mov
or
popf
insl
shlb
pop
nop
mov
mov
jnp
in
adc
cmp
mov
sbb
ret
cmp
dec
pop
jg
jns
int
aas
rcr
adc
mov
jp
jb
imul
es
push
imul
push
test
int3
dec
pop
ja
out
out
testw
jle
sub
shrb
mov
scas
jge
sti
lcall
add
xchg
aaa
pop
repz
adcb
into
cmp
sbb
bound
lds
nop
nop
lcall
mov
push
mov
pop
push
cmc
lahf
in
pop
aad
cmp
xor
insb
mov
scas
xchg
pop
dec
or
mov
shl
out
pop
int
jo
add
mov
insb
ret
hlt
push
cli
ret
pushf
mov
jge
jmp
xchg
movsl
sbb
les
sub
inc
xchg
jle
add
std
sub
lea
mov
out
enter
sbb
mov
cmpsl
mov
popa
js,pn
ficomps
dec
lods
movsl
and
aaa
sub
icebp
scas
pop
popa
scas
rcr
xchg
in
xor
ds
in
daa
sbb
icebp
inc
loope
rcrb
add
pushf
dec
cld
call
or
push
pop
cmp
adcb
push
or
add
mov
mov
jne
divb
ret
push
lahf
aam
adc
add
cwtl
mov
xchg
les
rcrl
sar
popa
xor
adc
jno
cmp
dec
and
jecxz
movsb
jecxz
xchg
rorb
outsb
cmp
lock
fs
int
inc
xor
jo
adc
inc
cmp
xorl
xor
jae
or
dec
sbb
or
fdivr
bound
pop
sub
popf
adc
or
cs
leave
push
shlb
dec
mov
push
xor
fdivrs
cld
mov
or
and
cs
mov
add
loop
aad
dec
fildll
in
jno
divb
push
pop
xchg
push
mov
xor
int
stc
addl
js
xchg
mov
out
dec
out
gs
xchg
iret
cmc
fstps
call
dec
stc
hlt
leave
push
mov
cmp
sbb
movsb
xchg
push
test
lock
xchg
lret
shll
es
ds
jg
sbb
dec
push
jmp
test
or
data16
aad
jo
dec
sbb
jo
mov
movsl
fwait
loope
adc
xchg
leave
popa
popf
xchg
add
or
stos
adc
negb
jecxz
daa
lods
in
leave
add
or
xor
jecxz
xchg
lods
data16
ss
add
scas
or
sbb
xchg
jl
rolb
cmc
jge
es
inc
imulb
sub
add
sub
dec
jge
pop
aam
and
inc
adc
outsl
stc
movsl
pop
push
jecxz
aas
lds
sahf
push
mov
jnp
cmp
cld
push
ljmp
fsubrl
jmp
les
and
loope
jo
mov
mov
push
lret
data16
sarb
xor
mov
mov
mov
sbb
imul
push
mov
aad
mov
and
ds
je
xchg
ret
jo
pop
cmpb
inc
push
mov
repz
ja
xchg
hlt
dec
push
fisubrl
popa
inc
xor
nop
insl
xchg
xchg
pop
je
jge
enter
lret
aas
leave
push
rcll
xor
mov
cmp
dec
das
imul
cmp
xchg
xor
jge
pop
xchg
inc
mov
or
adc
cmp
jmp
sub
in
sarb
arpl
int
mov
jno
add
cmc
inc
roll
das
mov
add
test
sarl
sbb
ret
mov
or
push
mov
push
stos
js
mov
in
pushl
sub
jo
into
and
lds
push
inc
cwtl
aas
add
mov
dec
cmp
push
clc
sub
jecxz
fdivrp
xor
ja
test
or
sbb
js
lret
out
xor
xchg
fidivrs
and
out
inc
jle
and
mov
sub
jp
cmp
bound
repz
lcall
aam
jmp
aaa
adc
mov
out
cld
and
mov
xor
push
out
outsl
pop
cmp
frstor
loopne
push
pop
sub
sbbb
movsb
loope
lcall
cld
push
mull
pop
mov
xchg
dec
aam
push
mov
cmp
and
xor
and
and
jae
jbe
cld
into
pusha
and
bound
jae
mov
xchg
bound
nop
jae
mov
gs
fsub
fldl2t
or
sub
insl
mov
sub
push
hlt
jmp
sbb
and
and
jbe
sub
notb
push
or
iret
push
lret
cs
cmp
movsb
divps
jmp
xor
aam
push
mov
adc
and
push
nop
cmp
clc
std
sbb
cmpsb
pop
sub
sub
dec
scas
xchg
xchg
loop
cmc
loop
in
mov
ret
lret
sbb
arpl
repnz
imul
xchg
sahf
test
mov
sub
xchg
inc
shll
mov
pop
cmpsl
jb
imul
in
popf
stc
and
pusha
mov
push
es
lret
aas
cmp
jp
cwtl
add
jge
adc
fsubrs
jns
test
add
mov
add
aaa
sbb
pop
pushf
mov
mov
sahf
orb
lods
xchg
out
push
cmp
cmp
add
fimuls
fiadds
insl
cmp
ret
sbb
xor
mov
mov
push
sarl
adc
push
repz
lahf
add
outsb
fdiv
popa
xlat
dec
insl
fsubr
add
out
jle
pop
rcr
fs
mov
push
mov
mov
sbb
cmp
sub
dec
movsl
je
jmp
sub
ss
xor
cld
fwait
jmp
das
adcl
cltd
jg
ret
cwtl
or
inc
xchg
or
lret
adc
mov
test
ljmp
dec
pushf
stos
push
gs
pop
jns
repnz
xor
adc
jmp
sbb
ret
sbb
cmpsl
mov
scas
lcall
add
insl
jb
xor
fstl
mov
mov
dec
aam
sbb
lea
adc
cs
sub
adc
js
rolb
outsl
mov
mov
cmp
xchg
nop
cwtl
or
cmp
mov
xor
fists
leave
data16
xchg
aam
iret
mov
jne
xrelease
sub
mov
jl
inc
fmuls
pop
xchg
clc
cmp
or
jo
int3
push
xchg
push
jbe
pop
outsb
jno
loope
in
jl
and
jbe
xor
or
in
jae
lahf
and
sahf
jecxz
add
push
or
mov
mov
bound
dec
imul
cmp
rorb
dec
addr16
leave
arpl
pushl
ret
cs
dec
arpl
dec
xchg
ret
in
scas
and
or
aas
rcr
xchg
sub
jecxz
fdiv
cmc
pop
subb
fistpll
jp
cmp
ffreep
cltd
lret
sbb
xor
xor
sarb
repnz
bound
push
ror
insl
cwtl
inc
rcl
xchg
ljmp
cmp
cmp
mov
mov
mov
dec
sbb
mov
int3
xor
jo
mov
aad
loopne
test
dec
in
mov
mov
popa
es
adc
es
fcmove
subl
and
and
shl
mov
pushf
sub
sbb
xchg
push
pop
cmp
adc
jae
fwait
je
jp
mov
xor
fmul
test
sbb
and
cmpsb
lret
add
testb
jge
lods
cs
push
dec
ds
jne
jo
shrl
pop
jmp
jnp
cmp
insb
add
sbb
mov
pop
and
insb
test
add
xchg
or
sub
pop
push
sbb
repz
scas
or
sti
inc
pop
mov
dec
push
out
das
or
pop
and
fisubl
pop
pop
mov
in
adc
testl
pop
cmp
cwtl
cs
mov
sahf
pusha
lret
adc
int
inc
pushf
jne
mov
iret
aam
dec
cmpsl
fdivs
js
scas
insb
push
push
pop
aas
mov
test
add
xchg
out
pop
cmpsb
mov
xor
and
ds
loopne
xor
test
aad
test
stos
sbb
int3
jmp
jmp
inc
add
in
dec
or
hlt
add
inc
int3
pop
fsubrs
fsub
xor
out
out
test
repz
sahf
cli
sbb
rolb
add
mov
dec
and
dec
inc
outsb
pushf
scas
scas
subb
lds
and
outsl
scas
sbb
push
cmpsl
and
mov
loopne
outsb
fbstp
in
xor
mov
fs
cmpsb
dec
sbb
mov
ret
lock
aas
in
sub
movsl
std
out
pushf
pop
xor
clc
mov
daa
sub
sahf
loopne
cli
cmp
pop
dec
in
pop
push
dec
push
nop
fistpll
and
in
cmp
push
pop
aad
xchg
add
xor
aaa
and
mov
jo
adcb
out
cmp
addl
xlat
test
xchg
pushf
mov
adc
fisttps
dec
mov
bound
imulb
mov
scas
in
cmp
cmp
xchg
lds
stc
mov
lods
adc
sbb
push
cltd
cmp
stos
push
dec
mov
mov
sbb
or
loop
add
push
std
inc
jb
pop
out
cmp
in
notb
test
test
int
push
mov
pop
mov
mov
jle
jae
out
lahf
inc
lods
ljmp
fcomps
stos
jge
jo
xor
adc
out
push
aas
fildl
jl
inc
cmp
xor
mov
enter
push
sub
cmc
push
sub
aaa
lock
fbstp
jg
out
pop
xor
stc
mov
outsl
push
fsubs
xor
xchg
mov
mov
push
lret
xlat
push
ret
inc
pop
sub
leave
sahf
push
or
mov
cld
mov
mov
sub
cli
loope
add
or
adc
rorl
pop
dec
enter
popa
or
cld
outsb
insl
xchg
dec
and
mov
mov
or
scas
icebp
sbb
cmp
arpl
jo
sbb
popf
jns
mov
sbb
lods
and
mov
adcl
jbe
cmp
dec
sahf
sbb
shll
dec
push
mov
sahf
inc
mov
pop
rcrl
fbld
sub
aam
jo
stos
iret
cmpsl
bound
jge
lret
pop
jge
mov
sbb
rep
imul
jge
or
out
cmpsb
xlat
ret
mov
push
jge
sub
sbb
jl
pop
test
cwtl
dec
out
add
les
push
arpl
mov
orb
push
aam
mov
mov
sbb
dec
loope
and
addr16
ret
sbb
cmp
dec
xor
arpl
inc
pop
icebp
or
mov
mov
lods
imul
sbb
push
stos
cmp
jp
xchg
lock
sarl
jl
fidivl
dec
mov
cmp
test
movsl
push
imul
add
cwtl
sub
push
ror
mov
cmpsb
dec
sub
andl
mov
xor
cpuid
cmp
ss
xor
mov
ss
stos
inc
cmp
rol
lods
sub
pop
mov
addr16
pop
add
lds
jecxz
jp
stos
sbb
push
push
mov
lret
scas
push
mov
ljmp
mov
sbb
inc
enter
and
cmp
shrl
pop
je
fcmovnb
cmp
adc
jb
test
test
push
sbb
add
lret
xor
sub
pop
clc
jno
ja
arpl
push
addr16
xlat
adc
and
cs
sub
push
jecxz
sahf
cltd
aam
dec
out
pmaxub
mov
inc
adc
pop
jno
push
adc
repz
or
pop
jmp
pop
lret
sub
sbb
or
jb
and
imul
mov
out
repz
xchg
loop
xchg
pop
jle
dec
pop
and
out
jl
ss
in
jae
mov
dec
iret
cmp
add
leave
fistpl
cmp
push
sbb
xor
and
jb
imul
cmpsb
jb
push
imul
cmc
das
insb
xchg
or
mov
js
adc
stos
aam
pop
insb
pop
adc
adcb
lcall
xchg
and
testl
add
divb
pop
add
cmp
mov
sub
gs
stc
pushf
push
inc
lret
sub
aaa
mov
pop
sahf
and
ljmp
jne
lods
out
pop
inc
mov
std
repnz
xchg
test
pop
mov
mov
pop
jecxz
cmp
pushf
incl
or
cmp
loop
pop
xor
push
adc
add
cmp
xchg
pop
push
pusha
pop
je
cld
ret
lea
push
xor
loope
mov
sub
mov
push
outsb
xor
call
jno
faddl
mov
dec
mov
lcall
roll
sub
rorl
inc
into
push
lret
fnsave
mov
in
scas
sbb
neg
roll
stos
or
mov
js
xor
jbe
mov
or
cmp
aaa
cwtl
xchg
xor
jb
into
xchg
in
in
jmp
insl
lahf
fiadds
or
gs
das
daa
jp
pop
pop
jl
imul
or
xchg
xlat
insb
imul
push
xchg
xchg
iret
xchg
or
repz
je
jmp
sbb
addl
stos
sbb
shlb
dec
imul
or
push
insl
loope
sub
or
loop
insb
dec
cmp
cmpsl
and
mov
mov
daa
aaa
shl
rcr
outsb
push
jns
lahf
mov
loop
jecxz
push
mov
aad
dec
inc
sbb
aad
js
mov
aaa
and
jl
or
enter
rcrb
adcl
inc
mov
dec
add
xchg
lock
inc
popf
es
test
push
insb
out
jne
mov
incb
mov
js
or
pop
out
fcompl
loopne
mov
call
dec
xchg
inc
xor
mov
je
bound
out
in
sub
loope
xchg
scas
jmp
push
or
cmpsb
jae
or
repz
inc
inc
push
lcall
mov
shrb
push
jecxz
xchg
mov
es
daa
clc
xlat
adcl
or
jnp
sbb
rorb
add
loop
aaa
jge
mov
push
sti
sbb
or
bswap
sahf
pop
adcl
ds
push
cvtps2pd
shl
push
adc
pushf
mov
add
fstps
push
aaa
adc
in
jmp
push
dec
add
push
sub
insb
fcomi
sbb
xor
xchg
sub
add
pop
in
xor
or
mov
shl
popa
xchg
clc
mov
je
cmpsb
lds
xor
mov
mov
adc
nop
in
add
fdiv
dec
jp
mov
inc
pop
in
dec
faddl
pop
ret
jbe
out
add
loopne
addr16
jae
mov
mov
cmp
add
jne
mov
push
andb
sbb
cwtl
or
lods
mov
mov
jb
inc
pop
dec
jecxz
cltd
daa
enter
mov
mov
std
push
loop
icebp
jae
insl
cld
hlt
test
in
lret
xor
test
jo
lds
cmc
fcompl
push
cwtl
mov
scas
loop
call
pop
xor
lods
mov
add
dec
sar
sbb
mov
add
rcl
test
jge
mov
add
insb
int
add
push
aam
jb
out
cmp
dec
repnz
and
arpl
out
and
jmp
insb
ds
xchg
dec
or
adc
mov
nop
mov
movsb
push
movsl
jns
xor
inc
or
shll
mov
popf
push
push
mov
outsb
and
mov
call
push
testl
ret
les
pushf
iret
mov
mov
jmp
inc
stc
push
stos
nop
lcall
jmp
mov
lahf
adcb
mov
or
fcomi
xlat
xlat
and
addr16
xchg
lcall
pop
and
mov
int
idiv
outsl
or
sub
test
inc
jns
xchg
lret
mov
dec
negb
test
jbe
inc
testl
pushf
ror
imul
clc
push
lock
les
popa
push
dec
in
sbb
jg
add
and
loopne
out
add
cmp
push
adc
rcr
mov
and
dec
cli
add
jnp
mov
mov
xchg
jge
add
icebp
arpl
jbe
inc
mov
test
test
push
mov
pop
ficoms
or
xchg
cltd
addr16
jb
sahf
ffreep
int3
mov
xchg
fistpll
fwait
jne
testl
out
iret
jbe
roll
test
ss
test
cs
xchg
pop
or
mov
mov
in
enter
jne
push
xchg
mov
jne
jnp
es
sbb
das
mov
add
js
in
jg
mov
jmp
scas
mov
mov
les
and
add
int
inc
hlt
pop
xchg
insl
mov
les
or
and
add
xchg
loopne
bound
cs
cmpsl
add
inc
aaa
push
test
jmp
lret
outsl
aas
cmp
xchg
inc
cmp
push
aam
iret
repz
sbb
cli
rcrl
dec
dec
data16
lods
mov
data16
fsubp
xchg
or
loope
push
xlat
adc
sub
insb
mov
int3
es
pop
stc
mov
add
jge
js
test
push
inc
pop
xchg
stos
cli
push
movsb
jmp
sub
arpl
or
push
mov
pop
pop
jo
scas
shlb
pop
xchg
sub
mov
mov
pop
in
rol
mov
call
push
pop
scas
fwait
push
push
push
inc
leave
ret
or
ror
mov
add
sarl
cli
pop
mov
leave
test
pop
test
in
dec
sub
imul
pop
adc
xlat
ret
xchg
aas
lret
dec
inc
and
adc
and
mov
loop
jo
cmova
sbb
cld
mov
pop
sub
jge
jecxz
bound
std
jmp
cmp
xor
sub
test
lcall
ljmp
mov
lock
jmp
pop
xchg
sbb
xchg
pop
andl
xor
inc
test
std
mov
dec
xor
test
inc
mov
xor
cwtl
test
or
jg
icebp
mov
sbbl
sub
fwait
repz
sub
rorb
negb
jns
mov
xlat
lahf
mov
inc
push
jns
push
push
mov
arpl
in
in
pop
mov
xchg
push
push
test
out
loop
cmc
aas
dec
in
xchg
sbb
mov
mov
pop
mov
and
and
test
adc
sti
mov
dec
es
outsb
mov
ret
lock
push
ja
das
ret
aaa
add
push
jge
aad
adc
test
jmp
inc
jno
shlb
xchg
jecxz
and
js
sub
xchg
sub
ja
push
mov
iret
jnp
mov
les
dec
ret
sbb
test
sarl
mov
mov
dec
jae
lret
rcll
sbb
sbb
mov
mov
xchg
mov
add
and
ss
hlt
mov
cld
movsb
add
dec
sbb
push
adc
jmp
loop
cmp
fmuls
sbbl
inc
jge
mov
imul
xchg
cmp
fwait
imul
mov
and
sbb
mov
out
push
rcrb
outsl
cltd
dec
pop
pop
mov
es
xor
scas
js
outsb
push
lods
jmp
and
inc
dec
add
and
lods
repnz
rolb
push
pop
pusha
imul
and
xor
aam
push
dec
leave
aas
cmp
and
movd
shl
inc
out
sub
nopl
lock
add
cmp
in
push
sub
test
mov
repz
sub
mov
mov
add
ljmp
jnp
pop
lret
pop
rol
dec
or
out
pop
arpl
cmp
sub
sbb
mov
cmp
xor
mov
mov
mov
sub
xor
loope
mov
pop
pop
mov
shr
out
adc
jecxz
in
inc
sahf
and
pop
inc
mov
cs
pop
lahf
push
or
mov
cmpsb
or
pushf
shl
lea
mov
ja
or
ret
mov
add
lds
jmp
mov
jl
pop
sbb
cmp
inc
test
mov
dec
mov
or
dec
adc
sub
out
out
xor
out
cmpsb
aam
mov
jecxz
inc
cld
adc
mov
stos
in
dec
dec
cs
jge
xor
movb
popf
ret
mov
push
xchg
dec
cmp
or
sbbl
leave
mov
insl
mov
inc
jle
and
push
sbb
sbbl
pop
adc
call
mov
enter
dec
xor
fimull
adc
xchg
std
sbbb
mov
rorl
xor
mov
and
cwtl
scas
fnstsw
fadds
fcmovbe
inc
pop
and
frstor
sahf
ss
sahf
cmp
add
xor
test
inc
pop
inc
das
lods
movl
daa
adc
sub
lock
iret
sarb
call
mov
sbb
rclb
lods
icebp
cmp
adc
pop
mov
cs
hlt
push
lea
ja
int3
sub
pop
cmp
cmpsb
decb
xchg
outsl
mov
out
fcoms
pop
cmpsb
lret
sbb
cmp
sub
xchg
out
call
sbb
inc
jle
sub
jo
roll
mov
xor
push
mov
and
pop
push
out
and
mulb
test
fstps
inc
push
sbb
pop
push
sub
cmpsl
and
adc
lret
enter
ja
movsb
add
mov
mov
loopne
mov
or
xchg
in
cli
movsl
adc
addr16
loope
xor
cltd
jne
popa
push
adc
dec
mov
mov
xchg
outsl
jle
fisubs
pop
sarb
nop
sbbl
jbe
pop
adc
ljmp
out
scas
pop
popa
ss
aas
les
je
clc
and
jp
out
sub
sub
pop
inc
lods
fwait
sub
push
mov
ret
bnd
es
out
cltd
out
mov
fwait
xchg
shl
in
fs
mov
mov
stc
and
push
jecxz
sub
aam
into
push
and
cwtl
xchg
cmp
mov
rcr
cmc
stos
mov
ret
xor
jne
sub
and
mov
add
add
enter
cmc
push
ljmp
and
push
mov
jno
fistpll
inc
dec
testl
xchg
in
push
jp
jb
cwtl
jno
ds
mov
push
stc
xor
imul
cmp
int
mov
cmp
mov
xor
mov
xchg
ja
mov
xchg
mov
push
movb
jbe
and
sbb
xchg
aad
int
jb
or
jb
add
sbb
lods
cmp
jbe
lahf
sub
push
xchg
jne
in
pop
ljmp
xchg
xlat
rorl
cli
push
daa
xchg
mov
es
imul
cmc
enter
xchg
inc
jno
mov
divb
jae
and
sub
mov
cld
rcr
jne
test
fdivs
test
ss
cmpsl
daa
cmc
add
pop
les
push
lods
adc
dec
cmp
xorb
push
or
aad
jmp
sbb
scas
xor
cli
sti
dec
pop
xchg
sub
jnp
sbb
leave
in
jecxz
cwtl
sbb
ljmp
in
sti
cld
popf
inc
dec
adc
push
jle
out
jge
aas
inc
jmp
ds
popa
pop
les
xor
aas
stos
loope
or
shlb
add
adc
imul
lret
popf
jbe
xor
pop
sub
andb
daa
in
xchg
pop
add
scas
jne
jmp
xchg
pop
add
call
xor
inc
popf
pop
inc
or
jno
test
inc
cmp
iret
add
xchg
call
es
aad
inc
fdivr
jge
loope
aam
sbb
loope
js
xor
xor
movsl
mov
aas
mov
mov
in
push
in
inc
pop
scas
clc
sbb
ljmp
dec
dec
dec
xchg
xor
sbb
push
adc
mov
jge
xchg
sbb
loopne
stos
call
inc
jge
lret
mov
gs
jecxz
xor
push
ficoml
addl
mov
cmc
mov
push
cld
cmp
mov
push
cmp
add
lret
es
int3
jno
les
cmp
jb
js
mov
repz
push
mov
pop
loopne
mov
gs
pusha
lahf
xchg
test
pop
cmp
sub
xlat
sbb
shl
in
xor
cmp
enter
push
mov
xchg
jl
mov
fistpll
inc
daa
or
loop
and
mov
mov
add
sub
pop
pop
dec
adc
mov
add
jbe
mov
fcompl
insl
fisttps
bound
or
scas
mov
pop
mov
adc
or
xor
mov
and
or
aaa
adc
orl
push
jmp
aam
fwait
leave
and
jb
stc
andb
pop
scas
xchg
mov
jmp
test
cmp
add
inc
arpl
xchg
out
int
dec
cwtl
cmc
pop
jns
arpl
dec
mov
adcb
sub
iret
pop
cmp
jo
and
push
imul
xchg
frstor
fistl
int
insb
insb
adc
cmpsl
adc
in
add
push
jae
aaa
lahf
mov
xor
inc
jl
mov
rolb
push
jno
dec
cmpb
or
in
call
inc
nop
repnz
adc
push
call
mov
dec
test
mov
jno
jnp
pop
mov
mov
mov
and
out
push
sbb
mov
xorb
xchg
cs
xchg
iret
out
mov
mov
ficompl
icebp
push
cmpsl
fsubrs
push
pop
popa
enter
sahf
test
adc
fisttps
xor
jnp
jmp
mov
enter
test
mov
mov
addr16
xor
mov
mov
out
addr16
cmp
in
out
inc
and
fdecstp
mulb
xlat
in
xor
repz
inc
xchg
mov
je
push
mov
cmc
std
jns
leave
lods
xchg
fsubrl
rolb
cli
hlt
mov
ret
ret
pop
cmp
scas
rolb
xchg
adc
imul
mov
std
mov
movsb
push
nop
test
sub
jl
push
push
dec
pop
cmp
cmp
push
or
addb
outsl
cld
ret
jo
fstps
pusha
sub
xorl
fmuls
outsl
cld
xchg
inc
rol
sbb
mov
sub
arpl
or
outsl
lods
mov
cmp
adc
int3
sbb
scas
ficomps
add
xchg
sbb
stos
out
les
cmpsl
loop
add
aam
scas
or
pop
pop
lahf
sbb
sub
inc
jmp
ror
ret
or
ficompl
in
push
inc
cmp
dec
rcll
mov
sbb
mov
jne
aas
inc
daa
jno
mov
dec
in
pop
or
jp
ja
xchg
inc
xchg
pop
mov
or
mov
mov
inc
pushf
jne
pop
popa
ljmp
jl
out
mov
cmpsl
jl
push
mov
push
fldenv
xor
mov
sbb
and
mov
outsl
std
xor
or
or
or
loope
movsb
adc
hlt
lcall
mov
dec
in
xor
in
cmp
lret
repnz
push
dec
pop
pop
test
std
pop
lcall
fcoms
gs
ljmp
pop
and
test
mov
aam
mov
xchg
scas
testl
push
int
and
ret
int3
and
out
xchg
xchg
lea
or
cs
cmc
stos
lret
xchg
sbb
dec
inc
pop
or
push
inc
movsl
cmp
pop
or
addb
int
add
call
cmp
aam
mov
aad
xor
jnp
add
inc
iret
mov
jo
or
int3
stc
pmulhuw
fmul
mov
lret
std
lret
ljmp
mov
nop
std
dec
es
shll
imul
aam
push
mov
mov
adcl
inc
xchg
les
cwtl
jmp
xchg
mov
loop
add
mov
xor
fidivs
lea
pop
jne
jmp
or
fwait
les
mul
loopne
test
in
mov
sbb
les
or
pop
mov
xchg
push
push
sbb
test
leave
leave
int
divb
insl
or
imul
in
xchg
xchg
je
jge
push
jo
and
sub
dec
orb
xchg
lods
and
scas
mov
xchg
repz
adc
cmp
or
xchg
push
in
repnz
aad
flds
loop
mov
pop
in
ljmp
aad
mov
xor
loop
lret
test
dec
dec
cmpsl
out
push
mov
pop
lods
lret
sub
cld
pop
lret
fwait
xchg
testb
hlt
imulb
das
xchg
insl
pop
xchg
filds
inc
jecxz
jmp
and
lahf
sub
push
jae
xchg
jmp
movsl
nop
popa
mov
popa
orb
sub
sub
xor
jmp
inc
push
cwtl
mov
stc
call
mov
pop
lcall
sub
or
inc
mov
clc
xchg
add
xchg
dec
jne
and
mov
fs
aad
pop
push
scas
add
and
lret
aam
out
test
adcl
push
mov
out
pop
fldenv
sub
aas
jb
fs
or
stc
rolb
addr16
arpl
mov
icebp
pop
inc
cs
and
pop
and
imul
cmp
jbe
out
pop
dec
sub
pop
imull
mov
push
xchg
cmp
loopne
mov
sbb
jl
cmp
add
push
mov
fwait
dec
into
icebp
adc
lcall
jmp
adc
scas
gs
xchg
mov
lcall
lods
adc
daa
add
cmp
jae
cmp
je
pop
fwait
inc
jl
pop
or
lea
mov
mov
pushf
and
xor
in
test
lret
cmp
and
xor
and
outsl
jnp
push
sahf
cmp
je
or
cmpsl
push
nop
xchg
mov
inc
stos
cmp
outsl
lret
dec
std
lret
loopne
push
pop
mov
pop
sub
movl
stos
jmp
cltd
in
or
or
push
and
mov
xchg
push
cld
sbb
dec
mov
roll
pop
xor
xchg
fcom
sub
nop
jnp
and
insb
mov
in
add
or
lcall
mov
mov
cwtl
adc
mov
std
push
loope
sub
jbe
mov
movsb
add
xor
int
outsl
lret
jmp
mov
std
imul
pop
xchg
xchg
and
mov
dec
pop
test
pop
out
pop
test
push
loop
scas
fisttpll
mov
xchg
sbb
lock
cmp
cmp
fimull
jl
sbb
dec
sub
sub
inc
sub
push
int3
pop
dec
xchg
sub
jb
xor
cmpsl
push
ret
mov
lcall
hlt
xorl
cmp
icebp
aam
pop
mov
cmp
cmp
push
in
cs
mov
xchg
fisttpl
and
loopne
xchg
xchg
inc
cmp
jno
mov
adc
das
pop
jb
fdivr
mov
andb
sbb
out
inc
pop
mov
jo
push
cmp
pop
jecxz
mov
lret
cmc
bound
sbb
pop
and
gs
loope
bound
into
pushf
pop
sbb
fwait
ja
divl
push
adc
mov
stos
ret
bound
popa
adc
sarb
jle
es
arpl
imul
pop
popf
arpl
dec
mov
test
js
add
leave
rolb
repz
aaa
or
and
dec
add
out
and
mov
shrb
add
push
cmpsb
outsb
pop
or
pop
jb
leave
sbb
and
add
push
xor
stos
ret
sub
xor
push
movsb
mov
and
sub
jg
cwtl
hlt
popl
pop
icebp
adc
add
push
mov
xchg
insb
movsb
sub
inc
push
mov
mov
test
lahf
dec
out
movsl
stc
inc
mov
jmp
inc
mov
cld
icebp
jl
or
jns
into
imul
mov
or
mov
cltd
es
test
sub
pop
scas
icebp
xor
fdivrl
add
outsb
cmc
enter
push
aam
pop
pop
fidivrs
fdivp
sarb
sbb
out
loopne
add
cli
ja
mov
push
and
mov
xchg
adc
mov
dec
mov
mov
dec
lea
stc
mov
cmpsl
pop
shll
divb
jmp
aad
insl
pop
lret
push
je
or
pop
pop
fst
push
ljmp
push
pushf
lret
js
mov
lahf
rcrl
sbb
loope
add
movsl
mov
dec
dec
or
icebp
mov
jecxz
fcoms
mov
repnz
stos
and
adc
push
hlt
lahf
xchg
std
jbe
fdiv
cmpsb
push
mov
xor
aaa
jp
inc
pop
popf
mov
and
iret
popa
clc
mov
mov
adc
push
jmp
adc
iret
pop
scas
ret
or
mov
in
aam
stos
fs
mov
pop
sbb
mov
and
mov
jecxz
pop
dec
mov
pop
in
inc
shlb
mov
mov
add
es
cld
jl
pop
dec
imul
hlt
xchg
cmpsl
push
push
jne
insl
not
sahf
sbb
mov
cmp
stos
lock
pushf
cmp
jae
rcll
cwtl
cmp
lcall
bound
call
fsubs
psrlq
aaa
sbb
mov
cmp
scas
loope
adc
les
pop
or
dec
shrl
repz
gs
lds
pop
xchg
int
pop
fiadds
mov
addl
cmp
or
cmc
lds
insl
out
mov
fbld
jne
sub
aaa
repz
jb
subb
stos
and
lret
or
add
stos
pusha
popf
mov
dec
cli
iret
adc
dec
mov
dec
pushl
mov
jbe
or
sahf
aaa
dec
out
push
xor
inc
mov
or
ret
mov
xchg
cli
sbb
cmp
jmp
movsb
add
nop
stos
jae
iret
pop
sbb
add
fsubrl
lods
mov
fcompp
mov
sbb
addr16
int
and
or
lret
pop
out
xchg
sbb
ret
xor
fnstsw
mov
xor
and
pop
flds
mov
jg
sub
pusha
pop
add
fcmovne
mov
inc
data16
sub
mov
aam
cwtl
add
clc
dec
insl
loope
lret
xchg
and
add
lret
jmp
sub
stos
mulb
mov
add
dec
cmp
int
out
pop
push
bound
xor
push
xor
sub
mov
push
pop
rolb
xchg
sub
mov
shrl
mov
push
sub
movsb
scas
xor
jle
pop
ret
cli
mov
je
pop
or
dec
lcall
dec
jmp
inc
xlat
pop
ret
add
xchg
pop
pop
add
xchg
cmp
and
pop
push
pandn
in
ds
popf
mov
xor
push
inc
test
mov
out
pop
pop
mov
sbbb
testb
jmp
inc
inc
loope
out
cmp
dec
pop
adc
fiaddl
icebp
into
in
jae
inc
push
inc
test
fists
mov
dec
sbb
pop
outsb
or
sbb
ret
add
sub
push
jmp
pop
or
sub
pop
fisubl
leave
xchg
jno
sub
sbb
out
pop
inc
pop
test
add
xor
push
call
ja
xor
arpl
and
fs
push
lcall
adc
stos
push
xor
jl
add
inc
lods
idivb
fmulp
push
xchg
and
lret
push
cmp
dec
and
cltd
clc
sahf
pextrw
insb
push
lcall
jae
fidivrl
std
cs
std
loop
dec
mov
mov
in
lock
or
or
xor
push
or
lret
cmp
adc
outsb
rcll
lods
fists
xchg
xor
gs
cmpsl
xor
add
enter
lahf
aas
ret
and
rol
push
ss
in
add
aad
and
mov
fcoms
jbe
jg,pn
inc
mov
test
movsb
sahf
pushf
cmp
int
aam
std
pop
ds
inc
std
sub
out
out
dec
inc
push
mov
shlb
cmp
cs
das
inc
cmc
sub
and
cmp
aad
adc
mov
scas
out
stos
mov
cltd
out
mov
mov
pusha
push
adc
or
mov
out
shl
xchg
scas
jle
das
jg
push
lahf
ss
and
cmp
mov
rorb
adc
dec
cli
sbb
sub
xor
pop
pop
mov
sti
jecxz
push
cmp
loop
vmovaps
mov
repz
shl
or
aad
lds
mov
dec
test
pop
daa
push
cmpsl
cmp
dec
pop
xchg
dec
ret
add
adc
jne
int3
mov
fdivr
mov
push
sbb
scas
dec
dec
adc
es
mov
push
clc
pop
mov
jne
inc
fstl
es
into
add
inc
xchg
or
jae
stos
adc
iret
mov
push
imul
in
std
sbb
jns
dec
add
xor
ror
pop
sub
out
push
out
cs
hlt
repnz
xchg
jg
sbb
adc
mov
lods
daa
or
inc
xchg
aaa
jl
std
or
pop
cmp
out
ret
imul
mov
push
mov
mov
mov
rcrb
mov
mov
popa
popf
add
push
or
mov
scas
push
cmpsb
add
inc
add
pushf
sbb
dec
fisubs
jne
fldenv
stos
inc
jno
inc
xchg
sahf
fs
cmp
sub
lods
pop
out
out
xchg
xor
mov
jp
test
insl
mov
clc
cmc
sbb
insl
in
push
out
cmp
xor
mov
cmp
mov
mov
push
fcomip
jo
mov
inc
pop
pop
jno
je
arpl
in
in
mov
push
push
xor
testl
lret
ficoml
dec
mov
jmp
jb
adc
add
push
push
mov
or
out
data16
or
arpl
fisttps
movsl
or
icebp
add
jbe
neg
dec
fcoms
in
and
xchg
xor
mov
push
and
cld
inc
addb
lea
sub
inc
cmpsl
dec
xchg
test
add
inc
xchg
fcomps
dec
loop
push
cmp
mov
rcr
sti
test
shlb
std
cmp
ss
xor
testb
xor
mov
cwtl
xor
repz
dec
or
mov
stc
and
pushf
add
cmpl
loopne
push
cmp
imul
inc
lahf
data16
lea
sbb
xor
sahf
clc
add
sbb
pop
jp
and
mov
lahf
loopne
aad
lods
hlt
push
dec
fmul
xchg
popa
stos
mov
xlat
mov
jb
or
or
lea
and
push
jb
shlb
mov
add
fmull
fcomip
movsb
imul
add
jle
jmp
jbe
fs
fnclex
dec
and
adc
pop
jne
add
add
add
loop
jo
mov
mov
sbb
testb
push
test
and
call
imul
cwtl
cmp
cwtl
mov
sub
scas
cmpsb
sub
lahf
sbb
and
aad
das
test
fdivl
jp
enter
jecxz
xchg
ss
push
add
cmc
cmp
lea
popl
fsts
in
mov
xor
enter
sbb
aas
js
inc
add
jmp
xchg
iret
mov
or
fdivrp
in
cmpw
test
in
xchg
iret
push
test
cs
pop
adc
loop
or
call
lcall
xor
mov
jl
cmp
push
fdivs
fucomip
xor
cmp
xlat
jp
push
adc
inc
push
xor
add
jl
jne
fwait
mov
fsubrs
insl
add
or
add
pushf
jns
fxtract
adc
or
in
sbb
and
les
adc
fnstsw
test
sub
push
xor
inc
push
mov
and
xchg
jecxz
inc
out
pop
test
std
in
inc
arpl
dec
adc
dec
xor
testl
aas
call
and
pop
in
loopne
push
push
mov
fs
xchg
fsub
pushf
xor
in
xor
js
je
xchg
and
mov
call
or
stc
jmp
sub
mov
pop
iret
nop
mov
jno
jno
out
inc
cli
bound
sbb
fisubl
or
cld
inc
pop
hlt
sub
aas
sbb
enter
mov
dec
add
mov
out
enter
xchg
das
cmp
dec
pop
loop
xchg
stc
push
sub
fsubs
push
loop
out
push
jecxz
rorb
cld
ss
sbbb
pop
cmp
rorb
repnz
ja
repz
push
xor
sub
push
adc
sub
test
xor
clc
push
xor
mov
jp
or
lods
dec
xchg
mov
jnp
xor
test
mov
and
bound
fadds
inc
dec
inc
adc
into
jns
add
xchg
sub
or
jno
ljmp
sbb
in
outsb
pop
subb
push
sti
pop
inc
lcall
test
and
push
sub
push
std
imul
test
clc
bound
xchg
cmp
stos
pop
daa
sub
jo
lret
lret
mov
mov
jo
je
out
es
insb
insb
ret
shll
cmp
lret
push
out
xchg
dec
test
dec
lret
or
int
dec
loope
in
fdivr
cltd
rcrb
scas
nop
push
aad
sbb
sbb
cli
sbb
add
push
repnz
adc
insl
out
sub
sub
arpl
ds
pop
mov
icebp
push
pop
mov
cli
xchg
xchg
inc
push
cs
mov
jmp
movsb
in
fmull
orl
filds
dec
ja
push
adc
adc
inc
movsb
sub
sub
add
sub
mov
push
mov
jnp
sub
das
cmpsl
or
push
sbb
mov
cmp
aam
repz
subb
adc
ret
fst
daa
ljmp
push
js
sahf
shlb
mov
add
adc
out
sbb
fidivs
insl
std
out
push
jg
shll
addr16
jecxz
mov
xor
and
loop
lret
push
jns
xchg
dec
mov
movb
push
push
ja
add
lret
shll
fsubl
pushf
ret
std
pop
cmpsl
dec
xlat
stos
inc
test
ret
lock
cmp
pop
add
sub
push
and
mov
aad
scas
bnd
mov
add
mov
push
cmp
mov
pop
jmp
sub
mov
popa
shrd
cld
dec
dec
jnp
jnp
adc
push
dec
mov
aam
lds
sub
sbb
jl
fisttpll
pop
mov
bound
and
pop
lea
movsb
and
sub
lcall
out
mov
fsts
add
stos
lds
cwtl
sub
lret
adc
fs
sti
outsb
popa
inc
mulb
push
mov
mov
mov
cmp
mov
jmp
rorb
push
js
iret
ds
add
xor
and
bnd
push
xor
jo
xchg
std
stc
push
cmc
int3
cmp
sub
lret
enter
xor
xor
addr16
xchg
inc
mov
std
xchg
and
xchg
movsl
mov
adc
dec
jl
stos
sub
pusha
aaa
cmp
enter
push
imul
and
xor
ds
xlat
cltd
lods
das
inc
jl
ret
xchg
pop
aaa
push
jle
rorb
or
stos
xchg
mov
sahf
xchg
dec
xor
stc
repnz
xor
dec
mov
add
stc
xor
push
inc
out
pop
dec
xor
mov
imul
pop
lret
mov
lds
sbb
fsubs
inc
add
inc
lea
push
jnp
aam
nop
and
sbb
pop
test
sti
popa
add
or
fsubrl
pop
ds
xor
adc
jl
das
pop
es
ds
fsubs
xchg
jne
sarl
divl
or
or
xor
jbe
dec
inc
xchg
pop
and
or
mov
push
inc
push
adc
fcos
and
lcall
push
mov
scas
inc
pop
xchg
std
xor
imul
bound
ljmp
lea
js
loop
std
fdivrl
in
cmpb
inc
cmpsl
mov
jmp
mov
leave
sub
sub
sbb
xchg
movl
fs
js
jnp
adc
pop
adc
mov
sub
int
andb
mov
lds
jp
jns
adc
push
lods
cmpsl
fcoms
cmp
and
xor
das
cltd
js
shl
addr16
lret
outsl
mov
adc
xchg
mov
lcall
xchg
jle
stos
pop
dec
xor
mov
bound
mov
lods
rolb
mov
xchg
jno
or
sbb
jle
mov
xor
and
pop
dec
sub
js
inc
xor
addb
orb
in
scas
push
in
test
sbb
pop
sub
push
mov
mov
in
out
sbb
nop
lock
loopne
loopne
cmpsl
mov
mov
imul
xor
xchg
pop
mov
outsb
dec
in
lret
push
sarb
inc
loopne
int3
xor
aaa
call
xchg
or
lea
or
or
js
cmp
stc
pop
mov
and
mov
in
sbb
lahf
jnp
jmp
jb
bswap
cli
les
cmp
add
inc
lret
in
in
or
adc
jp
jnp
push
adc
cs
xchg
dec
sub
in
push
aam
mov
inc
bound
jo
dec
cmpb
daa
sbb
frstor
xchg
sarl
mov
fdivr
sub
or
movsl
xchg
dec
leave
xorl
push
and
cmpsb
data16
cmp
fwait
sub
jno
in
cmpsb
sbb
xor
shl
pop
sbbl
insl
in
mov
testl
movsl
psubusb
sbb
and
sarb
pop
aaa
add
stos
cmc
ror
jmp
gs
loope
sub
jmp
icebp
in
or
icebp
out
fildl
mov
push
lods
cmc
lock
imul
outsl
aad
xorl
out
push
test
push
cltd
inc
xchg
arpl
mov
in
fdivl
pop
jbe
into
dec
adc
mov
pop
mov
sub
push
enter
leave
jns
aaa
test
and
cmp
add
cmc
ret
mov
filds
imul
push
dec
aas
movsb
imul
fwait
and
popl
lods
call
fsubl
adc
push
shrl
iret
andl
push
push
lods
fiaddl
adc
mov
mov
mov
cld
mov
mov
sub
nop
dec
or
clc
push
or
cltd
and
lret
popa
inc
mov
dec
pop
pop
das
mov
ljmp
sub
cs
fucomip
inc
scas
and
mov
fisubrl
fwait
gs
lcall
mov
sub
repz
dec
pop
adc
dec
xchg
call
or
sti
test
in
lea
ljmp
imul
jge
pop
or
loopne
or
les
xor
jecxz
rorb
lock
gs
arpl
mov
ljmp
dec
push
cld
hlt
out
sbb
and
paddq
jns
xor
dec
in
mov
push
aaa
mov
insb
ljmp
cmpsb
adc
fldenv
shll
or
fwait
clc
add
movsl
sbb
xchg
inc
loop
fbstp
loopne
fcompp
or
ret
loopne
jg
cmp
inc
xor
fldenv
push
cli
jg
inc
scas
iret
sub
sub
cmp
mov
sub
jl
sbb
mov
cmpsb
pop
movb
inc
subl
add
cmpsl
ljmp
je
mov
sbb
nop
pop
repnz
adc
shl
arpl
xchg
test
mov
jmp
loope
pusha
sbb
and
xchg
jnp
and
dec
inc
fs
icebp
sbb
movsb
loopne
jne
mov
sub
lock
xchg
jge
sub
push
lcall
cmp
pop
xchg
and
or
mov
dec
and
popf
enter
bound
out
aaa
mov
movsl
rep
imul
and
xlat
shrl
mov
mov
push
xchg
adc
adc
push
sbb
fisubs
pop
iret
jbe
mov
mov
lret
push
mov
mov
push
or
dec
je
mov
jge
call
xchg
mov
andb
lea
push
xor
and
mov
aad
jge
and
pushf
mov
hlt
iret
es
jmp
jno
ds
inc
imul
add
jg
mov
sbb
leave
push
cs
ret
fdivl
or
dec
add
xor
push
insb
dec
xor
das
inc
inc
dec
and
mov
dec
mov
sbb
ss
stos
xchg
loop
inc
jmp
adc
push
push
out
fnsave
sbb
addb
insb
stc
mov
jo
inc
std
add
push
lret
pop
das
and
inc
fisttpl
out
dec
dec
mov
xor
in
add
xchg
or
aas
xor
or
shr
jge
out
and
pop
mov
xchg
mov
jno
push
mov
ljmp
mov
sub
mov
push
aas
mov
jae
jecxz
mov
pop
pushf
xchg
push
in
xchg
out
jl
aam
xorl
movl
sub
sub
inc
bound
inc
negl
sbb
repz
cmpsb
and
xor
push
enter
cmp
sbb
or
aaa
orb
mov
jno
add
repz
jp
outsl
mov
into
in
imul
cmp
xor
jbe
fisubs
sarb
das
fidivs
xchg
xchg
inc
dec
mov
ss
arpl
daa
hlt
add
lods
sub
movl
and
jge
test
xor
mov
pop
mov
hlt
pop
lods
ret
out
cmpsb
inc
pop
mov
out
jmp
adc
jnp
fldt
clc
push
int3
sbb
in
icebp
sub
mov
fwait
inc
aaa
clc
xor
or
mov
jb
push
ficoms
cmp
mov
inc
and
jmp
imul
push
and
iret
in
push
out
xchg
dec
pop
mov
sub
push
mov
jne
cld
jmp
push
add
clc
outsl
pop
xor
sub
je
iret
movsl
push
push
push
xor
cmp
mov
stos
push
es
lcall
mov
stos
xchg
mov
call
loope
sbb
ds
clc
cmc
mov
push
or
mov
and
sub
adc
cmc
cld
jp
jae
pop
adc
push
fidivs
rclb
push
jns
mov
cmp
mov
sbb
xor
and
fmul
test
pusha
sbb
mov
cmp
stos
push
jae,pn
dec
movsl
ret
or
loopne
xchg
mov
and
lea
sbb
inc
sub
pop
ljmp
in
cmpl
xor
lret
daa
mulb
mov
jo
adc
sub
sub
mov
inc
into
ss
inc
mov
sbb
loopne
pop
mov
mov
adc
push
sti
ljmp
pop
iret
ret
cmp
inc
subb
bound
cmp
adc
xchg
pop
arpl
int3
dec
je
inc
lock
mov
call
push
xchg
cmp
sahf
ret
mov
hlt
lods
cld
fs
icebp
dec
cmc
adc
xchg
insl
out
sub
adc
repz
inc
xchg
cmp
cmp
in
fnsave
xor
lret
sub
xor
lea
jns
sub
lret
and
mov
nop
mov
fwait
pop
pop
and
insb
or
inc
js
mov
ret
dec
pop
gs
cld
repz
jno
mov
lret
push
xchg
xlat
mov
mov
test
sub
outsl
or
inc
pop
pop
in
lcall
mov
in
movsb
into
popa
std
adc
loop
test
loope
fiadds
push
lret
pushf
push
fcompl
or
in
lock
ret
sbb
push
les
jno
sbb
movsl
pop
jb
pop
xchg
pop
div
rcll
dec
into
ljmp
leave
push
movsb
jns
or
jo
in
inc
cmc
push
cmp
sti
push
and
nop
popa
repz
adc
xchg
mov
or
lds
and
das
stos
daa
sub
jmp
push
push
pushf
sbb
mov
xor
das
sbb
jl
and
lods
xor
scas
cmp
mov
pop
or
repz
cli
aas
xchg
push
jge
xchg
js
and
push
gs
aas
mov
jge
aad
mov
pop
mov
jb
pop
sub
adc
xchg
xlat
mov
insb
pop
test
add
dec
das
mov
out
cwtl
sbb
insb
pushf
cmp
inc
mov
push
add
push
push
add
daa
repnz
sbb
or
ss
mov
pop
push
jmp
mov
out
rcrb
shr
pop
aas
pop
nop
leave
addr16
xor
addl
in
sbb
rcrb
imul
xor
cmp
in
mov
fimull
add
add
shlb
adc
adc
addr16
mov
pop
insl
xor
jp
scas
inc
push
mov
incl
loope
ret
pushf
mov
and
sti
sbb
fwait
cmp
clc
ret
mov
in
xor
lods
test
js
xor
scas
pop
leave
pop
and
push
scas
bound
inc
outsb
lret
ss
add
daa
lret
into
xchg
push
stc
lret
inc
add
fwait
dec
sahf
cmp
test
in
xchg
xchg
add
aam
cmp
sti
and
adc
jb
xchg
dec
or
jge
cmp
xchg
cmc
movsl
xchg
or
xchg
test
das
jmp
mov
push
mov
test
and
xor
repz
dec
aad
imul
shr
xchg
shll
dec
popf
call
sti
in
loope
mov
jecxz
inc
mov
pop
decb
dec
add
and
repz
xchg
pop
cmpsb
ret
leave
jp
xchg
adc
enter
pop
gs
clc
dec
popa
mov
xchg
aam
pop
jne
add
push
xchg
mov
jne
xor
cmc
jp
sub
mov
mov
pop
xchg
in
sbb
stc
fwait
in
stc
in
sbb
cli
pop
xchg
lock
data16
jo
fstps
imull
or
lds
sub
addb
out
out
adc
sbbb
insl
lods
fisubl
xor
add
mov
popf
or
pop
pop
mov
mov
aas
into
cmpsl
or
jge
test
cltd
adc
test
adc
and
dec
xlat
fs
int3
repnz
jge
pop
sub
xor
jmp
repz
fdivrs
dec
add
xlat
shll
dec
aad
cli
inc
jb
cs
push
dec
cltd
insb
in
aas
pusha
xor
cmp
xchg
ret
out
dec
jne
mov
xchg
fdivr
jp
scas
pop
sub
mov
fldl2t
and
dec
dec
and
or
mov
sub
les
ja
cmp
pop
sub
arpl
jns
xlat
lahf
mov
lods
movsl
ljmp
push
daa
jl
roll
sbb
pop
pusha
xor
icebp
shrl
mov
jns
sbb
fs
sbb
mov
dec
je
mov
and
arpl
inc
mulps
jns
arpl
dec
xchg
cmpl
add
mov
dec
push
lret
hlt
pop
out
test
sahf
jmp
pop
faddp
lea
mov
dec
mov
xlat
scas
inc
loop
fidivrs
cld
add
int3
cmpsb
sub
ret
out
lret
in
xlat
or
mov
int3
fcompl
mov
jp
sub
mov
nop
mov
fdiv
xchg
out
scas
dec
dec
pop
in
sbb
repnz
adc
lods
jne
mov
pop
mov
scas
rol
add
pop
lcall
cmp
cs
test
in
inc
or
fistpl
leave
and
rcl
std
cwtl
out
inc
fcmovu
mov
icebp
in
sbb
inc
cmpsl
jle
insb
sub
popf
xor
cmp
cmp
push
push
pop
rol
movsb
push
sbb
sbb
mov
repnz
das
int3
cs
shll
adc
ret
sbb
sub
and
or
mov
mov
and
pop
push
dec
aaa
dec
dec
out
rolb
stos
mov
out
cmp
inc
mov
test
dec
iret
clc
xchg
fidivrl
scas
je
jl
xchg
jle
cmp
push
loopne
jecxz
adc
inc
lds
movsb
push
jg
cmp
fbld
lods
sahf
xchg
sarl
xchg
std
pop
sub
iret
fstl
pop
cld
imul
xchg
data16
inc
loope
mov
mov
pushf
std
adc
mov
sub
gs
push
pop
xchg
pushf
push
cld
lods
loopne
mov
ret
mov
ret
dec
in
dec
sbb
sbb
cmp
or
jp
das
push
roll
addl
mov
mov
ret
rcl
push
pop
gs
push
xchg
dec
sub
jmp
adc
popf
sub
pusha
in
lea
add
xchg
inc
adc
push
sub
nop
xor
outsb
mov
adc
mov
dec
inc
and
sbb
inc
fdivrs
fwait
stos
cmp
js
and
hlt
ljmp
or
xlat
aaa
enter
shlb
pusha
push
lods
adc
inc
inc
mov
or
and
add
adc
xchg
in
mov
test
add
mov
subb
test
not
scas
movsb
xchg
loopne
mov
sbb
jl
ljmp
out
fistps
fs
popa
or
add
mov
test
adc
xchg
push
adc
cld
bnd
xor
lret
xchg
loopne
nop
sub
push
das
jbe
cs
add
lcall
cmp
jb
adc
sub
data16
cmp
xchg
je
xor
xor
xchg
inc
mov
push
xor
addl
cmp
xchg
mov
lcall
or
sbb
pushf
cmpsl
rcrl
jl
pop
push
push
pop
cmpsb
popa
scas
xchg
sarb
mov
inc
int
mov
arpl
or
ror
dec
ljmp
fidivs
orl
stc
and
jnp
adc
jp
mov
mulb
push
rolb
mov
cs
xor
dec
clc
pushf
loopne
cmp
sahf
fidivrs
dec
inc
fmul
push
jecxz,pt
fwait
jmp
add
or
jg
repz
mov
sbb
push
loop
cmp
sbb
add
dec
lahf
pop
fcmovnbe
dec
out
popa
in
scas
repz
mov
xchg
cmp
sbb
xor
je
adc
mov
iret
or
pop
enter
in
or
xchg
cmp
ljmp
pop
ljmp
aas
dec
mov
mov
and
mov
pop
js
jne
shll
xchg
leave
fnstsw
sbb
push
cld
ja
xchg
jb
or
or
test
test
cmp
jp
cmp
jno
mov
xchg
sub
and
push
cmp
xchg
mov
notl
mov
push
add
jecxz
cmpsb
test
cwtl
sahf
push
fistpll
adc
jmp
sti
mov
int3
mov
mov
or
movl
xchg
mov
jns
jecxz
xchg
lds
sbb
xchg
fnstenv
fisubrl
inc
and
sbb
out
testl
xchg
popa
sbb
cwtl
cmp
in
lods
ret
lea
lods
inc
adc
mov
leave
push
sahf
icebp
sub
mov
xor
jns
inc
jns
or
jo
insl
andb
cmp
jbe
adcl
pushf
je
mov
test
rorb
push
fsubrl
aad
sti
add
insb
pusha
adc
sahf
aad
or
lret
je
and
pop
lods
cmp
aad
data16
jg
adc
push
sti
cmpsl
and
std
dec
jle
add
ds
sub
notl
mov
shlb
mov
xorl
pushf
push
mov
xor
mov
outsl
hlt
push
lock
mov
inc
xor
and
mov
mov
out
cmc
rclb
add
push
roll
jecxz
das
lahf
cli
add
in
pushf
loopne
xchg
shll
daa
sbb
xlat
mov
loopne
jge
enter
mov
xchg
mov
xchg
addb
inc
dec
push
and
int
mov
mov
mov
jl
arpl
or
push
scas
xor
stos
push
dec
sub
push
fdivrl
out
arpl
mov
jbe
mov
hlt
ds
jmp
les
ds
ja
insl
xchg
mov
rcll
test
mov
pop
xor
negl
shlb
dec
mov
cli
shl
fcmovne
in
and
dec
icebp
mov
test
int
mov
fdivrs
icebp
inc
insb
clc
push
sub
xchg
fcompl
inc
fidivrs
or
jmp
int3
push
jle
xchg
outsl
sbb
insb
xchg
cmpsb
mov
mov
movsb
lcall
pop
roll
cmp
lcall
in
adc
mov
mov
das
enter
mov
jo
gs
xor
push
data16
ss
or
xchg
and
in
repnz
mov
fisttpll
sub
xchg
dec
movsb
sub
daa
push
fnsave
das
adc
mov
popf
jne
fidivl
addl
rcll
sbb
inc
rorl
mov
aam
push
push
movsl
outsl
mov
cmc
into
xor
push
xorl
hlt
add
aaa
xchg
enter
pop
sti
inc
popa
sahf
and
jno
push
cltd
fsts
sbb
mov
xchg
xor
pop
adc
into
mov
scas
jle
cli
and
dec
pushf
mov
pop
das
sbb
inc
adc
xchg
jl
push
pop
outsl
sahf
rcrl
pop
fwait
and
dec
pop
mov
xchg
cmp
mov
push
stos
jb
ret
adc
jge
stos
jl
mov
xor
xchg
lods
aas
add
mov
imul
dec
divb
cmpsl
add
stos
mov
std
sub
sbb
mov
bound
mov
jp
xor
rcrb
push
mov
pop
xor
out
inc
loopne
dec
ds
inc
pop
repz
jbe
lcall
out
mov
test
lahf
inc
int3
aad
mov
frndint
mov
movsl
mov
adc
rclb
jmp
xchg
mov
and
pop
lea
outsb
stc
pop
lods
sub
xchg
sub
repz
nop
jae
mov
jne
ret
push
adc
lods
mov
rclb
sub
nop
pop
jp
cltd
mov
js
mov
aas
jmp
pop
mov
or
push
stos
addr16
fadd
jl
les
xor
mov
and
cmp
gs
mov
aam
mov
out
and
mov
ja
dec
dec
rcl
inc
sub
sub
push
mov
mov
and
adc
leave
addl
mov
ret
clc
xor
aas
mov
mov
cmpsl
test
sub
sub
orb
adc
xchg
xor
push
or
dec
and
lcall
push
rorb
ret
nop
mov
adc
ss
xchg
mov
xchg
dec
xor
sti
movsl
inc
test
sub
out
and
fsubrl
lahf
rcrb
js
sub
xor
mov
test
ljmp
lret
jecxz
movsb
jbe
inc
jmp
push
add
ficoml
dec
fistpl
mov
ret
sbb
ret
sbb
ret
ljmp
testl
mov
cld
jmp
mov
movsb
jmp
daa
addr16
xchg
ljmp
out
xrelease
scas
lret
adc
xor
ja
fldcw
lods
movsb
loop
inc
xchg
adc
mov
cmp
pop
mov
inc
in
mov
fcmove
pop
or
mov
iret
and
hlt
xor
mulb
sub
mov
cmp
iret
icebp
sbb
les
push
scas
test
movsb
and
sbb
push
rcll
sub
or
adc
out
cmp
ret
jno
cmpl
sarl
nop
rolb
dec
or
mov
fsubs
pop
addl
fcoml
push
fdiv
sbb
inc
pop
inc
dec
icebp
imul
mov
xor
das
shrl
mov
dec
and
mov
mov
or
pop
and
jmp
pop
gs
loope
jecxz
dec
sarb
icebp
aaa
cmp
xor
inc
repz
mov
push
arpl
arpl
addb
popa
push
enter
jne
add
push
xchg
js
mov
lcall
lods
lcall
jne
fcmovu
loop
sti
dec
dec
loope,pt
sub
std
and
pop
pop
clc
xor
pushf
inc
mov
push
sub
in
mov
ljmp
loope
mov
inc
ja
insl
fists
mov
xlat
mov
and
scas
je
mov
movsl
lcall
jge
fnstcw
mov
push
jno
popf
aad
stc
jbe
cltd
jmp
mull
push
stc
mov
jle
call
popf
push
sti
shll
mov
xchg
mov
lods
ret
mov
xchg
jecxz
ja
aas
je
addr16
pop
mov
sub
xchg
pop
loopne
cmp
push
add
movsb
inc
daa
jno
or
jmp
sbb
push
incl
mov
xor
lods
jp
fs
mov
cmp
call
pop
pop
xor
jb
std
shr
enter
ret
fcomps
push
pusha
and
pushf
sub
adc
fimuls
pop
dec
stos
lock
mov
js
pusha
push
jno
out
mov
push
xor
test
frstor
aaa
xor
loopne
dec
fldt
aas
push
mov
mov
xor
xlat
rcrl
xchg
pop
ljmp
in
pop
cltd
mov
std
aam
loop
popf
mov
mov
mov
xchg
in
mov
adc
xchg
sbb
fs
cmp
sub
mov
jl
out
or
repz
rcll
insb
mov
push
jecxz
xlat
icebp
mov
iret
pop
imul
jne
pop
xchg
add
fstps
xchg
aad
scas
icebp
iret
dec
out
jmp
dec
in
outsb
movsl
je
xor
in
mov
inc
xor
pop
jno
in
out
pop
add
repnz
xor
add
adc
pop
ljmp
jno
cmp
xchg
in
pop
xchg
test
add
iret
adc
imul
daa
mov
jae
ffree
push
xchg
fidivs
push
xchg
scas
bound
mov
sub
pop
or
aad
dec
lret
ds
mov
test
lods
outsl
mov
int3
aad
int
mov
fcomps
mov
jp
mov
mov
jmp
mov
or
es
cltd
push
cmp
pop
cmp
jns
push
jo
and
mov
cmpsb
aad
jmp
inc
cmp
pop
and
dec
push
inc
and
cmovbe
fidivrs
add
xchg
out
mov
pop
rclb
out
sub
jno
movsb
mov
lret
daa
pop
xor
sbb
jbe
push
mov
cmpsb
mov
pop
push
mov
mov
cmp
and
jnp
adc
dec
and
out
mov
cwtl
gs
lret
icebp
sbb
dec
jae
cmp
xor
cld
push
pop
in
sbbb
xchg
rcrl
jge
ja
jo
dec
decl
iret
mov
adc
inc
cmpsl
in
int3
dec
or
jmp
in
add
fxch
insb
ret
jp
js
xchg
stc
sub
lret
sbb
stos
jle
divl
mov
insb
xor
jne
aam
std
dec
sbb
icebp
ja
cmc
jp
stos
loopne
outsb
loope
mov
xor
push
xor
scas
ret
push
mov
aas
dec
ja
jno
call
jp
sub
push
mov
mov
fcompl
jecxz
lds
daa
push
or
mov
js
daa
pop
fsubrs
sub
cmp
or
mov
sbb
mov
daa
cs
cwtl
jns
sbb
cmp
adcb
pusha
mov
outsl
lds
clc
enter
or
les
adc
into
jge
test
adc
sub
ja
lret
ret
and
lahf
ret
clc
lods
adc
jbe
jno
jb
ret
cltd
pop
push
mov
pusha
mov
mov
loope
xor
mov
dec
sbb
loop
nop
or
jl
pop
xchg
sbb
mov
adc
movsb
dec
xchg
or
adc
cs
inc
push
mov
xchg
pop
or
adc
divb
jbe
adc
push
or
push
xor
gs
cmpsb
dec
jnp
repnz
sub
pop
adc
iret
sbb
xchg
and
sub
arpl
icebp
mov
enter
in
mov
sbb
and
pop
add
sbb
cmpsb
clc
sub
sbb
push
adc
cltd
sbb
or
jae
cmp
jg
stos
jle
test
adc
int3
and
and
lods
and
rcr
stos
adc
repnz
mov
and
data16
mov
jg
fisubrl
pop
mov
arpl
adc
and
pop
push
mov
jecxz
dec
fldcw
sbbb
les
dec
ret
cmp
and
dec
pop
ds
cmp
lret
cmp
shl
mov
mov
test
ds
call
xor
fstpl
mov
fcmovb
les
jmp
out
ss
xor
stos
jmp
pop
mov
incl
sub
popa
xchg
inc
cmp
mov
xchg
mov
push
adcb
sub
pop
sub
add
jns
push
fists
vdivps
gs
push
mov
mov
add
xchg
pop
and
inc
mov
mov
push
pop
addl
mov
sbb
clc
outsb
fistpll
test
push
add
dec
xchg
into
andl
addb
enter
pop
add
popf
out
jb
xchg
mov
lods
cmp
clc
insl
mov
mov
std
stc
arpl
popf
mov
sub
mov
sbb
shll
jbe
or
lcall
adc
or
sbb
movsb
lret
jbe
je
cli
arpl
rorl
or
pop
dec
xchg
xchg
sub
dec
arpl
and
sbb
mov
in
insb
fisubrl
xchg
jle
jno
or
and
mov
sub
and
mov
jbe
fisttps
mov
nop
push
leave
les
fcmovnb
pop
cmpsb
lods
js
sahf
test
dec
cmpsb
adc
inc
sub
mov
scas
pop
fistl
dec
mov
enter
push
div
repnz
in
mov
aam
sub
add
mov
popa
fmull
adc
jge
mov
push
and
mov
and
adc
scas
gs
rorl
dec
nop
out
inc
outsl
or
inc
call
adc
or
cmpsl
lcall
insb
and
cmp
mov
or
push
mov
xchg
mov
insl
imul
fidivrs
mov
mov
in
imulb
cmp
loopne
repz
out
and
cmp
add
cmpl
jmp
push
testl
scas
add
mov
pop
and
ds
inc
aad
gs
xchg
sub
sub
jo
or
loopne
fists
cli
test
scas
jecxz
cmp
mov
aaa
sub
sarl
xor
aad
add
push
sbb
popf
sbb
shrl
jmp
or
jecxz
repz
test
ret
mov
mov
pop
testb
mov
xor
or
loop
push
jmp
or
jns
mov
xchg
sub
int3
pop
fdivrs
xlat
vpsubd
call
push
push
repnz
mov
dec
je
mov
add
inc
popa
daa
imul
push
fcom
test
xchg
rcll
dec
sbb
pop
add
bound
xor
call
mov
insl
xor
les
jnp
mov
lock
sahf
shrl
add
sbb
jne
movsl
hlt
adc
and
push
pop
dec
xor
mov
imul
divl
jecxz
mov
lret
sub
fnstcw
inc
call
xor
lea
nop
jge
iret
push
out
push
push
fildl
pop
ja
xor
fwait
out
pop
push
popa
rcpps
jle
std
loop
lahf
xchg
pop
arpl
mov
int3
cmpsl
mov
sarl
inc
sub
adc
insl
enter
out
cmp
mov
popf
std
and
test
divb
pop
int3
gs
push
and
ss
mov
scas
daa
pop
lods
adcl
cmp
iret
dec
mov
mov
inc
ljmp
ret
sbb
gs
dec
loope
ror
push
and
mov
ret
sub
xchg
je
icebp
aaa
pop
aad
lods
cmp
xchg
lret
lret
repz
int
test
cmpsl
and
cmp
aaa
cwtl
orb
mov
and
daa
ds
jns
xor
je
add
fmull
xor
insl
push
scas
push
push
shlb
negb
js
or
bound
out
int
mov
mov
dec
pop
xor
xchg
mov
lcall
add
push
xchg
mov
scas
xchg
inc
cmc
cwtl
in
outsb
push
jns
mov
xchg
iret
clc
adc
cmp
shl
stos
daa
mov
mov
out
fcoms
fcmovnbe
push
mov
push
or
mov
xchg
repnz
iret
sti
sbb
es
popf
cltd
loopne
push
xor
imul
in
cwtl
dec
lock
out
xchg
push
or
js
push
sub
sub
fstenv
pop
leave
daa
fs
push
xchg
jl
push
inc
popa
ret
ficomps
xchg
sbb
arpl
dec
add
mov
loopne
xchg
jno
dec
or
sbb
aas
inc
and
shll
jle
xchg
rol
ds
lret
xorb
add
push
gs
ds
inc
orb
aad
aad
sbb
cmp
xchg
dec
mov
lea
lcall
sub
das
lcall
insb
dec
jbe
and
mov
js
jne
lahf
mov
les
mov
std
lods
out
xor
xchg
mov
ss
leave
pop
jne
cmp
adc
arpl
or
adc
jnp
add
cmp
and
sub
jno
aas
mov
and
and
sbb
rorb
mov
addb
stc
xchg
mov
jns
clc
rolb
xchg
add
jecxz
sbb
add
in
js
cmp
call
push
push
sub
idivb
mov
cs
popl
xchg
aas
mov
inc
insb
mov
sub
xchg
sub
xchg
es
mov
add
jecxz
mov
sub
inc
or
movsb
ss
xorb
lock
cmp
and
dec
dec
jnp
xlat
imul
push
cwtl
or
fwait
pop
mov
lcall
adc
stos
notb
pop
scas
cmp
xchg
in
int3
mov
xor
mov
repnz
shrb
pop
test
cmp
movsb
cmp
ret
jne
mov
mov
pushf
push
and
cwtl
adc
sub
call
cmp
pop
sahf
orb
adc
movsl
into
pop
in
jbe
mov
int
pop
jne
aas
dec
push
inc
xor
pop
sbb
xchg
sub
dec
lock
mov
and
jno
cmp
inc
push
adc
inc
fiaddl
mov
mov
mov
dec
cmp
mov
fs
mov
jle
cmpsl
das
movsb
out
mov
and
push
jbe
mov
lods
int3
fsts
xchg
adc
sbb
sub
aaa
fwait
leave
test
and
sub
push
push
sub
or
cmp
mov
lock
or
dec
jbe
cmc
xchg
test
pop
xchg
aaa
jne
dec
cmpsb
jo
cmp
or
mov
push
mov
or
and
mov
shl
xchg
sahf
lret
aas
xchg
add
pop
pop
imul
mov
inc
rcll
mov
dec
pop
repz
push
cmp
xlat
inc
dec
cmp
call
aam
lret
adc
enter
imul
fstl
adc
bound
std
xchg
xchg
mov
and
cmp
outsl
sarl
and
in
add
push
push
mov
test
xchg
xchg
lret
lock
fstpl
or
pushl
jae,pt
pop
data16
cli
outsb
aaa
addr16
test
loop
notb
xchg
sbb
cmp
icebp
adc
push
movsb
pushf
push
pop
xor
xchg
mov
in
mov
sti
imul
pop
test
jmp
loope
fcomi
cmp
insl
shlb
fcomps
add
xchg
aaa
repnz
popa
mov
repz
daa
cmp
add
stc
mov
outsl
pop
jg
jb
mull
push
inc
sbb
fbstp
jecxz
or
push
aas
cld
out
repnz
jp
mov
jge
and
arpl
cmc
adc
mov
or
popf
cmpsb
popa
cmpsb
scas
xchg
mov
cmpsb
lds
out
push
sbb
pop
pop
jnp
dec
or
testl
test
or
aam
cmp
xor
movsb
dec
lcall
or
xchg
push
inc
cmc
adc
jb
sarb
sbb
add
bound
mov
add
imul
sbb
sti
pop
jmp
gs
sub
dec
inc
dec
std
and
pop
sbb
in
add
loopne
mov
dec
mov
daa
dec
mov
pop
stos
jae
push
push
push
xchg
movsl
insl
inc
in
ss
mov
or
cld
xchg
add
data16
lods
in
jge
inc
lock
in
sbb
adc
inc
adc
insl
stc
push
push
or
xchg
hlt
adcl
in
out
gs
jmp
push
daa
push
fdivrs
cmp
out
adc
dec
mov
jo
out
popf
pop
cmpl
and
mov
shl
and
lds
out
test
lods
std
push
xchg
sbb
fidivs
or
xor
cmpsl
xchg
mov
mov
xchg
call
push
pop
fsubrs
push
or
push
add
sti
imul
lret
inc
scas
scas
jo
jge
paddsw
gs
and
out
inc
fwait
mov
or
mov
inc
or
cmp
lds
lods
jg
inc
scas
push
ret
xchg
and
cmp
sub
or
push
pop
pop
push
aad
cmp
icebp
mov
adc
ds
mov
cltd
lret
fstpl
mov
inc
sahf
jae
cld
loopnew
int3
aaa
inc
lods
mov
testb
dec
wrmsr
mov
xchg
cmp
xor
cs
sub
push
popa
imul
lods
xchg
mov
out
clc
jg
cmp
imul
jb
popf
jo
jmp
dec
lods
icebp
add
test
inc
jns
add
jns
test
mov
call
ret
lahf
subl
xchg
test
mov
jns
mov
and
es
mov
mov
mov
in
pop
insl
sbb
push
xchg
sub
mov
cmp
cld
mov
mov
lea
popf
xchg
jo
and
std
call
aas
shlb
or
nop
inc
iret
ffree
inc
stos
xor
xchg
fisttps
icebp
push
cmp
cli
sbb
mov
inc
data16
test
shrl
mov
mov
movsb
outsb
jg
lock
lea
cmp
pushw
jns
or
and
jle
mov
clc
sub
xor
data16
and
push
dec
rcrl
mov
xor
out
fnstenv
outsl
mov
idivl
or
cld
fwait
jae
or
ds
sarl
icebp
adc
adc
popa
sahf
int
xchg
cmp
mov
in
mov
mov
xchg
cli
inc
aam
sub
or
push
loope
repz
loope
lahf
cmpsb
stos
pop
cmp
mov
add
lods
insl
mov
pop
or
ret
fidivrs
pop
outsb
inc
rcrb
rorl
jecxz
push
jno
jmp
or
xor
daa
and
jp
les
xor
or
fmuls
inc
test
xchg
mov
jmp
insl
ljmp
es
cwtl
jns
mov
lret
jp
sub
jae
push
inc
or
loopne
sarb
adc
jnp
add
lcall
in
sub
cmp
out
xchg
sub
cmc
and
and
les
adcb
push
pusha
nop
cmp
pushf
stos
lock
lret
adc
inc
loop
push
dec
cwtl
test
pop
ljmp
or
lods
cmp
and
lahf
mov
mov
insb
mov
es
ljmp
sarb
fsubs
xorb
fwait
js
jnp
daa
js
dec
jbe
in
sbb
hlt
sbb
insl
mov
pop
jnp
or
xor
insb
inc
adc
loopne
iret
sub
mov
aam
arpl
popf
pop
dec
fwait
clc
xor
dec
popa
repz
and
sbb
or
push
lret
fwait
mov
mov
iret
jge
lret
in
pushf
xor
mov
rdmsr
cmp
or
jo
xchg
fwait
int3
aas
repz
imul
dec
hlt
enter
les
data16
je
pop
movsl
js
iret
popa
lcall
stc
mov
insl
inc
mov
in
scas
lahf
cltd
movhps
sbb
mov
repnz
push
in
jnp
jb
push
aaa
add
fdivrl
jecxz
gs
xor
mov
mov
push
jp
es
xchg
cmpsl
and
or
subl
sti
pop
pop
xchg
jnp
movb
into
xchg
mov
add
outsb
inc
inc
repnz
daa
mov
sahf
mov
gs
or
pop
adc
imul
gs
out
sbb
test
xchg
loopne
loop
insl
fs
mov
call
push
int3
jge
int3
daa
dec
inc
lea
dec
inc
jmp
addr16
inc
mov
insb
push
mov
mov
push
dec
or
gs
dec
xchg
cli
fnstenv
fs
bound
fiaddl
js
xchg
sbb
mov
lahf
int
mov
lcall
adc
xor
aad
and
adc
jnp
jp
loope
sbb
jecxz
loopne
imul
outsb
jnp
getsec
mulb
mov
scas
nop
pop
int3
xchg
cmpsl
xchg
pop
pop
jle
add
mov
sub
mov
in
add
fimull
pushf
sbb
push
sti
insb
dec
cmpsb
cmpsb
popa
jno
mov
and
sti
push
dec
lret
cmp
xor
mov
shrd
jno
dec
jmp
and
aaa
std
push
jno
out
pop
push
xor
mov
inc
out
mov
or
icebp
adc
test
scas
test
hlt
push
sbb
xchg
sbb
gs
push
mov
mov
mov
lods
jp
lock
sub
ds
push
pop
xor
or
xor
fbld
loop
pop
push
jb
mov
ret
mov
mov
out
cld
push
mov
push
mov
pop
out
xchg
push
push
out
and
cmp
jg
xor
imul
pop
sbb
mov
int3
inc
fcompl
xchg
jp
mov
scas
adc
inc
push
cltd
pop
mov
lret
insl
cld
outsl
bound
scas
dec
ds
jle
hlt
cli
push
xlat
add
filds
int
cltd
insb
cmc
or
and
push
mov
sahf
je
shll
pop
jp
incl
incl
ds
jg
sub
push
insl
in
adc
aam
pop
out
xor
es
jno
push
cs
aaa
mov
shrl
test
xor
int3
stos
fsubs
mov
loop
mov
stos
orl
push
jns
mov
jo
adc
add
iret
nop
fistps
cwtl
add
leave
xchg
test
xchg
xor
mov
mov
xchg
arpl
jbe
stc
mov
andl
addr16
adc
mov
out
cli
pop
dec
mov
pop
das
cmp
xorb
xchg
pop
test
xchg
popf
jge
inc
inc
push
movsb
dec
std
cli
pop
cmp
jnp
sbb
xchg
scas
outsb
push
jo
cmc
mov
outsb
inc
loope
adc
fistpll
sub
out
ds
lods
data16
loop
ja
mov
push
rcll
out
mov
imul
and
sbb
rorb
mov
mov
movsb
lret
ds
jg
xor
and
inc
ret
push
ss
push
lahf
adc
filds
call
mov
out
pop
ss
sub
popf
xchg
inc
jne
shll
das
out
mov
roll
into
insb
test
enter
inc
xchg
and
mov
test
jno
ja
push
jp
cltd
in
aad
dec
in
scas
ja
std
ret
loope
in
aas
mov
mov
pop
int
pop
jg
repz
jle
mov
and
test
lahf
ja
mov
and
out
into
pop
jnp
mov
mov
push
add
pop
dec
lods
std
cmp
inc
popa
int
sub
xlat
test
sbb
cmp
stc
xchg
xor
lds
push
stos
adc
addr16
jmp
mov
ret
xor
xchg
xor
sub
push
pextrw
cs
mov
adc
shlb
mov
fcomps
cs
dec
cli
aaa
iret
lods
mov
out
orl
or
xchg
xchg
mov
xlat
outsl
jb
inc
popf
imull
push
mov
jl
data16
ljmp
sbb
sub
stos
sbb
xchg
mov
cs
xchg
push
fidivrs
inc
jno
jle
mov
add
je
popa
gs
shlb
push
mov
in
fwait
js
cs
add
sbb
test
jl
js
sbb
xchg
sub
sbb
movsb
jb
incl
mov
mov
push
in
jbe
adc
into
sti
imul
cmpsb
xchg
roll
jne
hlt
xor
xchg
inc
cmc
call
dec
xor
xchg
test
and
aaa
test
movsb
aam
gs
outsb
lods
and
push
int3
lock
jns
js
mov
jb
rcll
and
add
push
shll
or
pop
adc
mov
lret
in
loope
lcall
pop
cwtl
insb
inc
pop
xchg
add
sbb
js
je
jae
loopne
push
jbe
out
incl
scas
xchg
lods
mov
xchg
loop
jl
xor
sub
movsb
cltd
gs
cmpsb
inc
lea
mov
fs
inc
dec
cmp
stos
stos
data16
lods
add
or
andb
adc
test
xorl
fnstsw
or
mov
les
ljmp
sbb
lahf
push
cmpb
add
test
sarb
aam
push
mov
rol
repz
std
movsl
mov
test
dec
inc
jns
xlat
push
testl
xchg
jmp
add
add
sub
cs
movsb
lds
inc
inc
dec
ds
shl
cmc
xchg
test
cmc
push
adcb
scas
fs
ret
inc
xor
xor
adc
mov
inc
mov
lock
add
xor
out
add
mov
lds
cmp
or
call
add
das
cmpsl
add
adc
loope
aam
fistpll
mov
xchg
movsl
cld
loopne
lock
out
lcall
fwait
adc
out
pop
scas
out
jecxz
sahf
cld
sub
or
dec
mov
add
xor
xchg
lods
pushf
stc
and
aas
jp
sahf
jge
inc
test
adc
jbe
arpl
inc
sbb
mov
push
cmpl
sti
pop
sar
pusha
lret
test
pop
mov
fsubrl
add
pop
mov
dec
cltd
aaa
repz
jae
jae
movsb
sbb
mov
int
mov
sub
mov
sub
fwait
cmp
or
test
aas
mov
sarb
lods
fistps
mov
mov
adcb
lods
cld
sub
sbb
mov
mov
xlat
sbb
mov
adc
in
mov
in
popf
mov
lret
xchg
add
pop
daa
test
std
cwtl
fnstsw
call
mov
in
int3
jb
mov
inc
pop
sbb
test
fxch
outsl
add
dec
jns
mov
nop
sub
arpl
mov
aad
insl
and
sub
insb
mov
sarl
fadds
pop
out
dec
js
push
cmp
jae
and
mov
in
add
dec
inc
cli
test
or
mov
mov
push
aaa
mov
test
data16
xchg
xor
in
push
sbb
pop
push
out
aas
loopne
sub
add
xor
clc
lods
mov
out
cli
xchg
int3
xchg
bound
in
lock
pop
andb
loop
dec
xchg
loopne
scas
or
sub
xor
or
sub
rorl
push
push
sti
out
and
push
sbb
add
jl
mov
xor
ss
fldcw
or
pushw
lods
and
or
mov
int
outsb
enter
in
add
addr16
insb
cmp
jge
fs
jle
cmp
adcb
pop
insl
sbb
mov
add
cld
fdivs
adc
xchg
iret
les
divb
inc
daa
or
or
sub
dec
ror
test
fbstp
fidivrs
inc
bound
mov
mov
std
pop
cs
push
mov
sbb
xchg
movsl
mov
into
push
cmp
ds
ss
movsb
xchg
mov
ret
jge
mov
mov
sub
sbb
cmp
mov
sub
adc
add
add
aaa
pop
or
mov
fidivrs
lods
fcmovu
and
punpckhbw
pop
cmc
dec
jnp
aam
loopne
test
mov
cs
push
pop
test
add
cmp
mov
pop
loopne
ret
shll
sbb
or
push
jle
fmul
jnp
xchg
inc
cmp
cld
jge
stos
js
orb
addr16
out
aas
xlat
stos
imul
mov
movsb
sub
or
in
loope
fstl
scas
iret
mov
xor
jne
sbb
push
xor
lods
ret
mov
xchg
mov
or
pop
in
mov
adc
fbld
rorl
push
mov
shr
push
stos
js
pop
stos
push
cmp
xchg
xchg
dec
dec
daa
imul
icebp
adc
lock
push
add
aas
or
enter
ds
jae
imul
lret
mov
push
jecxz
and
push
cld
pop
inc
test
jbe
pop
std
call
je,pn
out
mov
mov
push
adc
push
dec
or
add
rcl
inc
pop
in
rcr
jle
nop
push
adc
inc
xchg
dec
cli
out
xor
roll
pusha
add
ljmp
enter
sub
mov
pop
pop
xchg
or
cmp
push
jo
xor
movsb
dec
cmp
mov
sahf
addr16
pop
dec
aam
out
mov
dec
xchg
ror
cmp
cmova
inc
cwtl
cmp
push
cwtl
or
xorb
mov
or
pop
pop
dec
pop
rorb
lea
and
je
inc
push
nop
sbb
push
xorb
dec
data16
adc
scas
insb
add
je
add
adc
jnp
xor
jmp
inc
stos
sub
rcrb
ja
jnp
cld
mov
stos
imul
in
adc
leave
inc
dec
sbb
cmpsb
in
sar
mov
repz
mov
test
or
dec
and
in
jo
inc
push
ja
xchg
mov
data16
into
push
ljmp
pop
mov
fadds
ds
inc
sbb
insl
xor
lret
lret
jae
xchg
out
add
fmul
stc
jo
mov
and
lret
adc
dec
mov
push
clc
lcall
xor
add
push
inc
sub
cwtl
dec
jecxz
push
in
inc
xchg
mov
loop
lds
push
pop
xchg
pop
adc
and
cmp
incl
sub
and
xchg
cmp
sbb
xor
push
xchg
adc
mov
xor
and
mov
shrl
shl
fsub
jb
sbb
in
outsb
movsb
stos
incl
lahf
jno
xor
aad
aas
ret
dec
cmpsl
ss
aad
push
outsl
lods
and
pusha
xchg
add
inc
stc
push
lahf
sbb
xchg
dec
int3
cli
inc
popa
xor
loop
xchg
inc
ret
je
ja
int
jl
movsl
outsb
inc
push
sub
add
jns
pop
repnz
ss
push
int3
dec
jo
mov
cmp
cmc
jmp
pusha
je
adcb
cmp
xlat
sbbl
sub
and
cmpsl
adc
xor
mov
fimull
ss
cmp
mov
sub
mov
pop
fs
addl
cs
outsb
jp
push
lods
mov
dec
call
mov
stc
pop
in
xchg
enter
rcll
push
test
mov
push
test
in
lcall
out
jae
mov
lret
add
dec
insb
in
mov
mov
sub
ja
icebp
rorl
sarl
jae
ljmp
or
daa
xor
xor
mov
cli
lea
lcall
inc
xor
or
fdivs
xor
xlat
mov
andl
jle
mov
insl
xor
pop
jnp
mov
mov
stc
jnp
jmp
inc
dec
mov
push
daa
xor
cmpl
nop
mov
test
xor
dec
sti
xor
xor
rorl
hlt
mov
test
icebp
sbb
je
loopne
jp
loope
cmp
push
sub
icebp
pop
jge
xchg
jge
pusha
inc
inc
ljmp
outsb
arpl
pop
xchg
jmp
inc
push
pop
repz
or
xor
negl
xor
cmp
sti
lcall
inc
popa
add
push
pop
pop
mov
push
lods
sub
shl
and
add
out
daa
scas
mov
push
mov
insb
mov
std
pop
je
adc
jecxz
aad
sti
push
lea
xor
imul
aas
or
pop
pop
nop
in
push
outsb
xor
fbstp
mov
outsb
jp
cltd
insl
mov
inc
jge
push
imul
pop
imul
sbb
je
aaa
dec
add
scas
call
jb
test
ljmp
rcrb
push
sub
pop
cwtl
mov
jns
frstor
dec
jecxz
mov
pusha
pop
adc
jp
mov
cmp
or
mov
cmpb
cmp
int3
adc
dec
cmp
hlt
ret
ljmp
hlt
retw
pop
xlat
out
in
sub
sbb
push
fildll
inc
lock
add
and
ja
int3
push
in
inc
sub
nop
xchg
xchg
gs
push
pop
cmpsb
int
xor
cmpsb
add
ds
imul
push
int
pushf
jp
je
orl
ret
inc
inc
es
idivb
xor
sub
int3
std
sahf
pop
ljmp
jle
je
mov
jb
shl
dec
xchg
jne
inc
lahf
test
fimuls
xor
js
sub
push
and
and
add
fldcw
adc
iret
loop
cmpsb
fsts
call
inc
inc
pop
pop
bound
repz
dec
mov
dec
cmp
xor
cmp
cmpsb
popf
rcrl
mov
inc
sbb
test
je
mov
mov
dec
aad
fwait
adc
add
add
scas
imul
in
pop
scas
sub
popa
xor
dec
js
repnz
sbb
faddl
xor
or
jnp
pop
xchg
cmpb
sbb
xchg
data16
fists
dec
jp
dec
lea
mov
mov
mov
push
jmp
pop
movsb
adc
dec
jecxz
lods
lock
lods
mov
adc
xchg
mov
and
sub
xor
sub
faddl
jae
xchg
sbb
push
or
mov
dec
dec
mov
sarb
push
cmp
std
dec
sub
sbb
or
pop
inc
lret
dec
je
pop
push
aaa
leave
loopne
dec
cmp
and
std
xor
pop
fucomp
ret
fs
subl
mov
dec
and
mov
xor
xor
mov
inc
ss
mov
mov
mov
mov
jl
jne
jl
mov
adcl
aam
cmpsb
movsl
ja
inc
lods
mov
pop
daa
js
jno
mov
push
pop
stos
dec
arpl
les
fwait
pop
jecxz
subb
clc
enter
dec
pop
inc
jge
pop
cmp
pop
add
sub
add
mov
cltd
inc
ja
movsl
pusha
stos
jb
sahf
fbld
cmc
into
pop
movsl
fldcw
mov
dec
lock
mov
ja
inc
xchg
cmp
mov
mov
outsb
cmp
mov
cmp
xchg
inc
rcll
sbb
pop
jl
lds
jp
lds
inc
inc
cli
add
dec
sahf
pop
sub
sub
repz
cmp
sub
pop
lock
adc
cmp
pop
lcall
jp
repz
andb
arpl
cmp
xchg
mov
or
pop
dec
je
inc
imul
push
mov
push
mov
xor
pushf
outsb
xchg
test
shrb
push
mov
mov
call
mov
gs
cltd
lret
jl
push
push
sbb
inc
mov
jecxz
sbb
psrld
lods
xlat
popf
in
cld
imul
fs
jge
aaa
rep
or
xchg
sbb
pop
mov
clc
dec
out
fdivs
adc
test
out
jbe
jecxz
adc
ss
jo
inc
fcoml
in
mov
xchg
xchg
sbb
sbb
lea
in
stos
pop
rolb
pop
mov
add
imul
fstp
ret
xor
adc
call
lret
pop
cmc
dec
je
pushf
inc
push
fildl
jne
mov
lret
mov
shll
stos
add
xchg
shrb
pop
sub
push
sub
mov
loopne
push
punpckldq
xchg
int
imul
dec
aad
sub
push
mov
push
into
div
cmpsb
lods
sahf
sub
ljmp
addr16
adc
mov
xchg
mov
daa
sarl
sbb
jmp
nop
std
loopne
dec
lds
add
xchg
cmpsl
pop
stc
dec
shll
inc
cmpsl
inc
cmpsb
rolb
jecxz
jle
rclb
jp
push
add
clc
cltd
popa
sbb
es
push
stc
cltd
repz
add
jae
fucomip
inc
clc
or
std
test
inc
xor
stos
ds
std
test
orl
mov
xchg
mov
fldcw
lret
jno
lcall
mov
sbb
mov
jne
pop
jg,pt
jne
mov
shr
movsb
dec
pushf
and
lods
xor
pop
fldt
dec
pop
bound
mov
ljmp
cmpsl
jmp
cmp
je
mov
loope
pop
je
sbb
adc
aas
push
mov
sub
imul
and
in
inc
stc
out
jnp
mov
push
or
imul
inc
pop
xor
fs
lea
jp
les
fld1
aas
mov
dec
adc
test
jg
dec
xchg
lds
test
jns
mov
xlat
testb
out
jmp
int
dec
insb
xchg
push
xchg
cmp
int3
mov
and
pop
inc
sub
add
cld
mov
aas
aaa
outsb
xor
aas
adc
pusha
out
into
adc
push
nop
mov
adc
inc
xlat
cmp
dec
faddp
js
inc
lock
aas
scas
outsb
int3
leave
cmp
out
mov
jg
mov
dec
push
xchg
and
cld
and
cmpsb
sbb
jns
jnp
fmulp
jge
jmp
or
inc
ret
push
sbb
decl
pushf
stos
sub
cmp
jb
pop
js
jecxz
fists
mov
mov
outsb
cmpsl
xor
push
xchg
sbb
inc
clc
push
popf
cli
bound
jb
cmc
jnp
add
ja
mov
sahf
jns
push
pop
jbe
mov
cmpsl
add
mov
idivb
addr16
mov
push
mov
lret
xchg
stc
mov
xchg
daa
out
cmp
fimuls
push
pop
fxch
cmp
inc
fstps
add
push
ljmp
es
add
dec
insl
push
sub
stos
pop
mov
scas
cwtl
cmp
scas
sub
xchg
fisttps
in
inc
dec
jmp
rcll
addr16
cmp
leave
mov
pushf
test
insb
mov
fstl
fldl
std
mov
jb
xorl
sub
sahf
cltd
sub
repz
sbb
fistl
daa
andl
test
cmp
xchg
mov
shr
nop
inc
or
lret
pop
inc
jge
inc
push
push
lea
jecxz
cmpl
sub
popl
adc
pop
std
mov
xchg
and
push
or
dec
inc
rcrl
jecxz
outsb
and
imul
push
pushf
pushf
outsb
mov
lock
jb
aaa
dec
cltd
lea
xor
roll
loope
and
test
push
cs
push
lods
pop
cmp
cmp
loop
in
cmp
mov
sti
mov
pop
xchg
add
mulb
or
add
cmp
add
pop
lea
and
addr16
out
mov
mov
dec
out
jecxz
push
mov
sbb
lds
xchg
and
fsubs
je
xchg
sbb
xor
pushf
xor
sub
int3
jle
movsl
ds
cmp
sub
fst
fs
nop
add
scas
jo
fstpl
push
sub
sub
shr
mov
pop
mov
mov
mov
push
mov
repnz
xorl
adc
enter
pop
dec
jns
dec
sub
inc
or
adcb
mov
int
pusha
aam
dec
sub
arpl
test
test
fnstenv
push
mov
dec
jp
sub
hlt
or
mov
add
cld
jmp
sbbl
repz
je
lods
cs
pop
xchg
arpl
insb
leave
mov
adc
mov
sbb
icebp
sub
fmull
adcl
pop
lods
stos
int
popf
cmc
insb
pop
pop
aaa
subl
push
cmp
jmp
cmp
jbe
xorb
xlat
xchg
rorb
jne
pop
adc
daa
lock
sub
mov
jmp
and
test
in
or
cmp
out
ficomps
nop
sbb
sbb
ret
nop
lods
movsl
sbb
test
popf
rcrb
movsl
dec
popa
and
sbbb
repz
std
adc
popf
sub
repz
sbb
icebp
xor
fildll
sbbb
pop
scas
or
xor
bound
mov
iret
xchg
xor
loop
jns
jmp
mov
shrl
sbb
cs
jmp
xchg
fwait
shrb
ljmp
jle
test
mov
pushf
jnp
dec
adc
call
add
pop
into
sbb
xor
dec
test
xchg
and
mov
xchg
mov
cmpsl
pop
sbb
dec
out
push
inc
sub
inc
and
push
pop
jecxz
aaa
pop
stos
pop
lcall
push
lds
imul
outsb
mov
dec
cmpl
pushf
std
leave
stc
push
cmp
or
mov
push
arpl
scas
es
pop
adc
lea
iret
push
enter
popf
ljmp
mov
xchg
inc
pop
ret
adc
pop
je
pop
je
mov
jmp
fwait
dec
add
outsb
or
inc
xor
xor
lret
int3
jb
jmp
xchg
repz
xchg
sub
les
pop
mov
add
pop
add
mov
mov
xor
shll
mov
pop
xor
inc
lcall
add
mov
cmp
push
andl
divb
jmp
shrl
or
lods
fisttpll
add
jle
mov
lods
lea
insb
xchg
sub
in
movsb
in
in
sti
enter
inc
dec
dec
lret
jmp
adc
test
ret
mov
cmpsb
jge
lock
or
xchg
cltd
insb
insl
sti
cmp
aas
pop
movb
sub
jmp
jl
jne
iret
loop
pop
movsb
dec
cmp
mov
fstp
jno
aaa
stos
or
and
je
mov
or
push
jo
mov
and
push
fidivl
inc
bound
add
pushl
dec
int3
jp
sbb
fwait
or
jle
js
or
jne
add
or
cltd
jnp
jge
adc
or
adc
pop
ljmp
pop
pop
enter
in
add
mov
cld
mov
inc
aam
rolb
insb
addr16
sbb
cwtl
mov
jmp
push
mov
adc
or
pop
test
dec
clc
mov
cmpsl
lret
cmpb
add
aaa
dec
or
xchg
enter
sar
jb
xchg
pop
test
popa
in
inc
popf
pop
push
std
mov
push
mov
sub
jmp
outsl
ffreep
sbb
push
or
and
subb
fisubs
add
stos
lock
pop
cmp
je
and
idivb
pushf
fimuls
nop
out
push
push
rcll
and
jg
xor
es
pop
inc
sbb
lcall
into
fwait
ds
jmp
pop
cmp
fwait
mov
arpl
cs
pushf
pop
xor
mov
jns
popf
adc
sbb
cmp
jae
mov
jge
sbbb
sub
sub
mov
mov
xor
mov
push
loopne
push
or
jle
fsubs
aam
ds
mov
dec
mov
jl
jo
call
sahf
jbe
test
add
cmp
pop
jbe
pop
sub
insb
fwait
loop
fcomp
mov
jmp
jae
nop
data16
xchg
testl
mov
xor
sahf
xor
jmp
sub
rcr
add
rcrl
mov
in
inc
shlb
push
push
clc
adc
lock
cmpb
inc
fdivs
popa
or
daa
insb
pop
cltd
imul
call
mov
sbb
push
sub
aaa
dec
push
icebp
shlb
shlb
and
and
jno
fbld
adc
jo
pop
dec
pop
ss
add
mov
or
fsubrl
push
pop
imul
cwtl
dec
mov
sub
adc
cmp
out
sub
or
add
imul
lds
and
cltd
cwtl
cwtl
jnp
adc
sbb
xorb
xchg
dec
mov
dec
jle
iret
insl
test
push
iret
jae
sbb
es
xchg
shrl
iret
insl
or
jl
xchg
js
sub
adcl
fdivl
jge
dec
fimull
sbb
in
sub
pop
xor
pop
adc
sbb
and
sub
sbb
lret
push
mov
mov
rclb
push
fmulp
xchg
sbb
pushf
popa
packsswb
sbb
in
jle
fistpl
add
rorl
adc
dec
out
subl
jl
xor
scas
sbb
push
xor
dec
inc
mov
iret
incb
sti
add
ljmp
and
add
lds
mov
inc
pusha
loope
pusha
lock
jecxz
mov
lahf
lds
movsl
cmp
aam
xchg
jbe
das
push
sahf
jns
icebp
sahf
push
out
xchg
iret
inc
call
fwait
enter
loope
lods
ja
clc
mov
lret
and
lock
mov
mov
int3
popf
andb
add
das
fcom
dec
popa
push
xchg
mov
pop
fbstp
push
jl
lcall
add
aam
loope
jle
sti
or
and
test
push
jb
pop
adc
dec
xor
fldenv
add
cmpsl
lahf
xorb
jbe
rol
bound
and
stos
enter
in
daa
cmpsl
push
outsb
inc
ss
jae
leave
sarb
pop
dec
cmpsb
std
test
pop
mov
sub
sti
outsl
icebp
push
daa
mov
dec
aaa
jbe
hlt
popw
push
adc
cmp
dec
xchg
inc
stos
fmuls
sbb
cmp
sti
fs
adc
xchg
pop
adcb
fsubp
adc
loopne
fwait
loopne
inc
mov
and
xlat
push
in
clc
mov
mov
ret
out
jne
pop
nop
fldenv
ret
or
add
mov
sbb
jbe
jb
jns
sub
js
test
lods
jb
fistps
xchg
mov
cld
in
notb
enter
dec
aas
out
xchg
jo
adc
sbb
inc
icebp
lea
scas
mov
adcb
or
cmc
pop
add
jp
xchg
mov
jae
inc
int
jnp
and
mov
in
hlt
dec
iret
pop
cmpsl
jecxz
adc
cmp
shll
in
rol
pop
jne
jns
sub
imul
or
xlat
dec
or
sub
push
xor
lods
adcl
enter
inc
pop
pop
mov
dec
dec
pusha
cmc
jle
xor
sub
and
lock
mov
xor
dec
popf
arpl
xchg
mov
push
inc
insl
aas
xlat
lods
dec
pop
xorb
sub
inc
jae
arpl
gs
insl
cmp
mov
lahf
dec
subl
movsb
lahf
jns
add
std
xor
add
imul
cmpsl
out
or
sarl
test
push
aam
inc
aam
enter
xor
sahf
outsb
add
cmp
lea
inc
enter
jecxz
lret
cmpsb
xorl
inc
lods
in
push
adc
sub
insl
scas
mov
into
cmp
addr16
push
mov
jo
into
aas
gs
loope
sahf
mov
aad
les
cmc
fisubrl
inc
popa
aas
jno
gs
pop
in
pop
out
cmp
inc
in
sti
int
sbb
int3
inc
and
dec
xchg
xchg
pop
jl
fs
sbb
lret
fstps
mov
add
adc
insl
cli
mov
jnp
pop
insb
lahf
arpl
pop
push
mov
xchg
inc
pop
movsl
in
sub
lret
mov
das
imul
outsb
pop
ret
call
or
or
js
mov
sbb
jae
jnp
stc
mov
mov
mov
ss
aad
jmp
pushf
cs
pusha
or
cmc
xchg
dec
rcrb
scas
loope
lret
loopne
aam
loopne
adc
jne
or
imul
insl
fcoml
lods
jne
push
push
scas
sbb
inc
push
adc
and
sbb
inc
mov
scas
popf
cmc
dec
orl
or
pop
out
outsb
test
add
jecxz
xor
or
dec
push
bound
cmp
adc
adc
mov
repnz
fcmovnu
or
or
sub
mov
inc
push
mov
mov
cmp
int3
adc
test
shrl
cs
xchg
cmpsl
ljmp
pop
lcall
cld
push
into
pop
test
repnz
pop
jmp
unpcklps
push
jmp
push
lock
xchg
mov
pop
or
daa
fs
sub
sahf
jne
jle
fcoms
scas
hlt
mov
out
dec
stos
fsubr
or
mov
sti
inc
or
loopne
cltd
xor
or
jmp
and
mov
cmpsl
inc
out
jle
jnp
das
inc
cmc
dec
push
packssdw
dec
hlt
sbb
pop
rorb
push
hlt
or
pop
rcrb
lret
mov
cmp
jo
sub
sahf
loope
and
and
sahf
push
jl
jg
mov
xor
mov
cmp
lock
and
mov
jmp
icebp
sti
or
je
pop
jo
arpl
add
gs
xchg
mov
mov
shll
repnz
aaa
mov
or
ss
aaa
lea
xor
sbb
arpl
fiaddl
push
rol
inc
adc
jp
xlat
faddl
pop
or
push
cltd
xor
push
dec
mov
add
js
mov
cmpsb
inc
outsl
pop
vpcmpgtd
dec
cmp
outsb
add
jns
jp
loope
fnsetpm(287
jg
pop
cmp
pop
mov
es
mov
arpl
xchg
leave
mov
outsl
stos
int
pop
dec
pop
ret
sbb
or
enter
mov
dec
cmp
call
icebp
fists
mov
jge
scas
sub
cmp
ljmp
scas
pop
or
out
daa
inc
lahf
stc
mov
jle
adc
test
arpl
sub
or
shlb
ds
jmp
scas
push
add
xchg
or
push
lahf
push
dec
and
xchg
insl
subb
loop
push
daa
pop
aad
mov
out
push
mov
js
lret
sbb
sub
nop
sbb
pop
rorb
mov
add
jle
mov
pop
ret
push
in
sub
and
cltd
ja
adc
loope
pushf
adc
lret
in
sub
sub
cmpsb
roll
cmpsl
mov
jg
sbb
push
dec
movsl
mov
sub
mov
xchg
cli
xchg
repnz
sub
sbb
dec
mulb
ficomps
or
push
mov
push
fbstp
mov
nop
sarl
sub
mov
movsb
push
cmovge
sbb
inc
pop
clc
in
repnz
add
push
mov
pop
jge
scas
loop
or
add
inc
aad
mov
dec
std
repnz
punpckhwd
out
in
into
fisttpll
scas
xor
repnz
lock
sub
lahf
xchg
xchg
mov
arpl
out
adc
ds
push
push
adc
push
inc
and
ss
sub
int3
push
hlt
fmul
daa
mov
or
xchg
dec
cmp
popa
outsb
ficoms
pop
dec
add
pop
xlat
je
inc
fisttps
sbb
test
repz
adc
inc
stos
pop
sub
stos
movsb
inc
in
cmpsl
lret
or
and
loop
in
and
xchg
or
inc
jno
pop
popa
lahf
jae
inc
stos
jg
mov
mov
aas
cs
cmpsl
sti
ret
cwtl
jno
rcll
stc
and
sub
inc
ret
push
orl
popf
mov
lods
or
xor
dec
nop
add
sbb
push
das
dec
dec
dec
push
cmp
ds
pop
push
push
cmp
mov
addr16
fdivrs
cmpsl
outsl
jb
loopne
loope
push
adc
in
ljmp
movsl
cli
mov
mov
push
loop
cld
push
shll
fs
in
sti
lods
outsb
xor
test
jns
imul
push
and
cmp
cmp
push
hlt
shrb
shrb
mov
sub
push
push
and
es
lods
movsl
push
cmp
xor
inc
jae
sti
sarl
mov
mov
js
add
cs
xlat
dec
dec
pop
in
push
loop
repz
rcrl
lret
cltd
add
subl
dec
fwait
pop
test
movsb
push
lods
jle
shll
xor
mov
js
popa
mov
inc
xorl
outsl
lock
add
push
imul
subb
dec
and
lahf
lret
in
add
mov
jl
xor
cltd
call
push
daa
je,pt
test
pop
sbb
sti
stos
push
jno
xor
add
pop
loop
pop
inc
lcall
aas
sbb
fnstsw
fs
and
cwtl
and
xor
pop
loope
sahf
inc
test
jge
dec
and
cmp
mov
inc
add
or
mov
andps
inc
cmpsl
fdivl
sub
fucomi
repnz
ds
jg
sbb
mov
pop
and
sbb
push
xchg
xorl
loop
adc
insl
pop
pop
popa
cli
sub
insl
rcrb
movsl
pop
or
xchg
mov
jle
jo
into
dec
xor
or
and
mov
notb
dec
dec
push
das
or
pop
das
ss
cmpl
mulb
loopne
daa
les
push
cmp
in
and
les
lcall
js
sti
xorl
pop
xor
testl
xor
lea
or
xchg
into
decb
js
aad
sahf
jb
lret
sub
shrl
mov
dec
lret
stc
lods
aaa
mov
xor
cmpsl
aad
lds
add
bound
fsts
inc
out
jg
mov
adc
xchg
in
dec
cmp
bound
int
mov
lret
test
ds
jne
lahf
repnz
dec
in
inc
jp
leave
mov
push
cli
xor
out
xlat
cmp
stos
adc
xchg
negl
stc
adc
aam
dec
sub
push
push
mov
mov
jl
mov
fs
in
int3
pusha
mov
sbb
mov
data16
daa
cs
and
xchg
mov
outsl
mov
xor
hlt
mov
lock
inc
cmp
rcll
cmpsb
jmp
inc
inc
sbb
rcll
fsubr
cs
or
mov
aam
into
pop
cmp
jmp
pop
fdivrl
stos
xor
sahf
loopne
lock
xchg
es
insb
insb
push
inc
loope
add
xor
inc
imul
add
gs
ja
dec
and
mov
out
lea
aas
fnsave
fisttpl
lea
cmp
push
nop
mov
and
lock
gs
xchg
and
xchg
pop
pop
lcall
pop
lods
adc
xchg
add
pop
add
mov
imul
repnz
negl
jb
ret
jb
in
lea
cltd
xchg
lds
cmp
add
test
sbb
dec
rorb
sbb
fisubrs
xchg
shlb
or
adc
insb
subl
mov
jno
jns
movl
push
push
push
pop
adc
mov
test
add
std
push
or
popf
mov
pop
into
sbb
mov
mov
xor
jge
push
imul
test
addr16
adc
and
outsl
lea
pop
jge
or
cltd
mov
dec
jbe
faddl
call
in
mov
xchg
push
xchg
add
rcll
adc
mov
mov
dec
xchg
and
enter
jp
sub
mov
or
sbb
xchg
cmp
jo
lods
cmc
jno
fisubrs
aad
sub
test
addb
sti
scas
ljmp
push
sub
icebp
outsb
ljmp
popf
nop
add
inc
mull
jnp
dec
dec
fidivrs
roll
mov
aas
mov
sub
cli
pop
sbb
arpl
out
fisubrs
jecxz
push
movb
mov
fwait
sub
xor
jecxz
mov
sbb
lcall
stos
dec
in
lcall
fsubl
lret
pop
loop
out
addr16
jg
dec
mov
arpl
dec
repnz
jecxz
js
imul
decb
ret
lret
out
xor
cmp
pushf
jae
test
test
xchg
push
sar
sub
jae
push
mov
push
mov
push
xor
ds
xor
mov
dec
xchg
cli
add
mov
cmp
xchg
ja
lret
dec
data16
dec
or
adc
shl
add
adc
int
stc
xchg
dec
cld
and
or
mov
lret
popa
sti
jbe
adcl
xchg
jo
imul
stos
mov
add
or
cmpsl
jno
sbb
repnz
icebp
jle
fs
inc
inc
scas
sub
xchg
gs
xchg
inc
insl
mov
dec
cmpb
lcall
ja
int3
dec
add
push
mov
cmpl
pop
lods
cltd
popa
pop
add
pop
add
mov
push
pop
push
out
sub
inc
mov
dec
cmp
xor
push
jmp
fistps
pop
test
js
xchg
pusha
aas
stc
int
gs
inc
ds
sub
cli
inc
insl
es
jmp
adc
sarl
mov
inc
pusha
aad
mov
or
sub
inc
test
push
aad
fisttpll
ds
mov
mov
lcall
in
xor
inc
inc
ljmp
test
sahf
sub
aas
roll
idiv
bound
call
and
dec
add
cltd
inc
stc
ja
jns
or
stos
cmpb
lods
pop
test
jns
daa
push
mov
and
push
xor
mov
in
out
pop
into
or
fwait
push
sbb
outsl
jnp
scas
mov
sbb
sbb
xor
mov
push
ret
dec
pop
or
pushf
andl
push
loop
and
xlat
gs
movsl
or
push
fwait
inc
inc
adc
pop
pop
int3
stc
mov
mov
mov
lea
call
sti
xor
iret
jp
inc
pop
push
jle
or
inc
sbb
pusha
and
in
fsubr
stos
sbb
nop
loope
mov
decl
jno
jne
dec
enter
icebp
test
sub
push
divl
pop
out
cmp
loope
cld
test
je
dec
imul
xor
xor
sub
pushf
scas
xchg
or
cltd
push
lds
popa
pop
shr
fstp
add
cwtl
bound
popf
fists
inc
and
push
popf
hlt
das
lret
sarl
std
pushf
and
pop
out
adc
fcom
es
fld1
lahf
push
dec
loope
push
cwtl
mov
in
shlb
xor
dec
push
into
lea
rcll
movsl
insl
lea
or
arpl
xorb
testb
mov
xchg
in
daa
and
sbb
push
shrl
filds
nop
jecxz
pop
aam
inc
icebp
adc
push
push
lcall
ror
mov
popa
popf
mov
mov
sbb
call
add
jmp
ret
adc
in
inc
xchg
in
shl
or
sub
push
xor
pop
lcall
dec
mov
mov
in
or
jle
stc
lcall
enter
stc
fidivs
mov
lds
sbb
dec
push
das
lret
sub
jbe
cmpsl
xor
leave
les
and
cmp
test
pusha
je
in
insl
test
cmp
rorb
adc
leave
subb
pop
add
mov
in
fiadds
mov
sbb
dec
sahf
andl
and
push
xchg
mov
push
das
push
stos
pop
addr16
mov
mov
sbb
mov
xorl
sarb
push
push
repnz
push
dec
loopne
cli
cli
lret
xchg
or
jmp
sti
and
fnstenv
or
jmp
clc
lret
rclb
inc
xor
repz
pop
mov
in
sbb
pop
cmp
scas
jp
movsl
cmp
in
jae
pop
xchg
loopne
cwtl
pop
shrb
cs
sub
sub
push
mov
cltd
mov
pop
xor
dec
mov
mov
push
push
xchg
sahf
xchg
mov
inc
nop
and
mov
mov
cmp
mov
aaa
adc
xchg
mov
bswap
cmp
add
dec
je
add
cmp
out
cmp
fdivs
sbb
jl
mov
lcall
mov
icebp
bound
imul
popf
mov
test
sbb
roll
push
cmp
inc
dec
lret
aam
jnp
lret
pop
cld
or
hlt
and
xor
addb
lret
mov
out
rcrb
bound
push
icebp
mov
ljmp
mov
js,pt
push
mov
mov
stos
cmp
pop
lret
icebp
insb
add
xchg
or
lods
ja
pop
or
call
out
filds
cmpsb
rcll
dec
and
adc
ror
in
mov
sarb
cmp
mov
xchg
in
cli
pop
dec
daa
hlt
scas
mov
xchg
xchg
mov
icebp
popf
and
mov
pop
rcll
pop
pop
sarb
sbb
pop
jl
sbb
popf
and
into
or
roll
fstpl
xchg
mov
movsb
jle
mov
pop
leave
fistpll
js
mov
and
push
xchg
inc
xchg
cld
loope
cmc
repz
fsts
int3
aad
and
cmp
or
cltd
ds
lret
mov
jnp
sub
std
inc
pusha
pop
push
and
pop
loopne
xor
movsl
jb
jmp
out
xchg
pop
jns
into
stos
add
push
dec
setl
sbb
push
xor
xor
jns
mov
out
mov
xor
divb
pop
ss
pushf
insb
jg
inc
xchg
and
stos
outsl
aad
push
add
jb
movsb
ja
mov
push
fwait
out
ds
lds
mov
mov
adc
jp
std
stc
movsl
cmp
stc
push
jnp
in
pushf
xor
xor
pusha
xchg
cmc
xor
or
lds
fadds
test
pop
and
adc
or
inc
iret
mov
movsl
mov
fstl
lcall
movsb
jno
add
push
subb
stc
push
or
int
pop
lcall
ret
sub
jne
dec
cmp
mov
fwait
or
inc
jecxz
cmp
out
mov
aaa
lret
pop
or
fiadds
jle
push
cli
inc
pop
push
lods
imul
cmp
je
addl
jo
ljmp
mov
mov
popf
mov
add
lea
mov
ds
inc
and
jg
mov
lds
andl
fisubrs
jae
jne
insl
sbb
fsubs
stc
loop
subb
fcmovnb
push
rcll
scas
add
push
lret
mov
mov
in
or
ficompl
pop
nop
xor
jp
mov
imul
in
das
fwait
inc
cld
mov
sbb
xchg
pop
xor
outsl
or
enter
aas
xor
cmpsb
or
pop
das
sbb
lcall
lods
call
mov
movsb
ret
cmp
pop
sbb
arpl
sub
and
push
int3
jle
ljmp
pushl
cli
and
arpl
int3
cltd
stc
sbb
decb
in
jp
push
pushf
or
test
and
lods
mov
mov
insb
or
and
leave
dec
and
lods
sub
mov
mov
sbb
imulb
popa
frstor
and
adc
int
cmpsl
add
dec
inc
jo
pop
mov
fidivrl
add
stos
in
pop
mov
adc
xor
or
imul
cltd
into
aam
int3
aad
stos
xor
ds
out
hlt
push
arpl
xor
pop
dec
pop
lods
js
jns
pop
jecxz
dec
and
sub
cli
mov
pop
add
xchg
jecxz
xchg
dec
je
mov
mov
mov
cmp
out
and
in
cmpsw
push
stos
bound
adc
inc
out
mov
mov
jno
cmp
data16
adc
sub
mov
inc
nop
pop
outsl
inc
and
xchg
outsb
movsl
mov
ss
mov
adc
mov
xchg
inc
xor
mov
mov
int
sbb
cmc
xchg
ret
movsl
int3
mov
pop
mov
repz
mov
repz
jbe
push
and
cmp
and
nop
outsl
loopne
pop
inc
ja
adc
inc
push
fisttps
stos
xlat
jns
cld
es
cmpsb
sub
in
std
lds
or
incb
jle
add
xchg
mov
fadds
adc
cwtl
mov
xlat
ja
jp
cs
int3
test
push
int3
test
ss
int3
frstor
push
xchg
xor
test
xchg
and
inc
in
repnz
mov
addr16
pop
fs
movsb
stc
jno
fildll
cmp
xchg
fwait
int
mov
cmp
pop
dec
sub
mov
aaa
cmpsl
xchg
outsb
std
test
test
xorl
mov
adc
aad
mov
imul
add
jae
hlt
sub
pop
sbb
daa
jne
dec
push
pop
jl
ret
or
or
xchg
sub
out
push
cwtl
inc
adc
adc
add
incb
lods
test
fsubr
or
dec
jle
enter
sar
imul
test
je
mov
mov
cwtl
add
push
or
ret
mov
ret
inc
and
xor
push
mov
adc
mov
xor
je
mov
xchg
test
dec
push
addb
jecxz
xor
in
nop
aam
nop
out
lahf
sbb
jmp
scas
std
push
cmpsl
add
or
in
cmp
jbe
adc
or
cli
xor
mov
int3
leave
mov
das
in
stc
rclb
push
in
pop
mov
lds
int
js
sub
cmp
xchg
test
push
lock
aad
iret
fiadds
orb
mov
mov
dec
lret
sub
adc
in
clc
lret
or
xchg
pop
or
add
sahf
pushf
adc
inc
dec
pop
gs
add
xor
popa
iret
cli
sbb
xor
push
sahf
mov
dec
jb
push
imul
sbb
int
rcrb
stc
and
sbb
mov
xor
popa
loop
clc
pop
inc
jp
cli
popa
xchg
int
jno
lcall
ud0
loop
imul
or
lahf
push
mov
jle
push
les
mov
pop
jmp
sbbb
loop
icebp
inc
and
push
xor
jge
push
dec
lahf
add
xchg
or
push
es
add
add
ret
cmc
xor
addl
lds
popf
mov
test
cmpsl
cmp
or
mov
inc
mov
jne
sub
clc
push
cs
push
insl
mov
sbb
ds
cltd
popa
jge
add
je
mov
notb
imulb
aad
mov
lret
jp
sbb
sarl
inc
in
push
out
mov
ds
xor
leave
xchg
jmp
stos
mov
in
adc
dec
cs
icebp
add
mov
cmpsl
shlb
mov
inc
mov
jge
mov
fcmovb
mov
mov
shrl
push
xor
orb
fildl
or
stos
pop
cwtl
dec
or
jae
jb
xchg
std
pop
jb
leave
js
rep
or
test
push
adcl
push
insl
fsubp
dec
xor
push
mov
imul
fs
or
arpl
pop
cltd
and
movsl
inc
jg
ret
scas
and
or
mov
shlb
add
pop
dec
icebp
in
inc
or
fmul
mov
ljmp
cli
xchg
push
test
adc
mov
lcall
mov
mov
and
cmpsb
lods
dec
adc
inc
pop
repnz
inc
pop
inc
gs
and
cmp
rclb
jmp
repnz
fnstcw
mov
aas
xor
test
mov
add
sti
mov
frstor
sub
das
aad
lods
loope
repz
pop
leave
jno
dec
mov
inc
and
jl
test
nop
jg
xchg
mov
neg
lret
sub
push
subb
mov
xor
icebp
pop
fisttpll
mov
std
push
idivl
or
int
aad
out
sbb
xlat
mov
dec
sbb
jns
xor
dec
mov
or
push
fnsave
xchg
inc
jmp
and
or
dec
xchg
mov
jg
adc
lock
dec
adc
aam
ret
sub
and
movsb
jmp
fwait
add
or
pushf
mulb
xlat
repz
hlt
jne
fwait
and
je
dec
mov
xchg
xchg
in
xor
iret
push
data16
jmp
mov
gs
xor
imul
xor
mov
cltd
jnp
aad
jecxz
inc
in
decl
jecxz
dec
mov
ss
sbbb
aad
orl
out
push
cmp
in
test
leave
push
fdivp
or
cmp
mov
int
hlt
icebp
ret
jp
sbb
jmp
pop
inc
sbb
gs
cmp
ret
shlb
test
adc
jno
dec
mov
xchg
imul
jecxz
mov
xchg
jne
xchg
dec
mov
adc
jns
fidivs
daa
out
inc
cmp
aas
stos
outsb
je
xlat
icebp
sbb
iret
or
push
mov
addb
das
jne
adc
mov
cmp
push
inc
aaa
inc
jbe
sahf
mov
dec
lret
fs
sbb
jne
nop
cli
dec
inc
sub
test
fadds
insl
jne
add
xor
ds
cmp
je
fldl
jmp
xchg
push
and
push
dec
mov
iret
inc
xchg
mov
dec
pop
cli
mov
insb
mov
inc
dec
sbb
frstor
fistps
std
push
mov
inc
pop
ficoml
mov
and
bound
aas
adc
push
insl
jo
xlat
sahf
js
push
rcrl
jecxz
mov
add
adc
lock
decl
pop
cmp
ljmp
lock
ss
lea
inc
js
cwtl
test
in
pop
out
test
jo
cs
test
sub
fsubs
in
xor
arpl
shl
outsb
dec
pushf
cs
cwtl
lds
add
jnp
stc
add
icebp
lahf
out
mov
dec
daa
aam
mov
sbb
scas
jnp
ret
lds
clc
test
mov
nop
mov
aaa
leave
push
fs
shrl
pop
pop
sub
sub
fstpt
pop
movsl
xchg
sbb
rorl
fbld
cmp
jne
lods
adc
xor
repnz
sub
int
and
xlat
push
divb
nop
les
xchg
xchg
mov
sti
rcrl
cs
mov
je
in
stc
push
popf
cld
and
loopne
lcallw
mov
pop
adc
adcb
or
rcr
cmp
ds
sub
or
or
fsubrl
sbb
leave
add
add
push
sbb
mov
inc
jecxz
push
cmp
pop
add
xchg
lods
add
hlt
pop
and
into
cmp
stc
inc
ret
fldcw
add
stos
in
insw
fmuls
fdivrs
nop
adc
cmpsb
shr
xchg
rorb
xchg
ja
loopne
pop
call
jp
inc
insl
push
sub
insb
mulb
dec
sbb
and
pop
mov
push
mov
pusha
popa
sub
or
inc
sbb
pusha
stos
or
insl
sub
jne
fimuls
mov
icebp
adc
cmp
pop
adc
and
add
repz
mov
fs
pusha
subb
fs
xchg
lcall
repnz
push
cwtl
and
pop
jmp
aad
dec
sbb
push
or
mov
mov
imul
bound
insb
push
push
shlb
ja
ja
cmp
movsl
mov
add
pushf
or
daa
lods
jno
push
setbe
xchg
mov
pop
imul
inc
test
mov
and
fsts
and
ljmp
jmp
dec
push
or
mov
ljmp
sarl
inc
mov
pusha
jle
inc
adc
pop
addl
and
pop
lds
ja
mov
or
or
loopne
shll
lods
xchg
add
stos
pop
sub
sbb
ret
roll
arpl
std
inc
jp,pt
or
or
adc
das
fidivrl
xor
lock
aas
sbb
std
jecxz
std
cmp
fdivs
pop
shrl
sub
sub
incl
mov
cli
daa
and
push
sub
xchg
insl
lds
xor
cmpsb
int
lods
imulb
cmpb
nop
push
lds
leave
insl
cmpl
adc
pop
into
sbb
add
inc
add
jo
imul
mov
pop
push
xor
aad
out
pop
jne
pop
je
pop
mov
sub
sub
mov
mov
iret
sbb
adc
mov
add
adc
dec
push
xor
in
jnp
in
dec
nop
xchg
iret
and
add
push
cmc
sbb
test
adcb
roll
mov
aaa
movsl
sbb
js
fstl
jmp
cmp
sbb
jno
sub
cmpsl
pop
test
xchg
add
dec
movsl
xor
mov
pop
add
shl
xchg
hlt
adc
sbb
cmp
fnstenv
lea
push
cmp
vpsrad
cmp
negb
test
pushf
out
mov
aam
sbbb
jne
pop
subb
ja
adc
push
xor
stc
shrl
aaa
lods
xor
mov
into
in
mov
les
shrl
rcr
movsl
push
test
or
cwtl
es
ss
xlat
insl
lahf
xor
loopne
bound
xor
ficomps
in
js
add
lret
in
aaa
lock
jg
aas
push
xlat
out
in
push
sbb
pop
icebp
mov
popa
push
jmp
repz
mov
push
mov
or
enter
inc
push
xchg
inc
jns
jle
xor
in
addb
sbb
lcall
add
fld
stos
stos
imul
mov
pop
mov
mov
insl
inc
inc
mov
gs
sub
and
inc
mov
or
or
and
adc
in
pop
sbb
lret
loope
btr
int3
cmpsl
sub
mov
bound
hlt
std
cmc
mov
insb
faddl
xchg
cmc
and
cmp
inc
mov
cmp
fmull
inc
sti
cs
icebp
mov
cltd
jmp
mov
std
shll
xor
outsb
and
es
ficomps
mov
push
mov
icebp
ljmp
jmp
ds
ret
paddsw
ror
dec
shlb
cmp
jge
out
mov
push
decl
xchg
pop
pop
jmp
leave
sbbb
xchg
add
or
lret
inc
fbstp
mov
jo
and
stos
mov
and
orb
scas
lods
mov
test
test
int
push
sbb
xchg
mov
dec
ss
dec
jl
dec
mov
cmp
jb
aaa
sbb
inc
or
stc
loope
cmc
add
pushf
fsubrl
mov
sub
pop
dec
fnstcw
cmp
flds
inc
adc
ficomps
add
lds
pop
jp
idiv
xchg
xchg
mov
mov
jecxz
pop
imul
test
pop
sub
cld
loopne
rorl
shrl
mov
pusha
inc
cld
adc
mov
mov
lods
ret
rorl
jno
mov
imul
cmp
jae
push
push
xchg
sbb
sbb
mov
test
sarl
sub
mov
add
repz
xchg
idiv
insl
xor
mov
stc
mov
test
pushf
sub
and
pop
insl
xorl
jb
and
in
inc
cmp
lock
test
ret
lods
mov
imul
mov
imull
data16
out
mov
rcl
push
add
dec
or
in
pop
xor
pop
aad
mov
push
cmpsb
xchg
cmp
cli
and
call
rorl
inc
gs
cmpsb
rcrb
inc
mov
adc
adc
sbb
aam
hlt
sbb
mov
push
mov
and
push
add
add
clc
push
sbb
push
jno,pt
cld
orb
outsl
bt
sti
nop
cmpsb
cmc
or
lret
or
shlb
jne
adc
jno
xchg
pop
pop
ficoms
adc
imul
fidivrl
out
adc
lock
mov
subb
scas
add
in
sub
cwtl
bound
cmpb
aad
adc
mov
sbb
dec
aam
inc
ljmp
movsl
mov
insb
shrb
sbb
jg
mov
mov
pop
adc
les
enter
and
pop
test
cmp
adc
push
enter
jns
xchg
xchg
and
mov
fs
or
xor
rolb
inc
stos
jp
xchg
fcomip
push
sbb
push
out
lret
lock
roll
pop
cmc
lods
rcl
push
cld
add
icebp
jg
xchg
mov
call
test
outsl
aas
sbb
jns
call
jbe
mov
push
orl
rclb
and
sub
test
mov
stos
push
lds
dec
das
mov
icebp
iret
adc
inc
or
push
and
insb
dec
filds
mov
lods
enter
int3
mov
pushf
mov
cmpsb
ret
sub
in
dec
add
push
int
sub
mov
ror
into
insb
popa
or
call
idivb
and
dec
jo
push
enter
test
add
shl
mov
pop
shlb
in
jp
in
push
dec
mov
jp
sub
jecxz
sbb
xor
adc
cmp
mov
jns
scas
add
pop
push
ds
jmp
mov
mov
sub
ja
jp
adcb
test
pop
pop
sti
std
sub
daa
repnz
out
sub
ret
xor
insb
movsb
pop
xchg
mov
lea
sar
orb
sti
faddl
jns
sub
inc
xor
cli
nop
fnstenv
jp
outsb
negb
mov
clc
sbb
gs
mov
addr16
popa
les
cs
add
shrb
inc
inc
in
popf
fisubrl
jecxz
jmp
sub
rol
jl
dec
inc
aaa
lret
jmp
xor
inc
sahf
sbb
aaa
stos
jecxz
addl
mov
mov
cld
push
mov
pop
scas
mov
xor
mov
fwait
int
sub
pop
lea
push
mov
es
rcr
addr16
dec
xchg
push
cmpsb
mov
bswap
stos
leave
jp
mov
call
loopne
and
push
inc
mov
push
mov
add
inc
push
xchg
mov
mov
ss
sbb
call
das
outsb
sbb
rcl
in
adc
enter
std
aad
shlb
mov
outsb
cs
insl
push
or
sbb
dec
pop
cmpsl
aam
mul
cs
add
repnz
or
push
out
popf
mov
inc
mov
inc
in
shll
ds
cmpsl
jl
movsl
pop
lret
mov
fcmovu
dec
outsb
iret
testb
out
jnp
clc
into
or
aaa
xor
lea
sub
xchg
out
jecxz
inc
fldt
in
xor
add
pop
jne
push
imul
adc
mov
jns
aaa
rcrl
test
int3
push
sti
insb
lea
sbb
es
pop
push
or
jge
xor
sahf
imul
cmp
mov
dec
out
les
pop
push
in
sub
mov
out
ud1
out
or
loop
jp
push
xchg
xchg
lahf
scas
dec
scas
sub
or
dec
outsl
das
scas
cltd
push
mov
xchg
or
outsb
lock
lret
and
dec
push
pop
repz
jnp
push
jo
push
pop
hlt
pop
lcall
mov
aad
and
fcmovu
sarl
or
mov
testl
xchg
push
xor
stos
in
pop
jg
and
mov
ss
sub
or
or
inc
enter
dec
push
in
add
adc
gs
stc
les
insl
adc
push
cmpsb
mov
jecxz
inc
repz
shll
test
sahf
sbb
mov
mov
cmp
aam
test
out
sub
fyl2xp1
mov
and
add
mov
mov
cmp
mov
ror
cltd
mov
and
cltd
lret
repz
sbb
xorb
ss
cmp
js
hlt
and
testl
add
aam
push
inc
in
in
mov
rcl
iret
mov
mov
aaa
idivb
std
mov
dec
popf
jmp
shl
test
lods
inc
sbb
mov
adc
pushf
mov
push
enter
lods
insl
sub
repnz
cli
fadd
sbb
pop
lret
mov
call
mov
popa
scas
icebp
lods
cmp
push
mov
cmpsl
push
mov
and
bnd
push
mov
pop
insl
dec
or
xor
scas
loopne
mov
pop
imul
adc
sub
jae
mov
dec
outsl
pop
lea
int3
enter
inc
add
in
xorb
mov
add
movsl
inc
cld
add
jge
bound
pop
and
adc
cmp
stos
and
lret
int
es
adc
add
mov
repnz
jno
scas
mov
pop
movsb
idiv
loope
lods
mov
loopne
jle
mov
mov
push
xchg
mov
mov
popl
sbb
mov
in
rcll
in
aad
icebp
mov
sub
jmp
outsl
xchg
xchg
test
push
lret
pop
cmp
adc
lea
mov
sbb
jle
rclb
iret
icebp
cltd
xchg
lock
jns
mov
xchg
stos
bound
jp
mov
mov
inc
out
mov
test
push
jb
cltd
data16
xchg
or
sahf
adc
mov
repnz
ljmp
jle
lret
fadd
in
or
ljmp
mov
fcoms
arpl
clc
push
sbb
hlt
xor
cmp
jge
add
mov
jge
in
mov
rcll
test
imul
xchg
mov
xor
test
cmp
sub
stos
icebp
add
mov
hlt
movsl
ja
xchg
mov
or
lds
aaa
jbe
pop
movsl
pushf
imul
mov
mov
and
or
pop
mov
add
add
mov
xor
mov
push
dec
jl
inc
push
movsl
ror
shrb
dec
cmp
insb
shrl
xor
aaa
sbb
pusha
jne
insl
in
or
adcl
fwait
movsl
pop
xor
popa
pop
lea
testb
in
dec
jo
js
dec
push
leave
fstpt
adc
mov
pop
and
push
rcrl
aas
arpl
test
dec
xchg
jle
push
dec
stos
frstor
or
xchg
dec
inc
lahf
insl
inc
insl
scas
dec
aad
sbb
mov
clc
sbb
mov
jl
sbb
cld
hlt
add
mov
adc
adc
xlat
cmpsb
jb
cmpsb
and
cs
cmp
xchg
mov
aas
loope
mov
daa
dec
jl
jg
pop
mov
cltd
cmp
test
mov
sbb
push
insb
int
jbe
lcall
pop
into
xchg
add
aaa
cmp
ljmp
jo
and
sub
aad
pop
imul
mov
pop
rclb
sbb
cmpsl
repz
insb
dec
rcrl
jmp
sbb
xchg
dec
pusha
lds
xrelease
xchg
fimuls
mov
jne
jecxz
lret
add
or
pusha
cmp
int3
xorl
imul
bound
pushf
cmpb
mov
js
xchg
loope
cli
movsl
sti
fnstenv
fadds
fnstcw
outsl
inc
fmulp
mull
jae
cmp
je
jp
inc
dec
and
push
in
sahf
mov
ja
jmp
or
push
pop
loop
inc
jnp
outsb
push
xor
jo
jns
sub
insb
ret
xchg
fistpl
or
cmpsb
popf
scas
cld
into
jnp
scas
xlat
jbe
fdivl
add
or
mov
xor
push
loope
bnd
jge
inc
cwtl
bound
and
xor
push
push
dec
fcomps
add
aam
pop
pop
jmp
lods
inc
imul
mov
inc
and
hlt
mov
push
testb
cmp
mov
jbe
add
fs
push
mov
js
mov
and
gs
xor
fimuls
outsl
or
mov
cs
loop
adc
xchg
jae
je
sub
scas
das
add
mov
insb
and
stos
sub
cmp
insl
jo
mov
pop
sbb
aam
dec
sub
mov
push
xor
xor
fwait
xlat
lock
gs
aaa
xor
fisubrl
inc
lock
cmpl
clc
cmpsl
pusha
mov
mov
pop
cld
push
inc
xchg
jge
xchg
sbb
pop
cwtl
aad
dec
addb
lods
fwait
and
jecxz
push
sub
inc
lret
shrb
std
jae
push
cmp
addr16
mov
or
enter
push
stos
dec
push
sti
inc
pop
outsl
rorb
push
bound
fdivr
sbb
mov
je
xor
mov
sbb
test
jg
rcr
add
out
xchg
mov
mov
mov
jl
cli
loop
xchg
test
imul
lcall
stc
add
cwtl
scas
sub
fcmovu
push
inc
mov
imul
mov
jne
sbb
mov
mov
and
ss
or
paddb
fwait
mov
push
dec
cli
or
imul
xor
xlat
adc
add
lahf
sbb
enter
stc
mov
je
cmp
lock
jns
pop
add
xor
lret
loop
jp
std
rolb
jg
pushf
cmp
jg
jns
lret
je
mov
mov
aam
arpl
push
xor
or
shl
mov
sub
les
xor
lods
jg
sbb
loopne
xchg
mov
out
and
loop
shlb
lcall
dec
mov
xor
jno
xchg
fdivs
xchg
test
jecxz
shlb
cli
xor
xchg
inc
ljmp
cmp
fldcw
test
das
movsl
scas
pop
lcall
push
xor
addr16
xchg
aam
fwait
mov
xor
cmpsb
mov
jne
insl
es
mov
xor
cltd
shlb
jp
in
mov
insl
aam
xchg
popl
test
inc
push
mov
lods
xchg
fadds
mov
sub
shlb
out
sub
push
sbb
popa
ljmp
sub
cmp
adc
or
sub
shl
test
push
js
push
loop
test
fnstsw
cmc
ret
jecxz
sbb
std
cltd
mov
daa
fisubrl
icebp
repnz
popa
ss
fsub
movsbl
popa
paddsw
mov
and
add
mov
mov
push
mov
outsb
or
mov
aad
test
xor
fsubl
mov
push
cmpsl
popa
std
mov
mov
push
fdivs
add
sbb
fcoml
jl
in
xor
leave
dec
push
test
imul
insb
pop
xchg
cmp
fnstenv
adc
fwait
mov
pop
fs
cmp
out
push
push
inc
mov
push
jno
and
insl
lea
mov
mov
loop
call
dec
out
adc
xorl
cmp
xchg
mov
push
imul
int
dec
loope
and
sbbb
gs
stos
mov
dec
adc
adc
jae
outsl
aaa
add
sub
es
mov
cld
sahf
repz
adc
cmp
mov
fs
cmp
sub
mov
in
gs
lcall
mov
das
lds
imull
out
jno
test
scas
cmpsb
sbbl
mov
or
or
mov
pusha
bound
call
inc
aas
cld
aad
xlat
xchg
stos
add
pop
or
push
jecxz
push
ret
push
xor
sahf
ret
daa
cmp
sub
inc
adc
std
pop
out
call
rcrb
jmp
or
xchg
mulb
imul
stos
dec
push
mov
aas
js
int
shrl
pop
stc
out
dec
iret
jg
je
pop
iret
mov
mov
xchg
in
push
inc
adc
lods
sbb
cmc
push
jno
jecxz
fbld
shlb
inc
inc
push
cltd
jecxz
and
ja
cmc
push
clc
imul
ds
lods
adc
pop
xchg
shll
xchg
int
test
inc
les
mov
jbe
pop
loopne
dec
xchg
vpaddsw
dec
mov
inc
push
ss
jns
jl
test
jl
adcb
pop
pop
ror
shrl
fxch
xchg
cwtl
idivl
icebp
dec
loopne
jmp
in
call
outsb
loope
mov
lods
aam
cmp
js
aaa
push
mov
stc
mov
outsl
notb
cmp
imul
popa
mov
in
add
enter
enter
mov
xor
sbb
insl
and
xor
xor
sahf
jecxz
popa
movsl
xchg
and
cld
add
or
mov
pusha
pop
adc
ss
pop
test
sbbb
mov
mov
push
xor
inc
mov
shrl
bound
leave
enter
xor
imul
xor
pushf
popf
rolb
adc
dec
dec
int
in
shrb
xchg
cmpl
jp
cwtl
mov
js
fstpl
nop
imul
enter
pop
fmul
mov
or
sub
subb
cli
aaa
jb
insl
stc
push
fs
jo
ror
push
fimull
outsb
inc
jne
lahf
rcll
dec
js
jno
adc
iret
cmc
hlt
dec
push
sbb
or
repz
sub
imul
mov
mov
ds
cmpsl
add
mov
or
xchg
imul
mov
loop
jle
jg
pop
push
frstor
pop
cli
mov
push
xlat
nop
fiadds
pop
push
aam
cmp
std
stos
fcomps
mov
cmpsl
dec
jmp
jns
rorb
std
jg
aad
adc
addb
jb
in
out
addl
push
ret
jecxz
jecxz
cli
rcrb
mov
jb
jae
cmpsl
lahf
pop
daa
xchg
inc
rcr
faddl
mov
shr
mov
out
lret
out
addb
jo
jns
push
leave
mov
jp
lods
add
jecxz
test
std
sbb
inc
or
fsubr
xchg
and
xor
push
enter
fcompp
cld
and
cs
mov
pop
cwtl
jmp
aad
mov
sub
cli
pop
rcrl
jne
stos
popf
jns
push
lret
and
rcl
inc
aad
xchg
fwait
add
sub
std
adc
fwait
push
test
xchg
int
xor
cmp
sub
push
xor
lret
dec
int
inc
push
inc
sbb
xorb
subl
int3
in
or
sbb
insl
adc
dec
pop
mov
jl
test
ljmp
and
mov
je
rol
xchg
cmp
jmp
mov
cli
scas
or
xor
test
add
ja
xor
jge
mov
dec
fildll
shlb
lea
stos
pop
add
pop
adc
adc
xor
jg
sbb
inc
insb
and
aam
sub
xchg
mov
outsl
iret
push
aas
add
jbe
addr16
sub
jnp
or
ret
sbb
xor
mov
test
shl
aaa
or
dec
mov
bound
push
sub
nop
sub
mov
aam
leave
ret
or
adc
lods
push
xchg
fisubrl
or
adc
lret
ljmp
mov
adc
push
insb
push
adc
xor
ffreep
and
fists
sub
mov
jne
fwait
stc
dec
gs
sub
cli
sbb
sub
push
rcll
xchg
mov
jbe
mov
je
out
fsubs
rcl
ss
and
dec
mov
popa
imul
lret
loopne
xlat
call
push
sub
dec
mov
jmp
loop
repnz
adc
jb
push
inc
cmp
int3
test
cmpsb
aam
sti
cmpsl
pushf
cmpsb
cmc
cmp
xchg
mov
imul
jo
inc
shrb
add
or
push
mov
ja
dec
pop
shlb
shll
push
inc
pop
jns
xchg
mov
pop
pop
in
aam
roll
dec
mov
pop
adc
cmpsb
jle
into
mov
mov
mov
pop
push
xchg
mov
rcll
lock
adc
dec
add
mov
add
and
pusha
daa
cmpsl
mov
mov
sbb
loope
inc
and
in
and
shl
rorl
add
adc
push
pop
lret
mov
sub
cli
es
shrl
movsl
xor
int3
test
pop
or
pop
pop
popf
sti
fs
mov
pop
loopne
adc
jbe
or
or
mov
adc
int
into
iret
ss
push
mov
adc
or
lods
test
lcall
and
lods
inc
mov
mov
cld
insb
mov
pop
test
mov
mov
xchg
shll
cltd
outsl
xchg
xor
jne
push
and
fcmove
cmpb
mov
mov
hlt
jge
push
sbb
aaa
xchg
pop
cltd
pop
stos
je
test
mov
movsl
cwtl
push
inc
outsl
stc
cmp
mov
jg
lahf
inc
cmpsb
jno
nop
cmp
fldl
int
clc
cmc
lcall
rorb
test
dec
les
dec
mov
push
pop
adc
cmp
clc
out
cmp
stos
mov
sbb
cwtl
orl
push
dec
out
arpl
lret
lahf
aas
int3
mov
js
aas
fdivs
scas
mov
jo
in
push
lahf
adc
add
fnstenv
adc
ret
mov
add
lret
lret
adc
repz
ret
seta
cld
jno
sub
jle
je
arpl
fdivp
mov
jecxz
scas
fcoml
sbb
adcl
mov
addr16
pushf
xor
xor
jno
cltd
cmpsb
xchg
inc
ds
xchg
mov
adc
call
mov
push
fwait
and
scas
xor
clc
xchg
and
dec
invd
addr16
lret
ljmp
out
jno
ljmp
push
fdivrs
dec
fstpt
jl
cmc
mov
mov
fistpll
std
xor
cld
bound
shlb
jl
or
add
dec
cs
out
xchg
mov
enter
jo
jb
lea
stos
mov
push
dec
loop
or
arpl
mov
pop
ret
in
push
add
std
or
jle
or
pop
lret
or
xchg
xor
loop
inc
sbb
fs
aaa
mov
push
sbb
jne
cmpsb
mov
cmp
pop
and
push
sahf
mov
pop
push
out
cwtl
pop
insb
cmp
pop
in
in
pop
mov
adc
or
push
mov
in
push
aad
jecxz
imul
fs
xor
icebp
aam
mov
push
out
aad
jns
jnp
test
push
dec
outsl
jnp
out
mov
lret
lock
add
mov
and
daa
mov
dec
inc
xchg
pop
mov
jno
push
movsb
dec
insb
daa
pop
sub
mov
push
jmp
imul
mov
dec
sub
loope
fldcw
and
xor
pop
xor
lds
enter
mov
imulb
lods
out
cltd
lea
int3
mov
mov
mov
adc
jns
js
dec
jne
les
adc
test
hlt
push
popa
sbb
jl
fsts
stc
mov
enter
mov
cmpb
shrb
shlb
in
dec
mov
call
lods
mov
test
das
jmp
push
jl
mov
add
loopne
jb
inc
movsb
push
mov
xchg
mov
daa
cmp
mov
inc
mov
xchg
xchg
das
frstor
xlat
mov
das
shrb
inc
ja
orb
mov
adc
fsubs
frstpm(287
jno
inc
lods
inc
jmp
pop
dec
push
pop
imulb
inc
loopne
mov
aaa
frstor
lret
jl
inc
incb
in
popa
mov
pop
mov
mov
add
pop
xlat
roll
inc
mov
xor
lods
lss
insl
insb
cmpsl
decl
std
jo
sub
aaa
dec
out
faddp
lret
push
data16
jbe
loope
ficoml
pop
sbb
jae
inc
ss
jle
gs
push
sahf
imul
pop
rclb
xor
inc
mov
jno
cmp
sarl
push
cmpsb
mov
int
mov
pop
cs
sbb
mov
sbb
lcall
leave
hlt
fadd
fimull
jle
stos
lahf
ljmp
jecxz
data16
scas
xlat
mov
inc
je
int
mov
push
jo
dec
scas
sbb
aam
loopne
adc
ret
cmp
cmp
lret
cltd
test
jmp
lret
or
mov
addb
jns
push
nopl
lea
loop
and
icebp
xor
pop
jnp
fisubrl
jge
iret
repz
push
rcrl
and
adc
imul
je
mov
repnz
popa
xchg
aad
addl
mov
sub
ja
lods
jmp
rcpps
scas
std
std
daa
mov
inc
fwait
or
cmp
inc
dec
pop
adc
lds
pushf
pop
mov
pop
and
lods
or
insb
jns
add
pop
repnz
push
cmp
sub
mov
or
insb
dec
and
mov
adc
mov
popf
sub
data16
ja
xlat
mov
loopne
dec
mov
pop
in
out
xchg
jnp
stos
stos
cltd
sbb
jns
clc
mov
and
test
rorl
mov
aad
popl
jo
push
and
loopne
leave
jns,pt
pop
cmp
xor
movsl
aad
inc
adc
mov
push
jb
mov
int3
das
sbb
fmuls
dec
and
aad
xchg
cmp
in
andb
push
subb
sub
in
cmpsb
mov
xchg
out
or
inc
lods
mov
xchg
sub
xchg
mov
pushf
mov
stos
dec
in
jg
pop
xor
push
lds
and
fwait
out
in
shll
negl
sbb
repnz
lods
test
nop
jmp
inc
into
ja
add
lea
pop
cmp
shlb
ljmp
cmp
add
add
sbb
into
cli
and
xchg
or
cmp
cld
mull
push
mov
push
gs
out
movzwl
push
push
outsl
and
push
push
popf
cmp
sub
jne
imul
push
repz
mov
add
sub
cmp
inc
jle
mov
daa
pop
rcl
jbe
movsl
adc
int3
out
mov
add
rcrl
mov
push
clc
adc
icebp
test
aad
test
gs
mov
jmp
insl
mov
js
jl
jp
scas
es
into
ret
xchg
sub
cmp
mov
in
cmp
out
rorl
mov
leave
push
insb
cltd
cmpsb
mov
mov
test
xchg
pop
or
popa
dec
daa
lret
fdivl
mov
pop
xchg
fisubl
push
jg
mov
jecxz
das
rcrl
aam
clc
sub
inc
or
inc
sbb
inc
mov
or
pop
cmp
xchg
movsl
pop
sub
popa
mov
inc
pushf
xchg
mov
mov
push
movsb
ret
enter
fcomps
push
into
popf
scas
cmpsb
and
ljmp
sub
lcall
xchg
fisttpl
leave
out
and
in
scas
js
mov
hlt
pusha
push
jp
sahf
subb
or
scas
bound
and
call
lcall
inc
cmp
icebp
aad
pop
insl
sti
xor
adc
stos
cmpsb
sub
stc
out
lcall
add
popw
push
scas
aaa
mov
ror
adc
sub
cmpsl
pop
xchg
rcl
fidivrs
add
pmullw
mov
sbb
or
mov
cmovae
cmp
mov
mov
addl
jns
push
sbb
add
stos
dec
mov
jmp
sbb
and
aas
in
sahf
bound
data16
xor
icebp
inc
adc
sbb
inc
sub
out
cmpsb
xor
divb
jl
sub
je
pusha
cmp
sub
outsb
xor
and
nop
or
aas
and
xchg
scas
stc
repnz
lea
pop
lcall
jb
mov
sahf
mov
repnz
and
ljmp
fimuls
leave
scas
mov
push
mov
xchg
nop
xlat
dec
mov
mov
inc
in
xlat
inc
ss
sbb
xchg
push
add
lock
cmpsb
je
push
jg
ficompl
jle
mov
lock
inc
xchg
lods
cmp
dec
or
insl
std
push
andb
fcompp
and
popa
dec
repnz
inc
out
in
les
pop
pop
fildll
push
movsb
rcl
lahf
dec
push
jmp
push
popf
and
lods
sahf
lock
out
xchg
inc
js
jg
adc
movsb
mov
xor
pop
mov
add
scas
mov
lahf
xor
inc
cld
std
push
and
dec
or
das
pushf
insl
sub
into
pusha
cmpsl
sub
rcrb
sub
stos
dec
aam
xchg
mov
xor
push
xor
jae
xor
sbb
lcall
roll
xchg
adc
imul
push
jns
stos
xchg
sti
test
add
rclb
sbb
ss
mov
sbb
daa
ret
jg
add
data16
cmpsb
shl
mov
or
test
aaa
mov
adc
jl
sub
sub
jb
pop
cmp
ret
cltd
mov
and
mov
add
and
mov
fs
dec
mov
jge
mov
add
arpl
rolb
jl
sbb
mov
inc
lock
add
and
dec
adc
mov
inc
test
enter
sub
mov
or
mov
pop
fs
mov
jecxz
adc
pop
mov
sub
fldcw
cwtl
or
cmp
dec
sbb
addb
cmp
sbb
mov
sub
or
lret
sub
push
inc
push
pop
arpl
pop
push
cwtl
and
in
mov
lahf
gs
cmp
xchg
jmp
call
jae
outsl
mov
js
iret
mov
and
inc
test
decb
lret
fsubrs
or
test
jmp
push
xchg
gs
in
sub
enter
out
mov
ds
pop
je
je
xlat
mov
dec
cmpb
inc
xchg
test
addr16
sub
xchg
and
sahf
popa
std
and
cmp
cld
out
lds
out
inc
and
mov
loope
into
xor
pop
int3
xchg
and
jle
dec
scas
adc
dec
pushf
cmp
hlt
cmp
into
jnp
imul
fcompl
enter
pop
mov
and
fdivl
add
dec
ret
mov
xor
xor
mov
pusha
fidivl
out
and
add
in
mov
flds
inc
mov
inc
mov
movsl
mov
add
ficoms
std
dec
mov
ficoml
pushf
addr16
cmp
cmp
jl
jae
xchg
lret
lock
xchg
inc
out
mov
test
lahf
or
and
adc
inc
mov
jno
inc
or
jecxz
fld
test
mov
mov
jle
inc
push
out
pop
push
push
inc
mov
mov
xchg
pop
mov
es
popa
out
aad
test
cmp
mov
xchg
rolb
xor
ret
sbb
lea
mov
mov
cmpsb
repnz
push
inc
mov
movsb
or
lods
add
rorb
imull
pop
pop
xchg
sbb
mov
adc
stos
jecxz
mov
std
nop
jno
pop
mov
movsl
fistpl
cmp
add
xchg
aas
inc
ret
or
sbb
push
inc
jl
push
frndint
pusha
push
and
ljmp
shll
sub
aaa
cwtl
fisttps
inc
sahf
add
sub
mov
push
ret
jge
outsl
lea
push
or
push
cmpsb
jmp
fwait
xlat
lock
bound
xor
sbb
int
mov
jne
data16
adc
sbb
mov
adc
push
add
cltd
nop
inc
pop
jo
xchg
aam
sbb
arpl
lahf
jnp
out
rclb
shr
push
pop
icebp
xchg
pop
inc
je
inc
and
loopne
insl
lcall
fwait
cmpsb
rol
mov
lea
pop
xor
imul
mov
hlt
xor
jns
mov
xchg
clc
test
mov
dec
pop
popa
cltd
mov
adc
sub
jne
and
mov
xchg
xor
loope
sbb
mov
fs
shr
xchg
mov
add
sub
add
jne
in
inc
negl
pop
mov
aam
imul
outsb
rcrl
inc
gs
arpl
push
stos
mov
cwtl
sbb
dec
mov
or
out
cwtl
jbe
pop
negl
xchg
pop
pop
outsl
cmp
pop
pop
cwtl
sbb
xor
fmuls
sbbb
pushf
adc
clc
cmp
adcl
ss
popf
inc
fcoml
add
jmp
push
fldenvs
push
lret
aam
aam
push
lahf
mov
push
and
out
and
repnz
mov
movsl
fidivrs
pop
push
dec
and
addl
jnp
arpl
fisttps
arpl
hlt
fdivl
xchg
mov
inc
clc
inc
cmp
ffree
cmp
and
xchg
ds
xchg
sub
out
cmc
mov
add
sti
rcrb
test
push
xchg
fs
or
xlat
xchg
leave
shrb
mov
pop
aaa
insl
push
loop
ror
div
in
shlb
in
movsl
jmp
or
dec
das
inc
inc
dec
loope
add
inc
lock
dec
xchg
adc
mov
out
add
jne
jnp
cmp
int
inc
inc
push
cmp
setae
rcl
jb
push
jbe
aam
mov
dec
mov
sbb
mov
fs
je
sub
rcrb
and
sbb
sbb
adc
pop
add
ret
inc
mov
jo
pushf
mov
inc
arpl
xchg
dec
arpl
inc
jmp
mov
mov
in
and
pop
enter
add
jno
xchg
cmp
sbb
fdivrs
mov
popa
stc
add
and
jne
addr16
out
inc
push
sub
pop
lar
bound
mov
xor
shrb
mov
incl
in
int
fadd
mov
mov
cmp
adc
sahf
mov
push
pop
pop
cmp
sub
add
mov
adc
leave
je
mov
cmp
negb
repz
pop
pop
sbb
pop
aad
inc
push
jno
mov
mov
xchg
and
mov
inc
notb
sbb
sahf
pop
mov
jno
dec
or
lds
xchg
or
push
lret
mov
loop
in
fmull
or
sub
mov
xchg
adc
call
lea
and
sbb
jbe
int
shrb
in
xor
shl
inc
aas
jl
pusha
cwtl
mov
add
fwait
jmp
popa
lods
adc
dec
adc
pop
mov
out
cltd
icebp
xor
loopne
dec
mov
addr16
nop
insl
cmp
inc
xchg
jg
xchg
fstl
fildll
ret
xchg
inc
push
and
ss
divl
pop
jmp
repnz
lret
and
jns
push
xchg
mov
in
cmp
jl
ds
add
push
lock
test
push
push
in
pop
jle
pop
or
arpl
mov
out
out
mov
inc
sbb
leave
aad
inc
jmp
or
mov
imul
mov
cmp
ret
cmpsb
shr
jge
push
rcll
sub
pop
xchg
rcrl
pop
movsl
and
cmc
ss
imul
jg
leave
fldenv
bnd
mov
mov
xor
fs
mov
pop
add
push
inc
les
fisubs
mov
add
mov
mov
mov
insb
enter
xchg
gs
insl
xchg
and
dec
test
cli
cmpsl
pop
mov
fcmovb
adc
jg
imul
test
cmp
insb
pop
inc
ret
and
jbe
push
nop
mov
je
mov
mov
stos
mov
stos
xchg
shll
xlat
xor
or
sub
popf
mov
and
jb
aad
pop
data16
rcrb
ss
mov
addr16
hlt
pop
cltd
xor
mov
xor
test
xchg
add
jle
out
aam
movsb
es
fsubrp
xor
mov
fsubrs
or
fidivrs
imull
fdivrs
pop
and
fwait
sub
movsb
jle
and
pusha
mov
inc
les
test
fcmovbe
es
cld
ret
shll
aaa
jne
mov
dec
mov
fs
icebp
in
addb
pop
addr16
sub
sti
shl
mov
mov
pop
xchg
push
int
add
sbb
mov
sti
lcall
or
dec
jecxz
jl
fisubrl
out
and
and
mov
push
fnstsw
test
popa
mov
ret
cmpb
rol
adc
xor
mov
sub
push
test
push
lcall
subb
fisttps
mov
xchg
shrb
xchg
cld
mov
imul
into
loop
mov
ja
jge
sbb
xchg
ja
xchg
popa
imul
xchg
repz
pop
jno
lds
fnstcw
cmc
push
fldcw
or
or
adc
cwtl
mov
cmp
aaa
add
xor
out
int
sbb
adc
stos
jmp
xor
sub
fwait
inc
flds
pusha
andl
mov
cmp
gs
clc
nop
cmp
dec
inc
sub
inc
test
push
ret
adc
imul
scas
ret
or
aaa
mov
cli
in
jle
fwait
imull
push
jmp
or
mov
add
jnp
sub
xchg
xor
xor
shll
jl
outsl
pop
aas
dec
in
pushl
cltd
shr
jbe
jae
jp
imul
test
sti
dec
dec
mov
mov
fdivrs
lret
out
outsl
imul
inc
add
xor
or
es
mov
out
gs
fcoms
jmp
int3
adc
inc
ss
or
pop
subb
es
xchg
test
inc
movsl
jae
pop
mov
lcall
dec
fidivrl
mov
mov
xchg
mov
rclb
mov
jmp
lahf
lahf
outsl
add
cmp
test
in
in
pop
xchg
cmp
sub
xor
dec
cmp
mov
scas
inc
xor
mov
rcr
int
xchg
mov
mov
and
stc
mov
lahf
cmpsl
je
cmp
rclb
cs
add
cmp
adc
sti
fadds
movsl
ljmp
sub
and
xchg
ret
dec
scas
mov
sahf
push
cmp
dec
mov
aam
fadds
fbstp
shll
bound
adc
fwait
iret
out
iret
xor
xor
inc
fmuls
jge
out
cmp
imul
cltd
add
pop
test
ret
xchg
jne
lret
cmpsl
dec
sbb
out
mov
or
inc
fsubrs
xchg
mov
mov
add
pop
inc
leave
mov
decl
push
rcrl
or
inc
mov
es
push
insl
mov
mov
dec
ficoms
and
insb
pop
sub
xchg
cwtl
lds
or
clc
fdivrs
cltd
dec
mov
adc
lods
push
imul
mov
jae
nop
pusha
sbb
and
inc
cmc
stos
xchg
adc
sbb
test
jae
stc
ljmp
ror
sub
negb
mov
stc
jbe
xchg
stc
mov
jge
dec
lahf
lret
push
push
inc
in
xchg
ja
cmp
ret
mov
pop
xor
in
jnp
out
adc
cmp
mov
or
insl
dec
adc
jbe
sub
mov
sbb
lret
pop
outsb
leave
mov
outsl
add
dec
test
sbb
addr16
add
xor
push
movsb
outsl
pop
ret
inc
inc
ljmp
xchg
jmp
ror
pop
adc
xchg
popa
mov
ja
fiadds
ret
xlat
pusha
cmp
jmp
jg
call
lock
mov
popf
test
sbb
icebp
dec
lret
dec
sub
jns
inc
xor
add
mov
pop
movsb
std
movsb
pop
pop
movsl
or
pop
ret
pop
arpl
inc
pop
cmp
adcl
sti
sbb
mov
adc
mov
clc
stc
imul
mov
and
cmp
ds
add
loop
rolb
subb
add
push
insl
pop
dec
loop
pop
lea
jge
cltd
adc
jecxz
imull
or
jo
jb
clc
jg
int
push
in
mov
gs
dec
dec
lock
roll
repz
scas
prefetchw
adc
lods
ud0
in
test
dec
xor
pop
adc
xchg
adc
xchg
test
fstl
dec
cmp
divl
mov
sbbl
cmpsl
jo
in
adc
add
inc
jmp
outsb
dec
hlt
jmp
xor
mov
push
xlat
ss
or
jl
fucomip
jo
add
std
lret
jno
push
mov
mov
jnp
das
fists
mov
jns
inc
mov
stos
jbe
cmc
and
or
mov
sarb
mov
mov
shrl
adc
mov
dec
cmp
push
cmp
push
xor
pop
dec
xchg
pop
imul
in
clc
lret
xchg
push
xchg
stos
inc
xchg
mov
pop
lea
or
jp
or
xor
in
stos
fcoml
test
jne
insl
pop
and
ja
je
stos
add
lock
mov
xlat
or
enter
fs
mov
add
and
push
fwait
mov
sti
cmp
add
inc
out
icebp
sub
adc
mov
mov
sub
scas
pextrw
mov
fwait
jnp
fdivrl
push
dec
out
cmc
xchg
or
lods
sbb
out
sub
dec
loopne
nop
xchg
ljmp
fdivrl
ret
ljmp
and
dec
dec
stos
push
pusha
sar
dec
sub
mov
push
jne
fcmovbe
pop
subl
push
xchg
movb
out
xchg
jp
gs
jecxz
arpl
dec
and
cmp
jo
rcr
jb
lea
stos
mov
cmp
stos
hlt
ret
and
push
pusha
adc
inc
test
ret
add
and
and
mov
jb,pt
fs
adc
mov
push
stos
pusha
dec
insb
fsts
lahf
shlb
xor
add
ss
addr16
pop
and
sbb
ss
lea
jae
xchg
rcrb
int3
hlt
jnp
cmp
xor
cli
pop
pop
xor
adc
cmp
bound
ljmp
lods
int3
cmp
adc
inc
mov
xor
mov
push
movsl
sbb
lea
push
lock
lahf
decb
ds
std
sbb
sub
mov
add
lret
andb
add
and
fwait
pop
enter
jno
sbb
jbe
mov
xor
mov
dec
mov
inc
ret
add
mov
icebp
scas
sti
sti
inc
or
nop
cltd
int3
sbb
mov
lcall
xor
pop
pop
or
cmc
mov
repnz
pop
stos
cmpsb
dec
fs
ss
pop
sub
xchg
sub
mov
je
mov
push
les
pop
jbe
sbb
adc
xchg
mov
jg
mov
push
sar
shr
sbb
pop
dec
push
ss
mov
mov
lea
xor
and
repz
mov
xchg
mov
xor
pop
add
addb
inc
adc
test
in
xor
out
fsubl
dec
xor
not
sbb
test
cmp
mov
je
test
add
mov
xchg
ljmp
scas
sub
or
mov
xor
cmc
aaa
sbbl
mov
push
stos
cmp
leave
lahf
mov
lcall
divb
test
in
lahf
sub
dec
add
aam
inc
or
out
jne
pop
xchg
sbb
cmp
vsubss
xchg
and
jmp
clc
adc
pop
add
sub
xor
fdivl
adc
shl
test
mov
aas
rcll
mov
jno
jb
and
notl
jbe
mov
push
add
movsl
repnz
sahf
fwait
hlt
out
ficompl
stc
ljmp
cmp
jp
add
sub
scas
call
or
out
jo
mov
mov
pop
sarb
push
sub
dec
dec
ljmp
cli
scas
dec
sahf
jns
lock
pushf
jecxz
dec
jge
arpl
mov
cmp
sbb
jle
pop
pop
fld
orl
cmp
xor
add
test
push
dec
pop
ljmp
xor
aaa
cmp
add
or
int
nop
adc
mov
jle
popf
and
bound
fwait
pop
leave
dec
sub
mov
jge
and
push
push
rcrb
mov
subl
mov
inc
xor
adc
xorb
push
add
xor
jg
dec
dec
sbb
testb
mov
lods
scas
insl
ret
mov
sbb
sahf
xorb
dec
xchg
mov
mov
xchg
call
je
aas
mov
fldcw
inc
addl
pop
cmpsl
sub
leave
add
int
jae
lods
xor
fdivl
adc
cld
xor
subl
dec
push
dec
stos
scas
jp
and
pop
jmp
adc
push
in
movsb
cmp
jmp
inc
and
dec
aam
mov
jae
push
cld
sbb
mov
shrb
sbb
mov
add
sbbl
inc
push
pop
data16
push
fdivrl
add
dec
fsubl
loop
stos
push
cwtl
xchg
test
xchg
inc
outsl
add
loopne
outsl
xchg
jl
shll
lods
add
cli
pop
das
mov
stc
into
mov
jae
xchg
test
mov
sbb
pop
xchg
jb
sti
fnsave
adc
mov
pop
test
ffreep
cmp
cld
outsb
xchg
push
sbb
push
mov
inc
sbb
test
jbe
aas
push
mov
out
push
fwait
push
int
ljmp
stos
sub
mov
repz
mov
mov
jo
fistps
add
clc
cltd
insl
pushf
call
fidivl
enter
mov
mov
lock
cld
sahf
mov
inc
mov
cmc
xor
inc
add
mov
cmpsl
xor
cli
xchg
pop
xor
frstor
xorb
fstpt
std
xchg
pop
and
cmp
mov
mov
icebp
dec
sub
dec
and
jne
out
fistps
pop
mov
test
insl
cltd
mov
push
imul
xorl
aam
push
add
insl
xor
icebp
jp
sub
fstps
xchg
pop
loopne
repnz
loopne
xor
aad
call
jnp
cmc
push
or
ret
dec
xor
arpl
xlat
fmulp
shll
pop
sub
mov
mov
mov
fldl
push
pop
push
pushf
xor
cmp
push
js
fwait
jecxz
mov
xchg
xchg
ret
sti
jne
jmp
adc
mov
stos
outsl
pop
movsb
jle
enter
stc
push
dec
out
imul
lret
outsl
loopne
push
jg
jle
push
out
in
xor
xchg
clc
shlb
ja
push
out
sub
aaa
adc
pop
seta
mov
xchg
dec
movsb
and
mov
pop
add
or
mov
xchg
mull
mov
roll
xlat
int
stc
add
movsl
and
mov
fiadds
pop
fs
mov
outsl
sarb
adc
push
cmc
xchg
push
push
stc
mov
movsb
ret
adc
into
xchg
loope
lret
push
outsl
ror
dec
rorb
out
js
repz
and
and
mov
iret
insb
shrb
dec
xor
mov
sbb
lods
jge
pop
jg
fcomps
pop
fcomp
cmpb
xchg
mov
outsl
fdivrl
shl
mov
add
jne
mov
push
sti
sub
ljmp
mov
and
jb
or
mov
mov
xlat
lock
mov
mov
adc
mov
fisubs
movsl
jmp
adc
mov
aam
or
stc
scas
jl
or
jb
jne
popa
xchg
inc
sbb
mov
insb
stos
leave
pop
adc
mov
das
in
xchg
sub
cmc
iret
pop
dec
mov
add
jbe
bound
mov
daa
lret
and
lahf
bound
mov
fsin
data16
addr16
push
sarl
loope
int3
sete
ret
sbb
dec
inc
test
cmp
add
or
lock
out
add
fisubs
jp
push
mov
subl
or
dec
xchg
data16
push
sbb
sahf
ret
and
inc
call
faddl
enter
jbe
xor
pusha
js
daa
mov
pop
sub
mov
cmp
hlt
jb
mov
stos
jmp
adc
pop
mov
jns
jno
in
dec
inc
les
xchg
test
sbb
inc
lods
pop
cli
cmp
outsb
push
int3
cmp
or
repnz
push
add
cwtl
out
jnp
in
and
sub
call
outsl
add
cmp
nop
in
lcall
xor
add
fs
sbb
sub
outsb
xchg
mov
mov
add
mov
iret
cmp
adc
pushf
dec
sbbb
cmpsb
stos
and
aad
lods
repz
popf
pusha
or
mov
daa
inc
mov
or
dec
mov
pop
cmp
add
mov
jecxz
divb
add
xchg
jne
dec
cmp
pushf
rcrb
jae
mov
jo
daa
pop
dec
jnp
push
je
add
jg
xchg
in
ret
out
mov
shlb
inc
pop
mov
outsb
mov
orl
loopne
pop
out
add
adc
sub
pushf
dec
aas
jmp
and
out
addr16
stos
cld
jecxz
jnp
mov
jnp
cmp
mov
test
xchg
adc
jne
mov
sub
and
mov
loopne
sbbb
pop
xor
sbb
cmp
sub
add
scas
adc
std
fcmovb
xchg
orb
add
add
jae
or
and
xchg
test
push
lea
xor
scas
add
shr
mov
sbb
mov
dec
inc
leave
test
push
xchg
pop
pushf
inc
xchg
lods
out
aam
push
inc
pop
push
mov
je
and
pop
ficoms
testl
cli
lcall
lds
sarb
pushf
dec
cmp
into
cmpsl
outsb
push
shrl
sub
inc
pop
pop
bound
push
jnp
jecxz
in
jg
cwtl
insl
lds
mov
rcrb
loop
xchg
sub
xchg
scas
sub
cli
iret
loop
cld
lock
mov
rclb
clc
push
mov
roll
dec
daa
arpl
xor
pop
test
cmp
popf
aas
push
xor
add
sahf
inc
loopne
push
mov
pop
mull
mov
push
add
call
adc
xor
dec
in
add
adc
loop
test
add
mov
adc
scas
xchg
popf
pop
jbe
pop
lcall
stos
test
lahf
or
popa
mov
jo
cmp
shrl
dec
out
add
inc
cmpb
sarb
sub
aam
test
add
mov
mov
mov
insl
pop
and
arpl
jge
push
pusha
xor
sbb
sub
mov
test
in
push
ret
xor
aaa
fxch
outsl
test
dec
aaa
data16
out
xchg
sub
jecxz
push
adc
insl
push
sti
push
roll
push
cmp
inc
mov
xacquire
aas
ja
test
add
cmp
lret
mov
mov
push
daa
adc
jae
adcb
jg
and
pop
mov
push
jge
inc
stos
out
dec
andb
fsubr
adc
lods
xor
lods
jbe
cmpsl
in
fadd
mov
and
mov
daa
xchg
rorb
lcall
roll
adc
sbb
mov
mov
fsubs
sarb
into
sbb
jae
sub
loope
adc
and
mov
pop
pusha
sbb
cli
push
add
and
jbe
hlt
sahf
inc
pop
outsl
mov
inc
out
lcall
dec
sbb
mov
push
fcoms
adc
jmp
adc
call
mov
pop
jge
shlb
lahf
clc
adc
mov
and
lds
push
mov
mov
xor
mov
sub
pop
aaa
daa
stc
or
popa
sub
lea
pop
jecxz
mov
push
mov
scas
pop
rcrb
stc
xor
cwtl
push
mov
jg
faddl
js
out
out
jnp
stos
pop
iret
ljmp
lcall
push
pop
test
scas
mov
int
rolb
inc
popa
xor
pop
dec
repnz
xchg
jno
xor
data16
pop
cmp
inc
xor
jl
dec
repz
mov
lret
pop
cli
dec
push
mov
xchg
stos
leave
shll
popa
sub
add
add
sub
shll
dec
mov
jb
push
or
aaa
or
and
daa
movsl
jle
sbb
test
sti
in
les
das
xchg
test
push
mov
ffree
setge
jae
test
clc
sbb
mov
cmpxchg
xchg
lods
xchg
push
mov
xor
fidivl
daa
mov
outsl
lods
pop
lds
or
xor
add
ja
lcall
mov
aam
orl
mov
jbe
cld
fdivrl
xlat
rclb
mov
push
sub
pop
or
mulb
push
jo
xchg
out
inc
loope
sub
ja
in
aad
xlat
pop
cmp
js
pop
push
jl
add
in
insb
push
and
mov
inc
mov
push
aaa
out
pop
add
mov
repnz
es
inc
lret
in
mov
sahf
sbb
mov
dec
push
nop
pop
addr16
call
jbe
push
imul
les
sarl
pop
mov
pop
cmp
shrb
and
dec
or
filds
push
push
ljmp
xor
push
add
into
mov
dec
dec
xor
pop
sub
mov
jne
in
or
lea
adc
and
lret
adc
test
aaa
test
enter
test
jno
iret
in
out
bound
insb
sarl
int3
shl
sbb
mov
out
or
xor
dec
or
sti
in
xor
mov
cmp
adc
frstor
sub
cwtl
and
add
sahf
loopne
test
mov
insl
nop
sub
mov
call
sbb
sbb
add
jno
mov
sub
insb
inc
sahf
mov
sub
or
fisttpl
gs
mov
out
loope
adc
icebp
push
jnp
rep
pop
add
push
inc
fs
mov
js
popa
push
add
movl
in
aas
pusha
sub
mov
inc
inc
loop
lahf
jbe
out
and
fucomip
adc
ret
jns
jmp
popa
out
cmp
loope
insb
push
in
mov
adc
adc
mov
data16
sub
or
ret
subb
and
jmp
in
out
xchg
dec
mov
mov
lcall
xor
out
xchg
mov
mov
push
sahf
dec
jmp
in
aam
sub
inc
call
es
sahf
push
int
mov
pop
repnz
sbb
inc
mov
dec
adc
dec
jle
lods
insb
pop
and
push
sub
mov
jle
std
sub
push
sbb
outsl
lea
ret
movsl
loope
sbb
pop
jp
mull
sub
mov
adcl
xor
mov
add
not
xchg
out
or
iret
repz
bound
clc
sub
xchg
out
pop
and
xor
jne
cmp
incl
xor
stos
lret
push
push
sbb
imul
add
in
aas
aad
cmpsb
push
sub
stc
cmp
add
lock
xchg
pop
cli
repz
mov
sbb
bound
sbb
add
decl
inc
and
mov
into
push
decl
sbb
rorb
into
stos
sarb
andl
inc
mov
mov
stos
ljmp
test
jae
ss
xor
jmp
jmp
push
mov
fimuls
xchg
sbb
pop
dec
pusha
jo
mov
pop
stos
mull
mov
popf
lea
cwtl
nop
jbe
scas
addr16
sbb
xor
out
addr16
dec
dec
cmp
push
notb
pop
mov
pushf
xchg
cwtl
cmc
out
nopl
jnp
lock
mov
add
mov
adc
stc
jnp
int3
jl
sub
je
repnz
ss
stos
xor
cmp
ret
loop
icebp
faddl
jp
push
adc
adc
dec
push
imul
imul
mov
bound
inc
inc
push
loope
inc
lcall
push
sub
call
cltd
pop
popf
subb
push
inc
lret
mov
adc
inc
xchg
sbb
push
mov
fdivs
psraw
ss
and
in
jge
or
or
mov
jle
sub
pop
movsl
pop
cli
xor
pop
dec
cld
mov
mov
push
pop
rcrl
and
dec
push
jnp
out
lds
mov
xchg
gs
pop
lods
popf
and
inc
push
push
fcompl
push
inc
cmp
xchg
sub
lods
aam
addr16
pop
stos
subb
in
inc
cs
es
mov
cmc
scas
lret
xchg
jge
insb
xor
mov
sar
adc
js
jb
outsl
cld
pop
mov
movsb
sub
pop
push
lock
mov
notl
loopne
sub
cld
dec
xlat
lret
mov
fimuls
repnz
loope
pop
cmp
lods
xor
mov
push
jns
pop
subl
aam
xchg
stos
sub
mov
cmp
xchg
test
jns
std
lahf
xor
cmpsb
add
loop
rol
aad
cmp
sbb
inc
add
clc
sbb
icebp
xchg
cmp
lret
fstpl
int3
push
outsb
xchg
in
dec
or
inc
xchg
arpl
pusha
xchg
shl
xchg
aas
push
prefetch
xor
sub
mov
mov
outsb
or
jbe
scas
idivb
push
sarl
push
and
pop
jecxz
sub
les
in
mov
mov
rcrb
in
es
std
out
fnstenv
and
std
xor
cmp
adc
push
stos
ljmp
movsb
faddp
jbe
scas
mov
mov
push
int
and
rorb
sbb
sub
mov
popa
das
push
pushf
pop
push
sub
xchg
sbb
insl
nop
or
cmovbe
cmp
xchg
or
fstl
add
outsl
nop
inc
dec
aam
or
and
std
fdiv
jp
add
push
shlb
addb
cmp
stos
pop
loopne
and
and
inc
mov
and
xor
inc
mov
fisubl
push
cwtl
jmp
ds
adc
xchg
xlat
insl
pop
std
cmp
ror
fbstp
iret
lret
cmp
lds
cld
daa
aam
pusha
gs
xor
test
xchg
out
or
push
jmp
lret
icebp
bound
js
mov
out
mov
insl
hlt
xorb
lock
or
sbb
pusha
inc
cmc
sbb
adc
mov
and
sbb
in
cmpsb
orl
cmp
cmp
scas
cmp
sahf
dec
mov
xchg
adc
jno
jb
movsl
cmp
sub
je
mov
insl
or
insl
mov
outsb
add
shlb
or
xor
pop
inc
out
adc
adcb
dec
incb
lret
xor
jns
push
dec
mov
iret
jp
fcomp
xor
jne
repnz
rolb
xchg
out
sub
jg
rol
rcr
insl
fstps
jbe
sbb
loopne
dec
cltd
pop
jno
outsl
mov
or
lods
subb
daa
sbb
test
loope
ficompl
jmp
push
mov
pop
mov
jge
jp
push
ret
sti
lahf
aam
out
pop
sub
and
and
mov
je
scas
pushf
add
scas
std
mov
insl
cmp
jle
push
lahf
cmp
xchg
bnd
aaa
add
add
xchg
fstps
in
leave
cs
dec
mov
sub
or
popf
inc
sahf
jmp
jmp
xchg
dec
shrb
ficomps
sub
loope
push
fucomp
stc
imul
mov
ljmp
incl
xchg
sub
pop
pop
in
out
or
loopne
inc
mov
test
dec
movsb
mov
push
sub
inc
and
mov
stos
sub
adc
xchg
mov
mov
and
call
mov
push
add
mov
fcomi
shrb
add
out
repz
sarb
xchg
inc
scas
mov
arpl
ljmp
ljmp
loope
sub
inc
jecxz
dec
cmp
inc
cmp
lock
shlb
insb
lods
lret
mov
shl
clc
cmc
sahf
mov
enter
insl
in
test
movsl
mov
sti
fdivl
jg
adc
in
xor
sti
sbb
cmc
aas
cs
fildll
sbb
out
lock
dec
xchg
enter
enter
mov
sbb
sbb
and
cwtl
xor
jae
dec
inc
ret
xchg
xchg
lret
jp
lcall
shr
movsl
xchg
dec
shll
xchg
xchg
mov
dec
sbb
xor
jns
les
divl
add
dec
xchg
mov
pop
adc
les
push
pop
sub
addr16
push
cmc
fimuls
dec
or
add
adc
xchg
fdivs
shll
fnstsw
movsl
jmp
mov
in
mov
mov
outsb
adc
mov
mov
fldl
dec
add
shl
das
pushf
aam
mov
mov
jmp
mov
and
jle
sbb
imul
xor
and
movsl
xchg
jb
fucomp
out
cmpsb
dec
xchg
pop
pop
repnz
xor
dec
jae
add
mov
test
loope
lret
sbb
pop
ret
pushf
fsubs
dec
lret
and
loopne
and
out
fdivl
aas
push
mov
out
and
call
lods
jae
rol
inc
data16
rolb
or
je
call
rcrl
push
shl
xchg
mov
adc
outsb
pop
das
jb
outsb
scas
mov
mov
cwtl
int
dec
int
sbb
push
icebp
sub
fdivs
pop
daa
jo
sub
jns
stc
cmp
popf
loope
pop
mov
push
or
rorl
mov
test
add
xor
jne
rorl
negl
cmpsb
nop
sub
sbbb
push
cld
jnp
dec
cs
enter
xor
ljmp
ficoml
push
lea
pop
push
loop
shl
outsb
or
dec
pop
sbb
xchg
and
lahf
pop
sbb
xchg
repz
and
loopne
out
and
sbb
imul
cmp
push
out
lret
cmp
pop
loope
loop
and
leave
lcall
ds
or
imul
dec
lahf
cmp
movsb
mov
sbb
imul
inc
dec
xchg
shrb
pop
push
clc
aad
xchg
jmp
mov
push
loope
je
aam
push
and
ljmp
bound
mov
lahf
ds
adc
outsb
xchg
push
mov
pop
or
int
insb
jle
xor
test
test
ss
mov
jge
loop
xor
outsb
das
shll
inc
fs
fistpll
in
es
mov
ljmp
xchg
xchg
cmpb
imul
pusha
imul
pusha
hlt
mov
pop
int3
dec
jl
roll
mov
pop
cli
lret
insl
enter
push
test
dec
or
dec
dec
ret
retw
incb
sahf
or
mov
lcall
and
pusha
mov
or
sub
mov
out
rcrb
sahf
test
fs
insb
mov
outsl
inc
call
sub
jmp
pop
sbb
daa
pop
pop
push
sbb
add
dec
push
leave
inc
xchg
push
add
int3
addr16
jae
pop
in
adc
addr16
sub
sbb
adc
and
cmp
jmp
pop
inc
push
cltd
adc
xchg
imul
cmpw
shlb
jg
hlt
push
mov
ljmp
loope
push
enter
xor
movsb
sarl
pop
imul
push
jne
movsb
xchg
jo
sbb
push
or
sbb
xor
insb
cmc
push
mov
and
mov
movsl
fs
aam
insl
loope
addb
mov
aaa
and
popf
icebp
addr16
in
sub
jbe
fcoms
push
push
das
mov
mov
adc
inc
push
stc
out
push
mov
lea
in
repnz
std
out
mov
mov
stos
push
jp
and
cmpsl
or
sbbl
cld
inc
pop
pusha
pop
pop
mov
fdiv
cs
stc
cltd
pop
sar
mov
inc
sbb
daa
push
out
xor
push
std
sbb
bound
test
ret
pop
stos
cmp
mov
out
xchg
addb
in
loope
jae
rcrl
imul
mov
or
inc
stc
jmp
fnstcw
xchg
xor
mov
cltd
aam
xchg
inc
iret
scas
xchg
scas
pop
mov
in
adc
data16
loop
in
push
push
aaa
and
xor
ja
cmp
or
in
cmpb
sbb
and
mov
mov
movsb
call
sub
inc
mov
in
fstpl
lds
por
xchg
jmp
xor
orb
adc
aas
jecxz
inc
push
cmp
inc
in
adc
insb
add
pop
fisttpll
pop
das
imul
sub
rol
loopew
dec
dec
adc
mov
mulb
out
mov
xchg
jg
cmp
test
jecxz
scas
push
push
dec
push
and
dec
call
icebp
xchg
jmp
cld
push
jbe
sbb
cmp
push
pop
push
adc
add
inc
xchg
jmp
movsb
test
sahf
xchg
xchg
pop
mov
pop
scas
sub
iret
cmp
shll
or
stos
pop
stc
je
adc
aad
test
in
dec
shlb
sbb
call
mov
insb
xchg
lcall
xchg
in
push
stos
cmp
stos
jg
sbb
xchg
inc
push
inc
cmp
lcall
xor
cli
jns
xchg
push
or
cli
adc
nop
dec
add
lret
notb
mov
lea
fwait
dec
add
mull
xchg
mov
inc
mov
jnp
and
sub
into
adc
pop
in
jne
sub
inc
mov
imul
sub
test
jge
jo
dec
mov
lahf
aam
lea
lret
jmp
out
xor
sbb
push
test
ffree
movsb
add
das
notb
mov
sbb
out
in
pushf
sub
adc
pushf
mov
mov
adc
hlt
xchg
dec
test
sbb
adc
jmp
add
mov
sub
xchg
xchg
vmread
fimull
fcomps
push
sbb
mov
cmp
jle
pusha
sub
cmp
add
cld
add
cmp
rcl
arpl
push
mov
xor
hlt
mov
pop
stos
out
cmp
push
scas
aaa
loope
es
push
aas
shl
stos
insb
repnz
hlt
xor
sub
jmp
mov
js
cmp
mov
loopne
fincstp
xor
rolb
and
cmp
imul
push
adc
fistl
xor
jmp
leave
mov
add
stos
je
or
and
les
pop
hlt
lret
jmp
test
push
and
xlat
sbb
and
in
fstps
inc
or
mov
pop
insb
mov
xchg
sub
and
mov
mov
pop
sbb
sbb
cmp
push
icebp
nop
jne
or
xor
mov
aaa
adc
in
dec
jne
and
jle
mov
jno
push
stos
cmp
dec
sahf
mov
adc
xor
or
pop
and
push
mov
mov
sub
mov
mov
push
mov
sarl
in
push
in
and
push
jb
fprem
pop
and
dec
push
mov
shll
mov
mov
sti
cwtl
push
es
add
shl
not
data16
push
add
ret
int
scas
sarb
divl
xchg
xchg
sbb
add
jne
punpckhwd
test
movl
add
rcrl
sub
clc
lock
sub
mov
leave
pop
test
into
cmp
das
lds
lods
add
jge
idiv
sbb
loop
aad
rorb
int3
mov
movswl
lahf
jno
mov
jns
mov
dec
popa
or
mov
mov
nop
push
jecxz
outsb
mov
pusha
cmp
xchg
pop
inc
sbb
mov
xchg
enter
pop
fnstenv
cmpsl
xchg
xorl
mov
fimuls
nop
rcll
pop
je
dec
ret
fstps
cwtl
xor
pop
subb
mov
sub
jo
push
push
pop
sbb
jae
nop
mov
fcom
and
adc
loopne
sbb
andb
sub
inc
call
loop
mov
stos
jg
add
and
push
cmp
sahf
out
test
call
mov
rol
imul
or
test
xor
mov
xor
or
es
popf
jecxz
mov
push
in
mov
mov
orb
mov
into
imul
clc
clc
adc
sarl
sub
loop
xlat
arpl
cmp
pusha
adc
or
adc
push
sbb
pop
push
pop
call
mov
notb
mul
xchg
test
xor
outsb
jle
and
sbb
je
jecxz
xor
sub
sub
push
adc
ret
ljmp
mulb
add
imul
clc
sub
jmp
jo
jmp
std
ds
xchg
rorb
mov
mov
pop
into
mov
lahf
cmp
sub
jne
lods
xchg
clc
popf
mov
repnz
jge
inc
cmpsb
dec
sbb
mov
cmp
mov
lods
xchg
and
loope
jb
dec
jmp
ss
hlt
iret
jl
incb
outsl
scas
adc
aas
jne
cs
mov
cmpsb
push
dec
mov
mov
mov
out
mov
neg
push
jno
mov
and
push
or
pop
and
or
rol
inc
and
pusha
cmp
fistpl
gs
sub
pop
push
sbb
add
sub
fdiv
pop
mov
add
push
inc
push
cmp
xchg
sbb
cmpsb
movsb
sar
push
lahf
add
scas
cld
test
cwtl
cli
pop
bound
ljmp
icebp
enter
lea
cmp
test
jae
icebp
ret
enter
mov
inc
cmc
es
mov
push
rorl
xor
insl
or
lahf
and
insl
mov
lret
pop
in
outsb
ljmp
push
mov
ja
std
in
push
xor
xchg
sbb
sub
inc
jo
jge
adc
cwtl
jno
pusha
push
mov
imul
out
es
test
cmp
stc
movsl
arpl
adc
outsb
hlt
xchg
sbbb
dec
sarl
pushf
stos
fldcw
mov
cwtl
mov
in
rorb
adc
cmp
bound
inc
xor
jmp
mov
rclb
or
dec
lcall
iret
add
cmp
xchg
jo
fldt
xlat
mov
fimull
jnp
dec
fwait
cld
xor
mov
ret
fadd
sti
lods
pop
lahf
cmp
shll
pop
fdivrl
jno
mov
xchg
jns
dec
cmp
mov
subl
cmpb
jle
xlat
loopne
pop
idiv
stos
jo
pop
outsb
aam
push
mov
inc
fisttps
divb
out
enter
in
pop
mul
sub
mov
lds
loop
leave
push
mov
jae
jne
xor
push
jle
rcrl
leave
insl
cmp
push
push
pop
mov
jge
jnp
pop
sbb
lcall
pusha
mov
test
and
aaa
mov
fdiv
das
and
lcall
repz
inc
lods
push
sbb
dec
pushf
mov
mov
out
cmp
sub
in
and
in
and
sub
mov
push
cli
out
out
jb
xor
mov
test
paddusb
pop
mov
insl
out
push
test
cmp
out
sbb
addr16
mov
dec
fdivs
dec
es
and
and
enter
int3
jp
loope
cmp
adc
pusha
mov
adc
cmp
movsl
fidivrl
inc
pop
xor
scas
sub
adc
sub
cmpsl
and
and
lahf
loopne
lods
mov
inc
jns
jecxz
andb
icebp
jae
data16
pop
imul
push
imul
adc
icebp
cs
add
scas
test
push
imul
adc
dec
shl
mov
sbb
sub
sub
sub
mov
sbbl
out
and
in
sbb
jns
and
fbld
dec
cltd
jne
push
jo
lea
dec
mov
xchg
xor
mov
dec
dec
add
cltd
and
lods
jecxz
insb
ret
cwtl
ja
xlat
aam
adc
cmp
mov
dec
mov
dec
pop
jecxz
std
int3
cmpsb
fidivs
icebp
in
out
cmpsl
into
ds
mov
and
xor
js
movsb
jmp
lret
cmp
and
in
sub
xchg
pop
daa
pushf
fcompl
adc
lahf
mov
cli
or
or
test
ret
mov
jne
jle
push
jecxz
xor
aam
stos
jle
orb
and
add
push
pop
lods
mov
cmpsl
jmp
pop
jmp
dec
hlt
mov
xchg
hlt
mov
mov
xor
dec
add
mov
ficoms
mov
movsl
das
cwtl
hlt
lret
cmp
shll
movsb
in
dec
cmp
icebp
or
adc
xor
lret
xchg
stos
movsb
add
adc
pop
clc
and
dec
and
sbb
test
call
push
pop
adc
stos
in
mov
and
or
cmpsl
mov
dec
jo
xchg
jae
push
pavgb
push
repz
cwtl
dec
out
cwtl
dec
sbb
add
push
std
les
mov
sbb
jno
fildll
lret
scas
jne
ljmp
sbb
nop
int3
dec
and
mov
jns
xchg
push
push
mov
fildl
sub
lock
test
cld
movsb
in
and
stc
inc
cmpsl
int3
test
fcoml
push
adc
das
idivb
mov
rcl
pop
ds
or
in
mov
mov
fistl
js
mov
cmc
les
push
fists
push
sub
push
mov
inc
frstor
mov
or
pop
sub
add
add
xchg
push
outsl
lock
mov
sub
das
inc
daa
mov
dec
cld
and
cmp
pusha
cmp
repz
dec
dec
push
push
xchg
dec
sub
loop
jb
data16
sti
leave
mov
jmp
mov
jns
xchg
fbld
inc
loop
lret
lods
jg
mov
imull
pop
cmp
movsl
sti
stc
dec
gs
add
inc
outsb
jl
js
arpl
testb
add
mov
mov
sbb
pop
out
push
mov
sarb
popa
arpl
js
adc
pop
push
arpl
and
call
call
inc
sbbl
adc
pusha
cmp
pop
jb
add
xor
mov
lea
xchg
shl
out
in
rclb
push
adc
mov
pop
push
mov
pop
sub
popa
aad
xchg
cli
notb
lcall
xor
sub
pop
sbb
fiaddl
outsb
jle
es
mov
xchg
mov
mov
or
out
repnz
mov
dec
mov
or
mov
aam
push
cmc
and
pop
dec
push
jnp
inc
cmc
sub
fxch
repnz
out
out
stos
xor
into
adc
mov
or
imul
lds
adc
jns
sbb
scas
loop
xlat
mov
or
or
divl
leave
mov
xchg
push
sbb
movsl
push
movsl
out
mov
cmpl
adc
sub
adc
leave
mov
dec
push
in
test
lret
jno
sti
pop
fldcw
xchg
test
add
imul
cltd
data16
es
inc
es
ds
stc
xor
scas
dec
popf
scas
fsubl
insb
mov
push
jae
pop
into
iret
xchg
inc
sahf
imul
ja
loopne
mov
mov
xor
sti
dec
adc
daa
fs
inc
jge
subl
shlb
loop
cltd
loope
stos
je
popf
lods
xor
data16
cld
cmp
push
fstps
cmp
xchg
cmp
inc
push
sub
enter
std
out
aad
dec
inc
out
or
inc
dec
fucomp
sub
scas
jne
cmp
pop
mov
or
cli
imul
xchg
aaa
push
sahf
adc
add
hlt
adc
movsb
in
sbb
push
leave
xchg
jb
add
cmc
cmpsb
shrb
sub
mov
jg
leave
fnstenv
mov
fcmovnu
mov
or
in
sbb
push
in
lret
adc
and
aas
outsl
jae
inc
pushf
pop
in
cmpsl
dec
xchg
and
push
clc
fbstp
and
sbb
sarb
xchg
jecxz
pusha
push
imul
jp
push
adc
or
mov
xchg
xlat
sub
pop
xor
into
cmp
in
repz
mov
mov
mov
fistpll
mov
xchg
cmp
pushf
sub
push
clc
pop
push
adc
cwtl
insw
push
push
notl
pop
pop
or
mov
mov
lcall
rorl
and
dec
inc
icebp
hlt
xor
and
dec
pop
shll
push
xchg
imul
pavgw
je
rclb
jns
popf
popf
adc
or
jmp
push
dec
push
mov
mov
xchg
mov
stos
stos
push
lret
stos
arpl
jge
mov
hlt
into
inc
cmp
or
das
scas
push
dec
inc
int3
xchg
cmp
ret
sbb
dec
jmp
jg
outsl
and
xchg
loope
insb
pop
xchg
cli
pop
int3
mov
and
shrl
movsl
jmp
imul
adcl
and
cmpsl
add
aaa
and
and
jmp
cltd
push
push
jbe
mov
loopne
cmp
cltd
sub
or
and
test
xor
inc
addr16
gs
push
outsl
or
loop
push
testb
lahf
push
or
or
mov
push
cmp
push
dec
adc
les
push
mov
fadd
jae
push
fldl
lcall
cmp
in
out
in
mov
jnp
mov
mov
jl
lods
in
jae
sarb
sub
xchg
inc
fcomps
lret
jbe
push
filds
mov
cmp
sbb
pop
mov
and
leave
mov
mov
add
push
jae
sbb
lock
jbe
iret
cmp
sbb
add
xor
call
jbe
add
out
mov
dec
and
sub
movsb
notb
adc
sub
imul
leave
adc
sub
movsl
mov
sub
fwait
xchg
or
clc
cs
jl
or
or
sbb
mov
lods
ds
push
ljmp
dec
in
xchg
sbb
xor
lods
and
stos
les
and
stos
aam
pop
adc
jp
in
aam
ljmp
xchg
mov
sbb
adc
les
push
inc
push
adc
loope
dec
dec
jae
out
dec
icebp
imulb
arpl
jmp
push
push
adc
push
sbbb
loop
je
testl
outsb
pop
sbb
jbe
test
lcall
add
imul
jae
jns
sub
pop
outsb
dec
int3
pop
inc
lds
mov
ss
pop
jmp
aaa
and
lock
cwtl
rolb
dec
cmp
aad
xchg
or
shlb
jbe
mov
mov
sub
push
out
sbb
fdivl
jbe
idiv
xchg
loope
sbb
test
test
test
pop
xchg
jmp
cli
push
xchg
lods
fstpt
icebp
push
push
repz
adc
cli
jecxz
mov
hlt
dec
addr16
push
and
xor
stos
fidivs
pop
movsb
in
mov
sub
push
and
mov
outsl
dec
sbb
outsb
cs
pop
sub
test
sub
and
fwait
es
out
mov
mov
mov
mov
dec
pop
mov
mov
add
fidivrs
aas
xor
pop
jne
jl
out
stc
in
in
push
inc
cmp
mov
jmp
inc
shlb
mov
fistpl
popf
push
pop
mov
or
add
aaa
into
lcall
cli
std
ficompl
adc
es
iret
add
fildl
xchg
jg
xchg
push
mov
push
push
lods
jge
jg
stos
mov
xor
and
xlat
pop
sbb
call
inc
mov
jmp
test
dec
popa
push
repz
xchg
leave
aam
loopne
fcmovnb
jmp
movsb
hlt
lcall
add
pop
popa
mov
push
out
or
add
cli
imul
adcb
pop
pop
jne
dec
inc
movsb
mov
dec
cltd
xchg
push
out
jl
jg
cmp
jmp
ja
sahf
aas
cmp
cmc
testb
mov
imul
inc
xchg
xlat
rcr
mov
lods
mov
imul
xchg
aaa
bound
xchg
bnd
out
adc
test
push
push
shr
jmp
xor
subb
popf
dec
cmpsb
mov
js
mov
cmp
pop
hlt
loopne
shlb
or
cmpsl
xlat
and
sub
inc
xchg
cs
pop
loope
xchg
adc
xchg
xor
incb
clc
test
sbb
add
aas
shll
jmp
xor
push
or
push
sbb
push
sbb
lret
cwtl
add
iret
xor
cwtl
jae
xchg
fptan
pop
and
popf
xlat
mov
mov
add
mov
lock
adcb
push
test
rcrl
adc
or
mov
fmull
mov
push
aas
push
test
mov
test
adc
stc
mov
jnp
jmp
or
xchg
loop
je
sbb
adc
orb
and
ud0
pop
xchg
dec
ret
mov
lods
xor
mov
sub
cmpb
cmp
or
sub
add
pusha
aad
push
push
ds
idivl
jecxz
test
add
jae
jl
xor
dec
lock
mov
ss
bound
int3
cmp
inc
cmpsb
push
dec
pop
loopne
pop
xchg
pop
mov
cmp
hlt
cmp
mov
cmp
xchg
sbb
ss
ja
imul
popa
clc
xlat
ss
imul
repz
inc
jmp
or
jle
mov
jl
divb
out
stos
mov
aad
push
sbb
xor
pop
push
xor
mov
pop
or
mov
mov
dec
hlt
ja
mov
jmp
mov
into
mov
jnp
ds
and
jne
inc
push
dec
mov
mov
sbb
jne,pn
inc
xchg
iret
mov
pop
jbe
xchg
mov
inc
xchg
jb
xchg
jnp
sub
or
cwtl
inc
negl
jge
insb
mov
and
pop
mov
int3
xchg
out
outsb
add
jbe
mov
orb
lret
xlat
xor
push
jl
mov
mov
stos
mov
jle
push
jo
dec
aaa
fnstenv
jne
mov
arpl
sbb
cld
outsl
push
push
test
cld
jge
sbb
mov
push
sub
addl
loopne
and
roll
push
push
arpl
shl
pop
pop
pushf
cltd
push
out
fsubrs
int3
dec
lret
inc
lea
ret
adcb
mov
jle
push
shrb
lds
loope
enter
jmp
sub
jae
mov
dec
mov
aam
cltd
ds
stos
not
cmp
test
dec
dec
sahf
pop
and
pop
int3
jne
cmp
inc
lds
sarb
inc
and
adc
popl
ret
lret
movb
int3
ljmp
imul
pop
inc
outsl
xchg
mov
xor
xor
add
mov
int
bound
leave
pop
mov
fisttps
xor
xchg
sbb
or
jle
lods
mov
out
jg
adc
lods
call
dec
ss
jns
cmp
cmp
movsl
pop
mov
sub
lea
cmp
cli
or
or
cltd
stos
dec
aam
popl
add
or
mov
push
pop
add
repz
mov
rorl
fistpll
aaa
sub
ljmp
roll
inc
cmp
stc
stos
hlt
iret
and
adc
jmp
divl
int
test
imul
std
andb
daa
add
subl
test
sub
cmp
jmp
sub
mov
mov
jle
arpl
cmp
imul
xchg
iret
xchg
es
push
adc
mov
ret
xlat
add
mov
nop
push
popf
pop
ret
aaa
orb
xchg
hlt
pop
jo
push
push
adc
adc
dec
jae
das
or
repz
mov
lods
mov
data16
mov
hlt
and
imul
adc
rcrb
jge
in
pop
dec
push
xchg
xor
fisubs
fs
imul
mov
sub
xchg
sbb
jns
aad
mov
repz
lahf
je
inc
pop
sbb
bound
push
lret
sub
and
mov
int3
roll
cltd
xor
jl
in
aas
fmul
sub
and
jg
dec
leave
aad
mov
sub
xchg
or
mov
pop
aaa
mov
lret
es
pop
pop
pusha
jecxz
jl
imull
addr16
fildl
xchg
stc
popf
or
sbb
les
fsts
loop
iret
or
fs
adc
dec
andl
xlat
mov
int3
jae
test
xor
jnp
pop
icebp
insb
gs
test
subb
cmc
xchg
mov
sub
mov
sub
mov
jg
sub
nop
jle
std
movsb
jl
push
sub
popa
or
loopne
xor
fadd
and
nop
scas
mov
les
mov
jo
ja
imul
mov
mov
fldt
or
sub
test
sbb
mov
push
jno
jg
outsb
mov
adc
jnp
mov
cmpsb
daa
nop
jo
jl
mov
imul
mov
pushf
fcompl
jb
repz
or
mov
push
jnp
inc
ja
pop
js
cmc
xor
sbb
or
add
int3
lds
insb
inc
stc
lret
ljmp
mov
jbe
mov
dec
mov
shr
rcll
stos
and
popf
mov
int
push
leave
adc
adc
pop
out
cmp
jne
jmp
mov
aad
pop
xor
movups
mov
inc
aad
mov
jne
repz
and
pop
or
ret
scas
adc
inc
dec
je
xor
mov
sahf
xlat
and
push
cmp
in
sarb
cmpsb
dec
negb
lahf
adc
pop
subb
lret
push
int
hlt
adc
mov
xchg
sti
fsubs
mov
mov
push
and
and
cli
imul
pop
jbe
xchg
jle
jmp
decb
loope
int
push
push
jno
adc
push
fdivrs
imul
cld
lds
cmpsb
push
rcll
pop
aas
xchg
out
aaa
std
mov
xor
or
bound
inc
cli
imul
mov
lods
call
mov
rcr
out
xor
jge
lcall
or
and
mov
testb
jp
adc
ffree
insb
pop
jecxz
cwtl
stc
std
push
outsb
rcll
pusha
fsubs
add
out
and
jecxz
loopne
cmc
push
push
cwtl
aam
inc
gs
in
lcall
sahf
popa
leave
xchg
int3
jbe
ret
ds
mov
je
cmp
or
int3
sub
out
gs
cmpsb
iret
int3
push
adc
decb
mov
fisttpll
lahf
inc
add
aas
fwait
xor
in
cld
stos
add
xor
dec
add
leave
sti
mov
jg
mov
rcl
stos
data16
or
xchg
ja
out
adc
lock
inc
cli
mov
popa
addl
cmp
dec
push
xor
fdivs
mov
fcomps
dec
ss
stos
mov
jbe
jbe
xor
mov
pop
sti
js
push
add
inc
mov
jecxz
push
imul
cmp
mov
stos
push
pop
push
mulb
mov
mov
sub
lahf
icebp
ret
pop
xor
sbb
fsubrs
test
popf
adc
pushf
cli
lahf
iret
mov
and
aaa
push
push
jns
push
and
in
pop
pop
std
sbb
test
adc
cmp
add
xorb
leave
inc
mov
push
jne
sarb
mov
cli
sbb
inc
add
fidivrl
rcll
or
popa
or
in
aas
push
pop
out
pop
inc
inc
and
sub
push
outsl
aam
mov
mov
adc
adc
push
popf
lea
add
int
ret
jno
fincstp
adc
test
mov
mov
inc
mov
sub
dec
sub
mov
sub
icebp
mov
jmp
mov
adc
inc
jecxz
dec
pushf
cmp
xor
lods
in
movsb
xchg
sub
das
xor
jbe
mov
mov
nop
add
fdiv
pusha
and
mov
cmc
popf
push
rcrl
lret
fimuls
mov
cmc
cmp
dec
ds
and
mov
fstpt
out
dec
mov
or
jne
and
adc
push
xchg
loop
push
mov
cmp
imull
sub
ja
xlat
jne
rol
stos
movsl
inc
fcmovnu
das
cld
sbb
add
lahf
push
lods
xor
int3
lock
out
out
jmp
cmpsb
mov
push
int
inc
jo
cmp
lcall
inc
jecxz
js
in
mov
cs
sbb
sahf
add
loop
ret
fdivrs
cmp
test
and
out
fsubs
idivb
into
sti
sub
je
dec
xchg
ljmp
push
mov
sbb
mov
cmp
movsb
inc
push
pop
add
sahf
push
push
and
sbb
mov
and
xchg
push
jb
iret
push
loope
repnz
sub
jge
test
cmp
int3
mov
inc
dec
pop
xor
add
mov
push
pusha
mov
pop
sbb
call
jo
sbb
and
cmpsl
xchg
mov
ds
jbe
cltd
mov
rorb
sub
sub
enter
push
lea
in
mov
xor
imul
inc
jns
fst
pop
xor
adcl
lcall
cltd
movsb
xor
and
filds
or
jg
add
or
pop
cmp
sti
sbb
cmp
mov
mov
sbb
jae
add
cmp
inc
sbb
and
mov
xrelease
add
mov
cld
or
rolb
cmp
je
xlat
lcall
into
idivb
pushf
ja
and
pop
add
cmp
pop
insb
add
outsb
mov
mov
mov
cmp
inc
aad
addl
pop
cmpsl
cmpsb
and
in
cltd
inc
imul
inc
leave
dec
dec
ret
bound
faddl
push
sub
pop
idivb
adc
data16
cld
jle
daa
xchg
sarb
mov
into
mov
push
jp
int
into
stos
test
push
aad
push
int3
xlat
xchg
pop
sahf
mov
mov
xchg
xchg
xor
pop
das
movsl
cltd
repnz
xor
add
sub
js
inc
xor
sahf
rorb
push
sbb
xchg
mov
addb
scas
mov
mov
lea
lahf
xlat
test
dec
popf
ret
cmp
insl
mov
jge
xchg
inc
mov
fcomps
mov
fwait
arpl
decl
mov
add
bound
ja
sub
orb
in
push
movsl
gs
dec
push
jns
push
dec
loop
mov
pop
inc
xlat
dec
push
sbb
push
cli
push
inc
negl
xor
popa
add
sub
push
test
fsubrs
les
mov
push
jb
mov
dec
sbb
sbb
mov
fsubp
in
pop
fsubrs
icebp
sbb
leave
or
not
mov
and
inc
pop
nop
imul
outsb
pop
xchg
ljmp
ja
fbld
push
mov
adc
jl
mov
mov
loope
mov
or
outsb
fcom
sub
xor
out
and
mov
jmp
push
aad
mov
fnstcw
inc
xchg
xor
xchg
cli
mov
sbb
test
and
nop
clc
sbb
nop
inc
fcomps
lds
mov
cmp
add
das
je
cmp
inc
insb
ds
jecxz
movsb
sub
and
lret
xor
push
fimull
rcl
ds
cs
movsb
lea
push
dec
bswap
dec
scas
mov
leave
pop
xchg
mov
cwtl
popa
jnp
test
jno
xchg
imul
ss
scas
jae
sbb
pop
mov
pop
shll
les
inc
int
jb
jb
inc
cmp
mov
cmpsl
imul
sahf
les
jb
maxps
xchg
push
sahf
push
jns
mov
mov
enter
xchg
mov
cmc
sbb
sbb
sub
jbe
push
xor
test
mov
pushl
adc
xchg
loopne
lods
xchg
scas
out
mov
cwtl
scas
lahf
stos
mov
adc
push
clc
fsubrs
push
mov
outsb
out
fsubs
sbb
pop
mov
shlb
aas
add
imulb
mov
aas
add
and
subl
adc
das
cli
mov
jp
into
and
bound
cmpsl
icebp
pop
out
das
and
fsubs
mov
pop
xor
adc
cmp
pop
jnp
je
pop
movb
cld
mov
or
test
lock
insb
fstpt
mov
push
push
mov
idiv
call
jecxz
push
into
aas
pop
inc
outsl
xchg
cmp
pop
stos
in
stos
and
lea
iret
repz
cmp
lea
pop
ds
aas
inc
adc
imull
cwtl
pop
push
out
imul
or
mov
and
ret
inc
ftst
mov
bound
push
cwtl
pop
jbe
scas
xor
idivb
mov
pop
mov
add
push
cmp
fadd
jae
sub
hlt
jmp
push
inc
sbb
js
lock
xchg
xlat
lahf
js
push
push
in
jnp
xorl
sub
mov
cmp
aad
xlat
lds
jo
xchg
fwait
push
outsb
sub
out
rolb
insl
sahf
scas
jno
push
sarb
enter
mov
hlt
into
cmpsl
jne
hlt
dec
push
jno
pushf
pop
adc
test
jne
int
dec
adc
sahf
push
mov
mov
scas
jo
test
jg
dec
div
push
mov
xor
aad
ljmp
int
sbb
mov
inc
stos
fmuls
cmc
adc
dec
enter
jge
and
bound
outsb
mov
pop
xor
cmpsl
test
xchg
xor
cmpb
mov
sub
push
lods
imul
jge
mov
mov
xchg
fidivrs
xor
pop
push
dec
pop
jnp
add
jp
mov
lret
fwait
sub
pop
xchg
push
je
push
mov
mov
push
cld
lods
shrl
fmull
mov
push
and
stos
jecxz
xor
dec
inc
lahf
cmp
flds
jb
mov
les
mov
sub
push
xor
stos
cli
arpl
xchg
cmpsl
sub
xlat
stos
aad
xchg
sbb
inc
dec
call
hlt
mov
cmpsb
xor
scas
lcall
and
xlat
jae
jmp
sub
xchg
sub
out
in
aam
sub
jmp
inc
mov
lods
jne
dec
sbb
loopne
cmc
xor
inc
and
pop
add
iret
mov
loopne
xchg
int
inc
int
dec
lahf
ljmp
adc
clc
pop
es
push
in
fcmovnbe
js
dec
jg
jo
sarb
hlt
insb
imul
xorl
or
out
in
das
daa
jmp
adc
add
daa
ss
sarb
test
push
aaa
mov
pop
add
jmp
mov
jne
out
jno
cwtl
cmpsl
icebp
push
divb
and
lods
sub
call
movsb
xchg
aas
out
out
into
add
shlb
sub
xchg
or
orb
mov
mov
dec
nop
and
ret
or
cltd
idiv
mov
mov
cmp
add
outsb
mov
jecxz
sbb
add
xor
pop
fsts
push
addb
mov
xchg
jnp
jno
popa
pop
mov
sub
cmpsb
popa
cmp
dec
cmp
aad
push
testl
iret
mov
cmp
adc
leave
test
mov
inc
out
mov
push
and
push
out
xlat
jmp
sub
mov
jle
and
mov
or
ljmp
inc
ljmp
adc
xchg
mov
dec
sbb
push
outsl
pop
mov
js
xchg
lcall
repz
pop
test
insl
adc
xchg
xor
faddp
pop
dec
cmp
movsb
clc
je
mov
add
jbe
test
pop
add
loope
inc
mov
aam
jle
mov
push
add
xor
test
mov
into
insl
jecxz
inc
push
xchg
int
xchg
push
and
insb
gs
fbstp
and
fldenv
adc
and
jo
mov
inc
mov
inc
mov
pop
loope
lea
sbb
rcrb
and
test
push
pop
mov
ret
pop
cmpsl
mov
cmp
inc
ficomps
in
cmp
inc
push
mov
xchg
shrl
inc
lea
xlat
cs
dec
mov
xchg
push
xlat
pop
call
sbb
insl
sbbl
clc
fstpl
push
jmp
mov
mov
dec
movsl
mov
sub
scas
in
mov
shrl
add
pop
and
sbb
adc
pop
jmp
pop
cltd
ret
mov
pop
push
cmpb
push
fbld
shr
divl
jg
or
gs
xchg
pop
dec
push
imulb
xchg
lods
or
dec
pusha
or
in
xorb
jp
adc
mov
dec
das
dec
mov
dec
mov
xchg
pop
addr16
es
and
pop
dec
and
cli
addr16
dec
ja
notb
mov
sti
mov
sbb
andb
add
dec
rorb
loopne
mov
xchg
pop
mov
lea
and
mov
aaa
pop
mov
stos
cltd
mov
xchg
movsb
ficompl
fisttpll
lods
inc
jle
imul
lret
cmpsl
mov
or
jecxz
sti
test
mov
jge
int3
fists
inc
lcall
mov
pusha
lcall
fdivrs
imul
test
inc
add
jecxz
fldenv
push
and
loopne
negb
jecxz
outsb
jle
or
std
jo
xchg
push
aas
jl
cmp
sbb
jge
mov
mov
or
jae
mov
lock
bound
xchg
inc
inc
lods
cmpsl
popf
xchg
xor
mov
iret
jg
mov
push
cmp
jl
xchg
or
stos
xchg
repz
xchg
arpl
mov
test
sbb
ljmp
sbb
xchg
xlat
int3
mov
xor
repz
aaa
nop
je
test
inc
xlat
stc
xor
fildll
xlat
hlt
lds
mov
cwtl
mov
dec
jns
repnz
add
pop
push
push
xor
fsubrl
pop
xchg
mov
xchg
sbb
shl
push
call
leave
nop
adc
int
xchg
xchg
pusha
dec
xlat
inc
ret
xchg
mov
pop
cmp
xor
aam
rolb
into
cmp
or
popf
mov
dec
push
int
or
mov
and
jnp
and
sub
mov
sbb
push
lock
je
push
mov
in
sbb
cmpsb
add
and
cmp
lods
bound
jl
mov
test
sbb
inc
inc
shll
movsl
aad
andb
inc
xchg
shlb
push
mov
mov
repnz
inc
jns
mov
cmp
mov
fsincos
in
mov
xchg
sti
mov
lds
pop
pop
pushl
push
rcrl
sub
cwtl
iret
jl
dec
adc
or
dec
das
pop
mov
jbe
adc
fs
out
out
loope
ljmp
lahf
xchg
jae
adc
pop
test
pop
rorb
jle
cmp
cmc
mov
into
stos
add
imul
faddl
lcall
mov
xchg
cmp
addr16
in
pop
pusha
dec
and
mov
jecxz
add
cmp
add
stc
push
ror
fwait
xlat
outsl
test
dec
jmp
movsl
test
call
out
pop
dec
mov
int3
sub
daa
dec
lds
adc
mov
lea
cs
popf
fisubl
and
sbb
sub
out
sahf
jg
xor
dec
insl
jne
or
popf
jno
pop
popf
jp
gs
lods
xchg
arpl
adc
test
das
sub
sub
xchg
ljmp
test
out
push
icebp
sub
push
mov
cmp
sbb
scas
lahf
movsl
mov
addr16
rcr
cwtl
sbb
jge
mov
jp
call
ljmp
call
xchg
movsb
push
dec
dec
mov
mov
mov
dec
xor
outsl
pusha
xor
push
test
mov
outsl
jns
jg
dec
inc
xor
pop
jecxz
out
sbb
loope
test
imul
pop
shrl
imul
inc
decl
test
jno
and
fs
inc
jb
xor
push
jle
cld
push
add
stc
lcall
in
mov
and
inc
mov
xchg
sub
hlt
fucomip
cmpsb
sti
sub
push
test
jbe
loopne
mov
cli
xchg
test
mov
mov
rolb
add
roll
jo
enter
in
or
pop
jle
jns
push
cmp
out
out
popl
es
xchg
push
lcall
negb
lock
mov
or
aad
and
cmpsb
imul
ret
nop
mov
rcll
ja
loopew
mov
adcl
pop
cmpsl
jae
sub
pop
aas
stos
sahf
aas
lods
push
inc
sbb
dec
ret
fisttpll
addb
and
xchg
ds
ret
pop
cmc
test
xlat
inc
in
lahf
jmp
sbb
pop
in
fbld
roll
push
mov
rorl
pop
pop
push
and
adc
fbstp
adc
fs
in
movsl
insb
dec
sbb
shlb
mov
dec
xor
jmp
xor
test
dec
idivl
mov
sbb
insl
incl
aaa
popa
dec
mov
scas
cmp
shll
sub
xchg
fwait
dec
push
push
or
and
test
push
in
jo
or
or
mov
push
or
imul
or
jb
aam
scas
mov
jl
cmp
pop
int
lret
lret
or
cmpsl
xorb
bound
addl
add
push
mov
lds
pushf
xchg
ljmp
xchg
and
xor
xor
xchg
shrl
or
call
xor
and
jmp
idiv
ja
push
mov
lret
imul
mov
add
xchg
sar
mov
jbe
das
out
hlt
xchg
jno
or
xchg
mov
dec
add
push
sub
push
nop
test
jmp
sub
or
mov
pushl
insb
arpl
fadds
cmpb
jne
mov
js
inc
jns
dec
imul
xchg
pop
call
pop
mov
sbb
iret
fadds
pop
sub
cld
pop
mov
mov
in
lods
aam
pop
nop
testb
inc
sti
inc
das
inc
cmp
xor
dec
inc
insb
add
or
push
stos
lahf
fisubrs
and
sbb
push
cmpl
sarl
addb
jge
fnsave
mov
cmp
push
xor
je
stos
mov
push
adc
cli
inc
test
mov
mov
test
call
cmp
sarl
mov
jae
lret
icebp
xchg
inc
sbb
in
and
addb
pop
lret
pop
pop
or
or
rclb
lcall
stos
adc
sti
inc
xchg
mov
mov
adc
test
push
xorl
pop
stc
movsb
cmp
add
dec
mov
sbb
ljmp
sub
mov
test
xchg
mov
rcrb
imul
jnp
jecxz
sbbb
pop
mov
mov
sub
subl
lret
pop
pop
cmp
cmpl
mov
inc
mov
cwtl
sbb
xlat
push
fiaddl
mov
sar
scas
decb
es
and
adc
lock
or
out
call
sub
cs
inc
push
adc
cmp
cmp
push
mov
add
add
add
lods
fcmovbe
and
sti
mov
mov
inc
mov
xor
enter
dec
fs
mov
mov
inc
imul
enter
jb
cmp
mov
int
pop
test
sahf
lods
push
pop
push
pushf
roll
cmpsl
jbe
aas
jnp
push
inc
pop
shrl
jl
call
ret
test
mov
inc
gs
mov
fcompl
inc
popa
jmp
dec
or
nop
test
stos
mov
push
outsl
xor
push
outsl
mov
mov
inc
lods
outsb
cli
dec
nop
imull
pop
loop
aad
mov
add
outsb
popa
pop
lret
mov
stos
in
out
sbbl
arpl
mov
mov
mov
test
fwait
push
adc
ss
negl
mov
lret
outsl
fwait
xchg
add
gs
jge
into
iret
in
js
inc
inc
sub
and
cmp
and
mov
pushf
or
movsl
jbe
bnd
fmull
jbe
cmp
mov
ljmp
cmc
sahf
and
pushf
xchg
xor
cwtl
cs
pushl
lret
dec
jp
or
sbbl
ljmp
jle
mov
sbb
ficoms
xchg
and
pop
fcompl
push
jb
insb
je
mov
imul
pusha
push
or
imul
js
xor
mov
fwait
cmp
enter
mov
cmp
dec
push
sbb
push
xchg
lods
scas
lods
les
rcr
mov
sub
cmp
pop
inc
jbe
dec
cld
or
mov
jg
clc
popa
xor
inc
addr16
and
mov
mov
out
ret
jns
push
in
jae
ficompl
cmp
dec
push
aas
je
outsb
insb
cmp
loop
push
push
jno
sbb
negl
popf
mov
std
adc
inc
in
lahf
dec
mov
sbb
push
sbb
mov
aas
pop
mov
addr16
xchg
jmp
dec
or
popf
pop
test
add
jbe
scas
dec
adc
leave
imul
xor
aam
jge
xchg
outsb
adc
add
xor
jg
sub
push
add
or
and
shll
mov
sub
pop
mov
xchg
pop
ss
ffree
movsl
fsubl
jae
push
or
inc
push
add
movsl
aam
fstl
roll
and
data16
adc
lods
ret
sub
push
push
sbb
test
xor
pop
jno
xor
popa
or
in
cli
lds
jmp
lret
sahf
sti
sti
les
out
jg
and
lcall
in
aam
cmpsb
mov
repnz
push
fwait
mov
fdivrl
push
and
push
inc
rclb
mov
hlt
fisubrs
push
shlb
cmp
idivl
jnp
mov
psubusw
mov
mov
dec
add
dec
nop
add
les
and
mov
push
xchg
pop
scas
ffreep
mov
sub
aas
add
es
negb
pushf
push
mov
imul
mov
inc
and
insb
jecxz
movsl
mov
add
dec
rorl
mov
fiaddl
and
push
sub
push
push
int3
dec
mov
test
dec
sub
sahf
movsb
inc
pop
andb
in
jo
pop
enter
pop
or
shlb
jle
xchg
lahf
shrl
add
sub
adc
popa
pop
push
pop
stc
pusha
sbb
lret
cs
aaa
scas
lea
inc
std
lods
rcr
adc
lock
imul
mov
popf
pushf
aam
fidivs
mov
loopne
xchg
je
das
inc
repnz
mov
arpl
or
pop
sbb
mov
rorl
lods
mulb
pop
scas
js
sahf
shrl
push
nop
nop
js
sbb
cli
and
imul
inc
gs
and
jg
in
fnstenv
idivb
pop
ror
adc
into
ja
inc
xchg
roll
js
mov
sbb
sti
clc
mov
cmpsb
imul
outsb
cwtl
scas
notb
xchg
jb
fisubl
sbb
adc
sti
mov
addr16
push
or
testb
adc
cmp
inc
pop
ss
pop
xor
push
push
sbb
popa
rclb
ret
jb
in
jl
iret
adc
test
cmp
andl
out
xor
jge
test
mov
sub
and
pushf
push
push
mov
mov
in
mov
es
jnp
sub
inc
test
cmc
push
loop
out
repz
or
cmc
sbb
shll
or
mov
push
mov
mov
adc
mov
and
jnp
jge
fcomps
je
inc
xchg
add
dec
mov
sahf
xlat
jns
enter
push
inc
imul
or
mov
shrb
jnp
jg
into
lahf
clc
negl
jne
jbe
mov
lds
push
xor
insl
inc
lods
mov
ss
sbb
inc
js
pop
push
pop
adc
inc
push
pushf
sti
jl
aad
xchg
push
xor
shrl
xchg
rcr
pop
jle
cmp
outsl
push
aaa
and
enter
loopne
fcoms
dec
fldcw
and
mov
das
fisttpl
and
test
inc
sub
mov
loopne
lret
fiadds
lret
mov
mov
stc
hlt
sahf
int
fcoml
dec
inc
sub
into
daa
push
mov
inc
neg
lahf
shll
ret
push
xor
popf
lods
sbb
incl
ljmp
adc
mov
fmuls
or
adc
jle,pn
testl
adc
mov
orb
test
jb
test
and
jns
repnz
sbb
and
mov
rcl
or
push
cmc
push
push
aad
jg
cmpsb
repnz
cmp
pop
ds
mov
push
movsl
xchg
xchg
jb
inc
cli
mov
sti
or
inc
sbb
and
fldcw
or
fnsetpm(287
sbb
call
xchg
dec
and
cmp
or
call
pop
cld
ror
cwtl
rorl
lcall
int3
mov
roll
xchg
stos
pop
sbb
test
int3
jl
adc
and
insl
scas
pop
add
push
rcrb
ja
push
enter
outsl
fiadds
jns
or
pop
dec
scas
pop
or
imul
cmp
inc
and
or
pop
movsl
cmp
push
lock
lret
bound
ljmp
push
inc
clc
fcompl
xchg
shrl
or
mov
gs
lea
enter
pushl
inc
pusha
sbb
lahf
lock
and
jo,pn
push
ficoml
sub
mov
fdivs
jb
test
push
mov
or
jp
mov
push
jecxz
and
sub
mov
mov
xchg
insb
xchg
sub
push
mov
cs
loop
push
stos
test
sti
inc
mov
arpl
jnp
bound
in
push
and
push
or
ss
out
inc
fisubl
push
xor
mov
add
adc
negl
mov
lds
aam
push
push
or
xor
dec
cmc
int
repz
mov
cmp
aaa
stc
popa
mov
das
xor
aad
stos
in
lahf
fwait
popa
stc
out
pop
lds
pop
jne
subb
lcall
adc
std
fbstp
stos
inc
lods
sub
sbb
shl
sbb
adc
xor
aam
adc
sub
pushl
adc
fldt
frstor
lahf
out
arpl
js
pop
mov
or
adc
fs
sti
lahf
mov
adc
jecxz
rcrb
subb
out
fisubs
pop
ud2
add
fwait
dec
les
sahf
repz
imul
mov
xlat
push
stc
and
stos
mov
bnd
xchg
orl
jl
adc
and
arpl
fnstcw
xchg
or
out
loope
and
jbe
sbb
out
or
lea
shlb
sub
push
pop
mov
jge
push
stos
mov
mov
pop
dec
dec
xchg
div
lahf
push
scas
cmp
push
dec
jle
aad
sarl
hlt
mov
sbb
dec
mov
xor
xor
adc
std
pusha
out
sahf
inc
xchg
movsb
push
pop
mov
xor
lcall
dec
insl
lcall
notb
adc
ljmp
sbb
into
shrl
clc
jae
jp
dec
or
xchg
jns
sub
mov
aaa
add
mov
cmp
insl
mov
xorl
divb
cmp
dec
dec
loop
mov
xchg
jge
sub
inc
xor
mov
repz
and
mov
mov
out
sarb
cmp
es
sti
mov
jae
jmp
push
push
sub
pop
add
hlt
vpunpcklwd
push
in
push
jno
cmc
int
loopne
add
and
hlt
push
cmc
xor
fnstsw
jl
pusha
iret
inc
mov
xchg
xchg
xor
mov
paddusw
sahf
orb
stos
jge
sahf
addr16
mov
adc
scas
sbbb
orl
add
pop
inc
sbb
sbb
xchg
fcmovnb
mov
mov
bound
mov
mov
ja
repz
xchg
xor
ds
ljmp
addr16
push
add
adc
jb
add
int3
repnz
pop
test
fdivl
inc
mov
mov
rol
jae
jge
dec
or
fsts
mov
mov
cmp
xor
icebp
xchg
fisubrs
test
dec
es
popf
stos
test
ret
shrl
mov
mov
insl
or
pop
cmc
inc
fdivs
cmp
sub
mov
aam
mov
and
insl
add
push
aas
xchg
xchg
jnp
jmp
rolb
into
ss
das
stos
pop
jbe
shrb
mov
xchg
outsl
imul
inc
mov
arpl
scas
xchg
repz
cmp
mov
add
xor
add
add
loop
fstp
and
jb
and
push
cmp
sbbb
cli
push
mov
pushw
push
adc
mov
loopne
cmp
sub
pop
xor
sub
or
adc
or
pusha
stos
mov
outsl
jns
loope
pop
xchg
mov
mov
sub
xchg
addr16
jno
adc
mov
test
pusha
leave
mov
xchg
jo
out
filds
je
dec
sahf
push
std
push
cmp
mov
leave
imul
hlt
loope
xor
dec
add
jmp
rolb
mov
fisubl
popa
sbb
imul
xchg
mov
in
cwtl
pop
cwtl
jg
push
push
inc
xor
push
es
pop
mov
mov
mov
mov
popa
inc
imul
mov
stos
popa
lret
or
data16
movswl
scas
in
dec
mov
lret
fmuls
mov
ret
sbb
add
jne
add
lahf
inc
test
or
mov
xor
rolb
mov
pop
addps
and
orb
out
lahf
decl
mov
fs
enter
jmp
mov
popf
fs
das
add
out
mov
inc
pop
popa
dec
or
mov
inc
jb
cmc
jge
ljmp
sub
or
cmp
nop
sbb
pop
inc
or
inc
in
cmp
fs
scas
push
dec
pop
push
fxtract
sahf
add
test
arpl
sahf
push
inc
or
jmp
pop
xlat
pusha
pop
xor
xchg
dec
test
cltd
cmpsb
sbb
lock
inc
nop
xchg
inc
iret
jl
push
jle
xor
frstor
test
insb
inc
cmp
lahf
or
mov
dec
imull
mov
aaa
pop
notl
add
sti
xor
add
mov
cwtl
sbb
and
dec
outsl
and
and
hlt
movsb
mov
adc
fcomps
imul
enter
out
xchg
push
pushf
inc
cwtl
jp
mov
jecxz
call
aad
cmp
imul
cmp
cmp
scas
addr16
jecxz
cmp
fs
lods
test
sti
sub
push
subl
rclb
mov
push
test
inc
enter
sbb
pop
icebp
pop
dec
std
out
xrelease
cmpl
iret
mov
mov
fdivl
sub
push
xor
rcrl
add
fiaddl
lds
pop
xlat
andb
movsb
mov
cld
inc
mov
xor
cld
ja
jp
lods
insl
add
pop
inc
mov
jmp
jp
loope
rcrl
push
xchg
push
push
fsubp
dec
movsl
pop
mov
xchg
or
xchg
xor
jbe
cmp
scas
loope
pop
icebp
mov
test
cmpb
rclb
push
dec
cmp
jb,pn
push
es
in
nop
xlat
cs
fnsave
mov
lcall
clc
stos
or
imul
movsb
int
imulb
lret
idivl
fnstsw
lcall
xor
cmp
dec
mov
les
iret
pop
insb
sahf
jp
inc
lret
leave
lahf
stos
add
mov
add
sub
mov
orb
pop
push
and
sbb
test
dec
xchg
pop
cs
lods
nop
inc
ret
sub
xor
xchg
stc
popfw
arpl
jae
das
sbb
aas
insb
in
insb
lea
adc
cmpsl
pop
loopne
ret
sbb
sti
and
flds
cmp
ljmp
test
or
jecxz
push
sub
jg
or
mov
inc
in
mov
mov
mov
imulb
mov
lock
clc
push
adc
scas
lds
cmpl
pop
jp
jle
cmpl
xchg
lds
push
ret
jns
mov
loope
dec
mov
cmp
push
pushf
push
push
out
cmp
movsb
xor
jb
and
add
cmp
enter
push
outsl
lock
sti
stos
ljmp
mull
and
push
push
xchg
lret
cmp
repz
inc
iret
pop
mov
inc
icebp
popa
rcll
push
jb
mov
data16
xchg
push
cmc
aaa
lret
or
sub
sbb
ds
cmp
or
sub
mov
stos
jmp
inc
cmpsl
cwtl
cmp
cmc
icebp
jno
gs
push
sahf
in
sti
das
int
jmp
jl
inc
or
bound
xchg
inc
pop
sub
test
or
or
xor
mov
jle
stc
adc
incb
mov
aad
fwait
sub
pop
jecxz
cmp
push
sbb
sbb
in
data16
xor
pop
mov
jno
outsb
jb
pop
pop
mov
mov
adc
or
pushf
sbb
out
sbb
scas
adc
add
bound
shlb
mov
and
leave
adc
mov
mov
stos
repnz
in
mov
movsl
lods
shrl
fnstcw
ds
cmp
lret
pop
sub
lock
jae
insl
insb
pop
push
add
xor
sti
iret
dec
mov
out
pop
inc
out
cmp
pop
add
xor
xchg
xchg
stos
lret
mov
test
xchg
push
xor
inc
pop
inc
adc
cmpl
shlb
jno
les
pop
cmp
mov
sub
sub
push
jbe
jecxz
repnz
push
mov
cli
inc
dec
adc
cli
push
test
movzwl
out
insl
and
jae
std
arpl
shrl
push
pop
gs
or
jns
adc
push
data16
xchg
stc
mov
inc
jmp
cmp
nop
push
jnp,pn
int
and
xchg
adc
jns
xor
adc
push
pop
pop
adc
xor
ja
cmpb
jge
sbb
scas
jg
imul
mov
lret
push
loopne
daa
jne
inc
mov
ret
gs
cmp
pop
and
inc
pop
repz
push
cmp
cld
pop
inc
pop
xor
cs
push
loopne
ret
xor
ret
int3
pop
fistpl
add
movsl
mov
ret
ret
push
mov
das
mov
aaa
adc
sbb
ljmp
scas
imul
js
rcr
sbb
xchg
xchg
mov
dec
or
aam
sbb
mov
stos
push
jg
shll
shrb
cltd
inc
inc
nop
lahf
jge
add
gs
stos
ss
pop
sub
pop
es
jbe
lock
imul
sbb
mov
mov
pop
sbb
sub
inc
sub
jl
icebp
adc
repnz
rcrl
adc
dec
or
push
lret
jbe
xchg
xor
repnz
jb
jns
outsl
sar
out
jg
outsb
add
xchg
nop
push
push
dec
roll
sub
xchg
push
mov
jle
or
insl
xchg
pop
fmull
cld
push
cmp
es
xor
jae
loop
ret
idivl
imul
mov
jo
mov
adc
and
inc
pop
cmp
or
ljmp
cli
push
imul
loope
repz
repz
sub
push
test
lcall
ljmp
rcr
xchg
mov
jmp
add
or
xchg
nop
rorb
pop
imul
mov
jle
push
sbb
pop
stos
jnp
mov
add
pop
mov
inc
out
pop
jle
inc
loope
jmp
adc
pop
lds
fwait
pop
sbb
jp
ret
in
rcr
add
ret
adcb
cmp
repz
adc
dec
inc
je
stc
rcrb
inc
and
cmp
inc
loope
hlt
rcl
jns
movsb
sbb
mov
add
jle
in
addr16
mov
dec
fsubs
je
ds
push
sti
loopne
scas
out
sbb
inc
add
xlat
and
lods
cwtl
xchg
mov
jns
pusha
xor
filds
mov
inc
movsl
pushf
jl
add
pop
gs
adc
push
jle
cltd
jnp
jmp
cmpsb
jge
mov
dec
xchg
add
mov
xchg
dec
inc
pop
cltd
sbb
dec
icebp
mov
pop
int3
hlt
aas
mov
mov
dec
shrb
xlat
inc
sbb
push
movsb
cwtl
pop
xchg
sub
test
cli
push
iret
sti
sub
mov
xlat
sbb
ljmp
movsl
fsubrl
xchg
xchg
cmp
sub
mov
test
add
mov
fisubrl
aad
jecxz
lret
les
aas
mov
adc
inc
add
test
mov
test
dec
repnz
pop
jne
mov
jnp
rolb
nop
cs
xor
sub
xor
sub
dec
cmpsl
or
pop
shl
inc
push
into
fidivl
test
xchg
ss
and
xchg
icebp
xchg
daa
js
cli
inc
adc
in
nop
loopne
fiadds
or
add
inc
push
jbe
inc
mov
mov
jae
imul
mov
cld
insb
inc
cmpl
test
mov
sti
pop
popf
cmp
push
movsb
add
add
cltd
mov
push
or
mov
pop
cmpl
ljmp
imull
fwait
inc
dec
ret
test
mov
cmpsl
les
push
jmp
enter
dec
loope
cld
dec
cltd
lcall
mov
sbb
sti
je
test
addr16
or
rorb
mov
sub
repz
lods
jmp
jne
nop
clc
mov
inc
jno
add
cmp
inc
push
xchg
dec
pop
test
test
loopne
leave
stc
xchg
push
xchg
pushf
mov
mov
jnp
sbb
xchg
in
les
bound
cmp
nop
mov
push
or
xchg
subb
in
je
push
mov
lock
fnstcw
in
dec
daa
sub
mov
repnz
mov
mov
push
mov
xchg
jg
bound
pop
lahf
fidivs
jmp
pop
xchg
aas
call
popa
and
jnp
aam
push
leave
fwait
test
lods
jae
or
dec
sbb
jno
inc
insl
in
sti
imul
outsb
jle
or
aad
cmp
pop
sub
enter
repnz
adc
inc
mov
xchg
in
jl
out
jecxz
mov
xor
aaa
xchg
push
movsl
ret
and
add
push
xor
icebp
sub
je
mov
or
sbb
dec
jno
cld
sub
test
sub
sub
sahf
aas
sbb
mov
or
sub
in
jecxz
fsubs
imull
jg
insl
sub
popf
xor
add
or
iret
dec
in
mov
ljmp
js
adc
dec
mov
arpl
mov
xchg
mov
jecxz
ret
out
mov
mov
je
inc
stc
pop
jb
push
addb
lcall
notl
cmp
mov
test
lahf
or
pop
sbb
les
frstor
adc
xor
hlt
fcomi
or
sub
cmpsb
xchg
aas
mov
jno
pop
shll
addl
inc
ljmp
pusha
es
push
or
or
lea
mov
iret
push
incl
into
xchg
lret
enter
or
and
xor
xlat
test
adc
bound
es
and
dec
repnz
jmp
js
mov
push
mov
repnz
adc
nop
lods
mov
sbb
pop
fwait
add
jbe
into
scas
dec
shll
insl
add
pop
jecxz
cli
xor
and
fs
xor
ja
fwait
stc
pop
cmpsb
adc
mov
leave
call
and
loop
fadd
mov
fidivrs
bound
pop
pop
jmp
iret
rcrl
mov
mov
pop
mov
iret
shl
add
adc
mov
data16
test
addr16
int
and
inc
or
aas
int
sub
xor
or
shl
inc
sahf
addb
mov
inc
cltd
imulb
or
js
dec
jle
jns
mov
aad
pop
mov
push
jg
xchg
movsb
lods
orb
es
outsl
and
dec
pop
xchg
mov
outsl
xchg
and
je
scas
push
insb
and
push
insb
dec
aam
inc
cmpsb
pop
mov
jno
scas
mov
mov
mov
or
or
jno
push
lcall
fucom
push
inc
mov
mov
sub
mov
xor
push
mov
fisttpll
stc
jp
jae
cli
ret
jns
xchg
jg
pushf
lea
dec
jmp
call
cmp
jno
jmp
outsl
sbb
xor
fcompl
pop
es
inc
mov
mov
xor
repz
push
faddl
inc
jo
cltd
das
in
test
insb
sbb
xchg
adc
test
pop
xchg
or
add
out
in
mov
cmpb
pop
outsb
test
xor
add
call
test
cs
add
cmc
jae
xchg
enter
xchg
test
push
sbb
jg
add
push
fbstp
out
popa
cli
adc
addr16
stos
jno
mov
jp
or
ds
push
sub
bound
xor
adc
pop
xor
add
test
and
push
jb
lahf
stos
nop
cli
dec
cmp
sub
pop
mov
cld
sub
sbb
lret
add
xchg
inc
shll
cmp
lods
iret
popa
loope
adc
ss
or
out
movsb
fs
inc
rcrl
add
lods
or
dec
add
repnz
sti
test
mov
push
jb
call
outsl
leave
scas
adc
inc
add
sbb
pop
mov
sub
xor
adc
sbb
mov
shl
imul
and
test
aaa
mov
inc
dec
push
adc
cmc
inc
and
adc
sbb
jne
aam
test
mov
push
orl
stos
movsb
sub
ja
inc
cmp
loope
ds
sbb
pop
js
aam
dec
xchg
test
xchg
pop
arpl
mov
addr16
mov
arpl
std
popf
inc
cmc
jl
mov
add
hlt
xor
pop
sbb
dec
add
fwait
call
sbb
jno
loope
xchg
sub
mov
cmp
faddp
cli
add
mov
lret
fs
and
or
cmc
adcl
enter
xchg
ljmp
sbb
es
lods
das
pusha
stc
cmp
xor
dec
dec
dec
data16
dec
in
add
cmp
jp
test
fisttpll
adc
jge
jp
jg
cli
test
add
or
cmpsb
dec
fwait
jg
adc
insl
xchg
fisttps
shll
js
jge
sarb
pop
test
push
push
pop
outsb
jle
loop
dec
xchg
insl
add
rcrb
xchg
mov
in
cmp
sahf
cmpsl
or
sbb
out
bound
mov
xchg
jae
repnz
jns
push
add
push
sbb
mov
mov
in
pop
add
imul
mov
addr16
pop
mov
loopne
jb
adc
xor
mov
adc
push
cmp
in
cmpsl
inc
lret
cmpsl
push
data16
pop
out
mov
and
scas
jg
pop
lret
stos
sub
push
and
icebp
ja
adc
adcl
sub
push
lcall
sub
inc
jmp
jg
xchg
push
mov
rol
cwtl
fisubl
jg
mov
push
pop
in
hlt
or
sbbl
or
push
push
mov
sub
push
lahf
and
cmp
hlt
sahf
out
xor
pop
cmp
popf
aam
adc
or
xchg
js
push
call
test
ljmp
call
xchg
je
mov
and
je
enter
fidivrs
dec
and
orb
push
dec
movsb
add
xor
out
mov
adc
pop
or
cmpsl
hlt
addr16
jns
pop
jge
pop
loop
dec
inc
clc
xor
enter
jns
jae
out
rol
cmpsb
or
push
sbb
jnp
xchg
popa
fdivs
and
add
push
pop
popf
test
lock
pop
xchg
hlt
xchg
dec
faddp
out
pop
test
test
in
js
jge
adc
dec
sub
cmp
inc
jg
lods
adc
pop
in
fbld
idiv
pop
mov
pushf
test
fstpt
add
push
inc
mov
adc
push
xchg
push
dec
dec
movsl
pusha
jl
add
push
daa
mov
inc
cli
mov
inc
clc
fistl
outsb
pop
cmp
fisubs
lret
ljmp
mov
in
inc
in
js
ret
dec
push
sub
lods
test
bound
inc
dec
int3
lea
punpckhwd
shl
nop
in
and
cmp
sub
loopne
lods
testb
sub
mov
push
cmp
adc
sbb
inc
inc
out
jp
sbb
pusha
or
push
sti
xchg
popa
push
add
adc
insb
out
jl
clc
pop
dec
rcll
pop
testb
pop
or
mov
test
enter
fisttpl
subb
inc
mov
or
jg
aas
or
or
mulb
popf
pop
or
push
in
ljmp
insb
cld
cmp
mov
add
imul
nop
xor
mov
xor
xor
out
push
mov
mov
imul
inc
adc
pop
test
sub
dec
mov
fsubp
add
test
jns
push
or
inc
lret
bound
sub
mov
inc
push
scas
out
or
push
jmp
sbb
call
aad
sub
pop
das
ljmp
sbbb
jge
insl
fisubl
pop
adc
incb
or
sbbb
or
mov
mov
and
rolb
and
inc
stc
jae
pop
dec
or
ficoml
jbe
add
out
test
aas
mov
jmp
in
lret
fs
pop
sbb
or
pop
pop
call
je
or
and
push
jecxz
sub
xchg
fcmovu
or
xor
lods
add
aas
addr16
or
sub
jge
lods
mov
push
pop
stos
sahf
push
xchg
add
cmp
add
imul
out
jnp
add
andb
pop
aas
scas
mov
std
daa
loope
arpl
mov
jp
cmpsl
or
xor
nop
sub
add
mov
data16
push
in
pop
and
mov
inc
repz
ror
mov
or
pop
and
dec
outsl
inc
int
daa
and
insl
adc
out
mov
inc
push
mov
fisubrl
sbb
iret
jl
jbe
xchg
orl
add
xlat
xlat
cmp
sti
arpl
adc
sbb
test
xchg
insb
mov
rolb
push
loopne
push
xchg
inc
dec
jg
sub
int3
xor
clc
push
lods
in
add
mov
adc
scas
ljmp
adc
aam
add
mov
lret
xchg
pop
push
call
xchg
ds
pop
mov
lahf
jo
push
es
out
rcl
and
insb
mov
dec
sahf
shll
icebp
and
std
or
mul
xlat
in
inc
ret
pushf
mov
cmp
lds
fs
enter
mov
aas
es
aaa
aad
push
mov
adc
repz
and
xchg
dec
scas
jb
xor
ret
push
cmp
imul
fldcw
dec
mov
sahf
icebp
fidivl
movsw
test
dec
jge
pop
pop
pop
pop
jns
jae
insb
aad
mov
xchg
push
push
mov
lods
cli
inc
mov
sub
cmp
dec
in
ret
mov
jne
xor
outsl
or
mov
jbe
cmp
imul
incb
jl
cmpsl
pop
pusha
stos
lahf
xchg
cmp
xchg
loopne
es
xlat
inc
daa
in
les
stc
sbb
mov
cmp
jmp
push
and
lods
pop
xor
fwait
cmp
sub
insl
or
lods
mov
inc
push
cmp
pop
ljmp
xchg
pop
imul
pop
das
sub
scas
xchg
lret
mov
pop
or
repz
imul
adc
push
xlat
mov
xor
rorl
pop
push
fs
fmuls
cmp
pop
hlt
dec
popa
sub
pop
push
add
sub
mov
pop
xchg
mov
pushf
push
xor
jno
push
xor
push
and
aaa
pop
test
scas
xchg
ljmp
rolb
dec
dec
xor
pop
lea
arpl
pop
pop
mov
lea
push
int
jo
testb
mov
add
popf
fldlg2
jnp
push
movsb
mov
out
inc
lahf
cld
stos
dec
mov
inc
pop
mov
js
pop
push
xor
adc
icebp
sbb
jno
arpl
mov
mov
adc
xor
mov
dec
sub
ss
das
or
cmp
orb
mov
ja
push
hlt
aad
push
adc
stc
js
xchg
and
ret
iret
outsb
loopne
pusha
js
js
sbb
lret
scas
jl
iret
ret
into
test
jmp
aaa
pop
pusha
and
inc
pushf
push
out
mov
aad
bound
xchg
lock
push
fisubs
mov
pop
xchg
pop
les
fidivs
sub
sub
int
xlat
jae
pop
xchg
rolb
je
pop
out
or
dec
xchg
mov
cld
lock
arpl
jmp
adc
aad
int3
cmp
test
pop
xchg
adc
and
push
mov
gs
rcl
cltd
pop
and
pop
ljmp
lock
mov
sub
inc
push
push
scas
sub
sahf
sub
insl
mov
mov
inc
xchg
pop
xchg
jmp
outsl
fwait
dec
mov
into
clc
jp
pushl
int
mov
idivb
roll
mov
push
jo
mov
lods
adc
cmpxchg
inc
sbb
mull
dec
or
add
dec
lods
xor
lods
loope
cmpsl
lret
pusha
repnz
inc
adc
adc
loop
add
push
add
sahf
mov
in
fstp
and
stos
das
add
cs
cmc
jl
push
cli
daa
bound
xchg
and
ret
and
in
push
testl
into
sbb
negb
ret
dec
jae
pop
daa
dec
pop
jg
dec
fcmovnu
jp
or
adc
add
lods
scas
ljmp
aad
in
jne
xor
inc
aas
jnp
std
aas
mov
mov
sbb
and
mov
incb
xchg
inc
or
outsl
push
cmp
inc
int
xchg
cmp
sub
xor
lds
mov
bound
dec
adc
int
sbb
inc
jl
in
push
dec
cmp
pop
int
mov
lcall
std
xor
iretw
mov
lahf
loop
mov
pushf
and
mov
cmp
cmpb
push
call
dec
pop
test
in
cli
repz
push
xchg
sbbl
out
jns
daa
ret
pop
add
loop
cli
add
jmp
xchg
nop
jmp
imul
rorb
faddp
pop
leave
rolb
adc
repnz
fsubrs
push
sbb
sbb
xchg
enter
dec
xchg
clc
pmulhw
sbb
iret
push
inc
negb
xor
ret
les
hlt
call
mov
push
mov
pop
adc
cld
repnz
aam
iret
movsl
jg
pop
loope
push
into
imul
pop
loope
sbb
hlt
lds
push
push
js
cmp
and
push
jb
mov
xchg
adc
andl
jno
loope
sub
mov
in
je
sti
cld
xchg
cmp
adc
in
lret
xlat
xchg
jns
add
daa
mov
xchg
or
int
aas
push
xor
lea
dec
xorb
sub
inc
jmp
add
in
sbb
sbb
xchg
aam
das
mov
add
roll
lds
xchg
fcomi
mov
jge,pn
in
bound
jmp
dec
fidivrl
mov
pop
adc
mov
jecxz
fwait
pop
in
movsb
add
and
cmp
cmpsb
lea
jns
das
push
shr
mov
test
sahf
movsb
cmc
mov
jle
add
stc
subl
push
shlb
movsl
shl
roll
cld
imul
mov
shl
orb
mov
push
aam
ficomps
repnz
fucomip
stos
or
jb
jns
adc
dec
pop
movsb
adc
das
sub
shll
mov
xchg
cvtpi2ps
aad
push
jge
pop
test
cld
bound
out
imulb
xor
lret
dec
push
into
imul
and
cltd
les
and
push
cmpsl
lret
and
divl
xor
xor
and
es
push
push
stos
xor
lds
loop
std
cmc
jmp
sub
or
rclb
or
into
sub
aaa
adc
cmp
add
fsubs
sti
and
cmpsb
popa
int
in
mov
inc
xor
push
in
sahf
lcall
sbb
mov
insb
sbb
test
jge
sbb
sbb
movsb
mov
popa
ficomps
inc
lods
jg
add
movsl
xchg
incl
in
adc
sahf
stc
das
push
test
xchg
sub
sarl
add
cmp
sub
data16
mov
jae
je
add
sbb
lods
xchg
cwtl
stc
lahf
or
dec
outsl
inc
mov
in
daa
xchg
dec
je
cmp
pop
testl
add
xlat
lcall
pop
push
cmp
dec
or
fistl
push
aas
add
cmpsl
addr16
pushf
repnz
mov
sahf
cmp
mov
std
mov
add
in
mov
push
addr16
adc
jecxz
shl
sbb
add
iret
add
nop
and
fmulp
and
cltd
push
add
fdivrs
call
xchg
fimuls
dec
mov
nop
pushf
add
lods
fs
pop
nop
add
in
mov
std
fsubrs
stos
mulb
repnz
int
push
push
sarb
jmp
ja
icebp
outsl
nop
pop
or
in
in
cld
inc
pop
adc
and
pusha
out
jbe
icebp
pop
enter
sub
push
into
jl
pop
adc
dec
mov
popf
lahf
dec
lret
xor
popf
sub
adc
jecxz
movb
mov
dec
or
inc
push
mov
xchg
sbbl
ss
push
adc
cwtl
mov
inc
into
cld
mov
push
mov
ljmp
pop
lret
cmove
cmp
repz
call
stos
aas
cmc
mov
pop
mov
rorb
lret
sub
ficoms
cmpsb
xor
jae
mov
pop
mov
mov
xchg
pop
outsl
fwait
add
xchg
pop
jecxz
lcall
test
mov
pop
mov
testb
stc
cmp
sub
dec
cs
out
xchg
sub
push
ljmp
sub
jo
test
mov
ret
mov
xor
shll
cwtl
nop
inc
and
and
call
out
sub
xchg
cs
fs
insb
cld
out
pop
lea
mov
mov
or
or
adc
sbb
and
cwtl
push
insb
mov
cld
rcl
shll
outsl
sub
pushf
push
fidivrs
jnp
fistpll
xor
xchg
movsb
out
sub
and
scas
inc
cltd
ret
pop
sub
ror
popf
sti
rorl
sub
pop
adc
push
push
xchg
test
icebp
int3
xor
std
jg
test
ret
cld
stos
inc
or
push
loop
inc
jnp
cwtl
lds
inc
fsub
and
out
clc
ja
lahf
adc
mov
inc
mov
mov
adc
dec
mov
mov
push
insl
lods
mov
lods
movsb
mov
popf
push
in
shl
mov
in
call
xlat
adc
mov
in
out
push
outsl
jmp
push
push
iret
cmpl
mov
test
jecxz
sbb
mov
inc
inc
add
iret
sahf
push
jo
mov
or
fmul
ret
and
jb
inc
std
movsl
fwait
dec
or
pop
or
mov
lods
or
add
xor
cmpsb
xchg
xchg
shrl
dec
mov
sub
ficomps
repz
jb
cli
mov
ror
loope
ror
sbb
sbb
mov
test
inc
sbb
ret
stos
cmp
mov
jge
or
loope
movl
imul
mov
leave
or
outsb
or
testl
xor
popf
inc
int3
push
test
jno
call
orb
mov
sti
leave
cli
arpl
jae
stc
fstpt
rcr
sub
outsl
jmp
adc
inc
pop
or
rclb
push
adc
inc
jle
rclb
fwait
mov
adc
sti
mov
sahf
sub
xchg
loope
mov
cmp
mov
rcrl
push
les
push
jb
stos
icebp
add
mov
jecxz
cmc
cmp
int3
arpl
mov
imul
nop
rcl
inc
faddp
add
pop
iret
cmp
xchg
mov
push
imul
pop
inc
pop
sarl
fisubl
inc
cwtl
inc
mov
xor
mov
je
xor
sbb
sub
mov
dec
inc
aaa
lods
call
addr16
mov
pop
js
push
pop
and
xchg
pop
mov
push
jle
push
mov
sbb
or
into
dec
gs
adcl
mov
leave
out
push
mov
sub
clc
mov
aaa
fcomps
and
sbb
xchg
inc
int
sti
into
or
pushf
jnp
lahf
and
cmp
aaa
push
into
inc
sub
pop
cmp
fldcw
cmpsl
fwait
arpl
cmp
sbb
out
rorb
mov
jecxz
decl
jecxz,pn
fistl
movsl
sbb
pop
inc
sub
pop
sub
dec
arpl
aas
mov
sub
cmp
jb
mov
xlat
mov
mov
xchg
fstps
cwtl
shlb
in
loop
sub
dec
fs
jo
and
hlt
mov
mov
in
pop
push
loop
cmpsb
and
mov
jge
in
cmc
leave
jle
rcrb
nop
loope
ret
pop
aam
fcmovbe
call
mov
mov
mov
scas
mov
dec
call
xor
mov
push
mov
inc
xchg
inc
inc
xchg
sub
test
jecxz
fstps
out
daa
shrl
and
aad
add
subl
test
cmp
jb
xchg
cmpsb
inc
xor
imul
pop
xchg
lods
js
mov
arpl
push
dec
aas
and
out
movd
pop
mov
push
call
sbb
movsl
in
push
mov
or
in
mov
cmpsb
outsl
popf
and
pop
aas
fstps
pushf
cmp
pop
mov
inc
out
dec
cmp
pushf
mov
jb
sarb
mov
lock
js
mov
test
jne
lds
lret
mov
fs
jg
xor
jecxz
cltd
ss
in
insb
in
imulb
pop
cmp
xchg
lret
idivl
xor
enter
xor
jns
xor
or
or
mov
push
rcrl
adc
call
add
pusha
push
mov
or
gs
scas
mov
ss
and
daa
sti
rolb
xchg
mov
into
pop
mov
shll
test
stos
orl
pop
adc
jge
roll
pop
out
sub
stos
cmp
mov
rep
sub
ljmp
mov
push
aam
int3
mov
mov
imul
lcall
mov
leave
pop
notb
imul
pop
fsubrs
aas
out
mov
aaa
ret
mov
into
stos
outsl
es
cmp
sbb
ljmp
mov
sbb
pop
inc
xor
inc
stos
push
loop
cmp
sarb
pushf
test
and
or
or
mov
cmp
mov
add
pop
mov
stos
lret
bound
fiadds
xchg
jnp
mov
ficomps
xchg
dec
cwtl
push
jne
movl
lahf
xchg
jbe
and
scas
icebp
pop
push
out
mov
aam
mov
push
in
xchg
insl
xchg
ss
mov
mov
adc
cmpsl
shll
jne
xchg
lret
dec
aaa
xorb
inc
mov
bound
in
lea
pop
daa
add
in
sti
pop
sti
xor
ret
mov
fstpl
sarb
pop
lret
adc
out
jge
jle
push
pop
cmp
pop
xor
sub
out
cld
call
pusha
inc
dec
shll
fs
rol
loop
dec
sub
fisttpll
xchg
test
in
add
ret
dec
test
test
dec
aad
lret
xor
mov
pop
sbb
loopne
stc
jbe
rcrl
shl
inc
sbbl
cs
mov
mov
mov
xchg
movsl
jl
call
das
mov
scas
mov
xor
push
pusha
mov
cld
imul
cmpsb
xchg
dec
push
sbb
paddusb
push
cmp
aam
jae
jbe
mov
stos
cmp
jno
adc
dec
adc
xchg
je
leave
pop
int
or
hlt
push
xchg
push
lahf
cmc
jmp
je
stc
test
es
cmp
cmp
fidivs
sbb
mov
push
loop
pop
icebp
out
xor
insl
pop
daa
fs
test
lock
lods
fldenv
rclb
cmpsl
lds
inc
or
mov
out
xchg
mov
fldl
push
mov
or
mov
stc
or
lods
outsl
sbb
outsl
mov
andb
out
pop
daa
repz
adc
bound
mov
int3
cltd
dec
sub
pop
cmp
sti
je
push
sbb
xchg
push
loope
or
jmp
adc
lds
cmp
xor
andb
insb
cld
pop
mov
add
mov
push
mov
mov
rcrb
jecxz
addb
ds
sbb
xchg
sub
call
or
icebp
sbb
cmp
xor
int3
xchg
sahf
je
push
xor
or
lcall
scas
jnp
jl
imul
clc
sub
lods
out
pop
push
scas
sbb
aaa
out
shll
add
cmp
cs
sbb
ds
hlt
ret
mov
cwtl
mov
or
sub
jo
sarl
jg
jne
mov
sbb
pop
lahf
pop
outsl
cmc
sbb
loop
push
out
xor
sub
popl
jno
adc
fcmovne
push
int
outsb
dec
das
and
imul
jo
and
and
in
sarb
dec
movsb
in
int
adc
xchg
repz
ds
fistl
push
and
sub
sub
push
repnz
inc
push
fstps
test
push
add
jp
sub
mov
cmp
and
jns
aad
andl
mov
addb
push
ret
inc
push
scas
mov
sub
call
mov
or
mov
in
popa
int
imul
movsb
sub
cmpsl
push
xor
lock
es
cmpsb
jl
cmp
or
jns
sahf
test
popf
cmc
jbe
rorb
cli
fistpll
stc
aas
fadds
mov
add
loope
push
lods
test
mov
imul
jne
and
jmp
lds
mov
xorb
rol
inc
cwtl
add
xchg
mov
jnp
rorl
and
mov
push
mov
xchg
add
push
jno
or
popa
call
scas
jo
out
idiv
les
dec
insb
push
mov
pop
jge
movsb
push
shll
pop
dec
call
pushf
adc
comiss
xor
sbb
push
xchg
push
dec
mov
mov
pop
push
cli
and
xor
outsl
mov
jno
mov
push
cmc
pushf
mov
cmp
ret
aam
and
jl
pop
add
out
inc
adc
stos
jecxz
mov
leave
sahf
aaa
repnz
stos
aad
add
cmpsl
pusha
ret
hlt
enter
ds
and
jo
push
adc
jle
out
lahf
cld
pop
push
outsl
and
dec
push
xor
xorl
test
jb
sbb
addb
xchg
nop
sbb
lods
or
inc
cmp
sbb
into
cmp
xor
push
test
in
mov
add
lret
test
pop
mov
repnz
cmp
add
xor
popf
loop
jnp
xlat
fmuls
outsl
mov
rclw
xchg
shr
sub
ljmp
les
in
div
dec
clc
cmc
andl
lds
xchg
push
xor
xchg
mov
mov
hlt
cltd
sahf
jne
data16
inc
jb
fstpt
and
mov
int
and
cmpsb
pop
mov
dec
sbb
and
adc
push
mov
cmpsb
mov
jp
scas
cmp
adc
and
pop
pop
mov
pop
jecxz
mov
xchg
mov
mov
lret
bound
mov
addr16
inc
cld
dec
pop
sbb
pop
xchg
cmp
cmpsb
cld
dec
ss
outsl
std
imul
mov
cmpsb
pop
mov
jnp
pop
lret
sub
insl
imul
pop
mov
sub
or
push
out
adc
loop
dec
sbb
test
popf
test
stos
add
in
adc
xor
popf
xchg
or
dec
scas
loopne
add
lcall
lods
mov
pop
js
cmp
jb
cmp
sub
aas
push
iret
add
jg
sbb
jnp
add
or
imul
fsubl
inc
ret
sbb
int3
pop
inc
repz
rcl
add
mov
punpckldq
notb
push
enter
insl
popa
idiv
out
pop
inc
push
pop
clc
dec
adc
ret
bound
cli
int3
mov
inc
adc
adc
enter
sub
inc
and
push
loop
ds
add
mov
mov
mov
mov
gs
lret
out
les
cmpsl
mov
mov
mov
pop
test
adc
aas
sar
insl
lret
sbb
hlt
xchg
lret
xchg
jg
inc
or
jae
movsl
pushf
popl
out
push
add
and
cli
aad
xor
sbb
lea
lea
dec
sub
sbb
shll
adc
ror
dec
jmp
lds
cmp
sbb
nop
and
notb
adc
push
jge
add
cld
aaa
das
add
in
xchg
or
popa
xlat
fidivl
mov
movsl
inc
pop
cs
inc
outsb
pop
cmp
cmp
or
xchg
testb
mov
stos
ss
sahf
push
or
icebp
out
sbb
lcall
xchg
pop
push
cmp
dec
or
xchg
addl
in
adc
xchg
insl
xchg
mov
and
cmp
leave
rolb
xor
stc
enter
or
dec
cmp
cmp
mov
and
or
lahf
jmp
sub
sahf
sar
stos
push
xlat
shlb
scas
mov
jle
fldt
cmp
mov
pop
addr16
mov
fdivrs
pop
sub
sub
test
ss
xchg
fbld
cs
clc
cmp
inc
cwtl
std
daa
or
sbb
les
mov
in
sbb
mov
pop
jmp
lods
xor
xchg
lds
sbb
mov
mov
mov
movsb
push
sbb
aad
ds
vandps
jp
cltd
mov
mov
and
sub
xor
mov
add
adc
cs
icebp
sti
push
repnz
mov
and
insb
imulb
popf
mov
xchg
sbb
or
repnz
lods
pop
adc
addr16
cli
notl
xor
imul
shrb
mov
loopne
xchg
shlb
pop
push
pop
shrb
jns
ret
push
dec
cmp
jns
cmc
lds
inc
shlb
and
mov
mov
repz
cvtpi2ps
add
push
push
in
xor
sub
std
xor
shrl
lds
push
incl
inc
out
add
or
dec
jb
mov
dec
movsb
push
sub
xchg
pop
jno
ja
cmp
icebp
add
and
xor
mov
daa
pop
xor
int3
adc
inc
mov
mov
xchg
rclb
data16
pop
ror
dec
jge
jmp
pop
xchg
push
mov
fadds
cmpsb
icebp
stc
outsl
xor
adc
and
mov
xchg
mov
movhlps
pushf
cmc
jl
lods
adc
repnz
lock
mov
insl
fsubs
add
jae
imul
jo
addr16
ss
and
mov
test
dec
arpl
and
lret
jb
loopne
sub
idivb
xor
fdivl
jecxz
and
mov
inc
dec
mull
int
push
sahf
push
mov
or
daa
ljmp
push
cmp
adc
mov
add
stos
dec
jo
and
pop
mov
loopne
or
lret
inc
xchg
lret
mulb
push
pop
add
pop
stos
repz
movl
sub
cwtl
jmp
je
mov
mov
jp
idivb
and
push
int
repz
lea
pop
mov
popa
cmp
push
mov
cmpsl
jge
sahf
insl
ss
out
pop
insb
xchg
stc
and
fdivrs
cmp
arpl
xchg
stos
xorl
mov
in
popf
mov
add
ret
pop
insb
and
jmp
shll
mov
mov
incb
mov
mov
sub
out
xchg
aam
push
mov
dec
stos
mov
or
and
fcoml
jmp
xchg
lea
inc
pop
std
ret
pushf
push
mov
arpl
push
popf
ficoml
mov
mov
test
mov
jae
mov
aaa
cmp
je
cmp
pop
int3
addb
cs
push
insb
or
inc
push
and
faddl
and
mov
lds
clc
sub
cmp
imul
aad
rolb
rsm
adc
jg
ljmp
or
les
lods
jmp
icebp
call
sub
outsl
xchg
mov
xor
jnp
xor
movsl
addr16
imulb
mov
mov
xchg
cmpsb
or
fnsave
push
xor
and
hlt
jnp
mov
loopne
movsb
loope
jl
cmpsl
add
mov
push
lcall
jbe
mov
mov
xchg
jns
or
jnp
jae
enter
push
cmpb
shr
inc
push
fadds
ficoms
push
dec
add
jmp
sti
lret
out
xor
stos
bound
or
fwait
repz
xchg
mov
fwait
mov
push
mov
aam
inc
mov
jecxz
in
push
jg
pop
jb
sbb
movl
dec
imul
jl
pushf
arpl
jns
loope
leave
xchg
addr16
arpl
push
or
and
mov
fldl
inc
movsb
jp
add
iret
jg
pop
pop
cwtl
jne
andl
mov
lret
or
add
adc
cmp
pop
js
insb
mov
test
cmp
push
cld
adc
aam
xchg
cmpsl
addr16
and
jmp
inc
sbb
rolw
sub
cs
xlat
push
add
cmp
mov
and
ljmp
scas
sub
cmp
mov
filds
add
sub
mov
cli
mov
pop
mov
mov
in
push
push
outsb
push
sub
cs
bound
test
int3
cmp
inc
jge
iret
and
xor
pop
aam
into
mov
pushf
or
jg
dec
mov
inc
add
sub
jl
sub
rorl
dec
pop
jle
push
arpl
push
push
push
xchg
xor
fwait
pop
into
sbb
shl
insl
add
mov
add
les
mov
and
mov
pop
jbe
dec
xor
dec
popf
out
mov
in
imull
les
test
push
adc
pusha
pop
arpl
mov
sbb
add
cmp
lcall
aas
mov
leave
cmc
out
hlt
inc
mov
inc
jmp
ret
and
pop
das
into
add
cmp
mov
mov
pop
mov
cmp
js
setge
cltd
loopne
int
jecxz
in
orb
stos
push
sub
jle
mov
inc
adcl
jge
js
push
pop
push
jbe
test
lods
jbe
jno
mov
inc
loop
or
mov
adc
pop
xchg
inc
cmp
add
inc
jo
testb
aas
popa
js
mov
incl
rorl
mov
inc
sbb
sub
and
int
mov
leave
mov
rolb
push
call
lret
pop
xlat
nop
jmp
ja
pop
or
jmp
dec
pop
clc
loopne
mov
pop
movsb
sub
int3
inc
inc
imul
sbb
xchg
mov
or
cmp
inc
mov
mov
test
mov
add
dec
sarb
jle,pn
ss
cmp
jb
nop
daa
jbe
add
pusha
cmpsb
stos
cld
mov
sbb
ja
fcmovnu
inc
jno
jnp
arpl
cmpsl
xchg
add
sub
cmc
lret
jns
cmpsb
sbb
mov
mov
fsubl
enter
test
daa
bnd
sbb
xor
xchg
push
inc
or
adc
xchg
lock
inc
xchg
or
jg
jge
dec
inc
mov
xchg
rcr
jne
jns
mov
cmc
andl
sbb
sbb
addr16
lods
push
lahf
mov
push
arpl
notl
loope
movsb
mov
jne
lods
cs
fs
xor
call
or
rorb
out
sbb
xchg
jg
pushf
xor
sbb
fcomi
pop
ljmp
les
fs
inc
sub
loopne
lock
xlat
bound
jns
cltd
leave
inc
stc
add
mov
xchg
pushf
cwtl
loop
lods
push
mov
addl
jecxz
or
jae
ret
gs
cmc
cwtl
xchg
add
or
add
adc
mov
and
jmp
cmp
mov
pop
inc
dec
sbb
push
xor
inc
mov
mov
mov
mov
iret
dec
iret
cltd
ja
inc
sub
fmul
dec
icebp
into
or
add
repnz
aas
test
pop
adc
stos
dec
bound
out
and
dec
sub
xchg
xorb
adcl
xchg
out
fmull
add
xchg
sbb
js
in
rolb
adc
divb
popf
outsl
sbb
lret
jle
ss
and
inc
xor
and
jb
jmp
sbb
xor
iret
sbb
xor
pop
mov
test
repz
jne
mov
cld
sbb
mov
push
push
lahf
xchg
nop
std
dec
stos
and
imul
rcrl
xchg
or
xchg
and
push
xchg
jbe
xchg
in
lods
dec
iret
mov
repnz
jge
adc
dec
pop
xchg
stc
push
inc
sub
mov
fdivrl
dec
aad
mov
xor
push
shr
cmpsl
and
sti
or
xor
in
mov
pop
inc
int3
push
push
popa
jnp
xlat
jns
push
into
dec
xchg
popf
sub
dec
js
daa
sub
sbb
push
cmp
inc
xor
jne
test
pop
loope
or
xchg
lds
jns
lods
dec
aas
sub
sub
mov
out
sub
add
mov
lahf
in
adc
add
xor
xor
ljmp
repz
aas
jmp
xor
dec
push
add
mov
cs
mov
mov
xor
adc
xchg
jae
add
sbb
lret
aam
repz
movsb
int
pop
push
incb
notb
inc
rcr
add
adc
dec
sub
mov
lock
sti
xor
mov
cmp
int
ds
cmp
insb
fimull
sahf
mov
xchg
dec
int
add
adc
mov
jo
and
incb
xchg
inc
dec
jg
neg
push
dec
push
in
mov
icebp
in
iret
enter
pop
xor
pop
and
hlt
push
ljmp
rcrl
push
test
mov
and
jge
cmp
add
sub
push
xchg
or
fmull
sti
cld
inc
jmp
ss
cmpsb
xor
lea
test
es
insl
mov
das
es
inc
jp
stos
sbb
jmp
pop
je
push
sub
or
inc
daa
cltd
cmc
xlat
mov
jo
hlt
sar
std
cmpsb
frstor
outsb
gs
adc
dec
inc
jo
cmp
push
mov
inc
sbb
icebp
jmp
pushf
fstpl
out
xor
jmp
dec
pop
add
adc
dec
jnp
int
clc
testb
repnz
fnstcw
xor
xchg
insb
dec
fadds
arpl
or
das
add
xchg
mov
or
and
push
mov
imul
enter
je
xchg
icebp
mov
or
mull
sub
imul
add
out
push
xchg
mov
call
xor
dec
repnz
lock
hlt
add
movsl
dec
cmpl
lock
adc
jnp
sub
inc
bound
ficompl
rclb
cmp
xchg
push
sbb
or
lcall
inc
dec
push
enter
cmpb
push
xchg
dec
xor
insb
cltd
cmc
adc
jo
xor
mov
xchg
xchg
hlt
sub
adc
test
idivl
adc
test
rcrb
adc
adc
dec
std
dec
aad
dec
adc
nop
and
sahf
cmp
pop
sbb
in
add
es
int3
or
add
pop
mov
pop
pop
jmp
rcpps
data16
xchg
mov
push
mov
cmp
and
pushl
les
call
inc
icebp
mov
pop
sub
test
and
imul
dec
aad
push
in
push
dec
mov
mov
mov
dec
xor
std
mov
shl
icebp
mov
add
je
lret
ljmp
mov
push
mov
daa
push
insb
cld
stos
dec
inc
jb
sbb
inc
or
sbb
cltd
test
fwait
ss
add
nop
test
mov
ja
pop
adc
mov
out
je
pop
xchg
clc
outsb
aad
xor
mov
jecxz
sbb
jl
xchg
inc
daa
andb
xchg
push
jns
fisttpl
inc
fldcw
cltd
sub
aaa
pop
dec
in
adc
outsl
mov
loop
repz
inc
ljmp
out
jns
mov
lock
stos
jle
cmp
inc
jbe
and
lods
add
adc
push
idivb
sti
mov
xor
xor
repz
adc
shll
iret
icebp
push
icebp
mull
sbb
fisubrs
sub
jecxz,pn
xorb
mov
inc
popf
push
push
loope
sahf
xchg
jg
cltd
arpl
or
or
cmp
in
jae
jg
jg
add
cmpb
shrb
sbb
cs
push
jge
mov
clc
roll
es
test
or
adc
iret
movsb
xchg
insl
mov
js
adc
adc
inc
jae
push
adc
cmp
ret
push
lret
push
rolb
cmp
std
mov
pop
outsb
mov
mov
andb
push
aam
xchg
mov
enter
ret
mov
clc
adc
sti
cltd
lret
pop
push
fs
les
mov
stos
out
hlt
push
inc
inc
ds
outsb
int3
ja
sbb
pop
addb
and
pop
repz
mov
iret
xor
cmp
and
pop
into
les
shrl
pop
fimuls
push
adc
fdivl
sbb
scas
sarb
mov
out
sub
pop
mov
jl
mov
and
out
mov
imul
testb
scas
sbb
sbb
or
ror
pop
mov
sti
inc
mov
outsb
into
fwait
ljmp
sub
pop
imul
aad
mov
adc
insb
push
push
xorb
call
ds
into
test
gs
cmpb
cs
xor
xor
or
mov
out
push
xchg
sub
push
lahf
sbb
add
mov
mov
cmpsb
dec
xchg
aaa
test
and
les
int3
adc
inc
jecxz
arpl
jo
lahf
push
outsl
xchg
sbb
mov
xchg
mov
jb
jnp
inc
shll
cld
lret
outsb
popf
jle
es
in
sbb
mov
cmp
fidivrl
stos
adc
add
popf
pop
pop
negb
pop
jae
xchg
xacquire
insb
das
inc
sbb
xor
add
mov
ljmp
mov
dec
insl
dec
stc
jge
fdiv
xor
mov
push
test
sub
daa
stos
stos
mov
inc
dec
sub
outsb
adcl
xchg
xchg
push
jb
popa
arpl
cmp
xor
andb
dec
lea
push
push
fistpl
mov
andl
mov
xchg
cmp
adc
and
jb
pusha
jle
int
cmp
rorb
jne
inc
aas
daa
fiadds
cs
inc
jecxz
pushf
rcrb
lahf
cmp
xchg
iret
lods
fsubs
dec
and
popf
aam
push
fs
and
fidivrl
jle
adc
jle
idivl
jmp
bswap
push
xor
sti
out
pop
mov
jb
lock
aad
cld
or
jo
in
adc
arpl
add
dec
movsb
rcr
add
cli
cmc
cmp
add
dec
dec
call
mov
xchg
mov
push
popf
xor
aad
enter
xor
add
fnstcw
stos
cmp
jae
aam
ffreep
mov
mov
out
mov
dec
lret
mov
ja
mov
inc
iret
mov
mov
mov
pop
xor
in
xor
and
xor
inc
out
ja
popf
faddl
xchg
mov
aad
push
add
adc
je
loopne
bound
repz
and
jecxz
into
movsl
mov
jbe
xchg
les
fwait
adc
inc
and
or
mov
cmp
cmp
mov
jle
cli
sbb
je
cwtl
cs
data16
lcall
cltd
cmpsl
test
out
movsb
pop
mov
pop
outsl
jb
lods
xor
in
out
xchg
xor
inc
lret
dec
sub
out
repz
aas
shl
scas
push
mov
fstl
mov
lcall
imul
lcall
inc
jl
and
xchg
stos
fidivrl
fnstenv
shr
cmpsb
int
lea
subl
ficomps
xchg
out
jb
sbb
ja
bound
fiadds
pop
mov
paddsw
inc
sti
jno
xor
mov
loopne
push
or
sbb
repz
and
push
nop
sub
or
ror
xor
enter
inc
imul
cmpsb
shll
sbb
cmpsb
and
mov
inc
pop
aad
hlt
shl
push
push
jl
repnz
pop
adc
in
adc
adcb
stos
in
enter
jge
push
cmp
pop
jmp
xchg
sbb
repz
add
rclb
or
enter
xorl
out
mov
ja
lods
aam
popf
or
xchg
jo
data16
jle
cmp
lock
cmpl
subl
jns,pt
setl
cmc
imul
sarl
xor
sbb
outsb
push
inc
pop
aam
gs
push
fidivrl
or
jle
lods
inc
subl
push
pop
push
imul
repz
push
mov
ljmp
mov
mov
xlat
sub
xchg
xchg
inc
or
pop
or
repz
xor
rcll
cmpsl
test
ja
push
adc
add
mov
and
push
call
repnz
out
addb
popa
inc
inc
mov
fcoml
add
sub
mov
ljmp
mov
jge
inc
adc
push
mov
gs
inc
and
push
cmc
jecxz
or
movsl
js
pop
add
rcrl
push
fistps
hlt
push
shl
jnp
hlt
jns
insb
out
cmp
xchg
or
cmc
imul
dec
stc
shll
int3
mov
cmp
data16
mov
movsb
jbe
cmp
inc
cld
outsl
mov
scas
pushf
and
jbe
inc
jp
push
in
mov
xor
cs
mov
popa
adc
mov
xor
sub
cmp
mov
or
sub
push
hlt
jge
cmp
mov
mov
orb
popa
adc
jmp
add
lods
sub
mov
pop
js
ret
cmp
cwtl
rclb
pop
pop
mov
inc
int3
dec
stos
lods
cli
sub
out
push
mov
incl
adc
mov
add
scas
or
fists
jp
popf
gs
sti
imul
mov
xchg
jle
sub
sub
fmuls
insl
shll
data16
and
arpl
aaa
sbb
je
test
int3
mov
inc
sbb
ljmp
fisubs
xchg
cmpsl
je
mov
in
jmp
ja
inc
jne
xchg
mov
fistpl
add
mov
cmp
or
xor
daa
sub
mov
aad
mov
mov
xchg
jmp
adc
js
mov
hlt
and
stc
arpl
ljmp
int
cmpsl
adc
xor
je
pop
adcl
int
cld
or
pop
sbb
rorb
mov
dec
mov
std
cli
cmp
loope
out
stos
inc
dec
leave
jge
stc
mov
stos
push
outsl
xchg
mov
or
lods
push
pcmpeqw
add
mov
add
and
jnp
jp
jl
ds
cltd
mov
mov
and
dec
mov
sbb
jbe
jp
aam
adc
push
push
inc
imulb
dec
add
gs
fdivl
add
add
sub
cltd
mov
push
jg
xlat
das
fisubrl
movsb
aaa
push
orl
jp
mov
xlat
mov
mov
jge
mov
xchg
xchg
std
add
add
pushf
and
cwtl
aad
mov
jno
xchg
ret
inc
mov
xor
xor
mov
movsb
arpl
out
pushf
lahf
cwtl
repz
sti
movsb
pusha
jo
in
dec
sub
inc
dec
ljmp
mov
pop
cs
aaa
inc
mov
test
in
lahf
fldl
add
movb
stos
faddp
mov
push
xchg
add
jnp
pop
in
push
testb
lea
icebp
test
mov
loop
jp
ja
leave
pop
push
divl
sar
in
jae
sbb
or
mov
cli
add
lahf
jbe
or
cmp
jle
cli
scas
push
addb
pop
lcall
lods
pushf
mov
test
lock
xchg
xchg
mov
mov
popf
mov
jle
das
es
imul
or
lea
cmc
stc
notl
add
add
xchg
mov
and
sahf
insl
int
jp
cwtl
sub
xor
ret
inc
dec
sub
js
idivb
push
pusha
js
int3
int3
xchg
adc
je
es
dec
sub
sarb
mov
rorl
dec
mov
sbb
adc
cmpsb
pop
or
ret
je
out
cmp
xchg
in
fimuls
xor
and
xchg
mov
cld
repnz
ret
push
cmpsl
into
repnz
xor
xor
or
push
mov
sbb
and
lret
gs
ret
paddq
mov
fiadds
repnz
cmpsl
xchg
ror
xchg
inc
insb
pop
mov
pusha
fidivs
movsl
mov
out
push
push
xlat
enter
jl
jg
ret
or
out
jecxz
xchg
bound
xor
push
cli
aaa
lret
mov
fldcw
cltd
imul
jns
ret
dec
sbb
sub
jo
lret
stos
mov
dec
xchg
adc
push
fildll
adc
loope
sti
sahf
mov
outsl
jnp
je
sub
jmp
rclb
xchg
sbb
jecxz
pop
lds
dec
xor
or
stos
mov
loop
and
hlt
mov
sub
inc
xchg
icebp
sbb
xor
out
add
nop
fisttpll
test
lock
loope
jg
pop
xchg
inc
lret
cmp
pushw
int3
mov
outsl
arpl
lds
cmp
dec
lret
lret
idivb
pop
jne
nop
jb
adc
push
sti
stos
pop
test
jno
cmp
test
lods
clc
aas
inc
movsl
movsb
push
int
cmpsl
dec
mov
adc
sub
inc
movsb
inc
inc
mov
xchg
sahf
jecxz
hlt
sub
cmp
testl
int3
jbe
arpl
imul
adc
push
out
hlt
pop
fstpl
fidivrs
test
lods
jmp
xor
mov
shl
mov
das
pop
xor
jb
aaa
cmp
pop
js
fcomip
imul
testl
push
aas
pop
repnz
rorl
mov
rorl
and
scas
dec
lcall
hlt
loopne
or
inc
mov
sub
xchg
xor
cltd
sbb
pop
cmp
lods
fcmovnb
out
test
add
sub
call
inc
insb
ds
insb
mov
fs
xor
mov
mov
mov
jns
dec
and
leave
jne
cmp
mov
dec
aad
sub
pop
sbb
xor
ret
lret
fcom
ror
jg
xchg
cmp
out
fs
push
and
mov
jno
dec
sti
cmp
loope
sysret
imul
pusha
or
dec
cmc
pop
xchg
stos
inc
xor
fwait
arpl
lcall
inc
enter
enter
mov
stos
adc
fildll
in
jne
inc
pop
js
xor
cmp
int
jno
ret
or
inc
mov
jp
loopne
mov
mov
fwait
jge
xchg
lds
test
jg
push
push
xchg
mov
es
xchg
idiv
gs
pop
pop
push
nop
xlat
outsl
jp
out
movsb
addb
mov
pop
aaa
addr16
xchg
xchg
outsl
rcll
jno
or
aas
cmp
mov
test
pop
mov
fistl
sti
faddl
insl
cs
xchg
int
sbb
ror
or
pop
push
ja
jo
popf
cmp
sub
jmp
scas
insb
cld
lods
and
out
into
mov
pop
dec
push
jmp
imul
mov
aaa
pop
stos
dec
mov
mov
mov
std
sub
shl
scas
dec
push
in
sarb
outsb
xlat
bound
ja
dec
rorl
popa
mov
dec
fildl
hlt
xor
mov
sub
idiv
in
pop
add
xchg
and
aas
sbb
fadds
repz
mov
sub
mov
dec
pop
int
lods
xor
inc
shlb
and
sub
push
push
insb
stc
jno
lcall
aad
aaa
stos
xchg
pop
push
xor
push
and
or
call
cmc
stos
mov
icebp
xlat
lcall
mov
add
mov
jnp
pop
imul
push
js
lahf
add
dec
lret
mov
iret
in
in
mul
test
and
mov
push
add
xchg
cmp
flds
adc
push
aam
jle
sahf
adc
xor
xor
fmul
sub
push
push
ljmp
in
arpl
pop
data16
lock
andl
ljmp
mov
out
lods
movsb
fsubrl
mov
insl
pusha
pushf
pop
push
sub
mov
adc
jb
sarl
xchg
out
or
xor
pop
lea
jbe
mov
or
and
icebp
cmp
fstps
add
cmp
pop
mov
push
mov
or
repnz
add
lret
in
in
jae
adc
adc
gs
jp
lock
inc
mov
icebp
mov
pushf
leave
cmp
sub
test
mov
pop
lcall
cmpsb
sbb
mov
scas
dec
push
jmp
add
dec
pop
ss
sbb
and
aam
bnd
jle
push
insl
std
sub
cmp
jmp
sub
popa
aam
cmp
test
mov
xorl
mov
add
es
les
push
jo
add
inc
mov
dec
dec
fucomip
add
cmp
dec
jnp
or
mov
pushw
sti
sub
xlat
inc
xor
or
orb
jp
pop
xor
push
ds
jbe
icebp
push
aaa
push
add
test
enter
lahf
sbb
mov
gs
enter
or
mov
push
inc
or
insb
jg
dec
pop
cmp
push
mov
adc
int3
jecxz
out
cmp
out
pop
mov
mov
cs
jp
aad
cmp
pop
int
mov
iret
add
push
mov
mov
jp
push
js
inc
popa
sahf
mov
inc
sub
rclb
fldenv
jecxz
or
mov
xchg
jno
fists
and
mov
enter
cmpsl
push
lods
xlat
fs
xchg
inc
dec
gs
mov
mov
pop
aaa
adc
and
test
andb
pop
addr16
lahf
fucomi
cmp
xchg
jo
test
xor
subl
mov
push
pop
outsl
xchg
int
aad
xor
xor
pop
leave
stos
xchg
adc
sbb
cmpsl
inc
mov
shrb
pushl
dec
addr16
xor
cmp
in
push
cmp
jae
mov
xor
shr
pop
std
loop
shlb
push
iret
ljmp
pop
jle
or
inc
mov
or
xor
push
or
out
loope
repz
ljmp
sbb
push
pop
jge
gs
sub
add
mov
jle
xchg
iret
pop
loopne
insl
pop
out
out
movsl
mov
mov
sahf
ret
cmp
ds
or
adc
pop
fnstenv
jecxz,pn
call
inc
test
mov
scas
xor
cmpsl
fdiv
lret
sti
pop
in
push
test
out
aad
mov
fs
mov
sub
adc
jecxz
mov
aaa
lock
cmpsl
sbb
lea
dec
add
adc
adc
push
xor
add
sub
sbb
dec
xor
test
mov
jecxz
xchg
mov
test
dec
mov
dec
out
js
push
rcrl
es
mov
mov
addl
sahf
mov
inc
pop
inc
add
mov
cmp
cmp
negb
pop
cmp
mov
xlat
cmc
xor
ss
mov
decb
mov
test
mov
cmpsb
dec
lods
mov
fwait
imul
mov
push
dec
cli
mov
push
mov
dec
xchg
inc
jecxz
cltd
shll
rcrb
loope
shrb
movsl
out
inc
jmp
nop
or
cmp
rclb
rclb
pop
mov
or
and
hlt
mov
jb
cmp
dec
loope
outsb
ret
dec
jmp
movl
add
mov
inc
or
fdivrl
pop
mov
mov
dec
pop
push
sbb
cmpl
jge
repz
clc
data16
xor
jmp
mov
pop
cmp
xor
insb
push
pusha
push
into
inc
jle
mov
sti
fldt
stos
mov
rclb
mov
and
jo
adc
jl
fildll
or
pop
inc
push
ljmp
lock
out
cmp
adc
mov
or
jl
inc
and
pop
mov
xor
icebp
std
lods
ja
sub
and
xor
or
mov
sbb
pop
lahf
rcrl
mov
pop
sub
cmp
dec
pop
sub
ja
jecxz
aad
fs
aad
scas
and
mov
add
in
arpl
rorl
flds
arpl
push
int3
testl
pusha
pushf
pop
rorb
js
fadds
aam
push
addb
jecxz
inc
test
movsb
pop
repnz
sub
ja
sub
mov
xchg
ret
nop
leave
xchg
insb
sub
adc
push
xchg
jae
jne
xor
pusha
ret
inc
dec
jp
ror
cmp
inc
mov
adc
dec
pop
lods
hlt
lods
mov
into
inc
adc
fidivrl
xchg
iret
lahf
sbb
mov
mov
shr
jl
pusha
pusha
push
dec
cs
loop
ret
lods
pop
push
cld
cmp
movsb
into
in
addr16
and
jp
sbb
add
ljmp
outsl
push
inc
adc
test
and
out
add
mov
push
mov
cmpl
mov
iret
sub
mov
inc
popf
ret
imul
xlat
pop
popf
mov
imul
adc
xor
push
sbb
testl
je
xchg
pop
push
add
test
sbb
filds
aam
sti
mov
out
notb
data16
mov
mov
inc
pop
mov
jno
in
lods
inc
loopne
mov
pop
jns
mov
push
mov
mov
cli
pop
mov
cld
sbb
lds
ja
lret
mov
test
cli
xchg
push
stos
mov
insl
mov
iret
scas
xor
inc
fcmovnbe
mov
aas
xchg
mov
pop
std
cltd
test
out
cmc
mov
jmp
repnz
fwait
cmp
xchg
ljmp
pop
fidivrl
mov
adc
inc
push
iret
and
push
mull
mov
stos
loop
jp
mov
loopne
scas
adc
pop
add
push
xchg
gs
cwtl
imul
inc
xchg
int
addr16
shr
mov
ljmp
ja
add
xor
leave
mov
push
mov
push
imul
int3
jle
or
xchg
stos
inc
push
mov
sub
je
pop
xor
call
fistpl
sbb
add
xor
or
pushl
add
cmp
je
insl
jae
and
fistpll
mov
loopne
adc
dec
popa
lea
or
loopne
push
out
icebp
push
sbb
sbb
dec
loopne
ja
jnp
sbb
jae
sbb
or
mov
sub
cwtl
push
lock
xor
shl
jge
iret
int
std
pop
pop
adc
int
pop
jnp
mov
dec
mov
movsl
mov
ret
mov
lea
pop
in
mov
pop
pop
sbb
mov
hlt
fbstp
inc
adc
addr16
mov
dec
push
in
inc
fisttpl
add
ss
repnz
cmpsl
nop
dec
int
fldl
shlb
xchg
into
push
imul
leave
pop
push
jns
test
jge
sbb
mov
int3
push
lock
and
xchg
lret
popf
ja
insl
xchg
xor
mov
pop
push
pop
push
out
add
jge
mov
stc
pop
rorb
mov
xor
push
fwait
int
scas
mov
cli
shlb
neg
jb
mov
cwtl
sbb
pop
push
pusha
out
rclb
cmpsb
xchg
sub
cmp
mov
pushf
mov
cwtl
test
addr16
dec
or
jo
push
dec
adc
inc
dec
in
inc
filds
or
xorl
nop
inc
mov
xchg
dec
mov
xlat
pusha
cltd
mov
inc
jg
sarl
int3
dec
sbbl
add
mov
inc
pop
inc
mov
stos
jb
aaa
adc
cmp
ret
mov
mov
iret
pop
stos
loope
cmpsl
push
test
ficoms
mov
in
out
mov
cmpsb
sbb
outsb
scas
jno
pop
hlt
jne
pop
lcall
leave
push
jbe
je
or
add
pop
jo
rolb
adc
rcr
je
cmp
cmp
or
ja
bound
gs
xchg
xchg
mov
in
jg
mov
ds
adc
mov
mov
jae
rcr
dec
fstl
out
sub
test
frstor
cvttps2pi
jb
inc
jae
insl
sub
pusha
lods
out
leave
cmp
stos
pop
and
push
jo
mov
cmp
dec
inc
sub
fidivs
adc
dec
jge
cli
pop
loopne
shll
fildll
xor
enter
inc
aad
aas
test
or
lods
pop
call
cmp
add
ljmp
adc
or
fwait
out
mov
push
cmpsl
jl
xchg
gs
insl
mov
xchg
mov
inc
ja
adc
lods
dec
xchg
adc
jo
mov
jnp
xchg
mov
in
in
ficoms
call
fcom
jmp
inc
nop
mov
xchg
push
ficompl
push
mov
jl
ret
ror
fists
cmp
cmp
and
lret
sti
dec
enter
push
lock
sbb
int
cmp
fwait
cmp
in
andl
outsb
int
jmp
pop
int
orl
das
pop
pop
mov
jge
mov
ss
push
jmp
ret
sbbb
xor
in
subl
scas
shlb
jne
jge
andl
dec
pop
mov
ds
cmpsl
loopne
pop
push
jnp
push
rcll
or
jae
xlat
fisubrs
lret
stos
xor
in
xchg
aam
dec
push
add
roll
jnp
pop
push
mov
mov
mov
stos
repz
mov
in
loopne
mov
adc
insl
jb
mov
int3
sbb
ret
rcr
jae
out
shl
je
scas
cmp
push
shl
cmp
enter
loop
jl
rorb
call
in
add
inc
loop
test
push
out
leave
sub
mov
jmp
fstpl
cmp
sti
xchg
ds
dec
mulb
out
adc
sub
pop
sub
adc
out
jae
ficomps
push
clc
fdivl
and
stos
push
leave
int
xchg
subl
dec
clc
adc
jnp
mov
jae
lahf
fs
addr16
hlt
or
enter
ret
sahf
decb
mov
test
and
push
aad
jecxz
addr16
and
add
sbb
sub
into
cmp
lret
xchg
pusha
aaa
push
incb
xchg
data16
adc
add
jle
pusha
cli
pusha
xor
je
out
xor
push
fstl
in
iret
and
mov
jle
rorl
test
icebp
xchg
or
mov
or
mov
push
into
ficoml
repnz
insl
pop
in
xor
xor
pop
in
inc
scas
mov
rcl
dec
xchg
cmpb
xchg
shll
jnp
les
inc
ljmp
sahf
repz
fucomip
stos
fwait
std
aas
ja
cmp
add
divl
pushf
movsbl
cmpsb
pop
pop
ds
or
pop
mulb
dec
out
lea
in
mov
dec
lret
lret
jle
iret
mov
mov
xchg
lret
stos
out
cmp
cltd
cli
push
add
clc
xchg
sarl
mov
js
xchg
add
fistps
and
repnz
inc
repz
fisubrs
mov
mov
pop
push
popa
jmp
push
outsb
jns
les
push
cmp
pop
jns
test
test
xor
mov
add
pop
andb
xor
ds
ss
loope
xor
add
sbb
push
or
add
arpl
aad
cld
and
mov
movsl
mov
xchg
sbb
add
dec
sbb
idivl
fwait
pop
push
popf
pop
cmp
enter
adc
adc
js
ja
mov
stc
pop
xchg
mov
js
push
add
push
xchg
jbe
arpl
shlb
testb
in
aas
adc
shlb
adc
pop
cli
and
std
mov
jns
aad
sbb
cmp
orb
xchg
ljmp
ret
ds
jl
sbb
pop
rclb
pop
xchg
mov
popf
pop
ljmp
aam
iret
stc
stc
xor
mov
dec
pop
inc
sarb
push
mov
add
mov
jmp
mov
out
jle
addr16
push
ret
aaa
lods
rcll
inc
gs
and
sub
mov
addr16
das
lock
dec
insl
mov
cmpsl
mov
mov
adc
and
pop
pop
jbe
lcall
out
jb
cmp
sub
mov
ret
sub
push
sbb
jo
pop
fmulp
xchg
push
dec
stc
mov
push
popa
out
sbb
sbb
sarl
mov
add
or
add
ja
or
pop
push
das
int
loopne
test
ss
or
mov
into
loop
xor
enter
lock
out
adc
sub
lcall
pop
sub
lods
stos
fwait
push
sbb
pop
push
xlat
and
mov
movsl
lea
gs
out
xor
and
scas
sbb
inc
jl
movsl
add
bound
das
ret
mov
mov
mov
test
sti
test
pop
loopne
fucomp
pop
stc
push
cli
mov
loopne
imul
pushf
mov
in
arpl
bound
in
pop
loopne
jle
outsl
rcrl
inc
lods
xor
jge
outsl
cltd
jmp
pop
xor
daa
xor
icebp
sti
push
rcl
notb
adc
sub
cmp
jnp
insl
xor
mov
out
daa
arpl
inc
pop
adc
aaa
sahf
sub
sbb
loopne
jnp
push
fistpll
push
fldcw
leave
dec
xchg
insb
aas
or
cmp
out
mov
rcrb
jae
movsl
xchg
scas
mov
data16
push
pop
clc
push
dec
xchg
or
popf
cmp
ljmp
aam
and
jo
arpl
dec
rclb
enterw
xchg
jg
mov
cmp
and
mov
xorl
cmp
mov
or
rcrb
mov
popa
js
sub
mov
push
jb
cmpsl
or
aas
sbb
push
push
test
adc
sbb
or
xchg
push
sbb
pop
or
dec
cmp
jae
mov
pop
out
call
push
jecxz
div
jl
hlt
mov
and
or
movb
loope
push
or
mov
sbb
sarb
in
stc
into
pusha
dec
std
aad
sub
mov
adc
pop
jg
out
pop
sahf
fsubrp
fsubs
sbb
xor
xor
jl
loopne
push
fldenv
mov
jb
lahf
push
xchg
aas
in
insb
leave
jmp
out
test
jns
and
xor
movsl
xor
xchg
dec
repz
loopne
mov
sub
jp
or
and
xor
sahf
cs
test
scas
iret
add
aaa
outsb
cltd
cld
mov
fwait
pop
and
sahf
inc
int
bound
add
insl
ret
scas
out
dec
inc
and
pop
cltd
arpl
dec
jl
inc
dec
fs
jg
inc
enter
cmp
mov
mov
pushf
test
enter
nop
call
dec
jno
faddl
xchg
stos
stos
arpl
jmp
insb
pop
or
push
hlt
jge
pop
inc
insb
pop
cmp
ficoms
sub
cmpsb
movsb
out
insl
icebp
lds
icebp
pop
cmc
jb
pusha
add
stc
test
sbb
push
movsb
add
das
pusha
out
push
adc
xorl
inc
imul
push
test
or
or
mov
sahf
mov
or
mulb
je
adc
imul
lahf
jo
push
add
insb
out
fldenv
cmp
mov
cmp
movnti
je
or
xor
js
push
jae
pop
push
loope
ret
push
cmp
adc
cmp
xor
xchg
xchg
push
negl
mov
ret
pusha
test
mov
sbb
in
sub
xor
inc
sarb
and
sbb
push
test
aaa
lret
pop
imul
push
or
xor
xchg
movsl
and
lods
insb
add
pop
bound
xchg
push
inc
adc
push
shll
mov
mov
xchg
mov
jo
in
popa
cmpsb
idivl
push
stos
fstp
pop
aaa
inc
cld
rorb
xchg
lds
fucomi
add
xchg
xor
sub
clc
leave
adc
add
scas
sub
dec
cmp
add
fwait
mov
push
fmul
lods
daa
stc
sahf
je
ss
mov
rcr
adc
lods
arpl
sti
scas
test
sub
stc
test
cmc
mov
cmp
mov
cltd
adc
jge
or
jno
popa
mov
jmp
mov
jbe
add
xlat
jecxz
mov
bound
aad
mov
sub
sbb
rcrl
repnz
xrelease
sub
mov
sbb
js
ljmp
mov
mov
ret
sbb
fwait
fwait
push
cmp
test
in
xchg
add
test
lret
mov
xorl
shl
loop
inc
sbb
loopne
pop
pop
and
cmp
jp
out
lahf
sahf
insb
in
adc
in
jno
mov
stos
mov
jno
xchg
daa
or
popf
add
negl
cli
inc
das
jo
mov
sub
cmp
sti
mov
adc
push
push
icebp
mov
aas
pop
inc
push
pop
add
testl
or
mov
cs
lahf
or
mov
jp
rcrb
jae
loop
fidivrl
test
cs
inc
mov
or
sub
and
lahf
cmp
dec
mov
mov
sbb
hlt
mov
call
mov
je
pop
test
out
out
daa
add
fxch
sub
mov
out
insb
outsb
popa
mov
jecxz
addl
cmp
push
incb
dec
stos
mov
pop
sub
jmp
sbb
and
mov
out
inc
xor
repz
xchg
cmp
xchg
sarb
cmpl
stos
xor
fwait
mov
pop
test
les
test
add
scas
popa
cmp
mov
out
dec
sbb
or
arpl
push
add
mov
mov
cmp
mov
loop
pop
sti
loopne
loop
push
mov
xor
xchg
enter
fwait
mov
or
cmc
mov
xor
outsb
sbb
add
xor
sub
dec
sahf
lock
lock
mov
cmc
cmc
xchg
adc
data16
sbb
mov
out
stos
xor
jbe
out
add
adc
mov
test
adc
xchg
xor
pop
out
adc
and
inc
pusha
ret
adc
push
jo
pop
add
addl
push
push
ret
lcall
jp
incl
cmp
jno
les
add
sbb
dec
rcrl
jne
stc
ds
cld
push
lods
mov
mov
rorl
mov
inc
repnz
stc
cmpsl
in
mov
in
mov
test
out
test
sahf
inc
movsl
dec
mov
xchg
push
xchg
bnd
je
cmpsb
divb
jb
sub
data16
mov
loope
ss
add
sti
cmp
xor
mov
fcmovne
clc
sbb
inc
aad
jae
daa
addr16
dec
pop
jmp
ja
ret
add
ret
shlb
cli
divl
sub
mov
call
int3
sub
or
into
and
sarl
mov
pop
ljmp
loopne
les
ja
adc
cmp
mov
inc
out
stos
rolb
iret
hlt
pop
dec
and
out
pushf
rcl
test
int3
insb
and
cmpsb
jae
xchg
or
add
movsb
pop
mov
xor
xor
addb
mov
arpl
pop
or
mov
cmpsl
cmp
xlat
sub
sub
mul
mov
lea
bound
rcr
add
jae
sahf
jns
outsb
int
test
xor
inc
arpl
or
inc
loopne
pop
jae
pop
adc
cwtl
inc
pop
mov
lds
dec
cmp
inc
adc
mov
jp
pop
fistl
lret
stos
pop
jg
icebp
je
or
test
xchg
imul
jecxz
xchg
movsb
mov
leave
sub
ljmp
lock
xchg
repz
mov
pop
icebp
cmp
mov
int
or
push
cli
and
jmp
loope
stc
cld
push
addr16
sbb
nop
mov
test
icebp
fadd
aam
fisttps
fiadds
push
aad
arpl
rol
shlb
dec
std
addr16
jp
cmpb
stos
loope
sub
cli
xchg
movsl
int3
cmc
lcall
movsl
mov
xchg
xor
cmpl
lock
je
cmp
gs
fs
int
sub
mov
stc
js
sbb
push
cltd
es
scas
pop
jecxz
push
add
fbld
push
stos
xchg
idivb
rorb
out
jmp
test
sbb
adc
mov
shr
jl
dec
mov
xchg
enter
and
jmp
pushf
sbb
ljmp
leave
xchg
and
stc
aad
loopne
xchg
stos
pop
in
jmp
fcmovnbe
in
scas
push
scas
mov
sbb
mov
dec
sbb
enter
push
sbb
ret
movsb
push
ret
in
aaa
lahf
jecxz
aaa
mov
fdiv
fldl
into
into
cmp
test
add
add
inc
mov
jne
adc
dec
inc
lret
pop
shl
sub
fnstenv
ret
inc
jno
add
mov
xor
pop
cwtl
or
fwait
loope
xor
add
idiv
rcll
xor
jo
adc
scas
sbb
cli
xchg
and
popf
dec
ljmp
dec
jo
jno
mov
sub
jecxz
pop
popf
pop
mov
scas
scas
mov
fsubrp
mov
lock
push
mov
jne
addr16
xchg
les
ror
out
rcl
mov
jge
sbb
fdivrl
mov
lods
or
bound
imul
adc
imul
rcrb
mov
rorl
xchg
out
adc
and
cmp
dec
stc
sub
inc
addl
add
out
mov
mov
adc
aad
mov
dec
sbb
mov
insl
cmpsb
es
jg
fldl
and
mov
cli
cmpsb
ja
stos
ret
cmpsl
arpl
adc
test
call
test
sbb
iret
mov
xchg
add
add
xchg
jl
jo
orb
loope
xor
andb
inc
fimull
enter
divb
dec
cmp
js
push
lock
dec
daa
pop
mov
pop
nop
imul
jno
jle
adc
rcl
mov
dec
xchg
bound
mov
xchg
lcall
sub
addr16
jmp
int
adc
mov
lret
jg
push
jb
cmp
es
jge
cmp
fisubrs
arpl
xlat
push
aaa
imul
sbb
addr16
out
adc
sarb
data16
into
sbb
int
sbb
aam
sbb
insl
scas
aas
clc
out
mov
movb
lock
or
adc
jbe
push
sub
jmp
iret
out
jle
in
je
xorl
mov
hlt
imul
mov
inc
mov
imul
lods
pop
in
pop
insl
in
lock
je
repnz
add
ss
int3
add
and
movsb
inc
cmpl
lcall
pushf
idivl
and
movsb
push
pop
addr16
je
cmp
inc
ud2
pop
xor
ljmp
mov
cmp
push
mov
movsb
mov
pop
je
xor
sbb
loopne
jp
in
dec
sub
call
in
es
lahf
add
loop
jo
mov
cwtl
bound
pop
jp
push
idivl
outsb
mov
loop
scas
insl
xchg
mov
sub
mov
outsb
adc
mov
idiv
mov
test
sub
stc
push
movsb
mov
cmp
rorb
fbstp
sub
mov
repnz
mov
jns
inc
add
test
adc
jbe
push
and
sbb
out
adc
dec
sbb
jg
loop
sarb
sbb
mov
push
fbld
fsub
addr16
mov
ja
ss
aad
bound
pop
loop
adc
xchg
push
cld
call
jmp
inc
push
pop
xlat
mov
loope
popf
adc
jge
outsb
imul
mov
mov
fisubrs
push
fidivrs
ret
jl
jg
push
movsb
mov
test
das
xchg
mov
mov
mov
cwtl
popa
cmpl
aam
movhps
dec
sbb
stc
push
adc
mov
cmp
push
dec
lcall
inc
fmuls
in
addr16
sub
fxch
out
and
xor
jno
sub
icebp
adcb
movntq
mov
pop
jecxz
pop
rorb
push
scas
jnp
xor
mov
mov
pop
and
cld
fisubs
fmuls
inc
or
sbb
xchg
add
mov
cmp
cld
jo
inc
mov
inc
push
push
sahf
and
movsb
gs
jae
int3
xchg
jecxz
mov
int
mov
sbb
xchg
pop
enter
cmpsb
pop
cmp
adc
push
jb
cmp
out
stc
mov
sub
push
test
or
mov
xor
test
mov
stos
pop
inc
insl
int
xor
gs
xor
adc
ret
dec
pop
bound
pusha
push
pop
jmp
ss
or
ficoms
in
jnp
mov
arpl
xchg
or
hlt
fadd
xor
inc
out
xchg
pop
sarb
jno
shlb
mov
jmp
shll
sbb
lret
pop
pop
xlat
mov
jp
js
jg
ss
jae
mov
sbb
stos
push
bound
in
sub
out
push
and
xchg
or
xchg
repz
stos
outsb
cmp
hlt
pop
rclb
xchg
jns
js
out
loop
data16
xor
xchg
cmp
add
notl
xor
pshufw
sbb
mov
int
sahf
mov
mov
inc
xchg
adc
jns
jae
push
pop
inc
mov
je
adc
rcrb
sub
clc
fs
xchg
fldl
gs
sti
mov
lods
mov
jne
out
jp
cltd
or
mov
iret
notb
imul
sti
add
xchg
pop
iret
push
aaa
icebp
push
cmp
testb
es
dec
and
mov
outsb
fcomps
ja
pop
push
js
pop
cltd
dec
mov
adc
sub
repnz
cld
mov
inc
clc
push
dec
add
outsb
cmp
cmp
xlat
fwait
add
fsubrs
xlat
jmp
sbb
mull
sti
mov
cmpl
or
inc
je
adc
mov
mov
in
cs
into
push
mov
xor
adc
adc
testb
jp
sbb
mov
xor
xchg
into
out
cmp
jmp
pop
lcall
inc
lods
dec
inc
jnp
pusha
aad
or
sbb
test
sti
test
loopne
cwtl
pop
sub
cmpsl
inc
clc
cmp
and
iret
rol
icebp
dec
and
mov
pop
add
cmp
and
jp
push
push
cmpsl
cmpsl
mov
add
std
push
xlat
leave
mov
out
popf
loopne
lea
icebp
sbb
or
fs
lods
sub
push
in
into
cli
xchg
dec
inc
and
addr16
test
idivb
fwait
iret
dec
in
clc
pop
pop
hlt
sub
test
repnz
xchg
popf
stc
push
out
int3
sub
cwtl
outsb
dec
test
mov
jne
enter
dec
dec
cmp
jg
int
filds
push
rcr
jp
adc
pop
mov
aas
frstor
mov
or
outsw
ja
std
frstor
push
xchg
test
shlb
add
lods
push
fs
cmp
in
out
add
gs
gs
xor
dec
rclb
mov
out
pop
push
xchg
jo
dec
pop
push
xorl
dec
lock
mov
push
ds
push
stos
enter
add
cmc
mov
dec
mov
aas
push
lods
inc
int
es
mov
xor
ret
std
pop
sub
dec
insl
sahf
sub
adcb
jno
or
aam
mov
shlb
xor
test
mov
imul
mov
imul
test
subb
ljmp
jne
mov
insb
notl
pop
addr16
sbb
hlt
nop
and
cmc
cmp
unpckhps
add
inc
pop
insb
dec
mov
xchg
adc
test
sub
adc
out
jp
push
loope
mov
ja
test
sub
arpl
jl
xor
aad
decb
add
cmc
jnp
cld
sbb
adc
in
insl
xor
sbb
adc
xchg
xlat
xchg
inc
test
mov
mov
jle
mov
xchg
cld
mov
jno
pop
gs
push
imul
stos
push
test
arpl
push
cltd
nop
lock
dec
loope
loop
loope
lods
lods
shlb
or
or
nop
xorl
lahf
add
sbb
pushf
out
jnp
sbb
in
xlat
fldenv
and
fdivrs
adc
dec
xor
loop
mov
orl
pop
lcall
movsl
dec
imul
adc
mov
pop
inc
nop
sub
movsb
shl
test
int3
xor
test
imul
pushf
and
jle
mov
mov
add
xchg
gs
and
pop
filds
xor
push
cmc
ficompl
int3
or
pop
jp
stos
imul
inc
rcr
mov
adc
add
jecxz
loopne
cwtl
mov
and
pop
pushf
mov
mov
or
loop
int
mov
loopne
shrl
dec
pop
cmp
mov
fwait
ret
addr16
mov
or
repz
mov
clc
dec
fsubrs
daa
jae
out
pop
xlat
xchg
fnstsw
dec
inc
ja
cmp
pop
xor
mov
jbe
pushf
dec
and
repnz
xchg
fstpl
or
or
cli
lret
fstpt
mov
lea
adc
leave
popf
out
std
lea
lret
xor
push
mov
daa
jle
std
inc
jns
inc
xchg
fstl
imul
mov
and
add
test
test
roll
sub
and
sbb
xor
or
insb
sub
cmp
jecxz
pop
addr16
fs
loop
push
int
dec
push
cmp
stos
push
addl
lcall
push
xchg
push
and
add
lcall
add
pop
hlt
or
sbb
mov
cmp
pop
ret
jne
test
pop
in
insl
and
mov
or
outsb
mov
mov
mov
bound
mov
add
push
pop
fdivs
cmp
xor
scas
push
xor
xchg
movsl
push
xor
cltd
jns
mov
das
inc
enter
cmp
sub
gs
add
mov
stos
clc
stos
cmp
push
stc
push
je
xchg
or
int3
mov
scas
add
stos
cltd
xchg
mov
pop
stc
mov
jbe
aam
mov
arpl
jg
sarl
neg
out
sbb
cmp
jnp
enter
inc
je
or
test
and
jmp
add
sub
jmp
fldenv
mov
mov
mov
call
or
jecxz
inc
fistps
jmp
push
pop
and
xor
add
adc
lock
imul
insb
dec
test
hlt
mov
subl
outsb
jnp
pusha
mov
cmp
lds
add
xchg
repnz
pop
sub
fwait
cmp
in
rolb
inc
and
nop
dec
pop
dec
sbb
cmp
out
sbb
or
and
mov
adc
xor
sub
mov
and
enter
fimull
adc
add
mov
gs
or
es
mov
push
xor
inc
in
xchg
ret
lds
sub
flds
add
push
dec
and
in
or
cmp
jmp
sub
add
fisubs
sbb
mov
mov
sbb
push
push
cld
nop
xchg
pop
inc
xchg
xchg
dec
insl
cmp
int
cmp
loope
mov
push
adc
out
push
inc
inc
pop
or
test
push
scas
jg
and
mov
mov
xchg
mov
lods
xchg
push
cs
cwtl
stc
and
je
adc
pop
xor
cmp
nop
sub
sub
push
add
push
repz
pop
jb
lds
mov
sub
mov
scas
push
ja
xchg
xchg
push
popa
imul
das
imul
jb
cwtl
test
push
cmp
ret
push
xchg
not
int3
icebp
push
adc
outsl
das
xchg
rclb
sti
arpl
scas
loope
cmp
pop
mov
icebp
xchg
mov
cld
push
ja
stos
daa
xor
rcrb
sar
adc
imul
cwtl
aad
mov
add
inc
inc
sbb
dec
jnp
ret
in
fwait
or
sbb
in
lret
loope
jns
cwtl
mov
push
cmc
mov
out
and
lock
mov
cmp
add
hlt
push
xor
mov
shlb
loope
inc
enter
adc
icebp
daa
lods
push
or
add
sbb
shlb
mov
sub
mov
or
xchg
push
pop
fsubs
jne
dec
aad
stc
dec
mov
pop
jmp
pop
imul
jg
jl
out
pop
dec
adc
insl
icebp
mov
fs
xor
inc
xchg
sbb
je
pop
aam
mov
rclb
sub
rcrb
fadd
lods
shlb
and
in
mov
jae
test
inc
mov
and
shll
imul
mov
pop
lods
xchg
add
add
out
pusha
dec
jae
or
xlat
orb
xor
adc
rclb
loop
test
shlb
sbb
sub
mov
ja
xorl
jecxz
inc
in
xchg
into
cmpsb
xor
call
mov
xor
repz
cmp
dec
movsl
mov
adcb
aas
pop
add
pop
dec
addr16
mov
fcomi
lcall
pop
push
clc
xor
sahf
repz
sbb
sahf
mul
andl
dec
xchg
std
in
movsl
les
js
fistl
jle
out
sbb
das
xchg
fcmovnbe
and
mov
mov
xor
mov
insl
pop
iret
out
jecxz
std
xor
adc
shll
xorb
push
jecxz
sub
sbb
inc
or
bound
sub
call
mov
stc
inc
xchg
arpl
in
push
int
lcall
dec
ljmp
push
out
xchg
icebp
pop
aad
movsl
push
ror
ja
clc
xchg
sub
mov
subl
lds
mov
mov
or
test
loop
jg
sbb
pop
aaa
sti
mov
sub
jle
jg
mov
dec
xor
mov
mov
sub
fwait
sbb
pop
mov
xchg
aaa
sub
shll
mov
daa
push
jo
push
cmc
fsqrt
xchg
lcall
cmpsl
jl
mov
mov
jno
adcb
mov
inc
xorb
cmpsl
stc
mov
mov
jo
pusha
imul
xchg
out
testl
jmp
xor
jmp
sub
mov
fisubs
das
sub
pop
jge
fmuls
into
test
mov
test
sbbb
jge
into
sahf
inc
testl
fisubs
xchg
insb
arpl
enter
enter
bound
ja
or
rcll
push
imul
test
push
ja
cmpsb
sub
push
test
jge
jl
adc
ret
xchg
sbb
ds
ret
sahf
sbb
sub
dec
pop
data16
jecxz
cmp
hlt
jle
rcrl
xor
adc
jmp
push
pop
rol
sub
movsl
xchg
lds
mov
stos
lcall
movsl
mov
cmp
and
adc
imul
cmp
aaa
inc
insl
jmp
and
popf
out
adc
mov
push
pusha
or
bound
ret
test
add
xor
repz
mov
into
push
int
pusha
adc
jg
dec
sti
sbb
jp
std
mov
and
inc
pop
xchg
jbe
dec
aam
xchg
xchg
add
lcall
mov
push
icebp
lock
inc
aaa
push
mov
cmpsb
pop
mov
ja
mov
sahf
xor
add
test
dec
fucomip
cli
fnstsw
mov
ror
inc
xchg
out
fsubs
pop
loope
or
sbb
cwtl
adc
push
add
add
shlb
dec
out
scas
lock
lcall
pop
call
test
inc
in
addr16
mov
faddl
adc
mov
sbb
imul
jge
add
push
es
sbb
lods
and
cli
ret
int3
pop
repz
pop
out
add
test
jle
add
and
dec
and
pop
hlt
jl
pop
xor
cs
cs
into
rolb
fwait
ret
xor
fldcw
xchg
inc
pop
sbb
jmp
scas
sub
and
jno
aam
insl
stos
mov
ret
xchg
sub
fs
inc
in
fwait
or
push
pushf
loop
fchs
jle
lcall
sub
add
cmp
fimuls
rorb
pop
adc
insb
lods
sti
out
xchg
xor
scas
repnz
sub
ror
inc
fisubrl
xor
imul
mov
lret
mov
stos
cmp
scas
inc
jg
cmp
loope
add
mov
gs
out
xchg
dec
inc
push
inc
cmp
push
sub
pop
xor
fisttps
insl
repnz
mov
imul
and
mov
imul
int3
stc
ds
push
push
outsl
sub
lret
paddq
addb
push
dec
jp
xchg
mov
dec
cltd
cmp
stos
addl
das
rcr
and
jl
sbb
inc
test
adc
enter
rol
jmp
lods
jp
or
push
pop
and
xchg
inc
mov
jae
sub
rcrl
adc
push
mov
jle
and
gs
dec
repz
cmp
sub
xor
sub
or
push
cs
stos
aam
and
dec
inc
insl
jp
andl
push
ljmp
xchg
call
in
test
scas
adc
out
imul
scas
ljmp
outsb
jmp
not
mov
inc
pop
js
pusha
in
lret
adc
rcll
int
insl
std
cmpsl
in
sarl
pop
pop
cmpl
and
add
imulb
dec
jb
mov
sahf
lock
in
lahf
xchg
mov
test
ds
dec
nop
inc
mov
lret
clc
fistpl
clc
pusha
mov
jl
enter
inc
and
dec
mov
testb
in
movsb
dec
rorl
pop
adc
fsubrl
mov
enter
sahf
mov
mov
std
xor
push
mov
xor
test
enter
idivb
mov
fstpt
fnsave
or
decb
push
pop
sbb
pop
and
push
adc
fistps
adc
cmc
or
xor
jl
or
jnp
add
mov
fdivs
fdivrs
ja
loop
jae
mov
xor
sub
mov
insb
jns
mov
fidivs
adc
or
cmpsl
insl
xchg
adc
mov
xchg
xor
stc
rcrl
arpl
mov
mov
cwtl
mov
lret
lret
sbb
call
int3
stc
cmp
or
xchg
dec
sub
mov
xchg
and
test
int
addr16
mov
push
stc
xor
arpl
rcr
mov
xlat
add
mov
fstl
popf
addr16
sbb
adc
cmp
mov
jecxz
int3
sub
sbb
inc
testb
push
xchg
addr16
pop
xor
or
xor
in
and
lret
inc
outsl
and
roll
dec
pop
xor
lock
sarb
cmpsl
test
popa
inc
daa
test
xchg
adc
push
and
jbe
ss
cmp
repz
mov
mov
inc
dec
shl
cwtl
ja
fs
push
shlb
sbb
loope
addr16
lds
test
pop
sbb
push
out
push
ss
mov
test
fcomip
in
aas
int3
mov
mov
pushf
xchg
test
mov
int
ja
call
xlat
cmp
mov
xor
dec
or
xchg
test
push
pushf
or
scas
dec
and
sub
imull
rclb
xchg
push
inc
fmuls
sarl
add
add
pop
sub
jl
insb
lock
push
iret
inc
imul
mov
inc
ds
xor
xchg
xchg
ss
dec
stos
lods
push
xchg
movl
push
mov
cmp
sbb
add
testb
out
ret
testl
jmp
cmp
mov
pop
lods
pop
aaa
arpl
in
mov
js
pop
ds
add
rclb
imul
fistpl
adc
mov
nop
int
lcall
cld
mov
stc
in
add
cmp
mov
cltd
test
incl
push
jbe
push
fstps
in
xchg
and
scas
push
mov
xchg
lods
jp
dec
test
pop
fwait
scas
add
mov
inc
mov
test
cmp
jae
adcl
fwait
gs
in
mov
out
inc
jl
cmpps
xchg
mov
pop
dec
and
mov
in
bound
lret
pop
xchg
idiv
pop
mov
sahf
das
call
lods
xor
test
mov
add
cli
jecxz
pusha
mov
sbb
jb
mov
rolb
or
sbb
fs
sub
std
pop
push
sbb
or
ss
hlt
jae
jle
mov
cmpsb
dec
aas
mov
repnz
shll
or
jb
mov
push
push
mov
loope
sub
and
int3
mov
mov
into
jbe
arpl
inc
push
push
jno
mov
enter
mov
cmc
jecxz
mov
addr16
pop
push
jns
mov
add
out
decb
adc
sub
push
cwtl
xchg
inc
push
adc
setle
mov
call
sbb
adc
stos
mov
xlat
cmp
sbb
shr
sub
sbb
notb
movb
gs
mov
cwtl
out
jo
sub
call
divl
daa
push
xchg
lods
outsl
les
aaa
pushf
jle
dec
movl
sbb
mov
mov
scas
or
pop
fs
sub
jb
xchg
push
loopne
jbe
pop
ret
arpl
xchg
xor
sbb
cmp
xchg
xor
pop
in
inc
pop
sbb
jno
xchg
imull
addr16
dec
loope
mov
ss
pusha
dec
cmp
xor
xchg
stc
into
pop
rcrb
movsb
xor
fiadds
aas
mov
add
or
aaa
add
xchg
mov
inc
sahf
jge
imul
push
pusha
jmp
pushf
or
cmp
sbb
mov
xor
je
xorb
mov
hlt
sahf
sub
xchg
pop
lods
jae
xlat
ja
mov
inc
outsl
fcmovb
mov
sub
pop
xchg
cmp
dec
and
insb
rcll
mov
push
out
mov
shlb
mov
sbb
mov
pop
dec
loope
enter
shrl
cmpsl
dec
testl
repz
mov
sbb
insb
addl
mov
cmp
insb
jne
xor
test
pop
xchg
lods
add
dec
cmp
jmp
and
pop
cltd
sti
mov
pop
xor
fsubrl
push
sbb
pop
mov
xchg
cli
xchg
in
pop
adc
pop
mov
imul
adc
and
xor
divl
or
lods
leave
push
or
dec
aas
mov
je
sti
ja
in
into
je
scas
data16
and
mov
and
add
dec
sub
cmc
push
mov
cmp
jbe
push
inc
leave
mov
mov
ret
int
mov
cwtl
jle
ljmp
outsb
insb
adc
jo
popf
insb
vminss
nop
or
sub
cmp
mov
dec
mov
jl
imul
push
loop
je
out
and
int3
or
xor
jmp
rcr
xchg
pop
mov
mov
idivb
fisttps
lret
or
mov
in
lods
fs
int3
sbb
stos
jbe
cmp
mov
ret
and
jl
adc
mov
or
iret
lods
adc
dec
cmpsl
fidivrs
sub
mov
sbb
inc
mov
rclb
lcall
mov
or
mov
bound
jo
add
test
mov
outsl
fbld
imul
ljmp
and
mov
xchg
jge
ret
dec
in
loope
xor
rorb
add
shr
pusha
add
adc
rcll
int
pop
jnp
loope
cmpsl
lds
test
outsb
pushf
out
pop
cwtl
xor
mov
arpl
sbb
pop
fcmovnu
or
ret
out
rolb
or
test
jbe
lcall
jmp
xor
mov
icebp
gs
mov
mov
lods
xchg
cli
pop
push
testb
cmpsb
je
mov
incb
cs
mov
filds
mov
and
jb
jl
inc
jp
clc
test
stos
movsl
fwait
push
fcos
mov
in
fnstenv
jb
fcomi
je
sbb
lock
or
fs
xchg
mov
or
sub
xor
ss
mov
pop
jle
aas
xor
iret
subb
or
pop
icebp
adc
and
sbb
scas
insb
pop
enter
adc
test
std
pop
sahf
mov
mov
das
aam
je
pop
das
filds
jl
fistl
inc
lea
aad
pop
inc
jb
pop
lcall
xchg
mov
scas
add
push
mov
xchg
mov
xchg
mov
fcom
flds
out
js
mov
sub
xchg
rcl
int3
mov
pop
ja
imul
mov
pop
sbb
dec
je
mov
lock
imul
cld
inc
push
cmp
fildl
inc
mov
pop
lock
cmp
iret
xlat
daa
cli
jle
cmp
dec
cltd
fistpll
jecxz
bound
andl
xor
scas
push
stos
mov
inc
std
jg
repnz
ja
mov
pop
decl
insb
inc
in
bound
cld
outsb
and
clc
ljmp
ljmp
push
rorl
sub
add
sbb
in
inc
out
and
pop
mov
jge
cmp
shl
adc
pop
dec
negb
shrb
in
add
cmc
notl
lods
inc
add
mov
mov
push
ret
jno
cmp
stc
push
pop
scas
hlt
pop
ja
ss
xchg
outsb
lds
adc
push
fmull
insb
subl
lahf
scas
inc
mov
and
shll
adc
sub
mov
insl
mov
inc
pop
sbb
mov
xor
xchg
bound
icebp
dec
sub
dec
and
cmp
mov
cli
and
xor
jmp
cmp
cmp
xchg
adc
mov
sub
enter
mov
mov
or
lret
sub
shlb
or
bound
xor
sbb
xor
pop
flds
shlb
push
xlat
ds
push
aas
jne
and
adc
aad
inc
push
push
js
inc
movsb
addr16
pushw
dec
jmp
mov
loopne
sbb
mov
cmp
inc
cmc
gs
dec
std
stos
sbb
movsb
andb
lods
cltd
bound
dec
or
sub
in
mov
scas
pop
inc
repz
push
test
out
test
xchg
inc
sarb
mov
jae
mov
out
imul
cli
inc
gs
jecxz
outsl
dec
enter
mov
ss
xchg
sub
dec
aaa
jecxz
lret
or
cli
pop
aaa
cmpsb
cwtl
stc
adc
mov
mov
xor
cmp
ss
pop
shrl
div
and
inc
or
xchg
adc
push
push
out
inc
push
das
fdiv
sti
push
jmp
or
jno
ss
pop
js
jge
cld
addr16
pop
std
js
lds
adc
jp
ljmp
pop
sub
xor
fisttps
jno
cli
mov
xor
daa
insl
xchg
push
xor
dec
pop
imul
inc
repz
sbb
add
repz
push
fsubr
lods
jmp
inc
adc
dec
loopne
movsb
mov
add
aas
test
push
sub
lods
shlb
mov
adc
inc
scas
and
cwtl
inc
mov
xor
cmp
and
stos
loope
movsl
lods
hlt
sub
adc
adc
int
packsswb
rdmsr
inc
mov
xchg
mov
push
and
push
jnp
jl
mov
fwait
dec
gs
ret
es
jnp
rcpps
sbb
inc
cmp
data16
xchg
mov
cmp
rcrb
add
rorl
insl
in
sbb
sub
cmp
push
mov
jl
add
mov
and
mov
mov
jl
mov
jb
je
and
mov
loope
or
add
mov
xchg
push
and
in
mov
sub
inc
das
pushf
lcall
pusha
xchg
jno
and
sub
mov
sub
ljmp
add
xchg
loopne
adc
mov
nop
arpl
mov
dec
inc
inc
mov
xor
daa
mov
lahf
sahf
mov
xchg
shll
movsb
in
out
dec
sbb
ret
inc
adc
push
into
mov
les
lods
mov
scas
aad
adcl
or
repz
loopne
cltd
and
inc
adc
or
daa
sub
fwait
xchg
xchg
mov
xor
mov
scas
fisttpl
fistl
cli
je
loopne,pn
mov
mov
lods
mov
je
inc
and
out
and
dec
aaa
sub
daa
push
fimull
int3
jne
push
jns
movsb
add
adc
cmp
pusha
sbb
jo
fstl
aas
sahf
cmp
mov
aas
rcr
aas
push
out
or
sahf
in
cli
push
mov
sub
aaa
mov
aas
fcomps
aaa
in
lods
aas
cmp
mov
xlat
lret
mov
jbe
sub
cmp
jnp
add
scas
ds
mov
fistpll
cwtl
push
xor
insl
in
push
ficoml
js
mov
loop
ret
jp
inc
out
push
cltd
out
shl
bound
add
in
or
sub
xchg
inc
xor
cmpsl
mov
aad
xor
loop
jae
add
add
jbe
cmp
xchg
cmp
negl
xor
hlt
js
daa
in
mov
lahf
jne
xchg
js
jle
out
dec
xchg
mov
or
and
mov
cltd
cmpl
cs
scas
mov
rolb
test
out
lds
aas
testb
and
ret
and
clc
pop
cmp
insl
mov
lahf
lret
add
jns
or
and
or
cmp
mov
aas
rcrl
jne
fidivrl
xorb
dec
jecxz
jo
add
and
mov
xchg
xchg
aas
pop
ljmp
test
inc
add
jg
or
clc
mov
mov
hlt
ja
push
lds
rcr
shlb
push
rcrl
sbb
leave
sub
cmp
cmp
or
adc
mov
scas
fwait
cwtl
sbb
cltd
or
fs
fs
add
xchg
mov
lret
imul
xchg
or
lcall
rcr
mov
push
stos
popa
cld
xchg
outsb
movsb
cs
pop
mov
pop
push
and
ficoml
cld
out
iret
shll
int3
dec
test
xor
pushf
xchg
add
pop
shll
dec
or
test
mov
addl
lods
cmp
out
dec
cmpsl
mov
mov
push
shrl
imul
pusha
push
dec
adc
in
pop
int3
bound
aad
jnp
and
jl
mov
in
add
nop
fs
jnp
cli
les
bound
daa
jle
dec
pop
mov
repz
ret
push
paddd
inc
fsubrl
jne
inc
dec
sub
add
or
cmpsb
push
fnstsw
fdivl
adc
push
cmp
dec
lods
out
icebp
jne
xchg
lret
lods
sub
in
or
mov
jecxz
sub
fimull
xor
adc
or
push
popf
mov
mov
push
dec
pop
pop
add
lds
and
pop
jns
ja
js
test
xlat
push
popa
lret
cmp
lret
or
xor
xor
inc
cmp
cli
mov
pop
scas
or
gs
pushw
jl
enter
testl
xchg
das
fnstenv
xchg
ds
mov
es
popa
add
je
movsl
mov
ja
cmp
sub
or
sbb
or
xor
jb
ret
xchg
mov
lret
mov
enter
sub
in
pushl
push
fstl
dec
pop
xchg
dec
sub
es
jl
cli
icebp
inc
jnp
popa
and
pop
adc
out
das
mov
mov
jecxz
cmp
loopne
dec
ljmp
and
mov
scas
fsubr
sbb
mov
pop
sub
or
imul
cmp
shlb
mov
int3
cltd
inc
imul
mov
aas
gs
and
sbb
pop
sbb
je
push
stos
outsl
fsubl
and
clc
in
jg
ret
ret
push
adcb
insb
arpl
add
stc
jmp
inc
popl
cmp
lock
adc
inc
pop
pop
mov
imul
sub
mov
xor
jge
outsl
sub
lock
popf
cmp
xor
jle
adc
or
fiadds
out
rcr
rclb
mov
mov
push
sub
clc
mov
mov
cwtl
mov
pop
xchg
repz
adc
add
xor
fsts
sarl
jae
inc
mov
pop
fisttpll
outsl
icebp
outsl
cli
adc
sbb
lret
jecxz
jecxz
test
pop
pop
aaa
sub
cmp
test
mov
popl
mov
fs
icebp
inc
lods
jmp
fistpl
fiadds
cmc
mov
insb
int
psubb
sti
testw
out
out
call
loope
pop
xor
popa
ljmp
xchg
xchg
mov
lea
int3
mov
pop
mov
iret
jbe
mov
fisubrs
jp
stos
jnp
xchg
push
insb
testl
jp
rcrb
adc
push
mov
xchg
mov
out
lahf
xlat
in
jno
push
ret
add
sbb
nop
cs
cmp
jecxz
mov
dec
cmpsb
insb
pop
in
sbb
add
dec
aas
jge
inc
loopne
cld
rol
push
and
je
sub
jb
stc
lods
fsubrl
ret
test
scas
stos
in
ficoml
call
jnp
icebp
push
sub
xor
loope
jmp
mov
xor
into
sbb
cmc
clc
sbb
add
inc
jle
push
js
cmp
sub
lcall
push
loop
jg
sbb
int
movl
add
dec
scas
bound
mov
add
push
iret
mov
mov
imul
pop
xor
shrl
inc
cmpl
pop
or
fwait
lods
sub
leave
push
pushf
sub
cmpl
mulb
pop
xchg
test
movsl
fidivs
cld
cmp
out
out
sub
pop
nop
xchg
int
mov
aad
arpl
aas
repnz
jo
int3
jne
pop
int
cmpl
mov
xchg
out
stc
mov
jns
push
daa
popa
pop
mov
lds
icebp
xchg
jle
mov
lods
out
mov
xchg
ret
subl
or
aam
repz
jnp
push
xor
jmp
ja
push
ja
int3
sti
aaa
stos
sub
or
jbe
call
les
dec
add
pusha
fadds
push
mov
je
iret
pop
or
dec
enter
and
es
cmpb
cmp
add
mov
push
ret
leave
out
fiaddl
nop
cmp
mov
divl
gs
cmp
popa
push
loop
xor
repz
pop
inc
stos
lods
call
add
mov
ret
add
fistl
lea
and
popf
or
lock
xor
inc
xchg
cmc
add
out
jne
pop
scas
dec
xor
push
xor
daa
pop
adc
add
shr
pop
add
pop
cmp
rorb
push
lods
ljmp
xchg
mov
push
sub
xchg
test
test
push
jns
pushf
mov
mov
add
push
mov
add
mov
dec
in
and
inc
popa
stos
fsubrs
add
cli
xlat
les
pop
add
cmp
iret
daa
jnp
mov
loope
mov
mov
mov
xlat
movsb
mov
push
xchg
and
ret
ds
dec
mov
iret
in
stos
movsl
jne
clc
mov
test
dec
xor
das
loopne
dec
cmp
jl
fistps
lods
mov
shlb
and
pop
jae
push
pop
jns
jmp
movsl
int3
dec
add
push
jne
cwtl
mov
push
pop
mov
out
ja
mov
jae
sbbb
call
add
sub
lret
insl
mov
mov
jg
xor
fiadds
add
adc
mov
dec
mov
jmp
fsubl
test
dec
fistpll
inc
daa
dec
lcall
xlat
in
sbb
fcmovu
lret
arpl
mov
inc
rcrl
ret
inc
pushf
ss
cld
in
push
add
repnz
lcall
pop
popl
cs
scas
xor
stos
filds
in
shl
fwait
xor
sarb
sub
mov
hlt
xchg
movsb
mov
in
dec
and
in
pusha
jne
rclb
jge
hlt
inc
xor
xchg
xchg
jns
cmp
inc
jg
add
mov
xchg
out
sti
inc
jo
fdivr
sarb
mov
movsl
popf
mov
aas
cmc
adc
packsswb
cmc
pushf
adcb
push
test
inc
xor
jg
jo
dec
xor
int3
nop
mov
sub
mov
cmpsb
aam
inc
lds
xchg
movsl
gs
lcall
pop
and
loopne
imul
adc
out
mov
sbb
push
add
add
out
lret
insb
call
pop
pusha
mov
pop
push
scas
popf
xchg
and
pop
inc
sbb
xor
sub
movsl
sbb
pop
sbb
pop
lds
pop
loop
push
aaa
ljmp
push
add
xchg
mov
mov
mov
cmpps
dec
outsb
push
mov
push
mov
les
dec
stos
loop
fst
pop
cmp
movsb
jg
mov
arpl
aas
pop
jb
inc
imul
loop
aas
mov
loop
cmpb
movsl
fildl
clc
cmp
xor
dec
fwait
mov
std
ret
inc
stos
imul
push
xchg
inc
pop
jg
in
xchg
popf
stc
ja
loopne
xor
addb
aas
js
loopne
push
mov
stc
push
popf
fidivrs
and
sub
leave
cli
pusha
fistps
xor
rcll
and
orb
mov
mov
push
pop
les
jne
cmp
adc
pop
fisubrs
fsubl
jp
lahf
das
mov
push
mov
inc
fsubrl
movd
scas
ss
push
xor
fistpll
xor
jns
das
dec
enter
insb
aad
and
lret
dec
ret
xchg
cmp
addr16
dec
lcall
insb
rcr
clc
pop
and
inc
add
lds
sub
stos
insl
xchg
xchg
dec
cmp
loop
jle
pop
xchg
popa
out
inc
lret
pop
xchg
cmp
inc
or
pop
mov
lahf
out
or
mov
inc
mov
or
out
pushf
mov
aad
in
cmp
test
pop
jge
inc
sarl
sbb
jnp
mov
lods
lea
es
into
jg
mov
std
lret
std
dec
xchg
movsl
clc
mov
pop
or
or
mov
roll
xchg
insb
push
lods
lret
gs
dec
pop
shlb
sub
fstps
sbb
inc
outsb
mov
lahf
xor
mov
and
pop
testl
popf
inc
nop
divl
mov
push
sahf
mov
dec
dec
add
cmp
xlat
xor
sub
and
iret
cmp
xor
add
pop
pop
pop
mov
adcb
mov
adc
sbb
dec
out
fnstcw
sahf
xchg
aaa
sub
jmp
pop
pop
cmp
lret
adc
stc
mov
ja
enter
jecxz
sub
scas
repz
xchg
shrb
dec
jns
jmp
int
stc
sahf
push
scas
divl
pop
pop
mov
xchg
dec
inc
sub
pop
daa
mov
decl
pop
cmpsb
hlt
out
mov
push
mov
fnsave
xor
stos
jmp
imul
dec
xor
lcall
lods
call
jnp
xor
adc
adc
out
lds
xchg
and
mov
pop
mov
jl
cs
xor
mov
out
cmpsl
cs
jmp
jmp
xor
popa
xor
push
sub
icebp
clc
pop
out
pop
mov
clc
push
xchg
jno
xchg
mov
popa
iret
mov
sbb
icebp
popa
mov
aaa
push
add
adc
jo
movhps
stos
xchg
mov
adc
les
leave
leave
xchg
stos
mov
or
mov
jecxz
cmp
pop
mov
out
mov
loope
and
mov
mov
mov
pop
cmp
pop
xor
mov
out
movsl
pop
pop
int
mov
flds
in
cmp
mov
mul
push
dec
js
leave
pop
andl
jbe
lret
loop
ss
sti
push
stos
lret
test
pop
loop
mov
icebp
dec
stos
out
orl
movsb
dec
daa
fucomp
ja
fdivrl
nop
and
pop
xchg
jg
ds
push
mov
bound
jno
or
sub
pop
mov
lock
sbb
or
xor
outsl
in
fisttpll
aas
or
test
lret
xlat
ficompl
testb
inc
dec
xchg
icebp
int
arpl
mov
loopne
add
in
dec
lahf
out
mov
sbb
mov
jmp
mov
cmp
lret
mov
inc
mov
out
mov
sbb
xor
cs
dec
aas
call
adc
xchg
cmpsl
lds
inc
or
dec
push
leave
lods
into
hlt
lea
inc
inc
lea
push
mov
sbb
mov
lret
fldt
mov
jno
sub
sub
daa
dec
mov
inc
mov
fsubr
sti
fmuls
cmpb
jle
jmp
add
sub
push
cmpsl
xchg
scas
dec
test
dec
cmc
out
sbb
cmpsb
scas
movsl
rcrb
cmpsb
test
call
sbb
shll
lret
push
repz
push
mov
push
jmp
pop
adc
sbb
push
or
fldl
loope
and
sbb
sub
mov
loope
out
sub
stos
sti
mov
fs
mov
add
decl
push
add
pop
mulb
adc
cmc
xchg
dec
mov
inc
mov
xor
or
pop
sbb
jno
or
fiaddl
rclb
nop
and
inc
shll
dec
sbb
aad
aad
inc
aas
cmp
fwait
add
inc
inc
sbbl
es
mov
mov
mov
in
dec
fcoms
test
mov
sub
inc
inc
mov
mov
mov
loop
mov
inc
or
imul
xchg
ljmp
jnp
lret
mov
or
pop
add
push
cmp
pop
test
cs
int3
and
adc
cmc
insl
loopne
shll
cmp
and
jg
cmp
mov
xchg
jns
push
stc
jae
inc
dec
mov
pushf
push
scas
clc
xchg
mov
pop
int
dec
sub
lret
imul
pop
iret
cli
into
insl
dec
jnp
or
insb
adc
and
sar
les
push
stos
and
test
xor
pop
pop
insb
fnstenv
and
mov
adc
lods
pop
jl
shrl
out
push
gs
enter
push
and
push
xor
pop
mov
aam
int3
sbb
push
popa
mov
mov
push
fistpll
aad
or
mov
pop
sbbb
and
arpl
cwtl
nop
mov
sub
and
into
mov
test
or
enter
test
inc
mov
xchg
stos
insl
addr16
iret
pop
adc
lds
add
loop
jno
out
jmp
xor
xor
push
xor
pusha
es
adc
cmp
daa
hlt
call
shrl
or
xlat
sub
lods
xlat
sub
inc
pop
and
jg
xor
push
mov
and
int
add
pop
and
fmul
cmp
in
loop
sub
cmpsl
lds
sahf
xchg
test
in
pop
mov
pop
gs
es
xor
loope
add
push
and
push
adcb
push
pop
test
out
jg
fmulp
adc
push
int3
mov
cwtl
test
inc
push
push
dec
or
xchg
orps
jb
push
sarb
addl
add
pop
shll
mov
es
imul
in
sti
rorb
jecxz
inc
aas
lcall
jge
jmp
insl
jae
lds
push
adc
sbb
mov
stos
lret
mov
sub
mov
ss
mov
pop
pusha
sahf
incb
sbb
fisttps
dec
stc
es
mov
jmp
push
add
push
loope
or
sahf
jg
test
cwtl
in
mov
lods
loopne
sbb
push
aam
inc
fnstenv
cmp
sub
pop
mov
orb
add
mov
loop
les
mov
lock
jnp
cs
dec
xchg
sub
mov
add
scas
jge
sbb
shll
mov
push
push
out
fmuls
pop
imul
jle
xor
mov
sub
xlat
iret
jge
push
mov
sub
fstpt
mov
add
test
pop
xchg
xor
xchg
ficoml
dec
cltd
xlat
mov
xor
dec
ret
sub
loope
leave
or
outsb
xchg
or
rolb
fcom
xchg
nop
shl
enter
ds
and
insb
negb
mov
sbb
outsl
inc
and
push
loop
roll
insl
xor
nop
sbb
dec
mov
shl
ja
sub
inc
sti
aaa
xchg
sub
stos
and
and
leave
dec
push
and
loop
pusha
or
pop
shll
xchg
je
cmc
pop
dec
into
dec
sbb
std
sub
jp
pusha
push
xchg
cmc
das
xor
mov
cmp
mov
test
sbbb
sbb
and
aam
out
in
add
cmp
sbb
push
scas
xlat
out
scas
outsb
xchg
movsb
adc
mov
out
ret
lahf
mov
or
in
pop
sarb
icebp
push
add
jne
stc
lret
xchg
adc
imul
or
jno
inc
sbb
loop
pop
jnp
imull
rorl
fildll
addb
jne
rorl
inc
aaa
or
cmpsl
sub
inc
lock
pop
mov
jle
cwtl
cmp
lahf
ds
mov
fucom
push
jo
std
mov
shll
sbbb
les
adc
jo
cmpsb
push
cmp
cmpsl
sbb
int3
fiadds
psubusw
pop
xlat
test
imulb
pop
jg
cmp
and
xchg
pop
add
popf
mov
xchg
xor
cltd
in
shl
or
in
nop
sub
or
jp
and
ficoml
xchg
add
add
cld
test
pop
push
xchg
insl
movsb
faddl
dec
js
add
add
mov
xor
mov
test
jp
lock
arpl
or
aaa
mov
adcb
sub
iret
inc
push
je
add
movsl
dec
scas
sbb
inc
repz
test
pop
mov
jmp
sbb
sbb
out
andl
sbb
cwtl
push
push
and
mov
jecxz
xchg
jl
lret
dec
ret
sub
inc
cwtl
xchg
es
and
push
les
sub
sbb
fistpll
adc
insb
adc
call
loopne
and
push
inc
adc
push
orb
jp
lods
testb
pop
sub
push
fsubrl
or
or
nop
scas
sbb
lahf
ds
or
jmp
bound
xchg
in
xchg
dec
mov
sub
sbb
mov
cld
mov
test
inc
or
daa
xor
add
aas
fadds
ds
mov
je
xchg
inc
mov
push
call
popf
xchg
mov
fimull
aad
je
ss
lcall
dec
jp
pop
nop
cmp
dec
cs
adc
jmp
jmp
mov
in
adc
fistl
xchg
mov
dec
mov
mov
scas
push
xor
shll
and
and
nop
int3
mov
inc
popa
in
lret
jmp
lods
and
test
mov
mov
enter
inc
test
and
xor
push
mov
addr16
test
insl
aam
test
xor
arpl
mov
cmp
rorl
cmp
imul
into
sbb
push
in
xchg
es
jge
cmp
addr16
adc
js
mov
shll
idivl
xchg
push
ret
jmp
or
mov
add
insb
xor
sarb
mov
daa
shl
xchg
shrb
test
mov
imul
popf
insb
mov
sbb
add
cmc
cmpsl
jbe
bound
clc
push
xchg
ljmp
lcall
js
adc
add
popf
lock
jo
dec
daa
push
rclb
shr
cmc
cmp
mov
lret
jno
and
dec
mov
outsb
fldl
sti
test
stos
sub
outsb
test
testl
js
sbb
push
xchg
sbb
jbe
enter
test
cmc
jmp
out
je
sahf
ja
dec
mov
mov
adc
inc
inc
pcmpeqb
push
xchg
push
or
stos
insl
jno
add
ljmp
ss
popf
shrl
cmp
int3
ret
aam
mov
aad
mov
sub
or
cmp
jmp
jg
mov
aad
out
mov
inc
inc
inc
or
outsl
cmc
lgs
pop
hlt
out
sub
lock
clc
push
sub
push
add
clc
leave
inc
cwtl
fucom
subl
lods
sbb
std
or
data16
addr16
mov
jns
xlat
xchg
or
jbe
cmp
and
adc
adc
lods
aas
xor
adcb
cmpl
adc
sub
into
pop
push
mov
bound
xchg
insb
gs
pop
test
aam
push
mov
pop
sbb
mov
aaa
mov
pop
je
arpl
nop
push
cmp
fs
xchg
cmp
in
in
xchg
mov
push
lock
add
js
ret
ret
idivl
mov
in
and
xchg
mov
xchg
mov
lret
addr16
push
jl
adc
mov
xchg
gs
cltd
jl
push
jbe
xchg
inc
mov
icebp
mov
adc
sahf
mov
gs
mov
inc
mov
cmp
sbb
inc
jl
xor
jmp
insb
aam
and
imul
mov
push
inc
push
out
and
cmp
cmc
mov
jns
ds
xorl
or
mov
cmpsl
push
cmpsb
int
jne
aaa
fnstsw
out
add
xor
push
dec
sub
lods
pop
mov
movsb
pop
fisttps
mov
push
cltd
aad
aam
pop
push
call
pop
ds
mov
and
je
out
std
xchg
dec
or
ret
popa
test
fisubl
mov
cmc
xchg
adc
mov
add
leave
test
cmpsb
push
faddl
mov
add
jmp
insb
inc
dec
xchg
lcall
fsubp
das
repz
xor
fcompl
lea
pop
mov
out
push
cmp
jno
test
jge
out
inc
inc
mov
rclb
xlat
inc
hlt
jnp
pop
and
pop
cwtl
xchg
jns
insb
add
lock
rolb
dec
imul
or
adc
pop
sbb
lcall
xchg
cmp
fsubs
push
mov
test
sub
ljmp
dec
clc
aas
mov
test
xor
icebp
jmp
out
sbb
sarl
js
addr16
jb
dec
jle
xor
out
rcl
and
out
loope
cltd
imul
out
push
inc
jno
mov
xorb
aad
fucomip
adc
pop
repz
rorl
loope
adc
sub
fwait
xchg
pushf
test
ds
and
mov
fmull
mov
mov
dec
in
inc
cwtl
mov
dec
imul
in
xchg
clc
mov
imulb
and
or
leave
push
aad
je
add
jmp
popa
jnp
mov
out
insl
xchg
in
lods
mov
mov
mov
nop
or
sub
shrl
int3
cmp
xorl
fcmovnb
add
dec
addr16
fadds
rclb
loop
push
sbb
inc
out
in
and
xor
in
pop
jp
push
jnp
repnz
fnsave
cmp
inc
mov
jecxz
jo
inc
iret
lret
int3
adc
js
nop
incb
jge
dec
cmp
jp
pop
push
sub
into
xor
inc
loope
jo
fsubs
pop
das
jnp
or
cmpsl
xor
mov
imul
int3
adc
ja
loope
loopne
push
hlt
xchg
inc
mov
dec
mov
popfw
sub
cmp
pop
jns
adc
popa
cmpl
mov
sbb
dec
fmul
push
dec
sbb
lea
dec
sub
xor
ljmp
ret
add
shll
cs
push
daa
xor
daa
or
out
jecxz
insl
mov
and
cmp
inc
jg
or
and
inc
mov
mov
imul
add
loope
push
sahf
out
or
andl
or
cltd
push
jmp
push
std
test
inc
add
mov
sbb
lcall
test
xlat
test
mov
or
sub
shr
xchg
dec
out
fisubrs
sahf
in
xor
call
addl
aas
js
or
lcall
sarl
dec
push
loope
cli
scas
sbb
ds
jg
cmpsb
jmp
into
daa
mov
or
call
push
imul
cli
int3
push
add
cmp
and
jge
idivb
jp
fsubl
sub
cmpsl
inc
bound
xor
fbld
add
addr16
adc
das
loop
inc
jne
dec
stos
mov
lods
ret
scas
inc
xor
fwait
mov
cld
insb
fnstenv
out
jle
sbb
jmp
mov
in
inc
sbb
xor
test
mov
mov
daa
test
out
pop
inc
int
pop
lcall
fdivr
daa
sbb
cmp
push
clc
jp
mov
sbb
push
add
jmp
or
and
fnstcw
mov
imul
fldt
dec
out
or
lret
loopne
add
out
test
shll
push
mov
std
pop
mov
lea
adc
mov
dec
out
jae
rolb
stos
shll
scas
lods
xchg
decl
divl
or
pushl
mov
xor
push
andl
sbb
js
lock
sub
ror
dec
sbbb
mov
lods
xor
xchg
out
mov
lods
test
test
sub
shld
pop
in
xchg
lods
push
sbb
xor
jg
adc
xchg
xchg
mov
xchg
xchg
cmp
mov
mov
jb
fmulp
add
repnz
jecxz
adc
outsb
into
mov
add
push
sbb
mov
sarb
fsts
adc
mov
dec
sbb
mov
cmp
pop
push
std
mov
push
or
push
repnz
jmp
jp
aas
dec
es
aaa
jae
jbe
xor
lea
xor
sub
inc
push
mov
push
jge
cli
cmpsl
dec
in
popa
mov
cmc
and
repz
push
sub
stos
movsl
test
sub
movb
jl
call
dec
mov
hlt
icebp
cld
pop
jp
shr
push
or
adc
lret
fidivl
pop
data16
adc
lods
push
repz
ret
inc
mov
xor
adc
daa
in
mov
xchg
xchg
sbb
mov
filds
js
outsb
xchg
mov
pop
sub
fdivs
repnz
cmp
enter
leave
loop
and
inc
sbb
lret
addl
push
daa
push
dec
sub
inc
insb
mov
movsl
adc
int3
cmc
testl
and
clc
mov
aam
xor
dec
dec
push
sub
mov
out
scas
outsl
pop
jg
and
fiaddl
jns
neg
sub
or
sub
test
jmp
and
lret
je
xor
es
mov
mov
and
shrb
ds
mov
jnp
cmp
dec
jmp
and
jl
or
adc
add
push
insl
mov
cmp
mov
arpl
add
mov
dec
dec
cmc
mov
mov
mov
jns
sbbb
stos
mov
add
into
sarb
xchg
icebp
test
es
lahf
mov
fs
xor
sbb
cmp
cwtl
inc
mov
xchg
sbb
cmpsb
cmc
orl
imul
cltd
and
jp
and
mov
dec
dec
cld
std
cmp
pop
mov
and
and
xchg
sti
cmp
cmp
xlat
add
into
jl
arpl
cld
mov
jne
hlt
bound
jae
in
adc
mov
mov
xchg
loope
leave
push
inc
pop
mov
pop
jae
movsl
cld
sarl
sub
mov
pushf
mov
sbb
test
jb,pt
idivb
xor
out
sub
mov
sbb
jmp
ds
lret
daa
rolb
popa
shll
lods
cmc
jb
out
sub
jns
std
sub
das
mov
and
mov
xor
scas
dec
cmpsl
mov
add
flds
ljmp
cmp
sub
or
pop
hlt
sub
cwtl
int
inc
int3
xor
lds
into
cmp
jl
lds
jmp
sub
ss
mov
shr
fsubrl
loop
push
and
inc
out
or
ljmp
int3
or
popa
scas
iret
lock
loop
jge
stc
xor
mov
pop
lret
push
add
sub
jmp
inc
jle
jne
jo
pushl
mov
cmp
mov
cld
out
and
pop
imul
mov
add
mov
dec
sub
nop
mov
mov
xchg
pop
xchg
cltd
inc
mov
rol
hlt
sub
lods
lods
cmp
and
jmp
outsb
into
and
cmp
repnz
jno
jne
loopne
loope
inc
sahf
push
fdivrs
dec
pop
mov
test
insl
icebp
int
loope
mov
xor
cmp
shr
or
leave
cwtl
dec
mov
jecxz
push
pcmpeqd
xchg
pushf
lods
push
iret
mov
push
into
dec
pop
repnz
sarb
push
lea
push
add
xor
lahf
cmp
dec
cmc
push
insl
add
pop
lahf
lahf
push
jecxz
ret
xchg
jbe
xchg
loop
fnstcw
push
test
mov
stos
dec
and
cmp
cmp
or
subl
and
frstor
cmp
mov
enter
ficompl
add
aas
fistpll
mov
or
es
jo
jp
pop
mov
popf
pop
cmp
enter
cmpsl
mov
dec
stos
push
add
sub
dec
in
arpl
mov
outsb
repnz
repnz
mov
fistps
loopne
xor
fildll
loopne
jmp
add
nop
pop
pop
pop
xlat
cs
lea
dec
mov
fistl
shrl
xchg
inc
insb
inc
or
mov
and
mov
dec
scas
xchg
movsl
mov
lcall
bound
push
and
or
sbb
aaa
movb
fstl
les
test
lods
xchg
mov
nop
pop
cmp
stc
xorb
mov
mov
hlt
cmp
inc
leave
lods
mov
insl
jo
push
shl
outsl
lock
inc
mov
adc
jl
inc
test
fdivl
add
cmp
jmp
adc
in
hlt
fs
xor
mov
mov
jnp
fs
pushf
lcall
test
add
in
in
mov
adc
add
xor
lds
jge
dec
rorb
adc
aam
and
adcb
cmpsl
add
pop
mov
adc
jno
xor
pop
lcall
call
out
out
xor
dec
arpl
pop
mov
inc
pop
sub
pop
cli
adcb
and
dec
je
inc
mov
cmp
jl
cmp
pop
pop
jns
cmp
or
lea
xchg
inc
xchg
push
mov
lahf
lret
in
pop
cs
std
in
mov
jo
mov
movsb
imul
scas
xor
jb
and
mov
pop
enter
pushf
lock
pop
sbb
adc
mov
inc
xchg
movl
or
push
das
fcmovb
pop
mov
fisubs
add
sub
movsb
bound
mov
or
mov
mov
pop
icebp
aad
xchg
jle
lds
int3
rcrb
into
in
jle
loop
mov
jb
cld
xlat
lods
in
scas
or
mov
jo
lods
out
mov
popa
sub
mov
das
xchg
adc
xchg
daa
test
dec
xor
iret
scas
mov
das
ljmp
jmp
test
popa
pushf
xchg
lods
shr
inc
cmpsb
bound
sbb
out
pop
js
loop
push
mov
movsl
shrd
js
xor
mov
push
popa
mov
push
sub
in
pusha
sahf
push
lcall
xchg
scas
mov
test
push
aas
call
lret
out
mov
mov
xchg
sti
sbb
push
rorl
imul
dec
add
jae
jne
inc
xor
cmc
dec
add
out
cwtl
jge
lahf
dec
dec
lcall
lret
sub
mov
in
rcrb
add
test
adc
mov
movsb
rclb
outsl
xor
push
mov
call
mov
and
add
push
insl
xor
or
sub
insb
xor
fsubr
test
push
cmp
sub
mov
xor
and
repz
push
add
xchg
imul
scas
xchg
repnz
in
dec
notl
add
pop
inc
sbbl
shll
lea
aad
or
out
mov
imul
mov
cmp
push
xor
daa
clc
push
test
xchg
sub
dec
cwtl
iret
push
gs
imul
dec
or
or
jmp
and
adc
jg
adc
mov
pop
mov
mov
fs
pop
xchg
rcl
jae
mov
xor
les
out
lods
outsl
add
adc
lods
and
push
or
dec
add
pop
fisttpl
cmp
pop
sub
dec
fsubrp
clc
shll
sbb
repnz
das
mov
sbb
adc
mov
push
jnp
cmpsl
push
movsb
outsl
fcomi
adc
cmp
into
outsl
test
movsb
stos
mov
cltd
xchg
xlat
jecxz
mov
xchg
scas
jns
xchg
push
rclb
into
mov
stos
xchg
icebp
insb
jns
cmp
test
jl
cmpsb
aad
push
and
dec
call
cwtl
xlat
push
mov
adc
fmul
push
je
pop
ds
push
out
sub
insb
xorb
mov
loopne
mov
lcall
notb
lods
pop
popa
rcr
lods
test
fldenv
adc
push
xor
mov
f2xm1
ss
xor
pop
dec
pop
loope
sub
test
sti
daa
sbb
mov
pop
mov
aaa
or
out
xor
out
fcompl
or
fnstenv
adc
test
dec
push
xchg
jge
fmulp
sbb
dec
xor
and
out
inc
xor
scas
adc
daa
stos
sbb
lret
sub
pop
sub
fcmovbe
mov
hlt
mov
inc
pop
sub
insl
iret
cli
addr16
mov
ds
mov
push
push
adc
stos
xor
push
test
sbb
sub
in
rcrb
out
ljmp
dec
sbbb
cli
xchg
push
mov
roll
inc
dec
out
imul
scas
mov
xchg
pop
mov
push
inc
call
sbb
or
mov
lock
aad
pop
xlat
imul
sbb
ja
pop
cwtl
into
mov
adc
xchg
pop
cmp
hlt
push
div
aad
fcoms
inc
fidivs
xchg
frstor
leave
mov
cmp
and
fisubs
loop
sub
push
pop
ja
jo
into
jnp
aaa
cmpsl
push
fwait
dec
outsb
imul
jl
pop
xchg
lods
fwait
mov
nop
mov
fisttpll
lock
adc
adcl
je
or
stos
cs
mov
mov
stc
lods
leave
mov
fistpl
or
fdivrl
rolb
dec
sbb
jns
jp
scas
icebp
mov
testb
or
ja
sbb
into
nop
jne
push
xchg
add
loope
sub
add
push
xlat
xor
or
mov
dec
jl
psubw
push
loopne
pop
push
addr16
dec
lds
loopne
fistl
popf
add
int3
adc
push
jns
pop
js
push
mov
cmp
cmp
add
jns
aad
je
out
adc
jo
gs
jns
in
scas
lcall
cmpsb
jecxz
mov
stos
pushf
add
test
sbb
mov
mov
jg
movsl
push
scas
inc
addr16
ja
and
push
imul
shlb
and
sub
adc
cmpsl
mov
jbe
call
dec
mov
mov
inc
jp
andl
sub
adc
loop
pop
and
push
int
fwait
jl
ficomps
scas
testb
pop
in
cld
push
orl
mov
test
jne
movsb
jno
pop
mov
imulb
js
js
pop
adc
jns
pop
mov
xchg
push
jno
add
cmp
sub
out
pop
outsl
outsb
aaa
pop
adc
addl
inc
mov
mov
rolb
jns
sbb
sub
fcmovne
sub
ja
jge
je
jl
or
popa
mov
push
pusha
in
mov
fldl
sarl
cmp
insb
mull
fs
sbb
inc
mov
and
pusha
out
test
inc
std
out
loop
mov
mov
es
insb
push
dec
push
push
test
jns
sbb
popa
jo
pop
shlb
mov
cmp
jae
dec
pop
inc
sbb
fcmovne
push
js
rcrb
icebp
and
xchg
cwtl
adc
clc
sbb
push
jp
or
cwtl
aad
or
xchg
pop
and
loope
rcrb
and
xchg
cmpsl
mov
inc
aas
mov
sbb
push
xchg
mov
imul
push
jbe
jp
out
mov
and
fmull
dec
jmp
add
stos
daa
scas
mov
adc
mov
and
add
cmp
incl
in
inc
inc
jl
lods
pop
loopne
and
cmpsb
mov
iret
dec
pop
or
cmp
adc
jge
stos
adc
out
adc
xchg
sbb
add
das
jns
out
adc
lcall
jno
sbb
jle
mov
fbstp
cmp
jne
push
add
leave
or
mov
xchg
mov
lock
jle
arpl
jns
and
mov
addl
outsb
push
sbbl
inc
sub
adc
jns
push
mov
popa
aas
outsl
sub
xorl
sub
cmp
fdivl
loop
dec
adc
ja
imul
mov
icebp
popw
out
fcoms
inc
sub
out
adc
js
and
pop
leave
push
insl
xchg
dec
fldl
adc
imul
pusha
inc
pop
cmpsb
xchg
lret
movsb
lcall
div
pop
push
push
test
shrb
in
scas
mov
mov
dec
mov
fsts
pop
xchg
mov
add
sbb
push
jbe
fmul
sahf
cmp
jno
ret
js,pt
clc
xchg
mov
pop
movsl
out
cwtl
mov
shr
jmp
mov
xor
fistpl
dec
mov
push
push
mov
nop
aam
dec
out
or
rcrb
jns
popf
pop
filds
and
fidivrs
mov
mov
sbb
popf
loop
push
sti
or
cmp
sub
adc
mov
lea
jmp
cmp
mov
data16
push
call
xchg
cld
mov
mov
movsl
fnsave
mov
daa
and
sub
adc
pop
fiadds
xchg
sti
inc
repz
cmpsl
mov
pusha
mov
pop
addr16
push
cli
cmpl
push
adc
ficomps
mov
or
mov
dec
adc
test
fcompl
adc
aas
mov
jae
clc
rcrl
adc
mov
int3
rcrb
mov
sub
fmulp
rorl
push
mov
xlat
fs
push
fsub
fwait
bswap
cmp
sub
gs
jno
and
mov
adc
mov
lea
rcl
mov
add
jmp
add
push
loop
das
push
icebp
aas
imul
mov
xor
enter
xor
pop
mov
inc
lods
inc
sbb
or
cmp
das
int
gs
mov
add
or
icebp
push
std
push
ffreep
push
aaa
popf
inc
dec
fidivrl
xor
cmp
and
xchg
pop
in
dec
and
adc
and
aaa
mov
data16
pusha
pop
inc
mov
or
ja
arpl
nop
cmp
jb
mov
popa
cs
das
adc
or
jecxz
jns
insb
test
aas
adc
mov
sbb
popf
xor
mul
dec
fcoms
sti
gs
adc
cmp
xchg
ds
mov
add
pop
fiaddl
pop
pop
addb
jno
xchg
jns
mov
shr
or
stc
subl
hlt
push
lret
cli
push
dec
lahf
pushf
add
and
dec
bound
mov
ja
adc
adc
push
pop
inc
xchg
dec
fwait
jb
sbb
cmpsb
sub
sub
mov
push
ds
push
sub
push
imul
lret
hlt
push
ret
xchg
add
mov
push
loopne
and
out
adc
push
out
test
xor
popf
inc
mov
sbb
es
adc
inc
ret
mov
inc
addr16
enter
clc
orb
xchg
xchg
ljmp
int3
inc
mov
int
filds
je
xor
outsl
cli
outsl
jmp
mov
or
push
or
test
rcrl
dec
or
add
cmpl
shlb
lds
cmp
dec
xchg
or
popa
bound
and
push
mul
popf
popa
call
inc
xchg
push
int3
or
push
out
fwait
lcall
rclb
dec
popa
repz
dec
icebp
cmpsb
pop
mov
inc
les
pop
movsl
imul
inc
pop
dec
scas
jnp
mov
mov
pop
leave
ud0
repnz
inc
loope
insb
push
adc
lds
les
or
xor
push
or
stos
sbb
pop
repnz
rorb
mov
cmp
mov
cmpsb
mov
pop
repnz
push
pop
mov
add
loopne
lods
mov
andl
push
rorl
and
insl
push
mov
arpl
mov
not
mov
clc
sahf
sbb
out
push
pop
or
and
xchg
cmpsl
cld
sar
rep
sbb
adc
dec
jae
push
out
xchg
adcb
xor
mov
jns
cli
jmp
stc
mov
mov
adc
cmp
push
out
jp
xor
insb
icebp
mov
inc
jge
std
mov
xchg
jnp
add
test
in
mov
movsl
int3
or
fsubrp
xchg
fucom
ficompl
cmp
popf
xlat
pushf
testl
or
mov
sub
data16
xor
push
mov
in
jecxz
sub
sbb
dec
ljmp
xchg
or
push
sahf
mov
enter
push
stc
jo
shrl
pop
rcl
jl
repz
fidivs
cs
gs
nop
jns
mov
adc
or
xchg
popa
mov
in
add
lret
push
xchg
xchg
outsl
mov
xchg
jbe
inc
fadds
mov
addb
testb
outsl
mov
subb
or
ficoml
and
fisubl
sti
mov
popf
mov
data16
fwait
insb
xchg
lods
lods
fwait
mov
mov
mov
cmpl
and
arpl
imul
mov
fcoms
ret
insl
adc
fstp
dec
cmp
aaa
cwtl
fwait
mov
push
lock
sub
lahf
jecxz
mov
lods
cmp
jae
lahf
pop
out
mov
mov
in
push
addr16
cmp
cmpl
dec
stos
jo
push
lds
cmp
lret
mov
lods
pop
aam
stos
mov
sub
mov
lret
cmp
xchg
hlt
add
mov
out
xor
pop
xor
fcmove
mov
nop
into
inc
aas
std
in
cmp
mov
pop
dec
lods
sbb
jno
jp
push
cwtl
xchg
mov
jnp
fmul
push
mov
cltd
push
jl,pn
xchg
mov
outsl
iret
mov
sub
cmp
pop
or
cmc
pop
popa
lcall
cmp
xor
mov
inc
aad
ss
stc
push
pushf
push
gs
idivb
mov
pusha
ficomps
and
inc
test
in
inc
push
ljmp
dec
cmp
fistl
lods
repz
fsubl
cmp
dec
popa
clc
cs
adcb
inc
cwtl
inc
mov
mov
lea
out
dec
xchg
cmp
mulb
jne
dec
xchg
mov
mov
push
sbb
loop
sbb
xchg
es
cmc
pusha
aam
hlt
mov
fs
mov
dec
scas
push
xor
cmp
lahf
or
sub
mov
sub
aaa
pop
and
pop
xchg
pop
aad
cmpsb
fwait
dec
leave
inc
sarb
jp
int3
das
rol
aad
push
jmp
lcall
or
icebp
xor
je
cs
stos
or
cmp
fwait
jo
push
xchg
sarb
jp
test
enter
push
in
adc
mov
pop
lret
or
and
cmpsb
or
inc
xchg
xor
rcrl
bound
xorb
mov
fsubrl
mov
movsl
cmp
fwait
or
xchg
faddp
jne
sbb
scas
sti
cs
ds
clc
ficoml
aas
ret
popf
cmpsl
fs
pop
dec
cli
adc
add
dec
std
movsb
and
xchg
xlat
into
inc
mov
lret
les
xor
dec
inc
jge
sbb
pop
loopne
fmulp
mov
ficoms
cmpsl
sub
adc
aas
enter
mov
and
call
cmp
test
xchg
or
xchg
pop
outsb
add
adc
hlt
sub
into
push
addr16
out
mov
mov
fsubrl
cmc
lahf
xor
aas
ja
xor
rorl
dec
xchg
pop
xchg
add
inc
jle
imul
ss
xchg
mov
or
mov
inc
test
out
xchg
dec
icebp
mov
loopne
lea
ds
sub
shlb
fnstcw
call
in
test
inc
clc
inc
xor
hlt
aad
push
and
lock
xchg
cmp
popa
sti
jns
fs
push
fstpt
cmp
leave
jbe
or
jnp
movsl
mov
test
imul
stos
sti
dec
lods
adc
repnz
push
roll
insl
add
xchg
cltd
sbb
add
xlat
dec
fdivrs
cmp
jmp
jmp
jne
insl
enter
cvtps2pd
fsubp
movsb
or
cmp
or
sub
pop
sbb
in
jo
push
out
fwait
xchg
es
sbb
jge
push
ret
mov
pop
int
fcomps
cmpsl
xchg
mov
insl
mov
jmp
sti
lods
lcall
fisubrs
add
jbe
sub
jp
or
rclb
mov
jb
movsl
cmp
addl
fldt
pop
mov
adc
pushf
xor
fmulp
and
sub
icebp
aad
adc
aad
std
stc
cmpb
and
fcompl
mov
mov
cltd
iret
filds
sbb
sub
loope
jmp
mov
push
int
cs
jbe
xchg
daa
movsb
add
sbb
sbb
jmp
jne
adc
inc
es
cli
inc
cmc
push
addr16
addb
mov
das
push
and
or
xor
add
add
rclb
daa
pop
fs
mov
jp
aad
lahf
inc
dec
sbb
jnp
pop
cmpl
es
sbb
mov
loopne
in
xor
notb
jmp
lods
jnp
pop
pop
ud1
xchg
cmp
jg
shl
adc
xchg
jp
lahf
push
jmp
jle
or
xor
or
pop
and
je
es
mov
je
or
popa
stos
adc
push
out
or
cltd
mov
sar
roll
loope
shlb
xor
ret
icebp
int3
sub
mov
insl
cwtl
mov
jo
jns
jg
divb
lret
or
xorl
push
mov
lcall
mov
xchg
neg
je
or
outsl
fwait
jge
fidivl
jo
pop
or
pop
int
push
mull
add
idiv
and
dec
xlat
jp
sbb
sahf
pop
pop
frstors
in
cs
lcall
fcomi
adc
or
out
adc
xor
mov
addr16
push
dec
outsl
cmp
dec
scas
repnz
adc
mov
stc
sbb
mov
ja
inc
inc
mov
mov
arpl
or
mov
int3
aas
daa
test
sub
testl
mov
test
jecxz
data16
daa
sub
outsb
push
loopne
mov
jb
dec
fdivr
jo
and
cmp
adc
push
iret
scas
divb
pop
cld
add
sub
mov
push
subl
mov
jl
ret
xor
fld
mov
xchg
xchg
or
in
pop
or
ljmp
dec
insb
in
dec
shlb
cli
xchg
push
arpl
js
decl
xor
sbb
sbb
mov
fwait
jmp
inc
or
inc
jbe
test
scas
mov
imul
dec
fldenv
mov
mov
inc
icebp
xchg
lods
shr
or
sti
test
mov
cmp
fimuls
adc
add
test
mov
cmp
cmc
jnp
icebp
lahf
adc
imul
das
dec
sub
sub
stos
sub
xchg
fwait
mov
mov
mov
adc
jmp
lret
lret
dec
sub
lretw
adc
mov
out
inc
xor
or
inc
pop
fmulp
std
cld
mov
je
xchg
pop
dec
insl
xchg
jb
mov
inc
mov
push
and
cmc
lock
ret
out
dec
out
roll
mov
jo
lods
mov
mov
popa
xchg
mov
xchg
mov
xchg
xchg
lcall
inc
cmpsb
jbe
xlat
cld
mov
int
xor
xchg
mov
xor
jnp
mov
rcrb
xor
pop
sub
push
fnsave
imul
js
idivl
mov
adc
out
or
leave
sub
mov
add
cltd
push
imul
cmp
xor
fcomps
lret
data16
frstor
ficompl
push
psrld
jle
movsl
jne
hlt
jo
mov
sub
hlt
lret
push
mov
and
inc
mov
scas
xchg
mov
pop
mov
cmpsb
lret
mov
pop
sarl
sub
mov
arpl
push
mov
mov
jmp
repnz
cli
cld
fsts
pop
mov
push
es
xchg
das
xor
fildl
scas
decb
mov
inc
jns
xor
xchg
jb
sti
mov
notl
add
insb
out
xchg
pop
mov
sbb
fistl
int
push
pop
dec
frndint
lret
xchg
push
shlb
xor
stc
loop
sbb
dec
mov
add
out
cld
cmp
mov
xchg
add
jns
roll
jecxz
mov
adc
imul
jne
insb
mov
inc
adc
sbb
pop
mov
and
in
imul
stos
mov
adcb
push
pop
mov
lahf
pop
push
addr16
push
xchg
andb
push
dec
push
sub
fisttps
push
mov
and
adc
movsb
iret
mov
push
push
ljmp
mov
mov
dec
insb
mov
lods
xchg
mov
stos
js
fwait
and
js
popa
add
sbb
adc
loop
ja
rcl
pop
cmp
aaa
hlt
jb
pusha
pop
add
xlat
xchg
imul
pop
out
nop
data16
bound
xor
shrb
in
ret
jo
mov
cmp
and
aas
or
fcoms
mov
sub
adc
dec
xchg
xlat
dec
loope
mov
jbe
mov
jo
cltd
cwtd
mov
sahf
push
les
mov
mov
dec
push
fucomip
xchg
cmp
xchg
sti
jnp
test
lahf
mov
pop
lock
jns
out
xchg
xor
pop
mov
and
jp
fisttpll
ds
mov
es
push
cmpsl
ret
icebp
mov
fcomi
push
in
inc
ficomps
inc
ljmp
mov
sub
dec
cmpsl
lret
lcall
jl
push
popa
push
mov
paddq
mov
stos
adc
sub
dec
lods
incl
push
inc
lock
in
inc
jmp
leave
stc
jae
xor
dec
testb
testb
outsb
scas
cltd
xlat
ret
out
lcall
add
mov
adc
insb
mov
es
or
adc
icebp
xchg
lret
and
jno
jle
cmp
ljmp
pop
bound
push
setae
pop
xchg
test
hlt
icebp
in
lock
movsb
movsl
jmp
mov
aam
mov
fwait
and
and
flds
pop
clc
or
inc
es
and
lcall
xor
mov
hlt
ljmp
xor
and
xor
js
test
jge
mov
jge
jb
inc
jb
aaa
inc
orb
jne
and
ret
xchg
pop
outsl
das
jmp
clc
shl
inc
das
in
enter
ljmp
mov
push
mov
cmp
inc
cmp
mov
push
inc
cltd
andl
shlb
cmp
imul
mov
xchg
mov
push
mov
jmp
cli
in
mov
adc
fists
stos
mov
out
bound
out
fwait
int3
mov
add
jle
test
int
xchg
jmp
scas
add
cmp
xchg
cs
int
jmp
add
mov
popa
jb
aam
shll
dec
jns
imul
cs
imul
sahf
adc
aaa
popf
pusha
mov
add
push
gs
jo
leave
shlb
popa
movl
jge
sarb
lock
push
dec
add
mov
xor
shrl
sbb
cli
movsb
adc
in
sub
pop
inc
fmuls
lret
std
stos
sub
fcomi
mov
dec
add
pmaxsw
pop
jae
mov
mov
push
pusha
ljmp
adc
ljmp
repz
xchg
mov
xchg
fcoms
xchg
pop
xor
lock
rcrl
pop
cmp
or
jno
jns
pop
clc
lods
mov
loop
push
sub
sub
fsubs
inc
fxam
insb
xchg
loop
movsl
mov
dec
mov
xor
mov
jne
rcrl
xchg
sbb
mov
stc
jno
mov
mov
jecxz
xorl
aaa
and
cltd
push
fwait
push
xchg
lods
jp
pop
icebp
rclb
inc
sahf
fimull
divl
fmulp
push
mov
cmp
inc
cwtl
adcl
mov
cmc
or
loop
daa
stos
hlt
cmp
mov
test
dec
ja
push
mov
out
push
pop
fmuls
inc
and
jp
sbb
xchg
xchg
push
mov
push
outsb
test
mov
int3
vmovddup
in
sub
or
inc
sub
and
clc
icebp
aas
into
add
out
push
xchg
dec
jl
notb
imul
pusha
popa
jp
cmp
pop
push
cltd
fstp
xchg
cmpsl
sbb
lahf
mov
mov
lods
jge
dec
sub
jmp
sahf
je
into
xor
lcall
add
cmc
mov
mov
xor
jae
and
cmpps
mov
add
cmp
orl
sbb
scas
test
lock
push
inc
and
movsb
lcall
std
sbb
xor
pop
and
cmp
xchg
lods
sub
repnz
sub
adc
pop
subl
add
push
push
jge
push
scas
test
adcb
push
int
xchg
andl
repz
enter
jle
imul
movsb
mov
subb
fistpll
adc
push
xchg
dec
jmp
pop
fld
push
mov
pop
mov
push
jo
jge
repz
xchg
ss
cmp
inc
out
clc
outsl
dec
divl
jne
mov
fcoml
sbb
and
in
pcmpgtw
push
mov
and
jae
xchg
arpl
gs
and
mov
icebp
fwait
clc
lea
popa
inc
cltd
push
aad
dec
push
or
std
sub
rol
movsb
mov
pop
popa
inc
inc
dec
or
mov
dec
div
adc
cmc
push
mov
loop
daa
pop
bswap
mov
and
or
dec
add
jo
jne
mov
add
es
sahf
mov
cltd
and
pusha
xor
repz
in
in
js
sub
repnz
xchg
sub
xor
loope
cmpsl
sub
push
xlat
arpl
mov
insb
and
sbb
jne
int3
xchg
jecxz
incl
lret
cltd
aas
dec
pop
push
repz
mov
ja
pop
mov
mov
xor
lcall
xor
jnp
cmc
and
pop
mov
jecxz
test
cmp
xchg
pop
jnp
outsb
adc
jmp
sahf
divl
dec
cwtl
xchg
cs
out
add
sub
roll
mov
push
adc
test
cwtl
push
mov
cmpsb
xchg
nop
cmp
loopne
lahf
xchg
shll
dec
dec
stc
mov
mov
jae
leave
lret
andl
xor
ss
out
fstl
inc
jno
or
dec
loopne
sbbl
mov
pop
adc
cmp
jno
out
in
aam
sbb
sub
insl
pop
loopne
and
cmpsl
mov
jne
clc
daa
jp
xchg
mov
jmp
aam
cwtl
popf
roll
push
xlat
mov
pop
add
sarb
push
fstl
xchg
pop
cld
xchg
addr16
scas
push
sahf
loope
and
mov
adcb
xchg
xlat
aas
jmp
arpl
data16
sbb
sarb
mov
mov
sub
and
and
lods
xor
lcall
xlat
lods
xchg
push
mov
push
jnp
enter
lods
lret
and
pop
cmp
jmp
cltd
lea
pop
mov
pop
loop
xor
repnz
add
mov
nop
mov
push
sbb
jecxz
mov
xchg
test
repnz
test
sti
cmpsl
cli
cmp
stos
je
dec
jp
sbb
jl
idivl
add
adc
mov
mov
inc
ljmp
xorl
mov
cwtl
jns
xor
bswap
mov
ljmp
mov
test
lret
mov
jecxz
mov
dec
xor
fidivl
cmc
out
fisubrs
clc
shrl
out
pusha
arpl
jl
arpl
daa
inc
incl
adc
sti
jnp
aad
ss
inc
inc
dec
lret
mov
dec
fisubs
dec
jmp
fildl
fs
jle
jmp
loopne
xor
mov
cld
inc
push
push
xchg
fisubs
std
push
je
icebp
data16
lahf
punpckhwd
jg
in
jl
jns
add
cmpsl
popf
mov
pop
psrld
inc
in
cs
fdivl
iret
insl
clc
xor
popa
arpl
cmp
pop
lret
fstpt
fildll
cmp
repnz
loopne
add
or
imulb
xchg
or
xchg
and
or
sub
jge
jmp
push
sub
sub
jno
cmp
dec
lods
xchg
or
push
add
insb
push
fdivl
imul
xor
mov
jmp
jae
lea
andl
mov
insl
mov
push
mov
cwtl
push
adc
inc
pop
fimuls
jbe
cmp
xchg
push
popf
and
pop
jnp
mov
gs
popf
outsl
cmp
out
dec
negb
push
loopne
into
fcmovb
xchg
jmp
loop
lods
mov
insb
push
mov
mov
pop
data16
xchg
jle
xchg
orl
pop
mov
cld
adc
insb
pop
mov
ret
and
sub
out
enter
or
jecxz
aaa
or
cmp
mov
lods
lahf
lret
lahf
pop
push
mov
jg
out
xchg
and
pop
xchg
pop
mov
pop
dec
in
dec
inc
mov
or
daa
mov
outsl
popa
cmp
push
fdivrl
mov
mov
lods
addr16
sub
jno
aas
pushf
pop
enter
mov
or
in
xor
mov
inc
clc
adc
data16
dec
sub
add
lret
jbe
jmp
sub
lahf
and
xor
mov
ja
icebp
jp
gs
outsb
cmp
and
movsl
mov
das
mov
popa
std
ret
dec
hlt
stos
test
cmp
mov
in
sub
bound
aad
push
push
push
fs
push
mov
jb
not
xchg
jno
jle
mov
aaa
ja
xor
xchg
xchg
cs
aam
add
inc
dec
mov
push
inc
pop
or
call
cmp
push
test
mov
inc
pusha
cmpsb
or
xchg
jle
loope
dec
daa
pop
cwtl
pop
jecxz
cltd
cmp
iret
cld
sub
mov
jmp
sub
jg
sub
jbe
jbe
mov
cli
fisubrl
sbb
jnp
mov
mov
or
mov
ret
pop
hlt
repz
pushf
mov
cmp
push
shl
loop
pop
les
stos
sbb
out
sbb
mov
mov
xchg
bound
into
or
xor
das
into
addr16
loop
lods
xor
add
and
pusha
add
inc
shrl
rorl
loop
popf
mov
ret
pop
mov
call
mov
sub
scas
xor
cmp
inc
add
sub
and
orl
inc
add
xchg
les
sub
sbb
xchg
xchg
fidivrs
enter
ja
push
sbb
cmp
inc
out
das
flds
mov
jmp
xchg
out
fdivrs
out
mov
jbe
cmp
cli
repz
xchg
repz
pop
stos
jb
xor
dec
jo
add
jp
out
aas
cmp
ljmp
fisubl
push
test
in
jmp
nop
sub
xor
mov
add
dec
mull
xchg
mov
cmpsb
or
jae
fwait
mov
shlb
sahf
mov
pop
je
push
test
push
xchg
dec
mov
cmc
pop
mov
push
mov
out
fldl
push
pop
xchg
adc
out
enter
int3
and
xor
call
cwtl
xor
out
sbb
xchg
in
sahf
leave
inc
cmp
inc
or
cmpsl
movsl
je
jns
cmc
sub
pusha
or
sub
xchg
mov
iret
mov
loope
pop
add
jmp
push
and
aam
data16
out
xor
aam
push
incb
xchg
sti
aad
js
lret
adc
call
xchg
push
inc
mov
cld
mov
loopne
cmp
lods
aas
xchg
add
es
leave
push
aad
cmc
je
std
xchg
add
mov
loopne
mov
mov
pop
inc
xchg
inc
mov
mov
jp
push
sbb
data16
cld
pushf
std
les
lods
add
xor
movsl
shl
jp
lds
push
mov
inc
push
aad
scas
aam
add
test
push
movsb
lods
add
jae
jb
add
shlb
scas
jmp
xor
xchg
je
mov
sub
cltd
ret
jb
push
pop
ret
adc
stos
mov
dec
fst
pop
imul
pop
jle
dec
push
jge
xchg
enter
xor
sahf
out
lret
xchg
jb
mov
data16
push
out
sbb
and
adc
pop
fcmove
push
insb
mov
cmp
or
mov
mov
jnp
out
xor
mov
push
cmpsl
cld
pushf
xor
sub
cmp
xor
and
sub
std
pop
pop
movsl
push
sbb
dec
dec
out
in
icebp
in
dec
push
daa
in
je
dec
mov
aad
je
lods
out
pop
aas
hlt
mov
nop
fs
xchg
je
add
mov
decb
aam
cmpsl
mov
pop
mov
or
sti
inc
scas
aas
orb
or
loope
mov
je
fsubrs
int3
cld
bound
mov
stc
mov
xor
outsl
cmp
push
pop
jmp
mov
mov
mov
inc
std
mov
out
int3
lret
ljmp
call
sti
jo
out
scas
cmp
push
jg
xchg
shll
fdivs
notl
cmp
js
inc
fs
leave
jne
ds
cmpsb
sbb
mov
pop
mov
out
ret
outsl
push
lahf
sub
psrlq
xchg
sbb
ds
jnp
fdivrl
sbb
movsl
imul
add
xlat
jmp
sub
inc
jbe
mov
jb
xor
ljmp
testl
loopne
shrb
dec
mov
ret
call
ss
pop
ret
push
add
fidivrl
dec
mov
inc
pop
leave
leave
cmp
insl
addr16
pop
cmpsb
gs
rcll
or
pushf
mov
add
in
out
adc
adc
or
scas
bound
xor
cli
xor
repnz
pop
mull
adc
in
inc
aad
dec
and
fwait
and
jmp
push
das
jne
jae
dec
adc
call
clc
xchg
push
aas
mov
sub
sub
fnsave
call
outsl
test
jne
and
popa
aaa
mov
cmc
arpl
sti
shlb
adc
mov
gs
aad
xor
add
push
cmp
mov
adc
pop
push
shrb
adc
data16
and
std
test
cmp
mov
sahf
or
cmpsb
outsl
adc
jg
cmp
and
xchg
dec
cld
popa
pop
pop
fbld
stos
jno
and
enter
popf
push
popa
pushf
pop
pop
xchg
inc
inc
add
fs
or
clc
loopne
cmp
or
stos
leave
ljmp
out
loopne
sbb
ret
sub
js
dec
add
aam
outsb
mov
sbb
cmpsl
mov
ja
push
push
cmp
adc
cmpsb
pop
leave
inc
push
inc
lods
gs
shll
push
popa
jne,pt
pop
dec
les
mov
pop
ret
lahf
int
shrl
aas
adc
fmuls
flds
xchg
pushf
mov
lock
inc
aad
daa
in
mov
sbb
adc
sub
adc
or
inc
cmp
or
mov
add
vmwrite
and
mov
leave
inc
stc
imul
inc
cmc
inc
dec
cmp
movsl
jecxz
int
add
ficoms
jl
or
mov
xchg
inc
mov
into
jp
mov
sti
test
add
movsb
mov
fs
pop
or
rcrb
insb
jbe
sbb
leave
cmp
sub
inc
or
or
cmpsl
jo
jl
movsb
in
pop
imul
cmpsb
nop
lods
or
lds
ja
sub
call
push
hlt
or
cld
xchg
aam
inc
std
insb
sub
or
dec
adc
xor
arpl
or
ret
notb
xlat
sub
inc
jns
movsl
lods
mov
push
or
xchg
aam
movsl
dec
test
jbe
push
and
add
and
gs
dec
jns
mov
xchg
mov
fldenv
xchg
sbb
xchg
das
loope
loope
shrb
pop
ret
mov
push
inc
popa
dec
in
inc
cmp
je
pop
and
ficoml
jmp
cltd
pop
adc
faddl
adc
mov
icebp
lea
xchg
or
jmp
ja
insl
hlt
mov
push
xlat
ss
fiaddl
fisttps
popf
or
sbbl
jecxz
adc
and
jne
sbb
adc
iret
jecxz
mov
jg
jno
test
and
pop
mov
pop
fcmovnbe
shlb
jp
sbb
mov
addl
int3
fpatan
lods
dec
xorb
stos
loopne
popa
iret
xchg
ja
sahf
das
mov
cmpsb
mov
or
fidivs
insb
clc
call
pop
xor
push
js
jno
aad
popf
push
mov
test
jecxz
movsb
insb
loope
outsl
xchg
aam
add
inc
xchg
add
sub
cmp
mov
add
xchg
mov
ret
xor
mov
mov
mov
subb
jg
inc
jne
dec
xchg
sub
mov
out
dec
push
xchg
dec
inc
jp
imul
mov
movsl
fildl
jno
adc
imul
ret
shll
scas
xor
xchg
subl
add
xorl
adc
shlb
push
xchg
jge
lcall
adc
std
mov
and
pop
add
clc
lods
jmp
lods
mov
or
mov
or
and
inc
fbstp
lea
das
inc
cmp
add
lds
add
xor
sbb
mov
push
sbb
inc
das
lods
xor
add
push
push
xor
cmp
adc
pop
icebp
lods
pop
adc
jbe
fwait
adc
mov
test
es
sbb
adc
movsb
or
iret
pop
dec
ret
or
loopne
cli
mov
cmp
xchg
pop
cmp
orb
repnz
imul
inc
push
push
add
jecxz
cs
loop
xor
out
cs
inc
or
repz
js
add
xchg
jmp
lock
leave
insb
pop
repz
xchg
inc
xor
scas
inc
add
imul
sbb
pop
inc
xchg
test
mov
in
fsts
push
mov
pop
add
jp
aaa
loope
int
xor
cwtl
jbe
lahf
or
adc
cs
sarb
jo
and
scas
nop
ror
mov
lret
aas
rolb
scas
imul
jecxz
in
adc
pusha
inc
imul
mov
sahf
sbb
xor
daa
dec
lds
jnp
mov
ljmp
push
arpl
or
xchg
dec
fimull
stc
xchg
adc
adc
push
jb
jmp
pop
xchg
movsl
lods
lock
adc
or
and
sub
mov
push
xor
jecxz
mov
push
xor
inc
mov
imul
icebp
jo
loopne
add
or
in
clc
sbb
push
scas
test
fsts
pop
pop
rol
push
shll
add
jg
fidivrl
fs
push
mov
fs
pusha
outsb
xor
lret
aad
inc
push
stc
fnstenv
adc
mov
into
daa
sbb
ret
pop
and
std
dec
xchg
orl
xchg
sub
dec
cmpb
mov
and
lahf
lds
lret
mov
loope
push
pusha
mov
xor
adc
into
xchg
mov
mov
xchg
ljmp
cmc
dec
add
js
xchg
inc
repz
or
dec
std
cmp
fisttpll
cmpsb
push
mov
dec
add
clc
enter
and
decb
mov
sti
ret
test
cmp
mov
stc
sbb
or
sbbb
aas
loop
adc
movsb
fsubs
ficoms
rcl
xlat
lock
xchg
repnz
cmp
pop
pop
or
cmp
clc
inc
mov
or
dec
push
cmpsl
cwtl
repz
or
xlat
sti
aas
inc
sub
jmp
cs
lret
lock
ret
icebp
lahf
mov
loopne
xor
mov
mov
and
adc
jne
stos
lcall
adcb
push
inc
push
aam
mov
push
rcl
pop
and
leave
enter
arpl
sbb
pop
xchg
pop
repz
or
daa
sbb
mov
add
xor
cmp
fbld
loopne
xchg
movsb
inc
hlt
cmc
xchg
lock
xor
inc
pop
mov
inc
dec
out
sbb
aad
xchg
test
mov
inc
enter
cmp
add
xchg
xchg
xchg
pop
cld
adc
ja
or
and
jns
xchg
cli
in
out
push
cmpsb
xchg
insb
push
cmpsl
xchg
out
lods
push
int3
adc
test
lock
add
fnstcw
cmpsb
sbb
jb
adc
addb
add
xchg
or
movsl
or
out
pop
jecxz
sbb
mov
mov
ja
sti
int3
push
add
mul
les
inc
pushf
sub
jns
or
push
push
out
cmp
fildll
sub
arpl
insl
aad
add
pop
sbb
dec
jnp
fldenv
ret
repnz
jp
xor
addr16
pop
pusha
outsb
jmp
notb
cmc
adc
stos
cmp
dec
pop
out
xlat
inc
lods
es
shll
icebp
das
ds
ds
lret
adc
add
jae
sbb
in
daa
ds
sub
inc
data16
cli
fsubrl
cmp
fmulp
clc
pop
add
push
jmp
mov
mov
nop
lcall
push
xchg
fidivrl
es
pop
inc
loop
lea
fstl
mov
jle
adc
xchg
incb
cwtl
rclb
iret
push
mov
in
icebp
xchg
pop
imulb
fstpt
mov
xor
mov
cmp
aam
rol
jle
hlt
ret
stos
fsubs
stc
push
mov
addr16
push
and
mov
aaa
jnp
cs
pop
cwtl
push
push
pop
push
lahf
out
imul
xor
mov
je
fmuls
sub
push
jg
push
rcrl
mov
ja
data16
add
cmpsb
and
dec
xor
lcall
fs
add
push
popa
adc
out
pushw
inc
ret
dec
in
mov
push
out
adc
out
pop
and
lret
fnstenv
movsl
les
imul
inc
pushf
in
movsb
repz
cmpsl
int3
faddp
cld
dec
sub
imul
mov
jge
jmp
push
add
addl
mov
fwait
movsl
mov
pop
test
loop
iret
nop
adc
add
adcl
imul
fsubp
dec
leave
inc
mov
push
pop
mov
mov
dec
sbb
xchg
test
aaa
bound
idivl
add
clc
cwtl
lods
clc
imulb
and
scas
xor
mov
out
sbb
aad
aam
iret
push
lods
jl
push
dec
jmp
inc
or
add
adc
int3
stos
cmp
pop
sahf
xchg
jl
push
in
jp
xor
push
mov
inc
lret
movsb
push
jecxz
aad
mov
aam
dec
in
xchg
sub
test
xor
mull
cmpl
cmp
gs
jge
dec
pop
loope
pop
fistps
in
sub
jmp
xchg
arpl
mov
mov
fisubl
push
outsb
and
push
lahf
mov
repnz
xchg
and
adc
sub
or
aad
add
jg
mov
test
jecxz
pushf
sbb
fisttpl
jb
lret
adc
sub
loop
lcall
jmp
inc
sub
shlb
cli
add
jbe
mov
lret
xchg
mov
lods
cmp
or
add
insl
push
dec
test
nop
les
jge
inc
mov
fs
and
icebp
js
cltd
dec
sahf
das
or
jae
int
dec
and
xor
adc
pop
lret
dec
ja
or
xchg
and
sbb
mov
in
and
push
pop
sbb
pop
jle
aaa
out
inc
or
sbb
das
jo
push
add
sbb
and
icebp
jae
and
movb
mov
and
cmp
and
fcomps
cmp
and
sbb
mov
push
xor
mov
sbb
andb
dec
jmp
inc
or
ljmp
xchg
mov
imul
xor
cld
lret
cmpsl
adcl
sub
mov
arpl
dec
aas
sub
and
and
stos
shr
data16
dec
push
jns
jmp
jecxz
ja
xchg
jno
and
aaa
decl
insl
mov
imull
sbb
and
push
sub
int
mov
sub
sti
inc
pop
test
test
jle
cld
rorb
aas
add
test
jae
dec
nop
fildll
cmp
shll
mov
ret
add
mov
jg
xchg
jmp
pop
pop
xor
pusha
fiaddl
dec
std
xchg
lcall
mov
out
out
sbb
mov
int3
sbb
mov
loop
cwtl
cmpsl
mov
sbb
int3
dec
push
cwtl
ficomps
add
imul
mov
or
and
lods
push
mov
jp
aas
rclb
retw
inc
ret
adcl
inc
xorl
test
lret
mov
xchg
mov
xchg
cmp
cmpsb
pop
lahf
andb
ja
jnp,pn
jno
cmp
es
fstps
hlt
pop
rcl
inc
iret
xchg
data16
aas
pop
into
mov
jo
and
sub
jmp
testb
in
dec
loopne
pop
jne
loopne
pop
adc
in
mov
dec
xchg
mov
inc
in
inc
cmp
xchg
pop
sub
mov
bsf
pop
adc
pop
fstpl
or
adc
int3
push
jle
fmulp
push
push
loope
ja
jmp
fldcw
bound
dec
xchg
dec
jb
lcall
mov
xchg
or
mov
frstor
je
jno
mov
leave
pusha
ja
inc
add
sbb
nop
ljmp
xchg
std
loopne
push
sbb
and
xchg
fsubs
add
xor
pop
mov
add
imul
not
rcrl
push
sar
jmp
scas
pop
ret
lods
xchg
out
sbb
ljmp
fcoms
sub
inc
test
shll
xor
pushl
in
lahf
scas
mov
push
fidivl
fs
outsb
mov
arpl
sub
shlb
push
add
insb
pop
and
sub
pop
in
lret
lret
sub
inc
adc
stos
movsb
jp
les
cwtl
mov
push
add
cwtl
jnp
ret
cmp
pop
jne
fidivl
jae
dec
fidivs
or
addr16
loopne
mov
sub
push
subl
mov
data16
fsts
jno
aam
stos
sbb
mov
jb
jbe
ljmp
xor
fwait
pop
cwtl
dec
and
fcmovnu
adc
loopne
fisubrl
xor
adc
pop
sahf
loopne
adc
add
mov
insb
push
cmp
daa
adc
jno
push
mov
scas
cs
fists
adc
mov
push
aas
cmp
stos
cli
cmp
pushf
xchg
jle
lods
xchg
popa
cmp
push
sbb
pushf
or
xorl
xlat
cmp
popf
js
sarb
test
adc
insl
ss
jg
sub
dec
adc
xor
emms
pop
dec
rcrl
inc
jle
mov
inc
mov
pop
sbb
arpl
adc
add
add
pop
xchg
fcom
mov
fisubl
and
cld
lret
aam
ds
js
pop
adc
adc
shr
mov
scas
inc
jecxz
fcmovnu
cli
hlt
add
pop
or
jb
push
xchg
mov
in
enter
in
out
cmp
imul
add
xchg
xor
adc
test
xchg
push
mov
hlt
in
stos
loop
jo
jl
xchg
ret
lret
arpl
xor
xor
shrb
jnp
dec
pop
adc
or
cmp
sub
movsl
add
cmpsl
loop
pop
xlat
jb
insb
subl
test
fcmovne
imul
push
loopne
lods
mov
push
inc
mov
mov
rorb
sar
dec
rolw
pop
add
xchg
add
mov
inc
xchg
das
mov
std
cmpsb
adc
bnd
push
push
repnz
pop
les
pop
scas
rorb
dec
push
fneni(8087
pop
aad
sub
stos
xlat
jle
push
mov
dec
sub
jns
push
push
ljmp
nop
mov
jl
push
jnp
xor
in
movsb
nop
and
lea
out
xchg
inc
inc
aaa
push
mov
mov
jp
xor
mov
mov
or
sbb
jl
xor
aas
or
mov
lods
inc
adc
sub
stos
push
mov
pushf
inc
jmp
test
fldt
jle
cmp
out
mov
mov
lock
dec
sbb
mov
stc
sub
dec
imul
add
mov
push
out
xchg
pop
call
in
mov
mov
rcrb
or
out
inc
or
pop
mov
shll
lods
xor
outsb
xor
add
aaa
ss
gs
adc
jmp
cmpsl
mov
movsl
cmpb
jmp
push
icebp
pop
cmpsl
jge
jo
and
test
mov
xchg
jne
jo
pop
std
int3
test
bound
out
sub
test
pop
mov
nop
push
sbb
pop
cli
mov
push
ljmp
adc
leave
in
cmp
pop
pop
sub
lock
adc
es
sbb
into
sbb
dec
lods
sub
jns
xorl
lock
cmp
sbb
scas
pop
outsb
pop
xchg
test
ss
pusha
mov
mov
inc
xchg
stc
lock
push
or
stos
push
addl
mov
xchg
mov
mov
mov
andb
inc
cmpsb
add
sub
rorl
out
push
mov
mov
sub
aam
pusha
popa
jecxz
aaa
scas
cmp
sub
jl
adc
lcall
pop
dec
mov
fnstsw
xchg
out
adc
pop
frstor
into
inc
ljmp
lds
movl
decb
inc
pop
inc
aad
mov
push
inc
dec
jno
push
cmpsl
jecxz
jg
push
aaa
push
or
lcall
mov
mov
scas
loope
and
lock
loop
mov
outsb
stos
push
mov
insb
adc
testb
stos
pop
out
pop
loopne
add
lock
xchg
dec
pop
aam
push
jo
and
jae
or
inc
mov
pop
and
int
in
cltd
out
sbb
pop
ljmp
aas
cmpsl
dec
xchg
pmulhw
lahf
mov
jae
pop
loop
xchg
mov
push
aas
mov
mov
das
out
test
mov
xchg
fwait
outsl
in
and
adc
jae
push
pop
inc
pop
insl
ja
xchg
fimuls
xlat
inc
faddp
dec
sarl
jl
jecxz
fsubrs
sarl
shlb
cmp
mov
es
jmp
mov
ficomps
xchg
mov
push
pop
inc
int
sub
mov
adc
xor
or
in
sub
aad
xchg
daa
roll
jo
fcompl
ss
fsub
fnstenv
cmp
mov
imul
popf
or
adc
jmp
aam
imul
jmp
pop
jno
push
cmp
push
mov
xchg
pop
add
xor
repnz
sbb
rolb
jns
mov
push
imul
xchg
incb
push
mov
aas
clc
xlat
pusha
call
dec
sbb
rcl
jnp
std
movsl
addr16
lods
jb
adc
inc
mov
push
add
dec
adc
icebp
sbb
push
push
decl
fwait
mov
fidivs
add
mov
jno
cmp
pop
test
xchg
cmp
sub
jl
fidivrl
rcr
sbb
pushf
pop
mov
movsl
cmpsb
stos
xchg
sbb
lea
data16
mov
les
xchg
xor
xor
test
sbb
shll
and
add
in
or
scas
sbb
mov
pop
adc
sarb
push
inc
pushf
out
cmc
jp
push
lods
xchg
jb
std
lret
cmpsl
inc
pop
leave
test
adc
lds
repz
jmp
inc
in
pop
xchg
in
dec
mov
jns
jns
mov
push
pop
in
lret
fmull
cmp
push
pop
push
filds
sub
imul
rcrl
and
lahf
and
or
pop
test
cwtl
sub
xchg
cmp
sbb
jge
rcrb
ds
pop
jge
mov
scas
pusha
add
orl
and
nop
mov
xchg
bound
call
inc
add
bound
test
movsl
xor
lret
mov
cmp
out
cmc
xchg
testl
jo,pn
repnz
mov
xor
ds
or
sbb
adc
mov
popf
scas
xor
sub
pinsrw
out
inc
xchg
gs
mov
push
xchg
out
fistl
mov
lret
repnz
push
ficompl
sub
sahf
rorl
adc
loope
or
mov
xor
mov
int3
and
sti
add
push
push
jmp
enter
lods
dec
jmp
into
lods
ret
ljmp
add
mov
or
fbld
in
and
mov
fs
push
xor
jl
sub
pop
mov
es
mov
jo
aaa
sbb
adc
sub
cld
rclb
fdivs
push
xchg
pop
mov
xchg
js
xor
jge
cmp
ror
popf
pop
es
cmp
ret
int3
ja
inc
pop
cld
sysenter
insb
xor
sahf
and
int
or
aam
stos
sti
xchg
xchg
lods
lds
outsl
loope
test
pop
pop
push
js
mov
dec
cmp
xchg
inc
push
pop
dec
pop
sbb
aaa
shrb
out
mov
mov
icebp
shll
xchg
pusha
aaa
push
lcall
orl
xor
sti
xchg
xchg
dec
ss
mov
jne
enter
pop
sbb
aas
inc
mov
jb
aam
lods
xor
ret
out
add
push
pop
test
test
jnp
inc
sarb
lret
stos
call
sbb
rcll
and
cmc
xorl
cli
in
xchg
popa
aad
push
push
mov
dec
mov
fwait
mov
adc
out
data16
xor
pop
sub
sbb
lds
and
mov
mov
lods
outsb
xchg
stos
div
stos
repnz
push
ds
pop
add
cmpsb
or
fdivrl
ficomps
inc
xor
cltd
inc
test
dec
pop
or
lock
ljmp
mov
push
jle
xchg
mov
ficoml
stc
out
fistpl
ficoml
aas
hlt
sub
mul
je
in
xchg
movsl
mov
dec
lcall
aam
mov
mov
jecxz
test
pop
je
rorb
gs
icebp
cld
idivb
pop
rclb
test
sub
hlt
cli
or
and
jbe
jne
push
cmp
aaa
gs
std
xor
jbe
in
bound
mov
test
iret
out
rcl
cmpsb
lret
arpl
jl
js
xor
repz
mov
cli
mov
out
pop
fstl
or
ss
jnp
loopne
dec
lds
add
pop
lahf
pop
or
mov
xlat
movsl
adc
jle
outsb
fidivl
ljmp
call
scas
mov
jge
add
add
sbb
dec
jae
ret
mov
insb
sub
ds
scas
punpckldq
cwtl
imul
mov
sbb
add
inc
ret
in
js
mov
test
or
sbb
frndint
ss
jbe
test
in
inc
pop
xorl
nop
movsb
sub
mov
mov
stos
ljmp
xor
lods
add
inc
sti
mov
add
adcb
les
mov
mov
xchg
mov
gs
inc
inc
icebp
xor
ss
in
stc
xchg
orb
bound
jns
mov
icebp
push
xchg
push
jp
push
push
sbb
push
jb
push
and
add
push
lcall
int
js
mov
mov
ficoml
add
xchg
push
out
out
jo
mov
adc
push
push
add
fbld
push
sbb
jns
mov
cs
push
test
repz
stc
pop
inc
popa
jno
mov
add
cwtl
inc
pop
push
mov
xchg
aaa
cmpsb
sbb
inc
xor
adc
add
pop
inc
out
lods
sbb
outsl
sub
imul
sti
cmp
jp
addr16
clc
lds
fs
std
in
fstpl
dec
sti
cmp
out
sub
cli
cmp
add
out
cwtl
ds
lahf
adc
aas
mov
in
stos
mov
mov
mov
out
sbb
sub
cmp
das
outsl
push
sub
popa
ret
dec
and
icebp
cmp
push
ja
sub
cmpsb
in
clc
jg
xchg
pop
fistps
ror
mov
fimull
iret
mov
insb
jl
lcall
xor
sub
and
mov
lods
pop
fcmovb
fiaddl
outsb
aaa
jno
out
push
ja
push
enter
gs
xchg
pop
xchg
cmp
int
jl
add
mov
into
pop
adc
js
dec
xchg
insb
xchg
mov
mov
loope
das
push
sbb
test
xor
in
add
movsb
xchg
xchg
sbb
sbb
pop
push
add
sub
xchg
inc
sub
and
call
jl
fstpt
add
lret
fiaddl
xor
sahf
cltd
mov
and
jmp
adc
push
jecxz
xchg
mov
pop
fadd
std
nop
push
cmpsb
jns
push
fidivl
or
lret
mov
mov
dec
mov
shl
cmp
pop
pusha
mov
dec
and
adc
cli
add
pop
jecxz
in
rcl
adc
ljmp
or
das
int3
push
push
scas
push
in
test
shl
xor
jne
mov
xchg
cmpl
add
lods
shll
jp
cmp
push
fmulp
xchg
addl
insl
mov
add
je
inc
xchg
js
push
pop
rcrl
lret
pop
or
add
mov
xor
sbb
insl
xchg
dec
call
inc
test
mov
cmp
dec
stos
and
inc
dec
push
lock
icebp
pop
insb
cwtl
std
es
sub
adc
into
mov
xor
mov
sahf
out
push
dec
mov
push
and
popf
test
popf
pop
cli
dec
loope
fmull
push
adc
pop
cs
mov
or
pop
insl
mov
xchg
xchg
xchg
jne
or
ds
xchg
jb
outsb
filds
incl
xor
push
mov
fcomps
popf
jmp
inc
jae
movsb
fisubrl
data16
dec
repz
lea
xchg
ja
js
and
shlb
lahf
mov
testl
pushf
push
in
insl
push
push
les
std
mov
inc
arpl
fwait
mov
push
sbb
jp
aaa
test
out
jnp
lcall
out
mov
imul
lock
dec
mov
add
lret
mov
mov
icebp
test
pop
cmp
lods
xor
xor
movsb
out
adc
frstor
out
bound
push
popa
fstpt
xor
mov
mov
push
add
cmpsl
ds
fld
ljmp
jp
sbb
xchg
data16
pop
mov
dec
xor
lds
arpl
pop
test
add
insb
subl
mov
xchg
ficoms
push
pop
pop
dec
aas
imul
out
jo
out
pop
mov
es
add
into
cmp
xor
lods
push
je
sahf
shl
aam
push
data16
cmpb
push
add
std
xorl
out
int3
mov
push
inc
in
cmpb
in
xlat
loopne
movb
ret
lea
cmp
es
orb
gs
push
test
xchg
jle
aaa
inc
push
xchg
leave
dec
cmpsb
adc
sbb
loop
test
sub
loop
jp
pop
cld
mov
sbb
jno
sub
lock
mov
sbb
and
scas
or
je
lock
xor
out
push
fwait
shrl
fmull
outsb
push
jb
int
inc
and
xlat
sub
mov
xchg
hlt
sub
out
aas
loopne
mov
pop
pushf
and
pusha
jmp
mov
stos
adc
adc
jae
addr16
push
nopl
adc
xchg
dec
pop
mov
gs
mov
fwait
inc
mov
xchg
push
cs
mov
mov
sub
test
dec
loopne
inc
push
mov
jns
mov
mov
dec
mov
sub
sub
inc
sbb
int
pop
jge
es
loopne
xchg
inc
dec
ret
outsl
xchg
jl
sbb
shl
sub
rol
movsl
ret
sahf
or
jge
mov
adc
mov
imul
lock
dec
or
inc
sub
mov
add
lds
sbb
call
arpl
cld
push
cltd
sbb
mov
test
insl
fists
pop
sub
xchg
cmp
insb
clc
jp
stos
shll
adc
xor
adc
mov
mov
or
jne
sti
mov
pop
mov
mov
mov
xor
adc
test
and
fisubl
adc
lds
inc
into
bound
into
push
loopne
mov
dec
sbb
cmp
mov
sbb
call
mov
jge
mov
pop
sbb
cwtl
dec
jo
sub
mov
xlat
iret
adc
add
add
jle
orb
setge
jno
and
xchg
mov
enter
ljmp
xor
gs
xor
fdivl
add
cmp
xor
xor
push
dec
pop
into
mov
aam
pop
outsb
pop
sti
and
xchg
xchg
mov
mov
test
adc
cmp
jno
jb
xor
xor
push
es
or
sbb
xchg
mov
fucom
into
xor
push
imul
lret
jge
stos
movsb
cmpb
frstor
fisttpl
into
push
mov
push
sbb
mov
push
add
inc
ds
xchg
out
dec
mov
ds
ja
cmpsl
pop
pop
push
sbbb
frstor
push
pop
cmpsb
jae
lcall
jmp
add
ret
mov
xchg
lds
or
xor
pop
adc
daa
add
mov
ret
mov
mov
enter
adc
cld
mov
jne
pusha
pop
add
jmp
pop
outsl
dec
jl
test
test
popa
sub
mov
int
jle
adc
test
push
dec
fists
loopne
daa
sub
pop
mov
xchg
inc
sbb
outsl
cs
add
add
xchg
jp
loopne
pop
mov
mov
nop
push
movsb
mov
jl
or
out
lea
cltd
daa
insb
mov
mov
and
gs
jle
xchg
cmpsb
int
imul
cwtl
pop
iret
adc
dec
int
repnz
dec
fwait
mov
scas
push
mov
daa
pop
push
mov
icebp
loope
into
arpl
push
xor
dec
das
mov
mov
out
test
adc
push
jne
sub
and
je
mov
int
mulb
cli
bound
xchg
sub
push
fmul
xor
lcall
inc
sbb
pop
mov
pop
sub
insl
into
cmc
inc
xchg
and
idivb
mov
jmp
mov
lea
cltd
call
loope
and
xor
cmp
xor
mov
cld
cmc
stc
mov
gs
sub
sub
xlat
xchg
mov
xchg
dec
jecxz
and
leave
xchg
xchg
stos
fdiv
push
jecxz
flds
sbb
cmp
mov
adc
out
inc
andb
pop
mov
test
mov
push
xor
xchg
xlat
cmp
iret
loope
outsl
and
cmp
cmp
popa
xchg
pop
cmp
sub
loope
mov
lds
loope
gs
frstor
adc
popa
call
fisttps
xchg
cmc
cmpb
jb
rcrb
adc
call
mov
dec
xorl
xchg
xor
scas
mov
imulb
sub
push
cmp
xchg
mov
mov
push
sbb
ja
push
aas
shlb
adc
rol
pop
xchg
sar
fstpl
shll
push
cmp
int3
cltd
js
ljmp
xor
push
clc
enter
out
jmp
clc
mov
je
add
out
mov
lret
jge
xchg
sub
sub
cmp
lahf
int3
mov
dec
mov
jle
and
addr16
fimuls
cmp
sbb
idiv
cmpsb
sub
insb
mov
xor
ja
pop
mov
ret
dec
scas
lds
xlat
dec
jb
mov
jne
fdivrl
lcall
mov
pop
lret
fs
or
xchg
loope
inc
or
int3
mov
xlat
scas
pop
mov
xchg
jb
add
jl
fildl
or
mov
jnp
inc
jae
push
jecxz
addr16
cmpsb
mov
stos
cwtl
push
iret
inc
mov
inc
outsl
cmpsb
xlat
popa
xchg
dec
cltd
lret
xor
test
mov
dec
ljmp
nop
pop
adc
jnp
scas
sub
inc
mov
js
push
xchg
jle
insl
jne
ret
xor
outsl
jnp
jecxz
mov
sahf
sbbl
scas
and
pop
push
sti
imul
scas
in
mov
aad
and
out
stos
sub
outsb
frstor
dec
xor
adc
push
sbb
in
xchg
sbb
test
cld
pop
insl
mov
rorb
push
and
pushw
fidivrs
movsb
and
sbb
in
stc
rolb
mov
xchg
daa
aam
aad
sub
sbb
mov
lret
call
mov
sahf
mov
push
jne
loop
mov
adcl
rcrb
lret
xchg
inc
cmp
pushf
imul
mov
lods
flds
jne
mov
gs
adc
inc
xchg
jbe
scas
popa
mov
cmp
push
test
imul
inc
jno
out
in
data16
fmul
xorl
pop
push
sub
inc
push
popa
movsb
cmc
in
add
dec
rcrb
dec
test
aas
cmpsl
and
xlat
and
rorb
roll
push
xor
loope
push
xchg
ret
xor
mov
pop
imul
ret
das
inc
jp
add
sub
mov
loop
push
mov
mov
jl
push
pop
sbb
sub
lods
inc
and
hlt
popw
stos
mov
in
sub
js
and
push
and
ds
aad
push
test
jp
pushf
mov
mov
mov
aam
sahf
jge
dec
cmp
les
stos
test
cmp
push
loop
lcall
add
xchg
sarb
push
and
mov
dec
pop
and
test
jno
mov
adc
push
inc
cmp
in
xlat
je
je
std
outsb
mov
mov
pop
mov
xchg
mov
lods
in
rcrl
ja
dec
cmp
je
sbb
sbb
lret
addl
mov
stos
mov
das
imul
jno
sbb
ret
leave
and
mov
jo
aam
jns
stc
scas
mov
or
aam
sub
test
test
lock
mov
adc
rorl
xchg
loop
stc
and
jno
mov
lds
addps
or
push
fstpt
std
iret
call
jp
mov
push
dec
sub
je
xchg
add
mov
mov
daa
addl
insb
fs
push
adc
jmp
data16
mov
pusha
or
inc
loop
cmpb
add
pop
add
sub
divb
mov
cld
and
outsl
inc
sbb
and
add
push
fisubs
repnz
or
mov
nop
dec
pop
psadbw
sti
mov
ja
cs
test
mov
xchg
xor
cmp
insb
jmp
fnstenv
mov
dec
sarl
dec
adc
xchg
xor
imul
push
fcoml
mov
or
or
push
bound
cmpl
sbb
sub
xor
cmp
push
mov
and
in
jo
jnp
mov
hlt
mov
aad
test
imul
in
outsl
add
in
inc
test
push
cli
and
shl
and
pusha
jp
pop
jecxz
rcl
pop
adc
xchg
push
xlat
mov
out
std
add
adc
shll
movsl
orl
clc
lods
mov
scas
sub
icebp
test
stc
jle
sub
push
jecxz
or
sbb
dec
xchg
fimull
mov
add
dec
cmp
add
xor
inc
mov
gs
inc
mov
push
in
icebp
scas
sub
sbbl
pushf
xlat
addr16
mov
out
out
adc
jge
icebp
adc
push
test
xor
mov
cwtl
pop
es
test
dec
mov
and
nop
insl
sbb
sbb
mov
popa
rorl
aaa
int
xchg
add
and
mov
incb
xor
xchg
shrb
inc
xor
xor
push
dec
pop
pop
mov
cmp
inc
or
and
repz
push
push
push
push
mov
sub
stos
sub
pop
aaa
flds
push
outsb
aaa
add
stos
sbb
sub
jns
mov
jae
fwait
cmc
inc
push
xor
mov
push
mov
xchg
jbe
fdivl
inc
mov
stc
xchg
xchg
push
leave
inc
outsl
push
imul
adc
popf
mov
dec
loop
mov
mov
imul
adc
scas
jl
les
xor
pop
test
ficompl
xchg
ja
js
pop
mov
daa
rol
add
add
in
jle
cmp
rorb
xor
nop
push
dec
inc
cmp
nop
in
mov
xchg
mov
xor
and
pop
das
pop
out
lock
sbb
lock
inc
pop
sti
inc
gs
negb
fwait
xor
sub
popf
lret
fs
loopne
push
pop
das
ds
cmp
jne
ret
sbb
cmc
add
lret
pop
sub
or
sbb
add
pop
dec
ret
jbe
repnz
or
ds
jmp
cld
jmp
sub
leave
movsl
mov
lock
test
pop
notb
pushf
inc
sbb
ds
lods
mov
popa
enter
lods
jbe
push
and
in
pop
mov
xor
cmp
sahf
icebp
xlat
xor
stos
jo
loope
pushl
je
pop
xchg
sbb
jmp
cmp
jo
lods
ljmp
bound
arpl
add
xor
rcl
jle
pop
movsb
insl
push
push
sub
pop
test
les
xchg
sub
sbb
dec
add
ret
mov
adc
mov
call
les
push
out
imul
stc
sub
mov
mov
popa
in
inc
push
testl
shll
clc
das
add
jp
out
cmpsb
fisubl
dec
jp
dec
cs
test
dec
repz
add
sub
aas
jge
adc
daa
jno
xor
les
fdivl
inc
fbstp
jo
outsb
cmpsl
lods
cltd
inc
pop
adc
push
jp
dec
mov
cli
hlt
cmpsl
fwait
es
movb
pop
repnz
and
fmuls
sti
daa
pop
popa
cmpsb
mov
mov
lahf
test
add
xchg
mov
mov
pop
hlt
cmp
pop
or
fnstcw
out
mov
push
dec
push
push
cmpb
lods
xchg
lahf
xor
mov
sub
push
push
push
test
or
sub
ljmp
out
and
sbb
lods
mov
lahf
shll
or
cmpsl
notb
xchg
add
and
fwait
mov
xchg
jp
xchg
call
jno
and
cmp
in
test
movsl
fnsave
nop
cli
inc
push
fisttpll
int
fiadds
dec
subb
fcompl
cli
mov
call
push
and
mov
into
adcl
es
in
in
xchg
out
adc
dec
data16
lods
mov
push
and
mov
jno
pop
jnp
sahf
hlt
iret
push
xor
scas
and
dec
fs
jbe
hlt
add
pop
jno
xchg
clc
xor
inc
push
in
loop
movsb
mov
xchg
mov
mov
mov
and
dec
mov
pop
cmp
mov
mov
out
mov
lods
push
iret
xchg
dec
pushf
push
inc
push
cmp
xor
shll
fmull
imul
mov
fwait
inc
sti
pop
sub
mov
mov
insl
icebp
xchg
cmp
lret
jmp
and
test
std
leave
push
add
pop
es
or
dec
or
dec
in
and
push
popa
sub
leave
fsts
iret
test
ret
xchg
xchg
fiadds
loopne
add
adc
inc
and
and
cmpsl
dec
sub
lock
and
dec
imul
pop
iret
xchg
mov
pop
ss
add
dec
push
jno
mov
jge
push
imul
lret
add
popa
stos
and
loop
dec
cmpsl
sbb
xor
xor
add
push
scas
fisttpll
sbb
imul
adc
movsb
out
cmc
or
test
xor
jp
fmull
xlat
pop
popf
add
sbbb
jo
jge
inc
fsub
cwtl
cld
lods
leave
mov
in
pop
sbb
jl
outsl
hlt
fnsave
mov
or
xchg
sbb
sahf
int3
or
dec
adc
inc
loope
add
mov
in
mov
dec
fcmovu
dec
mov
mov
and
testl
jo
push
mov
sar
bound
insb
cmp
mov
imul
sahf
aas
test
movsl
mov
negb
push
add
xor
iret
cltd
jle
or
or
clc
lods
fisttpl
jle
clc
sbb
dec
or
push
sbb
mov
cmp
test
test
aas
fs
icebp
imulb
stos
inc
add
mov
iret
pushf
fmuls
add
lock
dec
cmpsb
cli
lea
ja
imul
loop
nop
mov
cmp
iret
dec
cmpl
lods
leave
outsl
call
jge
ret
dec
ja
inc
xor
aam
pop
mov
test
pusha
int
lret
sbb
movsl
xor
dec
push
or
cmp
shrb
lock
fnsave
inc
aaa
mov
sahf
mov
mov
ljmp
mov
add
mov
push
inc
pushf
les
mov
repz
inc
inc
enter
or
sub
push
pusha
pop
idiv
jnp
xor
idiv
push
fsts
mov
into
dec
shl
pop
jbe
movsb
add
and
pop
mov
cmpsb
imul
jp
cli
ss
mov
rcrb
mov
imul
pop
add
test
inc
in
hlt
clc
hlt
cmp
int3
pop
fwait
mov
es
dec
xchg
pop
aam
dec
mov
and
mov
inc
aam
jno
mov
inc
ret
xor
insb
aas
ss
ja
mov
dec
push
pop
fcomps
push
sub
jge
sub
sub
pushf
push
out
sub
test
data16
clc
sbb
test
dec
cld
lock
jo
inc
enter
push
out
lret
stos
into
hlt
add
mov
sub
mov
call
daa
loopne
jl
mov
pop
cmpsb
out
out
inc
push
addb
mov
cmp
push
pop
cmp
push
in
xchg
faddl
std
add
jmp
jecxz
aas
xor
jl
adc
nop
pop
fdivs
push
cltd
mov
mov
xchg
leave
dec
ret
dec
lods
push
sub
xchg
clc
insl
dec
mov
adc
sub
popf
hlt
inc
xchg
mov
jle
jae
aad
cld
in
xchg
lods
push
add
dec
mov
movsb
ret
enter
pop
cmp
outsl
mov
and
jb
cld
fcomip
mov
jo
mov
push
andb
inc
sub
mov
fnsave
jbe
and
xor
filds
cmpsb
pop
jno
sub
cmpsl
mov
int
fisttps
outsb
and
dec
push
jae
pushf
loope
jne
jle
mov
test
sahf
mov
adc
test
push
rorl
hlt
outsb
lahf
scas
rorb
fadd
jb
pop
aas
fcmovnbe
and
gs
mov
aam
in
push
incl
jmp
dec
imul
jl
dec
xchg
mov
aaa
jbe
call
jecxz
fwait
sub
in
cmc
fimull
cli
mov
stc
xchg
mov
ret
and
stos
mov
dec
leave
roll
lea
and
int3
scas
les
stc
and
mov
sbb
pop
hlt
lods
dec
sbb
rcr
mov
jnp
mov
mov
pushf
and
push
out
pop
iret
push
aad
adc
std
or
xchg
add
mov
int
imul
push
push
and
shrb
mov
je
pop
in
inc
stos
and
pop
fdivrl
pop
adc
cmp
xor
rolb
or
mov
mov
sbb
mov
movsb
sahf
shlb
inc
popa
push
jge
mov
mov
lea
sahf
mov
xlat
loopne
cmp
loopne
mov
add
adc
lcall
sarl
inc
and
mov
jp
or
stc
mov
add
or
popa
ret
mov
cmpsb
stc
add
dec
into
ret
xchg
pop
out
dec
adc
push
andl
adc
push
and
jge
jp
mov
adc
xchg
cld
sub
push
dec
data16
stc
fimuls
cmp
push
jmp
mov
sbb
repz
mov
out
scas
gs
dec
adc
pop
mov
jecxz
dec
mov
pop
sbb
pop
popf
pop
inc
mov
sub
std
xor
lret
sub
jo
sbb
scas
xor
into
outsb
add
dec
gs
ret
aaa
rorb
mov
inc
jne
mov
inc
in
test
push
mov
or
mov
mov
xchg
enter
sub
ss
push
je
mov
mov
jnp
xchg
pop
pop
dec
pusha
out
sbb
cmp
nop
jb
leave
mov
mov
in
vpaddsb
out
cli
fstl
mov
jmp
cmc
in
sbb
data16
gs
je
xchg
push
mov
dec
pop
pop
add
pop
push
pop
jo
adc
push
jge
mov
mov
push
imul
jbe
jecxz
xchg
incl
add
mov
sub
scas
aam
mov
pushf
pushf
ss
shl
push
add
and
lods
testb
ja
lods
nop
std
es
jb
iret
aaa
ljmp
xchg
or
insb
lock
push
inc
shrb
xor
xor
mov
mov
lods
push
popf
xor
sbb
pop
scas
insb
inc
mov
pop
cmc
sub
loop
push
push
fsts
fidivl
shrl
push
gs
test
mov
fbstp
dec
jno
ljmp
aaa
xchg
stos
cmp
lret
jmp
xorl
jnp
movsb
addr16
pushf
movsb
icebp
shl
push
rorb
movsb
mov
shlb
rcl
scas
jmp
cmpsl
and
push
testl
in
pop
sub
xor
xchg
xor
adc
jnp
xchg
andl
push
out
add
mov
mov
mov
jne
enter
cmp
rolb
jns
divl
cld
inc
fsubrs
fnsave
daa
sbb
mov
pop
test
and
inc
movsl
add
outsb
psraw
xlat
filds
popf
vpackuswb
into
add
jmp
xor
inc
sub
arpl
xchg
mov
jns
jg
hlt
mov
mov
mov
sbb
jg
rorb
mov
inc
cli
lds
adc
mov
cmc
std
nop
jno
pop
das
xor
les
mov
and
add
in
mov
adc
insl
adc
xor
cmp
inc
loop
je
mov
sub
ljmp
pop
jae
push
jns
dec
std
lock
and
xor
xchg
pop
and
cmp
jo
adc
sbb
xchg
pop
ds
inc
rol
out
sbb
sbb
xor
adc
nop
pop
dec
out
mov
jbe
sarl
movsl
ljmp
arpl
clc
or
out
inc
mov
mov
adc
pop
mov
lret
mov
xchg
cld
push
pop
cli
inc
mov
lcall
add
int
cmp
dec
sti
outsb
nop
lahf
icebp
mov
in
out
add
adc
mov
jl
push
or
std
jb
mov
fcmovne
insl
dec
mov
leave
call
testl
ret
pop
or
les
hlt
pop
clc
push
jb
xchg
rcrl
fwait
andb
and
dec
in
push
fmull
pop
cld
adc
xor
push
add
sarb
mov
push
jg
xor
dec
test
xchg
fldl
xor
pop
gs
pop
jne
cmp
mov
jbe
mov
sbb
pop
push
push
dec
fs
jl
or
sahf
sbb
sbb
mov
sbbb
jns
fcoms
push
shll
jo
or
jge
fsubr
mov
jne
insb
aad
aam
mov
ds
sahf
pop
imul
pmaxsw
movsl
mov
adc
mov
lods
or
inc
outsb
dec
rcll
popf
pop
fdivs
fistps
leave
dec
push
enter
int
std
cmp
pop
inc
aam
pop
test
mov
jecxz
out
pop
pop
test
push
dec
repnz
fs
outsb
scas
int
mov
pop
mov
sub
sbbl
or
inc
adc
fwait
icebp
jne
cmpsl
popa
pop
mov
cs
xor
mov
gs
push
out
movsb
hlt
pop
mov
mov
push
add
sbb
adc
fstl
adc
pop
lret
lods
or
in
dec
pop
arpl
lcall
addr16
lahf
xor
pop
jle
inc
mov
rcrl
mov
fdivr
sub
add
sahf
enter
pop
sbb
test
xor
ficoml
cltd
add
or
sub
jno
fstpt
jecxz
xchg
mov
data16
jp
push
lcall
cmpsl
addl
ret
insb
fdivr
pop
sbb
imul
push
insl
addr16
dec
inc
stos
repz
mov
addl
push
mov
nop
jbe
sarb
and
out
push
mov
and
xchg
cmp
daa
pop
outsb
mov
or
shrb
inc
mov
push
mov
and
movl
sbb
push
sbb
adc
cmpsl
sub
lods
xor
mov
push
aaa
out
add
arpl
sbb
int3
stc
dec
sti
out
jae
stc
pop
jge
insb
and
stos
mov
addr16
in
in
call
mov
imul
test
push
xchg
imul
jne
pusha
push
fistl
repnz
xor
stos
popf
popa
cli
test
enter
aam
pusha
lds
jnp
or
adc
pop
pusha
sti
mov
pop
pop
add
scas
lock
test
mov
data16
inc
or
idivl
pop
push
aam
enter
xchg
imul
in
rolb
popf
pop
push
jmp
jle
mov
fs
mov
or
jecxz
sub
push
mov
xchg
hlt
movsl
xchg
adc
outsb
loopne
push
imul
out
pop
jp
xlat
aaa
data16
pop
ljmp
outsl
fstl
das
jle
in
cmpsb
insl
ret
push
xchg
hlt
sbb
cmp
cmpsl
rol
cmp
xchg
mov
scas
ja
and
fadds
les
adc
mov
jp
mov
fwait
rolb
xchg
xchg
in
dec
pop
aad
fs
out
pop
mov
push
enter
mov
shrl
rorb
jmp
movsl
movsl
in
xor
cwtl
jle
movsb
add
mov
add
inc
pop
mov
push
jmp
lahf
outsb
sub
xor
pop
insb
shll
mov
xor
sarb
sarb
lcall
dec
mov
pushl
jmp
roll
xchg
sub
inc
jle
jle
and
push
jl
pop
popf
ret
ja
test
out
fdivr
add
lds
adc
mov
in
or
fcmovne
daa
mov
push
int3
test
addr16
loopne
stos
jnp
sub
popa
gs
and
aad
lea
aam
adc
ret
int3
xor
jl
fisttpll
mov
dec
cmp
hlt
push
push
pushf
sarl
ffreep
icebp
or
nop
into
dec
scas
inc
test
mov
sub
xchg
add
cmp
mov
imul
jae
add
imul
mov
or
adc
jp
push
enter
stos
dec
repnz
mov
dec
mov
jl
lds
int
push
fs
rcrb
call
and
push
inc
fnsave
jecxz
in
sbb
sbb
or
rol
bound
dec
popf
sub
test
sub
imul
jbe
movsl
mov
cltd
push
in
xchg
dec
cmpl
data16
scas
adc
leave
mov
cltd
ror
fimull
cmp
aam
aaa
lret
dec
fildll
int3
xchg
paddq
cmp
pop
or
subl
into
push
repz
rcrl
inc
insb
jo
adc
arpl
gs
push
test
mov
push
sarl
mov
fists
out
mov
cmp
pop
or
xchg
icebp
dec
fdivr
cmp
aad
dec
inc
call
imul
ss
mov
arpl
push
jl
pop
add
mov
mov
mov
lcall
mov
push
pop
sbb
fnstsw
out
jb
ljmp
cmp
fmull
mov
xor
adc
inc
mov
jle
xor
dec
scas
arpl
pop
movsl
ficompl
mov
loopne
in
sti
push
fstpl
cmp
mov
or
and
dec
fwait
lret
push
in
push
loop
jl
jbe
and
pop
xor
mov
mov
testb
lds
hlt
mov
shlb
and
pop
imul
xor
les
lret
mov
sub
ds
and
cmp
pop
sub
sbb
int
adc
xchg
jecxz
dec
xor
cmp
gs
sti
in
mov
xchg
xchg
xor
adc
pop
xchg
or
jp
xchg
pop
aas
mov
adc
push
pop
jp
inc
or
ljmp
popf
clc
les
loope
adc
xorl
pop
xchg
addb
cld
mov
cmp
rorb
and
sbb
push
insb
xor
sub
sbb
mov
and
push
cltd
aam
scas
dec
shll
cld
push
sub
push
push
test
fwait
ret
push
ret
inc
jg
and
in
cld
imul
enter
repz
fcmove
fwait
arpl
sbb
cmp
mov
fisubrs
pusha
shll
xchg
sbb
in
mov
ss
arpl
add
cmp
pop
xchg
xchg
sub
test
mov
lods
mov
mov
pop
pop
int
mov
xlat
xor
or
mov
sub
and
pop
testl
icebp
push
sbb
sbb
sbb
sbbb
in
push
pop
cmp
js
dec
sub
add
hlt
out
lret
sub
cld
cs
mov
ss
fisubrs
mov
mov
mull
mov
fstl
fidivl
and
mov
xlat
jae
xchg
call
mov
or
ret
out
pop
fldl
jecxz
lock
pop
test
cmpsb
mov
rorl
in
nop
inc
or
cwtl
js
and
test
das
dec
subl
mov
mov
je
mov
gs
test
pop
stos
jno
nop
cmc
xor
sbb
sub
push
dec
mov
xchg
stos
jecxz
push
add
adc
or
lock
dec
ljmp
andl
cltd
inc
push
xchg
push
adc
xor
out
aam
mov
fisubrl
xorps
std
test
sub
in
leave
mov
movsl
mov
pop
das
jnp
xor
sti
mov
or
outsl
daa
sbb
addr16
xor
ret
inc
sub
leave
and
nop
mov
imul
mov
arpl
dec
fwait
dec
and
scas
or
insb
adc
hlt
sbb
icebp
ret
outsl
cmp
dec
fcmovu
or
jmp
jl
out
sub
rorl
stc
scas
stc
xchg
clc
adc
mov
rcrl
mov
into
xchg
add
jb
lret
lods
in
stos
pop
vpsubd
mov
mov
sbb
test
sbb
cltd
ljmp
add
and
test
mov
jnp
lcall
inc
mov
pop
mov
icebp
dec
cmp
fbstp
inc
insl
fisttpl
call
dec
test
ds
inc
fcomi
xchg
sti
xor
jl
sbb
cwtl
or
fsubrl
push
addl
out
gs
bndldx
push
jg
inc
add
dec
pop
mov
pop
push
insl
imul
and
mov
flds
mov
cltd
cmp
pmulhw
inc
xor
sti
arpl
pop
les
in
aad
mov
add
out
roll
mov
mov
sbb
loopne
shll
ljmp
leave
daa
xchg
insb
test
sbb
or
roll
mov
push
jbe
lods
nop
jle
insl
pop
jb
std
sti
pop
cli
pushf
dec
jecxz
xor
lea
cs
push
testb
xchg
mov
jns
mov
mov
pop
std
ds
data16
aaa
mov
lahf
mov
jns
push
test
std
ljmp
sbbb
xchg
aaa
xchg
xor
and
push
enter
addb
mov
arpl
sar
test
outsl
pushf
mov
pop
scas
icebp
jmp
xchg
mov
jne
fdivr
push
push
push
add
jle
andl
pop
cmp
dec
xchg
push
cwtl
sub
jbe
popf
pop
adc
shll
pop
inc
mov
arpl
aaa
inc
les
repnz
ja
sub
fildl
dec
or
pop
jbe
mov
je
push
dec
mov
test
popf
mov
jg
mov
xchg
sub
and
or
sbb
xor
std
lods
jmp
adc
xchg
xchg
xchg
sub
lds
mov
cmp
shlb
push
xchg
ret
lock
js
sarb
lds
addr16
iret
jmp
fadds
xchg
xchg
popf
insl
mov
dec
mov
sbbl
or
mov
std
mov
es
mov
in
cmp
insl
xchg
push
pop
lds
in
xor
push
add
out
imul
cld
in
idivl
mov
inc
xchg
cmpsb
idivb
shlb
test
push
cld
push
push
lea
mov
push
stos
mov
test
gs
cld
cwtl
ror
inc
ret
cmp
xorb
dec
rcrb
xchg
and
subb
test
mov
fwait
xchg
fisubrl
lret
jge
or
int
cltd
push
inc
and
add
adc
and
in
sbb
andb
sbb
cmp
jle
sub
data16
mov
inc
adcb
sbb
cltd
adc
imulb
shrb
aas
dec
cwtl
dec
pop
js
lret
push
cmp
cmp
sbb
inc
jns
int3
subb
ljmp
push
mov
push
hlt
daa
xor
jno
sbb
movsb
in
pop
loope
ss
fwait
repz
inc
and
xchg
push
dec
mov
cld
mov
mov
sahf
cmp
push
aaa
xor
lea
mov
pop
imul
adc
repnz
sbbb
lret
cltd
cmp
pop
mov
mov
cmp
fsts
int
cmc
push
ss
lods
insb
pushf
pop
pop
js
pop
cltd
sbb
sbb
rolb
jmp
ljmp
idivl
insb
push
sahf
lcall
jnp
call
loop
popf
push
cmpsb
imul
jbe
pop
or
mov
add
sbb
mov
cmp
pusha
call
loop
jge
mov
movsb
pop
sbb
lock
out
jne
mov
sub
push
data16
cmpsb
inc
mov
inc
xlat
in
sti
das
push
iret
lret
shlb
je
or
cs
lret
testb
sbb
in
inc
loope
sbb
cwtl
xchg
mov
xlat
xlat
fadd
outsb
repz
out
dec
fiaddl
icebp
cltd
push
shr
sbb
adc
sbb
rorb
lods
loop
push
out
rclb
jle
push
fsubr
mov
popf
cltd
pop
lods
mov
orb
adc
xchg
mov
cmp
shlb
jnp
jbe
stc
jnp
pop
nop
daa
add
jb
add
push
int3
mov
mov
fsubl
cmpsb
aaa
dec
pop
sub
movsb
xlat
cmc
cmp
inc
inc
add
data16
int3
and
mov
outsl
xorb
and
rolb
ds
or
cld
or
mov
sbb
imul
cltd
and
inc
clc
filds
jl
testb
in
arpl
into
mov
fnsave
sub
xchg
daa
or
cmp
stc
mov
dec
adc
jbe
mov
mov
fs
cwtl
pop
xchg
aad
rcrl
cwtl
pusha
dec
icebp
scas
dec
mov
or
dec
scas
mov
loopne
pop
mov
sarl
out
int3
jnp
adc
repnz
add
mov
mov
cmpsb
insl
out
aad
daa
add
psubsw
or
inc
cld
sbb
in
xor
cmp
dec
cmpsb
push
push
andb
mov
repz
adc
sbb
movsl
jge
xchg
pop
ficomps
movsb
loopne
icebp
pop
test
or
pop
cmpsl
fsubrs
cli
fxch
or
sub
cltd
bound
sarb
dec
inc
shrl
jecxz
js
jle
notb
movsb
sub
mov
dec
or
aaa
mov
jp
rorb
bound
mov
mov
add
mov
jge
lahf
adc
lods
lret
mov
mov
fs
and
inc
fbstp
out
mov
imul
jns
mov
mov
fbld
iret
leave
mov
sub
lods
rorb
addb
stos
into
cld
mov
adc
fs
push
imul
jb
xchg
and
aam
push
cmp
add
push
enter
and
adcb
jecxz
mov
sub
cwtl
mov
das
shll
clc
ds
xchg
in
pop
ret
xor
adc
es
add
xchg
cmpsl
mov
stos
mov
push
outsl
add
jmp
movl
fcmovne
dec
and
test
stc
mov
mov
jb
in
xchg
adc
mov
scas
cmp
inc
mov
cmp
dec
and
push
pop
stos
jbe
repnz
pop
subl
loop
daa
mov
incl
and
mov
dec
nop
and
pushf
cmc
mov
inc
cmp
dec
mov
mov
jge
in
loop
add
jae
mov
scas
imulb
hlt
lods
or
cmp
push
outsb
inc
push
ljmp
xchg
mov
shld
clc
jecxz
dec
pop
lcall
mov
dec
xchg
mov
mulb
dec
cmp
cmp
jb
leave
loopne
sbb
mov
adc
in
xchg
je
jp
outsl
jecxz
jae
insl
jo
sbb
dec
sub
jbe
push
rclb
jle
stos
dec
inc
mov
sbb
fdiv
out
mov
jbe
adc
stos
mov
scas
daa
ss
mov
shlb
push
cmpsb
jge
bound
aaa
jmp
jp
jbe
ljmp
xor
adc
and
jo
inc
push
rcrb
push
mov
pop
fisttpll
aad
jecxz
icebp
pop
inc
pushf
loop,pn
xor
bound
jb
orl
call
outsl
fbld
stos
sub
test
push
ret
jle
jg
movsb
xchg
out
xchg
sbb
cmp
cmpsl
dec
push
xor
das
rcrb
ds
in
mov
and
mov
fcoml
lods
arpl
push
pop
sub
push
inc
push
adc
xor
push
inc
add
fstpt
jle
mov
enter
aam
mov
daa
aam
push
cmp
ja
cs
push
jge
push
jmp
pop
inc
sti
ret
std
out
lds
jae
pushf
test
xchg
dec
inc
cmpsl
shlb
rcrl
or
and
mov
stc
pusha
sbb
xor
and
mov
lcall
dec
pop
lcall
in
and
data16
scas
adc
out
dec
aam
push
movsb
jge
outsl
insb
mov
roll
dec
sub
clc
popa
ret
sub
sub
ds
push
xor
mov
mov
aad
lret
mov
inc
sbb
in
cmp
mov
sbb
jne
dec
mov
pop
jno
stc
shlb
push
adc
cmpsb
sbb
jae
ja
jne
cli
and
iret
bound
and
addl
mov
cmp
push
std
push
mov
push
mov
fld
out
inc
imul
aam
sbb
inc
xor
int
clc
adc
in
jne
xchg
mov
mov
mov
push
xor
out
loopne
mov
dec
fs
cmp
js
mov
inc
call
daa
cmp
pushl
out
idivb
lds
cmc
scas
stc
mov
push
stos
and
push
pusha
sub
or
cli
push
cwtl
mov
lcall
add
aaa
in
es
mov
pop
das
pop
and
dec
xchg
stos
ds
sbb
jne
fs
pop
in
movsb
mov
cmp
imul
sbb
pop
imul
xor
mov
arpl
pop
xor
aaa
add
inc
jp
inc
mov
xchg
test
push
cmpsb
mov
es
xchg
iret
pop
pop
mov
rcll
xchg
push
push
push
push
daa
jbe
sub
xor
cltd
sbb
lods
sbb
xchg
lock
sbb
sub
and
ss
jecxz
cmp
mov
jns
adc
xchg
sahf
mov
xor
nop
jbe
iret
addr16
jmp
ss
inc
into
bound
loope
ret
inc
inc
lret
push
test
imul
pushf
push
pop
mov
imul
or
mov
push
adc
adc
or
mov
ljmp
push
inc
inc
popf
sub
dec
add
clc
sbb
fimuls
mov
roll
test
test
clc
pop
push
sti
push
sbb
adc
or
fdecstp
lea
ficoml
xor
in
enter
xchg
and
and
mov
adc
dec
popf
or
lea
fldl2t
xchg
int3
push
out
scas
adc
fwait
daa
addr16
push
cmp
sbb
jo
xchg
add
sbb
push
dec
fcoms
mov
outsb
test
xchg
jb
outsl
and
cmpsl
movsl
pop
mov
pop
inc
lcall
stos
lahf
lcall
push
cmpsl
and
ss
jg
jne
pop
test
add
add
negb
nop
mov
or
out
jb
aas
push
stos
pop
pop
sbb
ficoml
fcompl
mov
jo
add
mov
outsb
sub
sub
imul
out
sub
or
in
cmpl
ja
pop
mov
inc
mov
sub
cwtl
pushf
push
test
mov
mov
fucomip
sub
rol
arpl
std
repnz
push
mov
xchg
xchg
inc
mov
dec
pop
adc
sbb
sub
mov
fnop
in
addr16
imul
mov
repz
push
push
mov
scas
dec
and
inc
sub
leave
aas
jbe
pop
or
cld
pop
mov
xor
loope
daa
das
pop
mov
enter
jbe
pop
mov
jne
sbb
cltd
xchg
xchg
shlb
or
in
cmp
push
jbe
jb
repnz
push
pop
aam
scas
pushf
cmp
shl
or
pop
data16
ljmp
imul
adcb
filds
and
mov
jp
mov
inc
pop
mov
xor
adc
sub
pop
jecxz
or
pop
jnp
pusha
lahf
adc
and
jg
mov
call
jno
aam
push
push
in
cs
xchg
dec
jb
push
sti
and
mov
lahf
pop
add
dec
in
xor
dec
jns
jae
dec
iret
mov
push
sbb
mov
lahf
std
xor
dec
repz
add
rcll
lret
dec
push
in
popa
xor
icebp
hlt
jle
cmpb
aam
dec
push
xor
lea
lret
mov
cvtps2pd
add
ljmp
inc
addr16
push
out
push
pop
in
xchg
hlt
lret
jbe
mov
jnp
xchg
jmp
in
daa
mov
mov
sub
jno
xchg
or
sbb
push
push
sub
movsb
pop
push
out
mov
adc
lods
sub
cmp
cs
sbb
rcrb
sbb
push
fcmovnb
push
inc
push
or
shrl
mov
repz
pop
mov
imul
add
inc
pop
or
xchg
inc
mov
sbb
or
rcr
in
xlat
and
push
xchg
mov
movsb
call
push
lret
xchg
mov
pop
fidivrl
xor
popf
mov
cmp
stos
loop
add
ret
jle
sbb
scas
jge
jnp
or
fnstsw
loope
imul
sbb
nop
es
sahf
test
jg
pop
iret
les
rclb
rcr
jg
pop
nop
addr16
cmpsb
inc
inc
rcll
ss
pushf
push
icebp
notb
std
jno
sbb
and
cwtl
fmull
pushf
enter
xchg
dec
or
lahf
in
pop
mov
cmc
lret
inc
cmp
dec
push
sbb
adc
mov
aam
aad
mov
loop
push
push
decb
mov
sbb
mov
push
add
xor
in
jae
xchg
lock
cli
rcrb
inc
mov
not
mov
push
push
das
inc
pop
or
scas
xor
xchg
mov
cmp
outsb
mov
xchg
int3
adc
mov
sub
push
jb
ja
sbb
mov
push
shlb
cltd
ret
fucomi
fwait
xor
idiv
scas
pop
pop
ja
jle,pn
fadd
out
adcb
push
cltd
int3
mov
outsb
test
mov
dec
das
cmp
or
cmp
add
add
adc
fdivrl
data16
dec
mov
dec
je
and
xor
sarl
ret
mov
test
mov
outsl
orb
inc
scas
mov
xchg
dec
cli
fdivr
xor
dec
xor
fbstp
lret
push
popf
popa
mov
push
popf
sbb
jne
pop
jg
repnz
jecxz
scas
arpl
pop
ljmp
xlat
inc
cltd
jecxz
sbb
mov
xor
xchg
inc
fcompl
sahf
test
std
jecxz
repnz
push
sbb
mov
ja
pop
ret
in
push
xchg
dec
subl
jae
test
push
mov
add
lods
xor
lea
xlat
mov
stc
inc
mov
jnp
pusha
pushf
insb
cwtl
lret
std
mov
in
xor
sar
popf
cli
lcall
push
cmp
pop
adc
pop
lret
add
mov
xchg
mov
into
in
es
jecxz
lret
mov
mov
jae
xchg
aad
mov
mov
cmc
xchg
cmp
mov
loop
mov
je
call
mov
adcl
aas
sub
repnz
jle
inc
fs
jl
mov
sub
je
stos
sub
jecxz
sbb
in
ds
fs
or
lahf
mov
cmp
movsl
loope
inc
jns
sbb
push
mov
pop
push
mov
cld
xchg
push
add
mov
leave
jb
dec
cld
jno
cmp
fisubl
xor
sbb
pop
mov
lea
jg
std
adc
mov
push
sub
in
sub
cmp
insb
sub
cmp
rcr
xlat
jecxz
aaa
loope
inc
add
jbe
push
xchg
adc
mov
js
sti
outsb
pop
lcall
and
pop
aad
aas
mov
cltd
call
imul
add
es
es
cmpsl
xchg
xor
mov
movsb
sbb
xor
mov
imulb
push
cli
xchg
sbb
sub
mov
push
add
sbb
inc
bound
inc
adc
add
inc
loope
addr16
fdivl
or
add
in
adc
xor
insb
xchg
jecxz
rolb
sahf
pop
jae
enter
cmp
test
xchg
loope
sbb
mov
xchg
mov
mov
pop
and
inc
lahf
inc
lcall
call
mov
push
aad
push
inc
dec
mov
hlt
and
dec
ret
andl
aaa
pusha
sub
or
xor
insl
mov
mov
mov
sub
fbstp
cmp
inc
shll
mov
sbb
push
jg
fldt
hlt
loop
repnz
or
cmc
daa
outsb
cmpsb
inc
sbb
and
repz
stos
es
mov
add
jg
push
mov
nop
jo
lods
scas
stos
fdivl
punpcklwd
popa
cmp
iret
or
loop
cmp
pop
lods
xchg
dec
jo
in
or
inc
out
mov
jg
and
sti
shr
out
mov
aas
pop
mov
fstl
sbb
inc
sti
mov
dec
mov
sbb
ljmp
pusha
push
pushf
lods
cmc
aad
mov
inc
pop
inc
cmp
push
sbb
cmp
test
sub
sbb
test
ss
aam
add
leave
daa
push
jp
mov
or
enter
inc
dec
mov
pop
fcomi
rcl
xchg
pushf
mov
hlt
test
shll
pop
push
mov
daa
sti
and
and
jbe
cs
outsb
push
push
pop
vmread
inc
xor
xor
arpl
add
fldt
pop
dec
add
lea
push
xchg
mov
push
popf
test
mov
fdivrs
jnp
pop
add
jnp
enter
test
pop
adc
int
add
ss
div
mov
shlb
mov
cwtl
dec
mov
notl
fildl
xor
sub
inc
sub
cmc
lret
sbb
push
mov
cwtl
cwtl
std
ljmp
lcall
push
and
jb
push
test
push
add
je
dec
aam
imull
dec
push
lahf
jo
ds
xchg
test
xlat
push
lock
jo
into
or
imul
mov
scas
sbb
mov
jl
cmpsl
pushf
mov
mov
xchg
xor
inc
xchg
xor
xchg
inc
mov
and
xchg
pop
dec
adc
pop
or
inc
ljmp
shlb
outsl
jne,pn
mov
mov
pop
cmp
mov
jo
aas
std
add
mov
pop
orb
ljmp
pusha
daa
push
dec
ret
jg
cwtl
push
mov
xchg
xchg
push
dec
inc
daa
cmp
mov
xor
jae
adc
push
and
cmp
or
sbb
mov
mov
push
jmp
xchg
fiadds
pop
nop
mov
push
dec
lds
add
or
int
cmp
dec
mov
mov
mov
imul
repnz
sbb
mov
mov
cmpsl
push
mov
mov
pop
sub
aad
out
fs
cmp
daa
mov
push
dec
in
arpl
pop
inc
scas
lcall
ret
mov
cmp
in
mov
lods
and
rol
add
in
or
lret
shr
or
shl
adc
sahf
xor
lret
sbb
pxor
jmp
mov
sbb
cmp
xchg
adc
cmp
sbb
push
fmul
and
mov
inc
xor
pop
sub
pextrw
mov
mov
adc
cmp
jecxz
loope
jmp
push
in
xchg
sbb
dec
mov
dec
movsl
outsb
sbb
jae
inc
jno
prefetchw
or
mov
int
insl
mov
shlb
pop
cmp
inc
adc
or
outsb
push
jno
xor
fbld
faddl
lods
mov
xchg
jecxz
mov
xchg
add
add
js
rorb
dec
orl
dec
push
and
in
loopne
push
imul
shlb
xor
lods
ret
or
xor
test
push
push
cmp
xor
popf
sub
or
test
mov
das
sub
jmp
sbb
dec
test
dec
cmp
shr
xor
xorb
inc
push
popa
jg
leave
adc
test
insb
fmul
scas
jl
loope
mov
xorl
pop
dec
fnstcw
mov
sbb
sub
je
jecxz
scas
sub
nop
and
dec
and
fldt
jns
aam
and
int
mov
xor
sub
lods
aaa
in
movsl
sti
inc
sti
push
test
dec
inc
pusha
and
sub
or
lahf
or
xchg
movsb
mov
es
push
push
push
jp
pop
inc
fistpl
ss
shlb
jne
sbb
adc
repz
nop
push
cmp
mov
int
loope
mov
jmp
cmp
test
js
in
pcmpgtb
mov
adc
jle
dec
push
insb
sub
pop
pop
loopne
rolb
cmc
xor
mov
cltd
inc
enter
push
push
push
movsb
out
stos
adc
jg
mov
pop
sub
out
inc
lahf
das
pop
int3
mov
or
jl
rcrb
cmpsb
ss
or
push
or
mov
or
inc
xchg
repz
sub
movsb
shrb
fs
xor
pop
dec
and
dec
pop
js
gs
mov
jmp
jl
bound
xor
xchg
sub
inc
xchg
lret
jae
mov
and
add
push
into
push
add
fidivl
inc
ljmp
insb
ret
pop
iret
sbb
outsb
rcl
inc
int
rcrb
bound
popa
jg
je
xor
mov
addb
cmp
ja
nopl
xorb
cmp
xorb
push
sbb
xchg
mov
fdivs
sub
out
jbe
imul
enter
loop
ret
cwtl
shll
mov
sub
popl
pusha
ljmp
pop
dec
incb
ret
test
jp
pop
aam
lock
mov
ja
fxch
testb
xchg
fnstcw
jecxz
lea
cld
insb
inc
pop
call
and
cmp
jnp
xor
xor
jecxz
adc
push
popa
pop
mov
mov
js
fsub
xchg
scas
out
sbb
cmp
ljmp
sub
mov
jge
xchg
lods
inc
dec
divl
mov
mov
pop
fistpll
adc
pop
inc
mov
out
int
incb
mov
mov
mov
xlat
cmp
cmp
add
test
aas
cmp
fdivrl
and
dec
add
cmpsb
subb
ja
cmc
jnp
inc
daa
mov
scas
dec
dec
insb
sub
mov
jne
enter
push
jmp
sbb
fcomp
or
inc
sarb
xor
cmp
xor
cmc
pop
lahf
js
sti
leave
shl
mov
mov
sub
sbbl
adc
sbb
jb
cmp
mov
cmp
loopne
sarb
int
mov
mov
stc
pushf
in
loope
mov
xchg
mov
and
test
cltd
cmpsl
push
inc
repnz
loop
push
mov
and
outsb
mov
jge
repnz
lods
mov
das
stos
xor
scas
or
leave
mov
cwtl
pop
xor
jne
push
loope
mov
add
bound
imul
arpl
lahf
xchg
lods
insb
cmpsb
lret
fucomp
add
push
mov
mov
popa
cmp
ja
movsb
in
int
loopne
inc
mov
pop
nop
pop
jo
push
push
cmp
fildll
fisttpl
xchg
and
mov
sub
and
stc
adc
inc
in
dec
adc
in
int3
push
jo
push
xor
add
sub
xor
and
sbb
in
addl
fistps
add
int
cmpsb
clc
lcall
xlat
das
imul
jecxz
ljmp
dec
in
inc
mov
mov
pop
add
int3
lea
enter
push
mov
daa
mov
push
in
sbb
into
adc
jmp
into
pop
out
outsb
mov
mov
pop
or
sub
cltd
fsubs
mov
fidivrl
insb
xor
outsl
mov
std
and
adc
sub
test
das
mov
mov
mov
leavew
aaa
stc
bound
push
cltd
lods
xor
btr
addr16
stc
nop
stos
jae
ljmp
loop
xchg
mov
dec
enter
sbb
push
insl
sub
jecxz
mov
stc
xchg
inc
stos
add
xchg
inc
scas
fiadds
xchg
in
cli
pop
adc
add
inc
add
incb
push
fcmovnu
loop
call
adc
movsl
xchg
aaa
xor
inc
xor
cmp
stc
fwait
repnz
out
jbe
cmp
jp
cs
jg
frstor
mov
leave
int3
loopne
icebp
pop
xchg
sbb
es
mov
xchg
lea
inc
pop
cmp
pusha
test
pusha
jno
js
jp
xchg
scas
add
jge
mov
repz
lods
insl
jg
je
sub
pop
das
clc
or
xchg
cli
icebp
shll
and
sub
imul
adc
shrl
jno
mov
mov
and
mov
clc
lock
pop
rorb
dec
jne
push
loop
mov
inc
jae
ja
xchg
ja
std
xchg
bound
sub
inc
ljmp
mov
push
scas
addr16
xchg
sub
mov
je
mov
jp
leave
outsl
loopne
mov
bound
mov
cmp
jbe
mov
stc
fadd
mov
test
adc
jmp
loope
jb
loope
pop
and
pop
xchg
or
out
repnz
stc
xchg
pop
cmc
adc
xchg
and
enter
dec
mov
dec
or
add
sub
sbbb
xor
adc
out
sbb
rorb
push
scas
sti
fsubs
jo
mov
ret
or
lret
inc
sub
mov
sub
cld
out
xor
xor
and
sub
push
jno
cmpsb
testb
std
mov
inc
pop
in
xchg
cld
mov
xor
ljmp
adc
fs
jbe
mov
out
xor
and
dec
out
dec
out
jns
test
popa
sub
lcall
sbb
test
push
out
cmpsl
gs
jmp
mov
xchg
pop
dec
xor
cwtl
enter
shr
xor
or
rclb
loop
mov
lods
push
fmuls
fisubs
pop
cmc
cmc
fwait
es
push
dec
out
call
adc
or
out
xchg
popa
aad
das
addr16
rcrb
test
jp
add
pop
pusha
inc
scas
jne
dec
cwtl
dec
add
test
cmp
xchg
sbb
mov
xlat
out
mov
rorl
insl
loope
test
and
lret
cld
leave
and
pop
movsb
js
mov
dec
movlps
pop
aam
cmp
movsl
stos
pop
shll
jb
push
cmp
add
out
xor
nop
jbe
lcall
jae
stos
cmp
outsb
xor
dec
and
push
or
stos
das
fprem1
dec
mov
xor
and
out
aam
cmp
int3
test
fidivrs
sbb
inc
sub
inc
push
hlt
xor
pop
jns
xchg
dec
dec
aas
ljmp
out
jbe
cmp
hlt
or
sub
mov
nop
jae
icebp
movsl
pop
sarb
fs
mov
or
nop
inc
cmpsl
ret
inc
sub
sti
push
jmp
dec
out
push
push
push
lea
pop
xchg
and
mov
dec
dec
pop
mov
adc
push
xchg
lods
sub
iret
adc
lcall
call
xchg
imul
jmp
pop
fcoms
and
bound
dec
push
sahf
scas
pop
pop
fst
dec
inc
popf
out
les
mov
outsb
cmp
or
insb
push
fsub
leave
push
lret
cmpsl
clc
jne
js
jbe
jl
int3
adc
lock
push
das
adc
scas
loope
filds
pop
inc
stos
lea
mov
add
mov
sub
mov
mov
in
roll
inc
aas
test
mov
push
xchg
pop
jns
mov
ret
fdivrs
jo
scas
rcl
fsubl
dec
jb
xor
jmp
mov
push
mov
pushf
je
jne
ret
pop
adc
dec
stos
mov
rcrb
dec
push
pop
cltd
insb
sbb
test
mov
push
iret
ret
scas
inc
or
push
or
adcb
push
orl
popl
push
inc
xor
adc
int3
and
icebp
mov
push
aas
pop
ret
xor
cmp
lods
xchg
dec
mov
data16
loopne
movsl
push
mov
shlb
out
lahf
fsubl
or
mov
fldcw
outsb
dec
clc
and
mov
mov
test
pop
aad
pop
or
push
sbb
gs
sub
cmp
outsl
sub
add
and
jns
js
mov
xchg
loope
fwait
in
in
outsl
push
imul
pop
inc
mov
sbb
inc
aaa
jo
and
or
xchg
aam
xchg
loop
bound
lret
cmp
jge
mov
das
popa
push
mov
cmp
pop
push
icebp
mov
push
sbbl
dec
cltd
scas
ss
shl
xor
inc
sbb
psrld
fldl
dec
mov
sbb
sarl
inc
aas
les
inc
ljmp
out
and
popa
test
mov
ret
movsl
push
sub
fwait
jne
jecxz
test
aam
push
pop
xor
jae
mov
outsb
inc
xor
cmp
loop
aad
subl
fdivl
aas
mov
mov
loopne
call
sub
jae
loop
out
and
fldt
negl
push
sub
je
sbb
push
imul
clc
dec
rolb
ds
xor
addl
jle
adcb
leave
or
aam
pop
aam
mov
cmpsl
arpl
add
mov
mov
les
xchg
xor
js
pop
lods
xor
adc
int
jno
jne
std
fistpl
repz
imul
pop
xlat
jno
sub
inc
adc
mov
pop
cmpsl
sub
sub
and
lret
cmp
arpl
sbb
sbb
xchg
inc
xor
mov
mov
lahf
imul
push
inc
push
aas
jmp
test
sbb
lret
fldcw
lret
bound
in
ret
ret
rcl
and
mov
in
push
mov
sub
arpl
mov
jno
pop
push
inc
xchg
ds
lock
mov
mov
xor
mov
lds
cs
jb
cmp
loop
insl
push
pop
xchg
bound
mov
popa
or
jne
xor
and
arpl
loope
ret
adc
sbb
add
fistps
adc
adc
dec
lods
sbb
jno
cmc
leave
stos
mov
lret
xor
sti
fsubrl
and
xchg
cmp
mov
sub
add
imul
je
push
push
jmp
mov
outsl
je
adcb
ret
inc
mov
mov
sub
subb
mov
or
std
pop
mov
push
adc
pop
jb
cmpsb
lock
push
jae
daa
mov
cmpsl
and
and
dec
mov
or
and
pop
pop
push
dec
out
in
stos
ss
fidivrs
mov
pusha
push
out
lret
xchg
xor
sub
mov
or
sbb
push
jne
push
and
adc
sti
out
or
mov
lcall
cmc
sub
jns
dec
mov
in
stc
xchg
adc
frndint
and
sub
add
cmp
sub
daa
jp
xchg
ds
in
xchg
push
cmp
aas
and
lods
add
cmp
int
or
add
jno
int3
scas
or
movsl
int3
jl
xor
ret
pop
cmp
ret
sbb
rcrb
add
xor
push
inc
adc
xchg
push
mov
test
pushf
xchg
sub
cmpsl
lods
push
adc
adc
imull
les
mov
inc
aad
lret
not
xchg
shrb
mov
stc
fiaddl
nop
popa
xchg
into
add
inc
cmp
fwait
mov
lcall
scas
lds
or
stc
and
mov
or
and
cmp
in
test
sub
data16
mov
test
jecxz
jns
cld
fstl
adc
xchg
ljmp
push
lods
cmpsl
cmp
inc
mov
push
pop
or
or
lcall
fwait
sahf
jb
mov
mov
xlat
adc
into
pop
or
pop
sbbl
jnp
xchg
pop
das
mov
xor
push
mov
pop
xchg
mov
scas
out
xor
mov
outsb
dec
mov
pop
lods
rcr
in
enter
ss
movsb
ret
jns
pop
stos
cmp
xchg
mov
stos
or
lea
mov
outsl
inc
not
stc
int3
icebp
fists
loope
in
cmpsb
js
fcmove
loopne
mov
fmull
mov
daa
push
sbb
mov
cs
pop
mov
out
cmc
push
int
adc
int3
lock
inc
xor
adc
stos
sar
mov
lcall
xor
mov
add
pop
inc
pop
fnsave
rcrb
adcl
fldl2t
scas
adcb
cmp
cld
push
jecxz
lea
daa
pop
xor
pop
out
mov
inc
xchg
push
call
aaa
add
mov
mov
js
jo
sub
or
mov
jnp
test
cld
leave
inc
dec
sub
test
and
and
xor
lret
push
sub
rorb
ja
mov
push
fisubs
ds
push
jno
test
cwtl
pushf
out
hlt
jle
stc
cmp
cs
je
mov
xchg
int
pop
jno
adc
or
clc
mov
xchg
dec
ret
icebp
xor
jle
stos
add
imul
bound
hlt
lcall
aas
fucomp
push
arpl
jl
outsb
movsl
push
fwait
rcrb
std
xor
shlb
dec
mulb
or
test
pop
mov
arpl
inc
mov
aas
popa
jecxz
icebp
and
xchg
xchg
sar
xchg
lcall
pop
add
pop
jae
arpl
das
out
rcr
lock
je
dec
jo
repnz
pushf
in
lcall
pop
add
icebp
andl
lock
nop
shlb
xchg
loopne
mov
insl
js
inc
xor
and
and
adc
push
in
fcoms
jl
outsl
pop
push
inc
jns
sub
scas
and
repnz
dec
jecxz
cs
mov
sbb
gs
dec
add
pop
inc
xor
testl
adc
or
mov
dec
add
jg
popa
xchg
ljmp
mov
mov
ljmp
or
and
jl
xlat
js
cmp
in
xor
cld
push
pop
adc
push
or
push
jb
mov
push
inc
xor
or
mov
xor
adc
fwait
mov
mov
jno
out
ds
or
fists
hlt
movsb
aad
inc
xor
out
xor
push
sbb
mov
mov
cmp
mov
lea
repnz
scas
adc
popf
ss
rcrb
mov
inc
pop
rcll
pop
push
aaa
xchg
mov
xchg
hlt
mov
shr
mov
cmc
mulb
sub
fstps
dec
xchg
mov
jle
in
mov
mov
cmp
mov
inc
push
cmp
adc
hlt
out
xchg
bound
scas
jne
pop
dec
push
subl
xchg
and
movsl
repnz
imul
xchg
inc
add
push
shl
jns
loop
xchg
mov
add
popf
cmp
and
mov
out
popa
push
mov
jmp
mov
aad
loopne
dec
xchg
imul
add
jge
pop
sti
push
sbb
jae
popa
mov
insb
lds
mov
fs
push
out
hlt
xchg
push
cmp
xor
out
dec
cwtl
cmp
ja
test
std
add
pop
mov
icebp
test
repz
movsb
cmp
add
pushl
jno
xchg
out
adc
mov
jmp
inc
cld
leave
lea
xchg
aaa
and
xlat
dec
xchg
cs
ljmp
sbb
outsl
cli
roll
xchg
loopne
fnstsw
iret
in
clc
jo
jp
sbb
iret
ficomps
movsl
scas
jp
sbb
xor
xchg
jne
imul
pop
movl
js
sub
add
or
lret
push
mov
add
cmp
pop
adc
scas
test
mov
sbb
sub
dec
xor
aam
mov
movaps
int3
in
xchg
rcll
mov
push
mov
stos
ljmp
push
sub
leave
dec
loop
imul
mov
add
jp
jae
repz
mov
inc
mov
iret
hlt
rcrb
adc
repnz
cld
dec
insl
out
lock
xor
xchg
insb
sbb
sbb
int
popf
fs
jg
cmpsb
jp
jmp
xor
push
int3
jno
sahf
xor
adc
sbb
pop
adc
popa
es
and
fmull
repz
jnp
xor
pop
icebp
jle
adcb
imul
push
inc
mov
aas
call
and
dec
mov
ss
push
jno
clc
js
bound
xchg
sarl
scas
or
cmp
sbb
mov
sub
pop
loopne
dec
cmp
jnp
insl
cmp
data16
xchg
ret
mov
dec
pop
hlt
fisttps
cmp
iret
xor
insb
rorb
sub
xor
push
dec
fnstcw
cmpsl
and
loop
int3
mov
aas
mov
mov
repnz
jbe
sub
mov
inc
jnp
aaa
faddl
pop
xor
sbb
or
pop
add
dec
pusha
adc
mov
or
jl
repz
movsl
or
push
rolb
and
jg
and
rcrb
subb
in
lods
outsl
pop
aaa
jbe
pop
sub
xor
flds
push
outsl
movsb
xor
aas
push
hlt
inc
loope
fs
test
sub
mov
and
enter
das
fs
mov
divl
popf
std
aad
pusha
mov
movl
mov
hlt
push
push
stos
ljmp
fcompl
shlb
loope
das
das
and
push
push
fs
inc
or
ss
sbb
add
pushf
or
shr
clc
mov
xchg
test
movsb
and
dec
out
jo
hlt
jg
lods
mov
ret
int3
lock
jbe
daa
and
jmp
adc
dec
pop
dec
push
addr16
lcall
rorb
push
inc
mov
je
leave
mov
out
andb
push
out
fidivrs
mov
dec
cmp
inc
mov
sub
faddl
add
ret
mov
mov
scas
inc
sub
push
add
pop
aad
stos
mov
jecxz
jle
ja
in
inc
pusha
mov
lret
xchg
mov
out
push
cli
cmpsb
nop
stc
out
jp
xor
scas
sti
adc
adc
dec
loopne
inc
xchg
aam
cltd
and
inc
scas
sub
inc
add
xchg
push
les
lahf
inc
ds
sar
pop
out
xchg
sub
in
sbb
ror
rcrb
nop
or
sub
fwait
jmp
inc
insl
jnp
xchg
cmp
sti
or
imul
xor
cwtl
sar
std
adc
repnz
sub
popa
outsb
outsl
dec
add
or
int3
out
enter
mov
outsb
jne
sbb
test
into
xlat
stc
int3
lods
mov
les
outsl
je
lds
rcll
in
cli
mov
pop
pop
sub
mov
adc
dec
loopne
push
lahf
out
into
mov
adc
push
dec
push
mov
mov
fstl
mov
mov
in
push
push
push
mov
sbb
mov
nop
mov
jnp
add
loopne
push
push
inc
xor
push
cmp
dec
jp
imul
mov
test
push
fs
aaa
or
bound
popa
daa
cmp
pop
mov
dec
xchg
sbb
jl
and
into
sbb
and
shrl
arpl
xor
mov
jbe
insb
addb
test
jg
sub
mov
pop
in
rcrb
fcmovnu
cld
xor
xchg
daa
xchg
mov
cltd
popf
das
push
pop
xchg
xor
xor
mov
arpl
movsl
out
sub
aaa
mov
mov
jl
test
adc
pop
ja
out
es
shl
leave
sub
out
pusha
mov
out
mov
stos
adc
dec
sti
add
hlt
into
mov
loope
push
lods
popf
ret
cs
inc
lods
xor
popa
sarl
push
lret
lock
xor
dec
inc
push
cmc
test
in
mov
push
add
insb
or
repz
pop
add
and
cld
mov
icebp
and
inc
fildll
imul
mov
rorl
or
pushf
jo
jb
ds
lcall
adc
jns
nop
pop
xor
and
xchg
mov
jecxz
dec
adc
push
mov
repz
aas
cmc
jl
out
pop
jmp
into
lcall
inc
push
mov
shl
rclb
sbb
and
imul
lods
repnz
and
in
out
xchg
outsl
out
and
ljmp
addr16
sbb
xchg
in
sbb
push
mov
xor
fldt
dec
pop
test
sti
fistpll
pushf
pop
fdivr
jae
jo
dec
inc
aas
push
push
call
insl
pop
xor
pop
jo
adc
loope
add
nop
inc
dec
adc
or
cwtl
sbb
sbb
pop
add
jo
in
xchg
testb
mov
or
pop
push
push
fadds
mov
fnstsw
cmp
ror
pop
xor
int3
mov
push
sub
inc
test
fs
mov
sbb
cld
inc
jo
lea
mov
in
arpl
jl
pop
pop
je
jne
mov
out
aam
mov
push
sarb
js
add
xchg
pushf
or
adc
mov
int3
mov
stos
fidivrl
add
cwtl
stos
cs
repnz
cmpsw
and
leave
sti
inc
es
lock
adc
pop
xchg
mov
aaa
mov
mov
pop
add
out
fistl
adc
dec
and
adc
leave
push
mov
fidivrs
inc
push
cli
rolb
jle
adc
push
pop
jge
stc
pop
mov
push
out
mov
adc
cmpsl
mov
jb
gs
mov
inc
sbb
mov
and
xor
inc
and
sbb
sub
idivl
xor
lock
divl
cld
sbb
test
pop
inc
sbb
push
scas
js
mov
push
leave
inc
fcoml
xchg
jmp
mov
call
fdivp
adc
popa
jbe
fists
jns
mov
sub
das
cli
pop
mov
imulb
pop
xor
cmc
pop
aad
pop
xchg
clc
dec
cmp
stos
mov
and
stos
mov
mov
arpl
outsl
dec
jmp
sbb
sti
adc
fsubr
int3
lods
ret
int3
pusha
inc
push
outsb
in
sbb
call
sub
lods
scas
jg
ror
roll
jmp
bound
sub
jnp
or
lock
push
cmc
cltd
cmpsl
cmp
lds
in
js
push
or
sarl
jle
out
xor
inc
mov
fistpll
leave
das
push
out
mov
bound
and
icebp
stos
out
jno
sbb
dec
inc
ret
sahf
stos
push
rcrl
sub
daa
scas
lds
mov
cwtl
sbb
cmp
repz
scas
xlat
js
popf
leave
inc
jg
pop
adc
and
ss
enter
rorb
arpl
mov
in
outsl
mov
pushf
mov
add
dec
adc
mov
pop
xor
addr16
and
mov
cmp
es
adcl
xor
xchg
mov
arpl
jge
jo
push
movsb
adc
fwait
xor
int3
push
jnp
daa
dec
pop
sbb
movb
jne
stc
pop
and
sub
inc
xchg
mov
mov
int3
xchg
outsb
cmp
testl
sarl
add
cmp
push
flds
push
mov
xchg
insl
testl
jecxz
adc
pminsw
lcall
mov
or
dec
mul
push
and
pusha
inc
in
fwait
enter
jp
and
add
mov
mov
imul
sarl
popf
ja
pop
mov
dec
sub
imul
movsl
ret
ret
sub
pop
or
ret
es
add
jge
jle
fnclex
cmpsl
idivb
jns
lcall
and
inc
subb
or
add
subb
out
xor
outsl
add
cwtl
push
clc
push
jne
push
sub
adc
scas
scas
in
push
pop
outsl
cli
and
adc
cmpb
imul
fsts
imul
or
jecxz
pop
pop
in
jae
mov
filds
out
cli
aam
ret
mov
fldt
adc
inc
ror
shrl
adc
lea
aam
mov
push
add
movhps
push
mov
in
mov
loop
test
movsb
nop
or
push
push
fwait
ds
ficompl
insl
and
in
sbb
in
xchg
out
mov
or
js
dec
xchg
push
les
pushf
jnp
jns
jge
call
insb
and
leave
popf
ds
mov
pop
dec
push
mov
pushf
in
out
fdiv
inc
les
jne
inc
mov
add
sub
xchg
or
inc
stos
jmp
leave
aas
cmc
push
add
arpl
add
adc
clc
jg
bound
push
fistps
pop
ds
filds
inc
std
sbb
jmp
mov
cmp
pop
sti
or
daa
mov
xchg
add
mov
dec
movsl
into
mov
mov
ja
mov
or
xor
inc
pop
idivb
icebp
mov
int3
xchg
out
pop
pop
pop
leave
aam
and
subb
les
and
sbb
ds
pop
inc
mov
inc
mov
dec
fildl
ret
aas
bound
sbb
mov
sbb
cmpsb
ret
add
loop
pop
cmp
and
and
mov
in
jns
mov
mov
mov
aas
negb
mov
shlb
push
add
xchg
jp
xchg
push
in
gs
jl
cmpb
cmp
jmp
mov
jl
cltd
cld
iret
sbbb
ret
xchg
repnz
xchg
leave
test
out
stos
ret
imul
pop
and
stc
fcompl
and
ss
add
mov
pop
fcmovnbe
cmc
test
and
xor
pop
ss
lods
outsb
addr16
ret
pop
vucomiss
loope
ss
dec
cmp
sub
out
popa
lcall
in
sub
sub
jmp
dec
mov
subb
cltd
pop
dec
push
aam
pushf
adc
movsl
out
mov
dec
mov
je
std
fsubrs
out
jecxz
jo
jg
xchg
and
cmp
fwait
lret
andb
aad
jp
idivl
xor
cmpsb
pop
das
mov
or
por
clc
pop
lods
xlat
rcll
jmp
push
adc
gs
push
mov
rcll
in
sbb
jp
fucomp
lret
insb
out
inc
push
jge
inc
testb
jb
or
xchg
fucom
dec
in
mov
aas
xchg
mov
dec
or
mov
jp
icebp
cmpl
pop
movsl
mov
cs
shll
sar
inc
repnz
ljmp
mov
push
loope
icebp
mov
lret
stc
jns
push
fstpt
insb
mov
js
push
shll
add
and
adc
aaa
pop
adc
rep
inc
xchg
add
je
outsb
pop
jge
incl
sub
es
mov
adc
sti
mov
ds
sub
or
add
jmp
adc
pop
mov
sub
movsb
out
bound
mov
sbb
bound
cmp
in
dec
mov
popa
movsl
inc
outsl
cs
dec
dec
inc
pop
xchg
inc
dec
andl
addl
mov
or
mov
xchg
ret
rcrb
insb
mov
bnd
pop
leave
jbe
loop
jae
xchg
arpl
xor
stos
mov
jl
xchg
repz
cmp
cmp
cltd
sub
xchg
or
mov
fwait
sub
push
cltd
inc
testl
es
pop
mov
enter
punpckhwd
mov
lgs
dec
sub
add
mov
jnp
daa
fisubrl
xchg
ret
and
mov
mov
cmp
jmp
sub
and
add
ds
sti
dec
inc
lods
sahf
and
mov
mov
cmp
mov
mov
inc
xor
clc
cwtd
fmul
or
lahf
mov
into
xchg
mov
mov
das
inc
les
daa
js
aad
cli
jmp
push
add
cmp
xlat
jmp
bound
jp
call
and
sbb
inc
and
cmp
lcall
sub
imul
mov
lahf
xchg
gs
movsl
aaa
lock
pop
rorl
arpl
cmp
enter
out
cmp
xchg
movsl
pop
pop
jne
jp
or
jne
push
mov
xor
xor
rcll
lea
stc
jo
and
jo
push
mov
pop
xchg
xchg
inc
je
lock
xchg
les
xorl
or
sub
cld
clc
sahf
insb
pop
test
dec
sub
push
rclb
fisubs
xchg
or
shll
jbe
aad
and
or
jne
notb
stos
stos
push
loope
add
xchg
lcall
cli
repnz
and
shlb
pusha
out
mov
lds
testb
mov
daa
leave
xchg
inc
jb
mov
jae
sub
sbb
and
xchg
insl
xor
pusha
push
and
dec
lea
mov
stos
es
fisubrs
popf
push
dec
mov
mov
movsb
or
out
mov
cmp
inc
cs
rcrl
xor
std
loopne
sarb
push
jb
sahf
and
in
ja
xor
cmpsl
pop
in
or
and
mov
sbb
adc
jbe
aas
jne
add
sbb
sub
lock
cmp
aad
push
push
cmp
xchg
jns
bound
xchg
call
leave
cmp
cli
jg
ds
add
xchg
aaa
push
mov
orb
mov
and
mov
loopne
shll
jp
outsb
fwait
and
or
mov
mov
in
push
fwait
andb
sbb
cmp
test
dec
inc
push
cmp
mov
es
rcl
cmpsl
into
cli
pop
cmp
jae
push
xor
rcrl
mov
pop
and
add
scas
inc
inc
cmp
loopne
jp
cmc
rcrb
xchg
sub
in
jecxz
in
shlb
scas
push
mov
or
cmp
cmpsl
dec
sbb
pop
sub
test
test
add
push
push
roll
sub
in
imul
imul
idivl
movsb
jl
fwait
mov
adc
fidivs
push
lcall
out
cltd
loope
shr
es
xchg
loop
scas
jmp
lahf
add
mov
dec
jecxz
jbe
pop
pushf
xchg
dec
dec
pop
pop
out
loop
cmc
dec
sub
insb
pop
and
adc
mov
les
mov
cmp
xchg
pusha
fucomi
xchg
sbbl
push
inc
mov
lret
enter
push
push
and
inc
bound
aaa
adc
aad
arpl
sti
test
pop
sub
add
fcmovu
mov
sahf
fcompl
mov
loop
fistpl
mov
inc
or
and
imul
sub
mov
imul
sub
and
imul
push
jp
shrb
das
add
pop
xor
cltd
mov
xor
shl
mov
add
int
cmpsl
scas
push
int
mov
fnsave
jns
sub
cld
aaa
xchg
mov
cwtl
test
lods
mov
adc
loope
mov
aas
mov
fmull
pop
ljmp
pop
jg
loopne
sub
test
cmpsb
arpl
adc
push
fisttpl
add
xchg
inc
cwtl
insb
mov
mov
and
in
sub
sub
mov
lcall
push
mov
stos
mov
jns
push
jb
xor
subl
es
and
cmc
loopne
sbb
pop
test
call
dec
sbb
dec
rorb
jle
mov
pop
ret
xchg
fsubrs
idivl
bnd
jge
cmp
subl
call
dec
les
sbb
rclb
and
mov
ljmp
mov
mov
pop
pop
shrb
sub
jge
sahf
imul
sbb
rolb
call
cltd
or
add
xchg
loop
sub
scas
in
mov
add
add
ss
subl
fmuls
cmp
pop
xchg
aaa
inc
dec
idivl
pop
sbb
or
sbb
push
leave
les
bound
mov
or
adc
pushl
call
cwtl
mov
pop
sbb
xchg
into
ljmp
lret
daa
lods
popf
pop
sti
mov
mov
sub
loop
jg
pop
nop
pop
out
adc
xorb
add
sbb
rcrl
data16
push
lcall
and
mov
popf
ljmp
cs
jecxz
out
mov
xchg
stc
adc
daa
push
mov
add
mov
ficoml
pushf
fldcw
rolb
lahf
int
int
push
jp
mov
inc
push
rcrb
test
lock
or
xchg
xchg
int3
in
xlat
xchg
adc
sbb
pop
cltd
ja
mov
shll
aas
ret
adc
loopne
xchg
push
push
mov
cmpsl
and
outsl
pop
inc
js
or
fimuls
sub
mov
push
leave
icebp
adc
jno
cld
popa
dec
sbb
insb
mov
sti
cmp
jle
pop
in
setnp
outsl
inc
int
out
fmuls
loop
push
addr16
js
pop
mov
inc
mov
lods
daa
xor
cmp
jge
push
push
sub
lock
ja
in
ljmp
adc
jl
or
mov
lea
mov
cltd
dec
mov
movsb
pusha
nop
dec
mov
xor
fistpl
pushf
lods
ja
ds
xchg
sbb
out
xchg
data16
insb
sbb
iret
xchg
addr16
and
shl
daa
js
push
inc
movsb
dec
pop
mov
sub
mov
int
cltd
push
inc
leave
data16
or
jmp
sbb
and
xchg
adc
cmpsb
dec
sbb
enter
in
mov
sbb
sbb
test
nop
mov
push
mov
mov
sbb
dec
jb
stc
insb
mov
dec
imul
sbb
fists
cmp
pop
sub
popf
cmc
cwtl
push
cmp
xor
fisubrl
daa
fsts
xor
add
cld
mov
push
ret
test
hlt
mov
mov
xlat
pusha
jns,pn
xchg
out
cmp
mov
shrb
xchg
por
sub
fsubp
mov
clc
mov
xchg
cld
lods
jge
pop
int
mov
xor
mov
add
mov
mov
imul
mov
enter
mov
jbe
mov
xor
adc
jae
aaa
fimull
mov
orl
push
mov
dec
push
fdivrl
test
sbb
xchg
shll
xor
pop
aam
in
loopne
sub
push
mov
sbb
push
pusha
aas
and
adc
mov
in
pop
in
icebp
js
dec
add
idivl
push
push
enter
adc
push
mov
xchg
js
arpl
std
adc
cltd
cld
sub
cwtl
sarb
pop
push
fnsave
inc
scas
cmp
xchg
push
hlt
or
aas
pusha
pop
adc
sbb
sub
sbb
push
jle
xchg
jmp
sbb
xorb
mov
fwait
push
popf
dec
or
push
lret
jp
cmc
mov
mov
jo
fwait
test
pop
and
bound
inc
dec
lods
into
jo
or
sahf
push
mov
mov
jecxz
ja
push
test
pop
popf
clc
or
mov
adc
inc
lcall
jnp
xor
cwtl
mov
sub
and
add
xchg
or
imul
or
loop
ret
lods
xchg
push
adc
scas
adc
int
adc
loope
out
sub
lahf
push
enter
xchg
cwtl
pop
mov
dec
xorl
ljmp
dec
jno
out
pushf
sbb
jl
int
xor
enter
aaa
sbb
ljmp
std
and
adc
mov
cmpsl
lcall
push
mov
mov
jns
cmp
jmp
jecxz
pop
sbb
dec
cld
popf
push
and
inc
xchg
ss
lcall
sbb
movsw
mov
and
sbb
bound
cltd
es
cmpsb
fistps
nop
aas
cmp
push
cmp
mov
stos
test
pop
dec
pop
out
dec
fdivrs
std
daa
stos
jnp
cmp
loopne
add
fimull
push
inc
adc
adc
mov
jecxz
cmp
lahf
xor
aaa
inc
mov
inc
sbbl
mov
enter
dec
rclb
in
enter
or
inc
adcb
pop
pop
inc
push
add
mov
mov
in
imul
sub
push
push
std
cltd
mov
add
sahf
lock
add
mov
push
lret
sub
and
in
loopne
lds
inc
popf
sahf
or
push
jecxz
xlat
pop
push
and
xorb
fs
fiaddl
ss
int
dec
fdiv
adc
leave
mov
jmp
push
sbb
sub
sub
mov
mov
and
leave
data16
mov
outsl
pop
int
pop
dec
fidivrs
xor
lret
cmp
loope
cmpsb
cmp
adc
inc
jb,pn
xor
pop
and
in
inc
jns
scas
shrl
xchg
test
roll
ficoms
movsb
in
js,pt
inc
in
lret
int3
test
or
mov
pop
test
jle
mov
mov
popf
dec
cmp
mov
shl
in
lock
out
test
push
pop
nop
or
aas
adc
adc
les
mov
cmpsb
jle
scas
sub
stos
mov
push
enter
popa
push
inc
std
push
or
mov
gs
sbb
push
dec
jbe
fsubrp
jl
dec
pop
repnz
jge
pop
mov
dec
mov
cltd
ljmp
jo
jge
add
sbb
out
mov
movsb
mov
pop
sub
jmp
and
fistpl
lcall
cmp
dec
or
pusha
push
ja
nop
lods
rcll
push
into
mov
push
and
push
push
mov
out
movsb
movsb
insb
inc
mov
ljmp
jo
mov
lea
stos
andb
rol
sahf
push
mov
inc
xor
fs
scas
repz
pop
popa
jg
sti
bound
cli
push
std
adc
push
adc
sti
int3
push
lret
pop
mov
jo
mov
dec
fists
lods
add
jnp
mov
sbb
xor
test
daa
dec
push
mov
cld
stc
mov
movl
shrd
sbb
hlt
rorl
jg
jmp
mov
out
mov
add
js
aas
outsl
imul
jecxz
inc
lock
pop
out
or
or
outsb
sbb
fsubrp
movsl
aad
lahf
in
icebp
shr
lds
push
or
xchg
sti
xchg
scas
test
stos
or
popf
outsl
bound
pop
aaa
test
das
addr16
test
idivl
jb
addb
jno
cmpsl
mov
fidivl
mov
add
sahf
test
jl
xor
dec
fwait
sub
sbb
ret
xor
pop
leave
sbb
scas
push
jbe
jg
lcall
xchg
aam
xchg
loopne
stc
or
fimuls
mov
xchg
push
xchg
ret
outsb
ret
jnp
ds
mov
cs
xor
scas
rclb
xorb
sbb
shll
cmp
cmp
xor
jo
sub
test
pushw
std
pop
out
je
std
cmp
scas
xchg
mov
shrl
push
in
mov
subl
loopne
jge
pop
in
js
jge
jb
cmpsl
shrl
and
test
pop
push
in
cmp
nop
xchg
inc
lret
fldcw
test
out
ret
jp
mov
push
jae
jl
enter
adc
pushl
mov
pop
or
cmp
bound
out
add
jg
aam
fstpl
std
popa
aas
cmp
iret
and
or
cli
cmp
sub
pusha
push
cs
or
xchg
sub
jnp
scas
inc
sub
aam
xchg
mov
cmp
in
dec
or
mov
push
pop
jmp
jmp
pushf
add
dec
lock
xchg
call
shll
dec
sahf
enter
mov
xchg
mov
push
clc
push
lock
xchg
xchg
xchg
mov
or
lret
mov
scas
fistpl
xchg
pop
cmpsl
pop
adc
mov
pusha
push
mov
es
mov
bound
add
cs
fnsave
aam
sbb
fwait
push
xchg
pusha
jle
dec
dec
pop
lock
xor
popf
js
xor
inc
and
fistl
xor
adc
out
sub
ret
adc
bound
sbb
mov
push
mov
fwait
aad
mov
out
xchg
dec
push
add
loope
xchg
xchg
mov
dec
dec
filds
bts
push
pop
xchg
aam
cmp
xor
dec
mov
sti
sarl
out
icebp
in
or
bound
fdivrl
and
lahf
dec
cmp
sub
mov
push
insl
stc
jg
call
jns
into
cmpsb
and
int3
xor
rcrl
and
mov
xor
mul
mov
mov
dec
lcall
test
jno
xchg
xor
xchg
mov
xchg
and
inc
andb
jnp
popf
jne
pusha
daa
add
fs
add
imul
mov
sti
jle
cwtl
imul
and
call
pop
pusha
xchg
das
pop
je
push
ds
dec
repz
jbe
enter
mov
push
inc
movsb
jg
jae
sbb
push
xor
mov
push
xchg
adc
pop
cmpsb
xor
les
ret
stc
pop
mov
cld
inc
out
add
fldenv
dec
add
loope
sbb
sub
push
push
test
stc
add
jae
call
cltd
test
mov
xlat
sub
loop
test
mov
push
mov
sub
mov
inc
out
leave
xchg
sub
dec
sar
addr16
pop
pop
iret
cli
aad
lahf
loop
in
gs
scas
adc
icebp
mov
gs
aad
ret
cmpsl
fwait
sbb
pop
push
imul
jnp
cmp
movsl
jno
sahf
cmp
jb
add
jecxz
add
mov
js
int3
push
mov
jg
inc
xchg
aam
pop
es
pop
push
mov
lahf
inc
dec
adc
outsl
mov
mov
aam
aas
push
insb
pop
sbb
sahf
ja
mov
scas
data16
std
mov
scas
push
ds
and
sub
sub
xor
shrb
dec
fcoml
xchg
out
jl
sub
fmull
xor
cmpl
es
jecxz
xchg
inc
sbb
xchg
je
cmp
sub
pop
dec
sarl
lahf
xor
into
int3
pop
mov
rclb
jmp
xor
sti
pop
insb
popa
flds
pop
bound
or
xchg
sub
dec
inc
xchg
add
out
push
sbb
xchg
js
pop
jp
inc
push
andb
jno
loope
inc
js
jne
dec
aas
xchg
and
ljmp
pop
or
je
out
or
andb
les
call
cli
jnp
in
stc
jecxz
bound
stc
ljmp
xor
cli
pop
repz
inc
push
xchg
loop
push
pop
mov
push
aas
jmp
add
popf
mov
lock
and
xor
sahf
sarb
push
js
pop
push
js
cmp
pop
and
repnz
jl
loopne
lds
stos
push
sub
in
inc
cltd
fmuls
xor
add
sbb
sub
iret
xor
add
jne
xor
push
lcall
aad
imulb
xchg
jl
add
fldt
xchg
push
adc
xchg
push
push
daa
sbb
pop
mov
imul
jecxz
or
cmp
inc
adc
and
mov
imul
sarb
sbb
and
repz
dec
mov
or
test
push
add
jnp
adc
and
jl
iret
add
insl
int3
dec
xchg
ret
jg
aas
scas
xchg
sahf
mov
stc
cmp
pop
fs
push
sub
incl
mov
jg
jns
dec
lods
pusha
xchg
mov
sti
cltd
or
add
push
mov
pusha
xchg
icebp
mov
cli
pop
ljmp
fidivrl
imul
dec
stos
mov
fidivrs
std
mull
adc
fmulp
add
mov
aam
mov
jmp
sbb
cmpsl
jl
out
sar
test
xor
cmc
or
out
icebp
add
or
into
jp
sbb
shll
sub
and
test
fs
aam
cs
rolb
add
rcrl
lret
movswl
and
and
testl
push
subl
add
mov
insb
add
cmc
ret
or
push
cmc
sbb
sbb
cmp
pop
test
push
sub
ljmp
jmp
add
test
arpl
cmp
ljmp
sub
sub
ret
mov
push
imul
clc
in
es
fldl
jp,pn
mov
mov
inc
ss
mov
inc
push
scas
fstpl
pusha
inc
call
bnd
sbb
pop
rcrl
pop
dec
mov
adc
cltd
scas
popa
mov
fisubl
sub
dec
jnp
pop
imul
rcr
mov
xchg
or
lret
sahf
test
outsb
js
pop
cmp
scas
out
sbb
in
xor
mov
dec
fcoms
xchg
mov
adc
sub
inc
jg
ret
mov
and
cmp
pop
xor
or
out
inc
outsl
insb
adc
fisubs
cmp
pop
sbb
xor
sbb
sbb
mov
test
sbb
or
and
cld
mov
mov
jns
adc
arpl
push
adc
leave
aaa
mov
jne
jg
aam
dec
add
jo
popa
xchg
test
dec
pushf
mull
mov
nop
pop
fsubp
ret
jae
jb
add
stos
mov
cmp
hlt
gs
into
stos
push
cld
cld
leave
movsl
xchg
dec
push
mov
nop
bound
xchg
xchg
lret
shlb
nop
imul
dec
push
out
enter
xor
mov
lcall
inc
sub
xchg
pop
repnz
mov
pop
ret
jbe
dec
nop
aaa
or
aaa
mov
dec
push
cmc
xor
inc
cwtl
popa
jbe
clc
sub
dec
cmpsl
inc
xchg
inc
in
pop
aaa
mov
cmp
fwait
mov
mov
shlb
fcoms
ret
mov
sbb
fisttpl
xchg
aaa
push
loope
cmp
fstpl
mov
pop
mov
mov
mov
xchg
mov
fbld
pop
and
add
mov
mov
push
dec
jnp
pusha
jl
pop
mov
hlt
sub
sar
repz
fcompl
shll
cmp
mov
fnstcw
push
scas
xor
xor
mov
cmpsl
aam
in
sbbl
and
and
mov
sub
imul
pop
mov
lods
pusha
adc
push
xor
sar
in
ficoms
dec
jmp
pop
xor
ljmp
mov
fistps
pop
ss
jmp
sbb
repnz
adc
cltd
jno
or
sub
std
inc
adc
pop
inc
sti
lahf
inc
push
sbb
pushf
mov
xchg
xchg
pusha
mov
add
sub
dec
fildl
sbb
xchg
add
loop
loop
pop
or
fildll
adc
add
xchg
ret
pop
icebp
faddl
enter
mov
fcomps
pop
push
push
push
jp
jle
loope
inc
icebp
ret
or
mov
inc
nop
insb
jno
push
jmp
jnp
shll
or
adc
sti
into
pop
je
pop
add
push
xor
lds
repz
push
jbe
loope
cmp
mov
fmull
push
mov
mov
stc
lahf
and
test
mov
in
or
pop
and
sbbl
mulps
lods
sbb
xor
cmp
insb
and
xchg
mov
mov
sbb
mov
int
adc
imul
pop
mov
sbb
cmp
insb
jecxz
or
test
test
clc
aam
daa
xor
je
xor
inc
mov
xor
pop
rorl
mov
popf
aam
out
stos
dec
pop
mov
dec
inc
cwtl
es
dec
and
sub
or
scas
mov
pop
and
sti
test
call
out
aaa
ficomps
enter
int
push
pop
mov
mov
push
cli
dec
sbb
repnz
adc
jno
test
out
outsb
xchg
cld
ret
mov
mov
ds
aaa
scas
xchg
pop
out
pop
jo
insl
push
push
nop
xor
cwtl
addl
adc
sti
add
iret
xor
pop
xchg
into
sub
push
sbb
insb
arpl
out
lods
mov
repnz
mov
push
dec
inc
jle
mov
cld
mov
jl
sbb
call
gs
inc
into
andb
stos
jg
das
jmp
pushf
lds
xchg
inc
pop
int3
or
xor
stc
or
js
inc
enter
or
andl
add
mov
mov
hlt
fists
adc
xchg
dec
ficompl
mov
cmpsl
ljmp
mov
cltd
push
loope
inc
iret
or
add
mov
rorl
and
jo
sub
enter
loope
push
repnz
ret
sub
stc
cmp
adc
push
mov
push
imul
sub
ljmp
or
aam
sbb
leave
jle
jb
mov
cmpsb
out
sub
pop
lds
sbb
in
fadd
and
loope
jp
mov
stos
cmp
inc
testb
int
pusha
adc
sbbl
sub
sbb
push
xor
pusha
jmp
mov
jmp
stos
es
int3
jno
rcrl
mov
gs
xor
xchg
sahf
lcall
jne
test
fcoms
add
loop
add
icebp
push
mov
sbb
sbb
nop
mov
mov
xor
add
mov
and
and
sub
aam
jmp
test
in
cmp
sbb
fdivrs
xchg
mov
inc
imul
xor
fisttps
jle
rcll
out
inc
addb
dec
push
lret
cmc
xor
jns
dec
xchg
fcmovnb
lcall
and
add
add
aaa
stos
and
clc
xor
add
or
jo
inc
fs
sahf
out
xor
aas
mov
adc
shrb
popa
insl
xor
xor
sub
push
ret
mov
lods
sub
mov
loopne
cmp
adc
into
push
pusha
sub
cmp
pop
loop
add
mov
out
xchg
jnp
sbb
or
jmp
out
mov
aad
inc
ret
ss
mov
jno
inc
movsb
xchg
aas
lahf
jo
push
loopne
adc
push
mov
sbb
pop
inc
mov
fisubl
loopne
divl
leave
mov
flds
icebp
adc
imul
inc
xchg
ret
jmp
dec
dec
scas
andb
sbb
or
int3
cmp
adc
lock
mov
or
rol
add
into
js
jg
pop
push
or
cmpsb
lds
jle
adc
dec
mov
in
sbb
pop
mov
bound
add
lods
shrb
or
ds
mov
les
mov
xchg
ret
xor
arpl
sti
out
mov
jnp
into
lea
negl
inc
sahf
pop
sti
cmc
jno
add
adc
cwtl
aam
adc
jb
filds
fisubl
mov
fcoms
icebp
loope
jg
inc
add
dec
mov
ds
mov
insl
jg
jecxz
xchg
popa
cmp
addb
test
mov
lret
adc
cmp
cmp
sbb
xor
xor
cmp
insb
orl
cmpsb
lcall
dec
sbb
add
pop
jp
lahf
pop
icebp
push
or
mov
pop
fwait
decb
mov
mov
mov
fwait
lahf
rcll
pop
popf
fsubrs
in
fcmovnu
pop
insl
inc
sbb
lods
int3
push
inc
and
jg
push
pushf
lock
fwait
ds
push
mov
add
sub
push
cwtl
mov
enter
das
cmpsb
adcl
jle
fdivs
nop
dec
inc
int
iret
jb
cmp
xchg
pop
mov
lcall
cmp
lock
lret
and
and
clc
pop
fs
cli
cli
jmp
adc
es
roll
push
movsl
lods
xor
sub
xor
std
pop
ret
mov
jns
xchg
jmp
jne
shlb
test
stos
lods
add
cli
add
pop
cwtl
jne
sub
jne
shrl
aas
js
rcl
imul
add
ja
or
pop
inc
pop
js
loope
mov
mov
pop
cmp
cmp
adc
scas
dec
sub
mov
xchg
das
sahf
outsl
idivb
lock
pop
mov
jp
fstl
mov
or
add
add
pop
pop
jecxz
test
mov
gs
pop
test
pop
loopne
sub
sbb
rorl
mov
pop
inc
in
movsl
sbb
pop
mov
dec
fcompl
lock
outsl
pop
push
xor
sub
dec
xchg
push
loop
cmc
fsubs
int
sti
add
lods
mov
pop
imul
jno
cs
stc
icebp
sbb
mov
jne
clc
lea
out
xchg
and
lds
sub
mov
rcll
jns
outsb
outsb
push
insl
daa
cmpsb
inc
and
or
sub
ficompl
mov
xchg
btc
bound
loop
fmull
push
lcall
xchg
push
adc
je
or
mov
decb
mov
jo
cmp
test
out
pop
loope
adc
lret
mov
mov
cmpb
enter
xchg
jo
lret
pop
add
xchg
mov
xchg
in
pop
ret
jb
je
nop
nop
mov
push
xchg
or
sub
pop
mov
loop
xchg
push
xchg
test
loopne
loope
cld
dec
jns
mov
movsb
sbb
setg
add
fldenv
dec
movsb
sahf
fsubs
push
js
or
mull
mov
or
jecxz
mov
mov
inc
frstor
push
mov
mov
xchg
aam
cli
mov
xchg
inc
mov
push
jnp
ljmp
push
inc
nop
cmpsb
scas
push
add
push
popa
ret
pop
sbb
mov
mov
sar
data16
cmp
sub
mov
cmp
jae
lret
push
repnz
mov
pop
push
adc
cmpsb
mov
lahf
out
sbb
xor
sahf
mov
jne
mov
jp
into
xor
or
imul
push
sbb
xchg
in
sub
pushf
lcall
loope
jmp
sbb
pop
xor
cmp
rorl
sub
sbb
inc
xchg
xor
mov
cltd
mov
pop
and
and
cld
cmc
adc
mov
inc
fsubrl
aad
push
xchg
aad
dec
test
test
data16
scas
ret
mov
pushl
xlat
fisubl
cmp
add
sub
jno
lods
sbb
jp
sahf
stc
jno
mov
inc
aas
ret
jae
inc
xor
pop
push
in
out
in
jae
ret
addl
jo
add
jge
or
pop
pop
jae
sub
jg
mov
mov
mov
cmpsb
xor
sti
sahf
aad
stos
jo
inc
dec
mov
je
imul
jmp
test
mov
xor
inc
mov
mov
fxam
add
xor
and
pop
jp
mov
fisttpll
rorl
jnp
push
insb
pushf
jns
jno
jbe
sarl
sub
rolb
and
jge
cmpsl
sbb
and
sarb
and
sbb
inc
icebp
add
sub
in
push
std
lods
arpl
add
addl
cld
orl
mov
in
jle
clc
jl
lret
out
sub
push
mov
je
mov
jmp
mul
sbb
sub
sub
add
icebp
push
xor
pop
fnstsw
mov
mov
push
fisttpll
movsl
dec
hlt
enter
orb
imul
adc
xchg
mov
int
mov
xchg
lea
and
cmp
xlat
dec
mov
test
inc
ret
sahf
pop
inc
xchg
fs
fistpl
push
jmp
push
mov
fwait
enter
cmpsb
add
cli
cmp
icebp
fcmovbe
or
call
pop
or
cs
xor
loope
push
adc
movsb
mov
mov
shll
mov
stos
xlat
cmp
dec
cmp
and
jmp
mov
popl
dec
je
jle
movsl
or
es
cmp
inc
and
jne
sub
mov
dec
push
push
stc
jle
jb
xchg
sub
movsb
or
and
inc
pop
mov
jmp
pop
adc
mov
std
push
lcall
arpl
mov
scas
mov
xchg
push
js
and
push
les
pusha
stc
sahf
lea
icebp
lea
imul
stc
fildl
jnp
cmpsb
sub
jno
lcall
sub
test
sub
scas
int3
outsl
mov
and
ss
daa
cmp
stos
xor
mov
push
jns
pusha
mov
ror
sahf
adc
add
mov
andl
add
mov
mov
cmp
sub
mov
pushf
mov
repnz
push
push
inc
ljmp
iret
fisubrl
mov
jae
sub
or
andl
mov
add
xor
iret
ret
je
jb
xor
rcrb
rolb
sub
jp
add
pop
insb
out
jle
jmp
inc
jmp
dec
or
mov
call
pop
mov
push
sub
mov
hlt
pop
test
xchg
bound
cltd
int3
mov
and
loope
ret
hlt
xchg
mov
jmp
and
xchg
arpl
mov
into
add
adc
sarb
xor
test
mov
push
sti
ljmp
orl
and
push
pushf
jno
lret
arpl
push
xor
adc
loopne
fidivs
ss
mov
mov
fldcw
jge
push
and
sub
inc
inc
repnz
nop
fadds
hlt
sti
sbb
lret
test
imul
xor
scas
adc
sbb
popa
dec
ficomps
cld
arpl
dec
push
hlt
jo
xchg
mov
mov
xchg
rol
cmpsb
jno
mov
fsubl
cmpsb
cli
jl
fimuls
pop
inc
mov
add
shrl
jno
jmp
ds
arpl
cmp
mov
aaa
jmp
jnp
jbe
and
flds
inc
fldt
sub
aad
push
pop
cli
jmp
lcall
pop
outsl
shl
int3
jns
jle
or
xchg
dec
jb
and
push
ret
xor
jle
add
insl
add
mov
loop
fmul
clc
xor
push
jp
outsl
cmpsl
jb
in
lcall
je
dec
cli
in
imul
insl
mov
sbb
pop
pop
lds
fnstenv
shlb
shll
aad
insl
add
mov
mov
clc
add
lock
dec
cmp
sbb
andl
push
adc
mov
call
xlat
js
sbb
ret
adc
sbb
dec
lods
xor
cmp
mov
les
ljmp
icebp
add
popa
lds
mov
sbb
xor
lea
xchg
ds
dec
aam
out
iret
gs
or
xchg
adc
stos
arpl
jns
jl
pop
call
ljmp
inc
push
and
add
jns
cmp
sti
push
insl
pop
inc
test
int
sub
mov
in
adc
mov
lret
xchg
icebp
ds
xor
sahf
aas
das
cmp
adcb
popf
sub
mov
xchg
dec
and
adc
sub
mov
outsl
fiadds
xor
in
mov
pop
ja
enter
pop
xor
ljmp
fs
lcall
shll
mov
out
or
pop
sbb
jl
mov
dec
mov
or
rcr
or
or
and
push
pop
adcb
jge
jmp
test
movsb
mov
pop
add
xor
pushf
movsl
into
and
nop
test
push
bound
jae
mov
push
lods
xor
loop
xchg
xchg
xor
mov
sub
xor
jbe
and
push
lret
dec
mov
xchg
sahf
imul
sub
dec
sub
daa
or
inc
pop
daa
xor
push
inc
mov
add
xor
scas
inc
out
negb
popw
mov
sub
push
xchg
pop
jmp
cli
jecxz
mov
into
dec
push
mov
mov
jne
mov
das
fidivs
adc
xor
cwtl
adc
cli
jp
das
test
imul
out
and
inc
pop
call
or
or
movl
push
lock
sub
ret
fbstp
dec
mov
push
adc
dec
jbe
mov
jb
data16
jo
movsl
jp
push
lds
addb
and
add
fmuls
lret
jno
shlb
test
subb
in
lock
and
stc
sbb
mov
les
add
lcall
push
xor
jo
mov
push
mov
scas
sub
mov
shlb
rorl
lods
inc
testb
pop
ret
push
sub
dec
mov
fstpt
pop
mov
sub
cmp
or
inc
out
call
out
cmp
xchg
loope
outsl
lds
pushf
cmpsb
push
pop
ficoms
or
mov
pop
les
movsb
push
xchg
pop
test
movsl
mov
jnp
pop
mov
pop
hlt
push
movsl
sub
xchg
pop
fcomps
outsl
inc
ja
ficoml
push
pushf
mov
outsb
dec
popf
ds
inc
sahf
push
insb
dec
sbb
scas
inc
loopne
jb
iret
ret
jns
insl
add
test
cmpsl
push
adc
fwait
inc
and
jle
xchg
fistpl
add
ret
rorb
shll
cmpsl
lock
mov
mov
lahf
xor
aaa
sahf
cld
aad
rcll
leave
or
lcall
sbb
ret
es
outsb
xor
xchg
in
pop
mov
incl
out
mov
mov
and
enter
mov
stos
nop
out
call
mov
sbb
fistl
dec
sub
cmc
subl
flds
arpl
mov
in
or
leave
cmp
jmp
mov
arpl
movsl
jne
xchg
frndint
or
outsl
andb
movsl
xchg
and
adc
push
dec
push
popa
icebp
jae
xchg
movsl
int3
pop
stos
incl
fistpl
scas
sub
pop
mov
fidivrs
fsubr
inc
int
xchg
insl
inc
stos
dec
popa
incl
adc
sub
sub
js
lea
mov
inc
sub
shlb
in
ficompl
outsb
fnsave
adc
push
mov
lahf
lock
and
mov
sbb
cltd
adc
leave
popf
mov
insb
or
mov
dec
sbb
sub
in
popa
clc
daa
das
pop
inc
in
fistpl
inc
mul
inc
ds
int3
push
test
test
loop
ss
xchg
std
popf
in
cmp
psllq
arpl
cmc
movsl
jb
add
mov
js
hlt
fildll
dec
jo
lea
fdiv
add
rcll
or
stc
out
cmpsb
sbb
out
jecxz
or
loope
leave
mov
jmp
cld
push
cld
lods
adc
test
and
testl
push
icebp
mov
out
pop
popf
mov
jl
js
ja
push
and
sbb
pop
imul
push
mov
ss
and
pop
add
fstpl
lea
test
data16
mov
adc
mov
or
fwait
cli
jecxz
iret
insl
es
sbb
mov
lahf
xchg
cmpl
out
enter
std
test
or
xor
cli
mov
sub
xchg
cmc
test
or
loop
hlt
mov
dec
rorl
jmp
out
mov
ljmp
jp
cmp
mov
mov
add
or
mov
sbb
jmp
jecxz
pop
adc
dec
cmp
repnz
movsb
add
in
jnp
cmovle
lock
mov
mov
icebp
dec
pusha
pushf
dec
lods
in
xor
dec
push
jns
pop
inc
xchg
cmc
test
clc
push
mov
xor
stos
mov
outsb
in
out
sbb
insb
pop
daa
cmc
test
dec
ret
cmp
iret
mov
aad
inc
cwtl
leave
or
pusha
push
movsl
dec
ret
push
adc
loopne
movsl
or
clc
jge
divps
cmp
sbb
lret
aad
scas
and
stos
cmp
movhps
push
subb
gs
xlat
lret
nop
mov
or
push
dec
fs
jb
aam
ret
xor
mov
inc
mov
addb
test
and
xchg
push
shr
adc
jge
cmpsb
mov
addr16
mov
dec
inc
fwait
rclb
sub
mov
pop
in
loope
ja
popf
out
mov
and
lods
stos
and
xlat
pushf
jg
push
dec
dec
dec
lock
dec
daa
test
sbb
mov
daa
mov
fsubs
outsb
fdivp
mov
lods
xchg
cmp
mov
pop
add
or
xor
pop
or
sbb
addr16
imul
jns
gs
imul
scas
lods
test
jle
fdivl
push
repnz
jno
push
cmp
outsb
xor
lret
pop
inc
fs
mov
push
pop
les
fsubrp
cmpsb
adc
jo
dec
ret
cs
xchg
aaa
fstpt
js
sub
loop
push
and
and
cmpsl
mov
sub
shl
fnstcw
cmpsl
bound
lock
xchg
out
xchg
arpl
pop
addr16
inc
lret
sahf
and
sbbl
mov
mov
jl
ret
dec
or
sbb
add
mov
dec
and
xchg
stos
out
and
sbb
inc
mov
and
jno
xor
cmp
loop
push
rcll
fbstp
xlat
sub
fistl
orb
adc
cmc
nop
lea
cmp
negl
in
sub
loop
push
cmpsl
dec
lea
je
test
sub
das
loop
popa
div
stc
rcl
ds
cmp
cmp
mov
in
adc
fsubrl
sbbb
or
xor
fnsetpm(287
leave
clc
rep
mov
jge
inc
xchg
ja
lahf
or
adc
add
leave
subl
inc
orb
std
lea
xor
sarl
test
pop
push
aas
mov
jae
bound
inc
jg
in
cmp
cmp
sub
out
xchg
lret
adc
outsl
sti
mov
insb
arpl
jno
add
cmp
ret
iret
mov
popa
jnp
loop
insl
pop
arpl
add
in
mov
ljmp
ds
and
repz
adc
lahf
in
inc
test
push
push
in
ja
or
push
sub
sbb
jns
and
repnz
mov
cmp
push
pop
dec
fbstp
sahf
mov
xor
add
cmc
popa
cltd
outsb
std
loopne
jp
sub
in
xchg
loopne
pop
shll
aas
fdivrs
pop
jmp
pop
sub
ror
fmuls
dec
pop
fwait
cmp
mov
ret
enter
dec
lock
add
jbe
jno
outsb
jo
sub
dec
loope
push
lea
inc
push
out
sti
aam
xchg
fsub
jne
cmpsl
call
or
test
aam
jecxz
sbb
xor
jp
dec
mov
xor
add
movsb
sbb
out
cmpsb
or
cmp
sbb
fsubrl
insb
ja
arpl
nop
fildll
add
sbb
arpl
sbb
pushf
adc
fnsave
jno
add
and
in
dec
mov
push
jecxz
rcrw
fdivrp
leave
les
sub
push
or
loopne
ja
test
pop
pop
rcrl
sahf
xchg
pop
aam
and
ret
pop
dec
add
pop
add
cmpl
stos
aad
movsb
adc
or
and
fsubr
outsl
enter
pop
jge
dec
sbb
test
pop
insl
imul
mov
daa
aas
cmpsb
and
sub
adc
imul
mov
jmp
jno
push
pop
orl
inc
leave
push
loope
popf
sub
add
sbbb
bound
adcb
xor
sbb
add
jae
sbb
call
out
mov
aas
jno
pop
and
fwait
inc
cs
or
dec
jle
mov
ret
jmp
pusha
add
or
xor
mov
je
push
mov
push
in
cmp
data16
xor
cmc
xchg
repz
stos
jmp
sbb
mov
xor
mov
sub
movsb
push
insb
repnz
add
jno
jle
wrmsr
pop
shlb
push
push
xchg
dec
xchg
in
inc
xor
fldenv
sub
pop
push
sahf
sub
xor
dec
or
xlat
popa
pop
mov
sub
push
mov
filds
popa
test
lods
or
xchg
cwtl
push
and
and
xchg
xchg
jl
iret
aam
sub
xchg
mov
fwait
subb
xchg
cs
int
mov
mov
mov
out
js
les
xor
aas
mov
and
jo
mov
adc
xor
sub
or
xchg
push
push
jg
pop
in
idivl
inc
lahf
jae
adc
push
sub
and
and
orl
repnz
or
movb
dec
icebp
mov
mov
nop
js
xchg
xchg
jne
roll
and
jg
cmp
stos
sub
adc
scas
push
jecxz
mov
sbb
out
xor
and
xchg
push
xchg
sub
jne
daa
push
xor
xchg
mov
cmp
rolb
and
fwait
rcrb
gs
negl
add
repnz
mov
xor
cmp
adc
les
shrb
lret
push
sub
sti
mov
iret
fildl
cmp
call
sub
and
xor
mov
xlat
aam
push
pop
cmp
sysexit
xor
mov
sub
xor
out
jl
prefetch
or
jo
push
inc
mov
aas
xchg
adc
mov
fnstenv
pop
imul
push
fisubl
je
shll
cmc
movsb
jg
repnz
inc
jmp
loope
ret
jl
in
push
push
int3
xchg
insb
dec
push
stos
fwait
hlt
mov
xchg
xchg
or
pushf
rcll
aad
jle
pop
mov
jge
and
fdivl
xchg
xor
addr16
mov
jl
into
add
mov
out
jbe
and
int3
mov
or
mov
adc
fwait
jp
out
jne
cmpsl
inc
xchg
aam
pop
out
sub
adc
je
push
daa
mov
test
adc
xchg
cwtl
inc
nop
fcoml
jae
xchg
pop
icebp
mov
js
out
xchg
push
xor
lcall
ds
xor
push
lcall
inc
lcall
mov
push
sarb
repz
add
call
bound
xchg
lods
scas
push
mov
mov
lods
push
jo
out
ja
adc
xchg
scas
mov
xchg
dec
xor
es
and
push
gs
and
imul
mov
loope
xchg
out
pop
jg
xlat
cltd
xor
lret
add
pop
pop
outsl
adc
add
mov
push
mov
ficomps
clc
or
jb
movsl
iret
jbe
inc
pop
push
cli
inc
ret
jo
lret
scas
sub
fistps
imul
rcl
or
cmp
lods
nop
mov
icebp
frstor
adcb
or
ds
and
xor
arpl
cli
movq
rorl
clc
popa
cmp
adc
inc
xchg
push
pop
push
out
sub
rcrb
js
lea
lea
clc
shll
fnstenv
xor
nop
adc
push
jno
movsl
stc
lea
popf
jl
jno
jge
xor
cld
cmp
scas
ret
fs
pop
add
mov
mov
out
out
pusha
push
inc
xor
xchg
pop
push
testb
cmp
push
inc
pop
out
add
lods
clc
sub
or
or
into
ret
fists
ss
mov
add
fcompl
in
nop
pop
mov
sti
push
adc
push
mov
sub
test
pop
jg
sbb
pop
rorb
dec
scas
push
pop
and
and
mov
gs
or
mov
add
mov
push
pop
loop
sbb
push
xchg
std
adc
sbb
testb
mov
add
adc
sub
lods
dec
lock
add
xlat
aad
dec
loop
mov
rolb
in
lock
xchg
loope
inc
adc
out
jl
test
cmpsl
rclb
xor
xchg
cmp
jbe
jge
xchg
testb
dec
punpcklwd
stos
scas
clc
and
cld
test
pmulhw
add
cmp
push
mov
cmp
add
jg
adc
test
andl
stc
mov
arpl
jmp
sbb
jno
mov
xchg
in
sarl
and
jb
fdivl
stc
fadd
mov
mov
subb
adc
fdivr
jbe
outsl
lods
shl
sbb
inc
jecxz
add
andl
add
ds
sbb
dec
fdiv
in
inc
cmp
mov
mov
ret
ja
mov
ret
psubq
int3
es
pop
lret
inc
adc
mov
xchg
int
dec
loope,pt
lock
inc
lcall
sub
pusha
rcll
imul
push
leave
aaa
push
loop
jne
and
pop
pop
imul
lahf
push
cltd
pop
jnp
jb
dec
sub
pop
loopne
and
fmull
les
mov
loope
arpl
scas
popa
mov
adc
lcall
cmpsl
cltd
sub
lds
icebp
jg
imul
push
ss
pop
lock
xor
xchg
pop
pop
mov
fadd
rol
leavew
into
xchg
jp
hlt
test
ret
cmp
sub
daa
and
adc
aas
frstor
imul
fldenv
xchg
lods
jge
mov
inc
inc
push
xchg
pop
push
xlat
xchg
sub
adc
shll
aam
icebp
xor
push
in
sbb
cs
fwait
pushf
mov
jmp
lret
pop
fwait
pop
push
sar
jl
stc
ja
inc
mov
notl
lods
pop
iret
aaa
xor
popl
pop
and
dec
sbb
fwait
or
fldt
std
and
ljmp
add
mov
cmp
lock
xlat
scas
subb
sbb
xchg
pop
lods
sbb
in
mov
rorl
out
movsb
fs
ffree
aam
mov
sub
dec
inc
jle
pop
fs
push
push
push
gs
push
mov
out
cs
jae
loop
fistpl
push
sub
bound
mov
adc
mov
add
inc
pop
dec
xchg
or
cld
aas
mov
mov
pop
inc
pusha
jne
aas
mov
popf
push
sub
mov
dec
dec
pop
adc
dec
jnp
out
mov
lods
hlt
movsl
fs
into
sahf
mov
and
das
pop
xchg
gs
fdivl
adcl
movsl
ljmp
dec
ds
bound
pop
into
and
imul
mov
mov
inc
adc
ljmp
dec
int
mov
adc
jmp
mov
dec
mov
mov
aad
aas
adc
mov
adc
lret
sub
adc
cmc
ret
pop
and
dec
test
fstpt
insb
jo
xchg
sub
or
push
inc
inc
int
jp
aam
and
cmc
push
mov
mov
xchg
les
int3
mov
push
call
push
imul
sbb
inc
fldl
and
jle
push
adc
std
mov
sub
jg
xor
pop
lahf
xor
push
sub
push
jg
aam
sarb
sub
inc
pop
cmc
mov
stos
aad
cmpsl
pop
and
push
aad
dec
sub
fnsave
arpl
add
add
daa
xor
mov
and
mov
mov
mov
push
push
xchg
dec
aas
daa
fdivr
pop
jmp
push
stc
lods
xor
cwtl
xchg
arpl
jno
loope
mov
inc
lret
cli
mov
je
ficomps
inc
dec
out
cmpsb
and
pop
test
mov
imul
dec
mov
fsubrs
out
clc
insl
icebp
add
inc
mov
sub
sar
int3
and
jp
xchg
sub
jnp
loopne
in
inc
jp
pop
lock
icebp
push
movsl
lret
ss
imul
test
dec
push
ret
and
fisubrs
push
in
idiv
cmp
daa
clc
mov
push
xchg
ds
jge
fcoml
mov
stc
or
sbb
and
dec
in
cmp
adc
fcomps
xchg
pop
and
or
pop
call
and
push
stos
cli
roll
push
fmul
je
adc
lret
not
loop
pop
enter
adc
pop
into
out
mov
pcmpeqd
adc
in
test
fimull
lock
mov
cmpb
jb
pushf
push
sbb
lret
insl
enter
mov
prefetch
or
daa
xor
push
test
lods
and
cli
loop
push
adc
insb
insb
mov
sub
fidivl
test
push
push
push
push
push
mov
fimull
shlb
mov
dec
daa
int3
mov
mov
sbb
and
mov
rclb
mov
adc
pusha
jmp
inc
push
iret
jnp
stc
leave
xchg
movsl
push
mov
dec
pop
jl
shl
cmp
call
std
rorb
or
leave
lret
inc
mov
xchg
adcl
lahf
jg
or
mov
stc
mov
add
push
mov
roll
pop
mov
repz
imul
fisttpl
or
lods
sub
popf
inc
sahf
and
enter
sbb
in
push
cmpsb
ss
cmpsb
movsl
ja
cmp
iret
sub
jbe
aaa
stc
cmp
loope
mov
mov
xor
xchg
mov
aam
inc
call
shll
cmp
insl
jb
pop
out
outsb
adc
pusha
mov
test
sub
mov
xchg
js
jns
jbe
xor
add
in
out
xchg
mov
dec
insl
and
loopne
shlb
test
out
mov
movsl
outsl
enter
ror
outsb
ds
into
sbb
cld
inc
adc
inc
mov
shr
adc
push
test
loope
jmp
push
sti
insl
cs
sbb
xor
icebp
fwait
int3
or
psubw
adc
outsl
movsl
out
bnd
ror
gs
and
jmp
or
and
es
pusha
movsb
cltd
dec
adc
icebp
dec
testl
outsb
inc
mov
test
divl
daa
sarl
add
adc
jnp
jl
inc
or
and
aad
pop
xchg
fdivr
fistpl
mov
adc
aam
xchg
inc
dec
inc
push
push
ljmp
pop
cwtl
daa
pop
xor
dec
fwait
adc
sbb
pop
shl
mov
imul
stos
cmp
pop
mov
mov
mov
push
popf
add
repz
mov
popl
xchg
dec
sub
hlt
fcmovnbe
dec
xchg
sub
shrl
xchg
insb
add
mov
das
push
fisubs
enter
mov
test
icebp
loopne
mov
xor
ss
sbb
lods
cmp
inc
test
lock
pop
subb
cltd
stc
add
dec
mov
and
lret
push
and
sub
into
popf
cld
hlt
mov
dec
mulb
ljmp
subb
lret
push
push
orb
xchg
add
aaa
jne
fs
subb
mov
subb
xchg
mov
or
mov
popa
inc
fstp
xor
pop
aam
stc
jl
les
mov
mov
imul
movsl
jge
jp
in
cli
mov
xor
xchg
inc
cld
sub
fsubl
frstor
cmp
subb
cmpsl
insl
push
fisttpl
call
cmpsl
outsl
pop
push
std
popa
aad
cld
ror
je
sbb
insb
pop
push
adc
repz
mov
insb
mov
lret
orl
stos
xlat
mov
mov
sti
xchg
or
dec
das
fsubrs
test
dec
sti
hlt
es
bound
test
testl
mov
cli
sub
fldcw
mov
mov
or
rclb
shl
movsl
mov
push
fwait
int
int
jle
sub
xor
pop
xor
icebp
and
adc
xor
cmc
lods
inc
sbb
add
popa
int3
mov
out
sti
fmull
and
dec
cmpsl
and
inc
inc
loope
sub
lods
fldt
icebp
outsb
mov
outsb
xor
pop
xchg
xchg
lret
out
cmpl
aam
jmp
inc
sub
sub
cli
cmpsb
adc
loop
jnp
jo
test
sub
imul
stos
jecxz
rclb
push
pop
fdivrl
daa
jp
loope
insl
das
add
xchg
pusha
or
cli
and
sti
inc
out
adc
lock
ljmp
les
sbb
call
xchg
ja
mov
pop
test
cmp
neg
shl
pop
ss
push
cmc
dec
aad
xchg
in
fwait
mov
lret
lock
mov
jbe
pop
outsb
scas
xor
ret
fnstcw
aaa
xchg
fcmove
out
xchg
mov
out
aaa
mov
movsl
xorl
cmc
mov
inc
insl
jmp
cmp
or
lods
adc
rcrl
int
ds
xchg
stos
adc
and
cmpsl
nop
xchg
out
in
mov
inc
fisubs
push
push
test
mov
add
cmpsl
outsb
test
mov
push
pop
cli
dec
pop
xor
mov
iret
lahf
in
add
in
nop
mov
test
push
fwait
adc
das
jno
lea
scas
xchg
cmp
arpl
mov
ljmp
addr16
arpl
test
mov
xchg
filds
cmp
icebp
pop
jl
jb
mov
cmp
push
xor
stos
std
sbbl
aad
and
scas
push
push
and
xlat
dec
je
hlt
push
js
pop
push
sbb
cmp
ss
rolb
jl
cmp
dec
outsl
rol
enter
daa
push
cmp
jne
fnstsw
mov
push
inc
jbe
addb
fldl
xor
in
loope
mov
pop
out
lahf
add
cmpsl
lock
sbb
cmp
inc
loopne
inc
movsl
push
ljmp
fnsave
fistl
inc
xchg
mov
iret
ss
adc
mov
jmp
mov
hlt
bound
lcall
pop
sub
mov
popa
call
adc
stos
nop
stc
scas
in
xchg
ret
xor
pusha
jecxz
repnz
lea
lods
in
inc
rcr
stc
jbe
jnp
jb
push
jno
mov
sub
and
fmul
addl
add
pushf
stc
xchg
mov
or
pop
jb
enter
dec
out
fnstcw
jecxz
mov
mov
lods
iret
jb
push
mov
fs
xor
fidivrs
cli
mov
sti
ffreep
sbb
addr16
es
div
push
out
adc
std
lahf
lcall
mov
inc
push
fsubrl
pop
mov
sbb
daa
rorb
lds
packssdw
adc
gs
rorl
and
inc
mov
ljmp
mov
cmpb
shrl
add
daa
pushf
dec
jo
push
imul
mov
inc
int
mov
add
in
imull
clc
cmp
lahf
mov
hlt
push
xchg
lds
pushf
lahf
cmp
popa
sti
loopne
ficompl
clc
nop
sub
xor
sbb
adc
push
pusha
lret
dec
int3
push
adc
and
cmp
loope
popl
adc
pop
inc
xor
in
mov
dec
jg
pop
dec
mov
aas
adc
dec
xchg
sbb
cld
cmpsb
xlat
pop
int3
ja
test
shrb
rcr
mov
adc
mov
sub
pop
adc
adc
and
mov
xchg
stc
popf
iret
andb
inc
cmp
testb
jb
sbb
insb
jg
popa
pop
pop
and
jecxz
push
inc
and
loopne
xchg
stos
aad
push
test
ficoml
or
xchg
rclb
mov
es
in
push
das
add
push
lret
pop
in
mov
dec
pop
fisttpl
mov
cmp
inc
icebp
or
push
in
sbb
loope
push
cmp
stos
out
inc
rclb
cmp
js
push
in
addr16
out
lock
shrb
lock
push
jl
mov
jg
popa
jg
fsts
loope
pop
dec
es
das
pop
ja
rcrl
adc
wbinvd
add
add
adc
or
icebp
xor
pop
bound
arpl
and
aad
cwtl
mov
insl
add
dec
dec
ja
std
and
push
adc
fs
mov
mov
jno
jp
in
push
lds
pop
mov
movsl
icebp
jne
mov
push
icebp
outsl
or
jo
dec
lahf
movsb
xor
add
push
jg
push
push
fcomps
push
in
out
xor
dec
pop
mov
pop
mov
imul
cmc
test
jno
inc
out
test
loope
mov
mov
lahf
rorb
sub
test
das
movsb
mov
rcr
cmp
outsl
repz
adc
jge
int3
ss
popa
xchg
imul
std
pusha
ds
mov
nop
les
int
lcall
dec
xor
andnps
ds
jp,pn
insl
push
add
aaa
aam
cmp
mov
mov
mov
dec
mov
mov
push
in
add
subb
leave
addr16
testl
xchg
dec
popa
fcoml
lock
xchg
imul
push
or
lods
jo
lret
add
xlat
aad
sbb
mov
fisttpll
cs
loop
mov
add
adc
dec
sub
jne
xor
pop
insl
orb
test
xor
movsb
scas
adc
mov
fadds
xor
rcrl
mov
mov
fld
mov
xor
push
fisubrl
adc
pop
push
dec
stos
jmp
repz
or
sub
sbb
cs
mov
int
sbb
ficompl
fsub
pop
or
sbb
jle
push
xor
das
mov
add
loop
in
test
int
xlat
and
lods
frstor
ret
and
pop
test
mov
mov
repz
pop
push
std
cmpsb
sbb
push
dec
cmc
dec
dec
push
cmpsl
lret
pushf
adc
arpl
in
xor
lret
sub
ret
push
sub
std
xor
and
xor
aad
push
mov
cltd
cmc
adc
test
pop
ds
jb
and
adc
aad
inc
aas
scas
add
mov
mov
shlb
mov
inc
lods
or
push
mov
pop
mov
cmp
or
loopne
adc
in
adc
movsl
pop
mov
es
mov
out
je
popf
pop
mov
and
push
nop
inc
sbb
sub
lcall
and
xor
sti
roll
sbb
and
lods
add
push
adc
iret
fcom
jo
pop
movsb
leave
xchg
aas
push
xor
faddl
loope
ret
sub
mov
inc
lret
dec
mulps
add
mov
jg
out
mov
adc
mov
pop
mov
mov
inc
mov
ljmp
stc
mov
clc
pop
mov
scas
nop
pusha
es
adc
jecxz
jmp
adc
mov
pop
lret
inc
mov
or
xchg
ror
stc
stc
test
xchg
outsl
js
add
int3
es
inc
add
cmp
mov
aad
mov
fcompl
add
xor
cltd
sti
dec
xor
mov
or
adc
mov
imul
outsl
jmp
leave
les
fwait
movsb
adc
mov
xor
jbe
dec
cwtl
push
jns
xchg
push
movsb
push
mov
cwtl
daa
cmpsb
ficompl
mov
cmpsl
add
jb
xchg
scas
mov
jge
movsb
sub
mov
push
inc
iret
ds
xor
sub
inc
jecxz
addr16
mov
mov
mov
sbb
adc
ret
xchg
inc
cmpb
add
cmp
movsb
add
dec
lea
fwait
mov
xor
or
cld
rcrl
add
movsb
adc
js
adc
push
nop
jbe
adc
push
lahf
xlat
loope
push
add
lods
mov
test
sarl
sbb
mov
pusha
xor
rclb
jo
fistl
into
or
push
fnstsw
sbb
rcll
mov
sahf
decb
shrb
inc
arpl
adc
mov
int3
cli
ss
js
in
pop
lahf
and
mov
mov
aad
sub
cld
cmp
jns
mov
adc
imul
xchg
rolb
xor
push
sub
mov
mov
mov
dec
cmp
xor
movsl
psrld
lcall
adc
xor
bound
push
sbb
add
ss
pop
sub
mov
insb
mov
xor
sahf
sarl
or
cmp
loopne
lock
mov
ljmp
mov
pop
in
sub
add
xor
hlt
mov
notl
pushf
or
mov
popf
cli
jge
fstpt
out
sbb
mov
adc
inc
pop
mov
jb
movsb
jae
addr16
jno
adc
bound
sub
mov
jg
xor
or
jp
jmp
jmp
dec
fidivrl
mov
mov
scas
jle
mov
jae
xchg
xchg
in
xchg
int
jp
movsl
sarb
cmc
idiv
fisttps
inc
jb
movsl
test
jg
rcrl
jns
fld
popa
push
xor
popa
loopne
jnp
leave
sbb
xor
and
rcrb
out
mov
lock
lock
sbb
lret
sub
das
rorb
imul
and
pop
mov
shlb
ss
jae
shr
sbb
ds
bound
adc
inc
int
jns
mov
int3
mov
xor
rolb
inc
cmp
dec
jne
mov
push
xor
loop
xor
xor
ret
pop
pop
push
pop
imul
cmp
loopne
inc
mov
test
adc
adc
xchg
add
cltd
mov
add
fs
mov
fisubrl
fisubl
pushf
iret
ds
lret
cltd
pop
movsl
ss
test
pop
aas
popf
outsl
mov
jge
aaa
jmp
push
insl
add
mov
adc
lret
jne
xchg
dec
mov
and
add
lea
mov
gs
imull
call
ljmp
lock
pop
hlt
jecxz
aam
pop
lcall
scas
mov
lcall
cmp
pop
pop
or
mov
repz
imul
mov
std
call
pop
js
test
pop
mov
mov
lea
fcmovnu
dec
jmp
pop
pop
cmp
or
xchg
push
sbb
ss
dec
stos
dec
jp
cmp
insb
push
or
scas
imull
cli
aad
xchg
inc
xchg
xchg
mov
fnstenv
sub
aaa
pop
js
xor
add
mov
mov
test
dec
pop
sti
imul
pop
push
lret
pop
gs
mov
adc
adc
add
sahf
lock
dec
fistpll
adc
test
test
das
fildll
inc
into
scas
pop
pop
insb
jno
mov
xchg
sahf
les
test
xchg
cmp
jne
xchg
dec
xlat
sbb
pop
mov
sbbb
lods
inc
fdivrs
and
nop
pop
cmp
cmc
arpl
outsl
mov
fnstcw
out
sub
dec
out
and
dec
dec
jg
out
dec
daa
hlt
pop
ss
jge
sbb
jmp
pop
leave
bnd
lcall
mov
fsts
inc
cmp
mov
xchg
out
aam
movsl
sbb
push
cs
jne
insb
lret
dec
popa
pop
cld
gs
insb
popa
cld
out
xor
out
adc
cld
sbb
movsl
push
mov
jecxz
in
xchg
shlb
sbb
int3
jno
xchg
push
or
or
xchg
mov
fcmovnbe
sti
test
xchg
jg
or
or
inc
adc
pop
je
push
and
jae
cmc
cmp
mov
xchg
cmp
mov
mov
or
es
into
pop
jae
into
adc
shrl
xchg
push
sti
push
insl
xor
jno
cli
sbb
pop
xchg
push
fstpl
repnz
cmpsl
ret
or
std
mov
inc
xchg
cmc
xchg
and
inc
adc
dec
push
in
dec
leave
gs
mov
push
out
push
push
adc
jmp
popf
test
sti
pusha
ficoml
lods
ret
or
ret
decb
rcrl
inc
pop
push
lds
jne
loopne
lret
aam
pop
imul
and
adc
int3
xor
into
hlt
xor
repnz
sub
in
cld
sarl
fdivs
cmp
sub
jecxz
mov
lahf
inc
iret
pop
adc
cmp
subb
mov
mov
inc
arpl
popa
or
sub
push
imul
in
movsb
ljmp
test
jge
shr
fnstcw
inc
lahf
stc
movsl
dec
les
pushf
ljmp
fsubl
arpl
and
nop
and
imulb
jne
add
imul
and
imul
inc
add
call
movsb
cmp
add
pop
mov
mov
in
loopne
out
aaa
repz
filds
add
xchg
ss
sub
shll
clc
imul
cli
adc
jp
fdivs
mov
sbb
dec
gs
jo
pushf
mov
enter
js
or
pop
cmp
lods
mov
or
xlat
mov
sarl
mov
rorb
jnp
xor
rclb
enter
test
rorb
out
lods
je
repnz
dec
lods
cmp
or
adc
xchg
pop
mov
xchg
rcrb
xlat
call
mov
cmp
filds
inc
out
in
jmp
pop
sbb
cwtl
outsb
or
decb
out
add
dec
int
subl
fwait
dec
push
sub
jmp
sbbb
push
sub
fwait
mov
push
push
xor
rcll
jb
sub
pop
cmp
test
xchg
aad
mov
leave
in
dec
jg
aas
mov
cwtl
and
xor
adc
dec
dec
jns
jecxz
mov
and
cli
dec
adc
push
pop
bound
mov
ja
fucomip
and
test
inc
mov
call
cs
pop
sub
lods
pop
fstpt
add
add
adc
aam
in
scas
inc
push
push
pop
loopne
bound
stos
or
dec
adc
jno
inc
push
add
lea
cmpsl
jmp
stos
jae
xchg
bound
dec
outsb
xor
pop
loopne
xor
ljmp
and
pushf
jne
call
and
or
jp
repnz
dec
mov
in
cmc
or
rcrb
pop
push
or
out
adc
mov
out
pop
add
or
xor
sti
jmp
aam
in
subl
shrb
push
sub
xchg
notl
shll
scas
cwtl
imul
scas
fcompl
add
adcb
in
cmp
pop
jp
pop
cmp
xchg
loopne
dec
push
cmp
dec
push
pop
pop
pop
in
pusha
dec
xor
inc
insl
enter
inc
add
iret
xchg
outsb
mov
xor
mov
jg
xchg
int3
or
sub
out
lods
jp
gs
addb
or
cmp
push
subl
xchg
out
or
repz
loop
sub
push
sti
pop
adc
iret
pop
leave
dec
push
dec
jne
mov
pop
jo
jbe
adc
sub
mov
dec
mov
xchg
pop
pop
inc
stos
jbe
cltd
pop
jg
clc
xchg
inc
imul
xor
xor
lcall
pop
cli
xor
js
neg
adc
fs
loopne
cmp
jg
jae
out
scas
cld
push
mov
scas
fadds
push
daa
mov
sbb
sub
in
cmpsb
cld
cmp
inc
inc
mov
test
mov
and
and
sub
movsl
jns
inc
stos
lret
pop
cmp
cmp
in
fdivrp
add
sub
sub
imul
mov
xchg
test
divl
cmpxchg
and
adc
xor
adc
mov
cld
pushf
push
mov
lods
addr16
mov
fwait
loop
aaa
into
add
fcoms
fcoms
sub
mov
outsl
ss
mov
xchg
int
into
mov
arpl
push
mov
pusha
sar
aam
pop
fidivrl
lcall
lock
sub
lret
or
pop
inc
pop
dec
andb
daa
cmp
sbb
dec
xchg
jno
idivl
cmp
rcrb
inc
or
ja
popf
sbb
les
xchg
cmpb
mov
sbb
inc
divl
ds
into
jns
test
jnp
fcompl
stos
cmc
movsl
add
cmpsl
adc
shl
lret
mov
inc
bound
sub
int
lahf
lahf
stos
adc
cmpsl
mov
mov
sub
mov
adc
notl
test
hlt
mov
sahf
jp
inc
and
or
jmp
stc
sub
xor
sub
and
lahf
nop
and
ja
add
sub
cld
pop
mov
pop
jecxz
adc
flds
dec
mov
and
jns
lds
xor
push
mov
inc
push
mov
add
inc
dec
pop
jo
pop
inc
int3
inc
xchg
punpckhdq
je
and
cmp
loop
xlat
pop
faddl
das
inc
mov
out
cmpb
sbb
mov
xor
jo,pt
xchg
ret
cmp
sbb
pop
xchg
in
andl
jp
adc
lds
pop
in
pop
adc
or
out
jno
shlb
xlat
lea
test
push
pop
ljmp
lahf
push
sbb
int
scas
sbb
fcmovu
jp
xchg
in
out
jno
lret
hlt
rcrb
or
jno
rcll
fcmove
scas
mov
push
leave
andb
cmp
roll
mov
xchg
push
aam
sub
popf
into
test
sub
cmp
pop
cmpsl
jns
xchg
jb
fcoml
sub
inc
dec
pop
pop
dec
fsub
sbb
bound
pop
dec
xchg
stc
mov
icebp
push
loop
adc
test
push
cld
into
sti
mov
sahf
add
or
sar
mov
loopne
or
or
in
jmp
push
dec
adc
pop
daa
mov
and
push
and
lea
mov
mov
andb
push
mov
sbb
cwtl
enter
adc
ljmp
mov
in
mov
sahf
mov
and
mov
sbb
inc
mov
out
testl
sub
std
out
stos
adc
sbbl
jecxz
or
outsb
mov
pop
stos
adc
jmp
lds
or
push
sub
or
das
dec
mov
call
sub
mov
push
in
hlt
xchg
mov
imul
mov
andl
fisttpl
cmp
jl
dec
adc
sub
leave
dec
ds
mov
out
adc
ss
es
mov
fnsave
add
repnz
and
dec
test
ficompl
lock
sbb
es
fbstp
int
dec
push
mov
dec
into
repnz
push
jae
or
std
xor
cmp
dec
jne
lahf
lock
mov
imul
xor
adc
mov
xor
sbb
inc
int
sbb
pop
inc
xlat
test
push
sub
inc
push
ja
push
ret
push
std
or
and
rolb
push
lods
test
cmp
scas
rcrb
sbb
jle
imul
xor
rorb
pop
jne
xchg
cmp
mov
test
inc
mov
adc
jbe
push
std
push
ds
mov
inc
mov
jbe
and
adc
sub
sbb
cmc
inc
and
pop
jnp
mov
mov
pop
or
movsb
or
mov
cmp
lods
pextrw
andl
lret
push
loopne
mov
out
ret
or
xor
shlb
mov
mov
dec
loopne
repnz
test
aas
pop
and
mov
dec
ret
fistps
push
and
repnz
push
push
fs
lods
dec
xor
sbb
sub
leave
inc
pop
mov
movsl
das
cmp
cld
xor
xor
jnp
addr16
or
xor
lcall
xchg
push
push
pop
lea
stos
insl
pushaw
stc
fistps
in
mov
bound
push
lret
ljmp
not
das
cmp
jge
in
fidivrs
int3
arpl
aam
jo
mov
fwait
mov
add
xchg
sti
cmpsl
add
xorl
test
inc
fwait
inc
cmpsb
lahf
les
or
push
or
inc
cmp
adc
icebp
inc
pushf
push
mov
iret
pop
dec
call
mov
aas
inc
cmpb
je
inc
xchg
in
cwtl
push
xor
jge
xchg
mov
aad
sbb
and
loopne
dec
in
imul
pop
adc
arpl
inc
popa
mov
push
aam
push
jns
or
aas
inc
push
int
imul
cmp
and
sbb
les
cmp
iret
pop
push
dec
pop
call
mov
arpl
adc
xchg
pop
ljmp
pop
aas
into
push
push
imul
xchg
int
mov
aas
andl
lret
nop
std
mov
fimuls
or
mov
mov
mov
pusha
into
lods
mov
cmp
movsb
mov
cmc
and
push
mov
mov
out
out
lods
les
in
pushf
mov
dec
add
enter
mov
mov
je
push
mov
inc
xchg
insl
test
stc
stc
cmc
jo
popa
push
js
fisubrs
dec
inc
mov
jnp
inc
fnsave
xchg
and
mov
ret
adc
ss
jmp
mov
inc
test
das
xchg
in
ror
aaa
lock
mov
sbb
in
std
lods
push
fsub
inc
jns
outsb
pop
sahf
loop
testb
ja
movsb
outsb
loop
lods
inc
mov
outsb
mov
jns
insb
and
sub
aam
std
lock
fs
lret
sarl
movsl
cmc
sbb
mov
movsb
add
in
out
es
xchg
add
stos
pusha
aad
leave
shrb
gs
rcrl
jp
leave
shll
nop
out
hlt
fcmovne
dec
lods
cmpsl
jmp
out
sub
clc
ds
in
mov
popf
std
pushf
imul
xchg
ja
call
push
lock
inc
dec
pushf
xor
test
push
mov
fiadds
xlat
enter
xor
lods
in
mov
cmp
sub
js
fs
std
int3
xchg
jl
mov
sbb
gs
dec
rcrb
inc
mov
xor
int3
ja
dec
lahf
lds
pop
sbb
pop
mov
dec
lods
cmpsl
push
cmp
lcall
xor
subl
les
mov
pop
add
popf
movsb
xchg
pop
in
mov
dec
add
mov
fstps
fisubrs
xchg
or
int
andb
ret
pushf
cs
inc
daa
in
push
mov
ss
cmpsb
loop
lods
aas
xchg
cwtl
enter
in
xchg
mov
mov
add
jno
je
sub
or
movsb
in
adc
inc
loop
rcr
scas
and
iret
jne
cmp
xor
or
inc
xlat
idivl
arpl
jne
lods
dec
or
jg
popf
or
and
mov
mov
test
jmp
push
xchg
int3
loopne
pop
addl
xchg
cmp
add
testb
shlb
aaa
cmp
fsubl
inc
mov
in
fadd
shlb
fucomip
push
sbb
aas
or
rorb
cmp
or
or
andb
lahf
or
add
inc
inc
aaa
enter
and
call
test
jmp
scas
nop
stos
imul
sbb
mov
mov
pop
jo
lock
dec
fwait
out
stos
roll
jecxz
inc
jnp
iret
jecxz
pop
test
push
cmp
xchg
xlat
mov
lea
insb
js
mov
cmpsb
cs
int
enter
pop
aas
popf
cmpsl
sub
sti
lcall
mov
enter
xchg
mov
push
pusha
outsl
sub
fcmovbe
add
mov
push
insl
sub
out
or
sbb
xchg
decl
mov
scas
mov
lret
imul
arpl
out
push
pop
subb
into
outsb
outsl
repnz
icebp
dec
cmp
out
dec
aad
hlt
loopne
xor
clc
negb
pop
mov
insb
fwait
sbb
out
sub
clc
inc
xchg
jg
inc
jnp
xchg
shll
lea
in
add
out
lock
xchg
cmp
jne
test
out
adc
xchg
pop
dec
push
xchg
mov
inc
inc
pushf
sub
aaa
scas
cmp
mov
cmpl
sub
xchg
and
repz
dec
xchg
loope
gs
or
daa
cmp
sub
dec
pusha
in
in
push
shlb
and
pusha
outsl
fisttps
and
les
lock
idivl
xchg
pushf
cmp
or
adc
cmp
adc
fwait
icebp
xchg
mov
push
in
mov
orb
test
jae
sub
aad
and
mov
cmp
outsb
mov
inc
addr16
xchg
das
mov
xlat
push
pop
ud0
and
pop
jbe
adc
jns
movsl
adc
xchg
pop
jmp
xor
gs
sub
jbe
jo,pn
jmp
mov
jmp
add
jno
lods
lahf
cmpsl
cmp
fneni(8087
sub
mov
cltd
jns
cmp
das
in
cmp
mov
xchg
or
inc
and
cwtl
subl
mov
cltd
jp
mov
and
mov
xchg
pushf
add
cmpsb
fcoml
testb
insb
adc
dec
outsb
mov
iret
sub
sub
mov
sbb
adc
icebp
xchg
xchg
arpl
adc
pop
std
cmc
fcomps
and
jmp
jle
mov
imul
jge
push
testb
mov
mov
add
out
and
cmpsl
jle
ja
or
and
bound
fistl
outsl
or
repz
mov
mov
jb
xchg
xchg
cmp
and
sbb
mov
inc
js
mov
sbb
mov
in
outsl
leave
daa
xchg
mov
nop
push
pop
adcl
bound
push
nop
xlat
jns
fiadds
jge
in
cs
dec
fprem
insl
leave
xor
fs
and
in
adc
sbb
cmp
cld
sbb
mov
jnp
mov
mov
sub
aam
jmp
jge
mov
push
xchg
fisttpll
lret
lock
test
addr16
push
push
dec
mov
or
out
leave
xchg
push
movsb
sbb
push
mov
in
sbb
orl
or
imul
sub
dec
imul
and
jae
cmp
and
sub
pop
cmp
pop
mov
cmpsl
mov
jno
jns
addr16
xchg
xchg
and
loop
cmpsl
cwtl
outsb
pop
orl
push
add
xchg
addr16
and
sti
pop
cltd
lock
adc
and
and
addr16
jno
mov
out
mov
movsl
and
test
xchg
jns
sub
xchg
insb
mov
fiaddl
inc
loopne
fstps
icebp
pop
pushf
mov
outsl
cltd
fs
xor
lock
popa
fistpll
add
sub
mov
sbb
in
mov
je
notb
add
mov
jb
sbb
pop
fs
cltd
xchg
mov
enter
xchg
pop
xor
lcall
sbb
enter
cmpsl
adc
pop
mov
ficoms
fimuls
lods
pop
loope
aad
emms
stos
stc
cwtl
aaa
sbb
cmp
outsb
in
pop
stc
shl
inc
sub
fwait
popf
aad
lcall
lea
push
mov
dec
leave
js
adc
cmp
pop
icebp
gs
dec
and
arpl
sbb
pop
mov
mov
jmp
lods
popw
imul
xorl
or
imul
mov
rol
test
inc
stc
lods
int
xchg
cltd
filds
pushf
repz
cmc
imul
dec
jae
arpl
ret
les
sbb
leave
scas
sub
int3
mov
jge
test
enter
push
ficoms
xchg
mov
imul
mov
test
mov
inc
adc
xor
in
mov
loope
push
jl
cmc
iret
arpl
xchg
push
mov
iret
cli
xor
popa
and
fists
mov
push
mov
pop
ret
dec
push
lret
popa
xor
jp
pop
xor
fisttpl
fstpl
push
push
fisubl
mov
ja
add
leavew
push
lret
lret
loopne
dec
stos
test
push
es
add
dec
pop
loopne
pop
push
aas
loope
sub
pop
xchg
sbb
lea
inc
or
pop
and
lds
ljmp
dec
out
ja
cmp
mov
and
pop
or
sbb
inc
or
and
pop
lret
and
out
cld
fdivs
mov
push
jge
aam
jbe
jp
jg
jle
lods
push
sbb
jb
dec
jnp
arpl
push
test
adc
nop
add
nop
loopne
and
pop
adc
and
in
fnstenv
popf
mov
adc
popf
shll
sti
push
insb
inc
loope
sbb
int3
rorb
and
inc
xorl
and
int3
xor
jae
mov
scas
inc
movsb
subb
xchg
adc
jb
dec
jae
mov
sub
sahf
shll
arpl
add
into
incl
rolb
dec
test
test
xchg
sbb
jae
and
dec
test
push
push
jmp
xchg
jo
lcall
flds
div
mov
repnz
mov
in
dec
andl
adcb
sti
int
fucomi
arpl
bound
scas
sbb
cmpsl
push
mov
cmp
push
fsin
xor
mov
adc
inc
sbb
test
stos
mov
push
adc
sub
jne
xchg
inc
popa
push
in
jnp
or
lcall
orl
jmp
push
jmp
mov
and
sahf
std
movsl
jno
inc
push
repz
out
cltd
dec
sbb
mov
mov
lods
push
push
xor
cmpsl
lea
gs
je
mov
or
hlt
icebp
sbbl
and
push
cmp
jns
das
cmp
xchg
pop
mov
dec
out
rcr
xor
sbb
addr16
adc
push
mov
mov
pop
jno
cli
and
fwait
nop
ret
hlt
sbb
or
xchg
cmpsb
decb
adc
or
add
mov
sarl
or
adc
rclb
adc
daa
jecxz
aad
pop
testl
cmpsb
add
and
push
imul
mov
add
sub
je
pop
loop
mov
mov
pop
aas
inc
mov
mov
dec
test
neg
loope
mov
pop
push
inc
das
fmull
pusha
mov
mov
lods
or
add
std
add
out
das
and
jb
sbb
or
jge
add
push
popa
mov
stos
sbb
je
fsubl
fsubrs
xor
xor
jge
xchg
cmp
push
push
push
mov
data16
inc
incb
jle
or
imul
jle
mov
and
test
ljmp
pop
adc
add
movsb
or
adc
push
pop
mov
xchg
test
adc
adc
push
movb
scas
sub
jns
aas
jp
xchg
jle
pop
or
aam
cli
and
lcall
fs
sbb
loope
cmpsl
dec
dec
dec
repz
imull
mov
jmp
pop
inc
xchg
dec
jns
outsl
pop
into
call
xor
mov
jp
mov
out
cli
or
cmp
jge
movsl
lds
inc
pop
or
popf
sub
ret
popl
pop
fwait
push
xor
mov
dec
shll
xchg
pop
aam
leave
jae
lret
iret
xchg
mov
mov
mov
pop
test
and
int3
shlb
movsl
les
scas
jno
jmp
into
cmp
fmuls
push
dec
out
lret
jmp
dec
or
pop
mov
cltd
pop
mov
loop
inc
push
pop
xchg
not
test
cmp
adc
cmp
jae
lods
push
push
xor
sub
pop
js
or
pusha
xor
adc
rcll
mov
jae
pop
lock
jnp
inc
xchg
inc
adc
jmp
fdivrs
test
and
arpl
push
popl
pop
and
loop
jge
pop
push
les
scas
jp
xor
xor
push
andl
pusha
int3
push
push
rorl
jl
gs
cmpsl
aaa
push
push
sbb
sub
xchg
test
test
in
xlat
adc
bound
aad
add
inc
bound
jp
pop
jae
add
test
inc
std
lcall
test
mov
call
stos
jns
mov
fdivrl
aaa
addr16
lock
mov
pop
xchg
push
iret
and
mov
mov
psrad
aad
inc
jp
loop
in
xchg
dec
mov
insb
xor
push
pop
inc
cmp
pop
cmp
push
imul
addr16
and
shlb
adc
inc
insb
jae
fstl
roll
inc
test
inc
imul
outsb
sub
rcl
clc
xchg
fcomip
mov
mov
add
notb
xchg
sbb
cltd
push
icebp
pop
cld
mov
test
xchg
fsubrl
fwait
jns
jo
cmp
adc
mov
fnstenv
scas
shlb
or
testl
mov
imul
cmc
inc
ret
test
jecxz
cmp
aam
mov
sub
sub
icebp
and
pop
lds
imul
jp
add
inc
mov
loopne
dec
ja,pn
sbb
xchg
xchg
icebp
daa
fstl
or
pop
push
in
dec
stos
push
fnstcw
mov
mov
or
leave
xor
iret
pop
rolb
xor
adc
sub
mov
mov
addr16
mov
sarb
test
ss
dec
out
outsl
adc
insl
and
out
fadds
mov
outsb
sub
jo
push
mov
out
jmp
das
dec
mov
xchg
cmp
xor
lcall
inc
loope
adc
jge
movsb
adc
mov
xchg
inc
dec
sub
ret
push
in
push
dec
and
cmp
mov
mov
mov
lcall
gs
xchg
int
fisttpl
pop
mov
xor
lret
xchg
xchg
les
jge
je
lahf
mov
test
cli
imul
jmp
scas
movsl
shrl
movsl
test
xchg
xchg
pop
sbb
push
fdivrs
ljmp
adc
clc
xor
in
cmpsl
enter
and
sub
popa
pushf
inc
add
cmp
loop
mov
push
rcll
out
test
ja
or
or
mov
test
adc
cs
inc
jo
fwait
mov
enter
adc
xchg
xchg
xchg
fcmovnbe
shrl
popa
fs
in
or
xlat
out
mov
adc
cmp
cmpsb
icebp
fisubrl
and
sbb
cmc
sub
and
inc
mov
dec
pop
sbb
cmp
pop
dec
and
cmp
add
dec
or
mov
scas
repz
push
jo
je
aaa
shll
sbb
push
pusha
cmpsl
pushl
lret
lahf
pop
aas
je
sbb
adc
insb
mov
sbb
int3
add
sbb
sti
push
mov
loop
aaa
cmpsl
jno
jae
push
xchg
int
cmp
in
xchg
inc
jb
jle
adc
mov
mov
test
cmp
jbe
repnz
cmpb
int3
push
xor
xchg
mov
bound
push
rcrl
dec
lret
call
add
cli
adc
dec
pop
loopne
gs
repz
mov
call
stc
mov
inc
adc
rclb
in
pop
cwtl
addb
stos
sbb
lds
mov
lahf
cld
ljmp
inc
leave
in
push
mov
test
add
dec
in
cmp
pop
xor
iret
hlt
lock
insl
xor
adc
jl
in
insl
fidivrl
xchg
aaa
and
push
iret
sti
pop
xor
xchg
pop
fpatan
xchg
std
mov
jb
pop
rorl
pop
mov
aaa
enter
adc
lret
enter
repz
adc
fnsave
jl
inc
sub
xchg
and
ret
outsl
movsb
lcall
cmp
ret
in
and
pop
add
dec
aad
cmp
push
jle
cld
push
arpl
cmp
mov
or
xor
insb
cvtps2pd
into
adcb
sbb
addr16
insb
xor
cli
or
cmpb
cmp
in
lahf
mov
fstps
jnp
stc
aas
mov
jbe
mov
fdiv
sub
and
xor
or
pop
pop
pushl
in
mov
into
icebp
dec
push
lahf
and
xchg
out
lret
in
dec
jbe
dec
pop
and
sub
jl
sahf
xor
scas
xchg
jmp
jge
xchg
cmp
xchg
std
lock
push
mov
mov
bound
mov
mov
xor
lock
cltd
and
lds
js
ds
push
aas
adc
dec
dec
lret
cmp
in
into
scas
out
cmp
mov
cmp
lods
xchg
jnp
sahf
push
sub
scas
ret
push
xor
dec
pusha
add
mov
push
push
test
nop
fwait
mov
fwait
sbb
and
sbb
lret
sbb
daa
icebp
ds
sub
div
mov
dec
stos
out
jge
push
lods
dec
lods
out
sahf
pushf
push
ficoms
jle
pop
popf
mov
jae
xor
add
mov
xchg
push
pop
xchg
xor
cmc
clc
punpckhbw
inc
scas
cmc
cwtl
push
sahf
jmp
xchg
sub
movsl
call
lret
arpl
outsb
cld
inc
push
popf
or
or
ss
fsubrs
fwait
sub
pop
adc
or
dec
dec
mov
xchg
shll
lahf
dec
jne
in
xor
loopne
pop
add
popa
mov
outsb
pushf
mov
out
fdiv
xchg
fidivs
fsub
xor
cwtl
push
rcll
mov
xchg
inc
fstpl
mov
dec
cld
stc
pushf
movswl
repz
lahf
stc
aaa
mov
loopne
jae
in
arpl
pop
lods
stos
cmp
and
mov
outsl
sbb
pushf
mov
mov
jge
divb
cmp
ret
jnp
loop
or
pop
push
and
or
adc
icebp
fsubrl
xchg
je
and
scas
call
pop
lods
or
xor
das
js
lods
xchg
mov
xchg
scas
pushf
inc
push
adcl
fcmovnbe
mov
inc
mov
inc
shll
lods
out
sahf
add
lds
loop
and
xchg
fdivs
push
cmp
movb
pusha
cmp
push
pop
scas
fldl
inc
ds
lods
sbb
or
es
and
popa
mov
and
pushf
xchg
stos
ja
or
mov
push
sbb
xchg
push
pop
adc
xor
mov
negb
std
je
arpl
dec
les
dec
hlt
cwtl
pop
xorl
mov
stos
aad
pop
dec
movsb
jo
testb
jno
mov
xchg
int
inc
mov
movsl
insb
in
xor
mov
addr16
add
lds
push
cmp
pop
pop
sbb
mov
and
push
scas
fdivs
cltd
jo
jne
or
cmc
mov
cwtl
dec
mov
fildll
and
test
sbb
jne
xchg
pushf
mov
mov
xor
mov
jmp
test
mov
mov
or
or
jne
ret
cmc
ja
pop
fdivs
xor
push
push
or
adc
jno
in
into
xor
in
lahf
popf
push
jge
or
xchg
inc
sarl
nop
das
xchg
sbb
ss
lea
pusha
pop
adc
mov
mov
stc
and
or
or
lods
xchg
movsl
sub
mov
dec
xor
repnz
nop
adc
stos
pop
fidivl
add
dec
lods
or
imul
inc
xor
xchg
adc
fidivrs
es
or
inc
in
lods
daa
and
push
mov
cmpsb
stos
mov
xchg
fistpl
push
fwait
iret
pusha
inc
mov
loopne
and
xchg
mov
mov
popf
sbb
sbb
test
push
mov
shr
mov
cmp
fisttpl
loope
mov
xor
and
imulb
dec
jp
jnp
out
rep
mov
cmp
icebp
cltd
mov
out
rorb
arpl
pop
cld
negb
mov
xor
bswap
outsl
js
ds
mov
mov
jbe
cmpsl
imul
dec
mov
int3
xor
aad
in
pop
or
cmp
and
sti
dec
jl
push
cmpl
pusha
xor
xor
mov
adc
inc
push
lods
repnz
jmp
fisubrs
popf
repz
push
nop
in
in
scas
dec
add
fisubs
sub
dec
inc
and
dec
pop
xor
jno
xchg
xchg
inc
mov
jle
ret
loop
mov
out
les
xor
mov
test
lcall
pop
jge
xor
mov
fisubs
push
out
or
inc
or
std
loopne
lods
test
lods
mov
psubusb
lret
cmp
dec
ds
repz
xchg
into
inc
ficoms
js
xchg
xchg
and
cmp
hlt
inc
push
aaa
pop
and
dec
popa
shlb
inc
mov
pop
sbb
and
and
pop
pop
pop
and
test
xor
mov
xor
fcmovu
icebp
push
movsl
cmpsl
pop
pop
test
pop
fs
inc
xchg
movsb
cmp
xchg
in
repnz
aad
mov
push
lods
adc
pop
inc
stc
push
gs
sti
dec
pushf
fidivs
sub
jl
aaa
shrl
iret
add
inc
movsl
jl
dec
leave
ja
cmc
cmc
fs
addr16
aas
stc
jge
mov
je
xchg
push
stos
das
mov
dec
test
sbb
mov
leave
push
in
mov
inc
mov
pushf
sbb
fucomp
cmp
cmp
cmc
and
dec
hlt
data16
enter
fs
adc
rcrl
jb
inc
push
ss
dec
shl
lcall
pop
mov
outsl
hlt
je
push
in
sti
dec
mov
jg
pop
clc
jmp
daa
and
test
out
outsb
push
push
leave
cltd
sub
mov
repz
cli
clc
mov
jle
push
in
or
xchg
mov
xchg
jae
mov
loop
in
lods
pop
inc
test
sti
dec
hlt
faddl
pop
cmp
fsts
or
or
test
test
push
sub
inc
sbb
pop
pop
das
cwtl
cltd
or
xchg
jns
pop
fldt
in
dec
adc
add
sbb
popa
ljmp
cltd
jo
jo
push
lret
mov
ret
lea
sub
sub
pushf
test
sbb
fmul
cs
sbb
fdiv
mov
sti
inc
hlt
sbb
arpl
into
iret
push
mov
leave
sti
adc
xorl
or
clc
pusha
ja
loop
jo
xchg
sahf
scas
cld
dec
push
sbb
pop
mov
mov
add
xchg
lods
mov
imul
lret
sbb
cmpl
inc
push
pushw
dec
insl
adc
test
cmpsl
aad
idivl
sub
add
stos
lea
pop
sarl
cmp
lock
mov
lret
adc
cmp
mov
inc
and
insl
inc
out
sbb
or
mov
pop
adc
fdivrl
inc
imul
dec
pushf
adc
repz
push
inc
xor
divb
or
ds
cmp
and
cwtl
mov
imul
push
clc
mov
clc
rcl
testl
ret
clc
dec
jnp
lahf
adc
xchg
lea
or
pushf
pusha
int
out
dec
out
rorb
insb
xlat
cwtl
jmp
jle
xor
cli
movsl
ds
dec
test
in
mov
ret
or
repz
popf
mov
mov
sub
and
testb
jnp
xor
int3
push
sub
xor
ror
nop
leave
iret
fisubrs
fdivl
lahf
jne
mov
les
loopne
pop
dec
adc
sub
jo
inc
mov
lret
insb
leave
or
dec
jp
inc
imul
xchg
pop
adc
jbe
or
mov
pop
iret
imul
cmp
addr16
and
ss
xchg
sub
sbb
negb
movsb
negl
pop
mov
out
jo
jl
mov
push
scas
leave
cmp
popa
in
cmpsl
or
push
jno
sub
xchg
rorl
fisubrl
cmp
sahf
xchg
in
cmp
mov
pop
shrb
hlt
push
movsl
xchg
adc
cmp
push
mov
jnp
jl
jne
ret
pop
and
out
test
loope
es
jl
mov
clc
add
jmp
lahf
mov
loope
lds
mov
mov
mov
pop
xorl
out
sbb
sbb
mov
out
in
out
sbb
sub
push
mov
mov
sub
dec
std
in
jl
push
add
addr16
add
xor
mov
scas
push
and
jo
or
sbb
mov
adc
push
inc
jl
pop
add
xor
pop
lcall
lahf
xchg
hlt
jae
mov
out
xchg
mov
test
ss
adc
test
loop
push
push
mov
add
cmp
dec
push
pop
mov
pop
push
in
js
push
jl
leave
mov
jbe
push
loope
xor
mov
std
in
idivl
andb
sar
mov
cmp
push
loope
jno
push
rcll
add
xor
arpl
lret
mov
popa
mov
decb
adc
mov
lods
les
xchg
adc
adc
pop
mov
insl
xor
mov
mov
dec
shrb
cli
outsb
call
aaa
mov
orl
sarb
mov
int3
repnz
mov
hlt
insb
mov
fld
push
jne
repnz
add
or
stos
in
or
je
push
pop
aaa
add
aam
test
popa
stc
test
in
not
into
fld
out
sbb
adc
scas
repz
mov
scas
jl
lcall
inc
lret
lcall
mov
mov
mov
sub
mov
and
pop
hlt
aad
popa
jg
mov
imul
inc
aaa
insb
imul
sbb
loope
test
pop
out
jae
mov
cmp
rclb
xchg
loopne
xchg
test
rcll
into
add
cs
pop
das
ljmp
lods
add
push
jg
mov
jmp
lahf
testl
mov
inc
mov
mov
and
inc
cmp
mov
lods
fs
fisttpl
jmp
xchg
xor
push
cmpsl
and
adc
jl
mov
mov
sti
aad
pop
iret
ret
sahf
test
sbb
push
addr16
lods
jl
push
outsl
pop
in
ss
mov
mov
xchg
mov
jp
push
rolb
xor
out
and
inc
clc
cmp
sti
ss
nop
mov
loop
fdivl
sub
mov
mov
add
roll
mov
fistpl
push
pop
sbb
pop
call
test
loop
and
andb
jnp
pop
sub
rcr
imul
push
imul
or
cmp
aaa
enter
ficoms
ds
sarl
pop
bound
inc
leave
adc
add
mov
or
push
aam
or
dec
mov
shrb
mov
mov
rorl
in
jl
cmp
mov
mov
daa
sbb
pop
push
cli
testl
jns
gs
test
cmp
push
xor
stos
add
fsubrs
lods
push
outsb
mov
xchg
adc
jbe
rorl
cs
shlb
lcall
adc
add
stos
mov
cmp
pop
xor
scas
cmpsb
std
aam
cmp
loope
mov
jno
add
push
fldl
jp
hlt
movsl
insl
sub
jae
cmc
scas
test
add
or
in
push
aaa
pop
xor
sub
sbb
adc
push
mov
imul
xchg
pop
rcrb
and
js
jns
mov
sti
mov
nop
das
loope
xchg
xor
aad
leave
cwtl
push
push
dec
shrl
test
shrl
push
xchg
mov
push
xlat
xor
hlt
push
push
or
repnz
roll
daa
pushf
aam
rorl
in
adc
fldl
inc
test
int
mov
pop
ficompl
or
outsl
insb
fiadds
jmp
rcrb
fwait
dec
movsb
xchg
popf
enter
xor
jbe
and
inc
dec
fucomip
lahf
jg,pn
loope
xchg
mov
mov
cmp
push
xor
mov
sbb
adc
and
mov
jecxz
cli
lea
mov
popf
daa
dec
pusha
mov
sub
sbb
pop
sahf
lock
mov
inc
stos
js
insb
mov
in
lea
ja
test
mov
inc
push
mov
jo
inc
insl
movsl
pop
or
shrl
mov
dec
out
mov
xchg
xchg
in
cwtl
imul
mov
adc
and
sub
or
cmp
adc
jno
ret
mov
pop
shll
xchg
nop
cltd
add
test
cltd
ret
ret
cmpsb
mov
lcall
loopne
imul
insl
pop
or
xchg
xchg
and
cli
lea
jbe
cs
popa
add
xchg
adc
mov
cli
adc
fsubp
rcrl
mov
and
outsl
xor
lds
inc
sub
adc
cmp
divb
in
les
dec
fadd
imul
and
pop
xor
loope
adcb
pop
icebp
mov
xor
les
xor
dec
adc
leave
pop
sub
iret
repz
jae
lock
lds
jmp
bound
jecxz
add
add
ret
mov
cmp
insb
mov
pop
inc
into
cmp
or
add
rorb
call
jge
cs
orl
xchg
shrb
pusha
jnp
push
mov
pop
fisubrl
cmp
repnz
pop
push
lock
adc
mov
push
movsl
das
cwtl
arpl
cmp
xchg
cli
lcall
aaa
mov
cmpsb
iret
xchg
add
cmp
and
mov
pop
cwtl
xor
andb
pop
daa
mov
int3
cmp
cmp
mov
icebp
and
cmpl
or
daa
xor
add
shlb
sbb
inc
add
mov
adc
pusha
setge
icebp
adc
fcomps
aam
cmc
cmp
mov
xchg
iret
sbb
pop
fstp
repz
push
lods
stos
mov
sub
pop
jbe
or
popf
stc
out
inc
loope
imul
push
iret
adc
stos
inc
lea
xor
pop
int
cmp
int
add
and
inc
mov
outsb
push
mov
xchg
pop
frstor
mov
imul
or
mov
cmp
pushf
adcb
arpl
ss
imul
xchg
aaa
jns
shlb
mull
stos
test
adc
mov
fwait
clc
mov
imul
xor
jecxz
fcmove
loope
cmp
fbld
jp
push
mov
add
fdivp
into
xor
ja
ret
loop
jno
inc
mov
mov
movsl
lret
dec
cli
add
mov
sar
sahf
push
add
cmovle
mov
mov
fdivrp
call
mov
hlt
and
adc
shr
cmpsb
enter
inc
sbbb
out
rolb
in
orl
cs
or
or
scas
xor
push
ss
fidivrl
sub
fcmovb
mov
xchg
iret
out
int3
out
xor
xlat
mov
push
adc
push
jle
mov
add
sub
rol
jg
push
popf
out
loope
sub
das
addr16
lods
xlat
fadd
scas
fnstcw
js
es
cmp
push
adc
lcall
and
sub
add
xlat
mov
push
popf
mov
adc
push
out
xorb
ficomps
clc
dec
mov
out
push
int
cmp
mov
outsl
cmp
cmp
mov
cmp
sub
adc
das
mov
pop
mov
popa
mov
ret
adc
mov
jp
cmp
imul
in
jecxz
mov
out
jnp
or
mov
dec
mov
sti
pop
test
repz
aas
out
mov
fs
pop
mov
push
into
rcrl
ds
mov
test
mov
ss
dec
mov
inc
jnp
testl
mov
rclb
jnp
mov
xchg
pusha
arpl
add
sbb
ljmp
mov
scas
ret
popa
scas
test
aad
mov
sub
rol
sbb
dec
or
ret
adc
push
sbb
scas
pop
pop
rorl
push
das
or
pop
mov
pop
jmp
aad
mov
adc
adc
int
call
xchg
aas
push
mov
shr
mov
rcll
sahf
push
hlt
divb
pop
imul
cmc
lret
dec
mov
inc
mov
mov
pushl
push
lds
les
push
add
push
addr16
adc
mov
cld
dec
scas
mov
insb
cwtl
ret
dec
lods
int3
jmp
adc
stos
outsb
aaa
mov
mov
jmp
or
push
stos
idivl
ret
jecxz
loop
inc
add
push
ror
push
daa
sarl
mov
test
dec
cltd
or
jno
xchg
push
pop
std
sub
scas
nop
mov
jmp
mov
cmpsl
iret
daa
js
mov
dec
ret
negl
sub
lcall
lret
lea
mov
int3
in
sub
push
mov
xlat
arpl
pop
stc
lods
xchg
rorb
add
sbb
movsl
xchg
mov
gs
mov
inc
sbb
xchg
cli
popa
sbb
inc
sbb
jnp
push
cmp
cmp
pop
out
subb
mov
out
out
add
and
stc
cmp
xor
jl
and
fwait
int
nop
inc
aad
in
lcall
iret
ss
out
hlt
imul
mov
xchg
cmp
lcall
add
arpl
imul
lock
stos
pop
sub
xlat
and
loope
rcrb
das
ss
fadds
mov
mov
inc
adc
lea
mulb
jle
xchg
lahf
mov
xchg
jecxz
je
imul
mov
cld
std
lock
shlb
inc
ficompl
jae
hlt
cmp
sub
leave
jecxz
cmc
js
data16
add
iret
mov
outsb
arpl
sbb
das
lea
inc
imul
cwtl
cmp
push
and
fdiv
out
pop
rclb
mov
rcrl
repz
sub
or
fiaddl
shl
adc
pop
cmc
xchg
lret
sbb
or
and
fucomp
dec
adc
ret
jle
outsl
sbb
mov
fisubrl
lds
cwtl
jmp
cli
add
rcl
sbb
mov
in
gs
enter
ficoml
testl
into
aas
arpl
add
lock
fnsave
mov
lea
movsb
mov
fnstenv
add
dec
addb
std
cmp
xor
cmp
jo
je
dec
sbb
inc
ss
push
clc
mov
test
xchg
mov
add
insb
fwait
out
es
sti
pop
adc
jl
cld
nop
enter
mov
leave
inc
jno
sarb
sti
inc
ja
sbb
mov
push
xor
popf
push
frstor
adc
loop
push
push
inc
mov
test
adc
mov
adc
inc
ja
inc
dec
out
mov
pop
in
cmp
or
insl
out
inc
inc
iret
lods
sbb
ret
adc
loopne
lds
sti
add
push
sub
sbb
mov
fistpl
lods
jbe
add
push
insb
jbe
shrb
and
mov
pop
xchg
and
stc
fwait
lea
or
fwait
insl
leave
push
push
andl
cmp
push
cmpsb
mov
cmp
iret
lret
inc
out
fcomp
js
jbe
mov
test
mov
ljmp
dec
sub
cmpsb
push
insb
jns
cmp
xchg
cmp
mov
cmp
aaa
push
add
mov
push
insl
daa
cmp
aam
xor
jl
dec
aas
imul
inc
mov
out
enter
adc
ds
sbb
outsl
pop
mov
add
in
shl
or
fs
aas
add
pop
xchg
loop
add
jo
lcall
jg
cmc
xor
pushf
sub
dec
cwtl
fstps
sub
in
lods
ss
pop
mov
mov
jae
xchg
push
sahf
hlt
out
int3
lret
push
lcall
jge
sub
inc
setl
adc
outsb
or
sbb
and
mov
jns
xchg
pop
or
xchg
movsb
jmp
cli
fbstp
and
aam
int
nop
inc
cmpsb
mov
or
inc
mov
icebp
fdivrp
movsb
add
xor
in
mov
inc
mov
push
loope
xchg
outsl
out
jns
lds
sti
jns
int
daa
add
les
lret
jb
cmp
pushl
dec
push
adc
push
mov
ret
xchg
cmpsb
sbb
into
fisttps
hlt
adc
scas
push
pop
rorl
and
cmp
aaa
mull
icebp
testb
lock
lds
negb
mov
hlt
inc
stc
cltd
sbb
jmp
aam
mov
jae
inc
dec
test
dec
xchg
imull
and
push
inc
jb
xor
or
lock
lret
in
bound
add
ror
or
aaa
sbb
cli
mov
jae
stos
adc
add
mov
mulb
ljmp
out
xchg
pop
sub
sbb
ret
inc
sbb
sbbb
add
sbb
lods
das
in
adc
dec
lods
push
pushf
fists
stos
mov
inc
lods
jns
push
ss
mov
xor
mov
sbb
lret
mov
xor
lea
sbb
lods
shl
imul
push
stos
pushf
fs
inc
mov
es
push
push
fiadds
jl
push
inc
push
pop
sbb
jg
fwait
into
js
jp
mov
bound
stos
pushf
in
mov
pop
addr16
adc
mov
push
jge
mov
stc
push
push
dec
shrb
gs
and
dec
enter
mov
or
fstpt
inc
sbb
adc
pushf
push
lcall
pop
lods
popf
push
push
shr
sahf
addr16
das
les
daa
xor
jge
lea
shrl
pop
dec
inc
loope
pushl
xchg
xacquire
pop
dec
jge
in
bound
cmp
xor
arpl
test
mov
xchg
jno
mov
cmp
imul
test
test
or
sbb
out
aam
add
lret
in
or
cmpb
dec
insb
test
pop
mov
outsb
mov
adc
inc
sar
shll
push
sub
push
pop
or
cld
sub
pop
test
mov
stos
jbe
jb
jg
test
inc
mov
xor
lea
jle
push
pop
or
sbb
cmpsl
and
push
cltd
out
icebp
aam
into
shlb
xchg
jl
pop
mov
andl
into
sub
cmpsb
popf
xchg
scas
jp
inc
cmp
push
cmp
mov
shrl
stos
test
int3
sbb
lahf
mov
inc
dec
mov
in
lret
and
jnp
mov
test
insl
pop
inc
aad
push
stos
pop
or
jae
gs
int3
adc
jno
push
xchg
add
push
sbb
adc
test
das
ss
stc
dec
jmp
lds
mov
imul
adc
xor
adc
inc
xchg
mov
mov
push
xchg
jo
pop
movsb
cwtl
testl
loop
xchg
push
sub
testl
ret
enter
sub
lds
pop
xchg
scas
dec
fldt
fidivl
adc
data16
je
mov
push
mov
clc
xor
sbb
sbb
dec
movsl
sti
arpl
inc
js
sahf
cli
inc
cmpsl
jg
in
fldcw
dec
jg
inc
in
enter
xchg
mov
test
sbb
sbb
or
jg
in
insb
pop
repnz
into
cwtl
sbb
jno
addr16
aaa
mov
dec
push
inc
xor
repnz
mov
add
ret
rcrb
cmp
inc
ljmp
or
aaa
mov
xor
dec
cmp
add
or
xor
popf
out
adc
mov
fldenv
out
and
push
repz
dec
xchg
push
sub
xchg
rorb
push
movsl
addl
cwtl
push
mov
xorb
jl
sahf
mov
xor
cmp
clc
and
jmp
pop
je
xchg
inc
sti
inc
lahf
cli
addr16
cmp
add
pop
xor
test
push
repnz
and
push
test
or
cmpb
divb
repnz
push
xchg
dec
sub
loope
cwtl
lods
push
pusha
cmp
pushf
or
sub
xchg
cmp
mov
lods
lret
je
leave
or
adcb
sub
ljmp
xor
mov
mov
cld
ljmp
imul
sub
loope
lcall
dec
xor
jns
js
andb
and
test
frstor
fsubs
ss
cltd
loope
aad
jae
lea
dec
scas
sub
mov
out
sbb
ss
sub
push
xor
sub
test
into
sbb
adc
pop
ret
mov
movsl
mov
mov
movsl
inc
sbb
sbb
testl
or
test
dec
sbb
and
xchg
cmpsl
xor
adc
fisttps
add
or
mov
gs
jns
mov
or
push
inc
adc
or
inc
loope
das
pop
popf
jle
insb
or
xor
mov
pop
and
mov
test
data16
add
popa
fists
pop
loope
or
dec
jmp
mov
push
stos
pop
pop
or
je
scas
mov
fdivrs
sbb
rcll
bound
outsb
pop
xor
cmp
call
gs
or
bound
call
jbe
push
outsb
lret
daa
push
mov
xchg
lret
mov
push
lcall
adc
inc
in
pop
pop
and
mov
cmpl
pop
mov
insl
jg
add
cwtl
idiv
xchg
or
fs
xchg
dec
push
push
gs
movb
repz
movsb
inc
jne
jae
lea
negb
insl
adc
ret
fs
sahf
push
jae
mov
arpl
adc
div
pop
mov
test
push
out
cld
mov
fstps
outsl
xor
repnz
rolb
push
mov
ss
mov
test
int
fistl
fidivrs
loop
jo
ljmp
push
pop
pop
fs
shl
cmpsb
jge
rorb
scas
cmpsb
xchg
int3
pop
cmovle
jmp
add
outsb
or
lret
insb
loop
lods
and
xchg
mov
cs
ljmp
pop
fucomi
clc
xor
rclb
adc
mov
les
xor
cs
mov
negb
pop
inc
push
outsb
stos
or
out
pop
hlt
dec
out
fisubrl
aad
push
inc
push
pop
inc
pop
pop
mov
mov
inc
pop
mov
sub
jb
subb
pop
out
and
mov
xchg
stos
xchg
add
mov
sbb
or
shl
push
mov
pop
mov
dec
and
mov
xchg
dec
icebp
xchg
loopne
ds
xor
pop
popa
xchg
stc
les
jns
scas
add
push
and
and
sub
nop
add
hlt
outsb
sti
cmp
rorb
cltd
insb
stos
into
fwait
scas
or
xor
out
test
fwait
push
push
ljmp
and
adc
sub
mov
test
rorl
mov
cmp
jl
mov
movsl
in
lock
xchg
pop
mov
decl
arpl
cmp
sti
testb
sahf
xchg
mov
sar
pop
addr16
pop
outsb
xchg
aaa
xchg
xor
or
loop
add
xor
dec
mov
int
sahf
jae
shrl
scas
mov
iret
fistl
mov
shl
mov
std
shrl
mov
and
mov
xchg
fistpl
mov
jno
xor
push
pop
mov
xchg
pushf
daa
loop
cmp
mov
sarb
or
rol
pop
or
dec
xor
scas
repz
xchg
jnp
lahf
pop
pop
cmp
mulb
cmp
adc
lock
xor
mov
xchg
sub
adc
lea
test
adcb
movsl
pop
aaa
mov
mov
xor
sub
movsl
into
add
xchg
xchg
xchg
mov
xor
das
aas
sub
adc
inc
decl
in
mov
lods
in
mov
clc
jns
ret
jne
cli
push
dec
orl
adc
cmp
loop
sahf
aad
mov
cld
pop
mov
shl
mov
push
lds
adcb
jl
out
jb
in
mov
lret
push
mov
imull
jb
mov
out
out
gs
push
xchg
cs
loop
pop
cltd
push
int3
sbb
addl
inc
faddp
xlat
mov
insb
gs
xchg
iret
cli
mov
jg
cmpsl
mov
rcll
lret
mov
jo
add
or
insb
cmp
jbe
out
cwtl
ja
inc
dec
int
jbe
mov
loopne
and
mov
xchg
add
mov
imul
inc
aas
test
in
filds
inc
rorb
sbb
aas
sbb
push
out
cli
or
mov
daa
or
sbb
inc
xor
orb
ljmp
fmuls
mov
stos
mov
sub
mov
adc
jl
lret
push
out
bound
push
sub
pop
lods
lret
pop
pop
sbb
and
incb
push
psrlw
ret
sbb
xchg
cmp
sub
mov
xchg
add
loopne
push
outsb
or
scas
sbb
inc
jo
push
dec
xchg
leave
jecxz
sbb
cwtl
insl
sbb
mov
outsb
dec
test
add
into
or
jb
xchg
mov
mov
inc
dec
mov
sbbb
mov
pop
aad
mov
or
out
fisubs
ret
out
loopne
scas
xor
and
inc
test
or
daa
jp
fidivrs
pop
push
enter
aam
push
mov
push
fidivl
mov
aas
mov
je
or
or
pop
adc
pop
rcrb
icebp
xlat
jecxz
and
iret
jmp
or
jmp
insb
cltd
std
les
mov
push
imulb
loopne
stos
fwait
mov
mov
test
xabort
test
clc
loope
jmp
ljmp
sub
icebp
add
pop
dec
testb
cld
sub
fs
pusha
and
mov
xor
stos
cmpsl
xlat
mov
fsubs
imul
mov
pop
jb
aas
jae
stos
test
mov
sbb
lods
pop
or
adc
cmpsb
pop
in
out
jp
push
pop
das
stos
ret
ret
pop
enter
fstpl
xor
dec
push
popf
nop
out
mov
pop
adcb
sbbb
pop
sarb
xchg
in
inc
lret
aas
jns
cmp
stos
dec
leave
mov
push
xchg
mov
sbb
adc
inc
fisttps
mov
pop
adc
xor
xlat
shlb
outsb
push
inc
adc
or
int
cwtl
xorb
sub
and
inc
dec
scas
or
mov
cs
dec
xor
aas
add
mov
mov
subl
xchg
in
aad
in
ljmp
cmp
push
pop
xor
or
cmpsl
ja
aaa
inc
xchg
add
mov
mov
dec
jge
jnp
cwtl
iret
dec
pop
xlat
ret
shl
popf
outsl
in
mov
sbb
incl
rep
xor
sbb
fs
loop
lods
lret
and
loopne
adc
outsb
adc
fcmovu
lock
testb
rorl
data16
pop
xchg
call
cmp
test
mov
fsubl
scas
sub
shl
adc
imul
iret
cli
mov
push
shrl
mov
shl
js
mov
adc
aam
fcoms
stos
dec
pop
inc
ljmp
fbstp
rcrl
push
xchg
popa
loope
leave
pop
xchg
mov
adc
add
scas
xchg
fs
lods
lea
and
mov
xor
cli
xor
xor
jnp
pop
rorl
repnz
je
cmc
fcoml
push
cmp
aaa
decb
or
addr16
adc
jne
mov
adc
icebp
lcall
pop
dec
and
lea
xor
inc
lds
int3
addr16
mov
add
push
mov
mov
ret
and
xchg
cld
and
jb
inc
mov
xchg
pop
lock
xchg
ja,pn
ljmp
hlt
hlt
xor
pop
inc
add
test
adc
daa
dec
cld
pop
ret
mov
and
adc
jge
xchg
jb
popf
push
hlt
xchg
cli
addr16
jno
test
add
add
ret
push
dec
js
adc
lea
sbb
mov
lahf
pop
test
sbb
cltd
popf
sti
push
jl
jecxz
jno
fcomps
xor
jg
jmp
push
fcomps
mov
push
adc
ja
cs
sub
push
push
xor
cmpsl
inc
jne
add
mov
pop
or
insb
rcrb
mov
jg
xchg
push
lret
imul
push
incb
sbb
lods
push
cld
sbb
cmp
mov
into
aam
lret
jmp
xchg
dec
outsl
test
icebp
cmp
push
xor
shlb
ljmp
jno
inc
rcll
mov
push
in
cltd
xchg
mov
inc
cmp
sub
push
pop
sub
mov
pop
pop
daa
scas
jae
mov
inc
jecxz
cmc
cmc
jmp
cmp
sbb
stc
or
and
mov
lret
sti
int
push
mov
fisttpll
add
push
hlt
or
or
mov
or
incl
pop
xor
stos
adc
jmp
loope
hlt
and
or
push
sti
sbb
shll
jns
cwtl
fs
adc
push
inc
pop
jg
and
pop
pop
out
inc
mov
xchg
jecxz
shlb
popf
popf
push
pop
jmp
xor
inc
loope
aam
and
push
mov
iret
js
mov
aaa
ret
lcall
test
dec
movsl
out
fs
lods
ret
shll
jbe
jns
std
lahf
jae
jbe
sub
jmp
xor
or
jbe
add
mov
mov
mov
xorl
pushf
negl
cmp
test
or
add
and
stc
shlb
push
fbstp
pop
xor
fildl
and
mov
test
pop
stos
sub
testb
push
outsb
fisubrs
mov
fiadds
ds
or
shlb
dec
leave
fucomip
pop
push
bound
bound
or
cmp
mov
jge
gs
in
jns
xor
jno
xor
orb
shlb
sbb
rorl
inc
cld
xchg
fstps
inc
lock
pop
mov
mov
fistl
sbb
push
adc
dec
cmpsl
xchg
inc
mov
icebp
ljmp
mov
push
sbb
into
stos
mov
lahf
orb
push
jge
call
loop
loop
frstor
mov
pushf
mov
dec
jmp
clc
mov
scas
mov
lahf
dec
jecxz
or
mov
lods
pop
cmp
and
int3
mov
test
jle
mov
loopne
stc
xchg
es
iret
icebp
std
idivb
jne
dec
xor
loopne
pop
inc
xchg
and
inc
cltd
scas
ss
pop
mov
jmp
outsb
mov
xchg
fs
jge
mov
sub
outsl
cli
jp
adc
in
sahf
in
outsb
pushf
add
frstor
inc
movsb
pop
xchg
stos
mov
sub
rclb
movsb
xor
lock
add
or
jb
popf
jne
xchg
pop
sub
std
cmp
je
mov
mov
pop
shl
cmp
adc
ret
mov
pop
cmpsb
mov
stos
xor
dec
mov
into
mov
sbb
jmp
sbb
pop
mov
jno
divl
pusha
adc
sub
xor
out
test
insb
pushf
mov
push
add
xchg
sub
mov
mov
cli
les
lahf
push
dec
test
stc
movsl
popa
setge
dec
addr16
sub
push
and
sbb
std
xor
sub
xor
cmc
jle
test
repz
add
or
imul
push
cltd
cmpsb
pop
and
cs
scas
aad
imul
hlt
mov
xor
mov
sub
xchg
movsb
cmp
pop
dec
movsb
sbb
fimuls
dec
andb
ds
fsub
fists
cltd
xor
sarl
stos
jae
addr16
ja
sub
aas
cli
and
pop
push
push
mov
and
mov
adc
in
hlt
rclb
sub
aam
or
scas
adc
insl
fildl
inc
test
sarl
scas
popa
outsl
xchg
cmpl
insl
inc
test
icebp
test
pop
mov
leave
or
inc
add
push
and
ficoml
dec
cmp
rep
xlat
test
mov
orb
aas
xor
je
fwait
out
mov
mov
outsb
inc
fdivrs
mov
stc
xor
add
adc
push
push
cmp
sbb
or
ret
dec
mov
aam
jne
mov
mov
xor
loope
mov
xor
mov
mov
sahf
ljmp
cmpsl
leave
xchg
dec
xlat
lret
jg
fisttpll
movsb
icebp
cmp
cmpsb
aad
faddl
lods
sub
mov
pusha
pop
sbb
addr16
pop
xchg
mov
adc
pop
loope
mov
insl
inc
pop
hlt
rcrl
adc
and
das
mov
inc
and
mov
cmp
sbb
outsl
stc
stos
add
xchg
insb
insl
mov
adcl
out
test
sub
into
rolb
loop
sarl
lods
sub
jge
jb
xor
cmp
daa
mov
sbb
push
shl
es
enter
mov
push
xor
mov
xchg
add
mov
loop
aaa
ja
jno
lock
hlt
xor
mov
nop
add
aas
mov
jl
cmp
iret
push
pop
push
inc
mov
out
dec
pop
mov
sub
sub
sbb
inc
inc
ret
subb
mov
sub
dec
mov
int
mov
movsb
sbb
cmp
mov
add
popf
add
mov
add
push
inc
lea
insl
mov
mov
imul
les
jbe
cmp
icebp
mov
test
rcl
in
pop
jecxz
fstpl
addb
ret
lcall
decb
xor
js
jl
jl
pushf
pop
adcb
outsb
sub
je
xor
adc
pop
adc
xchg
sbb
in
sub
sti
xor
les
sbbl
xchg
mov
inc
mov
addl
test
pop
mov
fs
fwait
lret
jne
jbe
and
rcl
imul
jmp
sub
mov
xchg
aam
out
jge
ja
aad
aad
sub
xchg
mov
push
xchg
cmp
jle
sub
loopne
negb
out
jnp
dec
mov
and
icebp
push
push
mov
inc
decb
fnstcw
out
xchg
test
gs
pop
stos
inc
fs
pop
cmpsb
popf
daa
ret
mov
movsl
iret
mov
lods
cmp
dec
enter
push
js,pt
push
or
loopne
adc
and
loopne
push
movsb
sbb
cmc
fwait
leave
push
push
pop
cmp
stc
loop
inc
pop
sbb
movsl
or
or
addr16
inc
sbb
xchg
cmpsl
jno
lods
jne
dec
jnp
daa
jnp
lea
out
js
rorl
adc
push
jmp
sub
mov
adc
jl
aad
cmc
push
in
sub
mov
mov
mov
pop
pusha
and
sbb
add
xchg
jl
mov
jns
pop
mov
inc
idivb
pusha
mov
jns
sbb
aas
je
sub
adc
bound
jecxz
adc
mov
test
inc
xor
aam
adc
push
stc
out
std
scas
mov
imul
ficomps
test
adc
imul
adc
add
out
lods
mov
and
jb
and
mov
lret
pushl
mov
xchg
imul
push
movsl
sub
fmull
imul
mov
pushf
subl
push
sarb
pop
pop
shrl
add
lret
dec
add
cli
xor
test
or
addr16
aad
adc
jg
orb
inc
ja
rolb
pop
xor
xchg
scas
adc
inc
in
mov
mov
jecxz
out
out
xchg
repz
scas
popa
adc
call
insl
inc
into
dec
ret
mov
inc
sub
jns
loope
std
bound
test
add
stos
jb
addr16
push
jle
mov
rcrl
into
fldt
push
push
cmp
repz
js
out
mov
mov
cmp
xchg
and
mov
dec
in
nop
ljmp
mov
mov
and
lcall
repnz
jmp
pop
out
xor
sub
hlt
imul
jae
adc
filds
dec
jle
dec
sbb
mov
test
xor
sbb
ds
jo
mov
lret
jno
dec
and
cltd
das
sbb
add
lock
cs
nop
aad
adc
out
jl
in
dec
ror
inc
mov
xchg
xor
lea
jl
stc
test
fcomip
add
mov
mov
jne
jl
sti
imul
adc
daa
sahf
mov
dec
ja
sub
ficomps
mov
pop
dec
mov
repnz
mov
sub
xchg
mov
push
aas
pop
push
aad
adcb
cmp
add
dec
lret
xchg
jnp
jg
sti
mov
mov
or
outsb
pop
pop
fisubrl
mov
mov
lock
pushf
or
jae
movsl
sub
insb
pop
cmpsb
xlat
push
subl
push
into
ljmp
test
or
faddl
shll
jno
js
jb
cmp
rcrl
pop
mov
mov
add
ret
fs
clc
stos
or
aas
out
stos
cwtl
jmp
sbb
lock
mov
dec
xor
adc
adc
ret
nop
or
mov
xchg
daa
filds
hlt
aaa
in
add
xchg
sahf
shrl
repz
lock
lods
enter
jns
test
mov
imul
inc
lcall
jge
inc
cli
pop
mov
nop
jmp
enter
imul
scas
push
jns
sub
sub
outsb
inc
and
icebp
imul
insb
pop
xchg
push
mov
fmul
rorl
sub
add
sub
jmp
lods
lcall
push
mov
mov
pusha
dec
xchg
insl
andl
mov
lds
fcoml
cld
xor
push
mov
loop
addr16
mov
test
aaa
xlat
sbb
fwait
aaa
push
popa
outsb
inc
insb
sti
popf
cmp
add
cs
adc
inc
add
clc
mov
insl
ja
pop
push
loopne
mov
pop
xor
sbb
or
dec
enter
push
xor
stos
mov
mov
lret
or
add
mov
mul
daa
scas
leave
adc
mov
sub
pop
sub
orl
mov
or
rclb
stos
xor
xchg
xchg
cmp
pop
loopne
in
test
pusha
mov
sub
pop
push
fs
push
leave
pop
inc
stos
mov
jp
mov
lds
jne
movsb
dec
pop
je
xorl
jg
mov
mov
sbb
jecxz
mov
mov
jp
pop
in
pop
jnp
mov
push
cmp
add
and
cmp
sub
outsb
and
gs
aam
cmp
ss
mov
bound
sbb
ljmp
popa
loopne
packssdw
pop
jns
or
and
ret
xlat
cmpsb
test
mov
je
popa
negl
pop
push
adc
jmp
popa
mov
scas
int3
pop
adc
mov
sti
mov
outsl
mov
in
xchg
xor
adc
sbb
add
push
adcl
sub
cmp
pop
xor
adc
inc
push
pusha
pop
push
sti
sar
pop
cli
mov
sbbw
outsl
mov
sbb
mov
xor
ficompl
data16
xchg
test
ret
push
mov
push
ffreep
std
cs
push
mov
adc
les
sbb
fnstcw
or
lret
imul
pop
jae
aam
inc
btc
or
adc
adc
adc
fcompl
and
pop
pop
pop
dec
xor
rcll
sbb
ljmp
inc
xchg
pop
push
je
xchg
aas
rcrl
imul
ds
in
adc
fcoml
add
loope
mov
leave
insb
fidivrs
pop
loop
jnp
out
test
call
fmuls
aam
mov
mov
inc
mov
jmp
outsl
xor
std
incb
xchg
xchg
xor
ret
and
cmp
ljmp
and
leave
fidivs
pop
jle
fstps
sub
jmp
push
jg
mov
xchg
jmp
add
and
imul
mov
loope
lds
test
decb
dec
icebp
fimull
pop
push
xor
lret
rcl
lret
jns
das
fisubl
outsb
stc
jb
pusha
adc
hlt
insl
cmp
jo
sub
mov
ficoml
mov
xorb
popf
dec
rcrl
and
call
pop
addr16
add
xor
or
adc
add
pop
test
xor
mov
xchg
sub
xchg
aam
adc
lret
mov
sub
adc
dec
mov
fyl2x
pop
mov
insl
in
enter
addr16
je
fcomp
jmp
pop
int
fidivrs
data16
push
arpl
int3
mov
outsb
mov
lds
roll
cmp
std
add
mov
mov
push
xchg
push
or
fstps
and
negl
inc
or
aas
push
xchg
cmpsb
in
stc
test
loopne
mov
push
jo
sub
push
and
iret
cs
pop
mov
int3
int3
mov
mov
sbb
testl
dec
inc
int3
sbb
push
sti
inc
push
or
dec
pop
lret
sub
push
sbb
sbb
mov
ret
inc
add
test
xor
in
adc
sbb
cmp
rcrl
out
jg
or
cmp
mov
popf
dec
xor
inc
push
jae
div
or
outsl
xor
lods
andb
lret
stc
fdivp
or
in
pop
dec
pushf
push
jnp
xchg
cmpsl
insb
jno
and
or
das
sbb
loope
dec
push
lret
test
add
aas
sub
loopne
sar
jmp
mov
orl
and
xorb
lds
ja
in
idivb
out
pop
pop
rcrb
cmpsl
mov
loope
gs
fisubs
cmc
sub
push
cli
leave
push
ljmp
mov
sbb
arpl
nop
cltd
pop
cmpl
jne
dec
adc
add
incl
and
shll
inc
stos
mov
xor
cmpsb
fidivrs
iret
ds
lods
lods
arpl
fisttps
xor
pop
leave
jno
jle
ljmp
mov
xlat
cmp
and
into
jb
dec
loopne
mov
mov
pop
mov
arpl
mov
sub
jg
inc
jns
lret
sbb
sti
xchg
in
gs
rorb
ret
fldt
jecxz
pop
in
outsb
out
inc
out
cmp
adc
cmp
and
lods
sbb
sahf
int
cmp
call
gs
add
and
jo
xor
in
out
adc
rolb
cmp
mov
xchg
pop
sar
test
repnz
push
lret
xchg
sub
cwtl
fsubrl
sbb
fidivrl
pop
jne
jecxz
rol
cld
cmp
push
repnz
test
or
inc
fistpll
cltd
and
cmp
mov
jg
clc
lret
out
cmp
jbe
pop
lock
xor
lret
cmp
idiv
out
popf
and
dec
sub
jl
xor
mov
mov
scas
jbe
data16
jp
pop
testl
cmp
popf
adc
add
fsubs
xlat
xchg
lock
fnsave
scas
and
ret
sahf
xor
fcmovbe
cmc
and
pop
int
sti
lock
xchg
es
adc
addr16
adc
loope
in
push
mov
adc
test
mov
push
pushf
sub
je
aam
into
add
add
xor
sbb
jb
cwtl
and
mov
mov
arpl
adc
sub
aas
push
aaa
cs
xor
cld
lock
addr16
std
dec
jg
mov
jmp
pop
push
adcb
popf
movsb
mov
and
sar
movsb
jno
mov
mov
adcb
cmp
or
mov
or
fldt
cld
je
adc
or
loop
fdivrl
clc
and
jecxz
rol
cmc
xorl
movsl
popf
insl
movsl
push
pop
lahf
ss
outsb
into
in
lods
dec
xor
add
std
add
and
rorl
cli
and
inc
mov
jp
mov
lret
daa
pushf
fistpl
xchg
popa
subl
test
jo
mov
lods
cli
cmp
lret
mov
stos
stc
fistps
xor
lret
fisubrl
das
fstps
push
shll
pop
and
add
add
out
sarb
les
mov
jg
mov
mov
scas
inc
xchg
test
or
cwtl
rcll
fidivrs
xor
xor
sub
mov
push
adc
dec
outsl
cli
or
dec
mov
xor
xor
imul
stos
pop
mov
sub
fdivr
inc
in
lahf
insb
cmp
inc
add
fucomip
jg
mov
sub
mov
enter
and
movsb
daa
and
sbb
shlb
lock
cltd
pop
cmp
inc
push
inc
aaa
or
icebp
adc
lods
and
jns
aas
les
xor
popf
mov
scas
mulb
jo
fwait
loop
inc
mulb
div
loope
idivl
push
sub
sub
ret
add
mov
mov
gs
jb
lods
insb
insb
jle
shlb
enter
outsb
xchg
add
aas
and
jb
mull
dec
xchg
je
jp
mov
es
xchg
insl
jmp
xchg
dec
lret
push
mov
pop
pop
imul
inc
dec
add
and
xorb
test
inc
inc
xchg
mov
jnp
xchg
ljmp
inc
sub
mov
popa
add
inc
cmp
cmp
xor
mov
scas
lods
es
adc
js
adc
push
dec
and
pop
cltd
mov
rcrb
push
data16
mov
and
adc
je
jmp
daa
or
shr
pmulhw
popa
inc
add
mov
xlat
or
cmp
outsl
and
mov
sub
jnp
add
push
in
mov
lods
jg
jle
dec
fbstp
lret
xor
dec
rcrl
insl
aaa
mov
insb
push
cmp
cli
cli
inc
repz
sub
test
fadds
mov
outsl
mov
std
mov
and
inc
cmp
cmp
xchg
fwait
out
data16
hlt
sub
mov
mov
inc
mov
push
inc
insl
lahf
scas
jp
xchg
push
jge
gs
mov
insl
sbbl
jmp
imul
test
popf
das
xor
or
cmc
fldt
scas
sbb
xor
lahf
aas
mov
and
test
fimuls
loope
pop
jne
dec
imul
je
fwait
sbb
jg
cmp
sbb
inc
or
push
scas
dec
jecxz
and
lcall
enter
lds
push
addr16
push
daa
pop
cmp
jl
dec
clc
dec
mov
xchg
in
sbb
inc
int3
mov
push
jnp
mov
lods
fdivs
psrld
sbb
jo
xor
xlat
cld
sub
test
inc
pop
xchg
mov
arpl
pop
out
test
lods
jo
notl
sbb
mov
pop
out
fisttpl
xchg
jns
mov
loopne
or
adc
daa
cmp
sbb
xor
aam
fldcw
rcr
pop
or
xrelease
orb
mov
out
mov
sbb
in
add
ret
jp
sub
mov
fwait
xchg
cmp
or
mov
fsubr
ja
aaa
or
test
mov
fnsave
adc
mov
jecxz
movsl
punpckldq
inc
cmp
jbe
cwtl
lock
pop
xchg
sub
mov
notb
out
dec
sub
mov
xchg
push
pop
jb
mov
mov
add
gs
cmpsb
call
test
sub
imul
orb
adc
or
rcrb
cmpsb
pop
cld
pop
fst
push
xchg
adc
mov
nop
lods
jb
push
loop
imul
nop
adc
dec
pop
pop
sbb
push
cmpsl
imul
sub
roll
cwtl
jle
nop
jne
and
xchg
inc
or
jbe
and
add
cmpsl
mov
cmpsl
cmpsl
mov
xchg
jne
xchg
loope
cld
cmpsb
pop
aad
stc
scas
dec
test
das
cwtl
jns
lret
cmp
sbb
jnp
cmpsl
cmpsb
repnz
jge
xor
add
fdivrl
mov
mov
pop
movl
cwtl
push
xchg
int
mov
add
fwait
xor
out
std
dec
dec
cmp
jmp
add
es
and
sbb
jbe
adc
lcall
lret
sbb
out
push
je
xchg
add
cltd
and
mov
pop
lea
arpl
and
dec
adc
cmc
pop
adc
cmc
cmp
sbb
dec
les
pop
int3
lcall
xchg
mov
xchg
out
into
loope
mov
out
mov
aaa
leave
les
xchg
js
cmc
pop
and
stos
mov
fsts
in
adc
lahf
xchg
dec
test
mov
scas
test
popa
push
mov
or
std
adc
push
add
bound
sub
xchg
inc
in
and
xor
xchg
std
mov
sbb
pop
xor
shlb
fcompl
lds
shl
sti
jno
adc
push
loop
shr
leave
xchg
test
add
mov
imul
adcb
dec
or
mov
sub
sub
cli
orl
jle
iret
xor
cmp
iret
mov
lcall
inc
int
daa
mov
in
inc
or
rorl
mov
and
mov
xchg
xchg
push
xchg
mov
mov
xor
add
push
in
dec
in
rolb
in
cli
les
xor
add
dec
pop
inc
xlat
movsb
mov
sbb
outsb
inc
jo
loop
xor
test
ds
cmpsb
pop
test
fstp
pop
ret
push
cmp
sbb
sub
dec
jge
test
xor
and
or
sub
ljmp
dec
push
ds
jp
stos
mov
call
into
xchg
daa
and
jns
and
inc
std
push
pop
das
cs
and
nop
lret
adc
cmp
add
jge
push
decl
cmp
jnp
sub
flds
mov
lahf
xchg
push
sarl
fistpll
push
fstpl
and
inc
xchg
aaa
fs
cmp
xorb
hlt
movsl
lods
fwait
sbb
iret
ds
cmpsb
mov
pop
push
mull
or
and
cmp
and
adc
sarl
inc
cmp
lret
es
mov
mov
push
fcompl
sub
dec
sub
mov
ss
test
push
inc
xchg
mov
and
push
outsb
adc
shll
mov
test
mov
mov
jp
insb
pop
and
push
clc
push
aam
stos
int
mov
sbb
ficompl
sub
mov
mov
test
sar
add
fwait
or
lods
cs
jge
scas
push
fmul
lods
pushf
stc
xor
push
lcall
xchg
icebp
push
testl
stc
ret
push
nop
out
jle
icebp
dec
ja
push
lcall
lahf
inc
pop
mov
mov
pop
xchg
dec
adc
movsl
lds
pop
es
mov
jecxz
xor
out
or
stos
rcl
sub
jns
mov
mov
dec
jl
fsubs
pop
in
pop
push
jp
ljmp
in
mov
push
outsl
xlat
sub
ss
gs
inc
mov
cmp
ret
sahf
roll
push
mov
loope
adc
mov
test
xchg
inc
jl
insl
adc
sub
movsb
negb
and
cmp
pop
and
aaa
jns
add
xchg
or
gs
add
scas
ds
mov
in
popf
out
shll
lahf
pop
loop
fnstcw
cltd
sbb
lods
lods
xchg
cwtl
cmp
jge
addr16
clc
mov
in
fnstenv
and
push
dec
and
sbb
dec
fnstsw
or
pop
adc
test
sbb
pushf
sub
mov
imul
repnz
addb
adc
push
je
mov
mov
stos
int
dec
les
lahf
lcall
int3
iret
leave
mov
xorb
les
loopne
inc
cmc
cli
xchg
lret
mov
add
jo
inc
loope
sbb
fprem1
push
das
lods
or
push
mov
in
inc
xor
xchg
mov
jl
sbb
aam
stc
int
icebp
mov
repnz
xchg
in
adc
cs
repnz
add
adc
in
dec
inc
sahf
sub
ret
pop
adc
popf
pop
test
mov
into
or
adc
cmp
leave
push
hlt
mov
mov
lret
adc
sub
xchg
or
sbb
ja
stc
int3
adc
lods
add
ds
xor
mov
push
les
rolb
push
add
adc
push
push
loope
in
movsb
push
test
sbb
out
in
adc
xor
fidivrs
dec
sub
lock
push
xchg
jl
pop
mov
loope
andl
pop
clc
ss
fistl
mov
sub
push
cs
std
insb
cmp
mov
jnp
lods
mov
mov
push
ret
push
fmuls
mov
push
inc
xor
mov
push
mov
test
test
sbb
lcall
icebp
aad
notl
sarb
sbb
push
xchg
sub
xchg
jle
xor
pop
push
test
and
pushf
icebp
shlb
mov
xor
sub
sbb
mov
movsl
mov
les
sbb
inc
movsb
adc
test
jl
sub
cmp
push
fnstenv
incl
pop
les
inc
cmp
rcrl
pusha
mov
adc
cmp
push
xchg
pop
dec
push
push
movsb
inc
mov
ret
pop
nop
inc
inc
divl
mov
cwtl
push
in
cmp
sbb
inc
in
mov
adc
adc
push
mov
fcomp
inc
pop
dec
pop
inc
dec
pop
stos
push
loope
add
lahf
adc
test
pop
xlat
dec
mov
or
push
int
cmp
jb
lods
ds
xchg
and
pop
mov
mov
push
neg
leave
loope
loope
fcompl
pushf
xor
jnp
orb
frstor
jecxz
push
loope
fs
or
mov
aam
testl
cwtl
push
sub
fstpt
pop
addr16
jb
add
adc
push
inc
cmpsl
xchg
add
sub
loope
int
push
ret
xor
jns
fidivrs
loope
jbe
ja
out
mov
rorb
cmp
hlt
add
in
mov
fsubrl
xor
out
pop
lahf
bound
mov
push
out
xchg
fcmovbe
repz
push
nop
pop
jl
daa
sub
pop
lahf
mov
mov
xor
aaa
push
mov
lods
leave
adc
aaa
roll
das
je
rcr
cmp
sarl
inc
imul
pusha
push
lds
inc
mov
std
fwait
shl
les
and
pop
pop
pop
push
adc
ljmp
sbb
jbe
sub
mov
dec
jmp
lods
add
lock
dec
shrl
mov
push
jae
arpl
xchg
ficoml
mulb
mov
inc
push
out
xchg
cmp
cmpsl
dec
shl
lahf
sub
mov
adc
mov
test
out
xor
xchg
cmp
dec
cmc
andb
cwtl
into
shlb
lret
sbb
rolb
jno
mov
mov
sbb
sub
mov
dec
lret
movsb
gs
stc
pop
dec
push
ja
or
xchg
jle
mov
lods
add
ja
adc
cmp
mov
ss
cmp
sbb
or
add
js
and
xchg
popf
loopne
jno
xor
push
mov
jl
xchg
mov
mov
movsb
ss
adc
out
ss
push
inc
in
roll
hlt
jle
mov
adc
scas
jae
aad
cmp
sub
pop
inc
adc
addr16
out
fcoml
imul
xor
push
ds
cltd
sub
xchg
pop
mov
mov
fwait
sbb
fcmovnb
dec
int
inc
imul
push
and
negl
mov
mov
pop
pop
jns
repnz
and
push
fisttps
add
lock
cmp
ficompl
out
cmc
cs
bound
or
pop
pop
sub
jl
daa
fstpt
cmpsb
mov
pop
lods
int
mov
pop
sub
xor
js
aad
push
add
std
bound
fdivl
cmp
in
sbb
imul
aaa
pusha
adc
mov
fbld
xchg
int3
mov
mov
or
fs
mov
out
imul
xlat
pop
out
fcmovnu
leave
rcl
loop
fidivl
fisttpll
pop
push
dec
das
cmp
bt
ficompl
adc
mov
aaa
in
aad
mov
mov
xorb
shll
shll
inc
leave
dec
xchg
push
add
mov
cmp
or
add
mov
nop
enter
aad
enter
test
daa
mov
dec
and
adc
decl
jnp
negl
cmp
or
push
jnp
inc
jo
pushf
cmp
cmp
inc
ja
loop
adc
jmp
mov
mov
jl,pt
dec
or
jo
mov
ret
cmp
mov
jmp
lcall
jo
fstpl
add
lret
pop
jno
dec
mov
pusha
mov
cmpsl
sbb
jp
dec
jle
testb
out
sbb
subb
mov
pop
addb
dec
loope
adc
scas
mov
aaa
scas
lods
push
dec
test
sub
sbb
jbe
lcall
sbb
push
cltd
and
lcall
sub
and
fistpl
push
cmp
and
ja
adc
mov
leave
cmp
dec
bound
pushf
ret
js
sub
mov
jge
fs
sub
es
lock
sub
jnp
sbb
jae
leave
outsl
xchg
and
fsubp
push
mov
mov
jne
in
push
lea
sar
lret
imul
fwait
add
sub
in
insl
adc
cs
mov
cli
mov
iret
dec
rclb
sbb
fadd
dec
mov
insl
xchg
or
iret
mov
jmp
stos
in
stc
negl
aas
mov
outsl
xor
ja
int
jne
movb
push
inc
lret
adc
in
rcrl
repnz
addr16
addr16
aam
ja
jp
fistl
cmp
inc
xchg
push
out
lea
dec
mov
call
vpslld
add
es
sbb
test
imul
dec
es
xor
or
out
pusha
pop
std
sbb
xchg
ds
je
xchg
adc
push
adc
repz
xchg
mov
mov
subl
lcall
mov
mov
sbb
pop
rorl
pop
or
jo
jns
daa
xchg
add
pop
test
aam
flds
ja
adc
ret
es
lret
sub
mov
xchg
je
adc
sbb
aam
iret
fsub
dec
cwtl
mov
xchg
pop
lret
jb
pop
xor
hlt
or
mov
xchg
jne
idivl
in
lea
imul
lret
push
mov
subb
mov
out
lds
mov
icebp
icebp
testl
sub
push
jae
call
je
or
js
hlt
dec
inc
movsb
sub
mov
adc
cmpl
xchg
xor
adc
push
sti
hlt
jp
xchg
mov
rcll
jno
push
mov
or
in
repnz
imul
jb
or
in
lods
cmpsl
fists
push
inc
loope
dec
ret
aas
add
push
fprem1
stc
dec
xchg
add
daa
aam
push
xor
roll
jnp
ljmp
lods
ds
inc
jnp
outsl
hlt
loope
xchg
sub
xchg
xlat
aaa
adcl
pop
lcall
enter
sbb
mov
lret
sbb
dec
or
rcll
mov
jnp
xor
dec
pop
enter
daa
sbbl
pop
or
fdivrs
nop
in
sub
lcall
rclb
xchg
add
ja
fisubrs
mov
dec
iret
lds
adc
lea
fstl
sbbb
mov
mov
mov
push
lret
insb
cltd
in
pop
dec
mov
cmp
sub
clc
xor
pop
push
or
test
lcall
sub
test
adc
jg
stos
push
jo
popf
rcll
orl
loop
cmovg
cmp
fnstcw
pop
inc
mov
adc
std
cmp
jo
push
push
pop
sbb
push
lcall
add
jne
or
xchg
test
and
or
fldpi
dec
int
adc
leave
xchg
arpl
push
lret
mov
hlt
cmp
imul
notl
imul
jnp
push
repz
div
mov
inc
mov
daa
repnz
psubusb
iret
pop
push
inc
inc
in
outsb
ret
notl
out
inc
cmp
lret
enter
mov
mov
inc
scas
lods
inc
mov
pop
inc
xor
std
jno
xor
push
jmp
cmc
cltd
test
mov
cltd
sbb
decb
clc
jmp
dec
push
test
inc
in
or
jg
mov
mov
sbb
or
jo
fisttps
in
push
jl
rorl
or
xor
pop
and
push
sub
cmp
jle
jne
jp
add
or
test
nop
fyl2x
and
popa
pop
sarl
mov
push
test
insl
adc
mov
sbb
mov
dec
ret
test
clc
sbb
call
sbb
jns
dec
mov
dec
cmp
lods
push
jnp
std
je
push
pop
pop
scas
add
add
and
jge
sub
sbb
icebp
jmp
push
or
cltd
lea
test
cld
lods
mov
mov
ss
xchg
outsl
ficoms
vpcomd
fcompl
and
pop
xchg
add
or
frstor
mov
jne
dec
xlat
jl,pt
filds
xchg
cwtl
dec
jbe
xchg
add
mov
inc
out
gs
fistps
and
orb
stc
fcmovnbe
add
and
inc
scas
lods
fdivl
and
hlt
rorb
das
ret
fcompl
jb
push
xor
and
in
lods
jmp
in
ficomps
repnz
and
mov
pop
ret
dec
push
mov
cmp
mov
mov
test
insb
jns
and
out
pop
enter
repz
mov
rcll
lods
or
sbb
pop
fdivrs
inc
mov
test
and
push
sub
xor
mov
mov
sti
mov
dec
test
xchg
ficoml
jns
push
xchg
fidivl
lahf
cld
push
xchg
cli
adc
xor
mov
or
mov
repz
and
or
jmp
mov
pusha
jo
imul
dec
hlt
scas
jbe
adc
add
iret
outsl
out
xlat
inc
fwait
push
fwait
and
or
scas
xor
popf
jp
mov
and
jmp
mov
sbb
jle
repnz
fists
jmp
jg
test
ret
mov
xlat
lds
test
xor
movb
xchg
sbb
iret
pop
lds
and
and
iret
cmpsl
mov
mov
mov
loope
imul
pop
pop
leave
inc
mov
mov
rcrb
popf
fcmove
adc
jno
les
mov
popf
lahf
cmc
out
mov
bnd
adc
pop
or
pop
xchg
adc
jae
ljmp
stos
mov
mov
shll
sbb
in
stc
mov
imul
jmp
lret
roll
test
or
out
cmp
fsubl
mov
push
int
adc
mov
jge
aam
scas
leave
mov
add
es
and
movsl
mov
stos
nop
push
mov
and
flds
xchg
or
fucom
sub
push
outsl
mov
lret
xchg
inc
sub
andl
into
incl
cmp
fs
add
mov
jbe
in
loop
inc
push
xchg
cmp
pop
mov
std
add
adc
adc
aad
mov
xchg
push
loop
lods
mov
jbe
jmp
xlat
outsl
popa
ss
addr16
mov
jbe
loopne
pushf
sub
in
cld
cmp
pop
pop
ret
mov
icebp
test
jmp
aas
pushf
inc
mov
or
lods
mov
fcmovbe
xor
bound
cmpsl
mov
or
lds
cmp
cmpsl
or
pop
xchg
mov
adc
dec
fs
xchg
dec
ja
iret
mov
orl
dec
and
push
ds
and
cmp
loope
jmp
pop
xchg
add
or
cmp
sub
ficomps
push
mov
mov
xor
cmp
inc
add
or
gs
fcmovnu
je
sahf
dec
pop
cmc
dec
imul
cmpsl
les
fnsave
xchg
cmp
push
cs
mov
shlb
les
stos
cmp
sub
jne
outsl
jmp
jno
jle
into
test
test
movsl
jp
mov
mov
push
sub
push
push
out
sub
rcl
movb
mov
in
cmp
inc
jp
je
adcb
lcall
cmpsb
mov
cld
ljmp
jbe
mov
dec
repnz
cmpb
std
push
pop
mov
pop
jno
call
ficomps
or
icebp
xchg
popf
xchg
dec
cmp
lret
dec
mov
mov
add
fwait
lret
xchg
shl
inc
scas
push
push
call
in
ret
adc
inc
ds
pop
add
xor
std
push
dec
mov
icebp
fsts
mov
sbb
or
or
jae
rcll
cmpsl
sar
and
jno
push
jl
push
cld
jae
mov
insb
scas
cmp
mov
fs
movsb
dec
enter
adc
jmp
and
leave
neg
jge
pop
notl
or
ja
daa
ret
push
out
cmpb
shll
scas
sbb
push
inc
pushf
mov
mov
popa
movsbl
jl
mov
int3
xlat
sub
dec
inc
xlat
add
xor
and
add
and
arpl
add
mov
in
and
rcll
inc
jle
add
xor
inc
pop
dec
dec
push
jb
mov
and
dec
jbe
test
stc
and
out
mov
mov
push
imul
jg
cltd
sub
mov
sbb
inc
jmp
xchg
in
sbb
dec
in
inc
xor
jmp
jmp
sub
xor
fsubp
inc
jo
rcll
xchg
sarb
mov
sub
push
jno
dec
lret
ja
daa
cmp
incl
lcall
mov
dec
cmpb
outsb
in
cltd
cmpsb
mov
sbb
pop
rcrl
or
rcrb
insb
ss
push
dec
xchg
imul
push
test
adcb
sbb
mov
dec
pop
cmp
je
outsl
idiv
cld
addr16
sbb
mov
adc
mov
or
sti
xchg
push
sti
mov
rol
enter
ret
arpl
mov
rcrl
lea
jne
ljmp
fistl
movsl
jnp
adcl
pop
xchg
and
inc
or
cmc
pop
lods
mov
sahf
lcall
xchg
pushf
sbb
inc
xchg
lcall
movsl
fdivrs
mov
fs
add
mov
movsl
iret
aas
pop
xor
jecxz
inc
dec
xchg
jns
mov
inc
pushf
icebp
in
sti
fst
sub
jecxz
imul
push
icebp
or
cmpsl
inc
mov
push
push
addl
stos
cli
xchg
lcall
ljmp
jb
call
jge
rorl
nop
push
xchg
cmp
cmc
mov
jae
mov
aas
imul
and
mov
lods
pop
lret
out
test
in
cld
and
pop
add
inc
test
or
pop
aaa
sub
inc
inc
aas
and
xchg
dec
mov
jae
dec
arpl
adc
adc
fwait
mov
jle
jmp
pop
imul
mov
fwait
out
sub
lods
pop
leave
mov
or
fistpll
shl
inc
adc
outsb
mov
enter
jle
ljmp
pop
mov
ja
fidivrs
lods
fmull
loop
int
push
mov
adc
and
cli
cmpsl
stos
shlb
fcomps
cltd
xchg
jno
dec
loop
push
xchg
sbb
cwtl
fdivs
imul
aam
cld
es
sbb
fisttpll
xchg
mov
in
out
shrb
inc
push
xchg
shll
mov
mov
cmp
aas
xor
pushl
out
push
mov
adc
cmpsb
sub
arpl
pop
adc
add
cmp
repnz
cmpsb
lods
lea
arpl
and
mov
cmp
xlat
cmp
test
sub
in
lahf
mov
sub
repz
pop
push
daa
pop
aaa
xchg
push
js
dec
and
sbb
cmp
xor
js
xchg
mov
icebp
jg
sub
mov
shll
fwait
xorb
push
rorb
xchg
push
mov
mov
add
mov
in
pop
inc
in
push
sub
pop
push
dec
and
or
int3
sub
insl
add
mov
int3
imul
push
fnstsw
js
mov
adc
mov
push
filds
fwait
mov
and
iret
lret
std
outsl
stos
and
outsl
enter
lret
and
cld
and
jge
sub
jne
pop
iret
add
xorl
xchg
stos
mov
push
push
jle
mull
mov
push
int
loop
push
mov
fcmovu
adc
pop
imulb
adc
mov
cmp
fs
arpl
cld
popa
mov
fidivrl
add
out
test
ret
mov
pop
push
cmpsl
mov
or
cmp
fadds
test
sub
out
mov
addb
pushf
pop
and
push
xchg
mov
adc
idivb
xor
fildll
scas
pushf
mov
mov
add
inc
sub
and
pusha
push
ficoms
fsub
pop
pusha
add
in
and
sbb
inc
sub
repnz
jb
pop
fidivl
add
fadd
or
insb
xlat
sub
leave
scas
lea
pop
lret
lods
aad
arpl
and
test
sbb
test
in
push
sbb
daa
stos
pcmpgtw
inc
out
xchg
shlb
push
jp
push
jl
jg
mov
dec
int
pop
xor
jbe
lcall
jne
icebp
in
sti
dec
push
adc
into
pop
mov
rorl
aas
mov
push
and
mov
std
mov
out
sub
cmpb
push
std
popf
js
pop
cld
xor
jecxz
scas
aaa
mov
mov
mov
xor
sbb
push
dec
push
mov
xchg
sahf
fldenv
jo
cli
fldl
ret
push
xchg
mov
pop
push
inc
mov
pop
push
ljmp
fcomps
fnsave
pop
mov
fcmovnb
push
out
test
push
cwtl
sbb
mov
outsb
lods
addr16
cmp
shr
bound
xlat
jg
orps
out
push
mov
imul
aad
movsl
sbb
pop
lret
cmp
adc
jle
cmp
les
jo
and
or
pop
daa
add
mov
popa
jecxz
jo
mov
mov
jl
aaa
sbb
xor
mov
mov
pop
or
les
mov
and
lds
and
pop
pop
xor
imul
sub
xor
cmp
frstor
les
push
sbb
test
int3
mov
adcl
fxch
jno
in
popa
jno
mov
sbb
es
xor
cli
sbb
mov
cmp
jo
and
pop
icebp
xchg
lcall
xchg
cs
inc
add
lods
lods
and
push
and
dec
mov
cmp
mov
dec
test
xchg
insl
loope
ja
pop
and
cwtl
fwait
or
xor
leave
outsb
fcompl
sbb
rcr
iret
mov
out
lcall
fidivl
mov
mov
push
aaa
aad
scas
dec
xor
fidivrl
inc
addr16
fidivrl
adc
imul
lods
inc
pusha
jge
lcall
in
std
aaa
sub
sbb
xchg
dec
pop
mov
and
mov
xchg
xor
jg
nop
and
repz
cwtl
jmp
jb
dec
inc
lcall
mov
mov
xchg
adc
mov
pop
cltd
mov
xchg
ja
loop
insl
pop
out
mov
xor
outsb
sub
gs
arpl
add
es
pop
mov
aas
stc
int
movsl
popf
mov
sub
into
mov
push
arpl
aaa
mov
inc
inc
cmp
jb
or
sbb
call
lods
adc
mov
jmp
sub
gs
pop
cmp
inc
inc
clc
arpl
and
add
insl
or
push
fmull
xor
fsubrs
mov
add
and
or
jb
add
lcall
insl
push
inc
mov
out
dec
imul
imul
in
mov
mov
bound
jbe
push
pop
ror
icebp
popf
ja,pt
sub
inc
inc
xchg
imul
cmp
fcompl
lock
sub
fcmovnu
push
ret
in
inc
movsl
lcall
mov
nop
cli
dec
xor
and
aas
pop
mov
shlb
pop
push
cmp
pop
es
out
lret
arpl
fmuls
jo
test
adc
outsb
or
xchg
lods
xchg
scas
lods
jmp
jbe
push
shlb
cmp
aaa
pop
xchg
pop
leave
rclb
cmp
pop
inc
push
daa
leave
and
sbb
movsb
in
pop
test
popf
jmp
mov
jne
sub
pop
jae
cmpl
mov
lret
cmp
jo
adc
fadds
out
popf
inc
loopne
cs
pop
add
sub
jb
and
repnz
mov
cmp
jb
jecxz
xchg
sbb
sub
sbb
insb
test
mov
iret
mov
insl
test
mov
scas
movsl
dec
cmc
cmpb
insb
stos
sub
repz
push
loopne
lcall
sarb
cmpsl
rcll
cwtl
mov
gs
ljmp
add
inc
out
aam
pop
jne
out
ss
sub
fwait
sbb
push
adc
call
and
adc
notl
push
and
daa
test
lcall
rorb
mov
loop
cli
mov
cwtl
and
lods
xchg
and
xor
cmp
lahf
mov
push
jp
inc
jl
dec
mov
xchg
shrl
fildl
in
or
mov
andl
mov
cmp
ljmp
loopne
mov
pop
mov
enter
xchg
sub
outsb
stos
data16
in
dec
sub
cmp
xorb
sbb
jno
dec
sahf
nop
xor
shl
ja
fcoms
cmc
cmp
cmpb
addb
out
xchg
iret
loopne
adc
int3
dec
inc
dec
and
push
out
mov
out
push
jecxz
clc
push
cmp
adc
and
stos
fsts
sahf
cwtl
out
add
push
add
cmpsb
push
dec
mov
jo
movsl
and
pop
xor
mov
fs
xor
mov
add
push
imul
and
lcall
sub
add
cwtl
adc
jae
mov
cwtl
fcom
or
rcr
dec
movsl
xor
xchg
dec
in
push
adc
pop
mov
subl
daa
push
xchg
inc
fstpt
ja
add
addr16
inc
push
mov
fstps
pop
repz
fwait
sbb
imul
lods
shl
mov
popf
cmp
xor
sbb
sub
xlat
and
ljmp
or
int
inc
inc
inc
push
add
fadd
pop
sub
loopne
or
sbb
mov
sub
push
jmp
mov
inc
and
add
jmp
inc
data16
outsl
mov
push
loopne
stos
inc
in
adc
xor
dec
inc
scas
add
push
sub
mov
shl
ja
lret
addr16
sbb
pop
pop
add
push
and
adc
std
enter
adc
pop
cwtl
xor
jge
out
test
or
xor
and
test
xchg
loopne
mov
data16
sbb
xor
mov
lds
fdivrl
je
aad
or
xlat
jbe
and
pop
push
pushl
js
pop
jl
mov
int3
or
icebp
dec
jge
lods
push
jns
pop
inc
std
cld
inc
jns
dec
xchg
pop
es
jnp
and
lret
fisttpll
stos
aaa
scas
fwait
in
gs
mov
cmc
repz
data16
mov
imulb
and
dec
push
fcmovbe
ret
shrb
push
sub
jg
or
sub
dec
cmc
icebp
test
or
ds
xlat
stos
in
or
add
xchg
xchg
mov
cmp
not
lds
cmp
push
daa
gs
and
aaa
inc
and
stos
fsub
mov
or
or
popa
dec
inc
lock
test
test
mov
inc
jbe
cltd
xchg
jp
js
jmp
xlat
jle
das
sti
cmp
mov
or
fwait
sub
xchg
mov
outsl
ficompl
and
ret
cmpb
lods
jne
imul
cmpsb
lds
insb
xchg
adc
add
loop
repz
cmp
cltd
jo
ljmp
mov
xor
imul
dec
movsl
cmp
leave
jl
push
lea
mul
int
cli
cmp
ret
adc
das
mov
cld
bound
adc
jle
movsl
ds
sub
mov
push
or
pop
repz
dec
mov
mov
sti
lcall
xchg
ljmp
outsl
push
test
jge
movsl
daa
jb
in
fisttpll
dec
push
dec
test
popf
aam
lcall
jae
adc
pop
and
ds
lcall
lret
aas
inc
mov
cmpb
ds
outsl
mov
mov
pop
sahf
repz
mov
push
clc
cmc
lret
ret
add
sbb
xor
xor
test
mov
xchg
pusha
enter
pop
adc
pop
xchg
adc
lcall
in
cli
mov
cmp
fnstcw
movsb
rcrl
aas
das
enter
sbb
xchg
cmpsb
push
adc
mov
mov
popf
dec
rcll
stos
inc
mov
clc
jbe
call
inc
add
or
sahf
push
pushf
jg
fimull
cmp
jl
je
out
dec
ret
mov
jmp
push
adc
mov
mov
rorb
cmp
pop
scas
cmp
jp
scas
jns
push
mov
fnsave
cmp
ficompl
xchg
out
std
iret
sub
fsubrl
aas
shl
add
test
je
mov
popa
fsts
cmp
daa
stc
push
jb
mov
sbb
sbb
jl
fmuls
pushf
loope
cmovg
mov
mov
insb
nop
add
fucomp
xchg
out
or
in
mov
movsb
test
mov
aaa
mov
cmp
xchg
adc
push
aas
sub
pop
sbb
pusha
push
mov
jge
xchg
pop
pop
js
andl
inc
fldenv
es
lea
testl
cs
or
mov
loopne
jo
insb
xchg
aaa
int3
bnd
sti
xor
mov
dec
dec
pop
mov
pop
push
daa
enter
xor
mov
fsubrl
jge
push
les
ds
add
icebp
pop
fstps
adc
adc
mov
ljmp
cmp
sbb
dec
lods
mov
pop
jbe
xor
orl
pop
mov
lock
push
mov
inc
jle
add
repnz
xchg
pop
rorl
sub
das
adc
test
add
xor
inc
out
ret
lock
push
lcall
insl
mov
insb
pop
pushf
cld
push
sti
mov
jmp
mov
sbb
mov
jne
inc
xchg
jae
xchg
and
add
stos
push
dec
in
aaa
xor
pop
inc
and
movsb
mov
jg
add
jp
scas
mov
pcmpgtb
sbb
clc
or
inc
adc
and
jnp
dec
adc
cmp
out
mov
dec
push
push
and
cmp
dec
insb
dec
and
test
cmp
push
insl
pop
andl
lret
xor
xchg
and
decl
xchg
shlb
sub
imul
cli
adc
xor
fbstp
cli
aas
or
adc
dec
jo
dec
add
xchg
pop
jae
data16
xor
sub
jp
cmp
lea
mov
sbb
int3
mov
push
lcall
lret
cmp
xor
inc
dec
loope
mov
aad
add
subl
filds
mov
mov
inc
in
push
clc
inc
int3
rcrb
dec
mov
jge
test
push
xor
mov
aaa
into
imul
jp
in
mov
adc
sub
lods
stos
stos
jne
pop
jmp
dec
inc
or
mov
fs
lods
aaa
xchg
mov
insl
rcrl
idivb
pop
nop
or
mov
pop
lcall
mov
pop
push
lds
sbb
xor
mov
lret
out
pushf
les
xlat
fwait
or
idiv
call
mov
or
mov
pop
xchg
inc
pushl
push
sub
push
push
pmullw
enter
xchg
clc
fiadds
movsb
mov
jecxz
mov
rorl
and
sbb
and
pushf
jge
cmpb
insl
in
out
fwait
xchg
out
fimull
andl
jp
mov
jmp
pop
lret
cmp
or
sbb
call
cmp
das
outsb
mov
mov
xor
sub
pop
or
hlt
jmp
aam
call
pusha
les
out
enter
jno
jnp
test
jl
insb
mov
mov
mov
js
lahf
pop
xchg
data16
mov
in
aad
rorl
out
dec
dec
pop
jbe
jae
ja
and
mov
and
out
hlt
add
scas
mov
jb
scas
jno
aam
pop
cmc
pop
mov
andl
scas
xor
add
mov
ret
adc
inc
push
jo
int
negl
in
cli
nop
sub
ds
mov
fs
mov
mov
sub
rorl
ror
lret
hlt
cmp
pop
sub
mov
bound
or
lock
dec
jge
xor
add
pushf
ret
and
sbb
mov
xchg
add
and
in
js
std
in
push
pop
clc
jp
in
inc
jbe
nop
xlat
ret
sub
fimuls
xchg
jno
xor
outsb
enter
out
mov
rcrl
xor
stos
sar
loopne
movsb
loop
mov
add
aas
push
mov
adc
sub
mov
loope,pt
into
dec
push
push
cmc
rorl
xchg
or
bound
sbb
or
loop
pushf
arpl
shrb
cmp
daa
jle
dec
fnstenv
and
inc
inc
ds
out
repnz
jmp
ja
dec
sub
pop
movsb
mov
jb
mov
or
inc
daa
and
clc
int3
sbb
imul
mov
shll
in
sub
xlat
std
popa
aas
sub
add
int
outsl
push
in
inc
mov
popa
bound
cmc
adcl
fsubrl
cltd
mov
mov
in
dec
or
or
cmp
mov
call
jb
test
lcall
xor
inc
leave
or
or
pop
pusha
jae
xchg
shrl
jae
add
add
add
mov
mov
test
mov
sbb
fucomp
pop
lahf
lret
fstpt
xchg
fs
pop
xchg
push
mov
roll
insl
cmp
leave
mov
icebp
cmp
leave
popa
mov
sbb
out
xor
inc
or
in
ja
sub
fs
cs
lret
push
cmp
es
lea
jne
scas
push
lahf
add
push
into
mov
cwtl
mov
ret
mov
lahf
cmp
push
loop
jg
test
mov
js
xchg
xchg
int3
push
push
cmpsl
fstpl
das
inc
sub
mov
inc
mov
jnp
cmp
pop
sarb
cli
das
push
push
dec
and
lcall
xchg
dec
inc
loop
mov
rol
std
js
inc
fwait
std
lods
outsb
mov
sbb
mov
lods
inc
mov
pop
add
mov
rorl
out
dec
sar
and
push
pop
adc
das
pusha
xor
scas
sbb
int3
pop
pop
fimuls
or
addb
push
sti
imul
add
xchg
int3
add
sub
mov
shll
add
leave
das
jno
jle
pop
call
outsl
inc
loop
movsb
add
push
repz
sahf
xor
bound
scas
inc
popa
push
std
push
xor
lret
adc
cmp
xchg
cmp
mov
ja
mov
jne
mov
mov
dec
hlt
push
jo
dec
in
jmp
mov
cli
mov
fldcw
fs
stos
lcall
add
and
subl
idiv
mov
xor
fidivrl
lods
xor
cld
mov
ljmp
testl
mov
outsl
leave
mov
lret
movsb
push
lock
push
sahf
dec
cmpsb
mov
mov
in
mov
mov
jg
mov
shl
in
cmpb
outsl
pop
out
cvtdq2ps
mov
pop
push
cltd
xchg
mov
fmull
add
aas
sti
fnstsw
es
insl
jp
jo
sahf
jb
lcall
leave
pop
mov
iret
aad
and
jecxz
jp
iret
push
ficompl
cld
cmc
imul
out
jmp
jo
fisubrs
gs
sahf
in
or
mov
pop
xlat
cmpb
pop
pop
lock
mov
push
dec
sti
xchg
cli
mov
clc
jnp
stc
dec
sub
pushf
cs
jno
sub
inc
mov
xor
popa
daa
imul
fwait
sbb
cmpsb
out
mov
shl
and
ljmp
push
sbb
test
pop
repnz
arpl
fwait
push
mov
jne
adc
filds
and
fisubrs
add
imul
loop
sbb
test
fisttpll
sar
out
sub
fcmovne
mov
movsl
rcrl
dec
or
js
rclb
push
mov
pop
jge
push
imull
mov
cwtl
ja
fcmovnbe
jns
loop
and
rcl
fnstsw
int
xchg
fstps
out
pop
dec
jmp
outsl
xor
jno
scas
mov
fs
in
or
jge
jp
add
adc
adcl
repz
xlat
or
orb
test
push
or
iret
jmp
fwait
jle
sub
adc
mov
sbb
out
icebp
ret
sub
xchg
xchg
daa
dec
ret
sbb
sbb
mov
stos
xlat
int3
mov
jne
cltd
int3
daa
lret
iret
fchs
in
and
aas
imul
jecxz
scas
cmp
pushl
jle
or
dec
xor
test
add
sub
ja
sbb
cmp
mov
push
pop
adc
ljmp
mov
repnz
movsb
pop
jo
pop
daa
test
movsb
jecxz
popf
in
or
push
pop
pop
rcrl
cmpsl
push
in
mov
and
jmp
inc
out
jmp
mov
push
adc
stos
add
dec
jmp
mov
xor
loopne
push
jb
push
cwtl
or
jo
cmp
testb
adc
mov
jge
out
push
adc
mov
push
sbb
inc
nop
fdivl
or
sbb
loop
push
and
es
outsb
cmp
push
scas
ret
aad
in
inc
inc
popf
cli
jnp
ljmp
mov
enter
pop
sbb
pop
jno
push
ficompl
cmpsl
clc
lahf
stos
or
arpl
dec
enter
addl
insl
jns
sbb
inc
icebp
push
adc
push
jb
cmp
je
jb
lret
jne
arpl
xchg
aad
add
stos
push
mov
jp
jbe
rcrb
or
pop
push
cmp
popa
adc
cmpb
xchg
sbb
sbb
or
lcall
in
mov
push
adcl
push
sbb
leave
outsb
or
push
dec
in
sbb
mov
cmp
sub
ds
lds
loope
mov
mov
mov
or
aam
daa
add
pop
mov
int3
or
add
jbe
jecxz
sub
pminub
lcall
mov
pusha
jns
or
ja
fwait
dec
dec
aad
push
insb
cmpsl
inc
mov
sub
or
cmp
add
in
pop
adc
insl
push
or
in
test
loope
dec
sub
mov
dec
inc
ret
jns
mov
xchg
test
inc
nop
jne
cmp
add
sarl
mov
enter
idivl
leave
pop
ljmp
cmpsl
push
out
add
test
lock
mov
inc
or
pop
insl
fmuls
xchg
aaa
and
das
cmp
dec
test
cmp
out
xlat
and
lods
xorb
rcrb
push
insl
cwtl
bound
negb
and
xor
pop
fstl
ds
push
dec
push
aaa
adc
loope
ss
fwait
cmpsb
sti
pop
stc
dec
adc
adc
mov
jb
aad
aaa
jg
xor
and
pop
adc
mov
adc
mov
sbb
adc
jle
push
jns
int
pop
icebp
aad
jl
inc
ffreep
arpl
imul
mov
sarb
stc
arpl
scas
mov
push
adc
in
jbe
mov
insb
jmp
pop
add
lods
jno
add
loope
xchg
dec
xlat
push
cmp
mov
std
inc
or
jbe
mov
pop
pop
sub
adc
lcall
in
lcall
cmpsl
and
mov
and
xor
rorb
sub
and
adc
sbb
test
push
adc
add
and
pop
hlt
insb
push
icebp
inc
jo
decb
sahf
xor
mov
jle
pop
nop
jae
adcb
lods
or
jne
aas
in
cwtl
pop
mov
ljmp
and
cmpsb
mov
push
cmpsb
ficompl
push
pushf
sahf
jl
cmp
add
cmpsl
jb
push
pslld
mov
gs
xchg
sub
mulb
mov
adc
arpl
inc
fmulp
cltd
jo
mov
out
in
and
sbb
jmp
fldl
fadds
js
cmp
iret
and
xchg
std
jge
push
in
sbb
push
mov
out
xchg
outsl
jns
leave
test
mov
pop
cmp
insl
sub
mov
jo
shll
push
out
cs
jmp
ds
repnz
xchg
out
xor
cmp
pop
push
mov
cmpsb
jecxz
lret
icebp
lcall
mov
push
cmp
dec
popf
mov
arpl
fnstsw
mov
xor
fcompl
push
lcall
in
stos
fcoms
test
jne
loop
dec
repz
out
jne
stc
jno
xchg
sti
dec
popa
jb
sti
xlat
hlt
mov
inc
arpl
mov
aas
push
push
pushf
ficoms
adc
js
xor
xchg
xor
inc
outsl
mov
inc
mov
xor
test
mov
jae
das
xchg
push
popf
das
mov
add
cmpsb
push
push
ret
ret
fisubl
out
idivb
roll
testl
and
sbb
mov
mov
dec
or
rolb
push
adc
cli
push
jmp
fimuls
insb
mov
sbb
iret
test
jne
push
cld
mov
push
or
mov
daa
jae
cltd
ror
int
mov
cli
dec
cld
aas
imul
addb
mov
aad
cld
hlt
add
push
add
cmp
arpl
or
jmp
or
xchg
testl
jmp
pop
clc
insb
jmp
pop
and
cwtl
fnstcw
mov
sti
mov
lret
mov
inc
and
push
xor
pop
mov
test
filds
cmp
fnstsw
pop
cmp
mov
aad
mov
stos
push
movsb
xchg
out
ss
enter
sub
inc
fwait
int3
mov
jg
and
movsl
and
cwtl
stos
int
xchg
fidivl
dec
repnz
sti
xor
add
jecxz
stos
sti
or
cmpsb
and
jmp
fdivr
jbe
loopne
out
adc
push
mov
mov
repnz
iret
fidivrs
lods
xchg
fwait
dec
popa
push
popf
jb
and
rclb
sarl
xor
in
cmpsl
pop
and
xor
mov
sub
pop
mov
or
add
jae
out
dec
pop
int
xchg
pop
pop
lods
mov
xor
stos
pop
testb
or
sub
mov
add
mov
adc
jae
push
fisubs
fidivl
cmp
mov
addb
dec
mov
mul
repz
or
mov
lds
nop
sbb
pusha
pop
popl
cmc
fs
addr16
push
out
cld
mov
jns
jl
rclb
mov
mov
cmc
inc
jg
jp
mov
mov
mov
or
jg
sbb
and
sbb
arpl
jl
push
repnz
xchg
mov
arpl
jecxz
and
adc
adc
inc
pop
mov
in
imul
jbe
out
outsb
cld
adc
int
pop
sti
cmp
mov
push
iret
add
jle
jecxz
imul
out
iret
popf
popf
xchg
popf
lahf
int
jnp
xor
and
and
in
dec
fidivs
js
adcl
dec
mov
popf
mov
lcall
add
sbb
cmpl
out
hlt
rclb
scas
add
and
in
sub
jmp
dec
fldenv
push
inc
ja
fsts
mov
push
sbb
fstpl
xchg
ret
push
lcall
sarl
andl
and
into
in
mov
repnz
push
lret
inc
insb
push
adc
mov
les
jp
dec
stc
mov
mov
ret
imul
dec
std
mov
cmp
xor
mov
pop
and
test
push
fidivrs
cld
pop
push
icebp
mov
dec
mov
lret
jb
ss
stos
repz
into
loop
xor
xchg
lret
dec
inc
cld
in
dec
xchg
imul
push
sub
sahf
test
orl
movl
fbstp
push
ja
inc
outsb
xchg
add
cwtl
lock
push
mov
insb
int
dec
pop
lahf
adc
lret
loope
mov
xchg
jmp
mov
pushf
scas
pop
ljmp
fs
inc
pop
enter
add
into
stos
adc
push
xchg
mov
push
or
add
dec
push
fnsave
fdiv
lcall
or
mov
and
cltd
xchg
ret
in
inc
fcoms
inc
push
xor
cltd
in
jae
iret
add
push
sbb
xchg
fmuls
add
dec
cmp
and
aad
xchg
dec
add
jle
inc
add
cmp
mov
fildl
popa
mov
sti
jge
icebp
out
scas
push
stos
out
gs
cmp
std
adc
jne
dec
shrb
push
add
or
stc
cmpl
call
fisubrs
out
inc
cmp
daa
lods
add
fnstenv
mov
xor
neg
dec
and
xlat
xlat
shrb
pop
jg
dec
jno
mov
or
lcall
stos
push
daa
and
jecxz
mov
in
adc
testb
xchg
adc
movsl
push
pushf
jg
push
popf
ljmp
insl
in
or
pop
mov
jle
arpl
mov
pop
daa
lods
add
lock
adc
lret
lahf
push
clc
mov
sub
and
mov
dec
loop
mov
sbb
and
xchg
and
dec
call
inc
inc
cmp
mov
in
aad
or
punpckhwd
mov
mov
dec
xchg
mov
mov
pop
or
sbb
xor
or
imul
sub
xchg
cmp
repnz
scas
sub
jl
inc
ret
jl
cmpsl
or
loop
sti
sbb
push
inc
and
and
sub
inc
lods
test
js
push
xchg
adc
jae
lods
ja
sbb
inc
loope
and
push
jns
xor
push
int
movsb
scas
push
xor
cmpsb
jne
inc
bound
je
test
aad
xor
or
mov
xor
or
add
and
or
xor
cli
and
inc
cmp
mov
addr16
jge
fnstenv
rcr
mov
notb
pop
cmp
jge
ja
jns
xchg
repz
es
ljmp
loopne
dec
mov
inc
cmpsb
leave
or
xchg
mov
mov
jecxz
xchg
repnz
xchg
push
mov
mov
sbb
cmpsl
add
add
imul
leave
inc
cmp
in
mov
sub
mov
enter
mov
cmp
inc
dec
into
test
loope
or
stos
mov
std
jne
lcall
mov
push
adc
and
push
nop
and
sbb
or
xchg
cmp
inc
cmp
mov
inc
xor
jb
xchg
jle
fs
xor
ret
test
cmp
push
pusha
out
jle
cmc
mov
call
or
cmp
icebp
dec
sub
mov
push
adc
push
adc
xor
pop
out
or
fbstp
orb
stos
lret
fdivl
into
xor
hlt
pop
sbb
lock
cmp
aam
lea
mov
or
aad
ret
sub
mov
test
test
loop
xor
push
pusha
adc
mov
je
pop
inc
pop
xor
mov
xorb
jecxz
ss
jecxz
dec
mov
mov
loope
push
fxtract
jl
xchg
std
or
fsubs
shlb
iret
adc
lods
lods
out
pop
and
test
mov
sub
jb
push
out
dec
lret
dec
push
outsl
std
cmp
mov
or
mov
aad
imul
into
ret
js
fcmovnu
or
jnp
bound
xchg
sub
sbb
lods
sar
dec
out
jns
data16
push
popf
fistl
jo
push
and
xchg
lods
out
xchg
jb
sub
test
inc
xchg
lds
dec
push
mov
arpl
mov
cmc
lahf
mov
sub
mov
lock
fidivrs
movl
adc
movsl
push
lock
out
call
adc
dec
lcall
mov
fnsave
jl
pushf
hlt
push
push
jb
mov
mov
scas
jae
mov
xchg
or
pop
and
cmp
fwait
ss
rcrl
pop
mov
ret
fsubrl
in
or
sub
hlt
ss
jmp
scas
sbb
and
aas
cmp
push
push
outsl
in
mov
sub
jo
and
dec
js
insb
add
xor
sbb
cmpl
add
imull
xchg
sbb
xor
iret
pusha
fdecstp
bnd
mov
daa
cmc
lds
xchg
adc
inc
xchg
push
mov
orl
pushf
lahf
cwtl
dec
out
test
or
lds
enter
dec
mov
add
lock
repnz
fbld
mov
inc
imul
lcall
in
pop
xlat
pusha
aam
push
test
leave
out
add
mov
cmp
ja
mov
pop
scas
cmp
pop
sahf
mov
repnz
xchg
es
ret
pop
cmp
imul
add
dec
push
pop
aam
push
inc
cmp
mov
or
fsubr
imul
out
mov
pop
outsl
jns
cmp
aam
fucomp
lea
shrl
test
into
roll
xchg
add
mov
jl
scas
xchg
mov
xchg
cmp
loop
in
pushf
bound
lds
in
sub
sbb
xor
rcll
loope
add
test
lods
add
add
movsl
pop
sbb
imul
in
lcall
push
pop
cmp
dec
not
sbb
mov
and
pop
lods
sarl
movsl
fwait
pop
out
sbb
cwtl
rcll
or
gs
lret
scas
push
dec
jge
sarl
mov
sub
cld
inc
cmp
xchg
lret
addl
test
fcmovnu
jne
push
cld
sub
adc
rol
mov
loopne
lods
js
mov
dec
add
psubsw
mov
inc
cmpsl
mull
roll
xchg
sti
cmp
lock
push
rolb
push
je
sub
push
xorb
push
nop
outsb
jnp
mov
fcos
cmp
fnstcw
hlt
stos
outsb
sub
or
scas
lods
xchg
cmp
pop
mov
ret
xchg
shll
das
xchg
cld
fcmovu
adc
fldl
outsb
insl
fistpl
cmpsl
pop
outsb
mov
leave
repnz
mov
pop
cwtl
es
sub
aas
dec
cld
ljmp
inc
es
out
pop
dec
into
mov
ja
or
les
rcrb
mov
adc
mov
dec
add
insb
mov
adc
pop
pop
mov
pop
sub
xchg
xlat
das
push
and
sarb
sub
xor
imul
out
leave
addb
pop
rcr
pop
enter
icebp
adc
or
cmpb
mov
mov
cmpsb
adc
push
pop
das
sarl
xchg
out
loope
or
ror
clc
mov
nop
jne
sbb
push
cmp
scas
xchg
imul
test
pop
or
mov
popf
into
and
stc
repz
push
inc
dec
addb
and
or
add
ror
andl
fstpl
cwtl
aas
fsubrp
jmp
nop
xchg
push
jmp
push
pop
cmp
hlt
add
addr16
xchg
jne
es
and
mov
lods
xchg
scas
roll
movsb
inc
pop
fdiv
hlt
scas
lcall
fistpll
test
aam
mov
add
mov
lcall
sbb
rorb
aas
push
out
sub
imul
in
loop
cmp
insl
cmpsl
cmc
mov
clc
sbb
sarb
sub
loope
adc
mov
je,pn
pushl
xor
fld
fstl
add
inc
call
cmp
mov
mov
pop
jg
cmpsl
pushf
aad
sahf
leave
cmpsl
cltd
test
iret
dec
pop
add
out
push
nop
into
sbb
popa
pop
sub
push
hlt
out
cmpsl
mov
jo
stc
xchg
and
xor
fildll
dec
pop
mov
leave
popf
push
jecxz
cmpsl
sbb
sbb
in
add
cli
mov
inc
pop
adc
push
repnz
pop
aad
push
fcom
inc
je
lods
push
lcall
xchg
xlat
loop
popa
int3
push
cmpsl
inc
sbb
pop
cld
jg,pt
jne
sti
mov
cmpsl
xlat
xchg
adcl
pop
cmpb
outsl
mov
aam
xlat
push
dec
pop
ret
mov
imul
inc
push
xchg
sahf
inc
test
sub
sbb
jne
pop
stc
shr
ret
push
rcr
and
jmp
lret
jge
loope
push
pop
in
aam
cmc
in
stc
push
inc
in
xor
push
out
mov
mov
ja
xchg
enter
add
xlat
dec
xchg
pop
jecxz
mov
in
adc
pop
arpl
jo
cli
out
cmp
mov
xor
lock
cmpsb
add
inc
add
sub
inc
lret
movsb
mov
fildl
mov
mov
add
je
call
jns
jne
sbb
stos
out
sbb
dec
into
pusha
dec
jae
mov
dec
enter
dec
jbe
cmpsb
stos
adc
mov
push
cmp
jmp
or
ret
jbe
rcrb
pop
mov
jns
rcrb
dec
jo
imul
leave
xchg
dec
push
xchg
jae
push
mov
jg
pop
or
hlt
out
lock
push
aam
inc
pop
fadd
push
xchg
cmpsb
sbb
lock
jae
push
je
mov
mov
pop
dec
adc
mov
gs
sbb
jae
ljmp
loopne
or
adc
outsl
shll
out
bound
stos
in
sub
inc
adc
sti
sbb
fidivrl
sti
mov
pop
int3
fwait
xchg
fs
iret
flds
xchg
imul
cmp
int3
xchg
testb
rcrl
aad
imul
or
xchg
fcmovu
fisttpl
adc
rorl
jp
or
push
inc
inc
outsl
bound
mov
jmp
shlb
mov
rclb
xor
and
test
or
mov
mov
movsb
sub
xchg
inc
out
bound
divl
fld
cmp
inc
movsl
mov
enter
xchg
jo
ljmp
sub
stc
cmp
cmp
sti
pop
mov
decl
mov
jge
fimuls
sub
cmc
ror
aaa
dec
scas
pop
xor
into
sbb
adc
mov
mov
hlt
outsl
ja
daa
daa
pusha
and
mov
jge
div
pop
pop
jbe
data16
sbb
xor
sbb
arpl
cs
xchg
mov
push
inc
push
adc
scas
add
loopne
mov
test
into
xor
fisttps
push
rolb
icebp
test
sti
mov
sbb
jge
pop
xor
jg
push
gs
subl
syscall
icebp
and
cmp
inc
xchg
cltd
xor
mov
push
sbb
push
std
lret
mov
jae
mov
cltd
scas
rcrb
lret
or
sbb
mov
sti
xchg
repnz
mov
cld
scas
jg
mov
xorl
cltd
sub
mov
sub
ds
xchg
rcr
jne
mov
xor
sahf
loopne
fldenv
pop
pop
sbb
out
pusha
xor
les
xchg
mov
in
mov
dec
aaa
xor
orb
xchg
adc
lahf
stos
call
loope
push
ljmp
ss
pop
jne
cmp
mov
aaa
xchg
enter
jnp
cltd
mov
jg
out
cmp
jmp
push
xchg
cmpb
pushf
sbb
xchg
sbb
cmp
call
je
cmc
cmp
shl
int3
fldt
cmp
pop
cmp
mov
or
hlt
lds
and
int
aad
test
sbb
adc
rclb
outsl
movsb
movsl
mov
pop
rcrl
cmp
inc
sub
lds
mov
push
lret
or
add
sbb
mov
mov
pop
lahf
mov
pop
jae
add
outsl
out
loopne
cmp
lret
push
outsl
adc
and
add
mov
jne
ja
out
dec
cld
in
sub
jno
popf
shrb
cmc
stos
or
mov
in
jns
or
push
and
jne
mov
jmp
movsb
and
mov
fldt
and
push
insb
sbb
mov
ficoml
es
in
lahf
dec
pusha
cwtl
lods
icebp
xchg
inc
ffree
push
repnz
and
scas
shrb
lods
incl
in
xchg
aas
cmp
fnsave
out
sbb
repnz
aaa
out
mov
mov
push
jb
cmp
repz
adc
clc
dec
xor
leave
sub
gs
testb
mov
inc
cmpsb
dec
inc
in
mov
into
adc
imul
int3
clc
iret
jo
mov
mov
jns
loop
and
mov
negb
inc
je
popf
mov
in
mov
or
mov
rcrl
andb
testb
frstor
jne
xchg
shll
add
cs
movsb
dec
inc
cmpsl
test
je
pop
cmp
sbb
in
dec
xor
adc
outsl
dec
and
jae
cli
into
jo
lahf
scas
fidivrs
mov
iret
jmp
sub
cli
scas
adc
push
out
cs
add
sub
mov
shl
data16
and
push
jmp
loope
jne
hlt
dec
xor
sarb
xchg
sub
cltd
imul
add
sub
outsb
pushf
push
hlt
mov
push
and
cmpb
jecxz
pop
ljmp
pop
icebp
xor
cmp
cltd
sbb
aas
sbb
mov
and
rorb
xor
xchg
subb
loope
lret
xor
push
rcr
mov
push
ret
dec
dec
mov
adc
sarl
aas
scas
jg
mov
pop
inc
push
repz
sahf
dec
xlat
mov
loop
xchg
test
cwtl
mov
push
cltd
orl
sub
mov
add
mov
mov
cli
jnp
sub
pushf
cmc
pop
or
hlt
mov
sub
cmpsb
ljmp
int
in
push
xchg
es
and
repnz
iret
add
xchg
hlt
xchg
aas
mov
scas
inc
repnz
cmp
fisubs
lods
mov
cmovle
rolb
sub
mov
mov
loope
xor
inc
cld
ljmp
ficoms
add
or
sub
inc
inc
iret
test
data16
sbb
aaa
lahf
pop
xor
insb
movsl
stc
test
mov
loope
xchg
insl
fsubrl
imul
mov
dec
into
aas
ret
int3
push
out
xchg
mov
ljmp
hlt
sbb
es
out
mov
sti
lods
fsubs
fistps
leave
and
inc
faddl
jno
adc
cmp
lcall
xor
sbb
fucomi
scas
mov
jo
xchg
cmp
hlt
imul
imul
out
sub
ret
push
mov
out
add
jno
stos
mov
je
das
add
and
cmp
movsl
jecxz
sbb
addb
fwait
data16
jo
fistpl
sarl
out
insl
jl
outsl
sarl
xchg
mov
insb
test
rorl
into
decb
scas
xor
or
cmp
mov
repnz
fidivrl
or
sarl
inc
sub
bswap
pop
pop
inc
and
fwait
test
add
test
dec
mov
sbb
daa
push
sub
out
dec
pop
sbb
imul
lcall
jle
fwait
push
ror
es
xor
lahf
sbb
sbb
cmp
rcrl
dec
pop
sub
jns
add
xchg
outsb
lret
mov
daa
add
ds
sti
jns
jp
ljmp
stc
sbb
int
lret
or
jmp
cmp
cmp
loop
jmp
pop
cmp
andl
mov
sub
xchg
out
inc
xchg
push
test
xchg
push
mov
sbb
dec
xchg
add
mov
popf
ret
fwait
xchg
fistl
push
xchg
dec
inc
cmpsl
jnp
out
sbb
mov
imul
cmc
mov
pop
xor
xor
loopne
push
pusha
pop
lahf
out
repz
imul
jmp
mov
jl
lahf
mov
ds
push
jge
xchg
outsl
pop
adc
loopne
cwtl
add
repnz
lea
pop
mov
mov
inc
dec
or
addr16
xchg
inc
out
ds
arpl
std
mov
inc
loope
dec
mov
jle
fs
pop
psubw
and
jecxz
test
movsb
mov
mov
imul
cwtl
fsubl
sti
arpl
adc
jbe
divb
pop
push
mov
test
and
sub
into
mov
out
gs
pushf
jp
inc
loopne
lds
int3
cld
sub
icebp
lret
clc
fsubs
pop
lock
pop
mov
cmp
sbb
xorb
mov
into
inc
xor
dec
cwtl
xorb
cmp
inc
das
movsl
mov
in
pop
movsl
jbe
pop
subb
mov
push
aam
mov
add
jns
cmp
bound
out
cmp
je
scas
pop
xor
push
xchg
xor
mov
sub
xor
xor
pop
mov
xor
lcall
sbb
fstpt
into
ja
mov
in
jo
jnp
xor
or
mov
inc
push
and
add
push
mov
ss
cs
pop
or
mov
dec
stc
xor
inc
xchg
test
jle
mov
sbb
movsb
sub
adc
inc
ja
and
std
lods
js
lock
mov
mov
mov
xor
add
push
cmpb
movsl
dec
rorl
pop
lcall
dec
jl
scas
testl
clc
shlb
mov
aas
int
popf
mov
and
xor
lods
mov
xchg
mov
fwait
out
shlb
cmp
mov
push
stos
fcompl
daa
pop
add
arpl
inc
imul
jb
aaa
add
mov
lahf
mov
dec
jbe
insb
adc
mov
pop
pop
xchg
jl
icebp
out
mov
mov
test
decb
cmpl
pusha
pop
cmp
or
sarl
insl
test
js
xor
xchg
inc
xchg
xor
sti
sub
jle
rolb
imul
stc
notb
iret
shll
inc
push
or
in
rcrl
shr
dec
movsb
xor
pop
jb
inc
repnz
sub
pop
test
mov
movq
xchg
sub
add
jg
pop
jb
fwait
mov
dec
stos
fwait
insb
pop
inc
push
lret
jmp
stc
test
adc
push
mov
inc
sbb
xor
lcall
adc
pop
std
fbstp
test
jl
inc
sbb
fildl
jmp
cmp
mov
hlt
and
ret
iret
push
mov
mov
dec
add
call
sbb
mov
or
int
cmpsb
adc
mov
test
mov
test
imul
mov
mov
mov
mov
mov
jns
inc
mov
dec
and
out
ss
add
mov
aaa
je
jno
int3
push
lods
xchg
test
push
cmp
repnz
sub
enter
cmp
and
dec
mov
cmp
dec
lds
ret
lcall
lods
or
sub
gs
jecxz
cmp
lods
or
loope
stos
jno
cmc
je
push
pusha
jns
push
cmp
popf
and
sqrtps
xchg
xchg
adc
fistps
mov
mov
jne
fmuls
dec
cmpsl
fcomps
loop
shll
pop
inc
push
mov
pushf
adc
push
mov
mov
icebp
sub
inc
mov
sbb
mov
cmp
jle
mov
dec
in
jmp
adc
jmp
lea
test
xor
add
inc
loop
adc
pop
int
fdivrl
mov
inc
test
jbe
mov
in
decb
add
lahf
insl
arpl
pusha
mov
out
rcrl
dec
scas
fnstcw
pop
out
and
dec
bnd
lahf
cmp
imul
jno
js
aam
cmp
jne
out
jnp
jno
je
mov
imul
and
inc
shrl
xor
mov
and
or
leave
mov
pop
js
dec
dec
mov
mov
sbb
cmp
sbb
jmp
lock
adc
mov
je
int3
ljmp
les
bound
ret
test
in
adcb
jle
imul
call
sbb
repz
mov
jle
movsb
stc
es
sbb
jmp
jbe
bound
icebp
jmp
and
imul
int3
mov
mov
and
insb
and
cmp
lcall
lret
int3
push
decb
repz
sub
adc
repz
bound
mov
jge
push
pushf
adc
xor
and
pop
pop
xchg
dec
cmp
js
jle
or
leave
jno
out
cmp
and
or
cmc
shlb
jge
mov
sti
jno
insb
mov
push
dec
push
inc
push
decb
pop
lret
add
pushf
sbb
mov
and
mov
jg
scas
ss
mov
pusha
pop
clc
mov
push
push
ret
pop
inc
test
push
aam
inc
and
jno
dec
xchg
xchg
xchg
xchg
push
pop
test
xchg
lahf
insl
sbb
push
jp
xchg
pop
into
xor
mov
push
shlb
xchg
xchg
fdivrp
sub
or
jmp
jle
jp
negl
pop
adc
and
push
arpl
lahf
cmp
in
pop
dec
sbb
inc
int3
adc
mov
or
jle
sbb
sbb
jecxz
mov
jle
ret
fsubr
mov
test
mov
jmp
daa
mov
fyl2x
pop
std
dec
hlt
outsl
mov
icebp
lahf
cmpsl
mov
imul
sti
loope
fists
pop
fnstsw
jb
hlt
in
add
lcall
and
xor
cmc
stos
push
and
aam
fnsave
addb
test
jae
mov
gs
fsts
lods
inc
lret
mov
xor
ret
fdivl
sub
je
test
mov
ret
cmp
ret
stos
sbb
cld
das
jl
or
enter
jae
xchg
fisttpll
sub
ljmp
xor
in
lcall
xchg
xchg
test
mov
daa
out
mov
add
and
inc
cmp
imul
mov
into
imul
push
sbbb
dec
bound
sbb
adc
adc
clc
data16
pushf
xchg
cmpsl
std
pop
inc
jb
das
dec
inc
pop
shlb
sbb
xchg
or
and
cmp
mov
cmp
roll
pop
and
jg
cmp
inc
mov
xchg
aaa
test
out
cmc
in
test
jo
jb
stos
cmp
sti
test
jbe
lahf
inc
fs
pop
scas
frstor
pop
fistl
inc
push
mov
inc
sbb
mov
mov
push
test
jge
dec
adc
jmp
push
jle
jmp
pop
pop
repnz
hlt
mov
pushf
hlt
roll
jl
cmp
add
cmpsb
addb
test
jmp
lret
inc
jle
stos
sub
sbbl
inc
pop
mov
mov
sub
pusha
dec
cld
test
sbb
pop
mov
mov
fdivrl
or
repz
pop
dec
lcall
xor
jo
leave
div
adc
mov
je
movsl
or
or
jns
jo
cli
mov
les
out
mov
dec
and
mov
sub
sbb
dec
shrb
mov
in
enter
mov
in
cmp
mov
fmul
popl
push
push
push
scas
jnp
mov
add
test
dec
xor
outsb
int
wrpkru
push
xchg
out
mov
aam
jmp
mov
test
test
push
xor
cmp
inc
xrelease
push
mov
add
jns
dec
out
pusha
ficoms
add
ljmp
sub
imul
gs
pop
test
fbstp
adc
out
scas
adc
mov
or
inc
scas
xor
inc
dec
movsb
and
lods
mov
imul
roll
sub
mov
add
jne
in
inc
ss
std
add
cmp
inc
cwtl
stos
dec
xchg
mov
mov
das
and
inc
sti
fisttps
mov
pop
scas
ficomps
cmp
lods
push
sbb
add
adc
push
inc
lcall
out
sub
add
sub
push
push
or
lds
int3
cmp
call
inc
sub
push
xor
xor
mov
jge
adc
jbe
xchg
push
dec
pop
clc
lods
dec
xchg
fsub
movsb
nop
mov
lods
or
push
roll
dec
pop
sti
sarb
xchg
negl
sbb
mov
mov
sbb
xchg
leave
lock
or
jns
bnd
pop
inc
mov
mov
mov
push
and
bound
bound
lret
nop
scas
jnp
test
into
adc
mov
pop
xchg
movsb
imul
ret
out
scas
ds
fadds
inc
and
inc
jmp
iret
jae
jne
mov
sti
xor
jge
mov
dec
add
sbb
fsubr
cmc
pushf
cld
mov
je
mov
in
imul
add
faddp
jp
les
pop
inc
test
cmp
scas
out
fld
out
jp
mov
xor
mov
aaa
sbb
adc
lret
loope
mov
lahf
in
ss
mov
sti
mov
loope
hlt
jbe
cmp
loop
aaa
push
dec
mov
cli
fwait
cld
xchg
cld
pushf
and
mov
pop
jae
mov
ret
movsb
sbb
ret
rcrl
xchg
pop
dec
testb
push
popa
loop
test
enter
jae
jb
cwtl
in
mov
sbb
out
sbb
loope
test
dec
test
xchg
sbb
push
cmc
or
scas
test
imul
addr16
sbb
xchg
ss
xor
mov
push
aad
andnps
mov
ljmp
xchg
sub
add
push
add
fwait
in
pop
xchg
std
sub
mov
or
es
int
add
sbb
lock
or
or
aas
mov
push
cmp
std
push
test
stc
mov
mov
mov
jo
push
sti
jl
aad
scas
outsl
jae
xchg
push
jne
and
add
cmp
cwtl
xchg
cltd
mov
je
jp
lret
xor
jb
jb
ja
nop
mov
bound
mov
lahf
insl
je
fsubr
sub
iret
and
lret
imul
aaa
jecxz
outsb
sbb
ror
mov
ret
aam
mov
lret
lret
mov
push
jae
mov
clc
out
mov
lods
xor
sub
cld
dec
sti
sub
jmp
and
xchg
fstps
sbb
mov
lahf
push
ss
cld
push
dec
pusha
adcb
adc
daa
pusha
xchg
test
xchg
add
mov
into
fldl
ja
pusha
mov
adc
lea
dec
dec
lcall
push
call
lret
jno
imul
pop
shrb
push
cmc
mull
jne
mov
ret
lods
inc
cld
xor
sbb
jo
pop
in
add
clc
test
adc
orb
cld
xchg
int
xor
xor
cmp
push
push
fs
cmp
pushf
and
mov
xchg
clc
adc
ret
xchg
daa
push
cwtl
xchg
jae
adc
push
scas
pop
in
xchg
icebp
pop
dec
dec
leave
les
mov
fmul
xchg
cli
xchg
pop
shll
lret
jb
outsb
inc
stc
xchg
bound
mov
cwtl
push
dec
lock
in
mov
adc
lods
arpl
pop
fisubs
adc
mov
stos
lret
fs
loopne
ret
xor
popa
xor
jnp
jg
inc
rolb
mov
movsb
jb
xchg
and
out
sbb
hlt
sub
mov
nop
xchg
iret
and
jb
jb
addr16
adc
out
jg
stos
test
sbb
xchg
stos
dec
scas
dec
push
sbb
adc
test
in
sti
data16
mov
loope
mov
lahf
icebp
or
inc
add
rcl
int3
sub
xchg
aas
loop
xor
mov
jo
loope
mov
sub
add
mov
dec
mov
mov
ficoms
push
aaa
adc
mov
enter
push
jae
xchg
push
mov
pushl
jns
repnz
bound
push
jae
pop
imul
or
sti
data16
push
fnstsw
andl
mov
stos
add
cmc
pop
push
repz
and
popf
inc
mov
insl
jecxz
incl
xlat
push
sub
loope
or
loop
out
xchg
push
dec
nop
mov
lahf
push
ret
push
je
pusha
pushf
push
andb
stos
dec
fwait
into
sbb
sbb
stc
scas
popa
cwtl
jne
mov
sub
imul
jecxz
cmp
pop
loope
sbb
lods
sbb
mov
sbb
sbb
mov
ret
push
pushf
lea
sahf
xor
mov
push
inc
mul
xchg
into
ret
pop
sub
lods
xchg
xor
push
add
mov
sub
jnp
outsl
adc
loopne
adc
jb
dec
clc
in
mov
and
pushf
jb
or
outsb
pop
ja
aas
inc
xchg
dec
sub
xchg
stos
push
add
mov
in
sub
cmp
pop
icebp
xor
lea
fcmovu
in
adc
adc
ret
and
and
je
test
mov
fwait
or
int3
push
jns
xor
sub
arpl
push
xchg
push
sbb
ja
and
loopne
adc
or
mov
fdivl
dec
clc
sub
fucomp
fdivs
mov
push
daa
dec
cltd
aam
add
stc
inc
fsubrp
ror
dec
inc
sbb
mov
mov
mov
pop
inc
add
or
sahf
pop
lret
nop
divl
or
pushf
sub
push
add
and
sbb
iret
xchg
fs
and
stos
clc
sub
mov
push
push
fistpl
insb
xor
mov
rol
stc
cwtl
jmp
sub
pop
dec
jl
push
jmp
sbb
dec
rcrl
push
rclb
dec
testl
cmp
mov
xor
sbb
dec
lock
xchg
insb
insl
add
mov
xchg
add
scas
pusha
jl
mov
sbbl
call
or
lods
out
push
insb
pop
imul
pop
loop
mov
aas
mov
jge
data16
sbb
aad
ljmp
and
push
imul
hlt
inc
in
inc
push
dec
and
jne
and
pop
aaa
xor
cmp
outsb
aam
jecxz
jge
lock
xchg
negb
ret
sti
adc
dec
mov
out
popf
cmp
mov
xchg
and
ss
insb
dec
stos
inc
std
les
and
daa
ja
mov
xlat
mov
jecxz
sahf
sahf
mov
add
in
popf
push
xor
pop
insb
sbb
push
jle
xor
or
outsb
lods
lahf
stos
lds
rcrl
push
addl
inc
mov
sub
sahf
mov
mov
pop
jl
in
leave
loope
adc
adc
mov
sahf
aaa
and
sbb
or
ljmp
inc
adc
stos
sbb
cmp
inc
adc
add
out
inc
sub
in
mov
in
mov
fs
cltd
xor
jecxz
or
and
ficomps
cmpsb
lret
mov
dec
or
in
dec
loopne
stos
jo
aas
mov
or
and
adc
idivb
or
xchg
mov
sbb
pusha
repz
fiadds
add
pop
pop
cmp
jp
bound
sub
das
cmp
hlt
insb
lahf
jge
mov
stc
cltd
mov
sub
test
aas
fisubrl
sub
mov
pop
or
in
daa
sbb
xchg
stos
and
pop
mov
les
cmp
add
dec
mov
mov
cmp
dec
pushf
and
call
mov
jge
sbb
fwait
aaa
inc
mov
dec
inc
and
iret
or
jmp
add
inc
inc
int
inc
xor
neg
test
insl
sarb
sub
xchg
jne
xchg
clc
cltd
lahf
and
jle
inc
mov
xchg
xchg
lret
andb
mov
cmp
ljmp
inc
out
std
mov
in
fldenv
mov
dec
out
lcall
bound
cltd
add
lods
in
out
sub
hlt
sbb
test
sbb
decb
mov
jb
fimuls
in
push
adc
fistl
xchg
xchg
adc
mov
add
cmc
xchg
movsl
bts
mov
jnp
mov
sub
ret
pusha
jle
mov
pop
cld
aad
out
lret
mov
enter
pop
cmp
test
add
xchg
push
push
divl
adc
icebp
push
pop
mov
and
and
insb
leave
sub
mov
xchg
stc
test
or
dec
pop
xchg
nop
xor
xor
dec
jns
jle
inc
loope
pushf
xchg
stos
jne
xor
or
add
xchg
pushf
cmp
enter
sbb
out
movsl
movsb
clc
push
add
xor
jo
mov
push
jmp
mov
and
pop
cmp
jg
and
jbe
add
mov
pop
inc
aas
and
mov
xchg
in
outsl
xchg
sbb
add
jbe
and
pop
push
xchg
mov
cmp
inc
icebp
movsl
push
and
and
out
add
mov
stos
filds
pusha
popa
xor
cmpsb
mov
je
rorb
clc
cmpsl
and
jle
std
push
dec
jo
mov
out
test
pop
mov
pop
and
dec
lret
mov
loop
cmp
push
into
pop
push
xchg
mov
aas
pop
testb
and
cmp
jbe
repz
and
in
or
in
push
mov
cmp
div
ja
bound
adcb
outsl
pop
rclb
fidivl
ret
imul
insl
add
stos
push
fsubl
xchg
stos
sub
jl
mov
sub
mov
xor
add
mov
and
data16
lahf
jns
sti
std
xchg
adcb
cld
cmp
insb
ret
out
das
fisttps
pop
stc
xchg
out
xlat
push
call
dec
jns
xchg
jno
dec
clc
lds
jle
push
dec
rolb
cmp
inc
outsb
and
sbb
mov
cmp
pop
pushf
and
cli
mov
or
or
sub
loopne
dec
mov
movsb
or
jle
push
add
push
sarl
movsb
fs
sub
mov
cmp
dec
imul
add
movsb
outsb
lahf
js
dec
xchg
lea
fucompp
je
dec
fcoml
push
out
cs
out
imul
pop
xchg
push
mov
pop
pop
loopne
xchg
call
stos
xor
repnz
pop
push
xchg
mov
imul
cmc
loop
data16
dec
scas
cwtl
dec
cmp
cmp
mov
lods
mov
push
hlt
xchg
sub
jp
pushf
mov
push
xor
bound
repz
xchg
int
add
jbe
movnti
and
fcmovnu
and
add
aaa
pop
mov
pop
jne
popl
ds
jecxz
and
enter
scas
or
ja
mov
jl
outsb
mov
test
pop
out
mov
jl
and
and
mov
dec
push
lods
ss
dec
lret
lahf
jns
dec
sub
cmpsb
mov
out
lea
pop
aas
xor
sti
sub
pop
aam
outsl
es
ds
loopne
xlat
push
lds
and
mov
dec
sbb
sub
das
xlat
leave
xchg
aam
mov
mov
inc
jle
lcall
xor
sbb
outsb
loop
sub
sub
sub
pop
mov
repnz
jmp
mov
xlat
lds
fabs
jg
jbe
loop
testb
xchg
imul
divb
das
push
xlat
imul
sub
jge
push
mov
pop
push
add
fistpl
pop
mov
lock
loopne
scas
aad
xchg
jbe
push
and
std
pusha
sbb
xor
adc
std
mov
xchg
sub
aad
cmpsl
iret
lock
jl
jl
stc
add
inc
or
repnz
cmc
mov
mov
push
jno
inc
sub
xor
mov
aad
subb
js
repz
ficomps
fsts
pop
jnp
dec
mov
adc
je
cld
push
aad
dec
scas
sub
dec
inc
pusha
inc
int3
jmp
cli
pop
mov
aas
mov
mov
fildll
xchg
mov
or
adc
lds
or
cmpsl
mov
xchg
je
movsb
mov
xchg
sbb
inc
dec
dec
or
pop
cmp
pop
add
popf
xchg
outsl
add
aaa
movsb
insl
test
mov
mov
je
loop
ljmp
push
mov
fists
outsl
lock
adc
sbb
stos
incb
insb
dec
pop
nop
mov
arpl
mov
dec
popf
sub
aam
or
xor
inc
cli
ja
insb
in
jecxz
mov
and
adc
mov
jg
gs
repz
and
push
ficoms
mov
repz
pop
loop
mov
pop
loop
cs
pop
outsb
push
dec
push
pop
lcall
movsb
pop
or
xlat
push
mov
pop
lahf
add
sub
call
mov
movsb
das
jecxz
xlat
imul
out
sub
cli
pop
mov
mov
pop
dec
dec
enter
sbb
dec
adc
popa
aaa
in
ljmp
rclb
jg
insb
bound
sub
add
gs
cwtl
push
dec
mov
mov
out
lock
jns
and
rclb
mov
addr16
call
push
sub
jb
flds
inc
aad
movsl
xchg
sbb
push
mov
jno
push
mov
iret
out
pop
addb
cmp
xchg
aaa
adc
jno
dec
lock
xchg
inc
sbb
adc
xor
stc
lock
xor
adc
mov
cmpsl
pop
xor
dec
lods
lahf
in
out
es
pop
mov
cmp
mov
jns
in
repnz
push
add
sub
pop
cli
das
test
push
stc
int
pop
dec
test
es
mov
int
gs
andl
and
not
xlat
pop
mov
iret
xor
fnstsw
repnz
fisubs
push
or
dec
fs
dec
ljmp
cmp
push
repz
add
push
jmp
mov
lret
jno
mov
imul
and
xchg
adc
cmp
xchg
jecxz
xchg
popf
cmp
adc
dec
xchg
jns
outsl
xor
fsubrl
lds
inc
lods
popf
loopne
sub
scas
sahf
mov
popf
push
testl
dec
inc
push
sbb
test
stos
loop
mov
addr16
cwtl
lock
inc
lea
ret
movsl
mov
fs
ljmp
in
push
orl
fcoml
and
mov
pop
add
gs
cmp
das
cmp
xor
sbb
mov
shll
jbe
push
push
mov
clc
loop
negl
or
lret
sbb
imul
shrb
mov
addr16
nop
or
jp
movsb
sub
jle
shll
push
scas
push
mov
gs
mov
inc
pop
fs
popa
sarb
scas
add
repnz
dec
into
pop
pop
dec
mov
dec
andb
dec
mov
negl
imul
je
jl
and
jmp
sbb
sbb
sub
cmpsb
rcll
in
push
pushf
ret
sbb
sbb
lds
mov
sarl
imul
fs
inc
nop
cmp
dec
lret
or
testb
pop
movups
mov
fwait
xor
jae
scas
mov
movsl
orl
hlt
mov
arpl
loopne
call
shlb
cmp
outsb
fimull
in
out
ffree
mov
in
xchg
push
mov
or
sbb
pop
and
cmp
repz
dec
add
das
xchg
xor
sub
loopne
sti
daa
lods
push
mov
jno
lods
lea
mov
sbb
incl
jae
push
ucomiss
fistpl
cmp
jmp
ret
nop
jmp
jecxz
das
fidivrs
fimull
adc
xchg
mov
jl
sbb
cmc
fimull
imul
xchg
aam
lock
push
shll
loop
rolb
jp
jno
cmp
mov
sbb
stos
add
pop
adc
push
addr16
jo
and
sbb
in
adc
fadd
lock
cli
pop
lret
fstps
addr16
fcoms
sbb
pop
int
in
adc
mov
pop
adc
sub
jb
mov
cmp
movsl
lds
pop
fcoms
inc
sub
pop
jns
dec
fcmovne
pushf
std
jae
cmp
sub
push
adc
jecxz
add
int3
jle
shr
outsb
insl
arpl
xor
mov
dec
push
out
add
jge
pop
test
insb
inc
cmp
pop
imul
mov
mov
mov
and
push
lret
daa
mov
sbb
ds
push
pop
mov
sub
and
mov
xchg
sahf
add
inc
xchg
setge
or
push
xor
cmp
lods
cld
cmp
jo
mov
adc
cli
push
aam
jae
xor
push
mov
sarl
mov
cmc
fs
inc
hlt
andnps
sbb
lods
es
cmpsl
andl
mov
sub
data16
jmp
sarl
dec
add
pusha
push
stos
sub
jae
not
movsl
inc
jno
orb
ljmp
cwtl
push
scas
cmpsb
xor
jl
aam
pushf
inc
hlt
filds
aad
dec
ficoms
into
dec
rolb
mov
jmp
rclb
jg
and
cmp
and
dec
inc
xchg
xor
xchg
mov
aas
lods
push
das
xchg
mov
jo
fmul
jecxz
das
lock
int
sahf
neg
iret
lods
xchg
std
xor
fwait
out
jmp
and
jae
outsl
dec
mov
fldl
ja
jae
fstpl
sbb
pop
out
xor
and
daa
adc
mov
add
imul
test
jle
insb
xchg
pop
jg
mov
into
dec
frstor
pop
mov
mov
nop
movsl
mov
mov
ret
and
cmp
pushf
das
out
into
pop
mov
xchg
dec
jg
popf
push
hlt
push
jns
mov
inc
push
adc
adc
stos
push
fs
cltd
pop
push
inc
add
sub
out
popf
loopne
pop
dec
adc
aad
mov
mov
jle
cmp
mov
mov
adc
or
shll
push
cmp
or
push
push
bound
pop
add
insl
outsb
lea
or
scas
mov
pop
jmp
jmp
mov
icebp
xorl
adc
dec
int3
out
int3
add
dec
pop
shrb
cwtl
jno
mov
sbb
pop
mov
in
leave
icebp
mov
and
lahf
pop
fs
cltd
fsubrs
mov
notl
inc
xor
xchg
mov
adcl
xchg
lea
xchg
xor
push
insb
out
lods
mov
sbb
es
sub
add
add
mov
xor
movsb
adc
mov
or
movsl
js
out
clc
cs
pop
sbb
sbb
jmp
lods
pusha
dec
jmp
pushf
sub
fwait
lock
nop
mov
pop
sub
ljmp
sub
sub
xchg
push
push
pusha
mov
push
sbb
data16
and
mov
arpl
pushf
in
loop
jge
fimull
fistpl
cmp
sub
and
ret
push
sbb
movsl
frstor
adc
arpl
aam
mov
aam
inc
insl
or
les
xchg
sbb
push
test
sbb
sbb
pop
xor
pop
out
pushf
aad
mov
mov
sbb
xchg
xchg
dec
dec
pop
pop
shlb
cld
inc
inc
into
lock
push
mov
mov
jl
adc
dec
daa
sub
dec
popa
xchg
fsubl
add
mov
cltd
addr16
cli
sub
adc
dec
or
mov
testl
pop
cmp
cmpl
in
outsl
sbb
ret
adc
test
mov
pop
pop
stos
int
rcrl
addr16
jb
mov
or
pop
push
mov
dec
ja
pusha
jbe
fiadds
push
cld
jge
scas
ljmp
je
push
push
xor
es
or
lods
fsubs
push
out
jb
lcall
int
mov
aad
dec
fildll
into
push
sub
pop
cmpsl
add
push
inc
mov
and
mov
push
cltd
or
leave
xchg
pusha
testb
mov
and
mov
add
mov
inc
and
or
sub
sub
jb
mov
lahf
jle
fbstp
les
pop
inc
pop
nop
int3
mov
xlat
add
leave
stos
jb
fisttps
mov
rolb
pop
in
pushf
cmp
scas
test
adc
pop
mov
outsb
or
popa
xor
adc
dec
sub
sbb
mov
push
mov
inc
imull
inc
inc
lds
aas
lret
int
ljmp
dec
pop
jns
push
repnz
pop
cmp
sahf
mov
hlt
inc
adc
mov
adc
sar
fistl
sub
push
xor
push
imul
movsb
pop
rorl
and
data16
scas
clc
ja
dec
xlat
pop
mov
push
and
stos
fisubrs
enter
pusha
ds
cmc
popf
icebp
push
mov
sub
adc
inc
push
sub
pop
sarl
lock
push
or
jbe
pop
cmp
ljmp
push
mov
cmpl
ds
insl
in
mov
cmp
add
push
andb
xchg
test
cmp
insl
jnp
idivb
movsl
std
cmp
loopne
or
sbb
ja
xor
adc
mov
roll
add
popl
lahf
dec
adc
adc
jle
in
leave
cvtpi2ps
sti
pop
daa
fisubrs
mov
push
fwait
insl
pop
repz
int3
call
mov
popf
xchg
lcall
shl
mov
pop
xor
jl
mov
cmp
and
xchg
dec
mov
jp
lea
mov
mov
cmp
movsb
pop
push
dec
test
xchg
add
dec
imul
rorl
mov
fs
and
cmp
adc
shrl
mov
jno
jg
mov
sub
stos
cltd
sbb
or
loopne
xchg
mov
mov
pushf
sbb
jne
sbb
push
adc
sub
sahf
push
cmp
mov
cmpsl
pop
dec
xchg
push
stos
lret
rol
and
jns
hlt
cwtl
addl
outsl
xchg
xor
mov
xor
out
inc
or
test
enter
fcoml
jmp
adc
xchg
test
cwtl
pop
ficomps
fisttps
in
push
sahf
xor
pop
sub
or
loopne
jmp
idivl
xor
rclb
jne
imul
js
nop
inc
adc
xor
mov
push
cld
loope
adc
adc
sub
mov
icebp
bound
shl
test
or
ja
mov
add
lret
lret
adc
iret
mov
scas
lods
mov
add
jle
int
add
call
push
fdivrp
mov
adc
outsb
iret
jbe
lds
mov
mov
fists
adc
add
push
push
dec
fcmovb
pop
xor
pop
ret
loopne
sub
and
leave
repnz
fistpl
cmp
jle
lods
test
and
out
or
pop
xchg
popf
inc
xchg
add
push
push
pop
icebp
add
push
shll
shll
stos
sub
shrl
lds
ror
mov
dec
addl
jno
ja
stos
add
sbb
mov
rorl
pop
mov
loop
scas
int3
inc
cmp
inc
and
sub
or
mov
mov
rcrb
jns
sti
inc
xchg
xchg
loope
xor
xor
mov
mov
insb
mov
cltd
dec
mov
test
lret
test
jl
push
jnp
dec
jns
and
dec
fidivrl
pop
push
icebp
in
nop
push
pop
pushf
jne
add
xor
pusha
inc
sbb
jnp
lret
clc
xchg
xchg
pop
mov
das
out
bound
repz
sti
or
and
mov
pop
jmp
pop
pop
push
gs
mov
aas
mov
cmp
lock
mov
push
aas
mov
pop
fimuls
aad
cmp
mov
aam
jge
mov
mov
mov
cmpl
ja
je
and
lahf
loop
cmc
mov
or
flds
lahf
mov
push
dec
mov
push
bound
add
xorl
sub
dec
aad
insb
mov
pop
jno
sub
jmp
push
fimull
adc
or
aad
cs
xlat
test
xchg
dec
mov
stc
dec
dec
jle
push
inc
and
xchg
movsb
addr16
iret
jno
aad
dec
cmpsl
nop
lods
sbbb
icebp
out
mov
jae
sbb
enter
sub
cmp
or
popa
dec
into
nop
dec
pop
std
adc
dec
stos
xorps
imul
add
add
xchg
adc
sarl
sahf
outsb
xchg
cmp
lret
adc
pop
das
scas
stc
aam
rorl
jo
stos
push
mov
adc
cmp
pop
daa
movsb
pop
xor
xchg
mov
dec
push
cs
sbb
repz
xor
dec
loop
ja
sbb
ljmp
pushf
mov
sahf
push
popf
out
pop
add
popa
std
fistpl
push
xor
lock
dec
sub
es
mov
mov
in
push
cmp
pop
in
std
testl
jge
popa
inc
arpl
shrd
add
lcall
cmp
pop
repz
or
cltd
mov
subb
std
fisubl
mov
push
inc
mov
ljmp
ja
inc
mov
orb
sbb
inc
dec
xchg
dec
leave
int3
call
stos
fdivs
sub
inc
aam
cld
lods
pop
mov
loopne
push
outsb
stc
sbb
adc
xor
xchg
lcall
add
jae,pt
jbe
iret
xchg
clc
bound
repz
popa
add
mov
push
aam
hlt
and
push
mov
shrl
outsb
imul
pop
jnp
sbb
fdivrs
scas
pop
add
pop
dec
or
jge
pushf
pushf
xchg
rcll
or
dec
lock
mov
push
cli
in
rcrb
add
cmpsl
sbb
add
and
dec
xor
leave
sub
rcrb
push
in
mov
pusha
sbb
fstpt
and
or
cld
fdivr
sar
mov
lods
lea
imul
xor
lret
sub
sub
outsb
stos
or
popf
jne
push
es
scas
lcall
mov
shlb
mov
mov
add
negb
lret
fnstsw
jmp
cmp
incb
adc
lods
push
aas
iret
addr16
into
aaa
ds
fucom
nop
scas
pop
push
shll
movsl
push
push
xchg
inc
insl
movsl
shll
inc
cld
add
and
lods
or
bound
jge
xor
js
sub
mov
in
dec
xor
jmp
scas
sub
rorl
icebp
xor
adc
mov
fwait
and
mov
repnz
mov
push
and
mov
mov
mov
xchg
push
mov
inc
fcomps
and
in
aad
es
stos
cmp
test
je
push
fisttps
sub
cs
scas
mov
scas
divl
mov
outsl
pop
aaa
adcb
or
or
cmp
add
in
push
pop
mov
xor
mov
dec
pushf
xor
jbe
lahf
jae
dec
scas
mov
sbb
int
sbb
jle
loop
gs
outsl
sbb
sbb
adc
dec
out
cmp
add
inc
push
loopne
add
pop
popa
sub
insb
push
mov
or
shr
push
xor
jecxz
lds
out
mov
push
popa
inc
inc
xchg
push
lock
aaa
push
dec
cmp
leave
xchg
mov
sarl
fistpl
xor
hlt
xor
movsl
or
bound
bound
pop
pop
dec
notl
cmp
xchg
cltd
jmp
dec
adc
cld
cmp
xor
int3
lret
xchg
or
loop
sub
arpl
scas
fsub
in
fists
and
and
sbb
insl
and
aaa
ret
add
icebp
das
push
mov
jnp
int
outsb
push
and
aas
icebp
clc
daa
push
sbb
or
xlat
and
xchg
shrl
jecxz
test
push
sub
js
fisubl
jo
or
sub
and
daa
lahf
fimull
inc
negb
adc
jmp
in
and
add
xchg
push
mov
xchg
cmpb
xchg
sub
xor
mov
test
xchg
icebp
jecxz
imul
and
cmp
adc
mov
ret
mov
es
jns
hlt
inc
imul
push
shl
adc
mov
sarl
ret
jmp
insb
fnsave
mov
sbb
insl
insl
mov
jb
push
cli
mulb
xor
mov
and
insb
jne
out
imul
ss
cmc
in
mov
jb
test
xchg
into
mov
push
or
mov
mov
loope
jne
mov
lret
mov
pop
rolb
int
inc
enter
shrb
xor
dec
outsb
les
addl
inc
push
fildl
fistpl
sbb
or
or
mov
ss
loopne
add
add
cltd
pop
lods
pop
add
sarl
outsl
push
nop
test
cmpsl
rcll
sbbl
das
stos
jns
xchg
iret
adc
adc
sub
pop
imul
mov
imul
popf
xchg
ds
jl
fstpt
mov
fnstcw
into
insb
clc
dec
jge
add
mov
cmp
jecxz
imul
mov
clc
inc
pop
mov
data16
cmp
fisubl
sub
scas
mov
dec
lock
push
or
xchg
cmc
lret
inc
and
sbb
call
repz
jl
pusha
push
dec
rorb
incl
adc
ret
mov
scas
sbb
outsb
xchg
repnz
out
inc
dec
jne
lahf
in
int
adcb
aam
cltd
push
xor
ja
out
jmp
mov
in
push
push
insl
add
mov
shll
into
dec
xchg
test
push
pop
imul
aad
movsb
sub
xor
add
add
xorb
pop
push
lock
dec
fdivs
xchg
mov
sbb
sbb
xor
pushf
mov
pop
hlt
cmpsl
sti
mov
cli
lea
js
loopne
cmp
mov
mov
jl
mov
and
cmc
sbb
xor
faddl
and
dec
mov
cmp
in
arpl
mov
inc
mov
add
jg
idivl
cmpsb
js
pop
adc
or
mov
loop
movsb
mov
orb
cmp
sub
test
cltd
push
icebp
insl
aaa
xchg
push
test
sarb
jns
xor
scas
imulb
lock
in
or
cmp
xor
or
dec
mov
call
push
data16
mov
popa
rorb
lahf
fisttpll
mov
insl
push
sti
pop
arpl
push
mov
and
dec
mulb
or
push
xchg
push
add
and
inc
inc
push
in
test
cmpsl
lcall
mov
push
inc
cmp
lods
inc
adc
inc
xor
out
jae
push
movsl
popa
dec
mov
lret
fs
mov
cmp
scas
lret
test
push
insl
int3
or
or
mov
or
imul
mov
cld
push
ror
lea
pop
adc
rcrl
jns
sub
mov
addr16
sahf
insb
adcl
out
inc
frstor
sarl
cmp
pushf
outsb
or
dec
out
dec
test
aad
aas
xor
sar
scas
push
dec
into
mov
shll
mov
aaa
insl
or
cmp
push
in
adc
add
setns
sub
and
push
jb
fldt
mov
popl
push
ret
xchg
sub
cs
ret
push
sbb
cwtl
mul
pop
das
push
sbb
add
pusha
sbb
jg
dec
lock
sbb
icebp
xor
jecxz
fwait
jecxz
xchg
out
fnstsw
mov
adc
add
shlb
xchg
aad
push
dec
dec
sbb
mov
les
loope
sub
insb
inc
mov
in
cmp
mov
test
cmp
in
sub
xor
ja
or
mov
outsb
sbb
mov
sub
jns
mov
add
bound
mov
mov
jmp
cmp
ljmp
scas
insl
aas
cmpsl
sbb
jo
inc
jbe
sub
ljmp
lret
ficoml
fmuls
push
movsl
cwtl
inc
mov
xchg
xchg
test
sub
aad
jnp
loope
out
xchg
jp
icebp
cmp
bound
sbb
xchg
jp
outsb
enter
sarl
incb
sub
in
sub
push
sbb
inc
ficomps
cmp
cmpl
push
mov
sub
push
jns
mov
xchg
sub
int
mov
lcall
mov
xchg
ljmp
data16
dec
loopne
push
les
and
aas
add
push
aas
lret
sbb
inc
loopne
mov
push
mov
sbb
stc
add
mov
adc
xchg
sub
jge
pop
stc
nop
inc
aas
imul
xchg
jno
sub
push
enter
adc
add
or
jae
rolb
std
mov
lcall
out
sbb
push
inc
iret
cmpl
push
fcoml
mov
and
jne
aas
jge
mov
inc
call
jb
adc
add
cld
aad
lahf
imul
aaa
mov
lcall
sarl
jns
cmp
xchg
push
pop
loopne
push
sbb
sbbl
outsl
sub
sub
sbb
shl
shlb
not
add
movsb
mov
jne
fmulp
lahf
insb
test
subb
mov
out
xor
xchg
insb
inc
enter
jns
icebp
fstpt
sub
mov
shlb
jecxz
loope
or
cmp
cmpsl
aad
inc
sub
movsl
pop
or
stc
popa
mov
sub
ja
sbb
jns
xor
mov
pop
es
repnz
xchg
sbb
jne
mov
push
ss
mov
call
cmpsl
pop
sahf
pmaddwd
loope
or
mov
or
test
ss
ficoms
inc
inc
cmpsl
es
outsb
xor
or
cmp
bound
arpl
jp
loopne
push
insb
adc
sub
sub
sti
std
clc
fwait
pcmpeqd
enter
xchg
sub
sub
dec
mov
outsb
jb
inc
leave
aaa
xchg
dec
or
jmp
daa
or
leave
jmp
stos
add
xchg
sbb
fisttps
cmc
mov
sbb
clc
scas
imulb
xchg
repnz
sub
push
rorl
and
push
lods
shrl
lds
dec
xor
and
aas
cltd
cltd
notl
out
ja
adcl
pop
pop
sub
or
mov
in
lcall
imul
sub
push
js
ret
jg
inc
imul
xor
pop
mov
outsl
cmp
pop
push
inc
js
pop
and
movsl
push
and
into
inc
push
xor
push
imul
stos
cmp
ljmp
cmp
sti
loopne
rcr
jmp
or
lea
popf
xlat
or
loop
imul
aaa
xor
js
cli
jg
cmp
pop
das
inc
fs
inc
push
arpl
xor
ss
loop
outsb
cmp
xchg
cmp
and
or
ret
mov
fisttpl
aas
lret
or
push
mov
fdivl
inc
popa
and
and
mov
jl
pop
lret
xchg
cmpsb
nop
pop
pushl
mov
xchg
cmpsl
ss
fcoms
ret
cli
fwait
jbe
pop
adc
jl
mov
into
in
in
lods
subl
shll
xchg
dec
sbb
adc
and
inc
mov
movsb
insl
leave
jbe
inc
adc
adc
jp
push
push
jp
sbb
cmp
movsl
test
jle
or
movsl
sub
out
sbb
push
sbb
in
bound
jno
addr16
cmp
xor
mov
mov
cs
add
fadds
ja
mov
mov
les
mov
inc
fisttpl
jbe
push
cmp
or
into
mov
xor
push
out
bnd
and
mov
xor
cmp
xchg
int
lds
or
lods
imull
addr16
sahf
cmpsl
push
mov
shll
xchg
fidivl
cmpsb
inc
dec
leave
cli
movsb
add
mov
push
int
pop
sbb
inc
or
lods
pop
xor
je
aad
sti
mov
or
and
push
mov
xchg
inc
or
mov
fcmovbe
popf
jge
cli
sbb
mov
adc
loop
fs
xchg
or
cs
dec
roll
xor
push
xor
xchg
into
or
cmp
dec
insb
or
pop
test
cmp
pushf
sub
mov
jmp
and
xchg
cmp
or
add
outsb
xor
push
mov
xlat
mov
ds
cli
pop
and
scas
and
dec
mov
cmpsb
xor
add
das
fisubrs
mov
ds
test
mov
mov
fstl
jae
ds
add
dec
popa
pop
into
test
arpl
push
lcall
fnstcw
sbb
aas
adc
push
xchg
add
jne
xor
in
imul
pusha
gs
jnp
xor
shlb
inc
fs
mov
pop
sbb
cmpsb
pop
xchg
inc
sub
inc
mov
insb
stc
rorb
xor
xor
push
xchg
jle
jg
xchg
stos
push
lret
scas
in
roll
adc
sub
lods
aaa
jb
dec
loopne
out
dec
push
pop
jns
orb
scas
test
push
xor
sarl
mov
out
push
popa
nop
xor
std
movsb
cmp
push
inc
es
adc
xor
bound
sub
pusha
insl
clc
mov
bound
fdivr
in
popf
out
call
icebp
arpl
xchg
jne,pt
jns
sbb
addl
lahf
dec
mov
inc
imul
adc
int
sub
arpl
push
int3
xor
jne
pminsw
dec
insl
or
push
shlb
pop
into
aas
fisttpl
push
daa
sub
dec
arpl
adc
sub
or
jae
push
mov
mov
cs
jno
loope
repz
sbb
test
fnstsw
cmp
mov
sub
add
test
mov
fimuls
mov
ljmp
xor
xchg
mov
inc
add
mov
ss
std
mov
adc
inc
mov
dec
cli
xchg
imul
xchg
aam
lock
push
call
ja
flds
dec
shll
adc
out
pop
adc
mov
lcall
push
add
stos
adc
test
push
sbb
in
jecxz
mov
mov
add
xchg
mov
fisubl
or
insl
lret
adc
and
sub
bound
xor
movsb
imul
sub
mov
add
out
cmpsl
cmp
lcall
cmp
pushf
hlt
insl
orb
add
movsb
sub
pushf
dec
adc
and
setno
inc
popf
xor
in
imul
aas
or
pop
fs
fsubl
ret
stos
incl
add
push
xchg
pushf
loope
pop
or
jb
ja
xchg
lods
add
sti
and
jl
iret
addr16
enter
push
push
fnstcw
sbb
cmp
adc
inc
sbb
sbb
and
subb
lods
jbe
arpl
lea
cmpsb
bound
adc
jbe
mov
add
leave
add
sbb
xor
cmp
sub
in
mov
outsl
fcmovbe
es
xchg
gs
lret
or
push
in
cmp
test
scas
mov
xor
inc
cmc
ss
ret
leave
clc
sbb
inc
shll
test
lock
and
mov
fbstp
sbb
bound
mov
out
scas
ds
rcr
popf
leave
insb
mov
mov
in
imul
cld
push
sub
jns
div
testl
mov
dec
or
rolb
lods
fdivl
pop
mov
fwait
pushfw
jne
push
mov
mov
mov
negb
shll
add
ja
nopl
push
aam
add
fdivl
jae
dec
lahf
add
sbb
subl
mov
mov
dec
xor
mov
push
dec
push
scas
stc
push
lods
xchg
xchg
xchg
mov
cmc
pop
cmpsb
and
xor
jb
pop
fstpt
lds
inc
sbb
sti
icebp
xchg
inc
inc
in
enter
shll
test
xor
subl
cmpsb
psubw
push
fsubrp
cld
stos
mov
shl
cmp
in
dec
mov
xchg
jae
push
mov
mov
mov
sbb
push
dec
test
ja
xor
je
cs
lret
in
jbe
sti
fdivr
mov
bound
in
sbb
mov
lods
adc
aaa
mov
out
sarb
cmp
cmp
adc
pop
inc
mov
mov
mov
inc
es
push
imul
mov
xor
ja
ljmp
int3
repz
jp
push
xchg
cmp
nop
xchg
mov
jp
pop
fidivl
cs
xor
jo
lcall
cmpsb
or
sahf
jmp
fwait
push
lea
sbb
or
or
push
sbb
dec
std
sub
mov
mov
and
int3
jle
push
or
imulb
pop
bound
clc
push
pop
dec
mov
push
repz
dec
push
jmp
xor
xchg
mov
dec
shll
or
pusha
adc
mov
or
mov
je
ret
sahf
jbe
fists
stc
lods
fbld
dec
mov
frstor
xchg
aam
adcl
add
js
and
push
xchg
xor
jmp
icebp
ljmp
iret
lea
mov
in
mov
mov
js
xor
jne
mov
ret
jge
jp
push
mov
mov
insl
outsb
dec
sbb
adc
and
arpl
out
cli
adc
scas
fwait
out
ja
push
pop
mov
xstore-rng
cmpsl
mov
clc
inc
push
xchg
mov
mov
add
adc
dec
xor
sub
fs
sbb
insb
ss
bound
stc
push
pop
sbb
mov
leave
es
jle
mov
enter
pop
inc
pop
enter
xor
jnp
pop
cwtl
int
stc
pop
stos
loop
mov
scas
push
popf
pop
xchg
shll
inc
imul
add
shrl
mov
lret
or
imul
rep
es
outsb
mov
and
int
outsb
aad
add
fs
inc
inc
imul
mov
mov
inc
adc
scas
repz
cld
fdivl
mov
xchg
in
bnd
or
mov
nop
adc
inc
adcl
xchg
push
mov
mov
pop
sbb
xchg
test
add
movsl
add
lock
push
imull
out
dec
scas
mov
mov
outsl
xor
adc
sub
push
mov
pushf
inc
rcll
mov
mov
mov
incl
push
in
sbb
inc
xchg
outsl
test
outsb
aaa
pop
adc
repz
cmp
jnp
lea
hlt
lret
dec
fistpll
or
mov
leave
mov
movsl
jl
sub
mov
ror
jmp
fstl
sbb
loopne
lret
sti
sbb
imul
and
hlt
fldcw
adc
sub
inc
sub
jge
cli
mov
jmp
iret
out
dec
std
jns
insb
add
testb
ds
fistps
loope
aas
xor
jnp
mov
pop
ds
aam
pushf
add
jo
rclb
scas
cmp
inc
or
xor
addr16
mov
xor
xchg
xchg
mov
adc
rcrl
popa
lret
and
data16
popa
mov
inc
or
push
xor
mov
jae
and
xor
das
adc
arpl
in
pop
fnstsw
mov
ret
and
xor
ret
mov
cmp
outsl
stos
repnz
pop
and
jl
in
iret
dec
decb
lcall
mov
mov
fidivrl
repnz
loopne
xor
aam
inc
fsub
mov
sti
cmp
dec
out
out
cmp
mov
add
fsubl
enter
lcall
jo
sub
mov
pop
mov
movsl
pop
add
jle
mov
dec
call
mov
sub
push
mov
dec
sub
ja
mov
hlt
stos
dec
inc
cltd
insb
repnz
ds
insb
lret
dec
mov
sub
adc
jge
push
dec
or
adc
add
sbb
adcb
fldcw
scas
pop
sbbb
inc
aaa
sub
mov
rolb
lahf
dec
js
push
jb
das
dec
jno
pop
cmp
adc
jecxz
and
or
ret
mov
add
push
sub
cmc
cmp
or
mov
scas
push
pop
jb
inc
inc
popf
sbb
leave
ss
stc
ss
lock
into
and
cmp
in
stos
pop
mov
in
mov
aas
xchg
push
xchg
adc
int3
mov
dec
push
iret
test
adc
jp
xchg
cmp
or
fcoml
aad
mov
lret
lds
adc
fsubrl
rol
int
rorb
ret
jg
sbb
xor
testb
cmp
mov
mov
addr16
pop
popa
jp
fdivp
cmpsb
mov
inc
dec
push
dec
negb
stos
or
je
sbb
aas
mov
mov
mov
outsb
mov
mov
aas
jnp
and
xchg
push
pop
mov
jecxz
ljmp
xor
jo
clc
movsb
sub
loop
leave
insl
popf
mov
rcr
ret
testb
dec
pop
sub
or
add
xchg
test
inc
cmp
sub
icebp
jne
mov
cmp
xchg
lock
cmpl
pop
pop
fwait
push
popa
pop
push
ss
xchg
popa
add
mov
rcrb
xchg
adc
sbb
inc
push
mov
xchg
fstpl
mov
adc
out
mov
or
insb
lods
lods
add
fadd
movsl
lret
xchg
shrb
xor
outsl
mov
inc
fwait
ds
mov
jle
and
out
outsb
cmc
push
data16
push
orb
addr16
pusha
mov
mov
sbb
adc
add
pop
sbb
mov
es
fldcw
dec
add
fisubs
inc
dec
std
and
mov
rorb
les
adc
fstpl
jg
cmp
andl
sbb
in
lea
and
je
cmpsl
mov
mov
mov
pusha
subb
push
push
mov
lcall
sub
add
push
scas
jecxz
sub
mov
test
imul
lret
pop
bound
jmp
ja
call
xor
mov
push
pop
adc
imul
ret
gs
fnstcw
xchg
pop
aam
mov
pop
mov
sbb
shlb
pop
jmp
cmpsl
dec
sub
jns
in
sub
rcll
sti
jno
test
mov
jno
pop
mov
jmp
mov
cmpsb
pop
push
cmpsl
or
inc
loopnew
inc
adc
mov
inc
movsl
sub
loope
cmp
lods
and
and
mov
pop
dec
vprotd
sub
xor
nop
sub
sbbb
sahf
test
cmpsl
and
xchg
push
xchg
rcll
test
jecxz
imul
mov
mov
sbb
fisubrl
fdivr
aas
js
inc
pop
inc
adcl
push
jmp
push
mov
mov
cld
and
jnp
test
jge
icebp
cmp
or
mov
jae
xor
dec
mov
jecxz
mov
and
or
push
xchg
rcrl
shlb
xchg
rclb
fistl
pop
lret
sbb
sub
mov
jae
inc
or
inc
test
xchg
xor
xchg
imul
mov
jge
or
jge
dec
adc
cmp
dec
stc
push
jmp
dec
push
insl
pop
jp
cmpb
push
or
iret
imul
scas
jecxz
mulb
gs
mov
pop
pop
movsb
cmp
mov
mov
aad
mov
pushf
cmp
xor
pushf
inc
adc
aad
add
repz
lahf
add
negb
adcb
rorl
cmpsb
cltd
cwtl
jnp
push
xchg
in
lret
lods
in
push
cmpsb
int
outsl
jo
jnp
ret
and
pop
mov
les
shl
iret
add
add
add
mov
xor
jl
stos
sti
aam
or
pop
pop
pop
adc
jb
cmp
xchg
adc
adc
lret
and
movb
add
clc
jl
sbbl
mov
daa
inc
or
out
lret
pop
cli
xor
leave
push
dec
push
rorl
fmull
fsts
inc
and
rorb
leave
call
jmp
fdivrp
cwtl
insb
pop
insb
les
bound
ds
loop
outsb
add
cli
xor
push
jecxz
enter
sbb
add
ja
xchg
mov
mov
mov
and
fdivrs
mov
dec
jl
arpl
nop
sub
pop
fbstp
rclb
sarl
mov
aas
out
inc
mov
lret
insl
mov
xor
into
sbb
or
and
sub
inc
fcmovnu
jg
pop
push
in
jo
addr16
mov
test
lret
xchg
dec
adc
or
mov
jno
inc
push
out
xor
jno
imul
sub
cmp
daa
or
lea
pop
sbb
add
mov
outsb
dec
mov
movsb
loope
stos
std
cmc
sub
mov
insl
sbb
pop
and
rcrl
stos
or
xchg
or
getsec
cmp
inc
sahf
iret
adc
out
pop
jnp
jmp
cmpb
dec
insl
movsl
fiadds
and
ds
mov
adc
xlat
xor
shll
sbb
std
stos
loop
inc
pop
out
mov
push
push
mov
lea
pop
fsub
rcll
int
cmp
or
cmp
iret
popaw
in
mov
push
jp
add
out
dec
cmp
popf
lds
push
movsl
push
mov
sarb
ljmp
or
test
js
out
xlat
leave
ds
xor
out
loope
shll
mov
es
push
dec
dec
fcomps
aam
ja
stc
push
int
std
mov
mov
mov
mov
rolb
sub
pop
pop
sbb
lcall
cmpsl
push
mov
rorl
loope
mov
xor
inc
test
std
imul
mov
idivl
xchg
add
lcall
lds
pop
sbb
popf
inc
cltd
xor
push
jne
dec
sarb
daa
loop
mov
jmp
cwtl
call
xchg
sbb
sub
shrl
xor
scas
pop
and
aam
sarl
sbb
lods
xchg
pop
stos
mov
stc
mov
pop
leave
fdivrl
loope
sub
inc
test
and
and
fsubrs
jo
mov
shrb
imul
jmp
test
aaa
scas
mov
push
lods
mov
jo
push
fbstp
pushf
loope
in
sub
loope
in
jg
cmp
subb
mov
xor
xlat
orl
das
jo
adc
pop
repz
xchg
cmp
pop
mov
in
pop
stc
mov
pop
pushf
sbb
popa
xor
push
mov
clc
pusha
outsb
aad
mov
inc
xor
xchg
push
push
sbb
fdivrl
mov
mov
gs
inc
lcall
jne
or
jecxz
fld
cmp
sbb
aaa
in
fs
push
add
cmc
dec
lods
cmp
arpl
dec
push
or
cs
and
pop
lds
loope
cmp
cmpsl
sbb
push
jmp
push
jge
scas
add
ror
sub
mov
xchg
adc
addb
fsts
lea
sub
dec
negl
out
push
cmpsb
mov
nop
pop
dec
loopne
and
jo
ljmp
adc
jnp
testl
cmp
or
cmp
or
mov
sbb
add
pop
scas
inc
orl
push
mov
cmp
es
repz
jbe
push
jmp
mov
iret
inc
mov
imulb
stos
sub
sbb
mov
xchg
add
lcall
jns
mov
push
inc
mov
jmp
movsb
jecxz
push
jno
and
pop
popf
jge
test
mov
dec
loope
fs
pop
fistps
mov
dec
inc
aas
xchg
push
xchg
xor
push
push
dec
icebp
ljmp
scas
lods
int3
push
in
xor
and
dec
insb
in
sub
sub
call
cli
hlt
cmp
mov
cld
xor
lods
fs
jnp
lea
shrb
jbe
cmp
add
pop
and
repnz
sbb
xor
jae
add
hlt
call
jne
jmp
int3
push
mov
in
rcr
pop
insl
fs
cmc
bound
lret
jbe
push
ss
mov
popf
cld
ja
mov
push
and
cmpsl
cwtl
mov
sub
cltd
adc
daa
repnz
sti
lods
ljmp
mov
jmp
fsubl
jmp
in
xchg
ja
mov
aas
xchg
fs
popa
or
fisttpll
repnz
pop
subb
aad
dec
insb
fwait
out
cwtl
out
in
push
outsl
jge
jns
xchg
sbb
mov
adc
test
pop
mov
or
push
repz
dec
outsb
or
push
out
pop
loop
cmp
ret
xchg
pop
xchg
or
psubsw
negl
cmp
or
jbe
rcrl
test
dec
jp
lods
inc
add
jge
sub
xchg
xlat
mov
leave
test
lea
aaa
bound
sub
fadd
mov
pop
sub
xor
mov
int3
jbe
adc
pop
ret
dec
loop
xchg
jp
cmp
lahf
fcmovu
pop
adc
mov
jg
sbb
clc
mov
fcom
jp
inc
pop
loopne
lret
int
mov
jmp
push
dec
dec
pop
std
push
outsb
xlat
mov
xchg
dec
pop
sub
xor
movsb
shll
push
bound
loopne
sub
mov
jmp
pop
inc
out
and
jg
sbb
mov
inc
daa
fistl
mov
aad
movsl
mov
and
popl
or
sti
add
negb
mulb
cmp
xor
or
adc
pop
pop
ret
push
aam
xchg
push
pop
nop
fimuls
mov
stos
ret
enter
xor
imul
stos
out
jb
js
jle
xor
adc
js
pushf
adc
ja
adc
hlt
rcrl
out
xor
and
mov
push
mov
outsb
xor
in
and
add
scas
xchg
out
add
test
cmp
jg
iret
rcrb
movsb
cmp
push
outsb
push
mov
cmpsb
dec
adc
fadds
mov
mov
add
aam
xchg
xor
stos
fistps
imul
jae
inc
jmp
pop
fwait
cmp
fisubrs
push
or
out
push
sti
std
adc
dec
lods
sub
mov
sub
xor
xchg
add
and
pusha
lahf
xchg
mov
push
repz
mov
test
and
mov
ja
adc
lock
jo
testb
cmp
jge
pop
out
dec
js
pop
stc
sub
les
fdivrl
adc
mov
jae
sbb
or
roll
mov
std
mov
imul
movsb
and
sub
cmp
inc
ret
js
xchg
pop
call
xchg
push
cmp
sub
daa
push
push
sub
pop
insb
nop
jne
stc
mov
cltd
outsl
mov
xlat
data16
sbb
add
cmp
clc
dec
rcrl
or
pop
icebp
mov
push
popa
ja
js
hlt
fcmovu
adc
cltd
cwtl
outsb
sub
add
movsb
sub
adc
cmp
lahf
mov
test
push
call
mov
inc
lcall
push
imulb
push
and
xchg
mov
mov
scas
sub
sti
mov
adc
stos
add
cmpsb
mov
rclb
popf
mov
mov
and
fnstenv
mov
lret
mov
or
mov
push
dec
xor
test
or
das
xlat
xor
and
and
cmc
mov
push
adc
add
sbb
outsb
jne
sbb
call
cli
pop
push
movb
or
sbb
adc
and
aad
inc
cmc
arpl
repnz
jnp
les
sahf
xor
fildll
inc
dec
mov
scas
insl
stc
jnp
rclb
mov
pop
sahf
repnz
or
push
loope
inc
cwtl
adc
movsb
mov
mov
ss
pop
nop
fldcw
or
inc
jo
inc
popa
jno
adc
lahf
lret
mov
sub
xor
insb
loope
data16
in
mov
xlat
lods
xlat
jmp
push
mov
nop
decl
insl
and
in
mov
int3
sarb
jbe
mov
mov
out
jecxz
dec
cwtl
sbb
das
mov
push
xchg
push
loop
jmp
out
push
movsl
xor
push
cli
mov
add
add
dec
push
cmp
cmp
ss
lock
mov
add
cmovae
sti
xor
xor
mov
lret
xchg
push
jp
pop
popf
sub
dec
mov
cwtl
ds
adc
sub
fwait
xchg
in
mov
xor
test
test
rcl
xchg
sbb
sbb
fidivs
cmpsl
jno
dec
mov
jae
sbb
push
cwtl
inc
jae
add
push
aas
out
arpl
push
adc
mov
in
js
lock
jbe
cmp
and
movsb
cmp
cli
mov
shll
imul
lret
cltd
cmp
pop
sub
ljmp
push
scas
insb
dec
push
dec
je
sub
jbe
fs
popf
and
je
add
and
xchg
jl
fdivl
mov
std
fcmovb
xor
dec
pop
insl
and
lods
loop
std
xlat
in
xor
xchg
ficoml
imul
cmc
sub
subb
add
adc
and
pop
movsl
out
mov
inc
outsl
outsl
std
nop
fidivs
popa
insl
insb
les
hlt
xchg
fsubl
int
jnp
and
adc
cmp
push
mov
out
dec
pop
shlb
andl
xlat
xchg
push
aam
sbb
aam
cmpsl
mov
dec
movsb
xlat
jns
adc
pushf
mov
gs
dec
inc
aam
jecxz
imul
lds
inc
jmp
fnstenv
pop
sahf
dec
sub
jecxz
pop
aaa
cmp
jo
inc
mov
and
out
jns
dec
and
and
dec
int3
mov
jle
cmp
ss
dec
stos
iret
shll
iret
push
xchg
push
jecxz
jl
xchg
push
lcall
xchg
enter
dec
lcall
push
jnp
js
mov
sbb
mov
icebp
addb
shrl
in
push
push
hlt
and
in
pop
pop
sbb
mov
shrb
nop
push
iret
push
cld
inc
aam
in
xchg
test
test
jae
icebp
push
pop
push
div
and
ficoml
push
les
test
and
leave
jecxz
lods
fnstsw
mov
push
add
imul
hlt
mov
sub
mov
sbb
jo
jae
sub
test
loop
pop
lods
mov
fwait
mov
pop
and
jg
or
push
in
repz
mov
xchg
cmp
xchg
push
sub
sbbl
aas
xchg
sub
pushf
and
sub
mov
xchg
or
xor
xor
mov
popf
pop
or
inc
jbe
movsl
sbb
mov
mov
add
call
mov
pop
pop
sbb
aas
divl
loopne
push
sar
orl
xchg
rorb
xchg
dec
xor
push
es
and
iret
in
cmp
cmpsl
aaa
call
cmp
jbe
out
insl
sbb
sbb
imul
pop
leave
push
ficoms
aam
jecxz
cmp
xchg
fiaddl
ror
cmp
sub
jmp
add
mov
out
xor
xchg
push
incl
xchg
jo
and
push
or
addb
cmp
sub
push
add
popa
jne
cmpsl
int
fwait
and
out
pop
stc
jns
cmp
pop
add
inc
and
shlb
out
add
addr16
mov
stos
dec
jne
ja
inc
das
mov
xor
cmp
xor
cmpsb
out
jcxz
test
sub
xchg
test
fcomi
stc
inc
xorl
or
mov
mov
push
ss
xor
es
or
daa
aaa
test
mov
out
rcl
and
cmp
inc
inc
fstpl
sbb
lock
in
cld
std
inc
daa
pop
inc
pop
cli
in
arpl
pop
mov
es
cltd
mov
fnstenv
mov
ss
jno
dec
and
test
xchg
or
mov
cmpsl
daa
xor
jle
add
lods
mov
mov
cmp
cli
dec
leave
jae
test
cltd
push
mov
inc
sbb
xchg
je
pop
sahf
popf
and
cmp
sbb
cmp
bound
popf
inc
test
mov
das
xlat
sub
dec
cld
push
shll
adc
pop
jne
pop
aaa
sub
pushf
mov
cmp
ffree
sub
call
ficomps
lock
ss
clc
mov
into
mov
mov
and
xor
ffreep
inc
push
in
inc
loop
cmp
cmp
stos
rorl
dec
xchg
scas
stos
or
movl
mov
adc
fmuls
lcall
out
or
ret
test
jmp
in
outsl
shrb
xchg
ss
inc
or
mov
sbb
cld
call
sub
pushf
iret
or
dec
andb
cmp
mov
cmp
clc
push
or
decb
data16
push
aaa
das
mov
ja
mov
imul
out
xorl
arpl
xchg
mov
js
aas
loopne
push
pushf
jle
sub
iret
mov
jno
xor
imul
add
les
sbb
and
cwtl
push
xor
xchg
test
ljmp
mov
in
fldcw
mov
jg
or
xchg
cmp
jecxz
pop
push
add
add
je
xor
jle
int3
das
xchg
and
les
sar
sbb
xchg
push
test
push
mov
xor
push
daa
adc
inc
ret
jae
loop
mov
push
int
sbb
ds
cmovnp
cmp
add
pop
push
inc
xor
sti
cmp
mov
xchg
sar
push
je
in
jmp
sbb
shrl
xchg
mov
int
mov
leave
lods
imul
or
das
jnp
lahf
sbb
scas
fcmovnbe
loope
repz
mov
aad
ljmp
xchg
lret
cmpsb
fcoms
inc
push
xchg
adcb
push
xor
inc
mov
mov
cmpsl
mov
aaa
cmpsb
in
outsl
and
adc
leave
rcr
loopne
push
add
iret
cmp
hlt
add
or
xorl
lock
insl
jg
jnp
mov
xchg
cs
in
stos
iret
sbb
in
cmp
or
icebp
rclb
int3
imul
mov
into
dec
add
add
lock
dec
in
nop
mov
ljmp
push
icebp
out
dec
fcmovu
ficoml
int3
mov
daa
mov
or
sub
repnz
mov
push
sub
add
xlat
add
mov
jge
mov
lds
cmp
in
les
push
int3
mov
sbb
scas
jns
mov
xor
aad
jno
bound
cmc
mov
xchg
mov
xor
daa
movsl
xchg
lret
repnz
into
mov
sub
cwtl
insl
outsl
es
sbb
je
push
call
and
cmp
ss
loopw
aam
pop
jecxz
enter
jns
ficoms
dec
sbb
in
pop
inc
loope
lods
cmpl
popa
push
mov
mov
test
scas
mov
pop
jmp
jo
add
decl
insb
enter
dec
popa
mov
pusha
inc
test
out
scas
mov
loope
and
cltd
inc
inc
aam
cwtl
popa
popf
xchg
pop
into
movsb
imul
mov
jmp
inc
xchg
popl
fmuls
cmpsb
inc
and
aam
popa
scas
mov
pushf
pop
xchg
mov
cwtl
xchg
rclb
cltd
ret
loopne
xlat
das
mov
pushf
leave
pop
mov
push
imul
pop
mov
inc
cmp
add
out
inc
mov
inc
das
sub
movsl
sub
sti
adc
and
push
mull
xor
pop
add
xor
shll
push
outsl
dec
mov
fstps
xor
lret
push
sbb
adc
jecxz
dec
cmp
add
fsubr
cmc
daa
xor
xchg
repz
cltd
fadds
dec
add
sub
jns
mov
loope
pop
fdivrs
xor
mov
inc
popa
mov
xor
mov
in
push
mov
rclb
mov
aad
nop
lcall
addb
mov
sbb
pop
lds
aam
sub
fucomi
pop
mov
sbb
insl
xchg
fdivrl
mov
shll
daa
faddl
add
cmp
pop
rorb
and
push
and
or
and
mov
xor
push
adc
aaa
in
mov
or
adc
sti
push
dec
or
movsl
jnp
fcompl
das
mov
xchg
cmc
xchg
mov
dec
push
js
outsl
iret
fldcw
fwait
pusha
fidivrl
mov
imul
push
roll
jle
rolb
pop
sub
shlb
push
popa
sbb
loopne
aas
cmp
popa
dec
mov
outsl
aad
push
test
test
movsl
add
mov
cld
or
dec
dec
mov
or
mov
dec
xchg
jecxz
inc
cmp
or
cmp
insb
pop
loopne
sbb
lock
xchg
mov
jnp
popf
popf
lods
lea
mov
mov
push
pop
vmread
aam
push
subb
fcmovnb
out
push
mov
sub
sti
adc
fisubrl
mov
notb
ljmp
int3
dec
lods
ficomps
mov
enter
dec
sub
out
mov
stc
call
fcmovne
inc
adc
cld
push
inc
mov
out
dec
xchg
aam
andl
insl
adc
fdivr
jo
ja
xchg
loopne
sub
lea
outsl
push
test
negl
jo
jg
xchg
mov
aad
fwait
adc
pushf
in
ficompl
sub
int
daa
adc
xchg
in
mov
rcl
and
inc
lret
call
sbb
aam
inc
mov
inc
sbb
test
es
outsb
xchg
add
add
inc
out
pop
lahf
add
notb
inc
push
jg
mov
inc
dec
and
ljmp
enter
add
or
into
pop
or
or
adc
sti
mov
fisubrl
dec
adcl
jo
repnz
loop
cmp
add
movsb
jl
test
mov
add
ja
add
inc
popa
data16
int3
adc
adc
jno
push
ret
outsb
lcall
iret
ss
fcmovb
dec
mov
or
push
pop
in
sub
rolb
add
and
jnp
dec
cmp
mov
jle
in
sub
scas
and
jecxz
xchg
pusha
xchg
sub
subl
sbb
out
jl
xchg
mov
aad
roll
stos
sarl
mov
cmpsb
ret
mov
xchg
inc
jg
jne
fbstp
jae
jns
add
push
push
or
sub
pop
mov
xchg
lods
aad
dec
flds
sbb
jnp
sbb
imul
push
daa
sti
and
add
cmpsb
add
push
mov
lea
jle
inc
fildll
or
jle
es
fistpll
in
jns
pop
rolb
movsl
bound
jle
stos
jge
das
outsl
sub
repz
lea
mov
and
cmpsl
in
pop
jnp
mov
sbb
cmc
xor
aaa
sub
cmpl
inc
jle
repnz
bound
aam
pusha
sub
hlt
dec
cmp
icebp
movsb
movsl
inc
pop
or
jg
inc
mov
bound
xor
arpl
lret
inc
push
test
mov
adc
lods
xchg
mov
movsb
mov
andb
sbb
nop
push
insb
cmpsb
pop
rclb
pushf
out
push
cmp
pop
push
les
sahf
dec
leave
jecxz
fs
movsb
es
sub
jnp
rcrb
mov
out
xor
or
add
adc
or
jmp
mov
test
xchg
jnp
adc
inc
xor
repz
iret
inc
push
push
sub
jg
jle
inc
repz
dec
mov
pop
sbbl
imul
faddl
fcmovnu
jmp
dec
div
gs
pop
stos
rolb
pop
adc
jecxz
cmp
pop
ja
inc
lods
out
jl
lds
sbb
cli
orb
mov
fisttpll
or
movsl
mov
mov
add
lods
or
xchg
repnz
insb
in
inc
mov
stos
jle
xor
daa
cmc
mov
cmp
in
aad
dec
xor
add
in
cmp
jmp
mov
scas
lock
mov
and
ficoms
push
in
ja
xchg
cmp
cmpsb
mov
clc
scas
add
mov
xchg
inc
out
ret
sahf
rdtsc
sbb
mov
addl
sub
insb
xchg
pop
cmp
mov
sbb
pop
movsl
jle
mov
decb
lods
jecxz
lcall
movsb
xor
xor
ljmp
mov
lods
testl
test
adc
and
iret
in
jnp
loope
sbb
ljmp
pop
loope
jl
scas
cmp
dec
test
in
cmp
add
xor
fs
rorl
addb
test
xchg
in
push
push
shlb
pop
rorb
sub
mov
in
sbb
cmpsb
repz
xor
sbb
mov
fisubl
add
les
sbb
sub
mov
filds
sbbl
pop
iret
sahf
dec
push
ret
popa
je
push
jg
and
adc
aad
popa
xor
jmp
push
les
sub
jge
or
cmp
adc
mov
hlt
nop
jecxz
jns
imul
imul
fadd
dec
ss
or
repz
inc
flds
sub
mov
pop
mov
ss
dec
push
dec
mov
sub
sub
adc
push
inc
push
cltd
iret
xchg
and
inc
sbbb
mov
mov
fiaddl
gs
loopw
imul
aad
mov
sbb
in
fildll
xor
outsb
push
inc
sbb
call
xchg
repz
or
xchg
jne
jl
jle
fists
cli
xchg
arpl
je
faddl
pop
loope
mov
cli
pop
push
lahf
test
test
dec
xchg
inc
test
inc
outsl
adc
push
pop
sub
sub
cli
pop
sub
jl
je
cli
or
dec
push
xor
lret
popf
ja
sbb
pop
mov
fsubs
mov
mov
inc
lods
inc
jecxz
jle
sbb
and
mov
xchg
js
stos
jb
pushf
addb
fildll
sub
mov
cwtl
int
filds
sbb
fisubl
imul
inc
stos
test
add
push
mov
test
add
xor
je
jmp
and
or
loope
sti
js
mov
mov
jns
mov
pop
dec
andb
in
pop
addr16
xchg
ret
mov
adc
out
ds
mov
add
std
adc
out
rclb
pop
int3
adc
pop
mov
fwait
test
xchg
sub
inc
pop
das
and
inc
mov
sub
fnstcw
dec
xor
test
testb
scas
adc
sbb
mov
shl
icebp
je
xor
mov
inc
repnz
hlt
mov
push
fdivl
mov
inc
fstl
out
int3
pop
cmp
mov
stos
inc
cmp
sbb
xor
mov
loope
push
push
pop
imul
push
mov
pop
mov
arpl
ds
sbb
test
mull
cmpsb
pop
scas
xchg
mov
test
xor
mov
loope
push
mov
test
gs
fnstcw
jmp
enter
mov
lods
sub
push
jp
mov
or
add
mov
mov
les
loop
adc
fisttps
lock
push
sbb
cmp
jmp
push
in
jle
cmpsb
ss
scas
cmp
imul
lds
enter
sbb
jmp
std
es
push
lods
scas
adc
es
pop
incl
ds
xlat
loope
xchg
andl
jmp
mov
fisubs
mov
lea
enter
add
outsb
outsl
sub
sub
sbb
jo
sbb
dec
inc
ljmp
dec
mov
data16
or
pop
adc
sub
pop
mov
out
inc
push
ret
aam
and
mov
mov
fiaddl
fstl
cs
pop
push
pusha
icebp
sbb
push
out
test
insl
sub
pop
xchg
std
xchg
sbb
je
or
pop
rol
sahf
mov
add
push
xor
loope
lods
into
or
cwtl
mov
mov
clc
dec
lods
loop
decb
je
jmp
in
push
mov
fidivs
lret
pusha
fldcw
subl
int
test
call
fistpl
pop
fcoml
ds
adcb
pop
scas
pushf
cmp
dec
dec
adc
insb
push
fsubp
aas
sub
cmpsb
in
dec
lret
jns
into
out
aas
xchg
mov
xor
mov
inc
mov
mov
xor
pushf
pcmpeqw
imul
mov
rcl
loopne
idivl
mov
arpl
div
add
lods
insl
sub
das
fsubrl
xor
pop
faddl
sbb
je
dec
adc
sub
cld
inc
xor
fwait
and
pushf
mov
push
xchg
por
movsl
push
mov
test
pop
stos
or
fisubrs
dec
fisttpll
add
xlat
mov
sbb
inc
add
aaa
dec
mov
sub
repnz
test
lcall
mov
xchg
and
lds
xor
sbb
hlt
lahf
jmp
xchg
aam
jae
push
popa
xorb
bound
cmpsb
or
jg
jecxz
insb
pop
pushf
lahf
stc
and
dec
adc
outsl
xchg
pop
cwtl
js
scas
add
enter
mov
fsubs
ljmp
adc
inc
shll
jmp
lea
mov
mov
lods
adc
mov
inc
cmp
jne
sahf
repz
js
jg
mov
aaa
mov
xor
sahf
in
lods
jmp
out
jns
and
dec
xchg
adc
jnp
scas
and
jg
leave
jl
leave
pop
inc
pop
push
inc
xlat
sub
dec
inc
ljmp
imul
pop
shrl
mov
xorb
inc
xchg
jne
lret
je
cwtl
ds
or
mov
mov
xchg
mov
pop
jns
push
mov
out
mov
into
xor
fisttpl
mov
lahf
adc
jecxz
or
repz
shll
push
pushl
cmpsb
ds
jmp
push
loopne
fdivrl
add
in
or
cmpsl
sub
push
dec
mov
xchg
push
insb
mov
pop
mulb
inc
aam
push
add
or
cs
add
stos
push
mov
es
pushl
jno
mov
and
mov
iret
popf
mov
loopne
inc
pop
xchg
pop
dec
jmp
mov
lret
mov
pop
xchg
jbe
lahf
push
sub
add
or
mov
jge
dec
das
mov
iret
lea
inc
mov
out
sub
mov
cli
pop
push
fistpll
inc
aad
out
scas
sbb
lods
sub
and
push
adc
inc
int3
jns
and
aam
popa
cmp
cmp
inc
ljmp
push
mov
shll
rol
and
test
jle
sbb
imul
repz
ret
xor
dec
cli
cmpb
pop
out
xchg
fst
shll
icebp
rclb
rcl
sarb
xchg
inc
test
flds
lods
stos
xor
push
jle
push
outsb
mov
cmp
sbb
les
call
pop
clc
imul
fisubrs
call
xlat
frstor
sbb
arpl
arpl
fwait
test
jnp
je
js
adc
movsb
jns
int3
addr16
roll
ds
mov
fiadds
inc
cmp
fiaddl
xchg
ja
mov
inc
pop
fs
cmp
lods
bound
fidivl
pop
cmc
scas
xor
into
mov
push
jnp
xchg
pop
mov
gs
dec
push
and
insb
aaa
cs
test
sarl
push
jbe
cmp
arpl
and
xor
mov
or
push
push
test
lcall
insb
iret
movl
push
push
dec
ret
dec
nop
jnp
pop
sti
lods
mov
push
xchg
repnz
push
call
aaa
lcall
xchg
pushf
jne
push
sbb
or
scas
outsb
lock
inc
ljmp
push
pop
test
inc
cmp
hlt
loope
stos
and
sub
sbb
sti
inc
xor
jne
imul
in
push
xchg
mov
notb
imulb
fsubr
loope
xchg
int
or
push
xchg
xchg
enter
subb
mov
mov
das
adc
stos
out
xor
inc
fldt
sbb
icebp
xor
in
xor
or
xor
fisttps
fdivp
push
lods
cmpsl
push
xchg
insl
imul
dec
xchg
xchg
and
aas
pop
rcll
clc
fidivrl
out
adc
jge
test
arpl
mov
sahf
cmp
lock
sub
in
lods
dec
sarb
mov
loope
mov
adc
shlb
pop
aas
xchg
fsubrl
int
dec
xchg
sbb
popf
sbb
mov
leave
add
aaa
repz
rcrb
mov
sbb
push
insl
mov
sbb
xchg
mov
push
cmp
rcl
and
ret
cmpsl
dec
xorb
shrb
dec
mov
sbb
rorl
std
loope
adc
mov
ret
sbb
xchg
and
mov
sub
dec
aas
or
or
bound
inc
jns
hlt
cmpsb
inc
mov
dec
xor
mov
cli
shlb
xor
jge
cmpb
cmp
pop
mov
cmc
pop
adc
jne
mul
orb
xor
das
test
inc
mov
test
xlat
hlt
add
lea
iret
repnz
gs
lods
inc
fcmovnbe
movsl
adc
xor
xchg
mov
jb
adc
cmc
mov
jno
jns
cmp
fs
and
and
out
popf
inc
add
jle
lret
arpl
jns
adc
sbb
fisubrs
mov
les
xchg
sub
sbb
pushf
pop
test
orl
push
pop
cmp
aad
sbb
js
pop
cmpl
jbe
aam
or
rorl
mov
nop
hlt
out
bound
add
xor
and
cmpsl
add
orl
cmpsb
nop
jecxz
repz
test
test
mov
ffree
lret
out
stc
mov
sbb
outsb
pop
inc
notb
sti
inc
pop
movsl
icebp
jl
outsl
mov
mov
dec
lea
outsl
in
and
inc
push
scas
insb
data16
ljmp
sub
stos
neg
cmpsb
ja
inc
mov
and
into
ficoml
and
inc
jns
push
jle
push
imull
push
int
jnp
cld
repnz
sub
or
sbb
ljmp
and
in
out
add
mov
leave
or
and
das
mov
and
dec
shll
dec
inc
jnp
add
push
add
xchg
adc
cmp
fs
hlt
cmp
mov
aas
dec
jo
lcall
in
cmpsb
or
or
mov
jl
icebp
push
andl
mov
and
fstpl
inc
mov
jnp
mov
mov
psubusb
int
icebp
xor
push
popf
ret
jns
xor
outsb
test
jae
adc
mov
mov
aad
jae
fs
mov
mov
push
loope
mov
cwtl
jl
mov
mov
aad
lods
and
dec
lret
dec
push
cmp
xchg
jns
xchg
jne
mov
loop
adc
movsl
dec
movsb
icebp
ds
popa
xor
adc
aas
clc
mov
cli
inc
mov
lret
imul
xchg
sub
dec
pop
popf
sbb
dec
or
clc
and
lahf
int3
aas
jle
das
cltd
fdivr
adc
cmc
push
ret
insb
ficoms
jge
xchg
pop
xchg
popl
subb
call
rolb
lea
or
mov
ss
push
mov
xchg
or
paddsw
fs
or
loop
xchg
idiv
xor
aaa
bound
inc
rcrl
in
cmp
mov
loopne
fidivl
stos
cmp
cmp
push
mov
mov
aas
or
cli
mov
subb
jno
jns
sub
mov
xchg
inc
data16
in
ss
das
push
mov
aaa
fistpl
mov
lcall
jg
cli
fsubrl
icebp
test
or
hlt
cmp
les
push
inc
gs
sbb
jns
pop
xchg
xchg
pop
pop
leave
jnp
sbb
ss
test
repz
sub
pop
aad
mov
clc
jmp
stos
arpl
sub
push
out
xor
xor
pop
cltd
xor
fistps
jge
pop
loopne
gs
mov
and
push
out
pop
push
ror
fsubr
adc
cld
cltd
pop
mov
pop
dec
jbe
mov
jae
xor
insl
inc
test
sar
mov
imul
pop
sub
mov
fmull
dec
stc
ret
cmp
push
add
test
inc
mov
inc
cwtl
pop
push
arpl
test
ljmp
dec
xchg
or
lds
pusha
stc
add
mov
roll
xchg
cs
fisubrs
sub
sbb
nop
mov
test
call
push
stc
scas
ret
or
sub
push
scas
mov
fmull
sbb
fs
pop
sarl
mov
sbb
xchg
loopne
cmp
xor
xor
mov
out
mov
push
pop
gs
nop
add
push
rcrl
add
enter
outsl
push
inc
push
sbb
lea
sub
fimull
add
jmp
lcall
fwait
or
outsb
add
test
dec
xchg
outsb
adc
dec
jo
leave
lahf
fcoml
das
adc
pusha
sbb
mov
leave
int
rcr
mov
xchg
jae
cmp
push
xlat
lods
jmp
ds
inc
js
jp
enter
dec
insl
and
adcb
rcrb
enter
pop
push
inc
mov
sbb
xchg
jle
xchg
adc
cmp
je
hlt
out
sbb
push
xchg
add
xor
clc
add
sti
push
data16
shlb
push
inc
xor
scas
mov
xchg
adc
xchg
insl
data16
or
and
mov
jae
cld
call
int3
popa
fidivs
push
roll
cmp
sbb
jmp
loope
cwtl
or
pop
cmp
inc
push
scas
jns
in
mov
insl
fwait
mov
fwait
jmp
add
fdivrs
jbe
mov
cmp
jp
lea
stos
dec
xor
add
inc
xor
mov
jns
push
ficoms
mov
xlat
cwtl
clc
inc
popa
cmp
pop
mov
jp
hlt
mov
sub
lds
pop
or
in
js
test
xchg
mov
lret
je
fbstp
scas
pop
aas
icebp
jbe
mov
scas
or
pop
stos
movsl
icebp
mov
mov
lahf
mov
lock
roll
mov
sbb
and
lods
bnd
fcomps
push
or
lea
and
or
stos
pushf
lods
inc
int
test
cmpb
loopne
mov
adc
addl
xor
aam
xchg
push
dec
push
push
stos
loopne
jmp
add
or
js
popf
mov
xchg
jecxz
fsubrs
inc
scas
mov
loope
rorb
push
call
imul
cwtl
fld
jl
xor
push
sarb
call
lcall
addl
pusha
inc
mov
into
push
sub
cld
stos
int3
cmp
sbb
arpl
sbb
lock
inc
es
inc
mov
xor
icebp
ret
jno
push
and
fs
call
ret
dec
cwtl
xchg
movsl
xor
pushf
mov
xadd
imul
test
mov
sbb
das
dec
ficomps
mov
ss
loope
jne
std
or
lahf
pop
ret
xor
lcall
icebp
jge
sbb
out
sbb
jecxz
cltd
mov
data16
push
push
imul
or
or
jl
jl
pop
mov
add
mov
cmp
sub
cmp
jmp
sub
dec
outsl
lods
xchg
lods
loopne
cmpsl
imul
outsb
fsts
mov
test
pop
sub
sub
in
or
mov
pop
scas
mov
sahf
adc
jl
or
mov
lret
push
inc
sbb
in
bound
mov
mov
stc
mov
dec
push
xchg
hlt
repnz
jg
fwait
mov
sbb
dec
jg
lds
cli
es
dec
lret
inc
xchg
mov
cld
xchg
aas
sbb
cmp
push
outsl
or
fwait
jo
push
xlat
inc
aaa
lret
xchg
mov
push
repz
or
scas
out
shlb
lea
call
loop
cmpsl
repz
fcomi
subb
aam
subl
xchg
and
les
jbe
xchg
mov
inc
xchg
ret
rolb
xchg
and
xchg
sbb
push
xor
pop
out
sbb
xchg
jnp
loop
mov
mov
imul
push
xlat
inc
das
sahf
int3
sbb
orl
jns
pushl
xor
xor
cmpsl
in
popl
out
dec
fwait
jne
sub
pushf
mov
lcall
adc
scas
js
push
mov
mov
xor
adcl
mov
inc
dec
test
mov
mov
push
imul
cmp
push
lcall
test
das
into
mov
call
xchg
cmp
outsl
or
sti
inc
mov
lds
fwait
push
inc
or
push
loope
jmp
pop
mov
dec
sbb
push
rol
pop
jle
out
add
cli
mov
push
pop
sahf
xorl
sub
adc
xchg
mov
sub
mov
adc
dec
test
call
jns
xor
subl
in
pop
ret
int
adc
stos
imul
jb
push
push
subl
pop
pop
lods
in
xor
or
cli
cmp
enter
mov
push
mov
and
nop
call
repz
aam
aaa
lods
adc
nop
xor
and
addr16
repnz
hlt
mov
enter
ds
into
ficomps
pop
cmp
cmp
repz
jp
enter
imul
mov
add
add
jmp
inc
inc
divb
adc
mov
sbb
push
xchg
or
push
xchg
cld
xor
inc
jp
jl
or
xlat
mov
addb
inc
push
lods
imul
mov
jo
adc
pop
pushf
rep
mov
pushw
idivb
rolb
fwait
or
lret
xchg
lods
or
mov
mov
cltd
lahf
lea
jbe
xor
repnz
inc
flds
pop
call
sbb
rcll
xor
add
mov
movsb
mov
mov
mov
rorl
ret
xchg
sbb
andb
or
push
leave
dec
decl
sub
ljmp
jp
pop
std
cld
shlb
mov
rolb
repz
daa
fimull
jle
xchg
insb
push
lock
mov
push
and
ljmp
mov
mov
fnstsw
push
sti
popa
push
or
lret
dec
clc
inc
cltd
xchg
adc
fcompl
mov
int3
pushf
mov
cltd
xchg
data16
push
cmpsb
lret
cltd
lock
mov
outsb
divb
and
je
sbb
sarb
push
dec
cwtl
and
cmc
fnsave
shrb
mov
pop
lods
or
jle
cmp
inc
cwtl
dec
dec
dec
in
xchg
out
add
jmp
sbb
insl
lods
mov
inc
hlt
or
sbb
mov
into
daa
mov
outsb
aas
jl
sbb
scas
sub
cmp
shl
add
xor
sbb
adc
or
pcmpeqw
mov
inc
iret
jnp
jecxz
pusha
push
cmc
pop
xchg
fsub
stos
test
out
push
rol
mov
cmp
adc
fs
mov
or
divl
inc
es
loopne
cmp
into
xchg
popf
xchg
sub
pushf
mov
sbb
sti
insl
push
jle
pop
pop
data16
pushf
inc
enter
cli
push
cmp
push
and
int
popl
gs
bound
roll
out
and
push
pop
pop
out
mov
jno
jbe
jno
stc
jnp
mov
les
mov
pop
mov
xchg
inc
test
push
sahf
outsb
ds
fisubrs
in
jae
mov
mov
mov
fwait
adcl
cmp
mov
inc
test
rorl
or
cltd
out
pop
jl
aas
mov
loope
or
imul
aas
inc
xor
xchg
mov
clc
jno
into
jge
mov
or
add
out
sbb
das
jp
mov
nop
jb
xchg
xor
sti
push
and
xchg
mov
cmp
push
fstpt
dec
movsb
sahf
bound
fisttpl
xchg
inc
cltd
jnp
out
sti
aam
sbb
popf
mov
dec
jo
push
sub
pop
mov
data16
pop
mov
mov
sub
jne
add
pop
mov
push
mov
dec
stos
lahf
dec
cmp
push
gs
xor
cs
mov
cmp
iret
and
sarl
and
stos
xor
test
cli
ds
push
jecxz
mov
je
pop
inc
cs
pop
das
mov
mov
stc
xorl
out
mov
int
adc
jno
jbe
dec
divps
cmp
ret
repz
fcmovb
xchg
std
push
daa
pop
movsb
mov
sbb
add
xor
call
data16
adc
xchg
xchg
sbb
popa
pop
pop
mov
jns
sub
inc
insb
test
ret
lods
repz
dec
loop
mov
pop
cld
push
cmp
stos
jge
outsl
cmp
mov
out
xor
dec
jecxz
xor
xchg
mov
rcr
jle
add
mov
lods
data16
cmp
je
mov
mov
dec
imul
mov
jns
popf
mov
sti
adc
les
call
adc
int
in
mov
xlat
cli
lahf
mov
aas
push
sbb
gs
inc
cwtl
mov
fsts
pushf
or
std
mov
sub
and
cmpsb
pop
ss
push
dec
or
aas
roll
cmpsb
in
jle
pop
push
int3
push
jns,pn
ljmp
hlt
je
jb
in
and
loop
push
xchg
and
popf
jno
cmp
std
stos
xor
xor
syscall
sub
movsb
les
push
lds
mov
push
sbb
cmc
mov
pop
cld
xchg
nop
sbb
insl
cmp
dec
pusha
aam
lods
sub
push
jle
out
dec
scas
test
adc
lds
ret
or
pop
push
in
push
mov
daa
fnsave
push
rcll
or
lods
or
mov
lods
mov
add
jle
mov
mov
insb
out
mov
jp
icebp
cmc
punpckldq
cmp
fimuls
in
movsl
push
sbb
faddl
pop
and
cmp
in
sti
subb
sbb
addr16
enter
push
mov
popa
add
xorl
lret
cmp
mov
mov
jecxz
push
push
mov
and
fwait
xchg
and
lcall
jno
sbb
faddl
bnd
push
jp
cld
or
pop
xor
cmp
jno
stos
sbb
mov
nop
jmp
std
shlb
mov
push
adc
stos
fldl
aas
ror
cmpsb
imul
sbb
pop
andl
cs
fldt
aaa
push
je
jp
mov
nop
rorl
inc
pushl
or
pop
jno
daa
or
mov
addr16
imul
pop
add
dec
aas
push
daa
mov
add
mov
inc
inc
mov
sbb
jae
and
test
push
pop
push
cmp
ja
lods
xor
data16
ret
lcall
push
lds
and
das
inc
bound
outsl
pop
psrlw
inc
and
mov
or
cmp
dec
mov
inc
and
sub
xor
mov
jb
xorb
imul
cmpsl
mov
xor
mov
push
int
aad
inc
push
jne
cs
popa
shlb
xor
xchg
ljmp
enter
pop
dec
call
inc
jae
inc
adc
std
arpl
arpl
sub
xchg
mov
cmpsl
das
mov
je
movsb
aad
cmp
movsl
es
aaa
fsubr
and
xchg
ficoms
lahf
mov
sti
and
push
inc
jo
pop
and
xor
sub
shrb
test
mov
cmp
adc
cli
push
sub
sti
xchg
int3
insb
std
xchg
adc
decb
or
fs
ss
out
and
push
pop
pop
outsl
in
int3
or
mov
mov
pop
or
mov
push
adc
aas
out
adc
loope
sub
xchg
bound
mov
aaa
inc
add
xor
lcall
loop
stos
fs
out
add
pop
mov
roll
xchg
ss
or
mov
sbb
cmp
push
xchg
jne
dec
add
jno
mov
leave
push
gs
ret
stos
fstpt
fisubl
mov
ret
mov
add
aad
jbe
in
mov
adc
and
loop
mov
mov
mov
jbe
pop
and
xchg
adc
pop
xor
outsb
ret
call
jno
pop
and
cmp
jmp
xor
mov
loopne
jp
sbb
aaa
int
push
addb
fdivs
inc
addr16
add
and
adc
push
cmp
out
pop
and
jl
add
addl
push
sub
mov
sub
jne
into
mov
xchg
xchg
inc
add
mov
jbe
dec
mov
cli
fistpll
cltd
sub
daa
pop
aaa
lea
jne
rorb
jno
mov
and
je
sbb
insl
mov
ss
push
mov
mov
outsl
lahf
xchg
inc
testb
pop
lock
ds
aas
leave
in
jns
adc
mov
xor
cwtl
das
pop
ret
and
pop
pop
mov
outsb
iret
aaa
repz
mov
push
push
mov
in
adc
ja
push
mov
dec
popf
adc
mov
mov
mov
jb
xchg
insb
lret
inc
int
fnstsw
js
std
int3
mov
fisubrl
dec
daa
std
push
addl
pcmpgtw
cmpsl
add
fdivrl
sbb
je
push
loop
lds
pop
lahf
adc
cmpsl
mov
rcrl
hlt
out
pop
rorl
neg
cmpsb
mov
dec
shlb
and
loope
inc
sub
xchg
cli
dec
push
mov
and
mov
enter
scas
divb
ja
adc
inc
sahf
lahf
mov
pop
es
scas
xor
mov
fnsave
in
pop
adc
aad
add
int3
stos
pop
jne
shl
ffreep
repnz
sub
aad
je
cmpsl
fstl
xor
sbbl
addr16
xor
inc
and
ret
inc
sahf
pop
cmp
js
loop
aas
push
loopne
std
mov
jg
xchg
subl
ret
cltd
sub
xor
ljmp
and
xchg
mov
rcll
cmp
adc
enter
push
mov
in
nop
rcr
pop
xchg
mov
fisubrs
hlt
mov
sahf
adc
xlat
pop
out
cs
ss
inc
dec
jg
xchg
jbe
enter
mov
sub
jne
rorb
jb
in
mov
push
mov
fld
pop
lds
xchg
es
sub
inc
fmuls
ss
outsb
jnp
mov
push
enter
jle
jne
dec
cmpsl
mov
mov
mov
mov
fisttpll
popf
cmp
sub
movsb
mov
pop
ja
xchg
sbb
arpl
push
sub
push
shll
lods
or
ret
sti
mov
inc
jno
ja
xchg
pop
call
xor
lahf
cmp
pop
cmp
fstpl
data16
aaa
jns
sbb
add
pop
dec
jmp
add
outsb
mov
pop
repz
jecxz
lahf
jp
sub
outsl
add
fisubrl
inc
or
mov
cmc
pop
dec
adc
xchg
xlat
in
fadd
ljmp
outsl
nop
fs
fldt
add
loopne
icebp
aas
mov
sti
xchg
scas
retw
jno
movsb
scas
sbb
pop
loope
aam
sbb
cmp
rorb
pop
dec
sub
push
fs
popa
out
cli
or
in
dec
sbb
fsub
pushf
mov
mov
lds
sub
inc
movb
push
into
jg
cmp
push
loop
cwtl
std
jl
test
and
js
and
shll
jge
inc
iret
or
in
imul
add
and
dec
mov
aam
xor
pop
mov
xlat
in
and
inc
mov
icebp
into
xor
pop
aas
aad
inc
rorl
push
js
xorb
bound
jo
pop
jno
cwtl
mov
outsb
sub
add
add
mov
mov
lea
imul
je
or
lcall
inc
and
cmc
fcomps
fidivrs
xchg
sub
mov
leave
xlat
mov
jnp
rorb
adc
in
aas
movb
or
push
cmp
les
roll
xchg
pop
mov
into
ret
stc
pop
dec
sbb
jmp
loop
clc
pop
ss
push
sub
sti
lock
mov
cmpl
icebp
test
out
fistpll
add
insb
mov
cli
and
or
shlb
fstpt
ljmp
ss
pusha
sbb
sub
xchg
mov
pusha
cmpsb
outsl
and
add
dec
jb
sbb
sbb
inc
rcrl
ret
xor
sub
push
pop
jo
sbb
xor
ds
jmp
mov
in
mov
enter
xorb
and
mov
push
ror
test
xor
sbb
std
sbb
movsl
mov
push
push
fnsave
push
ret
mov
data16
add
leave
fidivrl
popf
push
test
or
popf
sub
adc
insl
pop
add
movsl
in
ja
hlt
addr16
xchg
fwait
test
pop
mov
sub
call
push
add
fsubrs
xchg
jecxz
push
sbb
cmp
sahf
mov
xor
cwtl
sub
cmpsb
jl
xor
jne
mov
leave
gs
shll
cmpsb
or
mov
sub
xchg
insb
mov
jbe
mov
mov
insb
outsl
push
xchg
sarb
and
ror
outsb
loope
imul
leave
pop
adc
fistps
aam
shrb
stos
mov
ja
inc
cmp
push
jns
mov
fld
in
dec
pop
xchg
and
or
out
inc
or
repz
popf
cmp
jge
rorb
jmp
xor
addr16
shll
add
mov
shrb
stos
fwait
stos
clc
incb
cmp
les
ret
inc
andl
jl
push
inc
mov
shll
popa
leave
les
lret
testb
add
jg
adc
sbb
pop
mov
adc
jbe
fdiv
outsb
sbb
dec
fstpl
pop
lcall
cmc
mov
imul
adc
loopne
mov
movsl
mov
mov
icebp
in
stos
outsb
dec
clc
in
sbb
inc
fcomps
out
lcall
xchg
or
mov
inc
fbstp
jp
dec
adc
jbe
mov
xchg
stc
repz
in
outsl
ficomps
dec
xchg
rol
ja
out
or
xchg
push
ret
lret
cmpsl
jne
dec
scas
xor
mov
arpl
fwait
negl
pop
push
mov
jp
lods
lods
cmpsl
hlt
fmulp
mov
mulb
mov
jbe
sbb
jne
mov
dec
add
fildll
pop
fs
push
pusha
shr
test
fiaddl
jae
push
addr16
stc
mov
shll
jge
lahf
popa
stc
dec
scas
mov
int
lret
sti
push
out
or
ds
out
stos
jg
mov
jae
rclb
adc
dec
mov
cmp
popa
out
push
mov
pop
rolb
clc
leave
std
std
rclb
dec
jno
lret
ret
rolb
stc
and
mov
mov
pop
lods
and
jmp
push
mov
dec
negl
push
push
and
xchg
stos
jne
sub
push
negl
stos
cltd
jo
ljmp
pop
cmp
jne
into
cmp
push
in
lret
inc
int3
mov
pop
pop
loop
sarl
mov
adc
fwait
xchg
pushf
and
rorl
mov
adc
cli
aam
push
ja
and
insl
inc
mov
lret
or
jae
or
bound
out
decb
jecxz
aas
adc
sub
adc
loopne
or
mov
sub
jecxz
popa
scas
das
sub
loopne
rorl
pop
sbb
xor
mov
pop
out
xchg
cmc
fbld
cmp
sbb
and
gs
dec
fxch
add
inc
insl
push
loope
inc
aas
shrb
dec
in
xchg
in
mov
loope
sub
cmp
xchg
lea
cld
out
ret
rcrb
les
push
push
pop
push
jp
popa
push
iret
mov
cmp
xchg
dec
inc
sbb
adc
cmp
pop
pushf
push
iret
jg
outsl
js
pop
test
fsubl
imul
lock
pop
cs
fdivrl
sub
add
lods
aas
popf
aad
cmp
mov
daa
sub
lret
call
das
push
lock
mov
mov
iret
data16
and
inc
mov
icebp
cmpsl
clc
repz
jnp
fcmovnu
jnp
jbe
scas
or
cmpb
cmp
mov
sahf
lahf
pop
mov
or
jno
js
sahf
pop
and
mov
dec
pop
sbb
push
sbb
ljmp
test
push
sub
jns
outsb
outsl
xlat
push
test
mulb
inc
int
dec
aas
sbb
xor
addr16
inc
scas
xchg
mov
leave
hlt
scas
in
cwtl
test
push
aaa
fstps
xor
in
in
sahf
mov
xor
test
sbb
inc
insl
gs
cli
test
cwtl
cli
dec
cli
or
lods
pop
sub
pop
mov
addb
bound
ret
or
inc
addr16
cmp
dec
gs
xchg
cmp
sbb
mov
cmp
xor
inc
push
pushf
pop
std
mov
inc
jecxz
inc
nop
inc
popf
orl
roll
or
lcall
repnz
lret
xor
lea
adc
xor
je
sub
sub
cmp
andl
sbb
popf
mov
fstps
pop
dec
cmp
mov
mov
jb
ret
dec
dec
pop
mov
mov
dec
push
sbb
and
sbb
lret
inc
fadds
mov
mov
aad
xchg
inc
cld
sub
and
adc
adc
pop
push
xlat
lock
bound
xchg
inc
push
mov
or
mov
xor
jbe
cwtl
xchg
mov
pop
mov
scas
fwait
ljmp
insb
jno
insl
sarl
mov
jmp
in
xchg
inc
out
xchg
movsb
cmp
out
push
or
shlb
xchg
or
lds
sub
jbe
mov
int3
loope
pop
imulb
mov
sub
and
or
insb
je
jp
push
cld
pusha
popf
loop
iret
arpl
mov
sarb
push
add
inc
jl
test
ja
push
adc
inc
aad
xorl
loopne
mov
lcall
rcrb
and
incl
xor
jmp
sub
jl
adc
sbb
loopne
pop
mov
stc
lcall
mov
orb
jp
outsb
insl
in
mov
daa
aas
repz
mov
sahf
test
and
push
mov
mov
test
loop
or
insb
xchg
mov
xor
xchg
repnz
sub
pop
pop
fwait
imul
mov
imul
mov
mov
xchg
push
cmpsb
mov
jae
push
scas
sub
fcmovu
aaa
shll
repnz
cmp
rclb
fdiv
pushf
add
aas
imulb
hlt
lock
hlt
les
cmpsb
cltd
mov
inc
cmp
mov
sbb
inc
mov
push
jg
clc
sahf
aam
jle
fdivs
scas
fdivr
movsl
push
adc
push
std
xor
cs
mov
rol
mov
mov
add
mov
adc
add
loopne
sub
clc
test
test
sbbl
rcrb
movsl
fxch
enter
nop
dec
mov
call
loope
or
sub
push
inc
cmpb
adc
xor
inc
inc
in
jge
jo
cmp
adc
insb
mov
lret
jle
push
xchg
divb
mov
cs
dec
scas
cmp
sub
sub
rclb
insl
out
push
mov
shlb
push
xor
les
add
mov
xchg
arpl
inc
dec
xchg
mov
stc
inc
mov
dec
jo
add
jl
and
rol
in
inc
cmpsb
dec
lods
loop
jbe
enter
ret
add
sahf
inc
outsb
cmpsl
mov
rolb
dec
pop
xchg
and
bound
shl
xor
sahf
rcll
andb
sarb
loop
mov
dec
inc
test
pop
or
xchg
outsb
xchg
ficoms
lret
pop
lret
push
ljmp
mov
mov
insb
sub
and
pop
cwtl
add
or
ret
adc
cmpsl
push
inc
push
clc
es
push
push
dec
pop
cs
shl
out
dec
and
push
ficomps
js
and
and
clc
push
sbb
sbb
mov
test
and
xchg
sbb
sbb
mov
or
mov
mov
fidivl
jmp
pop
stos
sbb
fcoml
cltd
xor
jp
pop
sbb
dec
mov
or
movsb
fmulp
jmp
call
pop
pushl
lcall
sub
xchg
push
in
subl
nop
movsl
adc
movsb
imul
xor
xchg
xchg
inc
loopne
roll
add
jge
jp
fsubrl
pop
xorb
in
mov
mov
push
sub
enter
adc
outsl
lahf
test
xchg
fidivs
xchg
jb
mov
pop
in
movsl
mov
stos
repz
dec
filds
or
stos
mov
mov
pop
add
testl
xor
das
cmp
loope
aad
ja
test
sbb
mull
mov
fldt
dec
mov
ret
ss
imul
lcall
cli
xchg
push
lcall
dec
mov
jmp
insl
mov
adc
sarl
xor
cmpsb
jle
mov
ja
andb
pushf
stos
shr
mov
lcall
pop
push
ret
push
push
push
addr16
xor
inc
jns
lods
or
pusha
dec
nop
mov
out
xchg
mov
lods
fbld
jno
movsl
iret
cmp
popa
mov
pop
mov
test
xor
mov
je
in
add
sub
cmp
add
jb
push
pop
pop
fs
push
fucomi
mov
lahf
stc
dec
notb
sbb
out
add
stos
loopne
fisttpl
fucomip
mov
lret
mov
sbb
data16
jae
fcmovne
fcomps
mov
jne
xchg
push
pop
in
popl
dec
or
mov
sub
mov
or
sti
rcrb
xchg
jp
jp
ret
mov
mov
loop
add
bound
and
imul
in
jo
shrl
ja
insl
pop
lcall
mov
mov
addb
fnstenv
jbe
xor
xchg
aaa
mov
fistps
mull
push
xchg
sub
adc
insl
sub
insb
pop
and
insb
incl
push
jnp
fstl
mov
add
pop
pop
push
insl
pop
in
push
dec
int
xchg
cmp
sub
insb
cmp
add
nop
movsb
jbe
sub
and
aam
adc
scas
cmp
xor
cmp
dec
test
mov
and
ret
lahf
ret
ds
popf
jmp
leave
cmp
cs
mov
lods
cmpsl
dec
mov
mov
cmc
pop
imul
cmpsl
and
test
popf
clc
add
mov
scas
push
sarl
jnp
cmp
in
jns
dec
lret
negl
sbb
sbb
xor
mov
cmp
out
mov
mov
imul
imul
push
sbb
pop
cli
xchg
cli
dec
ljmp
cmp
cmp
mov
pusha
je
xchg
fwait
mov
lds
pop
stc
int
test
push
ret
sbb
add
mulb
outsb
dec
xchg
insl
and
cltd
call
pop
jge
cmp
enter
scas
inc
cmp
int
stc
push
fnstcw
sbb
xchg
stc
push
add
jne
mov
movb
loope
scas
out
jl
xchg
or
loope
in
mov
mov
imul
sub
adc
out
or
pop
sbb
stc
fists
int
mov
ja
mov
aad
outsl
mov
sub
push
bound
or
or
cld
iret
mov
mov
into
clc
xchg
sbb
stos
xor
xchg
sbb
pop
add
cltd
scas
pop
scas
popa
mov
loop
rorb
cld
xchg
clc
testl
mov
movsb
pop
dec
add
push
sub
mov
mov
cmp
mov
xlat
mov
test
loopne
push
cmp
test
cmp
pop
aas
xchg
xor
cmp
or
cli
adcl
sbb
fldenv
in
lcall
inc
pop
mov
sbb
fwait
cmpsl
out
fstl
ss
xor
ljmp
or
imul
adc
lds
jle
adc
imul
lret
mov
xchg
xchg
mov
inc
pusha
outsb
pop
divb
sbb
lock
les
fmulp
xchg
js
rcr
add
mov
jbe
xchg
jmp
pop
jmp
mov
lahf
jecxz
sub
push
gs
cltd
mov
and
push
clc
push
mov
cltd
dec
lods
js
mov
push
mov
aas
in
ss
jnp
adc
pop
xor
aad
jmp
std
mov
mov
aad
fisttpll
fsubl
cli
mov
popf
add
iret
shll
fwait
xor
cwtl
or
les
and
popa
fcomps
sub
mov
loop
pop
or
mov
inc
and
lret
dec
pop
cmp
sub
les
dec
pop
push
outsb
cwtl
cwtl
lret
sbb
jmp
test
js
rcll
test
xlat
inc
mov
subb
pop
setbe
hlt
jmp
insb
push
mov
pop
pop
jae
add
add
iret
repnz
inc
out
push
mov
fld
mov
iret
pop
int
add
outsb
rclb
iret
js
out
scas
insb
cmp
lea
std
xchg
fsubrl
lods
inc
clc
sarb
mov
or
js
stos
ds
pop
and
daa
pop
movsl
and
push
push
pop
dec
sbb
js
push
mov
adc
lcall
fucom
xchg
sub
pusha
fs
and
mov
dec
in
jo
lods
js
inc
and
repz
add
jno
stos
adc
mov
std
adc
pop
in
cmp
test
bnd
cmp
mov
inc
xchg
sbb
lods
mov
adc
push
fiaddl
enter
push
sti
nop
subl
cmpsb
imul
sbb
das
add
sbb
adc
loop
mov
fdivl
mov
push
sub
lahf
jbe
int3
push
pop
jmp
in
ljmp
adc
aad
ss
pop
fsubrs
ret
stos
add
imul
pop
shlb
jmp
popa
imul
adc
out
fbstp
push
sti
insb
jmp
lret
pop
jmp
scas
jae
sub
adc
adc
rcl
jae
hlt
mov
jle
add
pop
xchg
in
adc
xor
mov
roll
out
cmp
and
cmc
pop
xchg
push
xchg
mov
ror
or
int3
mov
and
ja
mov
jg
mov
movsl
dec
push
in
les
loop
fwait
rorb
mov
out
sbb
jg
xchg
daa
add
insl
mov
or
gs
jnp
bound
pop
push
fwait
ss
pop
adc
es
int
fst
test
cmpsb
xor
outsl
aas
bound
ds
dec
cmpsb
adc
xchg
sub
sub
push
fs
fnstcw
fnstenv
sub
push
mov
xchg
pop
or
xor
dec
mov
mov
fnsave
test
cmc
jmp
mov
push
mov
mov
sub
das
out
sub
cli
xchg
insl
mov
jge
adc
mov
jecxz
or
xor
jecxz
jmp
sbb
dec
pop
fdiv
xor
fistpll
adc
adc
inc
and
out
aas
imul
mov
shlb
push
jp
push
data16
ja
xor
and
dec
cmp
stc
pop
push
push
inc
outsl
push
mov
or
nop
out
call
lret
mov
outsl
scas
and
popa
push
xchg
pop
jge
stos
jo
loope
xchg
aas
stos
sbb
lcall
test
mov
insl
inc
and
dec
dec
push
andb
inc
dec
xchg
inc
sbb
mov
js
aad
lret
pop
xchg
xchg
or
insl
rclb
and
push
mov
mov
inc
adc
loop
loop
and
scas
stos
sahf
mov
xchg
dec
xchg
loope
mov
and
outsl
stos
repnz
mov
mov
push
cmpsb
cmpsl
cmp
fldcw
cmp
lcall
inc
sub
lea
adc
mov
sbb
sti
fdivs
push
push
out
sti
mov
cli
mov
dec
cmc
pop
cltd
mov
cli
adc
mov
icebp
mov
push
adc
aam
mov
sub
ds
sub
lcall
adc
dec
xchg
sub
sub
dec
call
sub
in
jbe
out
daa
in
xor
fiaddl
fadds
mov
std
test
out
cmpsl
mov
aas
pop
into
sbbl
test
fwait
xor
rcl
or
pop
hlt
mov
jb
mov
push
jns
dec
in
cmp
xor
repnz
xchg
mov
fbld
popf
pop
or
loopne
iret
jo
andb
in
shrb
int
xor
mov
sub
xor
repz
mov
shrb
or
roll
in
xchg
add
test
fcmovbe
shrl
add
mov
repz
inc
mov
cwtl
mov
mov
jnp
xor
mov
jo
pop
mov
jo
jne
call
push
jmp
les
lret
fs
adc
inc
add
xor
cmp
and
jnp
ja
subl
push
xchg
xchg
icebp
outsl
pop
testl
cmp
and
xchg
or
les
repnz
lods
xchg
into
mov
mov
test
jbe
in
mov
shll
in
push
xor
sbb
fs
stos
push
lds
sub
pop
loopne
cmc
es
aad
shrl
jne
xor
lods
sub
arpl
add
sub
push
jge
cmp
shr
pop
sahf
inc
push
jge
mov
mov
cmp
es
cmpsl
xchg
jb
popl
lock
sbb
pop
push
cmpsl
lret
fwait
cmp
jnp
sub
cmpb
mov
sub
out
or
or
pushf
outsb
ret
adc
xor
fwait
inc
jp
mov
pop
sahf
or
cmp
imul
pop
or
jo
or
aaa
sub
fnstenv
cmpsb
sub
inc
icebp
sub
mov
aad
push
xlat
jnp
sbb
ljmp
in
pop
cmp
repz
in
aaa
das
iret
into
fnstsw
mov
jnp
aas
inc
adc
jbe
ljmp
inc
mov
cmp
mov
out
mov
sbb
mov
vcmpps
mov
arpl
adc
push
cli
stc
in
adc
sub
lods
dec
loopne
mov
rcl
aas
orb
sbb
inc
mov
jmp
add
push
xchg
lds
jb
cmp
sub
sub
popa
ret
lcall
insl
or
sbb
movsb
ss
mov
outsb
imul
sbb
pusha
mov
insb
es
dec
fistl
inc
popf
call
movsb
push
push
fwait
dec
out
imul
lods
dec
addb
jbe
inc
dec
sub
add
dec
or
xorl
and
inc
xorb
add
lret
adc
mov
add
fwait
mul
mov
sub
enter
lcall
xchg
gs
xchg
and
jb
sbb
adc
push
aad
fcmovnbe
sub
icebp
add
out
xor
mov
push
mov
fwait
movb
fstpt
loop
test
xchg
scas
rcrb
packsswb
adc
mov
jmp
mov
push
dec
test
sub
xor
ja
icebp
pop
xchg
xchg
push
ss
push
cmc
pop
and
jl
pop
sbb
gs
ret
mov
sub
movl
call
out
inc
in
inc
ret
xor
scas
inc
push
cmp
xchg
fstpl
sub
out
mov
cld
mov
imull
push
bound
dec
jo
lods
andb
pop
and
in
mov
jl
ss
and
lahf
cmp
test
sub
or
jbe
out
cli
jne
fcmovb
and
out
divl
mov
xchg
aaa
into
jns
les
dec
stos
jmp
out
sub
aaa
cmp
jge
jl
sub
shr
sbb
daa
and
inc
fmuls
add
sub
xor
out
jne
push
push
xchg
sahf
cwtl
cmp
lret
clc
adc
aam
mov
lret
pop
int3
adc
in
xchg
out
dec
dec
mov
out
adc
jg
jne
mov
pushf
mov
mov
xchg
cs
mov
ret
push
loopne
xor
shl
add
mov
cmp
jno
mov
pushf
bound
cmpsb
pop
in
xchg
cmp
lahf
popf
mov
adc
inc
xor
pop
mov
and
mov
mov
and
aam
sub
add
out
push
gs
fsubrs
out
cli
es
jno
pushf
push
movl
jmp
and
mov
adc
dec
aam
jne
pop
adc
addr16
jg
push
or
fucomip
adcb
pop
inc
sub
gs
mov
mov
popa
add
sub
ret
in
mov
mov
sbb
gs
lahf
out
aaa
dec
cmp
and
mov
mov
pushf
inc
xchg
fimull
mov
call
dec
dec
and
stc
stc
subb
test
lahf
xchg
add
andb
push
add
ret
loope
fcoml
and
int
lahf
std
daa
aaa
inc
mov
out
popf
bound
seta
pushf
enter
popf
iret
sub
jbe
ret
add
test
gs
sub
mov
repnz
push
lret
fs
inc
xor
ljmp
test
xor
imul
ds
popa
xchg
xorl
rolb
or
icebp
xchg
out
mov
lret
xlat
shll
pop
aas
or
enter
push
out
xlat
xchg
addr16
push
jns
shr
inc
fmulp
jle
loopne
lds
jge
aaa
pop
scas
lods
inc
pop
dec
vcvttsd2si
inc
cmp
mov
xlat
add
pop
or
and
lret
addr16
inc
mov
or
mov
jg
movsl
ds
shll
dec
lock
adc
push
not
es
sbbb
add
fidivrs
ret
mov
daa
jecxz
sti
fdivl
icebp
fildll
in
dec
insb
xchg
cmc
cmpsb
jge
xchg
fmulp
imul
in
hlt
mov
maskmovq
mull
xchg
pop
pop
inc
adc
adc
sarl
aaa
mov
call
sahf
cmp
mov
sub
ds
push
or
aad
sub
gs
mov
loop
push
sbb
add
aad
pop
xchg
cli
arpl
or
pushf
lret
lret
stos
inc
adc
loope
xchg
mov
dec
je
imul
inc
jecxz
mov
xchg
ds
push
pusha
inc
iret
mov
sahf
jb
xchg
and
cmpsb
mov
inc
outsb
mov
inc
pop
push
sub
and
out
cmc
std
jnp
daa
loope
mov
inc
out
jg
cwtl
cwtl
mov
xchg
mov
aam
or
dec
pushf
dec
outsl
cmp
mov
xchg
test
xor
push
stc
sbb
loope
cmc
popf
mov
xchg
cld
in
add
clc
xchg
rolb
mov
dec
test
pop
add
push
or
call
ljmp
fs
add
xchg
outsb
xlat
cmpsl
or
fs
pop
lea
cwtl
xchg
inc
sub
mov
loopne
pop
loopne
ret
pushf
jnp
loope
shrb
pop
xchg
nop
in
sbb
cmpsb
cmp
pop
jle
sub
inc
inc
sub
enter
jge
cmp
jecxz
repz
pop
movsb
jecxz
inc
dec
jg
mov
sub
popa
faddp
mov
adc
jmp
mov
inc
sti
movsb
push
push
ret
mov
fadds
dec
push
pop
sub
lcall
xor
imul
sub
adc
in
fbstp
pop
lahf
fs
jmp
pop
mov
xor
and
jge
fidivl
xchg
lret
and
les
xchg
movsb
jmp
mov
or
shr
jge
mov
xchg
imul
std
xor
dec
stos
int
and
mov
rclb
subb
xlat
pop
dec
mov
push
lea
cmp
stos
cmp
dec
ljmp
lahf
flds
mov
fmuls
rcrb
jg
and
mov
dec
mov
out
sub
sahf
addr16
pop
mov
xor
push
movsb
fs
popf
stos
push
cs
push
test
pop
jne
out
scas
paddd
push
iret
jnp
lret
pop
fwait
mov
in
call
stos
cmp
xor
decb
test
arpl
dec
popa
test
pop
mov
sbb
and
repnz
fsubrp
aam
mov
sub
pop
sbb
sti
dec
xchg
or
jl
std
repnz
sub
and
enter
dec
mov
mov
iret
cwtl
dec
push
xchg
cmp
or
adc
pop
push
cmc
mov
pop
stos
mov
je
adc
xor
add
insl
mov
xor
add
dec
xchg
jae
sbb
and
inc
mov
nop
pop
inc
cmc
and
pop
jp
scas
scas
xor
add
jle
outsb
dec
jp
sahf
adc
cltd
rclb
insb
mov
fidivrs
into
xchg
mov
cs
inc
add
jmp
fistps
outsl
das
ret
mov
les
jno
push
inc
xlat
rorb
inc
or
xor
adc
and
sbb
inc
fisubrl
xlat
cmpsl
imul
xor
or
je
lret
mov
adc
mov
es
ret
mov
fwait
popa
xchg
repnz
ret
pop
outsb
pop
fiaddl
pusha
shll
into
rol
xchg
pusha
fs
fisttps
xlat
mov
pop
iret
scas
xchg
fists
nop
cmpsb
add
pop
add
push
mov
iret
add
and
mov
mov
cmpsl
and
in
xor
cld
int
mov
dec
daa
ffree
cmp
pop
or
push
jp
scas
xchg
std
jg
pushf
scas
xchg
mov
pop
mov
pop
rcrl
inc
mov
fwait
lock
into
dec
testb
mov
push
insl
ss
pop
or
fxtract
adc
insl
jmp
pop
fdivrl
movb
mov
shll
daa
mov
sub
dec
nop
fdivrl
ret
push
into
aad
call
or
mov
xchg
xor
pop
pop
jno
cwtl
add
fdivs
push
dec
mov
stc
repnz
sbb
mov
jmp
outsl
jb
push
ds
xor
cmpsl
rclb
and
bound
shlb
cmp
ficomps
push
and
sub
ljmp
jnp
xchg
add
arpl
cmp
xchg
cmp
xor
jecxz
add
fwait
pop
jg
shll
roll
aas
dec
data16
test
test
sahf
lcall
mov
imul
ffreep
movl
sbb
loop
sub
cmp
insb
hlt
or
jbe
arpl
clc
int3
in
jg
push
adc
loope
jecxz
popf
inc
jne
addb
mov
popf
dec
lret
mov
ss
and
shl
fwait
mov
ds
gs
outsl
dec
sub
sub
push
lret
pop
add
js
lea
add
ficoms
lea
and
das
sub
imul
dec
iret
imul
xchg
lods
push
mov
sbb
inc
ja
sub
jns
pop
loopne
push
out
inc
pop
push
xchg
je
xchg
jp
and
mov
inc
pop
xor
enter
sbb
ffreep
adc
aas
and
je
push
xchg
inc
push
lea
jmp
mov
sti
rclb
jmp
ficoml
push
fdivl
mov
mov
lds
mov
andb
outsl
mov
cmp
sbb
faddl
pop
in
jl
mov
lret
mov
pushf
xchg
mov
in
bound
inc
stc
iret
or
sub
shll
cmpsb
aaa
shlb
inc
lahf
movsb
push
cltd
sti
xor
shll
es
int
pop
push
sti
mov
dec
sub
sbb
dec
int
les
jne
pop
xchg
inc
dec
jge
sti
repz
popf
test
ss
notb
and
pusha
dec
adc
xor
and
ficoml
test
and
jle
in
sub
mov
jno
scas
or
out
jbe
cmpb
notl
lds
mov
dec
insb
loope
pop
push
adc
jns
mov
insl
xchg
cmp
push
or
add
jl
andl
aas
mov
push
bound
mov
enter
jl
loopne
push
push
pop
add
or
cmp
mov
in
dec
xchg
popf
outsb
shl
xor
addr16
jbe
add
dec
push
enter
mov
cmp
mov
aaa
xor
mov
pop
adc
icebp
push
notl
mov
xchg
push
and
xchg
inc
adc
subl
hlt
push
xchg
imull
mov
test
sub
push
push
cli
hlt
mov
pop
lods
movsb
pushf
xor
popa
stc
and
test
shlb
stos
fisubrl
arpl
cmp
xchg
dec
mov
dec
dec
scas
in
add
xor
xchg
mov
stc
add
andl
gs
xchg
push
lret
xchg
xchg
jb
in
insb
into
and
pop
adc
jecxz
adc
cmpl
pop
cwtl
movsb
stos
add
push
push
ljmp
pop
fldl2e
imul
loopne
shlb
cltd
adc
add
int3
mov
mov
in
or
or
fiaddl
call
dec
mov
pop
fildl
inc
add
in
sub
mov
jae
out
dec
and
jne
and
movsl
jne
out
xlat
cmp
xchg
pusha
les
inc
data16
xor
lret
jae
mov
mov
xchg
or
test
mov
in
gs
movsl
aaa
cld
and
iret
adc
mov
adc
loope
outsb
adc
adc
inc
mov
xchg
push
popf
sub
cmp
cmp
insb
test
xchg
mov
fdiv
mov
rcrl
addl
das
add
mov
call
lock
aas
mov
pop
clc
sti
loopne
xchg
xor
dec
xor
pop
cmp
xchg
add
mov
in
imul
push
dec
sub
jne
sub
push
hlt
push
or
js
sahf
ret
aaa
cmpsl
mov
aam
push
iret
sub
cli
inc
mov
mov
popf
aaa
xchg
ret
pop
and
pop
push
add
loope
pop
mov
imulb
inc
hlt
sub
jge
nop
outsl
sub
movsl
mov
out
mov
or
adc
bnd
loopne
leave
fs
adc
insb
mov
push
insl
mov
insb
ss
rorb
lret
push
ret
fildll
cmc
int3
sub
adc
test
ret
push
lcall
rorb
xlat
or
pushf
mov
lea
push
mov
or
cwtl
pusha
lcall
shll
push
or
mov
aad
aaa
insb
mov
sub
xor
mov
pop
andl
mov
ret
add
sti
insb
or
xchg
inc
mov
outsl
push
dec
jmp
rcrl
out
sub
push
aam
je
mov
div
inc
jl
fidivl
iret
cmp
cmc
into
mov
lcall
call
and
pop
cld
and
lock
sahf
hlt
cmpsl
dec
pushf
jae
hlt
icebp
cmp
fbld
daa
mov
dec
push
adc
enter
cmp
mov
dec
jno
dec
inc
jecxz
mov
jns
and
push
idivb
xor
popf
pop
in
cmp
dec
popf
mov
ret
in
push
mov
mov
jle
or
jb
dec
int3
clc
mov
jmp
push
int3
mov
add
lods
xor
mov
mov
or
push
aaa
push
orl
cmp
hlt
cs
inc
gs
sbb
cmp
lret
pop
iret
push
jle
es
push
cwtl
sbb
pop
out
push
xchg
sub
mov
cld
insb
icebp
rorl
sub
or
lret
sarl
arpl
or
mov
fwait
jo
jno
add
add
int
jge
fisubl
or
and
js
dec
out
shrl
call
mov
fidivs
add
fdivl
das
fcmovne
in
mov
xchg
xchg
jae
mov
adc
cmp
cmpsl
aam
pop
out
inc
adc
jb
mov
addr16
data16
sbb
popa
pop
clc
push
testl
call
cmpsl
rol
mov
lret
pop
lock
jae
or
rcl
sahf
test
aas
test
dec
das
pop
mov
or
test
or
test
pop
push
cmpsl
xor
ret
push
in
fbstp
mov
pop
jae
lcall
addb
mov
mov
and
fcmovnb
push
jae
dec
adc
push
mov
jo
lods
mov
stc
sbb
data16
lods
hlt
mov
xor
xlat
in
lcall
pop
les
fwait
inc
addr16
adc
test
rcrl
and
mov
stos
testb
les
jl
les
inc
adc
inc
push
out
sbb
iret
sub
xor
in
mov
js
sbb
scas
inc
xchg
inc
mov
loopne
pop
lds
mov
mov
inc
adc
jnp
cltd
mov
sub
inc
adc
insl
popf
ss
mov
pop
roll
les
stc
push
cmp
test
pop
sub
aam
mov
into
fcmovbe
mov
and
add
mov
add
sub
jb
xchg
lock
mov
vminps
call
mov
inc
int3
ret
mov
mov
mov
sbb
and
scas
in
fstp
ja
or
pop
out
pop
and
pusha
into
cld
in
addr16
std
push
test
bound
pop
shl
xlat
adc
cltd
dec
dec
fnstcw
jg
and
adc
pop
out
out
clc
xlat
push
pusha
jae
pop
jne
aas
es
jmp
fbld
jb
and
xchg
jg
or
sbb
sub
imul
inc
sbbb
sub
xor
incl
xchg
jno
jle
hlt
push
pusha
notb
xchg
dec
in
adc
rdmsr
nop
out
int
rorl
xchg
daa
sbb
or
mov
adc
lahf
push
adc
jno
testl
jae
lods
aas
movb
xchg
dec
fldenv
flds
es
ret
outsb
xchg
das
lahf
aam
popf
repnz
add
dec
lock
clc
das
mov
xor
cmpsb
mov
inc
jbe
pop
sarl
sub
cmpsb
fisttpl
imul
unpckhps
sbb
out
cmpsb
add
push
lret
mov
test
jecxz
mov
mov
cmp
rcll
pop
xor
icebp
jbe
std
mov
adcl
pop
imul
pusha
jp
jbe
mov
xor
es
sbb
mov
mov
fsubl
je
lcall
clc
out
mov
ret
outsl
mov
cmpsl
add
mov
push
xor
pop
sbb
cmp
dec
push
and
std
xor
es
fdivs
leave
pop
inc
iret
aaa
push
mov
or
mov
adc
mov
addr16
or
pop
in
push
mov
ret
dec
imul
pusha
sbb
lock
mov
jno
sub
add
add
sbb
jo
fs
icebp
sub
jge,pn
std
mov
push
add
sub
jb
int3
addb
scas
bound
ret
and
in
ds
outsb
in
mov
testl
or
add
mov
pop
inc
cmpsl
js
adc
cmp
insl
lea
xor
insb
repnz
popa
daa
mov
std
jl
fs
pop
fwait
mov
in
xchg
aad
pushf
jg
sbb
inc
or
push
les
es
jo
pushf
and
mov
es
insb
or
dec
add
xchg
std
push
mov
sbb
xor
lods
sbb
sbb
pop
jb
dec
mov
sbbb
dec
add
scas
subb
or
jge
sbb
mov
push
jge
shll
xor
mov
mov
dec
aam
push
xchg
dec
cli
mov
mov
daa
jnp
into
pop
jb
ss
fnstsw
push
aad
jmp
in
ja
imul
adc
xchg
je
sahf
inc
adc
fists
andl
cmp
jae
mov
fnstsw
aam
jno
aam
pusha
mov
sbb
ss
andb
push
dec
mov
bound
rolb
cmc
mov
decb
insb
insl
xchg
dec
push
out
sbb
pushf
or
pushf
sbb
sbb
and
imul
mov
and
mov
mov
test
pop
xchg
jno
push
nop
std
insb
sub
out
cltd
adc
jbe
adc
dec
mov
and
pop
inc
ret
imul
xchg
and
push
loope
inc
xor
loop
ja
int
jb
dec
iret
push
adc
jg
adc
test
dec
loopne
sbb
xlat
mov
ficoms
stos
add
push
int
fimuls
xchg
mov
iret
test
daa
pop
clc
inc
cwtl
mov
cmp
dec
adc
lea
mov
out
std
mov
add
into
cs
les
inc
repnz
xor
add
push
loope
xor
dec
sub
fiadds
ret
orb
fildl
and
xchg
pop
aaa
lcall
stc
and
lock
or
cmp
dec
insb
cmp
fistpll
sub
stc
cmp
dec
in
and
inc
add
jns
arpl
call
push
and
lahf
dec
inc
adc
xor
bound
cmp
fnstsw
inc
or
cmp
sub
jmp
leave
mov
jle
fbld
int
movsb
pop
fwait
add
inc
cli
xchg
icebp
ss
daa
cmp
insl
xor
data16
gs
loopne
aad
jecxz
hlt
lods
ret
leave
scas
mov
js
mov
cmpsb
dec
shlb
mov
jae
mov
rcr
push
movsb
xchg
stos
cmp
addr16
mov
jge
imul
jnp
lods
prefetch
loope
jbe
fiadds
gs
jmp
enter
cmp
outsb
popf
fwait
icebp
pusha
cmp
and
xor
ret
loope
test
aam
xorb
flds
jbe
xor
stc
ret
test
lods
jns
shlb
and
mov
or
aas
outsb
jl
adc
jbe
push
cmp
call
rcrb
scas
out
xchg
xchg
dec
leave
mov
js
cld
inc
cmpl
pusha
push
jae
jl
mov
dec
jge
lcall
cmp
jbe
cli
aad
jl
sbb
insb
popf
xchg
xor
sub
mov
push
flds
test
faddp
test
pop
pushf
ret
xor
or
insb
dec
pop
fmuls
jae
mov
pushf
dec
fcoml
mov
mov
mov
je
sti
call
lret
dec
mov
mov
ror
jo
or
xchg
or
ret
and
mov
cld
jnp
test
std
jl
jns
ret
mov
sbbb
mov
sti
popf
mov
add
adc
and
jbe
push
rclb
movsl
mov
xchg
fs
subl
or
sub
mov
xchg
orb
cli
push
jge
cmpsb
push
mov
stos
inc
cltd
dec
cmp
sahf
inc
into
jg
push
dec
xchg
test
xchg
popa
or
sarl
dec
in
jle
jnp,pn
push
test
bound
daa
pop
push
sbb
adc
mov
stos
aaa
cmp
pop
mov
sbb
adc
xor
cmp
jne
in
ds
fbstp
sbb
rclb
xor
sub
push
push
and
and
xor
in
jmp
cmp
or
xor
aam
xlat
pop
ljmp
test
clc
cmc
push
popf
jle
popa
icebp
xchg
fs
mulb
adc
xchg
jl
xchg
mov
push
jl
test
int3
mov
ret
or
les
nop
sbb
cmpsb
cmp
or
add
xor
ja
inc
cmp
mov
lock
and
sbb
push
push
cmpb
das
push
imul
in
mov
and
fidivl
jge
adc
push
rcl
mov
xchg
xchg
stos
pop
sbb
jg
lods
mov
mov
pop
aam
pop
adc
mov
std
pop
pop
cmp
push
xor
and
je
push
adc
sbb
jbe
mov
rclb
push
shl
push
ret
lret
sub
lea
or
dec
push
mov
pop
rcl
sub
pop
incl
xchg
fsubl
jl
adc
aaa
int3
call
mov
cmp
push
pushf
dec
jne
cli
pop
repnz
add
imul
xor
ja
stos
test
pop
hlt
rolb
add
dec
cld
jle
or
push
js
and
sub
cmp
mov
or
pop
aas
imul
pop
pop
and
lahf
mov
jmp
leave
outsb
addr16
or
scas
fldcw
inc
or
xchg
bound
sbb
sbb
aam
roll
push
mov
lcall
cmp
repnz
ja
test
outsb
aad
cmp
adc
aas
sbb
and
cmp
add
mov
mov
dec
fdivrl
cmp
push
sti
popa
lret
aad
mov
cmc
in
and
jnp
adc
push
pushf
mov
or
or
xlat
or
and
imul
add
dec
scas
mov
push
mov
jmp
enter
sbb
fs
jp
jmp
pop
in
or
lds
mov
cltd
xchg
mov
mov
pop
arpl
in
mov
xor
dec
sysexit
insl
test
in
sbb
pop
mov
in
or
sub
mov
xchg
xor
xchg
add
fs
in
and
mov
leave
mov
pop
arpl
leave
sub
dec
adc
movsl
mov
mov
mov
daa
mov
mov
mov
or
fsubl
jae
outsl
das
int
ret
xchg
lods
sub
sbb
push
outsb
adc
and
push
pop
cmp
outsl
std
jns
cmc
cmc
fcoml
jmp
repz
mov
dec
sbb
and
cmp
cmpsl
jle
inc
cmpsb
repnz
clc
notb
gs
add
and
push
sbb
pop
mov
popa
cmpsl
out
int3
inc
pop
sub
enter
cwtl
jmp
scas
pop
movsl
push
or
cmpsl
jmp
scas
mov
and
mov
sub
adc
push
push
shrl
je
ja
pushf
subl
sbb
sbb
push
cmc
fsubrs
pushf
mov
fmull
int
xchg
in
cmp
cmpsl
lods
rol
pop
lds
loop
imul
push
or
pop
popf
ljmp
aad
push
xchg
insb
xchg
mov
push
sbb
pushf
stos
sbb
rsqrtps
ss
or
daa
cli
scas
sbb
popa
mov
pop
mov
cs
dec
lret
iret
sub
push
shlb
aaa
out
pop
inc
jo
xor
in
and
mov
pop
mov
xchg
pop
mov
inc
add
adc
jno
ret
rclb
filds
xor
mov
mov
jbe
clc
add
inc
iret
jno
in
adc
push
shll
and
int
ret
pop
andl
pop
aam
jne
leave
and
std
pop
testb
shr
jns
test
xchg
sub
mov
shll
out
lret
loopne
insl
decl
shll
sahf
cli
and
ret
dec
imul
xchg
pop
daa
pop
jmp
inc
push
jnp
fwait
repnz
psubusw
cmpsl
lods
pop
inc
aam
add
mov
sub
hlt
popf
std
mov
repnz
cs
fcoms
jecxz
or
pop
xor
mov
mov
push
sub
mov
ret
jge
rcrb
or
and
ds
js
adc
xchg
sbb
sahf
cmpsl
je
pop
inc
or
test
lahf
jge
push
subl
or
and
test
gs
sbb
fdivl
into
int
out
fwait
outsl
loopne
int
inc
insb
inc
cmp
dec
mov
xchg
push
loopne
mov
jns
psubw
int
fnstsw
stc
cmp
arpl
fstl
cwtl
aaa
jle
sub
inc
push
mov
xlat
ss
mov
pop
xchg
add
dec
sub
xchg
stos
xor
lret
stos
out
gs
adc
fimuls
sub
xlat
jne
adc
push
add
testl
mov
bound
fcmovbe
inc
aas
movsl
sub
mov
push
xor
inc
mov
mulb
push
cmp
pop
xchg
xchg
cltd
xchg
push
inc
iret
jno
sub
int3
push
push
jle
adc
imul
pop
xchg
cld
js
mov
push
loope
data16
adc
dec
cwtl
mov
loopne
roll
mov
sub
aad
in
popf
mov
sub
movsl
gs
dec
push
push
fucom
fs
cmpsb
jecxz
outsb
pop
je
xchg
std
pop
sbb
out
pop
shl
je
dec
ss
inc
inc
or
mov
cs
daa
das
jmp
cs
or
out
ret
xor
popf
les
mov
repnz
or
flds
add
mov
push
and
or
enter
jae
nop
adc
loopne
push
push
stos
cs
mov
xor
cli
dec
je
mov
mov
daa
jo
adc
add
dec
and
das
mov
cmp
xchg
dec
adc
mov
xlat
test
push
sbb
std
inc
cmp
inc
out
mov
fcoml
lahf
mov
dec
jno
sbb
mov
xor
push
and
adcl
and
jg
in
inc
mov
fs
pop
mov
pop
inc
test
int3
push
mov
pop
scas
nop
mov
push
push
hlt
pop
fucomip
push
pop
es
dec
cmp
mov
add
lock
dec
mov
mov
xchg
mov
jle
xor
dec
lret
pop
xor
ffree
or
fadd
dec
xor
arpl
xor
pop
or
lock
jnp
jge
icebp
shrb
mov
scas
cmp
scas
mov
adc
rcll
jmp
dec
into
out
jge
dec
xor
and
mov
inc
adc
out
cld
stos
in
rorb
sub
sbb
ret
movsb
ljmp
inc
shlb
addr16
add
ljmp
in
test
xchg
arpl
pop
cmp
xchg
or
pop
loope
pop
lock
jb
jb
loop
loopne
pusha
xchg
notl
xchg
jbe
or
dec
add
adc
pop
fstpl
pushf
sub
fnsave
movsb
or
mov
sub
jecxz
adc
add
adc
aaa
jg
insl
add
and
sti
push
adc
xor
stos
pop
jb
lahf
lds
mov
ja
push
add
arpl
dec
mov
sub
ja
jns
fdivr
scas
into
imul
xlat
mov
cli
out
jg
adc
mov
cmpsb
int3
xchg
movsb
inc
mov
mov
out
repnz
loope
bound
je
insb
push
or
adc
mov
stos
sahf
sti
add
mov
ja
push
aaa
test
inc
pop
ljmp
rolb
dec
js
adc
adc
stc
sbb
dec
push
and
or
out
inc
out
jmp
xor
cmp
movsl
xchg
movl
mov
mov
into
insl
inc
ljmp
hlt
icebp
hlt
push
dec
jns
push
dec
mov
add
arpl
loope
add
adc
nop
lods
sarl
pop
arpl
ret
mov
lea
adc
pusha
sbb
dec
out
jmp
pop
adc
repz
shll
addb
test
mov
jge
outsb
cs
jp
ja
mov
fnsave
cmp
push
cmp
xor
lds
lret
pop
add
outsl
mov
xchg
scas
mov
xchg
arpl
pop
adc
xchg
jnp
lahf
insb
adc
and
cmp
xchg
xchg
loop
loop
aaa
bound
sbb
and
pop
dec
dec
test
stos
movsl
ljmp
ret
push
jns
arpl
xor
cld
cmpsl
xor
out
popf
ja
rcll
cld
sbb
fiadds
cmpsl
lcall
int
xchg
sub
push
xor
iret
mov
jle
cld
push
sbb
jns
adc
ret
add
test
add
jno
fldt
push
adc
dec
stos
pop
push
scas
sbb
mov
mov
mov
das
push
mov
or
pop
cltd
jno
mov
insl
adc
cltd
xor
std
rcrl
xor
and
fnstenv
xchg
xor
sub
xchg
popf
xchg
fwait
ljmp
aam
imul
sub
lret
faddl
mov
inc
and
pandn
lock
fwait
je
ret
sub
sub
das
scas
ficompl
out
or
jb
mov
idivl
test
jae
mov
cmc
gs
push
out
mov
push
popa
push
subb
dec
push
adc
stc
jne
cmpxchg
lods
lahf
into
loopne
or
and
or
and
push
push
xlat
xor
ljmp
jo
lahf
fucomp
pop
and
or
pop
sahf
mov
mov
mov
jge
ja
cmp
cmpsb
lret
adc
pushf
andl
mov
lods
outsl
mov
ljmp
lahf
outsl
xchg
aam
fdivrp
xchg
mov
xchg
fwait
cmp
sbb
ret
add
and
fldcw
sbb
inc
inc
sbb
mov
mov
xor
inc
mov
or
incl
sub
data16
cwtl
pop
clc
notl
iret
sub
mulb
ficompl
sahf
je
insb
cmp
sbb
iret
mov
or
pusha
mov
fsts
push
xchg
and
shl
sahf
lods
mov
add
je
ret
and
dec
sub
inc
ljmp
outsb
popf
and
insb
xchg
dec
cwtl
sbb
mov
inc
dec
in
in
call
gs
or
in
cld
jecxz
adc
fwait
and
push
mov
scas
pop
pop
push
test
inc
test
mov
sub
jnp
mov
mov
aad
std
ja
dec
insb
adc
fwait
push
push
fists
imul
test
arpl
mov
lret
pop
mov
inc
mov
add
sarl
xor
imul
pop
sub
fdivrs
mov
mov
sar
pop
cmp
mov
inc
xchg
jmp
pop
loope
or
imul
sbb
aad
jl
push
xlat
cmp
in
xchg
je
rorb
jo
xor
jb
test
mov
iret
cmp
xchg
es
in
shlb
fldcw
std
hlt
or
mov
rcrl
ret
push
inc
stos
push
jns
push
rcll
push
mov
xchg
je
nop
fwait
jecxz
out
ljmp
mov
lods
cmpl
insl
mov
xor
add
inc
push
gs
sbb
lods
xor
popf
aas
pop
mov
xor
ds
sbb
mov
mov
lods
rcrl
ret
jl
fucomi
jge,pn
mov
pop
cmp
fstl
mov
inc
out
push
xor
and
mov
or
and
xchg
imul
xchg
loopne
fcomps
mov
das
dec
dec
lret
enter
aad
sub
fiaddl
inc
in
jae
sbb
icebp
xor
daa
lds
push
rcrl
pop
xchg
addr16
jp
sbb
call
imul
mov
in
sahf
mov
je
repnz
jmp
addr16
aam
or
adc
xchg
add
scas
int
lea
sub
pop
mov
inc
repz
adc
ret
xchg
sbb
movsb
pop
xchg
bound
daa
jg
push
test
xlat
popf
mov
push
loopne
mov
test
add
mov
mov
xlat
push
and
and
shl
adc
push
out
mov
in
repnz
and
mov
shlb
insl
insb
pusha
cmp
pop
in
pushf
imul
lds
aad
sbb
lret
lahf
lret
inc
in
data16
mov
add
xchg
cld
xchg
add
fwait
rcrb
insl
out
out
mov
movsb
and
inc
cmp
ljmp
lret
ret
push
in
mov
sub
iret
mov
aam
hlt
push
dec
mov
xor
pop
mov
shll
or
adc
pop
fidivl
dec
jns
es
es
aam
insl
loop
jmp
shlb
out
adc
gs
xor
fwait
jge
push
and
test
push
lock
mov
pop
adc
jae
pop
push
mov
movsl
mov
in
pushf
mov
leave
fcoms
data16
dec
fmul
stc
roll
imul
aas
xor
push
in
jbe
gs
out
aad
orb
mov
mov
mov
out
jp,pn
nop
adc
in
push
fistpll
daa
pusha
or
loop
or
mov
jae
mov
sarl
repz
call
cmpsb
adc
and
sbb
out
cmp
aam
mov
sbb
push
add
or
loope
jg
inc
lret
js
sahf
les
nop
cmp
adc
push
mov
repnz
out
rolb
jp
mov
cli
adc
or
in
insb
pop
push
pop
fmulp
xchg
int3
fsubl
lods
add
aaa
push
push
inc
lahf
push
inc
mul
inc
lret
inc
stos
mov
push
icebp
pop
or
jno
cld
mov
xor
mov
ljmp
rcll
fcos
mov
ja
roll
mov
out
sbb
and
inc
jle
jmp
mov
push
or
mov
roll
lcall
pop
mov
adc
inc
roll
jecxz
stos
lods
pshufw
jp
stc
lret
cmp
push
inc
push
push
popf
out
rol
push
mov
insb
outsb
and
mov
mov
jnp
add
gs
sub
loopne
subb
je
divl
cltd
ret
enter
leave
push
test
sub
pushf
fnstcw
stos
pop
ljmp
shrb
pop
and
sub
fucom
mov
add
push
fdiv
lods
call
sub
movsl
mov
cmpsb
dec
icebp
xchg
in
push
popf
dec
xor
adc
in
pushf
cmpsl
iret
stc
rclb
call
cmp
subb
push
xor
jl
shr
fildll
out
imul
or
mov
rorl
add
clc
mov
test
std
scas
movsl
pop
das
pop
fldt
dec
xor
xchg
add
je
jno
mov
mov
inc
lds
mov
dec
add
cld
and
fbstp
jecxz
push
lods
sub
out
push
cmpsb
xorb
sbb
xlat
pop
push
outsb
das
and
int
jge
test
jno
imul
lea
arpl
ret
imulb
or
ss
add
clc
push
loopne
xchg
cmc
dec
add
ss
ffree
pop
loope
mov
dec
and
mov
scas
ds
fisttpll
adc
test
jb
test
aaa
inc
mov
ror
mov
or
lods
push
dec
icebp
cmc
xlat
loopne
or
cmpsb
jl
adc
mov
jl
shr
shll
or
mov
in
mov
and
mov
sub
daa
int3
mov
test
addb
data16
dec
mov
adc
push
pop
int3
mov
cld
loope
jo
dec
mov
add
push
or
or
ja
call
add
mov
stos
or
aas
in
cmc
movsb
or
je
sbb
sbb
jnp
mov
cld
xchg
repnz
mov
out
xor
sub
repnz
cs
int3
jecxz
cmpsl
jl
stos
int
inc
adc
mov
cmp
icebp
xorb
jl
xchg
divl
sbb
and
mov
sub
mov
test
ret
aad
lock
push
daa
xor
loopne
push
ffree
fs
mov
outsb
dec
bound
out
jl
icebp
push
out
dec
dec
mov
test
and
cmpsb
dec
add
test
loop
data16
xor
in
les
call
fcoml
adc
mov
inc
imul
xor
mov
jne
add
cltd
cmpsb
sbb
out
push
xchg
sbb
push
mov
ljmp
in
mov
int
frstor
mov
rep
dec
add
lcall
and
adc
mov
xorl
jmp
stos
cmp
inc
pop
int3
fists
add
rorb
int
stc
push
enter
inc
sub
cli
pop
stos
mov
or
jae
jmp
mov
fwait
clc
out
ret
rcrb
push
fdivl
imul
ret
not
or
dec
add
clc
dec
shlb
call
or
nop
pop
xchg
bound
jp
xchg
fidivrl
pop
lea
int
push
lahf
stos
nop
aam
mov
xor
xchg
cmpsb
xchg
call
inc
add
and
ficoml
arpl
lods
inc
dec
cmpsl
pusha
and
clc
nop
dec
pop
inc
ljmp
std
andb
jbe
sub
adc
push
pop
jmp
in
push
imul
ljmp
push
cmpb
lock
mov
lods
shrl
mov
fsubrl
sub
mov
inc
lods
dec
sub
mov
jecxz
out
scas
call
add
mov
stc
icebp
aad
and
dec
cmp
sbb
int3
cltd
mov
xchg
mov
jno
cmp
sub
adc
or
js
scas
xchg
xchg
xlat
leave
leave
std
mov
int3
cmp
loop
fsubr
or
js
pop
jnp
shlb
and
dec
push
cmpsl
aas
dec
inc
or
xor
jb
stc
cmp
das
jle
pop
cwtl
cli
pop
push
test
cmp
out
jle
xor
cmp
arpl
int
adc
lods
pop
mov
adc
or
adc
mov
dec
inc
mov
ds
fisubs
dec
inc
aas
sbb
pop
scas
push
jno
out
cmp
out
jne
loop
pusha
sti
pop
mov
sub
cmpsl
loop
mov
and
mov
cmp
xchg
int3
xchg
test
into
jo
cwtl
add
or
out
mov
inc
jmp
rcrb
ljmp
pop
xor
cmp
pop
fiadds
adc
jnp
adc
cmpl
add
out
jmp
and
cltd
dec
repz
dec
add
loopne
mov
subl
jmp
sarb
dec
imul
rorb
push
push
mov
outsl
fidivs
movsb
mov
pusha
cmpsb
rol
test
or
push
outsb
repz
loop
inc
xor
fiaddl
and
and
cltd
pusha
cmp
lret
sbb
subl
mov
cmp
jns
fwait
mov
and
dec
add
fcoms
loope
int3
xchg
xchg
das
loope
movsb
pop
sar
add
xor
mov
or
cmp
into
shrb
xor
es
stos
xor
stos
or
add
mov
xlat
scas
imul
mov
mov
mov
cli
lret
and
cs
lods
pop
dec
dec
push
cmp
and
fnstsw
js
cld
loope
pop
out
jecxz
aad
sub
imul
lea
imul
mov
mov
pop
jo
insl
imull
insb
mov
outsl
dec
sbb
jg
cmp
sbb
inc
sarl
cmp
fldl2t
in
out
mull
push
mov
cmp
cmpsl
jb
fcomi
xor
call
leave
mov
lret
fisubrs
popa
inc
inc
cmp
pop
or
scas
jg
adc
sub
imul
jmp
leave
rorb
mov
or
test
jb
ljmp
sub
lcall
mov
dec
add
negb
inc
pop
mov
push
cwtl
subl
xor
pop
push
sub
in
cmpsl
jb
inc
inc
dec
mov
imul
inc
xchg
dec
scas
add
sbb
jecxz
and
xor
es
rcll
inc
addr16
loope
sub
shlb
sub
movsl
push
aad
imulb
cs
iret
or
xchg
movsl
xchg
xorl
popf
daa
rol
adc
ja
pusha
mov
popa
pop
jmp
das
outsb
pop
adc
inc
or
loope
pusha
push
push
stos
mov
mov
rorb
or
fisubrs
xor
mov
stc
stos
les
insb
xchg
inc
jno
clc
adc
xor
call
mov
fwait
sbb
outsl
loope
xor
add
test
mov
idivb
lcall
push
scas
or
lea
icebp
or
scas
scas
xor
in
je
data16
iret
insl
push
imul
shlb
in
loopne
xchg
fimull
repnz
cmp
and
ss
or
push
jo
jne
pop
push
scas
out
lahf
inc
test
sub
xor
loope
imulb
aaa
xlat
outsb
repnz
push
sahf
test
js
out
and
data16
and
cmp
movl
movsb
in
add
mov
mov
loopne
mov
call
call
fcoml
push
xor
out
lds
ret
out
pop
cs
movsl
data16
inc
dec
test
adc
sbb
bound
mov
and
fbstp
stos
lcall
jnp
jb
popf
jns
xchg
adc
mov
test
aam
hlt
or
popa
xchg
test
or
enter
sbb
cmp
mulb
fiaddl
mov
decl
dec
fnstsw
loop
mov
pop
pop
add
adc
sahf
fwait
jge
add
int
mov
icebp
adcl
rcrl
sti
xchg
sti
stc
adc
ds
or
fs
std
xchg
lret
sti
adcl
ja
icebp
scas
pslld
add
sub
cmc
out
popf
popf
xchg
adc
or
mov
jecxz
test
arpl
inc
pop
sub
out
sbbb
cwtl
inc
movsl
xchg
adc
arpl
es
cmp
inc
cmp
mov
mov
jns
data16
pop
mov
out
push
call
loope
jle
push
arpl
push
pushf
bound
inc
negl
cmp
sub
sbb
cmpl
mov
std
dec
xchg
inc
aas
and
movsl
push
aaa
push
pushf
xchg
jbe
lret
dec
adc
pop
xor
addb
sti
adc
shrb
unpckhps
rcl
test
sub
push
roll
adc
xor
jp
rcr
mov
inc
mov
add
and
pop
int
sub
mov
push
mulb
xor
xor
or
testb
insl
cmpsb
sar
sarl
pushfw
pop
pop
fdivrl
jge
les
xchg
cwtl
not
mov
outsl
dec
fdivr
loope
adc
inc
cmc
inc
subb
inc
cmp
das
and
jae
pop
jnp
inc
shlb
jge
xor
dec
pop
sbb
push
ffreep
movsl
pop
inc
fdivrp
jns
adc
addr16
and
sub
in
push
psubsb
out
inc
loope
adc
dec
xchg
rolb
adc
cmpsl
loopne
lods
pushf
shl
ret
mov
sub
cltd
or
xor
or
mov
repz
xor
lock
lods
test
inc
das
adc
sub
xor
sub
daa
mov
out
pop
into
outsl
adc
jecxz
daa
and
ficompl
sub
in
lret
into
sbb
add
into
popa
pushf
mov
ret
pop
ja
and
rcrb
or
push
rclb
and
push
sub
add
insb
adc
mov
lods
and
or
mov
xchg
cmpsb
outsb
test
icebp
mov
lret
push
mov
gs
cld
dec
icebp
push
stos
test
fiadds
mov
setns
fs
sbb
loopne
dec
sbb
push
clc
mov
sbb
mov
aas
jnp
sub
popf
jl
push
pop
sub
mov
xchg
xchg
jb
pop
sti
dec
mov
lock
xchg
xchg
jbe
movsl
fwait
jno
mov
and
and
and
lahf
ficoms
adc
hlt
jmp
mov
jp
mov
stc
mov
cli
das
std
int3
dec
cmp
jbe
mov
in
in
xchg
in
adc
iret
lahf
add
shlb
jbe
xchg
inc
int3
mov
bound
sub
xchg
insb
jno
icebp
inc
out
mov
sub
dec
cmp
sar
pusha
inc
sub
and
xchg
in
sbb
in
in
inc
sub
jno
cld
jns
or
loope
comiss
pop
xor
or
fdivrs
cwtl
dec
hlt
pop
dec
mov
push
repnz
xor
pop
xchg
mov
mov
cmp
repnz
leave
movl
fsubs
adcl
loop
std
aas
dec
mov
iret
xor
or
or
pop
jo
push
ret
mov
adc
sub
idivl
push
dec
loope
ja
cli
mov
call
dec
dec
mov
data16
inc
pop
lret
icebp
pop
cmp
clc
sbb
add
je
mov
adc
pusha
push
int
inc
dec
ret
in
push
xchg
jge
aam
cwtl
lods
push
dec
xchg
ss
dec
xor
adc
scas
enter
mov
sub
loope
sub
insb
push
or
xor
fwait
sbb
cwtl
sbb
xlat
cmc
repnz
mov
jecxz
cmp
ret
jmp
push
mov
ret
jb
inc
orb
dec
test
in
mov
lods
ret
iret
adc
out
test
mov
imul
mov
push
daa
cwtl
in
mov
mov
stc
inc
incb
mov
push
mov
scas
cmpsl
mov
imul
bound
aas
stc
mov
out
sarl
stc
xchg
mull
push
popa
xchg
mov
pop
shrb
sti
aaa
cmp
outsl
xor
push
push
or
outsl
sahf
adc
dec
lods
and
int
lods
lahf
aam
hlt
pop
jno
fucom
mov
and
fldcw
xor
mov
int
or
and
sub
test
test
jae
aam
idivb
lcall
movlps
mov
jl
movl
ret
out
add
incl
insb
inc
movsl
mov
jne
xchg
sar
leave
outsl
push
pop
or
pop
dec
fistpl
mulb
lds
cmp
pop
pop
test
pop
leave
test
dec
imul
pop
or
xor
fisubrs
and
jmp
lods
pop
inc
sbb
push
ss
mov
adc
testb
adc
xchg
xchg
in
or
ret
cwtl
or
icebp
jns
movsl
sub
cld
mov
jae
xchg
movaps
sahf
push
call
jmp
jmp
addr16
sbb
aad
divb
cmpsl
gs
orb
std
push
fsubl
adc
lret
adc
int3
xchg
pop
data16
or
push
outsl
dec
xchg
or
call
jp
mov
sbb
xor
dec
nop
dec
xor
pop
pop
add
dec
jbe
inc
mov
push
movsl
push
mov
or
das
sbb
cmp
pslld
mov
xor
inc
xchg
xor
cmp
icebp
ret
test
stos
int
xorl
add
movsl
ja
adc
sti
fcmovbe
push
loopne
je
hlt
popf
dec
xchg
add
xchg
cmpsl
cmpsl
push
fs
push
mov
leave
cmpsl
push
and
sub
mov
daa
and
cmpsb
adc
and
add
and
sbb
rcll
fst
pop
outsb
arpl
test
lcall
xlat
xchg
rorl
mov
in
push
push
cmp
mov
or
inc
cs
cmp
stos
or
dec
mov
add
in
fdivrl
add
mov
hlt
je
ficoms
mov
push
fcoms
insl
dec
sub
cmp
jne
int
lods
daa
xchg
jbe
cmc
repz
jo
adc
loopne
pusha
outsl
mov
mov
push
loop
cmpl
andl
push
cs
xchg
mov
jne
mov
dec
cmp
test
iret
lcall
mov
pop
lret
sbb
add
mov
add
aam
shl
mov
xchg
jmp
mov
fidivrl
shrl
mov
push
dec
ret
mov
frstor
cmpsb
mov
fbld
or
out
mov
jecxz
popf
jnp
or
scas
movsb
mov
aas
popf
fmul
ret
addr16
into
cmp
dec
ds
fisttps
je
inc
or
test
lret
or
and
mov
xchg
jecxz
add
jbe
mov
add
loop
jo
adc
rolb
stc
jp
xchg
fdivs
ds
std
pop
data16
fs
aaa
test
adc
sub
mov
movsl
fidivl
mov
pop
pop
jbe
ret
add
push
pop
jns
jnp
test
inc
sub
and
shlb
adc
fadds
mov
mov
xchg
mov
in
mov
xchg
xchg
or
fwait
shll
adc
cmp
outsb
inc
jg
mov
andl
jb
pop
mov
rcr
mov
std
xchg
inc
test
mov
add
lods
xor
mov
cmpsl
cs
mov
imul
adc
cs
call
inc
shrb
cmc
pusha
das
in
arpl
loopne
lods
lods
inc
ljmp
xchg
sbb
movb
test
lods
xchg
fcomps
orl
push
ljmp
sar
icebp
or
andb
addl
scas
adc
js
pop
adc
xchg
out
daa
sub
pop
sbb
ret
in
pushf
and
pop
cmp
cmp
outsb
out
daa
call
imul
push
cmp
test
inc
jle
mov
sub
mov
fildl
push
dec
xchg
movsl
and
les
inc
adc
fsubl
mov
push
sub
jo
ljmp
jecxz
repz
adc
loop
sub
xor
fs
cmp
add
inc
sbb
xchg
lea
roll
and
xchg
sahf
mov
sub
inc
jb
pop
js
pop
int3
mov
mov
mov
fstpt
or
adc
xor
int
or
sub
ss
xor
test
pop
in
iret
out
push
pop
push
addr16
pushf
push
subb
xchg
dec
nop
fstps
pop
lret
push
inc
add
add
jle
push
icebp
iret
addr16
jns
mov
sbbb
pop
push
pop
scas
cmp
sub
fimull
mov
cmpsb
sti
pop
mov
test
mov
sysexit
dec
scas
xchg
mov
push
fmuls
push
sbb
jae
lds
push
pop
stos
stos
inc
pop
mov
mov
mov
test
ret
and
mov
enter
mov
cmp
out
mov
add
mov
mov
fucomip
cmpb
pop
ljmp
mov
mov
pop
mov
push
insl
cli
push
bound
jb
imul
popf
roll
in
jnp
mov
std
jb
mov
jmp
data16
cmpsb
loope
aam
cmp
xor
fstpl
mov
sti
adcl
inc
cs
pop
cmpsl
and
es
pop
jbe
xchg
mov
lret
jo
std
movsl
adc
adc
inc
fisttps
dec
jl
or
pushf
mov
push
arpl
dec
push
arpl
xchg
daa
loopne
scas
pop
push
sub
nop
xchg
icebp
sbb
sbb
jno
sub
fidivrl
or
inc
mov
dec
mov
aas
mov
dec
stos
xor
shl
fwait
dec
add
cmp
fsubs
sbb
lods
mov
xchg
xlat
mov
pop
adc
xor
mov
jmp
lds
sub
sub
pusha
dec
pushf
ret
shr
out
ss
insb
adc
fchs
or
divl
or
push
jp
cmp
or
adc
add
mov
pop
cmp
insl
loope
sub
xchg
sti
fisubl
stos
loope
out
sbb
cmp
inc
mov
jae
pop
or
push
outsb
imul
imul
inc
dec
ficompl
pop
test
mov
imul
pop
fucomi
daa
jb
sbb
mov
cwtl
mov
popf
pop
flds
movsl
shrb
fwait
add
sbb
dec
mov
lcall
lcall
pop
cmp
cmp
or
out
lahf
adc
stc
sub
jns
mov
inc
in
xor
mov
push
pop
mov
shlb
test
mov
adc
repnz
inc
dec
and
in
xor
cli
or
dec
imul
call
xor
jecxz
orl
mov
cmpsb
call
outsl
sahf
jns
int
push
div
mov
add
mov
push
push
push
fdivl
mov
mov
dec
pop
jmp
and
add
or
dec
fnstsw
bound
push
mov
sub
jmp
pop
push
ljmp
jecxz
push
push
mov
loopne
leave
shlb
inc
or
jo
aad
jo
nop
shlb
mov
push
or
xor
dec
cmp
out
out
mov
cmp
mov
in
out
shll
movsb
out
or
pop
push
addl
mulb
push
xlat
mov
dec
mov
xchg
pop
push
and
or
les
mov
stc
jae
push
pop
rcll
aaa
mov
jge
stos
xchg
fmull
mov
push
push
cmp
jae
push
aam
sti
xor
fisttpl
jecxz
loope
lds
in
sbb
push
shrb
xchg
rep
push
pushf
fsubrs
jbe
adc
mov
jge
pop
in
mov
popf
scas
fs
sbb
out
cmp
and
outsb
adc
enter
jo
gs
daa
dec
lods
cwtl
sarb
flds
scas
repnz
fmull
add
mov
repnz
or
mov
mov
dec
mov
lahf
xchg
sbb
ficoml
push
daa
sbb
mov
js
add
fwait
pop
xchg
jmp
daa
icebp
xchg
mov
adc
cmp
loopne
inc
push
cmpsl
int3
push
and
addr16
orps
dec
sahf
mov
sub
sahf
xchg
aad
insb
in
loop
add
and
fcompl
push
cwtl
mov
lret
mov
test
inc
sarl
out
mov
inc
push
mov
mov
jg
or
mov
fisubrl
je
pop
stos
in
das
orb
push
fists
lods
stos
repz
add
push
fs
inc
pop
movsb
push
and
mov
cmpsb
ja
add
out
testb
cmp
addb
lock
lock
inc
xchg
mov
jle
mov
mov
fcmovnu
aad
dec
push
cld
mov
enter
jge
and
adc
aam
imul
sub
fs
inc
sub
xor
add
jo
dec
jae
cmp
and
push
call
cmpsb
add
int3
data16
ret
out
ss
push
cs
out
orl
jecxz
push
pop
loop
sub
jo
lea
dec
aam
imul
cs
xchg
outsb
enter
pop
out
lods
mov
fcmovnb
xchg
lds
and
repnz
movsl
in
lock
lds
icebp
pop
loope
in
lcall
sbb
cmp
adcl
and
sbb
pushf
fisttps
pop
rorb
adc
sbb
es
jns
cld
mov
xchg
mov
loope
test
sbb
in
sahf
mov
xor
data16
mov
dec
out
jge
out
ret
and
aad
mov
ret
ret
mov
movsb
jp
adc
mov
out
ja
push
mov
js
push
pop
xor
negb
out
xor
jae
scas
cwtl
jb
jne
sbb
fwait
ret
adc
aad
pop
dec
xor
fimuls
hlt
xchg
mov
inc
aaa
ret
stos
or
push
icebp
les
sub
mov
and
inc
sbb
fbld
mov
xor
nop
adc
mov
mov
in
mov
jbe
xchg
jne
pop
clc
cmc
lock
dec
lods
addr16
cmp
sub
push
movsb
xor
sar
test
mov
sub
add
push
in
cmc
aam
mov
into
sahf
xor
and
lods
push
sbb
stos
pusha
jl
mov
subb
add
lret
add
addr16
jmp
jnp
mov
push
cmpsl
cwtl
mov
cmp
adc
pushl
adc
shll
rolb
cld
test
ds
sub
push
xchg
sarb
imul
in
xor
lods
test
lea
sbb
push
dec
pop
and
imul
vmovdqa
pop
in
push
ffreep
ret
jno
call
imul
xchg
push
imul
out
pop
outsb
xchg
push
fcomps
and
stc
dec
push
and
jmp
mov
in
scas
xchg
or
lahf
push
push
xchg
js
and
xor
mov
add
or
add
mov
out
pop
push
clc
fildl
popa
dec
nop
dec
jl
daa
sbb
std
pop
daa
inc
sub
lret
dec
fstps
dec
syscall
and
mov
or
or
std
dec
push
jbe
push
pop
mov
add
fsubl
mov
push
add
xchg
adc
dec
mov
dec
cmc
adc
xchg
jg
push
sar
and
jnp
pop
mov
cmp
jo
sub
stos
inc
push
imulb
lahf
add
insb
sub
pop
xor
cltd
lret
negl
adc
push
push
popa
mov
sub
movaps
ficoms
cwtl
movsb
push
pop
pusha
mull
aas
mov
cmp
rol
inc
pop
cld
imul
sub
subl
xor
mov
push
pushf
addr16
into
dec
stos
clc
jmp
into
mov
inc
mov
hlt
ficomps
xchg
push
adc
nop
mov
iret
mov
aam
and
or
xacquire
loopne
push
addr16
ret
adcl
jnp
nop
jb
or
ss
pop
mov
mov
repz
cmp
lret
out
insb
mov
and
imul
hlt
in
mov
out
ljmp
adc
dec
pop
mov
xchg
and
sbb
aam
scas
out
jl
test
call
jp
dec
outsb
mov
push
aam
push
lea
mov
loopne
stos
ss
or
imulb
sbb
push
loop
and
test
jb
jb
jg
cmc
pusha
or
mov
xor
push
and
stos
test
inc
into
push
cmp
es
repz
imul
dec
mov
icebp
cmpsb
negl
lret
pop
outsb
sahf
cmpsl
mov
mov
inc
ret
mov
movsb
popf
xchg
push
scas
aam
movsb
xchg
adc
jmp
sbb
lea
dec
mov
and
xor
ljmp
dec
mov
stos
and
imul
daa
test
mov
jae
mov
pop
jns
inc
mov
les
sbb
dec
fdivrs
xor
mov
mov
lods
ja
cmc
and
cmp
loopne
cmp
jne
inc
cltd
dec
xlat
pop
or
xchg
ds
xchg
xchg
xchg
dec
cmpsb
xor
xchg
popf
ficomps
push
jo
add
inc
fwait
mov
sahf
cwtl
add
mov
imul
fdivr
adc
popa
or
test
and
shr
push
dec
pop
clc
jge
push
mov
dec
sub
gs
push
popf
rolb
shr
mov
leave
cwtl
out
sub
mov
lods
jl
add
lret
mov
jns
in
jb
lods
xor
xor
sub
mov
cmpsb
pusha
jg
pop
nop
xchg
inc
mov
pop
add
out
jg
mov
push
jge
lcall
push
push
adc
roll
mov
fidivrl
je
push
pushf
pop
cmp
or
push
ret
fildl
adcb
and
mov
inc
xchg
scas
fcomps
aam
pmulhuw
dec
loope
pop
rolb
test
dec
adc
push
aaa
lea
mov
push
sub
xchg
dec
cmpl
adc
les
icebp
pop
xchg
xlat
lahf
addr16
das
sti
mov
xchg
lock
lret
cmp
jbe
test
mov
incl
mov
mov
loop
es
push
call
aaa
loop
cmpsb
sub
xchg
cmpsl
shl
push
aaa
sti
insb
cmp
or
mov
or
in
stc
pop
js
movsl
mov
adc
mov
add
push
xchg
jb
sub
dec
in
stc
mov
or
into
in
rolb
pop
std
jecxz
mov
faddp
or
rcrl
mov
xchg
fimull
pusha
mov
lret
cmpb
dec
fcompl
icebp
dec
mov
jp
pop
dec
or
adc
ror
int
xor
xchg
shrl
mov
mov
and
xor
push
dec
push
xchg
sbb
adc
cmpsb
pop
sub
roll
outsl
cld
jnp
mov
xor
rclb
cltd
add
repnz
mov
or
addr16
rcrb
inc
out
cmp
fsubl
mov
shll
lret
aas
jmp
add
dec
in
dec
mov
rcl
mov
adc
adc
push
mov
jmp
movsl
leave
add
adcb
pusha
hlt
mov
shrl
in
ror
mov
cld
pop
fwait
jmp
rcrl
dec
add
ljmp
iret
pusha
enter
sbb
mov
test
xor
outsb
aas
out
inc
sbb
inc
push
and
in
fidivl
dec
add
xchg
mov
jns
cmp
push
fldz
sub
rep
dec
loopne
cvtdq2ps
xchg
push
jb
pop
mov
scas
cmc
clc
out
mov
es
rcr
outsl
add
imul
mov
mov
mov
sbb
lret
aam
in
gs
shll
mov
xchg
aaa
jecxz
sti
rcrb
xchg
arpl
cmpsb
fwait
xchg
lods
dec
sti
stos
or
enter
int
push
popa
clc
sbb
sub
aam
test
ror
sub
fadds
mov
push
arpl
mov
inc
out
vcvttps2dq
or
push
inc
pop
bound
leave
mov
cmp
cmc
sub
in
sub
jmp
mov
loope
or
xor
mov
cmpb
and
test
sbb
imul
xor
jo
cmp
adc
pushf
mov
mov
xorb
push
mov
add
fadds
stos
and
mov
dec
adc
inc
enter
bound
add
adc
fsub
fistpll
bound
icebp
sub
adc
pop
leave
cmp
inc
clc
jnp
pop
dec
fcmovnu
pop
ja
inc
pop
push
cld
xor
lcall
jae
lcall
push
or
inc
outsb
jo
gs
sub
imul
inc
xchg
fs
je
cmp
sbb
mov
adc
xchg
cmc
mov
mov
sahf
inc
pop
in
sbb
dec
shrb
and
xor
aam
push
pop
mov
mov
int
jbe
mov
cmpsl
cwtl
inc
jl
pushf
dec
ja
push
scas
lock
lods
xor
ss
inc
loope
push
push
inc
mov
adc
or
fs
push
pop
icebp
push
jnp
mov
rcll
pop
cwtl
ficoml
xchg
or
sbb
mov
inc
xchg
lahf
xchg
in
pshufw
cld
fimuls
xorl
shlb
push
mov
push
inc
movsl
es
dec
xor
cmp
pop
push
outsl
mov
stos
std
rorb
push
out
mov
push
mov
pop
and
pcmpeqb
jmp
icebp
mov
xchg
ret
fcmovnu
pop
repnz
ljmp
jb
adc
call
leave
mov
outsb
insb
inc
inc
fiadds
and
mov
bound
je
cmp
push
test
jno
ss
das
pop
lret
and
pop
cs
add
sbb
pusha
addb
dec
stc
mov
sub
out
adc
push
mov
add
mov
mov
loopne
mov
or
out
mov
out
sbb
imul
into
fsubrl
dec
mov
fdiv
adc
cs
mov
or
cwtl
dec
mov
out
in
js
data16
and
pop
fmul
pop
cmp
ret
add
std
or
mov
pop
in
adc
outsb
mov
ljmp
adc
pop
add
nop
xchg
loopne
mov
int
sti
or
cs
adc
lods
arpl
or
mov
dec
cmp
lods
imul
clc
and
clc
into
mov
inc
mov
in
push
out
mov
cld
inc
and
xor
mov
jp
das
repnz
mov
leave
cmp
pop
adc
incb
push
or
fstl
pushl
ret
pop
mov
addr16
adc
sbb
lods
dec
call
les
out
enter
sar
xchg
adc
test
push
xor
mov
out
setle
into
rcl
call
fadds
pushf
out
fisubrl
mov
mov
push
push
test
nop
dec
aas
lds
mov
fs
jle
out
mov
push
adc
sub
cltd
mov
out
mov
jl
push
imul
cmp
sub
and
leave
addb
das
mov
stc
xor
sub
in
leave
adc
pop
mov
cmc
call
js
pop
xor
push
int3
mov
inc
xor
lret
ja
jno
jle
insb
sbb
in
sub
pop
add
push
push
or
nop
mov
pusha
bound
sbb
xlat
jecxz
xlat
add
mov
in
insb
mov
jno
inc
jb
loop
mov
mov
stos
in
repnz
inc
cmc
in
jl
test
push
adc
cmpsl
pop
jmp
sub
dec
bound
sub
sbb
adc
stos
adc
sbb
shlb
out
pop
push
pushf
in
std
jp
xchg
jl
lret
out
jae
scas
sbb
inc
pop
ja
test
xchg
inc
jo
pop
sti
rorl
pop
adc
mov
dec
int
test
jae
jb
mov
mov
xchg
mov
sub
sbb
pop
addr16
aad
jne
fcompl
or
adcl
lea
es
sbb
add
push
into
mov
mov
fs
jle
adc
add
jp
fbld
cmp
dec
popa
mov
ret
ret
adc
cmc
mov
adc
rclb
jecxz
push
sbb
pushf
daa
jg
aad
mov
outsl
or
cmpsb
lods
or
push
push
cmp
adc
fwait
push
mov
push
fs
pop
leave
outsl
out
out
push
movsl
test
lea
mov
cmp
in
mov
incb
xor
pop
hlt
pop
sub
push
lods
cmp
mov
jp,pn
lret
add
xor
inc
sub
in
xor
xchg
out
add
push
movsl
and
ljmp
ss
xor
call
outsl
push
push
mov
pop
add
mov
scas
stos
daa
scas
cmp
in
dec
aaa
cmpsl
mov
jo
cltd
jne
sub
xor
into
jbe
pop
shll
xor
adc
xor
push
or
cmc
pop
mov
dec
bound
enter
fists
mov
lcall
hlt
pop
mov
cld
adc
xor
and
jmp
push
sbb
cmp
mov
and
mov
mov
and
inc
or
fsubs
lret
loop
pusha
push
sbb
hlt
scas
xorl
push
dec
fnstsw
fbstp
adc
adc
inc
xchg
out
jns
adc
xor
nop
jb
mov
mov
stos
in
sub
aam
cmp
jns
flds
xchg
rcrb
mov
adc
sbb
push
xchg
inc
stos
jg
mov
fcomip
int
sub
dec
pop
and
mov
ljmp
insl
aad
data16
push
decl
jb
mov
repz
or
mov
push
and
add
and
ror
imul
push
xchg
cmpsl
fstps
sar
rcl
dec
and
data16
mov
pop
testb
loopne
xchg
sbbl
insl
adc
dec
jnp
xchg
insb
pop
xchg
sbb
add
in
push
dec
ret
aad
test
sarb
push
mov
jg
inc
aaa
cmc
xor
std
popa
loopne,pt
fisttps
pop
mov
and
push
xor
in
mov
aas
and
fs
sub
aam
xchg
cmp
sti
pop
in
scas
notb
movsl
std
std
fmull
stos
aad
and
out
in
sti
lret
in
inc
sti
in
sbb
push
std
or
popf
xor
push
mov
pusha
pop
and
test
lcall
jmp
dec
insb
mov
pop
sub
out
jo
cwtl
xchg
stos
stc
cmp
out
jmp
ret
or
mov
mov
dec
inc
lret
lahf
inc
call
dec
add
mov
mov
sbb
jg
pushf
es
stos
cltd
xchg
shl
fwait
xor
or
aaa
sahf
aam
lea
dec
dec
fstp
jno
push
push
jecxz
dec
mov
adc
lock
test
sbb
psubsw
mov
jbe
aaa
push
push
inc
cmp
dec
fcmovbe
adcl
push
mov
ret
cld
cmp
sahf
lods
sbb
jl
and
mov
fldl
mov
pop
clc
mov
leave
imul
into
ljmp
sub
jnp
je
stos
cltd
pop
imul
fs
in
inc
fistpll
adc
fwait
xor
ficompl
inc
push
dec
js
jb
adc
add
push
jns
lock
jge
mov
test
mov
and
push
jg
repz
or
sbb
pop
lods
rclb
cmc
push
mov
sbb
cmp
nop
and
xor
fs
lods
sbb
shlb
ret
pop
xchg
inc
out
jno
movsb
xor
iret
int
mov
adc
test
sbb
inc
cmp
ljmp
lahf
sub
or
xorb
pusha
mov
out
aam
inc
fwait
movsl
sub
in
popf
jnp
aaa
or
add
movsb
pop
insl
aad
jl
loope
push
jnp
fbstp
jge
xchg
push
sbb
lea
jge
scas
sarb
push
fldt
dec
cmp
inc
cmp
push
pop
cmpsl
add
and
loop
jmp
popa
and
mov
cmp
sbb
movsl
xchg
inc
les
inc
mov
inc
stos
ret
jge
cwtl
addl
aam
jl
test
jle
or
outsl
je
sti
and
add
inc
ds
xor
or
jae
out
xchg
xchg
push
pop
xchg
subb
pop
lret
or
sub
sub
pop
sarl
cs
popa
inc
movsl
push
movsb
xchg
pop
stos
ret
sub
ljmp
push
push
jmp
sarb
jp
addr16
test
in
or
mov
or
xor
inc
fidivrs
sub
jg
loope
pushf
xchg
mov
dec
or
mov
pop
xchg
loop
dec
dec
mov
insb
xorl
pushf
jl
mov
mov
lcall
jne
and
adc
or
jo
sbb
push
notb
or
and
aaa
fbstp
and
adc
push
mov
cs
lahf
stos
cmpsl
push
cmpsl
daa
pop
sub
sbb
sahf
sarb
into
test
mov
addr16
lar
sub
aaa
push
mov
sbb
jmp
or
adc
std
pop
pop
stos
or
dec
xchg
adc
aas
hlt
jbe
cmp
fidivl
inc
and
into
mov
ficomps
mov
imul
data16
repnz
and
push
cmp
bound
xor
cmp
push
add
movsl
sbbb
xor
and
mov
ja
aam
dec
dec
fildll
mov
int
aaa
sub
out
mov
adc
push
sbb
jmp
ret
call
inc
inc
iret
xchg
xchg
or
es
mov
divps
mov
dec
test
and
sbb
insb
daa
mov
call
push
fadd
pop
or
rcrb
ret
dec
addr16
mov
cmp
adc
push
cmp
shlb
icebp
negb
fimull
fxch
sbb
push
dec
sub
ret
pop
cmp
ss
push
or
push
push
pop
icebp
pop
cmp
and
and
add
pushf
aam
adc
add
lods
xor
jo
es
rcrl
or
ja
mov
cmp
sbb
imul
mov
sub
bound
sbb
inc
sbbb
lods
loop
xor
mov
mov
shll
xchg
jb
jge
pop
mov
incl
out
test
data16
js
push
or
mov
and
scas
and
add
or
mov
fdivl
jge
repnz
mov
movsb
pop
inc
out
xor
inc
fdivl
xor
fnstenv
clc
xchg
ss
pop
adc
out
out
movsb
mov
push
das
and
repz
jg
mov
jg
push
dec
les
imul
sbb
rolb
mov
sbb
aaa
xchg
inc
cltd
lret
loopne
mov
insl
mov
xchg
fstpl
mov
adc
dec
out
lahf
sub
xchg
fldl
xchg
adc
or
clc
in
lock
psadbw
xlat
and
jbe
pop
dec
stos
sbb
jb
inc
pushf
xor
in
jne
sti
push
ja
xchg
lds
jg
and
cmpsb
sbb
cmc
adc
add
pop
rep
dec
inc
xchg
cmp
gs
ret
in
cvtps2pi
dec
jne
imul
insl
inc
insl
jb
adc
bound
jb
cmp
lea
push
outsb
filds
js
adc
xchg
imul
inc
xor
bound
mov
add
mov
pop
rcr
xchg
xchg
fistpl
pop
mov
adc
jecxz
lret
add
outsl
or
lret
ljmp
push
dec
add
sti
bound
push
dec
test
adc
mov
mov
adc
sub
pop
push
push
sub
xchg
pusha
adc
sub
mov
pop
mov
or
out
mov
xchg
mov
loope
pop
or
icebp
lret
push
or
loopne
pushf
sub
pop
pop
hlt
sbb
fsubp
jl
xchg
in
call
jecxz
arpl
scas
in
out
outsb
out
shrl
daa
out
jb
sbb
and
loope
jo
mov
sbb
and
fsubrp
scas
es
push
clc
sti
push
pop
jo
aam
into
inc
pushf
jge
mul
mov
arpl
cmc
ret
jg
cld
mov
out
sub
xor
cltd
int
cltd
inc
mov
les
je
repz
repnz
adcl
stc
clc
jbe
loope
jbe
push
jl
mov
dec
adc
add
pop
mov
jle
cmpb
jne
inc
out
pop
jecxz
mov
and
movsb
sbb
fdivrs
fisttpll
ja
insb
mov
int3
jle
test
cmp
xchg
mov
test
push
fildll
lock
pusha
mov
lods
sti
and
sub
lahf
jbe
dec
cwtl
jo
rorb
and
test
orl
dec
mov
cltd
insb
pop
adcl
mov
adc
aad
daa
sbb
aas
adc
lock
ret
mov
mov
mov
jns
mov
push
nop
add
or
mov
sarb
inc
push
push
jecxz
push
imul
sbb
push
out
andl
in
sub
and
mov
xor
test
adc
mov
push
imul
sbb
and
jns
std
xchg
jle
dec
or
mov
lret
rclb
xorl
jns
mov
and
and
adc
ret
mov
popa
scas
sbb
pop
push
insb
cmpsl
and
fwait
pop
sahf
push
fcoms
sub
fwait
mov
scas
cld
xchg
daa
inc
sub
ss
orb
push
lods
gs
mov
push
xchg
pop
mov
xchg
mov
dec
repz
dec
scas
cmp
sbb
out
sub
outsb
loop
xchg
pushf
ljmp
xchg
popw
add
adc
and
adc
imul
shll
into
fwait
in
xchg
push
lods
cmpsb
jb
cmp
es
add
fs
add
xorb
add
cmpsb
leave
mov
cwtl
mov
stos
push
cmp
rolb
in
in
daa
decb
inc
insb
mov
cmp
jbe
push
cmp
inc
xor
inc
xchg
xchg
into
and
sub
jno
xchg
mov
xchg
in
jbe
mov
cmpsb
push
cld
mov
into
adcb
mov
mov
pop
pop
pop
cmp
push
enter
inc
mov
cmp
ret
pop
xchg
and
in
push
xchg
lahf
adc
les
movsl
mov
xchg
cmp
push
sub
jb
sahf
into
dec
mov
leave
insb
push
cld
jl
cmp
sbb
jle
jns
sarb
sbb
sahf
movsl
dec
imull
sub
fwait
sub
int
aaa
stc
repnz
data16
pop
add
in
cmp
ljmp
rol
mov
inc
scas
mov
lods
and
daa
mov
cmpsb
add
lods
and
cmp
cmp
and
pop
data16
push
insb
cli
aaa
adc
icebp
insb
pushf
and
mov
cmp
dec
pop
adc
and
sub
push
adc
xor
lea
push
pop
push
mov
popf
mov
rcll
or
mov
xchg
or
es
add
pop
fldl
mov
pop
xchg
outsl
fiadds
push
scas
movsl
lret
and
push
jnp
sub
repnz
pop
xor
rorb
or
pop
shr
xor
dec
push
push
jmp
ds
insl
aaa
jno
dec
mov
xor
sub
test
test
ljmp
test
andl
push
popf
cs
ret
into
cmp
jecxz
in
hlt
lahf
push
aam
xor
lcall
fsin
in
in
daa
add
sti
xlat
iret
push
mov
push
cli
je
jno
popa
insb
cmc
lahf
jnp
sbb
mov
mov
fsubrp
dec
std
adc
push
xor
push
leave
lods
insl
into
adcl
cld
and
loopne
idiv
mov
xorl
arpl
leave
jg
lret
out
mov
imul
fildl
mov
out
test
cmpsl
cwtl
outsb
xchg
repz
push
xchg
dec
mov
imul
pop
loopne
adc
mov
mov
pop
and
xchg
imul
cmc
adc
inc
out
push
pusha
mov
movsl
arpl
push
pop
sub
fwait
iret
or
cwtl
js
mov
gs
nop
pop
push
cmp
xor
sub
out
add
aaa
jno
mov
xchg
into
rorl
mov
add
push
jns
iret
in
popa
loope
cmc
and
into
xor
adc
adc
fisubl
subl
mov
cmpsb
mov
fldenv
test
xorb
lea
lds
push
test
mov
sti
enter
mov
in
mov
mov
notb
and
inc
cmovle
inc
sub
cmp
dec
pushf
cmc
ja
divl
or
ficompl
inc
adc
sbb
les
xlat
mov
add
lods
inc
mov
or
push
scas
das
or
roll
out
mov
push
es
nop
sbb
insl
fs
and
fiaddl
xchg
fcomi
jnp
out
cli
mov
pop
fimuls
push
add
jecxz
cld
je
cmp
fs
inc
lcall
mov
jg
in
out
lock
ffree
loope
jnp
jg
inc
mov
cwtl
adc
pusha
pop
sbb
xor
mov
ret
pop
gs
push
data16
mov
jle
imul
repnz
leave
sbb
adc
in
test
leave
iret
aas
and
jo
hlt
pop
dec
addb
test
daa
cmpsb
push
insl
popf
rcl
insl
cwtl
sarb
xchg
sbb
mov
vshufpd
xchg
push
cltd
push
fiaddl
mov
ljmp
sbb
enter
es
movsl
jg
cmovns
insl
lcall
outsb
push
imul
xchg
push
cmpl
sbbl
daa
ljmp
push
cmp
in
ss
insb
mov
dec
mov
arpl
bound
aas
push
or
repz
insb
roll
mov
ret
xchg
rolb
aaa
ja
mov
out
icebp
out
adc
cmp
mov
add
xor
fmuls
dec
jecxz
jecxz
dec
ret
add
mov
or
or
pop
jae
or
inc
mov
adc
xchg
sub
mov
out
jp
or
sbb
icebp
repz
in
inc
adc
setle
cmpsl
push
inc
adc
mov
jle
popa
mov
xlat
jb
inc
scas
in
subb
xchg
mov
xchg
dec
leave
dec
adc
outsl
adc
outsb
rorb
sub
inc
mov
mov
ret
lea
or
mov
in
das
push
mov
mov
sub
jecxz
mov
fsubr
jmp
movsb
or
or
ficoms
and
xor
cmp
xchg
incb
add
test
cmp
call
xchg
jbe
dec
lods
or
add
sbb
dec
and
cld
sbb
pop
ja
scas
das
pop
sahf
adc
inc
xchg
in
jg
mov
arpl
xchg
xorb
inc
dec
adc
stos
xor
js
mov
inc
sbbb
adc
lret
inc
mov
mov
sti
repz
add
arpl
pop
js
fldcw
mov
xchg
push
inc
mov
hlt
pop
addr16
fldl
jae
cltd
inc
pusha
loopne
jle
cli
adc
push
subl
and
push
mov
push
add
jbe
addr16
out
xchg
mov
int3
js
adc
aaa
cwtl
loope
jge
add
aas
or
xor
mov
push
scas
adc
stc
mov
push
scas
push
mov
int
adc
pop
in
dec
jbe
jne
cmc
sub
fsubs
jns
lea
mov
sbb
xchg
mov
cmp
mov
inc
push
inc
loope
xchg
outsb
add
xchg
jns
fnstenv
push
add
test
movsl
call
lock
sbb
push
mov
nop
mov
rolb
mov
pop
adc
inc
icebp
mov
filds
pop
mov
ss
nop
push
sbb
or
push
jp
push
inc
mov
cwtl
test
cmpsb
dec
das
and
cli
into
sub
cmp
lret
popa
out
sub
rol
xchg
adc
cmpsl
and
icebp
loopne
mov
xchg
das
xchg
loope
pop
test
dec
xchg
jbe
ret
mov
sbb
mov
inc
mov
aad
and
in
or
bound
repz
cltd
dec
frstor
es
lods
ficoms
push
push
or
pop
push
or
scas
dec
inc
xchg
mov
das
inc
test
and
jns,pt
insb
loope
jnp
mull
pop
fldcw
stc
and
shrl
push
sub
aaa
hlt
ss
push
adc
cmp
push
push
shrb
enter
pop
insb
leave
movsl
ds
mov
sbb
or
das
in
pop
cwtl
xchg
lds
inc
sub
push
jne
mov
xor
dec
lahf
sbbb
inc
fwait
mov
movsl
les
stos
push
out
js
call
movsb
add
std
mov
aam
jmp
jecxz
mov
push
mov
dec
xchg
or
mov
jns
imul
or
fisttpl
push
repz
popf
mov
adc
iret
push
xchg
lret
pop
mov
mov
arpl
out
mov
arpl
push
pop
ljmp
test
cmp
xor
movsl
in
test
loope
lods
inc
jb
bound
pop
fcompl
int3
test
ja
cmp
ljmp
out
xchg
repz
sbb
outsb
and
nop
fwait
inc
cmp
jb
inc
sahf
mov
pop
sarb
std
das
jp
jns
lea
leave
and
sbb
xchg
mov
outsl
and
test
jno
lcall
mov
cltd
push
imul
add
cmp
int3
sbb
outsl
sbb
push
cmpsb
xchg
ret
add
mov
cmc
xchg
cltd
jne
test
out
iret
pop
sub
mov
mov
insl
std
loopne
pop
mov
shlb
adc
mov
daa
dec
movsb
jne
xorl
jno
jge
add
dec
repz
dec
mov
mov
cmpsl
outsb
test
sub
inc
addr16
stos
xchg
enter
cmp
xor
push
xacquire
mov
in
lock
xchg
outsl
rorb
mov
pop
mov
popf
dec
rol
test
imul
jge
sub
das
push
js
lcall
sub
push
or
hlt
push
negl
sbb
pop
iretw
lcall
out
mov
push
das
mov
sarb
mov
es
in
cltd
setp
xchg
add
mov
int3
mov
cld
test
xor
cmp
jne
mov
pop
ljmp
add
mov
push
pushf
jmp
ljmp
pusha
add
sbb
xor
xor
scas
int
fnsave
jae
into
pop
repz
xchg
and
fcoms
jp
enter
imul
pop
lods
mov
or
push
iret
test
jg
adc
inc
mov
add
jl
je
ret
cmp
adc
adc
mov
fnsave
ret
inc
dec
aas
out
scas
mov
pop
mov
and
sub
xchg
fidivrs
push
add
jbe
mov
in
sub
dec
adc
inc
movsb
mov
sbb
add
mov
fneni(8087
mov
mov
clc
in
std
addr16
pop
sti
popf
mov
jno
inc
add
inc
inc
outsl
addr16
or
and
int3
incb
push
jne
jae
fmuls
jmp
lcall
test
lahf
mulb
jbe
mov
ret
loope
jl
sar
mov
cs
jb
dec
and
adcb
mov
cmp
push
add
sti
lods
sbb
aad
das
pop
icebp
sbb
jmp
mov
notb
lds
cmpsb
pop
fcmovnb
leave
pop
out
lods
arpl
push
out
ficompl
mov
adc
pop
imul
in
pop
jmp
gs
pop
cld
rcll
call
pop
sub
xor
dec
mov
add
test
jmp
or
cmp
sahf
imul
scas
add
or
push
push
jb
popa
imul
aad
pop
scas
cmp
add
mov
loop
xlat
popa
xlat
imul
daa
test
fmul
loopne
bound
fwait
dec
jg
jne
bound
hlt
mov
roll
inc
push
and
mov
les
dec
ret
xor
mov
movsl
in
out
bound
je
sbb
mov
outsb
jp
cmp
cmp
xchg
or
lods
lods
mov
cmpsl
arpl
jnp
mov
test
mov
pushf
push
lahf
iret
adc
mov
sub
mov
pop
xchg
push
pop
dec
or
sbb
outsb
nop
dec
or
jp
lahf
out
imul
repnz
and
sub
adc
test
inc
in
into
fiadds
sbb
lea
les
add
int
ficompl
inc
jbe
or
jmp
inc
sub
mov
push
xchg
adc
pop
and
mov
and
das
popa
popa
jne
and
push
outsb
or
and
loop
js
cli
jl
outsb
popf
cmpsb
push
jecxz
xor
movsl
loop
gs
dec
movsb
xchg
out
in
test
add
inc
jno
mov
jecxz
movsb
mov
and
sub
arpl
aaa
rorl
js
cmp
mov
lea
mov
pusha
or
jmp
dec
or
sbb
daa
xor
mov
fnstenv
jl
clc
aam
dec
lcall
bound
cli
das
stos
add
pop
movsl
jp
pop
adc
in
rclb
jecxz
in
lahf
sbb
xchg
shlb
jecxz
addb
inc
imul
jo
or
rorl
push
adc
leave
call
jbe
dec
aaa
xchg
ja
mov
sti
dec
sahf
or
jge
mov
mov
lcall
push
pop
sbb
adc
sbb
sti
xor
aam
cmp
pop
mov
xchg
pop
dec
outsb
sub
ds
test
and
xchg
jb
adc
mov
and
popa
xlat
mov
das
cld
sbb
xchg
dec
add
mov
lods
xor
cmpsl
mov
in
pop
out
pop
pop
pop
add
sub
push
dec
inc
inc
insl
push
mov
fdivl
push
push
inc
and
sti
lret
mov
je
jg
and
cmpsl
aaa
push
mov
stos
and
mov
lods
dec
mov
jno
inc
repz
pop
sbb
jg
sub
loopne
incb
in
es
mov
ss
xabort
mov
out
das
sub
jnp
pushf
ljmp
dec
fwait
push
gs
es
lods
adc
mov
add
ret
mov
popa
dec
mov
pop
push
adc
fsubl
fs
xchg
jnp
fmuls
in
int
mov
inc
jmp
mov
or
daa
repnz
dec
fsubrs
sub
popf
js
jge
pop
mov
cmp
lods
rclb
std
mov
add
sub
pop
or
adc
fistpl
jp
inc
les
repz
data16
bound
test
mov
je
cmovno
popf
in
push
sub
aas
inc
out
out
cmpsl
repz
or
loop
dec
cmc
data16
mov
movsb
cmp
sub
pop
mov
fistpl
lcall
into
lret
xchg
dec
insb
xor
mov
push
les
sbb
inc
inc
push
add
mov
push
hlt
lcall
mov
jp
fdiv
popa
pop
sub
jle
mov
jge
inc
dec
inc
dec
xor
stc
in
cld
call
cltd
addr16
sub
mov
pop
mov
subl
sub
jge
or
push
repnz
and
sbb
add
mov
lahf
adc
lods
mov
hlt
sub
popf
mov
arpl
icebp
jmp
sbb
mov
inc
shl
pop
xchg
cmp
or
rcll
mov
jb
imul
add
rcrl
movsb
jge
ret
repz
test
bound
stos
mov
pop
dec
loopne
jmp
push
lahf
lret
pop
xorb
adc
and
clc
cmp
movsb
mov
loop
decb
xor
and
add
aam
fidivl
mov
lahf
test
mov
jle
jno
pop
dec
out
dec
mov
xchg
subl
inc
mov
outsb
push
and
in
jae
outsb
iret
ds
mov
pop
xor
sub
push
les
mov
sar
push
dec
lcall
iret
rorb
out
jb
mov
cmpsl
mov
sub
lahf
xchg
lahf
xor
lods
sbb
int
mov
into
cli
sahf
popf
sub
pop
stc
pop
mov
repnz
test
insl
sbb
je
orl
rol
cmp
pop
mov
adc
movl
mov
xchg
xchg
jl
mov
push
cmp
scas
xor
sbb
les
out
xor
sbb
cmpsl
lock
pop
pushf
xchg
cmpsb
jle
popf
jns
push
stos
add
jbe
sbb
subb
in
popa
stos
add
pop
mov
imul
leave
xor
shrl
orl
mov
xchg
rol
mov
pop
cmp
fisttps
icebp
push
ja
push
lret
push
call
test
adc
jno
add
fs
push
movsb
mov
fists
mov
add
cmp
lea
xor
mov
ds
arpl
insl
mov
mov
inc
jne
out
in
repnz
sub
xor
fisttpl
sbb
es
mov
or
mov
fcompl
dec
cwtl
mov
out
arpl
push
aas
jo
pushf
shl
xchg
push
mov
icebp
aam
xor
test
repnz
cmp
add
inc
pop
add
xor
mov
fisubrl
jl
inc
push
das
test
cwtl
push
inc
mov
pop
insl
fcmovbe
pop
pop
jmp
adc
xor
stos
fcoms
xor
mov
jno
pop
mov
inc
leave
push
stos
push
sbbb
shlb
and
loop
shrl
xor
cmp
pop
adc
loop
mov
mov
shll
out
add
mov
jg
jl
pop
out
imul
add
or
adc
jno
mov
push
sbb
jle,pt
xor
jp
mov
addr16
xor
js
push
jg
xchg
xchg
aad
mov
testb
test
mov
mov
fcompl
jb
push
jl
cld
rolb
push
mov
fisubs
push
jmp
fidivrs
es
rorb
inc
and
andb
jg
clc
mov
adc
imul
push
inc
push
dec
dec
lods
imul
out
clc
or
stos
iret
sbb
rcr
clc
fadds
xchg
push
inc
mov
addr16
inc
adc
and
jae
and
cmp
bound
jne
inc
js
add
loope
jo
das
mov
ds
cmp
fwait
loope
fsubrl
and
fistpll
cwtl
repz
movsl
push
fwait
ljmp
add
sbb
jl
pop
add
mov
fcomp
mov
clc
mov
cmpl
xchg
push
in
xchg
mov
stos
mov
ret
xor
adc
inc
popf
fs
add
sub
mov
dec
push
jg
xchg
inc
mov
jo
fs
mov
out
imul
add
jo
mov
pushf
cltd
cmp
inc
cmp
cmp
push
movsb
in
cmc
loope
outsb
sbb
pop
sub
std
jno
sub
out
lar
fbld
push
mov
mov
sub
cmp
pop
cltd
adc
push
enter
ret
cmp
cmpsb
shrl
aad
xlat
xchg
xchg
cmp
dec
push
sub
dec
test
loopne
sbb
push
mov
lods
clc
mov
aam
test
sbb
movsl
mov
add
imul
lods
cmp
outsl
imul
repz
cmpsb
push
jb
outsl
and
jle
xchg
push
shrl
out
add
dec
sub
fimuls
push
pop
adc
jns
jb
repz
jl
pop
outsl
xor
pop
sub
cmp
repz
sub
fimuls
in
insl
je
clc
xlat
ljmp
mov
popa
pop
add
scas
jbe
adc
jge
jnp
fs
mov
daa
lret
mov
aad
inc
sub
pop
xchg
aam
adc
jg
push
sub
cmp
push
xchg
pop
mov
jle
roll
sbb
inc
adc
outsb
in
or
dec
push
xchg
inc
mov
xchg
dec
icebp
clc
ret
cmpsb
pop
lock
mull
ret
je
sbb
jns
jmp
mov
pusha
xchg
lods
adc
or
xchg
fcmovbe
mov
cld
mov
pop
sarl
fs
clc
in
xor
mov
imul
mov
add
pop
mov
loop
add
stos
in
pop
in
jmp
cmp
dec
cmc
pop
js
pop
cmp
and
test
mov
das
fiaddl
iret
out
cmp
xor
push
sahf
aam
jnp
jecxz
js
loop
mov
add
subb
movsl
mov
adc
sahf
shrl
push
mov
add
in
test
sbb
out
jae
mov
adc
cmpsl
mov
xor
lds
mov
sub
pop
xchg
lock
daa
pop
cld
addr16
cmpsl
push
mov
out
into
cmpb
mov
stos
lret
push
lret
int
loop
sub
mov
addl
xchg
push
xchg
mov
outsl
pop
int3
test
in
ljmp
sbb
pop
mov
dec
cmpl
pop
pop
sbb
xor
stc
sti
lret
aam
xchg
mov
stc
movsl
sbb
sbb
mov
sahf
add
into
sub
shll
mov
out
in
add
mov
lods
mov
outsl
add
movsb
popf
popf
push
mov
push
sub
gs
push
movsl
and
and
pushf
inc
in
push
or
loopne
bound
daa
fimuls
dec
andl
cmc
mov
or
ret
aas
push
sti
dec
les
orb
inc
lret
gs
inc
popa
inc
daa
stos
cltd
shrl
hlt
inc
arpl
daa
mov
test
add
ds
sbb
ja
fnsave
mov
xor
or
push
mov
or
test
adc
jo
aaa
sbb
inc
sub
repz
push
bound
mov
cmp
icebp
jae
jl
push
nop
cmp
adc
jo
and
jno
push
lea
in
lods
add
sbb
cmp
lret
mov
loopne
push
loopne
adc
shll
ret
repz
xor
movsb
xor
rcr
pop
ret
cmp
shl
fsts
or
std
addr16
cmpl
pop
ffreep
data16
sbb
das
dec
cltd
into
pop
test
inc
aad
push
inc
mov
sub
cmp
or
pusha
test
lcall
es
cmpsl
adc
adcb
test
and
enter
subl
sti
inc
ffreep
and
xchg
xchg
mov
daa
lock
push
insb
test
or
jg
mov
adc
pusha
jle
in
jmp
jl
jo
cmpsb
xlat
xchg
mov
loopne
test
lods
push
leave
push
jae
xor
test
insl
or
daa
imul
sub
aas
sar
mov
push
lahf
inc
pcmpeqw
daa
movsl
fistps
or
xor
jg
insl
xor
scas
fs
add
ds
inc
stos
dec
push
or
pop
popa
pop
test
out
std
jne
movsb
pushf
mov
mov
push
and
bnd
mov
xor
fiadds
sti
adc
mov
imul
fwait
sti
mov
or
adc
and
scas
push
addb
cmp
pop
add
mov
adc
cmp
pop
stos
movsl
fisubrs
and
repz
fidivrs
lcall
inc
addr16
and
lods
adc
mov
les
cmc
xor
dec
jge
cld
mov
inc
mov
push
cmp
xor
jmp
sbb
sbb
pop
cmpsb
push
out
mov
xchg
inc
fstpl
pop
ss
add
sahf
push
lods
cmp
stc
mov
divl
adc
test
dec
shll
adc
in
sti
pop
test
out
cmp
test
pop
jno
and
push
cli
mov
test
aam
ret
icebp
mov
test
jl
lahf
aad
cmp
arpl
add
lret
mov
int3
jnp
lcall
fnstsw
push
jno
sub
push
mov
mov
add
mov
aam
mov
fisubl
call
dec
aaa
pop
fisttpl
mov
adc
inc
std
aas
pop
in
les
aaa
xlat
fiaddl
outsl
imul
xor
pop
dec
ds
or
and
pop
rorl
into
dec
jae
cmpsl
sub
lds
xchg
test
fnstenv
jne
mov
arpl
pop
fs
pop
push
out
push
mov
jo
pop
out
inc
mov
cmc
int
mov
cmp
outsl
or
add
sub
cmp
insl
push
test
dec
movb
pop
sub
shl
mov
add
or
jle
ret
jno
rcll
and
mov
cmp
xor
and
data16
dec
int3
add
sar
sarl
push
cmc
xchg
xor
and
dec
jl
inc
icebp
ret
daa
fdivrs
push
xchg
stos
call
sbb
xor
xchg
hlt
sub
sbb
aam
mov
dec
iret
mov
hlt
dec
pushf
cmp
or
gs
dec
push
sub
shrb
dec
or
jl
dec
in
pop
popa
and
fsubp
cs
mov
xor
or
mov
cmp
loope
pop
test
addr16
cltd
out
sbb
jne
adc
out
ret
fcmovu
push
adcb
icebp
movsl
cmp
xchg
cld
cmp
sub
xchg
pusha
fdivrl
int3
addl
mov
cld
in
mov
and
adc
orl
pop
cmpsb
cltd
sub
push
push
test
jp
popf
jle
push
xchg
mov
push
enter
jnp
inc
inc
push
subl
rol
fisubrs
or
fisttpl
cmpsb
mov
adc
rcrl
or
adc
loope
pop
inc
sbb
cld
in
sbb
mov
pop
push
jns
dec
sub
sub
push
cmc
mov
iret
lcall
mov
pop
add
aam
scas
ljmpw
arpl
lret
lds
cltd
sarl
int
int3
jg
inc
mov
push
aad
aam
pushf
repnz
roll
mov
jg
jo
push
pushl
loopne
and
insl
ret
lods
xor
in
xor
negb
xchg
rorb
adc
mov
cld
rcll
insl
inc
mov
jmp
adc
xchg
cmpsl
scas
jmp
ljmp
push
insb
sub
pop
push
je
insl
in
mov
inc
mov
jmp
imulb
pusha
into
aam
loopne
imull
xchg
enter
mov
add
jge
adc
adcl
jmp
cmp
decb
jge
pop
or
dec
test
xchg
push
jns
inc
lock
jg
adc
iret
mov
xchg
scas
rclb
aad
sbb
test
mov
mov
fucom
fildll
je
adc
cmp
xchg
and
outsl
cmp
add
jp
xor
or
pop
mov
jecxz
ja
mov
pop
xchg
mov
pop
jns
ss
cwtl
dec
aam
sbb
pop
dec
scas
inc
and
cmp
inc
add
xchg
or
in
and
aas
or
xchg
push
lret
xor
cli
rolb
fiadds
push
dec
inc
ss
pop
orb
mov
in
ds
pusha
and
xchg
fisttpl
cld
push
or
mov
adc
mov
add
stc
clc
lea
xchg
inc
ds
dec
push
add
scas
mov
ret
inc
sbb
lock
imul
dec
mov
add
sub
insl
mov
mov
dec
cld
push
faddl
push
imul
or
in
insl
hlt
into
add
mov
pop
aam
stos
pop
and
or
sub
movsl
fucomp
hlt
pusha
dec
lea
push
in
sub
mov
daa
shrl
sahf
ljmp
orb
inc
mov
sub
dec
lock
scas
jg
push
cmp
push
pop
push
popf
sub
imul
mov
outsl
fs
data16
inc
fdivrs
jae
int3
and
pop
sti
icebp
testb
jne
sbbb
add
iret
icebp
fsub
cmp
xchg
push
pop
or
inc
loopne
xchg
mov
ficompl
sub
mov
or
and
addb
lret
inc
mov
push
add
xor
adc
mov
scas
scas
test
adc
sbb
dec
out
mov
push
imulb
mov
scas
sti
mov
jecxz
push
adc
pop
jns
shlb
gs
ja
stc
scas
push
scas
jne
std
pusha
sub
lcall
mov
lods
mov
divl
mov
rol
shrb
xchg
inc
scas
imul
fstpl
jns
data16
sbb
out
or
sbb
dec
xor
lret
pop
in
lds
test
flds
popf
ss
iret
es
xchg
and
pusha
adc
sahf
adc
outsb
and
pop
jp
add
out
lock
and
dec
sarb
insb
shlb
mov
sub
xchg
fwait
xor
bound
into
adc
adc
push
mov
hlt
repnz
pop
popa
lds
cli
xor
insb
addr16
clc
dec
insb
arpl
in
data16
xchg
mov
js
xlat
int3
and
and
mov
out
adc
adc
sub
xor
lea
stos
fstps
iret
adc
jae
repnz
mov
xchg
push
xor
loope
pop
pop
lds
clc
outsl
and
mov
cmp
dec
jae
dec
xor
lret
repnz
nop
test
insb
mov
subl
xchg
fstpl
shll
scas
sub
mov
xor
aaa
sub
shrl
sbb
clc
into
add
pop
nop
enter
lds
xchg
stos
repnz
mov
sbb
mov
jns
cltd
seto
cmp
test
dec
and
push
jb
inc
cmpsb
loope
or
rclb
fcoml
das
mov
movl
and
fidivrl
mov
enter
cmp
add
mov
xor
jbe
popf
insb
pop
data16
mov
inc
repz
mov
adc
outsl
arpl
inc
out
sbb
cmc
hlt
adc
or
das
xchg
cmp
inc
leave
mov
shrb
add
sbb
push
call
lcall
fmuls
mov
or
pop
jno
std
lret
jl
lahf
jne
mov
mov
jecxz
repnz
sub
rcll
mov
pusha
xchg
jns
lret
mov
xor
xchg
sbb
add
je
dec
pop
pop
cmp
jmp
xchg
cmpsl
pusha
stc
sub
es
xchg
out
test
add
addr16
sbb
mov
mov
mov
push
sbb
pop
mov
stos
ljmp
adc
cmp
xchg
out
stos
mov
xchg
mov
shl
dec
xlat
lods
inc
add
shrb
rol
lret
and
ds
ret
push
out
push
pop
fwait
rcrb
cltd
sub
clc
cmp
adc
jl
and
aaa
cltd
pushf
jae
popf
icebp
push
dec
fildll
mov
addr16
icebp
cmpsl
jmp
jge
dec
in
fsts
mov
xchg
movsl
sarb
pop
pop
jp
dec
cld
arpl
xchg
mov
adc
cmpsb
jb
inc
or
mov
addb
mov
pusha
std
cmc
dec
jae,pt
sbb
data16
inc
pop
xor
dec
xor
cmp
icebp
jne
cmp
or
imul
push
scas
mov
xchg
jne
add
lcall
jg
sub
jmp
enter
jb
push
xor
xchg
xor
push
jecxz
rcll
pop
fdivrp
movsl
or
movsb
push
aaa
jne
mov
cmc
addr16
or
les
outsb
cmp
adc
or
dec
inc
insb
enter
into
xor
bnd
push
sar
arpl
push
int
or
cmp
sbb
or
lahf
mov
or
push
bound
daa
shrl
jp
jns
cs
cmp
push
popf
sub
rclb
mov
dec
pop
push
mov
out
xchg
jns
mov
push
and
jb
xchg
mov
clc
mov
in
pop
adc
repz
push
mov
mov
cmc
loopne
int
push
idiv
pop
cmp
shll
fildl
lahf
push
pop
sbb
stos
test
push
cmc
cmc
mov
sub
pop
push
pop
adc
mov
push
cs
mov
test
iret
mov
fsubs
ja
outsl
mov
cli
mov
lret
shlb
jno
jne
out
divb
cwtl
dec
adc
inc
sbb
dec
sbb
rcrl
sbb
sbb
sub
xlat
fmuls
push
in
pop
pushf
sbb
cs
fdiv
mov
or
popa
jmp
push
pop
outsb
jnp
mov
andl
sub
lods
jns
dec
js
mov
mov
sbb
ret
mov
pusha
icebp
cmpsl
jae
cld
aam
cmc
loop
sub
jae
fsubl
popf
ds
addr16
pop
xor
add
es
mov
ljmp
popf
mov
cmc
fcmovb
or
cmp
push
sbbb
push
adc
lret
pop
mov
sbb
dec
add
sub
jmp
lea
pop
in
jl
add
imul
jb
rcrb
jnp
lcall
addr16
pop
rorb
sub
test
or
lahf
incl
cmp
shll
or
jae
mov
pop
les
popa
fs
in
popa
pop
and
dec
in
cld
jo
fwait
cmpb
and
jmp
test
sarb
into
xchg
add
inc
xchg
fisttps
vpshab
xchg
pop
lods
or
sub
cmc
dec
fcoml
or
ja
and
fisttps
mov
jle
jb
fstp
add
jge
mov
pop
sub
pop
jecxz
fwait
pop
movsb
loopne
divl
data16
push
xor
jmp
cmc
jge
mov
rorb
leavew
movsl
sbb
int
sbb
inc
add
mov
call
cwtl
mov
lock
es
neg
je
or
dec
jecxz
mov
shll
pop
push
push
bound
lret
sub
rcrl
std
in
jb
cmpsl
outsb
mov
jns
push
mov
pop
fs
xchg
sbb
mov
cmp
jl
cmp
js
call
inc
mov
dec
inc
fadd
jg,pn
mov
out
loope
fs
xchg
add
jmp
das
jae
mov
test
les
jno
or
mov
scas
test
out
mov
push
sub
inc
cmpl
add
inc
jae
lcall
or
pushf
jnp
icebp
or
lea
dec
clc
popf
jns
ss
adc
inc
divb
pop
jle
mov
mov
imul
stc
mov
sub
xor
adc
mov
and
movb
push
mov
outsb
int
cmp
or
dec
rorl
mov
mov
icebp
call
jnp
pop
fwait
adc
mov
dec
out
repz
out
cmpsl
cwtl
cmc
mov
repz
ret
jle
cmp
lcall
test
std
jge
push
repz
pop
stos
fadds
pop
fsubrs
jg
mov
shl
pop
test
cmp
aam
mov
jno
test
cmp
aam
vpinsrw
int
mov
mov
cs
jo
ja
dec
sahf
lock
test
in
in
rorb
dec
jb
fmull
cld
imul
test
sbb
inc
or
mov
add
mov
orl
dec
test
sub
int3
pop
pop
sbb
je
scas
les
mov
das
or
js
mov
cmpsl
imul
out
sti
fcomip
mov
or
jno
inc
cmpsb
dec
lds
clc
or
or
pusha
aaa
inc
daa
je
add
mov
lret
ljmp
aaa
mov
test
mov
lods
scas
test
push
cmp
xorb
and
out
sub
outsl
adc
popf
das
ss
sub
cmp
rcl
add
out
int3
jnp
mov
inc
cli
mov
mov
cwtl
nop
call
movzbl
cwtl
iret
xchg
inc
cmp
adc
insb
cmp
xchg
mov
pop
outsl
les
and
pop
pop
push
sahf
jge
in
scas
ja
push
pusha
push
mov
mov
jecxz
mov
cltd
dec
sbb
xor
mov
inc
jle
jno
add
mov
dec
and
inc
or
mov
lcall
mov
pop
orb
sub
aad
pushl
push
fildll
and
cmp
testb
inc
cmp
std
mov
in
rclb
push
dec
lahf
fwait
test
xchg
inc
push
je
inc
es
pop
adc
call
add
mov
mov
scas
rcr
jns
rolb
sbb
cmp
mov
cld
aam
test
mov
enter
or
sbb
ss
or
fcompp
cmc
fbstp
daa
jns
fsub
cwtl
faddl
mov
sbb
out
push
loope
incb
mov
or
cmp
xchg
dec
jno
rol
jae
sahf
adc
insb
daa
fiaddl
fisttps
out
fcmovnbe
addr16
xor
call
stos
cmc
and
pop
and
xor
lcall
imul
mov
fnstsw
pop
mov
stos
or
pop
pop
int
or
sub
out
pop
or
scas
ret
cmpsl
ret
push
or
inc
mov
gs
add
lret
pop
gs
sub
je
clc
inc
sub
imul
inc
popf
in
cmp
adc
loopne
lret
push
and
push
aam
mov
loopne
push
sub
std
arpl
sbb
jae
mov
in
das
push
cltd
xchg
test
mov
sbbb
stos
xchg
scas
and
xchg
jno
rorl
out
mov
int
or
scas
push
repz
mov
dec
cwtl
pop
adc
or
mov
xor
jp
lcall
pop
sahf
mov
imul
sub
and
ror
mov
sub
in
loopne
sbb
xchg
fnsetpm(287
inc
fcoms
jnp
xchg
sub
cmp
sub
aam
into
imul
cmpsb
xchg
cmp
imul
cmpsl
loopne
cmp
out
inc
ret
push
cmpsl
and
rcrb
imul
sub
sti
add
mov
lahf
dec
xchg
std
inc
rclb
ret
gs
shrl
jb
int3
stos
pop
push
add
push
mov
in
std
ret
cli
loope
js
loope
imul
jecxz
in
popf
ret
xor
lea
ss
in
dec
and
mov
loope
fsubp
enter
fwait
repz
pop
icebp
gs
xchg
test
jns
xchg
add
add
jmp
in
sub
das
mov
cmp
repnz
jmp
ljmp
shrl
out
or
shrl
cmp
mov
out
mov
jge
les
cmpsl
inc
inc
andl
outsb
push
or
movsl
loope
sbb
add
dec
testb
mov
pop
pxor
adc
outsb
xchg
cmpps
test
adc
mov
xchg
rcr
arpl
int
push
pusha
pop
mov
add
mov
xor
mov
jbe
icebp
in
push
cmpsl
test
push
push
movsb
sub
in
xor
popf
sub
cmpsb
in
ljmp
icebp
and
cmp
icebp
aad
mov
test
inc
push
pop
push
into
xlat
xchg
cmc
sbb
sub
cmp
adc
pop
stos
mov
mov
test
cmp
out
add
rcrl
jp
mov
sbb
add
loop
popa
cld
aaa
xlat
fs
std
adc
xor
call
repnz
jnp
sbb
jge
mov
popf
inc
in
cltd
mov
or
push
inc
out
jno
lret
in
pop
loope
lods
and
es
mov
and
pop
gs
cmp
call
dec
out
cmp
into
xchg
mov
dec
or
stc
fdecstp
in
mov
sub
push
push
imul
scas
ljmp
cmp
mov
lahf
pop
inc
sbb
push
test
jo
sti
adc
dec
pop
or
lcall
or
or
mov
mov
not
ljmp
lret
and
xchg
sub
into
pushf
add
mov
or
sbb
ficomps
adc
jo
cmpsl
jl
mov
jmp
push
addr16
sahf
dec
pusha
adc
in
cmc
or
xor
movsl
scas
jnp
test
push
lds
fwait
push
enter
inc
dec
cmpsl
mov
test
addb
mov
pop
mov
pop
shrd
and
fistpll
push
cmp
mov
cmp
repz
cli
test
push
mov
leave
inc
fistpl
loop
pushf
push
fnstcw
lds
push
xor
cs
push
filds
cmp
add
add
ds
mov
jne
push
or
je
push
add
inc
mov
mov
pop
jnp
shr
adc
sub
mov
fimuls
or
out
push
iret
mov
arpl
orb
jne
push
mov
bound
add
dec
adc
adc
lds
pop
dec
scas
bound
stc
mov
addr16
shrb
mov
rcrl
push
or
and
std
xchg
jecxz
jns
mov
mov
out
lea
sbb
add
adc
dec
add
or
fnstenv
cltd
mov
adc
in
dec
int
inc
insl
call
mov
cmp
or
rcrl
push
idivb
sub
adc
ret
stc
andb
sub
inc
cltd
fisttps
jg
adc
pop
xchg
les
and
cmc
mov
pusha
cli
out
sbb
mov
in
jns
dec
sahf
cmpsb
std
cmp
jne
popf
push
mov
or
and
dec
or
jo
mov
adc
sbb
sbb
mov
out
mov
fimuls
stos
cld
ljmp
movsl
in
sbb
jmp
in
xor
mov
mov
sbb
cs
cmp
mov
sti
pop
sbb
pop
add
movsl
mov
sbb
xchg
cmp
outsl
jae
or
cs
push
lret
shll
mov
bts
mov
idivb
lcall
push
push
ret
call
dec
call
sbb
dec
dec
scas
int
sti
icebp
sbb
add
push
pusha
out
scas
les
imul
adc
xor
fcomp
add
enter
lock
lret
sbb
xchg
test
lret
ret
dec
add
pop
dec
rorb
int
test
mov
mov
mov
and
movb
inc
mov
imul
repz
lea
mov
das
pop
fwait
push
xchg
push
subl
out
sub
inc
addr16
push
shlb
pop
and
jbe
inc
cli
sbb
decl
int3
cltd
pop
mov
xchg
and
sbb
fistpll
cltd
jne
sbb
ljmp
sub
das
test
push
mov
loope
ret
out
push
fwait
and
pop
int3
movsl
push
pop
mov
out
lahf
mov
or
in
sub
dec
pushf
movsl
pop
jo
jg
pop
pop
jl
sbb
shll
test
xchg
imul
add
cmp
addr16
ficoml
pushf
xchg
xor
arpl
mov
mov
mov
adc
pop
xor
sbb
jb
inc
lea
ja
xor
in
les
xor
sub
mov
jb
or
scas
jecxz
jp
inc
sbb
pop
stos
sbb
clc
push
sbb
adc
out
adc
loopne
pushf
gs
fistpll
in
pop
lret
dec
int
lods
push
arpl
pop
test
sbb
jle
push
and
push
push
aad
mov
sbb
ds
jg
xor
adc
mov
stos
arpl
jns
xchg
sbb
lcall
in
jecxz
push
stos
cli
cmp
xchg
push
jle
mov
mov
out
pop
aaa
and
cs
lds
inc
or
mov
xchg
inc
jg
sub
pop
mov
cmp
mov
movsl
adc
push
xchg
push
add
imul
or
xchg
data16
xor
in
pusha
cmp
xchg
lock
ret
sub
shll
sbb
mov
mov
xchg
ret
jne
pop
xchg
aad
inc
or
test
js
into
shlb
push
call
add
add
jno
push
cmp
mov
fisubrs
cld
and
iret
ss
push
mov
mov
ds
jno
in
sub
hlt
push
xchg
aas
in
cmp
dec
mov
adc
xchg
dec
xor
out
std
dec
inc
push
xorb
inc
push
ds
xor
ss
sbb
and
pop
mov
xchg
push
sub
test
inc
cs
push
inc
push
xor
scas
jbe
imul
lret
xchg
inc
jecxz
push
imul
out
movsl
cmp
mov
add
loope
in
popf
inc
jle
es
inc
rcr
lret
outsl
bound
cmpsb
pop
xor
ds
lret
enter
subb
or
inc
cltd
push
fldcw
mov
add
pop
sub
or
stos
in
xchg
cwtl
mov
xor
adc
out
les
lods
mov
loopne
pop
pop
xor
or
push
pop
push
dec
cmp
cmpsl
loope
sbb
pop
sub
lcall
mov
hlt
mov
cmpsb
test
sub
jle
sub
fnstcw
sub
xor
lods
inc
sub
pop
repnz
mov
mov
mov
xchg
push
adc
push
jb
das
enter
cld
and
push
push
cmpsb
aas
mov
adc
jmp
push
adc
dec
stc
lahf
mov
cs
cmc
mov
dec
incl
pusha
jne
sar
pushf
rdtsc
ret
mov
dec
out
mov
cli
cmp
pop
imul
sbb
fildl
inc
imul
cltd
pop
dec
dec
jae
adc
push
lds
mov
sub
mov
or
adc
mov
mov
xorl
adcb
fdivrl
fdivl
shlb
aad
pop
cmova
ds
xlat
sti
and
xchg
mov
ficompl
xchg
fdivrs
push
movsb
mov
cmpb
sub
adc
dec
test
stos
negb
arpl
js
sub
mov
cmp
cmp
mov
hlt
rep
fs
pop
orb
into
frstor
testl
adc
mov
pusha
ljmp
pop
das
mov
pop
ror
mov
push
int3
jl
mov
and
ja
fsubrs
sbb
stc
cmc
out
xchg
sarl
dec
jg
sarb
js
data16
xor
and
aas
inc
fwait
jbe
or
out
xchg
mov
mov
jbe
sbb
mov
mov
xchg
sub
lcall
add
xor
aaa
mov
jnp
cmp
test
add
mov
sbb
xor
cltd
out
jae
mov
test
push
sub
es
add
jmp
pop
shrb
push
js
xchg
mov
insl
fldl
clc
push
jb
pop
stc
sbb
icebp
and
mov
inc
pop
or
ds
int3
cli
cld
mov
or
add
or
adc
addr16
shlb
repz
cmp
stc
outsl
in
sub
out
push
xor
adc
sarb
or
mov
std
outsb
repz
test
in
adc
xchg
gs
fsts
jne
mov
xchg
rep
mov
jb
mov
push
aam
mov
mov
dec
lcall
xchg
cmp
push
shl
cli
xorl
xor
sub
inc
aas
orb
icebp
dec
xchg
pushf
ret
and
arpl
imul
dec
xchg
shl
scas
or
xchg
xor
lods
mov
dec
data16
inc
or
xchg
loop
add
inc
or
xchg
xchg
ss
shrb
lods
js
das
xor
sub
shrb
jmp
mov
push
ja
inc
or
jne
lock
pop
ljmp
sahf
push
test
cmp
stc
aas
mov
mov
mov
aad
jp
and
mov
pop
scas
enter
adc
adc
push
add
mov
dec
cld
sbbl
leave
test
jecxz
test
decb
lcall
invd
add
xchg
cmp
cmovae
pop
sbbl
and
nop
das
mov
dec
mov
mov
mov
fiadds
icebp
cmpsb
addr16
nop
or
inc
mov
xchg
fldenv
cmp
clc
aam
les
aad
cmp
push
repnz
test
mov
in
xchg
fcoms
sub
into
pop
fdivs
xchg
xor
xchg
or
xchg
xor
pop
imul
pusha
push
push
sbb
xlat
pop
data16
mov
scas
inc
cmp
into
test
push
dec
lods
imul
xchg
popf
call
fwait
cmpsb
xor
push
nop
lret
icebp
xchg
mov
arpl
adc
fwait
push
sub
sbb
or
nop
adc
les
frstor
pop
add
cmpsb
adc
lret
repnz
sub
sub
aas
int
cmp
xlat
jbe
movb
je
popa
testl
rcrb
negl
inc
push
xchg
cmc
mov
jle
inc
or
mov
lods
sbb
jmp
scas
dec
aam
push
mov
cmovnp
mov
lods
lods
pop
ss
ljmp
rcl
std
adc
mov
jge
push
push
adc
cmp
jo
sub
cld
lret
pushf
push
repnz
cwtl
adc
cmpsl
push
mov
test
push
xchg
arpl
jbe
mov
mov
sub
ror
and
sbb
mov
and
stos
ja
mov
mov
ror
or
xor
add
fcoml
push
data16
jge
jbe
out
repz
test
mov
imul
les
cmpsl
popa
aaa
lds
mov
dec
mov
dec
and
pop
xchg
add
xor
adc
sbb
stos
sub
mov
mov
jns
pop
xchg
clc
jp
sbb
push
jl
stos
pop
pushf
mov
mov
xor
fcmovnbe
add
mov
movsl
ficoms
rcr
inc
out
sbb
adc
int3
jno
and
pop
inc
adc
pop
loope
loope
push
imul
jb
pop
mov
jo
notl
xor
jl
cmp
cli
cmp
inc
xor
rolb
or
es
xor
stos
aaa
pop
push
ljmp
enter
in
leave
xor
dec
sub
je
test
lret
xchg
sbbb
jge
or
cmp
out
ljmp
inc
push
inc
loop
xchg
jns
in
and
pop
mov
lds
packsswb
jae
stos
fstl
outsl
push
mov
jae
imul
nop
mov
pop
dec
addr16
ret
rcrb
push
ljmp
sbb
leave
test
xor
shl
mov
enter
out
and
mov
and
inc
imul
sbb
mov
outsl
xchg
mov
aas
and
add
mov
arpl
popa
jnp
cmc
das
xchg
cmp
add
adc
jno
pop
enter
movl
xchg
add
test
test
and
push
or
xchg
sarl
sub
out
xchg
cmp
movsb
sbb
in
ficoml
sbb
inc
fnstenv
xchg
cmp
and
xchg
fnsave
addr16
sbb
clc
lahf
cmpsb
clc
es
dec
enter
test
push
xor
rorb
in
jecxz
fisttpl
adc
fcomi
mov
imul
jnp
push
lret
cmp
mov
xor
pop
test
push
repnz
enter
xor
or
push
insb
mov
shr
push
xor
fwait
pop
add
jb
dec
imul
out
push
ljmp
icebp
mov
leave
push
jns
fcmovnu
into
cmp
push
sbb
ds
leave
cmc
xor
lret
mov
ret
scas
lods
es
es
int
push
xchg
add
jle
hlt
inc
inc
in
into
fs
ret
xor
mov
cmp
test
or
mov
inc
fistpl
push
push
sbb
mov
cld
aad
mov
je
add
mov
pusha
jmp
push
sti
into
inc
aam
xor
pop
xor
add
jge
push
sub
in
cmp
jecxz
daa
loope,pt
mov
cmp
xor
imulb
jnp
sbb
or
mov
pushf
aaa
fistpll
cmp
sbb
pop
mov
cld
dec
sbb
dec
movsl
inc
cmpb
int
sub
add
cmc
or
inc
xchg
push
loopne
aaa
push
bound
out
hlt
jle
mov
lods
ss
scas
lods
ret
inc
fcompl
sub
pop
out
mov
imul
shl
lcall
mov
mov
cmp
test
mov
into
mov
fimull
sub
cmp
bound
mov
mov
push
nop
cmp
ljmp
aam
clc
xchg
jns
adc
cmp
inc
dec
mov
adc
xor
cs
push
add
addr16
out
add
insb
pushf
cmpsb
aam
and
push
fstps
xchg
inc
test
cmp
out
mov
xchg
add
adc
or
les
sbb
sbb
inc
imul
das
mov
scas
sub
lods
push
xchg
inc
or
mov
fwait
lcall
mov
mov
jmp
arpl
pop
stos
and
push
dec
or
aad
lahf
scas
sbb
bound
std
stos
out
fadds
fst
out
cs
pop
and
popl
xchg
xchg
incl
jae
test
dec
fcomps
movsl
adc
dec
mov
hlt
mov
jecxz
data16
and
inc
push
clc
or
and
add
adc
inc
leave
jg
xchg
out
imull
cs
adc
je
cli
and
je
pop
aaa
inc
js
js
inc
and
jo
jl
ljmp
xchg
or
jnp
imul
adc
dec
imull
mov
xor
mov
or
xchg
mov
mov
xchg
sbb
lcall
iret
fdivrs
cmp
cmp
nop
inc
cmp
out
inc
jecxz
xchg
iret
ret
loop
ja
xchg
insb
push
or
pop
out
mov
adc
jp
sbb
cli
cwtl
lret
xor
sub
jns
and
lcall
pop
dec
pusha
jo
loope
out
popf
dec
xchg
cmp
sarb
push
push
jge
adc
mov
cmp
xor
imul
enter
stos
mov
dec
pusha
test
or
mov
lahf
jl
cltd
xor
mov
push
push
ljmp
inc
notl
adc
sbb
repz
jmp
stos
and
pop
in
cmp
mov
xor
mull
pop
les
out
aas
je
or
jb
or
lcall
sub
test
ret
dec
je
fdivrs
out
test
data16
leave
and
pusha
ja
and
pop
popf
mov
out
ja
jecxz
daa
cmp
lret
jb
rcrb
mov
mov
fsubl
sahf
imul
sbb
push
cmp
inc
pushf
arpl
in
rclb
pop
and
mov
pusha
bnd
shl
push
fdivrs
mov
adc
push
les
stc
cmp
lock
aaa
aaa
outsb
insb
mov
inc
push
imul
xchg
jo
push
mov
cli
out
arpl
mov
mov
xor
out
std
or
dec
push
ds
daa
push
sahf
stos
push
and
int3
add
mov
sub
mov
push
dec
aaa
mov
xlat
iret
test
mov
arpl
xchg
loope
adc
cmpsl
arpl
jl
lahf
pop
ror
jb
and
and
lahf
out
inc
jle
push
pop
cwtl
pop
pop
adc
mov
pusha
clc
cltd
cmp
mov
int
mov
push
insl
fdiv
mov
mov
outsb
aas
or
enter
sbbl
cmp
pusha
or
lret
daa
jnp
push
stc
iret
ret
push
es
lock
or
and
je
jbe
rcrb
call
inc
cmp
xor
jae
mov
test
sbb
mov
mov
stos
fcoms
imul
popf
cmp
dec
in
add
fcomi
mov
mov
fdivrs
mov
push
xchg
mov
ret
sub
xor
fldt
shlb
into
jmp
shll
insl
loope
ret
xchg
mov
mov
cmpsl
lret
pop
inc
adc
sbb
jb
inc
cmpsl
movsb
adc
adc
lret
xor
ss
push
inc
add
in
xor
push
pusha
in
mov
mov
rclb
cwtl
or
shrb
dec
cmpsb
out
lock
lock
sub
xchg
andb
frstor
shlb
icebp
stos
inc
sarb
lods
icebp
rcrl
imul
jnp
sbb
push
or
jbe
adc
mov
outsb
xor
cld
in
inc
push
aas
lock
sub
scas
sbb
pop
out
inc
mov
cs
stc
inc
xchg
sub
pushf
pop
jecxz
xor
jl
sub
lret
test
mov
test
scas
negb
xchg
pop
pop
cmp
jne
or
fcmovbe
or
sub
fnstcw
dec
and
repnz
popf
jl
jb
in
les
or
or
dec
nop
out
xor
adc
xchg
int
mov
adc
and
or
pop
mov
sbb
daa
jb
scas
jne
mov
arpl
sub
ja
out
xor
arpl
sbb
sub
fabs
pop
leave
pop
mov
pop
xor
testl
shll
cs
fsubrs
xchg
inc
jne
dec
clc
rcll
cmp
inc
mov
lock
pop
and
out
or
jae,pt
mov
out
test
add
fdivs
out
pop
xor
or
shll
xchg
gs
std
cmp
pop
xchg
adc
lods
andb
pop
sbb
dec
push
pushf
movsl
mov
call
cwtl
int3
mov
inc
mov
sub
push
mov
push
sub
or
popa
sti
data16
fiaddl
ja
sbb
test
enter
neg
es
sub
inc
push
scas
ret
cmpsl
aas
or
rcll
test
inc
sub
sahf
mov
lret
jmp
push
dec
pop
push
jae
lahf
mov
cli
into
stos
fdivs
pop
sub
loop
mov
call
lahf
xor
xchg
dec
mov
sti
ljmp
sahf
lods
rol
cld
jmp
js
jne
sub
imul
dec
push
xchg
sbb
cli
dec
push
scas
push
push
push
out
mov
sbb
imul
std
packsswb
js
pop
daa
inc
sub
movsb
sub
enter
ss
and
daa
mov
add
aas
outsl
test
add
jne
xchg
mov
mov
fsubrs
jg
mov
adc
in
lea
mov
rorb
inc
dec
xor
jo
int3
push
or
push
mov
std
pop
mov
or
mov
test
repz
into
jo
out
jmp
js
std
add
or
cmpb
push
shrb
sti
out
dec
pop
out
popa
movsb
jne
fucomp
mov
hlt
int3
mov
sub
push
aad
sub
push
sbb
xchg
mov
call
xor
into
movsb
adc
ljmp
push
aaa
out
outsl
rcr
sarl
fs
xchg
popl
sbb
imul
std
cmp
cmc
inc
out
xchg
cltd
inc
pop
fwait
mov
add
mov
jnp
cmc
jmp
pop
cmp
pop
mov
mov
fyl2xp1
jnp
inc
xchg
sub
sub
lds
xor
je
xor
add
rcll
sub
pop
and
aaa
enter
dec
in
cmpsl
andl
xchg
std
push
xor
push
cmc
sub
scas
add
stos
outsl
jbe
notl
mov
das
mov
push
repz
test
out
push
loope
mov
aaa
mov
sbb
inc
cltd
scas
les
xchg
loope
push
lds
push
pop
push
addr16
rcll
push
repnz
test
mov
or
jg
loop
sub
jl
outsb
add
mov
push
jl
and
clc
cmpsb
push
push
lock
cltd
ds
shl
fs
push
std
movsb
mov
mov
decl
pop
jp
and
add
sub
stc
nop
pop
inc
pop
push
fadds
sub
mov
shll
addl
data16
jo
add
dec
sbb
sbb
in
out
std
xchg
sahf
pop
inc
out
clc
add
cmp
bound
mov
lods
push
dec
cli
sahf
or
pop
sbbb
bound
add
mov
jge
mov
cmp
sub
test
xor
jp
inc
dec
add
xchg
test
inc
cli
insb
in
mov
xor
mov
or
sahf
mov
ljmp
pop
lods
pushf
pop
or
out
stos
dec
sti
mov
sbb
xlat
sbb
fiadds
mov
out
cmp
cltd
push
mov
or
loop
mov
dec
ljmp
ret
daa
neg
roll
xor
sub
sub
arpl
into
int3
aas
inc
adc
push
xchg
mov
imul
add
or
mov
imul
outsl
cmp
shlb
xor
insb
cld
mov
int3
int3
test
int3
cmp
call
jecxz
test
jle
fldcw
hlt
mov
icebp
ficomps
lret
jo
mov
jno
and
iret
loop
outsb
inc
rolb
aam
fildl
inc
dec
cld
movsl
decb
insb
mov
or
xor
xchg
out
int
scas
addl
add
mov
aas
test
fdivs
mov
sub
xchg
iret
fwait
lock
lcall
mov
aam
shlb
in
push
pop
sub
int3
cmc
shll
rolb
dec
mov
inc
mov
les
xchg
lcall
pop
dec
shl
insb
fcmovu
cmp
push
pop
cmp
pop
xchg
dec
and
add
imul
xchg
cmc
sbbb
jb
jnp
xchg
inc
addr16
cmpl
xor
xor
out
mov
aas
lahf
inc
pop
outsb
enter
mov
hlt
adc
add
jnp
sub
inc
out
mov
icebp
in
rcl
insb
stos
shll
adcb
xlat
xchg
pusha
lock
lods
imul
mov
stos
fisubrs
enter
and
mov
rclb
repz
fstpt
loop
shr
pop
in
push
add
ja
and
jnp
mov
ret
sbb
test
and
notb
mov
jae
ljmp
cld
push
fdivr
scas
bswap
or
subb
mov
mov
les
push
stos
lret
loopne
fisttpll
sub
push
jo
ss
pusha
cmp
bnd
sub
sub
std
outsb
xchg
test
pop
addr16
pop
iret
jge
fdiv
mov
ljmp
js
std
push
cmc
rcrb
jle
pop
mov
jp
in
xor
loope
add
lods
stos
js
mov
pop
mov
in
enter
insl
lods
and
addb
push
and
sahf
aaa
xchg
out
dec
cmc
loope
xorl
scas
inc
dec
and
imul
cmpsb
push
inc
or
aaa
xchg
out
leave
dec
daa
mov
and
iret
js
sub
push
ljmp
inc
ja
pushf
out
inc
loopne
push
or
loop
pop
mov
pusha
cmpsl
dec
sub
pop
jne
cwtl
jmp
test
test
test
lcall
shlb
sub
mov
pop
testl
push
shlb
mov
lods
lret
jne
roll
test
cmpsl
fs
mov
ret
out
test
dec
sub
sahf
mov
inc
mov
push
fdivr
xor
or
cwtl
dec
adc
dec
push
mov
outsb
push
push
xchg
push
inc
sbb
ret
movsl
test
sub
cmp
mov
or
add
sub
xor
popf
data16
jle
dec
mov
cpuid
push
lahf
sbb
pop
cmpsl
mov
iret
and
mov
mov
cmpsb
fmulp
add
jae
movsl
sarl
and
fnstcw
xchg
imul
mov
scas
ret
aad
jo
cs
adc
lods
out
test
mov
adc
test
inc
testl
fimuls
rorb
sub
mov
popa
ljmp
mov
ret
cld
pop
ret
adc
push
les
sbb
jp
sbb
adc
adc
lods
mov
cmp
mov
mov
jge
or
or
or
add
leave
xorl
adc
cld
sbb
cwtl
movsb
add
ja
lods
lret
xchg
rcll
inc
add
xchg
sahf
or
out
icebp
out
std
xor
fs
cmp
inc
inc
inc
sti
xor
repz
jne
mov
push
dec
scas
xor
mov
movsb
cwtl
shll
mov
mov
aaa
loope
fisubs
mov
dec
les
int3
inc
inc
dec
sahf
jae
push
mov
test
dec
push
fdivl
and
mov
out
or
orl
push
out
adc
bound
imul
sbbl
sahf
cmp
add
popl
cld
fcoml
mov
jb
out
rcrl
jge
jo
int3
ljmp
andl
fdivr
xor
orl
push
mov
jecxz
pop
and
cmp
fcomps
dec
ds
mov
shrb
test
jge
add
call
ret
dec
xor
popa
stos
shrb
aad
adc
sbb
add
pusha
mov
inc
fldcw
dec
out
add
jb
lods
enter
push
addl
jecxz
lret
or
and
in
std
and
mov
and
fs
pop
std
push
mov
in
sbb
popa
sbb
test
cmp
xor
jae
push
or
xchg
mov
xchg
xor
push
push
mov
sbb
bound
cmp
iretw
out
ficoms
out
push
jo
or
inc
sbb
lock
in
daa
jmp
adc
jo
std
lahf
nop
and
mov
mov
adc
push
fcompl
es
cmp
xchg
mov
mov
xchg
ret
pop
sub
inc
mov
jl
in
add
push
push
rolb
mov
loopne
add
ja
xor
and
dec
mov
sbb
and
bound
cmpsb
xchg
push
std
jb
lock
fwait
and
stos
loope
subb
popf
imul
adc
jne
xchg
xchg
insb
fisttpl
inc
stos
inc
outsb
lea
cwtl
popf
and
xchg
fbstp
mov
pop
mov
inc
lcall
lds
dec
sub
jno
imul
stos
lods
mov
adc
cmp
add
jb
addb
xchg
out
sub
insl
mov
fildll
push
lahf
mov
inc
mov
and
and
push
cmp
or
mov
sbb
or
cmc
inc
pusha
mov
dec
fsubp
and
xchg
in
cmp
cmp
lret
inc
pop
aad
cltd
or
and
stos
ljmp
int3
mov
push
mov
mov
jae
jns
ficoml
mov
inc
addl
push
movsb
sub
popf
adc
mov
cs
adc
adc
jg
xor
sysenter
dec
dec
ss
xchg
sbb
out
mov
es
js
adc
test
fiadds
mov
aad
mov
lea
mov
lahf
mov
les
movsb
and
and
mov
leave
test
cmpsl
aaa
rorl
xor
pusha
xchg
jno
out
je
lret
xlat
inc
and
flds
mov
sbb
les
mov
add
cmp
mov
inc
jmp
xchg
cli
sahf
out
pushf
dec
imul
fcoms
jg
pop
push
es
mov
lret
lea
push
adc
lahf
daa
ds
pop
outsl
je
sbb
call
push
inc
and
dec
push
mov
aas
xchg
in
and
adc
adc
out
imull
cmpsl
dec
sbb
jmp
stc
pusha
mov
mov
fnstsw
mov
lds
sti
test
mov
sbb
in
mov
push
lcall
andb
sub
cmp
mov
cmp
mov
fs
sub
repz
inc
pop
mov
sub
fmul
mov
mov
add
mov
mov
xchg
push
mov
mov
sub
in
lcall
adc
sbb
clc
cmp
imul
adc
or
push
push
notl
div
data16
aas
xchg
addr16
dec
and
lret
je
xor
mov
push
and
sub
test
test
fdivrp
xchg
push
and
and
rcll
out
push
sti
rol
sbb
sti
mov
sbb
mov
in
fmulp
fadds
out
fmul
mov
mov
fwait
daa
loope
xchg
push
and
ret
stos
sbb
pushl
xor
testl
push
mov
out
mov
jo
jns
push
lahf
cmp
push
mov
mov
jns
add
shrb
fimull
movsl
xchg
sbb
xchg
test
cs
add
pusha
adc
notl
and
jo
fnstsw
les
cmp
xchg
xchg
rcrb
into
in
sbb
sbb
lea
dec
jg
imul
or
adc
in
add
repz
mov
sbbb
sub
adc
push
ljmp
jb
adc
loope
rolb
or
mov
fcomps
pusha
sahf
mov
lods
dec
xchg
pop
aaa
sbb
test
repnz
inc
jo
ja
push
mov
pop
in
xor
jno
mov
lcall
roll
mov
aaa
iret
mov
xchg
cmp
lret
daa
aas
test
cmp
xor
xor
shlb
sahf
push
mov
repz
scas
sub
lods
push
sarb
out
mov
mov
mov
sub
xor
sbb
lret
fcompl
add
bound
sub
adc
movsb
jno
enter
les
scas
mov
inc
lret
or
movsb
and
jae
pop
cmp
add
mov
gs
test
fldcw
cli
test
dec
ja
jmp
pop
notb
mov
in
in
loopne
push
xchg
lcall
cli
pop
mov
iret
adc
add
mov
andb
fmuls
pusha
rclb
xchg
mov
jae
dec
sahf
pop
and
xor
cltd
loopne
arpl
lods
xchg
inc
push
push
subb
daa
shr
inc
lret
push
dec
lahf
sahf
sub
mov
adc
les
add
sbb
aas
mov
ja
push
and
mov
das
lcall
xor
aam
pop
or
lcall
lcall
cmp
dec
mov
sahf
dec
arpl
lods
mov
push
das
aam
in
inc
jp
call
cmp
push
xchg
cmp
in
leave
es
sbb
xchg
dec
mov
hlt
rcll
and
or
cmpsl
push
mov
aaa
ss
pop
sub
fsubrp
popa
mov
dec
xchg
push
mov
adc
mov
dec
iret
cmp
ret
mov
ficoml
push
aad
lds
je
aas
xchg
aad
bnd
dec
testl
fimull
sub
push
jge
pop
xorb
ss
adc
outsl
adc
int
leave
push
test
scas
notb
int3
add
push
dec
int3
clc
adcb
mov
adc
inc
gs
jl
fcmovnbe
icebp
jle
not
jecxz
mov
pop
stos
pushf
push
pop
rol
es
xchg
mov
imul
in
sub
loop
lret
lahf
ret
out
mov
sahf
movsl
inc
fidivl
dec
dec
jle
nop
push
xor
inc
add
and
ror
pop
inc
roll
push
jl
in
cmc
push
das
mov
xor
adcl
mov
and
test
iret
int3
sub
lret
adc
addr16
and
inc
jmp
xchg
repz
xchg
and
int3
fcoms
mov
ja
mov
addb
lret
inc
imul
icebp
jmp
mov
mov
dec
mov
in
sub
pop
pop
mov
xor
add
dec
sti
cmp
lret
inc
sub
enter
cmp
lock
inc
xor
mov
int3
xchg
movsb
dec
pop
stc
inc
out
stc
push
pop
loope
cmc
jne
arpl
xor
mov
iret
add
daa
or
je
mov
cmp
gs
rcll
add
andb
push
ret
sub
xor
sarl
mov
repz
jnp
pushf
xor
test
sbb
lods
mov
popf
aam
adc
stc
cwtl
push
pushf
lcall
add
mov
or
inc
or
daa
ffreep
scas
test
push
out
cwtl
inc
addr16
inc
lahf
cwtl
shll
add
jb
jmp
push
test
mov
cltd
js
mov
or
pop
addr16
sarl
mov
xor
filds
sub
js
je
jmp
lret
jg
fnstenv
les
imul
cmp
adc
cmp
int
sbb
call
movsb
int
push
add
fldt
xchg
jbe
adc
push
movsb
mov
test
push
lods
popf
xor
arpl
rcr
lods
xchg
sub
mov
ds
loope
jmp
pop
adc
rcrl
xchg
test
push
sbb
incb
xlat
pop
pop
sub
push
add
cmp
push
push
divb
push
inc
fbld
lcall
xor
sub
stos
fs
xchg
push
pop
insb
fsubrl
js
push
push
cmp
rorb
jmp
fdiv
sub
js
mov
aas
pop
jle
orl
mov
mov
cli
jp
mov
cmp
icebp
fwait
je
push
std
cmpsl
xchg
cwtl
ffreep
insl
jno
fisubrs
outsb
mov
repnz
inc
dec
stc
in
or
add
xchg
jl
push
imul
sub
cmpsl
lret
push
mov
mov
lods
push
std
leave
pusha
dec
stos
xchg
ljmp
stos
hlt
int3
cwtl
inc
push
shlb
mov
bound
push
in
ficoml
xor
pcmpeqw
or
mov
cli
and
addl
add
cmp
pop
and
mov
into
cmpsb
test
es
ss
jne
aad
mov
loope
ror
jb
jge
and
and
leave
xchg
popa
jno
push
sbb
mov
mov
pop
negb
pusha
dec
data16
mul
add
sbb
pop
jnp
imul
leave
insb
dec
lahf
pop
imul
jecxz
inc
popf
sahf
filds
in
dec
push
sub
dec
xchg
dec
pop
daa
frstor
sub
nop
dec
pop
xchg
sbb
stos
jae
shr
pop
or
adc
cwtl
xlat
iret
pop
ss
mov
dec
jp
mov
ret
sbb
xor
add
lahf
and
jl
cmp
je
mov
mov
inc
pandn
and
pop
cmp
sub
dec
mov
movb
push
pushl
loopne
push
stos
or
stos
cmpsl
mov
cmp
sub
push
fcomp
sti
push
repz
and
sub
add
xchg
mov
mov
jg
pop
cs
into
sub
jl
pop
inc
cltd
mov
fmuls
mov
lret
out
sti
pop
mov
lds
mov
orl
add
std
xchg
xchg
xor
lods
repz
in
mov
push
or
xor
stos
pop
popa
jle
dec
push
mov
add
xchg
adc
add
push
mov
push
add
in
decb
imul
test
xlat
loopne
fadd
rcrb
popf
test
adc
add
lds
push
pop
loope
out
xlat
aaa
popf
and
fbld
push
movsl
lds
daa
push
test
rclb
insb
in
hlt
int
out
cmpb
insl
push
das
dec
sbb
add
cmp
adc
outsl
lcall
xchg
jg
push
dec
add
out
ljmp
jo
roll
and
xor
dec
fisubl
rol
out
sbb
cli
mov
push
push
sub
insl
arpl
sbb
pop
stos
movsl
sbb
stos
dec
and
cmpsb
test
in
or
sbb
sub
into
pushf
mov
loop,pt
fstpl
cmpsl
sahf
push
les
adc
push
repnz
push
mov
jae
popw
ljmp
sbb
stos
xor
sbb
push
loopne
and
push
mov
inc
movsl
aam
scas
icebp
out
shl
push
hlt
pushl
cmp
jnp
push
insl
imul
in
insb
int3
rol
pushf
sbb
outsl
das
mov
data16
push
mov
xor
cwtl
enter
and
dec
pop
pop
popa
mov
out
scas
jb
in
mov
rclb
push
sub
or
ret
or
dec
imul
imul
pop
xchg
test
inc
jae
ret
in
push
stos
fldcw
add
jmp
stos
stos
dec
xchg
out
or
sti
mov
push
add
mov
sbb
rolb
arpl
ret
out
sbb
adc
imul
lcall
fsubrp
cld
aam
hlt
shlb
cld
mov
sbb
inc
mov
frstor
and
xor
fidivrs
mov
test
shl
adc
lods
push
sbb
ret
mov
pop
loopne
popa
fcomi
sbb
sub
cwtl
daa
out
xchg
cli
clc
cmp
ljmp
adc
jecxz
orb
aam
mov
gs
shl
add
loopne
insb
mov
call
imul
add
cmp
cmp
in
lcall
add
jp
sub
rcr
ds
lahf
jns
and
movsb
and
add
dec
rorb
insl
pop
fnstcw
out
dec
shrl
xor
mov
test
and
jae
mov
lcall
jns
adc
int
mov
loope
cmc
push
iret
lcall
ljmp
repz
subb
sbb
jecxz
sub
in
xor
sub
loop
cmpsl
movsl
pop
jp
cmpsl
scas
and
movsl
cmp
lret
adcb
jbe
inc
push
sbb
leave
in
in
mov
add
sub
jle
push
xor
mov
or
movsb
stos
dec
cwtl
loop
outsl
dec
cld
xor
xchg
sahf
adc
fmuls
mov
cli
jo
repnz
in
les
mov
push
orb
push
ret
xor
das
push
xor
test
mov
push
push
in
dec
xlat
add
and
cmp
xchg
pop
in
popf
outsb
das
insl
sbb
repz
mov
jns
and
aaa
mov
jmp
sub
dec
mov
fwait
std
sbb
fidivs
push
rclb
cmp
xor
into
stos
sbb
push
sub
push
jle
sbb
sbb
adc
outsl
inc
mov
push
xchg
jb
mov
mov
ljmp
out
daa
in
or
jecxz
xor
lock
jae
into
jg
dec
lods
lcall
gs
dec
and
test
enter
push
movsb
cmpsl
adc
cmc
mov
jmp
push
pop
pop
lods
jae
les
mov
lock
push
stos
jecxz
push
xchg
imul
ljmp
dec
jo
add
into
cmc
std
lds
sti
sbb
xchg
sahf
mov
sbb
and
mov
std
js
cmp
insl
lea
or
mov
push
sti
cmpsl
push
jge
paddb
lods
push
lods
pop
or
test
fbstp
adc
push
cmp
icebp
push
add
push
cld
pop
outsb
push
out
sub
popl
sub
pop
fstpl
popf
and
cmp
lds
std
jmp
adc
xor
sub
imul
fs
pushl
push
xor
jne
mov
adc
pop
fcomps
mov
in
arpl
add
fwait
mov
sbb
or
adc
push
jmp
xchg
roll
xchg
and
xchg
movsl
push
pmuludq
add
insl
or
push
push
mov
adcl
xchg
lcall
fisubl
adc
scas
mov
outsb
stos
movb
inc
mov
push
mov
in
mov
push
enter
cmp
xchg
movsl
pop
pop
add
mov
fdivr
xchg
enter
mov
mov
sub
push
ret
sbb
popf
loop
addl
xlat
cltd
mov
in
xor
or
bound
icebp
adc
mov
stc
dec
or
ret
daa
call
xor
sbb
sbb
xor
or
xor
mov
inc
fstps
dec
xchg
xor
push
daa
sbb
adc
xor
dec
cmpsl
pop
fdivs
or
fiaddl
add
mov
aaa
data16
filds
inc
push
mov
sub
scas
mov
mulps
outsb
stc
push
jo
and
arpl
fwait
mov
les
adc
rol
dec
or
ffree
sub
mov
and
mov
sbb
cmp
inc
icebp
and
pop
fs
xchg
filds
add
insl
iret
cli
rcrl
sbb
ljmp
sbb
pop
cmp
sbb
jle
jbe
pop
mov
in
push
push
and
jmp
fs
xchg
pop
inc
inc
pop
jg
xchg
sahf
xchg
sub
out
in
mov
inc
jg
in
dec
in
add
adc
js
add
mov
inc
shll
pop
leave
adc
xchg
inc
mov
mov
mov
jl
sbb
xchg
cmpsl
pop
pop
stos
xor
pop
in
jno
pop
lret
pop
frstor
xlat
stos
push
jo
aas
mov
add
and
lret
inc
push
mov
mov
sar
in
xchg
push
insl
roll
adc
test
test
aam
dec
test
hlt
sbb
sub
in
jo
je
add
xchg
loopne
xchg
les
js
sub
fimuls
das
idivb
ret
imull
xor
cmp
jb
sub
mov
je
sub
jb
cwtl
jb
lods
icebp
call
lea
aas
shrd
test
fs
push
jne
push
and
jge
or
fcmovbe
xchg
cmp
inc
mov
aam
mov
rolb
shll
out
out
fbstp
pop
icebp
gs
xchg
and
clc
jp
xor
mov
pop
push
mov
cli
pop
sub
out
arpl
or
jbe
fsts
or
pop
movsb
or
push
xchg
push
push
xor
repz
test
in
mov
mov
arpl
aas
bound
fwait
push
xor
jg
add
mov
mov
pop
imul
adc
pushf
pushf
adc
xor
in
and
outsb
mov
mov
jno
fcmovne
mov
mov
nop
mov
inc
mov
mov
sahf
cmpb
jl
int3
lock
cmpsl
jecxz
jo
ret
nop
es
mov
adc
pop
shll
nop
push
imul
push
push
rcrl
test
xchg
xor
xchg
inc
mov
jbe
enter
fsubs
mov
idiv
lea
jno
jecxz
int
and
daa
sbb
xor
cmp
jo
rorb
xor
aaa
mov
in
cmpsb
dec
mov
hlt
std
cmpsl
jne
cmp
test
arpl
ror
pop
xlat
push
mov
out
mov
sub
xchg
std
jne
xchg
divl
push
mov
scas
bound
mov
push
jecxz
jmp
int
out
ss
mov
cmp
mov
push
or
out
negl
cmp
pop
inc
hlt
cmp
daa
jbe
xlat
dec
adc
dec
scas
mov
fcmovnu
jecxz
test
or
adc
ljmp
sub
aam
jo
mov
std
andb
lods
dec
cmp
pop
leave
fmull
sbb
popf
inc
mov
cwtl
inc
mov
or
dec
fsubl
sbb
into
fnstsw
jo
negb
hlt
cmc
leave
and
ret
mov
jb
insb
outsb
or
dec
cmp
pop
rep
test
or
nop
insl
rcrb
cmp
dec
divl
add
in
pop
xchg
pop
bound
pop
mov
dec
xor
add
ror
mov
mov
cmp
xor
outsl
int3
movsb
gs
bound
lahf
jmp
cld
jge
push
or
jae
push
mov
lods
repnz
adc
adc
adc
xor
pop
push
outsb
test
ret
cmc
in
int
push
mov
jne
ret
adc
int
shlb
mov
out
outsl
xchg
sbb
sub
test
scas
push
fwait
cli
scas
testl
pop
lods
stos
dec
in
mov
aas
push
gs
outsb
lods
cmp
push
popa
and
inc
lcall
jae
xor
cmp
push
cltd
test
stos
jne
mov
insb
and
xlat
aas
bnd
fs
aaa
xorb
setb
movb
jl
jne
outsl
pop
xchg
jl
adc
inc
pusha
lret
add
hlt
rclb
in
xchg
bnd
adc
mov
xchg
test
test
test
in
or
test
leave
rolb
lret
mov
daa
or
push
outsb
sbb
fsubrs
jne
sub
mov
dec
aas
add
dec
mov
add
clc
xchg
fnstcw
aad
insb
mov
inc
stc
int
mov
xlat
lcall
or
cmovns
xor
sub
push
pop
pop
adc
dec
rorb
sub
mov
sub
pusha
push
push
jae
inc
cwtl
cld
pop
and
xchg
loope
or
data16
shrb
jle
int3
sahf
fistps
xchg
and
repz
sbb
fists
push
cmp
movb
stos
mov
loop
scas
bound
arpl
xchg
cmpl
popf
mov
fists
pushf
dec
dec
and
test
into
push
movsb
bound
aas
test
dec
sbb
push
lds
cs
mov
mov
mov
sbb
popf
ss
dec
hlt
repz
js
imul
imul
addr16
cmp
or
stos
inc
push
cmc
sahf
mov
mov
jo
mov
fwait
add
outsl
inc
add
add
mov
sub
fldenv
mov
xor
push
das
mov
lods
inc
mov
adc
out
lea
dec
dec
mov
inc
leave
jge
lock
insb
or
aas
pop
mov
mov
mov
pop
test
fsubr
mov
sub
das
mov
clts
push
movsl
lret
les
cmp
lds
jecxz
fildll
cmp
mov
mov
inc
mov
mov
ds
mov
outsl
push
jecxz
xchg
jae
ret
cli
jo
ss
lcall
pop
xchg
mov
fcmovne
add
push
repz
sbb
iret
pop
out
in
lret
sub
xchg
xor
jne
aam
dec
and
cmp
sbb
popf
or
xchg
lods
in
mov
cmp
sbb
les
pop
mov
dec
pop
dec
dec
jmp
int
jl
movsl
add
add
xorl
aam
pop
and
fists
mov
jge
popa
int
push
jecxz
or
jns
popa
fdivr
movsl
pop
inc
es
and
push
cmc
add
stc
push
daa
add
dec
and
xchg
icebp
cmp
mov
cmpsl
xchg
sub
sbb
cmp
mov
fucomp
popa
imul
inc
push
lret
inc
sbb
ja
cmp
out
fldcw
aad
js
shufps
decb
or
pop
enter
inc
push
dec
adc
mov
pop
sbb
gs
cmp
aas
ss
fucomip
ds
int3
insl
inc
pop
mov
lcall
mov
loop
insb
jg
daa
icebp
or
and
jmp
in
mov
pop
xchg
sar
xchg
fisubl
int
shlb
pushf
pop
and
dec
push
sbb
mov
cmp
add
jae
scas
loop
mov
pop
pushf
rcrl
xchg
dec
inc
lret
and
aam
arpl
jmp
mov
imulb
sub
mov
pop
stc
pop
mov
push
xor
adc
outsl
ljmp
xchg
push
test
xor
sbbl
out
jle
pop
mov
mov
push
or
xor
xor
sbb
push
pop
cld
lea
or
scas
out
dec
xchg
mov
pusha
add
or
les
lds
jb
xchg
add
mov
jp
fwait
fwait
push
adc
movsl
into
cmp
dec
addr16
mov
xchg
adc
popf
sub
popf
cmpsb
dec
lock
mov
notb
inc
and
pusha
mov
data16
cwtl
in
mov
sar
mov
into
int3
loopne
inc
scas
xor
sbb
int3
push
lret
iret
divb
clc
and
divb
pop
pushf
add
jmp
movsl
fbld
cmp
sbbl
fimuls
std
cwtl
pushf
xchg
push
fmul
fisubrl
inc
xor
test
push
xorl
cmp
fistps
xchg
inc
shll
test
loop
outsl
pusha
push
mov
insb
sbb
shlb
mov
jb
cmp
cmpsb
lahf
add
mov
iret
test
mov
fs
mov
pop
ret
push
ja
daa
les
pop
in
inc
out
mov
shl
aaa
out
adc
inc
xchg
adc
call
lds
data16
xlat
bound
inc
pop
ret
cwtl
scas
insb
inc
iret
subl
enter
pop
pop
pusha
fninit
gs
xchg
push
jnp
add
fsubs
jp
lods
test
js
aad
out
sub
xchg
adc
add
ja
lcall
idiv
pop
insl
adc
jo
out
and
stos
dec
cmp
mov
sub
and
enter
aad
neg
inc
or
and
mov
das
or
push
jo
add
jge
arpl
lods
jbe
mov
ret
cli
mov
xchg
mov
pop
push
shrb
imul
cli
jl
pop
push
jle
cmc
jns
push
jecxz
dec
jp
in
sbb
or
sbb
iret
fidivs
push
push
test
lods
addr16
pop
jae
add
in
shlb
in
pop
insb
jns
movsb
loop
repz
rcrl
cmp
push
std
adc
mov
cmp
in
rolb
pop
movsl
pop
bnd
lret
dec
xor
sub
jns
xchg
pushw
shrl
sti
fidivrs
stos
pop
mov
jmp
inc
lock
xchg
adc
mov
sbb
adc
ja
pop
add
cli
iret
mov
pop
cmpsl
stos
sub
cmc
xchg
inc
out
mov
lock
or
cmp
jl
pop
or
inc
ficoms
pop
or
in
enter
ljmp
mov
lods
hlt
pmaxsw
imul
xchg
cmp
arpl
mov
ja
leave
pop
mov
inc
mov
pop
jp
push
cmpsb
fldt
sbb
dec
idivb
cmp
fchs
mov
adc
pop
adc
call
sub
daa
ljmp
clc
fldl
jbe
push
icebp
pop
nop
stos
cmpb
shlb
cs
icebp
mov
xchg
or
out
das
idiv
dec
dec
xor
dec
dec
dec
dec
push
iret
push
sbb
lock
cld
mov
lock
pop
fistl
mov
mov
cli
inc
cmp
shl
push
pop
shll
jge
out
sbb
mov
popf
enter
sub
icebp
jo
dec
adc
das
fst
int
dec
inc
sub
aam
or
cmp
sub
push
adc
das
mov
dec
aaa
std
or
arpl
add
sub
push
clc
addl
mov
mov
cs
les
push
pop
xor
cmp
cs
fcmovnb
fcmovb
stos
cmp
fistl
pop
push
jl
xor
pop
pushf
leave
xchg
scas
icebp
xchg
leave
aad
movsl
ljmp
push
pop
clc
inc
xor
stos
xchg
call
into
das
sub
jnp
in
or
dec
add
insl
imul
aad
daa
jecxz
pop
cmp
push
add
popf
shll
and
cmp
mulb
aam
in
stos
jnp
or
lret
inc
mov
xchg
push
pop
cmp
pop
daa
dec
mov
mov
add
in
movsb
cli
int
xor
jns
mov
mov
mov
sub
xor
and
insb
sub
ljmp
outsl
and
and
lods
cwtl
push
int
sub
and
mov
jge
mov
sbb
sbb
dec
mov
dec
push
add
sbb
inc
push
xchg
xor
and
inc
xchg
push
or
aaa
jae
rolb
sub
mov
fdiv
lods
inc
cmpsb
add
mov
mov
sub
jno
push
cmp
pushf
push
lahf
xor
inc
mov
xchg
pop
aam
pop
cmp
jge
int3
xor
test
adc
rclb
test
sbb
push
mov
jo
dec
das
sbb
insl
inc
add
pop
ret
pop
hlt
in
xor
push
bound
jl
mov
push
xchg
arpl
add
rol
or
add
pop
out
push
int
repz
fldl
or
dec
aam
mov
pushf
cmp
loop
add
dec
dec
ror
xchg
mov
mov
xor
add
xchg
push
or
lods
call
inc
mov
bound
lret
mov
fadds
mov
sbbl
iret
push
daa
jl
jmp
jae
sbb
sbb
cli
test
dec
repz
cmp
test
roll
in
fistl
lret
cmpsb
pop
loop
add
xor
push
movsl
fcompl
pusha
imul
push
cld
test
lret
add
arpl
icebp
cmpsl
into
jp
pop
popf
fidivrl
idivl
mov
out
lret
das
addb
movsb
fildll
push
mov
jge
ret
imul
ss
outsl
cmp
sub
test
out
jnp
lahf
push
fisttps
rolb
ja
pop
pusha
mov
mov
fnsave
pop
or
jne
jbe
jmp
je
jmp
bound
test
dec
fisubl
pop
mov
or
loope
cmp
lret
jbe
loope
xor
and
aam
xchg
sub
inc
fcompl
xor
mov
pop
test
mov
aad
ret
mov
popa
adc
lret
cltd
loope
pop
mov
mov
sub
popa
es
jo
mov
and
jae
in
xor
adc
ss
scas
cmp
pop
cwtl
sub
scas
sahf
fs
pop
stos
ja
mov
lods
pop
out
jmp
iret
stos
mov
frstor
imul
inc
pop
cmp
cmp
mov
mov
cmp
mov
lcall
cmp
xchg
cmp
cmp
roll
or
negb
pop
jbe
lahf
fwait
cmp
pusha
test
fcomps
inc
mov
divb
mov
movlps
jge
jmp
lret
mov
pop
add
neg
push
ret
jle
aaa
das
jns
call
pop
jmp
or
mov
aas
stos
jmp
fsubs
call
rcl
adc
scas
xor
xor
add
cmpsb
aas
sub
mov
std
push
shll
pop
cmc
xlat
sbb
stos
into
sbb
jae
xor
into
mov
cmpsl
shll
jns
push
nop
jmp
pop
aaa
mov
cld
pop
je
mov
cmpsl
leave
scas
ret
dec
orb
cltd
int
dec
inc
push
xchg
mov
inc
pop
insl
sbb
std
push
cmc
ja
sbbb
hlt
inc
pop
repnz
mov
xor
jle
pop
adc
xor
out
xor
fistl
adc
or
push
clc
jb
sbb
pop
ljmp
aam
sbb
xlat
xchg
lea
sti
pop
cmc
add
ret
sbb
mov
stos
cmp
nop
or
inc
cmp
dec
jns
xchg
jp
xchg
mov
inc
push
out
mov
je
xchg
insl
stos
lahf
dec
imul
and
movsb
push
push
in
or
push
adc
push
sbb
scas
xchg
lds
loope
inc
jnp
jns
lock
fidivl
mov
push
or
xor
sbb
bound
add
pop
imul
and
inc
imul
lret
lods
fisttpll
xchg
xor
movsb
sbb
push
fsubp
xchg
shl
or
add
jns
jb
movsw
push
jns
shlb
push
xchg
xor
cmp
mov
cwtl
push
push
std
fcmovbe
or
or
sbb
xlat
aaa
and
gs
mov
dec
sbb
sbb
and
or
lock
cmpb
repz
sbb
or
sub
xchg
hlt
xor
in
adcl
mov
andl
test
push
xchg
cmp
dec
movsb
shl
icebp
mov
loope
lcall
xchg
js
dec
sbb
mov
jbe
test
add
repnz
popa
leave
data16
shlb
rcl
mov
ficoml
cmpsb
daa
mov
dec
aas
pop
outsb
xor
add
test
cmp
jno
aaa
dec
in
jo
in
mov
mov
jae
movsl
pop
mov
mov
sti
int
dec
lret
adc
mov
xchg
repnz
call
in
fadd
movsb
inc
sbb
outsl
push
dec
das
push
cld
dec
mov
jno
imul
cmp
std
iret
jmp
mov
sbbb
mov
jecxz
cmp
push
or
jns
cld
roll
xchg
imul
sti
aas
jg
push
lcall
jge
dec
dec
or
fimull
xchg
inc
dec
push
insb
fwait
add
mov
lods
mov
inc
imul
jns
xchg
lods
xchg
addr16
dec
in
int3
test
adc
push
push
fdivl
gs
sbbl
inc
inc
sub
xor
fwait
and
sub
fwait
daa
imul
insb
sahf
push
jb
dec
int
movl
adc
je
pop
stos
test
and
or
ficoml
push
idivb
or
mov
ss
imul
push
loope
jno
popa
sbb
hlt
xchg
outsl
data16
fwait
push
out
mov
ljmp
int
imul
cmp
mov
or
add
rol
jbe
fildll
aas
lods
test
push
out
inc
gs
jg
roll
and
adc
idiv
cmpsl
cmpl
test
sub
adc
push
mov
sub
push
add
outsl
std
jno
pusha
test
push
sbb
mov
pop
xor
or
mov
sbb
pop
out
xlat
fdivrs
xchg
and
mov
mov
sub
lods
and
outsb
stc
js
or
and
aam
lret
xchg
jne
into
mov
loopne
pop
dec
sbb
rcrl
jle
lret
popf
or
popf
mov
test
cmp
mulb
push
jle,pt
pop
fs
cmovge
pop
cmp
mov
or
jp
fists
mov
and
mov
ret
add
cmp
aad
push
test
aas
lds
jg
scas
rolb
jns
or
loopne
lock
int3
mov
dec
imul
test
sub
add
out
scas
push
jmp
or
sub
jns
lcall
je
add
jno
lret
xor
xor
ja
stc
mov
iret
cmp
and
xchg
imul
test
into
cmpsl
push
mov
mov
cmp
mov
mov
bound
cwtl
cmpsl
and
call
xor
mov
js
mov
jle
ror
mov
pop
pop
sub
cmp
and
cli
pop
stos
jns
sub
ja
int
outsb
jb
data16
fistpl
cltd
pop
rcl
and
add
insb
hlt
jmp
add
mov
popf
lods
dec
arpl
inc
cli
jmp
comiss
push
add
inc
pushf
sti
pusha
add
pop
rclb
les
scas
mov
loop
inc
push
nop
sahf
xor
mov
xchg
lret
and
mov
out
push
xchg
cmc
add
pop
leave
cli
scas
add
subb
adc
push
mov
sbb
stos
jae
pop
movsl
mov
cs
call
out
cwtl
shl
mov
andb
jmp
jbe
les
lcall
lods
ljmp
lahf
push
inc
enter
js
daa
jnp
inc
mov
cmpb
mov
xchg
scas
stos
out
pop
cmp
outsl
sahf
gs
jne
loopne
inc
lds
andl
adc
mov
push
mov
mov
in
add
adc
push
lods
jns
pop
aaa
jp
shll
pusha
lret
or
adc
sub
jb
push
popf
lcall
push
sbb
popa
xor
xchg
rcll
aad
dec
bound
ficoml
fucomi
lods
fcmovnbe
adc
repz
push
cld
or
cs
push
adcb
and
push
mov
inc
in
icebp
ret
mov
add
jbe
jno
xchg
outsl
fldenv
mov
dec
dec
inc
mov
adc
or
inc
cmp
imul
popa
shl
hlt
aas
imul
adc
xchg
push
mov
or
jne
push
rcr
xchg
or
sub
lods
add
mov
repz
sbb
sub
iret
mov
sub
cmpsb
and
xchg
mov
dec
mov
aam
aas
inc
lods
jmp
pop
xlat
dec
sub
data16
cmp
inc
pop
push
outsb
fidivs
mov
fdivr
mov
je
fnstsw
imul
jb
xor
scas
mov
pop
out
pusha
call
or
cmp
test
xchg
xchg
cmp
mov
inc
insl
insb
mov
inc
pop
jge
xor
pop
and
add
adc
xlat
ret
add
cmp
push
push
lock
sbb
shrl
push
ss
mov
jns
mov
out
push
arpl
mov
xchg
push
push
pushf
inc
stos
pop
movsl
popf
sub
inc
jle
fcomps
das
inc
hlt
imul
ja
add
push
inc
leave
test
fldcw
mov
addr16
stos
decb
sbb
mov
movsb
add
lcall
mov
or
inc
jmp
push
lods
daa
fsts
mov
xchg
add
sbb
mov
std
cmpps
add
mov
add
and
ss
orb
fcmovnu
mov
addr16
bound
sbb
lds
push
mov
in
fistl
nop
or
jns
je
cwtl
sub
pop
popf
popf
imul
mov
mov
clc
mov
lds
mov
sbb
inc
xor
dec
repnz
inc
sub
cmp
outsb
lret
push
push
push
daa
aas
sbb
dec
loop
clc
in
mov
add
ret
fdivrl
cmp
mov
ret
icebp
sahf
pop
add
leave
mov
lea
loop
push
sbb
in
mov
and
repnz
test
pusha
sub
mov
xchg
jp
fsubrs
mov
mov
xchg
pusha
lods
cmp
test
add
cmpsl
mov
fsubl
cld
clc
aas
jmp
mov
and
sub
mov
imul
jle
sbb
jae
mov
cmpsb
push
inc
jg
pop
push
bound
xchg
aaa
xorl
or
sub
xchg
out
mov
in
adcl
add
stos
aas
sbb
dec
out
inc
es
loop
gs
pop
mov
xchg
mov
adc
pop
scas
mov
enter
dec
aam
mov
fs
cmc
loope
mov
rcrl
mov
cli
jnp
cmp
add
pop
cltd
cltd
xor
and
xchg
jo
inc
and
xchg
inc
cmp
nop
adc
pushf
push
xor
jmp
ret
stc
jbe
cltd
aam
push
sub
pop
scas
test
xchg
add
fsubrp
lods
leave
outsl
pushf
lret
call
sub
xchg
push
mov
add
xchg
sti
and
pushl
mov
dec
adc
mov
shll
dec
add
jno
outsb
xor
lcall
cli
mov
push
lahf
fisubs
xchg
int
or
jno
jge
shll
shl
loopne
push
pop
bound
mov
fcmovnbe
sbb
cli
mov
fisttpl
or
lret
clc
push
insl
filds
sbb
pop
ud1
xchg
add
pop
cld
js
into
adc
add
nop
lret
outsb
jg
addr16
push
dec
insl
sbb
ret
push
js
adcb
outsl
adc
mov
je
and
jle
jno
or
mov
inc
es
mov
adc
orb
or
jmp
xlat
mov
dec
out
dec
outsl
addl
inc
rclb
push
and
in
mov
mov
inc
push
fldl
stos
xchg
jnp
lret
js
mov
ja
mov
andb
xchg
push
fldl
sub
xchg
out
fmuls
inc
shlb
push
jne
or
sub
add
inc
cmp
or
das
repnz
addb
xlat
inc
dec
dec
push
js
je
notb
pop
mov
mov
mov
pushf
lahf
cmp
pop
xchg
xlat
test
sub
sub
subl
loopne
insb
jle
push
and
outsl
cmc
insl
and
jp
fdivrl
push
lods
xor
mov
fisubl
stos
fs
cmpsb
jns
cmp
xor
lds
push
js
dec
subl
xchg
adc
jmp
andl
cld
in
in
xor
aas
push
or
repnz
push
jno
add
pop
xlat
movsl
or
xchg
adc
pop
mov
adc
leave
mov
adcl
mov
xor
mov
jmp
jnp
and
es
sub
mov
jno,pn
cmp
out
aad
and
lds
loopne
addr16
sub
xchg
cmp
pop
push
and
pop
das
jo
jmp
stc
loop
idivl
mov
shl
push
sub
jl
push
add
jg
out
arpl
xchg
xchg
add
pop
jg
out
icebp
xor
lret
cmpsb
cmp
xor
clc
mov
dec
dec
das
lods
jo
dec
mov
jl
push
and
mov
fsubs
cmp
inc
mov
insl
add
je
addl
dec
jbe
mov
push
xchg
pusha
or
mov
add
push
mov
shl
repz
pop
mov
icebp
mov
outsb
inc
in
add
pop
adc
cmpsb
lahf
mov
repnz
adc
xchg
sbb
fistl
stc
sarb
sbb
push
or
add
pushf
out
leave
mov
fisttps
test
mov
inc
ja
insb
dec
lods
and
cld
jb
xlat
testl
xor
rorl
sub
or
xchg
xchg
mov
test
sahf
xchg
push
int
mov
or
inc
das
in
cld
addr16
adc
add
fistpl
jl
lret
adc
sub
aaa
stc
jne
test
xchg
lcall
add
adc
jmp
dec
fisubs
jo
fs
in
out
ss
xor
push
fidivs
mov
aam
add
fs
or
xchg
or
mov
test
clc
bound
xlat
call
hlt
out
and
inc
sbb
jne
fs
ja
loope
cwtl
sub
sbb
dec
mov
sahf
out
xor
sub
lods
cli
jmp
jge
orl
lds
add
push
call
push
add
std
mov
repz
xor
jno
mov
cmpsb
or
iret
rorb
xchg
inc
or
inc
pop
aad
int3
mov
cmp
inc
sub
xor
cmp
pop
out
cmpsb
mov
lea
cmpsl
pop
pop
addr16
and
imul
fcoml
add
xchg
aam
pushf
mov
scas
adc
shrb
mov
lret
mov
and
mov
cmpsl
push
pop
insl
mov
inc
or
popa
pop
xchg
es
pop
push
das
dec
clc
xchg
jnp
ret
das
jnp
test
fcomps
out
js
mov
shlb
dec
adc
pusha
imul
inc
test
pop
imul
shlb
or
dec
jno
sbb
insl
add
mov
pusha
adc
xchg
imul
in
std
cmp
enter
mov
sahf
repnz
and
or
adc
jl
dec
fdivl
xchg
int
cs
mov
xchg
xlat
cmp
jo
push
sbbb
mov
pushf
xor
adcb
test
sbb
mov
addl
cmpsb
fucomi
push
inc
mov
sbb
and
das
popa
stos
cld
mov
rcrl
out
adc
or
xor
sub
dec
adc
in
ret
lea
xor
mov
jno
imul
or
dec
push
js
pushf
or
adc
or
xchg
aam
adc
js
sub
and
loopne
imul
call
rcr
mov
shll
pushf
dec
mov
mov
fldt
ja
xchg
pop
subb
sbb
pop
cmp
mov
cmc
inc
pop
fiadds
sahf
test
rcl
sub
jle
js
mov
adc
pop
adc
push
or
fsub
jb
movsb
cld
xlat
sbb
add
push
cld
mov
neg
xchg
or
jno
sub
inc
push
cli
fdivs
out
lcall
movsb
scas
push
xchg
jg
and
subb
lret
pop
in
es
or
dec
insb
insl
ss
and
fstp
fcompl
dec
fisttpll
test
xchg
jns
jp
cmp
sbb
imul
xor
cmp
into
jb
push
les
jl
add
mov
xchg
es
push
inc
scas
sbb
shr
lret
push
push
out
pop
adc
mov
dec
mov
addr16
fidivl
fiadds
inc
ret
cmp
mov
loop
loop
jb
pop
cs
lds
ja
xchg
jne
dec
popf
adc
repz
mov
cmpsl
pop
stos
cmp
loopne
fs
pop
int3
add
test
iret
shr
fwait
pop
je
add
jns
movsb
add
push
xor
inc
mov
dec
cmp
arpl
jno
mov
sahf
or
xchg
adc
adc
sub
insb
dec
jae
outsb
mov
jp
mov
leave
aam
mov
orb
out
xor
movsl
xor
inc
fldenv
mov
and
lods
cmp
push
jb
popf
loop
repz
jp
sbb
push
jbe
cmp
dec
xor
fsubrl
sub
xor
xchg
movsb
and
notb
xor
mov
loope
push
xor
loope
andl
inc
fwait
cli
cld
or
xlat
fiadds
or
xchg
imul
or
fstpl
cli
add
inc
jecxz
outsl
mov
cs
dec
push
sbb
scas
push
adc
cli
mov
out
pop
or
inc
push
bound
flds
lods
jb
adcl
lahf
mov
xlat
cmp
daa
jp
fiadds
adcb
mov
loopne
lahf
aam
into
inc
imul
fbld
test
jnp
cmc
cltd
lret
dec
cmp
les
jo
cwtl
cmc
dec
orl
mov
xchg
bound
sub
ds
or
hlt
fneni(8087
adc
lret
roll
fcomi
movsl
jmp
daa
addl
add
pop
lea
pop
jecxz
sub
sub
add
dec
adc
cmp
jo
push
test
mov
adc
push
addb
mov
jmp
and
jno
xchg
test
add
adc
leave
iret
iret
pop
push
dec
and
stc
mov
or
push
fwait
mov
mov
arpl
nop
jecxz
rep
enter
movsl
xchg
pop
ret
daa
jnp
mov
push
push
sub
movsb
lds
xchg
adcl
in
popa
push
daa
and
mov
mov
sub
pop
jno
leave
out
imul
adc
push
popl
mov
ss
fcomi
pop
shl
sub
mov
aas
shll
lcall
call
pop
add
mov
cli
xor
inc
pop
fsub
xchg
in
inc
andb
xor
aad
inc
dec
fcoml
std
cmp
ljmp
add
xor
and
adc
adcb
cmc
out
xlat
mov
mov
mov
cmpsl
inc
sbb
push
mov
fildll
and
add
orb
bound
adc
sub
inc
repz
andl
mov
or
xchg
lock
loope
inc
iret
adc
push
push
dec
sbb
mov
gs
and
fmul
xchg
into
jbe
stos
popf
adc
cmp
and
je
fnstenv
aaa
fistps
fldcw
mov
js
or
pop
xorb
popa
test
ja
xlat
push
cmp
push
addr16
int
pop
mov
icebp
in
int
loope
or
sti
repz
dec
and
int
sti
jo
cli
scas
outsb
outsl
xchg
mov
mov
mov
loope
enter
shlb
fsubr
pop
push
test
sub
sbb
dec
cltd
mov
ljmp
pop
mov
jge
xchg
das
call
repnz
push
and
sarl
jae
out
pop
inc
out
xchg
ja
js
int
cmp
std
pop
enter
imul
pop
loope
movsb
mov
jo
call
jecxz
arpl
jle
loope
lods
insb
push
push
int
add
or
mov
sar
and
adc
popf
movb
mov
dec
and
mov
daa
addl
jmp
pusha
mov
jmp
ret
jae
scas
das
pop
cmp
inc
sbb
xor
cmp
mov
in
pop
sub
or
int
mov
je
adc
lret
ret
popf
and
adc
inc
adc
and
pop
inc
push
insl
mov
cltd
or
mov
adc
jecxz
gs
cmp
enter
lea
mov
testl
out
js
and
sub
rol
pop
pop
popl
jne
lret
or
lds
cmp
lahf
lods
push
mov
dec
icebp
mov
pop
imul
push
repnz
test
mov
jne
pusha
or
fstl
inc
jmp
testb
adc
sub
pushf
sbb
das
out
imul
inc
sarb
iret
mov
in
jb
repz
sbb
push
shrb
stc
inc
xor
stc
call
ds
pop
pop
dec
push
lods
cmp
push
jle
mov
cmpsl
mov
adc
sub
loope
pop
and
dec
dec
mov
lahf
mov
mov
add
xlat
lock
add
in
loop
ret
and
rorl
outsb
aaa
add
aad
and
dec
pop
jg
movsl
imul
mov
and
hlt
arpl
js
xchg
pusha
sti
dec
test
inc
lret
repnz
out
push
adc
mov
clc
lcall
mov
cmp
push
mov
inc
gs
cmc
mov
sub
stos
movsl
or
jl
add
pop
jae
jg
mov
inc
cmp
pop
out
pop
xchg
std
mov
stos
imul
xchg
mov
jecxz
bound
cwtl
and
and
fcmovb
lcall
push
jnp
sbb
nop
sbbl
push
hlt
sbb
mov
fs
lahf
inc
mov
mov
lock
cmp
push
int3
mov
adc
popa
inc
aad
mov
mov
push
ret
movsl
loopne
cmpb
and
or
mov
in
mov
in
adc
or
cmpsl
sub
sub
movsb
cmp
pushf
xchg
call
add
mov
and
mov
cmp
and
repnz
insb
hlt
push
jo
cmp
lahf
xchg
adc
add
cli
ficompl
movb
adc
xor
xchg
add
mov
in
sarb
es
daa
data16
lret
popl
fbstp
mov
js
mov
add
sbb
cmpl
movsl
ret
mov
icebp
inc
push
pop
loope
mov
dec
arpl
mov
out
xchg
repnz
jo
dec
loop
pop
mov
roll
fnsave
adc
cmp
jmp
fwait
or
mov
xor
int3
push
cld
cmp
sbb
pop
jbe
repz
jecxz
cwtl
test
add
rcl
addb
hlt
or
xchg
lea
arpl
cmc
lods
pop
pop
adc
inc
ds
mov
aas
loope
mov
iret
mov
movsl
test
filds
cmp
xchg
mov
cld
add
push
xor
push
imul
or
or
lds
loopne
dec
es
xchg
mov
jl
icebp
popa
nopl
int3
aaa
pop
stc
hlt
xor
mov
xor
mov
andb
in
ljmp
int
and
insl
pusha
popf
mov
aam
mov
xor
and
sub
sbb
into
pop
aaa
adc
orl
mov
mov
sub
sbb
jmp
movsb
dec
out
pop
xchg
xor
push
ja
cs
add
xchg
cmp
fdiv
xor
mov
loopne
dec
mov
jns
mov
pop
cmp
mull
div
popa
sbb
icebp
fldcw
out
pop
sub
pop
popa
pop
mov
mov
lods
int3
es
inc
test
nop
fcomip
in
adc
fxch
test
mov
xor
call
push
lcall
addb
mov
les
stos
nop
psubsw
fnstenv
pop
xchg
test
mov
and
jge
lcall
fcomi
test
cwtl
fs
insl
rorb
mov
push
jne
int
clc
xor
adc
sub
sbb
cmpsb
cltd
shr
xchg
mov
cmpsb
xor
lods
in
xchg
xchg
xchg
mov
jb
iret
in
paddusw
inc
fdivrl
sub
jnp
dec
xor
pop
sbb
xchg
push
lret
jb
inc
fdivl
stos
andb
jns
adc
cmp
mov
sbb
push
push
arpl
jg
int3
fiadds
imul
jg
jmp
fdivrl
rolb
or
fdivs
stc
and
jle
mov
and
sub
and
das
test
adc
mov
shlb
adc
mov
test
inc
mov
pop
sub
call
or
movsb
dec
loop
adc
cmpsb
push
lock
test
xchg
pushw
mov
rcll
les
test
imul
xchg
xchg
pop
push
out
cmp
lea
cwtl
mov
loop
jmp
outsb
jo
repz
repnz
mov
imul
pop
scas
jmp
outsb
xor
cmp
int
push
popa
lods
cmp
cmp
push
mov
inc
aad
or
adc
inc
clc
xchg
dec
inc
pusha
mov
arpl
ljmp
lahf
outsw
popf
scas
sub
add
xor
daa
jno
mov
ss
jns
dec
call
mov
and
mov
xor
inc
test
in
iret
xchg
cld
jecxz
add
or
jnp
dec
push
bound
popf
cmp
inc
ror
pop
fisttps
cmp
sub
sbb
shr
jmp
jno
and
push
inc
outsl
cmpl
xchg
sub
rcll
inc
xlat
mov
popf
jmp
pushf
jnp
lret
inc
mov
inc
push
push
in
xchg
fsubrl
mov
ja
shll
or
add
mov
jmp
adc
aad
in
aaa
sub
cs
mov
jae
loopne
test
dec
inc
mov
inc
insb
outsb
lea
sbb
dec
jmp
push
push
and
and
mov
cs
js
imul
xchg
jns
xor
and
mov
jp
add
xor
mov
sbb
lea
adc
cmp
out
test
xlat
xchg
cmp
pop
adc
pusha
cmp
fistpl
inc
jmp
shll
mov
fmuls
sahf
xchg
dec
fs
lcall
add
ss
shl
jp
sub
xchg
dec
sub
ret
and
loopnew,pt
frstors
jl
mov
enter
mov
adc
and
iret
ja
pushf
jg
pop
mov
aad
std
xchg
mov
and
sub
lds
sub
sbb
dec
push
mov
mov
jmp
cmp
clc
iret
pop
aam
inc
and
or
jg
iret
inc
jb
push
lods
js
leave
pop
jle
sub
std
sub
in
cwtl
push
and
jbe
scas
test
sub
xor
mov
sbb
orb
test
dec
jge
mov
lock
push
jo
cmpsb
and
jnp
add
int
sub
in
stos
add
add
add
das
out
lahf
push
and
mov
les
andl
ret
push
addr16
jo
xor
rclb
inc
test
test
sbb
jns
xchg
add
jmp
pusha
push
cmp
mov
popa
pop
or
lcall
inc
xor
stos
sub
jmp
mov
imul
in
lods
popa
mov
imul
aas
and
in
dec
inc
clc
dec
gs
adc
pushf
and
cltd
jge
mov
jg
cltd
repz
sub
sbb
filds
xchg
cmp
jbe
loop
dec
pop
jns
in
sub
in
push
fwait
sub
inc
stos
fcomps
sbb
pop
iret
adc
movsb
mov
stos
es
pop
sti
aaa
and
popa
add
out
mov
and
jmp
mov
jg
je
sub
sbb
loop
lcall
ficoms
out
cmp
lods
pop
in
ja
in
ret
pop
add
in
aad
mov
int
scas
dec
cmpsb
sbb
push
mov
pop
inc
out
hlt
movsb
out
inc
add
es
xchg
fmuls
fisubrl
hlt
mov
fsub
push
test
or
sbb
inc
mov
cmpsl
mov
int
mov
mov
xchg
pusha
dec
mov
ret
cmp
stc
fs
cmp
jnp
andb
bound
mov
pop
add
adc
mov
cmc
xchg
or
jle
mov
push
les
lret
int3
lcall
mov
push
inc
mov
jle
pop
scas
pushl
les
jno
js
and
adc
inc
pop
stos
scas
iret
outsl
add
bound
pop
inc
xchg
loopne
divl
movsb
jle
jp
imul
mov
and
fsubs
dec
xor
rorb
mov
sbb
mov
clc
mov
add
sub
out
or
inc
or
aad
jecxz
rcrl
sub
sbb
xchg
fwait
pop
ja
popa
xor
std
cmpsl
scas
jns
in
cmc
mov
mov
add
push
xor
pop
cmp
int3
cld
addl
mov
and
jae
dec
repnz
push
sbb
mov
push
inc
adc
and
pop
shrl
xchg
or
jecxz
adc
movsb
mov
jae
add
pop
mov
pushl
arpl
sub
mov
icebp
es
cmp
das
repz
xor
pop
pop
orl
mov
pop
jo
lahf
jne
cs
imul
addr16
ret
cs
xchg
sbb
test
adc
jg
int
ret
push
jmp
jnp
push
movsl
ja
xor
leave
ja
mov
adc
jae
xor
cmc
and
push
push
pop
sbb
and
jl
in
fsubrl
daa
push
xchg
xor
mov
lods
push
int3
enter
clc
sbb
popf
jle
scas
psubsw
adc
push
xor
xchg
and
cmpsl
cltd
movsb
cli
sub
cmp
lock
into
and
mov
sub
add
xchg
cmp
sarl
movsb
jae
mov
rolb
sub
mov
inc
pop
or
loopne
insb
push
mov
je
sbb
fcmovbe
and
loope
call
adcb
mov
sub
ljmp
inc
stos
std
lahf
jp
aad
add
inc
jb
xchg
xlat
mov
bound
int3
into
inc
push
xor
inc
xchg
sbb
jo
cwtl
jecxz
and
nop
leave
xchg
xchg
sub
leave
sbb
es
test
mov
push
inc
jbe
jne
flds
test
icebp
mov
or
push
pop
adc
xchg
cmp
inc
inc
int
test
mov
lods
push
mov
add
mov
jae
inc
je
push
mov
ret
arpl
and
cmp
mov
add
enter
mov
mov
mov
cmp
mov
push
mov
xchg
lcall
ljmp
shrl
hlt
sahf
shlb
xchg
push
dec
bound
sbb
enter
xor
jnp
or
mov
mov
cmpsl
adc
lret
xor
mov
fwait
pop
mov
add
or
xlat
rorl
out
dec
out
test
dec
jle
ds
scas
lock
ljmp
clc
mov
mov
xchg
jb
jo
xor
adc
aas
stc
rcrl
mov
sub
cmc
or
or
sarb
push
mov
pop
pop
jnp
adc
jno
enter
lret
jl
in
sbbl
sti
pop
mov
fimuls
cli
or
jns
sbb
int3
pop
lods
mov
jnp
lods
clc
jge
lret
pusha
in
add
out
sub
pop
iret
out
loopne
cmpsl
nop
xor
cmpsl
mov
mov
mov
repnz
push
mov
outsb
out
sbb
jne
or
xor
test
sbb
cwtl
xlat
adc
sbb
dec
and
jmp
imull
loop
cmpsl
nop
pop
cmc
lahf
xor
outsl
bound
icebp
jmp
mov
scas
sbb
ljmp
shr
xchg
mov
scas
sbb
jbe
mov
push
and
xlat
imul
inc
xchg
and
and
lret
sbb
fs
push
xor
repnz
mov
add
out
sarl
aad
leave
enter
mov
dec
push
mov
inc
jecxz
mov
and
adc
adc
dec
pop
xchg
xor
ret
push
or
mov
leave
test
js
push
sahf
sub
mov
outsl
movsl
stc
imul
fisubs
test
in
add
cli
roll
jbe
or
pusha
mov
rcrb
push
and
std
out
icebp
nop
jg
jne
jns
cld
xchg
lods
adc
lcall
pop
popa
out
jnp
into
or
sub
aas
inc
imul
aaa
xchg
push
int3
faddl
inc
fnstenv
adc
and
popa
adc
and
iret
loopne
loope
cmpsl
push
push
jmp
dec
add
adc
xor
mov
ret
fucomp
int3
mov
loop
add
cmp
cwtl
lea
bound
pop
divl
push
sub
xchg
movsb
inc
js
cld
pop
lds
dec
adc
scas
xlat
fldl
movb
sbb
ret
push
movsb
xor
push
mov
lahf
adc
jno
lahf
adc
pop
enter
lcall
leave
or
and
add
outsl
daa
nop
dec
dec
sub
lods
fcompl
sub
cmpsb
dec
call
or
dec
and
setno
dec
cltd
jbe
mov
pop
loopne
push
cmp
cmp
movsl
mov
xor
push
mov
out
or
data16
dec
xchg
add
sbb
rorl
mov
ret
cmpl
loop
dec
std
fsubr
mul
mov
inc
fisubs
and
sub
jne
rclb
and
push
mov
les
or
dec
cmp
pop
jne
aas
pop
xchg
sbb
orb
or
in
push
fidivl
mov
hlt
jae
xor
jno
loope
movsb
insb
shl
insl
cmp
es
les
lret
loope
mov
push
aas
inc
aam
mov
das
push
addr16
jecxz
adc
aas
les
adc
and
sub
cmp
and
sarl
je
cmc
es
shlb
push
xchg
push
fmull
gs
popf
out
ljmp
fadd
mov
push
subb
dec
push
in
pop
in
imul
inc
les
sub
push
ljmp
in
jecxz
mov
repnz
jb
pop
add
cli
dec
test
and
inc
inc
mov
or
adc
js
insl
stos
and
aam
std
xor
ss
mov
push
dec
xchg
fninit
cmp
mov
jne
fwait
mov
add
push
cmpb
jmp
jg
nop
adc
dec
mov
push
and
insl
mov
stc
jmp
adc
shll
push
mov
push
mov
mov
xchg
mov
sub
frstor
push
sub
dec
jl
jne
cmp
ss
adc
rcll
push
cli
stos
adc
push
js
mov
scas
outsl
mov
xchg
inc
iret
dec
into
scas
pop
inc
arpl
lods
call
cmp
xor
imul
imul
int3
jl
mov
xchg
cmp
push
aad
push
jl
push
cmp
pop
pop
jne
loope
ret
dec
jbe
xchg
mov
dec
fldt
xlat
or
add
xlat
js
or
mov
nop
push
sbb
rcrb
negl
mov
movsb
and
inc
cmp
cmp
sbb
out
fsts
add
clc
arpl
fimull
add
mov
es
mov
add
mov
mov
pop
mov
push
popa
dec
mov
in
mov
stos
sub
iret
and
loopne,pn
or
xor
sub
fcoms
inc
call
sbb
shlb
in
lcall
xor
cli
sahf
xchg
idivb
xchg
data16
inc
mov
jno
cmp
insb
pop
pop
xor
dec
pop
cmp
imul
push
mov
rolb
aam
push
pop
and
mov
add
rcl
add
jns
loopne
popf
or
fisttpll
shll
xor
addr16
or
xchg
shll
mov
jge
addr16
sub
adc
mov
xchg
out
test
fisttpll
add
xchg
sub
fisttpll
test
outsb
aas
mov
and
xchg
dec
jae
add
aas
aad
rcrl
scas
bnd
or
aaa
lret
xchg
cmp
adcl
pusha
xchg
or
jp
mov
cltd
cmpl
out
je
mov
lahf
stc
push
out
dec
jne
and
lods
xchg
fwait
mov
mov
pop
dec
add
xchg
imul
or
add
in
sbb
or
aas
shll
fiadds
cwtl
pop
fistpl
into
inc
arpl
dec
push
jle
adcb
sbb
jmp
xchg
add
ss
test
ret
jp
jbe
push
aas
cli
inc
out
or
jp
into
icebp
xchg
cmp
push
std
sti
cli
es
in
mov
jecxz
pusha
adc
pop
xchg
sub
push
push
xorb
mov
insb
mov
pop
icebp
loope
fcmovbe
repz
imul
mov
repz
lcall
add
mov
loopne
lock
inc
popa
fildl
adc
repnz
popa
mov
cwtl
inc
incl
push
sbb
fsubrs
je
cmp
adc
pop
mov
rcrb
iret
into
mov
push
mov
mov
or
push
addr16
mov
cltd
or
jg
and
push
aas
inc
outsl
jo
or
sahf
mov
xorb
addr16
xchg
cmp
mov
pop
insb
pop
xchg
out
jnp
pop
je
push
test
pop
mov
sbb
mov
xor
pop
jg
in
aam
incl
jns
jb
movsb
cld
dec
mov
pop
xor
xchg
xor
push
dec
cmp
ss
arpl
xor
fmul
cmp
mov
in
jge
inc
movsl
sahf
add
xor
shr
sbb
inc
insl
ljmp
orl
sub
cmp
shl
sbb
gs
shll
idiv
fmuls
fiadds
xlat
or
adc
and
cmp
push
stos
in
mov
pop
sub
ljmp
ret
jne
sbb
cli
push
dec
outsb
out
jg
sarl
and
pushf
dec
mov
xlat
add
test
call
dec
repz
in
stos
fimull
out
mov
orl
cmp
push
outsl
push
subl
std
xchg
fwait
cs
outsl
jmp
ret
icebp
scas
shl
sub
push
xor
lcall
xchg
imul
push
cmpsb
lcall
popf
jg
mov
ret
jge
mov
daa
loopne
add
movb
sub
stos
xor
sbb
inc
inc
mov
shrl
push
mov
xor
or
xor
dec
repz
mov
in
sbb
jno
loop
xor
add
mov
dec
sub
rcrb
fcomip
jmp
add
sbb
sarl
push
rcll
sbb
jge
mov
test
scas
push
sub
sti
push
call
mov
int3
cmp
dec
cmp
ret
dec
xor
rcll
jl
xor
sub
ljmp
orb
mov
inc
or
adc
cmp
fimuls
cmpsl
mull
jl
or
add
cwtl
cmpsb
adc
mov
popa
jo
and
pop
repz
add
sarb
es
jmp
dec
jb
xor
xlat
stos
jnp
pop
mov
pop
in
repz
or
or
pop
mov
mov
jg
add
mov
push
pop
sbb
js
pusha
and
ss
jle
xchg
pop
add
aas
jns
or
out
xchg
arpl
pop
rcrb
cmp
cmp
rorb
das
pop
bound
mov
in
data16
xor
cmp
push
mov
adc
in
lcall
fimull
cmpsl
push
adc
in
insl
jb
mov
fildll
das
pop
jnp
xor
and
sbb
cli
push
fsts
iret
clc
xor
fwait
xchg
repz
adc
adc
sahf
test
lcall
insb
push
mov
cmc
fstl
fdiv
pop
mov
xchg
es
pop
jbe
cmovae
dec
pop
inc
add
or
pop
lcall
lds
jmp
stos
push
jo
xor
push
sub
aam
inc
ljmp
mov
mov
subb
mov
dec
enter
lods
or
cmpsb
stc
sbb
sub
bound
lods
jne
fs
sbb
cmp
mov
dec
fisubs
gs
add
xor
pop
mov
lret
fldcw
jno
push
push
cmp
sub
outsl
icebp
dec
add
push
enter
push
or
xor
arpl
push
xchg
or
xor
int
pop
out
mov
or
insb
ja
pusha
jmp
lds
fwait
sbb
test
push
ss
add
push
pop
sbb
mov
sbb
gs
ja
sub
rcll
push
or
hlt
jo
mov
sub
popf
pop
pop
jnp
sub
test
xor
add
jne
dec
lahf
adc
xor
pop
jp
sahf
mull
add
out
popf
pop
aaa
leave
or
and
aam
or
sbb
test
mov
mov
shlb
xchg
mov
sbb
mov
es
cmp
daa
outsb
out
xchg
ljmp
cld
or
negl
fdivrp
popf
mov
cmp
arpl
fs
sti
fisubs
push
testl
push
push
adc
fists
mov
sbb
loop
cmpsl
enter
mov
xchg
filds
cli
mov
mov
imul
nop
je
or
dec
ljmp
shrb
shl
xlat
pop
in
in
in
xlat
xor
pop
or
call
inc
dec
cmp
mov
sbb
ror
ljmp
xorl
add
int
mov
int3
xchg
or
sub
or
fildl
mov
dec
in
jns
mov
or
and
hlt
lea
bound
les
mov
xchg
sarl
sahf
in
in
xor
ret
mov
add
hlt
out
fs
mov
and
push
cmp
std
sbb
scas
mov
shrb
test
push
and
rorb
dec
pop
pop
gs
pop
push
lret
sub
mov
ret
int3
sahf
fwait
inc
mov
fcmovnu
inc
cs
iret
inc
roll
xlat
ret
cltd
ficompl
add
pop
xchg
or
sbb
mov
je
pop
sbb
ds
call
pusha
adc
jnp
sub
push
pop
lcall
adc
out
push
fwait
xchg
stos
int3
mov
sbbb
sbb
loopne
dec
mov
into
dec
jle
sbb
in
xor
fcmovnb
push
in
or
fdivrs
leave
xor
jns
xchg
iret
add
and
xchg
xchg
aaa
inc
leave
aaa
arpl
in
stc
dec
jbe
and
pop
sub
xor
stos
ret
xlat
dec
movsl
xorb
out
fnstsw
addr16
inc
xor
sub
jno
stos
add
gs
cmpsb
int
mov
jmp
outsl
addr16
lcall
out
movsb
dec
sub
fs
aaa
cli
jae
lret
ret
cmc
inc
lock
pop
push
push
pop
test
xor
jl
push
pop
and
and
xlat
push
cmpsb
out
mov
and
incl
fcoms
outsl
dec
sub
jae
xchg
outsb
sahf
lds
jmp
fnstcw
leave
into
xchg
xor
lock
lahf
add
out
inc
fsubrl
test
fisubs
lcall
push
daa
lcall
or
mov
fwait
xor
loopne
mov
push
jg
shlb
jbe
push
pop
sahf
lret
mov
push
sub
cmp
jmp
adc
insl
jg
cmp
testl
mov
pop
pop
inc
sbb
add
xorl
cmp
push
push
xchg
push
jns
int3
dec
negb
cmpsl
test
sbb
fcompl
jo
out
pushf
movl
xchg
mov
inc
sbb
pop
sbb
mov
push
mov
enter
scas
test
loop
in
inc
mov
mov
sbb
add
scas
push
pop
and
xor
jle
sahf
stc
outsb
push
jle
out
fs
cmpsl
dec
test
ficoml
push
repz
cmp
iret
pop
cmp
cmc
xor
sbb
sbb
pop
and
cs
in
or
inc
jg
sbb
pop
es
xchg
jmp
stc
cltd
sbb
mov
rorb
shrl
fdivrs
lods
cwtl
iret
push
xlat
inc
cmp
std
pop
repnz
leave
insb
fmull
mov
fcompp
push
xchg
or
rcl
pmaxub
mov
movsb
call
xchg
mov
imul
push
jae
push
out
stc
pop
jo
out
jp
outsl
push
dec
mov
pop
mov
adc
mov
inc
xchg
daa
adc
and
mov
loope
cltd
insl
or
adc
test
mov
pop
cli
out
in
mov
dec
jmp
and
enter
in
ja
mov
and
test
and
ret
jb
mov
jns
xchg
imul
xchg
mov
or
mov
out
les
cmpsl
cmp
pop
adc
js
pushf
das
cmp
clc
enter
pop
cmp
jo
mov
push
fs
or
or
add
xchg
shrl
test
gs
xor
test
sarb
insb
xor
xchg
jle
movsb
popl
fisubrl
cmp
stos
daa
cmp
pushf
insl
popf
mov
lcall
xlat
push
cs
in
das
test
jnp
mov
dec
jb
xor
add
pop
daa
sbb
push
mov
pop
ss
rep
sbb
aam
xor
in
cmp
out
sub
sub
cmp
pusha
nop
scas
sub
cmp
stos
aam
dec
mov
mov
dec
loop
mul
jecxz
add
push
cmp
push
shlb
jns
outsl
mov
xor
cmp
js
xchg
bound
and
mov
les
popa
jne
imul
xchg
insb
int
cmp
fdivrp
lea
lods
jmp
xchg
mov
cmpsb
jo
xchg
sbb
cmpsb
jno
jno
popf
mov
add
xorb
std
lds
popf
xchg
jl
sysexit
mov
pop
gs
dec
push
push
push
xor
int
cltd
ljmp
loope
jmp
lds
icebp
iret
out
push
sti
push
adc
jnp
mov
mov
and
loop
popa
lcall
fsubrs
xor
loopne
mov
in
inc
mov
stc
jecxz
aad
jns
push
sti
arpl
inc
movsb
pop
dec
mov
sub
lds
mov
xchg
mov
push
jno
xor
pop
adc
jnp
cmpsb
test
ljmp
es
out
lock
int3
cmp
mov
test
test
outsl
test
aad
jle
enter
addr16
inc
dec
xor
in
cltd
jb
push
adc
sti
mov
xor
jg
or
arpl
xor
ljmp
pop
jge
iret
pop
in
mov
xchg
xchg
push
inc
and
fwait
aaa
push
pushf
sbb
add
adc
cmc
lds
cld
scas
push
lret
fildll
punpckhdq
in
bound
mov
negb
jb
mov
cmp
sub
in
and
mov
mov
cmp
push
mov
insl
icebp
lea
mov
pop
gs
push
je
adc
jp
adc
push
addr16
fimull
xchg
add
xor
bound
adc
movsl
lret
mov
popf
repz
cli
fstps
or
je
mul
add
cmp
inc
mov
pop
sbb
pop
push
mov
out
sahf
test
inc
cmc
jb
mov
int
lock
mov
std
or
xchg
xchg
pop
push
jge
inc
roll
or
in
ja
inc
sub
ficompl
addr16
mov
pop
pop
lods
scas
mov
push
nop
dec
push
pop
inc
mov
push
shlb
lret
sub
pop
enter
jecxz
add
icebp
xchg
add
std
jb
stos
mov
xor
in
jl
mov
adc
inc
add
fistpl
jg
mov
out
cltd
ret
pop
xchg
lods
lds
or
or
mov
and
sahf
add
pop
scas
or
xor
xchg
sahf
jg
outsb
sbb
cmp
cmp
adc
bswap
nop
and
popa
adc
out
inc
inc
or
adc
sub
lea
inc
mov
jl
mov
aad
in
faddl
leave
xchg
cmpsb
adc
pusha
into
jp
jl
call
jns
outsb
imul
mov
dec
push
push
popf
jno
xchg
mov
es
roll
mulb
and
fwait
xchg
mov
inc
fcmovbe
insl
cmpb
repz
scas
and
jecxz
dec
mov
ret
mov
cmpb
cld
push
movl
or
das
mov
ret
fcoms
out
dec
je
pop
inc
push
push
leave
popa
int3
mov
or
dec
or
enter
xchg
ret
filds
xchg
ljmp
jno
ficompl
lea
into
lahf
add
push
sbb
cmpsb
and
repz
or
in
dec
outsb
xchg
sarl
fisttpl
subl
pop
mov
mov
sbb
sbb
pop
loopne
add
imul
pop
xchg
adc
es
fidivrs
cmc
mov
das
push
cmp
daa
fidivl
std
mov
jecxz
mov
cli
xor
sub
mov
push
push
cwtl
ret
add
call
ds
cmpsb
xchg
fs
test
or
or
xchg
xchg
das
ds
aaa
xchg
lods
int
push
movsl
mov
and
lret
pop
sub
jl
and
mov
in
repnz
in
jbe
or
xchg
pop
pusha
sbb
dec
cwtl
popf
adcb
or
xchg
sub
rcrl
sbb
lret
pop
and
test
shl
xchg
mov
mov
adc
sar
icebp
test
cli
faddl
xor
sbb
sbb
mov
and
and
sub
call
sahf
xor
add
cmpsl
xchg
test
insl
fadds
les
xor
ja
in
inc
push
repz
xchg
movsl
cmp
andb
mov
xchg
cltd
aas
test
add
inc
test
fwait
push
jnp
push
dec
cmp
inc
dec
in
lock
xchg
xchg
testb
pusha
cwtl
mov
dec
mov
jne
or
adc
cwtl
xchg
mov
push
call
mov
popa
test
arpl
rcrl
or
dec
xor
popa
cli
jns
jle
in
flds
jne
xchg
mov
add
inc
lret
jnp
or
mov
mov
rolb
dec
hlt
or
dec
fs
mov
ss
or
jne
push
mov
imul
lds
adc
push
insb
xor
fwait
cmc
nop
push
add
ror
call
xchg
mov
dec
dec
and
add
lock
popf
xchg
loop
lods
shrb
mov
jbe
xor
sti
insb
xor
es
cmpsl
add
sub
adc
fs
fimuls
test
mov
and
aaa
rorl
ljmp
aam
imulb
adc
gs
jb
inc
pop
imul
int3
movsb
and
add
mov
cmc
push
out
cmp
fs
outsl
or
jl
add
inc
stc
jo
enter
popf
pop
mov
ret
movsl
in
xchg
es
mov
les
xadd
aam
loop
test
sbb
sbb
fsub
cmpsl
sub
dec
jne
sbb
movsl
fnstsw
push
jg
dec
mov
or
mov
lahf
inc
and
repnz
mov
mov
loop
out
xchg
mov
test
lret
sub
inc
cmp
popa
test
outsb
mov
insl
jbe
mov
arpl
jo
repnz
fsubrl
adc
add
stos
pop
pop
mov
xor
aam
and
and
imul
pusha
lods
hlt
add
addl
adc
fcoml
mov
stc
icebp
je
cmp
iret
roll
stos
mov
cmp
xor
leave
out
jl
sub
fcoms
xchg
insb
mov
out
fsubl
int
push
add
lods
enter
adc
dec
lea
xor
pop
push
add
pop
or
xor
lret
daa
arpl
cmp
lods
inc
mov
dec
xor
jmp
sub
fldcw
pop
inc
movsl
xor
std
fs
mov
and
mov
sahf
scas
xchg
shll
clc
xor
imul
lret
xchg
adc
cs
ficompl
and
outsl
push
rclb
push
sub
fisubl
call
and
sahf
and
repnz
pushf
outsl
cmp
adc
adc
sbb
in
imul
adc
in
sbb
mov
inc
or
popa
daa
mov
scas
pushf
lcall
xor
int
clc
cmp
lret
mov
or
adc
push
sahf
mov
mov
mov
mov
enter
ja
test
inc
mov
or
insl
fbld
sbb
pop
jmp
lds
outsb
sbb
jge
inc
xor
andl
xchg
adc
out
push
jo
test
jp
or
vucomiss
mov
adc
jecxz
outsl
scas
push
jle
add
mov
inc
stos
mov
mov
scas
lds
jbe
and
lods
or
cld
mov
mov
jnp
xor
add
sbb
in
mov
cmp
push
sub
daa
adc
ret
cltd
in
mov
jae
mov
and
push
cwtl
scas
xor
push
aas
test
push
pop
stos
daa
stos
fidivl
dec
js
xor
mov
jno
fildl
mov
imul
js
shlb
test
lret
insb
js
dec
fadd
push
xchg
adc
xchg
ret
pop
outsl
fdivrl
fcmovnbe
xchg
ljmp
jecxz
scas
aad
mov
push
sub
fsubr
mov
jmp
lcall
mov
sub
std
jmp
add
in
mov
pushf
stos
pop
cltd
push
or
sub
and
push
pop
xor
ret
inc
das
rorb
dec
jg
jne
adc
add
xlat
mov
xor
ss
push
clc
shrb
dec
sub
in
test
sbb
fdivrl
int3
add
cmp
jg
ret
push
fwait
jecxz
dec
fwait
iret
jp
sub
int
lret
cli
mov
leave
xchg
push
pop
ds
in
sbb
orl
sbb
arpl
stc
lods
and
jg
add
ret
push
ret
aad
out
jno
add
sbb
sbb
movsb
fcmovnu
leave
iret
es
jecxz
mov
repnz
adc
inc
bound
stos
popa
ret
mov
xor
pop
inc
xchg
inc
outsb
ljmp
xor
mov
fsubr
ret
cmp
adc
mov
fwait
or
pop
sarl
icebp
xor
incl
fwait
loopne
int3
push
push
imul
adc
pop
stos
sbb
pop
and
fisttpll
xor
leave
cmp
ret
cltd
shrb
adc
imul
fcmovbe
insl
pop
jae
test
mov
ret
insl
inc
cmp
fcmovu
test
ror
gs
push
scas
sbb
jp
ficoms
addl
ret
flds
push
jne
or
xchg
in
mov
inc
add
insl
pop
pop
xor
push
sbb
mov
sbb
dec
sub
and
pop
jns
lahf
leave
add
aas
xchg
xor
int3
adc
in
sbb
mov
push
sbb
mov
sub
scas
flds
aad
call
xchg
movsb
pushf
insl
test
insb
jmpw
outsb
outsb
mov
lea
mov
mov
and
mov
test
inc
addr16
pusha
imull
cmpsb
in
hlt
leave
repz
dec
jnp
mov
xchg
push
stc
dec
and
mov
jb
mov
xlat
sti
jne
cmp
aad
aam
mov
ds
add
out
shll
addr16
inc
or
or
xor
hlt
xchg
int
mov
cli
adc
mov
sub
cli
jno
movsl
ljmp
outsb
add
and
test
cmpb
sub
push
aam
subl
scas
pop
add
mov
out
mov
roll
add
daa
in
jmp
fst
jbe
mov
cmp
movl
lods
pop
dec
push
scas
es
xchg
out
mov
xor
jl
inc
mov
nop
and
and
or
fnsave
mov
mov
mov
stos
adc
cli
pop
out
fiaddl
mov
mov
xor
dec
xchg
cltd
mov
xor
sbb
insb
loope
jecxz
testb
and
out
mov
mov
fs
adc
xor
ljmp
test
mov
push
inc
mov
mov
mov
sbb
sbb
andb
xlat
das
dec
movsb
cmp
dec
push
mov
or
sti
or
outsl
adc
xchg
hlt
sbb
rcll
cli
lret
mov
adc
fidivs
daa
fwait
inc
popf
stos
xchg
mov
fwait
jne
mov
xchg
cmp
cmp
lahf
dec
mov
add
push
pop
xor
push
mov
movsb
scas
push
pop
aam
add
pop
addr16
adc
mov
jg
sti
pop
pop
sbb
mov
insb
jo
xor
cwtl
imul
fs
mov
add
icebp
mov
pushf
push
xchg
add
imul
adcl
les
das
xor
jno
into
cltd
lock
cltd
fstl
mov
cmpsl
in
xchg
push
stc
ds
jg
fcoms
pop
fnsave
push
mov
cmp
cmp
and
je
testb
mov
subl
mov
sub
out
xchg
test
insl
loopne
dec
fs
pop
dec
roll
pusha
aaa
pusha
dec
xor
test
jno
sub
imul
popa
xor
dec
jnp
fs
sarl
mov
or
in
inc
aaa
cld
adc
jns
shl
iret
or
pop
or
dec
imul
daa
fcmovu
int3
popa
pop
mov
into
add
dec
xor
pop
aas
shll
enter
mov
mov
jae
xchg
jmp
daa
mov
cmp
add
lret
ret
push
adc
insl
push
push
aam
out
fwait
sub
shrl
and
rolb
xor
pop
sbb
mov
xchg
shl
cmp
xor
mov
pop
into
sub
stos
insb
xchg
mov
enter
out
cmp
sub
jl
popa
push
cmp
pop
mov
jne
aad
jmp
cmpsb
shrl
fildl
jae
sub
push
cmp
push
mov
shl
inc
gs
jno
test
jns
test
xor
jg
or
mov
sbb
inc
mov
int3
add
dec
scas
stos
adc
in
repnz
nop
cmpsl
test
pop
movsl
cmpsl
push
xor
jo
int
aaa
jmp
shr
dec
sbb
adc
or
dec
inc
xchg
aaa
out
pop
dec
jb
xchg
lods
out
pop
push
mov
fcom
cs
jecxz
mov
andb
pop
jne
adc
xor
xchg
arpl
push
inc
repnz
and
xlat
out
addr16
ja,pt
fs
mov
or
xchg
out
fstpl
sbb
repz
xor
push
push
dec
mov
out
scas
test
jmp
push
test
in
xor
adcl
jb
mov
mov
cmpsl
adc
rclb
push
clc
dec
mov
fiaddl
rcl
mov
adc
pop
cs
test
stos
push
inc
fadds
mov
mov
hlt
jecxz
xor
ficomps
push
iret
mov
orb
inc
repz
cmp
xchg
hlt
sub
sub
sbb
in
shll
push
mov
xlat
movsl
dec
fdivrl
sub
add
ljmp
rcll
test
jecxz
imul
mov
adc
outsb
daa
xchg
or
mov
sub
jae
pop
repz
fsubrs
or
jne
mov
outsl
lods
adc
sub
xor
mov
ret
jl
cmp
int
lahf
imul
dec
lea
les
lock
push
and
xor
sub
jo
add
in
hlt
xchg
adcl
push
inc
pop
add
lock
xchg
cltd
lret
pop
xchg
outsl
jl
out
leave
mov
or
lcall
sub
dec
sub
add
nop
sbb
popf
push
mov
mov
cmpsb
adc
dec
sub
cmp
xlat
cld
jle
mov
jg
fiaddl
adc
lahf
jecxz
fisttps
cli
lret
scas
cmp
mov
or
icebp
ljmp
xor
dec
stos
inc
loopne
mov
cltd
test
das
or
fdivr
mov
pushf
lcall
push
jmp
dec
jo
shl
xchg
iret
mov
dec
cmpsl
push
mov
lret
int3
sub
test
clc
cmp
leave
data16
sbb
les
adc
push
es
mov
xchg
rcll
pop
inc
fsubs
pop
add
pushf
mov
jmp
das
out
mov
rcrl
mov
fwait
stos
pop
adc
mov
stc
ret
jge
dec
test
jno
dec
scas
or
dec
jge
cmp
mov
cmc
arpl
orb
add
sbb
imul
in
scas
test
cli
xchg
push
sarb
fildll
dec
movsl
leave
scas
and
push
jmp
out
xchg
pop
lock
xchg
std
test
fwait
adc
xor
pop
jl
shrl
mov
int
shlb
sub
nop
dec
gs
or
mov
rolb
orb
sbb
jbe
sbb
pop
sub
stos
lcall
loop
cli
inc
push
outsl
sbb
jnp
imul
jnp
cmpsb
loopne
inc
icebp
cmpsl
jns
gs
mov
xor
call
dec
addl
test
adc
test
inc
cli
and
mov
std
mov
scas
mov
add
pop
movsb
nop
and
sahf
dec
pusha
shlb
lea
push
or
scas
rcrb
adc
aad
out
dec
pop
ja
addr16
pusha
mov
adc
jno
sub
lock
cmpsl
cli
jl
shll
pusha
out
test
dec
clc
inc
pop
mov
test
sub
xchg
mov
pop
movsb
xchg
movsb
mov
lock
and
add
cmp
stos
scas
cmp
jb
insl
movsb
pop
rcrl
add
lods
push
leave
jle
dec
into
push
jo
ss
adc
out
push
test
jbe
repnz
push
xchg
cmp
sahf
mov
mov
cli
or
shll
stc
inc
jge
les
les
cmp
sub
sbb
popa
add
mov
enter
aad
pop
xor
inc
mov
ds
arpl
adc
ja
mulb
negb
and
add
jl
or
sub
push
mov
or
push
ficompl
dec
in
outsl
cmp
data16
mov
mov
xchg
sti
sub
and
dec
add
or
mov
icebp
cmp
mov
ds
adc
pop
adc
shl
pushf
mov
cmpsl
jae
arpl
mov
xor
orl
sahf
addr16
daa
fmulp
cmp
mov
scas
push
loop
mov
incb
sbb
pop
mov
popa
fdivs
loope
sub
jb
das
inc
jbe
ja
jns
fdivrs
mov
mov
push
dec
rolb
sbbl
xchg
mov
xchg
stos
es
imul
fisubrl
fimuls
scas
jecxz
xor
scas
or
jbe
shrl
jp
dec
and
lea
pop
fldt
int
loope
mov
mov
xor
test
scas
cmpsb
repnz
pop
push
daa
lds
and
jp
out
mov
scas
xchg
cli
adc
in
loopne
pop
or
loopne
mov
daa
ds
push
pop
xchg
adc
clc
jecxz
ja
xchg
in
push
orl
jae
dec
and
out
inc
sarb
lods
imulb
ficompl
lcall
mov
out
fisubl
sbb
ror
cmp
sub
repnz
repz
in
dec
subb
xor
mov
jne
sbb
xchg
gs
fcoms
xchg
pop
outsb
pop
and
adc
adc
inc
fwait
and
outsb
faddp
scas
int3
dec
mul
add
xchg
jnp
sbb
adc
cwtl
mov
inc
push
xor
pushf
movsb
sub
xchg
jmp
pop
push
xor
jle
or
call
xorb
imul
push
mov
pop
pop
sub
pop
sub
add
jp
xor
movsl
dec
xchg
dec
xchg
or
das
movsl
pop
push
and
loop
das
jnp
pusha
aam
jnp
push
lcall
mov
int3
push
imull
push
test
mov
mov
cld
movsl
adc
mov
mov
dec
pushf
mov
add
cwtl
push
or
subb
sbb
loopne
es
fstps
lods
enter
shrl
or
out
test
mov
and
sub
xor
jmp
iret
inc
and
push
adc
xor
add
mov
popa
iret
fdivrl
movsb
push
out
decb
and
fs
les
stos
loop
pop
idivb
stos
fucomip
aad
loopne
mov
addb
dec
out
or
ja
mov
mov
in
in
pop
insl
add
loop
cmpsb
rorb
test
inc
shll
in
pop
xchg
cmpsb
cltd
pop
xor
inc
outsl
ljmp
std
hlt
stos
aas
rcll
mov
es
gs
leave
pushf
test
lahf
ror
pop
cs
fldcw
cmp
loop
pop
inc
cmp
sti
ss
aas
mov
mov
in
pop
pop
cmpsl
mov
int3
and
pushl
jns
cmpb
loop
loope
dec
jl
mov
stos
add
stc
sbb
sti
dec
test
in
fisubl
nop
inc
je
xchg
cwtl
jle
or
sub
and
or
mov
jp
repz
mov
lahf
enter
add
push
jae
enter
mov
pushl
jg
mov
stos
sub
add
sar
dec
flds
xchg
stos
xor
je
out
inc
loop
jno
push
adc
xchg
iret
icebp
xchg
adc
jp
arpl
ficomps
lahf
aam
adc
lods
mov
mov
xor
into
insb
pop
insl
aam
test
clc
adc
in
fcomps
mov
push
je
xchg
xchg
call
cltd
xor
and
rcrl
outsb
xchg
xor
xchg
pop
into
and
insl
dec
rorb
ss
or
ss
inc
pop
mov
addr16
clc
pop
cs
pop
lahf
mov
inc
andb
and
mov
xor
lods
cmp
cmp
int
insl
sub
cmc
stos
push
adc
cmpsb
mov
loopne
test
adc
ffree
and
ret
cwtl
mov
mov
sub
iret
test
push
xor
rorb
data16
xchg
push
mov
out
shrb
dec
xlat
out
cmc
pop
dec
loope
pushl
mov
add
add
xchg
xchg
push
push
leave
addr16
xor
cmpsb
dec
in
pop
add
xchg
mov
mov
mov
in
popf
add
push
cmp
hlt
or
push
push
xor
jp
rcrb
jns
jecxz
mov
sbb
mov
add
lret
mov
aam
xchg
push
dec
fnsave
add
adc
xor
cmp
cld
hlt
popa
cwtl
inc
icebp
gs
xor
gs
in
int3
sub
inc
imul
xor
dec
cmpl
aam
in
mov
xchg
sahf
mov
shlb
mov
or
dec
mov
mov
mov
cli
mov
subb
push
ret
inc
dec
push
in
jge
mov
imul
mov
cmp
hlt
sub
jg
sub
aas
mov
testl
mov
jb
into
dec
add
imul
pop
addr16
ds
in
xor
push
xchg
sub
gs
faddp
sub
test
add
pusha
mov
sub
sbb
mov
adc
repz
daa
adc
ss
mov
cmp
adc
jmp
out
xor
push
sahf
sub
xor
repz
pop
fcompl
mov
add
or
stos
out
orl
adc
cmpsl
push
lock
cld
mov
test
test
mov
xor
jp
aas
imul
test
test
xchg
scas
popa
jl
jg
push
sub
mov
adc
stc
aam
imul
push
loopne
add
ss
aam
push
pop
xlat
std
cmpsb
mov
stos
movb
enter
inc
jg
es
lret
imul
in
loopne
in
pop
adc
out
lret
addl
ss
jbe
push
lret
fisubrs
jecxz
or
mov
fcomp
sbb
dec
pushf
mov
xor
outsl
pop
loopne
inc
inc
jecxz
lods
dec
sbb
and
cmp
in
stos
fucomi
out
sbb
inc
loop
ja
in
cld
add
sub
xor
mov
dec
out
rclb
or
je
dec
pop
mov
cmp
or
cmp
xchg
arpl
adc
test
les
push
cli
dec
lret
cmc
xchg
sti
sub
pop
mov
push
sahf
cmp
pop
push
lds
adc
xchg
dec
testb
cmp
add
scas
add
sarl
jne
repz
and
jge
scas
aam
and
xor
lea
inc
and
pop
out
loope
out
repz
jecxz
aam
push
mov
pop
in
jle
cmc
orb
pusha
outsl
cwtl
sti
cmp
insl
outsl
lock
loop
pop
lahf
lcall
cmp
xchg
std
cmc
mov
mov
xlat
pop
fsubrl
daa
shll
adc
lret
stos
pop
repnz
jmp
push
push
pop
xchg
jb
cld
mov
xor
wbinvd
test
data16
add
hlt
out
in
sub
ret
pop
sarb
push
repnz
cmpsb
jo
xor
jp
adc
lods
notb
xchg
mov
aas
pop
dec
sbb
add
call
pop
mov
xor
lahf
or
std
js
mov
xchg
adc
xchg
xchg
ds
mov
ds
xchg
fnstcw
xchg
sbb
inc
dec
push
xlat
fiadds
mov
into
rclb
mov
arpl
xorb
mov
pop
push
clc
xchg
shl
ret
repnz
cmp
adc
mov
push
sub
test
lcall
cmp
sub
adc
pop
adc
xor
shrb
scas
xor
es
inc
in
nop
mov
xchg
push
jne
inc
dec
aaa
adc
jb
loope
push
and
and
movsl
sub
aad
out
data16
ljmp
icebp
dec
fistpl
ret
adc
gs
aas
inc
and
iret
int
xchg
jne
jbe
jb
jp
push
stos
insb
xchg
dec
test
aam
int3
sub
add
out
dec
xchg
xchg
test
fdivs
jl
orl
xchg
adc
push
sbb
ret
sub
mov
push
mov
mov
sbb
in
in
fnstenv
pop
pop
call
out
sub
mov
out
sub
xor
jo
pop
subb
fcomi
cmp
sub
iret
xlat
pop
les
call
dec
mul
jae
dec
int3
daa
inc
mov
sarb
push
dec
jbe
mov
pop
int3
adc
mov
dec
nop
jnp
lret
or
stc
lock
es
sti
jb
sbb
jle
pop
lahf
outsl
inc
jp
outsb
imul
sub
xchg
les
lock
fsubrs
stos
jne
test
mov
leave
mov
in
and
imul
sbbl
out
out
dec
lock
fstpl
push
jno
cmp
cwtd
sbb
sti
shrl
lea
mov
pop
cmp
xchg
testl
push
inc
cmc
and
adc
sbbb
es
int
pop
pop
movsb
mov
frstpm(287
jp
mov
xchg
into
inc
std
in
mov
push
pusha
adc
or
scas
inc
test
fstpt
pushf
inc
aad
add
iret
sarl
jne
test
stc
xor
mov
dec
and
sar
mov
or
push
mov
xor
and
jns
mov
iret
mov
fldt
xchg
scas
shlb
mov
pop
adc
dec
es
movsl
dec
imul
lahf
imull
or
es
add
dec
add
roll
sbb
jge
sbb
jns
dec
push
adc
dec
lds
jnp
adc
push
or
test
jp
fwait
push
jmp
push
xor
mov
mov
daa
pushf
clc
loopne
repz
popl
sbb
pop
mov
mov
pop
je
xlat
and
pop
mov
lods
mov
insb
test
jle
mov
mov
xchg
insb
jne
das
je
inc
cs
sarl
loope
xor
cmp
mov
push
add
fsts
cmp
mov
movsl
cmp
inc
addb
push
jns
adc
cmpb
fists
sbb
jns
cmc
ja
imul
mov
push
inc
stos
sbb
mov
jne
sub
rorb
dec
sub
cmpsl
xlat
scas
stos
insl
stc
and
mov
and
xor
and
mov
loop
jno
int
ds
jge
rolb
xor
mov
call
sbb
adc
push
mov
rol
cmp
and
testl
xchg
out
pop
cmpsl
aaa
dec
ret
popa
idivl
bound
cmp
bound
addr16
jge
sub
dec
bound
sbb
aaa
sbb
or
pop
fs
add
repz
es
jnp
repnz
ds
inc
and
or
outsl
push
sbb
test
movsb
jno
mov
mov
cmp
sbb
aaa
push
jmp
adc
out
inc
sub
shlb
cwtl
push
cmc
mov
xchg
ret
int3
out
pandn
cmp
or
jbe
inc
outsl
sbb
das
inc
imul
sbb
jns
cmp
or
jno
dec
fiadds
sarl
jl
addr16
sbb
jae
loopne
jg
adc
loop
pusha
push
mov
push
std
push
xchg
int3
push
dec
push
bound
lock
adcl
mov
fstpl
pop
fxam
xchg
insl
fbstp
out
out
dec
mov
hlt
cld
pusha
mov
and
push
adc
pop
leave
pop
popf
repz
outsb
lret
das
das
enter
addr16
xchg
shr
jno
push
cmp
inc
icebp
dec
mov
mov
call
inc
nop
inc
fisttpll
cld
int
push
mov
cmpsb
dec
rclb
mov
lods
xor
cmpsl
bound
test
repnz
sub
fistpll
lret
test
pop
mov
dec
enter
mov
xlat
in
xlat
mov
sbb
ficoml
nop
xor
fyl2x
or
lcall
in
stos
fdivrs
fwait
jae
dec
pop
jae
mov
dec
mov
pop
hlt
xchg
add
pop
jns
cmp
xor
lods
leave
icebp
inc
inc
ret
sbb
adc
mov
pop
shlb
call
xor
adc
lret
and
mov
inc
nop
push
xor
jno
sub
xchg
or
mov
stos
sahf
pop
mov
adc
test
xchg
testb
das
mov
pop
out
push
mov
push
lods
fs
pop
das
pusha
clc
dec
shll
test
pop
shr
push
pop
test
int3
into
out
cmp
adc
jno
push
sub
inc
xchg
add
sbb
cli
out
sahf
jmp
mov
or
xchg
outsl
xor
mov
outsl
out
dec
add
pop
mov
jo
xor
mov
mov
enter
mov
mov
jecxz
xchg
push
int3
mov
hlt
xchg
dec
pop
xor
add
cmp
push
push
ja
mov
call
xor
mov
push
jg
ficoms
ja
aaa
xor
pushf
cmp
cmp
push
fisubrl
jns
push
daa
or
add
jp
cwtl
and
nop
inc
jge
jnp
imul
push
jne
or
into
out
or
cmpsl
in
movb
popa
mov
aaa
sbb
into
aam
cwtl
add
test
stos
push
shlb
cmpsl
cmpsl
into
adc
sahf
orb
dec
ret
xchg
dec
idiv
add
sub
xor
leave
es
iret
mov
fidivrs
and
stc
pop
xor
nopl
adcl
jmp
ret
lahf
xchg
sbb
cmp
cmc
imul
dec
adc
lahf
cwtl
push
cs
add
pop
das
mov
dec
loop
mov
jmp
clc
inc
stc
mov
out
pusha
in
xchg
sub
mov
cmp
pop
or
cwtl
or
pop
sbb
xor
movsb
xor
cltd
sub
arpl
int3
jne
sarl
jae
filds
aas
adc
ljmp
sbb
jbe
sbb
aad
xchg
roll
xor
out
test
ss
push
adc
mov
push
fiaddl
jno
idiv
dec
dec
cld
push
and
cmp
fldcw
sbb
jbe
movsb
fld
fbstp
aam
mov
pop
in
xor
jnp
lds
cmpsl
inc
lahf
cmpsb
ja
sub
loope
enter
out
xorb
aad
mov
in
inc
mov
mov
fldl
pop
adc
pop
xchg
out
xchg
push
sub
rcpps
cs
paddusb
pop
movsb
jmp
cmp
push
dec
mov
out
pop
push
lds
add
pop
je
lahf
and
into
mov
into
cwtl
sbbl
scas
cld
xchg
or
insl
mov
lcall
ljmp
dec
out
push
mov
jp
add
sbbl
jno
push
mov
ljmp
push
hlt
push
xor
fcompl
and
popa
sti
mov
nop
das
adc
lds
pop
mov
sbbl
and
mov
aam
pop
es
sub
int
dec
add
adc
popa
mov
add
mov
cmp
jb
in
inc
add
inc
movsl
jmp
xchg
sub
push
btc
jns
cli
xchg
xchg
push
lods
and
jmp
or
xchg
stc
push
rcrl
les
das
push
in
sbb
jno
cmpsl
test
pop
mov
std
movsl
bound
cmp
in
lea
mov
dec
pushf
dec
jmp
and
cmp
lret
test
int
loop
mov
sub
dec
divb
mov
cwtl
push
jae
dec
data16
dec
daa
imul
sbb
test
loopne
xchg
rorb
addb
or
insl
xchg
pop
stos
xchg
inc
movsl
sub
inc
lret
mov
xchg
and
mov
insl
mov
or
or
adc
pop
sub
ret
lods
cmp
add
data16
xchg
ja
sbb
scas
xchg
xchg
xchg
pop
or
icebp
fcomps
hlt
xchg
outsb
shll
jle
shr
loop
arpl
test
pop
lods
adc
test
shll
dec
test
mov
push
dec
test
and
mov
in
jae
imul
dec
sbb
push
idivl
in
stc
push
sahf
or
call
daa
data16
nop
stc
scas
addb
push
and
dec
decb
inc
jecxz
vcvttps2dq
jno
out
out
repnz
dec
mov
movsl
or
rcrl
pop
sbb
dec
jle
insb
xchg
xchg
testb
and
sub
push
xchg
xor
mov
add
cmc
mov
sub
mov
or
push
xchg
jno
inc
loop
mov
sub
test
adc
clc
push
iret
ljmp
jecxz
enter
and
lods
movb
adc
call
rol
dec
inc
cmpsb
aad
jp
fs
jge
mov
or
or
int3
sbb
jle
xor
insl
rcl
cli
cmp
add
mov
sub
jo
cli
incl
test
fwait
ds
ljmp
dec
or
push
sub
pushf
inc
mov
xor
dec
sub
enter
sbb
mov
push
popf
xchg
mov
cltd
scas
icebp
jae
add
xlat
sbb
sbb
loop
xchg
stc
adc
sub
fs
sbb
cmp
repz
push
mov
mov
inc
divl
push
addr16
dec
pop
scas
loope
les
sub
sahf
lahf
mov
mov
mov
je
xchg
inc
fucomp
or
sbb
or
sub
sub
jecxz
aad
pusha
mov
lods
mov
fdiv
pop
inc
mov
push
hlt
dec
popa
jne
push
data16
dec
inc
inc
shlb
dec
pop
xchg
arpl
sahf
push
xchg
and
outsb
sub
sub
mov
in
aaa
ret
add
je
shr
pop
pop
vfnmaddsd
fistps
lock
pop
or
cmc
movb
adc
mov
mov
cld
loop
mov
lea
xchg
dec
out
rcr
or
cmp
lret
jge
test
or
cwtl
pop
or
cmp
pop
test
stos
xor
es
or
dec
gs
out
cld
insl
ret
call
mov
pusha
sub
mov
roll
mov
out
or
adc
sahf
xchg
xor
and
or
xchg
lea
dec
sub
popf
das
mov
xchg
jle
sbb
jno
lods
sahf
cmpl
fcmovbe
cmpsb
and
fcompl
sbb
movsl
mov
pop
outsb
or
sub
sub
loop
cwtl
repz
cltd
push
subb
jl
ja
scas
lods
sub
dec
mov
out
jmp
jbe
pop
jo
dec
dec
in
mov
sub
add
test
pop
sub
mov
push
dec
frstor
xchg
dec
popa
mov
push
jns
inc
or
pop
adc
pop
dec
xchg
adc
push
call
outsl
iret
mov
jnp
cmp
movsl
fnsave
pop
cmpsl
xchg
inc
loope
movsb
inc
and
jns
jbe
mov
clc
mov
les
jne
push
test
adc
pushf
pusha
shrl
cmpsl
jnp
and
stc
sub
fidivl
add
and
out
stc
sbb
scas
insb
test
ror
repnz
add
dec
mov
ret
jno
and
xchg
or
cmc
sbb
xor
iret
in
sub
push
push
scas
xchg
xchg
mov
inc
mov
loop
push
lds
aaa
lahf
ret
popf
mov
jg
sub
fdiv
int3
and
pop
sbb
lahf
mov
adc
mov
movsb
loope
mov
sbb
clc
mov
aam
enter
fisttps
nop
fldt
in
lcall
and
cmp
or
test
xchg
push
cmp
push
inc
xlat
xchg
push
iret
and
xchg
iret
daa
push
cmp
xor
imul
push
mov
hlt
rorl
sbb
push
add
fnstenv
sub
mov
adc
adc
pop
test
mov
jno
addr16
lret
inc
jge
mov
xor
mov
push
ret
add
xlat
sub
adc
jl
jbe
shll
dec
push
aas
test
cmp
hlt
ss
jns
xor
xor
mov
es
aad
mov
mov
and
or
scas
jae
push
and
arpl
pop
jmp
int
push
cs
pop
insl
jmp
stc
fcompl
xor
fmuls
out
test
jle
inc
or
iret
mov
push
mov
mov
pop
mov
icebp
mov
cld
xchg
bound
popl
pop
jno
push
lea
and
mov
inc
xchg
in
int
push
sbb
rclb
or
jmp
aam
push
stos
rolb
mov
lcall
je
pop
adc
jl
mov
pop
adc
cld
fiaddl
fmul
sub
lock
movsb
dec
test
fs
sbb
daa
xchg
inc
sub
stc
mov
jno
push
pushf
jge
add
xor
and
inc
clc
inc
mov
cmp
dec
jns
cmpsl
std
sbb
sub
xchg
fadd
loop
push
jle
shll
hlt
adc
xor
jnp
dec
mov
or
imul
mov
aaa
pop
movsl
pop
out
imul
dec
push
out
adc
mov
inc
stc
mov
xchg
push
icebp
arpl
jp
add
bound
jb
insl
push
loop
adc
sarl
loopne
mov
ds
repz
frstpm(287
xor
sahf
mov
sub
insb
aaa
and
loopne
les
sub
xchg
and
mov
arpl
lcall
movsb
mov
sbb
sbb
lret
dec
outsl
or
cmp
dec
popf
pop
adc
nop
mov
test
dec
dec
sbb
or
pop
xchg
std
loope
ror
pusha
sbb
enter
pushf
mov
sti
and
fdivr
lods
call
pop
xor
ficoms
stos
mov
sub
adc
cld
out
cmp
and
xor
jge
lds
jo
cmp
insb
scas
test
jb
mov
leave
pop
insl
jb
jle
repnz
push
lcall
add
cwtl
push
cs
push
mov
call
push
xor
pop
out
mov
sub
test
in
ljmp
or
add
and
lock
sti
ret
shll
cmp
ret
and
xchg
inc
jae
js
jb
lret
popf
enter
cld
mov
or
in
mov
sub
roll
out
fisubrl
stos
and
fistpll
sbb
dec
lods
push
fucomp
push
xchg
ljmp
add
movsb
bound
stos
clc
xchg
std
into
or
dec
loop
xchg
push
frstor
andl
stos
xorl
lock
jno
outsb
sub
pop
fstl
or
loopne
and
outsl
xlat
sbb
test
jg
pop
outsb
sbb
repz
bound
ret
fcmovu
push
fdivs
cmp
xor
mov
push
add
push
xchg
mov
ds
aam
andl
mov
ds
push
mov
shll
mov
inc
sub
pop
lret
xchg
movsb
mov
stos
loope
scas
ret
iret
hlt
cwtl
lcall
mov
in
xor
jns
sbb
out
push
lea
xor
mov
fs
sbb
sbb
add
and
adcl
out
hlt
jo
jg
adc
adc
jp
cmpsb
std
das
notb
outsb
icebp
dec
inc
in
decb
and
sub
adc
arpl
sbb
insl
dec
nop
iret
in
dec
add
jbe
lea
and
mov
das
cmpl
es
jg
movsl
fcoms
or
les
ds
pop
mov
mov
xlat
jae
mov
and
cmp
fstpl
sub
in
sub
jecxz
dec
mov
mov
icebp
int3
loop
jecxz
sbb
loopne
pop
lret
movsb
jmp
mov
mov
xor
jns
push
xchg
sub
sbb
push
pop
fimuls
test
and
int
jge
daa
std
stos
in
int3
aam
adc
sahf
out
ds
movsb
push
testb
aaa
push
xlat
inc
and
cmc
pop
sub
push
into
pop
mov
push
test
dec
fsubrl
xlat
mov
mov
es
cmp
js
and
ret
int
test
cmpsb
jmp
add
dec
and
mov
pusha
dec
nop
daa
dec
mov
mov
lret
cld
popa
jg
push
jns
inc
sbbb
lss
gs
inc
jns
pusha
xlat
nop
sarb
sub
inc
int3
adc
stos
push
sbb
xor
xlat
mov
lcall
or
add
cld
aaa
or
sub
jecxz
rcrb
call
cltd
lods
cmp
fs
sbb
adc
mov
mov
dec
or
flds
les
xor
sbb
les
in
jmp
aas
sub
cmp
cs
fisubrl
push
shlb
mov
stc
ja
add
loope
or
push
sub
call
hlt
loope
push
inc
sub
xchg
iret
outsl
daa
push
mov
loop
clc
push
push
into
inc
popl
inc
inc
xchg
in
mov
lea
int
insl
mov
jbe
out
sbbl
mov
scas
sub
lcall
adcl
shlb
mov
not
sub
mov
push
int3
leave
adc
clc
xchg
mov
loopne
dec
dec
push
xor
sub
fildll
lds
push
pop
xor
or
jmp
xor
mov
add
add
out
pusha
inc
idivb
orl
enter
sub
and
in
mov
mov
test
xchg
aad
push
nop
andl
cli
or
push
pushf
rcrl
push
popl
out
adc
sub
sbb
adc
mov
imul
ror
rcrl
stos
inc
inc
pop
lcall
mov
mov
scas
cmp
addb
xor
adcb
int
pop
and
cltd
cmpl
outsl
mov
xchg
fwait
push
lods
add
pop
iret
jge
dec
loopne
inc
mov
lcall
gs
in
xchg
aas
insb
pop
xor
std
xchg
xchg
and
jecxz
lea
mov
fwait
nop
and
sbb
leave
ja
mov
loop
adc
mov
rclb
out
and
pop
arpl
sbb
in
ljmp
dec
outsb
out
inc
cltd
test
clc
int
andb
xchg
cmp
jne
roll
lds
and
into
cmp
fistl
push
ds
push
dec
repz
xor
cmpsl
pop
insl
and
mov
mov
sbb
icebp
jns
out
ficompl
xlat
fcmovnbe
data16
jb
adc
pop
fnstsw
fisttps
mov
sbb
test
push
or
fsts
aaa
in
cmp
mov
in
and
imul
scas
ror
push
push
aas
push
rcrb
or
inc
adc
shll
clc
pop
push
cmpsl
out
sub
lret
ret
or
xchg
pusha
mov
mov
and
adc
adc
push
lret
adc
fcmovnu
mov
push
pop
lock
neg
mov
push
xchg
loopne
push
fcmove
mov
repnz
filds
dec
test
cli
idivl
dec
jo
fdivs
xor
lret
rcl
hlt
je
cltd
aas
aas
je
rolb
orb
mov
sbb
lods
dec
lret
dec
pusha
jge
in
xorb
pusha
test
cmp
xchg
mov
outsb
cmp
mov
ljmp
cli
cmpsb
bound
mov
lock
out
pminsw
sbb
or
xor
push
pop
popa
pop
aaa
jp
fldl
ja
xchg
mov
inc
pop
ret
push
sbb
inc
cwtl
addr16
jg
enter
mov
push
xor
imul
dec
adc
jle
mov
data16
cmp
lahf
das
pushf
push
and
ss
pop
mov
cmp
mov
fistl
xchg
test
cmp
stos
xchg
jne
cmpb
mov
sbb
cmpsl
sub
clc
push
scas
popa
into
push
xlat
jmp
mov
or
mov
notl
pop
mov
leave
xchg
cs
or
and
cli
in
dec
xchg
into
ret
cmp
in
fs
loop
xor
cmp
pop
sub
ss
negb
sub
into
nop
mov
pop
mov
into
xchg
push
pop
jge
lret
lods
xchg
test
cmc
and
ror
cmp
push
jmp
repnz
xchg
mov
lods
lret
fsubrs
sbb
xor
mov
test
add
mov
mov
aad
cmpb
pop
outsl
mov
lods
test
pushf
repz
push
adc
mov
sbb
arpl
mov
dec
sti
push
in
dec
mov
cmpsb
cmp
les
xor
cmp
in
incl
lock
push
adc
and
push
dec
xchg
adc
sbb
mov
jmp
push
out
add
fmull
inc
aaa
ds
adc
in
xchg
jnp
xor
js
mov
and
lret
fidivs
push
in
enter
pop
sahf
sti
pop
or
jge
pop
sbb
jo
push
xchg
pop
jmp
pop
hlt
inc
faddl
sbb
fnstsw
aad
push
in
mov
stc
loope
scas
or
les
fwait
icebp
movsb
test
dec
incb
cld
js
je
pop
rol
scas
imul
arpl
dec
movl
pushl
sbb
xchg
jo
incl
dec
repz
sub
pop
cli
jne
cwtl
pop
adc
mov
inc
inc
loope,pn
test
or
sub
mov
fsubl
push
push
int3
mulb
cs
xchg
mov
aad
cmp
adc
sbb
mov
mov
pop
sub
and
lret
and
or
cs
push
in
and
xchg
outsl
cmp
lods
push
jl
sbb
call
fcmove
aas
arpl
or
xchg
add
cld
sub
mov
mov
jns
jae
sub
insb
pop
popf
test
aad
push
dec
mov
dec
mov
leave
mov
stos
xlat
scas
cmc
lcall
call
fsubrl
lret
jmp
popf
fbld
mov
mov
bound
jne
pop
aam
pop
pop
push
jmp
push
icebp
iret
adc
imul
xchg
insb
stos
lahf
in
insl
mov
xor
rclb
enter
out
movsb
cmp
pop
in
scas
lretw
push
outsl
fnstcw
ret
insb
lret
pop
out
cmpsl
cmp
add
mov
mov
push
std
sub
icebp
clc
mov
sbb
pop
add
cmpsb
mov
or
fnstsw
and
xchg
shll
add
add
xchg
jg
jmp
mov
pusha
push
gs
rclb
sub
push
pop
out
filds
mov
loope
mov
lahf
iret
and
mov
clc
lock
enter
jmp
mov
adc
dec
cmp
call
mov
adc
loopne
scas
xchg
lea
test
scas
insl
ljmp
sbb
jg
inc
push
add
mov
imul
mov
rolb
sbb
xchg
sbb
loopne
mov
inc
xchg
scas
inc
xchg
rcl
stos
fs
mov
into
inc
or
pop
call
push
and
jne
ds
cmp
in
test
in
sub
std
cmc
mov
or
jne
movsb
dec
rorb
dec
jecxz
jl
mov
out
in
scas
and
out
mov
jns
imul
jno
lock
lock
popf
in
test
clc
shll
loope
dec
out
pop
xlat
enter
pop
jbe
sub
cmp
mov
push
mov
or
mov
push
sub
jbe
cmp
nop
xchg
dec
mov
notb
or
ret
push
in
push
popf
out
and
mov
lcall
jo
cmpsb
test
es
data16
popf
inc
shlb
sub
pushf
push
movsl
cmp
fsub
ffreep
mov
mov
in
mov
mov
adc
dec
mov
push
jl
fs
loope
xor
rcrl
sbb
jno
pop
jg
pop
rolb
aas
testl
cmp
mov
mov
lods
xchg
push
les
loop
lock
xchg
mov
icebp
xor
fwait
shlb
sbb
leave
inc
and
in
xlat
cmp
rolb
cmpsb
or
nop
cmpsl
aas
out
leave
mov
sbb
xor
pop
xchg
leave
fsubl
dec
mov
enter
lock
inc
inc
lods
fimull
pop
ffreep
ja
pop
aad
mov
pusha
sub
andl
xchg
dec
adc
sub
pop
stos
push
cmpsl
push
sbb
cmp
lcall
dec
sbb
jbe
jp
fimull
and
inc
and
aaa
mov
and
sub
pop
jecxz
pop
fwait
ds
cld
lret
sub
cld
mov
lret
stc
add
sbb
out
fisttpl
mov
cld
mov
push
hlt
inc
inc
xchg
pushl
jp
arpl
cwtl
mov
push
loopne
cltd
mov
and
loope
popf
insb
mov
test
or
fimuls
shll
mov
cwtl
mov
add
fs
cmp
xor
xchg
push
pop
cmpb
push
lret
and
add
roll
repz
out
scas
aas
aaa
inc
and
enter
jmp
pop
std
jle
out
popf
xor
dec
mov
mov
adc
mov
jb
mov
sti
sub
xlat
iret
js
orl
mov
out
mov
dec
shl
jo
pop
mov
or
popf
push
fnstenv
inc
je
push
in
mov
cmpsb
inc
ss
push
mov
and
stos
stos
insb
xor
fisttpl
dec
out
cwtl
xorb
inc
push
mov
loope
mov
pusha
cli
pop
shlb
fcmovnbe
rcll
mov
call
jns
push
rcrb
ret
lock
cmp
sbb
sub
ss
aaa
and
cmp
push
mov
inc
movsb
cmpb
cmc
cs
ss
inc
pop
sub
cs
push
in
mov
jp
jmp
iret
dec
leave
adc
jns
push
int
mov
add
inc
sbb
adc
fcoms
jle
push
icebp
sub
pop
mov
decb
movsl
inc
cmpsb
adc
push
movb
add
mov
xlat
pop
test
imul
dec
insl
mov
mov
popa
hlt
xchg
in
dec
mov
cld
test
cwtl
pop
jbe
add
and
push
xor
fwait
mov
xchg
sub
stos
loopne
jbe
xlat
dec
push
inc
bound
xor
xchg
inc
inc
inc
gs
aaa
cmp
cld
jne
xchg
xchg
popa
mov
ret
repz
dec
stos
cltd
mov
out
sbb
cmpsb
xchg
cmp
inc
push
rcr
or
inc
sbbb
lods
std
jmp
pusha
arpl
incl
lret
push
jle
scas
jno
xchg
mov
lcall
and
xchg
insl
mov
stc
pop
pushf
mov
sub
sar
add
pop
aad
gs
negb
adc
sbb
popf
push
sbb
int3
mov
inc
mov
mov
cmc
xchg
mov
les
mov
inc
fnstsw
pop
pushf
mov
push
push
mov
mov
in
adc
mov
andl
or
or
movsl
test
filds
and
or
dec
ucomiss
sub
push
mov
aam
sub
xchg
xchg
pop
data16
scas
jecxz
add
add
stos
test
out
push
aaa
sbbb
add
lock
repnz
pop
divl
outsb
cmovne
das
test
adc
and
jb
mov
jno
out
adc
lock
mov
push
idivb
stos
lret
mov
outsb
je
fs
fists
sbb
push
stos
lret
idivb
in
mov
and
cmovnp
pop
or
loope
add
fstpt
adc
lahf
or
or
jbe
dec
jae
mov
xchg
pop
enter
mov
sbb
add
int3
aam
mov
push
xchg
fildll
jbe
popa
pop
sbb
mov
xorb
xchg
js
mov
mov
adc
mov
pop
jbe
fidivrl
sbb
bound
clc
mov
icebp
push
cmpsb
mov
aas
in
shlb
stc
es
call
fs
daa
dec
mov
fisttps
jns
push
adc
aas
bswap
shrl
test
jo
xor
out
into
mov
push
out
mov
sub
inc
mov
mov
inc
sub
push
fwait
out
es
dec
or
jge
out
cmovns
xor
jle
fs
fldl
pop
jle
push
cmp
and
stc
repz
mov
xor
insl
out
jbe
add
mov
jnp
lahf
pop
xchg
mov
loope
shrl
jmp
cwtl
mov
ss
dec
inc
jge
orb
jmp
push
xorl
ds
adc
out
mov
inc
lea
bound
mov
mov
fiaddl
xchg
inc
mov
mov
popa
aaa
aaa
in
sbb
pop
icebp
jmp
iret
and
das
dec
mov
ljmp
lds
xchg
cmc
xchg
popf
add
jmp
mov
out
enter
dec
push
jbe
inc
hlt
mov
sub
inc
cld
dec
enter
cmpsl
pop
clc
ret
add
je
das
pop
jns
inc
fidivs
nop
cltd
pusha
mov
pop
mov
bound
cmp
shrl
jo
jns
imul
insb
into
cmc
aad
cmp
testl
scas
jge
add
adc
aaa
add
inc
js
xor
in
cs
aas
xchg
xchg
fs
sub
cmp
sbbl
sbb
pop
cltd
jmp
inc
ret
mov
push
inc
es
sub
aas
sbb
in
push
imul
xor
scas
js
inc
sahf
lods
das
inc
dec
add
leave
jle
inc
xor
pop
ret
dec
adc
jo
adc
adc
mov
pop
imul
mov
jne
mov
mov
and
js
inc
mov
or
int
test
add
push
or
jp
cpuid
adc
pop
mov
cli
repnz
fidivrs
ret
sbb
adc
aam
adc
loope
icebp
mov
lods
pop
push
in
pop
xchg
sti
clc
xor
jne
subb
jnp
sub
loop
mov
stos
cltd
pushf
pop
mov
out
cs
dec
ss
fstpt
mov
out
imul
pop
xor
cmp
fiadds
ss
cli
stos
mov
lret
inc
mov
cli
push
fstpl
and
pushf
ret
ret
xchg
mov
dec
ja
inc
and
jae
fstl
sub
loop
imul
ss
cli
inc
sbb
das
mov
adc
sbb
mov
mov
lock
mov
aam
mov
aaa
das
xor
xor
cli
xchg
mov
jmp
dec
add
xchg
push
jl
inc
test
jne
das
imul
mov
xor
daa
negl
out
scas
rorl
movsb
cltd
das
sbb
rclb
les
add
outsb
cmpb
pop
pop
xchg
inc
jle
int
or
out
pop
and
mov
aaa
adc
mov
push
call
or
cmp
mov
dec
mov
call
gs
sbb
mov
test
dec
push
lods
movsl
stc
in
fcomps
not
rcrl
add
es
or
pop
mov
xlat
inc
out
pop
adc
mov
pushf
bound
or
add
jle
mov
mov
cmc
sbb
add
xor
out
add
test
adc
pop
adc
xlat
and
sub
pushf
stos
dec
add
mov
add
pop
sub
jnp
stos
sbb
inc
fistpl
call
ljmp
test
xor
or
sbb
or
ljmp
adc
fcomi
adc
or
pusha
loopne
out
inc
insb
aas
pop
in
ss
mov
fstpl
mov
or
ljmp
inc
insl
sbb
aad
sub
dec
ds
jge
push
mov
fbld
jge
push
mov
icebp
push
iret
cmp
pop
out
sub
enter
mov
inc
push
xchg
addr16
jb
fdivrl
mov
xlat
les
and
mov
stc
jno
push
or
xchg
int
jne
push
nop
out
sbbl
lock
mov
xchg
movsl
cmp
pcmpeqb
mov
jb
mov
aas
sbb
sahf
jb
push
jp
xchg
sbb
hlt
rcll
std
imul
lock
ds
leave
cmc
pop
int
nop
jns
cmp
sub
outsb
or
dec
das
sahf
pop
inc
sbb
inc
xor
shll
push
or
cwtl
inc
mov
test
push
and
mov
fistps
out
add
std
mov
adc
mov
scas
push
in
push
sub
or
jle
out
rclb
fadd
ficompl
rorl
mov
adc
insb
sbb
test
roll
sub
jmp
xchg
rcll
stos
sub
orl
hlt
mov
cmc
ficomps
in
lods
insb
mov
imull
fbld
mov
popf
stos
cli
out
fcomps
adcl
mov
xor
push
bound
jmp
jb
xor
dec
xchg
jo
sahf
loop
scas
jle
out
out
scas
add
xor
cmp
jge
pop
pop
add
xchg
out
test
pop
xchg
ret
shr
adc
ret
in
jno
andl
xor
cmp
in
aam
scas
push
xchg
fs
lcall
int3
movsb
xor
fnstenv
insb
sub
inc
mov
sub
or
imul
jecxz
fisttpll
push
cmp
mov
add
fcmovbe
ljmp
out
jne
test
xor
das
je
mov
pushf
xchg
fcoms
cmp
jbe
cmp
jnp
push
sub
mov
ja
mov
aas
std
or
into
mov
mov
jge
mov
push
and
in
mov
add
popa
gs
jle
fwait
xchg
xchg
mov
lods
pop
lods
mov
dec
push
into
sbb
pop
sbb
in
dec
dec
xchg
or
dec
pop
std
mov
xchg
repnz
frstor
repnz
xor
mov
loop
into
mov
mov
push
pop
sub
mov
inc
jbe
xor
cmp
adc
ret
ss
and
mov
sbb
add
mov
icebp
lret
movsl
pop
stos
test
inc
push
cwtl
xchg
cmpsb
or
mov
sbb
push
outsb
fistpl
push
sub
mov
into
adc
movaps
and
shrb
aam
outsl
xor
inc
sbb
imul
xor
call
fidivrs
and
or
sbb
inc
xor
insb
mov
push
adc
jg
push
pop
in
insl
js
push
mov
mov
leave
out
lods
outsb
jl
call
push
popa
loopne
int3
lea
cmp
push
add
inc
adc
and
js
mov
cmp
sahf
lahf
cmp
sbb
fdivl
ret
int
mov
mov
lret
inc
stos
rcl
mov
mov
jne
cmpsb
and
adcl
out
mov
mov
lods
ja
test
mov
popa
and
jo
xlat
gs
in
lret
add
sub
jp
inc
sbb
mov
gs
push
ret
mov
negl
or
in
stos
mov
pop
push
dec
sbb
jecxz
inc
fwait
lods
mov
and
mov
cmpsl
in
push
push
and
jo
das
mov
mov
data16
pop
push
insl
pop
int3
jnp
sbb
int3
xor
xor
fisttpl
gs
cs
lret
lods
int3
and
fstpt
dec
repnz
sti
in
out
popa
jbe
movsb
or
sbb
mov
lret
inc
faddl
pop
mov
and
pop
dec
ljmp
lock
sub
outsb
adc
fs
cs
lods
nop
pusha
call
xchg
mov
aam
adc
icebp
popf
or
sbbl
sbb
xor
movsl
xor
xchg
fildl
imul
or
xor
inc
adc
lret
xor
into
xchg
fisubrs
in
jge
fbstp
jle
cmp
dec
push
or
out
mov
lock
js
adc
and
add
shlb
aad
stos
sub
lea
pop
mov
jmp
cmpsl
cmp
outsb
adc
mov
cmpsb
xor
int3
sub
cmp
stos
dec
inc
ret
in
mov
lret
es
in
push
ljmp
jmp
int3
lret
sbb
mov
dec
repnz
orl
pop
call
in
pusha
mov
sbb
mov
movsl
and
xor
sbb
test
mov
andb
int3
cmp
shlb
adc
inc
and
sub
popa
push
cld
cmpsl
scas
sbb
mulb
pop
jo
mov
jae
mov
jbe
js
xor
orl
jmp
sub
mov
shrb
fdecstp
ds
leave
cmp
adc
test
pop
adc
dec
call
insb
sbb
ret
push
inc
test
xchg
inc
jp
mov
popa
inc
pop
jo
das
outsl
push
adc
call
mov
gs
loope
mov
push
inc
xor
fwait
inc
mov
inc
stos
pop
or
xchg
xor
xor
lahf
bound
divl
bound
aaa
daa
xchg
adc
in
or
xchg
ja
loope
dec
inc
or
or
adc
out
pushf
mov
hlt
or
ljmp
jg
insb
cld
sub
sbb
dec
gs
jp
loop
cmp
sbb
mov
cld
ficompl
push
jbe
pushf
xchg
shll
fisubrs
test
push
insl
mov
std
pop
or
imul
mov
pop
mov
lods
jle
or
leave
xor
ljmp
and
das
cwtl
out
das
dec
lahf
cmp
or
mov
add
movhps
cmovge
loop
xchg
jbe
pop
xor
xchg
dec
add
push
dec
repz
iret
or
repz
jae
arpl
notl
xor
fstl
jl
or
imul
pop
test
insl
fdivl
sbb
cmp
lock
clc
movsb
lods
into
xchg
rorl
xor
or
add
jg
sahf
out
stos
ret
movsb
test
jnp
lcall
ds
jbe
sub
jle
rcrl
xchg
sub
popa
inc
push
ret
xor
mov
xor
xchg
dec
rcl
in
cmc
sub
subl
mov
cmp
popf
fucomi
loopne
movsb
push
fsubs
out
adcb
lods
pop
push
pslld
lahf
or
jb
mov
scas
ds
shll
mov
aad
jge
sub
mov
out
lahf
data16
int
cmp
scas
adc
dec
inc
xlat
aad
inc
adc
xchg
gs
inc
or
xor
icebp
dec
jmp
pop
popa
pop
pop
jnp
xchg
daa
push
and
loopne
mov
je
jo
mov
inc
loop
fdivrl
inc
shll
jo
xor
dec
negb
test
fildl
lret
xor
dec
int3
xchg
divb
mov
call
or
mov
sbb
lahf
aaa
rclb
out
popf
rclb
sarl
popf
icebp
xchg
pusha
cltd
out
out
cwtl
sub
jns
adc
imul
aad
push
jge
mov
or
ljmp
adcl
sbb
dec
aas
xchg
adc
sbb
add
mov
ss
and
ret
aas
shrb
in
sahf
cli
rol
pop
enter
mov
lret
mov
jge
dec
mov
aad
pop
cltd
and
mov
cld
or
or
sahf
pushf
sbbl
jae
into
repz
inc
mov
loope
aaa
leave
sbb
dec
lcall
daa
fcoml
repz
lret
and
scas
daa
ds
pop
inc
outsb
mov
add
sbb
fwait
mov
roll
lret
jo
xchg
test
cmp
pop
mov
xor
imul
push
cwtl
imul
and
sub
addr16
add
repnz
mov
inc
inc
xor
fistl
inc
inc
inc
push
lcall
sbb
xchg
data16
mov
bound
out
daa
pop
sahf
push
pop
cmpsb
dec
push
xor
es
ljmp
and
je,pt
jne
push
daa
fdivl
xchg
mov
push
mov
lret
cmp
jb
mov
mov
inc
or
adcb
cld
xor
andb
push
xor
dec
mov
add
add
mov
xchg
xchg
cmpsl
popa
arpl
mov
adc
jle
and
and
div
fmull
jae
std
xor
imul
outsl
xchg
cmp
pop
mov
jb
pop
push
imul
jnp
cmp
dec
fdivl
sti
fstl
jmp
push
in
nop
nop
ret
mov
inc
inc
stc
add
ss
xchg
or
pop
jnp
nop
jbe
or
test
fidivrs
out
sub
sbb
lcall
rcrl
ret
mov
or
cmpsb
repnz
xchg
imul
mov
out
push
out
or
addr16
repnz
dec
sub
mov
inc
mov
loopne
adc
inc
sub
sbb
sub
in
into
out
sub
jp
push
pandn
push
cltd
filds
or
dec
sbb
testb
enter
out
add
xchg
xchg
insl
jl
dec
jge
filds
xchg
outsl
jbe
xor
inc
stc
sub
mov
in
jo
sahf
ret
subb
mov
mov
aad
mov
cli
and
sbb
jecxz
outsb
push
out
sbb
pop
or
pop
mov
xor
bound
sub
sbb
pushf
jb
inc
cmp
mov
jo
pop
fimuls
cli
es
daa
or
push
mov
or
inc
aam
ljmp
aaa
stos
inc
jno
inc
sbbl
lods
mov
lods
arpl
lods
xor
arpl
nop
adc
test
cs
insb
push
and
cmp
mov
xor
jns
int
loop
sbb
fdivl
sbb
mov
add
mov
imul
pop
test
ss
lods
jae
sbb
gs
inc
adcb
xchg
cmp
xchg
sti
lret
leave
mov
xchg
adc
sbb
add
es
mov
leave
cmpsb
aad
and
or
jne
pop
daa
cmpsl
and
sub
cmpsb
repnz
inc
mov
push
xchg
cli
inc
ret
rol
jae
push
push
inc
sarb
jmp
xor
out
ljmp
xchg
pushf
pop
adc
arpl
je
roll
pop
outsl
outsl
cld
fs
imul
pop
notl
lret
je
xor
jne
xchg
inc
xchg
lods
subb
mov
fcmovbe
fwait
dec
lea
lcall
push
adc
cmp
and
lea
fdivrs
lret
lret
nop
mov
pushf
fwait
push
fisubrl
jmp
aas
jb
or
fidivrs
pop
inc
lock
addl
sub
push
or
iret
cld
rolb
roll
jp
and
rclb
pop
lods
jae
movups
pop
push
lret
and
sbb
ret
sub
push
sbb
lock
dec
cmpsb
mulb
jae
xchg
in
xchg
and
adc
fwait
xchg
jmp
clc
popf
jge
cmp
xor
add
xor
push
mov
repnz
cmp
fimull
add
lea
xor
xchg
mov
sahf
repz
iret
jl
ret
mov
or
out
lcall
fiaddl
inc
inc
nop
and
lods
rorl
out
sbb
cli
mov
mov
inc
fdecstp
ljmp
push
push
mov
lcall
ljmp
cmp
inc
jnp
pop
fildll
xlat
cmpsl
inc
mov
andb
push
jle
mov
negl
lret
cmpsl
sbb
mov
inc
mov
add
icebp
jnp
and
jne
adc
mov
add
imul
push
jae
fdivs
and
jge
sbb
jp
lock
jnp
cs
imul
in
add
pop
out
test
out
mov
push
pop
nop
lds
movsb
inc
xchg
push
imul
std
mov
xlat
adc
adc
mov
ja
cwtl
rorl
jo
sbb
addr16
jl
xchg
int
dec
pop
or
push
add
inc
bound
xor
cwtl
hlt
fsubp
in
leave
rol
add
test
mov
push
xchg
pop
adc
cmpsl
call
sbb
fdivr
das
adc
push
or
mov
mov
dec
fs
push
rcrb
js
ret
popf
loop
arpl
cli
roll
leave
pop
ljmp
sti
sub
mov
sbb
or
outsl
jbe
dec
clc
push
or
leave
dec
mov
adc
out
mov
ret
pop
popf
popf
xor
mov
test
out
sub
inc
inc
add
sbb
push
lock
pushf
xchg
iret
orl
int3
jmp
test
adc
shlb
test
push
mov
sahf
es
sbb
movsl
add
scas
dec
outsl
xor
push
aad
mov
lahf
mov
sbb
mov
sub
pop
push
inc
cmpsl
mov
ret
rcll
xchg
jp
sti
popa
mov
push
imul
imul
fldenv
or
cli
data16
aaa
mov
push
data16
push
push
mov
cmp
fcmovnu
stc
pop
mov
fmuls
pop
sub
inc
pop
cmpsb
sbb
xchg
into
jbe
sbb
ret
loop
jle
or
rol
pushf
and
js
dec
scas
adc
inc
dec
mov
and
call
cmp
pop
jae
aas
xchg
movups
imul
xchg
fcmovb
iret
shrl
dec
pusha
adc
inc
lcall
cwtl
mov
ja
dec
repz
add
cmp
data16
mov
and
es
stos
xor
shll
shll
xor
sub
lcall
pop
jge
pop
push
loope
std
add
dec
push
mov
add
xchg
adc
and
nop
jmp
nop
out
icebp
cmpsl
jge
testb
push
sti
sub
ret
mov
xor
test
popf
pop
mov
js
outsb
test
mov
popa
push
lods
pop
xchg
jp
push
imul
aam
lcall
cs
imull
clc
clc
mov
imul
adc
stos
xchg
scas
test
leave
mov
dec
orb
push
lods
scas
jecxz
inc
ja
pushf
mov
add
hlt
in
add
dec
cmp
mov
or
stos
stos
sub
fimull
mov
lahf
jb
sub
jmp
sbb
and
jne
loope
pusha
sbb
push
xchg
mov
dec
roll
mov
out
imul
jnp
inc
dec
cmp
mov
out
nop
popa
repz
fstp
pop
mov
jp
test
or
add
adc
xor
and
push
xchg
add
loopne
pop
jb
cmp
xchg
cltd
adcl
dec
out
clc
es
test
rcrb
das
sbbb
push
fists
jb
push
sbb
or
aas
and
jmp
scas
xacquire
xchg
jecxz
popf
jle
and
mov
or
push
pushf
jae
dec
sub
test
fwait
or
fstps
out
jl
mov
jl
stc
push
popa
jns
in
and
repnz
xor
in
cmc
iret
in
inc
push
popa
aaa
xor
mov
std
call
push
inc
orb
inc
xchg
and
mov
or
cmp
fcomps
repz
cmc
jecxz
jl
push
mulb
sahf
inc
outsb
popf
jl
imul
imul
fwait
std
cld
incl
divl
mov
in
jg
rep
icebp
inc
mov
pushl
xchg
and
mov
lock
sub
sub
push
fstpt
xor
mov
adc
das
jo
sti
sub
or
push
mov
push
xchg
jp
push
aam
inc
push
or
stc
fnsave
push
ljmp
cld
jle
shll
ret
mov
ficoml
xchg
xor
sub
or
xchg
xchg
out
add
shlb
inc
push
or
cmp
negl
idivl
jbe
sbb
aam
mov
xor
jecxz
sub
push
mov
cltd
jb
push
ja
fwait
xchg
aaa
jnp
cmc
int
sbb
add
test
inc
pop
mov
pop
add
adc
pop
inc
cmp
sub
nop
dec
jne
and
cmp
mov
gs
and
and
in
mov
add
repz
mov
or
lock
mov
repnz
cmp
imul
lret
inc
sbb
add
pop
fistpll
adc
arpl
lock
lock
cmp
ss
pop
call
adc
lret
test
mov
push
add
fsubrl
daa
sub
cli
int
mov
fcmovnu
lret
out
sahf
push
dec
adc
faddl
shlb
lea
inc
xlat
sbb
gs
mov
mov
idiv
cmp
fsts
add
sbb
mov
out
xchg
and
pop
adc
pop
mov
pop
neg
shlb
inc
mov
test
je
adc
dec
fsqrt
and
scas
and
leave
xchg
in
sahf
out
inc
adc
mov
scas
xchg
aaa
xchg
mov
cld
into
jbe
cmpsl
in
mov
inc
push
mov
rcrl
arpl
xchg
inc
mov
aas
andl
cmp
push
pop
dec
in
inc
or
psubb
pop
sub
cmp
arpl
and
mov
mov
or
ss
dec
xchg
aaa
push
mov
lods
jo
pop
ret
clc
jecxz
aam
fildll
and
lret
jmp
pop
or
and
adc
arpl
in
in
arpl
clc
repz
push
ja
insb
dec
fdivrl
xchg
test
xchg
test
jo
or
das
push
and
adc
cmpsb
stc
pop
and
movsl
out
jl
pop
xchg
xor
sub
jmp
mov
loopne
push
add
push
and
xor
js
vmovaps
fucomip
pushf
xor
push
or
mov
pop
mov
pop
enter
adc
repnz
inc
mov
ljmp
hlt
cwtl
sub
jp
mulb
subl
out
xchg
pop
mov
int3
fsubr
ret
add
push
roll
ret
repz
negl
addr16
xchg
sti
jo
xchg
movsb
loopne
push
movsb
xchg
jne
loope
dec
xchg
pop
dec
or
mov
pop
mov
loop
adcb
mov
cmp
arpl
mov
sub
mov
js
fstp
dec
imul
and
pop
dec
cmp
arpl
loope
dec
sub
or
and
push
loop
mov
into
pop
mov
inc
jl
mov
mov
push
dec
mov
lret
xor
jb
sbbl
push
mov
pop
stos
rclb
and
cwtl
jo
sub
xchg
in
pop
mov
mov
add
lods
add
jno
aaa
cmpsl
xchg
movsb
adc
cmp
in
push
inc
or
inc
jmp
adc
dec
jl
mov
mov
in
sub
sbb
dec
mov
in
dec
out
mov
mov
or
xchg
cmp
loop
mov
outsl
push
mov
jp
in
aam
rcl
push
das
xor
dec
jne
clc
int
pop
add
inc
andl
ljmp
xchg
adcb
inc
pop
jb
ss
cmpsl
inc
pop
orb
imul
fistpll
or
aaa
push
std
mov
mov
inc
mull
add
into
scas
mov
mov
inc
or
xlat
das
out
into
scas
or
jbe
testb
popa
lods
mov
ss
jecxz
push
scas
stos
cmp
mov
push
out
fisubs
daa
mov
cmp
or
adc
movsl
and
pop
adc
iret
int3
mov
sub
adc
mov
outsl
sbb
push
mov
cli
lahf
mov
xor
mov
xchg
push
stos
out
test
sbb
adc
mov
mov
in
mov
xor
or
stc
or
iret
add
movsl
cmc
mov
les
pop
lods
mov
outsb
mov
jmp
rep
xchg
mov
test
punpckhdq
cltd
lods
xlat
mov
push
jo
ret
aam
cmpsl
addr16
push
mov
pop
mov
insb
push
loope
xchg
std
leave
inc
add
mov
popf
mov
mov
jmp
sbb
repnz
cmc
rolb
mov
insl
lock
fsubrp
jmp
imul
dec
sbb
stos
mov
lock
repnz
adcb
repz
push
leave
sar
in
jle
xor
push
jns
cwtl
mov
mov
add
push
push
xor
fsubrs
jns
mov
lret
insl
call
cmp
inc
and
imul
mov
ss
xor
nop
fiadds
test
cmp
dec
or
xor
pop
xlat
xchg
xchg
xchg
scas
or
and
test
mov
lret
fsts
in
push
mov
repnz
adc
test
outsl
push
iret
ret
mov
sub
dec
movsb
add
sbb
sbb
mov
ret
xor
ret
fmuls
push
jns
popf
mov
lock
xlat
outsl
cli
mov
mov
inc
mov
fnstsw
test
les
test
in
jne
jnp
pusha
add
adc
cmp
rolb
dec
das
rolb
negb
out
lds
xor
insl
test
push
scas
fs
leave
cld
fnstsw
push
arpl
fs
or
pop
mov
enter
pop
out
sbb
add
sub
xor
push
mulb
cmpsb
fnstcw
lods
dec
jbe
ljmp
push
cwtl
pop
dec
xchg
scas
imul
leave
mov
xlat
notl
dec
xchg
mov
cmp
jbe
sub
sbb
aaa
inc
movsl
iret
add
inc
mov
out
fsincos
sub
lahf
cli
mov
sbb
lret
jno
mov
xchg
ljmp
cmpsb
cmp
adc
or
sbb
jge
lods
fbstp
lcall
sub
enter
mov
lcall
and
clc
jns
and
cmp
mov
cli
repz
and
cmp
or
add
test
adc
mov
out
mov
std
jl
lret
mov
inc
inc
int
mov
subl
push
shrb
lea
and
roll
sbb
inc
scas
jno
pushf
pop
stos
adc
push
movsb
pusha
push
ret
sbb
mov
test
in
cmp
dec
orb
cmpsb
xchg
lds
repz
shrl
xor
dec
rolb
lcall
adc
icebp
mov
sbb
mov
adc
shlb
add
xor
movsl
sbb
mov
mov
das
cmc
cmc
pop
lcall
or
xchg
mov
mov
mov
imul
mov
int3
movsb
jle
dec
adc
sub
loop
jbe
out
js
jl
jg
mov
pusha
or
mov
pop
push
test
scas
arpl
xor
test
dec
xorb
sub
clc
sub
scas
and
xchg
aam
jg
test
pop
lret
orl
push
pop
insb
dec
jl
cmp
sti
or
fsubrl
cli
dec
sub
mov
icebp
mov
push
jle
ljmp
sbb
ror
fwait
mov
sbbb
xchg
out
ret
sub
std
xchg
sub
fxch
pop
stos
ret
lods
in
pop
mov
sbb
pop
lds
sub
sub
aad
test
xor
jb
mov
push
push
shll
lret
sbb
mov
cmp
ss
xchg
scas
mov
mov
mov
xlat
dec
add
out
imul
inc
jo
mov
in
ljmp
pop
cmpsl
mov
xor
sbb
cmpsl
lods
cmpsb
push
jg
push
mov
pop
add
xchg
push
mov
leave
pop
sahf
shl
lds
add
xchg
scas
sub
dec
call
test
lret
aam
shrb
xor
pop
ret
jns
scas
sarl
mov
cld
sbbl
xor
mov
and
pop
xlat
jnp
mov
fmul
fadd
cli
popa
mov
jmp
leave
xlat
xor
or
leave
pop
mov
fidivs
mov
add
or
jae
push
push
stc
push
or
pusha
jno
and
mov
ret
mov
shrl
dec
adc
xor
in
push
das
or
loopne
jmp
or
divl
adc
push
movsl
add
js
inc
sbb
mov
pushf
out
in
sbb
adc
jb
aad
divl
mov
push
mov
adc
out
push
sub
ljmp
xchg
sub
mov
inc
scas
das
jl
dec
fisubs
fimull
mov
xchg
cmc
idivl
push
push
inc
mov
push
adc
sub
cli
inc
sub
cmp
cs
sub
repz
inc
stc
pop
jno
or
ljmp
das
out
add
mov
cmpsl
aaa
out
lods
mov
cmp
movsb
incl
sub
push
je
xchg
xor
rorb
hlt
outsl
ret
test
test
lcall
mov
xor
sbb
sbb
inc
repz
sbb
sbb
fs
pop
in
popa
add
inc
sub
daa
iret
fwait
test
push
push
cmp
aaa
sub
aam
decb
insb
cmc
loopne
jb
adcb
mov
sbb
int
push
orb
cli
inc
mov
push
and
cmp
cmpsb
mov
xor
int
stc
loopne
mov
pop
outsb
sbb
sbb
push
mov
mov
sub
gs
dec
repz
loop
loop
push
imul
inc
mov
loopne
pop
and
mov
jns
push
aam
mov
push
repz
xchg
in
rorb
aaa
int3
pusha
cmpsb
leave
pop
mov
xor
push
dec
jecxz
shr
mov
ja
out
lds
fstpl
sahf
jmp
mov
loopne
pushf
lock
nop
or
addr16
pop
mov
mov
lahf
shlb
ret
mov
popa
sbb
test
mov
ja
mov
lret
xlat
ds
and
adc
test
jno
sub
push
iret
dec
xchg
xor
icebp
sbb
mov
adc
or
and
sub
popf
pushf
fdivr
jp
mov
cmpsb
in
sub
sti
mov
cltd
loope
push
lea
or
sub
fmull
add
push
mov
cmp
sub
stc
xchg
hlt
mov
inc
fnstcw
outsl
or
das
sbb
jo
jne
ja
add
or
cmc
lcall
push
sbb
iret
pop
fildll
and
cmpsb
addr16
cmpl
ljmp
add
movsb
testb
leave
sub
pop
mov
cmp
sub
pop
cmp
push
sbb
mov
jmp
popf
sbb
xchg
push
insl
ficoml
loop
add
lcall
sub
or
push
inc
shll
inc
rcll
cmp
mov
and
pop
stos
push
sbb
dec
or
sub
mov
fisubrl
int
pop
inc
xchg
hlt
mov
pushf
mov
je
orb
mov
xor
dec
fs
aad
xchg
xchg
lret
frstor
mov
popf
std
mov
sti
test
pop
cmp
iret
add
add
repnz
into
pop
mov
or
jle
mov
fisttpll
mov
jecxz
call
xor
xor
mov
xchg
dec
lds
repnz
rolb
js
into
sti
xlat
insl
or
ficomps
dec
test
icebp
and
xor
mov
push
inc
fs
nop
in
dec
outsb
arpl
shl
pop
outsl
xchg
stc
lcall
cwtl
and
cmp
cltd
push
dec
dec
or
lcall
push
xlat
stos
mov
push
push
push
sbb
push
jns
jbe
jp
test
push
scas
push
and
sbb
mov
jno
sub
push
std
jae
add
rsm
fisttpll
fldcw
inc
test
ret
inc
aaa
cmp
xor
aam
jl
and
test
cwtl
fcomp
adc
push
lret
test
outsl
ljmp
std
jbe
gs
into
mov
out
mov
loop
push
insl
dec
jecxz
pop
xor
cld
sti
rolb
movsl
push
cwtl
loop
out
add
std
cmp
and
ds
rcll
cmp
data16
rolb
cmp
loope
adc
lret
jl
ljmp
push
push
bound
push
shlb
out
insl
xchg
add
or
inc
fs
mov
mov
rcrb
sbb
sbb
add
push
dec
ss
inc
lret
outsb
or
add
aam
inc
mov
adc
dec
cmp
xchg
cmp
sub
pop
mov
xchg
xor
in
ret
insl
cmp
fidivs
jo
xchg
xchg
mov
daa
add
insb
mov
in
jg
shll
mov
add
mov
sbb
int
rcrb
xchg
inc
loopne
mov
sub
int
adc
iret
jl
sbb
jp
ljmp
sbb
paddusw
ljmp
and
mov
mov
movsb
int3
iret
loopne
loope
test
scas
cmp
jae
popl
loop
push
cmc
aaa
arpl
arpl
xlat
aas
stc
jbe
push
es
jne
ret
mov
push
and
sub
fdivrs
jo
mov
and
sbb
das
or
scas
fs
inc
sub
rcl
and
fidivl
roll
daa
pop
jecxz
dec
mov
xor
scas
mov
xor
jb
inc
stos
pop
or
cs
xchg
sbb
push
mov
mov
es
dec
insb
ficoml
jo
mov
sub
es
mov
ror
in
inc
add
jg
in
mov
sbb
mov
call
dec
sub
xchg
push
pop
jl
imul
add
jmp
lret
mov
adc
jb
jle
cld
ror
dec
add
pop
sbb
sbb
mov
or
shl
je
push
ret
sub
push
hlt
dec
aaa
inc
push
mov
pop
xchg
cmp
in
test
inc
xchg
mov
adc
out
jmp
and
mov
mov
push
or
sbbl
pop
fisubrs
out
mov
cmp
sbb
movsb
add
andb
or
fwait
dec
shr
rcll
call
out
mov
pop
popf
cli
push
into
lret
push
add
xchg
test
aaa
mov
push
fidivl
xor
aaa
jbe
mov
jbe
sbb
in
fbld
mov
mov
fisubrs
jl
fs
and
dec
and
mov
lds
xchg
adc
mov
leave
ficompl
inc
loope
jle
cli
push
mov
sub
dec
popf
xchg
mov
sahf
dec
dec
or
insb
mov
fstl
xor
test
cltd
repnz
addr16
es
inc
adc
sbb
stos
loop
pushf
push
call
and
jb
fidivrl
ljmp
shrb
mov
and
mov
pop
jle
popa
das
add
adcl
jb
iret
add
gs
push
test
fcoml
sbb
adc
xlat
stos
out
lahf
fldt
mov
pop
pop
fldenv
stos
sub
mov
mov
push
pop
add
cmpsl
or
xchg
jnp
push
sub
cmp
lods
and
push
mov
shr
lahf
jns
rol
cmp
or
out
out
lcall
dec
in
xchg
sub
xchg
andb
jmp
fdivr
cs
add
dec
mov
iret
insl
and
shl
push
mov
ret
ss
filds
stos
push
stc
aam
loopne
xlat
nop
insb
push
icebp
pop
loope
out
adc
push
pushf
mov
out
or
sbb
insb
mov
mov
jno
clc
repz
bnd
test
jne
popf
jge
mov
push
mov
in
cwtl
pop
data16
xor
clc
or
outsl
mov
movb
sahf
push
pop
inc
pop
in
iret
out
fs
push
pop
mov
xchg
sub
imull
iret
cltd
scas
push
pop
jb
and
aam
inc
out
ds
add
dec
mov
popa
addr16
aam
aad
pop
fidivrs
fidivl
dec
in
das
movsb
mov
icebp
sub
xchg
rep
mov
sub
sti
in
repz
mov
xchg
or
xor
jg
fs
loop
out
sub
push
in
xlat
sub
xchg
enter
bound
mov
mov
mov
adc
loop
sub
xor
and
pop
push
addr16
pop
dec
adc
scas
xlat
lcall
call
ja
dec
jae
inc
jp
xchg
xor
arpl
mov
aam
dec
gs
add
mov
lock
xchg
inc
xchg
in
std
push
mov
pop
sbb
xchg
cmp
inc
mov
mov
pop
ror
sti
ficompl
cmp
mov
pushf
xchg
jnp
test
shlb
cmp
mov
decb
iret
test
jo
sbb
or
call
mov
popf
inc
dec
fsubrs
mov
cmp
mov
inc
mov
push
dec
movsb
xchg
and
ficomps
cmpsl
decb
sarl
gs
cmpsl
out
pop
sbb
in
sbb
out
mov
insl
fwait
xchg
pop
scas
ss
sub
xchg
pop
add
jae
fbstp
addr16
push
xor
fmuls
fisubs
inc
test
test
adc
jecxz
xor
je
shrb
test
inc
test
repz
inc
call
or
jno
into
jbe
pop
push
pop
mov
sbb
mov
lret
push
lock
out
xor
rolb
aas
scas
sbb
pop
arpl
mov
es
sub
out
xor
loope
xor
pop
inc
or
inc
jecxz
rclb
mov
xor
add
jp
add
divb
in
cmp
repz
pop
or
inc
push
pusha
enter
int3
pop
sbb
js
popa
push
pop
pop
or
test
jae
pop
es
aas
das
lret
les
sub
add
push
sbb
cmp
test
mov
stc
jns
mov
inc
add
mov
andl
jno
fistpll
das
inc
mov
ss
jne
hlt
pop
int3
movsb
movsl
dec
std
jge
lretw
dec
pushf
ds
add
daa
ss
mov
push
mov
or
cmpl
and
adc
mov
inc
das
stc
push
sub
xor
xlat
pop
push
inc
clc
sub
dec
adc
cwtl
into
sbb
loop
jae
mov
inc
hlt
push
stos
not
iret
xor
jns
push
add
scas
mov
push
pop
icebp
lcall
ret
orl
hlt
add
aad
shrd
xor
inc
xchg
and
sbb
jecxz
stos
pop
adc
addr16
lcall
pop
out
and
pop
cltd
inc
das
xchg
stc
fwait
mov
in
mov
mov
popl
push
adc
lods
stos
nop
loopne
xchg
add
jecxz
lcall
sbb
into
pop
pop
leave
repz
aam
jmp
hlt
jns
adc
iret
in
pop
push
sbb
in
data16
and
std
adc
rclb
je
lods
or
nop
aas
mov
mov
lahf
aas
xchg
mov
ds
icebp
shll
cmpsl
pop
pop
or
mov
pop
js
out
add
popf
sarl
dec
sub
cwtl
pop
lcall
pop
jnp
add
inc
test
js
mov
xchg
and
push
add
pop
aam
test
adc
es
fistl
std
jg
jo
divl
sub
cli
sub
jg
cld
cld
call
test
push
scas
int3
push
push
sub
jle
lahf
or
add
popf
inc
hlt
lock
leave
movsb
dec
addr16
enter
or
in
addr16
add
and
inc
inc
loope
dec
cwtl
add
js
xchg
js
jmp
mov
inc
sbb
cmc
jmp
cwtl
xchg
in
repz
imul
xor
iret
cmpsl
push
sbb
or
movsl
je,pt
loopne
jns
xchg
sbb
adc
scas
xchg
xchg
sub
pop
dec
xchg
jns
lods
mov
insl
dec
das
fcompl
sub
hlt
roll
push
outsl
fiadds
push
pop
mov
popa
repnz
and
push
test
jne
mov
movb
enter
lea
mov
adc
nop
jg
in
test
inc
addr16
pop
rcl
or
mov
inc
or
push
movhps
mov
les
loope
xchg
loop
in
pop
fdivrs
inc
es
bnd
xor
jp
loop
jb
add
push
popa
cmc
gs
inc
pop
mov
cld
jp
sub
loop
rcr
mov
ror
stos
repnz
xchg
and
popf
push
sub
scas
inc
ret
mov
jbe
ss
lds
inc
add
jecxz
sbb
int
mov
fs
cwtl
les
mov
lcall
je
jne
pop
pop
dec
mov
imul
mov
pop
sub
inc
mov
aad
mov
test
xchg
mov
xor
into
adc
mov
pop
add
add
mov
push
ss
cltd
sbb
jbe
mov
inc
sub
shrl
jno
and
loopne
int
add
and
scas
push
outsb
fimull
mov
aaa
cmp
mov
sub
into
dec
pop
fs
lret
sbb
ret
out
loopne
adc
push
popa
adc
divl
dec
jmp
sub
adc
push
stos
icebp
es
dec
insl
dec
icebp
xor
pop
push
cwtl
push
int3
sbb
out
es
clc
lock
push
sub
and
popa
mov
xlat
or
jmp
mov
xlat
pop
in
int
gs
mov
adcb
cmp
jl
xchg
dec
clc
and
and
mov
outsb
roll
xchg
cltd
in
mov
out
imul
pop
ret
inc
or
mov
dec
pop
mov
sbb
arpl
test
mov
dec
dec
push
mov
das
mov
jle
push
mov
push
jl
aam
fdivl
mov
scas
xchg
sbb
bound
push
jmp
adc
and
jge
mov
dec
pusha
dec
lock
xor
and
das
call
push
push
cmpsb
scas
add
sub
push
data16
inc
xchg
movsb
lahf
lods
xor
lds
into
inc
out
push
aas
sahf
arpl
loope
pusha
lea
scas
and
inc
repz
int3
sbbl
xchg
gs
gs
pop
adc
sti
inc
iret
lcall
adc
ret
lahf
orb
sbb
cs
xchg
aam
int
rorb
push
cmc
adc
outsl
inc
sub
iret
ljmp
test
in
dec
sub
xor
mov
sub
out
iret
jmp
add
loope
cwtl
mov
ljmp
nop
stos
and
clc
jecxz
adc
sub
pop
push
mov
push
repz
add
sbb
sbb
lods
sub
aad
push
icebp
xchg
pusha
les
rcl
xchg
pop
push
inc
jae
cmp
mov
dec
and
push
mov
out
out
or
inc
sbb
sbb
cs
arpl
jns
out
jge
mov
pushl
and
or
outsl
sub
testl
movsl
outsb
lock
int
pop
cmc
mov
scas
lahf
das
mov
dec
je
jae
and
movsb
ret
or
inc
insl
or
fwait
mov
mov
push
and
repnz
cmc
andb
mov
xorl
jecxz
add
ss
out
xchg
inc
add
fmul
subl
cmp
movsl
shlb
aam
in
aaa
pop
daa
cs
push
inc
add
push
es
lcall
sub
jno
push
jno
inc
inc
enter
loope
mov
mov
cld
ret
imul
scas
insb
repz
repz
clc
jnp
add
dec
mulb
jae
cmc
fs
xor
sbb
sub
ficomps
dec
mov
and
andb
nop
int
xor
mov
call
push
push
pop
mov
stos
dec
add
sub
cld
inc
mov
insl
scas
and
sbb
cmpsb
and
imul
xor
fiaddl
out
push
jle
add
popf
inc
in
sbb
aas
das
cmp
outsl
repnz
add
ret
hlt
daa
mov
sbb
xorl
inc
add
test
sbb
test
mov
movsb
mov
mov
cs
mov
add
clc
adc
inc
pop
inc
stos
pusha
cmp
xchg
adc
insl
push
adc
cmp
sbb
sarb
nop
lcall
js
xchg
lcall
cltd
rorb
inc
leave
bound
mov
adc
frstor
outsl
xor
test
dec
lahf
fwait
imul
loope
or
mov
ficoml
ret
or
or
push
xchg
sbb
in
loopne
leave
movsl
push
popa
lcall
xlat
push
pop
stos
or
push
sub
jg
stos
popa
cs
add
in
std
or
stos
mov
gs
jmp
sub
lods
or
or
jno
ficoml
mov
fisubrl
push
push
repz
sub
addr16
es
dec
mov
in
test
popf
mov
dec
clc
push
cmpsl
hlt
cs
sarb
and
dec
dec
clc
pusha
rcrb
leave
push
push
icebp
jno
xchg
mov
push
pop
insl
inc
scas
and
in
test
pop
sub
sub
bound
lahf
mov
lea
sub
and
pop
xchg
mov
push
cmp
push
adc
loope
push
sbb
orb
pusha
mov
popf
stos
inc
movsb
mov
jno
xor
pop
lret
out
dec
repnz
fld
adc
clc
cmc
sub
jle
pusha
shr
sbb
inc
pop
imul
jae
mov
adc
cli
pop
repz
ret
adc
arpl
cmp
fsubp
jb
xor
and
cwtl
enter
int3
fcompl
mov
fisubrl
scas
pop
adc
lock
aas
test
int
jl
cmpb
or
daa
jle
mov
sbb
ret
mov
test
repz
pop
stc
cmp
scas
fcomps
jp
pop
mov
ljmp
sti
bound
mov
add
add
jo
cmc
mov
mov
out
pop
mov
daa
or
clc
test
movsb
sar
mov
in
repz
sbb
hlt
adc
jne
push
std
shrb
sbb
popa
mov
test
insb
loop
inc
int
mov
test
cmc
cli
sub
mov
sub
aad
adc
ret
sarl
shr
push
rorl
fbstp
add
mov
test
cli
out
mov
sahf
lahf
or
js
movsb
outsl
dec
pop
push
and
push
add
jae
rol
inc
mov
jno
dec
jbe
insl
lods
dec
ljmp
test
imul
pop
or
in
and
out
mov
ja
repnz
sub
and
stos
dec
push
pop
ss
loope
outsb
jae
mov
mov
mov
or
push
test
insb
jno
add
cmp
push
inc
cmpl
daa
dec
popa
sub
or
rcll
add
rclb
and
or
mov
fwait
ret
mov
ret
add
insb
popf
aas
cmp
and
jae
js
out
bound
loop
jns
mov
pop
pop
xor
xchg
mov
shll
jge
andb
dec
outsb
mov
scas
add
int
pop
addr16
iret
bound
pusha
lret
mov
dec
inc
inc
xchg
mov
gs
jg
mov
andl
and
lea
aas
pop
js
add
lods
jmp
pop
pop
mov
mov
imul
sarl
and
adc
mov
std
bnd
jle
bound
jb
jmp
shll
sub
pusha
push
or
xchg
sub
cmc
scas
hlt
int
adc
fldl
lret
es
fsubrl
ds
push
cmp
out
scas
addr16
ljmp
aad
cmc
out
pusha
dec
inc
fwait
leave
pushf
icebp
cld
popa
xor
and
cmp
insb
popf
pop
iret
sbb
push
call
mov
cs
into
fbld
mov
pop
or
jecxz
adc
fwait
call
cld
pop
mov
sub
xchg
jmp
mov
dec
inc
cltd
sahf
cmc
mov
push
clc
mov
cmp
clc
push
lock
cmpsl
arpl
sub
and
jb
and
inc
jmp
roll
sbb
loop
stc
subl
cmc
xorl
push
fsubrs
and
das
mov
flds
jo
jno
fcoml
mov
cmp
out
adc
jbe
xor
jnp
xchg
add
mov
cs
pop
popf
out
adc
inc
pushf
jne
mov
imul
add
sub
pop
jae
fdivr
pop
push
cli
cmpsl
push
add
outsb
jne
or
or
or
push
roll
mov
jge
cmp
or
int3
inc
pop
jle
insl
pushf
les
sahf
sbb
push
pop
and
jne
adc
mov
enter
js
jae
jle
xlat
or
decb
xor
fcomp
in
mov
pop
mov
mov
dec
jecxz
test
jmp
or
into
mov
mov
or
ds
out
test
shll
add
cld
movsl
add
loopne
je
dec
or
scas
jg
popf
jne
les
fldl
das
cmp
into
xchg
xor
push
loope
mov
cmp
stos
mov
imul
add
pop
popf
inc
fldcw
sarb
repz
pop
mov
fldl
jne
push
int
ret
push
hlt
les
ret
insb
mov
and
and
stc
lret
adcb
inc
push
nop
ret
fdiv
inc
cwtl
mov
mov
out
push
pop
push
add
jg
roll
lret
pop
mov
inc
out
mov
into
ds
mov
test
fistl
mov
and
xor
jae
cwtl
dec
leave
sbb
cmp
das
pop
imul
cmp
movsl
lahf
mov
push
or
test
aaa
int3
fidivrs
icebp
cmpsb
das
adc
pop
add
adc
loopne
mov
and
loopne
push
lds
scas
or
xchg
pop
mov
faddl
jmp
aaa
call
and
adc
clc
icebp
out
mov
sbb
test
push
mov
sti
xchg
sbb
sub
mov
ret
stos
adc
ds
shrb
lds
movsb
mov
ret
mov
sbb
out
test
xor
adc
cmpl
out
pushl
mov
loop
sbb
pop
push
test
js
andb
out
dec
xchg
lahf
scas
cmp
xchg
mov
mov
sbb
outsl
je
arpl
addr16
stc
out
leave
into
pop
xor
andb
mov
and
nop
cmp
ljmp
jno
div
pop
and
push
enter
jbe
xor
xchg
cltd
popa
daa
ret
and
mov
popa
mov
lcall
das
gs
clc
cmc
hlt
xor
jo
inc
dec
cmp
sbb
xchg
daa
mov
daa
aas
or
jp
lcall
mov
lock
aaa
mov
addb
testl
fcom
bnd
mov
mov
fmull
push
mov
call
pop
cmpsl
xchg
fcomi
dec
xlat
in
aaa
jl
sub
hlt
or
into
shr
out
or
or
fstp
ret
je
and
and
jmp
add
mov
jle
fs
dec
mov
cmpsb
ffree
shrb
fstpl
and
fadd
cmp
movsl
inc
mov
adc
jae
cmpsl
mov
repz
bound
lock
xchg
pushl
in
aas
lea
data16
xchg
jb
mov
mov
hlt
or
and
add
inc
nop
sbb
pop
xor
fmulp
or
subl
mov
imul
inc
jle
push
or
adc
push
scas
test
popf
mov
sbb
push
or
test
xchg
lds
cmpsl
mov
ficoml
pop
sahf
pop
add
or
shll
sub
jne
push
pop
mov
pop
loope
add
sbb
je
add
popf
push
dec
jb
push
shrl
sub
cmp
lods
dec
adc
loop
jl
cmp
stos
loope
mov
xor
push
je
pop
push
push
xor
push
es
test
and
dec
icebp
jno
movsb
popf
fcoml
test
je
daa
cmp
scas
mov
xor
jp
imul
and
mov
sub
or
xchg
in
and
jae
cmp
jne
out
fiaddl
push
js
sub
mov
aad
jecxz
imul
inc
movsb
or
je
roll
mov
js
test
ret
mov
or
ljmp
jnp
test
cld
neg
cmc
add
in
xor
sub
mov
sbb
xchg
pop
leave
out
mov
add
dec
xchg
inc
or
pusha
dec
mov
cmpsb
inc
cmp
addr16
stos
push
push
sbb
cld
mov
in
cld
xchg
add
mov
and
es
inc
mov
pop
ljmp
push
mov
adc
sbb
test
sub
lods
fimull
leave
push
in
cmpsl
push
cltd
add
adc
push
into
add
outsb
sarl
mov
cmpsl
mov
mov
fmuls
push
loop
mov
outsb
shlb
xlat
repz
cli
mov
ja
sahf
out
fnsave
lahf
xchg
xchg
sub
push
loope
test
or
sbb
xorb
pop
mov
sub
xchg
dec
or
imul
fldt
stc
mov
fdivl
lock
pop
lahf
mov
andl
jmp
stos
mov
enter
jg
loopne
dec
std
es
xchg
and
and
xchg
mov
mov
xchg
mov
push
shlb
ret
dec
mov
xchg
outsl
sbb
lret
jo
xchg
mov
jnp
test
sbb
xor
or
xor
xchg
enter
cwtl
adc
loopne
push
lods
es
stos
and
in
ja
fbld
stos
xor
fsts
mov
test
or
jno
pop
mov
lea
mov
bound
mov
add
xchg
negl
mov
rclb
jnp
and
add
sti
mov
sbb
in
imul
pop
pop
xchg
scas
fsub
mov
mov
mov
mov
orl
test
sub
add
jmp
cs
call
leave
jbe
mov
sarl
pop
int3
or
mov
in
mov
adcl
int3
pop
add
or
inc
out
arpl
ret
and
enter
cmpsl
dec
lods
loopne
fxtract
call
jns
sub
add
push
lcall
jnp
cmp
stos
mov
cld
pop
pop
sbb
dec
push
mov
cmc
xor
outsl
lea
add
mov
adc
clc
adc
pop
push
shll
mov
add
fdivl
cltd
mov
sub
in
lret
jo
xor
sub
scas
jmp
adc
mov
ja
xchg
mov
sub
addr16
cmp
mov
mov
mov
test
sahf
push
mov
negb
dec
aas
lods
loopne
jbe
call
inc
mov
mov
shr
mov
jb
push
sub
xchg
out
loope
push
decl
cmp
inc
mov
jne
mov
jmp
lock
mov
cmpsl
and
out
loop
mov
xchg
cmp
notb
in
out
adc
or
test
sub
mov
ret
pop
in
mov
pop
mov
dec
ret
adc
movsl
xchg
or
sub
mov
inc
cmp
mov
mov
push
fdivr
fimuls
insb
jb
push
jne
sub
add
xlat
mov
fdivl
scas
jmp
addr16
repnz
aaa
das
popa
dec
sbb
add
fildl
jbe
bound
test
insb
sarb
jae
orl
adc
push
mov
imul
rcrl
iret
stos
fidivl
outsb
pop
sbb
add
add
pop
jo
inc
xchg
mov
pop
adc
shll
mov
xchg
je
out
xchg
mov
pop
xchg
mov
push
inc
in
jns
mov
jl
xor
repz
mov
jmp
mov
lea
cmp
mov
mov
jle
ljmp
or
push
test
enter
hlt
les
cmpsb
adc
xchg
jmp
in
stos
jl
fcompl
mov
xchg
mov
mov
mov
and
add
ret
packuswb
arpl
shrb
int
insl
mov
outsl
mov
inc
pop
fcmovb
cmp
call
jae
fcmove
inc
mov
out
andb
cltd
cwtl
jg
and
test
sbb
movsb
test
aad
cwtl
pop
inc
or
pop
mov
scas
push
insb
out
push
fsubr
outsb
js
xchg
sbb
push
xlat
push
mov
je
sub
pop
pop
add
cwtl
xchg
sbb
push
or
cmp
add
popf
lds
jmp
popf
mov
out
mov
popf
int3
movsb
scas
jmp
fstpl
cmp
popa
or
mov
push
mov
cmpsb
pop
adc
and
sub
out
or
fnstcw
push
idivb
mov
shll
or
mov
or
mov
testb
insb
jbe
and
mov
loopne
loop
pop
fstl
or
je
cltd
mov
sub
xchg
mov
mov
and
or
inc
jmp
das
sbb
xchg
inc
adc
xchg
clc
cli
push
push
testb
ljmp
xor
pop
pushf
mov
fwait
into
mov
push
or
icebp
insb
cmp
faddl
orb
addr16
or
push
dec
and
ret
pop
les
idivb
push
loopne
ja
xor
jno
jne
pop
cmp
int3
fcompl
pop
dec
cld
inc
outsl
cli
and
xchg
ret
ljmp
jl
jnp
test
stc
lahf
pop
adc
test
mov
push
and
out
inc
or
pop
or
sahf
cs
mov
out
shrl
lcall
sub
adc
insb
fimuls
bound
xor
mov
jne
imul
pusha
mov
in
push
iret
adc
pop
insl
and
scas
pop
pusha
pop
je
pop
cmp
mov
and
pop
mov
fwait
lahf
lds
jne
imul
and
js
jbe
cmc
jmp
fiadds
cmpsl
cwtl
out
xchg
xchg
dec
add
adc
sbb
jmp
sbb
js
add
mov
daa
xchg
inc
mov
jp
xor
xor
jl
and
cmp
mov
test
popa
sub
outsl
lods
pop
mov
stc
lret
xor
icebp
adc
push
cmpb
out
add
mov
jo
dec
mov
cmpsl
jae
popa
jecxz
call
mov
int3
push
je
idivl
mov
pop
mov
shlb
cmp
xchg
push
xlat
mov
rolb
iret
bound
jl
mov
inc
lahf
daa
push
shr
pop
das
dec
or
mov
aam
imul
testb
push
mov
or
mov
cmp
mov
adc
ja
mov
push
addr16
and
fsubs
fsubs
xor
jbe
mov
out
out
loope
lods
cmpsl
int3
or
mov
in
mov
or
cmp
test
or
mov
xchg
add
sbb
push
out
arpl
outsl
jno
push
xchg
cmp
cld
data16
or
jmp
mov
sbb
shll
popa
mov
je
imul
jl
mov
popf
xchg
adc
sbb
outsl
or
insl
sar
pop
aad
inc
rcll
rcrl
mov
cmp
xor
fnstsw
aam
push
add
stos
pop
test
pusha
jle
add
outsb
mov
hlt
and
div
out
or
cmp
dec
mov
je
cmc
insl
cs
scas
cld
lcall
dec
insb
shr
sarl
sub
mov
mov
xor
lods
xor
sub
dec
jg
into
cmpsl
mov
scas
cltd
xchg
add
inc
adc
testb
icebp
add
cmp
lock
mov
lcall
sbb
inc
sub
xchg
sub
jl
jp
mov
jl
into
inc
xor
je
imul
movsl
jp,pn
hlt
mov
jl
xchg
sbb
fcomps
xor
adc
lret
dec
pop
jl
add
arpl
jns
sub
aas
fistps
push
rorb
ret
jo
pusha
sahf
cmpsl
mov
sbb
in
dec
cmp
cmp
aam
pop
xchg
mov
xchg
xchg
hlt
rclb
add
add
cltd
filds
cwtl
sub
sbb
inc
stos
adc
pop
int
in
fldl
ss
xor
mov
sarl
imul
mov
or
and
sub
dec
pop
xchg
outsb
in
xorb
or
adc
xor
xchg
subb
lock
fnstenv
mov
ret
and
cltd
xchg
repnz
rcr
fisubl
daa
jno
stos
cmp
jmp
faddl
xchg
aad
xor
shlb
and
mov
dec
dec
fwait
push
arpl
adc
addb
data16
lret
es
sbb
cltd
test
not
stc
cmp
lss
ljmp
clc
mov
dec
ja
repnz
push
push
sbb
jo
int
and
sub
mov
xchg
imul
xor
je
dec
int3
outsl
mov
mov
sub
leave
outsl
mov
hlt
mov
jecxz
mov
mov
push
rcrb
pusha
int3
iret
mov
xchg
into
out
mov
fbld
ret
inc
push
int
stos
push
cmp
out
pop
push
shr
lahf
fsubrl
pop
aad
cmp
add
inc
dec
mov
adc
fstl
push
or
out
ds
fldt
aad
mov
jp
sub
inc
push
in
or
std
pop
pop
loopne
popf
clc
push
pop
sub
daa
stc
mov
pop
fsubrs
cltd
pop
in
int3
loop
cmp
fdiv
cmc
cmp
sub
imul
cmp
sbb
push
jl
push
or
imul
sahf
sub
xchg
lock
mov
pop
imul
cmpsb
js
xor
mul
nop
xor
pop
inc
dec
xchg
or
dec
lock
push
out
leave
sub
cmp
push
add
rcrb
cltd
je
scas
std
dec
jge
mov
xor
test
mov
sub
les
sbb
adc
outsb
mov
sub
cs
lret
or
adc
or
cmp
jne
popf
cmp
jmp
aas
ret
aaa
sti
icebp
lcall
aam
jo
or
push
movsl
in
in
in
ja
fistpll
or
lods
dec
xor
cwtl
fildll
lcall
xchg
push
je
adc
push
lds
mov
pop
xor
push
add
test
push
loop
sar
loop
and
shrl
jne
cmpsb
mov
xor
scas
lea
dec
sub
mov
lods
mov
or
test
and
clc
in
lock
sub
cltd
add
dec
pop
subl
push
push
sbb
xor
push
dec
mov
pop
mov
pushf
add
mov
das
cmpsb
popa
popa
dec
inc
mov
loopne
jb
push
or
test
xlat
nop
aad
in
mov
xchg
jo
insb
pop
sub
xor
push
imul
scas
mov
fwait
and
cmp
xorl
inc
loopne
jbe
adc
mov
add
std
sub
xor
and
xchg
seta
mull
sub
xchg
sahf
fdivr
fisttps
and
jo
pop
lahf
loopne
pop
lods
cwtl
push
inc
xor
jle
mov
fisubrl
lret
iret
or
clc
mov
sbb
push
sub
sub
sub
inc
sbb
inc
xchg
mov
mov
mov
lds
shl
ljmp
cs
jbe
fwait
xor
adc
mov
popa
adc
mov
ret
sbb
sub
test
push
or
xor
gs
cli
test
sahf
inc
popa
fadds
fwait
mov
pop
es
into
mov
je
mov
mov
std
mov
addr16
xor
sub
mov
sti
aaa
stos
pop
inc
jns
push
mov
js
jmp
jo
mov
lahf
jb
dec
aad
js
decb
jno
cmp
inc
loope
jmp
mov
fisubrl
and
call
in
jae
jg
add
icebp
fldenv
mov
clc
lret
mov
test
mov
and
out
out
mov
adc
dec
xlat
pushf
sub
inc
xor
dec
lea
dec
into
imul
outsb
test
out
mov
xor
inc
lock
jle
lods
xchg
add
pop
rolb
roll
popa
fbstp
cmpsl
les
dec
dec
test
jmp
or
insb
insb
call
arpl
jge
testl
mov
xchg
sti
and
ret
lock
dec
divb
mov
cmp
stos
out
mov
outsl
std
or
fptan
xor
jno
enter
mov
push
jae
cmp
test
mov
cmp
pusha
xor
xor
outsl
fwait
xchg
out
lret
out
dec
sbb
outsb
push
and
shrb
adc
jae
lret
or
jbe
cmpsl
mov
aam
repz
lods
mov
scas
jbe
out
add
stos
mov
fimull
shll
cmp
pushf
xchg
gs
sbb
adc
fists
lods
es
fcmovbe
aad
cmpsl
cld
adc
pushf
mulb
adc
addr16
fstps
movsb
inc
aam
pop
jmp
pop
iret
popl
fwait
rorl
ss
push
sarl
pushf
push
xchg
pop
fwait
stos
sbbl
leave
popf
mov
test
xchg
add
in
cmp
iret
test
icebp
adcl
or
out
jmp
inc
loop
stc
jns
inc
sub
gs
inc
imul
loope
out
fidivrs
inc
cmpsl
in
lahf
push
push
ljmp
pop
jmp
jb
cld
adc
fmulp
pop
filds
test
jnp
lods
gs
push
mov
lds
xchg
pop
pop
xchg
sti
ja
fldt
movsl
ljmp
xor
js
aam
mov
lds
jbe
add
sbb
xchg
fistps
mov
dec
sbb
push
stos
pop
xchg
lret
adc
subl
jbe
mov
mov
test
push
adc
rolb
mov
imul
test
inc
je
mov
icebp
pop
cmp
add
cmpsl
test
dec
mov
jo
dec
std
movsl
fistpll
loopne,pt
mov
dec
fstl
xchg
inc
jl
adc
lock
xchg
mov
jnp
ret
sbb
insl
push
sub
add
jb
inc
bound
mov
icebp
iret
add
xchg
popf
jg
lods
outsl
jmp
gs
mov
sub
cmpsb
je
ffree
add
arpl
push
mov
lock
addr16
jp
out
mov
sub
push
push
out
push
rcr
std
dec
jae
xchg
pop
rol
aas
movsb
pop
andb
movsl
iret
fidivrs
jecxz
ja
xor
mov
sahf
mov
aaa
lret
push
aas
lret
and
sbb
ss
lahf
push
cmp
lock
add
mov
sbb
pmuludq
xchg
stos
nop
push
insl
nop
inc
lods
xchg
fcmovnb
dec
mov
dec
lcall
icebp
lods
sub
pop
mov
inc
pop
addl
mov
ss
lock
adc
cld
lret
dec
fbld
movsl
inc
jno
add
and
cmpsb
dec
clc
shr
movsb
mov
inc
xchg
lock
fsubr
mov
cwtl
pop
xchg
or
xchg
cs
inc
lahf
mov
dec
cmp
sbb
dec
xchg
insb
jno
jg
lcall
inc
adc
adc
enter
repnz
sbb
repnz
sub
sarb
pop
les
je
ja
fucomi
cwtl
add
and
mov
sub
in
jne
jo
add
ja
mov
jge
push
push
lcall
push
cmpsb
stc
jmp
ja
loope
mov
loope
scas
inc
mov
sbb
xchg
mov
arpl
pusha
call
test
test
dec
pop
movsl
in
xor
pop
mov
mov
lds
mov
or
mov
in
mov
js
inc
gs
aad
in
cvtps2pi
ljmp
fwait
push
rcrl
ret
inc
addr16
push
pushf
test
cmp
jns
lret
sbb
outsb
pop
xor
mov
mov
mov
fs
fs
enter
jno
pop
lock
cmpsb
mov
dec
lahf
ds
or
les
dec
push
sbb
rcrl
fsubrl
call
push
rcll
leave
push
popa
dec
dec
fnstenv
insl
pusha
loop
das
push
aad
sub
cmc
imul
fstps
xchg
xchg
mov
call
dec
movntq
pop
rclb
adc
jle
int3
js
jg
fwait
or
sti
cltd
mov
call
sub
cmp
cmpsb
pop
push
jo
or
into
inc
sbb
jae
movsl
ficoms
test
or
sbbl
inc
fidivl
lret
cmpsl
testb
push
sub
dec
xchg
fcmovnu
leave
push
sbb
sbb
cld
mov
aaa
inc
rol
das
outsb
mov
sbb
mov
hlt
pop
push
arpl
cwtl
daa
imul
dec
js
arpl
inc
pop
sub
xor
mov
cmp
xor
cmp
sarl
mov
sub
add
cmp
pop
pop
pop
sbb
out
rclb
in
inc
subl
pop
aaa
das
data16
addr16
in
sar
cltd
sbb
dec
lods
js
xchg
int3
bound
xor
fwait
jecxz
lahf
push
dec
data16
leave
or
inc
and
mov
add
subl
mov
mov
aad
test
shl
and
inc
std
pop
popw
pushf
cmpsb
imul
jnp
adc
mov
add
mov
and
aad
sub
push
jle
and
scas
ret
pop
cmp
outsb
imul
into
repnz
pop
push
dec
test
jg
mov
fmull
lea
mov
popl
stc
push
aas
sbb
data16
out
sbb
cld
rcl
pop
lret
hlt
out
mov
aas
adc
mov
inc
push
sbb
test
jbe
cltd
ja
arpl
call
dec
cmp
leave
imul
fcomps
int3
and
sub
aad
sbb
repnz
fdivl
pusha
jmp
test
sarb
addr16
dec
enter
pop
xchg
jnp
ret
adc
test
mov
loope
push
fwait
ljmp
in
adc
loope
xchg
out
sub
fistpl
dec
mov
push
xor
push
int
xlat
xchg
int3
adc
mov
mov
pusha
out
mov
mov
pop
pop
insb
in
pop
adc
push
and
xor
shrb
and
jmp
lock
mov
add
xor
popf
out
lds
loope
adc
gs
repnz
and
repz
inc
or
faddl
aad
insb
out
and
idivl
adc
mov
jns
in
dec
insl
mov
pop
ljmp
test
test
jl
pushf
dec
fmul
jbe
push
push
and
mov
outsb
cmp
outsl
dec
clc
xor
call
aas
insl
mov
not
or
test
add
cmpsb
flds
fildl
test
out
dec
jnp
jae
xchg
into
movsb
jl
repnz
adc
lret
cld
std
xchg
lcall
mov
jo
add
addr16
hlt
ret
andb
repnz
push
lret
jne
jae
jb
or
clflush
inc
pop
jl
fldl
fwait
mov
int3
sub
dec
das
fnstsw
icebp
sub
fisubl
mov
movsl
add
xchg
adc
mov
mov
dec
fmull
mov
mov
lock
ds
movsl
pop
fstp
fiadds
mov
cs
std
lret
jb
out
inc
push
adcl
mov
push
dec
xor
aaa
inc
pushf
push
imul
sti
pop
out
xchg
mov
ja
mov
pusha
xchg
jl
mov
ret
fidivrl
dec
loopne
pusha
roll
movsb
pop
sbb
adc
aaa
mov
push
push
fcomps
pop
xchg
sub
xor
cli
mov
xor
fstp
call
inc
scas
out
push
cmpsl
lret
jnp
mov
mov
shll
push
xchg
loopne
jno
fwait
pop
xchg
add
in
mov
and
add
fcmovu
inc
push
inc
fsubrl
pop
push
mov
gs
cmp
arpl
pop
scas
mov
addr16
fstpt
test
or
mov
xchg
stc
mov
lret
fstpl
out
outsb
xor
xor
and
es
dec
jns
mov
scas
mov
ja
sbb
mov
and
aad
jg
stos
push
packssdw
xor
data16
or
sub
test
xor
mov
mov
sbb
jmp
fdivl
mov
sbb
dec
or
xlat
fstpl
inc
adc
stc
dec
aas
xor
lahf
mov
shll
dec
test
jne
sbb
cmc
fisubrl
loope
int3
in
pop
dec
dec
mov
push
out
pop
int3
fmull
jnp
sub
lods
jo
es
and
or
add
lret
mov
out
inc
dec
sub
adc
push
sbb
test
enter
lret
cwtl
push
cmp
xor
adc
sub
jnp
xor
pusha
loopne
ret
inc
mov
movsb
mov
xor
mov
adc
sub
mov
cmpsl
and
sbb
ficomps
dec
cwtl
xchg
adc
add
idivb
pop
mov
rcrl
push
mov
lahf
mov
mov
mov
adc
icebp
test
iret
data16
or
arpl
mov
insl
dec
or
push
enter
sbb
hlt
lahf
je
jg
ds
clc
movsb
cmp
cmc
stos
sbb
loopne
fldenv
pusha
jp
push
pop
aaa
push
mov
cwtl
js
in
jg
mov
pop
mov
adc
xor
adc
ffree
inc
iret
pop
cmp
out
enter
scas
leave
adc
mov
fdiv
push
jge
mov
scas
pop
xor
dec
push
pop
push
adc
add
fcoml
add
std
sub
rolb
mov
stos
ret
jne
mov
mov
iret
cld
dec
imul
mov
pop
stos
test
add
sbb
adc
mov
mov
mov
xchg
jmp
jmp
jns
pop
pop
nop
inc
flds
dec
and
jl
add
out
xchg
push
cmp
rcr
je
push
pop
mov
cmp
test
adc
lea
xchg
fmuls
pushf
scas
das
in
jle
sub
mov
mov
call
imul
xchg
inc
insl
inc
and
ds
in
cltd
push
fadds
outsl
pop
movb
lcall
je
sahf
jmp
jecxz
mov
stc
and
and
fistl
push
pop
and
in
sbb
stc
jbe
enter
insb
inc
jge
jne
xor
shrl
sub
iret
inc
fisttpll
mov
inc
mov
lret
push
in
push
test
inc
sbb
cmp
leave
mov
fcom
mov
or
xchg
sarb
xchg
push
loope
iret
imul
in
pushf
repnz
clc
sub
sbb
cmpb
in
jle
mov
sti
and
jns
cltd
dec
and
fwait
push
rcl
push
or
jge
sub
jno
or
fisttps
or
lahf
imull
testb
jnp
adc
shlb
in
cwtl
scas
adc
addr16
xor
cmp
add
pop
clc
and
cs
pop
ret
icebp
pop
in
test
mov
mov
mov
push
cmp
jmp
lcall
mov
and
push
cwtl
pop
push
jl
inc
fisubrs
fdivs
xor
mov
xor
in
sub
ljmp
pop
jnp
or
or
les
xchg
lea
cltd
icebp
adc
jbe
inc
ficomps
out
popa
clc
lahf
ficomps
fs
cld
or
sub
retw
loope
gs
push
inc
fwait
jg
jns
mov
sub
sub
lret
aam
enter
mov
fistps
add
sbb
lea
pop
test
je
push
pop
imul
out
clc
or
jmp
inc
jae
xor
insl
cmpsb
sub
xorb
dec
xchg
lcall
lods
test
dec
sub
xor
popf
jmp
adc
lock
mov
push
test
in
xor
faddl
mov
add
pop
shll
add
pop
ficoms
imul
mov
pop
inc
and
repnz
xchg
inc
xlat
into
popf
or
int3
mov
push
clc
ss
stos
or
stc
cmp
mov
jp
sbb
dec
add
jns
arpl
xchg
loopne
mov
movsl
cli
es
in
xchg
mov
mov
pop
inc
mov
ret
rcrb
mov
fwait
aas
ret
popa
jg
dec
aas
xlat
inc
pop
out
insl
imul
mov
xor
xor
dec
jecxz
shrl
push
arpl
xchg
xchg
mov
sbb
andb
mov
dec
mov
adcl
repz
jo
fdivl
push
push
jecxz
pop
out
sar
sub
or
pushf
cltd
mov
scas
cmp
pop
adc
xchg
push
lcall
xor
cmp
pop
fnstsw
dec
das
dec
jl
cmpsb
pop
xor
testl
mov
jno
clc
and
sbb
adc
in
test
jb
bound
mov
jbe
test
dec
imul
inc
mov
rorl
sbbb
ljmp
pop
inc
xor
loop
popf
pushf
test
mov
ss
xchg
fimull
lret
lea
dec
inc
cmc
pop
xchg
jp
sti
test
js
push
cmp
ret
push
cwtl
test
xchg
xor
insl
lret
sbb
push
jmp
loope
mov
jecxz
aaa
pop
fadds
mov
and
push
sbb
cmpsl
sbb
test
push
test
ret
int3
sub
sub
mull
pop
cli
cmp
adc
xlat
mov
adc
and
lret
mov
add
pop
mov
out
jb
movsb
pop
inc
int3
data16
insl
shrl
dec
sbb
xchg
int3
xor
out
hlt
mov
xor
push
cmpsl
mov
adc
push
xor
dec
imul
fwait
and
rolb
lret
fsubs
jb
pop
jbe,pn
add
push
mov
sub
cmpsb
cmp
sbb
mov
dec
dec
mov
jmp
aam
aas
adc
cmp
push
xchg
cmpsb
sub
lahf
leave
cmpsb
stc
hlt
jns,pn
and
leave
xor
imul
mov
push
xchg
sbb
push
cltd
out
sub
dec
sbb
xchg
iret
mov
pop
js
scas
mov
cmc
pop
dec
mov
dec
scas
dec
dec
das
inc
call
add
pushf
repnz
cmp
sub
or
sbb
addr16
outsl
lock
and
cltd
iret
cmp
ret
pop
callw
stos
mov
inc
daa
push
inc
dec
jo
imul
movsb
in
push
xor
pop
mov
cmp
xor
sub
jns
fldt
pop
mov
fstpl
adc
out
mov
and
aas
sbb
cmc
inc
shlb
je
dec
fsubrl
dec
pushf
movsl
imul
and
movaps
in
test
push
pop
dec
in
insl
mov
push
sahf
dec
lds
or
js
call
test
lret
ljmp
aam
adc
negb
cmp
test
push
cmp
out
out
loop
and
and
sbbl
out
or
cmp
rcl
fdivr
cmovo
dec
jno
push
aad
rorl
pop
pop
cmpl
sbb
ja
gs
mov
jg
inc
mov
aad
rcrl
adc
ss
sbb
sub
loopne
sub
cmpsb
and
mov
mov
and
shrb
or
jle
cwtl
mov
arpl
out
cmp
aaa
in
loope
jne
mov
outsb
movsb
add
stos
fimuls
ljmp
test
ds
sbb
push
repz
jne
xor
outsb
adc
sbb
in
push
lahf
mov
imul
out
les
loop
adc
cltd
jbe
inc
into
lods
push
xlat
mov
push
push
arpl
popa
sub
cltd
scas
sbb
pusha
lock
dec
jge
imul
sarl
jge
shll
negl
and
movsb
lods
cmp
pop
pushf
mov
adc
mov
xor
stc
iret
pushf
fstpt
sahf
mov
daa
mov
shrl
shlb
cltd
pop
xor
xchg
aaa
inc
xor
icebp
std
dec
mov
jecxz
cmp
add
inc
pop
fs
testb
xor
popa
mov
or
mov
xchg
clc
imul
shll
int3
dec
jno
push
std
mov
in
cmp
lahf
mov
arpl
jmp
sub
pop
inc
ljmp
mov
and
inc
cmp
jns
jmp
mov
ret
pop
das
in
mov
mov
imul
fwait
cltd
testb
add
cmpsb
mov
rorl
call
jne
mull
pop
cmp
stc
imulb
ja
pushf
jecxz
aaa
sbb
mov
fucomip
sti
inc
xor
xchg
pop
jp
mov
repnz
in
xchg
mov
dec
pushf
sbb
iret
leave
add
xchg
loopne
jnp
in
out
and
sub
adc
and
gs
loopne
add
cs
insb
adcb
mov
sub
cmp
mov
and
or
filds
pop
xlat
push
push
in
lods
sub
dec
cmp
pcmpeqd
mov
sub
mov
jl
cmp
cwtl
mov
mull
add
shlb
clc
jnp
pop
inc
or
xchg
lahf
xlat
cmpl
fcoml
mull
shlb
incb
or
outsl
lods
es
push
call
xchg
and
ds
fldcw
jno
bound
mov
or
jb
jecxz
push
xor
pop
add
jecxz
mov
test
inc
fisttpll
and
addb
inc
mov
jne
mov
mov
leave
int
pushf
cmpsl
fldcw
push
sub
pop
arpl
add
ja
int3
pusha
dec
dec
loope
sbb
dec
cltd
jae
inc
add
data16
push
cmpsb
stos
in
lods
mov
or
jmp
insb
fs
adc
xlat
jl
xchg
add
jbe
mov
or
adc
test
out
or
sub
ljmp
mov
mov
pushf
jge
in
outsb
lahf
sbb
xchg
jp
cmp
xchg
pop
pushf
jne
nop
sbb
and
xchg
push
insb
lea
rcll
mov
dec
adc
xchg
inc
mov
jl
xor
rcrb
test
jl
inc
call
aas
imull
fstpt
lock
clc
push
pop
fisttpl
xchg
mov
or
sti
mov
orb
popf
icebp
aas
ja
test
hlt
shll
cmp
push
loopne
insb
jbe
data16
adc
insb
mov
adc
pop
loopne
and
lock
lret
push
out
and
mov
jg
shll
lods
jnp
and
filds
cld
pop
into
jns
ja
cld
pop
mov
sub
loope
popa
mov
dec
cmp
dec
lods
pop
pop
or
addb
lods
jl
shlb
push
inc
arpl
lods
adc
orl
mov
and
imul
movsb
rorb
clc
dec
leave
imul
sbb
pop
xor
mov
sbb
xor
popf
mov
pop
push
mov
or
sarl
mov
lods
add
dec
and
aad
mov
je
sti
jae
aaa
jb
iret
test
and
mov
loopne
and
cmc
pop
outsb
fiaddl
shr
je
fnstsw
dec
or
xchg
orb
gs
push
stos
cwtl
aas
fnstsw
ret
lahf
sahf
jbe
inc
and
loope
aad
stos
lock
jp
in
addr16
push
mov
popf
or
int
ficoml
lret
ss
xor
adc
add
mov
pushf
push
aam
test
inc
xor
std
das
imul
fldt
fs
scas
sub
xchg
sbb
sub
es
adc
mov
add
pusha
imul
mov
test
mov
dec
cmp
mov
in
ljmp
and
bound
jp
adc
daa
lds
jmp
leave
push
ja
fs
jmp
pop
xchg
pop
in
xlat
push
jbe
lock
push
inc
addr16
out
mov
jnp
mov
xchg
push
imul
jno
movsl
mov
ljmp
rcr
jnp
repz
dec
in
and
mov
cmp
pusha
div
stc
and
jne
cmpl
jb
mov
fimuls
rcrl
or
movsb
inc
jae
test
xor
xchg
jg
adc
sahf
cmp
sbb
ljmp
test
insb
cmpsl
and
movsl
lods
test
rcll
aam
hlt
jmp
mov
pop
jnp
les
push
cld
test
into
adc
faddl
add
enter
mov
lds
lds
inc
icebp
and
cmp
mov
sbb
ficoms
ja
mov
pop
inc
xor
sub
rol
decb
inc
notl
repnz
test
stos
movb
pushf
adc
cmp
jns
mov
lods
loope
mov
jle
push
add
pop
aas
lret
insl
pushf
inc
xor
jno
sub
cmp
clc
insl
dec
loope
sbb
adc
mov
pop
add
sub
loope
sahf
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
mov
jmp
iret
jmp
nop
ja
lods
jne
dec
flds
in
xchg
jno
mov
push
dec
xchg
out
sbb
int3
xlat
insb
pop
jle
lods
lret
pop
adc
cmpsb
test
jmp
jno
cmpsb
push
pop
dec
aam
jnp
xor
dec
jle
cmp
rclb
sbb
or
push
lods
xchg
mov
xchg
dec
push
adc
lret
cld
mov
add
out
test
or
cld
std
aam
pop
push
repz
push
sbb
xor
mov
xchg
fisttpl
nop
cmp
ljmp
loop
xor
test
adc
push
imul
fs
decb
out
jmp
das
rorb
data16
das
cltd
subb
xchg
les
adc
xchg
pop
xchg
js
imul
ficomps
dec
jl
mov
les
inc
mov
aam
lret
int
cs
fidivs
cmc
cmp
inc
sbb
push
sbb
dec
push
mov
push
ss
cs
xchg
imul
jnp
clc
nop
add
push
lock
sbb
cld
enter
or
mov
jp
jb
daa
in
rcr
mov
dec
fsubs
mov
ds
mov
in
fwait
in
mov
mov
add
add
xor
shlb
sub
std
mov
nop
mov
dec
xlat
sbb
aad
pop
xchg
adc
sti
movsl
pop
xor
scas
adc
sar
clc
mov
mov
lods
gs
jnp
leave
imul
and
xor
movsl
mov
je
xlat
sub
rep
in
mov
insb
fwait
insb
or
cmp
pop
cwtl
loope
lods
sub
cmp
add
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
repnz
jne
cmpb
jne
mov
shr
rol
xchg
sub
add
stos
jmp
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
addb
add
lahf
