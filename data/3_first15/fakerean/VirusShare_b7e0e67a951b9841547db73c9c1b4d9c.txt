jbe
incl
add
push
incl
add
sbb
sahf
ljmp
repnz
rorl
sbbb
lea
imul
jne
pop
or
jne
sti
add
ljmp
cmp
iret
push
inc
mov
iret
addr16
repz
orl
popa
fistl
xchg
or
mov
jne
add
and
jp
lock
pushl
sti
je
add
out
jnp
out
xor
loop
test
add
mov
incl
add
mov
xor
add
sar
sti
pop
xchg
sahf
jno
lret
mov
jmp
jg
imul
repnz
and
pop
shll
insb
dec
add
sahf
jne
sbb
std
mov
add
sub
add
add
cmpsb
mov
je
dec
test
jmp
out
dec
test
rcrb
lret
jno
shll
inc
push
jne
add
pop
inc
roll
jp
test
je
dec
mov
add
mov
jp
jge
out
jne
mull
add
dec
and
mov
xchg
outsb
js
clc
addr16
incl
add
rolb
jp
dec
ret
std
orb
add
test
aas
fadds
xor
add
call
fsubrs
je
ja
je
lret
lods
xorb
jne
inc
rolb
mov
mov
mov
out
push
add
aas
add
icebp
lcall
aas
add
push
add
add
mov
jge
inc
rolb
pop
aam
mov
jne
je
test
aas
add
dec
mov
jne
pop
mov
lods
mov
mov
movsl
loope
jne
jmp
jge
inc
rolb
inc
add
inc
out
and
out
sbb
jle
mov
push
mov
movsl
jo
lods
test
mov
stos
lcall
stc
test
fs
mov
push
push
sarb
lcall
stc
mov
arpl
cli
push
mov
mov
lds
in
in
push
mov
mov
cmc
popf
mov
fisubl
push
lods
movsb
arpl
stc
xchg
insb
mov
movsb
jo
mov
jno
cli
push
inc
sarb
mov
sahf
lret
cmpsl
push
pop
mov
fs
mov
arpl
stc
movsl
pop
int
lcall
mov
push
mov
push
shll
mov
mov
stos
sahf
popa
mov
push
popf
les
popa
sahf
mov
popa
sahf
mov
push
popf
lret
mov
pop
imul
movsl
cwtl
movsb
aam
test
jno
mov
xchg
mov
pushf
jno
shrb
jle
gs
jmp
cltd
mov
sarl
fwait
pop
lods
stos
fs
mov
push
mov
movsb
fs
mov
addr16
popf
push
mov
movsb
jo
mov
cmc
inc
scas
sbb
lret
dec
lods
sbb
lods
sbb
or
push
or
sbb
add
adc
pusha
enter
sub
jge
push
lods
jp
mov
icebp
dec
cmp
pop
xchg
lret
bound
xchg
sbb
movsb
mov
fistps
xchg
sarb
jno
jb
jle
sbb
mov
add
jne
lods
sahf
stos
scas
sbb
sbb
lods
subb
mov
aad
cmpsl
fs
divb
mov
mov
cmpsb
repz
mov
mov
sub
addb
movsb
movsb
dec
sub
add
les
add
or
js
lods
sbb
subl
sub
imul
jle
rcl
xor
adc
imul
adc
test
lods
sub
lods
sbb
or
cmc
xchg
pop
jae
jns
xlat
movsb
and
mov
sbb
enter
std
call
movsb
and
cmpsb
orl
sub
sbb
jno
in
ds
sbb
mov
aam
jle
lods
pop
xor
loopne
jle
or
sub
sbb
test
out
sbb
push
add
iret
push
movsl
ret
inc
xchg
pmaddwd
xchg
inc
popa
jle
sbb
mov
cltd
xor
clc
test
ja
jmp
add
add
repnz
and
ss
mov
jmp
and
inc
xor
testb
ret
pop
cmpsb
xor
aaa
xchg
sub
jge
lods
sub
lret
inc
out
js
push
sub
cmp
mulb
lods
aam
clc
cmpsl
sbb
xor
mov
popf
jle
sbb
sbb
out
das
xor
xor
xor
call
mov
xor
add
repnz
jne
dec
sahf
call
cmc
std
mov
sbb
mov
lods
and
cmp
sbb
std
mov
lods
ret
mov
jnp
icebp
jne
js
testb
ljmp
jne
xor
js
testb
adc
add
int3
out
cs
test
sti
stos
sbb
xor
and
jne
or
ljmp
mov
mov
lock
jne
fnstenv
fdivl
stos
xchg
add
inc
xor
or
and
insb
cmp
dec
fsubrs
or
and
andb
dec
stos
and
jno
sahf
test
or
and
mov
ret
xchg
popa
sub
lea
call
adc
scas
orl
cmp
xchg
push
pop
loopne
xor
imul
xor
or
sbb
dec
mov
sbb
into
jge
mov
js
mov
popf
outsb
xchg
out
cld
sub
stos
mov
roll
insb
lock
or
mov
xor
sbb
out
lods
cmpsb
jge
mov
movsl
xchg
test
sub
in
fld
dec
faddp
xor
shlb
aas
xor
adc
add
jge
loopne
js
addb
mov
mov
clc
cmp
sbb
lods
movsl
je
mov
sbb
xor
movsb
ret
jp
inc
jge
push
cmp
and
mov
pop
adc
gs
divb
lods
sbb
test
and
call
sbb
lods
pushf
fnstcw
sbb
mov
sbb
dec
iret
add
insl
sbb
lods
cmpsb
jge
repz
jns
fstps
out
sub
jns
mov
sub
and
jge
scas
sbb
lods
movsb
imul
pop
jne
lods
sbb
xchg
movsl
mov
mov
test
pop
sbb
cmc
pop
mov
gs
sbb
aas
mov
mov
xor
and
movsb
movsl
jl
lods
repnz
pop
xchg
sbb
xchg
rcll
jge
aaa
jnp
ret
jne
jo
test
inc
fisubrs
sbb
js
scas
adc
in
rcrb
mov
xchg
push
sub
cmp
jmp
jg
pop
jg
aam
test
mov
cmpsl
gs
mov
mov
mov
lds
aad
je
sbb
gs
xor
pop
inc
call
int
pop
inc
and
idiv
pop
xchg
sub
jmp
jb
jmp
insb
mov
fcoml
jno
or
lods
scas
sarb
xor
sub
call
mov
lret
sahf
popa
aam
xchg
xor
leave
mov
in
xor
testb
mov
adc
orb
test
hlt
or
jns
rorl
orl
mov
dec
aad
mov
mov
push
enter
adc
lret
andl
gs
ficompl
fsubrs
jmp
or
jmp
add
test
leave
xorb
sbb
xor
add
mov
dec
adc
pop
cwtl
mov
sbb
stc
test
or
dec
mov
push
xchg
pusha
pop
xchg
sbb
nop
push
add
punpckhbw
lods
imul
sbb
out
xor
sub
dec
inc
sub
cmc
mov
lret
xor
dec
scas
jge
test
repz
leave
sbb
repnz
push
into
imul
ss
and
sub
daa
cmp
lods
dec
mov
sub
cmp
push
xchg
into
in
les
inc
fldt
scas
jl
push
sub
cmp
orb
xchg
xor
inc
ja
xchg
or
or
imul
dec
mov
mov
xchg
mov
movsl
jle
aam
jg
pop
outsb
into
sbb
scas
push
sbb
or
cmc
jns
stos
fisubl
insl
cwtl
pop
hlt
shll
test
std
mov
stos
xchg
test
in
orl
dec
fnstcw
loope
pop
xchg
sbb
dec
xchg
mov
imul
ja
sub
sbb
insl
cmp
sarb
rclb
sbb
and
pop
shlb
lea
fsts
in
shlb
aam
jnp
movsb
ja
jle
outsb
bound
push
jnp
pushf
sbb
lods
pop
mov
cmp
mov
outsl
cmp
or
subl
in
mov
pushf
fmuls
sti
xor
jnp
mov
lret
movsb
xchg
dec
xchg
js
shr
dec
imul
outsb
and
aaa
lods
mov
mov
or
cwtl
sub
sub
stos
jno
add
pop
push
aam
dec
mov
add
imul
bound
xchg
loope
ficompl
es
mov
fdivl
fsubrs
leave
jns
jae
jnp
xor
and
jnp
pop
fwait
add
mov
les
in
repz
jne
inc
hlt
mov
jne
dec
pop
test
sbb
iret
fsubl
xchg
loope
addr16
js
mov
test
lret
or
popf
daa
jae
fldcw
mov
insl
dec
mov
loope
add
mov
outsl
xchg
inc
testl
mov
loope
js
jo
jmp
or
jg
scas
sbb
shr
xchg
mov
stos
jge
daa
arpl
das
out
mov
sbb
cmpsl
inc
scas
push
mov
cmc
fwait
movsb
leave
cmpb
jnp
xlat
scas
adc
cmp
cmpsb
inc
int
xchg
fnstcw
addr16
mov
jecxz
jle
xchg
std
push
jns
xchg
icebp
add
mov
stc
lahf
mov
add
mov
test
mov
pop
and
mov
in
jle
cmpsb
mov
test
pop
std
push
jg
xlat
push
or
fstpt
nop
mov
loope
out
adc
scas
mov
test
ljmp
xchg
lods
mov
repz
xor
out
cmp
sub
pushf
mov
mov
ja
gs
mov
mov
xchg
xor
mov
mov
into
pop
xchg
mov
add
sti
mov
je
std
push
ljmp
mov
push
inc
adc
ss
lahf
push
sbb
ret
mov
notl
dec
js
aad
sbbb
mov
sbb
jecxz
xlat
scas
adc
shll
orl
jg
cmpsl
sub
shll
or
xchg
ljmp
xchg
mov
out
mov
add
jecxz
ja
xor
or
sqrtps
jmp
lahf
jg
movsl
add
cmpsb
inc
cld
call
lahf
aad
add
cmc
mov
dec
inc
mov
stos
cwtl
addr16
rol
data16
adc
inc
cli
sub
repnz
sbb
or
sub
jmp
xor
mov
push
rclb
test
inc
mov
push
int3
imul
add
xor
and
mov
insl
js
test
mov
push
popa
ds
rolb
outsl
xlat
or
aas
nop
and
adc
cltd
or
adc
xor
xchg
push
push
inc
cmp
shlb
stos
pop
repz
mov
xchg
mov
arpl
pop
xchg
gs
stos
mov
or
mov
inc
scas
sbb
xchg
cmp
xchg
dec
aam
mov
push
in
test
lods
scas
test
sub
mov
cmp
stc
push
mov
pop
jle
into
xor
cltd
jnp
test
cmpsl
in
fisubrl
clc
mov
cli
outsb
aas
nop
jae
jle
imul
mov
xor
inc
loop
lcall
scas
mov
sti
mov
mov
sub
add
in
shl
add
xchg
scas
or
xchg
xor
push
xchg
add
adc
dec
inc
fisubrs
inc
in
mov
outsb
mov
and
adc
movsb
sahf
imul
mov
jg
stos
or
push
or
rclb
cmp
xchg
daa
pop
aas
insl
pushf
dec
jne
and
rcr
mov
jo
stc
mov
test
mov
mov
dec
mov
mov
mov
iret
push
and
xor
push
xchg
sub
cmpl
cld
mov
fnsave
xor
movsb
add
cs
lahf
dec
hlt
pushf
cmc
mov
incb
mov
clc
push
pop
cmp
sub
pop
lock
sbb
enterw
minps
cmpsl
xor
add
icebp
inc
out
push
inc
sub
pop
adc
sti
fsts
or
je
enter
mov
in
ljmp
add
cwtl
fs
xchg
pop
add
cli
int
add
inc
int
mov
gs
lret
test
push
push
push
pop
subl
subb
xor
pop
popf
stos
push
and
dec
movsl
xor
out
inc
insl
and
and
frndint
dec
and
sbb
or
mov
inc
push
btc
mov
cltd
xchg
xchg
lds
xor
mov
push
mov
std
std
aam
jbe
stos
jg
andl
ja
adc
jmp
xchg
repz
xor
scas
fnstcw
dec
xor
and
push
push
sbb
adc
inc
imul
cld
test
stos
lcall
outsl
sbb
rorb
add
mov
pop
aad
pop
adcb
or
flds
mov
shl
cwtl
xchg
and
cwtl
mov
mov
mov
loope
sub
loope
mov
stc
hlt
pop
je
push
and
stc
hlt
sub
mov
mov
in
cmpsl
mov
js
daa
xor
mov
mov
jg
in
sub
scas
push
jo
out
test
jb
in
popf
dec
test
push
or
mov
and
bound
xor
sub
cli
cwtl
sub
sub
jae
and
jno
or
push
sarb
jo
call
mov
mov
je
scas
push
popa
repnz
jmp
mov
jg
xchg
dec
fnstenv
mov
jp
adc
jns
fldcw
mov
test
or
mov
adc
xchg
inc
mov
add
inc
fidivs
testl
cltd
cmp
cmpsl
stos
jl
and
sbb
mov
push
int3
arpl
mov
aad
push
xor
xchg
aad
fisttpll
nop
addl
data16
pop
push
mov
dec
ret
push
and
mov
cmpsl
out
ficoml
dec
and
jp
jp
enter
aam
nop
sarl
cmp
xor
cmc
adc
push
lds
and
push
jl
scas
xchg
adc
jp
pop
cmc
dec
push
rorl
dec
sbb
aam
shl
or
fsubl
popl
mov
pop
ljmp
inc
test
xchg
lret
mov
jmp
icebp
pop
jo
cmpsb
inc
clc
loopne
cmp
hlt
stos
repnz
in
rcrb
xchg
adc
xchg
push
ss
sbb
sub
jge
lods
xlat
test
adc
mov
mov
sub
and
mov
adc
inc
leave
or
and
adc
out
sti
xchg
rcr
cld
push
lods
and
mov
and
cwtl
jl
fimuls
es
lret
call
std
mov
push
rclb
into
inc
jns
pushf
cmp
test
jmp
test
jns
mov
popf
jle
push
dec
cwtl
jg,pn
xor
sar
test
lret
sub
push
out
push
fwait
pushf
pop
add
push
xchg
mov
hlt
hlt
imul
int3
lret
int
ss
pop
push
xchg
notb
jnp
jns
pop
leave
dec
push
je
or
setne
jne
mov
cmp
fcmovnbe
and
mov
fcompl
dec
add
push
cs
xor
mov
rcrl
mov
jecxz
or
adc
into
pop
mov
add
jbe
pop
outsl
xchg
xor
lret
pop
mov
sub
in
adc
hlt
xchg
push
jmp
shrb
xor
or
mov
sbb
nop
into
push
sbb
xlat
cld
popf
push
leave
dec
jbe
lea
repnz
sub
inc
and
xchg
js
pop
test
mov
pop
outsb
sbb
push
and
ss
push
mov
mov
mov
and
mov
std
xor
jo
aas
stos
outsb
bound
pop
mov
mov
fnstcw
xchg
test
xchg
mov
pop
and
inc
xor
and
xchg
bound
sub
jecxz
test
lcall
xor
push
jno
mov
jl
add
orl
mov
int3
cmp
sbb
inc
mov
mov
mov
jle
and
outsb
push
push
mov
add
mov
addr16
out
js
addr16
add
add
fmull
enter
sub
int
test
pushf
dec
xchg
and
inc
jecxz
mov
movsb
xchg
ret
leave
cmp
cltd
into
inc
sub
movb
inc
dec
cmp
arpl
lods
pop
fdiv
xchg
jl
cmp
pop
test
xchg
lods
je
mov
pop
add
js
or
xchg
lahf
inc
outsb
bound
movl
mov
aaa
cld
lahf
imull
cld
fs
jbe
cld
sbb
inc
lcall
bound
imul
mov
cmc
jne
mov
mov
fildl
push
out
cmp
mov
cmpsb
lea
mov
push
or
sbbl
lahf
add
mov
mov
and
ds
and
sub
adc
repnz
jae
pop
incl
insl
mov
mov
fmul
insb
push
or
movsl
loope
mov
mov
jns
mov
movsl
xchg
jge
hlt
cmp
pop
pop
fsubr
enter
jo
mov
cmp
mov
out
mov
fiadds
xchg
test
in
adc
jle
in
jmp
mov
xor
mov
pop
or
mov
inc
movsl
mov
imul
rep
pop
and
adc
imul
cs
lods
dec
nop
test
jnp
sahf
pop
push
dec
daa
or
dec
mov
cmpsb
ja
or
mov
push
pusha
shlb
mov
mov
jbe
push
mov
data16
xchg
ficoms
dec
mov
scas
mov
insl
testb
mov
sbb
ret
mov
pop
mov
push
cs
xor
jbe
and
mov
movsb
mov
loopne
sub
pusha
icebp
dec
add
and
les
mov
inc
fmulp
inc
or
mov
je
pop
imul
std
xchg
adc
cmp
jg
int3
push
mov
mov
aas
and
xlat
mov
pop
lahf
out
mov
nop
jmp
xchg
or
shll
in
mov
jmp
inc
and
mov
mov
out
push
or
aad
or
pop
mov
sti
stos
fistpll
add
lret
pop
jmp
xor
and
lcall
cmp
call
sub
mov
pop
leave
jp
cli
inc
xchg
das
nop
sbb
sbb
sbb
sbb
or
dec
pop
inc
adc
mov
scas
push
icebp
insl
or
repnz
sbb
std
cs
movsl
repnz
push
sub
mov
call
sbb
xor
xchg
xor
mov
out
jle
mov
jbe
mov
cmc
mov
lea
jno
test
jmp
mov
cmp
adc
into
mov
cli
fcoms
aaa
hlt
mov
test
test
and
push
cmpsb
mov
jmp
mov
jbe
xchg
pusha
mov
xchg
scas
aaa
pushf
in
xchg
mov
adc
hlt
sub
xchg
icebp
test
cmpsb
cmp
jne
pop
jmp
not
xchg
push
push
or
out
xchg
xor
clc
aad
jge
cmpsb
cmp
hlt
sahf
jo
jns
or
ss
dec
sbb
and
arpl
adc
iret
push
cmp
jnp
mov
jge
cmpsl
pushf
jmp
cli
mov
movsl
test
mov
aaa
lea
cli
push
jne
es
je
imul
push
orb
mov
jp
mov
add
mov
dec
in
js
xchg
push
call
adc
test
imul
out
cmpsb
mov
mull
push
or
jbe
cmp
push
and
or
pop
std
sub
fsubrs
into
in
aas
cmp
xchg
mov
lret
xchg
lock
mov
jbe
loop
inc
stos
je
cs
add
xchg
sbb
es
dec
xchg
pop
fsts
ds
arpl
sub
pop
les
pushf
ret
idivb
sar
jge
adc
stos
shl
addl
leave
pusha
aad
hlt
das
jnp
cmc
test
in
shll
sbb
mov
xor
push
add
push
and
cwtl
into
jbe
adc
cmc
or
shlb
lcall
incl
add
scas
out
xchg
insl
push
popa
shlb
sub
adc
jg
lahf
into
incl
push
jnp
jmp
cwtl
xor
sub
xor
das
in
std
mov
sub
jg
xchg
mov
pop
mov
mov
cmp
xchg
cld
cltd
imul
push
leave
dec
mov
mov
pop
xlat
mov
sbb
xchg
mov
in
mov
mov
mov
movsl
out
add
cltd
jbe
lahf
add
enter
cmp
popf
xchg
xor
add
mov
mov
sti
pop
daa
and
lods
push
out
jmp
shlb
aam
lock
mov
cmp
mov
dec
iret
les
js
loopne
xlat
sbb
xchg
xor
mov
sub
mov
nop
push
fstpt
mov
pop
xor
dec
test
cmp
dec
mov
test
jb
arpl
fdivr
mov
cmpsl
mov
sub
lods
jns
xchg
vprotw
push
adc
pop
mov
ret
xor
jns
mov
pushf
fldenv
mov
jmp
mov
adc
std
loope
xchg
aad
push
and
mov
icebp
mov
das
jle
sub
idivb
fsubl
cmpb
adc
cli
mov
and
mov
pop
call
sti
add
cmc
cmp
fcmovnb
bound
sbb
add
movsl
loop
sub
cmp
xchg
mov
cli
push
call
mov
adc
es
mov
jns
out
mov
jl
cmpsl
mov
lds
cmp
sub
jecxz
inc
push
popa
sarl
divb
hlt
push
cmp
push
aad
andb
mov
xchg
push
aam
scas
test
fildl
mov
imul
hlt
cmp
sub
xchg
rcl
out
ja
adc
mov
mov
mov
cmp
out
ror
mov
mov
pop
testb
mov
jecxz
add
repnz
rcll
sub
adc
sub
cmp
and
cwtl
out
cmc
sbb
test
pop
out
pushf
pop
push
xchg
stc
add
jb
daa
ja
mov
stc
mov
sub
pop
push
pop
cmp
pop
and
jl
cli
repz
adc
and
cmc
add
mov
jnp
enter
loope
cmp
repnz
mov
add
cmpsb
pop
mov
insl
sub
sub
sti
xchg
scas
cmp
insl
pop
push
or
pop
or
push
mov
cmc
sub
push
sub
imul
leave
aad
xor
imul
ss
mov
or
shll
fcmovbe
sarb
call
mov
xor
loopne
jge
jmp
pusha
sbb
rorb
cwtl
push
and
stos
shlb
je
fidivl
lods
jo
push
out
and
outsl
ds
mov
stos
stc
sub
xor
jmp
aam
adc
jnp
mov
mov
push
shr
push
pushl
in
in
push
insl
das
test
out
mov
mov
insb
cmp
and
scas
jle
xor
sub
shr
int
out
loop
dec
stos
hlt
cmp
incl
ds
pop
sub
pop
mov
pop
jae
cmpsl
scas
rcr
sub
mov
inc
rclb
mov
aas
scas
pop
mov
cltd
stos
hlt
stos
push
inc
rolb
add
and
adc
in
sub
sbb
xchg
in
mov
lcall
pop
inc
mov
aam
fs
sti
call
bound
lret
testl
cld
or
jmp
fmul
int3
mov
xchg
mov
data16
and
fnstcw
jmp
xchg
cltd
adc
xlat
test
ret
mov
cmovnp
clc
jmp
sbb
int3
mov
loope
cmp
jb
sarl
mov
mov
out
aaa
push
or
sbb
loope
paddsb
mov
movsl
clc
sbb
shl
loop
mov
mov
pop
aas
push
and
in
mov
lret
int
fcoml
sbb
cmp
test
xchg
jp
fisubrl
ja
fwait
loop
push
mov
jnp
push
shlb
pop
pushw
ret
mov
cmpsb
push
int
outsb
add
sub
data16
rol
shll
dec
jge
int3
sbb
out
cmp
and
rcrb
sub
leave
std
js
movsb
pop
mull
outsb
mov
xchg
add
jae
cmpsb
roll
test
push
pop
or
and
rorb
js
scas
sub
inc
adc
hlt
dec
in
adc
stos
jne
mov
stc
jp
jmp
mov
dec
lods
mov
and
test
mov
mov
cltd
fisttps
iret
rcr
adc
in
cwtl
mov
cmp
sub
sub
movsl
xor
push
sbb
mov
adc
int3
dec
mov
dec
loope
push
and
push
scas
stos
sub
inc
out
jmp
pop
sbb
jae
dec
test
dec
cmpsl
cmc
test
sbb
bnd
mov
and
mov
iret
aam
jmp
negb
ljmp
out
movsl
rsm
xchg
xor
fsubrl
pop
stc
in
sbb
mov
popa
lods
mov
adc
and
out
sbb
inc
mov
daa
std
push
aam
xor
inc
test
mov
js
jp
mov
pop
pop
cltd
xchg
pusha
rclb
cmc
mov
and
xchg
inc
mov
out
arpl
addr16
mov
inc
jg
or
decl
mov
aad
mov
sub
lea
push
and
cmp
cmpsb
push
inc
adc
or
pop
lods
jle
adc
clc
mov
hlt
in
std
cmp
mov
stc
sti
mov
push
mov
popa
js
out
loop
fadd
adc
mov
imul
pop
cwtl
ljmp
cmpl
fisubrs
xchg
movsl
xchg
and
xchg
fs
jb
push
es
xor
xchg
movsb
adcl
mov
jp
ljmp
inc
xchg
dec
aas
ror
dec
cmpsl
adcl
xchg
sbb
sub
jge
jb
ret
adc
mov
sbb
dec
ja
fcmovb
xor
cld
mov
push
repnz
call
mov
stos
xor
ret
dec
sub
xor
enterw
je
js
xchg
mov
ret
pop
stc
aas
mov
mov
push
loop
jge
sbb
pushf
inc
fcomps
mov
cmp
mov
xchg
jg
out
pop
mov
in
fucomp
icebp
test
xor
lods
imul
pushf
pop
fnstsw
mov
mov
mov
xchg
push
imul
dec
jge
mov
or
loopne
sub
insb
sbbl
mov
nop
sbb
out
sub
jecxz
adc
mov
push
fidivrl
pop
mov
mov
fidivl
cs
call
in
adc
inc
movsl
fdivs
mov
inc
push
repnz
push
fsubs
cs
test
dec
aam
jns
jb
jle
inc
hlt
xor
fsubrl
imul
pop
call
in
out
fs
mov
pop
push
in
dec
inc
sti
out
push
jl
and
mov
cwtl
mov
test
test
cmpsl
xchg
inc
mov
inc
imul
lods
cwtl
cmp
imul
sbb
cmp
fistpll
enter
dec
ja
and
inc
lahf
jb
sbbl
or
andb
fs
lods
loope
pop
sub
les
scas
cmp
sbb
sbb
xchg
aam
scas
stos
add
mov
dec
cld
inc
cmpsb
mov
sbb
stos
ret
jns
imul
adc
lds
pop
ljmp
cmp
imul
mov
mov
add
xorb
das
outsl
movsl
pop
jmp
fstpt
add
jg
add
pop
dec
into
xor
jbe
andl
int
inc
ljmp
pop
out
xor
rcl
dec
mov
shlb
or
test
inc
aam
jbe
lods
popa
clc
xor
pop
clc
inc
pop
cmpsl
push
add
mov
xchg
xchg
movsl
xchg
jle
mov
cmpb
cmp
adc
pop
cmc
mov
subl
cmpsb
sbb
clc
add
cld
adcb
enter
push
sub
inc
push
and
dec
shlb
sub
xrelease
mov
mov
or
mov
add
imul
in
clc
mov
leave
jo
pop
xor
xchg
xchg
sub
cltd
movsl
jl
mov
add
jmp
xor
mov
incb
mov
cmpsb
inc
into
lods
and
ret
mov
sarb
xchg
push
std
out
jnp
rorb
in
mov
lret
xor
adc
xchg
mov
inc
sbb
or
add
in
andb
sub
jl
add
cmpsl
mov
mov
lods
mov
pop
mov
xchg
push
in
pusha
je
mov
cmpsb
into
bound
mov
fnstsw
in
shl
out
cs
adc
int
hlt
jbe
fwait
jae
mov
fbstp
inc
imul
cmp
xchg
stos
popf
outsb
aaa
jle
sbb
dec
mov
mov
stc
xor
dec
push
mov
sbb
jo
std
or
and
fcmovu
sub
sub
mov
add
lret
jmp
lea
mov
xlat
cmp
test
mov
into
push
test
push
test
xor
pushf
pusha
mov
sbb
popf
lcall
mov
pop
pop
in
jbe
iret
test
enter
mov
mov
mov
aad
data16
dec
lea
adc
data16
gs
fwait
push
into
jb
push
aas
or
jp
out
nop
sahf
cmpsb
test
fwait
pop
add
popf
xchg
cld
fiadds
inc
shll
enter
sti
add
cwtl
inc
adc
xchg
lea
add
outsb
stos
sub
ss
mov
jo
sub
enter
adc
iret
sbb
and
jbe
sub
pop
cmpsl
cmp
or
inc
sbb
jecxz
mov
movsl
mov
movsl
or
push
jmp
lahf
daa
push
sbb
mov
mov
sbb
push
mov
bound
push
seto
mov
sub
arpl
iret
in
cpuid
lods
mov
push
cmp
ss
sub
jp
pop
adc
rcr
cmp
cmpb
lods
cwtl
cli
sub
fcmovu
jns
jg
sub
rorl
dec
inc
lcall
ljmp
mov
popa
mov
inc
fisubrl
xor
mov
rcrl
mov
add
call
adc
ret
imul
fbld
push
iret
sub
rclb
out
mov
xchg
dec
lea
push
fiaddl
or
mov
jmp
mov
addr16
aam
loopne
repz
es
lock
popf
sbb
add
cwtl
imul
push
jecxz
xorb
jnp
testl
jae
popa
push
mov
xor
push
xchg
mov
cmpsl
or
mov
popf
sub
test
ret
das
push
xchg
sbb
mov
sbb
stos
mov
sub
cltd
add
mov
outsb
lock
clc
and
out
dec
sti
flds
dec
sbb
out
dec
arpl
std
outsl
pop
inc
bound
jno
mov
or
xor
iret
imul
or
cmp
and
repnz
pushf
and
ja
and
jp
insb
loope
jle
pop
out
and
shl
popf
out
xor
mov
enter
loop
dec
push
stc
nop
adc
and
adc
inc
js
jp
pop
icebp
xchg
in
sub
xor
outsl
loopne
xor
in
aam
cs
mov
xchg
add
pop
dec
ljmp
inc
mov
push
fidivs
mov
gs
ret
jp
in
popf
dec
or
sti
mov
add
mov
loop
dec
ljmp
lea
test
outsl
xor
leave
mov
test
leave
inc
and
mov
mov
int3
xchg
pop
adc
xchg
ficompl
fcoml
jo
cld
sbbl
lds
cmp
xchg
dec
xlat
mov
sbb
and
mov
mov
xchg
dec
divl
popa
or
mov
cmp
sbb
lahf
inc
fiaddl
test
mov
andb
push
lods
pushf
and
ljmp
ljmp
outsl
inc
out
push
add
add
call
xchg
inc
je
fcoms
int
fsubs
stos
notl
shlb
in
cltd
test
leave
push
repnz
dec
out
jecxz
xor
pop
xchg
aam
xchg
inc
jbe
add
pop
sub
popa
out
adc
mov
push
je
jg
push
lock
pop
inc
jns
inc
lret
pushf
in
mov
hlt
dec
lock
insl
xor
sub
cmpsb
jae
push
inc
push
into
loope
adcb
or
pop
push
jbe
cmpsb
fsts
xchg
xlat
and
pop
shr
xlat
push
shll
js
mov
mov
arpl
cli
add
lcall
inc
push
xchg
add
cwtl
jp
call
cmp
push
sbb
cmp
pop
cmp
jnp
pop
adc
mov
test
add
nop
sub
sbb
cmp
movsl
fnstsw
jns
stos
dec
sahf
jnp
in
cmpsb
sbb
cmpsl
cmp
xchg
es
bound
pop
shrl
ds
xchg
xor
leave
pop
add
mov
pop
addb
rcrl
cmc
mov
push
loopne
jle
mov
dec
or
xlat
mov
test
mov
int
ror
pop
arpl
lock
adc
mov
sub
inc
sbb
sbb
outsl
ds
aam
lock
test
inc
psubusb
mov
repnz
int
sbbl
jmp
dec
xchg
adc
mov
add
cwtl
sahf
movsb
sub
or
xchg
out
sbb
int
shlb
test
dec
xchg
sbbl
and
sbb
mov
bound
rcr
mov
sub
and
and
cmc
dec
dec
nop
movsb
aaa
or
mov
or
aad
cli
adc
dec
loope
and
outsb
stos
setp
ja
and
jg
add
out
bound
mov
jo
fisubs
and
aad
pop
cmp
bound
mov
imull
push
fs
cwtl
cmpsl
ds
das
rolb
add
or
scas
ret
pop
xor
aad
pop
cli
stos
mov
test
popa
mov
pop
jmp
int
decb
dec
mov
pusha
insl
xchg
mov
ljmp
popf
mov
inc
sub
jg
mov
pop
xor
pop
jne
pusha
jmp
inc
dec
pusha
cmpsb
arpl
mov
fsubl
jae
adc
jno
into
sub
or
lods
mov
jae
mov
js
jmp
mov
shlb
stos
mov
aas
pop
and
jl
add
dec
add
shl
sbb
mov
icebp
enter
lods
loopne
lcall
mov
aas
lock
pushf
cmpsl
jnp
jns
and
push
jo
outsb
les
aaa
ret
add
pushf
adc
cltd
mov
mov
ljmp
and
sarl
fcmovb
clc
popf
andb
js
imul
pop
adc
adc
shlb
sbb
mov
adc
push
pusha
inc
pop
scas
fists
xchg
jbe
paddq
insl
rolb
fwait
iret
inc
shl
jecxz
adc
insb
xchg
lret
fchs
adc
notl
push
andl
add
cwtl
add
cmp
xchg
scas
adc
or
push
popa
and
lcall
add
inc
iret
pop
inc
sbb
mov
lock
push
jmp
rorb
rcrb
bound
adc
rcrl
out
mov
pop
hlt
push
shlb
push
in
mov
addr16
add
inc
pushl
adc
mov
out
andl
adc
imul
sbb
push
cmp
jns
dec
sbb
cmp
add
iret
lahf
cmp
jno
sbb
inc
cmp
stos
sub
enter
and
iret
lret
insb
xchg
fstps
jnp,pt
xor
mov
neg
xorl
sbb
adc
test
dec
scas
add
icebp
mov
pop
in
pusha
data16
addr16
test
xorb
cmp
mov
pop
push
and
jmp
or
loopne
cmpsl
xchg
loope
sbb
jnp
out
cmpl
xchg
mov
in
pop
push
or
sub
fstpt
out
xchg
fcomip
fucom
lds
lret
jbe
mov
mov
cmp
or
dec
ljmp
push
shrb
push
push
or
sub
and
cmp
int
ror
fstpl
mov
shrb
mov
inc
mov
mov
push
mov
pop
mov
push
push
mov
push
push
wrmsr
shrb
mov
jge
mov
jle
enter
in
in
cmpsl
xor
hlt
xchg
cltd
addb
adc
and
ds
rol
addr16
cmp
stos
mov
pop
in
clc
lret
cmpsb
scas
mov
xor
imul
loope
pop
pop
bound
aad
and
and
sbb
add
nop
test
inc
sbbb
and
push
cwtl
mov
lock
addr16
in
add
imul
enter
pop
out
nop
jbe
push
mov
stos
adc
mov
enter
push
incb
and
inc
shr
orb
je
leave
add
xchg
push
in
push
repz
inc
lods
cmp
push
xor
sub
fsubs
and
stos
out
and
out
decb
xchg
dec
or
sub
and
aad
fildll
icebp
icebp
xor
push
in
iret
cmpsl
sub
adc
xchg
sub
xchg
mov
xor
rorl
dec
test
cmp
leave
xor
shrb
xchg
fwait
and
in
dec
mov
sbb
sub
jecxz
popa
xchg
out
or
jmp
and
sbb
add
loope
inc
push
and
mov
dec
push
in
adc
cmc
out
insl
xchg
pop
or
stc
mov
stc
xchg
shl
add
pusha
and
xorps
repnz
cmpsl
jnp
push
mov
xchg
and
lcall
xor
sub
dec
pop
imul
outsb
mov
push
cmp
enter
out
adc
pop
ja
rcl
cmc
fsubr
lods
or
pushf
rorb
fistpll
insb
xlat
jo
sbb
xor
or
sahf
xchg
loope
data16
push
ret
xchg
mov
sub
xchg
xchg
sar
out
insl
jg
in
cmp
js
dec
cmp
mov
lret
mov
push
pop
ljmp
mov
bound
xchg
xchg
adc
jmp
push
or
sti
jle
movsb
lods
int3
lcall
negb
dec
pop
and
jmp
call
and
mov
jle
fwait
mov
xchg
jl
and
out
clc
jae
sbb
outsl
test
mov
push
jmp
mov
mov
test
sub
movsb
andb
es
xchg
add
xor
sbbb
cmp
loopne
iret
push
xor
xchg
out
adc
mov
cmp
mov
mov
or
jb
push
dec
fistl
or
pop
mov
mov
daa
lret
push
dec
mov
mov
sbb
mov
xchg
loope
jecxz
mov
fimull
sub
adc
data16
out
ljmp
fbstp
add
daa
mov
fnstenv
mov
jbe
dec
sbb
lahf
std
fwait
fwait
push
sti
jge
fsubrl
cmp
push
pusha
sbb
adc
ret
mov
testl
gs
xor
outsb
jl
cmpsb
mov
leave
sub
call
lcall
popa
adc
inc
and
add
or
ds
and
leave
hlt
sub
xchg
pushf
lcall
xor
push
cltd
pop
xchg
mov
out
scas
mov
or
data16
mov
cltd
ret
dec
or
test
cmp
jno
test
pop
cmpsl
stc
cmp
xor
add
inc
insl
sbb
lods
enter
lret
imul
jecxz
cmp
mov
xchg
mov
call
addr16
mov
lods
test
lret
adc
sub
das
pushf
sarb
pop
inc
mov
xchg
mov
add
dec
test
aaa
push
mov
out
add
and
mov
sbb
divb
mov
push
push
cltd
pop
push
pop
cmc
dec
mov
test
movsl
pop
cltd
in
cmpsb
push
inc
dec
lcall
mov
out
out
imul
jnp
mov
shr
leave
inc
insb
mov
xor
push
adc
mov
pop
pop
jp
popa
rcrb
xlat
stos
mulb
push
xchg
push
cs
mov
dec
bound
insb
loopne
adc
notb
adc
jns
xchg
mov
mov
sub
add
stos
or
sub
mov
push
adc
iret
xor
xor
add
jmp
pushf
popf
cmp
icebp
sub
stos
xchg
xor
xor
cld
addr16
mov
cmp
shlb
cld
loop
dec
sub
in
xor
fbstp
es
or
mov
int3
adc
mov
in
movsb
xorb
icebp
addr16
and
xchg
pushf
adc
adc
sbb
fldl
test
lahf
mov
xchg
cltd
mov
test
dec
lds
sub
fcomi
dec
cwtl
scas
mov
sbb
fcmove
subl
adc
sahf
fnstcw
cwtl
out
data16
test
xchg
hlt
inc
or
dec
je
shrl
xlat
mov
push
leave
test
pop
out
fisttps
mov
into
dec
sbb
std
lahf
fwait
xchg
xor
jbe
ljmp
mov
adc
std
and
mov
cltd
jmp
push
add
cmp
xchg
cmpsb
js
lret
add
inc
test
rcrl
icebp
bound
add
xor
cmp
push
sbb
sub
mov
dec
pop
pushf
ds
and
jbe
arpl
enter
cmpl
and
cmp
fwait
push
sahf
loope
sti
cmp
mov
push
push
cmp
dec
mov
imul
mov
sub
jb
xchg
into
clc
stos
sbb
push
mov
subb
add
xchg
inc
out
out
aad
je
mov
mov
repnz
add
sub
shrl
push
mov
or
rcll
cmp
in
lcall
xor
and
mov
xorl
scas
int3
sub
xchg
xor
xor
cmp
cltd
push
int3
cwtl
lret
jp
fldenv
fsub
jg
adc
stos
daa
or
jle
fcomps
outsb
ds
xor
pusha
lods
shlb
cmp
mov
out
mov
mov
dec
xchg
mov
fimull
inc
sahf
popa
movsl
cmp
adcl
or
push
outsb
adc
cmp
les
push
cld
lahf
out
xor
push
mov
out
addl
inc
mov
lds
test
jns
add
outsl
and
nop
mov
test
int
add
imul
jl
adc
in
fisttps
adc
movsb
mov
push
in
jl
fstpl
ret
xor
push
aam
xor
mov
add
jns
xor
mov
int
js
cmpl
das
test
mov
mov
orl
dec
jle
pop
jecxz
sahf
movl
paddusb
push
xchg
push
mov
jb
lea
mov
mov
sbb
fs
xchg
out
popa
mov
sbb
push
and
hlt
rorl
ds
push
pushf
jg
mov
outsb
pushl
movsl
pop
mov
mov
lods
or
or
js
xlat
sbb
lret
jmp
sub
arpl
mov
sarb
lock
push
test
xchg
sti
nop
mov
mov
xchg
imulb
xchg
push
das
test
out
sarb
ja
xchg
lock
or
jle
pop
mov
arpl
imul
lcall
or
das
popf
cmp
mov
mov
sub
jp
out
ljmp
fwait
dec
and
movsb
aas
cmpl
sbb
push
cmpl
jecxz
push
cmp
mov
inc
push
mov
inc
sar
mov
xchg
fwait
loop
adc
pop
jnp
scas
xor
push
movsb
fmul
imul
mov
and
cmp
les
imul
lcall
jl
orl
mov
push
adc
jge
jnp
cmc
clc
fildll
push
add
adc
inc
pop
test
fnstsw
data16
clc
outsb
mov
mul
xor
int
ret
sub
movsb
stos
pop
fcoms
mov
xor
xchg
test
push
inc
jge
ret
push
lods
push
pop
nop
mov
das
add
mov
in
sub
xchg
jge
loope
insl
xchg
and
and
test
scas
ficoms
sub
sar
adcl
mov
imul
jge
sahf
mov
sub
movsb
sbb
or
fadd
stos
jp
in
push
or
inc
sbb
and
lret
orb
jge
xor
jge
jnp
or
les
hlt
pop
sbb
cld
mov
mov
rcll
cmp
pop
push
std
aas
in
dec
cmp
adc
rol
sbb
mov
fsubrp
sub
lcall
jge
scas
or
cmp
scas
mov
cmpsb
jnp
subl
js
rol
push
leave
mov
ljmp
mov
mov
jb
cltd
cmp
jg
mov
sahf
sub
aad
sbb
fnstenv
jg
jge
fdivs
xor
aad
out
fdivrl
mov
scas
xlat
inc
mov
jns
sbb
push
mov
jge
lahf
xchg
sbb
fdivs
cmp
test
repnz
dec
fisubrs
lahf
mov
sub
insb
shr
fbld
cmp
movsb
int3
add
aaa
inc
xlat
and
jg
xor
test
xor
sub
mov
and
fwait
and
cwtl
cmpsl
aaa
sbb
inc
in
fistl
fwait
cmp
aam
fnstenv
cli
fisttpl
xchg
cmp
sub
and
sub
cmp
inc
ret
adc
mov
in
jge
sahf
in
pop
add
dec
xchg
lock
jl
nop
subb
inc
movsb
and
lea
roll
dec
xor
sti
sbb
pop
cmp
imul
loop
test
into
fisubs
jb
jle
in
mov
fcmove
push
in
inc
push
sub
fs
stos
jne
fiaddl
push
add
jno
scas
mov
mov
mov
andl
shl
sbb
mov
outsb
push
mov
jns
jnp
and
adc
scas
add
jg
inc
cmpsl
lahf
or
je
mov
cmp
lea
push
sar
loop
es
mov
mov
mov
jl
test
sbb
ss
mov
lret
enter
mov
shll
sub
scas
sahf
lahf
rcll
mov
mov
or
mov
mov
lods
push
mov
jnp
faddl
inc
mov
push
xchg
add
adc
or
xchg
push
scas
movsb
in
dec
insb
mov
sub
dec
shl
sub
jg
ror
scas
jl
cmpsl
adc
in
xor
sub
js
push
mov
xchg
jl
int
leave
loopne
mov
rcl
or
mov
mov
sbb
in
imul
orb
test
pop
mov
fsubr
loop
push
loope
pop
int
fistpll
insb
mov
cwtl
mov
outsb
push
inc
std
mov
xor
or
sub
mov
inc
pop
mov
dec
jg
pushf
push
jge
stc
mov
out
aad
call
and
mov
jb
add
push
fiaddl
jle
or
popa
fs
movsl
inc
pop
std
mov
jge
sbb
fildll
lret
sbb
into
lods
pop
pusha
dec
je
adc
and
nop
rcrl
sbbl
cld
lods
dec
dec
xor
and
orl
test
mov
cmpsb
push
add
lods
sahf
mov
xchg
shlb
sahf
adc
mov
and
mov
popa
ret
xor
pop
loop
xchg
push
out
ficompl
pop
enter
inc
nop
push
in
outsb
jge
pop
and
sub
sub
data16
jge
repz
mov
lret
sti
lds
mov
sub
adc
sbb
jnp
popf
pop
arpl
inc
xchg
jge
push
stos
mov
jg
sbb
shl
movsb
sub
xchg
test
ret
idivb
sub
fwait
dec
lret
fcompl
jmp
xor
and
or
add
insl
call
or
dec
inc
stos
aaa
mov
frstor
int3
cli
ljmp
sti
fldl
mov
in
sahf
fdivl
push
bnd
cmp
dec
mov
mov
xor
gs
lods
dec
jg
rol
test
push
call
sbb
xor
pop
movsl
mov
xchg
repnz
ja
pop
mov
or
cmpsb
lcall
rol
ds
push
loop
push
fcmovnb
push
pushf
push
aaa
mov
pusha
imul
cltd
push
shll
test
pop
loope
out
ljmp
mov
sbb
push
sbb
mov
shlb
jo
mov
push
out
cltd
push
sbb
sbb
push
neg
rcr
mov
sub
xor
mov
subb
jne
es
cld
movsb
inc
cmpsl
fidivl
dec
lds
les
lret
pusha
fstps
cmp
je
pop
jecxz
adc
mov
add
lret
and
test
cwtl
or
daa
clc
pop
outsb
jmp
hlt
aas
fcomp
mov
test
test
mov
cmpsb
push
mov
imul
mov
pop
and
fcmovu
xchg
xchg
or
into
call
mov
imul
cmp
mov
mov
xchg
dec
sub
xchg
mov
push
mov
fdivrs
adc
cmpb
jmp
stc
insl
cmp
lret
add
call
inc
mov
jnp
setl
xchg
cwtl
cmc
loop
add
ja
mov
mov
in
and
imul
rorl
and
sub
call
mov
jp
mov
test
push
ss
gs
scas
mov
jnp,pt
aam
and
jae
testb
mov
mov
cmpb
addl
or
cmpsl
addl
mov
sti
adc
lret
wrmsr
cwtl
mov
enter
cwtl
leave
ret
out
aam
nop
mov
jo
int3
dec
js
mov
rolb
xchg
pop
mov
scas
subb
pop
negl
or
popa
subb
xchg
push
dec
imul
xchg
adc
leave
jmp
fcomps
jp
pop
ja
int3
nop
and
daa
int3
xchg
fidivl
xor
out
sbb
mov
loope
mov
lahf
dec
jl
xor
addl
add
dec
fidivrl
add
ret
scas
lcall
aam
mov
mov
addr16
pop
ror
jnp
js
add
dec
mov
cs
std
imul
push
push
ss
daa
pop
aas
jbe
push
mov
mov
adc
fsubs
or
repnz
mov
jg
mov
mov
push
jg
push
pop
adc
sub
add
enter
and
cmp
and
mov
xchg
ljmp
jecxz
adc
loope
ss
out
jge
jo
addb
out
mov
aad
test
dec
inc
jae
or
imull
ljmp
int3
aas
push
arpl
xor
scas
scas
rdpmc
sub
xchg
ret
jbe
fcomps
cmp
sub
pop
mov
xor
lods
notb
cwtl
rcrl
repnz
xor
xor
fsubr
xchg
fcoms
mov
lcall
popf
fwait
int3
inc
pop
xor
mov
adc
imul
test
in
rclb
jecxz
rcr
push
xor
push
mov
pop
pop
jo
enter
leave
fsts
push
fsubl
shrw
xor
aas
out
es
and
lcall
sbb
pop
aas
add
shrl
in
dec
push
popa
sub
and
cs
stos
xor
test
push
dec
lcall
xlat
push
out
push
xchg
mov
sub
mov
cmc
loope
fwait
adc
imul
sbb
inc
test
insl
movsb
movsb
or
test
cmc
push
mov
loope
pop
xchg
int3
adc
mov
or
jmp
and
call
addl
in
inc
mov
popa
rcl
je
stos
xchg
pop
jg
stos
pop
pop
cli
cltd
or
mov
mov
mov
scas
inc
pop
loop
push
daa
orl
lds
repz
cbtw
push
stos
rcrb
int3
mov
idiv
inc
shll
jmp
das
dec
fsub
jbe
ficompl
mov
add
pop
pop
cmpsl
test
negb
and
loopne
jge
sti
and
in
mov
cmp
ljmp
pop
push
mov
int
fcoms
stos
std
or
movsl
js
mov
aas
repz
insb
rcr
fnstsw
aaa
mov
mov
mov
in
pop
gs
int3
repnz
xchg
and
in
dec
das
leave
repz
mov
mov
ljmp
mov
pop
jl
xchg
push
mov
mov
pop
sbb
jmp
fnsave
andb
mov
fistps
adc
and
mov
jne
xorl
cmp
or
adc
imul
pop
jl
shlb
xor
pushf
jmp
inc
int3
bound
sbb
jmp
jae
loopne
ljmp
enter
push
add
xorl
inc
jae
shll
and
mov
das
ret
mov
or
jg
lahf
enter
sarl
bound
lods
decb
or
outsb
scas
xchg
enter
pop
lcall
mov
stc
repnz
pushf
outsl
mov
push
or
push
dec
mov
pop
std
sbb
adc
lcall
lds
fldenv
push
int3
sub
jl
mov
adc
jne
or
nop
mov
sbb
gs
iret
pushf
lret
test
pop
add
pop
shl
xor
imul
push
jmp
int3
sub
dec
jae
pop
sbbb
lahf
pushf
cs
or
data16
nop
push
dec
fdivl
mov
mov
mov
inc
mov
subl
mov
ror
int3
sahf
andl
das
imul
mov
fwait
pop
out
mov
adc
xchg
sbb
add
cmp
sbb
cltd
out
or
mov
sub
mov
mov
fprem1
sbb
jl
cli
cs
mov
mov
mov
jbe
xchg
push
js
mov
push
lock
push
cwtl
sti
pop
push
mov
and
sbb
dec
inc
je
mov
mov
sub
push
sub
push
pop
push
cmpsl
pusha
lds
aaa
sbb
adc
cmpsb
sarl
cmpl
mov
add
or
lods
xchg
test
imul
aas
out
mov
mov
mov
and
jecxz
xchg
out
cmp
sub
jmp
pop
mov
mov
xchg
test
and
push
orb
mov
in
lret
es
mov
data16
xchg
or
mov
dec
pop
sub
aas
or
stos
jne
push
jp
les
mov
int3
ds
pop
mov
inc
fsubrl
sbb
out
adc
jnp
jo
push
xchg
lock
lahf
adc
mov
sbb
mov
jo
imul
add
adc
clc
inc
in
mov
mov
inc
sahf
add
xchg
pop
jg
mov
repz
mov
out
cmc
enter
aam
mov
mov
imul
add
rorl
aas
sub
sbb
in
nop
ja
loopne
cmpsl
mov
decb
xchg
xchg
xchg
mov
cmp
mov
subb
xchg
pop
jle
popf
sahf
nop
movsl
xchg
add
lcall
mov
repz
sahf
shr
lock
outsb
sub
xlat
or
and
cwtl
insb
and
stc
dec
int3
pop
into
dec
lret
imul
sti
cli
mov
adc
xor
jecxz
mov
mov
add
idiv
xchg
inc
movsb
add
pop
fucomp
mov
xchg
mov
and
fildll
insb
imul
imul
and
sub
ds
test
scas
mov
lea
mov
jmp
push
mov
mov
ficompl
sub
decb
lret
dec
out
lret
dec
xchg
sub
cli
cwtl
adc
test
in
pop
lods
mulb
pushf
mov
mov
push
mov
call
test
shrb
imul
imul
ret
cmp
out
stc
pop
cli
mov
cmp
pop
adc
and
sarb
test
std
adc
jbe
insb
inc
or
lods
ss
inc
sub
jb
xchg
mul
dec
divb
scas
data16
fdivl
adc
jle
enter
push
mov
sbb
cmp
sub
mov
adc
pushf
push
and
in
sbb
cmpsb
cmp
pop
pop
shll
fcmovb
xchg
push
push
ja
push
lahf
rolb
xchg
stos
inc
lcall
cmpsl
sahf
aam
inc
xchg
jo
mov
cld
jl
mov
mov
xchg
jb
dec
mov
test
push
inc
push
in
jecxz
jp
sbb
lahf
adcl
sub
cmp
sub
cmp
cmp
cmp
test
in
jbe
scas
jl
ret
movsb
lret
jmp
stos
mov
int
mov
sbb
pop
mov
push
outsb
cld
jmp
adc
add
pop
mov
loope
int
orl
bound
sbb
int3
adc
push
stc
in
pop
xor
outsl
or
jge
pushf
lahf
scas
fwait
in
scas
xchg
std
jmp
aas
and
and
jmp
out
mov
jns
es
lock
rcll
popa
sub
mov
jp
loop
mov
hlt
movaps
xchg
pop
mov
pop
es
push
loope
dec
and
insl
cmp
dec
dec
cwtl
cwtl
leave
add
loopne,pt
negb
pop
mov
add
cmpsb
pusha
fnstcw
add
clc
add
hlt
scas
pop
pop
stc
mov
lahf
inc
adc
mov
loope
cld
add
incl
cmc
in
xchg
mov
mov
or
stc
mov
push
or
fisttps
roll
pushf
xchg
jp
and
cmpsb
pop
pop
lds
in
dec
mov
dec
repnz
add
mov
jp
movsb
pushf
das
mov
inc
int3
add
sbb
insb
inc
xor
mov
jns
ljmp
inc
leave
shll
aaa
movsl
sbbl
inc
xchg
popf
aam
sti
popf
inc
rcll
push
jecxz
mov
adc
push
xchg
jmp
inc
js
sbb
lock
int3
jle
cmp
add
adc
lock
repz
dec
decb
or
testb
clc
push
or
test
fnstenv
pushf
js
in
jp
xchg
fcompl
adc
out
lcall
daa
lahf
sub
movsl
adc
in
push
scas
cvtps2pd
xchg
jno
mov
stc
jge
sub
in
jp
or
test
mov
imul
in
jl
cmp
imul
pop
loopne
fcomi
pop
arpl
jl
imul
fldenv
lahf
hlt
sbb
out
stos
mov
xchg
and
pop
mov
xchg
pop
add
mov
pop
data16
sbb
pop
sahf
add
ss
out
and
xchg
leave
xchg
std
xor
xor
and
arpl
rcrl
and
or
mov
and
popf
mov
mov
or
cli
xchg
movsl
push
pop
in
xchg
sti
subb
test
sahf
xchg
jns
andl
int3
or
lret
cltd
es
fdivr
dec
hlt
inc
xchg
push
sbb
popa
orb
mov
std
add
rcll
repz
or
fsubs
addb
aas
outsl
dec
push
js
sub
mov
jae
mov
out
in
nop
and
jg
leave
add
push
scas
lcall
add
mov
outsb
fdivrp
movsb
mov
mov
popa
movsl
cmovns
pop
add
jne
repz
mov
inc
sub
push
sti
nop
sbb
in
sub
cmpsl
movsb
mov
and
jmp
daa
xchg
test
jp
xchg
insl
mov
or
push
cwtl
mov
icebp
ss
mov
push
xor
mov
test
jge
in
xchg
dec
add
adc
pusha
rcr
incb
push
in
mov
sbb
ret
jmp
test
add
add
lret
mov
xchg
sub
ret
xchg
xchg
sahf
mov
pop
enter
xchg
in
pop
sbb
xchg
in
dec
clc
out
ja
outsb
cmp
xor
pop
or
and
pop
lcall
xchg
sbb
push
mov
push
and
xor
fisubl
xchg
sub
js
cmc
add
lds
orl
pop
dec
pop
in
mov
idivl
repnz
shrl
jns
push
sub
mov
lea
dec
mov
orb
xchg
rcrl
mov
clc
notb
mov
or
mov
xor
icebp
and
imull
lea
adc
in
shll
dec
cli
jmp
repnz
enter
in
fisttpll
dec
sub
jne
std
dec
or
pop
clc
orb
fistps
pavgw
fstps
cmp
popa
xlat
lds
push
xor
pop
imul
xor
add
repnz
xlat
pop
sbb
xchg
sbb
xlat
test
aas
popf
fisubs
or
mov
add
xchg
xchg
into
push
stos
hlt
jbe
out
movsl
or
cmp
mov
into
dec
icebp
pop
psubw
cwtl
test
push
les
vmovntdq
out
fldl
lret
lods
mov
js
adc
sub
push
xchg
ds
sbb
pop
je
cmp
xchg
xchg
xor
mov
sbb
pop
imull
sarl
das
cmp
inc
sub
into
pop
mov
scas
test
insl
xchg
mov
dec
icebp
mov
inc
loope
xchg
out
sahf
push
mov
sbb
add
mov
push
jp
or
imul
or
stc
sbb
rclb
ficompl
mov
xchg
aad
mov
mov
inc
icebp
mov
sbb
xchg
leave
mov
enter
cltd
xchg
ror
push
xor
lret
addl
xchg
setge
shrb
add
testl
fdivr
xor
mov
jo
dec
xchg
dec
mov
mov
sub
and
scas
test
xor
ja
sub
out
jae
add
xchg
cmp
fldl
jns
hlt
sbb
add
cmp
add
push
fisttpll
js
mov
aad
sbb
dec
and
fcomip
setb
add
lahf
sahf
cmpsb
inc
ja
gs
mov
sahf
mov
xchg
mov
pop
inc
lret
pop
lea
dec
xor
or
xchg
ds
mov
int
js
fwait
movsb
cmp
push
lea
pop
cmpsl
push
ret
cmpsb
movsb
xchg
mov
cld
mov
rorl
dec
pop
mov
mov
shrb
or
or
pop
push
mov
add
mov
push
popa
cmp
addr16
push
push
nop
sahf
xchg
pop
push
sbb
std
adc
mov
pop
pop
int
mov
popa
inc
out
sub
in
adc
pop
jmp
add
add
dec
test
dec
lds
scas
mov
inc
sahf
mov
pop
rcll
outsb
mov
mov
fs
das
stos
in
push
cli
test
mov
cmp
inc
dec
leave
xor
sub
dec
aam
je
mov
pop
fwait
xor
mov
sbbl
jp
mov
mov
movsl
loopne
leave
mov
in
imul
xor
repz
cltd
add
xchg
pushf
sbb
mov
or
push
mov
or
dec
lds
ds
jge
je
fxch
push
lcall
push
movsl
mov
fldenv
mov
xor
fildl
xorb
aam
adc
stos
sbb
mov
imul
jb
or
mov
call
pop
lcall
xchg
insl
push
repz
mov
and
movsl
mov
add
cmp
shl
cltd
xchg
jnp
mov
sti
jmp
scas
push
adc
test
movsb
scas
push
xchg
jo
cmp
shll
cld
mov
es
adcl
lods
sub
mov
jmp
lret
xchg
cmpsl
stc
push
push
xor
mov
inc
faddl
loope
cmpsl
sbbl
mov
sub
jbe
push
mov
pop
stc
pusha
shll
xor
or
xchg
mov
push
pop
popf
fimuls
xchg
test
or
jb
loope
mov
and
ss
pop
fsubrl
adc
mov
inc
mov
mov
stos
mov
cld
xchg
std
adc
add
or
mov
inc
mov
stos
aaa
mov
popa
divl
daa
dec
xchg
movsl
dec
mov
pop
xor
test
cwtl
jnp
pop
shlb
lods
mov
inc
jo
addb
add
add
cwtl
repz
xchg
fxch
insb
dec
je
cmp
js
adc
or
sbb
loop
mov
int3
cmp
add
pop
push
cmc
lods
lcall
fnstenv
xchg
pushf
pop
loopne
jecxz
or
cmp
clc
nop
lock
pop
jae
ret
add
stos
loopne
jge
mov
push
sbb
data16
jg
stos
stos
out
inc
repnz
pop
xchg
add
inc
test
outsl
or
push
insl
icebp
lret
push
xchg
movsb
cmc
dec
aam
cltd
pop
mov
mov
sub
test
pop
inc
add
cmc
outsb
pop
push
mov
inc
outsl
add
jae
nop
repnz
rcll
xor
cwtl
aam
std
sub
jle
push
out
xchg
mov
mov
xchg
sub
cltd
add
imul
test
ja
lods
xchg
mov
mov
cltd
lcall
clc
daa
mov
adc
xchg
arpl
rclb
sti
mov
mov
call
mov
inc
mov
mov
pop
call
adc
daa
and
mov
shll
dec
add
cmp
push
or
test
mov
in
je
adc
add
stos
mov
bound
mov
in
mov
int3
mov
add
mov
cs
mov
mov
ss
movsl
out
add
cmc
jno
lock
dec
enter
out
xor
bound
jecxz
ss
adc
mov
lea
test
addr16
leave
clc
xor
inc
push
mov
out
test
jle
xchg
mov
popf
mov
cmp
xchg
call
xchg
leave
pop
xorb
mov
arpl
mov
fisubrl
rclb
data16
cmpsl
jae
jbe
outsl
out
push
xchg
xor
shll
add
daa
mov
ja
push
sbb
mov
pop
scas
or
inc
or
and
mov
and
sti
out
jp
inc
cmp
pop
jns
lds
xchg
pop
xchg
xchg
mov
push
call
fbstp
or
nop
clc
pusha
sub
push
ljmp
mov
mov
jp
fs
test
jmp
leave
sar
imul
pop
iret
jp
into
clc
mov
pop
insl
stc
aad
cli
pushf
pop
ds
enter
or
fmull
ret
add
sub
jg
xchg
push
aam
dec
test
sbb
lods
nop
mov
hlt
mov
mov
shl
push
jns
nop
add
repz
mov
std
mov
mov
repnz
cmc
cltd
mov
dec
pop
out
add
add
push
cwtl
xor
stc
pushf
pop
push
call
sub
xchg
leave
xlat
and
add
enter
arpl
sbb
loope
xor
test
push
fmuls
sub
mov
inc
sbb
repz
fldcw
push
mov
dec
pop
xchg
imul
sti
jl
jb
dec
xlat
std
pop
adc
insl
fisttpll
cmp
adc
pop
insl
dec
push
xchg
sbb
push
push
fstpl
add
push
cmpsl
pop
lret
out
out
in
add
int3
dec
xchg
pop
in
adc
addl
cmp
dec
jge
pop
mov
xor
and
mov
movsl
push
das
lahf
xor
cs
ret
fistl
aad
sbb
dec
fldl
sbbl
arpl
pop
mov
inc
xchg
sbb
cmpsl
lods
hlt
and
xchg
add
mov
add
out
popa
inc
mov
imul
inc
sbb
mov
inc
int3
mov
stos
and
addr16
imul
andb
cmp
xchg
lods
sbb
ss
stos
push
cmpsb
mov
std
fisttpll
fstps
push
inc
pop
in
imulb
xchg
pop
enter
xchg
fs
nop
sti
gs
int
fidivs
sub
mov
cli
in
fnstcw
sub
pusha
xor
mov
pop
out
mov
cmc
pop
cmp
in
fsubs
jp
inc
sub
les
push
push
sub
pop
push
pop
jmp
sbb
cmp
divl
adc
sbb
out
dec
inc
idivb
or
shlb
sbb
mov
cmpsb
pop
pusha
inc
mov
in
add
into
test
add
enter
loop
mov
test
andb
jnp
and
xlat
lcall
pop
mov
inc
sti
lods
mov
das
fadds
sti
inc
mov
sub
mulb
or
stos
mov
cmp
mov
mov
jo
mov
test
xchg
repz
add
in
dec
mov
push
jecxz
dec
negb
inc
cmp
and
lea
sbb
mov
andl
xchg
push
daa
push
fiadds
ror
cmp
sbb
repnz
jnp
inc
mov
je
into
adc
fisttps
mov
mov
loope
pop
mov
jae
aam
push
jg
push
das
fists
daa
xor
mov
ds
cmp
xchg
or
pop
shll
cmp
pop
cmp
stos
dec
xchg
mov
jg
fldcw
add
sti
pop
filds
push
lea
push
inc
inc
or
add
call
mov
jb
xor
mov
popf
or
popf
ds
xchg
sarl
push
inc
ss
addl
sahf
mov
es
mov
in
and
mov
or
lods
lock
pop
cwtl
pop
mov
scas
dec
in
push
mov
ret
and
push
pop
sub
or
and
iret
outsb
pop
ja
cmc
lds
inc
pop
filds
leave
xchg
mov
loop
pshufw
inc
adc
inc
shrl
mov
sbb
ja
jne
xlat
addr16
out
jne
cs
xchg
xchg
sahf
xlat
and
mov
jg
push
bound
or
hlt
xchg
fwait
mov
movsb
xchg
mov
aad
mov
xchg
pop
leave
mov
mov
xor
je
in
cmp
ja,pn
dec
lcall
jp
aas
mov
xchg
or
cld
mov
mov
push
subb
stc
push
lods
jp
pop
inc
pop
test
hlt
movsb
sbb
rcrb
roll
add
xor
mov
nop
nop
rolb
xchg
dec
cwtl
roll
das
sbbl
lcall
xor
and
pop
dec
cld
push
inc
jns
dec
ficomps
popa
rolb
lahf
dec
bound
sbb
mov
movsl
pop
xor
sub
fiaddl
push
inc
jmp
push
shll
xorl
mov
ljmp
cmp
fimuls
dec
cli
fstps
popa
push
int3
iret
lods
and
mov
lahf
inc
inc
fucomip
scas
rcl
or
sbb
pop
imull
jns
das
lods
mov
xchg
xchg
xor
dec
cwtl
enter
cld
xchg
jge
int3
sub
outsb
xchg
in
cmpsb
jge
cmp
jns
stos
and
shrl
push
sbb
stc
cmp
mov
jge
inc
mov
test
mov
add
stos
add
ficompl
mov
push
mov
out
and
clc
pushf
in
aad
adc
aam
sahf
les
int3
cmc
jnp
subl
repz
push
xchg
shll
leave
and
mov
lods
adc
repnz
inc
iret
and
adc
dec
xchg
mov
mov
ret
sbb
cmc
mov
jecxz
mov
lahf
xchg
or
jnp
arpl
pushf
sbb
mov
xchg
mov
sub
in
push
and
or
stos
mov
and
pushf
inc
add
or
dec
jae
mov
mov
jg
jne
icebp
sbb
imul
inc
std
adc
repnz
push
popf
jbe
mov
and
jl
std
out
jecxz
cmp
add
mov
xchg
add
mov
out
inc
sub
push
sub
roll
mov
loopne
push
cmp
fcoms
mov
jo
mov
xchg
pop
pop
lret
add
hlt
push
enter
and
push
movsl
loop
scas
pop
rcll
movsl
dec
test
sub
fldl
add
jecxz
pop
mov
mov
cltd
pop
adc
mov
lea
cli
xlat
mov
and
add
mov
in
sub
or
cmpsb
or
xchg
into
aas
sub
ficomps
aad
faddp
cltd
loop
inc
pop
fcmovnbe
mov
out
sbb
adc
ds
cmpsb
jo
insl
cli
sbb
push
in
test
push
outsl
clc
aaa
dec
insl
mov
sahf
movsb
pop
sbb
in
fldcw
mov
jmp
xchg
adc
and
out
pop
mov
movb
jge
and
das
cmp
pop
call
stc
movsl
cmp
inc
xor
mov
aad
ljmp
aam
addr16
xchg
dec
data16
loope
cmp
stos
and
enter
mov
xor
jge
mov
faddl
xlat
int3
mov
and
dec
ss
add
jbe
decb
mov
in
cld
sub
sbb
lods
int3
movsb
mov
sti
or
jns
inc
mov
or
ret
xchg
addb
frstor
lods
nop
jbe
inc
out
sub
add
test
cmp
fcomps
dec
fldenv
hlt
adc
xchg
jmp
mov
cli
xchg
or
xor
jb
xor
out
jb
lret
push
push
sbb
lds
push
scas
int3
js
enter
pop
cld
in
and
ljmp
shl
pop
clc
aam
push
mov
movsl
mov
mov
mov
xlat
mov
fcoms
in
mov
add
xlat
lds
inc
popa
enter
jno
sub
dec
xorb
inc
aaa
xchg
adc
shll
loop
std
mov
mov
dec
push
hlt
lods
iret
mov
ret
push
fs
cli
xchg
shrb
test
insl
jnp
test
jp
add
sti
out
cli
cmp
shr
aaa
jo
les
add
dec
lahf
lahf
pop
js
out
shl
out
popa
test
mov
popa
fadd
add
or
addr16
mov
pop
jb
sbb
inc
fiadds
xchg
adc
lea
and
stos
repnz
mov
int3
stos
inc
fldt
push
dec
fs
leave
mov
stos
xor
das
mov
fisubrl
fcoms
ret
mov
mov
mov
sti
cmp
loope
push
out
pop
inc
dec
cmpsl
xchg
mov
sub
mov
adc
mov
dec
push
cmp
scas
mov
repnz
movsl
loopne
inc
xchg
mov
inc
cs
test
icebp
pop
loope
in
cmp
mov
lcall
gs
fmull
mov
sbb
pop
stos
adc
jnp
jno
outsl
pop
jecxz
mov
xchg
mov
icebp
sbb
mov
in
divl
lea
jbe
mov
jp
rcl
and
cmpsb
outsl
mov
xorl
test
out
insl
lea
xchg
lock
ret
or
jns
or
or
iret
scas
fistl
fsts
sbb
imul
pop
sbb
jmp
or
jns
incl
jne
mov
iret
ljmp
mov
jp
clc
adc
scas
insb
xor
daa
add
pop
jge
push
rcr
pop
push
aas
push
cmp
mov
mov
or
mov
mov
and
shrb
movsb
test
out
loope
jae
lods
movsl
sub
sbb
shrl
push
xchg
mov
mov
fst
loope
outsl
pop
mov
xor
rolb
test
adc
andl
inc
sarb
xchg
add
push
lods
jge
nop
mov
cmpsb
xor
sbb
xor
test
lock
xor
or
lret
mov
add
test
push
fwait
cltd
insb
ss
xchg
int3
cmp
jns
sub
leave
stos
repnz
and
xchg
imul
cmp
rorb
cmp
sbb
aaa
movsb
mov
int
add
push
stos
repz
xchg
cmp
insb
push
rclb
add
mov
and
mov
movsl
stos
jo
add
mov
out
jo
inc
mov
inc
fisubrs
pop
adc
xor
sub
xor
jae
jo
mov
lods
daa
or
pop
aam
push
or
push
mov
int
retw
jo
sarl
pushf
push
mov
mov
repnz
divb
inc
inc
add
pusha
in
rcll
jns
stos
dec
jbe
sarb
iret
mov
jae
xchg
in
int
pop
lcall
add
cmp
xchg
push
or
stos
push
sbb
push
mov
es
xchg
cltd
and
push
xor
or
inc
scas
dec
lods
mov
mov
cmp
xchg
in
sbb
js
adc
mov
aaa
fildll
dec
cmp
dec
xor
incb
jnp
xchg
fldenv
mov
push
pop
adc
movsl
pop
nop
push
and
clc
sbb
lds
stc
jae
sbb
mov
push
loop
adcl
inc
adc
xor
test
shrl
xchg
mov
pop
pop
arpl
dec
call
pop
push
adc
mov
das
push
sbb
inc
xchg
dec
mov
mov
outsb
data16
insl
xchg
enter
clc
mov
mov
mov
jecxz
incl
pop
repz
gs
dec
add
out
sbb
outsb
mov
cltd
arpl
mov
cmpsl
xchg
popa
insl
stos
cmp
mov
into
imul
mov
add
add
xchg
pop
popf
sbb
iret
or
xchg
mov
push
push
inc
add
inc
aam
fnstsw
test
pop
xchg
outsb
jg
insl
cmp
je
adc
sbb
xor
into
pushl
mov
xor
pop
mov
gs
xor
pop
push
or
add
fisttpll
push
popa
jmp
and
add
cmp
das
pushf
idiv
or
sbb
adc
mov
pop
add
pop
mov
in
or
int3
dec
add
cwtl
and
sti
jno
jecxz
mov
add
ljmp
ror
adc
xchg
adc
mov
mov
and
push
xlat
jl
test
movsb
adc
sub
inc
ljmp
pop
mov
push
push
sub
jnp
pop
stos
cmpl
sbb
sbb
push
mov
icebp
dec
mov
in
cmpsl
mov
imul
je
xor
mov
movzbl
sbb
or
push
cmc
dec
or
mov
sbb
add
repnz
test
sub
and
inc
pop
repz
push
pushf
negb
in
xchg
inc
mov
adc
jl
dec
jl
jg
aaa
stos
movsb
mov
jno
add
out
leave
bound
lds
mov
mov
rclb
cmp
mov
add
sti
test
es
scas
push
call
mov
subb
lcall
shrl
jge
jle
aas
jbe
cmpsb
out
mov
cmp
mov
cmp
or
jne
pop
xchg
and
sahf
mov
aad
or
in
push
lds
push
filds
adc
push
mov
push
inc
dec
add
and
adc
jp
add
or
pop
xchg
cs
and
mov
xchg
mov
pop
mov
movsb
scas
xor
stos
add
xlat
xchg
xchg
ss
cmp
mov
sub
insb
ds
mov
and
ficompl
sub
sbb
lods
push
pop
int
fistl
loop
ret
mov
rol
movsb
mov
cmp
fsubs
cmp
push
pop
nop
leave
push
cs
xchg
dec
xor
std
rcl
ficompl
jp
sbb
jge
call
in
xor
jmp
aaa
xchg
popa
das
aam
mov
iret
xchg
mov
lahf
inc
hlt
jns
mov
inc
mov
mov
aad
xor
mov
push
sub
xchg
mov
nop
push
mov
scas
cmp
call
or
btc
mov
xor
push
outsl
pop
aad
jmp
adc
jle
mov
mov
xchg
and
flds
mov
mov
xor
sbb
cmp
imul
push
xchg
cmp
sbb
ss
or
vmwrite
pop
cmp
push
testb
std
pop
call
ret
mov
pushf
mull
mov
ss
and
loope
add
jno
mov
iret
cmp
and
dec
jns
mov
mov
rcrb
outsl
push
sub
or
je
mov
jle
sahf
in
inc
hlt
fldl
dec
mov
stc
nop
sbb
flds
mov
mov
xor
pop
std
sub
xor
cmp
les
pop
sti
jle
push
sbb
pop
and
jmp
dec
jo
mov
or
jle
inc
sti
and
inc
pop
mov
insb
popa
xchg
sahf
stos
pop
je
mov
sahf
cmpsb
jge
xlat
dec
sub
mov
mov
pop
mov
mov
clts
mov
out
popf
nop
cmc
incl
mov
push
inc
call
or
mov
cmp
mov
es
loop
dec
sbb
mov
jl
xchg
jl
lods
pop
cmpsb
nop
xchg
mov
nop
adc
xchg
inc
fimuls
lea
jae
lock
popa
mov
movsl
aas
out
sbb
inc
repz
dec
lock
inc
fmul
ffree
int
lods
ror
pop
lret
mov
fwait
pop
aam
lahf
imul
test
stos
jle
test
ja
jmp
imul
mov
or
jb
push
icebp
cltd
or
call
mov
insl
bound
lcall
mov
mov
nop
insb
repnz
sahf
popf
jne
mov
pop
roll
add
in
fiaddl
add
ret
gs
lods
jge
adc
add
clc
lods
scas
or
jmp
dec
jns
pop
stos
xchg
xor
and
sti
ret
mov
fsubr
rclb
xchg
pop
mov
sbb
adc
loope
xor
icebp
cltd
cmpsb
mov
cmc
cmpsl
xchg
icebp
sbb
mov
cmpsl
ss
cmpsl
es
cmpsl
push
mov
cmpsl
push
mov
cmpsl
jbe
aad
data16
test
mov
jno
mov
push
mov
xchg
fucom
cmp
pop
sti
sub
ja
aam
cmc
fadds
mov
xchg
js
pop
jmp
mov
pop
push
xlat
xchg
in
jle
sbb
faddl
mov
push
or
mov
xchg
scas
mov
testl
fwait
jne
mov
mov
sbb
mov
stos
sahf
mov
fidivrs
fsts
negb
mov
fisubs
and
adc
mov
out
jb
mov
lcall
ss
sub
xchg
mov
gs
and
sub
jle
adc
add
cmpsl
adc
sahf
mov
mov
xchg
push
lcall
mov
fs
loopne
and
xchg
jge
stos
stos
mov
xor
and
add
and
jl
push
mov
mov
xor
inc
pop
sub
mov
xor
xchg
mov
fwait
and
icebp
out
in
push
cmp
mov
and
mov
cmp
xchg
jb
enter
add
sbb
lods
dec
int
xchg
xchg
and
mov
push
add
pop
cmp
pop
bound
js
jae
nop
test
shlb
pop
mov
sbb
adc
xorl
dec
jp
int3
pop
adcl
dec
push
mov
test
or
sbbb
in
lods
loope
repnz
nop
push
add
push
subb
sbb
push
pop
mov
inc
sbb
adc
idivb
mov
cmp
cmpsl
sbb
sahf
jl
loopne
stos
cld
dec
jbe
fbstp
jle
cmp
xor
orl
aam
stos
xchg
push
jl
pushf
imul
pop
mov
xchg
mov
lods
mov
sbb
mov
inc
loope
mov
rorb
mov
mov
stos
adc
fstpt
cmc
inc
js
jle
ja
xor
dec
pop
pop
mov
and
shr
int
dec
imul
dec
cwtl
or
test
add
dec
hlt
add
or
subl
bound
test
push
or
pop
pop
add
dec
inc
pop
pop
sahf
or
pop
nop
and
fst
dec
mov
or
pop
cwtl
mov
mov
icebp
sub
mov
hlt
outsl
xor
sbb
imul
sahf
inc
ret
inc
lcall
pushf
mov
jmp
fsubrs
imul
lds
shrl
pop
test
xor
xlat
sahf
lea
and
hlt
pop
xchg
inc
fsubrl
xchg
mov
cltd
sub
xchg
ret
pop
iret
add
cmp
lods
rcr
ret
int
movsb
stc
sbb
push
iret
and
fimull
dec
cmp
mov
lods
adc
mov
mov
lret
fwait
nop
xor
fcom
into
push
std
sub
xchg
jge
ret
js
cmp
iret
xlat
lcall
xor
sbb
idivl
mov
cmpsl
aaa
mov
int3
lahf
lret
outsb
or
aaa
imul
sub
popf
icebp
inc
test
call
and
jmp
sub
data16
lcall
sub
jae
xchg
movsb
adc
std
hlt
les
dec
add
mov
repnz
ret
data16
xchg
dec
lds
mov
int3
xchg
or
sahf
jnp
jns
jns
jp
jge
cwtl
arpl
lret
cmc
stos
lods
sahf
gs
lods
or
cmpsl
push
popf
shlb
add
cmpl
cmpsl
aad
fmull
inc
mov
punpckhwd
sub
movsb
outsb
ret
jne
inc
out
inc
push
dec
imul
aaa
lret
iret
ds
repz
inc
pop
imul
int3
push
jne
pushf
fadd
subb
or
cmp
jo
push
or
fidivl
sbb
lods
leave
adc
push
cmpl
add
sub
andl
mov
sahf
jmp
icebp
pop
addr16
int3
hlt
sub
gs
movsb
leave
jae
in
jl
add
xchg
mov
cmp
enter
scas
dec
dec
and
push
frstor
push
psrad
cs
div
or
mul
jmp
jp
popa
jns
movsl
push
inc
pop
ret
or
pop
stos
addb
les
xchg
inc
inc
mov
push
sbb
dec
mov
data16
mov
sbb
movsl
imul
cwtl
popa
repz
mov
jmp
xchg
inc
xchg
out
ret
int3
lock
leave
lock
or
sti
fldenv
cmp
outsl
mov
add
xchg
xor
pop
pushl
or
arpl
bound
out
outsb
mov
sahf
insl
clc
xor
ja
scas
int3
sbb
mov
mov
jae
enter
push
out
negl
add
mov
lahf
cmpsl
lret
cld
lock
push
or
xchg
outsb
push
xchg
nop
out
jnp
pusha
leave
mov
mov
sbb
pop
mov
fwait
cwtl
and
test
push
cmp
jecxz
adc
or
jb
push
inc
xor
cmp
je
in
dec
imul
push
in
daa
ja
ret
xor
sahf
fisttps
push
scas
test
jb
fmul
pop
imulb
shlb
push
jecxz
dec
loope
into
mov
rcr
jbe
mov
jp
fisubrl
lcall
leave
or
bound
dec
sbb
cmp
sub
sbb
imull
movl
aas
xor
lock
sahf
dec
and
test
adc
or
mov
inc
mov
rcll
hlt
pop
ds
or
in
cmc
and
ds
sbb
aam
cmp
inc
roll
mov
ficoms
pop
cmpsl
jle
mov
ds
xchg
call
lods
dec
add
andl
mov
std
mov
pop
push
je
adc
popa
fs
or
pop
cmp
dec
cmpl
mov
mov
scas
xchg
jmp
test
adc
push
lea
xchg
pop
orl
mov
leave
dec
in
push
cmp
mov
cltd
repnz
add
jnp
lds
out
sub
or
mov
sub
imul
xchg
aad
jbe
test
xlat
fcmovu
jne
inc
mov
dec
jo
mov
arpl
pushf
cld
mulb
cmc
orl
inc
pushf
cmp
cmpsl
sbb
repnz
or
aad
sub
ds
roll
subb
jo
movsl
in
push
rol
sbb
xchg
xlat
popa
in
xlat
shll
xchg
and
popf
mov
jo
rcll
xlat
mov
mov
cs
jae
cmp
jecxz
stos
shrl
lock
pop
push
test
inc
mov
mov
xlat
xchg
mov
pusha
add
inc
mov
mov
sbb
sub
mov
cmc
mov
cmp
cmpsb
mov
iret
mov
mov
hlt
lds
loopne
pop
add
insb
sarb
xchg
mov
les
repnz
test
cmpb
lds
jb
std
pusha
mov
mov
je
nop
ret
fld
lcall
or
outsl
aad
mov
loope
out
sarb
mov
jecxz
std
xor
into
xchg
push
xchg
jmp
lahf
cltd
lret
pop
in
lret
scas
popf
pextrw
inc
mov
popa
js
loope
adc
jl
addl
testl
xor
add
xchg
movsl
clc
daa
cli
inc
mov
mov
mov
shll
loopne
fcomp
jp
mov
imul
and
sar
inc
mov
mov
outsl
jae
sbbl
mov
sbb
and
lock
out
cmpsl
xchg
lahf
dec
cwtl
movsl
and
in
jnp
xchg
push
and
arpl
cmp
or
dec
mov
sbbl
je
mov
loope
jo
lret
push
add
jb
dec
mov
jle
or
mov
mov
inc
out
lret
mov
mov
iret
push
dec
or
xor
arpl
adc
add
jl
mov
loope
stos
push
bound
enter
imul
mov
outsb
scas
cli
cwtl
jae
xchg
iret
ss
repnz
loope
lret
sub
add
imul
roll
lret
imul
push
leave
pop
push
ljmp
das
dec
push
fmuls
bnd
leave
dec
ret
add
cmpsb
sub
jmp
mov
ja
and
fcmovne
cwtl
push
fcompl
sub
lret
or
fwait
dec
mov
outsb
mov
shlb
leave
mov
test
mov
xchg
inc
mov
dec
scas
mov
mov
push
or
inc
xlat
sbb
pop
fldenv
pop
sub
push
enter
cmp
mov
mov
outsb
or
fs
insb
enter
jmp
mov
ret
jnp
and
pop
loop
pop
mov
fcmovnb
pop
mov
stos
pop
enter
xlat
push
hlt
fisubl
in
jo
aad
cmpsb
int
addb
test
jne
subl
mov
lahf
sbb
test
jecxz
and
fisubrs
cmpsb
dec
mov
rolb
mov
add
in
mov
pop
mov
add
cmp
mov
ret
jns
mov
pop
sbb
cmp
stos
pop
or
cmp
clc
scas
out
mov
add
push
enter
mov
xor
in
jne
icebp
fidivs
pushf
pop
enter
les
mov
or
mov
xchg
repz
ret
out
dec
enter
or
orl
jmp
xchg
rcrb
dec
shlb
inc
call
adc
add
scas
movsb
movsb
pushf
lds
mov
cmpsb
inc
aad
imulb
leave
or
popa
in
cltd
jge
cmp
inc
shrb
push
push
insl
dec
xlat
pop
dec
in
sbb
jnp
cmp
dec
inc
cmp
mov
lcall
sub
dec
mov
jno
leave
aam
dec
push
cmc
int3
mov
rolb
push
inc
sub
or
push
and
push
add
call
call
add
or
call
dec
and
inc
or
push
or
or
add
sub
call
sub
xor
mov
add
lea
or
add
and
and
push
add
push
sub
push
or
add
push
dec
or
add
and
push
or
and
add
dec
call
dec
add
and
sub
mov
mov
shr
sub
jmp
sub
or
lods
add
add
and
inc
xor
add
or
and
xor
mov
mov
mov
mov
and
dec
mov
mov
je
mov
jmp
mov
inc
and
add
or
or
sub
dec
mov
jne
pop
dec
inc
sub
and
add
pop
pop
and
jmp
