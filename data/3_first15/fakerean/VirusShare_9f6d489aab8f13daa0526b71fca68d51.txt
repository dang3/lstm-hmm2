add
je
sbb
mov
ror
inc
add
add
ret
testb
jne
mov
lea
call
mov
lea
call
xor
mov
call
movl
jmp
mov
mov
cmp
jg
sub
mov
mov
imul
cmp
dec
mov
add
jmp
push
mov
push
push
push
xor
cmp
je
push
mov
movw
cmp
je
pushl
mov
lea
mov
call
mov
cmp
mov
mov
je
mov
mov
mov
push
lea
call
mov
push
lea
call
mov
lea
push
push
call
mov
cmp
pop
jne
lea
call
lea
call
lea
call
xor
pop
pop
leave
ret
int3
int3
sub
mov
xor
mov
mov
push
mov
push
mov
push
mov
test
je
test
movl
je
push
push
lea
mov
movl
call
mov
lea
lea
push
push
mov
call
test
js
mov
test
je
add
lea
add
jne
lea
mov
mov
lea
mov
movl
movl
movl
movb
call
test
js
cmpl
je
lea
push
lea
mov
call
inc
add
jne
cmpl
movl
jne
mov
test
jne
test
jne
lea
call
xor
pop
mov
pop
pop
pop
xor
call
add
ret
lea
call
jmp
push
mov
sub
push
push
push
mov
xor
mov
mov
push
lea
lea
movl
mov
mov
mov
call
cmp
je
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
mov
mov
and
mov
jne
cmp
jne
pushl
lea
call
cmp
jne
lea
push
pushl
call
test
pop
pop
jne
cmp
mov
mov
je
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
mov
and
jne
cmp
jne
pushl
lea
call
add
jne
pushl
mov
pushl
mov
push
call
test
jne
mov
lea
push
pushl
push
call
cmp
je
push
lea
mov
mov
call
mov
lea
push
push
call
pushl
lea
pushl
call
mov
cmp
pop
pop
mov
mov
mov
je
mov
lea
call
mov
lea
call
cmp
mov
je
cmp
je
mov
cmp
je
mov
lea
push
pushl
push
call
cmp
mov
je
lea
call
push
mov
lea
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
lea
call
mov
cmp
je
mov
push
call
lea
call
mov
mov
push
lea
mov
call
mov
lea
push
push
call
mov
cmp
je
pushl
mov
push
call
mov
cmp
je
mov
mov
push
push
call
mov
mov
mov
lea
mov
call
cmp
je
mov
push
call
lea
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
cmpl
je
decl
jne
add
mov
call
ret
mov
test
jg
cmpl
je
test
lea
mov
jne
add
mov
call
ret
mov
cmp
jae
inc
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
lea
cmp
push
jne
mov
test
jne
xor
pop
pop
pop
ret
push
push
push
lea
call
push
push
push
call
pop
pop
pop
ret
push
mov
push
mov
push
push
pushl
call
cmp
je
mov
call
test
jne
pushl
mov
push
call
lea
mov
push
call
test
je
mov
call
test
jne
mov
push
pushl
push
call
xor
pop
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
mov
mov
cmpl
jge
push
mov
xor
push
mov
call
mov
add
lea
call
cmp
jne
mov
mov
mov
push
call
mov
add
test
pop
je
mov
mov
push
push
push
push
push
add
push
push
mov
call
lea
call
pop
pop
pop
add
ret
cmp
je
mov
jmp
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
mov
push
xor
mov
push
lea
lea
mov
movl
movl
mov
mov
mov
call
cmp
je
mov
push
mov
lea
lea
mov
lea
push
lea
push
movl
movl
movl
mov
mov
mov
movl
movl
mov
mov
call
mov
test
jne
test
jne
mov
mov
push
push
lea
push
push
push
push
mov
call
test
js
mov
mov
mov
push
push
push
call
mov
mov
test
jne
test
jne
lea
call
mov
pop
mov
pop
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
push
mov
cmpb
jne
cmpl
mov
jne
cmpb
je
cmpl
jne
mov
cmp
jne
mov
cmpl
mov
movl
jne
mov
call
test
jne
test
jne
mov
cmp
je
cmp
je
cmp
je
cmpb
je
mov
mov
mov
call
test
je
test
je
test
je
mov
mov
mov
mov
lea
mov
test
je
mov
test
je
push
call
add
test
jne
mov
mov
mov
call
test
je
cmp
jne
mov
cmp
jne
push
push
call
add
test
jne
cmpl
jne
push
lea
push
push
call
add
cmpb
jne
movzbl
mov
sub
mov
mov
mov
push
push
mov
call
add
test
je
mov
mov
test
jne
cmpb
jne
mov
mov
mov
mov
cmpl
jne
mov
mov
mov
test
mov
mov
jne
mov
add
add
je
mov
lea
call
mov
mov
lea
push
push
mov
call
mov
mov
mov
push
push
push
mov
call
lea
mov
call
lea
call
mov
pop
pop
pop
mov
pop
ret
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
jmp
mov
mov
mov
mov
push
push
push
add
add
sbb
add
lock
mov
pop
pop
pop
mov
pop
ret
test
movl
je
mov
push
add
add
mov
call
mov
call
test
jne
mov
mov
call
test
je
mov
mov
push
push
push
push
call
mov
mov
call
lea
call
mov
pop
pop
pop
mov
pop
ret
mov
cmpl
je
pushl
call
pop
ret
mov
test
je
jmp
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
test
je
mov
push
xor
push
mov
mov
push
mov
xor
push
lea
lea
mov
movl
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
push
call
mov
test
js
mov
cmp
je
mov
lea
push
push
mov
call
test
js
cmp
jne
push
call
add
cmp
je
movl
movl
movl
movl
mov
mov
mov
push
mov
mov
call
mov
push
mov
lea
mov
call
mov
push
lea
mov
call
mov
mov
lea
push
push
call
mov
test
js
mov
cmp
je
mov
push
mov
call
mov
mov
mov
push
call
test
je
mov
push
lea
mov
call
mov
mov
lea
push
push
call
mov
test
js
mov
cmp
je
push
mov
lea
mov
call
mov
mov
lea
push
push
mov
call
cmp
jne
push
call
add
cmp
je
call
cmp
je
mov
mov
mov
push
call
mov
mov
lea
push
mov
push
push
mov
push
call
mov
mov
mov
push
push
call
mov
mov
push
call
mov
lea
call
lea
call
mov
mov
mov
push
call
jmp
lea
call
lea
call
test
js
mov
xor
lea
call
lea
call
cmp
jne
mov
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
push
push
call
xor
add
cmp
je
push
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
xor
pop
ret
push
mov
and
mov
sub
cmp
push
push
push
jne
pop
pop
pop
mov
pop
ret
lea
call
mov
jmp
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
movl
push
xor
mov
mov
push
lea
add
movl
mov
mov
movl
mov
mov
mov
cmp
jbe
mov
push
push
push
call
add
cmp
je
sub
mov
mov
cmp
jae
cmp
mov
mov
mov
mov
jb
lea
mov
mov
mov
lea
push
call
mov
mov
mov
sub
sub
add
je
cmp
mov
ja
mov
sub
add
cmp
mov
mov
jb
lea
mov
mov
movl
lea
push
call
mov
or
call
test
je
mov
add
cmp
je
mov
mov
sub
cmp
jbe
add
cmp
jne
mov
pop
pop
pop
pop
add
ret
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
push
movl
movl
movl
add
enter
movl
movl
movl
push
movl
mov
push
push
call
movl
mov
mov
lea
add
lea
lea
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
lea
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
lea
call
cmpl
lea
je
push
call
add
lea
lea
push
lea
mov
movl
movl
call
call
push
push
push
call
mov
test
je
testl
jne
mov
mov
test
je
mov
call
test
je
push
call
add
mov
mov
lea
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
push
push
lea
push
push
call
mov
cmp
jne
mov
mov
lea
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
call
mov
pop
pop
pop
pop
xor
call
add
ret
mov
push
call
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
mov
test
push
lea
movl
movl
movl
movl
movl
je
mov
lea
push
mov
call
mov
test
push
lea
push
jne
lea
call
lea
lea
push
lea
mov
movl
movl
call
call
push
push
push
call
mov
test
je
testl
jne
mov
test
jne
mov
test
pop
pop
je
mov
push
mov
call
mov
test
je
addl
je
lea
call
lea
call
lea
call
lea
call
mov
call
mov
xor
cmp
movl
je
mov
mov
mov
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
mov
push
mov
push
push
mov
push
mov
call
add
test
je
mov
mov
call
add
je
add
test
mov
je
mov
mov
push
call
cmpl
je
lea
lea
push
mov
mov
movl
movl
movl
mov
movb
call
add
test
jne
mov
mov
mov
push
push
push
push
push
push
call
test
js
mov
mov
mov
push
push
push
mov
call
mov
mov
test
jne
test
jne
lea
call
mov
mov
pop
pop
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
mov
mov
mov
mov
push
xor
push
mov
mov
mov
call
push
lea
mov
mov
call
mov
mov
lea
lea
push
push
call
testl
jne
cmp
jne
push
lea
lea
movl
movl
add
mov
call
cmp
je
mov
cmp
mov
mov
mov
mov
jne
mov
cmp
mov
mov
je
push
mov
lea
call
mov
cmp
je
push
lea
call
mov
mov
lea
push
push
call
push
mov
lea
mov
call
mov
cmp
je
push
mov
lea
mov
call
mov
cmp
je
push
lea
call
mov
mov
lea
push
push
call
mov
push
lea
call
mov
mov
lea
push
push
call
mov
call
lea
mov
call
push
lea
call
mov
mov
lea
push
push
call
lea
call
testb
mov
mov
mov
mov
je
movzbl
mov
push
mov
mov
push
mov
push
push
lea
push
push
mov
xor
push
push
push
push
push
call
mov
mov
mov
mov
push
push
call
cmp
jne
mov
cmp
je
lea
mov
mov
push
push
mov
call
call
push
push
push
push
call
cmp
jbe
add
cmp
jne
cmp
je
cmpl
je
testl
mov
mov
lea
jne
push
mov
call
cmp
je
mov
mov
lea
push
push
mov
call
mov
mov
mov
push
mov
push
push
mov
call
mov
mov
mov
mov
add
push
push
call
lea
call
mov
cmp
mov
je
test
mov
js
mov
mov
mov
mov
push
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
pop
add
ret
push
lea
call
push
lea
call
mov
xor
test
je
jmp
push
mov
push
mov
test
je
mov
mov
andl
push
mov
lea
call
mov
mov
mov
lea
mov
call
xor
pop
pop
ret
cmpl
mov
mov
je
orl
xor
ret
push
mov
sub
push
xor
cmp
je
push
push
lea
mov
mov
call
lea
push
lea
lea
mov
push
push
movl
movl
movl
call
testb
jne
testb
jne
pushl
mov
lea
mov
call
pushl
mov
add
mov
call
cmp
je
pushl
mov
mov
push
push
pushl
push
call
test
js
mov
mov
push
push
call
mov
mov
add
push
push
call
push
push
pushl
push
pushl
call
add
lea
call
lea
call
lea
call
pop
pop
leave
ret
int3
int3
sub
mov
xor
mov
push
mov
push
mov
push
mov
movl
mov
test
push
mov
mov
jbe
mov
mov
mov
mov
lea
cmpw
je
sub
add
test
jne
mov
cmpl
movl
je
mov
mov
call
test
je
mov
mov
lea
lea
sub
mov
xor
sar
cmp
lea
mov
movl
movl
mov
mov
je
push
lea
call
test
je
mov
or
lea
call
test
je
mov
test
jbe
mov
mov
sub
movzwl
cmp
jae
movzwl
movzbw
movzwl
mov
add
sub
jne
mov
lea
push
call
mov
mov
add
test
jne
test
jne
cmpl
je
xor
mov
pop
pop
pop
pop
xor
call
add
ret
push
call
mov
add
jmp
sub
sar
test
jle
mov
push
push
push
lea
movl
movl
movl
call
push
call
add
mov
mov
add
test
jne
test
jne
cmpl
je
mov
sub
sub
push
add
push
push
lea
movl
movl
movl
call
push
call
mov
mov
mov
add
test
jne
test
jne
cmpl
je
mov
mov
mov
mov
mov
push
push
call
jmp
push
mov
lea
call
lea
call
lea
call
testb
movl
je
push
call
pop
mov
pop
ret
push
mov
sub
push
mov
test
je
testw
jne
pop
leave
ret
cmpl
je
cmpl
je
mov
mov
mov
or
inc
add
push
mov
mov
mov
mov
call
test
mov
ja
mov
mov
lea
push
call
mov
test
mov
je
andl
push
mov
add
call
mov
test
je
lea
or
push
mov
mov
mov
push
call
mov
mov
lea
push
push
call
xor
cmp
jge
cmp
jge
cmp
jge
cmpl
jne
cmp
jge
lea
call
lea
call
pop
pop
jmp
pushl
mov
call
test
jne
pushl
mov
call
test
jne
cmpl
je
cmpl
je
jmp
push
mov
sub
push
mov
test
je
andl
push
mov
lea
call
mov
test
jne
and
push
mov
add
call
mov
test
jne
and
push
mov
lea
call
mov
test
je
mov
mov
mov
lea
call
lea
call
mov
test
je
mov
test
jne
mov
test
je
cmpb
je
mov
mov
lea
call
lea
call
mov
test
je
mov
test
jne
mov
mov
lea
call
mov
pop
leave
ret
xor
jmp
xor
jmp
int3
int3
int3
int3
int3
sub
push
mov
mov
mov
push
mov
call
test
je
push
push
push
xor
push
lea
mov
mov
mov
mov
mov
call
push
lea
call
push
lea
call
mov
mov
lea
push
lea
push
lea
push
lea
push
mov
call
test
js
mov
mov
mov
call
cmp
mov
je
mov
mov
mov
push
call
mov
mov
push
mov
call
mov
call
mov
mov
push
push
lea
push
call
mov
mov
mov
push
mov
lea
push
mov
push
push
mov
push
mov
push
push
call
test
mov
js
cmpl
jne
cmp
je
test
je
mov
call
push
call
mov
mov
andb
test
movb
movl
mov
mov
je
mov
mov
add
call
lea
call
lea
call
mov
test
je
mov
mov
push
call
mov
test
je
mov
mov
push
call
lea
call
mov
pop
pop
pop
pop
add
ret
mov
mov
push
mov
call
push
mov
call
mov
andb
mov
mov
test
movb
movl
mov
je
mov
mov
add
call
lea
call
lea
call
mov
test
je
mov
mov
push
call
mov
test
je
mov
mov
push
call
lea
call
pop
mov
pop
pop
pop
add
ret
int3
int3
push
mov
push
mov
call
test
jne
mov
lea
push
lea
push
push
push
push
mov
movl
call
add
xor
test
pop
js
mov
mov
push
mov
push
mov
push
mov
push
mov
push
push
push
call
mov
add
test
js
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
mov
test
je
mov
cmp
je
call
mov
test
mov
mov
jne
and
testb
je
mov
cmp
je
test
mov
je
mov
test
je
mov
test
je
mov
mov
lea
cmp
je
mov
add
test
jne
mov
mov
mov
mov
push
push
push
call
test
mov
mov
mov
js
test
je
mov
mov
mov
mov
mov
mov
jmp
mov
mov
add
test
jne
add
add
test
jne
add
or
test
jne
add
add
push
and
add
mov
mov
test
je
mov
mov
mov
mov
mov
movl
xor
mov
test
jne
cmp
je
mov
pop
pop
pop
pop
add
ret
mov
test
je
mov
mov
test
mov
mov
je
mov
cmp
je
test
mov
je
mov
mov
test
je
mov
mov
lea
cmp
je
mov
add
test
jne
jmp
mov
into
inc
add
test
add
add
test
add
or
test
add
add
push
and
add
mov
mov
mov
mov
mov
mov
movl
xor
test
js
mov
test
jne
pop
pop
pop
pop
add
ret
mov
mov
lea
push
push
push
mov
call
mov
jmp
test
js
mov
mov
call
jmp
mov
call
pop
pop
pop
xor
pop
add
ret
int3
sub
push
push
push
mov
xor
push
mov
xor
mov
mov
call
test
mov
jne
lea
push
lea
push
push
push
push
mov
mov
call
add
xor
test
mov
js
push
push
lea
push
mov
lea
push
mov
push
push
push
call
mov
mov
add
test
js
mov
lea
movl
mov
movl
mov
mov
scas
test
add
mov
add
add
lea
push
lea
push
push
call
add
cmp
je
cmp
mov
mov
mov
je
test
je
mov
movl
mov
mov
mov
test
jne
test
jne
cmp
jne
mov
pop
pop
pop
pop
add
ret
mov
movl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
push
push
lea
mov
mov
push
push
mov
call
mov
mov
lea
lea
push
rep
call
mov
add
push
call
mov
add
cmp
jne
cmpb
je
mov
test
jne
add
push
call
add
add
push
add
call
add
mov
lea
push
lea
push
mov
lea
push
lea
push
push
call
fldl
fstl
add
fldl
lea
fstl
fldl
fsubp
fxch
fstpl
fsubrl
fstpl
call
inc
add
call
fldl
mov
call
mov
push
mov
lea
push
push
mov
lea
push
add
call
fldl
mov
fchs
fldl
mov
sub
fchs
fstpl
fstpl
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
lea
push
push
call
mov
add
test
mov
je
mov
call
mov
mov
lea
push
push
call
add
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmpb
je
mov
push
push
call
mov
push
mov
call
add
lea
pop
pop
ret
int3
int3
int3
int3
int3
push
mov
and
push
push
push
mov
push
lea
push
lea
mov
call
cmpl
je
flds
flds
flds
flds
mov
fxch
fstpl
fxch
fstpl
fstpl
fstpl
mov
pop
pop
pop
mov
pop
ret
sub
push
mov
cmp
push
push
push
je
mov
mov
mov
push
mov
call
test
jne
add
test
jne
push
mov
call
mov
mov
mov
mov
call
cmp
je
cmp
je
cmp
je
cmp
je
movl
mov
mov
cmp
jne
mov
mov
push
mov
call
test
jne
mov
and
or
jne
xor
pop
pop
pop
pop
add
ret
mov
and
or
jne
cmp
je
jmp
mov
mov
jmp
mov
call
test
jne
jmp
int3
int3
int3
mov
mov
mov
mov
mov
mov
mov
mov
sub
lea
movl
movl
mov
push
push
mov
call
mov
mov
mov
add
add
sub
sub
js
mov
sub
mov
sub
js
test
mov
jl
xor
test
jl
add
ret
xor
jmp
xor
jmp
push
mov
lea
mov
or
lock
dec
je
pop
ret
mov
movl
call
push
call
pop
xor
jmp
push
mov
push
push
push
mov
push
xor
cmp
jne
push
lea
mov
call
mov
lea
push
push
call
cmp
je
pushl
mov
lea
mov
call
mov
mov
push
call
lea
call
push
lea
mov
call
mov
lea
push
push
call
mov
cmp
je
push
mov
cmp
mov
je
mov
push
call
mov
mov
call
lea
mov
call
lea
call
pop
lea
call
lea
call
incl
pop
xor
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
mov
add
mov
xor
call
test
je
mov
mov
mov
push
push
lea
push
mov
call
mov
mov
test
mov
mov
je
and
mov
mov
test
je
mov
mov
cmp
jne
mov
test
je
mov
test
je
lea
cmp
jne
add
test
je
mov
cmp
je
add
mov
mov
call
mov
call
inc
add
add
mov
lea
call
mov
pop
pop
pop
add
ret
mov
test
jne
jmp
push
push
mov
call
lea
mov
call
mov
pop
pop
pop
add
ret
pop
pop
mov
pop
add
ret
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
push
push
xor
lea
mov
push
push
mov
call
mov
mov
add
cmp
je
cmp
mov
jne
cmp
je
cmp
jne
cmp
jne
mov
mov
cmp
je
mov
cmp
je
mov
mov
and
xor
or
jne
mov
and
xor
or
jne
mov
and
xor
or
mov
mov
mov
jne
mov
xor
and
or
mov
mov
mov
mov
je
mov
cmp
je
lea
call
mov
mov
cmp
je
mov
cmp
jne
mov
lea
call
mov
add
mov
push
call
add
mov
lea
call
mov
mov
add
call
mov
mov
and
or
mov
jne
mov
and
cmp
mov
mov
je
or
jne
mov
mov
cmp
jne
cmp
jne
cmp
jne
cmp
jne
cmp
jne
xor
nop
mov
cmp
jne
add
cmp
jl
lea
mov
lea
mov
cmp
jne
add
lea
cmp
jae
cmp
jne
add
lea
cmp
jb
cmp
mov
jne
cmp
jne
cmp
jne
cmp
jne
cmp
jne
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
mov
pop
ret
cmp
mov
mov
jne
cmp
je
mov
mov
lea
call
mov
cmp
je
mov
mov
push
call
sub
movl
mov
mov
mov
mov
push
push
call
add
movl
mov
mov
mov
mov
push
push
call
add
movl
mov
mov
mov
mov
push
push
call
add
movl
mov
mov
mov
mov
push
push
call
add
cmp
jne
mov
mov
mov
add
rorb
lret
jne
lea
cmp
jb
add
call
lea
call
jmp
or
cmp
mov
mov
je
jmp
mov
mov
add
call
jmp
int3
int3
int3
sub
mov
xor
mov
mov
mov
push
xor
cmp
push
push
je
mov
cmp
mov
je
mov
mov
push
call
mov
lea
mov
mov
lea
push
mov
mov
movl
mov
mov
mov
mov
push
push
mov
call
lea
lea
push
lea
pop
movb
mov
movl
mov
mov
mov
call
add
cmp
je
push
call
add
cmp
je
mov
call
xor
cmp
mov
je
xor
cmp
lea
sete
mov
push
mov
push
push
push
call
mov
test
js
mov
mov
push
push
lea
call
test
js
cmpb
je
mov
mov
mov
push
push
push
mov
call
mov
test
jne
test
jne
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
lea
call
mov
mov
pop
pop
pop
xor
call
add
ret
mov
mov
movb
mov
jmp
push
mov
push
push
xor
cmp
push
je
cmp
je
mov
mov
mov
push
mov
call
mov
push
push
call
test
js
mov
push
mov
lea
mov
call
cmp
je
cmp
jne
mov
pushl
mov
push
call
mov
mov
lea
mov
mov
call
mov
mov
push
pushl
pushl
push
call
test
jne
lea
call
xor
pop
pop
leave
ret
mov
lea
push
call
mov
lea
push
push
call
test
js
xor
jmp
push
mov
push
mov
cmpb
push
jbe
mov
mov
mov
mov
xor
inc
call
test
je
mov
mov
pop
pop
pop
ret
push
mov
push
mov
test
je
lea
push
pushl
add
pushl
push
call
and
jne
test
jne
pushl
mov
call
pop
pop
ret
andl
jmp
andl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
test
je
mov
and
cmp
jne
mov
mov
add
mov
mov
xor
pop
ret
mov
test
push
push
je
mov
push
call
add
mov
call
push
mov
call
add
test
pop
pop
jne
jmp
int3
int3
int3
sub
mov
mov
push
push
mov
push
push
mov
mov
test
mov
jne
mov
mov
lea
push
push
push
push
push
mov
mov
call
xor
mov
mov
mov
mov
mov
mov
lea
push
lea
push
call
add
lea
lea
lea
call
test
je
mov
mov
mov
push
push
push
push
push
call
mov
cmp
jne
mov
mov
mov
mov
mov
pop
pop
pop
pop
add
ret
mov
test
jne
mov
mov
test
lea
je
andl
mov
mov
push
mov
call
test
jne
mov
mov
push
mov
call
test
jne
mov
lea
mov
and
mov
je
mov
test
jne
mov
test
mov
mov
je
test
jne
mov
mov
push
push
mov
push
push
push
push
push
lea
push
push
call
cmpl
mov
mov
jne
xor
mov
push
push
push
mov
push
mov
mov
push
push
push
push
push
mov
call
lea
call
cmpl
jne
mov
mov
mov
jmp
cmpl
je
andl
jmp
mov
push
push
lea
push
call
jmp
lea
jmp
mov
jmp
mov
jmp
add
andl
jmp
mov
mov
mov
add
or
mov
ret
push
mov
mov
push
push
xor
mov
mov
mov
mov
cmp
mov
je
mov
lea
push
push
push
call
test
js
add
lea
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
mov
mov
lea
mov
call
lea
call
mov
pop
pop
pop
ret
mov
mov
push
pushl
push
call
ret
int3
int3
sub
push
mov
mov
mov
mov
mov
push
mov
push
push
push
mov
call
test
jne
xor
mov
test
mov
mov
je
mov
mov
mov
mov
mov
push
push
push
push
call
lea
mov
mov
test
jne
test
je
mov
cmpl
je
mov
mov
add
mov
xor
lea
mov
mov
mov
lea
mov
cmp
jae
mov
add
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
jmp
mov
mov
mov
mov
and
mov
jne
pop
pop
pop
pop
add
ret
int3
int3
mov
mov
test
je
mov
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
push
mov
movl
je
push
mov
push
mov
push
mov
test
jne
mov
movzbl
movzbl
cmp
jne
xor
add
cmp
jne
xor
pop
pop
pop
pop
ret
cmp
je
sub
cmp
ja
jmp
test
je
pop
pop
pop
mov
pop
ret
mov
test
je
test
jne
cmp
jne
lea
cmp
je
mov
mov
jmp
pop
pop
pop
mov
pop
ret
lea
shlb
mov
or
mov
or
mov
or
mov
or
mov
or
repz
adc
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
lea
push
mov
push
lea
push
call
mov
mov
add
test
mov
jne
ret
mov
mov
push
call
mov
mov
call
fldl
add
push
push
fstpl
call
pop
pop
call
cmp
jl
ret
xor
inc
ret
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
mov
mov
mov
push
push
add
push
xor
mov
movl
movl
call
mov
or
cmp
je
cmp
je
mov
mov
mov
mov
pop
pop
pop
mov
pop
add
ret
mov
mov
mov
push
mov
call
test
jne
push
lea
push
mov
call
mov
mov
pop
mov
mov
pop
mov
pop
mov
mov
pop
add
ret
xor
cmp
jne
push
mov
cmp
jne
push
mov
cmp
jne
pop
mov
pop
ret
push
mov
push
mov
push
mov
push
pushl
pushl
push
call
mov
mov
mov
call
push
mov
mov
push
call
add
push
push
call
mov
add
mov
mov
cmp
jne
mov
mov
mov
and
xor
or
jne
mov
pop
pop
pop
ret
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
imul
test
lea
ja
mov
add
pop
ret
mov
mov
test
je
andl
add
dec
jne
jmp
xor
pop
ret
push
mov
mov
andl
test
jne
lea
call
lea
pop
jmp
push
mov
andl
call
test
mov
jne
pop
jmp
int3
int3
fldl
fcoml
fnstsw
test
jnp
fcoml
fnstsw
test
jnp
fldl
fcoml
fnstsw
test
je
fcoml
fnstsw
test
je
fstp
fldl
faddl
fcomp
fnstsw
test
je
fldl
faddl
fcomp
fnstsw
test
je
fstp
ret
push
push
mov
lea
push
mov
call
test
je
pop
pop
ret
andl
push
call
pop
xor
jmp
push
mov
add
push
pushl
call
mov
pop
pop
mov
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
test
push
mov
push
push
mov
push
jne
test
jne
mov
lea
xor
push
mov
mov
call
testb
jne
mov
cmp
je
mov
mov
lea
push
push
call
lea
call
mov
mov
push
push
lea
call
test
je
mov
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
cmpl
je
lea
call
xor
pop
pop
pop
pop
add
ret
lea
push
mov
mov
call
testb
jne
mov
mov
mov
mov
mov
push
push
push
mov
push
push
push
push
push
call
pop
pop
pop
pop
add
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
je
push
push
mov
push
push
lea
movl
call
add
cmpl
je
test
jl
mov
mov
lea
push
mov
push
mov
mov
mov
add
push
push
call
test
js
cmp
jae
push
push
push
push
push
push
push
push
call
mov
mov
mov
add
mov
pop
pop
pop
xor
ret
int3
push
mov
and
sub
test
push
push
je
movl
test
je
sar
test
je
movl
pop
pop
mov
pop
ret
mov
mov
push
mov
call
mov
lea
push
push
push
call
add
test
je
mov
mov
lea
push
mov
push
push
push
call
add
test
je
fldl
lea
push
sub
fstpl
call
add
test
jne
mov
push
call
add
pop
or
pop
mov
pop
ret
pushl
andl
mov
mov
call
mov
ret
mov
mov
mov
mov
cmp
push
jne
call
ret
int3
sub
mov
xor
mov
push
mov
push
push
push
mov
call
mov
cmp
je
cmp
je
cmp
je
movzbl
cmp
jle
mov
mov
mov
push
push
mov
call
test
jne
mov
orl
mov
cmpl
jne
cmpb
jne
mov
orl
mov
cmpl
jne
testw
je
mov
call
test
je
cmpb
jne
mov
orl
mov
movzbl
cmp
jne
mov
mov
mov
push
push
mov
call
test
je
mov
test
je
cmp
je
mov
mov
lea
push
call
test
je
mov
test
lea
mov
movl
movl
movl
mov
movw
lea
je
push
push
call
cmpl
je
mov
test
jne
test
jne
mov
test
jne
mov
mov
pop
pop
pop
xor
call
add
ret
cmpl
je
jmp
sub
cmp
ja
movzbl
jmp
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
jmp
mov
mov
mov
mov
push
push
call
test
je
jmp
testb
jne
cmpb
je
mov
lods
xchg
inc
add
add
inc
add
movl
call
cmpl
je
mov
orl
mov
jmp
mov
orl
mov
jmp
testw
je
jmp
mov
orl
mov
jmp
add
adc
ja
adc
add
add
add
add
add
int3
int3
int3
int3
int3
mov
mov
push
push
push
mov
test
push
jg
mov
pop
pop
pop
movl
xor
pop
ret
mov
mov
xor
lea
mov
cmp
je
add
add
cmp
jl
mov
pop
pop
pop
movl
xor
pop
ret
mov
push
mov
call
add
test
je
mov
jmp
mov
lea
call
test
je
mov
mov
pop
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
lea
push
mov
push
mov
push
push
movl
call
mov
test
jge
push
mov
push
call
test
je
movl
orl
pop
xor
pop
pop
ret
mov
mov
shl
sub
lea
mov
push
push
call
xor
pop
pop
ret
mov
mov
cmpl
je
push
pushl
call
ret
xor
jmp
int3
int3
push
push
mov
mov
mov
mov
mov
call
test
jbe
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
mov
mov
cmp
je
mov
mov
push
push
push
push
mov
call
add
cmp
jb
pop
pop
pop
pop
pop
ret
mov
cmp
jne
mov
mov
test
jne
push
push
call
test
je
mov
mov
push
call
mov
jmp
mov
jmp
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
push
push
push
mov
xor
cmp
jne
push
call
cmp
pop
je
movl
mov
mov
mov
push
call
push
lea
mov
call
mov
lea
push
push
push
call
mov
push
call
pushl
movb
pushl
pushl
push
call
test
mov
js
mov
call
mov
push
push
mov
pushl
mov
push
call
sub
je
dec
je
mov
call
mov
pop
pop
pop
pop
ret
movl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
push
push
mov
mov
mov
mov
push
mov
xor
cmpb
mov
mov
jne
cmpb
je
call
test
jne
mov
mov
mov
push
push
mov
call
cmp
je
mov
call
mov
movl
mov
mov
mov
push
push
push
push
push
push
mov
call
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
add
cmp
jne
mov
mov
lea
push
push
add
push
push
mov
mov
mov
call
mov
test
js
mov
cmp
mov
mov
mov
mov
je
mov
mov
lea
push
push
push
call
mov
mov
mov
push
push
push
push
push
push
mov
push
mov
push
push
push
mov
call
mov
lea
mov
push
call
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
cmpb
jne
lea
test
je
mov
test
mov
movl
movl
mov
mov
je
mov
mov
push
call
mov
test
mov
push
mov
push
mov
mov
je
mov
mov
push
call
mov
test
mov
jne
mov
lea
call
lea
call
mov
test
pop
pop
je
mov
mov
push
call
xor
add
ret
mov
jmp
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
mov
cmp
push
push
lea
push
mov
mov
jb
mov
xor
cmp
je
mov
mov
lea
push
push
lea
push
lea
push
push
push
push
mov
mov
mov
xchg
leave
inc
add
inc
and
add
add
mov
mov
mov
mov
call
add
test
je
cmpl
jb
mov
mov
mov
add
push
push
push
xor
lea
call
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
push
mov
call
test
js
mov
push
push
xor
lea
call
mov
cmp
jne
mov
push
push
lea
push
push
lea
call
mov
mov
add
cmp
jne
lea
call
lea
call
lea
call
lea
call
mov
cmp
je
mov
mov
push
call
mov
cmp
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
int3
int3
mov
push
mov
push
mov
push
push
push
push
call
inc
add
dec
and
push
push
push
call
add
test
je
test
mov
je
mov
mov
mov
mov
mov
mov
ret
int3
int3
int3
int3
mov
sub
cmp
push
mov
push
je
test
jne
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
add
ret
lea
mov
call
mov
mov
mov
mov
mov
mov
mov
push
mov
call
pop
pop
add
ret
cmpl
je
xor
ret
cmpl
je
push
push
mov
push
lea
mov
call
test
je
push
lea
push
mov
call
push
lea
call
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
xor
cmp
mov
mov
mov
mov
mov
mov
mov
mov
jbe
push
mov
xor
cmp
je
movzwl
cmp
jne
cmp
je
cmp
je
cmp
je
cmp
jne
cmp
jae
cmp
jae
cmp
jae
cmp
jae
add
cmp
jb
pop
pop
ret
mov
movzbw
movzwl
jmp
cmp
ja
jmp
movb
jmp
mov
test
je
mov
test
mov
je
mov
push
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
test
je
sar
add
lea
or
mov
ret
push
push
push
mov
push
mov
test
mov
je
mov
call
cmpl
jne
mov
or
mov
addl
mov
add
lea
or
mov
pop
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
push
push
push
push
call
xor
add
cmp
jne
cmp
jne
xor
lea
mov
push
call
add
cmp
jne
jmp
cmp
jne
mov
mov
mov
cmp
jge
mov
call
mov
mov
mov
mov
cmp
je
lea
cmpl
je
mov
mov
push
call
add
cmp
jne
cmp
jne
xor
mov
push
call
add
cmp
jne
mov
lea
mov
mov
cmp
jl
cmp
je
mov
cmp
je
add
mov
cmp
mov
je
addl
cmp
jne
mov
mov
call
push
call
add
jmp
mov
sub
je
sub
jne
cmp
jne
mov
mov
call
mov
cmp
test
add
call
movl
mov
call
pop
pop
pop
pop
pop
ret
cmp
je
mov
mov
cmp
lea
jne
mov
push
push
call
pop
pop
pop
pop
pop
ret
mov
push
call
push
call
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
call
test
movl
mov
je
addl
mov
mov
mov
mov
mov
movl
mov
xor
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
call
mov
lea
push
lea
mov
cmp
pop
pop
popf
adc
addl
add
mov
push
call
add
jmp
mov
mov
mov
mov
jmp
mov
push
call
jmp
push
mov
lea
push
call
mov
pop
mov
mov
cmp
pop
push
jne
call
ret
push
mov
sub
push
push
push
mov
mov
call
test
mov
je
mov
mov
push
xor
call
cmp
je
mov
mov
call
push
mov
lea
mov
call
mov
push
lea
lea
mov
mov
mov
mov
call
pushl
mov
lea
mov
call
mov
cmp
je
push
lea
mov
call
add
lea
push
push
call
mov
push
lea
lea
mov
mov
mov
call
mov
cmp
je
call
cmp
jne
cmp
jne
mov
mov
push
push
pushl
call
lea
call
lea
call
add
call
lea
call
cmp
jne
lea
call
pop
pop
pop
leave
ret
pushl
call
test
pop
jne
jmp
push
mov
sub
andl
push
push
push
call
test
je
mov
xor
lea
inc
mov
push
mov
mov
mov
call
test
pop
mov
jne
mov
lea
push
movl
mov
mov
mov
call
test
pop
jne
mov
testb
je
pushl
andl
pushl
call
pop
pop
test
je
push
push
call
pop
pop
cmpb
jne
mov
lea
mov
push
mov
mov
mov
call
push
push
mov
call
add
cmpl
jne
mov
andl
lea
push
movl
mov
call
lea
push
lea
push
lea
mov
add
inc
fsubs
repz
movl
mov
mov
mov
mov
call
push
push
call
push
push
call
lea
push
lea
push
lea
mov
push
mov
movl
mov
mov
mov
mov
call
push
push
call
push
push
call
andl
add
movl
mov
push
lea
call
mov
mov
call
test
js
mov
push
call
test
je
andl
mov
mov
lea
push
push
pushl
movl
call
pushl
pushl
call
add
xor
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
xor
push
push
mov
mov
mov
mov
movl
mov
mov
mov
lea
lea
mov
lea
mov
mov
mov
push
lea
mov
mov
movl
movl
mov
call
push
call
add
push
mov
call
lea
push
call
add
push
mov
call
mov
test
jne
test
jne
mov
pop
pop
pop
xor
mov
call
add
ret
mov
ret
int3
int3
int3
int3
int3
sub
push
push
mov
xor
cmp
push
je
mov
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
test
js
mov
cmp
mov
je
mov
lea
push
push
mov
call
mov
cmp
jg
cmpl
je
mov
push
lea
call
mov
mov
mov
lea
push
push
push
call
test
js
mov
mov
mov
mov
push
push
call
mov
push
lea
mov
call
mov
mov
lea
push
mov
push
push
mov
push
call
mov
test
js
cmp
je
mov
mov
lea
push
push
mov
call
cmp
jne
lea
call
lea
call
lea
call
mov
pop
pop
pop
add
ret
push
lea
mov
call
mov
mov
lea
push
push
mov
call
mov
test
js
mov
cmp
je
mov
mov
add
push
mov
push
push
mov
call
lea
call
jmp
push
mov
and
mov
mov
sub
push
mov
test
push
push
movl
jne
push
mov
call
add
push
mov
call
mov
add
lea
push
mov
mov
push
push
push
mov
movl
call
mov
mov
mov
add
test
je
mov
test
je
jmp
lea
mov
test
je
mov
xor
nop
cmpw
je
xor
test
jne
add
add
jmp
cmp
je
mov
test
jne
xor
test
jne
mov
pop
pop
pop
mov
pop
ret
mov
jmp
test
je
mov
mov
mov
mov
cmp
je
movzwl
movzwl
sub
jne
jmp
sub
add
add
test
jne
jmp
mov
mov
push
push
call
add
test
je
mov
not
test
jne
mov
push
push
xor
call
add
push
mov
lea
mov
call
mov
cmp
je
mov
push
mov
lea
mov
call
mov
cmp
je
mov
mov
mov
cmp
je
mov
mov
call
cmp
je
mov
mov
mov
call
cmp
mov
je
mov
mov
push
call
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
lea
call
test
js
cmp
je
mov
mov
lea
call
lea
call
lea
call
mov
pop
pop
pop
mov
pop
ret
lea
call
lea
call
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
test
push
push
je
test
je
sar
mov
mov
mov
push
push
push
push
push
call
xor
lea
mov
test
jne
cmp
jl
pop
pop
pop
xor
pop
ret
mov
jmp
mov
call
test
jne
mov
mov
mov
mov
push
push
call
add
add
jmp
push
mov
sub
push
mov
test
je
mov
push
xor
mov
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
mov
push
call
lea
call
mov
pop
pop
leave
ret
cmpl
je
call
mov
cmp
jne
mov
test
je
mov
pushl
mov
push
call
ret
push
xor
call
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
push
push
push
je
mov
mov
mov
cmpl
je
xor
pop
pop
pop
pop
add
ret
mov
push
call
add
test
je
call
mov
test
mov
je
mov
mov
push
call
test
movl
je
add
push
push
add
test
js
push
call
add
test
je
mov
mov
call
mov
lea
call
cmpl
je
call
test
mov
je
mov
mov
mov
push
call
mov
test
je
mov
test
je
push
push
call
add
test
mov
je
add
push
call
mov
lea
push
lea
push
push
push
push
call
add
test
js
mov
test
je
mov
push
push
call
mov
push
mov
mov
push
push
movl
call
add
test
je
mov
mov
mov
push
push
push
call
test
js
push
call
add
mov
test
je
test
je
mov
mov
lea
call
lea
call
lea
call
jmp
xor
jmp
int3
sub
mov
xor
mov
push
push
mov
push
push
xor
push
lea
lea
push
push
movb
call
push
push
push
call
add
lea
push
movb
call
mov
cmp
lea
je
mov
shr
lea
cmp
jl
mov
cmp
je
mov
and
lea
mov
mov
mov
push
push
call
push
push
call
sub
jns
lea
xor
mov
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
mov
test
jne
mov
test
jne
lea
lea
push
lea
mov
mov
mov
movl
call
call
push
push
push
call
mov
cmp
je
testl
jne
mov
cmp
jne
push
mov
push
add
push
call
add
lea
call
mov
pop
pop
pop
pop
xor
xor
call
add
ret
push
push
mov
call
mov
cmp
je
cmp
je
push
call
add
push
call
add
mov
jmp
int3
int3
int3
int3
int3
int3
mov
mov
mov
and
sub
and
mov
and
sub
sub
sar
sar
add
add
mov
shr
shl
add
mov
and
lea
and
mov
shl
sub
push
not
and
call
inc
add
dec
sbb
rcrb
mov
call
test
js
mov
test
je
mov
push
lea
push
push
mov
movl
movl
movl
movl
call
add
pop
add
ret
mov
lea
push
mov
or
lock
dec
pop
je
ret
xor
inc
mov
mov
push
call
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
test
push
push
je
test
je
sar
mov
mov
mov
push
push
push
push
push
call
xor
lea
jmp
lea
mov
test
jne
cmp
jl
pop
pop
pop
xor
pop
ret
int3
int3
int3
int3
push
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
xor
pop
ret
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
sub
push
mov
xor
mov
mov
and
or
push
push
jne
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
mov
call
push
lea
call
mov
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
or
movl
jne
movl
mov
mov
mov
mov
push
push
push
push
mov
push
lea
mov
lea
mov
call
testb
jne
mov
mov
movsb
mov
add
sbb
je
mov
push
push
mov
push
push
push
lea
push
lea
push
mov
push
push
mov
mov
call
mov
push
push
push
lea
push
lea
push
push
mov
call
mov
add
testl
jne
cmpl
jne
add
mov
cmp
mov
mov
mov
mov
mov
mov
jne
cmp
jne
mov
mov
mov
mov
lea
mov
push
lea
mov
mov
push
push
call
mov
mov
mov
mov
mov
cmp
je
mov
mov
xor
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
lea
call
mov
add
mov
add
add
add
mov
lea
sub
mov
movl
jmp
mov
add
lea
push
mov
call
add
add
mov
lea
call
test
jne
mov
mov
cmp
jne
mov
mov
cmp
jne
cmpl
mov
jne
push
mov
call
mov
mov
cmp
jne
andl
xor
pop
pop
pop
mov
pop
ret
mov
and
or
je
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
movl
movl
mov
push
call
jmp
mov
cmp
jne
movl
mov
cmp
jne
xor
push
push
mov
push
mov
push
push
mov
push
mov
push
push
push
push
lea
push
call
jmp
xor
cmp
sete
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
push
push
je
cmp
je
mov
mov
test
jne
cmp
je
test
jne
cmp
je
cmp
je
cmp
je
xor
mov
pop
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
add
mov
cmp
jne
add
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
add
mov
cmp
jne
mov
cmp
jne
add
jmp
int3
int3
int3
int3
int3
int3
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
xor
ret
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
ret
mov
pushl
mov
pushl
add
push
call
movsbl
add
and
ret
mov
test
je
push
mov
push
lea
movsl
movsl
movsl
movsl
pop
pop
xor
inc
ret
int3
push
mov
mov
test
push
jne
mov
test
je
mov
test
je
push
mov
test
jne
mov
mov
mov
call
lea
mov
mov
test
jne
test
movl
mov
jne
mov
mov
pop
pop
mov
xor
pop
ret
mov
pop
mov
xor
pop
ret
call
lea
call
mov
test
je
out
inc
add
mov
xor
pop
ret
push
mov
sub
andl
push
push
push
push
mov
push
lea
push
mov
call
test
jne
lea
call
mov
jmp
call
test
jne
push
call
test
pop
je
andl
andl
mov
push
push
mov
push
mov
call
test
jne
jmp
mov
lea
mov
add
lea
cmp
je
cmpl
jne
lea
call
mov
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
inc
and
cmp
jae
lea
cmp
ja
cmp
jb
mov
cmp
lea
jne
mov
test
jne
test
je
mov
cmp
jbe
and
mov
movb
mov
test
jbe
mov
push
lea
push
add
push
call
add
pop
pop
pop
mov
xor
call
add
ret
cmpl
jg
mov
sub
jmp
and
push
push
mov
call
test
push
push
call
mov
je
je
push
jle
add
add
add
add
add
mov
mov
add
shlb
gs
pop
leave
leave
add
mov
out
xchg
in
add
nop
jb
sahf
add
add
add
call
pop
gs
add
add
iret
addl
add
roll
add
pop
add
cli
mov
insb
call
add
cmpsb
mov
pop
add
add
push
js
add
movsl
mov
add
js
scas
mov
test
add
add
loopne
mov
push
aam
out
add
fldl
add
lock
add
popa
loopne
mov
add
xchg
test
jecxz
add
add
fsub
push
mov
add
push
push
push
push
lea
push
call
nop
lret
test
testb
add
mov
insb
xchg
loopne
add
add
test
add
push
add
std
add
push
add
xchg
mov
push
add
shlb
aam
test
add
aad
pop
add
push
add
fwait
lret
les
pop
movl
push
lea
push
push
call
push
imul
pop
jns
fadds
push
add
add
mov
scas
js
stc
addb
in
enter
mov
mov
mov
cmpsl
add
lret
add
add
imul
fnstcw
notl
add
add
add
fstpt
mov
lods
movsl
testb
popl
add
lods
mov
aam
bound
popl
push
push
lea
push
push
call
add
add
lock
add
jge
lock
add
out
jne
jbe
pusha
add
xlat
add
push
add
add
jge
add
sti
add
add
mov
mov
xorl
mov
xchg
jbe
out
mov
lret
mov
push
enter
add
fwait
loope
add
shll
mov
lea
pop
push
push
push
push
push
lea
push
push
push
call
out
clc
in
add
pop
imul
add
test
pop
addr16
clc
loop
add
movb
add
not
push
add
test
xor
icebp
xchg
add
lcall
stos
out
add
in
jae
add
repnz
cltd
xchg
nop
fistl
leave
add
add
add
pop
xchg
mov
lds
xchg
jmp
clc
push
xchg
pusha
pop
movsl
add
mov
fnstsw
sbb
push
push
call
push
push
lea
push
push
push
push
lea
push
call
mov
pop
add
mov
add
fdivl
in
add
xchg
add
add
xorb
adcb
pushf
stc
scas
add
stc
mov
pop
les
pop
add
roll
add
in
add
cmpsb
notl
out
add
hlt
jno
movsb
aam
cmpl
imul
leave
add
mov
outsl
push
lods
pop
sub
add
add
sbb
call
push
lea
push
push
push
call
loope
add
add
mov
pop
loope
mov
or
jecxz
add
rolb
mov
out
in
mov
add
add
pop
add
stos
mov
loope
mov
movsb
mov
popa
add
popa
test
insb
test
ja
in
test
jle
add
mov
add
lods
in
add
mov
lea
pop
push
call
jmp
push
push
push
push
push
lea
push
push
push
call
jle
add
add
jecxz
push
add
add
insb
add
push
add
add
add
insb
rolb
add
add
add
in
fildl
add
xlat
add
add
mov
imul
mov
fld
mov
add
jge
loopne
scas
ret
add
mov
lea
pop
ret
mov
mov
push
push
push
call
add
xchg
movl
out
pop
xlat
sti
int3
mov
in
mov
movsb
sti
jns
test
add
add
add
push
std
add
push
mov
pop
iret
gs
add
xchg
leave
out
lods
loop
add
add
out
pop
add
mov
jb
mov
jle
add
pusha
add
mov
add
add
mov
lea
pop
add
push
push
push
lea
push
push
push
push
lea
push
push
call
mov
add
lds
jp
mov
in
add
add
push
cld
add
std
mov
add
push
mov
push
in
cltd
fdiv
mov
pop
mov
les
add
xchg
hlt
add
add
testb
pop
mov
add
add
cmpsb
add
add
and
add
add
push
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
push
call
add
push
movsb
pop
andb
scas
pop
pop
add
lock
xchg
add
fsubrl
stos
frstor
in
loop
add
cltd
enter
jb
test
jle
call
rclb
push
add
repnz
mov
test
lahf
add
jecxz
fs
add
jp
hlt
lea
pop
mov
push
push
push
push
lea
push
lea
push
call
leave
mov
filds
add
andb
add
mov
add
out
add
add
pop
jbe
add
lcall
fs
add
cmc
cltd
add
add
stos
filds
add
imulb
add
lcall
add
add
mov
loop
xchg
cltd
add
add
add
lods
push
imul
jns
out
gs
mov
leave
pop
jne
mov
lea
pop
xor
push
push
lea
push
push
push
push
push
call
imul
addr16
mov
fsubs
jno
loope
mov
loopne
add
enter
fisubl
add
add
out
jno
add
mov
add
call
out
mov
add
pop
add
xchg
int
lods
mov
add
add
pop
cwtl
loop
add
out
orl
add
push
push
push
call
mov
add
mov
add
xchg
std
jnp
add
testb
add
test
add
fiadds
add
add
pop
add
in
roll
rcrl
andl
pop
add
adc
add
test
lret
fldl
sahf
mov
add
loopne
add
xchg
add
add
add
scas
add
xchg
add
xchg
add
cld
mov
lea
pop
add
call
push
push
call
add
add
fisttps
add
mov
mov
add
mov
mov
mov
stc
add
add
add
lock
imul
add
mov
add
std
add
pop
hlt
add
add
addl
je
xchg
rcll
pop
jmp
pusha
add
mov
aad
mov
rolb
stos
xchg
mov
lea
pop
mov
push
push
push
lea
push
push
push
push
push
push
push
call
jp
mov
add
add
imulb
add
add
imull
popf
add
jnp
add
rorb
imul
testb
negb
enter
xchg
add
add
iret
mov
add
popa
lcall
xchg
roll
add
add
add
mov
jns
add
js
aam
bound
xor
push
push
lea
push
push
lea
push
call
add
imull
add
pop
test
add
jl
add
popa
scas
rorl
add
sbb
jecxz
mov
add
nop
mov
add
xor
mov
flds
jl
xchg
add
into
out
mov
mov
lock
push
add
test
fldl
mov
fbstp
add
lea
pop
add
push
push
not
inc
push
or
inc
add
ror
sub
shr
pop
lea
inc
pop
push
push
push
push
push
push
push
push
call
add
add
add
add
add
add
test
xchg
add
add
movsl
lock
test
fisubrs
xchg
loop
fldenv
add
pushf
add
add
add
xchg
push
popf
mov
add
add
hlt
add
push
add
cwtl
add
add
outsl
lds
mov
mov
add
pop
pushl
push
push
push
push
push
push
call
add
testl
data16
aad
mov
cmpsl
test
data16
xchg
jbe
loopne
add
pop
add
push
push
mov
out
add
lret
add
sti
jge
loop
xorl
xchg
mov
jmp
fildl
fmul
mov
jno
fistpll
add
add
xchg
pop
add
mov
mov
lea
pop
call
push
push
lea
push
push
push
lea
push
push
call
add
add
addr16
lock
jmp
add
pop
add
add
mov
mov
xchg
movsb
cmpsb
add
add
imul
add
push
push
addl
add
les
xchg
jge
frstor
add
sahf
lock
add
add
leave
aam
mov
pop
cmpsb
add
in
jl
mov
mov
lea
pop
mov
push
push
push
push
push
call
add
lods
mov
ljmp
mov
jb
addl
iret
add
add
add
sbbl
rcrb
rorl
push
add
imul
add
add
lcall
xorl
into
add
add
mov
scas
stos
jl
xchg
testl
lea
pop
movl
push
push
push
call
add
arpl
lahf
out
lret
fwait
add
add
pushf
stos
loope
imul
lea
add
push
push
add
add
out
lods
cli
jmp
cld
rolb
add
add
add
add
add
add
in
add
push
lret
movl
mov
fcmovnb
call
insb
add
enter
mov
lea
pop
lea
push
pushl
push
push
push
push
push
push
lea
push
push
call
lret
add
add
std
testl
mov
js
add
jnp
aad
jb
movb
add
jb
add
add
mov
add
pushf
fiaddl
shl
ja
mov
add
pop
sti
push
sar
add
add
jno
push
jnp
fwait
fwait
roll
nop
add
jmp
fadds
jo
fists
add
mov
lea
pop
pushl
push
push
push
call
cld
mov
add
enter
icebp
add
add
popa
imul
pop
add
loopne
lock
add
add
out
mov
mov
fs
pushf
adc
movb
shl
add
mov
add
add
pop
imul
jnp
add
mov
mov
fisubrs
add
add
add
mov
lea
pop
call
push
lea
push
lea
push
lea
push
push
push
push
push
push
call
push
add
add
push
add
pop
ret
fadds
xorb
add
mov
add
add
fs
add
add
lret
add
in
add
add
xchg
add
add
pop
out
add
xchg
out
add
add
fwait
add
add
lods
lcall
pop
pushl
pushl
call
push
push
ror
ror
push
sub
add
shl
sub
dec
lea
shr
inc
pop
not
ror
not
pop
push
push
push
push
lea
push
push
push
push
push
push
call
add
pop
mov
mov
cmpsb
add
roll
lret
clc
imulb
add
lret
mov
add
add
add
shlb
jne
roll
ffreep
ja
in
loope
add
sahf
cmpsb
add
pop
add
call
jnp
mov
jp
add
mov
add
cld
lea
pop
pushl
push
push
lea
push
call
xacquire
jmp
add
add
push
add
add
sahf
xchg
add
add
push
add
add
add
add
cmc
cmpsl
fmul
fidivs
add
in
add
test
into
mov
push
jecxz
add
int3
add
add
add
roll
je
cmc
pop
add
pop
add
pop
call
push
push
push
shr
sub
ror
lea
push
or
inc
add
ror
sub
add
lea
pop
not
dec
not
xor
pop
push
push
push
push
lea
push
push
push
push
call
movl
call
lods
mov
insb
pusha
lds
enter
cltd
les
jns
popf
subb
add
roll
lods
into
add
loope
add
push
jne
imul
pop
add
in
pusha
hlt
xchg
movsb
ficomps
sar
fiaddl
xorl
add
add
rcrb
add
addb
add
testl
push
push
push
push
push
push
push
push
call
mov
mov
add
add
loope
test
add
add
sbbl
add
push
mov
ret
add
add
stos
lea
add
add
jns
testb
mov
add
cwtl
xchg
mov
mov
add
in
add
mov
fwait
add
mov
scas
add
add
pop
push
call
mov
push
push
push
call
mov
mov
add
int
mov
leave
add
scas
lods
add
cmpb
add
add
add
in
pop
add
mov
jb
jae
stos
fcompl
add
aam
add
mov
idivb
add
push
add
fldl
mov
add
fwait
lock
insb
mov
lea
pop
push
push
push
push
push
push
lea
push
call
fiadds
adcl
in
add
pop
je
mov
xchg
add
call
jmp
rcl
arpl
cmpsb
add
add
faddl
lods
add
add
mov
arpl
mov
out
data16
into
lahf
pop
add
add
add
pop
mov
add
add
push
push
lea
push
push
lea
push
push
call
cmc
add
test
push
mov
xchg
int3
add
add
add
add
add
out
jb
mov
add
add
fadds
loope
add
add
pushf
scas
add
test
mov
add
std
lret
loop
pop
ljmp
add
fs
mov
xchg
add
jo
fs
xchg
xchg
lods
bound
sbb
ret
popf
pop
add
mov
push
push
push
push
push
lea
push
call
mov
pop
mov
out
cltd
push
mov
mov
mov
add
fwait
add
mov
mov
movl
stos
lods
repnz
testl
mov
add
add
add
add
add
push
xchg
pop
rolb
mov
mov
mov
push
roll
ret
iret
add
add
add
pop
out
add
lea
xchg
push
cld
lea
pop
xor
push
push
call
add
stos
pop
add
jge
xchg
add
add
lods
jo
add
test
loop
add
pop
in
pushf
mov
lock
mov
jo
mov
clc
add
xchg
add
std
push
add
pop
add
lcall
popf
mov
out
jp
jmp
mov
add
lea
pop
add
push
push
call
jbe
add
add
add
pop
cmp
in
add
add
cltd
add
filds
jge
add
rcl
xchg
add
mov
pop
add
add
mov
add
test
add
lea
add
movsb
jno
sahf
arpl
pushf
mov
je
mov
out
add
in
add
rolb
add
cmpsl
stc
mov
add
scas
mov
lea
pop
add
push
push
push
call
add
add
add
add
imul
lea
add
add
fbstp
cld
pop
std
sti
addb
rclb
add
mov
rorb
add
ljmp
in
std
add
into
xlat
add
add
push
imul
push
mov
push
push
lea
push
push
push
push
call
mov
pop
mov
add
add
fcomps
add
mov
std
add
jl
add
loope
add
add
cmpb
add
push
add
std
cmpsb
mov
push
xchg
add
mov
clc
cmc
add
icebp
mov
add
lahf
aad
push
add
mov
xchg
add
out
in
jmp
jle
mov
mov
lea
pop
xor
push
push
push
push
push
push
push
push
push
call
mov
mov
add
in
add
push
cli
add
shrb
mov
arpl
add
mov
lahf
mov
add
mov
add
stc
pop
andb
shlb
add
out
test
ret
add
pop
lret
cmpsb
add
add
xchg
movsb
add
leave
add
add
mov
lea
pop
add
push
lea
push
push
lea
push
push
lea
push
call
add
add
out
hlt
jl
sti
add
add
mov
clc
push
push
add
mov
add
testl
fsubp
add
push
outsl
add
aad
fadds
stos
pop
test
add
add
or
add
jecxz
mov
mov
mov
push
add
lods
bound
mov
lea
pop
add
push
push
lea
push
push
call
movl
add
lret
add
add
movsb
mov
iret
add
imul
add
std
add
add
jne
fwait
cmpsb
mov
add
jnp
ljmp
mov
rolb
add
pushf
mov
jecxz
add
add
les
cmpsb
data16
mov
jne
add
lahf
pop
add
add
stos
pop
cwtl
sarb
add
add
rolb
add
lea
pop
pop
mov
xor
push
lea
push
push
push
call
xchg
add
pop
jb
add
add
gs
add
popf
clc
jnp
add
loope
jnp
add
add
add
popf
pop
add
out
add
add
add
mov
stos
mov
std
add
add
rol
out
jbe
mov
lret
add
aad
stc
leave
notb
push
rolb
fisubrs
add
add
test
add
add
add
add
add
add
int3
lea
pop
push
mov
push
push
push
lea
push
call
mov
rolb
std
add
sarb
mov
add
pop
mov
push
push
add
jae
add
fidivs
add
push
add
add
add
ja
movb
add
fwait
std
cmc
mov
add
mov
add
popa
add
ja
mov
jne
add
jge
les
add
push
push
call
xchg
xchg
add
test
rolb
push
mov
mov
add
add
stos
call
add
shrl
enter
frstor
outsl
mov
add
add
add
push
add
jb
pop
add
fisubrs
loope
jbe
push
mov
in
mov
mov
lea
pop
add
push
push
call
add
add
pop
jle
mov
arpl
mov
add
mov
mov
xchg
jecxz
add
jle
sti
mov
les
jnp
pop
add
xchg
mov
add
jne
pushf
add
add
imul
add
cltd
enter
rclb
add
scas
jae
add
jl
fwait
add
popf
mov
jecxz
rolb
popl
jmp
shr
add
xchg
add
hlt
lea
pop
sub
push
push
push
lea
push
lea
push
lea
push
lea
push
push
call
xchg
push
add
add
jp
add
add
std
add
add
addl
add
xchg
aad
pop
jle
add
stos
ja
pop
out
clc
rclb
mov
movb
add
add
add
add
loop
add
add
add
add
add
hlt
add
push
ret
mov
sahf
icebp
fcmove
add
ja
les
push
lea
push
call
bound
mov
xchg
xchg
cltd
jnp
mov
add
fld
cwtl
add
xchg
shlb
iret
add
mov
add
add
test
popl
leave
mov
sti
lods
fimuls
push
add
icebp
add
add
in
fiadds
add
shlb
pop
leave
lds
add
push
add
movsb
push
add
jp
add
add
jl
push
jne
add
xchg
add
mov
pop
rep
push
push
push
lea
push
lea
push
lea
push
push
push
push
call
scas
add
loop
lret
add
xchg
loop
push
cli
add
jbe
xchg
add
lods
mov
add
leave
add
add
add
cmpsb
shrb
out
add
add
bound
add
add
add
mov
add
add
add
les
cmc
scas
mov
add
incb
add
mov
mov
lea
pop
pop
mov
add
push
lea
push
push
lea
push
push
push
lea
push
push
push
call
add
add
add
jbe
scas
sub
loopne
add
add
cmc
add
cld
add
hlt
xlat
add
mov
popf
add
arpl
bound
add
add
int
add
jno
add
imul
out
add
sarb
add
fmull
ret
add
add
add
mov
xor
push
push
push
push
push
lea
push
call
add
add
in
add
mov
mov
add
push
add
hlt
add
mov
add
add
add
pop
test
add
fwait
pop
in
lcall
mov
add
popa
fildll
icebp
movl
icebp
fs
xchg
mov
in
mov
lea
pop
mov
xor
push
push
call
add
loope
pushf
xlat
cmpsb
ja
add
imul
mov
icebp
mov
pop
add
faddp
push
mov
push
loopne
add
loopne
add
sub
mov
xchg
jmp
xchg
add
add
add
test
add
add
mov
xchg
stos
add
pop
pop
xchg
mov
add
pop
mov
xor
push
push
call
cmpsl
add
add
add
mov
add
ror
je
add
add
add
incb
pushf
pusha
mov
add
add
popf
add
add
push
shl
add
out
pop
push
xchg
add
jl
pop
add
jp
nop
add
add
add
popf
mov
mov
movsb
mov
add
add
ljmp
mov
lea
pop
add
push
push
push
lea
push
push
call
add
loope
add
mov
stos
jb
jb
add
lahf
lret
mov
aam
add
mov
push
mov
add
add
mov
jb
add
xchg
add
jbe
add
add
mov
bound
lods
fimull
outsl
fiadds
add
mov
stos
jbe
add
cmc
push
add
pushf
add
jle
cli
arpl
add
add
add
mov
lea
pop
add
push
lea
push
push
push
call
jl
leave
rcr
jecxz
add
std
add
push
in
pusha
repnz
testl
add
add
test
test
mov
jmp
pop
les
add
test
jmp
out
add
mov
pusha
jno
insb
add
jmp
add
add
add
add
add
jbe
mov
add
add
add
add
popa
adc
fsubrs
repz
out
add
push
xor
add
dec
shl
sub
shl
inc
sub
pop
xor
add
sub
pop
push
push
push
lea
push
push
push
lea
push
lea
push
push
push
call
add
add
fildl
test
mov
add
je
popf
add
int
add
add
add
add
in
add
clc
add
scas
add
call
add
lret
notb
in
push
fwait
rolb
add
mov
jne
mov
pop
incb
add
fucomip
pop
lds
nop
mov
lea
pop
pushl
push
push
push
push
push
lea
push
push
call
add
mov
cli
in
add
add
roll
test
add
out
mov
add
mov
add
lds
loopne
fadds
pop
jmp
loopne
jnp
in
std
mov
add
add
sahf
add
add
jns
push
insb
mulb
lcall
scas
xchg
add
add
xlat
push
loope
pop
in
popf
cltd
loop
mov
lea
pop
call
push
push
push
sub
dec
push
or
inc
add
rol
sub
sub
rol
rol
pop
not
pop
push
lea
push
push
push
call
add
add
add
imul
pop
add
add
add
lock
mov
add
add
pusha
pop
add
add
add
sahf
add
lahf
add
stc
out
scas
lds
add
in
mov
push
jno
push
cmpb
mov
add
in
mov
add
xchg
testl
adc
push
push
push
push
push
push
push
push
call
loope
add
add
mov
iret
add
xchg
hlt
add
add
jno
mov
add
mov
add
add
add
add
loopne
add
add
add
mov
mov
add
jmp
addl
add
aam
stc
add
lahf
test
mov
cld
lea
pop
push
call
push
push
push
lea
push
push
push
call
jae
add
imul
xchg
add
je
add
add
ja
add
add
out
cmpsl
xchg
aad
lea
jns
test
cmpsb
add
pop
movsb
push
add
push
movsl
add
pop
jecxz
add
mov
out
lock
add
lock
add
mov
lea
pop
mov
push
lea
push
lea
push
call
add
add
cli
sti
add
in
add
mov
add
int
add
jnp
pop
shrl
test
mov
add
add
imul
add
add
add
add
add
jne
out
iret
sar
add
add
push
add
into
add
outsl
jge
fwait
add
je
add
out
add
add
add
rcrl
lret
insb
mov
sbbb
pop
push
push
push
lea
push
push
push
lea
push
push
call
shrb
movsl
nop
add
push
add
aad
add
out
push
in
add
add
xabort
push
add
add
add
add
add
add
lcall
jno
lea
add
add
push
mov
cmpsb
add
jno
roll
std
aad
xchg
add
add
into
addb
add
lock
jno
add
lahf
jae
add
fcoms
addr16
push
mov
add
push
push
push
lea
push
push
push
push
push
push
call
push
add
cwtl
mov
enter
mov
les
mov
add
enter
add
push
xchg
add
jne
add
jae
add
push
int3
add
add
fwait
cltd
add
enter
jge
call
aad
out
insb
cwtl
mov
add
xchg
lods
jae
mov
loope
add
jb
movsb
add
add
mov
lea
pop
add
add
mov
xor
push
lea
push
push
call
negl
std
sti
mov
in
add
fcoms
leave
mov
add
outsl
fndisi(8087
mov
xlat
outsl
addb
or
add
add
in
iret
pop
jmp
pop
push
cmpl
add
jnp
aam
add
mov
xchg
int3
jbe
leave
int
ret
in
push
jmp
push
aam
bound
add
push
mov
xor
push
lea
push
lea
push
lea
push
push
push
call
add
jle
add
in
jne
add
mov
add
add
pop
pop
add
mov
mov
add
add
add
jnp
addb
add
add
push
add
add
lods
add
add
jge
insb
lods
add
jb
mov
enter
pop
add
arpl
add
xchg
add
jp
pop
jae
jmp
movl
bound
pop
add
push
sub
lea
lea
pop
pop
mov
push
push
lea
push
push
push
push
call
push
mov
popa
scas
push
shr
push
movsb
rolb
pop
pop
xchg
pop
add
xchg
add
add
add
insb
movsl
nop
add
out
add
mul
add
jnp
mov
mov
push
push
add
bound
mov
in
add
ja
gs
add
add
xlat
mov
sahf
add
adc
xor
push
push
push
push
lea
push
lea
push
push
call
add
stc
add
mov
mov
push
add
add
add
add
add
add
add
into
jbe
mov
popa
add
mov
add
imul
add
add
movsb
jp
leave
js
add
add
add
mov
add
aad
jmp
jne
push
jmp
les
les
add
push
add
add
sub
add
pop
rep
push
lea
rol
dec
pop
mov
xor
push
add
ror
sub
sub
pop
or
je
push
dec
pop
mov
push
push
lea
push
lea
push
push
lea
push
call
notl
loopne
movsb
add
stos
loopne
mov
mov
outsl
loop
add
js
add
add
add
in
add
mov
enter
jge
ret
xchg
mov
push
add
in
add
push
nop
add
push
insb
add
fcmovu
aam
icebp
je
mov
pop
jmp
add
filds
mov
push
mov
mov
lea
pop
xor
push
push
lea
push
push
lea
push
push
call
mov
fiadds
jp
pop
mov
jnp
add
push
cwtl
add
clc
add
mov
loop
mov
pop
add
add
pop
pop
shlb
test
mov
jo
add
add
push
add
lods
mov
loopne
add
add
add
add
sbb
les
add
push
sub
pop
mov
xor
push
push
lea
push
push
push
push
call
mov
je
add
jbe
add
push
mov
add
stc
aad
mov
int3
hlt
roll
bound
scas
out
mov
add
mov
add
add
add
add
add
add
loop
push
add
rcrl
xchg
xchg
add
lahf
in
outsl
add
pop
add
jmp
lahf
sahf
xchg
lahf
mov
int
mov
lea
pop
add
add
push
push
lea
push
push
push
push
push
lea
push
lea
push
call
iret
outsl
shlb
mov
xchg
xchg
mov
cli
add
mov
in
add
mov
jge
add
pop
add
imul
mov
push
aad
jl
out
add
andb
push
add
jb
fadds
add
ret
jmp
add
add
add
sahf
add
icebp
cmpsb
xchg
mov
test
add
add
add
mov
and
inc
and
sti
push
dec
pop
add
push
shr
sub
pop
pop
rep
push
sub
sub
pop
mov
xor
push
pop
or
je
push
push
push
lea
push
lea
push
lea
push
push
call
add
xchg
add
popa
loop
add
add
pusha
jecxz
cltd
add
add
add
movl
movsl
add
repnz
into
in
imul
mov
add
rolb
mov
loop
out
add
bnd
jae
mov
xchg
mov
lods
bound
mov
add
mov
lea
pop
mov
push
lea
push
push
push
push
push
push
push
push
call
add
test
push
add
add
insb
push
add
add
push
add
sar
in
push
popf
xchg
xchg
loop
jae
in
mov
js
lds
add
pop
sahf
add
add
mov
mov
add
call
add
pop
jne
outsl
pop
cli
mov
out
outsl
leave
mov
pop
add
push
push
call
in
js
test
add
stc
scas
add
add
cmc
into
jl
add
movsb
add
add
add
xchg
arpl
xchg
rolb
popa
mov
xchg
add
mov
add
add
add
nop
loope
je
cld
xchg
add
add
jno
add
cmpsb
loopne
add
add
mov
test
fs
mov
pop
mov
jle
add
add
add
pop
add
rep
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
pushf
leave
rclb
mov
in
adcl
roll
out
testl
add
add
loopne
cmpsb
test
add
test
pop
in
stc
mov
add
popa
out
mov
push
add
add
mov
test
lock
arpl
push
lahf
mov
pop
popa
mov
lea
pop
pop
push
push
sub
shr
push
or
not
add
sub
pop
shr
not
pop
push
shr
pop
pop
push
xor
lea
add
pop
mov
push
add
sub
lea
add
pop
mov
mov
jmp
push
push
call
add
add
call
add
push
jno
cltd
cmc
mov
add
add
jnp
add
bound
pushf
filds
add
lret
add
rolb
pop
pop
add
add
aad
add
fwait
add
mov
scas
mov
leave
flds
lahf
loop
in
add
xchg
jo
add
mov
xchg
pop
orb
mov
add
pop
push
push
lea
push
push
push
push
call
in
ljmp
imul
mov
les
vaddsd
push
insb
mov
add
add
mov
lret
add
out
jmp
fadds
subb
in
push
imul
jp
mov
lock
mov
iret
jge
imul
add
adc
mov
add
push
ror
not
pop
push
push
inc
pop
push
push
not
sub
shr
pop
push
push
push
add
xor
shl
dec
pop
mov
pop
pop
push
rol
pop
pop
push
sub
lea
shr
pop
pop
push
sub
not
sub
pop
leave
push
push
lea
push
push
push
push
push
push
call
add
add
repnz
ficoms
pop
lret
faddl
repnz
add
xchg
xchg
pop
add
pop
add
jecxz
popl
leave
scas
ret
repnz
jle
add
add
movsb
add
testb
add
in
fdivp
pusha
fwait
jbe
add
add
add
test
lods
jecxz
pop
cmpsl
cwtl
imul
add
add
jmp
add
lret
add
pop
ret
push
mov
push
ror
pop
add
push
push
push
lea
push
push
push
lea
push
push
push
push
lea
push
push
call
mov
add
xlat
add
add
rol
mov
add
ljmp
in
push
popa
add
jmp
loopne
lds
test
mov
ficoms
fsubl
add
out
xchg
add
add
add
repnz
mov
pushf
mov
fcompl
sub
push
add
sub
lea
pop
push
movl
addl
push
rol
ror
rol
shl
pop
test
je
push
push
push
push
push
push
push
push
push
call
mov
add
gs
add
pusha
add
add
lret
mov
add
scas
cmc
mov
movb
add
add
sahf
cmpsb
add
enter
shrl
mov
xchg
jmp
mov
fs
add
cmpsb
call
add
movb
push
mov
test
add
jo
add
outsl
jo
add
and
mov
pop
push
rol
dec
add
pop
pop
pop
push
xor
pop
pop
push
inc
dec
pop
leave
push
push
push
push
lea
push
lea
push
push
call
mov
add
add
pushf
xchg
subb
in
add
add
ret
mov
jbe
mov
sahf
fiadds
push
jae
add
pop
mov
mov
jns
mov
ja
add
add
shrb
mov
call
les
push
mov
js
stos
add
add
imul
ret
push
push
push
lea
push
push
push
call
push
mov
push
lock
flds
push
add
loope
add
roll
add
add
movsl
ret
sahf
movl
add
mov
cmc
leave
add
add
mov
add
lea
std
in
add
mov
add
add
add
add
int3
lea
pop
push
push
rol
add
pop
mov
push
rol
pop
add
push
rol
pop
push
push
not
add
pop
push
push
push
add
lea
pop
push
push
lea
sub
pop
testl
addl
push
push
sub
sub
dec
pop
call
mov
push
push
push
call
mov
ljmp
add
test
in
mov
add
jbe
add
push
add
jmp
jmp
fsubrs
dec
lods
lret
mov
hlt
mov
add
xchg
add
add
mov
icebp
add
add
add
push
ret
pop
add
add
mov
add
add
jns
mov
sahf
mov
lea
pop
pushl
push
push
push
lea
push
lea
push
push
push
push
push
call
js
mov
mov
incb
popf
loop
movsl
add
add
add
add
add
ljmp
cmpsl
add
mov
roll
mov
add
out
jp
scas
add
add
subb
in
scas
add
fwait
add
mov
mov
aad
roll
xchg
test
add
add
pop
pop
pop
shlb
add
add
mov
lea
pop
call
push
push
push
push
push
push
push
push
call
add
add
add
add
add
jl
orb
add
xchg
jmp
stc
push
fwait
jle
add
xchg
movb
push
push
mov
lret
test
rolb
add
addl
mov
add
add
add
lea
lea
push
test
add
hlt
lea
pop
cmpl
jne
push
ror
dec
add
pop
pop
pop
push
shr
pop
pop
pop
leave
push
xor
pop
ret
push
push
lea
push
push
push
push
lea
push
lea
push
call
add
roll
add
add
add
popa
add
sbb
mov
push
jo
pop
lods
xorl
imul
push
mov
aam
add
add
pop
jae
add
popa
mov
add
shll
add
add
ja
add
add
mov
lea
pop
push
mov
add
push
lea
push
call
filds
xchg
mov
xchg
add
add
test
add
les
lret
add
add
pop
add
add
andb
aad
call
push
icebp
add
add
fld
test
gs
add
popf
add
bound
pop
add
add
add
adcb
lea
pop
push
push
push
push
push
lea
push
push
lea
push
push
push
call
add
add
add
add
cmc
add
add
iret
lret
add
fisttpl
leave
add
lahf
pop
add
xchg
fsts
mov
add
stos
add
xchg
outsl
jo
add
jmp
popf
xchg
mov
mov
add
ret
sbb
mov
push
mov
arpl
push
push
push
rol
shr
sub
inc
pop
push
movl
push
push
push
push
push
push
lea
push
call
mov
pop
mov
add
loopne
add
add
mov
add
mov
aad
clc
lahf
jecxz
push
into
bound
add
push
hlt
adc
neg
cmpsl
fldl
addl
add
lret
add
xchg
push
add
out
int
jmp
add
movsb
lods
mov
add
add
cmc
clc
jge
add
cld
mov
jnp
mov
lea
pop
call
push
push
push
push
push
call
add
push
add
mov
mov
add
mov
mov
mov
popf
je
add
jmp
mov
add
add
aam
call
imul
add
mov
jne
xchg
imul
data16
xchg
add
insb
push
popl
xlat
add
mov
cli
mov
add
in
subb
mov
lea
pop
push
call
push
push
push
push
push
push
push
push
push
call
add
mov
mov
jmp
add
add
jbe
fadds
add
into
cmpsl
mov
loope
add
outsl
mov
add
add
xchg
fiadds
add
mov
idivb
add
add
std
cwtl
pop
mov
stos
xchg
pop
pusha
add
stos
add
mov
mov
mov
push
add
xchg
add
add
fildl
add
add
fmull
insl
cld
add
push
lea
push
push
push
push
push
lea
push
call
mov
lret
mov
jecxz
shrb
add
pop
cld
add
add
int
add
lock
cwtl
add
loope
mov
mull
add
test
loope
add
push
jecxz
scas
test
add
add
hlt
imul
fistl
add
add
push
in
addb
add
cld
lods
leave
scas
xchg
add
mov
lea
pop
cmpl
jne
pop
pop
push
lea
push
push
lea
push
lea
push
push
push
call
fcompl
add
enter
shll
push
ljmp
pop
mov
add
add
add
add
mov
add
add
imul
add
mov
add
mov
add
test
mov
add
add
add
add
jno
mov
add
push
mov
mov
movl
std
add
jbe
add
push
pop
jae
add
lea
pop
pop
pop
push
push
push
push
push
push
call
fiaddl
mov
mov
add
pop
cmc
add
add
add
add
lods
cltd
data16
mov
add
int3
mov
enter
addr16
roll
pushf
cmpsb
mov
imul
insb
push
add
pop
je
add
add
aam
push
sarb
add
mov
testb
jne
cld
add
add
push
pop
xchg
mov
lea
pop
leave
push
shl
rol
pop
ret
push
push
push
push
push
push
push
lea
push
call
fidivrl
jne
add
add
mov
ror
xchg
jno
mov
add
jb
mov
test
into
jae
mov
mov
add
shll
add
mov
add
stos
test
xchg
add
pop
imul
fwait
lds
add
aam
lods
cli
addr16
add
js
add
pop
push
push
pop
mov
add
push
push
push
push
push
lea
push
push
call
xchg
add
je
movl
push
add
popa
add
add
movsb
jns
mov
outsl
mov
xchg
add
xchg
add
add
mov
mov
add
popf
push
add
loopne
leave
push
lods
repnz
repnz
out
push
add
stos
add
nop
out
test
push
loopne
xchg
roll
add
mov
fmull
push
push
push
lea
push
call
addb
faddl
add
pop
mov
iret
fwait
clc
fdivrl
jno
add
pop
icebp
call
add
imul
add
add
add
mov
mov
stos
loopne
out
test
mov
pop
cli
in
fsubp
jge
add
add
test
add
in
mov
ffree
mov
out
add
add
add
pop
push
push
push
sub
rol
pop
push
mov
push
lea
push
push
call
pop
xlat
in
out
mov
mov
jbe
jno
xchg
rcll
movsb
je
mov
outsl
add
add
add
je
test
sti
add
loop
add
int
add
icebp
lret
int3
add
push
pushf
xlat
mov
in
mov
roll
add
aam
in
add
mov
lea
pop
lea
push
xor
inc
pop
sub
mov
push
push
lea
push
push
call
pop
pusha
test
pusha
mov
add
cmpsl
add
add
xchg
mov
add
les
scas
add
sti
leave
sarb
jo
fiaddl
jge
popa
add
xchg
jo
add
in
pop
add
pop
mov
outsl
add
xchg
cli
jns
mov
scas
jle
movsl
xchg
xchg
add
fyl2xp1
push
jmp
add
rorl
mov
lea
pop
shr
push
xor
pop
add
mov
push
lea
push
push
push
push
call
popf
jns
aad
mov
mov
outsl
mov
mov
add
cmc
add
jge
icebp
mov
ljmp
add
addb
clc
rolb
fildl
out
jae
out
shl
add
add
mov
add
std
mov
add
add
lock
add
int3
call
adc
mov
push
lea
dec
pop
add
push
push
push
call
stos
add
add
je
add
mov
test
add
movl
add
xchg
incb
add
add
call
cmpsl
and
add
mov
hlt
sahf
pusha
add
add
pop
divl
add
in
cmpsl
add
aad
xchg
add
jns
add
fiaddl
jl
add
xchg
imul
add
mov
push
lea
push
lea
push
push
push
call
add
mov
shll
movsb
add
add
xchg
ret
push
add
insb
add
add
add
mov
add
xchg
add
add
rcl
mov
xorb
lret
lret
mov
mov
xchg
popl
add
insb
add
add
in
push
add
into
xchg
fadds
xchg
pop
shll
dec
aam
add
add
xchg
repnz
loopne
mov
lea
pop
mov
cmp
jne
cmp
jne
push
push
lea
push
lea
push
lea
push
lea
push
push
call
add
jecxz
add
add
push
jbe
lahf
add
push
push
push
mov
jne
add
add
out
imul
xorl
add
fldl
add
mov
cld
clc
scas
cwtl
mov
jo
jno
jnp
rcr
test
mov
add
mov
xchg
add
add
stc
cli
add
addb
add
pop
shlb
adcl
mov
lea
pop
mov
push
lea
push
push
push
push
push
call
add
std
pushf
aad
nop
lret
push
pop
mov
add
out
jns
call
sarl
pop
push
add
jge
lret
add
add
add
pop
in
add
push
adc
leave
add
scas
add
add
xchg
out
cmpsb
mov
lods
add
cltd
add
mov
pop
mov
nop
xchg
movsl
cltd
imulb
add
add
cmc
add
jno
jp
hlt
lea
pop
movl
push
push
lea
push
lea
push
push
lea
push
push
push
call
fstl
add
jne
add
in
nop
fldl
push
testl
test
add
mov
mov
add
lea
loope
mov
mov
in
jmp
rcrl
scas
add
movsl
jns
popf
jp
mov
mov
add
movl
fwait
cmc
fadds
add
leave
add
add
xchg
testl
aad
mov
and
jns
add
push
push
push
push
push
push
call
popa
lods
in
fwait
je
scas
popf
lea
add
jnp
add
add
add
jmp
add
add
add
mov
mov
aam
mov
lea
fildl
mov
add
test
push
add
mov
sti
add
imul
sarb
hlt
scas
iret
mov
lea
pop
mov
mov
sub
jne
push
push
push
push
push
push
push
call
mov
pop
test
add
jle
add
add
add
scas
adcb
push
add
aad
add
add
mov
add
mov
add
in
add
mov
xchg
push
loope
loop
lods
lds
scas
mov
add
add
add
imul
add
add
add
add
pop
mov
movl
jmp
push
lea
push
push
call
mov
add
xchg
into
out
add
add
out
add
lcall
add
ror
add
cld
movsb
add
movl
ja
lcall
nop
add
add
cli
test
add
add
push
mov
add
aad
add
insb
mov
fs
pop
addb
mov
xchg
stos
mov
lea
pop
mov
push
push
call
add
add
push
lret
add
jno
pop
stos
pop
add
add
iret
fistpll
mov
test
add
mov
add
popf
add
scas
ficomps
add
mov
push
fwait
add
mov
add
enter
mov
jl
add
add
push
imulb
stos
mov
xchg
add
push
add
add
mov
into
add
pop
mov
push
push
push
push
push
push
lea
push
push
lea
push
push
call
push
mov
fstpl
add
sar
lahf
add
add
popf
add
pushf
add
mov
add
mov
add
push
jmp
add
add
mov
mov
mov
ljmp
add
test
aad
jnp
mov
pop
enter
data16
add
mov
mov
lea
pop
cmp
jne
push
push
push
push
push
push
push
push
call
add
clc
imul
arpl
stc
mov
add
mov
ljmp
pop
add
movl
outsl
pushf
add
add
jle
add
mov
jns
cld
add
mov
sarb
pushf
test
add
jmp
outsl
add
iret
mov
jne
sarb
jbe
add
add
mov
lea
pop
mov
movl
jmp
push
push
push
lea
push
push
push
push
push
push
call
add
xchg
add
add
popa
pop
lock
xchg
cltd
pop
pop
mov
add
add
add
add
out
add
xchg
cmpl
mov
mov
xchg
add
add
mov
test
add
add
add
mov
xchg
add
lret
add
add
fsub
jp
mov
lea
pop
mov
cmpw
jne
mov
push
shr
add
xor
pop
movl
jmp
pushl
push
rol
inc
pop
pop
mov
push
push
push
push
push
push
push
push
push
push
call
in
arpl
les
out
popa
mov
stc
mov
mov
add
add
jbe
mov
xchg
add
add
stos
jae
fiaddl
mov
add
repnz
leave
mov
test
add
cmpsl
push
add
js
test
mov
mov
mov
add
add
add
stos
xchg
movsb
add
test
mov
leave
test
sub
jecxz
add
add
add
aam
bound
pop
mov
push
lea
push
lea
push
lea
push
push
lea
push
push
call
cmpsl
pop
add
jecxz
testb
leave
add
icebp
addb
test
mov
mov
test
mov
loopne
mov
mov
add
add
mov
add
mov
add
jnp
add
add
cltd
insb
mov
mov
lcall
jecxz
push
add
flds
jl
shlb
mov
lea
pop
mov
push
push
shl
push
xor
add
shl
sub
xor
sub
dec
inc
pop
shl
sub
pop
push
push
lea
push
push
push
lea
push
call
lcall
pop
mov
jl
stc
lret
xchg
ret
jno
push
scas
add
mov
add
int3
fiaddl
add
push
cwtl
add
add
add
test
add
mov
faddl
test
insb
enter
pop
movl
lret
pop
add
add
shl
cmpsb
fadds
rolb
pop
push
mov
xchg
add
add
add
aam
bound
pop
push
call
cmpl
je
push
push
shr
lea
add
push
or
inc
add
inc
sub
sub
pop
lea
pop
push
push
push
push
push
push
push
push
lea
push
call
test
loopne
add
add
leave
xchg
mov
shrb
pop
std
mov
out
cwtl
mov
mov
testl
add
push
add
add
loopne
js
add
leave
popa
xchg
fsubp
add
pop
mov
movsb
add
lods
pop
ljmp
lahf
add
rorl
push
call
cmpl
je
push
push
shr
push
xor
add
ror
sub
sub
dec
not
pop
sub
pop
push
push
lea
push
push
push
push
call
push
add
arpl
add
mov
scas
xchg
add
pop
loop
add
addb
aam
out
add
addr16
add
mov
add
jecxz
ljmp
add
jle
add
in
outsl
cltd
add
in
add
add
add
pop
jbe
add
add
rolb
cmpsb
add
lock
fildl
add
cmc
add
push
mov
lea
pop
push
push
push
push
call
ja
jb
mov
mov
add
mov
icebp
rcll
add
out
add
add
mov
add
addl
pop
add
iret
add
add
mov
mov
popf
push
jns
mov
push
add
add
xlat
add
mov
test
movsb
int
test
add
mov
lea
pop
call
push
push
push
push
push
push
push
push
lea
push
call
add
in
jnp
fildl
lock
add
icebp
add
fdivrl
popf
js
scas
insb
add
mov
cwtl
lock
popl
add
mov
pop
add
add
add
pushf
test
scas
jo
cmpsl
add
add
leave
push
add
insb
mov
loop
jbe
cwtl
in
fmull
js
int3
fldz
ret
xchg
add
push
push
xor
push
push
pop
add
shr
sub
rol
pop
dec
sub
dec
inc
pop
push
sub
sub
lea
pop
push
push
sub
pop
call
push
push
push
push
push
lea
push
call
add
xchg
mov
ljmp
pop
mov
mov
jns
push
add
in
xchg
sahf
pop
mov
add
add
jb
add
mov
lock
mov
add
je
stc
jle
jnp
lahf
add
add
icebp
jno
add
add
test
mov
test
int
add
add
add
vpsrld
push
add
fdivrp
jge
mov
add
xorl
pop
cmpl
je
push
push
shr
lea
push
push
pop
add
add
sub
lea
shr
sub
xor
add
pop
dec
pop
push
ror
pop
push
call
push
lea
push
push
push
push
call
add
sti
jecxz
mov
add
xchg
mov
add
pop
icebp
add
add
mov
add
push
les
lds
jmp
mov
imul
add
add
pop
add
pop
fildl
andb
mov
je
add
pop
js
mov
add
jmp
cmpb
mov
aam
bound
cmpl
je
push
push
xor
add
lea
push
and
add
dec
add
not
add
sub
not
inc
ror
pop
sub
pop
push
dec
shr
lea
dec
pop
push
push
push
call
bound
add
rolb
mov
repnz
add
lods
fildll
add
popa
add
out
fstps
pop
xchg
mov
xchg
jp
xchg
rolb
mov
add
insb
pusha
jbe
mov
loope
add
add
mov
cwtl
push
push
testl
cli
add
push
mul
add
add
jne
mov
lea
pop
call
push
push
call
add
mov
mov
in
popl
add
add
iret
enter
add
xchg
lods
fcomip
add
jge
add
cltd
add
jne
jae
add
add
add
movb
pusha
pop
add
push
jge
jge
fildl
add
add
nop
lods
add
add
nop
movsl
add
add
add
je
add
cld
add
jp
add
cwtl
mov
mov
lea
pop
cmpl
je
push
push
inc
push
or
inc
add
inc
sub
sub
sub
pop
ror
not
pop
push
add
pop
push
push
lea
dec
add
pop
call
push
push
push
push
push
push
push
call
add
add
sbbl
add
jle
xchg
add
xchg
xchg
jmp
pop
add
jo
add
mov
add
imul
add
add
mov
hlt
out
les
push
mov
popl
add
add
add
add
add
add
add
jge
pop
mov
add
add
xchg
add
pop
cmpl
je
push
push
shl
sub
lea
push
or
not
add
ror
sub
sub
shl
pop
rol
pop
push
lea
push
push
push
push
push
lea
push
push
call
add
add
add
add
fldl
add
mov
fscale
add
fists
add
add
mov
shl
xchg
add
add
cmpsl
push
add
add
add
add
lret
add
add
stos
cltd
add
ljmp
add
push
mov
pop
je
pop
add
add
in
jle
mov
loope
arpl
pop
push
call
cmpl
je
push
push
rol
push
or
inc
add
shr
sub
shr
pop
inc
shl
inc
pop
push
push
push
push
push
push
push
lea
push
push
push
call
jl
lock
bound
add
add
addb
in
lcall
pop
add
pop
add
add
lahf
ficoml
aam
mov
lret
cld
add
cmpsb
add
insb
add
add
add
mov
add
jne
mov
lea
pop
push
call
push
push
push
push
push
push
call
bound
add
add
mov
testl
lods
add
pushf
pop
roll
add
add
mov
mov
add
fcompl
pop
out
test
lods
push
mov
data16
push
add
add
addb
add
add
in
lret
roll
add
jbe
in
pop
add
add
add
mov
in
fildll
cld
lea
pop
cmpl
je
push
push
not
not
push
or
not
add
lea
add
ror
sub
rol
add
dec
pop
add
pop
push
push
lea
push
push
call
sahf
jnp
faddl
mov
pop
lret
add
icebp
pusha
popa
scas
add
xchg
mov
add
cmpsl
jp
fcmovne
add
icebp
add
lods
test
sar
push
int3
pop
in
mov
add
cld
add
ret
add
movsl
mov
loope
add
jne
pop
addr16
movsb
clc
imul
add
pusha
jge
int3
lea
pop
push
call
push
lea
push
lea
push
push
push
lea
push
push
push
call
flds
out
ja
cli
xchg
add
add
out
mov
mov
cwtl
mov
outsl
pop
mov
test
cltd
add
jmp
push
add
lret
aad
add
mov
mov
sahf
cmpsb
shr
mov
add
or
jo
add
leave
add
push
addb
out
fwait
jno
push
lahf
clc
lret
add
push
jecxz
add
pop
add
pop
cmpl
je
push
push
xor
push
or
inc
add
dec
lea
sub
rol
pop
xor
lea
add
pop
push
push
push
call
add
call
lcall
add
pop
pop
mov
roll
add
sbb
testl
add
stos
mov
mov
add
movsl
mov
enter
popf
out
mov
push
add
ljmpw
insb
add
arpl
movb
out
cmpsl
mov
lea
pop
push
push
push
push
push
push
push
push
push
push
call
lahf
testl
push
add
push
decb
pushf
les
lahf
enter
add
pop
add
movsb
cmpsb
add
jne
adcl
sti
add
outsl
arpl
jmp
add
push
out
lahf
sahf
mov
mov
rolb
mov
stc
lcall
add
mov
push
push
jno
mov
mov
cli
add
mov
roll
popf
add
icebp
jae
add
les
and
add
ret
test
inc
pop
ss
push
not
push
and
add
sub
sub
pop
inc
pop
push
shl
pop
push
call
cmpl
je
push
push
sub
add
push
or
inc
add
add
inc
add
sub
pop
sub
shl
sub
xor
pop
push
push
call
mov
add
je
idivb
add
test
cld
mov
cwtl
mov
mull
add
pop
cwtl
add
add
add
in
into
fiadds
push
add
mov
adcb
add
cli
mov
lods
add
add
add
add
add
add
add
out
push
enter
mov
lea
pop
push
push
pop
call
push
push
push
push
push
lea
push
push
lea
push
push
push
call
mov
add
fldlg2
add
addb
push
pusha
add
add
add
add
aam
shll
xchg
mov
jo
add
jno
stos
scas
mov
stos
xchg
fs
add
mov
icebp
push
std
pop
jo
add
add
mov
fwait
xlat
cmpsb
add
add
mov
lret
cwtl
sub
mov
add
push
out
add
mov
lea
pop
cmpl
jne
push
add
pop
mov
movl
push
push
call
xlat
lcall
add
pop
add
add
fidivl
add
jl
sub
mov
add
add
add
pushf
out
add
add
jbe
fsts
push
add
int3
rorl
mov
mov
add
add
jmp
or
addl
push
push
push
lea
push
push
push
call
mov
add
test
add
addb
xchg
addr16
add
je
add
add
add
push
jl
push
add
cli
add
out
add
movsl
lea
lahf
testl
add
mov
mov
je
flds
jb
push
test
add
mov
xchg
hlt
mov
lea
pop
pop
push
push
lea
push
push
call
mov
lea
test
jl
mov
test
mov
stos
add
mov
lret
pusha
push
add
lds
add
ljmp
add
mov
lods
test
test
lods
movsl
movb
jne
rolb
add
add
int3
lea
pop
pop
pop
push
shr
pop
pop
push
add
lea
shl
pop
leave
ret
push
push
sub
shr
pop
mov
add
push
push
lea
push
push
push
push
push
push
push
push
call
add
in
movb
jne
add
add
add
push
into
add
add
into
lcall
shl
ret
jle
rolb
add
scas
add
add
enter
push
fcomp
mov
xchg
add
ror
outsl
add
mov
add
add
add
leave
gs
add
sti
add
sahf
std
mov
add
test
mul
lods
xchg
xchg
fisttps
pop
cmpl
jne
push
push
rol
add
not
push
sub
add
sub
sub
add
pop
not
pop
push
lea
push
push
push
push
call
add
int3
sahf
mov
add
pop
filds
add
add
mov
add
add
loope
add
add
add
rol
add
add
add
pop
cmc
movsl
les
add
jb
add
add
int
lea
sti
jns
stc
pop
pop
add
in
add
add
lods
add
add
test
lods
jo
icebp
add
mov
lea
pop
pushl
push
shr
not
pop
call
push
lea
rol
pop
push
call
jmp
push
lea
push
push
push
push
push
call
addb
add
sti
add
faddl
add
mov
movb
ja
add
xchg
jecxz
add
add
out
add
add
add
add
mov
pop
lret
add
add
add
testl
add
mov
bound
leave
out
callw
mov
mov
lea
pop
cmpl
je
cmpl
jne
push
lea
pop
leave
push
lea
push
push
push
lea
push
push
lea
push
push
lea
push
push
call
out
std
ret
add
leave
mov
xchg
add
add
nop
filds
add
leave
jp
fmuls
add
mov
scas
mov
jnp
arpl
cmc
aam
xchg
popf
xchg
add
push
fisubl
fcmovnb
loope
add
insb
mov
add
popf
xlat
add
popl
out
add
add
ret
add
pop
add
pop
pop
push
push
push
push
push
call
hlt
pop
xchg
add
add
xlat
add
test
loopne
push
ljmp
pop
cwtl
add
xchg
add
mov
add
mov
popa
add
loop
add
cltd
add
jbe
add
add
cltd
add
jne
popl
roll
mov
shrl
xchg
jmp
aam
bound
pop
push
inc
lea
pop
pop
push
lea
push
push
push
push
push
push
call
ja
add
pop
add
jne
imul
add
add
cltd
add
fadds
fidivl
pusha
in
pop
mov
mov
loop
out
add
mov
leave
jecxz
add
ljmp
add
jecxz
int
xchg
rolb
lds
cld
addr16
xchg
add
xchg
lods
add
into
cld
add
add
add
data16
leave
add
push
dec
pop
ret
jmp
cmpl
jne
push
push
dec
push
push
pop
add
shr
sub
sub
add
pop
shl
pop
push
shl
lea
rol
shr
pop
pushl
push
push
lea
push
push
push
push
push
push
call
movsb
leave
add
add
rorl
add
pop
add
bound
add
mov
mov
add
loopne
jmp
mov
jb
roll
add
in
and
fdivr
out
pop
add
into
jne
data16
insb
xlat
add
in
xchg
movsb
insb
add
mov
add
iret
mov
jl
cmpsb
xchg
pop
frstor
nop
add
iret
mov
mov
lea
pop
call
push
push
push
call
sub
ja
loope
add
add
jo
imull
add
pushf
shrb
stos
pusha
enter
add
jne
add
clc
add
mov
test
xchg
add
fiaddl
fs
lret
add
mulb
movsl
xchg
jmp
test
cltd
neg
push
add
nop
out
addl
add
rcrl
add
jno
add
lds
pushf
add
cld
lea
pop
push
push
pop
call
push
not
inc
not
pop
jmp
cmpl
jne
push
not
rol
pop
mov
mov
call
push
dec
add
add
pop
push
pop
push
lea
shl
pop
dec
jne
push
sub
not
shl
pop
call
push
push
push
push
push
push
push
lea
push
push
push
call
add
jmp
shlb
mov
add
lods
mov
int3
lea
add
hlt
push
iret
add
xchg
add
loope
mov
jb
in
xchg
add
mov
add
fsubrs
aad
data16
add
add
add
not
xchg
loopne
push
enter
mov
push
outsl
mov
outsl
cmpsb
fcmovnbe
add
cmpsb
mov
call
add
shl
add
pop
jmp
push
push
push
call
xchg
icebp
pop
add
stos
fadds
int3
mov
xchg
mov
add
xchg
rcrb
xchg
icebp
add
mov
add
pusha
jb
cli
add
les
add
mov
jnp
add
cltd
add
mov
ljmp
loope
add
mov
gs
pusha
add
push
add
add
fisubs
add
add
pop
call
push
push
shl
inc
inc
push
sub
add
lea
sub
sub
xor
sub
pop
xor
shl
pop
pushl
push
shl
pop
call
push
add
shr
rol
pop
push
push
ror
sub
dec
pop
call
push
xor
sub
pop
mov
lea
push
push
shr
shl
dec
sub
push
or
inc
add
not
ror
sub
ror
shl
ror
sub
pop
lea
ror
pop
push
add
not
pop
pushl
call
push
shl
pop
push
call
push
push
add
ror
push
or
inc
add
shl
sub
xor
sub
pop
xor
pop
push
inc
shr
pop
pushl
push
not
pop
call
call
push
lea
push
lea
push
lea
push
push
push
push
call
add
add
addl
clc
add
loope
add
mov
jl
mov
hlt
pop
out
add
insb
pop
mov
lcall
add
add
stc
add
fstpl
cli
into
fidivl
add
scas
add
pop
add
add
add
add
rcrb
mov
les
mov
popf
add
bound
mov
lea
push
push
shr
push
or
inc
add
add
shr
sub
shl
shr
pop
pop
push
add
add
sub
pop
pushl
push
push
lea
push
push
lea
push
push
push
push
push
push
call
iret
in
add
add
js
mov
mov
aad
add
push
pop
mov
lds
mov
jl
imulb
mov
add
mov
push
in
mov
imul
jbe
xchg
cli
add
fstp
pusha
jns
push
out
add
test
test
mov
mov
jo
mov
jae
shl
jge
les
and
add
add
xchg
cmp
repz
push
push
push
push
dec
pop
pushl
push
push
shr
ror
rol
push
sub
add
sub
sub
not
add
sub
lea
inc
pop
ror
pop
push
push
dec
sub
pop
call
push
push
rol
dec
not
shr
push
push
pop
add
lea
add
sub
pop
add
dec
shl
pop
push
sub
shl
pop
pushl
call
push
dec
pop
push
push
sub
pop
call
push
push
ror
push
or
inc
add
dec
sub
xor
sub
inc
pop
lea
sub
rol
add
pop
push
add
sub
xor
pop
pushl
call
call
push
rol
ror
pop
jmp
push
shr
shr
pop
pushl
mov
push
inc
ror
pop
jmp
push
push
shl
dec
dec
push
sub
add
ror
sub
sub
rol
rol
shl
pop
ror
dec
sub
pop
push
push
push
push
call
in
loopne
les
add
je
cli
clc
sti
lret
add
add
jno
testb
add
add
roll
ret
add
mov
add
lret
fiadds
xchg
mov
add
out
idivb
add
fisubl
std
add
push
add
add
shll
mov
addl
scas
add
fiadds
add
mov
lea
pop
pushl
call
push
not
pop
push
push
not
pop
call
push
push
xor
push
xor
add
sub
not
dec
sub
sub
shl
rol
shr
pop
add
pop
push
ror
pop
pushl
push
add
rol
pop
call
push
call
push
inc
pop
leave
push
push
push
push
push
push
push
push
call
add
xlat
int3
add
jl
std
add
add
lcall
mov
add
add
add
scas
add
cmpsl
add
scas
add
add
adcl
xorl
mov
jl
int
push
add
mov
add
add
mov
add
xchg
cmpsb
mov
fiadds
sahf
out
cli
adcb
js
add
mov
lea
pop
add
pop
pop
push
ror
pop
pop
push
pop
pop
leave
add
push
not
pop
ret
push
push
push
push
push
push
call
flds
nop
xchg
add
repnz
cmpsl
data16
lcall
mov
shll
lods
add
mov
pusha
scas
jle
lock
push
jp
enter
lret
mov
add
int3
add
pop
mov
add
jecxz
ret
cltd
add
add
icebp
mov
add
add
mov
jmp
sbb
push
push
push
push
push
push
call
in
jp
mov
pushf
xlat
add
mov
fdivl
int
mov
mov
ror
add
addr16
mov
loopne
add
push
lock
in
fwait
add
lcall
in
arpl
add
add
sahf
add
add
pop
mov
add
jo
test
add
add
add
lods
mov
add
pop
ret
push
push
push
push
push
push
lea
push
push
push
call
pop
mov
imul
pop
xchg
mov
mov
add
jmp
xchg
mov
iret
in
clc
mov
je
ja
add
lods
xchg
call
jne
pop
pushf
arpl
add
testb
add
add
push
test
scas
add
roll
mov
jecxz
add
add
shrl
int
add
push
add
fmull
in
push
inc
sub
not
pop
cmpl
jne
push
push
lea
push
push
push
lea
push
push
push
push
lea
push
call
jbe
mov
scas
les
add
in
add
mov
out
xchg
add
mov
rcrl
jle
add
add
add
roll
add
lds
in
mov
add
mov
filds
jo
add
mov
add
jo
jnp
mov
pop
add
add
stos
add
mov
pusha
sub
inc
and
jmp
mov
push
push
push
lea
push
lea
push
push
call
loop
add
cltd
or
into
stos
sar
outsl
push
pop
pop
fiaddl
add
add
ja
aad
in
test
add
mov
jb
add
cwtl
add
cmpb
add
mov
arpl
bound
mov
add
add
aad
jns
add
add
add
add
insb
add
mov
lea
pop
and
push
not
shr
pop
xor
push
xor
shr
pop
xor
push
shr
pop
add
xor
push
push
push
lea
push
lea
push
push
call
add
jecxz
call
add
cld
stos
mov
mov
add
cmc
js
add
add
lods
test
enter
add
mov
out
pop
mov
jb
mov
out
add
add
movsl
test
stc
add
cld
add
mov
test
add
add
add
rcll
js
cld
lea
pop
dec
push
ror
lea
pop
sub
push
push
push
push
lea
push
lea
push
push
lea
push
lea
push
push
call
add
fsubr
mov
add
add
test
jnp
xlat
jp
add
in
add
xchg
ficomps
xchg
mov
add
rolb
lds
jl
mov
imul
add
xchg
add
enter
fisubs
icebp
cli
jecxz
add
add
rorl
xchg
add
add
add
pop
jmp
sub
pushl
push
push
push
push
push
push
call
popa
sti
in
in
pop
test
add
add
stos
jecxz
pop
addr16
cmpsl
add
nop
fildl
xchg
cmpsb
push
roll
gs
add
add
jns
xchg
hlt
mov
xchg
pop
add
jae
add
jmp
fwait
add
add
imul
add
add
jb
add
mov
in
push
jle
mov
mov
add
add
add
jo
aad
testb
cld
lea
pop
pop
push
lea
pop
sub
cmp
jne
push
push
lea
push
push
push
push
push
lea
push
lea
push
push
call
test
stos
repnz
mov
shrb
cli
jno
sahf
faddl
add
mov
shl
add
add
add
add
add
add
int3
mov
loopne
pushf
lods
jbe
movl
mulb
add
mov
push
add
pushf
add
mov
add
pop
mov
lea
push
shr
sub
add
pop
sub
mov
push
pop
shr
add
push
lea
push
push
push
push
push
push
lea
push
push
call
hlt
add
test
mov
add
rorl
mov
repnz
add
mov
rol
arpl
lret
call
lock
cli
data16
scas
add
push
icebp
test
jo
push
into
add
add
out
addl
jle
iret
add
repnz
add
orb
sub
pushl
pop
push
shl
pop
shr
and
push
lea
push
lea
push
push
lea
push
call
ljmp
jnp
fs
popf
add
add
stc
stc
pop
gs
pusha
out
cmc
test
pop
xchg
add
in
pop
movsl
xchg
add
cmpsl
jo
mov
add
add
add
call
hlt
std
stos
aad
mov
test
add
add
popf
push
je
mov
mov
add
testl
data16
add
pop
sub
push
sub
not
lea
pop
cmp
jne
leave
push
add
inc
pop
ret
push
push
push
push
push
lea
push
push
push
push
push
call
add
add
int
in
xchg
enter
nop
add
add
addl
imul
add
add
add
add
cld
add
movb
imul
add
mov
add
fistps
iret
faddl
add
sti
push
mov
mov
aad
std
loop
jb
int3
lea
pop
push
push
add
lea
not
pop
mov
add
push
push
push
push
push
push
push
push
call
push
add
add
add
imulb
add
gs
mov
out
fisubs
movsl
scas
fidivrs
xchg
filds
hlt
add
jns
mov
add
add
fbstp
ret
movsl
push
flds
out
jmp
int
xchg
pop
loop
add
add
pop
jnp
add
lods
push
add
pusha
sbb
push
push
push
push
push
push
push
push
lea
push
push
call
int
jl
pop
pop
add
gs
shll
cld
push
iret
fs
test
jae
int
add
repnz
ret
add
imul
roll
pop
fildl
jge
add
add
loope
push
add
scas
add
lods
add
lds
ljmp
lcall
out
mov
mov
lea
pop
push
push
sub
rol
sub
xor
pop
mov
push
push
lea
push
push
call
movsb
add
add
out
aad
add
scas
lods
pop
add
lods
pop
push
outsl
add
mov
add
add
jmp
push
jnp
shll
add
ljmp
icebp
orl
fldcw
add
mov
add
add
pop
test
pusha
add
add
add
lods
lcall
add
add
pop
lea
push
inc
pop
sub
mov
push
shr
not
add
pop
shr
push
push
push
push
push
push
push
push
call
push
leave
jp
add
stos
iret
mov
mov
loopne
jb
add
xchg
push
add
add
add
add
xchg
je
add
xchg
mov
jle
mov
movsl
add
jp
jmp
lret
mov
movsl
test
pop
in
lods
jb
add
add
test
outsl
pop
mov
and
fimull
add
pop
or
addr16
sbb
push
call
add
call
add
add
lods
add
add
add
icebp
sahf
loopne
add
add
push
add
testb
out
add
bound
pop
ljmp
jp
mov
mov
add
add
scas
xlat
nop
jbe
mov
add
add
mov
mov
add
add
add
fiaddl
stc
movb
mov
xchg
xlat
ja
xchg
jno
aam
bound
pop
mov
push
lea
push
push
call
int3
add
lahf
add
add
arpl
cli
add
nop
xchg
add
cli
fiadds
je
add
add
jo
add
in
ja
insb
arpl
lcall
shlb
aad
stos
pop
add
fstl
add
lcall
add
cli
add
div
popf
add
add
add
jno
pop
call
int3
lea
pop
add
push
lea
push
lea
push
call
imul
add
test
mov
mov
push
add
add
add
add
cltd
clc
repnz
popf
fildl
add
xchg
add
add
cmpsl
add
add
add
nop
adc
add
jae
imul
imul
aad
cli
movb
add
mov
lea
pop
xor
push
push
call
add
addl
mov
push
add
push
add
mov
js
pushf
les
in
add
pop
cltd
mov
add
xchg
add
test
pop
add
add
add
lods
leave
pop
mov
incb
in
mov
int
add
fldl
add
mov
lea
pop
mov
and
push
add
dec
sub
sub
pop
call
push
push
push
push
push
call
les
insb
int3
add
add
bound
into
add
popa
pop
mov
imul
add
add
mov
loope
xorb
data16
lahf
int
fildl
ret
popf
add
gs
add
mov
fistpll
add
ljmp
push
add
addb
outsl
cltd
push
cmpsb
add
jle
int3
lea
pop
add
push
push
call
out
xchg
stc
add
addb
rorb
fsts
lods
add
add
in
fiaddl
loopne
add
add
in
add
fildl
hlt
cwtl
fnsave
add
add
push
add
add
mov
fldl
mov
mov
mov
add
les
addb
and
scas
add
xchg
ret
jl
add
add
jae
les
inc
or
test
add
add
loopne
rol
pop
add
push
sub
add
sub
pop
cmpl
jne
xor
push
sub
sub
shr
pop
pop
pop
push
add
inc
xor
pop
pop
push
push
lea
push
lea
push
lea
push
call
push
sarb
lds
stos
jne
add
cltd
sbb
aam
push
push
add
sahf
add
xchg
mov
icebp
mov
nop
testl
aad
je
sahf
gs
mov
icebp
jmp
add
add
addr16
add
xlat
fsts
scas
pop
add
add
add
add
int3
lea
pop
pop
push
rol
add
pop
pop
push
lea
push
push
push
push
push
push
push
push
call
add
rol
add
mov
add
ja
mov
in
mov
add
lret
add
mov
add
fiaddl
int
mov
add
cmpsb
mov
fscale
add
add
imul
mov
add
add
bound
repnz
hlt
pop
bound
add
movsb
pop
add
add
add
push
gs
mov
in
add
mov
lea
pop
leave
push
push
lea
push
push
push
call
add
add
movsl
add
add
pop
cwtl
loopne
scas
add
test
sti
add
add
shrl
mov
add
imul
test
jo
sti
xchg
mov
mov
add
in
add
add
jo
add
addl
cmpsl
push
movsb
popf
mov
add
add
roll
cmpsb
add
mov
adc
ret
mov
add
push
push
push
push
push
push
push
push
push
push
call
enter
rol
pushf
outsl
push
xchg
arpl
lds
jmp
add
add
mov
ja
fwait
add
fnstcw
mov
add
scas
repnz
xchg
clc
add
add
add
add
jne
add
add
xlat
int3
add
add
add
jl
cli
jo
lahf
out
mov
push
add
sub
push
shl
rol
pop
push
push
push
push
lea
push
push
lea
push
push
lea
push
call
ficoms
call
into
mov
test
je
add
mov
mov
shrl
ljmp
add
add
pop
bound
add
stos
je
mov
cmpsl
add
add
jnp
gs
pop
mov
add
add
add
popf
add
sahf
add
pushf
add
add
insb
mov
popa
and
pop
push
dec
sub
pop
mov
push
call
push
push
push
lea
push
push
push
push
push
call
in
lock
in
jle
add
add
andb
add
add
std
jno
add
mov
fildl
add
fdivr
mov
mov
add
xchg
pop
pop
push
scas
add
pop
fisttpll
add
popl
std
mov
hlt
mov
add
divb
add
mov
add
scas
pop
cmc
into
mov
pop
mov
pop
xor
pop
pop
push
push
push
lea
push
lea
push
lea
push
push
push
push
call
mov
add
aad
jb
push
mov
add
add
add
imul
popl
add
pop
jge
add
testl
add
add
test
add
add
add
fadds
fiadds
aad
mov
mov
mov
fidivrs
xchg
pop
leave
hlt
add
add
pop
pop
pop
pop
push
pop
leave
ret
push
push
shr
shr
rol
pop
mov
add
push
push
add
rol
sub
pop
push
push
push
push
push
lea
push
push
push
push
call
rolb
add
add
add
enter
jmp
mov
mov
add
add
jo
add
clc
add
les
add
aad
add
xchg
into
xchg
scas
fs
out
je
xchg
lods
xchg
into
jne
push
add
scas
add
add
add
mov
popa
mov
add
lret
mov
cld
lea
pop
push
push
shr
pop
push
mov
push
push
add
add
sub
add
pop
pop
lea
push
pop
sub
push
xor
pop
mov
push
lea
push
push
push
push
push
push
push
push
push
call
addr16
andl
mov
add
cli
in
mov
add
add
pop
add
aad
mov
jle
mov
add
xchg
mov
pushf
je
js
cmc
add
mov
rcrl
ffreep
pusha
push
cmpsl
add
movsl
add
mov
pop
add
add
faddl
test
rolb
mov
xchg
int3
add
aam
mov
lea
pop
shr
push
push
push
push
push
push
push
push
push
push
call
add
lods
add
add
add
add
shr
pop
add
add
cli
movl
testb
aam
fsubrp
cli
sti
add
push
scas
add
mov
iret
jle
out
imul
ja
shlb
je
add
hlt
add
push
add
in
add
add
add
add
mov
add
mov
sub
fimull
push
xor
add
pop
pushl
push
add
pop
popl
mov
push
push
push
lea
push
push
push
lea
push
lea
push
push
push
call
add
mov
add
lds
mov
add
add
je
add
loopne
jbe
fdivl
add
add
stos
pop
push
les
popa
add
add
add
pop
pop
cli
mov
imul
add
int3
cmpsl
add
rcll
add
orl
add
mov
xchg
aam
out
add
add
rolb
lea
pop
add
push
lea
shl
rol
pop
xor
push
push
call
ficoms
fildl
add
roll
leave
push
push
add
roll
int3
mov
xchg
repnz
add
iret
mov
out
add
add
add
xchg
add
add
add
add
aam
idiv
add
cmc
add
mov
shll
lcall
add
add
out
pop
add
jbe
add
lea
add
add
fisubrs
lea
pop
lea
push
push
push
push
push
push
lea
push
push
push
push
call
testl
add
add
xchg
les
lahf
add
add
fcoml
pop
push
jbe
push
out
add
out
add
jecxz
cwtl
add
jb
add
in
add
mov
add
push
les
test
add
add
mov
rcrl
add
add
add
add
data16
mov
out
pop
aad
add
jno
flds
mov
lea
pop
mov
add
push
shl
pop
xor
push
inc
not
pop
call
add
push
lea
push
lea
push
lea
push
push
lea
push
push
push
lea
push
push
call
xlat
add
filds
mov
add
add
mov
rolb
pop
iret
addr16
insb
push
add
add
jns
test
cmpsb
xchg
shll
add
movsb
pushf
imul
scas
mov
rolb
icebp
test
jl
cltd
pop
add
rolb
add
icebp
add
js
mov
lea
pop
nop
nop
push
shl
pop
cmp
je
push
push
push
call
into
loopne
sar
lods
xchg
add
xchg
addr16
add
mov
addb
lahf
outsl
test
add
sub
pop
out
sahf
add
add
hlt
xchg
add
out
mov
add
add
pop
mov
push
fldl
ja
nop
add
mov
add
mov
jo
movsl
jl
out
lcall
adc
call
cli
mov
xchg
mov
pop
nop
nop
inc
push
lea
push
push
push
call
pop
out
add
add
jbe
mov
cmpsb
add
shll
add
fldenv
shrb
jp
add
add
xchg
add
add
in
xlat
mov
add
into
add
mov
add
mov
rcrb
data16
xchg
rcrb
add
jp
add
add
in
outsl
jbe
mov
les
push
push
lea
push
call
fsubrl
out
add
pushf
add
fadds
popa
add
mov
add
mov
mov
cld
jo
outsl
add
popf
add
xchg
jnp
push
add
rcrl
in
add
add
add
pop
mov
aam
scas
lret
xorb
cwtl
add
add
xchg
xchg
test
fildl
out
push
mov
lea
pop
nop
cmp
jb
push
sub
pop
xor
jmp
mov
push
sub
sub
pop
add
movzwl
push
push
push
push
lea
push
push
push
push
call
add
push
lds
add
pop
mov
push
test
jge
push
xchg
fnsave
mov
cwtl
add
shlb
xchg
add
in
in
xchg
lcall
outsl
pop
add
add
mov
add
popa
stos
jge
pop
mov
add
mov
add
test
scas
aad
pop
mov
lea
pop
mov
push
rol
pop
add
push
sub
sub
xor
pop
mov
push
push
push
push
push
push
push
lea
push
call
int
add
add
xchg
idivb
mov
lcall
add
mov
imul
addl
lret
fiaddl
imul
add
int
mov
mov
add
out
add
add
add
mov
lods
mov
test
push
mov
add
add
rorb
add
add
add
add
pop
xor
push
lea
push
call
add
out
mov
jecxz
add
loop
add
jbe
std
loopne
add
add
add
add
add
adcl
add
add
pop
cmc
add
rolb
mov
xchg
add
flds
imul
add
add
mov
mov
add
je
int3
lea
pop
xor
push
lea
push
push
push
push
push
push
push
push
call
mov
mov
pop
rcl
mov
loop
xchg
add
movsl
cld
sti
aad
outsl
testl
scas
add
lret
sarl
pop
shll
mov
jbe
sbbl
add
testl
add
popf
repnz
mov
mov
jo
add
xchg
mov
add
mov
shl
testb
shl
xor
push
not
pop
shl
push
add
pop
xor
shl
xor
push
push
lea
push
push
push
push
push
push
call
mov
add
imul
add
in
sahf
bnd
call
lea
push
lret
add
int3
roll
add
add
icebp
add
gs
add
pop
add
cli
add
lret
movsl
pusha
cld
popf
add
mov
add
mov
pop
jo
jns
imul
pop
enter
data16
roll
hlt
push
push
push
lea
push
push
lea
push
lea
push
lea
push
call
lea
add
add
jns
mov
lds
add
gs
add
popl
jns
xchg
mov
loop
add
mov
in
add
int3
jnp
lds
add
addl
add
add
add
cmpsb
xchg
pop
add
add
mov
insb
xchg
add
iret
jp
shrl
pop
jo
mov
mov
jo
jl
mov
testb
and
pop
push
lea
pop
pop
pop
push
add
pop
leave
push
xor
inc
pop
ret
push
add
pop
push
mov
push
shl
rol
pop
push
push
push
sub
shl
pop
push
push
lea
push
call
add
lea
popl
jns
pop
mov
add
test
mov
fadds
add
pop
add
fiadds
add
add
std
movb
add
imul
add
pop
lods
add
jl
testl
shrb
mov
clc
mov
add
bound
mov
add
popf
fwait
call
or
push
pop
mov
mov
mov
push
push
push
push
push
push
push
push
push
call
push
add
lds
lahf
add
mov
add
arpl
fadds
xchg
mov
enter
insb
xchg
add
add
add
jle
lcall
jb
jmp
aad
push
pop
imul
jge
add
repnz
jns
add
popl
add
xchg
mov
add
xchg
addb
fmull
rorb
test
jno
test
je
push
push
push
push
push
push
lea
push
lea
push
push
call
mov
leave
push
add
add
stos
push
test
mov
popa
add
aam
aam
xchg
xlat
lock
in
add
add
mov
mov
add
add
add
ret
push
roll
add
pushf
mov
add
add
mov
add
jge
jl
mov
add
pop
mov
mov
push
shr
dec
rol
pop
mov
push
push
lea
push
call
add
xchg
les
add
mov
mov
add
cld
push
outsl
mov
add
mov
jae
ja
lock
popf
pop
add
out
jmp
scas
add
add
loop
xchg
mov
bound
add
iret
add
push
push
xchg
push
test
popf
test
adc
add
add
mov
lea
pop
inc
cmp
je
test
je
push
lea
push
push
push
lea
push
lea
push
lea
push
push
lea
push
call
add
cmpsl
add
add
add
lret
push
add
add
add
pop
je
add
mov
iret
xchg
scas
add
cli
fldenv
lock
add
iret
add
rcl
add
insb
jle
add
pop
jne
add
pop
mov
ljmp
out
add
sti
add
mov
add
cld
add
pop
mov
inc
push
push
push
push
push
lea
push
push
push
push
call
mov
add
add
lock
push
add
mov
push
add
mov
add
jb
add
mov
add
add
mov
std
lds
jne
add
add
mov
add
scas
add
movsb
add
add
add
insb
cld
scas
jnp
add
fcoms
mov
add
add
xchg
add
les
mov
add
mov
lea
pop
cmp
je
push
not
shl
pop
test
jne
xor
pop
push
push
push
lea
push
push
lea
push
call
fincstp
ljmp
arpl
add
mov
add
add
push
mov
andb
add
add
ror
pushf
add
push
ljmp
mov
xchg
out
pop
add
loop
lret
pop
pop
out
jbe
add
add
imul
mov
add
add
js
aam
bound
pop
pop
pop
pop
push
push
call
fsts
add
clc
aad
leave
add
xchg
add
add
int3
xchg
enter
nop
mov
fsincos
in
add
add
jno
add
test
addb
mov
mov
aad
add
testl
mov
add
loope
js
add
add
add
repnz
pop
leave
ret
mov
push
push
lea
push
push
push
push
push
push
push
call
stos
rolb
add
add
cmc
add
popa
mov
add
out
outsl
add
loopne
pop
imull
add
add
add
lahf
add
add
add
in
jo
iret
add
mov
in
faddl
sarl
mov
add
add
add
add
add
mov
js
cld
lea
pop
inc
push
add
xor
rol
pop
cmp
jne
push
inc
pop
lea
push
ror
dec
sub
xor
pop
mov
push
push
call
add
add
xorb
add
loopne
adc
add
popa
mov
xchg
ja
fs
movsl
xchg
popa
lea
loopne
popf
add
push
add
mov
popf
loope
loop
add
outsl
filds
sti
mov
insb
mov
sahf
fsubr
iret
rolb
add
add
add
hlt
mov
add
lea
pop
test
je
mov
push
not
pop
add
push
inc
rol
shl
pop
cmp
jne
push
push
push
push
push
push
push
push
push
lea
push
call
add
add
call
jb
test
pop
add
pop
add
mov
add
jnp
pushf
add
add
add
arpl
mov
iret
mov
add
add
ljmp
mov
add
xchg
add
mov
stc
add
add
jp
shlb
pop
xchg
fidivs
in
scas
mov
divl
mov
out
add
mov
lea
pop
mov
test
je
mov
push
add
pop
add
cmp
je
jmp
push
push
lea
push
push
push
push
push
push
push
call
add
add
add
loope
scas
lret
add
call
ljmp
call
add
add
push
addl
add
add
popf
testl
lret
pop
add
lcall
add
cltd
pushf
add
pop
shl
jge
sahf
out
push
add
add
jae
cltd
pop
call
in
add
fwait
add
sahf
orb
xor
pop
push
push
push
push
push
push
push
call
mov
je
aam
fnstcw
xchg
gs
jno
mov
add
pop
orl
ret
mov
scas
jmp
add
out
add
scas
out
movl
add
add
cltd
test
add
xchg
mov
adcl
mov
fs
lahf
lea
sbb
pop
pop
push
lea
push
call
add
add
ja
mov
add
lret
add
push
pushf
mov
stos
or
lods
in
mov
mov
jne
add
add
add
add
add
scas
jno
sti
add
nop
popa
mov
pop
add
add
pop
xchg
push
scas
jle
mov
jecxz
add
mov
lea
pop
pop
push
add
inc
shr
pop
leave
push
inc
pop
ret
lea
pop
push
push
push
push
push
lea
push
push
push
lea
push
call
loopne
jecxz
add
add
add
in
push
insb
int3
add
popa
fildl
mov
lahf
imul
push
pop
mov
add
jne
pop
add
cwtl
push
add
test
add
xorl
addb
lret
sar
add
in
fwait
add
mov
fsubrs
xchg
add
int3
add
add
pop
add
enter
pushf
addr16
cmc
cmc
add
loopne
mov
add
pop
mov
lea
pop
pop
push
lea
push
lea
push
push
push
push
push
push
push
push
call
add
add
mov
add
jecxz
mov
add
lret
lret
rolb
fwait
add
scas
std
mov
test
insb
pop
mov
fldl
add
add
shl
xchg
cli
pop
ret
mov
pushf
add
sahf
sbbl
jbe
fwait
xchg
std
jnp
add
jp
stos
js
sar
outsl
shlb
leave
sahf
into
add
sub
pop
push
add
pop
leave
push
sub
dec
pop
ret
mov
push
shl
inc
add
sub
pop
pop
pop
push
push
push
lea
push
push
push
push
lea
push
call
clc
push
cmc
add
push
pusha
xchg
add
mov
add
add
add
add
rolb
mov
scas
lcall
jno
incb
pushf
mov
stc
into
stos
outsl
xorl
add
imul
nop
jl
add
lret
jle
xchg
movl
add
pop
add
pop
pop
pop
leave
push
push
push
push
push
push
push
push
push
call
add
jp
mov
add
lock
loop
add
add
xchg
add
cmc
ljmp
xchg
add
add
jb
add
je
movsl
push
popa
lcall
sti
xlat
mov
add
add
pop
mov
jae
add
jge
rolb
rolb
scas
cmp
add
mov
clc
cli
add
add
and
ret
rol
push
sub
rol
add
pop
rol
xor
inc
push
pop
cmpb
jne
push
push
push
push
push
push
push
call
movsl
sahf
lcall
gs
jle
pop
outsl
add
add
add
add
jne
loop
add
add
add
add
shrl
push
jnp
xchg
add
add
xchg
mov
fdivs
into
addb
mov
mov
clc
add
imul
jae
add
xchg
push
in
lds
pop
ret
sbb
mov
sti
movsb
shll
sti
movsb
shll
sti
movsb
adc
sti
movsb
andl
sti
cld
movsb
mov
sti
movsb
sub
sti
les
sti
sub
dec
sar
push
sub
cltd
xor
cld
idivl
push
xor
fwait
add
movsl
cmpsl
pop
imul
mov
add
sbb
xchg
inc
mov
mov
add
sbb
inc
ret
jp
pusha
sbb
fwait
push
mov
jmp
dec
sub
fistps
ss
pop
xchg
sbb
repz
push
fildl
jge
rclb
loop
scas
stos
ds
adc
cli
or
sub
add
in
pop
xlat
div
mov
les
pop
and
fmull
push
jbe
push
pop
cld
pop
stos
or
addr16
cmpsl
mov
jo
test
push
insl
imul
xor
and
dec
xor
mov
adc
mov
add
dec
sub
clc
fdivrs
jo
jnp
mov
ds
cmpl
icebp
cmp
mov
les
retw
push
sub
paddsb
push
mov
inc
mov
imul
push
xchg
cmpsb
xchg
in
cmp
and
and
mov
push
sub
cmpsb
pop
inc
cs
fsubr
std
mov
jo
cwtl
ret
les
and
sub
and
sahf
add
lock
push
push
out
cmp
mov
arpl
sub
fsubrl
pusha
xchg
popa
mov
pop
inc
fs
xchg
pop
jno
jns
jl
lret
xchg
mov
push
mov
mov
in
js
push
cmp
ds
pop
add
mov
insl
and
cmp
out
or
call
shrb
hlt
stos
movsl
lcall
xchg
cld
cmp
mov
jp
dec
outsb
fcomi
nop
jbe
or
loope
in
aas
xchg
les
mov
pusha
lods
pop
xchg
push
int
pop
sbb
loope
gs
adc
pop
lock
pop
xor
fsubr
xlat
lcall
bound
fldt
shll
dec
cmpsb
sti
lahf
sub
mov
sbb
xor
add
xchg
mov
pop
mov
js
daa
sbb
cmp
mov
aam
mov
add
test
add
out
mov
mov
ret
fimull
pushl
pop
sbb
in
or
sbb
pop
sbb
scas
les
pop
and
mov
push
sub
int
push
xor
cltd
push
pushf
cltd
call
xlat
add
imul
push
aad
arpl
push
inc
fstp
adc
push
divl
inc
out
jnp
ss
sub
bound
test
icebp
and
out
push
jmp
lret
scas
roll
add
mov
aas
xchg
inc
push
fisubl
mov
mov
xchg
outsb
divl
cmp
lret
adc
mov
mov
mov
sub
test
cs
mov
int3
sbb
xchg
lret
test
push
mov
rol
arpl
stc
mov
push
xor
cmp
jo
jle
inc
xchg
sti
fimull
popf
clc
inc
das
pop
xchg
ret
mov
and
lock
xor
sub
stc
push
sub
xor
in
addr16
jns
and
mov
popa
bound
sub
sar
mov
sub
push
mov
stos
jns
stc
fdiv
cmc
dec
inc
xor
jo
rclb
and
enter
gs
adc
lods
mov
mov
repnz
inc
push
push
inc
sub
arpl
mov
outsb
sub
mov
and
mov
addr16
jns
cli
js
mov
dec
aad
aad
aaa
cmp
movsb
add
scas
lods
adc
ficoml
pop
mov
lock
pop
push
scas
or
mov
stos
push
fwait
or
mov
push
pop
pusha
inc
push
add
xor
ljmp
and
xor
sbb
int3
popa
jnp
sbb
mov
mov
movsl
mov
mov
or
jp
lret
fdivrl
pop
jmp
lods
fcmovb
repnz
pushf
cmp
adc
nop
dec
add
fldt
inc
push
ret
lcall
test
into
cmp
fs
xlat
jae
jb
in
pop
cmp
mov
dec
mov
bound
inc
sub
fs
adcb
aas
out
ss
test
ret
repnz
shlb
or
push
pop
mov
mov
lcall
mov
jecxz
mov
xor
pop
rcl
jle
imul
outsb
and
cmp
pop
adc
pop
push
sub
nop
std
push
add
lods
pop
or
mov
mov
ja
mov
psadbw
js
imul
adc
fstps
add
nop
enter
ror
adc
test
insb
sahf
inc
pushf
ja
enter
inc
mov
sbb
rsm
sbb
mov
popf
dec
mov
sbb
addr16
fdivrl
loopne
inc
xor
dec
sub
dec
adc
inc
repz
xchg
mov
aad
or
xchg
inc
or
dec
and
mov
das
jle
cmp
or
jl
lret
sahf
adc
push
jb
mov
loope
xchg
or
adc
call
push
stc
test
jo
push
add
cmp
push
adc
fldcw
mov
mov
jge
scas
faddl
mov
jg
add
loop
or
push
adc
ljmp
mov
cmp
in
idivl
cmp
push
rolb
popf
mov
pushf
popf
rclb
lahf
out
push
lods
and
popa
stos
mov
mov
lahf
mov
xchg
push
fwait
cs
jg
jge
loop
push
rol
mov
cmp
fistl
gs
push
out
in
dec
fisttpll
sub
push
sub
inc
push
push
mov
roll
or
cli
in
xor
mov
add
pop
imul
lock
loopne
in
cmp
mov
xchg
in
jge
push
sbb
push
push
popa
pop
jge
cmc
pop
xor
add
fbld
pop
dec
loop
icebp
scas
jae
int
inc
loope
jb,pn
pusha
sti
mov
dec
mov
ret
test
lcall
mov
and
test
sti
and
dec
repnz
cmp
xchg
lds
lcall
xchg
cmp
jp
scas
and
lcall
testl
fs
adc
mov
sbb
xchg
sahf
out
or
icebp
loop
scas
mov
pop
lahf
push
dec
xlat
pusha
leave
sahf
dec
pop
inc
jne
inc
push
shrl
mov
push
sbb
and
mov
icebp
das
loope
fs
popa
jmp
stc
int
xchg
sbb
inc
sbb
sub
pushl
sub
sbb
or
pop
je
dec
nop
dec
in
or
push
scas
and
call
ss
in
sahf
xchg
out
or
sub
sub
or
jae
aaa
dec
nop
push
xor
ret
inc
xchg
addr16
xchg
inc
fsub
in
ficoml
movsb
clc
pop
imul
lods
sti
scas
mov
add
ss
adc
or
fcoms
aad
or
xor
or
mov
rcrl
lods
jb
inc
movsl
cmp
xor
in
and
sar
test
mull
xor
leave
shlb
outsl
cltd
xchg
pop
sub
pushf
outsl
push
sub
dec
jge
mov
sbb
mov
or
mov
cwtl
fildll
popf
add
lret
dec
xchg
sub
or
pop
int
sbb
hlt
fildl
pop
xchg
shr
and
in
jb
loop
call
pop
mov
sbb
inc
inc
sahf
pop
sbb
loopne
adc
inc
inc
call
ja
sbbl
pusha
leave
leave
mov
iret
or
lods
popa
push
mov
inc
fsub
xlat
cmp
lcall
pop
adc
insl
nop
mov
inc
fmuls
sub
inc
std
test
scas
les
out
imull
hlt
and
jecxz
jne
iret
mov
lods
scas
push
lahf
adc
pop
push
adc
jge
out
mov
ficompl
pop
xlat
mov
fsubs
movsl
jo
jo
xchg
inc
or
shl
jl
mov
cmp
push
in
jmp
in
out
out
push
aad
fcmovu
push
or
mov
in
pop
push
imul
inc
dec
pop
dec
lock
push
roll
test
enter
stos
inc
es
cli
and
cmp
add
ds
lds
jmp
add
repz
ds
cs
insb
dec
icebp
sbb
mov
add
cmp
inc
and
jo
push
xor
es
ds
out
sbb
push
sbb
pop
xor
shll
adc
pop
xor
popa
adc
ret
inc
push
mov
push
cmp
sub
cli
sarb
xchg
jp
mov
sysexit
mov
cwtl
lods
testb
insl
fsts
mov
fimuls
insb
pop
push
push
mov
inc
fisttpll
setbe
sbb
push
testl
or
addr16
stc
sub
mov
test
dec
mov
das
jge
lcall
jge
out
sub
movaps
sbb
pop
daa
mov
icebp
fcoms
xchg
loop
gs
fwait
addb
xchg
jg
daa
cmp
and
mov
or
pusha
hlt
les
mov
test
or
cs
inc
push
mov
lcall
mov
and
test
mov
je
jp
add
enter
in
enter
insb
add
mov
pop
push
xchg
jae
jg
out
sbb
daa
call
xchg
sub
pusha
jmp
shl
mov
ret
iret
and
nop
fnstenv
xchg
or
call
out
xor
orl
jecxz
popa
pop
pop
mov
mov
mov
mov
ret
xchg
pop
test
cltd
push
sub
fwait
out
scas
inc
pop
push
rcrl
and
into
jl
xchg
call
or
insl
xlat
cwtl
push
mov
pusha
mov
call
loopne
icebp
xor
jle
mov
or
xor
das
outsl
imul
aas
cmp
mov
sti
xor
sbb
push
or
adc
and
push
hlt
jbe
xchg
loope
cmp
cld
adc
inc
push
daa
ljmp
fcomps
arpl
push
mov
imul
adc
movsb
dec
xchg
es
lcall
stos
pop
mov
jne
jbe
rcrl
xor
mov
sarl
xorb
sbb
adc
sbbb
lock
inc
mov
cwtl
add
in
mov
jbe,pn
xchg
popa
imul
loope
mov
cmp
pop
mov
or
scas
mov
fdivs
push
mov
jmp
xor
stos
push
clc
stc
std
leave
stos
mov
xor
dec
mov
dec
mov
rorl
adc
mov
fstps
jmp
inc
ret
or
pop
mov
sub
hlt
jle
push
inc
xchg
fdivr
rorl
fsub
pushf
hlt
not
cmc
push
adcl
aas
lods
or
icebp
add
xlat
mov
mov
sbb
movsl
xchg
add
lds
jns
fidivrl
insb
sbb
inc
repnz
xor
xchg
in
push
push
pop
sahf
int3
jmp
add
or
fcomp
and
lods
cmp
pop
mov
sub
or
jg
push
inc
xchg
jns
enter
cmc
dec
add
jno
in
inc
stos
mov
addr16
out
mov
xchg
fiadds
and
adc
jne
sbb
jo
fmull
mov
hlt
jno
std
scas
add
dec
xor
inc
sbb
xchg
jg
not
push
repnz
mov
leave
cmp
sbb
mov
adc
mov
sbb
in
push
add
cmp
or
jo
cmpb
and
iret
mov
fdivl
out
jb
shr
data16
repnz
push
xor
sbb
adc
push
test
ja
sub
pop
enter
js
mov
push
and
jb
sar
imul
aaa
js
shlb
sub
subb
jmp
push
out
out
push
addr16
jp
in
das
mov
mov
add
orl
and
mov
adc
stos
out
add
cmpsl
sub
pop
mov
sbb
sub
loop
sbb
pop
inc
mov
xchg
push
cltd
popa
sub
cmp
or
lret
gs
les
add
adc
or
test
aad
test
mov
mov
hlt
flds
or
clc
xchg
test
js
and
mov
rol
xlat
or
aas
and
mov
out
out
inc
push
test
test
arpl
sub
sub
mov
fldl
ds
je
mov
xor
mov
adc
cmp
pop
jmp
mov
push
adc
mov
sbb
mov
dec
cmpsl
mov
sub
test
leave
cltd
fldenv
jl
int
push
lods
cmp
lods
pop
xchg
xor
leave
pop
rol
add
xorl
test
add
mov
push
xchg
jno
dec
test
loopne
jns
adc
test
out
dec
mov
into
xchg
cmpb
sub
push
popl
dec
in
xor
scas
mov
in
push
js
sbbl
xchg
inc
pop
loop
ljmp
inc
pop
daa
sarb
pop
lcall
ja
jbe
ss
imul
lcall
lret
int3
or
in
int
fildl
lock
pushf
or
pop
icebp
xor
adc
cmp
sub
pusha
stos
add
pop
mov
mov
iret
inc
rcll
add
push
les
movsl
stc
fildl
mov
xlat
icebp
mov
mov
lods
ror
push
out
lahf
xchg
in
and
sub
cmp
stos
xchg
xor
mov
push
push
call
repnz
sub
sbb
or
and
aaa
lea
out
or
jp
mov
in
out
xchg
in
dec
pop
inc
pop
sahf
daa
pop
mov
jg
cltd
pop
inc
in
test
sbb
and
push
cmpsb
jle
js
lret
dec
lds
xor
lret
push
outsl
xchg
and
xorb
lcall
push
mov
das
out
loop
pushf
test
adcb
dec
xacquire
mov
xchg
sbb
mov
inc
das
xchg
sbb
cmpsl
in
mov
sub
pop
shll
into
jo
add
xor
iret
nop
push
lcall
mov
loop
pop
jg
xchg
mov
jno
inc
xor
cltd
jbe
test
jo
mov
mov
push
sub
sbb
stc
sbb
icebp
xchg
sbb
sarl
ljmp
jb
dec
lds
lret
pop
in
int3
and
mov
jo
dec
pop
cmc
scas
fmull
push
ss
mov
pop
and
stos
cmc
aas
outsb
repz
xor
adcb
or
imul
xor
sbbl
xchg
pop
lea
push
fwait
hlt
push
jecxz
fidivrs
add
add
repz
xor
cmc
bound
lcall
out
lods
rolb
inc
sbb
xor
pop
pop
mov
xchg
adc
arpl
push
in
cmpsb
insb
push
fcmovnbe
repz
adc
in
jns
pop
mov
pop
pop
scas
loopne
jno
pop
push
push
push
xchg
roll
fwait
jecxz
cmp
imul
xor
lock
pop
nop
icebp
or
sti
sbb
push
cmp
pushf
pop
fdivs
mov
test
mov
sbb
xchg
out
dec
mov
in
ficoms
clc
loopne
ljmp
addr16
fdivs
or
sub
les
sbb
cmp
fldcw
xor
add
ror
imull
inc
repz
ds
mov
lock
jmp
int
and
sub
push
fnstcw
cltd
sbb
adc
push
mov
shlb
push
sbb
int
and
mov
nop
lret
mov
sbb
ficoml
or
in
cs
and
add
aas
fadd
dec
jge
pop
bound
jo
aaa
mov
loop
jbe
xor
mov
mov
add
test
sbbl
inc
jmp
add
push
sti
arpl
sbbb
shll
iret
xchg
out
sub
or
jp
adc
lret
or
xchg
add
cmp
push
pop
dec
sub
pushf
or
gs
push
aad
adc
hlt
jle
or
push
inc
mov
or
sub
stos
xchg
or
push
add
rcrl
ds
jae,pn
sbb
and
mov
sar
pop
pop
jo
cmp
es
pop
jbe
cld
je
je
mov
into
out
jo
jle
movsb
test
ljmp
sub
add
into
repz
push
js
mov
int
ds
aas
adc
push
icebp
inc
mov
jle
loopne
and
add
int
ss
mov
outsl
mov
mov
stos
stos
mov
mov
lcall
mov
cmp
icebp
pushf
test
adc
divb
or
gs
jge
inc
ret
sti
ss
test
es
dec
clc
lcall
xchg
mov
daa
mov
and
or
movsl
dec
cmp
cmp
addr16
test
sbb
mov
arpl
jp
pop
neg
mov
mov
mov
cmpsb
repz
mov
lret
dec
movsb
mov
mov
lods
mov
mov
jb
incb
gs
cs
mov
cmp
mov
adc
lret
out
imul
dec
imul
cli
xchg
jmp
fistps
lahf
dec
in
push
pop
into
jae
add
cmpsb
data16
fidivs
cltd
sarl
rcrb
lahf
je
or
mov
rorb
pop
aam
xlat
push
mov
push
jbe
enter
scas
data16
jmp
je
dec
cmp
nop
aaa
iret
orb
jmp
ds
jge
add
jecxz
lret
fsubl
cmp
jle
sbb
xchg
das
es
outsl
jmp
insb
mov
clc
clc
mov
jbe
jbe
or
add
fidivl
lods
out
inc
jp
inc
xchg
stos
sub
dec
jp
push
stc
xlat
inc
push
dec
stc
jnp
sub
inc
push
dec
fldenv
fs
aas
stc
loopne
xchg
cltd
mov
mov
mov
aam
xchg
or
insl
push
mov
icebp
sub
adc
sbb
mov
mov
mov
test
fwait
int
adc
fistps
adc
inc
fldl2t
ds
cmp
int3
mov
icebp
ficoms
mov
push
cwtl
or
xor
mov
ja
xorl
roll
mov
mov
fildll
cmp
xchg
fs
rolb
scas
fimull
pop
enter
aas
cltd
dec
sbb
imul
shrb
dec
xor
jp
popf
lea
out
dec
cmp
xchg
xchg
pop
insl
int
mov
xchg
cmpsl
pop
inc
and
sub
and
sbb
lret
xor
lahf
pop
cmp
pushf
push
fadds
add
out
stos
jmp
sub
lcall
rorb
adc
mov
mov
cmp
add
loop
std
dec
pushf
movsb
icebp
and
dec
fsubs
dec
les
mov
mov
and
in
xchg
arpl
out
mov
sub
fcoms
push
popf
adc
mov
xor
inc
filds
pop
pushf
inc
cmovl
dec
sbb
jl
popa
xor
inc
xchg
flds
jmp
sub
mov
dec
push
in
leave
cmp
popa
sti
xor
cwtl
mov
fldl
clc
xchg
es
sbb
adc
xor
xor
xor
sub
cmovge
lods
outsb
cs
ja
inc
add
outsb
xchg
loopne
mov
cltd
test
jne
or
lds
ljmp
jne
outsb
push
push
cmp
push
or
push
fcomps
je
pop
out
movsb
cmp
mov
sub
daa
jecxz
jmp
ret
outsb
insl
sbb
sbb
cmp
in
lock
xor
std
int
leave
jno
xchg
aam
ljmp
jmp
sub
dec
cli
fiaddl
fwait
mov
dec
lods
out
jge
ljmp
mov
in
lret
mov
hlt
mov
pop
movsb
fcomip
add
int3
and
in
add
dec
push
jb
cmp
jle
inc
dec
pop
cmp
stc
call
and
loope
cltd
adc
mov
sub
js
dec
bound
add
xor
ret
mov
leave
stos
cs
out
stc
cmpsb
inc
imul
into
lcall
sub
shrl
into
and
push
xchg
push
divb
mov
pop
inc
das
or
hlt
sub
aaa
lcall
cmp
add
dec
or
pop
scas
jo
pop
aaa
add
xchg
xchg
je
in
mov
adc
repnz
sahf
push
mov
in
jge
icebp
xlat
cmpsl
fcom
popf
push
rorl
out
mov
pusha
in
mov
xchg
stc
fnstsw
jno
mov
inc
sbb
mov
mov
push
enter
sbb
inc
push
pop
mov
xchg
ret
xor
lret
xchg
hlt
clc
aam
mov
repz
orb
push
jns
test
setl
dec
addl
and
jno
repz
adc
nop
test
mov
ret
cmpsl
imull
inc
cmp
in
enter
jae
or
push
mov
adc
sarb
inc
sub
dec
clc
shrl
fcompp
aas
push
pushf
iret
xchg
cltd
insb
sbbl
add
lods
push
iret
lcall
pinsrw
jecxz
ja
iret
and
pop
xor
dec
mov
jo
adc
push
mov
jl
stos
mov
push
int
xor
fcomi
add
imul
dec
ja
sbb
cltd
lret
test
sbb
stc
add
sub
int3
inc
mov
fsub
popl
aas
shlb
dec
mov
and
mov
rcll
mov
nop
add
nop
mov
test
in
xor
xchg
push
pop
push
xchg
mov
adc
xor
iret
push
mov
popa
repnz
cmp
dec
jge
mov
add
xor
sub
inc
hlt
sar
jle
insl
ljmp
dec
push
add
nop
xchg
dec
syscall
jg
push
enter
adc
lods
inc
rclb
push
inc
adc
into
add
or
and
es
pop
adc
lret
mov
cli
push
push
push
lcall
int
add
enter
pop
dec
pusha
ds
or
mov
pop
fistl
xor
loopne
outsb
jecxz
jo
popf
incl
js
mov
add
test
cmp
lock
jbe
add
xor
or
jmp
cmc
clc
imul
inc
inc
in
mov
leave
jg
mov
test
mov
push
outsb
mov
add
pop
test
push
inc
push
xor
adc
ret
xchg
test
and
stos
sbb
cmp
sub
loopne
js
xor
mov
in
push
sub
pop
out
sub
xor
outsb
movl
inc
inc
push
sub
inc
mov
pusha
adc
test
decl
fadds
cmpl
xchg
mov
imul
rcl
dec
and
aas
mov
gs
test
mov
mov
adc
push
mov
inc
and
stos
cmp
dec
in
mov
jg
inc
pop
xor
xchg
mov
andb
push
or
ret
adc
or
mov
mov
mov
jge
xchg
jl
fnstcw
arpl
leave
mov
js
leave
rclb
xor
les
sub
into
lods
in
push
jge
pop
add
xchg
pop
dec
punpcklbw
subl
pop
pop
imul
mov
lods
daa
movsb
push
mov
sbb
outsl
inc
jle
xchg
ds
xchg
mov
flds
in
roll
jecxz
or
scas
mov
cmp
jle
fs
into
test
arpl
push
ss
and
push
fstps
hlt
sarl
dec
shll
int3
and
int
mov
test
imul
or
add
sub
push
and
mov
push
xchg
sub
ret
inc
shrl
and
jl
ds
push
mov
outsl
out
xlat
xor
mov
arpl
pop
mov
nop
xchg
enter
add
mov
shl
adc
mov
cmpsb
out
cmp
bound
ds
shrb
aas
mov
repz
xor
push
inc
lcall
cmp
cmp
pop
or
xchg
adc
push
mov
mov
aad
aas
mov
mov
out
outsl
inc
add
cli
mov
xor
mov
adcl
xlat
jno
lock
je
inc
enter
shrb
pop
fiaddl
out
jmp
test
or
sti
jge
mov
mov
xor
xchg
xlat
outsl
test
test
dec
mov
out
out
lret
dec
repz
mov
adc
pop
sub
sub
inc
test
pop
test
dec
les
lahf
inc
xor
pop
sub
in
sbb
push
insl
lods
test
inc
push
xor
out
shlb
sbb
sti
adc
adc
lock
mov
fmuls
or
add
insb
pop
lock
jmp
sti
popa
push
sbbb
daa
pop
lods
xchg
pop
out
jecxz
inc
cmp
sub
into
lds
ret
out
lds
cmpsl
int
fisubrl
test
aas
mov
lahf
or
xchg
push
adc
jae
sti
insl
aad
movsl
mov
loope
popf
cld
mov
in
test
push
sbb
inc
jle
mov
fnstenv
inc
jecxz
mov
mov
mov
fnstsw
std
inc
fwait
das
jae
sti
dec
addr16
outsb
cwtl
pop
mov
dec
adcl
add
repnz
lret
mov
sbb
scas
sub
mov
and
pop
mov
push
cmp
das
sbb
push
ja
inc
shl
sub
mov
cmp
cmp
lcall
scas
or
aas
mov
imul
adc
pushl
xor
mov
sub
xchg
loopne
sbb
pop
mov
jo
fwait
cld
xchg
xchg
insl
sti
aad
dec
xchg
bound
repz
xor
ljmp
mov
dec
xchg
inc
add
adc
in
popa
sbb
pop
mov
scas
js
and
jns
sub
imul
into
or
arpl
adcb
sub
push
jno
aas
js
jno
inc
pop
xor
je
sbb
cmp
das
fstps
adcb
xor
or
pop
out
ror
push
cmp
leave
mov
ret
fisubs
push
mov
mov
repz
shlb
lret
and
inc
xchg
and
adc
push
push
mov
enter
mov
mov
fs
test
call
mov
stos
xchg
and
lods
dec
fwait
addr16
mov
cs
gs
jnp
jl
gs
andl
cld
dec
stos
push
push
lock
in
or
movsb
sub
aam
dec
mov
adc
add
sub
xchg
imul
fisubl
ret
in
rorl
sbb
loope
nop
std
dec
push
out
jp
rorb
xchg
jl
push
sbb
popf
bound
cmc
mov
fs
adc
cmp
sti
hlt
insb
or
pusha
aad
stos
xchg
js
mov
aas
mov
out
insb
addl
outsl
mov
mov
jbe
xor
mov
pop
sbb
adc
mov
ss
dec
mov
fstps
popa
mov
and
rclb
fucom
jns
mov
push
inc
sub
loop
cmpsl
sbb
hlt
movsl
fistps
loope
out
sub
push
pop
in
fmuls
rclb
lret
push
flds
mov
ds
pusha
and
mov
dec
in
ret
pop
cmc
cmpsl
inc
add
cli
bound
shll
push
push
testb
ret
cmpsb
cltd
shrl
sarb
in
cmpsl
push
dec
mov
aas
sbb
cmp
or
int
mov
inc
add
shll
les
scas
and
stos
insb
mov
push
les
les
fmuls
lods
ror
push
xor
mov
stos
mov
scas
push
aaa
insb
int3
push
mov
push
test
stos
dec
aas
fldcw
cmp
pop
or
xchg
cmp
push
jp
int
lret
dec
sub
inc
cs
sbb
adc
or
clc
mov
mov
xchg
sub
cmpsb
ror
xchg
ds
rcr
pop
in
pop
popa
inc
js
iret
cmpsb
xrelease
int3
cmpsb
lea
cmpb
cs
pop
sbb
xlat
mov
lds
popa
out
pop
mov
imul
push
mov
pop
pop
cmp
dec
mov
andb
push
leave
xchg
out
fimull
xchg
rorb
lret
xchg
xchg
sbb
ljmp
pop
push
subb
ret
sbb
out
fstpt
test
pop
imul
sub
pop
xor
aas
mov
mov
sbb
push
cmp
sahf
pop
scas
xor
dec
jg
push
inc
cs
jecxz
outsl
push
lret
pusha
sbb
leave
cli
pushf
jbe
cmpsl
and
jnp
lods
sub
rcr
mov
mov
xor
pop
aam
pusha
push
cmp
jne
popf
aam
fldenv
push
scas
xor
ret
jnp
insl
fs
daa
push
stc
mov
xor
in
bound
jb
cmp
jmp
xor
mov
fldenv
fwait
sbb
sbb
iret
pop
sbb
lock
ja
cwtl
pop
ret
leave
hlt
mov
popf
dec
mov
loope
cmp
icebp
and
leave
mov
push
arpl
push
dec
inc
dec
mov
or
rorb
loope
jmp
lods
mov
dec
and
cltd
enter
aaa
pop
xchg
cmp
mov
orb
fisubrl
dec
mov
mov
cmp
fstp
loopne
ss
xchg
test
push
dec
mov
add
dec
test
incl
movsl
aas
mov
sti
notb
icebp
pop
and
mov
add
mov
dec
mov
pusha
cmp
ljmp
shll
mov
andl
popf
fldcw
daa
xorb
inc
lds
lret
mov
cmp
sbbb
and
flds
gs
fwait
xor
cmpsb
insl
or
and
adc
and
or
insl
xchg
int
inc
inc
and
lret
scas
inc
jecxz
test
dec
mull
mov
fs
cmp
jg
fiadds
sti
cld
cs
cmp
adc
repnz
scas
jmp
or
xchg
int
mov
mov
insb
popf
mov
fcomps
cmp
test
sbb
push
push
outsl
pop
imul
cwtl
mov
jno
imul
jecxz
cmpsb
inc
int3
int
addps
rorl
adc
addb
dec
data16
pop
fisttpll
mov
dec
cmpsl
test
popf
mov
xchg
movsl
js
loopne
insb
testl
test
sti
mov
test
pushf
mov
rolb
mov
jl
xchg
mov
xchg
push
pushf
nop
or
fucom
xchg
jo
mov
mov
or
mov
mov
arpl
jle
mov
mov
ss
push
bnd
inc
clc
mov
into
adc
and
popf
loop
or
in
sub
rcl
pop
mov
and
jp
adc
mov
lahf
in
lods
bound
add
data16
aaa
xchg
pop
xchg
into
xchg
push
js
jb
das
jg
scas
enter
dec
push
pop
mov
add
push
push
rcrb
mov
jp
xlat
je
or
rcrl
gs
setp
mov
mov
push
jmp
add
stc
push
nop
in
adc
cltd
dec
es
fidivl
pop
push
aam
jns
fsubl
lods
pushf
and
lahf
inc
dec
xchg
icebp
xchg
das
in
fcmove
inc
movsl
sub
popa
inc
imul
xchg
aas
imul
push
xchg
and
je
mov
bound
jbe
jo
jmp
xchg
lret
lret
dec
cmp
rclb
addr16
sbbl
adc
sahf
movzbl
movsl
xchg
mov
sbb
xchg
lret
push
pop
mov
scas
sub
add
jae
popa
or
dec
cmp
test
movsl
jne
test
add
add
sub
xchg
mov
inc
dec
mov
movsb
test
sahf
leave
negb
es
xor
mov
addr16
into
pop
inc
cmp
imul
mov
popf
mov
popf
add
xchg
lea
fwait
mov
loopne
leave
inc
mov
add
jbe
stc
lret
lea
pop
repz
inc
xor
rcrb
push
lds
pop
fdivs
testb
add
les
orl
push
inc
mov
push
jge
mov
dec
mov
out
fistpl
ret
jb
push
mov
pop
mov
add
push
or
mov
cmp
add
pop
fcmovnu
xlat
cmp
add
jnp
lahf
push
mov
mov
pop
or
lret
pop
movsl
mov
xor
mov
jns
movsb
xchg
cs
jnp,pn
jns
mov
xchg
sbb
cmp
push
xchg
dec
sti
sub
les
es
ret
rclb
inc
stc
mov
mov
pop
sub
jns
mov
jae
into
lret
add
icebp
pop
fsubr
jae
or
xor
hlt
fisttps
test
lods
sub
inc
push
and
or
mov
test
or
adc
dec
adc
jns
xlat
inc
mov
insb
sbb
inc
in
pop
das
pop
repnz
jno
cwtl
enter
mov
pop
and
sbb
sbb
mov
out
cmpsb
fisttpl
cmc
enter
outsb
jmp
popf
mov
jb
or
cwtl
push
mov
addb
mov
mov
leave
test
xchg
sbb
lret
scas
mov
in
xchg
lds
add
jnp
pushf
stos
inc
fisubs
xor
add
outsb
push
jge
stos
movsb
movsb
sub
pop
aaa
or
sub
cmpsl
xor
adc
ds
pop
movsb
enter
jae
addb
xor
pop
in
push
mov
aad
adc
or
lea
es
pop
gs
lods
ss
stc
xor
jne
inc
outsb
mov
test
cld
dec
cmp
jne
push
pop
xchg
pushf
adc
shlb
mov
scas
stos
mov
xor
or
dec
movsl
pop
dec
or
jne
inc
push
mov
mov
clc
scas
push
xor
mov
rorl
mov
lock
stos
dec
mov
mov
sub
dec
jno
cwtl
stos
or
out
icebp
xchg
sub
lea
add
arpl
in
adc
nop
out
inc
add
mov
adc
adc
imul
icebp
dec
cmp
cmc
and
les
xchg
mov
das
pop
mov
mov
pop
pop
out
mov
cmp
xchg
lahf
jnp
sbb
cli
fwait
lret
mov
inc
inc
outsl
pop
aad
into
sbb
fcompl
pop
cmpsl
push
sbb
push
dec
out
lea
mov
mov
and
adcb
jns
pop
mov
xor
scas
jbe
ss
ds
and
sub
xchg
and
int3
outsb
ss
xchg
xchg
int3
push
add
mov
shl
mov
insl
fstpl
repz
adc
xor
lcall
dec
orb
lea
adc
sub
sbb
nop
lods
push
js
scas
mov
mov
fcoms
mov
ja
mov
in
std
mov
mov
test
aaa
test
into
or
pop
and
sarl
lods
jp
or
dec
mov
cmp
push
jne
out
mov
cmpsb
lret
lock
mov
sahf
scas
insl
enter
repnz
adc
in
fdiv
jmp
sbb
adc
out
jmp
jmp
dec
or
push
cmp
pop
cmc
push
shr
mov
divb
mov
aam
bound
jns
sub
insl
ljmp
lds
adc
cmp
xchg
xor
pop
mov
push
aaa
repz
xlat
ret
jl
inc
sub
inc
inc
stc
invd
pop
inc
addr16
int
xor
fimuls
mov
ja
popa
mov
cmp
imull
aas
sub
pop
js
jae
sub
cmc
fisttps
sahf
inc
aaa
pop
push
add
and
testl
xchg
sbb
sub
popa
les
add
push
cltd
sub
pop
xchg
sub
test
lock
rorb
jp
push
fs
cmpsl
inc
shll
and
ds
add
iret
xchg
xchg
jg
inc
mov
fidivs
jecxz
and
push
sti
mov
dec
pop
mov
test
inc
mov
lock
je
insl
into
xlat
mov
int3
mov
push
aas
js
dec
test
sbb
cmpsl
mov
test
mov
pusha
push
mov
cmpsl
stc
xor
mov
cmp
mov
adc
idiv
sub
fsubl
pop
mov
dec
cmc
jns
es
xchg
lahf
fwait
xor
add
cwtl
pop
sub
cmp
nop
into
xor
jmp
mov
push
mov
inc
jl
imul
sub
jmp
std
add
cmp
add
push
mov
push
lock
pop
ds
mov
inc
stc
scas
pop
mov
mov
movsl
lea
cmp
ljmp
in
adc
addr16
or
aas
arpl
cwtl
xchg
or
xchg
ret
sti
sub
jo
sub
test
into
jne
clc
ss
js
sub
jg
xchg
aam
pop
push
rorl
fwait
cmp
rcl
fmuls
ret
and
mov
push
daa
xor
and
dec
or
and
pop
jl
push
jmp
mull
mov
push
xchg
mov
pushf
ret
repnz
lods
nop
call
out
fwait
addl
inc
cwtl
dec
push
add
sarl
call
cmc
popa
sub
cmpb
insl
push
enter
or
loop
jge
into
stc
lods
fwait
or
sbb
sarb
push
lret
mov
xlat
mov
add
addr16
push
add
xchg
out
fs
xor
push
push
ss
sbb
mov
dec
cltd
xchg
jmp
jo
arpl
jno
fistpl
adc
lea
cmp
pusha
enter
mov
and
les
ffree
cli
iret
lret
pop
shlb
mov
pop
in
pop
inc
in
ss
add
mov
popf
pop
cwtl
fcmovnb
sti
jg
mov
sahf
loopne
aam
push
mov
cmp
inc
xchg
hlt
cmp
cmp
xchg
fsubr
xchg
lds
jle
call
or
mov
push
add
lods
outsl
stc
pop
mov
js
adc
cwtl
iret
xor
lret
lret
mov
dec
stos
inc
push
jg
jecxz
push
loopne
push
and
xchg
xchg
es
push
fwait
jp
iret
and
sub
cltd
in
test
shr
inc
or
out
xchg
inc
js
push
aad
cmpsl
adc
movsl
push
lds
add
clc
xchg
add
mov
lret
adc
loope
std
jo
gs
loop
mov
jmp
test
shrl
rolb
add
sub
and
leave
jge
sahf
push
icebp
int
idivl
out
fmul
imul
and
fdivrl
and
dec
hlt
in
aad
sbb
or
xor
cs
jns
jne
or
mov
punpckhwd
mov
lret
pop
mov
popa
test
cmpsl
mov
inc
aaa
movsb
sub
fwait
mov
out
int3
adc
popf
movsb
xchg
fidivrs
pop
push
push
rorl
push
es
jno
add
nop
mov
cmc
cli
push
andb
xlat
push
xchg
inc
cmp
aam
inc
or
add
jl
pushf
cmp
fs
fwait
mov
sbb
mov
in
mov
aam
rol
adc
cmp
sbb
push
push
adc
int3
pusha
jge
mov
add
sbb
repz
repnz
mov
scas
push
popf
fsubr
sbb
ret
into
in
xchg
fnclex
jl
push
sub
insl
pop
dec
adc
add
add
mov
outsl
sub
sub
sub
sbb
sub
fxam
push
push
shl
xlat
insb
cwtl
lock
push
pop
insl
sub
inc
sbb
int
push
div
sub
or
push
movsb
xlat
sbb
das
cmp
cs
jl
dec
lahf
div
dec
pop
cli
lahf
mov
or
out
orl
sbb
fstps
xor
das
and
ss
shll
add
addps
sub
jge
movsb
push
and
push
jo
push
mov
pop
sbb
mov
xor
fwait
cmp
inc
push
push
fcmove
and
mov
orb
lock
pop
arpl
test
ja
inc
push
nop
addr16
lock
es
jg
sub
mov
mov
stos
subb
push
jno
ds
mov
push
cmp
xor
cmp
in
push
lcall
fbstp
mov
ficompl
jb
scas
aaa
jo
mov
mov
lock
out
xchg
test
lcall
arpl
cltd
pop
test
mov
test
in
ja
ss
pop
jno
inc
in
xchg
add
pusha
xor
aad
push
bound
mov
inc
ds
je
dec
mov
sub
mov
cmp
test
jbe
sti
mov
call
dec
mov
sub
push
sbb
mov
jno
jne
inc
shr
test
ret
outsb
cmpsl
mov
lret
ja
pop
jae
adc
cli
jl
push
jp
lods
add
pushf
jl
or
daa
sbb
icebp
daa
mov
and
fs
ret
inc
clc
and
add
aaa
out
imul
mov
or
and
fsts
and
test
in
dec
jo
bound
lret
int
lock
add
lret
repz
cmc
shrl
idiv
sarb
xchg
jbe
jmp
sbb
mov
aas
out
stos
into
push
mov
mov
push
cmp
jo
roll
daa
test
out
pop
or
mov
jns
test
cs
sbb
iret
mov
and
jns
psllq
inc
gs
jecxz
pcmpeqb
enter
stos
cmp
lods
loopne
adc
adc
lock
pop
incb
imul
sub
xchg
xchg
test
jg
jbe
ds
and
fs
pop
mov
test
imul
mov
xchg
mov
mov
mov
addb
jecxz
aaa
mov
stc
rclb
xchg
cmpsb
test
jl
rorb
and
cmpsl
lahf
xor
adc
cmp
shr
test
push
imul
cmpsl
sub
and
dec
mov
nop
push
fdivrp
xchg
mov
cwtl
mov
adc
mov
orl
pusha
push
xchg
and
jge
sub
cmc
mov
sbb
popa
mov
mov
sub
fisttps
into
leave
fsubr
out
inc
jmp
mov
stc
inc
daa
shll
jbe
push
cmpl
into
aas
jbe
xor
xor
psubsw
push
xchg
mov
pop
hlt
inc
and
aaa
sbb
mov
mov
mul
inc
movb
adc
mov
mov
mov
cmpsl
mov
cmc
adc
and
inc
movsl
ret
jae
cmp
push
movsl
cmp
fiadds
push
lret
aad
daa
or
or
js
insb
dec
mov
stc
mov
jae
mov
outsl
pop
push
sub
pop
xor
insl
fisttpl
push
in
clc
sbb
jecxz
cmpb
cmpsl
mov
mov
in
or
lret
dec
push
sub
jge
sub
or
or
loopne
pop
cs
ja
pop
repnz
inc
sbb
xlat
insb
daa
imul
scas
lret
push
pop
lock
call
mov
mov
mov
push
add
scas
or
fidivrl
data16
loop
inc
xchg
dec
adc
jl
jnp
mov
inc
push
lcall
mov
lods
push
insb
arpl
push
aam
leave
testb
lret
push
hlt
int3
je
cmc
cltd
dec
das
bound
xchg
adc
repnz
sbb
aas
cmp
dec
push
mov
sbb
cmp
sbb
xchg
insb
fcomip
mov
pop
sub
aas
sub
lret
inc
sub
xchg
or
or
repz
xchg
pop
icebp
sbb
inc
jo
xchg
aas
or
mov
fdivrp
in
dec
add
daa
pushl
xor
scas
sbb
sub
mov
add
ds
mov
pop
pop
xor
cmp
and
insb
push
ja
mov
pop
adc
xor
dec
clc
in
sbb
sub
mov
adc
sti
lods
xor
cmp
push
mov
cmp
push
jbe
push
cltd
push
mov
push
inc
inc
dec
or
out
stos
push
shll
fnstenv
jl
inc
push
xchg
jmp
popf
pop
cmp
lods
cmp
pop
inc
arpl
push
jne
int
cld
inc
jae
ja
add
lret
sti
out
ret
out
filds
cwtl
jns
inc
mov
jnp
mov
adc
cmpsb
out
xor
mov
jge
xchg
cmp
test
adc
lret
inc
ret
push
ret
movsb
add
int3
push
mov
add
push
cmp
add
cmc
clc
ja
sub
jno
push
mov
les
jno
pop
ret
outsb
std
mov
fsub
sbb
xchg
inc
js
mov
mov
aam
aaa
jg
pop
pop
aaa
adc
lods
or
lea
mov
sub
jb
xlat
ds
in
push
inc
mov
inc
das
sub
fsts
in
cmp
inc
jmp
test
mov
cmp
das
xchg
pop
jae
jecxz
ror
not
ficoms
aaa
in
aam
daa
popa
xchg
inc
out
std
pop
xchg
or
stc
orl
lods
sbb
loop
mov
ret
in
mov
pop
cmp
or
aas
out
int
pop
mov
das
ja
test
out
es
je
and
data16
arpl
dec
enter
mov
insb
cmp
loopne
inc
fdivrl
adc
mov
nop
mov
mov
cmc
cmc
adc
in
inc
cmp
lcall
hlt
adc
shrl
push
jno
mov
jle
data16
pushl
xor
mov
cli
rorb
mov
jmp
fidivl
in
mov
test
jl
fdivp
xor
push
add
sbb
adcl
lods
mov
push
repz
fisttps
xor
jmp
cmp
and
scas
mov
cmp
mov
jno
icebp
mov
pop
loop
cmp
daa
sbb
xchg
mov
cltd
mov
xor
dec
roll
mov
cltd
cwtl
adc
push
hlt
fldl
jae
push
push
jmp
sbb
cmp
icebp
jmp
push
in
mov
xchg
int3
or
hlt
fstps
ss
daa
xchg
push
dec
dec
pop
dec
push
decl
mov
dec
imul
pop
pop
aad
aaa
push
fdivl
cs
rcrb
movsl
mov
push
jns
stos
cmp
pop
fisttps
ret
out
repz
inc
or
mov
sbb
insb
out
mov
sub
cmp
xor
pop
lret
pop
and
les
xchg
ss
xor
pop
mov
jne
dec
dec
std
pop
in
aaa
les
dec
popf
mov
loope
dec
xchg
movsl
mov
cld
sbb
and
jl
cmc
jo
pop
or
movsl
sub
sbb
mov
ret
in
adc
mov
jmp
xchg
and
sub
outsl
pop
xorb
adc
jb
jg
xor
outsb
pusha
inc
push
sub
mov
and
in
mov
aad
scas
push
int3
rorb
les
push
xor
add
mov
cmp
push
addr16
mov
xchg
pop
jb
shll
movsb
adc
pop
mov
popf
vmovdqa
mov
push
movsl
daa
int3
xchg
mov
jno
test
mov
mov
imul
pop
addr16
adc
push
lret
aaa
bound
leave
sbb
or
or
sbbb
addl
in
adc
push
scas
cmp
inc
nop
out
shrb
jle
mov
mov
or
xor
sub
jno
mov
jge
and
arpl
jl
and
xchg
lods
or
pop
mov
cmc
sub
push
cltd
push
add
push
insl
inc
mov
mov
lods
movsl
in
lods
xchg
adc
xor
jmp
cld
gs
aad
clc
ljmp
ficomps
mov
jb
jo
aas
sbb
adc
add
add
repnz
cmp
add
push
cmpsl
sahf
jae
ljmp
jl
les
sbb
pop
dec
jb
idivl
scas
outsb
push
push
in
lret
movsb
lcall
xchg
lds
sti
jnp
jns
sbbb
dec
addl
es
in
adc
ja
or
jno
mov
inc
jmp
jne
imul
les
stc
mov
outsb
or
stc
repz
mov
add
mov
icebp
cmp
les
fiaddl
or
jl
test
aas
pop
sub
mov
aaa
jp
sub
leave
clc
xor
mov
push
faddl
pop
mov
popa
call
jns
mov
and
cli
cltd
mov
loope
add
movsb
xchg
mov
in
je
int
mov
pop
inc
fstpt
iret
sbb
call
imul
xchg
dec
xchg
sti
mov
jle
cmc
jb
stos
int
loope
sub
dec
gs
cli
and
cltd
and
add
sbb
xor
and
outsl
or
push
jge
inc
mov
outsb
cmp
aam
test
cmp
lods
out
bound
inc
lods
mov
rorl
xchg
adc
int
sub
call
jo
sub
add
lds
push
in
xor
push
and
mov
jnp
dec
cld
xchg
ja
push
adc
mov
cmpsl
daa
aad
xchg
lods
adc
lret
je
mov
lcall
mov
pop
add
push
pop
push
mov
dec
inc
lods
movsb
out
fsubs
push
repz
xchg
lret
test
cwtl
push
out
cwtl
xchg
sub
push
rolb
xor
xchg
divb
mov
xor
sti
jg
aad
push
shlb
jl
ja
nop
add
inc
xor
ret
jnp
hlt
or
sub
jb
inc
inc
pop
xchg
push
xchg
pushf
cmpsl
push
mov
sub
pop
xor
jns
mov
xchg
and
lcall
jp
pop
xchg
ljmp
mov
lds
rorb
dec
lock
ss
scas
rcl
xor
push
mov
lcall
mov
iret
imul
mov
mov
pop
pop
mov
mov
xor
fidivl
fnstenv
jecxz
pop
pop
xlat
mov
adc
add
mov
aam
rcl
xchg
pop
mov
aaa
sbb
testl
fwait
cmp
out
ja
mov
or
or
pop
lcall
adc
lock
push
insb
jmp
pop
pop
adc
mov
sbb
adc
js
jmp
jp
push
inc
xor
int3
push
jne
loop
mov
ret
mov
out
jp
lods
fmuls
xchg
and
add
jle
sbb
mov
cs
jg
rolb
sbb
adc
shrl
icebp
out
add
pop
add
sbb
std
mov
aas
arpl
cmovno
jmp
leave
jbe,pt
cmp
outsl
dec
xchg
lcall
inc
mov
xlat
or
sub
jno
test
add
fcoms
pop
stos
stos
mov
aad
lods
cmp
test
mov
lret
jmp
adc
push
mov
xchg
cmc
lcall
pop
adc
outsb
mov
jp
popf
scas
loop
cmp
sbb
out
in
mull
scas
inc
and
jo
bt
dec
add
int
and
jnp
inc
ljmp
cmp
push
xchg
mov
push
enter
shr
cld
mov
inc
jno
adc
cwtl
jle
pop
fidivrs
jge
adc
aad
inc
ret
loop
sbb
and
inc
adc
or
popf
adc
add
cmpsl
push
iret
arpl
test
and
adc
jge
ret
push
adc
mov
add
mov
sti
imul
hlt
shr
mov
sub
test
xor
xchg
pushf
or
test
push
pop
mov
xchg
pop
inc
add
pop
inc
xchg
add
cmpl
pop
pushf
mov
fwait
test
rcl
push
mov
stos
movsb
add
cmp
nop
pop
add
jo
mov
or
push
or
pop
adc
enter
sbbl
test
daa
cmp
fnstenv
pop
sti
mov
mov
pushf
enter
add
in
push
pop
or
fisubrs
notb
push
daa
xor
pop
js
xchg
clc
mov
stos
dec
out
push
in
mov
loopne
ret
jne
push
fisttpl
cmpsl
adc
ss
inc
cmpsb
fbstp
imulb
andb
hlt
pop
aad
loop
das
and
push
mov
mov
sub
sub
cmp
mov
mov
popa
jbe
sahf
lret
push
mov
mov
mov
enter
cmpsl
mov
je
xor
and
cmp
fs
aam
ret
xor
daa
popa
jo
inc
jne
xor
cmp
jmp
or
mov
inc
push
sbb
pop
fistpll
movsb
lret
or
mov
xchg
jp
or
sbb
mov
and
add
xchg
in
ja
adc
push
iret
inc
outsl
pop
insb
inc
ljmp
add
push
les
aaa
subb
stc
cmpb
lret
hlt
cmp
insb
cmpsl
mov
scas
and
pop
inc
call
xor
rcrb
out
sbb
daa
add
shl
and
jne
push
aam
jnp
lret
ja
xchg
sbb
dec
cwtl
sub
xor
stos
scas
lds
mov
cmc
psubb
mov
jmp
test
dec
xor
push
pop
inc
dec
xchg
push
xchg
jge
cmpb
fwait
iret
jmp
shrl
jno
stos
jle
and
sbb
push
lea
mov
cltd
clc
sbb
mov
jae
out
pop
pop
xlat
in
mov
xchg
movb
dec
test
sub
push
loopne
xchg
xchg
sub
jg
sub
mov
sub
xchg
pop
fisttpll
push
movb
xor
lret
sahf
aad
pop
sbb
fwait
mov
sub
into
add
bound
andb
icebp
lock
dec
test
fs
jl
push
fcoml
fldl2e
jb
mov
xor
hlt
jg
sbb
jge
adc
lods
mov
cmc
cmpb
mov
rol
rcl
sub
jmp
pop
add
mov
sbb
push
adc
mov
mov
mov
mov
sbb
cwtl
pop
fs
or
cmp
ja
jl
mov
cmp
mov
cmp
enter
js
sub
mov
lret
dec
cmc
loopne
jl
or
fimull
dec
mov
hlt
leave
into
icebp
pop
jne
arpl
imul
and
fstl
in
sbb
lahf
or
ja
imul
in
fiadds
jne
pop
and
sbb
jl
jmp
lea
pop
mov
fwait
ror
in
sahf
mov
outsl
enter
ljmp
jae
pop
notl
adc
cltd
pop
jne
cmp
xchg
mov
call
xorb
jp
hlt
jmp
cltd
cmpsl
xchg
repz
pop
add
jp
add
xor
repz
cmp
nop
fcomp
mov
insl
inc
lea
jl
stos
jo
lds
fucomip
pop
dec
mov
xor
jl
jg
inc
mov
int3
and
mov
mov
scas
repnz
add
outsl
cmpsb
lret
adcb
xchg
sti
in
adc
jb
incl
shlb
xor
push
scas
loop
out
add
jp
ss
lret
andl
xor
cmp
xchg
dec
push
cmc
movsb
fisubl
rorl
sub
mov
bound
jbe
fcom
lods
dec
je
sub
sti
push
pop
fdivl
and
add
orl
dec
movsb
and
adc
mov
iret
icebp
sub
andl
lds
xor
push
hlt
fstps
movsb
push
jno
and
shrb
mov
clc
push
or
in
test
rcll
outsb
das
stos
and
pop
gs
dec
inc
push
inc
jae
sbb
icebp
add
adc
fidivrl
stos
inc
stos
loop
das
es
xor
aam
push
mov
push
xchg
or
out
dec
mov
push
dec
dec
pop
hlt
lahf
mov
sub
add
enter
pop
inc
sub
es
out
sbb
jbe
mov
cld
pop
adc
xor
dec
xchg
xor
je
xchg
sti
cmp
jge
xchg
mov
rep
mov
shrb
fiaddl
cli
xchg
push
sub
xchg
dec
push
jnp
push
inc
mov
bswap
push
out
inc
in
sti
sbb
xchg
adc
fisttpll
inc
imul
loop
jae
push
fimuls
pop
cli
mov
movsl
push
and
mov
push
pushaw
mov
add
inc
inc
adc
mov
sbb
jecxz
lret
js
sub
xchg
mov
or
inc
popa
int3
or
mov
mov
push
repz
out
loop
xor
dec
cmp
pop
sbb
jb
js
sub
sbbb
fisubrl
clc
mov
arpl
sbb
mov
xorl
cltd
xor
faddp
aam
out
cld
sbb
push
ds
pop
push
mov
aam
dec
in
pop
mov
loope
lea
insb
cwtl
cmp
mov
push
hlt
out
jbe
push
xchg
dec
cmc
sbb
cmp
ss
cmp
or
or
imul
jge
dec
and
insl
sti
mov
fnstsw
call
dec
outsl
jl
cltd
sbb
add
push
addl
pop
aam
in
popa
aad
inc
add
xchg
sti
pop
dec
sbb
add
cmpsb
and
les
push
or
adc
jne
and
repnz
in
imul
pop
jp
inc
fdivl
test
jae
test
movsl
aad
mov
xor
mov
push
add
aam
xor
xchg
in
repz
xchg
jle
jbe
mov
clc
inc
cmp
movsl
int
mov
pusha
nop
out
popf
or
xor
aam
outsl
mov
les
pusha
cmpsb
ljmp
jns
in
fs
add
mov
scas
je
andb
lcall
sbbb
dec
push
and
daa
xor
mov
dec
jne
jp
xor
mov
inc
mov
push
mov
add
in
repnz
hlt
sbb
jb
jle
xlat
dec
inc
mov
stos
pop
inc
std
addr16
push
loope
std
pop
daa
hlt
inc
and
pop
ja
pop
out
inc
in
bound
fisttpll
mov
and
adc
sbb
ljmp
fnstsw
andl
fs
daa
cmp
mov
inc
out
or
mov
leave
test
or
insb
add
outsb
js
adc
stos
pusha
mov
clc
icebp
es
or
nop
mov
mov
xchg
dec
xor
mov
sub
pop
loopne
inc
xchg
out
xlat
pop
adc
ljmp
add
arpl
jle
testb
rcll
jl
repnz
pusha
jmp
xchg
jg
aam
das
test
popa
mov
jae
jno
in
or
lds
sub
daa
pop
adc
inc
into
xlat
mov
and
sarb
or
imul
test
cmc
jmp
sub
daa
out
dec
daa
mov
test
cmpsl
xor
in
lods
mov
in
scas
sbb
lock
adc
into
sub
cwtl
or
mov
pop
inc
push
cmpsl
fcompl
jbe
outsl
jnp
push
scas
mov
and
add
add
jb
push
xor
jmp
loop
xchg
cmp
test
adc
jb
mov
pusha
icebp
cmp
xor
movsw
cmpsb
das
nop
in
idivb
in
in
mov
insl
stos
dec
cmc
mov
into
cmp
lret
outsb
jo
into
or
inc
call
xlat
mov
jb
nop
leave
into
les
ja
push
lahf
in
xchg
ljmp
push
jb
sbb
sub
and
xor
lea
leave
xchg
jae
xchg
and
imul
mov
and
hlt
mov
sbb
xchg
push
sbb
xchg
test
adc
xlat
shl
mov
adc
ljmp
push
pop
out
jns
or
inc
pop
xchg
shll
sbb
mov
add
xor
add
call
mov
adc
pop
mov
adc
loopne
add
rolb
add
jbe
xlat
mov
movsl
hlt
mov
mov
repz
into
pushf
cmp
lret
nop
out
and
out
bnd
fdivrs
inc
out
xchg
xchg
mov
arpl
sbbl
shrl
add
mov
ds
test
lea
dec
xchg
pop
add
fdivl
xor
cmp
enter
nop
and
mov
repz
jge
jae
xor
icebp
lret
jnp
dec
mov
dec
or
push
mov
sub
sarl
or
sbb
push
mov
rclb
sarl
mov
mov
test
add
pop
add
les
cwtl
push
inc
and
xchg
les
je
push
movb
imul
xor
or
nop
mov
jmp
xchg
push
decb
repz
popa
mov
sub
in
pusha
push
popf
loopne
pusha
jmp
shrb
scas
in
aam
rep
push
mov
xchg
jmp
iret
pushf
push
pop
jo
mov
lods
mov
popaw
adc
lret
rcll
inc
lea
or
xor
mov
mov
je
je
iret
imul
stos
cli
sub
push
push
stc
ss
arpl
mov
rorl
sbb
fwait
call
ss
jbe
out
dec
sub
push
xor
movsl
sub
jle
sahf
mov
ret
sbb
iret
sar
adc
js
xlat
pop
pop
sub
jge
adc
bound
into
xor
addr16
push
sub
jno
mov
adc
lds
orl
mov
mov
fidivrs
aad
inc
std
push
fsts
addl
xor
cmp
sub
in
xchg
xor
mov
mov
push
call
mov
cmp
mov
icebp
pop
push
aas
mov
cmpsl
ljmp
or
adc
rcrl
push
icebp
xor
hlt
ret
enter
and
test
xchg
inc
cmc
nop
lods
and
jo
add
call
ret
dec
adc
add
jmp
scas
dec
jl
push
add
add
insl
insb
movsl
int3
push
outsb
decl
push
xchg
rolb
ds
mov
pop
pusha
std
sub
stos
push
push
dec
inc
dec
sub
push
pop
and
jbe
and
mov
rcrb
push
sub
popf
mov
in
push
mov
adc
lcall
mov
push
mov
mov
jg
inc
mov
mov
lahf
ja
ds
xor
aas
adc
xor
jle
adc
loop
loop
sbb
cmp
int3
mull
fbld
repz
imul
popl
imul
repnz
jne
mov
scas
xchg
dec
out
addl
pop
mov
fs
xor
mov
cmp
push
dec
dec
aaa
test
xchg
mov
push
xor
lcallw
sbb
or
push
and
sahf
clc
push
push
sbb
cmp
jg
pop
jb
fisubs
add
out
fwait
pushf
sbb
dec
push
adc
xchg
das
cmc
imulb
or
jo
push
pop
ds
mov
pop
xchg
les
inc
dec
mov
push
jns
dec
shrl
rol
mov
lds
jp
stos
mov
mov
xchg
outsl
pop
fs
mov
xchg
cmc
jmp
loopne
jnp
popa
and
js
clc
aaa
sbb
mov
dec
jg
out
std
into
insb
dec
mov
pop
popf
mov
out
nop
or
cli
leave
adc
xor
leave
gs
shll
stos
jl
jne
test
mov
xor
stos
pop
jbe
pop
mov
push
rorb
jecxz
adc
pushf
call
mov
or
dec
cwtl
add
mov
sbb
shrb
div
cmpsb
bound
pop
aas
mov
jne
push
dec
out
xor
adc
jle
insb
cmp
out
jle
push
cmp
rcrb
test
pop
dec
mov
lods
or
std
call
xchg
je
mov
cmp
les
xorb
dec
push
or
int
pop
push
cmc
adc
outsb
sub
push
xchg
test
push
or
lret
jo
cltd
inc
or
outsb
xor
ss
hlt
fldt
push
pusha
mov
sbb
lock
push
movsl
jo
inc
mov
xchg
jg
pop
in
mov
lock
leave
jae
and
ss
mov
aaa
mov
sti
mov
cmc
mov
repnz
adc
jno
fs
inc
xchg
xorb
dec
pop
pushf
in
push
out
loope
push
xor
mov
dec
xchg
inc
pop
mov
fidivrs
sub
push
and
cwtl
or
loopne
mov
or
xor
cmp
leave
push
roll
addr16
pop
mov
or
std
xlat
test
inc
add
insb
repnz
jp
hlt
shlb
pop
in
pop
nop
jl
imul
or
lods
inc
cltd
xor
add
mov
jmp
hlt
jns
or
pusha
cmp
pop
subb
in
dec
cli
jne
cmp
sub
sbb
dec
mov
in
xchg
mov
pop
and
into
push
rolb
aaa
daa
and
pop
or
inc
out
int3
stc
cmp
ret
into
mov
cmp
adc
jge
repnz
push
sub
dec
iret
push
gs
adcb
dec
dec
push
or
test
cmp
hlt
sbb
mov
inc
inc
dec
adc
adc
sub
mov
fbstp
out
movsl
adc
xlat
arpl
les
sub
or
xchg
add
in
jne
add
cmp
popf
pop
fadd
jg
cwtl
aam
push
inc
pusha
dec
pushf
ja
jecxz
loop
adc
dec
and
pop
fisubs
push
lods
into
fisttps
mov
mov
jo
mov
xchg
dec
mov
and
xor
dec
cmp
out
cld
mov
lahf
ja
or
jmp
popf
jne
addl
xchg
pop
mov
insb
sarb
jns
pushl
and
push
mov
cli
mull
pop
dec
fdivrl
ror
jae
mov
inc
adc
cmpsl
pushf
and
scas
pop
pop
cmpsl
mov
pop
lret
cmp
dec
cmp
or
jge
cwtl
mov
mov
scas
call
jl
jge
jae
mov
shl
pop
in
dec
or
repnz
mov
cltd
lahf
add
roll
pop
mov
cmp
movsb
or
cs
decl
lods
mov
sti
icebp
sbb
ja,pn
lret
cmpl
sahf
push
pusha
adc
jns
cltd
or
xor
pop
push
into
jno
je
scas
cmpsl
push
push
adc
push
and
inc
mov
inc
mov
fcomp
xchg
inc
xor
push
push
cmp
shlb
pusha
mov
and
xchg
xchg
stc
push
in
cmp
adc
js
jb
sub
cli
repnz
push
sub
xor
pcmpgtw
jge
rcll
mov
sbb
dec
in
ljmp
loopne
jbe
mov
mov
in
shll
or
lret
pop
jno
jmp
test
mov
and
lock
test
cs
jnp
dec
popw
rcrb
hlt
aaa
loopne
xchg
cwtl
aas
xchg
test
call
imul
lret
mov
adc
data16
jp
inc
jne
cs
pop
sbb
call
push
sbb
mov
mov
test
inc
push
addb
and
xchg
sarl
add
xchg
rorl
into
push
outsb
dec
mov
lret
xor
or
mov
dec
in
sub
mov
shr
nop
xchg
jl
xor
insl
mov
inc
pushf
bound
fistpl
xor
fidivl
cmpsb
pusha
xor
push
mov
mov
movsb
popf
int
sub
adc
and
mov
dec
ss
xcrypt-ctr
cmpsl
pop
and
and
scas
inc
std
aad
mov
ret
add
stc
xchg
and
clc
sahf
rol
loop
push
push
adcl
and
loopne
mov
imul
testl
cli
xchg
shl
stc
push
or
jecxz
ffreep
and
enter
xor
jmp
filds
push
fsubrs
sar
lcall
pop
loopne
adc
shl
push
mov
xor
int3
mov
pushl
std
and
pop
add
out
je
test
movsl
jl
mov
push
repnz
out
xor
jl
bound
aaa
dec
xor
add
xchg
adc
mov
lds
aaa
add
iret
test
sbb
sbb
out
xchg
incl
out
fstps
or
mov
ret
adc
cld
enter
repz
test
int3
inc
sub
fistpll
xor
popa
xchg
or
pop
dec
das
lods
lret
lock
cli
mov
push
adc
adc
std
test
mov
mov
loope
mov
ss
sub
mov
popa
out
mov
lcall
stos
vzeroupper
call
lods
pop
ficomps
gs
sahf
inc
push
cmpsb
sub
pop
scas
mov
or
jae
shl
fdivr
cmp
pop
pop
pop
pop
lods
sub
addr16
scas
dec
add
in
stos
insl
pusha
cmp
and
and
in
cmp
cmp
jne
repz
push
rcrb
lahf
fstpt
or
xor
and
jg
mov
sbb
enter
loopne
leave
jb
pop
frstor
pop
or
pop
push
int
jmp
test
mov
or
pop
lret
mov
jmp
add
scas
jp
and
sti
mov
psubb
sbb
rclb
and
rclb
outsb
sub
or
sbb
popa
ror
xor
push
dec
cmp
in
nop
fsubr
mov
aad
shl
sub
cmp
mov
mov
sbb
inc
sti
jb
add
push
mov
dec
xchg
loope
cmp
sbb
in
lods
adc
push
bnd
inc
rcrb
cmp
inc
cmpsb
or
ds
mov
and
sbb
jg
nop
cltd
xchg
mov
jl
pop
add
pop
enter
pop
scas
rorb
sbb
popf
les
jmp
shlb
inc
aas
lds
mov
adc
dec
adc
push
test
dec
lods
lock
or
xor
shlb
mov
mull
push
mov
jp
xchg
leave
add
shrl
inc
outsb
xchg
adc
popl
fsubrl
popf
lock
push
or
fdivrl
add
rcll
or
orl
mov
pusha
push
pop
dec
das
ficoml
add
push
rcrl
adc
jb
cmp
or
or
sub
je
pop
sub
add
movsb
aam
ljmp
outsl
or
sub
adc
call
lahf
and
loop
xor
mov
push
test
pop
jbe
lods
and
cmpl
mov
in
fwait
and
pushf
outsb
push
ret
icebp
out
mov
add
cmp
and
dec
xchg
scas
jle
pop
cli
imulb
jl
adc
movsl
sar
clc
dec
push
or
pop
fistps
push
ds
jno,pn
pop
xor
jb
sbb
out
jmp
cltd
ffreep
pop
jecxz
leave
int
jb
mov
cmp
jg
dec
mov
jnp
xchg
xchg
insb
mov
enter
add
cmpsl
sti
sti
not
test
xchg
pusha
mov
mov
lahf
aad
xor
xchg
lea
mov
or
pop
insl
sub
std
test
push
xor
mov
push
shl
pop
and
add
mov
cmpsl
adc
jo
in
in
fistpll
lahf
cmp
mov
into
shl
mov
mov
stc
xchg
mov
xor
push
push
fldt
pop
mov
pop
add
cmp
and
mov
aad
inc
imul
push
adc
sbb
cli
sbb
push
sub
cmpsb
iret
mov
mov
out
mov
hlt
add
push
addb
cmp
or
lods
jle
jge
mov
sbb
mov
cwtl
testb
jmp
and
sub
ret
fs
out
js
insl
scas
pop
mov
stos
cli
bound
es
scas
sar
sbb
xor
pop
and
mov
and
mov
cltd
mov
mov
xchg
loopne
dec
decl
dec
cld
jg
cmpsl
adc
nop
insl
shrb
xlat
pop
sub
sub
push
fidivs
pushf
cwtl
je
cld
std
subb
or
add
push
ret
dec
outsl
fsubl
dec
aad
loopne
in
sti
mov
test
lds
rcll
mov
inc
arpl
pushf
xor
mov
sub
inc
fnstsw
sbb
mov
jnp
mov
std
mov
mov
int
hlt
adc
jno
loope
sub
pushf
sarb
mov
mov
das
push
cmp
leave
dec
push
jo
mov
cld
lock
mov
in
orl
je
inc
les
icebp
push
mov
cmp
ds
jg
jg
pushf
test
lcall
sarl
fcomps
mov
inc
adcb
lods
popa
out
movsl
xchg
sub
shrl
adc
aaa
mov
fists
xchg
add
hlt
push
in
int3
rorl
lret
sbb
jecxz
mov
in
xchg
loopne
push
jge
ljmp
lea
stc
cmp
mov
lret
jne
and
movsl
cmp
bound
ss
dec
lea
or
dec
inc
arpl
jne
xchg
aas
add
jne
fisttpll
shll
inc
outsb
icebp
mov
xor
out
pop
aaa
push
sbb
or
fildll
add
fisttpll
out
sub
fxch
mov
inc
add
fwait
jae
outsl
xor
das
pop
lock
jbe
call
ss
or
sub
fisubl
and
loope
fs
dec
mov
sbb
inc
jb
popf
dec
stc
iret
and
rorb
mov
mov
xor
inc
test
aas
inc
mov
sbb
mov
push
nop
clc
fsts
stc
jae
fcmovu
xor
rcrl
or
pop
mov
std
inc
cmpsl
jecxz
push
adc
int3
orb
cmp
sbb
inc
fwait
out
imul
sahf
outsl
add
iret
aaa
pop
js
jb
push
fcoms
loop
insb
lds
mov
ret
cmpsb
push
add
rolb
jne
fld
out
aam
and
test
pop
movsb
test
pop
xor
dec
xchg
sub
addr16
inc
xor
jne
push
fcompl
ljmp
js
popa
mul
das
imul
lahf
sub
pop
mov
jecxz
inc
add
in
pop
push
fldt
or
data16
sub
in
ja
jge
lock
cmp
and
shll
insb
cmp
clc
cwtl
cwtl
and
cmp
push
ds
adc
push
inc
xchg
cmpsb
gs
cmp
jne
xchg
es
xchg
inc
cmpsw
test
and
adc
xchg
jl
xchg
loop
insb
or
jo
in
jmp
mov
hlt
mov
jns
xchg
or
stos
pop
sbb
jle
jb
and
lea
sarl
xchg
mov
cmpsb
cmpsl
or
in
jge
addr16
or
andl
idivl
in
pushf
pop
jo
sbb
aas
imul
imul
jbe
pop
dec
ficomps
shlb
fwait
jns
leave
je
std
mov
xchg
mov
mov
push
cmp
roll
not
outsl
out
xor
add
and
pop
cmpsb
ret
or
mov
imul
pop
subl
push
shr
mov
aaa
mov
aas
lock
aaa
or
jae
clc
ret
mov
xor
mov
int
mov
lret
or
ret
or
sbb
aaa
cwtl
mov
and
pop
adc
stos
adc
fmulp
xchg
imul
imull
mov
test
outsb
icebp
sbb
mov
or
fsubl
mov
in
loop
aaa
sub
orl
sbb
push
mov
sbb
cmp
cmpsb
dec
test
add
mov
add
push
jl
xchg
cs
adcb
loopne
out
jg
mov
push
repz
adc
sbb
sub
cmc
cmp
inc
inc
cltd
jns
dec
repnz
mov
pop
sbb
and
mov
or
shrb
gs
mov
or
xor
mov
dec
inc
lds
jmp
testb
pushw
insl
leave
jg
mov
repnz
jne
cmpsl
mov
lahf
adc
les
imul
js
test
mov
in
sbb
xor
pop
xchg
jge
xchg
push
xor
add
aad
jecxz
mov
fcompl
pushl
arpl
roll
mov
jge
in
xchg
dec
js
mov
add
mov
cmp
fdivrl
dec
mov
cmpsl
mov
push
data16
data16
hlt
pusha
and
dec
stc
fwait
icebp
fwait
jnp
mov
iret
xchg
loop
pop
cmc
push
mov
ljmp
pop
lret
pop
hlt
or
pop
or
or
jo
movsl
sbb
ja
iret
mov
cltd
jae
fxch
jge
pop
sbbb
inc
jbe
icebp
gs
jae
mov
mov
cwtl
popa
push
sub
dec
dec
sbb
jne
pop
int3
xchg
jmp
or
mov
dec
push
xlat
cld
xor
addr16
sarl
jb
dec
out
repnz
adc
sbb
dec
push
outsl
sbb
xchg
cld
loop
cwtl
outsl
jbe
cmp
lret
adc
push
sub
sub
lods
mov
iret
repz
dec
cmp
inc
out
pop
xchg
xchg
pushf
mov
push
imul
cltd
imul
adc
sbb
sub
jg
icebp
jp
scas
in
adc
test
push
lret
rcl
fimull
shll
sbb
add
push
or
xor
cld
sub
adc
cltd
pop
cmp
sub
xor
or
ror
cmpl
lock
xor
mov
insb
std
adcb
dec
cmp
push
in
ss
cwtl
divb
xchg
es
lock
das
inc
in
jns
in
test
test
mov
test
push
mov
pop
fimull
sub
dec
sub
jns
inc
outsb
leave
sbb
repz
jns
lcall
icebp
outsb
adc
or
push
dec
jg
popf
mov
xchg
aam
mov
xchg
xor
inc
mov
mov
je
cltd
aad
ljmp
stos
test
ds
push
sbb
jno
mov
fs
shrl
imul
pop
mov
test
mov
jb
jg
dec
push
and
test
add
or
and
push
daa
mov
mov
sti
das
adc
lahf
xchg
and
arpl
shrb
or
fadds
and
pop
cld
push
inc
andl
mov
xchg
ss
int
aas
mov
je
cmovne
push
inc
mov
pusha
cmp
aad
dec
je
fcomi
or
sub
dec
push
or
inc
cmc
bound
pushf
adc
cmp
mov
popl
xchg
iret
dec
out
jbe
ret
stos
xorb
mov
mov
or
das
and
mov
adc
daa
and
dec
xchg
jle
pop
aaa
cli
inc
aam
xor
das
pop
sbb
les
mov
sbb
inc
mov
or
aam
sbb
inc
movsl
add
addr16
out
stc
dec
push
push
ficompl
xorb
cmp
inc
fstps
loope
or
lret
dec
jbe
inc
push
lcall
mov
es
repz
push
jmp
jle
mov
or
scas
xchg
cmp
cmp
gs
fdivrs
xlat
sti
cmp
pop
shll
rorb
pop
mov
lds
mov
fs
movsl
divb
outsb
mov
xchg
push
subl
xorb
xor
adc
cwtl
pop
icebp
int
dec
add
fstl
cmpsl
sub
add
mov
dec
pop
sbb
aad
dec
outsl
mov
mov
jne
jl
outsl
ds
mov
and
fdivrs
and
mov
inc
mov
xchg
jecxz
pop
xor
mov
out
mov
inc
jge
pop
outsl
jle
xlat
sbb
cmc
imul
jnp
negb
add
sub
inc
movsb
xchg
std
xlat
inc
push
rorb
and
xchg
cwtl
xchg
inc
push
cmp
mov
xlat
dec
pop
jge
in
xor
lcall
dec
cmpsb
aad
mov
pop
stos
jns
xchg
inc
jg
decl
jnp
or
sbb
xchg
testb
push
lret
sbb
push
js
or
popa
int3
add
mov
xchg
xchg
jae
sti
outsb
imul
jns
mov
xlat
icebp
cld
xor
arpl
dec
cld
jge
inc
xchg
stc
adc
xchg
pop
xchg
cmp
mov
ss
in
add
push
stos
cli
pusha
mov
inc
push
sbb
ljmp
push
hlt
faddl
mov
arpl
jns
sbb
sub
cltd
sti
mov
mov
xchg
pop
clc
sub
loop
push
mov
sbb
mov
pushf
jecxz
jg
mov
enter
clc
rol
jb
and
push
hlt
rcll
sbb
pop
stos
mov
leave
adc
add
js
stc
enter
adc
mov
push
pushf
fistps
sahf
scas
mov
je
sub
pop
sbb
adc
mov
arpl
stos
fsubrl
jge
scas
in
xchg
cli
ja
fcompl
xor
cli
mov
mov
inc
jno
xchg
jbe
int
in
popf
dec
stc
mov
ja
pop
jle
clc
loop
cmpsl
es
notb
push
loope
inc
arpl
loopne
shrb
mov
push
in
jp
loop
xor
nop
push
aad
mov
insb
jg
iret
icebp
xchg
leave
jns
in
fmul
subb
inc
aam
dec
push
fistps
mov
mov
test
pop
into
or
xchg
int
mov
in
hlt
xlat
aas
scas
push
je
insl
jnp
mov
mulb
dec
xchg
mov
lret
fstps
xchg
paddusb
jne
sahf
and
jae
xor
mov
mov
daa
imul
and
and
out
or
stos
dec
lret
out
pusha
inc
inc
adc
push
jle
mov
lock
mov
pop
test
push
arpl
xor
pop
push
xchg
xor
sub
push
lods
or
inc
fs
sbb
sbb
mov
inc
inc
xadd
into
fisubl
jle
mov
adc
ds
test
mov
shlb
cld
int
rorb
and
psrld
dec
ret
shl
dec
test
jp
xor
and
outsl
add
xchg
add
jb
or
pop
cmpsb
sub
addr16
sub
mov
and
fistps
sbbb
out
ja
lock
push
sbb
rorl
push
mov
sub
pop
pop
in
int3
insb
scas
inc
out
inc
lcall
add
mov
and
movsb
xchg
add
test
fsts
out
or
xor
or
orl
lret
test
mov
fldcw
push
pop
fldcw
xor
ret
push
mov
push
clc
in
cmp
sub
rcrb
jecxz
lahf
and
aas
sub
jp
and
arpl
ret
xchg
inc
inc
jmp
daa
inc
push
jl
adc
int3
mov
cmp
lds
repz
insl
dec
or
pusha
scas
jns
icebp
or
inc
jl
mov
adc
xchg
enter
fisttpll
nop
pushf
jnp
addr16
cmp
and
pop
sub
inc
mov
sbb
mov
push
xchg
test
mov
xor
xlat
xchg
test
scas
inc
jge
push
jne
lahf
lods
cmc
jmp
call
or
sar
loop
xor
mov
xchg
jp
fstpt
pushf
adc
cmp
in
add
push
add
lahf
mov
cmp
adc
lds
out
popa
sbb
into
and
mov
das
pop
dec
stos
jle
xchg
cmc
sub
jno
mov
or
fdivs
fnstsw
cmpsb
fildl
xor
fwait
orl
inc
xchg
xlat
scas
push
push
inc
sbb
push
add
fidivrl
int
leave
pop
add
mov
jl
sub
in
pop
inc
xchg
shrl
jmp
mov
xchg
pop
fdivr
bound
repz
mov
inc
stos
jg
sbb
or
mov
fstps
push
cmp
xchg
gs
call
and
enter
stos
add
test
adc
mull
test
mov
pop
repnz
cli
adc
leave
mov
mov
or
xor
cmp
jne
shlb
xchg
fisubs
cmc
sete
add
in
sahf
ret
cmp
aam
stc
leave
out
sbb
jmp
lcall
push
in
lahf
cmp
iret
pop
dec
fwait
cmc
aam
sub
push
popf
jmp
loop
xorb
lret
push
sub
pop
pop
out
enter
mov
repz
mov
loop
out
loope
add
mov
cmc
jo
xchg
dec
dec
stc
mov
inc
repnz
dec
dec
enter
dec
movsl
pop
adc
dec
fdivrl
imull
sub
sub
or
out
push
outsb
inc
jne
dec
cmp
xchg
lahf
push
test
adc
aas
and
enter
push
cmp
adc
push
jge
fistpll
mov
jecxz
ret
test
adc
dec
fldcw
mov
add
sub
adc
mov
out
add
lods
xchg
adc
jmp
cli
jo
ret
mov
insl
inc
xchg
imul
insl
or
and
sbb
lret
lock
jno
into
xchg
inc
loope
mov
sub
scas
in
mov
addr16
int3
xor
jbe
xchg
loope
mov
push
sbb
mov
jno
xchg
pop
fisubs
push
sti
dec
inc
test
daa
repnz
mov
jns
sub
dec
push
orb
jmp
push
daa
jne
pop
test
pushf
pop
mov
pop
push
sbb
cmpsb
fsubrs
push
ds
adc
imul
repnz
xor
je
pop
jbe
arpl
jmp
and
movsl
lea
test
xor
wbinvd
popa
test
mov
inc
mull
push
mov
cli
jp
insl
ret
sbb
push
or
adc
das
outsl
clc
out
mov
xor
inc
sbb
insl
lods
fsts
out
lock
pushf
stos
sub
push
jo
mov
push
mov
sbb
fcoml
mov
fsub
rcr
loopne
mov
inc
cld
icebp
dec
fdivr
adc
sbbb
sub
pop
fsubrl
test
pop
jne
jg
sub
mov
movsl
ljmp
aam
outsb
xor
mov
dec
pop
lock
jnp
dec
in
mov
push
lret
sub
repz
daa
jecxz
pop
dec
mov
into
lock
daa
xchg
sbb
arpl
pusha
outsl
mov
jnp
xchg
mov
push
jbe
sub
loop
lods
insl
mov
stos
xchg
shlb
jbe
mov
dec
test
lock
call
gs
inc
cmpsl
push
cmp
sahf
into
pop
ljmp
or
and
pop
and
sub
jge
jecxz
shr
rolb
sbb
subl
mov
add
sub
mov
mov
lret
mov
pop
xchg
shrl
iret
jecxz
outsl
pop
mov
ja
push
xor
jp
out
call
lret
das
inc
jl
pop
dec
xchg
mov
sub
aas
pop
mov
adcb
xor
sub
faddp
addr16
arpl
xor
fs
clc
fs
push
scas
mov
mov
mov
ret
xchg
inc
nop
mov
inc
int
ljmp
and
inc
mov
repnz
imul
inc
adc
out
out
pusha
lret
mov
inc
mov
int
mov
sub
push
fwait
and
sar
or
nop
mov
sbb
std
pop
repz
stc
notl
jae
filds
pop
imull
and
jb
xorl
popf
cs
arpl
pop
in
mov
mov
mov
loope
pop
jle
pusha
bound
sub
mov
jae
addr16
mov
push
jae
cmp
lret
inc
popf
fidivl
xor
push
inc
cmp
mov
in
dec
and
cmpsl
lods
addb
pop
pop
fdivrp
or
mov
push
push
enter
xchg
int
movsl
loopne
xchg
add
les
xchg
jle
mov
mov
ret
push
out
push
push
jno
int3
rorb
push
inc
push
bound
mov
xor
rorl
je
int3
imul
imul
push
xchg
aam
cmp
fwait
sbb
shll
pop
or
aam
push
test
jecxz
gs
lret
mov
or
xchg
shlb
loope
and
jecxz
mov
ret
movsb
lcall
test
xchg
test
sub
out
add
lods
mov
adc
push
jno
rcrb
test
sbb
xchg
sbb
push
or
push
loope
pop
sbb
xchg
dec
mov
lds
adc
push
cmpsl
les
js
pop
fsub
xor
xor
in
dec
pusha
icebp
or
or
xchg
dec
fcoms
mov
xchg
fcmovnbe
pop
inc
outsl
cmp
ljmp
inc
mov
stos
xchg
fisubl
mov
inc
lock
mov
out
adc
sar
imul
sub
stos
inc
jl
mov
lods
sbb
push
movsl
sub
push
mov
sbb
lea
xor
mov
clc
xchg
mov
sbb
fcomp
je
aam
pop
and
loop
rorl
jnp
rolb
add
cmp
and
and
incl
mov
scas
mov
mov
into
adc
mov
out
and
xchg
addb
hlt
mov
push
or
adc
das
lahf
add
xchg
shlb
pop
pop
scas
pop
ljmp
add
scas
mov
or
cmc
leave
sbb
jne
cmp
popa
int
mov
je
inc
cwtl
mov
xchg
lret
dec
add
cmp
sbb
rcll
imul
sbb
cs
int3
mov
mov
xchg
in
lds
mov
add
mov
stos
sbb
push
inc
pop
jae
mov
int3
xor
mov
xorb
fcomi
sbb
push
sbb
cs
dec
movsl
es
adc
xor
mul
jbe
and
fnsave
adc
js
mov
lea
pushf
dec
insl
or
mov
push
adc
xchg
jmp
pop
cmc
push
inc
cmp
addb
pop
or
add
aas
sbb
lea
insb
jge
and
movsb
je
enter
cmp
jne
inc
stos
popa
sbb
jmp
mov
sub
jns
and
pop
xchg
mov
fwait
jne
rcrl
xor
pushf
jb
sub
sub
push
sarl
stc
dec
adc
popa
das
mov
imulb
sub
pop
adc
jp
into
push
fs
cmpl
imul
enter
das
call
dec
scas
inc
push
push
mov
inc
jecxz
push
dec
pop
adc
sbb
pop
xchg
sbb
jae
cli
sahf
pop
xchg
jmp
lret
mov
test
cmp
jae
inc
std
lods
es
fildl
vprotb
fwait
mov
mov
xchg
pushf
loop
add
lcall
adc
pop
jmp
std
mov
sbb
stos
mov
sbb
dec
push
sub
jl
popf
cmp
xchg
imul
and
outsb
xchg
mov
out
movsb
xor
pop
cltd
xchg
or
stos
fisttpll
dec
scas
mov
mov
or
jmp
mov
mov
jne
push
mov
adc
iret
mov
repnz
xor
out
mov
stc
adc
fcmovu
jg
fisttps
pop
mov
jge
or
ret
pop
popa
test
pop
roll
inc
add
xlat
std
aam
std
inc
repz
lds
outsw
movsl
lods
cmp
push
aad
lret
sbb
or
sub
fldenv
cmp
and
imul
cwtl
das
or
movsl
push
xor
ja
jo
or
add
dec
sbb
insb
dec
mov
sbb
shll
xor
inc
xor
insl
addb
jecxz
cmp
and
xchg
in
or
pusha
idivl
in
adcb
cmp
mov
bound
inc
push
mov
cmp
ficoml
mov
sbb
add
sub
cmp
test
insl
cmpsl
in
in
aas
shlb
out
shlb
mov
adc
mov
push
or
jge
cmc
repnz
inc
sub
lock
push
dec
mov
adc
aad
dec
loop
shl
or
adc
cltd
xor
ret
adc
pop
imul
int
add
stos
xchg
push
push
push
out
sub
inc
cmp
addr16
mov
mov
push
mov
sub
fisubs
loop
add
fnsave
or
sbb
adc
jl
jp
cli
add
aam
mov
mov
cmp
mov
aam
test
xchg
sbb
inc
push
leave
arpl
sub
in
mov
pop
ja
in
and
adc
xchg
outsb
into
mov
ss
insb
test
pop
aas
daa
aaa
stos
mov
scas
popf
mov
ret
shl
xor
orl
lea
xchg
cmpsb
lret
lds
lock
xchg
rclb
jae
mov
xor
mov
scas
sub
out
mov
xlat
and
test
test
iret
icebp
pop
cmp
and
and
jne
push
scas
lods
dec
test
xchg
xchg
adc
pusha
push
xchg
call
mov
cld
in
testb
jnp
mov
mov
xor
inc
test
stc
xlat
sti
filds
cli
jns
jne
or
adcb
jp
out
mull
cmp
mov
xor
lods
cld
movsl
jne
push
inc
repnz
lea
or
add
js
xor
adc
imul
pop
fstpl
in
loope
mov
xchg
pop
js
out
or
pop
sarb
mov
dec
or
lahf
stos
push
jecxz
xor
clc
cmp
add
inc
fnstenv
pop
mov
sarb
mov
es
push
js
jns
gs
cwtl
call
out
lods
into
cltd
shlb
ja
or
push
dec
adc
das
inc
or
xor
mov
xchg
mov
jb
sub
add
pop
nop
adc
iret
sub
xchg
lcall
pop
cmc
bound
std
outsl
insb
fld
push
push
ret
add
xor
scas
mov
jp
inc
repnz
negl
xchg
push
inc
jecxz
insb
call
jmp
pop
stc
out
repnz
fucomi
xchg
mov
iret
stos
and
lahf
push
pop
or
cmpb
pop
dec
cmpsl
in
push
or
gs
jae
and
sbb
loope
mov
dec
xcrypt-ecb
cmpsl
comiss
mov
ljmp
sbb
cmp
fiaddl
or
or
xchg
ss
push
jo
mov
das
roll
sbb
sahf
pop
push
gs
add
push
ror
es
test
cmp
hlt
jo
mov
jbe
push
mov
adc
sub
and
pop
cmp
ret
xchg
sub
inc
add
xchg
gs
sbb
fsubl
mov
punpckhwd
repnz
jnp
lahf
sti
pop
aad
ja
xchg
mov
in
push
mov
fcmove
inc
outsl
fsubs
imull
mov
std
ret
test
push
dec
ja
xor
shlb
sub
sahf
cmpb
jb
cmp
xrstor
je
dec
inc
fisttpl
push
addr16
sub
subl
sbb
stos
xorl
xor
fisttpl
outsl
stc
shll
aaa
or
mov
sub
aas
insl
dec
mov
insl
and
mov
pushf
fimuls
jecxz
inc
and
imul
push
jno
int
mov
pusha
pusha
xchg
sub
sub
shrb
call
mov
add
gs
xor
hlt
insl
mov
sub
inc
imull
mull
leave
jp
shlb
or
shl
xor
lock
clc
pop
ljmp
into
xchg
in
lahf
push
es
pop
adc
stc
mov
negl
jne
push
data16
out
xchg
mov
mov
stc
lret
outsb
int
xor
int
and
ss
adc
push
sbb
jmp
add
lret
les
insl
cli
fs
andb
ret
sti
xor
subb
add
ret
stc
dec
inc
push
fs
xor
loope
pushl
push
loope
and
imul
cmp
aaa
push
ret
inc
jle
fsubrs
mov
add
out
movsb
js
decb
and
inc
mov
or
sarb
ret
and
pop
pop
bound
xchg
dec
inc
data16
cmpsl
ficomps
loop
push
dec
lock
outsb
cltd
xorl
dec
fneni(8087
pop
mov
cmp
arpl
dec
cmp
cmp
inc
lret
add
jbe
sub
fs
ret
xor
pop
cwtl
xchg
jmp
lcall
xor
in
mov
movb
or
xchg
jmp
inc
adc
add
sbb
xor
int3
sbb
ljmp
pop
jne
dec
adc
dec
xor
imul
sbb
xchg
pusha
iret
add
and
in
push
cmp
pop
fwait
jp
cwtl
gs
add
and
mov
inc
mov
test
shll
inc
jbe
clc
cld
dec
jne
pop
dec
dec
rcrb
fcomps
cmp
pop
xchg
cmp
pop
outsb
pushl
sbb
ret
push
or
mov
inc
scas
xor
clc
sub
movsb
fists
outsl
jge
dec
stos
push
imul
pop
xchg
cwtl
mov
jmp
xor
mov
dec
push
jmp
jns
loop
les
mov
mov
movb
fistl
mov
fsubl
movsb
pop
and
fs
in
lcall
addl
cmc
shl
adc
add
mov
mov
jns
cmp
lods
or
gs
lret
adc
cmp
pop
notl
mov
mov
mov
add
out
std
xchg
jo
mov
clc
and
int
cmp
jecxz
frstor
mov
movsb
fst
or
in
fbld
cmpl
mov
sarb
push
jl
mov
addr16
sbb
add
icebp
hlt
mov
and
jl
push
hlt
rolb
push
in
xor
fstps
shrl
call
aaa
int3
dec
cmc
stos
and
sub
ret
cmpsl
dec
push
jmp
add
push
jae
mov
in
sbb
pushf
in
aad
pop
pushf
scas
xor
pop
lret
mov
mov
int3
pusha
dec
call
je
std
mov
divb
jnp
mov
mov
popa
sbb
in
xchg
icebp
sub
aas
enter
or
xchg
mov
push
adc
mov
pop
ret
sub
outsl
cmp
in
jge
fisubl
push
sub
leave
add
mov
mov
cmp
lahf
in
inc
push
int3
dec
mov
add
and
push
subb
test
and
adc
cld
test
jo
or
xor
and
or
sbb
mov
push
lods
mov
adc
add
lea
popf
inc
push
cmp
mov
jb
cmc
sbb
mov
pop
jne
pop
dec
jmp
std
pop
and
aas
pusha
stc
or
jl
push
dec
inc
cmp
dec
loop
lcall
mov
int3
jge
mov
ss
mov
movsl
pop
and
jp
mov
dec
ja
adc
outsl
push
push
sbb
or
and
xorb
outsb
scas
jle
testl
cmp
push
aas
dec
sbb
push
mov
fadds
jb
adc
jb
jo
les
sub
mov
adc
outsl
popa
repnz
shl
int
movsb
mov
lcall
mov
pop
inc
mov
pushf
hlt
sub
or
sar
mov
adc
pop
std
lods
mov
lcall
sub
test
add
outsb
jp
std
in
lds
mov
dec
lret
cld
es
mov
je
fcompl
cmpsb
adcl
daa
pop
lods
jo
mov
sbb
sub
add
pop
dec
inc
cs
fbstp
xor
mov
pop
addr16
jmp
inc
insb
sbb
cmc
add
stc
mov
lcall
dec
enter
pop
or
inc
push
in
mov
lds
stos
pop
sub
mov
scas
adc
mov
in
js
fiaddl
out
inc
mov
mov
cmpsb
test
fstl
call
or
sub
add
test
aaa
cwtl
cwtl
xor
stos
imul
inc
addb
add
dec
imul
mov
jo
mov
adc
insb
inc
adc
jns
cli
in
inc
mov
pop
sub
shrb
jge
push
mov
pop
xchg
push
aas
sbb
mov
push
fmull
lcall
out
test
xor
in
xchg
xchg
shl
add
cmc
or
enter
lock
mov
clc
in
pusha
mov
xor
stos
mov
mov
shlb
shrl
jae
subl
jmp
jmp
aaa
inc
sti
mov
add
cmpsb
loopne
xor
dec
sbb
pusha
cmpsl
fcoml
data16
stc
and
es
loope
jmp
std
mov
lret
repz
inc
mov
push
or
or
enter
ret
inc
adc
out
test
push
movsb
lds
jnp
or
or
mov
dec
xchg
or
pop
in
add
xor
mov
xchg
inc
scas
popf
dec
out
xchg
push
testb
arpl
les
xor
jle
jo
push
xorb
mov
inc
mov
cld
lcall
movsl
sbb
lcall
pop
xchg
das
push
fs
mov
cltd
int
adc
pop
lretw
lds
clc
or
xchg
lds
sbb
jb
jmp
xchg
out
mov
mov
push
pop
pusha
push
ret
loop
adc
sbb
ja
pop
push
scas
ret
pop
mov
in
cmp
into
je
mov
das
push
sbb
test
pop
or
sbb
xchg
sbb
lret
mov
aad
sub
insb
data16
pop
add
mov
out
idivl
jns
rcrl
jbe
fiadds
test
clc
inc
xchg
push
pop
push
cmp
adc
lcall
mov
imul
test
push
fwait
ret
ljmp
call
imul
ja
pop
xchg
leave
rolb
test
and
xchg
cmp
lods
scas
test
out
lods
lock
jp
out
dec
mov
cmpsb
popf
cltd
in
mov
or
lods
mov
stos
mov
bound
insl
js
jl
mov
in
pop
xchg
aaa
les
sub
fldenv
adc
sbb
imull
pop
and
add
iret
pop
xlat
add
inc
sub
incb
shll
pushl
mov
pop
inc
pop
mov
pop
cmpb
pop
rcrl
daa
xor
stos
pop
repz
popf
call
mov
adc
mov
dec
cmp
cmpsl
shlb
lcall
inc
xchg
xor
xchg
mov
mov
mov
test
cli
jge
jp
push
jl
loopne
out
inc
and
lea
inc
addr16
mov
hlt
std
jnp
roll
hlt
enter
jnp
xor
mov
adc
movsb
jb
clc
dec
insl
xorb
psubq
adc
les
insl
cmp
and
push
mov
cmp
stos
scas
xor
addr16
mov
outsl
and
notl
cwtl
ds
inc
shll
test
cmp
ficompl
and
dec
xchg
popa
inc
faddl
mulb
mov
or
xchg
std
xor
js
in
fistpll
cmp
push
jg
dec
fsubl
lea
xor
pop
cmp
jns
and
cmc
lods
jnp
cmc
jae
sbb
out
es
fnstenv
imul
outsb
ja
rorl
adc
cmpsl
push
inc
sbb
adc
cmp
or
arpl
jae
add
aam
dec
pop
dec
mov
and
cli
push
in
int
mov
pushf
cmc
imull
or
push
icebp
cmc
xchg
lock
sub
outsb
xor
xchg
cmp
in
jno
add
push
rcrl
call
cmp
idivb
repz
loope
add
pop
int3
addr16
das
add
mull
sarl
sbb
rolb
push
mov
stos
mov
stos
adc
sti
out
outsl
fwait
data16
mov
mov
push
or
mov
xchg
mov
in
popf
or
jmp
in
leave
and
mov
in
cmp
test
outsl
aad
test
repz
sbb
push
bound
adc
inc
ja
aad
out
push
adc
push
mov
jmp
lods
into
or
bound
cmp
test
push
sti
xor
mov
push
test
or
inc
mov
in
fldenv
xor
arpl
insb
js
xchg
adc
dec
xchg
fnstcw
out
xchg
push
cmpsb
xor
sbb
roll
incb
cmpb
stos
popa
rcrb
jb
pop
xchg
test
sub
in
data16
addl
scas
movsl
out
int
subw
int3
aad
loope
in
scas
add
mov
adc
jns
add
cmp
xchg
inc
xchg
inc
mov
lea
push
ds
cmp
repnz
adc
out
push
je
and
aam
push
add
movsb
sbb
xchg
inc
xor
lret
mov
xchg
xor
cli
xor
jo
movsl
lahf
jecxz
jle
rcll
nop
enter
or
fwait
icebp
pop
mov
mov
push
push
fsubrl
adc
dec
leave
adc
cld
jge
xor
adc
loopne
adc
and
jl
out
push
popf
cmpsl
xor
and
in
xchg
add
insl
imul
xor
ds
sbb
shl
xor
sub
jne
jge
aas
push
pushf
bound
xchg
xor
scas
xchg
test
movsb
pop
stos
test
sbb
and
out
and
adc
scas
cli
xchg
mov
out
lea
subl
pop
popa
xor
hlt
jbe
clc
mov
lret
push
aad
and
mov
je
and
sub
mov
xor
mov
add
dec
aaa
clc
dec
imul
push
cmp
movsb
cmp
pop
aad
adc
jge
ljmp
loop
jae
sahf
inc
push
cmp
gs
test
mov
adc
mov
fcoms
push
pop
cmp
lret
les
mov
rcll
sti
test
push
xchg
push
out
cmp
cmpps
mov
les
cmp
jo
fmulp
inc
jae
sbbl
fistl
mov
outsl
jl
pop
mov
sub
jno
lds
dec
inc
out
test
fnstcw
fsubrp
or
cmpb
pop
jp
inc
sub
sbb
in
add
pop
stc
icebp
add
out
jge
push
pop
jbe
xor
sbb
dec
mov
movsl
std
testl
mov
outsb
jle
popl
pop
test
and
jns
int
sub
hlt
mov
setp
insl
mov
mov
rcrl
push
rclb
xor
cli
in
scas
dec
or
dec
dec
lret
push
pop
in
in
dec
shrb
inc
rolb
adc
cmc
lock
loope
jne
scas
insb
sub
jae
push
dec
mov
aas
fsts
adc
push
movb
pop
hlt
jae
xor
in
out
nop
aad
mov
xchg
or
movsl
rcrb
mov
sahf
les
pop
sub
sbb
leave
fidivrs
in
shrb
mov
rorb
ljmp
fcmovnb
inc
mov
mov
in
inc
inc
les
out
push
or
jecxz
lods
fcom
ret
mulb
xchg
mov
arpl
add
aam
xchg
jge
push
jnp
or
lods
clc
leave
pop
mov
icebp
adc
push
scas
movl
idivl
mov
xchg
cld
jb
in
xlat
in
mov
shlb
push
fisubs
idivl
fsubrs
daa
pop
pop
das
inc
leave
sbb
jmp
lcall
sarl
and
sbb
hlt
add
jge
ja
fsubs
pop
mov
addr16
ret
lret
mov
jmp
jns
dec
xlat
push
pop
pop
mov
je
jno
repz
jl
jnp
xchg
pop
pop
mov
loopw
rorl
data16
or
stos
data16
imul
repz
hlt
icebp
jl
jge
mov
xlat
insb
push
lods
dec
push
shrb
ss
btr
in
in
mov
scas
nop
inc
push
xlat
push
and
fbstp
mov
cli
xrelease
or
ljmp
and
cmpsb
jl
and
subl
and
or
inc
dec
jno
hlt
xchg
pop
popa
out
aaa
jp
cmpsb
xor
ja
dec
sub
aas
enter
mov
jmp
or
adc
mov
stc
mov
fs
fidivrl
jmp
cmp
repz
xchg
cmp
ret
xchg
mov
sbb
and
push
in
mov
icebp
jae
lea
add
sar
dec
rclb
test
pop
sar
or
fwait
sahf
add
push
jae
lret
mov
mov
into
maxps
hlt
movl
pop
ss
push
out
int
arpl
stos
jae
into
arpl
jge
mov
les
pop
adc
cmp
nop
insl
jbe
popf
push
inc
out
jecxz
test
dec
and
mov
sbb
jge
jne
lds
cmp
jg
sbb
fs
dec
xor
cli
lahf
xor
lret
andb
and
mov
mov
sub
test
stos
pop
ss
imul
jle
or
cmp
out
pop
insl
mov
inc
es
fldcw
aas
fildll
inc
and
ja
push
jge
repnz
xlat
inc
fldenv
out
stos
pushf
mov
ljmp
xlat
sbbb
enter
mov
cmp
out
fs
pop
fsubrl
mov
rclb
iret
jb
lds
es
xchg
xlat
daa
test
and
dec
xchg
in
jbe
mov
or
push
sahf
lret
push
jb
add
mull
adc
and
jl
jno
out
xchg
push
icebp
stc
in
pop
outsb
ret
xchg
outsb
xchg
inc
je
fistpl
pop
cmc
xor
fcmovnbe
outsb
int3
out
mov
mov
cmp
xchg
sbb
repz
cmpsb
mov
cmp
enter
adc
sub
or
rorl
mov
jle
adc
mov
or
jbe
jge
lcall
xorl
pop
inc
sub
mov
cmpsl
addr16
xor
daa
dec
adc
mov
pop
stos
push
out
pop
push
jno
inc
xor
cmc
jge
sub
push
outsl
jl
mov
addr16
rolb
lods
insb
mov
imul
sub
mov
cmp
stos
lods
jg
daa
xchg
sub
mov
cmp
inc
mov
xchg
mov
cs
je
cs
lret
mov
stos
ret
add
sub
push
or
popa
sti
lods
test
xchg
std
test
push
call
jl
sbb
mov
outsb
sbbb
dec
mov
fs
insl
or
sub
dec
mov
or
xchg
jg
and
jmp
mov
fs
sbb
fwait
pop
cmp
push
inc
or
in
and
cmp
lcall
iret
cmp
dec
sbb
or
push
pop
adcl
push
mov
iret
mov
andl
shlb
ret
add
inc
add
mov
ret
push
fwait
and
fnstenv
add
pop
daa
nop
sub
into
jns
inc
push
cmpsl
imul
mov
stos
or
xchg
je
sbb
fcoms
cmc
push
jno
addr16
xlat
mov
mov
nop
arpl
push
lret
jnp
into
mov
daa
push
xor
fcoms
loopne
outsb
mov
cli
push
add
stos
xor
adc
dec
and
mov
adc
into
or
repnz
dec
mov
sub
lret
lods
subl
lahf
int3
sbb
les
inc
hlt
jne
cmp
xor
dec
das
mov
or
or
sbb
pusha
push
leave
mov
fsubr
pop
push
cmp
jae
mov
lcall
mov
cltd
cmc
xlat
push
push
lcall
mov
xchg
xlat
dec
xchg
mov
jmp
jp
clc
and
ret
inc
inc
mov
cli
xchg
mov
jb
pop
and
fnsave
inc
pop
lret
push
push
or
pop
or
test
pop
inc
push
fdivl
aaa
mov
shl
push
in
or
or
shll
sbb
pop
sub
or
lcall
fdivl
pusha
repz
out
xor
adc
repnz
and
adc
icebp
divb
pop
adc
add
pop
cmp
push
add
enter
sub
dec
outsb
sbb
clc
in
jmp
pop
fnstenv
test
xchg
xchg
ret
das
icebp
mov
aaa
mov
int
in
xchg
int3
fiaddl
adc
sahf
test
dec
and
push
and
mov
inc
imul
ret
ret
jecxz
adc
mul
jle
inc
push
cmp
mov
ss
and
or
sbb
fnstsw
jne
arpl
jae
fnsave
nop
popa
mov
jbe
jge
push
push
sti
fidivrs
icebp
aas
add
sub
sbb
fwait
jbe
sbb
xor
data16
adc
mov
sub
mov
pusha
cmp
push
adc
fsubrl
or
xchg
push
adc
push
xlat
es
cmp
mov
cmc
dec
in
vmread
popa
xor
test
in
leave
test
add
cld
pop
stos
cmp
testl
lods
jmp
clc
add
les
adc
daa
and
lods
push
add
pop
insb
xchg
ss
imull
push
cmp
jb
sbb
daa
jge
ret
add
mov
mov
sub
xchg
int
cmpsb
mov
stos
xchg
bound
dec
cli
aad
mov
mov
xchg
xchg
sub
cmp
xchg
pop
scas
xchg
mov
cmp
test
mov
jmp
shrl
add
js
and
insb
ds
add
insl
fwait
xchg
rol
mov
adc
add
xchg
aad
pop
fiadds
test
inc
sahf
imul
xchg
inc
imul
inc
popf
mov
les
push
scas
or
pop
pop
aad
mov
test
out
rol
imul
in
adc
adc
sbb
mov
ret
out
insl
mov
mov
nop
pop
fs
xchg
fdivl
xchg
mov
push
jo
mov
push
fs
shlb
aas
sbb
loope
sbb
xorb
mov
pop
imul
inc
cwtl
pop
mov
fildl
inc
pop
sbb
mov
das
or
dec
mov
hlt
sbb
aas
in
cwtl
mov
xor
mov
pop
cmp
push
decl
test
repz
add
ljmp
je
adc
hlt
je
pop
aad
in
pop
xchg
push
orl
and
xchg
fsubrl
mov
mov
cmp
outsb
pop
imul
mov
sub
aam
pop
and
mov
gs
repz
test
or
or
rcr
stc
dec
mov
dec
xchg
cmp
cmp
ds
jg
sbb
outsl
sub
ss
pop
or
mov
inc
icebp
mov
pop
outsl
stc
xor
in
in
jb
pop
mov
inc
in
pop
subl
sub
push
enter
sbb
inc
adc
outsb
sub
mov
jmp
push
stos
sbb
enter
repz
xchg
xchg
push
shll
insl
daa
or
nop
or
jns
push
gs
pop
pop
js
mov
stos
js
mov
fwait
sbb
xor
aaa
loop
nop
repz
cld
xchg
divl
xchg
and
clc
dec
ljmp
sbb
lret
imull
mov
nop
sub
adc
popf
inc
inc
mov
in
add
lock
mov
xlat
add
loopne
cs
gs
sbb
sahf
push
dec
xlat
test
cmp
out
xchg
std
jbe
sub
cmpsl
cltd
ja
xor
sub
mov
mov
insl
pop
add
push
add
dec
sti
repz
add
mov
ljmp
mov
sti
add
xchg
jnp
nop
dec
push
sub
call
test
pop
arpl
xchg
push
xchg
mov
mov
popa
dec
dec
inc
mov
inc
fcom
mov
xchg
and
daa
push
adc
mov
repnz
das
mov
pop
ds
jecxz
gs
fisubrl
fistl
cs
mov
xchg
mov
ss
mov
jecxz
das
dec
daa
push
in
andb
pop
enter
push
jecxz
and
jo
and
arpl
test
orl
mov
sti
inc
jg
and
dec
frstor
or
test
xor
aad
or
pop
cmp
adc
mov
repnz
mov
mov
addl
mov
jo
out
mov
dec
inc
jnp
mov
pop
mov
aad
lahf
xor
jge
xchg
mov
pop
test
push
cltd
cli
xor
add
mov
ja
push
popf
mov
hlt
adc
iret
cld
sbbb
test
lcall
iret
popa
inc
adc
mov
jmp
fisttpll
xchg
mov
add
addr16
jo
mov
sbbb
lea
inc
push
cmp
scas
lods
sbb
or
mov
xor
xadd
xchg
sbb
ljmp
ret
and
jecxz
ret
in
mov
data16
or
mov
mov
mov
jl
or
jecxz
mov
dec
leave
mov
mov
push
es
push
scas
mov
fcoms
dec
sbb
mov
push
jl
iret
inc
adc
loop
dec
imul
out
in
int3
fcoml
dec
cli
mov
in
mov
adc
inc
nop
lods
enter
fsubrl
stc
adc
sbb
icebp
xchg
mov
lcall
inc
jnp
and
sti
and
cmpb
dec
roll
and
jmp
inc
fisttpll
outsb
cmpsl
push
adc
enter
and
jmp
pop
dec
push
fcomps
and
xchg
add
iret
test
sbb
imulb
jmp
sub
push
pop
jo
sbb
sarb
sub
add
fsub
inc
dec
jo
sub
dec
ror
mov
jae
push
or
and
xchg
mov
push
dec
inc
mov
cmp
je
mov
shrl
roll
aaa
cs
int3
lahf
pop
inc
sarb
bnd
xchg
add
jns
push
into
jnp
adc
mov
dec
or
mov
sub
mov
xorb
lods
insb
xchg
inc
pop
icebp
int
mov
int
cmp
clc
in
stos
cmp
add
inc
pop
or
lea
imul
std
rcrl
push
clc
fiaddl
ror
mov
push
xchg
lret
enter
sbb
mov
mov
lahf
adc
mov
mov
ds
int
out
cmp
lcall
leave
jbe
ret
pusha
shlb
xor
push
cmpsb
je
hlt
imul
into
jl
dec
mov
and
sub
mov
mov
pextrw
aaa
lahf
hlt
dec
push
and
pushw
lret
and
fs
jecxz
jp
push
sar
lret
sub
pop
lock
rol
lret
lods
test
push
add
xchg
push
or
pop
int3
mov
iret
out
sti
lcall
pop
cltd
lods
lret
push
pop
stc
ret
add
shl
shll
ret
push
loopne
rcll
cmp
dec
sti
add
cli
ljmp
ret
and
mov
mov
rolb
stos
stc
dec
repz
aad
mov
movsl
cmpsl
jo
mov
fisttps
fdivs
mov
and
pop
dec
mov
mov
or
daa
imul
jle
sbb
fdivl
add
lret
adc
mov
dec
cwtl
arpl
sbb
sarb
mov
mov
xchg
stc
sub
cmp
adc
or
jo
pop
or
sbb
pop
aad
pop
int
inc
fstl
xchg
out
push
icebp
push
fadd
mov
into
or
mov
dec
cmpsb
adc
mov
pop
mov
into
adc
xchg
scas
data16
mov
mov
fmul
mov
ljmp
rclb
movsl
int
cmp
test
cmp
push
jae
ss
sub
jnp
add
push
mov
loope
test
orb
mov
lods
ljmp
mov
fcmovnu
shrb
enter
jmp
mov
outsl
inc
movsl
xchg
push
dec
ret
xchg
out
lods
roll
dec
movsl
jmp
xor
into
adc
jnp
insl
call
insl
push
out
lret
lcall
fstpt
jne
test
dec
call
and
dec
mov
sbbb
inc
or
cltd
push
shrl
dec
dec
add
popf
sbb
jge
jecxz
pusha
pop
lea
jle
pop
aam
cmp
adc
xchg
push
sub
adc
or
and
test
mov
xor
fcmovu
xchg
das
and
iret
repz
mov
xchg
add
pop
mov
mov
mov
sub
mov
data16
add
stos
push
xchg
jo
fnsave
xchg
add
int
and
pop
inc
cli
and
lods
xchg
mov
ds
int
pop
inc
pop
push
movsb
hlt
cmp
xchg
das
add
call
or
movsl
clc
mov
mov
cli
sbb
push
ss
ret
dec
sbb
jo
adc
push
cwtl
inc
push
daa
inc
dec
xor
scas
sbb
cwtl
pop
mov
mov
arpl
add
pop
sub
outsl
sbb
std
imul
loopne
into
mov
dec
lcall
inc
jg
mov
ss
fimuls
inc
mov
nop
fcompl
xor
mov
mov
push
orl
pop
lahf
andb
outsl
jle
jecxz
push
or
stos
loopne
push
mov
out
test
movsb
call
mov
add
rcll
cmp
dec
iret
fs
sbb
movsb
push
pushf
fisttps
pop
xchg
iret
or
mov
lock
clc
mov
test
mov
push
mov
mov
jne
cmc
mov
lock
jp
testb
cs
ja,pn
sbb
data16
lock
jle
cltd
pusha
and
je,pt
fmull
xorb
shl
mov
lahf
adc
pop
push
push
pop
jl
fwait
cmp
repz
movsl
mov
movsl
frstor
xor
fs
mov
in
lret
imul
xchg
inc
into
fcomps
and
sub
xor
bound
inc
daa
mov
pushf
dec
js
jle
and
mov
and
imul
dec
outsl
dec
lcall
lahf
ljmp
dec
inc
push
jno
cmp
shr
iret
cltd
into
xchg
in
outsb
jns
outsb
ficoml
out
pop
scas
and
sub
mov
leave
loopne
into
adc
sub
pop
jae
out
push
cli
fisttpll
mov
or
or
adc
scas
sbb
mov
mov
aas
in
lcall
dec
out
cmp
xchg
mov
das
and
pop
les
and
mov
out
cmp
xchg
aaa
daa
adc
data16
lods
xor
mov
andl
insl
sbb
js
cld
outsl
out
pop
jbe
popa
sbb
or
xchg
mov
stos
xchg
and
movsb
pop
test
jmp
hlt
xor
dec
add
stc
pushf
push
movsb
andl
test
jnp
scas
xor
out
jnp
dec
js
xor
fcompl
pushf
jge
stos
in
jns
stos
inc
or
sub
or
mov
jmp
pop
mov
sbb
dec
fistps
xchg
arpl
imul
or
faddl
pusha
aas
arpl
and
cmp
insb
cmp
inc
test
pushl
mov
data16
or
push
das
divb
xor
add
cmc
jle
jns
mov
ds
sti
mov
idivb
movsl
sub
lods
outsl
mov
test
xor
push
cwtl
mov
cmc
cmpsl
jno
inc
mov
dec
and
or
sbb
xchg
push
or
mov
rolb
loope
fstps
and
xchg
jae
ljmp
lds
mov
cmp
sub
jecxz
push
xchg
sub
out
mov
bound
xor
scas
dec
cmp
sti
pop
test
pusha
cli
adc
cmp
sub
outsb
mov
xor
mov
sbb
xchg
repz
jl
push
inc
add
adc
mov
inc
out
adc
lret
jmp
lret
and
dec
sbb
aam
or
fdivl
fildll
fmul
jns
and
jg
jne
mov
xor
popa
sbb
jns
mov
out
call
push
adc
lods
int3
int
jmp
out
fdivs
fcmovb
jl
cmp
in
std
fdivrs
insl
fadds
xor
add
push
and
pop
xchg
mov
mov
mov
out
add
movsb
ret
loop
fsubrp
repz
add
and
pop
cltd
jns
cwtl
test
in
or
mov
mov
sub
jo
lods
pop
in
rdmsr
in
dec
scas
fcoml
loop
addr16
pop
cmp
adc
out
cmp
fwait
lea
es
es
jbe,pt
xor
add
inc
stos
sarl
dec
fsubr
mov
cld
out
adc
pop
idiv
dec
jbe
mov
aam
mov
rorb
mov
lret
lods
cwtl
inc
ja
fisttpl
jae
cmp
lret
and
dec
popf
arpl
xchg
in
mov
pusha
dec
jbe
xchg
sbb
mov
pop
es
dec
fldcw
cmp
push
test
movsl
loopne
lcall
sahf
fwait
push
push
or
fmull
jg
ficoms
mov
push
add
push
pop
xchg
xor
ljmp
jp
inc
lock
dec
xchg
mov
inc
aam
pop
push
mov
jne
cmp
add
jle
jl
je
enter
jns
and
mov
jns
lea
xchg
push
mov
add
sbb
sub
cmp
fcompl
aaa
dec
lret
addl
add
sti
adc
dec
aaa
push
imul
lea
pop
mov
cmpsb
xor
int3
lahf
sub
pop
fs
mov
out
push
push
add
jp
fnstenv
pushf
nop
repnz
cmpsl
lret
imul
cmc
mov
pop
dec
mov
bound
ret
jbe
stos
jo
subl
and
cmp
mov
mov
jge
jl
add
xor
add
mov
adc
popf
cltd
popa
pop
cmp
ja
push
push
mov
adc
inc
push
cmp
ljmp
push
cmp
addr16
cmp
adcb
mov
scas
sub
loopne
mov
dec
stc
iret
mov
fs
sub
into
incb
mov
movsb
pushaw
shr
jae
imul
lret
jg
push
jne
jl
aad
inc
adc
ret
hlt
fxch
mov
sbb
mov
test
out
jbe
dec
and
cmpsl
inc
movsb
sub
mov
push
pop
daa
push
aam
shrl
pop
in
adc
ljmp
mov
popa
xlat
mov
call
into
inc
mov
lret
mov
pop
xchg
dec
xor
mov
dec
hlt
lds
mov
jecxz
lods
out
int
divl
aad
adc
outsb
test
or
test
push
or
das
leave
mov
xor
pusha
sahf
popf
and
xor
and
xor
adc
cs
in
es
inc
das
ljmp
xchg
mov
clc
sub
mov
aaa
mov
mov
in
out
push
sbb
inc
imul
mov
lcall
mov
cld
mov
dec
aad
insb
ret
and
sbb
lret
cmp
out
clc
cmp
dec
shlb
fsubrs
push
add
add
stos
iret
out
push
and
dec
stc
fsts
out
sbb
sbb
jno
xchg
jg
data16
cmp
pop
lcall
push
ss
mov
orb
aam
dec
ret
lcall
fisttpll
insb
pop
sti
cmpsb
leave
xor
icebp
outsb
pop
cmp
xor
out
xchg
sub
outsl
repnz
dec
pushf
shlb
xchg
std
jno
js
loopw
arpl
clc
xor
push
in
adc
adc
push
xlat
mov
bound
mov
lret
js
xchg
fwait
lods
cmp
cwtl
sbb
add
inc
pusha
inc
pop
inc
jns
scas
stos
scas
sahf
sbb
pushf
pop
out
push
repz
cmpsb
pop
xor
test
aad
push
test
jp
push
aaa
and
imul
push
jo
push
ds
xor
ret
aam
jge
jns
or
push
or
push
scas
pop
pop
cld
dec
loopne
mov
push
cli
push
or
add
fstps
cmp
xchg
fwait
outsl
or
mov
push
xchg
inc
or
xor
push
inc
loope
mov
inc
enter
mov
std
sti
dec
jbe
fwait
inc
imul
mov
xchg
imull
into
arpl
inc
in
mov
test
and
xchg
leave
in
sbb
add
rorb
dec
sub
outsl
test
or
cwtl
xchg
cli
jp
pop
cmp
mov
aam
mov
or
imul
ret
mov
jae
jl
cmp
bound
adc
into
dec
cld
fisubrs
jecxz
scas
test
add
sbb
cmc
push
or
dec
pop
out
stos
scas
mov
or
cmp
out
dec
push
pop
dec
cmp
cmp
in
fstpt
ss
adc
add
add
testl
aaa
or
pusha
fsubs
nop
popa
inc
loopne
bound
push
cmc
xchg
frstor
test
inc
loop
jp
push
lret
test
pop
cmp
rcll
push
xchg
movsb
mov
mov
insl
pop
out
adcl
loopne
push
lcall
sbb
xchg
clc
daa
cltd
xor
pop
pop
call
jnp
mov
or
inc
mov
jge
rcl
shlb
fldt
test
xor
test
out
push
inc
cmpl
pop
pop
clc
lret
pop
pop
cld
addb
jns
out
dec
ficompl
push
mov
pop
adc
xor
in
loope
add
insb
cmc
sub
hlt
mov
jnp
xor
rcl
test
push
out
lret
jne
fs
inc
sbb
lahf
xchg
arpl
mov
xor
pop
add
dec
dec
mov
mov
mov
adc
imul
seto
fnstsw
out
cli
imul
nop
cs
ja
cmp
and
dec
adc
notl
dec
cmpl
jge
stc
lcall
cmp
jb
in
test
xor
jmp
push
mov
mov
dec
jg
lock
popl
or
pop
inc
push
sub
jo
dec
gs
cld
scas
xchg
push
ljmp
movsb
push
shrd
add
pop
lock
aaa
test
cltd
and
cmp
inc
jo
inc
sbb
push
out
addr16
out
sub
sub
int3
xchg
dec
addl
push
push
in
pop
add
fmull
in
loop
mov
inc
add
cld
sti
sbb
mov
fs
xchg
lcall
mov
pop
fdivrs
pop
sub
and
mov
add
cltd
in
dec
jge
dec
inc
push
sbb
inc
loope
push
imul
bound
subl
or
pop
push
fimull
push
xor
test
and
add
insb
jg
xchg
arpl
ds
sti
add
rcll
sbb
pop
mov
fucomip
or
mov
push
in
gs
mov
or
push
insl
jno
cld
xchg
daa
out
lret
ret
adc
sahf
outsb
jle
aad
int3
lods
mov
mov
in
ja
jo
and
push
cmpsb
in
cltd
dec
xchg
sbb
popa
inc
test
lds
cmp
sarl
add
jg
aaa
addr16
out
fdivs
sub
data16
lcall
and
cmpxchg
adc
ja
ficomps
pop
popf
int3
ret
rorl
ss
xor
sar
out
daa
xchg
fcmove
xor
dec
out
push
flds
dec
repz
repz
mov
mov
xchg
repz
xchg
insb
mov
shll
push
lea
aaa
mov
mov
xchg
in
lds
mov
shlb
mov
cmp
add
pop
insb
fnstsw
sbb
or
jl
push
xor
stos
daa
mov
jnp
inc
push
xor
pop
popa
mov
test
sbb
in
shlb
test
leave
cmp
adc
mov
movsb
jp
pop
xor
shll
mov
loopne
adc
sti
gs
inc
popa
scas
jb
push
and
adc
ss
daa
and
jne
or
xchg
sub
nop
stos
bound
xchg
xor
cmp
inc
push
dec
jge
inc
stos
outsl
mov
andb
out
pop
mov
fistpll
lea
and
lock
mov
sbb
out
fsubr
scas
gs
pop
jmp
and
pop
rcrb
loope
inc
mov
xchg
xchg
mov
jmp
arpl
mov
loopne
scas
cmp
orb
push
mov
jo
and
mov
cmpsb
int3
test
and
mov
push
or
inc
js
fidivl
add
cmc
enter
in
fsubrs
mov
xchg
or
push
and
sub
mov
or
int3
xor
out
nop
xchg
cmp
push
es
test
cmc
push
sub
push
or
inc
adc
neg
bound
out
add
push
testl
mov
fdivl
mov
rolb
std
xchg
inc
enter
and
xchg
sbb
mov
out
add
sarb
pop
xlat
addr16
xchg
popa
bnd
out
bound
jmp
or
or
std
sub
xor
lahf
hlt
lock
cmp
push
jo
int
add
pusha
cmp
pop
xchg
std
jle
imul
lahf
lods
imul
mov
clc
fildll
lret
movl
inc
lret
lcall
stos
sub
sahf
push
jns
aaa
jg
sbb
stos
jle
imul
inc
shrb
in
cli
inc
lods
jmp
sbb
dec
shl
jae
xchg
out
sub
push
adc
ret
test
ficoml
sbb
xor
xlat
pusha
push
cld
mov
mov
ja
rcrl
adc
xor
jge
je
mov
pop
out
rclb
ljmp
in
pop
cltd
or
xor
arpl
arpl
aaa
jne
testb
jns
sub
in
cmc
rcll
das
mov
pop
cld
jecxz
enter
icebp
cmpsl
filds
jne
bound
dec
in
sub
sub
jns
pop
push
cmp
and
sarl
jge
push
mov
test
insb
aam
lods
fwait
add
in
xor
mov
fdivs
aaa
loopne
sbb
jl
std
cmp
fwait
add
inc
lds
jbe
mov
xchg
xchg
pop
in
out
test
inc
jge
xor
lcall
add
push
repz
xchg
add
int
adc
data16
in
test
pop
addb
or
fldt
inc
shrl
movsb
pop
data16
jnp
cwtl
into
dec
scas
inc
lock
sahf
and
inc
sub
or
mov
push
movsb
sub
mov
or
mov
sti
cmp
cmpl
frstor
push
push
or
push
shlb
iret
xchg
jecxz
jne
cmp
push
loopne
call
sbb
xchg
push
daa
push
ds
mov
seto
cs
sub
jbe,pn
jg
push
mov
and
cmp
jae
pop
mov
stc
adc
in
xchg
xchg
cmp
js
js
mov
add
adc
jp
cmp
cli
dec
jnp
das
sub
push
adc
mov
push
addr16
push
inc
xorb
shlb
out
jmp
fidivrs
icebp
xlat
xor
jl
ss
bndstx
or
shll
mov
push
iret
ds
xchg
add
ja
test
enter
xor
lcall
shrb
pop
test
popf
sbb
movsl
stc
push
sahf
lds
fs
into
movsb
ror
shl
out
dec
and
sub
sub
pop
leave
push
push
inc
mov
fldcw
dec
add
dec
call
mov
fistpll
push
addr16
cmpb
les
leave
jmp
pop
xor
xchg
sahf
pusha
xor
enter
nop
imul
xlat
dec
cmpsl
repz
sbb
mov
push
jg
int
adc
inc
mov
repnz
jecxz
scas
into
jge
mov
imul
cmp
shll
pop
push
mov
inc
repz
sbb
cmpsb
jae
sbb
xchg
and
jns
fmull
pusha
hlt
lock
mov
push
lahf
push
ja
out
movsb
fs
adc
cmp
inc
aad
fiaddl
dec
pop
icebp
std
xchg
ds
mov
xor
add
fdiv
jl
loope
cmp
enter
xor
dec
xlat
roll
xchg
bound
adc
movsb
cmp
mov
or
sar
insb
into
dec
cmpsb
negb
leave
out
shlb
gs
pop
ret
cmp
in
adc
into
fdivs
cli
or
inc
dec
xor
ss
cld
dec
sub
mov
adc
inc
mov
mov
subb
out
sbb
test
inc
fs
push
sub
xchg
dec
adc
in
xchg
fistps
inc
cmp
int3
or
ja
push
roll
sub
test
jb
mov
insl
aaa
cmpsl
aas
mov
lret
je
lahf
xchg
xchg
inc
aam
cmp
test
push
in
push
sti
mov
repz
jbe
subb
fidivl
pop
or
xchg
sub
and
lock
dec
aas
xor
leave
int3
pop
aas
xor
jmp
popf
std
xor
sbb
sti
popa
into
jg
mov
out
pop
add
sub
mov
rorl
add
stc
and
jmp
leave
mov
mov
mov
sub
mov
mov
insb
mov
jne
push
jno
inc
ds
cmp
div
loop
lcall
stos
push
mov
int3
mov
cmpsl
pop
fisubrl
pop
fchs
loop
cli
in
xchg
es
sub
push
dec
cmpb
lret
hlt
push
pop
fwait
sbb
pop
mov
lret
pushf
rolb
dec
in
mov
aaa
xor
mov
lahf
adc
jl
xorl
pop
xor
jl
dec
pop
fistpl
insb
push
popf
out
dec
mov
cmpsl
mov
lods
cmp
movsl
pop
xchg
clc
mov
lods
jno
cmp
call
mov
pop
lods
out
jae
fwait
cld
mov
lahf
push
adcl
sbb
mov
sbb
xchg
in
stc
fildl
push
push
stos
xor
testl
imul
loop
jno
fidivrl
cmp
testl
fnstenv
mov
int3
jge
pop
clc
rclb
xor
dec
pop
push
adc
jno
mov
jbe
cwtl
push
xchg
sbb
call
dec
js
fdiv
imull
inc
stos
dec
add
lock
jge
in
fistl
cmpsl
lret
xchg
fbld
push
rol
int3
jp
std
lret
dec
call
mov
out
mov
push
push
push
push
subl
fsubrp
insb
lahf
andl
sahf
push
or
add
cmp
fwait
push
sbb
push
xor
stos
add
push
cpuid
mov
inc
mov
in
push
jne
xchg
jp
mov
jge
ret
xor
pop
cmp
lods
sub
push
sbb
push
xchg
cmpsl
movsb
pushf
outsl
xor
jo
pop
jb
mov
inc
ss
jnp
iret
adc
push
or
in
repnz
jns
sub
and
test
js
int
arpl
movsl
dec
in
das
clc
call
cmp
sub
xchg
mov
mov
dec
adcb
push
jmp
int3
cmp
ret
cmp
pop
mov
int3
mov
nop
das
mov
imul
das
test
and
add
pop
test
xchg
push
cmp
out
daa
push
xor
or
sbb
pop
lret
adc
les
jmp
aad
and
cmpsl
xchg
jmp
icebp
mov
ret
mov
hlt
inc
sub
jo
adc
sub
orl
and
mov
aad
push
adc
xchg
mov
aam
mov
hlt
jae
cmpsb
dec
or
fistl
mov
adc
xor
loopne
pop
inc
jge
sahf
ja
sbb
sub
mov
gs
or
dec
test
push
mov
or
push
repz
cli
xor
jbe
jo
xor
xchg
ret
xor
mov
jmp
adc
mov
sub
xor
repz
decl
mov
repnz
push
lret
scas
xchg
jo
enter
mov
pusha
and
jecxz
mov
xor
insl
lods
cmp
int
out
mov
movsb
aas
ljmp
cmp
xor
aas
xor
jo
cmc
add
out
lea
sbb
jbe
and
adc
xlat
sub
inc
arpl
mov
popa
and
push
rorl
arpl
cltd
popa
or
loop
int
pusha
push
sbb
adc
std
loope
int3
es
pusha
sub
insl
inc
enter
cs
mov
out
pop
arpl
sub
adc
mov
push
mov
loop
hlt
movzbl
jl
gs
in
rcll
movsbl
pop
pop
or
mov
ljmp
sbb
xorb
nop
sub
pop
xchg
mov
push
dec
adc
nop
push
cli
pop
aaa
cmp
in
fsub
sub
mov
mov
pop
xor
jmp
test
in
dec
clc
mov
mov
pusha
or
or
push
enter
jae
loopne
repnz
inc
mov
lret
lcall
push
xor
and
add
push
jmp
fucomip
insl
jno
icebp
push
in
nop
scas
pushf
arpl
loope
popa
int3
std
gs
push
scas
jle
mov
scas
or
xor
es
shrl
or
cmpsb
imul
call
bound
pop
out
aas
ljmp
sbb
cmc
mov
stos
mov
ds
out
mov
pushf
pop
or
add
dec
inc
inc
jno
xchg
fistps
in
js
adc
add
rcll
test
mov
sti
push
mov
and
pop
lds
inc
and
jno
ds
cs
js
mov
sub
aas
dec
enter
aad
repnz
fldcw
cs
jle
xor
cmp
ret
jmp
ja
mov
repnz
adc
dec
movsl
ss
mov
xchg
outsb
sbb
inc
push
pop
movsb
std
les
andl
sub
xchg
and
xchg
jle
fiaddl
pop
out
or
cs
leave
insl
push
mov
fdivrl
notl
sub
shll
lock
ljmp
les
rolb
jmp
outsl
leave
out
cli
or
jl
mov
pushfw
pop
repz
movb
or
and
leave
int
aas
sub
lcall
out
in
pandn
adc
in
dec
and
jecxz
pop
or
pop
jae
jl
mov
pop
inc
movsb
enter
fwait
shrb
fs
out
sbb
fwait
push
inc
daa
pop
scas
ja
lret
repnz
mov
sbb
hlt
push
or
xor
cmpsl
in
pop
ds
stos
push
aad
lcall
mov
loop
pop
xor
mov
push
inc
in
bound
pushf
les
push
fidivs
repz
inc
inc
or
outsb
test
das
inc
jp
push
fnstsw
cmp
jno
data16
jle
in
stos
and
out
jp
mov
outsb
dec
mov
das
xchg
pop
bound
add
sti
lahf
mov
sub
enter
inc
inc
fsubr
ss
sub
mov
sbb
loope
fstpl
test
ss
sub
pop
les
ds
mov
inc
adc
push
sub
lcall
out
loop
lahf
ret
aad
xor
mov
rcrb
dec
pop
cmp
xlat
and
fbstp
xchg
or
lahf
xchg
ficoml
lret
pusha
test
les
cmp
out
popf
dec
dec
decb
pop
xor
pop
fst
lods
fimuls
popf
fs
sub
mov
fucomi
cmpsb
cmp
out
xchg
xchg
pop
rolb
enter
ret
pop
mov
and
jmp
cld
fadd
in
lods
imul
in
out
sti
daa
fnstsw
imul
stos
jo
mov
jne
and
mov
subb
push
mov
push
psubw
push
out
sbb
or
xchg
lds
add
mov
push
cmp
es
mov
negb
stos
inc
add
pop
add
push
nop
outsb
jns
lock
sbb
sbb
adc
mov
inc
aad
hlt
cmp
sub
in
fwait
arpl
aaa
fwait
sbb
sbb
mov
rcrl
xor
sub
jne
xchg
std
arpl
xchg
xor
leave
mov
push
popa
scas
or
jo
sahf
pop
jp
lret
repz
and
shrl
aam
leave
leave
add
pop
fcomip
fsubr
dec
call
inc
add
lret
leave
mov
cmpsb
push
xorb
in
dec
adc
jno
mov
js
aam
movsb
imul
lret
jnp
aas
pushl
mov
je
dec
aam
mov
insb
flds
imul
push
push
sbb
xchg
push
daa
pop
dec
jo
lock
fwait
stos
sbb
jnp
filds
nop
add
pop
in
sub
xchg
sbb
fmull
movsl
dec
cmp
icebp
pushf
sti
mov
insl
clc
xchg
or
jg
inc
mov
push
lea
in
adc
sub
and
dec
mov
ret
adc
jae
mov
js
js
sbb
int
mov
icebp
pop
inc
popa
imul
inc
push
or
dec
addb
push
insl
adc
jp
jno
xor
addb
sarb
and
cmpsb
call
in
sub
ficoml
xlat
mov
in
dec
fcoml
cmpsl
dec
adc
or
inc
push
out
mov
shrl
nop
shll
lods
jnp
mov
sbb
xchg
outsb
adc
mov
dec
test
data16
cmp
or
icebp
fldt
arpl
fs
pop
adc
scas
jb
ror
sahf
sub
cld
movb
sub
mov
shl
cld
addr16
out
lcall
mov
mov
popa
mov
sub
xorb
fnstenv
shlb
lds
rorl
test
out
xchg
push
jb
aas
std
dec
ljmp
sub
popa
or
push
sbb
test
jb
stos
jmp
dec
in
pop
sti
addr16
gs
lock
push
das
addr16
imul
or
aas
push
ljmp
data16
aad
inc
test
ret
call
aad
push
adc
mov
cltd
jl
stos
adc
in
jns
push
mov
retw
outsb
adc
call
inc
or
out
xor
lret
cmp
test
xor
shr
pop
mull
pop
lods
fs
cmp
idivb
xchg
test
std
xchg
and
and
sti
mov
mov
xchg
jg
xchg
movsl
mov
pop
xchg
popf
imul
jle
sbb
jmp
cmp
iret
mov
outsl
xlat
std
or
push
test
mov
testl
into
pop
jnp
jae
test
hlt
sbb
shlb
mov
xor
adc
data16
pop
xchg
icebp
xor
push
gs
movsb
jb
jmp
mov
rcrl
jmp
mov
lret
sub
cmc
test
jl
scas
mov
cmc
xor
fdivs
imul
mov
add
cwtl
jg
subl
movsl
xor
popf
xchg
mov
sub
out
xor
cli
loopne
xchg
insb
das
clc
test
push
lods
jnp
in
cltd
push
lret
es
sbb
pop
mov
xlat
outsb
jne
cmovge
sub
ret
mov
jae
in
and
xchg
sub
lret
xlat
and
movsb
xor
dec
push
push
gs
dec
popa
pop
add
push
out
insb
fiadds
or
adc
pushf
daa
pop
sbb
rcl
jl
mov
jmp
and
pop
mov
xor
cmp
rolb
sub
adc
shrb
jle
dec
jbe
movsl
mov
pop
ret
mov
or
jmp
jge
dec
loop
fmuls
cmp
lock
mov
ret
dec
gs
pop
roll
mov
jmp
das
mov
pop
cmp
lods
pop
fsts
jecxz
and
cmc
push
int
xor
pop
mov
rcr
add
rolb
shl
cmp
scas
out
cmp
mov
sub
pop
movsb
dec
pop
ds
test
ret
xchg
mov
test
pushf
pop
ja
adc
or
sbb
cli
insb
out
mov
mov
dec
jge
lcall
xlat
cmc
dec
jle
pop
push
jp
xor
jmp
inc
mov
out
inc
aaa
mov
xlat
mov
ljmp
or
or
and
or
inc
dec
dec
sarl
sbb
movsb
mov
sub
in
enter
pop
dec
adc
ja
dec
repz
sarb
insb
xchg
mov
inc
mov
inc
mov
add
sbb
xchg
addr16
fsts
push
inc
gs
fwait
mov
pop
enter
inc
repz
adcl
andb
das
cmp
mov
mov
mov
mov
pop
mov
lods
test
or
shl
cli
push
insb
dec
jecxz
pop
insl
mov
jns
cmp
imul
jnp
sbb
pop
pop
mov
fisubrl
jae
adc
outsl
popa
insl
mov
mov
std
pop
popfw
inc
mulb
repz
pop
shrb
sub
addl
jns
add
mov
mov
xlat
add
fs
jg
pop
sahf
imul
add
jno
dec
cmp
and
mov
sbb
inc
jmp
shll
dec
das
ds
pop
aam
jae
sahf
pop
mov
jl
aam
aaa
dec
mov
loop
and
outsb
cmp
add
hlt
inc
push
mov
mov
ret
push
jl
add
add
imul
sbb
loope
adc
xor
dec
mov
mov
cmp
inc
lods
mov
xor
dec
scas
scas
and
xchg
inc
jns
gs
xchg
jnp
js
jbe
scas
ret
mov
jp
in
or
push
jecxz
push
mov
push
jmp
mov
sub
xchg
fldcw
iret
or
or
xlat
test
jnp
in
mov
std
jns
dec
shrb
dec
adc
push
sahf
scas
je
out
push
push
es
scas
or
shll
jae
shll
loop
pop
mov
xchg
mov
movsl
cld
jle
mov
or
adc
push
push
mov
jp
out
stos
add
lcall
add
icebp
push
cmp
loop
mov
hlt
lock
mov
or
inc
fimuls
mov
rclb
jae
xor
or
jbe
sub
frstor
pop
clc
hlt
inc
mov
pop
or
lock
jecxz
test
in
stc
jecxz
mov
sub
fwait
or
cmpsb
adcb
push
outsl
push
mov
je
jle
shlb
mov
fwait
sti
jns
cmpsl
cmp
cmp
jl
bound
lahf
inc
dec
xor
inc
in
jo
pop
xchg
icebp
sbb
loope
loop
mov
xchg
xchg
mov
fdivr
push
test
lods
leave
xor
mov
fisttps
push
mov
fistpl
int3
pop
sti
aaa
cmp
insb
or
jb
imul
and
sti
adc
and
push
or
jg
sbb
int
iret
push
mov
mov
mov
pop
push
mov
mov
pop
cmpsb
push
xchg
lods
imul
push
in
xor
stos
dec
mov
cmp
cmp
lea
arpl
cmp
cmp
shl
ja
les
outsb
outsl
push
pushf
sub
add
js
call
dec
aas
add
mov
jne
neg
cmpsl
add
sub
and
mov
les
fadd
add
jns
mov
lret
mov
mov
in
sub
xor
andb
jle
dec
jnp
push
mov
lock
xor
mov
out
jmp
inc
push
ss
fldenv
jne
mov
daa
cmpsb
js
or
test
pusha
fbld
add
lea
rcll
or
mov
popf
outsl
jg
jns
xor
nop
imul
push
fwait
or
testl
orl
xor
cmpb
mov
adc
and
add
sbb
mov
in
sbb
mov
js
add
inc
pop
mov
lcall
scas
addr16
icebp
loop
iret
mov
push
sbb
push
mov
mov
adc
dec
mov
xchg
mov
or
stos
aam
hlt
mov
stc
mov
gs
fwait
ds
push
mov
adc
out
aas
jmp
arpl
adc
mov
cli
mov
cmp
sarl
dec
mov
fimull
cmp
mov
imul
inc
xchg
mov
xor
mov
dec
and
sbbl
fiaddl
adc
leave
inc
fcmovnu
dec
jp
mov
fisubrs
and
and
imul
lcall
push
scas
jae
sbb
lret
sahf
fistpl
inc
cltd
and
lret
add
cwtl
jg
xorb
dec
orb
stos
outsb
xor
pop
inc
icebp
sbb
fld
push
aaa
mov
subb
into
nop
jp
icebp
sbb
inc
add
inc
fmull
cmp
sti
pushl
lret
insb
xor
jb
outsb
movsl
mov
sbb
push
sub
int
dec
rclb
xchg
outsl
sbb
push
sbb
ljmp
fwait
sbb
les
sub
pop
test
or
mov
rcrb
pop
lahf
mov
pop
stc
pop
lahf
pop
or
int
jae
cld
mov
dec
dec
xchg
cmc
adc
cld
jle
jg
xchg
sahf
out
pusha
pusha
sub
adc
daa
stc
jns
mov
arpl
pop
faddl
loope
adc
pop
jo
inc
fs
and
or
ret
inc
fucomi
test
dec
xor
cltd
mov
loope
test
bound
loop
jl
adc
mov
fimuls
mov
push
stc
popa
sbb
les
xor
mov
inc
lret
inc
sub
das
ret
lds
push
push
add
mov
pop
rorb
mov
add
xchg
inc
loope
push
aad
fucomip
imul
jge
jp
mov
fdecstp
sbb
loop
loope
push
pusha
pop
repz
test
jle
xor
mov
jecxz
rcll
push
push
push
lock
xchg
jns
inc
push
stc
aaa
fstps
xor
add
scas
repnz
mov
xchg
das
sbb
pop
pushf
push
and
aam
insb
icebp
push
dec
lahf
xchg
dec
jo
xchg
mov
cmpb
inc
adc
aad
sbb
aaa
notl
sbb
loope
jl
insl
mov
orb
sub
xor
scas
cmp
sti
jp
pop
push
fidivrs
jne
or
add
push
dec
aaa
clc
pushf
cmp
popa
mov
test
dec
mov
mov
pop
cmp
cmpsb
out
push
enter
push
test
fmuls
and
pop
add
and
jbe
fiaddl
adc
cltd
adc
add
pop
mov
aad
out
stos
and
cmp
repnz
xchg
mov
add
sbb
mov
rorb
loop
fsts
iret
fstpt
dec
xor
inc
mov
inc
les
mov
xchg
mov
dec
or
sarl
movsb
test
push
inc
xor
inc
mov
add
dec
fcomps
adc
sahf
adc
mov
cmc
lods
cmp
pop
orl
ret
mov
inc
cmp
sbb
pop
mov
nop
inc
sbbl
xchg
das
leave
roll
mov
mov
les
mov
movsl
dec
fstpl
cmpsl
lret
jmp
clc
and
and
mov
push
xchg
rolb
movsb
jae
mov
inc
cmp
repnz
addl
push
push
mov
pop
ss
fwait
jno
rcrl
or
scas
sbb
add
pop
std
sub
add
mov
scas
test
int3
xor
loope
sub
cs
clc
cs
or
dec
jo
pop
repnz
out
pop
shrl
xchg
in
lods
stos
mov
sbb
cld
mov
leave
mov
out
xchg
incb
imul
mov
in
sub
ror
push
lret
mov
roll
ror
cmp
imul
mov
fdivr
pop
mov
sbbb
sbb
outsb
sub
mov
subl
cmc
xlat
repz
and
icebp
sbb
jg
jle
pop
adc
fwait
rclb
adc
repz
sbb
add
inc
movsl
out
mov
jno
or
mov
or
xchg
xor
inc
ret
fdivrl
sub
es
cmp
sub
push
call
adc
cs
in
aas
fmull
push
sub
notb
mov
pop
mov
in
sub
dec
push
shl
outsl
stc
pop
push
mov
loop
xor
ret
jae
jns
mov
add
and
xor
jge
mov
pop
sub
negb
loop
xchg
adc
rcrl
jg
cwtl
xor
mov
insl
mov
jle
js
testb
adc
int3
aas
pop
es
stos
push
jle
mov
dec
aas
cltd
mov
pop
jns
inc
push
jecxz
inc
xor
hlt
sbb
xchg
adc
sbb
add
xlat
std
mov
int
cmc
pop
pop
xchg
js
cmp
dec
mov
cmpl
andl
stos
add
or
addr16
call
bound
sub
std
adc
aas
scas
leave
loope
xor
mov
mov
mov
ror
test
cmp
divb
adc
adc
mov
outsb
shlb
xchg
insl
je
aas
push
jl
aam
push
xchg
pop
cmp
fmuls
pop
out
ds
movsb
dec
or
gs
sub
xchg
or
pusha
call
shll
mov
adc
shlb
mov
pop
dec
pop
test
mov
loop
mov
sub
xchg
push
inc
outsl
mov
jnp
inc
push
addr16
sbb
cmpsb
outsl
sbbb
out
xchg
arpl
addr16
or
add
into
adc
aad
les
je
ljmp
arpl
outsl
lea
cmpb
xchg
jns
add
sbb
lret
jmp
nop
pop
rorb
cmp
pushf
popa
jg
xchg
mov
xchg
faddp
mov
xorl
sbb
sti
call
pushf
loope
add
adc
mov
outsb
or
lret
pop
shlb
sbb
fdivrl
mov
mov
dec
push
mov
xor
and
jno
xchg
xor
dec
pop
push
push
js
push
movsb
mov
add
lock
add
dec
inc
add
stos
sub
add
mov
loop
adc
pop
fists
xor
jns
out
add
in
push
pop
int3
xchg
addb
xchg
mov
cmpsl
and
js
add
or
daa
sbb
and
leave
sub
xor
sbb
inc
or
addr16
cmp
fnstsw
popf
mov
pop
hlt
xor
and
mov
and
das
imul
mov
xor
inc
out
fiadds
pop
into
or
or
dec
push
cmp
add
or
mov
push
mov
loop
cmpsl
leave
push
inc
push
std
sub
mov
outsl
mov
nop
in
repz
xchg
mov
mov
pop
mov
jo
jo
inc
fldcw
stos
icebp
push
cmp
test
jge
add
out
jg
mov
pop
jnp
scas
dec
sbb
hlt
dec
clc
insb
cmp
loope
pop
int3
movsb
lret
and
lcall
inc
mov
es
sbb
popa
clc
sub
sbb
insb
mov
iret
pop
outsb
lods
and
jae
lods
int
dec
inc
dec
dec
push
mov
pop
insb
sahf
aaa
jl
inc
loopne
cmp
movsb
jl
daa
adc
xchg
aam
and
mov
popa
mov
or
out
jns
loopne
inc
lcall
mov
sub
pop
or
rolb
xlat
or
into
xchg
or
sbb
or
out
mov
xchg
pop
mov
or
addb
cld
mov
fadds
nop
jae
mov
aaa
lock
xor
adc
in
jg
push
xchg
test
pop
dec
cltd
insb
lar
mov
xchg
dec
js
dec
xlat
aad
mov
aaa
cmp
push
cmpsb
outsl
xor
adc
movsl
or
mov
or
mov
js
in
or
xor
dec
mov
xor
testl
shrd
lods
jecxz
mov
inc
stos
js
xchg
mov
lods
jp
ljmp
in
pop
adc
dec
inc
sub
xlat
test
mov
jecxz
and
jno
push
fisubrs
lds
xchg
push
add
icebp
cmp
or
addl
dec
xor
xor
push
adc
std
push
add
mov
mov
adc
outsb
dec
jbe
push
loop
xchg
push
hlt
pop
inc
xchg
shlb
xor
jmp
xlat
dec
outsb
popa
jb
sbb
fdivl
das
mov
int3
add
jmp
bound
or
mov
mov
dec
sbb
xchg
cmp
xlat
int
out
fsubrs
enter
add
xchg
mov
inc
loope
adc
movsb
cmp
aas
dec
or
jle
sbbb
mov
lds
mov
cli
cmp
out
inc
push
popf
out
sub
pop
daa
mov
repnz
xchg
pop
stc
movsb
adcl
and
jns
mov
push
icebp
jg
lret
sub
pop
pushf
add
mov
inc
mov
adcl
or
leave
hlt
out
and
push
inc
outsl
xchg
sub
pop
adc
mov
decb
jno
pop
sahf
call
add
aad
xor
movl
fmulp
outsb
arpl
mov
les
mov
adc
inc
out
jmp
sub
xor
and
ljmp
or
lods
xchg
daa
lahf
popa
rdmsr
adc
adc
pop
xchg
les
ds
enter
sub
js
cmp
add
add
push
cs
mov
hlt
xchg
push
and
aas
fwait
arpl
data16
push
sub
or
std
inc
stos
into
rcll
jg
mov
xchg
test
mov
repnz
popa
inc
int
test
mov
xchg
scas
fs
and
shl
xchg
inc
pushf
jecxz
cli
xchg
fadd
fiaddl
and
jae
dec
cmp
jbe
cmpl
clc
shl
cld
lret
jae
imul
ja
lahf
cs
pop
xor
and
push
std
add
daa
repnz
insb
add
push
shl
out
push
dec
pop
adc
adc
push
sub
sbb
sub
jg
les
add
iret
and
jg
sbb
movsl
cmp
aam
sub
fs
pusha
dec
xchg
popf
cld
movsb
mov
arpl
leave
inc
jecxz
jae
stos
out
push
jp
fldl
lret
add
and
rorl
lret
aaa
mov
out
xchg
push
rcrb
mov
jle
sahf
loopne
mov
cli
mov
mov
cmc
lahf
aad
in
sbb
mov
in
in
inc
subl
xchg
loope
shlb
rol
push
test
dec
adcl
mov
jecxz
and
jp
aas
rolb
and
or
aaa
xchg
push
shl
shlb
inc
in
xchg
mov
push
mov
add
sbb
test
push
test
mov
lcall
pop
adc
sub
inc
imul
stc
jb
push
jbe
movb
dec
adc
addr16
fnstcw
pop
pop
subb
push
hlt
adc
cmpb
mov
fnstcw
sbb
int
dec
mov
test
mov
in
push
xor
fnstsw
mov
push
pop
or
loope
test
repz
aam
xor
loop
mov
pop
mov
xor
rol
jg
fiadds
int3
and
frstor
jecxz
shll
shl
or
mov
icebp
push
xchg
pop
fs
mov
mov
fnstcw
clc
xor
xchg
xor
mov
sub
call
and
pop
adcl
int3
dec
dec
pushf
ficoml
push
cmp
push
mov
rcr
xchg
cld
addl
adc
dec
cmpsb
mov
cmp
sbb
mov
adcl
rclb
enter
andl
mov
cmc
scas
rolb
popa
cmc
pop
xchg
cmc
jmp
sub
mov
ja
lret
iret
jge,pn
movsb
lods
arpl
sahf
mov
push
test
icebp
scas
test
inc
adc
adc
pop
add
xchg
mov
mov
scas
and
jp
xchg
lods
stos
gs
fdivs
fiaddl
aaa
inc
push
cmpsl
mov
xor
dec
or
lret
adc
ja
into
and
add
mov
mov
test
adc
jb
jae
cmp
add
ret
push
popa
sub
mov
dec
and
sbb
xor
lods
aad
pop
or
je
xchg
adc
cmp
mov
xor
cwtl
sbb
pop
hlt
pushf
mov
mov
mov
adc
xor
fists
filds
jmp
ss
dec
rclb
jp
mov
sbb
inc
stos
outsl
sti
and
lods
and
std
imul
loop
clc
add
fildll
ja
mov
xchg
mov
imul
push
sub
dec
adc
sti
mov
test
cmp
stos
ja
dec
push
or
repz
xlat
sbb
in
xchg
xchg
pop
sbb
sub
shrl
sarl
cmp
pop
jnp
mov
fs
jmp
cmpsb
cmp
out
ja
sarb
lds
push
xor
xchg
push
add
fistpl
lods
test
jae
cwtl
cmpsb
lahf
xor
movsl
xor
cli
fucomp
clc
cmpsl
ret
dec
test
leave
jge
mov
mov
add
jmp
shl
mov
into
idivb
mov
cmp
outsb
inc
mov
aam
aaa
cmp
and
inc
cli
xchg
push
push
filds
inc
jge
cmpb
out
iret
xchg
imulb
pop
xor
xchg
sub
outsb
xor
shrb
pop
mov
repz
dec
arpl
xchg
fildl
pop
cs
outsl
cs
mov
pop
mov
sbb
cmp
push
sbb
js
pop
rorl
std
jnp
in
mov
mov
fisubrs
in
push
sbb
int3
stos
lcall
shrb
ret
sub
iret
or
sbb
mov
jne
idivl
mov
xchg
andl
data16
xchg
inc
xor
fbstp
inc
bound
push
push
scas
andb
andb
adcb
lods
nop
sarl
stc
out
xchg
cmp
pop
push
shll
adc
sbb
pop
jo
push
fisubrl
lret
and
push
inc
lret
xor
lock
fs
sahf
orl
or
std
fs
cwtl
sub
fbstp
pop
push
mov
xlat
fsubr
xchg
fsts
insb
mov
repnz
jae
xor
jl
pop
in
in
ja
fstpl
popa
dec
lock
adc
jns
scas
insb
push
sarl
into
hlt
jmp
sbb
in
in
cmp
mov
dec
fcoms
pop
out
mov
les
hlt
xor
xchg
aaa
hlt
scas
je
cli
push
stos
ret
loopne
enter
push
push
loope
add
in
les
imul
out
dec
ds
out
xchg
xor
pushaw
push
out
cmc
mov
sub
pop
ds
mov
jle
aam
cmp
cli
push
icebp
cs
adc
fdivrs
fistpl
dec
adc
pop
cmp
inc
movb
les
inc
add
movsl
cmc
dec
inc
cmpsl
aas
lahf
gs
das
cmp
jmp
arpl
push
out
push
mov
inc
mov
in
mov
add
mov
adc
lods
leave
xchg
sbb
lock
mov
cmp
and
or
popf
mov
cmp
mov
dec
ror
mov
out
xchg
cmp
lea
fstps
shr
mov
mov
fstp
inc
das
inc
add
jno
outsl
repz
dec
and
mov
inc
push
sbb
mov
cmp
adc
dec
ds
or
fbstp
fdivr
mov
cmp
rclb
mov
jmp
ss
xor
or
cltd
frstor
ds
and
loope
push
dec
fsin
push
fdivr
push
xor
cmp
jl
mov
movsb
icebp
fdivrs
mov
bound
fldl
ret
mov
std
cmp
in
lret
mov
rcrl
inc
adc
repz
mov
cmpb
stos
jns
push
mov
cmpb
mov
pushf
push
dec
inc
pop
xor
sub
fdivrl
lret
sbb
jbe
pop
and
test
jl
or
inc
inc
jmp
repnz
pop
inc
icebp
enter
shlb
add
aas
pop
xchg
fbld
movsl
addr16
mov
movsb
out
fld
repz
lea
int3
add
shr
cmpsl
fldcw
pop
add
pop
in
je
int
mov
test
inc
inc
js
es
lahf
repnz
dec
aad
insb
fcompp
jl
mov
roll
mov
hlt
inc
test
stos
ror
fadd
bound
push
repz
sub
push
jmp
jnp
cmpsb
push
shrl
outsb
jno
dec
in
sahf
jmp
cmp
pop
xchg
pop
dec
lods
mov
xor
andb
push
cmp
or
loope
jge
mov
mov
js,pt
push
jecxz
mov
bound
jg,pt
jb
cmovnp
iret
daa
xor
movsb
cmp
insb
pop
in
lds
outsb
pushf
add
add
fmull
jle
xor
dec
std
add
lds
push
test
sub
lods
in
adc
lahf
push
add
aam
daa
adc
xchg
cmp
pushf
imul
and
or
dec
es
push
sbb
cwtl
aas
mov
dec
pushf
ds
outsl
lea
pop
in
sti
fisttpll
fs
sbb
test
arpl
jp
idiv
mov
scas
dec
dec
sahf
scas
push
in
jae
subb
fwait
testl
js
inc
mov
jecxz
sahf
jecxz
cs
push
sti
xor
cmp
movsl
add
cmp
clc
pop
aas
clc
adc
add
incb
push
and
xchg
inc
out
lret
push
cmpsl
sub
aam
sbb
aaa
mov
and
ret
xor
je
inc
dec
sub
mov
data16
fdiv
aam
imul
push
js
sbb
mov
fsubl
jns
leave
fisubrs
sbb
push
shrl
xchg
mov
sub
xchg
lds
mov
mov
iret
or
inc
es
aad
jl
mov
fdivrs
int3
dec
push
sbb
test
cmp
mov
inc
fs
mov
call
sahf
shl
test
and
test
loop
out
std
mov
test
lret
mov
fstl
and
je
outsl
out
insb
mov
pop
out
sahf
and
aam
lock
bound
rorb
mov
xor
mov
insl
push
xor
mov
ja
cli
mov
xor
or
lds
push
sub
xor
sahf
xchg
mov
adc
ffree
scas
insl
iret
jmpw
sbbb
and
pop
sarl
xor
call
call
cld
xchg
sbb
inc
push
out
pop
xchg
stos
mov
adc
imul
imul
imul
sbbl
and
or
sbb
das
jge
sub
loope
sbb
cmp
cmp
sbb
cwtl
and
je
cltd
jg
mov
ret
js
add
les
stc
jmp
mov
xchg
xor
lods
aas
mov
xor
fwait
in
or
mov
aaa
add
or
in
dec
popl
bound
dec
xchg
mov
je
fisubs
and
xor
pop
pop
js
es
es
fistl
and
xor
sub
mov
sti
lea
test
in
aas
test
sahf
out
popf
std
adc
data16
sbb
insl
mov
sub
fistpl
cmpb
xor
movsb
std
lods
fidivl
repnz
jnp
jle
add
xchg
in
cmp
test
pop
mov
fwait
jp
data16
arpl
test
inc
mov
mov
leave
sbb
shlb
xchg
jb
push
loopne
cmpsb
imul
imul
psubd
mov
data16
dec
mov
add
mov
xchg
fimull
popa
xor
test
fnsave
and
orl
sub
jl
cltd
out
and
fisttpll
jg
mov
out
iret
xchg
and
push
dec
push
imul
out
nop
into
pop
inc
xchg
push
push
and
xor
je
push
lods
pop
out
gs
sbb
inc
out
pop
stos
fbld
sbb
adc
call
adc
cld
inc
cltd
hlt
push
lock
or
outsl
mov
mov
orb
cld
lret
inc
dec
das
shll
movsl
xchg
fildll
ljmp
lods
sbb
sub
adcl
fwait
mov
pushf
pop
dec
js
or
push
mov
mov
mov
movsl
scas
cs
lods
lcall
and
dec
add
inc
and
jmp
xchg
sub
or
jge
sbb
lods
mov
mov
lahf
nop
dec
rolb
mov
fidivrl
sbb
and
push
lret
push
popa
sub
jecxz
nop/reserved
mov
loopne
push
in
ja
ror
jnp
mov
push
lahf
cld
loope
mov
xor
cmc
lods
fldt
jbe
pop
adc
fiadds
add
lahf
inc
data16
push
push
lret
das
xor
cmp
std
das
add
jns
inc
xchg
fwait
idivl
nop
dec
mov
shrb
adc
jle
adc
clc
jbe
arpl
pop
loopne
lock
and
jl
in
test
jo
mov
adc
pop
cltd
add
add
add
jbe
xlat
or
loopne
insb
cmp
or
sbb
mov
and
jb
mov
mov
add
dec
and
mov
mov
cmp
outsl
xor
cld
ja
subb
shl
mov
xchg
mov
inc
and
ljmp
xchg
sbb
or
push
mov
movhps
cmp
in
aas
rcrb
test
shrb
les
inc
jge
cmp
into
int
pop
test
je
lret
mov
scas
push
mov
andb
sub
in
xchg
mov
push
aaa
cmpsb
mov
mov
adc
jg
icebp
iret
sbb
xchg
jo
cmp
mov
gs
add
repnz
fstpt
ja
addr16
in
or
mov
mov
add
pop
pop
add
and
fsubrs
push
and
sti
pushf
mov
popf
push
adc
xchg
push
lret
ficompl
in
ds
sbb
lods
adc
mov
dec
or
ss
loope
insb
adc
add
xchg
call
jno
sub
sbb
inc
fsubrs
leave
in
sbb
adc
ds
and
gs
cld
mov
mov
fdiv
jle
hlt
lcall
cmp
int
out
cwtl
scas
mov
cmc
imull
inc
adc
cmp
repz
adc
loope
aaa
push
xchg
xor
adc
push
loop
aad
mov
cld
inc
jmp
or
push
adc
inc
mov
pop
and
enter
mov
jo
mov
hlt
or
aaa
jbe
jno
into
mov
push
adc
test
pop
cmp
xchg
aad
in
jecxz
outsb
dec
in
fsubr
les
imul
or
mov
and
pusha
cmp
ja
dec
cmc
addb
cmp
cmp
cs
adc
xor
shll
stc
push
aaa
xor
xchg
xor
ds
mov
xor
jno
shll
lods
jl
sti
and
mov
inc
xchg
jne
fistpl
fnstenv
inc
inc
aaa
add
movsl
xchg
mov
adc
fimull
dec
loop
cmc
mov
daa
movsl
xchg
cs
nop
sub
imul
scas
shrl
arpl
mov
dec
xor
call
add
xor
pop
sbb
aas
pop
and
aam
insb
ret
fcomps
cmpsb
xor
pop
cli
cmp
sbb
scas
push
rclb
dec
sub
dec
jg
cli
push
scas
jmp
mov
or
shll
pop
or
mov
fisubs
sar
aad
fistl
sahf
nop
cwtl
inc
cmc
adc
das
addl
test
lock
negb
jo
jb
cld
xchg
fwait
call
adcb
les
mov
fldt
mov
mov
dec
pop
sbb
daa
jo
or
mov
fwait
jg
aad
jle
es
push
fsubrl
push
or
sub
mov
loop
ja
incl
fwait
test
sti
sbb
frstor
lods
in
imul
lds
dec
pop
fstpl
mov
roll
pop
jge
inc
lods
inc
sub
data16
fistl
sarl
lods
cs
pop
pushf
jae
jmp
fcomps
lahf
cmp
fmuls
push
mov
xor
pushf
mov
seto
xchg
mov
subb
push
cmc
xlat
popf
dec
and
iret
sub
fiaddl
das
jo
imul
add
sub
pop
lcall
pop
mov
push
push
mov
andps
out
and
shr
bound
bound
push
xchg
xchg
cmp
mov
mov
int3
les
xchg
loop
shrl
test
cmp
and
xchg
push
loopne
sub
pop
hlt
mov
inc
mov
call
xchg
dec
mov
jge
or
cld
adc
sbb
cmp
xchg
dec
inc
adc
dec
add
les
adc
mov
adc
cmp
stos
in
sahf
in
dec
loop
mov
pusha
inc
and
cld
inc
mov
cmp
rcl
mov
xor
jle
mov
pop
pop
les
out
and
lods
mov
lahf
mov
push
or
xor
sub
frstor
mov
loopne
mov
lods
insb
loopne
push
pusha
xchg
test
xor
adc
xorl
cmp
cmpl
lods
ret
in
inc
push
mov
int3
sti
jmp
roll
or
mov
cmp
inc
in
push
sub
sbb
outsb
fnstenv
cmp
push
push
mov
jecxz
dec
cli
outsl
in
xor
je
xchg
inc
or
out
pop
cltd
fisttps
mov
andl
leave
cmp
mov
dec
push
fwait
jae
insb
jmp
pushf
sbb
mov
cmp
out
cmpsb
aaa
imul
mov
push
lock
out
adc
dec
sbb
push
out
adc
push
popf
sub
sbb
lods
call
xchg
dec
push
shr
mov
or
sbb
subl
ljmp
add
sub
xchg
imul
test
rorl
das
call
mov
sbb
stos
xlat
gs
dec
mov
or
fildl
sub
and
inc
pop
or
xchg
or
lock
repz
ret
idivb
pushl
ljmp
cmp
adc
sbb
aad
jnp
repz
sub
and
cwtl
fbstp
xor
sub
mov
fcoms
cmp
or
adc
adcb
leavew
push
dec
ljmp
sbb
pop
mov
push
push
mov
push
push
cmp
mov
xor
and
lods
pop
fidivrl
addr16
xlat
ror
mov
jecxz
pop
mov
loop
jo
fucomip
jg
and
mov
pop
addb
and
fldenv
cmp
xlat
mov
fsub
mov
jae
orl
mov
mov
inc
outsb
adc
aad
and
add
mov
mov
mov
mov
ja
repz
xchg
add
outsb
xor
dec
and
adc
andb
inc
fstps
in
sarl
mov
in
cmp
loope
inc
xchg
cmp
clc
or
jecxz
add
sbb
adc
jle
cltd
pop
ds
fstps
sti
xor
jnp
dec
mov
fnsave
inc
data16
jb
loope
or
sbb
mov
movsl
pop
sbb
sub
test
sarl
imul
xchg
jbe
mov
jle
jmp
fwait
int3
addr16
pusha
jle
ret
sbb
in
je
sub
ffree
dec
testl
adc
div
jge
fbstp
xchg
in
jne
inc
push
mov
outsl
jno
cmp
sarb
pcmpeqb
popa
aam
andb
fldl
sarl
push
movsb
xor
fmul
mov
inc
or
mov
out
pop
pop
outsl
dec
ficompl
or
jge
dec
adc
stos
aas
data16
push
dec
inc
or
leave
test
pusha
dec
fdivr
jo
sub
add
cld
cmp
xor
cwtl
mov
cmpl
fsubs
scas
mov
cwtl
shlb
push
jo
jg
inc
sar
sahf
and
dec
cs
aaa
pop
fxch
out
push
sbb
mov
lds
stc
add
xchg
or
pushf
inc
inc
mov
and
and
push
mul
xor
pop
arpl
cmp
or
fstps
mov
test
xor
sahf
mov
jno
add
mov
or
bound
lods
imul
popf
mov
sbb
fstps
jmp
iret
in
xchg
imul
pop
mov
lock
xchg
shl
pushf
push
dec
iret
shl
jnp
testb
popf
stos
cld
dec
jecxz
jecxz
sub
shll
mov
xor
add
push
lahf
lods
inc
add
add
in
into
mov
xchg
xchg
sub
rcrb
dec
repz
mov
cmp
out
mov
inc
daa
rcll
popf
in
jne
sub
arpl
js
loope
outsb
fiadds
cmp
push
lock
adc
xchg
fisttpl
enter
notb
adc
cmp
inc
mov
shlb
out
sub
iret
push
mov
dec
xor
pop
lds
loope
aam
xor
imul
pop
mov
shll
cli
or
pusha
cmp
pop
pop
and
addr16
imul
xchg
dec
mov
mov
movsl
sahf
rcll
test
push
jno
mov
scas
adc
in
and
push
outsl
or
loope
std
lds
repz
add
inc
push
lock
pop
add
and
inc
arpl
aad
xor
nop
pushf
dec
ret
lods
xchg
adc
cmpsb
fwait
shlb
icebp
pop
stos
mov
fisubrs
movsb
repz
popf
inc
xor
mov
int3
mov
rcr
out
fnstcw
push
leave
fldt
mov
cmp
xor
aam
in
jns
icebp
lea
xor
shrl
int
sbb
sub
xor
and
in
mov
dec
xor
jmp
cld
or
data16
test
sub
or
sbbb
pop
nop
mov
clc
in
mov
dec
sahf
push
fldt
xchg
daa
xchg
add
mov
cmp
mov
push
sbb
and
stos
and
inc
mov
jo
push
xchg
xorb
sahf
scas
xchg
sub
sbb
sbb
mov
adc
xchg
arpl
cs
dec
int
cmp
mov
loopne
xchg
push
call
cmp
xchg
sahf
js
fildll
mov
push
or
xor
and
je
arpl
adc
int3
add
sbb
imul
bound
sub
dec
ficomps
sbb
cmpsb
iret
ljmp
frstor
jecxz
dec
mov
push
in
pop
std
push
adc
push
jmp
lret
and
dec
jne
mov
inc
insb
sub
pop
test
scas
sub
inc
pop
outsl
sub
arpl
testb
pop
inc
les
xchg
addr16
loopne
inc
xchg
stos
sub
sbb
push
fcmove
mov
test
arpl
inc
mov
insl
sbb
addl
cmp
mov
aaa
fwait
xchg
psrad
or
mov
pop
sbb
push
ret
lcall
mov
out
outsl
loop
adc
mov
out
cs
and
mov
pop
in
sub
or
push
in
arpl
cmp
aam
jne
das
out
pop
mov
jns
arpl
es
iret
adcb
xlat
dec
dec
xor
out
repz
mov
or
fstl
fwait
lahf
sub
fs
jl
pusha
pop
sbb
mov
enter
repnz
mov
mov
sbb
stos
loope
inc
mov
pushf
ja
push
repz
cli
pop
or
push
push
pop
inc
xchg
test
cmp
das
jp
push
arpl
aaa
pop
dec
and
mov
pop
sbb
sti
adc
fldcw
enter
add
in
inc
push
outsb
je
jbe
jg
movsb
gs
pop
stc
scas
add
stos
push
cmpsb
adc
ret
mov
mov
scas
mov
jmp
imul
ret
jae
and
clc
iret
jo
sbb
dec
imul
cmpsb
jp
mov
insb
notl
adc
cmp
pop
lret
lret
push
mov
lock
and
mov
pushf
sbb
mov
fmull
mov
push
adc
sub
xchg
mov
jmp
jecxz
mov
cs
inc
add
inc
add
cmp
mov
lret
dec
ss
stc
mov
outsl
inc
enter
jb
into
mov
pop
cmc
fsubrl
pop
jb
jne
xchg
and
pushf
or
and
xor
cmp
gs
daa
sub
xchg
jmp
ja
sbb
sbbl
sub
mov
inc
mov
pushw
jne
push
fmul
bound
iret
ja
cmpsl
xchg
push
repnz
sub
xor
cmp
outsl
clc
and
fnstenv
insl
mov
jecxz
int3
leave
mov
das
lods
test
inc
mov
pop
and
fstl
lcall
mov
sub
lds
jp
inc
lock
lods
sbb
popl
cmpsb
out
mov
inc
arpl
out
enter
push
dec
xchg
mov
fstl
add
fidivl
push
lock
test
scas
and
xchg
cs
cmp
mov
xlat
hlt
add
outsl
js
or
popa
and
push
pop
pusha
stc
push
xor
test
mov
lods
pop
push
xchg
cs
loope
sbb
xor
into
pop
jns
dec
notl
jnp
sbb
cltd
mov
mov
data16
test
push
int3
insl
stos
hlt
fsts
loopne
push
out
xlat
cmp
hlt
dec
sub
mov
dec
nop
sbb
stos
out
lods
lods
cmc
pop
mov
addr16
and
popf
andb
mov
mov
fisttpll
or
ret
and
xor
cmp
aad
jno
jb
mov
add
xor
and
ljmp
mov
pop
cmp
push
jmp
movsl
push
xchg
aad
call
xchg
mov
lcall
dec
mov
std
or
inc
xor
js
shrl
arpl
cmp
movsl
sub
orl
cld
fsubrs
mov
cwtl
xor
mov
adc
add
jmp
hlt
jecxz
jno
sub
gs
cmp
loop
scas
xchg
or
jecxz
push
xor
jae
or
push
sbb
mov
pop
daa
cs
aam
pop
neg
mov
call
sub
and
pushf
fiaddl
mov
out
das
dec
cmp
add
mov
test
xchg
imul
les
push
push
sub
iret
mov
pop
pusha
fmull
repz
cmp
loopne
sub
push
repnz
das
mov
fcompl
loope
ja
xor
cmp
jl
ja
das
inc
push
push
push
adc
push
ja
push
cmp
pop
mov
jae
jle
lock
cmp
out
sbb
std
mov
orl
push
in
call
out
sbb
sahf
outsl
mov
flds
or
dec
mov
mov
insb
inc
ret
jno
lea
scas
xchg
mov
adc
popa
std
xor
xchg
aam
inc
ret
mov
cltd
jbe
and
cmp
popf
call
loope
repnz
mov
mov
sbb
int3
xlat
fcomps
das
jae
sbb
xor
jbe
jmp
cmp
imull
xchg
jnp
xchg
test
je
cmp
inc
sahf
dec
bound
mov
add
fs
in
inc
pop
popf
jle
lahf
add
push
add
push
push
jle
loop
adc
fs
inc
call
jno
cld
cli
xchg
mov
push
xchg
add
xor
mov
pop
inc
dec
cmpsl
jg
sbb
iret
mov
jecxz
lret
sahf
enter
xchg
adc
fcomps
fcompl
hlt
push
pop
xor
xor
xchg
or
je
repz
pop
insb
mov
lea
scas
xchg
test
test
pop
mov
dec
lock
mov
dec
xchg
icebp
std
pop
push
cmp
push
sbb
mov
outsb
lods
into
inc
cli
insb
lahf
pop
adc
pop
xchg
out
pop
adc
mov
movsl
xor
aaa
push
and
ss
gs
mov
xlat
xor
mov
cs
outsl
fistpll
popa
jnp
gs
test
pop
xchg
fisttpl
nop
outsb
dec
movsb
loop
gs
push
loopne
jne
outsl
pop
aaa
dec
xchg
pop
stc
icebp
mov
mov
adc
push
cmc
fldl
mov
sbb
insl
out
in
outsl
mov
push
and
dec
ss
push
xor
cmp
cmpb
popf
pop
jo
test
mov
std
push
testl
cmp
and
mov
or
pop
in
inc
fdivs
movsl
adc
loope
xorb
pop
lods
cli
jge
lcall
lds
inc
insb
xor
ror
nop
fmuls
push
in
sbb
sub
sbb
rcll
ds
cmp
and
je
push
stos
push
ret
or
js,pn
imul
jge
sbb
inc
pusha
repz
and
mov
arpl
pushl
sbb
dec
rcrl
ljmp
or
test
jae
mov
xlat
push
fldt
test
popa
ret
aad
repz
out
push
mov
pop
xchg
fistpll
test
cmpsl
movsb
fildl
mov
movb
sbb
fwait
and
inc
shll
sub
and
mov
push
jecxz
pop
sub
add
mov
push
cli
imul
jmp
jo
push
lds
add
push
jo
js
les
pop
nop
sbb
pop
inc
xor
mov
xchg
mov
or
push
add
lea
fmuls
cmp
push
lahf
pop
vunpckhps
pop
int
xchg
sbb
outsl
xchg
pop
pop
inc
mov
and
out
jno
dec
testl
push
jb
mov
lcall
in
jecxz
adc
or
sbb
mov
adc
test
inc
fsubr
or
cmp
sub
lret
and
adc
cld
mov
lods
jne
mov
repz
push
xor
call
sub
jl
inc
aad
popl
aad
jns
fmuls
clc
push
sub
jbe
jg
and
inc
add
int3
jp
sbb
cmp
jno
lock
clc
out
sarl
rol
or
enter
mov
sub
mov
mov
mov
xor
add
sbb
mov
and
fs
out
loope
jb
nop
hlt
jge
jge
jle
je
mov
in
cltd
addr16
cmp
in
inc
pop
jb
lcall
jmp
add
sahf
jo
loope
pop
cwtl
fcmovb
adc
cmp
cmpsl
pop
xchg
scas
jl
inc
and
add
arpl
mov
lahf
popa
xchg
push
bound
stos
add
cmp
sub
call
in
push
dec
jae
jb
inc
jne
fisubl
aam
cli
inc
fidivrl
adc
popa
lret
jne
shlb
sbb
pop
in
xchg
jl
cmp
or
mov
ds
xor
rol
cmpl
imul
dec
xchg
xchg
and
mov
call
stc
mov
test
push
cmpsl
add
cmp
inc
inc
sbb
sbb
popf
das
fnstsw
pop
fsubrl
sub
insl
icebp
inc
jge
xchg
hlt
inc
cmpb
lock
xchg
mov
int3
xchg
mov
movsl
add
add
mov
push
sub
xor
sbb
jo
sub
outsl
and
addl
inc
nop
jmp
scas
dec
fs
mov
push
negl
xor
dec
clc
in
jno
push
in
pop
ret
mov
cmovp
dec
dec
out
pushf
or
ds
ljmp
jmp
jp
sarb
sub
hlt
sub
test
mov
cmp
mov
sub
pop
int
jecxz
mov
das
dec
lods
popa
push
cwtl
xor
lods
mov
cmc
in
es
jae
pop
push
xchg
ds
dec
ficoml
dec
mov
popa
pushf
aam
rorb
cmp
sbb
andl
jo
or
cmp
sbb
adcb
sbb
xchg
pushf
hlt
repnz
push
subb
xchg
fidivrl
push
adc
insb
jmp
imul
add
cltd
xchg
decb
xor
sub
std
inc
jge
sbb
test
cmpsb
subl
daa
push
xchg
sbb
lret
adc
les
pop
add
jnp
nop
insb
cmp
mov
inc
cmp
in
leave
daa
cmpsl
movw
cmc
inc
into
jge
ja
loop
push
mov
mov
ljmp
mov
rclb
sbb
in
retw
je
xlat
test
mov
hlt
xchg
inc
sbb
outsb
sub
cmpsl
pop
es
dec
enter
pop
or
pop
fldcw
lea
inc
dec
sti
aad
inc
std
xchg
lods
out
inc
or
pushf
push
mov
xchg
jmp
fidivl
int3
cmc
push
mov
dec
cli
or
data16
scas
or
pushf
xchg
test
sub
dec
or
insl
xor
dec
fbld
outsb
mov
xor
and
fisttps
fdivs
sub
fadds
int3
clc
pop
dec
jp
not
mov
iret
in
mov
jl
xlat
xor
test
mov
out
xor
pop
icebp
xchg
jg
inc
mov
cmp
negl
ficoms
fdivrs
ja
adc
in
or
mov
dec
enter
lods
push
add
fstpt
in
jge
inc
mov
outsb
push
cwtl
fs
sbb
lret
cmp
inc
lock
filds
sbb
test
repnz
inc
ljmp
xor
lret
cmpsl
xchg
insb
fsubrl
mov
repz
cli
andb
flds
adc
pop
fsubp
mov
clc
andb
inc
jae
xor
fwait
das
subb
xchg
mov
add
shrl
ja
mov
ror
cwtl
mov
shl
stos
mov
test
divl
sub
dec
inc
fisubrs
mov
inc
fs
cmpsl
fisttps
cmp
mov
sti
lcall
inc
int3
sub
adc
cmpsb
sub
lea
ret
sbb
xor
das
movsb
aas
lods
mov
push
xchg
icebp
mov
jnp
lds
xchg
add
daa
jo
adc
ret
sub
int
pop
xchg
mov
call
pop
or
push
adc
mov
xchg
add
addr16
fldcw
adc
dec
mov
out
je
test
scas
push
jp
push
loope
and
fcomps
mov
mov
xor
inc
sbb
pop
iret
or
dec
xchg
mov
fbstp
sub
in
dec
imul
push
sub
adc
mov
mov
xchg
add
mov
scas
and
fiadds
sbbl
sbb
sbb
pop
push
xchg
mov
movsl
adc
jg
cmp
pop
ss
mov
loop
push
pop
mov
psrlw
jmp
aaa
push
sub
je
imul
jns
add
sarb
push
fst
pop
mov
xor
pop
es
xacquire
xor
adc
add
push
xchg
arpl
or
xchg
add
std
pop
lcall
jp
push
into
pusha
addl
pushl
jmp
out
fsubr
inc
dec
xor
cmp
fwait
int
inc
mov
jae
mov
push
push
and
loope
stc
jbe
orb
add
out
push
popf
and
testl
add
es
sbb
cltd
cmp
aas
mov
pop
dec
xor
add
dec
xor
sbb
cmpsb
jecxz
ficoms
lret
inc
imul
mov
push
and
add
test
add
lods
xchg
imull
and
aam
add
xchg
push
lock
std
clc
or
sub
clc
idivb
lods
cmp
dec
fsubrs
and
std
ja
sahf
sub
ss
dec
push
or
iret
aas
es
daa
jb
add
jnp
sub
es
jae
xchg
adc
insl
pop
jae
push
daa
dec
es
jecxz
loopne
adc
push
push
movups
sbb
std
inc
mov
push
popa
rcrb
pop
push
push
mov
test
pop
movsl
jecxz
js
std
mov
pop
daa
cltd
cmp
lcall
jo
mov
sbb
add
andl
pop
xchg
push
pop
js
add
sub
push
test
fs
cmp
and
aam
jge
pushf
mov
rclb
cmp
adc
jmp
call
add
adc
movaps
jno
fmull
sbb
addl
subb
inc
mov
cmp
jne
mov
sbb
sbb
mov
loope
ljmp
and
out
or
add
mov
mov
lea
cld
dec
data16
inc
push
popa
test
imul
jns
or
pop
sti
mov
ja
jle
adc
mov
xchg
mov
jo
ret
gs
fistps
jmp
negb
adc
pop
push
xor
loopne
in
aaa
pop
push
inc
mov
jo
cmpsb
ljmp
add
repnz
cmp
mov
and
data16
mov
inc
icebp
stc
xchg
jae
sbb
mov
sub
push
adc
imul
pop
cmpsl
adc
addr16
insb
adc
or
ret
in
cmpsb
sarl
fsubrl
fistpll
dec
fsubp
outsb
push
jmp
stc
sub
out
fldt
mov
push
cmp
cli
jo
cmp
filds
lcall
mov
adc
ja
ror
fdiv
int3
pop
fildl
fmull
sub
add
pushf
sbb
jnp
pop
xor
cmp
xchg
xor
cmp
jae
es
inc
clc
sbb
adc
mov
pop
rcll
decl
or
cs
shll
sbb
dec
icebp
xor
adcb
out
jb
jp
pop
or
fbstp
inc
outsb
xor
pop
mov
shl
or
repnz
sbb
pushf
andl
cmp
or
jns
iret
cltd
and
mov
adc
sub
jnp
lret
or
pushf
addl
sbb
out
mov
jecxz
jns
dec
aad
dec
add
sub
div
out
and
mov
lds
popf
add
mov
ljmp
pop
push
dec
jns
mov
addb
xchg
push
mov
je
inc
ljmp
pop
loop
test
mov
push
fcmovu
jg
xorb
sub
orl
sbb
int3
std
rorl
inc
notb
pushf
lods
add
jno
insl
mov
mov
fadds
inc
stos
xlat
mov
lea
mov
fstpl
pop
outsl
lcall
or
mov
iret
jbe
and
popa
xor
movsl
out
fsubrl
outsb
adc
sub
add
adc
sarl
rorl
leave
and
mov
push
int
cmp
cld
mov
test
and
mov
dec
pop
mov
cmp
xor
jp
mov
shlb
in
sahf
xchg
jb
jb
mov
or
out
aas
add
out
pop
daa
cwtl
cmp
inc
pop
loopne
mov
je,pn
xor
mov
mov
movsb
push
stc
aas
in
dec
sub
sbb
sbb
addl
std
push
das
push
sbb
test
pop
movsb
jo
out
and
loope
jb
dec
jp
mov
jle
sub
xchg
nop
stc
in
loopne
stc
popa
clc
inc
xor
push
data16
cmp
lea
add
and
xor
movsb
fdivrl
pusha
xor
push
mov
mov
jbe
ljmp
or
sub
xor
or
cmpsl
imulb
or
aas
ret
aam
sub
push
mov
and
xor
mul
xchg
mov
mov
lock
or
xchg
mov
xor
icebp
mov
cmp
std
and
add
sbbl
cmp
push
rcrl
frstor
enter
leave
xchg
test
dec
divl
push
hlt
pushf
jno
enter
sub
xchg
mov
pop
adc
and
mov
pop
std
cmp
mov
xor
imul
jge
lods
and
jmp
movsl
sbb
test
loop
mov
cld
xchg
and
mov
loope
dec
jge
enter
cmp
inc
cmc
push
fs
push
mov
lcall
sub
jbe
sub
in
push
mov
sub
or
insl
jb
out
or
outsl
daa
bound
jb
add
sub
lret
xchg
stos
sti
or
jne
jmp
dec
ss
cmp
xor
pop
sbb
xor
mov
mov
sti
and
pop
jg,pn
fdiv
stos
cmp
cmp
add
pop
sbb
add
adc
jno
aas
mov
fwait
and
mov
sub
sub
cltd
aam
adc
mov
lcall
jmp
mov
jge
add
adc
mov
pop
repnz
pop
imul
into
ficomps
xlat
xor
sbb
mov
int3
inc
aas
je
out
sub
xchg
cltd
imul
mov
jecxz
stos
mov
fstl
mov
push
popf
scas
fidivrs
cmpsl
unpckhps
or
push
pop
jnp
dec
insl
test
jge
sbb
lret
push
sbb
dec
aad
sbb
mov
roll
or
mov
repz
mov
js
pushf
das
pop
xor
mov
xor
arpl
pop
inc
pop
ds
push
mov
jmp
mov
xor
or
xor
gs
fsts
dec
fwait
outsb
jne
dec
orl
out
jbe
repnz
ficompl
les
rorb
mov
xor
out
xor
adcb
stos
test
outsb
xor
adc
data16
test
hlt
movsb
insb
mov
popf
ficoms
popf
leave
sub
pop
test
jae
fstpl
jp
sbb
mov
or
test
xchg
insb
fistps
mov
lods
adc
push
mov
jmp
pop
pop
push
mov
ret
mov
xchg
lock
push
cmp
pop
inc
or
mov
add
xchg
inc
add
jne
add
jo
xchg
mov
xchg
fs
fcoml
sti
sbb
or
arpl
orb
aaa
inc
rclb
insb
loopne
ss
pop
out
mov
ljmp
sub
inc
or
lahf
in
ja
xor
aaa
sub
in
sub
aad
sbb
pushl
aam
pop
fisttpll
loopne
xor
scas
roll
xor
aaa
adc
adc
inc
sbb
std
out
mov
fstpl
cs
pop
xchg
pop
jecxz
ds
in
mov
pop
mov
xchg
dec
je
loopew
enter
dec
push
test
push
mov
push
loop
insl
xchg
lea
push
shl
stos
mov
push
dec
dec
adc
inc
test
loopne
add
pop
jae
aas
mov
daa
pop
into
xchg
sub
daa
imul
jge
xchg
adcb
int
xchg
lock
xchg
enter
mov
movsb
mov
mov
cmpsl
inc
jo
and
push
add
adc
dec
outsl
clc
int3
xchg
jl
sub
cmp
pusha
sub
jns
in
loop
es
leave
and
ret
mov
loope
jno
sub
in
mov
lods
movsb
dec
or
data16
mov
jnp
dec
imul
pop
aaa
mov
inc
ljmp
xor
int
jne
add
pop
mov
outsl
jns
mov
fsubr
sbb
aas
or
xchg
mov
cli
mov
nop
mov
lahf
sub
adc
pushf
imul
xorb
xor
jo
sub
bound
ret
sbb
fmuls
cmpsl
dec
adc
int3
loope
xchg
fisttps
push
test
fcmovnu
mov
jcxz
cmpsl
scas
mov
clc
mov
adc
mov
dec
pop
sub
jg
add
xchg
cli
or
xchg
mov
inc
clc
pop
lret
into
fidivl
inc
mov
lods
and
cmp
sbb
daa
es
hlt
mov
arpl
push
fcompl
sbb
sub
and
cli
mov
xchg
mov
push
aam
clc
push
sbb
addr16
push
sub
adc
cltd
fdivrs
inc
repz
inc
insl
lds
xchg
sbb
fimull
lret
out
mov
or
notb
jne
or
loop
outsb
mov
test
fadds
mov
pop
fbstp
mov
fisubl
xchg
xchg
mov
cld
jp
push
inc
cmc
add
aad
xorb
hlt
cmpsl
mov
test
mov
inc
adc
and
adc
sub
std
lock
popf
sbb
mov
ja
outsl
jg
or
aas
das
nop
dec
cmp
xor
mov
leave
sbb
popf
outsl
mov
add
inc
xor
jl
jmp
imul
and
sbb
test
or
pusha
pop
pop
in
sbbb
adc
or
into
gs
rcrl
or
in
push
daa
jo
push
xchg
adc
sub
fists
lea
jmp
sub
decl
xor
lock
or
and
mov
fs
jmp
popf
cmp
cld
movsl
fmulp
into
mov
cmp
lahf
aam
jge
adc
sub
in
jns
jbe
movsl
addl
shll
std
and
sbb
sbb
inc
ret
pop
imul
xlat
in
movsb
mov
imul
out
fcompl
out
sub
aas
imul
xchg
mov
cltd
stos
test
inc
or
push
scas
mov
push
or
xchg
hlt
addr16
jp
in
mov
sbb
loopne
out
in
jno
jl
xchg
inc
aas
mov
test
sbbl
aaa
jecxz
inc
jmp
clc
cwtl
int3
sahf
arpl
jae
js
or
push
push
dec
idivb
mov
cmpsb
dec
loop
movsl
sub
xchg
and
dec
gs
fsubl
je
repz
inc
dec
test
aas
push
dec
mov
je
mov
icebp
stos
mov
or
adc
lret
iret
shlb
dec
lea
inc
std
dec
inc
or
testb
pop
jl
pop
add
dec
mov
into
jb
repz
jne
xchg
push
sti
sbb
push
or
nop
pop
js
andl
pushf
xchg
push
mov
icebp
jl
push
xchg
mov
dec
inc
rolb
mov
insl
jbe
inc
aaa
sbb
add
adc
push
cmp
push
pop
inc
adc
movsl
xchg
mov
xchg
imul
jns
inc
and
mov
xchg
and
aaa
xchg
repz
in
jns
inc
enter
jmp
ss
into
mov
cltd
aad
pop
jmp
adc
add
lods
sbb
push
les
incl
addl
lahf
cmc
outsb
roll
xor
movsl
shrd
add
or
sub
mov
out
test
add
push
ja
int3
sbb
mov
adc
int3
cmp
xchg
or
dec
icebp
jge
lods
jo
mov
push
dec
sub
shrl
test
mov
loop
loope
sbb
cmpl
inc
mov
imul
cmp
and
mov
out
mov
xchg
call
and
push
xchg
dec
cwtl
xchg
enter
push
sbb
ret
adc
testb
jne
pushf
mov
push
pop
cmp
sbb
jns
imulb
jmp
aaa
scas
mov
add
cmp
xchg
in
sbb
adc
aad
gs
mov
leave
and
fnsave
xchg
inc
sub
shl
jp
fchs
lcall
addr16
pop
jp
pop
mov
out
pop
and
rol
dec
dec
jg
sahf
mov
add
loopne
sbb
in
mov
sub
push
divb
icebp
outsb
add
xchg
sub
addb
xchg
ret
sub
mov
icebp
jmp
cmc
dec
incl
insl
pop
lcall
jl
mov
mov
cmpsb
popa
push
enter
or
mov
pop
mov
jg
jb
lahf
inc
lock
stos
xor
sahf
pop
orb
scas
call
xor
jns
or
mov
or
adc
leave
mov
or
sbb
pop
pop
mov
lcall
int
sahf
add
sbb
cmc
ja
mov
insl
fisubrl
mov
inc
pop
mov
xchg
mov
mov
or
push
rcrb
cld
cs
push
sahf
in
js
add
xor
mov
fwait
andb
dec
imul
push
push
pop
frstor
push
jg
fmuls
enter
fwait
xchg
mov
ljmp
lock
mov
mov
mov
repz
ja
xor
fidivl
daa
filds
xor
es
mov
and
add
add
adc
aas
out
neg
jecxz
cltd
pop
es
sbb
sub
in
sbb
int3
fincstp
test
std
jle
dec
cmpsb
mov
or
call
loope
cmpl
clc
lds
push
dec
addl
cmp
dec
add
add
les
ljmp
mov
ret
icebp
xchg
shlb
cli
mov
dec
cli
adcl
pop
in
lcall
xor
xorl
mov
jl
shr
cltd
popf
dec
sarb
dec
scas
mov
mov
sbb
aaa
popa
jp
sbb
push
fmull
cmp
dec
dec
jbe
lods
imul
ret
test
jecxz
fmulp
fndisi(8087
and
iret
pop
daa
pop
push
ja
and
into
popf
lahf
push
ds
adc
dec
cltd
jle
adc
aad
roll
jp
fs
mov
cmpsl
mov
and
push
cmp
and
loopne
sahf
xor
dec
inc
lahf
mov
jg
in
nop
test
push
insb
int3
fcomp
divl
push
pop
cmp
ds
jbe
fmuls
sub
aas
loopne
int3
mov
les
not
mov
stos
lea
mov
incb
stc
jbe
movsl
fnstenv
lods
xchg
mov
pop
push
push
push
sub
mov
or
push
ja
popf
imul
jge
sarl
arpl
xor
testb
sub
stc
fcmovbe
xor
push
or
xlat
subb
das
test
mov
ljmp
out
out
and
sti
loopne
mov
arpl
popf
sbb
inc
scas
push
sahf
and
xchg
cmp
rolb
in
cmp
adc
test
je
js
xchg
dec
in
adc
mov
mov
or
inc
dec
adc
ds
jne
mov
xchg
mov
sub
dec
inc
add
das
leave
cmpsb
test
in
mov
mov
and
mov
pop
mov
out
mov
mov
mov
and
fimull
inc
xchg
into
outsl
adc
pop
fcomi
pop
xchg
loopne
add
mov
jl
sarl
cmp
sub
jns
daa
mov
adc
sbb
sub
lea
jbe
dec
push
sbb
imul
pusha
rorb
je
adc
inc
int3
in
ficoml
pusha
pushf
pop
add
push
pop
lods
sub
lcall
xchg
inc
push
dec
inc
or
sti
scas
add
movsl
jbe
cwtl
xchg
xchg
add
pop
les
lods
xor
sbb
pop
xchg
mov
mov
out
roll
jge
insl
call
outsb
test
fs
add
addr16
or
push
xchg
fwait
outsl
adc
and
fwait
sbb
cwtl
fdiv
repnz
cmp
out
mov
shlb
cli
push
cmc
enter
js
fcmovnb
test
es
daa
in
push
lcall
pop
les
dec
call
sub
and
mov
jmp
jp,pt
and
sbb
mov
mov
xchg
jo
iret
sub
in
or
es
inc
pop
mov
mov
loope
loopne
add
ficoml
jl
push
xchg
add
rorl
push
push
stc
mov
arpl
shrl
mov
or
push
xchg
adc
and
sbb
mov
es
or
outsl
stos
cmp
xchg
sahf
xor
push
pusha
into
loopne
sbb
cmp
nop
xchg
ljmp
out
mov
or
push
pop
mov
imul
ret
idivl
sub
jl
and
jp
jmp
mov
push
aad
mov
ss
outsl
cmpsb
adc
imul
xchg
add
scas
stc
shll
mov
movsb
mov
push
jne
push
rolb
cmp
push
xlat
shll
xor
adc
movsb
imul
cmp
xchg
cmc
add
adc
dec
imul
cmp
fnsave
jmp
testl
xchg
push
test
jne
mov
push
mov
test
pop
xor
xor
test
xchg
loop
add
xchg
push
jl
pop
mov
push
jo
popf
mov
sbb
mov
pop
or
orb
jae
ljmp
clc
jp
dec
dec
aad
and
into
adc
test
sub
es
aad
sub
mov
repnz
sbb
push
inc
inc
pusha
data16
std
sbb
push
dec
sbb
jae
ds
repz
push
leave
mov
lock
cmp
and
out
mov
and
roll
das
mov
lods
sbb
hlt
test
or
dec
aam
sub
cmpsl
xlat
mov
movsb
in
cs
dec
cmpsl
sbb
push
push
fistpl
adc
std
mov
jne
mov
mov
inc
push
test
add
cmp
cmp
push
mov
mov
jbe
out
xor
dec
jno
mov
dec
stos
mov
hlt
inc
mov
push
and
lahf
pop
jb
xor
mov
iret
daa
jl
in
fiadds
push
stc
int
int
jb
aas
jecxz
pop
jbe
sahf
push
insb
pop
jno
jb
ds
cli
pusha
ss
arpl
mov
sbb
js
dec
mov
notb
mov
loopne,pt
mov
aad
fmuls
sbb
sub
idivl
loop
fidivrs
inc
xchg
nop
fists
and
dec
aam
mov
arpl
repz
jge
fs
sbbl
loopnew
push
mov
jle
xchg
call
or
push
mov
das
out
nop
btr
rcll
notb
iret
and
call
imul
data16
xor
ja
mov
add
push
inc
inc
sub
out
js
addl
das
or
xchg
stc
mov
push
sbb
dec
jns
mov
adc
or
mov
sbbl
gs
or
push
stc
xchg
cwtl
jo
mov
push
and
sbb
not
por
aaa
jge
fisubl
popf
outsb
cs
xchg
sarb
mov
test
and
jns
test
jl
and
inc
xor
fcom
jp
popf
pop
ljmp
cmp
mov
sti
pushf
lock
sahf
xor
imul
pop
xor
stos
aaa
mov
test
dec
shrb
cld
xor
into
test
adc
cmp
dec
shlb
sbb
std
push
jecxz
ljmp
mov
lcall
repnz
mov
dec
rorl
inc
sub
add
xchg
push
xlat
dec
je
xor
stc
fdivrs
push
sbb
je
dec
pop
out
xor
mov
clc
sbb
xor
dec
inc
imul
pop
test
out
and
pushf
add
iret
stc
xor
inc
adc
cmp
icebp
mov
push
pop
jge,pn
sbb
dec
xchg
add
insb
xlat
arpl
fnsave
dec
xchg
rclb
popa
arpl
mull
pusha
adc
add
and
sti
mov
inc
dec
lret
xor
out
in
lock
mov
out
pop
xor
stos
pop
cmc
push
movsb
mov
ds
lods
xorl
add
nop
sahf
cmp
and
pop
mov
jp
inc
js
daa
xchg
call
pop
pop
sti
fs
lgs
mov
adc
lock
lea
mov
lods
insb
mov
lahf
movsb
cmpsl
jb
fs
out
inc
sbb
and
leave
loopne
mov
or
or
xor
mov
mov
push
xchg
push
xor
fldt
std
adc
sbb
das
mov
mov
nop
shlb
aas
push
rcr
mov
int3
data16
pop
lock
inc
adc
or
icebp
dec
push
dec
cltd
mov
mov
jns
stos
or
inc
bound
or
push
pop
int
adc
xchg
arpl
mov
jns
pop
cmpsl
sbb
jns
push
jmp
fildll
aaa
aas
out
lods
out
mov
lds
test
adc
and
in
shrl
andb
xorl
stos
in
nop
daa
pop
outsb
cs
adc
cmp
adc
lds
and
push
shlb
pop
jl
pushw
xchg
mov
outsl
jmp
pusha
adc
mov
or
inc
movsb
mov
sbbb
pop
xor
or
in
adc
sahf
sbb
outsl
adc
adc
push
push
pop
and
pop
and
inc
inc
sub
fbstp
je
jecxz
xor
pop
addr16
jg
add
add
iret
cmp
cs
dec
aas
and
mov
ds
mov
cmp
dec
scas
shlb
ret
sbb
mov
sub
sub
inc
xchg
xchg
jle
push
bound
call
in
fwait
sbb
mov
jl
fisttpll
icebp
and
push
aas
xchg
jmp
cmpsb
jno
fcos
mov
sub
xchg
insl
loopne
in
push
mov
xor
in
int
insb
ret
mov
add
test
out
and
roll
imul
sub
mov
lods
hlt
out
pop
dec
cmp
cmc
lret
xchg
mov
lcall
notl
jae
and
mov
test
jecxz
or
loop
repnz
mov
jl
leave
inc
jge
aam
pop
pop
or
cltd
pop
scas
xchg
add
stc
sbb
cmp
ret
movsb
icebp
pushf
aam
mov
and
lcall
iret
ja
mov
pop
roll
lock
jno
mov
stos
enter
pop
add
mov
test
mov
jne
in
cwtl
lods
shll
sub
ljmp
scas
sbb
js
mov
cwtl
push
mov
int
aam
mov
iret
rcrl
leave
rep
rcrl
xor
ficoms
mov
mov
dec
test
popa
je
jg
push
dec
arpl
mov
adcl
cmp
push
mov
cmc
inc
dec
xor
mov
nop
sub
push
push
out
push
jl
dec
pop
stos
mov
lahf
pop
ds
ja
mov
in
dec
mov
and
sbb
subb
sub
cwtl
repz
mov
je
call
xor
ror
push
rolb
dec
mov
pop
sbb
fnsave
ja
arpl
pop
nop
mov
jmp
je
dec
mov
call
push
mov
xor
mov
cmp
fisttps
shl
in
cmp
pusha
enter
fisubl
jle
fnstenv
push
clc
lcall
int3
lods
mov
out
jl
test
xlat
jns
ja
shll
sbb
lock
ja
mov
movd
cmpsl
mov
enter
pop
pop
cmc
arpl
scas
inc
shll
dec
aas
xchg
xorb
xor
test
lret
xchg
sbb
jnp
lock
sbb
rclb
push
mov
leave
dec
jae
loope
mov
aam
add
jp
sbb
sbb
fsubl
loopne
fs
xor
adc
int
mov
imul
adc
shrb
gs
loope
mov
fs
repnz
push
repnz
inc
sbb
push
xchg
mov
test
push
fsubrs
shrb
push
push
mov
jp
and
sub
adc
lret
adc
in
out
cs
sub
dec
cmp
hlt
jmp
fwait
out
iret
filds
mov
push
push
or
lock
mov
cmp
and
aam
data16
fildl
andb
test
and
gs
arpl
and
add
movsl
add
dec
pop
mov
stos
lcall
pop
outsb
inc
lret
stc
cmp
inc
push
lea
pop
shll
xor
push
js
test
loop
pop
jnp
sub
sarl
lahf
xchg
cmp
dec
pop
or
sub
arpl
mov
jns
sub
cli
lods
add
dec
enter
mov
sti
dec
adc
dec
xor
jmp
xor
lods
in
insl
decb
xor
add
xor
jp
mov
stos
inc
rolb
pop
or
xchg
or
into
push
in
jmp
sbb
out
int3
xorl
jne
pop
dec
inc
scas
fstpt
pop
mov
fbld
sub
or
bound
xor
xchg
insb
out
dec
mov
jmp
mov
inc
or
rclb
xor
jb
cmp
sbb
pushf
add
add
cmp
popa
mov
xlat
jns
mov
test
shrb
or
mov
jle
daa
cmp
add
movsb
ljmp
xor
xor
pop
data16
pop
inc
sbb
or
lea
add
mov
adc
jae
dec
insb
gs
das
pusha
repnz
js
jg
lcall
add
add
and
jb
pop
in
inc
inc
jne
test
adc
dec
xor
mov
iret
push
pop
add
in
cmc
inc
sbb
cmp
loopne
prefetch
test
cmpl
push
fisttpl
cmp
rclb
mov
xor
jbe
mov
dec
loop
xchg
ret
and
mov
cs
add
gs
sub
sub
addr16
dec
adc
pop
mov
sub
daa
and
lahf
insl
daa
push
cmc
in
mov
mov
pop
das
adcb
hlt
in
pop
xchg
dec
std
int3
mov
mov
scas
lods
mov
pop
lahf
ss
outsb
add
adc
mov
cmp
imul
js
js
outsl
push
sbb
addl
lds
dec
fadd
into
out
fldt
mov
out
mov
in
pop
xchg
ret
push
icebp
jmp
scas
add
lcall
add
ljmp
jp
dec
adc
xor
loop
sub
js
mov
cmc
aad
xlat
cmp
pushl
stos
mov
adc
xor
mov
mov
lds
xchg
in
jae
and
shlb
mov
in
lods
dec
in
sub
add
push
mov
mov
ja
push
and
dec
jmp
and
inc
sbb
rol
push
fisubl
mov
loope
jp
sbb
mov
cs
stos
or
test
in
adc
jp
pop
pop
mov
fisttpll
pop
shll
cmpl
or
stos
sbb
lret
arpl
push
lods
inc
cmpsb
add
push
stc
sahf
insl
test
test
js
cmp
test
mov
out
mov
pusha
jecxz
testb
add
xchg
repnz
jbe
cmp
je
pushl
js
int
inc
cmp
shll
filds
popa
fistpl
add
push
add
cmc
inc
jmp
pop
cs
frstor
fwait
stos
mov
pop
dec
lahf
aad
stc
in
les
imul
jne
sub
adc
insb
add
sub
dec
xchg
daa
shll
sahf
loop
aas
pop
inc
sbb
je
leave
cmpsb
cmp
ret
sub
hlt
and
in
cmp
mov
or
gs
xor
loope
jno
jne
or
enter
or
cld
ss
bound
sti
xor
in
adcb
adc
or
push
jle
in
cmp
xchg
mov
or
pop
pop
inc
leave
fistps
add
mov
incl
outsb
dec
stos
mov
js
fs
lods
icebp
jne
mov
cmpsl
jle
xor
insl
or
mov
dec
xorb
pop
andl
out
xor
loope
or
outsb
pop
or
jmp
es
test
pop
fs
jecxz
out
popa
gs
mov
js
das
pop
ffree
inc
jne
fwait
and
loope
mov
mov
stos
xchg
jmp
fdiv
lock
mov
mov
mov
inc
icebp
fwait
scas
pop
mov
outsl
iret
shl
stc
lea
negl
out
add
arpl
mov
push
cmp
cmp
repz
ljmp
ja
mov
sub
inc
outsl
cmp
scas
push
sub
sbbb
cmp
out
jno
mov
andb
rol
icebp
xchg
cmpsb
push
xor
mov
imulb
rorl
rcrl
mov
add
testb
insb
mov
pop
inc
aas
sbb
int3
inc
pop
adc
movsb
cmc
int
icebp
fsubrs
je
jg
jne
dec
dec
mov
mov
mov
xor
cmc
stos
data16
das
outsb
sbb
jmp
xor
test
scas
push
cli
pop
enter
dec
lcall
adc
out
dec
cmpsb
rorb
subb
xor
and
pop
mov
mov
dec
pop
iret
xchg
xchg
ljmp
add
adc
xor
pop
jge
repz
stos
jmp
and
adc
jle
jg
js
mov
mov
cmpl
push
leave
into
sbb
sbb
hlt
ja
sbb
push
mov
mov
sbb
ljmp
sbbl
inc
push
repz
or
pop
stos
sub
add
outsb
outsb
adc
das
mov
insl
xchg
ljmp
push
fdivs
aam
push
insl
test
or
jmp
fs
mov
sbb
adc
ffreep
dec
pop
mov
or
or
in
repnz
and
mov
cmpb
inc
pop
cmp
addr16
shrb
in
fs
or
cltd
lds
lcall
jb
outsb
inc
inc
sub
fmul
add
cs
dec
jo
ja
rclb
repz
cmp
push
or
sbb
mov
pop
lds
push
mov
xchg
cs
rcll
lret
imul
cmc
push
repnz
fnstsw
gs
mov
daa
iret
stos
add
pop
int3
rcl
js
xchg
or
xlat
or
dec
inc
imul
ss
shll
mov
inc
scas
pop
jp
xchg
ss
popa
loop
jmp
pop
mov
int
rclb
loope
mov
adc
sub
pop
repnz
hlt
push
shll
mov
repz
dec
and
inc
ret
push
jg
jb
es
addl
push
and
push
stos
push
lret
idiv
out
stc
xchg
inc
sbb
test
cltd
jg
neg
lcall
mov
and
pushf
adc
and
pop
jnp
adc
repnz
lods
fs
push
daa
fbstp
repz
dec
mov
loop
adc
jmp
xchg
push
mov
jb
jbe
jecxz
cmp
data16
adc
repz
add
aad
add
call
out
adc
stos
pushl
xchg
aad
jle
jl
test
shll
add
test
adc
rcrl
aaa
mov
mov
cwtl
jo
insb
fnstsw
aaa
outsl
sub
loope
dec
adc
xchg
arpl
and
push
mov
sahf
das
in
imul
aas
mov
in
adc
pop
test
mov
out
ror
pop
push
and
ffreep
sbb
sub
loop
leave
and
cwtl
mov
pop
sbb
or
scas
push
xchg
mov
or
fcomps
push
outsl
ds
pushf
add
fwait
hlt
sbb
popf
xor
out
orl
xor
lcall
mov
fstpt
add
mov
xor
add
adc
jbe
notl
jmp
stos
shrl
and
lods
ds
popa
cltd
je
fcompl
sub
ret
or
in
mov
adc
cmp
out
mov
out
and
es
jp
pop
into
and
enter
sub
rcrb
je
adc
xchg
dec
loopne
test
jl
xchg
movsl
or
cmp
mov
push
mull
mov
enter
out
cmpsl
jno
leave
and
mov
int3
lret
push
pusha
pop
rclb
cli
push
mov
hlt
das
cli
cld
cmpsb
push
popa
jnp
out
xchg
movsl
pop
and
shrb
sbb
iret
pop
cmpsb
mov
cmp
jne
jle
test
xor
addr16
jno
loopne
ja
or
arpl
xchg
adc
cltd
iret
stos
aam
cmc
or
xlat
cmp
pop
fcoml
fwait
xor
xchg
pusha
hlt
adc
insl
nop
rcrl
ret
mov
scas
xchg
out
jnp
jnp
push
push
out
inc
enter
cltd
pop
mov
in
in
imul
movb
idivb
xor
or
call
jmp
mov
inc
mov
xlat
push
xorl
and
or
rcll
xchg
fndisi(8087
jmp
test
xor
hlt
xchg
sbb
sbb
jb
mov
repz
mov
popa
inc
je
adc
pusha
ret
insl
outsb
inc
icebp
cwtl
lcall
mov
enter
pop
xor
adc
faddl
movl
shlb
push
or
or
push
push
addb
jo
sub
push
fldcw
scas
icebp
and
mov
xor
jp
ret
hlt
or
dec
xchg
fbstp
out
add
add
js
pop
xchg
mov
inc
add
cmpsl
outsb
pop
cli
fsubs
push
testb
pushaw
sub
push
push
repnz
js
scas
ljmp
sub
icebp
inc
adcl
sbb
xor
mov
and
sarb
out
adcl
pop
push
mov
xchg
xor
aam
and
stc
add
lods
scas
fnstsw
push
mov
add
inc
xor
cmpsl
mov
or
lcall
addr16
pushf
inc
push
inc
add
stc
je
xor
sub
cmp
cmp
push
push
js
div
iret
outsl
adc
push
cltd
fidivs
dec
loopne
and
cli
and
fwait
xchg
jmp
or
pop
xor
lcall
clc
mov
jecxz
push
dec
jge
mov
push
fwait
ljmp
push
mov
sbb
mov
das
sub
scas
ljmp
jg
pop
or
aad
pop
lahf
cmp
pop
cmp
and
xor
test
xlat
shrb
cmp
push
sbb
enter
cmp
dec
inc
fmul
sbbb
sti
stos
mov
mull
mov
mov
cwtl
jb
and
iret
out
lock
sub
mov
mov
ss
xchg
stc
pop
jle
rcll
sbb
shr
xor
inc
ljmp
push
and
mov
add
dec
std
lds
jno
or
and
push
mov
js
cmp
mov
or
xchg
or
bswap
cmp
pop
pop
dec
icebp
jb
fnsave
xor
daa
rcr
idiv
in
cmpb
pushf
cmpsb
mov
nop
add
cwtl
mov
int3
lcall
mov
pop
lock
imul
leave
ss
pop
add
or
pushf
pop
cld
lock
sub
repnz
cmp
xchg
or
fcompl
pop
and
mov
stos
jbe
int3
cmp
pop
fdivs
xchg
fs
inc
xchg
das
sarl
jns
push
jmp
test
fcoml
fisttps
push
sbb
out
lret
fwait
out
jnp
mov
xchg
mov
movsb
jecxz
stos
adc
add
loop
andb
mov
inc
pushf
fwait
add
aam
pop
add
push
icebp
mov
jecxz
push
repz
das
dec
lock
cltd
cmp
test
xor
sbb
inc
imul
ja
xchg
nop
mov
fstl
shl
inc
test
shll
sbb
insl
push
les
stos
mov
mov
sub
enter
pop
mov
ss
push
out
add
mov
pop
jl
stos
mov
xchg
aaa
xor
dec
or
js
sub
das
sub
push
dec
lahf
movsb
jnp
jle
mov
je
inc
add
outsl
loop
adc
stc
into
fldenv
or
push
popa
aad
testl
arpl
test
pusha
orl
inc
imul
les
decl
jg
test
clc
pop
inc
add
jge
clc
aam
int3
push
jmp
xor
add
je
jl
sbb
jmp
pop
call
or
or
push
repnz
lea
jp
incl
mov
and
outsb
mov
cmp
mov
mov
shl
dec
add
mov
xchg
cmp
jle
filds
jecxz
push
cmp
loopne
adc
mov
cmc
push
xlat
lahf
movsl
pop
xor
mov
jmp
adc
adc
cmp
adc
dec
lret
push
not
mov
movsb
mov
jns
pop
imulb
imul
daa
movsl
mov
pop
stos
stos
scas
or
imul
pop
push
pop
or
pop
test
or
xchg
test
inc
lock
ja
sbb
push
lock
lods
mov
mov
lods
arpl
aas
iret
xchg
jl
dec
js
push
cmpsl
fwait
xor
rcl
out
bound
in
sbb
sahf
arpl
dec
js
mov
jg
mov
pop
pop
fnstenv
mov
out
sbb
xchg
lahf
scas
dec
enter
cltd
inc
lahf
xchg
add
push
pushf
add
fmuls
adc
cltd
mov
cmp
jmp
add
push
pop
or
iret
flds
fdivl
sbb
ficoms
and
lahf
mov
mov
or
or
push
lret
faddl
jo
and
dec
inc
jns
loopne
iret
or
mov
ret
cmp
pop
insl
xor
jp
movsb
pushf
inc
aam
sub
jae
call
and
aad
loopne
and
pushf
jns
sbb
and
das
out
inc
jp
es
sbb
mov
test
inc
mov
sub
mov
sti
aaa
add
popf
push
pop
sarb
gs
push
xor
jmp
popa
push
lret
pushf
pop
scas
adcl
or
imul
mov
sti
mov
push
sub
or
push
mov
xchg
mov
xor
ljmp
dec
dec
mov
ret
push
jae
ljmp
mov
popl
adc
push
js
fnstsw
adc
and
jns
or
loope
dec
movsl
push
mov
inc
push
outsl
out
jb
and
cwtl
push
in
xchg
cmpsl
mov
xor
or
ffree
cld
sbb
cmp
js
shlb
leave
pop
push
jmp
sub
sbb
std
add
pop
ret
sar
cmovo
pop
lahf
inc
daa
sbb
fbstp
dec
lods
pop
adc
fnstsw
adc
inc
mov
sbb
repz
rorl
inc
xor
je
adc
out
dec
mov
and
out
ret
cmpb
or
cmp
stos
or
xor
movsl
cmp
xor
add
movsl
lret
sbb
fstps
inc
mov
xchg
mov
call
loopne
rcll
lods
pop
out
inc
push
fs
xchg
xchg
gs
stos
popf
addr16
mov
pusha
xor
push
fidivl
movsl
cmpsl
rcrb
add
mov
dec
cli
aas
dec
and
das
cli
jo
sub
sub
sub
jp
adc
jns
je
enter
aaa
inc
sub
je
sbb
push
or
loopne
xlat
jne
xlat
mov
stos
das
popa
mov
in
fisubrl
sbb
mov
andl
lcall
inc
mov
xchg
inc
pushf
repz
mov
aad
lods
or
orb
mov
inc
loopne
movsb
lods
ljmp
push
out
rol
sbb
mul
iret
fidivl
mov
mov
popa
out
cwtl
jmp
stos
or
cld
mov
cmp
loope
sub
or
bound
insl
push
adc
cmpsb
and
lds
push
sahf
stos
mov
xlat
repnz
jnp
sbb
sarl
mov
lods
jnp
mov
push
ss
cmpsl
rorb
adc
les
insb
mov
add
push
out
inc
imul
lods
inc
fdivr
xchg
psubusb
push
stos
jno
sahf
jo
dec
adcl
shll
pop
lock
rcrb
jbe
out
scas
adc
jge
mov
inc
iret
push
mov
mov
jmp
add
sbb
and
lahf
scas
ja
icebp
jb
xor
or
push
mov
mov
jmp
scas
or
xchg
lea
clc
jmp
clc
jl
lret
sub
cmpsl
cmp
cltd
leave
pop
or
mov
or
inc
int3
dec
jae
outsl
add
mov
adc
pop
pop
std
and
xlat
mov
xchg
push
test
add
addr16
cmp
mov
jp
or
fisubs
aaa
sbb
pop
pop
cmpsb
pop
shl
ret
xchg
mov
outsb
das
stos
outsb
xor
jns
sub
jmp
dec
ds
aas
movsl
or
into
out
jecxz
xchg
imul
iret
adc
into
into
data16
out
dec
sbb
jo
pop
loop
aas
pop
call
add
cmpsl
and
dec
pop
fidivrl
dec
mov
sub
sbb
js
pop
cmp
xor
mov
fisubl
sub
pop
movsb
inc
add
fcomp
ss
cwtl
mov
pop
shll
mov
add
add
push
fsubl
dec
lahf
push
dec
cmp
movsl
mov
pop
add
mov
push
pop
int
into
cmp
pop
inc
or
jbe
pop
lahf
pop
sbb
push
mov
xchg
mov
and
cmpsb
clc
jl
ljmp
mov
adc
pop
sti
mov
hlt
stos
adc
pushf
test
push
jl
push
aas
jge
mov
cs
or
aaa
in
addr16
and
and
in
aaa
xor
mov
clc
jmp
mov
stos
aad
flds
lcall
stc
je
pushf
jb
outsl
rcl
xor
mov
pop
fistl
into
fs
out
aad
pop
jns
mov
mov
scas
out
jmp
add
adc
shlb
push
out
mov
adc
rcll
sbb
es
aas
jmp
mov
and
ss
mov
inc
rcrl
push
push
push
in
or
ror
dec
or
lods
jle
imul
hlt
cli
jb
pop
inc
test
cmp
jno
ds
fmuls
push
sbb
add
xchg
push
dec
loopne
lcall
xor
rolb
cmp
add
xor
sbb
pop
mov
js
outsl
mov
sbb
sub
push
mov
sbb
push
fstps
cmp
sbb
pop
or
xor
mov
ss
jmp
jge
mov
xor
or
orb
mov
dec
jecxz
pushf
mov
fwait
stos
pop
cli
cmp
bound
dec
shl
inc
in
mov
gs
xor
subb
inc
aad
sbb
repnz
jns
jno
scas
xchg
out
xor
adc
outsb
addr16
mov
sub
xor
enter
cli
cmp
xchg
mov
add
adc
int
popa
jae
loope
ljmp
lds
arpl
push
mov
mov
jmp
rol
lcall
xor
cmpl
sar
cmp
sbb
mov
imul
cmp
cltd
and
stos
and
shlb
jne
ljmp
push
je
lods
mov
das
push
pop
adc
push
sbb
add
mov
or
mov
mov
dec
xor
stc
jbe
xchg
inc
in
out
pop
or
xlat
push
cmpsb
cmp
test
addr16
mov
mov
jnp
xchg
outsl
cmp
jb
pop
xchg
aam
inc
add
mov
sahf
fwait
mov
mov
or
adc
ret
mov
or
insb
fisttps
je
xor
pop
divl
adc
ljmp
mov
mov
sbb
adc
adc
or
dec
push
jecxz
sub
mov
ss
adc
loope
mov
xchg
jo
dec
rcll
add
mov
fnsave
mov
out
int
and
mov
sub
or
cs
mov
xor
jg
arpl
dec
sbb
lret
int
mov
loopne
iret
cs
cmpsl
test
xchg
xchg
jnp
cs
mov
rolb
int
fnstsw
stc
mov
xlat
pop
dec
sub
pop
enter
cmpb
or
and
insb
ret
cmpsl
fdivl
fcos
andl
dec
stos
cmp
movsl
rcrb
test
loope
jmp
lods
dec
sbb
in
jmp
aam
jl
mov
insl
or
js
and
mov
sbb
mov
negb
cmc
add
es
jecxz
mov
pop
std
inc
add
and
lret
out
scas
rcll
inc
xchg
sar
mov
pop
aad
sbb
daa
imul
xchg
and
mov
cmp
mov
and
roll
adc
xchg
imul
lea
jl
int3
lret
mov
sbb
shlb
lods
sbb
nop
cli
aas
inc
mov
jae
sub
scas
faddl
push
xchg
in
push
jle
sub
xchg
xor
mov
xchg
inc
push
shll
dec
mov
pop
dec
mov
push
adc
mov
pusha
cs
jmp
das
cmp
mov
inc
xchg
repz
xchg
sahf
insl
xor
push
sbb
mov
lret
js
insl
cmp
dec
inc
leave
in
outsb
xchg
pop
mov
inc
and
add
mov
add
xchg
or
loopne
out
fcomp
lret
pop
sub
adc
xchg
iret
andl
xor
add
xchg
push
das
xchg
mov
ret
xor
push
filds
xor
xchg
fs
pushf
movl
sbb
pop
cmpb
into
cmovp
rclb
enter
out
ds
push
scas
adc
and
sbb
adc
push
inc
mov
xchg
mov
or
pusha
cld
dec
mov
in
pop
int
cli
adc
adc
cmp
frstor
fnsave
sbbl
pushf
aaa
add
mov
dec
and
nop
and
or
aas
dec
pop
test
outsl
push
lods
cmp
push
lock
bnd
pop
lea
lcall
iret
dec
sub
mov
inc
aas
xchg
enter
out
push
aad
mov
lret
lcall
push
push
les
cmp
je
jle
and
subb
in
addr16
or
insl
test
xchg
add
lahf
es
adc
aaa
das
pop
mov
and
push
cmpps
xor
lretw
mov
rcll
out
fisubrl
push
mov
repz
ds
imul
and
or
es
add
or
push
jecxz
xor
xor
mov
sub
inc
mov
xchg
daa
mov
aad
data16
insb
push
cwtl
call
orl
xchg
lock
adc
jne
fdivr
rcrb
mov
mov
stos
cmpsl
cmp
sbb
shlb
mov
push
push
push
sub
push
xor
jo
jno
lret
pop
mov
enter
add
fsubs
loop
push
dec
push
sub
in
aad
jmp
stos
ud0
mov
lcall
dec
outsl
fdiv
add
sub
adc
ljmp
lds
loopne
sysexit
sub
js
adc
pop
mov
das
xor
out
jmp
fidivrs
js
andl
jbe
cli
sti
scas
outsb
pop
xchg
inc
cmp
insl
scas
out
nop
dec
xchg
ret
jo
pop
aas
out
push
pop
into
lods
shl
xor
xchg
clc
in
sub
js
add
push
sbb
dec
das
jg
cs
xor
filds
push
dec
cwtl
test
jmp
sbb
lds
stos
adc
jge
inc
arpl
jg
mov
repnz
sub
adc
inc
mov
cli
pop
dec
lcall
lock
xchg
pop
mov
movsb
adc
pop
hlt
jno
lcall
lods
pop
mov
push
add
cmp
outsl
das
add
int3
ljmp
pop
ret
sub
iret
call
or
xor
sbb
dec
aas
dec
or
hlt
add
data16
lcall
push
push
and
or
add
xlat
inc
fwait
or
js
mov
vpsubq
les
outsb
xchg
sar
mov
push
psllw
ss
loopne
mov
jmp
xor
lock
idiv
loopne
cmpb
hlt
mov
pop
xlat
or
dec
cmp
shrb
imul
adc
pop
inc
mov
repz
pop
cmpsl
xlat
push
ds
push
lods
test
push
jae
inc
outsb
xor
xchg
stos
punpcklbw
mov
adc
lret
sbb
jg
imul
dec
pop
lret
repz
jne
sti
movsl
cs
adc
loop
jge
sbb
outsl
jns
mov
fidivrs
sbb
sub
dec
and
cld
jne
in
test
nop
jno
es
adc
lock
xor
stc
sub
popf
addr16
mov
push
das
cs
stos
mov
ja
mov
nop
ja
sbb
inc
in
shll
dec
mov
mov
or
mov
shrb
jg
mov
xor
xor
ja
test
inc
out
pop
inc
orl
addl
shll
test
push
sbb
mov
add
loop
shrl
imul
jne
or
cmp
xchg
stos
loopne
outsl
sahf
xchg
push
lock
ja
loopne
sbb
sbb
and
xchg
stos
and
fs
xchg
sbb
lret
sti
int3
fstpt
add
push
ljmp
daa
cmp
push
dec
mov
inc
mov
mov
inc
add
scas
mov
aad
adc
in
out
enter
sbbl
push
push
pop
push
add
mov
scas
cld
cmp
xor
call
or
out
lahf
int
int
repz
push
and
xlat
push
mov
pop
inc
aaa
popa
leave
sbb
pop
mov
pop
cld
sub
add
inc
leave
nop
stc
jb
outsb
cwtl
sub
clc
push
out
cltd
sti
mov
lods
and
fldenv
sub
shr
test
mov
rcll
movb
jle
clc
in
sbb
inc
xor
jg
sbb
inc
dec
icebp
xlat
icebp
sbb
push
ret
mov
jno
xor
xchg
push
dec
lahf
dec
mov
fwait
sbb
inc
cltd
mov
or
jg
jo
in
stos
push
js
cwtl
pop
enter
xchg
pop
sub
in
icebp
and
pop
ljmp
loop
std
in
xchg
out
adc
pop
in
mov
scas
cmp
inc
mov
decb
ds
mov
in
jl
jns
and
xchg
roll
push
ret
mov
pop
mov
add
inc
in
pop
pop
repz
xlat
dec
ret
outsl
xchg
jne
fistpll
pop
pop
gs
imul
addr16
lds
mov
or
std
xor
and
repz
add
push
ret
or
aas
cmp
xlat
fisttpll
cmp
lret
notl
das
jp
cmp
lret
adc
test
add
cmovs
mov
xchg
or
aad
inc
add
inc
mov
pop
test
imulb
les
addl
adcl
add
or
jbe
jne
out
lret
adc
pop
enter
imul
clc
sbb
ljmp
dec
ret
adc
jecxz
push
lods
test
jmp
push
sub
jbe
pop
sbb
das
push
pop
cmp
sahf
push
push
lcall
or
mov
arpl
arpl
cld
cld
add
repnz
add
push
xor
in
test
aaa
lcall
mov
popa
xchg
adc
mov
test
or
fsts
push
es
sub
roll
into
popa
mulb
jl
shrb
pop
cld
mov
lea
in
pop
mov
testl
lret
add
jns
imul
imul
pusha
mov
add
xor
popa
int3
outsl
cmc
loop
cltd
lock
fbld
imul
push
int
scas
imull
cmpsb
daa
lds
and
lret
cld
les
loopne
or
int3
sti
daa
lcall
push
mov
add
out
push
loopne
incl
std
testb
lock
xchg
cwtl
add
sub
sub
jecxz
int
push
sub
mov
sub
inc
pop
adc
cmp
lret
adc
test
mov
lcall
sbb
pushf
jecxz
xor
lret
out
cmpsl
sub
push
sbb
sub
lea
xchg
test
aam
pop
sub
pusha
dec
cltd
enter
adc
jecxz
pop
shrb
fdivrl
cmp
adc
in
scas
jb
or
sbb
dec
nopl
sub
inc
or
das
mov
push
push
frstor
cs
jmp
push
jb
sub
push
js
dec
inc
pusha
daa
mov
mov
and
and
dec
lcall
adc
test
insl
stos
stos
pop
add
cmp
lret
jmp
in
xor
xchg
jl
test
push
popf
fdivrl
out
jle
jae
mov
inc
mov
imul
mov
stos
inc
sahf
data16
sub
cmpsb
loop
outsl
push
repz
cmp
push
test
pop
stos
adc
insl
enter
mov
adc
lea
stos
xchg
push
xlat
jmp
mov
aad
and
lcall
jmp
jns
cs
stc
push
mov
jae
lods
push
popa
es
addr16
pushl
movsb
aam
sub
data16
xor
jmp
pop
les
movsb
insb
inc
shll
movsl
xor
push
jnp
or
lret
scas
jmp
push
cmp
mov
not
and
frstor
cmpsl
cs
or
push
fwait
mov
les
mov
adc
shl
out
xchg
pop
xchg
imul
or
cmp
subb
loope
mov
sahf
mov
pushf
out
pop
notl
push
stc
sub
push
insl
out
cwtl
mov
mov
and
nop
jno
add
xlat
push
jo
xor
arpl
fs
popa
mov
bnd
fisubrl
subb
xor
pusha
je
or
mov
shlb
jbe
rorl
pop
xor
mov
daa
fildl
jecxz
int3
jge
xchg
xor
jp
jge
jp
mov
pop
shll
aas
sbb
es
pushf
orb
clc
pop
mov
inc
xchg
or
sub
dec
frstor
mov
or
cmc
push
std
bound
sub
jg
movsb
into
stos
fnstcw
sbb
mov
sub
imul
inc
bound
push
movb
idiv
loop
jl
adc
jge
and
or
lea
push
fsubrl
fdivp
stos
stos
pop
int3
xor
scas
sub
imul
out
pop
out
pop
push
jp
stos
sbb
jg
nop
dec
gs
push
dec
jbe
fwait
lds
cmp
cmp
rorl
dec
clc
jmp
pop
out
insb
mov
pusha
add
adc
cmp
icebp
aad
mov
and
mov
ss
scas
out
adc
jecxz
frstor
out
fs
pushf
nop
gs
sub
jb
cmp
mov
ja
sti
jg
sub
pop
mov
mov
mov
mov
ret
push
adcl
rcrb
jb
cmc
push
cmpsb
dec
pop
fsubl
push
insb
jecxz
and
pop
ret
push
pushf
mov
xchg
cmc
in
and
popa
stos
sub
ljmp
shlb
adc
sub
sub
dec
int
cmp
add
xchg
fwait
adc
adc
testb
clc
cmp
xchg
leave
xchg
cs
jns
rol
jp
sub
mov
pop
mov
xchg
fdivl
and
lahf
xchg
push
loop
idiv
mov
sbb
movsl
sbb
mov
fcompl
fmull
cli
mov
das
and
nop
xor
inc
sub
mov
outsb
fs
lcall
out
cmp
es
scas
movsb
xchg
add
enter
mov
and
push
xchg
inc
mov
xchg
int
push
test
add
pop
xchg
jmp
fcoms
cmc
and
or
int3
call
fstpt
imul
lods
push
pushf
mov
cmp
xor
stos
nop
xchg
es
and
mov
jecxz
push
notl
call
jecxz
stc
and
stos
inc
push
mov
jo
mov
cwtl
adc
fdivs
daa
or
in
loopne,pt
outsb
jl
loope
pop
aas
xor
and
cmpsb
cmp
aas
popa
out
xor
push
gs
das
js
out
ljmp
sti
repz
fildll
jnp
mov
mov
mov
mov
mov
hlt
lea
sbb
mov
aaa
jno
mov
pop
cmc
cmpsl
ja
movsl
lds
sbb
inc
test
xor
lods
jb
outsl
mov
incl
push
or
inc
or
sbb
bound
movsb
sbb
ret
les
and
movsb
pushf
push
pop
xchg
cmp
push
push
ret
mov
jle
jg
cmp
leave
daa
test
xor
movsb
rcll
lods
lret
ret
pop
add
test
jae
sahf
mov
mov
fwait
jp
pop
cmp
fld
shll
int3
pop
or
or
cs
jne
mov
nop
addl
dec
cltd
pop
cltd
clc
sbb
mov
test
add
pop
leave
loop
jp
sub
mov
rcpps
rcll
inc
sbbb
lea
xchg
ja
and
sub
cli
mov
mov
loop
jae
xor
js
test
repnz
jo
fsub
inc
mov
out
sarb
daa
fcmovbe
in
add
sub
jnp
lret
xor
mov
ret
popf
mov
adc
mov
dec
aam
inc
and
into
add
lds
add
movsb
push
rorb
push
clc
into
xchg
sub
mov
aam
push
int
sub
pushf
push
in
jae
fsubs
jns
inc
mov
adc
mov
jb
mov
stos
dec
in
add
xchg
sarb
decl
lods
mov
fists
pop
push
and
fnstsw
std
mov
test
leave
mov
mov
movsb
jl
movsb
shlb
addb
cs
cmp
xchg
or
je
xchg
pop
out
sub
andnps
stos
stos
inc
jle
mov
inc
pop
dec
mov
les
mov
push
fstl
js
push
hlt
xchg
in
dec
sbb
adc
les
test
es
xchg
add
notb
push
repnz
imulb
cmp
movsl
jnp
sar
into
stos
xchg
lds
or
icebp
pop
adc
popa
into
lock
or
shl
insb
push
jo
pop
jmp
adc
sub
ficompl
jle
add
gs
push
pop
or
mov
cmp
inc
pop
repnz
sbb
sub
je
loope
je
pop
sbb
mov
popa
or
mulb
add
shlb
and
mov
jns
in
movsb
gs
pushf
fs
dec
mov
aad
movups
test
jmp
cmpb
xchg
pop
mov
mov
jo
std
je
aaa
lods
add
cmpsb
add
insb
inc
js
mov
idivl
dec
leave
pop
js
mov
int
cmp
repz
cwtl
cmp
aam
mov
int
lret
dec
xor
adc
jle
mov
inc
inc
ljmp
xchg
and
add
pop
mov
or
inc
mov
mov
lret
xor
std
mov
inc
mov
aaa
mov
inc
sub
sbb
jg
je
push
mov
mov
mov
lret
iret
sbb
jmp
repnz
jmp
mov
xchg
xor
shlb
cmc
and
mov
sub
push
sbb
fistps
repz
xchg
jle
call
mov
adc
pop
lret
lret
pop
ror
mov
and
push
lcall
outsb
mov
hlt
fcoms
sub
jmp
mov
jne
out
add
jnp
aas
ds
rcrl
enter
adcl
lret
sbb
pop
jns
xchg
cmp
cmp
mov
push
or
inc
xchg
test
mov
dec
pushf
dec
fdivrs
cli
inc
out
cmp
ret
fcmove
fisubrs
or
les
xchg
and
stos
in
jnp
mov
inc
sahf
cmpsb
mov
xor
or
mov
out
add
ret
dec
aad
aad
inc
jge
repnz
addr16
movsl
pop
repz
push
jp
paddusw
add
fmuls
addr16
xor
cltd
stos
cmp
mov
mov
lret
pop
fdivs
dec
push
fisubl
cmp
push
push
pusha
fldl
popf
bound
add
push
leave
cmp
nop
ficoms
inc
aad
lock
in
and
es
dec
sahf
fiaddl
mov
jnp
xchg
dec
jbe
jnp
pop
add
sbb
mov
add
sub
outsb
dec
jb
repz
dec
arpl
jae
imul
sub
fadds
fwait
jns
int3
adc
and
jecxz
divl
mov
lahf
xchg
lea
and
lds
fincstp
out
cmp
rclb
mov
xchg
out
lcall
repnz
scas
sbb
arpl
dec
mov
fsubrs
adcb
subb
xor
xor
or
test
or
mulb
push
sub
add
push
cltd
repnz
sahf
sbb
les
lods
xchg
movsl
int
lods
sti
imul
shlb
xor
stos
lds
imul
fcmovnb
movsl
jp
and
lods
fdivr
add
ret
repz
enter
sbb
movb
push
xor
push
adcb
fistpl
ds
popa
movsl
mov
call
adc
sub
fsts
mov
jge
cmp
fists
arpl
mov
mov
cmp
sbb
push
lea
icebp
imul
arpl
mov
cmc
push
or
fadds
xchg
lods
sbb
mov
lods
bound
pop
inc
bound
out
jg
mov
or
idiv
xchg
arpl
mov
int
cs
bound
pop
mov
jg
stos
cmp
xchg
in
popf
out
xchg
push
jnp
test
and
lock
pop
pop
dec
adc
jne
or
arpl
sbb
pop
push
mov
gs
xor
cmp
inc
ror
add
jb
push
fists
fisubs
insb
and
jge
jbe
xchg
sti
cld
cmc
inc
sbb
xlat
xchg
jno
pop
xchg
or
xor
test
jbe
add
and
pusha
cmc
mov
je
subb
sub
inc
push
sti
lret
enter
pop
push
xor
sarl
xor
sub
dec
loope
mov
cmp
adc
jae
push
jmp
push
cltd
adc
push
insl
and
lea
dec
fucomp
lret
mov
sub
jb
lahf
pop
pop
pop
les
xor
mov
outsl
sub
test
mov
xor
es
mov
jmp
jb
movsl
dec
mov
imul
push
les
sub
adc
in
xlat
imul
stc
out
adc
lret
adc
into
dec
das
push
push
mov
sbb
mov
add
dec
dec
les
cli
and
cmp
xchg
fidivl
adc
out
xchg
add
sbb
sbb
pop
xor
and
sbb
imul
cltd
sub
shll
mov
movsb
rorl
stc
mov
cld
popa
sub
adc
imul
jae
xor
xchg
dec
push
mov
xor
cmpxchg
pusha
imul
lahf
lret
call
insb
fdivrl
push
lds
aaa
pop
outsl
hlt
ja
xor
subb
push
mov
aas
mov
outsb
int
test
sub
in
iret
es
mov
add
test
cmpsl
xorl
fstl
pusha
cmc
popa
std
ficoms
jmp
stc
dec
ljmp
pop
fwait
out
or
pop
jg
push
xlat
xor
mov
mov
loope
test
add
bound
scas
xchg
xor
cs
sub
xchg
jnp
ss
mov
hlt
sub
xor
add
stos
xorb
subl
pop
es
mov
gs
fidivrs
addr16
das
popf
push
pop
xchg
repz
sub
imul
les
push
out
sti
push
sahf
jecxz
mov
and
out
xchg
scas
ss
and
test
jg
dec
fisttps
pop
push
iret
vpshlq
pop
int3
sbb
pop
aas
ficoms
cwtl
pop
div
imul
out
lea
push
cmp
int3
mov
pop
inc
mov
insb
call
in
repz
rorb
aas
repz
mov
pop
mov
ss
pop
pop
pop
andl
push
mov
pop
cltd
dec
or
dec
push
mov
or
push
cmpxchg
jp
or
pop
cld
mov
adc
cmp
xor
pop
mov
xchg
mov
fwait
fcomi
out
mov
mov
add
push
cmp
sub
and
and
push
pushw
lods
sbb
jnp
rclb
push
xchg
sub
in
cmpsl
dec
ss
xor
ret
dec
add
into
fs
movsl
std
dec
or
push
jnp
in
mov
xchg
and
das
dec
cmp
mov
mov
jp
pop
adc
scas
int
lcall
ret
pop
pushf
enter
xlat
movsb
and
andb
push
inc
mov
addb
pop
mov
shlb
lcall
cmp
lock
or
sub
dec
test
movsb
ds
xchg
mov
popf
lret
clc
pop
pop
xor
mov
dec
jb
sbb
sbb
pushf
mov
mov
cli
outsb
ror
jmp
pop
sahf
dec
sbb
bound
mov
out
mov
pop
mov
rorl
and
sub
fsub
insl
rolb
int3
inc
fwait
add
pop
jnp
dec
mov
fistps
or
inc
stos
sbb
pop
mov
cmp
outsb
sub
push
inc
insb
iret
daa
into
push
jns
mov
push
mov
cmp
jb
inc
sbb
lock
les
clc
pop
orb
mov
addr16
imul
mov
lcall
dec
inc
iret
mov
lock
outsb
fistps
pop
jne
mov
jns
jecxz
lea
in
push
sti
aad
popa
in
hlt
cld
cmc
push
dec
dec
xor
bound
inc
in
int3
cmovg
jmp
xchg
lahf
popf
sub
pop
inc
xchg
jmp
rol
xor
push
cli
jae
push
pop
xchg
fisubs
pop
cmp
inc
lret
loope
fidivrs
or
sub
std
sub
mov
xlat
mov
xor
cmp
cmp
test
outsb
ds
sub
adc
fisttpll
sbb
sub
pop
iret
js
js
mov
sub
mov
pop
pop
jp
inc
or
ja
mov
movsl
lret
out
add
pop
xor
out
pushl
es
mov
lock
push
mov
xor
stos
push
cmpsb
cmc
std
pop
scas
xchg
mov
xlat
add
out
xlat
mov
xchg
pop
push
jnp
movsl
or
rorb
mov
xchg
pop
cmp
xchg
int3
repnz
sti
in
adc
mov
call
pop
cli
stos
pop
ljmp
add
xchg
leave
stos
daa
and
fs
mov
pop
cmp
enter
mov
enter
jo
xchg
lods
dec
cwtl
sub
sahf
push
pop
dec
shlb
jl
pop
frstor
mov
adc
repnz
push
dec
jecxz
adc
mov
std
movsb
in
andb
and
push
dec
dec
lock
adc
int3
sub
mov
call
fisttps
fisttps
imul
jg
mov
adc
leave
fadds
mov
dec
jnp
cmpsl
cmp
mov
jnp
push
sbb
jecxz
rol
and
mov
insb
clc
nop
push
mov
xchg
jno
stos
inc
inc
cs
jmp
mov
lds
in
inc
insb
sahf
xor
sbb
repnz
inc
jge
mov
pop
roll
insl
daa
pop
add
mov
stos
testl
dec
jae
dec
into
sub
dec
fldl
cmpsl
clc
dec
test
add
pop
shll
mov
call
aad
repz
and
cli
enter
jae
mov
xor
rorl
xor
out
adc
mov
pop
mov
out
dec
adc
dec
push
cmp
aad
sub
push
imulb
cltd
and
lods
icebp
sbb
add
enter
into
xor
das
xchg
icebp
add
jg
xchg
in
cmp
or
outsl
sub
ds
loope
add
dec
jbe
push
mov
sti
pop
shlb
mov
add
sub
fcmove
cmp
xlat
cmp
mov
orb
loope
ret
mov
pop
nop
hlt
in
cmpsl
mov
lret
push
xchg
fstpl
xchg
mov
lock
mov
mov
mov
xor
jge
dec
loop
addr16
insl
and
mov
out
fidivrs
sbbl
shr
movsb
sahf
leave
test
in
mov
test
inc
add
rcrl
jp
das
scas
sbb
jecxz
cmpsb
dec
jecxz
sub
lret
mov
cmp
jle
loope
xor
mov
cld
imul
mov
and
cwtl
and
lahf
mov
lods
jb
shlb
or
jmp
gs
add
mov
mov
xor
adc
cmpsl
loop
ljmp
xor
sbb
jns
sub
pusha
dec
std
nop
fnstcw
test
mov
and
subb
in
push
dec
xchg
ret
shlb
inc
cmpl
cmpps
jne
sbb
mov
push
jne
scas
sti
fwait
rolb
out
adc
push
mov
adc
mov
sbb
push
dec
aaa
adc
or
fsubrl
push
scas
pop
lret
in
rcrl
imul
push
push
mov
or
ret
movsl
cs
aas
mov
add
inc
inc
scas
cwtl
add
test
cmpsl
add
lret
inc
pop
adc
std
fidivs
aas
imul
mov
mov
enter
ja
xchg
jmp
dec
cmpsb
lods
sub
rcrb
xlat
jne
sub
sbb
dec
loope
je
fwait
movsl
inc
imull
xor
inc
int3
xor
cmp
sbb
outsb
negl
or
fildll
mov
pop
pop
outsl
std
pop
jns
xchg
mov
jae
inc
mov
repnz
cwtl
ljmp
mov
or
adc
pop
fldcw
lock
pop
mov
adc
packuswb
push
adc
push
fiadds
insl
inc
pushf
pop
aam
pushf
je
or
pop
fisubrl
xor
movsb
mov
push
cld
mov
and
xchg
js
mov
adc
cmpsb
xchg
call
xchg
push
xchg
mov
in
fisttpll
mov
loope
xchg
pusha
aaa
fpatan
jle
pop
add
out
hlt
sbb
call
cmp
xor
push
cmp
xor
ficomps
and
jp
jmp
mov
popa
mov
dec
cmpl
xchg
loopne
test
add
ds
hlt
mov
mov
repz
andb
jg
cltd
pop
or
dec
mov
mov
dec
lock
sahf
loope
fildll
jbe
or
popa
cmp
shrl
inc
imul
mov
xor
fiaddl
sub
shll
fists
roll
xor
test
call
leave
mov
mov
stos
sbb
test
les
fdecstp
jecxz
mov
outsb
addr16
jg
and
iret
adc
out
inc
inc
jmp
fdivrl
out
pop
add
mov
mov
push
pop
aad
mov
adc
jle
push
lret
xchg
insb
push
adc
mov
jg
mov
hlt
mov
scas
lds
push
jbe
sbb
push
mov
and
into
jge
dec
addb
push
sbb
jne
add
aad
pop
dec
adc
mov
push
cs
cmp
xlat
jo
js
sub
push
xor
mov
jno
cmp
pop
sub
sbb
adc
scas
push
loope
insb
sbb
jno
and
pop
aas
sbb
clc
out
pop
enter
inc
ret
mov
xor
int
sbbb
jecxz
shll
icebp
xchg
sbbl
add
sahf
into
dec
data16
push
sahf
sub
int
nop
xor
mov
and
inc
pop
aad
daa
lcall
mov
push
testl
mov
test
loope
push
cwtl
xchg
sub
insl
pop
ds
repnz
arpl
sub
stos
pushf
repnz
sbb
xor
imul
or
jno
outsl
jge
jbe
and
mov
sub
dec
inc
scas
aam
test
subb
jge
add
cmpsl
bound
shl
mov
mov
and
mov
ja
add
sub
shr
les
and
das
call
cvtps2pd
mov
push
in
mov
imulb
stos
loope
cli
addl
daa
leave
mov
idivl
imul
cmpsl
in
ret
lods
out
daa
shrl
pop
test
mov
dec
mov
or
xor
fs
imul
mov
xchg
mov
jo
ljmp
mov
jecxz
xchg
mov
bound
sub
jns
adc
adc
ds
fsubrp
inc
cwtl
xlat
xlat
adc
cmp
gs
scas
jg
xor
mov
sub
pushf
pop
mov
out
inc
or
pop
xchg
sarl
inc
lds
faddl
adc
push
push
stos
push
fisttpll
cli
push
ja
fists
data16
push
in
aaa
rcrl
xor
push
mov
dec
aad
mov
rorl
mov
push
dec
dec
adc
imul
cmc
mov
jecxz
mov
mov
mov
push
dec
cs
cmp
adc
push
push
xchg
or
xor
arpl
xchg
shrb
lret
call
xchg
jle
dec
dec
push
jns
sarb
mov
test
jmp
and
xchg
pop
sbb
pop
push
sub
rol
ja
pop
sbb
call
push
inc
fs
and
jne
aam
jae,pt
cmpl
jno
fdivrs
xor
xor
pop
movsl
mov
push
cli
mov
cmp
ds
xchg
loop
push
xor
sbb
shrl
movsl
mov
cmp
incb
repnz
mov
xchg
mov
add
hlt
sbbl
cmpsl
dec
aam
rorl
mov
jg
in
xor
mov
ja
mull
push
mov
dec
pop
into
jp
bnd
pop
push
out
in
jecxz
push
and
adc
cltd
cwtl
iret
inc
sub
insb
sbb
loope
cmp
push
lret
lock
mov
mov
cmp
daa
dec
in
pop
jb
js
cmpsl
notb
cmp
outsb
inc
loope
mov
and
add
xchg
jne
rcll
push
aas
test
push
jl
lret
lods
in
test
or
aad
lret
out
xor
mov
push
nop
repz
mov
cld
push
xchg
nop
out
mov
sub
fstpt
sbb
jmp
pop
mov
mov
xlat
pop
daa
popaw
mov
mov
mov
roll
mov
xchg
cmp
out
out
pop
or
aam
out
sbb
adc
test
xlat
dec
jns
nop
and
xor
cltd
and
jbe
xchg
push
jo
in
scas
dec
hlt
mov
movsl
cltd
dec
xchg
xor
ds
cltd
push
les
out
aaa
dec
ds
fsubrl
rep
das
fildl
cld
jb
scas
jnp
loope
movsb
adc
push
in
iret
adc
sbb
cmpsl
add
jae
lret
add
jbe
out
cmp
les
adc
aas
fimuls
pop
sub
aam
icebp
pop
mov
rcrl
enter
xor
sbb
pop
fstpl
js
jp
dec
std
in
out
sbb
jns
bound
cmp
pushf
or
push
fisttpl
or
and
sbb
mov
les
sub
ficomps
mov
lods
add
addr16
push
pop
stc
jge
in
inc
call
jno
movsb
mov
inc
sbb
xchg
cmp
jnp
and
adc
pop
lds
mov
or
add
adc
inc
je
aad
fs
push
or
rcl
add
in
dec
dec
sbb
sbb
pop
jmp
xor
jno
mov
ss
jmp
or
add
jl
xchg
adc
and
cmpl
mov
hlt
sbbl
xchg
sbb
aad
jae
mov
and
in
sbb
xchg
out
xlat
pop
aaa
pushf
aad
ljmp
loope
dec
push
les
xchg
mov
sbb
dec
push
adc
mov
das
mov
aaa
dec
std
scas
inc
pop
bound
push
lds
cmp
jmp
es
jo
bound
jmp
xor
fdivrl
mov
sti
aam
addr16
iret
add
ffree
std
sbb
mov
cwtl
push
cld
ds
les
add
mov
and
lock
pusha
pop
repnz
addl
dec
dec
aam
push
aad
clc
pop
mov
nop
mov
pop
or
cmp
test
jmp
adcl
movsb
into
call
pop
fwait
es
std
int3
inc
in
testb
sbb
enter
in
icebp
int
add
ficoms
aam
leave
inc
je
push
loop
cmpsb
mov
mov
ds
pop
sahf
jnp
aaa
test
aaa
sub
pop
cltd
lcall
xchg
sub
cs
mov
pop
mov
and
inc
add
int
dec
pop
int
push
pop
into
insb
sbb
add
js
push
mov
repnz
xchg
cmp
iret
pop
mov
cmp
mov
sub
and
fwait
int3
jge
dec
push
out
adcb
sahf
fmul
stc
mov
xchg
pop
inc
shlb
cmp
pop
les
idiv
adc
daa
fs
xchg
xchg
insl
loop
sbb
addb
mov
cmp
mov
fsubl
arpl
fisttps
dec
cmp
shll
call
xlat
and
cmpsl
shlb
push
imul
sbb
arpl
loop
or
fucomip
jl
neg
add
fwait
roll
ja
rcrb
das
fcoms
xor
mov
lods
les
cmpsl
les
addl
adc
in
and
mov
push
in
pop
mov
outsb
xlat
mov
aas
rorb
mov
and
cmpsl
movsl
sub
lock
or
stos
aam
insb
fs
dec
cmp
add
bound
outsb
and
mov
dec
add
inc
test
loop
incb
mov
jmp
enter
aam
push
call
out
jae
sub
mov
mov
fildl
fbstp
sub
push
mov
movq
jbe
dec
test
stos
rorl
mov
jnp
mov
ret
hlt
sbb
jnp
testl
jmp
ja
shrl
mov
or
jecxz
xor
aam
shrb
addr16
pusha
enter
in
mov
movsb
xchg
aaa
cmc
cmp
cltd
push
push
inc
xlat
loope
jecxz
mov
mov
sbb
mov
int3
jne
mov
adc
aas
cmp
cli
repz
adc
leave
xchg
loope
pop
xchg
je
ja
sbb
xchg
cli
repz
sub
das
in
fisubs
loope
mov
sub
shlb
dec
sbb
xlat
pop
cmpsl
cmp
bound
cmp
inc
orl
fcmovb
push
xchg
mov
jne
jge
lcall
jb
add
sbb
push
and
rorb
rclb
es
ja
dec
stc
std
in
mov
xchg
mov
push
jmp
mov
inc
loope
in
pop
push
jmp
pop
jbe
int3
or
jb
cmc
incb
mov
les
jg
adc
inc
cmp
pop
mov
mov
mov
cwtl
popa
testl
mov
aaa
js
incl
sahf
sbb
pop
mov
int
push
fnstenv
cwtl
and
subl
rcr
popf
inc
jne
mov
iret
jae
mov
lahf
je
iret
push
sbb
out
arpl
jae
call
cs
inc
sub
outsl
lock
jns
ficomps
std
mov
mov
sbb
fsubrl
aad
or
xor
std
iret
out
fs
lea
pop
lods
in
in
push
or
inc
jne
push
sub
add
mov
push
mov
scas
pop
mov
and
push
fsubl
jns
push
push
cmp
mov
adc
mov
xchg
div
xchg
mov
push
sub
cmp
cmpb
or
aam
scas
mov
fs
subl
out
jmp
bound
mov
sahf
add
incl
bound
add
cmp
shrl
fwait
mov
add
aad
les
loope
hlt
mov
pop
mov
dec
aam
shl
push
mov
cmp
pop
cltd
pusha
cmpl
iret
test
and
and
repnz
pop
mov
pop
inc
pusha
cwtl
or
inc
xchg
inc
push
loope
push
and
push
sub
lret
or
out
mov
dec
push
dec
dec
pop
push
xchg
pop
into
pop
int
xor
sarb
std
push
nop
and
adc
testb
cmp
mov
scas
jne
lea
mov
jno
outsb
test
mov
mov
inc
inc
or
imul
rol
xchg
in
sbb
cmp
data16
fdivrs
push
std
mov
nop
jg
lock
loop
cmp
lahf
add
cmpsl
adc
scas
cld
jecxz
js
std
pop
inc
pop
cmp
push
fiadds
negb
sti
insl
lods
mov
ja
les
cmp
inc
shrl
iret
adc
pop
jecxz
jae
addl
movsl
cmpxchg
fistpl
lcall
pop
out
xchg
ja
push
test
adc
fisttpl
rcr
pusha
rcll
sti
ret
clc
xchg
cmp
fstpt
test
enter
adc
movsb
outsb
xor
mov
mov
xlat
xchg
imul
lea
divb
or
add
in
fiadds
cmp
int3
add
xor
or
clc
loop
jae
testb
fcmovnb
mov
out
ljmp
xor
bound
dec
adc
rcrl
aam
pop
test
jbe
fsubrs
sub
sbb
jmp
jb
mov
out
cmp
lcall
mov
push
clc
scas
xlat
fst
jecxz
aad
testl
stos
or
enter
in
pusha
mov
daa
bound
dec
sti
mov
lea
sub
cli
lods
clc
jae
sbb
push
xchg
sub
shrl
or
lahf
lret
flds
test
cmp
rcl
rolb
push
shl
mov
mov
clc
push
and
mov
pop
xchg
cmpsb
jecxz
and
out
sub
pushf
mov
fidivrl
inc
or
out
popf
test
ficoml
cwtl
cld
rorl
pop
inc
ja
rcrl
in
sahf
gs
jmp
movsb
aam
jmp
pop
jo
pop
or
adcl
adc
pushf
je
lret
cmp
pusha
fcoms
xorl
mov
mov
leave
inc
sub
pop
push
cmp
scas
jle
popa
cwtl
sarl
mov
outsl
dec
clc
mov
shlb
inc
mov
push
adc
xlat
orl
or
xlat
bound
cmp
mov
addr16
subl
imul
sbb
jmp
fsubs
mov
loope
or
xchg
or
lret
cli
ja
push
mov
fmull
mov
aas
addl
popa
mov
mov
aad
jne
adc
shll
cmpsb
sub
mov
stos
pop
mov
mov
call
xchg
in
pop
fstpt
mov
or
fdecstp
dec
push
fistl
or
sbb
lock
nop
scas
cli
insb
in
xchg
mov
popf
insb
xor
pushl
sbb
out
adc
scas
out
cli
popf
adc
pusha
push
sbb
scas
pop
hlt
aaa
test
cli
test
outsl
iret
ja
adc
adc
clc
repnz
addr16
pop
inc
mov
scas
push
lcall
sbb
add
push
lock
aam
xor
jle
fisubs
lea
test
adc
push
in
fdiv
mov
rclb
cwtl
out
stos
inc
pop
lahf
pusha
bound
daa
xchg
jns
sub
lcall
mov
popf
mov
jecxz
jb
imul
nop
lea
addr16
loopne
pop
lret
mov
dec
mov
loope
mov
xchg
fists
int
shlb
call
push
pop
push
subl
gs
jg
cld
dec
xchg
movsb
dec
adc
in
inc
inc
stos
jb
jl
sbb
sbb
jo
into
inc
or
lcall
sub
inc
jns
jmp
pop
test
scas
test
repz
fwait
adc
out
push
test
jb
pop
pop
jge
jg
enter
jge
and
in
rcrb
pop
push
out
inc
ds
movsb
jle
das
pusha
cwtl
mov
or
xchg
xor
xchg
mov
push
mov
out
inc
jns
fcomps
push
fsubl
adc
add
dec
mov
les
dec
notb
inc
lods
insb
test
inc
adc
adc
adc
cmp
sarl
jl
in
inc
dec
lods
pop
dec
nopl
loope
push
mov
and
sub
addr16
mov
add
outsb
mov
push
mov
cmovno
dec
std
bound
mov
out
and
push
outsl
arpl
stos
lahf
in
daa
cmp
xchg
lret
or
clc
nop
pop
mov
inc
sbb
cmpsl
movsb
and
test
add
xchg
jnp
push
jns
sarb
inc
fdivl
gs
mov
in
inc
stc
shlb
mov
loope
jp
andb
add
ficomps
sahf
loope
shrl
pop
clc
and
fs
arpl
jo
or
jbe
sbb
xlat
leave
xlat
sub
jmp
cmpsl
aad
out
xor
data16
jg
jbe
add
ficomps
clc
fwait
pop
or
or
rcrl
dec
mov
inc
mov
scas
mov
and
pushf
jl
cmp
pop
in
sti
popa
aaa
test
int
cmc
mov
cmp
adc
cld
mov
subl
sbbb
dec
and
rcll
ficomps
lods
or
jle
xor
js
dec
lcall
adc
gs
aaa
mov
push
adc
adc
dec
fsts
aas
pop
enter
decl
xchg
out
shrl
leave
xchg
adc
clc
out
mov
jl
and
or
pop
inc
mov
iret
jmp
dec
mov
loop
mov
jne
fisttpll
push
push
push
mov
or
cmp
pusha
xchg
adc
pop
cmpb
ret
and
pop
fisttpll
dec
mov
pop
insl
pushf
mov
push
testb
or
subl
enter
pushf
fildll
das
lret
push
mov
popf
clc
arpl
movsl
test
cwtl
xor
mov
loopne
or
xchg
in
enter
outsb
je
or
sahf
imul
jb
xor
pop
mov
mov
mov
mov
call
jecxz
sub
and
mov
push
mov
loope
dec
push
or
mov
dec
hlt
mov
jno
lcall
or
mov
adc
xor
jl
mov
inc
xchg
jecxz
dec
out
xchg
call
xor
cmp
mov
jecxz
rcr
jmp
gs
or
cmp
mov
push
ret
lods
pop
cltd
bnd
and
int
cmp
jbe
rol
lret
out
ss
sti
mov
xor
adc
int
loopne
add
movsb
fisubrl
outsl
pusha
add
inc
pop
mov
push
ljmp
add
pop
pop
lcall
jae
bound
inc
cmp
repz
leave
inc
xor
push
jl
inc
push
mull
and
xor
mov
rorb
or
push
jmp
sbb
out
cmpsl
movsb
and
jp
and
xchg
fwait
xlat
adcb
aam
mov
push
cmp
pop
dec
in
ret
fisttps
aam
lock
sbb
in
arpl
sahf
push
gs
sub
adc
pop
jbe
inc
arpl
cmp
xchg
mov
and
sbb
lcall
cmp
lahf
mov
subl
out
or
imul
fwait
dec
jg
add
jns
or
sub
add
lods
insl
in
cs
push
push
push
add
pusha
repnz
out
iret
jbe
inc
jecxz
xchg
pop
movsb
imul
pushf
xchg
outsl
out
dec
jle
test
in
pop
fsts
inc
lods
leave
in
stc
inc
into
mov
imul
xchg
lcall
or
jo
test
xor
mov
pop
insl
push
dec
loope
loopne
jle
jl
movsb
in
cmp
mov
mov
imul
popl
loopne
in
cmpsb
cli
daa
or
rcrl
xor
dec
mov
ficoms
sarb
add
push
dec
cmpb
stos
sbb
cmp
inc
inc
push
mov
lods
clc
ret
aas
add
jnp
out
adc
jle
mov
pop
mov
mov
stc
pop
dec
push
dec
addr16
movsb
div
pop
iret
push
insl
xchg
or
xlat
dec
jbe
insl
jne
or
mov
cld
cmp
das
inc
mov
scas
mov
mov
out
push
or
cltd
ljmp
lahf
cmpsb
scas
xchg
pop
pop
mov
mov
dec
loope
mov
rolb
mov
std
mov
jg
sbb
adc
loope
xor
pusha
icebp
push
jnp
cltd
pop
outsl
es
in
dec
xor
cmpsl
in
fadd
jl
xchg
inc
in
add
dec
xchg
js
sbb
sahf
jb
fldt
dec
jno
cmp
pop
mov
insl
cmp
xchg
fadd
aad
xchg
pop
pop
dec
fisubrs
add
in
cmp
mov
xchg
xchg
adc
cs
aas
lret
inc
lock
andl
pop
xor
addr16
lock
add
sub
aam
test
jae
mov
cmpsb
aad
ret
dec
xor
stos
pop
sbb
or
arpl
ret
in
test
je
push
sub
xchg
jne
rorb
push
imul
jle
cli
dec
xchg
lea
cmp
mov
sub
jne
or
adc
fimuls
js
or
sbb
jnp
jecxz
inc
out
daa
fadds
enter
rorb
dec
inc
pop
es
cld
inc
out
out
stos
mov
xchg
shl
or
and
lea
loop
sub
push
fmull
push
lcall
dec
xchg
xorl
dec
and
push
inc
cmc
xchg
jno
cmpsb
popf
mov
in
call
js
pop
or
shll
adc
push
mov
or
ds
sbb
ss
push
or
jb
xchg
pop
lea
outsb
testb
or
lahf
ficoms
mov
hlt
add
ret
or
mov
or
dec
add
push
and
mov
jbe
movsb
mov
test
sbb
jg
sbb
sbb
add
repnz
shll
loop
jbe
cmp
dec
cwtl
push
mov
mov
cmp
popa
dec
xor
bound
pushf
adc
mov
or
in
mov
orl
and
ss
sub
addr16
lds
xchg
decb
aas
cmc
outsb
incl
stos
and
in
sbb
push
jge
sbb
mov
js
xor
xchg
push
jno
sub
gs
dec
jo
mov
lret
mov
xchg
aaa
dec
iret
frstor
xchg
push
mov
mov
xor
and
jb
pop
les
insb
outsl
je
mov
sahf
push
and
in
das
dec
les
mov
and
flds
nop
fs
xlat
xchg
aad
mov
xchg
add
addr16
aas
xlat
dec
sarb
iret
push
scas
ret
pusha
and
xlat
test
outsl
movsl
cmp
scas
aaa
popa
outsl
add
add
pusha
mov
dec
inc
cwtl
outsb
xchg
mov
lret
sbb
or
lret
pop
sbb
sub
fistpll
jl
cmpsb
xor
or
mov
push
mov
cmpsl
lret
stos
cmp
rcr
sahf
adc
mov
stos
in
stos
mov
or
fldcw
rcrb
jb
add
inc
lahf
add
jo
and
movsb
das
push
pop
or
inc
testb
std
mov
sbb
leave
sub
mov
sbb
bound
in
cld
rcll
in
xchg
add
mov
add
lahf
lret
jecxz
pop
pop
mov
insb
add
dec
push
rcrb
add
dec
add
xchg
rcr
fcmovnu
or
leave
adcl
std
js
sub
test
pop
daa
dec
adc
cmc
cld
mov
call
and
sbb
push
loope
jmp
xor
xchg
jl
jge
es
mov
int
dec
cmp
jp
je
or
aas
mov
inc
mov
flds
xchg
xor
enter
dec
add
sar
test
cld
dec
fmul
xorl
xchg
and
pop
je
cld
push
mov
xor
inc
add
fstpl
mov
out
mov
sbb
cmpl
aaa
xor
mov
xlat
pop
fists
int3
jecxz
dec
push
sbbb
mov
inc
ja
adc
popa
and
insb
mov
inc
pushf
xchg
mov
cmp
jnp
add
adcl
xor
hlt
mov
sbb
mov
cmp
dec
add
pop
rcl
inc
data16
in
cld
jns
loopne
pop
nop
push
or
enter
imul
adc
into
test
jb
ja
lahf
jg
test
popl
inc
or
fs
ljmp
xchg
jge
mov
loopne
addr16
mov
push
push
adc
pusha
push
push
movsb
imul
adc
pop
in
sbb
cmp
neg
cs
push
or
loope
jnp
pop
jo
pop
imul
add
imul
xor
gs
push
insl
iret
out
fistpll
and
popf
stos
and
es
mov
or
push
xchg
loop
inc
and
inc
add
imul
jns
loopne
mov
rorl
rcrl
jbe
roll
jp
cmp
shlb
jmp
push
mov
push
stc
xchg
cmp
and
inc
or
jbe
jl
out
adcl
inc
loopne
push
scas
int3
mov
xor
mov
mov
and
and
mov
mov
movsb
and
lods
out
stos
into
mov
shrb
jmp
mov
lret
mov
and
dec
push
jg
pushf
lcall
mov
pop
data16
fstl
mov
shrl
mov
jge
lods
inc
mov
push
jle
push
pop
jp
iret
imul
xor
lds
out
dec
std
add
adc
add
stos
data16
clc
jg
mov
sbb
pop
mov
xchg
adc
mov
std
in
mov
rcrl
leave
lods
js
xchg
imul
es
add
push
bound
jle
loope
aaa
xor
shll
dec
ds
push
lret
or
sbb
sub
fwait
mov
sbb
movsl
pop
mov
or
jmp
dec
push
and
adc
pop
pusha
add
test
clc
add
push
dec
ja
sub
push
rorb
cmpsb
xor
cli
pop
or
repz
mov
and
adc
inc
sbb
and
enter
mov
inc
push
pusha
pop
inc
ljmp
data16
fmul
mov
pushf
xchg
scas
int
inc
or
nop
pop
cs
fcoms
cltd
pop
or
lcall
mov
stos
xchg
mov
inc
bound
loopne
pop
in
adc
xchg
outsb
or
rorl
outsb
push
inc
pusha
aam
shrl
lret
movsb
testb
shll
mov
popa
mov
mov
xchg
push
es
mov
push
mov
out
cmp
pop
or
int
lea
mov
cmpsb
jnp
cld
enter
sti
push
and
xor
mov
mov
addl
jbe
lret
and
jp
adc
dec
mov
xchg
xor
pusha
jbe
test
shlb
push
lds
push
dec
aas
sub
mov
dec
stc
dec
notl
sbb
adc
jbe
or
or
mov
or
xchg
outsb
mov
and
mov
popf
sbb
add
xor
ret
and
addr16
lock
mov
rcrb
lret
outsb
inc
xchg
pop
popa
sahf
vmovdqu
pop
add
in
lds
pop
mov
scas
dec
sub
mov
jge
aaa
pop
test
sub
lcall
out
fcompl
popa
mov
pop
sub
arpl
inc
push
out
lahf
xor
fldl2e
push
add
out
mov
ss
data16
into
lret
jmp
test
add
fucom
aas
ds
testb
sbb
and
repz
aas
and
fisttps
std
out
inc
cld
dec
push
or
scas
mov
in
sbb
pop
lret
push
cmpsb
or
aaa
in
into
or
sbb
push
pusha
and
add
jb
es
out
xchg
pop
xchg
fisubrl
jmp
mov
out
or
jb
mov
push
xor
outsl
dec
xchg
inc
add
arpl
imull
fldcw
xor
lcall
adc
scas
icebp
or
xlat
xchg
icebp
jmp
repnz
decb
inc
sub
mov
jl
xchg
mov
out
inc
jmp
jae
pop
mov
jae
sub
repnz
adc
hlt
dec
push
hlt
scas
lret
ds
push
push
sbb
adc
iret
push
jp
pop
mov
enter
clc
icebp
xchg
sbb
fdiv
out
imulb
js
test
cmpsb
negl
mov
std
mov
movsb
aad
xor
add
cmpsb
test
adc
push
xor
mov
arpl
sbb
outsl
cwtl
lods
fldenv
dec
rcll
jp
ds
loopw
ficomps
cmp
and
cwtl
dec
pop
mov
dec
mov
sub
inc
sbbb
call
call
outsb
js
pop
subl
adc
fucomi
test
adc
push
fisubrs
jae
inc
stos
into
dec
jmp
jno
and
out
and
into
xor
xor
std
sbb
sbb
xchg
inc
call
xchg
je
cltd
pop
out
idivl
cmp
mov
jg
xchg
lock
je
mov
pop
cwtl
jb
pop
xor
fstpt
cmp
push
out
ret
pop
add
jp
dec
xor
adc
pop
cmp
ja
xchg
jnp
stc
sub
bound
xor
out
jge
stos
cmp
mov
inc
jae
lods
sub
dec
push
and
inc
leave
jge
mov
test
loope
clc
mov
pop
stos
sbb
push
mov
lods
lods
dec
xor
rcrl
test
lea
call
test
jp
sub
sub
mov
mov
and
jp
pop
mov
adc
and
or
lsl
mov
stos
sbb
mov
mov
out
aad
daa
sbb
jmp
xor
sbb
pop
mov
jle
rclb
push
pop
mov
test
jnp
fstpt
push
outsb
lods
push
inc
lret
repz
inc
xchg
in
mov
dec
mov
sub
das
arpl
ret
xchg
mov
pop
mov
sarb
add
mov
ror
mov
pop
jnp
mov
shll
lret
push
adc
movsl
stos
test
in
mov
movsl
jg
sbbl
mov
adc
pushl
sub
test
test
lock
enter
jl
cmpsl
sbb
xchg
rol
imul
mov
inc
sub
fists
adc
mov
andb
mov
or
ja
outsb
das
enter
and
inc
cmp
xchg
cli
sarl
int
loopne
fcomip
push
dec
dec
jo
mov
jp
jns
scas
in
xor
movsl
jbe
push
shrl
es
mov
xchg
lods
mov
mov
icebp
in
or
aad
xlat
mov
mov
ss
or
aas
jge
cltd
divb
fst
lcall
lret
jbe
pop
pop
mov
jl
orl
rorb
jbe
mov
test
outsb
jnp
mov
xchg
push
popf
das
fidivrl
cmp
or
jns
in
cld
jecxz
imul
fcoms
mov
and
enter
mov
les
mov
xor
xchg
adc
push
mov
mov
es
inc
sub
mov
mov
sti
and
mov
sbb
ror
xor
xchg
jne
mov
cltd
out
or
pop
loopne
xchg
mov
jle
and
rcrb
leave
xchg
pop
adc
or
push
fists
scas
xor
cmpsb
out
mov
mov
sarb
adc
push
out
stc
mov
mov
cmpsl
mov
dec
inc
pushf
stc
dec
inc
mov
and
cmp
push
ret
push
pop
pop
out
adc
aaa
cmp
inc
adc
push
or
andb
scas
movsl
jle
jecxz
addr16
scas
inc
insb
imul
mov
push
stc
dec
outsl
or
sub
stos
jp
cmpsb
test
cmp
dec
xor
cwtl
iret
in
fists
sub
push
push
cmc
pop
loop
rcr
std
repnz
xor
aad
cmpsl
sysenter
dec
call
dec
fucomp
fdivs
out
push
or
loope
loope
mov
cwtl
ljmp
aad
dec
lods
loop
mov
lahf
and
dec
dec
push
push
ljmp
jae
inc
push
nop
mov
ret
or
mov
aas
fstpl
mov
fcomip
ljmp
dec
lret
in
sbb
push
out
cmp
fnstcw
popl
pop
mov
jne
lret
fstpl
add
adc
fs
mov
cmpsb
les
cs
jecxz
mov
frstor
adc
aam
jl
push
cmpb
mov
add
adc
sub
or
jge
mov
add
push
push
pop
dec
dec
fisubl
add
mov
test
jl
xor
ret
mov
or
mulb
push
sub
dec
fdivr
xchg
insb
addb
dec
repz
inc
and
sbb
cltd
addr16
push
sub
clc
jne
cmp
jle
repz
daa
ficoml
mov
mov
outsb
adc
or
lods
js
out
jp
and
xchg
lret
xor
gs
ja
fs
jne
iret
iret
ljmp
or
sbb
sub
mov
sti
inc
popa
pop
fisubrs
cmp
imul
mulb
inc
or
repnz
es
pop
cld
cli
mov
rcll
or
xchg
stos
xchg
out
test
imul
insl
push
sub
mov
jmp
and
mov
data16
push
xor
bound
imul
pushf
movsb
dec
es
pop
std
test
adc
push
ficomps
and
sbb
mov
sub
add
movsl
cmc
inc
sub
xor
adc
sbb
scas
stc
cmp
or
push
ret
push
fwait
push
shll
mov
pop
int3
adc
enter
rorb
cmpsb
hlt
cmp
cli
mov
int3
bswap
xchg
mov
in
mov
jo
lods
bound
mov
adc
scas
leave
and
or
push
push
cltd
mov
hlt
add
out
dec
inc
add
adc
adc
jmp
call
fwait
inc
sar
cs
jl
lods
mov
int3
ja
rorb
adc
dec
jo
ja
lret
cmpsb
fdivl
pop
jne
andl
sbb
jge
ja
nop
or
add
xchg
mov
jnp
pushfw
sbb
mov
popf
cmp
mov
dec
xchg
mov
cmpsl
fucomp
xlat
sub
pop
jo
mov
mov
and
movl
fwait
xor
daa
add
or
popa
in
hlt
add
inc
mov
rol
in
lret
stos
lods
je
xlat
shll
xor
ss
ror
scas
test
xor
in
lahf
push
test
in
fcomp
dec
es
pushf
or
insl
js
add
or
adc
int
mov
scas
ds
xchg
inc
dec
add
ret
out
in
shll
ret
jl
xchg
fildl
popa
inc
mov
ficoms
jl
lret
in
push
out
stos
push
lcall
lcall
cmp
test
pusha
std
jle
mov
cmp
mov
mov
dec
cmp
stos
inc
cmc
insl
lea
mov
sub
dec
cmpl
dec
fsubrl
test
daa
rorb
dec
loop
inc
push
filds
aas
loop
outsl
push
stos
jno
mov
movsl
movl
sbb
nop
addr16
cltd
clc
ja
pop
in
adc
popa
hlt
jg
les
xchg
clc
mov
fcom
inc
lds
mov
ret
adc
mov
xchg
pop
push
fnstsw
inc
fcomps
push
dec
xlat
data16
mov
ljmp
jge
dec
add
mov
pusha
repnz
lahf
loope
and
xor
nop
popf
in
adc
pop
pop
xchg
and
movsl
fidivrs
mov
fisttps
loopne
cwtl
push
push
sub
jp
sbb
rclb
pop
jo
and
loope
sbb
int
xor
cld
push
jg
cmp
dec
pop
jmp
inc
jo
jl
ret
jne
cli
adc
and
repz
test
fstpl
insl
adc
testl
push
push
aam
or
pop
ss
pushf
push
cltd
dec
lcall
pusha
xchg
mov
mov
imul
mov
out
call
push
sbb
pop
fdivrp
mov
pop
adc
aad
sahf
adc
dec
lret
nop
aad
push
jecxz
sti
xchg
sbb
sbb
int3
leave
int3
mov
mov
mov
test
fcoml
or
xlat
pop
jns
push
ljmp
adcb
xor
sbb
lods
dec
fwait
lret
sub
call
test
push
push
mov
cmp
movsl
mov
add
out
fucomip
inc
push
push
aas
sti
xor
call
scas
mov
mov
je
mov
and
sub
sub
inc
and
jnp
dec
data16
ljmp
cld
and
jecxz
jnp
mov
mov
enter
adc
cmp
add
mov
push
jb
xor
mov
mov
inc
pop
adc
out
mov
in
rclb
das
popa
mov
movntps
mov
jle
cli
lret
jmp
scas
mov
sbb
sbb
aaa
or
sub
in
movsl
mov
xchg
movsb
nop
dec
sbb
sub
jl
fld
addr16
mov
mov
pop
test
fdivl
jb
test
je
xchg
mov
sub
cmp
ja
or
fimuls
jl
mov
mov
push
push
lret
mov
mov
sti
and
add
jae
xor
das
push
push
outsb
pop
lock
cmp
icebp
pop
cltd
rcrb
mov
inc
pop
pop
add
flds
pop
pop
inc
sub
test
test
mov
fiadds
ss
aad
outsb
push
ds
sub
pop
push
sbb
jne
cwtl
dec
mov
nop
imul
test
faddl
xchg
xor
push
mov
mov
dec
sub
sbb
shr
cmp
pop
inc
jbe
jmp
mov
pop
fsts
ljmp
adc
neg
lds
mov
xchg
jecxz
dec
pop
mov
shll
xchg
dec
out
lods
ljmp
popf
cmp
fs
pop
jo
mov
dec
dec
icebp
mov
jne
hlt
pop
sbb
jge
loope
hlt
imul
xchg
jne
nop
and
xor
mov
jne
and
push
pop
mov
dec
loopnew
or
sub
nop
int
inc
cmp
xchg
push
mov
subb
fwait
inc
out
xchg
lods
or
addb
mov
xor
fbld
add
jmp
or
mov
add
or
inc
mov
xlat
mov
out
push
dec
cmpb
mov
nop
imul
xor
rorl
adc
movsb
push
stos
fildl
inc
mov
jg
fdiv
push
mov
outsl
and
jno
les
arpl
push
fnstcw
iret
cs
adc
aas
iret
mov
insl
or
mov
add
cltd
fucomip
divl
mov
aad
dec
arpl
ljmp
cli
push
test
dec
leave
lods
js
cmp
cmpsb
je
ret
je
pusha
das
iret
es
xchg
or
inc
aad
dec
mov
xchg
shl
mulb
jl
fsubl
dec
and
repnz
test
mov
stc
cmp
add
sar
sbb
or
pop
ds
adc
fistl
cli
push
movsb
pop
repz
mov
loopne
sbb
out
stos
jge
lret
cmp
xchg
dec
clc
lahf
dec
je
cmp
es
fs
sub
fwait
adc
adc
push
into
dec
lods
js
add
in
push
cmp
adc
loopne
int3
sub
push
inc
ficompl
jmp
pop
pop
sub
inc
push
test
xor
dec
sub
iret
pop
lock
adc
insl
dec
pushf
movsl
cmpsl
out
mov
repz
ret
xor
imul
adc
push
or
sub
ret
stc
fstpt
mov
adc
aam
push
dec
cli
jmp
push
jl
repz
inc
pop
scas
xor
push
add
mov
push
ret
int
add
cwtl
mov
jbe
mov
nop
mov
xor
jmp
cltd
cmpsb
or
or
sub
imul
jmp
cmc
mov
jb
sarl
push
iret
iret
rorl
lcall
add
scas
out
inc
lcall
sti
fstl
fidivs
fnstenv
call
call
xchg
sbb
adc
push
loope
cmc
jmp
addr16
sti
jnp
inc
sub
mov
mov
out
cmpb
shlb
inc
xlat
pop
sbb
sbb
inc
or
jp
fstpl
mov
mov
aad
mov
and
xor
sti
mul
fwait
jne
lret
xchg
idivl
stos
data16
cmc
cmp
out
jne
sbb
hlt
sub
ret
cmpb
iret
xor
cmpsl
rcll
jg
add
xor
testb
jo
mov
mov
push
into
mov
shlb
mov
mov
add
push
stos
push
aam
push
sbb
fsts
jne
movsb
push
icebp
addr16
dec
sti
pop
pop
mov
or
jecxz
cltd
fildl
mov
inc
jl
das
hlt
adc
add
mov
mov
lock
rcll
dec
in
idivb
pop
push
ror
repz
push
pop
adc
adc
pop
dec
pop
xor
shrb
xchg
push
sbb
outsl
push
sbb
xor
pop
int3
insl
clc
and
les
mov
lea
in
jl
repz
xchg
sbb
addr16
xchg
sti
sbb
mov
pushf
and
jle
pop
adc
stc
xchg
subl
xchg
int
cmc
sub
jecxz
es
sub
ror
mov
loop
or
addr16
scas
into
in
outsl
xchg
lods
out
loope
or
jp
enter
mov
aad
add
icebp
insl
inc
stc
je
imul
aas
xchg
lcall
cwtl
fbstp
ret
cmp
insb
arpl
add
and
jb
mov
mov
cmp
jle
aas
sbb
in
sar
push
inc
mov
dec
pop
sbb
dec
stc
in
push
data16
out
inc
xchg
sbb
push
cmp
fs
aam
sti
jo
cmc
adc
popa
outsl
aad
xchg
xchg
pop
pop
sbb
or
or
push
lods
fwait
push
dec
movsl
inc
mov
bound
stos
xor
shrl
out
popf
arpl
pushf
adcl
jo
pop
dec
inc
enter
sbb
sub
sub
mov
icebp
fisttps
jnp
jp
push
pop
test
mov
pop
insl
das
xor
loop
shrl
dec
nop
int3
jmp
es
cmp
cmp
aad
add
adc
fimuls
mov
fdivrs
xor
dec
mov
mov
jmp
sbb
xchg
inc
fistps
dec
pop
data16
pop
mov
xor
lahf
adc
vaddsubps
ds
or
fstl
cld
sbb
and
mov
sarl
stos
cmpsb
pop
inc
out
into
jns
xor
jne
test
imul
fdivrp
in
jge
decb
arpl
dec
jge
lahf
and
aas
pop
leave
and
sbb
mov
insb
ljmp
call
cs
cld
add
aam
loope
or
stos
xorb
out
and
push
ret
negl
fsubrl
pop
lods
and
xchg
cmpsb
sbb
sub
js
ret
inc
popl
stos
ret
sbb
or
fst
mov
out
pop
jp
xchg
cmp
fmull
push
mov
pop
push
mov
inc
cmp
inc
jecxz
insl
push
testl
test
or
add
test
and
inc
dec
test
andl
mov
or
xor
inc
inc
mov
lock
pop
add
adc
push
jb
xlat
subb
adc
fdiv
daa
fdivl
push
scas
out
push
std
nop
pop
or
mov
xor
cmpsb
sub
jb
or
pop
add
xchg
add
jmp
pop
mov
cmp
mov
in
or
decl
jmp
adc
and
inc
push
push
and
movsl
mov
clc
cmpsl
fisubl
add
das
loope
dec
cmp
es
pop
cmp
inc
pop
cs
pop
push
pop
cli
mov
and
mov
pop
mov
test
js
mov
fwait
lahf
adc
imull
jl
js
jo
loop
pushf
into
aam
xor
das
fdivl
fwait
jmp
aas
out
mov
enter
cmp
pop
jb
adc
stos
xor
into
sub
pop
mov
je
and
or
push
ljmp
mov
outsl
push
iret
in
dec
adc
dec
and
push
add
push
ror
in
pop
scas
rcrl
loop
push
cs
sub
jno
or
popa
pop
mov
je
push
mov
jge
mov
dec
in
in
fidivrs
jmp
cmp
mov
enter
out
testb
cmp
stos
mov
cmp
lret
push
movsl
xor
xor
pop
adc
sbb
pop
mov
pop
es
aas
jbe
aas
jmp
hlt
jl
pop
insb
cltd
xchg
addr16
push
mov
into
inc
jnp
fnstcw
mov
xchg
pop
mov
pop
mov
fs
lret
push
cmp
xor
cli
lods
and
and
in
sub
cmp
test
sbb
fcomi
sub
lock
fcoml
lcall
ret
cld
mov
test
mov
int
movsb
mov
pop
sub
xchg
push
push
testb
orl
stos
cltd
dec
xchg
cwtl
jns
jae
rdpmc
lret
cmp
in
incl
mov
inc
push
loope
andl
push
clc
mov
mov
inc
fsubrs
mov
cmp
test
push
dec
adc
lret
jns
jnp
test
sbb
jmp
inc
xchg
aad
fsubr
jp
outsb
mov
inc
cmpsb
mov
push
mov
inc
add
in
lds
popl
pop
or
test
adc
fildl
pop
mov
popf
jne
push
mov
push
icebp
dec
mov
sarl
out
mov
cltd
pop
addl
sbb
push
sahf
pop
cld
mov
push
mov
pop
inc
gs
pop
xchg
mov
loopne
mov
outsb
loopne
roll
add
mov
pop
lods
cmpsb
jmp
xor
in
inc
lahf
mov
sub
lcall
sub
push
xchg
pop
push
push
xor
mov
out
mov
mov
movsl
pop
popf
es
js
test
mov
mov
daa
pop
cmp
inc
cmp
les
sbbb
jnp
movsb
vpmovusdw
xchg
les
mov
mov
and
lods
out
ljmp
push
jge
inc
pop
fs
xchg
imul
andb
out
mov
mov
xchg
ficoms
je
xor
push
clc
push
pop
adc
scas
into
push
xor
out
mov
dec
out
sub
jecxz
sbb
mov
bound
mov
sub
adc
mov
enter
pop
xchg
and
mov
ja
jbe
pop
scas
xchg
clc
jle
xchg
lret
or
mov
out
pop
pop
das
lea
inc
and
pop
jle
leave
sub
shll
or
aad
or
bound
frstor
mov
jo
fs
cmp
adc
dec
xchg
xor
xchg
mov
sbb
jmp
std
add
sbb
add
ss
cwtl
sub
addr16
ret
pusha
xchg
cmp
pushf
sbb
xchg
enter
inc
dec
cltd
lock
shrl
lds
movsl
pop
jne
adc
jecxz
jbe
iret
adc
mov
adc
rol
cmc
sbb
loopne
dec
mov
into
outsb
loopne
jmp
and
dec
stc
mov
or
xor
jecxz
pop
jg,pn
cmp
jbe
out
ret
icebp
push
inc
icebp
xchg
xchg
hlt
cmp
mov
xchg
imul
add
out
stos
ljmp
scas
xor
aad
push
je
imul
push
pop
hlt
sub
add
cld
outsb
jae
rorb
lods
call
stc
insb
inc
ja
iret
inc
in
inc
push
js
pushf
scas
movsb
mov
adc
xchg
lds
call
or
add
and
jne
and
jle
fnstenv
icebp
add
sub
outsb
xchg
mov
pop
and
adc
xchg
mov
or
sbb
daa
inc
pushf
xor
push
dec
cmpb
adcl
mov
xor
lock
mov
lsl
mov
je
es
xchg
pop
insl
out
xor
dec
out
cltd
push
arpl
data16
inc
sbb
dec
out
mov
leave
mov
test
add
pop
fdivr
movb
push
xor
sbbb
bound
shrb
push
jmp
sbb
jae
xor
lds
add
shr
cli
loopne
jne
in
imul
stos
push
ret
rorl
fwait
sti
outsl
ja
mov
push
xor
cmp
dec
cmp
push
lea
arpl
or
inc
fcom
jmp
loopne
and
sub
sbb
adc
mov
movsl
idivl
test
pop
loop
lcall
mov
paddsb
in
or
sbbb
sub
cmp
pop
decb
mov
ja
jge
cli
mov
addr16
xorl
filds
mov
and
inc
mov
lret
ss
push
or
in
push
in
inc
ljmp
push
hlt
mov
repz
pusha
mov
add
pusha
cmp
xorb
dec
ja
pop
adc
bound
jno
fmul
push
pop
das
frstor
jmp
in
inc
shrl
sbb
adc
push
cmpsl
cmpsb
cmp
call
xor
enter
adc
push
pop
pop
cmp
mov
sub
xlat
pop
lret
push
in
test
dec
dec
or
ja
shlb
dec
mov
push
shlb
sbb
xor
aad
and
mov
and
pop
xchg
cmpl
dec
lods
outsb
cld
dec
js
sub
lods
loop
sub
inc
adc
outsl
daa
mov
xchg
push
xchg
sub
test
rcrb
out
scas
jo
jmp
cmpsb
pop
pop
ficompl
or
xchg
jmp
and
jmp
or
cmc
cmp
sahf
xchg
addr16
cmp
xchg
jne
and
and
iret
xchg
pop
pusha
sub
sub
mov
cmp
xor
mov
jmp
cs
loopne
pop
dec
fst
call
inc
dec
add
sub
lahf
inc
test
aaa
shl
rclb
sub
mov
sub
stos
sbb
insb
mov
and
in
dec
inc
inc
test
or
jns
add
das
icebp
push
inc
repz
andb
jl
cltd
mov
insb
mov
sbbl
mov
in
push
push
cmp
ffreep
jmp
mov
sbb
pop
cmpsb
out
sub
mov
add
cltd
push
push
cmp
cld
dec
push
popa
call
cmpsb
ret
out
dec
mov
push
fnsave
call
int3
popa
sbb
hlt
jl
int3
sbb
ljmp
loopne
rcl
mov
popa
pusha
movsl
out
adc
gs
add
mov
sbb
and
jge
xchg
clc
and
inc
mov
insb
dec
cltd
adc
xchg
mov
daa
mov
inc
repnz
xchg
lods
cmp
push
cmpsb
loop
outsl
mov
xchg
int3
test
incl
cltd
mov
arpl
fwait
jp
outsb
lods
pop
mov
ds
cs
cmp
mov
rcl
mov
fmuls
out
pop
mov
pop
pop
out
cmc
xorl
arpl
jle
call
loope
dec
fisubrs
stos
lcall
and
inc
js
mov
add
mov
scas
mov
test
je
test
jns
aam
shlb
sub
inc
push
leave
rcrl
